
raspbian-preinstalled/ipptool:     file format elf32-littlearm


Disassembly of section .init:

0000194c <.init>:
    194c:	push	{r3, lr}
    1950:	bl	3574 <ippGetInteger@plt+0x15a8>
    1954:	pop	{r3, pc}

Disassembly of section .plt:

00001958 <signal@plt-0x14>:
    1958:	push	{lr}		; (str lr, [sp, #-4]!)
    195c:	ldr	lr, [pc, #4]	; 1968 <signal@plt-0x4>
    1960:	add	lr, pc, lr
    1964:	ldr	pc, [lr, #8]!
    1968:	andeq	r1, r2, r8, lsr r4

0000196c <signal@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #135168	; 0x21000
    1974:	ldr	pc, [ip, #1080]!	; 0x438

00001978 <ippAddIntegers@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #135168	; 0x21000
    1980:	ldr	pc, [ip, #1072]!	; 0x430

00001984 <ippContainsString@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #135168	; 0x21000
    198c:	ldr	pc, [ip, #1064]!	; 0x428

00001990 <httpEncode64_2@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #135168	; 0x21000
    1998:	ldr	pc, [ip, #1056]!	; 0x420

0000199c <ippNextAttribute@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #135168	; 0x21000
    19a4:	ldr	pc, [ip, #1048]!	; 0x418

000019a8 <ippAddSeparator@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #135168	; 0x21000
    19b0:	ldr	pc, [ip, #1040]!	; 0x410

000019b4 <ippAddCollection@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #135168	; 0x21000
    19bc:	ldr	pc, [ip, #1032]!	; 0x408

000019c0 <ippEnumValue@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #135168	; 0x21000
    19c8:	ldr	pc, [ip, #1024]!	; 0x400

000019cc <ippGetString@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #135168	; 0x21000
    19d4:	ldr	pc, [ip, #1016]!	; 0x3f8

000019d8 <cupsArrayAdd@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #135168	; 0x21000
    19e0:	ldr	pc, [ip, #1008]!	; 0x3f0

000019e4 <httpSetTimeout@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #135168	; 0x21000
    19ec:	ldr	pc, [ip, #1000]!	; 0x3e8

000019f0 <_cupsSetLocale@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #135168	; 0x21000
    19f8:	ldr	pc, [ip, #992]!	; 0x3e0

000019fc <ippNew@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #135168	; 0x21000
    1a04:	ldr	pc, [ip, #984]!	; 0x3d8

00001a08 <_cups_strcasecmp@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #135168	; 0x21000
    1a10:	ldr	pc, [ip, #976]!	; 0x3d0

00001a14 <strtol@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #135168	; 0x21000
    1a1c:	ldr	pc, [ip, #968]!	; 0x3c8

00001a20 <cupsArrayNew@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #135168	; 0x21000
    1a28:	ldr	pc, [ip, #960]!	; 0x3c0

00001a2c <free@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #135168	; 0x21000
    1a34:	ldr	pc, [ip, #952]!	; 0x3b8

00001a38 <ippDelete@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #135168	; 0x21000
    1a40:	ldr	pc, [ip, #944]!	; 0x3b0

00001a44 <ippTagValue@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #135168	; 0x21000
    1a4c:	ldr	pc, [ip, #936]!	; 0x3a8

00001a50 <_cupsLangPrintf@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #135168	; 0x21000
    1a58:	ldr	pc, [ip, #928]!	; 0x3a0

00001a5c <cupsArrayClear@plt>:
    1a5c:	add	ip, pc, #0, 12
    1a60:	add	ip, ip, #135168	; 0x21000
    1a64:	ldr	pc, [ip, #920]!	; 0x398

00001a68 <httpGetField@plt>:
    1a68:	add	ip, pc, #0, 12
    1a6c:	add	ip, ip, #135168	; 0x21000
    1a70:	ldr	pc, [ip, #912]!	; 0x390

00001a74 <ippFirstAttribute@plt>:
    1a74:	add	ip, pc, #0, 12
    1a78:	add	ip, ip, #135168	; 0x21000
    1a7c:	ldr	pc, [ip, #904]!	; 0x388

00001a80 <strncmp@plt>:
    1a80:	add	ip, pc, #0, 12
    1a84:	add	ip, ip, #135168	; 0x21000
    1a88:	ldr	pc, [ip, #896]!	; 0x380

00001a8c <regcomp@plt>:
    1a8c:	add	ip, pc, #0, 12
    1a90:	add	ip, ip, #135168	; 0x21000
    1a94:	ldr	pc, [ip, #888]!	; 0x378

00001a98 <cupsWriteRequestData@plt>:
    1a98:	add	ip, pc, #0, 12
    1a9c:	add	ip, ip, #135168	; 0x21000
    1aa0:	ldr	pc, [ip, #880]!	; 0x370

00001aa4 <_cupsLangPuts@plt>:
    1aa4:	add	ip, pc, #0, 12
    1aa8:	add	ip, ip, #135168	; 0x21000
    1aac:	ldr	pc, [ip, #872]!	; 0x368

00001ab0 <ippGetName@plt>:
    1ab0:	add	ip, pc, #0, 12
    1ab4:	add	ip, ip, #135168	; 0x21000
    1ab8:	ldr	pc, [ip, #864]!	; 0x360

00001abc <cupsFileTell@plt>:
    1abc:	add	ip, pc, #0, 12
    1ac0:	add	ip, ip, #135168	; 0x21000
    1ac4:	ldr	pc, [ip, #856]!	; 0x358

00001ac8 <ippGetCount@plt>:
    1ac8:	add	ip, pc, #0, 12
    1acc:	add	ip, ip, #135168	; 0x21000
    1ad0:	ldr	pc, [ip, #848]!	; 0x350

00001ad4 <_cupsStrScand@plt>:
    1ad4:	add	ip, pc, #0, 12
    1ad8:	add	ip, ip, #135168	; 0x21000
    1adc:	ldr	pc, [ip, #840]!	; 0x348

00001ae0 <ippAddOctetString@plt>:
    1ae0:	add	ip, pc, #0, 12
    1ae4:	add	ip, ip, #135168	; 0x21000
    1ae8:	ldr	pc, [ip, #832]!	; 0x340

00001aec <exit@plt>:
    1aec:	add	ip, pc, #0, 12
    1af0:	add	ip, ip, #135168	; 0x21000
    1af4:	ldr	pc, [ip, #824]!	; 0x338

00001af8 <ippErrorString@plt>:
    1af8:	add	ip, pc, #0, 12
    1afc:	add	ip, ip, #135168	; 0x21000
    1b00:	ldr	pc, [ip, #816]!	; 0x330

00001b04 <strerror@plt>:
    1b04:	add	ip, pc, #0, 12
    1b08:	add	ip, ip, #135168	; 0x21000
    1b0c:	ldr	pc, [ip, #808]!	; 0x328

00001b10 <__vsnprintf_chk@plt>:
    1b10:	add	ip, pc, #0, 12
    1b14:	add	ip, ip, #135168	; 0x21000
    1b18:	ldr	pc, [ip, #800]!	; 0x320

00001b1c <regfree@plt>:
    1b1c:	add	ip, pc, #0, 12
    1b20:	add	ip, ip, #135168	; 0x21000
    1b24:	ldr	pc, [ip, #792]!	; 0x318

00001b28 <puts@plt>:
    1b28:	add	ip, pc, #0, 12
    1b2c:	add	ip, ip, #135168	; 0x21000
    1b30:	ldr	pc, [ip, #784]!	; 0x310

00001b34 <httpSeparateURI@plt>:
    1b34:	add	ip, pc, #0, 12
    1b38:	add	ip, ip, #135168	; 0x21000
    1b3c:	ldr	pc, [ip, #776]!	; 0x308

00001b40 <httpConnect2@plt>:
    1b40:	add	ip, pc, #0, 12
    1b44:	add	ip, ip, #135168	; 0x21000
    1b48:	ldr	pc, [ip, #768]!	; 0x300

00001b4c <ippLength@plt>:
    1b4c:	add	ip, pc, #0, 12
    1b50:	add	ip, ip, #135168	; 0x21000
    1b54:	ldr	pc, [ip, #760]!	; 0x2f8

00001b58 <regexec@plt>:
    1b58:	add	ip, pc, #0, 12
    1b5c:	add	ip, ip, #135168	; 0x21000
    1b60:	ldr	pc, [ip, #752]!	; 0x2f0

00001b64 <ippTagString@plt>:
    1b64:	add	ip, pc, #0, 12
    1b68:	add	ip, ip, #135168	; 0x21000
    1b6c:	ldr	pc, [ip, #744]!	; 0x2e8

00001b70 <cupsArrayCount@plt>:
    1b70:	add	ip, pc, #0, 12
    1b74:	add	ip, ip, #135168	; 0x21000
    1b78:	ldr	pc, [ip, #736]!	; 0x2e0

00001b7c <__fprintf_chk@plt>:
    1b7c:	add	ip, pc, #0, 12
    1b80:	add	ip, ip, #135168	; 0x21000
    1b84:	ldr	pc, [ip, #728]!	; 0x2d8

00001b88 <cupsArrayNext@plt>:
    1b88:	add	ip, pc, #0, 12
    1b8c:	add	ip, ip, #135168	; 0x21000
    1b90:	ldr	pc, [ip, #720]!	; 0x2d0

00001b94 <cupsArrayFind@plt>:
    1b94:	add	ip, pc, #0, 12
    1b98:	add	ip, ip, #135168	; 0x21000
    1b9c:	ldr	pc, [ip, #712]!	; 0x2c8

00001ba0 <ippFindNextAttribute@plt>:
    1ba0:	add	ip, pc, #0, 12
    1ba4:	add	ip, ip, #135168	; 0x21000
    1ba8:	ldr	pc, [ip, #704]!	; 0x2c0

00001bac <_cupsSetError@plt>:
    1bac:	add	ip, pc, #0, 12
    1bb0:	add	ip, ip, #135168	; 0x21000
    1bb4:	ldr	pc, [ip, #696]!	; 0x2b8

00001bb8 <memset@plt>:
    1bb8:	add	ip, pc, #0, 12
    1bbc:	add	ip, ip, #135168	; 0x21000
    1bc0:	ldr	pc, [ip, #688]!	; 0x2b0

00001bc4 <ippSetOperation@plt>:
    1bc4:	add	ip, pc, #0, 12
    1bc8:	add	ip, ip, #135168	; 0x21000
    1bcc:	ldr	pc, [ip, #680]!	; 0x2a8

00001bd0 <srandom@plt>:
    1bd0:	add	ip, pc, #0, 12
    1bd4:	add	ip, ip, #135168	; 0x21000
    1bd8:	ldr	pc, [ip, #672]!	; 0x2a0

00001bdc <httpSetField@plt>:
    1bdc:	add	ip, pc, #0, 12
    1be0:	add	ip, ip, #135168	; 0x21000
    1be4:	ldr	pc, [ip, #664]!	; 0x298

00001be8 <close@plt>:
    1be8:	add	ip, pc, #0, 12
    1bec:	add	ip, ip, #135168	; 0x21000
    1bf0:	ldr	pc, [ip, #656]!	; 0x290

00001bf4 <gmtime@plt>:
    1bf4:	add	ip, pc, #0, 12
    1bf8:	add	ip, ip, #135168	; 0x21000
    1bfc:	ldr	pc, [ip, #648]!	; 0x288

00001c00 <ippOpString@plt>:
    1c00:	add	ip, pc, #0, 12
    1c04:	add	ip, ip, #135168	; 0x21000
    1c08:	ldr	pc, [ip, #640]!	; 0x280

00001c0c <cupsSendRequest@plt>:
    1c0c:	add	ip, pc, #0, 12
    1c10:	add	ip, ip, #135168	; 0x21000
    1c14:	ldr	pc, [ip, #632]!	; 0x278

00001c18 <read@plt>:
    1c18:	add	ip, pc, #0, 12
    1c1c:	add	ip, ip, #135168	; 0x21000
    1c20:	ldr	pc, [ip, #624]!	; 0x270

00001c24 <localeconv@plt>:
    1c24:	add	ip, pc, #0, 12
    1c28:	add	ip, ip, #135168	; 0x21000
    1c2c:	ldr	pc, [ip, #616]!	; 0x268

00001c30 <ippAddString@plt>:
    1c30:	add	ip, pc, #0, 12
    1c34:	add	ip, ip, #135168	; 0x21000
    1c38:	ldr	pc, [ip, #608]!	; 0x260

00001c3c <abort@plt>:
    1c3c:	add	ip, pc, #0, 12
    1c40:	add	ip, ip, #135168	; 0x21000
    1c44:	ldr	pc, [ip, #600]!	; 0x258

00001c48 <regerror@plt>:
    1c48:	add	ip, pc, #0, 12
    1c4c:	add	ip, ip, #135168	; 0x21000
    1c50:	ldr	pc, [ip, #592]!	; 0x250

00001c54 <httpGetStatus@plt>:
    1c54:	add	ip, pc, #0, 12
    1c58:	add	ip, ip, #135168	; 0x21000
    1c5c:	ldr	pc, [ip, #584]!	; 0x248

00001c60 <ippGetBoolean@plt>:
    1c60:	add	ip, pc, #0, 12
    1c64:	add	ip, ip, #135168	; 0x21000
    1c68:	ldr	pc, [ip, #576]!	; 0x240

00001c6c <cupsFilePutChar@plt>:
    1c6c:	add	ip, pc, #0, 12
    1c70:	add	ip, ip, #135168	; 0x21000
    1c74:	ldr	pc, [ip, #568]!	; 0x238

00001c78 <ippContainsInteger@plt>:
    1c78:	add	ip, pc, #0, 12
    1c7c:	add	ip, ip, #135168	; 0x21000
    1c80:	ldr	pc, [ip, #560]!	; 0x230

00001c84 <cupsLastError@plt>:
    1c84:	add	ip, pc, #0, 12
    1c88:	add	ip, ip, #135168	; 0x21000
    1c8c:	ldr	pc, [ip, #552]!	; 0x228

00001c90 <ippSetVersion@plt>:
    1c90:	add	ip, pc, #0, 12
    1c94:	add	ip, ip, #135168	; 0x21000
    1c98:	ldr	pc, [ip, #544]!	; 0x220

00001c9c <open64@plt>:
    1c9c:	add	ip, pc, #0, 12
    1ca0:	add	ip, ip, #135168	; 0x21000
    1ca4:	ldr	pc, [ip, #536]!	; 0x218

00001ca8 <ippAttributeString@plt>:
    1ca8:	add	ip, pc, #0, 12
    1cac:	add	ip, ip, #135168	; 0x21000
    1cb0:	ldr	pc, [ip, #528]!	; 0x210

00001cb4 <cupsLastErrorString@plt>:
    1cb4:	add	ip, pc, #0, 12
    1cb8:	add	ip, ip, #135168	; 0x21000
    1cbc:	ldr	pc, [ip, #520]!	; 0x208

00001cc0 <httpAssembleURI@plt>:
    1cc0:	add	ip, pc, #0, 12
    1cc4:	add	ip, ip, #135168	; 0x21000
    1cc8:	ldr	pc, [ip, #512]!	; 0x200

00001ccc <ippGetResolution@plt>:
    1ccc:	add	ip, pc, #0, 12
    1cd0:	add	ip, ip, #135168	; 0x21000
    1cd4:	ldr	pc, [ip, #504]!	; 0x1f8

00001cd8 <ippFindAttribute@plt>:
    1cd8:	add	ip, pc, #0, 12
    1cdc:	add	ip, ip, #135168	; 0x21000
    1ce0:	ldr	pc, [ip, #496]!	; 0x1f0

00001ce4 <cupsUser@plt>:
    1ce4:	add	ip, pc, #0, 12
    1ce8:	add	ip, ip, #135168	; 0x21000
    1cec:	ldr	pc, [ip, #488]!	; 0x1e8

00001cf0 <tcsetattr@plt>:
    1cf0:	add	ip, pc, #0, 12
    1cf4:	add	ip, ip, #135168	; 0x21000
    1cf8:	ldr	pc, [ip, #480]!	; 0x1e0

00001cfc <cupsGetResponse@plt>:
    1cfc:	add	ip, pc, #0, 12
    1d00:	add	ip, ip, #135168	; 0x21000
    1d04:	ldr	pc, [ip, #472]!	; 0x1d8

00001d08 <cupsFileClose@plt>:
    1d08:	add	ip, pc, #0, 12
    1d0c:	add	ip, ip, #135168	; 0x21000
    1d10:	ldr	pc, [ip, #464]!	; 0x1d0

00001d14 <__stack_chk_fail@plt>:
    1d14:	add	ip, pc, #0, 12
    1d18:	add	ip, ip, #135168	; 0x21000
    1d1c:	ldr	pc, [ip, #456]!	; 0x1c8

00001d20 <httpGetDateTime@plt>:
    1d20:	add	ip, pc, #0, 12
    1d24:	add	ip, ip, #135168	; 0x21000
    1d28:	ldr	pc, [ip, #448]!	; 0x1c0

00001d2c <cupsFileOpen@plt>:
    1d2c:	add	ip, pc, #0, 12
    1d30:	add	ip, ip, #135168	; 0x21000
    1d34:	ldr	pc, [ip, #440]!	; 0x1b8

00001d38 <ippAddInteger@plt>:
    1d38:	add	ip, pc, #0, 12
    1d3c:	add	ip, ip, #135168	; 0x21000
    1d40:	ldr	pc, [ip, #432]!	; 0x1b0

00001d44 <_cups_strncasecmp@plt>:
    1d44:	add	ip, pc, #0, 12
    1d48:	add	ip, ip, #135168	; 0x21000
    1d4c:	ldr	pc, [ip, #424]!	; 0x1a8

00001d50 <access@plt>:
    1d50:	add	ip, pc, #0, 12
    1d54:	add	ip, ip, #135168	; 0x21000
    1d58:	ldr	pc, [ip, #416]!	; 0x1a0

00001d5c <ippDateToTime@plt>:
    1d5c:	add	ip, pc, #0, 12
    1d60:	add	ip, ip, #135168	; 0x21000
    1d64:	ldr	pc, [ip, #408]!	; 0x198

00001d68 <ippErrorValue@plt>:
    1d68:	add	ip, pc, #0, 12
    1d6c:	add	ip, ip, #135168	; 0x21000
    1d70:	ldr	pc, [ip, #400]!	; 0x190

00001d74 <_cups_strcpy@plt>:
    1d74:	add	ip, pc, #0, 12
    1d78:	add	ip, ip, #135168	; 0x21000
    1d7c:	ldr	pc, [ip, #392]!	; 0x188

00001d80 <raise@plt>:
    1d80:	add	ip, pc, #0, 12
    1d84:	add	ip, ip, #135168	; 0x21000
    1d88:	ldr	pc, [ip, #384]!	; 0x180

00001d8c <__ctype_b_loc@plt>:
    1d8c:	add	ip, pc, #0, 12
    1d90:	add	ip, ip, #135168	; 0x21000
    1d94:	ldr	pc, [ip, #376]!	; 0x178

00001d98 <httpSetDefaultField@plt>:
    1d98:	add	ip, pc, #0, 12
    1d9c:	add	ip, ip, #135168	; 0x21000
    1da0:	ldr	pc, [ip, #368]!	; 0x170

00001da4 <ippSetRequestId@plt>:
    1da4:	add	ip, pc, #0, 12
    1da8:	add	ip, ip, #135168	; 0x21000
    1dac:	ldr	pc, [ip, #360]!	; 0x168

00001db0 <ippAddResolution@plt>:
    1db0:	add	ip, pc, #0, 12
    1db4:	add	ip, ip, #135168	; 0x21000
    1db8:	ldr	pc, [ip, #352]!	; 0x160

00001dbc <ippSetCollection@plt>:
    1dbc:	add	ip, pc, #0, 12
    1dc0:	add	ip, ip, #135168	; 0x21000
    1dc4:	ldr	pc, [ip, #344]!	; 0x158

00001dc8 <cupsFilePrintf@plt>:
    1dc8:	add	ip, pc, #0, 12
    1dcc:	add	ip, ip, #135168	; 0x21000
    1dd0:	ldr	pc, [ip, #336]!	; 0x150

00001dd4 <cupsSetPasswordCB@plt>:
    1dd4:	add	ip, pc, #0, 12
    1dd8:	add	ip, ip, #135168	; 0x21000
    1ddc:	ldr	pc, [ip, #328]!	; 0x148

00001de0 <_cupsGlobals@plt>:
    1de0:	add	ip, pc, #0, 12
    1de4:	add	ip, ip, #135168	; 0x21000
    1de8:	ldr	pc, [ip, #320]!	; 0x140

00001dec <calloc@plt>:
    1dec:	add	ip, pc, #0, 12
    1df0:	add	ip, ip, #135168	; 0x21000
    1df4:	ldr	pc, [ip, #312]!	; 0x138

00001df8 <ippAddOutOfBand@plt>:
    1df8:	add	ip, pc, #0, 12
    1dfc:	add	ip, ip, #135168	; 0x21000
    1e00:	ldr	pc, [ip, #304]!	; 0x130

00001e04 <memcpy@plt>:
    1e04:	add	ip, pc, #0, 12
    1e08:	add	ip, ip, #135168	; 0x21000
    1e0c:	ldr	pc, [ip, #296]!	; 0x128

00001e10 <malloc@plt>:
    1e10:	add	ip, pc, #0, 12
    1e14:	add	ip, ip, #135168	; 0x21000
    1e18:	ldr	pc, [ip, #288]!	; 0x120

00001e1c <strlen@plt>:
    1e1c:	add	ip, pc, #0, 12
    1e20:	add	ip, ip, #135168	; 0x21000
    1e24:	ldr	pc, [ip, #280]!	; 0x118

00001e28 <__snprintf_chk@plt>:
    1e28:	add	ip, pc, #0, 12
    1e2c:	add	ip, ip, #135168	; 0x21000
    1e30:	ldr	pc, [ip, #272]!	; 0x110

00001e34 <cupsFileRead@plt>:
    1e34:	add	ip, pc, #0, 12
    1e38:	add	ip, ip, #135168	; 0x21000
    1e3c:	ldr	pc, [ip, #264]!	; 0x108

00001e40 <usleep@plt>:
    1e40:	add	ip, pc, #0, 12
    1e44:	add	ip, ip, #135168	; 0x21000
    1e48:	ldr	pc, [ip, #256]!	; 0x100

00001e4c <httpURIStatusString@plt>:
    1e4c:	add	ip, pc, #0, 12
    1e50:	add	ip, ip, #135168	; 0x21000
    1e54:	ldr	pc, [ip, #248]!	; 0xf8

00001e58 <ippAddRanges@plt>:
    1e58:	add	ip, pc, #0, 12
    1e5c:	add	ip, ip, #135168	; 0x21000
    1e60:	ldr	pc, [ip, #240]!	; 0xf0

00001e64 <_cups_strlcpy@plt>:
    1e64:	add	ip, pc, #0, 12
    1e68:	add	ip, ip, #135168	; 0x21000
    1e6c:	ldr	pc, [ip, #232]!	; 0xe8

00001e70 <cupsArrayDelete@plt>:
    1e70:	add	ip, pc, #0, 12
    1e74:	add	ip, ip, #135168	; 0x21000
    1e78:	ldr	pc, [ip, #224]!	; 0xe0

00001e7c <httpFlush@plt>:
    1e7c:	add	ip, pc, #0, 12
    1e80:	add	ip, ip, #135168	; 0x21000
    1e84:	ldr	pc, [ip, #216]!	; 0xd8

00001e88 <ippAddBoolean@plt>:
    1e88:	add	ip, pc, #0, 12
    1e8c:	add	ip, ip, #135168	; 0x21000
    1e90:	ldr	pc, [ip, #208]!	; 0xd0

00001e94 <cupsFileStdout@plt>:
    1e94:	add	ip, pc, #0, 12
    1e98:	add	ip, ip, #135168	; 0x21000
    1e9c:	ldr	pc, [ip, #200]!	; 0xc8

00001ea0 <random@plt>:
    1ea0:	add	ip, pc, #0, 12
    1ea4:	add	ip, ip, #135168	; 0x21000
    1ea8:	ldr	pc, [ip, #192]!	; 0xc0

00001eac <cupsFileGetChar@plt>:
    1eac:	add	ip, pc, #0, 12
    1eb0:	add	ip, ip, #135168	; 0x21000
    1eb4:	ldr	pc, [ip, #184]!	; 0xb8

00001eb8 <httpClose@plt>:
    1eb8:	add	ip, pc, #0, 12
    1ebc:	add	ip, ip, #135168	; 0x21000
    1ec0:	ldr	pc, [ip, #176]!	; 0xb0

00001ec4 <strcmp@plt>:
    1ec4:	add	ip, pc, #0, 12
    1ec8:	add	ip, ip, #135168	; 0x21000
    1ecc:	ldr	pc, [ip, #168]!	; 0xa8

00001ed0 <cupsSetUser@plt>:
    1ed0:	add	ip, pc, #0, 12
    1ed4:	add	ip, ip, #135168	; 0x21000
    1ed8:	ldr	pc, [ip, #160]!	; 0xa0

00001edc <time@plt>:
    1edc:	add	ip, pc, #0, 12
    1ee0:	add	ip, ip, #135168	; 0x21000
    1ee4:	ldr	pc, [ip, #152]!	; 0x98

00001ee8 <cupsFilePuts@plt>:
    1ee8:	add	ip, pc, #0, 12
    1eec:	add	ip, ip, #135168	; 0x21000
    1ef0:	ldr	pc, [ip, #144]!	; 0x90

00001ef4 <tcgetattr@plt>:
    1ef4:	add	ip, pc, #0, 12
    1ef8:	add	ip, ip, #135168	; 0x21000
    1efc:	ldr	pc, [ip, #136]!	; 0x88

00001f00 <__errno_location@plt>:
    1f00:	add	ip, pc, #0, 12
    1f04:	add	ip, ip, #135168	; 0x21000
    1f08:	ldr	pc, [ip, #128]!	; 0x80

00001f0c <sscanf@plt>:
    1f0c:	add	ip, pc, #0, 12
    1f10:	add	ip, ip, #135168	; 0x21000
    1f14:	ldr	pc, [ip, #120]!	; 0x78

00001f18 <ippOpValue@plt>:
    1f18:	add	ip, pc, #0, 12
    1f1c:	add	ip, ip, #135168	; 0x21000
    1f20:	ldr	pc, [ip, #112]!	; 0x70

00001f24 <ippGetStatusCode@plt>:
    1f24:	add	ip, pc, #0, 12
    1f28:	add	ip, ip, #135168	; 0x21000
    1f2c:	ldr	pc, [ip, #104]!	; 0x68

00001f30 <strrchr@plt>:
    1f30:	add	ip, pc, #0, 12
    1f34:	add	ip, ip, #135168	; 0x21000
    1f38:	ldr	pc, [ip, #96]!	; 0x60

00001f3c <cupsArrayFirst@plt>:
    1f3c:	add	ip, pc, #0, 12
    1f40:	add	ip, ip, #135168	; 0x21000
    1f44:	ldr	pc, [ip, #88]!	; 0x58

00001f48 <ippAddStrings@plt>:
    1f48:	add	ip, pc, #0, 12
    1f4c:	add	ip, ip, #135168	; 0x21000
    1f50:	ldr	pc, [ip, #80]!	; 0x50

00001f54 <getenv@plt>:
    1f54:	add	ip, pc, #0, 12
    1f58:	add	ip, ip, #135168	; 0x21000
    1f5c:	ldr	pc, [ip, #72]!	; 0x48

00001f60 <__libc_start_main@plt>:
    1f60:	add	ip, pc, #0, 12
    1f64:	add	ip, ip, #135168	; 0x21000
    1f68:	ldr	pc, [ip, #64]!	; 0x40

00001f6c <__gmon_start__@plt>:
    1f6c:	add	ip, pc, #0, 12
    1f70:	add	ip, ip, #135168	; 0x21000
    1f74:	ldr	pc, [ip, #56]!	; 0x38

00001f78 <ippGetValueTag@plt>:
    1f78:	add	ip, pc, #0, 12
    1f7c:	add	ip, ip, #135168	; 0x21000
    1f80:	ldr	pc, [ip, #48]!	; 0x30

00001f84 <cupsFileSeek@plt>:
    1f84:	add	ip, pc, #0, 12
    1f88:	add	ip, ip, #135168	; 0x21000
    1f8c:	ldr	pc, [ip, #40]!	; 0x28

00001f90 <strchr@plt>:
    1f90:	add	ip, pc, #0, 12
    1f94:	add	ip, ip, #135168	; 0x21000
    1f98:	ldr	pc, [ip, #32]!

00001f9c <__cxa_finalize@plt>:
    1f9c:	add	ip, pc, #0, 12
    1fa0:	add	ip, ip, #135168	; 0x21000
    1fa4:	ldr	pc, [ip, #24]!

00001fa8 <cupsArrayNew3@plt>:
    1fa8:	add	ip, pc, #0, 12
    1fac:	add	ip, ip, #135168	; 0x21000
    1fb0:	ldr	pc, [ip, #16]!

00001fb4 <strdup@plt>:
    1fb4:	add	ip, pc, #0, 12
    1fb8:	add	ip, ip, #135168	; 0x21000
    1fbc:	ldr	pc, [ip, #8]!

00001fc0 <httpReconnect2@plt>:
    1fc0:	add	ip, pc, #0, 12
    1fc4:	add	ip, ip, #135168	; 0x21000
    1fc8:	ldr	pc, [ip, #0]!

00001fcc <ippGetInteger@plt>:
    1fcc:	add	ip, pc, #0, 12
    1fd0:	add	ip, ip, #32, 20	; 0x20000
    1fd4:	ldr	pc, [ip, #4088]!	; 0xff8

Disassembly of section .text:

00001fd8 <.text>:
    1fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1fdc:	vpush	{d8}
    1fe0:	ldr	r7, [pc, #1136]	; 2458 <ippGetInteger@plt+0x48c>
    1fe4:	ldr	r3, [pc, #1136]	; 245c <ippGetInteger@plt+0x490>
    1fe8:	add	r7, pc, r7
    1fec:	sub	sp, sp, #5824	; 0x16c0
    1ff0:	sub	sp, sp, #4
    1ff4:	add	r2, sp, #5760	; 0x1680
    1ff8:	str	r7, [sp, #52]	; 0x34
    1ffc:	ldr	r3, [r7, r3]
    2000:	add	r2, r2, #60	; 0x3c
    2004:	str	r3, [sp, #84]	; 0x54
    2008:	ldr	r3, [r3]
    200c:	mov	sl, r1
    2010:	str	r3, [r2]
    2014:	mov	r8, r0
    2018:	bl	1e94 <cupsFileStdout@plt>
    201c:	ldr	r4, [pc, #1084]	; 2460 <ippGetInteger@plt+0x494>
    2020:	add	r6, sp, #88	; 0x58
    2024:	add	r4, pc, r4
    2028:	mov	r5, r0
    202c:	bl	1de0 <_cupsGlobals@plt>
    2030:	mov	r1, r4
    2034:	str	r0, [sp, #76]	; 0x4c
    2038:	mov	r0, #2
    203c:	bl	196c <signal@plt>
    2040:	mov	r1, r4
    2044:	mov	r0, #15
    2048:	bl	196c <signal@plt>
    204c:	mov	r0, sl
    2050:	str	sl, [sp, #32]
    2054:	bl	19f0 <_cupsSetLocale@plt>
    2058:	mov	r2, #1632	; 0x660
    205c:	mov	r1, #0
    2060:	mov	r0, r6
    2064:	bl	1bb8 <memset@plt>
    2068:	ldr	r0, [pc, #1012]	; 2464 <ippGetInteger@plt+0x498>
    206c:	mov	r1, #0
    2070:	add	r0, pc, r0
    2074:	bl	1a20 <cupsArrayNew@plt>
    2078:	add	sl, sp, #1728	; 0x6c0
    207c:	cmp	r8, #1
    2080:	str	r0, [sl, #-12]
    2084:	ble	3004 <ippGetInteger@plt+0x1038>
    2088:	ldr	r2, [pc, #984]	; 2468 <ippGetInteger@plt+0x49c>
    208c:	mov	r3, #0
    2090:	add	r2, pc, r2
    2094:	str	r2, [sp, #36]	; 0x24
    2098:	ldr	r2, [pc, #972]	; 246c <ippGetInteger@plt+0x4a0>
    209c:	add	r9, sp, #128	; 0x80
    20a0:	add	r2, pc, r2
    20a4:	str	r2, [sp, #40]	; 0x28
    20a8:	ldr	r2, [pc, #960]	; 2470 <ippGetInteger@plt+0x4a4>
    20ac:	str	r5, [sp, #56]	; 0x38
    20b0:	add	r2, pc, r2
    20b4:	ldr	r5, [sp, #32]
    20b8:	vldr	d8, [pc, #912]	; 2450 <ippGetInteger@plt+0x484>
    20bc:	str	r6, [sp, #32]
    20c0:	str	r3, [sp, #44]	; 0x2c
    20c4:	str	r2, [sp, #72]	; 0x48
    20c8:	str	r3, [sp, #60]	; 0x3c
    20cc:	mov	fp, #1
    20d0:	str	r3, [sp, #64]	; 0x40
    20d4:	str	r3, [sp, #80]	; 0x50
    20d8:	mov	r6, r9
    20dc:	b	20fc <ippGetInteger@plt+0x130>
    20e0:	ldr	r3, [pc, #908]	; 2474 <ippGetInteger@plt+0x4a8>
    20e4:	mov	r2, #1
    20e8:	add	r3, pc, r3
    20ec:	str	r2, [r3, #284]	; 0x11c
    20f0:	add	fp, fp, #1
    20f4:	cmp	r8, fp
    20f8:	ble	237c <ippGetInteger@plt+0x3b0>
    20fc:	ldr	r4, [r5, fp, lsl #2]
    2100:	ldr	r1, [sp, #36]	; 0x24
    2104:	mov	r0, r4
    2108:	bl	1ec4 <strcmp@plt>
    210c:	lsl	r7, fp, #2
    2110:	add	r9, r5, r7
    2114:	cmp	r0, #0
    2118:	beq	3004 <ippGetInteger@plt+0x1038>
    211c:	ldr	r1, [sp, #40]	; 0x28
    2120:	mov	r0, r4
    2124:	bl	1ec4 <strcmp@plt>
    2128:	cmp	r0, #0
    212c:	beq	20e0 <ippGetInteger@plt+0x114>
    2130:	ldr	r1, [pc, #832]	; 2478 <ippGetInteger@plt+0x4ac>
    2134:	mov	r0, r4
    2138:	add	r1, pc, r1
    213c:	bl	1ec4 <strcmp@plt>
    2140:	cmp	r0, #0
    2144:	beq	2eac <ippGetInteger@plt+0xee0>
    2148:	ldrb	r3, [r4]
    214c:	cmp	r3, #45	; 0x2d
    2150:	beq	265c <ippGetInteger@plt+0x690>
    2154:	ldr	r1, [pc, #800]	; 247c <ippGetInteger@plt+0x4b0>
    2158:	mov	r2, #6
    215c:	add	r1, pc, r1
    2160:	mov	r0, r4
    2164:	bl	1a80 <strncmp@plt>
    2168:	ldr	r3, [sl, #-1640]	; 0xfffff998
    216c:	cmp	r0, #0
    2170:	beq	2220 <ippGetInteger@plt+0x254>
    2174:	ldr	r1, [pc, #772]	; 2480 <ippGetInteger@plt+0x4b4>
    2178:	mov	r2, #7
    217c:	add	r1, pc, r1
    2180:	mov	r0, r4
    2184:	str	r3, [sp, #48]	; 0x30
    2188:	bl	1a80 <strncmp@plt>
    218c:	ldr	r3, [sp, #48]	; 0x30
    2190:	cmp	r0, #0
    2194:	beq	2220 <ippGetInteger@plt+0x254>
    2198:	ldr	r1, [pc, #740]	; 2484 <ippGetInteger@plt+0x4b8>
    219c:	mov	r2, #7
    21a0:	add	r1, pc, r1
    21a4:	mov	r0, r4
    21a8:	bl	1a80 <strncmp@plt>
    21ac:	ldr	r3, [sp, #48]	; 0x30
    21b0:	cmp	r0, #0
    21b4:	beq	2438 <ippGetInteger@plt+0x46c>
    21b8:	ldr	r1, [pc, #712]	; 2488 <ippGetInteger@plt+0x4bc>
    21bc:	mov	r2, #8
    21c0:	add	r1, pc, r1
    21c4:	mov	r0, r4
    21c8:	bl	1a80 <strncmp@plt>
    21cc:	ldr	r3, [sp, #48]	; 0x30
    21d0:	cmp	r0, #0
    21d4:	beq	2438 <ippGetInteger@plt+0x46c>
    21d8:	cmp	r3, #0
    21dc:	beq	3154 <ippGetInteger@plt+0x1188>
    21e0:	mov	r0, r4
    21e4:	mov	r1, #0
    21e8:	bl	1d50 <access@plt>
    21ec:	ldr	r4, [r5, r7]
    21f0:	cmp	r0, #0
    21f4:	bne	2da0 <ippGetInteger@plt+0xdd4>
    21f8:	str	r4, [sp, #64]	; 0x40
    21fc:	ldr	r2, [sp, #64]	; 0x40
    2200:	ldr	r1, [sp, #32]
    2204:	ldr	r0, [sp, #56]	; 0x38
    2208:	bl	87fc <ippGetInteger@plt+0x6830>
    220c:	ldr	r3, [sp, #60]	; 0x3c
    2210:	cmp	r0, #0
    2214:	moveq	r3, #1
    2218:	str	r3, [sp, #60]	; 0x3c
    221c:	b	20f0 <ippGetInteger@plt+0x124>
    2220:	cmp	r3, #0
    2224:	bne	3144 <ippGetInteger@plt+0x1178>
    2228:	ldr	r1, [pc, #604]	; 248c <ippGetInteger@plt+0x4c0>
    222c:	mov	r2, #7
    2230:	add	r1, pc, r1
    2234:	mov	r0, r4
    2238:	bl	1a80 <strncmp@plt>
    223c:	cmp	r0, #0
    2240:	beq	2440 <ippGetInteger@plt+0x474>
    2244:	ldr	r1, [pc, #580]	; 2490 <ippGetInteger@plt+0x4c4>
    2248:	mov	r2, #8
    224c:	add	r1, pc, r1
    2250:	mov	r0, r4
    2254:	bl	1a80 <strncmp@plt>
    2258:	cmp	r0, #0
    225c:	beq	2440 <ippGetInteger@plt+0x474>
    2260:	ldr	r3, [sp, #32]
    2264:	mov	r2, #256	; 0x100
    2268:	add	r3, r3, #1600	; 0x640
    226c:	add	r3, r3, #8
    2270:	mov	ip, #1024	; 0x400
    2274:	add	r1, r6, #544	; 0x220
    2278:	add	r0, r6, #288	; 0x120
    227c:	add	r7, r6, #32
    2280:	str	r3, [sp, #16]
    2284:	str	r1, [sp, #20]
    2288:	str	r2, [sp, #12]
    228c:	str	r2, [sp, #4]
    2290:	str	r0, [sp, #8]
    2294:	str	ip, [sp, #24]
    2298:	mov	r1, r4
    229c:	str	r7, [sp]
    22a0:	mov	r3, #64	; 0x40
    22a4:	str	r4, [sl, #-1640]	; 0xfffff998
    22a8:	sub	r2, r6, #32
    22ac:	mov	r0, #15
    22b0:	bl	1b34 <httpSeparateURI@plt>
    22b4:	subs	r4, r0, #0
    22b8:	bne	2f14 <ippGetInteger@plt+0xf48>
    22bc:	ldrb	r3, [sl, #-1568]	; 0xfffff9e0
    22c0:	cmp	r3, #0
    22c4:	beq	2330 <ippGetInteger@plt+0x364>
    22c8:	mov	r0, r7
    22cc:	mov	r1, #58	; 0x3a
    22d0:	bl	1f90 <strchr@plt>
    22d4:	cmp	r0, #0
    22d8:	beq	2cb0 <ippGetInteger@plt+0xce4>
    22dc:	ldr	r3, [pc, #432]	; 2494 <ippGetInteger@plt+0x4c8>
    22e0:	strb	r4, [r0]
    22e4:	add	r3, pc, r3
    22e8:	add	r0, r0, #1
    22ec:	str	r0, [r3, #12]
    22f0:	ldr	r3, [pc, #416]	; 2498 <ippGetInteger@plt+0x4cc>
    22f4:	ldr	r0, [pc, #416]	; 249c <ippGetInteger@plt+0x4d0>
    22f8:	add	r3, pc, r3
    22fc:	add	r4, r6, #32
    2300:	add	r0, pc, r0
    2304:	str	r4, [r3, #8]
    2308:	bl	1dd4 <cupsSetPasswordCB@plt>
    230c:	ldr	r3, [sp, #32]
    2310:	str	r4, [sp]
    2314:	add	r2, r3, #1616	; 0x650
    2318:	ldr	r3, [pc, #384]	; 24a0 <ippGetInteger@plt+0x4d4>
    231c:	add	r2, r2, #12
    2320:	add	r3, pc, r3
    2324:	sub	r1, r6, #36	; 0x24
    2328:	ldr	r0, [sp, #56]	; 0x38
    232c:	bl	6520 <ippGetInteger@plt+0x4554>
    2330:	ldr	r1, [sl, #-32]	; 0xffffffe0
    2334:	add	r4, sp, #4736	; 0x1280
    2338:	add	r0, r6, #544	; 0x220
    233c:	add	r2, r6, #288	; 0x120
    2340:	mov	r3, #0
    2344:	add	r4, r4, #60	; 0x3c
    2348:	str	r1, [sp, #8]
    234c:	str	r0, [sp, #12]
    2350:	str	r2, [sp, #4]
    2354:	str	r3, [sp]
    2358:	mov	r1, r4
    235c:	sub	r3, r6, #32
    2360:	mov	r2, #1024	; 0x400
    2364:	mov	r0, #15
    2368:	add	fp, fp, #1
    236c:	bl	1cc0 <httpAssembleURI@plt>
    2370:	cmp	r8, fp
    2374:	str	r4, [sl, #-1640]	; 0xfffff998
    2378:	bgt	20fc <ippGetInteger@plt+0x130>
    237c:	ldr	r2, [sl, #-1640]	; 0xfffff998
    2380:	ldr	r7, [sp, #64]	; 0x40
    2384:	cmp	r2, #0
    2388:	clz	r3, r7
    238c:	lsr	r3, r3, #5
    2390:	movne	r2, r3
    2394:	moveq	r2, #1
    2398:	cmp	r2, #0
    239c:	ldr	r5, [sp, #56]	; 0x38
    23a0:	ldr	r4, [sp, #80]	; 0x50
    23a4:	ldr	r6, [sp, #32]
    23a8:	bne	3004 <ippGetInteger@plt+0x1038>
    23ac:	ldr	r3, [pc, #240]	; 24a4 <ippGetInteger@plt+0x4d8>
    23b0:	add	r3, pc, r3
    23b4:	ldr	r3, [r3]
    23b8:	cmp	r3, #2
    23bc:	beq	2fb8 <ippGetInteger@plt+0xfec>
    23c0:	ldr	r8, [sp, #44]	; 0x2c
    23c4:	cmp	r4, #0
    23c8:	cmpgt	r8, #0
    23cc:	ble	2ef0 <ippGetInteger@plt+0xf24>
    23d0:	cmp	r8, #1
    23d4:	beq	2f48 <ippGetInteger@plt+0xf7c>
    23d8:	mov	r0, r4
    23dc:	bl	1e40 <usleep@plt>
    23e0:	sub	r8, r8, #1
    23e4:	mov	r2, r7
    23e8:	mov	r1, r6
    23ec:	mov	r0, r5
    23f0:	bl	87fc <ippGetInteger@plt+0x6830>
    23f4:	cmp	r8, #1
    23f8:	bne	23d8 <ippGetInteger@plt+0x40c>
    23fc:	ldr	r3, [pc, #164]	; 24a8 <ippGetInteger@plt+0x4dc>
    2400:	add	r3, pc, r3
    2404:	ldr	r3, [r3]
    2408:	cmp	r3, #1
    240c:	beq	2f50 <ippGetInteger@plt+0xf84>
    2410:	cmp	r5, #0
    2414:	sub	r3, r3, #2
    2418:	clz	r3, r3
    241c:	lsr	r3, r3, #5
    2420:	moveq	r3, #0
    2424:	cmp	r3, #0
    2428:	bne	2f50 <ippGetInteger@plt+0xf84>
    242c:	mov	r0, r5
    2430:	bl	1d08 <cupsFileClose@plt>
    2434:	b	2ec0 <ippGetInteger@plt+0xef4>
    2438:	cmp	r3, #0
    243c:	bne	3144 <ippGetInteger@plt+0x1178>
    2440:	mov	r3, #3
    2444:	str	r3, [sl, #-28]	; 0xffffffe4
    2448:	b	2260 <ippGetInteger@plt+0x294>
    244c:	nop			; (mov r0, r0)
    2450:	andeq	r0, r0, r0
    2454:	smlawbmi	lr, r0, r4, r8
    2458:			; <UNDEFINED> instruction: 0x00020db0
    245c:	andeq	r0, r0, r4, lsr r2
    2460:	andeq	r1, r0, r4, ror r6
    2464:	andeq	r1, r0, r8, lsl #17
    2468:	muleq	r1, r8, r3
    246c:	muleq	r1, r0, r3
    2470:	andeq	r0, r2, ip, asr pc
    2474:	andeq	r0, r2, r4, lsr #30
    2478:	andeq	r0, r1, r4, lsl r3
    247c:	andeq	lr, r0, r8, ror #11
    2480:	ldrdeq	lr, [r0], -r0
    2484:			; <UNDEFINED> instruction: 0x0000e5b4
    2488:	muleq	r0, ip, r5
    248c:	andeq	lr, r0, r4, lsr #10
    2490:	andeq	lr, r0, r0, lsl r5
    2494:	andeq	r0, r2, r8, lsr #26
    2498:	andeq	r0, r2, r4, lsl sp
    249c:	andeq	r1, r0, r4, lsl r8
    24a0:	andeq	r0, r1, r4, lsl #10
    24a4:	andeq	r0, r2, r0, asr ip
    24a8:	andeq	r0, r2, r0, lsl #24
    24ac:	andeq	r0, r2, r4, lsl #19
    24b0:	andeq	r0, r2, ip, lsl r8
    24b4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
    24b8:	andeq	pc, r0, ip, ror ip	; <UNPREDICTABLE>
    24bc:			; <UNDEFINED> instruction: 0x000207bc
    24c0:	andeq	r0, r2, r4, ror r7
    24c4:	andeq	pc, r0, ip, lsl #24
    24c8:	andeq	r0, r2, r8, asr r7
    24cc:	andeq	pc, r0, r8, lsl #25
    24d0:	andeq	sp, r0, r8, ror sp
    24d4:	strdeq	pc, [r0], -r8
    24d8:	strdeq	pc, [r0], -r4
    24dc:	ldrdeq	pc, [r0], -r0
    24e0:	muleq	r2, r4, r5
    24e4:	andeq	r0, r2, ip, lsl #11
    24e8:	andeq	r0, r2, r8, ror r5
    24ec:	andeq	r0, r2, r8, asr r5
    24f0:	andeq	lr, r0, r8, lsr r2
    24f4:	strdeq	r0, [r2], -r8
    24f8:	andeq	pc, r0, r4, lsr #18
    24fc:	andeq	r0, r2, r8, ror r4
    2500:	andeq	r0, r2, r4, asr r4
    2504:	andeq	pc, r0, r8, ror #17
    2508:	andeq	pc, r0, r8, asr #22
    250c:			; <UNDEFINED> instruction: 0x0000f9b0
    2510:	andeq	lr, r0, r4, lsl #2
    2514:	andeq	r0, r2, r0, asr #7
    2518:	andeq	pc, r0, r0, lsl #19
    251c:	andeq	pc, r0, ip, ror r9	; <UNPREDICTABLE>
    2520:	andeq	pc, r0, r8, asr r9	; <UNPREDICTABLE>
    2524:	andeq	pc, r0, r0, lsr #18
    2528:	andeq	r0, r2, r8, asr r3
    252c:	andeq	lr, r0, r8, asr r0
    2530:	andeq	r0, r2, r0, lsl r3
    2534:	andeq	lr, r0, r0, lsr r0
    2538:	andeq	lr, r0, ip, lsl r0
    253c:	andeq	r0, r2, ip, asr #5
    2540:	andeq	pc, r0, r4, asr #16
    2544:	andeq	sp, r0, r4, lsr #18
    2548:	strdeq	r0, [r2], -r4
    254c:	ldrdeq	pc, [r0], -r0
    2550:	andeq	pc, r0, r0, asr #15
    2554:			; <UNDEFINED> instruction: 0x0000f7b4
    2558:			; <UNDEFINED> instruction: 0x0000f7b0
    255c:	andeq	pc, r0, ip, lsl #15
    2560:	andeq	pc, r0, r4, lsr #14
    2564:	andeq	pc, r0, r0, lsr #11
    2568:	ldrdeq	pc, [r0], -r8
    256c:	strheq	r0, [r2], -r8
    2570:			; <UNDEFINED> instruction: 0x0000f8bc
    2574:	andeq	r0, r2, r0, asr r0
    2578:	andeq	pc, r0, ip, ror r4	; <UNPREDICTABLE>
    257c:	andeq	pc, r0, ip, lsl r5	; <UNPREDICTABLE>
    2580:	andeq	pc, r0, r0, lsl r6	; <UNPREDICTABLE>
    2584:	andeq	pc, r0, r8, lsl r6	; <UNPREDICTABLE>
    2588:	andeq	pc, r0, r8, ror #11
    258c:	andeq	pc, r0, r4, ror #10
    2590:	ldrdeq	pc, [r0], -r4
    2594:	andeq	pc, r0, r4, asr #11
    2598:	andeq	pc, r0, r8, lsl r5	; <UNPREDICTABLE>
    259c:			; <UNDEFINED> instruction: 0x0000f4b4
    25a0:	andeq	pc, r0, r0, lsl #11
    25a4:	andeq	pc, r0, r0, ror r5	; <UNPREDICTABLE>
    25a8:	andeq	pc, r0, ip, lsr #9
    25ac:	andeq	pc, r0, r0, asr r6	; <UNPREDICTABLE>
    25b0:	andeq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
    25b4:	muleq	r0, r8, r6
    25b8:	andeq	pc, r0, r8, asr #13
    25bc:	andeq	pc, r0, r8, lsl r6	; <UNPREDICTABLE>
    25c0:	andeq	pc, r0, ip, lsr #12
    25c4:	andeq	pc, r0, ip, lsr #5
    25c8:	andeq	pc, r0, ip, ror #6
    25cc:	ldrdeq	pc, [r0], -r8
    25d0:	andeq	pc, r0, ip, asr r2	; <UNPREDICTABLE>
    25d4:	andeq	pc, r0, r4, lsl #5
    25d8:	andeq	pc, r0, ip, lsr #4
    25dc:	andeq	pc, r0, r0, lsr r2	; <UNPREDICTABLE>
    25e0:	andeq	pc, r0, ip, lsl #4
    25e4:	andeq	pc, r0, ip, lsl #5
    25e8:	andeq	pc, r0, r8, ror #9
    25ec:	andeq	r0, r0, ip, lsr r2
    25f0:	strdeq	pc, [r0], -r4
    25f4:	strdeq	pc, [r0], -r8
    25f8:	andeq	pc, r0, r8, asr #7
    25fc:	strdeq	pc, [r0], -r4
    2600:			; <UNDEFINED> instruction: 0x0000f3b4
    2604:			; <UNDEFINED> instruction: 0x0000f3b8
    2608:	andeq	pc, r0, ip, lsl #7
    260c:	muleq	r0, r0, r2
    2610:	andeq	pc, r0, r4, ror r3	; <UNPREDICTABLE>
    2614:	andeq	pc, r0, r4, ror #6
    2618:	andeq	pc, r0, r4, asr r3	; <UNPREDICTABLE>
    261c:	andeq	pc, r0, r0, asr r3	; <UNPREDICTABLE>
    2620:	andeq	pc, r0, ip, lsr #6
    2624:	strdeq	pc, [r0], -ip
    2628:	andeq	pc, r0, ip, lsl #6
    262c:	strdeq	pc, [r0], -ip
    2630:			; <UNDEFINED> instruction: 0x0000f1b0
    2634:	ldrdeq	pc, [r0], -r4
    2638:	andeq	pc, r0, r4, asr #5
    263c:			; <UNDEFINED> instruction: 0x0000f2b4
    2640:	andeq	pc, r0, ip, asr #2
    2644:	andeq	pc, r0, ip, lsl #5
    2648:	andeq	pc, r0, ip, ror r2	; <UNPREDICTABLE>
    264c:	andeq	pc, r0, ip, ror #4
    2650:	andeq	pc, r0, r8, ror #1
    2654:	andeq	pc, r0, ip, asr #4
    2658:	strheq	pc, [r0], -r4	; <UNPREDICTABLE>
    265c:	ldrb	r2, [r4, #1]
    2660:	add	r4, r4, #1
    2664:	cmp	r2, #0
    2668:	beq	20f0 <ippGetInteger@plt+0x124>
    266c:	ldr	r3, [pc, #-456]	; 24ac <ippGetInteger@plt+0x4e0>
    2670:	str	r6, [sp, #48]	; 0x30
    2674:	ldr	r9, [sp, #80]	; 0x50
    2678:	ldr	r6, [sp, #56]	; 0x38
    267c:	add	r3, pc, r3
    2680:	str	r3, [sp, #68]	; 0x44
    2684:	sub	r3, r2, #52	; 0x34
    2688:	cmp	r3, #66	; 0x42
    268c:	addls	pc, pc, r3, lsl #2
    2690:	b	3190 <ippGetInteger@plt+0x11c4>
    2694:	b	2acc <ippGetInteger@plt+0xb00>
    2698:	b	3190 <ippGetInteger@plt+0x11c4>
    269c:	b	2ac0 <ippGetInteger@plt+0xaf4>
    26a0:	b	3190 <ippGetInteger@plt+0x11c4>
    26a4:	b	3190 <ippGetInteger@plt+0x11c4>
    26a8:	b	3190 <ippGetInteger@plt+0x11c4>
    26ac:	b	3190 <ippGetInteger@plt+0x11c4>
    26b0:	b	3190 <ippGetInteger@plt+0x11c4>
    26b4:	b	3190 <ippGetInteger@plt+0x11c4>
    26b8:	b	3190 <ippGetInteger@plt+0x11c4>
    26bc:	b	3190 <ippGetInteger@plt+0x11c4>
    26c0:	b	3190 <ippGetInteger@plt+0x11c4>
    26c4:	b	3190 <ippGetInteger@plt+0x11c4>
    26c8:	b	3190 <ippGetInteger@plt+0x11c4>
    26cc:	b	3190 <ippGetInteger@plt+0x11c4>
    26d0:	b	2aac <ippGetInteger@plt+0xae0>
    26d4:	b	3190 <ippGetInteger@plt+0x11c4>
    26d8:	b	2aa0 <ippGetInteger@plt+0xad4>
    26dc:	b	3190 <ippGetInteger@plt+0x11c4>
    26e0:	b	3190 <ippGetInteger@plt+0x11c4>
    26e4:	b	3190 <ippGetInteger@plt+0x11c4>
    26e8:	b	2a8c <ippGetInteger@plt+0xac0>
    26ec:	b	3190 <ippGetInteger@plt+0x11c4>
    26f0:	b	3190 <ippGetInteger@plt+0x11c4>
    26f4:	b	2a78 <ippGetInteger@plt+0xaac>
    26f8:	b	3190 <ippGetInteger@plt+0x11c4>
    26fc:	b	3190 <ippGetInteger@plt+0x11c4>
    2700:	b	3190 <ippGetInteger@plt+0x11c4>
    2704:	b	2b4c <ippGetInteger@plt+0xb80>
    2708:	b	3190 <ippGetInteger@plt+0x11c4>
    270c:	b	3190 <ippGetInteger@plt+0x11c4>
    2710:	b	2b40 <ippGetInteger@plt+0xb74>
    2714:	b	2b14 <ippGetInteger@plt+0xb48>
    2718:	b	3190 <ippGetInteger@plt+0x11c4>
    271c:	b	2ad8 <ippGetInteger@plt+0xb0c>
    2720:	b	3190 <ippGetInteger@plt+0x11c4>
    2724:	b	2ba4 <ippGetInteger@plt+0xbd8>
    2728:	b	3190 <ippGetInteger@plt+0x11c4>
    272c:	b	3190 <ippGetInteger@plt+0x11c4>
    2730:	b	3190 <ippGetInteger@plt+0x11c4>
    2734:	b	3190 <ippGetInteger@plt+0x11c4>
    2738:	b	3190 <ippGetInteger@plt+0x11c4>
    273c:	b	3190 <ippGetInteger@plt+0x11c4>
    2740:	b	3190 <ippGetInteger@plt+0x11c4>
    2744:	b	3190 <ippGetInteger@plt+0x11c4>
    2748:	b	3190 <ippGetInteger@plt+0x11c4>
    274c:	b	3190 <ippGetInteger@plt+0x11c4>
    2750:	b	2a64 <ippGetInteger@plt+0xa98>
    2754:	b	2a00 <ippGetInteger@plt+0xa34>
    2758:	b	3190 <ippGetInteger@plt+0x11c4>
    275c:	b	28c0 <ippGetInteger@plt+0x8f4>
    2760:	b	3190 <ippGetInteger@plt+0x11c4>
    2764:	b	28ac <ippGetInteger@plt+0x8e0>
    2768:	b	2850 <ippGetInteger@plt+0x884>
    276c:	b	3190 <ippGetInteger@plt+0x11c4>
    2770:	b	3190 <ippGetInteger@plt+0x11c4>
    2774:	b	283c <ippGetInteger@plt+0x870>
    2778:	b	3190 <ippGetInteger@plt+0x11c4>
    277c:	b	27f0 <ippGetInteger@plt+0x824>
    2780:	b	3190 <ippGetInteger@plt+0x11c4>
    2784:	b	3190 <ippGetInteger@plt+0x11c4>
    2788:	b	27dc <ippGetInteger@plt+0x810>
    278c:	b	3190 <ippGetInteger@plt+0x11c4>
    2790:	b	3190 <ippGetInteger@plt+0x11c4>
    2794:	b	27cc <ippGetInteger@plt+0x800>
    2798:	b	3190 <ippGetInteger@plt+0x11c4>
    279c:	b	27a0 <ippGetInteger@plt+0x7d4>
    27a0:	ldr	r2, [sp, #72]	; 0x48
    27a4:	ldr	r3, [r2, #292]	; 0x124
    27a8:	add	r3, r3, #1
    27ac:	str	r3, [r2, #292]	; 0x124
    27b0:	ldrb	r2, [r4, #1]!
    27b4:	cmp	r2, #0
    27b8:	bne	2684 <ippGetInteger@plt+0x6b8>
    27bc:	str	r6, [sp, #56]	; 0x38
    27c0:	str	r9, [sp, #80]	; 0x50
    27c4:	ldr	r6, [sp, #48]	; 0x30
    27c8:	b	20f0 <ippGetInteger@plt+0x124>
    27cc:	ldr	r2, [sp, #68]	; 0x44
    27d0:	mov	r3, #1
    27d4:	str	r3, [r2]
    27d8:	b	27b0 <ippGetInteger@plt+0x7e4>
    27dc:	ldr	r3, [pc, #-820]	; 24b0 <ippGetInteger@plt+0x4e4>
    27e0:	mov	r2, #0
    27e4:	add	r3, pc, r3
    27e8:	str	r2, [r3]
    27ec:	b	27b0 <ippGetInteger@plt+0x7e4>
    27f0:	add	fp, fp, #1
    27f4:	cmp	r8, fp
    27f8:	ble	3180 <ippGetInteger@plt+0x11b4>
    27fc:	mov	r2, #10
    2800:	mov	r1, #0
    2804:	ldr	r0, [r5, fp, lsl #2]
    2808:	bl	1a14 <strtol@plt>
    280c:	ldr	r3, [pc, #-864]	; 24b4 <ippGetInteger@plt+0x4e8>
    2810:	add	r3, pc, r3
    2814:	ldr	r3, [r3]
    2818:	cmp	r3, #2
    281c:	str	r0, [sp, #44]	; 0x2c
    2820:	bne	27b0 <ippGetInteger@plt+0x7e4>
    2824:	cmp	r0, #0
    2828:	beq	27b0 <ippGetInteger@plt+0x7e4>
    282c:	ldr	r1, [pc, #-892]	; 24b8 <ippGetInteger@plt+0x4ec>
    2830:	ldr	r3, [pc, #-588]	; 25ec <ippGetInteger@plt+0x620>
    2834:	add	r1, pc, r1
    2838:	b	30c4 <ippGetInteger@plt+0x10f8>
    283c:	ldr	r3, [pc, #-904]	; 24bc <ippGetInteger@plt+0x4f0>
    2840:	mov	r2, #3
    2844:	add	r3, pc, r3
    2848:	str	r2, [r3]
    284c:	b	27b0 <ippGetInteger@plt+0x7e4>
    2850:	add	fp, fp, #1
    2854:	cmp	r8, fp
    2858:	ble	3268 <ippGetInteger@plt+0x129c>
    285c:	ldr	r7, [r5, fp, lsl #2]
    2860:	bl	1c24 <localeconv@plt>
    2864:	mov	r1, #0
    2868:	mov	r2, r0
    286c:	mov	r0, r7
    2870:	bl	1ad4 <_cupsStrScand@plt>
    2874:	vmul.f64	d0, d0, d8
    2878:	vcvt.s32.f64	s15, d0
    287c:	vmov	r9, s15
    2880:	cmp	r9, #0
    2884:	ble	3124 <ippGetInteger@plt+0x1158>
    2888:	ldr	r3, [pc, #-976]	; 24c0 <ippGetInteger@plt+0x4f4>
    288c:	add	r3, pc, r3
    2890:	ldr	r3, [r3]
    2894:	cmp	r3, #2
    2898:	bne	27b0 <ippGetInteger@plt+0x7e4>
    289c:	ldr	r1, [pc, #-992]	; 24c4 <ippGetInteger@plt+0x4f8>
    28a0:	ldr	r3, [pc, #-700]	; 25ec <ippGetInteger@plt+0x620>
    28a4:	add	r1, pc, r1
    28a8:	b	30c4 <ippGetInteger@plt+0x10f8>
    28ac:	ldr	r3, [pc, #-1004]	; 24c8 <ippGetInteger@plt+0x4fc>
    28b0:	mov	r2, #1
    28b4:	add	r3, pc, r3
    28b8:	str	r2, [r3, #300]	; 0x12c
    28bc:	b	27b0 <ippGetInteger@plt+0x7e4>
    28c0:	add	fp, fp, #1
    28c4:	cmp	r8, fp
    28c8:	ble	30b8 <ippGetInteger@plt+0x10ec>
    28cc:	ldr	r0, [sl, #-1636]	; 0xfffff99c
    28d0:	cmp	r0, #0
    28d4:	beq	28e4 <ippGetInteger@plt+0x918>
    28d8:	bl	1a2c <free@plt>
    28dc:	mov	r3, #0
    28e0:	str	r3, [sl, #-1636]	; 0xfffff99c
    28e4:	mov	r1, #0
    28e8:	ldr	r0, [r5, fp, lsl #2]
    28ec:	bl	1d50 <access@plt>
    28f0:	lsl	r3, fp, #2
    28f4:	str	r3, [sp, #56]	; 0x38
    28f8:	cmp	r0, #0
    28fc:	beq	2bd0 <ippGetInteger@plt+0xc04>
    2900:	ldr	r2, [pc, #-1084]	; 24cc <ippGetInteger@plt+0x500>
    2904:	ldr	r1, [r5, fp, lsl #2]
    2908:	add	r7, sp, #2736	; 0xab0
    290c:	mov	r3, #1024	; 0x400
    2910:	add	r2, pc, r2
    2914:	add	r7, r7, #12
    2918:	str	r1, [sp, #4]
    291c:	str	r2, [sp]
    2920:	mov	r1, r3
    2924:	mov	r2, #1
    2928:	mov	r0, r7
    292c:	bl	1e28 <__snprintf_chk@plt>
    2930:	mov	r0, r7
    2934:	mov	r1, #0
    2938:	bl	1d50 <access@plt>
    293c:	cmp	r0, #0
    2940:	beq	299c <ippGetInteger@plt+0x9d0>
    2944:	ldrb	r3, [sp, #2748]	; 0xabc
    2948:	cmp	r3, #47	; 0x2f
    294c:	beq	299c <ippGetInteger@plt+0x9d0>
    2950:	lsl	r3, fp, #2
    2954:	ldr	r1, [sp, #76]	; 0x4c
    2958:	ldr	r3, [r5, r3]
    295c:	ldr	r2, [pc, #-1172]	; 24d0 <ippGetInteger@plt+0x504>
    2960:	str	r3, [sp, #8]
    2964:	ldr	r1, [r1]
    2968:	mov	r3, #1024	; 0x400
    296c:	add	r2, pc, r2
    2970:	str	r1, [sp, #4]
    2974:	str	r2, [sp]
    2978:	mov	r1, r3
    297c:	mov	r2, #1
    2980:	mov	r0, r7
    2984:	bl	1e28 <__snprintf_chk@plt>
    2988:	mov	r1, #0
    298c:	mov	r0, r7
    2990:	bl	1d50 <access@plt>
    2994:	cmp	r0, #0
    2998:	bne	2d40 <ippGetInteger@plt+0xd74>
    299c:	mov	r0, r7
    29a0:	bl	1fb4 <strdup@plt>
    29a4:	str	r0, [sl, #-1636]	; 0xfffff99c
    29a8:	mov	r1, #46	; 0x2e
    29ac:	bl	1f30 <strrchr@plt>
    29b0:	subs	r7, r0, #0
    29b4:	beq	2bec <ippGetInteger@plt+0xc20>
    29b8:	ldr	r1, [pc, #-1260]	; 24d4 <ippGetInteger@plt+0x508>
    29bc:	add	r1, pc, r1
    29c0:	bl	1a08 <_cups_strcasecmp@plt>
    29c4:	cmp	r0, #0
    29c8:	bne	2c4c <ippGetInteger@plt+0xc80>
    29cc:	ldr	r3, [pc, #-1276]	; 24d8 <ippGetInteger@plt+0x50c>
    29d0:	ldr	r2, [sp, #32]
    29d4:	add	r3, pc, r3
    29d8:	str	r3, [sp]
    29dc:	ldr	r1, [sp, #48]	; 0x30
    29e0:	ldr	r3, [pc, #-1292]	; 24dc <ippGetInteger@plt+0x510>
    29e4:	add	r2, r2, #1616	; 0x650
    29e8:	add	r2, r2, #12
    29ec:	add	r3, pc, r3
    29f0:	sub	r1, r1, #36	; 0x24
    29f4:	mov	r0, r6
    29f8:	bl	6520 <ippGetInteger@plt+0x4554>
    29fc:	b	27b0 <ippGetInteger@plt+0x7e4>
    2a00:	add	fp, fp, #1
    2a04:	cmp	r8, fp
    2a08:	ble	3134 <ippGetInteger@plt+0x1168>
    2a0c:	sub	r7, sl, #4
    2a10:	mov	r2, #1024	; 0x400
    2a14:	ldr	r1, [r5, fp, lsl #2]
    2a18:	mov	r0, r7
    2a1c:	bl	1e64 <_cups_strlcpy@plt>
    2a20:	mov	r0, r7
    2a24:	mov	r1, #61	; 0x3d
    2a28:	bl	1f90 <strchr@plt>
    2a2c:	cmp	r0, #0
    2a30:	beq	2cc0 <ippGetInteger@plt+0xcf4>
    2a34:	mov	r3, #0
    2a38:	strb	r3, [r0], #1
    2a3c:	ldr	r3, [sp, #32]
    2a40:	ldr	r1, [sp, #48]	; 0x30
    2a44:	add	r2, r3, #1616	; 0x650
    2a48:	str	r0, [sp]
    2a4c:	mov	r3, r7
    2a50:	add	r2, r2, #12
    2a54:	sub	r1, r1, #36	; 0x24
    2a58:	mov	r0, r6
    2a5c:	bl	6520 <ippGetInteger@plt+0x4554>
    2a60:	b	27b0 <ippGetInteger@plt+0x7e4>
    2a64:	ldr	r3, [pc, #-1420]	; 24e0 <ippGetInteger@plt+0x514>
    2a68:	mov	r2, #4
    2a6c:	add	r3, pc, r3
    2a70:	str	r2, [r3]
    2a74:	b	27b0 <ippGetInteger@plt+0x7e4>
    2a78:	ldr	r3, [pc, #-1436]	; 24e4 <ippGetInteger@plt+0x518>
    2a7c:	mov	r2, #2
    2a80:	add	r3, pc, r3
    2a84:	str	r2, [r3, #16]
    2a88:	b	27b0 <ippGetInteger@plt+0x7e4>
    2a8c:	ldr	r3, [pc, #-1452]	; 24e8 <ippGetInteger@plt+0x51c>
    2a90:	mov	r2, #1
    2a94:	add	r3, pc, r3
    2a98:	str	r2, [r3, #280]	; 0x118
    2a9c:	b	27b0 <ippGetInteger@plt+0x7e4>
    2aa0:	mov	r3, #2
    2aa4:	str	r3, [sl, #-28]	; 0xffffffe4
    2aa8:	b	27b0 <ippGetInteger@plt+0x7e4>
    2aac:	ldr	r3, [pc, #-1480]	; 24ec <ippGetInteger@plt+0x520>
    2ab0:	mov	r2, #1
    2ab4:	add	r3, pc, r3
    2ab8:	str	r2, [r3, #16]
    2abc:	b	27b0 <ippGetInteger@plt+0x7e4>
    2ac0:	mov	r3, #10
    2ac4:	str	r3, [sl, #-16]
    2ac8:	b	27b0 <ippGetInteger@plt+0x7e4>
    2acc:	mov	r3, #2
    2ad0:	str	r3, [sl, #-16]
    2ad4:	b	27b0 <ippGetInteger@plt+0x7e4>
    2ad8:	add	fp, fp, #1
    2adc:	cmp	r8, fp
    2ae0:	ble	2fe0 <ippGetInteger@plt+0x1014>
    2ae4:	ldr	r7, [r5, fp, lsl #2]
    2ae8:	ldr	r1, [pc, #-1536]	; 24f0 <ippGetInteger@plt+0x524>
    2aec:	mov	r0, r7
    2af0:	add	r1, pc, r1
    2af4:	bl	1ec4 <strcmp@plt>
    2af8:	cmp	r0, #0
    2afc:	bne	2c20 <ippGetInteger@plt+0xc54>
    2b00:	ldr	r3, [pc, #-1556]	; 24f4 <ippGetInteger@plt+0x528>
    2b04:	mov	r2, #10
    2b08:	add	r3, pc, r3
    2b0c:	str	r2, [r3, #4]
    2b10:	b	27b0 <ippGetInteger@plt+0x7e4>
    2b14:	add	fp, fp, #1
    2b18:	cmp	r8, fp
    2b1c:	ble	3250 <ippGetInteger@plt+0x1284>
    2b20:	ldr	r7, [r5, fp, lsl #2]
    2b24:	bl	1c24 <localeconv@plt>
    2b28:	mov	r1, #0
    2b2c:	mov	r2, r0
    2b30:	mov	r0, r7
    2b34:	bl	1ad4 <_cupsStrScand@plt>
    2b38:	vstr	d0, [sl, #-24]	; 0xffffffe8
    2b3c:	b	27b0 <ippGetInteger@plt+0x7e4>
    2b40:	mov	r3, #3
    2b44:	str	r3, [sl, #-28]	; 0xffffffe4
    2b48:	b	27b0 <ippGetInteger@plt+0x7e4>
    2b4c:	add	fp, fp, #1
    2b50:	cmp	r8, fp
    2b54:	ble	3228 <ippGetInteger@plt+0x125c>
    2b58:	bl	1e94 <cupsFileStdout@plt>
    2b5c:	cmp	r6, r0
    2b60:	bne	3004 <ippGetInteger@plt+0x1038>
    2b64:	ldr	r1, [pc, #-1652]	; 24f8 <ippGetInteger@plt+0x52c>
    2b68:	ldr	r0, [r5, fp, lsl #2]
    2b6c:	add	r1, pc, r1
    2b70:	bl	1d2c <cupsFileOpen@plt>
    2b74:	add	r3, r5, fp, lsl #2
    2b78:	subs	r6, r0, #0
    2b7c:	beq	31e0 <ippGetInteger@plt+0x1214>
    2b80:	ldr	r3, [pc, #-1676]	; 24fc <ippGetInteger@plt+0x530>
    2b84:	ldr	r2, [sp, #44]	; 0x2c
    2b88:	add	r3, pc, r3
    2b8c:	orrs	r9, r9, r2
    2b90:	mov	r2, #2
    2b94:	str	r2, [r3]
    2b98:	bne	31d0 <ippGetInteger@plt+0x1204>
    2b9c:	str	r9, [sp, #44]	; 0x2c
    2ba0:	b	27b0 <ippGetInteger@plt+0x7e4>
    2ba4:	ldr	r3, [pc, #-1708]	; 2500 <ippGetInteger@plt+0x534>
    2ba8:	ldr	r2, [sp, #44]	; 0x2c
    2bac:	add	r3, pc, r3
    2bb0:	orrs	r9, r9, r2
    2bb4:	mov	r2, #2
    2bb8:	str	r2, [r3]
    2bbc:	beq	2b9c <ippGetInteger@plt+0xbd0>
    2bc0:	ldr	r1, [pc, #-1732]	; 2504 <ippGetInteger@plt+0x538>
    2bc4:	ldr	r3, [pc, #-1504]	; 25ec <ippGetInteger@plt+0x620>
    2bc8:	add	r1, pc, r1
    2bcc:	b	30c4 <ippGetInteger@plt+0x10f8>
    2bd0:	ldr	r0, [r5, fp, lsl #2]
    2bd4:	bl	1fb4 <strdup@plt>
    2bd8:	mov	r1, #46	; 0x2e
    2bdc:	str	r0, [sl, #-1636]	; 0xfffff99c
    2be0:	bl	1f30 <strrchr@plt>
    2be4:	subs	r7, r0, #0
    2be8:	bne	29b8 <ippGetInteger@plt+0x9ec>
    2bec:	ldr	r3, [pc, #-1772]	; 2508 <ippGetInteger@plt+0x53c>
    2bf0:	ldr	r2, [sp, #32]
    2bf4:	add	r3, pc, r3
    2bf8:	str	r3, [sp]
    2bfc:	ldr	r1, [sp, #48]	; 0x30
    2c00:	ldr	r3, [pc, #-1788]	; 250c <ippGetInteger@plt+0x540>
    2c04:	add	r2, r2, #1616	; 0x650
    2c08:	add	r2, r2, #12
    2c0c:	add	r3, pc, r3
    2c10:	sub	r1, r1, #36	; 0x24
    2c14:	mov	r0, r6
    2c18:	bl	6520 <ippGetInteger@plt+0x4554>
    2c1c:	b	27b0 <ippGetInteger@plt+0x7e4>
    2c20:	ldr	r1, [pc, #-1816]	; 2510 <ippGetInteger@plt+0x544>
    2c24:	mov	r0, r7
    2c28:	add	r1, pc, r1
    2c2c:	bl	1ec4 <strcmp@plt>
    2c30:	cmp	r0, #0
    2c34:	bne	2cd0 <ippGetInteger@plt+0xd04>
    2c38:	ldr	r3, [pc, #-1836]	; 2514 <ippGetInteger@plt+0x548>
    2c3c:	mov	r2, #11
    2c40:	add	r3, pc, r3
    2c44:	str	r2, [r3, #4]
    2c48:	b	27b0 <ippGetInteger@plt+0x7e4>
    2c4c:	ldr	r1, [pc, #-1852]	; 2518 <ippGetInteger@plt+0x54c>
    2c50:	mov	r0, r7
    2c54:	add	r1, pc, r1
    2c58:	bl	1a08 <_cups_strcasecmp@plt>
    2c5c:	cmp	r0, #0
    2c60:	beq	2c7c <ippGetInteger@plt+0xcb0>
    2c64:	ldr	r1, [pc, #-1872]	; 251c <ippGetInteger@plt+0x550>
    2c68:	mov	r0, r7
    2c6c:	add	r1, pc, r1
    2c70:	bl	1a08 <_cups_strcasecmp@plt>
    2c74:	cmp	r0, #0
    2c78:	bne	2e18 <ippGetInteger@plt+0xe4c>
    2c7c:	ldr	r3, [pc, #-1892]	; 2520 <ippGetInteger@plt+0x554>
    2c80:	ldr	r2, [sp, #32]
    2c84:	add	r3, pc, r3
    2c88:	str	r3, [sp]
    2c8c:	ldr	r1, [sp, #48]	; 0x30
    2c90:	ldr	r3, [pc, #-1908]	; 2524 <ippGetInteger@plt+0x558>
    2c94:	add	r2, r2, #1616	; 0x650
    2c98:	add	r2, r2, #12
    2c9c:	add	r3, pc, r3
    2ca0:	sub	r1, r1, #36	; 0x24
    2ca4:	mov	r0, r6
    2ca8:	bl	6520 <ippGetInteger@plt+0x4554>
    2cac:	b	27b0 <ippGetInteger@plt+0x7e4>
    2cb0:	ldr	r3, [pc, #-1936]	; 2528 <ippGetInteger@plt+0x55c>
    2cb4:	add	r3, pc, r3
    2cb8:	str	r0, [r3, #12]
    2cbc:	b	22f0 <ippGetInteger@plt+0x324>
    2cc0:	mov	r0, r7
    2cc4:	bl	1e1c <strlen@plt>
    2cc8:	add	r0, r7, r0
    2ccc:	b	2a3c <ippGetInteger@plt+0xa70>
    2cd0:	ldr	r1, [pc, #-1964]	; 252c <ippGetInteger@plt+0x560>
    2cd4:	mov	r0, r7
    2cd8:	add	r1, pc, r1
    2cdc:	bl	1ec4 <strcmp@plt>
    2ce0:	cmp	r0, #0
    2ce4:	bne	2cfc <ippGetInteger@plt+0xd30>
    2ce8:	ldr	r3, [pc, #-1984]	; 2530 <ippGetInteger@plt+0x564>
    2cec:	mov	r2, #20
    2cf0:	add	r3, pc, r3
    2cf4:	str	r2, [r3, #4]
    2cf8:	b	27b0 <ippGetInteger@plt+0x7e4>
    2cfc:	ldr	r1, [pc, #-2000]	; 2534 <ippGetInteger@plt+0x568>
    2d00:	mov	r0, r7
    2d04:	add	r1, pc, r1
    2d08:	bl	1ec4 <strcmp@plt>
    2d0c:	cmp	r0, #0
    2d10:	beq	2e04 <ippGetInteger@plt+0xe38>
    2d14:	ldr	r1, [pc, #-2020]	; 2538 <ippGetInteger@plt+0x56c>
    2d18:	mov	r0, r7
    2d1c:	add	r1, pc, r1
    2d20:	bl	1ec4 <strcmp@plt>
    2d24:	cmp	r0, #0
    2d28:	bne	31a4 <ippGetInteger@plt+0x11d8>
    2d2c:	ldr	r3, [pc, #-2040]	; 253c <ippGetInteger@plt+0x570>
    2d30:	mov	r2, #22
    2d34:	add	r3, pc, r3
    2d38:	str	r2, [r3, #4]
    2d3c:	b	27b0 <ippGetInteger@plt+0x7e4>
    2d40:	lsl	r3, fp, #2
    2d44:	ldr	r1, [sp, #76]	; 0x4c
    2d48:	ldr	r3, [r5, r3]
    2d4c:	ldr	r2, [pc, #-2068]	; 2540 <ippGetInteger@plt+0x574>
    2d50:	str	r3, [sp, #8]
    2d54:	ldr	r1, [r1]
    2d58:	mov	r3, #1024	; 0x400
    2d5c:	add	r2, pc, r2
    2d60:	str	r1, [sp, #4]
    2d64:	str	r2, [sp]
    2d68:	mov	r1, r3
    2d6c:	mov	r2, #1
    2d70:	mov	r0, r7
    2d74:	bl	1e28 <__snprintf_chk@plt>
    2d78:	mov	r1, #0
    2d7c:	mov	r0, r7
    2d80:	bl	1d50 <access@plt>
    2d84:	cmp	r0, #0
    2d88:	beq	299c <ippGetInteger@plt+0x9d0>
    2d8c:	lsl	r3, fp, #2
    2d90:	ldr	r0, [r5, r3]
    2d94:	bl	1fb4 <strdup@plt>
    2d98:	str	r0, [sl, #-1636]	; 0xfffff99c
    2d9c:	b	29a8 <ippGetInteger@plt+0x9dc>
    2da0:	ldrb	r3, [r4]
    2da4:	cmp	r3, #47	; 0x2f
    2da8:	beq	21f8 <ippGetInteger@plt+0x22c>
    2dac:	ldr	r3, [sp, #76]	; 0x4c
    2db0:	ldr	r2, [pc, #-2164]	; 2544 <ippGetInteger@plt+0x578>
    2db4:	str	r4, [sp, #8]
    2db8:	add	r4, sp, #3760	; 0xeb0
    2dbc:	ldr	r1, [r3]
    2dc0:	add	r2, pc, r2
    2dc4:	mov	r3, #1024	; 0x400
    2dc8:	add	r4, r4, #12
    2dcc:	str	r1, [sp, #4]
    2dd0:	str	r2, [sp]
    2dd4:	mov	r1, r3
    2dd8:	mov	r2, #1
    2ddc:	mov	r0, r4
    2de0:	bl	1e28 <__snprintf_chk@plt>
    2de4:	mov	r0, r4
    2de8:	mov	r1, #0
    2dec:	bl	1d50 <access@plt>
    2df0:	cmp	r0, #0
    2df4:	ldrne	r3, [r5, r7]
    2df8:	strne	r3, [sp, #64]	; 0x40
    2dfc:	bne	21fc <ippGetInteger@plt+0x230>
    2e00:	b	21f8 <ippGetInteger@plt+0x22c>
    2e04:	ldr	r3, [pc, #-2244]	; 2548 <ippGetInteger@plt+0x57c>
    2e08:	mov	r2, #21
    2e0c:	add	r3, pc, r3
    2e10:	str	r2, [r3, #4]
    2e14:	b	27b0 <ippGetInteger@plt+0x7e4>
    2e18:	ldr	r1, [pc, #-2260]	; 254c <ippGetInteger@plt+0x580>
    2e1c:	mov	r0, r7
    2e20:	add	r1, pc, r1
    2e24:	bl	1a08 <_cups_strcasecmp@plt>
    2e28:	cmp	r0, #0
    2e2c:	beq	2c7c <ippGetInteger@plt+0xcb0>
    2e30:	ldr	r1, [pc, #-2280]	; 2550 <ippGetInteger@plt+0x584>
    2e34:	mov	r0, r7
    2e38:	add	r1, pc, r1
    2e3c:	bl	1a08 <_cups_strcasecmp@plt>
    2e40:	cmp	r0, #0
    2e44:	beq	2c7c <ippGetInteger@plt+0xcb0>
    2e48:	ldr	r1, [pc, #-2300]	; 2554 <ippGetInteger@plt+0x588>
    2e4c:	mov	r0, r7
    2e50:	add	r1, pc, r1
    2e54:	bl	1a08 <_cups_strcasecmp@plt>
    2e58:	cmp	r0, #0
    2e5c:	beq	2e78 <ippGetInteger@plt+0xeac>
    2e60:	ldr	r1, [pc, #-2320]	; 2558 <ippGetInteger@plt+0x58c>
    2e64:	mov	r0, r7
    2e68:	add	r1, pc, r1
    2e6c:	bl	1a08 <_cups_strcasecmp@plt>
    2e70:	cmp	r0, #0
    2e74:	bne	3008 <ippGetInteger@plt+0x103c>
    2e78:	ldr	r3, [pc, #-2340]	; 255c <ippGetInteger@plt+0x590>
    2e7c:	ldr	r2, [sp, #32]
    2e80:	add	r3, pc, r3
    2e84:	str	r3, [sp]
    2e88:	ldr	r1, [sp, #48]	; 0x30
    2e8c:	ldr	r3, [pc, #-2356]	; 2560 <ippGetInteger@plt+0x594>
    2e90:	add	r2, r2, #1616	; 0x650
    2e94:	add	r2, r2, #12
    2e98:	add	r3, pc, r3
    2e9c:	sub	r1, r1, #36	; 0x24
    2ea0:	mov	r0, r6
    2ea4:	bl	6520 <ippGetInteger@plt+0x4554>
    2ea8:	b	27b0 <ippGetInteger@plt+0x7e4>
    2eac:	mov	r3, r0
    2eb0:	ldr	r0, [pc, #-2388]	; 2564 <ippGetInteger@plt+0x598>
    2eb4:	str	r3, [sp, #60]	; 0x3c
    2eb8:	add	r0, pc, r0
    2ebc:	bl	1b28 <puts@plt>
    2ec0:	add	r3, sp, #5760	; 0x1680
    2ec4:	add	r3, r3, #60	; 0x3c
    2ec8:	ldr	r2, [r3]
    2ecc:	ldr	r3, [sp, #84]	; 0x54
    2ed0:	ldr	r0, [sp, #60]	; 0x3c
    2ed4:	ldr	r3, [r3]
    2ed8:	cmp	r2, r3
    2edc:	bne	31a0 <ippGetInteger@plt+0x11d4>
    2ee0:	add	sp, sp, #5824	; 0x16c0
    2ee4:	add	sp, sp, #4
    2ee8:	vpop	{d8}
    2eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ef0:	cmp	r4, #0
    2ef4:	beq	2f48 <ippGetInteger@plt+0xf7c>
    2ef8:	mov	r0, r4
    2efc:	bl	1e40 <usleep@plt>
    2f00:	mov	r2, r7
    2f04:	mov	r1, r6
    2f08:	mov	r0, r5
    2f0c:	bl	87fc <ippGetInteger@plt+0x6830>
    2f10:	b	2ef8 <ippGetInteger@plt+0xf2c>
    2f14:	mov	r2, #1
    2f18:	str	r2, [sp, #60]	; 0x3c
    2f1c:	ldr	r3, [pc, #-2360]	; 25ec <ippGetInteger@plt+0x620>
    2f20:	ldr	r2, [sp, #52]	; 0x34
    2f24:	ldr	r3, [r2, r3]
    2f28:	ldr	r4, [r3]
    2f2c:	bl	1e4c <httpURIStatusString@plt>
    2f30:	ldr	r1, [pc, #-2512]	; 2568 <ippGetInteger@plt+0x59c>
    2f34:	add	r1, pc, r1
    2f38:	mov	r2, r0
    2f3c:	mov	r0, r4
    2f40:	bl	1a50 <_cupsLangPrintf@plt>
    2f44:	b	2ec0 <ippGetInteger@plt+0xef4>
    2f48:	cmp	r3, #1
    2f4c:	bne	242c <ippGetInteger@plt+0x460>
    2f50:	ldr	r4, [pc, #-2540]	; 256c <ippGetInteger@plt+0x5a0>
    2f54:	add	r4, pc, r4
    2f58:	ldr	r3, [r4, #288]	; 0x120
    2f5c:	cmp	r3, #1
    2f60:	ble	242c <ippGetInteger@plt+0x460>
    2f64:	bl	1e94 <cupsFileStdout@plt>
    2f68:	ldr	r8, [r4, #304]	; 0x130
    2f6c:	ldr	r9, [r4, #296]	; 0x128
    2f70:	ldr	r6, [r4, #288]	; 0x120
    2f74:	add	r3, r8, r9
    2f78:	mov	r1, r6
    2f7c:	mov	r7, r0
    2f80:	mov	r0, #100	; 0x64
    2f84:	mul	r0, r0, r3
    2f88:	bl	edd4 <ippGetInteger@plt+0xce08>
    2f8c:	ldr	ip, [r4, #308]	; 0x134
    2f90:	ldr	r1, [pc, #-2600]	; 2570 <ippGetInteger@plt+0x5a4>
    2f94:	str	r9, [sp, #4]
    2f98:	add	r1, pc, r1
    2f9c:	mov	r3, r8
    2fa0:	mov	r2, r6
    2fa4:	str	ip, [sp]
    2fa8:	str	r0, [sp, #8]
    2fac:	mov	r0, r7
    2fb0:	bl	1dc8 <cupsFilePrintf@plt>
    2fb4:	b	242c <ippGetInteger@plt+0x460>
    2fb8:	ldr	r1, [pc, #-2636]	; 2574 <ippGetInteger@plt+0x5a8>
    2fbc:	add	r1, pc, r1
    2fc0:	ldr	r1, [r1, #20]
    2fc4:	cmp	r1, #0
    2fc8:	beq	2410 <ippGetInteger@plt+0x444>
    2fcc:	ldr	r3, [sp, #60]	; 0x3c
    2fd0:	mov	r0, r5
    2fd4:	eor	r1, r3, #1
    2fd8:	bl	4a3c <ippGetInteger@plt+0x2a70>
    2fdc:	b	23fc <ippGetInteger@plt+0x430>
    2fe0:	ldr	r2, [pc, #-2672]	; 2578 <ippGetInteger@plt+0x5ac>
    2fe4:	ldr	r1, [pc, #-2672]	; 257c <ippGetInteger@plt+0x5b0>
    2fe8:	ldr	r3, [pc, #-2564]	; 25ec <ippGetInteger@plt+0x620>
    2fec:	add	r2, pc, r2
    2ff0:	add	r1, pc, r1
    2ff4:	ldr	r0, [sp, #52]	; 0x34
    2ff8:	ldr	r3, [r0, r3]
    2ffc:	ldr	r0, [r3]
    3000:	bl	1a50 <_cupsLangPrintf@plt>
    3004:	bl	36d4 <ippGetInteger@plt+0x1708>
    3008:	ldr	r1, [pc, #-2704]	; 2580 <ippGetInteger@plt+0x5b4>
    300c:	mov	r0, r7
    3010:	add	r1, pc, r1
    3014:	bl	1a08 <_cups_strcasecmp@plt>
    3018:	cmp	r0, #0
    301c:	beq	3038 <ippGetInteger@plt+0x106c>
    3020:	ldr	r1, [pc, #-2724]	; 2584 <ippGetInteger@plt+0x5b8>
    3024:	mov	r0, r7
    3028:	add	r1, pc, r1
    302c:	bl	1a08 <_cups_strcasecmp@plt>
    3030:	cmp	r0, #0
    3034:	bne	306c <ippGetInteger@plt+0x10a0>
    3038:	ldr	r3, [pc, #-2744]	; 2588 <ippGetInteger@plt+0x5bc>
    303c:	ldr	r2, [sp, #32]
    3040:	add	r3, pc, r3
    3044:	str	r3, [sp]
    3048:	ldr	r1, [sp, #48]	; 0x30
    304c:	ldr	r3, [pc, #-2760]	; 258c <ippGetInteger@plt+0x5c0>
    3050:	add	r2, r2, #1616	; 0x650
    3054:	add	r2, r2, #12
    3058:	add	r3, pc, r3
    305c:	sub	r1, r1, #36	; 0x24
    3060:	mov	r0, r6
    3064:	bl	6520 <ippGetInteger@plt+0x4554>
    3068:	b	27b0 <ippGetInteger@plt+0x7e4>
    306c:	ldr	r1, [pc, #-2788]	; 2590 <ippGetInteger@plt+0x5c4>
    3070:	mov	r0, r7
    3074:	add	r1, pc, r1
    3078:	bl	1a08 <_cups_strcasecmp@plt>
    307c:	cmp	r0, #0
    3080:	bne	30d8 <ippGetInteger@plt+0x110c>
    3084:	ldr	r3, [pc, #-2808]	; 2594 <ippGetInteger@plt+0x5c8>
    3088:	ldr	r2, [sp, #32]
    308c:	add	r3, pc, r3
    3090:	str	r3, [sp]
    3094:	ldr	r1, [sp, #48]	; 0x30
    3098:	ldr	r3, [pc, #-2824]	; 2598 <ippGetInteger@plt+0x5cc>
    309c:	add	r2, r2, #1616	; 0x650
    30a0:	add	r2, r2, #12
    30a4:	add	r3, pc, r3
    30a8:	sub	r1, r1, #36	; 0x24
    30ac:	mov	r0, r6
    30b0:	bl	6520 <ippGetInteger@plt+0x4554>
    30b4:	b	27b0 <ippGetInteger@plt+0x7e4>
    30b8:	ldr	r1, [pc, #-2852]	; 259c <ippGetInteger@plt+0x5d0>
    30bc:	ldr	r3, [pc, #-2776]	; 25ec <ippGetInteger@plt+0x620>
    30c0:	add	r1, pc, r1
    30c4:	ldr	r2, [sp, #52]	; 0x34
    30c8:	ldr	r3, [r2, r3]
    30cc:	ldr	r0, [r3]
    30d0:	bl	1aa4 <_cupsLangPuts@plt>
    30d4:	b	3004 <ippGetInteger@plt+0x1038>
    30d8:	ldr	r1, [pc, #-2880]	; 25a0 <ippGetInteger@plt+0x5d4>
    30dc:	mov	r0, r7
    30e0:	add	r1, pc, r1
    30e4:	bl	1a08 <_cups_strcasecmp@plt>
    30e8:	cmp	r0, #0
    30ec:	bne	3278 <ippGetInteger@plt+0x12ac>
    30f0:	ldr	r3, [pc, #-2900]	; 25a4 <ippGetInteger@plt+0x5d8>
    30f4:	ldr	r2, [sp, #32]
    30f8:	add	r3, pc, r3
    30fc:	str	r3, [sp]
    3100:	ldr	r1, [sp, #48]	; 0x30
    3104:	ldr	r3, [pc, #-2916]	; 25a8 <ippGetInteger@plt+0x5dc>
    3108:	add	r2, r2, #1616	; 0x650
    310c:	add	r2, r2, #12
    3110:	add	r3, pc, r3
    3114:	sub	r1, r1, #36	; 0x24
    3118:	mov	r0, r6
    311c:	bl	6520 <ippGetInteger@plt+0x4554>
    3120:	b	27b0 <ippGetInteger@plt+0x7e4>
    3124:	ldr	r1, [pc, #-2944]	; 25ac <ippGetInteger@plt+0x5e0>
    3128:	ldr	r3, [pc, #-2884]	; 25ec <ippGetInteger@plt+0x620>
    312c:	add	r1, pc, r1
    3130:	b	30c4 <ippGetInteger@plt+0x10f8>
    3134:	ldr	r1, [pc, #-2956]	; 25b0 <ippGetInteger@plt+0x5e4>
    3138:	ldr	r3, [pc, #-2900]	; 25ec <ippGetInteger@plt+0x620>
    313c:	add	r1, pc, r1
    3140:	b	30c4 <ippGetInteger@plt+0x10f8>
    3144:	ldr	r1, [pc, #-2968]	; 25b4 <ippGetInteger@plt+0x5e8>
    3148:	ldr	r3, [pc, #-2916]	; 25ec <ippGetInteger@plt+0x620>
    314c:	add	r1, pc, r1
    3150:	b	30c4 <ippGetInteger@plt+0x10f8>
    3154:	ldr	r3, [pc, #-2928]	; 25ec <ippGetInteger@plt+0x620>
    3158:	ldr	r2, [sp, #52]	; 0x34
    315c:	ldr	r1, [pc, #-2988]	; 25b8 <ippGetInteger@plt+0x5ec>
    3160:	ldr	r4, [r2, r3]
    3164:	add	r1, pc, r1
    3168:	ldr	r0, [r4]
    316c:	bl	1aa4 <_cupsLangPuts@plt>
    3170:	ldr	r1, [r9]
    3174:	ldr	r0, [r4]
    3178:	bl	1aa4 <_cupsLangPuts@plt>
    317c:	bl	36d4 <ippGetInteger@plt+0x1708>
    3180:	ldr	r1, [pc, #-3020]	; 25bc <ippGetInteger@plt+0x5f0>
    3184:	ldr	r3, [pc, #-2976]	; 25ec <ippGetInteger@plt+0x620>
    3188:	add	r1, pc, r1
    318c:	b	30c4 <ippGetInteger@plt+0x10f8>
    3190:	ldr	r1, [pc, #-3032]	; 25c0 <ippGetInteger@plt+0x5f4>
    3194:	ldr	r3, [pc, #-2992]	; 25ec <ippGetInteger@plt+0x620>
    3198:	add	r1, pc, r1
    319c:	b	2ff4 <ippGetInteger@plt+0x1028>
    31a0:	bl	1d14 <__stack_chk_fail@plt>
    31a4:	ldr	r1, [pc, #-3008]	; 25ec <ippGetInteger@plt+0x620>
    31a8:	ldr	r0, [sp, #52]	; 0x34
    31ac:	ldr	r2, [pc, #-3056]	; 25c4 <ippGetInteger@plt+0x5f8>
    31b0:	mov	r3, r7
    31b4:	ldr	r0, [r0, r1]
    31b8:	ldr	r1, [pc, #-3064]	; 25c8 <ippGetInteger@plt+0x5fc>
    31bc:	add	r2, pc, r2
    31c0:	add	r1, pc, r1
    31c4:	ldr	r0, [r0]
    31c8:	bl	1a50 <_cupsLangPrintf@plt>
    31cc:	bl	36d4 <ippGetInteger@plt+0x1708>
    31d0:	ldr	r1, [pc, #-3084]	; 25cc <ippGetInteger@plt+0x600>
    31d4:	ldr	r3, [pc, #-3056]	; 25ec <ippGetInteger@plt+0x620>
    31d8:	add	r1, pc, r1
    31dc:	b	30c4 <ippGetInteger@plt+0x10f8>
    31e0:	ldr	r2, [pc, #-3068]	; 25ec <ippGetInteger@plt+0x620>
    31e4:	ldr	r5, [r3]
    31e8:	ldr	r3, [sp, #52]	; 0x34
    31ec:	ldr	r3, [r3, r2]
    31f0:	ldr	r4, [r3]
    31f4:	bl	1f00 <__errno_location@plt>
    31f8:	ldr	r0, [r0]
    31fc:	bl	1b04 <strerror@plt>
    3200:	ldr	r2, [pc, #-3128]	; 25d0 <ippGetInteger@plt+0x604>
    3204:	ldr	r1, [pc, #-3128]	; 25d4 <ippGetInteger@plt+0x608>
    3208:	mov	r3, r5
    320c:	add	r2, pc, r2
    3210:	add	r1, pc, r1
    3214:	str	r0, [sp]
    3218:	mov	r0, r4
    321c:	bl	1a50 <_cupsLangPrintf@plt>
    3220:	mov	r0, #1
    3224:	bl	1aec <exit@plt>
    3228:	ldr	r0, [sp, #52]	; 0x34
    322c:	ldr	r3, [pc, #-3144]	; 25ec <ippGetInteger@plt+0x620>
    3230:	ldr	r2, [pc, #-3168]	; 25d8 <ippGetInteger@plt+0x60c>
    3234:	ldr	r1, [pc, #-3168]	; 25dc <ippGetInteger@plt+0x610>
    3238:	ldr	r3, [r0, r3]
    323c:	add	r2, pc, r2
    3240:	add	r1, pc, r1
    3244:	ldr	r0, [r3]
    3248:	bl	1a50 <_cupsLangPrintf@plt>
    324c:	b	3004 <ippGetInteger@plt+0x1038>
    3250:	ldr	r2, [pc, #-3192]	; 25e0 <ippGetInteger@plt+0x614>
    3254:	ldr	r1, [pc, #-3192]	; 25e4 <ippGetInteger@plt+0x618>
    3258:	ldr	r3, [pc, #-3188]	; 25ec <ippGetInteger@plt+0x620>
    325c:	add	r2, pc, r2
    3260:	add	r1, pc, r1
    3264:	b	2ff4 <ippGetInteger@plt+0x1028>
    3268:	ldr	r1, [pc, #-3208]	; 25e8 <ippGetInteger@plt+0x61c>
    326c:	ldr	r3, [pc, #-3208]	; 25ec <ippGetInteger@plt+0x620>
    3270:	add	r1, pc, r1
    3274:	b	30c4 <ippGetInteger@plt+0x10f8>
    3278:	ldr	r1, [pc, #-3216]	; 25f0 <ippGetInteger@plt+0x624>
    327c:	mov	r0, r7
    3280:	add	r1, pc, r1
    3284:	bl	1a08 <_cups_strcasecmp@plt>
    3288:	cmp	r0, #0
    328c:	beq	32a8 <ippGetInteger@plt+0x12dc>
    3290:	ldr	r1, [pc, #-3236]	; 25f4 <ippGetInteger@plt+0x628>
    3294:	mov	r0, r7
    3298:	add	r1, pc, r1
    329c:	bl	1a08 <_cups_strcasecmp@plt>
    32a0:	cmp	r0, #0
    32a4:	bne	32dc <ippGetInteger@plt+0x1310>
    32a8:	ldr	r3, [pc, #-3256]	; 25f8 <ippGetInteger@plt+0x62c>
    32ac:	ldr	r2, [sp, #32]
    32b0:	add	r3, pc, r3
    32b4:	str	r3, [sp]
    32b8:	ldr	r1, [sp, #48]	; 0x30
    32bc:	ldr	r3, [pc, #-3272]	; 25fc <ippGetInteger@plt+0x630>
    32c0:	add	r2, r2, #1616	; 0x650
    32c4:	add	r2, r2, #12
    32c8:	add	r3, pc, r3
    32cc:	sub	r1, r1, #36	; 0x24
    32d0:	mov	r0, r6
    32d4:	bl	6520 <ippGetInteger@plt+0x4554>
    32d8:	b	27b0 <ippGetInteger@plt+0x7e4>
    32dc:	ldr	r1, [pc, #-3300]	; 2600 <ippGetInteger@plt+0x634>
    32e0:	mov	r0, r7
    32e4:	add	r1, pc, r1
    32e8:	bl	1a08 <_cups_strcasecmp@plt>
    32ec:	cmp	r0, #0
    32f0:	beq	330c <ippGetInteger@plt+0x1340>
    32f4:	ldr	r1, [pc, #-3320]	; 2604 <ippGetInteger@plt+0x638>
    32f8:	mov	r0, r7
    32fc:	add	r1, pc, r1
    3300:	bl	1a08 <_cups_strcasecmp@plt>
    3304:	cmp	r0, #0
    3308:	bne	3340 <ippGetInteger@plt+0x1374>
    330c:	ldr	r3, [pc, #-3340]	; 2608 <ippGetInteger@plt+0x63c>
    3310:	ldr	r2, [sp, #32]
    3314:	add	r3, pc, r3
    3318:	str	r3, [sp]
    331c:	ldr	r1, [sp, #48]	; 0x30
    3320:	ldr	r3, [pc, #-3356]	; 260c <ippGetInteger@plt+0x640>
    3324:	add	r2, r2, #1616	; 0x650
    3328:	add	r2, r2, #12
    332c:	add	r3, pc, r3
    3330:	sub	r1, r1, #36	; 0x24
    3334:	mov	r0, r6
    3338:	bl	6520 <ippGetInteger@plt+0x4554>
    333c:	b	27b0 <ippGetInteger@plt+0x7e4>
    3340:	ldr	r1, [pc, #-3384]	; 2610 <ippGetInteger@plt+0x644>
    3344:	mov	r0, r7
    3348:	add	r1, pc, r1
    334c:	bl	1a08 <_cups_strcasecmp@plt>
    3350:	cmp	r0, #0
    3354:	beq	330c <ippGetInteger@plt+0x1340>
    3358:	ldr	r1, [pc, #-3404]	; 2614 <ippGetInteger@plt+0x648>
    335c:	mov	r0, r7
    3360:	add	r1, pc, r1
    3364:	bl	1a08 <_cups_strcasecmp@plt>
    3368:	cmp	r0, #0
    336c:	beq	330c <ippGetInteger@plt+0x1340>
    3370:	ldr	r1, [pc, #-3424]	; 2618 <ippGetInteger@plt+0x64c>
    3374:	mov	r0, r7
    3378:	add	r1, pc, r1
    337c:	bl	1a08 <_cups_strcasecmp@plt>
    3380:	cmp	r0, #0
    3384:	beq	33a0 <ippGetInteger@plt+0x13d4>
    3388:	ldr	r1, [pc, #-3444]	; 261c <ippGetInteger@plt+0x650>
    338c:	mov	r0, r7
    3390:	add	r1, pc, r1
    3394:	bl	1a08 <_cups_strcasecmp@plt>
    3398:	cmp	r0, #0
    339c:	bne	33d4 <ippGetInteger@plt+0x1408>
    33a0:	ldr	r3, [pc, #-3464]	; 2620 <ippGetInteger@plt+0x654>
    33a4:	ldr	r2, [sp, #32]
    33a8:	add	r3, pc, r3
    33ac:	str	r3, [sp]
    33b0:	ldr	r1, [sp, #48]	; 0x30
    33b4:	ldr	r3, [pc, #-3480]	; 2624 <ippGetInteger@plt+0x658>
    33b8:	add	r2, r2, #1616	; 0x650
    33bc:	add	r2, r2, #12
    33c0:	add	r3, pc, r3
    33c4:	sub	r1, r1, #36	; 0x24
    33c8:	mov	r0, r6
    33cc:	bl	6520 <ippGetInteger@plt+0x4554>
    33d0:	b	27b0 <ippGetInteger@plt+0x7e4>
    33d4:	ldr	r1, [pc, #-3508]	; 2628 <ippGetInteger@plt+0x65c>
    33d8:	mov	r0, r7
    33dc:	add	r1, pc, r1
    33e0:	bl	1a08 <_cups_strcasecmp@plt>
    33e4:	cmp	r0, #0
    33e8:	bne	3420 <ippGetInteger@plt+0x1454>
    33ec:	ldr	r3, [pc, #-3528]	; 262c <ippGetInteger@plt+0x660>
    33f0:	ldr	r2, [sp, #32]
    33f4:	add	r3, pc, r3
    33f8:	str	r3, [sp]
    33fc:	ldr	r1, [sp, #48]	; 0x30
    3400:	ldr	r3, [pc, #-3544]	; 2630 <ippGetInteger@plt+0x664>
    3404:	add	r2, r2, #1616	; 0x650
    3408:	add	r2, r2, #12
    340c:	add	r3, pc, r3
    3410:	sub	r1, r1, #36	; 0x24
    3414:	mov	r0, r6
    3418:	bl	6520 <ippGetInteger@plt+0x4554>
    341c:	b	27b0 <ippGetInteger@plt+0x7e4>
    3420:	ldr	r1, [pc, #-3572]	; 2634 <ippGetInteger@plt+0x668>
    3424:	mov	r0, r7
    3428:	add	r1, pc, r1
    342c:	bl	1a08 <_cups_strcasecmp@plt>
    3430:	cmp	r0, #0
    3434:	beq	33ec <ippGetInteger@plt+0x1420>
    3438:	ldr	r1, [pc, #-3592]	; 2638 <ippGetInteger@plt+0x66c>
    343c:	mov	r0, r7
    3440:	add	r1, pc, r1
    3444:	bl	1a08 <_cups_strcasecmp@plt>
    3448:	cmp	r0, #0
    344c:	bne	3484 <ippGetInteger@plt+0x14b8>
    3450:	ldr	r3, [pc, #-3612]	; 263c <ippGetInteger@plt+0x670>
    3454:	ldr	r2, [sp, #32]
    3458:	add	r3, pc, r3
    345c:	str	r3, [sp]
    3460:	ldr	r1, [sp, #48]	; 0x30
    3464:	ldr	r3, [pc, #-3628]	; 2640 <ippGetInteger@plt+0x674>
    3468:	add	r2, r2, #1616	; 0x650
    346c:	add	r2, r2, #12
    3470:	add	r3, pc, r3
    3474:	sub	r1, r1, #36	; 0x24
    3478:	mov	r0, r6
    347c:	bl	6520 <ippGetInteger@plt+0x4554>
    3480:	b	27b0 <ippGetInteger@plt+0x7e4>
    3484:	ldr	r1, [pc, #-3656]	; 2644 <ippGetInteger@plt+0x678>
    3488:	mov	r0, r7
    348c:	add	r1, pc, r1
    3490:	bl	1a08 <_cups_strcasecmp@plt>
    3494:	cmp	r0, #0
    3498:	beq	3450 <ippGetInteger@plt+0x1484>
    349c:	ldr	r1, [pc, #-3676]	; 2648 <ippGetInteger@plt+0x67c>
    34a0:	mov	r0, r7
    34a4:	add	r1, pc, r1
    34a8:	bl	1a08 <_cups_strcasecmp@plt>
    34ac:	cmp	r0, #0
    34b0:	bne	34e8 <ippGetInteger@plt+0x151c>
    34b4:	ldr	r3, [pc, #-3696]	; 264c <ippGetInteger@plt+0x680>
    34b8:	ldr	r2, [sp, #32]
    34bc:	add	r3, pc, r3
    34c0:	str	r3, [sp]
    34c4:	ldr	r1, [sp, #48]	; 0x30
    34c8:	ldr	r3, [pc, #-3712]	; 2650 <ippGetInteger@plt+0x684>
    34cc:	add	r2, r2, #1616	; 0x650
    34d0:	add	r2, r2, #12
    34d4:	add	r3, pc, r3
    34d8:	sub	r1, r1, #36	; 0x24
    34dc:	mov	r0, r6
    34e0:	bl	6520 <ippGetInteger@plt+0x4554>
    34e4:	b	27b0 <ippGetInteger@plt+0x7e4>
    34e8:	ldr	r3, [pc, #-3740]	; 2654 <ippGetInteger@plt+0x688>
    34ec:	ldr	r2, [sp, #32]
    34f0:	add	r3, pc, r3
    34f4:	str	r3, [sp]
    34f8:	ldr	r1, [sp, #48]	; 0x30
    34fc:	ldr	r3, [pc, #-3756]	; 2658 <ippGetInteger@plt+0x68c>
    3500:	add	r2, r2, #1616	; 0x650
    3504:	add	r2, r2, #12
    3508:	add	r3, pc, r3
    350c:	sub	r1, r1, #36	; 0x24
    3510:	mov	r0, r6
    3514:	bl	6520 <ippGetInteger@plt+0x4554>
    3518:	b	27b0 <ippGetInteger@plt+0x7e4>
    351c:	mov	fp, #0
    3520:	mov	lr, #0
    3524:	pop	{r1}		; (ldr r1, [sp], #4)
    3528:	mov	r2, sp
    352c:	push	{r2}		; (str r2, [sp, #-4]!)
    3530:	push	{r0}		; (str r0, [sp, #-4]!)
    3534:	ldr	sl, [pc, #40]	; 3564 <ippGetInteger@plt+0x1598>
    3538:	add	r3, pc, #36	; 0x24
    353c:	add	sl, sl, r3
    3540:	ldr	ip, [pc, #32]	; 3568 <ippGetInteger@plt+0x159c>
    3544:	ldr	ip, [sl, ip]
    3548:	push	{ip}		; (str ip, [sp, #-4]!)
    354c:	ldr	r3, [pc, #24]	; 356c <ippGetInteger@plt+0x15a0>
    3550:	ldr	r3, [sl, r3]
    3554:	ldr	r0, [pc, #20]	; 3570 <ippGetInteger@plt+0x15a4>
    3558:	ldr	r0, [sl, r0]
    355c:	bl	1f60 <__libc_start_main@plt>
    3560:	bl	1c3c <abort@plt>
    3564:	andeq	pc, r1, ip, lsr r8	; <UNPREDICTABLE>
    3568:	andeq	r0, r0, ip, asr #4
    356c:	andeq	r0, r0, r0, asr #4
    3570:	andeq	r0, r0, r8, lsr r2
    3574:	ldr	r3, [pc, #20]	; 3590 <ippGetInteger@plt+0x15c4>
    3578:	ldr	r2, [pc, #20]	; 3594 <ippGetInteger@plt+0x15c8>
    357c:	add	r3, pc, r3
    3580:	ldr	r2, [r3, r2]
    3584:	cmp	r2, #0
    3588:	bxeq	lr
    358c:	b	1f6c <__gmon_start__@plt>
    3590:	andeq	pc, r1, ip, lsl r8	; <UNPREDICTABLE>
    3594:	andeq	r0, r0, r0, asr r2
    3598:	ldr	r0, [pc, #44]	; 35cc <ippGetInteger@plt+0x1600>
    359c:	ldr	r3, [pc, #44]	; 35d0 <ippGetInteger@plt+0x1604>
    35a0:	add	r0, pc, r0
    35a4:	add	r3, pc, r3
    35a8:	cmp	r3, r0
    35ac:	ldr	r3, [pc, #32]	; 35d4 <ippGetInteger@plt+0x1608>
    35b0:	add	r3, pc, r3
    35b4:	bxeq	lr
    35b8:	ldr	r2, [pc, #24]	; 35d8 <ippGetInteger@plt+0x160c>
    35bc:	ldr	r3, [r3, r2]
    35c0:	cmp	r3, #0
    35c4:	bxeq	lr
    35c8:	bx	r3
    35cc:	andeq	pc, r1, r8, ror #20
    35d0:	andeq	pc, r1, r4, ror #20
    35d4:	andeq	pc, r1, r8, ror #15
    35d8:	andeq	r0, r0, r8, asr #4
    35dc:	ldr	r0, [pc, #56]	; 361c <ippGetInteger@plt+0x1650>
    35e0:	ldr	r3, [pc, #56]	; 3620 <ippGetInteger@plt+0x1654>
    35e4:	add	r0, pc, r0
    35e8:	add	r3, pc, r3
    35ec:	sub	r1, r3, r0
    35f0:	ldr	r3, [pc, #44]	; 3624 <ippGetInteger@plt+0x1658>
    35f4:	asr	r1, r1, #2
    35f8:	add	r3, pc, r3
    35fc:	add	r1, r1, r1, lsr #31
    3600:	asrs	r1, r1, #1
    3604:	bxeq	lr
    3608:	ldr	r2, [pc, #24]	; 3628 <ippGetInteger@plt+0x165c>
    360c:	ldr	r3, [r3, r2]
    3610:	cmp	r3, #0
    3614:	bxeq	lr
    3618:	bx	r3
    361c:	andeq	pc, r1, r4, lsr #20
    3620:	andeq	pc, r1, r0, lsr #20
    3624:	andeq	pc, r1, r0, lsr #15
    3628:	andeq	r0, r0, r4, asr r2
    362c:	ldr	r3, [pc, #76]	; 3680 <ippGetInteger@plt+0x16b4>
    3630:	ldr	r2, [pc, #76]	; 3684 <ippGetInteger@plt+0x16b8>
    3634:	add	r3, pc, r3
    3638:	add	r2, pc, r2
    363c:	ldrb	r3, [r3]
    3640:	cmp	r3, #0
    3644:	bxne	lr
    3648:	ldr	r3, [pc, #56]	; 3688 <ippGetInteger@plt+0x16bc>
    364c:	push	{r4, lr}
    3650:	ldr	r3, [r2, r3]
    3654:	cmp	r3, #0
    3658:	beq	3668 <ippGetInteger@plt+0x169c>
    365c:	ldr	r3, [pc, #40]	; 368c <ippGetInteger@plt+0x16c0>
    3660:	ldr	r0, [pc, r3]
    3664:	bl	1f9c <__cxa_finalize@plt>
    3668:	bl	3598 <ippGetInteger@plt+0x15cc>
    366c:	ldr	r3, [pc, #28]	; 3690 <ippGetInteger@plt+0x16c4>
    3670:	mov	r2, #1
    3674:	add	r3, pc, r3
    3678:	strb	r2, [r3]
    367c:	pop	{r4, pc}
    3680:	ldrdeq	pc, [r1], -r4
    3684:	andeq	pc, r1, r0, ror #14
    3688:	andeq	r0, r0, r8, asr r2
    368c:	muleq	r1, ip, r9
    3690:	muleq	r1, r4, r9
    3694:	b	35dc <ippGetInteger@plt+0x1610>
    3698:	mov	r0, #0
    369c:	bx	lr
    36a0:	ldr	r3, [pc, #40]	; 36d0 <ippGetInteger@plt+0x1704>
    36a4:	push	{r4, lr}
    36a8:	add	r3, pc, r3
    36ac:	mov	r2, #1
    36b0:	mov	r1, #0
    36b4:	mov	r0, #2
    36b8:	str	r2, [r3]
    36bc:	bl	196c <signal@plt>
    36c0:	mov	r1, #0
    36c4:	mov	r0, #15
    36c8:	pop	{r4, lr}
    36cc:	b	196c <signal@plt>
    36d0:	andeq	pc, r1, r4, ror #18
    36d4:	ldr	r3, [pc, #436]	; 3890 <ippGetInteger@plt+0x18c4>
    36d8:	ldr	r2, [pc, #436]	; 3894 <ippGetInteger@plt+0x18c8>
    36dc:	add	r3, pc, r3
    36e0:	push	{r4, lr}
    36e4:	ldr	r4, [r3, r2]
    36e8:	ldr	r1, [pc, #424]	; 3898 <ippGetInteger@plt+0x18cc>
    36ec:	ldr	r0, [r4]
    36f0:	add	r1, pc, r1
    36f4:	bl	1aa4 <_cupsLangPuts@plt>
    36f8:	ldr	r1, [pc, #412]	; 389c <ippGetInteger@plt+0x18d0>
    36fc:	ldr	r0, [r4]
    3700:	add	r1, pc, r1
    3704:	bl	1aa4 <_cupsLangPuts@plt>
    3708:	ldr	r1, [pc, #400]	; 38a0 <ippGetInteger@plt+0x18d4>
    370c:	ldr	r0, [r4]
    3710:	add	r1, pc, r1
    3714:	bl	1aa4 <_cupsLangPuts@plt>
    3718:	ldr	r1, [pc, #388]	; 38a4 <ippGetInteger@plt+0x18d8>
    371c:	ldr	r0, [r4]
    3720:	add	r1, pc, r1
    3724:	bl	1aa4 <_cupsLangPuts@plt>
    3728:	ldr	r1, [pc, #376]	; 38a8 <ippGetInteger@plt+0x18dc>
    372c:	ldr	r0, [r4]
    3730:	add	r1, pc, r1
    3734:	bl	1aa4 <_cupsLangPuts@plt>
    3738:	ldr	r1, [pc, #364]	; 38ac <ippGetInteger@plt+0x18e0>
    373c:	ldr	r0, [r4]
    3740:	add	r1, pc, r1
    3744:	bl	1aa4 <_cupsLangPuts@plt>
    3748:	ldr	r1, [pc, #352]	; 38b0 <ippGetInteger@plt+0x18e4>
    374c:	ldr	r0, [r4]
    3750:	add	r1, pc, r1
    3754:	bl	1aa4 <_cupsLangPuts@plt>
    3758:	ldr	r1, [pc, #340]	; 38b4 <ippGetInteger@plt+0x18e8>
    375c:	ldr	r0, [r4]
    3760:	add	r1, pc, r1
    3764:	bl	1aa4 <_cupsLangPuts@plt>
    3768:	ldr	r1, [pc, #328]	; 38b8 <ippGetInteger@plt+0x18ec>
    376c:	ldr	r0, [r4]
    3770:	add	r1, pc, r1
    3774:	bl	1aa4 <_cupsLangPuts@plt>
    3778:	ldr	r1, [pc, #316]	; 38bc <ippGetInteger@plt+0x18f0>
    377c:	ldr	r0, [r4]
    3780:	add	r1, pc, r1
    3784:	bl	1aa4 <_cupsLangPuts@plt>
    3788:	ldr	r1, [pc, #304]	; 38c0 <ippGetInteger@plt+0x18f4>
    378c:	ldr	r0, [r4]
    3790:	add	r1, pc, r1
    3794:	bl	1aa4 <_cupsLangPuts@plt>
    3798:	ldr	r1, [pc, #292]	; 38c4 <ippGetInteger@plt+0x18f8>
    379c:	ldr	r0, [r4]
    37a0:	add	r1, pc, r1
    37a4:	bl	1aa4 <_cupsLangPuts@plt>
    37a8:	ldr	r1, [pc, #280]	; 38c8 <ippGetInteger@plt+0x18fc>
    37ac:	ldr	r0, [r4]
    37b0:	add	r1, pc, r1
    37b4:	bl	1aa4 <_cupsLangPuts@plt>
    37b8:	ldr	r1, [pc, #268]	; 38cc <ippGetInteger@plt+0x1900>
    37bc:	ldr	r0, [r4]
    37c0:	add	r1, pc, r1
    37c4:	bl	1aa4 <_cupsLangPuts@plt>
    37c8:	ldr	r1, [pc, #256]	; 38d0 <ippGetInteger@plt+0x1904>
    37cc:	ldr	r0, [r4]
    37d0:	add	r1, pc, r1
    37d4:	bl	1aa4 <_cupsLangPuts@plt>
    37d8:	ldr	r1, [pc, #244]	; 38d4 <ippGetInteger@plt+0x1908>
    37dc:	ldr	r0, [r4]
    37e0:	add	r1, pc, r1
    37e4:	bl	1aa4 <_cupsLangPuts@plt>
    37e8:	ldr	r1, [pc, #232]	; 38d8 <ippGetInteger@plt+0x190c>
    37ec:	ldr	r0, [r4]
    37f0:	add	r1, pc, r1
    37f4:	bl	1aa4 <_cupsLangPuts@plt>
    37f8:	ldr	r1, [pc, #220]	; 38dc <ippGetInteger@plt+0x1910>
    37fc:	ldr	r0, [r4]
    3800:	add	r1, pc, r1
    3804:	bl	1aa4 <_cupsLangPuts@plt>
    3808:	ldr	r1, [pc, #208]	; 38e0 <ippGetInteger@plt+0x1914>
    380c:	ldr	r0, [r4]
    3810:	add	r1, pc, r1
    3814:	bl	1aa4 <_cupsLangPuts@plt>
    3818:	ldr	r1, [pc, #196]	; 38e4 <ippGetInteger@plt+0x1918>
    381c:	ldr	r0, [r4]
    3820:	add	r1, pc, r1
    3824:	bl	1aa4 <_cupsLangPuts@plt>
    3828:	ldr	r1, [pc, #184]	; 38e8 <ippGetInteger@plt+0x191c>
    382c:	ldr	r0, [r4]
    3830:	add	r1, pc, r1
    3834:	bl	1aa4 <_cupsLangPuts@plt>
    3838:	ldr	r1, [pc, #172]	; 38ec <ippGetInteger@plt+0x1920>
    383c:	ldr	r0, [r4]
    3840:	add	r1, pc, r1
    3844:	bl	1aa4 <_cupsLangPuts@plt>
    3848:	ldr	r1, [pc, #160]	; 38f0 <ippGetInteger@plt+0x1924>
    384c:	ldr	r0, [r4]
    3850:	add	r1, pc, r1
    3854:	bl	1aa4 <_cupsLangPuts@plt>
    3858:	ldr	r1, [pc, #148]	; 38f4 <ippGetInteger@plt+0x1928>
    385c:	ldr	r0, [r4]
    3860:	add	r1, pc, r1
    3864:	bl	1aa4 <_cupsLangPuts@plt>
    3868:	ldr	r1, [pc, #136]	; 38f8 <ippGetInteger@plt+0x192c>
    386c:	ldr	r0, [r4]
    3870:	add	r1, pc, r1
    3874:	bl	1aa4 <_cupsLangPuts@plt>
    3878:	ldr	r1, [pc, #124]	; 38fc <ippGetInteger@plt+0x1930>
    387c:	ldr	r0, [r4]
    3880:	add	r1, pc, r1
    3884:	bl	1aa4 <_cupsLangPuts@plt>
    3888:	mov	r0, #1
    388c:	bl	1aec <exit@plt>
    3890:			; <UNDEFINED> instruction: 0x0001f6bc
    3894:	andeq	r0, r0, ip, lsr r2
    3898:	muleq	r0, ip, r9
    389c:	andeq	fp, r0, r4, asr #19
    38a0:	andeq	fp, r0, r0, asr #19
    38a4:	ldrdeq	fp, [r0], -r8
    38a8:	andeq	fp, r0, r4, lsr #20
    38ac:	andeq	fp, r0, ip, lsr sl
    38b0:	andeq	fp, r0, ip, asr sl
    38b4:	andeq	fp, r0, ip, ror sl
    38b8:			; <UNDEFINED> instruction: 0x0000bab0
    38bc:	andeq	fp, r0, ip, ror #21
    38c0:	andeq	fp, r0, r8, lsl #22
    38c4:	andeq	fp, r0, r8, lsr fp
    38c8:	andeq	fp, r0, r4, lsl #23
    38cc:			; <UNDEFINED> instruction: 0x0000bbb0
    38d0:	andeq	fp, r0, r4, ror #23
    38d4:	andeq	fp, r0, r8, lsl #24
    38d8:	andeq	fp, r0, ip, lsr ip
    38dc:	andeq	fp, r0, ip, asr ip
    38e0:	andeq	fp, r0, r4, lsl #25
    38e4:	andeq	fp, r0, ip, lsr #25
    38e8:	ldrdeq	fp, [r0], -r8
    38ec:	andeq	fp, r0, r8, lsl sp
    38f0:	andeq	fp, r0, r0, asr #26
    38f4:	andeq	fp, r0, ip, ror sp
    38f8:	muleq	r0, r4, sp
    38fc:			; <UNDEFINED> instruction: 0x0000bdb8
    3900:	ldr	r1, [r1]
    3904:	ldr	r0, [r0]
    3908:	b	1a08 <_cups_strcasecmp@plt>
    390c:	ldr	ip, [pc, #504]	; 3b0c <ippGetInteger@plt+0x1b40>
    3910:	ldr	r3, [pc, #504]	; 3b10 <ippGetInteger@plt+0x1b44>
    3914:	add	ip, pc, ip
    3918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    391c:	sub	sp, sp, #1664	; 0x680
    3920:	ldr	r3, [ip, r3]
    3924:	sub	sp, sp, #4
    3928:	mov	r2, r3
    392c:	add	r6, sp, #64	; 0x40
    3930:	ldr	lr, [r2]
    3934:	mov	r4, #256	; 0x100
    3938:	str	r3, [sp, #36]	; 0x24
    393c:	sub	r7, r6, #4
    3940:	sub	r3, r6, #12
    3944:	add	fp, sp, #636	; 0x27c
    3948:	add	r5, sp, #380	; 0x17c
    394c:	add	r9, sp, #124	; 0x7c
    3950:	str	r1, [sp, #40]	; 0x28
    3954:	str	r3, [sp, #16]
    3958:	mov	r1, r0
    395c:	mov	r2, r7
    3960:	str	r4, [sp, #24]
    3964:	str	r4, [sp, #12]
    3968:	str	r4, [sp, #4]
    396c:	str	fp, [sp, #20]
    3970:	str	r5, [sp, #8]
    3974:	str	r9, [sp]
    3978:	mov	r3, #32
    397c:	mov	r0, #15
    3980:	str	lr, [sp, #1660]	; 0x67c
    3984:	bl	1b34 <httpSeparateURI@plt>
    3988:	cmp	r0, #0
    398c:	blt	3b00 <ippGetInteger@plt+0x1b34>
    3990:	add	r2, sp, #1392	; 0x570
    3994:	sub	r3, r6, #8
    3998:	add	r2, r2, #12
    399c:	add	r6, sp, #1136	; 0x470
    39a0:	mov	r0, r2
    39a4:	add	r8, sp, #92	; 0x5c
    39a8:	add	r6, r6, #12
    39ac:	add	sl, sp, #892	; 0x37c
    39b0:	str	r2, [sp, #44]	; 0x2c
    39b4:	str	r3, [sp, #16]
    39b8:	str	r0, [sp, #20]
    39bc:	str	r4, [sp, #24]
    39c0:	str	r4, [sp, #12]
    39c4:	str	r4, [sp, #4]
    39c8:	ldr	r1, [sp, #40]	; 0x28
    39cc:	mov	r2, r8
    39d0:	str	r6, [sp, #8]
    39d4:	str	sl, [sp]
    39d8:	mov	r3, #32
    39dc:	mov	r0, #15
    39e0:	bl	1b34 <httpSeparateURI@plt>
    39e4:	cmp	r0, #0
    39e8:	blt	3b00 <ippGetInteger@plt+0x1b34>
    39ec:	mov	r0, r5
    39f0:	bl	1e1c <strlen@plt>
    39f4:	sub	r0, r0, #1
    39f8:	add	r3, r5, r0
    39fc:	cmp	r3, r5
    3a00:	bls	3a14 <ippGetInteger@plt+0x1a48>
    3a04:	ldrb	r3, [r5, r0]
    3a08:	cmp	r3, #46	; 0x2e
    3a0c:	moveq	r3, #0
    3a10:	strbeq	r3, [r5, r0]
    3a14:	mov	r0, r6
    3a18:	bl	1e1c <strlen@plt>
    3a1c:	sub	r0, r0, #1
    3a20:	add	r3, r6, r0
    3a24:	cmp	r3, r6
    3a28:	bhi	3a74 <ippGetInteger@plt+0x1aa8>
    3a2c:	mov	r1, r8
    3a30:	mov	r0, r7
    3a34:	bl	1a08 <_cups_strcasecmp@plt>
    3a38:	cmp	r0, #0
    3a3c:	bne	3a54 <ippGetInteger@plt+0x1a88>
    3a40:	mov	r1, sl
    3a44:	mov	r0, r9
    3a48:	bl	1ec4 <strcmp@plt>
    3a4c:	cmp	r0, #0
    3a50:	beq	3a88 <ippGetInteger@plt+0x1abc>
    3a54:	ldr	r3, [sp, #36]	; 0x24
    3a58:	ldr	r2, [sp, #1660]	; 0x67c
    3a5c:	ldr	r3, [r3]
    3a60:	cmp	r2, r3
    3a64:	bne	3b08 <ippGetInteger@plt+0x1b3c>
    3a68:	add	sp, sp, #1664	; 0x680
    3a6c:	add	sp, sp, #4
    3a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3a74:	ldrb	r3, [r6, r0]
    3a78:	cmp	r3, #46	; 0x2e
    3a7c:	moveq	r3, #0
    3a80:	strbeq	r3, [r6, r0]
    3a84:	b	3a2c <ippGetInteger@plt+0x1a60>
    3a88:	mov	r1, r6
    3a8c:	mov	r0, r5
    3a90:	bl	1a08 <_cups_strcasecmp@plt>
    3a94:	cmp	r0, #0
    3a98:	bne	3a54 <ippGetInteger@plt+0x1a88>
    3a9c:	ldr	r0, [sp, #52]	; 0x34
    3aa0:	ldr	r3, [sp, #56]	; 0x38
    3aa4:	cmp	r0, r3
    3aa8:	subne	r0, r0, r3
    3aac:	bne	3a54 <ippGetInteger@plt+0x1a88>
    3ab0:	ldr	r1, [pc, #92]	; 3b14 <ippGetInteger@plt+0x1b48>
    3ab4:	mov	r0, r7
    3ab8:	add	r1, pc, r1
    3abc:	bl	1a08 <_cups_strcasecmp@plt>
    3ac0:	cmp	r0, #0
    3ac4:	beq	3af0 <ippGetInteger@plt+0x1b24>
    3ac8:	ldr	r1, [pc, #72]	; 3b18 <ippGetInteger@plt+0x1b4c>
    3acc:	mov	r0, r7
    3ad0:	add	r1, pc, r1
    3ad4:	bl	1a08 <_cups_strcasecmp@plt>
    3ad8:	cmp	r0, #0
    3adc:	beq	3af0 <ippGetInteger@plt+0x1b24>
    3ae0:	ldr	r1, [sp, #44]	; 0x2c
    3ae4:	mov	r0, fp
    3ae8:	bl	1ec4 <strcmp@plt>
    3aec:	b	3a54 <ippGetInteger@plt+0x1a88>
    3af0:	ldr	r1, [sp, #44]	; 0x2c
    3af4:	mov	r0, fp
    3af8:	bl	1a08 <_cups_strcasecmp@plt>
    3afc:	b	3a54 <ippGetInteger@plt+0x1a88>
    3b00:	mvn	r0, #0
    3b04:	b	3a54 <ippGetInteger@plt+0x1a88>
    3b08:	bl	1d14 <__stack_chk_fail@plt>
    3b0c:	andeq	pc, r1, r4, lsl #9
    3b10:	andeq	r0, r0, r4, lsr r2
    3b14:	andeq	fp, r0, r8, lsr #23
    3b18:	muleq	r0, r8, fp
    3b1c:	push	{r4, lr}
    3b20:	ldr	r4, [pc, #44]	; 3b54 <ippGetInteger@plt+0x1b88>
    3b24:	add	r4, pc, r4
    3b28:	ldr	r3, [r4, #4]
    3b2c:	cmp	r3, #2
    3b30:	bgt	3b4c <ippGetInteger@plt+0x1b80>
    3b34:	add	r3, r3, #1
    3b38:	ldr	r0, [r4, #8]
    3b3c:	str	r3, [r4, #4]
    3b40:	bl	1ed0 <cupsSetUser@plt>
    3b44:	ldr	r0, [r4, #12]
    3b48:	pop	{r4, pc}
    3b4c:	mov	r0, #0
    3b50:	pop	{r4, pc}
    3b54:	andeq	pc, r1, r8, ror #9
    3b58:	push	{r1, r2, r3}
    3b5c:	ldr	r3, [pc, #156]	; 3c00 <ippGetInteger@plt+0x1c34>
    3b60:	ldr	r2, [pc, #156]	; 3c04 <ippGetInteger@plt+0x1c38>
    3b64:	add	r3, pc, r3
    3b68:	push	{r4, r5, r6, lr}
    3b6c:	sub	sp, sp, #10240	; 0x2800
    3b70:	ldr	r5, [r3, r2]
    3b74:	sub	sp, sp, #20
    3b78:	add	r2, sp, #10240	; 0x2800
    3b7c:	add	r1, sp, #10240	; 0x2800
    3b80:	add	r1, r1, #36	; 0x24
    3b84:	ldr	r3, [r5]
    3b88:	add	r2, r2, #12
    3b8c:	subs	r6, r0, #0
    3b90:	ldr	r1, [r1]
    3b94:	str	r3, [r2]
    3b98:	beq	3bd0 <ippGetInteger@plt+0x1c04>
    3b9c:	add	ip, sp, #10240	; 0x2800
    3ba0:	add	ip, ip, #40	; 0x28
    3ba4:	mov	r3, #10240	; 0x2800
    3ba8:	add	r4, sp, #12
    3bac:	stm	sp, {r1, ip}
    3bb0:	mov	r0, r4
    3bb4:	mov	r1, r3
    3bb8:	mov	r2, #1
    3bbc:	str	ip, [sp, #8]
    3bc0:	bl	1b10 <__vsnprintf_chk@plt>
    3bc4:	mov	r1, r4
    3bc8:	mov	r0, r6
    3bcc:	bl	19d8 <cupsArrayAdd@plt>
    3bd0:	add	r3, sp, #10240	; 0x2800
    3bd4:	add	r3, r3, #12
    3bd8:	ldr	r2, [r3]
    3bdc:	ldr	r3, [r5]
    3be0:	cmp	r2, r3
    3be4:	bne	3bfc <ippGetInteger@plt+0x1c30>
    3be8:	add	sp, sp, #10240	; 0x2800
    3bec:	add	sp, sp, #20
    3bf0:	pop	{r4, r5, r6, lr}
    3bf4:	add	sp, sp, #12
    3bf8:	bx	lr
    3bfc:	bl	1d14 <__stack_chk_fail@plt>
    3c00:	andeq	pc, r1, r4, lsr r2	; <UNPREDICTABLE>
    3c04:	andeq	r0, r0, r4, lsr r2
    3c08:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3c0c:	subs	r8, r1, #0
    3c10:	mov	r6, r2
    3c14:	mov	r7, r0
    3c18:	beq	3dec <ippGetInteger@plt+0x1e20>
    3c1c:	ldr	r1, [pc, #588]	; 3e70 <ippGetInteger@plt+0x1ea4>
    3c20:	mov	r2, r8
    3c24:	add	r1, pc, r1
    3c28:	bl	1dc8 <cupsFilePrintf@plt>
    3c2c:	ldrb	r4, [r6]
    3c30:	cmp	r4, #0
    3c34:	beq	3cdc <ippGetInteger@plt+0x1d10>
    3c38:	ldr	fp, [pc, #564]	; 3e74 <ippGetInteger@plt+0x1ea8>
    3c3c:	ldr	sl, [pc, #564]	; 3e78 <ippGetInteger@plt+0x1eac>
    3c40:	ldr	r9, [pc, #564]	; 3e7c <ippGetInteger@plt+0x1eb0>
    3c44:	add	fp, pc, fp
    3c48:	add	sl, pc, sl
    3c4c:	add	r9, pc, r9
    3c50:	cmp	r4, #38	; 0x26
    3c54:	beq	3d08 <ippGetInteger@plt+0x1d3c>
    3c58:	cmp	r4, #60	; 0x3c
    3c5c:	beq	3d40 <ippGetInteger@plt+0x1d74>
    3c60:	cmp	r4, #62	; 0x3e
    3c64:	beq	3d54 <ippGetInteger@plt+0x1d88>
    3c68:	and	r3, r4, #224	; 0xe0
    3c6c:	cmp	r3, #192	; 0xc0
    3c70:	beq	3d1c <ippGetInteger@plt+0x1d50>
    3c74:	and	r3, r4, #240	; 0xf0
    3c78:	cmp	r3, #224	; 0xe0
    3c7c:	beq	3d68 <ippGetInteger@plt+0x1d9c>
    3c80:	and	r3, r4, #248	; 0xf8
    3c84:	cmp	r3, #240	; 0xf0
    3c88:	beq	3d9c <ippGetInteger@plt+0x1dd0>
    3c8c:	tst	r4, #128	; 0x80
    3c90:	bne	3cb4 <ippGetInteger@plt+0x1ce8>
    3c94:	cmp	r4, #31
    3c98:	bhi	3cf4 <ippGetInteger@plt+0x1d28>
    3c9c:	bl	1d8c <__ctype_b_loc@plt>
    3ca0:	lsl	r3, r4, #1
    3ca4:	ldr	r2, [r0]
    3ca8:	ldrh	r3, [r2, r3]
    3cac:	tst	r3, #8192	; 0x2000
    3cb0:	bne	3cf4 <ippGetInteger@plt+0x1d28>
    3cb4:	mov	r1, #63	; 0x3f
    3cb8:	mov	r0, r7
    3cbc:	mov	r5, r6
    3cc0:	bl	1c6c <cupsFilePutChar@plt>
    3cc4:	ldrb	r4, [r5, #1]
    3cc8:	add	r6, r5, #1
    3ccc:	cmp	r4, #0
    3cd0:	bne	3c50 <ippGetInteger@plt+0x1c84>
    3cd4:	cmp	r8, #0
    3cd8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3cdc:	ldr	r1, [pc, #412]	; 3e80 <ippGetInteger@plt+0x1eb4>
    3ce0:	mov	r2, r8
    3ce4:	mov	r0, r7
    3ce8:	add	r1, pc, r1
    3cec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3cf0:	b	1dc8 <cupsFilePrintf@plt>
    3cf4:	mov	r1, r4
    3cf8:	mov	r0, r7
    3cfc:	bl	1c6c <cupsFilePutChar@plt>
    3d00:	mov	r5, r6
    3d04:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d08:	mov	r1, r9
    3d0c:	mov	r0, r7
    3d10:	mov	r5, r6
    3d14:	bl	1ee8 <cupsFilePuts@plt>
    3d18:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d1c:	ldrb	r3, [r6, #1]
    3d20:	add	r5, r6, #1
    3d24:	and	r3, r3, #192	; 0xc0
    3d28:	cmp	r3, #128	; 0x80
    3d2c:	beq	3dd0 <ippGetInteger@plt+0x1e04>
    3d30:	mov	r1, #63	; 0x3f
    3d34:	mov	r0, r7
    3d38:	bl	1c6c <cupsFilePutChar@plt>
    3d3c:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d40:	mov	r1, sl
    3d44:	mov	r0, r7
    3d48:	mov	r5, r6
    3d4c:	bl	1ee8 <cupsFilePuts@plt>
    3d50:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d54:	mov	r1, fp
    3d58:	mov	r0, r7
    3d5c:	mov	r5, r6
    3d60:	bl	1ee8 <cupsFilePuts@plt>
    3d64:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d68:	ldrb	r3, [r6, #1]
    3d6c:	and	r3, r3, #192	; 0xc0
    3d70:	cmp	r3, #128	; 0x80
    3d74:	bne	3d88 <ippGetInteger@plt+0x1dbc>
    3d78:	ldrb	r3, [r6, #2]
    3d7c:	and	r3, r3, #192	; 0xc0
    3d80:	cmp	r3, #128	; 0x80
    3d84:	beq	3e44 <ippGetInteger@plt+0x1e78>
    3d88:	mov	r1, #63	; 0x3f
    3d8c:	mov	r0, r7
    3d90:	add	r5, r6, #2
    3d94:	bl	1c6c <cupsFilePutChar@plt>
    3d98:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3d9c:	ldrb	r3, [r6, #1]
    3da0:	and	r3, r3, #192	; 0xc0
    3da4:	cmp	r3, #128	; 0x80
    3da8:	bne	3dbc <ippGetInteger@plt+0x1df0>
    3dac:	ldrb	r3, [r6, #2]
    3db0:	and	r3, r3, #192	; 0xc0
    3db4:	cmp	r3, #128	; 0x80
    3db8:	beq	3dfc <ippGetInteger@plt+0x1e30>
    3dbc:	mov	r1, #63	; 0x3f
    3dc0:	mov	r0, r7
    3dc4:	add	r5, r6, #3
    3dc8:	bl	1c6c <cupsFilePutChar@plt>
    3dcc:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3dd0:	mov	r1, r4
    3dd4:	mov	r0, r7
    3dd8:	bl	1c6c <cupsFilePutChar@plt>
    3ddc:	ldrb	r1, [r6, #1]
    3de0:	mov	r0, r7
    3de4:	bl	1c6c <cupsFilePutChar@plt>
    3de8:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3dec:	ldrb	r4, [r2]
    3df0:	cmp	r4, #0
    3df4:	bne	3c38 <ippGetInteger@plt+0x1c6c>
    3df8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3dfc:	ldrb	r3, [r6, #3]
    3e00:	and	r3, r3, #192	; 0xc0
    3e04:	cmp	r3, #128	; 0x80
    3e08:	bne	3dbc <ippGetInteger@plt+0x1df0>
    3e0c:	mov	r1, r4
    3e10:	mov	r0, r7
    3e14:	bl	1c6c <cupsFilePutChar@plt>
    3e18:	ldrb	r1, [r6, #1]
    3e1c:	mov	r0, r7
    3e20:	bl	1c6c <cupsFilePutChar@plt>
    3e24:	ldrb	r1, [r6, #2]
    3e28:	mov	r0, r7
    3e2c:	bl	1c6c <cupsFilePutChar@plt>
    3e30:	ldrb	r1, [r6, #3]
    3e34:	mov	r0, r7
    3e38:	add	r5, r6, #3
    3e3c:	bl	1c6c <cupsFilePutChar@plt>
    3e40:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3e44:	mov	r1, r4
    3e48:	mov	r0, r7
    3e4c:	bl	1c6c <cupsFilePutChar@plt>
    3e50:	ldrb	r1, [r6, #1]
    3e54:	mov	r0, r7
    3e58:	bl	1c6c <cupsFilePutChar@plt>
    3e5c:	ldrb	r1, [r6, #2]
    3e60:	mov	r0, r7
    3e64:	add	r5, r6, #2
    3e68:	bl	1c6c <cupsFilePutChar@plt>
    3e6c:	b	3cc4 <ippGetInteger@plt+0x1cf8>
    3e70:	andeq	fp, r0, r8, asr #20
    3e74:	andeq	fp, r0, r8, asr #20
    3e78:	andeq	fp, r0, ip, lsr sl
    3e7c:	andeq	fp, r0, r0, lsr sl
    3e80:	andeq	fp, r0, ip, lsl #19
    3e84:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e88:	cmp	r2, #1
    3e8c:	ldr	ip, [sp, #40]	; 0x28
    3e90:	mov	r8, r2
    3e94:	mov	r9, r0
    3e98:	mov	sl, r1
    3e9c:	mov	r5, r3
    3ea0:	ldr	r6, [ip]
    3ea4:	ble	3ec8 <ippGetInteger@plt+0x1efc>
    3ea8:	add	r2, ip, r2, lsl #2
    3eac:	mov	r1, ip
    3eb0:	sub	r2, r2, #4
    3eb4:	ldr	r3, [r1, #4]!
    3eb8:	cmp	r6, r3
    3ebc:	movcc	r6, r3
    3ec0:	cmp	r2, r1
    3ec4:	bne	3eb4 <ippGetInteger@plt+0x1ee8>
    3ec8:	add	r6, r6, #2
    3ecc:	mov	r0, r6
    3ed0:	bl	1e10 <malloc@plt>
    3ed4:	subs	r7, r0, #0
    3ed8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3edc:	cmp	sl, #0
    3ee0:	beq	3ff0 <ippGetInteger@plt+0x2024>
    3ee4:	cmp	r8, #0
    3ee8:	ble	4024 <ippGetInteger@plt+0x2058>
    3eec:	add	r8, r5, r8, lsl #2
    3ef0:	mov	fp, #0
    3ef4:	mov	r4, sl
    3ef8:	strb	fp, [r7]
    3efc:	ldr	r3, [r4, #12]
    3f00:	subs	r0, r3, #0
    3f04:	beq	3f24 <ippGetInteger@plt+0x1f58>
    3f08:	ldr	r1, [r5]
    3f0c:	bl	1ec4 <strcmp@plt>
    3f10:	cmp	r0, #0
    3f14:	beq	3fdc <ippGetInteger@plt+0x2010>
    3f18:	ldr	r4, [r4]
    3f1c:	cmp	r4, #0
    3f20:	bne	3efc <ippGetInteger@plt+0x1f30>
    3f24:	mov	r1, #44	; 0x2c
    3f28:	mov	r0, r7
    3f2c:	bl	1f90 <strchr@plt>
    3f30:	cmp	r0, #0
    3f34:	bne	3f60 <ippGetInteger@plt+0x1f94>
    3f38:	mov	r1, #34	; 0x22
    3f3c:	mov	r0, r7
    3f40:	bl	1f90 <strchr@plt>
    3f44:	cmp	r0, #0
    3f48:	bne	3f60 <ippGetInteger@plt+0x1f94>
    3f4c:	mov	r1, #92	; 0x5c
    3f50:	mov	r0, r7
    3f54:	bl	1f90 <strchr@plt>
    3f58:	cmp	r0, #0
    3f5c:	beq	403c <ippGetInteger@plt+0x2070>
    3f60:	bl	1e94 <cupsFileStdout@plt>
    3f64:	mov	r1, #34	; 0x22
    3f68:	bl	1c6c <cupsFilePutChar@plt>
    3f6c:	ldrb	r3, [r7]
    3f70:	cmp	r3, #0
    3f74:	beq	3fb4 <ippGetInteger@plt+0x1fe8>
    3f78:	mov	r4, r7
    3f7c:	b	3f98 <ippGetInteger@plt+0x1fcc>
    3f80:	bl	1e94 <cupsFileStdout@plt>
    3f84:	ldrb	r1, [r4]
    3f88:	bl	1c6c <cupsFilePutChar@plt>
    3f8c:	ldrb	r3, [r4, #1]!
    3f90:	cmp	r3, #0
    3f94:	beq	3fb4 <ippGetInteger@plt+0x1fe8>
    3f98:	cmp	r3, #34	; 0x22
    3f9c:	cmpne	r3, #92	; 0x5c
    3fa0:	bne	3f80 <ippGetInteger@plt+0x1fb4>
    3fa4:	bl	1e94 <cupsFileStdout@plt>
    3fa8:	mov	r1, #92	; 0x5c
    3fac:	bl	1c6c <cupsFilePutChar@plt>
    3fb0:	b	3f80 <ippGetInteger@plt+0x1fb4>
    3fb4:	bl	1e94 <cupsFileStdout@plt>
    3fb8:	mov	r1, #34	; 0x22
    3fbc:	bl	1c6c <cupsFilePutChar@plt>
    3fc0:	add	r5, r5, #4
    3fc4:	cmp	r8, r5
    3fc8:	beq	4024 <ippGetInteger@plt+0x2058>
    3fcc:	mov	r1, #44	; 0x2c
    3fd0:	mov	r0, r9
    3fd4:	bl	1c6c <cupsFilePutChar@plt>
    3fd8:	b	3ef4 <ippGetInteger@plt+0x1f28>
    3fdc:	mov	r0, r4
    3fe0:	mov	r2, r6
    3fe4:	mov	r1, r7
    3fe8:	bl	1ca8 <ippAttributeString@plt>
    3fec:	b	3f24 <ippGetInteger@plt+0x1f58>
    3ff0:	cmp	r8, #0
    3ff4:	ble	4024 <ippGetInteger@plt+0x2058>
    3ff8:	sub	r5, r5, #4
    3ffc:	add	r8, r5, r8, lsl #2
    4000:	b	4010 <ippGetInteger@plt+0x2044>
    4004:	bl	1e94 <cupsFileStdout@plt>
    4008:	mov	r1, #44	; 0x2c
    400c:	bl	1c6c <cupsFilePutChar@plt>
    4010:	ldr	r1, [r5, #4]!
    4014:	mov	r0, r9
    4018:	bl	1ee8 <cupsFilePuts@plt>
    401c:	cmp	r8, r5
    4020:	bne	4004 <ippGetInteger@plt+0x2038>
    4024:	bl	1e94 <cupsFileStdout@plt>
    4028:	mov	r1, #10
    402c:	bl	1c6c <cupsFilePutChar@plt>
    4030:	mov	r0, r7
    4034:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4038:	b	1a2c <free@plt>
    403c:	mov	r1, r7
    4040:	mov	r0, r9
    4044:	bl	1ee8 <cupsFilePuts@plt>
    4048:	b	3fc0 <ippGetInteger@plt+0x1ff4>
    404c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4050:	sub	sp, sp, #12
    4054:	cmp	r2, #1
    4058:	ldr	r5, [sp, #48]	; 0x30
    405c:	mov	r7, r2
    4060:	mov	r8, r0
    4064:	mov	r9, r1
    4068:	mov	r4, r3
    406c:	ldr	r2, [r5]
    4070:	ble	4234 <ippGetInteger@plt+0x2268>
    4074:	add	ip, r5, r7, lsl #2
    4078:	sub	ip, ip, #4
    407c:	mov	r1, r5
    4080:	mov	r3, r2
    4084:	ldr	r0, [r1, #4]!
    4088:	cmp	r3, r0
    408c:	movcc	r3, r0
    4090:	cmp	r1, ip
    4094:	bne	4084 <ippGetInteger@plt+0x20b8>
    4098:	add	r3, r3, #2
    409c:	mov	r0, r3
    40a0:	str	r2, [sp]
    40a4:	str	r3, [sp, #4]
    40a8:	bl	1e10 <malloc@plt>
    40ac:	subs	r6, r0, #0
    40b0:	beq	422c <ippGetInteger@plt+0x2260>
    40b4:	cmp	r9, #0
    40b8:	ldr	r2, [sp]
    40bc:	beq	4184 <ippGetInteger@plt+0x21b8>
    40c0:	cmp	r7, #0
    40c4:	ble	4168 <ippGetInteger@plt+0x219c>
    40c8:	add	r7, r5, r7, lsl #2
    40cc:	ldr	r3, [pc, #360]	; 423c <ippGetInteger@plt+0x2270>
    40d0:	sub	r7, r7, #4
    40d4:	sub	r5, r5, #4
    40d8:	mov	fp, #0
    40dc:	add	r3, pc, r3
    40e0:	str	r3, [sp]
    40e4:	mov	sl, r9
    40e8:	strb	fp, [r6]
    40ec:	ldr	r3, [sl, #12]
    40f0:	subs	r0, r3, #0
    40f4:	beq	4114 <ippGetInteger@plt+0x2148>
    40f8:	ldr	r1, [r4]
    40fc:	bl	1ec4 <strcmp@plt>
    4100:	cmp	r0, #0
    4104:	beq	4148 <ippGetInteger@plt+0x217c>
    4108:	ldr	sl, [sl]
    410c:	cmp	sl, #0
    4110:	bne	40ec <ippGetInteger@plt+0x2120>
    4114:	ldr	r2, [r5, #4]!
    4118:	mov	r3, r6
    411c:	rsb	r2, r2, #0
    4120:	ldr	r1, [sp]
    4124:	mov	r0, r8
    4128:	bl	1dc8 <cupsFilePrintf@plt>
    412c:	cmp	r7, r5
    4130:	add	r4, r4, #4
    4134:	beq	4168 <ippGetInteger@plt+0x219c>
    4138:	bl	1e94 <cupsFileStdout@plt>
    413c:	mov	r1, #32
    4140:	bl	1c6c <cupsFilePutChar@plt>
    4144:	b	40e4 <ippGetInteger@plt+0x2118>
    4148:	mov	r0, sl
    414c:	ldr	r2, [sp, #4]
    4150:	mov	r1, r6
    4154:	bl	1ca8 <ippAttributeString@plt>
    4158:	b	4114 <ippGetInteger@plt+0x2148>
    415c:	bl	1e94 <cupsFileStdout@plt>
    4160:	mov	r1, #10
    4164:	bl	1c6c <cupsFilePutChar@plt>
    4168:	bl	1e94 <cupsFileStdout@plt>
    416c:	mov	r1, #10
    4170:	bl	1c6c <cupsFilePutChar@plt>
    4174:	mov	r0, r6
    4178:	add	sp, sp, #12
    417c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4180:	b	1a2c <free@plt>
    4184:	cmp	r7, #0
    4188:	ble	415c <ippGetInteger@plt+0x2190>
    418c:	ldr	sl, [pc, #172]	; 4240 <ippGetInteger@plt+0x2274>
    4190:	sub	r4, r4, #4
    4194:	add	fp, r4, r7, lsl #2
    4198:	mov	r9, r5
    419c:	add	sl, pc, sl
    41a0:	b	41b4 <ippGetInteger@plt+0x21e8>
    41a4:	bl	1e94 <cupsFileStdout@plt>
    41a8:	mov	r1, #32
    41ac:	bl	1c6c <cupsFilePutChar@plt>
    41b0:	ldr	r2, [r9, #4]!
    41b4:	ldr	r3, [r4, #4]!
    41b8:	rsb	r2, r2, #0
    41bc:	mov	r1, sl
    41c0:	mov	r0, r8
    41c4:	bl	1dc8 <cupsFilePrintf@plt>
    41c8:	cmp	r4, fp
    41cc:	bne	41a4 <ippGetInteger@plt+0x21d8>
    41d0:	bl	1e94 <cupsFileStdout@plt>
    41d4:	mov	r4, #0
    41d8:	mov	r1, #10
    41dc:	sub	r5, r5, #4
    41e0:	bl	1c6c <cupsFilePutChar@plt>
    41e4:	mov	r9, r4
    41e8:	b	41f8 <ippGetInteger@plt+0x222c>
    41ec:	bl	1e94 <cupsFileStdout@plt>
    41f0:	mov	r1, #32
    41f4:	bl	1c6c <cupsFilePutChar@plt>
    41f8:	ldr	r2, [r5, #4]!
    41fc:	mov	r1, #45	; 0x2d
    4200:	mov	r0, r6
    4204:	bl	1bb8 <memset@plt>
    4208:	ldr	r3, [r5]
    420c:	add	r4, r4, #1
    4210:	mov	r1, r6
    4214:	strb	r9, [r6, r3]
    4218:	mov	r0, r8
    421c:	bl	1ee8 <cupsFilePuts@plt>
    4220:	cmp	r7, r4
    4224:	bne	41ec <ippGetInteger@plt+0x2220>
    4228:	b	4168 <ippGetInteger@plt+0x219c>
    422c:	add	sp, sp, #12
    4230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4234:	mov	r3, r2
    4238:	b	4098 <ippGetInteger@plt+0x20cc>
    423c:			; <UNDEFINED> instruction: 0x0000b5b8
    4240:	strdeq	fp, [r0], -r8
    4244:	ldr	ip, [pc, #988]	; 4628 <ippGetInteger@plt+0x265c>
    4248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    424c:	add	ip, pc, ip
    4250:	ldr	lr, [pc, #980]	; 462c <ippGetInteger@plt+0x2660>
    4254:	mov	r4, r1
    4258:	mov	r1, ip
    425c:	ldr	ip, [ip, lr]
    4260:	ldr	r8, [pc, #968]	; 4630 <ippGetInteger@plt+0x2664>
    4264:	ldr	r9, [pc, #968]	; 4634 <ippGetInteger@plt+0x2668>
    4268:	ldr	fp, [pc, #968]	; 4638 <ippGetInteger@plt+0x266c>
    426c:	sub	r3, r3, #1
    4270:	sub	sp, sp, #300	; 0x12c
    4274:	add	r7, r4, r3
    4278:	mov	sl, r0
    427c:	ldr	r3, [ip]
    4280:	mov	r5, r2
    4284:	add	r8, pc, r8
    4288:	add	r9, pc, r9
    428c:	add	fp, pc, fp
    4290:	str	ip, [sp, #12]
    4294:	str	r3, [sp, #292]	; 0x124
    4298:	ldrb	r2, [r5]
    429c:	cmp	r4, r7
    42a0:	movcs	r3, #0
    42a4:	movcc	r3, #1
    42a8:	cmp	r2, #0
    42ac:	moveq	r3, #0
    42b0:	cmp	r3, #0
    42b4:	beq	4394 <ippGetInteger@plt+0x23c8>
    42b8:	cmp	r2, #36	; 0x24
    42bc:	addne	r5, r5, #1
    42c0:	strbne	r2, [r4], #1
    42c4:	bne	4298 <ippGetInteger@plt+0x22cc>
    42c8:	mov	r2, #2
    42cc:	mov	r1, r8
    42d0:	mov	r0, r5
    42d4:	bl	1a80 <strncmp@plt>
    42d8:	cmp	r0, #0
    42dc:	bne	430c <ippGetInteger@plt+0x2340>
    42e0:	ldr	r1, [pc, #852]	; 463c <ippGetInteger@plt+0x2670>
    42e4:	add	r5, r5, #2
    42e8:	add	r1, pc, r1
    42ec:	sub	r2, r7, r4
    42f0:	add	r2, r2, #1
    42f4:	mov	r0, r4
    42f8:	bl	1e64 <_cups_strlcpy@plt>
    42fc:	mov	r0, r4
    4300:	bl	1e1c <strlen@plt>
    4304:	add	r4, r4, r0
    4308:	b	4298 <ippGetInteger@plt+0x22cc>
    430c:	mov	r2, #5
    4310:	mov	r1, r9
    4314:	mov	r0, r5
    4318:	bl	1a80 <strncmp@plt>
    431c:	cmp	r0, #0
    4320:	beq	4544 <ippGetInteger@plt+0x2578>
    4324:	ldrb	r3, [r5, #1]
    4328:	cmp	r3, #123	; 0x7b
    432c:	bne	43b4 <ippGetInteger@plt+0x23e8>
    4330:	add	r6, sp, #36	; 0x24
    4334:	add	r5, r5, #2
    4338:	mov	r1, r5
    433c:	mov	r2, #256	; 0x100
    4340:	mov	r0, r6
    4344:	bl	1e64 <_cups_strlcpy@plt>
    4348:	mov	r0, r6
    434c:	mov	r1, #125	; 0x7d
    4350:	bl	1f90 <strchr@plt>
    4354:	cmp	r0, #0
    4358:	beq	4434 <ippGetInteger@plt+0x2468>
    435c:	sub	r3, r0, r6
    4360:	add	r3, r3, #1
    4364:	add	r5, r5, r3
    4368:	mov	r2, #0
    436c:	strb	r2, [r0]
    4370:	mov	r1, fp
    4374:	mov	r0, r6
    4378:	bl	1ec4 <strcmp@plt>
    437c:	cmp	r0, #0
    4380:	bne	4448 <ippGetInteger@plt+0x247c>
    4384:	ldr	r1, [sl]
    4388:	cmp	r1, #0
    438c:	beq	4298 <ippGetInteger@plt+0x22cc>
    4390:	b	42ec <ippGetInteger@plt+0x2320>
    4394:	strb	r3, [r4]
    4398:	ldr	r3, [sp, #12]
    439c:	ldr	r2, [sp, #292]	; 0x124
    43a0:	ldr	r3, [r3]
    43a4:	cmp	r2, r3
    43a8:	bne	4624 <ippGetInteger@plt+0x2658>
    43ac:	add	sp, sp, #300	; 0x12c
    43b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    43b4:	add	r3, r5, #1
    43b8:	add	r6, sp, #36	; 0x24
    43bc:	mov	r1, r3
    43c0:	mov	r2, #256	; 0x100
    43c4:	mov	r0, r6
    43c8:	str	r3, [sp, #16]
    43cc:	bl	1e64 <_cups_strlcpy@plt>
    43d0:	ldrb	r2, [sp, #36]	; 0x24
    43d4:	ldr	r3, [sp, #16]
    43d8:	cmp	r2, #0
    43dc:	str	r2, [sp, #20]
    43e0:	beq	45c4 <ippGetInteger@plt+0x25f8>
    43e4:	bl	1d8c <__ctype_b_loc@plt>
    43e8:	ldr	r2, [sp, #20]
    43ec:	mov	r1, r6
    43f0:	ldr	r0, [r0]
    43f4:	lsl	r3, r2, #1
    43f8:	cmp	r2, #45	; 0x2d
    43fc:	cmpne	r2, #95	; 0x5f
    4400:	ldrh	r3, [r0, r3]
    4404:	movne	r2, #1
    4408:	moveq	r2, #0
    440c:	eor	r3, r3, #8
    4410:	ands	r3, r2, r3, lsr #3
    4414:	bne	452c <ippGetInteger@plt+0x2560>
    4418:	ldrb	r2, [r1, #1]!
    441c:	cmp	r2, #0
    4420:	bne	43f4 <ippGetInteger@plt+0x2428>
    4424:	sub	r1, r1, r6
    4428:	add	r1, r1, #1
    442c:	add	r5, r5, r1
    4430:	b	4370 <ippGetInteger@plt+0x23a4>
    4434:	mov	r0, r6
    4438:	bl	1e1c <strlen@plt>
    443c:	add	r0, r0, #1
    4440:	add	r5, r5, r0
    4444:	b	4370 <ippGetInteger@plt+0x23a4>
    4448:	ldr	r1, [pc, #496]	; 4640 <ippGetInteger@plt+0x2674>
    444c:	mov	r0, r6
    4450:	add	r1, pc, r1
    4454:	bl	1ec4 <strcmp@plt>
    4458:	cmp	r0, #0
    445c:	ldreq	r1, [sl, #4]
    4460:	beq	4388 <ippGetInteger@plt+0x23bc>
    4464:	ldr	r1, [pc, #472]	; 4644 <ippGetInteger@plt+0x2678>
    4468:	mov	r0, r6
    446c:	add	r1, pc, r1
    4470:	bl	1ec4 <strcmp@plt>
    4474:	cmp	r0, #0
    4478:	beq	4524 <ippGetInteger@plt+0x2558>
    447c:	ldr	r1, [pc, #452]	; 4648 <ippGetInteger@plt+0x267c>
    4480:	mov	r0, r6
    4484:	add	r1, pc, r1
    4488:	bl	1ec4 <strcmp@plt>
    448c:	cmp	r0, #0
    4490:	beq	4524 <ippGetInteger@plt+0x2558>
    4494:	ldr	r1, [pc, #432]	; 464c <ippGetInteger@plt+0x2680>
    4498:	mov	r0, r6
    449c:	add	r1, pc, r1
    44a0:	bl	1ec4 <strcmp@plt>
    44a4:	cmp	r0, #0
    44a8:	addeq	r1, sl, #72	; 0x48
    44ac:	beq	42ec <ippGetInteger@plt+0x2320>
    44b0:	ldr	r1, [pc, #408]	; 4650 <ippGetInteger@plt+0x2684>
    44b4:	mov	r0, r6
    44b8:	add	r1, pc, r1
    44bc:	bl	1ec4 <strcmp@plt>
    44c0:	cmp	r0, #0
    44c4:	addeq	r1, sl, #328	; 0x148
    44c8:	beq	42ec <ippGetInteger@plt+0x2320>
    44cc:	ldr	r1, [pc, #384]	; 4654 <ippGetInteger@plt+0x2688>
    44d0:	mov	r0, r6
    44d4:	add	r1, pc, r1
    44d8:	bl	1ec4 <strcmp@plt>
    44dc:	cmp	r0, #0
    44e0:	beq	45d4 <ippGetInteger@plt+0x2608>
    44e4:	ldr	r1, [pc, #364]	; 4658 <ippGetInteger@plt+0x268c>
    44e8:	mov	r0, r6
    44ec:	add	r1, pc, r1
    44f0:	bl	1ec4 <strcmp@plt>
    44f4:	cmp	r0, #0
    44f8:	addeq	r1, sl, #584	; 0x248
    44fc:	beq	42ec <ippGetInteger@plt+0x2320>
    4500:	ldr	r1, [pc, #340]	; 465c <ippGetInteger@plt+0x2690>
    4504:	mov	r0, r6
    4508:	add	r1, pc, r1
    450c:	bl	1ec4 <strcmp@plt>
    4510:	cmp	r0, #0
    4514:	bne	4604 <ippGetInteger@plt+0x2638>
    4518:	bl	1ce4 <cupsUser@plt>
    451c:	mov	r1, r0
    4520:	b	4388 <ippGetInteger@plt+0x23bc>
    4524:	add	r1, sl, #8
    4528:	b	42ec <ippGetInteger@plt+0x2320>
    452c:	sub	r3, r1, r6
    4530:	add	r3, r3, #1
    4534:	mov	r2, #0
    4538:	add	r5, r5, r3
    453c:	strb	r2, [r1]
    4540:	b	4370 <ippGetInteger@plt+0x23a4>
    4544:	add	r3, r5, #5
    4548:	add	r6, sp, #36	; 0x24
    454c:	mov	r1, r3
    4550:	mov	r2, #256	; 0x100
    4554:	mov	r0, r6
    4558:	str	r3, [sp, #16]
    455c:	bl	1e64 <_cups_strlcpy@plt>
    4560:	ldrb	r2, [sp, #36]	; 0x24
    4564:	ldr	r3, [sp, #16]
    4568:	cmp	r2, #0
    456c:	beq	45cc <ippGetInteger@plt+0x2600>
    4570:	cmp	r2, #93	; 0x5d
    4574:	mov	r2, r6
    4578:	bne	459c <ippGetInteger@plt+0x25d0>
    457c:	mov	r3, #0
    4580:	strb	r3, [r2], #1
    4584:	sub	r2, r2, r6
    4588:	add	r3, r2, #5
    458c:	add	r5, r5, r3
    4590:	b	45b4 <ippGetInteger@plt+0x25e8>
    4594:	cmp	r3, #93	; 0x5d
    4598:	beq	457c <ippGetInteger@plt+0x25b0>
    459c:	ldrb	r3, [r2, #1]!
    45a0:	cmp	r3, #0
    45a4:	bne	4594 <ippGetInteger@plt+0x25c8>
    45a8:	sub	r3, r2, r6
    45ac:	add	r3, r3, #5
    45b0:	add	r5, r5, r3
    45b4:	mov	r0, r6
    45b8:	bl	1f54 <getenv@plt>
    45bc:	mov	r1, r0
    45c0:	b	4388 <ippGetInteger@plt+0x23bc>
    45c4:	mov	r5, r3
    45c8:	b	4370 <ippGetInteger@plt+0x23a4>
    45cc:	mov	r5, r3
    45d0:	b	45b4 <ippGetInteger@plt+0x25e8>
    45d4:	ldr	r2, [pc, #132]	; 4660 <ippGetInteger@plt+0x2694>
    45d8:	ldr	r1, [sl, #1608]	; 0x648
    45dc:	add	r2, pc, r2
    45e0:	mov	r3, #256	; 0x100
    45e4:	str	r1, [sp, #4]
    45e8:	str	r2, [sp]
    45ec:	mov	r1, r3
    45f0:	mov	r2, #1
    45f4:	mov	r0, r6
    45f8:	bl	1e28 <__snprintf_chk@plt>
    45fc:	mov	r1, r6
    4600:	b	42ec <ippGetInteger@plt+0x2320>
    4604:	add	r1, sp, #28
    4608:	ldr	r0, [sl, #1628]	; 0x65c
    460c:	str	r6, [sp, #28]
    4610:	bl	1b94 <cupsArrayFind@plt>
    4614:	cmp	r0, #0
    4618:	beq	4298 <ippGetInteger@plt+0x22cc>
    461c:	ldr	r1, [r0, #4]
    4620:	b	4388 <ippGetInteger@plt+0x23bc>
    4624:	bl	1d14 <__stack_chk_fail@plt>
    4628:	andeq	lr, r1, ip, asr #22
    462c:	andeq	r0, r0, r4, lsr r2
    4630:	andeq	fp, r0, r8, lsl r4
    4634:	andeq	fp, r0, r8, lsl r4
    4638:	andeq	sp, r0, r4, asr #18
    463c:			; <UNDEFINED> instruction: 0x0000b3b0
    4640:	andeq	fp, r0, r8, asr r2
    4644:	andeq	fp, r0, r8, asr #4
    4648:	andeq	fp, r0, r8, lsr r2
    464c:	andeq	fp, r0, r8, lsr #4
    4650:	andeq	fp, r0, r8, lsl r2
    4654:	andeq	fp, r0, r8, lsl #4
    4658:	strdeq	fp, [r0], -r8
    465c:	andeq	fp, r0, r8, ror #3
    4660:	andeq	ip, r0, r0, lsr #2
    4664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4668:	mov	r5, r0
    466c:	mov	r9, r1
    4670:	mov	r8, r2
    4674:	mov	r7, r3
    4678:	bl	1d8c <__ctype_b_loc@plt>
    467c:	mov	r6, r0
    4680:	b	468c <ippGetInteger@plt+0x26c0>
    4684:	cmp	r4, #10
    4688:	beq	46e4 <ippGetInteger@plt+0x2718>
    468c:	mov	r0, r5
    4690:	ldr	sl, [r6]
    4694:	bl	1eac <cupsFileGetChar@plt>
    4698:	lsl	r3, r0, #1
    469c:	mov	r4, r0
    46a0:	ldrh	r0, [sl, r3]
    46a4:	ands	r0, r0, #8192	; 0x2000
    46a8:	bne	4684 <ippGetInteger@plt+0x26b8>
    46ac:	cmn	r4, #1
    46b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    46b4:	cmp	r4, #34	; 0x22
    46b8:	cmpne	r4, #39	; 0x27
    46bc:	moveq	r3, #1
    46c0:	movne	r3, #0
    46c4:	beq	46f4 <ippGetInteger@plt+0x2728>
    46c8:	cmp	r4, #35	; 0x23
    46cc:	bne	4780 <ippGetInteger@plt+0x27b4>
    46d0:	mov	r0, r5
    46d4:	bl	1eac <cupsFileGetChar@plt>
    46d8:	cmn	r0, #1
    46dc:	cmpne	r0, #10
    46e0:	bne	46d0 <ippGetInteger@plt+0x2704>
    46e4:	ldr	r3, [r7]
    46e8:	add	r3, r3, #1
    46ec:	str	r3, [r7]
    46f0:	b	468c <ippGetInteger@plt+0x26c0>
    46f4:	sub	r7, r8, #1
    46f8:	add	r7, r9, r7
    46fc:	mov	r6, r9
    4700:	mov	r0, r5
    4704:	bl	1eac <cupsFileGetChar@plt>
    4708:	cmn	r0, #1
    470c:	mov	r3, r0
    4710:	beq	4770 <ippGetInteger@plt+0x27a4>
    4714:	cmp	r3, #92	; 0x5c
    4718:	beq	4730 <ippGetInteger@plt+0x2764>
    471c:	cmp	r4, r3
    4720:	beq	4770 <ippGetInteger@plt+0x27a4>
    4724:	cmp	r6, r7
    4728:	strbcc	r3, [r6], #1
    472c:	b	4700 <ippGetInteger@plt+0x2734>
    4730:	cmp	r6, r7
    4734:	bcs	4764 <ippGetInteger@plt+0x2798>
    4738:	mov	r8, r6
    473c:	mov	r0, r5
    4740:	strb	r3, [r8], #1
    4744:	bl	1eac <cupsFileGetChar@plt>
    4748:	cmn	r0, #1
    474c:	beq	47a4 <ippGetInteger@plt+0x27d8>
    4750:	cmp	r7, r8
    4754:	bls	47a4 <ippGetInteger@plt+0x27d8>
    4758:	strb	r0, [r6, #1]
    475c:	add	r6, r6, #2
    4760:	b	4700 <ippGetInteger@plt+0x2734>
    4764:	mov	r0, r5
    4768:	bl	1eac <cupsFileGetChar@plt>
    476c:	b	4700 <ippGetInteger@plt+0x2734>
    4770:	mov	r3, #0
    4774:	mov	r0, r9
    4778:	strb	r3, [r6]
    477c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4780:	sub	r2, r4, #123	; 0x7b
    4784:	bic	r2, r2, #2
    4788:	cmp	r2, #0
    478c:	cmpne	r4, #44	; 0x2c
    4790:	bne	47ac <ippGetInteger@plt+0x27e0>
    4794:	strb	r4, [r9]
    4798:	strb	r3, [r9, #1]
    479c:	mov	r0, r9
    47a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    47a4:	mov	r6, r8
    47a8:	b	4700 <ippGetInteger@plt+0x2734>
    47ac:	mov	r0, r5
    47b0:	bl	1abc <cupsFileTell@plt>
    47b4:	sub	r8, r8, #1
    47b8:	mov	r4, r9
    47bc:	add	r8, r9, r8
    47c0:	subs	r2, r0, #1
    47c4:	sbc	r3, r1, #0
    47c8:	mov	r0, r5
    47cc:	bl	1f84 <cupsFileSeek@plt>
    47d0:	b	47f4 <ippGetInteger@plt+0x2828>
    47d4:	ldr	r2, [r6]
    47d8:	ldrh	r3, [r2, r3]
    47dc:	tst	r3, #8192	; 0x2000
    47e0:	bne	4818 <ippGetInteger@plt+0x284c>
    47e4:	cmp	r0, #35	; 0x23
    47e8:	beq	4834 <ippGetInteger@plt+0x2868>
    47ec:	cmp	r4, r8
    47f0:	strbcc	r0, [r4], #1
    47f4:	mov	r0, r5
    47f8:	bl	1eac <cupsFileGetChar@plt>
    47fc:	cmn	r0, #1
    4800:	lsl	r3, r0, #1
    4804:	bne	47d4 <ippGetInteger@plt+0x2808>
    4808:	mov	r3, #0
    480c:	mov	r0, r9
    4810:	strb	r3, [r4]
    4814:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4818:	cmp	r0, #35	; 0x23
    481c:	beq	4834 <ippGetInteger@plt+0x2868>
    4820:	cmp	r0, #10
    4824:	ldreq	r3, [r7]
    4828:	addeq	r3, r3, #1
    482c:	streq	r3, [r7]
    4830:	b	4808 <ippGetInteger@plt+0x283c>
    4834:	mov	r0, r5
    4838:	bl	1abc <cupsFileTell@plt>
    483c:	subs	r2, r0, #1
    4840:	sbc	r3, r1, #0
    4844:	mov	r0, r5
    4848:	bl	1f84 <cupsFileSeek@plt>
    484c:	b	4808 <ippGetInteger@plt+0x283c>
    4850:	tst	r0, #1
    4854:	and	r3, r0, #4
    4858:	beq	4880 <ippGetInteger@plt+0x28b4>
    485c:	cmp	r3, #0
    4860:	bne	48a4 <ippGetInteger@plt+0x28d8>
    4864:	tst	r0, #8
    4868:	bne	48d4 <ippGetInteger@plt+0x2908>
    486c:	tst	r0, #16
    4870:	beq	48b0 <ippGetInteger@plt+0x28e4>
    4874:	ldr	r0, [pc, #112]	; 48ec <ippGetInteger@plt+0x2920>
    4878:	add	r0, pc, r0
    487c:	bx	lr
    4880:	cmp	r3, #0
    4884:	bne	48c8 <ippGetInteger@plt+0x28fc>
    4888:	tst	r0, #8
    488c:	bne	48e0 <ippGetInteger@plt+0x2914>
    4890:	tst	r0, #16
    4894:	beq	48bc <ippGetInteger@plt+0x28f0>
    4898:	ldr	r0, [pc, #80]	; 48f0 <ippGetInteger@plt+0x2924>
    489c:	add	r0, pc, r0
    48a0:	bx	lr
    48a4:	ldr	r0, [pc, #72]	; 48f4 <ippGetInteger@plt+0x2928>
    48a8:	add	r0, pc, r0
    48ac:	bx	lr
    48b0:	ldr	r0, [pc, #64]	; 48f8 <ippGetInteger@plt+0x292c>
    48b4:	add	r0, pc, r0
    48b8:	bx	lr
    48bc:	ldr	r0, [pc, #56]	; 48fc <ippGetInteger@plt+0x2930>
    48c0:	add	r0, pc, r0
    48c4:	bx	lr
    48c8:	ldr	r0, [pc, #48]	; 4900 <ippGetInteger@plt+0x2934>
    48cc:	add	r0, pc, r0
    48d0:	bx	lr
    48d4:	ldr	r0, [pc, #40]	; 4904 <ippGetInteger@plt+0x2938>
    48d8:	add	r0, pc, r0
    48dc:	bx	lr
    48e0:	ldr	r0, [pc, #32]	; 4908 <ippGetInteger@plt+0x293c>
    48e4:	add	r0, pc, r0
    48e8:	bx	lr
    48ec:	andeq	sl, r0, ip, lsl #29
    48f0:	andeq	sl, r0, ip, asr lr
    48f4:	muleq	r0, r0, lr
    48f8:	andeq	sl, r0, r4, ror #28
    48fc:			; <UNDEFINED> instruction: 0x0000aeb0
    4900:	muleq	r0, r4, lr
    4904:	andeq	sl, r0, r4, ror lr
    4908:	andeq	sl, r0, r4, asr #28
    490c:	ldr	r1, [pc, #236]	; 4a00 <ippGetInteger@plt+0x2a34>
    4910:	push	{r4, lr}
    4914:	add	r1, pc, r1
    4918:	mov	r4, r0
    491c:	bl	1ee8 <cupsFilePuts@plt>
    4920:	ldr	r1, [pc, #220]	; 4a04 <ippGetInteger@plt+0x2a38>
    4924:	mov	r0, r4
    4928:	add	r1, pc, r1
    492c:	bl	1ee8 <cupsFilePuts@plt>
    4930:	ldr	r1, [pc, #208]	; 4a08 <ippGetInteger@plt+0x2a3c>
    4934:	mov	r0, r4
    4938:	add	r1, pc, r1
    493c:	bl	1ee8 <cupsFilePuts@plt>
    4940:	ldr	r1, [pc, #196]	; 4a0c <ippGetInteger@plt+0x2a40>
    4944:	mov	r0, r4
    4948:	add	r1, pc, r1
    494c:	bl	1ee8 <cupsFilePuts@plt>
    4950:	ldr	r1, [pc, #184]	; 4a10 <ippGetInteger@plt+0x2a44>
    4954:	mov	r0, r4
    4958:	add	r1, pc, r1
    495c:	bl	1ee8 <cupsFilePuts@plt>
    4960:	ldr	r1, [pc, #172]	; 4a14 <ippGetInteger@plt+0x2a48>
    4964:	mov	r0, r4
    4968:	add	r1, pc, r1
    496c:	bl	1ee8 <cupsFilePuts@plt>
    4970:	ldr	r1, [pc, #160]	; 4a18 <ippGetInteger@plt+0x2a4c>
    4974:	mov	r0, r4
    4978:	add	r1, pc, r1
    497c:	bl	1ee8 <cupsFilePuts@plt>
    4980:	ldr	r3, [pc, #148]	; 4a1c <ippGetInteger@plt+0x2a50>
    4984:	add	r3, pc, r3
    4988:	ldr	r3, [r3, #16]
    498c:	cmp	r3, #0
    4990:	beq	49a8 <ippGetInteger@plt+0x29dc>
    4994:	cmp	r3, #1
    4998:	beq	49f4 <ippGetInteger@plt+0x2a28>
    499c:	ldr	r2, [pc, #124]	; 4a20 <ippGetInteger@plt+0x2a54>
    49a0:	add	r2, pc, r2
    49a4:	b	49b0 <ippGetInteger@plt+0x29e4>
    49a8:	ldr	r2, [pc, #116]	; 4a24 <ippGetInteger@plt+0x2a58>
    49ac:	add	r2, pc, r2
    49b0:	ldr	r1, [pc, #112]	; 4a28 <ippGetInteger@plt+0x2a5c>
    49b4:	mov	r0, r4
    49b8:	add	r1, pc, r1
    49bc:	bl	1dc8 <cupsFilePrintf@plt>
    49c0:	ldr	r1, [pc, #100]	; 4a2c <ippGetInteger@plt+0x2a60>
    49c4:	mov	r0, r4
    49c8:	add	r1, pc, r1
    49cc:	bl	1ee8 <cupsFilePuts@plt>
    49d0:	ldr	r1, [pc, #88]	; 4a30 <ippGetInteger@plt+0x2a64>
    49d4:	mov	r0, r4
    49d8:	add	r1, pc, r1
    49dc:	bl	1ee8 <cupsFilePuts@plt>
    49e0:	ldr	r3, [pc, #76]	; 4a34 <ippGetInteger@plt+0x2a68>
    49e4:	mov	r2, #1
    49e8:	add	r3, pc, r3
    49ec:	str	r2, [r3, #20]
    49f0:	pop	{r4, pc}
    49f4:	ldr	r2, [pc, #60]	; 4a38 <ippGetInteger@plt+0x2a6c>
    49f8:	add	r2, pc, r2
    49fc:	b	49b0 <ippGetInteger@plt+0x29e4>
    4a00:	andeq	sl, r0, r0, lsl #29
    4a04:	muleq	r0, r4, lr
    4a08:	strdeq	sl, [r0], -r8
    4a0c:	andeq	sl, r0, r0, lsl #30
    4a10:	strdeq	sl, [r0], -r8
    4a14:	andeq	sl, r0, r4, lsl #30
    4a18:	andeq	sl, r0, r4, lsl pc
    4a1c:	andeq	lr, r1, r8, lsl #13
    4a20:	andeq	sl, r0, ip, ror #27
    4a24:	ldrdeq	sl, [r0], -r0
    4a28:	andeq	sl, r0, ip, ror #29
    4a2c:	strdeq	sl, [r0], -r4
    4a30:	strdeq	sl, [r0], -r8
    4a34:	andeq	lr, r1, r4, lsr #12
    4a38:	andeq	sl, r0, ip, lsl #27
    4a3c:	push	{r4, r5, r6, lr}
    4a40:	mov	r6, r1
    4a44:	ldr	r1, [pc, #160]	; 4aec <ippGetInteger@plt+0x2b20>
    4a48:	mov	r4, r0
    4a4c:	add	r1, pc, r1
    4a50:	mov	r5, r2
    4a54:	bl	1ee8 <cupsFilePuts@plt>
    4a58:	ldr	r1, [pc, #144]	; 4af0 <ippGetInteger@plt+0x2b24>
    4a5c:	mov	r0, r4
    4a60:	add	r1, pc, r1
    4a64:	bl	1ee8 <cupsFilePuts@plt>
    4a68:	cmp	r6, #0
    4a6c:	bne	4ae0 <ippGetInteger@plt+0x2b14>
    4a70:	ldr	r1, [pc, #124]	; 4af4 <ippGetInteger@plt+0x2b28>
    4a74:	add	r1, pc, r1
    4a78:	mov	r0, r4
    4a7c:	bl	1ee8 <cupsFilePuts@plt>
    4a80:	cmp	r5, #0
    4a84:	beq	4aac <ippGetInteger@plt+0x2ae0>
    4a88:	ldr	r1, [pc, #104]	; 4af8 <ippGetInteger@plt+0x2b2c>
    4a8c:	mov	r0, r4
    4a90:	add	r1, pc, r1
    4a94:	bl	1ee8 <cupsFilePuts@plt>
    4a98:	ldr	r1, [pc, #92]	; 4afc <ippGetInteger@plt+0x2b30>
    4a9c:	mov	r2, r5
    4aa0:	add	r1, pc, r1
    4aa4:	mov	r0, r4
    4aa8:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    4aac:	ldr	r1, [pc, #76]	; 4b00 <ippGetInteger@plt+0x2b34>
    4ab0:	mov	r0, r4
    4ab4:	add	r1, pc, r1
    4ab8:	bl	1ee8 <cupsFilePuts@plt>
    4abc:	ldr	r1, [pc, #64]	; 4b04 <ippGetInteger@plt+0x2b38>
    4ac0:	mov	r0, r4
    4ac4:	add	r1, pc, r1
    4ac8:	bl	1ee8 <cupsFilePuts@plt>
    4acc:	ldr	r3, [pc, #52]	; 4b08 <ippGetInteger@plt+0x2b3c>
    4ad0:	mov	r2, #0
    4ad4:	add	r3, pc, r3
    4ad8:	str	r2, [r3, #20]
    4adc:	pop	{r4, r5, r6, pc}
    4ae0:	ldr	r1, [pc, #36]	; 4b0c <ippGetInteger@plt+0x2b40>
    4ae4:	add	r1, pc, r1
    4ae8:	b	4a78 <ippGetInteger@plt+0x2aac>
    4aec:	andeq	sl, r0, r8, lsr #29
    4af0:	andeq	sl, r0, r0, lsr #29
    4af4:	andeq	sl, r0, r4, ror lr
    4af8:	andeq	sl, r0, r8, lsl #29
    4afc:	muleq	r0, r4, lr
    4b00:	muleq	r0, r0, sp
    4b04:	andeq	sl, r0, r8, ror lr
    4b08:	andeq	lr, r1, r8, lsr r5
    4b0c:	strdeq	sl, [r0], -r8
    4b10:	push	{r1, r2, r3}
    4b14:	push	{r4, r5, r6, r7, r8, lr}
    4b18:	sub	sp, sp, #10240	; 0x2800
    4b1c:	sub	sp, sp, #20
    4b20:	ldr	r4, [pc, #240]	; 4c18 <ippGetInteger@plt+0x2c4c>
    4b24:	ldr	r3, [pc, #240]	; 4c1c <ippGetInteger@plt+0x2c50>
    4b28:	add	r2, sp, #10240	; 0x2800
    4b2c:	add	r4, pc, r4
    4b30:	add	r2, r2, #44	; 0x2c
    4b34:	ldr	r6, [r4, r3]
    4b38:	ldr	r1, [r2]
    4b3c:	add	ip, sp, #10240	; 0x2800
    4b40:	add	ip, ip, #48	; 0x30
    4b44:	ldr	r2, [r6]
    4b48:	stm	sp, {r1, ip}
    4b4c:	add	r1, sp, #10240	; 0x2800
    4b50:	add	r1, r1, #12
    4b54:	mov	r3, #10240	; 0x2800
    4b58:	add	r5, sp, #12
    4b5c:	str	r2, [r1]
    4b60:	mov	r7, r0
    4b64:	mov	r1, r3
    4b68:	mov	r0, r5
    4b6c:	mov	r2, #1
    4b70:	str	ip, [sp, #8]
    4b74:	bl	1b10 <__vsnprintf_chk@plt>
    4b78:	ldr	r3, [pc, #160]	; 4c20 <ippGetInteger@plt+0x2c54>
    4b7c:	add	r3, pc, r3
    4b80:	ldr	r3, [r3]
    4b84:	cmp	r3, #2
    4b88:	beq	4bd4 <ippGetInteger@plt+0x2c08>
    4b8c:	ldr	r3, [pc, #144]	; 4c24 <ippGetInteger@plt+0x2c58>
    4b90:	ldr	r1, [pc, #144]	; 4c28 <ippGetInteger@plt+0x2c5c>
    4b94:	mov	r2, r5
    4b98:	ldr	r3, [r4, r3]
    4b9c:	add	r1, pc, r1
    4ba0:	ldr	r0, [r3]
    4ba4:	bl	1a50 <_cupsLangPrintf@plt>
    4ba8:	add	r3, sp, #10240	; 0x2800
    4bac:	add	r3, r3, #12
    4bb0:	ldr	r2, [r3]
    4bb4:	ldr	r3, [r6]
    4bb8:	cmp	r2, r3
    4bbc:	bne	4c14 <ippGetInteger@plt+0x2c48>
    4bc0:	add	sp, sp, #10240	; 0x2800
    4bc4:	add	sp, sp, #20
    4bc8:	pop	{r4, r5, r6, r7, r8, lr}
    4bcc:	add	sp, sp, #12
    4bd0:	bx	lr
    4bd4:	ldr	r8, [pc, #80]	; 4c2c <ippGetInteger@plt+0x2c60>
    4bd8:	add	r8, pc, r8
    4bdc:	ldr	r3, [r8, #20]
    4be0:	cmp	r3, #0
    4be4:	beq	4bfc <ippGetInteger@plt+0x2c30>
    4be8:	mov	r0, r7
    4bec:	mov	r2, r5
    4bf0:	mov	r1, #0
    4bf4:	bl	4a3c <ippGetInteger@plt+0x2a70>
    4bf8:	b	4b8c <ippGetInteger@plt+0x2bc0>
    4bfc:	mov	r0, r7
    4c00:	bl	490c <ippGetInteger@plt+0x2940>
    4c04:	ldr	r3, [r8, #20]
    4c08:	cmp	r3, #0
    4c0c:	beq	4b8c <ippGetInteger@plt+0x2bc0>
    4c10:	b	4be8 <ippGetInteger@plt+0x2c1c>
    4c14:	bl	1d14 <__stack_chk_fail@plt>
    4c18:	andeq	lr, r1, ip, ror #4
    4c1c:	andeq	r0, r0, r4, lsr r2
    4c20:	andeq	lr, r1, r4, lsl #9
    4c24:	andeq	r0, r0, ip, lsr r2
    4c28:	andeq	sl, r0, ip, lsr #27
    4c2c:	andeq	lr, r1, r4, lsr r4
    4c30:	ldr	r3, [pc, #4080]	; 5c28 <ippGetInteger@plt+0x3c5c>
    4c34:	ldr	ip, [pc, #4080]	; 5c2c <ippGetInteger@plt+0x3c60>
    4c38:	add	r3, pc, r3
    4c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c40:	mov	r5, r2
    4c44:	ldr	r2, [r3, ip]
    4c48:	sub	sp, sp, #1696	; 0x6a0
    4c4c:	ldr	sl, [r5, #12]
    4c50:	sub	sp, sp, #4
    4c54:	ldr	r3, [r2]
    4c58:	cmp	sl, #0
    4c5c:	str	r2, [sp, #32]
    4c60:	str	r3, [sp, #1692]	; 0x69c
    4c64:	moveq	r6, #1
    4c68:	beq	4d94 <ippGetInteger@plt+0x2dc8>
    4c6c:	ldrb	r4, [sl]
    4c70:	mov	r9, r0
    4c74:	mov	r7, r1
    4c78:	cmp	r4, #0
    4c7c:	beq	4db8 <ippGetInteger@plt+0x2dec>
    4c80:	bl	1d8c <__ctype_b_loc@plt>
    4c84:	mov	r8, sl
    4c88:	ldr	r1, [r0]
    4c8c:	lsl	r2, r4, #1
    4c90:	sub	r3, r4, #45	; 0x2d
    4c94:	ldrh	r2, [r1, r2]
    4c98:	cmp	r4, #95	; 0x5f
    4c9c:	cmpne	r3, #1
    4ca0:	movhi	r4, #1
    4ca4:	eor	r3, r2, #8
    4ca8:	movls	r4, #0
    4cac:	ands	r3, r4, r3, lsr #3
    4cb0:	bne	4dbc <ippGetInteger@plt+0x2df0>
    4cb4:	ldrb	r4, [r8, #1]!
    4cb8:	cmp	r4, #0
    4cbc:	bne	4c8c <ippGetInteger@plt+0x2cc0>
    4cc0:	cmp	sl, r8
    4cc4:	movne	r6, #1
    4cc8:	beq	4dbc <ippGetInteger@plt+0x2df0>
    4ccc:	sub	r8, r8, sl
    4cd0:	cmp	r8, #255	; 0xff
    4cd4:	bgt	4de4 <ippGetInteger@plt+0x2e18>
    4cd8:	ldr	r3, [r5, #8]
    4cdc:	sub	r3, r3, #34	; 0x22
    4ce0:	cmp	r3, #39	; 0x27
    4ce4:	addls	pc, pc, r3, lsl #2
    4ce8:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4cec:	b	4f68 <ippGetInteger@plt+0x2f9c>
    4cf0:	b	4fbc <ippGetInteger@plt+0x2ff0>
    4cf4:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4cf8:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4cfc:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d00:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d04:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d08:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d0c:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d10:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d14:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d18:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d1c:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d20:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d24:	b	5014 <ippGetInteger@plt+0x3048>
    4d28:	b	5070 <ippGetInteger@plt+0x30a4>
    4d2c:	b	5264 <ippGetInteger@plt+0x3298>
    4d30:	b	5380 <ippGetInteger@plt+0x33b4>
    4d34:	b	53e0 <ippGetInteger@plt+0x3414>
    4d38:	b	5448 <ippGetInteger@plt+0x347c>
    4d3c:	b	5548 <ippGetInteger@plt+0x357c>
    4d40:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d44:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d48:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d4c:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d50:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d54:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d58:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d5c:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d60:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d64:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d68:	b	5448 <ippGetInteger@plt+0x347c>
    4d6c:	b	5548 <ippGetInteger@plt+0x357c>
    4d70:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4d74:	b	5644 <ippGetInteger@plt+0x3678>
    4d78:	b	56ec <ippGetInteger@plt+0x3720>
    4d7c:	b	57c8 <ippGetInteger@plt+0x37fc>
    4d80:	b	5910 <ippGetInteger@plt+0x3944>
    4d84:	b	4e00 <ippGetInteger@plt+0x2e34>
    4d88:	b	4eb4 <ippGetInteger@plt+0x2ee8>
    4d8c:	mov	r0, sl
    4d90:	bl	1b1c <regfree@plt>
    4d94:	ldr	r3, [sp, #32]
    4d98:	ldr	r2, [sp, #1692]	; 0x69c
    4d9c:	mov	r0, r6
    4da0:	ldr	r3, [r3]
    4da4:	cmp	r2, r3
    4da8:	bne	5d54 <ippGetInteger@plt+0x3d88>
    4dac:	add	sp, sp, #1696	; 0x6a0
    4db0:	add	sp, sp, #4
    4db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4db8:	mov	r8, sl
    4dbc:	ldr	r1, [pc, #3692]	; 5c30 <ippGetInteger@plt+0x3c64>
    4dc0:	mov	r2, sl
    4dc4:	add	r1, pc, r1
    4dc8:	mov	r0, r7
    4dcc:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    4dd0:	ldr	sl, [r5, #12]
    4dd4:	mov	r6, #0
    4dd8:	sub	r8, r8, sl
    4ddc:	cmp	r8, #255	; 0xff
    4de0:	ble	4cd8 <ippGetInteger@plt+0x2d0c>
    4de4:	ldr	r1, [pc, #3656]	; 5c34 <ippGetInteger@plt+0x3c68>
    4de8:	mov	r2, sl
    4dec:	add	r1, pc, r1
    4df0:	mov	r0, r7
    4df4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    4df8:	mov	r6, #0
    4dfc:	b	4cd8 <ippGetInteger@plt+0x2d0c>
    4e00:	ldr	r1, [pc, #3632]	; 5c38 <ippGetInteger@plt+0x3c6c>
    4e04:	add	sl, sp, #60	; 0x3c
    4e08:	mov	r0, sl
    4e0c:	mov	r2, #9
    4e10:	add	r1, pc, r1
    4e14:	bl	1a8c <regcomp@plt>
    4e18:	subs	r8, r0, #0
    4e1c:	bne	59c4 <ippGetInteger@plt+0x39f8>
    4e20:	ldr	r3, [r5, #16]
    4e24:	cmp	r3, #0
    4e28:	ble	4d8c <ippGetInteger@plt+0x2dc0>
    4e2c:	ldr	r3, [pc, #3592]	; 5c3c <ippGetInteger@plt+0x3c70>
    4e30:	mov	r9, r8
    4e34:	add	r3, pc, r3
    4e38:	str	r3, [sp, #36]	; 0x24
    4e3c:	ldr	r3, [pc, #3580]	; 5c40 <ippGetInteger@plt+0x3c74>
    4e40:	mov	r4, r5
    4e44:	add	r3, pc, r3
    4e48:	str	r3, [sp, #40]	; 0x28
    4e4c:	b	4e78 <ippGetInteger@plt+0x2eac>
    4e50:	ldr	fp, [r4, #24]
    4e54:	mov	r0, fp
    4e58:	bl	1e1c <strlen@plt>
    4e5c:	cmp	r0, #63	; 0x3f
    4e60:	bhi	5bd4 <ippGetInteger@plt+0x3c08>
    4e64:	ldr	r3, [r5, #16]
    4e68:	add	r8, r8, #1
    4e6c:	cmp	r3, r8
    4e70:	add	r4, r4, #12
    4e74:	ble	4d8c <ippGetInteger@plt+0x2dc0>
    4e78:	mov	r3, #0
    4e7c:	ldr	r1, [r4, #24]
    4e80:	mov	r2, r3
    4e84:	str	r9, [sp]
    4e88:	mov	r0, sl
    4e8c:	bl	1b58 <regexec@plt>
    4e90:	cmp	r0, #0
    4e94:	beq	4e50 <ippGetInteger@plt+0x2e84>
    4e98:	ldr	r3, [r4, #24]
    4e9c:	ldr	r2, [r5, #12]
    4ea0:	ldr	r1, [sp, #36]	; 0x24
    4ea4:	mov	r0, r7
    4ea8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    4eac:	mov	r6, #0
    4eb0:	b	4e50 <ippGetInteger@plt+0x2e84>
    4eb4:	ldr	r1, [pc, #3464]	; 5c44 <ippGetInteger@plt+0x3c78>
    4eb8:	add	sl, sp, #60	; 0x3c
    4ebc:	mov	r0, sl
    4ec0:	mov	r2, #9
    4ec4:	add	r1, pc, r1
    4ec8:	bl	1a8c <regcomp@plt>
    4ecc:	subs	r8, r0, #0
    4ed0:	bne	59f0 <ippGetInteger@plt+0x3a24>
    4ed4:	ldr	r3, [r5, #16]
    4ed8:	cmp	r3, #0
    4edc:	ble	4d8c <ippGetInteger@plt+0x2dc0>
    4ee0:	ldr	r3, [pc, #3424]	; 5c48 <ippGetInteger@plt+0x3c7c>
    4ee4:	mov	r9, r8
    4ee8:	add	r3, pc, r3
    4eec:	str	r3, [sp, #36]	; 0x24
    4ef0:	ldr	r3, [pc, #3412]	; 5c4c <ippGetInteger@plt+0x3c80>
    4ef4:	mov	r4, r5
    4ef8:	add	r3, pc, r3
    4efc:	str	r3, [sp, #40]	; 0x28
    4f00:	b	4f2c <ippGetInteger@plt+0x2f60>
    4f04:	ldr	fp, [r4, #24]
    4f08:	mov	r0, fp
    4f0c:	bl	1e1c <strlen@plt>
    4f10:	cmp	r0, #255	; 0xff
    4f14:	bhi	5bb4 <ippGetInteger@plt+0x3be8>
    4f18:	ldr	r3, [r5, #16]
    4f1c:	add	r8, r8, #1
    4f20:	cmp	r3, r8
    4f24:	add	r4, r4, #12
    4f28:	ble	4d8c <ippGetInteger@plt+0x2dc0>
    4f2c:	mov	r3, #0
    4f30:	ldr	r1, [r4, #24]
    4f34:	mov	r2, r3
    4f38:	str	r9, [sp]
    4f3c:	mov	r0, sl
    4f40:	bl	1b58 <regexec@plt>
    4f44:	cmp	r0, #0
    4f48:	beq	4f04 <ippGetInteger@plt+0x2f38>
    4f4c:	ldr	r3, [r4, #24]
    4f50:	ldr	r2, [r5, #12]
    4f54:	ldr	r1, [sp, #36]	; 0x24
    4f58:	mov	r0, r7
    4f5c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    4f60:	mov	r6, #0
    4f64:	b	4f04 <ippGetInteger@plt+0x2f38>
    4f68:	ldr	r2, [r5, #16]
    4f6c:	cmp	r2, #0
    4f70:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    4f74:	ldr	r9, [pc, #3284]	; 5c50 <ippGetInteger@plt+0x3c84>
    4f78:	mov	r8, r5
    4f7c:	add	r9, pc, r9
    4f80:	mov	r4, #0
    4f84:	ldrb	r3, [r8, #20]
    4f88:	cmp	r3, #1
    4f8c:	bls	4fa8 <ippGetInteger@plt+0x2fdc>
    4f90:	ldr	r2, [r5, #12]
    4f94:	mov	r1, r9
    4f98:	mov	r0, r7
    4f9c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    4fa0:	ldr	r2, [r5, #16]
    4fa4:	mov	r6, #0
    4fa8:	add	r4, r4, #1
    4fac:	cmp	r2, r4
    4fb0:	add	r8, r8, #12
    4fb4:	bgt	4f84 <ippGetInteger@plt+0x2fb8>
    4fb8:	b	4d94 <ippGetInteger@plt+0x2dc8>
    4fbc:	ldr	r2, [r5, #16]
    4fc0:	cmp	r2, #0
    4fc4:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    4fc8:	ldr	r9, [pc, #3204]	; 5c54 <ippGetInteger@plt+0x3c88>
    4fcc:	mov	r8, r5
    4fd0:	add	r9, pc, r9
    4fd4:	mov	r4, #0
    4fd8:	b	4fec <ippGetInteger@plt+0x3020>
    4fdc:	add	r4, r4, #1
    4fe0:	cmp	r2, r4
    4fe4:	add	r8, r8, #12
    4fe8:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    4fec:	ldr	r3, [r8, #20]
    4ff0:	cmp	r3, #0
    4ff4:	bgt	4fdc <ippGetInteger@plt+0x3010>
    4ff8:	ldr	r2, [r5, #12]
    4ffc:	mov	r1, r9
    5000:	mov	r0, r7
    5004:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5008:	mov	r6, #0
    500c:	ldr	r2, [r5, #16]
    5010:	b	4fdc <ippGetInteger@plt+0x3010>
    5014:	ldr	r2, [r5, #16]
    5018:	cmp	r2, #0
    501c:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5020:	ldr	sl, [pc, #3120]	; 5c58 <ippGetInteger@plt+0x3c8c>
    5024:	ldr	r9, [pc, #3120]	; 5c5c <ippGetInteger@plt+0x3c90>
    5028:	add	sl, pc, sl
    502c:	mov	r8, r5
    5030:	mov	r4, #0
    5034:	b	5048 <ippGetInteger@plt+0x307c>
    5038:	add	r4, r4, #1
    503c:	cmp	r2, r4
    5040:	add	r8, r8, #12
    5044:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5048:	ldr	r3, [r8, #20]
    504c:	cmp	r3, r9
    5050:	ble	5038 <ippGetInteger@plt+0x306c>
    5054:	ldr	r2, [r5, #12]
    5058:	mov	r1, sl
    505c:	mov	r0, r7
    5060:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5064:	mov	r6, #0
    5068:	ldr	r2, [r5, #16]
    506c:	b	5038 <ippGetInteger@plt+0x306c>
    5070:	ldr	r3, [r5, #16]
    5074:	cmp	r3, #0
    5078:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    507c:	ldr	fp, [pc, #3036]	; 5c60 <ippGetInteger@plt+0x3c94>
    5080:	ldr	sl, [pc, #3036]	; 5c64 <ippGetInteger@plt+0x3c98>
    5084:	ldr	r9, [pc, #3036]	; 5c68 <ippGetInteger@plt+0x3c9c>
    5088:	add	fp, pc, fp
    508c:	add	sl, pc, sl
    5090:	add	r9, pc, r9
    5094:	mov	r4, r5
    5098:	mov	r8, #0
    509c:	b	511c <ippGetInteger@plt+0x3150>
    50a0:	ldrb	r3, [r4, #23]
    50a4:	sub	r2, r3, #1
    50a8:	cmp	r2, #30
    50ac:	bhi	5150 <ippGetInteger@plt+0x3184>
    50b0:	ldrb	r3, [r4, #24]
    50b4:	cmp	r3, #23
    50b8:	bhi	5170 <ippGetInteger@plt+0x31a4>
    50bc:	ldrb	r3, [r4, #25]
    50c0:	cmp	r3, #59	; 0x3b
    50c4:	bhi	5190 <ippGetInteger@plt+0x31c4>
    50c8:	ldrb	r3, [r4, #26]
    50cc:	cmp	r3, #60	; 0x3c
    50d0:	bhi	51b4 <ippGetInteger@plt+0x31e8>
    50d4:	ldrb	r3, [r4, #27]
    50d8:	cmp	r3, #9
    50dc:	bhi	51d8 <ippGetInteger@plt+0x320c>
    50e0:	ldrb	r3, [r4, #28]
    50e4:	sub	r2, r3, #43	; 0x2b
    50e8:	tst	r2, #253	; 0xfd
    50ec:	bne	5200 <ippGetInteger@plt+0x3234>
    50f0:	ldrb	r3, [r4, #29]
    50f4:	cmp	r3, #11
    50f8:	bhi	5224 <ippGetInteger@plt+0x3258>
    50fc:	ldrb	r3, [r4, #30]
    5100:	cmp	r3, #59	; 0x3b
    5104:	bhi	5248 <ippGetInteger@plt+0x327c>
    5108:	ldr	r3, [r5, #16]
    510c:	add	r8, r8, #1
    5110:	cmp	r3, r8
    5114:	add	r4, r4, #12
    5118:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    511c:	ldrb	r3, [r4, #22]
    5120:	sub	r2, r3, #1
    5124:	cmp	r2, #11
    5128:	bls	50a0 <ippGetInteger@plt+0x30d4>
    512c:	ldr	r2, [r5, #12]
    5130:	mov	r1, fp
    5134:	mov	r0, r7
    5138:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    513c:	ldrb	r3, [r4, #23]
    5140:	mov	r6, #0
    5144:	sub	r2, r3, #1
    5148:	cmp	r2, #30
    514c:	bls	50b0 <ippGetInteger@plt+0x30e4>
    5150:	ldr	r2, [r5, #12]
    5154:	mov	r1, sl
    5158:	mov	r0, r7
    515c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5160:	ldrb	r3, [r4, #24]
    5164:	mov	r6, #0
    5168:	cmp	r3, #23
    516c:	bls	50bc <ippGetInteger@plt+0x30f0>
    5170:	ldr	r2, [r5, #12]
    5174:	mov	r1, r9
    5178:	mov	r0, r7
    517c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5180:	ldrb	r3, [r4, #25]
    5184:	mov	r6, #0
    5188:	cmp	r3, #59	; 0x3b
    518c:	bls	50c8 <ippGetInteger@plt+0x30fc>
    5190:	ldr	r1, [pc, #2772]	; 5c6c <ippGetInteger@plt+0x3ca0>
    5194:	ldr	r2, [r5, #12]
    5198:	add	r1, pc, r1
    519c:	mov	r0, r7
    51a0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    51a4:	ldrb	r3, [r4, #26]
    51a8:	mov	r6, #0
    51ac:	cmp	r3, #60	; 0x3c
    51b0:	bls	50d4 <ippGetInteger@plt+0x3108>
    51b4:	ldr	r1, [pc, #2740]	; 5c70 <ippGetInteger@plt+0x3ca4>
    51b8:	ldr	r2, [r5, #12]
    51bc:	add	r1, pc, r1
    51c0:	mov	r0, r7
    51c4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    51c8:	ldrb	r3, [r4, #27]
    51cc:	mov	r6, #0
    51d0:	cmp	r3, #9
    51d4:	bls	50e0 <ippGetInteger@plt+0x3114>
    51d8:	ldr	r1, [pc, #2708]	; 5c74 <ippGetInteger@plt+0x3ca8>
    51dc:	ldr	r2, [r5, #12]
    51e0:	add	r1, pc, r1
    51e4:	mov	r0, r7
    51e8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    51ec:	ldrb	r3, [r4, #28]
    51f0:	mov	r6, #0
    51f4:	sub	r2, r3, #43	; 0x2b
    51f8:	tst	r2, #253	; 0xfd
    51fc:	beq	50f0 <ippGetInteger@plt+0x3124>
    5200:	ldr	r1, [pc, #2672]	; 5c78 <ippGetInteger@plt+0x3cac>
    5204:	ldr	r2, [r5, #12]
    5208:	add	r1, pc, r1
    520c:	mov	r0, r7
    5210:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5214:	ldrb	r3, [r4, #29]
    5218:	mov	r6, #0
    521c:	cmp	r3, #11
    5220:	bls	50fc <ippGetInteger@plt+0x3130>
    5224:	ldr	r1, [pc, #2640]	; 5c7c <ippGetInteger@plt+0x3cb0>
    5228:	ldr	r2, [r5, #12]
    522c:	add	r1, pc, r1
    5230:	mov	r0, r7
    5234:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5238:	ldrb	r3, [r4, #30]
    523c:	mov	r6, #0
    5240:	cmp	r3, #59	; 0x3b
    5244:	bls	5108 <ippGetInteger@plt+0x313c>
    5248:	ldr	r1, [pc, #2608]	; 5c80 <ippGetInteger@plt+0x3cb4>
    524c:	ldr	r2, [r5, #12]
    5250:	add	r1, pc, r1
    5254:	mov	r0, r7
    5258:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    525c:	mov	r6, #0
    5260:	b	5108 <ippGetInteger@plt+0x313c>
    5264:	ldr	r3, [r5, #16]
    5268:	cmp	r3, #0
    526c:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5270:	ldr	r9, [pc, #2572]	; 5c84 <ippGetInteger@plt+0x3cb8>
    5274:	ldr	fp, [pc, #2572]	; 5c88 <ippGetInteger@plt+0x3cbc>
    5278:	ldr	sl, [pc, #2572]	; 5c8c <ippGetInteger@plt+0x3cc0>
    527c:	add	r9, pc, r9
    5280:	add	fp, pc, fp
    5284:	add	sl, pc, sl
    5288:	mov	r4, r5
    528c:	mov	r8, #0
    5290:	b	52ec <ippGetInteger@plt+0x3320>
    5294:	cmp	r0, #0
    5298:	ble	5340 <ippGetInteger@plt+0x3374>
    529c:	sub	r1, r1, #3
    52a0:	cmp	r1, #1
    52a4:	bls	52d8 <ippGetInteger@plt+0x330c>
    52a8:	ldr	r2, [pc, #2528]	; 5c90 <ippGetInteger@plt+0x3cc4>
    52ac:	ldr	r3, [r4, #20]
    52b0:	add	r2, pc, r2
    52b4:	str	r2, [sp, #4]
    52b8:	ldr	r1, [pc, #2516]	; 5c94 <ippGetInteger@plt+0x3cc8>
    52bc:	ldr	r2, [r4, #24]
    52c0:	add	r1, pc, r1
    52c4:	str	r2, [sp]
    52c8:	mov	r0, r7
    52cc:	ldr	r2, [r5, #12]
    52d0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    52d4:	mov	r6, #0
    52d8:	ldr	r3, [r5, #16]
    52dc:	add	r8, r8, #1
    52e0:	cmp	r3, r8
    52e4:	add	r4, r4, #12
    52e8:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    52ec:	ldr	r3, [r4, #20]
    52f0:	ldr	r0, [r4, #24]
    52f4:	cmp	r3, #0
    52f8:	ldr	r1, [r4, #28]
    52fc:	bgt	5294 <ippGetInteger@plt+0x32c8>
    5300:	cmp	r1, #3
    5304:	ldr	r2, [r5, #12]
    5308:	moveq	r1, fp
    530c:	beq	5320 <ippGetInteger@plt+0x3354>
    5310:	cmp	r1, #4
    5314:	movne	r1, sl
    5318:	ldreq	r1, [pc, #2424]	; 5c98 <ippGetInteger@plt+0x3ccc>
    531c:	addeq	r1, pc, r1
    5320:	strd	r0, [sp]
    5324:	mov	r1, r9
    5328:	mov	r0, r7
    532c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5330:	ldrd	r0, [r4, #24]
    5334:	mov	r6, #0
    5338:	cmp	r0, #0
    533c:	bgt	529c <ippGetInteger@plt+0x32d0>
    5340:	cmp	r1, #3
    5344:	ldr	r2, [r5, #12]
    5348:	ldr	r3, [r4, #20]
    534c:	beq	5c14 <ippGetInteger@plt+0x3c48>
    5350:	cmp	r1, #4
    5354:	beq	5d00 <ippGetInteger@plt+0x3d34>
    5358:	ldr	r1, [pc, #2364]	; 5c9c <ippGetInteger@plt+0x3cd0>
    535c:	add	r1, pc, r1
    5360:	strd	r0, [sp]
    5364:	ldr	r1, [pc, #2356]	; 5ca0 <ippGetInteger@plt+0x3cd4>
    5368:	mov	r0, r7
    536c:	add	r1, pc, r1
    5370:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5374:	mov	r6, #0
    5378:	ldr	r1, [r4, #28]
    537c:	b	529c <ippGetInteger@plt+0x32d0>
    5380:	ldr	r2, [r5, #16]
    5384:	cmp	r2, #0
    5388:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    538c:	ldr	r9, [pc, #2320]	; 5ca4 <ippGetInteger@plt+0x3cd8>
    5390:	mov	r4, r5
    5394:	add	r9, pc, r9
    5398:	mov	r8, #0
    539c:	b	53b0 <ippGetInteger@plt+0x33e4>
    53a0:	add	r8, r8, #1
    53a4:	cmp	r2, r8
    53a8:	add	r4, r4, #12
    53ac:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    53b0:	ldr	r3, [r4, #20]
    53b4:	ldr	r1, [r4, #24]
    53b8:	cmp	r3, r1
    53bc:	ble	53a0 <ippGetInteger@plt+0x33d4>
    53c0:	str	r1, [sp]
    53c4:	mov	r0, r7
    53c8:	ldr	r2, [r5, #12]
    53cc:	mov	r1, r9
    53d0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    53d4:	mov	r6, #0
    53d8:	ldr	r2, [r5, #16]
    53dc:	b	53a0 <ippGetInteger@plt+0x33d4>
    53e0:	ldr	r2, [r5, #16]
    53e4:	cmp	r2, #0
    53e8:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    53ec:	ldr	sl, [pc, #2228]	; 5ca8 <ippGetInteger@plt+0x3cdc>
    53f0:	mov	r8, r5
    53f4:	add	sl, pc, sl
    53f8:	mov	r4, #0
    53fc:	ldr	r3, [r8, #20]
    5400:	ldr	fp, [r3, #16]
    5404:	cmp	fp, #0
    5408:	beq	5434 <ippGetInteger@plt+0x3468>
    540c:	mov	r2, fp
    5410:	mov	r1, #0
    5414:	mov	r0, r9
    5418:	bl	4c30 <ippGetInteger@plt+0x2c64>
    541c:	cmp	r0, #0
    5420:	beq	5bf4 <ippGetInteger@plt+0x3c28>
    5424:	ldr	fp, [fp]
    5428:	cmp	fp, #0
    542c:	bne	540c <ippGetInteger@plt+0x3440>
    5430:	ldr	r2, [r5, #16]
    5434:	add	r4, r4, #1
    5438:	cmp	r2, r4
    543c:	add	r8, r8, #12
    5440:	bgt	53fc <ippGetInteger@plt+0x3430>
    5444:	b	4d94 <ippGetInteger@plt+0x2dc8>
    5448:	ldr	r2, [r5, #16]
    544c:	cmp	r2, #0
    5450:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5454:	ldr	fp, [pc, #2128]	; 5cac <ippGetInteger@plt+0x3ce0>
    5458:	ldr	r3, [pc, #2128]	; 5cb0 <ippGetInteger@plt+0x3ce4>
    545c:	ldr	sl, [pc, #2040]	; 5c5c <ippGetInteger@plt+0x3c90>
    5460:	add	fp, pc, fp
    5464:	mov	r8, r5
    5468:	mov	r9, #0
    546c:	add	r3, pc, r3
    5470:	str	r3, [sp, #40]	; 0x28
    5474:	ldr	r3, [r8, #24]
    5478:	ldrb	r1, [r3]
    547c:	cmp	r1, #0
    5480:	beq	5534 <ippGetInteger@plt+0x3568>
    5484:	mov	r4, r3
    5488:	b	54bc <ippGetInteger@plt+0x34f0>
    548c:	and	r2, r1, #240	; 0xf0
    5490:	cmp	r2, #224	; 0xe0
    5494:	beq	5a1c <ippGetInteger@plt+0x3a50>
    5498:	and	r2, r1, #248	; 0xf8
    549c:	cmp	r2, #240	; 0xf0
    54a0:	beq	5a80 <ippGetInteger@plt+0x3ab4>
    54a4:	tst	r1, #128	; 0x80
    54a8:	bne	5c20 <ippGetInteger@plt+0x3c54>
    54ac:	ldrb	r1, [r4, #1]
    54b0:	add	r4, r4, #1
    54b4:	cmp	r1, #0
    54b8:	beq	54fc <ippGetInteger@plt+0x3530>
    54bc:	and	r2, r1, #224	; 0xe0
    54c0:	cmp	r2, #192	; 0xc0
    54c4:	bne	548c <ippGetInteger@plt+0x34c0>
    54c8:	ldrb	r2, [r4, #1]
    54cc:	add	r4, r4, #1
    54d0:	and	r1, r2, #192	; 0xc0
    54d4:	cmp	r1, #128	; 0x80
    54d8:	beq	54ac <ippGetInteger@plt+0x34e0>
    54dc:	cmp	r2, #0
    54e0:	beq	54fc <ippGetInteger@plt+0x3530>
    54e4:	ldr	r2, [r5, #12]
    54e8:	ldr	r1, [sp, #40]	; 0x28
    54ec:	mov	r0, r7
    54f0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    54f4:	ldr	r3, [r8, #24]
    54f8:	mov	r6, #0
    54fc:	sub	r4, r4, r3
    5500:	cmp	r4, sl
    5504:	ble	5530 <ippGetInteger@plt+0x3564>
    5508:	mov	r0, r3
    550c:	str	r3, [sp, #36]	; 0x24
    5510:	bl	1e1c <strlen@plt>
    5514:	ldr	r2, [r5, #12]
    5518:	ldr	r3, [sp, #36]	; 0x24
    551c:	mov	r1, fp
    5520:	mov	r6, #0
    5524:	str	r0, [sp]
    5528:	mov	r0, r7
    552c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5530:	ldr	r2, [r5, #16]
    5534:	add	r9, r9, #1
    5538:	cmp	r2, r9
    553c:	add	r8, r8, #12
    5540:	bgt	5474 <ippGetInteger@plt+0x34a8>
    5544:	b	4d94 <ippGetInteger@plt+0x2dc8>
    5548:	ldr	r2, [r5, #16]
    554c:	cmp	r2, #0
    5550:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5554:	ldr	fp, [pc, #1880]	; 5cb4 <ippGetInteger@plt+0x3ce8>
    5558:	ldr	sl, [pc, #1880]	; 5cb8 <ippGetInteger@plt+0x3cec>
    555c:	add	fp, pc, fp
    5560:	add	sl, pc, sl
    5564:	mov	r8, r5
    5568:	mov	r9, #0
    556c:	ldr	r3, [r8, #24]
    5570:	ldrb	r1, [r3]
    5574:	cmp	r1, #0
    5578:	beq	5630 <ippGetInteger@plt+0x3664>
    557c:	mov	r2, r3
    5580:	b	55b8 <ippGetInteger@plt+0x35ec>
    5584:	and	r0, r1, #240	; 0xf0
    5588:	cmp	r0, #224	; 0xe0
    558c:	beq	5a44 <ippGetInteger@plt+0x3a78>
    5590:	and	r0, r1, #248	; 0xf8
    5594:	cmp	r0, #240	; 0xf0
    5598:	beq	5ab8 <ippGetInteger@plt+0x3aec>
    559c:	tst	r1, #128	; 0x80
    55a0:	bne	5cec <ippGetInteger@plt+0x3d20>
    55a4:	mov	r4, r2
    55a8:	ldrb	r1, [r4, #1]
    55ac:	add	r2, r4, #1
    55b0:	cmp	r1, #0
    55b4:	beq	5a78 <ippGetInteger@plt+0x3aac>
    55b8:	and	r0, r1, #224	; 0xe0
    55bc:	cmp	r0, #192	; 0xc0
    55c0:	bne	5584 <ippGetInteger@plt+0x35b8>
    55c4:	ldrb	r1, [r2, #1]
    55c8:	add	r4, r2, #1
    55cc:	and	r2, r1, #192	; 0xc0
    55d0:	cmp	r2, #128	; 0x80
    55d4:	beq	55a8 <ippGetInteger@plt+0x35dc>
    55d8:	cmp	r1, #0
    55dc:	beq	55f8 <ippGetInteger@plt+0x362c>
    55e0:	ldr	r2, [r5, #12]
    55e4:	mov	r1, sl
    55e8:	mov	r0, r7
    55ec:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    55f0:	ldr	r3, [r8, #24]
    55f4:	mov	r6, #0
    55f8:	sub	r2, r4, r3
    55fc:	cmp	r2, #255	; 0xff
    5600:	ble	562c <ippGetInteger@plt+0x3660>
    5604:	mov	r0, r3
    5608:	str	r3, [sp, #36]	; 0x24
    560c:	bl	1e1c <strlen@plt>
    5610:	ldr	r2, [r5, #12]
    5614:	ldr	r3, [sp, #36]	; 0x24
    5618:	mov	r1, fp
    561c:	mov	r6, #0
    5620:	str	r0, [sp]
    5624:	mov	r0, r7
    5628:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    562c:	ldr	r2, [r5, #16]
    5630:	add	r9, r9, #1
    5634:	cmp	r2, r9
    5638:	add	r8, r8, #12
    563c:	bgt	556c <ippGetInteger@plt+0x35a0>
    5640:	b	4d94 <ippGetInteger@plt+0x2dc8>
    5644:	ldr	r3, [r5, #16]
    5648:	cmp	r3, #0
    564c:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5650:	ldr	r3, [pc, #1636]	; 5cbc <ippGetInteger@plt+0x3cf0>
    5654:	mov	r8, r5
    5658:	add	r3, pc, r3
    565c:	str	r3, [sp, #36]	; 0x24
    5660:	ldr	r3, [pc, #1624]	; 5cc0 <ippGetInteger@plt+0x3cf4>
    5664:	mov	r9, #0
    5668:	add	r3, pc, r3
    566c:	str	r3, [sp, #40]	; 0x28
    5670:	ldr	fp, [r8, #24]
    5674:	ldrb	sl, [fp]
    5678:	cmp	sl, #0
    567c:	beq	5b2c <ippGetInteger@plt+0x3b60>
    5680:	bl	1d8c <__ctype_b_loc@plt>
    5684:	mov	r4, fp
    5688:	ldr	r0, [r0]
    568c:	lsl	ip, sl, #1
    5690:	sub	r1, sl, #45	; 0x2d
    5694:	ldrh	ip, [r0, ip]
    5698:	cmp	sl, #95	; 0x5f
    569c:	cmpne	r1, #1
    56a0:	movhi	r2, #1
    56a4:	eor	r1, ip, #8
    56a8:	movls	r2, #0
    56ac:	ands	r3, r2, r1, lsr #3
    56b0:	bne	5b30 <ippGetInteger@plt+0x3b64>
    56b4:	ldrb	sl, [r4, #1]!
    56b8:	cmp	sl, #0
    56bc:	bne	568c <ippGetInteger@plt+0x36c0>
    56c0:	cmp	fp, r4
    56c4:	beq	5b30 <ippGetInteger@plt+0x3b64>
    56c8:	sub	r4, r4, fp
    56cc:	cmp	r4, #255	; 0xff
    56d0:	bgt	5b58 <ippGetInteger@plt+0x3b8c>
    56d4:	ldr	r3, [r5, #16]
    56d8:	add	r9, r9, #1
    56dc:	cmp	r3, r9
    56e0:	add	r8, r8, #12
    56e4:	bgt	5670 <ippGetInteger@plt+0x36a4>
    56e8:	b	4d94 <ippGetInteger@plt+0x2dc8>
    56ec:	ldr	r3, [r5, #16]
    56f0:	cmp	r3, #0
    56f4:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    56f8:	ldr	r3, [pc, #1476]	; 5cc4 <ippGetInteger@plt+0x3cf8>
    56fc:	add	r2, sp, #156	; 0x9c
    5700:	add	r3, pc, r3
    5704:	str	r3, [sp, #52]	; 0x34
    5708:	ldr	r3, [pc, #1464]	; 5cc8 <ippGetInteger@plt+0x3cfc>
    570c:	strd	r6, [sp, #40]	; 0x28
    5710:	add	r3, pc, r3
    5714:	str	r3, [sp, #48]	; 0x30
    5718:	add	r3, sp, #412	; 0x19c
    571c:	mov	r4, r5
    5720:	mov	r8, #0
    5724:	add	r9, sp, #92	; 0x5c
    5728:	add	fp, sp, #668	; 0x29c
    572c:	add	sl, sp, #60	; 0x3c
    5730:	str	r2, [sp, #36]	; 0x24
    5734:	mov	r7, r3
    5738:	b	5750 <ippGetInteger@plt+0x3784>
    573c:	ldr	r3, [r5, #16]
    5740:	add	r8, r8, #1
    5744:	cmp	r3, r8
    5748:	add	r4, r4, #12
    574c:	ble	5cf8 <ippGetInteger@plt+0x3d2c>
    5750:	ldr	r0, [sp, #36]	; 0x24
    5754:	mov	r3, #256	; 0x100
    5758:	mov	r2, #1024	; 0x400
    575c:	ldr	r1, [r4, #24]
    5760:	str	r0, [sp]
    5764:	str	r2, [sp, #24]
    5768:	str	r3, [sp, #12]
    576c:	str	r3, [sp, #4]
    5770:	strd	sl, [sp, #16]
    5774:	str	r7, [sp, #8]
    5778:	mov	r3, #64	; 0x40
    577c:	mov	r2, r9
    5780:	mov	r0, #15
    5784:	bl	1b34 <httpSeparateURI@plt>
    5788:	cmp	r0, #0
    578c:	blt	5b80 <ippGetInteger@plt+0x3bb4>
    5790:	ldr	r6, [r4, #24]
    5794:	mov	r0, r6
    5798:	bl	1e1c <strlen@plt>
    579c:	ldr	r3, [pc, #1208]	; 5c5c <ippGetInteger@plt+0x3c90>
    57a0:	cmp	r0, r3
    57a4:	bls	573c <ippGetInteger@plt+0x3770>
    57a8:	str	r0, [sp]
    57ac:	mov	r3, r6
    57b0:	ldr	r2, [r5, #12]
    57b4:	ldrd	r0, [sp, #44]	; 0x2c
    57b8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    57bc:	mov	r3, #0
    57c0:	str	r3, [sp, #40]	; 0x28
    57c4:	b	573c <ippGetInteger@plt+0x3770>
    57c8:	ldr	r2, [r5, #16]
    57cc:	cmp	r2, #0
    57d0:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    57d4:	ldr	r3, [pc, #1264]	; 5ccc <ippGetInteger@plt+0x3d00>
    57d8:	str	r2, [sp, #36]	; 0x24
    57dc:	add	r3, pc, r3
    57e0:	str	r3, [sp, #40]	; 0x28
    57e4:	bl	1d8c <__ctype_b_loc@plt>
    57e8:	ldr	fp, [pc, #1248]	; 5cd0 <ippGetInteger@plt+0x3d04>
    57ec:	mov	r8, r5
    57f0:	add	fp, pc, fp
    57f4:	mov	r9, #0
    57f8:	ldr	r2, [sp, #36]	; 0x24
    57fc:	mov	sl, r0
    5800:	b	5868 <ippGetInteger@plt+0x389c>
    5804:	mov	r4, r3
    5808:	ldr	r2, [r5, #12]
    580c:	mov	r1, fp
    5810:	mov	r0, r7
    5814:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5818:	ldr	r3, [r8, #24]
    581c:	mov	r6, #0
    5820:	sub	r4, r4, r3
    5824:	cmp	r4, #63	; 0x3f
    5828:	ble	5854 <ippGetInteger@plt+0x3888>
    582c:	mov	r0, r3
    5830:	str	r3, [sp, #36]	; 0x24
    5834:	bl	1e1c <strlen@plt>
    5838:	ldr	r2, [r5, #12]
    583c:	ldr	r3, [sp, #36]	; 0x24
    5840:	ldr	r1, [sp, #40]	; 0x28
    5844:	mov	r6, #0
    5848:	str	r0, [sp]
    584c:	mov	r0, r7
    5850:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5854:	ldr	r2, [r5, #16]
    5858:	add	r9, r9, #1
    585c:	cmp	r2, r9
    5860:	add	r8, r8, #12
    5864:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    5868:	ldr	r3, [r8, #24]
    586c:	ldr	ip, [sl]
    5870:	ldrb	r1, [r3]
    5874:	lsl	r1, r1, #1
    5878:	ldrh	r1, [ip, r1]
    587c:	tst	r1, #512	; 0x200
    5880:	beq	5804 <ippGetInteger@plt+0x3838>
    5884:	ldrb	r1, [r3, #1]
    5888:	add	r4, r3, #1
    588c:	cmp	r1, #0
    5890:	beq	5858 <ippGetInteger@plt+0x388c>
    5894:	lsl	r0, r1, #1
    5898:	sub	r2, r1, #45	; 0x2d
    589c:	ldrh	r0, [ip, r0]
    58a0:	tst	r0, #2560	; 0xa00
    58a4:	moveq	r0, #1
    58a8:	movne	r0, #0
    58ac:	cmp	r1, #43	; 0x2b
    58b0:	cmpne	r2, #1
    58b4:	movhi	r1, #1
    58b8:	movls	r1, #0
    58bc:	tst	r0, r1
    58c0:	beq	58f8 <ippGetInteger@plt+0x392c>
    58c4:	b	5808 <ippGetInteger@plt+0x383c>
    58c8:	lsl	r0, r2, #1
    58cc:	sub	r1, r2, #45	; 0x2d
    58d0:	ldrh	r0, [ip, r0]
    58d4:	tst	r0, #2560	; 0xa00
    58d8:	moveq	r0, #1
    58dc:	movne	r0, #0
    58e0:	cmp	r2, #43	; 0x2b
    58e4:	cmpne	r1, #1
    58e8:	movhi	r2, #1
    58ec:	movls	r2, #0
    58f0:	tst	r0, r2
    58f4:	bne	5808 <ippGetInteger@plt+0x383c>
    58f8:	ldrb	r2, [r4, #1]!
    58fc:	cmp	r2, #0
    5900:	bne	58c8 <ippGetInteger@plt+0x38fc>
    5904:	cmp	r3, r4
    5908:	bne	5820 <ippGetInteger@plt+0x3854>
    590c:	b	5804 <ippGetInteger@plt+0x3838>
    5910:	ldr	r3, [r5, #16]
    5914:	cmp	r3, #0
    5918:	ble	4d94 <ippGetInteger@plt+0x2dc8>
    591c:	ldr	r3, [pc, #944]	; 5cd4 <ippGetInteger@plt+0x3d08>
    5920:	mov	r8, r5
    5924:	add	r3, pc, r3
    5928:	str	r3, [sp, #36]	; 0x24
    592c:	ldr	r3, [pc, #932]	; 5cd8 <ippGetInteger@plt+0x3d0c>
    5930:	mov	r9, #0
    5934:	add	r3, pc, r3
    5938:	str	r3, [sp, #40]	; 0x28
    593c:	ldr	fp, [r8, #24]
    5940:	ldrb	sl, [fp]
    5944:	cmp	sl, #0
    5948:	beq	5d1c <ippGetInteger@plt+0x3d50>
    594c:	bl	1d8c <__ctype_b_loc@plt>
    5950:	mov	r4, fp
    5954:	ldr	r0, [r0]
    5958:	b	5970 <ippGetInteger@plt+0x39a4>
    595c:	tst	r2, #8192	; 0x2000
    5960:	bne	5984 <ippGetInteger@plt+0x39b8>
    5964:	ldrb	sl, [r4, #1]!
    5968:	cmp	sl, #0
    596c:	beq	5af0 <ippGetInteger@plt+0x3b24>
    5970:	lsl	r2, sl, #1
    5974:	ldrh	r2, [r0, r2]
    5978:	and	r1, r2, #16640	; 0x4100
    597c:	cmp	r1, #16384	; 0x4000
    5980:	beq	595c <ippGetInteger@plt+0x3990>
    5984:	mov	r3, fp
    5988:	ldr	r2, [r5, #12]
    598c:	ldr	r1, [sp, #36]	; 0x24
    5990:	mov	r0, r7
    5994:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5998:	ldr	fp, [r8, #24]
    599c:	mov	r6, #0
    59a0:	sub	r4, r4, fp
    59a4:	cmp	r4, #63	; 0x3f
    59a8:	bgt	5b04 <ippGetInteger@plt+0x3b38>
    59ac:	ldr	r3, [r5, #16]
    59b0:	add	r9, r9, #1
    59b4:	cmp	r3, r9
    59b8:	add	r8, r8, #12
    59bc:	bgt	593c <ippGetInteger@plt+0x3970>
    59c0:	b	4d94 <ippGetInteger@plt+0x2dc8>
    59c4:	add	r4, sp, #668	; 0x29c
    59c8:	mov	r1, sl
    59cc:	mov	r2, r4
    59d0:	mov	r3, #256	; 0x100
    59d4:	bl	1c48 <regerror@plt>
    59d8:	ldr	r1, [pc, #764]	; 5cdc <ippGetInteger@plt+0x3d10>
    59dc:	mov	r2, r4
    59e0:	mov	r0, r9
    59e4:	add	r1, pc, r1
    59e8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    59ec:	b	4d94 <ippGetInteger@plt+0x2dc8>
    59f0:	add	r4, sp, #668	; 0x29c
    59f4:	mov	r1, sl
    59f8:	mov	r2, r4
    59fc:	mov	r3, #256	; 0x100
    5a00:	bl	1c48 <regerror@plt>
    5a04:	ldr	r1, [pc, #724]	; 5ce0 <ippGetInteger@plt+0x3d14>
    5a08:	mov	r2, r4
    5a0c:	mov	r0, r9
    5a10:	add	r1, pc, r1
    5a14:	bl	4b10 <ippGetInteger@plt+0x2b44>
    5a18:	b	4d94 <ippGetInteger@plt+0x2dc8>
    5a1c:	ldrb	r2, [r4, #1]
    5a20:	and	r1, r2, #192	; 0xc0
    5a24:	cmp	r1, #128	; 0x80
    5a28:	bne	5c0c <ippGetInteger@plt+0x3c40>
    5a2c:	ldrb	r2, [r4, #2]
    5a30:	add	r4, r4, #2
    5a34:	and	r1, r2, #192	; 0xc0
    5a38:	cmp	r1, #128	; 0x80
    5a3c:	beq	54ac <ippGetInteger@plt+0x34e0>
    5a40:	b	54dc <ippGetInteger@plt+0x3510>
    5a44:	ldrb	r1, [r2, #1]
    5a48:	and	r0, r1, #192	; 0xc0
    5a4c:	cmp	r0, #128	; 0x80
    5a50:	bne	5c04 <ippGetInteger@plt+0x3c38>
    5a54:	ldrb	r1, [r2, #2]
    5a58:	add	r4, r2, #2
    5a5c:	and	r2, r1, #192	; 0xc0
    5a60:	cmp	r2, #128	; 0x80
    5a64:	bne	55d8 <ippGetInteger@plt+0x360c>
    5a68:	ldrb	r1, [r4, #1]
    5a6c:	add	r2, r4, #1
    5a70:	cmp	r1, #0
    5a74:	bne	55b8 <ippGetInteger@plt+0x35ec>
    5a78:	sub	r2, r2, r3
    5a7c:	b	55fc <ippGetInteger@plt+0x3630>
    5a80:	ldrb	r2, [r4, #1]
    5a84:	and	r1, r2, #192	; 0xc0
    5a88:	cmp	r1, #128	; 0x80
    5a8c:	bne	5c0c <ippGetInteger@plt+0x3c40>
    5a90:	ldrb	r2, [r4, #2]
    5a94:	and	r1, r2, #192	; 0xc0
    5a98:	cmp	r1, #128	; 0x80
    5a9c:	bne	5d14 <ippGetInteger@plt+0x3d48>
    5aa0:	ldrb	r2, [r4, #3]
    5aa4:	add	r4, r4, #3
    5aa8:	and	r1, r2, #192	; 0xc0
    5aac:	cmp	r1, #128	; 0x80
    5ab0:	beq	54ac <ippGetInteger@plt+0x34e0>
    5ab4:	b	54dc <ippGetInteger@plt+0x3510>
    5ab8:	ldrb	r1, [r2, #1]
    5abc:	and	r0, r1, #192	; 0xc0
    5ac0:	cmp	r0, #128	; 0x80
    5ac4:	bne	5c04 <ippGetInteger@plt+0x3c38>
    5ac8:	ldrb	r1, [r2, #2]
    5acc:	and	r0, r1, #192	; 0xc0
    5ad0:	cmp	r0, #128	; 0x80
    5ad4:	bne	5d0c <ippGetInteger@plt+0x3d40>
    5ad8:	ldrb	r1, [r2, #3]
    5adc:	add	r4, r2, #3
    5ae0:	and	r2, r1, #192	; 0xc0
    5ae4:	cmp	r2, #128	; 0x80
    5ae8:	beq	55a8 <ippGetInteger@plt+0x35dc>
    5aec:	b	55d8 <ippGetInteger@plt+0x360c>
    5af0:	cmp	fp, r4
    5af4:	beq	5984 <ippGetInteger@plt+0x39b8>
    5af8:	sub	r4, r4, fp
    5afc:	cmp	r4, #63	; 0x3f
    5b00:	ble	59ac <ippGetInteger@plt+0x39e0>
    5b04:	mov	r0, fp
    5b08:	bl	1e1c <strlen@plt>
    5b0c:	ldr	r2, [r5, #12]
    5b10:	mov	r3, fp
    5b14:	ldr	r1, [sp, #40]	; 0x28
    5b18:	mov	r6, #0
    5b1c:	str	r0, [sp]
    5b20:	mov	r0, r7
    5b24:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5b28:	b	59ac <ippGetInteger@plt+0x39e0>
    5b2c:	mov	r4, fp
    5b30:	mov	r3, fp
    5b34:	ldr	r2, [r5, #12]
    5b38:	ldr	r1, [sp, #36]	; 0x24
    5b3c:	mov	r0, r7
    5b40:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5b44:	ldr	fp, [r8, #24]
    5b48:	mov	r6, #0
    5b4c:	sub	r4, r4, fp
    5b50:	cmp	r4, #255	; 0xff
    5b54:	ble	56d4 <ippGetInteger@plt+0x3708>
    5b58:	mov	r0, fp
    5b5c:	bl	1e1c <strlen@plt>
    5b60:	ldr	r2, [r5, #12]
    5b64:	mov	r3, fp
    5b68:	ldr	r1, [sp, #40]	; 0x28
    5b6c:	mov	r6, #0
    5b70:	str	r0, [sp]
    5b74:	mov	r0, r7
    5b78:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5b7c:	b	56d4 <ippGetInteger@plt+0x3708>
    5b80:	ldr	r3, [r4, #24]
    5b84:	ldr	r6, [r5, #12]
    5b88:	str	r3, [sp, #40]	; 0x28
    5b8c:	bl	1e4c <httpURIStatusString@plt>
    5b90:	ldr	r3, [sp, #40]	; 0x28
    5b94:	mov	ip, #0
    5b98:	mov	r2, r6
    5b9c:	ldr	r1, [sp, #52]	; 0x34
    5ba0:	str	ip, [sp, #40]	; 0x28
    5ba4:	str	r0, [sp]
    5ba8:	ldr	r0, [sp, #44]	; 0x2c
    5bac:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5bb0:	b	5790 <ippGetInteger@plt+0x37c4>
    5bb4:	str	r0, [sp]
    5bb8:	mov	r3, fp
    5bbc:	ldr	r2, [r5, #12]
    5bc0:	ldr	r1, [sp, #40]	; 0x28
    5bc4:	mov	r0, r7
    5bc8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5bcc:	mov	r6, #0
    5bd0:	b	4f18 <ippGetInteger@plt+0x2f4c>
    5bd4:	str	r0, [sp]
    5bd8:	mov	r3, fp
    5bdc:	ldr	r2, [r5, #12]
    5be0:	ldr	r1, [sp, #40]	; 0x28
    5be4:	mov	r0, r7
    5be8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5bec:	mov	r6, #0
    5bf0:	b	4e64 <ippGetInteger@plt+0x2e98>
    5bf4:	cmp	r7, #0
    5bf8:	bne	5d24 <ippGetInteger@plt+0x3d58>
    5bfc:	mov	r6, #0
    5c00:	b	5430 <ippGetInteger@plt+0x3464>
    5c04:	add	r4, r2, #1
    5c08:	b	55d8 <ippGetInteger@plt+0x360c>
    5c0c:	add	r4, r4, #1
    5c10:	b	54dc <ippGetInteger@plt+0x3510>
    5c14:	ldr	r1, [pc, #200]	; 5ce4 <ippGetInteger@plt+0x3d18>
    5c18:	add	r1, pc, r1
    5c1c:	b	5360 <ippGetInteger@plt+0x3394>
    5c20:	ldrb	r2, [r4]
    5c24:	b	54dc <ippGetInteger@plt+0x3510>
    5c28:	andeq	lr, r1, r0, ror #2
    5c2c:	andeq	r0, r0, r4, lsr r2
    5c30:	andeq	sl, r0, r4, lsr #23
    5c34:	andeq	sl, r0, r4, asr #23
    5c38:	andeq	fp, r0, r8, lsr #7
    5c3c:	andeq	fp, r0, r0, asr #9
    5c40:	andeq	fp, r0, r0, lsl #10
    5c44:	ldrdeq	fp, [r0], -r0
    5c48:	andeq	fp, r0, r4, ror #10
    5c4c:	andeq	fp, r0, r4, lsr #11
    5c50:	andeq	sl, r0, r4, ror sl
    5c54:	andeq	sl, r0, r8, asr sl
    5c58:	andeq	sl, r0, r4, asr #20
    5c5c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5c60:	andeq	sl, r0, ip, lsr #20
    5c64:	andeq	sl, r0, r0, ror #20
    5c68:	muleq	r0, r4, sl
    5c6c:	andeq	sl, r0, r4, asr #19
    5c70:	ldrdeq	sl, [r0], -ip
    5c74:	strdeq	sl, [r0], -r4
    5c78:	andeq	sl, r0, ip, lsl #20
    5c7c:	andeq	sl, r0, r4, lsr #20
    5c80:	andeq	sl, r0, ip, lsr sl
    5c84:	andeq	sl, r0, r0, asr sl
    5c88:	ldrdeq	sl, [r0], -ip
    5c8c:	ldrdeq	sl, [r0], -r0
    5c90:	andeq	sl, r0, r4, lsr #13
    5c94:	ldrdeq	sl, [r0], -r8
    5c98:	andeq	sl, r0, r4, asr #12
    5c9c:	strdeq	sl, [r0], -r8
    5ca0:	andeq	sl, r0, r8, asr #19
    5ca4:	andeq	sl, r0, r4, asr sl
    5ca8:	andeq	sl, r0, r0, asr sl
    5cac:	andeq	sl, r0, ip, asr #20
    5cb0:	strdeq	sl, [r0], -r4
    5cb4:	andeq	sl, r0, r0, ror #19
    5cb8:	muleq	r0, r0, r9
    5cbc:	andeq	sl, r0, r8, lsr #18
    5cc0:	andeq	sl, r0, r4, ror #18
    5cc4:	andeq	sl, r0, r4, lsl r9
    5cc8:	andeq	sl, r0, ip, lsr r9
    5ccc:	andeq	sl, r0, r0, lsl #18
    5cd0:	andeq	sl, r0, r0, lsr #17
    5cd4:	andeq	sl, r0, r4, lsl #16
    5cd8:	andeq	sl, r0, ip, lsr r8
    5cdc:	ldrdeq	sl, [r0], -r4
    5ce0:	andeq	sl, r0, r4, lsl #20
    5ce4:	andeq	r9, r0, r4, asr #26
    5ce8:	andeq	r9, r0, ip, asr ip
    5cec:	ldrb	r1, [r2]
    5cf0:	mov	r4, r2
    5cf4:	b	55d8 <ippGetInteger@plt+0x360c>
    5cf8:	ldr	r6, [sp, #40]	; 0x28
    5cfc:	b	4d94 <ippGetInteger@plt+0x2dc8>
    5d00:	ldr	r1, [pc, #-32]	; 5ce8 <ippGetInteger@plt+0x3d1c>
    5d04:	add	r1, pc, r1
    5d08:	b	5360 <ippGetInteger@plt+0x3394>
    5d0c:	add	r4, r2, #2
    5d10:	b	55d8 <ippGetInteger@plt+0x360c>
    5d14:	add	r4, r4, #2
    5d18:	b	54dc <ippGetInteger@plt+0x3510>
    5d1c:	mov	r4, fp
    5d20:	b	5984 <ippGetInteger@plt+0x39b8>
    5d24:	ldr	r2, [r5, #12]
    5d28:	mov	r1, sl
    5d2c:	mov	r0, r7
    5d30:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    5d34:	mov	r2, fp
    5d38:	mov	r1, r7
    5d3c:	mov	r0, r9
    5d40:	bl	4c30 <ippGetInteger@plt+0x2c64>
    5d44:	ldr	fp, [fp]
    5d48:	cmp	fp, #0
    5d4c:	bne	5d34 <ippGetInteger@plt+0x3d68>
    5d50:	b	5bfc <ippGetInteger@plt+0x3c30>
    5d54:	bl	1d14 <__stack_chk_fail@plt>
    5d58:	ldr	ip, [pc, #1884]	; 64bc <ippGetInteger@plt+0x44f0>
    5d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5d60:	sub	sp, sp, #2656	; 0xa60
    5d64:	ldr	lr, [pc, #1876]	; 64c0 <ippGetInteger@plt+0x44f4>
    5d68:	sub	sp, sp, #12
    5d6c:	add	ip, pc, ip
    5d70:	str	r1, [sp, #36]	; 0x24
    5d74:	str	r0, [sp, #40]	; 0x28
    5d78:	ldr	r0, [ip, lr]
    5d7c:	mov	r5, r3
    5d80:	mov	r1, ip
    5d84:	ldr	r3, [r0]
    5d88:	str	r0, [sp, #44]	; 0x2c
    5d8c:	str	r3, [sp, #2660]	; 0xa64
    5d90:	mov	r6, r2
    5d94:	bl	19fc <ippNew@plt>
    5d98:	mov	r3, #0
    5d9c:	str	r3, [sp, #48]	; 0x30
    5da0:	ldr	r3, [pc, #1820]	; 64c4 <ippGetInteger@plt+0x44f8>
    5da4:	add	r4, sp, #612	; 0x264
    5da8:	add	r3, pc, r3
    5dac:	str	r3, [sp, #24]
    5db0:	ldr	r3, [pc, #1808]	; 64c8 <ippGetInteger@plt+0x44fc>
    5db4:	add	r3, pc, r3
    5db8:	str	r3, [sp, #28]
    5dbc:	ldr	r3, [pc, #1800]	; 64cc <ippGetInteger@plt+0x4500>
    5dc0:	add	r3, pc, r3
    5dc4:	str	r3, [sp, #32]
    5dc8:	mov	fp, r0
    5dcc:	mov	r3, r5
    5dd0:	mov	r2, #1024	; 0x400
    5dd4:	mov	r1, r4
    5dd8:	mov	r0, r6
    5ddc:	bl	4664 <ippGetInteger@plt+0x2698>
    5de0:	cmp	r0, #0
    5de4:	beq	62b0 <ippGetInteger@plt+0x42e4>
    5de8:	ldr	r1, [sp, #24]
    5dec:	mov	r0, r4
    5df0:	bl	1ec4 <strcmp@plt>
    5df4:	cmp	r0, #0
    5df8:	beq	62b0 <ippGetInteger@plt+0x42e4>
    5dfc:	ldr	r1, [sp, #28]
    5e00:	mov	r0, r4
    5e04:	bl	1ec4 <strcmp@plt>
    5e08:	cmp	r0, #0
    5e0c:	bne	5e58 <ippGetInteger@plt+0x3e8c>
    5e10:	ldr	r3, [sp, #48]	; 0x30
    5e14:	cmp	r3, #0
    5e18:	beq	5e58 <ippGetInteger@plt+0x3e8c>
    5e1c:	mov	r3, r5
    5e20:	mov	r2, r6
    5e24:	ldr	r1, [sp, #36]	; 0x24
    5e28:	ldr	r0, [sp, #40]	; 0x28
    5e2c:	bl	5d58 <ippGetInteger@plt+0x3d8c>
    5e30:	subs	r7, r0, #0
    5e34:	beq	62a4 <ippGetInteger@plt+0x42d8>
    5e38:	ldr	r0, [sp, #48]	; 0x30
    5e3c:	bl	1ac8 <ippGetCount@plt>
    5e40:	mov	r3, r7
    5e44:	add	r1, sp, #48	; 0x30
    5e48:	mov	r2, r0
    5e4c:	mov	r0, fp
    5e50:	bl	1dbc <ippSetCollection@plt>
    5e54:	b	5dcc <ippGetInteger@plt+0x3e00>
    5e58:	ldr	r1, [sp, #32]
    5e5c:	mov	r0, r4
    5e60:	bl	1a08 <_cups_strcasecmp@plt>
    5e64:	subs	r9, r0, #0
    5e68:	bne	63a8 <ippGetInteger@plt+0x43dc>
    5e6c:	mov	r3, r5
    5e70:	mov	r2, #1024	; 0x400
    5e74:	mov	r1, r4
    5e78:	mov	r0, r6
    5e7c:	str	r9, [sp, #48]	; 0x30
    5e80:	bl	4664 <ippGetInteger@plt+0x2698>
    5e84:	cmp	r0, #0
    5e88:	beq	63d0 <ippGetInteger@plt+0x4404>
    5e8c:	mov	r0, r4
    5e90:	bl	1a44 <ippTagValue@plt>
    5e94:	cmp	r0, #15
    5e98:	mov	r7, r0
    5e9c:	ble	63f4 <ippGetInteger@plt+0x4428>
    5ea0:	add	sl, sp, #488	; 0x1e8
    5ea4:	sub	r8, sl, #4
    5ea8:	mov	r1, r8
    5eac:	mov	r3, r5
    5eb0:	mov	r2, #128	; 0x80
    5eb4:	mov	r0, r6
    5eb8:	bl	4664 <ippGetInteger@plt+0x2698>
    5ebc:	cmp	r0, #0
    5ec0:	beq	641c <ippGetInteger@plt+0x4450>
    5ec4:	cmp	r7, #32
    5ec8:	bgt	5ee8 <ippGetInteger@plt+0x3f1c>
    5ecc:	mov	r3, r8
    5ed0:	mov	r2, r7
    5ed4:	mov	r1, r9
    5ed8:	mov	r0, fp
    5edc:	strb	r9, [sp, #612]	; 0x264
    5ee0:	bl	1df8 <ippAddOutOfBand@plt>
    5ee4:	b	5dcc <ippGetInteger@plt+0x3e00>
    5ee8:	add	r9, sp, #1632	; 0x660
    5eec:	add	r9, r9, #4
    5ef0:	mov	r1, r9
    5ef4:	mov	r3, r5
    5ef8:	mov	r2, #1024	; 0x400
    5efc:	mov	r0, r6
    5f00:	bl	4664 <ippGetInteger@plt+0x2698>
    5f04:	cmp	r0, #0
    5f08:	beq	646c <ippGetInteger@plt+0x44a0>
    5f0c:	mov	r3, #1024	; 0x400
    5f10:	mov	r2, r9
    5f14:	mov	r1, r4
    5f18:	ldr	r0, [sp, #36]	; 0x24
    5f1c:	bl	4244 <ippGetInteger@plt+0x2278>
    5f20:	sub	r3, r7, #33	; 0x21
    5f24:	cmp	r3, #40	; 0x28
    5f28:	addls	pc, pc, r3, lsl #2
    5f2c:	b	6440 <ippGetInteger@plt+0x4474>
    5f30:	b	6230 <ippGetInteger@plt+0x4264>
    5f34:	b	6204 <ippGetInteger@plt+0x4238>
    5f38:	b	6230 <ippGetInteger@plt+0x4264>
    5f3c:	b	6440 <ippGetInteger@plt+0x4474>
    5f40:	b	6440 <ippGetInteger@plt+0x4474>
    5f44:	b	6440 <ippGetInteger@plt+0x4474>
    5f48:	b	6440 <ippGetInteger@plt+0x4474>
    5f4c:	b	6440 <ippGetInteger@plt+0x4474>
    5f50:	b	6440 <ippGetInteger@plt+0x4474>
    5f54:	b	6440 <ippGetInteger@plt+0x4474>
    5f58:	b	6440 <ippGetInteger@plt+0x4474>
    5f5c:	b	6440 <ippGetInteger@plt+0x4474>
    5f60:	b	6440 <ippGetInteger@plt+0x4474>
    5f64:	b	6440 <ippGetInteger@plt+0x4474>
    5f68:	b	6440 <ippGetInteger@plt+0x4474>
    5f6c:	b	61e0 <ippGetInteger@plt+0x4214>
    5f70:	b	6440 <ippGetInteger@plt+0x4474>
    5f74:	b	614c <ippGetInteger@plt+0x4180>
    5f78:	b	60c8 <ippGetInteger@plt+0x40fc>
    5f7c:	b	6070 <ippGetInteger@plt+0x40a4>
    5f80:	b	5fd4 <ippGetInteger@plt+0x4008>
    5f84:	b	5fd4 <ippGetInteger@plt+0x4008>
    5f88:	b	6440 <ippGetInteger@plt+0x4474>
    5f8c:	b	6440 <ippGetInteger@plt+0x4474>
    5f90:	b	6440 <ippGetInteger@plt+0x4474>
    5f94:	b	6440 <ippGetInteger@plt+0x4474>
    5f98:	b	6440 <ippGetInteger@plt+0x4474>
    5f9c:	b	6440 <ippGetInteger@plt+0x4474>
    5fa0:	b	6440 <ippGetInteger@plt+0x4474>
    5fa4:	b	6440 <ippGetInteger@plt+0x4474>
    5fa8:	b	6440 <ippGetInteger@plt+0x4474>
    5fac:	b	6440 <ippGetInteger@plt+0x4474>
    5fb0:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fb4:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fb8:	b	6440 <ippGetInteger@plt+0x4474>
    5fbc:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fc0:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fc4:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fc8:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fcc:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fd0:	b	5fd4 <ippGetInteger@plt+0x4008>
    5fd4:	mov	r1, #44	; 0x2c
    5fd8:	mov	r0, r4
    5fdc:	bl	1f90 <strchr@plt>
    5fe0:	subs	r1, r0, #0
    5fe4:	beq	6354 <ippGetInteger@plt+0x4388>
    5fe8:	mov	r1, #44	; 0x2c
    5fec:	mov	r0, r4
    5ff0:	str	r4, [sp, #76]	; 0x4c
    5ff4:	bl	1f90 <strchr@plt>
    5ff8:	mov	r9, #1
    5ffc:	subs	sl, r0, #0
    6000:	beq	6048 <ippGetInteger@plt+0x407c>
    6004:	cmp	sl, r4
    6008:	bls	6018 <ippGetInteger@plt+0x404c>
    600c:	ldrb	r3, [sl, #-1]
    6010:	cmp	r3, #92	; 0x5c
    6014:	beq	6394 <ippGetInteger@plt+0x43c8>
    6018:	mov	r0, sl
    601c:	mov	r3, #0
    6020:	strb	r3, [r0], #1
    6024:	add	r3, sp, #2656	; 0xa60
    6028:	add	r3, r3, #8
    602c:	add	r3, r3, r9, lsl #2
    6030:	add	r9, r9, #1
    6034:	str	r0, [r3, #-2588]	; 0xfffff5e4
    6038:	mov	r1, #44	; 0x2c
    603c:	bl	1f90 <strchr@plt>
    6040:	subs	sl, r0, #0
    6044:	bne	6004 <ippGetInteger@plt+0x4038>
    6048:	add	r0, sp, #76	; 0x4c
    604c:	mov	r1, #0
    6050:	str	r0, [sp, #8]
    6054:	str	r9, [sp]
    6058:	mov	r3, r8
    605c:	mov	r2, r7
    6060:	str	r1, [sp, #4]
    6064:	mov	r0, fp
    6068:	bl	1f48 <ippAddStrings@plt>
    606c:	b	5dcc <ippGetInteger@plt+0x3e00>
    6070:	ldr	r1, [pc, #1112]	; 64d0 <ippGetInteger@plt+0x4504>
    6074:	mov	r0, r4
    6078:	add	r1, pc, r1
    607c:	bl	1ec4 <strcmp@plt>
    6080:	subs	r9, r0, #0
    6084:	bne	64a0 <ippGetInteger@plt+0x44d4>
    6088:	mov	r3, r5
    608c:	mov	r2, r6
    6090:	ldr	r1, [sp, #36]	; 0x24
    6094:	ldr	r0, [sp, #40]	; 0x28
    6098:	bl	5d58 <ippGetInteger@plt+0x3d8c>
    609c:	subs	r7, r0, #0
    60a0:	beq	62a4 <ippGetInteger@plt+0x42d8>
    60a4:	mov	r2, r8
    60a8:	mov	r1, r9
    60ac:	mov	r3, r7
    60b0:	mov	r0, fp
    60b4:	bl	19b4 <ippAddCollection@plt>
    60b8:	str	r0, [sp, #48]	; 0x30
    60bc:	mov	r0, r7
    60c0:	bl	1a38 <ippDelete@plt>
    60c4:	b	5dcc <ippGetInteger@plt+0x3e00>
    60c8:	add	r1, sp, #84	; 0x54
    60cc:	str	r1, [sp, #12]
    60d0:	add	r1, sp, #64	; 0x40
    60d4:	str	r1, [sp]
    60d8:	ldr	r1, [pc, #1012]	; 64d4 <ippGetInteger@plt+0x4508>
    60dc:	add	r3, sp, #88	; 0x58
    60e0:	add	ip, sp, #80	; 0x50
    60e4:	add	r2, sp, #72	; 0x48
    60e8:	add	r0, sp, #68	; 0x44
    60ec:	add	r9, sp, #76	; 0x4c
    60f0:	add	r7, sp, #60	; 0x3c
    60f4:	add	r1, pc, r1
    60f8:	str	r3, [sp, #20]
    60fc:	str	r2, [sp, #16]
    6100:	mov	r3, r9
    6104:	str	r0, [sp, #8]
    6108:	str	ip, [sp, #4]
    610c:	mov	r2, r7
    6110:	mov	r0, r4
    6114:	bl	1f0c <sscanf@plt>
    6118:	subs	r3, r0, #0
    611c:	andne	r1, r3, #1
    6120:	moveq	r1, #1
    6124:	cmp	r1, #0
    6128:	bne	6484 <ippGetInteger@plt+0x44b8>
    612c:	add	r3, r3, r3, lsr #31
    6130:	str	r9, [sp, #4]
    6134:	asr	r3, r3, #1
    6138:	str	r7, [sp]
    613c:	mov	r2, r8
    6140:	mov	r0, fp
    6144:	bl	1e58 <ippAddRanges@plt>
    6148:	b	5dcc <ippGetInteger@plt+0x3e00>
    614c:	ldr	r1, [pc, #900]	; 64d8 <ippGetInteger@plt+0x450c>
    6150:	add	r3, sp, #56	; 0x38
    6154:	sub	sl, sl, #12
    6158:	str	sl, [sp]
    615c:	sub	r2, r3, #4
    6160:	add	r1, pc, r1
    6164:	mov	r0, r4
    6168:	bl	1f0c <sscanf@plt>
    616c:	cmp	r0, #3
    6170:	bne	628c <ippGetInteger@plt+0x42c0>
    6174:	ldr	r1, [pc, #864]	; 64dc <ippGetInteger@plt+0x4510>
    6178:	mov	r0, sl
    617c:	add	r1, pc, r1
    6180:	bl	1a08 <_cups_strcasecmp@plt>
    6184:	cmp	r0, #0
    6188:	beq	61a4 <ippGetInteger@plt+0x41d8>
    618c:	ldr	r1, [pc, #844]	; 64e0 <ippGetInteger@plt+0x4514>
    6190:	mov	r0, sl
    6194:	add	r1, pc, r1
    6198:	bl	1a08 <_cups_strcasecmp@plt>
    619c:	cmp	r0, #0
    61a0:	bne	625c <ippGetInteger@plt+0x4290>
    61a4:	ldr	r1, [pc, #824]	; 64e4 <ippGetInteger@plt+0x4518>
    61a8:	mov	r0, sl
    61ac:	add	r1, pc, r1
    61b0:	bl	1a08 <_cups_strcasecmp@plt>
    61b4:	subs	r1, r0, #0
    61b8:	bne	62fc <ippGetInteger@plt+0x4330>
    61bc:	ldr	r0, [sp, #56]	; 0x38
    61c0:	ldr	r3, [sp, #52]	; 0x34
    61c4:	str	r0, [sp, #4]
    61c8:	str	r3, [sp]
    61cc:	mov	r2, r8
    61d0:	mov	r3, #3
    61d4:	mov	r0, fp
    61d8:	bl	1db0 <ippAddResolution@plt>
    61dc:	b	5dcc <ippGetInteger@plt+0x3e00>
    61e0:	mov	r0, r4
    61e4:	bl	1e1c <strlen@plt>
    61e8:	mov	r2, r8
    61ec:	mov	r3, r4
    61f0:	mov	r1, #0
    61f4:	str	r0, [sp]
    61f8:	mov	r0, fp
    61fc:	bl	1ae0 <ippAddOctetString@plt>
    6200:	b	5dcc <ippGetInteger@plt+0x3e00>
    6204:	ldr	r1, [pc, #732]	; 64e8 <ippGetInteger@plt+0x451c>
    6208:	mov	r0, r4
    620c:	add	r1, pc, r1
    6210:	bl	1a08 <_cups_strcasecmp@plt>
    6214:	subs	r1, r0, #0
    6218:	bne	62d4 <ippGetInteger@plt+0x4308>
    621c:	mov	r2, r8
    6220:	mov	r3, #1
    6224:	mov	r0, fp
    6228:	bl	1e88 <ippAddBoolean@plt>
    622c:	b	5dcc <ippGetInteger@plt+0x3e00>
    6230:	mov	r2, #10
    6234:	mov	r1, #0
    6238:	mov	r0, r4
    623c:	bl	1a14 <strtol@plt>
    6240:	mov	r3, r8
    6244:	mov	r2, r7
    6248:	mov	r1, #0
    624c:	str	r0, [sp]
    6250:	mov	r0, fp
    6254:	bl	1d38 <ippAddInteger@plt>
    6258:	b	5dcc <ippGetInteger@plt+0x3e00>
    625c:	ldr	r1, [pc, #648]	; 64ec <ippGetInteger@plt+0x4520>
    6260:	mov	r0, sl
    6264:	add	r1, pc, r1
    6268:	bl	1a08 <_cups_strcasecmp@plt>
    626c:	cmp	r0, #0
    6270:	beq	61a4 <ippGetInteger@plt+0x41d8>
    6274:	ldr	r1, [pc, #628]	; 64f0 <ippGetInteger@plt+0x4524>
    6278:	mov	r0, sl
    627c:	add	r1, pc, r1
    6280:	bl	1a08 <_cups_strcasecmp@plt>
    6284:	cmp	r0, #0
    6288:	beq	61a4 <ippGetInteger@plt+0x41d8>
    628c:	ldr	r1, [pc, #608]	; 64f4 <ippGetInteger@plt+0x4528>
    6290:	ldr	r3, [r5]
    6294:	mov	r2, r4
    6298:	ldr	r0, [sp, #40]	; 0x28
    629c:	add	r1, pc, r1
    62a0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    62a4:	mov	r0, fp
    62a8:	bl	1a38 <ippDelete@plt>
    62ac:	mov	fp, #0
    62b0:	ldr	r3, [sp, #44]	; 0x2c
    62b4:	ldr	r2, [sp, #2660]	; 0xa64
    62b8:	mov	r0, fp
    62bc:	ldr	r3, [r3]
    62c0:	cmp	r2, r3
    62c4:	bne	64b8 <ippGetInteger@plt+0x44ec>
    62c8:	add	sp, sp, #2656	; 0xa60
    62cc:	add	sp, sp, #12
    62d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    62d4:	mov	r2, #10
    62d8:	mov	r1, #0
    62dc:	mov	r0, r4
    62e0:	bl	1a14 <strtol@plt>
    62e4:	mov	r2, r8
    62e8:	mov	r1, #0
    62ec:	uxtb	r3, r0
    62f0:	mov	r0, fp
    62f4:	bl	1e88 <ippAddBoolean@plt>
    62f8:	b	5dcc <ippGetInteger@plt+0x3e00>
    62fc:	ldr	r1, [pc, #500]	; 64f8 <ippGetInteger@plt+0x452c>
    6300:	mov	r0, sl
    6304:	add	r1, pc, r1
    6308:	bl	1a08 <_cups_strcasecmp@plt>
    630c:	cmp	r0, #0
    6310:	beq	636c <ippGetInteger@plt+0x43a0>
    6314:	ldr	r1, [pc, #480]	; 64fc <ippGetInteger@plt+0x4530>
    6318:	mov	r0, sl
    631c:	add	r1, pc, r1
    6320:	bl	1a08 <_cups_strcasecmp@plt>
    6324:	cmp	r0, #0
    6328:	beq	636c <ippGetInteger@plt+0x43a0>
    632c:	ldr	r0, [sp, #56]	; 0x38
    6330:	ldr	r1, [sp, #52]	; 0x34
    6334:	mov	r3, #0
    6338:	str	r0, [sp, #4]
    633c:	str	r1, [sp]
    6340:	mov	r2, r8
    6344:	mov	r1, r3
    6348:	mov	r0, fp
    634c:	bl	1db0 <ippAddResolution@plt>
    6350:	b	5dcc <ippGetInteger@plt+0x3e00>
    6354:	stm	sp, {r1, r4}
    6358:	mov	r3, r8
    635c:	mov	r2, r7
    6360:	mov	r0, fp
    6364:	bl	1c30 <ippAddString@plt>
    6368:	b	5dcc <ippGetInteger@plt+0x3e00>
    636c:	ldr	r1, [sp, #56]	; 0x38
    6370:	ldr	r3, [sp, #52]	; 0x34
    6374:	str	r1, [sp, #4]
    6378:	str	r3, [sp]
    637c:	mov	r2, r8
    6380:	mov	r3, #4
    6384:	mov	r1, #0
    6388:	mov	r0, fp
    638c:	bl	1db0 <ippAddResolution@plt>
    6390:	b	5dcc <ippGetInteger@plt+0x3e00>
    6394:	sub	r0, sl, #1
    6398:	mov	r1, sl
    639c:	bl	1d74 <_cups_strcpy@plt>
    63a0:	mov	r0, sl
    63a4:	b	6038 <ippGetInteger@plt+0x406c>
    63a8:	ldr	r1, [pc, #336]	; 6500 <ippGetInteger@plt+0x4534>
    63ac:	ldr	r3, [r5]
    63b0:	mov	r2, r4
    63b4:	ldr	r0, [sp, #40]	; 0x28
    63b8:	add	r1, pc, r1
    63bc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    63c0:	mov	r0, fp
    63c4:	bl	1a38 <ippDelete@plt>
    63c8:	mov	fp, #0
    63cc:	b	62b0 <ippGetInteger@plt+0x42e4>
    63d0:	ldr	r1, [pc, #300]	; 6504 <ippGetInteger@plt+0x4538>
    63d4:	ldr	r2, [r5]
    63d8:	ldr	r0, [sp, #40]	; 0x28
    63dc:	add	r1, pc, r1
    63e0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    63e4:	mov	r0, fp
    63e8:	bl	1a38 <ippDelete@plt>
    63ec:	mov	fp, #0
    63f0:	b	62b0 <ippGetInteger@plt+0x42e4>
    63f4:	ldr	r1, [pc, #268]	; 6508 <ippGetInteger@plt+0x453c>
    63f8:	ldr	r3, [r5]
    63fc:	mov	r2, r4
    6400:	ldr	r0, [sp, #40]	; 0x28
    6404:	add	r1, pc, r1
    6408:	bl	4b10 <ippGetInteger@plt+0x2b44>
    640c:	mov	r0, fp
    6410:	bl	1a38 <ippDelete@plt>
    6414:	mov	fp, #0
    6418:	b	62b0 <ippGetInteger@plt+0x42e4>
    641c:	ldr	r1, [pc, #232]	; 650c <ippGetInteger@plt+0x4540>
    6420:	ldr	r2, [r5]
    6424:	ldr	r0, [sp, #40]	; 0x28
    6428:	add	r1, pc, r1
    642c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    6430:	mov	r0, fp
    6434:	bl	1a38 <ippDelete@plt>
    6438:	mov	fp, #0
    643c:	b	62b0 <ippGetInteger@plt+0x42e4>
    6440:	mov	r0, r7
    6444:	bl	1b64 <ippTagString@plt>
    6448:	ldr	r2, [r5]
    644c:	ldr	r1, [pc, #188]	; 6510 <ippGetInteger@plt+0x4544>
    6450:	str	r2, [sp]
    6454:	mov	r3, r8
    6458:	add	r1, pc, r1
    645c:	mov	r2, r0
    6460:	ldr	r0, [sp, #40]	; 0x28
    6464:	bl	4b10 <ippGetInteger@plt+0x2b44>
    6468:	b	62a4 <ippGetInteger@plt+0x42d8>
    646c:	ldr	r1, [pc, #160]	; 6514 <ippGetInteger@plt+0x4548>
    6470:	ldr	r2, [r5]
    6474:	ldr	r0, [sp, #40]	; 0x28
    6478:	add	r1, pc, r1
    647c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    6480:	b	62a4 <ippGetInteger@plt+0x42d8>
    6484:	ldr	r1, [pc, #140]	; 6518 <ippGetInteger@plt+0x454c>
    6488:	ldr	r3, [r5]
    648c:	mov	r2, r4
    6490:	ldr	r0, [sp, #40]	; 0x28
    6494:	add	r1, pc, r1
    6498:	bl	4b10 <ippGetInteger@plt+0x2b44>
    649c:	b	62a4 <ippGetInteger@plt+0x42d8>
    64a0:	ldr	r1, [pc, #116]	; 651c <ippGetInteger@plt+0x4550>
    64a4:	ldr	r2, [r5]
    64a8:	ldr	r0, [sp, #40]	; 0x28
    64ac:	add	r1, pc, r1
    64b0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    64b4:	b	62a4 <ippGetInteger@plt+0x42d8>
    64b8:	bl	1d14 <__stack_chk_fail@plt>
    64bc:	andeq	sp, r1, ip, lsr #32
    64c0:	andeq	r0, r0, r4, lsr r2
    64c4:	andeq	sl, r0, r4, asr #14
    64c8:	andeq	sl, r0, ip, lsr r7
    64cc:	andeq	sl, r0, r4, lsr r7
    64d0:	andeq	sl, r0, r8, ror r4
    64d4:	andeq	sl, r0, ip, lsl r5
    64d8:	andeq	sl, r0, r0, ror r4
    64dc:	andeq	r9, r0, r0, ror #15
    64e0:	andeq	sl, r0, r0, ror r4
    64e4:			; <UNDEFINED> instruction: 0x000097b0
    64e8:			; <UNDEFINED> instruction: 0x0000a3bc
    64ec:	strdeq	r9, [r0], -ip
    64f0:	andeq	sl, r0, ip, lsl #7
    64f4:	andeq	sl, r0, r0, asr #6
    64f8:	andeq	sl, r0, r0, lsl #6
    64fc:	andeq	r9, r0, r4, asr #12
    6500:	andeq	sl, r0, r0, asr #5
    6504:	andeq	sl, r0, r0, lsr #2
    6508:	andeq	sl, r0, r0, lsr #2
    650c:	andeq	sl, r0, r4, lsr #2
    6510:	andeq	sl, r0, r8, lsr r1
    6514:	strdeq	sl, [r0], -r4
    6518:	muleq	r0, r4, r1
    651c:	andeq	sl, r0, r8, lsr #3
    6520:	ldr	ip, [pc, #260]	; 662c <ippGetInteger@plt+0x4660>
    6524:	push	{r4, r5, r6, r7, r8, r9, lr}
    6528:	add	ip, pc, ip
    652c:	ldr	lr, [pc, #252]	; 6630 <ippGetInteger@plt+0x4664>
    6530:	mov	r6, r1
    6534:	ldr	r1, [pc, #248]	; 6634 <ippGetInteger@plt+0x4668>
    6538:	ldr	r4, [ip, lr]
    653c:	sub	sp, sp, #20
    6540:	mov	r5, r3
    6544:	mov	r3, ip
    6548:	ldr	ip, [r4]
    654c:	mov	r7, r0
    6550:	add	r1, pc, r1
    6554:	mov	r0, r5
    6558:	mov	r9, r2
    655c:	str	ip, [sp, #12]
    6560:	ldr	r8, [sp, #48]	; 0x30
    6564:	bl	1a08 <_cups_strcasecmp@plt>
    6568:	cmp	r0, #0
    656c:	bne	65a4 <ippGetInteger@plt+0x45d8>
    6570:	ldr	r0, [r6]
    6574:	cmp	r0, #0
    6578:	beq	6580 <ippGetInteger@plt+0x45b4>
    657c:	bl	1a2c <free@plt>
    6580:	mov	r0, r8
    6584:	bl	1fb4 <strdup@plt>
    6588:	str	r0, [r6]
    658c:	ldr	r2, [sp, #12]
    6590:	ldr	r3, [r4]
    6594:	cmp	r2, r3
    6598:	bne	660c <ippGetInteger@plt+0x4640>
    659c:	add	sp, sp, #20
    65a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    65a4:	add	r1, sp, #4
    65a8:	ldr	r0, [r9]
    65ac:	str	r5, [sp, #4]
    65b0:	bl	1b94 <cupsArrayFind@plt>
    65b4:	subs	r6, r0, #0
    65b8:	beq	65d4 <ippGetInteger@plt+0x4608>
    65bc:	ldr	r0, [r6, #4]
    65c0:	bl	1a2c <free@plt>
    65c4:	mov	r0, r8
    65c8:	bl	1fb4 <strdup@plt>
    65cc:	str	r0, [r6, #4]
    65d0:	b	658c <ippGetInteger@plt+0x45c0>
    65d4:	mov	r0, #8
    65d8:	bl	1e10 <malloc@plt>
    65dc:	subs	r6, r0, #0
    65e0:	beq	6610 <ippGetInteger@plt+0x4644>
    65e4:	mov	r0, r5
    65e8:	bl	1fb4 <strdup@plt>
    65ec:	str	r0, [r6]
    65f0:	mov	r0, r8
    65f4:	bl	1fb4 <strdup@plt>
    65f8:	mov	r1, r6
    65fc:	str	r0, [r6, #4]
    6600:	ldr	r0, [r9]
    6604:	bl	19d8 <cupsArrayAdd@plt>
    6608:	b	658c <ippGetInteger@plt+0x45c0>
    660c:	bl	1d14 <__stack_chk_fail@plt>
    6610:	ldr	r1, [pc, #32]	; 6638 <ippGetInteger@plt+0x466c>
    6614:	mov	r0, r7
    6618:	mov	r2, r5
    661c:	add	r1, pc, r1
    6620:	bl	4b10 <ippGetInteger@plt+0x2b44>
    6624:	mov	r0, #1
    6628:	bl	1aec <exit@plt>
    662c:	andeq	ip, r1, r0, ror r8
    6630:	andeq	r0, r0, r4, lsr r2
    6634:	andeq	r9, r0, r8, asr r1
    6638:	andeq	sl, r0, r4, lsl #1
    663c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6640:	subs	r6, r0, #0
    6644:	beq	66e0 <ippGetInteger@plt+0x4714>
    6648:	ldr	r8, [pc, #272]	; 6760 <ippGetInteger@plt+0x4794>
    664c:	ldr	r9, [pc, #272]	; 6764 <ippGetInteger@plt+0x4798>
    6650:	ldr	sl, [pc, #272]	; 6768 <ippGetInteger@plt+0x479c>
    6654:	mov	r7, r1
    6658:	add	r8, pc, r8
    665c:	add	r9, pc, r9
    6660:	add	sl, pc, sl
    6664:	ldrb	r4, [r6]
    6668:	cmp	r4, #0
    666c:	beq	6758 <ippGetInteger@plt+0x478c>
    6670:	cmp	r4, #124	; 0x7c
    6674:	beq	6710 <ippGetInteger@plt+0x4744>
    6678:	cmp	r4, #44	; 0x2c
    667c:	movne	r5, r6
    6680:	bne	6690 <ippGetInteger@plt+0x46c4>
    6684:	b	6710 <ippGetInteger@plt+0x4744>
    6688:	cmp	r4, #44	; 0x2c
    668c:	beq	6714 <ippGetInteger@plt+0x4748>
    6690:	ldrb	r4, [r5, #1]!
    6694:	cmp	r4, #0
    6698:	cmpne	r4, #124	; 0x7c
    669c:	bne	6688 <ippGetInteger@plt+0x46bc>
    66a0:	cmp	r4, #0
    66a4:	bne	6714 <ippGetInteger@plt+0x4748>
    66a8:	mov	r1, r8
    66ac:	mov	r0, r6
    66b0:	bl	1ec4 <strcmp@plt>
    66b4:	cmp	r0, #0
    66b8:	bne	66e8 <ippGetInteger@plt+0x471c>
    66bc:	cmp	r7, #65	; 0x41
    66c0:	cmpne	r7, #53	; 0x35
    66c4:	moveq	r0, #1
    66c8:	movne	r0, #0
    66cc:	mov	r6, r5
    66d0:	cmp	r4, #0
    66d4:	strbne	r4, [r6], #1
    66d8:	cmp	r0, #0
    66dc:	beq	6664 <ippGetInteger@plt+0x4698>
    66e0:	mov	r0, #1
    66e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    66e8:	mov	r1, r9
    66ec:	mov	r0, r6
    66f0:	bl	1ec4 <strcmp@plt>
    66f4:	cmp	r0, #0
    66f8:	bne	6720 <ippGetInteger@plt+0x4754>
    66fc:	cmp	r7, #66	; 0x42
    6700:	cmpne	r7, #54	; 0x36
    6704:	moveq	r0, #1
    6708:	movne	r0, #0
    670c:	b	66cc <ippGetInteger@plt+0x4700>
    6710:	mov	r5, r6
    6714:	mov	r3, #0
    6718:	strb	r3, [r5]
    671c:	b	66a8 <ippGetInteger@plt+0x46dc>
    6720:	mov	r1, sl
    6724:	mov	r0, r6
    6728:	bl	1ec4 <strcmp@plt>
    672c:	cmp	r0, #0
    6730:	subeq	r0, r7, #52	; 0x34
    6734:	clzeq	r0, r0
    6738:	lsreq	r0, r0, #5
    673c:	beq	66cc <ippGetInteger@plt+0x4700>
    6740:	mov	r0, r6
    6744:	bl	1a44 <ippTagValue@plt>
    6748:	sub	r0, r7, r0
    674c:	clz	r0, r0
    6750:	lsr	r0, r0, #5
    6754:	b	66cc <ippGetInteger@plt+0x4700>
    6758:	mov	r0, r4
    675c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6760:	andeq	sl, r0, r8, ror r0
    6764:	andeq	r9, r0, r0, asr r0
    6768:	andeq	sl, r0, r8, ror r0
    676c:	push	{r4, r5, r6, r7, lr}
    6770:	mov	r5, r2
    6774:	sub	sp, sp, #20
    6778:	mov	r6, r0
    677c:	mov	r4, r1
    6780:	bl	1de0 <_cupsGlobals@plt>
    6784:	ldrb	r3, [r5]
    6788:	cmp	r3, #60	; 0x3c
    678c:	beq	6810 <ippGetInteger@plt+0x4844>
    6790:	cmp	r3, #47	; 0x2f
    6794:	beq	67f4 <ippGetInteger@plt+0x4828>
    6798:	mov	r1, #47	; 0x2f
    679c:	mov	r0, r6
    67a0:	bl	1f90 <strchr@plt>
    67a4:	cmp	r0, #0
    67a8:	beq	67f4 <ippGetInteger@plt+0x4828>
    67ac:	mov	r2, #1024	; 0x400
    67b0:	mov	r1, r6
    67b4:	mov	r0, r4
    67b8:	bl	1e64 <_cups_strlcpy@plt>
    67bc:	mov	r1, #47	; 0x2f
    67c0:	mov	r0, r4
    67c4:	bl	1f30 <strrchr@plt>
    67c8:	mov	r1, r5
    67cc:	cmp	r0, #0
    67d0:	addne	r0, r0, #1
    67d4:	subne	r2, r0, r4
    67d8:	rsbne	r2, r2, #1024	; 0x400
    67dc:	moveq	r0, r4
    67e0:	moveq	r2, #1024	; 0x400
    67e4:	bl	1e64 <_cups_strlcpy@plt>
    67e8:	mov	r0, r4
    67ec:	add	sp, sp, #20
    67f0:	pop	{r4, r5, r6, r7, pc}
    67f4:	mov	r1, r5
    67f8:	mov	r2, #1024	; 0x400
    67fc:	mov	r0, r4
    6800:	bl	1e64 <_cups_strlcpy@plt>
    6804:	mov	r0, r4
    6808:	add	sp, sp, #20
    680c:	pop	{r4, r5, r6, r7, pc}
    6810:	mov	r7, r0
    6814:	mov	r0, r5
    6818:	bl	1e1c <strlen@plt>
    681c:	add	r0, r5, r0
    6820:	ldrb	r3, [r0, #-1]
    6824:	cmp	r3, #62	; 0x3e
    6828:	bne	6798 <ippGetInteger@plt+0x47cc>
    682c:	add	r5, r5, #1
    6830:	ldr	r2, [pc, #68]	; 687c <ippGetInteger@plt+0x48b0>
    6834:	str	r5, [sp, #8]
    6838:	ldr	r1, [r7]
    683c:	add	r2, pc, r2
    6840:	mvn	r3, #0
    6844:	str	r1, [sp, #4]
    6848:	str	r2, [sp]
    684c:	mov	r1, #1024	; 0x400
    6850:	mov	r2, #1
    6854:	mov	r0, r4
    6858:	bl	1e28 <__snprintf_chk@plt>
    685c:	mov	r0, r4
    6860:	bl	1e1c <strlen@plt>
    6864:	sub	r0, r0, #1
    6868:	ldrb	r3, [r4, r0]
    686c:	cmp	r3, #62	; 0x3e
    6870:	moveq	r3, #0
    6874:	strbeq	r3, [r4, r0]
    6878:	b	6804 <ippGetInteger@plt+0x4838>
    687c:	andeq	r9, r0, r8, lsr #29
    6880:	ldr	ip, [pc, #1788]	; 6f84 <ippGetInteger@plt+0x4fb8>
    6884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6888:	add	ip, pc, ip
    688c:	ldr	lr, [pc, #1780]	; 6f88 <ippGetInteger@plt+0x4fbc>
    6890:	sub	sp, sp, #84	; 0x54
    6894:	mov	sl, r2
    6898:	str	r0, [sp, #20]
    689c:	ldr	r0, [ip, lr]
    68a0:	mov	r2, ip
    68a4:	mov	ip, r0
    68a8:	mov	r4, r3
    68ac:	str	r3, [sp, #24]
    68b0:	ldr	r3, [ip]
    68b4:	str	r0, [sp, #28]
    68b8:	mov	r0, sl
    68bc:	mov	r5, r1
    68c0:	str	r3, [sp, #76]	; 0x4c
    68c4:	bl	1ac8 <ippGetCount@plt>
    68c8:	mov	r3, #0
    68cc:	strb	r3, [r4]
    68d0:	mov	fp, r0
    68d4:	mov	r0, sl
    68d8:	bl	1f78 <ippGetValueTag@plt>
    68dc:	sub	r0, r0, #18
    68e0:	cmp	r0, #55	; 0x37
    68e4:	addls	pc, pc, r0, lsl #2
    68e8:	b	6a44 <ippGetInteger@plt+0x4a78>
    68ec:	b	69cc <ippGetInteger@plt+0x4a00>
    68f0:	b	69cc <ippGetInteger@plt+0x4a00>
    68f4:	b	6a44 <ippGetInteger@plt+0x4a78>
    68f8:	b	6a44 <ippGetInteger@plt+0x4a78>
    68fc:	b	6a44 <ippGetInteger@plt+0x4a78>
    6900:	b	6a44 <ippGetInteger@plt+0x4a78>
    6904:	b	6a44 <ippGetInteger@plt+0x4a78>
    6908:	b	6a44 <ippGetInteger@plt+0x4a78>
    690c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6910:	b	6a44 <ippGetInteger@plt+0x4a78>
    6914:	b	6a44 <ippGetInteger@plt+0x4a78>
    6918:	b	6a44 <ippGetInteger@plt+0x4a78>
    691c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6920:	b	6a44 <ippGetInteger@plt+0x4a78>
    6924:	b	6a44 <ippGetInteger@plt+0x4a78>
    6928:	b	69f4 <ippGetInteger@plt+0x4a28>
    692c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6930:	b	6cc0 <ippGetInteger@plt+0x4cf4>
    6934:	b	6a44 <ippGetInteger@plt+0x4a78>
    6938:	b	6a44 <ippGetInteger@plt+0x4a78>
    693c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6940:	b	6a44 <ippGetInteger@plt+0x4a78>
    6944:	b	6a44 <ippGetInteger@plt+0x4a78>
    6948:	b	6a44 <ippGetInteger@plt+0x4a78>
    694c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6950:	b	6a44 <ippGetInteger@plt+0x4a78>
    6954:	b	6a44 <ippGetInteger@plt+0x4a78>
    6958:	b	6a44 <ippGetInteger@plt+0x4a78>
    695c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6960:	b	6a44 <ippGetInteger@plt+0x4a78>
    6964:	b	6a44 <ippGetInteger@plt+0x4a78>
    6968:	b	6a44 <ippGetInteger@plt+0x4a78>
    696c:	b	6af0 <ippGetInteger@plt+0x4b24>
    6970:	b	6a44 <ippGetInteger@plt+0x4a78>
    6974:	b	6a44 <ippGetInteger@plt+0x4a78>
    6978:	b	6c38 <ippGetInteger@plt+0x4c6c>
    697c:	b	6c38 <ippGetInteger@plt+0x4c6c>
    6980:	b	6a44 <ippGetInteger@plt+0x4a78>
    6984:	b	6a44 <ippGetInteger@plt+0x4a78>
    6988:	b	6a44 <ippGetInteger@plt+0x4a78>
    698c:	b	6a44 <ippGetInteger@plt+0x4a78>
    6990:	b	6a44 <ippGetInteger@plt+0x4a78>
    6994:	b	6a44 <ippGetInteger@plt+0x4a78>
    6998:	b	6a44 <ippGetInteger@plt+0x4a78>
    699c:	b	6a44 <ippGetInteger@plt+0x4a78>
    69a0:	b	6a44 <ippGetInteger@plt+0x4a78>
    69a4:	b	6a44 <ippGetInteger@plt+0x4a78>
    69a8:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69ac:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69b0:	b	6a44 <ippGetInteger@plt+0x4a78>
    69b4:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69b8:	b	6a50 <ippGetInteger@plt+0x4a84>
    69bc:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69c0:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69c4:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69c8:	b	6c38 <ippGetInteger@plt+0x4c6c>
    69cc:	mov	r3, #1
    69d0:	str	r3, [sp, #16]
    69d4:	ldr	r3, [sp, #28]
    69d8:	ldr	r2, [sp, #76]	; 0x4c
    69dc:	ldr	r0, [sp, #16]
    69e0:	ldr	r3, [r3]
    69e4:	cmp	r2, r3
    69e8:	bne	6f80 <ippGetInteger@plt+0x4fb4>
    69ec:	add	sp, sp, #84	; 0x54
    69f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    69f4:	mov	r0, r5
    69f8:	bl	1f78 <ippGetValueTag@plt>
    69fc:	cmp	r0, #33	; 0x21
    6a00:	beq	6d60 <ippGetInteger@plt+0x4d94>
    6a04:	mov	r0, r5
    6a08:	bl	1f78 <ippGetValueTag@plt>
    6a0c:	cmp	r0, #51	; 0x33
    6a10:	beq	6d60 <ippGetInteger@plt+0x4d94>
    6a14:	mov	r0, sl
    6a18:	bl	1ab0 <ippGetName@plt>
    6a1c:	mov	r4, r0
    6a20:	mov	r0, sl
    6a24:	bl	1f78 <ippGetValueTag@plt>
    6a28:	bl	1b64 <ippTagString@plt>
    6a2c:	ldr	r1, [pc, #1368]	; 6f8c <ippGetInteger@plt+0x4fc0>
    6a30:	mov	r2, r4
    6a34:	add	r1, pc, r1
    6a38:	mov	r3, r0
    6a3c:	ldr	r0, [sp, #20]
    6a40:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6a44:	mov	r3, #0
    6a48:	str	r3, [sp, #16]
    6a4c:	b	69d4 <ippGetInteger@plt+0x4a08>
    6a50:	cmp	fp, #0
    6a54:	ble	69cc <ippGetInteger@plt+0x4a00>
    6a58:	ldr	r8, [pc, #1328]	; 6f90 <ippGetInteger@plt+0x4fc4>
    6a5c:	mov	r7, #0
    6a60:	add	r8, pc, r8
    6a64:	mov	r3, #1
    6a68:	str	r3, [sp, #16]
    6a6c:	mov	r2, #0
    6a70:	mov	r1, r7
    6a74:	mov	r0, sl
    6a78:	bl	19cc <ippGetString@plt>
    6a7c:	mov	r4, r0
    6a80:	mov	r0, r5
    6a84:	bl	1ac8 <ippGetCount@plt>
    6a88:	subs	r6, r0, #0
    6a8c:	movgt	r9, #0
    6a90:	bgt	6aa4 <ippGetInteger@plt+0x4ad8>
    6a94:	b	6df0 <ippGetInteger@plt+0x4e24>
    6a98:	add	r9, r9, #1
    6a9c:	cmp	r6, r9
    6aa0:	beq	6df0 <ippGetInteger@plt+0x4e24>
    6aa4:	mov	r2, #0
    6aa8:	mov	r1, r9
    6aac:	mov	r0, r5
    6ab0:	bl	19cc <ippGetString@plt>
    6ab4:	mov	r1, r0
    6ab8:	mov	r0, r4
    6abc:	bl	390c <ippGetInteger@plt+0x1940>
    6ac0:	cmp	r0, #0
    6ac4:	bne	6a98 <ippGetInteger@plt+0x4acc>
    6ac8:	ldr	r3, [sp, #24]
    6acc:	ldrb	r2, [r3]
    6ad0:	cmp	r2, #0
    6ad4:	beq	6ea4 <ippGetInteger@plt+0x4ed8>
    6ad8:	cmp	r6, r9
    6adc:	ble	6df0 <ippGetInteger@plt+0x4e24>
    6ae0:	add	r7, r7, #1
    6ae4:	cmp	fp, r7
    6ae8:	bne	6a6c <ippGetInteger@plt+0x4aa0>
    6aec:	b	69d4 <ippGetInteger@plt+0x4a08>
    6af0:	mov	r0, r5
    6af4:	bl	1f78 <ippGetValueTag@plt>
    6af8:	cmp	r0, #50	; 0x32
    6afc:	bne	6a14 <ippGetInteger@plt+0x4a48>
    6b00:	cmp	fp, #0
    6b04:	ble	69cc <ippGetInteger@plt+0x4a00>
    6b08:	ldr	r3, [pc, #1156]	; 6f94 <ippGetInteger@plt+0x4fc8>
    6b0c:	add	r2, sp, #64	; 0x40
    6b10:	add	r3, pc, r3
    6b14:	str	r3, [sp, #44]	; 0x2c
    6b18:	ldr	r3, [pc, #1144]	; 6f98 <ippGetInteger@plt+0x4fcc>
    6b1c:	str	fp, [sp, #40]	; 0x28
    6b20:	add	r3, pc, r3
    6b24:	str	r3, [sp, #48]	; 0x30
    6b28:	ldr	r3, [pc, #1132]	; 6f9c <ippGetInteger@plt+0x4fd0>
    6b2c:	str	r2, [sp, #36]	; 0x24
    6b30:	add	r3, pc, r3
    6b34:	str	r3, [sp, #52]	; 0x34
    6b38:	mov	r3, #1
    6b3c:	str	r3, [sp, #16]
    6b40:	mov	r3, #0
    6b44:	mov	fp, r3
    6b48:	add	r2, sp, #60	; 0x3c
    6b4c:	str	r2, [sp, #32]
    6b50:	mov	r0, r5
    6b54:	bl	1ac8 <ippGetCount@plt>
    6b58:	ldrd	r2, [sp, #32]
    6b5c:	mov	r1, fp
    6b60:	mov	r7, r0
    6b64:	mov	r0, sl
    6b68:	bl	1ccc <ippGetResolution@plt>
    6b6c:	cmp	r7, #0
    6b70:	mov	r6, r0
    6b74:	ble	6e18 <ippGetInteger@plt+0x4e4c>
    6b78:	mov	r4, #0
    6b7c:	add	r9, sp, #72	; 0x48
    6b80:	add	r8, sp, #68	; 0x44
    6b84:	b	6b94 <ippGetInteger@plt+0x4bc8>
    6b88:	add	r4, r4, #1
    6b8c:	cmp	r7, r4
    6b90:	beq	6e18 <ippGetInteger@plt+0x4e4c>
    6b94:	mov	r3, r9
    6b98:	mov	r2, r8
    6b9c:	mov	r1, r4
    6ba0:	mov	r0, r5
    6ba4:	bl	1ccc <ippGetResolution@plt>
    6ba8:	cmp	r6, r0
    6bac:	bne	6b88 <ippGetInteger@plt+0x4bbc>
    6bb0:	ldr	r3, [sp, #60]	; 0x3c
    6bb4:	ldr	r2, [sp, #68]	; 0x44
    6bb8:	cmp	r2, r3
    6bbc:	bne	6b88 <ippGetInteger@plt+0x4bbc>
    6bc0:	ldr	r1, [sp, #64]	; 0x40
    6bc4:	ldr	r2, [sp, #72]	; 0x48
    6bc8:	cmp	r2, r1
    6bcc:	bne	6b88 <ippGetInteger@plt+0x4bbc>
    6bd0:	ldr	r1, [sp, #24]
    6bd4:	ldrb	r1, [r1]
    6bd8:	cmp	r1, #0
    6bdc:	bne	6c24 <ippGetInteger@plt+0x4c58>
    6be0:	cmp	r6, r3
    6be4:	beq	6f20 <ippGetInteger@plt+0x4f54>
    6be8:	cmp	r2, #3
    6bec:	beq	6f68 <ippGetInteger@plt+0x4f9c>
    6bf0:	ldr	r1, [pc, #936]	; 6fa0 <ippGetInteger@plt+0x4fd4>
    6bf4:	add	r1, pc, r1
    6bf8:	ldr	r2, [pc, #932]	; 6fa4 <ippGetInteger@plt+0x4fd8>
    6bfc:	str	r1, [sp, #12]
    6c00:	add	r2, pc, r2
    6c04:	str	r3, [sp, #8]
    6c08:	str	r2, [sp]
    6c0c:	str	r6, [sp, #4]
    6c10:	mvn	r3, #0
    6c14:	mov	r2, #1
    6c18:	mov	r1, #131072	; 0x20000
    6c1c:	ldr	r0, [sp, #24]
    6c20:	bl	1e28 <__snprintf_chk@plt>
    6c24:	ldr	r3, [sp, #40]	; 0x28
    6c28:	add	fp, fp, #1
    6c2c:	cmp	r3, fp
    6c30:	bne	6b50 <ippGetInteger@plt+0x4b84>
    6c34:	b	69d4 <ippGetInteger@plt+0x4a08>
    6c38:	cmp	fp, #0
    6c3c:	ble	69cc <ippGetInteger@plt+0x4a00>
    6c40:	ldr	r7, [pc, #864]	; 6fa8 <ippGetInteger@plt+0x4fdc>
    6c44:	mov	r3, #1
    6c48:	add	r7, pc, r7
    6c4c:	str	r3, [sp, #16]
    6c50:	mov	r4, #0
    6c54:	ldr	r8, [sp, #24]
    6c58:	b	6c74 <ippGetInteger@plt+0x4ca8>
    6c5c:	ldrb	r2, [r8]
    6c60:	cmp	r2, #0
    6c64:	beq	6e6c <ippGetInteger@plt+0x4ea0>
    6c68:	add	r4, r4, #1
    6c6c:	cmp	fp, r4
    6c70:	beq	69d4 <ippGetInteger@plt+0x4a08>
    6c74:	mov	r2, #0
    6c78:	mov	r1, r4
    6c7c:	mov	r0, sl
    6c80:	bl	19cc <ippGetString@plt>
    6c84:	mov	r1, r0
    6c88:	mov	r9, r0
    6c8c:	mov	r0, r5
    6c90:	bl	1984 <ippContainsString@plt>
    6c94:	subs	r6, r0, #0
    6c98:	bne	6c5c <ippGetInteger@plt+0x4c90>
    6c9c:	mov	r0, sl
    6ca0:	bl	1ab0 <ippGetName@plt>
    6ca4:	mov	r3, r9
    6ca8:	mov	r1, r7
    6cac:	mov	r2, r0
    6cb0:	ldr	r0, [sp, #20]
    6cb4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6cb8:	str	r6, [sp, #16]
    6cbc:	b	6c68 <ippGetInteger@plt+0x4c9c>
    6cc0:	mov	r0, r5
    6cc4:	bl	1f78 <ippGetValueTag@plt>
    6cc8:	cmp	r0, #35	; 0x23
    6ccc:	bne	6a14 <ippGetInteger@plt+0x4a48>
    6cd0:	cmp	fp, #0
    6cd4:	ble	69cc <ippGetInteger@plt+0x4a00>
    6cd8:	ldr	r8, [pc, #716]	; 6fac <ippGetInteger@plt+0x4fe0>
    6cdc:	ldr	r7, [pc, #716]	; 6fb0 <ippGetInteger@plt+0x4fe4>
    6ce0:	add	r8, pc, r8
    6ce4:	mov	r3, #1
    6ce8:	ldr	r9, [sp, #24]
    6cec:	add	r7, pc, r7
    6cf0:	str	r3, [sp, #16]
    6cf4:	mov	r4, #0
    6cf8:	str	r8, [sp, #24]
    6cfc:	b	6d18 <ippGetInteger@plt+0x4d4c>
    6d00:	ldrb	r2, [r9]
    6d04:	cmp	r2, #0
    6d08:	beq	6eb8 <ippGetInteger@plt+0x4eec>
    6d0c:	add	r4, r4, #1
    6d10:	cmp	fp, r4
    6d14:	beq	69d4 <ippGetInteger@plt+0x4a08>
    6d18:	mov	r1, r4
    6d1c:	mov	r0, sl
    6d20:	bl	1fcc <ippGetInteger@plt>
    6d24:	mov	r1, r0
    6d28:	mov	r8, r0
    6d2c:	mov	r0, r5
    6d30:	bl	1c78 <ippContainsInteger@plt>
    6d34:	subs	r6, r0, #0
    6d38:	bne	6d00 <ippGetInteger@plt+0x4d34>
    6d3c:	mov	r0, sl
    6d40:	bl	1ab0 <ippGetName@plt>
    6d44:	mov	r3, r8
    6d48:	mov	r1, r7
    6d4c:	mov	r2, r0
    6d50:	ldr	r0, [sp, #20]
    6d54:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6d58:	str	r6, [sp, #16]
    6d5c:	b	6d0c <ippGetInteger@plt+0x4d40>
    6d60:	cmp	fp, #0
    6d64:	ble	69cc <ippGetInteger@plt+0x4a00>
    6d68:	ldr	r8, [pc, #580]	; 6fb4 <ippGetInteger@plt+0x4fe8>
    6d6c:	ldr	r7, [pc, #580]	; 6fb8 <ippGetInteger@plt+0x4fec>
    6d70:	add	r8, pc, r8
    6d74:	mov	r3, #1
    6d78:	ldr	r9, [sp, #24]
    6d7c:	add	r7, pc, r7
    6d80:	str	r3, [sp, #16]
    6d84:	mov	r4, #0
    6d88:	str	r8, [sp, #24]
    6d8c:	b	6da8 <ippGetInteger@plt+0x4ddc>
    6d90:	ldrb	r2, [r9]
    6d94:	cmp	r2, #0
    6d98:	beq	6e80 <ippGetInteger@plt+0x4eb4>
    6d9c:	add	r4, r4, #1
    6da0:	cmp	fp, r4
    6da4:	beq	69d4 <ippGetInteger@plt+0x4a08>
    6da8:	mov	r1, r4
    6dac:	mov	r0, sl
    6db0:	bl	1fcc <ippGetInteger@plt>
    6db4:	mov	r1, r0
    6db8:	mov	r8, r0
    6dbc:	mov	r0, r5
    6dc0:	bl	1c78 <ippContainsInteger@plt>
    6dc4:	subs	r6, r0, #0
    6dc8:	bne	6d90 <ippGetInteger@plt+0x4dc4>
    6dcc:	mov	r0, sl
    6dd0:	bl	1ab0 <ippGetName@plt>
    6dd4:	mov	r3, r8
    6dd8:	mov	r1, r7
    6ddc:	mov	r2, r0
    6de0:	ldr	r0, [sp, #20]
    6de4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6de8:	str	r6, [sp, #16]
    6dec:	b	6d9c <ippGetInteger@plt+0x4dd0>
    6df0:	mov	r0, sl
    6df4:	bl	1ab0 <ippGetName@plt>
    6df8:	mov	r3, r4
    6dfc:	mov	r1, r8
    6e00:	mov	r2, r0
    6e04:	ldr	r0, [sp, #20]
    6e08:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6e0c:	mov	r3, #0
    6e10:	str	r3, [sp, #16]
    6e14:	b	6ae0 <ippGetInteger@plt+0x4b14>
    6e18:	ldr	r3, [sp, #60]	; 0x3c
    6e1c:	cmp	r6, r3
    6e20:	beq	6edc <ippGetInteger@plt+0x4f10>
    6e24:	mov	r0, sl
    6e28:	bl	1ab0 <ippGetName@plt>
    6e2c:	ldr	r3, [sp, #64]	; 0x40
    6e30:	ldr	r1, [sp, #60]	; 0x3c
    6e34:	cmp	r3, #3
    6e38:	ldr	r3, [sp, #48]	; 0x30
    6e3c:	moveq	ip, r3
    6e40:	mov	r3, r6
    6e44:	mov	r2, r0
    6e48:	ldr	r0, [sp, #52]	; 0x34
    6e4c:	movne	ip, r0
    6e50:	ldr	r0, [sp, #20]
    6e54:	stm	sp, {r1, ip}
    6e58:	ldr	r1, [sp, #44]	; 0x2c
    6e5c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6e60:	mov	r3, #0
    6e64:	str	r3, [sp, #16]
    6e68:	b	6c24 <ippGetInteger@plt+0x4c58>
    6e6c:	mov	r1, r9
    6e70:	mov	r2, #131072	; 0x20000
    6e74:	mov	r0, r8
    6e78:	bl	1e64 <_cups_strlcpy@plt>
    6e7c:	b	6c68 <ippGetInteger@plt+0x4c9c>
    6e80:	ldr	r3, [sp, #24]
    6e84:	str	r8, [sp, #4]
    6e88:	str	r3, [sp]
    6e8c:	mov	r2, #1
    6e90:	mvn	r3, #0
    6e94:	mov	r1, #131072	; 0x20000
    6e98:	mov	r0, r9
    6e9c:	bl	1e28 <__snprintf_chk@plt>
    6ea0:	b	6d9c <ippGetInteger@plt+0x4dd0>
    6ea4:	mov	r2, #131072	; 0x20000
    6ea8:	mov	r1, r4
    6eac:	mov	r0, r3
    6eb0:	bl	1e64 <_cups_strlcpy@plt>
    6eb4:	b	6ad8 <ippGetInteger@plt+0x4b0c>
    6eb8:	ldr	r3, [sp, #24]
    6ebc:	str	r8, [sp, #4]
    6ec0:	str	r3, [sp]
    6ec4:	mov	r2, #1
    6ec8:	mvn	r3, #0
    6ecc:	mov	r1, #131072	; 0x20000
    6ed0:	mov	r0, r9
    6ed4:	bl	1e28 <__snprintf_chk@plt>
    6ed8:	b	6d0c <ippGetInteger@plt+0x4d40>
    6edc:	mov	r0, sl
    6ee0:	bl	1ab0 <ippGetName@plt>
    6ee4:	ldr	r3, [sp, #64]	; 0x40
    6ee8:	cmp	r3, #3
    6eec:	mov	r2, r0
    6ef0:	beq	6f5c <ippGetInteger@plt+0x4f90>
    6ef4:	ldr	r3, [pc, #192]	; 6fbc <ippGetInteger@plt+0x4ff0>
    6ef8:	add	r3, pc, r3
    6efc:	ldr	r1, [pc, #188]	; 6fc0 <ippGetInteger@plt+0x4ff4>
    6f00:	str	r3, [sp]
    6f04:	add	r1, pc, r1
    6f08:	mov	r3, r6
    6f0c:	ldr	r0, [sp, #20]
    6f10:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    6f14:	mov	r3, #0
    6f18:	str	r3, [sp, #16]
    6f1c:	b	6c24 <ippGetInteger@plt+0x4c58>
    6f20:	cmp	r2, #3
    6f24:	beq	6f74 <ippGetInteger@plt+0x4fa8>
    6f28:	ldr	r1, [pc, #148]	; 6fc4 <ippGetInteger@plt+0x4ff8>
    6f2c:	add	r1, pc, r1
    6f30:	ldr	r2, [pc, #144]	; 6fc8 <ippGetInteger@plt+0x4ffc>
    6f34:	str	r1, [sp, #8]
    6f38:	add	r2, pc, r2
    6f3c:	str	r3, [sp, #4]
    6f40:	str	r2, [sp]
    6f44:	mvn	r3, #0
    6f48:	mov	r2, #1
    6f4c:	mov	r1, #131072	; 0x20000
    6f50:	ldr	r0, [sp, #24]
    6f54:	bl	1e28 <__snprintf_chk@plt>
    6f58:	b	6c24 <ippGetInteger@plt+0x4c58>
    6f5c:	ldr	r3, [pc, #104]	; 6fcc <ippGetInteger@plt+0x5000>
    6f60:	add	r3, pc, r3
    6f64:	b	6efc <ippGetInteger@plt+0x4f30>
    6f68:	ldr	r1, [pc, #96]	; 6fd0 <ippGetInteger@plt+0x5004>
    6f6c:	add	r1, pc, r1
    6f70:	b	6bf8 <ippGetInteger@plt+0x4c2c>
    6f74:	ldr	r1, [pc, #88]	; 6fd4 <ippGetInteger@plt+0x5008>
    6f78:	add	r1, pc, r1
    6f7c:	b	6f30 <ippGetInteger@plt+0x4f64>
    6f80:	bl	1d14 <__stack_chk_fail@plt>
    6f84:	andeq	ip, r1, r0, lsl r5
    6f88:	andeq	r0, r0, r4, lsr r2
    6f8c:	strdeq	r9, [r0], -ip
    6f90:	andeq	r9, r0, r0, asr #25
    6f94:	andeq	r9, r0, r0, lsl #24
    6f98:	andeq	r8, r0, ip, lsr lr
    6f9c:	andeq	r8, r0, r0, lsr lr
    6fa0:	andeq	r8, r0, ip, ror #26
    6fa4:	andeq	r9, r0, r8, lsl fp
    6fa8:	ldrdeq	r9, [r0], -r8
    6fac:	andeq	r9, r0, ip, lsl sl
    6fb0:	andeq	r9, r0, r8, lsl #20
    6fb4:	andeq	r9, r0, ip, lsl #19
    6fb8:	andeq	r9, r0, r8, ror r9
    6fbc:	andeq	r8, r0, r8, ror #20
    6fc0:	strdeq	r9, [r0], -ip
    6fc4:	andeq	r8, r0, r4, lsr sl
    6fc8:	ldrdeq	r9, [r0], -r0
    6fcc:	strdeq	r8, [r0], -ip
    6fd0:	strdeq	r8, [r0], -r0
    6fd4:	andeq	r8, r0, r4, ror #19
    6fd8:	ldr	ip, [pc, #688]	; 7290 <ippGetInteger@plt+0x52c4>
    6fdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6fe0:	add	ip, pc, ip
    6fe4:	ldr	lr, [pc, #680]	; 7294 <ippGetInteger@plt+0x52c8>
    6fe8:	sub	sp, sp, #1824	; 0x720
    6fec:	sub	sp, sp, #8
    6ff0:	ldr	r7, [ip, lr]
    6ff4:	mov	r5, r3
    6ff8:	mov	r6, r2
    6ffc:	ldr	r3, [r7]
    7000:	mov	r2, #0
    7004:	mov	r8, r0
    7008:	str	r3, [sp, #1828]	; 0x724
    700c:	bl	19cc <ippGetString@plt>
    7010:	tst	r6, #4
    7014:	mov	r4, r0
    7018:	bne	71c4 <ippGetInteger@plt+0x51f8>
    701c:	tst	r6, #8
    7020:	bne	7240 <ippGetInteger@plt+0x5274>
    7024:	tst	r6, #16
    7028:	bne	7168 <ippGetInteger@plt+0x519c>
    702c:	mov	r0, r8
    7030:	bl	1f78 <ippGetValueTag@plt>
    7034:	cmp	r0, #69	; 0x45
    7038:	bne	7148 <ippGetInteger@plt+0x517c>
    703c:	ldr	r1, [pc, #596]	; 7298 <ippGetInteger@plt+0x52cc>
    7040:	mov	r2, #6
    7044:	add	r1, pc, r1
    7048:	mov	r0, r4
    704c:	bl	1a80 <strncmp@plt>
    7050:	cmp	r0, #0
    7054:	beq	70ac <ippGetInteger@plt+0x50e0>
    7058:	ldr	r1, [pc, #572]	; 729c <ippGetInteger@plt+0x52d0>
    705c:	mov	r2, #7
    7060:	add	r1, pc, r1
    7064:	mov	r0, r4
    7068:	bl	1a80 <strncmp@plt>
    706c:	cmp	r0, #0
    7070:	beq	70ac <ippGetInteger@plt+0x50e0>
    7074:	ldr	r1, [pc, #548]	; 72a0 <ippGetInteger@plt+0x52d4>
    7078:	mov	r2, #7
    707c:	add	r1, pc, r1
    7080:	mov	r0, r4
    7084:	bl	1a80 <strncmp@plt>
    7088:	cmp	r0, #0
    708c:	beq	70ac <ippGetInteger@plt+0x50e0>
    7090:	ldr	r1, [pc, #524]	; 72a4 <ippGetInteger@plt+0x52d8>
    7094:	mov	r2, #8
    7098:	add	r1, pc, r1
    709c:	mov	r0, r4
    70a0:	bl	1a80 <strncmp@plt>
    70a4:	cmp	r0, #0
    70a8:	bne	7148 <ippGetInteger@plt+0x517c>
    70ac:	mov	r3, #256	; 0x100
    70b0:	add	r6, sp, #548	; 0x224
    70b4:	add	r2, sp, #32
    70b8:	mov	r0, #1024	; 0x400
    70bc:	add	r8, sp, #36	; 0x24
    70c0:	add	sl, sp, #804	; 0x324
    70c4:	add	r9, sp, #292	; 0x124
    70c8:	str	r2, [sp, #16]
    70cc:	str	r0, [sp, #24]
    70d0:	mov	r1, r4
    70d4:	mov	r2, r8
    70d8:	str	sl, [sp, #20]
    70dc:	str	r3, [sp, #12]
    70e0:	stmib	sp, {r3, r6}
    70e4:	str	r9, [sp]
    70e8:	mov	r0, #15
    70ec:	bl	1b34 <httpSeparateURI@plt>
    70f0:	cmp	r0, #0
    70f4:	blt	71b4 <ippGetInteger@plt+0x51e8>
    70f8:	mov	r0, r6
    70fc:	bl	1e1c <strlen@plt>
    7100:	sub	r0, r0, #1
    7104:	cmn	r6, r0
    7108:	bcs	711c <ippGetInteger@plt+0x5150>
    710c:	ldrb	r3, [r6, r0]
    7110:	cmp	r3, #46	; 0x2e
    7114:	moveq	r3, #0
    7118:	strbeq	r3, [r6, r0]
    711c:	ldr	r2, [sp, #32]
    7120:	str	sl, [sp, #12]
    7124:	str	r2, [sp, #8]
    7128:	str	r6, [sp, #4]
    712c:	str	r9, [sp]
    7130:	mov	r3, r8
    7134:	mov	r2, #1024	; 0x400
    7138:	mov	r1, r5
    713c:	mov	r0, #15
    7140:	bl	1cc0 <httpAssembleURI@plt>
    7144:	mov	r4, r5
    7148:	ldr	r2, [sp, #1828]	; 0x724
    714c:	ldr	r3, [r7]
    7150:	mov	r0, r4
    7154:	cmp	r2, r3
    7158:	bne	728c <ippGetInteger@plt+0x52c0>
    715c:	add	sp, sp, #1824	; 0x720
    7160:	add	sp, sp, #8
    7164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7168:	add	r2, sp, #804	; 0x324
    716c:	str	r2, [sp, #20]
    7170:	add	r2, sp, #32
    7174:	str	r2, [sp, #16]
    7178:	add	r2, sp, #548	; 0x224
    717c:	mov	r0, #256	; 0x100
    7180:	mov	r3, #1024	; 0x400
    7184:	str	r2, [sp, #8]
    7188:	add	r2, sp, #292	; 0x124
    718c:	str	r0, [sp, #12]
    7190:	str	r0, [sp, #4]
    7194:	str	r2, [sp]
    7198:	mov	r1, r4
    719c:	str	r3, [sp, #24]
    71a0:	mov	r2, r5
    71a4:	mov	r0, #15
    71a8:	bl	1b34 <httpSeparateURI@plt>
    71ac:	cmp	r0, #0
    71b0:	bge	7144 <ippGetInteger@plt+0x5178>
    71b4:	mov	r3, #0
    71b8:	strb	r3, [r5]
    71bc:	mov	r4, r5
    71c0:	b	7148 <ippGetInteger@plt+0x517c>
    71c4:	mov	r0, #1024	; 0x400
    71c8:	add	r3, sp, #32
    71cc:	str	r0, [sp, #24]
    71d0:	str	r0, [sp, #12]
    71d4:	add	r0, sp, #804	; 0x324
    71d8:	str	r3, [sp, #16]
    71dc:	str	r0, [sp, #20]
    71e0:	mov	r3, #256	; 0x100
    71e4:	add	r0, sp, #292	; 0x124
    71e8:	str	r3, [sp, #4]
    71ec:	mov	r1, r4
    71f0:	add	r2, sp, #36	; 0x24
    71f4:	str	r0, [sp]
    71f8:	str	r5, [sp, #8]
    71fc:	mov	r0, #15
    7200:	bl	1b34 <httpSeparateURI@plt>
    7204:	cmp	r0, #0
    7208:	movlt	r3, #0
    720c:	strblt	r3, [r5]
    7210:	mov	r0, r5
    7214:	bl	1e1c <strlen@plt>
    7218:	sub	r0, r0, #1
    721c:	cmn	r5, r0
    7220:	bcs	7144 <ippGetInteger@plt+0x5178>
    7224:	ldrb	r3, [r5, r0]
    7228:	cmp	r3, #46	; 0x2e
    722c:	moveq	r3, #0
    7230:	strbeq	r3, [r5, r0]
    7234:	moveq	r4, r5
    7238:	bne	7144 <ippGetInteger@plt+0x5178>
    723c:	b	7148 <ippGetInteger@plt+0x517c>
    7240:	mov	r0, #1024	; 0x400
    7244:	str	r0, [sp, #24]
    7248:	add	r0, sp, #548	; 0x224
    724c:	mov	r3, #256	; 0x100
    7250:	add	ip, sp, #32
    7254:	str	r0, [sp, #8]
    7258:	add	r0, sp, #292	; 0x124
    725c:	str	r0, [sp]
    7260:	str	r5, [sp, #20]
    7264:	mov	r1, r4
    7268:	str	ip, [sp, #16]
    726c:	add	r2, sp, #36	; 0x24
    7270:	str	r3, [sp, #12]
    7274:	str	r3, [sp, #4]
    7278:	mov	r0, #15
    727c:	bl	1b34 <httpSeparateURI@plt>
    7280:	cmp	r0, #0
    7284:	bge	7144 <ippGetInteger@plt+0x5178>
    7288:	b	71b4 <ippGetInteger@plt+0x51e8>
    728c:	bl	1d14 <__stack_chk_fail@plt>
    7290:			; <UNDEFINED> instruction: 0x0001bdb8
    7294:	andeq	r0, r0, r4, lsr r2
    7298:	andeq	r9, r0, r0, lsl #14
    729c:	andeq	r9, r0, ip, ror #13
    72a0:	ldrdeq	r9, [r0], -r8
    72a4:	andeq	r9, r0, r4, asr #13
    72a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    72ac:	sub	sp, sp, #1104	; 0x450
    72b0:	sub	sp, sp, #4
    72b4:	ldr	ip, [pc, #3428]	; 8020 <ippGetInteger@plt+0x6054>
    72b8:	ldr	lr, [pc, #3428]	; 8024 <ippGetInteger@plt+0x6058>
    72bc:	add	ip, pc, ip
    72c0:	ldr	r5, [sp, #1148]	; 0x47c
    72c4:	subs	fp, r2, #0
    72c8:	str	r5, [sp, #24]
    72cc:	mov	r2, ip
    72d0:	ldr	ip, [ip, lr]
    72d4:	str	r3, [sp, #16]
    72d8:	mov	lr, ip
    72dc:	str	ip, [sp, #32]
    72e0:	ldr	r3, [lr]
    72e4:	mov	ip, #0
    72e8:	str	r1, [sp, #20]
    72ec:	strb	ip, [r5]
    72f0:	str	r3, [sp, #1100]	; 0x44c
    72f4:	ldr	r9, [sp, #1144]	; 0x478
    72f8:	beq	740c <ippGetInteger@plt+0x5440>
    72fc:	ldrb	r1, [fp]
    7300:	cmp	r1, #0
    7304:	beq	740c <ippGetInteger@plt+0x5440>
    7308:	ldr	r3, [r9, #8]
    730c:	ldr	r2, [sp, #16]
    7310:	sub	r3, r3, #18
    7314:	and	r5, r2, #1
    7318:	cmp	r3, #55	; 0x37
    731c:	addls	pc, pc, r3, lsl #2
    7320:	b	7410 <ippGetInteger@plt+0x5444>
    7324:	b	740c <ippGetInteger@plt+0x5440>
    7328:	b	740c <ippGetInteger@plt+0x5440>
    732c:	b	7410 <ippGetInteger@plt+0x5444>
    7330:	b	7410 <ippGetInteger@plt+0x5444>
    7334:	b	7410 <ippGetInteger@plt+0x5444>
    7338:	b	7410 <ippGetInteger@plt+0x5444>
    733c:	b	7410 <ippGetInteger@plt+0x5444>
    7340:	b	7410 <ippGetInteger@plt+0x5444>
    7344:	b	7410 <ippGetInteger@plt+0x5444>
    7348:	b	7410 <ippGetInteger@plt+0x5444>
    734c:	b	7410 <ippGetInteger@plt+0x5444>
    7350:	b	7410 <ippGetInteger@plt+0x5444>
    7354:	b	7410 <ippGetInteger@plt+0x5444>
    7358:	b	7410 <ippGetInteger@plt+0x5444>
    735c:	b	7410 <ippGetInteger@plt+0x5444>
    7360:	b	74fc <ippGetInteger@plt+0x5530>
    7364:	b	7620 <ippGetInteger@plt+0x5654>
    7368:	b	74fc <ippGetInteger@plt+0x5530>
    736c:	b	7410 <ippGetInteger@plt+0x5444>
    7370:	b	7410 <ippGetInteger@plt+0x5444>
    7374:	b	7410 <ippGetInteger@plt+0x5444>
    7378:	b	7410 <ippGetInteger@plt+0x5444>
    737c:	b	7410 <ippGetInteger@plt+0x5444>
    7380:	b	7410 <ippGetInteger@plt+0x5444>
    7384:	b	7410 <ippGetInteger@plt+0x5444>
    7388:	b	7410 <ippGetInteger@plt+0x5444>
    738c:	b	7410 <ippGetInteger@plt+0x5444>
    7390:	b	7410 <ippGetInteger@plt+0x5444>
    7394:	b	7410 <ippGetInteger@plt+0x5444>
    7398:	b	7410 <ippGetInteger@plt+0x5444>
    739c:	b	7410 <ippGetInteger@plt+0x5444>
    73a0:	b	7410 <ippGetInteger@plt+0x5444>
    73a4:	b	7698 <ippGetInteger@plt+0x56cc>
    73a8:	b	7854 <ippGetInteger@plt+0x5888>
    73ac:	b	7410 <ippGetInteger@plt+0x5444>
    73b0:	b	7434 <ippGetInteger@plt+0x5468>
    73b4:	b	7434 <ippGetInteger@plt+0x5468>
    73b8:	b	7410 <ippGetInteger@plt+0x5444>
    73bc:	b	7410 <ippGetInteger@plt+0x5444>
    73c0:	b	7410 <ippGetInteger@plt+0x5444>
    73c4:	b	7410 <ippGetInteger@plt+0x5444>
    73c8:	b	7410 <ippGetInteger@plt+0x5444>
    73cc:	b	7410 <ippGetInteger@plt+0x5444>
    73d0:	b	7410 <ippGetInteger@plt+0x5444>
    73d4:	b	7410 <ippGetInteger@plt+0x5444>
    73d8:	b	7410 <ippGetInteger@plt+0x5444>
    73dc:	b	7410 <ippGetInteger@plt+0x5444>
    73e0:	b	7434 <ippGetInteger@plt+0x5468>
    73e4:	b	7434 <ippGetInteger@plt+0x5468>
    73e8:	b	7410 <ippGetInteger@plt+0x5444>
    73ec:	b	7434 <ippGetInteger@plt+0x5468>
    73f0:	b	7434 <ippGetInteger@plt+0x5468>
    73f4:	b	7434 <ippGetInteger@plt+0x5468>
    73f8:	b	7434 <ippGetInteger@plt+0x5468>
    73fc:	b	7434 <ippGetInteger@plt+0x5468>
    7400:	b	7434 <ippGetInteger@plt+0x5468>
    7404:	cmp	r5, #0
    7408:	bne	7a14 <ippGetInteger@plt+0x5a48>
    740c:	mov	r5, #1
    7410:	ldr	r3, [sp, #32]
    7414:	ldr	r2, [sp, #1100]	; 0x44c
    7418:	mov	r0, r5
    741c:	ldr	r3, [r3]
    7420:	cmp	r2, r3
    7424:	bne	801c <ippGetInteger@plt+0x6050>
    7428:	add	sp, sp, #1104	; 0x450
    742c:	add	sp, sp, #4
    7430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7434:	ldr	r3, [sp, #16]
    7438:	tst	r3, #2
    743c:	beq	7b60 <ippGetInteger@plt+0x5b94>
    7440:	add	r8, sp, #44	; 0x2c
    7444:	mov	r4, r0
    7448:	mov	r2, #9
    744c:	mov	r0, r8
    7450:	mov	r1, fp
    7454:	bl	1a8c <regcomp@plt>
    7458:	subs	r7, r0, #0
    745c:	bne	7fe0 <ippGetInteger@plt+0x6014>
    7460:	ldr	r2, [sp, #20]
    7464:	ldr	r3, [r9, #16]
    7468:	adds	r6, r2, #0
    746c:	movne	r6, #1
    7470:	cmp	r3, #0
    7474:	ble	7f80 <ippGetInteger@plt+0x5fb4>
    7478:	mov	fp, r7
    747c:	add	r4, sp, #76	; 0x4c
    7480:	ldr	sl, [sp, #16]
    7484:	b	74b0 <ippGetInteger@plt+0x54e4>
    7488:	ldr	r3, [sp, #24]
    748c:	ldrb	r3, [r3]
    7490:	cmp	r3, #0
    7494:	beq	7d14 <ippGetInteger@plt+0x5d48>
    7498:	cmp	r5, #0
    749c:	beq	8010 <ippGetInteger@plt+0x6044>
    74a0:	ldr	r3, [r9, #16]
    74a4:	add	r7, r7, #1
    74a8:	cmp	r7, r3
    74ac:	bge	7f80 <ippGetInteger@plt+0x5fb4>
    74b0:	mov	r3, r4
    74b4:	mov	r2, sl
    74b8:	mov	r1, r7
    74bc:	mov	r0, r9
    74c0:	bl	6fd8 <ippGetInteger@plt+0x500c>
    74c4:	mov	r3, #0
    74c8:	str	fp, [sp]
    74cc:	mov	r2, r3
    74d0:	mov	r1, r0
    74d4:	mov	r0, r8
    74d8:	bl	1b58 <regexec@plt>
    74dc:	cmp	r0, #0
    74e0:	beq	7488 <ippGetInteger@plt+0x54bc>
    74e4:	cmp	r5, #0
    74e8:	beq	74a0 <ippGetInteger@plt+0x54d4>
    74ec:	mov	r5, #0
    74f0:	mov	r0, r8
    74f4:	bl	1b1c <regfree@plt>
    74f8:	b	7c64 <ippGetInteger@plt+0x5c98>
    74fc:	ldr	r2, [sp, #20]
    7500:	ldr	r3, [r9, #16]
    7504:	adds	r2, r2, #0
    7508:	movne	r2, #1
    750c:	cmp	r3, #0
    7510:	str	r2, [sp, #36]	; 0x24
    7514:	ble	7fb0 <ippGetInteger@plt+0x5fe4>
    7518:	str	r1, [sp, #28]
    751c:	bl	1d8c <__ctype_b_loc@plt>
    7520:	mov	r6, r9
    7524:	mov	sl, #0
    7528:	add	r8, sp, #44	; 0x2c
    752c:	ldr	r1, [sp, #28]
    7530:	str	fp, [sp, #28]
    7534:	mov	r7, r0
    7538:	ldr	r4, [sp, #28]
    753c:	ldr	r3, [r7]
    7540:	lsl	r2, r1, #1
    7544:	sub	r0, r1, #60	; 0x3c
    7548:	ldrh	r2, [r3, r2]
    754c:	uxtb	ip, r0
    7550:	sub	lr, r1, #44	; 0x2c
    7554:	cmp	lr, #1
    7558:	cmphi	ip, #2
    755c:	movls	ip, #1
    7560:	movhi	ip, #0
    7564:	tst	r2, #10240	; 0x2800
    7568:	movne	ip, #1
    756c:	cmp	ip, #0
    7570:	beq	7990 <ippGetInteger@plt+0x59c4>
    7574:	cmp	r1, #0
    7578:	beq	7990 <ippGetInteger@plt+0x59c4>
    757c:	lsr	r2, r2, #11
    7580:	eor	r2, r2, #1
    7584:	cmp	r1, #45	; 0x2d
    7588:	moveq	r2, #0
    758c:	andne	r2, r2, #1
    7590:	cmp	r2, #0
    7594:	movne	fp, #61	; 0x3d
    7598:	bne	75a4 <ippGetInteger@plt+0x55d8>
    759c:	b	7978 <ippGetInteger@plt+0x59ac>
    75a0:	sub	r0, r1, #60	; 0x3c
    75a4:	uxtb	r0, r0
    75a8:	cmp	r0, #2
    75ac:	movls	fp, r1
    75b0:	ldrb	r1, [r4, #1]!
    75b4:	cmp	r1, #0
    75b8:	beq	7990 <ippGetInteger@plt+0x59c4>
    75bc:	lsl	r2, r1, #1
    75c0:	ldrh	r2, [r3, r2]
    75c4:	lsr	r2, r2, #11
    75c8:	eor	r2, r2, #1
    75cc:	cmp	r1, #45	; 0x2d
    75d0:	moveq	r2, #0
    75d4:	andne	r2, r2, #1
    75d8:	cmp	r2, #0
    75dc:	bne	75a0 <ippGetInteger@plt+0x55d4>
    75e0:	mov	r1, r8
    75e4:	mov	r0, r4
    75e8:	bl	1a14 <strtol@plt>
    75ec:	ldr	r3, [sp, #44]	; 0x2c
    75f0:	cmp	r4, r3
    75f4:	beq	7990 <ippGetInteger@plt+0x59c4>
    75f8:	cmp	fp, #61	; 0x3d
    75fc:	beq	79c8 <ippGetInteger@plt+0x59fc>
    7600:	cmp	fp, #60	; 0x3c
    7604:	bne	7a34 <ippGetInteger@plt+0x5a68>
    7608:	ldr	r2, [r6, #20]
    760c:	cmp	r0, r2
    7610:	bgt	79d4 <ippGetInteger@plt+0x5a08>
    7614:	ldrb	r1, [r3]
    7618:	mov	r4, r3
    761c:	b	753c <ippGetInteger@plt+0x5570>
    7620:	ldr	r6, [r9, #16]
    7624:	cmp	r6, #0
    7628:	ble	7f8c <ippGetInteger@plt+0x5fc0>
    762c:	ldr	r7, [pc, #2548]	; 8028 <ippGetInteger@plt+0x605c>
    7630:	mov	r8, r9
    7634:	add	r7, pc, r7
    7638:	mov	r4, #0
    763c:	ldr	sl, [sp, #24]
    7640:	b	765c <ippGetInteger@plt+0x5690>
    7644:	cmp	r5, #0
    7648:	bne	7ed0 <ippGetInteger@plt+0x5f04>
    764c:	add	r4, r4, #1
    7650:	cmp	r4, r6
    7654:	add	r8, r8, #12
    7658:	bge	7e50 <ippGetInteger@plt+0x5e84>
    765c:	mov	r1, r7
    7660:	mov	r0, fp
    7664:	bl	1ec4 <strcmp@plt>
    7668:	ldrb	r3, [r8, #20]
    766c:	clz	r0, r0
    7670:	lsr	r0, r0, #5
    7674:	cmp	r0, r3
    7678:	bne	7644 <ippGetInteger@plt+0x5678>
    767c:	ldrb	r3, [sl]
    7680:	cmp	r3, #0
    7684:	beq	7b4c <ippGetInteger@plt+0x5b80>
    7688:	cmp	r5, #0
    768c:	beq	740c <ippGetInteger@plt+0x5440>
    7690:	ldr	r6, [r9, #16]
    7694:	b	764c <ippGetInteger@plt+0x5680>
    7698:	ldr	r3, [r9, #16]
    769c:	cmp	r3, #0
    76a0:	ble	7f8c <ippGetInteger@plt+0x5fc0>
    76a4:	ldr	r3, [pc, #2432]	; 802c <ippGetInteger@plt+0x6060>
    76a8:	ldr	r8, [pc, #2432]	; 8030 <ippGetInteger@plt+0x6064>
    76ac:	ldr	sl, [pc, #2432]	; 8034 <ippGetInteger@plt+0x6068>
    76b0:	add	r3, pc, r3
    76b4:	add	r8, pc, r8
    76b8:	str	r3, [sp, #28]
    76bc:	add	sl, pc, sl
    76c0:	mov	r6, r9
    76c4:	mov	r7, #0
    76c8:	add	r4, sp, #76	; 0x4c
    76cc:	b	76fc <ippGetInteger@plt+0x5730>
    76d0:	ldr	r3, [sp, #24]
    76d4:	ldrb	r3, [r3]
    76d8:	cmp	r3, #0
    76dc:	beq	7b20 <ippGetInteger@plt+0x5b54>
    76e0:	cmp	r5, #0
    76e4:	beq	740c <ippGetInteger@plt+0x5440>
    76e8:	ldr	r3, [r9, #16]
    76ec:	add	r7, r7, #1
    76f0:	cmp	r7, r3
    76f4:	add	r6, r6, #12
    76f8:	bge	7ddc <ippGetInteger@plt+0x5e10>
    76fc:	ldr	r2, [r6, #20]
    7700:	ldr	r1, [r6, #24]
    7704:	ldr	r3, [r6, #28]
    7708:	cmp	r2, r1
    770c:	beq	7ae4 <ippGetInteger@plt+0x5b18>
    7710:	cmp	r3, #3
    7714:	ldr	r3, [sp, #28]
    7718:	movne	r0, sl
    771c:	moveq	r0, r3
    7720:	mov	r3, #1024	; 0x400
    7724:	str	r1, [sp, #8]
    7728:	str	r2, [sp, #4]
    772c:	str	r0, [sp, #12]
    7730:	str	r8, [sp]
    7734:	mov	r1, r3
    7738:	mov	r2, #1
    773c:	mov	r0, r4
    7740:	bl	1e28 <__snprintf_chk@plt>
    7744:	mov	r1, r4
    7748:	mov	r0, fp
    774c:	bl	1ec4 <strcmp@plt>
    7750:	cmp	r0, #0
    7754:	beq	76d0 <ippGetInteger@plt+0x5704>
    7758:	cmp	r5, #0
    775c:	beq	76e8 <ippGetInteger@plt+0x571c>
    7760:	mov	r3, #1
    7764:	mov	r5, #0
    7768:	ldr	r2, [sp, #20]
    776c:	cmp	r2, #0
    7770:	moveq	r3, #0
    7774:	cmp	r3, #0
    7778:	beq	7410 <ippGetInteger@plt+0x5444>
    777c:	ldr	r3, [r9, #16]
    7780:	cmp	r3, #0
    7784:	ble	7cb0 <ippGetInteger@plt+0x5ce4>
    7788:	ldr	sl, [pc, #2216]	; 8038 <ippGetInteger@plt+0x606c>
    778c:	ldr	r8, [pc, #2216]	; 803c <ippGetInteger@plt+0x6070>
    7790:	ldr	r7, [pc, #2216]	; 8040 <ippGetInteger@plt+0x6074>
    7794:	add	sl, pc, sl
    7798:	add	r8, pc, r8
    779c:	add	r7, pc, r7
    77a0:	mov	r5, r9
    77a4:	mov	r6, #0
    77a8:	b	7804 <ippGetInteger@plt+0x5838>
    77ac:	cmp	r3, #3
    77b0:	moveq	r0, r8
    77b4:	movne	r0, r7
    77b8:	mov	r3, #1024	; 0x400
    77bc:	str	r1, [sp, #8]
    77c0:	str	r2, [sp, #4]
    77c4:	str	r0, [sp, #12]
    77c8:	str	sl, [sp]
    77cc:	mov	r1, r3
    77d0:	mov	r2, #1
    77d4:	mov	r0, r4
    77d8:	bl	1e28 <__snprintf_chk@plt>
    77dc:	mov	r1, r4
    77e0:	mov	r0, fp
    77e4:	bl	1ec4 <strcmp@plt>
    77e8:	cmp	r0, #0
    77ec:	bne	7cf8 <ippGetInteger@plt+0x5d2c>
    77f0:	ldr	r3, [r9, #16]
    77f4:	add	r6, r6, #1
    77f8:	cmp	r6, r3
    77fc:	add	r5, r5, #12
    7800:	bge	7cb0 <ippGetInteger@plt+0x5ce4>
    7804:	ldr	r2, [r5, #20]
    7808:	ldr	r1, [r5, #24]
    780c:	ldr	r3, [r5, #28]
    7810:	cmp	r2, r1
    7814:	bne	77ac <ippGetInteger@plt+0x57e0>
    7818:	cmp	r3, #3
    781c:	beq	7d64 <ippGetInteger@plt+0x5d98>
    7820:	ldr	r0, [pc, #2076]	; 8044 <ippGetInteger@plt+0x6078>
    7824:	add	r0, pc, r0
    7828:	ldr	r1, [pc, #2072]	; 8048 <ippGetInteger@plt+0x607c>
    782c:	mov	r3, #1024	; 0x400
    7830:	add	r1, pc, r1
    7834:	str	r0, [sp, #8]
    7838:	str	r2, [sp, #4]
    783c:	str	r1, [sp]
    7840:	mov	r2, #1
    7844:	mov	r1, r3
    7848:	mov	r0, r4
    784c:	bl	1e28 <__snprintf_chk@plt>
    7850:	b	77dc <ippGetInteger@plt+0x5810>
    7854:	ldr	r2, [sp, #20]
    7858:	ldr	r3, [r9, #16]
    785c:	adds	r2, r2, #0
    7860:	movne	r2, #1
    7864:	cmp	r3, #0
    7868:	str	r2, [sp, #36]	; 0x24
    786c:	ble	7fb0 <ippGetInteger@plt+0x5fe4>
    7870:	str	r1, [sp, #28]
    7874:	bl	1d8c <__ctype_b_loc@plt>
    7878:	mov	r6, r9
    787c:	mov	sl, #0
    7880:	add	r8, sp, #44	; 0x2c
    7884:	ldr	r1, [sp, #28]
    7888:	str	fp, [sp, #28]
    788c:	mov	r7, r0
    7890:	ldr	r4, [sp, #28]
    7894:	ldr	r3, [r7]
    7898:	lsl	r2, r1, #1
    789c:	sub	r0, r1, #60	; 0x3c
    78a0:	ldrh	r2, [r3, r2]
    78a4:	uxtb	ip, r0
    78a8:	sub	lr, r1, #44	; 0x2c
    78ac:	cmp	lr, #1
    78b0:	cmphi	ip, #2
    78b4:	movls	ip, #1
    78b8:	movhi	ip, #0
    78bc:	tst	r2, #10240	; 0x2800
    78c0:	movne	ip, #1
    78c4:	cmp	ip, #0
    78c8:	beq	79b8 <ippGetInteger@plt+0x59ec>
    78cc:	cmp	r1, #0
    78d0:	beq	79b8 <ippGetInteger@plt+0x59ec>
    78d4:	lsr	r2, r2, #11
    78d8:	eor	r2, r2, #1
    78dc:	cmp	r1, #45	; 0x2d
    78e0:	moveq	r2, #0
    78e4:	andne	r2, r2, #1
    78e8:	cmp	r2, #0
    78ec:	movne	fp, #61	; 0x3d
    78f0:	bne	78fc <ippGetInteger@plt+0x5930>
    78f4:	b	79a0 <ippGetInteger@plt+0x59d4>
    78f8:	sub	r0, r1, #60	; 0x3c
    78fc:	uxtb	r0, r0
    7900:	cmp	r0, #2
    7904:	movls	fp, r1
    7908:	ldrb	r1, [r4, #1]!
    790c:	cmp	r1, #0
    7910:	beq	79b8 <ippGetInteger@plt+0x59ec>
    7914:	lsl	r2, r1, #1
    7918:	ldrh	r2, [r3, r2]
    791c:	lsr	r2, r2, #11
    7920:	eor	r2, r2, #1
    7924:	cmp	r1, #45	; 0x2d
    7928:	moveq	r2, #0
    792c:	andne	r2, r2, #1
    7930:	cmp	r2, #0
    7934:	bne	78f8 <ippGetInteger@plt+0x592c>
    7938:	mov	r1, r8
    793c:	mov	r0, r4
    7940:	bl	1a14 <strtol@plt>
    7944:	ldr	r3, [sp, #44]	; 0x2c
    7948:	cmp	r4, r3
    794c:	beq	79b8 <ippGetInteger@plt+0x59ec>
    7950:	cmp	fp, #61	; 0x3d
    7954:	beq	7a4c <ippGetInteger@plt+0x5a80>
    7958:	cmp	fp, #60	; 0x3c
    795c:	bne	7acc <ippGetInteger@plt+0x5b00>
    7960:	ldr	r2, [r6, #24]
    7964:	cmp	r0, r2
    7968:	bgt	7a64 <ippGetInteger@plt+0x5a98>
    796c:	ldrb	r1, [r3]
    7970:	mov	r4, r3
    7974:	b	7894 <ippGetInteger@plt+0x58c8>
    7978:	mov	r1, r8
    797c:	mov	r0, r4
    7980:	bl	1a14 <strtol@plt>
    7984:	ldr	r3, [sp, #44]	; 0x2c
    7988:	cmp	r4, r3
    798c:	bne	79c8 <ippGetInteger@plt+0x59fc>
    7990:	cmp	r5, #0
    7994:	beq	7a14 <ippGetInteger@plt+0x5a48>
    7998:	mov	r5, #0
    799c:	b	7dfc <ippGetInteger@plt+0x5e30>
    79a0:	mov	r1, r8
    79a4:	mov	r0, r4
    79a8:	bl	1a14 <strtol@plt>
    79ac:	ldr	r3, [sp, #44]	; 0x2c
    79b0:	cmp	r4, r3
    79b4:	bne	7a4c <ippGetInteger@plt+0x5a80>
    79b8:	cmp	r5, #0
    79bc:	beq	7aac <ippGetInteger@plt+0x5ae0>
    79c0:	mov	r5, #0
    79c4:	b	7d80 <ippGetInteger@plt+0x5db4>
    79c8:	ldr	r2, [r6, #20]
    79cc:	cmp	r2, r0
    79d0:	bne	7614 <ippGetInteger@plt+0x5648>
    79d4:	ldr	r3, [sp, #24]
    79d8:	ldrb	r3, [r3]
    79dc:	cmp	r3, #0
    79e0:	bne	7404 <ippGetInteger@plt+0x5438>
    79e4:	ldr	r3, [pc, #1632]	; 804c <ippGetInteger@plt+0x6080>
    79e8:	ldr	r2, [r6, #20]
    79ec:	add	r3, pc, r3
    79f0:	str	r2, [sp, #4]
    79f4:	str	r3, [sp]
    79f8:	mov	r2, #1
    79fc:	mvn	r3, #0
    7a00:	mov	r1, #131072	; 0x20000
    7a04:	ldr	r0, [sp, #24]
    7a08:	bl	1e28 <__snprintf_chk@plt>
    7a0c:	cmp	r5, #0
    7a10:	beq	740c <ippGetInteger@plt+0x5440>
    7a14:	ldr	r3, [r9, #16]
    7a18:	add	sl, sl, #1
    7a1c:	cmp	sl, r3
    7a20:	add	r6, r6, #12
    7a24:	bge	7dec <ippGetInteger@plt+0x5e20>
    7a28:	ldr	r3, [sp, #28]
    7a2c:	ldrb	r1, [r3]
    7a30:	b	7538 <ippGetInteger@plt+0x556c>
    7a34:	cmp	fp, #62	; 0x3e
    7a38:	bne	7614 <ippGetInteger@plt+0x5648>
    7a3c:	ldr	r2, [r6, #20]
    7a40:	cmp	r0, r2
    7a44:	bge	7614 <ippGetInteger@plt+0x5648>
    7a48:	b	79d4 <ippGetInteger@plt+0x5a08>
    7a4c:	ldr	r2, [r6, #20]
    7a50:	cmp	r2, r0
    7a54:	beq	7a64 <ippGetInteger@plt+0x5a98>
    7a58:	ldr	r2, [r6, #24]
    7a5c:	cmp	r2, r0
    7a60:	bne	796c <ippGetInteger@plt+0x59a0>
    7a64:	ldr	r3, [sp, #24]
    7a68:	ldrb	r3, [r3]
    7a6c:	cmp	r3, #0
    7a70:	bne	7b34 <ippGetInteger@plt+0x5b68>
    7a74:	ldr	r3, [pc, #1492]	; 8050 <ippGetInteger@plt+0x6084>
    7a78:	ldr	r1, [r9, #24]
    7a7c:	ldr	r2, [r9, #20]
    7a80:	add	r3, pc, r3
    7a84:	str	r1, [sp, #8]
    7a88:	str	r2, [sp, #4]
    7a8c:	str	r3, [sp]
    7a90:	mov	r2, #1
    7a94:	mvn	r3, #0
    7a98:	mov	r1, #131072	; 0x20000
    7a9c:	ldr	r0, [sp, #24]
    7aa0:	bl	1e28 <__snprintf_chk@plt>
    7aa4:	cmp	r5, #0
    7aa8:	beq	740c <ippGetInteger@plt+0x5440>
    7aac:	ldr	r3, [r9, #16]
    7ab0:	add	sl, sl, #1
    7ab4:	cmp	sl, r3
    7ab8:	add	r6, r6, #12
    7abc:	bge	7d70 <ippGetInteger@plt+0x5da4>
    7ac0:	ldr	r3, [sp, #28]
    7ac4:	ldrb	r1, [r3]
    7ac8:	b	7890 <ippGetInteger@plt+0x58c4>
    7acc:	cmp	fp, #62	; 0x3e
    7ad0:	bne	796c <ippGetInteger@plt+0x59a0>
    7ad4:	ldr	r2, [r6, #24]
    7ad8:	cmp	r0, r2
    7adc:	bge	796c <ippGetInteger@plt+0x59a0>
    7ae0:	b	7a64 <ippGetInteger@plt+0x5a98>
    7ae4:	cmp	r3, #3
    7ae8:	beq	7b40 <ippGetInteger@plt+0x5b74>
    7aec:	ldr	r0, [pc, #1376]	; 8054 <ippGetInteger@plt+0x6088>
    7af0:	add	r0, pc, r0
    7af4:	ldr	r1, [pc, #1372]	; 8058 <ippGetInteger@plt+0x608c>
    7af8:	mov	r3, #1024	; 0x400
    7afc:	add	r1, pc, r1
    7b00:	str	r0, [sp, #8]
    7b04:	str	r2, [sp, #4]
    7b08:	str	r1, [sp]
    7b0c:	mov	r2, #1
    7b10:	mov	r1, r3
    7b14:	mov	r0, r4
    7b18:	bl	1e28 <__snprintf_chk@plt>
    7b1c:	b	7744 <ippGetInteger@plt+0x5778>
    7b20:	mov	r2, #131072	; 0x20000
    7b24:	mov	r1, fp
    7b28:	ldr	r0, [sp, #24]
    7b2c:	bl	1e64 <_cups_strlcpy@plt>
    7b30:	b	76e0 <ippGetInteger@plt+0x5714>
    7b34:	cmp	r5, #0
    7b38:	beq	740c <ippGetInteger@plt+0x5440>
    7b3c:	b	7aac <ippGetInteger@plt+0x5ae0>
    7b40:	ldr	r0, [pc, #1300]	; 805c <ippGetInteger@plt+0x6090>
    7b44:	add	r0, pc, r0
    7b48:	b	7af4 <ippGetInteger@plt+0x5b28>
    7b4c:	mov	r2, #131072	; 0x20000
    7b50:	mov	r1, fp
    7b54:	mov	r0, sl
    7b58:	bl	1e64 <_cups_strlcpy@plt>
    7b5c:	b	7688 <ippGetInteger@plt+0x56bc>
    7b60:	mov	r0, r9
    7b64:	bl	1f78 <ippGetValueTag@plt>
    7b68:	cmp	r0, #69	; 0x45
    7b6c:	beq	7edc <ippGetInteger@plt+0x5f10>
    7b70:	ldr	r3, [r9, #16]
    7b74:	cmp	r3, #0
    7b78:	ble	7c50 <ippGetInteger@plt+0x5c84>
    7b7c:	ldr	r8, [sp, #16]
    7b80:	ldr	sl, [sp, #24]
    7b84:	mov	r6, #0
    7b88:	add	r4, sp, #76	; 0x4c
    7b8c:	and	r7, r8, #20
    7b90:	mov	r0, r9
    7b94:	bl	1f78 <ippGetValueTag@plt>
    7b98:	mov	r3, r4
    7b9c:	mov	r2, r8
    7ba0:	mov	r1, r6
    7ba4:	sub	r0, r0, #53	; 0x35
    7ba8:	cmp	r0, #20
    7bac:	addls	pc, pc, r0, lsl #2
    7bb0:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bb4:	b	7cb8 <ippGetInteger@plt+0x5cec>
    7bb8:	b	7cb8 <ippGetInteger@plt+0x5cec>
    7bbc:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bc0:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bc4:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bc8:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bcc:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bd0:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bd4:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bd8:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bdc:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7be0:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7be4:	b	7cb8 <ippGetInteger@plt+0x5cec>
    7be8:	b	7cb8 <ippGetInteger@plt+0x5cec>
    7bec:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bf0:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bf4:	b	7c08 <ippGetInteger@plt+0x5c3c>
    7bf8:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7bfc:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7c00:	b	7cc0 <ippGetInteger@plt+0x5cf4>
    7c04:	b	7cb8 <ippGetInteger@plt+0x5cec>
    7c08:	cmp	r7, #0
    7c0c:	mov	r0, r9
    7c10:	beq	7cc4 <ippGetInteger@plt+0x5cf8>
    7c14:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7c18:	mov	r1, r0
    7c1c:	mov	r0, fp
    7c20:	bl	1a08 <_cups_strcasecmp@plt>
    7c24:	cmp	r0, #0
    7c28:	bne	7cdc <ippGetInteger@plt+0x5d10>
    7c2c:	ldrb	r3, [sl]
    7c30:	cmp	r3, #0
    7c34:	beq	7d3c <ippGetInteger@plt+0x5d70>
    7c38:	cmp	r5, #0
    7c3c:	beq	740c <ippGetInteger@plt+0x5440>
    7c40:	ldr	r3, [r9, #16]
    7c44:	add	r6, r6, #1
    7c48:	cmp	r6, r3
    7c4c:	blt	7b90 <ippGetInteger@plt+0x5bc4>
    7c50:	ldr	r3, [sp, #20]
    7c54:	adds	r6, r3, #0
    7c58:	ldr	r3, [sp, #16]
    7c5c:	movne	r6, #1
    7c60:	bic	r6, r6, r3
    7c64:	cmp	r6, #0
    7c68:	beq	7410 <ippGetInteger@plt+0x5444>
    7c6c:	ldr	r3, [r9, #16]
    7c70:	cmp	r3, #0
    7c74:	ble	7cb0 <ippGetInteger@plt+0x5ce4>
    7c78:	ldr	r6, [pc, #992]	; 8060 <ippGetInteger@plt+0x6094>
    7c7c:	mov	r5, r9
    7c80:	add	r6, pc, r6
    7c84:	mov	r4, #0
    7c88:	ldr	r3, [r5, #24]
    7c8c:	ldr	r2, [r9, #12]
    7c90:	mov	r1, r6
    7c94:	ldr	r0, [sp, #20]
    7c98:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    7c9c:	ldr	r3, [r9, #16]
    7ca0:	add	r4, r4, #1
    7ca4:	cmp	r4, r3
    7ca8:	add	r5, r5, #12
    7cac:	blt	7c88 <ippGetInteger@plt+0x5cbc>
    7cb0:	mov	r5, #0
    7cb4:	b	7410 <ippGetInteger@plt+0x5444>
    7cb8:	mov	r0, r9
    7cbc:	b	7c14 <ippGetInteger@plt+0x5c48>
    7cc0:	mov	r0, r9
    7cc4:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7cc8:	mov	r1, r0
    7ccc:	mov	r0, fp
    7cd0:	bl	1ec4 <strcmp@plt>
    7cd4:	cmp	r0, #0
    7cd8:	beq	7c2c <ippGetInteger@plt+0x5c60>
    7cdc:	cmp	r5, #0
    7ce0:	beq	7c40 <ippGetInteger@plt+0x5c74>
    7ce4:	ldr	r3, [sp, #20]
    7ce8:	mov	r5, #0
    7cec:	adds	r6, r3, #0
    7cf0:	movne	r6, #1
    7cf4:	b	7c64 <ippGetInteger@plt+0x5c98>
    7cf8:	ldr	r1, [pc, #868]	; 8064 <ippGetInteger@plt+0x6098>
    7cfc:	mov	r3, r4
    7d00:	ldr	r2, [r9, #12]
    7d04:	add	r1, pc, r1
    7d08:	ldr	r0, [sp, #20]
    7d0c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    7d10:	b	77f0 <ippGetInteger@plt+0x5824>
    7d14:	mov	r2, sl
    7d18:	mov	r1, r7
    7d1c:	mov	r3, r4
    7d20:	mov	r0, r9
    7d24:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7d28:	mov	r2, #131072	; 0x20000
    7d2c:	mov	r1, r0
    7d30:	ldr	r0, [sp, #24]
    7d34:	bl	1e64 <_cups_strlcpy@plt>
    7d38:	b	7498 <ippGetInteger@plt+0x54cc>
    7d3c:	mov	r2, r8
    7d40:	mov	r1, r6
    7d44:	mov	r3, r4
    7d48:	mov	r0, r9
    7d4c:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7d50:	mov	r2, #131072	; 0x20000
    7d54:	mov	r1, r0
    7d58:	mov	r0, sl
    7d5c:	bl	1e64 <_cups_strlcpy@plt>
    7d60:	b	7c38 <ippGetInteger@plt+0x5c6c>
    7d64:	ldr	r0, [pc, #764]	; 8068 <ippGetInteger@plt+0x609c>
    7d68:	add	r0, pc, r0
    7d6c:	b	7828 <ippGetInteger@plt+0x585c>
    7d70:	ldr	r3, [sp, #36]	; 0x24
    7d74:	ldr	r2, [sp, #16]
    7d78:	bic	r3, r3, r2
    7d7c:	str	r3, [sp, #36]	; 0x24
    7d80:	ldr	r3, [sp, #36]	; 0x24
    7d84:	cmp	r3, #0
    7d88:	beq	7410 <ippGetInteger@plt+0x5444>
    7d8c:	ldr	r3, [r9, #16]
    7d90:	cmp	r3, #0
    7d94:	ble	7cb0 <ippGetInteger@plt+0x5ce4>
    7d98:	ldr	r6, [pc, #716]	; 806c <ippGetInteger@plt+0x60a0>
    7d9c:	mov	r4, r9
    7da0:	add	r6, pc, r6
    7da4:	mov	r5, #0
    7da8:	ldr	r2, [r4, #24]
    7dac:	ldr	r3, [r4, #20]
    7db0:	mov	r1, r6
    7db4:	str	r2, [sp]
    7db8:	ldr	r0, [sp, #20]
    7dbc:	ldr	r2, [r9, #12]
    7dc0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    7dc4:	ldr	r3, [r9, #16]
    7dc8:	add	r5, r5, #1
    7dcc:	cmp	r5, r3
    7dd0:	add	r4, r4, #12
    7dd4:	blt	7da8 <ippGetInteger@plt+0x5ddc>
    7dd8:	b	7cb0 <ippGetInteger@plt+0x5ce4>
    7ddc:	ldr	r3, [sp, #16]
    7de0:	mvn	r3, r3
    7de4:	and	r3, r3, #1
    7de8:	b	7768 <ippGetInteger@plt+0x579c>
    7dec:	ldr	r3, [sp, #36]	; 0x24
    7df0:	ldr	r2, [sp, #16]
    7df4:	bic	r3, r3, r2
    7df8:	str	r3, [sp, #36]	; 0x24
    7dfc:	ldr	r3, [sp, #36]	; 0x24
    7e00:	cmp	r3, #0
    7e04:	beq	7410 <ippGetInteger@plt+0x5444>
    7e08:	ldr	r3, [r9, #16]
    7e0c:	cmp	r3, #0
    7e10:	ble	7cb0 <ippGetInteger@plt+0x5ce4>
    7e14:	ldr	r6, [pc, #596]	; 8070 <ippGetInteger@plt+0x60a4>
    7e18:	mov	r5, r9
    7e1c:	add	r6, pc, r6
    7e20:	mov	r4, #0
    7e24:	ldr	r3, [r5, #20]
    7e28:	ldr	r2, [r9, #12]
    7e2c:	mov	r1, r6
    7e30:	ldr	r0, [sp, #20]
    7e34:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    7e38:	ldr	r3, [r9, #16]
    7e3c:	add	r4, r4, #1
    7e40:	cmp	r4, r3
    7e44:	add	r5, r5, #12
    7e48:	blt	7e24 <ippGetInteger@plt+0x5e58>
    7e4c:	b	7cb0 <ippGetInteger@plt+0x5ce4>
    7e50:	ldr	r3, [sp, #16]
    7e54:	mvn	r3, r3
    7e58:	and	r3, r3, #1
    7e5c:	ldr	r2, [sp, #20]
    7e60:	cmp	r2, #0
    7e64:	moveq	r3, #0
    7e68:	cmp	r3, #0
    7e6c:	beq	7410 <ippGetInteger@plt+0x5444>
    7e70:	cmp	r6, #0
    7e74:	ble	7cb0 <ippGetInteger@plt+0x5ce4>
    7e78:	ldr	r8, [pc, #500]	; 8074 <ippGetInteger@plt+0x60a8>
    7e7c:	ldr	r7, [pc, #500]	; 8078 <ippGetInteger@plt+0x60ac>
    7e80:	ldr	r6, [pc, #500]	; 807c <ippGetInteger@plt+0x60b0>
    7e84:	add	r8, pc, r8
    7e88:	add	r7, pc, r7
    7e8c:	add	r6, pc, r6
    7e90:	mov	r5, r9
    7e94:	mov	r4, #0
    7e98:	ldrb	r3, [r5, #20]
    7e9c:	ldr	r2, [r9, #12]
    7ea0:	mov	r1, r6
    7ea4:	cmp	r3, #0
    7ea8:	movne	r3, r8
    7eac:	moveq	r3, r7
    7eb0:	ldr	r0, [sp, #20]
    7eb4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    7eb8:	ldr	r3, [r9, #16]
    7ebc:	add	r4, r4, #1
    7ec0:	cmp	r4, r3
    7ec4:	add	r5, r5, #12
    7ec8:	blt	7e98 <ippGetInteger@plt+0x5ecc>
    7ecc:	b	7cb0 <ippGetInteger@plt+0x5ce4>
    7ed0:	mov	r3, #1
    7ed4:	mov	r5, #0
    7ed8:	b	7e5c <ippGetInteger@plt+0x5e90>
    7edc:	ldr	r7, [sp, #16]
    7ee0:	ldr	r3, [r9, #16]
    7ee4:	ands	r6, r7, #28
    7ee8:	bne	7b74 <ippGetInteger@plt+0x5ba8>
    7eec:	cmp	r3, #0
    7ef0:	ble	7fc4 <ippGetInteger@plt+0x5ff8>
    7ef4:	add	r4, sp, #76	; 0x4c
    7ef8:	ldr	r8, [sp, #24]
    7efc:	b	7f24 <ippGetInteger@plt+0x5f58>
    7f00:	ldrb	r3, [r8]
    7f04:	cmp	r3, #0
    7f08:	beq	7f58 <ippGetInteger@plt+0x5f8c>
    7f0c:	cmp	r5, #0
    7f10:	beq	740c <ippGetInteger@plt+0x5440>
    7f14:	ldr	r3, [r9, #16]
    7f18:	add	r6, r6, #1
    7f1c:	cmp	r6, r3
    7f20:	bge	7c50 <ippGetInteger@plt+0x5c84>
    7f24:	mov	r3, r4
    7f28:	mov	r2, r7
    7f2c:	mov	r1, r6
    7f30:	mov	r0, r9
    7f34:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7f38:	mov	r1, r0
    7f3c:	mov	r0, fp
    7f40:	bl	390c <ippGetInteger@plt+0x1940>
    7f44:	cmp	r0, #0
    7f48:	beq	7f00 <ippGetInteger@plt+0x5f34>
    7f4c:	cmp	r5, #0
    7f50:	beq	7f14 <ippGetInteger@plt+0x5f48>
    7f54:	b	7ce4 <ippGetInteger@plt+0x5d18>
    7f58:	mov	r2, r7
    7f5c:	mov	r1, r6
    7f60:	mov	r3, r4
    7f64:	mov	r0, r9
    7f68:	bl	6fd8 <ippGetInteger@plt+0x500c>
    7f6c:	mov	r2, #131072	; 0x20000
    7f70:	mov	r1, r0
    7f74:	mov	r0, r8
    7f78:	bl	1e64 <_cups_strlcpy@plt>
    7f7c:	b	7f0c <ippGetInteger@plt+0x5f40>
    7f80:	ldr	r3, [sp, #16]
    7f84:	bic	r6, r6, r3
    7f88:	b	74f0 <ippGetInteger@plt+0x5524>
    7f8c:	ldr	r3, [sp, #16]
    7f90:	ldr	r2, [sp, #20]
    7f94:	mvn	r3, r3
    7f98:	cmp	r2, #0
    7f9c:	andne	r3, r3, #1
    7fa0:	moveq	r3, #0
    7fa4:	cmp	r3, #0
    7fa8:	bne	7cb0 <ippGetInteger@plt+0x5ce4>
    7fac:	b	7410 <ippGetInteger@plt+0x5444>
    7fb0:	mov	r3, r2
    7fb4:	ldr	r2, [sp, #16]
    7fb8:	bics	r3, r3, r2
    7fbc:	bne	7cb0 <ippGetInteger@plt+0x5ce4>
    7fc0:	b	7410 <ippGetInteger@plt+0x5444>
    7fc4:	ldr	r3, [sp, #20]
    7fc8:	ldr	r2, [sp, #16]
    7fcc:	adds	r3, r3, #0
    7fd0:	movne	r3, #1
    7fd4:	bics	r3, r3, r2
    7fd8:	bne	7cb0 <ippGetInteger@plt+0x5ce4>
    7fdc:	b	7410 <ippGetInteger@plt+0x5444>
    7fe0:	add	r5, sp, #76	; 0x4c
    7fe4:	mov	r1, r8
    7fe8:	mov	r2, r5
    7fec:	mov	r3, #1024	; 0x400
    7ff0:	bl	1c48 <regerror@plt>
    7ff4:	ldr	r1, [pc, #132]	; 8080 <ippGetInteger@plt+0x60b4>
    7ff8:	mov	r3, r5
    7ffc:	mov	r2, fp
    8000:	mov	r0, r4
    8004:	add	r1, pc, r1
    8008:	bl	4b10 <ippGetInteger@plt+0x2b44>
    800c:	b	7cb0 <ippGetInteger@plt+0x5ce4>
    8010:	mov	r6, r5
    8014:	mov	r5, #1
    8018:	b	74f0 <ippGetInteger@plt+0x5524>
    801c:	bl	1d14 <__stack_chk_fail@plt>
    8020:	ldrdeq	fp, [r1], -ip
    8024:	andeq	r0, r0, r4, lsr r2
    8028:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    802c:	andeq	r8, r0, ip, lsr #5
    8030:	andeq	r9, r0, r4, rrx
    8034:	andeq	r8, r0, r4, lsr #5
    8038:	andeq	r8, r0, r4, lsl #31
    803c:	andeq	r8, r0, r4, asr #3
    8040:	andeq	r8, r0, r4, asr #3
    8044:	andeq	r8, r0, ip, lsr r1
    8048:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    804c:	andeq	r8, r0, r0, lsl sp
    8050:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    8054:	andeq	r7, r0, r0, ror lr
    8058:	andeq	r8, r0, ip, lsl #24
    805c:	andeq	r7, r0, r8, lsl lr
    8060:	andeq	r8, r0, r8, asr #22
    8064:	andeq	r8, r0, ip, ror sl
    8068:	strdeq	r7, [r0], -r4
    806c:	ldrdeq	r8, [r0], -r0
    8070:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    8074:	andeq	r8, r0, r4, asr #14
    8078:	andeq	r8, r0, r0, ror #17
    807c:	strdeq	r8, [r0], -r4
    8080:	andeq	r8, r0, r8, lsl #15
    8084:	ldr	r3, [pc, #1504]	; 866c <ippGetInteger@plt+0x66a0>
    8088:	ldr	ip, [pc, #1504]	; 8670 <ippGetInteger@plt+0x66a4>
    808c:	add	r3, pc, r3
    8090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8094:	sub	sp, sp, #40960	; 0xa000
    8098:	ldr	r6, [r3, ip]
    809c:	sub	sp, sp, #52	; 0x34
    80a0:	mov	r5, r1
    80a4:	mov	r7, r2
    80a8:	ldr	r2, [r1, #12]
    80ac:	add	r1, sp, #40960	; 0xa000
    80b0:	add	r1, r1, #44	; 0x2c
    80b4:	ldr	r3, [r6]
    80b8:	cmp	r2, #0
    80bc:	mov	r4, r0
    80c0:	str	r3, [r1]
    80c4:	beq	8294 <ippGetInteger@plt+0x62c8>
    80c8:	cmp	r7, #0
    80cc:	beq	80f4 <ippGetInteger@plt+0x6128>
    80d0:	ldr	r3, [r5, #4]
    80d4:	ldr	r1, [r7]
    80d8:	cmp	r1, r3
    80dc:	beq	80f4 <ippGetInteger@plt+0x6128>
    80e0:	cmp	r3, #0
    80e4:	bne	8614 <ippGetInteger@plt+0x6648>
    80e8:	str	r3, [r7]
    80ec:	cmp	r2, #0
    80f0:	beq	8270 <ippGetInteger@plt+0x62a4>
    80f4:	ldr	r1, [pc, #1400]	; 8674 <ippGetInteger@plt+0x66a8>
    80f8:	mov	r0, r4
    80fc:	add	r1, pc, r1
    8100:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    8104:	ldr	r3, [r5, #16]
    8108:	cmp	r3, #1
    810c:	bgt	81c8 <ippGetInteger@plt+0x61fc>
    8110:	ldr	r0, [r5, #8]
    8114:	sub	r3, r0, #33	; 0x21
    8118:	cmp	r3, #40	; 0x28
    811c:	addls	pc, pc, r3, lsl #2
    8120:	b	85f4 <ippGetInteger@plt+0x6628>
    8124:	b	8428 <ippGetInteger@plt+0x645c>
    8128:	b	82ac <ippGetInteger@plt+0x62e0>
    812c:	b	8428 <ippGetInteger@plt+0x645c>
    8130:	b	85f4 <ippGetInteger@plt+0x6628>
    8134:	b	85f4 <ippGetInteger@plt+0x6628>
    8138:	b	85f4 <ippGetInteger@plt+0x6628>
    813c:	b	85f4 <ippGetInteger@plt+0x6628>
    8140:	b	85f4 <ippGetInteger@plt+0x6628>
    8144:	b	85f4 <ippGetInteger@plt+0x6628>
    8148:	b	85f4 <ippGetInteger@plt+0x6628>
    814c:	b	85f4 <ippGetInteger@plt+0x6628>
    8150:	b	85f4 <ippGetInteger@plt+0x6628>
    8154:	b	85f4 <ippGetInteger@plt+0x6628>
    8158:	b	85f4 <ippGetInteger@plt+0x6628>
    815c:	b	85f4 <ippGetInteger@plt+0x6628>
    8160:	b	8300 <ippGetInteger@plt+0x6334>
    8164:	b	84d8 <ippGetInteger@plt+0x650c>
    8168:	b	846c <ippGetInteger@plt+0x64a0>
    816c:	b	85b0 <ippGetInteger@plt+0x65e4>
    8170:	b	81dc <ippGetInteger@plt+0x6210>
    8174:	b	8360 <ippGetInteger@plt+0x6394>
    8178:	b	8360 <ippGetInteger@plt+0x6394>
    817c:	b	85f4 <ippGetInteger@plt+0x6628>
    8180:	b	85f4 <ippGetInteger@plt+0x6628>
    8184:	b	85f4 <ippGetInteger@plt+0x6628>
    8188:	b	85f4 <ippGetInteger@plt+0x6628>
    818c:	b	85f4 <ippGetInteger@plt+0x6628>
    8190:	b	85f4 <ippGetInteger@plt+0x6628>
    8194:	b	85f4 <ippGetInteger@plt+0x6628>
    8198:	b	85f4 <ippGetInteger@plt+0x6628>
    819c:	b	85f4 <ippGetInteger@plt+0x6628>
    81a0:	b	85f4 <ippGetInteger@plt+0x6628>
    81a4:	b	83e4 <ippGetInteger@plt+0x6418>
    81a8:	b	83e4 <ippGetInteger@plt+0x6418>
    81ac:	b	85f4 <ippGetInteger@plt+0x6628>
    81b0:	b	83e4 <ippGetInteger@plt+0x6418>
    81b4:	b	83e4 <ippGetInteger@plt+0x6418>
    81b8:	b	83e4 <ippGetInteger@plt+0x6418>
    81bc:	b	83e4 <ippGetInteger@plt+0x6418>
    81c0:	b	83e4 <ippGetInteger@plt+0x6418>
    81c4:	b	83e4 <ippGetInteger@plt+0x6418>
    81c8:	ldr	r1, [pc, #1192]	; 8678 <ippGetInteger@plt+0x66ac>
    81cc:	mov	r0, r4
    81d0:	add	r1, pc, r1
    81d4:	bl	1ee8 <cupsFilePuts@plt>
    81d8:	b	8110 <ippGetInteger@plt+0x6144>
    81dc:	ldr	r3, [r5, #16]
    81e0:	cmp	r3, #0
    81e4:	ble	8270 <ippGetInteger@plt+0x62a4>
    81e8:	ldr	sl, [pc, #1164]	; 867c <ippGetInteger@plt+0x66b0>
    81ec:	ldr	r9, [pc, #1164]	; 8680 <ippGetInteger@plt+0x66b4>
    81f0:	add	sl, pc, sl
    81f4:	add	r9, pc, r9
    81f8:	mov	r8, r5
    81fc:	mov	r7, #0
    8200:	mov	r1, sl
    8204:	mov	r0, r4
    8208:	bl	1ee8 <cupsFilePuts@plt>
    820c:	ldr	r3, [r8, #20]
    8210:	ldr	fp, [r3, #16]
    8214:	cmp	fp, #0
    8218:	beq	8238 <ippGetInteger@plt+0x626c>
    821c:	mov	r1, fp
    8220:	mov	r2, #0
    8224:	mov	r0, r4
    8228:	bl	8084 <ippGetInteger@plt+0x60b8>
    822c:	ldr	fp, [fp]
    8230:	cmp	fp, #0
    8234:	bne	821c <ippGetInteger@plt+0x6250>
    8238:	mov	r1, r9
    823c:	mov	r0, r4
    8240:	bl	1ee8 <cupsFilePuts@plt>
    8244:	ldr	r3, [r5, #16]
    8248:	add	r7, r7, #1
    824c:	cmp	r7, r3
    8250:	add	r8, r8, #12
    8254:	blt	8200 <ippGetInteger@plt+0x6234>
    8258:	cmp	r3, #1
    825c:	ble	8270 <ippGetInteger@plt+0x62a4>
    8260:	ldr	r1, [pc, #1052]	; 8684 <ippGetInteger@plt+0x66b8>
    8264:	mov	r0, r4
    8268:	add	r1, pc, r1
    826c:	bl	1ee8 <cupsFilePuts@plt>
    8270:	add	r3, sp, #40960	; 0xa000
    8274:	add	r3, r3, #44	; 0x2c
    8278:	ldr	r2, [r3]
    827c:	ldr	r3, [r6]
    8280:	cmp	r2, r3
    8284:	bne	8668 <ippGetInteger@plt+0x669c>
    8288:	add	sp, sp, #40960	; 0xa000
    828c:	add	sp, sp, #52	; 0x34
    8290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8294:	ldr	r3, [r5, #4]
    8298:	cmp	r3, #0
    829c:	bne	863c <ippGetInteger@plt+0x6670>
    82a0:	cmp	r7, #0
    82a4:	strne	r3, [r7]
    82a8:	b	8270 <ippGetInteger@plt+0x62a4>
    82ac:	ldr	r3, [r5, #16]
    82b0:	cmp	r3, #0
    82b4:	ble	8270 <ippGetInteger@plt+0x62a4>
    82b8:	ldr	sl, [pc, #968]	; 8688 <ippGetInteger@plt+0x66bc>
    82bc:	ldr	r9, [pc, #968]	; 868c <ippGetInteger@plt+0x66c0>
    82c0:	add	sl, pc, sl
    82c4:	add	r9, pc, r9
    82c8:	mov	r8, r5
    82cc:	mov	r7, #0
    82d0:	ldrb	r3, [r8, #20]
    82d4:	mov	r0, r4
    82d8:	add	r7, r7, #1
    82dc:	cmp	r3, #0
    82e0:	movne	r1, sl
    82e4:	moveq	r1, r9
    82e8:	bl	1ee8 <cupsFilePuts@plt>
    82ec:	ldr	r3, [r5, #16]
    82f0:	add	r8, r8, #12
    82f4:	cmp	r7, r3
    82f8:	blt	82d0 <ippGetInteger@plt+0x6304>
    82fc:	b	8258 <ippGetInteger@plt+0x628c>
    8300:	ldr	r3, [r5, #16]
    8304:	cmp	r3, #0
    8308:	ble	8270 <ippGetInteger@plt+0x62a4>
    830c:	ldr	sl, [pc, #892]	; 8690 <ippGetInteger@plt+0x66c4>
    8310:	ldr	fp, [pc, #892]	; 8694 <ippGetInteger@plt+0x66c8>
    8314:	add	sl, pc, sl
    8318:	mov	r7, r5
    831c:	mov	r8, #0
    8320:	add	r9, sp, #44	; 0x2c
    8324:	ldr	r3, [r7, #20]
    8328:	ldr	r2, [r7, #24]
    832c:	mov	r1, fp
    8330:	mov	r0, r9
    8334:	bl	1990 <httpEncode64_2@plt>
    8338:	mov	r1, sl
    833c:	add	r8, r8, #1
    8340:	add	r7, r7, #12
    8344:	mov	r2, r0
    8348:	mov	r0, r4
    834c:	bl	1dc8 <cupsFilePrintf@plt>
    8350:	ldr	r3, [r5, #16]
    8354:	cmp	r8, r3
    8358:	blt	8324 <ippGetInteger@plt+0x6358>
    835c:	b	8258 <ippGetInteger@plt+0x628c>
    8360:	ldr	r3, [r5, #16]
    8364:	cmp	r3, #0
    8368:	ble	8270 <ippGetInteger@plt+0x62a4>
    836c:	ldr	sl, [pc, #804]	; 8698 <ippGetInteger@plt+0x66cc>
    8370:	ldr	r9, [pc, #804]	; 869c <ippGetInteger@plt+0x66d0>
    8374:	add	sl, pc, sl
    8378:	add	r9, pc, r9
    837c:	mov	r7, r5
    8380:	mov	r8, #0
    8384:	mov	r1, sl
    8388:	mov	r0, r4
    838c:	bl	1ee8 <cupsFilePuts@plt>
    8390:	ldr	r2, [r7, #20]
    8394:	mov	r1, #0
    8398:	mov	r0, r4
    839c:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    83a0:	mov	r1, r9
    83a4:	mov	r0, r4
    83a8:	bl	1ee8 <cupsFilePuts@plt>
    83ac:	ldr	r2, [r7, #24]
    83b0:	mov	r1, #0
    83b4:	mov	r0, r4
    83b8:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    83bc:	ldr	r1, [pc, #732]	; 86a0 <ippGetInteger@plt+0x66d4>
    83c0:	mov	r0, r4
    83c4:	add	r1, pc, r1
    83c8:	bl	1ee8 <cupsFilePuts@plt>
    83cc:	ldr	r3, [r5, #16]
    83d0:	add	r8, r8, #1
    83d4:	cmp	r8, r3
    83d8:	add	r7, r7, #12
    83dc:	blt	8384 <ippGetInteger@plt+0x63b8>
    83e0:	b	8258 <ippGetInteger@plt+0x628c>
    83e4:	ldr	r3, [r5, #16]
    83e8:	cmp	r3, #0
    83ec:	ble	8270 <ippGetInteger@plt+0x62a4>
    83f0:	ldr	r9, [pc, #684]	; 86a4 <ippGetInteger@plt+0x66d8>
    83f4:	mov	r8, r5
    83f8:	add	r9, pc, r9
    83fc:	mov	r7, #0
    8400:	ldr	r2, [r8, #24]
    8404:	mov	r1, r9
    8408:	mov	r0, r4
    840c:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    8410:	ldr	r3, [r5, #16]
    8414:	add	r7, r7, #1
    8418:	cmp	r7, r3
    841c:	add	r8, r8, #12
    8420:	blt	8400 <ippGetInteger@plt+0x6434>
    8424:	b	8258 <ippGetInteger@plt+0x628c>
    8428:	ldr	r3, [r5, #16]
    842c:	cmp	r3, #0
    8430:	ble	8270 <ippGetInteger@plt+0x62a4>
    8434:	ldr	r9, [pc, #620]	; 86a8 <ippGetInteger@plt+0x66dc>
    8438:	mov	r8, r5
    843c:	add	r9, pc, r9
    8440:	mov	r7, #0
    8444:	ldr	r2, [r8, #20]
    8448:	mov	r1, r9
    844c:	mov	r0, r4
    8450:	bl	1dc8 <cupsFilePrintf@plt>
    8454:	ldr	r3, [r5, #16]
    8458:	add	r7, r7, #1
    845c:	cmp	r7, r3
    8460:	add	r8, r8, #12
    8464:	blt	8444 <ippGetInteger@plt+0x6478>
    8468:	b	8258 <ippGetInteger@plt+0x628c>
    846c:	ldr	r3, [r5, #16]
    8470:	cmp	r3, #0
    8474:	ble	8270 <ippGetInteger@plt+0x62a4>
    8478:	ldr	fp, [pc, #556]	; 86ac <ippGetInteger@plt+0x66e0>
    847c:	ldr	sl, [pc, #556]	; 86b0 <ippGetInteger@plt+0x66e4>
    8480:	ldr	r9, [pc, #556]	; 86b4 <ippGetInteger@plt+0x66e8>
    8484:	add	fp, pc, fp
    8488:	add	sl, pc, sl
    848c:	add	r9, pc, r9
    8490:	mov	r7, r5
    8494:	mov	r8, #0
    8498:	ldr	r3, [r7, #28]
    849c:	ldr	r2, [r7, #20]
    84a0:	cmp	r3, #3
    84a4:	moveq	r1, fp
    84a8:	movne	r1, sl
    84ac:	ldr	r3, [r7, #24]
    84b0:	mov	r0, r4
    84b4:	str	r1, [sp]
    84b8:	mov	r1, r9
    84bc:	bl	1dc8 <cupsFilePrintf@plt>
    84c0:	ldr	r3, [r5, #16]
    84c4:	add	r8, r8, #1
    84c8:	cmp	r8, r3
    84cc:	add	r7, r7, #12
    84d0:	blt	8498 <ippGetInteger@plt+0x64cc>
    84d4:	b	8258 <ippGetInteger@plt+0x628c>
    84d8:	ldr	r3, [r5, #16]
    84dc:	cmp	r3, #0
    84e0:	ble	8270 <ippGetInteger@plt+0x62a4>
    84e4:	ldr	r3, [pc, #460]	; 86b8 <ippGetInteger@plt+0x66ec>
    84e8:	ldr	r9, [pc, #460]	; 86bc <ippGetInteger@plt+0x66f0>
    84ec:	add	r3, pc, r3
    84f0:	ldr	fp, [pc, #456]	; 86c0 <ippGetInteger@plt+0x66f4>
    84f4:	add	r9, pc, r9
    84f8:	str	r3, [sp, #32]
    84fc:	add	r3, sp, #48	; 0x30
    8500:	str	r6, [sp, #36]	; 0x24
    8504:	add	fp, pc, fp
    8508:	add	r9, r9, #24
    850c:	add	r8, r5, #20
    8510:	mov	r7, #0
    8514:	add	sl, sp, #40	; 0x28
    8518:	mov	r6, r3
    851c:	mov	r0, r8
    8520:	bl	1d5c <ippDateToTime@plt>
    8524:	add	r7, r7, #1
    8528:	add	r8, r8, #12
    852c:	str	r0, [r6, #-8]
    8530:	mov	r0, sl
    8534:	bl	1bf4 <gmtime@plt>
    8538:	mov	r3, #255	; 0xff
    853c:	mov	r1, r3
    8540:	ldr	r2, [r0]
    8544:	str	r2, [sp, #24]
    8548:	ldr	ip, [r0, #4]
    854c:	mov	r2, #1
    8550:	str	ip, [sp, #20]
    8554:	ldr	ip, [r0, #8]
    8558:	str	ip, [sp, #16]
    855c:	ldr	ip, [r0, #12]
    8560:	str	ip, [sp, #12]
    8564:	ldr	ip, [r0, #16]
    8568:	add	ip, ip, r2
    856c:	str	ip, [sp, #8]
    8570:	ldr	r0, [r0, #20]
    8574:	str	fp, [sp]
    8578:	add	r0, r0, #1888	; 0x760
    857c:	add	r0, r0, #12
    8580:	str	r0, [sp, #4]
    8584:	mov	r0, r9
    8588:	bl	1e28 <__snprintf_chk@plt>
    858c:	mov	r2, r9
    8590:	ldr	r1, [sp, #32]
    8594:	mov	r0, r4
    8598:	bl	1dc8 <cupsFilePrintf@plt>
    859c:	ldr	r3, [r5, #16]
    85a0:	cmp	r7, r3
    85a4:	blt	851c <ippGetInteger@plt+0x6550>
    85a8:	ldr	r6, [sp, #36]	; 0x24
    85ac:	b	8258 <ippGetInteger@plt+0x628c>
    85b0:	ldr	r3, [r5, #16]
    85b4:	cmp	r3, #0
    85b8:	ble	8270 <ippGetInteger@plt+0x62a4>
    85bc:	ldr	r9, [pc, #256]	; 86c4 <ippGetInteger@plt+0x66f8>
    85c0:	mov	r7, r5
    85c4:	add	r9, pc, r9
    85c8:	mov	r8, #0
    85cc:	ldrd	r2, [r7, #20]
    85d0:	mov	r1, r9
    85d4:	mov	r0, r4
    85d8:	bl	1dc8 <cupsFilePrintf@plt>
    85dc:	ldr	r3, [r5, #16]
    85e0:	add	r8, r8, #1
    85e4:	cmp	r8, r3
    85e8:	add	r7, r7, #12
    85ec:	blt	85cc <ippGetInteger@plt+0x6600>
    85f0:	b	8258 <ippGetInteger@plt+0x628c>
    85f4:	bl	1b64 <ippTagString@plt>
    85f8:	ldr	r1, [pc, #200]	; 86c8 <ippGetInteger@plt+0x66fc>
    85fc:	add	r1, pc, r1
    8600:	mov	r2, r0
    8604:	mov	r0, r4
    8608:	bl	1dc8 <cupsFilePrintf@plt>
    860c:	ldr	r3, [r5, #16]
    8610:	b	8258 <ippGetInteger@plt+0x628c>
    8614:	ldr	r1, [pc, #176]	; 86cc <ippGetInteger@plt+0x6700>
    8618:	add	r1, pc, r1
    861c:	bl	1ee8 <cupsFilePuts@plt>
    8620:	ldr	r1, [pc, #168]	; 86d0 <ippGetInteger@plt+0x6704>
    8624:	mov	r0, r4
    8628:	add	r1, pc, r1
    862c:	bl	1ee8 <cupsFilePuts@plt>
    8630:	ldr	r3, [r5, #4]
    8634:	ldr	r2, [r5, #12]
    8638:	b	80e8 <ippGetInteger@plt+0x611c>
    863c:	ldr	r1, [pc, #144]	; 86d4 <ippGetInteger@plt+0x6708>
    8640:	add	r1, pc, r1
    8644:	bl	1ee8 <cupsFilePuts@plt>
    8648:	ldr	r1, [pc, #136]	; 86d8 <ippGetInteger@plt+0x670c>
    864c:	mov	r0, r4
    8650:	add	r1, pc, r1
    8654:	bl	1ee8 <cupsFilePuts@plt>
    8658:	cmp	r7, #0
    865c:	bne	8630 <ippGetInteger@plt+0x6664>
    8660:	ldr	r2, [r5, #12]
    8664:	b	80ec <ippGetInteger@plt+0x6120>
    8668:	bl	1d14 <__stack_chk_fail@plt>
    866c:	andeq	sl, r1, ip, lsl #26
    8670:	andeq	r0, r0, r4, lsr r2
    8674:	ldrdeq	r8, [r0], -ip
    8678:	andeq	r7, r0, r0, lsl #14
    867c:	andeq	r7, r0, r8, asr r6
    8680:	andeq	r8, r0, r0, asr r6
    8684:	andeq	r7, r0, ip, lsl #13
    8688:	andeq	r7, r0, ip, lsl r6
    868c:	andeq	r7, r0, r4, lsr #12
    8690:	andeq	r8, r0, ip, ror #11
    8694:	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    8698:	andeq	r8, r0, r0, lsr #11
    869c:	andeq	r8, r0, r0, asr #11
    86a0:	strdeq	r8, [r0], -r4
    86a4:	andeq	r7, r0, ip, lsr r5
    86a8:	andeq	r8, r0, r0, lsr #7
    86ac:	ldrdeq	r7, [r0], -r8
    86b0:	ldrdeq	r7, [r0], -r8
    86b4:	andeq	r8, r0, r4, asr #7
    86b8:	andeq	r8, r0, r0, lsl #8
    86bc:	andeq	sl, r1, r8, lsl fp
    86c0:	andeq	r8, r0, r8, asr #7
    86c4:	andeq	r8, r0, r0, lsr r2
    86c8:	andeq	r8, r0, r0, ror #6
    86cc:	andeq	r8, r0, ip, lsr #4
    86d0:	andeq	r7, r0, r0, lsr #4
    86d4:	andeq	r8, r0, r4, lsl #4
    86d8:	strdeq	r7, [r0], -r8
    86dc:	ldr	ip, [pc, #252]	; 87e0 <ippGetInteger@plt+0x6814>
    86e0:	push	{r4, r5, r6, r7, r8, lr}
    86e4:	add	ip, pc, ip
    86e8:	ldr	lr, [pc, #244]	; 87e4 <ippGetInteger@plt+0x6818>
    86ec:	sub	sp, sp, #131072	; 0x20000
    86f0:	sub	sp, sp, #16
    86f4:	ldr	r5, [ip, lr]
    86f8:	mov	r4, r2
    86fc:	add	r2, sp, #131072	; 0x20000
    8700:	ldr	lr, [r5]
    8704:	add	r2, r2, #12
    8708:	cmp	r1, #2
    870c:	str	lr, [r2]
    8710:	beq	87b0 <ippGetInteger@plt+0x67e4>
    8714:	cmp	r1, #1
    8718:	mov	r6, r0
    871c:	bne	8764 <ippGetInteger@plt+0x6798>
    8720:	ldr	r7, [r4, #12]
    8724:	cmp	r7, #0
    8728:	beq	87cc <ippGetInteger@plt+0x6800>
    872c:	ldr	r3, [r4, #16]
    8730:	cmp	r3, #1
    8734:	ble	87c0 <ippGetInteger@plt+0x67f4>
    8738:	ldr	r8, [pc, #168]	; 87e8 <ippGetInteger@plt+0x681c>
    873c:	add	r8, pc, r8
    8740:	ldr	r0, [r4, #8]
    8744:	bl	1b64 <ippTagString@plt>
    8748:	ldr	r1, [pc, #156]	; 87ec <ippGetInteger@plt+0x6820>
    874c:	mov	r3, r8
    8750:	mov	r2, r7
    8754:	add	r1, pc, r1
    8758:	str	r0, [sp]
    875c:	mov	r0, r6
    8760:	bl	1dc8 <cupsFilePrintf@plt>
    8764:	mov	r0, r4
    8768:	add	r4, sp, #12
    876c:	mov	r1, r4
    8770:	mov	r2, #131072	; 0x20000
    8774:	bl	1ca8 <ippAttributeString@plt>
    8778:	ldr	r1, [pc, #112]	; 87f0 <ippGetInteger@plt+0x6824>
    877c:	mov	r2, r4
    8780:	mov	r0, r6
    8784:	add	r1, pc, r1
    8788:	bl	1dc8 <cupsFilePrintf@plt>
    878c:	add	r3, sp, #131072	; 0x20000
    8790:	add	r3, r3, #12
    8794:	ldr	r2, [r3]
    8798:	ldr	r3, [r5]
    879c:	cmp	r2, r3
    87a0:	bne	87dc <ippGetInteger@plt+0x6810>
    87a4:	add	sp, sp, #131072	; 0x20000
    87a8:	add	sp, sp, #16
    87ac:	pop	{r4, r5, r6, r7, r8, pc}
    87b0:	mov	r2, r3
    87b4:	mov	r1, r4
    87b8:	bl	8084 <ippGetInteger@plt+0x60b8>
    87bc:	b	878c <ippGetInteger@plt+0x67c0>
    87c0:	ldr	r8, [pc, #44]	; 87f4 <ippGetInteger@plt+0x6828>
    87c4:	add	r8, pc, r8
    87c8:	b	8740 <ippGetInteger@plt+0x6774>
    87cc:	ldr	r1, [pc, #36]	; 87f8 <ippGetInteger@plt+0x682c>
    87d0:	add	r1, pc, r1
    87d4:	bl	1ee8 <cupsFilePuts@plt>
    87d8:	b	878c <ippGetInteger@plt+0x67c0>
    87dc:	bl	1d14 <__stack_chk_fail@plt>
    87e0:			; <UNDEFINED> instruction: 0x0001a6b4
    87e4:	andeq	r0, r0, r4, lsr r2
    87e8:	andeq	r8, r0, r8, asr #4
    87ec:	andeq	r8, r0, r4, asr r2
    87f0:	andeq	r9, r0, r4, asr #24
    87f4:	andeq	r8, r0, r0, ror #3
    87f8:			; <UNDEFINED> instruction: 0x000081bc
    87fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8800:	vpush	{d8}
    8804:	ldr	r5, [pc, #1140]	; 8c80 <ippGetInteger@plt+0x6cb4>
    8808:	ldr	r3, [pc, #1140]	; 8c84 <ippGetInteger@plt+0x6cb8>
    880c:	add	r5, pc, r5
    8810:	sub	sp, sp, #158720	; 0x26c00
    8814:	sub	sp, sp, #252	; 0xfc
    8818:	add	r7, sp, #3312	; 0xcf0
    881c:	str	r2, [sp, #76]	; 0x4c
    8820:	str	r5, [sp, #72]	; 0x48
    8824:	ldr	r3, [r5, r3]
    8828:	mov	sl, r1
    882c:	str	r0, [sp, #32]
    8830:	ldr	r1, [pc, #1104]	; 8c88 <ippGetInteger@plt+0x6cbc>
    8834:	mov	r0, r2
    8838:	add	r2, sp, #158720	; 0x26c00
    883c:	str	r3, [sp, #60]	; 0x3c
    8840:	add	r2, r2, #244	; 0xf4
    8844:	ldr	r3, [r3]
    8848:	add	r7, r7, #8
    884c:	mov	r4, #0
    8850:	add	r1, pc, r1
    8854:	str	r3, [r2]
    8858:	str	r4, [r7, #-3104]	; 0xfffff3e0
    885c:	bl	1d2c <cupsFileOpen@plt>
    8860:	subs	r3, r0, #0
    8864:	str	r3, [sp, #28]
    8868:	beq	8f9c <ippGetInteger@plt+0x6fd0>
    886c:	ldr	r2, [sl, #1612]	; 0x64c
    8870:	ldr	r1, [pc, #1044]	; 8c8c <ippGetInteger@plt+0x6cc0>
    8874:	mov	r3, #1
    8878:	add	r5, sl, #328	; 0x148
    887c:	str	r2, [sp]
    8880:	str	r4, [sp, #12]
    8884:	str	r1, [sp, #8]
    8888:	str	r3, [sp, #4]
    888c:	mov	r0, r5
    8890:	ldr	r3, [sl, #1624]	; 0x658
    8894:	mov	r2, r4
    8898:	ldr	r1, [sl, #1608]	; 0x648
    889c:	bl	1b40 <httpConnect2@plt>
    88a0:	subs	r3, r0, #0
    88a4:	str	r3, [sp, #48]	; 0x30
    88a8:	beq	9018 <ippGetInteger@plt+0x704c>
    88ac:	add	r3, sl, #1616	; 0x650
    88b0:	ldr	r2, [pc, #984]	; 8c90 <ippGetInteger@plt+0x6cc4>
    88b4:	mov	r5, r3
    88b8:	add	r2, pc, r2
    88bc:	mov	r1, #27
    88c0:	str	r3, [sp, #68]	; 0x44
    88c4:	bl	1d98 <httpSetDefaultField@plt>
    88c8:	vldr	d0, [r5]
    88cc:	vcmpe.f64	d0, #0.0
    88d0:	vmrs	APSR_nzcv, fpscr
    88d4:	bgt	8b9c <ippGetInteger@plt+0x6bd0>
    88d8:	mov	r0, #0
    88dc:	bl	1edc <time@plt>
    88e0:	bl	1bd0 <srandom@plt>
    88e4:	ldr	ip, [sp, #72]	; 0x48
    88e8:	ldr	r2, [pc, #932]	; 8c94 <ippGetInteger@plt+0x6cc8>
    88ec:	ldr	r1, [pc, #932]	; 8c98 <ippGetInteger@plt+0x6ccc>
    88f0:	mov	r3, #0
    88f4:	ldr	r0, [ip, r2]
    88f8:	mov	r2, r3
    88fc:	str	r0, [sp, #4]
    8900:	ldr	r0, [ip, r1]
    8904:	add	ip, sp, #27648	; 0x6c00
    8908:	add	ip, ip, #248	; 0xf8
    890c:	mov	r1, r3
    8910:	str	r0, [sp]
    8914:	mov	r0, r3
    8918:	mov	r4, ip
    891c:	str	ip, [sp, #80]	; 0x50
    8920:	bl	1fa8 <cupsArrayNew3@plt>
    8924:	mov	r3, #0
    8928:	strb	r3, [r4, #-3076]	; 0xfffff3fc
    892c:	str	r3, [r7, #-3120]	; 0xfffff3d0
    8930:	vldr	d8, [pc, #832]	; 8c78 <ippGetInteger@plt+0x6cac>
    8934:	mov	r4, #1
    8938:	str	r0, [sp, #52]	; 0x34
    893c:	bl	1ea0 <random@plt>
    8940:	ldr	r2, [pc, #852]	; 8c9c <ippGetInteger@plt+0x6cd0>
    8944:	str	sl, [sp, #36]	; 0x24
    8948:	str	r2, [sp, #108]	; 0x6c
    894c:	mov	sl, r7
    8950:	str	r4, [sp, #88]	; 0x58
    8954:	str	r4, [sp, #92]	; 0x5c
    8958:	smull	ip, r1, r2, r0
    895c:	asr	r3, r0, #31
    8960:	rsb	r3, r3, r1, asr #6
    8964:	rsb	r2, r3, r3, lsl #5
    8968:	add	r3, r3, r2, lsl #2
    896c:	sub	r0, r0, r3, lsl #3
    8970:	add	r3, r0, r0, lsl #4
    8974:	add	r0, r0, r3, lsl #3
    8978:	add	r3, r0, r4
    897c:	str	r3, [sp, #96]	; 0x60
    8980:	ldr	r5, [pc, #792]	; 8ca0 <ippGetInteger@plt+0x6cd4>
    8984:	add	r5, pc, r5
    8988:	ldr	r3, [r5]
    898c:	cmp	r3, #0
    8990:	bne	91e8 <ippGetInteger@plt+0x721c>
    8994:	add	r2, sp, #21504	; 0x5400
    8998:	add	r2, r2, #248	; 0xf8
    899c:	add	r3, sp, #248	; 0xf8
    89a0:	sub	fp, r2, #4
    89a4:	add	r8, sp, #200	; 0xc8
    89a8:	str	r3, [sp, #44]	; 0x2c
    89ac:	str	r2, [sp, #40]	; 0x28
    89b0:	mov	r3, r8
    89b4:	mov	r1, fp
    89b8:	mov	r2, #1024	; 0x400
    89bc:	ldr	r0, [sp, #28]
    89c0:	bl	4664 <ippGetInteger@plt+0x2698>
    89c4:	cmp	r0, #0
    89c8:	beq	91e8 <ippGetInteger@plt+0x721c>
    89cc:	ldr	r1, [pc, #720]	; 8ca4 <ippGetInteger@plt+0x6cd8>
    89d0:	mov	r0, fp
    89d4:	add	r1, pc, r1
    89d8:	bl	1ec4 <strcmp@plt>
    89dc:	subs	r9, r0, #0
    89e0:	beq	8bf4 <ippGetInteger@plt+0x6c28>
    89e4:	ldr	r1, [pc, #700]	; 8ca8 <ippGetInteger@plt+0x6cdc>
    89e8:	mov	r0, fp
    89ec:	add	r1, pc, r1
    89f0:	bl	1ec4 <strcmp@plt>
    89f4:	subs	r9, r0, #0
    89f8:	beq	8e2c <ippGetInteger@plt+0x6e60>
    89fc:	ldr	r1, [pc, #680]	; 8cac <ippGetInteger@plt+0x6ce0>
    8a00:	mov	r0, fp
    8a04:	add	r1, pc, r1
    8a08:	bl	1ec4 <strcmp@plt>
    8a0c:	subs	r9, r0, #0
    8a10:	beq	8bb4 <ippGetInteger@plt+0x6be8>
    8a14:	ldr	r1, [pc, #660]	; 8cb0 <ippGetInteger@plt+0x6ce4>
    8a18:	mov	r0, fp
    8a1c:	add	r1, pc, r1
    8a20:	bl	1ec4 <strcmp@plt>
    8a24:	subs	r9, r0, #0
    8a28:	beq	9048 <ippGetInteger@plt+0x707c>
    8a2c:	ldr	r1, [pc, #640]	; 8cb4 <ippGetInteger@plt+0x6ce8>
    8a30:	mov	r0, fp
    8a34:	add	r1, pc, r1
    8a38:	bl	1ec4 <strcmp@plt>
    8a3c:	subs	r9, r0, #0
    8a40:	beq	8f20 <ippGetInteger@plt+0x6f54>
    8a44:	ldr	r1, [pc, #620]	; 8cb8 <ippGetInteger@plt+0x6cec>
    8a48:	mov	r0, fp
    8a4c:	add	r1, pc, r1
    8a50:	bl	1ec4 <strcmp@plt>
    8a54:	subs	r9, r0, #0
    8a58:	beq	90dc <ippGetInteger@plt+0x7110>
    8a5c:	ldr	r1, [pc, #600]	; 8cbc <ippGetInteger@plt+0x6cf0>
    8a60:	mov	r0, fp
    8a64:	add	r1, pc, r1
    8a68:	bl	1ec4 <strcmp@plt>
    8a6c:	subs	r9, r0, #0
    8a70:	beq	925c <ippGetInteger@plt+0x7290>
    8a74:	ldr	r1, [pc, #580]	; 8cc0 <ippGetInteger@plt+0x6cf4>
    8a78:	mov	r0, fp
    8a7c:	add	r1, pc, r1
    8a80:	bl	1ec4 <strcmp@plt>
    8a84:	subs	r9, r0, #0
    8a88:	beq	9318 <ippGetInteger@plt+0x734c>
    8a8c:	ldr	r1, [pc, #560]	; 8cc4 <ippGetInteger@plt+0x6cf8>
    8a90:	mov	r0, fp
    8a94:	add	r1, pc, r1
    8a98:	bl	1ec4 <strcmp@plt>
    8a9c:	subs	r9, r0, #0
    8aa0:	beq	9198 <ippGetInteger@plt+0x71cc>
    8aa4:	ldr	r1, [pc, #540]	; 8cc8 <ippGetInteger@plt+0x6cfc>
    8aa8:	mov	r0, fp
    8aac:	add	r1, pc, r1
    8ab0:	bl	1ec4 <strcmp@plt>
    8ab4:	subs	r9, r0, #0
    8ab8:	beq	91f0 <ippGetInteger@plt+0x7224>
    8abc:	ldr	r1, [pc, #520]	; 8ccc <ippGetInteger@plt+0x6d00>
    8ac0:	mov	r0, fp
    8ac4:	add	r1, pc, r1
    8ac8:	bl	1ec4 <strcmp@plt>
    8acc:	subs	r9, r0, #0
    8ad0:	beq	9fc0 <ippGetInteger@plt+0x7ff4>
    8ad4:	ldr	r1, [pc, #500]	; 8cd0 <ippGetInteger@plt+0x6d04>
    8ad8:	mov	r0, fp
    8adc:	add	r1, pc, r1
    8ae0:	bl	1ec4 <strcmp@plt>
    8ae4:	subs	r9, r0, #0
    8ae8:	bne	a068 <ippGetInteger@plt+0x809c>
    8aec:	add	r6, sp, #22528	; 0x5800
    8af0:	add	r6, r6, #244	; 0xf4
    8af4:	mov	r3, r8
    8af8:	mov	r1, r6
    8afc:	mov	r2, #1024	; 0x400
    8b00:	ldr	r0, [sp, #28]
    8b04:	bl	4664 <ippGetInteger@plt+0x2698>
    8b08:	cmp	r0, #0
    8b0c:	beq	d42c <ippGetInteger@plt+0xb460>
    8b10:	ldr	r1, [pc, #444]	; 8cd4 <ippGetInteger@plt+0x6d08>
    8b14:	mov	r0, r6
    8b18:	add	r1, pc, r1
    8b1c:	bl	1ec4 <strcmp@plt>
    8b20:	cmp	r0, #0
    8b24:	beq	bd24 <ippGetInteger@plt+0x9d58>
    8b28:	ldr	r1, [pc, #424]	; 8cd8 <ippGetInteger@plt+0x6d0c>
    8b2c:	mov	r0, r6
    8b30:	add	r1, pc, r1
    8b34:	bl	1ec4 <strcmp@plt>
    8b38:	cmp	r0, #0
    8b3c:	beq	bf48 <ippGetInteger@plt+0x9f7c>
    8b40:	ldr	r1, [pc, #404]	; 8cdc <ippGetInteger@plt+0x6d10>
    8b44:	mov	r0, r6
    8b48:	add	r1, pc, r1
    8b4c:	bl	1ec4 <strcmp@plt>
    8b50:	cmp	r0, #0
    8b54:	beq	c128 <ippGetInteger@plt+0xa15c>
    8b58:	ldr	r1, [pc, #384]	; 8ce0 <ippGetInteger@plt+0x6d14>
    8b5c:	mov	r0, r6
    8b60:	add	r1, pc, r1
    8b64:	bl	1ec4 <strcmp@plt>
    8b68:	cmp	r0, #0
    8b6c:	beq	c810 <ippGetInteger@plt+0xa844>
    8b70:	ldr	r1, [pc, #364]	; 8ce4 <ippGetInteger@plt+0x6d18>
    8b74:	mov	r0, r6
    8b78:	add	r1, pc, r1
    8b7c:	bl	1ec4 <strcmp@plt>
    8b80:	cmp	r0, #0
    8b84:	bne	c75c <ippGetInteger@plt+0xa790>
    8b88:	ldr	r3, [pc, #344]	; 8ce8 <ippGetInteger@plt+0x6d1c>
    8b8c:	mov	r2, #22
    8b90:	add	r3, pc, r3
    8b94:	str	r2, [r3, #4]
    8b98:	b	8980 <ippGetInteger@plt+0x69b4>
    8b9c:	ldr	r1, [pc, #328]	; 8cec <ippGetInteger@plt+0x6d20>
    8ba0:	mov	r2, r4
    8ba4:	add	r1, pc, r1
    8ba8:	ldr	r0, [sp, #48]	; 0x30
    8bac:	bl	19e4 <httpSetTimeout@plt>
    8bb0:	b	88d8 <ippGetInteger@plt+0x690c>
    8bb4:	add	r5, sp, #22528	; 0x5800
    8bb8:	add	r5, r5, #244	; 0xf4
    8bbc:	mov	r3, r8
    8bc0:	mov	r1, r5
    8bc4:	mov	r2, #1024	; 0x400
    8bc8:	ldr	r0, [sp, #28]
    8bcc:	bl	4664 <ippGetInteger@plt+0x2698>
    8bd0:	cmp	r0, #0
    8bd4:	beq	8f84 <ippGetInteger@plt+0x6fb8>
    8bd8:	add	r1, sp, #24576	; 0x6000
    8bdc:	mov	r2, r5
    8be0:	mov	r3, #1024	; 0x400
    8be4:	add	r1, r1, #244	; 0xf4
    8be8:	ldr	r0, [sp, #36]	; 0x24
    8bec:	bl	4244 <ippGetInteger@plt+0x2278>
    8bf0:	b	8980 <ippGetInteger@plt+0x69b4>
    8bf4:	ldr	r3, [sp, #40]	; 0x28
    8bf8:	ldr	r7, [sp, #28]
    8bfc:	sub	r5, r3, #644	; 0x284
    8c00:	mov	r1, r5
    8c04:	mov	r3, r8
    8c08:	mov	r2, #128	; 0x80
    8c0c:	mov	r0, r7
    8c10:	bl	4664 <ippGetInteger@plt+0x2698>
    8c14:	cmp	r0, #0
    8c18:	beq	8edc <ippGetInteger@plt+0x6f10>
    8c1c:	add	r6, sp, #22528	; 0x5800
    8c20:	add	r6, r6, #244	; 0xf4
    8c24:	mov	r3, r8
    8c28:	mov	r1, r6
    8c2c:	mov	r2, #1024	; 0x400
    8c30:	mov	r0, r7
    8c34:	bl	4664 <ippGetInteger@plt+0x2698>
    8c38:	cmp	r0, #0
    8c3c:	beq	8edc <ippGetInteger@plt+0x6f10>
    8c40:	mov	r2, r6
    8c44:	ldr	r6, [sp, #36]	; 0x24
    8c48:	mov	r1, fp
    8c4c:	mov	r0, r6
    8c50:	mov	r3, #1024	; 0x400
    8c54:	bl	4244 <ippGetInteger@plt+0x2278>
    8c58:	ldr	r2, [sp, #68]	; 0x44
    8c5c:	str	fp, [sp]
    8c60:	mov	r3, r5
    8c64:	add	r2, r2, #12
    8c68:	add	r1, r6, #4
    8c6c:	ldr	r0, [sp, #32]
    8c70:	bl	6520 <ippGetInteger@plt+0x4554>
    8c74:	b	8980 <ippGetInteger@plt+0x69b4>
    8c78:	andeq	r0, r0, r0
    8c7c:	smlawbmi	lr, r0, r4, r8
    8c80:	andeq	sl, r1, ip, lsl #11
    8c84:	andeq	r0, r0, r4, lsr r2
    8c88:			; <UNDEFINED> instruction: 0x00007dbc
    8c8c:	andeq	r7, r0, r0, lsr r5
    8c90:	andeq	r8, r0, r8, ror #2
    8c94:	andeq	r0, r0, r0, lsr r2
    8c98:	andeq	r0, r0, ip, asr r2
    8c9c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
    8ca0:	andeq	sl, r1, r8, lsl #13
    8ca4:	andeq	r8, r0, r4, rrx
    8ca8:	andeq	r8, r0, r4, lsl #1
    8cac:	strheq	r8, [r0], -r4
    8cb0:	andeq	r8, r0, r8, asr #1
    8cb4:	strdeq	r8, [r0], -r0
    8cb8:	andeq	r8, r0, r8, lsl #2
    8cbc:	andeq	r8, r0, ip, lsr r1
    8cc0:	andeq	r8, r0, r8, ror r1
    8cc4:	andeq	r8, r0, r0, lsr #3
    8cc8:	ldrdeq	r8, [r0], -r0
    8ccc:	andeq	r8, r0, r8, lsl #4
    8cd0:	andeq	r8, r0, r4, asr #4
    8cd4:	andeq	r8, r0, r0, lsl r2
    8cd8:	strdeq	r8, [r0], -ip
    8cdc:	andeq	r8, r0, r8, ror #3
    8ce0:	ldrdeq	r8, [r0], -r4
    8ce4:	andeq	r8, r0, r0, asr #3
    8ce8:	andeq	sl, r1, r0, ror r4
    8cec:			; <UNDEFINED> instruction: 0xffffaaec
    8cf0:	andeq	r7, r0, r8, asr fp
    8cf4:	andeq	r7, r0, ip, ror #22
    8cf8:	andeq	r7, r0, r0, lsr fp
    8cfc:	andeq	r7, r0, ip, lsl sl
    8d00:	andeq	r7, r0, r8, asr #19
    8d04:	andeq	r7, r0, r0, lsl #21
    8d08:	andeq	r7, r0, ip, ror #20
    8d0c:	andeq	r7, r0, r4, asr sl
    8d10:	andeq	r7, r0, r8, lsr sl
    8d14:	andeq	r9, r1, r4, asr #30
    8d18:	andeq	r9, r1, ip, lsl #29
    8d1c:	ldrdeq	r7, [r0], -r8
    8d20:	andeq	r7, r0, r4, asr #17
    8d24:	andeq	r7, r0, r8, asr #20
    8d28:	andeq	r9, r1, ip, lsl #26
    8d2c:	andeq	r9, r1, ip, lsl #25
    8d30:	andeq	r9, r1, r4, lsr ip
    8d34:	andeq	r9, r1, ip, lsl ip
    8d38:	subeq	r4, ip, r0, asr #22
    8d3c:	muleq	r0, r0, lr
    8d40:	andeq	r7, r0, r4, ror r0
    8d44:	ldrdeq	r7, [r0], -r8
    8d48:	andeq	r7, r0, r8, asr #17
    8d4c:	andeq	r7, r0, ip
    8d50:	strdeq	r6, [r0], -r8
    8d54:	andeq	r7, r0, r8, lsr #24
    8d58:	andeq	r7, r0, ip, lsl #26
    8d5c:	muleq	r0, ip, r6
    8d60:	muleq	r0, r8, r2
    8d64:	andeq	r7, r0, ip, lsr #6
    8d68:	andeq	r7, r0, r0, lsl #6
    8d6c:	andeq	r7, r0, ip, ror #5
    8d70:	ldrdeq	r7, [r0], -r4
    8d74:	andeq	r7, r0, r4, ror #10
    8d78:	andeq	r7, r0, r8, lsl #6
    8d7c:	andeq	r7, r0, ip, lsr r3
    8d80:	andeq	r7, r0, r0, asr r5
    8d84:	andeq	r7, r0, r8, asr #10
    8d88:	andeq	r7, r0, r0, asr #10
    8d8c:			; <UNDEFINED> instruction: 0x000074b8
    8d90:			; <UNDEFINED> instruction: 0x000074b0
    8d94:	andeq	r7, r0, r8, lsr #9
    8d98:	andeq	r7, r0, ip, lsr r2
    8d9c:	andeq	r7, r0, r0, ror r2
    8da0:	andeq	r7, r0, r0, ror r4
    8da4:	andeq	r7, r0, r4, ror #8
    8da8:	andeq	r7, r0, r4, asr r4
    8dac:	andeq	r7, r0, ip, asr #8
    8db0:	andeq	r7, r0, r4, asr #8
    8db4:	andeq	r7, r0, ip, lsr r4
    8db8:	andeq	r5, r0, r8, lsr sp
    8dbc:	andeq	r5, r0, r0, asr #26
    8dc0:	andeq	r5, r0, ip, lsr sp
    8dc4:	ldrdeq	r5, [r0], -ip
    8dc8:	andeq	r5, r0, r0, lsr #26
    8dcc:	ldrdeq	r5, [r0], -r0
    8dd0:	andeq	r5, r0, r8, lsl #25
    8dd4:	andeq	r5, r0, r8, ror #25
    8dd8:	andeq	r7, r0, r4, ror r3
    8ddc:	andeq	r7, r0, ip, lsr #6
    8de0:	andeq	r7, r0, ip, lsl r3
    8de4:	andeq	r7, r0, ip, lsl #6
    8de8:	strdeq	r7, [r0], -r4
    8dec:	andeq	r7, r0, r8, lsr r3
    8df0:			; <UNDEFINED> instruction: 0x00006eb4
    8df4:	andeq	r7, r0, r8, asr #4
    8df8:	andeq	r7, r0, ip, ror r2
    8dfc:	andeq	r6, r0, r4, ror #30
    8e00:	ldrdeq	r7, [r0], -ip
    8e04:	andeq	r6, r0, r4, ror pc
    8e08:	andeq	r7, r0, ip, lsl r3
    8e0c:	andeq	r7, r0, r8, asr #6
    8e10:	andeq	r6, r0, r4, asr #31
    8e14:	andeq	r5, r0, r8, lsr sl
    8e18:	andeq	r5, r0, r8, lsr #20
    8e1c:	andeq	r5, r0, r8, lsl sl
    8e20:	strbtvs	r6, [r6], -r7, ror #12
    8e24:	andeq	r9, r1, r8, ror #4
    8e28:	andeq	r9, r1, r0, lsl r2
    8e2c:	ldr	r3, [sp, #40]	; 0x28
    8e30:	ldr	r6, [sp, #28]
    8e34:	sub	r7, r3, #644	; 0x284
    8e38:	mov	r1, r7
    8e3c:	mov	r3, r8
    8e40:	mov	r2, #128	; 0x80
    8e44:	mov	r0, r6
    8e48:	bl	4664 <ippGetInteger@plt+0x2698>
    8e4c:	cmp	r0, #0
    8e50:	beq	8f08 <ippGetInteger@plt+0x6f3c>
    8e54:	add	r5, sp, #22528	; 0x5800
    8e58:	add	r5, r5, #244	; 0xf4
    8e5c:	mov	r3, r8
    8e60:	mov	r1, r5
    8e64:	mov	r2, #1024	; 0x400
    8e68:	mov	r0, r6
    8e6c:	bl	4664 <ippGetInteger@plt+0x2698>
    8e70:	cmp	r0, #0
    8e74:	beq	8f08 <ippGetInteger@plt+0x6f3c>
    8e78:	mov	r2, r5
    8e7c:	ldr	r5, [sp, #36]	; 0x24
    8e80:	mov	r3, #1024	; 0x400
    8e84:	mov	r1, fp
    8e88:	mov	r0, r5
    8e8c:	bl	4244 <ippGetInteger@plt+0x2278>
    8e90:	ldr	r3, [sp, #44]	; 0x2c
    8e94:	ldr	r0, [r5, #1628]	; 0x65c
    8e98:	sub	r1, r3, #24
    8e9c:	str	r7, [sl, #-3096]	; 0xfffff3e8
    8ea0:	bl	1b94 <cupsArrayFind@plt>
    8ea4:	cmp	r0, #0
    8ea8:	beq	8eb8 <ippGetInteger@plt+0x6eec>
    8eac:	ldr	r3, [r0, #4]
    8eb0:	cmp	r3, #0
    8eb4:	bne	8980 <ippGetInteger@plt+0x69b4>
    8eb8:	ldr	r2, [sp, #68]	; 0x44
    8ebc:	ldr	r1, [sp, #36]	; 0x24
    8ec0:	str	fp, [sp]
    8ec4:	mov	r3, r7
    8ec8:	add	r2, r2, #12
    8ecc:	add	r1, r1, #4
    8ed0:	ldr	r0, [sp, #32]
    8ed4:	bl	6520 <ippGetInteger@plt+0x4554>
    8ed8:	b	8980 <ippGetInteger@plt+0x69b4>
    8edc:	ldr	r1, [pc, #-500]	; 8cf0 <ippGetInteger@plt+0x6d24>
    8ee0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    8ee4:	ldr	r0, [sp, #32]
    8ee8:	add	r1, pc, r1
    8eec:	bl	4b10 <ippGetInteger@plt+0x2b44>
    8ef0:	ldr	r0, [sp, #52]	; 0x34
    8ef4:	bl	1e70 <cupsArrayDelete@plt>
    8ef8:	ldr	r0, [sp, #28]
    8efc:	bl	1d08 <cupsFileClose@plt>
    8f00:	ldr	r0, [sp, #48]	; 0x30
    8f04:	b	8fd4 <ippGetInteger@plt+0x7008>
    8f08:	ldr	r1, [pc, #-540]	; 8cf4 <ippGetInteger@plt+0x6d28>
    8f0c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    8f10:	ldr	r0, [sp, #32]
    8f14:	add	r1, pc, r1
    8f18:	bl	4b10 <ippGetInteger@plt+0x2b44>
    8f1c:	b	8ef0 <ippGetInteger@plt+0x6f24>
    8f20:	add	r4, sp, #22528	; 0x5800
    8f24:	add	r4, r4, #244	; 0xf4
    8f28:	mov	r3, r8
    8f2c:	mov	r1, r4
    8f30:	mov	r2, #1024	; 0x400
    8f34:	ldr	r0, [sp, #28]
    8f38:	bl	4664 <ippGetInteger@plt+0x2698>
    8f3c:	cmp	r0, #0
    8f40:	beq	c164 <ippGetInteger@plt+0xa198>
    8f44:	add	r1, sp, #26624	; 0x6800
    8f48:	mov	r2, r4
    8f4c:	add	r1, r1, #244	; 0xf4
    8f50:	ldr	r0, [sp, #76]	; 0x4c
    8f54:	bl	676c <ippGetInteger@plt+0x47a0>
    8f58:	mov	r2, r0
    8f5c:	ldrd	r0, [sp, #32]
    8f60:	bl	87fc <ippGetInteger@plt+0x6830>
    8f64:	subs	r9, r0, #0
    8f68:	bne	8f7c <ippGetInteger@plt+0x6fb0>
    8f6c:	ldr	r3, [r5, #284]	; 0x11c
    8f70:	cmp	r3, #0
    8f74:	str	r3, [sp, #92]	; 0x5c
    8f78:	bne	8ef0 <ippGetInteger@plt+0x6f24>
    8f7c:	mov	r4, #1
    8f80:	b	8980 <ippGetInteger@plt+0x69b4>
    8f84:	ldr	r1, [pc, #-660]	; 8cf8 <ippGetInteger@plt+0x6d2c>
    8f88:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    8f8c:	ldr	r0, [sp, #32]
    8f90:	add	r1, pc, r1
    8f94:	bl	4b10 <ippGetInteger@plt+0x2b44>
    8f98:	b	8ef0 <ippGetInteger@plt+0x6f24>
    8f9c:	bl	1f00 <__errno_location@plt>
    8fa0:	ldr	r4, [sp, #28]
    8fa4:	mov	r9, r4
    8fa8:	ldr	r0, [r0]
    8fac:	bl	1b04 <strerror@plt>
    8fb0:	ldr	r1, [pc, #-700]	; 8cfc <ippGetInteger@plt+0x6d30>
    8fb4:	ldr	r2, [sp, #76]	; 0x4c
    8fb8:	add	r1, pc, r1
    8fbc:	mov	r3, r0
    8fc0:	ldr	r0, [sp, #32]
    8fc4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    8fc8:	mov	r0, r4
    8fcc:	bl	1e70 <cupsArrayDelete@plt>
    8fd0:	mov	r0, r4
    8fd4:	bl	1eb8 <httpClose@plt>
    8fd8:	mov	r0, #0
    8fdc:	bl	1a38 <ippDelete@plt>
    8fe0:	mov	r0, #0
    8fe4:	bl	1a38 <ippDelete@plt>
    8fe8:	add	r3, sp, #158720	; 0x26c00
    8fec:	add	r3, r3, #244	; 0xf4
    8ff0:	ldr	r2, [r3]
    8ff4:	ldr	r3, [sp, #60]	; 0x3c
    8ff8:	mov	r0, r9
    8ffc:	ldr	r3, [r3]
    9000:	cmp	r2, r3
    9004:	bne	cb58 <ippGetInteger@plt+0xab8c>
    9008:	add	sp, sp, #158720	; 0x26c00
    900c:	add	sp, sp, #252	; 0xfc
    9010:	vpop	{d8}
    9014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9018:	ldr	r4, [sl, #1608]	; 0x648
    901c:	bl	1cb4 <cupsLastErrorString@plt>
    9020:	ldr	r1, [pc, #-808]	; 8d00 <ippGetInteger@plt+0x6d34>
    9024:	ldr	r9, [sp, #48]	; 0x30
    9028:	mov	r3, r4
    902c:	mov	r2, r5
    9030:	add	r1, pc, r1
    9034:	str	r9, [sp, #52]	; 0x34
    9038:	str	r0, [sp]
    903c:	ldr	r0, [sp, #32]
    9040:	bl	4b10 <ippGetInteger@plt+0x2b44>
    9044:	b	8ef0 <ippGetInteger@plt+0x6f24>
    9048:	add	r6, sp, #22528	; 0x5800
    904c:	add	r6, r6, #244	; 0xf4
    9050:	mov	r3, r8
    9054:	mov	r1, r6
    9058:	mov	r2, #1024	; 0x400
    905c:	ldr	r0, [sp, #28]
    9060:	bl	4664 <ippGetInteger@plt+0x2698>
    9064:	cmp	r0, #0
    9068:	beq	909c <ippGetInteger@plt+0x70d0>
    906c:	ldr	r1, [pc, #-880]	; 8d04 <ippGetInteger@plt+0x6d38>
    9070:	mov	r0, r6
    9074:	add	r1, pc, r1
    9078:	bl	1a08 <_cups_strcasecmp@plt>
    907c:	cmp	r0, #0
    9080:	beq	90b4 <ippGetInteger@plt+0x70e8>
    9084:	ldr	r1, [pc, #-900]	; 8d08 <ippGetInteger@plt+0x6d3c>
    9088:	mov	r0, r6
    908c:	add	r1, pc, r1
    9090:	bl	1a08 <_cups_strcasecmp@plt>
    9094:	cmp	r0, #0
    9098:	beq	90b4 <ippGetInteger@plt+0x70e8>
    909c:	ldr	r1, [pc, #-920]	; 8d0c <ippGetInteger@plt+0x6d40>
    90a0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    90a4:	ldr	r0, [sp, #32]
    90a8:	add	r1, pc, r1
    90ac:	bl	4b10 <ippGetInteger@plt+0x2b44>
    90b0:	b	8ef0 <ippGetInteger@plt+0x6f24>
    90b4:	ldr	r1, [pc, #-940]	; 8d10 <ippGetInteger@plt+0x6d44>
    90b8:	mov	r0, r6
    90bc:	add	r1, pc, r1
    90c0:	bl	1a08 <_cups_strcasecmp@plt>
    90c4:	ldr	r3, [pc, #-952]	; 8d14 <ippGetInteger@plt+0x6d48>
    90c8:	add	r3, pc, r3
    90cc:	clz	r0, r0
    90d0:	lsr	r0, r0, #5
    90d4:	str	r0, [r3, #280]	; 0x118
    90d8:	b	8980 <ippGetInteger@plt+0x69b4>
    90dc:	ldr	r3, [sp, #40]	; 0x28
    90e0:	ldr	r4, [sp, #28]
    90e4:	sub	r7, r3, #644	; 0x284
    90e8:	mov	r1, r7
    90ec:	mov	r3, r8
    90f0:	mov	r2, #128	; 0x80
    90f4:	mov	r0, r4
    90f8:	bl	4664 <ippGetInteger@plt+0x2698>
    90fc:	cmp	r0, #0
    9100:	beq	be6c <ippGetInteger@plt+0x9ea0>
    9104:	add	r6, sp, #22528	; 0x5800
    9108:	add	r6, r6, #244	; 0xf4
    910c:	mov	r3, r8
    9110:	mov	r1, r6
    9114:	mov	r2, #1024	; 0x400
    9118:	mov	r0, r4
    911c:	bl	4664 <ippGetInteger@plt+0x2698>
    9120:	cmp	r0, #0
    9124:	beq	be6c <ippGetInteger@plt+0x9ea0>
    9128:	ldr	r3, [sp, #44]	; 0x2c
    912c:	str	r7, [sl, #-3096]	; 0xfffff3e8
    9130:	sub	r1, r3, #24
    9134:	ldr	r3, [sp, #36]	; 0x24
    9138:	ldr	r0, [r3, #1628]	; 0x65c
    913c:	bl	1b94 <cupsArrayFind@plt>
    9140:	cmp	r0, #0
    9144:	beq	8f7c <ippGetInteger@plt+0x6fb0>
    9148:	ldr	r3, [r0, #4]
    914c:	cmp	r3, #0
    9150:	beq	8f7c <ippGetInteger@plt+0x6fb0>
    9154:	add	r1, sp, #26624	; 0x6800
    9158:	mov	r2, r6
    915c:	add	r1, r1, #244	; 0xf4
    9160:	ldr	r0, [sp, #76]	; 0x4c
    9164:	bl	676c <ippGetInteger@plt+0x47a0>
    9168:	mov	r2, r0
    916c:	ldrd	r0, [sp, #32]
    9170:	bl	87fc <ippGetInteger@plt+0x6830>
    9174:	subs	r9, r0, #0
    9178:	bne	8f7c <ippGetInteger@plt+0x6fb0>
    917c:	ldr	r3, [pc, #-1132]	; 8d18 <ippGetInteger@plt+0x6d4c>
    9180:	add	r3, pc, r3
    9184:	ldr	r3, [r3, #284]	; 0x11c
    9188:	cmp	r3, #0
    918c:	str	r3, [sp, #92]	; 0x5c
    9190:	bne	8ef0 <ippGetInteger@plt+0x6f24>
    9194:	b	8f7c <ippGetInteger@plt+0x6fb0>
    9198:	add	r5, sp, #22528	; 0x5800
    919c:	add	r5, r5, #244	; 0xf4
    91a0:	mov	r1, r5
    91a4:	mov	r3, r8
    91a8:	mov	r2, #1024	; 0x400
    91ac:	ldr	r0, [sp, #28]
    91b0:	bl	4664 <ippGetInteger@plt+0x2698>
    91b4:	cmp	r0, #0
    91b8:	beq	cec0 <ippGetInteger@plt+0xaef4>
    91bc:	ldr	r3, [sp, #44]	; 0x2c
    91c0:	str	r5, [sl, #-3096]	; 0xfffff3e8
    91c4:	sub	r1, r3, #24
    91c8:	ldr	r3, [sp, #36]	; 0x24
    91cc:	ldr	r0, [r3, #1628]	; 0x65c
    91d0:	bl	1b94 <cupsArrayFind@plt>
    91d4:	cmp	r0, #0
    91d8:	beq	91e8 <ippGetInteger@plt+0x721c>
    91dc:	ldr	r3, [r0, #4]
    91e0:	cmp	r3, #0
    91e4:	bne	9368 <ippGetInteger@plt+0x739c>
    91e8:	ldr	r9, [sp, #92]	; 0x5c
    91ec:	b	8ef0 <ippGetInteger@plt+0x6f24>
    91f0:	add	r6, sp, #22528	; 0x5800
    91f4:	add	r6, r6, #244	; 0xf4
    91f8:	mov	r3, r8
    91fc:	mov	r1, r6
    9200:	mov	r2, #1024	; 0x400
    9204:	ldr	r0, [sp, #28]
    9208:	bl	4664 <ippGetInteger@plt+0x2698>
    920c:	cmp	r0, #0
    9210:	beq	9244 <ippGetInteger@plt+0x7278>
    9214:	ldr	r1, [pc, #-1280]	; 8d1c <ippGetInteger@plt+0x6d50>
    9218:	mov	r0, r6
    921c:	add	r1, pc, r1
    9220:	bl	1a08 <_cups_strcasecmp@plt>
    9224:	cmp	r0, #0
    9228:	beq	a040 <ippGetInteger@plt+0x8074>
    922c:	ldr	r1, [pc, #-1300]	; 8d20 <ippGetInteger@plt+0x6d54>
    9230:	mov	r0, r6
    9234:	add	r1, pc, r1
    9238:	bl	1a08 <_cups_strcasecmp@plt>
    923c:	cmp	r0, #0
    9240:	beq	a040 <ippGetInteger@plt+0x8074>
    9244:	ldr	r1, [pc, #-1320]	; 8d24 <ippGetInteger@plt+0x6d58>
    9248:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    924c:	ldr	r0, [sp, #32]
    9250:	add	r1, pc, r1
    9254:	bl	4b10 <ippGetInteger@plt+0x2b44>
    9258:	b	8ef0 <ippGetInteger@plt+0x6f24>
    925c:	ldr	r3, [sp, #40]	; 0x28
    9260:	ldr	r4, [sp, #28]
    9264:	sub	r7, r3, #644	; 0x284
    9268:	mov	r1, r7
    926c:	mov	r3, r8
    9270:	mov	r2, #128	; 0x80
    9274:	mov	r0, r4
    9278:	bl	4664 <ippGetInteger@plt+0x2698>
    927c:	cmp	r0, #0
    9280:	beq	bfc4 <ippGetInteger@plt+0x9ff8>
    9284:	add	r6, sp, #22528	; 0x5800
    9288:	add	r6, r6, #244	; 0xf4
    928c:	mov	r3, r8
    9290:	mov	r1, r6
    9294:	mov	r2, #1024	; 0x400
    9298:	mov	r0, r4
    929c:	bl	4664 <ippGetInteger@plt+0x2698>
    92a0:	cmp	r0, #0
    92a4:	beq	bfc4 <ippGetInteger@plt+0x9ff8>
    92a8:	ldr	r3, [sp, #44]	; 0x2c
    92ac:	str	r7, [sl, #-3096]	; 0xfffff3e8
    92b0:	sub	r1, r3, #24
    92b4:	ldr	r3, [sp, #36]	; 0x24
    92b8:	ldr	r0, [r3, #1628]	; 0x65c
    92bc:	bl	1b94 <cupsArrayFind@plt>
    92c0:	cmp	r0, #0
    92c4:	beq	92d4 <ippGetInteger@plt+0x7308>
    92c8:	ldr	r3, [r0, #4]
    92cc:	cmp	r3, #0
    92d0:	bne	8f7c <ippGetInteger@plt+0x6fb0>
    92d4:	add	r1, sp, #26624	; 0x6800
    92d8:	mov	r2, r6
    92dc:	add	r1, r1, #244	; 0xf4
    92e0:	ldr	r0, [sp, #76]	; 0x4c
    92e4:	bl	676c <ippGetInteger@plt+0x47a0>
    92e8:	mov	r2, r0
    92ec:	ldrd	r0, [sp, #32]
    92f0:	bl	87fc <ippGetInteger@plt+0x6830>
    92f4:	subs	r9, r0, #0
    92f8:	bne	8f7c <ippGetInteger@plt+0x6fb0>
    92fc:	ldr	r3, [pc, #-1500]	; 8d28 <ippGetInteger@plt+0x6d5c>
    9300:	add	r3, pc, r3
    9304:	ldr	r3, [r3, #284]	; 0x11c
    9308:	cmp	r3, #0
    930c:	str	r3, [sp, #92]	; 0x5c
    9310:	bne	8ef0 <ippGetInteger@plt+0x6f24>
    9314:	b	8f7c <ippGetInteger@plt+0x6fb0>
    9318:	add	r5, sp, #22528	; 0x5800
    931c:	add	r5, r5, #244	; 0xf4
    9320:	mov	r1, r5
    9324:	mov	r3, r8
    9328:	mov	r2, #1024	; 0x400
    932c:	ldr	r0, [sp, #28]
    9330:	bl	4664 <ippGetInteger@plt+0x2698>
    9334:	cmp	r0, #0
    9338:	beq	c480 <ippGetInteger@plt+0xa4b4>
    933c:	ldr	r3, [sp, #44]	; 0x2c
    9340:	str	r5, [sl, #-3096]	; 0xfffff3e8
    9344:	sub	r1, r3, #24
    9348:	ldr	r3, [sp, #36]	; 0x24
    934c:	ldr	r0, [r3, #1628]	; 0x65c
    9350:	bl	1b94 <cupsArrayFind@plt>
    9354:	cmp	r0, #0
    9358:	beq	9368 <ippGetInteger@plt+0x739c>
    935c:	ldr	r3, [r0, #4]
    9360:	cmp	r3, #0
    9364:	bne	91e8 <ippGetInteger@plt+0x721c>
    9368:	cmp	r4, #0
    936c:	beq	938c <ippGetInteger@plt+0x73c0>
    9370:	ldr	r4, [pc, #-1612]	; 8d2c <ippGetInteger@plt+0x6d60>
    9374:	add	r4, pc, r4
    9378:	ldr	r3, [r4]
    937c:	cmp	r3, #2
    9380:	beq	a188 <ippGetInteger@plt+0x81bc>
    9384:	cmp	r3, #1
    9388:	beq	a1ac <ippGetInteger@plt+0x81e0>
    938c:	ldr	r3, [sp, #40]	; 0x28
    9390:	mov	r2, #512	; 0x200
    9394:	sub	r3, r3, #516	; 0x204
    9398:	str	r3, [sp, #128]	; 0x80
    939c:	mov	r0, r3
    93a0:	ldr	r3, [sp, #36]	; 0x24
    93a4:	add	r1, r3, #584	; 0x248
    93a8:	bl	1e64 <_cups_strlcpy@plt>
    93ac:	add	lr, sp, #23552	; 0x5c00
    93b0:	add	lr, lr, #248	; 0xf8
    93b4:	mov	r4, lr
    93b8:	str	lr, [sp, #120]	; 0x78
    93bc:	bl	19fc <ippNew@plt>
    93c0:	mov	lr, r4
    93c4:	sub	r5, r4, #4
    93c8:	ldr	r3, [pc, #-1696]	; 8d30 <ippGetInteger@plt+0x6d64>
    93cc:	mov	r4, #0
    93d0:	strb	r4, [lr, #-2708]	; 0xfffff56c
    93d4:	ldr	lr, [sp, #80]	; 0x50
    93d8:	add	r3, pc, r3
    93dc:	ldr	ip, [pc, #-1712]	; 8d34 <ippGetInteger@plt+0x6d68>
    93e0:	strb	r4, [lr, #-1028]	; 0xfffffbfc
    93e4:	add	ip, pc, ip
    93e8:	strb	r4, [lr, #-2052]	; 0xfffff7fc
    93ec:	ldr	lr, [r3, #280]	; 0x118
    93f0:	ldr	r3, [r3, #16]
    93f4:	mov	r2, #1024	; 0x400
    93f8:	str	r3, [sp, #140]	; 0x8c
    93fc:	ldr	r3, [ip, #4]
    9400:	ldr	r1, [sp, #76]	; 0x4c
    9404:	str	r3, [sp, #136]	; 0x88
    9408:	str	r5, [sp, #148]	; 0x94
    940c:	str	lr, [sp, #124]	; 0x7c
    9410:	str	r4, [sl, #-3112]	; 0xfffff3d8
    9414:	str	r0, [sp, #84]	; 0x54
    9418:	mov	r0, r5
    941c:	bl	1e64 <_cups_strlcpy@plt>
    9420:	mov	r0, r5
    9424:	mov	r1, #46	; 0x2e
    9428:	bl	1f30 <strrchr@plt>
    942c:	ldr	r3, [sp, #96]	; 0x60
    9430:	ldr	r5, [sp, #28]
    9434:	add	r3, r3, #1
    9438:	str	r3, [sp, #96]	; 0x60
    943c:	mov	r3, #0
    9440:	str	r3, [sp, #56]	; 0x38
    9444:	mov	r9, r3
    9448:	str	r3, [sp, #64]	; 0x40
    944c:	str	r3, [sp, #104]	; 0x68
    9450:	str	r3, [sp, #116]	; 0x74
    9454:	str	r3, [sp, #144]	; 0x90
    9458:	str	r3, [sp, #100]	; 0x64
    945c:	str	r3, [sp, #112]	; 0x70
    9460:	str	r3, [sp, #132]	; 0x84
    9464:	ldr	r3, [pc, #-1844]	; 8d38 <ippGetInteger@plt+0x6d6c>
    9468:	str	r3, [sp, #156]	; 0x9c
    946c:	ldr	r3, [pc, #-1848]	; 8d3c <ippGetInteger@plt+0x6d70>
    9470:	add	r3, pc, r3
    9474:	str	r3, [sp, #152]	; 0x98
    9478:	ldr	r3, [pc, #-1856]	; 8d40 <ippGetInteger@plt+0x6d74>
    947c:	add	r3, pc, r3
    9480:	str	r3, [sp, #168]	; 0xa8
    9484:	cmp	r0, #0
    9488:	strbne	r4, [r0]
    948c:	mov	r3, r8
    9490:	mov	r2, #1024	; 0x400
    9494:	mov	r1, fp
    9498:	mov	r0, r5
    949c:	bl	4664 <ippGetInteger@plt+0x2698>
    94a0:	cmp	r0, #0
    94a4:	beq	9d90 <ippGetInteger@plt+0x7dc4>
    94a8:	ldr	r1, [pc, #-1900]	; 8d44 <ippGetInteger@plt+0x6d78>
    94ac:	mov	r0, fp
    94b0:	add	r1, pc, r1
    94b4:	bl	1a08 <_cups_strcasecmp@plt>
    94b8:	cmp	r0, #0
    94bc:	bne	98d0 <ippGetInteger@plt+0x7904>
    94c0:	ldr	r1, [pc, #-1920]	; 8d48 <ippGetInteger@plt+0x6d7c>
    94c4:	mov	r0, fp
    94c8:	add	r1, pc, r1
    94cc:	bl	1a08 <_cups_strcasecmp@plt>
    94d0:	cmp	r0, #0
    94d4:	bne	9834 <ippGetInteger@plt+0x7868>
    94d8:	ldr	r1, [pc, #-1940]	; 8d4c <ippGetInteger@plt+0x6d80>
    94dc:	mov	r0, fp
    94e0:	add	r1, pc, r1
    94e4:	bl	1ec4 <strcmp@plt>
    94e8:	cmp	r0, #0
    94ec:	beq	9d90 <ippGetInteger@plt+0x7dc4>
    94f0:	ldr	r1, [pc, #-1960]	; 8d50 <ippGetInteger@plt+0x6d84>
    94f4:	mov	r0, fp
    94f8:	add	r1, pc, r1
    94fc:	bl	1ec4 <strcmp@plt>
    9500:	cmp	r0, #0
    9504:	bne	9780 <ippGetInteger@plt+0x77b4>
    9508:	ldr	r3, [sl, #-3104]	; 0xfffff3e0
    950c:	cmp	r3, #0
    9510:	beq	9780 <ippGetInteger@plt+0x77b4>
    9514:	mov	r3, r8
    9518:	mov	r2, r5
    951c:	ldrd	r0, [sp, #32]
    9520:	bl	5d58 <ippGetInteger@plt+0x3d8c>
    9524:	subs	r4, r0, #0
    9528:	beq	961c <ippGetInteger@plt+0x7650>
    952c:	ldr	r0, [sl, #-3104]	; 0xfffff3e0
    9530:	bl	1ac8 <ippGetCount@plt>
    9534:	ldr	r1, [sp, #44]	; 0x2c
    9538:	mov	r3, r4
    953c:	sub	r1, r1, #32
    9540:	mov	r2, r0
    9544:	ldr	r0, [sp, #84]	; 0x54
    9548:	bl	1dbc <ippSetCollection@plt>
    954c:	b	948c <ippGetInteger@plt+0x74c0>
    9550:	ldr	r1, [pc, #-2052]	; 8d54 <ippGetInteger@plt+0x6d88>
    9554:	mov	r0, fp
    9558:	add	r1, pc, r1
    955c:	bl	1a08 <_cups_strcasecmp@plt>
    9560:	cmp	r0, #0
    9564:	bne	d4dc <ippGetInteger@plt+0xb510>
    9568:	mov	r3, r8
    956c:	mov	r2, #1024	; 0x400
    9570:	mov	r1, fp
    9574:	mov	r0, r5
    9578:	bl	4664 <ippGetInteger@plt+0x2698>
    957c:	cmp	r0, #0
    9580:	beq	de78 <ippGetInteger@plt+0xbeac>
    9584:	mov	r0, fp
    9588:	bl	1a44 <ippTagValue@plt>
    958c:	cmp	r0, #15
    9590:	mov	r4, r0
    9594:	ble	de5c <ippGetInteger@plt+0xbe90>
    9598:	ldr	r3, [sp, #40]	; 0x28
    959c:	mov	r2, #128	; 0x80
    95a0:	sub	r7, r3, #644	; 0x284
    95a4:	mov	r1, r7
    95a8:	mov	r3, r8
    95ac:	mov	r0, r5
    95b0:	bl	4664 <ippGetInteger@plt+0x2698>
    95b4:	cmp	r0, #0
    95b8:	beq	d680 <ippGetInteger@plt+0xb6b4>
    95bc:	cmp	r4, #32
    95c0:	bgt	d58c <ippGetInteger@plt+0xb5c0>
    95c4:	ldr	lr, [sp, #120]	; 0x78
    95c8:	mov	ip, #0
    95cc:	mov	r2, r4
    95d0:	mov	r3, r7
    95d4:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    95d8:	ldr	r0, [sp, #84]	; 0x54
    95dc:	strb	ip, [lr, #-2052]	; 0xfffff7fc
    95e0:	str	ip, [sl, #-3108]	; 0xfffff3dc
    95e4:	bl	1df8 <ippAddOutOfBand@plt>
    95e8:	str	r0, [sl, #-3108]	; 0xfffff3dc
    95ec:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    95f0:	cmp	r3, #0
    95f4:	bne	948c <ippGetInteger@plt+0x74c0>
    95f8:	ldr	r3, [sp, #104]	; 0x68
    95fc:	cmp	r3, #0
    9600:	bne	948c <ippGetInteger@plt+0x74c0>
    9604:	ldr	r1, [pc, #-2228]	; 8d58 <ippGetInteger@plt+0x6d8c>
    9608:	mov	r2, r7
    960c:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    9610:	ldr	r0, [sp, #32]
    9614:	add	r1, pc, r1
    9618:	bl	4b10 <ippGetInteger@plt+0x2b44>
    961c:	ldr	r0, [sp, #52]	; 0x34
    9620:	bl	1e70 <cupsArrayDelete@plt>
    9624:	ldr	r0, [sp, #28]
    9628:	bl	1d08 <cupsFileClose@plt>
    962c:	ldr	r0, [sp, #48]	; 0x30
    9630:	bl	1eb8 <httpClose@plt>
    9634:	ldr	r0, [sp, #84]	; 0x54
    9638:	bl	1a38 <ippDelete@plt>
    963c:	mov	r0, #0
    9640:	bl	1a38 <ippDelete@plt>
    9644:	ldr	r3, [sp, #64]	; 0x40
    9648:	cmp	r3, #0
    964c:	beq	96b0 <ippGetInteger@plt+0x76e4>
    9650:	ldr	r3, [sp, #64]	; 0x40
    9654:	add	r4, sp, #2288	; 0x8f0
    9658:	add	r4, r4, #4
    965c:	add	r5, r3, r3, lsl #3
    9660:	add	r5, r4, r5, lsl #2
    9664:	ldr	r0, [r4, #4]
    9668:	cmp	r0, #0
    966c:	beq	9674 <ippGetInteger@plt+0x76a8>
    9670:	bl	1a2c <free@plt>
    9674:	ldr	r0, [r4, #8]
    9678:	cmp	r0, #0
    967c:	beq	9684 <ippGetInteger@plt+0x76b8>
    9680:	bl	1a2c <free@plt>
    9684:	ldr	r0, [r4, #12]
    9688:	cmp	r0, #0
    968c:	beq	9694 <ippGetInteger@plt+0x76c8>
    9690:	bl	1a2c <free@plt>
    9694:	ldr	r0, [r4, #16]
    9698:	cmp	r0, #0
    969c:	beq	96a4 <ippGetInteger@plt+0x76d8>
    96a0:	bl	1a2c <free@plt>
    96a4:	add	r4, r4, #36	; 0x24
    96a8:	cmp	r4, r5
    96ac:	bne	9664 <ippGetInteger@plt+0x7698>
    96b0:	cmp	r9, #0
    96b4:	addne	r4, sp, #5888	; 0x1700
    96b8:	addne	r4, r4, #4
    96bc:	beq	9754 <ippGetInteger@plt+0x7788>
    96c0:	ldr	r0, [r4, #12]
    96c4:	bl	1a2c <free@plt>
    96c8:	ldr	r0, [r4, #16]
    96cc:	cmp	r0, #0
    96d0:	beq	96d8 <ippGetInteger@plt+0x770c>
    96d4:	bl	1a2c <free@plt>
    96d8:	ldr	r0, [r4, #20]
    96dc:	cmp	r0, #0
    96e0:	beq	96e8 <ippGetInteger@plt+0x771c>
    96e4:	bl	1a2c <free@plt>
    96e8:	ldr	r0, [r4, #24]
    96ec:	cmp	r0, #0
    96f0:	beq	96f8 <ippGetInteger@plt+0x772c>
    96f4:	bl	1a2c <free@plt>
    96f8:	ldr	r0, [r4, #28]
    96fc:	cmp	r0, #0
    9700:	beq	9708 <ippGetInteger@plt+0x773c>
    9704:	bl	1a2c <free@plt>
    9708:	ldr	r0, [r4, #32]
    970c:	cmp	r0, #0
    9710:	beq	9718 <ippGetInteger@plt+0x774c>
    9714:	bl	1a2c <free@plt>
    9718:	ldr	r0, [r4, #40]	; 0x28
    971c:	cmp	r0, #0
    9720:	beq	9728 <ippGetInteger@plt+0x775c>
    9724:	bl	1a2c <free@plt>
    9728:	ldr	r0, [r4, #44]	; 0x2c
    972c:	cmp	r0, #0
    9730:	beq	9738 <ippGetInteger@plt+0x776c>
    9734:	bl	1a2c <free@plt>
    9738:	ldr	r0, [r4, #48]	; 0x30
    973c:	cmp	r0, #0
    9740:	beq	9748 <ippGetInteger@plt+0x777c>
    9744:	bl	1a2c <free@plt>
    9748:	subs	r9, r9, #1
    974c:	add	r4, r4, #76	; 0x4c
    9750:	bne	96c0 <ippGetInteger@plt+0x76f4>
    9754:	ldr	r3, [sp, #56]	; 0x38
    9758:	cmp	r3, #0
    975c:	beq	8fe8 <ippGetInteger@plt+0x701c>
    9760:	ldr	r3, [sp, #56]	; 0x38
    9764:	add	r4, sp, #692	; 0x2b4
    9768:	add	r5, r4, r3, lsl #2
    976c:	ldr	r0, [r4], #4
    9770:	bl	1a2c <free@plt>
    9774:	cmp	r4, r5
    9778:	bne	976c <ippGetInteger@plt+0x77a0>
    977c:	b	8fe8 <ippGetInteger@plt+0x701c>
    9780:	ldr	r1, [pc, #-2604]	; 8d5c <ippGetInteger@plt+0x6d90>
    9784:	mov	r0, fp
    9788:	add	r1, pc, r1
    978c:	bl	1ec4 <strcmp@plt>
    9790:	cmp	r0, #0
    9794:	beq	9abc <ippGetInteger@plt+0x7af0>
    9798:	ldr	r1, [pc, #-2624]	; 8d60 <ippGetInteger@plt+0x6d94>
    979c:	mov	r0, fp
    97a0:	add	r1, pc, r1
    97a4:	bl	1ec4 <strcmp@plt>
    97a8:	cmp	r0, #0
    97ac:	beq	9bac <ippGetInteger@plt+0x7be0>
    97b0:	ldr	r1, [pc, #-2644]	; 8d64 <ippGetInteger@plt+0x6d98>
    97b4:	mov	r0, fp
    97b8:	add	r1, pc, r1
    97bc:	bl	1ec4 <strcmp@plt>
    97c0:	cmp	r0, #0
    97c4:	bne	9b60 <ippGetInteger@plt+0x7b94>
    97c8:	add	r6, sp, #22528	; 0x5800
    97cc:	add	r6, r6, #244	; 0xf4
    97d0:	mov	r1, r6
    97d4:	mov	r3, r8
    97d8:	mov	r2, #1024	; 0x400
    97dc:	mov	r0, r5
    97e0:	bl	4664 <ippGetInteger@plt+0x2698>
    97e4:	cmp	r0, #0
    97e8:	beq	981c <ippGetInteger@plt+0x7850>
    97ec:	ldr	r1, [pc, #-2700]	; 8d68 <ippGetInteger@plt+0x6d9c>
    97f0:	mov	r0, r6
    97f4:	add	r1, pc, r1
    97f8:	bl	1a08 <_cups_strcasecmp@plt>
    97fc:	cmp	r0, #0
    9800:	beq	9c38 <ippGetInteger@plt+0x7c6c>
    9804:	ldr	r1, [pc, #-2720]	; 8d6c <ippGetInteger@plt+0x6da0>
    9808:	mov	r0, r6
    980c:	add	r1, pc, r1
    9810:	bl	1a08 <_cups_strcasecmp@plt>
    9814:	cmp	r0, #0
    9818:	beq	9c38 <ippGetInteger@plt+0x7c6c>
    981c:	ldr	r1, [pc, #-2740]	; 8d70 <ippGetInteger@plt+0x6da4>
    9820:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    9824:	ldr	r0, [sp, #32]
    9828:	add	r1, pc, r1
    982c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    9830:	b	961c <ippGetInteger@plt+0x7650>
    9834:	ldr	r1, [pc, #-2760]	; 8d74 <ippGetInteger@plt+0x6da8>
    9838:	mov	r0, fp
    983c:	add	r1, pc, r1
    9840:	bl	1a08 <_cups_strcasecmp@plt>
    9844:	cmp	r0, #0
    9848:	beq	94d8 <ippGetInteger@plt+0x750c>
    984c:	ldr	r1, [pc, #-2780]	; 8d78 <ippGetInteger@plt+0x6dac>
    9850:	mov	r0, fp
    9854:	add	r1, pc, r1
    9858:	bl	1a08 <_cups_strcasecmp@plt>
    985c:	cmp	r0, #0
    9860:	beq	94d8 <ippGetInteger@plt+0x750c>
    9864:	ldr	r1, [pc, #-2800]	; 8d7c <ippGetInteger@plt+0x6db0>
    9868:	mov	r0, fp
    986c:	add	r1, pc, r1
    9870:	bl	1a08 <_cups_strcasecmp@plt>
    9874:	cmp	r0, #0
    9878:	beq	94d8 <ippGetInteger@plt+0x750c>
    987c:	ldr	r1, [pc, #-2820]	; 8d80 <ippGetInteger@plt+0x6db4>
    9880:	mov	r0, fp
    9884:	add	r1, pc, r1
    9888:	bl	1a08 <_cups_strcasecmp@plt>
    988c:	cmp	r0, #0
    9890:	beq	94d8 <ippGetInteger@plt+0x750c>
    9894:	ldr	r1, [pc, #-2840]	; 8d84 <ippGetInteger@plt+0x6db8>
    9898:	mov	r0, fp
    989c:	add	r1, pc, r1
    98a0:	bl	1a08 <_cups_strcasecmp@plt>
    98a4:	cmp	r0, #0
    98a8:	beq	94d8 <ippGetInteger@plt+0x750c>
    98ac:	ldr	r1, [pc, #-2860]	; 8d88 <ippGetInteger@plt+0x6dbc>
    98b0:	mov	r0, fp
    98b4:	add	r1, pc, r1
    98b8:	bl	1a08 <_cups_strcasecmp@plt>
    98bc:	ldr	r3, [sp, #112]	; 0x70
    98c0:	cmp	r0, #0
    98c4:	movne	r3, #0
    98c8:	str	r3, [sp, #112]	; 0x70
    98cc:	b	94d8 <ippGetInteger@plt+0x750c>
    98d0:	ldr	r1, [pc, #-2892]	; 8d8c <ippGetInteger@plt+0x6dc0>
    98d4:	mov	r0, fp
    98d8:	add	r1, pc, r1
    98dc:	bl	1a08 <_cups_strcasecmp@plt>
    98e0:	cmp	r0, #0
    98e4:	beq	94c0 <ippGetInteger@plt+0x74f4>
    98e8:	ldr	r1, [pc, #-2912]	; 8d90 <ippGetInteger@plt+0x6dc4>
    98ec:	mov	r0, fp
    98f0:	add	r1, pc, r1
    98f4:	bl	1a08 <_cups_strcasecmp@plt>
    98f8:	cmp	r0, #0
    98fc:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9900:	ldr	r1, [pc, #-2932]	; 8d94 <ippGetInteger@plt+0x6dc8>
    9904:	mov	r0, fp
    9908:	add	r1, pc, r1
    990c:	bl	1a08 <_cups_strcasecmp@plt>
    9910:	cmp	r0, #0
    9914:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9918:	ldr	r1, [pc, #-2952]	; 8d98 <ippGetInteger@plt+0x6dcc>
    991c:	mov	r0, fp
    9920:	add	r1, pc, r1
    9924:	bl	1a08 <_cups_strcasecmp@plt>
    9928:	cmp	r0, #0
    992c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9930:	ldr	r1, [pc, #-2972]	; 8d9c <ippGetInteger@plt+0x6dd0>
    9934:	mov	r0, fp
    9938:	add	r1, pc, r1
    993c:	bl	1a08 <_cups_strcasecmp@plt>
    9940:	cmp	r0, #0
    9944:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9948:	ldr	r1, [pc, #-2992]	; 8da0 <ippGetInteger@plt+0x6dd4>
    994c:	mov	r0, fp
    9950:	add	r1, pc, r1
    9954:	bl	1a08 <_cups_strcasecmp@plt>
    9958:	cmp	r0, #0
    995c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9960:	ldr	r1, [pc, #-3012]	; 8da4 <ippGetInteger@plt+0x6dd8>
    9964:	mov	r0, fp
    9968:	add	r1, pc, r1
    996c:	bl	1a08 <_cups_strcasecmp@plt>
    9970:	cmp	r0, #0
    9974:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9978:	ldr	r1, [pc, #-3032]	; 8da8 <ippGetInteger@plt+0x6ddc>
    997c:	mov	r0, fp
    9980:	add	r1, pc, r1
    9984:	bl	1a08 <_cups_strcasecmp@plt>
    9988:	cmp	r0, #0
    998c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9990:	ldr	r1, [pc, #-3052]	; 8dac <ippGetInteger@plt+0x6de0>
    9994:	mov	r0, fp
    9998:	add	r1, pc, r1
    999c:	bl	1a08 <_cups_strcasecmp@plt>
    99a0:	cmp	r0, #0
    99a4:	beq	94c0 <ippGetInteger@plt+0x74f4>
    99a8:	ldr	r1, [pc, #-3072]	; 8db0 <ippGetInteger@plt+0x6de4>
    99ac:	mov	r0, fp
    99b0:	add	r1, pc, r1
    99b4:	bl	1a08 <_cups_strcasecmp@plt>
    99b8:	cmp	r0, #0
    99bc:	beq	94c0 <ippGetInteger@plt+0x74f4>
    99c0:	ldr	r1, [pc, #-3092]	; 8db4 <ippGetInteger@plt+0x6de8>
    99c4:	mov	r0, fp
    99c8:	add	r1, pc, r1
    99cc:	bl	1a08 <_cups_strcasecmp@plt>
    99d0:	cmp	r0, #0
    99d4:	beq	94c0 <ippGetInteger@plt+0x74f4>
    99d8:	ldr	r1, [pc, #-3112]	; 8db8 <ippGetInteger@plt+0x6dec>
    99dc:	mov	r0, fp
    99e0:	add	r1, pc, r1
    99e4:	bl	1a08 <_cups_strcasecmp@plt>
    99e8:	cmp	r0, #0
    99ec:	beq	94c0 <ippGetInteger@plt+0x74f4>
    99f0:	ldr	r1, [pc, #-3132]	; 8dbc <ippGetInteger@plt+0x6df0>
    99f4:	mov	r0, fp
    99f8:	add	r1, pc, r1
    99fc:	bl	1a08 <_cups_strcasecmp@plt>
    9a00:	cmp	r0, #0
    9a04:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a08:	ldr	r1, [pc, #-3152]	; 8dc0 <ippGetInteger@plt+0x6df4>
    9a0c:	mov	r0, fp
    9a10:	add	r1, pc, r1
    9a14:	bl	1a08 <_cups_strcasecmp@plt>
    9a18:	cmp	r0, #0
    9a1c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a20:	ldr	r1, [pc, #-3172]	; 8dc4 <ippGetInteger@plt+0x6df8>
    9a24:	mov	r0, fp
    9a28:	add	r1, pc, r1
    9a2c:	bl	1a08 <_cups_strcasecmp@plt>
    9a30:	cmp	r0, #0
    9a34:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a38:	ldr	r1, [pc, #-3192]	; 8dc8 <ippGetInteger@plt+0x6dfc>
    9a3c:	mov	r0, fp
    9a40:	add	r1, pc, r1
    9a44:	bl	1a08 <_cups_strcasecmp@plt>
    9a48:	cmp	r0, #0
    9a4c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a50:	ldr	r1, [pc, #-3212]	; 8dcc <ippGetInteger@plt+0x6e00>
    9a54:	mov	r0, fp
    9a58:	add	r1, pc, r1
    9a5c:	bl	1a08 <_cups_strcasecmp@plt>
    9a60:	cmp	r0, #0
    9a64:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a68:	ldr	r1, [pc, #-3232]	; 8dd0 <ippGetInteger@plt+0x6e04>
    9a6c:	mov	r0, fp
    9a70:	add	r1, pc, r1
    9a74:	bl	1a08 <_cups_strcasecmp@plt>
    9a78:	cmp	r0, #0
    9a7c:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a80:	ldr	r1, [pc, #-3252]	; 8dd4 <ippGetInteger@plt+0x6e08>
    9a84:	mov	r0, fp
    9a88:	add	r1, pc, r1
    9a8c:	bl	1a08 <_cups_strcasecmp@plt>
    9a90:	cmp	r0, #0
    9a94:	beq	94c0 <ippGetInteger@plt+0x74f4>
    9a98:	ldr	r1, [pc, #-3272]	; 8dd8 <ippGetInteger@plt+0x6e0c>
    9a9c:	mov	r0, fp
    9aa0:	add	r1, pc, r1
    9aa4:	bl	1a08 <_cups_strcasecmp@plt>
    9aa8:	ldr	r3, [sp, #100]	; 0x64
    9aac:	cmp	r0, #0
    9ab0:	movne	r3, #0
    9ab4:	str	r3, [sp, #100]	; 0x64
    9ab8:	b	94c0 <ippGetInteger@plt+0x74f4>
    9abc:	add	r4, sp, #22528	; 0x5800
    9ac0:	add	r4, r4, #244	; 0xf4
    9ac4:	mov	r1, r4
    9ac8:	mov	r3, r8
    9acc:	mov	r2, #1024	; 0x400
    9ad0:	mov	r0, r5
    9ad4:	bl	4664 <ippGetInteger@plt+0x2698>
    9ad8:	cmp	r0, #0
    9adc:	beq	bfac <ippGetInteger@plt+0x9fe0>
    9ae0:	ldr	r3, [sp, #40]	; 0x28
    9ae4:	mov	r2, r4
    9ae8:	sub	r6, r3, #660	; 0x294
    9aec:	mov	r1, r6
    9af0:	mov	r3, #16
    9af4:	ldr	r0, [sp, #36]	; 0x24
    9af8:	bl	4244 <ippGetInteger@plt+0x2278>
    9afc:	ldr	r1, [pc, #-3368]	; 8ddc <ippGetInteger@plt+0x6e10>
    9b00:	mov	r0, r6
    9b04:	add	r1, pc, r1
    9b08:	bl	1ec4 <strcmp@plt>
    9b0c:	cmp	r0, #0
    9b10:	beq	9c2c <ippGetInteger@plt+0x7c60>
    9b14:	ldr	r1, [pc, #-3388]	; 8de0 <ippGetInteger@plt+0x6e14>
    9b18:	mov	r0, r6
    9b1c:	add	r1, pc, r1
    9b20:	bl	1ec4 <strcmp@plt>
    9b24:	cmp	r0, #0
    9b28:	beq	948c <ippGetInteger@plt+0x74c0>
    9b2c:	ldr	r1, [pc, #-3408]	; 8de4 <ippGetInteger@plt+0x6e18>
    9b30:	mov	r0, r6
    9b34:	add	r1, pc, r1
    9b38:	bl	1ec4 <strcmp@plt>
    9b3c:	cmp	r0, #0
    9b40:	beq	948c <ippGetInteger@plt+0x74c0>
    9b44:	ldr	r1, [pc, #-3428]	; 8de8 <ippGetInteger@plt+0x6e1c>
    9b48:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    9b4c:	mov	r2, r6
    9b50:	ldr	r0, [sp, #32]
    9b54:	add	r1, pc, r1
    9b58:	bl	4b10 <ippGetInteger@plt+0x2b44>
    9b5c:	b	961c <ippGetInteger@plt+0x7650>
    9b60:	ldr	r1, [pc, #-3452]	; 8dec <ippGetInteger@plt+0x6e20>
    9b64:	mov	r0, fp
    9b68:	add	r1, pc, r1
    9b6c:	bl	1a08 <_cups_strcasecmp@plt>
    9b70:	cmp	r0, #0
    9b74:	bne	9c58 <ippGetInteger@plt+0x7c8c>
    9b78:	add	r4, sp, #22528	; 0x5800
    9b7c:	add	r4, r4, #244	; 0xf4
    9b80:	mov	r1, r4
    9b84:	mov	r3, r8
    9b88:	mov	r2, #1024	; 0x400
    9b8c:	mov	r0, r5
    9b90:	bl	4664 <ippGetInteger@plt+0x2698>
    9b94:	mov	r2, r4
    9b98:	mov	r3, #1024	; 0x400
    9b9c:	ldr	r1, [sp, #148]	; 0x94
    9ba0:	ldr	r0, [sp, #36]	; 0x24
    9ba4:	bl	4244 <ippGetInteger@plt+0x2278>
    9ba8:	b	948c <ippGetInteger@plt+0x74c0>
    9bac:	ldr	r3, [sp, #40]	; 0x28
    9bb0:	mov	r2, #128	; 0x80
    9bb4:	sub	r4, r3, #644	; 0x284
    9bb8:	mov	r1, r4
    9bbc:	mov	r3, r8
    9bc0:	mov	r0, r5
    9bc4:	bl	4664 <ippGetInteger@plt+0x2698>
    9bc8:	cmp	r0, #0
    9bcc:	beq	bf94 <ippGetInteger@plt+0x9fc8>
    9bd0:	add	r6, sp, #22528	; 0x5800
    9bd4:	add	r6, r6, #244	; 0xf4
    9bd8:	mov	r1, r6
    9bdc:	mov	r3, r8
    9be0:	mov	r2, #1024	; 0x400
    9be4:	mov	r0, r5
    9be8:	bl	4664 <ippGetInteger@plt+0x2698>
    9bec:	cmp	r0, #0
    9bf0:	beq	bf94 <ippGetInteger@plt+0x9fc8>
    9bf4:	mov	r2, r6
    9bf8:	ldr	r6, [sp, #36]	; 0x24
    9bfc:	mov	r1, fp
    9c00:	mov	r0, r6
    9c04:	mov	r3, #1024	; 0x400
    9c08:	bl	4244 <ippGetInteger@plt+0x2278>
    9c0c:	ldr	r2, [sp, #68]	; 0x44
    9c10:	str	fp, [sp]
    9c14:	mov	r3, r4
    9c18:	add	r2, r2, #12
    9c1c:	add	r1, r6, #4
    9c20:	ldr	r0, [sp, #32]
    9c24:	bl	6520 <ippGetInteger@plt+0x4554>
    9c28:	b	948c <ippGetInteger@plt+0x74c0>
    9c2c:	ldr	r3, [sp, #120]	; 0x78
    9c30:	strb	r0, [r3, #-2708]	; 0xfffff56c
    9c34:	b	948c <ippGetInteger@plt+0x74c0>
    9c38:	ldr	r1, [pc, #-3664]	; 8df0 <ippGetInteger@plt+0x6e24>
    9c3c:	mov	r0, r6
    9c40:	add	r1, pc, r1
    9c44:	bl	1a08 <_cups_strcasecmp@plt>
    9c48:	clz	r3, r0
    9c4c:	lsr	r3, r3, #5
    9c50:	str	r3, [sp, #124]	; 0x7c
    9c54:	b	948c <ippGetInteger@plt+0x74c0>
    9c58:	ldr	r1, [pc, #-3692]	; 8df4 <ippGetInteger@plt+0x6e28>
    9c5c:	mov	r0, fp
    9c60:	add	r1, pc, r1
    9c64:	bl	1a08 <_cups_strcasecmp@plt>
    9c68:	subs	r4, r0, #0
    9c6c:	beq	a0a0 <ippGetInteger@plt+0x80d4>
    9c70:	ldr	r1, [pc, #-3712]	; 8df8 <ippGetInteger@plt+0x6e2c>
    9c74:	mov	r0, fp
    9c78:	add	r1, pc, r1
    9c7c:	bl	1ec4 <strcmp@plt>
    9c80:	subs	r4, r0, #0
    9c84:	beq	a330 <ippGetInteger@plt+0x8364>
    9c88:	ldr	r1, [pc, #-3732]	; 8dfc <ippGetInteger@plt+0x6e30>
    9c8c:	mov	r0, fp
    9c90:	add	r1, pc, r1
    9c94:	bl	1ec4 <strcmp@plt>
    9c98:	cmp	r0, #0
    9c9c:	beq	bcc8 <ippGetInteger@plt+0x9cfc>
    9ca0:	ldr	r1, [pc, #-3752]	; 8e00 <ippGetInteger@plt+0x6e34>
    9ca4:	mov	r0, fp
    9ca8:	add	r1, pc, r1
    9cac:	bl	1ec4 <strcmp@plt>
    9cb0:	cmp	r0, #0
    9cb4:	beq	bdfc <ippGetInteger@plt+0x9e30>
    9cb8:	ldr	r1, [pc, #-3772]	; 8e04 <ippGetInteger@plt+0x6e38>
    9cbc:	mov	r0, fp
    9cc0:	add	r1, pc, r1
    9cc4:	bl	1ec4 <strcmp@plt>
    9cc8:	cmp	r0, #0
    9ccc:	beq	c048 <ippGetInteger@plt+0xa07c>
    9cd0:	ldr	r1, [pc, #-3792]	; 8e08 <ippGetInteger@plt+0x6e3c>
    9cd4:	mov	r0, fp
    9cd8:	add	r1, pc, r1
    9cdc:	bl	1ec4 <strcmp@plt>
    9ce0:	cmp	r0, #0
    9ce4:	beq	bfdc <ippGetInteger@plt+0xa010>
    9ce8:	ldr	r1, [pc, #-3812]	; 8e0c <ippGetInteger@plt+0x6e40>
    9cec:	mov	r0, fp
    9cf0:	add	r1, pc, r1
    9cf4:	bl	1ec4 <strcmp@plt>
    9cf8:	cmp	r0, #0
    9cfc:	beq	c6d0 <ippGetInteger@plt+0xa704>
    9d00:	ldr	r1, [pc, #-3832]	; 8e10 <ippGetInteger@plt+0x6e44>
    9d04:	mov	r0, fp
    9d08:	add	r1, pc, r1
    9d0c:	bl	1ec4 <strcmp@plt>
    9d10:	cmp	r0, #0
    9d14:	bne	c5f4 <ippGetInteger@plt+0xa628>
    9d18:	add	r6, sp, #22528	; 0x5800
    9d1c:	add	r6, r6, #244	; 0xf4
    9d20:	mov	r1, r6
    9d24:	mov	r3, r8
    9d28:	mov	r2, #1024	; 0x400
    9d2c:	mov	r0, r5
    9d30:	bl	4664 <ippGetInteger@plt+0x2698>
    9d34:	cmp	r0, #0
    9d38:	beq	c978 <ippGetInteger@plt+0xa9ac>
    9d3c:	ldr	r1, [pc, #-3888]	; 8e14 <ippGetInteger@plt+0x6e48>
    9d40:	mov	r0, r6
    9d44:	add	r1, pc, r1
    9d48:	bl	1ec4 <strcmp@plt>
    9d4c:	cmp	r0, #0
    9d50:	beq	c568 <ippGetInteger@plt+0xa59c>
    9d54:	ldr	r1, [pc, #-3908]	; 8e18 <ippGetInteger@plt+0x6e4c>
    9d58:	mov	r0, r6
    9d5c:	add	r1, pc, r1
    9d60:	bl	1ec4 <strcmp@plt>
    9d64:	cmp	r0, #0
    9d68:	beq	c9ac <ippGetInteger@plt+0xa9e0>
    9d6c:	ldr	r1, [pc, #-3928]	; 8e1c <ippGetInteger@plt+0x6e50>
    9d70:	mov	r0, r6
    9d74:	add	r1, pc, r1
    9d78:	bl	1ec4 <strcmp@plt>
    9d7c:	cmp	r0, #0
    9d80:	bne	c990 <ippGetInteger@plt+0xa9c4>
    9d84:	mov	r3, #2
    9d88:	str	r3, [sp, #140]	; 0x8c
    9d8c:	b	948c <ippGetInteger@plt+0x74c0>
    9d90:	ldr	ip, [sp, #136]	; 0x88
    9d94:	ldr	r3, [pc, #-3964]	; 8e20 <ippGetInteger@plt+0x6e54>
    9d98:	ldr	r0, [pc, #-3964]	; 8e24 <ippGetInteger@plt+0x6e58>
    9d9c:	ldr	r4, [sp, #84]	; 0x54
    9da0:	smull	r2, r3, r3, ip
    9da4:	add	r0, pc, r0
    9da8:	asr	r2, ip, #31
    9dac:	rsb	r1, r2, r3, asr #2
    9db0:	ldr	r3, [r0, #288]	; 0x120
    9db4:	add	r2, r1, r1, lsl #2
    9db8:	add	r3, r3, #1
    9dbc:	str	r3, [r0, #288]	; 0x120
    9dc0:	sub	r2, ip, r2, lsl #1
    9dc4:	mov	r0, r4
    9dc8:	str	r2, [sp, #176]	; 0xb0
    9dcc:	str	r1, [sp, #172]	; 0xac
    9dd0:	bl	1c90 <ippSetVersion@plt>
    9dd4:	ldr	r1, [sp, #116]	; 0x74
    9dd8:	mov	r0, r4
    9ddc:	bl	1bc4 <ippSetOperation@plt>
    9de0:	ldr	r1, [sp, #96]	; 0x60
    9de4:	mov	r0, r4
    9de8:	bl	1da4 <ippSetRequestId@plt>
    9dec:	ldr	r3, [pc, #-4044]	; 8e28 <ippGetInteger@plt+0x6e5c>
    9df0:	add	r3, pc, r3
    9df4:	ldr	r3, [r3]
    9df8:	cmp	r3, #2
    9dfc:	beq	a1c4 <ippGetInteger@plt+0x81f8>
    9e00:	cmp	r3, #1
    9e04:	beq	a304 <ippGetInteger@plt+0x8338>
    9e08:	ldr	r3, [sp, #88]	; 0x58
    9e0c:	ldr	r2, [sp, #144]	; 0x90
    9e10:	eor	r3, r3, #1
    9e14:	and	r3, r3, r2
    9e18:	ldr	r2, [sp, #104]	; 0x68
    9e1c:	orr	r3, r3, r2
    9e20:	ands	r3, r3, #1
    9e24:	beq	a38c <ippGetInteger@plt+0x83c0>
    9e28:	ldr	r2, [pc, #3960]	; ada8 <ippGetInteger@plt+0x8ddc>
    9e2c:	ldr	r4, [pc, #3960]	; adac <ippGetInteger@plt+0x8de0>
    9e30:	add	r2, pc, r2
    9e34:	add	r4, pc, r4
    9e38:	ldr	r3, [r2, #296]	; 0x128
    9e3c:	ldr	r0, [sp, #84]	; 0x54
    9e40:	add	r3, r3, #1
    9e44:	str	r3, [r2, #296]	; 0x128
    9e48:	bl	1a38 <ippDelete@plt>
    9e4c:	ldr	r3, [r4]
    9e50:	cmp	r3, #2
    9e54:	beq	c17c <ippGetInteger@plt+0xa1b0>
    9e58:	cmp	r3, #1
    9e5c:	ldr	r2, [sp, #124]	; 0x7c
    9e60:	ldr	r3, [sp, #88]	; 0x58
    9e64:	orr	r8, r3, r2
    9e68:	beq	bd70 <ippGetInteger@plt+0x9da4>
    9e6c:	mov	fp, #0
    9e70:	mov	r0, fp
    9e74:	bl	1a38 <ippDelete@plt>
    9e78:	ldr	r3, [sp, #64]	; 0x40
    9e7c:	cmp	r3, #0
    9e80:	beq	9ee4 <ippGetInteger@plt+0x7f18>
    9e84:	ldr	r3, [sp, #64]	; 0x40
    9e88:	add	r5, sp, #2288	; 0x8f0
    9e8c:	add	r5, r5, #4
    9e90:	add	r4, r3, r3, lsl #3
    9e94:	add	r4, r5, r4, lsl #2
    9e98:	ldr	r0, [r5, #4]
    9e9c:	cmp	r0, #0
    9ea0:	beq	9ea8 <ippGetInteger@plt+0x7edc>
    9ea4:	bl	1a2c <free@plt>
    9ea8:	ldr	r0, [r5, #8]
    9eac:	cmp	r0, #0
    9eb0:	beq	9eb8 <ippGetInteger@plt+0x7eec>
    9eb4:	bl	1a2c <free@plt>
    9eb8:	ldr	r0, [r5, #12]
    9ebc:	cmp	r0, #0
    9ec0:	beq	9ec8 <ippGetInteger@plt+0x7efc>
    9ec4:	bl	1a2c <free@plt>
    9ec8:	ldr	r0, [r5, #16]
    9ecc:	cmp	r0, #0
    9ed0:	beq	9ed8 <ippGetInteger@plt+0x7f0c>
    9ed4:	bl	1a2c <free@plt>
    9ed8:	add	r5, r5, #36	; 0x24
    9edc:	cmp	r5, r4
    9ee0:	bne	9e98 <ippGetInteger@plt+0x7ecc>
    9ee4:	cmp	r9, #0
    9ee8:	addne	r4, sp, #5888	; 0x1700
    9eec:	addne	r4, r4, #4
    9ef0:	beq	9f88 <ippGetInteger@plt+0x7fbc>
    9ef4:	ldr	r0, [r4, #12]
    9ef8:	bl	1a2c <free@plt>
    9efc:	ldr	r0, [r4, #16]
    9f00:	cmp	r0, #0
    9f04:	beq	9f0c <ippGetInteger@plt+0x7f40>
    9f08:	bl	1a2c <free@plt>
    9f0c:	ldr	r0, [r4, #20]
    9f10:	cmp	r0, #0
    9f14:	beq	9f1c <ippGetInteger@plt+0x7f50>
    9f18:	bl	1a2c <free@plt>
    9f1c:	ldr	r0, [r4, #24]
    9f20:	cmp	r0, #0
    9f24:	beq	9f2c <ippGetInteger@plt+0x7f60>
    9f28:	bl	1a2c <free@plt>
    9f2c:	ldr	r0, [r4, #28]
    9f30:	cmp	r0, #0
    9f34:	beq	9f3c <ippGetInteger@plt+0x7f70>
    9f38:	bl	1a2c <free@plt>
    9f3c:	ldr	r0, [r4, #32]
    9f40:	cmp	r0, #0
    9f44:	beq	9f4c <ippGetInteger@plt+0x7f80>
    9f48:	bl	1a2c <free@plt>
    9f4c:	ldr	r0, [r4, #40]	; 0x28
    9f50:	cmp	r0, #0
    9f54:	beq	9f5c <ippGetInteger@plt+0x7f90>
    9f58:	bl	1a2c <free@plt>
    9f5c:	ldr	r0, [r4, #44]	; 0x2c
    9f60:	cmp	r0, #0
    9f64:	beq	9f6c <ippGetInteger@plt+0x7fa0>
    9f68:	bl	1a2c <free@plt>
    9f6c:	ldr	r0, [r4, #48]	; 0x30
    9f70:	cmp	r0, #0
    9f74:	beq	9f7c <ippGetInteger@plt+0x7fb0>
    9f78:	bl	1a2c <free@plt>
    9f7c:	subs	r9, r9, #1
    9f80:	add	r4, r4, #76	; 0x4c
    9f84:	bne	9ef4 <ippGetInteger@plt+0x7f28>
    9f88:	ldr	r3, [sp, #56]	; 0x38
    9f8c:	cmp	r3, #0
    9f90:	beq	9fb0 <ippGetInteger@plt+0x7fe4>
    9f94:	ldr	r3, [sp, #56]	; 0x38
    9f98:	add	r4, sp, #692	; 0x2b4
    9f9c:	add	r5, r4, r3, lsl #2
    9fa0:	ldr	r0, [r4], #4
    9fa4:	bl	1a2c <free@plt>
    9fa8:	cmp	r5, r4
    9fac:	bne	9fa0 <ippGetInteger@plt+0x7fd4>
    9fb0:	cmp	r8, #0
    9fb4:	beq	91e8 <ippGetInteger@plt+0x721c>
    9fb8:	mov	r4, #0
    9fbc:	b	8980 <ippGetInteger@plt+0x69b4>
    9fc0:	add	r5, sp, #22528	; 0x5800
    9fc4:	add	r5, r5, #244	; 0xf4
    9fc8:	mov	r3, r8
    9fcc:	mov	r1, r5
    9fd0:	mov	r2, #1024	; 0x400
    9fd4:	ldr	r0, [sp, #28]
    9fd8:	bl	4664 <ippGetInteger@plt+0x2698>
    9fdc:	cmp	r0, #0
    9fe0:	beq	c8d8 <ippGetInteger@plt+0xa90c>
    9fe4:	ldr	r1, [pc, #3524]	; adb0 <ippGetInteger@plt+0x8de4>
    9fe8:	mov	r0, r5
    9fec:	add	r1, pc, r1
    9ff0:	bl	1ec4 <strcmp@plt>
    9ff4:	cmp	r0, #0
    9ff8:	beq	bd94 <ippGetInteger@plt+0x9dc8>
    9ffc:	ldr	r1, [pc, #3504]	; adb4 <ippGetInteger@plt+0x8de8>
    a000:	mov	r0, r5
    a004:	add	r1, pc, r1
    a008:	bl	1ec4 <strcmp@plt>
    a00c:	cmp	r0, #0
    a010:	beq	bf5c <ippGetInteger@plt+0x9f90>
    a014:	ldr	r1, [pc, #3484]	; adb8 <ippGetInteger@plt+0x8dec>
    a018:	mov	r0, r5
    a01c:	add	r1, pc, r1
    a020:	bl	1ec4 <strcmp@plt>
    a024:	cmp	r0, #0
    a028:	bne	c13c <ippGetInteger@plt+0xa170>
    a02c:	ldr	r3, [pc, #3464]	; adbc <ippGetInteger@plt+0x8df0>
    a030:	mov	r2, #2
    a034:	add	r3, pc, r3
    a038:	str	r2, [r3, #16]
    a03c:	b	8980 <ippGetInteger@plt+0x69b4>
    a040:	ldr	r1, [pc, #3448]	; adc0 <ippGetInteger@plt+0x8df4>
    a044:	mov	r0, r6
    a048:	add	r1, pc, r1
    a04c:	bl	1a08 <_cups_strcasecmp@plt>
    a050:	ldr	r3, [pc, #3436]	; adc4 <ippGetInteger@plt+0x8df8>
    a054:	add	r3, pc, r3
    a058:	clz	r0, r0
    a05c:	lsr	r0, r0, #5
    a060:	str	r0, [r3, #284]	; 0x11c
    a064:	b	8980 <ippGetInteger@plt+0x69b4>
    a068:	ldr	r1, [pc, #3416]	; adc8 <ippGetInteger@plt+0x8dfc>
    a06c:	mov	r0, fp
    a070:	add	r1, pc, r1
    a074:	bl	1ec4 <strcmp@plt>
    a078:	cmp	r0, #0
    a07c:	beq	9368 <ippGetInteger@plt+0x739c>
    a080:	ldr	r1, [pc, #3396]	; adcc <ippGetInteger@plt+0x8e00>
    a084:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    a088:	mov	r2, fp
    a08c:	ldr	r0, [sp, #32]
    a090:	add	r1, pc, r1
    a094:	bl	4b10 <ippGetInteger@plt+0x2b44>
    a098:	mov	r9, #0
    a09c:	b	8ef0 <ippGetInteger@plt+0x6f24>
    a0a0:	mov	r3, r8
    a0a4:	mov	r2, #1024	; 0x400
    a0a8:	mov	r1, fp
    a0ac:	mov	r0, r5
    a0b0:	bl	4664 <ippGetInteger@plt+0x2698>
    a0b4:	ldr	r0, [pc, #3348]	; add0 <ippGetInteger@plt+0x8e04>
    a0b8:	mov	r1, r4
    a0bc:	add	r0, pc, r0
    a0c0:	bl	1c9c <open64@plt>
    a0c4:	subs	r4, r0, #0
    a0c8:	blt	948c <ippGetInteger@plt+0x74c0>
    a0cc:	ldr	r3, [sp, #44]	; 0x2c
    a0d0:	sub	r6, r3, #16
    a0d4:	mov	r1, r6
    a0d8:	bl	1ef4 <tcgetattr@plt>
    a0dc:	cmp	r0, #0
    a0e0:	bne	bda4 <ippGetInteger@plt+0x9dd8>
    a0e4:	sub	lr, sl, #3088	; 0xc10
    a0e8:	sub	ip, sl, #3024	; 0xbd0
    a0ec:	ldm	lr!, {r0, r1, r2, r3}
    a0f0:	sub	ip, ip, #4
    a0f4:	stmia	ip!, {r0, r1, r2, r3}
    a0f8:	ldm	lr!, {r0, r1, r2, r3}
    a0fc:	ldr	r7, [sl, #-3016]	; 0xfffff438
    a100:	stmia	ip!, {r0, r1, r2, r3}
    a104:	bic	r7, r7, #27
    a108:	ldm	lr!, {r0, r1, r2, r3}
    a10c:	str	r7, [sl, #-3016]	; 0xfffff438
    a110:	stmia	ip!, {r0, r1, r2, r3}
    a114:	ldm	lr, {r0, r1, r2}
    a118:	stm	ip, {r0, r1, r2}
    a11c:	add	r2, sp, #292	; 0x124
    a120:	mov	r1, #2
    a124:	mov	r0, r4
    a128:	bl	1cf0 <tcsetattr@plt>
    a12c:	cmp	r0, #0
    a130:	bne	bda4 <ippGetInteger@plt+0x9dd8>
    a134:	bl	1e94 <cupsFileStdout@plt>
    a138:	ldr	r1, [pc, #3220]	; add4 <ippGetInteger@plt+0x8e08>
    a13c:	mov	r2, fp
    a140:	add	r1, pc, r1
    a144:	bl	1dc8 <cupsFilePrintf@plt>
    a148:	ldr	r3, [sp, #44]	; 0x2c
    a14c:	mov	r2, #1
    a150:	sub	r1, r3, #24
    a154:	mov	r0, r4
    a158:	bl	1c18 <read@plt>
    a15c:	mov	r2, r6
    a160:	mov	r1, #2
    a164:	mov	r0, r4
    a168:	bl	1cf0 <tcsetattr@plt>
    a16c:	mov	r0, r4
    a170:	bl	1be8 <close@plt>
    a174:	bl	1e94 <cupsFileStdout@plt>
    a178:	ldr	r1, [pc, #3160]	; add8 <ippGetInteger@plt+0x8e0c>
    a17c:	add	r1, pc, r1
    a180:	bl	1ee8 <cupsFilePuts@plt>
    a184:	b	948c <ippGetInteger@plt+0x74c0>
    a188:	ldr	r3, [pc, #3148]	; addc <ippGetInteger@plt+0x8e10>
    a18c:	add	r3, pc, r3
    a190:	ldr	r3, [r3, #20]
    a194:	cmp	r3, #0
    a198:	beq	bd38 <ippGetInteger@plt+0x9d6c>
    a19c:	bl	1e94 <cupsFileStdout@plt>
    a1a0:	ldr	r3, [sp, #32]
    a1a4:	cmp	r3, r0
    a1a8:	beq	938c <ippGetInteger@plt+0x73c0>
    a1ac:	bl	1e94 <cupsFileStdout@plt>
    a1b0:	ldr	r1, [pc, #3112]	; ade0 <ippGetInteger@plt+0x8e14>
    a1b4:	ldr	r2, [sp, #76]	; 0x4c
    a1b8:	add	r1, pc, r1
    a1bc:	bl	1dc8 <cupsFilePrintf@plt>
    a1c0:	b	938c <ippGetInteger@plt+0x73c0>
    a1c4:	ldr	r5, [sp, #32]
    a1c8:	ldr	r1, [pc, #3092]	; ade4 <ippGetInteger@plt+0x8e18>
    a1cc:	mov	r0, r5
    a1d0:	add	r1, pc, r1
    a1d4:	bl	1ee8 <cupsFilePuts@plt>
    a1d8:	ldr	r4, [pc, #3080]	; ade8 <ippGetInteger@plt+0x8e1c>
    a1dc:	ldr	r1, [pc, #3080]	; adec <ippGetInteger@plt+0x8e20>
    a1e0:	add	r4, pc, r4
    a1e4:	add	r1, pc, r1
    a1e8:	mov	r0, r5
    a1ec:	bl	1ee8 <cupsFilePuts@plt>
    a1f0:	mov	r1, r4
    a1f4:	ldr	r2, [sp, #148]	; 0x94
    a1f8:	mov	r0, r5
    a1fc:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    a200:	ldr	r3, [sp, #80]	; 0x50
    a204:	ldrb	r3, [r3, #-3076]	; 0xfffff3fc
    a208:	cmp	r3, #0
    a20c:	bne	c53c <ippGetInteger@plt+0xa570>
    a210:	ldr	r3, [sp, #80]	; 0x50
    a214:	ldrb	r3, [r3, #-2052]	; 0xfffff7fc
    a218:	cmp	r3, #0
    a21c:	bne	c50c <ippGetInteger@plt+0xa540>
    a220:	ldr	r4, [sp, #32]
    a224:	ldr	r1, [pc, #3012]	; adf0 <ippGetInteger@plt+0x8e24>
    a228:	mov	r0, r4
    a22c:	add	r1, pc, r1
    a230:	bl	1ee8 <cupsFilePuts@plt>
    a234:	ldr	r1, [pc, #3000]	; adf4 <ippGetInteger@plt+0x8e28>
    a238:	ldrd	r2, [sp, #172]	; 0xac
    a23c:	add	r1, pc, r1
    a240:	mov	r0, r4
    a244:	bl	1dc8 <cupsFilePrintf@plt>
    a248:	ldr	r1, [pc, #2984]	; adf8 <ippGetInteger@plt+0x8e2c>
    a24c:	mov	r0, r4
    a250:	add	r1, pc, r1
    a254:	bl	1ee8 <cupsFilePuts@plt>
    a258:	ldr	r0, [sp, #116]	; 0x74
    a25c:	bl	1c00 <ippOpString@plt>
    a260:	ldr	r1, [pc, #2964]	; adfc <ippGetInteger@plt+0x8e30>
    a264:	add	r1, pc, r1
    a268:	mov	r2, r0
    a26c:	mov	r0, r4
    a270:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    a274:	ldr	r1, [pc, #2948]	; ae00 <ippGetInteger@plt+0x8e34>
    a278:	mov	r0, r4
    a27c:	add	r1, pc, r1
    a280:	bl	1ee8 <cupsFilePuts@plt>
    a284:	ldr	r1, [pc, #2936]	; ae04 <ippGetInteger@plt+0x8e38>
    a288:	ldr	r2, [sp, #96]	; 0x60
    a28c:	add	r1, pc, r1
    a290:	mov	r0, r4
    a294:	bl	1dc8 <cupsFilePrintf@plt>
    a298:	ldr	r1, [pc, #2920]	; ae08 <ippGetInteger@plt+0x8e3c>
    a29c:	mov	r0, r4
    a2a0:	add	r1, pc, r1
    a2a4:	bl	1ee8 <cupsFilePuts@plt>
    a2a8:	ldr	r1, [pc, #2908]	; ae0c <ippGetInteger@plt+0x8e40>
    a2ac:	mov	r0, r4
    a2b0:	add	r1, pc, r1
    a2b4:	bl	1ee8 <cupsFilePuts@plt>
    a2b8:	ldr	r3, [sp, #84]	; 0x54
    a2bc:	ldr	r3, [r3, #16]
    a2c0:	cmp	r3, #0
    a2c4:	bne	c498 <ippGetInteger@plt+0xa4cc>
    a2c8:	ldr	r1, [pc, #2880]	; ae10 <ippGetInteger@plt+0x8e44>
    a2cc:	ldr	r0, [sp, #32]
    a2d0:	add	r1, pc, r1
    a2d4:	bl	1ee8 <cupsFilePuts@plt>
    a2d8:	ldr	r3, [pc, #2868]	; ae14 <ippGetInteger@plt+0x8e48>
    a2dc:	add	r3, pc, r3
    a2e0:	ldr	r3, [r3]
    a2e4:	cmp	r3, #1
    a2e8:	beq	a304 <ippGetInteger@plt+0x8338>
    a2ec:	cmp	r3, #2
    a2f0:	bne	9e08 <ippGetInteger@plt+0x7e3c>
    a2f4:	bl	1e94 <cupsFileStdout@plt>
    a2f8:	ldr	r3, [sp, #32]
    a2fc:	cmp	r3, r0
    a300:	beq	9e08 <ippGetInteger@plt+0x7e3c>
    a304:	ldr	r3, [pc, #2828]	; ae18 <ippGetInteger@plt+0x8e4c>
    a308:	add	r3, pc, r3
    a30c:	ldr	r3, [r3, #292]	; 0x124
    a310:	cmp	r3, #0
    a314:	bne	c590 <ippGetInteger@plt+0xa5c4>
    a318:	bl	1e94 <cupsFileStdout@plt>
    a31c:	ldr	r1, [pc, #2808]	; ae1c <ippGetInteger@plt+0x8e50>
    a320:	ldr	r2, [sp, #148]	; 0x94
    a324:	add	r1, pc, r1
    a328:	bl	1dc8 <cupsFilePrintf@plt>
    a32c:	b	9e08 <ippGetInteger@plt+0x7e3c>
    a330:	add	r6, sp, #22528	; 0x5800
    a334:	add	r6, r6, #244	; 0xf4
    a338:	mov	r1, r6
    a33c:	mov	r3, r8
    a340:	mov	r2, #1024	; 0x400
    a344:	mov	r0, r5
    a348:	bl	4664 <ippGetInteger@plt+0x2698>
    a34c:	cmp	r0, #0
    a350:	beq	ced8 <ippGetInteger@plt+0xaf0c>
    a354:	bl	1d8c <__ctype_b_loc@plt>
    a358:	ldr	r3, [sp, #120]	; 0x78
    a35c:	ldrb	r3, [r3, #-1028]	; 0xfffffbfc
    a360:	lsl	r3, r3, #1
    a364:	ldr	r2, [r0]
    a368:	ldrh	r3, [r2, r3]
    a36c:	tst	r3, #2048	; 0x800
    a370:	beq	bdb0 <ippGetInteger@plt+0x9de4>
    a374:	mov	r1, r4
    a378:	mov	r0, r6
    a37c:	mov	r2, #10
    a380:	bl	1a14 <strtol@plt>
    a384:	str	r0, [sp, #96]	; 0x60
    a388:	b	948c <ippGetInteger@plt+0x74c0>
    a38c:	ldr	r1, [sp, #64]	; 0x40
    a390:	add	r2, sp, #2288	; 0x8f0
    a394:	ldr	ip, [pc, #2692]	; ae20 <ippGetInteger@plt+0x8e54>
    a398:	add	r2, r2, #8
    a39c:	add	r1, r1, r1, lsl #3
    a3a0:	sub	r0, r2, #4
    a3a4:	add	ip, pc, ip
    a3a8:	str	r2, [sp, #192]	; 0xc0
    a3ac:	ldr	r2, [pc, #2672]	; ae24 <ippGetInteger@plt+0x8e58>
    a3b0:	add	r1, r0, r1, lsl #2
    a3b4:	str	r0, [sp, #168]	; 0xa8
    a3b8:	str	ip, [sp, #196]	; 0xc4
    a3bc:	ldr	r0, [sp, #132]	; 0x84
    a3c0:	ldr	ip, [pc, #2656]	; ae28 <ippGetInteger@plt+0x8e5c>
    a3c4:	ldr	fp, [sp, #32]
    a3c8:	add	r2, pc, r2
    a3cc:	add	ip, pc, ip
    a3d0:	str	ip, [sp, #144]	; 0x90
    a3d4:	str	r1, [sp, #160]	; 0xa0
    a3d8:	str	r3, [r2, #4]
    a3dc:	str	r3, [sp, #116]	; 0x74
    a3e0:	str	r9, [sp, #152]	; 0x98
    a3e4:	cmp	r0, #0
    a3e8:	bne	b5d8 <ippGetInteger@plt+0x960c>
    a3ec:	ldr	r3, [sp, #140]	; 0x8c
    a3f0:	cmp	r3, #1
    a3f4:	moveq	r7, #0
    a3f8:	beq	a418 <ippGetInteger@plt+0x844c>
    a3fc:	cmp	r3, #0
    a400:	bne	b4a8 <ippGetInteger@plt+0x94dc>
    a404:	ldr	r3, [sp, #80]	; 0x50
    a408:	ldrb	r3, [r3, #-1028]	; 0xfffffbfc
    a40c:	cmp	r3, #0
    a410:	beq	b4a8 <ippGetInteger@plt+0x94dc>
    a414:	ldr	r7, [sp, #140]	; 0x8c
    a418:	ldr	r8, [pc, #2572]	; ae2c <ippGetInteger@plt+0x8e60>
    a41c:	ldr	r5, [sp, #48]	; 0x30
    a420:	mov	r6, #200	; 0xc8
    a424:	add	r8, pc, r8
    a428:	ldr	r4, [r8]
    a42c:	cmp	r4, #0
    a430:	bne	beec <ippGetInteger@plt+0x9f20>
    a434:	mov	r3, r7
    a438:	ldr	r2, [sp, #128]	; 0x80
    a43c:	ldr	r1, [sp, #84]	; 0x54
    a440:	mov	r0, r5
    a444:	bl	1c0c <cupsSendRequest@plt>
    a448:	ldr	r3, [sp, #120]	; 0x78
    a44c:	ldrb	r2, [r3, #-2708]	; 0xfffff56c
    a450:	cmp	r2, #0
    a454:	mov	r6, r0
    a458:	bne	abd4 <ippGetInteger@plt+0x8c08>
    a45c:	ldr	r3, [sp, #144]	; 0x90
    a460:	ldr	r2, [r3]
    a464:	cmp	r6, #100	; 0x64
    a468:	cmpeq	r2, #0
    a46c:	beq	b510 <ippGetInteger@plt+0x9544>
    a470:	cmp	r2, #0
    a474:	bne	aabc <ippGetInteger@plt+0x8af0>
    a478:	cmn	r6, #1
    a47c:	bne	ab98 <ippGetInteger@plt+0x8bcc>
    a480:	mov	r9, #0
    a484:	ldr	r3, [r5, #8]
    a488:	cmp	r3, #110	; 0x6e
    a48c:	cmpne	r3, #22
    a490:	bne	badc <ippGetInteger@plt+0x9b10>
    a494:	ldr	r3, [pc, #2452]	; ae30 <ippGetInteger@plt+0x8e64>
    a498:	str	r4, [sp, #132]	; 0x84
    a49c:	add	r3, pc, r3
    a4a0:	ldr	r3, [r3]
    a4a4:	cmp	r3, #0
    a4a8:	bne	a4bc <ippGetInteger@plt+0x84f0>
    a4ac:	mov	r2, #0
    a4b0:	ldr	r1, [pc, #2724]	; af5c <ippGetInteger@plt+0x8f90>
    a4b4:	ldr	r0, [sp, #48]	; 0x30
    a4b8:	bl	1fc0 <httpReconnect2@plt>
    a4bc:	ldr	r4, [sp, #52]	; 0x34
    a4c0:	mov	r0, r4
    a4c4:	bl	1a5c <cupsArrayClear@plt>
    a4c8:	ldr	r3, [sp, #48]	; 0x30
    a4cc:	ldr	r3, [r3, #24]
    a4d0:	cmp	r3, #101	; 0x65
    a4d4:	beq	a500 <ippGetInteger@plt+0x8534>
    a4d8:	ldr	r2, [pc, #2388]	; ae34 <ippGetInteger@plt+0x8e68>
    a4dc:	mov	r0, r4
    a4e0:	umull	r1, r2, r2, r3
    a4e4:	ldr	r1, [pc, #2380]	; ae38 <ippGetInteger@plt+0x8e6c>
    a4e8:	lsr	r2, r2, #5
    a4ec:	add	r1, pc, r1
    a4f0:	add	ip, r2, r2, lsl #2
    a4f4:	add	ip, ip, ip, lsl #2
    a4f8:	sub	r3, r3, ip, lsl #2
    a4fc:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a500:	ldr	r3, [pc, #2356]	; ae3c <ippGetInteger@plt+0x8e70>
    a504:	add	r3, pc, r3
    a508:	ldr	r3, [r3, #300]	; 0x12c
    a50c:	cmp	r3, #0
    a510:	bne	b714 <ippGetInteger@plt+0x9748>
    a514:	cmp	r9, #0
    a518:	beq	b6e0 <ippGetInteger@plt+0x9714>
    a51c:	ldr	r4, [pc, #2332]	; ae40 <ippGetInteger@plt+0x8e74>
    a520:	mov	r2, #33	; 0x21
    a524:	add	r4, pc, r4
    a528:	mov	r1, r4
    a52c:	mov	r0, r9
    a530:	bl	1cd8 <ippFindAttribute@plt>
    a534:	cmp	r0, #0
    a538:	str	r0, [sl, #-3108]	; 0xfffff3dc
    a53c:	beq	a590 <ippGetInteger@plt+0x85c4>
    a540:	ldr	r2, [pc, #2300]	; ae44 <ippGetInteger@plt+0x8e78>
    a544:	ldr	r1, [r0, #20]
    a548:	add	r5, sp, #22528	; 0x5800
    a54c:	mov	r3, #1024	; 0x400
    a550:	add	r2, pc, r2
    a554:	add	r5, r5, #244	; 0xf4
    a558:	str	r1, [sp, #4]
    a55c:	str	r2, [sp]
    a560:	mov	r1, r3
    a564:	mov	r2, #1
    a568:	mov	r0, r5
    a56c:	bl	1e28 <__snprintf_chk@plt>
    a570:	ldr	r2, [sp, #68]	; 0x44
    a574:	ldr	r1, [sp, #36]	; 0x24
    a578:	str	r5, [sp]
    a57c:	mov	r3, r4
    a580:	add	r2, r2, #12
    a584:	add	r1, r1, #4
    a588:	mov	r0, fp
    a58c:	bl	6520 <ippGetInteger@plt+0x4554>
    a590:	ldr	r4, [pc, #2224]	; ae48 <ippGetInteger@plt+0x8e7c>
    a594:	mov	r2, #69	; 0x45
    a598:	add	r4, pc, r4
    a59c:	mov	r1, r4
    a5a0:	mov	r0, r9
    a5a4:	bl	1cd8 <ippFindAttribute@plt>
    a5a8:	cmp	r0, #0
    a5ac:	str	r0, [sl, #-3108]	; 0xfffff3dc
    a5b0:	beq	a5d8 <ippGetInteger@plt+0x860c>
    a5b4:	ldr	r2, [r0, #24]
    a5b8:	ldr	r1, [sp, #36]	; 0x24
    a5bc:	str	r2, [sp]
    a5c0:	ldr	r2, [sp, #68]	; 0x44
    a5c4:	mov	r3, r4
    a5c8:	add	r2, r2, #12
    a5cc:	add	r1, r1, #4
    a5d0:	mov	r0, fp
    a5d4:	bl	6520 <ippGetInteger@plt+0x4554>
    a5d8:	ldr	r4, [pc, #2156]	; ae4c <ippGetInteger@plt+0x8e80>
    a5dc:	mov	r2, #33	; 0x21
    a5e0:	add	r4, pc, r4
    a5e4:	mov	r1, r4
    a5e8:	mov	r0, r9
    a5ec:	bl	1cd8 <ippFindAttribute@plt>
    a5f0:	cmp	r0, #0
    a5f4:	str	r0, [sl, #-3108]	; 0xfffff3dc
    a5f8:	beq	a64c <ippGetInteger@plt+0x8680>
    a5fc:	ldr	r2, [pc, #2124]	; ae50 <ippGetInteger@plt+0x8e84>
    a600:	ldr	r1, [r0, #20]
    a604:	add	r5, sp, #22528	; 0x5800
    a608:	mov	r3, #1024	; 0x400
    a60c:	add	r2, pc, r2
    a610:	add	r5, r5, #244	; 0xf4
    a614:	str	r1, [sp, #4]
    a618:	str	r2, [sp]
    a61c:	mov	r1, r3
    a620:	mov	r2, #1
    a624:	mov	r0, r5
    a628:	bl	1e28 <__snprintf_chk@plt>
    a62c:	ldr	r2, [sp, #68]	; 0x44
    a630:	ldr	r1, [sp, #36]	; 0x24
    a634:	str	r5, [sp]
    a638:	mov	r3, r4
    a63c:	add	r2, r2, #12
    a640:	add	r1, r1, #4
    a644:	mov	r0, fp
    a648:	bl	6520 <ippGetInteger@plt+0x4554>
    a64c:	ldr	r3, [r9]
    a650:	cmp	r3, #3
    a654:	beq	a668 <ippGetInteger@plt+0x869c>
    a658:	ldr	r1, [pc, #2036]	; ae54 <ippGetInteger@plt+0x8e88>
    a65c:	ldr	r0, [sp, #52]	; 0x34
    a660:	add	r1, pc, r1
    a664:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a668:	ldr	r3, [sp, #136]	; 0x88
    a66c:	cmp	r3, #0
    a670:	beq	a6b4 <ippGetInteger@plt+0x86e8>
    a674:	ldrb	r2, [r9, #4]
    a678:	ldr	r1, [sp, #172]	; 0xac
    a67c:	ldrb	r3, [r9, #5]
    a680:	cmp	r1, r2
    a684:	bne	a694 <ippGetInteger@plt+0x86c8>
    a688:	ldr	r1, [sp, #176]	; 0xb0
    a68c:	cmp	r1, r3
    a690:	beq	a6b4 <ippGetInteger@plt+0x86e8>
    a694:	ldr	r1, [sp, #176]	; 0xb0
    a698:	ldr	r0, [sp, #52]	; 0x34
    a69c:	str	r1, [sp, #4]
    a6a0:	ldr	r1, [sp, #172]	; 0xac
    a6a4:	str	r1, [sp]
    a6a8:	ldr	r1, [pc, #1960]	; ae58 <ippGetInteger@plt+0x8e8c>
    a6ac:	add	r1, pc, r1
    a6b0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a6b4:	ldr	r2, [r9, #12]
    a6b8:	ldr	r3, [sp, #96]	; 0x60
    a6bc:	cmp	r2, r3
    a6c0:	beq	a6d4 <ippGetInteger@plt+0x8708>
    a6c4:	ldr	r1, [pc, #1936]	; ae5c <ippGetInteger@plt+0x8e90>
    a6c8:	ldr	r0, [sp, #52]	; 0x34
    a6cc:	add	r1, pc, r1
    a6d0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a6d4:	ldr	r3, [r9, #16]
    a6d8:	cmp	r3, #0
    a6dc:	str	r3, [sl, #-3108]	; 0xfffff3dc
    a6e0:	beq	bafc <ippGetInteger@plt+0x9b30>
    a6e4:	ldr	r4, [r3, #12]
    a6e8:	ldr	r5, [r3, #8]
    a6ec:	cmp	r4, #0
    a6f0:	ldr	r2, [r3, #16]
    a6f4:	beq	b8ac <ippGetInteger@plt+0x98e0>
    a6f8:	cmp	r5, #71	; 0x47
    a6fc:	beq	ba48 <ippGetInteger@plt+0x9a7c>
    a700:	cmp	r2, #1
    a704:	ble	b84c <ippGetInteger@plt+0x9880>
    a708:	ldr	r6, [pc, #1872]	; ae60 <ippGetInteger@plt+0x8e94>
    a70c:	add	r6, pc, r6
    a710:	mov	r0, r5
    a714:	bl	1b64 <ippTagString@plt>
    a718:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a71c:	mov	r5, r0
    a720:	ldr	r0, [r3, #4]
    a724:	bl	1b64 <ippTagString@plt>
    a728:	ldr	r1, [pc, #1844]	; ae64 <ippGetInteger@plt+0x8e98>
    a72c:	str	r5, [sp]
    a730:	mov	r3, r6
    a734:	mov	r2, r4
    a738:	add	r1, pc, r1
    a73c:	str	r0, [sp, #4]
    a740:	ldr	r0, [sp, #52]	; 0x34
    a744:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a748:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a74c:	ldr	r3, [r3]
    a750:	cmp	r3, #0
    a754:	str	r3, [sl, #-3108]	; 0xfffff3dc
    a758:	beq	bcb4 <ippGetInteger@plt+0x9ce8>
    a75c:	ldr	r4, [r3, #12]
    a760:	ldr	r5, [r3, #8]
    a764:	cmp	r4, #0
    a768:	ldr	r2, [r3, #16]
    a76c:	beq	ba1c <ippGetInteger@plt+0x9a50>
    a770:	cmp	r5, #72	; 0x48
    a774:	beq	bb10 <ippGetInteger@plt+0x9b44>
    a778:	cmp	r2, #1
    a77c:	ble	b8a0 <ippGetInteger@plt+0x98d4>
    a780:	ldr	r6, [pc, #1760]	; ae68 <ippGetInteger@plt+0x8e9c>
    a784:	add	r6, pc, r6
    a788:	mov	r0, r5
    a78c:	bl	1b64 <ippTagString@plt>
    a790:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a794:	mov	r5, r0
    a798:	ldr	r0, [r3, #4]
    a79c:	bl	1b64 <ippTagString@plt>
    a7a0:	ldr	r1, [pc, #1732]	; ae6c <ippGetInteger@plt+0x8ea0>
    a7a4:	str	r5, [sp]
    a7a8:	mov	r3, r6
    a7ac:	mov	r2, r4
    a7b0:	add	r1, pc, r1
    a7b4:	str	r0, [sp, #4]
    a7b8:	ldr	r0, [sp, #52]	; 0x34
    a7bc:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a7c0:	ldr	r1, [pc, #1704]	; ae70 <ippGetInteger@plt+0x8ea4>
    a7c4:	mov	r2, #0
    a7c8:	add	r1, pc, r1
    a7cc:	mov	r0, r9
    a7d0:	bl	1cd8 <ippFindAttribute@plt>
    a7d4:	cmp	r0, #0
    a7d8:	str	r0, [sl, #-3108]	; 0xfffff3dc
    a7dc:	beq	a864 <ippGetInteger@plt+0x8898>
    a7e0:	ldr	r3, [r0, #8]
    a7e4:	cmp	r3, #65	; 0x41
    a7e8:	beq	a80c <ippGetInteger@plt+0x8840>
    a7ec:	mov	r0, r3
    a7f0:	bl	1b64 <ippTagString@plt>
    a7f4:	ldr	r1, [pc, #1656]	; ae74 <ippGetInteger@plt+0x8ea8>
    a7f8:	add	r1, pc, r1
    a7fc:	mov	r2, r0
    a800:	ldr	r0, [sp, #52]	; 0x34
    a804:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a808:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a80c:	ldr	r3, [r0, #4]
    a810:	cmp	r3, #1
    a814:	beq	a838 <ippGetInteger@plt+0x886c>
    a818:	mov	r0, r3
    a81c:	bl	1b64 <ippTagString@plt>
    a820:	ldr	r1, [pc, #1616]	; ae78 <ippGetInteger@plt+0x8eac>
    a824:	add	r1, pc, r1
    a828:	mov	r2, r0
    a82c:	ldr	r0, [sp, #52]	; 0x34
    a830:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a834:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a838:	ldr	r2, [r0, #16]
    a83c:	cmp	r2, #1
    a840:	beq	a858 <ippGetInteger@plt+0x888c>
    a844:	ldr	r1, [pc, #1584]	; ae7c <ippGetInteger@plt+0x8eb0>
    a848:	ldr	r0, [sp, #52]	; 0x34
    a84c:	add	r1, pc, r1
    a850:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a854:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a858:	ldr	r3, [r0, #8]
    a85c:	cmp	r3, #65	; 0x41
    a860:	beq	b9cc <ippGetInteger@plt+0x9a00>
    a864:	ldr	r1, [pc, #1556]	; ae80 <ippGetInteger@plt+0x8eb4>
    a868:	mov	r2, #0
    a86c:	add	r1, pc, r1
    a870:	mov	r0, r9
    a874:	bl	1cd8 <ippFindAttribute@plt>
    a878:	cmp	r0, #0
    a87c:	str	r0, [sl, #-3108]	; 0xfffff3dc
    a880:	beq	a908 <ippGetInteger@plt+0x893c>
    a884:	ldr	r3, [r0, #8]
    a888:	cmp	r3, #65	; 0x41
    a88c:	beq	a8b0 <ippGetInteger@plt+0x88e4>
    a890:	mov	r0, r3
    a894:	bl	1b64 <ippTagString@plt>
    a898:	ldr	r1, [pc, #1508]	; ae84 <ippGetInteger@plt+0x8eb8>
    a89c:	add	r1, pc, r1
    a8a0:	mov	r2, r0
    a8a4:	ldr	r0, [sp, #52]	; 0x34
    a8a8:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a8ac:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a8b0:	ldr	r3, [r0, #4]
    a8b4:	cmp	r3, #1
    a8b8:	beq	a8dc <ippGetInteger@plt+0x8910>
    a8bc:	mov	r0, r3
    a8c0:	bl	1b64 <ippTagString@plt>
    a8c4:	ldr	r1, [pc, #1468]	; ae88 <ippGetInteger@plt+0x8ebc>
    a8c8:	add	r1, pc, r1
    a8cc:	mov	r2, r0
    a8d0:	ldr	r0, [sp, #52]	; 0x34
    a8d4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a8d8:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a8dc:	ldr	r2, [r0, #16]
    a8e0:	cmp	r2, #1
    a8e4:	beq	a8fc <ippGetInteger@plt+0x8930>
    a8e8:	ldr	r1, [pc, #1436]	; ae8c <ippGetInteger@plt+0x8ec0>
    a8ec:	ldr	r0, [sp, #52]	; 0x34
    a8f0:	add	r1, pc, r1
    a8f4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    a8f8:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    a8fc:	ldr	r3, [r0, #8]
    a900:	cmp	r3, #65	; 0x41
    a904:	beq	b9f4 <ippGetInteger@plt+0x9a28>
    a908:	ldr	r3, [pc, #1408]	; ae90 <ippGetInteger@plt+0x8ec4>
    a90c:	ldr	r2, [sp, #72]	; 0x48
    a910:	mov	r1, #0
    a914:	ldr	r0, [r2, r3]
    a918:	bl	1a20 <cupsArrayNew@plt>
    a91c:	ldr	r3, [r9, #16]
    a920:	cmp	r3, #0
    a924:	str	r3, [sl, #-3108]	; 0xfffff3dc
    a928:	streq	r3, [sl, #-3112]	; 0xfffff3d8
    a92c:	mov	r4, r0
    a930:	beq	abf0 <ippGetInteger@plt+0x8c24>
    a934:	ldr	r3, [r3, #4]
    a938:	ldr	r6, [pc, #1364]	; ae94 <ippGetInteger@plt+0x8ec8>
    a93c:	ldr	r5, [pc, #1364]	; ae98 <ippGetInteger@plt+0x8ecc>
    a940:	ldr	r7, [pc, #1364]	; ae9c <ippGetInteger@plt+0x8ed0>
    a944:	add	r6, pc, r6
    a948:	add	r5, pc, r5
    a94c:	add	r7, pc, r7
    a950:	mov	r2, r3
    a954:	str	r3, [sl, #-3112]	; 0xfffff3d8
    a958:	str	r9, [sp, #100]	; 0x64
    a95c:	ldr	r8, [sp, #52]	; 0x34
    a960:	b	a9cc <ippGetInteger@plt+0x8a00>
    a964:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    a968:	mov	r1, r8
    a96c:	mov	r0, fp
    a970:	bl	4c30 <ippGetInteger@plt+0x2c64>
    a974:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a978:	ldr	r1, [r3, #12]
    a97c:	cmp	r1, #0
    a980:	beq	a9b4 <ippGetInteger@plt+0x89e8>
    a984:	mov	r0, r4
    a988:	bl	1b94 <cupsArrayFind@plt>
    a98c:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a990:	cmp	r0, #0
    a994:	beq	aab4 <ippGetInteger@plt+0x8ae8>
    a998:	ldr	r2, [r5]
    a99c:	ldr	r1, [r3, #12]
    a9a0:	cmp	r2, #2
    a9a4:	bls	aa8c <ippGetInteger@plt+0x8ac0>
    a9a8:	mov	r0, r4
    a9ac:	bl	19d8 <cupsArrayAdd@plt>
    a9b0:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    a9b4:	ldr	r3, [r3]
    a9b8:	cmp	r3, #0
    a9bc:	str	r3, [sl, #-3108]	; 0xfffff3dc
    a9c0:	beq	abec <ippGetInteger@plt+0x8c20>
    a9c4:	ldr	r3, [r3, #4]
    a9c8:	ldr	r2, [sl, #-3112]	; 0xfffff3d8
    a9cc:	cmp	r2, r3
    a9d0:	beq	a964 <ippGetInteger@plt+0x8998>
    a9d4:	mov	r0, r4
    a9d8:	bl	1a5c <cupsArrayClear@plt>
    a9dc:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    a9e0:	ldr	r0, [r2, #4]
    a9e4:	cmp	r0, #6
    a9e8:	addls	pc, pc, r0, lsl #2
    a9ec:	b	aa7c <ippGetInteger@plt+0x8ab0>
    a9f0:	b	a968 <ippGetInteger@plt+0x899c>
    a9f4:	b	aa18 <ippGetInteger@plt+0x8a4c>
    a9f8:	b	aa68 <ippGetInteger@plt+0x8a9c>
    a9fc:	b	aa7c <ippGetInteger@plt+0x8ab0>
    aa00:	b	aa68 <ippGetInteger@plt+0x8a9c>
    aa04:	b	aa0c <ippGetInteger@plt+0x8a40>
    aa08:	b	aa54 <ippGetInteger@plt+0x8a88>
    aa0c:	ldr	r3, [sl, #-3112]	; 0xfffff3d8
    aa10:	cmp	r3, #1
    aa14:	beq	aa4c <ippGetInteger@plt+0x8a80>
    aa18:	bl	1b64 <ippTagString@plt>
    aa1c:	mov	r9, r0
    aa20:	ldr	r0, [sl, #-3112]	; 0xfffff3d8
    aa24:	bl	1b64 <ippTagString@plt>
    aa28:	mov	r2, r9
    aa2c:	mov	r1, r6
    aa30:	mov	r3, r0
    aa34:	mov	r0, r8
    aa38:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    aa3c:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    aa40:	ldr	r0, [r2, #4]
    aa44:	cmp	r0, #0
    aa48:	beq	a968 <ippGetInteger@plt+0x899c>
    aa4c:	str	r0, [sl, #-3112]	; 0xfffff3d8
    aa50:	b	a968 <ippGetInteger@plt+0x899c>
    aa54:	ldr	r3, [sl, #-3112]	; 0xfffff3d8
    aa58:	cmp	r3, #9
    aa5c:	cmpne	r3, #6
    aa60:	ble	aa4c <ippGetInteger@plt+0x8a80>
    aa64:	b	aa18 <ippGetInteger@plt+0x8a4c>
    aa68:	ldr	r3, [sl, #-3112]	; 0xfffff3d8
    aa6c:	bic	r3, r3, #4
    aa70:	cmp	r3, #1
    aa74:	bne	aa18 <ippGetInteger@plt+0x8a4c>
    aa78:	b	aa4c <ippGetInteger@plt+0x8a80>
    aa7c:	ldr	r3, [sl, #-3112]	; 0xfffff3d8
    aa80:	cmp	r0, r3
    aa84:	bge	aa4c <ippGetInteger@plt+0x8a80>
    aa88:	b	aa18 <ippGetInteger@plt+0x8a4c>
    aa8c:	ldr	r0, [sl, #-3112]	; 0xfffff3d8
    aa90:	str	r1, [sp, #88]	; 0x58
    aa94:	bl	1b64 <ippTagString@plt>
    aa98:	ldr	r1, [sp, #88]	; 0x58
    aa9c:	mov	r2, r1
    aaa0:	mov	r1, r7
    aaa4:	mov	r3, r0
    aaa8:	mov	r0, r8
    aaac:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    aab0:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    aab4:	ldr	r1, [r3, #12]
    aab8:	b	a9a8 <ippGetInteger@plt+0x89dc>
    aabc:	mov	r9, #0
    aac0:	cmn	r6, #1
    aac4:	cmpne	r6, #1000	; 0x3e8
    aac8:	beq	cb74 <ippGetInteger@plt+0xaba8>
    aacc:	cmp	r6, #200	; 0xc8
    aad0:	bne	ab44 <ippGetInteger@plt+0x8b78>
    aad4:	cmp	r9, #0
    aad8:	beq	a428 <ippGetInteger@plt+0x845c>
    aadc:	str	r4, [sp, #132]	; 0x84
    aae0:	mov	r4, #1
    aae4:	ldr	r3, [pc, #948]	; aea0 <ippGetInteger@plt+0x8ed4>
    aae8:	add	r3, pc, r3
    aaec:	ldr	r3, [r3]
    aaf0:	cmp	r3, #0
    aaf4:	bne	cb50 <ippGetInteger@plt+0xab84>
    aaf8:	cmn	r6, #1
    aafc:	bne	cb48 <ippGetInteger@plt+0xab7c>
    ab00:	ldr	r3, [sp, #48]	; 0x30
    ab04:	ldr	r3, [r3, #8]
    ab08:	cmp	r3, #110	; 0x6e
    ab0c:	cmpne	r3, #22
    ab10:	movne	r3, #1
    ab14:	moveq	r3, #0
    ab18:	cmp	r3, #0
    ab1c:	beq	a4ac <ippGetInteger@plt+0x84e0>
    ab20:	mov	r2, #0
    ab24:	ldr	r1, [pc, #1072]	; af5c <ippGetInteger@plt+0x8f90>
    ab28:	ldr	r0, [sp, #48]	; 0x30
    ab2c:	bl	1fc0 <httpReconnect2@plt>
    ab30:	ldr	r3, [sp, #132]	; 0x84
    ab34:	cmp	r0, #0
    ab38:	moveq	r3, r4
    ab3c:	str	r3, [sp, #132]	; 0x84
    ab40:	b	a4bc <ippGetInteger@plt+0x84f0>
    ab44:	mov	r0, r5
    ab48:	bl	1e7c <httpFlush@plt>
    ab4c:	ldr	r3, [pc, #848]	; aea4 <ippGetInteger@plt+0x8ed8>
    ab50:	cmp	r6, r3
    ab54:	beq	aad4 <ippGetInteger@plt+0x8b08>
    ab58:	ldr	r3, [pc, #840]	; aea8 <ippGetInteger@plt+0x8edc>
    ab5c:	add	r3, pc, r3
    ab60:	ldr	r3, [r3]
    ab64:	cmp	r3, #0
    ab68:	beq	ab84 <ippGetInteger@plt+0x8bb8>
    ab6c:	mov	r3, #1
    ab70:	str	r3, [sp, #132]	; 0x84
    ab74:	cmn	r6, #1
    ab78:	beq	ba28 <ippGetInteger@plt+0x9a5c>
    ab7c:	cmp	r6, #200	; 0xc8
    ab80:	beq	a4bc <ippGetInteger@plt+0x84f0>
    ab84:	ldr	r0, [sp, #48]	; 0x30
    ab88:	bl	1e7c <httpFlush@plt>
    ab8c:	mov	r3, #0
    ab90:	str	r3, [sp, #132]	; 0x84
    ab94:	b	a4bc <ippGetInteger@plt+0x84f0>
    ab98:	ldr	r1, [sp, #128]	; 0x80
    ab9c:	mov	r0, r5
    aba0:	bl	1cfc <cupsGetResponse@plt>
    aba4:	mov	r9, r0
    aba8:	mov	r0, r5
    abac:	bl	1c54 <httpGetStatus@plt>
    abb0:	ldr	r2, [pc, #756]	; aeac <ippGetInteger@plt+0x8ee0>
    abb4:	add	r2, pc, r2
    abb8:	ldr	r2, [r2]
    abbc:	cmp	r2, #0
    abc0:	mov	r6, r0
    abc4:	bne	aac0 <ippGetInteger@plt+0x8af4>
    abc8:	cmn	r0, #1
    abcc:	bne	aac0 <ippGetInteger@plt+0x8af4>
    abd0:	b	a484 <ippGetInteger@plt+0x84b8>
    abd4:	ldr	r3, [sp, #40]	; 0x28
    abd8:	mov	r1, #4
    abdc:	sub	r2, r3, #660	; 0x294
    abe0:	mov	r0, r5
    abe4:	bl	1bdc <httpSetField@plt>
    abe8:	b	a45c <ippGetInteger@plt+0x8490>
    abec:	ldr	r9, [sp, #100]	; 0x64
    abf0:	mov	r0, r4
    abf4:	bl	1e70 <cupsArrayDelete@plt>
    abf8:	ldr	r3, [sp, #64]	; 0x40
    abfc:	cmp	r3, #0
    ac00:	ldr	r3, [sp, #116]	; 0x74
    ac04:	add	r3, r3, #1
    ac08:	str	r3, [sp, #116]	; 0x74
    ac0c:	beq	bd58 <ippGetInteger@plt+0x9d8c>
    ac10:	ldr	r7, [pc, #664]	; aeb0 <ippGetInteger@plt+0x8ee4>
    ac14:	ldr	r8, [pc, #664]	; aeb4 <ippGetInteger@plt+0x8ee8>
    ac18:	ldr	r3, [sp, #44]	; 0x2c
    ac1c:	add	r7, pc, r7
    ac20:	add	r8, pc, r8
    ac24:	mov	r6, #0
    ac28:	str	r7, [sp, #88]	; 0x58
    ac2c:	str	r8, [sp, #104]	; 0x68
    ac30:	str	r6, [sp, #100]	; 0x64
    ac34:	ldr	r4, [sp, #168]	; 0xa8
    ac38:	sub	r5, r3, #24
    ac3c:	ldr	r7, [sp, #36]	; 0x24
    ac40:	ldr	r8, [sp, #160]	; 0xa0
    ac44:	b	ac78 <ippGetInteger@plt+0x8cac>
    ac48:	mov	r1, r5
    ac4c:	ldr	r0, [r7, #1628]	; 0x65c
    ac50:	str	r3, [sl, #-3096]	; 0xfffff3e8
    ac54:	bl	1b94 <cupsArrayFind@plt>
    ac58:	cmp	r0, #0
    ac5c:	beq	acb4 <ippGetInteger@plt+0x8ce8>
    ac60:	ldr	r3, [r0, #4]
    ac64:	cmp	r3, #0
    ac68:	beq	acb4 <ippGetInteger@plt+0x8ce8>
    ac6c:	add	r4, r4, #36	; 0x24
    ac70:	cmp	r4, r8
    ac74:	beq	ad58 <ippGetInteger@plt+0x8d8c>
    ac78:	ldr	r3, [r4, #4]
    ac7c:	cmp	r3, #0
    ac80:	beq	aca8 <ippGetInteger@plt+0x8cdc>
    ac84:	mov	r1, r5
    ac88:	ldr	r0, [r7, #1628]	; 0x65c
    ac8c:	str	r3, [sl, #-3096]	; 0xfffff3e8
    ac90:	bl	1b94 <cupsArrayFind@plt>
    ac94:	cmp	r0, #0
    ac98:	beq	ac6c <ippGetInteger@plt+0x8ca0>
    ac9c:	ldr	r3, [r0, #4]
    aca0:	cmp	r3, #0
    aca4:	beq	ac6c <ippGetInteger@plt+0x8ca0>
    aca8:	ldr	r3, [r4, #8]
    acac:	cmp	r3, #0
    acb0:	bne	ac48 <ippGetInteger@plt+0x8c7c>
    acb4:	mov	r0, r9
    acb8:	bl	1f24 <ippGetStatusCode@plt>
    acbc:	ldr	r3, [r4]
    acc0:	cmp	r0, r3
    acc4:	beq	ad1c <ippGetInteger@plt+0x8d50>
    acc8:	ldr	r3, [r4, #32]
    accc:	cmp	r3, #0
    acd0:	beq	acec <ippGetInteger@plt+0x8d20>
    acd4:	ldr	r3, [r4, #24]
    acd8:	ldr	r1, [sp, #116]	; 0x74
    acdc:	ldr	r2, [sp, #100]	; 0x64
    ace0:	cmp	r3, r1
    ace4:	movgt	r2, #1
    ace8:	str	r2, [sp, #100]	; 0x64
    acec:	ldr	r3, [r4, #16]
    acf0:	cmp	r3, #0
    acf4:	beq	ac6c <ippGetInteger@plt+0x8ca0>
    acf8:	ldr	r2, [sp, #88]	; 0x58
    acfc:	str	r2, [sp]
    ad00:	ldr	r2, [sp, #68]	; 0x44
    ad04:	add	r1, r7, #4
    ad08:	add	r2, r2, #12
    ad0c:	mov	r0, fp
    ad10:	bl	6520 <ippGetInteger@plt+0x4554>
    ad14:	mov	r6, #1
    ad18:	b	ac6c <ippGetInteger@plt+0x8ca0>
    ad1c:	ldr	r3, [r4, #28]
    ad20:	cmp	r3, #0
    ad24:	beq	ad40 <ippGetInteger@plt+0x8d74>
    ad28:	ldr	r3, [r4, #24]
    ad2c:	ldr	r1, [sp, #116]	; 0x74
    ad30:	ldr	r2, [sp, #100]	; 0x64
    ad34:	cmp	r3, r1
    ad38:	movgt	r2, #1
    ad3c:	str	r2, [sp, #100]	; 0x64
    ad40:	ldr	r3, [r4, #12]
    ad44:	cmp	r3, #0
    ad48:	moveq	r6, #1
    ad4c:	beq	ac6c <ippGetInteger@plt+0x8ca0>
    ad50:	ldr	r2, [sp, #104]	; 0x68
    ad54:	b	acfc <ippGetInteger@plt+0x8d30>
    ad58:	cmp	r6, #1
    ad5c:	bne	b8b8 <ippGetInteger@plt+0x98ec>
    ad60:	ldr	r3, [sp, #152]	; 0x98
    ad64:	cmp	r3, #0
    ad68:	beq	b418 <ippGetInteger@plt+0x944c>
    ad6c:	ldr	r3, [pc, #324]	; aeb8 <ippGetInteger@plt+0x8eec>
    ad70:	add	r4, sp, #5888	; 0x1700
    ad74:	add	r3, pc, r3
    ad78:	str	r3, [sp, #180]	; 0xb4
    ad7c:	ldr	r3, [pc, #312]	; aebc <ippGetInteger@plt+0x8ef0>
    ad80:	add	r4, r4, #4
    ad84:	add	r3, pc, r3
    ad88:	str	r3, [sp, #184]	; 0xb8
    ad8c:	ldr	r3, [pc, #300]	; aec0 <ippGetInteger@plt+0x8ef4>
    ad90:	str	sl, [sp, #104]	; 0x68
    ad94:	add	r3, pc, r3
    ad98:	str	r3, [sp, #188]	; 0xbc
    ad9c:	ldr	r3, [sp, #152]	; 0x98
    ada0:	str	r3, [sp, #112]	; 0x70
    ada4:	b	afd8 <ippGetInteger@plt+0x900c>
    ada8:	ldrdeq	r9, [r1], -ip
    adac:	andeq	r9, r1, ip, asr #3
    adb0:	muleq	r0, r0, r7
    adb4:	andeq	r5, r0, r0, lsl #15
    adb8:	andeq	r5, r0, r0, ror r7
    adbc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    adc0:	andeq	r6, r0, ip, lsr #21
    adc4:			; <UNDEFINED> instruction: 0x00018fb8
    adc8:	andeq	r6, r0, r0, lsl #9
    adcc:	andeq	r6, r0, r8, ror #11
    add0:	strdeq	r6, [r0], -r4
    add4:	andeq	r6, r0, ip, ror sp
    add8:	andeq	r6, r0, ip, asr sp
    addc:	andeq	r8, r1, r0, lsl #29
    ade0:	andeq	r6, r0, r8, asr #23
    ade4:	andeq	r5, r0, r8, ror r6
    ade8:	andeq	r5, r0, r4, asr r7
    adec:	andeq	r7, r0, r0, lsl #16
    adf0:	strdeq	r7, [r0], -r4
    adf4:	strdeq	r7, [r0], -r8
    adf8:	strdeq	r7, [r0], -ip
    adfc:	ldrdeq	r5, [r0], -r0
    ae00:	andeq	r7, r0, r8, ror #15
    ae04:	andeq	r6, r0, r0, asr r5
    ae08:	ldrdeq	r7, [r0], -ip
    ae0c:	andeq	r5, r0, r0, lsr #12
    ae10:	andeq	r5, r0, r4, lsr #12
    ae14:	andeq	r8, r1, r4, lsr #26
    ae18:	andeq	r8, r1, r4, lsl #26
    ae1c:	andeq	r7, r0, r8, ror r7
    ae20:	andeq	r6, r0, r8, ror #4
    ae24:	andeq	r8, r1, r4, asr #24
    ae28:	andeq	r8, r1, r0, asr #24
    ae2c:	andeq	r8, r1, r8, ror #23
    ae30:	andeq	r8, r1, r0, ror fp
    ae34:	mvnpl	r8, pc, lsl r5
    ae38:	andeq	r7, r0, ip, lsr r6
    ae3c:	andeq	r8, r1, r8, lsl #22
    ae40:	andeq	r7, r0, r0, lsr #13
    ae44:	andeq	r6, r0, ip, lsr #3
    ae48:	andeq	r7, r0, r4, lsr r6
    ae4c:	strdeq	r7, [r0], -r4
    ae50:	strdeq	r6, [r0], -r0
    ae54:	andeq	r7, r0, ip, lsl #11
    ae58:	andeq	r7, r0, r4, lsl #11
    ae5c:			; <UNDEFINED> instruction: 0x000075b0
    ae60:	andeq	r6, r0, r8, ror r2
    ae64:	andeq	r7, r0, r4, lsl r6
    ae68:	andeq	r6, r0, r0, lsl #4
    ae6c:	ldrdeq	r7, [r0], -r4
    ae70:	andeq	r7, r0, r0, ror #14
    ae74:	andeq	r7, r0, r0, asr #14
    ae78:	andeq	r7, r0, r4, ror #14
    ae7c:	andeq	r7, r0, ip, lsl #15
    ae80:	andeq	r7, r0, r0, lsl #16
    ae84:	andeq	r7, r0, r8, ror #15
    ae88:	andeq	r7, r0, r4, lsl r8
    ae8c:	andeq	r7, r0, r4, asr #16
    ae90:	andeq	r0, r0, r4, asr #4
    ae94:	muleq	r0, r4, r8
    ae98:			; <UNDEFINED> instruction: 0x000186b8
    ae9c:			; <UNDEFINED> instruction: 0x000078b4
    aea0:	andeq	r8, r1, r4, lsr #10
    aea4:	muleq	r0, r1, r1
    aea8:			; <UNDEFINED> instruction: 0x000184b0
    aeac:	andeq	r8, r1, r8, asr r4
    aeb0:	andeq	r7, r0, ip, lsl #12
    aeb4:	andeq	r7, r0, r8, lsl #12
    aeb8:	strdeq	r7, [r0], -r0
    aebc:	andeq	r7, r0, r4, lsl r5
    aec0:	andeq	r7, r0, r0, ror #9
    aec4:	andeq	r7, r0, r0, rrx
    aec8:	andeq	r4, r0, ip, ror #11
    aecc:	muleq	r0, r8, r3
    aed0:	andeq	r5, r0, r8, lsl #4
    aed4:	andeq	r5, r0, ip, lsl r3
    aed8:	ldrdeq	r7, [r1], -r8
    aedc:	andeq	r6, r0, r8, asr #27
    aee0:	andeq	r5, r0, ip, asr #1
    aee4:			; <UNDEFINED> instruction: 0x00017ab8
    aee8:	andeq	r7, r1, r8, asr sl
    aeec:	strdeq	r7, [r1], -r8
    aef0:	strdeq	r7, [r1], -r0
    aef4:	andeq	r7, r1, r0, asr #19
    aef8:	muleq	r1, ip, r9
    aefc:	muleq	r1, ip, r9
    af00:	andeq	r7, r1, r0, ror r9
    af04:	andeq	r5, r0, r0, ror r1
    af08:	muleq	r0, ip, r4
    af0c:	andeq	r6, r0, r8, lsl r4
    af10:	andeq	r6, r0, r4, lsl #8
    af14:	andeq	r6, r0, ip, ror #7
    af18:	strdeq	r6, [r0], -r0
    af1c:	andeq	r5, r0, ip, ror r1
    af20:	andeq	r5, r0, r4, asr r1
    af24:			; <UNDEFINED> instruction: 0x000069b4
    af28:	andeq	r5, r0, r0, lsl #2
    af2c:	andeq	r5, r0, ip, lsl r1
    af30:	andeq	r6, r0, ip, ror #18
    af34:	andeq	r6, r0, ip, lsl #11
    af38:	muleq	r0, r0, r8
    af3c:	andeq	r6, r0, r8, lsr r6
    af40:	andeq	r6, r0, r4, ror r7
    af44:	andeq	r4, r0, ip, lsr #31
    af48:	andeq	r4, r0, ip, lsr #26
    af4c:	ldrdeq	r6, [r0], -r4
    af50:	andeq	r4, r0, ip, lsr #30
    af54:	muleq	r0, r0, r7
    af58:	andeq	r6, r0, r4, asr r7
    af5c:	andeq	r7, r0, r0, lsr r5
    af60:	andeq	r6, r0, r0, asr #3
    af64:	andeq	r6, r0, ip, lsr r3
    af68:	andeq	r4, r0, r4, ror #28
    af6c:	andeq	r6, r0, r4, ror #15
    af70:	strdeq	r6, [r0], -r4
    af74:	andeq	r7, r1, r8, lsr r4
    af78:			; <UNDEFINED> instruction: 0x00005eb8
    af7c:	andeq	r3, r0, r0, ror #26
    af80:	strdeq	r4, [r0], -ip
    af84:	andeq	r6, r0, r0, asr r6
    af88:	andeq	r6, r0, r4, lsr #2
    af8c:	ldrdeq	r7, [r1], -r4
    af90:	muleq	r0, ip, sp
    af94:	andeq	r7, r1, r8, ror r2
    af98:	andeq	r7, r1, r4, ror r2
    af9c:	andeq	r5, r0, r8, asr #2
    afa0:	strdeq	r4, [r0], -r0
    afa4:	andeq	r6, r0, r0, lsl #8
    afa8:	ldrdeq	r6, [r0], -ip
    afac:	strheq	r7, [r1], -r0
    afb0:	andeq	r7, r1, r8, lsr #1
    afb4:	muleq	r1, r4, r0
    afb8:	ldrdeq	r3, [r0], -r0
    afbc:	andeq	r4, r0, r0, lsr #21
    afc0:	andeq	r4, r0, r0, asr #29
    afc4:	ldr	r3, [sp, #112]	; 0x70
    afc8:	add	r4, r4, #76	; 0x4c
    afcc:	subs	r3, r3, #1
    afd0:	str	r3, [sp, #112]	; 0x70
    afd4:	beq	b414 <ippGetInteger@plt+0x9448>
    afd8:	ldr	r3, [r4, #24]
    afdc:	cmp	r3, #0
    afe0:	beq	b014 <ippGetInteger@plt+0x9048>
    afe4:	ldr	r2, [sp, #44]	; 0x2c
    afe8:	sub	r1, r2, #24
    afec:	ldr	r2, [sp, #36]	; 0x24
    aff0:	ldr	r0, [r2, #1628]	; 0x65c
    aff4:	ldr	r2, [sp, #104]	; 0x68
    aff8:	str	r3, [r2, #-3096]	; 0xfffff3e8
    affc:	bl	1b94 <cupsArrayFind@plt>
    b000:	cmp	r0, #0
    b004:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b008:	ldr	r3, [r0, #4]
    b00c:	cmp	r3, #0
    b010:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b014:	ldr	r3, [r4, #28]
    b018:	cmp	r3, #0
    b01c:	beq	b050 <ippGetInteger@plt+0x9084>
    b020:	ldr	r2, [sp, #44]	; 0x2c
    b024:	sub	r1, r2, #24
    b028:	ldr	r2, [sp, #36]	; 0x24
    b02c:	ldr	r0, [r2, #1628]	; 0x65c
    b030:	ldr	r2, [sp, #104]	; 0x68
    b034:	str	r3, [r2, #-3096]	; 0xfffff3e8
    b038:	bl	1b94 <cupsArrayFind@plt>
    b03c:	cmp	r0, #0
    b040:	beq	b050 <ippGetInteger@plt+0x9084>
    b044:	ldr	r3, [r0, #4]
    b048:	cmp	r3, #0
    b04c:	bne	afc4 <ippGetInteger@plt+0x8ff8>
    b050:	ldr	sl, [r4, #12]
    b054:	mov	r2, #0
    b058:	mov	r1, sl
    b05c:	mov	r0, r9
    b060:	bl	1cd8 <ippFindAttribute@plt>
    b064:	ldr	r3, [r4, #4]
    b068:	str	r3, [sp, #88]	; 0x58
    b06c:	subs	r5, r0, #0
    b070:	bne	b0b0 <ippGetInteger@plt+0x90e4>
    b074:	ldr	r3, [sp, #88]	; 0x58
    b078:	cmp	r3, #0
    b07c:	bne	b08c <ippGetInteger@plt+0x90c0>
    b080:	ldr	r3, [r4]
    b084:	cmp	r3, #0
    b088:	beq	b450 <ippGetInteger@plt+0x9484>
    b08c:	ldr	r3, [r4, #8]
    b090:	cmp	r3, #0
    b094:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b098:	mov	r2, #0
    b09c:	mov	r1, sl
    b0a0:	mov	r0, r9
    b0a4:	bl	1ba0 <ippFindNextAttribute@plt>
    b0a8:	subs	r5, r0, #0
    b0ac:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b0b0:	ldr	r3, [sp, #88]	; 0x58
    b0b4:	cmp	r3, #0
    b0b8:	bne	b450 <ippGetInteger@plt+0x9484>
    b0bc:	ldr	r1, [r5, #8]
    b0c0:	ldr	r0, [r4, #16]
    b0c4:	bl	663c <ippGetInteger@plt+0x4670>
    b0c8:	cmp	r0, #0
    b0cc:	beq	b450 <ippGetInteger@plt+0x9484>
    b0d0:	ldr	r3, [r4, #72]	; 0x48
    b0d4:	cmp	r3, #0
    b0d8:	beq	b0e8 <ippGetInteger@plt+0x911c>
    b0dc:	ldr	r2, [r5, #4]
    b0e0:	cmp	r3, r2
    b0e4:	bne	b450 <ippGetInteger@plt+0x9484>
    b0e8:	ldr	r3, [sp, #80]	; 0x50
    b0ec:	mov	r2, #131072	; 0x20000
    b0f0:	sub	r6, r3, #4
    b0f4:	mov	r1, r6
    b0f8:	mov	r0, r5
    b0fc:	bl	1ca8 <ippAttributeString@plt>
    b100:	ldr	r7, [r4, #36]	; 0x24
    b104:	cmp	r7, #0
    b108:	beq	b138 <ippGetInteger@plt+0x916c>
    b10c:	mov	r2, #0
    b110:	mov	r1, r7
    b114:	mov	r0, r9
    b118:	bl	1cd8 <ippFindAttribute@plt>
    b11c:	mov	r3, r6
    b120:	mov	r2, r5
    b124:	mov	r1, r0
    b128:	mov	r0, #0
    b12c:	bl	6880 <ippGetInteger@plt+0x48b4>
    b130:	cmp	r0, #0
    b134:	beq	ba80 <ippGetInteger@plt+0x9ab4>
    b138:	ldr	r7, [r4, #32]
    b13c:	ldr	r8, [r4, #64]	; 0x40
    b140:	mov	r2, r7
    b144:	stm	sp, {r5, r6}
    b148:	mov	r3, r8
    b14c:	mov	r1, #0
    b150:	mov	r0, fp
    b154:	bl	72a8 <ippGetInteger@plt+0x52dc>
    b158:	cmp	r0, #0
    b15c:	beq	b858 <ippGetInteger@plt+0x988c>
    b160:	ldr	r3, [r4, #68]	; 0x44
    b164:	cmp	r3, #0
    b168:	ble	b178 <ippGetInteger@plt+0x91ac>
    b16c:	ldr	r2, [r5, #16]
    b170:	cmp	r3, r2
    b174:	bne	bac0 <ippGetInteger@plt+0x9af4>
    b178:	ldr	r8, [r4, #20]
    b17c:	cmp	r8, #0
    b180:	beq	b1b4 <ippGetInteger@plt+0x91e8>
    b184:	mov	r2, #0
    b188:	mov	r1, r8
    b18c:	mov	r0, r9
    b190:	bl	1cd8 <ippFindAttribute@plt>
    b194:	ldr	r3, [sp, #104]	; 0x68
    b198:	cmp	r0, #0
    b19c:	str	r0, [r3, #-3108]	; 0xfffff3dc
    b1a0:	beq	b828 <ippGetInteger@plt+0x985c>
    b1a4:	ldr	r2, [r0, #16]
    b1a8:	ldr	r3, [r5, #16]
    b1ac:	cmp	r2, r3
    b1b0:	bne	b828 <ippGetInteger@plt+0x985c>
    b1b4:	ldr	r3, [r4, #40]	; 0x28
    b1b8:	cmp	r3, #0
    b1bc:	beq	b1e4 <ippGetInteger@plt+0x9218>
    b1c0:	ldr	r2, [pc, #-772]	; aec4 <ippGetInteger@plt+0x8ef8>
    b1c4:	ldr	r1, [sp, #36]	; 0x24
    b1c8:	add	r2, pc, r2
    b1cc:	str	r2, [sp]
    b1d0:	ldr	r2, [sp, #68]	; 0x44
    b1d4:	add	r1, r1, #4
    b1d8:	add	r2, r2, #12
    b1dc:	mov	r0, fp
    b1e0:	bl	6520 <ippGetInteger@plt+0x4554>
    b1e4:	ldr	r8, [r4, #48]	; 0x30
    b1e8:	cmp	r8, #0
    b1ec:	beq	b218 <ippGetInteger@plt+0x924c>
    b1f0:	cmp	r7, #0
    b1f4:	beq	b24c <ippGetInteger@plt+0x9280>
    b1f8:	ldr	r2, [sp, #68]	; 0x44
    b1fc:	ldr	r1, [sp, #36]	; 0x24
    b200:	str	r6, [sp]
    b204:	mov	r3, r8
    b208:	add	r2, r2, #12
    b20c:	add	r1, r1, #4
    b210:	mov	r0, fp
    b214:	bl	6520 <ippGetInteger@plt+0x4554>
    b218:	ldr	r3, [r4, #56]	; 0x38
    b21c:	cmp	r3, #0
    b220:	beq	b08c <ippGetInteger@plt+0x90c0>
    b224:	ldr	r3, [r4, #52]	; 0x34
    b228:	ldr	r1, [sp, #116]	; 0x74
    b22c:	ldr	r2, [sp, #100]	; 0x64
    b230:	cmp	r3, r1
    b234:	ldr	r3, [r4, #8]
    b238:	movgt	r2, #1
    b23c:	cmp	r3, #0
    b240:	str	r2, [sp, #100]	; 0x64
    b244:	bne	b098 <ippGetInteger@plt+0x90cc>
    b248:	b	afc4 <ippGetInteger@plt+0x8ff8>
    b24c:	mov	r0, r5
    b250:	bl	1ac8 <ippGetCount@plt>
    b254:	sub	r7, r0, #1
    b258:	mov	r0, r5
    b25c:	bl	1f78 <ippGetValueTag@plt>
    b260:	sub	r0, r0, #33	; 0x21
    b264:	cmp	r0, #40	; 0x28
    b268:	addls	pc, pc, r0, lsl #2
    b26c:	b	b400 <ippGetInteger@plt+0x9434>
    b270:	b	b3cc <ippGetInteger@plt+0x9400>
    b274:	b	b3a0 <ippGetInteger@plt+0x93d4>
    b278:	b	b3cc <ippGetInteger@plt+0x9400>
    b27c:	b	b400 <ippGetInteger@plt+0x9434>
    b280:	b	b400 <ippGetInteger@plt+0x9434>
    b284:	b	b400 <ippGetInteger@plt+0x9434>
    b288:	b	b400 <ippGetInteger@plt+0x9434>
    b28c:	b	b400 <ippGetInteger@plt+0x9434>
    b290:	b	b400 <ippGetInteger@plt+0x9434>
    b294:	b	b400 <ippGetInteger@plt+0x9434>
    b298:	b	b400 <ippGetInteger@plt+0x9434>
    b29c:	b	b400 <ippGetInteger@plt+0x9434>
    b2a0:	b	b400 <ippGetInteger@plt+0x9434>
    b2a4:	b	b400 <ippGetInteger@plt+0x9434>
    b2a8:	b	b400 <ippGetInteger@plt+0x9434>
    b2ac:	b	b400 <ippGetInteger@plt+0x9434>
    b2b0:	b	b400 <ippGetInteger@plt+0x9434>
    b2b4:	b	b338 <ippGetInteger@plt+0x936c>
    b2b8:	b	b400 <ippGetInteger@plt+0x9434>
    b2bc:	b	b400 <ippGetInteger@plt+0x9434>
    b2c0:	b	b314 <ippGetInteger@plt+0x9348>
    b2c4:	b	b314 <ippGetInteger@plt+0x9348>
    b2c8:	b	b400 <ippGetInteger@plt+0x9434>
    b2cc:	b	b400 <ippGetInteger@plt+0x9434>
    b2d0:	b	b400 <ippGetInteger@plt+0x9434>
    b2d4:	b	b400 <ippGetInteger@plt+0x9434>
    b2d8:	b	b400 <ippGetInteger@plt+0x9434>
    b2dc:	b	b400 <ippGetInteger@plt+0x9434>
    b2e0:	b	b400 <ippGetInteger@plt+0x9434>
    b2e4:	b	b400 <ippGetInteger@plt+0x9434>
    b2e8:	b	b400 <ippGetInteger@plt+0x9434>
    b2ec:	b	b400 <ippGetInteger@plt+0x9434>
    b2f0:	b	b314 <ippGetInteger@plt+0x9348>
    b2f4:	b	b314 <ippGetInteger@plt+0x9348>
    b2f8:	b	b400 <ippGetInteger@plt+0x9434>
    b2fc:	b	b314 <ippGetInteger@plt+0x9348>
    b300:	b	b314 <ippGetInteger@plt+0x9348>
    b304:	b	b314 <ippGetInteger@plt+0x9348>
    b308:	b	b314 <ippGetInteger@plt+0x9348>
    b30c:	b	b314 <ippGetInteger@plt+0x9348>
    b310:	b	b314 <ippGetInteger@plt+0x9348>
    b314:	mov	r1, r7
    b318:	mov	r0, r5
    b31c:	mov	r2, #0
    b320:	bl	19cc <ippGetString@plt>
    b324:	mov	r2, #131072	; 0x20000
    b328:	mov	r1, r0
    b32c:	mov	r0, r6
    b330:	bl	1e64 <_cups_strlcpy@plt>
    b334:	b	b1f8 <ippGetInteger@plt+0x922c>
    b338:	ldr	r2, [sp, #44]	; 0x2c
    b33c:	mov	r1, r7
    b340:	sub	r3, r2, #24
    b344:	mov	r0, r5
    b348:	sub	r2, r2, #28
    b34c:	bl	1ccc <ippGetResolution@plt>
    b350:	ldr	r3, [sp, #104]	; 0x68
    b354:	ldr	r1, [r3, #-3100]	; 0xfffff3e4
    b358:	cmp	r1, r0
    b35c:	beq	bbf0 <ippGetInteger@plt+0x9c24>
    b360:	ldr	r3, [sp, #104]	; 0x68
    b364:	ldr	r3, [r3, #-3096]	; 0xfffff3e8
    b368:	cmp	r3, #3
    b36c:	beq	bf88 <ippGetInteger@plt+0x9fbc>
    b370:	ldr	ip, [pc, #-1200]	; aec8 <ippGetInteger@plt+0x8efc>
    b374:	add	ip, pc, ip
    b378:	ldr	r2, [pc, #-1204]	; aecc <ippGetInteger@plt+0x8f00>
    b37c:	mov	r3, #131072	; 0x20000
    b380:	add	r2, pc, r2
    b384:	stmib	sp, {r0, r1, ip}
    b388:	mov	r1, r3
    b38c:	str	r2, [sp]
    b390:	mov	r0, r6
    b394:	mov	r2, #1
    b398:	bl	1e28 <__snprintf_chk@plt>
    b39c:	b	b1f8 <ippGetInteger@plt+0x922c>
    b3a0:	mov	r1, r7
    b3a4:	mov	r0, r5
    b3a8:	bl	1c60 <ippGetBoolean@plt>
    b3ac:	mov	r2, #131072	; 0x20000
    b3b0:	cmp	r0, #0
    b3b4:	beq	ba34 <ippGetInteger@plt+0x9a68>
    b3b8:	ldr	r1, [pc, #-1264]	; aed0 <ippGetInteger@plt+0x8f04>
    b3bc:	mov	r0, r6
    b3c0:	add	r1, pc, r1
    b3c4:	bl	1e64 <_cups_strlcpy@plt>
    b3c8:	b	b1f8 <ippGetInteger@plt+0x922c>
    b3cc:	mov	r1, r7
    b3d0:	mov	r0, r5
    b3d4:	bl	1fcc <ippGetInteger@plt>
    b3d8:	ldr	r2, [pc, #-1292]	; aed4 <ippGetInteger@plt+0x8f08>
    b3dc:	mov	r3, #131072	; 0x20000
    b3e0:	add	r2, pc, r2
    b3e4:	str	r2, [sp]
    b3e8:	mov	r1, r3
    b3ec:	mov	r2, #1
    b3f0:	str	r0, [sp, #4]
    b3f4:	mov	r0, r6
    b3f8:	bl	1e28 <__snprintf_chk@plt>
    b3fc:	b	b1f8 <ippGetInteger@plt+0x922c>
    b400:	mov	r0, r5
    b404:	mov	r2, #131072	; 0x20000
    b408:	mov	r1, r6
    b40c:	bl	1ca8 <ippAttributeString@plt>
    b410:	b	b1f8 <ippGetInteger@plt+0x922c>
    b414:	ldr	sl, [sp, #104]	; 0x68
    b418:	ldr	r3, [sp, #100]	; 0x64
    b41c:	cmp	r3, #0
    b420:	beq	b5e0 <ippGetInteger@plt+0x9614>
    b424:	ldr	r3, [pc, #-1364]	; aed8 <ippGetInteger@plt+0x8f0c>
    b428:	add	r3, pc, r3
    b42c:	ldr	r3, [r3]
    b430:	cmp	r3, #1
    b434:	beq	bba4 <ippGetInteger@plt+0x9bd8>
    b438:	cmp	r3, #2
    b43c:	beq	bb98 <ippGetInteger@plt+0x9bcc>
    b440:	mov	r0, r9
    b444:	bl	1a38 <ippDelete@plt>
    b448:	ldr	r0, [sp, #156]	; 0x9c
    b44c:	b	a3e4 <ippGetInteger@plt+0x8418>
    b450:	ldr	r3, [r4, #44]	; 0x2c
    b454:	cmp	r3, #0
    b458:	beq	b7a0 <ippGetInteger@plt+0x97d4>
    b45c:	ldr	r2, [pc, #-1416]	; aedc <ippGetInteger@plt+0x8f10>
    b460:	add	r2, pc, r2
    b464:	str	r2, [sp]
    b468:	ldr	r1, [sp, #36]	; 0x24
    b46c:	ldr	r2, [sp, #68]	; 0x44
    b470:	add	r1, r1, #4
    b474:	add	r2, r2, #12
    b478:	mov	r0, fp
    b47c:	bl	6520 <ippGetInteger@plt+0x4554>
    b480:	ldr	r3, [r4, #60]	; 0x3c
    b484:	cmp	r3, #0
    b488:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b48c:	ldr	r3, [r4, #52]	; 0x34
    b490:	ldr	r2, [sp, #116]	; 0x74
    b494:	cmp	r3, r2
    b498:	ble	afc4 <ippGetInteger@plt+0x8ff8>
    b49c:	mov	r3, #1
    b4a0:	str	r3, [sp, #100]	; 0x64
    b4a4:	b	afc4 <ippGetInteger@plt+0x8ff8>
    b4a8:	ldr	r0, [sp, #84]	; 0x54
    b4ac:	bl	1b4c <ippLength@plt>
    b4b0:	ldr	r3, [sp, #80]	; 0x50
    b4b4:	ldrb	r3, [r3, #-1028]	; 0xfffffbfc
    b4b8:	cmp	r3, #0
    b4bc:	mov	r7, r0
    b4c0:	beq	a418 <ippGetInteger@plt+0x844c>
    b4c4:	add	r0, sp, #26624	; 0x6800
    b4c8:	ldr	r1, [sp, #196]	; 0xc4
    b4cc:	add	r0, r0, #244	; 0xf4
    b4d0:	bl	1d2c <cupsFileOpen@plt>
    b4d4:	subs	r4, r0, #0
    b4d8:	addne	r5, sp, #27648	; 0x6c00
    b4dc:	addne	r5, r5, #244	; 0xf4
    b4e0:	beq	a418 <ippGetInteger@plt+0x844c>
    b4e4:	b	b4ec <ippGetInteger@plt+0x9520>
    b4e8:	add	r7, r7, r0
    b4ec:	mov	r2, #131072	; 0x20000
    b4f0:	mov	r1, r5
    b4f4:	mov	r0, r4
    b4f8:	bl	1e34 <cupsFileRead@plt>
    b4fc:	cmp	r0, #0
    b500:	bgt	b4e8 <ippGetInteger@plt+0x951c>
    b504:	mov	r0, r4
    b508:	bl	1d08 <cupsFileClose@plt>
    b50c:	b	a418 <ippGetInteger@plt+0x844c>
    b510:	ldr	r3, [sp, #84]	; 0x54
    b514:	ldr	r3, [r3]
    b518:	cmp	r3, #3
    b51c:	bne	ab98 <ippGetInteger@plt+0x8bcc>
    b520:	ldr	r3, [sp, #80]	; 0x50
    b524:	ldrb	r3, [r3, #-1028]	; 0xfffffbfc
    b528:	cmp	r3, #0
    b52c:	beq	ab98 <ippGetInteger@plt+0x8bcc>
    b530:	add	r6, sp, #26624	; 0x6800
    b534:	ldr	r1, [pc, #-1628]	; aee0 <ippGetInteger@plt+0x8f14>
    b538:	add	r6, r6, #244	; 0xf4
    b53c:	mov	r0, r6
    b540:	add	r1, pc, r1
    b544:	bl	1d2c <cupsFileOpen@plt>
    b548:	subs	r9, r0, #0
    b54c:	beq	c418 <ippGetInteger@plt+0xa44c>
    b550:	ldr	r3, [pc, #-1652]	; aee4 <ippGetInteger@plt+0x8f18>
    b554:	add	r3, pc, r3
    b558:	str	r3, [sp, #88]	; 0x58
    b55c:	ldr	r3, [sp, #80]	; 0x50
    b560:	sub	r3, r3, #4
    b564:	mov	r6, r3
    b568:	b	b598 <ippGetInteger@plt+0x95cc>
    b56c:	mov	r2, #131072	; 0x20000
    b570:	mov	r1, r6
    b574:	mov	r0, r9
    b578:	bl	1e34 <cupsFileRead@plt>
    b57c:	subs	r2, r0, #0
    b580:	ble	b5a8 <ippGetInteger@plt+0x95dc>
    b584:	mov	r1, r6
    b588:	mov	r0, r5
    b58c:	bl	1a98 <cupsWriteRequestData@plt>
    b590:	cmp	r0, #100	; 0x64
    b594:	bne	c8c0 <ippGetInteger@plt+0xa8f4>
    b598:	ldr	r3, [sp, #88]	; 0x58
    b59c:	ldr	r3, [r3]
    b5a0:	cmp	r3, #0
    b5a4:	beq	b56c <ippGetInteger@plt+0x95a0>
    b5a8:	mov	r0, r9
    b5ac:	bl	1d08 <cupsFileClose@plt>
    b5b0:	ldr	r3, [pc, #-1744]	; aee8 <ippGetInteger@plt+0x8f1c>
    b5b4:	add	r3, pc, r3
    b5b8:	ldr	r3, [r3]
    b5bc:	cmp	r3, #0
    b5c0:	beq	ab98 <ippGetInteger@plt+0x8bcc>
    b5c4:	ldr	r0, [sp, #48]	; 0x30
    b5c8:	bl	1e7c <httpFlush@plt>
    b5cc:	mov	r6, #100	; 0x64
    b5d0:	mov	r9, #0
    b5d4:	b	ab58 <ippGetInteger@plt+0x8b8c>
    b5d8:	bl	1e40 <usleep@plt>
    b5dc:	b	a3ec <ippGetInteger@plt+0x8420>
    b5e0:	mov	fp, r9
    b5e4:	ldr	r9, [sp, #152]	; 0x98
    b5e8:	ldr	r0, [sp, #84]	; 0x54
    b5ec:	bl	1a38 <ippDelete@plt>
    b5f0:	ldr	r0, [sp, #52]	; 0x34
    b5f4:	bl	1b70 <cupsArrayCount@plt>
    b5f8:	cmp	r0, #0
    b5fc:	ble	c0ac <ippGetInteger@plt+0xa0e0>
    b600:	ldr	r3, [pc, #-1820]	; aeec <ippGetInteger@plt+0x8f20>
    b604:	mov	r2, #0
    b608:	add	r3, pc, r3
    b60c:	str	r2, [sp, #92]	; 0x5c
    b610:	ldr	r3, [r3]
    b614:	ldr	r1, [pc, #-1836]	; aef0 <ippGetInteger@plt+0x8f24>
    b618:	cmp	r3, #2
    b61c:	add	r1, pc, r1
    b620:	ldr	r2, [r1, #308]	; 0x134
    b624:	add	r2, r2, #1
    b628:	str	r2, [r1, #308]	; 0x134
    b62c:	beq	ccc0 <ippGetInteger@plt+0xacf4>
    b630:	cmp	r3, #1
    b634:	beq	c29c <ippGetInteger@plt+0xa2d0>
    b638:	ldr	r3, [pc, #-1868]	; aef4 <ippGetInteger@plt+0x8f28>
    b63c:	ldr	r8, [sp, #124]	; 0x7c
    b640:	add	r3, pc, r3
    b644:	ldr	r3, [r3]
    b648:	cmp	r3, #0
    b64c:	bne	c244 <ippGetInteger@plt+0xa278>
    b650:	str	r3, [sp, #88]	; 0x58
    b654:	ldr	r3, [sp, #56]	; 0x38
    b658:	cmp	r3, #0
    b65c:	beq	9e70 <ippGetInteger@plt+0x7ea4>
    b660:	ldr	r3, [pc, #-1904]	; aef8 <ippGetInteger@plt+0x8f2c>
    b664:	add	r3, pc, r3
    b668:	ldr	r3, [r3]
    b66c:	ldr	r2, [pc, #-1912]	; aefc <ippGetInteger@plt+0x8f30>
    b670:	add	r2, pc, r2
    b674:	ldr	r2, [r2, #292]	; 0x124
    b678:	cmp	r2, #0
    b67c:	bne	b6c4 <ippGetInteger@plt+0x96f8>
    b680:	cmp	fp, #0
    b684:	beq	b6c4 <ippGetInteger@plt+0x96f8>
    b688:	ldr	r4, [pc, #-1936]	; af00 <ippGetInteger@plt+0x8f34>
    b68c:	ldr	r3, [sp, #124]	; 0x7c
    b690:	add	r4, pc, r4
    b694:	ldr	r2, [sp, #88]	; 0x58
    b698:	orr	r8, r3, r2
    b69c:	ldr	r3, [r4]
    b6a0:	cmp	r3, #1
    b6a4:	beq	cc14 <ippGetInteger@plt+0xac48>
    b6a8:	cmp	r3, #2
    b6ac:	bne	9e70 <ippGetInteger@plt+0x7ea4>
    b6b0:	bl	1e94 <cupsFileStdout@plt>
    b6b4:	ldr	r3, [sp, #32]
    b6b8:	cmp	r3, r0
    b6bc:	ldreq	r3, [r4]
    b6c0:	bne	cc14 <ippGetInteger@plt+0xac48>
    b6c4:	cmp	r3, #2
    b6c8:	bne	9e70 <ippGetInteger@plt+0x7ea4>
    b6cc:	ldr	r1, [pc, #-2000]	; af04 <ippGetInteger@plt+0x8f38>
    b6d0:	ldr	r0, [sp, #32]
    b6d4:	add	r1, pc, r1
    b6d8:	bl	1ee8 <cupsFilePuts@plt>
    b6dc:	b	9e70 <ippGetInteger@plt+0x7ea4>
    b6e0:	mov	fp, r9
    b6e4:	ldr	r9, [sp, #152]	; 0x98
    b6e8:	bl	1c84 <cupsLastError@plt>
    b6ec:	bl	1af8 <ippErrorString@plt>
    b6f0:	mov	r4, r0
    b6f4:	bl	1cb4 <cupsLastErrorString@plt>
    b6f8:	ldr	r1, [pc, #-2040]	; af08 <ippGetInteger@plt+0x8f3c>
    b6fc:	mov	r2, r4
    b700:	add	r1, pc, r1
    b704:	mov	r3, r0
    b708:	ldr	r0, [sp, #52]	; 0x34
    b70c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b710:	b	b5e8 <ippGetInteger@plt+0x961c>
    b714:	mov	r1, #10
    b718:	ldr	r0, [sp, #48]	; 0x30
    b71c:	bl	1a68 <httpGetField@plt>
    b720:	subs	r4, r0, #0
    b724:	beq	b840 <ippGetInteger@plt+0x9874>
    b728:	ldr	r1, [pc, #-2084]	; af0c <ippGetInteger@plt+0x8f40>
    b72c:	add	r1, pc, r1
    b730:	bl	1a08 <_cups_strcasecmp@plt>
    b734:	cmp	r0, #0
    b738:	beq	b75c <ippGetInteger@plt+0x9790>
    b73c:	ldrb	r3, [r4]
    b740:	cmp	r3, #0
    b744:	beq	b840 <ippGetInteger@plt+0x9874>
    b748:	ldr	r1, [pc, #-2112]	; af10 <ippGetInteger@plt+0x8f44>
    b74c:	mov	r2, r4
    b750:	add	r1, pc, r1
    b754:	ldr	r0, [sp, #52]	; 0x34
    b758:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b75c:	mov	r1, #12
    b760:	ldr	r0, [sp, #48]	; 0x30
    b764:	bl	1a68 <httpGetField@plt>
    b768:	subs	r4, r0, #0
    b76c:	beq	a514 <ippGetInteger@plt+0x8548>
    b770:	ldrb	r3, [r4]
    b774:	cmp	r3, #0
    b778:	beq	a514 <ippGetInteger@plt+0x8548>
    b77c:	bl	1d20 <httpGetDateTime@plt>
    b780:	cmp	r0, #0
    b784:	bne	a514 <ippGetInteger@plt+0x8548>
    b788:	ldr	r1, [pc, #-2172]	; af14 <ippGetInteger@plt+0x8f48>
    b78c:	mov	r2, r4
    b790:	add	r1, pc, r1
    b794:	ldr	r0, [sp, #52]	; 0x34
    b798:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b79c:	b	a514 <ippGetInteger@plt+0x8548>
    b7a0:	ldr	r3, [r4, #40]	; 0x28
    b7a4:	cmp	r3, #0
    b7a8:	bne	b480 <ippGetInteger@plt+0x94b4>
    b7ac:	ldr	r3, [r4, #48]	; 0x30
    b7b0:	cmp	r3, #0
    b7b4:	bne	b480 <ippGetInteger@plt+0x94b4>
    b7b8:	cmp	r5, #0
    b7bc:	ldr	r3, [sp, #88]	; 0x58
    b7c0:	beq	cbac <ippGetInteger@plt+0xabe0>
    b7c4:	cmp	r3, #0
    b7c8:	bne	cb94 <ippGetInteger@plt+0xabc8>
    b7cc:	ldr	r6, [r4, #16]
    b7d0:	ldr	r1, [r5, #8]
    b7d4:	mov	r0, r6
    b7d8:	bl	663c <ippGetInteger@plt+0x4670>
    b7dc:	cmp	r0, #0
    b7e0:	beq	cbd4 <ippGetInteger@plt+0xac08>
    b7e4:	ldr	r0, [r4, #72]	; 0x48
    b7e8:	cmp	r0, #0
    b7ec:	beq	b480 <ippGetInteger@plt+0x94b4>
    b7f0:	ldr	r3, [r5, #4]
    b7f4:	cmp	r0, r3
    b7f8:	beq	b480 <ippGetInteger@plt+0x94b4>
    b7fc:	bl	1b64 <ippTagString@plt>
    b800:	mov	r6, r0
    b804:	ldr	r0, [r5, #4]
    b808:	bl	1b64 <ippTagString@plt>
    b80c:	mov	r3, r6
    b810:	mov	r2, sl
    b814:	ldr	r1, [sp, #184]	; 0xb8
    b818:	str	r0, [sp]
    b81c:	ldr	r0, [sp, #52]	; 0x34
    b820:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b824:	b	b480 <ippGetInteger@plt+0x94b4>
    b828:	ldr	r3, [r4, #44]	; 0x2c
    b82c:	cmp	r3, #0
    b830:	beq	bb48 <ippGetInteger@plt+0x9b7c>
    b834:	ldr	r2, [pc, #-2340]	; af18 <ippGetInteger@plt+0x8f4c>
    b838:	add	r2, pc, r2
    b83c:	b	b464 <ippGetInteger@plt+0x9498>
    b840:	ldr	r4, [pc, #-2348]	; af1c <ippGetInteger@plt+0x8f50>
    b844:	add	r4, pc, r4
    b848:	b	b748 <ippGetInteger@plt+0x977c>
    b84c:	ldr	r6, [pc, #-2356]	; af20 <ippGetInteger@plt+0x8f54>
    b850:	add	r6, pc, r6
    b854:	b	a710 <ippGetInteger@plt+0x8744>
    b858:	ldr	r3, [r4, #44]	; 0x2c
    b85c:	ldr	r2, [r4, #60]	; 0x3c
    b860:	cmp	r3, #0
    b864:	str	r2, [sp, #88]	; 0x58
    b868:	beq	bc2c <ippGetInteger@plt+0x9c60>
    b86c:	ldr	r2, [pc, #-2384]	; af24 <ippGetInteger@plt+0x8f58>
    b870:	ldr	r1, [sp, #36]	; 0x24
    b874:	add	r2, pc, r2
    b878:	str	r2, [sp]
    b87c:	ldr	r2, [sp, #68]	; 0x44
    b880:	add	r1, r1, #4
    b884:	add	r2, r2, #12
    b888:	mov	r0, fp
    b88c:	bl	6520 <ippGetInteger@plt+0x4554>
    b890:	ldr	r3, [sp, #88]	; 0x58
    b894:	cmp	r3, #0
    b898:	beq	afc4 <ippGetInteger@plt+0x8ff8>
    b89c:	b	b48c <ippGetInteger@plt+0x94c0>
    b8a0:	ldr	r6, [pc, #-2432]	; af28 <ippGetInteger@plt+0x8f5c>
    b8a4:	add	r6, pc, r6
    b8a8:	b	a788 <ippGetInteger@plt+0x87bc>
    b8ac:	ldr	r4, [pc, #-2440]	; af2c <ippGetInteger@plt+0x8f60>
    b8b0:	add	r4, pc, r4
    b8b4:	b	a700 <ippGetInteger@plt+0x8734>
    b8b8:	ldr	r6, [pc, #-2448]	; af30 <ippGetInteger@plt+0x8f64>
    b8bc:	ldr	r3, [sp, #44]	; 0x2c
    b8c0:	add	r6, pc, r6
    b8c4:	ldr	r4, [sp, #168]	; 0xa8
    b8c8:	sub	r5, r3, #24
    b8cc:	str	r9, [sp, #88]	; 0x58
    b8d0:	ldr	r7, [sp, #160]	; 0xa0
    b8d4:	ldr	r8, [sp, #36]	; 0x24
    b8d8:	b	b90c <ippGetInteger@plt+0x9940>
    b8dc:	mov	r1, r5
    b8e0:	ldr	r0, [r8, #1628]	; 0x65c
    b8e4:	str	r3, [sl, #-3096]	; 0xfffff3e8
    b8e8:	bl	1b94 <cupsArrayFind@plt>
    b8ec:	cmp	r0, #0
    b8f0:	beq	b948 <ippGetInteger@plt+0x997c>
    b8f4:	ldr	r3, [r0, #4]
    b8f8:	cmp	r3, #0
    b8fc:	beq	b948 <ippGetInteger@plt+0x997c>
    b900:	add	r4, r4, #36	; 0x24
    b904:	cmp	r4, r7
    b908:	beq	b990 <ippGetInteger@plt+0x99c4>
    b90c:	ldr	r3, [r4, #4]
    b910:	cmp	r3, #0
    b914:	beq	b93c <ippGetInteger@plt+0x9970>
    b918:	mov	r1, r5
    b91c:	ldr	r0, [r8, #1628]	; 0x65c
    b920:	str	r3, [sl, #-3096]	; 0xfffff3e8
    b924:	bl	1b94 <cupsArrayFind@plt>
    b928:	cmp	r0, #0
    b92c:	beq	b900 <ippGetInteger@plt+0x9934>
    b930:	ldr	r3, [r0, #4]
    b934:	cmp	r3, #0
    b938:	beq	b900 <ippGetInteger@plt+0x9934>
    b93c:	ldr	r3, [r4, #8]
    b940:	cmp	r3, #0
    b944:	bne	b8dc <ippGetInteger@plt+0x9910>
    b948:	ldr	r3, [r4, #28]
    b94c:	cmp	r3, #0
    b950:	beq	b964 <ippGetInteger@plt+0x9998>
    b954:	ldr	r3, [r4, #24]
    b958:	ldr	r2, [sp, #116]	; 0x74
    b95c:	cmp	r3, r2
    b960:	bgt	b900 <ippGetInteger@plt+0x9934>
    b964:	ldr	r0, [r4]
    b968:	bl	1af8 <ippErrorString@plt>
    b96c:	mov	r9, r0
    b970:	bl	1c84 <cupsLastError@plt>
    b974:	bl	1af8 <ippErrorString@plt>
    b978:	mov	r2, r9
    b97c:	mov	r1, r6
    b980:	mov	r3, r0
    b984:	ldr	r0, [sp, #52]	; 0x34
    b988:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b98c:	b	b900 <ippGetInteger@plt+0x9934>
    b990:	ldr	r9, [sp, #88]	; 0x58
    b994:	ldr	r1, [pc, #-2664]	; af34 <ippGetInteger@plt+0x8f68>
    b998:	mov	r2, #65	; 0x41
    b99c:	add	r1, pc, r1
    b9a0:	mov	r0, r9
    b9a4:	bl	1cd8 <ippFindAttribute@plt>
    b9a8:	cmp	r0, #0
    b9ac:	str	r0, [sl, #-3108]	; 0xfffff3dc
    b9b0:	beq	ad60 <ippGetInteger@plt+0x8d94>
    b9b4:	ldr	r1, [pc, #-2692]	; af38 <ippGetInteger@plt+0x8f6c>
    b9b8:	ldr	r2, [r0, #24]
    b9bc:	add	r1, pc, r1
    b9c0:	ldr	r0, [sp, #52]	; 0x34
    b9c4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b9c8:	b	ad60 <ippGetInteger@plt+0x8d94>
    b9cc:	ldr	r0, [r0, #24]
    b9d0:	bl	1e1c <strlen@plt>
    b9d4:	cmp	r0, #255	; 0xff
    b9d8:	mov	r2, r0
    b9dc:	bls	a864 <ippGetInteger@plt+0x8898>
    b9e0:	ldr	r1, [pc, #-2732]	; af3c <ippGetInteger@plt+0x8f70>
    b9e4:	ldr	r0, [sp, #52]	; 0x34
    b9e8:	add	r1, pc, r1
    b9ec:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    b9f0:	b	a864 <ippGetInteger@plt+0x8898>
    b9f4:	ldr	r0, [r0, #24]
    b9f8:	bl	1e1c <strlen@plt>
    b9fc:	cmp	r0, #1024	; 0x400
    ba00:	mov	r2, r0
    ba04:	bcc	a908 <ippGetInteger@plt+0x893c>
    ba08:	ldr	r1, [pc, #-2768]	; af40 <ippGetInteger@plt+0x8f74>
    ba0c:	ldr	r0, [sp, #52]	; 0x34
    ba10:	add	r1, pc, r1
    ba14:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    ba18:	b	a908 <ippGetInteger@plt+0x893c>
    ba1c:	ldr	r4, [pc, #-2784]	; af44 <ippGetInteger@plt+0x8f78>
    ba20:	add	r4, pc, r4
    ba24:	b	a778 <ippGetInteger@plt+0x87ac>
    ba28:	mov	r3, #0
    ba2c:	str	r3, [sp, #132]	; 0x84
    ba30:	b	a4bc <ippGetInteger@plt+0x84f0>
    ba34:	ldr	r1, [pc, #-2804]	; af48 <ippGetInteger@plt+0x8f7c>
    ba38:	mov	r0, r6
    ba3c:	add	r1, pc, r1
    ba40:	bl	1e64 <_cups_strlcpy@plt>
    ba44:	b	b1f8 <ippGetInteger@plt+0x922c>
    ba48:	ldr	r3, [r3, #4]
    ba4c:	cmp	r3, #1
    ba50:	bne	a700 <ippGetInteger@plt+0x8734>
    ba54:	cmp	r2, #1
    ba58:	bne	a700 <ippGetInteger@plt+0x8734>
    ba5c:	ldr	r1, [pc, #-2840]	; af4c <ippGetInteger@plt+0x8f80>
    ba60:	mov	r0, r4
    ba64:	add	r1, pc, r1
    ba68:	bl	1ec4 <strcmp@plt>
    ba6c:	cmp	r0, #0
    ba70:	beq	a748 <ippGetInteger@plt+0x877c>
    ba74:	ldr	r6, [pc, #-2860]	; af50 <ippGetInteger@plt+0x8f84>
    ba78:	add	r6, pc, r6
    ba7c:	b	a710 <ippGetInteger@plt+0x8744>
    ba80:	ldr	r3, [r4, #44]	; 0x2c
    ba84:	ldr	r8, [r4, #60]	; 0x3c
    ba88:	cmp	r3, #0
    ba8c:	beq	be84 <ippGetInteger@plt+0x9eb8>
    ba90:	ldr	r2, [pc, #-2884]	; af54 <ippGetInteger@plt+0x8f88>
    ba94:	ldr	r1, [sp, #36]	; 0x24
    ba98:	add	r2, pc, r2
    ba9c:	str	r2, [sp]
    baa0:	ldr	r2, [sp, #68]	; 0x44
    baa4:	add	r1, r1, #4
    baa8:	add	r2, r2, #12
    baac:	mov	r0, fp
    bab0:	bl	6520 <ippGetInteger@plt+0x4554>
    bab4:	cmp	r8, #0
    bab8:	bne	b48c <ippGetInteger@plt+0x94c0>
    babc:	b	afc4 <ippGetInteger@plt+0x8ff8>
    bac0:	ldr	r1, [r4, #44]	; 0x2c
    bac4:	cmp	r1, #0
    bac8:	beq	bf14 <ippGetInteger@plt+0x9f48>
    bacc:	ldr	r2, [pc, #-2940]	; af58 <ippGetInteger@plt+0x8f8c>
    bad0:	mov	r3, r1
    bad4:	add	r2, pc, r2
    bad8:	b	b464 <ippGetInteger@plt+0x9498>
    badc:	mov	r2, #0
    bae0:	ldr	r1, [pc, #-2956]	; af5c <ippGetInteger@plt+0x8f90>
    bae4:	mov	r0, r5
    bae8:	bl	1fc0 <httpReconnect2@plt>
    baec:	cmp	r0, #0
    baf0:	bne	bf70 <ippGetInteger@plt+0x9fa4>
    baf4:	mvn	r6, #0
    baf8:	b	aad4 <ippGetInteger@plt+0x8b08>
    bafc:	ldr	r1, [pc, #-2980]	; af60 <ippGetInteger@plt+0x8f94>
    bb00:	ldr	r0, [sp, #52]	; 0x34
    bb04:	add	r1, pc, r1
    bb08:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bb0c:	b	a7c0 <ippGetInteger@plt+0x87f4>
    bb10:	ldr	r3, [r3, #4]
    bb14:	cmp	r3, #1
    bb18:	bne	a778 <ippGetInteger@plt+0x87ac>
    bb1c:	cmp	r2, #1
    bb20:	bne	a778 <ippGetInteger@plt+0x87ac>
    bb24:	ldr	r1, [pc, #-3016]	; af64 <ippGetInteger@plt+0x8f98>
    bb28:	mov	r0, r4
    bb2c:	add	r1, pc, r1
    bb30:	bl	1ec4 <strcmp@plt>
    bb34:	cmp	r0, #0
    bb38:	beq	a7c0 <ippGetInteger@plt+0x87f4>
    bb3c:	ldr	r6, [pc, #-3036]	; af68 <ippGetInteger@plt+0x8f9c>
    bb40:	add	r6, pc, r6
    bb44:	b	a788 <ippGetInteger@plt+0x87bc>
    bb48:	ldr	r3, [r4, #40]	; 0x28
    bb4c:	cmp	r3, #0
    bb50:	bne	b480 <ippGetInteger@plt+0x94b4>
    bb54:	ldr	r3, [r4, #48]	; 0x30
    bb58:	cmp	r3, #0
    bb5c:	bne	b480 <ippGetInteger@plt+0x94b4>
    bb60:	cmp	r0, #0
    bb64:	ldr	r3, [r5, #16]
    bb68:	beq	ce84 <ippGetInteger@plt+0xaeb8>
    bb6c:	ldr	r2, [r0, #16]
    bb70:	cmp	r2, r3
    bb74:	beq	b480 <ippGetInteger@plt+0x94b4>
    bb78:	ldr	r1, [pc, #-3092]	; af6c <ippGetInteger@plt+0x8fa0>
    bb7c:	str	r2, [sp, #4]
    bb80:	str	r8, [sp]
    bb84:	mov	r2, sl
    bb88:	add	r1, pc, r1
    bb8c:	ldr	r0, [sp, #52]	; 0x34
    bb90:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bb94:	b	b480 <ippGetInteger@plt+0x94b4>
    bb98:	bl	1e94 <cupsFileStdout@plt>
    bb9c:	cmp	fp, r0
    bba0:	beq	bbc4 <ippGetInteger@plt+0x9bf8>
    bba4:	bl	1e94 <cupsFileStdout@plt>
    bba8:	ldr	r1, [pc, #-3136]	; af70 <ippGetInteger@plt+0x8fa4>
    bbac:	ldr	r2, [sp, #116]	; 0x74
    bbb0:	add	r1, pc, r1
    bbb4:	bl	1dc8 <cupsFilePrintf@plt>
    bbb8:	ldr	r3, [sp, #56]	; 0x38
    bbbc:	cmp	r3, #0
    bbc0:	bne	c778 <ippGetInteger@plt+0xa7ac>
    bbc4:	ldr	r3, [pc, #-3160]	; af74 <ippGetInteger@plt+0x8fa8>
    bbc8:	add	r3, pc, r3
    bbcc:	ldr	r3, [r3]
    bbd0:	cmp	r3, #1
    bbd4:	bne	befc <ippGetInteger@plt+0x9f30>
    bbd8:	bl	1e94 <cupsFileStdout@plt>
    bbdc:	ldr	r1, [pc, #-3180]	; af78 <ippGetInteger@plt+0x8fac>
    bbe0:	ldr	r2, [sp, #148]	; 0x94
    bbe4:	add	r1, pc, r1
    bbe8:	bl	1dc8 <cupsFilePrintf@plt>
    bbec:	b	b440 <ippGetInteger@plt+0x9474>
    bbf0:	ldr	r3, [r3, #-3096]	; 0xfffff3e8
    bbf4:	cmp	r3, #3
    bbf8:	beq	c158 <ippGetInteger@plt+0xa18c>
    bbfc:	ldr	r1, [pc, #-3208]	; af7c <ippGetInteger@plt+0x8fb0>
    bc00:	add	r1, pc, r1
    bc04:	ldr	r2, [pc, #-3212]	; af80 <ippGetInteger@plt+0x8fb4>
    bc08:	mov	r3, #131072	; 0x20000
    bc0c:	add	r2, pc, r2
    bc10:	strd	r0, [sp, #4]
    bc14:	str	r2, [sp]
    bc18:	mov	r1, r3
    bc1c:	mov	r2, #1
    bc20:	mov	r0, r6
    bc24:	bl	1e28 <__snprintf_chk@plt>
    bc28:	b	b1f8 <ippGetInteger@plt+0x922c>
    bc2c:	ldr	r3, [r4, #40]	; 0x28
    bc30:	cmp	r3, #0
    bc34:	bne	b890 <ippGetInteger@plt+0x98c4>
    bc38:	ldr	r3, [r4, #48]	; 0x30
    bc3c:	cmp	r3, #0
    bc40:	bne	b890 <ippGetInteger@plt+0x98c4>
    bc44:	ldr	r3, [r4, #56]	; 0x38
    bc48:	cmp	r3, #0
    bc4c:	bne	b890 <ippGetInteger@plt+0x98c4>
    bc50:	ldr	r3, [sp, #88]	; 0x58
    bc54:	cmp	r3, #0
    bc58:	beq	bc6c <ippGetInteger@plt+0x9ca0>
    bc5c:	ldr	r3, [r4, #52]	; 0x34
    bc60:	ldr	r2, [sp, #116]	; 0x74
    bc64:	cmp	r3, r2
    bc68:	bgt	b49c <ippGetInteger@plt+0x94d0>
    bc6c:	mov	r0, r8
    bc70:	bl	4850 <ippGetInteger@plt+0x2884>
    bc74:	tst	r8, #2
    bc78:	str	r7, [sp]
    bc7c:	mov	r2, sl
    bc80:	mov	r3, r0
    bc84:	beq	cb80 <ippGetInteger@plt+0xabb4>
    bc88:	ldr	r1, [pc, #-3340]	; af84 <ippGetInteger@plt+0x8fb8>
    bc8c:	ldr	r0, [sp, #52]	; 0x34
    bc90:	add	r1, pc, r1
    bc94:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bc98:	stm	sp, {r5, r6}
    bc9c:	mov	r3, r8
    bca0:	mov	r2, r7
    bca4:	ldr	r1, [sp, #52]	; 0x34
    bca8:	mov	r0, fp
    bcac:	bl	72a8 <ippGetInteger@plt+0x52dc>
    bcb0:	b	b890 <ippGetInteger@plt+0x98c4>
    bcb4:	ldr	r1, [pc, #-3380]	; af88 <ippGetInteger@plt+0x8fbc>
    bcb8:	ldr	r0, [sp, #52]	; 0x34
    bcbc:	add	r1, pc, r1
    bcc0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bcc4:	b	a7c0 <ippGetInteger@plt+0x87f4>
    bcc8:	add	r4, sp, #22528	; 0x5800
    bccc:	add	r4, r4, #244	; 0xf4
    bcd0:	mov	r1, r4
    bcd4:	mov	r3, r8
    bcd8:	mov	r2, #1024	; 0x400
    bcdc:	mov	r0, r5
    bce0:	bl	4664 <ippGetInteger@plt+0x2698>
    bce4:	cmp	r0, #0
    bce8:	beq	d444 <ippGetInteger@plt+0xb478>
    bcec:	ldr	r3, [sp, #44]	; 0x2c
    bcf0:	str	r4, [sl, #-3096]	; 0xfffff3e8
    bcf4:	sub	r1, r3, #24
    bcf8:	ldr	r3, [sp, #36]	; 0x24
    bcfc:	ldr	r0, [r3, #1628]	; 0x65c
    bd00:	bl	1b94 <cupsArrayFind@plt>
    bd04:	cmp	r0, #0
    bd08:	beq	948c <ippGetInteger@plt+0x74c0>
    bd0c:	ldr	r3, [r0, #4]
    bd10:	cmp	r3, #0
    bd14:	ldr	r3, [sp, #104]	; 0x68
    bd18:	movne	r3, #1
    bd1c:	str	r3, [sp, #104]	; 0x68
    bd20:	b	948c <ippGetInteger@plt+0x74c0>
    bd24:	ldr	r3, [pc, #-3488]	; af8c <ippGetInteger@plt+0x8fc0>
    bd28:	mov	r2, #10
    bd2c:	add	r3, pc, r3
    bd30:	str	r2, [r3, #4]
    bd34:	b	8980 <ippGetInteger@plt+0x69b4>
    bd38:	ldr	r0, [sp, #32]
    bd3c:	bl	490c <ippGetInteger@plt+0x2940>
    bd40:	ldr	r3, [r4]
    bd44:	cmp	r3, #1
    bd48:	beq	a1ac <ippGetInteger@plt+0x81e0>
    bd4c:	cmp	r3, #2
    bd50:	bne	938c <ippGetInteger@plt+0x73c0>
    bd54:	b	a19c <ippGetInteger@plt+0x81d0>
    bd58:	ldr	r3, [sp, #152]	; 0x98
    bd5c:	cmp	r3, #0
    bd60:	beq	d238 <ippGetInteger@plt+0xb26c>
    bd64:	ldr	r3, [sp, #64]	; 0x40
    bd68:	str	r3, [sp, #100]	; 0x64
    bd6c:	b	ad6c <ippGetInteger@plt+0x8da0>
    bd70:	bl	1e94 <cupsFileStdout@plt>
    bd74:	ldr	r1, [pc, #-3564]	; af90 <ippGetInteger@plt+0x8fc4>
    bd78:	mov	fp, #0
    bd7c:	add	r1, pc, r1
    bd80:	bl	1ee8 <cupsFilePuts@plt>
    bd84:	ldr	r3, [pc, #-3576]	; af94 <ippGetInteger@plt+0x8fc8>
    bd88:	add	r3, pc, r3
    bd8c:	ldr	r3, [r3]
    bd90:	b	b6c4 <ippGetInteger@plt+0x96f8>
    bd94:	ldr	r3, [pc, #-3588]	; af98 <ippGetInteger@plt+0x8fcc>
    bd98:	add	r3, pc, r3
    bd9c:	str	r0, [r3, #16]
    bda0:	b	8980 <ippGetInteger@plt+0x69b4>
    bda4:	mov	r0, r4
    bda8:	bl	1be8 <close@plt>
    bdac:	b	948c <ippGetInteger@plt+0x74c0>
    bdb0:	ldr	r1, [pc, #-3612]	; af9c <ippGetInteger@plt+0x8fd0>
    bdb4:	mov	r0, r6
    bdb8:	add	r1, pc, r1
    bdbc:	bl	1a08 <_cups_strcasecmp@plt>
    bdc0:	cmp	r0, #0
    bdc4:	bne	cbf8 <ippGetInteger@plt+0xac2c>
    bdc8:	bl	1ea0 <random@plt>
    bdcc:	ldr	r3, [sp, #108]	; 0x6c
    bdd0:	smull	r3, r2, r3, r0
    bdd4:	asr	r3, r0, #31
    bdd8:	rsb	r3, r3, r2, asr #6
    bddc:	rsb	r2, r3, r3, lsl #5
    bde0:	add	r3, r3, r2, lsl #2
    bde4:	sub	r3, r0, r3, lsl #3
    bde8:	add	r2, r3, r3, lsl #4
    bdec:	add	r3, r3, r2, lsl #3
    bdf0:	add	r3, r3, #1
    bdf4:	str	r3, [sp, #96]	; 0x60
    bdf8:	b	948c <ippGetInteger@plt+0x74c0>
    bdfc:	add	r4, sp, #22528	; 0x5800
    be00:	add	r4, r4, #244	; 0xf4
    be04:	mov	r1, r4
    be08:	mov	r3, r8
    be0c:	mov	r2, #1024	; 0x400
    be10:	mov	r0, r5
    be14:	bl	4664 <ippGetInteger@plt+0x2698>
    be18:	cmp	r0, #0
    be1c:	beq	cb5c <ippGetInteger@plt+0xab90>
    be20:	mov	r2, r4
    be24:	add	r4, sp, #26624	; 0x6800
    be28:	mov	r3, #1024	; 0x400
    be2c:	mov	r1, fp
    be30:	ldr	r0, [sp, #36]	; 0x24
    be34:	add	r4, r4, #244	; 0xf4
    be38:	bl	4244 <ippGetInteger@plt+0x2278>
    be3c:	mov	r1, r4
    be40:	mov	r2, fp
    be44:	ldr	r0, [sp, #76]	; 0x4c
    be48:	bl	676c <ippGetInteger@plt+0x47a0>
    be4c:	mov	r0, r4
    be50:	mov	r1, #4
    be54:	bl	1d50 <access@plt>
    be58:	ldr	r3, [sp, #104]	; 0x68
    be5c:	cmp	r0, #0
    be60:	movne	r3, #1
    be64:	str	r3, [sp, #104]	; 0x68
    be68:	b	948c <ippGetInteger@plt+0x74c0>
    be6c:	ldr	r1, [pc, #-3796]	; afa0 <ippGetInteger@plt+0x8fd4>
    be70:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    be74:	ldr	r0, [sp, #32]
    be78:	add	r1, pc, r1
    be7c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    be80:	b	8ef0 <ippGetInteger@plt+0x6f24>
    be84:	ldr	r3, [r4, #40]	; 0x28
    be88:	cmp	r3, #0
    be8c:	bne	bab4 <ippGetInteger@plt+0x9ae8>
    be90:	ldr	r3, [r4, #48]	; 0x30
    be94:	cmp	r3, #0
    be98:	bne	bab4 <ippGetInteger@plt+0x9ae8>
    be9c:	ldr	r3, [r4, #56]	; 0x38
    bea0:	orrs	r3, r8, r3
    bea4:	bne	cb2c <ippGetInteger@plt+0xab60>
    bea8:	mov	r2, sl
    beac:	ldr	r1, [pc, #-3856]	; afa4 <ippGetInteger@plt+0x8fd8>
    beb0:	ldr	sl, [sp, #52]	; 0x34
    beb4:	mov	r3, r7
    beb8:	mov	r0, sl
    bebc:	add	r1, pc, r1
    bec0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bec4:	mov	r1, r7
    bec8:	mov	r2, #0
    becc:	mov	r0, r9
    bed0:	bl	1cd8 <ippFindAttribute@plt>
    bed4:	mov	r3, r6
    bed8:	mov	r2, r5
    bedc:	mov	r1, r0
    bee0:	mov	r0, sl
    bee4:	bl	6880 <ippGetInteger@plt+0x48b4>
    bee8:	b	bab4 <ippGetInteger@plt+0x9ae8>
    beec:	mov	r3, #1
    bef0:	mov	r9, #0
    bef4:	str	r3, [sp, #132]	; 0x84
    bef8:	b	ab74 <ippGetInteger@plt+0x8ba8>
    befc:	cmp	r3, #2
    bf00:	bne	b440 <ippGetInteger@plt+0x9474>
    bf04:	bl	1e94 <cupsFileStdout@plt>
    bf08:	cmp	fp, r0
    bf0c:	bne	bbd8 <ippGetInteger@plt+0x9c0c>
    bf10:	b	b440 <ippGetInteger@plt+0x9474>
    bf14:	ldr	r1, [r4, #40]	; 0x28
    bf18:	cmp	r1, #0
    bf1c:	bne	b480 <ippGetInteger@plt+0x94b4>
    bf20:	ldr	r1, [r4, #48]	; 0x30
    bf24:	cmp	r1, #0
    bf28:	bne	b480 <ippGetInteger@plt+0x94b4>
    bf2c:	ldr	r1, [pc, #-3980]	; afa8 <ippGetInteger@plt+0x8fdc>
    bf30:	str	r2, [sp]
    bf34:	add	r1, pc, r1
    bf38:	mov	r2, sl
    bf3c:	ldr	r0, [sp, #52]	; 0x34
    bf40:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    bf44:	b	b480 <ippGetInteger@plt+0x94b4>
    bf48:	ldr	r3, [pc, #-4004]	; afac <ippGetInteger@plt+0x8fe0>
    bf4c:	mov	r2, #11
    bf50:	add	r3, pc, r3
    bf54:	str	r2, [r3, #4]
    bf58:	b	8980 <ippGetInteger@plt+0x69b4>
    bf5c:	ldr	r3, [pc, #-4020]	; afb0 <ippGetInteger@plt+0x8fe4>
    bf60:	mov	r2, #1
    bf64:	add	r3, pc, r3
    bf68:	str	r2, [r3, #16]
    bf6c:	b	8980 <ippGetInteger@plt+0x69b4>
    bf70:	ldr	r3, [pc, #-4036]	; afb4 <ippGetInteger@plt+0x8fe8>
    bf74:	str	r4, [sp, #132]	; 0x84
    bf78:	ldr	r4, [pc, r3]
    bf7c:	cmp	r4, #0
    bf80:	bne	a4bc <ippGetInteger@plt+0x84f0>
    bf84:	b	ab00 <ippGetInteger@plt+0x8b34>
    bf88:	ldr	ip, [pc, #-4056]	; afb8 <ippGetInteger@plt+0x8fec>
    bf8c:	add	ip, pc, ip
    bf90:	b	b378 <ippGetInteger@plt+0x93ac>
    bf94:	ldr	r1, [pc, #-4064]	; afbc <ippGetInteger@plt+0x8ff0>
    bf98:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    bf9c:	ldr	r0, [sp, #32]
    bfa0:	add	r1, pc, r1
    bfa4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    bfa8:	b	961c <ippGetInteger@plt+0x7650>
    bfac:	ldr	r1, [pc, #-4084]	; afc0 <ippGetInteger@plt+0x8ff4>
    bfb0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    bfb4:	ldr	r0, [sp, #32]
    bfb8:	add	r1, pc, r1
    bfbc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    bfc0:	b	961c <ippGetInteger@plt+0x7650>
    bfc4:	ldr	r1, [pc, #3956]	; cf40 <ippGetInteger@plt+0xaf74>
    bfc8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    bfcc:	ldr	r0, [sp, #32]
    bfd0:	add	r1, pc, r1
    bfd4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    bfd8:	b	8ef0 <ippGetInteger@plt+0x6f24>
    bfdc:	add	r6, sp, #22528	; 0x5800
    bfe0:	add	r6, r6, #244	; 0xf4
    bfe4:	mov	r1, r6
    bfe8:	mov	r3, r8
    bfec:	mov	r2, #1024	; 0x400
    bff0:	mov	r0, r5
    bff4:	bl	4664 <ippGetInteger@plt+0x2698>
    bff8:	cmp	r0, #0
    bffc:	beq	c030 <ippGetInteger@plt+0xa064>
    c000:	ldr	r1, [pc, #3900]	; cf44 <ippGetInteger@plt+0xaf78>
    c004:	mov	r0, r6
    c008:	add	r1, pc, r1
    c00c:	bl	1a08 <_cups_strcasecmp@plt>
    c010:	cmp	r0, #0
    c014:	beq	c570 <ippGetInteger@plt+0xa5a4>
    c018:	ldr	r1, [pc, #3880]	; cf48 <ippGetInteger@plt+0xaf7c>
    c01c:	mov	r0, r6
    c020:	add	r1, pc, r1
    c024:	bl	1a08 <_cups_strcasecmp@plt>
    c028:	cmp	r0, #0
    c02c:	beq	c570 <ippGetInteger@plt+0xa5a4>
    c030:	ldr	r1, [pc, #3860]	; cf4c <ippGetInteger@plt+0xaf80>
    c034:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c038:	ldr	r0, [sp, #32]
    c03c:	add	r1, pc, r1
    c040:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c044:	b	961c <ippGetInteger@plt+0x7650>
    c048:	add	r6, sp, #22528	; 0x5800
    c04c:	add	r6, r6, #244	; 0xf4
    c050:	mov	r1, r6
    c054:	mov	r3, r8
    c058:	mov	r2, #1024	; 0x400
    c05c:	mov	r0, r5
    c060:	bl	4664 <ippGetInteger@plt+0x2698>
    c064:	cmp	r0, #0
    c068:	beq	ce50 <ippGetInteger@plt+0xae84>
    c06c:	ldr	r3, [sp, #44]	; 0x2c
    c070:	str	r6, [sl, #-3096]	; 0xfffff3e8
    c074:	sub	r1, r3, #24
    c078:	ldr	r3, [sp, #36]	; 0x24
    c07c:	ldr	r0, [r3, #1628]	; 0x65c
    c080:	bl	1b94 <cupsArrayFind@plt>
    c084:	cmp	r0, #0
    c088:	moveq	r3, #1
    c08c:	streq	r3, [sp, #104]	; 0x68
    c090:	beq	948c <ippGetInteger@plt+0x74c0>
    c094:	ldr	r3, [r0, #4]
    c098:	cmp	r3, #0
    c09c:	ldr	r3, [sp, #104]	; 0x68
    c0a0:	moveq	r3, #1
    c0a4:	str	r3, [sp, #104]	; 0x68
    c0a8:	b	948c <ippGetInteger@plt+0x74c0>
    c0ac:	ldr	r3, [pc, #3740]	; cf50 <ippGetInteger@plt+0xaf84>
    c0b0:	ldr	r2, [sp, #132]	; 0x84
    c0b4:	add	r3, pc, r3
    c0b8:	cmp	r2, #0
    c0bc:	ldr	r3, [r3]
    c0c0:	beq	b614 <ippGetInteger@plt+0x9648>
    c0c4:	ldr	r1, [pc, #3720]	; cf54 <ippGetInteger@plt+0xaf88>
    c0c8:	cmp	r3, #2
    c0cc:	add	r1, pc, r1
    c0d0:	ldr	r2, [r1, #304]	; 0x130
    c0d4:	add	r2, r2, #1
    c0d8:	str	r2, [r1, #304]	; 0x130
    c0dc:	beq	d410 <ippGetInteger@plt+0xb444>
    c0e0:	cmp	r3, #1
    c0e4:	beq	d408 <ippGetInteger@plt+0xb43c>
    c0e8:	ldr	r2, [sp, #124]	; 0x7c
    c0ec:	orr	r8, r2, #1
    c0f0:	cmp	r3, #2
    c0f4:	bls	c400 <ippGetInteger@plt+0xa434>
    c0f8:	ldr	r2, [pc, #3672]	; cf58 <ippGetInteger@plt+0xaf8c>
    c0fc:	ldr	r3, [sp, #56]	; 0x38
    c100:	add	r2, pc, r2
    c104:	adds	r3, r3, #0
    c108:	ldr	r2, [r2, #292]	; 0x124
    c10c:	movne	r3, #1
    c110:	cmp	r2, #0
    c114:	movne	r3, #0
    c118:	cmp	r3, #0
    c11c:	bne	d244 <ippGetInteger@plt+0xb278>
    c120:	mov	r3, #1
    c124:	b	b650 <ippGetInteger@plt+0x9684>
    c128:	ldr	r3, [pc, #3628]	; cf5c <ippGetInteger@plt+0xaf90>
    c12c:	mov	r2, #20
    c130:	add	r3, pc, r3
    c134:	str	r2, [r3, #4]
    c138:	b	8980 <ippGetInteger@plt+0x69b4>
    c13c:	ldr	r1, [pc, #3612]	; cf60 <ippGetInteger@plt+0xaf94>
    c140:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    c144:	mov	r2, r5
    c148:	ldr	r0, [sp, #32]
    c14c:	add	r1, pc, r1
    c150:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c154:	b	8ef0 <ippGetInteger@plt+0x6f24>
    c158:	ldr	r1, [pc, #3588]	; cf64 <ippGetInteger@plt+0xaf98>
    c15c:	add	r1, pc, r1
    c160:	b	bc04 <ippGetInteger@plt+0x9c38>
    c164:	ldr	r1, [pc, #3580]	; cf68 <ippGetInteger@plt+0xaf9c>
    c168:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c16c:	ldr	r0, [sp, #32]
    c170:	add	r1, pc, r1
    c174:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c178:	b	8ef0 <ippGetInteger@plt+0x6f24>
    c17c:	ldr	r6, [sp, #32]
    c180:	ldr	r5, [pc, #3556]	; cf6c <ippGetInteger@plt+0xafa0>
    c184:	ldr	r1, [pc, #3556]	; cf70 <ippGetInteger@plt+0xafa4>
    c188:	add	r5, pc, r5
    c18c:	add	r1, pc, r1
    c190:	mov	r0, r6
    c194:	bl	1ee8 <cupsFilePuts@plt>
    c198:	mov	r1, r5
    c19c:	mov	r0, r6
    c1a0:	bl	1ee8 <cupsFilePuts@plt>
    c1a4:	ldr	r1, [pc, #3528]	; cf74 <ippGetInteger@plt+0xafa8>
    c1a8:	mov	r0, r6
    c1ac:	add	r1, pc, r1
    c1b0:	bl	1ee8 <cupsFilePuts@plt>
    c1b4:	mov	r1, r5
    c1b8:	mov	r0, r6
    c1bc:	bl	1ee8 <cupsFilePuts@plt>
    c1c0:	ldr	r1, [pc, #3504]	; cf78 <ippGetInteger@plt+0xafac>
    c1c4:	mov	r0, r6
    c1c8:	add	r1, pc, r1
    c1cc:	bl	1ee8 <cupsFilePuts@plt>
    c1d0:	ldr	r2, [pc, #3492]	; cf7c <ippGetInteger@plt+0xafb0>
    c1d4:	ldr	r1, [pc, #3492]	; cf80 <ippGetInteger@plt+0xafb4>
    c1d8:	add	r2, pc, r2
    c1dc:	add	r1, pc, r1
    c1e0:	mov	r0, r6
    c1e4:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    c1e8:	ldr	r1, [pc, #3476]	; cf84 <ippGetInteger@plt+0xafb8>
    c1ec:	mov	r0, r6
    c1f0:	add	r1, pc, r1
    c1f4:	bl	1ee8 <cupsFilePuts@plt>
    c1f8:	ldr	r1, [pc, #3464]	; cf88 <ippGetInteger@plt+0xafbc>
    c1fc:	mov	r0, r6
    c200:	add	r1, pc, r1
    c204:	bl	1ee8 <cupsFilePuts@plt>
    c208:	ldr	r3, [r4]
    c20c:	ldr	r2, [sp, #88]	; 0x58
    c210:	ldr	r1, [sp, #124]	; 0x7c
    c214:	cmp	r3, #1
    c218:	orr	r8, r2, r1
    c21c:	beq	bd70 <ippGetInteger@plt+0x9da4>
    c220:	cmp	r3, #2
    c224:	bne	9e6c <ippGetInteger@plt+0x7ea0>
    c228:	bl	1e94 <cupsFileStdout@plt>
    c22c:	ldr	r3, [sp, #32]
    c230:	cmp	r3, r0
    c234:	bne	bd70 <ippGetInteger@plt+0x9da4>
    c238:	ldr	r3, [r4]
    c23c:	mov	fp, #0
    c240:	b	b6c4 <ippGetInteger@plt+0x96f8>
    c244:	ldr	r2, [sp, #72]	; 0x48
    c248:	ldr	r3, [pc, #3388]	; cf8c <ippGetInteger@plt+0xafc0>
    c24c:	ldr	r3, [r2, r3]
    c250:	ldr	r4, [r3]
    c254:	bl	1cb4 <cupsLastErrorString@plt>
    c258:	ldr	r2, [pc, #3376]	; cf90 <ippGetInteger@plt+0xafc4>
    c25c:	mov	r1, #1
    c260:	add	r2, pc, r2
    c264:	mov	r3, r0
    c268:	mov	r0, r4
    c26c:	bl	1b7c <__fprintf_chk@plt>
    c270:	ldr	r3, [pc, #3356]	; cf94 <ippGetInteger@plt+0xafc8>
    c274:	add	r3, pc, r3
    c278:	ldr	r3, [r3]
    c27c:	cmp	r3, #2
    c280:	beq	d178 <ippGetInteger@plt+0xb1ac>
    c284:	cmp	r3, #1
    c288:	beq	cef0 <ippGetInteger@plt+0xaf24>
    c28c:	mov	r3, #0
    c290:	ldr	r8, [sp, #124]	; 0x7c
    c294:	str	r3, [sp, #88]	; 0x58
    c298:	b	b654 <ippGetInteger@plt+0x9688>
    c29c:	bl	1e94 <cupsFileStdout@plt>
    c2a0:	ldr	r1, [pc, #3312]	; cf98 <ippGetInteger@plt+0xafcc>
    c2a4:	add	r1, pc, r1
    c2a8:	bl	1ee8 <cupsFilePuts@plt>
    c2ac:	bl	1e94 <cupsFileStdout@plt>
    c2b0:	mov	r4, r0
    c2b4:	mov	r0, fp
    c2b8:	bl	1b4c <ippLength@plt>
    c2bc:	ldr	r1, [pc, #3288]	; cf9c <ippGetInteger@plt+0xafd0>
    c2c0:	add	r1, pc, r1
    c2c4:	mov	r2, r0
    c2c8:	mov	r0, r4
    c2cc:	bl	1dc8 <cupsFilePrintf@plt>
    c2d0:	bl	1e94 <cupsFileStdout@plt>
    c2d4:	mov	r4, r0
    c2d8:	bl	1c84 <cupsLastError@plt>
    c2dc:	bl	1af8 <ippErrorString@plt>
    c2e0:	mov	r5, r0
    c2e4:	bl	1cb4 <cupsLastErrorString@plt>
    c2e8:	ldr	r1, [pc, #3248]	; cfa0 <ippGetInteger@plt+0xafd4>
    c2ec:	mov	r2, r5
    c2f0:	add	r1, pc, r1
    c2f4:	mov	r3, r0
    c2f8:	mov	r0, r4
    c2fc:	bl	1dc8 <cupsFilePrintf@plt>
    c300:	ldr	r3, [pc, #3228]	; cfa4 <ippGetInteger@plt+0xafd8>
    c304:	add	r3, pc, r3
    c308:	ldr	r3, [r3, #292]	; 0x124
    c30c:	cmp	r3, #0
    c310:	beq	c270 <ippGetInteger@plt+0xa2a4>
    c314:	cmp	fp, #0
    c318:	beq	c270 <ippGetInteger@plt+0xa2a4>
    c31c:	ldr	r3, [fp, #16]
    c320:	cmp	r3, #0
    c324:	str	r3, [sl, #-3108]	; 0xfffff3dc
    c328:	movne	r4, #0
    c32c:	beq	c270 <ippGetInteger@plt+0xa2a4>
    c330:	bl	1e94 <cupsFileStdout@plt>
    c334:	mov	r3, #0
    c338:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    c33c:	mov	r1, #1
    c340:	bl	86dc <ippGetInteger@plt+0x6710>
    c344:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    c348:	ldr	r3, [r3]
    c34c:	cmp	r3, #0
    c350:	str	r3, [sl, #-3108]	; 0xfffff3dc
    c354:	bne	c330 <ippGetInteger@plt+0xa364>
    c358:	cmp	r4, #0
    c35c:	beq	c270 <ippGetInteger@plt+0xa2a4>
    c360:	ldr	r3, [pc, #3136]	; cfa8 <ippGetInteger@plt+0xafdc>
    c364:	ldr	r2, [sp, #124]	; 0x7c
    c368:	add	r3, pc, r3
    c36c:	orr	r8, r2, #1
    c370:	ldr	r3, [r3]
    c374:	b	c0f0 <ippGetInteger@plt+0xa124>
    c378:	bl	1e94 <cupsFileStdout@plt>
    c37c:	mov	r5, r0
    c380:	mov	r0, fp
    c384:	bl	1b4c <ippLength@plt>
    c388:	ldr	r1, [pc, #3100]	; cfac <ippGetInteger@plt+0xafe0>
    c38c:	add	r1, pc, r1
    c390:	mov	r2, r0
    c394:	mov	r0, r5
    c398:	bl	1dc8 <cupsFilePrintf@plt>
    c39c:	bl	1e94 <cupsFileStdout@plt>
    c3a0:	mov	r5, r0
    c3a4:	bl	1c84 <cupsLastError@plt>
    c3a8:	bl	1af8 <ippErrorString@plt>
    c3ac:	mov	r6, r0
    c3b0:	bl	1cb4 <cupsLastErrorString@plt>
    c3b4:	ldr	r1, [pc, #3060]	; cfb0 <ippGetInteger@plt+0xafe4>
    c3b8:	mov	r2, r6
    c3bc:	add	r1, pc, r1
    c3c0:	mov	r3, r0
    c3c4:	mov	r0, r5
    c3c8:	bl	1dc8 <cupsFilePrintf@plt>
    c3cc:	ldr	r3, [r4, #292]	; 0x124
    c3d0:	cmp	r3, #0
    c3d4:	beq	ceb0 <ippGetInteger@plt+0xaee4>
    c3d8:	ldr	r3, [fp, #16]
    c3dc:	cmp	r3, #0
    c3e0:	str	r3, [sl, #-3108]	; 0xfffff3dc
    c3e4:	movne	r4, #1
    c3e8:	bne	c330 <ippGetInteger@plt+0xa364>
    c3ec:	ldr	r3, [pc, #3008]	; cfb4 <ippGetInteger@plt+0xafe8>
    c3f0:	add	r3, pc, r3
    c3f4:	ldr	r3, [r3]
    c3f8:	cmp	r3, #2
    c3fc:	bhi	c120 <ippGetInteger@plt+0xa154>
    c400:	mov	r2, #1
    c404:	str	r2, [sp, #88]	; 0x58
    c408:	ldr	r2, [sp, #56]	; 0x38
    c40c:	cmp	r2, #0
    c410:	bne	b66c <ippGetInteger@plt+0x96a0>
    c414:	b	b6c4 <ippGetInteger@plt+0x96f8>
    c418:	bl	1f00 <__errno_location@plt>
    c41c:	ldr	r3, [sp, #80]	; 0x50
    c420:	sub	r3, r3, #4
    c424:	str	r3, [sp, #88]	; 0x58
    c428:	ldr	r0, [r0]
    c42c:	bl	1b04 <strerror@plt>
    c430:	ldr	r2, [pc, #2944]	; cfb8 <ippGetInteger@plt+0xafec>
    c434:	mov	r3, #131072	; 0x20000
    c438:	add	r2, pc, r2
    c43c:	mov	r1, r3
    c440:	stm	sp, {r2, r6}
    c444:	ldr	r6, [sp, #88]	; 0x58
    c448:	mov	r2, #1
    c44c:	str	r0, [sp, #8]
    c450:	mov	r0, r6
    c454:	bl	1e28 <__snprintf_chk@plt>
    c458:	mov	r2, r9
    c45c:	mov	r1, r6
    c460:	mov	r0, #1280	; 0x500
    c464:	bl	1bac <_cupsSetError@plt>
    c468:	ldr	r3, [sp, #144]	; 0x90
    c46c:	ldr	r3, [r3]
    c470:	cmp	r3, #0
    c474:	beq	a480 <ippGetInteger@plt+0x84b4>
    c478:	str	r4, [sp, #132]	; 0x84
    c47c:	b	a4bc <ippGetInteger@plt+0x84f0>
    c480:	ldr	r1, [pc, #2868]	; cfbc <ippGetInteger@plt+0xaff0>
    c484:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c488:	ldr	r0, [sp, #32]
    c48c:	add	r1, pc, r1
    c490:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c494:	b	8ef0 <ippGetInteger@plt+0x6f24>
    c498:	ldr	r1, [pc, #2848]	; cfc0 <ippGetInteger@plt+0xaff4>
    c49c:	ldr	r0, [sp, #32]
    c4a0:	add	r1, pc, r1
    c4a4:	bl	1ee8 <cupsFilePuts@plt>
    c4a8:	ldr	r3, [sp, #84]	; 0x54
    c4ac:	ldr	r2, [r3, #16]
    c4b0:	cmp	r2, #0
    c4b4:	str	r2, [sl, #-3108]	; 0xfffff3dc
    c4b8:	streq	r2, [sl, #-3112]	; 0xfffff3d8
    c4bc:	beq	c4f8 <ippGetInteger@plt+0xa52c>
    c4c0:	ldr	r5, [pc, #2812]	; cfc4 <ippGetInteger@plt+0xaff8>
    c4c4:	ldr	r3, [r2, #4]
    c4c8:	add	r5, pc, r5
    c4cc:	add	r4, sp, #208	; 0xd0
    c4d0:	str	r3, [sl, #-3112]	; 0xfffff3d8
    c4d4:	mov	r3, r4
    c4d8:	ldr	r1, [r5]
    c4dc:	ldr	r0, [sp, #32]
    c4e0:	bl	86dc <ippGetInteger@plt+0x6710>
    c4e4:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    c4e8:	ldr	r2, [r3]
    c4ec:	cmp	r2, #0
    c4f0:	str	r2, [sl, #-3108]	; 0xfffff3dc
    c4f4:	bne	c4d4 <ippGetInteger@plt+0xa508>
    c4f8:	ldr	r1, [pc, #2760]	; cfc8 <ippGetInteger@plt+0xaffc>
    c4fc:	ldr	r0, [sp, #32]
    c500:	add	r1, pc, r1
    c504:	bl	1ee8 <cupsFilePuts@plt>
    c508:	b	a2c8 <ippGetInteger@plt+0x82fc>
    c50c:	ldr	r4, [sp, #32]
    c510:	ldr	r1, [pc, #2740]	; cfcc <ippGetInteger@plt+0xb000>
    c514:	mov	r0, r4
    c518:	add	r1, pc, r1
    c51c:	bl	1ee8 <cupsFilePuts@plt>
    c520:	ldr	r1, [pc, #2728]	; cfd0 <ippGetInteger@plt+0xb004>
    c524:	add	r2, sp, #25600	; 0x6400
    c528:	add	r2, r2, #244	; 0xf4
    c52c:	add	r1, pc, r1
    c530:	mov	r0, r4
    c534:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    c538:	b	a220 <ippGetInteger@plt+0x8254>
    c53c:	ldr	r5, [sp, #32]
    c540:	ldr	r1, [pc, #2700]	; cfd4 <ippGetInteger@plt+0xb008>
    c544:	mov	r0, r5
    c548:	add	r1, pc, r1
    c54c:	bl	1ee8 <cupsFilePuts@plt>
    c550:	add	r2, sp, #24576	; 0x6000
    c554:	mov	r1, r4
    c558:	add	r2, r2, #244	; 0xf4
    c55c:	mov	r0, r5
    c560:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    c564:	b	a210 <ippGetInteger@plt+0x8244>
    c568:	str	r0, [sp, #140]	; 0x8c
    c56c:	b	948c <ippGetInteger@plt+0x74c0>
    c570:	ldr	r1, [pc, #2656]	; cfd8 <ippGetInteger@plt+0xb00c>
    c574:	mov	r0, r6
    c578:	add	r1, pc, r1
    c57c:	bl	1a08 <_cups_strcasecmp@plt>
    c580:	clz	r3, r0
    c584:	lsr	r3, r3, #5
    c588:	str	r3, [sp, #144]	; 0x90
    c58c:	b	948c <ippGetInteger@plt+0x74c0>
    c590:	bl	1e94 <cupsFileStdout@plt>
    c594:	mov	r4, r0
    c598:	ldr	r0, [sp, #116]	; 0x74
    c59c:	bl	1c00 <ippOpString@plt>
    c5a0:	ldr	r1, [pc, #2612]	; cfdc <ippGetInteger@plt+0xb010>
    c5a4:	add	r1, pc, r1
    c5a8:	mov	r2, r0
    c5ac:	mov	r0, r4
    c5b0:	bl	1dc8 <cupsFilePrintf@plt>
    c5b4:	ldr	r3, [sp, #84]	; 0x54
    c5b8:	ldr	r3, [r3, #16]
    c5bc:	cmp	r3, #0
    c5c0:	str	r3, [sl, #-3108]	; 0xfffff3dc
    c5c4:	beq	a318 <ippGetInteger@plt+0x834c>
    c5c8:	bl	1e94 <cupsFileStdout@plt>
    c5cc:	mov	r3, #0
    c5d0:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    c5d4:	mov	r1, #1
    c5d8:	bl	86dc <ippGetInteger@plt+0x6710>
    c5dc:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    c5e0:	ldr	r3, [r3]
    c5e4:	cmp	r3, #0
    c5e8:	str	r3, [sl, #-3108]	; 0xfffff3dc
    c5ec:	bne	c5c8 <ippGetInteger@plt+0xa5fc>
    c5f0:	b	a318 <ippGetInteger@plt+0x834c>
    c5f4:	ldr	r1, [pc, #2532]	; cfe0 <ippGetInteger@plt+0xb014>
    c5f8:	mov	r0, fp
    c5fc:	add	r1, pc, r1
    c600:	bl	1a08 <_cups_strcasecmp@plt>
    c604:	cmp	r0, #0
    c608:	bne	c710 <ippGetInteger@plt+0xa744>
    c60c:	add	r6, sp, #22528	; 0x5800
    c610:	add	r6, r6, #244	; 0xf4
    c614:	mov	r1, r6
    c618:	mov	r3, r8
    c61c:	mov	r2, #1024	; 0x400
    c620:	mov	r0, r5
    c624:	bl	4664 <ippGetInteger@plt+0x2698>
    c628:	cmp	r0, #0
    c62c:	beq	d45c <ippGetInteger@plt+0xb490>
    c630:	ldr	r1, [pc, #2476]	; cfe4 <ippGetInteger@plt+0xb018>
    c634:	mov	r0, r6
    c638:	add	r1, pc, r1
    c63c:	bl	1ec4 <strcmp@plt>
    c640:	subs	r3, r0, #0
    c644:	str	r3, [sp, #136]	; 0x88
    c648:	beq	948c <ippGetInteger@plt+0x74c0>
    c64c:	ldr	r1, [pc, #2452]	; cfe8 <ippGetInteger@plt+0xb01c>
    c650:	mov	r0, r6
    c654:	add	r1, pc, r1
    c658:	bl	1ec4 <strcmp@plt>
    c65c:	cmp	r0, #0
    c660:	beq	cb04 <ippGetInteger@plt+0xab38>
    c664:	ldr	r1, [pc, #2432]	; cfec <ippGetInteger@plt+0xb020>
    c668:	mov	r0, r6
    c66c:	add	r1, pc, r1
    c670:	bl	1ec4 <strcmp@plt>
    c674:	cmp	r0, #0
    c678:	beq	caf8 <ippGetInteger@plt+0xab2c>
    c67c:	ldr	r1, [pc, #2412]	; cff0 <ippGetInteger@plt+0xb024>
    c680:	mov	r0, r6
    c684:	add	r1, pc, r1
    c688:	bl	1ec4 <strcmp@plt>
    c68c:	cmp	r0, #0
    c690:	beq	caec <ippGetInteger@plt+0xab20>
    c694:	ldr	r1, [pc, #2392]	; cff4 <ippGetInteger@plt+0xb028>
    c698:	mov	r0, r6
    c69c:	add	r1, pc, r1
    c6a0:	bl	1ec4 <strcmp@plt>
    c6a4:	cmp	r0, #0
    c6a8:	beq	cae0 <ippGetInteger@plt+0xab14>
    c6ac:	ldr	r1, [pc, #2372]	; cff8 <ippGetInteger@plt+0xb02c>
    c6b0:	mov	r0, r6
    c6b4:	add	r1, pc, r1
    c6b8:	bl	1ec4 <strcmp@plt>
    c6bc:	cmp	r0, #0
    c6c0:	bne	cb10 <ippGetInteger@plt+0xab44>
    c6c4:	mov	r3, #22
    c6c8:	str	r3, [sp, #136]	; 0x88
    c6cc:	b	948c <ippGetInteger@plt+0x74c0>
    c6d0:	add	r4, sp, #22528	; 0x5800
    c6d4:	add	r4, r4, #244	; 0xf4
    c6d8:	mov	r1, r4
    c6dc:	mov	r3, r8
    c6e0:	mov	r2, #1024	; 0x400
    c6e4:	mov	r0, r5
    c6e8:	bl	4664 <ippGetInteger@plt+0x2698>
    c6ec:	cmp	r0, #0
    c6f0:	beq	d474 <ippGetInteger@plt+0xb4a8>
    c6f4:	add	r1, sp, #25600	; 0x6400
    c6f8:	mov	r2, r4
    c6fc:	mov	r3, #1024	; 0x400
    c700:	add	r1, r1, #244	; 0xf4
    c704:	ldr	r0, [sp, #36]	; 0x24
    c708:	bl	4244 <ippGetInteger@plt+0x2278>
    c70c:	b	948c <ippGetInteger@plt+0x74c0>
    c710:	ldr	r1, [pc, #2276]	; cffc <ippGetInteger@plt+0xb030>
    c714:	mov	r0, fp
    c718:	add	r1, pc, r1
    c71c:	bl	1a08 <_cups_strcasecmp@plt>
    c720:	cmp	r0, #0
    c724:	bne	c824 <ippGetInteger@plt+0xa858>
    c728:	mov	r3, r8
    c72c:	mov	r2, #512	; 0x200
    c730:	ldr	r1, [sp, #128]	; 0x80
    c734:	mov	r0, r5
    c738:	bl	4664 <ippGetInteger@plt+0x2698>
    c73c:	cmp	r0, #0
    c740:	bne	948c <ippGetInteger@plt+0x74c0>
    c744:	ldr	r1, [pc, #2228]	; d000 <ippGetInteger@plt+0xb034>
    c748:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c74c:	ldr	r0, [sp, #32]
    c750:	add	r1, pc, r1
    c754:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c758:	b	961c <ippGetInteger@plt+0x7650>
    c75c:	ldr	r1, [pc, #2208]	; d004 <ippGetInteger@plt+0xb038>
    c760:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    c764:	mov	r2, r6
    c768:	ldr	r0, [sp, #32]
    c76c:	add	r1, pc, r1
    c770:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c774:	b	8ef0 <ippGetInteger@plt+0x6f24>
    c778:	mov	r0, r9
    c77c:	bl	1a74 <ippFirstAttribute@plt>
    c780:	cmp	r0, #0
    c784:	str	r0, [sl, #-3108]	; 0xfffff3dc
    c788:	beq	bbc4 <ippGetInteger@plt+0x9bf8>
    c78c:	add	r5, sp, #1264	; 0x4f0
    c790:	add	r5, r5, #8
    c794:	b	c7ac <ippGetInteger@plt+0xa7e0>
    c798:	mov	r0, r9
    c79c:	bl	199c <ippNextAttribute@plt>
    c7a0:	cmp	r0, #0
    c7a4:	str	r0, [sl, #-3108]	; 0xfffff3dc
    c7a8:	beq	bbc4 <ippGetInteger@plt+0x9bf8>
    c7ac:	bl	1ab0 <ippGetName@plt>
    c7b0:	subs	r8, r0, #0
    c7b4:	beq	c798 <ippGetInteger@plt+0xa7cc>
    c7b8:	sub	r6, r5, #580	; 0x244
    c7bc:	mov	r7, r5
    c7c0:	ldr	r5, [sp, #56]	; 0x38
    c7c4:	mov	r4, #0
    c7c8:	mov	r1, r8
    c7cc:	ldr	r0, [r6], #4
    c7d0:	bl	1ec4 <strcmp@plt>
    c7d4:	cmp	r0, #0
    c7d8:	beq	c7f0 <ippGetInteger@plt+0xa824>
    c7dc:	add	r4, r4, #1
    c7e0:	cmp	r5, r4
    c7e4:	bne	c7c8 <ippGetInteger@plt+0xa7fc>
    c7e8:	mov	r5, r7
    c7ec:	b	c798 <ippGetInteger@plt+0xa7cc>
    c7f0:	mov	r5, r7
    c7f4:	mov	r7, r0
    c7f8:	bl	1e94 <cupsFileStdout@plt>
    c7fc:	mov	r3, r7
    c800:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    c804:	mov	r1, #1
    c808:	bl	86dc <ippGetInteger@plt+0x6710>
    c80c:	b	c798 <ippGetInteger@plt+0xa7cc>
    c810:	ldr	r3, [pc, #2032]	; d008 <ippGetInteger@plt+0xb03c>
    c814:	mov	r2, #21
    c818:	add	r3, pc, r3
    c81c:	str	r2, [r3, #4]
    c820:	b	8980 <ippGetInteger@plt+0x69b4>
    c824:	ldr	r1, [pc, #2016]	; d00c <ippGetInteger@plt+0xb040>
    c828:	mov	r0, fp
    c82c:	add	r1, pc, r1
    c830:	bl	1a08 <_cups_strcasecmp@plt>
    c834:	subs	r6, r0, #0
    c838:	bne	c908 <ippGetInteger@plt+0xa93c>
    c83c:	add	r4, sp, #22528	; 0x5800
    c840:	add	r4, r4, #244	; 0xf4
    c844:	mov	r1, r4
    c848:	mov	r3, r8
    c84c:	mov	r2, #1024	; 0x400
    c850:	mov	r0, r5
    c854:	bl	4664 <ippGetInteger@plt+0x2698>
    c858:	cmp	r0, #0
    c85c:	beq	c8f0 <ippGetInteger@plt+0xa924>
    c860:	mov	r2, r4
    c864:	mov	r3, #1024	; 0x400
    c868:	mov	r1, fp
    c86c:	ldr	r0, [sp, #36]	; 0x24
    c870:	bl	4244 <ippGetInteger@plt+0x2278>
    c874:	mov	r0, fp
    c878:	bl	1f18 <ippOpValue@plt>
    c87c:	cmn	r0, #1
    c880:	str	r0, [sp, #116]	; 0x74
    c884:	bne	948c <ippGetInteger@plt+0x74c0>
    c888:	mov	r2, r6
    c88c:	mov	r1, r6
    c890:	mov	r0, fp
    c894:	bl	1a14 <strtol@plt>
    c898:	subs	r3, r0, #0
    c89c:	str	r3, [sp, #116]	; 0x74
    c8a0:	bne	948c <ippGetInteger@plt+0x74c0>
    c8a4:	ldr	r1, [pc, #1892]	; d010 <ippGetInteger@plt+0xb044>
    c8a8:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    c8ac:	mov	r2, fp
    c8b0:	ldr	r0, [sp, #32]
    c8b4:	add	r1, pc, r1
    c8b8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c8bc:	b	961c <ippGetInteger@plt+0x7650>
    c8c0:	mov	r6, r0
    c8c4:	mov	r0, r9
    c8c8:	bl	1d08 <cupsFileClose@plt>
    c8cc:	ldr	r3, [sp, #88]	; 0x58
    c8d0:	ldr	r2, [r3]
    c8d4:	b	a470 <ippGetInteger@plt+0x84a4>
    c8d8:	ldr	r1, [pc, #1844]	; d014 <ippGetInteger@plt+0xb048>
    c8dc:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c8e0:	ldr	r0, [sp, #32]
    c8e4:	add	r1, pc, r1
    c8e8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c8ec:	b	8ef0 <ippGetInteger@plt+0x6f24>
    c8f0:	ldr	r1, [pc, #1824]	; d018 <ippGetInteger@plt+0xb04c>
    c8f4:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c8f8:	ldr	r0, [sp, #32]
    c8fc:	add	r1, pc, r1
    c900:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c904:	b	961c <ippGetInteger@plt+0x7650>
    c908:	ldr	r1, [pc, #1804]	; d01c <ippGetInteger@plt+0xb050>
    c90c:	mov	r0, fp
    c910:	add	r1, pc, r1
    c914:	bl	1a08 <_cups_strcasecmp@plt>
    c918:	cmp	r0, #0
    c91c:	bne	c9f8 <ippGetInteger@plt+0xaa2c>
    c920:	mov	r3, r8
    c924:	mov	r2, #1024	; 0x400
    c928:	mov	r1, fp
    c92c:	mov	r0, r5
    c930:	bl	4664 <ippGetInteger@plt+0x2698>
    c934:	cmp	r0, #0
    c938:	beq	c9e0 <ippGetInteger@plt+0xaa14>
    c93c:	mov	r0, fp
    c940:	bl	1a44 <ippTagValue@plt>
    c944:	cmp	r0, #15
    c948:	movle	r3, #0
    c94c:	movgt	r3, #1
    c950:	cmp	r0, #0
    c954:	moveq	r3, #1
    c958:	cmp	r3, #0
    c95c:	mov	r4, r0
    c960:	bne	c9c4 <ippGetInteger@plt+0xa9f8>
    c964:	ldr	r3, [sl, #-3112]	; 0xfffff3d8
    c968:	cmp	r3, r0
    c96c:	beq	c9b8 <ippGetInteger@plt+0xa9ec>
    c970:	str	r4, [sl, #-3112]	; 0xfffff3d8
    c974:	b	948c <ippGetInteger@plt+0x74c0>
    c978:	ldr	r1, [pc, #1696]	; d020 <ippGetInteger@plt+0xb054>
    c97c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c980:	ldr	r0, [sp, #32]
    c984:	add	r1, pc, r1
    c988:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c98c:	b	961c <ippGetInteger@plt+0x7650>
    c990:	ldr	r1, [pc, #1676]	; d024 <ippGetInteger@plt+0xb058>
    c994:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    c998:	mov	r2, r6
    c99c:	ldr	r0, [sp, #32]
    c9a0:	add	r1, pc, r1
    c9a4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c9a8:	b	961c <ippGetInteger@plt+0x7650>
    c9ac:	mov	r3, #1
    c9b0:	str	r3, [sp, #140]	; 0x8c
    c9b4:	b	948c <ippGetInteger@plt+0x74c0>
    c9b8:	ldr	r0, [sp, #84]	; 0x54
    c9bc:	bl	19a8 <ippAddSeparator@plt>
    c9c0:	b	c970 <ippGetInteger@plt+0xa9a4>
    c9c4:	ldr	r1, [pc, #1628]	; d028 <ippGetInteger@plt+0xb05c>
    c9c8:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    c9cc:	mov	r2, fp
    c9d0:	ldr	r0, [sp, #32]
    c9d4:	add	r1, pc, r1
    c9d8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c9dc:	b	961c <ippGetInteger@plt+0x7650>
    c9e0:	ldr	r1, [pc, #1604]	; d02c <ippGetInteger@plt+0xb060>
    c9e4:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    c9e8:	ldr	r0, [sp, #32]
    c9ec:	add	r1, pc, r1
    c9f0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    c9f4:	b	961c <ippGetInteger@plt+0x7650>
    c9f8:	ldr	r1, [pc, #1584]	; d030 <ippGetInteger@plt+0xb064>
    c9fc:	mov	r0, fp
    ca00:	add	r1, pc, r1
    ca04:	bl	1a08 <_cups_strcasecmp@plt>
    ca08:	cmp	r0, #0
    ca0c:	bne	9550 <ippGetInteger@plt+0x7584>
    ca10:	add	r4, sp, #22528	; 0x5800
    ca14:	add	r4, r4, #244	; 0xf4
    ca18:	mov	r1, r4
    ca1c:	mov	r3, r8
    ca20:	mov	r2, #1024	; 0x400
    ca24:	mov	r0, r5
    ca28:	bl	4664 <ippGetInteger@plt+0x2698>
    ca2c:	cmp	r0, #0
    ca30:	beq	d4c4 <ippGetInteger@plt+0xb4f8>
    ca34:	mov	r2, r4
    ca38:	mov	r3, #1024	; 0x400
    ca3c:	mov	r1, fp
    ca40:	ldr	r0, [sp, #36]	; 0x24
    ca44:	bl	4244 <ippGetInteger@plt+0x2278>
    ca48:	bl	1c24 <localeconv@plt>
    ca4c:	ldr	r3, [sp, #44]	; 0x2c
    ca50:	sub	r4, r3, #44	; 0x2c
    ca54:	mov	r1, r4
    ca58:	mov	r2, r0
    ca5c:	mov	r0, fp
    ca60:	bl	1ad4 <_cupsStrScand@plt>
    ca64:	vcmpe.f64	d0, #0.0
    ca68:	vmrs	APSR_nzcv, fpscr
    ca6c:	bmi	d4a8 <ippGetInteger@plt+0xb4dc>
    ca70:	ldr	r6, [sl, #-3116]	; 0xfffff3d4
    ca74:	ldrb	r3, [r6]
    ca78:	cmp	r3, #0
    ca7c:	cmpne	r3, #44	; 0x2c
    ca80:	bne	d4a8 <ippGetInteger@plt+0xb4dc>
    ca84:	vmul.f64	d0, d0, d8
    ca88:	cmp	r3, #44	; 0x2c
    ca8c:	vcvt.u32.f64	s15, d0
    ca90:	vstr	s15, [sp, #132]	; 0x84
    ca94:	ldrne	r3, [sp, #132]	; 0x84
    ca98:	strne	r3, [sp, #156]	; 0x9c
    ca9c:	bne	948c <ippGetInteger@plt+0x74c0>
    caa0:	bl	1c24 <localeconv@plt>
    caa4:	mov	r1, r4
    caa8:	mov	r2, r0
    caac:	add	r0, r6, #1
    cab0:	bl	1ad4 <_cupsStrScand@plt>
    cab4:	vcmpe.f64	d0, #0.0
    cab8:	vmrs	APSR_nzcv, fpscr
    cabc:	bls	d48c <ippGetInteger@plt+0xb4c0>
    cac0:	ldr	r3, [sl, #-3116]	; 0xfffff3d4
    cac4:	ldrb	r3, [r3]
    cac8:	cmp	r3, #0
    cacc:	bne	d48c <ippGetInteger@plt+0xb4c0>
    cad0:	vmul.f64	d0, d0, d8
    cad4:	vcvt.u32.f64	s15, d0
    cad8:	vstr	s15, [sp, #156]	; 0x9c
    cadc:	b	948c <ippGetInteger@plt+0x74c0>
    cae0:	mov	r3, #21
    cae4:	str	r3, [sp, #136]	; 0x88
    cae8:	b	948c <ippGetInteger@plt+0x74c0>
    caec:	mov	r3, #20
    caf0:	str	r3, [sp, #136]	; 0x88
    caf4:	b	948c <ippGetInteger@plt+0x74c0>
    caf8:	mov	r3, #11
    cafc:	str	r3, [sp, #136]	; 0x88
    cb00:	b	948c <ippGetInteger@plt+0x74c0>
    cb04:	mov	r3, #10
    cb08:	str	r3, [sp, #136]	; 0x88
    cb0c:	b	948c <ippGetInteger@plt+0x74c0>
    cb10:	ldr	r1, [pc, #1308]	; d034 <ippGetInteger@plt+0xb068>
    cb14:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    cb18:	mov	r2, r6
    cb1c:	ldr	r0, [sp, #32]
    cb20:	add	r1, pc, r1
    cb24:	bl	4b10 <ippGetInteger@plt+0x2b44>
    cb28:	b	961c <ippGetInteger@plt+0x7650>
    cb2c:	ldr	r3, [r4, #52]	; 0x34
    cb30:	ldr	r2, [sp, #116]	; 0x74
    cb34:	cmp	r3, r2
    cb38:	ble	bea8 <ippGetInteger@plt+0x9edc>
    cb3c:	cmp	r8, #0
    cb40:	bne	b49c <ippGetInteger@plt+0x94d0>
    cb44:	b	afc4 <ippGetInteger@plt+0x8ff8>
    cb48:	str	r4, [sp, #132]	; 0x84
    cb4c:	b	ab7c <ippGetInteger@plt+0x8bb0>
    cb50:	str	r4, [sp, #132]	; 0x84
    cb54:	b	ab74 <ippGetInteger@plt+0x8ba8>
    cb58:	bl	1d14 <__stack_chk_fail@plt>
    cb5c:	ldr	r1, [pc, #1236]	; d038 <ippGetInteger@plt+0xb06c>
    cb60:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    cb64:	ldr	r0, [sp, #32]
    cb68:	add	r1, pc, r1
    cb6c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    cb70:	b	961c <ippGetInteger@plt+0x7650>
    cb74:	str	r4, [sp, #132]	; 0x84
    cb78:	mov	r4, #0
    cb7c:	b	aae4 <ippGetInteger@plt+0x8b18>
    cb80:	ldr	r1, [pc, #1204]	; d03c <ippGetInteger@plt+0xb070>
    cb84:	ldr	r0, [sp, #52]	; 0x34
    cb88:	add	r1, pc, r1
    cb8c:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    cb90:	b	bc98 <ippGetInteger@plt+0x9ccc>
    cb94:	ldr	r1, [pc, #1188]	; d040 <ippGetInteger@plt+0xb074>
    cb98:	mov	r2, sl
    cb9c:	add	r1, pc, r1
    cba0:	ldr	r0, [sp, #52]	; 0x34
    cba4:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    cba8:	b	b480 <ippGetInteger@plt+0x94b4>
    cbac:	cmp	r3, #0
    cbb0:	bne	b480 <ippGetInteger@plt+0x94b4>
    cbb4:	ldr	r3, [r4]
    cbb8:	cmp	r3, #0
    cbbc:	bne	b480 <ippGetInteger@plt+0x94b4>
    cbc0:	mov	r2, sl
    cbc4:	ldr	r1, [sp, #180]	; 0xb4
    cbc8:	ldr	r0, [sp, #52]	; 0x34
    cbcc:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    cbd0:	b	b480 <ippGetInteger@plt+0x94b4>
    cbd4:	ldr	r0, [r5, #8]
    cbd8:	bl	1b64 <ippTagString@plt>
    cbdc:	mov	r3, r6
    cbe0:	mov	r2, sl
    cbe4:	ldr	r1, [sp, #188]	; 0xbc
    cbe8:	str	r0, [sp]
    cbec:	ldr	r0, [sp, #52]	; 0x34
    cbf0:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    cbf4:	b	b7e4 <ippGetInteger@plt+0x9818>
    cbf8:	ldr	r1, [pc, #1092]	; d044 <ippGetInteger@plt+0xb078>
    cbfc:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    cc00:	mov	r2, r6
    cc04:	ldr	r0, [sp, #32]
    cc08:	add	r1, pc, r1
    cc0c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    cc10:	b	961c <ippGetInteger@plt+0x7650>
    cc14:	ldr	r4, [fp, #16]
    cc18:	cmp	r4, #0
    cc1c:	str	r4, [sl, #-3108]	; 0xfffff3dc
    cc20:	beq	ccb0 <ippGetInteger@plt+0xace4>
    cc24:	add	r3, sp, #1264	; 0x4f0
    cc28:	add	r3, r3, #8
    cc2c:	str	r3, [sp, #40]	; 0x28
    cc30:	ldr	r3, [pc, #1040]	; d048 <ippGetInteger@plt+0xb07c>
    cc34:	add	r3, pc, r3
    cc38:	str	r3, [sp, #44]	; 0x2c
    cc3c:	b	cc54 <ippGetInteger@plt+0xac88>
    cc40:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    cc44:	ldr	r4, [r3]
    cc48:	cmp	r4, #0
    cc4c:	str	r4, [sl, #-3108]	; 0xfffff3dc
    cc50:	beq	cea0 <ippGetInteger@plt+0xaed4>
    cc54:	ldr	r7, [r4, #12]
    cc58:	cmp	r7, #0
    cc5c:	beq	cc40 <ippGetInteger@plt+0xac74>
    cc60:	ldr	r3, [sp, #40]	; 0x28
    cc64:	mov	r5, #0
    cc68:	sub	r6, r3, #580	; 0x244
    cc6c:	b	cc80 <ippGetInteger@plt+0xacb4>
    cc70:	ldr	r3, [sp, #56]	; 0x38
    cc74:	add	r5, r5, #1
    cc78:	cmp	r3, r5
    cc7c:	ble	cc40 <ippGetInteger@plt+0xac74>
    cc80:	mov	r1, r7
    cc84:	ldr	r0, [r6], #4
    cc88:	bl	1ec4 <strcmp@plt>
    cc8c:	cmp	r0, #0
    cc90:	bne	cc70 <ippGetInteger@plt+0xaca4>
    cc94:	ldr	r1, [sp, #44]	; 0x2c
    cc98:	mov	r3, r0
    cc9c:	mov	r2, r4
    cca0:	ldr	r1, [r1]
    cca4:	ldr	r0, [sp, #32]
    cca8:	bl	86dc <ippGetInteger@plt+0x6710>
    ccac:	b	cc40 <ippGetInteger@plt+0xac74>
    ccb0:	ldr	r3, [pc, #916]	; d04c <ippGetInteger@plt+0xb080>
    ccb4:	add	r3, pc, r3
    ccb8:	ldr	r3, [r3]
    ccbc:	b	b6c4 <ippGetInteger@plt+0x96f8>
    ccc0:	ldr	r1, [pc, #904]	; d050 <ippGetInteger@plt+0xb084>
    ccc4:	ldr	r0, [sp, #32]
    ccc8:	add	r1, pc, r1
    cccc:	bl	1ee8 <cupsFilePuts@plt>
    ccd0:	ldr	r1, [pc, #892]	; d054 <ippGetInteger@plt+0xb088>
    ccd4:	mov	r3, #0
    ccd8:	add	r1, pc, r1
    ccdc:	str	r3, [sp, #132]	; 0x84
    cce0:	ldr	r4, [sp, #32]
    cce4:	mov	r0, r4
    cce8:	bl	1ee8 <cupsFilePuts@plt>
    ccec:	ldr	r1, [pc, #868]	; d058 <ippGetInteger@plt+0xb08c>
    ccf0:	mov	r0, r4
    ccf4:	add	r1, pc, r1
    ccf8:	bl	1ee8 <cupsFilePuts@plt>
    ccfc:	bl	1c84 <cupsLastError@plt>
    cd00:	bl	1af8 <ippErrorString@plt>
    cd04:	ldr	r1, [pc, #848]	; d05c <ippGetInteger@plt+0xb090>
    cd08:	add	r1, pc, r1
    cd0c:	mov	r2, r0
    cd10:	mov	r0, r4
    cd14:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    cd18:	ldr	r1, [pc, #832]	; d060 <ippGetInteger@plt+0xb094>
    cd1c:	mov	r0, r4
    cd20:	add	r1, pc, r1
    cd24:	bl	1ee8 <cupsFilePuts@plt>
    cd28:	ldr	r1, [pc, #820]	; d064 <ippGetInteger@plt+0xb098>
    cd2c:	mov	r0, r4
    cd30:	add	r1, pc, r1
    cd34:	bl	1ee8 <cupsFilePuts@plt>
    cd38:	ldr	r1, [pc, #808]	; d068 <ippGetInteger@plt+0xb09c>
    cd3c:	mov	r0, r4
    cd40:	add	r1, pc, r1
    cd44:	bl	1ee8 <cupsFilePuts@plt>
    cd48:	cmp	fp, #0
    cd4c:	streq	fp, [sl, #-3108]	; 0xfffff3dc
    cd50:	moveq	r3, fp
    cd54:	beq	cd68 <ippGetInteger@plt+0xad9c>
    cd58:	ldr	r3, [fp, #16]
    cd5c:	cmp	r3, #0
    cd60:	str	r3, [sl, #-3108]	; 0xfffff3dc
    cd64:	ldrne	r3, [r3, #4]
    cd68:	ldr	r2, [sl, #-3108]	; 0xfffff3dc
    cd6c:	str	r3, [sl, #-3112]	; 0xfffff3d8
    cd70:	cmp	r2, #0
    cd74:	beq	cda8 <ippGetInteger@plt+0xaddc>
    cd78:	ldr	r5, [pc, #748]	; d06c <ippGetInteger@plt+0xb0a0>
    cd7c:	add	r4, sp, #208	; 0xd0
    cd80:	add	r5, pc, r5
    cd84:	mov	r3, r4
    cd88:	ldr	r1, [r5]
    cd8c:	ldr	r0, [sp, #32]
    cd90:	bl	86dc <ippGetInteger@plt+0x6710>
    cd94:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    cd98:	ldr	r2, [r3]
    cd9c:	cmp	r2, #0
    cda0:	str	r2, [sl, #-3108]	; 0xfffff3dc
    cda4:	bne	cd84 <ippGetInteger@plt+0xadb8>
    cda8:	ldr	r4, [sp, #32]
    cdac:	ldr	r1, [pc, #700]	; d070 <ippGetInteger@plt+0xb0a4>
    cdb0:	mov	r0, r4
    cdb4:	add	r1, pc, r1
    cdb8:	bl	1ee8 <cupsFilePuts@plt>
    cdbc:	ldr	r1, [pc, #688]	; d074 <ippGetInteger@plt+0xb0a8>
    cdc0:	mov	r0, r4
    cdc4:	add	r1, pc, r1
    cdc8:	bl	1ee8 <cupsFilePuts@plt>
    cdcc:	ldr	r3, [pc, #676]	; d078 <ippGetInteger@plt+0xb0ac>
    cdd0:	ldr	r2, [sp, #124]	; 0x7c
    cdd4:	add	r3, pc, r3
    cdd8:	ldr	r1, [sp, #132]	; 0x84
    cddc:	ldr	r3, [r3]
    cde0:	orr	r8, r2, r1
    cde4:	cmp	r3, #1
    cde8:	beq	ce04 <ippGetInteger@plt+0xae38>
    cdec:	cmp	r3, #2
    cdf0:	bne	ce68 <ippGetInteger@plt+0xae9c>
    cdf4:	bl	1e94 <cupsFileStdout@plt>
    cdf8:	ldr	r3, [sp, #32]
    cdfc:	cmp	r3, r0
    ce00:	beq	ce68 <ippGetInteger@plt+0xae9c>
    ce04:	bl	1e94 <cupsFileStdout@plt>
    ce08:	ldr	r3, [sp, #132]	; 0x84
    ce0c:	cmp	r3, #0
    ce10:	beq	c2a0 <ippGetInteger@plt+0xa2d4>
    ce14:	ldr	r4, [pc, #608]	; d07c <ippGetInteger@plt+0xb0b0>
    ce18:	ldr	r1, [pc, #608]	; d080 <ippGetInteger@plt+0xb0b4>
    ce1c:	add	r4, pc, r4
    ce20:	add	r1, pc, r1
    ce24:	bl	1ee8 <cupsFilePuts@plt>
    ce28:	ldr	r3, [r4, #292]	; 0x124
    ce2c:	ldr	r2, [sp, #124]	; 0x7c
    ce30:	cmp	r3, #0
    ce34:	cmpne	fp, #0
    ce38:	orr	r8, r2, #1
    ce3c:	bne	c378 <ippGetInteger@plt+0xa3ac>
    ce40:	ldr	r3, [pc, #572]	; d084 <ippGetInteger@plt+0xb0b8>
    ce44:	add	r3, pc, r3
    ce48:	ldr	r3, [r3]
    ce4c:	b	c0f0 <ippGetInteger@plt+0xa124>
    ce50:	ldr	r1, [pc, #560]	; d088 <ippGetInteger@plt+0xb0bc>
    ce54:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    ce58:	ldr	r0, [sp, #32]
    ce5c:	add	r1, pc, r1
    ce60:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ce64:	b	961c <ippGetInteger@plt+0x7650>
    ce68:	ldr	r3, [pc, #540]	; d08c <ippGetInteger@plt+0xb0c0>
    ce6c:	ldr	r2, [sp, #132]	; 0x84
    ce70:	add	r3, pc, r3
    ce74:	cmp	r2, #0
    ce78:	ldr	r3, [r3]
    ce7c:	bne	c0f0 <ippGetInteger@plt+0xa124>
    ce80:	b	b648 <ippGetInteger@plt+0x967c>
    ce84:	ldr	r1, [pc, #516]	; d090 <ippGetInteger@plt+0xb0c4>
    ce88:	str	r8, [sp]
    ce8c:	mov	r2, sl
    ce90:	add	r1, pc, r1
    ce94:	ldr	r0, [sp, #52]	; 0x34
    ce98:	bl	3b58 <ippGetInteger@plt+0x1b8c>
    ce9c:	b	b480 <ippGetInteger@plt+0x94b4>
    cea0:	ldr	r3, [pc, #492]	; d094 <ippGetInteger@plt+0xb0c8>
    cea4:	add	r3, pc, r3
    cea8:	ldr	r3, [r3]
    ceac:	b	b6c4 <ippGetInteger@plt+0x96f8>
    ceb0:	ldr	r3, [pc, #480]	; d098 <ippGetInteger@plt+0xb0cc>
    ceb4:	add	r3, pc, r3
    ceb8:	ldr	r3, [r3]
    cebc:	b	c0f0 <ippGetInteger@plt+0xa124>
    cec0:	ldr	r1, [pc, #468]	; d09c <ippGetInteger@plt+0xb0d0>
    cec4:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    cec8:	ldr	r0, [sp, #32]
    cecc:	add	r1, pc, r1
    ced0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ced4:	b	8ef0 <ippGetInteger@plt+0x6f24>
    ced8:	ldr	r1, [pc, #448]	; d0a0 <ippGetInteger@plt+0xb0d4>
    cedc:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    cee0:	ldr	r0, [sp, #32]
    cee4:	add	r1, pc, r1
    cee8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ceec:	b	961c <ippGetInteger@plt+0x7650>
    cef0:	ldr	r0, [sp, #52]	; 0x34
    cef4:	bl	1f3c <cupsArrayFirst@plt>
    cef8:	subs	r5, r0, #0
    cefc:	beq	d220 <ippGetInteger@plt+0xb254>
    cf00:	ldr	r4, [pc, #412]	; d0a4 <ippGetInteger@plt+0xb0d8>
    cf04:	add	r4, pc, r4
    cf08:	bl	1e94 <cupsFileStdout@plt>
    cf0c:	mov	r2, r5
    cf10:	mov	r1, r4
    cf14:	bl	1dc8 <cupsFilePrintf@plt>
    cf18:	ldr	r0, [sp, #52]	; 0x34
    cf1c:	bl	1b88 <cupsArrayNext@plt>
    cf20:	subs	r5, r0, #0
    cf24:	bne	cf08 <ippGetInteger@plt+0xaf3c>
    cf28:	ldr	r3, [pc, #376]	; d0a8 <ippGetInteger@plt+0xb0dc>
    cf2c:	str	r5, [sp, #88]	; 0x58
    cf30:	add	r3, pc, r3
    cf34:	ldr	r8, [sp, #124]	; 0x7c
    cf38:	ldr	r3, [r3]
    cf3c:	b	c408 <ippGetInteger@plt+0xa43c>
    cf40:	andeq	r4, r0, r8, ror #23
    cf44:	andeq	r4, r0, ip, ror #21
    cf48:	ldrdeq	r4, [r0], -r8
    cf4c:	andeq	r4, r0, ip, asr #31
    cf50:	andeq	r6, r1, ip, asr #30
    cf54:	andeq	r6, r1, r0, asr #30
    cf58:	andeq	r6, r1, ip, lsl #30
    cf5c:	ldrdeq	r6, [r1], -r0
    cf60:	andeq	r4, r0, ip, lsl #23
    cf64:	andeq	r3, r0, r0, lsl #16
    cf68:			; <UNDEFINED> instruction: 0x000049bc
    cf6c:	andeq	r3, r0, r4, asr r7
    cf70:	andeq	r3, r0, r4, ror r7
    cf74:	andeq	r5, r0, ip, lsl #18
    cf78:	andeq	r5, r0, r4, lsl #18
    cf7c:	andeq	r5, r0, ip, lsl #18
    cf80:	andeq	r3, r0, r8, asr r7
    cf84:	strdeq	r5, [r0], -ip
    cf88:	andeq	r5, r0, ip, lsl #18
    cf8c:	andeq	r0, r0, ip, lsr r2
    cf90:	andeq	r6, r0, r8, ror #2
    cf94:	andeq	r6, r1, ip, lsl #27
    cf98:	andeq	r6, r0, r4, ror r1
    cf9c:	andeq	r6, r0, ip, lsl #2
    cfa0:	andeq	r6, r0, r8, lsl #2
    cfa4:	andeq	r6, r1, r8, lsl #26
    cfa8:	muleq	r1, r8, ip
    cfac:	andeq	r6, r0, r0, asr #32
    cfb0:	andeq	r6, r0, ip, lsr r0
    cfb4:	andeq	r6, r1, r0, lsl ip
    cfb8:	andeq	r5, r0, r8, ror #13
    cfbc:	andeq	r4, r0, r8, ror r7
    cfc0:	andeq	r3, r0, r8, lsr #7
    cfc4:	andeq	r6, r1, r8, lsr fp
    cfc8:	andeq	r4, r0, r4, asr #6
    cfcc:	strdeq	r5, [r0], -r4
    cfd0:	andeq	r3, r0, r8, lsl #8
    cfd4:			; <UNDEFINED> instruction: 0x000054b0
    cfd8:	andeq	r4, r0, ip, ror r5
    cfdc:	andeq	r5, r0, r8, lsl #10
    cfe0:	andeq	r4, r0, r4, lsr #14
    cfe4:	andeq	r4, r0, ip, lsr #20
    cfe8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    cfec:	andeq	r4, r0, r0, asr #13
    cff0:	andeq	r4, r0, ip, lsr #13
    cff4:	muleq	r0, r8, r6
    cff8:	andeq	r4, r0, r4, lsl #13
    cffc:	andeq	r4, r0, r0, asr r9
    d000:	andeq	r4, r0, r4, lsr #18
    d004:	ldrdeq	r4, [r0], -r0
    d008:	andeq	r6, r1, r8, ror #15
    d00c:	andeq	r4, r0, ip, ror #16
    d010:	andeq	r4, r0, r4, lsl r8
    d014:	andeq	r4, r0, r8, lsl r4
    d018:	andeq	r4, r0, r8, lsr #15
    d01c:	ldrdeq	r4, [r0], -ip
    d020:	andeq	r4, r0, r8, ror r3
    d024:	andeq	r4, r0, r8, lsr r3
    d028:	andeq	r4, r0, r0, asr #14
    d02c:	andeq	r4, r0, r8, lsl #14
    d030:	andeq	r4, r0, r4, lsr r7
    d034:	andeq	r4, r0, ip, lsl r2
    d038:	andeq	r4, r0, ip, lsr #8
    d03c:	andeq	r5, r0, r0, ror r7
    d040:	andeq	r5, r0, r4, asr #13
    d044:	andeq	r4, r0, r0, lsl #6
    d048:	andeq	r6, r1, ip, asr #7
    d04c:	andeq	r6, r1, ip, asr #6
    d050:	andeq	r2, r0, r8, lsr ip
    d054:	andeq	r2, r0, r0, lsl ip
    d058:	ldrdeq	r4, [r0], -r8
    d05c:	andeq	r2, r0, ip, lsr #24
    d060:	andeq	r4, r0, ip, asr #27
    d064:	andeq	r2, r0, r0, lsr #23
    d068:	andeq	r2, r0, r8, lsl #22
    d06c:	andeq	r6, r1, r0, lsl #5
    d070:	muleq	r0, r0, sl
    d074:	andeq	r2, r0, r0, lsr fp
    d078:	andeq	r6, r1, ip, lsr #4
    d07c:	strdeq	r6, [r1], -r0
    d080:	andeq	r5, r0, r0, lsl #12
    d084:			; <UNDEFINED> instruction: 0x000161bc
    d088:	andeq	r4, r0, r8, ror #2
    d08c:	muleq	r1, r0, r1
    d090:	andeq	r5, r0, r0, lsr #9
    d094:	andeq	r6, r1, ip, asr r1
    d098:	andeq	r6, r1, ip, asr #2
    d09c:	andeq	r3, r0, ip, ror sp
    d0a0:	andeq	r4, r0, ip, asr #32
    d0a4:			; <UNDEFINED> instruction: 0x000054bc
    d0a8:	ldrdeq	r6, [r1], -r0
    d0ac:	andeq	r5, r0, r8, lsr #4
    d0b0:	andeq	r2, r0, ip, lsr r7
    d0b4:	andeq	r2, r0, r4, lsl #15
    d0b8:	andeq	r5, r1, r8, lsr #28
    d0bc:	andeq	r2, r0, r8, lsl r7
    d0c0:	ldrdeq	r5, [r1], -r8
    d0c4:	andeq	r5, r1, ip, lsl sp
    d0c8:	andeq	r5, r1, ip, ror #25
    d0cc:			; <UNDEFINED> instruction: 0x00015cb4
    d0d0:	andeq	r5, r1, r8, lsl #25
    d0d4:	andeq	r2, r0, r8, ror #9
    d0d8:			; <UNDEFINED> instruction: 0x000024b8
    d0dc:	andeq	r3, r0, r4, lsr #18
    d0e0:	andeq	r3, r0, r8, lsl #22
    d0e4:	strdeq	r3, [r0], -r4
    d0e8:	andeq	r3, r0, r0, asr #23
    d0ec:	andeq	r3, r0, r0, asr #25
    d0f0:	andeq	r3, r0, r4, lsr #25
    d0f4:	andeq	r3, r0, ip, ror #24
    d0f8:	andeq	r3, r0, r8, ror #28
    d0fc:	andeq	r3, r0, ip, lsl #28
    d100:	andeq	r3, r0, r4, lsr #28
    d104:	andeq	r3, r0, r4, asr #22
    d108:	andeq	r2, r0, r4, ror #26
    d10c:	andeq	r3, r0, r8, lsl fp
    d110:	andeq	r2, r0, r4, lsl #28
    d114:	andeq	r3, r0, r4, lsr #18
    d118:	andeq	r1, r0, ip, ror #30
    d11c:	strdeq	r2, [r0], -ip
    d120:	andeq	r1, r0, ip, lsr pc
    d124:	andeq	r3, r0, r8, asr #15
    d128:	andeq	r2, r0, ip, asr #22
    d12c:	muleq	r0, r0, lr
    d130:	strdeq	r3, [r0], -ip
    d134:	andeq	r1, r0, ip, lsl lr
    d138:	andeq	r2, r0, ip, lsr #21
    d13c:	andeq	r2, r0, r0, asr sl
    d140:	andeq	r3, r0, ip, asr #11
    d144:	andeq	r3, r0, r0, asr #6
    d148:	andeq	r3, r0, r4, lsl #6
    d14c:			; <UNDEFINED> instruction: 0x000034b8
    d150:	andeq	r3, r0, r0, lsl r5
    d154:	andeq	r3, r0, r0, lsr #5
    d158:	andeq	r3, r0, r0, ror #4
    d15c:	andeq	r3, r0, r4, lsl #8
    d160:	andeq	r3, r0, ip, asr #7
    d164:	muleq	r0, r8, r3
    d168:			; <UNDEFINED> instruction: 0x000033bc
    d16c:	andeq	r3, r0, ip, lsr #7
    d170:	muleq	r0, r4, r3
    d174:	andeq	r2, r0, ip, lsr ip
    d178:	ldr	r4, [sp, #32]
    d17c:	ldr	r1, [pc, #-216]	; d0ac <ippGetInteger@plt+0xb0e0>
    d180:	mov	r0, r4
    d184:	add	r1, pc, r1
    d188:	bl	1ee8 <cupsFilePuts@plt>
    d18c:	ldr	r1, [pc, #-228]	; d0b0 <ippGetInteger@plt+0xb0e4>
    d190:	mov	r0, r4
    d194:	add	r1, pc, r1
    d198:	bl	1ee8 <cupsFilePuts@plt>
    d19c:	ldr	r0, [sp, #52]	; 0x34
    d1a0:	bl	1f3c <cupsArrayFirst@plt>
    d1a4:	subs	r2, r0, #0
    d1a8:	beq	d1d0 <ippGetInteger@plt+0xb204>
    d1ac:	ldr	r4, [pc, #-256]	; d0b4 <ippGetInteger@plt+0xb0e8>
    d1b0:	add	r4, pc, r4
    d1b4:	mov	r1, r4
    d1b8:	ldr	r0, [sp, #32]
    d1bc:	bl	3c08 <ippGetInteger@plt+0x1c3c>
    d1c0:	ldr	r0, [sp, #52]	; 0x34
    d1c4:	bl	1b88 <cupsArrayNext@plt>
    d1c8:	subs	r2, r0, #0
    d1cc:	bne	d1b4 <ippGetInteger@plt+0xb1e8>
    d1d0:	ldr	r4, [pc, #-288]	; d0b8 <ippGetInteger@plt+0xb0ec>
    d1d4:	ldr	r1, [pc, #-288]	; d0bc <ippGetInteger@plt+0xb0f0>
    d1d8:	add	r4, pc, r4
    d1dc:	add	r1, pc, r1
    d1e0:	ldr	r0, [sp, #32]
    d1e4:	bl	1ee8 <cupsFilePuts@plt>
    d1e8:	ldr	r3, [r4]
    d1ec:	cmp	r3, #1
    d1f0:	beq	cef0 <ippGetInteger@plt+0xaf24>
    d1f4:	cmp	r3, #2
    d1f8:	bne	c28c <ippGetInteger@plt+0xa2c0>
    d1fc:	bl	1e94 <cupsFileStdout@plt>
    d200:	ldr	r3, [sp, #32]
    d204:	cmp	r3, r0
    d208:	bne	cef0 <ippGetInteger@plt+0xaf24>
    d20c:	mov	r2, #0
    d210:	ldr	r3, [r4]
    d214:	ldr	r8, [sp, #124]	; 0x7c
    d218:	str	r2, [sp, #88]	; 0x58
    d21c:	b	c408 <ippGetInteger@plt+0xa43c>
    d220:	ldr	r3, [pc, #-360]	; d0c0 <ippGetInteger@plt+0xb0f4>
    d224:	str	r5, [sp, #88]	; 0x58
    d228:	add	r3, pc, r3
    d22c:	ldr	r8, [sp, #124]	; 0x7c
    d230:	ldr	r3, [r3]
    d234:	b	c408 <ippGetInteger@plt+0xa43c>
    d238:	mov	fp, r9
    d23c:	mov	r9, r3
    d240:	b	b5e8 <ippGetInteger@plt+0x961c>
    d244:	ldr	r3, [sp, #192]	; 0xc0
    d248:	add	r6, sp, #692	; 0x2b4
    d24c:	sub	r5, r3, #804	; 0x324
    d250:	mov	r4, r5
    d254:	mov	r7, r6
    d258:	mov	r3, #0
    d25c:	str	r3, [sp, #40]	; 0x28
    d260:	ldr	r1, [r7], #4
    d264:	mov	r0, r1
    d268:	str	r1, [sp, #44]	; 0x2c
    d26c:	bl	1e1c <strlen@plt>
    d270:	ldr	r1, [sp, #44]	; 0x2c
    d274:	mov	r2, #0
    d278:	str	r0, [r4], #4
    d27c:	mov	r0, fp
    d280:	bl	1cd8 <ippFindAttribute@plt>
    d284:	cmp	r0, #0
    d288:	str	r0, [sl, #-3108]	; 0xfffff3dc
    d28c:	beq	d2c4 <ippGetInteger@plt+0xb2f8>
    d290:	mov	r2, #0
    d294:	mov	r1, r2
    d298:	bl	1ca8 <ippAttributeString@plt>
    d29c:	ldr	r3, [r4, #-4]
    d2a0:	mov	r2, #0
    d2a4:	ldr	r1, [r7, #-4]
    d2a8:	cmp	r3, r0
    d2ac:	strcc	r0, [r4, #-4]
    d2b0:	mov	r0, fp
    d2b4:	bl	1ba0 <ippFindNextAttribute@plt>
    d2b8:	cmp	r0, #0
    d2bc:	str	r0, [sl, #-3108]	; 0xfffff3dc
    d2c0:	bne	d290 <ippGetInteger@plt+0xb2c4>
    d2c4:	ldr	r3, [sp, #40]	; 0x28
    d2c8:	ldr	r2, [sp, #56]	; 0x38
    d2cc:	add	r3, r3, #1
    d2d0:	cmp	r2, r3
    d2d4:	str	r3, [sp, #40]	; 0x28
    d2d8:	bgt	d260 <ippGetInteger@plt+0xb294>
    d2dc:	ldr	r3, [pc, #-544]	; d0c4 <ippGetInteger@plt+0xb0f8>
    d2e0:	ldr	r2, [sp, #56]	; 0x38
    d2e4:	add	r3, pc, r3
    d2e8:	mov	r1, #0
    d2ec:	ldr	r3, [r3]
    d2f0:	ldr	r0, [sp, #32]
    d2f4:	cmp	r3, #4
    d2f8:	str	r5, [sp]
    d2fc:	mov	r3, r6
    d300:	beq	d3e8 <ippGetInteger@plt+0xb41c>
    d304:	bl	404c <ippGetInteger@plt+0x2080>
    d308:	ldr	r4, [pc, #-584]	; d0c8 <ippGetInteger@plt+0xb0fc>
    d30c:	ldr	r7, [sp, #32]
    d310:	ldr	r3, [fp, #16]
    d314:	add	r4, pc, r4
    d318:	str	r3, [sl, #-3108]	; 0xfffff3dc
    d31c:	ldr	r1, [sl, #-3108]	; 0xfffff3dc
    d320:	cmp	r1, #0
    d324:	beq	d354 <ippGetInteger@plt+0xb388>
    d328:	ldr	r3, [r1, #4]
    d32c:	cmp	r3, #1
    d330:	ble	d344 <ippGetInteger@plt+0xb378>
    d334:	b	d38c <ippGetInteger@plt+0xb3c0>
    d338:	ldr	r3, [r1, #4]
    d33c:	cmp	r3, #1
    d340:	bgt	d388 <ippGetInteger@plt+0xb3bc>
    d344:	ldr	r1, [r1]
    d348:	cmp	r1, #0
    d34c:	bne	d338 <ippGetInteger@plt+0xb36c>
    d350:	str	r1, [sl, #-3108]	; 0xfffff3dc
    d354:	ldr	r3, [pc, #-656]	; d0cc <ippGetInteger@plt+0xb100>
    d358:	add	r3, pc, r3
    d35c:	ldr	r3, [r3, #292]	; 0x124
    d360:	cmp	r3, #0
    d364:	moveq	r3, #1
    d368:	streq	r3, [sp, #88]	; 0x58
    d36c:	beq	b688 <ippGetInteger@plt+0x96bc>
    d370:	ldr	r3, [pc, #-680]	; d0d0 <ippGetInteger@plt+0xb104>
    d374:	mov	r2, #1
    d378:	add	r3, pc, r3
    d37c:	str	r2, [sp, #88]	; 0x58
    d380:	ldr	r3, [r3]
    d384:	b	b6c4 <ippGetInteger@plt+0x96f8>
    d388:	str	r1, [sl, #-3108]	; 0xfffff3dc
    d38c:	ldr	r3, [r4]
    d390:	cmp	r3, #4
    d394:	beq	d3f0 <ippGetInteger@plt+0xb424>
    d398:	str	r5, [sp]
    d39c:	mov	r3, r6
    d3a0:	ldr	r2, [sp, #56]	; 0x38
    d3a4:	mov	r0, r7
    d3a8:	bl	404c <ippGetInteger@plt+0x2080>
    d3ac:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    d3b0:	cmp	r3, #0
    d3b4:	beq	d31c <ippGetInteger@plt+0xb350>
    d3b8:	ldr	r2, [r3, #4]
    d3bc:	cmp	r2, #1
    d3c0:	bgt	d3d4 <ippGetInteger@plt+0xb408>
    d3c4:	b	d31c <ippGetInteger@plt+0xb350>
    d3c8:	ldr	r2, [r3, #4]
    d3cc:	cmp	r2, #1
    d3d0:	ble	d3e0 <ippGetInteger@plt+0xb414>
    d3d4:	ldr	r3, [r3]
    d3d8:	cmp	r3, #0
    d3dc:	bne	d3c8 <ippGetInteger@plt+0xb3fc>
    d3e0:	str	r3, [sl, #-3108]	; 0xfffff3dc
    d3e4:	b	d31c <ippGetInteger@plt+0xb350>
    d3e8:	bl	3e84 <ippGetInteger@plt+0x1eb8>
    d3ec:	b	d308 <ippGetInteger@plt+0xb33c>
    d3f0:	str	r5, [sp]
    d3f4:	mov	r3, r6
    d3f8:	ldr	r2, [sp, #56]	; 0x38
    d3fc:	mov	r0, r7
    d400:	bl	3e84 <ippGetInteger@plt+0x1eb8>
    d404:	b	d3ac <ippGetInteger@plt+0xb3e0>
    d408:	bl	1e94 <cupsFileStdout@plt>
    d40c:	b	ce14 <ippGetInteger@plt+0xae48>
    d410:	ldr	r1, [pc, #-836]	; d0d4 <ippGetInteger@plt+0xb108>
    d414:	ldr	r0, [sp, #32]
    d418:	add	r1, pc, r1
    d41c:	bl	1ee8 <cupsFilePuts@plt>
    d420:	ldr	r1, [pc, #-848]	; d0d8 <ippGetInteger@plt+0xb10c>
    d424:	add	r1, pc, r1
    d428:	b	cce0 <ippGetInteger@plt+0xad14>
    d42c:	ldr	r1, [pc, #-856]	; d0dc <ippGetInteger@plt+0xb110>
    d430:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d434:	ldr	r0, [sp, #32]
    d438:	add	r1, pc, r1
    d43c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d440:	b	8ef0 <ippGetInteger@plt+0x6f24>
    d444:	ldr	r1, [pc, #-876]	; d0e0 <ippGetInteger@plt+0xb114>
    d448:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d44c:	ldr	r0, [sp, #32]
    d450:	add	r1, pc, r1
    d454:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d458:	b	961c <ippGetInteger@plt+0x7650>
    d45c:	ldr	r1, [pc, #-896]	; d0e4 <ippGetInteger@plt+0xb118>
    d460:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d464:	ldr	r0, [sp, #32]
    d468:	add	r1, pc, r1
    d46c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d470:	b	961c <ippGetInteger@plt+0x7650>
    d474:	ldr	r1, [pc, #-916]	; d0e8 <ippGetInteger@plt+0xb11c>
    d478:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d47c:	ldr	r0, [sp, #32]
    d480:	add	r1, pc, r1
    d484:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d488:	b	961c <ippGetInteger@plt+0x7650>
    d48c:	ldr	r1, [pc, #-936]	; d0ec <ippGetInteger@plt+0xb120>
    d490:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    d494:	mov	r2, fp
    d498:	ldr	r0, [sp, #32]
    d49c:	add	r1, pc, r1
    d4a0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d4a4:	b	961c <ippGetInteger@plt+0x7650>
    d4a8:	ldr	r1, [pc, #-960]	; d0f0 <ippGetInteger@plt+0xb124>
    d4ac:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    d4b0:	mov	r2, fp
    d4b4:	ldr	r0, [sp, #32]
    d4b8:	add	r1, pc, r1
    d4bc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d4c0:	b	961c <ippGetInteger@plt+0x7650>
    d4c4:	ldr	r1, [pc, #-984]	; d0f4 <ippGetInteger@plt+0xb128>
    d4c8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d4cc:	ldr	r0, [sp, #32]
    d4d0:	add	r1, pc, r1
    d4d4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d4d8:	b	961c <ippGetInteger@plt+0x7650>
    d4dc:	ldr	r1, [pc, #-1004]	; d0f8 <ippGetInteger@plt+0xb12c>
    d4e0:	mov	r0, fp
    d4e4:	add	r1, pc, r1
    d4e8:	bl	1a08 <_cups_strcasecmp@plt>
    d4ec:	cmp	r0, #0
    d4f0:	bne	dea8 <ippGetInteger@plt+0xbedc>
    d4f4:	add	r6, sp, #22528	; 0x5800
    d4f8:	add	r6, r6, #244	; 0xf4
    d4fc:	mov	r1, r6
    d500:	mov	r3, r8
    d504:	mov	r2, #1024	; 0x400
    d508:	mov	r0, r5
    d50c:	bl	4664 <ippGetInteger@plt+0x2698>
    d510:	cmp	r0, #0
    d514:	beq	de90 <ippGetInteger@plt+0xbec4>
    d518:	add	r4, sp, #26624	; 0x6800
    d51c:	mov	r3, #1024	; 0x400
    d520:	mov	r2, r6
    d524:	mov	r1, fp
    d528:	ldr	r0, [sp, #36]	; 0x24
    d52c:	add	r4, r4, #244	; 0xf4
    d530:	bl	4244 <ippGetInteger@plt+0x2278>
    d534:	mov	r1, r4
    d538:	mov	r2, fp
    d53c:	ldr	r0, [sp, #76]	; 0x4c
    d540:	bl	676c <ippGetInteger@plt+0x47a0>
    d544:	mov	r0, r4
    d548:	mov	r1, #4
    d54c:	bl	1d50 <access@plt>
    d550:	cmp	r0, #0
    d554:	beq	948c <ippGetInteger@plt+0x74c0>
    d558:	ldr	r5, [sp, #32]
    d55c:	ldr	r1, [pc, #-1128]	; d0fc <ippGetInteger@plt+0xb130>
    d560:	mov	r2, r6
    d564:	mov	r0, r5
    d568:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    d56c:	add	r1, pc, r1
    d570:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d574:	ldr	r1, [pc, #-1148]	; d100 <ippGetInteger@plt+0xb134>
    d578:	mov	r2, r4
    d57c:	mov	r0, r5
    d580:	add	r1, pc, r1
    d584:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d588:	b	961c <ippGetInteger@plt+0x7650>
    d58c:	add	r6, sp, #22528	; 0x5800
    d590:	add	r6, r6, #244	; 0xf4
    d594:	mov	r1, r6
    d598:	mov	r3, r8
    d59c:	mov	r2, #1024	; 0x400
    d5a0:	mov	r0, r5
    d5a4:	bl	4664 <ippGetInteger@plt+0x2698>
    d5a8:	cmp	r0, #0
    d5ac:	beq	df84 <ippGetInteger@plt+0xbfb8>
    d5b0:	mov	r2, r6
    d5b4:	mov	r3, #1024	; 0x400
    d5b8:	mov	r1, fp
    d5bc:	ldr	r0, [sp, #36]	; 0x24
    d5c0:	bl	4244 <ippGetInteger@plt+0x2278>
    d5c4:	mov	r2, #0
    d5c8:	sub	r3, r4, #33	; 0x21
    d5cc:	str	r2, [sl, #-3108]	; 0xfffff3dc
    d5d0:	cmp	r3, #40	; 0x28
    d5d4:	addls	pc, pc, r3, lsl #2
    d5d8:	b	df50 <ippGetInteger@plt+0xbf84>
    d5dc:	b	dba4 <ippGetInteger@plt+0xbbd8>
    d5e0:	b	db70 <ippGetInteger@plt+0xbba4>
    d5e4:	b	dba4 <ippGetInteger@plt+0xbbd8>
    d5e8:	b	df50 <ippGetInteger@plt+0xbf84>
    d5ec:	b	df50 <ippGetInteger@plt+0xbf84>
    d5f0:	b	df50 <ippGetInteger@plt+0xbf84>
    d5f4:	b	df50 <ippGetInteger@plt+0xbf84>
    d5f8:	b	df50 <ippGetInteger@plt+0xbf84>
    d5fc:	b	df50 <ippGetInteger@plt+0xbf84>
    d600:	b	df50 <ippGetInteger@plt+0xbf84>
    d604:	b	df50 <ippGetInteger@plt+0xbf84>
    d608:	b	df50 <ippGetInteger@plt+0xbf84>
    d60c:	b	df50 <ippGetInteger@plt+0xbf84>
    d610:	b	df50 <ippGetInteger@plt+0xbf84>
    d614:	b	df50 <ippGetInteger@plt+0xbf84>
    d618:	b	db14 <ippGetInteger@plt+0xbb48>
    d61c:	b	df50 <ippGetInteger@plt+0xbf84>
    d620:	b	d9ac <ippGetInteger@plt+0xb9e0>
    d624:	b	d7c4 <ippGetInteger@plt+0xb7f8>
    d628:	b	d784 <ippGetInteger@plt+0xb7b8>
    d62c:	b	d698 <ippGetInteger@plt+0xb6cc>
    d630:	b	d698 <ippGetInteger@plt+0xb6cc>
    d634:	b	df50 <ippGetInteger@plt+0xbf84>
    d638:	b	df50 <ippGetInteger@plt+0xbf84>
    d63c:	b	df50 <ippGetInteger@plt+0xbf84>
    d640:	b	df50 <ippGetInteger@plt+0xbf84>
    d644:	b	df50 <ippGetInteger@plt+0xbf84>
    d648:	b	df50 <ippGetInteger@plt+0xbf84>
    d64c:	b	df50 <ippGetInteger@plt+0xbf84>
    d650:	b	df50 <ippGetInteger@plt+0xbf84>
    d654:	b	df50 <ippGetInteger@plt+0xbf84>
    d658:	b	df50 <ippGetInteger@plt+0xbf84>
    d65c:	b	d698 <ippGetInteger@plt+0xb6cc>
    d660:	b	d698 <ippGetInteger@plt+0xb6cc>
    d664:	b	df50 <ippGetInteger@plt+0xbf84>
    d668:	b	d698 <ippGetInteger@plt+0xb6cc>
    d66c:	b	d698 <ippGetInteger@plt+0xb6cc>
    d670:	b	d698 <ippGetInteger@plt+0xb6cc>
    d674:	b	d698 <ippGetInteger@plt+0xb6cc>
    d678:	b	d698 <ippGetInteger@plt+0xb6cc>
    d67c:	b	d698 <ippGetInteger@plt+0xb6cc>
    d680:	ldr	r1, [pc, #-1412]	; d104 <ippGetInteger@plt+0xb138>
    d684:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d688:	ldr	r0, [sp, #32]
    d68c:	add	r1, pc, r1
    d690:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d694:	b	961c <ippGetInteger@plt+0x7650>
    d698:	mov	r1, #44	; 0x2c
    d69c:	mov	r0, fp
    d6a0:	bl	1f90 <strchr@plt>
    d6a4:	cmp	r0, #0
    d6a8:	beq	d74c <ippGetInteger@plt+0xb780>
    d6ac:	mov	r3, #1
    d6b0:	mov	r1, #44	; 0x2c
    d6b4:	mov	r0, fp
    d6b8:	str	r3, [sp, #160]	; 0xa0
    d6bc:	str	fp, [sl, #-3028]	; 0xfffff42c
    d6c0:	bl	1f90 <strchr@plt>
    d6c4:	mov	r6, #0
    d6c8:	mov	r3, r0
    d6cc:	b	d714 <ippGetInteger@plt+0xb748>
    d6d0:	cmp	r3, fp
    d6d4:	bls	d6e4 <ippGetInteger@plt+0xb718>
    d6d8:	ldrb	r2, [r3, #-1]
    d6dc:	cmp	r2, #92	; 0x5c
    d6e0:	beq	d76c <ippGetInteger@plt+0xb7a0>
    d6e4:	ldr	r0, [sp, #160]	; 0xa0
    d6e8:	mov	r2, r3
    d6ec:	add	r1, sl, r0, lsl #2
    d6f0:	strb	r6, [r2], #1
    d6f4:	mov	r3, r2
    d6f8:	str	r2, [r1, #-3028]	; 0xfffff42c
    d6fc:	add	r2, r0, #1
    d700:	str	r2, [sp, #160]	; 0xa0
    d704:	mov	r0, r3
    d708:	mov	r1, #44	; 0x2c
    d70c:	bl	1f90 <strchr@plt>
    d710:	mov	r3, r0
    d714:	cmp	r3, #0
    d718:	bne	d6d0 <ippGetInteger@plt+0xb704>
    d71c:	str	r3, [sp, #4]
    d720:	ldr	r3, [sp, #160]	; 0xa0
    d724:	add	r6, sp, #292	; 0x124
    d728:	str	r3, [sp]
    d72c:	str	r6, [sp, #8]
    d730:	mov	r2, r4
    d734:	mov	r3, r7
    d738:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    d73c:	ldr	r0, [sp, #84]	; 0x54
    d740:	bl	1f48 <ippAddStrings@plt>
    d744:	str	r0, [sl, #-3108]	; 0xfffff3dc
    d748:	b	95ec <ippGetInteger@plt+0x7620>
    d74c:	stm	sp, {r0, fp}
    d750:	mov	r2, r4
    d754:	mov	r3, r7
    d758:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    d75c:	ldr	r0, [sp, #84]	; 0x54
    d760:	bl	1c30 <ippAddString@plt>
    d764:	str	r0, [sl, #-3108]	; 0xfffff3dc
    d768:	b	95ec <ippGetInteger@plt+0x7620>
    d76c:	mov	r1, r3
    d770:	sub	r0, r3, #1
    d774:	str	r3, [sp, #172]	; 0xac
    d778:	bl	1d74 <_cups_strcpy@plt>
    d77c:	ldr	r3, [sp, #172]	; 0xac
    d780:	b	d704 <ippGetInteger@plt+0xb738>
    d784:	ldr	r1, [pc, #-1668]	; d108 <ippGetInteger@plt+0xb13c>
    d788:	mov	r0, fp
    d78c:	add	r1, pc, r1
    d790:	bl	1ec4 <strcmp@plt>
    d794:	cmp	r0, #0
    d798:	beq	d840 <ippGetInteger@plt+0xb874>
    d79c:	ldr	r3, [sp, #104]	; 0x68
    d7a0:	cmp	r3, #0
    d7a4:	bne	948c <ippGetInteger@plt+0x74c0>
    d7a8:	ldr	r1, [pc, #-1700]	; d10c <ippGetInteger@plt+0xb140>
    d7ac:	mov	r2, r7
    d7b0:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    d7b4:	ldr	r0, [sp, #32]
    d7b8:	add	r1, pc, r1
    d7bc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d7c0:	b	961c <ippGetInteger@plt+0x7650>
    d7c4:	ldr	lr, [sp, #44]	; 0x2c
    d7c8:	add	r1, sp, #300	; 0x12c
    d7cc:	str	r1, [sp, #12]
    d7d0:	sub	r1, lr, #12
    d7d4:	add	r0, sp, #304	; 0x130
    d7d8:	str	r1, [sp]
    d7dc:	ldr	r1, [pc, #-1748]	; d110 <ippGetInteger@plt+0xb144>
    d7e0:	add	r2, sp, #296	; 0x128
    d7e4:	sub	r4, lr, #16
    d7e8:	sub	ip, lr, #4
    d7ec:	str	r0, [sp, #20]
    d7f0:	add	r6, sp, #292	; 0x124
    d7f4:	sub	r0, lr, #8
    d7f8:	mov	r3, r6
    d7fc:	str	r2, [sp, #4]
    d800:	str	r0, [sp, #8]
    d804:	mov	r2, r4
    d808:	str	ip, [sp, #16]
    d80c:	add	r1, pc, r1
    d810:	mov	r0, fp
    d814:	bl	1f0c <sscanf@plt>
    d818:	subs	r3, r0, #0
    d81c:	andne	r0, r3, #1
    d820:	moveq	r0, #1
    d824:	cmp	r0, #0
    d828:	beq	d984 <ippGetInteger@plt+0xb9b8>
    d82c:	ldr	r3, [sp, #104]	; 0x68
    d830:	cmp	r3, #0
    d834:	beq	d960 <ippGetInteger@plt+0xb994>
    d838:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    d83c:	b	c098 <ippGetInteger@plt+0xa0cc>
    d840:	mov	r3, r8
    d844:	mov	r2, r5
    d848:	ldrd	r0, [sp, #32]
    d84c:	bl	5d58 <ippGetInteger@plt+0x3d8c>
    d850:	subs	r4, r0, #0
    d854:	beq	961c <ippGetInteger@plt+0x7650>
    d858:	mov	r3, r4
    d85c:	mov	r2, r7
    d860:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    d864:	ldr	r0, [sp, #84]	; 0x54
    d868:	bl	19b4 <ippAddCollection@plt>
    d86c:	mov	r3, r0
    d870:	mov	r0, r4
    d874:	str	r3, [sl, #-3104]	; 0xfffff3e0
    d878:	str	r3, [sl, #-3108]	; 0xfffff3dc
    d87c:	bl	1a38 <ippDelete@plt>
    d880:	ldr	r6, [sp, #168]	; 0xa8
    d884:	b	d90c <ippGetInteger@plt+0xb940>
    d888:	mov	r3, r8
    d88c:	mov	r2, #1024	; 0x400
    d890:	mov	r1, fp
    d894:	mov	r0, r5
    d898:	bl	4664 <ippGetInteger@plt+0x2698>
    d89c:	cmp	r0, #0
    d8a0:	beq	daf8 <ippGetInteger@plt+0xbb2c>
    d8a4:	mov	r1, r6
    d8a8:	mov	r0, fp
    d8ac:	bl	1ec4 <strcmp@plt>
    d8b0:	cmp	r0, #0
    d8b4:	bne	daf8 <ippGetInteger@plt+0xbb2c>
    d8b8:	mov	r3, r8
    d8bc:	mov	r2, r5
    d8c0:	ldrd	r0, [sp, #32]
    d8c4:	bl	5d58 <ippGetInteger@plt+0x3d8c>
    d8c8:	subs	r4, r0, #0
    d8cc:	beq	95ec <ippGetInteger@plt+0x7620>
    d8d0:	ldr	r0, [sl, #-3108]	; 0xfffff3dc
    d8d4:	bl	1ac8 <ippGetCount@plt>
    d8d8:	ldr	r1, [sp, #44]	; 0x2c
    d8dc:	mov	r3, r4
    d8e0:	sub	r1, r1, #36	; 0x24
    d8e4:	mov	r2, r0
    d8e8:	ldr	r0, [sp, #84]	; 0x54
    d8ec:	bl	1dbc <ippSetCollection@plt>
    d8f0:	ldr	r3, [sl, #-3108]	; 0xfffff3dc
    d8f4:	mov	r1, r6
    d8f8:	mov	r0, fp
    d8fc:	str	r3, [sl, #-3104]	; 0xfffff3e0
    d900:	bl	1ec4 <strcmp@plt>
    d904:	cmp	r0, #0
    d908:	bne	95ec <ippGetInteger@plt+0x7620>
    d90c:	mov	r0, r5
    d910:	bl	1abc <cupsFileTell@plt>
    d914:	mov	r3, r8
    d918:	mov	r2, #1024	; 0x400
    d91c:	ldr	r4, [sl, #-3120]	; 0xfffff3d0
    d920:	strd	r0, [sp, #160]	; 0xa0
    d924:	mov	r1, fp
    d928:	mov	r0, r5
    d92c:	bl	4664 <ippGetInteger@plt+0x2698>
    d930:	cmp	r0, #0
    d934:	beq	95ec <ippGetInteger@plt+0x7620>
    d938:	ldr	r1, [sp, #152]	; 0x98
    d93c:	mov	r0, fp
    d940:	bl	1ec4 <strcmp@plt>
    d944:	cmp	r0, #0
    d948:	beq	d888 <ippGetInteger@plt+0xb8bc>
    d94c:	ldrd	r2, [sp, #160]	; 0xa0
    d950:	mov	r0, r5
    d954:	bl	1f84 <cupsFileSeek@plt>
    d958:	str	r4, [sl, #-3120]	; 0xfffff3d0
    d95c:	b	95ec <ippGetInteger@plt+0x7620>
    d960:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    d964:	ldr	r1, [pc, #-2136]	; d114 <ippGetInteger@plt+0xb148>
    d968:	str	r2, [sp]
    d96c:	mov	r3, r7
    d970:	mov	r2, fp
    d974:	ldr	r0, [sp, #32]
    d978:	add	r1, pc, r1
    d97c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    d980:	b	961c <ippGetInteger@plt+0x7650>
    d984:	add	r3, r3, r3, lsr #31
    d988:	str	r6, [sp, #4]
    d98c:	str	r4, [sp]
    d990:	asr	r3, r3, #1
    d994:	mov	r2, r7
    d998:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    d99c:	ldr	r0, [sp, #84]	; 0x54
    d9a0:	bl	1e58 <ippAddRanges@plt>
    d9a4:	str	r0, [sl, #-3108]	; 0xfffff3dc
    d9a8:	b	95ec <ippGetInteger@plt+0x7620>
    d9ac:	ldr	r3, [sp, #44]	; 0x2c
    d9b0:	mov	r2, #10
    d9b4:	sub	r6, r3, #24
    d9b8:	mov	r1, r6
    d9bc:	mov	r0, fp
    d9c0:	bl	1a14 <strtol@plt>
    d9c4:	mov	r4, r0
    d9c8:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    d9cc:	cmp	r0, fp
    d9d0:	bls	da80 <ippGetInteger@plt+0xbab4>
    d9d4:	cmp	r4, #0
    d9d8:	ble	da80 <ippGetInteger@plt+0xbab4>
    d9dc:	ldrb	r3, [r0]
    d9e0:	cmp	r3, #120	; 0x78
    d9e4:	movne	r6, r4
    d9e8:	beq	da50 <ippGetInteger@plt+0xba84>
    d9ec:	ldr	r1, [pc, #-2268]	; d118 <ippGetInteger@plt+0xb14c>
    d9f0:	add	r1, pc, r1
    d9f4:	bl	1a08 <_cups_strcasecmp@plt>
    d9f8:	cmp	r0, #0
    d9fc:	beq	da18 <ippGetInteger@plt+0xba4c>
    da00:	ldr	r1, [pc, #-2284]	; d11c <ippGetInteger@plt+0xb150>
    da04:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    da08:	add	r1, pc, r1
    da0c:	bl	1a08 <_cups_strcasecmp@plt>
    da10:	cmp	r0, #0
    da14:	bne	db3c <ippGetInteger@plt+0xbb70>
    da18:	ldr	r1, [pc, #-2304]	; d120 <ippGetInteger@plt+0xb154>
    da1c:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    da20:	add	r1, pc, r1
    da24:	bl	1a08 <_cups_strcasecmp@plt>
    da28:	cmp	r0, #0
    da2c:	bne	dab0 <ippGetInteger@plt+0xbae4>
    da30:	mov	r3, #3
    da34:	stm	sp, {r4, r6}
    da38:	mov	r2, r7
    da3c:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    da40:	ldr	r0, [sp, #84]	; 0x54
    da44:	bl	1db0 <ippAddResolution@plt>
    da48:	str	r0, [sl, #-3108]	; 0xfffff3dc
    da4c:	b	95ec <ippGetInteger@plt+0x7620>
    da50:	mov	r1, r6
    da54:	add	r0, r0, #1
    da58:	mov	r2, #10
    da5c:	bl	1a14 <strtol@plt>
    da60:	mov	r6, r0
    da64:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    da68:	cmp	r0, fp
    da6c:	bls	da80 <ippGetInteger@plt+0xbab4>
    da70:	cmp	r6, #0
    da74:	ble	da80 <ippGetInteger@plt+0xbab4>
    da78:	cmp	r0, #0
    da7c:	bne	d9ec <ippGetInteger@plt+0xba20>
    da80:	ldr	r3, [sp, #104]	; 0x68
    da84:	cmp	r3, #0
    da88:	bne	d838 <ippGetInteger@plt+0xb86c>
    da8c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    da90:	ldr	r1, [pc, #-2420]	; d124 <ippGetInteger@plt+0xb158>
    da94:	str	r2, [sp]
    da98:	mov	r3, r7
    da9c:	mov	r2, fp
    daa0:	ldr	r0, [sp, #32]
    daa4:	add	r1, pc, r1
    daa8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    daac:	b	961c <ippGetInteger@plt+0x7650>
    dab0:	ldr	r1, [pc, #-2448]	; d128 <ippGetInteger@plt+0xb15c>
    dab4:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    dab8:	add	r1, pc, r1
    dabc:	bl	1a08 <_cups_strcasecmp@plt>
    dac0:	cmp	r0, #0
    dac4:	beq	dae0 <ippGetInteger@plt+0xbb14>
    dac8:	ldr	r1, [pc, #-2468]	; d12c <ippGetInteger@plt+0xb160>
    dacc:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    dad0:	add	r1, pc, r1
    dad4:	bl	1a08 <_cups_strcasecmp@plt>
    dad8:	cmp	r0, #0
    dadc:	bne	daec <ippGetInteger@plt+0xbb20>
    dae0:	stm	sp, {r4, r6}
    dae4:	mov	r3, #4
    dae8:	b	da38 <ippGetInteger@plt+0xba6c>
    daec:	stm	sp, {r4, r6}
    daf0:	mov	r3, #0
    daf4:	b	da38 <ippGetInteger@plt+0xba6c>
    daf8:	ldr	r1, [pc, #-2512]	; d130 <ippGetInteger@plt+0xb164>
    dafc:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    db00:	mov	r2, fp
    db04:	ldr	r0, [sp, #32]
    db08:	add	r1, pc, r1
    db0c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    db10:	b	961c <ippGetInteger@plt+0x7650>
    db14:	mov	r0, fp
    db18:	bl	1e1c <strlen@plt>
    db1c:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    db20:	mov	r3, fp
    db24:	mov	r2, r7
    db28:	str	r0, [sp]
    db2c:	ldr	r0, [sp, #84]	; 0x54
    db30:	bl	1ae0 <ippAddOctetString@plt>
    db34:	str	r0, [sl, #-3108]	; 0xfffff3dc
    db38:	b	95ec <ippGetInteger@plt+0x7620>
    db3c:	ldr	r1, [pc, #-2576]	; d134 <ippGetInteger@plt+0xb168>
    db40:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    db44:	add	r1, pc, r1
    db48:	bl	1a08 <_cups_strcasecmp@plt>
    db4c:	cmp	r0, #0
    db50:	beq	da18 <ippGetInteger@plt+0xba4c>
    db54:	ldr	r1, [pc, #-2596]	; d138 <ippGetInteger@plt+0xb16c>
    db58:	ldr	r0, [sl, #-3096]	; 0xfffff3e8
    db5c:	add	r1, pc, r1
    db60:	bl	1a08 <_cups_strcasecmp@plt>
    db64:	cmp	r0, #0
    db68:	bne	da80 <ippGetInteger@plt+0xbab4>
    db6c:	b	da18 <ippGetInteger@plt+0xba4c>
    db70:	ldr	r1, [pc, #-2620]	; d13c <ippGetInteger@plt+0xb170>
    db74:	mov	r0, fp
    db78:	add	r1, pc, r1
    db7c:	bl	1a08 <_cups_strcasecmp@plt>
    db80:	cmp	r0, #0
    db84:	bne	de00 <ippGetInteger@plt+0xbe34>
    db88:	mov	r3, #1
    db8c:	mov	r2, r7
    db90:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    db94:	ldr	r0, [sp, #84]	; 0x54
    db98:	bl	1e88 <ippAddBoolean@plt>
    db9c:	str	r0, [sl, #-3108]	; 0xfffff3dc
    dba0:	b	95ec <ippGetInteger@plt+0x7620>
    dba4:	mov	r1, #44	; 0x2c
    dba8:	mov	r0, fp
    dbac:	bl	1f90 <strchr@plt>
    dbb0:	mov	r6, r0
    dbb4:	bl	1d8c <__ctype_b_loc@plt>
    dbb8:	ldr	r3, [sp, #120]	; 0x78
    dbbc:	cmp	r6, #0
    dbc0:	ldrb	r2, [r3, #-2052]	; 0xfffff7fc
    dbc4:	str	r0, [sp, #172]	; 0xac
    dbc8:	bne	dcd8 <ippGetInteger@plt+0xbd0c>
    dbcc:	ldr	r1, [r0]
    dbd0:	lsl	r3, r2, #1
    dbd4:	ldrh	r3, [r1, r3]
    dbd8:	lsr	r3, r3, #11
    dbdc:	cmp	r2, #45	; 0x2d
    dbe0:	orreq	r3, r3, #1
    dbe4:	tst	r3, #1
    dbe8:	beq	dc8c <ippGetInteger@plt+0xbcc0>
    dbec:	ldr	r3, [sp, #44]	; 0x2c
    dbf0:	mov	r2, r6
    dbf4:	sub	r1, r3, #44	; 0x2c
    dbf8:	mov	r0, fp
    dbfc:	ldr	r6, [sl, #-3112]	; 0xfffff3d8
    dc00:	bl	1a14 <strtol@plt>
    dc04:	mov	r1, r6
    dc08:	mov	r3, r7
    dc0c:	mov	r2, r4
    dc10:	str	r0, [sp]
    dc14:	ldr	r0, [sp, #84]	; 0x54
    dc18:	bl	1d38 <ippAddInteger@plt>
    dc1c:	str	r0, [sl, #-3108]	; 0xfffff3dc
    dc20:	ldr	r3, [sp, #120]	; 0x78
    dc24:	ldrb	r3, [r3, #-2052]	; 0xfffff7fc
    dc28:	cmp	r3, #0
    dc2c:	beq	dc48 <ippGetInteger@plt+0xbc7c>
    dc30:	ldr	r3, [sl, #-3116]	; 0xfffff3d4
    dc34:	cmp	r3, #0
    dc38:	beq	dc48 <ippGetInteger@plt+0xbc7c>
    dc3c:	ldrb	r3, [r3]
    dc40:	cmp	r3, #0
    dc44:	beq	95ec <ippGetInteger@plt+0x7620>
    dc48:	ldr	r3, [sp, #104]	; 0x68
    dc4c:	cmp	r3, #0
    dc50:	bne	d838 <ippGetInteger@plt+0xb86c>
    dc54:	mov	r6, r4
    dc58:	mov	r0, r6
    dc5c:	bl	1b64 <ippTagString@plt>
    dc60:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    dc64:	ldr	r1, [pc, #-2860]	; d140 <ippGetInteger@plt+0xb174>
    dc68:	mov	r4, r7
    dc6c:	str	r3, [sp, #4]
    dc70:	str	r4, [sp]
    dc74:	mov	r3, fp
    dc78:	add	r1, pc, r1
    dc7c:	mov	r2, r0
    dc80:	ldr	r0, [sp, #32]
    dc84:	bl	4b10 <ippGetInteger@plt+0x2b44>
    dc88:	b	961c <ippGetInteger@plt+0x7650>
    dc8c:	mov	r1, fp
    dc90:	mov	r0, r7
    dc94:	str	fp, [sl, #-3116]	; 0xfffff3d4
    dc98:	bl	19c0 <ippEnumValue@plt>
    dc9c:	cmp	r0, #0
    dca0:	blt	dc20 <ippGetInteger@plt+0xbc54>
    dca4:	str	r0, [sp]
    dca8:	mov	r3, r7
    dcac:	mov	r2, r4
    dcb0:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    dcb4:	ldr	r0, [sp, #84]	; 0x54
    dcb8:	bl	1d38 <ippAddInteger@plt>
    dcbc:	ldr	r6, [sl, #-3116]	; 0xfffff3d4
    dcc0:	str	r0, [sl, #-3108]	; 0xfffff3dc
    dcc4:	mov	r0, r6
    dcc8:	bl	1e1c <strlen@plt>
    dccc:	add	r0, r6, r0
    dcd0:	str	r0, [sl, #-3116]	; 0xfffff3d4
    dcd4:	b	dc20 <ippGetInteger@plt+0xbc54>
    dcd8:	ldr	r3, [sp, #172]	; 0xac
    dcdc:	cmp	r2, #45	; 0x2d
    dce0:	lsl	r2, r2, #1
    dce4:	ldr	r1, [r3]
    dce8:	sub	r3, r4, #35	; 0x23
    dcec:	clz	r3, r3
    dcf0:	ldrh	r2, [r1, r2]
    dcf4:	lsr	r3, r3, #5
    dcf8:	moveq	r3, #0
    dcfc:	eor	r2, r2, #2048	; 0x800
    dd00:	ands	r2, r3, r2, lsr #11
    dd04:	bne	df9c <ippGetInteger@plt+0xbfd0>
    dd08:	ldr	r3, [sp, #44]	; 0x2c
    dd0c:	mov	r0, fp
    dd10:	sub	r1, r3, #44	; 0x2c
    dd14:	bl	1a14 <strtol@plt>
    dd18:	mov	r3, #1
    dd1c:	str	r3, [sp, #160]	; 0xa0
    dd20:	ldr	r3, [sp, #44]	; 0x2c
    dd24:	str	r0, [sl, #-3028]	; 0xfffff42c
    dd28:	sub	r3, r3, #44	; 0x2c
    dd2c:	add	r6, sp, #292	; 0x124
    dd30:	str	r3, [sp, #176]	; 0xb0
    dd34:	str	r5, [sp, #180]	; 0xb4
    dd38:	b	dd58 <ippGetInteger@plt+0xbd8c>
    dd3c:	mov	r0, r5
    dd40:	ldr	r1, [sp, #176]	; 0xb0
    dd44:	bl	1a14 <strtol@plt>
    dd48:	ldr	r3, [sp, #160]	; 0xa0
    dd4c:	str	r0, [r6, r3, lsl #2]
    dd50:	add	r3, r3, #1
    dd54:	str	r3, [sp, #160]	; 0xa0
    dd58:	ldr	r3, [sl, #-3116]	; 0xfffff3d4
    dd5c:	cmp	r3, #0
    dd60:	beq	de30 <ippGetInteger@plt+0xbe64>
    dd64:	ldrb	r2, [r3]
    dd68:	cmp	r2, #0
    dd6c:	beq	de30 <ippGetInteger@plt+0xbe64>
    dd70:	ldr	r1, [sp, #160]	; 0xa0
    dd74:	cmp	r1, #100	; 0x64
    dd78:	beq	de30 <ippGetInteger@plt+0xbe64>
    dd7c:	cmp	r2, #44	; 0x2c
    dd80:	addeq	r3, r3, #1
    dd84:	streq	r3, [sl, #-3116]	; 0xfffff3d4
    dd88:	ldr	r5, [sl, #-3116]	; 0xfffff3d4
    dd8c:	ldr	r3, [sp, #172]	; 0xac
    dd90:	ldrb	r1, [r5]
    dd94:	ldr	r0, [r3]
    dd98:	lsl	r2, r1, #1
    dd9c:	ldrh	r2, [r0, r2]
    dda0:	lsr	r2, r2, #11
    dda4:	eor	r2, r2, #1
    dda8:	cmp	r1, #45	; 0x2d
    ddac:	moveq	r2, #0
    ddb0:	andne	r2, r2, #1
    ddb4:	cmp	r2, #0
    ddb8:	beq	dd3c <ippGetInteger@plt+0xbd70>
    ddbc:	cmp	r4, #35	; 0x23
    ddc0:	bne	de30 <ippGetInteger@plt+0xbe64>
    ddc4:	mov	r1, #44	; 0x2c
    ddc8:	mov	r0, r5
    ddcc:	bl	1f90 <strchr@plt>
    ddd0:	cmp	r0, #0
    ddd4:	beq	dfc8 <ippGetInteger@plt+0xbffc>
    ddd8:	mov	r5, r0
    dddc:	mov	r3, #0
    dde0:	strb	r3, [r5], #1
    dde4:	ldr	r1, [sl, #-3116]	; 0xfffff3d4
    dde8:	mov	r0, r7
    ddec:	bl	19c0 <ippEnumValue@plt>
    ddf0:	cmp	r0, #0
    ddf4:	blt	de30 <ippGetInteger@plt+0xbe64>
    ddf8:	str	r5, [sl, #-3116]	; 0xfffff3d4
    ddfc:	b	dd48 <ippGetInteger@plt+0xbd7c>
    de00:	mov	r2, #10
    de04:	mov	r1, #0
    de08:	mov	r0, fp
    de0c:	ldr	r4, [sl, #-3112]	; 0xfffff3d8
    de10:	bl	1a14 <strtol@plt>
    de14:	mov	r1, r4
    de18:	mov	r2, r7
    de1c:	uxtb	r3, r0
    de20:	ldr	r0, [sp, #84]	; 0x54
    de24:	bl	1e88 <ippAddBoolean@plt>
    de28:	str	r0, [sl, #-3108]	; 0xfffff3dc
    de2c:	b	95ec <ippGetInteger@plt+0x7620>
    de30:	ldr	r3, [sp, #160]	; 0xa0
    de34:	str	r6, [sp, #4]
    de38:	str	r3, [sp]
    de3c:	mov	r2, r4
    de40:	mov	r3, r7
    de44:	ldr	r1, [sl, #-3112]	; 0xfffff3d8
    de48:	ldr	r0, [sp, #84]	; 0x54
    de4c:	ldr	r5, [sp, #180]	; 0xb4
    de50:	bl	1978 <ippAddIntegers@plt>
    de54:	str	r0, [sl, #-3108]	; 0xfffff3dc
    de58:	b	dc20 <ippGetInteger@plt+0xbc54>
    de5c:	ldr	r1, [pc, #-3360]	; d144 <ippGetInteger@plt+0xb178>
    de60:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    de64:	mov	r2, fp
    de68:	ldr	r0, [sp, #32]
    de6c:	add	r1, pc, r1
    de70:	bl	4b10 <ippGetInteger@plt+0x2b44>
    de74:	b	961c <ippGetInteger@plt+0x7650>
    de78:	ldr	r1, [pc, #-3384]	; d148 <ippGetInteger@plt+0xb17c>
    de7c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    de80:	ldr	r0, [sp, #32]
    de84:	add	r1, pc, r1
    de88:	bl	4b10 <ippGetInteger@plt+0x2b44>
    de8c:	b	961c <ippGetInteger@plt+0x7650>
    de90:	ldr	r1, [pc, #-3404]	; d14c <ippGetInteger@plt+0xb180>
    de94:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    de98:	ldr	r0, [sp, #32]
    de9c:	add	r1, pc, r1
    dea0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    dea4:	b	961c <ippGetInteger@plt+0x7650>
    dea8:	ldr	r1, [pc, #-3424]	; d150 <ippGetInteger@plt+0xb184>
    deac:	mov	r0, fp
    deb0:	add	r1, pc, r1
    deb4:	bl	1a08 <_cups_strcasecmp@plt>
    deb8:	cmp	r0, #0
    debc:	bne	e068 <ippGetInteger@plt+0xc09c>
    dec0:	ldr	r3, [sp, #64]	; 0x40
    dec4:	cmp	r3, #99	; 0x63
    dec8:	bgt	e028 <ippGetInteger@plt+0xc05c>
    decc:	mov	r3, r8
    ded0:	mov	r2, #1024	; 0x400
    ded4:	mov	r1, fp
    ded8:	mov	r0, r5
    dedc:	bl	4664 <ippGetInteger@plt+0x2698>
    dee0:	cmp	r0, #0
    dee4:	beq	e010 <ippGetInteger@plt+0xc044>
    dee8:	mov	r0, fp
    deec:	bl	1d68 <ippErrorValue@plt>
    def0:	ldr	r3, [sp, #64]	; 0x40
    def4:	mov	r4, #36	; 0x24
    def8:	mla	r4, r4, r3, sl
    defc:	cmn	r0, #1
    df00:	str	r0, [r4, #-1028]	; 0xfffffbfc
    df04:	beq	dfd8 <ippGetInteger@plt+0xc00c>
    df08:	ldr	r0, [sp, #64]	; 0x40
    df0c:	mov	r2, #36	; 0x24
    df10:	add	r3, sp, #2288	; 0x8f0
    df14:	add	r3, r3, #4
    df18:	mla	r1, r2, r0, r3
    df1c:	mov	r3, #0
    df20:	mov	r2, #1000	; 0x3e8
    df24:	add	r0, r0, #1
    df28:	str	r1, [sp, #112]	; 0x70
    df2c:	str	r0, [sp, #64]	; 0x40
    df30:	str	r2, [r1, #24]
    df34:	str	r3, [r1, #12]
    df38:	str	r3, [r1, #16]
    df3c:	str	r3, [r1, #4]
    df40:	str	r3, [r1, #8]
    df44:	str	r3, [r1, #28]
    df48:	str	r3, [r1, #32]
    df4c:	b	948c <ippGetInteger@plt+0x74c0>
    df50:	mov	r6, r4
    df54:	mov	r0, r6
    df58:	bl	1b64 <ippTagString@plt>
    df5c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    df60:	ldr	r1, [pc, #-3604]	; d154 <ippGetInteger@plt+0xb188>
    df64:	mov	r4, r7
    df68:	str	r2, [sp]
    df6c:	mov	r3, r4
    df70:	add	r1, pc, r1
    df74:	mov	r2, r0
    df78:	ldr	r0, [sp, #32]
    df7c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    df80:	b	961c <ippGetInteger@plt+0x7650>
    df84:	ldr	r1, [pc, #-3636]	; d158 <ippGetInteger@plt+0xb18c>
    df88:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    df8c:	ldr	r0, [sp, #32]
    df90:	add	r1, pc, r1
    df94:	bl	4b10 <ippGetInteger@plt+0x2b44>
    df98:	b	961c <ippGetInteger@plt+0x7650>
    df9c:	mov	r3, #0
    dfa0:	strb	r3, [r6]
    dfa4:	mov	r1, fp
    dfa8:	mov	r0, r7
    dfac:	bl	19c0 <ippEnumValue@plt>
    dfb0:	cmp	r0, #0
    dfb4:	movlt	r3, #0
    dfb8:	addge	r6, r6, #1
    dfbc:	strlt	r3, [sl, #-3116]	; 0xfffff3d4
    dfc0:	strge	r6, [sl, #-3116]	; 0xfffff3d4
    dfc4:	b	dd18 <ippGetInteger@plt+0xbd4c>
    dfc8:	mov	r0, r5
    dfcc:	bl	1e1c <strlen@plt>
    dfd0:	add	r5, r5, r0
    dfd4:	b	dde4 <ippGetInteger@plt+0xbe18>
    dfd8:	mov	r2, #0
    dfdc:	mov	r1, r2
    dfe0:	mov	r0, fp
    dfe4:	bl	1a14 <strtol@plt>
    dfe8:	cmp	r0, #0
    dfec:	str	r0, [r4, #-1028]	; 0xfffffbfc
    dff0:	bne	df08 <ippGetInteger@plt+0xbf3c>
    dff4:	ldr	r1, [pc, #-3744]	; d15c <ippGetInteger@plt+0xb190>
    dff8:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    dffc:	mov	r2, fp
    e000:	ldr	r0, [sp, #32]
    e004:	add	r1, pc, r1
    e008:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e00c:	b	961c <ippGetInteger@plt+0x7650>
    e010:	ldr	r1, [pc, #-3768]	; d160 <ippGetInteger@plt+0xb194>
    e014:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e018:	ldr	r0, [sp, #32]
    e01c:	add	r1, pc, r1
    e020:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e024:	b	961c <ippGetInteger@plt+0x7650>
    e028:	ldr	r1, [pc, #-3788]	; d164 <ippGetInteger@plt+0xb198>
    e02c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e030:	add	r1, pc, r1
    e034:	ldr	r0, [sp, #32]
    e038:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e03c:	ldr	r0, [sp, #52]	; 0x34
    e040:	bl	1e70 <cupsArrayDelete@plt>
    e044:	ldr	r0, [sp, #28]
    e048:	bl	1d08 <cupsFileClose@plt>
    e04c:	ldr	r0, [sp, #48]	; 0x30
    e050:	bl	1eb8 <httpClose@plt>
    e054:	ldr	r0, [sp, #84]	; 0x54
    e058:	bl	1a38 <ippDelete@plt>
    e05c:	mov	r0, #0
    e060:	bl	1a38 <ippDelete@plt>
    e064:	b	9650 <ippGetInteger@plt+0x7684>
    e068:	ldr	r1, [pc, #-3848]	; d168 <ippGetInteger@plt+0xb19c>
    e06c:	mov	r0, fp
    e070:	add	r1, pc, r1
    e074:	bl	1a08 <_cups_strcasecmp@plt>
    e078:	cmp	r0, #0
    e07c:	beq	e098 <ippGetInteger@plt+0xc0cc>
    e080:	ldr	r1, [pc, #-3868]	; d16c <ippGetInteger@plt+0xb1a0>
    e084:	mov	r0, fp
    e088:	add	r1, pc, r1
    e08c:	bl	1a08 <_cups_strcasecmp@plt>
    e090:	cmp	r0, #0
    e094:	bne	e144 <ippGetInteger@plt+0xc178>
    e098:	ldr	r1, [pc, #-3888]	; d170 <ippGetInteger@plt+0xb1a4>
    e09c:	mov	r0, fp
    e0a0:	add	r1, pc, r1
    e0a4:	bl	1a08 <_cups_strcasecmp@plt>
    e0a8:	cmp	r9, #199	; 0xc7
    e0ac:	clz	r4, r0
    e0b0:	lsr	r4, r4, #5
    e0b4:	bgt	e278 <ippGetInteger@plt+0xc2ac>
    e0b8:	mov	r3, r8
    e0bc:	mov	r2, #1024	; 0x400
    e0c0:	mov	r1, fp
    e0c4:	mov	r0, r5
    e0c8:	bl	4664 <ippGetInteger@plt+0x2698>
    e0cc:	cmp	r0, #0
    e0d0:	beq	e260 <ippGetInteger@plt+0xc294>
    e0d4:	mov	r2, #76	; 0x4c
    e0d8:	add	r7, sp, #5888	; 0x1700
    e0dc:	mul	r6, r2, r9
    e0e0:	add	r7, r7, #4
    e0e4:	add	r3, r7, r6
    e0e8:	mov	r0, r3
    e0ec:	mov	r1, #0
    e0f0:	str	r3, [sp, #100]	; 0x64
    e0f4:	bl	1bb8 <memset@plt>
    e0f8:	ldr	r2, [sp, #120]	; 0x78
    e0fc:	ldr	r1, [sp, #100]	; 0x64
    e100:	add	r9, r9, #1
    e104:	ldrb	r3, [r2, #-2052]	; 0xfffff7fc
    e108:	mov	r2, #1000	; 0x3e8
    e10c:	str	r4, [r1, #8]
    e110:	cmp	r3, #33	; 0x21
    e114:	str	r2, [r1, #52]	; 0x34
    e118:	beq	e1a4 <ippGetInteger@plt+0xc1d8>
    e11c:	cmp	r3, #63	; 0x3f
    e120:	moveq	r3, #1
    e124:	ldreq	r2, [sp, #40]	; 0x28
    e128:	streq	r3, [r7, r6]
    e12c:	subeq	r0, r2, #3
    e130:	movne	r0, fp
    e134:	bl	1fb4 <strdup@plt>
    e138:	ldr	r3, [sp, #100]	; 0x64
    e13c:	str	r0, [r3, #12]
    e140:	b	948c <ippGetInteger@plt+0x74c0>
    e144:	ldr	r1, [pc, #-4056]	; d174 <ippGetInteger@plt+0xb1a8>
    e148:	mov	r0, fp
    e14c:	add	r1, pc, r1
    e150:	bl	1a08 <_cups_strcasecmp@plt>
    e154:	subs	r4, r0, #0
    e158:	bne	e210 <ippGetInteger@plt+0xc244>
    e15c:	mov	r3, r8
    e160:	mov	r2, #1024	; 0x400
    e164:	mov	r1, fp
    e168:	mov	r0, r5
    e16c:	bl	4664 <ippGetInteger@plt+0x2698>
    e170:	cmp	r0, #0
    e174:	beq	e1f8 <ippGetInteger@plt+0xc22c>
    e178:	mov	r1, r4
    e17c:	mov	r2, #10
    e180:	mov	r0, fp
    e184:	bl	1a14 <strtol@plt>
    e188:	cmp	r0, #0
    e18c:	ble	e1dc <ippGetInteger@plt+0xc210>
    e190:	ldr	r3, [sp, #100]	; 0x64
    e194:	cmp	r3, #0
    e198:	beq	e1c4 <ippGetInteger@plt+0xc1f8>
    e19c:	str	r0, [r3, #68]	; 0x44
    e1a0:	b	948c <ippGetInteger@plt+0x74c0>
    e1a4:	mov	r3, #1
    e1a8:	str	r3, [r1, #4]
    e1ac:	ldr	r3, [sp, #40]	; 0x28
    e1b0:	mov	r4, r1
    e1b4:	sub	r0, r3, #3
    e1b8:	bl	1fb4 <strdup@plt>
    e1bc:	str	r0, [r4, #12]
    e1c0:	b	948c <ippGetInteger@plt+0x74c0>
    e1c4:	ldr	r1, [pc, #2832]	; ecdc <ippGetInteger@plt+0xcd10>
    e1c8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e1cc:	ldr	r0, [sp, #32]
    e1d0:	add	r1, pc, r1
    e1d4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e1d8:	b	961c <ippGetInteger@plt+0x7650>
    e1dc:	ldr	r1, [pc, #2812]	; ece0 <ippGetInteger@plt+0xcd14>
    e1e0:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    e1e4:	mov	r2, fp
    e1e8:	ldr	r0, [sp, #32]
    e1ec:	add	r1, pc, r1
    e1f0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e1f4:	b	961c <ippGetInteger@plt+0x7650>
    e1f8:	ldr	r1, [pc, #2788]	; ece4 <ippGetInteger@plt+0xcd18>
    e1fc:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e200:	ldr	r0, [sp, #32]
    e204:	add	r1, pc, r1
    e208:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e20c:	b	961c <ippGetInteger@plt+0x7650>
    e210:	ldr	r1, [pc, #2768]	; ece8 <ippGetInteger@plt+0xcd1c>
    e214:	mov	r0, fp
    e218:	add	r1, pc, r1
    e21c:	bl	1a08 <_cups_strcasecmp@plt>
    e220:	cmp	r0, #0
    e224:	bne	e2c4 <ippGetInteger@plt+0xc2f8>
    e228:	mov	r3, r8
    e22c:	mov	r2, #1024	; 0x400
    e230:	mov	r1, fp
    e234:	mov	r0, r5
    e238:	bl	4664 <ippGetInteger@plt+0x2698>
    e23c:	cmp	r0, #0
    e240:	beq	e2ac <ippGetInteger@plt+0xc2e0>
    e244:	ldr	r4, [sp, #100]	; 0x64
    e248:	cmp	r4, #0
    e24c:	beq	e290 <ippGetInteger@plt+0xc2c4>
    e250:	mov	r0, fp
    e254:	bl	1fb4 <strdup@plt>
    e258:	str	r0, [r4, #40]	; 0x28
    e25c:	b	948c <ippGetInteger@plt+0x74c0>
    e260:	ldr	r1, [pc, #2692]	; ecec <ippGetInteger@plt+0xcd20>
    e264:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e268:	ldr	r0, [sp, #32]
    e26c:	add	r1, pc, r1
    e270:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e274:	b	961c <ippGetInteger@plt+0x7650>
    e278:	ldr	r1, [pc, #2672]	; ecf0 <ippGetInteger@plt+0xcd24>
    e27c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e280:	ldr	r0, [sp, #32]
    e284:	add	r1, pc, r1
    e288:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e28c:	b	961c <ippGetInteger@plt+0x7650>
    e290:	ldr	r4, [sp, #112]	; 0x70
    e294:	cmp	r4, #0
    e298:	beq	e314 <ippGetInteger@plt+0xc348>
    e29c:	mov	r0, fp
    e2a0:	bl	1fb4 <strdup@plt>
    e2a4:	str	r0, [r4, #12]
    e2a8:	b	948c <ippGetInteger@plt+0x74c0>
    e2ac:	ldr	r1, [pc, #2624]	; ecf4 <ippGetInteger@plt+0xcd28>
    e2b0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e2b4:	ldr	r0, [sp, #32]
    e2b8:	add	r1, pc, r1
    e2bc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e2c0:	b	961c <ippGetInteger@plt+0x7650>
    e2c4:	ldr	r1, [pc, #2604]	; ecf8 <ippGetInteger@plt+0xcd2c>
    e2c8:	mov	r0, fp
    e2cc:	add	r1, pc, r1
    e2d0:	bl	1a08 <_cups_strcasecmp@plt>
    e2d4:	cmp	r0, #0
    e2d8:	bne	e360 <ippGetInteger@plt+0xc394>
    e2dc:	mov	r3, r8
    e2e0:	mov	r2, #1024	; 0x400
    e2e4:	mov	r1, fp
    e2e8:	mov	r0, r5
    e2ec:	bl	4664 <ippGetInteger@plt+0x2698>
    e2f0:	cmp	r0, #0
    e2f4:	beq	e348 <ippGetInteger@plt+0xc37c>
    e2f8:	ldr	r4, [sp, #100]	; 0x64
    e2fc:	cmp	r4, #0
    e300:	beq	e32c <ippGetInteger@plt+0xc360>
    e304:	mov	r0, fp
    e308:	bl	1fb4 <strdup@plt>
    e30c:	str	r0, [r4, #44]	; 0x2c
    e310:	b	948c <ippGetInteger@plt+0x74c0>
    e314:	ldr	r1, [pc, #2528]	; ecfc <ippGetInteger@plt+0xcd30>
    e318:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e31c:	ldr	r0, [sp, #32]
    e320:	add	r1, pc, r1
    e324:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e328:	b	961c <ippGetInteger@plt+0x7650>
    e32c:	ldr	r4, [sp, #112]	; 0x70
    e330:	cmp	r4, #0
    e334:	beq	e3b0 <ippGetInteger@plt+0xc3e4>
    e338:	mov	r0, fp
    e33c:	bl	1fb4 <strdup@plt>
    e340:	str	r0, [r4, #16]
    e344:	b	948c <ippGetInteger@plt+0x74c0>
    e348:	ldr	r1, [pc, #2480]	; ed00 <ippGetInteger@plt+0xcd34>
    e34c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e350:	ldr	r0, [sp, #32]
    e354:	add	r1, pc, r1
    e358:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e35c:	b	961c <ippGetInteger@plt+0x7650>
    e360:	ldr	r1, [pc, #2460]	; ed04 <ippGetInteger@plt+0xcd38>
    e364:	mov	r0, fp
    e368:	add	r1, pc, r1
    e36c:	bl	1a08 <_cups_strcasecmp@plt>
    e370:	cmp	r0, #0
    e374:	bne	e3f8 <ippGetInteger@plt+0xc42c>
    e378:	mov	r3, r8
    e37c:	mov	r2, #1024	; 0x400
    e380:	mov	r1, fp
    e384:	mov	r0, r5
    e388:	bl	4664 <ippGetInteger@plt+0x2698>
    e38c:	cmp	r0, #0
    e390:	beq	e3e0 <ippGetInteger@plt+0xc414>
    e394:	ldr	r4, [sp, #100]	; 0x64
    e398:	cmp	r4, #0
    e39c:	beq	e3c8 <ippGetInteger@plt+0xc3fc>
    e3a0:	mov	r0, fp
    e3a4:	bl	1fb4 <strdup@plt>
    e3a8:	str	r0, [r4, #48]	; 0x30
    e3ac:	b	948c <ippGetInteger@plt+0x74c0>
    e3b0:	ldr	r1, [pc, #2384]	; ed08 <ippGetInteger@plt+0xcd3c>
    e3b4:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e3b8:	ldr	r0, [sp, #32]
    e3bc:	add	r1, pc, r1
    e3c0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e3c4:	b	961c <ippGetInteger@plt+0x7650>
    e3c8:	ldr	r1, [pc, #2364]	; ed0c <ippGetInteger@plt+0xcd40>
    e3cc:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e3d0:	ldr	r0, [sp, #32]
    e3d4:	add	r1, pc, r1
    e3d8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e3dc:	b	961c <ippGetInteger@plt+0x7650>
    e3e0:	ldr	r1, [pc, #2344]	; ed10 <ippGetInteger@plt+0xcd44>
    e3e4:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e3e8:	ldr	r0, [sp, #32]
    e3ec:	add	r1, pc, r1
    e3f0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e3f4:	b	961c <ippGetInteger@plt+0x7650>
    e3f8:	ldr	r1, [pc, #2324]	; ed14 <ippGetInteger@plt+0xcd48>
    e3fc:	mov	r0, fp
    e400:	add	r1, pc, r1
    e404:	bl	1a08 <_cups_strcasecmp@plt>
    e408:	cmp	r0, #0
    e40c:	bne	e450 <ippGetInteger@plt+0xc484>
    e410:	mov	r3, r8
    e414:	mov	r2, #1024	; 0x400
    e418:	mov	r1, fp
    e41c:	mov	r0, r5
    e420:	bl	4664 <ippGetInteger@plt+0x2698>
    e424:	cmp	r0, #0
    e428:	beq	e4bc <ippGetInteger@plt+0xc4f0>
    e42c:	ldr	r4, [sp, #100]	; 0x64
    e430:	cmp	r4, #0
    e434:	bne	e338 <ippGetInteger@plt+0xc36c>
    e438:	ldr	r1, [pc, #2264]	; ed18 <ippGetInteger@plt+0xcd4c>
    e43c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e440:	ldr	r0, [sp, #32]
    e444:	add	r1, pc, r1
    e448:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e44c:	b	961c <ippGetInteger@plt+0x7650>
    e450:	ldr	r1, [pc, #2244]	; ed1c <ippGetInteger@plt+0xcd50>
    e454:	mov	r0, fp
    e458:	add	r1, pc, r1
    e45c:	bl	1a08 <_cups_strcasecmp@plt>
    e460:	cmp	r0, #0
    e464:	bne	e520 <ippGetInteger@plt+0xc554>
    e468:	mov	r3, r8
    e46c:	mov	r2, #1024	; 0x400
    e470:	mov	r1, fp
    e474:	mov	r0, r5
    e478:	bl	4664 <ippGetInteger@plt+0x2698>
    e47c:	cmp	r0, #0
    e480:	beq	e508 <ippGetInteger@plt+0xc53c>
    e484:	mov	r0, fp
    e488:	bl	1a44 <ippTagValue@plt>
    e48c:	cmp	r0, #15
    e490:	movle	r3, #0
    e494:	movgt	r3, #1
    e498:	cmp	r0, #0
    e49c:	moveq	r3, #1
    e4a0:	cmp	r3, #0
    e4a4:	bne	e4ec <ippGetInteger@plt+0xc520>
    e4a8:	ldr	r3, [sp, #100]	; 0x64
    e4ac:	cmp	r3, #0
    e4b0:	beq	e4d4 <ippGetInteger@plt+0xc508>
    e4b4:	str	r0, [r3, #72]	; 0x48
    e4b8:	b	948c <ippGetInteger@plt+0x74c0>
    e4bc:	ldr	r1, [pc, #2140]	; ed20 <ippGetInteger@plt+0xcd54>
    e4c0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e4c4:	ldr	r0, [sp, #32]
    e4c8:	add	r1, pc, r1
    e4cc:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e4d0:	b	961c <ippGetInteger@plt+0x7650>
    e4d4:	ldr	r1, [pc, #2120]	; ed24 <ippGetInteger@plt+0xcd58>
    e4d8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e4dc:	ldr	r0, [sp, #32]
    e4e0:	add	r1, pc, r1
    e4e4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e4e8:	b	961c <ippGetInteger@plt+0x7650>
    e4ec:	ldr	r1, [pc, #2100]	; ed28 <ippGetInteger@plt+0xcd5c>
    e4f0:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    e4f4:	mov	r2, fp
    e4f8:	ldr	r0, [sp, #32]
    e4fc:	add	r1, pc, r1
    e500:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e504:	b	961c <ippGetInteger@plt+0x7650>
    e508:	ldr	r1, [pc, #2076]	; ed2c <ippGetInteger@plt+0xcd60>
    e50c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e510:	ldr	r0, [sp, #32]
    e514:	add	r1, pc, r1
    e518:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e51c:	b	961c <ippGetInteger@plt+0x7650>
    e520:	ldr	r1, [pc, #2056]	; ed30 <ippGetInteger@plt+0xcd64>
    e524:	mov	r0, fp
    e528:	add	r1, pc, r1
    e52c:	bl	1a08 <_cups_strcasecmp@plt>
    e530:	cmp	r0, #0
    e534:	bne	e590 <ippGetInteger@plt+0xc5c4>
    e538:	mov	r3, r8
    e53c:	mov	r2, #1024	; 0x400
    e540:	mov	r1, fp
    e544:	mov	r0, r5
    e548:	bl	4664 <ippGetInteger@plt+0x2698>
    e54c:	cmp	r0, #0
    e550:	beq	e75c <ippGetInteger@plt+0xc790>
    e554:	mov	r2, #10
    e558:	mov	r1, #0
    e55c:	mov	r0, fp
    e560:	bl	1a14 <strtol@plt>
    e564:	cmp	r0, #0
    e568:	ble	e5fc <ippGetInteger@plt+0xc630>
    e56c:	ldr	r4, [sp, #112]	; 0x70
    e570:	cmp	r4, #0
    e574:	beq	e5c0 <ippGetInteger@plt+0xc5f4>
    e578:	mov	r2, #10
    e57c:	mov	r1, #0
    e580:	mov	r0, fp
    e584:	bl	1a14 <strtol@plt>
    e588:	str	r0, [r4, #24]
    e58c:	b	948c <ippGetInteger@plt+0x74c0>
    e590:	ldr	r1, [pc, #1948]	; ed34 <ippGetInteger@plt+0xcd68>
    e594:	mov	r0, fp
    e598:	add	r1, pc, r1
    e59c:	bl	1a08 <_cups_strcasecmp@plt>
    e5a0:	cmp	r0, #0
    e5a4:	bne	e614 <ippGetInteger@plt+0xc648>
    e5a8:	ldr	r2, [sp, #112]	; 0x70
    e5ac:	cmp	r2, #0
    e5b0:	beq	e5e4 <ippGetInteger@plt+0xc618>
    e5b4:	mov	r3, #1
    e5b8:	str	r3, [r2, #28]
    e5bc:	b	948c <ippGetInteger@plt+0x74c0>
    e5c0:	ldr	r4, [sp, #100]	; 0x64
    e5c4:	cmp	r4, #0
    e5c8:	beq	e644 <ippGetInteger@plt+0xc678>
    e5cc:	mov	r2, #10
    e5d0:	ldr	r1, [sp, #112]	; 0x70
    e5d4:	mov	r0, fp
    e5d8:	bl	1a14 <strtol@plt>
    e5dc:	str	r0, [r4, #52]	; 0x34
    e5e0:	b	948c <ippGetInteger@plt+0x74c0>
    e5e4:	ldr	r2, [sp, #100]	; 0x64
    e5e8:	cmp	r2, #0
    e5ec:	beq	e774 <ippGetInteger@plt+0xc7a8>
    e5f0:	mov	r3, #1
    e5f4:	str	r3, [r2, #56]	; 0x38
    e5f8:	b	948c <ippGetInteger@plt+0x74c0>
    e5fc:	ldr	r1, [pc, #1844]	; ed38 <ippGetInteger@plt+0xcd6c>
    e600:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e604:	ldr	r0, [sp, #32]
    e608:	add	r1, pc, r1
    e60c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e610:	b	961c <ippGetInteger@plt+0x7650>
    e614:	ldr	r1, [pc, #1824]	; ed3c <ippGetInteger@plt+0xcd70>
    e618:	mov	r0, fp
    e61c:	add	r1, pc, r1
    e620:	bl	1a08 <_cups_strcasecmp@plt>
    e624:	cmp	r0, #0
    e628:	bne	e674 <ippGetInteger@plt+0xc6a8>
    e62c:	ldr	r2, [sp, #112]	; 0x70
    e630:	cmp	r2, #0
    e634:	beq	e65c <ippGetInteger@plt+0xc690>
    e638:	mov	r3, #1
    e63c:	str	r3, [r2, #32]
    e640:	b	948c <ippGetInteger@plt+0x74c0>
    e644:	ldr	r1, [pc, #1780]	; ed40 <ippGetInteger@plt+0xcd74>
    e648:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e64c:	ldr	r0, [sp, #32]
    e650:	add	r1, pc, r1
    e654:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e658:	b	961c <ippGetInteger@plt+0x7650>
    e65c:	ldr	r2, [sp, #100]	; 0x64
    e660:	cmp	r2, #0
    e664:	beq	e6c4 <ippGetInteger@plt+0xc6f8>
    e668:	mov	r3, #1
    e66c:	str	r3, [r2, #60]	; 0x3c
    e670:	b	948c <ippGetInteger@plt+0x74c0>
    e674:	ldr	r1, [pc, #1736]	; ed44 <ippGetInteger@plt+0xcd78>
    e678:	mov	r0, fp
    e67c:	add	r1, pc, r1
    e680:	bl	1a08 <_cups_strcasecmp@plt>
    e684:	cmp	r0, #0
    e688:	bne	e70c <ippGetInteger@plt+0xc740>
    e68c:	mov	r3, r8
    e690:	mov	r2, #1024	; 0x400
    e694:	mov	r1, fp
    e698:	mov	r0, r5
    e69c:	bl	4664 <ippGetInteger@plt+0x2698>
    e6a0:	cmp	r0, #0
    e6a4:	beq	e6f4 <ippGetInteger@plt+0xc728>
    e6a8:	ldr	r4, [sp, #100]	; 0x64
    e6ac:	cmp	r4, #0
    e6b0:	beq	e6dc <ippGetInteger@plt+0xc710>
    e6b4:	mov	r0, fp
    e6b8:	bl	1fb4 <strdup@plt>
    e6bc:	str	r0, [r4, #20]
    e6c0:	b	948c <ippGetInteger@plt+0x74c0>
    e6c4:	ldr	r1, [pc, #1660]	; ed48 <ippGetInteger@plt+0xcd7c>
    e6c8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e6cc:	ldr	r0, [sp, #32]
    e6d0:	add	r1, pc, r1
    e6d4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e6d8:	b	961c <ippGetInteger@plt+0x7650>
    e6dc:	ldr	r1, [pc, #1640]	; ed4c <ippGetInteger@plt+0xcd80>
    e6e0:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e6e4:	ldr	r0, [sp, #32]
    e6e8:	add	r1, pc, r1
    e6ec:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e6f0:	b	961c <ippGetInteger@plt+0x7650>
    e6f4:	ldr	r1, [pc, #1620]	; ed50 <ippGetInteger@plt+0xcd84>
    e6f8:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e6fc:	ldr	r0, [sp, #32]
    e700:	add	r1, pc, r1
    e704:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e708:	b	961c <ippGetInteger@plt+0x7650>
    e70c:	ldr	r1, [pc, #1600]	; ed54 <ippGetInteger@plt+0xcd88>
    e710:	mov	r0, fp
    e714:	add	r1, pc, r1
    e718:	bl	1a08 <_cups_strcasecmp@plt>
    e71c:	cmp	r0, #0
    e720:	bne	e7c0 <ippGetInteger@plt+0xc7f4>
    e724:	mov	r3, r8
    e728:	mov	r2, #1024	; 0x400
    e72c:	mov	r1, fp
    e730:	mov	r0, r5
    e734:	bl	4664 <ippGetInteger@plt+0x2698>
    e738:	cmp	r0, #0
    e73c:	beq	e7a8 <ippGetInteger@plt+0xc7dc>
    e740:	ldr	r4, [sp, #100]	; 0x64
    e744:	cmp	r4, #0
    e748:	beq	e78c <ippGetInteger@plt+0xc7c0>
    e74c:	mov	r0, fp
    e750:	bl	1fb4 <strdup@plt>
    e754:	str	r0, [r4, #24]
    e758:	b	948c <ippGetInteger@plt+0x74c0>
    e75c:	ldr	r1, [pc, #1524]	; ed58 <ippGetInteger@plt+0xcd8c>
    e760:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e764:	ldr	r0, [sp, #32]
    e768:	add	r1, pc, r1
    e76c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e770:	b	961c <ippGetInteger@plt+0x7650>
    e774:	ldr	r1, [pc, #1504]	; ed5c <ippGetInteger@plt+0xcd90>
    e778:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e77c:	ldr	r0, [sp, #32]
    e780:	add	r1, pc, r1
    e784:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e788:	b	961c <ippGetInteger@plt+0x7650>
    e78c:	ldr	r4, [sp, #112]	; 0x70
    e790:	cmp	r4, #0
    e794:	beq	e810 <ippGetInteger@plt+0xc844>
    e798:	mov	r0, fp
    e79c:	bl	1fb4 <strdup@plt>
    e7a0:	str	r0, [r4, #4]
    e7a4:	b	948c <ippGetInteger@plt+0x74c0>
    e7a8:	ldr	r1, [pc, #1456]	; ed60 <ippGetInteger@plt+0xcd94>
    e7ac:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e7b0:	ldr	r0, [sp, #32]
    e7b4:	add	r1, pc, r1
    e7b8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e7bc:	b	961c <ippGetInteger@plt+0x7650>
    e7c0:	ldr	r1, [pc, #1436]	; ed64 <ippGetInteger@plt+0xcd98>
    e7c4:	mov	r0, fp
    e7c8:	add	r1, pc, r1
    e7cc:	bl	1a08 <_cups_strcasecmp@plt>
    e7d0:	cmp	r0, #0
    e7d4:	bne	e85c <ippGetInteger@plt+0xc890>
    e7d8:	mov	r3, r8
    e7dc:	mov	r2, #1024	; 0x400
    e7e0:	mov	r1, fp
    e7e4:	mov	r0, r5
    e7e8:	bl	4664 <ippGetInteger@plt+0x2698>
    e7ec:	cmp	r0, #0
    e7f0:	beq	e844 <ippGetInteger@plt+0xc878>
    e7f4:	ldr	r4, [sp, #100]	; 0x64
    e7f8:	cmp	r4, #0
    e7fc:	beq	e828 <ippGetInteger@plt+0xc85c>
    e800:	mov	r0, fp
    e804:	bl	1fb4 <strdup@plt>
    e808:	str	r0, [r4, #28]
    e80c:	b	948c <ippGetInteger@plt+0x74c0>
    e810:	ldr	r1, [pc, #1360]	; ed68 <ippGetInteger@plt+0xcd9c>
    e814:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e818:	ldr	r0, [sp, #32]
    e81c:	add	r1, pc, r1
    e820:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e824:	b	961c <ippGetInteger@plt+0x7650>
    e828:	ldr	r4, [sp, #112]	; 0x70
    e82c:	cmp	r4, #0
    e830:	beq	eb88 <ippGetInteger@plt+0xcbbc>
    e834:	mov	r0, fp
    e838:	bl	1fb4 <strdup@plt>
    e83c:	str	r0, [r4, #8]
    e840:	b	948c <ippGetInteger@plt+0x74c0>
    e844:	ldr	r1, [pc, #1312]	; ed6c <ippGetInteger@plt+0xcda0>
    e848:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    e84c:	ldr	r0, [sp, #32]
    e850:	add	r1, pc, r1
    e854:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e858:	b	961c <ippGetInteger@plt+0x7650>
    e85c:	ldr	r1, [pc, #1292]	; ed70 <ippGetInteger@plt+0xcda4>
    e860:	mov	r0, fp
    e864:	add	r1, pc, r1
    e868:	bl	1a08 <_cups_strcasecmp@plt>
    e86c:	cmp	r0, #0
    e870:	bne	ea70 <ippGetInteger@plt+0xcaa4>
    e874:	ldr	r3, [sp, #100]	; 0x64
    e878:	cmp	r3, #0
    e87c:	beq	e9b4 <ippGetInteger@plt+0xc9e8>
    e880:	ldr	r1, [pc, #1260]	; ed74 <ippGetInteger@plt+0xcda8>
    e884:	mov	r0, fp
    e888:	add	r1, pc, r1
    e88c:	bl	1a08 <_cups_strcasecmp@plt>
    e890:	cmp	r0, #0
    e894:	bne	e974 <ippGetInteger@plt+0xc9a8>
    e898:	ldr	r2, [sp, #100]	; 0x64
    e89c:	mov	r3, #4
    e8a0:	str	r3, [r2, #64]	; 0x40
    e8a4:	ldr	r1, [pc, #1228]	; ed78 <ippGetInteger@plt+0xcdac>
    e8a8:	mov	r2, #9
    e8ac:	add	r1, pc, r1
    e8b0:	mov	r0, fp
    e8b4:	bl	1d44 <_cups_strncasecmp@plt>
    e8b8:	cmp	r0, #0
    e8bc:	ldreq	r2, [sp, #100]	; 0x64
    e8c0:	ldreq	r3, [r2, #64]	; 0x40
    e8c4:	orreq	r3, r3, #1
    e8c8:	streq	r3, [r2, #64]	; 0x40
    e8cc:	add	r4, sp, #22528	; 0x5800
    e8d0:	add	r4, r4, #244	; 0xf4
    e8d4:	mov	r1, r4
    e8d8:	mov	r3, r8
    e8dc:	mov	r2, #1024	; 0x400
    e8e0:	mov	r0, r5
    e8e4:	bl	4664 <ippGetInteger@plt+0x2698>
    e8e8:	cmp	r0, #0
    e8ec:	beq	ea34 <ippGetInteger@plt+0xca68>
    e8f0:	mov	r2, r4
    e8f4:	mov	r3, #1024	; 0x400
    e8f8:	mov	r1, fp
    e8fc:	ldr	r0, [sp, #36]	; 0x24
    e900:	bl	4244 <ippGetInteger@plt+0x2278>
    e904:	mov	r0, fp
    e908:	bl	1e1c <strlen@plt>
    e90c:	ldr	r3, [sp, #120]	; 0x78
    e910:	mov	r4, r0
    e914:	sub	r1, r4, #1
    e918:	ldrb	r0, [r3, #-2052]	; 0xfffff7fc
    e91c:	add	r2, fp, r1
    e920:	cmp	r2, fp
    e924:	sub	r3, r0, #47	; 0x2f
    e928:	clz	r3, r3
    e92c:	lsr	r3, r3, #5
    e930:	movls	r3, #0
    e934:	cmp	r3, #0
    e938:	str	r2, [sl, #-3116]	; 0xfffff3d4
    e93c:	bne	ec38 <ippGetInteger@plt+0xcc6c>
    e940:	mov	r4, fp
    e944:	mov	r0, r4
    e948:	ldrb	r3, [r4], #1
    e94c:	cmp	r3, #0
    e950:	beq	ec7c <ippGetInteger@plt+0xccb0>
    e954:	cmp	r3, #92	; 0x5c
    e958:	bne	e944 <ippGetInteger@plt+0xc978>
    e95c:	ldrb	r3, [r4]
    e960:	cmp	r3, #0
    e964:	beq	e944 <ippGetInteger@plt+0xc978>
    e968:	mov	r1, r4
    e96c:	bl	1d74 <_cups_strcpy@plt>
    e970:	b	e944 <ippGetInteger@plt+0xc978>
    e974:	ldr	r1, [pc, #1024]	; ed7c <ippGetInteger@plt+0xcdb0>
    e978:	mov	r0, fp
    e97c:	add	r1, pc, r1
    e980:	bl	1a08 <_cups_strcasecmp@plt>
    e984:	cmp	r0, #0
    e988:	beq	e898 <ippGetInteger@plt+0xc8cc>
    e98c:	ldr	r1, [pc, #1004]	; ed80 <ippGetInteger@plt+0xcdb4>
    e990:	mov	r0, fp
    e994:	add	r1, pc, r1
    e998:	bl	1a08 <_cups_strcasecmp@plt>
    e99c:	cmp	r0, #0
    e9a0:	bne	e9f4 <ippGetInteger@plt+0xca28>
    e9a4:	ldr	r2, [sp, #100]	; 0x64
    e9a8:	mov	r3, #8
    e9ac:	str	r3, [r2, #64]	; 0x40
    e9b0:	b	e8a4 <ippGetInteger@plt+0xc8d8>
    e9b4:	add	r1, sp, #22528	; 0x5800
    e9b8:	mov	r3, r8
    e9bc:	mov	r2, #1024	; 0x400
    e9c0:	add	r1, r1, #244	; 0xf4
    e9c4:	ldr	r0, [sp, #28]
    e9c8:	bl	4664 <ippGetInteger@plt+0x2698>
    e9cc:	mov	r7, sl
    e9d0:	cmp	r0, #0
    e9d4:	beq	ea38 <ippGetInteger@plt+0xca6c>
    e9d8:	ldr	r1, [pc, #932]	; ed84 <ippGetInteger@plt+0xcdb8>
    e9dc:	ldr	r3, [r7, #-3120]	; 0xfffff3d0
    e9e0:	mov	r2, fp
    e9e4:	ldr	r0, [sp, #32]
    e9e8:	add	r1, pc, r1
    e9ec:	bl	4b10 <ippGetInteger@plt+0x2b44>
    e9f0:	b	961c <ippGetInteger@plt+0x7650>
    e9f4:	ldr	r1, [pc, #908]	; ed88 <ippGetInteger@plt+0xcdbc>
    e9f8:	mov	r0, fp
    e9fc:	add	r1, pc, r1
    ea00:	bl	1a08 <_cups_strcasecmp@plt>
    ea04:	cmp	r0, #0
    ea08:	beq	e9a4 <ippGetInteger@plt+0xc9d8>
    ea0c:	ldr	r1, [pc, #888]	; ed8c <ippGetInteger@plt+0xcdc0>
    ea10:	mov	r0, fp
    ea14:	add	r1, pc, r1
    ea18:	bl	1a08 <_cups_strcasecmp@plt>
    ea1c:	cmp	r0, #0
    ea20:	bne	ea54 <ippGetInteger@plt+0xca88>
    ea24:	ldr	r2, [sp, #100]	; 0x64
    ea28:	mov	r3, #16
    ea2c:	str	r3, [r2, #64]	; 0x40
    ea30:	b	e8a4 <ippGetInteger@plt+0xc8d8>
    ea34:	mov	r7, sl
    ea38:	ldr	r1, [pc, #848]	; ed90 <ippGetInteger@plt+0xcdc4>
    ea3c:	ldr	r3, [r7, #-3120]	; 0xfffff3d0
    ea40:	mov	r2, fp
    ea44:	ldr	r0, [sp, #32]
    ea48:	add	r1, pc, r1
    ea4c:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ea50:	b	961c <ippGetInteger@plt+0x7650>
    ea54:	ldr	r1, [pc, #824]	; ed94 <ippGetInteger@plt+0xcdc8>
    ea58:	mov	r0, fp
    ea5c:	add	r1, pc, r1
    ea60:	bl	1a08 <_cups_strcasecmp@plt>
    ea64:	cmp	r0, #0
    ea68:	beq	ea24 <ippGetInteger@plt+0xca58>
    ea6c:	b	e8a4 <ippGetInteger@plt+0xc8d8>
    ea70:	ldr	r1, [pc, #800]	; ed98 <ippGetInteger@plt+0xcdcc>
    ea74:	mov	r0, fp
    ea78:	add	r1, pc, r1
    ea7c:	bl	1a08 <_cups_strcasecmp@plt>
    ea80:	cmp	r0, #0
    ea84:	beq	e874 <ippGetInteger@plt+0xc8a8>
    ea88:	ldr	r1, [pc, #780]	; ed9c <ippGetInteger@plt+0xcdd0>
    ea8c:	mov	r0, fp
    ea90:	add	r1, pc, r1
    ea94:	bl	1a08 <_cups_strcasecmp@plt>
    ea98:	cmp	r0, #0
    ea9c:	beq	e874 <ippGetInteger@plt+0xc8a8>
    eaa0:	ldr	r1, [pc, #760]	; eda0 <ippGetInteger@plt+0xcdd4>
    eaa4:	mov	r0, fp
    eaa8:	add	r1, pc, r1
    eaac:	bl	1a08 <_cups_strcasecmp@plt>
    eab0:	cmp	r0, #0
    eab4:	beq	e874 <ippGetInteger@plt+0xc8a8>
    eab8:	ldr	r1, [pc, #740]	; eda4 <ippGetInteger@plt+0xcdd8>
    eabc:	mov	r0, fp
    eac0:	add	r1, pc, r1
    eac4:	bl	1a08 <_cups_strcasecmp@plt>
    eac8:	cmp	r0, #0
    eacc:	beq	e874 <ippGetInteger@plt+0xc8a8>
    ead0:	ldr	r1, [pc, #720]	; eda8 <ippGetInteger@plt+0xcddc>
    ead4:	mov	r0, fp
    ead8:	add	r1, pc, r1
    eadc:	bl	1a08 <_cups_strcasecmp@plt>
    eae0:	cmp	r0, #0
    eae4:	beq	e874 <ippGetInteger@plt+0xc8a8>
    eae8:	ldr	r1, [pc, #700]	; edac <ippGetInteger@plt+0xcde0>
    eaec:	mov	r0, fp
    eaf0:	add	r1, pc, r1
    eaf4:	bl	1a08 <_cups_strcasecmp@plt>
    eaf8:	cmp	r0, #0
    eafc:	beq	e874 <ippGetInteger@plt+0xc8a8>
    eb00:	ldr	r1, [pc, #680]	; edb0 <ippGetInteger@plt+0xcde4>
    eb04:	mov	r0, fp
    eb08:	add	r1, pc, r1
    eb0c:	bl	1a08 <_cups_strcasecmp@plt>
    eb10:	cmp	r0, #0
    eb14:	beq	e874 <ippGetInteger@plt+0xc8a8>
    eb18:	ldr	r1, [pc, #660]	; edb4 <ippGetInteger@plt+0xcde8>
    eb1c:	mov	r0, fp
    eb20:	add	r1, pc, r1
    eb24:	bl	1a08 <_cups_strcasecmp@plt>
    eb28:	subs	r6, r0, #0
    eb2c:	bne	ebd8 <ippGetInteger@plt+0xcc0c>
    eb30:	add	r4, sp, #22528	; 0x5800
    eb34:	add	r4, r4, #244	; 0xf4
    eb38:	mov	r1, r4
    eb3c:	mov	r3, r8
    eb40:	mov	r2, #1024	; 0x400
    eb44:	mov	r0, r5
    eb48:	bl	4664 <ippGetInteger@plt+0x2698>
    eb4c:	cmp	r0, #0
    eb50:	beq	ebbc <ippGetInteger@plt+0xcbf0>
    eb54:	ldr	r7, [sp, #100]	; 0x64
    eb58:	cmp	r7, #0
    eb5c:	beq	eba0 <ippGetInteger@plt+0xcbd4>
    eb60:	mov	r2, r4
    eb64:	mov	r3, #1024	; 0x400
    eb68:	mov	r1, fp
    eb6c:	ldr	r0, [sp, #36]	; 0x24
    eb70:	bl	4244 <ippGetInteger@plt+0x2278>
    eb74:	mov	r0, fp
    eb78:	bl	1fb4 <strdup@plt>
    eb7c:	str	r6, [r7, #64]	; 0x40
    eb80:	str	r0, [r7, #36]	; 0x24
    eb84:	b	948c <ippGetInteger@plt+0x74c0>
    eb88:	ldr	r1, [pc, #552]	; edb8 <ippGetInteger@plt+0xcdec>
    eb8c:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    eb90:	ldr	r0, [sp, #32]
    eb94:	add	r1, pc, r1
    eb98:	bl	4b10 <ippGetInteger@plt+0x2b44>
    eb9c:	b	961c <ippGetInteger@plt+0x7650>
    eba0:	ldr	r1, [pc, #532]	; edbc <ippGetInteger@plt+0xcdf0>
    eba4:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    eba8:	mov	r2, fp
    ebac:	ldr	r0, [sp, #32]
    ebb0:	add	r1, pc, r1
    ebb4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ebb8:	b	961c <ippGetInteger@plt+0x7650>
    ebbc:	ldr	r1, [pc, #508]	; edc0 <ippGetInteger@plt+0xcdf4>
    ebc0:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    ebc4:	mov	r2, fp
    ebc8:	ldr	r0, [sp, #32]
    ebcc:	add	r1, pc, r1
    ebd0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ebd4:	b	961c <ippGetInteger@plt+0x7650>
    ebd8:	ldr	r1, [pc, #484]	; edc4 <ippGetInteger@plt+0xcdf8>
    ebdc:	mov	r0, fp
    ebe0:	add	r1, pc, r1
    ebe4:	bl	1a08 <_cups_strcasecmp@plt>
    ebe8:	cmp	r0, #0
    ebec:	bne	ecc0 <ippGetInteger@plt+0xccf4>
    ebf0:	ldr	r3, [sp, #56]	; 0x38
    ebf4:	cmp	r3, #199	; 0xc7
    ebf8:	bgt	eca8 <ippGetInteger@plt+0xccdc>
    ebfc:	mov	r3, r8
    ec00:	mov	r2, #1024	; 0x400
    ec04:	mov	r1, fp
    ec08:	mov	r0, r5
    ec0c:	bl	4664 <ippGetInteger@plt+0x2698>
    ec10:	cmp	r0, #0
    ec14:	beq	ec90 <ippGetInteger@plt+0xccc4>
    ec18:	mov	r0, fp
    ec1c:	bl	1fb4 <strdup@plt>
    ec20:	ldr	r2, [sp, #56]	; 0x38
    ec24:	add	r3, sl, r2, lsl #2
    ec28:	str	r0, [r3, #-2628]	; 0xfffff5bc
    ec2c:	add	r3, r2, #1
    ec30:	str	r3, [sp, #56]	; 0x38
    ec34:	b	948c <ippGetInteger@plt+0x74c0>
    ec38:	ldrb	r3, [fp, r1]
    ec3c:	cmp	r3, #47	; 0x2f
    ec40:	bne	e940 <ippGetInteger@plt+0xc974>
    ec44:	mov	r0, #1
    ec48:	bl	1dec <calloc@plt>
    ec4c:	ldr	r1, [sp, #100]	; 0x64
    ec50:	ldr	r3, [r1, #64]	; 0x40
    ec54:	orr	r3, r3, #2
    ec58:	str	r3, [r1, #64]	; 0x40
    ec5c:	cmp	r0, #0
    ec60:	str	r0, [r1, #32]
    ec64:	beq	948c <ippGetInteger@plt+0x74c0>
    ec68:	ldr	r3, [sp, #40]	; 0x28
    ec6c:	sub	r2, r4, #2
    ec70:	sub	r1, r3, #3
    ec74:	bl	1e04 <memcpy@plt>
    ec78:	b	948c <ippGetInteger@plt+0x74c0>
    ec7c:	mov	r0, fp
    ec80:	bl	1fb4 <strdup@plt>
    ec84:	ldr	r3, [sp, #100]	; 0x64
    ec88:	str	r0, [r3, #32]
    ec8c:	b	948c <ippGetInteger@plt+0x74c0>
    ec90:	ldr	r1, [pc, #304]	; edc8 <ippGetInteger@plt+0xcdfc>
    ec94:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    ec98:	ldr	r0, [sp, #32]
    ec9c:	add	r1, pc, r1
    eca0:	bl	4b10 <ippGetInteger@plt+0x2b44>
    eca4:	b	961c <ippGetInteger@plt+0x7650>
    eca8:	ldr	r1, [pc, #284]	; edcc <ippGetInteger@plt+0xce00>
    ecac:	ldr	r2, [sl, #-3120]	; 0xfffff3d0
    ecb0:	ldr	r0, [sp, #32]
    ecb4:	add	r1, pc, r1
    ecb8:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ecbc:	b	961c <ippGetInteger@plt+0x7650>
    ecc0:	ldr	r1, [pc, #264]	; edd0 <ippGetInteger@plt+0xce04>
    ecc4:	ldr	r3, [sl, #-3120]	; 0xfffff3d0
    ecc8:	mov	r2, fp
    eccc:	ldr	r0, [sp, #32]
    ecd0:	add	r1, pc, r1
    ecd4:	bl	4b10 <ippGetInteger@plt+0x2b44>
    ecd8:	b	961c <ippGetInteger@plt+0x7650>
    ecdc:	strdeq	r3, [r0], -r0
    ece0:			; <UNDEFINED> instruction: 0x000032b8
    ece4:	andeq	r3, r0, ip, ror r2
    ece8:	andeq	r2, r0, r8, ror fp
    ecec:	strdeq	r3, [r0], -r4
    ecf0:			; <UNDEFINED> instruction: 0x000031bc
    ecf4:	andeq	r3, r0, r8, lsr r2
    ecf8:	ldrdeq	r2, [r0], -r4
    ecfc:	strdeq	r3, [r0], -ip
    ed00:	andeq	r3, r0, r8, lsl #4
    ed04:	andeq	r2, r0, r8, asr #20
    ed08:	ldrdeq	r3, [r0], -r0
    ed0c:	andeq	r3, r0, r8, lsr #4
    ed10:	andeq	r3, r0, r4, ror #3
    ed14:	andeq	r2, r0, ip, asr #19
    ed18:	andeq	r3, r0, r8, lsl r2
    ed1c:	andeq	r2, r0, r8, ror #18
    ed20:	andeq	r3, r0, r8, ror #2
    ed24:	strdeq	r3, [r0], -ip
    ed28:			; <UNDEFINED> instruction: 0x000031b8
    ed2c:	andeq	r3, r0, r8, ror r1
    ed30:	andeq	r2, r0, ip, lsr #17
    ed34:	andeq	r2, r0, ip, asr #16
    ed38:	andeq	r3, r0, ip, lsr #2
    ed3c:	ldrdeq	r2, [r0], -r8
    ed40:	andeq	r3, r0, r8, lsl #2
    ed44:	andeq	r2, r0, r8, lsl #15
    ed48:	andeq	r3, r0, r8, lsl #2
    ed4c:	andeq	r3, r0, r8, asr r1
    ed50:	andeq	r3, r0, r8, lsl r1
    ed54:	andeq	r2, r0, r8, asr #8
    ed58:	andeq	r2, r0, r4, lsr #31
    ed5c:	andeq	r3, r0, r8, lsl r0
    ed60:	andeq	r3, r0, r4, asr #1
    ed64:	andeq	r2, r0, r0, ror #7
    ed68:	andeq	r3, r0, r0, lsl #1
    ed6c:	andeq	r3, r0, r8, lsl #1
    ed70:			; <UNDEFINED> instruction: 0x00000eb4
    ed74:			; <UNDEFINED> instruction: 0x00000eb0
    ed78:	muleq	r0, r4, r0
    ed7c:	andeq	r0, r0, r4, ror #27
    ed80:			; <UNDEFINED> instruction: 0x00000db8
    ed84:	andeq	r2, r0, r4, lsl #31
    ed88:	andeq	r0, r0, ip, lsr #26
    ed8c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ed90:	andeq	r2, r0, r4, lsl #30
    ed94:	muleq	r0, ip, ip
    ed98:	andeq	r0, r0, r0, asr #25
    ed9c:			; <UNDEFINED> instruction: 0x00000cbc
    eda0:	andeq	r0, r0, ip, asr ip
    eda4:	andeq	r0, r0, r0, lsr #25
    eda8:	andeq	r0, r0, r0, asr ip
    edac:	andeq	r0, r0, r8, lsl #24
    edb0:	andeq	r0, r0, r8, ror #24
    edb4:	strdeq	r2, [r0], -r4
    edb8:	andeq	r2, r0, ip, ror #26
    edbc:			; <UNDEFINED> instruction: 0x00002dbc
    edc0:	andeq	r2, r0, r0, lsl #27
    edc4:			; <UNDEFINED> instruction: 0x00002db8
    edc8:	andeq	r2, r0, r4, lsr #26
    edcc:	andeq	r2, r0, ip, ror #25
    edd0:	andeq	r1, r0, r8, lsr #19
    edd4:	cmp	r1, #0
    edd8:	beq	efe4 <ippGetInteger@plt+0xd018>
    eddc:	eor	ip, r0, r1
    ede0:	rsbmi	r1, r1, #0
    ede4:	subs	r2, r1, #1
    ede8:	beq	efb0 <ippGetInteger@plt+0xcfe4>
    edec:	movs	r3, r0
    edf0:	rsbmi	r3, r0, #0
    edf4:	cmp	r3, r1
    edf8:	bls	efbc <ippGetInteger@plt+0xcff0>
    edfc:	tst	r1, r2
    ee00:	beq	efcc <ippGetInteger@plt+0xd000>
    ee04:	clz	r2, r3
    ee08:	clz	r0, r1
    ee0c:	sub	r2, r0, r2
    ee10:	rsbs	r2, r2, #31
    ee14:	addne	r2, r2, r2, lsl #1
    ee18:	mov	r0, #0
    ee1c:	addne	pc, pc, r2, lsl #2
    ee20:	nop			; (mov r0, r0)
    ee24:	cmp	r3, r1, lsl #31
    ee28:	adc	r0, r0, r0
    ee2c:	subcs	r3, r3, r1, lsl #31
    ee30:	cmp	r3, r1, lsl #30
    ee34:	adc	r0, r0, r0
    ee38:	subcs	r3, r3, r1, lsl #30
    ee3c:	cmp	r3, r1, lsl #29
    ee40:	adc	r0, r0, r0
    ee44:	subcs	r3, r3, r1, lsl #29
    ee48:	cmp	r3, r1, lsl #28
    ee4c:	adc	r0, r0, r0
    ee50:	subcs	r3, r3, r1, lsl #28
    ee54:	cmp	r3, r1, lsl #27
    ee58:	adc	r0, r0, r0
    ee5c:	subcs	r3, r3, r1, lsl #27
    ee60:	cmp	r3, r1, lsl #26
    ee64:	adc	r0, r0, r0
    ee68:	subcs	r3, r3, r1, lsl #26
    ee6c:	cmp	r3, r1, lsl #25
    ee70:	adc	r0, r0, r0
    ee74:	subcs	r3, r3, r1, lsl #25
    ee78:	cmp	r3, r1, lsl #24
    ee7c:	adc	r0, r0, r0
    ee80:	subcs	r3, r3, r1, lsl #24
    ee84:	cmp	r3, r1, lsl #23
    ee88:	adc	r0, r0, r0
    ee8c:	subcs	r3, r3, r1, lsl #23
    ee90:	cmp	r3, r1, lsl #22
    ee94:	adc	r0, r0, r0
    ee98:	subcs	r3, r3, r1, lsl #22
    ee9c:	cmp	r3, r1, lsl #21
    eea0:	adc	r0, r0, r0
    eea4:	subcs	r3, r3, r1, lsl #21
    eea8:	cmp	r3, r1, lsl #20
    eeac:	adc	r0, r0, r0
    eeb0:	subcs	r3, r3, r1, lsl #20
    eeb4:	cmp	r3, r1, lsl #19
    eeb8:	adc	r0, r0, r0
    eebc:	subcs	r3, r3, r1, lsl #19
    eec0:	cmp	r3, r1, lsl #18
    eec4:	adc	r0, r0, r0
    eec8:	subcs	r3, r3, r1, lsl #18
    eecc:	cmp	r3, r1, lsl #17
    eed0:	adc	r0, r0, r0
    eed4:	subcs	r3, r3, r1, lsl #17
    eed8:	cmp	r3, r1, lsl #16
    eedc:	adc	r0, r0, r0
    eee0:	subcs	r3, r3, r1, lsl #16
    eee4:	cmp	r3, r1, lsl #15
    eee8:	adc	r0, r0, r0
    eeec:	subcs	r3, r3, r1, lsl #15
    eef0:	cmp	r3, r1, lsl #14
    eef4:	adc	r0, r0, r0
    eef8:	subcs	r3, r3, r1, lsl #14
    eefc:	cmp	r3, r1, lsl #13
    ef00:	adc	r0, r0, r0
    ef04:	subcs	r3, r3, r1, lsl #13
    ef08:	cmp	r3, r1, lsl #12
    ef0c:	adc	r0, r0, r0
    ef10:	subcs	r3, r3, r1, lsl #12
    ef14:	cmp	r3, r1, lsl #11
    ef18:	adc	r0, r0, r0
    ef1c:	subcs	r3, r3, r1, lsl #11
    ef20:	cmp	r3, r1, lsl #10
    ef24:	adc	r0, r0, r0
    ef28:	subcs	r3, r3, r1, lsl #10
    ef2c:	cmp	r3, r1, lsl #9
    ef30:	adc	r0, r0, r0
    ef34:	subcs	r3, r3, r1, lsl #9
    ef38:	cmp	r3, r1, lsl #8
    ef3c:	adc	r0, r0, r0
    ef40:	subcs	r3, r3, r1, lsl #8
    ef44:	cmp	r3, r1, lsl #7
    ef48:	adc	r0, r0, r0
    ef4c:	subcs	r3, r3, r1, lsl #7
    ef50:	cmp	r3, r1, lsl #6
    ef54:	adc	r0, r0, r0
    ef58:	subcs	r3, r3, r1, lsl #6
    ef5c:	cmp	r3, r1, lsl #5
    ef60:	adc	r0, r0, r0
    ef64:	subcs	r3, r3, r1, lsl #5
    ef68:	cmp	r3, r1, lsl #4
    ef6c:	adc	r0, r0, r0
    ef70:	subcs	r3, r3, r1, lsl #4
    ef74:	cmp	r3, r1, lsl #3
    ef78:	adc	r0, r0, r0
    ef7c:	subcs	r3, r3, r1, lsl #3
    ef80:	cmp	r3, r1, lsl #2
    ef84:	adc	r0, r0, r0
    ef88:	subcs	r3, r3, r1, lsl #2
    ef8c:	cmp	r3, r1, lsl #1
    ef90:	adc	r0, r0, r0
    ef94:	subcs	r3, r3, r1, lsl #1
    ef98:	cmp	r3, r1
    ef9c:	adc	r0, r0, r0
    efa0:	subcs	r3, r3, r1
    efa4:	cmp	ip, #0
    efa8:	rsbmi	r0, r0, #0
    efac:	bx	lr
    efb0:	teq	ip, r0
    efb4:	rsbmi	r0, r0, #0
    efb8:	bx	lr
    efbc:	movcc	r0, #0
    efc0:	asreq	r0, ip, #31
    efc4:	orreq	r0, r0, #1
    efc8:	bx	lr
    efcc:	clz	r2, r1
    efd0:	rsb	r2, r2, #31
    efd4:	cmp	ip, #0
    efd8:	lsr	r0, r3, r2
    efdc:	rsbmi	r0, r0, #0
    efe0:	bx	lr
    efe4:	cmp	r0, #0
    efe8:	mvngt	r0, #-2147483648	; 0x80000000
    efec:	movlt	r0, #-2147483648	; 0x80000000
    eff0:	b	f014 <ippGetInteger@plt+0xd048>
    eff4:	cmp	r1, #0
    eff8:	beq	efe4 <ippGetInteger@plt+0xd018>
    effc:	push	{r0, r1, lr}
    f000:	bl	eddc <ippGetInteger@plt+0xce10>
    f004:	pop	{r1, r2, lr}
    f008:	mul	r3, r2, r0
    f00c:	sub	r1, r1, r3
    f010:	bx	lr
    f014:	push	{r1, lr}
    f018:	mov	r0, #8
    f01c:	bl	1d80 <raise@plt>
    f020:	pop	{r1, pc}
    f024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f028:	mov	r7, r0
    f02c:	ldr	r6, [pc, #72]	; f07c <ippGetInteger@plt+0xd0b0>
    f030:	ldr	r5, [pc, #72]	; f080 <ippGetInteger@plt+0xd0b4>
    f034:	add	r6, pc, r6
    f038:	add	r5, pc, r5
    f03c:	sub	r6, r6, r5
    f040:	mov	r8, r1
    f044:	mov	r9, r2
    f048:	bl	194c <signal@plt-0x20>
    f04c:	asrs	r6, r6, #2
    f050:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f054:	mov	r4, #0
    f058:	add	r4, r4, #1
    f05c:	ldr	r3, [r5], #4
    f060:	mov	r2, r9
    f064:	mov	r1, r8
    f068:	mov	r0, r7
    f06c:	blx	r3
    f070:	cmp	r6, r4
    f074:	bne	f058 <ippGetInteger@plt+0xd08c>
    f078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f07c:	andeq	r3, r1, r0, asr ip
    f080:	andeq	r3, r1, r8, asr #24
    f084:	bx	lr

Disassembly of section .fini:

0000f088 <.fini>:
    f088:	push	{r3, lr}
    f08c:	pop	{r3, pc}
