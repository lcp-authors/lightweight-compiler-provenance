
raspbian-preinstalled/ippfind:     file format elf32-littlearm


Disassembly of section .init:

0000133c <.init>:
    133c:	push	{r3, lr}
    1340:	bl	3588 <ippGetInteger@plt+0x1e18>
    1344:	pop	{r3, pc}

Disassembly of section .plt:

00001348 <httpAddrFreeList@plt-0x14>:
    1348:	push	{lr}		; (str lr, [sp, #-4]!)
    134c:	ldr	lr, [pc, #4]	; 1358 <httpAddrFreeList@plt-0x4>
    1350:	add	lr, pc, lr
    1354:	ldr	pc, [lr, #8]!
    1358:	andeq	r6, r1, r0, lsl fp

0000135c <httpAddrFreeList@plt>:
    135c:	add	ip, pc, #0, 12
    1360:	add	ip, ip, #90112	; 0x16000
    1364:	ldr	pc, [ip, #2832]!	; 0xb10

00001368 <avahi_service_resolver_free@plt>:
    1368:	add	ip, pc, #0, 12
    136c:	add	ip, ip, #90112	; 0x16000
    1370:	ldr	pc, [ip, #2824]!	; 0xb08

00001374 <avahi_client_new@plt>:
    1374:	add	ip, pc, #0, 12
    1378:	add	ip, ip, #90112	; 0x16000
    137c:	ldr	pc, [ip, #2816]!	; 0xb00

00001380 <__memcpy_chk@plt>:
    1380:	add	ip, pc, #0, 12
    1384:	add	ip, ip, #90112	; 0x16000
    1388:	ldr	pc, [ip, #2808]!	; 0xaf8

0000138c <gettimeofday@plt>:
    138c:	add	ip, pc, #0, 12
    1390:	add	ip, ip, #90112	; 0x16000
    1394:	ldr	pc, [ip, #2800]!	; 0xaf0

00001398 <ippGetString@plt>:
    1398:	add	ip, pc, #0, 12
    139c:	add	ip, ip, #90112	; 0x16000
    13a0:	ldr	pc, [ip, #2792]!	; 0xae8

000013a4 <cupsArrayAdd@plt>:
    13a4:	add	ip, pc, #0, 12
    13a8:	add	ip, ip, #90112	; 0x16000
    13ac:	ldr	pc, [ip, #2784]!	; 0xae0

000013b0 <avahi_service_name_join@plt>:
    13b0:	add	ip, pc, #0, 12
    13b4:	add	ip, ip, #90112	; 0x16000
    13b8:	ldr	pc, [ip, #2776]!	; 0xad8

000013bc <_cupsSetLocale@plt>:
    13bc:	add	ip, pc, #0, 12
    13c0:	add	ip, ip, #90112	; 0x16000
    13c4:	ldr	pc, [ip, #2768]!	; 0xad0

000013c8 <_cups_strcasecmp@plt>:
    13c8:	add	ip, pc, #0, 12
    13cc:	add	ip, ip, #90112	; 0x16000
    13d0:	ldr	pc, [ip, #2760]!	; 0xac8

000013d4 <strtol@plt>:
    13d4:	add	ip, pc, #0, 12
    13d8:	add	ip, ip, #90112	; 0x16000
    13dc:	ldr	pc, [ip, #2752]!	; 0xac0

000013e0 <cupsArrayNew@plt>:
    13e0:	add	ip, pc, #0, 12
    13e4:	add	ip, ip, #90112	; 0x16000
    13e8:	ldr	pc, [ip, #2744]!	; 0xab8

000013ec <free@plt>:
    13ec:	add	ip, pc, #0, 12
    13f0:	add	ip, ip, #90112	; 0x16000
    13f4:	ldr	pc, [ip, #2736]!	; 0xab0

000013f8 <ippDelete@plt>:
    13f8:	add	ip, pc, #0, 12
    13fc:	add	ip, ip, #90112	; 0x16000
    1400:	ldr	pc, [ip, #2728]!	; 0xaa8

00001404 <_cupsLangPrintf@plt>:
    1404:	add	ip, pc, #0, 12
    1408:	add	ip, ip, #90112	; 0x16000
    140c:	ldr	pc, [ip, #2720]!	; 0xaa0

00001410 <strncmp@plt>:
    1410:	add	ip, pc, #0, 12
    1414:	add	ip, ip, #90112	; 0x16000
    1418:	ldr	pc, [ip, #2712]!	; 0xa98

0000141c <regcomp@plt>:
    141c:	add	ip, pc, #0, 12
    1420:	add	ip, ip, #90112	; 0x16000
    1424:	ldr	pc, [ip, #2704]!	; 0xa90

00001428 <avahi_service_browser_get_client@plt>:
    1428:	add	ip, pc, #0, 12
    142c:	add	ip, ip, #90112	; 0x16000
    1430:	ldr	pc, [ip, #2696]!	; 0xa88

00001434 <_cupsLangPuts@plt>:
    1434:	add	ip, pc, #0, 12
    1438:	add	ip, ip, #90112	; 0x16000
    143c:	ldr	pc, [ip, #2688]!	; 0xa80

00001440 <cupsGetOption@plt>:
    1440:	add	ip, pc, #0, 12
    1444:	add	ip, ip, #90112	; 0x16000
    1448:	ldr	pc, [ip, #2680]!	; 0xa78

0000144c <wait@plt>:
    144c:	add	ip, pc, #0, 12
    1450:	add	ip, ip, #90112	; 0x16000
    1454:	ldr	pc, [ip, #2672]!	; 0xa70

00001458 <ippGetCount@plt>:
    1458:	add	ip, pc, #0, 12
    145c:	add	ip, ip, #90112	; 0x16000
    1460:	ldr	pc, [ip, #2664]!	; 0xa68

00001464 <exit@plt>:
    1464:	add	ip, pc, #0, 12
    1468:	add	ip, ip, #90112	; 0x16000
    146c:	ldr	pc, [ip, #2656]!	; 0xa60

00001470 <strerror@plt>:
    1470:	add	ip, pc, #0, 12
    1474:	add	ip, ip, #90112	; 0x16000
    1478:	ldr	pc, [ip, #2648]!	; 0xa58

0000147c <cupsDoRequest@plt>:
    147c:	add	ip, pc, #0, 12
    1480:	add	ip, ip, #90112	; 0x16000
    1484:	ldr	pc, [ip, #2640]!	; 0xa50

00001488 <puts@plt>:
    1488:	add	ip, pc, #0, 12
    148c:	add	ip, ip, #90112	; 0x16000
    1490:	ldr	pc, [ip, #2632]!	; 0xa48

00001494 <httpAddrConnect@plt>:
    1494:	add	ip, pc, #0, 12
    1498:	add	ip, ip, #90112	; 0x16000
    149c:	ldr	pc, [ip, #2624]!	; 0xa40

000014a0 <httpConnect2@plt>:
    14a0:	add	ip, pc, #0, 12
    14a4:	add	ip, ip, #90112	; 0x16000
    14a8:	ldr	pc, [ip, #2616]!	; 0xa38

000014ac <ippEnumString@plt>:
    14ac:	add	ip, pc, #0, 12
    14b0:	add	ip, ip, #90112	; 0x16000
    14b4:	ldr	pc, [ip, #2608]!	; 0xa30

000014b8 <regexec@plt>:
    14b8:	add	ip, pc, #0, 12
    14bc:	add	ip, ip, #90112	; 0x16000
    14c0:	ldr	pc, [ip, #2600]!	; 0xa28

000014c4 <cupsArrayCount@plt>:
    14c4:	add	ip, pc, #0, 12
    14c8:	add	ip, ip, #90112	; 0x16000
    14cc:	ldr	pc, [ip, #2592]!	; 0xa20

000014d0 <__fprintf_chk@plt>:
    14d0:	add	ip, pc, #0, 12
    14d4:	add	ip, ip, #90112	; 0x16000
    14d8:	ldr	pc, [ip, #2584]!	; 0xa18

000014dc <cupsArrayNext@plt>:
    14dc:	add	ip, pc, #0, 12
    14e0:	add	ip, ip, #90112	; 0x16000
    14e4:	ldr	pc, [ip, #2576]!	; 0xa10

000014e8 <cupsArrayFind@plt>:
    14e8:	add	ip, pc, #0, 12
    14ec:	add	ip, ip, #90112	; 0x16000
    14f0:	ldr	pc, [ip, #2568]!	; 0xa08

000014f4 <httpGet@plt>:
    14f4:	add	ip, pc, #0, 12
    14f8:	add	ip, ip, #90112	; 0x16000
    14fc:	ldr	pc, [ip, #2560]!	; 0xa00

00001500 <avahi_strerror@plt>:
    1500:	add	ip, pc, #0, 12
    1504:	add	ip, ip, #90112	; 0x16000
    1508:	ldr	pc, [ip, #2552]!	; 0x9f8

0000150c <execve@plt>:
    150c:	add	ip, pc, #0, 12
    1510:	add	ip, ip, #90112	; 0x16000
    1514:	ldr	pc, [ip, #2544]!	; 0x9f0

00001518 <avahi_simple_poll_quit@plt>:
    1518:	add	ip, pc, #0, 12
    151c:	add	ip, ip, #90112	; 0x16000
    1520:	ldr	pc, [ip, #2536]!	; 0x9e8

00001524 <httpAddrGetList@plt>:
    1524:	add	ip, pc, #0, 12
    1528:	add	ip, ip, #90112	; 0x16000
    152c:	ldr	pc, [ip, #2528]!	; 0x9e0

00001530 <ippAddString@plt>:
    1530:	add	ip, pc, #0, 12
    1534:	add	ip, ip, #90112	; 0x16000
    1538:	ldr	pc, [ip, #2520]!	; 0x9d8

0000153c <abort@plt>:
    153c:	add	ip, pc, #0, 12
    1540:	add	ip, ip, #90112	; 0x16000
    1544:	ldr	pc, [ip, #2512]!	; 0x9d0

00001548 <regerror@plt>:
    1548:	add	ip, pc, #0, 12
    154c:	add	ip, ip, #90112	; 0x16000
    1550:	ldr	pc, [ip, #2504]!	; 0x9c8

00001554 <poll@plt>:
    1554:	add	ip, pc, #0, 12
    1558:	add	ip, ip, #90112	; 0x16000
    155c:	ldr	pc, [ip, #2496]!	; 0x9c0

00001560 <avahi_service_browser_new@plt>:
    1560:	add	ip, pc, #0, 12
    1564:	add	ip, ip, #90112	; 0x16000
    1568:	ldr	pc, [ip, #2488]!	; 0x9b8

0000156c <ippGetBoolean@plt>:
    156c:	add	ip, pc, #0, 12
    1570:	add	ip, ip, #90112	; 0x16000
    1574:	ldr	pc, [ip, #2480]!	; 0x9b0

00001578 <cupsLastError@plt>:
    1578:	add	ip, pc, #0, 12
    157c:	add	ip, ip, #90112	; 0x16000
    1580:	ldr	pc, [ip, #2472]!	; 0x9a8

00001584 <ippSetVersion@plt>:
    1584:	add	ip, pc, #0, 12
    1588:	add	ip, ip, #90112	; 0x16000
    158c:	ldr	pc, [ip, #2464]!	; 0x9a0

00001590 <avahi_simple_poll_set_func@plt>:
    1590:	add	ip, pc, #0, 12
    1594:	add	ip, ip, #90112	; 0x16000
    1598:	ldr	pc, [ip, #2456]!	; 0x998

0000159c <httpAssembleURI@plt>:
    159c:	add	ip, pc, #0, 12
    15a0:	add	ip, ip, #90112	; 0x16000
    15a4:	ldr	pc, [ip, #2448]!	; 0x990

000015a8 <strtod@plt>:
    15a8:	add	ip, pc, #0, 12
    15ac:	add	ip, ip, #90112	; 0x16000
    15b0:	ldr	pc, [ip, #2440]!	; 0x988

000015b4 <ippFindAttribute@plt>:
    15b4:	add	ip, pc, #0, 12
    15b8:	add	ip, ip, #90112	; 0x16000
    15bc:	ldr	pc, [ip, #2432]!	; 0x980

000015c0 <cupsUser@plt>:
    15c0:	add	ip, pc, #0, 12
    15c4:	add	ip, ip, #90112	; 0x16000
    15c8:	ldr	pc, [ip, #2424]!	; 0x978

000015cc <httpAddrClose@plt>:
    15cc:	add	ip, pc, #0, 12
    15d0:	add	ip, ip, #90112	; 0x16000
    15d4:	ldr	pc, [ip, #2416]!	; 0x970

000015d8 <__stack_chk_fail@plt>:
    15d8:	add	ip, pc, #0, 12
    15dc:	add	ip, ip, #90112	; 0x16000
    15e0:	ldr	pc, [ip, #2408]!	; 0x968

000015e4 <fork@plt>:
    15e4:	add	ip, pc, #0, 12
    15e8:	add	ip, ip, #90112	; 0x16000
    15ec:	ldr	pc, [ip, #2400]!	; 0x960

000015f0 <access@plt>:
    15f0:	add	ip, pc, #0, 12
    15f4:	add	ip, ip, #90112	; 0x16000
    15f8:	ldr	pc, [ip, #2392]!	; 0x958

000015fc <strstr@plt>:
    15fc:	add	ip, pc, #0, 12
    1600:	add	ip, ip, #90112	; 0x16000
    1604:	ldr	pc, [ip, #2384]!	; 0x950

00001608 <cupsFileFind@plt>:
    1608:	add	ip, pc, #0, 12
    160c:	add	ip, ip, #90112	; 0x16000
    1610:	ldr	pc, [ip, #2376]!	; 0x948

00001614 <ippNewRequest@plt>:
    1614:	add	ip, pc, #0, 12
    1618:	add	ip, ip, #90112	; 0x16000
    161c:	ldr	pc, [ip, #2368]!	; 0x940

00001620 <avahi_simple_poll_get@plt>:
    1620:	add	ip, pc, #0, 12
    1624:	add	ip, ip, #90112	; 0x16000
    1628:	ldr	pc, [ip, #2360]!	; 0x938

0000162c <calloc@plt>:
    162c:	add	ip, pc, #0, 12
    1630:	add	ip, ip, #90112	; 0x16000
    1634:	ldr	pc, [ip, #2352]!	; 0x930

00001638 <fwrite@plt>:
    1638:	add	ip, pc, #0, 12
    163c:	add	ip, ip, #90112	; 0x16000
    1640:	ldr	pc, [ip, #2344]!	; 0x928

00001644 <memcpy@plt>:
    1644:	add	ip, pc, #0, 12
    1648:	add	ip, ip, #90112	; 0x16000
    164c:	ldr	pc, [ip, #2336]!	; 0x920

00001650 <malloc@plt>:
    1650:	add	ip, pc, #0, 12
    1654:	add	ip, ip, #90112	; 0x16000
    1658:	ldr	pc, [ip, #2328]!	; 0x918

0000165c <strlen@plt>:
    165c:	add	ip, pc, #0, 12
    1660:	add	ip, ip, #90112	; 0x16000
    1664:	ldr	pc, [ip, #2320]!	; 0x910

00001668 <__snprintf_chk@plt>:
    1668:	add	ip, pc, #0, 12
    166c:	add	ip, ip, #90112	; 0x16000
    1670:	ldr	pc, [ip, #2312]!	; 0x908

00001674 <_cups_strlcpy@plt>:
    1674:	add	ip, pc, #0, 12
    1678:	add	ip, ip, #90112	; 0x16000
    167c:	ldr	pc, [ip, #2304]!	; 0x900

00001680 <httpFlush@plt>:
    1680:	add	ip, pc, #0, 12
    1684:	add	ip, ip, #90112	; 0x16000
    1688:	ldr	pc, [ip, #2296]!	; 0x8f8

0000168c <avahi_simple_poll_iterate@plt>:
    168c:	add	ip, pc, #0, 12
    1690:	add	ip, ip, #90112	; 0x16000
    1694:	ldr	pc, [ip, #2288]!	; 0x8f0

00001698 <httpClose@plt>:
    1698:	add	ip, pc, #0, 12
    169c:	add	ip, ip, #90112	; 0x16000
    16a0:	ldr	pc, [ip, #2280]!	; 0x8e8

000016a4 <strcmp@plt>:
    16a4:	add	ip, pc, #0, 12
    16a8:	add	ip, ip, #90112	; 0x16000
    16ac:	ldr	pc, [ip, #2272]!	; 0x8e0

000016b0 <avahi_service_resolver_new@plt>:
    16b0:	add	ip, pc, #0, 12
    16b4:	add	ip, ip, #90112	; 0x16000
    16b8:	ldr	pc, [ip, #2264]!	; 0x8d8

000016bc <avahi_simple_poll_new@plt>:
    16bc:	add	ip, pc, #0, 12
    16c0:	add	ip, ip, #90112	; 0x16000
    16c4:	ldr	pc, [ip, #2256]!	; 0x8d0

000016c8 <__errno_location@plt>:
    16c8:	add	ip, pc, #0, 12
    16cc:	add	ip, ip, #90112	; 0x16000
    16d0:	ldr	pc, [ip, #2248]!	; 0x8c8

000016d4 <sscanf@plt>:
    16d4:	add	ip, pc, #0, 12
    16d8:	add	ip, ip, #90112	; 0x16000
    16dc:	ldr	pc, [ip, #2240]!	; 0x8c0

000016e0 <cupsAddOption@plt>:
    16e0:	add	ip, pc, #0, 12
    16e4:	add	ip, ip, #90112	; 0x16000
    16e8:	ldr	pc, [ip, #2232]!	; 0x8b8

000016ec <avahi_client_errno@plt>:
    16ec:	add	ip, pc, #0, 12
    16f0:	add	ip, ip, #90112	; 0x16000
    16f4:	ldr	pc, [ip, #2224]!	; 0x8b0

000016f8 <httpUpdate@plt>:
    16f8:	add	ip, pc, #0, 12
    16fc:	add	ip, ip, #90112	; 0x16000
    1700:	ldr	pc, [ip, #2216]!	; 0x8a8

00001704 <cupsArrayFirst@plt>:
    1704:	add	ip, pc, #0, 12
    1708:	add	ip, ip, #90112	; 0x16000
    170c:	ldr	pc, [ip, #2208]!	; 0x8a0

00001710 <ippAddStrings@plt>:
    1710:	add	ip, pc, #0, 12
    1714:	add	ip, ip, #90112	; 0x16000
    1718:	ldr	pc, [ip, #2200]!	; 0x898

0000171c <getenv@plt>:
    171c:	add	ip, pc, #0, 12
    1720:	add	ip, ip, #90112	; 0x16000
    1724:	ldr	pc, [ip, #2192]!	; 0x890

00001728 <__libc_start_main@plt>:
    1728:	add	ip, pc, #0, 12
    172c:	add	ip, ip, #90112	; 0x16000
    1730:	ldr	pc, [ip, #2184]!	; 0x888

00001734 <__gmon_start__@plt>:
    1734:	add	ip, pc, #0, 12
    1738:	add	ip, ip, #90112	; 0x16000
    173c:	ldr	pc, [ip, #2176]!	; 0x880

00001740 <strchr@plt>:
    1740:	add	ip, pc, #0, 12
    1744:	add	ip, ip, #90112	; 0x16000
    1748:	ldr	pc, [ip, #2168]!	; 0x878

0000174c <__cxa_finalize@plt>:
    174c:	add	ip, pc, #0, 12
    1750:	add	ip, ip, #90112	; 0x16000
    1754:	ldr	pc, [ip, #2160]!	; 0x870

00001758 <strdup@plt>:
    1758:	add	ip, pc, #0, 12
    175c:	add	ip, ip, #90112	; 0x16000
    1760:	ldr	pc, [ip, #2152]!	; 0x868

00001764 <__printf_chk@plt>:
    1764:	add	ip, pc, #0, 12
    1768:	add	ip, ip, #90112	; 0x16000
    176c:	ldr	pc, [ip, #2144]!	; 0x860

00001770 <ippGetInteger@plt>:
    1770:	add	ip, pc, #0, 12
    1774:	add	ip, ip, #90112	; 0x16000
    1778:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

00001780 <.text>:
    1780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1784:	vpush	{d8-d9}
    1788:	ldr	r4, [pc, #3780]	; 2654 <ippGetInteger@plt+0xee4>
    178c:	ldr	r3, [pc, #3780]	; 2658 <ippGetInteger@plt+0xee8>
    1790:	add	r4, pc, r4
    1794:	sub	sp, sp, #1520	; 0x5f0
    1798:	sub	sp, sp, #4
    179c:	mov	r8, r0
    17a0:	str	r1, [sp, #24]
    17a4:	str	r0, [sp, #32]
    17a8:	str	r4, [sp, #72]	; 0x48
    17ac:	ldr	r3, [r4, r3]
    17b0:	mov	r0, r1
    17b4:	str	r3, [sp, #76]	; 0x4c
    17b8:	ldr	r3, [r3]
    17bc:	mov	r5, r1
    17c0:	str	r3, [sp, #1516]	; 0x5ec
    17c4:	bl	13bc <_cupsSetLocale@plt>
    17c8:	mov	r1, #0
    17cc:	mov	r0, r1
    17d0:	bl	13e0 <cupsArrayNew@plt>
    17d4:	mov	r1, #0
    17d8:	str	r0, [sp, #60]	; 0x3c
    17dc:	ldr	r0, [pc, #3704]	; 265c <ippGetInteger@plt+0xeec>
    17e0:	add	r0, pc, r0
    17e4:	bl	13e0 <cupsArrayNew@plt>
    17e8:	str	r0, [sp, #80]	; 0x50
    17ec:	ldr	r0, [pc, #3692]	; 2660 <ippGetInteger@plt+0xef0>
    17f0:	add	r0, pc, r0
    17f4:	bl	171c <getenv@plt>
    17f8:	cmp	r0, #0
    17fc:	beq	234c <ippGetInteger@plt+0xbdc>
    1800:	cmp	r8, #1
    1804:	ble	2358 <ippGetInteger@plt+0xbe8>
    1808:	ldr	r3, [pc, #3876]	; 2734 <ippGetInteger@plt+0xfc4>
    180c:	ldr	r7, [pc, #3664]	; 2664 <ippGetInteger@plt+0xef4>
    1810:	ldr	r6, [r4, r3]
    1814:	add	r7, pc, r7
    1818:	mov	r4, #1
    181c:	ldr	r3, [r5, #4]!
    1820:	ldr	r0, [r6]
    1824:	mov	r2, r7
    1828:	str	r3, [sp]
    182c:	mov	r1, #1
    1830:	mov	r3, r4
    1834:	add	r4, r4, #1
    1838:	bl	14d0 <__fprintf_chk@plt>
    183c:	cmp	r8, r4
    1840:	bne	181c <ippGetInteger@plt+0xac>
    1844:	ldr	r3, [pc, #3612]	; 2668 <ippGetInteger@plt+0xef8>
    1848:	mov	r7, #0
    184c:	add	r3, pc, r3
    1850:	str	r3, [sp, #44]	; 0x2c
    1854:	ldr	r3, [pc, #3600]	; 266c <ippGetInteger@plt+0xefc>
    1858:	mov	fp, #1
    185c:	add	r3, pc, r3
    1860:	str	r3, [sp, #56]	; 0x38
    1864:	ldr	r3, [pc, #3588]	; 2670 <ippGetInteger@plt+0xf00>
    1868:	str	r7, [sp, #28]
    186c:	add	r3, pc, r3
    1870:	str	r3, [sp, #68]	; 0x44
    1874:	ldr	r3, [pc, #3576]	; 2674 <ippGetInteger@plt+0xf04>
    1878:	mov	r6, r7
    187c:	add	r3, pc, r3
    1880:	mov	r9, r7
    1884:	mov	r5, r7
    1888:	str	r7, [sp, #52]	; 0x34
    188c:	str	r7, [sp, #36]	; 0x24
    1890:	mov	r4, fp
    1894:	str	r3, [sp, #64]	; 0x40
    1898:	b	192c <ippGetInteger@plt+0x1bc>
    189c:	ldr	r1, [sp, #44]	; 0x2c
    18a0:	mov	r0, r8
    18a4:	bl	16a4 <strcmp@plt>
    18a8:	subs	sl, r0, #0
    18ac:	bne	1a68 <ippGetInteger@plt+0x2f8>
    18b0:	ldr	r3, [sp, #28]
    18b4:	cmp	r3, #99	; 0x63
    18b8:	bgt	31e0 <ippGetInteger@plt+0x1a70>
    18bc:	str	sl, [sp]
    18c0:	mov	r1, r7
    18c4:	mov	r3, sl
    18c8:	mov	r2, sl
    18cc:	mov	r0, #1
    18d0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    18d4:	subs	r5, r0, #0
    18d8:	beq	1df0 <ippGetInteger@plt+0x680>
    18dc:	ldr	r2, [sp, #28]
    18e0:	add	r3, sp, #1520	; 0x5f0
    18e4:	cmp	r6, #0
    18e8:	add	r3, r3, r2, lsl #2
    18ec:	str	r5, [r3, #-1428]	; 0xfffffa6c
    18f0:	add	r3, r2, #1
    18f4:	beq	2174 <ippGetInteger@plt+0xa04>
    18f8:	ldr	r2, [r6, #8]
    18fc:	mov	r7, sl
    1900:	str	r2, [r5, #8]
    1904:	mov	r9, r5
    1908:	str	r5, [r6, #4]
    190c:	mov	fp, #1
    1910:	str	r6, [r5]
    1914:	mov	r6, sl
    1918:	str	r3, [sp, #28]
    191c:	ldr	r3, [sp, #32]
    1920:	add	r4, r4, #1
    1924:	cmp	r3, r4
    1928:	ble	199c <ippGetInteger@plt+0x22c>
    192c:	ldr	r2, [sp, #24]
    1930:	lsl	r3, r4, #2
    1934:	add	sl, r2, r3
    1938:	ldr	r8, [r2, r4, lsl #2]
    193c:	str	r4, [sp, #40]	; 0x28
    1940:	ldrb	r2, [r8]
    1944:	cmp	r2, #45	; 0x2d
    1948:	bne	189c <ippGetInteger@plt+0x12c>
    194c:	ldrb	r2, [r8, #1]
    1950:	str	r3, [sp, #48]	; 0x30
    1954:	cmp	r2, #45	; 0x2d
    1958:	bne	1ad0 <ippGetInteger@plt+0x360>
    195c:	ldr	r1, [pc, #3348]	; 2678 <ippGetInteger@plt+0xf08>
    1960:	mov	r0, r8
    1964:	add	r1, pc, r1
    1968:	bl	16a4 <strcmp@plt>
    196c:	ldr	r3, [sp, #48]	; 0x30
    1970:	cmp	r0, #0
    1974:	bne	20c4 <ippGetInteger@plt+0x954>
    1978:	cmp	fp, #2
    197c:	beq	3078 <ippGetInteger@plt+0x1908>
    1980:	cmp	r6, #0
    1984:	beq	3068 <ippGetInteger@plt+0x18f8>
    1988:	ldr	r3, [sp, #32]
    198c:	add	r4, r4, #1
    1990:	cmp	r3, r4
    1994:	mov	r5, r0
    1998:	bgt	192c <ippGetInteger@plt+0x1bc>
    199c:	ldr	r3, [sp, #28]
    19a0:	cmp	r3, #0
    19a4:	bne	31f0 <ippGetInteger@plt+0x1a80>
    19a8:	ldr	r3, [sp, #36]	; 0x24
    19ac:	cmp	r3, #0
    19b0:	beq	2d98 <ippGetInteger@plt+0x1628>
    19b4:	ldr	r0, [sp, #60]	; 0x3c
    19b8:	bl	14c4 <cupsArrayCount@plt>
    19bc:	cmp	r0, #0
    19c0:	beq	2a24 <ippGetInteger@plt+0x12b4>
    19c4:	ldr	r0, [pc, #3248]	; 267c <ippGetInteger@plt+0xf0c>
    19c8:	add	r0, pc, r0
    19cc:	bl	171c <getenv@plt>
    19d0:	cmp	r0, #0
    19d4:	beq	24f8 <ippGetInteger@plt+0xd88>
    19d8:	ldr	r0, [pc, #3232]	; 2680 <ippGetInteger@plt+0xf10>
    19dc:	add	r0, pc, r0
    19e0:	bl	1488 <puts@plt>
    19e4:	ldr	r4, [sp, #52]	; 0x34
    19e8:	cmp	r4, #0
    19ec:	beq	24b4 <ippGetInteger@plt+0xd44>
    19f0:	ldr	r8, [pc, #3212]	; 2684 <ippGetInteger@plt+0xf14>
    19f4:	ldr	r7, [pc, #3212]	; 2688 <ippGetInteger@plt+0xf18>
    19f8:	ldr	r6, [pc, #3212]	; 268c <ippGetInteger@plt+0xf1c>
    19fc:	add	r8, pc, r8
    1a00:	add	r7, pc, r7
    1a04:	add	r6, pc, r6
    1a08:	mov	r5, #4
    1a0c:	ldr	r1, [r4, #16]
    1a10:	ldr	r3, [pc, #3192]	; 2690 <ippGetInteger@plt+0xf20>
    1a14:	ldr	r2, [r4, #20]
    1a18:	add	r3, pc, r3
    1a1c:	add	r3, r3, r1, lsl #2
    1a20:	cmp	r2, #0
    1a24:	ldr	r1, [pc, #3176]	; 2694 <ippGetInteger@plt+0xf24>
    1a28:	ldr	r2, [r3, #12]
    1a2c:	movne	r3, r8
    1a30:	moveq	r3, r7
    1a34:	str	r2, [sp, #4]
    1a38:	str	r3, [sp]
    1a3c:	mov	r2, r5
    1a40:	mov	r3, r6
    1a44:	add	r1, pc, r1
    1a48:	mov	r0, #1
    1a4c:	bl	1764 <__printf_chk@plt>
    1a50:	ldr	r3, [r4, #12]
    1a54:	cmp	r3, #0
    1a58:	beq	247c <ippGetInteger@plt+0xd0c>
    1a5c:	add	r5, r5, #4
    1a60:	mov	r4, r3
    1a64:	b	1a0c <ippGetInteger@plt+0x29c>
    1a68:	ldr	r1, [sp, #56]	; 0x38
    1a6c:	mov	r0, r8
    1a70:	bl	16a4 <strcmp@plt>
    1a74:	cmp	r0, #0
    1a78:	bne	1ab0 <ippGetInteger@plt+0x340>
    1a7c:	ldr	r3, [sp, #28]
    1a80:	cmp	r3, #0
    1a84:	beq	3114 <ippGetInteger@plt+0x19a4>
    1a88:	ldr	r3, [sp, #28]
    1a8c:	add	r2, sp, #1520	; 0x5f0
    1a90:	sub	r3, r3, #1
    1a94:	str	r3, [sp, #28]
    1a98:	add	r3, r2, r3, lsl #2
    1a9c:	mov	r7, r0
    1aa0:	ldr	r6, [r3, #-1428]	; 0xfffffa6c
    1aa4:	mov	fp, #1
    1aa8:	ldr	r9, [r6, #8]
    1aac:	b	191c <ippGetInteger@plt+0x1ac>
    1ab0:	ldr	r1, [pc, #3040]	; 2698 <ippGetInteger@plt+0xf28>
    1ab4:	mov	r0, r8
    1ab8:	add	r1, pc, r1
    1abc:	bl	16a4 <strcmp@plt>
    1ac0:	cmp	r0, #0
    1ac4:	bne	2210 <ippGetInteger@plt+0xaa0>
    1ac8:	mov	r7, #1
    1acc:	b	191c <ippGetInteger@plt+0x1ac>
    1ad0:	cmp	r2, #0
    1ad4:	add	r8, r8, #1
    1ad8:	beq	191c <ippGetInteger@plt+0x1ac>
    1adc:	ldr	r3, [pc, #3000]	; 269c <ippGetInteger@plt+0xf2c>
    1ae0:	mov	r1, r2
    1ae4:	mov	r2, r7
    1ae8:	ldr	r7, [sp, #32]
    1aec:	add	r3, pc, r3
    1af0:	str	r3, [sp, #48]	; 0x30
    1af4:	sub	r3, r1, #52	; 0x34
    1af8:	cmp	r3, #68	; 0x44
    1afc:	addls	pc, pc, r3, lsl #2
    1b00:	b	2a7c <ippGetInteger@plt+0x130c>
    1b04:	b	2050 <ippGetInteger@plt+0x8e0>
    1b08:	b	2a7c <ippGetInteger@plt+0x130c>
    1b0c:	b	203c <ippGetInteger@plt+0x8cc>
    1b10:	b	2a7c <ippGetInteger@plt+0x130c>
    1b14:	b	2a7c <ippGetInteger@plt+0x130c>
    1b18:	b	2a7c <ippGetInteger@plt+0x130c>
    1b1c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b20:	b	2a7c <ippGetInteger@plt+0x130c>
    1b24:	b	2a7c <ippGetInteger@plt+0x130c>
    1b28:	b	2a7c <ippGetInteger@plt+0x130c>
    1b2c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b30:	b	2a7c <ippGetInteger@plt+0x130c>
    1b34:	b	2a7c <ippGetInteger@plt+0x130c>
    1b38:	b	2a7c <ippGetInteger@plt+0x130c>
    1b3c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b40:	b	2a7c <ippGetInteger@plt+0x130c>
    1b44:	b	2a7c <ippGetInteger@plt+0x130c>
    1b48:	b	2a7c <ippGetInteger@plt+0x130c>
    1b4c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b50:	b	2a7c <ippGetInteger@plt+0x130c>
    1b54:	b	2a7c <ippGetInteger@plt+0x130c>
    1b58:	b	2a7c <ippGetInteger@plt+0x130c>
    1b5c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b60:	b	2a7c <ippGetInteger@plt+0x130c>
    1b64:	b	2a7c <ippGetInteger@plt+0x130c>
    1b68:	b	2a7c <ippGetInteger@plt+0x130c>
    1b6c:	b	2008 <ippGetInteger@plt+0x898>
    1b70:	b	2a7c <ippGetInteger@plt+0x130c>
    1b74:	b	1fd4 <ippGetInteger@plt+0x864>
    1b78:	b	2a7c <ippGetInteger@plt+0x130c>
    1b7c:	b	2a7c <ippGetInteger@plt+0x130c>
    1b80:	b	2a7c <ippGetInteger@plt+0x130c>
    1b84:	b	1fa0 <ippGetInteger@plt+0x830>
    1b88:	b	2a7c <ippGetInteger@plt+0x130c>
    1b8c:	b	1f54 <ippGetInteger@plt+0x7e4>
    1b90:	b	2a7c <ippGetInteger@plt+0x130c>
    1b94:	b	2a7c <ippGetInteger@plt+0x130c>
    1b98:	b	2a7c <ippGetInteger@plt+0x130c>
    1b9c:	b	2a7c <ippGetInteger@plt+0x130c>
    1ba0:	b	2a7c <ippGetInteger@plt+0x130c>
    1ba4:	b	2a7c <ippGetInteger@plt+0x130c>
    1ba8:	b	2a7c <ippGetInteger@plt+0x130c>
    1bac:	b	2a7c <ippGetInteger@plt+0x130c>
    1bb0:	b	2a7c <ippGetInteger@plt+0x130c>
    1bb4:	b	2a7c <ippGetInteger@plt+0x130c>
    1bb8:	b	2a7c <ippGetInteger@plt+0x130c>
    1bbc:	b	2a7c <ippGetInteger@plt+0x130c>
    1bc0:	b	2a7c <ippGetInteger@plt+0x130c>
    1bc4:	b	1f1c <ippGetInteger@plt+0x7ac>
    1bc8:	b	2a7c <ippGetInteger@plt+0x130c>
    1bcc:	b	2a7c <ippGetInteger@plt+0x130c>
    1bd0:	b	2a7c <ippGetInteger@plt+0x130c>
    1bd4:	b	1ee4 <ippGetInteger@plt+0x774>
    1bd8:	b	2a7c <ippGetInteger@plt+0x130c>
    1bdc:	b	2a7c <ippGetInteger@plt+0x130c>
    1be0:	b	2a7c <ippGetInteger@plt+0x130c>
    1be4:	b	1ec0 <ippGetInteger@plt+0x750>
    1be8:	b	2a7c <ippGetInteger@plt+0x130c>
    1bec:	b	1e88 <ippGetInteger@plt+0x718>
    1bf0:	b	2a7c <ippGetInteger@plt+0x130c>
    1bf4:	b	1e64 <ippGetInteger@plt+0x6f4>
    1bf8:	b	1e40 <ippGetInteger@plt+0x6d0>
    1bfc:	b	1e1c <ippGetInteger@plt+0x6ac>
    1c00:	b	1d94 <ippGetInteger@plt+0x624>
    1c04:	b	1dc0 <ippGetInteger@plt+0x650>
    1c08:	b	1cb0 <ippGetInteger@plt+0x540>
    1c0c:	b	2a7c <ippGetInteger@plt+0x130c>
    1c10:	b	2a7c <ippGetInteger@plt+0x130c>
    1c14:	b	1c18 <ippGetInteger@plt+0x4a8>
    1c18:	add	r4, r4, #1
    1c1c:	cmp	r7, r4
    1c20:	ble	30b8 <ippGetInteger@plt+0x1948>
    1c24:	ldr	r3, [sp, #24]
    1c28:	lsl	sl, r4, #2
    1c2c:	add	r0, r3, sl
    1c30:	mov	r3, #0
    1c34:	mov	r1, r2
    1c38:	str	r0, [sp]
    1c3c:	mov	r2, r3
    1c40:	mov	r0, #16
    1c44:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1c48:	subs	r5, r0, #0
    1c4c:	beq	1df0 <ippGetInteger@plt+0x680>
    1c50:	ldr	r3, [sp, #24]
    1c54:	sub	sl, sl, #4
    1c58:	add	sl, r3, sl
    1c5c:	str	r5, [sp, #36]	; 0x24
    1c60:	mov	r5, sl
    1c64:	ldr	sl, [sp, #68]	; 0x44
    1c68:	b	1c78 <ippGetInteger@plt+0x508>
    1c6c:	add	r4, r4, #1
    1c70:	cmp	r7, r4
    1c74:	beq	1c98 <ippGetInteger@plt+0x528>
    1c78:	mov	r1, sl
    1c7c:	ldr	r0, [r5, #4]!
    1c80:	bl	16a4 <strcmp@plt>
    1c84:	cmp	r0, #0
    1c88:	bne	1c6c <ippGetInteger@plt+0x4fc>
    1c8c:	cmp	r4, r7
    1c90:	ldr	r5, [sp, #36]	; 0x24
    1c94:	blt	1db4 <ippGetInteger@plt+0x644>
    1c98:	ldr	r2, [pc, #2560]	; 26a0 <ippGetInteger@plt+0xf30>
    1c9c:	ldr	r1, [pc, #2560]	; 26a4 <ippGetInteger@plt+0xf34>
    1ca0:	ldr	r3, [pc, #2700]	; 2734 <ippGetInteger@plt+0xfc4>
    1ca4:	add	r2, pc, r2
    1ca8:	add	r1, pc, r1
    1cac:	b	2fa4 <ippGetInteger@plt+0x1834>
    1cb0:	add	r4, r4, #1
    1cb4:	cmp	r7, r4
    1cb8:	ble	30a0 <ippGetInteger@plt+0x1930>
    1cbc:	mov	r3, #0
    1cc0:	str	r3, [sp]
    1cc4:	mov	r1, r2
    1cc8:	mov	r2, r3
    1ccc:	ldr	r3, [sp, #24]
    1cd0:	mov	r0, #15
    1cd4:	ldr	r3, [r3, r4, lsl #2]
    1cd8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1cdc:	subs	r5, r0, #0
    1ce0:	beq	1df0 <ippGetInteger@plt+0x680>
    1ce4:	cmp	r6, #0
    1ce8:	sub	r2, fp, #1
    1cec:	clz	r2, r2
    1cf0:	lsr	r2, r2, #5
    1cf4:	moveq	r2, #0
    1cf8:	cmp	r2, #0
    1cfc:	beq	2064 <ippGetInteger@plt+0x8f4>
    1d00:	ldr	r3, [r6]
    1d04:	cmp	r3, #0
    1d08:	beq	1d64 <ippGetInteger@plt+0x5f4>
    1d0c:	cmp	r9, #0
    1d10:	beq	1d64 <ippGetInteger@plt+0x5f4>
    1d14:	ldr	r3, [r9, #16]
    1d18:	cmp	r3, #1
    1d1c:	beq	1d64 <ippGetInteger@plt+0x5f4>
    1d20:	mov	sl, #0
    1d24:	str	sl, [sp]
    1d28:	mov	r3, sl
    1d2c:	mov	r2, sl
    1d30:	mov	r1, sl
    1d34:	mov	r0, #1
    1d38:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1d3c:	cmp	r0, #0
    1d40:	beq	1df0 <ippGetInteger@plt+0x680>
    1d44:	ldr	r3, [r6]
    1d48:	str	r0, [r3, #4]
    1d4c:	str	r9, [r0, #8]
    1d50:	mov	r9, r0
    1d54:	str	r3, [r0]
    1d58:	str	r6, [r0, #12]
    1d5c:	str	r0, [r6, #8]
    1d60:	str	sl, [r6]
    1d64:	str	r9, [r5, #8]
    1d68:	str	r6, [r5]
    1d6c:	str	r5, [r6, #4]
    1d70:	mov	r2, #0
    1d74:	mov	r6, r5
    1d78:	mov	fp, #1
    1d7c:	ldrb	r1, [r8, #1]!
    1d80:	mov	r5, #0
    1d84:	cmp	r1, r5
    1d88:	bne	1af4 <ippGetInteger@plt+0x384>
    1d8c:	mov	r7, r2
    1d90:	b	191c <ippGetInteger@plt+0x1ac>
    1d94:	mov	r3, #0
    1d98:	mov	r1, r2
    1d9c:	str	r3, [sp]
    1da0:	mov	r2, r3
    1da4:	mov	r0, #18
    1da8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1dac:	subs	r5, r0, #0
    1db0:	beq	1df0 <ippGetInteger@plt+0x680>
    1db4:	mov	r3, #1
    1db8:	str	r3, [sp, #36]	; 0x24
    1dbc:	b	1ce4 <ippGetInteger@plt+0x574>
    1dc0:	add	r4, r4, #1
    1dc4:	cmp	r7, r4
    1dc8:	ble	3088 <ippGetInteger@plt+0x1918>
    1dcc:	mov	r1, r2
    1dd0:	ldr	r2, [sp, #24]
    1dd4:	mov	r3, #0
    1dd8:	str	r3, [sp]
    1ddc:	mov	r0, #13
    1de0:	ldr	r2, [r2, r4, lsl #2]
    1de4:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1de8:	subs	r5, r0, #0
    1dec:	bne	1ce4 <ippGetInteger@plt+0x574>
    1df0:	mov	r7, #4
    1df4:	ldr	r3, [sp, #76]	; 0x4c
    1df8:	ldr	r2, [sp, #1516]	; 0x5ec
    1dfc:	mov	r0, r7
    1e00:	ldr	r3, [r3]
    1e04:	cmp	r2, r3
    1e08:	bne	30d0 <ippGetInteger@plt+0x1960>
    1e0c:	add	sp, sp, #1520	; 0x5f0
    1e10:	add	sp, sp, #4
    1e14:	vpop	{d8-d9}
    1e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e1c:	mov	r3, #0
    1e20:	mov	r1, r2
    1e24:	str	r3, [sp]
    1e28:	mov	r2, r3
    1e2c:	mov	r0, #6
    1e30:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1e34:	subs	r5, r0, #0
    1e38:	bne	1ce4 <ippGetInteger@plt+0x574>
    1e3c:	b	1df0 <ippGetInteger@plt+0x680>
    1e40:	mov	r3, #0
    1e44:	mov	r1, r2
    1e48:	str	r3, [sp]
    1e4c:	mov	r2, r3
    1e50:	mov	r0, #20
    1e54:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1e58:	subs	r5, r0, #0
    1e5c:	bne	1db4 <ippGetInteger@plt+0x644>
    1e60:	b	1df0 <ippGetInteger@plt+0x680>
    1e64:	mov	r3, #0
    1e68:	mov	r1, r2
    1e6c:	str	r3, [sp]
    1e70:	mov	r2, r3
    1e74:	mov	r0, #19
    1e78:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1e7c:	subs	r5, r0, #0
    1e80:	bne	1db4 <ippGetInteger@plt+0x644>
    1e84:	b	1df0 <ippGetInteger@plt+0x680>
    1e88:	add	r4, r4, #1
    1e8c:	cmp	r7, r4
    1e90:	ble	313c <ippGetInteger@plt+0x19cc>
    1e94:	mov	r3, #0
    1e98:	str	r3, [sp]
    1e9c:	mov	r1, r2
    1ea0:	mov	r2, r3
    1ea4:	ldr	r3, [sp, #24]
    1ea8:	mov	r0, #8
    1eac:	ldr	r3, [r3, r4, lsl #2]
    1eb0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1eb4:	subs	r5, r0, #0
    1eb8:	bne	1ce4 <ippGetInteger@plt+0x574>
    1ebc:	b	1df0 <ippGetInteger@plt+0x680>
    1ec0:	mov	r3, #0
    1ec4:	mov	r1, r2
    1ec8:	str	r3, [sp]
    1ecc:	mov	r2, r3
    1ed0:	mov	r0, #17
    1ed4:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1ed8:	subs	r5, r0, #0
    1edc:	bne	1db4 <ippGetInteger@plt+0x644>
    1ee0:	b	1df0 <ippGetInteger@plt+0x680>
    1ee4:	add	r4, r4, #1
    1ee8:	cmp	r7, r4
    1eec:	ble	3124 <ippGetInteger@plt+0x19b4>
    1ef0:	mov	r3, #0
    1ef4:	str	r3, [sp]
    1ef8:	mov	r1, r2
    1efc:	mov	r2, r3
    1f00:	ldr	r3, [sp, #24]
    1f04:	mov	r0, #10
    1f08:	ldr	r3, [r3, r4, lsl #2]
    1f0c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1f10:	subs	r5, r0, #0
    1f14:	bne	1ce4 <ippGetInteger@plt+0x574>
    1f18:	b	1df0 <ippGetInteger@plt+0x680>
    1f1c:	add	r4, r4, #1
    1f20:	cmp	r7, r4
    1f24:	ble	319c <ippGetInteger@plt+0x1a2c>
    1f28:	mov	r3, #0
    1f2c:	str	r3, [sp]
    1f30:	mov	r1, r2
    1f34:	mov	r2, r3
    1f38:	ldr	r3, [sp, #24]
    1f3c:	mov	r0, #7
    1f40:	ldr	r3, [r3, r4, lsl #2]
    1f44:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1f48:	subs	r5, r0, #0
    1f4c:	bne	1ce4 <ippGetInteger@plt+0x574>
    1f50:	b	1df0 <ippGetInteger@plt+0x680>
    1f54:	add	r4, r4, #1
    1f58:	cmp	r7, r4
    1f5c:	ble	3184 <ippGetInteger@plt+0x1a14>
    1f60:	ldr	r3, [sp, #24]
    1f64:	ldr	r1, [sp, #64]	; 0x40
    1f68:	str	r2, [sp, #40]	; 0x28
    1f6c:	ldr	sl, [r3, r4, lsl #2]
    1f70:	mov	r0, sl
    1f74:	bl	16a4 <strcmp@plt>
    1f78:	ldr	r2, [sp, #40]	; 0x28
    1f7c:	cmp	r0, #0
    1f80:	bne	2094 <ippGetInteger@plt+0x924>
    1f84:	ldr	r3, [pc, #1820]	; 26a8 <ippGetInteger@plt+0xf38>
    1f88:	mov	r1, #11
    1f8c:	add	r3, pc, r3
    1f90:	str	r1, [r3]
    1f94:	cmp	r5, #0
    1f98:	beq	1d7c <ippGetInteger@plt+0x60c>
    1f9c:	b	1ce4 <ippGetInteger@plt+0x574>
    1fa0:	add	r4, r4, #1
    1fa4:	cmp	r7, r4
    1fa8:	ble	316c <ippGetInteger@plt+0x19fc>
    1fac:	ldr	r3, [sp, #24]
    1fb0:	mov	r1, #0
    1fb4:	str	r2, [sp, #40]	; 0x28
    1fb8:	ldr	r0, [r3, r4, lsl #2]
    1fbc:	bl	15a8 <strtod@plt>
    1fc0:	ldr	r3, [pc, #1764]	; 26ac <ippGetInteger@plt+0xf3c>
    1fc4:	ldr	r2, [sp, #40]	; 0x28
    1fc8:	add	r3, pc, r3
    1fcc:	vstr	d0, [r3, #8]
    1fd0:	b	1f94 <ippGetInteger@plt+0x824>
    1fd4:	add	r4, r4, #1
    1fd8:	cmp	r7, r4
    1fdc:	ble	3154 <ippGetInteger@plt+0x19e4>
    1fe0:	mov	r1, r2
    1fe4:	ldr	r2, [sp, #24]
    1fe8:	mov	r3, #0
    1fec:	str	r3, [sp]
    1ff0:	mov	r0, #11
    1ff4:	ldr	r2, [r2, r4, lsl #2]
    1ff8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    1ffc:	subs	r5, r0, #0
    2000:	bne	1ce4 <ippGetInteger@plt+0x574>
    2004:	b	1df0 <ippGetInteger@plt+0x680>
    2008:	add	r4, r4, #1
    200c:	cmp	r7, r4
    2010:	ble	30d4 <ippGetInteger@plt+0x1964>
    2014:	mov	r1, r2
    2018:	ldr	r2, [sp, #24]
    201c:	mov	r3, #0
    2020:	str	r3, [sp]
    2024:	mov	r0, #9
    2028:	ldr	r2, [r2, r4, lsl #2]
    202c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2030:	subs	r5, r0, #0
    2034:	bne	1ce4 <ippGetInteger@plt+0x574>
    2038:	b	1df0 <ippGetInteger@plt+0x680>
    203c:	ldr	r3, [pc, #1644]	; 26b0 <ippGetInteger@plt+0xf40>
    2040:	mov	r1, #10
    2044:	add	r3, pc, r3
    2048:	str	r1, [r3, #4]
    204c:	b	1f94 <ippGetInteger@plt+0x824>
    2050:	ldr	r3, [pc, #1628]	; 26b4 <ippGetInteger@plt+0xf44>
    2054:	mov	r1, #2
    2058:	add	r3, pc, r3
    205c:	str	r1, [r3, #4]
    2060:	b	1f94 <ippGetInteger@plt+0x824>
    2064:	cmp	r6, #0
    2068:	str	r9, [r5, #8]
    206c:	str	r6, [r5]
    2070:	bne	1d6c <ippGetInteger@plt+0x5fc>
    2074:	cmp	r9, #0
    2078:	moveq	r6, r5
    207c:	strne	r5, [r9, #12]
    2080:	movne	r6, r5
    2084:	streq	r6, [sp, #52]	; 0x34
    2088:	moveq	r2, r9
    208c:	mov	fp, #1
    2090:	b	1d7c <ippGetInteger@plt+0x60c>
    2094:	ldr	r1, [sp, #48]	; 0x30
    2098:	mov	r0, sl
    209c:	str	r2, [sp, #40]	; 0x28
    20a0:	bl	16a4 <strcmp@plt>
    20a4:	ldr	r2, [sp, #40]	; 0x28
    20a8:	cmp	r0, #0
    20ac:	bne	21bc <ippGetInteger@plt+0xa4c>
    20b0:	ldr	r3, [pc, #1536]	; 26b8 <ippGetInteger@plt+0xf48>
    20b4:	mov	r1, #20
    20b8:	add	r3, pc, r3
    20bc:	str	r1, [r3]
    20c0:	b	1f94 <ippGetInteger@plt+0x824>
    20c4:	str	r3, [sp, #48]	; 0x30
    20c8:	ldr	r3, [pc, #1516]	; 26bc <ippGetInteger@plt+0xf4c>
    20cc:	mov	r0, r8
    20d0:	add	r3, pc, r3
    20d4:	mov	r1, r3
    20d8:	str	r3, [sp, #84]	; 0x54
    20dc:	bl	16a4 <strcmp@plt>
    20e0:	ldr	r3, [sp, #48]	; 0x30
    20e4:	subs	r2, r0, #0
    20e8:	bne	2220 <ippGetInteger@plt+0xab0>
    20ec:	ldr	r3, [sp, #32]
    20f0:	add	r4, r4, #1
    20f4:	cmp	r3, r4
    20f8:	ble	30ec <ippGetInteger@plt+0x197c>
    20fc:	str	r2, [sp]
    2100:	mov	r1, r7
    2104:	ldr	r3, [sl, #4]
    2108:	mov	r0, #7
    210c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2110:	subs	r5, r0, #0
    2114:	beq	1df0 <ippGetInteger@plt+0x680>
    2118:	cmp	r6, #0
    211c:	sub	r7, fp, #1
    2120:	clz	r7, r7
    2124:	lsr	r7, r7, #5
    2128:	moveq	r7, #0
    212c:	cmp	r7, #0
    2130:	beq	218c <ippGetInteger@plt+0xa1c>
    2134:	ldr	r3, [r6]
    2138:	cmp	r3, #0
    213c:	beq	2154 <ippGetInteger@plt+0x9e4>
    2140:	cmp	r9, #0
    2144:	beq	2154 <ippGetInteger@plt+0x9e4>
    2148:	ldr	r3, [r9, #16]
    214c:	cmp	r3, #1
    2150:	bne	2380 <ippGetInteger@plt+0xc10>
    2154:	str	r9, [r5, #8]
    2158:	str	r6, [r5]
    215c:	mov	r7, #0
    2160:	str	r5, [r6, #4]
    2164:	mov	fp, #1
    2168:	mov	r6, r5
    216c:	mov	r5, r7
    2170:	b	191c <ippGetInteger@plt+0x1ac>
    2174:	str	r3, [sp, #28]
    2178:	mov	r7, r6
    217c:	mov	r9, r5
    2180:	str	r5, [sp, #52]	; 0x34
    2184:	mov	fp, #1
    2188:	b	191c <ippGetInteger@plt+0x1ac>
    218c:	cmp	r6, #0
    2190:	str	r9, [r5, #8]
    2194:	str	r6, [r5]
    2198:	bne	215c <ippGetInteger@plt+0x9ec>
    219c:	cmp	r9, #0
    21a0:	beq	29d0 <ippGetInteger@plt+0x1260>
    21a4:	mov	r3, r5
    21a8:	str	r5, [r9, #12]
    21ac:	mov	fp, #1
    21b0:	mov	r5, r6
    21b4:	mov	r6, r3
    21b8:	b	191c <ippGetInteger@plt+0x1ac>
    21bc:	ldr	r1, [pc, #1276]	; 26c0 <ippGetInteger@plt+0xf50>
    21c0:	mov	r0, sl
    21c4:	add	r1, pc, r1
    21c8:	str	r2, [sp, #40]	; 0x28
    21cc:	bl	16a4 <strcmp@plt>
    21d0:	ldr	r2, [sp, #40]	; 0x28
    21d4:	cmp	r0, #0
    21d8:	beq	2338 <ippGetInteger@plt+0xbc8>
    21dc:	ldr	r1, [pc, #1248]	; 26c4 <ippGetInteger@plt+0xf54>
    21e0:	mov	r0, sl
    21e4:	add	r1, pc, r1
    21e8:	str	r2, [sp, #40]	; 0x28
    21ec:	bl	16a4 <strcmp@plt>
    21f0:	cmp	r0, #0
    21f4:	bne	31b4 <ippGetInteger@plt+0x1a44>
    21f8:	ldr	r3, [pc, #1224]	; 26c8 <ippGetInteger@plt+0xf58>
    21fc:	mov	r1, #22
    2200:	add	r3, pc, r3
    2204:	ldr	r2, [sp, #40]	; 0x28
    2208:	str	r1, [r3]
    220c:	b	1f94 <ippGetInteger@plt+0x824>
    2210:	mov	r1, r8
    2214:	ldr	r0, [sp, #60]	; 0x3c
    2218:	bl	13a4 <cupsArrayAdd@plt>
    221c:	b	191c <ippGetInteger@plt+0x1ac>
    2220:	str	r3, [sp, #48]	; 0x30
    2224:	ldr	r3, [pc, #1184]	; 26cc <ippGetInteger@plt+0xf5c>
    2228:	mov	r0, r8
    222c:	add	r3, pc, r3
    2230:	mov	r1, r3
    2234:	str	r3, [sp, #84]	; 0x54
    2238:	bl	16a4 <strcmp@plt>
    223c:	ldr	r3, [sp, #48]	; 0x30
    2240:	cmp	r0, #0
    2244:	beq	23c8 <ippGetInteger@plt+0xc58>
    2248:	ldr	r1, [pc, #1152]	; 26d0 <ippGetInteger@plt+0xf60>
    224c:	mov	r0, r8
    2250:	add	r1, pc, r1
    2254:	bl	16a4 <strcmp@plt>
    2258:	subs	r3, r0, #0
    225c:	beq	29e8 <ippGetInteger@plt+0x1278>
    2260:	ldr	r1, [pc, #1132]	; 26d4 <ippGetInteger@plt+0xf64>
    2264:	mov	r0, r8
    2268:	add	r1, pc, r1
    226c:	bl	16a4 <strcmp@plt>
    2270:	cmp	r0, #0
    2274:	beq	2f94 <ippGetInteger@plt+0x1824>
    2278:	ldr	r3, [pc, #1112]	; 26d8 <ippGetInteger@plt+0xf68>
    227c:	mov	r0, r8
    2280:	add	r3, pc, r3
    2284:	mov	r1, r3
    2288:	str	r3, [sp, #48]	; 0x30
    228c:	bl	16a4 <strcmp@plt>
    2290:	subs	r2, r0, #0
    2294:	beq	244c <ippGetInteger@plt+0xcdc>
    2298:	ldr	r1, [pc, #1084]	; 26dc <ippGetInteger@plt+0xf6c>
    229c:	mov	r0, r8
    22a0:	add	r1, pc, r1
    22a4:	bl	16a4 <strcmp@plt>
    22a8:	subs	r3, r0, #0
    22ac:	beq	2be0 <ippGetInteger@plt+0x1470>
    22b0:	ldr	r1, [pc, #1064]	; 26e0 <ippGetInteger@plt+0xf70>
    22b4:	mov	r0, r8
    22b8:	add	r1, pc, r1
    22bc:	bl	16a4 <strcmp@plt>
    22c0:	cmp	r0, #0
    22c4:	beq	2d74 <ippGetInteger@plt+0x1604>
    22c8:	ldr	r2, [pc, #1044]	; 26e4 <ippGetInteger@plt+0xf74>
    22cc:	mov	r0, r8
    22d0:	add	r2, pc, r2
    22d4:	mov	r1, r2
    22d8:	str	r2, [sp, #48]	; 0x30
    22dc:	bl	16a4 <strcmp@plt>
    22e0:	subs	r3, r0, #0
    22e4:	beq	2a48 <ippGetInteger@plt+0x12d8>
    22e8:	ldr	r3, [pc, #1016]	; 26e8 <ippGetInteger@plt+0xf78>
    22ec:	mov	r0, r8
    22f0:	add	r3, pc, r3
    22f4:	mov	r1, r3
    22f8:	str	r3, [sp, #48]	; 0x30
    22fc:	bl	16a4 <strcmp@plt>
    2300:	subs	r2, r0, #0
    2304:	bne	2e48 <ippGetInteger@plt+0x16d8>
    2308:	ldr	r3, [sp, #32]
    230c:	add	r4, r4, #1
    2310:	cmp	r3, r4
    2314:	ble	3200 <ippGetInteger@plt+0x1a90>
    2318:	str	r2, [sp]
    231c:	mov	r1, r7
    2320:	ldr	r3, [sl, #4]
    2324:	mov	r0, #8
    2328:	bl	3c54 <ippGetInteger@plt+0x24e4>
    232c:	subs	r5, r0, #0
    2330:	bne	2118 <ippGetInteger@plt+0x9a8>
    2334:	b	1df0 <ippGetInteger@plt+0x680>
    2338:	ldr	r3, [pc, #940]	; 26ec <ippGetInteger@plt+0xf7c>
    233c:	mov	r1, #21
    2340:	add	r3, pc, r3
    2344:	str	r1, [r3]
    2348:	b	1f94 <ippGetInteger@plt+0x824>
    234c:	ldr	r3, [sp, #32]
    2350:	cmp	r3, #1
    2354:	bgt	1844 <ippGetInteger@plt+0xd4>
    2358:	mov	r3, #0
    235c:	str	r3, [sp]
    2360:	mov	r2, r3
    2364:	mov	r1, r3
    2368:	mov	r0, #19
    236c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2370:	subs	r3, r0, #0
    2374:	str	r3, [sp, #52]	; 0x34
    2378:	beq	1df0 <ippGetInteger@plt+0x680>
    237c:	b	19b4 <ippGetInteger@plt+0x244>
    2380:	mov	r7, #0
    2384:	str	r7, [sp]
    2388:	mov	r3, r7
    238c:	mov	r2, r7
    2390:	mov	r1, r7
    2394:	mov	r0, #1
    2398:	bl	3c54 <ippGetInteger@plt+0x24e4>
    239c:	cmp	r0, #0
    23a0:	beq	1df0 <ippGetInteger@plt+0x680>
    23a4:	ldr	r3, [r6]
    23a8:	str	r0, [r3, #4]
    23ac:	str	r9, [r0, #8]
    23b0:	str	r3, [r0]
    23b4:	str	r6, [r0, #12]
    23b8:	mov	r9, r0
    23bc:	str	r0, [r6, #8]
    23c0:	str	r7, [r6]
    23c4:	b	2154 <ippGetInteger@plt+0x9e4>
    23c8:	ldr	r2, [sp, #32]
    23cc:	add	r4, r4, #1
    23d0:	cmp	r2, r4
    23d4:	ble	3054 <ippGetInteger@plt+0x18e4>
    23d8:	add	r2, r3, #4
    23dc:	ldr	r3, [sp, #24]
    23e0:	mov	r1, r7
    23e4:	add	r2, r3, r2
    23e8:	str	r2, [sp]
    23ec:	mov	r3, r0
    23f0:	mov	r2, r0
    23f4:	mov	r0, #16
    23f8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    23fc:	subs	r5, r0, #0
    2400:	beq	1df0 <ippGetInteger@plt+0x680>
    2404:	ldr	r7, [pc, #740]	; 26f0 <ippGetInteger@plt+0xf80>
    2408:	ldr	r8, [sp, #32]
    240c:	add	r7, pc, r7
    2410:	b	2420 <ippGetInteger@plt+0xcb0>
    2414:	add	r4, r4, #1
    2418:	cmp	r8, r4
    241c:	beq	303c <ippGetInteger@plt+0x18cc>
    2420:	mov	r1, r7
    2424:	ldr	r0, [sl, #4]!
    2428:	bl	16a4 <strcmp@plt>
    242c:	cmp	r0, #0
    2430:	bne	2414 <ippGetInteger@plt+0xca4>
    2434:	ldr	r3, [sp, #32]
    2438:	cmp	r4, r3
    243c:	bge	303c <ippGetInteger@plt+0x18cc>
    2440:	mov	r3, #1
    2444:	str	r3, [sp, #36]	; 0x24
    2448:	b	2118 <ippGetInteger@plt+0x9a8>
    244c:	ldr	r3, [sp, #32]
    2450:	add	r4, r4, #1
    2454:	cmp	r3, r4
    2458:	ble	2fc0 <ippGetInteger@plt+0x1850>
    245c:	str	r2, [sp]
    2460:	mov	r1, r7
    2464:	ldr	r3, [sl, #4]
    2468:	mov	r0, #10
    246c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2470:	subs	r5, r0, #0
    2474:	bne	2118 <ippGetInteger@plt+0x9a8>
    2478:	b	1df0 <ippGetInteger@plt+0x680>
    247c:	ldr	r3, [r4, #4]
    2480:	cmp	r3, #0
    2484:	movne	r4, r3
    2488:	bne	1a0c <ippGetInteger@plt+0x29c>
    248c:	ldr	r3, [r4, #8]
    2490:	cmp	r3, #0
    2494:	beq	24b4 <ippGetInteger@plt+0xd44>
    2498:	ldr	r4, [r3, #4]
    249c:	sub	r5, r5, #4
    24a0:	cmp	r4, #0
    24a4:	bne	1a0c <ippGetInteger@plt+0x29c>
    24a8:	ldr	r3, [r3, #8]
    24ac:	cmp	r3, #0
    24b0:	bne	2498 <ippGetInteger@plt+0xd28>
    24b4:	ldr	r0, [pc, #568]	; 26f4 <ippGetInteger@plt+0xf84>
    24b8:	add	r0, pc, r0
    24bc:	bl	1488 <puts@plt>
    24c0:	ldr	r5, [sp, #60]	; 0x3c
    24c4:	mov	r0, r5
    24c8:	bl	1704 <cupsArrayFirst@plt>
    24cc:	subs	r2, r0, #0
    24d0:	beq	24f8 <ippGetInteger@plt+0xd88>
    24d4:	ldr	r4, [pc, #540]	; 26f8 <ippGetInteger@plt+0xf88>
    24d8:	add	r4, pc, r4
    24dc:	mov	r1, r4
    24e0:	mov	r0, #1
    24e4:	bl	1764 <__printf_chk@plt>
    24e8:	mov	r0, r5
    24ec:	bl	14dc <cupsArrayNext@plt>
    24f0:	subs	r2, r0, #0
    24f4:	bne	24dc <ippGetInteger@plt+0xd6c>
    24f8:	bl	16bc <avahi_simple_poll_new@plt>
    24fc:	ldr	r4, [pc, #504]	; 26fc <ippGetInteger@plt+0xf8c>
    2500:	add	r4, pc, r4
    2504:	cmp	r0, #0
    2508:	str	r0, [r4, #12]
    250c:	beq	2e10 <ippGetInteger@plt+0x16a0>
    2510:	ldr	r1, [pc, #488]	; 2700 <ippGetInteger@plt+0xf90>
    2514:	mov	r2, #0
    2518:	add	r1, pc, r1
    251c:	bl	1590 <avahi_simple_poll_set_func@plt>
    2520:	ldr	r0, [r4, #12]
    2524:	bl	1620 <avahi_simple_poll_get@plt>
    2528:	ldr	r2, [pc, #468]	; 2704 <ippGetInteger@plt+0xf94>
    252c:	add	r3, sp, #88	; 0x58
    2530:	str	r3, [sp]
    2534:	add	r2, pc, r2
    2538:	ldr	r3, [r4, #12]
    253c:	mov	r1, #0
    2540:	bl	1374 <avahi_client_new@plt>
    2544:	cmp	r0, #0
    2548:	str	r0, [r4, #16]
    254c:	beq	2ddc <ippGetInteger@plt+0x166c>
    2550:	ldr	r0, [sp, #60]	; 0x3c
    2554:	bl	1704 <cupsArrayFirst@plt>
    2558:	subs	r1, r0, #0
    255c:	beq	2840 <ippGetInteger@plt+0x10d0>
    2560:	ldr	fp, [pc, #416]	; 2708 <ippGetInteger@plt+0xf98>
    2564:	ldr	sl, [pc, #416]	; 270c <ippGetInteger@plt+0xf9c>
    2568:	add	fp, pc, fp
    256c:	ldr	r3, [pc, #412]	; 2710 <ippGetInteger@plt+0xfa0>
    2570:	str	fp, [sp, #24]
    2574:	ldr	fp, [sp, #80]	; 0x50
    2578:	add	r7, sp, #492	; 0x1ec
    257c:	add	sl, pc, sl
    2580:	add	r3, pc, r3
    2584:	str	r3, [sp, #28]
    2588:	mov	r2, #1024	; 0x400
    258c:	mov	r0, r7
    2590:	bl	1674 <_cups_strlcpy@plt>
    2594:	mov	r2, #7
    2598:	mov	r1, sl
    259c:	mov	r0, r7
    25a0:	bl	1410 <strncmp@plt>
    25a4:	subs	r5, r0, #0
    25a8:	beq	2748 <ippGetInteger@plt+0xfd8>
    25ac:	ldr	r1, [pc, #352]	; 2714 <ippGetInteger@plt+0xfa4>
    25b0:	mov	r2, #8
    25b4:	add	r1, pc, r1
    25b8:	mov	r0, r7
    25bc:	bl	1410 <strncmp@plt>
    25c0:	subs	r5, r0, #0
    25c4:	beq	2748 <ippGetInteger@plt+0xfd8>
    25c8:	ldr	r1, [pc, #328]	; 2718 <ippGetInteger@plt+0xfa8>
    25cc:	mov	r2, #6
    25d0:	add	r1, pc, r1
    25d4:	mov	r0, r7
    25d8:	bl	1410 <strncmp@plt>
    25dc:	subs	r5, r0, #0
    25e0:	beq	2748 <ippGetInteger@plt+0xfd8>
    25e4:	ldr	r1, [pc, #304]	; 271c <ippGetInteger@plt+0xfac>
    25e8:	mov	r2, #7
    25ec:	add	r1, pc, r1
    25f0:	mov	r0, r7
    25f4:	bl	1410 <strncmp@plt>
    25f8:	subs	r5, r0, #0
    25fc:	beq	2748 <ippGetInteger@plt+0xfd8>
    2600:	ldr	r1, [pc, #280]	; 2720 <ippGetInteger@plt+0xfb0>
    2604:	mov	r0, r7
    2608:	add	r1, pc, r1
    260c:	bl	15fc <strstr@plt>
    2610:	subs	r4, r0, #0
    2614:	beq	2d60 <ippGetInteger@plt+0x15f0>
    2618:	ldr	r1, [pc, #260]	; 2724 <ippGetInteger@plt+0xfb4>
    261c:	add	r1, pc, r1
    2620:	bl	16a4 <strcmp@plt>
    2624:	cmp	r0, #0
    2628:	beq	2a08 <ippGetInteger@plt+0x1298>
    262c:	mov	r6, r4
    2630:	mov	r3, #0
    2634:	strb	r3, [r6], #1
    2638:	ldrb	r3, [r4, #1]
    263c:	mov	r5, r7
    2640:	cmp	r3, #0
    2644:	bne	2758 <ippGetInteger@plt+0xfe8>
    2648:	ldr	r4, [pc, #216]	; 2728 <ippGetInteger@plt+0xfb8>
    264c:	add	r4, pc, r4
    2650:	b	2784 <ippGetInteger@plt+0x1014>
    2654:	ldrdeq	r6, [r1], -r0
    2658:	andeq	r0, r0, ip, ror #2
    265c:	andeq	r1, r0, r8, asr #29
    2660:	andeq	r5, r0, r8, ror #6
    2664:	andeq	r5, r0, r0, ror #10
    2668:	andeq	r5, r0, r8, asr #17
    266c:	ldrdeq	r5, [r0], -ip
    2670:	strheq	r5, [r0], -r0
    2674:	andeq	r5, r0, r4, asr #15
    2678:	andeq	r5, r0, r0, lsr #8
    267c:	muleq	r0, r0, r1
    2680:	andeq	r5, r0, r8, lsr #15
    2684:	andeq	r5, r0, ip, ror #6
    2688:	andeq	r5, r0, r8, asr #6
    268c:	andeq	r5, r0, r4, asr #6
    2690:	andeq	r6, r1, r8, asr #5
    2694:	andeq	r5, r0, r4, asr r7
    2698:			; <UNDEFINED> instruction: 0x000052b0
    269c:	andeq	r5, r0, r8, asr r5
    26a0:	andeq	r5, r0, r4, lsl #8
    26a4:	andeq	r5, r0, r8, lsr #8
    26a8:	andeq	r6, r1, r4, ror r0
    26ac:	andeq	r6, r1, r8, lsr r0
    26b0:	ldrdeq	r5, [r1], -r0
    26b4:			; <UNDEFINED> instruction: 0x00015fbc
    26b8:	andeq	r5, r1, r8, asr #30
    26bc:	andeq	r4, r0, r0, lsl sp
    26c0:	andeq	r4, r0, r4, lsl #29
    26c4:	andeq	r4, r0, r8, ror #28
    26c8:	andeq	r5, r1, r0, lsl #28
    26cc:	strdeq	r4, [r0], -r0
    26d0:	andeq	r4, r0, r0, lsr #24
    26d4:	andeq	r4, r0, r0, lsl ip
    26d8:	andeq	r4, r0, r0, lsl #24
    26dc:	andeq	r4, r0, r8, ror #23
    26e0:	ldrdeq	r4, [r0], -r8
    26e4:	andeq	r4, r0, r8, asr #23
    26e8:	ldrdeq	r4, [r0], -r8
    26ec:	andeq	r5, r1, r0, asr #25
    26f0:	andeq	r4, r0, r0, lsl r5
    26f4:	andeq	r4, r0, ip, ror #25
    26f8:	andeq	r4, r0, r0, asr #13
    26fc:	andeq	r5, r1, r4, lsl fp
    2700:	muleq	r0, ip, r1
    2704:	andeq	r3, r0, ip, lsr r3
    2708:	andeq	r5, r1, ip, lsr #21
    270c:	andeq	r4, r0, ip, asr ip
    2710:	ldrdeq	r4, [r0], -r8
    2714:	andeq	r4, r0, ip, lsr #24
    2718:	andeq	r4, r0, ip, lsl ip
    271c:	andeq	r4, r0, r8, lsl #24
    2720:	andeq	r4, r0, r8, ror #23
    2724:	andeq	r4, r0, r4, asr #7
    2728:	andeq	r4, r0, r0, lsr #14
    272c:	strdeq	r4, [r0], -r0
    2730:			; <UNDEFINED> instruction: 0x000043b8
    2734:	andeq	r0, r0, r4, ror r1
    2738:	andeq	r4, r0, r8, lsr sl
    273c:	andeq	r5, r1, r0, lsr r8
    2740:	andeq	r2, r0, ip, lsl sp
    2744:			; <UNDEFINED> instruction: 0x000157b8
    2748:	ldrb	r3, [sp, #492]	; 0x1ec
    274c:	cmp	r3, #0
    2750:	beq	2a18 <ippGetInteger@plt+0x12a8>
    2754:	mov	r6, r7
    2758:	mov	r2, r6
    275c:	cmp	r3, #46	; 0x2e
    2760:	mov	r4, r2
    2764:	ldrb	r3, [r2, #1]!
    2768:	beq	28e0 <ippGetInteger@plt+0x1170>
    276c:	cmp	r3, #0
    2770:	bne	275c <ippGetInteger@plt+0xfec>
    2774:	ldr	r4, [pc, #-80]	; 272c <ippGetInteger@plt+0xfbc>
    2778:	cmp	r5, #0
    277c:	add	r4, pc, r4
    2780:	beq	2904 <ippGetInteger@plt+0x1194>
    2784:	mov	r3, r4
    2788:	mov	r2, r6
    278c:	mov	r1, r5
    2790:	mov	r0, fp
    2794:	bl	59a8 <ippGetInteger@plt+0x4238>
    2798:	mov	r8, r0
    279c:	ldr	r0, [pc, #-116]	; 2730 <ippGetInteger@plt+0xfc0>
    27a0:	add	r0, pc, r0
    27a4:	bl	171c <getenv@plt>
    27a8:	cmp	r0, #0
    27ac:	beq	27dc <ippGetInteger@plt+0x106c>
    27b0:	ldr	r1, [pc, #-132]	; 2734 <ippGetInteger@plt+0xfc4>
    27b4:	ldr	r0, [sp, #72]	; 0x48
    27b8:	ldr	r2, [pc, #-136]	; 2738 <ippGetInteger@plt+0xfc8>
    27bc:	mov	r3, r5
    27c0:	ldr	r0, [r0, r1]
    27c4:	add	r2, pc, r2
    27c8:	str	r4, [sp, #4]
    27cc:	mov	r1, #1
    27d0:	ldr	r0, [r0]
    27d4:	str	r6, [sp]
    27d8:	bl	14d0 <__fprintf_chk@plt>
    27dc:	ldr	r9, [pc, #-168]	; 273c <ippGetInteger@plt+0xfcc>
    27e0:	ldr	r1, [pc, #-168]	; 2740 <ippGetInteger@plt+0xfd0>
    27e4:	add	r9, pc, r9
    27e8:	mvn	r2, #0
    27ec:	add	r1, pc, r1
    27f0:	mov	ip, #0
    27f4:	str	r8, [sp, #20]
    27f8:	str	r4, [sp, #4]
    27fc:	mov	r3, r5
    2800:	ldr	r0, [r9, #16]
    2804:	str	r1, [sp, #16]
    2808:	str	r6, [sp]
    280c:	str	ip, [sp, #12]
    2810:	str	r2, [sp, #8]
    2814:	mov	r1, r2
    2818:	bl	16b0 <avahi_service_resolver_new@plt>
    281c:	cmp	r0, #0
    2820:	str	r0, [r8]
    2824:	beq	2988 <ippGetInteger@plt+0x1218>
    2828:	mov	r3, #0
    282c:	str	r3, [sp, #88]	; 0x58
    2830:	ldr	r0, [sp, #60]	; 0x3c
    2834:	bl	14dc <cupsArrayNext@plt>
    2838:	subs	r1, r0, #0
    283c:	bne	2588 <ippGetInteger@plt+0xe18>
    2840:	ldr	r3, [pc, #-260]	; 2744 <ippGetInteger@plt+0xfd4>
    2844:	vldr	d7, [pc, #996]	; 2c30 <ippGetInteger@plt+0x14c0>
    2848:	add	r3, pc, r3
    284c:	vldr	d8, [r3, #8]
    2850:	vcmpe.f64	d8, d7
    2854:	vmrs	APSR_nzcv, fpscr
    2858:	ble	2a38 <ippGetInteger@plt+0x12c8>
    285c:	bl	548c <ippGetInteger@plt+0x3d1c>
    2860:	vadd.f64	d8, d8, d0
    2864:	ldr	r5, [pc, #980]	; 2c40 <ippGetInteger@plt+0x14d0>
    2868:	ldr	fp, [pc, #980]	; 2c44 <ippGetInteger@plt+0x14d4>
    286c:	vldr	d9, [pc, #956]	; 2c30 <ippGetInteger@plt+0x14c0>
    2870:	ldr	r3, [pc, #976]	; 2c48 <ippGetInteger@plt+0x14d8>
    2874:	ldr	sl, [sp, #80]	; 0x50
    2878:	add	r5, pc, r5
    287c:	add	fp, pc, fp
    2880:	mov	r7, #1
    2884:	add	r3, pc, r3
    2888:	str	r3, [sp, #24]
    288c:	mov	r4, #0
    2890:	b	28b8 <ippGetInteger@plt+0x1148>
    2894:	mov	r1, #500	; 0x1f4
    2898:	ldr	r0, [r5, #12]
    289c:	str	r4, [r5]
    28a0:	bl	168c <avahi_simple_poll_iterate@plt>
    28a4:	cmp	r0, #0
    28a8:	bgt	2aa8 <ippGetInteger@plt+0x1338>
    28ac:	ldr	r6, [r5]
    28b0:	cmp	r6, #0
    28b4:	beq	2ab0 <ippGetInteger@plt+0x1340>
    28b8:	bl	548c <ippGetInteger@plt+0x3d1c>
    28bc:	vcmpe.f64	d0, d8
    28c0:	vmrs	APSR_nzcv, fpscr
    28c4:	bmi	2894 <ippGetInteger@plt+0x1124>
    28c8:	ldr	r3, [pc, #892]	; 2c4c <ippGetInteger@plt+0x14dc>
    28cc:	add	r3, pc, r3
    28d0:	ldr	r3, [r3, #8]
    28d4:	cmp	r3, #0
    28d8:	movne	r7, #2
    28dc:	b	1df4 <ippGetInteger@plt+0x684>
    28e0:	cmp	r3, #95	; 0x5f
    28e4:	beq	275c <ippGetInteger@plt+0xfec>
    28e8:	cmp	r3, #0
    28ec:	mov	r3, #0
    28f0:	strb	r3, [r4], #1
    28f4:	beq	2774 <ippGetInteger@plt+0x1004>
    28f8:	cmp	r5, #0
    28fc:	bne	2784 <ippGetInteger@plt+0x1014>
    2900:	mov	r5, r4
    2904:	ldr	r0, [sp, #28]
    2908:	bl	171c <getenv@plt>
    290c:	cmp	r0, #0
    2910:	beq	293c <ippGetInteger@plt+0x11cc>
    2914:	ldr	r1, [pc, #1076]	; 2d50 <ippGetInteger@plt+0x15e0>
    2918:	ldr	r0, [sp, #72]	; 0x48
    291c:	ldr	r2, [pc, #812]	; 2c50 <ippGetInteger@plt+0x14e0>
    2920:	mov	r3, r6
    2924:	ldr	r0, [r0, r1]
    2928:	add	r2, pc, r2
    292c:	str	r5, [sp]
    2930:	mov	r1, #1
    2934:	ldr	r0, [r0]
    2938:	bl	14d0 <__fprintf_chk@plt>
    293c:	ldr	r1, [pc, #784]	; 2c54 <ippGetInteger@plt+0x14e4>
    2940:	mov	r0, #0
    2944:	add	r1, pc, r1
    2948:	mvn	r2, #0
    294c:	strd	r0, [sp, #4]
    2950:	ldr	r0, [sp, #24]
    2954:	str	fp, [sp, #12]
    2958:	str	r5, [sp]
    295c:	mov	r3, r6
    2960:	mov	r1, r2
    2964:	ldr	r0, [r0, #16]
    2968:	bl	1560 <avahi_service_browser_new@plt>
    296c:	cmp	r0, #0
    2970:	bne	2828 <ippGetInteger@plt+0x10b8>
    2974:	ldr	r3, [sp, #24]
    2978:	ldr	r0, [r3, #16]
    297c:	bl	16ec <avahi_client_errno@plt>
    2980:	str	r0, [sp, #88]	; 0x58
    2984:	b	2994 <ippGetInteger@plt+0x1224>
    2988:	ldr	r0, [r9, #16]
    298c:	bl	16ec <avahi_client_errno@plt>
    2990:	str	r0, [sp, #88]	; 0x58
    2994:	ldr	r0, [sp, #88]	; 0x58
    2998:	cmp	r0, #0
    299c:	beq	2830 <ippGetInteger@plt+0x10c0>
    29a0:	ldr	r2, [sp, #72]	; 0x48
    29a4:	ldr	r3, [pc, #932]	; 2d50 <ippGetInteger@plt+0x15e0>
    29a8:	mov	r7, #2
    29ac:	ldr	r3, [r2, r3]
    29b0:	ldr	r4, [r3]
    29b4:	bl	1500 <avahi_strerror@plt>
    29b8:	ldr	r1, [pc, #664]	; 2c58 <ippGetInteger@plt+0x14e8>
    29bc:	add	r1, pc, r1
    29c0:	mov	r2, r0
    29c4:	mov	r0, r4
    29c8:	bl	1404 <_cupsLangPrintf@plt>
    29cc:	b	1df4 <ippGetInteger@plt+0x684>
    29d0:	mov	r6, r5
    29d4:	str	r5, [sp, #52]	; 0x34
    29d8:	mov	r7, r9
    29dc:	mov	r5, r9
    29e0:	mov	fp, #1
    29e4:	b	191c <ippGetInteger@plt+0x1ac>
    29e8:	str	r3, [sp]
    29ec:	mov	r1, r7
    29f0:	mov	r2, r3
    29f4:	mov	r0, #4
    29f8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    29fc:	subs	r5, r0, #0
    2a00:	bne	2118 <ippGetInteger@plt+0x9a8>
    2a04:	b	1df0 <ippGetInteger@plt+0x680>
    2a08:	ldrb	r3, [sp, #492]	; 0x1ec
    2a0c:	cmp	r3, #0
    2a10:	movne	r5, r0
    2a14:	bne	2754 <ippGetInteger@plt+0xfe4>
    2a18:	mov	r5, r3
    2a1c:	mov	r6, r7
    2a20:	b	2904 <ippGetInteger@plt+0x1194>
    2a24:	ldr	r1, [pc, #560]	; 2c5c <ippGetInteger@plt+0x14ec>
    2a28:	ldr	r0, [sp, #60]	; 0x3c
    2a2c:	add	r1, pc, r1
    2a30:	bl	13a4 <cupsArrayAdd@plt>
    2a34:	b	19c4 <ippGetInteger@plt+0x254>
    2a38:	bl	548c <ippGetInteger@plt+0x3d1c>
    2a3c:	vldr	d8, [pc, #500]	; 2c38 <ippGetInteger@plt+0x14c8>
    2a40:	vadd.f64	d8, d0, d8
    2a44:	b	2864 <ippGetInteger@plt+0x10f4>
    2a48:	ldr	r2, [sp, #32]
    2a4c:	add	r4, r4, #1
    2a50:	cmp	r2, r4
    2a54:	ldr	r2, [sp, #48]	; 0x30
    2a58:	ble	2f98 <ippGetInteger@plt+0x1828>
    2a5c:	str	r3, [sp]
    2a60:	mov	r1, r7
    2a64:	ldr	r2, [sl, #4]
    2a68:	mov	r0, #9
    2a6c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2a70:	subs	r5, r0, #0
    2a74:	bne	2118 <ippGetInteger@plt+0x9a8>
    2a78:	b	1df0 <ippGetInteger@plt+0x680>
    2a7c:	mov	r3, r1
    2a80:	ldr	r0, [sp, #72]	; 0x48
    2a84:	ldr	r1, [pc, #708]	; 2d50 <ippGetInteger@plt+0x15e0>
    2a88:	ldr	r2, [pc, #464]	; 2c60 <ippGetInteger@plt+0x14f0>
    2a8c:	ldr	r0, [r0, r1]
    2a90:	ldr	r1, [pc, #460]	; 2c64 <ippGetInteger@plt+0x14f4>
    2a94:	add	r2, pc, r2
    2a98:	add	r1, pc, r1
    2a9c:	ldr	r0, [r0]
    2aa0:	bl	1404 <_cupsLangPrintf@plt>
    2aa4:	bl	36e8 <ippGetInteger@plt+0x1f78>
    2aa8:	mov	r7, #2
    2aac:	b	1df4 <ippGetInteger@plt+0x684>
    2ab0:	mov	r0, sl
    2ab4:	bl	1704 <cupsArrayFirst@plt>
    2ab8:	mov	r9, r6
    2abc:	mov	r4, r0
    2ac0:	b	2adc <ippGetInteger@plt+0x136c>
    2ac4:	cmp	r8, #0
    2ac8:	bne	2b9c <ippGetInteger@plt+0x142c>
    2acc:	add	r9, r9, #1
    2ad0:	mov	r0, sl
    2ad4:	bl	14dc <cupsArrayNext@plt>
    2ad8:	mov	r4, r0
    2adc:	cmp	r4, #0
    2ae0:	beq	2c00 <ippGetInteger@plt+0x1490>
    2ae4:	ldr	r3, [r4, #48]	; 0x30
    2ae8:	ldr	r0, [r4]
    2aec:	cmp	r3, #0
    2af0:	addne	r6, r6, #1
    2af4:	cmp	r0, #0
    2af8:	ldr	r8, [r4, #52]	; 0x34
    2afc:	bne	2ac4 <ippGetInteger@plt+0x1354>
    2b00:	cmp	r8, #0
    2b04:	bne	2bd4 <ippGetInteger@plt+0x1464>
    2b08:	cmp	r9, #49	; 0x31
    2b0c:	bgt	2ad0 <ippGetInteger@plt+0x1360>
    2b10:	ldr	r3, [sp, #24]
    2b14:	mvn	r2, #0
    2b18:	str	r4, [sp, #20]
    2b1c:	str	r3, [sp, #16]
    2b20:	str	r8, [sp, #12]
    2b24:	str	r2, [sp, #8]
    2b28:	ldr	r3, [r4, #8]
    2b2c:	mov	r1, r2
    2b30:	str	r3, [sp, #4]
    2b34:	ldr	r3, [r4, #12]
    2b38:	str	r3, [sp]
    2b3c:	ldr	r0, [fp, #16]
    2b40:	ldr	r3, [r4, #4]
    2b44:	bl	16b0 <avahi_service_resolver_new@plt>
    2b48:	cmp	r0, #0
    2b4c:	str	r0, [r4]
    2b50:	strne	r8, [sp, #88]	; 0x58
    2b54:	bne	2acc <ippGetInteger@plt+0x135c>
    2b58:	ldr	r0, [fp, #16]
    2b5c:	bl	16ec <avahi_client_errno@plt>
    2b60:	cmp	r0, #0
    2b64:	str	r0, [sp, #88]	; 0x58
    2b68:	beq	2acc <ippGetInteger@plt+0x135c>
    2b6c:	ldr	r2, [sp, #72]	; 0x48
    2b70:	ldr	r3, [pc, #472]	; 2d50 <ippGetInteger@plt+0x15e0>
    2b74:	mov	r7, #2
    2b78:	ldr	r3, [r2, r3]
    2b7c:	ldr	r4, [r3]
    2b80:	bl	1500 <avahi_strerror@plt>
    2b84:	ldr	r1, [pc, #220]	; 2c68 <ippGetInteger@plt+0x14f8>
    2b88:	add	r1, pc, r1
    2b8c:	mov	r2, r0
    2b90:	mov	r0, r4
    2b94:	bl	1404 <_cupsLangPrintf@plt>
    2b98:	b	1df4 <ippGetInteger@plt+0x684>
    2b9c:	cmp	r3, #0
    2ba0:	bne	2acc <ippGetInteger@plt+0x135c>
    2ba4:	str	r3, [sp, #28]
    2ba8:	bl	1368 <avahi_service_resolver_free@plt>
    2bac:	ldr	r3, [sp, #28]
    2bb0:	str	r3, [r4]
    2bb4:	ldr	r1, [sp, #52]	; 0x34
    2bb8:	mov	r0, r4
    2bbc:	bl	5114 <ippGetInteger@plt+0x39a4>
    2bc0:	mov	r3, #1
    2bc4:	str	r3, [r4, #48]	; 0x30
    2bc8:	cmp	r0, #0
    2bcc:	movne	r7, #0
    2bd0:	b	2ad0 <ippGetInteger@plt+0x1360>
    2bd4:	cmp	r3, #0
    2bd8:	bne	2ad0 <ippGetInteger@plt+0x1360>
    2bdc:	b	2bb4 <ippGetInteger@plt+0x1444>
    2be0:	str	r3, [sp]
    2be4:	mov	r1, r7
    2be8:	mov	r2, r3
    2bec:	mov	r0, #17
    2bf0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2bf4:	subs	r5, r0, #0
    2bf8:	bne	2440 <ippGetInteger@plt+0xcd0>
    2bfc:	b	1df0 <ippGetInteger@plt+0x680>
    2c00:	mov	r0, sl
    2c04:	bl	14c4 <cupsArrayCount@plt>
    2c08:	cmp	r0, r6
    2c0c:	bne	288c <ippGetInteger@plt+0x111c>
    2c10:	ldr	r3, [pc, #84]	; 2c6c <ippGetInteger@plt+0x14fc>
    2c14:	add	r3, pc, r3
    2c18:	vldr	d7, [r3, #8]
    2c1c:	vcmpe.f64	d7, d9
    2c20:	vmrs	APSR_nzcv, fpscr
    2c24:	bhi	288c <ippGetInteger@plt+0x111c>
    2c28:	b	28c8 <ippGetInteger@plt+0x1158>
    2c2c:	nop			; (mov r0, r0)
    2c30:	andeq	r0, r0, r0
    2c34:	svccc	0x00f00000	; IMB
    2c38:	andeq	r0, r0, r0
    2c3c:	rsbsmi	ip, r2, r0
    2c40:	muleq	r1, ip, r7
    2c44:	muleq	r1, r8, r7
    2c48:	andeq	r2, r0, r4, lsl #25
    2c4c:	andeq	r5, r1, r8, asr #14
    2c50:	andeq	r4, r0, r4, lsl #18
    2c54:	andeq	r3, r0, r4, lsr #2
    2c58:	muleq	r0, r8, r8
    2c5c:			; <UNDEFINED> instruction: 0x00003fb0
    2c60:	andeq	r4, r0, r0, asr #10
    2c64:	andeq	r4, r0, r0, ror #12
    2c68:	andeq	r4, r0, ip, asr #13
    2c6c:	andeq	r5, r1, ip, ror #7
    2c70:	andeq	r3, r0, r4, ror ip
    2c74:			; <UNDEFINED> instruction: 0x000043b8
    2c78:	andeq	r4, r0, r0, lsl #7
    2c7c:	andeq	r4, r0, r0, lsl #1
    2c80:	andeq	r4, r0, r0, ror r0
    2c84:	ldrdeq	r3, [r0], -r8
    2c88:	andeq	r3, r0, r0, ror #30
    2c8c:	andeq	r3, r0, r8, lsl #30
    2c90:	andeq	r3, r0, r0, lsr #28
    2c94:	ldrdeq	r3, [r0], -r4
    2c98:	strdeq	r3, [r0], -ip
    2c9c:	andeq	r3, r0, r4, asr #27
    2ca0:	andeq	r3, r0, r4, asr #26
    2ca4:	andeq	r3, r0, ip, lsl #26
    2ca8:	andeq	r3, r0, r8, ror #31
    2cac:	andeq	r3, r0, r8, ror #31
    2cb0:	strdeq	r3, [r0], -r8
    2cb4:	andeq	r3, r0, ip, lsr sp
    2cb8:	andeq	r3, r0, r4, ror #31
    2cbc:	andeq	r3, r0, r4, ror #31
    2cc0:	andeq	r3, r0, r8, lsl pc
    2cc4:	andeq	r3, r0, r4, asr #27
    2cc8:	andeq	r3, r0, r8, ror #25
    2ccc:	andeq	r4, r0, r0, lsr #32
    2cd0:	andeq	r3, r0, r4, asr #30
    2cd4:			; <UNDEFINED> instruction: 0x00003cb8
    2cd8:	andeq	r3, r0, r0, lsr pc
    2cdc:	andeq	r3, r0, r0, lsr #25
    2ce0:	muleq	r0, ip, lr
    2ce4:			; <UNDEFINED> instruction: 0x00003db8
    2ce8:	andeq	r3, r0, ip, asr lr
    2cec:	andeq	r3, r0, r4, lsl #29
    2cf0:	andeq	r3, r0, r4, asr #28
    2cf4:	andeq	r3, r0, ip, lsl #29
    2cf8:	andeq	r3, r0, r8, asr #29
    2cfc:	andeq	r3, r0, r0, asr #24
    2d00:	andeq	r3, r0, r8, lsl #28
    2d04:	andeq	r3, r0, r0, lsl #29
    2d08:	andeq	r3, r0, r0, lsr pc
    2d0c:	andeq	r3, r0, r8, ror #30
    2d10:	andeq	r3, r0, r0, ror #23
    2d14:	andeq	r3, r0, ip, asr #23
    2d18:	andeq	r3, r0, r4, ror #25
    2d1c:	andeq	r3, r0, r8, asr #25
    2d20:			; <UNDEFINED> instruction: 0x00003cb8
    2d24:			; <UNDEFINED> instruction: 0x00003cb0
    2d28:	andeq	r3, r0, r0, lsr #25
    2d2c:	muleq	r0, r4, ip
    2d30:	andeq	r3, r0, r4, lsl #25
    2d34:	ldrdeq	r3, [r0], -r8
    2d38:	andeq	r3, r0, r8, lsr #24
    2d3c:	andeq	r3, r0, r0, asr #24
    2d40:	andeq	r3, r0, r8, lsl #20
    2d44:			; <UNDEFINED> instruction: 0x00003bbc
    2d48:	andeq	r3, r0, r4, lsr #18
    2d4c:	andeq	r3, r0, r0, ror #21
    2d50:	andeq	r0, r0, r4, ror r1
    2d54:	andeq	r3, r0, r4, asr #21
    2d58:			; <UNDEFINED> instruction: 0x00003ab8
    2d5c:			; <UNDEFINED> instruction: 0x00003ab4
    2d60:	ldr	r6, [pc, #-248]	; 2c70 <ippGetInteger@plt+0x1500>
    2d64:	mov	r5, r7
    2d68:	add	r6, pc, r6
    2d6c:	mov	r3, #95	; 0x5f
    2d70:	b	2758 <ippGetInteger@plt+0xfe8>
    2d74:	mov	r3, #0
    2d78:	mov	r1, r7
    2d7c:	str	r3, [sp]
    2d80:	mov	r2, r3
    2d84:	mov	r0, #5
    2d88:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2d8c:	subs	r5, r0, #0
    2d90:	bne	2118 <ippGetInteger@plt+0x9a8>
    2d94:	b	1df0 <ippGetInteger@plt+0x680>
    2d98:	str	r3, [sp]
    2d9c:	mov	r2, r3
    2da0:	mov	r1, r3
    2da4:	mov	r0, #19
    2da8:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2dac:	cmp	r0, #0
    2db0:	beq	1df0 <ippGetInteger@plt+0x680>
    2db4:	cmp	r6, #0
    2db8:	bne	2dc4 <ippGetInteger@plt+0x1654>
    2dbc:	b	2fb8 <ippGetInteger@plt+0x1848>
    2dc0:	mov	r6, r3
    2dc4:	ldr	r3, [r6, #8]
    2dc8:	cmp	r3, #0
    2dcc:	bne	2dc0 <ippGetInteger@plt+0x1650>
    2dd0:	str	r0, [r6, #4]
    2dd4:	str	r6, [r0]
    2dd8:	b	19b4 <ippGetInteger@plt+0x244>
    2ddc:	ldr	r2, [sp, #72]	; 0x48
    2de0:	ldr	r3, [pc, #-152]	; 2d50 <ippGetInteger@plt+0x15e0>
    2de4:	ldr	r0, [sp, #88]	; 0x58
    2de8:	mov	r7, #2
    2dec:	ldr	r3, [r2, r3]
    2df0:	ldr	r4, [r3]
    2df4:	bl	1500 <avahi_strerror@plt>
    2df8:	ldr	r1, [pc, #-396]	; 2c74 <ippGetInteger@plt+0x1504>
    2dfc:	add	r1, pc, r1
    2e00:	mov	r2, r0
    2e04:	mov	r0, r4
    2e08:	bl	1404 <_cupsLangPrintf@plt>
    2e0c:	b	1df4 <ippGetInteger@plt+0x684>
    2e10:	ldr	r2, [sp, #72]	; 0x48
    2e14:	ldr	r3, [pc, #-204]	; 2d50 <ippGetInteger@plt+0x15e0>
    2e18:	mov	r7, #2
    2e1c:	ldr	r3, [r2, r3]
    2e20:	ldr	r4, [r3]
    2e24:	bl	16c8 <__errno_location@plt>
    2e28:	ldr	r0, [r0]
    2e2c:	bl	1470 <strerror@plt>
    2e30:	ldr	r1, [pc, #-448]	; 2c78 <ippGetInteger@plt+0x1508>
    2e34:	add	r1, pc, r1
    2e38:	mov	r2, r0
    2e3c:	mov	r0, r4
    2e40:	bl	1404 <_cupsLangPrintf@plt>
    2e44:	b	1df4 <ippGetInteger@plt+0x684>
    2e48:	ldr	r1, [pc, #-468]	; 2c7c <ippGetInteger@plt+0x150c>
    2e4c:	mov	r0, r8
    2e50:	add	r1, pc, r1
    2e54:	bl	16a4 <strcmp@plt>
    2e58:	cmp	r0, #0
    2e5c:	beq	2f20 <ippGetInteger@plt+0x17b0>
    2e60:	ldr	r1, [pc, #-488]	; 2c80 <ippGetInteger@plt+0x1510>
    2e64:	mov	r0, r8
    2e68:	add	r1, pc, r1
    2e6c:	bl	16a4 <strcmp@plt>
    2e70:	cmp	r0, #0
    2e74:	bne	2f2c <ippGetInteger@plt+0x17bc>
    2e78:	cmp	r6, #0
    2e7c:	beq	2f78 <ippGetInteger@plt+0x1808>
    2e80:	cmp	r9, #0
    2e84:	beq	2ff8 <ippGetInteger@plt+0x1888>
    2e88:	ldr	fp, [r9, #16]
    2e8c:	cmp	fp, #2
    2e90:	beq	1988 <ippGetInteger@plt+0x218>
    2e94:	ldr	r5, [r6]
    2e98:	cmp	r5, #0
    2e9c:	beq	2fec <ippGetInteger@plt+0x187c>
    2ea0:	mov	r3, #0
    2ea4:	str	r3, [sp]
    2ea8:	mov	r2, r3
    2eac:	mov	r1, r3
    2eb0:	mov	r0, #1
    2eb4:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2eb8:	subs	r8, r0, #0
    2ebc:	bne	2ec8 <ippGetInteger@plt+0x1758>
    2ec0:	b	1df0 <ippGetInteger@plt+0x680>
    2ec4:	mov	r6, r5
    2ec8:	ldr	r5, [r6]
    2ecc:	str	r8, [r6, #8]
    2ed0:	cmp	r5, #0
    2ed4:	bne	2ec4 <ippGetInteger@plt+0x1754>
    2ed8:	str	r6, [r8, #12]
    2edc:	mov	r3, r5
    2ee0:	mov	r2, r5
    2ee4:	str	r5, [sp]
    2ee8:	mov	r1, r5
    2eec:	mov	r0, #2
    2ef0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2ef4:	cmp	r0, #0
    2ef8:	beq	1df0 <ippGetInteger@plt+0x680>
    2efc:	cmp	r9, #0
    2f00:	str	r9, [r0, #8]
    2f04:	str	r0, [r8, #8]
    2f08:	beq	2fd4 <ippGetInteger@plt+0x1864>
    2f0c:	str	r0, [r9, #12]
    2f10:	mov	r6, r8
    2f14:	mov	r9, r0
    2f18:	mov	fp, #2
    2f1c:	b	191c <ippGetInteger@plt+0x1ac>
    2f20:	cmp	r5, #0
    2f24:	beq	1ac8 <ippGetInteger@plt+0x358>
    2f28:	b	2118 <ippGetInteger@plt+0x9a8>
    2f2c:	ldr	r5, [pc, #-688]	; 2c84 <ippGetInteger@plt+0x1514>
    2f30:	mov	r0, r8
    2f34:	add	r5, pc, r5
    2f38:	mov	r1, r5
    2f3c:	bl	16a4 <strcmp@plt>
    2f40:	subs	r2, r0, #0
    2f44:	bne	3228 <ippGetInteger@plt+0x1ab8>
    2f48:	ldr	r3, [sp, #32]
    2f4c:	add	r4, r4, #1
    2f50:	cmp	r3, r4
    2f54:	ble	3214 <ippGetInteger@plt+0x1aa4>
    2f58:	str	r2, [sp]
    2f5c:	mov	r1, r7
    2f60:	ldr	r3, [sl, #4]
    2f64:	mov	r0, #12
    2f68:	bl	3c54 <ippGetInteger@plt+0x24e4>
    2f6c:	subs	r5, r0, #0
    2f70:	bne	2118 <ippGetInteger@plt+0x9a8>
    2f74:	b	1df0 <ippGetInteger@plt+0x680>
    2f78:	ldr	r1, [pc, #-760]	; 2c88 <ippGetInteger@plt+0x1518>
    2f7c:	ldr	r3, [pc, #-564]	; 2d50 <ippGetInteger@plt+0x15e0>
    2f80:	add	r1, pc, r1
    2f84:	ldr	r2, [sp, #72]	; 0x48
    2f88:	ldr	r3, [r2, r3]
    2f8c:	ldr	r0, [r3]
    2f90:	bl	1434 <_cupsLangPuts@plt>
    2f94:	bl	36e8 <ippGetInteger@plt+0x1f78>
    2f98:	ldr	r1, [pc, #-788]	; 2c8c <ippGetInteger@plt+0x151c>
    2f9c:	ldr	r3, [pc, #-596]	; 2d50 <ippGetInteger@plt+0x15e0>
    2fa0:	add	r1, pc, r1
    2fa4:	ldr	r0, [sp, #72]	; 0x48
    2fa8:	ldr	r3, [r0, r3]
    2fac:	ldr	r0, [r3]
    2fb0:	bl	1404 <_cupsLangPrintf@plt>
    2fb4:	bl	36e8 <ippGetInteger@plt+0x1f78>
    2fb8:	str	r0, [sp, #52]	; 0x34
    2fbc:	b	19b4 <ippGetInteger@plt+0x244>
    2fc0:	ldr	r1, [pc, #-824]	; 2c90 <ippGetInteger@plt+0x1520>
    2fc4:	ldr	r3, [pc, #-636]	; 2d50 <ippGetInteger@plt+0x15e0>
    2fc8:	ldr	r2, [sp, #48]	; 0x30
    2fcc:	add	r1, pc, r1
    2fd0:	b	2fa4 <ippGetInteger@plt+0x1834>
    2fd4:	mov	r5, r9
    2fd8:	mov	r6, r8
    2fdc:	mov	r9, r0
    2fe0:	str	r0, [sp, #52]	; 0x34
    2fe4:	mov	fp, #2
    2fe8:	b	191c <ippGetInteger@plt+0x1ac>
    2fec:	mov	fp, #2
    2ff0:	str	fp, [r9, #16]
    2ff4:	b	191c <ippGetInteger@plt+0x1ac>
    2ff8:	ldr	r5, [r6]
    2ffc:	cmp	r5, #0
    3000:	bne	2ea0 <ippGetInteger@plt+0x1730>
    3004:	str	r5, [sp]
    3008:	mov	r3, r5
    300c:	mov	r2, r5
    3010:	mov	r1, r5
    3014:	mov	r0, #2
    3018:	bl	3c54 <ippGetInteger@plt+0x24e4>
    301c:	subs	r9, r0, #0
    3020:	beq	1df0 <ippGetInteger@plt+0x680>
    3024:	str	r5, [r9, #8]
    3028:	str	r6, [r9, #12]
    302c:	str	r9, [sp, #52]	; 0x34
    3030:	str	r9, [r6, #8]
    3034:	mov	fp, #2
    3038:	b	191c <ippGetInteger@plt+0x1ac>
    303c:	ldr	r2, [pc, #-944]	; 2c94 <ippGetInteger@plt+0x1524>
    3040:	ldr	r1, [pc, #-944]	; 2c98 <ippGetInteger@plt+0x1528>
    3044:	ldr	r3, [pc, #-764]	; 2d50 <ippGetInteger@plt+0x15e0>
    3048:	add	r2, pc, r2
    304c:	add	r1, pc, r1
    3050:	b	2fa4 <ippGetInteger@plt+0x1834>
    3054:	ldr	r1, [pc, #-960]	; 2c9c <ippGetInteger@plt+0x152c>
    3058:	ldr	r3, [pc, #-784]	; 2d50 <ippGetInteger@plt+0x15e0>
    305c:	ldr	r2, [sp, #84]	; 0x54
    3060:	add	r1, pc, r1
    3064:	b	2fa4 <ippGetInteger@plt+0x1834>
    3068:	ldr	r1, [pc, #-976]	; 2ca0 <ippGetInteger@plt+0x1530>
    306c:	ldr	r3, [pc, #-804]	; 2d50 <ippGetInteger@plt+0x15e0>
    3070:	add	r1, pc, r1
    3074:	b	2f84 <ippGetInteger@plt+0x1814>
    3078:	ldr	r1, [pc, #-988]	; 2ca4 <ippGetInteger@plt+0x1534>
    307c:	ldr	r3, [pc, #-820]	; 2d50 <ippGetInteger@plt+0x15e0>
    3080:	add	r1, pc, r1
    3084:	b	2f84 <ippGetInteger@plt+0x1814>
    3088:	ldr	r2, [pc, #-1000]	; 2ca8 <ippGetInteger@plt+0x1538>
    308c:	ldr	r1, [pc, #-1000]	; 2cac <ippGetInteger@plt+0x153c>
    3090:	ldr	r3, [pc, #-840]	; 2d50 <ippGetInteger@plt+0x15e0>
    3094:	add	r2, pc, r2
    3098:	add	r1, pc, r1
    309c:	b	2fa4 <ippGetInteger@plt+0x1834>
    30a0:	ldr	r2, [pc, #-1016]	; 2cb0 <ippGetInteger@plt+0x1540>
    30a4:	ldr	r1, [pc, #-1016]	; 2cb4 <ippGetInteger@plt+0x1544>
    30a8:	ldr	r3, [pc, #-864]	; 2d50 <ippGetInteger@plt+0x15e0>
    30ac:	add	r2, pc, r2
    30b0:	add	r1, pc, r1
    30b4:	b	2fa4 <ippGetInteger@plt+0x1834>
    30b8:	ldr	r2, [pc, #-1032]	; 2cb8 <ippGetInteger@plt+0x1548>
    30bc:	ldr	r1, [pc, #-1032]	; 2cbc <ippGetInteger@plt+0x154c>
    30c0:	ldr	r3, [pc, #-888]	; 2d50 <ippGetInteger@plt+0x15e0>
    30c4:	add	r2, pc, r2
    30c8:	add	r1, pc, r1
    30cc:	b	2fa4 <ippGetInteger@plt+0x1834>
    30d0:	bl	15d8 <__stack_chk_fail@plt>
    30d4:	ldr	r2, [pc, #-1052]	; 2cc0 <ippGetInteger@plt+0x1550>
    30d8:	ldr	r1, [pc, #-1052]	; 2cc4 <ippGetInteger@plt+0x1554>
    30dc:	ldr	r3, [pc, #-916]	; 2d50 <ippGetInteger@plt+0x15e0>
    30e0:	add	r2, pc, r2
    30e4:	add	r1, pc, r1
    30e8:	b	2fa4 <ippGetInteger@plt+0x1834>
    30ec:	ldr	r3, [sp, #84]	; 0x54
    30f0:	ldr	r0, [pc, #-936]	; 2d50 <ippGetInteger@plt+0x15e0>
    30f4:	mov	r2, r3
    30f8:	ldr	r3, [sp, #72]	; 0x48
    30fc:	ldr	r1, [pc, #-1084]	; 2cc8 <ippGetInteger@plt+0x1558>
    3100:	ldr	r3, [r3, r0]
    3104:	add	r1, pc, r1
    3108:	ldr	r0, [r3]
    310c:	bl	1404 <_cupsLangPrintf@plt>
    3110:	bl	36e8 <ippGetInteger@plt+0x1f78>
    3114:	ldr	r1, [pc, #-1104]	; 2ccc <ippGetInteger@plt+0x155c>
    3118:	ldr	r3, [pc, #-976]	; 2d50 <ippGetInteger@plt+0x15e0>
    311c:	add	r1, pc, r1
    3120:	b	2f84 <ippGetInteger@plt+0x1814>
    3124:	ldr	r2, [pc, #-1116]	; 2cd0 <ippGetInteger@plt+0x1560>
    3128:	ldr	r1, [pc, #-1116]	; 2cd4 <ippGetInteger@plt+0x1564>
    312c:	ldr	r3, [pc, #-996]	; 2d50 <ippGetInteger@plt+0x15e0>
    3130:	add	r2, pc, r2
    3134:	add	r1, pc, r1
    3138:	b	2fa4 <ippGetInteger@plt+0x1834>
    313c:	ldr	r2, [pc, #-1132]	; 2cd8 <ippGetInteger@plt+0x1568>
    3140:	ldr	r1, [pc, #-1132]	; 2cdc <ippGetInteger@plt+0x156c>
    3144:	ldr	r3, [pc, #-1020]	; 2d50 <ippGetInteger@plt+0x15e0>
    3148:	add	r2, pc, r2
    314c:	add	r1, pc, r1
    3150:	b	2fa4 <ippGetInteger@plt+0x1834>
    3154:	ldr	r2, [pc, #-1148]	; 2ce0 <ippGetInteger@plt+0x1570>
    3158:	ldr	r1, [pc, #-1148]	; 2ce4 <ippGetInteger@plt+0x1574>
    315c:	ldr	r3, [pc, #-1044]	; 2d50 <ippGetInteger@plt+0x15e0>
    3160:	add	r2, pc, r2
    3164:	add	r1, pc, r1
    3168:	b	2fa4 <ippGetInteger@plt+0x1834>
    316c:	ldr	r2, [pc, #-1164]	; 2ce8 <ippGetInteger@plt+0x1578>
    3170:	ldr	r1, [pc, #-1164]	; 2cec <ippGetInteger@plt+0x157c>
    3174:	ldr	r3, [pc, #-1068]	; 2d50 <ippGetInteger@plt+0x15e0>
    3178:	add	r2, pc, r2
    317c:	add	r1, pc, r1
    3180:	b	2fa4 <ippGetInteger@plt+0x1834>
    3184:	ldr	r2, [pc, #-1180]	; 2cf0 <ippGetInteger@plt+0x1580>
    3188:	ldr	r1, [pc, #-1180]	; 2cf4 <ippGetInteger@plt+0x1584>
    318c:	ldr	r3, [pc, #-1092]	; 2d50 <ippGetInteger@plt+0x15e0>
    3190:	add	r2, pc, r2
    3194:	add	r1, pc, r1
    3198:	b	2fa4 <ippGetInteger@plt+0x1834>
    319c:	ldr	r2, [pc, #-1196]	; 2cf8 <ippGetInteger@plt+0x1588>
    31a0:	ldr	r1, [pc, #-1196]	; 2cfc <ippGetInteger@plt+0x158c>
    31a4:	ldr	r3, [pc, #-1116]	; 2d50 <ippGetInteger@plt+0x15e0>
    31a8:	add	r2, pc, r2
    31ac:	add	r1, pc, r1
    31b0:	b	2fa4 <ippGetInteger@plt+0x1834>
    31b4:	ldr	r1, [pc, #-1132]	; 2d50 <ippGetInteger@plt+0x15e0>
    31b8:	ldr	r0, [sp, #72]	; 0x48
    31bc:	ldr	r2, [pc, #-1220]	; 2d00 <ippGetInteger@plt+0x1590>
    31c0:	mov	r3, sl
    31c4:	ldr	r0, [r0, r1]
    31c8:	ldr	r1, [pc, #-1228]	; 2d04 <ippGetInteger@plt+0x1594>
    31cc:	add	r2, pc, r2
    31d0:	add	r1, pc, r1
    31d4:	ldr	r0, [r0]
    31d8:	bl	1404 <_cupsLangPrintf@plt>
    31dc:	bl	36e8 <ippGetInteger@plt+0x1f78>
    31e0:	ldr	r1, [pc, #-1248]	; 2d08 <ippGetInteger@plt+0x1598>
    31e4:	ldr	r3, [pc, #-1180]	; 2d50 <ippGetInteger@plt+0x15e0>
    31e8:	add	r1, pc, r1
    31ec:	b	2f84 <ippGetInteger@plt+0x1814>
    31f0:	ldr	r1, [pc, #-1260]	; 2d0c <ippGetInteger@plt+0x159c>
    31f4:	ldr	r3, [pc, #-1196]	; 2d50 <ippGetInteger@plt+0x15e0>
    31f8:	add	r1, pc, r1
    31fc:	b	2f84 <ippGetInteger@plt+0x1814>
    3200:	ldr	r1, [pc, #-1272]	; 2d10 <ippGetInteger@plt+0x15a0>
    3204:	ldr	r3, [pc, #-1212]	; 2d50 <ippGetInteger@plt+0x15e0>
    3208:	ldr	r2, [sp, #48]	; 0x30
    320c:	add	r1, pc, r1
    3210:	b	2fa4 <ippGetInteger@plt+0x1834>
    3214:	ldr	r1, [pc, #-1288]	; 2d14 <ippGetInteger@plt+0x15a4>
    3218:	ldr	r3, [pc, #-1232]	; 2d50 <ippGetInteger@plt+0x15e0>
    321c:	mov	r2, r5
    3220:	add	r1, pc, r1
    3224:	b	2fa4 <ippGetInteger@plt+0x1834>
    3228:	ldr	r5, [pc, #-1304]	; 2d18 <ippGetInteger@plt+0x15a8>
    322c:	mov	r0, r8
    3230:	add	r5, pc, r5
    3234:	mov	r1, r5
    3238:	bl	16a4 <strcmp@plt>
    323c:	subs	r3, r0, #0
    3240:	bne	3274 <ippGetInteger@plt+0x1b04>
    3244:	ldr	r2, [sp, #32]
    3248:	add	r4, r4, #1
    324c:	cmp	r2, r4
    3250:	ble	3338 <ippGetInteger@plt+0x1bc8>
    3254:	str	r3, [sp]
    3258:	mov	r1, r7
    325c:	ldr	r2, [sl, #4]
    3260:	mov	r0, #11
    3264:	bl	3c54 <ippGetInteger@plt+0x24e4>
    3268:	subs	r5, r0, #0
    326c:	bne	2118 <ippGetInteger@plt+0x9a8>
    3270:	b	1df0 <ippGetInteger@plt+0x680>
    3274:	ldr	r1, [pc, #-1376]	; 2d1c <ippGetInteger@plt+0x15ac>
    3278:	mov	r0, r8
    327c:	add	r1, pc, r1
    3280:	bl	16a4 <strcmp@plt>
    3284:	subs	r3, r0, #0
    3288:	beq	349c <ippGetInteger@plt+0x1d2c>
    328c:	ldr	r1, [pc, #-1396]	; 2d20 <ippGetInteger@plt+0x15b0>
    3290:	mov	r0, r8
    3294:	add	r1, pc, r1
    3298:	bl	16a4 <strcmp@plt>
    329c:	subs	r3, r0, #0
    32a0:	beq	347c <ippGetInteger@plt+0x1d0c>
    32a4:	ldr	r1, [pc, #-1416]	; 2d24 <ippGetInteger@plt+0x15b4>
    32a8:	mov	r0, r8
    32ac:	add	r1, pc, r1
    32b0:	bl	16a4 <strcmp@plt>
    32b4:	subs	r3, r0, #0
    32b8:	beq	345c <ippGetInteger@plt+0x1cec>
    32bc:	ldr	r1, [pc, #-1436]	; 2d28 <ippGetInteger@plt+0x15b8>
    32c0:	mov	r0, r8
    32c4:	add	r1, pc, r1
    32c8:	bl	16a4 <strcmp@plt>
    32cc:	cmp	r0, #0
    32d0:	beq	3438 <ippGetInteger@plt+0x1cc8>
    32d4:	ldr	r1, [pc, #-1456]	; 2d2c <ippGetInteger@plt+0x15bc>
    32d8:	mov	r0, r8
    32dc:	add	r1, pc, r1
    32e0:	bl	16a4 <strcmp@plt>
    32e4:	subs	r2, r0, #0
    32e8:	beq	33b0 <ippGetInteger@plt+0x1c40>
    32ec:	ldr	r5, [pc, #-1476]	; 2d30 <ippGetInteger@plt+0x15c0>
    32f0:	mov	r0, r8
    32f4:	add	r5, pc, r5
    32f8:	mov	r1, r5
    32fc:	bl	16a4 <strcmp@plt>
    3300:	subs	r3, r0, #0
    3304:	bne	3360 <ippGetInteger@plt+0x1bf0>
    3308:	ldr	r2, [sp, #32]
    330c:	add	r4, r4, #1
    3310:	cmp	r2, r4
    3314:	ble	334c <ippGetInteger@plt+0x1bdc>
    3318:	str	r3, [sp]
    331c:	mov	r1, r7
    3320:	ldr	r2, [sl, #4]
    3324:	mov	r0, #13
    3328:	bl	3c54 <ippGetInteger@plt+0x24e4>
    332c:	subs	r5, r0, #0
    3330:	bne	2118 <ippGetInteger@plt+0x9a8>
    3334:	b	1df0 <ippGetInteger@plt+0x680>
    3338:	ldr	r1, [pc, #-1548]	; 2d34 <ippGetInteger@plt+0x15c4>
    333c:	ldr	r3, [pc, #-1524]	; 2d50 <ippGetInteger@plt+0x15e0>
    3340:	mov	r2, r5
    3344:	add	r1, pc, r1
    3348:	b	2fa4 <ippGetInteger@plt+0x1834>
    334c:	ldr	r1, [pc, #-1564]	; 2d38 <ippGetInteger@plt+0x15c8>
    3350:	ldr	r3, [pc, #-1544]	; 2d50 <ippGetInteger@plt+0x15e0>
    3354:	mov	r2, r5
    3358:	add	r1, pc, r1
    335c:	b	2fa4 <ippGetInteger@plt+0x1834>
    3360:	ldr	r1, [pc, #-1580]	; 2d3c <ippGetInteger@plt+0x15cc>
    3364:	mov	r2, #6
    3368:	add	r1, pc, r1
    336c:	mov	r0, r8
    3370:	bl	1410 <strncmp@plt>
    3374:	cmp	r0, #0
    3378:	bne	33ec <ippGetInteger@plt+0x1c7c>
    337c:	ldr	r3, [sp, #32]
    3380:	add	r4, r4, #1
    3384:	cmp	r3, r4
    3388:	add	r2, r8, #6
    338c:	ble	33d0 <ippGetInteger@plt+0x1c60>
    3390:	str	r0, [sp]
    3394:	mov	r1, r7
    3398:	ldr	r3, [sl, #4]
    339c:	mov	r0, #14
    33a0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    33a4:	subs	r5, r0, #0
    33a8:	bne	2118 <ippGetInteger@plt+0x9a8>
    33ac:	b	1df0 <ippGetInteger@plt+0x680>
    33b0:	str	r2, [sp]
    33b4:	mov	r3, r8
    33b8:	mov	r1, r7
    33bc:	mov	r0, #3
    33c0:	bl	3c54 <ippGetInteger@plt+0x24e4>
    33c4:	subs	r5, r0, #0
    33c8:	bne	2118 <ippGetInteger@plt+0x9a8>
    33cc:	b	1df0 <ippGetInteger@plt+0x680>
    33d0:	ldr	r1, [sp, #40]	; 0x28
    33d4:	ldr	r2, [sp, #24]
    33d8:	ldr	r3, [pc, #-1680]	; 2d50 <ippGetInteger@plt+0x15e0>
    33dc:	ldr	r2, [r2, r1, lsl #2]
    33e0:	ldr	r1, [pc, #-1704]	; 2d40 <ippGetInteger@plt+0x15d0>
    33e4:	add	r1, pc, r1
    33e8:	b	2fa4 <ippGetInteger@plt+0x1834>
    33ec:	ldr	r5, [pc, #-1712]	; 2d44 <ippGetInteger@plt+0x15d4>
    33f0:	mov	r0, r8
    33f4:	add	r5, pc, r5
    33f8:	mov	r1, r5
    33fc:	bl	16a4 <strcmp@plt>
    3400:	subs	r2, r0, #0
    3404:	bne	34d0 <ippGetInteger@plt+0x1d60>
    3408:	ldr	r3, [sp, #32]
    340c:	add	r4, r4, #1
    3410:	cmp	r3, r4
    3414:	ble	34bc <ippGetInteger@plt+0x1d4c>
    3418:	str	r2, [sp]
    341c:	mov	r1, r7
    3420:	ldr	r3, [sl, #4]
    3424:	mov	r0, #15
    3428:	bl	3c54 <ippGetInteger@plt+0x24e4>
    342c:	subs	r5, r0, #0
    3430:	bne	2118 <ippGetInteger@plt+0x9a8>
    3434:	b	1df0 <ippGetInteger@plt+0x680>
    3438:	mov	r3, #0
    343c:	mov	r1, r7
    3440:	str	r3, [sp]
    3444:	mov	r2, r3
    3448:	mov	r0, #6
    344c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    3450:	subs	r5, r0, #0
    3454:	bne	2118 <ippGetInteger@plt+0x9a8>
    3458:	b	1df0 <ippGetInteger@plt+0x680>
    345c:	str	r3, [sp]
    3460:	mov	r1, r7
    3464:	mov	r2, r3
    3468:	mov	r0, #20
    346c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    3470:	subs	r5, r0, #0
    3474:	bne	2440 <ippGetInteger@plt+0xcd0>
    3478:	b	1df0 <ippGetInteger@plt+0x680>
    347c:	str	r3, [sp]
    3480:	mov	r1, r7
    3484:	mov	r2, r3
    3488:	mov	r0, #18
    348c:	bl	3c54 <ippGetInteger@plt+0x24e4>
    3490:	subs	r5, r0, #0
    3494:	bne	2440 <ippGetInteger@plt+0xcd0>
    3498:	b	1df0 <ippGetInteger@plt+0x680>
    349c:	str	r3, [sp]
    34a0:	mov	r1, r7
    34a4:	mov	r2, r3
    34a8:	mov	r0, #19
    34ac:	bl	3c54 <ippGetInteger@plt+0x24e4>
    34b0:	subs	r5, r0, #0
    34b4:	bne	2440 <ippGetInteger@plt+0xcd0>
    34b8:	b	1df0 <ippGetInteger@plt+0x680>
    34bc:	ldr	r1, [pc, #-1916]	; 2d48 <ippGetInteger@plt+0x15d8>
    34c0:	ldr	r3, [pc, #-1912]	; 2d50 <ippGetInteger@plt+0x15e0>
    34c4:	mov	r2, r5
    34c8:	add	r1, pc, r1
    34cc:	b	2fa4 <ippGetInteger@plt+0x1834>
    34d0:	ldr	r1, [pc, #-1932]	; 2d4c <ippGetInteger@plt+0x15dc>
    34d4:	mov	r0, r8
    34d8:	add	r1, pc, r1
    34dc:	bl	16a4 <strcmp@plt>
    34e0:	ldr	r2, [sp, #72]	; 0x48
    34e4:	ldr	r3, [pc, #-1948]	; 2d50 <ippGetInteger@plt+0x15e0>
    34e8:	ldr	r3, [r2, r3]
    34ec:	ldr	r2, [r3]
    34f0:	subs	r4, r0, #0
    34f4:	bne	3510 <ippGetInteger@plt+0x1da0>
    34f8:	ldr	r1, [pc, #-1964]	; 2d54 <ippGetInteger@plt+0x15e4>
    34fc:	mov	r0, r2
    3500:	add	r1, pc, r1
    3504:	bl	1434 <_cupsLangPuts@plt>
    3508:	mov	r0, r4
    350c:	bl	1464 <exit@plt>
    3510:	mov	r0, r2
    3514:	ldr	r1, [pc, #-1988]	; 2d58 <ippGetInteger@plt+0x15e8>
    3518:	ldr	r2, [pc, #-1988]	; 2d5c <ippGetInteger@plt+0x15ec>
    351c:	mov	r3, r8
    3520:	add	r2, pc, r2
    3524:	add	r1, pc, r1
    3528:	bl	1404 <_cupsLangPrintf@plt>
    352c:	bl	36e8 <ippGetInteger@plt+0x1f78>
    3530:	mov	fp, #0
    3534:	mov	lr, #0
    3538:	pop	{r1}		; (ldr r1, [sp], #4)
    353c:	mov	r2, sp
    3540:	push	{r2}		; (str r2, [sp, #-4]!)
    3544:	push	{r0}		; (str r0, [sp, #-4]!)
    3548:	ldr	sl, [pc, #40]	; 3578 <ippGetInteger@plt+0x1e08>
    354c:	add	r3, pc, #36	; 0x24
    3550:	add	sl, sl, r3
    3554:	ldr	ip, [pc, #32]	; 357c <ippGetInteger@plt+0x1e0c>
    3558:	ldr	ip, [sl, ip]
    355c:	push	{ip}		; (str ip, [sp, #-4]!)
    3560:	ldr	r3, [pc, #24]	; 3580 <ippGetInteger@plt+0x1e10>
    3564:	ldr	r3, [sl, r3]
    3568:	ldr	r0, [pc, #20]	; 3584 <ippGetInteger@plt+0x1e14>
    356c:	ldr	r0, [sl, r0]
    3570:	bl	1728 <__libc_start_main@plt>
    3574:	bl	153c <abort@plt>
    3578:	strdeq	r4, [r1], -r0
    357c:	andeq	r0, r0, r8, lsl #3
    3580:	andeq	r0, r0, ip, ror r1
    3584:	andeq	r0, r0, r0, ror r1
    3588:	ldr	r3, [pc, #20]	; 35a4 <ippGetInteger@plt+0x1e34>
    358c:	ldr	r2, [pc, #20]	; 35a8 <ippGetInteger@plt+0x1e38>
    3590:	add	r3, pc, r3
    3594:	ldr	r2, [r3, r2]
    3598:	cmp	r2, #0
    359c:	bxeq	lr
    35a0:	b	1734 <__gmon_start__@plt>
    35a4:	ldrdeq	r4, [r1], -r0
    35a8:	andeq	r0, r0, ip, lsl #3
    35ac:	ldr	r0, [pc, #44]	; 35e0 <ippGetInteger@plt+0x1e70>
    35b0:	ldr	r3, [pc, #44]	; 35e4 <ippGetInteger@plt+0x1e74>
    35b4:	add	r0, pc, r0
    35b8:	add	r3, pc, r3
    35bc:	cmp	r3, r0
    35c0:	ldr	r3, [pc, #32]	; 35e8 <ippGetInteger@plt+0x1e78>
    35c4:	add	r3, pc, r3
    35c8:	bxeq	lr
    35cc:	ldr	r2, [pc, #24]	; 35ec <ippGetInteger@plt+0x1e7c>
    35d0:	ldr	r3, [r3, r2]
    35d4:	cmp	r3, #0
    35d8:	bxeq	lr
    35dc:	bx	r3
    35e0:	andeq	r4, r1, ip, asr sl
    35e4:	andeq	r4, r1, r8, asr sl
    35e8:	muleq	r1, ip, r8
    35ec:	andeq	r0, r0, r4, lsl #3
    35f0:	ldr	r0, [pc, #56]	; 3630 <ippGetInteger@plt+0x1ec0>
    35f4:	ldr	r3, [pc, #56]	; 3634 <ippGetInteger@plt+0x1ec4>
    35f8:	add	r0, pc, r0
    35fc:	add	r3, pc, r3
    3600:	sub	r1, r3, r0
    3604:	ldr	r3, [pc, #44]	; 3638 <ippGetInteger@plt+0x1ec8>
    3608:	asr	r1, r1, #2
    360c:	add	r3, pc, r3
    3610:	add	r1, r1, r1, lsr #31
    3614:	asrs	r1, r1, #1
    3618:	bxeq	lr
    361c:	ldr	r2, [pc, #24]	; 363c <ippGetInteger@plt+0x1ecc>
    3620:	ldr	r3, [r3, r2]
    3624:	cmp	r3, #0
    3628:	bxeq	lr
    362c:	bx	r3
    3630:	andeq	r4, r1, r8, lsl sl
    3634:	andeq	r4, r1, r4, lsl sl
    3638:	andeq	r4, r1, r4, asr r8
    363c:	muleq	r0, r0, r1
    3640:	ldr	r3, [pc, #76]	; 3694 <ippGetInteger@plt+0x1f24>
    3644:	ldr	r2, [pc, #76]	; 3698 <ippGetInteger@plt+0x1f28>
    3648:	add	r3, pc, r3
    364c:	add	r2, pc, r2
    3650:	ldrb	r3, [r3]
    3654:	cmp	r3, #0
    3658:	bxne	lr
    365c:	ldr	r3, [pc, #56]	; 369c <ippGetInteger@plt+0x1f2c>
    3660:	push	{r4, lr}
    3664:	ldr	r3, [r2, r3]
    3668:	cmp	r3, #0
    366c:	beq	367c <ippGetInteger@plt+0x1f0c>
    3670:	ldr	r3, [pc, #40]	; 36a0 <ippGetInteger@plt+0x1f30>
    3674:	ldr	r0, [pc, r3]
    3678:	bl	174c <__cxa_finalize@plt>
    367c:	bl	35ac <ippGetInteger@plt+0x1e3c>
    3680:	ldr	r3, [pc, #28]	; 36a4 <ippGetInteger@plt+0x1f34>
    3684:	mov	r2, #1
    3688:	add	r3, pc, r3
    368c:	strb	r2, [r3]
    3690:	pop	{r4, pc}
    3694:	andeq	r4, r1, r8, asr #19
    3698:	andeq	r4, r1, r4, lsl r8
    369c:	muleq	r0, r4, r1
    36a0:	andeq	r4, r1, r8, lsl #19
    36a4:	andeq	r4, r1, r8, lsl #19
    36a8:	b	35f0 <ippGetInteger@plt+0x1e80>
    36ac:	andeq	r0, r0, r0
    36b0:	ldr	r1, [r1, #4]
    36b4:	ldr	r0, [r0, #4]
    36b8:	b	16a4 <strcmp@plt>
    36bc:	push	{r4, lr}
    36c0:	mov	r2, #500	; 0x1f4
    36c4:	bl	1554 <poll@plt>
    36c8:	cmp	r0, #0
    36cc:	pople	{r4, pc}
    36d0:	ldr	r3, [pc, #12]	; 36e4 <ippGetInteger@plt+0x1f74>
    36d4:	mov	r2, #1
    36d8:	add	r3, pc, r3
    36dc:	str	r2, [r3]
    36e0:	pop	{r4, pc}
    36e4:	andeq	r4, r1, ip, lsr r9
    36e8:	ldr	r3, [pc, #1112]	; 3b48 <ippGetInteger@plt+0x23d8>
    36ec:	ldr	r2, [pc, #1112]	; 3b4c <ippGetInteger@plt+0x23dc>
    36f0:	add	r3, pc, r3
    36f4:	push	{r4, lr}
    36f8:	ldr	r4, [r3, r2]
    36fc:	ldr	r5, [pc, #1100]	; 3b50 <ippGetInteger@plt+0x23e0>
    3700:	ldr	r1, [pc, #1100]	; 3b54 <ippGetInteger@plt+0x23e4>
    3704:	add	r5, pc, r5
    3708:	add	r1, pc, r1
    370c:	ldr	r0, [r4]
    3710:	bl	1434 <_cupsLangPuts@plt>
    3714:	mov	r1, r5
    3718:	ldr	r0, [r4]
    371c:	bl	1434 <_cupsLangPuts@plt>
    3720:	ldr	r1, [pc, #1072]	; 3b58 <ippGetInteger@plt+0x23e8>
    3724:	ldr	r0, [r4]
    3728:	add	r1, pc, r1
    372c:	bl	1434 <_cupsLangPuts@plt>
    3730:	ldr	r1, [pc, #1060]	; 3b5c <ippGetInteger@plt+0x23ec>
    3734:	ldr	r0, [r4]
    3738:	add	r1, pc, r1
    373c:	bl	1434 <_cupsLangPuts@plt>
    3740:	ldr	r1, [pc, #1048]	; 3b60 <ippGetInteger@plt+0x23f0>
    3744:	ldr	r0, [r4]
    3748:	add	r1, pc, r1
    374c:	bl	1434 <_cupsLangPuts@plt>
    3750:	ldr	r1, [pc, #1036]	; 3b64 <ippGetInteger@plt+0x23f4>
    3754:	ldr	r0, [r4]
    3758:	add	r1, pc, r1
    375c:	bl	1434 <_cupsLangPuts@plt>
    3760:	ldr	r1, [pc, #1024]	; 3b68 <ippGetInteger@plt+0x23f8>
    3764:	ldr	r0, [r4]
    3768:	add	r1, pc, r1
    376c:	bl	1434 <_cupsLangPuts@plt>
    3770:	ldr	r1, [pc, #1012]	; 3b6c <ippGetInteger@plt+0x23fc>
    3774:	ldr	r0, [r4]
    3778:	add	r1, pc, r1
    377c:	bl	1434 <_cupsLangPuts@plt>
    3780:	ldr	r1, [pc, #1000]	; 3b70 <ippGetInteger@plt+0x2400>
    3784:	ldr	r0, [r4]
    3788:	add	r1, pc, r1
    378c:	bl	1434 <_cupsLangPuts@plt>
    3790:	mov	r1, r5
    3794:	ldr	r0, [r4]
    3798:	bl	1434 <_cupsLangPuts@plt>
    379c:	ldr	r1, [pc, #976]	; 3b74 <ippGetInteger@plt+0x2404>
    37a0:	ldr	r0, [r4]
    37a4:	add	r1, pc, r1
    37a8:	bl	1434 <_cupsLangPuts@plt>
    37ac:	ldr	r1, [pc, #964]	; 3b78 <ippGetInteger@plt+0x2408>
    37b0:	ldr	r0, [r4]
    37b4:	add	r1, pc, r1
    37b8:	bl	1434 <_cupsLangPuts@plt>
    37bc:	ldr	r1, [pc, #952]	; 3b7c <ippGetInteger@plt+0x240c>
    37c0:	ldr	r0, [r4]
    37c4:	add	r1, pc, r1
    37c8:	bl	1434 <_cupsLangPuts@plt>
    37cc:	ldr	r1, [pc, #940]	; 3b80 <ippGetInteger@plt+0x2410>
    37d0:	ldr	r0, [r4]
    37d4:	add	r1, pc, r1
    37d8:	bl	1434 <_cupsLangPuts@plt>
    37dc:	ldr	r1, [pc, #928]	; 3b84 <ippGetInteger@plt+0x2414>
    37e0:	ldr	r0, [r4]
    37e4:	add	r1, pc, r1
    37e8:	bl	1434 <_cupsLangPuts@plt>
    37ec:	ldr	r1, [pc, #916]	; 3b88 <ippGetInteger@plt+0x2418>
    37f0:	ldr	r0, [r4]
    37f4:	add	r1, pc, r1
    37f8:	bl	1434 <_cupsLangPuts@plt>
    37fc:	ldr	r1, [pc, #904]	; 3b8c <ippGetInteger@plt+0x241c>
    3800:	ldr	r0, [r4]
    3804:	add	r1, pc, r1
    3808:	bl	1434 <_cupsLangPuts@plt>
    380c:	ldr	r1, [pc, #892]	; 3b90 <ippGetInteger@plt+0x2420>
    3810:	ldr	r0, [r4]
    3814:	add	r1, pc, r1
    3818:	bl	1434 <_cupsLangPuts@plt>
    381c:	ldr	r1, [pc, #880]	; 3b94 <ippGetInteger@plt+0x2424>
    3820:	ldr	r0, [r4]
    3824:	add	r1, pc, r1
    3828:	bl	1434 <_cupsLangPuts@plt>
    382c:	ldr	r1, [pc, #868]	; 3b98 <ippGetInteger@plt+0x2428>
    3830:	ldr	r0, [r4]
    3834:	add	r1, pc, r1
    3838:	bl	1434 <_cupsLangPuts@plt>
    383c:	ldr	r1, [pc, #856]	; 3b9c <ippGetInteger@plt+0x242c>
    3840:	ldr	r0, [r4]
    3844:	add	r1, pc, r1
    3848:	bl	1434 <_cupsLangPuts@plt>
    384c:	ldr	r1, [pc, #844]	; 3ba0 <ippGetInteger@plt+0x2430>
    3850:	ldr	r0, [r4]
    3854:	add	r1, pc, r1
    3858:	bl	1434 <_cupsLangPuts@plt>
    385c:	ldr	r1, [pc, #832]	; 3ba4 <ippGetInteger@plt+0x2434>
    3860:	ldr	r0, [r4]
    3864:	add	r1, pc, r1
    3868:	bl	1434 <_cupsLangPuts@plt>
    386c:	ldr	r1, [pc, #820]	; 3ba8 <ippGetInteger@plt+0x2438>
    3870:	ldr	r0, [r4]
    3874:	add	r1, pc, r1
    3878:	bl	1434 <_cupsLangPuts@plt>
    387c:	ldr	r1, [pc, #808]	; 3bac <ippGetInteger@plt+0x243c>
    3880:	ldr	r0, [r4]
    3884:	add	r1, pc, r1
    3888:	bl	1434 <_cupsLangPuts@plt>
    388c:	ldr	r1, [pc, #796]	; 3bb0 <ippGetInteger@plt+0x2440>
    3890:	ldr	r0, [r4]
    3894:	add	r1, pc, r1
    3898:	bl	1434 <_cupsLangPuts@plt>
    389c:	ldr	r1, [pc, #784]	; 3bb4 <ippGetInteger@plt+0x2444>
    38a0:	ldr	r0, [r4]
    38a4:	add	r1, pc, r1
    38a8:	bl	1434 <_cupsLangPuts@plt>
    38ac:	ldr	r1, [pc, #772]	; 3bb8 <ippGetInteger@plt+0x2448>
    38b0:	ldr	r0, [r4]
    38b4:	add	r1, pc, r1
    38b8:	bl	1434 <_cupsLangPuts@plt>
    38bc:	ldr	r1, [pc, #760]	; 3bbc <ippGetInteger@plt+0x244c>
    38c0:	ldr	r0, [r4]
    38c4:	add	r1, pc, r1
    38c8:	bl	1434 <_cupsLangPuts@plt>
    38cc:	ldr	r1, [pc, #748]	; 3bc0 <ippGetInteger@plt+0x2450>
    38d0:	ldr	r0, [r4]
    38d4:	add	r1, pc, r1
    38d8:	bl	1434 <_cupsLangPuts@plt>
    38dc:	ldr	r1, [pc, #736]	; 3bc4 <ippGetInteger@plt+0x2454>
    38e0:	ldr	r0, [r4]
    38e4:	add	r1, pc, r1
    38e8:	bl	1434 <_cupsLangPuts@plt>
    38ec:	ldr	r1, [pc, #724]	; 3bc8 <ippGetInteger@plt+0x2458>
    38f0:	ldr	r0, [r4]
    38f4:	add	r1, pc, r1
    38f8:	bl	1434 <_cupsLangPuts@plt>
    38fc:	ldr	r1, [pc, #712]	; 3bcc <ippGetInteger@plt+0x245c>
    3900:	ldr	r0, [r4]
    3904:	add	r1, pc, r1
    3908:	bl	1434 <_cupsLangPuts@plt>
    390c:	ldr	r1, [pc, #700]	; 3bd0 <ippGetInteger@plt+0x2460>
    3910:	ldr	r0, [r4]
    3914:	add	r1, pc, r1
    3918:	bl	1434 <_cupsLangPuts@plt>
    391c:	ldr	r1, [pc, #688]	; 3bd4 <ippGetInteger@plt+0x2464>
    3920:	ldr	r0, [r4]
    3924:	add	r1, pc, r1
    3928:	bl	1434 <_cupsLangPuts@plt>
    392c:	ldr	r1, [pc, #676]	; 3bd8 <ippGetInteger@plt+0x2468>
    3930:	ldr	r0, [r4]
    3934:	add	r1, pc, r1
    3938:	bl	1434 <_cupsLangPuts@plt>
    393c:	ldr	r1, [pc, #664]	; 3bdc <ippGetInteger@plt+0x246c>
    3940:	ldr	r0, [r4]
    3944:	add	r1, pc, r1
    3948:	bl	1434 <_cupsLangPuts@plt>
    394c:	ldr	r1, [pc, #652]	; 3be0 <ippGetInteger@plt+0x2470>
    3950:	ldr	r0, [r4]
    3954:	add	r1, pc, r1
    3958:	bl	1434 <_cupsLangPuts@plt>
    395c:	mov	r1, r5
    3960:	ldr	r0, [r4]
    3964:	bl	1434 <_cupsLangPuts@plt>
    3968:	ldr	r1, [pc, #628]	; 3be4 <ippGetInteger@plt+0x2474>
    396c:	ldr	r0, [r4]
    3970:	add	r1, pc, r1
    3974:	bl	1434 <_cupsLangPuts@plt>
    3978:	ldr	r1, [pc, #616]	; 3be8 <ippGetInteger@plt+0x2478>
    397c:	ldr	r0, [r4]
    3980:	add	r1, pc, r1
    3984:	bl	1434 <_cupsLangPuts@plt>
    3988:	ldr	r1, [pc, #604]	; 3bec <ippGetInteger@plt+0x247c>
    398c:	ldr	r0, [r4]
    3990:	add	r1, pc, r1
    3994:	bl	1434 <_cupsLangPuts@plt>
    3998:	ldr	r1, [pc, #592]	; 3bf0 <ippGetInteger@plt+0x2480>
    399c:	ldr	r0, [r4]
    39a0:	add	r1, pc, r1
    39a4:	bl	1434 <_cupsLangPuts@plt>
    39a8:	ldr	r1, [pc, #580]	; 3bf4 <ippGetInteger@plt+0x2484>
    39ac:	ldr	r0, [r4]
    39b0:	add	r1, pc, r1
    39b4:	bl	1434 <_cupsLangPuts@plt>
    39b8:	ldr	r1, [pc, #568]	; 3bf8 <ippGetInteger@plt+0x2488>
    39bc:	ldr	r0, [r4]
    39c0:	add	r1, pc, r1
    39c4:	bl	1434 <_cupsLangPuts@plt>
    39c8:	ldr	r1, [pc, #556]	; 3bfc <ippGetInteger@plt+0x248c>
    39cc:	ldr	r0, [r4]
    39d0:	add	r1, pc, r1
    39d4:	bl	1434 <_cupsLangPuts@plt>
    39d8:	ldr	r1, [pc, #544]	; 3c00 <ippGetInteger@plt+0x2490>
    39dc:	ldr	r0, [r4]
    39e0:	add	r1, pc, r1
    39e4:	bl	1434 <_cupsLangPuts@plt>
    39e8:	ldr	r1, [pc, #532]	; 3c04 <ippGetInteger@plt+0x2494>
    39ec:	ldr	r0, [r4]
    39f0:	add	r1, pc, r1
    39f4:	bl	1434 <_cupsLangPuts@plt>
    39f8:	mov	r1, r5
    39fc:	ldr	r0, [r4]
    3a00:	bl	1434 <_cupsLangPuts@plt>
    3a04:	ldr	r1, [pc, #508]	; 3c08 <ippGetInteger@plt+0x2498>
    3a08:	ldr	r0, [r4]
    3a0c:	add	r1, pc, r1
    3a10:	bl	1434 <_cupsLangPuts@plt>
    3a14:	ldr	r1, [pc, #496]	; 3c0c <ippGetInteger@plt+0x249c>
    3a18:	ldr	r0, [r4]
    3a1c:	add	r1, pc, r1
    3a20:	bl	1434 <_cupsLangPuts@plt>
    3a24:	ldr	r1, [pc, #484]	; 3c10 <ippGetInteger@plt+0x24a0>
    3a28:	ldr	r0, [r4]
    3a2c:	add	r1, pc, r1
    3a30:	bl	1434 <_cupsLangPuts@plt>
    3a34:	ldr	r1, [pc, #472]	; 3c14 <ippGetInteger@plt+0x24a4>
    3a38:	ldr	r0, [r4]
    3a3c:	add	r1, pc, r1
    3a40:	bl	1434 <_cupsLangPuts@plt>
    3a44:	ldr	r1, [pc, #460]	; 3c18 <ippGetInteger@plt+0x24a8>
    3a48:	ldr	r0, [r4]
    3a4c:	add	r1, pc, r1
    3a50:	bl	1434 <_cupsLangPuts@plt>
    3a54:	ldr	r1, [pc, #448]	; 3c1c <ippGetInteger@plt+0x24ac>
    3a58:	ldr	r0, [r4]
    3a5c:	add	r1, pc, r1
    3a60:	bl	1434 <_cupsLangPuts@plt>
    3a64:	ldr	r1, [pc, #436]	; 3c20 <ippGetInteger@plt+0x24b0>
    3a68:	ldr	r0, [r4]
    3a6c:	add	r1, pc, r1
    3a70:	bl	1434 <_cupsLangPuts@plt>
    3a74:	ldr	r1, [pc, #424]	; 3c24 <ippGetInteger@plt+0x24b4>
    3a78:	ldr	r0, [r4]
    3a7c:	add	r1, pc, r1
    3a80:	bl	1434 <_cupsLangPuts@plt>
    3a84:	ldr	r1, [pc, #412]	; 3c28 <ippGetInteger@plt+0x24b8>
    3a88:	ldr	r0, [r4]
    3a8c:	add	r1, pc, r1
    3a90:	bl	1434 <_cupsLangPuts@plt>
    3a94:	ldr	r1, [pc, #400]	; 3c2c <ippGetInteger@plt+0x24bc>
    3a98:	ldr	r0, [r4]
    3a9c:	add	r1, pc, r1
    3aa0:	bl	1434 <_cupsLangPuts@plt>
    3aa4:	mov	r1, r5
    3aa8:	ldr	r0, [r4]
    3aac:	bl	1434 <_cupsLangPuts@plt>
    3ab0:	ldr	r1, [pc, #376]	; 3c30 <ippGetInteger@plt+0x24c0>
    3ab4:	ldr	r0, [r4]
    3ab8:	add	r1, pc, r1
    3abc:	bl	1434 <_cupsLangPuts@plt>
    3ac0:	ldr	r1, [pc, #364]	; 3c34 <ippGetInteger@plt+0x24c4>
    3ac4:	ldr	r0, [r4]
    3ac8:	add	r1, pc, r1
    3acc:	bl	1434 <_cupsLangPuts@plt>
    3ad0:	ldr	r1, [pc, #352]	; 3c38 <ippGetInteger@plt+0x24c8>
    3ad4:	ldr	r0, [r4]
    3ad8:	add	r1, pc, r1
    3adc:	bl	1434 <_cupsLangPuts@plt>
    3ae0:	ldr	r1, [pc, #340]	; 3c3c <ippGetInteger@plt+0x24cc>
    3ae4:	ldr	r0, [r4]
    3ae8:	add	r1, pc, r1
    3aec:	bl	1434 <_cupsLangPuts@plt>
    3af0:	ldr	r1, [pc, #328]	; 3c40 <ippGetInteger@plt+0x24d0>
    3af4:	ldr	r0, [r4]
    3af8:	add	r1, pc, r1
    3afc:	bl	1434 <_cupsLangPuts@plt>
    3b00:	ldr	r1, [pc, #316]	; 3c44 <ippGetInteger@plt+0x24d4>
    3b04:	ldr	r0, [r4]
    3b08:	add	r1, pc, r1
    3b0c:	bl	1434 <_cupsLangPuts@plt>
    3b10:	ldr	r1, [pc, #304]	; 3c48 <ippGetInteger@plt+0x24d8>
    3b14:	ldr	r0, [r4]
    3b18:	add	r1, pc, r1
    3b1c:	bl	1434 <_cupsLangPuts@plt>
    3b20:	ldr	r1, [pc, #292]	; 3c4c <ippGetInteger@plt+0x24dc>
    3b24:	ldr	r0, [r4]
    3b28:	add	r1, pc, r1
    3b2c:	bl	1434 <_cupsLangPuts@plt>
    3b30:	ldr	r1, [pc, #280]	; 3c50 <ippGetInteger@plt+0x24e0>
    3b34:	ldr	r0, [r4]
    3b38:	add	r1, pc, r1
    3b3c:	bl	1434 <_cupsLangPuts@plt>
    3b40:	mov	r0, #0
    3b44:	bl	1464 <exit@plt>
    3b48:	andeq	r4, r1, r0, ror r7
    3b4c:	andeq	r0, r0, r4, ror r1
    3b50:	andeq	r3, r0, r4, asr #12
    3b54:	andeq	r2, r0, r0, lsl #9
    3b58:	andeq	r2, r0, r8, lsl r5
    3b5c:	andeq	r2, r0, r4, lsl r5
    3b60:	andeq	r2, r0, r4, lsr r5
    3b64:	andeq	r2, r0, r4, asr r5
    3b68:	andeq	r2, r0, r4, lsl #11
    3b6c:	andeq	r2, r0, r8, lsr #11
    3b70:	andeq	r2, r0, r4, asr #11
    3b74:	ldrdeq	r2, [r0], -r8
    3b78:	ldrdeq	r2, [r0], -r8
    3b7c:	andeq	r2, r0, r4, lsl #12
    3b80:	andeq	r2, r0, r4, lsr r6
    3b84:	andeq	r2, r0, r4, ror #12
    3b88:	andeq	r2, r0, r0, lsl #13
    3b8c:			; <UNDEFINED> instruction: 0x000026b4
    3b90:	ldrdeq	r2, [r0], -r4
    3b94:	andeq	r2, r0, r4, lsl #14
    3b98:	andeq	r2, r0, ip, lsr #14
    3b9c:	andeq	r2, r0, r4, asr r7
    3ba0:	andeq	r2, r0, r8, lsl #15
    3ba4:			; <UNDEFINED> instruction: 0x000027b4
    3ba8:	strdeq	r2, [r0], -r8
    3bac:	andeq	r2, r0, r8, lsr #16
    3bb0:	andeq	r2, r0, r0, ror r8
    3bb4:	andeq	r2, r0, r0, lsr #17
    3bb8:			; <UNDEFINED> instruction: 0x000028bc
    3bbc:	andeq	r2, r0, r0, ror #17
    3bc0:	andeq	r2, r0, r4, lsl r9
    3bc4:	andeq	r2, r0, ip, asr #18
    3bc8:	andeq	r2, r0, r8, ror r9
    3bcc:	muleq	r0, r8, r9
    3bd0:	andeq	r2, r0, r0, asr #19
    3bd4:	strdeq	r2, [r0], -r0
    3bd8:	andeq	r2, r0, r8, lsl sl
    3bdc:	andeq	r2, r0, ip, asr #20
    3be0:	andeq	r2, r0, r4, lsl #21
    3be4:	andeq	r2, r0, r4, lsr #21
    3be8:	andeq	r2, r0, r0, lsr #21
    3bec:	andeq	r2, r0, r0, asr #21
    3bf0:	andeq	r2, r0, r4, ror #21
    3bf4:	andeq	r2, r0, r8, lsl #22
    3bf8:	andeq	r2, r0, r0, lsr #22
    3bfc:	andeq	r2, r0, r8, lsr fp
    3c00:	andeq	r2, r0, r0, asr fp
    3c04:	andeq	r2, r0, r8, lsl #23
    3c08:			; <UNDEFINED> instruction: 0x00002bb0
    3c0c:			; <UNDEFINED> instruction: 0x00002bb0
    3c10:	andeq	r2, r0, r0, asr #23
    3c14:	ldrdeq	r2, [r0], -r8
    3c18:	andeq	r2, r0, r0, lsl #24
    3c1c:	andeq	r2, r0, r0, lsr #24
    3c20:	andeq	r2, r0, r8, lsr ip
    3c24:	andeq	r2, r0, ip, asr ip
    3c28:	andeq	r2, r0, r4, ror ip
    3c2c:	andeq	r2, r0, r4, lsl #25
    3c30:	muleq	r0, ip, ip
    3c34:	andeq	r2, r0, r4, lsr #25
    3c38:			; <UNDEFINED> instruction: 0x00002cbc
    3c3c:	andeq	r2, r0, r0, lsl #26
    3c40:	andeq	r2, r0, r0, lsr #26
    3c44:	andeq	r2, r0, r8, lsr sp
    3c48:	andeq	r2, r0, ip, asr sp
    3c4c:	andeq	r2, r0, r4, ror sp
    3c50:	andeq	r2, r0, r4, lsl #27
    3c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3c58:	sub	sp, sp, #268	; 0x10c
    3c5c:	ldr	r5, [pc, #456]	; 3e2c <ippGetInteger@plt+0x26bc>
    3c60:	ldr	ip, [pc, #456]	; 3e30 <ippGetInteger@plt+0x26c0>
    3c64:	add	r5, pc, r5
    3c68:	mov	r4, r0
    3c6c:	ldr	sl, [r5, ip]
    3c70:	mov	r6, r1
    3c74:	mov	r0, #1
    3c78:	ldr	ip, [sl]
    3c7c:	mov	r1, #76	; 0x4c
    3c80:	mov	fp, r2
    3c84:	mov	r8, r3
    3c88:	str	ip, [sp, #260]	; 0x104
    3c8c:	ldr	r9, [sp, #304]	; 0x130
    3c90:	bl	162c <calloc@plt>
    3c94:	subs	r7, r0, #0
    3c98:	beq	3d58 <ippGetInteger@plt+0x25e8>
    3c9c:	sub	r1, r4, #13
    3ca0:	cmp	r4, #9
    3ca4:	cmpne	r1, #1
    3ca8:	movls	r1, #1
    3cac:	movhi	r1, #0
    3cb0:	str	r4, [r7, #16]
    3cb4:	str	r6, [r7, #20]
    3cb8:	strls	fp, [r7, #24]
    3cbc:	bls	3cc8 <ippGetInteger@plt+0x2558>
    3cc0:	cmp	r4, #11
    3cc4:	beq	3d74 <ippGetInteger@plt+0x2604>
    3cc8:	cmp	r8, #0
    3ccc:	beq	3cec <ippGetInteger@plt+0x257c>
    3cd0:	add	r4, r7, #28
    3cd4:	mov	r1, r8
    3cd8:	mov	r0, r4
    3cdc:	mov	r2, #11
    3ce0:	bl	141c <regcomp@plt>
    3ce4:	cmp	r0, #0
    3ce8:	bne	3df4 <ippGetInteger@plt+0x2684>
    3cec:	cmp	r9, #0
    3cf0:	beq	3d58 <ippGetInteger@plt+0x25e8>
    3cf4:	ldr	r0, [r9, #4]
    3cf8:	cmp	r0, #0
    3cfc:	beq	3dd0 <ippGetInteger@plt+0x2660>
    3d00:	ldr	r8, [pc, #300]	; 3e34 <ippGetInteger@plt+0x26c4>
    3d04:	add	r6, r9, #4
    3d08:	add	r8, pc, r8
    3d0c:	mov	r5, #1
    3d10:	b	3d28 <ippGetInteger@plt+0x25b8>
    3d14:	ldr	r0, [r6, #4]!
    3d18:	add	r5, r5, #1
    3d1c:	cmp	r0, #0
    3d20:	add	r4, r4, #4
    3d24:	beq	3d3c <ippGetInteger@plt+0x25cc>
    3d28:	mov	r1, r8
    3d2c:	bl	16a4 <strcmp@plt>
    3d30:	lsl	r4, r5, #2
    3d34:	cmp	r0, #0
    3d38:	bne	3d14 <ippGetInteger@plt+0x25a4>
    3d3c:	str	r5, [r7, #68]	; 0x44
    3d40:	mov	r0, r4
    3d44:	bl	1650 <malloc@plt>
    3d48:	mov	r2, r4
    3d4c:	mov	r1, r9
    3d50:	str	r0, [r7, #72]	; 0x48
    3d54:	bl	1644 <memcpy@plt>
    3d58:	ldr	r2, [sp, #260]	; 0x104
    3d5c:	ldr	r3, [sl]
    3d60:	mov	r0, r7
    3d64:	cmp	r2, r3
    3d68:	bne	3df0 <ippGetInteger@plt+0x2680>
    3d6c:	add	sp, sp, #268	; 0x10c
    3d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3d74:	ldrb	r3, [fp]
    3d78:	cmp	r3, #45	; 0x2d
    3d7c:	beq	3ddc <ippGetInteger@plt+0x266c>
    3d80:	mov	r1, #45	; 0x2d
    3d84:	mov	r0, fp
    3d88:	bl	1740 <strchr@plt>
    3d8c:	subs	r1, r0, #0
    3d90:	mov	r0, fp
    3d94:	beq	3dbc <ippGetInteger@plt+0x264c>
    3d98:	ldr	r1, [pc, #152]	; 3e38 <ippGetInteger@plt+0x26c8>
    3d9c:	add	r3, r7, #64	; 0x40
    3da0:	add	r2, r7, #60	; 0x3c
    3da4:	add	r1, pc, r1
    3da8:	bl	16d4 <sscanf@plt>
    3dac:	cmp	r0, #1
    3db0:	ldreq	r3, [pc, #132]	; 3e3c <ippGetInteger@plt+0x26cc>
    3db4:	streq	r3, [r7, #64]	; 0x40
    3db8:	b	3cc8 <ippGetInteger@plt+0x2558>
    3dbc:	mov	r2, #10
    3dc0:	bl	13d4 <strtol@plt>
    3dc4:	str	r0, [r7, #64]	; 0x40
    3dc8:	str	r0, [r7, #60]	; 0x3c
    3dcc:	b	3cc8 <ippGetInteger@plt+0x2558>
    3dd0:	mov	r5, #1
    3dd4:	mov	r4, #4
    3dd8:	b	3d3c <ippGetInteger@plt+0x25cc>
    3ddc:	add	r0, fp, #1
    3de0:	mov	r2, #10
    3de4:	bl	13d4 <strtol@plt>
    3de8:	str	r0, [r7, #64]	; 0x40
    3dec:	b	3cc8 <ippGetInteger@plt+0x2558>
    3df0:	bl	15d8 <__stack_chk_fail@plt>
    3df4:	mov	r1, r4
    3df8:	add	r4, sp, #4
    3dfc:	mov	r2, r4
    3e00:	mov	r3, #256	; 0x100
    3e04:	bl	1548 <regerror@plt>
    3e08:	ldr	r3, [pc, #48]	; 3e40 <ippGetInteger@plt+0x26d0>
    3e0c:	ldr	r1, [pc, #48]	; 3e44 <ippGetInteger@plt+0x26d4>
    3e10:	mov	r2, r4
    3e14:	ldr	r3, [r5, r3]
    3e18:	add	r1, pc, r1
    3e1c:	ldr	r0, [r3]
    3e20:	bl	1404 <_cupsLangPrintf@plt>
    3e24:	mov	r0, #3
    3e28:	bl	1464 <exit@plt>
    3e2c:	strdeq	r4, [r1], -ip
    3e30:	andeq	r0, r0, ip, ror #2
    3e34:	andeq	r2, r0, r4, lsl ip
    3e38:	andeq	r2, r0, ip, asr #22
    3e3c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    3e40:	andeq	r0, r0, r4, ror r1
    3e44:	andeq	r2, r0, r0, ror #21
    3e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e4c:	sub	sp, sp, #31488	; 0x7b00
    3e50:	ldr	r5, [pc, #2744]	; 4910 <ippGetInteger@plt+0x31a0>
    3e54:	ldr	r3, [pc, #2744]	; 4914 <ippGetInteger@plt+0x31a4>
    3e58:	sub	sp, sp, #244	; 0xf4
    3e5c:	mov	r8, r0
    3e60:	add	r5, pc, r5
    3e64:	ldr	r0, [pc, #2732]	; 4918 <ippGetInteger@plt+0x31a8>
    3e68:	ldr	lr, [r8, #8]
    3e6c:	str	r5, [sp, #32]
    3e70:	ldr	r3, [r5, r3]
    3e74:	add	r0, pc, r0
    3e78:	add	r4, sp, #26368	; 0x6700
    3e7c:	ldr	ip, [r3]
    3e80:	stm	sp, {r0, lr}
    3e84:	add	lr, sp, #31488	; 0x7b00
    3e88:	add	lr, lr, #236	; 0xec
    3e8c:	add	r4, r4, #236	; 0xec
    3e90:	str	r3, [sp, #68]	; 0x44
    3e94:	mov	r3, #1024	; 0x400
    3e98:	str	ip, [lr]
    3e9c:	str	r1, [sp, #20]
    3ea0:	str	r2, [sp, #36]	; 0x24
    3ea4:	mov	r1, r3
    3ea8:	mov	r0, r4
    3eac:	mov	r2, #1
    3eb0:	add	r9, sp, #27392	; 0x6b00
    3eb4:	str	r4, [sp, #16]
    3eb8:	add	r9, r9, #240	; 0xf0
    3ebc:	bl	1668 <__snprintf_chk@plt>
    3ec0:	ldr	r2, [pc, #2644]	; 491c <ippGetInteger@plt+0x31ac>
    3ec4:	ldr	r1, [r8, #20]
    3ec8:	sub	r3, r9, #4
    3ecc:	add	r2, pc, r2
    3ed0:	mov	r0, r3
    3ed4:	str	r3, [sp, #56]	; 0x38
    3ed8:	mov	r3, #1024	; 0x400
    3edc:	str	r1, [sp, #4]
    3ee0:	str	r2, [sp]
    3ee4:	mov	r1, r3
    3ee8:	mov	r2, #1
    3eec:	bl	1668 <__snprintf_chk@plt>
    3ef0:	ldr	r2, [pc, #2600]	; 4920 <ippGetInteger@plt+0x31b0>
    3ef4:	ldr	r1, [r8, #4]
    3ef8:	mov	r3, #256	; 0x100
    3efc:	add	r2, pc, r2
    3f00:	add	r0, sp, #25600	; 0x6400
    3f04:	add	r0, r0, #236	; 0xec
    3f08:	str	r1, [sp, #4]
    3f0c:	str	r2, [sp]
    3f10:	mov	r1, r3
    3f14:	mov	r2, #1
    3f18:	str	r0, [sp, #52]	; 0x34
    3f1c:	bl	1668 <__snprintf_chk@plt>
    3f20:	add	r3, sp, #25600	; 0x6400
    3f24:	add	r3, r3, #112	; 0x70
    3f28:	ldr	r2, [pc, #2548]	; 4924 <ippGetInteger@plt+0x31b4>
    3f2c:	ldr	r1, [r8, #40]	; 0x28
    3f30:	str	r3, [sp, #48]	; 0x30
    3f34:	sub	r3, r3, #36	; 0x24
    3f38:	add	r2, pc, r2
    3f3c:	mov	r0, r3
    3f40:	str	r3, [sp, #60]	; 0x3c
    3f44:	mov	r3, #32
    3f48:	str	r1, [sp, #4]
    3f4c:	str	r2, [sp]
    3f50:	mov	r1, r3
    3f54:	mov	r2, #1
    3f58:	bl	1668 <__snprintf_chk@plt>
    3f5c:	ldr	r2, [pc, #2500]	; 4928 <ippGetInteger@plt+0x31b8>
    3f60:	ldr	r1, [r8, #12]
    3f64:	mov	r3, #256	; 0x100
    3f68:	add	r2, pc, r2
    3f6c:	add	r0, sp, #25856	; 0x6500
    3f70:	add	r0, r0, #236	; 0xec
    3f74:	str	r1, [sp, #4]
    3f78:	str	r2, [sp]
    3f7c:	mov	r1, r3
    3f80:	mov	r2, #1
    3f84:	str	r0, [sp, #28]
    3f88:	bl	1668 <__snprintf_chk@plt>
    3f8c:	ldr	r4, [r8, #12]
    3f90:	ldr	r1, [pc, #2452]	; 492c <ippGetInteger@plt+0x31bc>
    3f94:	mov	r2, #10
    3f98:	mov	r0, r4
    3f9c:	add	r1, pc, r1
    3fa0:	bl	1410 <strncmp@plt>
    3fa4:	cmp	r0, #0
    3fa8:	beq	400c <ippGetInteger@plt+0x289c>
    3fac:	ldr	r1, [pc, #2428]	; 4930 <ippGetInteger@plt+0x31c0>
    3fb0:	mov	r2, #11
    3fb4:	add	r1, pc, r1
    3fb8:	mov	r0, r4
    3fbc:	bl	1410 <strncmp@plt>
    3fc0:	cmp	r0, #0
    3fc4:	beq	4784 <ippGetInteger@plt+0x3014>
    3fc8:	ldr	r1, [pc, #2404]	; 4934 <ippGetInteger@plt+0x31c4>
    3fcc:	mov	r2, #9
    3fd0:	add	r1, pc, r1
    3fd4:	mov	r0, r4
    3fd8:	bl	1410 <strncmp@plt>
    3fdc:	cmp	r0, #0
    3fe0:	beq	4790 <ippGetInteger@plt+0x3020>
    3fe4:	ldr	r1, [pc, #2380]	; 4938 <ippGetInteger@plt+0x31c8>
    3fe8:	mov	r0, r4
    3fec:	mov	r2, #10
    3ff0:	add	r1, pc, r1
    3ff4:	bl	1410 <strncmp@plt>
    3ff8:	cmp	r0, #0
    3ffc:	beq	47d8 <ippGetInteger@plt+0x3068>
    4000:	ldr	r2, [pc, #2356]	; 493c <ippGetInteger@plt+0x31cc>
    4004:	add	r2, pc, r2
    4008:	b	4014 <ippGetInteger@plt+0x28a4>
    400c:	ldr	r2, [pc, #2348]	; 4940 <ippGetInteger@plt+0x31d0>
    4010:	add	r2, pc, r2
    4014:	ldr	r3, [sp, #48]	; 0x30
    4018:	ldr	r1, [pc, #2340]	; 4944 <ippGetInteger@plt+0x31d4>
    401c:	sub	r0, r3, #4
    4020:	add	r1, pc, r1
    4024:	mov	r3, #128	; 0x80
    4028:	str	r2, [sp, #4]
    402c:	str	r1, [sp]
    4030:	mov	r2, #1
    4034:	mov	r1, r3
    4038:	str	r0, [sp, #64]	; 0x40
    403c:	bl	1668 <__snprintf_chk@plt>
    4040:	ldr	r2, [pc, #2304]	; 4948 <ippGetInteger@plt+0x31d8>
    4044:	ldr	r1, [r8, #28]
    4048:	add	r2, pc, r2
    404c:	mov	r3, #1024	; 0x400
    4050:	add	r0, sp, #28416	; 0x6f00
    4054:	add	r0, r0, #236	; 0xec
    4058:	str	r1, [sp, #4]
    405c:	str	r2, [sp]
    4060:	mov	r1, r3
    4064:	mov	r2, #1
    4068:	str	r0, [sp, #24]
    406c:	bl	1668 <__snprintf_chk@plt>
    4070:	ldr	r4, [r8, #32]
    4074:	cmp	r4, #0
    4078:	ble	410c <ippGetInteger@plt+0x299c>
    407c:	ldr	r7, [pc, #2248]	; 494c <ippGetInteger@plt+0x31dc>
    4080:	add	r6, sp, #76	; 0x4c
    4084:	add	r7, pc, r7
    4088:	mov	r5, #0
    408c:	ldr	r0, [r8, #36]	; 0x24
    4090:	mvn	r3, #0
    4094:	add	r1, r0, r5, lsl #3
    4098:	mov	r2, #1
    409c:	ldr	ip, [r1, #4]
    40a0:	mov	r1, #256	; 0x100
    40a4:	str	ip, [sp, #8]
    40a8:	ldr	r0, [r0, r5, lsl #3]
    40ac:	str	r7, [sp]
    40b0:	str	r0, [sp, #4]
    40b4:	mov	r0, r6
    40b8:	bl	1668 <__snprintf_chk@plt>
    40bc:	ldrb	r3, [r6, #12]
    40c0:	add	r2, r6, #12
    40c4:	cmp	r3, #0
    40c8:	cmpne	r3, #61	; 0x3d
    40cc:	beq	40f4 <ippGetInteger@plt+0x2984>
    40d0:	sub	r1, r3, #97	; 0x61
    40d4:	cmp	r1, #25
    40d8:	subls	r3, r3, #32
    40dc:	uxtbls	r3, r3
    40e0:	strb	r3, [r2]
    40e4:	ldrb	r3, [r2, #1]!
    40e8:	cmp	r3, #0
    40ec:	cmpne	r3, #61	; 0x3d
    40f0:	bne	40d0 <ippGetInteger@plt+0x2960>
    40f4:	ldr	r4, [r8, #32]
    40f8:	add	r5, r5, #1
    40fc:	cmp	r5, #100	; 0x64
    4100:	cmpne	r4, r5
    4104:	add	r6, r6, #256	; 0x100
    4108:	bgt	408c <ippGetInteger@plt+0x291c>
    410c:	ldr	r3, [pc, #2108]	; 4950 <ippGetInteger@plt+0x31e0>
    4110:	ldr	r2, [sp, #32]
    4114:	add	sl, r4, #7
    4118:	ldr	r3, [r2, r3]
    411c:	ldr	r6, [r3]
    4120:	ldr	r5, [r6]
    4124:	cmp	r5, #0
    4128:	beq	479c <ippGetInteger@plt+0x302c>
    412c:	ldr	fp, [pc, #2080]	; 4954 <ippGetInteger@plt+0x31e4>
    4130:	mov	r7, r6
    4134:	add	fp, pc, fp
    4138:	mov	r0, r5
    413c:	mov	r1, fp
    4140:	mov	r2, #8
    4144:	bl	1410 <strncmp@plt>
    4148:	add	r1, sl, #1
    414c:	cmp	r0, #0
    4150:	ldr	r0, [r7, #4]!
    4154:	addne	r3, sl, #2
    4158:	movne	sl, r1
    415c:	movne	r1, r3
    4160:	cmp	r0, #0
    4164:	bne	413c <ippGetInteger@plt+0x29cc>
    4168:	str	r0, [sp, #44]	; 0x2c
    416c:	mov	r0, #4
    4170:	bl	162c <calloc@plt>
    4174:	subs	fp, r0, #0
    4178:	str	fp, [sp, #40]	; 0x28
    417c:	beq	4814 <ippGetInteger@plt+0x30a4>
    4180:	ldr	r3, [sp, #44]	; 0x2c
    4184:	ldr	r7, [pc, #1996]	; 4958 <ippGetInteger@plt+0x31e8>
    4188:	mov	sl, r3
    418c:	add	r7, pc, r7
    4190:	mov	r2, #8
    4194:	mov	r1, r7
    4198:	mov	r0, r5
    419c:	bl	1410 <strncmp@plt>
    41a0:	lsl	r1, sl, #2
    41a4:	add	r3, r1, #4
    41a8:	add	r3, fp, r3
    41ac:	add	r2, fp, r1
    41b0:	add	ip, sl, #1
    41b4:	cmp	r0, #0
    41b8:	strne	r5, [fp, sl, lsl #2]
    41bc:	ldr	r5, [r6, #4]!
    41c0:	addne	r1, r1, #8
    41c4:	movne	r2, r3
    41c8:	movne	sl, ip
    41cc:	addne	r3, fp, r1
    41d0:	cmp	r5, #0
    41d4:	bne	4190 <ippGetInteger@plt+0x2a20>
    41d8:	add	r1, sl, #2
    41dc:	add	r0, sl, #7
    41e0:	lsl	r1, r1, #2
    41e4:	str	r0, [sp, #44]	; 0x2c
    41e8:	add	ip, r1, #8
    41ec:	add	r0, r1, #4
    41f0:	add	lr, r1, #12
    41f4:	add	r5, r1, #16
    41f8:	ldr	r6, [sp, #16]
    41fc:	cmp	r4, #0
    4200:	str	r6, [r2]
    4204:	ldr	r2, [sp, #56]	; 0x38
    4208:	str	r2, [r3]
    420c:	ldr	r3, [sp, #40]	; 0x28
    4210:	ldr	r2, [sp, #52]	; 0x34
    4214:	str	r2, [r3, r1]
    4218:	ldr	r2, [sp, #60]	; 0x3c
    421c:	str	r2, [r3, r0]
    4220:	ldr	r2, [sp, #28]
    4224:	str	r2, [r3, ip]
    4228:	ldr	r2, [sp, #64]	; 0x40
    422c:	str	r2, [r3, lr]
    4230:	ldr	r2, [sp, #24]
    4234:	str	r2, [r3, r5]
    4238:	ble	4274 <ippGetInteger@plt+0x2b04>
    423c:	ldr	r2, [sp, #44]	; 0x2c
    4240:	sub	r1, r2, #-1073741823	; 0xc0000001
    4244:	add	r0, r2, #1
    4248:	add	r1, r3, r1, lsl #2
    424c:	add	r2, sp, #76	; 0x4c
    4250:	mov	r3, #0
    4254:	add	ip, r0, r3
    4258:	add	r3, r3, #1
    425c:	cmp	r3, #100	; 0x64
    4260:	cmpne	r3, r4
    4264:	str	r2, [r1, #4]!
    4268:	add	r2, r2, #256	; 0x100
    426c:	blt	4254 <ippGetInteger@plt+0x2ae4>
    4270:	str	ip, [sp, #44]	; 0x2c
    4274:	ldr	r4, [sp, #20]
    4278:	mov	r0, #4
    427c:	add	r1, r4, #1
    4280:	bl	162c <calloc@plt>
    4284:	subs	r3, r0, #0
    4288:	str	r3, [sp, #24]
    428c:	beq	47f0 <ippGetInteger@plt+0x3080>
    4290:	cmp	r4, #0
    4294:	ble	47e4 <ippGetInteger@plt+0x3074>
    4298:	add	sl, sp, #26112	; 0x6600
    429c:	add	sl, sl, #240	; 0xf0
    42a0:	ldr	r3, [sp, #36]	; 0x24
    42a4:	add	r5, sp, #29440	; 0x7300
    42a8:	sub	r6, sl, #4
    42ac:	mov	r7, #0
    42b0:	add	r5, r5, #236	; 0xec
    42b4:	sub	r3, r3, #4
    42b8:	str	r3, [sp, #16]
    42bc:	str	sl, [sp, #28]
    42c0:	ldr	r3, [sp, #16]
    42c4:	mov	r1, #123	; 0x7b
    42c8:	ldr	fp, [r3, #4]!
    42cc:	mov	r0, fp
    42d0:	str	r3, [sp, #16]
    42d4:	bl	1740 <strchr@plt>
    42d8:	cmp	r0, #0
    42dc:	beq	46ac <ippGetInteger@plt+0x2f3c>
    42e0:	ldrb	r1, [fp]
    42e4:	mov	sl, r5
    42e8:	cmp	r1, #0
    42ec:	beq	4488 <ippGetInteger@plt+0x2d18>
    42f0:	mov	r2, fp
    42f4:	ldr	fp, [sp, #28]
    42f8:	b	431c <ippGetInteger@plt+0x2bac>
    42fc:	add	r3, r5, #2032	; 0x7f0
    4300:	add	r3, r3, #15
    4304:	cmp	sl, r3
    4308:	strbcc	r1, [sl], #1
    430c:	ldrb	r1, [r2, #1]
    4310:	mov	r2, r4
    4314:	cmp	r1, #0
    4318:	beq	4488 <ippGetInteger@plt+0x2d18>
    431c:	cmp	r1, #123	; 0x7b
    4320:	add	r4, r2, #1
    4324:	bne	42fc <ippGetInteger@plt+0x2b8c>
    4328:	ldrb	r2, [r2, #1]
    432c:	mov	r3, r6
    4330:	cmp	r2, #125	; 0x7d
    4334:	cmpne	r2, #0
    4338:	beq	4358 <ippGetInteger@plt+0x2be8>
    433c:	add	r1, fp, #251	; 0xfb
    4340:	cmp	r3, r1
    4344:	strbcc	r2, [r3], #1
    4348:	ldrb	r2, [r4, #1]!
    434c:	cmp	r2, #0
    4350:	cmpne	r2, #125	; 0x7d
    4354:	bne	4340 <ippGetInteger@plt+0x2bd0>
    4358:	cmp	r2, #125	; 0x7d
    435c:	bne	4890 <ippGetInteger@plt+0x3120>
    4360:	mov	r2, #0
    4364:	strb	r2, [r3]
    4368:	ldrb	r3, [r9, #-1284]	; 0xfffffafc
    436c:	cmp	r3, r2
    4370:	beq	4694 <ippGetInteger@plt+0x2f24>
    4374:	ldr	r1, [pc, #1504]	; 495c <ippGetInteger@plt+0x31ec>
    4378:	mov	r0, r6
    437c:	add	r1, pc, r1
    4380:	bl	16a4 <strcmp@plt>
    4384:	cmp	r0, #0
    4388:	beq	4694 <ippGetInteger@plt+0x2f24>
    438c:	ldr	r1, [pc, #1484]	; 4960 <ippGetInteger@plt+0x31f0>
    4390:	mov	r0, r6
    4394:	add	r1, pc, r1
    4398:	bl	16a4 <strcmp@plt>
    439c:	cmp	r0, #0
    43a0:	beq	46c0 <ippGetInteger@plt+0x2f50>
    43a4:	ldr	r1, [pc, #1464]	; 4964 <ippGetInteger@plt+0x31f4>
    43a8:	mov	r0, r6
    43ac:	add	r1, pc, r1
    43b0:	bl	16a4 <strcmp@plt>
    43b4:	cmp	r0, #0
    43b8:	beq	46d8 <ippGetInteger@plt+0x2f68>
    43bc:	ldr	r1, [pc, #1444]	; 4968 <ippGetInteger@plt+0x31f8>
    43c0:	mov	r0, r6
    43c4:	add	r1, pc, r1
    43c8:	bl	16a4 <strcmp@plt>
    43cc:	cmp	r0, #0
    43d0:	beq	46f0 <ippGetInteger@plt+0x2f80>
    43d4:	ldr	r1, [pc, #1424]	; 496c <ippGetInteger@plt+0x31fc>
    43d8:	mov	r0, r6
    43dc:	add	r1, pc, r1
    43e0:	bl	16a4 <strcmp@plt>
    43e4:	cmp	r0, #0
    43e8:	beq	4708 <ippGetInteger@plt+0x2f98>
    43ec:	ldr	r1, [pc, #1404]	; 4970 <ippGetInteger@plt+0x3200>
    43f0:	mov	r0, r6
    43f4:	add	r1, pc, r1
    43f8:	bl	16a4 <strcmp@plt>
    43fc:	cmp	r0, #0
    4400:	beq	4720 <ippGetInteger@plt+0x2fb0>
    4404:	ldr	r1, [pc, #1384]	; 4974 <ippGetInteger@plt+0x3204>
    4408:	mov	r0, r6
    440c:	add	r1, pc, r1
    4410:	bl	16a4 <strcmp@plt>
    4414:	cmp	r0, #0
    4418:	beq	473c <ippGetInteger@plt+0x2fcc>
    441c:	ldr	r1, [pc, #1364]	; 4978 <ippGetInteger@plt+0x3208>
    4420:	mov	r2, #4
    4424:	add	r1, pc, r1
    4428:	mov	r0, r6
    442c:	bl	1410 <strncmp@plt>
    4430:	cmp	r0, #0
    4434:	bne	4864 <ippGetInteger@plt+0x30f4>
    4438:	ldr	r1, [r8, #32]
    443c:	ldr	r2, [r8, #36]	; 0x24
    4440:	mov	r0, fp
    4444:	bl	1440 <cupsGetOption@plt>
    4448:	subs	r1, r0, #0
    444c:	strbeq	r1, [sl]
    4450:	beq	4464 <ippGetInteger@plt+0x2cf4>
    4454:	sub	r3, sl, r5
    4458:	rsb	r2, r3, #2048	; 0x800
    445c:	mov	r0, sl
    4460:	bl	1674 <_cups_strlcpy@plt>
    4464:	mov	r0, sl
    4468:	bl	165c <strlen@plt>
    446c:	mov	r2, r4
    4470:	add	r4, r4, #1
    4474:	ldrb	r1, [r2, #1]
    4478:	mov	r2, r4
    447c:	cmp	r1, #0
    4480:	add	sl, sl, r0
    4484:	bne	431c <ippGetInteger@plt+0x2bac>
    4488:	mov	r2, #0
    448c:	strb	r2, [sl]
    4490:	mov	r0, r5
    4494:	bl	1758 <strdup@plt>
    4498:	ldr	r3, [sp, #24]
    449c:	str	r0, [r3, r7, lsl #2]
    44a0:	ldr	r3, [sp, #20]
    44a4:	add	r7, r7, #1
    44a8:	cmp	r3, r7
    44ac:	bne	42c0 <ippGetInteger@plt+0x2b50>
    44b0:	ldr	r3, [sp, #36]	; 0x24
    44b4:	mov	r1, #47	; 0x2f
    44b8:	ldr	r4, [r3]
    44bc:	mov	r0, r4
    44c0:	bl	1740 <strchr@plt>
    44c4:	cmp	r0, #0
    44c8:	beq	44e8 <ippGetInteger@plt+0x2d78>
    44cc:	mov	r0, r4
    44d0:	mov	r1, #1
    44d4:	bl	15f0 <access@plt>
    44d8:	cmp	r0, #0
    44dc:	beq	476c <ippGetInteger@plt+0x2ffc>
    44e0:	ldr	r3, [sp, #36]	; 0x24
    44e4:	ldr	r4, [r3]
    44e8:	ldr	r0, [pc, #1164]	; 497c <ippGetInteger@plt+0x320c>
    44ec:	add	r0, pc, r0
    44f0:	bl	171c <getenv@plt>
    44f4:	mov	r3, #1024	; 0x400
    44f8:	str	r3, [sp]
    44fc:	mov	r2, #1
    4500:	mov	r3, r5
    4504:	mov	r1, r0
    4508:	mov	r0, r4
    450c:	bl	1608 <cupsFileFind@plt>
    4510:	cmp	r0, #0
    4514:	beq	4824 <ippGetInteger@plt+0x30b4>
    4518:	ldr	r0, [pc, #1120]	; 4980 <ippGetInteger@plt+0x3210>
    451c:	add	r0, pc, r0
    4520:	bl	171c <getenv@plt>
    4524:	cmp	r0, #0
    4528:	beq	45c4 <ippGetInteger@plt+0x2e54>
    452c:	ldr	r1, [pc, #1104]	; 4984 <ippGetInteger@plt+0x3214>
    4530:	mov	r2, r5
    4534:	add	r1, pc, r1
    4538:	mov	r0, #1
    453c:	bl	1764 <__printf_chk@plt>
    4540:	ldr	r0, [pc, #1088]	; 4988 <ippGetInteger@plt+0x3218>
    4544:	add	r0, pc, r0
    4548:	bl	1488 <puts@plt>
    454c:	ldr	r3, [sp, #20]
    4550:	cmp	r3, #0
    4554:	ble	4588 <ippGetInteger@plt+0x2e18>
    4558:	ldrd	r2, [sp, #20]
    455c:	ldr	r6, [pc, #1064]	; 498c <ippGetInteger@plt+0x321c>
    4560:	add	r4, r3, r2, lsl #2
    4564:	add	r6, pc, r6
    4568:	sub	r4, r4, #4
    456c:	sub	r7, r3, #4
    4570:	ldr	r2, [r7, #4]!
    4574:	mov	r1, r6
    4578:	mov	r0, #1
    457c:	bl	1764 <__printf_chk@plt>
    4580:	cmp	r4, r7
    4584:	bne	4570 <ippGetInteger@plt+0x2e00>
    4588:	ldr	r0, [pc, #1024]	; 4990 <ippGetInteger@plt+0x3220>
    458c:	ldr	r3, [sp, #40]	; 0x28
    4590:	add	r0, pc, r0
    4594:	sub	r7, r3, #4
    4598:	bl	1488 <puts@plt>
    459c:	ldr	r3, [sp, #44]	; 0x2c
    45a0:	ldr	r4, [pc, #1004]	; 4994 <ippGetInteger@plt+0x3224>
    45a4:	add	r6, r7, r3, lsl #2
    45a8:	add	r4, pc, r4
    45ac:	ldr	r2, [r7, #4]!
    45b0:	mov	r1, r4
    45b4:	mov	r0, #1
    45b8:	bl	1764 <__printf_chk@plt>
    45bc:	cmp	r6, r7
    45c0:	bne	45ac <ippGetInteger@plt+0x2e3c>
    45c4:	bl	15e4 <fork@plt>
    45c8:	subs	r4, r0, #0
    45cc:	beq	48f8 <ippGetInteger@plt+0x3188>
    45d0:	blt	48b4 <ippGetInteger@plt+0x3144>
    45d4:	add	r5, sp, #72	; 0x48
    45d8:	mov	r0, r5
    45dc:	bl	144c <wait@plt>
    45e0:	cmp	r0, r4
    45e4:	bne	45d8 <ippGetInteger@plt+0x2e68>
    45e8:	ldr	r3, [sp, #20]
    45ec:	cmp	r3, #0
    45f0:	ble	4614 <ippGetInteger@plt+0x2ea4>
    45f4:	ldrd	r2, [sp, #20]
    45f8:	add	r5, r3, r2, lsl #2
    45fc:	sub	r5, r5, #4
    4600:	sub	r4, r3, #4
    4604:	ldr	r0, [r4, #4]!
    4608:	bl	13ec <free@plt>
    460c:	cmp	r4, r5
    4610:	bne	4604 <ippGetInteger@plt+0x2e94>
    4614:	ldr	r0, [sp, #24]
    4618:	bl	13ec <free@plt>
    461c:	ldr	r0, [sp, #40]	; 0x28
    4620:	bl	13ec <free@plt>
    4624:	ldr	r0, [pc, #876]	; 4998 <ippGetInteger@plt+0x3228>
    4628:	add	r4, sp, #3056	; 0xbf0
    462c:	add	r0, pc, r0
    4630:	bl	171c <getenv@plt>
    4634:	cmp	r0, #0
    4638:	beq	4660 <ippGetInteger@plt+0x2ef0>
    463c:	ldr	r3, [r4, #-2984]	; 0xfffff458
    4640:	ands	r2, r3, #127	; 0x7f
    4644:	bne	4758 <ippGetInteger@plt+0x2fe8>
    4648:	asr	r3, r3, #8
    464c:	ldr	r1, [pc, #840]	; 499c <ippGetInteger@plt+0x322c>
    4650:	uxtb	r2, r3
    4654:	add	r1, pc, r1
    4658:	mov	r0, #1
    465c:	bl	1764 <__printf_chk@plt>
    4660:	add	r3, sp, #31488	; 0x7b00
    4664:	add	r3, r3, #236	; 0xec
    4668:	ldr	r2, [r3]
    466c:	ldr	r3, [sp, #68]	; 0x44
    4670:	ldr	r0, [r4, #-2984]	; 0xfffff458
    4674:	clz	r0, r0
    4678:	ldr	r3, [r3]
    467c:	lsr	r0, r0, #5
    4680:	cmp	r2, r3
    4684:	bne	488c <ippGetInteger@plt+0x311c>
    4688:	add	sp, sp, #31488	; 0x7b00
    468c:	add	sp, sp, #244	; 0xf4
    4690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4694:	sub	r2, sl, r5
    4698:	rsb	r2, r2, #2048	; 0x800
    469c:	ldr	r1, [r8, #28]
    46a0:	mov	r0, sl
    46a4:	bl	1674 <_cups_strlcpy@plt>
    46a8:	b	4464 <ippGetInteger@plt+0x2cf4>
    46ac:	mov	r0, fp
    46b0:	bl	1758 <strdup@plt>
    46b4:	ldr	r3, [sp, #24]
    46b8:	str	r0, [r3, r7, lsl #2]
    46bc:	b	44a0 <ippGetInteger@plt+0x2d30>
    46c0:	sub	r2, sl, r5
    46c4:	rsb	r2, r2, #2048	; 0x800
    46c8:	ldr	r1, [r8, #8]
    46cc:	mov	r0, sl
    46d0:	bl	1674 <_cups_strlcpy@plt>
    46d4:	b	4464 <ippGetInteger@plt+0x2cf4>
    46d8:	sub	r2, sl, r5
    46dc:	rsb	r2, r2, #2048	; 0x800
    46e0:	ldr	r1, [r8, #20]
    46e4:	mov	r0, sl
    46e8:	bl	1674 <_cups_strlcpy@plt>
    46ec:	b	4464 <ippGetInteger@plt+0x2cf4>
    46f0:	sub	r2, sl, r5
    46f4:	rsb	r2, r2, #2048	; 0x800
    46f8:	ldr	r1, [r8, #4]
    46fc:	mov	r0, sl
    4700:	bl	1674 <_cups_strlcpy@plt>
    4704:	b	4464 <ippGetInteger@plt+0x2cf4>
    4708:	sub	r2, sl, r5
    470c:	rsb	r2, r2, #2048	; 0x800
    4710:	ldr	r1, [r8, #24]
    4714:	mov	r0, sl
    4718:	bl	1674 <_cups_strlcpy@plt>
    471c:	b	4464 <ippGetInteger@plt+0x2cf4>
    4720:	ldr	r3, [sp, #48]	; 0x30
    4724:	sub	r2, sl, r5
    4728:	rsb	r2, r2, #2048	; 0x800
    472c:	sub	r1, r3, #15
    4730:	mov	r0, sl
    4734:	bl	1674 <_cups_strlcpy@plt>
    4738:	b	4464 <ippGetInteger@plt+0x2cf4>
    473c:	ldr	r3, [sp, #48]	; 0x30
    4740:	sub	r2, sl, r5
    4744:	rsb	r2, r2, #2048	; 0x800
    4748:	add	r1, r3, #18
    474c:	mov	r0, sl
    4750:	bl	1674 <_cups_strlcpy@plt>
    4754:	b	4464 <ippGetInteger@plt+0x2cf4>
    4758:	ldr	r1, [pc, #576]	; 49a0 <ippGetInteger@plt+0x3230>
    475c:	mov	r0, #1
    4760:	add	r1, pc, r1
    4764:	bl	1764 <__printf_chk@plt>
    4768:	b	4660 <ippGetInteger@plt+0x2ef0>
    476c:	ldr	r3, [sp, #36]	; 0x24
    4770:	mov	r2, #1024	; 0x400
    4774:	mov	r0, r5
    4778:	ldr	r1, [r3]
    477c:	bl	1674 <_cups_strlcpy@plt>
    4780:	b	4518 <ippGetInteger@plt+0x2da8>
    4784:	ldr	r2, [pc, #536]	; 49a4 <ippGetInteger@plt+0x3234>
    4788:	add	r2, pc, r2
    478c:	b	4014 <ippGetInteger@plt+0x28a4>
    4790:	ldr	r2, [pc, #528]	; 49a8 <ippGetInteger@plt+0x3238>
    4794:	add	r2, pc, r2
    4798:	b	4014 <ippGetInteger@plt+0x28a4>
    479c:	add	r1, r4, #8
    47a0:	mov	r0, #4
    47a4:	bl	162c <calloc@plt>
    47a8:	subs	r2, r0, #0
    47ac:	str	r2, [sp, #40]	; 0x28
    47b0:	beq	4814 <ippGetInteger@plt+0x30a4>
    47b4:	mov	r1, #7
    47b8:	str	r1, [sp, #44]	; 0x2c
    47bc:	add	r3, r2, #4
    47c0:	mov	r5, #24
    47c4:	mov	lr, #20
    47c8:	mov	ip, #16
    47cc:	mov	r0, #12
    47d0:	mov	r1, #8
    47d4:	b	41f8 <ippGetInteger@plt+0x2a88>
    47d8:	ldr	r2, [pc, #460]	; 49ac <ippGetInteger@plt+0x323c>
    47dc:	add	r2, pc, r2
    47e0:	b	4014 <ippGetInteger@plt+0x28a4>
    47e4:	add	r5, sp, #29440	; 0x7300
    47e8:	add	r5, r5, #236	; 0xec
    47ec:	b	44b0 <ippGetInteger@plt+0x2d40>
    47f0:	ldr	r1, [pc, #440]	; 49b0 <ippGetInteger@plt+0x3240>
    47f4:	ldr	r3, [pc, #440]	; 49b4 <ippGetInteger@plt+0x3244>
    47f8:	add	r1, pc, r1
    47fc:	ldr	r2, [sp, #32]
    4800:	ldr	r3, [r2, r3]
    4804:	ldr	r0, [r3]
    4808:	bl	1434 <_cupsLangPuts@plt>
    480c:	mov	r0, #4
    4810:	bl	1464 <exit@plt>
    4814:	ldr	r1, [pc, #412]	; 49b8 <ippGetInteger@plt+0x3248>
    4818:	ldr	r3, [pc, #404]	; 49b4 <ippGetInteger@plt+0x3244>
    481c:	add	r1, pc, r1
    4820:	b	47fc <ippGetInteger@plt+0x308c>
    4824:	ldr	r2, [sp, #36]	; 0x24
    4828:	ldr	r3, [pc, #388]	; 49b4 <ippGetInteger@plt+0x3244>
    482c:	mov	r0, #2
    4830:	ldr	r5, [r2]
    4834:	ldr	r2, [sp, #32]
    4838:	ldr	r3, [r2, r3]
    483c:	ldr	r4, [r3]
    4840:	bl	1470 <strerror@plt>
    4844:	ldr	r1, [pc, #368]	; 49bc <ippGetInteger@plt+0x324c>
    4848:	mov	r2, r5
    484c:	add	r1, pc, r1
    4850:	mov	r3, r0
    4854:	mov	r0, r4
    4858:	bl	1404 <_cupsLangPrintf@plt>
    485c:	mov	r0, #3
    4860:	bl	1464 <exit@plt>
    4864:	ldr	r0, [sp, #32]
    4868:	ldr	r3, [pc, #324]	; 49b4 <ippGetInteger@plt+0x3244>
    486c:	ldr	r1, [pc, #332]	; 49c0 <ippGetInteger@plt+0x3250>
    4870:	mov	r2, r6
    4874:	ldr	r3, [r0, r3]
    4878:	add	r1, pc, r1
    487c:	ldr	r0, [r3]
    4880:	bl	1404 <_cupsLangPrintf@plt>
    4884:	mov	r0, #3
    4888:	bl	1464 <exit@plt>
    488c:	bl	15d8 <__stack_chk_fail@plt>
    4890:	ldr	r2, [sp, #32]
    4894:	ldr	r3, [pc, #280]	; 49b4 <ippGetInteger@plt+0x3244>
    4898:	ldr	r1, [pc, #292]	; 49c4 <ippGetInteger@plt+0x3254>
    489c:	ldr	r3, [r2, r3]
    48a0:	add	r1, pc, r1
    48a4:	ldr	r0, [r3]
    48a8:	bl	1434 <_cupsLangPuts@plt>
    48ac:	mov	r0, #3
    48b0:	bl	1464 <exit@plt>
    48b4:	ldr	r2, [sp, #36]	; 0x24
    48b8:	ldr	r3, [pc, #244]	; 49b4 <ippGetInteger@plt+0x3244>
    48bc:	ldr	r5, [r2]
    48c0:	ldr	r2, [sp, #32]
    48c4:	ldr	r3, [r2, r3]
    48c8:	ldr	r4, [r3]
    48cc:	bl	16c8 <__errno_location@plt>
    48d0:	ldr	r0, [r0]
    48d4:	bl	1470 <strerror@plt>
    48d8:	ldr	r1, [pc, #232]	; 49c8 <ippGetInteger@plt+0x3258>
    48dc:	mov	r2, r5
    48e0:	add	r1, pc, r1
    48e4:	mov	r3, r0
    48e8:	mov	r0, r4
    48ec:	bl	1404 <_cupsLangPrintf@plt>
    48f0:	mov	r0, #3
    48f4:	bl	1464 <exit@plt>
    48f8:	ldr	r2, [sp, #40]	; 0x28
    48fc:	ldr	r1, [sp, #24]
    4900:	mov	r0, r5
    4904:	bl	150c <execve@plt>
    4908:	mov	r0, #1
    490c:	bl	1464 <exit@plt>
    4910:	andeq	r4, r1, r0
    4914:	andeq	r0, r0, ip, ror #2
    4918:	andeq	r2, r0, ip, asr #21
    491c:	muleq	r0, r0, sl
    4920:	andeq	r2, r0, ip, ror sl
    4924:	andeq	r2, r0, r8, asr sl
    4928:	andeq	r2, r0, r0, asr #20
    492c:	andeq	r2, r0, r8, lsr #20
    4930:	andeq	r2, r0, ip, lsl sl
    4934:	andeq	r2, r0, ip, lsl #20
    4938:	strdeq	r2, [r0], -r8
    493c:	andeq	r2, r0, r8, lsr r9
    4940:	andeq	r2, r0, r4, lsr #18
    4944:	ldrdeq	r2, [r0], -r4
    4948:	andeq	r2, r0, r8, asr #19
    494c:	andeq	r2, r0, r4, lsr #19
    4950:	andeq	r0, r0, r8, ror r1
    4954:	andeq	r2, r0, r8, lsl #18
    4958:			; <UNDEFINED> instruction: 0x000028b0
    495c:	andeq	r2, r0, r4, lsl r7
    4960:	andeq	r2, r0, r8, lsl #14
    4964:	andeq	r2, r0, r0, lsl #14
    4968:	strdeq	r2, [r0], -ip
    496c:	strdeq	r2, [r0], -r4
    4970:	andeq	r2, r0, ip, ror #13
    4974:	andeq	r2, r0, r4, ror #13
    4978:	ldrdeq	r2, [r0], -ip
    497c:	andeq	r2, r0, r0, asr #12
    4980:	andeq	r2, r0, ip, lsr r6
    4984:	andeq	r2, r0, r4, lsr r6
    4988:	andeq	r2, r0, r8, lsr r6
    498c:	andeq	r2, r0, r4, lsr r6
    4990:	strdeq	r2, [r0], -r8
    4994:	strdeq	r2, [r0], -r0
    4998:	andeq	r2, r0, ip, lsr #10
    499c:	andeq	r2, r0, ip, asr #10
    49a0:	andeq	r2, r0, r4, asr r4
    49a4:	muleq	r0, r8, r1
    49a8:	muleq	r0, ip, r1
    49ac:	andeq	r2, r0, ip, asr #2
    49b0:	andeq	r2, r0, r0, asr r2
    49b4:	andeq	r0, r0, r4, ror r1
    49b8:	andeq	r2, r0, ip, lsr #4
    49bc:	andeq	r2, r0, r8, ror #5
    49c0:	muleq	r0, r0, r2
    49c4:	andeq	r2, r0, r0, asr #3
    49c8:	andeq	r2, r0, r4, asr r2
    49cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    49d0:	sub	sp, sp, #1088	; 0x440
    49d4:	ldr	r4, [pc, #1704]	; 5084 <ippGetInteger@plt+0x3914>
    49d8:	ldr	r3, [pc, #1704]	; 5088 <ippGetInteger@plt+0x3918>
    49dc:	sub	sp, sp, #4
    49e0:	add	r4, pc, r4
    49e4:	str	r4, [sp, #24]
    49e8:	ldr	r3, [r4, r3]
    49ec:	ldr	r2, [pc, #1688]	; 508c <ippGetInteger@plt+0x391c>
    49f0:	ldr	r7, [pc, #1688]	; 5090 <ippGetInteger@plt+0x3920>
    49f4:	ldr	r1, [r0, #40]	; 0x28
    49f8:	ldr	ip, [r3]
    49fc:	mov	r6, r0
    4a00:	add	r2, pc, r2
    4a04:	str	r3, [sp, #20]
    4a08:	add	r5, sp, #48	; 0x30
    4a0c:	mov	r3, #10
    4a10:	add	r7, pc, r7
    4a14:	str	r1, [sp, #4]
    4a18:	str	r2, [sp]
    4a1c:	mov	r1, r3
    4a20:	mov	r2, #1
    4a24:	mov	r0, r5
    4a28:	str	ip, [sp, #1084]	; 0x43c
    4a2c:	bl	1668 <__snprintf_chk@plt>
    4a30:	mov	r2, r5
    4a34:	ldr	r0, [r6, #20]
    4a38:	ldr	r1, [r7, #4]
    4a3c:	bl	1524 <httpAddrGetList@plt>
    4a40:	subs	r8, r0, #0
    4a44:	beq	4f74 <ippGetInteger@plt+0x3804>
    4a48:	ldr	r4, [r6, #12]
    4a4c:	ldr	r1, [pc, #1600]	; 5094 <ippGetInteger@plt+0x3924>
    4a50:	mov	r2, #9
    4a54:	add	r1, pc, r1
    4a58:	mov	r0, r4
    4a5c:	bl	1410 <strncmp@plt>
    4a60:	ldr	r1, [pc, #1584]	; 5098 <ippGetInteger@plt+0x3928>
    4a64:	mov	r2, #10
    4a68:	add	r1, pc, r1
    4a6c:	mov	r9, r0
    4a70:	mov	r0, r4
    4a74:	bl	1410 <strncmp@plt>
    4a78:	cmp	r9, #0
    4a7c:	beq	4bc8 <ippGetInteger@plt+0x3458>
    4a80:	cmp	r0, #0
    4a84:	bne	4dc8 <ippGetInteger@plt+0x3658>
    4a88:	ldr	r3, [r7, #4]
    4a8c:	ldr	r0, [r6, #20]
    4a90:	ldr	r1, [r6, #40]	; 0x28
    4a94:	mov	r2, #3
    4a98:	ldr	lr, [pc, #1532]	; 509c <ippGetInteger@plt+0x392c>
    4a9c:	mov	ip, #0
    4aa0:	str	r2, [sp]
    4aa4:	mov	r2, #1
    4aa8:	str	lr, [sp, #8]
    4aac:	str	ip, [sp, #12]
    4ab0:	str	r2, [sp, #4]
    4ab4:	mov	r2, r8
    4ab8:	bl	14a0 <httpConnect2@plt>
    4abc:	mov	r4, r0
    4ac0:	str	r0, [sp, #16]
    4ac4:	mov	r0, r8
    4ac8:	bl	135c <httpAddrFreeList@plt>
    4acc:	cmp	r4, #0
    4ad0:	beq	4f9c <ippGetInteger@plt+0x382c>
    4ad4:	ldr	r3, [pc, #1476]	; 50a0 <ippGetInteger@plt+0x3930>
    4ad8:	ldr	r7, [pc, #1476]	; 50a4 <ippGetInteger@plt+0x3934>
    4adc:	add	r3, pc, r3
    4ae0:	ldr	sl, [pc, #1472]	; 50a8 <ippGetInteger@plt+0x3938>
    4ae4:	ldr	fp, [r3]
    4ae8:	ldr	r9, [pc, #1468]	; 50ac <ippGetInteger@plt+0x393c>
    4aec:	add	sl, pc, sl
    4af0:	smull	r2, r3, r7, fp
    4af4:	asr	r7, fp, #31
    4af8:	rsb	r7, r7, r3, asr #2
    4afc:	add	r9, pc, r9
    4b00:	add	r8, r7, r7, lsl #2
    4b04:	sub	r8, fp, r8, lsl #1
    4b08:	mov	r0, #11
    4b0c:	bl	1614 <ippNewRequest@plt>
    4b10:	mov	r2, r8
    4b14:	mov	r1, r7
    4b18:	mov	r5, #0
    4b1c:	mov	r4, r0
    4b20:	bl	1584 <ippSetVersion@plt>
    4b24:	ldr	r3, [r6, #28]
    4b28:	mov	r2, #69	; 0x45
    4b2c:	mov	r1, #1
    4b30:	mov	r0, r4
    4b34:	str	r3, [sp, #4]
    4b38:	str	r5, [sp]
    4b3c:	mov	r3, sl
    4b40:	bl	1530 <ippAddString@plt>
    4b44:	bl	15c0 <cupsUser@plt>
    4b48:	mov	r3, r9
    4b4c:	mov	r2, #66	; 0x42
    4b50:	mov	r1, #1
    4b54:	str	r5, [sp]
    4b58:	str	r0, [sp, #4]
    4b5c:	mov	r0, r4
    4b60:	bl	1530 <ippAddString@plt>
    4b64:	ldr	r3, [pc, #1348]	; 50b0 <ippGetInteger@plt+0x3940>
    4b68:	mov	r2, #3
    4b6c:	add	r3, pc, r3
    4b70:	str	r3, [sp, #8]
    4b74:	ldr	r3, [pc, #1336]	; 50b4 <ippGetInteger@plt+0x3944>
    4b78:	mov	r0, r4
    4b7c:	add	r3, pc, r3
    4b80:	str	r2, [sp]
    4b84:	mov	r1, #1
    4b88:	mov	r2, #68	; 0x44
    4b8c:	str	r5, [sp, #4]
    4b90:	bl	1710 <ippAddStrings@plt>
    4b94:	mov	r1, r4
    4b98:	ldr	r2, [r6, #24]
    4b9c:	ldr	r0, [sp, #16]
    4ba0:	bl	147c <cupsDoRequest@plt>
    4ba4:	mov	r4, r0
    4ba8:	bl	1578 <cupsLastError@plt>
    4bac:	cmp	r0, #1024	; 0x400
    4bb0:	beq	4be4 <ippGetInteger@plt+0x3474>
    4bb4:	bl	1578 <cupsLastError@plt>
    4bb8:	cmp	r0, #7
    4bbc:	cmpgt	fp, #11
    4bc0:	bgt	4b08 <ippGetInteger@plt+0x3398>
    4bc4:	b	4be8 <ippGetInteger@plt+0x3478>
    4bc8:	cmp	r0, #0
    4bcc:	ldr	r3, [r7, #4]
    4bd0:	ldr	r0, [r6, #20]
    4bd4:	ldr	r1, [r6, #40]	; 0x28
    4bd8:	moveq	r2, #3
    4bdc:	movne	r2, #0
    4be0:	b	4a98 <ippGetInteger@plt+0x3328>
    4be4:	bl	1578 <cupsLastError@plt>
    4be8:	bl	1578 <cupsLastError@plt>
    4bec:	cmp	r0, #7
    4bf0:	bgt	4e6c <ippGetInteger@plt+0x36fc>
    4bf4:	ldr	r1, [pc, #1212]	; 50b8 <ippGetInteger@plt+0x3948>
    4bf8:	mov	r2, #35	; 0x23
    4bfc:	add	r1, pc, r1
    4c00:	mov	r0, r4
    4c04:	bl	15b4 <ippFindAttribute@plt>
    4c08:	cmp	r0, #0
    4c0c:	moveq	r3, #5
    4c10:	streq	r3, [sp, #32]
    4c14:	beq	4c24 <ippGetInteger@plt+0x34b4>
    4c18:	mov	r1, #0
    4c1c:	bl	1770 <ippGetInteger@plt>
    4c20:	str	r0, [sp, #32]
    4c24:	ldr	r1, [pc, #1168]	; 50bc <ippGetInteger@plt+0x394c>
    4c28:	mov	r2, #34	; 0x22
    4c2c:	add	r1, pc, r1
    4c30:	mov	r0, r4
    4c34:	bl	15b4 <ippFindAttribute@plt>
    4c38:	subs	r3, r0, #0
    4c3c:	streq	r3, [sp, #36]	; 0x24
    4c40:	beq	4c50 <ippGetInteger@plt+0x34e0>
    4c44:	mov	r1, #0
    4c48:	bl	156c <ippGetBoolean@plt>
    4c4c:	str	r0, [sp, #36]	; 0x24
    4c50:	ldr	r1, [pc, #1128]	; 50c0 <ippGetInteger@plt+0x3950>
    4c54:	mov	r2, #68	; 0x44
    4c58:	add	r1, pc, r1
    4c5c:	mov	r0, r4
    4c60:	bl	15b4 <ippFindAttribute@plt>
    4c64:	subs	r8, r0, #0
    4c68:	beq	4f54 <ippGetInteger@plt+0x37e4>
    4c6c:	mov	r2, #0
    4c70:	mov	r1, r2
    4c74:	bl	1398 <ippGetString@plt>
    4c78:	add	r3, sp, #60	; 0x3c
    4c7c:	mov	r2, #1024	; 0x400
    4c80:	mov	r5, r3
    4c84:	str	r3, [sp, #28]
    4c88:	mov	r1, r0
    4c8c:	mov	r0, r3
    4c90:	bl	1674 <_cups_strlcpy@plt>
    4c94:	mov	r0, r8
    4c98:	bl	1458 <ippGetCount@plt>
    4c9c:	mov	r9, r0
    4ca0:	mov	r0, r5
    4ca4:	bl	165c <strlen@plt>
    4ca8:	add	r2, sp, #1072	; 0x430
    4cac:	mov	r3, r5
    4cb0:	add	r2, r2, #11
    4cb4:	add	r5, r5, r0
    4cb8:	cmp	r5, r2
    4cbc:	movcs	r3, #0
    4cc0:	movcc	r3, #1
    4cc4:	cmp	r9, #1
    4cc8:	movle	r3, #0
    4ccc:	cmp	r3, #0
    4cd0:	beq	4d34 <ippGetInteger@plt+0x35c4>
    4cd4:	mov	sl, #1
    4cd8:	mov	fp, #44	; 0x2c
    4cdc:	mov	r7, r2
    4ce0:	strb	fp, [r5], #1
    4ce4:	mov	r1, sl
    4ce8:	mov	r2, #0
    4cec:	mov	r0, r8
    4cf0:	bl	1398 <ippGetString@plt>
    4cf4:	sub	r2, r7, r5
    4cf8:	add	r2, r2, #1
    4cfc:	add	sl, sl, #1
    4d00:	mov	r1, r0
    4d04:	mov	r0, r5
    4d08:	bl	1674 <_cups_strlcpy@plt>
    4d0c:	mov	r0, r5
    4d10:	bl	165c <strlen@plt>
    4d14:	cmp	r9, sl
    4d18:	movle	r3, #0
    4d1c:	movgt	r3, #1
    4d20:	add	r5, r5, r0
    4d24:	cmp	r5, r7
    4d28:	movcs	r3, #0
    4d2c:	cmp	r3, #0
    4d30:	bne	4ce0 <ippGetInteger@plt+0x3570>
    4d34:	mov	r0, r4
    4d38:	bl	13f8 <ippDelete@plt>
    4d3c:	ldr	r0, [sp, #16]
    4d40:	bl	1698 <httpClose@plt>
    4d44:	ldr	r2, [sp, #24]
    4d48:	ldr	r3, [pc, #884]	; 50c4 <ippGetInteger@plt+0x3954>
    4d4c:	ldr	r0, [pc, #884]	; 50c8 <ippGetInteger@plt+0x3958>
    4d50:	ldr	r1, [sp, #32]
    4d54:	ldr	r3, [r2, r3]
    4d58:	add	r0, pc, r0
    4d5c:	ldr	r5, [r6, #28]
    4d60:	ldr	r4, [r3]
    4d64:	bl	14ac <ippEnumString@plt>
    4d68:	ldr	r2, [sp, #36]	; 0x24
    4d6c:	cmp	r2, #0
    4d70:	mov	r3, r0
    4d74:	bne	4e94 <ippGetInteger@plt+0x3724>
    4d78:	ldr	r2, [pc, #844]	; 50cc <ippGetInteger@plt+0x395c>
    4d7c:	add	r2, pc, r2
    4d80:	ldr	r1, [sp, #28]
    4d84:	str	r2, [sp]
    4d88:	str	r1, [sp, #4]
    4d8c:	ldr	r1, [pc, #828]	; 50d0 <ippGetInteger@plt+0x3960>
    4d90:	mov	r0, r4
    4d94:	mov	r2, r5
    4d98:	add	r1, pc, r1
    4d9c:	bl	1404 <_cupsLangPrintf@plt>
    4da0:	mov	r4, #1
    4da4:	ldr	r3, [sp, #20]
    4da8:	ldr	r2, [sp, #1084]	; 0x43c
    4dac:	mov	r0, r4
    4db0:	ldr	r3, [r3]
    4db4:	cmp	r2, r3
    4db8:	bne	5080 <ippGetInteger@plt+0x3910>
    4dbc:	add	sp, sp, #1088	; 0x440
    4dc0:	add	sp, sp, #4
    4dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4dc8:	ldr	r1, [pc, #772]	; 50d4 <ippGetInteger@plt+0x3964>
    4dcc:	mov	r2, #10
    4dd0:	add	r1, pc, r1
    4dd4:	mov	r0, r4
    4dd8:	bl	1410 <strncmp@plt>
    4ddc:	cmp	r0, #0
    4de0:	beq	4ea0 <ippGetInteger@plt+0x3730>
    4de4:	ldr	r1, [pc, #748]	; 50d8 <ippGetInteger@plt+0x3968>
    4de8:	mov	r2, #11
    4dec:	add	r1, pc, r1
    4df0:	mov	r0, r4
    4df4:	bl	1410 <strncmp@plt>
    4df8:	cmp	r0, #0
    4dfc:	beq	4ea0 <ippGetInteger@plt+0x3730>
    4e00:	ldr	r1, [pc, #724]	; 50dc <ippGetInteger@plt+0x396c>
    4e04:	mov	r0, r4
    4e08:	mov	r2, #13
    4e0c:	add	r1, pc, r1
    4e10:	bl	1410 <strncmp@plt>
    4e14:	subs	r4, r0, #0
    4e18:	bne	4fc0 <ippGetInteger@plt+0x3850>
    4e1c:	sub	r1, r5, #4
    4e20:	mov	r0, r8
    4e24:	bl	1494 <httpAddrConnect@plt>
    4e28:	ldr	r3, [pc, #660]	; 50c4 <ippGetInteger@plt+0x3954>
    4e2c:	ldr	r2, [r6, #28]
    4e30:	cmp	r0, #0
    4e34:	beq	505c <ippGetInteger@plt+0x38ec>
    4e38:	ldr	r0, [sp, #24]
    4e3c:	ldr	r1, [pc, #668]	; 50e0 <ippGetInteger@plt+0x3970>
    4e40:	ldr	r3, [r0, r3]
    4e44:	add	r1, pc, r1
    4e48:	ldr	r0, [r3]
    4e4c:	bl	1404 <_cupsLangPrintf@plt>
    4e50:	mov	r0, r8
    4e54:	bl	135c <httpAddrFreeList@plt>
    4e58:	mov	r0, r4
    4e5c:	ldr	r1, [sp, #44]	; 0x2c
    4e60:	bl	15cc <httpAddrClose@plt>
    4e64:	mov	r4, #1
    4e68:	b	4da4 <ippGetInteger@plt+0x3634>
    4e6c:	ldr	r0, [sp, #24]
    4e70:	ldr	r3, [pc, #588]	; 50c4 <ippGetInteger@plt+0x3954>
    4e74:	ldr	r1, [pc, #616]	; 50e4 <ippGetInteger@plt+0x3974>
    4e78:	ldr	r2, [r6, #28]
    4e7c:	ldr	r3, [r0, r3]
    4e80:	add	r1, pc, r1
    4e84:	ldr	r0, [r3]
    4e88:	bl	1404 <_cupsLangPrintf@plt>
    4e8c:	mov	r4, #0
    4e90:	b	4da4 <ippGetInteger@plt+0x3634>
    4e94:	ldr	r2, [pc, #588]	; 50e8 <ippGetInteger@plt+0x3978>
    4e98:	add	r2, pc, r2
    4e9c:	b	4d80 <ippGetInteger@plt+0x3610>
    4ea0:	ldr	r3, [pc, #580]	; 50ec <ippGetInteger@plt+0x397c>
    4ea4:	ldr	r1, [pc, #496]	; 509c <ippGetInteger@plt+0x392c>
    4ea8:	add	r3, pc, r3
    4eac:	mov	r5, #0
    4eb0:	mov	r2, #1
    4eb4:	ldr	r3, [r3, #4]
    4eb8:	str	r2, [sp, #4]
    4ebc:	str	r1, [sp, #8]
    4ec0:	str	r5, [sp, #12]
    4ec4:	str	r5, [sp]
    4ec8:	mov	r2, r8
    4ecc:	ldr	r1, [r6, #40]	; 0x28
    4ed0:	ldr	r0, [r6, #20]
    4ed4:	bl	14a0 <httpConnect2@plt>
    4ed8:	mov	r7, r0
    4edc:	mov	r0, r8
    4ee0:	bl	135c <httpAddrFreeList@plt>
    4ee4:	cmp	r7, r5
    4ee8:	beq	500c <ippGetInteger@plt+0x389c>
    4eec:	ldr	r1, [r6, #24]
    4ef0:	mov	r0, r7
    4ef4:	bl	14f4 <httpGet@plt>
    4ef8:	subs	r4, r0, #0
    4efc:	bne	5034 <ippGetInteger@plt+0x38c4>
    4f00:	mov	r0, r7
    4f04:	bl	16f8 <httpUpdate@plt>
    4f08:	cmp	r0, #100	; 0x64
    4f0c:	beq	4f00 <ippGetInteger@plt+0x3790>
    4f10:	mov	r5, r0
    4f14:	mov	r0, r7
    4f18:	bl	1680 <httpFlush@plt>
    4f1c:	mov	r0, r7
    4f20:	bl	1698 <httpClose@plt>
    4f24:	cmp	r5, #400	; 0x190
    4f28:	ldr	r3, [pc, #404]	; 50c4 <ippGetInteger@plt+0x3954>
    4f2c:	ldr	r2, [r6, #28]
    4f30:	bge	4ff0 <ippGetInteger@plt+0x3880>
    4f34:	ldr	r0, [sp, #24]
    4f38:	ldr	r1, [pc, #432]	; 50f0 <ippGetInteger@plt+0x3980>
    4f3c:	mov	r4, #1
    4f40:	ldr	r3, [r0, r3]
    4f44:	add	r1, pc, r1
    4f48:	ldr	r0, [r3]
    4f4c:	bl	1404 <_cupsLangPrintf@plt>
    4f50:	b	4da4 <ippGetInteger@plt+0x3634>
    4f54:	ldr	r1, [pc, #408]	; 50f4 <ippGetInteger@plt+0x3984>
    4f58:	add	r3, sp, #60	; 0x3c
    4f5c:	mov	r0, r3
    4f60:	mov	r2, #1024	; 0x400
    4f64:	add	r1, pc, r1
    4f68:	str	r3, [sp, #28]
    4f6c:	bl	1674 <_cups_strlcpy@plt>
    4f70:	b	4d34 <ippGetInteger@plt+0x35c4>
    4f74:	ldr	r1, [sp, #24]
    4f78:	ldr	r3, [pc, #324]	; 50c4 <ippGetInteger@plt+0x3954>
    4f7c:	ldr	r2, [r6, #28]
    4f80:	mov	r4, r8
    4f84:	ldr	r3, [r1, r3]
    4f88:	ldr	r1, [pc, #360]	; 50f8 <ippGetInteger@plt+0x3988>
    4f8c:	ldr	r0, [r3]
    4f90:	add	r1, pc, r1
    4f94:	bl	1404 <_cupsLangPrintf@plt>
    4f98:	b	4da4 <ippGetInteger@plt+0x3634>
    4f9c:	ldr	r0, [sp, #24]
    4fa0:	ldr	r3, [pc, #284]	; 50c4 <ippGetInteger@plt+0x3954>
    4fa4:	ldr	r1, [pc, #336]	; 50fc <ippGetInteger@plt+0x398c>
    4fa8:	ldr	r2, [r6, #28]
    4fac:	ldr	r3, [r0, r3]
    4fb0:	add	r1, pc, r1
    4fb4:	ldr	r0, [r3]
    4fb8:	bl	1404 <_cupsLangPrintf@plt>
    4fbc:	b	4e8c <ippGetInteger@plt+0x371c>
    4fc0:	ldr	r0, [sp, #24]
    4fc4:	ldr	r3, [pc, #248]	; 50c4 <ippGetInteger@plt+0x3954>
    4fc8:	ldr	r1, [pc, #304]	; 5100 <ippGetInteger@plt+0x3990>
    4fcc:	ldr	r2, [r6, #28]
    4fd0:	ldr	r3, [r0, r3]
    4fd4:	add	r1, pc, r1
    4fd8:	mov	r4, #0
    4fdc:	ldr	r0, [r3]
    4fe0:	bl	1404 <_cupsLangPrintf@plt>
    4fe4:	mov	r0, r8
    4fe8:	bl	135c <httpAddrFreeList@plt>
    4fec:	b	4da4 <ippGetInteger@plt+0x3634>
    4ff0:	ldr	r0, [sp, #24]
    4ff4:	ldr	r1, [pc, #264]	; 5104 <ippGetInteger@plt+0x3994>
    4ff8:	ldr	r3, [r0, r3]
    4ffc:	add	r1, pc, r1
    5000:	ldr	r0, [r3]
    5004:	bl	1404 <_cupsLangPrintf@plt>
    5008:	b	4da4 <ippGetInteger@plt+0x3634>
    500c:	ldr	r1, [sp, #24]
    5010:	ldr	r3, [pc, #172]	; 50c4 <ippGetInteger@plt+0x3954>
    5014:	ldr	r2, [r6, #28]
    5018:	mov	r4, r7
    501c:	ldr	r3, [r1, r3]
    5020:	ldr	r1, [pc, #224]	; 5108 <ippGetInteger@plt+0x3998>
    5024:	ldr	r0, [r3]
    5028:	add	r1, pc, r1
    502c:	bl	1404 <_cupsLangPrintf@plt>
    5030:	b	4da4 <ippGetInteger@plt+0x3634>
    5034:	ldr	r1, [sp, #24]
    5038:	ldr	r3, [pc, #132]	; 50c4 <ippGetInteger@plt+0x3954>
    503c:	ldr	r2, [r6, #28]
    5040:	mov	r4, r5
    5044:	ldr	r3, [r1, r3]
    5048:	ldr	r1, [pc, #188]	; 510c <ippGetInteger@plt+0x399c>
    504c:	ldr	r0, [r3]
    5050:	add	r1, pc, r1
    5054:	bl	1404 <_cupsLangPrintf@plt>
    5058:	b	4da4 <ippGetInteger@plt+0x3634>
    505c:	ldr	r0, [sp, #24]
    5060:	ldr	r1, [pc, #168]	; 5110 <ippGetInteger@plt+0x39a0>
    5064:	ldr	r3, [r0, r3]
    5068:	add	r1, pc, r1
    506c:	ldr	r0, [r3]
    5070:	bl	1404 <_cupsLangPrintf@plt>
    5074:	mov	r0, r8
    5078:	bl	135c <httpAddrFreeList@plt>
    507c:	b	4da4 <ippGetInteger@plt+0x3634>
    5080:	bl	15d8 <__stack_chk_fail@plt>
    5084:	andeq	r3, r1, r0, lsl #9
    5088:	andeq	r0, r0, ip, ror #2
    508c:	andeq	r2, r0, r0, ror #3
    5090:	andeq	r3, r1, r4, lsl #12
    5094:	andeq	r1, r0, r8, lsl #31
    5098:	andeq	r1, r0, r0, lsl #31
    509c:	andeq	r7, r0, r0, lsr r5
    50a0:	andeq	r3, r1, r4, lsr #10
    50a4:	strbtvs	r6, [r6], -r7, ror #12
    50a8:	andeq	r2, r0, r8, lsl r1
    50ac:	andeq	r2, r0, r4, lsl r1
    50b0:	andeq	r3, r1, r4, ror r1
    50b4:	andeq	r2, r0, ip, lsr #1
    50b8:	andeq	r2, r0, r4, asr r0
    50bc:	andeq	r2, r0, r4, lsr r0
    50c0:	andeq	r2, r0, r4, lsr #32
    50c4:	andeq	r0, r0, r0, lsl #3
    50c8:	strdeq	r1, [r0], -r8
    50cc:	andeq	r1, r0, r0, asr lr
    50d0:	andeq	r1, r0, r4, lsl #30
    50d4:	strdeq	r1, [r0], -r4
    50d8:	andeq	r1, r0, r4, ror #23
    50dc:	andeq	r1, r0, ip, lsr #29
    50e0:	andeq	r1, r0, r4, ror #28
    50e4:	andeq	r1, r0, r0, asr #27
    50e8:	andeq	r1, r0, r8, lsr sp
    50ec:	andeq	r3, r1, ip, ror #2
    50f0:	andeq	r1, r0, r4, ror #26
    50f4:	andeq	r1, r0, r0, lsr sp
    50f8:	andeq	r1, r0, r4, asr ip
    50fc:	andeq	r1, r0, r4, asr #24
    5100:	strdeq	r1, [r0], -r4
    5104:	strdeq	r1, [r0], -r8
    5108:	andeq	r1, r0, ip, asr #23
    510c:	andeq	r1, r0, r4, lsr #23
    5110:	andeq	r1, r0, ip, lsl #23
    5114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5118:	subs	r5, r1, #0
    511c:	ldr	r9, [pc, #856]	; 547c <ippGetInteger@plt+0x3d0c>
    5120:	sub	sp, sp, #20
    5124:	add	r9, pc, r9
    5128:	beq	51ac <ippGetInteger@plt+0x3a3c>
    512c:	ldr	r3, [r5, #8]
    5130:	ldr	sl, [pc, #840]	; 5480 <ippGetInteger@plt+0x3d10>
    5134:	cmp	r3, #0
    5138:	ldr	fp, [pc, #836]	; 5484 <ippGetInteger@plt+0x3d14>
    513c:	ldrne	r7, [r3, #16]
    5140:	mov	r8, r0
    5144:	moveq	r7, #1
    5148:	add	sl, pc, sl
    514c:	add	fp, pc, fp
    5150:	ldr	r2, [r5, #16]
    5154:	sub	r3, r2, #3
    5158:	cmp	r3, #17
    515c:	addls	pc, pc, r3, lsl #2
    5160:	b	5440 <ippGetInteger@plt+0x3cd0>
    5164:	b	5230 <ippGetInteger@plt+0x3ac0>
    5168:	b	51c8 <ippGetInteger@plt+0x3a58>
    516c:	b	5408 <ippGetInteger@plt+0x3c98>
    5170:	b	53ec <ippGetInteger@plt+0x3c7c>
    5174:	b	53d8 <ippGetInteger@plt+0x3c68>
    5178:	b	53c4 <ippGetInteger@plt+0x3c54>
    517c:	b	53b4 <ippGetInteger@plt+0x3c44>
    5180:	b	53a0 <ippGetInteger@plt+0x3c30>
    5184:	b	51b8 <ippGetInteger@plt+0x3a48>
    5188:	b	538c <ippGetInteger@plt+0x3c1c>
    518c:	b	5364 <ippGetInteger@plt+0x3bf4>
    5190:	b	52f8 <ippGetInteger@plt+0x3b88>
    5194:	b	52c8 <ippGetInteger@plt+0x3b58>
    5198:	b	52a8 <ippGetInteger@plt+0x3b38>
    519c:	b	5290 <ippGetInteger@plt+0x3b20>
    51a0:	b	5278 <ippGetInteger@plt+0x3b08>
    51a4:	b	5248 <ippGetInteger@plt+0x3ad8>
    51a8:	b	5230 <ippGetInteger@plt+0x3ac0>
    51ac:	mov	r0, #1
    51b0:	add	sp, sp, #20
    51b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    51b8:	ldr	r3, [r8, #40]	; 0x28
    51bc:	ldr	r2, [r5, #60]	; 0x3c
    51c0:	cmp	r3, r2
    51c4:	bge	5424 <ippGetInteger@plt+0x3cb4>
    51c8:	mov	r6, #1
    51cc:	mov	r4, #0
    51d0:	ldr	r3, [r5, #20]
    51d4:	cmp	r3, #0
    51d8:	beq	51e4 <ippGetInteger@plt+0x3a74>
    51dc:	mov	r4, r6
    51e0:	eor	r6, r6, #1
    51e4:	cmp	r7, #1
    51e8:	movne	r6, #0
    51ec:	andeq	r6, r6, #1
    51f0:	cmp	r6, #0
    51f4:	bne	5418 <ippGetInteger@plt+0x3ca8>
    51f8:	adds	r4, r4, #0
    51fc:	movne	r4, #1
    5200:	cmp	r7, #2
    5204:	movne	r4, #0
    5208:	andeq	r4, r4, #1
    520c:	cmp	r4, #0
    5210:	bne	51ac <ippGetInteger@plt+0x3a3c>
    5214:	ldr	r5, [r5, #4]
    5218:	cmp	r5, #0
    521c:	bne	5150 <ippGetInteger@plt+0x39e0>
    5220:	sub	r0, r7, #1
    5224:	clz	r0, r0
    5228:	lsr	r0, r0, #5
    522c:	b	51b0 <ippGetInteger@plt+0x3a40>
    5230:	ldr	r3, [r5, #20]
    5234:	cmp	r3, #0
    5238:	moveq	r4, #1
    523c:	beq	51f8 <ippGetInteger@plt+0x3a88>
    5240:	mov	r6, #0
    5244:	b	51dc <ippGetInteger@plt+0x3a6c>
    5248:	ldr	r3, [pc, #568]	; 5488 <ippGetInteger@plt+0x3d18>
    524c:	ldr	r1, [r8, #28]
    5250:	ldr	r3, [r9, r3]
    5254:	ldr	r0, [r3]
    5258:	bl	1434 <_cupsLangPuts@plt>
    525c:	ldr	r3, [r5, #20]
    5260:	cmp	r3, #0
    5264:	moveq	r4, #1
    5268:	beq	5200 <ippGetInteger@plt+0x3a90>
    526c:	mov	r6, #1
    5270:	mov	r4, #0
    5274:	b	51e4 <ippGetInteger@plt+0x3a74>
    5278:	ldr	r3, [pc, #520]	; 5488 <ippGetInteger@plt+0x3d18>
    527c:	ldr	r1, [r8, #4]
    5280:	ldr	r3, [r9, r3]
    5284:	ldr	r0, [r3]
    5288:	bl	1434 <_cupsLangPuts@plt>
    528c:	b	525c <ippGetInteger@plt+0x3aec>
    5290:	mov	r0, r8
    5294:	bl	49cc <ippGetInteger@plt+0x325c>
    5298:	clz	r6, r0
    529c:	mov	r4, r0
    52a0:	lsr	r6, r6, #5
    52a4:	b	51d0 <ippGetInteger@plt+0x3a60>
    52a8:	ldr	r2, [r5, #72]	; 0x48
    52ac:	ldr	r1, [r5, #68]	; 0x44
    52b0:	mov	r0, r8
    52b4:	bl	3e48 <ippGetInteger@plt+0x26d8>
    52b8:	clz	r6, r0
    52bc:	mov	r4, r0
    52c0:	lsr	r6, r6, #5
    52c4:	b	51d0 <ippGetInteger@plt+0x3a60>
    52c8:	mov	r3, #0
    52cc:	str	r3, [sp]
    52d0:	ldr	r1, [r8, #28]
    52d4:	mov	r2, r3
    52d8:	add	r0, r5, #28
    52dc:	bl	14b8 <regexec@plt>
    52e0:	cmp	r0, #0
    52e4:	moveq	r4, #1
    52e8:	movne	r4, #0
    52ec:	movne	r6, #1
    52f0:	moveq	r6, #0
    52f4:	b	51d0 <ippGetInteger@plt+0x3a60>
    52f8:	ldr	r1, [r8, #32]
    52fc:	ldr	r2, [r8, #36]	; 0x24
    5300:	ldr	r0, [r5, #24]
    5304:	bl	1440 <cupsGetOption@plt>
    5308:	subs	r1, r0, #0
    530c:	str	r1, [sp, #12]
    5310:	beq	5434 <ippGetInteger@plt+0x3cc4>
    5314:	mov	r3, #0
    5318:	str	r3, [sp]
    531c:	mov	r2, r3
    5320:	add	r0, r5, #28
    5324:	bl	14b8 <regexec@plt>
    5328:	cmp	r0, #0
    532c:	moveq	r4, #1
    5330:	movne	r4, #0
    5334:	movne	r6, #1
    5338:	moveq	r6, #0
    533c:	mov	r0, sl
    5340:	bl	171c <getenv@plt>
    5344:	cmp	r0, #0
    5348:	beq	51d0 <ippGetInteger@plt+0x3a60>
    534c:	ldr	r2, [sp, #12]
    5350:	mov	r3, r4
    5354:	mov	r1, fp
    5358:	mov	r0, #1
    535c:	bl	1764 <__printf_chk@plt>
    5360:	b	51d0 <ippGetInteger@plt+0x3a60>
    5364:	ldr	r2, [r8, #36]	; 0x24
    5368:	ldr	r1, [r8, #32]
    536c:	ldr	r0, [r5, #24]
    5370:	bl	1440 <cupsGetOption@plt>
    5374:	cmp	r0, #0
    5378:	movne	r4, #1
    537c:	moveq	r4, #0
    5380:	moveq	r6, #1
    5384:	movne	r6, #0
    5388:	b	51d0 <ippGetInteger@plt+0x3a60>
    538c:	mov	r3, #0
    5390:	str	r3, [sp]
    5394:	mov	r2, r3
    5398:	ldr	r1, [r8, #24]
    539c:	b	52d8 <ippGetInteger@plt+0x3b68>
    53a0:	mov	r3, #0
    53a4:	str	r3, [sp]
    53a8:	mov	r2, r3
    53ac:	ldr	r1, [r8, #20]
    53b0:	b	52d8 <ippGetInteger@plt+0x3b68>
    53b4:	ldr	r1, [r8, #4]
    53b8:	ldr	r0, [r5, #24]
    53bc:	bl	13c8 <_cups_strcasecmp@plt>
    53c0:	b	52e0 <ippGetInteger@plt+0x3b70>
    53c4:	mov	r3, #0
    53c8:	str	r3, [sp]
    53cc:	mov	r2, r3
    53d0:	ldr	r1, [r8, #4]
    53d4:	b	52d8 <ippGetInteger@plt+0x3b68>
    53d8:	mov	r3, #0
    53dc:	str	r3, [sp]
    53e0:	mov	r2, r3
    53e4:	ldr	r1, [r8, #8]
    53e8:	b	52d8 <ippGetInteger@plt+0x3b68>
    53ec:	ldr	r3, [r8, #44]	; 0x2c
    53f0:	cmp	r3, #0
    53f4:	moveq	r4, #1
    53f8:	movne	r4, #0
    53fc:	movne	r6, #1
    5400:	moveq	r6, #0
    5404:	b	51d0 <ippGetInteger@plt+0x3a60>
    5408:	ldr	r4, [r8, #44]	; 0x2c
    540c:	clz	r6, r4
    5410:	lsr	r6, r6, #5
    5414:	b	51d0 <ippGetInteger@plt+0x3a60>
    5418:	mov	r0, #0
    541c:	add	sp, sp, #20
    5420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5424:	ldr	r2, [r5, #64]	; 0x40
    5428:	cmp	r3, r2
    542c:	ble	525c <ippGetInteger@plt+0x3aec>
    5430:	b	51c8 <ippGetInteger@plt+0x3a58>
    5434:	mov	r6, #1
    5438:	ldr	r4, [sp, #12]
    543c:	b	533c <ippGetInteger@plt+0x3bcc>
    5440:	ldr	r1, [r5, #12]
    5444:	cmp	r1, #0
    5448:	beq	5464 <ippGetInteger@plt+0x3cf4>
    544c:	mov	r0, r8
    5450:	bl	5114 <ippGetInteger@plt+0x39a4>
    5454:	clz	r6, r0
    5458:	mov	r4, r0
    545c:	lsr	r6, r6, #5
    5460:	b	51d0 <ippGetInteger@plt+0x3a60>
    5464:	cmp	r2, #1
    5468:	moveq	r4, #1
    546c:	movne	r4, #0
    5470:	movne	r6, #1
    5474:	moveq	r6, #0
    5478:	b	51d0 <ippGetInteger@plt+0x3a60>
    547c:	andeq	r2, r1, ip, lsr sp
    5480:	andeq	r1, r0, r0, lsl sl
    5484:	andeq	r1, r0, ip, lsl #23
    5488:	andeq	r0, r0, r0, lsl #3
    548c:	ldr	r3, [pc, #116]	; 5508 <ippGetInteger@plt+0x3d98>
    5490:	ldr	r2, [pc, #116]	; 550c <ippGetInteger@plt+0x3d9c>
    5494:	add	r3, pc, r3
    5498:	push	{r4, lr}
    549c:	sub	sp, sp, #16
    54a0:	ldr	r4, [r3, r2]
    54a4:	mov	r1, #0
    54a8:	add	r0, sp, #4
    54ac:	ldr	r3, [r4]
    54b0:	str	r3, [sp, #12]
    54b4:	bl	138c <gettimeofday@plt>
    54b8:	ldr	r2, [sp, #12]
    54bc:	ldr	r3, [r4]
    54c0:	cmp	r0, #0
    54c4:	vldreq	s15, [sp, #8]
    54c8:	vldreq	s11, [sp, #4]
    54cc:	vldreq	d6, [pc, #36]	; 54f8 <ippGetInteger@plt+0x3d88>
    54d0:	vldrne	d0, [pc, #40]	; 5500 <ippGetInteger@plt+0x3d90>
    54d4:	vcvteq.f64.s32	d7, s15
    54d8:	vcvteq.f64.s32	d0, s11
    54dc:	vmlaeq.f64	d0, d7, d6
    54e0:	cmp	r2, r3
    54e4:	bne	54f0 <ippGetInteger@plt+0x3d80>
    54e8:	add	sp, sp, #16
    54ec:	pop	{r4, pc}
    54f0:	bl	15d8 <__stack_chk_fail@plt>
    54f4:	nop			; (mov r0, r0)
    54f8:	adcsge	lr, r5, sp, lsl #27
    54fc:	mrccc	6, 5, ip, cr0, cr7, {7}
	...
    5508:	andeq	r2, r1, ip, asr #19
    550c:	andeq	r0, r0, ip, ror #2
    5510:	ldr	r2, [pc, #780]	; 5824 <ippGetInteger@plt+0x40b4>
    5514:	ldr	r1, [pc, #780]	; 5828 <ippGetInteger@plt+0x40b8>
    5518:	add	r2, pc, r2
    551c:	push	{r4, r5, r6, r7, r8, r9, lr}
    5520:	subs	r6, r3, #0
    5524:	sub	sp, sp, #1296	; 0x510
    5528:	mov	r3, r2
    552c:	sub	sp, sp, #12
    5530:	ldr	r7, [r3, r1]
    5534:	add	r3, sp, #1344	; 0x540
    5538:	add	r3, r3, #12
    553c:	ldrh	r9, [r3]
    5540:	ldr	r3, [r7]
    5544:	ldr	r2, [sp, #1348]	; 0x544
    5548:	ldr	r4, [sp, #1360]	; 0x550
    554c:	ldr	r5, [sp, #1368]	; 0x558
    5550:	str	r3, [sp, #1300]	; 0x514
    5554:	bne	5794 <ippGetInteger@plt+0x4024>
    5558:	mov	r3, #1
    555c:	mov	r0, r2
    5560:	str	r3, [r5, #52]	; 0x34
    5564:	bl	1758 <strdup@plt>
    5568:	str	r9, [r5, #40]	; 0x28
    556c:	str	r0, [r5, #20]
    5570:	mov	r8, r0
    5574:	bl	165c <strlen@plt>
    5578:	sub	r0, r0, #1
    557c:	cmn	r8, r0
    5580:	bcc	56ac <ippGetInteger@plt+0x3f3c>
    5584:	cmp	r4, #0
    5588:	beq	55fc <ippGetInteger@plt+0x3e8c>
    558c:	add	r6, sp, #20
    5590:	ldr	r2, [r4, #4]
    5594:	cmp	r2, #255	; 0xff
    5598:	bhi	55f0 <ippGetInteger@plt+0x3e80>
    559c:	mov	r3, #256	; 0x100
    55a0:	add	r1, r4, #8
    55a4:	mov	r0, r6
    55a8:	bl	1380 <__memcpy_chk@plt>
    55ac:	ldr	r3, [r4, #4]
    55b0:	add	r2, sp, #1296	; 0x510
    55b4:	add	r2, r2, #8
    55b8:	add	r3, r2, r3
    55bc:	mov	r1, #61	; 0x3d
    55c0:	mov	r8, #0
    55c4:	mov	r0, r6
    55c8:	strb	r8, [r3, #-1284]	; 0xfffffafc
    55cc:	bl	1740 <strchr@plt>
    55d0:	subs	r1, r0, #0
    55d4:	beq	55f0 <ippGetInteger@plt+0x3e80>
    55d8:	add	r3, r5, #36	; 0x24
    55dc:	strb	r8, [r1], #1
    55e0:	ldr	r2, [r5, #32]
    55e4:	mov	r0, r6
    55e8:	bl	16e0 <cupsAddOption@plt>
    55ec:	str	r0, [r5, #32]
    55f0:	ldr	r4, [r4]
    55f4:	cmp	r4, #0
    55f8:	bne	5590 <ippGetInteger@plt+0x3e20>
    55fc:	ldr	r4, [r5, #12]
    5600:	ldr	r1, [pc, #548]	; 582c <ippGetInteger@plt+0x40bc>
    5604:	mov	r2, #6
    5608:	mov	r0, r4
    560c:	add	r1, pc, r1
    5610:	bl	1410 <strncmp@plt>
    5614:	cmp	r0, #0
    5618:	beq	56bc <ippGetInteger@plt+0x3f4c>
    561c:	ldr	r1, [pc, #524]	; 5830 <ippGetInteger@plt+0x40c0>
    5620:	mov	r2, #7
    5624:	add	r1, pc, r1
    5628:	mov	r0, r4
    562c:	bl	1410 <strncmp@plt>
    5630:	cmp	r0, #0
    5634:	beq	57e0 <ippGetInteger@plt+0x4070>
    5638:	ldr	r1, [pc, #500]	; 5834 <ippGetInteger@plt+0x40c4>
    563c:	mov	r2, #5
    5640:	add	r1, pc, r1
    5644:	mov	r0, r4
    5648:	bl	1410 <strncmp@plt>
    564c:	cmp	r0, #0
    5650:	beq	57b4 <ippGetInteger@plt+0x4044>
    5654:	ldr	r1, [pc, #476]	; 5838 <ippGetInteger@plt+0x40c8>
    5658:	mov	r2, #6
    565c:	add	r1, pc, r1
    5660:	mov	r0, r4
    5664:	bl	1410 <strncmp@plt>
    5668:	cmp	r0, #0
    566c:	beq	5800 <ippGetInteger@plt+0x4090>
    5670:	ldr	r1, [pc, #452]	; 583c <ippGetInteger@plt+0x40cc>
    5674:	mov	r0, r4
    5678:	mov	r2, #9
    567c:	add	r1, pc, r1
    5680:	bl	1410 <strncmp@plt>
    5684:	cmp	r0, #0
    5688:	bne	5738 <ippGetInteger@plt+0x3fc8>
    568c:	ldr	r0, [pc, #428]	; 5840 <ippGetInteger@plt+0x40d0>
    5690:	ldr	r6, [pc, #428]	; 5844 <ippGetInteger@plt+0x40d4>
    5694:	ldr	r2, [r5, #36]	; 0x24
    5698:	ldr	r1, [r5, #32]
    569c:	add	r0, pc, r0
    56a0:	add	r6, pc, r6
    56a4:	bl	1440 <cupsGetOption@plt>
    56a8:	b	56d8 <ippGetInteger@plt+0x3f68>
    56ac:	ldrb	r3, [r8, r0]
    56b0:	cmp	r3, #46	; 0x2e
    56b4:	strbeq	r6, [r8, r0]
    56b8:	b	5584 <ippGetInteger@plt+0x3e14>
    56bc:	ldr	r0, [pc, #388]	; 5848 <ippGetInteger@plt+0x40d8>
    56c0:	ldr	r2, [r5, #36]	; 0x24
    56c4:	ldr	r1, [r5, #32]
    56c8:	add	r0, pc, r0
    56cc:	bl	1440 <cupsGetOption@plt>
    56d0:	ldr	r6, [pc, #372]	; 584c <ippGetInteger@plt+0x40dc>
    56d4:	add	r6, pc, r6
    56d8:	cmp	r0, #0
    56dc:	beq	57d4 <ippGetInteger@plt+0x4064>
    56e0:	ldrb	r3, [r0]
    56e4:	cmp	r3, #0
    56e8:	bne	5754 <ippGetInteger@plt+0x3fe4>
    56ec:	ldr	r0, [pc, #348]	; 5850 <ippGetInteger@plt+0x40e0>
    56f0:	add	r0, pc, r0
    56f4:	bl	1758 <strdup@plt>
    56f8:	add	r4, sp, #276	; 0x114
    56fc:	str	r0, [r5, #24]
    5700:	ldr	ip, [r5, #40]	; 0x28
    5704:	ldr	r1, [r5, #20]
    5708:	mov	r2, #0
    570c:	str	r0, [sp, #12]
    5710:	stmib	sp, {r1, ip}
    5714:	mov	r3, r6
    5718:	str	r2, [sp]
    571c:	mov	r1, r4
    5720:	mov	r2, #1024	; 0x400
    5724:	mov	r0, #15
    5728:	bl	159c <httpAssembleURI@plt>
    572c:	mov	r0, r4
    5730:	bl	1758 <strdup@plt>
    5734:	str	r0, [r5, #28]
    5738:	ldr	r2, [sp, #1300]	; 0x514
    573c:	ldr	r3, [r7]
    5740:	cmp	r2, r3
    5744:	bne	5820 <ippGetInteger@plt+0x40b0>
    5748:	add	sp, sp, #1296	; 0x510
    574c:	add	sp, sp, #12
    5750:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5754:	cmp	r3, #47	; 0x2f
    5758:	beq	56f4 <ippGetInteger@plt+0x3f84>
    575c:	ldr	r2, [pc, #240]	; 5854 <ippGetInteger@plt+0x40e4>
    5760:	mov	r3, #1024	; 0x400
    5764:	add	r2, pc, r2
    5768:	add	r4, sp, #276	; 0x114
    576c:	str	r0, [sp, #4]
    5770:	str	r2, [sp]
    5774:	mov	r1, r3
    5778:	mov	r2, #1
    577c:	mov	r0, r4
    5780:	bl	1668 <__snprintf_chk@plt>
    5784:	mov	r0, r4
    5788:	bl	1758 <strdup@plt>
    578c:	str	r0, [r5, #24]
    5790:	b	5700 <ippGetInteger@plt+0x3f90>
    5794:	ldr	r4, [pc, #188]	; 5858 <ippGetInteger@plt+0x40e8>
    5798:	mov	r3, #1
    579c:	add	r4, pc, r4
    57a0:	str	r3, [r4, #8]
    57a4:	bl	1368 <avahi_service_resolver_free@plt>
    57a8:	ldr	r0, [r4, #12]
    57ac:	bl	1518 <avahi_simple_poll_quit@plt>
    57b0:	b	5738 <ippGetInteger@plt+0x3fc8>
    57b4:	ldr	r0, [pc, #160]	; 585c <ippGetInteger@plt+0x40ec>
    57b8:	ldr	r6, [pc, #160]	; 5860 <ippGetInteger@plt+0x40f0>
    57bc:	ldr	r2, [r5, #36]	; 0x24
    57c0:	ldr	r1, [r5, #32]
    57c4:	add	r0, pc, r0
    57c8:	bl	1440 <cupsGetOption@plt>
    57cc:	add	r6, pc, r6
    57d0:	b	56d8 <ippGetInteger@plt+0x3f68>
    57d4:	ldr	r0, [pc, #136]	; 5864 <ippGetInteger@plt+0x40f4>
    57d8:	add	r0, pc, r0
    57dc:	b	56f4 <ippGetInteger@plt+0x3f84>
    57e0:	ldr	r0, [pc, #128]	; 5868 <ippGetInteger@plt+0x40f8>
    57e4:	ldr	r6, [pc, #128]	; 586c <ippGetInteger@plt+0x40fc>
    57e8:	ldr	r2, [r5, #36]	; 0x24
    57ec:	ldr	r1, [r5, #32]
    57f0:	add	r0, pc, r0
    57f4:	bl	1440 <cupsGetOption@plt>
    57f8:	add	r6, pc, r6
    57fc:	b	56d8 <ippGetInteger@plt+0x3f68>
    5800:	ldr	r0, [pc, #104]	; 5870 <ippGetInteger@plt+0x4100>
    5804:	ldr	r6, [pc, #104]	; 5874 <ippGetInteger@plt+0x4104>
    5808:	ldr	r2, [r5, #36]	; 0x24
    580c:	ldr	r1, [r5, #32]
    5810:	add	r0, pc, r0
    5814:	bl	1440 <cupsGetOption@plt>
    5818:	add	r6, pc, r6
    581c:	b	56d8 <ippGetInteger@plt+0x3f68>
    5820:	bl	15d8 <__stack_chk_fail@plt>
    5824:	andeq	r2, r1, r8, asr #18
    5828:	andeq	r0, r0, ip, ror #2
    582c:	andeq	r1, r0, r8, ror #13
    5830:	ldrdeq	r1, [r0], -r8
    5834:	andeq	r1, r0, r4, asr #13
    5838:			; <UNDEFINED> instruction: 0x000016b4
    583c:	muleq	r0, ip, r6
    5840:	andeq	r1, r0, r0, ror r6
    5844:	muleq	r0, ip, r2
    5848:	andeq	r1, r0, r0, lsl r4
    584c:	andeq	r1, r0, r0, ror #4
    5850:	andeq	r1, r0, r0, lsl #12
    5854:	andeq	r1, r0, r0, asr #11
    5858:	andeq	r2, r1, r8, ror r8
    585c:	andeq	r1, r0, r8, asr #10
    5860:	andeq	r1, r0, r4, ror #2
    5864:	andeq	r1, r0, r8, lsl r5
    5868:	andeq	r1, r0, r8, ror #5
    586c:	andeq	r1, r0, r8, lsr #2
    5870:	strdeq	r1, [r0], -ip
    5874:	andeq	r1, r0, r0, lsl r1
    5878:	cmp	r1, #100	; 0x64
    587c:	ldr	r3, [pc, #68]	; 58c8 <ippGetInteger@plt+0x4158>
    5880:	add	r3, pc, r3
    5884:	bxne	lr
    5888:	ldr	r0, [pc, #60]	; 58cc <ippGetInteger@plt+0x415c>
    588c:	push	{r4, lr}
    5890:	mov	r2, #32
    5894:	ldr	r3, [r3, r0]
    5898:	ldr	r0, [pc, #48]	; 58d0 <ippGetInteger@plt+0x4160>
    589c:	mov	r1, #1
    58a0:	ldr	r3, [r3]
    58a4:	add	r0, pc, r0
    58a8:	bl	1638 <fwrite@plt>
    58ac:	ldr	r3, [pc, #32]	; 58d4 <ippGetInteger@plt+0x4164>
    58b0:	mov	r2, #1
    58b4:	add	r3, pc, r3
    58b8:	pop	{r4, lr}
    58bc:	ldr	r0, [r3, #12]
    58c0:	str	r2, [r3, #8]
    58c4:	b	1518 <avahi_simple_poll_quit@plt>
    58c8:	andeq	r2, r1, r0, ror #11
    58cc:	andeq	r0, r0, r4, ror r1
    58d0:	andeq	r1, r0, r4, lsl #9
    58d4:	andeq	r2, r1, r0, ror #14
    58d8:	ldr	ip, [pc, #188]	; 599c <ippGetInteger@plt+0x422c>
    58dc:	push	{r4, r5, r6, r7, r8, r9, lr}
    58e0:	add	ip, pc, ip
    58e4:	ldr	lr, [pc, #180]	; 59a0 <ippGetInteger@plt+0x4230>
    58e8:	sub	sp, sp, #1040	; 0x410
    58ec:	sub	sp, sp, #4
    58f0:	ldr	r5, [ip, lr]
    58f4:	mov	r9, r3
    58f8:	mov	r6, r1
    58fc:	ldr	r3, [r5]
    5900:	mov	r1, #1
    5904:	mov	r7, r0
    5908:	mov	r0, #56	; 0x38
    590c:	mov	r8, r2
    5910:	str	r3, [sp, #1036]	; 0x40c
    5914:	bl	162c <calloc@plt>
    5918:	mov	r4, r0
    591c:	mov	r0, r6
    5920:	bl	1758 <strdup@plt>
    5924:	str	r0, [r4, #4]
    5928:	mov	r0, r9
    592c:	bl	1758 <strdup@plt>
    5930:	str	r0, [r4, #8]
    5934:	mov	r0, r8
    5938:	bl	1758 <strdup@plt>
    593c:	mov	r1, r4
    5940:	str	r0, [r4, #12]
    5944:	mov	r0, r7
    5948:	bl	13a4 <cupsArrayAdd@plt>
    594c:	add	r1, sp, #20
    5950:	mov	r3, r8
    5954:	mov	r2, r6
    5958:	str	r1, [sp, #12]
    595c:	mov	r0, r1
    5960:	str	r9, [sp]
    5964:	ldr	r1, [pc, #56]	; 59a4 <ippGetInteger@plt+0x4234>
    5968:	bl	13b0 <avahi_service_name_join@plt>
    596c:	ldr	r0, [sp, #12]
    5970:	bl	1758 <strdup@plt>
    5974:	ldr	r2, [sp, #1036]	; 0x40c
    5978:	ldr	r3, [r5]
    597c:	cmp	r2, r3
    5980:	str	r0, [r4, #16]
    5984:	bne	5998 <ippGetInteger@plt+0x4228>
    5988:	mov	r0, r4
    598c:	add	sp, sp, #1040	; 0x410
    5990:	add	sp, sp, #4
    5994:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5998:	bl	15d8 <__stack_chk_fail@plt>
    599c:	andeq	r2, r1, r0, lsl #11
    59a0:	andeq	r0, r0, ip, ror #2
    59a4:	strdeq	r0, [r0], -r6
    59a8:	ldr	ip, [pc, #184]	; 5a68 <ippGetInteger@plt+0x42f8>
    59ac:	push	{r4, r5, r6, r7, r8, r9, lr}
    59b0:	add	ip, pc, ip
    59b4:	ldr	lr, [pc, #176]	; 5a6c <ippGetInteger@plt+0x42fc>
    59b8:	sub	sp, sp, #68	; 0x44
    59bc:	mov	r9, r3
    59c0:	ldr	r8, [ip, lr]
    59c4:	mov	r6, r1
    59c8:	mov	r7, r2
    59cc:	ldr	r3, [r8]
    59d0:	add	r1, sp, #4
    59d4:	mov	r2, ip
    59d8:	str	r6, [sp, #8]
    59dc:	str	r7, [sp, #16]
    59e0:	str	r3, [sp, #60]	; 0x3c
    59e4:	mov	r5, r0
    59e8:	bl	14e8 <cupsArrayFind@plt>
    59ec:	subs	r4, r0, #0
    59f0:	bne	5a1c <ippGetInteger@plt+0x42ac>
    59f4:	b	5a30 <ippGetInteger@plt+0x42c0>
    59f8:	ldr	r1, [sp, #16]
    59fc:	ldr	r0, [r4, #12]
    5a00:	bl	16a4 <strcmp@plt>
    5a04:	cmp	r0, #0
    5a08:	beq	5a48 <ippGetInteger@plt+0x42d8>
    5a0c:	mov	r0, r5
    5a10:	bl	14dc <cupsArrayNext@plt>
    5a14:	subs	r4, r0, #0
    5a18:	beq	5a30 <ippGetInteger@plt+0x42c0>
    5a1c:	ldr	r1, [sp, #8]
    5a20:	ldr	r0, [r4, #4]
    5a24:	bl	13c8 <_cups_strcasecmp@plt>
    5a28:	cmp	r0, #0
    5a2c:	beq	59f8 <ippGetInteger@plt+0x4288>
    5a30:	mov	r3, r9
    5a34:	mov	r2, r7
    5a38:	mov	r1, r6
    5a3c:	mov	r0, r5
    5a40:	bl	58d8 <ippGetInteger@plt+0x4168>
    5a44:	mov	r4, r0
    5a48:	ldr	r2, [sp, #60]	; 0x3c
    5a4c:	ldr	r3, [r8]
    5a50:	mov	r0, r4
    5a54:	cmp	r2, r3
    5a58:	bne	5a64 <ippGetInteger@plt+0x42f4>
    5a5c:	add	sp, sp, #68	; 0x44
    5a60:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5a64:	bl	15d8 <__stack_chk_fail@plt>
    5a68:			; <UNDEFINED> instruction: 0x000124b0
    5a6c:	andeq	r0, r0, ip, ror #2
    5a70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5a74:	add	r7, sp, #32
    5a78:	mov	r4, r3
    5a7c:	ldm	r7, {r7, r8, r9}
    5a80:	ldr	r5, [sp, #44]	; 0x2c
    5a84:	ldr	r6, [sp, #48]	; 0x30
    5a88:	bl	1428 <avahi_service_browser_get_client@plt>
    5a8c:	ldr	r3, [pc, #124]	; 5b10 <ippGetInteger@plt+0x43a0>
    5a90:	cmp	r4, #0
    5a94:	add	r3, pc, r3
    5a98:	beq	5aec <ippGetInteger@plt+0x437c>
    5a9c:	cmp	r4, #4
    5aa0:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    5aa4:	ldr	r2, [pc, #104]	; 5b14 <ippGetInteger@plt+0x43a4>
    5aa8:	ldr	r3, [r3, r2]
    5aac:	ldr	r4, [r3]
    5ab0:	bl	16ec <avahi_client_errno@plt>
    5ab4:	bl	1500 <avahi_strerror@plt>
    5ab8:	ldr	r2, [pc, #88]	; 5b18 <ippGetInteger@plt+0x43a8>
    5abc:	mov	r1, #1
    5ac0:	add	r2, pc, r2
    5ac4:	mov	r3, r0
    5ac8:	mov	r0, r4
    5acc:	bl	14d0 <__fprintf_chk@plt>
    5ad0:	ldr	r3, [pc, #68]	; 5b1c <ippGetInteger@plt+0x43ac>
    5ad4:	mov	r2, #1
    5ad8:	add	r3, pc, r3
    5adc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    5ae0:	ldr	r0, [r3, #12]
    5ae4:	str	r2, [r3, #8]
    5ae8:	b	1518 <avahi_simple_poll_quit@plt>
    5aec:	mov	r3, r9
    5af0:	mov	r2, r8
    5af4:	mov	r1, r7
    5af8:	mov	r0, r6
    5afc:	bl	59a8 <ippGetInteger@plt+0x4238>
    5b00:	tst	r5, #8
    5b04:	movne	r3, #1
    5b08:	strne	r3, [r0, #44]	; 0x2c
    5b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5b10:	andeq	r2, r1, ip, asr #7
    5b14:	andeq	r0, r0, r4, ror r1
    5b18:	andeq	r1, r0, ip, lsl #5
    5b1c:	andeq	r2, r1, ip, lsr r5
    5b20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5b24:	mov	r7, r0
    5b28:	ldr	r6, [pc, #72]	; 5b78 <ippGetInteger@plt+0x4408>
    5b2c:	ldr	r5, [pc, #72]	; 5b7c <ippGetInteger@plt+0x440c>
    5b30:	add	r6, pc, r6
    5b34:	add	r5, pc, r5
    5b38:	sub	r6, r6, r5
    5b3c:	mov	r8, r1
    5b40:	mov	r9, r2
    5b44:	bl	133c <httpAddrFreeList@plt-0x20>
    5b48:	asrs	r6, r6, #2
    5b4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    5b50:	mov	r4, #0
    5b54:	add	r4, r4, #1
    5b58:	ldr	r3, [r5], #4
    5b5c:	mov	r2, r9
    5b60:	mov	r1, r8
    5b64:	mov	r0, r7
    5b68:	blx	r3
    5b6c:	cmp	r6, r4
    5b70:	bne	5b54 <ippGetInteger@plt+0x43e4>
    5b74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5b78:	andeq	r2, r1, ip, lsr #3
    5b7c:	andeq	r2, r1, r4, lsr #3
    5b80:	bx	lr

Disassembly of section .fini:

00005b84 <.fini>:
    5b84:	push	{r3, lr}
    5b88:	pop	{r3, pc}
