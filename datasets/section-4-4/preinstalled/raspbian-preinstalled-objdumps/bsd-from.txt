
raspbian-preinstalled/bsd-from:     file format elf32-littlearm


Disassembly of section .init:

000106d8 <.init>:
   106d8:	push	{r3, lr}
   106dc:	bl	10b98 <__snprintf_chk@plt+0x3a4>
   106e0:	pop	{r3, pc}

Disassembly of section .plt:

000106e4 <getpwuid@plt-0x14>:
   106e4:	push	{lr}		; (str lr, [sp, #-4]!)
   106e8:	ldr	lr, [pc, #4]	; 106f4 <getpwuid@plt-0x4>
   106ec:	add	lr, pc, lr
   106f0:	ldr	pc, [lr, #8]!
   106f4:	andeq	r1, r1, ip, lsl #18

000106f8 <getpwuid@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2316]!	; 0x90c

00010704 <fopen@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2308]!	; 0x904

00010710 <getuid@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2300]!	; 0x8fc

0001071c <fgets@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2292]!	; 0x8f4

00010728 <__stack_chk_fail@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2284]!	; 0x8ec

00010734 <chdir@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010740 <fwrite@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2268]!	; 0x8dc

0001074c <opendir@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2260]!	; 0x8d4

00010758 <getenv@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2252]!	; 0x8cc

00010764 <__libc_start_main@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010770 <__ctype_tolower_loc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2236]!	; 0x8bc

0001077c <__gmon_start__@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2228]!	; 0x8b4

00010788 <__ctype_b_loc@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2220]!	; 0x8ac

00010794 <exit@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2212]!	; 0x8a4

000107a0 <getopt@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2204]!	; 0x89c

000107ac <__printf_chk@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2196]!	; 0x894

000107b8 <errx@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2188]!	; 0x88c

000107c4 <readdir@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2180]!	; 0x884

000107d0 <__lxstat@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2172]!	; 0x87c

000107dc <strncmp@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2164]!	; 0x874

000107e8 <abort@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2156]!	; 0x86c

000107f4 <__snprintf_chk@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2148]!	; 0x864

Disassembly of section .text:

00010800 <.text>:
   10800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10804:	sub	sp, sp, #8256	; 0x2040
   10808:	ldr	r3, [pc, #764]	; 10b0c <__snprintf_chk@plt+0x318>
   1080c:	sub	sp, sp, #52	; 0x34
   10810:	add	r2, sp, #8256	; 0x2040
   10814:	mov	r5, #0
   10818:	ldr	r8, [pc, #752]	; 10b10 <__snprintf_chk@plt+0x31c>
   1081c:	ldr	fp, [pc, #752]	; 10b14 <__snprintf_chk@plt+0x320>
   10820:	ldr	r3, [r3]
   10824:	add	r2, r2, #44	; 0x2c
   10828:	mov	r6, r0
   1082c:	mov	r7, r1
   10830:	mov	r9, r5
   10834:	mvn	sl, #0
   10838:	str	r3, [r2]
   1083c:	mov	r2, r8
   10840:	mov	r1, r7
   10844:	mov	r0, r6
   10848:	bl	107a0 <getopt@plt>
   1084c:	cmn	r0, #1
   10850:	beq	108d0 <__snprintf_chk@plt+0xdc>
   10854:	cmp	r0, #102	; 0x66
   10858:	beq	1088c <__snprintf_chk@plt+0x98>
   1085c:	cmp	r0, #115	; 0x73
   10860:	beq	1089c <__snprintf_chk@plt+0xa8>
   10864:	cmp	r0, #99	; 0x63
   10868:	beq	10894 <__snprintf_chk@plt+0xa0>
   1086c:	ldr	r3, [pc, #676]	; 10b18 <__snprintf_chk@plt+0x324>
   10870:	mov	r2, #46	; 0x2e
   10874:	mov	r1, #1
   10878:	ldr	r3, [r3]
   1087c:	ldr	r0, [pc, #664]	; 10b1c <__snprintf_chk@plt+0x328>
   10880:	bl	10740 <fwrite@plt>
   10884:	mov	r0, #1
   10888:	bl	10794 <exit@plt>
   1088c:	ldr	r9, [fp]
   10890:	b	1083c <__snprintf_chk@plt+0x48>
   10894:	mov	sl, #0
   10898:	b	1083c <__snprintf_chk@plt+0x48>
   1089c:	ldr	r5, [fp]
   108a0:	ldrb	r4, [r5]
   108a4:	cmp	r4, #0
   108a8:	beq	1083c <__snprintf_chk@plt+0x48>
   108ac:	bl	10770 <__ctype_tolower_loc@plt>
   108b0:	mov	r3, r5
   108b4:	ldr	r2, [r0]
   108b8:	ldr	r2, [r2, r4, lsl #2]
   108bc:	strb	r2, [r3]
   108c0:	ldrb	r4, [r3, #1]!
   108c4:	cmp	r4, #0
   108c8:	bne	108b4 <__snprintf_chk@plt+0xc0>
   108cc:	b	1083c <__snprintf_chk@plt+0x48>
   108d0:	cmp	r9, #0
   108d4:	beq	10994 <__snprintf_chk@plt+0x1a0>
   108d8:	ldrb	r3, [r9]
   108dc:	cmp	r3, #45	; 0x2d
   108e0:	bne	10948 <__snprintf_chk@plt+0x154>
   108e4:	ldrb	r3, [r9, #1]
   108e8:	cmp	r3, #0
   108ec:	bne	10948 <__snprintf_chk@plt+0x154>
   108f0:	ldr	r3, [pc, #552]	; 10b20 <__snprintf_chk@plt+0x32c>
   108f4:	ldr	r2, [r3]
   108f8:	mov	r1, sl
   108fc:	mov	r0, r5
   10900:	bl	10c4c <__snprintf_chk@plt+0x458>
   10904:	mov	sl, r0
   10908:	cmn	sl, #1
   1090c:	beq	10940 <__snprintf_chk@plt+0x14c>
   10910:	ldr	r0, [pc, #524]	; 10b24 <__snprintf_chk@plt+0x330>
   10914:	ldr	r1, [pc, #524]	; 10b28 <__snprintf_chk@plt+0x334>
   10918:	cmp	sl, #1
   1091c:	ldr	r2, [pc, #520]	; 10b2c <__snprintf_chk@plt+0x338>
   10920:	ldr	r3, [pc, #520]	; 10b30 <__snprintf_chk@plt+0x33c>
   10924:	moveq	r2, r0
   10928:	moveq	r3, r1
   1092c:	str	r3, [sp]
   10930:	ldr	r1, [pc, #508]	; 10b34 <__snprintf_chk@plt+0x340>
   10934:	mov	r3, sl
   10938:	mov	r0, #1
   1093c:	bl	107ac <__printf_chk@plt>
   10940:	mov	r0, #0
   10944:	bl	10794 <exit@plt>
   10948:	add	r1, sp, #16
   1094c:	mov	r0, r9
   10950:	bl	10e7c <__snprintf_chk@plt+0x688>
   10954:	cmp	r0, #0
   10958:	bne	109d8 <__snprintf_chk@plt+0x1e4>
   1095c:	ldr	r3, [sp, #32]
   10960:	and	r3, r3, #61440	; 0xf000
   10964:	cmp	r3, #16384	; 0x4000
   10968:	bne	109d8 <__snprintf_chk@plt+0x1e4>
   1096c:	mov	r0, r9
   10970:	bl	10734 <chdir@plt>
   10974:	cmp	r0, #0
   10978:	beq	10a5c <__snprintf_chk@plt+0x268>
   1097c:	cmn	sl, #1
   10980:	beq	10940 <__snprintf_chk@plt+0x14c>
   10984:	ldr	r2, [pc, #416]	; 10b2c <__snprintf_chk@plt+0x338>
   10988:	ldr	r3, [pc, #416]	; 10b30 <__snprintf_chk@plt+0x33c>
   1098c:	mov	sl, #0
   10990:	b	1092c <__snprintf_chk@plt+0x138>
   10994:	ldr	r3, [pc, #412]	; 10b38 <__snprintf_chk@plt+0x344>
   10998:	ldr	r3, [r3]
   1099c:	cmp	r3, r6
   109a0:	beq	10a08 <__snprintf_chk@plt+0x214>
   109a4:	ldr	r0, [r7, r3, lsl #2]
   109a8:	ldr	r1, [pc, #396]	; 10b3c <__snprintf_chk@plt+0x348>
   109ac:	ldr	r2, [pc, #396]	; 10b40 <__snprintf_chk@plt+0x34c>
   109b0:	mov	r3, #8192	; 0x2000
   109b4:	str	r0, [sp, #8]
   109b8:	str	r1, [sp, #4]
   109bc:	str	r2, [sp]
   109c0:	add	r0, sp, #108	; 0x6c
   109c4:	mov	r1, r3
   109c8:	mov	r2, #1
   109cc:	mov	r9, r0
   109d0:	bl	107f4 <__snprintf_chk@plt>
   109d4:	b	108d8 <__snprintf_chk@plt+0xe4>
   109d8:	ldrb	r3, [r9]
   109dc:	cmp	r3, #45	; 0x2d
   109e0:	beq	10aec <__snprintf_chk@plt+0x2f8>
   109e4:	ldr	r1, [pc, #344]	; 10b44 <__snprintf_chk@plt+0x350>
   109e8:	mov	r0, r9
   109ec:	bl	10704 <fopen@plt>
   109f0:	subs	r2, r0, #0
   109f4:	bne	108f8 <__snprintf_chk@plt+0x104>
   109f8:	mov	r2, r9
   109fc:	ldr	r1, [pc, #324]	; 10b48 <__snprintf_chk@plt+0x354>
   10a00:	mov	r0, #1
   10a04:	bl	107b8 <errx@plt>
   10a08:	ldr	r0, [pc, #316]	; 10b4c <__snprintf_chk@plt+0x358>
   10a0c:	bl	10758 <getenv@plt>
   10a10:	subs	r9, r0, #0
   10a14:	bne	108d8 <__snprintf_chk@plt+0xe4>
   10a18:	bl	10710 <getuid@plt>
   10a1c:	bl	106f8 <getpwuid@plt>
   10a20:	cmp	r0, #0
   10a24:	beq	10ae0 <__snprintf_chk@plt+0x2ec>
   10a28:	ldr	r0, [r0]
   10a2c:	ldr	r1, [pc, #264]	; 10b3c <__snprintf_chk@plt+0x348>
   10a30:	ldr	r2, [pc, #264]	; 10b40 <__snprintf_chk@plt+0x34c>
   10a34:	mov	r3, #8192	; 0x2000
   10a38:	str	r0, [sp, #8]
   10a3c:	str	r1, [sp, #4]
   10a40:	str	r2, [sp]
   10a44:	add	r0, sp, #108	; 0x6c
   10a48:	mov	r1, r3
   10a4c:	mov	r2, #1
   10a50:	bl	107f4 <__snprintf_chk@plt>
   10a54:	add	r9, sp, #108	; 0x6c
   10a58:	b	108d8 <__snprintf_chk@plt+0xe4>
   10a5c:	ldr	r0, [pc, #236]	; 10b50 <__snprintf_chk@plt+0x35c>
   10a60:	bl	10734 <chdir@plt>
   10a64:	cmp	r0, #0
   10a68:	bne	1097c <__snprintf_chk@plt+0x188>
   10a6c:	ldr	r0, [pc, #224]	; 10b54 <__snprintf_chk@plt+0x360>
   10a70:	bl	1074c <opendir@plt>
   10a74:	subs	r7, r0, #0
   10a78:	beq	1097c <__snprintf_chk@plt+0x188>
   10a7c:	ldr	r6, [pc, #192]	; 10b44 <__snprintf_chk@plt+0x350>
   10a80:	mov	r0, r7
   10a84:	bl	107c4 <readdir@plt>
   10a88:	cmp	r0, #0
   10a8c:	beq	10908 <__snprintf_chk@plt+0x114>
   10a90:	add	r4, r0, #11
   10a94:	mov	r0, r4
   10a98:	add	r1, sp, #16
   10a9c:	bl	10e7c <__snprintf_chk@plt+0x688>
   10aa0:	cmp	r0, #0
   10aa4:	bne	10a80 <__snprintf_chk@plt+0x28c>
   10aa8:	ldr	r3, [sp, #32]
   10aac:	and	r3, r3, #61440	; 0xf000
   10ab0:	cmp	r3, #32768	; 0x8000
   10ab4:	bne	10a80 <__snprintf_chk@plt+0x28c>
   10ab8:	mov	r1, r6
   10abc:	mov	r0, r4
   10ac0:	bl	10704 <fopen@plt>
   10ac4:	subs	r2, r0, #0
   10ac8:	beq	10afc <__snprintf_chk@plt+0x308>
   10acc:	mov	r1, sl
   10ad0:	mov	r0, r5
   10ad4:	bl	10c4c <__snprintf_chk@plt+0x458>
   10ad8:	mov	sl, r0
   10adc:	b	10a80 <__snprintf_chk@plt+0x28c>
   10ae0:	ldr	r1, [pc, #112]	; 10b58 <__snprintf_chk@plt+0x364>
   10ae4:	mov	r0, #1
   10ae8:	bl	107b8 <errx@plt>
   10aec:	ldrb	r3, [r9, #1]
   10af0:	cmp	r3, #0
   10af4:	beq	108f0 <__snprintf_chk@plt+0xfc>
   10af8:	b	109e4 <__snprintf_chk@plt+0x1f0>
   10afc:	mov	r2, r4
   10b00:	ldr	r1, [pc, #64]	; 10b48 <__snprintf_chk@plt+0x354>
   10b04:	mov	r0, #1
   10b08:	bl	107b8 <errx@plt>
   10b0c:	andeq	r1, r2, r8, lsl #30
   10b10:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10b14:	andeq	r2, r2, r8, lsl #1
   10b18:	andeq	r2, r2, r8, ror r0
   10b1c:	andeq	r0, r1, r0, asr #29
   10b20:	andeq	r2, r2, r0, lsl #1
   10b24:			; <UNDEFINED> instruction: 0x00010eb8
   10b28:	andeq	r0, r1, r0, lsl #31
   10b2c:			; <UNDEFINED> instruction: 0x00010ebc
   10b30:	andeq	r0, r1, ip, asr #30
   10b34:	andeq	r0, r1, r0, asr pc
   10b38:	andeq	r2, r2, r0, ror r0
   10b3c:	strdeq	r0, [r1], -r8
   10b40:	andeq	r0, r1, r4, lsl #30
   10b44:	andeq	r0, r1, ip, lsr pc
   10b48:	andeq	r0, r1, r0, asr #30
   10b4c:	andeq	r0, r1, ip, lsl #30
   10b50:	andeq	r0, r1, r4, lsr pc
   10b54:	andeq	r0, r1, r8, lsr pc
   10b58:	andeq	r0, r1, r4, lsl pc
   10b5c:	mov	fp, #0
   10b60:	mov	lr, #0
   10b64:	pop	{r1}		; (ldr r1, [sp], #4)
   10b68:	mov	r2, sp
   10b6c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b70:	push	{r0}		; (str r0, [sp, #-4]!)
   10b74:	ldr	ip, [pc, #16]	; 10b8c <__snprintf_chk@plt+0x398>
   10b78:	push	{ip}		; (str ip, [sp, #-4]!)
   10b7c:	ldr	r0, [pc, #12]	; 10b90 <__snprintf_chk@plt+0x39c>
   10b80:	ldr	r3, [pc, #12]	; 10b94 <__snprintf_chk@plt+0x3a0>
   10b84:	bl	10764 <__libc_start_main@plt>
   10b88:	bl	107e8 <abort@plt>
   10b8c:	andeq	r0, r1, r8, ror lr
   10b90:	andeq	r0, r1, r0, lsl #16
   10b94:	andeq	r0, r1, r8, lsl lr
   10b98:	ldr	r3, [pc, #20]	; 10bb4 <__snprintf_chk@plt+0x3c0>
   10b9c:	ldr	r2, [pc, #20]	; 10bb8 <__snprintf_chk@plt+0x3c4>
   10ba0:	add	r3, pc, r3
   10ba4:	ldr	r2, [r3, r2]
   10ba8:	cmp	r2, #0
   10bac:	bxeq	lr
   10bb0:	b	1077c <__gmon_start__@plt>
   10bb4:	andeq	r1, r1, r8, asr r4
   10bb8:	andeq	r0, r0, r4, rrx
   10bbc:	ldr	r0, [pc, #24]	; 10bdc <__snprintf_chk@plt+0x3e8>
   10bc0:	ldr	r3, [pc, #24]	; 10be0 <__snprintf_chk@plt+0x3ec>
   10bc4:	cmp	r3, r0
   10bc8:	bxeq	lr
   10bcc:	ldr	r3, [pc, #16]	; 10be4 <__snprintf_chk@plt+0x3f0>
   10bd0:	cmp	r3, #0
   10bd4:	bxeq	lr
   10bd8:	bx	r3
   10bdc:	andeq	r2, r2, r0, ror r0
   10be0:	andeq	r2, r2, r0, ror r0
   10be4:	andeq	r0, r0, r0
   10be8:	ldr	r0, [pc, #36]	; 10c14 <__snprintf_chk@plt+0x420>
   10bec:	ldr	r1, [pc, #36]	; 10c18 <__snprintf_chk@plt+0x424>
   10bf0:	sub	r1, r1, r0
   10bf4:	asr	r1, r1, #2
   10bf8:	add	r1, r1, r1, lsr #31
   10bfc:	asrs	r1, r1, #1
   10c00:	bxeq	lr
   10c04:	ldr	r3, [pc, #16]	; 10c1c <__snprintf_chk@plt+0x428>
   10c08:	cmp	r3, #0
   10c0c:	bxeq	lr
   10c10:	bx	r3
   10c14:	andeq	r2, r2, r0, ror r0
   10c18:	andeq	r2, r2, r0, ror r0
   10c1c:	andeq	r0, r0, r0
   10c20:	push	{r4, lr}
   10c24:	ldr	r4, [pc, #24]	; 10c44 <__snprintf_chk@plt+0x450>
   10c28:	ldrb	r3, [r4]
   10c2c:	cmp	r3, #0
   10c30:	popne	{r4, pc}
   10c34:	bl	10bbc <__snprintf_chk@plt+0x3c8>
   10c38:	mov	r3, #1
   10c3c:	strb	r3, [r4]
   10c40:	pop	{r4, pc}
   10c44:	andeq	r2, r2, ip, lsl #1
   10c48:	b	10be8 <__snprintf_chk@plt+0x3f4>
   10c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c50:	sub	sp, sp, #8192	; 0x2000
   10c54:	ldr	r3, [pc, #424]	; 10e04 <__snprintf_chk@plt+0x610>
   10c58:	sub	sp, sp, #28
   10c5c:	mov	r5, r2
   10c60:	ldr	sl, [pc, #416]	; 10e08 <__snprintf_chk@plt+0x614>
   10c64:	add	r2, sp, #8192	; 0x2000
   10c68:	ldr	r6, [pc, #412]	; 10e0c <__snprintf_chk@plt+0x618>
   10c6c:	ldr	r3, [r3]
   10c70:	add	r2, r2, #20
   10c74:	mov	r8, r0
   10c78:	mov	r7, r1
   10c7c:	mov	r4, #1
   10c80:	str	r3, [r2]
   10c84:	mov	r2, r5
   10c88:	mov	r1, #8192	; 0x2000
   10c8c:	add	r0, sp, #20
   10c90:	bl	1071c <fgets@plt>
   10c94:	cmp	r0, #0
   10c98:	beq	10d88 <__snprintf_chk@plt+0x594>
   10c9c:	ldrb	r3, [sp, #20]
   10ca0:	cmp	r3, #10
   10ca4:	moveq	r4, #1
   10ca8:	beq	10c84 <__snprintf_chk@plt+0x490>
   10cac:	cmp	r4, #0
   10cb0:	beq	10c84 <__snprintf_chk@plt+0x490>
   10cb4:	mov	r2, #14
   10cb8:	mov	r1, sl
   10cbc:	add	r0, sp, #20
   10cc0:	bl	107dc <strncmp@plt>
   10cc4:	cmp	r0, #0
   10cc8:	beq	10db4 <__snprintf_chk@plt+0x5c0>
   10ccc:	mov	r2, #5
   10cd0:	mov	r1, r6
   10cd4:	add	r0, sp, #20
   10cd8:	bl	107dc <strncmp@plt>
   10cdc:	subs	r4, r0, #0
   10ce0:	movne	r4, #0
   10ce4:	bne	10c84 <__snprintf_chk@plt+0x490>
   10ce8:	cmp	r8, #0
   10cec:	beq	10d68 <__snprintf_chk@plt+0x574>
   10cf0:	bl	10788 <__ctype_b_loc@plt>
   10cf4:	ldrb	r3, [r8]
   10cf8:	add	fp, sp, #25
   10cfc:	str	r3, [sp, #8]
   10d00:	add	r3, r8, #1
   10d04:	str	r3, [sp, #12]
   10d08:	ldr	r3, [r0]
   10d0c:	str	r3, [sp, #4]
   10d10:	ldrb	r9, [fp], #1
   10d14:	ldr	r2, [sp, #4]
   10d18:	lsl	r3, r9, #1
   10d1c:	ldrh	r3, [r2, r3]
   10d20:	tst	r3, #8192	; 0x2000
   10d24:	bne	10c84 <__snprintf_chk@plt+0x490>
   10d28:	bl	10770 <__ctype_tolower_loc@plt>
   10d2c:	ldr	r1, [sp, #8]
   10d30:	mov	r2, fp
   10d34:	ldr	ip, [r0]
   10d38:	ldrb	r3, [ip, r9, lsl #2]
   10d3c:	cmp	r1, r3
   10d40:	bne	10d10 <__snprintf_chk@plt+0x51c>
   10d44:	ldr	r1, [sp, #12]
   10d48:	b	10d5c <__snprintf_chk@plt+0x568>
   10d4c:	ldrb	r0, [r2], #1
   10d50:	ldrb	r0, [ip, r0, lsl #2]
   10d54:	cmp	r3, r0
   10d58:	bne	10d10 <__snprintf_chk@plt+0x51c>
   10d5c:	ldrb	r3, [r1], #1
   10d60:	cmp	r3, #0
   10d64:	bne	10d4c <__snprintf_chk@plt+0x558>
   10d68:	cmn	r7, #1
   10d6c:	addne	r7, r7, #1
   10d70:	bne	10c84 <__snprintf_chk@plt+0x490>
   10d74:	add	r2, sp, #20
   10d78:	ldr	r1, [pc, #144]	; 10e10 <__snprintf_chk@plt+0x61c>
   10d7c:	mov	r0, #1
   10d80:	bl	107ac <__printf_chk@plt>
   10d84:	b	10c84 <__snprintf_chk@plt+0x490>
   10d88:	add	r3, sp, #8192	; 0x2000
   10d8c:	add	r3, r3, #20
   10d90:	ldr	r2, [r3]
   10d94:	ldr	r3, [pc, #104]	; 10e04 <__snprintf_chk@plt+0x610>
   10d98:	mov	r0, r7
   10d9c:	ldr	r3, [r3]
   10da0:	cmp	r2, r3
   10da4:	bne	10e00 <__snprintf_chk@plt+0x60c>
   10da8:	add	sp, sp, #8192	; 0x2000
   10dac:	add	sp, sp, #28
   10db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10db4:	ldrb	r3, [sp, #34]	; 0x22
   10db8:	ldm	r6, {r0, r1}
   10dbc:	cmp	r3, #62	; 0x3e
   10dc0:	strh	r1, [sp, #24]
   10dc4:	str	r0, [sp, #20]
   10dc8:	moveq	r1, #5
   10dcc:	beq	10dec <__snprintf_chk@plt+0x5f8>
   10dd0:	add	r2, sp, #25
   10dd4:	mov	r1, #5
   10dd8:	strb	r3, [r2], #1
   10ddc:	ldrb	r3, [r2, #9]
   10de0:	add	r1, r1, #1
   10de4:	cmp	r3, #62	; 0x3e
   10de8:	bne	10dd8 <__snprintf_chk@plt+0x5e4>
   10dec:	ldr	r3, [pc, #32]	; 10e14 <__snprintf_chk@plt+0x620>
   10df0:	add	r2, sp, #20
   10df4:	ldrh	r3, [r3]
   10df8:	strh	r3, [r2, r1]
   10dfc:	b	10ccc <__snprintf_chk@plt+0x4d8>
   10e00:	bl	10728 <__stack_chk_fail@plt>
   10e04:	andeq	r1, r2, r8, lsl #30
   10e08:	muleq	r1, r8, lr
   10e0c:	andeq	r0, r1, r8, lsr #29
   10e10:			; <UNDEFINED> instruction: 0x00010eb4
   10e14:			; <UNDEFINED> instruction: 0x00010eb0
   10e18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e1c:	mov	r7, r0
   10e20:	ldr	r6, [pc, #72]	; 10e70 <__snprintf_chk@plt+0x67c>
   10e24:	ldr	r5, [pc, #72]	; 10e74 <__snprintf_chk@plt+0x680>
   10e28:	add	r6, pc, r6
   10e2c:	add	r5, pc, r5
   10e30:	sub	r6, r6, r5
   10e34:	mov	r8, r1
   10e38:	mov	r9, r2
   10e3c:	bl	106d8 <getpwuid@plt-0x20>
   10e40:	asrs	r6, r6, #2
   10e44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e48:	mov	r4, #0
   10e4c:	add	r4, r4, #1
   10e50:	ldr	r3, [r5], #4
   10e54:	mov	r2, r9
   10e58:	mov	r1, r8
   10e5c:	mov	r0, r7
   10e60:	blx	r3
   10e64:	cmp	r6, r4
   10e68:	bne	10e4c <__snprintf_chk@plt+0x658>
   10e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e70:	ldrdeq	r1, [r1], -r4
   10e74:	andeq	r1, r1, ip, asr #1
   10e78:	bx	lr
   10e7c:	mov	r2, r1
   10e80:	mov	r1, r0
   10e84:	mov	r0, #3
   10e88:	b	107d0 <__lxstat@plt>

Disassembly of section .fini:

00010e8c <.fini>:
   10e8c:	push	{r3, lr}
   10e90:	pop	{r3, pc}
