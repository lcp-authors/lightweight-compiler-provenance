
raspbian-preinstalled/ipcmk:     file format elf32-littlearm


Disassembly of section .init:

00010eb4 <.init>:
   10eb4:	push	{r3, lr}
   10eb8:	bl	117bc <strspn@plt+0x5f4>
   10ebc:	pop	{r3, pc}

Disassembly of section .plt:

00010ec0 <raise@plt-0x14>:
   10ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec4:	ldr	lr, [pc, #4]	; 10ed0 <raise@plt-0x4>
   10ec8:	add	lr, pc, lr
   10ecc:	ldr	pc, [lr, #8]!
   10ed0:	andeq	r4, r1, r4, lsl r0

00010ed4 <raise@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #20]!

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #12]!

00010eec <strtol@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #4]!

00010ef8 <srandom@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #77824	; 0x13000
   10f00:	ldr	pc, [ip, #4092]!	; 0xffc

00010f04 <strcspn@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #77824	; 0x13000
   10f0c:	ldr	pc, [ip, #4084]!	; 0xff4

00010f10 <read@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #77824	; 0x13000
   10f18:	ldr	pc, [ip, #4076]!	; 0xfec

00010f1c <getuid@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #77824	; 0x13000
   10f24:	ldr	pc, [ip, #4068]!	; 0xfe4

00010f28 <free@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #77824	; 0x13000
   10f30:	ldr	pc, [ip, #4060]!	; 0xfdc

00010f34 <nanosleep@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #77824	; 0x13000
   10f3c:	ldr	pc, [ip, #4052]!	; 0xfd4

00010f40 <ferror@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #77824	; 0x13000
   10f48:	ldr	pc, [ip, #4044]!	; 0xfcc

00010f4c <strndup@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #4036]!	; 0xfc4

00010f58 <_exit@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #77824	; 0x13000
   10f60:	ldr	pc, [ip, #4028]!	; 0xfbc

00010f64 <memcpy@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #77824	; 0x13000
   10f6c:	ldr	pc, [ip, #4020]!	; 0xfb4

00010f70 <shmget@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #77824	; 0x13000
   10f78:	ldr	pc, [ip, #4012]!	; 0xfac

00010f7c <__strtoull_internal@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #77824	; 0x13000
   10f84:	ldr	pc, [ip, #4004]!	; 0xfa4

00010f88 <jrand48@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #77824	; 0x13000
   10f90:	ldr	pc, [ip, #3996]!	; 0xf9c

00010f94 <dcgettext@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #77824	; 0x13000
   10f9c:	ldr	pc, [ip, #3988]!	; 0xf94

00010fa0 <strdup@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #77824	; 0x13000
   10fa8:	ldr	pc, [ip, #3980]!	; 0xf8c

00010fac <__stack_chk_fail@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #77824	; 0x13000
   10fb4:	ldr	pc, [ip, #3972]!	; 0xf84

00010fb8 <textdomain@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #77824	; 0x13000
   10fc0:	ldr	pc, [ip, #3964]!	; 0xf7c

00010fc4 <err@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #77824	; 0x13000
   10fcc:	ldr	pc, [ip, #3956]!	; 0xf74

00010fd0 <gettimeofday@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #77824	; 0x13000
   10fd8:	ldr	pc, [ip, #3948]!	; 0xf6c

00010fdc <__fpending@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #77824	; 0x13000
   10fe4:	ldr	pc, [ip, #3940]!	; 0xf64

00010fe8 <open64@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #77824	; 0x13000
   10ff0:	ldr	pc, [ip, #3932]!	; 0xf5c

00010ff4 <malloc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #77824	; 0x13000
   10ffc:	ldr	pc, [ip, #3924]!	; 0xf54

00011000 <__libc_start_main@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #77824	; 0x13000
   11008:	ldr	pc, [ip, #3916]!	; 0xf4c

0001100c <__gmon_start__@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #77824	; 0x13000
   11014:	ldr	pc, [ip, #3908]!	; 0xf44

00011018 <getopt_long@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #77824	; 0x13000
   11020:	ldr	pc, [ip, #3900]!	; 0xf3c

00011024 <__ctype_b_loc@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #77824	; 0x13000
   1102c:	ldr	pc, [ip, #3892]!	; 0xf34

00011030 <getpid@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #77824	; 0x13000
   11038:	ldr	pc, [ip, #3884]!	; 0xf2c

0001103c <exit@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #77824	; 0x13000
   11044:	ldr	pc, [ip, #3876]!	; 0xf24

00011048 <syscall@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #77824	; 0x13000
   11050:	ldr	pc, [ip, #3868]!	; 0xf1c

00011054 <strtoul@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #77824	; 0x13000
   1105c:	ldr	pc, [ip, #3860]!	; 0xf14

00011060 <strlen@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #77824	; 0x13000
   11068:	ldr	pc, [ip, #3852]!	; 0xf0c

0001106c <strchr@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #77824	; 0x13000
   11074:	ldr	pc, [ip, #3844]!	; 0xf04

00011078 <warnx@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #77824	; 0x13000
   11080:	ldr	pc, [ip, #3836]!	; 0xefc

00011084 <__errno_location@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #77824	; 0x13000
   1108c:	ldr	pc, [ip, #3828]!	; 0xef4

00011090 <__cxa_atexit@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #77824	; 0x13000
   11098:	ldr	pc, [ip, #3820]!	; 0xeec

0001109c <__vasprintf_chk@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #77824	; 0x13000
   110a4:	ldr	pc, [ip, #3812]!	; 0xee4

000110a8 <semget@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #77824	; 0x13000
   110b0:	ldr	pc, [ip, #3804]!	; 0xedc

000110b4 <fgetc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #77824	; 0x13000
   110bc:	ldr	pc, [ip, #3796]!	; 0xed4

000110c0 <__printf_chk@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #77824	; 0x13000
   110c8:	ldr	pc, [ip, #3788]!	; 0xecc

000110cc <strtod@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #77824	; 0x13000
   110d4:	ldr	pc, [ip, #3780]!	; 0xec4

000110d8 <__fprintf_chk@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #3772]!	; 0xebc

000110e4 <fclose@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #3764]!	; 0xeb4

000110f0 <fcntl64@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #3756]!	; 0xeac

000110fc <setlocale@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #3748]!	; 0xea4

00011108 <errx@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #3740]!	; 0xe9c

00011114 <warn@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #77824	; 0x13000
   1111c:	ldr	pc, [ip, #3732]!	; 0xe94

00011120 <fputc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #77824	; 0x13000
   11128:	ldr	pc, [ip, #3724]!	; 0xe8c

0001112c <localeconv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #77824	; 0x13000
   11134:	ldr	pc, [ip, #3716]!	; 0xe84

00011138 <getppid@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #77824	; 0x13000
   11140:	ldr	pc, [ip, #3708]!	; 0xe7c

00011144 <__strtoll_internal@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #77824	; 0x13000
   1114c:	ldr	pc, [ip, #3700]!	; 0xe74

00011150 <msgget@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #77824	; 0x13000
   11158:	ldr	pc, [ip, #3692]!	; 0xe6c

0001115c <bindtextdomain@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #77824	; 0x13000
   11164:	ldr	pc, [ip, #3684]!	; 0xe64

00011168 <__tls_get_addr@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #77824	; 0x13000
   11170:	ldr	pc, [ip, #3676]!	; 0xe5c

00011174 <getrandom@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #77824	; 0x13000
   1117c:	ldr	pc, [ip, #3668]!	; 0xe54

00011180 <random@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #77824	; 0x13000
   11188:	ldr	pc, [ip, #3660]!	; 0xe4c

0001118c <fputs@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #77824	; 0x13000
   11194:	ldr	pc, [ip, #3652]!	; 0xe44

00011198 <strncmp@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #77824	; 0x13000
   111a0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #77824	; 0x13000
   111ac:	ldr	pc, [ip, #3636]!	; 0xe34

000111b0 <close@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #77824	; 0x13000
   111b8:	ldr	pc, [ip, #3628]!	; 0xe2c

000111bc <__snprintf_chk@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #77824	; 0x13000
   111c4:	ldr	pc, [ip, #3620]!	; 0xe24

000111c8 <strspn@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #77824	; 0x13000
   111d0:	ldr	pc, [ip, #3612]!	; 0xe1c

Disassembly of section .text:

000111d8 <.text>:
   111d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111dc:	sub	sp, sp, #44	; 0x2c
   111e0:	ldr	fp, [pc, #1280]	; 116e8 <strspn@plt+0x520>
   111e4:	mov	r9, r0
   111e8:	mov	r8, r1
   111ec:	ldr	r3, [fp]
   111f0:	ldr	r1, [pc, #1268]	; 116ec <strspn@plt+0x524>
   111f4:	mov	r0, #6
   111f8:	str	r3, [sp, #36]	; 0x24
   111fc:	bl	110fc <setlocale@plt>
   11200:	ldr	r1, [pc, #1256]	; 116f0 <strspn@plt+0x528>
   11204:	ldr	r0, [pc, #1256]	; 116f4 <strspn@plt+0x52c>
   11208:	mov	r4, #0
   1120c:	bl	1115c <bindtextdomain@plt>
   11210:	ldr	r6, [pc, #1248]	; 116f8 <strspn@plt+0x530>
   11214:	ldr	r0, [pc, #1240]	; 116f4 <strspn@plt+0x52c>
   11218:	ldr	r5, [pc, #1244]	; 116fc <strspn@plt+0x534>
   1121c:	ldr	sl, [pc, #1244]	; 11700 <strspn@plt+0x538>
   11220:	bl	10fb8 <textdomain@plt>
   11224:	mov	r7, r4
   11228:	ldr	r0, [pc, #1236]	; 11704 <strspn@plt+0x53c>
   1122c:	bl	14178 <strspn@plt+0x2fb0>
   11230:	mov	r3, #420	; 0x1a4
   11234:	str	r4, [sp, #16]
   11238:	str	r4, [sp, #12]
   1123c:	str	r4, [sp, #28]
   11240:	str	r4, [sp, #24]
   11244:	str	r3, [sp, #20]
   11248:	str	r7, [sp]
   1124c:	mov	r3, r6
   11250:	mov	r2, r5
   11254:	mov	r1, r8
   11258:	mov	r0, r9
   1125c:	bl	11018 <getopt_long@plt>
   11260:	cmn	r0, #1
   11264:	beq	113d4 <strspn@plt+0x20c>
   11268:	sub	r0, r0, #77	; 0x4d
   1126c:	cmp	r0, #35	; 0x23
   11270:	ldrls	pc, [pc, r0, lsl #2]
   11274:	b	11604 <strspn@plt+0x43c>
   11278:	andeq	r1, r1, r4, lsl r3
   1127c:	andeq	r1, r1, r4, lsl #12
   11280:	andeq	r1, r1, r4, lsl #12
   11284:	andeq	r1, r1, r4, lsl #12
   11288:	andeq	r1, r1, r8, lsl #6
   1128c:	andeq	r1, r1, r4, lsl #12
   11290:	andeq	r1, r1, r8, lsr #7
   11294:	andeq	r1, r1, r4, lsl #12
   11298:	andeq	r1, r1, r4, lsl #12
   1129c:	andeq	r1, r1, r4, ror #6
   112a0:	andeq	r1, r1, r4, lsl #12
   112a4:	andeq	r1, r1, r4, lsl #12
   112a8:	andeq	r1, r1, r4, lsl #12
   112ac:	andeq	r1, r1, r4, lsl #12
   112b0:	andeq	r1, r1, r4, lsl #12
   112b4:	andeq	r1, r1, r4, lsl #12
   112b8:	andeq	r1, r1, r4, lsl #12
   112bc:	andeq	r1, r1, r4, lsl #12
   112c0:	andeq	r1, r1, r4, lsl #12
   112c4:	andeq	r1, r1, r4, lsl #12
   112c8:	andeq	r1, r1, r4, lsl #12
   112cc:	andeq	r1, r1, r4, lsl #12
   112d0:	andeq	r1, r1, r4, lsl #12
   112d4:	andeq	r1, r1, r4, lsl #12
   112d8:	andeq	r1, r1, r4, lsl #12
   112dc:	andeq	r1, r1, r4, lsl #12
   112e0:	andeq	r1, r1, r4, lsl #12
   112e4:	andeq	r1, r1, r8, lsr #9
   112e8:	andeq	r1, r1, r4, lsl #12
   112ec:	andeq	r1, r1, r4, lsl #12
   112f0:	andeq	r1, r1, r4, lsl #12
   112f4:	andeq	r1, r1, r4, lsl #12
   112f8:	andeq	r1, r1, r4, lsl #12
   112fc:	andeq	r1, r1, r4, lsl #12
   11300:	andeq	r1, r1, r4, lsl #12
   11304:	andeq	r1, r1, ip, asr #6
   11308:	mov	r3, #1
   1130c:	str	r3, [sp, #16]
   11310:	b	11248 <strspn@plt+0x80>
   11314:	ldr	r3, [sl]
   11318:	mov	r2, #5
   1131c:	ldr	r1, [pc, #996]	; 11708 <strspn@plt+0x540>
   11320:	mov	r0, #0
   11324:	str	r3, [sp, #12]
   11328:	bl	10f94 <dcgettext@plt>
   1132c:	ldr	r3, [sp, #12]
   11330:	mov	r1, r0
   11334:	mov	r0, r3
   11338:	bl	12ed4 <strspn@plt+0x1d0c>
   1133c:	mov	r3, #1
   11340:	str	r3, [sp, #12]
   11344:	str	r0, [sp, #24]
   11348:	b	11248 <strspn@plt+0x80>
   1134c:	mov	r2, #8
   11350:	mov	r1, #0
   11354:	ldr	r0, [sl]
   11358:	bl	11054 <strtoul@plt>
   1135c:	str	r0, [sp, #20]
   11360:	b	11248 <strspn@plt+0x80>
   11364:	mov	r2, #5
   11368:	ldr	r1, [pc, #924]	; 1170c <strspn@plt+0x544>
   1136c:	mov	r0, #0
   11370:	bl	10f94 <dcgettext@plt>
   11374:	ldr	r2, [pc, #916]	; 11710 <strspn@plt+0x548>
   11378:	ldr	r3, [pc, #916]	; 11714 <strspn@plt+0x54c>
   1137c:	ldr	r2, [r2]
   11380:	mov	r1, r0
   11384:	mov	r0, #1
   11388:	bl	110c0 <__printf_chk@plt>
   1138c:	ldr	r2, [sp, #36]	; 0x24
   11390:	ldr	r3, [fp]
   11394:	mov	r0, #0
   11398:	cmp	r2, r3
   1139c:	bne	116a4 <strspn@plt+0x4dc>
   113a0:	add	sp, sp, #44	; 0x2c
   113a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #868]	; 11718 <strspn@plt+0x550>
   113b0:	mov	r0, #0
   113b4:	ldr	r4, [sl]
   113b8:	bl	10f94 <dcgettext@plt>
   113bc:	mov	r1, r0
   113c0:	mov	r0, r4
   113c4:	bl	12af8 <strspn@plt+0x1930>
   113c8:	mov	r4, #1
   113cc:	str	r0, [sp, #28]
   113d0:	b	11248 <strspn@plt+0x80>
   113d4:	ldr	r3, [sp, #16]
   113d8:	ldr	r2, [sp, #12]
   113dc:	orr	r3, r3, r4
   113e0:	orrs	r5, r3, r2
   113e4:	beq	116c0 <strspn@plt+0x4f8>
   113e8:	ldr	r3, [sp, #12]
   113ec:	cmp	r3, #0
   113f0:	bne	1163c <strspn@plt+0x474>
   113f4:	ldr	r3, [sp, #16]
   113f8:	add	r5, sp, #32
   113fc:	cmp	r3, #0
   11400:	ldr	r3, [sp, #20]
   11404:	orr	r6, r3, #512	; 0x200
   11408:	beq	11458 <strspn@plt+0x290>
   1140c:	mov	r1, #4
   11410:	mov	r0, r5
   11414:	bl	11b38 <strspn@plt+0x970>
   11418:	mov	r1, r6
   1141c:	ldr	r0, [sp, #32]
   11420:	bl	11150 <msgget@plt>
   11424:	mov	r2, #5
   11428:	cmn	r0, #1
   1142c:	mov	r7, r0
   11430:	beq	116a8 <strspn@plt+0x4e0>
   11434:	ldr	r1, [pc, #736]	; 1171c <strspn@plt+0x554>
   11438:	mov	r0, #0
   1143c:	bl	10f94 <dcgettext@plt>
   11440:	mov	r2, r7
   11444:	mov	r1, r0
   11448:	mov	r0, #1
   1144c:	bl	110c0 <__printf_chk@plt>
   11450:	cmp	r4, #0
   11454:	beq	1138c <strspn@plt+0x1c4>
   11458:	mov	r0, r5
   1145c:	mov	r1, #4
   11460:	bl	11b38 <strspn@plt+0x970>
   11464:	mov	r2, r6
   11468:	ldr	r1, [sp, #28]
   1146c:	ldr	r0, [sp, #32]
   11470:	bl	110a8 <semget@plt>
   11474:	mov	r2, #5
   11478:	cmn	r0, #1
   1147c:	mov	r4, r0
   11480:	ldreq	r1, [pc, #664]	; 11720 <strspn@plt+0x558>
   11484:	beq	116ac <strspn@plt+0x4e4>
   11488:	ldr	r1, [pc, #660]	; 11724 <strspn@plt+0x55c>
   1148c:	mov	r0, #0
   11490:	bl	10f94 <dcgettext@plt>
   11494:	mov	r2, r4
   11498:	mov	r1, r0
   1149c:	mov	r0, #1
   114a0:	bl	110c0 <__printf_chk@plt>
   114a4:	b	1138c <strspn@plt+0x1c4>
   114a8:	ldr	r3, [pc, #632]	; 11728 <strspn@plt+0x560>
   114ac:	mov	r2, #5
   114b0:	ldr	r1, [pc, #628]	; 1172c <strspn@plt+0x564>
   114b4:	ldr	r4, [r3]
   114b8:	mov	r0, #0
   114bc:	bl	10f94 <dcgettext@plt>
   114c0:	mov	r1, r4
   114c4:	bl	1118c <fputs@plt>
   114c8:	mov	r2, #5
   114cc:	ldr	r1, [pc, #604]	; 11730 <strspn@plt+0x568>
   114d0:	mov	r0, #0
   114d4:	bl	10f94 <dcgettext@plt>
   114d8:	ldr	r3, [pc, #560]	; 11710 <strspn@plt+0x548>
   114dc:	mov	r1, #1
   114e0:	ldr	r3, [r3]
   114e4:	mov	r2, r0
   114e8:	mov	r0, r4
   114ec:	bl	110d8 <__fprintf_chk@plt>
   114f0:	mov	r1, r4
   114f4:	mov	r0, #10
   114f8:	bl	11120 <fputc@plt>
   114fc:	mov	r2, #5
   11500:	ldr	r1, [pc, #556]	; 11734 <strspn@plt+0x56c>
   11504:	mov	r0, #0
   11508:	bl	10f94 <dcgettext@plt>
   1150c:	mov	r1, r4
   11510:	bl	1118c <fputs@plt>
   11514:	mov	r2, #5
   11518:	ldr	r1, [pc, #536]	; 11738 <strspn@plt+0x570>
   1151c:	mov	r0, #0
   11520:	bl	10f94 <dcgettext@plt>
   11524:	mov	r1, r4
   11528:	bl	1118c <fputs@plt>
   1152c:	mov	r2, #5
   11530:	ldr	r1, [pc, #516]	; 1173c <strspn@plt+0x574>
   11534:	mov	r0, #0
   11538:	bl	10f94 <dcgettext@plt>
   1153c:	mov	r1, r4
   11540:	bl	1118c <fputs@plt>
   11544:	mov	r2, #5
   11548:	ldr	r1, [pc, #496]	; 11740 <strspn@plt+0x578>
   1154c:	mov	r0, #0
   11550:	bl	10f94 <dcgettext@plt>
   11554:	mov	r1, r4
   11558:	bl	1118c <fputs@plt>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #476]	; 11744 <strspn@plt+0x57c>
   11564:	mov	r0, #0
   11568:	bl	10f94 <dcgettext@plt>
   1156c:	mov	r1, r4
   11570:	bl	1118c <fputs@plt>
   11574:	mov	r2, #5
   11578:	ldr	r1, [pc, #456]	; 11748 <strspn@plt+0x580>
   1157c:	mov	r0, #0
   11580:	bl	10f94 <dcgettext@plt>
   11584:	mov	r1, r4
   11588:	bl	1118c <fputs@plt>
   1158c:	mov	r1, r4
   11590:	mov	r0, #10
   11594:	bl	11120 <fputc@plt>
   11598:	mov	r2, #5
   1159c:	ldr	r1, [pc, #424]	; 1174c <strspn@plt+0x584>
   115a0:	mov	r0, #0
   115a4:	bl	10f94 <dcgettext@plt>
   115a8:	mov	r2, #5
   115ac:	ldr	r1, [pc, #412]	; 11750 <strspn@plt+0x588>
   115b0:	mov	r4, r0
   115b4:	mov	r0, #0
   115b8:	bl	10f94 <dcgettext@plt>
   115bc:	ldr	r2, [pc, #400]	; 11754 <strspn@plt+0x58c>
   115c0:	mov	r3, r4
   115c4:	str	r2, [sp]
   115c8:	ldr	r1, [pc, #392]	; 11758 <strspn@plt+0x590>
   115cc:	ldr	r2, [pc, #392]	; 1175c <strspn@plt+0x594>
   115d0:	str	r0, [sp, #4]
   115d4:	mov	r0, #1
   115d8:	bl	110c0 <__printf_chk@plt>
   115dc:	mov	r2, #5
   115e0:	ldr	r1, [pc, #376]	; 11760 <strspn@plt+0x598>
   115e4:	mov	r0, #0
   115e8:	bl	10f94 <dcgettext@plt>
   115ec:	ldr	r2, [pc, #368]	; 11764 <strspn@plt+0x59c>
   115f0:	mov	r1, r0
   115f4:	mov	r0, #1
   115f8:	bl	110c0 <__printf_chk@plt>
   115fc:	mov	r0, #0
   11600:	bl	1103c <exit@plt>
   11604:	ldr	r3, [pc, #348]	; 11768 <strspn@plt+0x5a0>
   11608:	ldr	r1, [pc, #348]	; 1176c <strspn@plt+0x5a4>
   1160c:	mov	r2, #5
   11610:	mov	r0, #0
   11614:	ldr	r4, [r3]
   11618:	bl	10f94 <dcgettext@plt>
   1161c:	ldr	r3, [pc, #236]	; 11710 <strspn@plt+0x548>
   11620:	mov	r1, #1
   11624:	ldr	r3, [r3]
   11628:	mov	r2, r0
   1162c:	mov	r0, r4
   11630:	bl	110d8 <__fprintf_chk@plt>
   11634:	mov	r0, #1
   11638:	bl	1103c <exit@plt>
   1163c:	ldr	r3, [sp, #20]
   11640:	add	r5, sp, #32
   11644:	orr	r6, r3, #512	; 0x200
   11648:	mov	r0, r5
   1164c:	mov	r1, #4
   11650:	bl	11b38 <strspn@plt+0x970>
   11654:	ldr	r1, [sp, #24]
   11658:	mov	r2, r6
   1165c:	ldr	r0, [sp, #32]
   11660:	bl	10f70 <shmget@plt>
   11664:	mov	r2, #5
   11668:	cmn	r0, #1
   1166c:	mov	r7, r0
   11670:	ldreq	r1, [pc, #248]	; 11770 <strspn@plt+0x5a8>
   11674:	beq	116ac <strspn@plt+0x4e4>
   11678:	ldr	r1, [pc, #244]	; 11774 <strspn@plt+0x5ac>
   1167c:	mov	r0, #0
   11680:	bl	10f94 <dcgettext@plt>
   11684:	mov	r2, r7
   11688:	mov	r1, r0
   1168c:	mov	r0, #1
   11690:	bl	110c0 <__printf_chk@plt>
   11694:	ldr	r3, [sp, #16]
   11698:	cmp	r3, #0
   1169c:	beq	11450 <strspn@plt+0x288>
   116a0:	b	1140c <strspn@plt+0x244>
   116a4:	bl	10fac <__stack_chk_fail@plt>
   116a8:	ldr	r1, [pc, #200]	; 11778 <strspn@plt+0x5b0>
   116ac:	mov	r0, #0
   116b0:	bl	10f94 <dcgettext@plt>
   116b4:	mov	r1, r0
   116b8:	mov	r0, #1
   116bc:	bl	10fc4 <err@plt>
   116c0:	mov	r2, #5
   116c4:	ldr	r1, [pc, #176]	; 1177c <strspn@plt+0x5b4>
   116c8:	mov	r0, r5
   116cc:	bl	10f94 <dcgettext@plt>
   116d0:	bl	11078 <warnx@plt>
   116d4:	ldr	r3, [pc, #140]	; 11768 <strspn@plt+0x5a0>
   116d8:	mov	r0, r5
   116dc:	mov	r2, #5
   116e0:	ldr	r1, [pc, #132]	; 1176c <strspn@plt+0x5a4>
   116e4:	b	11614 <strspn@plt+0x44c>
   116e8:	andeq	r4, r2, r0, ror #27
   116ec:	andeq	r4, r1, r0, asr #7
   116f0:	andeq	r4, r1, r8, lsl r2
   116f4:	andeq	r4, r1, ip, lsr #4
   116f8:	muleq	r1, ip, r1
   116fc:	andeq	r4, r1, r8, lsl #9
   11700:	andeq	r5, r2, r0, lsr #32
   11704:	andeq	r1, r1, r0, ror r8
   11708:	andeq	r4, r1, r8, lsr r2
   1170c:	andeq	r4, r1, r0, asr #8
   11710:	andeq	r5, r2, r0, lsl r0
   11714:	andeq	r4, r1, ip, asr #8
   11718:	andeq	r4, r1, r0, asr r2
   1171c:	strdeq	r4, [r1], -r0
   11720:	andeq	r4, r1, r8, lsl #10
   11724:	andeq	r4, r1, r0, lsr #10
   11728:	andeq	r5, r2, ip, lsl r0
   1172c:	andeq	r4, r1, ip, ror #4
   11730:	andeq	r4, r1, r8, ror r2
   11734:	andeq	r4, r1, r8, lsl #5
   11738:	andeq	r4, r1, r8, lsr #5
   1173c:			; <UNDEFINED> instruction: 0x000142b4
   11740:	strdeq	r4, [r1], -ip
   11744:	andeq	r4, r1, r8, asr #6
   11748:	andeq	r4, r1, r8, ror r3
   1174c:	andeq	r4, r1, r4, asr #7
   11750:	ldrdeq	r4, [r1], -r8
   11754:	andeq	r4, r1, r8, lsl #8
   11758:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1175c:	andeq	r4, r1, r8, ror #7
   11760:	andeq	r4, r1, r8, lsl r4
   11764:	andeq	r4, r1, r4, lsr r4
   11768:	andeq	r5, r2, r8, lsl r0
   1176c:	andeq	r4, r1, r0, ror #8
   11770:	andeq	r4, r1, r0, lsr #9
   11774:			; <UNDEFINED> instruction: 0x000144bc
   11778:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1177c:	muleq	r1, r4, r4
   11780:	mov	fp, #0
   11784:	mov	lr, #0
   11788:	pop	{r1}		; (ldr r1, [sp], #4)
   1178c:	mov	r2, sp
   11790:	push	{r2}		; (str r2, [sp, #-4]!)
   11794:	push	{r0}		; (str r0, [sp, #-4]!)
   11798:	ldr	ip, [pc, #16]	; 117b0 <strspn@plt+0x5e8>
   1179c:	push	{ip}		; (str ip, [sp, #-4]!)
   117a0:	ldr	r0, [pc, #12]	; 117b4 <strspn@plt+0x5ec>
   117a4:	ldr	r3, [pc, #12]	; 117b8 <strspn@plt+0x5f0>
   117a8:	bl	11000 <__libc_start_main@plt>
   117ac:	bl	111a4 <abort@plt>
   117b0:	andeq	r4, r1, r4, ror r1
   117b4:	ldrdeq	r1, [r1], -r8
   117b8:	andeq	r4, r1, r4, lsl r1
   117bc:	ldr	r3, [pc, #20]	; 117d8 <strspn@plt+0x610>
   117c0:	ldr	r2, [pc, #20]	; 117dc <strspn@plt+0x614>
   117c4:	add	r3, pc, r3
   117c8:	ldr	r2, [r3, r2]
   117cc:	cmp	r2, #0
   117d0:	bxeq	lr
   117d4:	b	1100c <__gmon_start__@plt>
   117d8:	andeq	r3, r1, r8, lsl r7
   117dc:	andeq	r0, r0, r8, lsl r1
   117e0:	ldr	r0, [pc, #24]	; 11800 <strspn@plt+0x638>
   117e4:	ldr	r3, [pc, #24]	; 11804 <strspn@plt+0x63c>
   117e8:	cmp	r3, r0
   117ec:	bxeq	lr
   117f0:	ldr	r3, [pc, #16]	; 11808 <strspn@plt+0x640>
   117f4:	cmp	r3, #0
   117f8:	bxeq	lr
   117fc:	bx	r3
   11800:	andeq	r5, r2, ip
   11804:	andeq	r5, r2, ip
   11808:	andeq	r0, r0, r0
   1180c:	ldr	r0, [pc, #36]	; 11838 <strspn@plt+0x670>
   11810:	ldr	r1, [pc, #36]	; 1183c <strspn@plt+0x674>
   11814:	sub	r1, r1, r0
   11818:	asr	r1, r1, #2
   1181c:	add	r1, r1, r1, lsr #31
   11820:	asrs	r1, r1, #1
   11824:	bxeq	lr
   11828:	ldr	r3, [pc, #16]	; 11840 <strspn@plt+0x678>
   1182c:	cmp	r3, #0
   11830:	bxeq	lr
   11834:	bx	r3
   11838:	andeq	r5, r2, ip
   1183c:	andeq	r5, r2, ip
   11840:	andeq	r0, r0, r0
   11844:	push	{r4, lr}
   11848:	ldr	r4, [pc, #24]	; 11868 <strspn@plt+0x6a0>
   1184c:	ldrb	r3, [r4]
   11850:	cmp	r3, #0
   11854:	popne	{r4, pc}
   11858:	bl	117e0 <strspn@plt+0x618>
   1185c:	mov	r3, #1
   11860:	strb	r3, [r4]
   11864:	pop	{r4, pc}
   11868:	andeq	r5, r2, r4, lsr #32
   1186c:	b	1180c <strspn@plt+0x644>
   11870:	ldr	r3, [pc, #292]	; 1199c <strspn@plt+0x7d4>
   11874:	push	{r4, r5, r6, lr}
   11878:	ldr	r4, [r3]
   1187c:	mov	r0, r4
   11880:	bl	10fdc <__fpending@plt>
   11884:	mov	r6, r0
   11888:	mov	r0, r4
   1188c:	bl	10f40 <ferror@plt>
   11890:	mov	r5, r0
   11894:	mov	r0, r4
   11898:	bl	110e4 <fclose@plt>
   1189c:	cmp	r5, #0
   118a0:	mov	r4, r0
   118a4:	bne	1194c <strspn@plt+0x784>
   118a8:	cmp	r0, #0
   118ac:	beq	118c8 <strspn@plt+0x700>
   118b0:	bl	11084 <__errno_location@plt>
   118b4:	cmp	r6, #0
   118b8:	ldr	r3, [r0]
   118bc:	bne	11924 <strspn@plt+0x75c>
   118c0:	cmp	r3, #9
   118c4:	bne	11924 <strspn@plt+0x75c>
   118c8:	ldr	r3, [pc, #208]	; 119a0 <strspn@plt+0x7d8>
   118cc:	ldr	r4, [r3]
   118d0:	mov	r0, r4
   118d4:	bl	10fdc <__fpending@plt>
   118d8:	mov	r6, r0
   118dc:	mov	r0, r4
   118e0:	bl	10f40 <ferror@plt>
   118e4:	mov	r5, r0
   118e8:	mov	r0, r4
   118ec:	bl	110e4 <fclose@plt>
   118f0:	cmp	r5, #0
   118f4:	mov	r4, r0
   118f8:	bne	11980 <strspn@plt+0x7b8>
   118fc:	cmp	r0, #0
   11900:	popeq	{r4, r5, r6, pc}
   11904:	cmp	r6, #0
   11908:	bne	1191c <strspn@plt+0x754>
   1190c:	bl	11084 <__errno_location@plt>
   11910:	ldr	r3, [r0]
   11914:	cmp	r3, #9
   11918:	popeq	{r4, r5, r6, pc}
   1191c:	mov	r0, #1
   11920:	bl	10f58 <_exit@plt>
   11924:	cmp	r3, #32
   11928:	beq	118c8 <strspn@plt+0x700>
   1192c:	cmp	r3, #0
   11930:	beq	11968 <strspn@plt+0x7a0>
   11934:	mov	r2, #5
   11938:	ldr	r1, [pc, #100]	; 119a4 <strspn@plt+0x7dc>
   1193c:	mov	r0, #0
   11940:	bl	10f94 <dcgettext@plt>
   11944:	bl	11114 <warn@plt>
   11948:	b	1191c <strspn@plt+0x754>
   1194c:	bl	11084 <__errno_location@plt>
   11950:	cmp	r4, #0
   11954:	ldr	r3, [r0]
   11958:	bne	11924 <strspn@plt+0x75c>
   1195c:	cmp	r3, #32
   11960:	strne	r4, [r0]
   11964:	beq	118c8 <strspn@plt+0x700>
   11968:	mov	r2, #5
   1196c:	ldr	r1, [pc, #48]	; 119a4 <strspn@plt+0x7dc>
   11970:	mov	r0, #0
   11974:	bl	10f94 <dcgettext@plt>
   11978:	bl	11078 <warnx@plt>
   1197c:	b	1191c <strspn@plt+0x754>
   11980:	cmp	r0, #0
   11984:	bne	1191c <strspn@plt+0x754>
   11988:	bl	11084 <__errno_location@plt>
   1198c:	ldr	r3, [r0]
   11990:	cmp	r3, #32
   11994:	strne	r4, [r0]
   11998:	b	1191c <strspn@plt+0x754>
   1199c:	andeq	r5, r2, ip, lsl r0
   119a0:	andeq	r5, r2, r8, lsl r0
   119a4:	andeq	r4, r1, ip, lsl #4
   119a8:	ldr	r3, [pc, #212]	; 11a84 <strspn@plt+0x8bc>
   119ac:	ldr	r2, [pc, #212]	; 11a88 <strspn@plt+0x8c0>
   119b0:	add	r3, pc, r3
   119b4:	push	{r4, r5, r6, lr}
   119b8:	sub	sp, sp, #16
   119bc:	ldr	r5, [r3, r2]
   119c0:	add	r4, sp, #4
   119c4:	mov	r1, #0
   119c8:	ldr	r3, [r5]
   119cc:	mov	r0, r4
   119d0:	str	r3, [sp, #12]
   119d4:	bl	10fd0 <gettimeofday@plt>
   119d8:	bl	11030 <getpid@plt>
   119dc:	mov	r6, r0
   119e0:	bl	10f1c <getuid@plt>
   119e4:	ldrd	r2, [sp, #4]
   119e8:	eor	r3, r3, r2
   119ec:	eor	r0, r0, r3
   119f0:	eor	r0, r0, r6, lsl #16
   119f4:	bl	10ef8 <srandom@plt>
   119f8:	bl	11030 <getpid@plt>
   119fc:	mov	r6, r0
   11a00:	ldr	r0, [pc, #132]	; 11a8c <strspn@plt+0x8c4>
   11a04:	add	r0, pc, r0
   11a08:	bl	11168 <__tls_get_addr@plt>
   11a0c:	ldr	r2, [pc, #124]	; 11a90 <strspn@plt+0x8c8>
   11a10:	ldr	r3, [sp, #4]
   11a14:	eor	r3, r3, r6
   11a18:	strh	r3, [r0, r2]
   11a1c:	add	r6, r0, r2
   11a20:	bl	11138 <getppid@plt>
   11a24:	ldr	r2, [sp, #8]
   11a28:	ldr	r3, [sp, #4]
   11a2c:	mov	r1, #0
   11a30:	eor	r3, r3, r2
   11a34:	asr	r3, r3, #16
   11a38:	strh	r3, [r6, #4]
   11a3c:	eor	r2, r2, r0
   11a40:	mov	r0, r4
   11a44:	strh	r2, [r6, #2]
   11a48:	bl	10fd0 <gettimeofday@plt>
   11a4c:	ldmib	sp, {r3, r4}
   11a50:	eor	r4, r4, r3
   11a54:	ands	r4, r4, #31
   11a58:	beq	11a68 <strspn@plt+0x8a0>
   11a5c:	bl	11180 <random@plt>
   11a60:	subs	r4, r4, #1
   11a64:	bne	11a5c <strspn@plt+0x894>
   11a68:	ldr	r2, [sp, #12]
   11a6c:	ldr	r3, [r5]
   11a70:	cmp	r2, r3
   11a74:	bne	11a80 <strspn@plt+0x8b8>
   11a78:	add	sp, sp, #16
   11a7c:	pop	{r4, r5, r6, pc}
   11a80:	bl	10fac <__stack_chk_fail@plt>
   11a84:	andeq	r3, r1, ip, lsr #10
   11a88:	andeq	r0, r0, r4, lsl r1
   11a8c:	andeq	r3, r1, r4, ror #11
   11a90:	andeq	r0, r0, r0
   11a94:	push	{r4, r5, r6, lr}
   11a98:	mov	r5, r0
   11a9c:	mov	r4, r1
   11aa0:	bl	11180 <random@plt>
   11aa4:	sub	r1, r4, r5
   11aa8:	add	r1, r1, #1
   11aac:	bl	13f80 <strspn@plt+0x2db8>
   11ab0:	add	r0, r1, r5
   11ab4:	pop	{r4, r5, r6, pc}
   11ab8:	ldr	r0, [pc, #108]	; 11b2c <strspn@plt+0x964>
   11abc:	push	{r4, lr}
   11ac0:	mov	r1, #524288	; 0x80000
   11ac4:	add	r0, pc, r0
   11ac8:	bl	10fe8 <open64@plt>
   11acc:	cmn	r0, #1
   11ad0:	movne	r4, r0
   11ad4:	beq	11b14 <strspn@plt+0x94c>
   11ad8:	cmp	r4, #0
   11adc:	bge	11aec <strspn@plt+0x924>
   11ae0:	bl	119a8 <strspn@plt+0x7e0>
   11ae4:	mov	r0, r4
   11ae8:	pop	{r4, pc}
   11aec:	mov	r1, #1
   11af0:	mov	r0, r4
   11af4:	bl	110f0 <fcntl64@plt>
   11af8:	cmp	r0, #0
   11afc:	blt	11ae0 <strspn@plt+0x918>
   11b00:	orr	r2, r0, #1
   11b04:	mov	r1, #2
   11b08:	mov	r0, r4
   11b0c:	bl	110f0 <fcntl64@plt>
   11b10:	b	11ae0 <strspn@plt+0x918>
   11b14:	ldr	r0, [pc, #20]	; 11b30 <strspn@plt+0x968>
   11b18:	ldr	r1, [pc, #20]	; 11b34 <strspn@plt+0x96c>
   11b1c:	add	r0, pc, r0
   11b20:	bl	10fe8 <open64@plt>
   11b24:	mov	r4, r0
   11b28:	b	11ad8 <strspn@plt+0x910>
   11b2c:	muleq	r0, r4, sl
   11b30:	andeq	r2, r0, ip, asr #20
   11b34:	andeq	r0, r8, r0, lsl #16
   11b38:	ldr	r3, [pc, #584]	; 11d88 <strspn@plt+0xbc0>
   11b3c:	ldr	r2, [pc, #584]	; 11d8c <strspn@plt+0xbc4>
   11b40:	add	r3, pc, r3
   11b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b48:	sub	sp, sp, #36	; 0x24
   11b4c:	ldr	r2, [r3, r2]
   11b50:	mov	sl, r1
   11b54:	mov	r7, r0
   11b58:	ldr	r3, [r2]
   11b5c:	str	r2, [sp, #4]
   11b60:	str	r3, [sp, #28]
   11b64:	bl	11084 <__errno_location@plt>
   11b68:	cmp	sl, #0
   11b6c:	mov	r8, r0
   11b70:	beq	11d44 <strspn@plt+0xb7c>
   11b74:	mov	r6, #0
   11b78:	ldr	fp, [pc, #528]	; 11d90 <strspn@plt+0xbc8>
   11b7c:	mov	r9, r6
   11b80:	mov	r4, sl
   11b84:	mov	r5, r7
   11b88:	str	r9, [r8]
   11b8c:	mov	r2, #1
   11b90:	mov	r1, r4
   11b94:	mov	r0, r5
   11b98:	bl	11174 <getrandom@plt>
   11b9c:	cmp	r0, #0
   11ba0:	ble	11bb8 <strspn@plt+0x9f0>
   11ba4:	subs	r4, r4, r0
   11ba8:	add	r5, r5, r0
   11bac:	beq	11be4 <strspn@plt+0xa1c>
   11bb0:	mov	r6, #0
   11bb4:	b	11b88 <strspn@plt+0x9c0>
   11bb8:	ldr	r3, [r8]
   11bbc:	cmp	r6, #7
   11bc0:	cmple	r3, #11
   11bc4:	bne	11be8 <strspn@plt+0xa20>
   11bc8:	mov	r1, #0
   11bcc:	add	r0, sp, #12
   11bd0:	str	r9, [sp, #12]
   11bd4:	str	fp, [sp, #16]
   11bd8:	add	r6, r6, #1
   11bdc:	bl	10f34 <nanosleep@plt>
   11be0:	b	11b88 <strspn@plt+0x9c0>
   11be4:	ldr	r3, [r8]
   11be8:	cmp	r3, #38	; 0x26
   11bec:	beq	11ca4 <strspn@plt+0xadc>
   11bf0:	bl	119a8 <strspn@plt+0x7e0>
   11bf4:	mov	r5, r7
   11bf8:	mov	r4, #0
   11bfc:	bl	11180 <random@plt>
   11c00:	ldrb	r3, [r5], #1
   11c04:	add	r4, r4, #1
   11c08:	cmp	sl, r4
   11c0c:	eor	r0, r3, r0, asr #7
   11c10:	strb	r0, [r5, #-1]
   11c14:	bhi	11bfc <strspn@plt+0xa34>
   11c18:	ldr	r0, [pc, #372]	; 11d94 <strspn@plt+0xbcc>
   11c1c:	ldr	r6, [pc, #372]	; 11d98 <strspn@plt+0xbd0>
   11c20:	add	r0, pc, r0
   11c24:	bl	11168 <__tls_get_addr@plt>
   11c28:	mov	r4, #0
   11c2c:	add	r5, sp, #20
   11c30:	add	r8, r6, r0
   11c34:	ldm	r8, {r0, r1}
   11c38:	ldrsh	r9, [r8, #4]
   11c3c:	str	r0, [sp, #20]
   11c40:	mov	r0, #224	; 0xe0
   11c44:	strh	r1, [sp, #24]
   11c48:	bl	11048 <syscall@plt>
   11c4c:	eor	r0, r0, r9
   11c50:	strh	r0, [r8, #4]
   11c54:	mov	r0, r5
   11c58:	bl	10f88 <jrand48@plt>
   11c5c:	ldrb	r3, [r7], #1
   11c60:	add	r4, r4, #1
   11c64:	cmp	sl, r4
   11c68:	eor	r0, r3, r0, asr #7
   11c6c:	strb	r0, [r7, #-1]
   11c70:	bhi	11c54 <strspn@plt+0xa8c>
   11c74:	ldr	r0, [pc, #288]	; 11d9c <strspn@plt+0xbd4>
   11c78:	add	r0, pc, r0
   11c7c:	bl	11168 <__tls_get_addr@plt>
   11c80:	ldr	r3, [sp, #4]
   11c84:	ldr	r1, [sp, #28]
   11c88:	ldr	r2, [r3]
   11c8c:	ldr	r3, [sp, #20]
   11c90:	cmp	r1, r2
   11c94:	str	r3, [r6, r0]
   11c98:	bne	11d84 <strspn@plt+0xbbc>
   11c9c:	add	sp, sp, #36	; 0x24
   11ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ca4:	bl	11ab8 <strspn@plt+0x8f0>
   11ca8:	subs	r6, r0, #0
   11cac:	blt	11bf0 <strspn@plt+0xa28>
   11cb0:	cmp	r4, #0
   11cb4:	beq	11cf8 <strspn@plt+0xb30>
   11cb8:	ldr	fp, [pc, #208]	; 11d90 <strspn@plt+0xbc8>
   11cbc:	mov	r8, #0
   11cc0:	add	r9, sp, #12
   11cc4:	mov	r2, r4
   11cc8:	mov	r1, r5
   11ccc:	mov	r0, r6
   11cd0:	bl	10f10 <read@plt>
   11cd4:	cmp	r0, #0
   11cd8:	ble	11cf0 <strspn@plt+0xb28>
   11cdc:	subs	r4, r4, r0
   11ce0:	add	r5, r5, r0
   11ce4:	beq	11cf8 <strspn@plt+0xb30>
   11ce8:	mov	r8, #0
   11cec:	b	11cc4 <strspn@plt+0xafc>
   11cf0:	cmp	r8, #8
   11cf4:	ble	11d58 <strspn@plt+0xb90>
   11cf8:	mov	r0, r6
   11cfc:	bl	111b0 <close@plt>
   11d00:	bl	119a8 <strspn@plt+0x7e0>
   11d04:	cmp	sl, #0
   11d08:	bne	11bf4 <strspn@plt+0xa2c>
   11d0c:	ldr	r0, [pc, #140]	; 11da0 <strspn@plt+0xbd8>
   11d10:	ldr	r6, [pc, #128]	; 11d98 <strspn@plt+0xbd0>
   11d14:	add	r0, pc, r0
   11d18:	bl	11168 <__tls_get_addr@plt>
   11d1c:	add	r4, r6, r0
   11d20:	ldm	r4, {r0, r1}
   11d24:	ldrsh	r5, [r4, #4]
   11d28:	str	r0, [sp, #20]
   11d2c:	mov	r0, #224	; 0xe0
   11d30:	strh	r1, [sp, #24]
   11d34:	bl	11048 <syscall@plt>
   11d38:	eor	r0, r0, r5
   11d3c:	strh	r0, [r4, #4]
   11d40:	b	11c74 <strspn@plt+0xaac>
   11d44:	ldr	r3, [r0]
   11d48:	cmp	r3, #38	; 0x26
   11d4c:	beq	11d74 <strspn@plt+0xbac>
   11d50:	bl	119a8 <strspn@plt+0x7e0>
   11d54:	b	11d0c <strspn@plt+0xb44>
   11d58:	mov	r1, #0
   11d5c:	mov	r0, r9
   11d60:	add	r8, r8, #1
   11d64:	str	r1, [sp, #12]
   11d68:	str	fp, [sp, #16]
   11d6c:	bl	10f34 <nanosleep@plt>
   11d70:	b	11cc4 <strspn@plt+0xafc>
   11d74:	bl	11ab8 <strspn@plt+0x8f0>
   11d78:	subs	r6, r0, #0
   11d7c:	bge	11cf8 <strspn@plt+0xb30>
   11d80:	b	11d50 <strspn@plt+0xb88>
   11d84:	bl	10fac <__stack_chk_fail@plt>
   11d88:	muleq	r1, ip, r3
   11d8c:	andeq	r0, r0, r4, lsl r1
   11d90:	ldrbeq	r5, [r3, -r0, asr #18]!
   11d94:	andeq	r3, r1, r8, asr #7
   11d98:	andeq	r0, r0, r0
   11d9c:	andeq	r3, r1, r0, ror r3
   11da0:	ldrdeq	r3, [r1], -r4
   11da4:	ldr	r1, [pc, #12]	; 11db8 <strspn@plt+0xbf0>
   11da8:	mov	r2, #5
   11dac:	add	r1, pc, r1
   11db0:	mov	r0, #0
   11db4:	b	10f94 <dcgettext@plt>
   11db8:	andeq	r2, r0, r8, asr #15
   11dbc:	andeq	r0, r0, r0
   11dc0:	cmp	r0, #0
   11dc4:	mov	r3, #0
   11dc8:	str	r3, [r1]
   11dcc:	bxeq	lr
   11dd0:	ldrsb	r2, [r0]
   11dd4:	cmp	r2, #47	; 0x2f
   11dd8:	bne	11e14 <strspn@plt+0xc4c>
   11ddc:	ldrsb	r3, [r0, #1]
   11de0:	cmp	r3, #47	; 0x2f
   11de4:	bne	11e1c <strspn@plt+0xc54>
   11de8:	add	r3, r0, #1
   11dec:	b	11dfc <strspn@plt+0xc34>
   11df0:	ldrsb	r2, [r3]
   11df4:	cmp	r2, #47	; 0x2f
   11df8:	bne	11e1c <strspn@plt+0xc54>
   11dfc:	cmp	r3, #0
   11e00:	mov	r0, r3
   11e04:	bxeq	lr
   11e08:	ldrsb	r2, [r3], #1
   11e0c:	cmp	r2, #47	; 0x2f
   11e10:	beq	11df0 <strspn@plt+0xc28>
   11e14:	cmp	r2, #0
   11e18:	beq	11e58 <strspn@plt+0xc90>
   11e1c:	mov	r3, #1
   11e20:	str	r3, [r1]
   11e24:	ldrsb	r3, [r0, #1]
   11e28:	add	r2, r0, #1
   11e2c:	cmp	r3, #47	; 0x2f
   11e30:	cmpne	r3, #0
   11e34:	bxeq	lr
   11e38:	rsb	r3, r0, #1
   11e3c:	add	ip, r2, r3
   11e40:	str	ip, [r1]
   11e44:	ldrsb	ip, [r2, #1]!
   11e48:	cmp	ip, #0
   11e4c:	cmpne	ip, #47	; 0x2f
   11e50:	bne	11e3c <strspn@plt+0xc74>
   11e54:	bx	lr
   11e58:	mov	r0, r2
   11e5c:	bx	lr
   11e60:	push	{r4, r5, r6, r7, r8, lr}
   11e64:	mov	r7, r1
   11e68:	ldrsb	r1, [r0]
   11e6c:	cmp	r1, #0
   11e70:	movne	r5, r0
   11e74:	movne	r4, #0
   11e78:	beq	11ee4 <strspn@plt+0xd1c>
   11e7c:	cmp	r1, #92	; 0x5c
   11e80:	addne	r6, r5, r4
   11e84:	beq	11eb4 <strspn@plt+0xcec>
   11e88:	mov	r0, r7
   11e8c:	bl	1106c <strchr@plt>
   11e90:	cmp	r0, #0
   11e94:	bne	11edc <strspn@plt+0xd14>
   11e98:	ldrsb	r1, [r6, #1]!
   11e9c:	add	r4, r4, #1
   11ea0:	mov	r0, r4
   11ea4:	cmp	r1, #0
   11ea8:	popeq	{r4, r5, r6, r7, r8, pc}
   11eac:	cmp	r1, #92	; 0x5c
   11eb0:	bne	11e88 <strspn@plt+0xcc0>
   11eb4:	add	r3, r5, r4
   11eb8:	ldrsb	r3, [r3, #1]
   11ebc:	cmp	r3, #0
   11ec0:	beq	11edc <strspn@plt+0xd14>
   11ec4:	add	r4, r4, #2
   11ec8:	mov	r0, r4
   11ecc:	ldrsb	r1, [r5, r4]
   11ed0:	cmp	r1, #0
   11ed4:	bne	11e7c <strspn@plt+0xcb4>
   11ed8:	pop	{r4, r5, r6, r7, r8, pc}
   11edc:	mov	r0, r4
   11ee0:	pop	{r4, r5, r6, r7, r8, pc}
   11ee4:	mov	r0, r1
   11ee8:	pop	{r4, r5, r6, r7, r8, pc}
   11eec:	ldr	ip, [pc, #244]	; 11fe8 <strspn@plt+0xe20>
   11ef0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ef4:	add	ip, pc, ip
   11ef8:	ldr	lr, [pc, #236]	; 11fec <strspn@plt+0xe24>
   11efc:	sub	sp, sp, #12
   11f00:	mov	r5, #0
   11f04:	ldr	r7, [ip, lr]
   11f08:	mov	r4, r0
   11f0c:	mov	r8, r1
   11f10:	ldr	r3, [r7]
   11f14:	mov	r0, ip
   11f18:	mov	r9, r2
   11f1c:	str	r5, [sp]
   11f20:	str	r3, [sp, #4]
   11f24:	bl	11084 <__errno_location@plt>
   11f28:	cmp	r4, r5
   11f2c:	str	r5, [r0]
   11f30:	beq	11f40 <strspn@plt+0xd78>
   11f34:	ldrsb	r3, [r4]
   11f38:	cmp	r3, r5
   11f3c:	bne	11f60 <strspn@plt+0xd98>
   11f40:	ldr	r1, [pc, #168]	; 11ff0 <strspn@plt+0xe28>
   11f44:	mov	r3, r4
   11f48:	add	r1, pc, r1
   11f4c:	mov	r2, r8
   11f50:	ldr	r0, [r1]
   11f54:	ldr	r1, [pc, #152]	; 11ff4 <strspn@plt+0xe2c>
   11f58:	add	r1, pc, r1
   11f5c:	bl	11108 <errx@plt>
   11f60:	mov	r6, r0
   11f64:	mov	r2, r9
   11f68:	mov	r3, r5
   11f6c:	mov	r1, sp
   11f70:	mov	r0, r4
   11f74:	bl	10f7c <__strtoull_internal@plt>
   11f78:	ldr	r2, [r6]
   11f7c:	cmp	r2, r5
   11f80:	bne	11fbc <strspn@plt+0xdf4>
   11f84:	ldr	r3, [sp]
   11f88:	cmp	r3, r4
   11f8c:	beq	11f40 <strspn@plt+0xd78>
   11f90:	cmp	r3, r5
   11f94:	beq	11fa4 <strspn@plt+0xddc>
   11f98:	ldrsb	r3, [r3]
   11f9c:	cmp	r3, r5
   11fa0:	bne	11f40 <strspn@plt+0xd78>
   11fa4:	ldr	r2, [sp, #4]
   11fa8:	ldr	r3, [r7]
   11fac:	cmp	r2, r3
   11fb0:	bne	11fe4 <strspn@plt+0xe1c>
   11fb4:	add	sp, sp, #12
   11fb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fbc:	ldr	r3, [pc, #52]	; 11ff8 <strspn@plt+0xe30>
   11fc0:	cmp	r2, #34	; 0x22
   11fc4:	add	r3, pc, r3
   11fc8:	ldr	r0, [r3]
   11fcc:	bne	11f40 <strspn@plt+0xd78>
   11fd0:	ldr	r1, [pc, #36]	; 11ffc <strspn@plt+0xe34>
   11fd4:	mov	r3, r4
   11fd8:	mov	r2, r8
   11fdc:	add	r1, pc, r1
   11fe0:	bl	10fc4 <err@plt>
   11fe4:	bl	10fac <__stack_chk_fail@plt>
   11fe8:	andeq	r2, r1, r8, ror #31
   11fec:	andeq	r0, r0, r4, lsl r1
   11ff0:	strheq	r3, [r1], -r8
   11ff4:	andeq	r2, r0, r4, lsr r6
   11ff8:	andeq	r3, r1, ip, lsr r0
   11ffc:			; <UNDEFINED> instruction: 0x000025b0
   12000:	push	{r4, lr}
   12004:	mov	r5, r0
   12008:	mov	r4, r1
   1200c:	bl	11084 <__errno_location@plt>
   12010:	ldr	ip, [pc, #32]	; 12038 <strspn@plt+0xe70>
   12014:	ldr	r1, [pc, #32]	; 1203c <strspn@plt+0xe74>
   12018:	add	ip, pc, ip
   1201c:	mov	lr, #34	; 0x22
   12020:	mov	r3, r5
   12024:	mov	r2, r4
   12028:	add	r1, pc, r1
   1202c:	str	lr, [r0]
   12030:	ldr	r0, [ip]
   12034:	bl	10fc4 <err@plt>
   12038:	andeq	r2, r1, r8, ror #31
   1203c:	andeq	r2, r0, r4, ror #10
   12040:	push	{r4, r5, r6, lr}
   12044:	mov	r4, r0
   12048:	mov	r5, r1
   1204c:	bl	11eec <strspn@plt+0xd24>
   12050:	mov	r3, #0
   12054:	mvn	r2, #0
   12058:	cmp	r1, r3
   1205c:	cmpeq	r0, r2
   12060:	popls	{r4, r5, r6, pc}
   12064:	mov	r1, r5
   12068:	mov	r0, r4
   1206c:	bl	12000 <strspn@plt+0xe38>
   12070:	ldr	r3, [pc, #8]	; 12080 <strspn@plt+0xeb8>
   12074:	add	r3, pc, r3
   12078:	str	r0, [r3]
   1207c:	bx	lr
   12080:	andeq	r2, r1, ip, lsl #31
   12084:	ldr	r3, [pc, #1648]	; 126fc <strspn@plt+0x1534>
   12088:	ldr	ip, [pc, #1648]	; 12700 <strspn@plt+0x1538>
   1208c:	add	r3, pc, r3
   12090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12094:	mov	r5, r1
   12098:	ldr	r1, [r3, ip]
   1209c:	sub	sp, sp, #52	; 0x34
   120a0:	mov	ip, r1
   120a4:	mov	r8, r0
   120a8:	str	r1, [sp, #24]
   120ac:	mov	r0, #0
   120b0:	mov	r1, #0
   120b4:	ldr	r3, [ip]
   120b8:	strd	r0, [r5]
   120bc:	mov	r9, r2
   120c0:	str	r3, [sp, #44]	; 0x2c
   120c4:	bl	11084 <__errno_location@plt>
   120c8:	cmp	r8, #0
   120cc:	mov	r4, r0
   120d0:	beq	122b0 <strspn@plt+0x10e8>
   120d4:	ldrsb	fp, [r8]
   120d8:	cmp	fp, #0
   120dc:	beq	122b0 <strspn@plt+0x10e8>
   120e0:	bl	11024 <__ctype_b_loc@plt>
   120e4:	mov	r2, r8
   120e8:	ldr	r1, [r0]
   120ec:	b	120f4 <strspn@plt+0xf2c>
   120f0:	ldrsb	fp, [r2, #1]!
   120f4:	uxtb	r3, fp
   120f8:	lsl	r3, r3, #1
   120fc:	ldrh	ip, [r1, r3]
   12100:	ands	ip, ip, #8192	; 0x2000
   12104:	bne	120f0 <strspn@plt+0xf28>
   12108:	cmp	fp, #45	; 0x2d
   1210c:	beq	122b0 <strspn@plt+0x10e8>
   12110:	add	fp, sp, #40	; 0x28
   12114:	mov	r3, ip
   12118:	mov	r2, ip
   1211c:	str	ip, [r4]
   12120:	mov	r1, fp
   12124:	mov	r0, r8
   12128:	str	ip, [sp, #40]	; 0x28
   1212c:	bl	10f7c <__strtoull_internal@plt>
   12130:	ldr	sl, [sp, #40]	; 0x28
   12134:	cmp	sl, r8
   12138:	mov	r2, r0
   1213c:	mov	r3, r1
   12140:	ldr	r0, [r4]
   12144:	strd	r2, [sp, #16]
   12148:	beq	12430 <strspn@plt+0x1268>
   1214c:	cmp	r0, #0
   12150:	bne	122d8 <strspn@plt+0x1110>
   12154:	cmp	sl, #0
   12158:	beq	12464 <strspn@plt+0x129c>
   1215c:	ldrsb	r0, [sl]
   12160:	cmp	r0, #0
   12164:	beq	12458 <strspn@plt+0x1290>
   12168:	mov	r8, #0
   1216c:	mov	r2, #0
   12170:	mov	r3, #0
   12174:	str	r9, [sp, #32]
   12178:	mov	r6, fp
   1217c:	mov	r9, sl
   12180:	mov	r7, r8
   12184:	mov	sl, r2
   12188:	mov	fp, r3
   1218c:	str	r5, [sp, #28]
   12190:	ldrsb	r2, [r9, #1]
   12194:	cmp	r2, #105	; 0x69
   12198:	beq	1231c <strspn@plt+0x1154>
   1219c:	bic	r1, r2, #32
   121a0:	cmp	r1, #66	; 0x42
   121a4:	bne	1243c <strspn@plt+0x1274>
   121a8:	ldrsb	r2, [r9, #2]
   121ac:	cmp	r2, #0
   121b0:	beq	12620 <strspn@plt+0x1458>
   121b4:	bl	1112c <localeconv@plt>
   121b8:	cmp	r0, #0
   121bc:	beq	122b0 <strspn@plt+0x10e8>
   121c0:	ldr	r2, [r0]
   121c4:	cmp	r2, #0
   121c8:	beq	122b0 <strspn@plt+0x10e8>
   121cc:	mov	r0, r2
   121d0:	str	r2, [sp]
   121d4:	bl	11060 <strlen@plt>
   121d8:	orrs	r3, sl, fp
   121dc:	mov	r5, r0
   121e0:	bne	122b0 <strspn@plt+0x10e8>
   121e4:	ldrsb	r1, [r9]
   121e8:	cmp	r1, #0
   121ec:	beq	122b0 <strspn@plt+0x10e8>
   121f0:	ldr	r2, [sp]
   121f4:	mov	r1, r9
   121f8:	mov	r0, r2
   121fc:	mov	r2, r5
   12200:	bl	11198 <strncmp@plt>
   12204:	cmp	r0, #0
   12208:	bne	122b0 <strspn@plt+0x10e8>
   1220c:	ldrsb	r2, [r9, r5]
   12210:	add	r5, r9, r5
   12214:	cmp	r2, #48	; 0x30
   12218:	bne	12238 <strspn@plt+0x1070>
   1221c:	add	r8, r8, #1
   12220:	sub	r1, r8, r5
   12224:	mov	r3, r5
   12228:	add	r8, r3, r1
   1222c:	ldrsb	r2, [r3, #1]!
   12230:	cmp	r2, #48	; 0x30
   12234:	beq	12228 <strspn@plt+0x1060>
   12238:	mov	r3, #0
   1223c:	str	r7, [r4]
   12240:	mov	r2, r3
   12244:	mov	r1, r6
   12248:	mov	r0, r5
   1224c:	str	r7, [sp, #40]	; 0x28
   12250:	bl	10f7c <__strtoull_internal@plt>
   12254:	ldr	r9, [sp, #40]	; 0x28
   12258:	cmp	r9, r5
   1225c:	mov	sl, r0
   12260:	mov	fp, r1
   12264:	beq	1242c <strspn@plt+0x1264>
   12268:	ldr	ip, [r4]
   1226c:	cmp	ip, #0
   12270:	beq	12308 <strspn@plt+0x1140>
   12274:	subs	r3, r0, #1
   12278:	str	r3, [sp, #8]
   1227c:	sbc	r3, r1, #0
   12280:	str	r3, [sp, #12]
   12284:	ldrd	r2, [sp, #8]
   12288:	mvn	r1, #0
   1228c:	mvn	r0, #2
   12290:	cmp	r3, r1
   12294:	cmpeq	r2, r0
   12298:	bhi	1265c <strspn@plt+0x1494>
   1229c:	cmp	r9, #0
   122a0:	beq	122b0 <strspn@plt+0x10e8>
   122a4:	ldrsb	r2, [r9]
   122a8:	cmp	r2, #0
   122ac:	bne	12190 <strspn@plt+0xfc8>
   122b0:	mov	r3, #22
   122b4:	mvn	r0, #21
   122b8:	str	r3, [r4]
   122bc:	ldr	r3, [sp, #24]
   122c0:	ldr	r2, [sp, #44]	; 0x2c
   122c4:	ldr	r3, [r3]
   122c8:	cmp	r2, r3
   122cc:	bne	126f8 <strspn@plt+0x1530>
   122d0:	add	sp, sp, #52	; 0x34
   122d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122d8:	subs	r6, r2, #1
   122dc:	sbc	r7, r3, #0
   122e0:	mvn	r3, #0
   122e4:	mvn	r2, #2
   122e8:	cmp	r7, r3
   122ec:	cmpeq	r6, r2
   122f0:	bls	12154 <strspn@plt+0xf8c>
   122f4:	rsb	r0, r0, #0
   122f8:	cmp	r0, #0
   122fc:	bge	122bc <strspn@plt+0x10f4>
   12300:	rsb	r3, r0, #0
   12304:	b	122b8 <strspn@plt+0x10f0>
   12308:	orrs	r3, sl, fp
   1230c:	bne	1229c <strspn@plt+0x10d4>
   12310:	ldrsb	r2, [r9, #1]
   12314:	cmp	r2, #105	; 0x69
   12318:	bne	1219c <strspn@plt+0xfd4>
   1231c:	ldrsb	r2, [r9, #2]
   12320:	bic	r2, r2, #32
   12324:	cmp	r2, #66	; 0x42
   12328:	bne	121b4 <strspn@plt+0xfec>
   1232c:	ldrsb	r2, [r9, #3]
   12330:	cmp	r2, #0
   12334:	bne	121b4 <strspn@plt+0xfec>
   12338:	strd	sl, [sp]
   1233c:	mov	sl, r9
   12340:	ldr	r9, [sp, #32]
   12344:	mov	r3, #1024	; 0x400
   12348:	ldr	r5, [sp, #28]
   1234c:	str	r3, [sp, #28]
   12350:	ldrsb	r7, [sl]
   12354:	ldr	r6, [pc, #936]	; 12704 <strspn@plt+0x153c>
   12358:	add	r6, pc, r6
   1235c:	mov	r1, r7
   12360:	mov	r0, r6
   12364:	bl	1106c <strchr@plt>
   12368:	cmp	r0, #0
   1236c:	beq	1263c <strspn@plt+0x1474>
   12370:	sub	ip, r0, r6
   12374:	add	fp, ip, #1
   12378:	cmp	fp, #0
   1237c:	beq	12448 <strspn@plt+0x1280>
   12380:	ldr	r3, [sp, #20]
   12384:	ldr	r6, [sp, #28]
   12388:	cmp	r3, #0
   1238c:	mov	r0, #0
   12390:	asr	r7, r6, #31
   12394:	mov	r1, #0
   12398:	bne	12698 <strspn@plt+0x14d0>
   1239c:	orrs	r3, r0, r1
   123a0:	bne	1248c <strspn@plt+0x12c4>
   123a4:	str	fp, [sp, #32]
   123a8:	sub	ip, ip, #1
   123ac:	str	r8, [sp, #36]	; 0x24
   123b0:	mov	fp, r4
   123b4:	ldrd	r0, [sp, #16]
   123b8:	mov	lr, r5
   123bc:	mov	sl, r9
   123c0:	b	123d0 <strspn@plt+0x1208>
   123c4:	orrs	r3, r4, r5
   123c8:	sub	ip, ip, #1
   123cc:	bne	12474 <strspn@plt+0x12ac>
   123d0:	mul	r2, r0, r7
   123d4:	cmn	ip, #1
   123d8:	mla	r2, r6, r1, r2
   123dc:	umull	r0, r1, r0, r6
   123e0:	add	r2, r2, r1
   123e4:	mov	r1, r2
   123e8:	beq	12600 <strspn@plt+0x1438>
   123ec:	cmp	r2, #0
   123f0:	mov	r4, #0
   123f4:	mov	r5, #0
   123f8:	beq	123c4 <strspn@plt+0x11fc>
   123fc:	umull	r2, r3, r6, r2
   12400:	umull	r8, r9, r0, r6
   12404:	strd	r2, [sp, #8]
   12408:	mov	r8, r9
   1240c:	ldr	r3, [sp, #12]
   12410:	adds	r8, r2, r8
   12414:	mov	r2, #0
   12418:	adc	r3, r3, r2
   1241c:	cmp	r3, r2
   12420:	movne	r4, #1
   12424:	movne	r5, #0
   12428:	b	123c4 <strspn@plt+0x11fc>
   1242c:	ldr	r0, [r4]
   12430:	cmp	r0, #0
   12434:	beq	122b0 <strspn@plt+0x10e8>
   12438:	b	122f4 <strspn@plt+0x112c>
   1243c:	cmp	r2, #0
   12440:	bne	121b4 <strspn@plt+0xfec>
   12444:	b	12338 <strspn@plt+0x1170>
   12448:	cmp	r9, #0
   1244c:	movne	r0, fp
   12450:	bne	12498 <strspn@plt+0x12d0>
   12454:	mov	r0, r9
   12458:	ldrd	r2, [sp, #16]
   1245c:	strd	r2, [r5]
   12460:	b	122bc <strspn@plt+0x10f4>
   12464:	ldrd	r2, [sp, #16]
   12468:	mov	r0, sl
   1246c:	strd	r2, [r5]
   12470:	b	122bc <strspn@plt+0x10f4>
   12474:	mov	r4, fp
   12478:	ldr	r8, [sp, #36]	; 0x24
   1247c:	ldr	fp, [sp, #32]
   12480:	mov	r5, lr
   12484:	mov	r9, sl
   12488:	strd	r0, [sp, #16]
   1248c:	mvn	r0, #33	; 0x21
   12490:	cmp	r9, #0
   12494:	beq	1249c <strspn@plt+0x12d4>
   12498:	str	fp, [r9]
   1249c:	ldrd	r2, [sp]
   124a0:	mov	r1, r2
   124a4:	orrs	r3, r1, r3
   124a8:	movne	r3, #1
   124ac:	moveq	r3, #0
   124b0:	cmp	fp, #0
   124b4:	moveq	r3, #0
   124b8:	cmp	r3, #0
   124bc:	beq	125f4 <strspn@plt+0x142c>
   124c0:	ldr	r3, [pc, #576]	; 12708 <strspn@plt+0x1540>
   124c4:	ldr	r1, [pc, #576]	; 1270c <strspn@plt+0x1544>
   124c8:	umull	ip, r3, r3, r8
   124cc:	smull	ip, r1, r1, r8
   124d0:	lsr	r3, r3, #1
   124d4:	rsb	r1, r1, r8, asr #31
   124d8:	add	r3, r3, r3, lsl #1
   124dc:	add	r1, r1, fp
   124e0:	subs	r3, r8, r3
   124e4:	sub	r6, r1, #1
   124e8:	bne	12664 <strspn@plt+0x149c>
   124ec:	ldrd	r8, [sp]
   124f0:	adds	r3, r8, r8
   124f4:	adc	r2, r9, r9
   124f8:	adds	r3, r3, r8
   124fc:	adc	r2, r2, r9
   12500:	lsl	ip, r3, #5
   12504:	lsl	lr, r2, #5
   12508:	orr	lr, lr, r3, lsr #27
   1250c:	adds	r3, r3, ip
   12510:	adc	r2, r2, lr
   12514:	adds	r3, r8, r3
   12518:	str	r3, [sp]
   1251c:	ldr	r3, [sp, #4]
   12520:	adc	r3, r3, r2
   12524:	str	r3, [sp, #4]
   12528:	cmp	r6, #0
   1252c:	blt	122b0 <strspn@plt+0x10e8>
   12530:	beq	125d8 <strspn@plt+0x1410>
   12534:	ldr	r3, [sp, #4]
   12538:	ldr	r8, [sp, #28]
   1253c:	cmp	r3, #0
   12540:	mov	r6, #0
   12544:	asr	r9, r8, #31
   12548:	mov	r7, #0
   1254c:	bne	126cc <strspn@plt+0x1504>
   12550:	orrs	r3, r6, r7
   12554:	bne	125d8 <strspn@plt+0x1410>
   12558:	sub	r1, r1, #3
   1255c:	ldrd	r2, [sp]
   12560:	mov	lr, r4
   12564:	str	r5, [sp, #8]
   12568:	b	12578 <strspn@plt+0x13b0>
   1256c:	orrs	ip, r6, r7
   12570:	sub	r1, r1, #1
   12574:	bne	125cc <strspn@plt+0x1404>
   12578:	mul	ip, r2, r9
   1257c:	cmn	r1, #1
   12580:	mla	ip, r8, r3, ip
   12584:	umull	r2, r3, r2, r8
   12588:	add	ip, ip, r3
   1258c:	mov	r3, ip
   12590:	beq	125cc <strspn@plt+0x1404>
   12594:	cmp	ip, #0
   12598:	mov	r6, #0
   1259c:	mov	r7, #0
   125a0:	beq	1256c <strspn@plt+0x13a4>
   125a4:	umull	sl, fp, r2, r8
   125a8:	umull	r4, r5, r8, ip
   125ac:	mov	ip, fp
   125b0:	adds	ip, r4, ip
   125b4:	mov	ip, #0
   125b8:	adc	ip, r5, ip
   125bc:	cmp	ip, #0
   125c0:	movne	r6, #1
   125c4:	movne	r7, #0
   125c8:	b	1256c <strspn@plt+0x13a4>
   125cc:	ldr	r5, [sp, #8]
   125d0:	mov	r4, lr
   125d4:	strd	r2, [sp]
   125d8:	ldrd	r2, [sp]
   125dc:	ldr	r1, [sp, #16]
   125e0:	adds	r1, r1, r2
   125e4:	str	r1, [sp, #16]
   125e8:	ldr	r1, [sp, #20]
   125ec:	adc	r3, r1, r3
   125f0:	str	r3, [sp, #20]
   125f4:	ldrd	r2, [sp, #16]
   125f8:	strd	r2, [r5]
   125fc:	b	122f8 <strspn@plt+0x1130>
   12600:	mov	r4, fp
   12604:	strd	r0, [sp, #16]
   12608:	ldr	r8, [sp, #36]	; 0x24
   1260c:	ldr	fp, [sp, #32]
   12610:	mov	r5, lr
   12614:	mov	r9, sl
   12618:	mov	r0, #0
   1261c:	b	12490 <strspn@plt+0x12c8>
   12620:	mov	r3, #1000	; 0x3e8
   12624:	strd	sl, [sp]
   12628:	ldr	r5, [sp, #28]
   1262c:	mov	sl, r9
   12630:	str	r3, [sp, #28]
   12634:	ldr	r9, [sp, #32]
   12638:	b	12350 <strspn@plt+0x1188>
   1263c:	ldr	r6, [pc, #204]	; 12710 <strspn@plt+0x1548>
   12640:	mov	r1, r7
   12644:	add	r6, pc, r6
   12648:	mov	r0, r6
   1264c:	bl	1106c <strchr@plt>
   12650:	cmp	r0, #0
   12654:	bne	12370 <strspn@plt+0x11a8>
   12658:	b	122b0 <strspn@plt+0x10e8>
   1265c:	mov	r0, ip
   12660:	b	122f4 <strspn@plt+0x112c>
   12664:	cmp	r3, #1
   12668:	bne	12528 <strspn@plt+0x1360>
   1266c:	ldrd	r8, [sp]
   12670:	lsl	r2, r9, #2
   12674:	lsl	r3, r8, #2
   12678:	adds	r3, r3, r8
   1267c:	orr	r2, r2, r8, lsr #30
   12680:	adc	r2, r2, r9
   12684:	adds	r3, r3, r3
   12688:	str	r3, [sp]
   1268c:	adc	r3, r2, r2
   12690:	str	r3, [sp, #4]
   12694:	b	12528 <strspn@plt+0x1360>
   12698:	ldr	lr, [sp, #28]
   1269c:	ldr	r3, [sp, #16]
   126a0:	ldr	sl, [sp, #20]
   126a4:	umull	r2, r3, r3, lr
   126a8:	str	r3, [sp, #8]
   126ac:	mov	r3, #0
   126b0:	str	r3, [sp, #12]
   126b4:	ldrd	r2, [sp, #8]
   126b8:	umlal	r2, r3, sl, lr
   126bc:	cmp	r3, #0
   126c0:	movne	r0, #1
   126c4:	movne	r1, #0
   126c8:	b	1239c <strspn@plt+0x11d4>
   126cc:	ldr	r3, [sp]
   126d0:	ldr	ip, [sp, #28]
   126d4:	ldr	lr, [sp, #4]
   126d8:	umull	sl, fp, r3, ip
   126dc:	mov	r3, #0
   126e0:	mov	r2, fp
   126e4:	umlal	r2, r3, lr, ip
   126e8:	cmp	r3, #0
   126ec:	movne	r6, #1
   126f0:	movne	r7, #0
   126f4:	b	12550 <strspn@plt+0x1388>
   126f8:	bl	10fac <__stack_chk_fail@plt>
   126fc:	andeq	r2, r1, r0, asr lr
   12700:	andeq	r0, r0, r4, lsl r1
   12704:	andeq	r2, r0, r0, asr #4
   12708:	bge	feabd1bc <optarg@@GLIBC_2.4+0xfea9819c>
   1270c:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12710:	andeq	r1, r0, r0, ror #30
   12714:	mov	r2, #0
   12718:	b	12084 <strspn@plt+0xebc>
   1271c:	push	{r4, r5, r6, lr}
   12720:	subs	r5, r0, #0
   12724:	mov	r6, r1
   12728:	beq	12794 <strspn@plt+0x15cc>
   1272c:	ldrsb	r4, [r5]
   12730:	cmp	r4, #0
   12734:	beq	127a8 <strspn@plt+0x15e0>
   12738:	bl	11024 <__ctype_b_loc@plt>
   1273c:	mov	r3, r5
   12740:	ldr	r0, [r0]
   12744:	b	1275c <strspn@plt+0x1594>
   12748:	adds	r3, r3, #1
   1274c:	beq	12794 <strspn@plt+0x15cc>
   12750:	ldrsb	r4, [r3]
   12754:	cmp	r4, #0
   12758:	beq	12770 <strspn@plt+0x15a8>
   1275c:	uxtb	r4, r4
   12760:	lsl	r4, r4, #1
   12764:	ldrh	r2, [r0, r4]
   12768:	tst	r2, #2048	; 0x800
   1276c:	bne	12748 <strspn@plt+0x1580>
   12770:	cmp	r6, #0
   12774:	strne	r3, [r6]
   12778:	cmp	r5, r3
   1277c:	bcs	127a0 <strspn@plt+0x15d8>
   12780:	ldrsb	r3, [r3]
   12784:	cmp	r3, #0
   12788:	bne	127a0 <strspn@plt+0x15d8>
   1278c:	mov	r0, #1
   12790:	pop	{r4, r5, r6, pc}
   12794:	cmp	r6, #0
   12798:	movne	r3, #0
   1279c:	strne	r3, [r6]
   127a0:	mov	r0, #0
   127a4:	pop	{r4, r5, r6, pc}
   127a8:	cmp	r1, #0
   127ac:	strne	r5, [r1]
   127b0:	b	127a0 <strspn@plt+0x15d8>
   127b4:	push	{r4, r5, r6, lr}
   127b8:	subs	r5, r0, #0
   127bc:	mov	r6, r1
   127c0:	beq	1282c <strspn@plt+0x1664>
   127c4:	ldrsb	r4, [r5]
   127c8:	cmp	r4, #0
   127cc:	beq	12840 <strspn@plt+0x1678>
   127d0:	bl	11024 <__ctype_b_loc@plt>
   127d4:	mov	r3, r5
   127d8:	ldr	r0, [r0]
   127dc:	b	127f4 <strspn@plt+0x162c>
   127e0:	adds	r3, r3, #1
   127e4:	beq	1282c <strspn@plt+0x1664>
   127e8:	ldrsb	r4, [r3]
   127ec:	cmp	r4, #0
   127f0:	beq	12808 <strspn@plt+0x1640>
   127f4:	uxtb	r4, r4
   127f8:	lsl	r4, r4, #1
   127fc:	ldrh	r2, [r0, r4]
   12800:	tst	r2, #4096	; 0x1000
   12804:	bne	127e0 <strspn@plt+0x1618>
   12808:	cmp	r6, #0
   1280c:	strne	r3, [r6]
   12810:	cmp	r5, r3
   12814:	bcs	12838 <strspn@plt+0x1670>
   12818:	ldrsb	r3, [r3]
   1281c:	cmp	r3, #0
   12820:	bne	12838 <strspn@plt+0x1670>
   12824:	mov	r0, #1
   12828:	pop	{r4, r5, r6, pc}
   1282c:	cmp	r6, #0
   12830:	movne	r3, #0
   12834:	strne	r3, [r6]
   12838:	mov	r0, #0
   1283c:	pop	{r4, r5, r6, pc}
   12840:	cmp	r1, #0
   12844:	strne	r5, [r1]
   12848:	b	12838 <strspn@plt+0x1670>
   1284c:	push	{r1, r2, r3}
   12850:	ldr	r3, [pc, #188]	; 12914 <strspn@plt+0x174c>
   12854:	ldr	r2, [pc, #188]	; 12918 <strspn@plt+0x1750>
   12858:	add	r3, pc, r3
   1285c:	push	{r4, r5, r6, r7, r8, lr}
   12860:	sub	sp, sp, #12
   12864:	ldr	r7, [r3, r2]
   12868:	ldr	r8, [sp, #36]	; 0x24
   1286c:	mov	r6, r0
   12870:	ldr	r3, [r7]
   12874:	add	r4, sp, #48	; 0x30
   12878:	str	r3, [sp, #4]
   1287c:	b	12898 <strspn@plt+0x16d0>
   12880:	mov	r1, r5
   12884:	mov	r0, r6
   12888:	bl	10ee0 <strcmp@plt>
   1288c:	add	r4, r4, #8
   12890:	cmp	r0, #0
   12894:	beq	128d0 <strspn@plt+0x1708>
   12898:	ldr	r1, [r4, #-8]
   1289c:	sub	r3, r4, #4
   128a0:	cmp	r1, #0
   128a4:	str	r3, [sp]
   128a8:	beq	128f0 <strspn@plt+0x1728>
   128ac:	ldr	r5, [r4, #-4]
   128b0:	str	r4, [sp]
   128b4:	cmp	r5, #0
   128b8:	beq	128f0 <strspn@plt+0x1728>
   128bc:	mov	r0, r6
   128c0:	bl	10ee0 <strcmp@plt>
   128c4:	cmp	r0, #0
   128c8:	bne	12880 <strspn@plt+0x16b8>
   128cc:	mov	r0, #1
   128d0:	ldr	r2, [sp, #4]
   128d4:	ldr	r3, [r7]
   128d8:	cmp	r2, r3
   128dc:	bne	12910 <strspn@plt+0x1748>
   128e0:	add	sp, sp, #12
   128e4:	pop	{r4, r5, r6, r7, r8, lr}
   128e8:	add	sp, sp, #12
   128ec:	bx	lr
   128f0:	ldr	r1, [pc, #36]	; 1291c <strspn@plt+0x1754>
   128f4:	mov	r3, r6
   128f8:	add	r1, pc, r1
   128fc:	mov	r2, r8
   12900:	ldr	r0, [r1]
   12904:	ldr	r1, [pc, #20]	; 12920 <strspn@plt+0x1758>
   12908:	add	r1, pc, r1
   1290c:	bl	11108 <errx@plt>
   12910:	bl	10fac <__stack_chk_fail@plt>
   12914:	andeq	r2, r1, r4, lsl #13
   12918:	andeq	r0, r0, r4, lsl r1
   1291c:	andeq	r2, r1, r8, lsl #14
   12920:	andeq	r1, r0, r4, lsl #25
   12924:	cmp	r1, #0
   12928:	beq	12974 <strspn@plt+0x17ac>
   1292c:	ldrsb	r3, [r0]
   12930:	cmp	r3, #0
   12934:	beq	12974 <strspn@plt+0x17ac>
   12938:	sxtb	r2, r2
   1293c:	cmp	r3, r2
   12940:	bxeq	lr
   12944:	add	r1, r0, r1
   12948:	add	r3, r0, #1
   1294c:	b	12968 <strspn@plt+0x17a0>
   12950:	ldrsb	ip, [r3]
   12954:	add	r3, r3, #1
   12958:	cmp	ip, #0
   1295c:	beq	12974 <strspn@plt+0x17ac>
   12960:	cmp	ip, r2
   12964:	bxeq	lr
   12968:	cmp	r3, r1
   1296c:	mov	r0, r3
   12970:	bne	12950 <strspn@plt+0x1788>
   12974:	mov	r0, #0
   12978:	bx	lr
   1297c:	push	{r4, r5, r6, lr}
   12980:	mov	r2, #10
   12984:	mov	r4, r0
   12988:	mov	r5, r1
   1298c:	bl	12040 <strspn@plt+0xe78>
   12990:	cmp	r0, #65536	; 0x10000
   12994:	bcs	129a0 <strspn@plt+0x17d8>
   12998:	uxth	r0, r0
   1299c:	pop	{r4, r5, r6, pc}
   129a0:	mov	r1, r5
   129a4:	mov	r0, r4
   129a8:	bl	12000 <strspn@plt+0xe38>
   129ac:	push	{r4, r5, r6, lr}
   129b0:	mov	r2, #16
   129b4:	mov	r4, r0
   129b8:	mov	r5, r1
   129bc:	bl	12040 <strspn@plt+0xe78>
   129c0:	cmp	r0, #65536	; 0x10000
   129c4:	bcs	129d0 <strspn@plt+0x1808>
   129c8:	uxth	r0, r0
   129cc:	pop	{r4, r5, r6, pc}
   129d0:	mov	r1, r5
   129d4:	mov	r0, r4
   129d8:	bl	12000 <strspn@plt+0xe38>
   129dc:	mov	r2, #10
   129e0:	b	12040 <strspn@plt+0xe78>
   129e4:	mov	r2, #16
   129e8:	b	12040 <strspn@plt+0xe78>
   129ec:	ldr	r2, [pc, #236]	; 12ae0 <strspn@plt+0x1918>
   129f0:	ldr	ip, [pc, #236]	; 12ae4 <strspn@plt+0x191c>
   129f4:	add	r2, pc, r2
   129f8:	push	{r4, r5, r6, r7, r8, lr}
   129fc:	sub	sp, sp, #8
   12a00:	ldr	r7, [r2, ip]
   12a04:	mov	r5, #0
   12a08:	mov	r4, r0
   12a0c:	ldr	r3, [r7]
   12a10:	mov	r8, r1
   12a14:	str	r5, [sp]
   12a18:	str	r3, [sp, #4]
   12a1c:	bl	11084 <__errno_location@plt>
   12a20:	cmp	r4, r5
   12a24:	str	r5, [r0]
   12a28:	beq	12a38 <strspn@plt+0x1870>
   12a2c:	ldrsb	r3, [r4]
   12a30:	cmp	r3, r5
   12a34:	bne	12a58 <strspn@plt+0x1890>
   12a38:	ldr	r1, [pc, #168]	; 12ae8 <strspn@plt+0x1920>
   12a3c:	mov	r3, r4
   12a40:	add	r1, pc, r1
   12a44:	mov	r2, r8
   12a48:	ldr	r0, [r1]
   12a4c:	ldr	r1, [pc, #152]	; 12aec <strspn@plt+0x1924>
   12a50:	add	r1, pc, r1
   12a54:	bl	11108 <errx@plt>
   12a58:	mov	r6, r0
   12a5c:	mov	r2, #10
   12a60:	mov	r3, r5
   12a64:	mov	r1, sp
   12a68:	mov	r0, r4
   12a6c:	bl	11144 <__strtoll_internal@plt>
   12a70:	ldr	r2, [r6]
   12a74:	cmp	r2, r5
   12a78:	bne	12ab4 <strspn@plt+0x18ec>
   12a7c:	ldr	r3, [sp]
   12a80:	cmp	r3, r4
   12a84:	beq	12a38 <strspn@plt+0x1870>
   12a88:	cmp	r3, r5
   12a8c:	beq	12a9c <strspn@plt+0x18d4>
   12a90:	ldrsb	r3, [r3]
   12a94:	cmp	r3, r5
   12a98:	bne	12a38 <strspn@plt+0x1870>
   12a9c:	ldr	r2, [sp, #4]
   12aa0:	ldr	r3, [r7]
   12aa4:	cmp	r2, r3
   12aa8:	bne	12adc <strspn@plt+0x1914>
   12aac:	add	sp, sp, #8
   12ab0:	pop	{r4, r5, r6, r7, r8, pc}
   12ab4:	ldr	r3, [pc, #52]	; 12af0 <strspn@plt+0x1928>
   12ab8:	cmp	r2, #34	; 0x22
   12abc:	add	r3, pc, r3
   12ac0:	ldr	r0, [r3]
   12ac4:	bne	12a38 <strspn@plt+0x1870>
   12ac8:	ldr	r1, [pc, #36]	; 12af4 <strspn@plt+0x192c>
   12acc:	mov	r3, r4
   12ad0:	mov	r2, r8
   12ad4:	add	r1, pc, r1
   12ad8:	bl	10fc4 <err@plt>
   12adc:	bl	10fac <__stack_chk_fail@plt>
   12ae0:	andeq	r2, r1, r8, ror #9
   12ae4:	andeq	r0, r0, r4, lsl r1
   12ae8:	andeq	r2, r1, r0, asr #11
   12aec:	andeq	r1, r0, ip, lsr fp
   12af0:	andeq	r2, r1, r4, asr #10
   12af4:			; <UNDEFINED> instruction: 0x00001ab8
   12af8:	push	{r4, r5, r6, r7, r8, lr}
   12afc:	mov	r7, r0
   12b00:	mov	r6, r1
   12b04:	bl	129ec <strspn@plt+0x1824>
   12b08:	mov	r3, #0
   12b0c:	mvn	r2, #0
   12b10:	adds	r4, r0, #-2147483648	; 0x80000000
   12b14:	adc	r5, r1, #0
   12b18:	cmp	r5, r3
   12b1c:	cmpeq	r4, r2
   12b20:	popls	{r4, r5, r6, r7, r8, pc}
   12b24:	bl	11084 <__errno_location@plt>
   12b28:	ldr	ip, [pc, #32]	; 12b50 <strspn@plt+0x1988>
   12b2c:	ldr	r1, [pc, #32]	; 12b54 <strspn@plt+0x198c>
   12b30:	add	ip, pc, ip
   12b34:	mov	lr, #34	; 0x22
   12b38:	mov	r3, r7
   12b3c:	mov	r2, r6
   12b40:	add	r1, pc, r1
   12b44:	str	lr, [r0]
   12b48:	ldr	r0, [ip]
   12b4c:	bl	10fc4 <err@plt>
   12b50:	ldrdeq	r2, [r1], -r0
   12b54:	andeq	r1, r0, ip, asr #20
   12b58:	push	{r4, r5, r6, lr}
   12b5c:	mov	r5, r0
   12b60:	mov	r4, r1
   12b64:	bl	12af8 <strspn@plt+0x1930>
   12b68:	add	r3, r0, #32768	; 0x8000
   12b6c:	cmp	r3, #65536	; 0x10000
   12b70:	bcs	12b7c <strspn@plt+0x19b4>
   12b74:	sxth	r0, r0
   12b78:	pop	{r4, r5, r6, pc}
   12b7c:	bl	11084 <__errno_location@plt>
   12b80:	ldr	ip, [pc, #32]	; 12ba8 <strspn@plt+0x19e0>
   12b84:	ldr	r1, [pc, #32]	; 12bac <strspn@plt+0x19e4>
   12b88:	add	ip, pc, ip
   12b8c:	mov	lr, #34	; 0x22
   12b90:	mov	r3, r5
   12b94:	mov	r2, r4
   12b98:	add	r1, pc, r1
   12b9c:	str	lr, [r0]
   12ba0:	ldr	r0, [ip]
   12ba4:	bl	10fc4 <err@plt>
   12ba8:	andeq	r2, r1, r8, ror r4
   12bac:	strdeq	r1, [r0], -r4
   12bb0:	mov	r2, #10
   12bb4:	b	11eec <strspn@plt+0xd24>
   12bb8:	mov	r2, #16
   12bbc:	b	11eec <strspn@plt+0xd24>
   12bc0:	ldr	r2, [pc, #228]	; 12cac <strspn@plt+0x1ae4>
   12bc4:	ldr	r3, [pc, #228]	; 12cb0 <strspn@plt+0x1ae8>
   12bc8:	add	r2, pc, r2
   12bcc:	push	{r4, r5, r6, r7, r8, lr}
   12bd0:	sub	sp, sp, #8
   12bd4:	ldr	r7, [r2, r3]
   12bd8:	mov	r5, #0
   12bdc:	mov	r4, r0
   12be0:	ldr	r3, [r7]
   12be4:	mov	r8, r1
   12be8:	str	r5, [sp]
   12bec:	str	r3, [sp, #4]
   12bf0:	bl	11084 <__errno_location@plt>
   12bf4:	cmp	r4, r5
   12bf8:	str	r5, [r0]
   12bfc:	beq	12c0c <strspn@plt+0x1a44>
   12c00:	ldrsb	r3, [r4]
   12c04:	cmp	r3, r5
   12c08:	bne	12c2c <strspn@plt+0x1a64>
   12c0c:	ldr	r1, [pc, #160]	; 12cb4 <strspn@plt+0x1aec>
   12c10:	mov	r3, r4
   12c14:	add	r1, pc, r1
   12c18:	mov	r2, r8
   12c1c:	ldr	r0, [r1]
   12c20:	ldr	r1, [pc, #144]	; 12cb8 <strspn@plt+0x1af0>
   12c24:	add	r1, pc, r1
   12c28:	bl	11108 <errx@plt>
   12c2c:	mov	r6, r0
   12c30:	mov	r1, sp
   12c34:	mov	r0, r4
   12c38:	bl	110cc <strtod@plt>
   12c3c:	ldr	r2, [r6]
   12c40:	cmp	r2, r5
   12c44:	bne	12c80 <strspn@plt+0x1ab8>
   12c48:	ldr	r3, [sp]
   12c4c:	cmp	r3, r4
   12c50:	beq	12c0c <strspn@plt+0x1a44>
   12c54:	cmp	r3, r5
   12c58:	beq	12c68 <strspn@plt+0x1aa0>
   12c5c:	ldrsb	r3, [r3]
   12c60:	cmp	r3, r5
   12c64:	bne	12c0c <strspn@plt+0x1a44>
   12c68:	ldr	r2, [sp, #4]
   12c6c:	ldr	r3, [r7]
   12c70:	cmp	r2, r3
   12c74:	bne	12ca8 <strspn@plt+0x1ae0>
   12c78:	add	sp, sp, #8
   12c7c:	pop	{r4, r5, r6, r7, r8, pc}
   12c80:	ldr	r3, [pc, #52]	; 12cbc <strspn@plt+0x1af4>
   12c84:	cmp	r2, #34	; 0x22
   12c88:	add	r3, pc, r3
   12c8c:	ldr	r0, [r3]
   12c90:	bne	12c0c <strspn@plt+0x1a44>
   12c94:	ldr	r1, [pc, #36]	; 12cc0 <strspn@plt+0x1af8>
   12c98:	mov	r3, r4
   12c9c:	mov	r2, r8
   12ca0:	add	r1, pc, r1
   12ca4:	bl	10fc4 <err@plt>
   12ca8:	bl	10fac <__stack_chk_fail@plt>
   12cac:	andeq	r2, r1, r4, lsl r3
   12cb0:	andeq	r0, r0, r4, lsl r1
   12cb4:	andeq	r2, r1, ip, ror #7
   12cb8:	andeq	r1, r0, r8, ror #18
   12cbc:	andeq	r2, r1, r8, ror r3
   12cc0:	andeq	r1, r0, ip, ror #17
   12cc4:	ldr	r2, [pc, #232]	; 12db4 <strspn@plt+0x1bec>
   12cc8:	ldr	r3, [pc, #232]	; 12db8 <strspn@plt+0x1bf0>
   12ccc:	add	r2, pc, r2
   12cd0:	push	{r4, r5, r6, r7, r8, lr}
   12cd4:	sub	sp, sp, #8
   12cd8:	ldr	r7, [r2, r3]
   12cdc:	mov	r5, #0
   12ce0:	mov	r4, r0
   12ce4:	ldr	r3, [r7]
   12ce8:	mov	r8, r1
   12cec:	str	r5, [sp]
   12cf0:	str	r3, [sp, #4]
   12cf4:	bl	11084 <__errno_location@plt>
   12cf8:	cmp	r4, r5
   12cfc:	str	r5, [r0]
   12d00:	beq	12d10 <strspn@plt+0x1b48>
   12d04:	ldrsb	r3, [r4]
   12d08:	cmp	r3, r5
   12d0c:	bne	12d30 <strspn@plt+0x1b68>
   12d10:	ldr	r1, [pc, #164]	; 12dbc <strspn@plt+0x1bf4>
   12d14:	mov	r3, r4
   12d18:	add	r1, pc, r1
   12d1c:	mov	r2, r8
   12d20:	ldr	r0, [r1]
   12d24:	ldr	r1, [pc, #148]	; 12dc0 <strspn@plt+0x1bf8>
   12d28:	add	r1, pc, r1
   12d2c:	bl	11108 <errx@plt>
   12d30:	mov	r6, r0
   12d34:	mov	r2, #10
   12d38:	mov	r1, sp
   12d3c:	mov	r0, r4
   12d40:	bl	10eec <strtol@plt>
   12d44:	ldr	r2, [r6]
   12d48:	cmp	r2, r5
   12d4c:	bne	12d88 <strspn@plt+0x1bc0>
   12d50:	ldr	r3, [sp]
   12d54:	cmp	r3, r4
   12d58:	beq	12d10 <strspn@plt+0x1b48>
   12d5c:	cmp	r3, r5
   12d60:	beq	12d70 <strspn@plt+0x1ba8>
   12d64:	ldrsb	r3, [r3]
   12d68:	cmp	r3, r5
   12d6c:	bne	12d10 <strspn@plt+0x1b48>
   12d70:	ldr	r2, [sp, #4]
   12d74:	ldr	r3, [r7]
   12d78:	cmp	r2, r3
   12d7c:	bne	12db0 <strspn@plt+0x1be8>
   12d80:	add	sp, sp, #8
   12d84:	pop	{r4, r5, r6, r7, r8, pc}
   12d88:	ldr	r3, [pc, #52]	; 12dc4 <strspn@plt+0x1bfc>
   12d8c:	cmp	r2, #34	; 0x22
   12d90:	add	r3, pc, r3
   12d94:	ldr	r0, [r3]
   12d98:	bne	12d10 <strspn@plt+0x1b48>
   12d9c:	ldr	r1, [pc, #36]	; 12dc8 <strspn@plt+0x1c00>
   12da0:	mov	r3, r4
   12da4:	mov	r2, r8
   12da8:	add	r1, pc, r1
   12dac:	bl	10fc4 <err@plt>
   12db0:	bl	10fac <__stack_chk_fail@plt>
   12db4:	andeq	r2, r1, r0, lsl r2
   12db8:	andeq	r0, r0, r4, lsl r1
   12dbc:	andeq	r2, r1, r8, ror #5
   12dc0:	andeq	r1, r0, r4, ror #16
   12dc4:	andeq	r2, r1, r0, ror r2
   12dc8:	andeq	r1, r0, r4, ror #15
   12dcc:	ldr	r2, [pc, #232]	; 12ebc <strspn@plt+0x1cf4>
   12dd0:	ldr	r3, [pc, #232]	; 12ec0 <strspn@plt+0x1cf8>
   12dd4:	add	r2, pc, r2
   12dd8:	push	{r4, r5, r6, r7, r8, lr}
   12ddc:	sub	sp, sp, #8
   12de0:	ldr	r7, [r2, r3]
   12de4:	mov	r5, #0
   12de8:	mov	r4, r0
   12dec:	ldr	r3, [r7]
   12df0:	mov	r8, r1
   12df4:	str	r5, [sp]
   12df8:	str	r3, [sp, #4]
   12dfc:	bl	11084 <__errno_location@plt>
   12e00:	cmp	r4, r5
   12e04:	str	r5, [r0]
   12e08:	beq	12e18 <strspn@plt+0x1c50>
   12e0c:	ldrsb	r3, [r4]
   12e10:	cmp	r3, r5
   12e14:	bne	12e38 <strspn@plt+0x1c70>
   12e18:	ldr	r1, [pc, #164]	; 12ec4 <strspn@plt+0x1cfc>
   12e1c:	mov	r3, r4
   12e20:	add	r1, pc, r1
   12e24:	mov	r2, r8
   12e28:	ldr	r0, [r1]
   12e2c:	ldr	r1, [pc, #148]	; 12ec8 <strspn@plt+0x1d00>
   12e30:	add	r1, pc, r1
   12e34:	bl	11108 <errx@plt>
   12e38:	mov	r6, r0
   12e3c:	mov	r2, #10
   12e40:	mov	r1, sp
   12e44:	mov	r0, r4
   12e48:	bl	11054 <strtoul@plt>
   12e4c:	ldr	r2, [r6]
   12e50:	cmp	r2, r5
   12e54:	bne	12e90 <strspn@plt+0x1cc8>
   12e58:	ldr	r3, [sp]
   12e5c:	cmp	r3, r4
   12e60:	beq	12e18 <strspn@plt+0x1c50>
   12e64:	cmp	r3, r5
   12e68:	beq	12e78 <strspn@plt+0x1cb0>
   12e6c:	ldrsb	r3, [r3]
   12e70:	cmp	r3, r5
   12e74:	bne	12e18 <strspn@plt+0x1c50>
   12e78:	ldr	r2, [sp, #4]
   12e7c:	ldr	r3, [r7]
   12e80:	cmp	r2, r3
   12e84:	bne	12eb8 <strspn@plt+0x1cf0>
   12e88:	add	sp, sp, #8
   12e8c:	pop	{r4, r5, r6, r7, r8, pc}
   12e90:	ldr	r3, [pc, #52]	; 12ecc <strspn@plt+0x1d04>
   12e94:	cmp	r2, #34	; 0x22
   12e98:	add	r3, pc, r3
   12e9c:	ldr	r0, [r3]
   12ea0:	bne	12e18 <strspn@plt+0x1c50>
   12ea4:	ldr	r1, [pc, #36]	; 12ed0 <strspn@plt+0x1d08>
   12ea8:	mov	r3, r4
   12eac:	mov	r2, r8
   12eb0:	add	r1, pc, r1
   12eb4:	bl	10fc4 <err@plt>
   12eb8:	bl	10fac <__stack_chk_fail@plt>
   12ebc:	andeq	r2, r1, r8, lsl #2
   12ec0:	andeq	r0, r0, r4, lsl r1
   12ec4:	andeq	r2, r1, r0, ror #3
   12ec8:	andeq	r1, r0, ip, asr r7
   12ecc:	andeq	r2, r1, r8, ror #2
   12ed0:	ldrdeq	r1, [r0], -ip
   12ed4:	ldr	r3, [pc, #140]	; 12f68 <strspn@plt+0x1da0>
   12ed8:	ldr	r2, [pc, #140]	; 12f6c <strspn@plt+0x1da4>
   12edc:	add	r3, pc, r3
   12ee0:	push	{r4, r5, r6, lr}
   12ee4:	sub	sp, sp, #16
   12ee8:	ldr	r4, [r3, r2]
   12eec:	mov	r5, r1
   12ef0:	mov	r1, sp
   12ef4:	ldr	r3, [r4]
   12ef8:	mov	r6, r0
   12efc:	str	r3, [sp, #12]
   12f00:	bl	12714 <strspn@plt+0x154c>
   12f04:	cmp	r0, #0
   12f08:	beq	12f48 <strspn@plt+0x1d80>
   12f0c:	bl	11084 <__errno_location@plt>
   12f10:	ldr	r3, [pc, #88]	; 12f70 <strspn@plt+0x1da8>
   12f14:	mov	r2, r5
   12f18:	ldr	r1, [pc, r3]
   12f1c:	ldr	r3, [r0]
   12f20:	mov	r0, r1
   12f24:	cmp	r3, #0
   12f28:	mov	r3, r6
   12f2c:	beq	12f3c <strspn@plt+0x1d74>
   12f30:	ldr	r1, [pc, #60]	; 12f74 <strspn@plt+0x1dac>
   12f34:	add	r1, pc, r1
   12f38:	bl	10fc4 <err@plt>
   12f3c:	ldr	r1, [pc, #52]	; 12f78 <strspn@plt+0x1db0>
   12f40:	add	r1, pc, r1
   12f44:	bl	11108 <errx@plt>
   12f48:	ldr	r2, [sp, #12]
   12f4c:	ldr	r3, [r4]
   12f50:	ldrd	r0, [sp]
   12f54:	cmp	r2, r3
   12f58:	bne	12f64 <strspn@plt+0x1d9c>
   12f5c:	add	sp, sp, #16
   12f60:	pop	{r4, r5, r6, pc}
   12f64:	bl	10fac <__stack_chk_fail@plt>
   12f68:	andeq	r2, r1, r0
   12f6c:	andeq	r0, r0, r4, lsl r1
   12f70:	andeq	r2, r1, r8, ror #1
   12f74:	andeq	r1, r0, r8, asr r6
   12f78:	andeq	r1, r0, ip, asr #12
   12f7c:	push	{r4, lr}
   12f80:	mov	r4, r1
   12f84:	mov	r1, r2
   12f88:	bl	12bc0 <strspn@plt+0x19f8>
   12f8c:	vldr	d6, [pc, #28]	; 12fb0 <strspn@plt+0x1de8>
   12f90:	vcvt.s32.f64	s15, d0
   12f94:	vcvt.f64.s32	d5, s15
   12f98:	vstr	s15, [r4]
   12f9c:	vsub.f64	d0, d0, d5
   12fa0:	vmul.f64	d0, d0, d6
   12fa4:	vcvt.s32.f64	s0, d0
   12fa8:	vstr	s0, [r4, #4]
   12fac:	pop	{r4, pc}
   12fb0:	andeq	r0, r0, r0
   12fb4:	smlawbmi	lr, r0, r4, r8
   12fb8:	and	r2, r0, #61440	; 0xf000
   12fbc:	cmp	r2, #16384	; 0x4000
   12fc0:	moveq	r2, r1
   12fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fc8:	moveq	sl, #100	; 0x64
   12fcc:	mov	r3, r0
   12fd0:	add	r9, r1, #1
   12fd4:	add	r8, r1, #2
   12fd8:	add	r7, r1, #3
   12fdc:	add	r6, r1, #4
   12fe0:	add	r5, r1, #5
   12fe4:	add	r4, r1, #6
   12fe8:	add	lr, r1, #7
   12fec:	add	ip, r1, #8
   12ff0:	add	r0, r1, #9
   12ff4:	strbeq	sl, [r2], #10
   12ff8:	beq	1309c <strspn@plt+0x1ed4>
   12ffc:	cmp	r2, #40960	; 0xa000
   13000:	moveq	r2, r1
   13004:	moveq	sl, #108	; 0x6c
   13008:	strbeq	sl, [r2], #10
   1300c:	beq	1309c <strspn@plt+0x1ed4>
   13010:	cmp	r2, #8192	; 0x2000
   13014:	moveq	r2, r1
   13018:	moveq	sl, #99	; 0x63
   1301c:	strbeq	sl, [r2], #10
   13020:	beq	1309c <strspn@plt+0x1ed4>
   13024:	cmp	r2, #24576	; 0x6000
   13028:	moveq	r2, r1
   1302c:	moveq	sl, #98	; 0x62
   13030:	strbeq	sl, [r2], #10
   13034:	beq	1309c <strspn@plt+0x1ed4>
   13038:	cmp	r2, #49152	; 0xc000
   1303c:	moveq	r2, r1
   13040:	moveq	sl, #115	; 0x73
   13044:	strbeq	sl, [r2], #10
   13048:	beq	1309c <strspn@plt+0x1ed4>
   1304c:	cmp	r2, #4096	; 0x1000
   13050:	moveq	r2, r1
   13054:	moveq	sl, #112	; 0x70
   13058:	strbeq	sl, [r2], #10
   1305c:	beq	1309c <strspn@plt+0x1ed4>
   13060:	cmp	r2, #32768	; 0x8000
   13064:	moveq	r2, r1
   13068:	moveq	sl, #45	; 0x2d
   1306c:	strbeq	sl, [r2], #10
   13070:	beq	1309c <strspn@plt+0x1ed4>
   13074:	mov	r2, r0
   13078:	mov	r0, ip
   1307c:	mov	ip, lr
   13080:	mov	lr, r4
   13084:	mov	r4, r5
   13088:	mov	r5, r6
   1308c:	mov	r6, r7
   13090:	mov	r7, r8
   13094:	mov	r8, r9
   13098:	mov	r9, r1
   1309c:	tst	r3, #256	; 0x100
   130a0:	movne	fp, #114	; 0x72
   130a4:	moveq	fp, #45	; 0x2d
   130a8:	tst	r3, #128	; 0x80
   130ac:	movne	sl, #119	; 0x77
   130b0:	moveq	sl, #45	; 0x2d
   130b4:	tst	r3, #2048	; 0x800
   130b8:	strb	fp, [r9]
   130bc:	and	r9, r3, #64	; 0x40
   130c0:	strb	sl, [r8]
   130c4:	beq	13160 <strspn@plt+0x1f98>
   130c8:	cmp	r9, #0
   130cc:	movne	r9, #115	; 0x73
   130d0:	moveq	r9, #83	; 0x53
   130d4:	tst	r3, #32
   130d8:	movne	r8, #114	; 0x72
   130dc:	moveq	r8, #45	; 0x2d
   130e0:	tst	r3, #16
   130e4:	strb	r9, [r7]
   130e8:	movne	r7, #119	; 0x77
   130ec:	moveq	r7, #45	; 0x2d
   130f0:	tst	r3, #1024	; 0x400
   130f4:	strb	r8, [r6]
   130f8:	and	r6, r3, #8
   130fc:	strb	r7, [r5]
   13100:	beq	13170 <strspn@plt+0x1fa8>
   13104:	cmp	r6, #0
   13108:	movne	r6, #115	; 0x73
   1310c:	moveq	r6, #83	; 0x53
   13110:	tst	r3, #4
   13114:	movne	r5, #114	; 0x72
   13118:	moveq	r5, #45	; 0x2d
   1311c:	tst	r3, #2
   13120:	strb	r6, [r4]
   13124:	movne	r4, #119	; 0x77
   13128:	moveq	r4, #45	; 0x2d
   1312c:	tst	r3, #512	; 0x200
   13130:	strb	r5, [lr]
   13134:	and	r3, r3, #1
   13138:	strb	r4, [ip]
   1313c:	beq	13180 <strspn@plt+0x1fb8>
   13140:	cmp	r3, #0
   13144:	movne	ip, #116	; 0x74
   13148:	moveq	ip, #84	; 0x54
   1314c:	mov	r3, #0
   13150:	strb	ip, [r0]
   13154:	mov	r0, r1
   13158:	strb	r3, [r2]
   1315c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13160:	cmp	r9, #0
   13164:	movne	r9, #120	; 0x78
   13168:	moveq	r9, #45	; 0x2d
   1316c:	b	130d4 <strspn@plt+0x1f0c>
   13170:	cmp	r6, #0
   13174:	movne	r6, #120	; 0x78
   13178:	moveq	r6, #45	; 0x2d
   1317c:	b	13110 <strspn@plt+0x1f48>
   13180:	cmp	r3, #0
   13184:	movne	ip, #120	; 0x78
   13188:	moveq	ip, #45	; 0x2d
   1318c:	b	1314c <strspn@plt+0x1f84>
   13190:	ldr	r1, [pc, #680]	; 13440 <strspn@plt+0x2278>
   13194:	ldr	ip, [pc, #680]	; 13444 <strspn@plt+0x227c>
   13198:	add	r1, pc, r1
   1319c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131a0:	sub	sp, sp, #108	; 0x6c
   131a4:	ldr	r8, [r1, ip]
   131a8:	tst	r0, #2
   131ac:	strd	r2, [sp, #32]
   131b0:	ldr	r1, [r8]
   131b4:	addeq	r9, sp, #60	; 0x3c
   131b8:	str	r1, [sp, #100]	; 0x64
   131bc:	ldrd	r2, [sp, #32]
   131c0:	movne	r1, #32
   131c4:	strbne	r1, [sp, #60]	; 0x3c
   131c8:	addne	ip, sp, #61	; 0x3d
   131cc:	addne	r9, sp, #60	; 0x3c
   131d0:	moveq	ip, r9
   131d4:	mov	r1, #10
   131d8:	mov	sl, #1
   131dc:	sub	lr, r1, #32
   131e0:	lsl	r4, sl, r1
   131e4:	lsl	r5, sl, lr
   131e8:	rsb	lr, r1, #32
   131ec:	orr	r5, r5, sl, lsr lr
   131f0:	cmp	r3, r5
   131f4:	cmpeq	r2, r4
   131f8:	bcc	133b4 <strspn@plt+0x21ec>
   131fc:	add	r1, r1, #10
   13200:	cmp	r1, #70	; 0x46
   13204:	bne	131dc <strspn@plt+0x2014>
   13208:	mov	lr, ip
   1320c:	strd	r2, [sp, #32]
   13210:	mov	r4, r2
   13214:	tst	r0, #1
   13218:	mov	r2, #69	; 0x45
   1321c:	bic	r5, r3, #-268435456	; 0xf0000000
   13220:	lsr	sl, r3, #28
   13224:	strb	r2, [lr], #1
   13228:	bne	1339c <strspn@plt+0x21d4>
   1322c:	orrs	r3, r4, r5
   13230:	mov	r3, #0
   13234:	strb	r3, [lr]
   13238:	beq	133dc <strspn@plt+0x2214>
   1323c:	sub	r2, r1, #20
   13240:	rsb	r0, r2, #32
   13244:	lsr	r3, r4, r2
   13248:	sub	r1, r1, #52	; 0x34
   1324c:	orr	r3, r3, r5, lsl r0
   13250:	orr	r3, r3, r5, lsr r1
   13254:	lsr	r2, r5, r2
   13258:	adds	r6, r3, #50	; 0x32
   1325c:	adc	r7, r2, #0
   13260:	mov	r3, #0
   13264:	mov	r2, #100	; 0x64
   13268:	mov	r0, r6
   1326c:	mov	r1, r7
   13270:	bl	13fa0 <strspn@plt+0x2dd8>
   13274:	cmp	r1, #0
   13278:	cmpeq	r0, #10
   1327c:	mov	r2, r0
   13280:	mov	r3, r1
   13284:	addeq	sl, sl, #1
   13288:	beq	133dc <strspn@plt+0x2214>
   1328c:	cmp	r7, #0
   13290:	cmpeq	r6, #99	; 0x63
   13294:	strd	r2, [sp, #32]
   13298:	bls	133dc <strspn@plt+0x2214>
   1329c:	bl	1112c <localeconv@plt>
   132a0:	ldrd	r2, [sp, #32]
   132a4:	cmp	r0, #0
   132a8:	beq	13424 <strspn@plt+0x225c>
   132ac:	ldr	r0, [r0]
   132b0:	cmp	r0, #0
   132b4:	beq	13430 <strspn@plt+0x2268>
   132b8:	ldrsb	r1, [r0]
   132bc:	cmp	r1, #0
   132c0:	ldreq	r0, [pc, #384]	; 13448 <strspn@plt+0x2280>
   132c4:	addeq	r0, pc, r0
   132c8:	ldr	r1, [pc, #380]	; 1344c <strspn@plt+0x2284>
   132cc:	strd	r2, [sp, #16]
   132d0:	add	r1, pc, r1
   132d4:	add	r4, sp, #68	; 0x44
   132d8:	mov	r3, #32
   132dc:	str	r0, [sp, #8]
   132e0:	str	r1, [sp]
   132e4:	str	r9, [sp, #24]
   132e8:	str	sl, [sp, #4]
   132ec:	mov	r0, r4
   132f0:	mov	r1, r3
   132f4:	mov	r2, #1
   132f8:	bl	111bc <__snprintf_chk@plt>
   132fc:	b	13404 <strspn@plt+0x223c>
   13300:	ldr	r4, [pc, #328]	; 13450 <strspn@plt+0x2288>
   13304:	mvn	sl, #0
   13308:	ldr	fp, [pc, #324]	; 13454 <strspn@plt+0x228c>
   1330c:	umull	r2, r3, lr, r4
   13310:	sub	r4, r1, #42	; 0x2a
   13314:	strd	r2, [sp, #40]	; 0x28
   13318:	ldr	r3, [sp, #44]	; 0x2c
   1331c:	lsl	r2, sl, lr
   13320:	lsr	r3, r3, #3
   13324:	str	r3, [sp, #52]	; 0x34
   13328:	ldr	r3, [sp, #32]
   1332c:	str	r4, [sp, #48]	; 0x30
   13330:	orr	r4, r2, sl, lsl r4
   13334:	lsr	r2, r3, lr
   13338:	mov	r3, r2
   1333c:	ldr	r2, [sp, #52]	; 0x34
   13340:	add	fp, pc, fp
   13344:	str	r4, [sp, #40]	; 0x28
   13348:	ldrsb	fp, [fp, r2]
   1334c:	mov	r2, r3
   13350:	ldr	r3, [sp, #36]	; 0x24
   13354:	rsb	r5, lr, #32
   13358:	ldr	r4, [sp, #40]	; 0x28
   1335c:	orr	r2, r2, r3, lsl r5
   13360:	orr	r4, r4, sl, lsr r5
   13364:	ldr	r3, [sp, #32]
   13368:	str	r4, [sp, #40]	; 0x28
   1336c:	cmp	r0, #0
   13370:	bic	r4, r3, sl, lsl lr
   13374:	ldr	r0, [sp, #36]	; 0x24
   13378:	ldr	r3, [sp, #48]	; 0x30
   1337c:	mov	lr, ip
   13380:	orr	sl, r2, r0, lsr r3
   13384:	ldr	r3, [sp, #40]	; 0x28
   13388:	strb	fp, [lr], #1
   1338c:	bic	r5, r0, r3
   13390:	beq	1322c <strspn@plt+0x2064>
   13394:	cmp	fp, #66	; 0x42
   13398:	beq	1322c <strspn@plt+0x2064>
   1339c:	mov	r3, #105	; 0x69
   133a0:	strb	r3, [ip, #1]
   133a4:	mov	r3, #66	; 0x42
   133a8:	add	lr, ip, #3
   133ac:	strb	r3, [ip, #2]
   133b0:	b	1322c <strspn@plt+0x2064>
   133b4:	subs	lr, r1, #10
   133b8:	strd	r2, [sp, #32]
   133bc:	and	r0, r0, #1
   133c0:	bne	13300 <strspn@plt+0x2138>
   133c4:	ldr	sl, [sp, #32]
   133c8:	cmp	r0, #0
   133cc:	movne	r0, lr
   133d0:	mov	r3, #66	; 0x42
   133d4:	strb	r0, [ip, #1]
   133d8:	strb	r3, [ip]
   133dc:	ldr	r2, [pc, #116]	; 13458 <strspn@plt+0x2290>
   133e0:	add	r4, sp, #68	; 0x44
   133e4:	add	r2, pc, r2
   133e8:	mov	r3, #32
   133ec:	stm	sp, {r2, sl}
   133f0:	str	r9, [sp, #8]
   133f4:	mov	r0, r4
   133f8:	mov	r1, r3
   133fc:	mov	r2, #1
   13400:	bl	111bc <__snprintf_chk@plt>
   13404:	mov	r0, r4
   13408:	bl	10fa0 <strdup@plt>
   1340c:	ldr	r2, [sp, #100]	; 0x64
   13410:	ldr	r3, [r8]
   13414:	cmp	r2, r3
   13418:	bne	1343c <strspn@plt+0x2274>
   1341c:	add	sp, sp, #108	; 0x6c
   13420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13424:	ldr	r0, [pc, #48]	; 1345c <strspn@plt+0x2294>
   13428:	add	r0, pc, r0
   1342c:	b	132c8 <strspn@plt+0x2100>
   13430:	ldr	r0, [pc, #40]	; 13460 <strspn@plt+0x2298>
   13434:	add	r0, pc, r0
   13438:	b	132c8 <strspn@plt+0x2100>
   1343c:	bl	10fac <__stack_chk_fail@plt>
   13440:	andeq	r1, r1, r4, asr #26
   13444:	andeq	r0, r0, r4, lsl r1
   13448:	andeq	r1, r0, ip, ror #5
   1344c:	andeq	r1, r0, ip, ror #5
   13450:	stclgt	12, cr12, [ip], {205}	; 0xcd
   13454:	andeq	r1, r0, r4, ror r2
   13458:	andeq	r1, r0, r4, ror #3
   1345c:	andeq	r1, r0, r8, lsl #3
   13460:	andeq	r1, r0, ip, ror r1
   13464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13468:	subs	r4, r0, #0
   1346c:	beq	1353c <strspn@plt+0x2374>
   13470:	ldrsb	lr, [r4]
   13474:	cmp	lr, #0
   13478:	beq	1353c <strspn@plt+0x2374>
   1347c:	cmp	r1, #0
   13480:	clz	ip, r2
   13484:	lsr	ip, ip, #5
   13488:	moveq	r0, #1
   1348c:	movne	r0, ip
   13490:	cmp	r3, #0
   13494:	moveq	r0, #1
   13498:	cmp	r0, #0
   1349c:	bne	1353c <strspn@plt+0x2374>
   134a0:	mov	r8, r3
   134a4:	mov	r7, r2
   134a8:	mov	r9, r1
   134ac:	mov	r5, r0
   134b0:	b	1350c <strspn@plt+0x2344>
   134b4:	cmp	r3, #0
   134b8:	bne	134f8 <strspn@plt+0x2330>
   134bc:	cmn	r4, #1
   134c0:	add	r6, r4, #1
   134c4:	beq	13544 <strspn@plt+0x237c>
   134c8:	cmp	r0, r6
   134cc:	bcs	1353c <strspn@plt+0x2374>
   134d0:	sub	r1, r6, r0
   134d4:	blx	r8
   134d8:	cmn	r0, #1
   134dc:	beq	1353c <strspn@plt+0x2374>
   134e0:	str	r0, [r9, r5, lsl #2]
   134e4:	ldrsb	r3, [r6]
   134e8:	add	r5, r5, #1
   134ec:	cmp	r3, #0
   134f0:	beq	13544 <strspn@plt+0x237c>
   134f4:	mov	r0, #0
   134f8:	cmn	r4, #1
   134fc:	beq	13544 <strspn@plt+0x237c>
   13500:	ldrsb	lr, [r4, #1]!
   13504:	cmp	lr, #0
   13508:	beq	13544 <strspn@plt+0x237c>
   1350c:	cmp	r7, r5
   13510:	mov	r6, r4
   13514:	bls	1354c <strspn@plt+0x2384>
   13518:	cmp	r0, #0
   1351c:	moveq	r0, r4
   13520:	cmp	lr, #44	; 0x2c
   13524:	ldrsb	r3, [r4, #1]
   13528:	bne	134b4 <strspn@plt+0x22ec>
   1352c:	cmp	r3, #0
   13530:	beq	134bc <strspn@plt+0x22f4>
   13534:	cmp	r0, r6
   13538:	bcc	134d0 <strspn@plt+0x2308>
   1353c:	mvn	r0, #0
   13540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13544:	mov	r0, r5
   13548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1354c:	mvn	r0, #1
   13550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13554:	cmp	r0, #0
   13558:	beq	135c4 <strspn@plt+0x23fc>
   1355c:	push	{r4, lr}
   13560:	mov	r4, r3
   13564:	cmp	r4, #0
   13568:	ldrsb	ip, [r0]
   1356c:	clz	r3, ip
   13570:	lsr	r3, r3, #5
   13574:	moveq	r3, #1
   13578:	cmp	r3, #0
   1357c:	bne	135bc <strspn@plt+0x23f4>
   13580:	ldr	lr, [r4]
   13584:	cmp	lr, r2
   13588:	bhi	135bc <strspn@plt+0x23f4>
   1358c:	cmp	ip, #43	; 0x2b
   13590:	strne	r3, [r4]
   13594:	addeq	r0, r0, #1
   13598:	ldr	r3, [sp, #8]
   1359c:	addeq	r1, r1, lr, lsl #2
   135a0:	subeq	r2, r2, lr
   135a4:	bl	13464 <strspn@plt+0x229c>
   135a8:	cmp	r0, #0
   135ac:	ldrgt	r3, [r4]
   135b0:	addgt	r3, r3, r0
   135b4:	strgt	r3, [r4]
   135b8:	pop	{r4, pc}
   135bc:	mvn	r0, #0
   135c0:	pop	{r4, pc}
   135c4:	mvn	r0, #0
   135c8:	bx	lr
   135cc:	cmp	r2, #0
   135d0:	clz	r3, r1
   135d4:	lsr	r3, r3, #5
   135d8:	moveq	r3, #1
   135dc:	cmp	r0, #0
   135e0:	moveq	r3, #1
   135e4:	cmp	r3, #0
   135e8:	bne	136b4 <strspn@plt+0x24ec>
   135ec:	push	{r4, r5, r6, r7, r8, lr}
   135f0:	mov	r6, r2
   135f4:	mov	r2, r3
   135f8:	ldrsb	r3, [r0]
   135fc:	mov	r8, r1
   13600:	mov	r4, r0
   13604:	mov	r7, #1
   13608:	cmp	r3, #0
   1360c:	beq	1367c <strspn@plt+0x24b4>
   13610:	cmp	r2, #0
   13614:	moveq	r2, r4
   13618:	cmp	r3, #44	; 0x2c
   1361c:	mov	r5, r4
   13620:	ldrsb	r3, [r4, #1]!
   13624:	beq	13684 <strspn@plt+0x24bc>
   13628:	cmp	r3, #0
   1362c:	bne	136a4 <strspn@plt+0x24dc>
   13630:	mov	r5, r4
   13634:	cmp	r2, r5
   13638:	sub	r1, r5, r2
   1363c:	mov	r0, r2
   13640:	bcs	1369c <strspn@plt+0x24d4>
   13644:	blx	r6
   13648:	mov	r2, r4
   1364c:	cmp	r0, #0
   13650:	and	r1, r0, #7
   13654:	poplt	{r4, r5, r6, r7, r8, pc}
   13658:	ldrb	r3, [r8, r0, asr #3]
   1365c:	orr	r3, r3, r7, lsl r1
   13660:	strb	r3, [r8, r0, asr #3]
   13664:	ldrsb	r3, [r5]
   13668:	cmp	r3, #0
   1366c:	beq	1367c <strspn@plt+0x24b4>
   13670:	ldrsb	r3, [r4]
   13674:	cmp	r3, #0
   13678:	bne	13618 <strspn@plt+0x2450>
   1367c:	mov	r0, #0
   13680:	pop	{r4, r5, r6, r7, r8, pc}
   13684:	cmp	r3, #0
   13688:	moveq	r5, r4
   1368c:	cmp	r2, r5
   13690:	sub	r1, r5, r2
   13694:	mov	r0, r2
   13698:	bcc	13644 <strspn@plt+0x247c>
   1369c:	mvn	r0, #0
   136a0:	pop	{r4, r5, r6, r7, r8, pc}
   136a4:	adds	r4, r5, #1
   136a8:	bne	13608 <strspn@plt+0x2440>
   136ac:	mov	r0, #0
   136b0:	pop	{r4, r5, r6, r7, r8, pc}
   136b4:	mvn	r0, #21
   136b8:	bx	lr
   136bc:	cmp	r2, #0
   136c0:	clz	r3, r1
   136c4:	lsr	r3, r3, #5
   136c8:	moveq	r3, #1
   136cc:	cmp	r0, #0
   136d0:	moveq	r3, #1
   136d4:	cmp	r3, #0
   136d8:	bne	1379c <strspn@plt+0x25d4>
   136dc:	push	{r4, r5, r6, r7, r8, lr}
   136e0:	mov	r6, r2
   136e4:	mov	r2, r3
   136e8:	ldrsb	r3, [r0]
   136ec:	mov	r7, r1
   136f0:	mov	r4, r0
   136f4:	cmp	r3, #0
   136f8:	beq	13764 <strspn@plt+0x259c>
   136fc:	cmp	r2, #0
   13700:	moveq	r2, r4
   13704:	cmp	r3, #44	; 0x2c
   13708:	mov	r5, r4
   1370c:	ldrsb	r3, [r4, #1]!
   13710:	beq	1376c <strspn@plt+0x25a4>
   13714:	cmp	r3, #0
   13718:	bne	1378c <strspn@plt+0x25c4>
   1371c:	mov	r5, r4
   13720:	cmp	r2, r5
   13724:	sub	r1, r5, r2
   13728:	mov	r0, r2
   1372c:	bcs	13784 <strspn@plt+0x25bc>
   13730:	blx	r6
   13734:	mov	r2, r4
   13738:	cmp	r0, #0
   1373c:	poplt	{r4, r5, r6, r7, r8, pc}
   13740:	ldr	r3, [r7]
   13744:	orr	r3, r3, r0
   13748:	str	r3, [r7]
   1374c:	ldrsb	r3, [r5]
   13750:	cmp	r3, #0
   13754:	beq	13764 <strspn@plt+0x259c>
   13758:	ldrsb	r3, [r4]
   1375c:	cmp	r3, #0
   13760:	bne	13704 <strspn@plt+0x253c>
   13764:	mov	r0, #0
   13768:	pop	{r4, r5, r6, r7, r8, pc}
   1376c:	cmp	r3, #0
   13770:	moveq	r5, r4
   13774:	cmp	r2, r5
   13778:	sub	r1, r5, r2
   1377c:	mov	r0, r2
   13780:	bcc	13730 <strspn@plt+0x2568>
   13784:	mvn	r0, #0
   13788:	pop	{r4, r5, r6, r7, r8, pc}
   1378c:	adds	r4, r5, #1
   13790:	bne	136f4 <strspn@plt+0x252c>
   13794:	mov	r0, #0
   13798:	pop	{r4, r5, r6, r7, r8, pc}
   1379c:	mvn	r0, #21
   137a0:	bx	lr
   137a4:	ldr	ip, [pc, #396]	; 13938 <strspn@plt+0x2770>
   137a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137ac:	add	ip, pc, ip
   137b0:	ldr	lr, [pc, #388]	; 1393c <strspn@plt+0x2774>
   137b4:	sub	sp, sp, #8
   137b8:	mov	r9, r3
   137bc:	ldr	r5, [ip, lr]
   137c0:	mov	sl, #0
   137c4:	subs	r4, r0, #0
   137c8:	ldr	r3, [r5]
   137cc:	mov	r7, r1
   137d0:	str	sl, [sp]
   137d4:	mov	r1, ip
   137d8:	str	r3, [sp, #4]
   137dc:	beq	13850 <strspn@plt+0x2688>
   137e0:	str	r9, [r7]
   137e4:	str	r9, [r2]
   137e8:	mov	r6, r2
   137ec:	bl	11084 <__errno_location@plt>
   137f0:	str	sl, [r0]
   137f4:	ldrsb	r3, [r4]
   137f8:	mov	r8, r0
   137fc:	cmp	r3, #58	; 0x3a
   13800:	beq	1386c <strspn@plt+0x26a4>
   13804:	mov	sl, sp
   13808:	mov	r1, sl
   1380c:	mov	r2, #10
   13810:	mov	r0, r4
   13814:	bl	10eec <strtol@plt>
   13818:	str	r0, [r7]
   1381c:	str	r0, [r6]
   13820:	ldr	r0, [r8]
   13824:	cmp	r0, #0
   13828:	bne	138bc <strspn@plt+0x26f4>
   1382c:	ldr	r2, [sp]
   13830:	cmp	r2, #0
   13834:	cmpne	r2, r4
   13838:	beq	138bc <strspn@plt+0x26f4>
   1383c:	ldrsb	r3, [r2]
   13840:	cmp	r3, #58	; 0x3a
   13844:	beq	138c4 <strspn@plt+0x26fc>
   13848:	cmp	r3, #45	; 0x2d
   1384c:	beq	138d4 <strspn@plt+0x270c>
   13850:	mov	r0, #0
   13854:	ldr	r2, [sp, #4]
   13858:	ldr	r3, [r5]
   1385c:	cmp	r2, r3
   13860:	bne	13934 <strspn@plt+0x276c>
   13864:	add	sp, sp, #8
   13868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1386c:	add	r4, r4, #1
   13870:	mov	r0, r4
   13874:	mov	r2, #10
   13878:	mov	r1, sp
   1387c:	bl	10eec <strtol@plt>
   13880:	str	r0, [r6]
   13884:	ldr	r3, [r8]
   13888:	cmp	r3, #0
   1388c:	bne	138bc <strspn@plt+0x26f4>
   13890:	ldr	r3, [sp]
   13894:	cmp	r3, #0
   13898:	beq	138bc <strspn@plt+0x26f4>
   1389c:	ldrsb	r2, [r3]
   138a0:	sub	r3, r3, r4
   138a4:	clz	r3, r3
   138a8:	cmp	r2, #0
   138ac:	lsr	r3, r3, #5
   138b0:	movne	r3, #1
   138b4:	cmp	r3, #0
   138b8:	beq	13850 <strspn@plt+0x2688>
   138bc:	mvn	r0, #0
   138c0:	b	13854 <strspn@plt+0x268c>
   138c4:	ldrsb	r3, [r2, #1]
   138c8:	cmp	r3, #0
   138cc:	streq	r9, [r6]
   138d0:	beq	13854 <strspn@plt+0x268c>
   138d4:	mov	r3, #0
   138d8:	add	r4, r2, #1
   138dc:	str	r3, [r8]
   138e0:	mov	r1, sl
   138e4:	mov	r0, r4
   138e8:	mov	r2, #10
   138ec:	str	r3, [sp]
   138f0:	bl	10eec <strtol@plt>
   138f4:	str	r0, [r6]
   138f8:	ldr	r3, [r8]
   138fc:	cmp	r3, #0
   13900:	bne	138bc <strspn@plt+0x26f4>
   13904:	ldr	r2, [sp]
   13908:	cmp	r2, #0
   1390c:	beq	138bc <strspn@plt+0x26f4>
   13910:	ldrsb	r3, [r2]
   13914:	sub	r2, r2, r4
   13918:	clz	r2, r2
   1391c:	cmp	r3, #0
   13920:	lsr	r2, r2, #5
   13924:	movne	r2, #1
   13928:	cmp	r2, #0
   1392c:	beq	13850 <strspn@plt+0x2688>
   13930:	b	138bc <strspn@plt+0x26f4>
   13934:	bl	10fac <__stack_chk_fail@plt>
   13938:	andeq	r1, r1, r0, lsr r7
   1393c:	andeq	r0, r0, r4, lsl r1
   13940:	ldr	r3, [pc, #244]	; 13a3c <strspn@plt+0x2874>
   13944:	ldr	r2, [pc, #244]	; 13a40 <strspn@plt+0x2878>
   13948:	add	r3, pc, r3
   1394c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13950:	sub	sp, sp, #20
   13954:	ldr	r9, [r3, r2]
   13958:	cmp	r0, #0
   1395c:	cmpne	r1, #0
   13960:	ldr	r3, [r9]
   13964:	str	r3, [sp, #12]
   13968:	beq	13a30 <strspn@plt+0x2868>
   1396c:	mov	r4, r1
   13970:	add	r8, sp, #4
   13974:	add	r7, sp, #8
   13978:	b	139b8 <strspn@plt+0x27f0>
   1397c:	cmp	r4, r3
   13980:	bne	13a30 <strspn@plt+0x2868>
   13984:	mov	r2, r4
   13988:	mov	r1, r6
   1398c:	mov	r0, r5
   13990:	bl	11198 <strncmp@plt>
   13994:	cmp	r0, #0
   13998:	bne	13a30 <strspn@plt+0x2868>
   1399c:	adds	r0, r5, r4
   139a0:	moveq	r3, #0
   139a4:	movne	r3, #1
   139a8:	adds	r4, r6, r4
   139ac:	moveq	r3, #0
   139b0:	cmp	r3, #0
   139b4:	beq	13a30 <strspn@plt+0x2868>
   139b8:	mov	r1, r8
   139bc:	bl	11dc0 <strspn@plt+0xbf8>
   139c0:	mov	r1, r7
   139c4:	mov	r5, r0
   139c8:	mov	r0, r4
   139cc:	bl	11dc0 <strspn@plt+0xbf8>
   139d0:	ldr	r4, [sp, #4]
   139d4:	ldr	r3, [sp, #8]
   139d8:	mov	r6, r0
   139dc:	adds	r0, r4, r3
   139e0:	beq	13a14 <strspn@plt+0x284c>
   139e4:	cmp	r0, #1
   139e8:	bne	1397c <strspn@plt+0x27b4>
   139ec:	cmp	r5, #0
   139f0:	beq	13a00 <strspn@plt+0x2838>
   139f4:	ldrsb	r2, [r5]
   139f8:	cmp	r2, #47	; 0x2f
   139fc:	beq	13a18 <strspn@plt+0x2850>
   13a00:	cmp	r6, #0
   13a04:	beq	1397c <strspn@plt+0x27b4>
   13a08:	ldrsb	r2, [r6]
   13a0c:	cmp	r2, #47	; 0x2f
   13a10:	bne	1397c <strspn@plt+0x27b4>
   13a14:	mov	r0, #1
   13a18:	ldr	r2, [sp, #12]
   13a1c:	ldr	r3, [r9]
   13a20:	cmp	r2, r3
   13a24:	bne	13a38 <strspn@plt+0x2870>
   13a28:	add	sp, sp, #20
   13a2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a30:	mov	r0, #0
   13a34:	b	13a18 <strspn@plt+0x2850>
   13a38:	bl	10fac <__stack_chk_fail@plt>
   13a3c:	muleq	r1, r4, r5
   13a40:	andeq	r0, r0, r4, lsl r1
   13a44:	orrs	r3, r0, r1
   13a48:	beq	13ac4 <strspn@plt+0x28fc>
   13a4c:	cmp	r0, #0
   13a50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a54:	mov	r4, r1
   13a58:	mov	r5, r0
   13a5c:	beq	13ad0 <strspn@plt+0x2908>
   13a60:	cmp	r1, #0
   13a64:	beq	13ae0 <strspn@plt+0x2918>
   13a68:	mov	r6, r2
   13a6c:	bl	11060 <strlen@plt>
   13a70:	mvn	r3, r0
   13a74:	cmp	r6, r3
   13a78:	mov	r7, r0
   13a7c:	movhi	r8, #0
   13a80:	bhi	13abc <strspn@plt+0x28f4>
   13a84:	add	r9, r6, r0
   13a88:	add	r0, r9, #1
   13a8c:	bl	10ff4 <malloc@plt>
   13a90:	subs	r8, r0, #0
   13a94:	beq	13abc <strspn@plt+0x28f4>
   13a98:	mov	r1, r5
   13a9c:	mov	r2, r7
   13aa0:	bl	10f64 <memcpy@plt>
   13aa4:	mov	r2, r6
   13aa8:	mov	r1, r4
   13aac:	add	r0, r8, r7
   13ab0:	bl	10f64 <memcpy@plt>
   13ab4:	mov	r3, #0
   13ab8:	strb	r3, [r8, r9]
   13abc:	mov	r0, r8
   13ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ac4:	ldr	r0, [pc, #28]	; 13ae8 <strspn@plt+0x2920>
   13ac8:	add	r0, pc, r0
   13acc:	b	10fa0 <strdup@plt>
   13ad0:	mov	r0, r4
   13ad4:	mov	r1, r2
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13adc:	b	10f4c <strndup@plt>
   13ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ae4:	b	10fa0 <strdup@plt>
   13ae8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13aec:	push	{r4, r5, r6, lr}
   13af0:	subs	r4, r1, #0
   13af4:	mov	r5, r0
   13af8:	moveq	r2, r4
   13afc:	beq	13b0c <strspn@plt+0x2944>
   13b00:	mov	r0, r4
   13b04:	bl	11060 <strlen@plt>
   13b08:	mov	r2, r0
   13b0c:	mov	r1, r4
   13b10:	mov	r0, r5
   13b14:	pop	{r4, r5, r6, lr}
   13b18:	b	13a44 <strspn@plt+0x287c>
   13b1c:	push	{r1, r2, r3}
   13b20:	ldr	r1, [pc, #132]	; 13bac <strspn@plt+0x29e4>
   13b24:	ldr	r3, [pc, #132]	; 13bb0 <strspn@plt+0x29e8>
   13b28:	add	r1, pc, r1
   13b2c:	push	{r4, r5, lr}
   13b30:	mov	r5, r0
   13b34:	ldr	r4, [r1, r3]
   13b38:	sub	sp, sp, #16
   13b3c:	add	ip, sp, #32
   13b40:	ldr	r0, [r4]
   13b44:	ldr	r2, [sp, #28]
   13b48:	str	r0, [sp, #12]
   13b4c:	mov	r3, ip
   13b50:	add	r0, sp, #8
   13b54:	mov	r1, #1
   13b58:	str	ip, [sp, #4]
   13b5c:	bl	1109c <__vasprintf_chk@plt>
   13b60:	subs	r2, r0, #0
   13b64:	movlt	r5, #0
   13b68:	blt	13b84 <strspn@plt+0x29bc>
   13b6c:	mov	r0, r5
   13b70:	ldr	r1, [sp, #8]
   13b74:	bl	13a44 <strspn@plt+0x287c>
   13b78:	mov	r5, r0
   13b7c:	ldr	r0, [sp, #8]
   13b80:	bl	10f28 <free@plt>
   13b84:	ldr	r2, [sp, #12]
   13b88:	ldr	r3, [r4]
   13b8c:	mov	r0, r5
   13b90:	cmp	r2, r3
   13b94:	bne	13ba8 <strspn@plt+0x29e0>
   13b98:	add	sp, sp, #16
   13b9c:	pop	{r4, r5, lr}
   13ba0:	add	sp, sp, #12
   13ba4:	bx	lr
   13ba8:	bl	10fac <__stack_chk_fail@plt>
   13bac:			; <UNDEFINED> instruction: 0x000113b4
   13bb0:	andeq	r0, r0, r4, lsl r1
   13bb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bb8:	mov	r6, r0
   13bbc:	ldr	r0, [pc, #348]	; 13d20 <strspn@plt+0x2b58>
   13bc0:	ldr	ip, [pc, #348]	; 13d24 <strspn@plt+0x2b5c>
   13bc4:	add	r0, pc, r0
   13bc8:	ldr	r5, [r6]
   13bcc:	ldr	r8, [r0, ip]
   13bd0:	sub	sp, sp, #8
   13bd4:	ldrsb	r4, [r5]
   13bd8:	mov	r9, r2
   13bdc:	ldr	r2, [r8]
   13be0:	cmp	r4, #0
   13be4:	mov	r7, r1
   13be8:	str	r2, [sp, #4]
   13bec:	mov	r1, r0
   13bf0:	beq	13ca0 <strspn@plt+0x2ad8>
   13bf4:	mov	r0, r5
   13bf8:	mov	r1, r9
   13bfc:	mov	sl, r3
   13c00:	bl	111c8 <strspn@plt>
   13c04:	add	r4, r5, r0
   13c08:	ldrsb	r5, [r5, r0]
   13c0c:	cmp	r5, #0
   13c10:	beq	13d08 <strspn@plt+0x2b40>
   13c14:	cmp	sl, #0
   13c18:	beq	13cbc <strspn@plt+0x2af4>
   13c1c:	ldr	r0, [pc, #260]	; 13d28 <strspn@plt+0x2b60>
   13c20:	mov	r1, r5
   13c24:	add	r0, pc, r0
   13c28:	bl	1106c <strchr@plt>
   13c2c:	cmp	r0, #0
   13c30:	beq	13cd8 <strspn@plt+0x2b10>
   13c34:	add	sl, r4, #1
   13c38:	mov	r3, #0
   13c3c:	mov	r0, sl
   13c40:	mov	r1, sp
   13c44:	strb	r5, [sp]
   13c48:	strb	r3, [sp, #1]
   13c4c:	bl	11e60 <strspn@plt+0xc98>
   13c50:	add	r3, r4, r0
   13c54:	str	r0, [r7]
   13c58:	ldrsb	r3, [r3, #1]
   13c5c:	subs	r5, r5, r3
   13c60:	movne	r5, #1
   13c64:	cmp	r3, #0
   13c68:	moveq	r5, #1
   13c6c:	cmp	r5, #0
   13c70:	bne	13d08 <strspn@plt+0x2b40>
   13c74:	add	r0, r0, #2
   13c78:	add	r5, r4, r0
   13c7c:	ldrsb	r1, [r4, r0]
   13c80:	cmp	r1, #0
   13c84:	beq	13c98 <strspn@plt+0x2ad0>
   13c88:	mov	r0, r9
   13c8c:	bl	1106c <strchr@plt>
   13c90:	cmp	r0, #0
   13c94:	beq	13d08 <strspn@plt+0x2b40>
   13c98:	mov	r4, sl
   13c9c:	str	r5, [r6]
   13ca0:	ldr	r2, [sp, #4]
   13ca4:	ldr	r3, [r8]
   13ca8:	mov	r0, r4
   13cac:	cmp	r2, r3
   13cb0:	bne	13d1c <strspn@plt+0x2b54>
   13cb4:	add	sp, sp, #8
   13cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cbc:	mov	r1, r9
   13cc0:	mov	r0, r4
   13cc4:	bl	10f04 <strcspn@plt>
   13cc8:	add	r3, r4, r0
   13ccc:	str	r0, [r7]
   13cd0:	str	r3, [r6]
   13cd4:	b	13ca0 <strspn@plt+0x2ad8>
   13cd8:	mov	r1, r9
   13cdc:	mov	r0, r4
   13ce0:	bl	11e60 <strspn@plt+0xc98>
   13ce4:	str	r0, [r7]
   13ce8:	ldrsb	r1, [r4, r0]
   13cec:	add	r5, r4, r0
   13cf0:	cmp	r1, #0
   13cf4:	beq	13d14 <strspn@plt+0x2b4c>
   13cf8:	mov	r0, r9
   13cfc:	bl	1106c <strchr@plt>
   13d00:	cmp	r0, #0
   13d04:	bne	13d14 <strspn@plt+0x2b4c>
   13d08:	str	r4, [r6]
   13d0c:	mov	r4, #0
   13d10:	b	13ca0 <strspn@plt+0x2ad8>
   13d14:	str	r5, [r6]
   13d18:	b	13ca0 <strspn@plt+0x2ad8>
   13d1c:	bl	10fac <__stack_chk_fail@plt>
   13d20:	andeq	r1, r1, r8, lsl r3
   13d24:	andeq	r0, r0, r4, lsl r1
   13d28:	andeq	r0, r0, ip, lsr #19
   13d2c:	push	{r4, lr}
   13d30:	mov	r4, r0
   13d34:	b	13d40 <strspn@plt+0x2b78>
   13d38:	cmp	r0, #10
   13d3c:	beq	13d58 <strspn@plt+0x2b90>
   13d40:	mov	r0, r4
   13d44:	bl	110b4 <fgetc@plt>
   13d48:	cmn	r0, #1
   13d4c:	bne	13d38 <strspn@plt+0x2b70>
   13d50:	mov	r0, #1
   13d54:	pop	{r4, pc}
   13d58:	mov	r0, #0
   13d5c:	pop	{r4, pc}
   13d60:	cmp	r1, #0
   13d64:	beq	13f70 <strspn@plt+0x2da8>
   13d68:	eor	ip, r0, r1
   13d6c:	rsbmi	r1, r1, #0
   13d70:	subs	r2, r1, #1
   13d74:	beq	13f3c <strspn@plt+0x2d74>
   13d78:	movs	r3, r0
   13d7c:	rsbmi	r3, r0, #0
   13d80:	cmp	r3, r1
   13d84:	bls	13f48 <strspn@plt+0x2d80>
   13d88:	tst	r1, r2
   13d8c:	beq	13f58 <strspn@plt+0x2d90>
   13d90:	clz	r2, r3
   13d94:	clz	r0, r1
   13d98:	sub	r2, r0, r2
   13d9c:	rsbs	r2, r2, #31
   13da0:	addne	r2, r2, r2, lsl #1
   13da4:	mov	r0, #0
   13da8:	addne	pc, pc, r2, lsl #2
   13dac:	nop			; (mov r0, r0)
   13db0:	cmp	r3, r1, lsl #31
   13db4:	adc	r0, r0, r0
   13db8:	subcs	r3, r3, r1, lsl #31
   13dbc:	cmp	r3, r1, lsl #30
   13dc0:	adc	r0, r0, r0
   13dc4:	subcs	r3, r3, r1, lsl #30
   13dc8:	cmp	r3, r1, lsl #29
   13dcc:	adc	r0, r0, r0
   13dd0:	subcs	r3, r3, r1, lsl #29
   13dd4:	cmp	r3, r1, lsl #28
   13dd8:	adc	r0, r0, r0
   13ddc:	subcs	r3, r3, r1, lsl #28
   13de0:	cmp	r3, r1, lsl #27
   13de4:	adc	r0, r0, r0
   13de8:	subcs	r3, r3, r1, lsl #27
   13dec:	cmp	r3, r1, lsl #26
   13df0:	adc	r0, r0, r0
   13df4:	subcs	r3, r3, r1, lsl #26
   13df8:	cmp	r3, r1, lsl #25
   13dfc:	adc	r0, r0, r0
   13e00:	subcs	r3, r3, r1, lsl #25
   13e04:	cmp	r3, r1, lsl #24
   13e08:	adc	r0, r0, r0
   13e0c:	subcs	r3, r3, r1, lsl #24
   13e10:	cmp	r3, r1, lsl #23
   13e14:	adc	r0, r0, r0
   13e18:	subcs	r3, r3, r1, lsl #23
   13e1c:	cmp	r3, r1, lsl #22
   13e20:	adc	r0, r0, r0
   13e24:	subcs	r3, r3, r1, lsl #22
   13e28:	cmp	r3, r1, lsl #21
   13e2c:	adc	r0, r0, r0
   13e30:	subcs	r3, r3, r1, lsl #21
   13e34:	cmp	r3, r1, lsl #20
   13e38:	adc	r0, r0, r0
   13e3c:	subcs	r3, r3, r1, lsl #20
   13e40:	cmp	r3, r1, lsl #19
   13e44:	adc	r0, r0, r0
   13e48:	subcs	r3, r3, r1, lsl #19
   13e4c:	cmp	r3, r1, lsl #18
   13e50:	adc	r0, r0, r0
   13e54:	subcs	r3, r3, r1, lsl #18
   13e58:	cmp	r3, r1, lsl #17
   13e5c:	adc	r0, r0, r0
   13e60:	subcs	r3, r3, r1, lsl #17
   13e64:	cmp	r3, r1, lsl #16
   13e68:	adc	r0, r0, r0
   13e6c:	subcs	r3, r3, r1, lsl #16
   13e70:	cmp	r3, r1, lsl #15
   13e74:	adc	r0, r0, r0
   13e78:	subcs	r3, r3, r1, lsl #15
   13e7c:	cmp	r3, r1, lsl #14
   13e80:	adc	r0, r0, r0
   13e84:	subcs	r3, r3, r1, lsl #14
   13e88:	cmp	r3, r1, lsl #13
   13e8c:	adc	r0, r0, r0
   13e90:	subcs	r3, r3, r1, lsl #13
   13e94:	cmp	r3, r1, lsl #12
   13e98:	adc	r0, r0, r0
   13e9c:	subcs	r3, r3, r1, lsl #12
   13ea0:	cmp	r3, r1, lsl #11
   13ea4:	adc	r0, r0, r0
   13ea8:	subcs	r3, r3, r1, lsl #11
   13eac:	cmp	r3, r1, lsl #10
   13eb0:	adc	r0, r0, r0
   13eb4:	subcs	r3, r3, r1, lsl #10
   13eb8:	cmp	r3, r1, lsl #9
   13ebc:	adc	r0, r0, r0
   13ec0:	subcs	r3, r3, r1, lsl #9
   13ec4:	cmp	r3, r1, lsl #8
   13ec8:	adc	r0, r0, r0
   13ecc:	subcs	r3, r3, r1, lsl #8
   13ed0:	cmp	r3, r1, lsl #7
   13ed4:	adc	r0, r0, r0
   13ed8:	subcs	r3, r3, r1, lsl #7
   13edc:	cmp	r3, r1, lsl #6
   13ee0:	adc	r0, r0, r0
   13ee4:	subcs	r3, r3, r1, lsl #6
   13ee8:	cmp	r3, r1, lsl #5
   13eec:	adc	r0, r0, r0
   13ef0:	subcs	r3, r3, r1, lsl #5
   13ef4:	cmp	r3, r1, lsl #4
   13ef8:	adc	r0, r0, r0
   13efc:	subcs	r3, r3, r1, lsl #4
   13f00:	cmp	r3, r1, lsl #3
   13f04:	adc	r0, r0, r0
   13f08:	subcs	r3, r3, r1, lsl #3
   13f0c:	cmp	r3, r1, lsl #2
   13f10:	adc	r0, r0, r0
   13f14:	subcs	r3, r3, r1, lsl #2
   13f18:	cmp	r3, r1, lsl #1
   13f1c:	adc	r0, r0, r0
   13f20:	subcs	r3, r3, r1, lsl #1
   13f24:	cmp	r3, r1
   13f28:	adc	r0, r0, r0
   13f2c:	subcs	r3, r3, r1
   13f30:	cmp	ip, #0
   13f34:	rsbmi	r0, r0, #0
   13f38:	bx	lr
   13f3c:	teq	ip, r0
   13f40:	rsbmi	r0, r0, #0
   13f44:	bx	lr
   13f48:	movcc	r0, #0
   13f4c:	asreq	r0, ip, #31
   13f50:	orreq	r0, r0, #1
   13f54:	bx	lr
   13f58:	clz	r2, r1
   13f5c:	rsb	r2, r2, #31
   13f60:	cmp	ip, #0
   13f64:	lsr	r0, r3, r2
   13f68:	rsbmi	r0, r0, #0
   13f6c:	bx	lr
   13f70:	cmp	r0, #0
   13f74:	mvngt	r0, #-2147483648	; 0x80000000
   13f78:	movlt	r0, #-2147483648	; 0x80000000
   13f7c:	b	13fdc <strspn@plt+0x2e14>
   13f80:	cmp	r1, #0
   13f84:	beq	13f70 <strspn@plt+0x2da8>
   13f88:	push	{r0, r1, lr}
   13f8c:	bl	13d68 <strspn@plt+0x2ba0>
   13f90:	pop	{r1, r2, lr}
   13f94:	mul	r3, r2, r0
   13f98:	sub	r1, r1, r3
   13f9c:	bx	lr
   13fa0:	cmp	r3, #0
   13fa4:	cmpeq	r2, #0
   13fa8:	bne	13fc0 <strspn@plt+0x2df8>
   13fac:	cmp	r1, #0
   13fb0:	cmpeq	r0, #0
   13fb4:	mvnne	r1, #0
   13fb8:	mvnne	r0, #0
   13fbc:	b	13fdc <strspn@plt+0x2e14>
   13fc0:	sub	sp, sp, #8
   13fc4:	push	{sp, lr}
   13fc8:	bl	13fec <strspn@plt+0x2e24>
   13fcc:	ldr	lr, [sp, #4]
   13fd0:	add	sp, sp, #8
   13fd4:	pop	{r2, r3}
   13fd8:	bx	lr
   13fdc:	push	{r1, lr}
   13fe0:	mov	r0, #8
   13fe4:	bl	10ed4 <raise@plt>
   13fe8:	pop	{r1, pc}
   13fec:	cmp	r1, r3
   13ff0:	cmpeq	r0, r2
   13ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff8:	mov	r4, r0
   13ffc:	movcc	r0, #0
   14000:	mov	r5, r1
   14004:	ldr	lr, [sp, #36]	; 0x24
   14008:	movcc	r1, r0
   1400c:	bcc	14108 <strspn@plt+0x2f40>
   14010:	cmp	r3, #0
   14014:	clzeq	ip, r2
   14018:	clzne	ip, r3
   1401c:	addeq	ip, ip, #32
   14020:	cmp	r5, #0
   14024:	clzeq	r1, r4
   14028:	addeq	r1, r1, #32
   1402c:	clzne	r1, r5
   14030:	sub	ip, ip, r1
   14034:	sub	sl, ip, #32
   14038:	lsl	r9, r3, ip
   1403c:	rsb	fp, ip, #32
   14040:	orr	r9, r9, r2, lsl sl
   14044:	orr	r9, r9, r2, lsr fp
   14048:	lsl	r8, r2, ip
   1404c:	cmp	r5, r9
   14050:	cmpeq	r4, r8
   14054:	movcc	r0, #0
   14058:	movcc	r1, r0
   1405c:	bcc	14078 <strspn@plt+0x2eb0>
   14060:	mov	r0, #1
   14064:	subs	r4, r4, r8
   14068:	lsl	r1, r0, sl
   1406c:	orr	r1, r1, r0, lsr fp
   14070:	lsl	r0, r0, ip
   14074:	sbc	r5, r5, r9
   14078:	cmp	ip, #0
   1407c:	beq	14108 <strspn@plt+0x2f40>
   14080:	lsr	r6, r8, #1
   14084:	orr	r6, r6, r9, lsl #31
   14088:	lsr	r7, r9, #1
   1408c:	mov	r2, ip
   14090:	b	140b4 <strspn@plt+0x2eec>
   14094:	subs	r3, r4, r6
   14098:	sbc	r8, r5, r7
   1409c:	adds	r3, r3, r3
   140a0:	adc	r8, r8, r8
   140a4:	adds	r4, r3, #1
   140a8:	adc	r5, r8, #0
   140ac:	subs	r2, r2, #1
   140b0:	beq	140d0 <strspn@plt+0x2f08>
   140b4:	cmp	r5, r7
   140b8:	cmpeq	r4, r6
   140bc:	bcs	14094 <strspn@plt+0x2ecc>
   140c0:	adds	r4, r4, r4
   140c4:	adc	r5, r5, r5
   140c8:	subs	r2, r2, #1
   140cc:	bne	140b4 <strspn@plt+0x2eec>
   140d0:	lsr	r3, r4, ip
   140d4:	orr	r3, r3, r5, lsl fp
   140d8:	lsr	r2, r5, ip
   140dc:	orr	r3, r3, r5, lsr sl
   140e0:	adds	r0, r0, r4
   140e4:	mov	r4, r3
   140e8:	lsl	r3, r2, ip
   140ec:	orr	r3, r3, r4, lsl sl
   140f0:	lsl	ip, r4, ip
   140f4:	orr	r3, r3, r4, lsr fp
   140f8:	adc	r1, r1, r5
   140fc:	subs	r0, r0, ip
   14100:	mov	r5, r2
   14104:	sbc	r1, r1, r3
   14108:	cmp	lr, #0
   1410c:	strdne	r4, [lr]
   14110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14114:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14118:	mov	r7, r0
   1411c:	ldr	r6, [pc, #72]	; 1416c <strspn@plt+0x2fa4>
   14120:	ldr	r5, [pc, #72]	; 14170 <strspn@plt+0x2fa8>
   14124:	add	r6, pc, r6
   14128:	add	r5, pc, r5
   1412c:	sub	r6, r6, r5
   14130:	mov	r8, r1
   14134:	mov	r9, r2
   14138:	bl	10eb4 <raise@plt-0x20>
   1413c:	asrs	r6, r6, #2
   14140:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14144:	mov	r4, #0
   14148:	add	r4, r4, #1
   1414c:	ldr	r3, [r5], #4
   14150:	mov	r2, r9
   14154:	mov	r1, r8
   14158:	mov	r0, r7
   1415c:	blx	r3
   14160:	cmp	r6, r4
   14164:	bne	14148 <strspn@plt+0x2f80>
   14168:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1416c:			; <UNDEFINED> instruction: 0x00010cb0
   14170:	andeq	r0, r1, r8, lsr #25
   14174:	bx	lr
   14178:	ldr	r3, [pc, #12]	; 1418c <strspn@plt+0x2fc4>
   1417c:	mov	r1, #0
   14180:	add	r3, pc, r3
   14184:	ldr	r2, [r3]
   14188:	b	11090 <__cxa_atexit@plt>
   1418c:	andeq	r0, r1, ip, ror lr

Disassembly of section .fini:

00014190 <.fini>:
   14190:	push	{r3, lr}
   14194:	pop	{r3, pc}
