
raspbian-preinstalled/xvinfo:     file format elf32-littlearm


Disassembly of section .init:

000108b0 <_init@@Base>:
   108b0:	push	{r3, lr}
   108b4:	bl	117a0 <__snprintf_chk@plt+0xdbc>
   108b8:	pop	{r3, pc}

Disassembly of section .plt:

000108bc <XvFreeAdaptorInfo@plt-0x14>:
   108bc:	push	{lr}		; (str lr, [sp, #-4]!)
   108c0:	ldr	lr, [pc, #4]	; 108cc <_init@@Base+0x1c>
   108c4:	add	lr, pc, lr
   108c8:	ldr	pc, [lr, #8]!
   108cc:	andeq	r1, r1, r4, lsr r7

000108d0 <XvFreeAdaptorInfo@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1844]!	; 0x734

000108dc <strcmp@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1836]!	; 0x72c

000108e8 <XvQueryAdaptors@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1828]!	; 0x724

000108f4 <XvQueryEncodings@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1820]!	; 0x71c

00010900 <__stack_chk_fail@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1812]!	; 0x714

0001090c <XFree@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1804]!	; 0x70c

00010918 <XvListImageFormats@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1796]!	; 0x704

00010924 <fwrite@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1788]!	; 0x6fc

00010930 <XvQueryExtension@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1780]!	; 0x6f4

0001093c <puts@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1772]!	; 0x6ec

00010948 <__libc_start_main@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1764]!	; 0x6e4

00010954 <XOpenDisplay@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #69632	; 0x11000
   1095c:	ldr	pc, [ip, #1756]!	; 0x6dc

00010960 <XvFreeEncodingInfo@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #69632	; 0x11000
   10968:	ldr	pc, [ip, #1748]!	; 0x6d4

0001096c <__gmon_start__@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #69632	; 0x11000
   10974:	ldr	pc, [ip, #1740]!	; 0x6cc

00010978 <__ctype_b_loc@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #69632	; 0x11000
   10980:	ldr	pc, [ip, #1732]!	; 0x6c4

00010984 <exit@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1724]!	; 0x6bc

00010990 <XInternAtom@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1716]!	; 0x6b4

0001099c <XDisplayName@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #69632	; 0x11000
   109a4:	ldr	pc, [ip, #1708]!	; 0x6ac

000109a8 <__fprintf_chk@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #69632	; 0x11000
   109b0:	ldr	pc, [ip, #1700]!	; 0x6a4

000109b4 <XvQueryPortAttributes@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #69632	; 0x11000
   109bc:	ldr	pc, [ip, #1692]!	; 0x69c

000109c0 <fputc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1684]!	; 0x694

000109cc <XvGetPortAttribute@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1676]!	; 0x68c

000109d8 <abort@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1668]!	; 0x684

000109e4 <__snprintf_chk@plt>:
   109e4:	stmia	r6!, {}
   109e6:	b.n	10f08 <__snprintf_chk@plt+0x524>
   109e8:	ldmia	r2!, {r0, r4}
   109ea:	b.n	10f06 <__snprintf_chk@plt+0x522>
   109ec:	blx	ffa8d568 <__bss_end__@@Base+0xffa6b4e0>

Disassembly of section .text:

000109f0 <.text>:
   109f0:	ldr	r1, [pc, #32]	; 10a18 <__snprintf_chk@plt+0x34>
   109f4:	ldr	r3, [pc, #32]	; 10a1c <__snprintf_chk@plt+0x38>
   109f8:	push	{r4, lr}
   109fc:	ldr	r2, [pc, #28]	; 10a20 <__snprintf_chk@plt+0x3c>
   10a00:	ldr	r0, [r1]
   10a04:	ldr	r3, [r3]
   10a08:	mov	r1, #1
   10a0c:	bl	109a8 <__fprintf_chk@plt>
   10a10:	mov	r0, #0
   10a14:	bl	10984 <exit@plt>
   10a18:	andeq	r2, r2, r8, ror r0
   10a1c:	andeq	r2, r2, r4, lsl #1
   10a20:	andeq	r1, r1, r4, asr #17
   10a24:	ldr	r3, [pc, #3152]	; 1167c <__snprintf_chk@plt+0xc98>
   10a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a2c:	sub	sp, sp, #124	; 0x7c
   10a30:	ldr	sl, [pc, #3144]	; 11680 <__snprintf_chk@plt+0xc9c>
   10a34:	ldr	r2, [r1]
   10a38:	ldr	r3, [r3]
   10a3c:	cmp	r0, #4
   10a40:	str	r2, [sp, #28]
   10a44:	str	r2, [sl]
   10a48:	str	r3, [sp, #116]	; 0x74
   10a4c:	bgt	11604 <__snprintf_chk@plt+0xc20>
   10a50:	cmp	r0, #1
   10a54:	mov	r5, r0
   10a58:	beq	10b50 <__snprintf_chk@plt+0x16c>
   10a5c:	ble	10b50 <__snprintf_chk@plt+0x16c>
   10a60:	mov	r3, #0
   10a64:	mov	r6, r1
   10a68:	str	r3, [sp, #32]
   10a6c:	ldr	r7, [pc, #3088]	; 11684 <__snprintf_chk@plt+0xca0>
   10a70:	ldr	r9, [pc, #3088]	; 11688 <__snprintf_chk@plt+0xca4>
   10a74:	mov	r8, r3
   10a78:	mov	fp, #1
   10a7c:	b	10aa0 <__snprintf_chk@plt+0xbc>
   10a80:	add	fp, fp, #1
   10a84:	cmp	r5, fp
   10a88:	ble	115ec <__snprintf_chk@plt+0xc08>
   10a8c:	add	r2, r6, r2
   10a90:	add	fp, fp, #1
   10a94:	cmp	r5, fp
   10a98:	ldr	r8, [r2, #4]
   10a9c:	ble	10ae4 <__snprintf_chk@plt+0x100>
   10aa0:	ldr	r4, [r6, fp, lsl #2]
   10aa4:	mov	r1, r7
   10aa8:	mov	r0, r4
   10aac:	bl	108dc <strcmp@plt>
   10ab0:	lsl	r2, fp, #2
   10ab4:	cmp	r0, #0
   10ab8:	beq	10a80 <__snprintf_chk@plt+0x9c>
   10abc:	mov	r1, r9
   10ac0:	mov	r0, r4
   10ac4:	bl	108dc <strcmp@plt>
   10ac8:	cmp	r0, #0
   10acc:	bne	111e8 <__snprintf_chk@plt+0x804>
   10ad0:	add	fp, fp, #1
   10ad4:	mov	r3, #1
   10ad8:	cmp	r5, fp
   10adc:	str	r3, [sp, #32]
   10ae0:	bgt	10aa0 <__snprintf_chk@plt+0xbc>
   10ae4:	mov	r0, r8
   10ae8:	bl	10954 <XOpenDisplay@plt>
   10aec:	subs	r3, r0, #0
   10af0:	str	r3, [sp, #28]
   10af4:	beq	11628 <__snprintf_chk@plt+0xc44>
   10af8:	add	r2, sp, #76	; 0x4c
   10afc:	add	r3, sp, #68	; 0x44
   10b00:	str	r2, [sp, #4]
   10b04:	str	r3, [sp]
   10b08:	add	r2, sp, #64	; 0x40
   10b0c:	add	r3, sp, #72	; 0x48
   10b10:	add	r1, sp, #60	; 0x3c
   10b14:	bl	10930 <XvQueryExtension@plt>
   10b18:	cmp	r0, #0
   10b1c:	beq	10b90 <__snprintf_chk@plt+0x1ac>
   10b20:	ldr	r2, [pc, #2916]	; 1168c <__snprintf_chk@plt+0xca8>
   10b24:	cmp	r8, #0
   10b28:	ldr	r3, [sl]
   10b2c:	ldr	r4, [r2]
   10b30:	beq	115bc <__snprintf_chk@plt+0xbd8>
   10b34:	str	r8, [sp]
   10b38:	mov	r0, r4
   10b3c:	ldr	r2, [pc, #2892]	; 11690 <__snprintf_chk@plt+0xcac>
   10b40:	mov	r1, #1
   10b44:	bl	109a8 <__fprintf_chk@plt>
   10b48:	mov	r0, #0
   10b4c:	bl	10984 <exit@plt>
   10b50:	mov	r0, #0
   10b54:	bl	10954 <XOpenDisplay@plt>
   10b58:	subs	r3, r0, #0
   10b5c:	str	r3, [sp, #28]
   10b60:	beq	1165c <__snprintf_chk@plt+0xc78>
   10b64:	add	r2, sp, #76	; 0x4c
   10b68:	add	r3, sp, #68	; 0x44
   10b6c:	str	r2, [sp, #4]
   10b70:	str	r3, [sp]
   10b74:	add	r2, sp, #64	; 0x40
   10b78:	add	r3, sp, #72	; 0x48
   10b7c:	add	r1, sp, #60	; 0x3c
   10b80:	bl	10930 <XvQueryExtension@plt>
   10b84:	cmp	r0, #0
   10b88:	streq	r0, [sp, #32]
   10b8c:	bne	115b0 <__snprintf_chk@plt+0xbcc>
   10b90:	ldr	fp, [pc, #2812]	; 11694 <__snprintf_chk@plt+0xcb0>
   10b94:	ldr	r2, [sp, #64]	; 0x40
   10b98:	ldr	r3, [sp, #60]	; 0x3c
   10b9c:	ldr	r0, [fp]
   10ba0:	mov	r1, #1
   10ba4:	str	r2, [sp]
   10ba8:	ldr	r2, [pc, #2792]	; 11698 <__snprintf_chk@plt+0xcb4>
   10bac:	bl	109a8 <__fprintf_chk@plt>
   10bb0:	ldr	r3, [sp, #28]
   10bb4:	ldr	r3, [r3, #136]	; 0x88
   10bb8:	cmp	r3, #0
   10bbc:	str	r3, [sp, #44]	; 0x2c
   10bc0:	ble	10ea8 <__snprintf_chk@plt+0x4c4>
   10bc4:	mov	r3, #0
   10bc8:	str	r3, [sp, #36]	; 0x24
   10bcc:	str	r3, [sp, #40]	; 0x28
   10bd0:	ldr	r3, [sp, #40]	; 0x28
   10bd4:	ldr	r2, [pc, #2752]	; 1169c <__snprintf_chk@plt+0xcb8>
   10bd8:	mov	r1, #1
   10bdc:	ldr	r0, [fp]
   10be0:	bl	109a8 <__fprintf_chk@plt>
   10be4:	ldr	r0, [sp, #28]
   10be8:	ldr	r2, [sp, #36]	; 0x24
   10bec:	add	r3, sp, #96	; 0x60
   10bf0:	ldr	r1, [r0, #140]	; 0x8c
   10bf4:	add	r1, r1, r2
   10bf8:	add	r2, sp, #84	; 0x54
   10bfc:	ldr	r1, [r1, #8]
   10c00:	bl	108e8 <XvQueryAdaptors@plt>
   10c04:	ldr	r3, [sp, #84]	; 0x54
   10c08:	cmp	r3, #0
   10c0c:	movne	sl, #0
   10c10:	movne	r9, sl
   10c14:	bne	10cd4 <__snprintf_chk@plt+0x2f0>
   10c18:	b	110dc <__snprintf_chk@plt+0x6f8>
   10c1c:	cmp	r0, #2
   10c20:	bne	10d90 <__snprintf_chk@plt+0x3ac>
   10c24:	tst	r2, #4
   10c28:	ldr	r1, [fp]
   10c2c:	bne	11064 <__snprintf_chk@plt+0x680>
   10c30:	tst	r2, #8
   10c34:	bne	11048 <__snprintf_chk@plt+0x664>
   10c38:	mov	r0, #10
   10c3c:	bl	109c0 <fputc@plt>
   10c40:	ldr	r3, [sp, #32]
   10c44:	ldr	ip, [sp, #96]	; 0x60
   10c48:	cmp	r3, #0
   10c4c:	add	ip, ip, sl
   10c50:	beq	10e08 <__snprintf_chk@plt+0x424>
   10c54:	ldr	r1, [ip]
   10c58:	add	r2, sp, #88	; 0x58
   10c5c:	ldr	r0, [sp, #28]
   10c60:	bl	109b4 <XvQueryPortAttributes@plt>
   10c64:	subs	r6, r0, #0
   10c68:	beq	10ec8 <__snprintf_chk@plt+0x4e4>
   10c6c:	ldr	r3, [sp, #88]	; 0x58
   10c70:	ldr	r0, [fp]
   10c74:	cmp	r3, #0
   10c78:	bne	10ed0 <__snprintf_chk@plt+0x4ec>
   10c7c:	mov	r3, r0
   10c80:	mov	r2, #31
   10c84:	mov	r1, #1
   10c88:	ldr	r0, [pc, #2576]	; 116a0 <__snprintf_chk@plt+0xcbc>
   10c8c:	bl	10924 <fwrite@plt>
   10c90:	ldr	r1, [sp, #96]	; 0x60
   10c94:	add	r3, sp, #100	; 0x64
   10c98:	add	r2, sp, #80	; 0x50
   10c9c:	ldr	r1, [r1, sl]
   10ca0:	ldr	r0, [sp, #28]
   10ca4:	bl	108f4 <XvQueryEncodings@plt>
   10ca8:	ldr	r3, [sp, #100]	; 0x64
   10cac:	cmp	r3, #0
   10cb0:	beq	10cc0 <__snprintf_chk@plt+0x2dc>
   10cb4:	ldr	r4, [sp, #80]	; 0x50
   10cb8:	cmp	r4, #0
   10cbc:	bne	10dac <__snprintf_chk@plt+0x3c8>
   10cc0:	ldr	r3, [sp, #84]	; 0x54
   10cc4:	add	r9, r9, #1
   10cc8:	cmp	r9, r3
   10ccc:	add	sl, sl, #28
   10cd0:	bcs	10e7c <__snprintf_chk@plt+0x498>
   10cd4:	ldr	r3, [sp, #96]	; 0x60
   10cd8:	ldr	r0, [fp]
   10cdc:	add	r3, r3, sl
   10ce0:	mov	r1, #1
   10ce4:	ldr	r2, [r3, #12]
   10ce8:	mov	r3, r9
   10cec:	str	r2, [sp]
   10cf0:	ldr	r2, [pc, #2476]	; 116a4 <__snprintf_chk@plt+0xcc0>
   10cf4:	bl	109a8 <__fprintf_chk@plt>
   10cf8:	ldr	r3, [sp, #96]	; 0x60
   10cfc:	ldr	r2, [pc, #2468]	; 116a8 <__snprintf_chk@plt+0xcc4>
   10d00:	add	r3, r3, sl
   10d04:	mov	r1, #1
   10d08:	ldr	r3, [r3, #4]
   10d0c:	ldr	r0, [fp]
   10d10:	bl	109a8 <__fprintf_chk@plt>
   10d14:	ldr	r3, [sp, #96]	; 0x60
   10d18:	ldr	r2, [pc, #2444]	; 116ac <__snprintf_chk@plt+0xcc8>
   10d1c:	mov	r1, #1
   10d20:	ldr	r3, [r3, sl]
   10d24:	ldr	r0, [fp]
   10d28:	bl	109a8 <__fprintf_chk@plt>
   10d2c:	ldr	r3, [fp]
   10d30:	mov	r2, #26
   10d34:	mov	r1, #1
   10d38:	ldr	r0, [pc, #2416]	; 116b0 <__snprintf_chk@plt+0xccc>
   10d3c:	bl	10924 <fwrite@plt>
   10d40:	ldr	r3, [sp, #96]	; 0x60
   10d44:	add	r3, r3, sl
   10d48:	ldrb	r2, [r3, #8]
   10d4c:	and	r0, r2, #3
   10d50:	cmp	r0, #1
   10d54:	bne	10c1c <__snprintf_chk@plt+0x238>
   10d58:	tst	r2, #4
   10d5c:	ldr	r1, [fp]
   10d60:	bne	110b4 <__snprintf_chk@plt+0x6d0>
   10d64:	tst	r2, #8
   10d68:	bne	1108c <__snprintf_chk@plt+0x6a8>
   10d6c:	tst	r2, #16
   10d70:	beq	10c38 <__snprintf_chk@plt+0x254>
   10d74:	mov	r3, r1
   10d78:	mov	r2, #9
   10d7c:	mov	r1, #1
   10d80:	ldr	r0, [pc, #2348]	; 116b4 <__snprintf_chk@plt+0xcd0>
   10d84:	bl	10924 <fwrite@plt>
   10d88:	ldr	r1, [fp]
   10d8c:	b	10c38 <__snprintf_chk@plt+0x254>
   10d90:	mov	r1, #1
   10d94:	ldr	r3, [fp]
   10d98:	mov	r2, #5
   10d9c:	ldr	r0, [pc, #2324]	; 116b8 <__snprintf_chk@plt+0xcd4>
   10da0:	bl	10924 <fwrite@plt>
   10da4:	ldr	r1, [fp]
   10da8:	b	10c38 <__snprintf_chk@plt+0x254>
   10dac:	rsb	r6, r4, r4, lsl #3
   10db0:	ldr	r7, [pc, #2308]	; 116bc <__snprintf_chk@plt+0xcd8>
   10db4:	mov	r8, r3
   10db8:	add	r6, r3, r6, lsl #2
   10dbc:	mov	r5, #0
   10dc0:	ldr	r0, [r8, #4]
   10dc4:	mov	r1, r7
   10dc8:	bl	108dc <strcmp@plt>
   10dcc:	add	r8, r8, #28
   10dd0:	cmp	r0, #0
   10dd4:	addeq	r5, r5, #1
   10dd8:	cmp	r6, r8
   10ddc:	bne	10dc0 <__snprintf_chk@plt+0x3dc>
   10de0:	cmp	r4, r5
   10de4:	bne	110f4 <__snprintf_chk@plt+0x710>
   10de8:	ldr	r5, [sp, #96]	; 0x60
   10dec:	add	r3, r5, sl
   10df0:	ldrb	r3, [r3, #8]
   10df4:	tst	r3, #16
   10df8:	bne	1120c <__snprintf_chk@plt+0x828>
   10dfc:	ldr	r0, [sp, #100]	; 0x64
   10e00:	bl	10960 <XvFreeEncodingInfo@plt>
   10e04:	b	10cc0 <__snprintf_chk@plt+0x2dc>
   10e08:	ldr	r3, [fp]
   10e0c:	mov	r2, #23
   10e10:	mov	r1, #1
   10e14:	ldr	r0, [pc, #2212]	; 116c0 <__snprintf_chk@plt+0xcdc>
   10e18:	ldr	r4, [ip, #20]
   10e1c:	bl	10924 <fwrite@plt>
   10e20:	ldr	ip, [sp, #96]	; 0x60
   10e24:	add	ip, ip, sl
   10e28:	ldr	r3, [ip, #16]
   10e2c:	cmp	r3, #0
   10e30:	beq	10c54 <__snprintf_chk@plt+0x270>
   10e34:	ldr	r6, [pc, #2184]	; 116c4 <__snprintf_chk@plt+0xce0>
   10e38:	ldr	r5, [sp, #32]
   10e3c:	add	r4, r4, #8
   10e40:	ldr	r2, [r4, #-4]
   10e44:	ldrb	r3, [r4, #-8]
   10e48:	ldr	r0, [fp]
   10e4c:	mov	r1, #1
   10e50:	str	r2, [sp]
   10e54:	mov	r2, r6
   10e58:	bl	109a8 <__fprintf_chk@plt>
   10e5c:	ldr	ip, [sp, #96]	; 0x60
   10e60:	add	r5, r5, #1
   10e64:	add	ip, ip, sl
   10e68:	add	r4, r4, #8
   10e6c:	ldr	r3, [ip, #16]
   10e70:	cmp	r3, r5
   10e74:	bhi	10e40 <__snprintf_chk@plt+0x45c>
   10e78:	b	10c54 <__snprintf_chk@plt+0x270>
   10e7c:	ldr	r0, [sp, #96]	; 0x60
   10e80:	bl	108d0 <XvFreeAdaptorInfo@plt>
   10e84:	ldr	r3, [sp, #40]	; 0x28
   10e88:	ldr	r2, [sp, #44]	; 0x2c
   10e8c:	add	r3, r3, #1
   10e90:	str	r3, [sp, #40]	; 0x28
   10e94:	cmp	r2, r3
   10e98:	ldr	r3, [sp, #36]	; 0x24
   10e9c:	add	r3, r3, #80	; 0x50
   10ea0:	str	r3, [sp, #36]	; 0x24
   10ea4:	bne	10bd0 <__snprintf_chk@plt+0x1ec>
   10ea8:	ldr	r3, [pc, #1996]	; 1167c <__snprintf_chk@plt+0xc98>
   10eac:	ldr	r2, [sp, #116]	; 0x74
   10eb0:	mov	r0, #1
   10eb4:	ldr	r3, [r3]
   10eb8:	cmp	r2, r3
   10ebc:	bne	11678 <__snprintf_chk@plt+0xc94>
   10ec0:	add	sp, sp, #124	; 0x7c
   10ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ec8:	ldr	r0, [fp]
   10ecc:	b	10c7c <__snprintf_chk@plt+0x298>
   10ed0:	ldr	r2, [pc, #2032]	; 116c8 <__snprintf_chk@plt+0xce4>
   10ed4:	mov	r1, #1
   10ed8:	bl	109a8 <__fprintf_chk@plt>
   10edc:	ldr	r3, [sp, #88]	; 0x58
   10ee0:	cmp	r3, #0
   10ee4:	ble	11008 <__snprintf_chk@plt+0x624>
   10ee8:	mov	r4, r6
   10eec:	str	r6, [sp, #48]	; 0x30
   10ef0:	str	r9, [sp, #52]	; 0x34
   10ef4:	ldr	r7, [pc, #2000]	; 116cc <__snprintf_chk@plt+0xce8>
   10ef8:	ldr	r8, [pc, #2000]	; 116d0 <__snprintf_chk@plt+0xcec>
   10efc:	mov	r5, #0
   10f00:	ldr	r6, [sp, #32]
   10f04:	ldr	r9, [sp, #28]
   10f08:	b	10f80 <__snprintf_chk@plt+0x59c>
   10f0c:	cmp	r6, #0
   10f10:	ldr	r3, [fp]
   10f14:	bne	10fd4 <__snprintf_chk@plt+0x5f0>
   10f18:	mov	r2, #40	; 0x28
   10f1c:	mov	r1, #1
   10f20:	mov	r0, r8
   10f24:	bl	10924 <fwrite@plt>
   10f28:	ldr	r3, [r4]
   10f2c:	tst	r3, #1
   10f30:	beq	10f6c <__snprintf_chk@plt+0x588>
   10f34:	ldr	r3, [fp]
   10f38:	mov	r2, #39	; 0x27
   10f3c:	mov	r1, #1
   10f40:	ldr	r0, [pc, #1932]	; 116d4 <__snprintf_chk@plt+0xcf0>
   10f44:	bl	10924 <fwrite@plt>
   10f48:	mov	r2, #1
   10f4c:	ldr	r1, [r4, #12]
   10f50:	mov	r0, r9
   10f54:	bl	10990 <XInternAtom@plt>
   10f58:	subs	r2, r0, #0
   10f5c:	bne	11014 <__snprintf_chk@plt+0x630>
   10f60:	ldr	r1, [fp]
   10f64:	mov	r0, #10
   10f68:	bl	109c0 <fputc@plt>
   10f6c:	ldr	r3, [sp, #88]	; 0x58
   10f70:	add	r5, r5, #1
   10f74:	cmp	r3, r5
   10f78:	add	r4, r4, #16
   10f7c:	ble	11000 <__snprintf_chk@plt+0x61c>
   10f80:	ldrd	r2, [r4, #8]
   10f84:	ldr	r0, [fp]
   10f88:	mov	r1, #1
   10f8c:	str	r2, [sp, #4]
   10f90:	ldr	r2, [r4, #4]
   10f94:	str	r2, [sp]
   10f98:	mov	r2, r7
   10f9c:	bl	109a8 <__fprintf_chk@plt>
   10fa0:	ldr	r3, [r4]
   10fa4:	tst	r3, #2
   10fa8:	bne	10f0c <__snprintf_chk@plt+0x528>
   10fac:	tst	r3, #1
   10fb0:	beq	10ff4 <__snprintf_chk@plt+0x610>
   10fb4:	cmp	r6, #0
   10fb8:	beq	10f34 <__snprintf_chk@plt+0x550>
   10fbc:	ldr	r3, [fp]
   10fc0:	mov	r2, #10
   10fc4:	mov	r1, #1
   10fc8:	ldr	r0, [pc, #1800]	; 116d8 <__snprintf_chk@plt+0xcf4>
   10fcc:	bl	10924 <fwrite@plt>
   10fd0:	b	10f48 <__snprintf_chk@plt+0x564>
   10fd4:	mov	r2, #22
   10fd8:	mov	r1, #1
   10fdc:	ldr	r0, [pc, #1784]	; 116dc <__snprintf_chk@plt+0xcf8>
   10fe0:	bl	10924 <fwrite@plt>
   10fe4:	ldr	r3, [r4]
   10fe8:	tst	r3, #1
   10fec:	bne	10fbc <__snprintf_chk@plt+0x5d8>
   10ff0:	b	10f60 <__snprintf_chk@plt+0x57c>
   10ff4:	cmp	r6, #0
   10ff8:	beq	10f6c <__snprintf_chk@plt+0x588>
   10ffc:	b	10f60 <__snprintf_chk@plt+0x57c>
   11000:	ldr	r6, [sp, #48]	; 0x30
   11004:	ldr	r9, [sp, #52]	; 0x34
   11008:	mov	r0, r6
   1100c:	bl	1090c <XFree@plt>
   11010:	b	10c90 <__snprintf_chk@plt+0x2ac>
   11014:	ldr	r1, [sp, #96]	; 0x60
   11018:	add	r3, sp, #104	; 0x68
   1101c:	mov	r0, r9
   11020:	ldr	r1, [r1, sl]
   11024:	bl	109cc <XvGetPortAttribute@plt>
   11028:	cmp	r0, #0
   1102c:	bne	10f60 <__snprintf_chk@plt+0x57c>
   11030:	ldr	r3, [sp, #104]	; 0x68
   11034:	ldr	r2, [pc, #1700]	; 116e0 <__snprintf_chk@plt+0xcfc>
   11038:	mov	r1, #1
   1103c:	ldr	r0, [fp]
   11040:	bl	109a8 <__fprintf_chk@plt>
   11044:	b	10f60 <__snprintf_chk@plt+0x57c>
   11048:	mov	r3, r1
   1104c:	mov	r2, #9
   11050:	mov	r1, #1
   11054:	ldr	r0, [pc, #1672]	; 116e4 <__snprintf_chk@plt+0xd00>
   11058:	bl	10924 <fwrite@plt>
   1105c:	ldr	r1, [fp]
   11060:	b	10c38 <__snprintf_chk@plt+0x254>
   11064:	mov	r3, r1
   11068:	mov	r2, #9
   1106c:	mov	r1, #1
   11070:	ldr	r0, [pc, #1648]	; 116e8 <__snprintf_chk@plt+0xd04>
   11074:	bl	10924 <fwrite@plt>
   11078:	ldr	r3, [sp, #96]	; 0x60
   1107c:	ldr	r1, [fp]
   11080:	add	r3, r3, sl
   11084:	ldrb	r2, [r3, #8]
   11088:	b	10c30 <__snprintf_chk@plt+0x24c>
   1108c:	mov	r3, r1
   11090:	mov	r2, #9
   11094:	mov	r1, #1
   11098:	ldr	r0, [pc, #1612]	; 116ec <__snprintf_chk@plt+0xd08>
   1109c:	bl	10924 <fwrite@plt>
   110a0:	ldr	r3, [sp, #96]	; 0x60
   110a4:	ldr	r1, [fp]
   110a8:	add	r3, r3, sl
   110ac:	ldrb	r2, [r3, #8]
   110b0:	b	10d6c <__snprintf_chk@plt+0x388>
   110b4:	mov	r3, r1
   110b8:	mov	r2, #9
   110bc:	mov	r1, r0
   110c0:	ldr	r0, [pc, #1576]	; 116f0 <__snprintf_chk@plt+0xd0c>
   110c4:	bl	10924 <fwrite@plt>
   110c8:	ldr	r3, [sp, #96]	; 0x60
   110cc:	ldr	r1, [fp]
   110d0:	add	r3, r3, sl
   110d4:	ldrb	r2, [r3, #8]
   110d8:	b	10d64 <__snprintf_chk@plt+0x380>
   110dc:	ldr	r3, [fp]
   110e0:	mov	r2, #21
   110e4:	mov	r1, #1
   110e8:	ldr	r0, [pc, #1540]	; 116f4 <__snprintf_chk@plt+0xd10>
   110ec:	bl	10924 <fwrite@plt>
   110f0:	b	10e84 <__snprintf_chk@plt+0x4a0>
   110f4:	sub	r3, r4, r5
   110f8:	ldr	r2, [pc, #1528]	; 116f8 <__snprintf_chk@plt+0xd14>
   110fc:	mov	r1, #1
   11100:	ldr	r0, [fp]
   11104:	bl	109a8 <__fprintf_chk@plt>
   11108:	ldr	r4, [sp, #80]	; 0x50
   1110c:	cmp	r4, #0
   11110:	beq	111dc <__snprintf_chk@plt+0x7f8>
   11114:	mov	r6, #0
   11118:	mov	r7, r6
   1111c:	str	r5, [sp, #48]	; 0x30
   11120:	b	11134 <__snprintf_chk@plt+0x750>
   11124:	add	r7, r7, #1
   11128:	cmp	r7, r4
   1112c:	add	r6, r6, #28
   11130:	bcs	111d8 <__snprintf_chk@plt+0x7f4>
   11134:	ldr	r5, [sp, #100]	; 0x64
   11138:	ldr	r1, [pc, #1404]	; 116bc <__snprintf_chk@plt+0xcd8>
   1113c:	add	r2, r5, r6
   11140:	ldr	r8, [r2, #4]
   11144:	mov	r0, r8
   11148:	bl	108dc <strcmp@plt>
   1114c:	cmp	r0, #0
   11150:	beq	11124 <__snprintf_chk@plt+0x740>
   11154:	ldr	r3, [r5, r6]
   11158:	ldr	r0, [fp]
   1115c:	ldr	r2, [pc, #1432]	; 116fc <__snprintf_chk@plt+0xd18>
   11160:	mov	r1, #1
   11164:	str	r8, [sp]
   11168:	bl	109a8 <__fprintf_chk@plt>
   1116c:	ldr	r2, [sp, #100]	; 0x64
   11170:	ldr	r0, [fp]
   11174:	add	r2, r2, r6
   11178:	mov	r1, #1
   1117c:	ldr	r3, [r2, #8]
   11180:	ldr	r2, [r2, #12]
   11184:	add	r7, r7, #1
   11188:	str	r2, [sp]
   1118c:	ldr	r2, [pc, #1388]	; 11700 <__snprintf_chk@plt+0xd1c>
   11190:	bl	109a8 <__fprintf_chk@plt>
   11194:	ldr	r3, [sp, #100]	; 0x64
   11198:	ldr	r0, [fp]
   1119c:	add	r3, r3, r6
   111a0:	ldr	r2, [pc, #1372]	; 11704 <__snprintf_chk@plt+0xd20>
   111a4:	vldr	s13, [r3, #16]
   111a8:	vldr	s15, [r3, #20]
   111ac:	mov	r1, #1
   111b0:	add	r6, r6, #28
   111b4:	vcvt.f32.s32	s13, s13
   111b8:	vcvt.f32.s32	s15, s15
   111bc:	vdiv.f32	s14, s13, s15
   111c0:	vcvt.f64.f32	d7, s14
   111c4:	vstr	d7, [sp]
   111c8:	bl	109a8 <__fprintf_chk@plt>
   111cc:	ldr	r4, [sp, #80]	; 0x50
   111d0:	cmp	r7, r4
   111d4:	bcc	11134 <__snprintf_chk@plt+0x750>
   111d8:	ldr	r5, [sp, #48]	; 0x30
   111dc:	cmp	r5, #0
   111e0:	beq	10dfc <__snprintf_chk@plt+0x418>
   111e4:	b	10de8 <__snprintf_chk@plt+0x404>
   111e8:	ldr	r1, [pc, #1304]	; 11708 <__snprintf_chk@plt+0xd24>
   111ec:	mov	r0, r4
   111f0:	bl	108dc <strcmp@plt>
   111f4:	subs	r5, r0, #0
   111f8:	bne	11608 <__snprintf_chk@plt+0xc24>
   111fc:	ldr	r0, [pc, #1288]	; 1170c <__snprintf_chk@plt+0xd28>
   11200:	bl	1093c <puts@plt>
   11204:	mov	r0, r5
   11208:	bl	10984 <exit@plt>
   1120c:	cmp	r4, #0
   11210:	beq	11268 <__snprintf_chk@plt+0x884>
   11214:	ldr	r7, [sp, #100]	; 0x64
   11218:	ldr	r6, [pc, #1180]	; 116bc <__snprintf_chk@plt+0xcd8>
   1121c:	mov	r8, #0
   11220:	b	11234 <__snprintf_chk@plt+0x850>
   11224:	add	r8, r8, #1
   11228:	cmp	r8, r4
   1122c:	add	r7, r7, #28
   11230:	beq	11268 <__snprintf_chk@plt+0x884>
   11234:	mov	r1, r6
   11238:	ldr	r0, [r7, #4]
   1123c:	bl	108dc <strcmp@plt>
   11240:	cmp	r0, #0
   11244:	bne	11224 <__snprintf_chk@plt+0x840>
   11248:	ldr	r3, [r7, #12]
   1124c:	ldr	r2, [pc, #1212]	; 11710 <__snprintf_chk@plt+0xd2c>
   11250:	str	r3, [sp]
   11254:	mov	r1, #1
   11258:	ldr	r3, [r7, #8]
   1125c:	ldr	r0, [fp]
   11260:	bl	109a8 <__fprintf_chk@plt>
   11264:	ldr	r5, [sp, #96]	; 0x60
   11268:	ldr	r1, [r5, sl]
   1126c:	add	r2, sp, #92	; 0x5c
   11270:	ldr	r0, [sp, #28]
   11274:	bl	10918 <XvListImageFormats@plt>
   11278:	ldr	r3, [sp, #92]	; 0x5c
   1127c:	ldr	r2, [pc, #1168]	; 11714 <__snprintf_chk@plt+0xd30>
   11280:	mov	r1, #1
   11284:	str	r0, [sp, #48]	; 0x30
   11288:	mov	r4, r0
   1128c:	ldr	r0, [fp]
   11290:	bl	109a8 <__fprintf_chk@plt>
   11294:	ldr	r3, [sp, #92]	; 0x5c
   11298:	cmp	r3, #0
   1129c:	ble	11598 <__snprintf_chk@plt+0xbb4>
   112a0:	bl	10978 <__ctype_b_loc@plt>
   112a4:	ldr	r6, [pc, #1132]	; 11718 <__snprintf_chk@plt+0xd34>
   112a8:	str	r9, [sp, #52]	; 0x34
   112ac:	ldr	r7, [pc, #1128]	; 1171c <__snprintf_chk@plt+0xd38>
   112b0:	mov	r5, #0
   112b4:	ldr	r9, [sp, #32]
   112b8:	mov	r8, r0
   112bc:	b	112d4 <__snprintf_chk@plt+0x8f0>
   112c0:	ldr	r3, [sp, #92]	; 0x5c
   112c4:	add	r5, r5, #1
   112c8:	cmp	r3, r5
   112cc:	add	r4, r4, #128	; 0x80
   112d0:	ble	11594 <__snprintf_chk@plt+0xbb0>
   112d4:	ldr	r2, [r4]
   112d8:	mov	r3, #5
   112dc:	str	r6, [sp]
   112e0:	asr	r0, r2, #16
   112e4:	asr	r1, r2, #8
   112e8:	lsr	ip, r2, #24
   112ec:	uxtb	r0, r0
   112f0:	uxtb	r1, r1
   112f4:	uxtb	r2, r2
   112f8:	str	r0, [sp, #12]
   112fc:	str	r1, [sp, #8]
   11300:	str	ip, [sp, #16]
   11304:	mov	r1, r3
   11308:	str	r2, [sp, #4]
   1130c:	add	r0, sp, #108	; 0x6c
   11310:	mov	r2, #1
   11314:	bl	109e4 <__snprintf_chk@plt>
   11318:	ldr	r3, [r4]
   1131c:	mov	r2, r7
   11320:	mov	r1, #1
   11324:	ldr	r0, [fp]
   11328:	bl	109a8 <__fprintf_chk@plt>
   1132c:	ldrb	r3, [sp, #108]	; 0x6c
   11330:	ldr	r2, [r8]
   11334:	lsl	r3, r3, #1
   11338:	ldrh	r3, [r2, r3]
   1133c:	tst	r3, #16384	; 0x4000
   11340:	beq	11380 <__snprintf_chk@plt+0x99c>
   11344:	ldrb	r3, [sp, #109]	; 0x6d
   11348:	lsl	r3, r3, #1
   1134c:	ldrh	r3, [r2, r3]
   11350:	tst	r3, #16384	; 0x4000
   11354:	beq	11380 <__snprintf_chk@plt+0x99c>
   11358:	ldrb	r3, [sp, #110]	; 0x6e
   1135c:	lsl	r3, r3, #1
   11360:	ldrh	r3, [r2, r3]
   11364:	tst	r3, #16384	; 0x4000
   11368:	beq	11380 <__snprintf_chk@plt+0x99c>
   1136c:	ldrb	r3, [sp, #111]	; 0x6f
   11370:	lsl	r3, r3, #1
   11374:	ldrh	r3, [r2, r3]
   11378:	tst	r3, #16384	; 0x4000
   1137c:	bne	115d4 <__snprintf_chk@plt+0xbf0>
   11380:	ldr	r1, [fp]
   11384:	mov	r0, #10
   11388:	bl	109c0 <fputc@plt>
   1138c:	cmp	r9, #0
   11390:	bne	112c0 <__snprintf_chk@plt+0x8dc>
   11394:	ldr	r3, [fp]
   11398:	mov	r2, #14
   1139c:	mov	r1, #1
   113a0:	ldr	r0, [pc, #888]	; 11720 <__snprintf_chk@plt+0xd3c>
   113a4:	bl	10924 <fwrite@plt>
   113a8:	ldrb	r3, [r4, #12]
   113ac:	ldr	r2, [pc, #880]	; 11724 <__snprintf_chk@plt+0xd40>
   113b0:	mov	r1, #1
   113b4:	ldr	r0, [fp]
   113b8:	bl	109a8 <__fprintf_chk@plt>
   113bc:	ldrb	r3, [r4, #13]
   113c0:	ldr	r2, [pc, #860]	; 11724 <__snprintf_chk@plt+0xd40>
   113c4:	mov	r1, #1
   113c8:	ldr	r0, [fp]
   113cc:	bl	109a8 <__fprintf_chk@plt>
   113d0:	ldrb	r3, [r4, #14]
   113d4:	ldr	r2, [pc, #840]	; 11724 <__snprintf_chk@plt+0xd40>
   113d8:	mov	r1, #1
   113dc:	ldr	r0, [fp]
   113e0:	bl	109a8 <__fprintf_chk@plt>
   113e4:	ldrb	r3, [r4, #15]
   113e8:	ldr	r2, [pc, #824]	; 11728 <__snprintf_chk@plt+0xd44>
   113ec:	mov	r1, #1
   113f0:	ldr	r0, [fp]
   113f4:	bl	109a8 <__fprintf_chk@plt>
   113f8:	ldrb	r3, [r4, #16]
   113fc:	ldr	r2, [pc, #800]	; 11724 <__snprintf_chk@plt+0xd40>
   11400:	mov	r1, #1
   11404:	ldr	r0, [fp]
   11408:	bl	109a8 <__fprintf_chk@plt>
   1140c:	ldrb	r3, [r4, #17]
   11410:	ldr	r2, [pc, #784]	; 11728 <__snprintf_chk@plt+0xd44>
   11414:	mov	r1, #1
   11418:	ldr	r0, [fp]
   1141c:	bl	109a8 <__fprintf_chk@plt>
   11420:	ldrb	r3, [r4, #18]
   11424:	ldr	r2, [pc, #760]	; 11724 <__snprintf_chk@plt+0xd40>
   11428:	mov	r1, #1
   1142c:	ldr	r0, [fp]
   11430:	bl	109a8 <__fprintf_chk@plt>
   11434:	ldrb	r3, [r4, #19]
   11438:	ldr	r2, [pc, #744]	; 11728 <__snprintf_chk@plt+0xd44>
   1143c:	mov	r1, #1
   11440:	ldr	r0, [fp]
   11444:	bl	109a8 <__fprintf_chk@plt>
   11448:	ldrb	r3, [r4, #20]
   1144c:	ldr	r2, [pc, #720]	; 11724 <__snprintf_chk@plt+0xd40>
   11450:	mov	r1, #1
   11454:	ldr	r0, [fp]
   11458:	bl	109a8 <__fprintf_chk@plt>
   1145c:	ldrb	r3, [r4, #21]
   11460:	ldr	r2, [pc, #704]	; 11728 <__snprintf_chk@plt+0xd44>
   11464:	mov	r1, #1
   11468:	ldr	r0, [fp]
   1146c:	bl	109a8 <__fprintf_chk@plt>
   11470:	ldrb	r3, [r4, #22]
   11474:	ldr	r2, [pc, #680]	; 11724 <__snprintf_chk@plt+0xd40>
   11478:	mov	r1, #1
   1147c:	ldr	r0, [fp]
   11480:	bl	109a8 <__fprintf_chk@plt>
   11484:	ldrb	r3, [r4, #23]
   11488:	ldr	r2, [pc, #660]	; 11724 <__snprintf_chk@plt+0xd40>
   1148c:	mov	r1, #1
   11490:	ldr	r0, [fp]
   11494:	bl	109a8 <__fprintf_chk@plt>
   11498:	ldrb	r3, [r4, #24]
   1149c:	ldr	r2, [pc, #640]	; 11724 <__snprintf_chk@plt+0xd40>
   114a0:	mov	r1, #1
   114a4:	ldr	r0, [fp]
   114a8:	bl	109a8 <__fprintf_chk@plt>
   114ac:	ldrb	r3, [r4, #25]
   114b0:	ldr	r2, [pc, #620]	; 11724 <__snprintf_chk@plt+0xd40>
   114b4:	mov	r1, #1
   114b8:	ldr	r0, [fp]
   114bc:	bl	109a8 <__fprintf_chk@plt>
   114c0:	ldrb	r3, [r4, #26]
   114c4:	ldr	r2, [pc, #600]	; 11724 <__snprintf_chk@plt+0xd40>
   114c8:	mov	r1, #1
   114cc:	ldr	r0, [fp]
   114d0:	bl	109a8 <__fprintf_chk@plt>
   114d4:	ldrb	r3, [r4, #27]
   114d8:	ldr	r2, [pc, #588]	; 1172c <__snprintf_chk@plt+0xd48>
   114dc:	mov	r1, #1
   114e0:	ldr	r0, [fp]
   114e4:	bl	109a8 <__fprintf_chk@plt>
   114e8:	ldr	r3, [r4, #28]
   114ec:	ldr	r2, [pc, #572]	; 11730 <__snprintf_chk@plt+0xd4c>
   114f0:	mov	r1, #1
   114f4:	ldr	r0, [fp]
   114f8:	bl	109a8 <__fprintf_chk@plt>
   114fc:	ldr	r3, [r4, #36]	; 0x24
   11500:	ldr	r2, [pc, #556]	; 11734 <__snprintf_chk@plt+0xd50>
   11504:	mov	r1, #1
   11508:	ldr	r0, [fp]
   1150c:	bl	109a8 <__fprintf_chk@plt>
   11510:	ldr	r0, [r4, #32]
   11514:	ldr	r1, [pc, #540]	; 11738 <__snprintf_chk@plt+0xd54>
   11518:	ldr	ip, [r4, #4]
   1151c:	cmp	r0, #0
   11520:	ldr	r2, [pc, #532]	; 1173c <__snprintf_chk@plt+0xd58>
   11524:	moveq	r2, r1
   11528:	ldr	r1, [pc, #528]	; 11740 <__snprintf_chk@plt+0xd5c>
   1152c:	cmp	ip, #0
   11530:	ldr	r3, [pc, #524]	; 11744 <__snprintf_chk@plt+0xd60>
   11534:	ldr	r0, [fp]
   11538:	moveq	r3, r1
   1153c:	str	r2, [sp]
   11540:	mov	r1, #1
   11544:	ldr	r2, [pc, #508]	; 11748 <__snprintf_chk@plt+0xd64>
   11548:	bl	109a8 <__fprintf_chk@plt>
   1154c:	ldr	r3, [r4, #4]
   11550:	cmp	r3, #0
   11554:	bne	112c0 <__snprintf_chk@plt+0x8dc>
   11558:	ldr	r3, [r4, #40]	; 0x28
   1155c:	ldr	r2, [pc, #488]	; 1174c <__snprintf_chk@plt+0xd68>
   11560:	mov	r1, #1
   11564:	ldr	r0, [fp]
   11568:	bl	109a8 <__fprintf_chk@plt>
   1156c:	ldr	r3, [r4, #52]	; 0x34
   11570:	ldr	r2, [pc, #472]	; 11750 <__snprintf_chk@plt+0xd6c>
   11574:	str	r3, [sp, #4]
   11578:	ldr	r3, [r4, #48]	; 0x30
   1157c:	mov	r1, #1
   11580:	str	r3, [sp]
   11584:	ldr	r0, [fp]
   11588:	ldr	r3, [r4, #44]	; 0x2c
   1158c:	bl	109a8 <__fprintf_chk@plt>
   11590:	b	112c0 <__snprintf_chk@plt+0x8dc>
   11594:	ldr	r9, [sp, #52]	; 0x34
   11598:	ldr	r3, [sp, #48]	; 0x30
   1159c:	cmp	r3, #0
   115a0:	beq	10dfc <__snprintf_chk@plt+0x418>
   115a4:	mov	r0, r3
   115a8:	bl	1090c <XFree@plt>
   115ac:	b	10dfc <__snprintf_chk@plt+0x418>
   115b0:	ldr	r2, [pc, #212]	; 1168c <__snprintf_chk@plt+0xca8>
   115b4:	ldr	r3, [sl]
   115b8:	ldr	r4, [r2]
   115bc:	mov	r0, #0
   115c0:	str	r3, [sp, #28]
   115c4:	bl	1099c <XDisplayName@plt>
   115c8:	ldr	r3, [sp, #28]
   115cc:	mov	r8, r0
   115d0:	b	10b34 <__snprintf_chk@plt+0x150>
   115d4:	add	r3, sp, #108	; 0x6c
   115d8:	ldr	r2, [pc, #372]	; 11754 <__snprintf_chk@plt+0xd70>
   115dc:	mov	r1, #1
   115e0:	ldr	r0, [fp]
   115e4:	bl	109a8 <__fprintf_chk@plt>
   115e8:	b	1138c <__snprintf_chk@plt+0x9a8>
   115ec:	ldr	r1, [pc, #152]	; 1168c <__snprintf_chk@plt+0xca8>
   115f0:	ldr	r3, [sp, #28]
   115f4:	ldr	r2, [pc, #348]	; 11758 <__snprintf_chk@plt+0xd74>
   115f8:	ldr	r0, [r1]
   115fc:	mov	r1, #1
   11600:	bl	109a8 <__fprintf_chk@plt>
   11604:	bl	109f0 <__snprintf_chk@plt+0xc>
   11608:	ldr	r2, [pc, #124]	; 1168c <__snprintf_chk@plt+0xca8>
   1160c:	str	r4, [sp]
   11610:	ldr	r3, [sp, #28]
   11614:	ldr	r0, [r2]
   11618:	mov	r1, #1
   1161c:	ldr	r2, [pc, #312]	; 1175c <__snprintf_chk@plt+0xd78>
   11620:	bl	109a8 <__fprintf_chk@plt>
   11624:	bl	109f0 <__snprintf_chk@plt+0xc>
   11628:	ldr	r3, [pc, #92]	; 1168c <__snprintf_chk@plt+0xca8>
   1162c:	cmp	r8, #0
   11630:	ldr	r5, [sl]
   11634:	ldr	r4, [r3]
   11638:	beq	11668 <__snprintf_chk@plt+0xc84>
   1163c:	str	r8, [sp]
   11640:	mov	r3, r5
   11644:	mov	r0, r4
   11648:	ldr	r2, [pc, #272]	; 11760 <__snprintf_chk@plt+0xd7c>
   1164c:	mov	r1, #1
   11650:	bl	109a8 <__fprintf_chk@plt>
   11654:	mvn	r0, #0
   11658:	bl	10984 <exit@plt>
   1165c:	ldr	r3, [pc, #40]	; 1168c <__snprintf_chk@plt+0xca8>
   11660:	ldr	r5, [sl]
   11664:	ldr	r4, [r3]
   11668:	mov	r0, #0
   1166c:	bl	1099c <XDisplayName@plt>
   11670:	mov	r8, r0
   11674:	b	1163c <__snprintf_chk@plt+0xc58>
   11678:	bl	10900 <__stack_chk_fail@plt>
   1167c:	strdeq	r1, [r2], -r8
   11680:	andeq	r2, r2, r4, lsl #1
   11684:	andeq	r1, r1, r0, lsl r9
   11688:	andeq	r1, r1, r0, asr #18
   1168c:	andeq	r2, r2, r8, ror r0
   11690:	andeq	r1, r1, r4, lsr #19
   11694:	andeq	r2, r2, ip, ror r0
   11698:	andeq	r1, r1, r4, asr #19
   1169c:	andeq	r1, r1, r8, ror #19
   116a0:	andeq	r1, r1, r0, asr #23
   116a4:	andeq	r1, r1, ip, lsl #20
   116a8:	andeq	r1, r1, r4, lsr #20
   116ac:	andeq	r1, r1, r0, asr #20
   116b0:	andeq	r1, r1, r4, asr sl
   116b4:	andeq	r1, r1, r8, lsl #21
   116b8:	andeq	r1, r1, ip, lsr #21
   116bc:	andeq	r1, r1, r0, ror #23
   116c0:			; <UNDEFINED> instruction: 0x00011ab4
   116c4:	andeq	r1, r1, ip, asr #21
   116c8:	strdeq	r1, [r1], -r0
   116cc:	andeq	r1, r1, r0, lsl fp
   116d0:	andeq	r1, r1, r0, lsr fp
   116d4:	andeq	r1, r1, ip, asr fp
   116d8:	muleq	r1, ip, fp
   116dc:	andeq	r1, r1, r4, lsl #23
   116e0:	andeq	r1, r1, r8, lsr #23
   116e4:	andeq	r1, r1, r0, lsr #21
   116e8:	muleq	r1, r4, sl
   116ec:	andeq	r1, r1, ip, ror sl
   116f0:	andeq	r1, r1, r0, ror sl
   116f4:	strdeq	r1, [r1], -r4
   116f8:	andeq	r1, r1, ip, ror #23
   116fc:	andeq	r1, r1, ip, lsl #24
   11700:	andeq	r1, r1, ip, lsr #24
   11704:	andeq	r1, r1, r8, asr #24
   11708:	andeq	r1, r1, r8, asr #18
   1170c:	andeq	r1, r1, r4, asr r9
   11710:	andeq	r1, r1, ip, asr ip
   11714:	andeq	r1, r1, r4, lsl #25
   11718:	andeq	r1, r1, r8, lsr #25
   1171c:			; <UNDEFINED> instruction: 0x00011cb4
   11720:	andeq	r1, r1, r4, asr #25
   11724:	ldrdeq	r1, [r1], -r4
   11728:	ldrdeq	r1, [r1], -ip
   1172c:	andeq	r1, r1, r4, ror #25
   11730:	andeq	r1, r1, ip, ror #25
   11734:	andeq	r1, r1, r8, lsl #26
   11738:	andeq	r1, r1, r0, lsl #18
   1173c:	andeq	r1, r1, r8, lsl #18
   11740:	strdeq	r1, [r1], -r8
   11744:	strdeq	r1, [r1], -ip
   11748:	andeq	r1, r1, r8, lsr #26
   1174c:	andeq	r1, r1, r0, asr #26
   11750:	andeq	r1, r1, r4, asr sp
   11754:	andeq	r1, r1, r8, lsr sp
   11758:	andeq	r1, r1, ip, lsl r9
   1175c:	andeq	r1, r1, r4, ror #18
   11760:	andeq	r1, r1, r4, lsl #19
   11764:	mov	fp, #0
   11768:	mov	lr, #0
   1176c:	pop	{r1}		; (ldr r1, [sp], #4)
   11770:	mov	r2, sp
   11774:	push	{r2}		; (str r2, [sp, #-4]!)
   11778:	push	{r0}		; (str r0, [sp, #-4]!)
   1177c:	ldr	ip, [pc, #16]	; 11794 <__snprintf_chk@plt+0xdb0>
   11780:	push	{ip}		; (str ip, [sp, #-4]!)
   11784:	ldr	r0, [pc, #12]	; 11798 <__snprintf_chk@plt+0xdb4>
   11788:	ldr	r3, [pc, #12]	; 1179c <__snprintf_chk@plt+0xdb8>
   1178c:	bl	10948 <__libc_start_main@plt>
   11790:	bl	109d8 <abort@plt>
   11794:			; <UNDEFINED> instruction: 0x000118b4
   11798:	andeq	r0, r1, r4, lsr #20
   1179c:	andeq	r1, r1, r4, asr r8
   117a0:	ldr	r3, [pc, #20]	; 117bc <__snprintf_chk@plt+0xdd8>
   117a4:	ldr	r2, [pc, #20]	; 117c0 <__snprintf_chk@plt+0xddc>
   117a8:	add	r3, pc, r3
   117ac:	ldr	r2, [r3, r2]
   117b0:	cmp	r2, #0
   117b4:	bxeq	lr
   117b8:	b	1096c <__gmon_start__@plt>
   117bc:	andeq	r0, r1, r0, asr r8
   117c0:	andeq	r0, r0, ip, rrx
   117c4:	ldr	r0, [pc, #24]	; 117e4 <__snprintf_chk@plt+0xe00>
   117c8:	ldr	r3, [pc, #24]	; 117e8 <__snprintf_chk@plt+0xe04>
   117cc:	cmp	r3, r0
   117d0:	bxeq	lr
   117d4:	ldr	r3, [pc, #16]	; 117ec <__snprintf_chk@plt+0xe08>
   117d8:	cmp	r3, #0
   117dc:	bxeq	lr
   117e0:	bx	r3
   117e4:	andeq	r2, r2, r8, ror r0
   117e8:	andeq	r2, r2, r8, ror r0
   117ec:	andeq	r0, r0, r0
   117f0:	ldr	r0, [pc, #36]	; 1181c <__snprintf_chk@plt+0xe38>
   117f4:	ldr	r1, [pc, #36]	; 11820 <__snprintf_chk@plt+0xe3c>
   117f8:	sub	r1, r1, r0
   117fc:	asr	r1, r1, #2
   11800:	add	r1, r1, r1, lsr #31
   11804:	asrs	r1, r1, #1
   11808:	bxeq	lr
   1180c:	ldr	r3, [pc, #16]	; 11824 <__snprintf_chk@plt+0xe40>
   11810:	cmp	r3, #0
   11814:	bxeq	lr
   11818:	bx	r3
   1181c:	andeq	r2, r2, r8, ror r0
   11820:	andeq	r2, r2, r8, ror r0
   11824:	andeq	r0, r0, r0
   11828:	push	{r4, lr}
   1182c:	ldr	r4, [pc, #24]	; 1184c <__snprintf_chk@plt+0xe68>
   11830:	ldrb	r3, [r4]
   11834:	cmp	r3, #0
   11838:	popne	{r4, pc}
   1183c:	bl	117c4 <__snprintf_chk@plt+0xde0>
   11840:	mov	r3, #1
   11844:	strb	r3, [r4]
   11848:	pop	{r4, pc}
   1184c:	andeq	r2, r2, r0, lsl #1
   11850:	b	117f0 <__snprintf_chk@plt+0xe0c>
   11854:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11858:	mov	r7, r0
   1185c:	ldr	r6, [pc, #72]	; 118ac <__snprintf_chk@plt+0xec8>
   11860:	ldr	r5, [pc, #72]	; 118b0 <__snprintf_chk@plt+0xecc>
   11864:	add	r6, pc, r6
   11868:	add	r5, pc, r5
   1186c:	sub	r6, r6, r5
   11870:	mov	r8, r1
   11874:	mov	r9, r2
   11878:	bl	108b0 <_init@@Base>
   1187c:	asrs	r6, r6, #2
   11880:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11884:	mov	r4, #0
   11888:	add	r4, r4, #1
   1188c:	ldr	r3, [r5], #4
   11890:	mov	r2, r9
   11894:	mov	r1, r8
   11898:	mov	r0, r7
   1189c:	blx	r3
   118a0:	cmp	r6, r4
   118a4:	bne	11888 <__snprintf_chk@plt+0xea4>
   118a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118ac:	andeq	r0, r1, r8, lsl #13
   118b0:	andeq	r0, r1, r0, lsl #13
   118b4:	bx	lr

Disassembly of section .fini:

000118b8 <_fini@@Base>:
   118b8:	push	{r3, lr}
   118bc:	pop	{r3, pc}
