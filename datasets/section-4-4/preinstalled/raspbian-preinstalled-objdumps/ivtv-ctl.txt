
raspbian-preinstalled/ivtv-ctl:     file format elf32-littlearm


Disassembly of section .init:

000107a0 <.init>:
   107a0:	push	{r3, lr}
   107a4:	bl	11390 <close@plt+0xaa4>
   107a8:	pop	{r3, pc}

Disassembly of section .plt:

000107ac <strtol@plt-0x14>:
   107ac:	push	{lr}		; (str lr, [sp, #-4]!)
   107b0:	ldr	lr, [pc, #4]	; 107bc <strtol@plt-0x4>
   107b4:	add	lr, pc, lr
   107b8:	ldr	pc, [lr, #8]!
   107bc:	andeq	r2, r1, r8, asr #15

000107c0 <strtol@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #73728	; 0x12000
   107c8:	ldr	pc, [ip, #1992]!	; 0x7c8

000107cc <fopen@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #73728	; 0x12000
   107d4:	ldr	pc, [ip, #1984]!	; 0x7c0

000107d8 <__stack_chk_fail@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #73728	; 0x12000
   107e0:	ldr	pc, [ip, #1976]!	; 0x7b8

000107e4 <fwrite@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #73728	; 0x12000
   107ec:	ldr	pc, [ip, #1968]!	; 0x7b0

000107f0 <ioctl@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #73728	; 0x12000
   107f8:	ldr	pc, [ip, #1960]!	; 0x7a8

000107fc <fread@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #73728	; 0x12000
   10804:	ldr	pc, [ip, #1952]!	; 0x7a0

00010808 <puts@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #73728	; 0x12000
   10810:	ldr	pc, [ip, #1944]!	; 0x798

00010814 <__libc_start_main@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #73728	; 0x12000
   1081c:	ldr	pc, [ip, #1936]!	; 0x790

00010820 <strerror@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #73728	; 0x12000
   10828:	ldr	pc, [ip, #1928]!	; 0x788

0001082c <__gmon_start__@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #73728	; 0x12000
   10834:	ldr	pc, [ip, #1920]!	; 0x780

00010838 <open@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #73728	; 0x12000
   10840:	ldr	pc, [ip, #1912]!	; 0x778

00010844 <getopt_long@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #73728	; 0x12000
   1084c:	ldr	pc, [ip, #1904]!	; 0x770

00010850 <__ctype_b_loc@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #73728	; 0x12000
   10858:	ldr	pc, [ip, #1896]!	; 0x768

0001085c <exit@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #73728	; 0x12000
   10864:	ldr	pc, [ip, #1888]!	; 0x760

00010868 <strlen@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #1880]!	; 0x758

00010874 <getsubopt@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1872]!	; 0x750

00010880 <__errno_location@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1864]!	; 0x748

0001088c <__sprintf_chk@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1856]!	; 0x740

00010898 <memset@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1848]!	; 0x738

000108a4 <putchar@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1840]!	; 0x730

000108b0 <__printf_chk@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1832]!	; 0x728

000108bc <__fprintf_chk@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1824]!	; 0x720

000108c8 <fclose@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1816]!	; 0x718

000108d4 <fputs@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1808]!	; 0x710

000108e0 <abort@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1800]!	; 0x708

000108ec <close@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1792]!	; 0x700

Disassembly of section .text:

000108f8 <.text>:
   108f8:	ldr	r3, [pc, #2064]	; 11110 <close@plt+0x824>
   108fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10900:	mov	r8, r0
   10904:	mov	r9, r1
   10908:	ldr	ip, [pc, #2052]	; 11114 <close@plt+0x828>
   1090c:	ldm	r3, {r0, r1, r2, r3}
   10910:	sub	sp, sp, #468	; 0x1d4
   10914:	add	r4, sp, #96	; 0x60
   10918:	ldr	ip, [ip]
   1091c:	stm	r4, {r0, r1, r2, r3}
   10920:	cmp	r8, #1
   10924:	mov	r3, #0
   10928:	str	ip, [sp, #460]	; 0x1cc
   1092c:	str	r3, [sp, #32]
   10930:	str	r3, [sp, #36]	; 0x24
   10934:	beq	110f0 <close@plt+0x804>
   10938:	ldr	r2, [pc, #2008]	; 11118 <close@plt+0x82c>
   1093c:	mov	sl, r3
   10940:	mov	r5, r3
   10944:	mov	fp, r3
   10948:	mov	r7, r3
   1094c:	str	r3, [sp, #16]
   10950:	str	r2, [sp, #12]
   10954:	str	r3, [sp, #20]
   10958:	ldr	r3, [pc, #1980]	; 1111c <close@plt+0x830>
   1095c:	str	sl, [sp, #40]	; 0x28
   10960:	ldr	r2, [r3]
   10964:	cmp	r2, #0
   10968:	beq	109cc <close@plt+0xe0>
   1096c:	bl	10850 <__ctype_b_loc@plt>
   10970:	ldr	r3, [pc, #1956]	; 1111c <close@plt+0x830>
   10974:	mov	r2, #0
   10978:	mov	ip, #58	; 0x3a
   1097c:	ldr	lr, [r0]
   10980:	ldr	r0, [r3, #12]
   10984:	lsl	r1, r0, #1
   10988:	ldrh	r1, [lr, r1]
   1098c:	tst	r1, #1024	; 0x400
   10990:	beq	109c0 <close@plt+0xd4>
   10994:	ldr	r1, [r3, #4]
   10998:	cmp	r1, #1
   1099c:	add	r1, sp, #464	; 0x1d0
   109a0:	add	r1, r1, r2
   109a4:	strb	r0, [r1, #-112]	; 0xffffff90
   109a8:	add	r1, r2, #1
   109ac:	addeq	r0, sp, #464	; 0x1d0
   109b0:	addeq	r1, r0, r1
   109b4:	addeq	r2, r2, #2
   109b8:	movne	r2, r1
   109bc:	strbeq	ip, [r1, #-112]	; 0xffffff90
   109c0:	ldr	r1, [r3, #16]!
   109c4:	cmp	r1, #0
   109c8:	bne	10980 <close@plt+0x94>
   109cc:	add	r3, sp, #464	; 0x1d0
   109d0:	add	ip, r3, r2
   109d4:	add	r3, sp, #40	; 0x28
   109d8:	str	r3, [sp]
   109dc:	add	r2, sp, #352	; 0x160
   109e0:	ldr	r3, [pc, #1844]	; 1111c <close@plt+0x830>
   109e4:	mov	r1, r9
   109e8:	mov	r0, r8
   109ec:	strb	sl, [ip, #-112]	; 0xffffff90
   109f0:	bl	10844 <getopt_long@plt>
   109f4:	cmn	r0, #1
   109f8:	beq	10cf4 <close@plt+0x408>
   109fc:	ldr	r3, [pc, #1820]	; 11120 <close@plt+0x834>
   10a00:	mov	r2, #1
   10a04:	add	r3, r3, r0
   10a08:	sub	r0, r0, #58	; 0x3a
   10a0c:	strb	r2, [r3, #24]
   10a10:	cmp	r0, #71	; 0x47
   10a14:	ldrls	pc, [pc, r0, lsl #2]
   10a18:	b	10958 <close@plt+0x6c>
   10a1c:	ldrdeq	r1, [r1], -r0
   10a20:	andeq	r0, r1, r8, asr r9
   10a24:	andeq	r0, r1, r8, asr r9
   10a28:	andeq	r0, r1, r8, asr r9
   10a2c:	andeq	r0, r1, r8, asr r9
   10a30:	andeq	r1, r1, r4, asr #4
   10a34:	andeq	r0, r1, r8, asr r9
   10a38:	andeq	r0, r1, r8, asr r9
   10a3c:	andeq	r0, r1, r8, asr r9
   10a40:	andeq	r0, r1, r8, asr r9
   10a44:	ldrdeq	r0, [r1], -r8
   10a48:	andeq	r0, r1, r8, asr r9
   10a4c:	andeq	r0, r1, r8, asr r9
   10a50:	andeq	r0, r1, r8, asr r9
   10a54:	andeq	r0, r1, r8, asr r9
   10a58:	andeq	r0, r1, r8, asr r9
   10a5c:	andeq	r0, r1, r8, asr r9
   10a60:			; <UNDEFINED> instruction: 0x00010cbc
   10a64:	andeq	r0, r1, r8, asr r9
   10a68:	andeq	r0, r1, r8, asr r9
   10a6c:	andeq	r0, r1, r8, asr r9
   10a70:	andeq	r0, r1, r8, asr r9
   10a74:	andeq	r0, r1, r8, asr r9
   10a78:	andeq	r0, r1, r8, asr r9
   10a7c:	andeq	r0, r1, r8, asr r9
   10a80:	andeq	r0, r1, r8, asr r9
   10a84:	andeq	r0, r1, r8, asr r9
   10a88:	andeq	r0, r1, r8, asr r9
   10a8c:	andeq	r0, r1, r8, asr r9
   10a90:	andeq	r0, r1, r8, asr r9
   10a94:	andeq	r0, r1, r8, asr r9
   10a98:	andeq	r0, r1, r8, asr r9
   10a9c:	andeq	r0, r1, r8, asr r9
   10aa0:	andeq	r0, r1, r8, asr r9
   10aa4:	andeq	r0, r1, r8, asr r9
   10aa8:	andeq	r0, r1, r8, asr r9
   10aac:	andeq	r0, r1, r8, asr r9
   10ab0:	andeq	r0, r1, r8, asr r9
   10ab4:	andeq	r0, r1, r8, asr r9
   10ab8:	andeq	r0, r1, r8, asr r9
   10abc:	andeq	r0, r1, r8, asr r9
   10ac0:	andeq	r0, r1, r8, asr r9
   10ac4:	andeq	r0, r1, ip, ror #24
   10ac8:	andeq	r0, r1, r8, asr r9
   10acc:	andeq	r0, r1, r8, asr r9
   10ad0:	andeq	r0, r1, r8, asr r9
   10ad4:	strdeq	r1, [r1], -r0
   10ad8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10adc:	andeq	r0, r1, r8, asr r9
   10ae0:	andeq	r0, r1, r8, asr r9
   10ae4:	andeq	r0, r1, r8, asr r9
   10ae8:	andeq	r0, r1, r8, asr r9
   10aec:	andeq	r0, r1, r8, asr r9
   10af0:	andeq	r0, r1, r8, asr r9
   10af4:	andeq	r0, r1, r8, asr r9
   10af8:	andeq	r0, r1, r8, asr r9
   10afc:	andeq	r0, r1, r8, asr r9
   10b00:	andeq	r0, r1, r8, asr r9
   10b04:	andeq	r0, r1, r8, asr r9
   10b08:	andeq	r0, r1, r8, asr r9
   10b0c:	andeq	r0, r1, r8, asr r9
   10b10:	andeq	r0, r1, r8, asr r9
   10b14:	andeq	r0, r1, r8, asr r9
   10b18:	andeq	r0, r1, r8, asr r9
   10b1c:	andeq	r0, r1, r8, asr r9
   10b20:	andeq	r0, r1, r8, asr r9
   10b24:	andeq	r0, r1, r8, asr r9
   10b28:	andeq	r0, r1, r8, asr r9
   10b2c:	andeq	r0, r1, r8, asr r9
   10b30:	andeq	r0, r1, r8, asr r9
   10b34:	ldrdeq	r0, [r1], -r4
   10b38:	andeq	r0, r1, ip, lsr fp
   10b3c:	ldr	r3, [pc, #1504]	; 11124 <close@plt+0x838>
   10b40:	ldr	r3, [r3]
   10b44:	str	r3, [sp, #28]
   10b48:	b	10b50 <close@plt+0x264>
   10b4c:	ldr	r3, [sp, #28]
   10b50:	ldrb	r3, [r3]
   10b54:	cmp	r3, #0
   10b58:	beq	10958 <close@plt+0x6c>
   10b5c:	add	r2, sp, #24
   10b60:	mov	r1, r4
   10b64:	add	r0, sp, #28
   10b68:	bl	10874 <getsubopt@plt>
   10b6c:	cmp	r0, #1
   10b70:	mov	r6, r0
   10b74:	bne	10b4c <close@plt+0x260>
   10b78:	ldr	r0, [sp, #24]
   10b7c:	cmp	r0, #0
   10b80:	beq	11338 <close@plt+0xa4c>
   10b84:	mov	r2, #0
   10b88:	mov	r1, r2
   10b8c:	bl	107c0 <strtol@plt>
   10b90:	cmp	r0, #3
   10b94:	str	r0, [sp, #20]
   10b98:	bls	10b4c <close@plt+0x260>
   10b9c:	ldr	r3, [pc, #1584]	; 111d4 <close@plt+0x8e8>
   10ba0:	mov	r2, #17
   10ba4:	mov	r1, r6
   10ba8:	ldr	r3, [r3]
   10bac:	ldr	r0, [pc, #1396]	; 11128 <close@plt+0x83c>
   10bb0:	bl	107e4 <fwrite@plt>
   10bb4:	ldr	r3, [pc, #1368]	; 11114 <close@plt+0x828>
   10bb8:	ldr	r2, [sp, #460]	; 0x1cc
   10bbc:	mov	r0, r6
   10bc0:	ldr	r3, [r3]
   10bc4:	cmp	r2, r3
   10bc8:	bne	112bc <close@plt+0x9d0>
   10bcc:	add	sp, sp, #468	; 0x1d4
   10bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bd4:	ldr	r3, [pc, #1352]	; 11124 <close@plt+0x838>
   10bd8:	mov	r2, #0
   10bdc:	mov	r1, r2
   10be0:	ldr	r0, [r3]
   10be4:	bl	107c0 <strtol@plt>
   10be8:	str	r0, [sp, #36]	; 0x24
   10bec:	b	10958 <close@plt+0x6c>
   10bf0:	ldr	r3, [pc, #1324]	; 11124 <close@plt+0x838>
   10bf4:	ldr	r3, [r3]
   10bf8:	str	r3, [sp, #28]
   10bfc:	b	10c1c <close@plt+0x330>
   10c00:	ldr	r0, [sp, #24]
   10c04:	cmp	r0, #0
   10c08:	beq	11284 <close@plt+0x998>
   10c0c:	mov	r1, r2
   10c10:	bl	107c0 <strtol@plt>
   10c14:	uxth	r7, r0
   10c18:	ldr	r3, [sp, #28]
   10c1c:	ldrb	r3, [r3]
   10c20:	cmp	r3, #0
   10c24:	beq	10958 <close@plt+0x6c>
   10c28:	add	r2, sp, #24
   10c2c:	mov	r1, r4
   10c30:	add	r0, sp, #28
   10c34:	bl	10874 <getsubopt@plt>
   10c38:	subs	r2, r0, #0
   10c3c:	beq	10c00 <close@plt+0x314>
   10c40:	cmp	r2, #2
   10c44:	bne	11208 <close@plt+0x91c>
   10c48:	ldr	r0, [sp, #24]
   10c4c:	cmp	r0, #0
   10c50:	beq	112a0 <close@plt+0x9b4>
   10c54:	mov	r2, #0
   10c58:	mov	r1, r2
   10c5c:	bl	107c0 <strtol@plt>
   10c60:	mov	r5, #1
   10c64:	uxth	fp, r0
   10c68:	b	10c18 <close@plt+0x32c>
   10c6c:	ldr	r3, [pc, #1200]	; 11124 <close@plt+0x838>
   10c70:	ldr	r0, [r3]
   10c74:	str	r0, [sp, #12]
   10c78:	ldrb	r3, [r0]
   10c7c:	sub	r3, r3, #48	; 0x30
   10c80:	cmp	r3, #9
   10c84:	bhi	10958 <close@plt+0x6c>
   10c88:	bl	10868 <strlen@plt>
   10c8c:	cmp	r0, #3
   10c90:	bhi	10958 <close@plt+0x6c>
   10c94:	ldr	r3, [sp, #12]
   10c98:	mov	r2, #20
   10c9c:	str	r3, [sp]
   10ca0:	mov	r1, #1
   10ca4:	ldr	r3, [pc, #1152]	; 1112c <close@plt+0x840>
   10ca8:	ldr	r0, [pc, #1152]	; 11130 <close@plt+0x844>
   10cac:	bl	1088c <__sprintf_chk@plt>
   10cb0:	ldr	r3, [pc, #1144]	; 11130 <close@plt+0x844>
   10cb4:	str	r3, [sp, #12]
   10cb8:	b	10958 <close@plt+0x6c>
   10cbc:	ldr	r3, [pc, #1120]	; 11124 <close@plt+0x838>
   10cc0:	mov	r2, #0
   10cc4:	mov	r1, r2
   10cc8:	ldr	r0, [r3]
   10ccc:	bl	107c0 <strtol@plt>
   10cd0:	str	r0, [sp, #32]
   10cd4:	b	10958 <close@plt+0x6c>
   10cd8:	ldr	r3, [pc, #1092]	; 11124 <close@plt+0x838>
   10cdc:	mov	r2, #0
   10ce0:	mov	r1, r2
   10ce4:	ldr	r0, [r3]
   10ce8:	bl	107c0 <strtol@plt>
   10cec:	str	r0, [sp, #16]
   10cf0:	b	10958 <close@plt+0x6c>
   10cf4:	ldr	r4, [pc, #1208]	; 111b4 <close@plt+0x8c8>
   10cf8:	ldr	r3, [r4]
   10cfc:	cmp	r3, r8
   10d00:	blt	112f4 <close@plt+0xa08>
   10d04:	mov	r1, #2
   10d08:	ldr	r0, [sp, #12]
   10d0c:	bl	10838 <open@plt>
   10d10:	subs	r6, r0, #0
   10d14:	blt	112c0 <close@plt+0x9d4>
   10d18:	ldr	r4, [pc, #1024]	; 11120 <close@plt+0x834>
   10d1c:	ldrb	r3, [r4, #129]	; 0x81
   10d20:	cmp	r3, #0
   10d24:	beq	10d88 <close@plt+0x49c>
   10d28:	add	r9, pc, #968	; 0x3c8
   10d2c:	ldrd	r8, [r9]
   10d30:	cmp	r5, #0
   10d34:	uxth	r2, fp
   10d38:	add	r5, sp, #128	; 0x80
   10d3c:	mov	r3, #0
   10d40:	str	sl, [sp, #128]	; 0x80
   10d44:	str	sl, [sp, #132]	; 0x84
   10d48:	strd	r8, [r5, #40]	; 0x28
   10d4c:	strd	r2, [r5, #48]	; 0x30
   10d50:	bne	111dc <close@plt+0x8f0>
   10d54:	add	r1, pc, #932	; 0x3a4
   10d58:	ldrd	r0, [r1]
   10d5c:	uxth	r8, r7
   10d60:	mov	r9, #0
   10d64:	strd	r0, [r5, #40]	; 0x28
   10d68:	ldr	r3, [pc, #1076]	; 111a4 <close@plt+0x8b8>
   10d6c:	mov	r2, r5
   10d70:	ldr	r1, [pc, #1072]	; 111a8 <close@plt+0x8bc>
   10d74:	mov	r0, r6
   10d78:	strd	r8, [r5, #48]	; 0x30
   10d7c:	bl	117cc <close@plt+0xee0>
   10d80:	cmp	r0, #0
   10d84:	beq	11094 <close@plt+0x7a8>
   10d88:	ldrb	r3, [r4, #97]	; 0x61
   10d8c:	cmp	r3, #0
   10d90:	bne	10e78 <close@plt+0x58c>
   10d94:	ldrb	r3, [r4, #92]	; 0x5c
   10d98:	cmp	r3, #0
   10d9c:	bne	11030 <close@plt+0x744>
   10da0:	ldrb	r3, [r4, #125]	; 0x7d
   10da4:	cmp	r3, #0
   10da8:	bne	10fc0 <close@plt+0x6d4>
   10dac:	ldrb	r3, [r4, #99]	; 0x63
   10db0:	cmp	r3, #0
   10db4:	bne	10fa8 <close@plt+0x6bc>
   10db8:	ldrb	r3, [r4, #152]	; 0x98
   10dbc:	cmp	r3, #0
   10dc0:	bne	10f90 <close@plt+0x6a4>
   10dc4:	ldrb	r3, [r4, #153]	; 0x99
   10dc8:	cmp	r3, #0
   10dcc:	bne	10f08 <close@plt+0x61c>
   10dd0:	ldrb	r3, [r4, #154]	; 0x9a
   10dd4:	cmp	r3, #0
   10dd8:	beq	10e48 <close@plt+0x55c>
   10ddc:	mov	r2, #52	; 0x34
   10de0:	mov	r1, #0
   10de4:	add	r0, sp, #44	; 0x2c
   10de8:	bl	10898 <memset@plt>
   10dec:	mov	r5, #2
   10df0:	add	r2, sp, #40	; 0x28
   10df4:	ldr	r1, [pc, #824]	; 11134 <close@plt+0x848>
   10df8:	mov	r0, r6
   10dfc:	str	r5, [sp, #40]	; 0x28
   10e00:	bl	107f0 <ioctl@plt>
   10e04:	cmp	r0, #0
   10e08:	blt	10e58 <close@plt+0x56c>
   10e0c:	ldr	r3, [pc, #804]	; 11138 <close@plt+0x84c>
   10e10:	add	r2, sp, #128	; 0x80
   10e14:	ldr	r1, [pc, #800]	; 1113c <close@plt+0x850>
   10e18:	mov	r0, r6
   10e1c:	str	r5, [sp, #128]	; 0x80
   10e20:	bl	117cc <close@plt+0xee0>
   10e24:	ldr	r2, [sp, #144]	; 0x90
   10e28:	ldr	r1, [pc, #784]	; 11140 <close@plt+0x854>
   10e2c:	cmp	r2, #9
   10e30:	mov	r0, #1
   10e34:	ldrls	r3, [pc, #724]	; 11110 <close@plt+0x824>
   10e38:	ldrhi	r3, [pc, #772]	; 11144 <close@plt+0x858>
   10e3c:	addls	r3, r3, r2, lsl #2
   10e40:	ldrls	r3, [r3, #32]
   10e44:	bl	108b0 <__printf_chk@plt>
   10e48:	mov	r0, r6
   10e4c:	bl	108ec <close@plt>
   10e50:	ldr	r0, [r4]
   10e54:	bl	1085c <exit@plt>
   10e58:	ldr	r3, [pc, #884]	; 111d4 <close@plt+0x8e8>
   10e5c:	mov	r2, #38	; 0x26
   10e60:	mov	r1, #1
   10e64:	ldr	r3, [r3]
   10e68:	ldr	r0, [pc, #728]	; 11148 <close@plt+0x85c>
   10e6c:	bl	107e4 <fwrite@plt>
   10e70:	mov	r0, #1
   10e74:	bl	1085c <exit@plt>
   10e78:	add	r1, pc, #648	; 0x288
   10e7c:	ldrd	r0, [r1]
   10e80:	add	r5, sp, #128	; 0x80
   10e84:	mov	r3, #0
   10e88:	strd	r0, [r5, #40]	; 0x28
   10e8c:	mov	r2, r5
   10e90:	ldr	r1, [pc, #692]	; 1114c <close@plt+0x860>
   10e94:	mov	r0, r6
   10e98:	str	r3, [sp, #128]	; 0x80
   10e9c:	str	r3, [sp, #132]	; 0x84
   10ea0:	bl	107f0 <ioctl@plt>
   10ea4:	cmp	r0, #0
   10ea8:	beq	110a8 <close@plt+0x7bc>
   10eac:	add	r9, pc, #580	; 0x244
   10eb0:	ldrd	r8, [r9]
   10eb4:	mov	r2, r5
   10eb8:	ldr	r1, [pc, #652]	; 1114c <close@plt+0x860>
   10ebc:	mov	r0, r6
   10ec0:	strd	r8, [r5, #40]	; 0x28
   10ec4:	bl	107f0 <ioctl@plt>
   10ec8:	cmp	r0, #0
   10ecc:	beq	110bc <close@plt+0x7d0>
   10ed0:	add	r9, pc, #552	; 0x228
   10ed4:	ldrd	r8, [r9]
   10ed8:	mov	r2, r5
   10edc:	ldr	r1, [pc, #616]	; 1114c <close@plt+0x860>
   10ee0:	mov	r0, r6
   10ee4:	strd	r8, [r5, #40]	; 0x28
   10ee8:	bl	107f0 <ioctl@plt>
   10eec:	cmp	r0, #0
   10ef0:	bne	10d94 <close@plt+0x4a8>
   10ef4:	ldrd	r2, [r5, #48]	; 0x30
   10ef8:	ldr	r1, [pc, #592]	; 11150 <close@plt+0x864>
   10efc:	mov	r0, #1
   10f00:	bl	108b0 <__printf_chk@plt>
   10f04:	b	10d94 <close@plt+0x4a8>
   10f08:	ldr	r3, [pc, #580]	; 11154 <close@plt+0x868>
   10f0c:	add	ip, sp, #112	; 0x70
   10f10:	mov	r5, #2
   10f14:	ldm	r3, {r0, r1, r2, r3}
   10f18:	stm	ip, {r0, r1, r2, r3}
   10f1c:	ldr	r0, [pc, #564]	; 11158 <close@plt+0x86c>
   10f20:	bl	10808 <puts@plt>
   10f24:	mov	r2, #52	; 0x34
   10f28:	mov	r1, #0
   10f2c:	add	r0, sp, #44	; 0x2c
   10f30:	bl	10898 <memset@plt>
   10f34:	add	r2, sp, #40	; 0x28
   10f38:	ldr	r1, [pc, #500]	; 11134 <close@plt+0x848>
   10f3c:	mov	r0, r6
   10f40:	str	r5, [sp, #40]	; 0x28
   10f44:	bl	107f0 <ioctl@plt>
   10f48:	cmp	r0, #0
   10f4c:	blt	10e58 <close@plt+0x56c>
   10f50:	add	r2, sp, #128	; 0x80
   10f54:	ldr	r1, [pc, #480]	; 1113c <close@plt+0x850>
   10f58:	mov	r0, r6
   10f5c:	str	r5, [sp, #128]	; 0x80
   10f60:	bl	107f0 <ioctl@plt>
   10f64:	ldr	r2, [sp, #20]
   10f68:	add	r3, sp, #464	; 0x1d0
   10f6c:	ldr	r1, [pc, #488]	; 1115c <close@plt+0x870>
   10f70:	add	r3, r3, r2, lsl #2
   10f74:	mov	r0, r6
   10f78:	ldr	ip, [r3, #-352]	; 0xfffffea0
   10f7c:	add	r2, sp, #128	; 0x80
   10f80:	ldr	r3, [pc, #472]	; 11160 <close@plt+0x874>
   10f84:	str	ip, [sp, #144]	; 0x90
   10f88:	bl	117cc <close@plt+0xee0>
   10f8c:	b	10dd0 <close@plt+0x4e4>
   10f90:	ldr	r3, [pc, #460]	; 11164 <close@plt+0x878>
   10f94:	add	r2, sp, #36	; 0x24
   10f98:	ldr	r1, [pc, #456]	; 11168 <close@plt+0x87c>
   10f9c:	mov	r0, r6
   10fa0:	bl	117cc <close@plt+0xee0>
   10fa4:	b	10dc4 <close@plt+0x4d8>
   10fa8:	ldr	r3, [pc, #444]	; 1116c <close@plt+0x880>
   10fac:	add	r2, sp, #32
   10fb0:	ldr	r1, [pc, #440]	; 11170 <close@plt+0x884>
   10fb4:	mov	r0, r6
   10fb8:	bl	117cc <close@plt+0xee0>
   10fbc:	b	10db8 <close@plt+0x4cc>
   10fc0:	ldr	r1, [pc, #428]	; 11174 <close@plt+0x888>
   10fc4:	ldr	r0, [pc, #428]	; 11178 <close@plt+0x88c>
   10fc8:	bl	107cc <fopen@plt>
   10fcc:	subs	r7, r0, #0
   10fd0:	beq	11224 <close@plt+0x938>
   10fd4:	mov	r3, r7
   10fd8:	ldr	r2, [pc, #412]	; 1117c <close@plt+0x890>
   10fdc:	mov	r1, #1
   10fe0:	ldr	r0, [pc, #408]	; 11180 <close@plt+0x894>
   10fe4:	bl	107fc <fread@plt>
   10fe8:	mov	r5, #0
   10fec:	add	r3, r4, r0
   10ff0:	mov	r0, r7
   10ff4:	strb	r5, [r3, #280]	; 0x118
   10ff8:	bl	108c8 <fclose@plt>
   10ffc:	mov	r2, #10
   11000:	mov	r1, r5
   11004:	ldr	r0, [pc, #372]	; 11180 <close@plt+0x894>
   11008:	bl	107c0 <strtol@plt>
   1100c:	ldr	r1, [pc, #368]	; 11184 <close@plt+0x898>
   11010:	mov	r5, r0
   11014:	mov	r0, #1
   11018:	bl	108b0 <__printf_chk@plt>
   1101c:	mov	r0, r5
   11020:	bl	11444 <close@plt+0xb58>
   11024:	mov	r0, #10
   11028:	bl	108a4 <putchar@plt>
   1102c:	b	10dac <close@plt+0x4c0>
   11030:	ldr	r3, [sp, #16]
   11034:	mov	r2, #20
   11038:	str	r3, [sp]
   1103c:	mov	r1, #1
   11040:	ldr	r3, [pc, #320]	; 11188 <close@plt+0x89c>
   11044:	add	r0, sp, #332	; 0x14c
   11048:	bl	1088c <__sprintf_chk@plt>
   1104c:	ldr	r1, [pc, #312]	; 1118c <close@plt+0x8a0>
   11050:	ldr	r0, [pc, #288]	; 11178 <close@plt+0x88c>
   11054:	bl	107cc <fopen@plt>
   11058:	subs	r5, r0, #0
   1105c:	beq	11254 <close@plt+0x968>
   11060:	add	r0, sp, #332	; 0x14c
   11064:	mov	r1, r5
   11068:	bl	108d4 <fputs@plt>
   1106c:	mov	r0, r5
   11070:	bl	108c8 <fclose@plt>
   11074:	ldr	r1, [pc, #276]	; 11190 <close@plt+0x8a4>
   11078:	mov	r0, #1
   1107c:	bl	108b0 <__printf_chk@plt>
   11080:	ldr	r0, [sp, #16]
   11084:	bl	11444 <close@plt+0xb58>
   11088:	mov	r0, #10
   1108c:	bl	108a4 <putchar@plt>
   11090:	b	10da0 <close@plt+0x4b4>
   11094:	ldrd	r2, [r5, #48]	; 0x30
   11098:	ldr	r1, [pc, #244]	; 11194 <close@plt+0x8a8>
   1109c:	mov	r0, #1
   110a0:	bl	108b0 <__printf_chk@plt>
   110a4:	b	10d88 <close@plt+0x49c>
   110a8:	ldrd	r2, [r5, #48]	; 0x30
   110ac:	ldr	r1, [pc, #228]	; 11198 <close@plt+0x8ac>
   110b0:	mov	r0, #1
   110b4:	bl	108b0 <__printf_chk@plt>
   110b8:	b	10eac <close@plt+0x5c0>
   110bc:	ldrd	r2, [r5, #48]	; 0x30
   110c0:	ldr	r1, [pc, #212]	; 1119c <close@plt+0x8b0>
   110c4:	mov	r0, #1
   110c8:	bl	108b0 <__printf_chk@plt>
   110cc:	b	10ed0 <close@plt+0x5e4>
   110d0:	ldr	r3, [pc, #220]	; 111b4 <close@plt+0x8c8>
   110d4:	ldr	r1, [pc, #248]	; 111d4 <close@plt+0x8e8>
   110d8:	ldr	r2, [pc, #192]	; 111a0 <close@plt+0x8b4>
   110dc:	ldr	r3, [r3]
   110e0:	ldr	r0, [r1]
   110e4:	mov	r1, #1
   110e8:	ldr	r3, [r9, r3, lsl #2]
   110ec:	bl	108bc <__fprintf_chk@plt>
   110f0:	bl	11638 <close@plt+0xd4c>
   110f4:	nop			; (mov r0, r0)
   110f8:	andeq	r9, r0, #32
   110fc:	andeq	r0, r0, r0
   11100:	andeq	r9, r0, #12
   11104:	andeq	r0, r0, r0
   11108:	andeq	r9, r0, #8
   1110c:	andeq	r0, r0, r0
   11110:	andeq	r1, r1, r0, asr #17
   11114:	andeq	r2, r2, r8, ror lr
   11118:	andeq	r1, r1, r0, asr #31
   1111c:	andeq	r3, r2, r8
   11120:	ldrdeq	r3, [r2], -r0
   11124:	andeq	r3, r2, r8, asr #1
   11128:	strdeq	r1, [r1], -r8
   1112c:	andeq	r2, r1, ip
   11130:	ldrdeq	r3, [r2], -r4
   11134:	eorsmi	r5, r8, r0, asr #13
   11138:	andeq	r2, r1, r0, lsr r2
   1113c:	sbcgt	r5, ip, r4, lsl #12
   11140:	andeq	r2, r1, r0, asr #4
   11144:	andeq	r1, r1, ip, asr #31
   11148:	strdeq	r2, [r1], -r8
   1114c:	eorsgt	r5, r8, r0, asr r6
   11150:	andeq	r2, r1, r4, ror #2
   11154:	ldrdeq	r1, [r1], -r0
   11158:	andeq	r2, r1, r8, ror #3
   1115c:	sbcgt	r5, ip, r5, lsl #12
   11160:	andeq	r2, r1, r0, lsr #4
   11164:	ldrdeq	r2, [r1], -r4
   11168:	andmi	r6, r4, r6, ror #8
   1116c:			; <UNDEFINED> instruction: 0x000121b8
   11170:	andmi	r5, r4, r1, asr #13
   11174:	andeq	r1, r1, r0, lsr #28
   11178:	andeq	r2, r1, r0, lsl #3
   1117c:	andeq	r0, r0, r7, ror #7
   11180:	andeq	r3, r2, r8, ror #3
   11184:	andeq	r2, r1, r8, lsr #3
   11188:	andeq	r2, r1, r8, ror r1
   1118c:	andeq	r2, r1, ip, ror r1
   11190:	andeq	r2, r1, r4, lsr #3
   11194:	andeq	r2, r1, r0, lsr #2
   11198:	andeq	r2, r1, ip, lsr r1
   1119c:	andeq	r2, r1, r0, asr r1
   111a0:	andeq	r2, r1, r4, lsl #1
   111a4:	andeq	r2, r1, ip, ror #1
   111a8:	eorsmi	r5, r8, pc, asr #12
   111ac:	andeq	r2, r1, r4, lsl #2
   111b0:	andeq	r2, r1, r4, rrx
   111b4:	strheq	r3, [r2], -r8
   111b8:	andeq	r2, r1, r4, lsr #1
   111bc:			; <UNDEFINED> instruction: 0x00011fb0
   111c0:	andeq	r2, r1, r0, asr #32
   111c4:	andeq	r2, r1, ip, lsl r0
   111c8:	ldrdeq	r2, [r1], -r4
   111cc:	strheq	r2, [r1], -ip
   111d0:	ldrdeq	r2, [r1], -r0
   111d4:	andeq	r3, r2, r0, asr #1
   111d8:	ldrdeq	r1, [r1], -r4
   111dc:	ldr	r3, [pc, #-64]	; 111a4 <close@plt+0x8b8>
   111e0:	mov	r2, r5
   111e4:	ldr	r1, [pc, #-68]	; 111a8 <close@plt+0x8bc>
   111e8:	bl	117cc <close@plt+0xee0>
   111ec:	cmp	r0, #0
   111f0:	bne	10d54 <close@plt+0x468>
   111f4:	ldrd	r2, [r5, #48]	; 0x30
   111f8:	ldr	r1, [pc, #-84]	; 111ac <close@plt+0x8c0>
   111fc:	mov	r0, #1
   11200:	bl	108b0 <__printf_chk@plt>
   11204:	b	10d54 <close@plt+0x468>
   11208:	ldr	r3, [pc, #-60]	; 111d4 <close@plt+0x8e8>
   1120c:	mov	r2, #29
   11210:	mov	r1, #1
   11214:	ldr	r3, [r3]
   11218:	ldr	r0, [pc, #-112]	; 111b0 <close@plt+0x8c4>
   1121c:	bl	107e4 <fwrite@plt>
   11220:	bl	11638 <close@plt+0xd4c>
   11224:	bl	10880 <__errno_location@plt>
   11228:	ldr	r0, [r0]
   1122c:	bl	10820 <strerror@plt>
   11230:	ldr	r1, [pc, #-124]	; 111bc <close@plt+0x8d0>
   11234:	mov	r2, r0
   11238:	mov	r0, #1
   1123c:	bl	108b0 <__printf_chk@plt>
   11240:	b	10dac <close@plt+0x4c0>
   11244:	ldr	r3, [pc, #-152]	; 111b4 <close@plt+0x8c8>
   11248:	ldr	r1, [pc, #-124]	; 111d4 <close@plt+0x8e8>
   1124c:	ldr	r2, [pc, #-156]	; 111b8 <close@plt+0x8cc>
   11250:	b	110dc <close@plt+0x7f0>
   11254:	bl	10880 <__errno_location@plt>
   11258:	mov	r5, r0
   1125c:	ldr	r0, [r0]
   11260:	bl	10820 <strerror@plt>
   11264:	ldr	r1, [pc, #-176]	; 111bc <close@plt+0x8d0>
   11268:	mov	r2, r0
   1126c:	mov	r0, #1
   11270:	bl	108b0 <__printf_chk@plt>
   11274:	ldr	r3, [r5]
   11278:	cmp	r3, #0
   1127c:	bne	10da0 <close@plt+0x4b4>
   11280:	b	11074 <close@plt+0x788>
   11284:	ldr	r3, [pc, #-184]	; 111d4 <close@plt+0x8e8>
   11288:	mov	r2, #34	; 0x22
   1128c:	mov	r1, #1
   11290:	ldr	r3, [r3]
   11294:	ldr	r0, [pc, #-220]	; 111c0 <close@plt+0x8d4>
   11298:	bl	107e4 <fwrite@plt>
   1129c:	bl	11638 <close@plt+0xd4c>
   112a0:	ldr	r3, [pc, #-212]	; 111d4 <close@plt+0x8e8>
   112a4:	mov	r2, #34	; 0x22
   112a8:	mov	r1, #1
   112ac:	ldr	r3, [r3]
   112b0:	ldr	r0, [pc, #-244]	; 111c4 <close@plt+0x8d8>
   112b4:	bl	107e4 <fwrite@plt>
   112b8:	bl	11638 <close@plt+0xd4c>
   112bc:	bl	107d8 <__stack_chk_fail@plt>
   112c0:	ldr	r3, [pc, #-244]	; 111d4 <close@plt+0x8e8>
   112c4:	ldr	r4, [r3]
   112c8:	bl	10880 <__errno_location@plt>
   112cc:	ldr	r0, [r0]
   112d0:	bl	10820 <strerror@plt>
   112d4:	ldr	r3, [sp, #12]
   112d8:	ldr	r2, [pc, #-280]	; 111c8 <close@plt+0x8dc>
   112dc:	mov	r1, #1
   112e0:	str	r0, [sp]
   112e4:	mov	r0, r4
   112e8:	bl	108bc <__fprintf_chk@plt>
   112ec:	mov	r0, #1
   112f0:	bl	1085c <exit@plt>
   112f4:	ldr	r1, [pc, #-304]	; 111cc <close@plt+0x8e0>
   112f8:	mov	r0, #1
   112fc:	bl	108b0 <__printf_chk@plt>
   11300:	ldr	r5, [pc, #-312]	; 111d0 <close@plt+0x8e4>
   11304:	b	11320 <close@plt+0xa34>
   11308:	add	ip, r3, #1
   1130c:	ldr	r2, [r9, r3, lsl #2]
   11310:	mov	r1, r5
   11314:	mov	r0, #1
   11318:	str	ip, [r4]
   1131c:	bl	108b0 <__printf_chk@plt>
   11320:	ldr	r3, [r4]
   11324:	cmp	r3, r8
   11328:	blt	11308 <close@plt+0xa1c>
   1132c:	mov	r0, #10
   11330:	bl	108a4 <putchar@plt>
   11334:	bl	11638 <close@plt+0xd4c>
   11338:	ldr	r3, [pc, #-364]	; 111d4 <close@plt+0x8e8>
   1133c:	mov	r1, r6
   11340:	mov	r2, #35	; 0x23
   11344:	ldr	r3, [r3]
   11348:	ldr	r0, [pc, #-376]	; 111d8 <close@plt+0x8ec>
   1134c:	bl	107e4 <fwrite@plt>
   11350:	b	110f0 <close@plt+0x804>
   11354:	mov	fp, #0
   11358:	mov	lr, #0
   1135c:	pop	{r1}		; (ldr r1, [sp], #4)
   11360:	mov	r2, sp
   11364:	push	{r2}		; (str r2, [sp, #-4]!)
   11368:	push	{r0}		; (str r0, [sp, #-4]!)
   1136c:	ldr	ip, [pc, #16]	; 11384 <close@plt+0xa98>
   11370:	push	{ip}		; (str ip, [sp, #-4]!)
   11374:	ldr	r0, [pc, #12]	; 11388 <close@plt+0xa9c>
   11378:	ldr	r3, [pc, #12]	; 1138c <close@plt+0xaa0>
   1137c:	bl	10814 <__libc_start_main@plt>
   11380:	bl	108e0 <abort@plt>
   11384:			; <UNDEFINED> instruction: 0x000118b0
   11388:	strdeq	r0, [r1], -r8
   1138c:	andeq	r1, r1, r0, asr r8
   11390:	ldr	r3, [pc, #20]	; 113ac <close@plt+0xac0>
   11394:	ldr	r2, [pc, #20]	; 113b0 <close@plt+0xac4>
   11398:	add	r3, pc, r3
   1139c:	ldr	r2, [r3, r2]
   113a0:	cmp	r2, #0
   113a4:	bxeq	lr
   113a8:	b	1082c <__gmon_start__@plt>
   113ac:	andeq	r1, r1, r4, ror #23
   113b0:	andeq	r0, r0, r4, ror r0
   113b4:	ldr	r0, [pc, #24]	; 113d4 <close@plt+0xae8>
   113b8:	ldr	r3, [pc, #24]	; 113d8 <close@plt+0xaec>
   113bc:	cmp	r3, r0
   113c0:	bxeq	lr
   113c4:	ldr	r3, [pc, #16]	; 113dc <close@plt+0xaf0>
   113c8:	cmp	r3, #0
   113cc:	bxeq	lr
   113d0:	bx	r3
   113d4:	strheq	r3, [r2], -r8
   113d8:	strheq	r3, [r2], -r8
   113dc:	andeq	r0, r0, r0
   113e0:	ldr	r0, [pc, #36]	; 1140c <close@plt+0xb20>
   113e4:	ldr	r1, [pc, #36]	; 11410 <close@plt+0xb24>
   113e8:	sub	r1, r1, r0
   113ec:	asr	r1, r1, #2
   113f0:	add	r1, r1, r1, lsr #31
   113f4:	asrs	r1, r1, #1
   113f8:	bxeq	lr
   113fc:	ldr	r3, [pc, #16]	; 11414 <close@plt+0xb28>
   11400:	cmp	r3, #0
   11404:	bxeq	lr
   11408:	bx	r3
   1140c:	strheq	r3, [r2], -r8
   11410:	strheq	r3, [r2], -r8
   11414:	andeq	r0, r0, r0
   11418:	push	{r4, lr}
   1141c:	ldr	r4, [pc, #24]	; 1143c <close@plt+0xb50>
   11420:	ldrb	r3, [r4]
   11424:	cmp	r3, #0
   11428:	popne	{r4, pc}
   1142c:	bl	113b4 <close@plt+0xac8>
   11430:	mov	r3, #1
   11434:	strb	r3, [r4]
   11438:	pop	{r4, pc}
   1143c:	andeq	r3, r2, ip, asr #1
   11440:	b	113e0 <close@plt+0xaf4>
   11444:	tst	r0, #1
   11448:	push	{r4, lr}
   1144c:	mov	r4, r0
   11450:	beq	11470 <close@plt+0xb84>
   11454:	ldr	r3, [pc, #420]	; 11600 <close@plt+0xd14>
   11458:	bics	r4, r0, #1
   1145c:	ldr	r2, [pc, #416]	; 11604 <close@plt+0xd18>
   11460:	ldr	r1, [pc, #416]	; 11608 <close@plt+0xd1c>
   11464:	moveq	r2, r3
   11468:	mov	r0, #1
   1146c:	bl	108b0 <__printf_chk@plt>
   11470:	tst	r4, #2
   11474:	beq	11494 <close@plt+0xba8>
   11478:	ldr	r3, [pc, #384]	; 11600 <close@plt+0xd14>
   1147c:	bics	r4, r4, #2
   11480:	ldr	r2, [pc, #380]	; 11604 <close@plt+0xd18>
   11484:	ldr	r1, [pc, #384]	; 1160c <close@plt+0xd20>
   11488:	moveq	r2, r3
   1148c:	mov	r0, #1
   11490:	bl	108b0 <__printf_chk@plt>
   11494:	tst	r4, #4
   11498:	beq	114b8 <close@plt+0xbcc>
   1149c:	ldr	r3, [pc, #348]	; 11600 <close@plt+0xd14>
   114a0:	bics	r4, r4, #4
   114a4:	ldr	r2, [pc, #344]	; 11604 <close@plt+0xd18>
   114a8:	ldr	r1, [pc, #352]	; 11610 <close@plt+0xd24>
   114ac:	moveq	r2, r3
   114b0:	mov	r0, #1
   114b4:	bl	108b0 <__printf_chk@plt>
   114b8:	tst	r4, #32
   114bc:	beq	114dc <close@plt+0xbf0>
   114c0:	ldr	r3, [pc, #312]	; 11600 <close@plt+0xd14>
   114c4:	bics	r4, r4, #32
   114c8:	ldr	r2, [pc, #308]	; 11604 <close@plt+0xd18>
   114cc:	ldr	r1, [pc, #320]	; 11614 <close@plt+0xd28>
   114d0:	moveq	r2, r3
   114d4:	mov	r0, #1
   114d8:	bl	108b0 <__printf_chk@plt>
   114dc:	tst	r4, #8
   114e0:	beq	11500 <close@plt+0xc14>
   114e4:	ldr	r3, [pc, #276]	; 11600 <close@plt+0xd14>
   114e8:	bics	r4, r4, #8
   114ec:	ldr	r2, [pc, #272]	; 11604 <close@plt+0xd18>
   114f0:	ldr	r1, [pc, #288]	; 11618 <close@plt+0xd2c>
   114f4:	moveq	r2, r3
   114f8:	mov	r0, #1
   114fc:	bl	108b0 <__printf_chk@plt>
   11500:	tst	r4, #16
   11504:	beq	11524 <close@plt+0xc38>
   11508:	ldr	r3, [pc, #240]	; 11600 <close@plt+0xd14>
   1150c:	bics	r4, r4, #16
   11510:	ldr	r2, [pc, #236]	; 11604 <close@plt+0xd18>
   11514:	ldr	r1, [pc, #256]	; 1161c <close@plt+0xd30>
   11518:	moveq	r2, r3
   1151c:	mov	r0, #1
   11520:	bl	108b0 <__printf_chk@plt>
   11524:	tst	r4, #512	; 0x200
   11528:	beq	11548 <close@plt+0xc5c>
   1152c:	ldr	r3, [pc, #204]	; 11600 <close@plt+0xd14>
   11530:	bics	r4, r4, #512	; 0x200
   11534:	ldr	r2, [pc, #200]	; 11604 <close@plt+0xd18>
   11538:	ldr	r1, [pc, #224]	; 11620 <close@plt+0xd34>
   1153c:	moveq	r2, r3
   11540:	mov	r0, #1
   11544:	bl	108b0 <__printf_chk@plt>
   11548:	tst	r4, #64	; 0x40
   1154c:	beq	1156c <close@plt+0xc80>
   11550:	ldr	r3, [pc, #168]	; 11600 <close@plt+0xd14>
   11554:	bics	r4, r4, #64	; 0x40
   11558:	ldr	r2, [pc, #164]	; 11604 <close@plt+0xd18>
   1155c:	ldr	r1, [pc, #192]	; 11624 <close@plt+0xd38>
   11560:	moveq	r2, r3
   11564:	mov	r0, #1
   11568:	bl	108b0 <__printf_chk@plt>
   1156c:	tst	r4, #128	; 0x80
   11570:	beq	11590 <close@plt+0xca4>
   11574:	ldr	r3, [pc, #132]	; 11600 <close@plt+0xd14>
   11578:	bics	r4, r4, #128	; 0x80
   1157c:	ldr	r2, [pc, #128]	; 11604 <close@plt+0xd18>
   11580:	ldr	r1, [pc, #160]	; 11628 <close@plt+0xd3c>
   11584:	moveq	r2, r3
   11588:	mov	r0, #1
   1158c:	bl	108b0 <__printf_chk@plt>
   11590:	tst	r4, #256	; 0x100
   11594:	beq	115b4 <close@plt+0xcc8>
   11598:	ldr	r3, [pc, #96]	; 11600 <close@plt+0xd14>
   1159c:	bics	r4, r4, #256	; 0x100
   115a0:	ldr	r2, [pc, #92]	; 11604 <close@plt+0xd18>
   115a4:	ldr	r1, [pc, #128]	; 1162c <close@plt+0xd40>
   115a8:	moveq	r2, r3
   115ac:	mov	r0, #1
   115b0:	bl	108b0 <__printf_chk@plt>
   115b4:	tst	r4, #1024	; 0x400
   115b8:	beq	115d8 <close@plt+0xcec>
   115bc:	ldr	r3, [pc, #60]	; 11600 <close@plt+0xd14>
   115c0:	bics	r4, r4, #1024	; 0x400
   115c4:	ldr	r2, [pc, #56]	; 11604 <close@plt+0xd18>
   115c8:	ldr	r1, [pc, #96]	; 11630 <close@plt+0xd44>
   115cc:	moveq	r2, r3
   115d0:	mov	r0, #1
   115d4:	bl	108b0 <__printf_chk@plt>
   115d8:	cmp	r4, #0
   115dc:	bne	115ec <close@plt+0xd00>
   115e0:	mov	r0, #10
   115e4:	pop	{r4, lr}
   115e8:	b	108a4 <putchar@plt>
   115ec:	mov	r2, r4
   115f0:	ldr	r1, [pc, #60]	; 11634 <close@plt+0xd48>
   115f4:	mov	r0, #1
   115f8:	bl	108b0 <__printf_chk@plt>
   115fc:	b	115e0 <close@plt+0xcf4>
   11600:	muleq	r1, ip, fp
   11604:	andeq	r1, r1, r8, lsl #18
   11608:	andeq	r1, r1, ip, lsl #18
   1160c:	andeq	r1, r1, r0, lsr #18
   11610:	andeq	r1, r1, r4, lsr r9
   11614:	andeq	r1, r1, r8, asr #18
   11618:	andeq	r1, r1, ip, asr r9
   1161c:	andeq	r1, r1, r0, ror r9
   11620:	andeq	r1, r1, r4, lsl #19
   11624:	muleq	r1, r8, r9
   11628:	andeq	r1, r1, ip, lsr #19
   1162c:	andeq	r1, r1, r0, asr #19
   11630:	ldrdeq	r1, [r1], -r4
   11634:	andeq	r1, r1, ip, ror #19
   11638:	push	{r4, lr}
   1163c:	ldr	r0, [pc, #264]	; 1174c <close@plt+0xe60>
   11640:	bl	10808 <puts@plt>
   11644:	ldr	r0, [pc, #260]	; 11750 <close@plt+0xe64>
   11648:	bl	10808 <puts@plt>
   1164c:	ldr	r0, [pc, #256]	; 11754 <close@plt+0xe68>
   11650:	bl	10808 <puts@plt>
   11654:	ldr	r0, [pc, #252]	; 11758 <close@plt+0xe6c>
   11658:	bl	10808 <puts@plt>
   1165c:	ldr	r0, [pc, #248]	; 1175c <close@plt+0xe70>
   11660:	bl	10808 <puts@plt>
   11664:	ldr	r0, [pc, #244]	; 11760 <close@plt+0xe74>
   11668:	bl	10808 <puts@plt>
   1166c:	ldr	r0, [pc, #240]	; 11764 <close@plt+0xe78>
   11670:	bl	10808 <puts@plt>
   11674:	ldr	r0, [pc, #236]	; 11768 <close@plt+0xe7c>
   11678:	bl	10808 <puts@plt>
   1167c:	ldr	r0, [pc, #232]	; 1176c <close@plt+0xe80>
   11680:	bl	10808 <puts@plt>
   11684:	ldr	r0, [pc, #228]	; 11770 <close@plt+0xe84>
   11688:	bl	10808 <puts@plt>
   1168c:	ldr	r0, [pc, #224]	; 11774 <close@plt+0xe88>
   11690:	bl	10808 <puts@plt>
   11694:	ldr	r0, [pc, #220]	; 11778 <close@plt+0xe8c>
   11698:	bl	10808 <puts@plt>
   1169c:	ldr	r0, [pc, #216]	; 1177c <close@plt+0xe90>
   116a0:	bl	10808 <puts@plt>
   116a4:	mov	r0, #10
   116a8:	bl	108a4 <putchar@plt>
   116ac:	ldr	r0, [pc, #204]	; 11780 <close@plt+0xe94>
   116b0:	bl	10808 <puts@plt>
   116b4:	ldr	r0, [pc, #200]	; 11784 <close@plt+0xe98>
   116b8:	bl	10808 <puts@plt>
   116bc:	ldr	r0, [pc, #196]	; 11788 <close@plt+0xe9c>
   116c0:	bl	10808 <puts@plt>
   116c4:	ldr	r0, [pc, #192]	; 1178c <close@plt+0xea0>
   116c8:	bl	10808 <puts@plt>
   116cc:	ldr	r0, [pc, #188]	; 11790 <close@plt+0xea4>
   116d0:	bl	10808 <puts@plt>
   116d4:	ldr	r0, [pc, #184]	; 11794 <close@plt+0xea8>
   116d8:	bl	10808 <puts@plt>
   116dc:	ldr	r0, [pc, #180]	; 11798 <close@plt+0xeac>
   116e0:	bl	10808 <puts@plt>
   116e4:	ldr	r0, [pc, #176]	; 1179c <close@plt+0xeb0>
   116e8:	bl	10808 <puts@plt>
   116ec:	ldr	r0, [pc, #172]	; 117a0 <close@plt+0xeb4>
   116f0:	bl	10808 <puts@plt>
   116f4:	ldr	r0, [pc, #168]	; 117a4 <close@plt+0xeb8>
   116f8:	bl	10808 <puts@plt>
   116fc:	ldr	r0, [pc, #164]	; 117a8 <close@plt+0xebc>
   11700:	bl	10808 <puts@plt>
   11704:	ldr	r0, [pc, #160]	; 117ac <close@plt+0xec0>
   11708:	bl	10808 <puts@plt>
   1170c:	ldr	r0, [pc, #156]	; 117b0 <close@plt+0xec4>
   11710:	bl	10808 <puts@plt>
   11714:	ldr	r0, [pc, #152]	; 117b4 <close@plt+0xec8>
   11718:	bl	10808 <puts@plt>
   1171c:	ldr	r0, [pc, #148]	; 117b8 <close@plt+0xecc>
   11720:	bl	10808 <puts@plt>
   11724:	ldr	r0, [pc, #144]	; 117bc <close@plt+0xed0>
   11728:	bl	10808 <puts@plt>
   1172c:	ldr	r0, [pc, #140]	; 117c0 <close@plt+0xed4>
   11730:	bl	10808 <puts@plt>
   11734:	ldr	r0, [pc, #136]	; 117c4 <close@plt+0xed8>
   11738:	bl	10808 <puts@plt>
   1173c:	ldr	r0, [pc, #132]	; 117c8 <close@plt+0xedc>
   11740:	bl	10808 <puts@plt>
   11744:	mov	r0, #0
   11748:	bl	1085c <exit@plt>
   1174c:	strdeq	r1, [r1], -r4
   11750:	strdeq	r1, [r1], -ip
   11754:	andeq	r1, r1, ip, lsr sl
   11758:	andeq	r1, r1, ip, ror #20
   1175c:	andeq	r1, r1, r8, lsl #21
   11760:	andeq	r1, r1, r0, ror #21
   11764:	andeq	r1, r1, r4, lsl fp
   11768:	andeq	r1, r1, r4, lsr fp
   1176c:	andeq	r1, r1, r4, ror #22
   11770:	andeq	r1, r1, r0, lsr #23
   11774:	ldrdeq	r1, [r1], -ip
   11778:	andeq	r1, r1, r0, lsl #24
   1177c:	andeq	r1, r1, ip, lsl ip
   11780:	andeq	r1, r1, r8, ror ip
   11784:	andeq	r1, r1, r8, lsl #25
   11788:	andeq	r1, r1, r4, lsr #25
   1178c:	ldrdeq	r1, [r1], -r8
   11790:	andeq	r1, r1, r4, lsl #26
   11794:	andeq	r1, r1, ip, lsr #26
   11798:	andeq	r1, r1, r8, asr sp
   1179c:	andeq	r1, r1, r0, lsl #27
   117a0:	andeq	r1, r1, r8, lsr #27
   117a4:	ldrdeq	r1, [r1], -r0
   117a8:	strdeq	r1, [r1], -r8
   117ac:	andeq	r1, r1, r4, lsr #28
   117b0:	andeq	r1, r1, ip, asr #28
   117b4:	andeq	r1, r1, r4, ror lr
   117b8:	andeq	r1, r1, r4, lsr #29
   117bc:	ldrdeq	r1, [r1], -ip
   117c0:	strdeq	r1, [r1], -r0
   117c4:	andeq	r1, r1, ip, lsr #30
   117c8:	andeq	r1, r1, r4, asr pc
   117cc:	push	{r4, r5, r6, lr}
   117d0:	mov	r4, r0
   117d4:	mov	r5, r1
   117d8:	mov	r6, r2
   117dc:	ldr	r1, [pc, #92]	; 11840 <close@plt+0xf54>
   117e0:	mov	r2, r3
   117e4:	mov	r0, #1
   117e8:	bl	108b0 <__printf_chk@plt>
   117ec:	mov	r0, r4
   117f0:	mov	r2, r6
   117f4:	mov	r1, r5
   117f8:	bl	107f0 <ioctl@plt>
   117fc:	subs	r4, r0, #0
   11800:	blt	11814 <close@plt+0xf28>
   11804:	ldr	r0, [pc, #56]	; 11844 <close@plt+0xf58>
   11808:	bl	10808 <puts@plt>
   1180c:	mov	r0, r4
   11810:	pop	{r4, r5, r6, pc}
   11814:	ldr	r3, [pc, #44]	; 11848 <close@plt+0xf5c>
   11818:	mvn	r2, #0
   1181c:	str	r2, [r3]
   11820:	bl	10880 <__errno_location@plt>
   11824:	ldr	r0, [r0]
   11828:	bl	10820 <strerror@plt>
   1182c:	ldr	r1, [pc, #24]	; 1184c <close@plt+0xf60>
   11830:	mov	r2, r0
   11834:	mov	r0, #1
   11838:	bl	108b0 <__printf_chk@plt>
   1183c:	b	1180c <close@plt+0xf20>
   11840:	andeq	r1, r1, r4, lsr #31
   11844:			; <UNDEFINED> instruction: 0x00011fbc
   11848:	ldrdeq	r3, [r2], -r0
   1184c:			; <UNDEFINED> instruction: 0x00011fb0
   11850:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11854:	mov	r7, r0
   11858:	ldr	r6, [pc, #72]	; 118a8 <close@plt+0xfbc>
   1185c:	ldr	r5, [pc, #72]	; 118ac <close@plt+0xfc0>
   11860:	add	r6, pc, r6
   11864:	add	r5, pc, r5
   11868:	sub	r6, r6, r5
   1186c:	mov	r8, r1
   11870:	mov	r9, r2
   11874:	bl	107a0 <strtol@plt-0x20>
   11878:	asrs	r6, r6, #2
   1187c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11880:	mov	r4, #0
   11884:	add	r4, r4, #1
   11888:	ldr	r3, [r5], #4
   1188c:	mov	r2, r9
   11890:	mov	r1, r8
   11894:	mov	r0, r7
   11898:	blx	r3
   1189c:	cmp	r6, r4
   118a0:	bne	11884 <close@plt+0xf98>
   118a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118a8:	andeq	r1, r1, ip, lsl #12
   118ac:	andeq	r1, r1, r4, lsl #12
   118b0:	bx	lr

Disassembly of section .fini:

000118b4 <.fini>:
   118b4:	push	{r3, lr}
   118b8:	pop	{r3, pc}
