
raspbian-preinstalled/fallocate:     file format elf32-littlearm


Disassembly of section .init:

00010d08 <.init>:
   10d08:	push	{r3, lr}
   10d0c:	bl	11d80 <strspn@plt+0xdc4>
   10d10:	pop	{r3, pc}

Disassembly of section .plt:

00010d14 <raise@plt-0x14>:
   10d14:	push	{lr}		; (str lr, [sp, #-4]!)
   10d18:	ldr	lr, [pc, #4]	; 10d24 <raise@plt-0x4>
   10d1c:	add	lr, pc, lr
   10d20:	ldr	pc, [lr, #8]!
   10d24:	andeq	r4, r1, r8, ror #3

00010d28 <raise@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #488]!	; 0x1e8

00010d34 <fsync@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #480]!	; 0x1e0

00010d40 <strcmp@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #472]!	; 0x1d8

00010d4c <strtol@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #464]!	; 0x1d0

00010d58 <strcspn@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #456]!	; 0x1c8

00010d64 <posix_fadvise64@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #448]!	; 0x1c0

00010d70 <free@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #440]!	; 0x1b8

00010d7c <ferror@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #432]!	; 0x1b0

00010d88 <strndup@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #424]!	; 0x1a8

00010d94 <_exit@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #416]!	; 0x1a0

00010da0 <memcpy@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #408]!	; 0x198

00010dac <__strtoull_internal@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #400]!	; 0x190

00010db8 <dcgettext@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #392]!	; 0x188

00010dc4 <strdup@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #384]!	; 0x180

00010dd0 <__stack_chk_fail@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #376]!	; 0x178

00010ddc <textdomain@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #368]!	; 0x170

00010de8 <err@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #360]!	; 0x168

00010df4 <__fxstat64@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #352]!	; 0x160

00010e00 <lseek64@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #344]!	; 0x158

00010e0c <pread64@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #336]!	; 0x150

00010e18 <__fpending@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #328]!	; 0x148

00010e24 <open64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #320]!	; 0x140

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #312]!	; 0x138

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #304]!	; 0x130

00010e48 <__gmon_start__@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #296]!	; 0x128

00010e54 <getopt_long@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #288]!	; 0x120

00010e60 <__ctype_b_loc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #280]!	; 0x118

00010e6c <exit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #272]!	; 0x110

00010e78 <strtoul@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #264]!	; 0x108

00010e84 <strlen@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #20, 20	; 0x14000
   10e8c:	ldr	pc, [ip, #256]!	; 0x100

00010e90 <strchr@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #20, 20	; 0x14000
   10e98:	ldr	pc, [ip, #248]!	; 0xf8

00010e9c <warnx@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #20, 20	; 0x14000
   10ea4:	ldr	pc, [ip, #240]!	; 0xf0

00010ea8 <getpagesize@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #20, 20	; 0x14000
   10eb0:	ldr	pc, [ip, #232]!	; 0xe8

00010eb4 <__errno_location@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #20, 20	; 0x14000
   10ebc:	ldr	pc, [ip, #224]!	; 0xe0

00010ec0 <__cxa_atexit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #20, 20	; 0x14000
   10ec8:	ldr	pc, [ip, #216]!	; 0xd8

00010ecc <__vasprintf_chk@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #20, 20	; 0x14000
   10ed4:	ldr	pc, [ip, #208]!	; 0xd0

00010ed8 <fgetc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #20, 20	; 0x14000
   10ee0:	ldr	pc, [ip, #200]!	; 0xc8

00010ee4 <__printf_chk@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #20, 20	; 0x14000
   10eec:	ldr	pc, [ip, #192]!	; 0xc0

00010ef0 <strtod@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #20, 20	; 0x14000
   10ef8:	ldr	pc, [ip, #184]!	; 0xb8

00010efc <__fprintf_chk@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #20, 20	; 0x14000
   10f04:	ldr	pc, [ip, #176]!	; 0xb0

00010f08 <fclose@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #20, 20	; 0x14000
   10f10:	ldr	pc, [ip, #168]!	; 0xa8

00010f14 <posix_fallocate64@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #20, 20	; 0x14000
   10f1c:	ldr	pc, [ip, #160]!	; 0xa0

00010f20 <setlocale@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #20, 20	; 0x14000
   10f28:	ldr	pc, [ip, #152]!	; 0x98

00010f2c <fallocate64@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #20, 20	; 0x14000
   10f34:	ldr	pc, [ip, #144]!	; 0x90

00010f38 <errx@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #20, 20	; 0x14000
   10f40:	ldr	pc, [ip, #136]!	; 0x88

00010f44 <warn@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #20, 20	; 0x14000
   10f4c:	ldr	pc, [ip, #128]!	; 0x80

00010f50 <fputc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #20, 20	; 0x14000
   10f58:	ldr	pc, [ip, #120]!	; 0x78

00010f5c <localeconv@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #20, 20	; 0x14000
   10f64:	ldr	pc, [ip, #112]!	; 0x70

00010f68 <__strtoll_internal@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #20, 20	; 0x14000
   10f70:	ldr	pc, [ip, #104]!	; 0x68

00010f74 <bindtextdomain@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #20, 20	; 0x14000
   10f7c:	ldr	pc, [ip, #96]!	; 0x60

00010f80 <fputs@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #20, 20	; 0x14000
   10f88:	ldr	pc, [ip, #88]!	; 0x58

00010f8c <strncmp@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #20, 20	; 0x14000
   10f94:	ldr	pc, [ip, #80]!	; 0x50

00010f98 <abort@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #20, 20	; 0x14000
   10fa0:	ldr	pc, [ip, #72]!	; 0x48

00010fa4 <close@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #20, 20	; 0x14000
   10fac:	ldr	pc, [ip, #64]!	; 0x40

00010fb0 <__snprintf_chk@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #20, 20	; 0x14000
   10fb8:	ldr	pc, [ip, #56]!	; 0x38

00010fbc <strspn@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #20, 20	; 0x14000
   10fc4:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

00010fc8 <.text>:
   10fc8:	ldr	r3, [pc, #3216]	; 11c60 <strspn@plt+0xca4>
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd0:	sub	sp, sp, #236	; 0xec
   10fd4:	ldr	r3, [r3]
   10fd8:	mov	fp, #0
   10fdc:	mov	r5, r0
   10fe0:	mov	r6, r1
   10fe4:	mov	r0, #6
   10fe8:	ldr	r1, [pc, #3188]	; 11c64 <strspn@plt+0xca8>
   10fec:	str	r3, [sp, #228]	; 0xe4
   10ff0:	str	fp, [sp, #216]	; 0xd8
   10ff4:	str	fp, [sp, #212]	; 0xd4
   10ff8:	str	fp, [sp, #220]	; 0xdc
   10ffc:	str	fp, [sp, #224]	; 0xe0
   11000:	bl	10f20 <setlocale@plt>
   11004:	ldr	r1, [pc, #3164]	; 11c68 <strspn@plt+0xcac>
   11008:	ldr	r0, [pc, #3164]	; 11c6c <strspn@plt+0xcb0>
   1100c:	bl	10f74 <bindtextdomain@plt>
   11010:	ldr	r0, [pc, #3156]	; 11c6c <strspn@plt+0xcb0>
   11014:	str	fp, [sp, #48]	; 0x30
   11018:	mov	sl, fp
   1101c:	bl	10ddc <textdomain@plt>
   11020:	ldr	r7, [pc, #3144]	; 11c70 <strspn@plt+0xcb4>
   11024:	str	fp, [sp, #40]	; 0x28
   11028:	str	fp, [sp, #16]
   1102c:	ldr	r0, [pc, #3136]	; 11c74 <strspn@plt+0xcb8>
   11030:	ldr	fp, [pc, #3136]	; 11c78 <strspn@plt+0xcbc>
   11034:	bl	14374 <strspn@plt+0x33b8>
   11038:	mov	r8, #0
   1103c:	mvn	r2, #1
   11040:	mvn	r3, #0
   11044:	mov	r9, #0
   11048:	strd	r2, [sp, #80]	; 0x50
   1104c:	str	sl, [sp]
   11050:	mov	r3, fp
   11054:	mov	r2, r7
   11058:	mov	r1, r6
   1105c:	mov	r0, r5
   11060:	bl	10e54 <getopt_long@plt>
   11064:	cmn	r0, #1
   11068:	beq	112a8 <strspn@plt+0x2ec>
   1106c:	cmp	r0, #98	; 0x62
   11070:	ble	110f4 <strspn@plt+0x138>
   11074:	ldr	r4, [pc, #3072]	; 11c7c <strspn@plt+0xcc0>
   11078:	add	r2, sp, #212	; 0xd4
   1107c:	mov	r3, #99	; 0x63
   11080:	cmp	r0, r3
   11084:	blt	110d0 <strspn@plt+0x114>
   11088:	beq	110b8 <strspn@plt+0xfc>
   1108c:	mov	r1, r4
   11090:	ldr	r3, [r1, #4]!
   11094:	cmp	r0, r3
   11098:	movlt	ip, #0
   1109c:	movge	ip, #1
   110a0:	cmp	r3, #0
   110a4:	moveq	ip, #0
   110a8:	cmp	ip, #0
   110ac:	beq	110d0 <strspn@plt+0x114>
   110b0:	cmp	r0, r3
   110b4:	bne	11090 <strspn@plt+0xd4>
   110b8:	ldr	r3, [r2]
   110bc:	cmp	r3, #0
   110c0:	streq	r0, [r2]
   110c4:	beq	110d0 <strspn@plt+0x114>
   110c8:	cmp	r0, r3
   110cc:	bne	11af8 <strspn@plt+0xb3c>
   110d0:	ldr	r3, [r4, #64]!	; 0x40
   110d4:	add	r2, r2, #4
   110d8:	cmp	r0, r3
   110dc:	movlt	r1, #0
   110e0:	movge	r1, #1
   110e4:	cmp	r3, #0
   110e8:	moveq	r1, #0
   110ec:	cmp	r1, #0
   110f0:	bne	11080 <strspn@plt+0xc4>
   110f4:	sub	r0, r0, #86	; 0x56
   110f8:	cmp	r0, #36	; 0x24
   110fc:	ldrls	pc, [pc, r0, lsl #2]
   11100:	b	11ab0 <strspn@plt+0xaf4>
   11104:	andeq	r1, r1, r4, ror #3
   11108:			; <UNDEFINED> instruction: 0x00011ab0
   1110c:			; <UNDEFINED> instruction: 0x00011ab0
   11110:			; <UNDEFINED> instruction: 0x00011ab0
   11114:			; <UNDEFINED> instruction: 0x00011ab0
   11118:			; <UNDEFINED> instruction: 0x00011ab0
   1111c:			; <UNDEFINED> instruction: 0x00011ab0
   11120:			; <UNDEFINED> instruction: 0x00011ab0
   11124:			; <UNDEFINED> instruction: 0x00011ab0
   11128:			; <UNDEFINED> instruction: 0x00011ab0
   1112c:			; <UNDEFINED> instruction: 0x00011ab0
   11130:			; <UNDEFINED> instruction: 0x00011ab0
   11134:			; <UNDEFINED> instruction: 0x00011ab0
   11138:			; <UNDEFINED> instruction: 0x000111b0
   1113c:	andeq	r1, r1, r4, lsr #3
   11140:			; <UNDEFINED> instruction: 0x00011ab0
   11144:			; <UNDEFINED> instruction: 0x00011ab0
   11148:			; <UNDEFINED> instruction: 0x00011ab0
   1114c:	andeq	r1, r1, r4, asr #17
   11150:	muleq	r1, r8, r2
   11154:			; <UNDEFINED> instruction: 0x00011ab0
   11158:			; <UNDEFINED> instruction: 0x00011ab0
   1115c:	andeq	r1, r1, r0, ror r2
   11160:			; <UNDEFINED> instruction: 0x00011ab0
   11164:	andeq	r1, r1, r0, ror #4
   11168:	andeq	r1, r1, ip, lsr r2
   1116c:	ldrdeq	r1, [r1], -r4
   11170:			; <UNDEFINED> instruction: 0x00011ab0
   11174:			; <UNDEFINED> instruction: 0x00011ab0
   11178:			; <UNDEFINED> instruction: 0x00011ab0
   1117c:			; <UNDEFINED> instruction: 0x00011ab0
   11180:			; <UNDEFINED> instruction: 0x00011ab0
   11184:	andeq	r1, r1, r0, asr #3
   11188:			; <UNDEFINED> instruction: 0x00011ab0
   1118c:	muleq	r1, r8, r1
   11190:			; <UNDEFINED> instruction: 0x00011ab0
   11194:	andeq	r1, r1, ip, lsr #4
   11198:	mov	r3, #1
   1119c:	str	r3, [sp, #48]	; 0x30
   111a0:	b	1104c <strspn@plt+0x90>
   111a4:	mov	r3, #1
   111a8:	str	r3, [sp, #40]	; 0x28
   111ac:	b	1104c <strspn@plt+0x90>
   111b0:	ldr	r3, [sp, #16]
   111b4:	orr	r3, r3, #8
   111b8:	str	r3, [sp, #16]
   111bc:	b	1104c <strspn@plt+0x90>
   111c0:	ldr	r2, [pc, #2744]	; 11c80 <strspn@plt+0xcc4>
   111c4:	ldr	r3, [r2]
   111c8:	add	r3, r3, #1
   111cc:	str	r3, [r2]
   111d0:	b	1104c <strspn@plt+0x90>
   111d4:	ldr	r3, [sp, #16]
   111d8:	orr	r3, r3, #3
   111dc:	str	r3, [sp, #16]
   111e0:	b	1104c <strspn@plt+0x90>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #2708]	; 11c84 <strspn@plt+0xcc8>
   111ec:	mov	r0, #0
   111f0:	bl	10db8 <dcgettext@plt>
   111f4:	ldr	r2, [pc, #2700]	; 11c88 <strspn@plt+0xccc>
   111f8:	ldr	r3, [pc, #2700]	; 11c8c <strspn@plt+0xcd0>
   111fc:	ldr	r2, [r2]
   11200:	mov	r1, r0
   11204:	mov	r0, #1
   11208:	bl	10ee4 <__printf_chk@plt>
   1120c:	ldr	r3, [pc, #2636]	; 11c60 <strspn@plt+0xca4>
   11210:	ldr	r2, [sp, #228]	; 0xe4
   11214:	mov	r0, #0
   11218:	ldr	r3, [r3]
   1121c:	cmp	r2, r3
   11220:	bne	11c5c <strspn@plt+0xca0>
   11224:	add	sp, sp, #236	; 0xec
   11228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1122c:	ldr	r3, [sp, #16]
   11230:	orr	r3, r3, #16
   11234:	str	r3, [sp, #16]
   11238:	b	1104c <strspn@plt+0x90>
   1123c:	ldr	r3, [pc, #2636]	; 11c90 <strspn@plt+0xcd4>
   11240:	add	r1, sp, #104	; 0x68
   11244:	ldr	r0, [r3]
   11248:	bl	12944 <strspn@plt+0x1988>
   1124c:	cmp	r0, #0
   11250:	mvnne	r8, #0
   11254:	ldrdeq	r8, [sp, #104]	; 0x68
   11258:	mvnne	r9, #0
   1125c:	b	1104c <strspn@plt+0x90>
   11260:	ldr	r3, [sp, #16]
   11264:	orr	r3, r3, #1
   11268:	str	r3, [sp, #16]
   1126c:	b	1104c <strspn@plt+0x90>
   11270:	ldr	r3, [pc, #2584]	; 11c90 <strspn@plt+0xcd4>
   11274:	add	r1, sp, #104	; 0x68
   11278:	ldr	r0, [r3]
   1127c:	bl	12944 <strspn@plt+0x1988>
   11280:	cmp	r0, #0
   11284:	mvnne	r2, #0
   11288:	ldrdeq	r2, [sp, #104]	; 0x68
   1128c:	mvnne	r3, #0
   11290:	strd	r2, [sp, #80]	; 0x50
   11294:	b	1104c <strspn@plt+0x90>
   11298:	ldr	r3, [sp, #16]
   1129c:	orr	r3, r3, #32
   112a0:	str	r3, [sp, #16]
   112a4:	b	1104c <strspn@plt+0x90>
   112a8:	ldr	r2, [pc, #2532]	; 11c94 <strspn@plt+0xcd8>
   112ac:	ldr	r3, [r2]
   112b0:	cmp	r3, r5
   112b4:	moveq	r2, #5
   112b8:	ldreq	r1, [pc, #2520]	; 11c98 <strspn@plt+0xcdc>
   112bc:	beq	11c14 <strspn@plt+0xc58>
   112c0:	ldr	r0, [r6, r3, lsl #2]
   112c4:	add	r3, r3, #1
   112c8:	cmp	r3, r5
   112cc:	str	r3, [r2]
   112d0:	ldr	r3, [pc, #2472]	; 11c80 <strspn@plt+0xcc4>
   112d4:	str	r0, [r3, #4]
   112d8:	bne	11c50 <strspn@plt+0xc94>
   112dc:	ldr	r3, [sp, #40]	; 0x28
   112e0:	mvn	r2, #1
   112e4:	cmp	r3, #0
   112e8:	ldrd	r4, [sp, #80]	; 0x50
   112ec:	mvn	r3, #0
   112f0:	bne	113ac <strspn@plt+0x3f0>
   112f4:	cmp	r5, r3
   112f8:	cmpeq	r4, r2
   112fc:	beq	11c34 <strspn@plt+0xc78>
   11300:	ldrd	r2, [sp, #80]	; 0x50
   11304:	cmp	r2, #1
   11308:	sbcs	r3, r3, #0
   1130c:	blt	11c28 <strspn@plt+0xc6c>
   11310:	cmp	r8, #0
   11314:	sbcs	r3, r9, #0
   11318:	blt	11c0c <strspn@plt+0xc50>
   1131c:	ldr	r3, [sp, #16]
   11320:	ldr	r2, [pc, #2420]	; 11c9c <strspn@plt+0xce0>
   11324:	cmp	r3, #0
   11328:	moveq	r1, #66	; 0x42
   1132c:	movne	r1, #2
   11330:	bl	10e24 <open64@plt>
   11334:	subs	r3, r0, #0
   11338:	str	r3, [sp, #44]	; 0x2c
   1133c:	blt	11c00 <strspn@plt+0xc44>
   11340:	ldr	r3, [sp, #48]	; 0x30
   11344:	cmp	r3, #0
   11348:	ldrd	r2, [sp, #80]	; 0x50
   1134c:	strd	r2, [sp]
   11350:	mov	r2, r8
   11354:	mov	r3, r9
   11358:	beq	11828 <strspn@plt+0x86c>
   1135c:	bl	10f14 <posix_fallocate64@plt>
   11360:	cmp	r0, #0
   11364:	blt	11be4 <strspn@plt+0xc28>
   11368:	ldr	r5, [sp, #44]	; 0x2c
   1136c:	mov	r0, r5
   11370:	bl	10d34 <fsync@plt>
   11374:	mov	r4, r0
   11378:	mov	r0, r5
   1137c:	bl	10fa4 <close@plt>
   11380:	orrs	r3, r4, r0
   11384:	beq	1120c <strspn@plt+0x250>
   11388:	ldr	r1, [pc, #2320]	; 11ca0 <strspn@plt+0xce4>
   1138c:	mov	r2, #5
   11390:	mov	r0, #0
   11394:	bl	10db8 <dcgettext@plt>
   11398:	ldr	r3, [pc, #2272]	; 11c80 <strspn@plt+0xcc4>
   1139c:	ldr	r2, [r3, #4]
   113a0:	mov	r1, r0
   113a4:	mov	r0, #1
   113a8:	bl	10de8 <err@plt>
   113ac:	cmp	r5, r3
   113b0:	cmpeq	r4, r2
   113b4:	beq	11ae8 <strspn@plt+0xb2c>
   113b8:	cmp	r4, #0
   113bc:	sbcs	r3, r5, #0
   113c0:	blt	11c28 <strspn@plt+0xc6c>
   113c4:	cmp	r8, #0
   113c8:	sbcs	r3, r9, #0
   113cc:	blt	11c0c <strspn@plt+0xc50>
   113d0:	ldr	r2, [pc, #2244]	; 11c9c <strspn@plt+0xce0>
   113d4:	mov	r1, #2
   113d8:	bl	10e24 <open64@plt>
   113dc:	subs	r3, r0, #0
   113e0:	str	r3, [sp, #44]	; 0x2c
   113e4:	blt	11c00 <strspn@plt+0xc44>
   113e8:	ldrd	r2, [sp, #80]	; 0x50
   113ec:	orrs	r1, r2, r3
   113f0:	bne	118ac <strspn@plt+0x8f0>
   113f4:	bl	10ea8 <getpagesize@plt>
   113f8:	add	r2, sp, #104	; 0x68
   113fc:	ldr	r1, [sp, #44]	; 0x2c
   11400:	lsl	r3, r0, #8
   11404:	mov	r0, #3
   11408:	str	r3, [sp, #52]	; 0x34
   1140c:	bl	10df4 <__fxstat64@plt>
   11410:	subs	r4, r0, #0
   11414:	movne	r2, #5
   11418:	ldrne	r1, [pc, #2180]	; 11ca4 <strspn@plt+0xce8>
   1141c:	bne	11390 <strspn@plt+0x3d4>
   11420:	ldr	r1, [sp, #160]	; 0xa0
   11424:	mov	r2, r8
   11428:	mov	r3, r9
   1142c:	str	r4, [sp]
   11430:	ldr	r0, [sp, #44]	; 0x2c
   11434:	str	r1, [sp, #60]	; 0x3c
   11438:	bl	10e00 <lseek64@plt>
   1143c:	cmp	r0, #0
   11440:	sbcs	r3, r1, #0
   11444:	movlt	r0, r4
   11448:	movlt	r2, #5
   1144c:	ldrlt	r1, [pc, #2132]	; 11ca8 <strspn@plt+0xcec>
   11450:	blt	11394 <strspn@plt+0x3d8>
   11454:	ldr	r3, [sp, #60]	; 0x3c
   11458:	add	r4, r3, #4
   1145c:	mov	r0, r4
   11460:	bl	10e30 <malloc@plt>
   11464:	adds	r3, r4, #0
   11468:	movne	r3, #1
   1146c:	cmp	r0, #0
   11470:	movne	r3, #0
   11474:	cmp	r3, #0
   11478:	mov	r7, r0
   1147c:	bne	11bd4 <strspn@plt+0xc18>
   11480:	ldrd	r2, [sp, #80]	; 0x50
   11484:	mov	r1, #0
   11488:	mov	sl, r1
   1148c:	orrs	r3, r2, r3
   11490:	str	r3, [sp, #100]	; 0x64
   11494:	ldr	r2, [sp, #52]	; 0x34
   11498:	moveq	r3, #1
   1149c:	movne	r3, r1
   114a0:	str	r3, [sp, #96]	; 0x60
   114a4:	mov	fp, r1
   114a8:	mov	r3, #0
   114ac:	mov	r6, r8
   114b0:	str	r1, [sp, #88]	; 0x58
   114b4:	str	r1, [sp, #92]	; 0x5c
   114b8:	str	r1, [sp, #72]	; 0x48
   114bc:	str	r1, [sp, #76]	; 0x4c
   114c0:	str	r9, [sp, #40]	; 0x28
   114c4:	strd	r2, [sp, #64]	; 0x40
   114c8:	ldrd	r2, [sp, #80]	; 0x50
   114cc:	cmp	r8, r2
   114d0:	sbcs	r3, r9, r3
   114d4:	ldr	r3, [sp, #96]	; 0x60
   114d8:	orrlt	r3, r3, #1
   114dc:	cmp	r3, #0
   114e0:	beq	11834 <strspn@plt+0x878>
   114e4:	mov	r1, #3
   114e8:	mov	r2, r8
   114ec:	mov	r3, r9
   114f0:	str	r1, [sp]
   114f4:	ldr	r0, [sp, #44]	; 0x2c
   114f8:	bl	10e00 <lseek64@plt>
   114fc:	mvn	r3, #0
   11500:	mvn	r2, #0
   11504:	cmp	r1, r3
   11508:	cmpeq	r0, r2
   1150c:	mov	r8, r0
   11510:	mov	r9, r1
   11514:	beq	11794 <strspn@plt+0x7d8>
   11518:	ldr	r3, [sp, #100]	; 0x64
   1151c:	adds	r4, r3, #0
   11520:	ldrd	r2, [sp, #80]	; 0x50
   11524:	movne	r4, #1
   11528:	cmp	r0, r2
   1152c:	sbcs	r3, r1, r3
   11530:	movlt	r3, #0
   11534:	andge	r3, r4, #1
   11538:	cmp	r3, #0
   1153c:	bne	11834 <strspn@plt+0x878>
   11540:	mov	r3, #4
   11544:	mov	r2, r0
   11548:	str	r3, [sp]
   1154c:	ldr	r0, [sp, #44]	; 0x2c
   11550:	mov	r3, r1
   11554:	bl	10e00 <lseek64@plt>
   11558:	ldrd	r2, [sp, #80]	; 0x50
   1155c:	cmp	r2, r0
   11560:	strd	r0, [sp, #16]
   11564:	sbcs	r1, r3, r1
   11568:	movge	r4, #0
   1156c:	andlt	r4, r4, #1
   11570:	cmp	r4, #0
   11574:	strdne	r2, [sp, #16]
   11578:	ldrd	r4, [sp, #16]
   1157c:	mov	r3, #2
   11580:	str	r3, [sp, #8]
   11584:	mov	r0, r4
   11588:	mov	r1, r5
   1158c:	mov	r3, r9
   11590:	strd	r0, [sp]
   11594:	mov	r2, r8
   11598:	ldr	r0, [sp, #44]	; 0x2c
   1159c:	bl	10d64 <posix_fadvise64@plt>
   115a0:	cmp	r8, r4
   115a4:	sbcs	r3, r9, r5
   115a8:	bge	1170c <strspn@plt+0x750>
   115ac:	ldrd	r2, [sp, #16]
   115b0:	orr	r3, r2, r3
   115b4:	str	r3, [sp, #48]	; 0x30
   115b8:	b	1160c <strspn@plt+0x650>
   115bc:	orrs	r3, sl, fp
   115c0:	strdeq	r8, [sp, #72]	; 0x48
   115c4:	adds	sl, sl, r4
   115c8:	adc	fp, fp, r5
   115cc:	subs	r3, r8, r6
   115d0:	str	r3, [sp, #24]
   115d4:	ldr	r3, [sp, #40]	; 0x28
   115d8:	sbc	r3, r9, r3
   115dc:	str	r3, [sp, #28]
   115e0:	ldrd	r0, [sp, #24]
   115e4:	ldrd	r2, [sp, #64]	; 0x40
   115e8:	cmp	r2, r0
   115ec:	sbcs	r3, r3, r1
   115f0:	blt	11744 <strspn@plt+0x788>
   115f4:	ldrd	r2, [sp, #16]
   115f8:	adds	r8, r8, r4
   115fc:	adc	r9, r9, r5
   11600:	cmp	r8, r2
   11604:	sbcs	r3, r9, r3
   11608:	bge	1170c <strspn@plt+0x750>
   1160c:	strd	r8, [sp]
   11610:	ldr	r2, [sp, #60]	; 0x3c
   11614:	mov	r1, r7
   11618:	ldr	r0, [sp, #44]	; 0x2c
   1161c:	bl	10e0c <pread64@plt>
   11620:	cmp	r0, #0
   11624:	blt	116fc <strspn@plt+0x740>
   11628:	ldr	r3, [sp, #48]	; 0x30
   1162c:	cmp	r3, #0
   11630:	cmpne	r0, #0
   11634:	ble	1166c <strspn@plt+0x6b0>
   11638:	ldrd	r2, [sp, #16]
   1163c:	asr	r5, r0, #31
   11640:	mov	r4, r0
   11644:	subs	r1, r2, r0
   11648:	sbc	r3, r3, r5
   1164c:	str	r1, [sp, #32]
   11650:	str	r3, [sp, #36]	; 0x24
   11654:	ldrd	r2, [sp, #32]
   11658:	cmp	r2, r8
   1165c:	sbcs	r3, r3, r9
   11660:	bge	1167c <strspn@plt+0x6c0>
   11664:	ldr	r3, [sp, #16]
   11668:	sub	r0, r3, r8
   1166c:	cmp	r0, #0
   11670:	ble	1170c <strspn@plt+0x750>
   11674:	mov	r4, r0
   11678:	asr	r5, r0, #31
   1167c:	ldr	r3, [pc, #1576]	; 11cac <strspn@plt+0xcf0>
   11680:	str	r3, [r7, r0]
   11684:	add	r0, r7, r0
   11688:	mov	r3, r7
   1168c:	mov	r2, r3
   11690:	ldr	r1, [r2], #4
   11694:	cmp	r1, #0
   11698:	beq	116f4 <strspn@plt+0x738>
   1169c:	ldrsb	r2, [r3], #1
   116a0:	cmp	r2, #0
   116a4:	beq	1169c <strspn@plt+0x6e0>
   116a8:	cmp	r0, r3
   116ac:	bcc	115bc <strspn@plt+0x600>
   116b0:	orrs	r3, sl, fp
   116b4:	beq	115cc <strspn@plt+0x610>
   116b8:	strd	sl, [sp]
   116bc:	ldrd	r2, [sp, #72]	; 0x48
   116c0:	mov	r1, #3
   116c4:	ldr	r0, [sp, #44]	; 0x2c
   116c8:	bl	11e34 <strspn@plt+0xe78>
   116cc:	ldr	r3, [sp, #88]	; 0x58
   116d0:	adds	r3, r3, sl
   116d4:	str	r3, [sp, #88]	; 0x58
   116d8:	ldr	r3, [sp, #92]	; 0x5c
   116dc:	mov	sl, #0
   116e0:	adc	r3, r3, fp
   116e4:	mov	fp, #0
   116e8:	str	r3, [sp, #92]	; 0x5c
   116ec:	strd	sl, [sp, #72]	; 0x48
   116f0:	b	115cc <strspn@plt+0x610>
   116f4:	mov	r3, r2
   116f8:	b	1168c <strspn@plt+0x6d0>
   116fc:	bl	10eb4 <__errno_location@plt>
   11700:	ldr	r3, [r0]
   11704:	cmp	r3, #0
   11708:	bne	11bc8 <strspn@plt+0xc0c>
   1170c:	orrs	r3, sl, fp
   11710:	beq	114c8 <strspn@plt+0x50c>
   11714:	ldrd	r2, [sp, #72]	; 0x48
   11718:	strd	sl, [sp]
   1171c:	mov	r1, #3
   11720:	ldr	r0, [sp, #44]	; 0x2c
   11724:	bl	11e34 <strspn@plt+0xe78>
   11728:	ldr	r3, [sp, #88]	; 0x58
   1172c:	adds	r3, r3, sl
   11730:	str	r3, [sp, #88]	; 0x58
   11734:	ldr	r3, [sp, #92]	; 0x5c
   11738:	adc	r3, r3, fp
   1173c:	str	r3, [sp, #92]	; 0x5c
   11740:	b	114c8 <strspn@plt+0x50c>
   11744:	ldr	r1, [sp, #52]	; 0x34
   11748:	sub	r0, r8, r6
   1174c:	bl	13f90 <strspn@plt+0x2fd4>
   11750:	ldr	r1, [sp, #52]	; 0x34
   11754:	mov	r3, #4
   11758:	mov	r2, #0
   1175c:	strd	r2, [sp, #4]
   11760:	mov	r2, r6
   11764:	ldr	r3, [sp, #40]	; 0x28
   11768:	mul	r1, r0, r1
   1176c:	ldr	r0, [sp, #44]	; 0x2c
   11770:	str	r1, [sp]
   11774:	str	r1, [sp, #56]	; 0x38
   11778:	bl	10d64 <posix_fadvise64@plt>
   1177c:	ldr	r1, [sp, #56]	; 0x38
   11780:	ldr	r3, [sp, #40]	; 0x28
   11784:	adds	r6, r6, r1
   11788:	adc	r3, r3, #0
   1178c:	str	r3, [sp, #40]	; 0x28
   11790:	b	115f4 <strspn@plt+0x638>
   11794:	bl	10eb4 <__errno_location@plt>
   11798:	ldr	r3, [r0]
   1179c:	cmp	r3, #6
   117a0:	beq	11834 <strspn@plt+0x878>
   117a4:	mov	r3, #4
   117a8:	str	r3, [sp]
   117ac:	mov	r2, r8
   117b0:	mov	r3, r9
   117b4:	ldr	r0, [sp, #44]	; 0x2c
   117b8:	bl	10e00 <lseek64@plt>
   117bc:	mov	r2, r0
   117c0:	mov	r3, r1
   117c4:	ldrd	r0, [sp, #80]	; 0x50
   117c8:	strd	r2, [sp, #16]
   117cc:	cmp	r0, r2
   117d0:	ldr	r2, [sp, #100]	; 0x64
   117d4:	sbcs	r3, r1, r3
   117d8:	movlt	r3, #1
   117dc:	movge	r3, #0
   117e0:	cmp	r2, #0
   117e4:	moveq	r3, #0
   117e8:	cmp	r3, #0
   117ec:	beq	11578 <strspn@plt+0x5bc>
   117f0:	ldrd	r4, [sp, #80]	; 0x50
   117f4:	mov	r3, #2
   117f8:	str	r3, [sp, #8]
   117fc:	mov	r1, r5
   11800:	mov	r0, r4
   11804:	mov	r2, r8
   11808:	strd	r0, [sp]
   1180c:	mov	r3, r9
   11810:	ldr	r0, [sp, #44]	; 0x2c
   11814:	bl	10d64 <posix_fadvise64@plt>
   11818:	mov	r0, r4
   1181c:	mov	r1, r5
   11820:	strd	r0, [sp, #16]
   11824:	b	115ac <strspn@plt+0x5f0>
   11828:	ldr	r1, [sp, #16]
   1182c:	bl	11e34 <strspn@plt+0xe78>
   11830:	b	11368 <strspn@plt+0x3ac>
   11834:	mov	r0, r7
   11838:	bl	10d70 <free@plt>
   1183c:	ldr	r3, [pc, #1084]	; 11c80 <strspn@plt+0xcc4>
   11840:	ldr	r3, [r3]
   11844:	cmp	r3, #0
   11848:	beq	11368 <strspn@plt+0x3ac>
   1184c:	ldr	r6, [sp, #88]	; 0x58
   11850:	ldr	r7, [sp, #92]	; 0x5c
   11854:	mov	r2, r6
   11858:	mov	r3, r7
   1185c:	mov	r0, #3
   11860:	bl	133c0 <strspn@plt+0x2404>
   11864:	ldr	r3, [pc, #1092]	; 11cb0 <strspn@plt+0xcf4>
   11868:	mov	r2, #5
   1186c:	ldr	r1, [pc, #1088]	; 11cb4 <strspn@plt+0xcf8>
   11870:	ldr	r5, [r3]
   11874:	mov	r4, r0
   11878:	mov	r0, #0
   1187c:	bl	10db8 <dcgettext@plt>
   11880:	ldr	r3, [pc, #1016]	; 11c80 <strspn@plt+0xcc4>
   11884:	str	r4, [sp]
   11888:	strd	r6, [sp, #8]
   1188c:	mov	r1, #1
   11890:	ldr	r3, [r3, #4]
   11894:	mov	r2, r0
   11898:	mov	r0, r5
   1189c:	bl	10efc <__fprintf_chk@plt>
   118a0:	mov	r0, r4
   118a4:	bl	10d70 <free@plt>
   118a8:	b	11368 <strspn@plt+0x3ac>
   118ac:	adds	r3, r2, r8
   118b0:	str	r3, [sp, #80]	; 0x50
   118b4:	ldr	r3, [sp, #84]	; 0x54
   118b8:	adc	r3, r3, r9
   118bc:	str	r3, [sp, #84]	; 0x54
   118c0:	b	113f4 <strspn@plt+0x438>
   118c4:	ldr	r3, [pc, #996]	; 11cb0 <strspn@plt+0xcf4>
   118c8:	mov	r2, #5
   118cc:	ldr	r1, [pc, #996]	; 11cb8 <strspn@plt+0xcfc>
   118d0:	ldr	r4, [r3]
   118d4:	mov	r0, #0
   118d8:	bl	10db8 <dcgettext@plt>
   118dc:	mov	r1, r4
   118e0:	bl	10f80 <fputs@plt>
   118e4:	mov	r2, #5
   118e8:	ldr	r1, [pc, #972]	; 11cbc <strspn@plt+0xd00>
   118ec:	mov	r0, #0
   118f0:	bl	10db8 <dcgettext@plt>
   118f4:	ldr	r3, [pc, #908]	; 11c88 <strspn@plt+0xccc>
   118f8:	mov	r1, #1
   118fc:	ldr	r3, [r3]
   11900:	mov	r2, r0
   11904:	mov	r0, r4
   11908:	bl	10efc <__fprintf_chk@plt>
   1190c:	mov	r1, r4
   11910:	mov	r0, #10
   11914:	bl	10f50 <fputc@plt>
   11918:	mov	r2, #5
   1191c:	ldr	r1, [pc, #924]	; 11cc0 <strspn@plt+0xd04>
   11920:	mov	r0, #0
   11924:	bl	10db8 <dcgettext@plt>
   11928:	mov	r1, r4
   1192c:	bl	10f80 <fputs@plt>
   11930:	mov	r2, #5
   11934:	ldr	r1, [pc, #904]	; 11cc4 <strspn@plt+0xd08>
   11938:	mov	r0, #0
   1193c:	bl	10db8 <dcgettext@plt>
   11940:	mov	r1, r4
   11944:	bl	10f80 <fputs@plt>
   11948:	mov	r2, #5
   1194c:	ldr	r1, [pc, #884]	; 11cc8 <strspn@plt+0xd0c>
   11950:	mov	r0, #0
   11954:	bl	10db8 <dcgettext@plt>
   11958:	mov	r1, r4
   1195c:	bl	10f80 <fputs@plt>
   11960:	mov	r2, #5
   11964:	ldr	r1, [pc, #864]	; 11ccc <strspn@plt+0xd10>
   11968:	mov	r0, #0
   1196c:	bl	10db8 <dcgettext@plt>
   11970:	mov	r1, r4
   11974:	bl	10f80 <fputs@plt>
   11978:	mov	r2, #5
   1197c:	ldr	r1, [pc, #844]	; 11cd0 <strspn@plt+0xd14>
   11980:	mov	r0, #0
   11984:	bl	10db8 <dcgettext@plt>
   11988:	mov	r1, r4
   1198c:	bl	10f80 <fputs@plt>
   11990:	mov	r2, #5
   11994:	ldr	r1, [pc, #824]	; 11cd4 <strspn@plt+0xd18>
   11998:	mov	r0, #0
   1199c:	bl	10db8 <dcgettext@plt>
   119a0:	mov	r1, r4
   119a4:	bl	10f80 <fputs@plt>
   119a8:	mov	r2, #5
   119ac:	ldr	r1, [pc, #804]	; 11cd8 <strspn@plt+0xd1c>
   119b0:	mov	r0, #0
   119b4:	bl	10db8 <dcgettext@plt>
   119b8:	mov	r1, r4
   119bc:	bl	10f80 <fputs@plt>
   119c0:	mov	r2, #5
   119c4:	ldr	r1, [pc, #784]	; 11cdc <strspn@plt+0xd20>
   119c8:	mov	r0, #0
   119cc:	bl	10db8 <dcgettext@plt>
   119d0:	mov	r1, r4
   119d4:	bl	10f80 <fputs@plt>
   119d8:	mov	r2, #5
   119dc:	ldr	r1, [pc, #764]	; 11ce0 <strspn@plt+0xd24>
   119e0:	mov	r0, #0
   119e4:	bl	10db8 <dcgettext@plt>
   119e8:	mov	r1, r4
   119ec:	bl	10f80 <fputs@plt>
   119f0:	mov	r2, #5
   119f4:	ldr	r1, [pc, #744]	; 11ce4 <strspn@plt+0xd28>
   119f8:	mov	r0, #0
   119fc:	bl	10db8 <dcgettext@plt>
   11a00:	mov	r1, r4
   11a04:	bl	10f80 <fputs@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #724]	; 11ce8 <strspn@plt+0xd2c>
   11a10:	mov	r0, #0
   11a14:	bl	10db8 <dcgettext@plt>
   11a18:	mov	r1, r4
   11a1c:	bl	10f80 <fputs@plt>
   11a20:	mov	r2, #5
   11a24:	ldr	r1, [pc, #704]	; 11cec <strspn@plt+0xd30>
   11a28:	mov	r0, #0
   11a2c:	bl	10db8 <dcgettext@plt>
   11a30:	mov	r1, r4
   11a34:	bl	10f80 <fputs@plt>
   11a38:	mov	r1, r4
   11a3c:	mov	r0, #10
   11a40:	bl	10f50 <fputc@plt>
   11a44:	mov	r2, #5
   11a48:	ldr	r1, [pc, #672]	; 11cf0 <strspn@plt+0xd34>
   11a4c:	mov	r0, #0
   11a50:	bl	10db8 <dcgettext@plt>
   11a54:	mov	r2, #5
   11a58:	ldr	r1, [pc, #660]	; 11cf4 <strspn@plt+0xd38>
   11a5c:	mov	r4, r0
   11a60:	mov	r0, #0
   11a64:	bl	10db8 <dcgettext@plt>
   11a68:	ldr	r2, [pc, #648]	; 11cf8 <strspn@plt+0xd3c>
   11a6c:	mov	r3, r4
   11a70:	str	r2, [sp]
   11a74:	ldr	r1, [pc, #640]	; 11cfc <strspn@plt+0xd40>
   11a78:	ldr	r2, [pc, #640]	; 11d00 <strspn@plt+0xd44>
   11a7c:	str	r0, [sp, #4]
   11a80:	mov	r0, #1
   11a84:	bl	10ee4 <__printf_chk@plt>
   11a88:	mov	r2, #5
   11a8c:	ldr	r1, [pc, #624]	; 11d04 <strspn@plt+0xd48>
   11a90:	mov	r0, #0
   11a94:	bl	10db8 <dcgettext@plt>
   11a98:	ldr	r2, [pc, #616]	; 11d08 <strspn@plt+0xd4c>
   11a9c:	mov	r1, r0
   11aa0:	mov	r0, #1
   11aa4:	bl	10ee4 <__printf_chk@plt>
   11aa8:	mov	r0, #0
   11aac:	bl	10e6c <exit@plt>
   11ab0:	ldr	r3, [pc, #596]	; 11d0c <strspn@plt+0xd50>
   11ab4:	mov	r2, #5
   11ab8:	ldr	r1, [pc, #592]	; 11d10 <strspn@plt+0xd54>
   11abc:	mov	r0, #0
   11ac0:	ldr	r4, [r3]
   11ac4:	bl	10db8 <dcgettext@plt>
   11ac8:	ldr	r3, [pc, #440]	; 11c88 <strspn@plt+0xccc>
   11acc:	mov	r1, #1
   11ad0:	ldr	r3, [r3]
   11ad4:	mov	r2, r0
   11ad8:	mov	r0, r4
   11adc:	bl	10efc <__fprintf_chk@plt>
   11ae0:	mov	r0, #1
   11ae4:	bl	10e6c <exit@plt>
   11ae8:	mov	r2, #0
   11aec:	mov	r3, #0
   11af0:	strd	r2, [sp, #80]	; 0x50
   11af4:	b	113c4 <strspn@plt+0x408>
   11af8:	ldr	r6, [pc, #524]	; 11d0c <strspn@plt+0xd50>
   11afc:	mov	r2, #5
   11b00:	ldr	r1, [pc, #524]	; 11d14 <strspn@plt+0xd58>
   11b04:	mov	r0, #0
   11b08:	ldr	sl, [r6]
   11b0c:	bl	10db8 <dcgettext@plt>
   11b10:	ldr	r3, [pc, #368]	; 11c88 <strspn@plt+0xccc>
   11b14:	mov	r1, #1
   11b18:	sub	r5, r4, #4
   11b1c:	ldr	r3, [r3]
   11b20:	add	r4, r4, #56	; 0x38
   11b24:	ldr	r7, [pc, #492]	; 11d18 <strspn@plt+0xd5c>
   11b28:	ldr	r9, [pc, #492]	; 11d1c <strspn@plt+0xd60>
   11b2c:	ldr	r8, [pc, #492]	; 11d20 <strspn@plt+0xd64>
   11b30:	mov	r2, r0
   11b34:	mov	r0, sl
   11b38:	bl	10efc <__fprintf_chk@plt>
   11b3c:	ldr	r0, [r5, #4]!
   11b40:	cmp	r0, #0
   11b44:	beq	11b9c <strspn@plt+0xbe0>
   11b48:	cmp	r0, #104	; 0x68
   11b4c:	beq	11bb0 <strspn@plt+0xbf4>
   11b50:	ldr	r2, [pc, #288]	; 11c78 <strspn@plt+0xcbc>
   11b54:	b	11b68 <strspn@plt+0xbac>
   11b58:	add	r2, r2, #16
   11b5c:	ldr	r1, [r2, #12]
   11b60:	cmp	r0, r1
   11b64:	beq	11bb4 <strspn@plt+0xbf8>
   11b68:	ldr	r3, [r2, #16]
   11b6c:	cmp	r3, #0
   11b70:	bne	11b58 <strspn@plt+0xb9c>
   11b74:	sub	r3, r0, #33	; 0x21
   11b78:	cmp	r3, #93	; 0x5d
   11b7c:	bhi	11b94 <strspn@plt+0xbd8>
   11b80:	mov	r3, r0
   11b84:	mov	r2, r8
   11b88:	mov	r1, #1
   11b8c:	ldr	r0, [r6]
   11b90:	bl	10efc <__fprintf_chk@plt>
   11b94:	cmp	r5, r4
   11b98:	bne	11b3c <strspn@plt+0xb80>
   11b9c:	ldr	r1, [r6]
   11ba0:	mov	r0, #10
   11ba4:	bl	10f50 <fputc@plt>
   11ba8:	mov	r0, #1
   11bac:	bl	10e6c <exit@plt>
   11bb0:	mov	r3, r9
   11bb4:	mov	r2, r7
   11bb8:	mov	r1, #1
   11bbc:	ldr	r0, [r6]
   11bc0:	bl	10efc <__fprintf_chk@plt>
   11bc4:	b	11b94 <strspn@plt+0xbd8>
   11bc8:	mov	r2, #5
   11bcc:	ldr	r1, [pc, #336]	; 11d24 <strspn@plt+0xd68>
   11bd0:	b	11390 <strspn@plt+0x3d4>
   11bd4:	mov	r2, r4
   11bd8:	ldr	r1, [pc, #328]	; 11d28 <strspn@plt+0xd6c>
   11bdc:	mov	r0, #1
   11be0:	bl	10de8 <err@plt>
   11be4:	ldr	r1, [pc, #320]	; 11d2c <strspn@plt+0xd70>
   11be8:	mov	r2, #5
   11bec:	mov	r0, #0
   11bf0:	bl	10db8 <dcgettext@plt>
   11bf4:	mov	r1, r0
   11bf8:	mov	r0, #1
   11bfc:	bl	10de8 <err@plt>
   11c00:	mov	r2, #5
   11c04:	ldr	r1, [pc, #292]	; 11d30 <strspn@plt+0xd74>
   11c08:	b	11390 <strspn@plt+0x3d4>
   11c0c:	ldr	r1, [pc, #288]	; 11d34 <strspn@plt+0xd78>
   11c10:	mov	r2, #5
   11c14:	mov	r0, #0
   11c18:	bl	10db8 <dcgettext@plt>
   11c1c:	mov	r1, r0
   11c20:	mov	r0, #1
   11c24:	bl	10f38 <errx@plt>
   11c28:	mov	r2, #5
   11c2c:	ldr	r1, [pc, #260]	; 11d38 <strspn@plt+0xd7c>
   11c30:	b	11c14 <strspn@plt+0xc58>
   11c34:	ldr	r1, [pc, #256]	; 11d3c <strspn@plt+0xd80>
   11c38:	ldr	r0, [sp, #40]	; 0x28
   11c3c:	mov	r2, #5
   11c40:	bl	10db8 <dcgettext@plt>
   11c44:	mov	r1, r0
   11c48:	mov	r0, #1
   11c4c:	bl	10f38 <errx@plt>
   11c50:	mov	r2, #5
   11c54:	ldr	r1, [pc, #228]	; 11d40 <strspn@plt+0xd84>
   11c58:	b	11c14 <strspn@plt+0xc58>
   11c5c:	bl	10dd0 <__stack_chk_fail@plt>
   11c60:	andeq	r4, r2, r8, lsl #28
   11c64:	andeq	r4, r1, r4, lsl r6
   11c68:	andeq	r4, r1, r0, asr #11
   11c6c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11c70:	andeq	r4, r1, r4, lsr #19
   11c74:			; <UNDEFINED> instruction: 0x00011eb4
   11c78:	muleq	r1, r8, r3
   11c7c:	andeq	r4, r1, r8, ror #8
   11c80:	andeq	r5, r2, r0, lsr r0
   11c84:	andeq	r4, r1, ip, asr r9
   11c88:	andeq	r5, r2, r0, lsl r0
   11c8c:	andeq	r4, r1, r8, ror #18
   11c90:	andeq	r5, r2, r8, lsr #32
   11c94:	andeq	r5, r2, r8, lsl r0
   11c98:			; <UNDEFINED> instruction: 0x000149b4
   11c9c:			; <UNDEFINED> instruction: 0x000001b6
   11ca0:	andeq	r4, r1, r0, ror #21
   11ca4:	andeq	r4, r1, ip, asr sl
   11ca8:	andeq	r4, r1, r0, ror sl
   11cac:	tsteq	r1, r1, lsl #2
   11cb0:	andeq	r5, r2, r4, lsr #32
   11cb4:			; <UNDEFINED> instruction: 0x00014ab0
   11cb8:	andeq	r4, r1, ip, lsl #12
   11cbc:	andeq	r4, r1, r8, lsl r6
   11cc0:	andeq	r4, r1, r4, lsr r6
   11cc4:	andeq	r4, r1, ip, ror #12
   11cc8:	andeq	r4, r1, r8, ror r6
   11ccc:	andeq	r4, r1, ip, lsr #13
   11cd0:	andeq	r4, r1, r8, ror #13
   11cd4:	andeq	r4, r1, r0, lsr r7
   11cd8:	andeq	r4, r1, r0, ror r7
   11cdc:			; <UNDEFINED> instruction: 0x000147b0
   11ce0:	strdeq	r4, [r1], -r0
   11ce4:	andeq	r4, r1, r0, lsr r8
   11ce8:	andeq	r4, r1, r0, ror r8
   11cec:			; <UNDEFINED> instruction: 0x000148b8
   11cf0:	ldrdeq	r4, [r1], -ip
   11cf4:	strdeq	r4, [r1], -r0
   11cf8:	andeq	r4, r1, r0, lsr #18
   11cfc:	andeq	r4, r1, ip, lsl #18
   11d00:	andeq	r4, r1, r0, lsl #18
   11d04:	andeq	r4, r1, r0, lsr r9
   11d08:	andeq	r4, r1, ip, asr #18
   11d0c:	andeq	r5, r2, r0, lsr #32
   11d10:	andeq	r4, r1, ip, ror r9
   11d14:	andeq	r4, r1, r0, ror #11
   11d18:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11d1c:			; <UNDEFINED> instruction: 0x000145b8
   11d20:	andeq	r4, r1, r4, lsl #12
   11d24:	andeq	r4, r1, r0, lsr #21
   11d28:	andeq	r4, r1, r4, lsl #21
   11d2c:	muleq	r1, r8, r5
   11d30:	andeq	r4, r1, ip, asr #20
   11d34:	andeq	r4, r1, ip, lsr #20
   11d38:	andeq	r4, r1, ip, ror #19
   11d3c:	andeq	r4, r1, ip, lsl #20
   11d40:	andeq	r4, r1, ip, asr #19
   11d44:	mov	fp, #0
   11d48:	mov	lr, #0
   11d4c:	pop	{r1}		; (ldr r1, [sp], #4)
   11d50:	mov	r2, sp
   11d54:	push	{r2}		; (str r2, [sp, #-4]!)
   11d58:	push	{r0}		; (str r0, [sp, #-4]!)
   11d5c:	ldr	ip, [pc, #16]	; 11d74 <strspn@plt+0xdb8>
   11d60:	push	{ip}		; (str ip, [sp, #-4]!)
   11d64:	ldr	r0, [pc, #12]	; 11d78 <strspn@plt+0xdbc>
   11d68:	ldr	r3, [pc, #12]	; 11d7c <strspn@plt+0xdc0>
   11d6c:	bl	10e3c <__libc_start_main@plt>
   11d70:	bl	10f98 <abort@plt>
   11d74:	andeq	r4, r1, r0, ror r3
   11d78:	andeq	r0, r1, r8, asr #31
   11d7c:	andeq	r4, r1, r0, lsl r3
   11d80:	ldr	r3, [pc, #20]	; 11d9c <strspn@plt+0xde0>
   11d84:	ldr	r2, [pc, #20]	; 11da0 <strspn@plt+0xde4>
   11d88:	add	r3, pc, r3
   11d8c:	ldr	r2, [r3, r2]
   11d90:	cmp	r2, #0
   11d94:	bxeq	lr
   11d98:	b	10e48 <__gmon_start__@plt>
   11d9c:	andeq	r3, r1, ip, ror r1
   11da0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11da4:	ldr	r0, [pc, #24]	; 11dc4 <strspn@plt+0xe08>
   11da8:	ldr	r3, [pc, #24]	; 11dc8 <strspn@plt+0xe0c>
   11dac:	cmp	r3, r0
   11db0:	bxeq	lr
   11db4:	ldr	r3, [pc, #16]	; 11dcc <strspn@plt+0xe10>
   11db8:	cmp	r3, #0
   11dbc:	bxeq	lr
   11dc0:	bx	r3
   11dc4:	andeq	r5, r2, ip
   11dc8:	andeq	r5, r2, ip
   11dcc:	andeq	r0, r0, r0
   11dd0:	ldr	r0, [pc, #36]	; 11dfc <strspn@plt+0xe40>
   11dd4:	ldr	r1, [pc, #36]	; 11e00 <strspn@plt+0xe44>
   11dd8:	sub	r1, r1, r0
   11ddc:	asr	r1, r1, #2
   11de0:	add	r1, r1, r1, lsr #31
   11de4:	asrs	r1, r1, #1
   11de8:	bxeq	lr
   11dec:	ldr	r3, [pc, #16]	; 11e04 <strspn@plt+0xe48>
   11df0:	cmp	r3, #0
   11df4:	bxeq	lr
   11df8:	bx	r3
   11dfc:	andeq	r5, r2, ip
   11e00:	andeq	r5, r2, ip
   11e04:	andeq	r0, r0, r0
   11e08:	push	{r4, lr}
   11e0c:	ldr	r4, [pc, #24]	; 11e2c <strspn@plt+0xe70>
   11e10:	ldrb	r3, [r4]
   11e14:	cmp	r3, #0
   11e18:	popne	{r4, pc}
   11e1c:	bl	11da4 <strspn@plt+0xde8>
   11e20:	mov	r3, #1
   11e24:	strb	r3, [r4]
   11e28:	pop	{r4, pc}
   11e2c:	andeq	r5, r2, ip, lsr #32
   11e30:	b	11dd0 <strspn@plt+0xe14>
   11e34:	push	{r4, r5, r6, lr}
   11e38:	sub	sp, sp, #8
   11e3c:	mov	r6, r1
   11e40:	ldrd	r4, [sp, #24]
   11e44:	strd	r4, [sp]
   11e48:	bl	10f2c <fallocate64@plt>
   11e4c:	cmp	r0, #0
   11e50:	blt	11e5c <strspn@plt+0xea0>
   11e54:	add	sp, sp, #8
   11e58:	pop	{r4, r5, r6, pc}
   11e5c:	tst	r6, #1
   11e60:	beq	11e74 <strspn@plt+0xeb8>
   11e64:	bl	10eb4 <__errno_location@plt>
   11e68:	ldr	r3, [r0]
   11e6c:	cmp	r3, #95	; 0x5f
   11e70:	beq	11e90 <strspn@plt+0xed4>
   11e74:	ldr	r1, [pc, #48]	; 11eac <strspn@plt+0xef0>
   11e78:	mov	r2, #5
   11e7c:	mov	r0, #0
   11e80:	bl	10db8 <dcgettext@plt>
   11e84:	mov	r1, r0
   11e88:	mov	r0, #1
   11e8c:	bl	10de8 <err@plt>
   11e90:	ldr	r1, [pc, #24]	; 11eb0 <strspn@plt+0xef4>
   11e94:	mov	r2, #5
   11e98:	mov	r0, #0
   11e9c:	bl	10db8 <dcgettext@plt>
   11ea0:	mov	r1, r0
   11ea4:	mov	r0, #1
   11ea8:	bl	10f38 <errx@plt>
   11eac:	muleq	r1, r8, r5
   11eb0:	andeq	r4, r1, r8, ror #10
   11eb4:	ldr	r3, [pc, #292]	; 11fe0 <strspn@plt+0x1024>
   11eb8:	push	{r4, r5, r6, lr}
   11ebc:	ldr	r4, [r3]
   11ec0:	mov	r0, r4
   11ec4:	bl	10e18 <__fpending@plt>
   11ec8:	mov	r6, r0
   11ecc:	mov	r0, r4
   11ed0:	bl	10d7c <ferror@plt>
   11ed4:	mov	r5, r0
   11ed8:	mov	r0, r4
   11edc:	bl	10f08 <fclose@plt>
   11ee0:	cmp	r5, #0
   11ee4:	mov	r4, r0
   11ee8:	bne	11f90 <strspn@plt+0xfd4>
   11eec:	cmp	r0, #0
   11ef0:	beq	11f0c <strspn@plt+0xf50>
   11ef4:	bl	10eb4 <__errno_location@plt>
   11ef8:	cmp	r6, #0
   11efc:	ldr	r3, [r0]
   11f00:	bne	11f68 <strspn@plt+0xfac>
   11f04:	cmp	r3, #9
   11f08:	bne	11f68 <strspn@plt+0xfac>
   11f0c:	ldr	r3, [pc, #208]	; 11fe4 <strspn@plt+0x1028>
   11f10:	ldr	r4, [r3]
   11f14:	mov	r0, r4
   11f18:	bl	10e18 <__fpending@plt>
   11f1c:	mov	r6, r0
   11f20:	mov	r0, r4
   11f24:	bl	10d7c <ferror@plt>
   11f28:	mov	r5, r0
   11f2c:	mov	r0, r4
   11f30:	bl	10f08 <fclose@plt>
   11f34:	cmp	r5, #0
   11f38:	mov	r4, r0
   11f3c:	bne	11fc4 <strspn@plt+0x1008>
   11f40:	cmp	r0, #0
   11f44:	popeq	{r4, r5, r6, pc}
   11f48:	cmp	r6, #0
   11f4c:	bne	11f60 <strspn@plt+0xfa4>
   11f50:	bl	10eb4 <__errno_location@plt>
   11f54:	ldr	r3, [r0]
   11f58:	cmp	r3, #9
   11f5c:	popeq	{r4, r5, r6, pc}
   11f60:	mov	r0, #1
   11f64:	bl	10d94 <_exit@plt>
   11f68:	cmp	r3, #32
   11f6c:	beq	11f0c <strspn@plt+0xf50>
   11f70:	cmp	r3, #0
   11f74:	beq	11fac <strspn@plt+0xff0>
   11f78:	mov	r2, #5
   11f7c:	ldr	r1, [pc, #100]	; 11fe8 <strspn@plt+0x102c>
   11f80:	mov	r0, #0
   11f84:	bl	10db8 <dcgettext@plt>
   11f88:	bl	10f44 <warn@plt>
   11f8c:	b	11f60 <strspn@plt+0xfa4>
   11f90:	bl	10eb4 <__errno_location@plt>
   11f94:	cmp	r4, #0
   11f98:	ldr	r3, [r0]
   11f9c:	bne	11f68 <strspn@plt+0xfac>
   11fa0:	cmp	r3, #32
   11fa4:	strne	r4, [r0]
   11fa8:	beq	11f0c <strspn@plt+0xf50>
   11fac:	mov	r2, #5
   11fb0:	ldr	r1, [pc, #48]	; 11fe8 <strspn@plt+0x102c>
   11fb4:	mov	r0, #0
   11fb8:	bl	10db8 <dcgettext@plt>
   11fbc:	bl	10e9c <warnx@plt>
   11fc0:	b	11f60 <strspn@plt+0xfa4>
   11fc4:	cmp	r0, #0
   11fc8:	bne	11f60 <strspn@plt+0xfa4>
   11fcc:	bl	10eb4 <__errno_location@plt>
   11fd0:	ldr	r3, [r0]
   11fd4:	cmp	r3, #32
   11fd8:	strne	r4, [r0]
   11fdc:	b	11f60 <strspn@plt+0xfa4>
   11fe0:	andeq	r5, r2, r4, lsr #32
   11fe4:	andeq	r5, r2, r0, lsr #32
   11fe8:	andeq	r4, r1, ip, lsr #11
   11fec:	andeq	r0, r0, r0
   11ff0:	cmp	r0, #0
   11ff4:	mov	r3, #0
   11ff8:	str	r3, [r1]
   11ffc:	bxeq	lr
   12000:	ldrsb	r2, [r0]
   12004:	cmp	r2, #47	; 0x2f
   12008:	bne	12044 <strspn@plt+0x1088>
   1200c:	ldrsb	r3, [r0, #1]
   12010:	cmp	r3, #47	; 0x2f
   12014:	bne	1204c <strspn@plt+0x1090>
   12018:	add	r3, r0, #1
   1201c:	b	1202c <strspn@plt+0x1070>
   12020:	ldrsb	r2, [r3]
   12024:	cmp	r2, #47	; 0x2f
   12028:	bne	1204c <strspn@plt+0x1090>
   1202c:	cmp	r3, #0
   12030:	mov	r0, r3
   12034:	bxeq	lr
   12038:	ldrsb	r2, [r3], #1
   1203c:	cmp	r2, #47	; 0x2f
   12040:	beq	12020 <strspn@plt+0x1064>
   12044:	cmp	r2, #0
   12048:	beq	12088 <strspn@plt+0x10cc>
   1204c:	mov	r3, #1
   12050:	str	r3, [r1]
   12054:	ldrsb	r3, [r0, #1]
   12058:	add	r2, r0, #1
   1205c:	cmp	r3, #47	; 0x2f
   12060:	cmpne	r3, #0
   12064:	bxeq	lr
   12068:	rsb	r3, r0, #1
   1206c:	add	ip, r2, r3
   12070:	str	ip, [r1]
   12074:	ldrsb	ip, [r2, #1]!
   12078:	cmp	ip, #0
   1207c:	cmpne	ip, #47	; 0x2f
   12080:	bne	1206c <strspn@plt+0x10b0>
   12084:	bx	lr
   12088:	mov	r0, r2
   1208c:	bx	lr
   12090:	push	{r4, r5, r6, r7, r8, lr}
   12094:	mov	r7, r1
   12098:	ldrsb	r1, [r0]
   1209c:	cmp	r1, #0
   120a0:	movne	r5, r0
   120a4:	movne	r4, #0
   120a8:	beq	12114 <strspn@plt+0x1158>
   120ac:	cmp	r1, #92	; 0x5c
   120b0:	addne	r6, r5, r4
   120b4:	beq	120e4 <strspn@plt+0x1128>
   120b8:	mov	r0, r7
   120bc:	bl	10e90 <strchr@plt>
   120c0:	cmp	r0, #0
   120c4:	bne	1210c <strspn@plt+0x1150>
   120c8:	ldrsb	r1, [r6, #1]!
   120cc:	add	r4, r4, #1
   120d0:	mov	r0, r4
   120d4:	cmp	r1, #0
   120d8:	popeq	{r4, r5, r6, r7, r8, pc}
   120dc:	cmp	r1, #92	; 0x5c
   120e0:	bne	120b8 <strspn@plt+0x10fc>
   120e4:	add	r3, r5, r4
   120e8:	ldrsb	r3, [r3, #1]
   120ec:	cmp	r3, #0
   120f0:	beq	1210c <strspn@plt+0x1150>
   120f4:	add	r4, r4, #2
   120f8:	mov	r0, r4
   120fc:	ldrsb	r1, [r5, r4]
   12100:	cmp	r1, #0
   12104:	bne	120ac <strspn@plt+0x10f0>
   12108:	pop	{r4, r5, r6, r7, r8, pc}
   1210c:	mov	r0, r4
   12110:	pop	{r4, r5, r6, r7, r8, pc}
   12114:	mov	r0, r1
   12118:	pop	{r4, r5, r6, r7, r8, pc}
   1211c:	ldr	ip, [pc, #244]	; 12218 <strspn@plt+0x125c>
   12120:	push	{r4, r5, r6, r7, r8, r9, lr}
   12124:	add	ip, pc, ip
   12128:	ldr	lr, [pc, #236]	; 1221c <strspn@plt+0x1260>
   1212c:	sub	sp, sp, #12
   12130:	mov	r5, #0
   12134:	ldr	r7, [ip, lr]
   12138:	mov	r4, r0
   1213c:	mov	r8, r1
   12140:	ldr	r3, [r7]
   12144:	mov	r0, ip
   12148:	mov	r9, r2
   1214c:	str	r5, [sp]
   12150:	str	r3, [sp, #4]
   12154:	bl	10eb4 <__errno_location@plt>
   12158:	cmp	r4, r5
   1215c:	str	r5, [r0]
   12160:	beq	12170 <strspn@plt+0x11b4>
   12164:	ldrsb	r3, [r4]
   12168:	cmp	r3, r5
   1216c:	bne	12190 <strspn@plt+0x11d4>
   12170:	ldr	r1, [pc, #168]	; 12220 <strspn@plt+0x1264>
   12174:	mov	r3, r4
   12178:	add	r1, pc, r1
   1217c:	mov	r2, r8
   12180:	ldr	r0, [r1]
   12184:	ldr	r1, [pc, #152]	; 12224 <strspn@plt+0x1268>
   12188:	add	r1, pc, r1
   1218c:	bl	10f38 <errx@plt>
   12190:	mov	r6, r0
   12194:	mov	r2, r9
   12198:	mov	r3, r5
   1219c:	mov	r1, sp
   121a0:	mov	r0, r4
   121a4:	bl	10dac <__strtoull_internal@plt>
   121a8:	ldr	r2, [r6]
   121ac:	cmp	r2, r5
   121b0:	bne	121ec <strspn@plt+0x1230>
   121b4:	ldr	r3, [sp]
   121b8:	cmp	r3, r4
   121bc:	beq	12170 <strspn@plt+0x11b4>
   121c0:	cmp	r3, r5
   121c4:	beq	121d4 <strspn@plt+0x1218>
   121c8:	ldrsb	r3, [r3]
   121cc:	cmp	r3, r5
   121d0:	bne	12170 <strspn@plt+0x11b4>
   121d4:	ldr	r2, [sp, #4]
   121d8:	ldr	r3, [r7]
   121dc:	cmp	r2, r3
   121e0:	bne	12214 <strspn@plt+0x1258>
   121e4:	add	sp, sp, #12
   121e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   121ec:	ldr	r3, [pc, #52]	; 12228 <strspn@plt+0x126c>
   121f0:	cmp	r2, #34	; 0x22
   121f4:	add	r3, pc, r3
   121f8:	ldr	r0, [r3]
   121fc:	bne	12170 <strspn@plt+0x11b4>
   12200:	ldr	r1, [pc, #36]	; 1222c <strspn@plt+0x1270>
   12204:	mov	r3, r4
   12208:	mov	r2, r8
   1220c:	add	r1, pc, r1
   12210:	bl	10de8 <err@plt>
   12214:	bl	10dd0 <__stack_chk_fail@plt>
   12218:	andeq	r2, r1, r0, ror #27
   1221c:	andeq	r0, r0, ip, ror #1
   12220:	andeq	r2, r1, r8, lsl #29
   12224:	ldrdeq	r2, [r0], -ip
   12228:	andeq	r2, r1, ip, lsl #28
   1222c:	andeq	r2, r0, r8, asr r9
   12230:	push	{r4, lr}
   12234:	mov	r5, r0
   12238:	mov	r4, r1
   1223c:	bl	10eb4 <__errno_location@plt>
   12240:	ldr	ip, [pc, #32]	; 12268 <strspn@plt+0x12ac>
   12244:	ldr	r1, [pc, #32]	; 1226c <strspn@plt+0x12b0>
   12248:	add	ip, pc, ip
   1224c:	mov	lr, #34	; 0x22
   12250:	mov	r3, r5
   12254:	mov	r2, r4
   12258:	add	r1, pc, r1
   1225c:	str	lr, [r0]
   12260:	ldr	r0, [ip]
   12264:	bl	10de8 <err@plt>
   12268:			; <UNDEFINED> instruction: 0x00012db8
   1226c:	andeq	r2, r0, ip, lsl #18
   12270:	push	{r4, r5, r6, lr}
   12274:	mov	r4, r0
   12278:	mov	r5, r1
   1227c:	bl	1211c <strspn@plt+0x1160>
   12280:	mov	r3, #0
   12284:	mvn	r2, #0
   12288:	cmp	r1, r3
   1228c:	cmpeq	r0, r2
   12290:	popls	{r4, r5, r6, pc}
   12294:	mov	r1, r5
   12298:	mov	r0, r4
   1229c:	bl	12230 <strspn@plt+0x1274>
   122a0:	ldr	r3, [pc, #8]	; 122b0 <strspn@plt+0x12f4>
   122a4:	add	r3, pc, r3
   122a8:	str	r0, [r3]
   122ac:	bx	lr
   122b0:	andeq	r2, r1, ip, asr sp
   122b4:	ldr	r3, [pc, #1648]	; 1292c <strspn@plt+0x1970>
   122b8:	ldr	ip, [pc, #1648]	; 12930 <strspn@plt+0x1974>
   122bc:	add	r3, pc, r3
   122c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122c4:	mov	r5, r1
   122c8:	ldr	r1, [r3, ip]
   122cc:	sub	sp, sp, #52	; 0x34
   122d0:	mov	ip, r1
   122d4:	mov	r8, r0
   122d8:	str	r1, [sp, #24]
   122dc:	mov	r0, #0
   122e0:	mov	r1, #0
   122e4:	ldr	r3, [ip]
   122e8:	strd	r0, [r5]
   122ec:	mov	r9, r2
   122f0:	str	r3, [sp, #44]	; 0x2c
   122f4:	bl	10eb4 <__errno_location@plt>
   122f8:	cmp	r8, #0
   122fc:	mov	r4, r0
   12300:	beq	124e0 <strspn@plt+0x1524>
   12304:	ldrsb	fp, [r8]
   12308:	cmp	fp, #0
   1230c:	beq	124e0 <strspn@plt+0x1524>
   12310:	bl	10e60 <__ctype_b_loc@plt>
   12314:	mov	r2, r8
   12318:	ldr	r1, [r0]
   1231c:	b	12324 <strspn@plt+0x1368>
   12320:	ldrsb	fp, [r2, #1]!
   12324:	uxtb	r3, fp
   12328:	lsl	r3, r3, #1
   1232c:	ldrh	ip, [r1, r3]
   12330:	ands	ip, ip, #8192	; 0x2000
   12334:	bne	12320 <strspn@plt+0x1364>
   12338:	cmp	fp, #45	; 0x2d
   1233c:	beq	124e0 <strspn@plt+0x1524>
   12340:	add	fp, sp, #40	; 0x28
   12344:	mov	r3, ip
   12348:	mov	r2, ip
   1234c:	str	ip, [r4]
   12350:	mov	r1, fp
   12354:	mov	r0, r8
   12358:	str	ip, [sp, #40]	; 0x28
   1235c:	bl	10dac <__strtoull_internal@plt>
   12360:	ldr	sl, [sp, #40]	; 0x28
   12364:	cmp	sl, r8
   12368:	mov	r2, r0
   1236c:	mov	r3, r1
   12370:	ldr	r0, [r4]
   12374:	strd	r2, [sp, #16]
   12378:	beq	12660 <strspn@plt+0x16a4>
   1237c:	cmp	r0, #0
   12380:	bne	12508 <strspn@plt+0x154c>
   12384:	cmp	sl, #0
   12388:	beq	12694 <strspn@plt+0x16d8>
   1238c:	ldrsb	r0, [sl]
   12390:	cmp	r0, #0
   12394:	beq	12688 <strspn@plt+0x16cc>
   12398:	mov	r8, #0
   1239c:	mov	r2, #0
   123a0:	mov	r3, #0
   123a4:	str	r9, [sp, #32]
   123a8:	mov	r6, fp
   123ac:	mov	r9, sl
   123b0:	mov	r7, r8
   123b4:	mov	sl, r2
   123b8:	mov	fp, r3
   123bc:	str	r5, [sp, #28]
   123c0:	ldrsb	r2, [r9, #1]
   123c4:	cmp	r2, #105	; 0x69
   123c8:	beq	1254c <strspn@plt+0x1590>
   123cc:	bic	r1, r2, #32
   123d0:	cmp	r1, #66	; 0x42
   123d4:	bne	1266c <strspn@plt+0x16b0>
   123d8:	ldrsb	r2, [r9, #2]
   123dc:	cmp	r2, #0
   123e0:	beq	12850 <strspn@plt+0x1894>
   123e4:	bl	10f5c <localeconv@plt>
   123e8:	cmp	r0, #0
   123ec:	beq	124e0 <strspn@plt+0x1524>
   123f0:	ldr	r2, [r0]
   123f4:	cmp	r2, #0
   123f8:	beq	124e0 <strspn@plt+0x1524>
   123fc:	mov	r0, r2
   12400:	str	r2, [sp]
   12404:	bl	10e84 <strlen@plt>
   12408:	orrs	r3, sl, fp
   1240c:	mov	r5, r0
   12410:	bne	124e0 <strspn@plt+0x1524>
   12414:	ldrsb	r1, [r9]
   12418:	cmp	r1, #0
   1241c:	beq	124e0 <strspn@plt+0x1524>
   12420:	ldr	r2, [sp]
   12424:	mov	r1, r9
   12428:	mov	r0, r2
   1242c:	mov	r2, r5
   12430:	bl	10f8c <strncmp@plt>
   12434:	cmp	r0, #0
   12438:	bne	124e0 <strspn@plt+0x1524>
   1243c:	ldrsb	r2, [r9, r5]
   12440:	add	r5, r9, r5
   12444:	cmp	r2, #48	; 0x30
   12448:	bne	12468 <strspn@plt+0x14ac>
   1244c:	add	r8, r8, #1
   12450:	sub	r1, r8, r5
   12454:	mov	r3, r5
   12458:	add	r8, r3, r1
   1245c:	ldrsb	r2, [r3, #1]!
   12460:	cmp	r2, #48	; 0x30
   12464:	beq	12458 <strspn@plt+0x149c>
   12468:	mov	r3, #0
   1246c:	str	r7, [r4]
   12470:	mov	r2, r3
   12474:	mov	r1, r6
   12478:	mov	r0, r5
   1247c:	str	r7, [sp, #40]	; 0x28
   12480:	bl	10dac <__strtoull_internal@plt>
   12484:	ldr	r9, [sp, #40]	; 0x28
   12488:	cmp	r9, r5
   1248c:	mov	sl, r0
   12490:	mov	fp, r1
   12494:	beq	1265c <strspn@plt+0x16a0>
   12498:	ldr	ip, [r4]
   1249c:	cmp	ip, #0
   124a0:	beq	12538 <strspn@plt+0x157c>
   124a4:	subs	r3, r0, #1
   124a8:	str	r3, [sp, #8]
   124ac:	sbc	r3, r1, #0
   124b0:	str	r3, [sp, #12]
   124b4:	ldrd	r2, [sp, #8]
   124b8:	mvn	r1, #0
   124bc:	mvn	r0, #2
   124c0:	cmp	r3, r1
   124c4:	cmpeq	r2, r0
   124c8:	bhi	1288c <strspn@plt+0x18d0>
   124cc:	cmp	r9, #0
   124d0:	beq	124e0 <strspn@plt+0x1524>
   124d4:	ldrsb	r2, [r9]
   124d8:	cmp	r2, #0
   124dc:	bne	123c0 <strspn@plt+0x1404>
   124e0:	mov	r3, #22
   124e4:	mvn	r0, #21
   124e8:	str	r3, [r4]
   124ec:	ldr	r3, [sp, #24]
   124f0:	ldr	r2, [sp, #44]	; 0x2c
   124f4:	ldr	r3, [r3]
   124f8:	cmp	r2, r3
   124fc:	bne	12928 <strspn@plt+0x196c>
   12500:	add	sp, sp, #52	; 0x34
   12504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12508:	subs	r6, r2, #1
   1250c:	sbc	r7, r3, #0
   12510:	mvn	r3, #0
   12514:	mvn	r2, #2
   12518:	cmp	r7, r3
   1251c:	cmpeq	r6, r2
   12520:	bls	12384 <strspn@plt+0x13c8>
   12524:	rsb	r0, r0, #0
   12528:	cmp	r0, #0
   1252c:	bge	124ec <strspn@plt+0x1530>
   12530:	rsb	r3, r0, #0
   12534:	b	124e8 <strspn@plt+0x152c>
   12538:	orrs	r3, sl, fp
   1253c:	bne	124cc <strspn@plt+0x1510>
   12540:	ldrsb	r2, [r9, #1]
   12544:	cmp	r2, #105	; 0x69
   12548:	bne	123cc <strspn@plt+0x1410>
   1254c:	ldrsb	r2, [r9, #2]
   12550:	bic	r2, r2, #32
   12554:	cmp	r2, #66	; 0x42
   12558:	bne	123e4 <strspn@plt+0x1428>
   1255c:	ldrsb	r2, [r9, #3]
   12560:	cmp	r2, #0
   12564:	bne	123e4 <strspn@plt+0x1428>
   12568:	strd	sl, [sp]
   1256c:	mov	sl, r9
   12570:	ldr	r9, [sp, #32]
   12574:	mov	r3, #1024	; 0x400
   12578:	ldr	r5, [sp, #28]
   1257c:	str	r3, [sp, #28]
   12580:	ldrsb	r7, [sl]
   12584:	ldr	r6, [pc, #936]	; 12934 <strspn@plt+0x1978>
   12588:	add	r6, pc, r6
   1258c:	mov	r1, r7
   12590:	mov	r0, r6
   12594:	bl	10e90 <strchr@plt>
   12598:	cmp	r0, #0
   1259c:	beq	1286c <strspn@plt+0x18b0>
   125a0:	sub	ip, r0, r6
   125a4:	add	fp, ip, #1
   125a8:	cmp	fp, #0
   125ac:	beq	12678 <strspn@plt+0x16bc>
   125b0:	ldr	r3, [sp, #20]
   125b4:	ldr	r6, [sp, #28]
   125b8:	cmp	r3, #0
   125bc:	mov	r0, #0
   125c0:	asr	r7, r6, #31
   125c4:	mov	r1, #0
   125c8:	bne	128c8 <strspn@plt+0x190c>
   125cc:	orrs	r3, r0, r1
   125d0:	bne	126bc <strspn@plt+0x1700>
   125d4:	str	fp, [sp, #32]
   125d8:	sub	ip, ip, #1
   125dc:	str	r8, [sp, #36]	; 0x24
   125e0:	mov	fp, r4
   125e4:	ldrd	r0, [sp, #16]
   125e8:	mov	lr, r5
   125ec:	mov	sl, r9
   125f0:	b	12600 <strspn@plt+0x1644>
   125f4:	orrs	r3, r4, r5
   125f8:	sub	ip, ip, #1
   125fc:	bne	126a4 <strspn@plt+0x16e8>
   12600:	mul	r2, r0, r7
   12604:	cmn	ip, #1
   12608:	mla	r2, r6, r1, r2
   1260c:	umull	r0, r1, r0, r6
   12610:	add	r2, r2, r1
   12614:	mov	r1, r2
   12618:	beq	12830 <strspn@plt+0x1874>
   1261c:	cmp	r2, #0
   12620:	mov	r4, #0
   12624:	mov	r5, #0
   12628:	beq	125f4 <strspn@plt+0x1638>
   1262c:	umull	r2, r3, r6, r2
   12630:	umull	r8, r9, r0, r6
   12634:	strd	r2, [sp, #8]
   12638:	mov	r8, r9
   1263c:	ldr	r3, [sp, #12]
   12640:	adds	r8, r2, r8
   12644:	mov	r2, #0
   12648:	adc	r3, r3, r2
   1264c:	cmp	r3, r2
   12650:	movne	r4, #1
   12654:	movne	r5, #0
   12658:	b	125f4 <strspn@plt+0x1638>
   1265c:	ldr	r0, [r4]
   12660:	cmp	r0, #0
   12664:	beq	124e0 <strspn@plt+0x1524>
   12668:	b	12524 <strspn@plt+0x1568>
   1266c:	cmp	r2, #0
   12670:	bne	123e4 <strspn@plt+0x1428>
   12674:	b	12568 <strspn@plt+0x15ac>
   12678:	cmp	r9, #0
   1267c:	movne	r0, fp
   12680:	bne	126c8 <strspn@plt+0x170c>
   12684:	mov	r0, r9
   12688:	ldrd	r2, [sp, #16]
   1268c:	strd	r2, [r5]
   12690:	b	124ec <strspn@plt+0x1530>
   12694:	ldrd	r2, [sp, #16]
   12698:	mov	r0, sl
   1269c:	strd	r2, [r5]
   126a0:	b	124ec <strspn@plt+0x1530>
   126a4:	mov	r4, fp
   126a8:	ldr	r8, [sp, #36]	; 0x24
   126ac:	ldr	fp, [sp, #32]
   126b0:	mov	r5, lr
   126b4:	mov	r9, sl
   126b8:	strd	r0, [sp, #16]
   126bc:	mvn	r0, #33	; 0x21
   126c0:	cmp	r9, #0
   126c4:	beq	126cc <strspn@plt+0x1710>
   126c8:	str	fp, [r9]
   126cc:	ldrd	r2, [sp]
   126d0:	mov	r1, r2
   126d4:	orrs	r3, r1, r3
   126d8:	movne	r3, #1
   126dc:	moveq	r3, #0
   126e0:	cmp	fp, #0
   126e4:	moveq	r3, #0
   126e8:	cmp	r3, #0
   126ec:	beq	12824 <strspn@plt+0x1868>
   126f0:	ldr	r3, [pc, #576]	; 12938 <strspn@plt+0x197c>
   126f4:	ldr	r1, [pc, #576]	; 1293c <strspn@plt+0x1980>
   126f8:	umull	ip, r3, r3, r8
   126fc:	smull	ip, r1, r1, r8
   12700:	lsr	r3, r3, #1
   12704:	rsb	r1, r1, r8, asr #31
   12708:	add	r3, r3, r3, lsl #1
   1270c:	add	r1, r1, fp
   12710:	subs	r3, r8, r3
   12714:	sub	r6, r1, #1
   12718:	bne	12894 <strspn@plt+0x18d8>
   1271c:	ldrd	r8, [sp]
   12720:	adds	r3, r8, r8
   12724:	adc	r2, r9, r9
   12728:	adds	r3, r3, r8
   1272c:	adc	r2, r2, r9
   12730:	lsl	ip, r3, #5
   12734:	lsl	lr, r2, #5
   12738:	orr	lr, lr, r3, lsr #27
   1273c:	adds	r3, r3, ip
   12740:	adc	r2, r2, lr
   12744:	adds	r3, r8, r3
   12748:	str	r3, [sp]
   1274c:	ldr	r3, [sp, #4]
   12750:	adc	r3, r3, r2
   12754:	str	r3, [sp, #4]
   12758:	cmp	r6, #0
   1275c:	blt	124e0 <strspn@plt+0x1524>
   12760:	beq	12808 <strspn@plt+0x184c>
   12764:	ldr	r3, [sp, #4]
   12768:	ldr	r8, [sp, #28]
   1276c:	cmp	r3, #0
   12770:	mov	r6, #0
   12774:	asr	r9, r8, #31
   12778:	mov	r7, #0
   1277c:	bne	128fc <strspn@plt+0x1940>
   12780:	orrs	r3, r6, r7
   12784:	bne	12808 <strspn@plt+0x184c>
   12788:	sub	r1, r1, #3
   1278c:	ldrd	r2, [sp]
   12790:	mov	lr, r4
   12794:	str	r5, [sp, #8]
   12798:	b	127a8 <strspn@plt+0x17ec>
   1279c:	orrs	ip, r6, r7
   127a0:	sub	r1, r1, #1
   127a4:	bne	127fc <strspn@plt+0x1840>
   127a8:	mul	ip, r2, r9
   127ac:	cmn	r1, #1
   127b0:	mla	ip, r8, r3, ip
   127b4:	umull	r2, r3, r2, r8
   127b8:	add	ip, ip, r3
   127bc:	mov	r3, ip
   127c0:	beq	127fc <strspn@plt+0x1840>
   127c4:	cmp	ip, #0
   127c8:	mov	r6, #0
   127cc:	mov	r7, #0
   127d0:	beq	1279c <strspn@plt+0x17e0>
   127d4:	umull	sl, fp, r2, r8
   127d8:	umull	r4, r5, r8, ip
   127dc:	mov	ip, fp
   127e0:	adds	ip, r4, ip
   127e4:	mov	ip, #0
   127e8:	adc	ip, r5, ip
   127ec:	cmp	ip, #0
   127f0:	movne	r6, #1
   127f4:	movne	r7, #0
   127f8:	b	1279c <strspn@plt+0x17e0>
   127fc:	ldr	r5, [sp, #8]
   12800:	mov	r4, lr
   12804:	strd	r2, [sp]
   12808:	ldrd	r2, [sp]
   1280c:	ldr	r1, [sp, #16]
   12810:	adds	r1, r1, r2
   12814:	str	r1, [sp, #16]
   12818:	ldr	r1, [sp, #20]
   1281c:	adc	r3, r1, r3
   12820:	str	r3, [sp, #20]
   12824:	ldrd	r2, [sp, #16]
   12828:	strd	r2, [r5]
   1282c:	b	12528 <strspn@plt+0x156c>
   12830:	mov	r4, fp
   12834:	strd	r0, [sp, #16]
   12838:	ldr	r8, [sp, #36]	; 0x24
   1283c:	ldr	fp, [sp, #32]
   12840:	mov	r5, lr
   12844:	mov	r9, sl
   12848:	mov	r0, #0
   1284c:	b	126c0 <strspn@plt+0x1704>
   12850:	mov	r3, #1000	; 0x3e8
   12854:	strd	sl, [sp]
   12858:	ldr	r5, [sp, #28]
   1285c:	mov	sl, r9
   12860:	str	r3, [sp, #28]
   12864:	ldr	r9, [sp, #32]
   12868:	b	12580 <strspn@plt+0x15c4>
   1286c:	ldr	r6, [pc, #204]	; 12940 <strspn@plt+0x1984>
   12870:	mov	r1, r7
   12874:	add	r6, pc, r6
   12878:	mov	r0, r6
   1287c:	bl	10e90 <strchr@plt>
   12880:	cmp	r0, #0
   12884:	bne	125a0 <strspn@plt+0x15e4>
   12888:	b	124e0 <strspn@plt+0x1524>
   1288c:	mov	r0, ip
   12890:	b	12524 <strspn@plt+0x1568>
   12894:	cmp	r3, #1
   12898:	bne	12758 <strspn@plt+0x179c>
   1289c:	ldrd	r8, [sp]
   128a0:	lsl	r2, r9, #2
   128a4:	lsl	r3, r8, #2
   128a8:	adds	r3, r3, r8
   128ac:	orr	r2, r2, r8, lsr #30
   128b0:	adc	r2, r2, r9
   128b4:	adds	r3, r3, r3
   128b8:	str	r3, [sp]
   128bc:	adc	r3, r2, r2
   128c0:	str	r3, [sp, #4]
   128c4:	b	12758 <strspn@plt+0x179c>
   128c8:	ldr	lr, [sp, #28]
   128cc:	ldr	r3, [sp, #16]
   128d0:	ldr	sl, [sp, #20]
   128d4:	umull	r2, r3, r3, lr
   128d8:	str	r3, [sp, #8]
   128dc:	mov	r3, #0
   128e0:	str	r3, [sp, #12]
   128e4:	ldrd	r2, [sp, #8]
   128e8:	umlal	r2, r3, sl, lr
   128ec:	cmp	r3, #0
   128f0:	movne	r0, #1
   128f4:	movne	r1, #0
   128f8:	b	125cc <strspn@plt+0x1610>
   128fc:	ldr	r3, [sp]
   12900:	ldr	ip, [sp, #28]
   12904:	ldr	lr, [sp, #4]
   12908:	umull	sl, fp, r3, ip
   1290c:	mov	r3, #0
   12910:	mov	r2, fp
   12914:	umlal	r2, r3, lr, ip
   12918:	cmp	r3, #0
   1291c:	movne	r6, #1
   12920:	movne	r7, #0
   12924:	b	12780 <strspn@plt+0x17c4>
   12928:	bl	10dd0 <__stack_chk_fail@plt>
   1292c:	andeq	r2, r1, r8, asr #24
   12930:	andeq	r0, r0, ip, ror #1
   12934:	andeq	r2, r0, r8, ror #11
   12938:	bge	feabd3ec <optarg@@GLIBC_2.4+0xfea983c4>
   1293c:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12940:	andeq	r2, r0, r8, lsl #6
   12944:	mov	r2, #0
   12948:	b	122b4 <strspn@plt+0x12f8>
   1294c:	push	{r4, r5, r6, lr}
   12950:	subs	r5, r0, #0
   12954:	mov	r6, r1
   12958:	beq	129c4 <strspn@plt+0x1a08>
   1295c:	ldrsb	r4, [r5]
   12960:	cmp	r4, #0
   12964:	beq	129d8 <strspn@plt+0x1a1c>
   12968:	bl	10e60 <__ctype_b_loc@plt>
   1296c:	mov	r3, r5
   12970:	ldr	r0, [r0]
   12974:	b	1298c <strspn@plt+0x19d0>
   12978:	adds	r3, r3, #1
   1297c:	beq	129c4 <strspn@plt+0x1a08>
   12980:	ldrsb	r4, [r3]
   12984:	cmp	r4, #0
   12988:	beq	129a0 <strspn@plt+0x19e4>
   1298c:	uxtb	r4, r4
   12990:	lsl	r4, r4, #1
   12994:	ldrh	r2, [r0, r4]
   12998:	tst	r2, #2048	; 0x800
   1299c:	bne	12978 <strspn@plt+0x19bc>
   129a0:	cmp	r6, #0
   129a4:	strne	r3, [r6]
   129a8:	cmp	r5, r3
   129ac:	bcs	129d0 <strspn@plt+0x1a14>
   129b0:	ldrsb	r3, [r3]
   129b4:	cmp	r3, #0
   129b8:	bne	129d0 <strspn@plt+0x1a14>
   129bc:	mov	r0, #1
   129c0:	pop	{r4, r5, r6, pc}
   129c4:	cmp	r6, #0
   129c8:	movne	r3, #0
   129cc:	strne	r3, [r6]
   129d0:	mov	r0, #0
   129d4:	pop	{r4, r5, r6, pc}
   129d8:	cmp	r1, #0
   129dc:	strne	r5, [r1]
   129e0:	b	129d0 <strspn@plt+0x1a14>
   129e4:	push	{r4, r5, r6, lr}
   129e8:	subs	r5, r0, #0
   129ec:	mov	r6, r1
   129f0:	beq	12a5c <strspn@plt+0x1aa0>
   129f4:	ldrsb	r4, [r5]
   129f8:	cmp	r4, #0
   129fc:	beq	12a70 <strspn@plt+0x1ab4>
   12a00:	bl	10e60 <__ctype_b_loc@plt>
   12a04:	mov	r3, r5
   12a08:	ldr	r0, [r0]
   12a0c:	b	12a24 <strspn@plt+0x1a68>
   12a10:	adds	r3, r3, #1
   12a14:	beq	12a5c <strspn@plt+0x1aa0>
   12a18:	ldrsb	r4, [r3]
   12a1c:	cmp	r4, #0
   12a20:	beq	12a38 <strspn@plt+0x1a7c>
   12a24:	uxtb	r4, r4
   12a28:	lsl	r4, r4, #1
   12a2c:	ldrh	r2, [r0, r4]
   12a30:	tst	r2, #4096	; 0x1000
   12a34:	bne	12a10 <strspn@plt+0x1a54>
   12a38:	cmp	r6, #0
   12a3c:	strne	r3, [r6]
   12a40:	cmp	r5, r3
   12a44:	bcs	12a68 <strspn@plt+0x1aac>
   12a48:	ldrsb	r3, [r3]
   12a4c:	cmp	r3, #0
   12a50:	bne	12a68 <strspn@plt+0x1aac>
   12a54:	mov	r0, #1
   12a58:	pop	{r4, r5, r6, pc}
   12a5c:	cmp	r6, #0
   12a60:	movne	r3, #0
   12a64:	strne	r3, [r6]
   12a68:	mov	r0, #0
   12a6c:	pop	{r4, r5, r6, pc}
   12a70:	cmp	r1, #0
   12a74:	strne	r5, [r1]
   12a78:	b	12a68 <strspn@plt+0x1aac>
   12a7c:	push	{r1, r2, r3}
   12a80:	ldr	r3, [pc, #188]	; 12b44 <strspn@plt+0x1b88>
   12a84:	ldr	r2, [pc, #188]	; 12b48 <strspn@plt+0x1b8c>
   12a88:	add	r3, pc, r3
   12a8c:	push	{r4, r5, r6, r7, r8, lr}
   12a90:	sub	sp, sp, #12
   12a94:	ldr	r7, [r3, r2]
   12a98:	ldr	r8, [sp, #36]	; 0x24
   12a9c:	mov	r6, r0
   12aa0:	ldr	r3, [r7]
   12aa4:	add	r4, sp, #48	; 0x30
   12aa8:	str	r3, [sp, #4]
   12aac:	b	12ac8 <strspn@plt+0x1b0c>
   12ab0:	mov	r1, r5
   12ab4:	mov	r0, r6
   12ab8:	bl	10d40 <strcmp@plt>
   12abc:	add	r4, r4, #8
   12ac0:	cmp	r0, #0
   12ac4:	beq	12b00 <strspn@plt+0x1b44>
   12ac8:	ldr	r1, [r4, #-8]
   12acc:	sub	r3, r4, #4
   12ad0:	cmp	r1, #0
   12ad4:	str	r3, [sp]
   12ad8:	beq	12b20 <strspn@plt+0x1b64>
   12adc:	ldr	r5, [r4, #-4]
   12ae0:	str	r4, [sp]
   12ae4:	cmp	r5, #0
   12ae8:	beq	12b20 <strspn@plt+0x1b64>
   12aec:	mov	r0, r6
   12af0:	bl	10d40 <strcmp@plt>
   12af4:	cmp	r0, #0
   12af8:	bne	12ab0 <strspn@plt+0x1af4>
   12afc:	mov	r0, #1
   12b00:	ldr	r2, [sp, #4]
   12b04:	ldr	r3, [r7]
   12b08:	cmp	r2, r3
   12b0c:	bne	12b40 <strspn@plt+0x1b84>
   12b10:	add	sp, sp, #12
   12b14:	pop	{r4, r5, r6, r7, r8, lr}
   12b18:	add	sp, sp, #12
   12b1c:	bx	lr
   12b20:	ldr	r1, [pc, #36]	; 12b4c <strspn@plt+0x1b90>
   12b24:	mov	r3, r6
   12b28:	add	r1, pc, r1
   12b2c:	mov	r2, r8
   12b30:	ldr	r0, [r1]
   12b34:	ldr	r1, [pc, #20]	; 12b50 <strspn@plt+0x1b94>
   12b38:	add	r1, pc, r1
   12b3c:	bl	10f38 <errx@plt>
   12b40:	bl	10dd0 <__stack_chk_fail@plt>
   12b44:	andeq	r2, r1, ip, ror r4
   12b48:	andeq	r0, r0, ip, ror #1
   12b4c:	ldrdeq	r2, [r1], -r8
   12b50:	andeq	r2, r0, ip, lsr #32
   12b54:	cmp	r1, #0
   12b58:	beq	12ba4 <strspn@plt+0x1be8>
   12b5c:	ldrsb	r3, [r0]
   12b60:	cmp	r3, #0
   12b64:	beq	12ba4 <strspn@plt+0x1be8>
   12b68:	sxtb	r2, r2
   12b6c:	cmp	r3, r2
   12b70:	bxeq	lr
   12b74:	add	r1, r0, r1
   12b78:	add	r3, r0, #1
   12b7c:	b	12b98 <strspn@plt+0x1bdc>
   12b80:	ldrsb	ip, [r3]
   12b84:	add	r3, r3, #1
   12b88:	cmp	ip, #0
   12b8c:	beq	12ba4 <strspn@plt+0x1be8>
   12b90:	cmp	ip, r2
   12b94:	bxeq	lr
   12b98:	cmp	r3, r1
   12b9c:	mov	r0, r3
   12ba0:	bne	12b80 <strspn@plt+0x1bc4>
   12ba4:	mov	r0, #0
   12ba8:	bx	lr
   12bac:	push	{r4, r5, r6, lr}
   12bb0:	mov	r2, #10
   12bb4:	mov	r4, r0
   12bb8:	mov	r5, r1
   12bbc:	bl	12270 <strspn@plt+0x12b4>
   12bc0:	cmp	r0, #65536	; 0x10000
   12bc4:	bcs	12bd0 <strspn@plt+0x1c14>
   12bc8:	uxth	r0, r0
   12bcc:	pop	{r4, r5, r6, pc}
   12bd0:	mov	r1, r5
   12bd4:	mov	r0, r4
   12bd8:	bl	12230 <strspn@plt+0x1274>
   12bdc:	push	{r4, r5, r6, lr}
   12be0:	mov	r2, #16
   12be4:	mov	r4, r0
   12be8:	mov	r5, r1
   12bec:	bl	12270 <strspn@plt+0x12b4>
   12bf0:	cmp	r0, #65536	; 0x10000
   12bf4:	bcs	12c00 <strspn@plt+0x1c44>
   12bf8:	uxth	r0, r0
   12bfc:	pop	{r4, r5, r6, pc}
   12c00:	mov	r1, r5
   12c04:	mov	r0, r4
   12c08:	bl	12230 <strspn@plt+0x1274>
   12c0c:	mov	r2, #10
   12c10:	b	12270 <strspn@plt+0x12b4>
   12c14:	mov	r2, #16
   12c18:	b	12270 <strspn@plt+0x12b4>
   12c1c:	ldr	r2, [pc, #236]	; 12d10 <strspn@plt+0x1d54>
   12c20:	ldr	ip, [pc, #236]	; 12d14 <strspn@plt+0x1d58>
   12c24:	add	r2, pc, r2
   12c28:	push	{r4, r5, r6, r7, r8, lr}
   12c2c:	sub	sp, sp, #8
   12c30:	ldr	r7, [r2, ip]
   12c34:	mov	r5, #0
   12c38:	mov	r4, r0
   12c3c:	ldr	r3, [r7]
   12c40:	mov	r8, r1
   12c44:	str	r5, [sp]
   12c48:	str	r3, [sp, #4]
   12c4c:	bl	10eb4 <__errno_location@plt>
   12c50:	cmp	r4, r5
   12c54:	str	r5, [r0]
   12c58:	beq	12c68 <strspn@plt+0x1cac>
   12c5c:	ldrsb	r3, [r4]
   12c60:	cmp	r3, r5
   12c64:	bne	12c88 <strspn@plt+0x1ccc>
   12c68:	ldr	r1, [pc, #168]	; 12d18 <strspn@plt+0x1d5c>
   12c6c:	mov	r3, r4
   12c70:	add	r1, pc, r1
   12c74:	mov	r2, r8
   12c78:	ldr	r0, [r1]
   12c7c:	ldr	r1, [pc, #152]	; 12d1c <strspn@plt+0x1d60>
   12c80:	add	r1, pc, r1
   12c84:	bl	10f38 <errx@plt>
   12c88:	mov	r6, r0
   12c8c:	mov	r2, #10
   12c90:	mov	r3, r5
   12c94:	mov	r1, sp
   12c98:	mov	r0, r4
   12c9c:	bl	10f68 <__strtoll_internal@plt>
   12ca0:	ldr	r2, [r6]
   12ca4:	cmp	r2, r5
   12ca8:	bne	12ce4 <strspn@plt+0x1d28>
   12cac:	ldr	r3, [sp]
   12cb0:	cmp	r3, r4
   12cb4:	beq	12c68 <strspn@plt+0x1cac>
   12cb8:	cmp	r3, r5
   12cbc:	beq	12ccc <strspn@plt+0x1d10>
   12cc0:	ldrsb	r3, [r3]
   12cc4:	cmp	r3, r5
   12cc8:	bne	12c68 <strspn@plt+0x1cac>
   12ccc:	ldr	r2, [sp, #4]
   12cd0:	ldr	r3, [r7]
   12cd4:	cmp	r2, r3
   12cd8:	bne	12d0c <strspn@plt+0x1d50>
   12cdc:	add	sp, sp, #8
   12ce0:	pop	{r4, r5, r6, r7, r8, pc}
   12ce4:	ldr	r3, [pc, #52]	; 12d20 <strspn@plt+0x1d64>
   12ce8:	cmp	r2, #34	; 0x22
   12cec:	add	r3, pc, r3
   12cf0:	ldr	r0, [r3]
   12cf4:	bne	12c68 <strspn@plt+0x1cac>
   12cf8:	ldr	r1, [pc, #36]	; 12d24 <strspn@plt+0x1d68>
   12cfc:	mov	r3, r4
   12d00:	mov	r2, r8
   12d04:	add	r1, pc, r1
   12d08:	bl	10de8 <err@plt>
   12d0c:	bl	10dd0 <__stack_chk_fail@plt>
   12d10:	andeq	r2, r1, r0, ror #5
   12d14:	andeq	r0, r0, ip, ror #1
   12d18:	muleq	r1, r0, r3
   12d1c:	andeq	r1, r0, r4, ror #29
   12d20:	andeq	r2, r1, r4, lsl r3
   12d24:	andeq	r1, r0, r0, ror #28
   12d28:	push	{r4, r5, r6, r7, r8, lr}
   12d2c:	mov	r7, r0
   12d30:	mov	r6, r1
   12d34:	bl	12c1c <strspn@plt+0x1c60>
   12d38:	mov	r3, #0
   12d3c:	mvn	r2, #0
   12d40:	adds	r4, r0, #-2147483648	; 0x80000000
   12d44:	adc	r5, r1, #0
   12d48:	cmp	r5, r3
   12d4c:	cmpeq	r4, r2
   12d50:	popls	{r4, r5, r6, r7, r8, pc}
   12d54:	bl	10eb4 <__errno_location@plt>
   12d58:	ldr	ip, [pc, #32]	; 12d80 <strspn@plt+0x1dc4>
   12d5c:	ldr	r1, [pc, #32]	; 12d84 <strspn@plt+0x1dc8>
   12d60:	add	ip, pc, ip
   12d64:	mov	lr, #34	; 0x22
   12d68:	mov	r3, r7
   12d6c:	mov	r2, r6
   12d70:	add	r1, pc, r1
   12d74:	str	lr, [r0]
   12d78:	ldr	r0, [ip]
   12d7c:	bl	10de8 <err@plt>
   12d80:	andeq	r2, r1, r0, lsr #5
   12d84:	strdeq	r1, [r0], -r4
   12d88:	push	{r4, r5, r6, lr}
   12d8c:	mov	r5, r0
   12d90:	mov	r4, r1
   12d94:	bl	12d28 <strspn@plt+0x1d6c>
   12d98:	add	r3, r0, #32768	; 0x8000
   12d9c:	cmp	r3, #65536	; 0x10000
   12da0:	bcs	12dac <strspn@plt+0x1df0>
   12da4:	sxth	r0, r0
   12da8:	pop	{r4, r5, r6, pc}
   12dac:	bl	10eb4 <__errno_location@plt>
   12db0:	ldr	ip, [pc, #32]	; 12dd8 <strspn@plt+0x1e1c>
   12db4:	ldr	r1, [pc, #32]	; 12ddc <strspn@plt+0x1e20>
   12db8:	add	ip, pc, ip
   12dbc:	mov	lr, #34	; 0x22
   12dc0:	mov	r3, r5
   12dc4:	mov	r2, r4
   12dc8:	add	r1, pc, r1
   12dcc:	str	lr, [r0]
   12dd0:	ldr	r0, [ip]
   12dd4:	bl	10de8 <err@plt>
   12dd8:	andeq	r2, r1, r8, asr #4
   12ddc:	muleq	r0, ip, sp
   12de0:	mov	r2, #10
   12de4:	b	1211c <strspn@plt+0x1160>
   12de8:	mov	r2, #16
   12dec:	b	1211c <strspn@plt+0x1160>
   12df0:	ldr	r2, [pc, #228]	; 12edc <strspn@plt+0x1f20>
   12df4:	ldr	r3, [pc, #228]	; 12ee0 <strspn@plt+0x1f24>
   12df8:	add	r2, pc, r2
   12dfc:	push	{r4, r5, r6, r7, r8, lr}
   12e00:	sub	sp, sp, #8
   12e04:	ldr	r7, [r2, r3]
   12e08:	mov	r5, #0
   12e0c:	mov	r4, r0
   12e10:	ldr	r3, [r7]
   12e14:	mov	r8, r1
   12e18:	str	r5, [sp]
   12e1c:	str	r3, [sp, #4]
   12e20:	bl	10eb4 <__errno_location@plt>
   12e24:	cmp	r4, r5
   12e28:	str	r5, [r0]
   12e2c:	beq	12e3c <strspn@plt+0x1e80>
   12e30:	ldrsb	r3, [r4]
   12e34:	cmp	r3, r5
   12e38:	bne	12e5c <strspn@plt+0x1ea0>
   12e3c:	ldr	r1, [pc, #160]	; 12ee4 <strspn@plt+0x1f28>
   12e40:	mov	r3, r4
   12e44:	add	r1, pc, r1
   12e48:	mov	r2, r8
   12e4c:	ldr	r0, [r1]
   12e50:	ldr	r1, [pc, #144]	; 12ee8 <strspn@plt+0x1f2c>
   12e54:	add	r1, pc, r1
   12e58:	bl	10f38 <errx@plt>
   12e5c:	mov	r6, r0
   12e60:	mov	r1, sp
   12e64:	mov	r0, r4
   12e68:	bl	10ef0 <strtod@plt>
   12e6c:	ldr	r2, [r6]
   12e70:	cmp	r2, r5
   12e74:	bne	12eb0 <strspn@plt+0x1ef4>
   12e78:	ldr	r3, [sp]
   12e7c:	cmp	r3, r4
   12e80:	beq	12e3c <strspn@plt+0x1e80>
   12e84:	cmp	r3, r5
   12e88:	beq	12e98 <strspn@plt+0x1edc>
   12e8c:	ldrsb	r3, [r3]
   12e90:	cmp	r3, r5
   12e94:	bne	12e3c <strspn@plt+0x1e80>
   12e98:	ldr	r2, [sp, #4]
   12e9c:	ldr	r3, [r7]
   12ea0:	cmp	r2, r3
   12ea4:	bne	12ed8 <strspn@plt+0x1f1c>
   12ea8:	add	sp, sp, #8
   12eac:	pop	{r4, r5, r6, r7, r8, pc}
   12eb0:	ldr	r3, [pc, #52]	; 12eec <strspn@plt+0x1f30>
   12eb4:	cmp	r2, #34	; 0x22
   12eb8:	add	r3, pc, r3
   12ebc:	ldr	r0, [r3]
   12ec0:	bne	12e3c <strspn@plt+0x1e80>
   12ec4:	ldr	r1, [pc, #36]	; 12ef0 <strspn@plt+0x1f34>
   12ec8:	mov	r3, r4
   12ecc:	mov	r2, r8
   12ed0:	add	r1, pc, r1
   12ed4:	bl	10de8 <err@plt>
   12ed8:	bl	10dd0 <__stack_chk_fail@plt>
   12edc:	andeq	r2, r1, ip, lsl #2
   12ee0:	andeq	r0, r0, ip, ror #1
   12ee4:			; <UNDEFINED> instruction: 0x000121bc
   12ee8:	andeq	r1, r0, r0, lsl sp
   12eec:	andeq	r2, r1, r8, asr #2
   12ef0:	muleq	r0, r4, ip
   12ef4:	ldr	r2, [pc, #232]	; 12fe4 <strspn@plt+0x2028>
   12ef8:	ldr	r3, [pc, #232]	; 12fe8 <strspn@plt+0x202c>
   12efc:	add	r2, pc, r2
   12f00:	push	{r4, r5, r6, r7, r8, lr}
   12f04:	sub	sp, sp, #8
   12f08:	ldr	r7, [r2, r3]
   12f0c:	mov	r5, #0
   12f10:	mov	r4, r0
   12f14:	ldr	r3, [r7]
   12f18:	mov	r8, r1
   12f1c:	str	r5, [sp]
   12f20:	str	r3, [sp, #4]
   12f24:	bl	10eb4 <__errno_location@plt>
   12f28:	cmp	r4, r5
   12f2c:	str	r5, [r0]
   12f30:	beq	12f40 <strspn@plt+0x1f84>
   12f34:	ldrsb	r3, [r4]
   12f38:	cmp	r3, r5
   12f3c:	bne	12f60 <strspn@plt+0x1fa4>
   12f40:	ldr	r1, [pc, #164]	; 12fec <strspn@plt+0x2030>
   12f44:	mov	r3, r4
   12f48:	add	r1, pc, r1
   12f4c:	mov	r2, r8
   12f50:	ldr	r0, [r1]
   12f54:	ldr	r1, [pc, #148]	; 12ff0 <strspn@plt+0x2034>
   12f58:	add	r1, pc, r1
   12f5c:	bl	10f38 <errx@plt>
   12f60:	mov	r6, r0
   12f64:	mov	r2, #10
   12f68:	mov	r1, sp
   12f6c:	mov	r0, r4
   12f70:	bl	10d4c <strtol@plt>
   12f74:	ldr	r2, [r6]
   12f78:	cmp	r2, r5
   12f7c:	bne	12fb8 <strspn@plt+0x1ffc>
   12f80:	ldr	r3, [sp]
   12f84:	cmp	r3, r4
   12f88:	beq	12f40 <strspn@plt+0x1f84>
   12f8c:	cmp	r3, r5
   12f90:	beq	12fa0 <strspn@plt+0x1fe4>
   12f94:	ldrsb	r3, [r3]
   12f98:	cmp	r3, r5
   12f9c:	bne	12f40 <strspn@plt+0x1f84>
   12fa0:	ldr	r2, [sp, #4]
   12fa4:	ldr	r3, [r7]
   12fa8:	cmp	r2, r3
   12fac:	bne	12fe0 <strspn@plt+0x2024>
   12fb0:	add	sp, sp, #8
   12fb4:	pop	{r4, r5, r6, r7, r8, pc}
   12fb8:	ldr	r3, [pc, #52]	; 12ff4 <strspn@plt+0x2038>
   12fbc:	cmp	r2, #34	; 0x22
   12fc0:	add	r3, pc, r3
   12fc4:	ldr	r0, [r3]
   12fc8:	bne	12f40 <strspn@plt+0x1f84>
   12fcc:	ldr	r1, [pc, #36]	; 12ff8 <strspn@plt+0x203c>
   12fd0:	mov	r3, r4
   12fd4:	mov	r2, r8
   12fd8:	add	r1, pc, r1
   12fdc:	bl	10de8 <err@plt>
   12fe0:	bl	10dd0 <__stack_chk_fail@plt>
   12fe4:	andeq	r2, r1, r8
   12fe8:	andeq	r0, r0, ip, ror #1
   12fec:	strheq	r2, [r1], -r8
   12ff0:	andeq	r1, r0, ip, lsl #24
   12ff4:	andeq	r2, r1, r0, asr #32
   12ff8:	andeq	r1, r0, ip, lsl #23
   12ffc:	ldr	r2, [pc, #232]	; 130ec <strspn@plt+0x2130>
   13000:	ldr	r3, [pc, #232]	; 130f0 <strspn@plt+0x2134>
   13004:	add	r2, pc, r2
   13008:	push	{r4, r5, r6, r7, r8, lr}
   1300c:	sub	sp, sp, #8
   13010:	ldr	r7, [r2, r3]
   13014:	mov	r5, #0
   13018:	mov	r4, r0
   1301c:	ldr	r3, [r7]
   13020:	mov	r8, r1
   13024:	str	r5, [sp]
   13028:	str	r3, [sp, #4]
   1302c:	bl	10eb4 <__errno_location@plt>
   13030:	cmp	r4, r5
   13034:	str	r5, [r0]
   13038:	beq	13048 <strspn@plt+0x208c>
   1303c:	ldrsb	r3, [r4]
   13040:	cmp	r3, r5
   13044:	bne	13068 <strspn@plt+0x20ac>
   13048:	ldr	r1, [pc, #164]	; 130f4 <strspn@plt+0x2138>
   1304c:	mov	r3, r4
   13050:	add	r1, pc, r1
   13054:	mov	r2, r8
   13058:	ldr	r0, [r1]
   1305c:	ldr	r1, [pc, #148]	; 130f8 <strspn@plt+0x213c>
   13060:	add	r1, pc, r1
   13064:	bl	10f38 <errx@plt>
   13068:	mov	r6, r0
   1306c:	mov	r2, #10
   13070:	mov	r1, sp
   13074:	mov	r0, r4
   13078:	bl	10e78 <strtoul@plt>
   1307c:	ldr	r2, [r6]
   13080:	cmp	r2, r5
   13084:	bne	130c0 <strspn@plt+0x2104>
   13088:	ldr	r3, [sp]
   1308c:	cmp	r3, r4
   13090:	beq	13048 <strspn@plt+0x208c>
   13094:	cmp	r3, r5
   13098:	beq	130a8 <strspn@plt+0x20ec>
   1309c:	ldrsb	r3, [r3]
   130a0:	cmp	r3, r5
   130a4:	bne	13048 <strspn@plt+0x208c>
   130a8:	ldr	r2, [sp, #4]
   130ac:	ldr	r3, [r7]
   130b0:	cmp	r2, r3
   130b4:	bne	130e8 <strspn@plt+0x212c>
   130b8:	add	sp, sp, #8
   130bc:	pop	{r4, r5, r6, r7, r8, pc}
   130c0:	ldr	r3, [pc, #52]	; 130fc <strspn@plt+0x2140>
   130c4:	cmp	r2, #34	; 0x22
   130c8:	add	r3, pc, r3
   130cc:	ldr	r0, [r3]
   130d0:	bne	13048 <strspn@plt+0x208c>
   130d4:	ldr	r1, [pc, #36]	; 13100 <strspn@plt+0x2144>
   130d8:	mov	r3, r4
   130dc:	mov	r2, r8
   130e0:	add	r1, pc, r1
   130e4:	bl	10de8 <err@plt>
   130e8:	bl	10dd0 <__stack_chk_fail@plt>
   130ec:	andeq	r1, r1, r0, lsl #30
   130f0:	andeq	r0, r0, ip, ror #1
   130f4:			; <UNDEFINED> instruction: 0x00011fb0
   130f8:	andeq	r1, r0, r4, lsl #22
   130fc:	andeq	r1, r1, r8, lsr pc
   13100:	andeq	r1, r0, r4, lsl #21
   13104:	ldr	r3, [pc, #140]	; 13198 <strspn@plt+0x21dc>
   13108:	ldr	r2, [pc, #140]	; 1319c <strspn@plt+0x21e0>
   1310c:	add	r3, pc, r3
   13110:	push	{r4, r5, r6, lr}
   13114:	sub	sp, sp, #16
   13118:	ldr	r4, [r3, r2]
   1311c:	mov	r5, r1
   13120:	mov	r1, sp
   13124:	ldr	r3, [r4]
   13128:	mov	r6, r0
   1312c:	str	r3, [sp, #12]
   13130:	bl	12944 <strspn@plt+0x1988>
   13134:	cmp	r0, #0
   13138:	beq	13178 <strspn@plt+0x21bc>
   1313c:	bl	10eb4 <__errno_location@plt>
   13140:	ldr	r3, [pc, #88]	; 131a0 <strspn@plt+0x21e4>
   13144:	mov	r2, r5
   13148:	ldr	r1, [pc, r3]
   1314c:	ldr	r3, [r0]
   13150:	mov	r0, r1
   13154:	cmp	r3, #0
   13158:	mov	r3, r6
   1315c:	beq	1316c <strspn@plt+0x21b0>
   13160:	ldr	r1, [pc, #60]	; 131a4 <strspn@plt+0x21e8>
   13164:	add	r1, pc, r1
   13168:	bl	10de8 <err@plt>
   1316c:	ldr	r1, [pc, #52]	; 131a8 <strspn@plt+0x21ec>
   13170:	add	r1, pc, r1
   13174:	bl	10f38 <errx@plt>
   13178:	ldr	r2, [sp, #12]
   1317c:	ldr	r3, [r4]
   13180:	ldrd	r0, [sp]
   13184:	cmp	r2, r3
   13188:	bne	13194 <strspn@plt+0x21d8>
   1318c:	add	sp, sp, #16
   13190:	pop	{r4, r5, r6, pc}
   13194:	bl	10dd0 <__stack_chk_fail@plt>
   13198:	strdeq	r1, [r1], -r8
   1319c:	andeq	r0, r0, ip, ror #1
   131a0:			; <UNDEFINED> instruction: 0x00011eb8
   131a4:	andeq	r1, r0, r0, lsl #20
   131a8:	strdeq	r1, [r0], -r4
   131ac:	push	{r4, lr}
   131b0:	mov	r4, r1
   131b4:	mov	r1, r2
   131b8:	bl	12df0 <strspn@plt+0x1e34>
   131bc:	vldr	d6, [pc, #28]	; 131e0 <strspn@plt+0x2224>
   131c0:	vcvt.s32.f64	s15, d0
   131c4:	vcvt.f64.s32	d5, s15
   131c8:	vstr	s15, [r4]
   131cc:	vsub.f64	d0, d0, d5
   131d0:	vmul.f64	d0, d0, d6
   131d4:	vcvt.s32.f64	s0, d0
   131d8:	vstr	s0, [r4, #4]
   131dc:	pop	{r4, pc}
   131e0:	andeq	r0, r0, r0
   131e4:	smlawbmi	lr, r0, r4, r8
   131e8:	and	r2, r0, #61440	; 0xf000
   131ec:	cmp	r2, #16384	; 0x4000
   131f0:	moveq	r2, r1
   131f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131f8:	moveq	sl, #100	; 0x64
   131fc:	mov	r3, r0
   13200:	add	r9, r1, #1
   13204:	add	r8, r1, #2
   13208:	add	r7, r1, #3
   1320c:	add	r6, r1, #4
   13210:	add	r5, r1, #5
   13214:	add	r4, r1, #6
   13218:	add	lr, r1, #7
   1321c:	add	ip, r1, #8
   13220:	add	r0, r1, #9
   13224:	strbeq	sl, [r2], #10
   13228:	beq	132cc <strspn@plt+0x2310>
   1322c:	cmp	r2, #40960	; 0xa000
   13230:	moveq	r2, r1
   13234:	moveq	sl, #108	; 0x6c
   13238:	strbeq	sl, [r2], #10
   1323c:	beq	132cc <strspn@plt+0x2310>
   13240:	cmp	r2, #8192	; 0x2000
   13244:	moveq	r2, r1
   13248:	moveq	sl, #99	; 0x63
   1324c:	strbeq	sl, [r2], #10
   13250:	beq	132cc <strspn@plt+0x2310>
   13254:	cmp	r2, #24576	; 0x6000
   13258:	moveq	r2, r1
   1325c:	moveq	sl, #98	; 0x62
   13260:	strbeq	sl, [r2], #10
   13264:	beq	132cc <strspn@plt+0x2310>
   13268:	cmp	r2, #49152	; 0xc000
   1326c:	moveq	r2, r1
   13270:	moveq	sl, #115	; 0x73
   13274:	strbeq	sl, [r2], #10
   13278:	beq	132cc <strspn@plt+0x2310>
   1327c:	cmp	r2, #4096	; 0x1000
   13280:	moveq	r2, r1
   13284:	moveq	sl, #112	; 0x70
   13288:	strbeq	sl, [r2], #10
   1328c:	beq	132cc <strspn@plt+0x2310>
   13290:	cmp	r2, #32768	; 0x8000
   13294:	moveq	r2, r1
   13298:	moveq	sl, #45	; 0x2d
   1329c:	strbeq	sl, [r2], #10
   132a0:	beq	132cc <strspn@plt+0x2310>
   132a4:	mov	r2, r0
   132a8:	mov	r0, ip
   132ac:	mov	ip, lr
   132b0:	mov	lr, r4
   132b4:	mov	r4, r5
   132b8:	mov	r5, r6
   132bc:	mov	r6, r7
   132c0:	mov	r7, r8
   132c4:	mov	r8, r9
   132c8:	mov	r9, r1
   132cc:	tst	r3, #256	; 0x100
   132d0:	movne	fp, #114	; 0x72
   132d4:	moveq	fp, #45	; 0x2d
   132d8:	tst	r3, #128	; 0x80
   132dc:	movne	sl, #119	; 0x77
   132e0:	moveq	sl, #45	; 0x2d
   132e4:	tst	r3, #2048	; 0x800
   132e8:	strb	fp, [r9]
   132ec:	and	r9, r3, #64	; 0x40
   132f0:	strb	sl, [r8]
   132f4:	beq	13390 <strspn@plt+0x23d4>
   132f8:	cmp	r9, #0
   132fc:	movne	r9, #115	; 0x73
   13300:	moveq	r9, #83	; 0x53
   13304:	tst	r3, #32
   13308:	movne	r8, #114	; 0x72
   1330c:	moveq	r8, #45	; 0x2d
   13310:	tst	r3, #16
   13314:	strb	r9, [r7]
   13318:	movne	r7, #119	; 0x77
   1331c:	moveq	r7, #45	; 0x2d
   13320:	tst	r3, #1024	; 0x400
   13324:	strb	r8, [r6]
   13328:	and	r6, r3, #8
   1332c:	strb	r7, [r5]
   13330:	beq	133a0 <strspn@plt+0x23e4>
   13334:	cmp	r6, #0
   13338:	movne	r6, #115	; 0x73
   1333c:	moveq	r6, #83	; 0x53
   13340:	tst	r3, #4
   13344:	movne	r5, #114	; 0x72
   13348:	moveq	r5, #45	; 0x2d
   1334c:	tst	r3, #2
   13350:	strb	r6, [r4]
   13354:	movne	r4, #119	; 0x77
   13358:	moveq	r4, #45	; 0x2d
   1335c:	tst	r3, #512	; 0x200
   13360:	strb	r5, [lr]
   13364:	and	r3, r3, #1
   13368:	strb	r4, [ip]
   1336c:	beq	133b0 <strspn@plt+0x23f4>
   13370:	cmp	r3, #0
   13374:	movne	ip, #116	; 0x74
   13378:	moveq	ip, #84	; 0x54
   1337c:	mov	r3, #0
   13380:	strb	ip, [r0]
   13384:	mov	r0, r1
   13388:	strb	r3, [r2]
   1338c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13390:	cmp	r9, #0
   13394:	movne	r9, #120	; 0x78
   13398:	moveq	r9, #45	; 0x2d
   1339c:	b	13304 <strspn@plt+0x2348>
   133a0:	cmp	r6, #0
   133a4:	movne	r6, #120	; 0x78
   133a8:	moveq	r6, #45	; 0x2d
   133ac:	b	13340 <strspn@plt+0x2384>
   133b0:	cmp	r3, #0
   133b4:	movne	ip, #120	; 0x78
   133b8:	moveq	ip, #45	; 0x2d
   133bc:	b	1337c <strspn@plt+0x23c0>
   133c0:	ldr	r1, [pc, #680]	; 13670 <strspn@plt+0x26b4>
   133c4:	ldr	ip, [pc, #680]	; 13674 <strspn@plt+0x26b8>
   133c8:	add	r1, pc, r1
   133cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133d0:	sub	sp, sp, #108	; 0x6c
   133d4:	ldr	r8, [r1, ip]
   133d8:	tst	r0, #2
   133dc:	strd	r2, [sp, #32]
   133e0:	ldr	r1, [r8]
   133e4:	addeq	r9, sp, #60	; 0x3c
   133e8:	str	r1, [sp, #100]	; 0x64
   133ec:	ldrd	r2, [sp, #32]
   133f0:	movne	r1, #32
   133f4:	strbne	r1, [sp, #60]	; 0x3c
   133f8:	addne	ip, sp, #61	; 0x3d
   133fc:	addne	r9, sp, #60	; 0x3c
   13400:	moveq	ip, r9
   13404:	mov	r1, #10
   13408:	mov	sl, #1
   1340c:	sub	lr, r1, #32
   13410:	lsl	r4, sl, r1
   13414:	lsl	r5, sl, lr
   13418:	rsb	lr, r1, #32
   1341c:	orr	r5, r5, sl, lsr lr
   13420:	cmp	r3, r5
   13424:	cmpeq	r2, r4
   13428:	bcc	135e4 <strspn@plt+0x2628>
   1342c:	add	r1, r1, #10
   13430:	cmp	r1, #70	; 0x46
   13434:	bne	1340c <strspn@plt+0x2450>
   13438:	mov	lr, ip
   1343c:	strd	r2, [sp, #32]
   13440:	mov	r4, r2
   13444:	tst	r0, #1
   13448:	mov	r2, #69	; 0x45
   1344c:	bic	r5, r3, #-268435456	; 0xf0000000
   13450:	lsr	sl, r3, #28
   13454:	strb	r2, [lr], #1
   13458:	bne	135cc <strspn@plt+0x2610>
   1345c:	orrs	r3, r4, r5
   13460:	mov	r3, #0
   13464:	strb	r3, [lr]
   13468:	beq	1360c <strspn@plt+0x2650>
   1346c:	sub	r2, r1, #20
   13470:	rsb	r0, r2, #32
   13474:	lsr	r3, r4, r2
   13478:	sub	r1, r1, #52	; 0x34
   1347c:	orr	r3, r3, r5, lsl r0
   13480:	orr	r3, r3, r5, lsr r1
   13484:	lsr	r2, r5, r2
   13488:	adds	r6, r3, #50	; 0x32
   1348c:	adc	r7, r2, #0
   13490:	mov	r3, #0
   13494:	mov	r2, #100	; 0x64
   13498:	mov	r0, r6
   1349c:	mov	r1, r7
   134a0:	bl	1419c <strspn@plt+0x31e0>
   134a4:	cmp	r1, #0
   134a8:	cmpeq	r0, #10
   134ac:	mov	r2, r0
   134b0:	mov	r3, r1
   134b4:	addeq	sl, sl, #1
   134b8:	beq	1360c <strspn@plt+0x2650>
   134bc:	cmp	r7, #0
   134c0:	cmpeq	r6, #99	; 0x63
   134c4:	strd	r2, [sp, #32]
   134c8:	bls	1360c <strspn@plt+0x2650>
   134cc:	bl	10f5c <localeconv@plt>
   134d0:	ldrd	r2, [sp, #32]
   134d4:	cmp	r0, #0
   134d8:	beq	13654 <strspn@plt+0x2698>
   134dc:	ldr	r0, [r0]
   134e0:	cmp	r0, #0
   134e4:	beq	13660 <strspn@plt+0x26a4>
   134e8:	ldrsb	r1, [r0]
   134ec:	cmp	r1, #0
   134f0:	ldreq	r0, [pc, #384]	; 13678 <strspn@plt+0x26bc>
   134f4:	addeq	r0, pc, r0
   134f8:	ldr	r1, [pc, #380]	; 1367c <strspn@plt+0x26c0>
   134fc:	strd	r2, [sp, #16]
   13500:	add	r1, pc, r1
   13504:	add	r4, sp, #68	; 0x44
   13508:	mov	r3, #32
   1350c:	str	r0, [sp, #8]
   13510:	str	r1, [sp]
   13514:	str	r9, [sp, #24]
   13518:	str	sl, [sp, #4]
   1351c:	mov	r0, r4
   13520:	mov	r1, r3
   13524:	mov	r2, #1
   13528:	bl	10fb0 <__snprintf_chk@plt>
   1352c:	b	13634 <strspn@plt+0x2678>
   13530:	ldr	r4, [pc, #328]	; 13680 <strspn@plt+0x26c4>
   13534:	mvn	sl, #0
   13538:	ldr	fp, [pc, #324]	; 13684 <strspn@plt+0x26c8>
   1353c:	umull	r2, r3, lr, r4
   13540:	sub	r4, r1, #42	; 0x2a
   13544:	strd	r2, [sp, #40]	; 0x28
   13548:	ldr	r3, [sp, #44]	; 0x2c
   1354c:	lsl	r2, sl, lr
   13550:	lsr	r3, r3, #3
   13554:	str	r3, [sp, #52]	; 0x34
   13558:	ldr	r3, [sp, #32]
   1355c:	str	r4, [sp, #48]	; 0x30
   13560:	orr	r4, r2, sl, lsl r4
   13564:	lsr	r2, r3, lr
   13568:	mov	r3, r2
   1356c:	ldr	r2, [sp, #52]	; 0x34
   13570:	add	fp, pc, fp
   13574:	str	r4, [sp, #40]	; 0x28
   13578:	ldrsb	fp, [fp, r2]
   1357c:	mov	r2, r3
   13580:	ldr	r3, [sp, #36]	; 0x24
   13584:	rsb	r5, lr, #32
   13588:	ldr	r4, [sp, #40]	; 0x28
   1358c:	orr	r2, r2, r3, lsl r5
   13590:	orr	r4, r4, sl, lsr r5
   13594:	ldr	r3, [sp, #32]
   13598:	str	r4, [sp, #40]	; 0x28
   1359c:	cmp	r0, #0
   135a0:	bic	r4, r3, sl, lsl lr
   135a4:	ldr	r0, [sp, #36]	; 0x24
   135a8:	ldr	r3, [sp, #48]	; 0x30
   135ac:	mov	lr, ip
   135b0:	orr	sl, r2, r0, lsr r3
   135b4:	ldr	r3, [sp, #40]	; 0x28
   135b8:	strb	fp, [lr], #1
   135bc:	bic	r5, r0, r3
   135c0:	beq	1345c <strspn@plt+0x24a0>
   135c4:	cmp	fp, #66	; 0x42
   135c8:	beq	1345c <strspn@plt+0x24a0>
   135cc:	mov	r3, #105	; 0x69
   135d0:	strb	r3, [ip, #1]
   135d4:	mov	r3, #66	; 0x42
   135d8:	add	lr, ip, #3
   135dc:	strb	r3, [ip, #2]
   135e0:	b	1345c <strspn@plt+0x24a0>
   135e4:	subs	lr, r1, #10
   135e8:	strd	r2, [sp, #32]
   135ec:	and	r0, r0, #1
   135f0:	bne	13530 <strspn@plt+0x2574>
   135f4:	ldr	sl, [sp, #32]
   135f8:	cmp	r0, #0
   135fc:	movne	r0, lr
   13600:	mov	r3, #66	; 0x42
   13604:	strb	r0, [ip, #1]
   13608:	strb	r3, [ip]
   1360c:	ldr	r2, [pc, #116]	; 13688 <strspn@plt+0x26cc>
   13610:	add	r4, sp, #68	; 0x44
   13614:	add	r2, pc, r2
   13618:	mov	r3, #32
   1361c:	stm	sp, {r2, sl}
   13620:	str	r9, [sp, #8]
   13624:	mov	r0, r4
   13628:	mov	r1, r3
   1362c:	mov	r2, #1
   13630:	bl	10fb0 <__snprintf_chk@plt>
   13634:	mov	r0, r4
   13638:	bl	10dc4 <strdup@plt>
   1363c:	ldr	r2, [sp, #100]	; 0x64
   13640:	ldr	r3, [r8]
   13644:	cmp	r2, r3
   13648:	bne	1366c <strspn@plt+0x26b0>
   1364c:	add	sp, sp, #108	; 0x6c
   13650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13654:	ldr	r0, [pc, #48]	; 1368c <strspn@plt+0x26d0>
   13658:	add	r0, pc, r0
   1365c:	b	134f8 <strspn@plt+0x253c>
   13660:	ldr	r0, [pc, #40]	; 13690 <strspn@plt+0x26d4>
   13664:	add	r0, pc, r0
   13668:	b	134f8 <strspn@plt+0x253c>
   1366c:	bl	10dd0 <__stack_chk_fail@plt>
   13670:	andeq	r1, r1, ip, lsr fp
   13674:	andeq	r0, r0, ip, ror #1
   13678:	muleq	r0, r4, r6
   1367c:	muleq	r0, r4, r6
   13680:	stclgt	12, cr12, [ip], {205}	; 0xcd
   13684:	andeq	r1, r0, ip, lsl r6
   13688:	andeq	r1, r0, ip, lsl #11
   1368c:	andeq	r1, r0, r0, lsr r5
   13690:	andeq	r1, r0, r4, lsr #10
   13694:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13698:	subs	r4, r0, #0
   1369c:	beq	1376c <strspn@plt+0x27b0>
   136a0:	ldrsb	lr, [r4]
   136a4:	cmp	lr, #0
   136a8:	beq	1376c <strspn@plt+0x27b0>
   136ac:	cmp	r1, #0
   136b0:	clz	ip, r2
   136b4:	lsr	ip, ip, #5
   136b8:	moveq	r0, #1
   136bc:	movne	r0, ip
   136c0:	cmp	r3, #0
   136c4:	moveq	r0, #1
   136c8:	cmp	r0, #0
   136cc:	bne	1376c <strspn@plt+0x27b0>
   136d0:	mov	r8, r3
   136d4:	mov	r7, r2
   136d8:	mov	r9, r1
   136dc:	mov	r5, r0
   136e0:	b	1373c <strspn@plt+0x2780>
   136e4:	cmp	r3, #0
   136e8:	bne	13728 <strspn@plt+0x276c>
   136ec:	cmn	r4, #1
   136f0:	add	r6, r4, #1
   136f4:	beq	13774 <strspn@plt+0x27b8>
   136f8:	cmp	r0, r6
   136fc:	bcs	1376c <strspn@plt+0x27b0>
   13700:	sub	r1, r6, r0
   13704:	blx	r8
   13708:	cmn	r0, #1
   1370c:	beq	1376c <strspn@plt+0x27b0>
   13710:	str	r0, [r9, r5, lsl #2]
   13714:	ldrsb	r3, [r6]
   13718:	add	r5, r5, #1
   1371c:	cmp	r3, #0
   13720:	beq	13774 <strspn@plt+0x27b8>
   13724:	mov	r0, #0
   13728:	cmn	r4, #1
   1372c:	beq	13774 <strspn@plt+0x27b8>
   13730:	ldrsb	lr, [r4, #1]!
   13734:	cmp	lr, #0
   13738:	beq	13774 <strspn@plt+0x27b8>
   1373c:	cmp	r7, r5
   13740:	mov	r6, r4
   13744:	bls	1377c <strspn@plt+0x27c0>
   13748:	cmp	r0, #0
   1374c:	moveq	r0, r4
   13750:	cmp	lr, #44	; 0x2c
   13754:	ldrsb	r3, [r4, #1]
   13758:	bne	136e4 <strspn@plt+0x2728>
   1375c:	cmp	r3, #0
   13760:	beq	136ec <strspn@plt+0x2730>
   13764:	cmp	r0, r6
   13768:	bcc	13700 <strspn@plt+0x2744>
   1376c:	mvn	r0, #0
   13770:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13774:	mov	r0, r5
   13778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1377c:	mvn	r0, #1
   13780:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13784:	cmp	r0, #0
   13788:	beq	137f4 <strspn@plt+0x2838>
   1378c:	push	{r4, lr}
   13790:	mov	r4, r3
   13794:	cmp	r4, #0
   13798:	ldrsb	ip, [r0]
   1379c:	clz	r3, ip
   137a0:	lsr	r3, r3, #5
   137a4:	moveq	r3, #1
   137a8:	cmp	r3, #0
   137ac:	bne	137ec <strspn@plt+0x2830>
   137b0:	ldr	lr, [r4]
   137b4:	cmp	lr, r2
   137b8:	bhi	137ec <strspn@plt+0x2830>
   137bc:	cmp	ip, #43	; 0x2b
   137c0:	strne	r3, [r4]
   137c4:	addeq	r0, r0, #1
   137c8:	ldr	r3, [sp, #8]
   137cc:	addeq	r1, r1, lr, lsl #2
   137d0:	subeq	r2, r2, lr
   137d4:	bl	13694 <strspn@plt+0x26d8>
   137d8:	cmp	r0, #0
   137dc:	ldrgt	r3, [r4]
   137e0:	addgt	r3, r3, r0
   137e4:	strgt	r3, [r4]
   137e8:	pop	{r4, pc}
   137ec:	mvn	r0, #0
   137f0:	pop	{r4, pc}
   137f4:	mvn	r0, #0
   137f8:	bx	lr
   137fc:	cmp	r2, #0
   13800:	clz	r3, r1
   13804:	lsr	r3, r3, #5
   13808:	moveq	r3, #1
   1380c:	cmp	r0, #0
   13810:	moveq	r3, #1
   13814:	cmp	r3, #0
   13818:	bne	138e4 <strspn@plt+0x2928>
   1381c:	push	{r4, r5, r6, r7, r8, lr}
   13820:	mov	r6, r2
   13824:	mov	r2, r3
   13828:	ldrsb	r3, [r0]
   1382c:	mov	r8, r1
   13830:	mov	r4, r0
   13834:	mov	r7, #1
   13838:	cmp	r3, #0
   1383c:	beq	138ac <strspn@plt+0x28f0>
   13840:	cmp	r2, #0
   13844:	moveq	r2, r4
   13848:	cmp	r3, #44	; 0x2c
   1384c:	mov	r5, r4
   13850:	ldrsb	r3, [r4, #1]!
   13854:	beq	138b4 <strspn@plt+0x28f8>
   13858:	cmp	r3, #0
   1385c:	bne	138d4 <strspn@plt+0x2918>
   13860:	mov	r5, r4
   13864:	cmp	r2, r5
   13868:	sub	r1, r5, r2
   1386c:	mov	r0, r2
   13870:	bcs	138cc <strspn@plt+0x2910>
   13874:	blx	r6
   13878:	mov	r2, r4
   1387c:	cmp	r0, #0
   13880:	and	r1, r0, #7
   13884:	poplt	{r4, r5, r6, r7, r8, pc}
   13888:	ldrb	r3, [r8, r0, asr #3]
   1388c:	orr	r3, r3, r7, lsl r1
   13890:	strb	r3, [r8, r0, asr #3]
   13894:	ldrsb	r3, [r5]
   13898:	cmp	r3, #0
   1389c:	beq	138ac <strspn@plt+0x28f0>
   138a0:	ldrsb	r3, [r4]
   138a4:	cmp	r3, #0
   138a8:	bne	13848 <strspn@plt+0x288c>
   138ac:	mov	r0, #0
   138b0:	pop	{r4, r5, r6, r7, r8, pc}
   138b4:	cmp	r3, #0
   138b8:	moveq	r5, r4
   138bc:	cmp	r2, r5
   138c0:	sub	r1, r5, r2
   138c4:	mov	r0, r2
   138c8:	bcc	13874 <strspn@plt+0x28b8>
   138cc:	mvn	r0, #0
   138d0:	pop	{r4, r5, r6, r7, r8, pc}
   138d4:	adds	r4, r5, #1
   138d8:	bne	13838 <strspn@plt+0x287c>
   138dc:	mov	r0, #0
   138e0:	pop	{r4, r5, r6, r7, r8, pc}
   138e4:	mvn	r0, #21
   138e8:	bx	lr
   138ec:	cmp	r2, #0
   138f0:	clz	r3, r1
   138f4:	lsr	r3, r3, #5
   138f8:	moveq	r3, #1
   138fc:	cmp	r0, #0
   13900:	moveq	r3, #1
   13904:	cmp	r3, #0
   13908:	bne	139cc <strspn@plt+0x2a10>
   1390c:	push	{r4, r5, r6, r7, r8, lr}
   13910:	mov	r6, r2
   13914:	mov	r2, r3
   13918:	ldrsb	r3, [r0]
   1391c:	mov	r7, r1
   13920:	mov	r4, r0
   13924:	cmp	r3, #0
   13928:	beq	13994 <strspn@plt+0x29d8>
   1392c:	cmp	r2, #0
   13930:	moveq	r2, r4
   13934:	cmp	r3, #44	; 0x2c
   13938:	mov	r5, r4
   1393c:	ldrsb	r3, [r4, #1]!
   13940:	beq	1399c <strspn@plt+0x29e0>
   13944:	cmp	r3, #0
   13948:	bne	139bc <strspn@plt+0x2a00>
   1394c:	mov	r5, r4
   13950:	cmp	r2, r5
   13954:	sub	r1, r5, r2
   13958:	mov	r0, r2
   1395c:	bcs	139b4 <strspn@plt+0x29f8>
   13960:	blx	r6
   13964:	mov	r2, r4
   13968:	cmp	r0, #0
   1396c:	poplt	{r4, r5, r6, r7, r8, pc}
   13970:	ldr	r3, [r7]
   13974:	orr	r3, r3, r0
   13978:	str	r3, [r7]
   1397c:	ldrsb	r3, [r5]
   13980:	cmp	r3, #0
   13984:	beq	13994 <strspn@plt+0x29d8>
   13988:	ldrsb	r3, [r4]
   1398c:	cmp	r3, #0
   13990:	bne	13934 <strspn@plt+0x2978>
   13994:	mov	r0, #0
   13998:	pop	{r4, r5, r6, r7, r8, pc}
   1399c:	cmp	r3, #0
   139a0:	moveq	r5, r4
   139a4:	cmp	r2, r5
   139a8:	sub	r1, r5, r2
   139ac:	mov	r0, r2
   139b0:	bcc	13960 <strspn@plt+0x29a4>
   139b4:	mvn	r0, #0
   139b8:	pop	{r4, r5, r6, r7, r8, pc}
   139bc:	adds	r4, r5, #1
   139c0:	bne	13924 <strspn@plt+0x2968>
   139c4:	mov	r0, #0
   139c8:	pop	{r4, r5, r6, r7, r8, pc}
   139cc:	mvn	r0, #21
   139d0:	bx	lr
   139d4:	ldr	ip, [pc, #396]	; 13b68 <strspn@plt+0x2bac>
   139d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   139dc:	add	ip, pc, ip
   139e0:	ldr	lr, [pc, #388]	; 13b6c <strspn@plt+0x2bb0>
   139e4:	sub	sp, sp, #8
   139e8:	mov	r9, r3
   139ec:	ldr	r5, [ip, lr]
   139f0:	mov	sl, #0
   139f4:	subs	r4, r0, #0
   139f8:	ldr	r3, [r5]
   139fc:	mov	r7, r1
   13a00:	str	sl, [sp]
   13a04:	mov	r1, ip
   13a08:	str	r3, [sp, #4]
   13a0c:	beq	13a80 <strspn@plt+0x2ac4>
   13a10:	str	r9, [r7]
   13a14:	str	r9, [r2]
   13a18:	mov	r6, r2
   13a1c:	bl	10eb4 <__errno_location@plt>
   13a20:	str	sl, [r0]
   13a24:	ldrsb	r3, [r4]
   13a28:	mov	r8, r0
   13a2c:	cmp	r3, #58	; 0x3a
   13a30:	beq	13a9c <strspn@plt+0x2ae0>
   13a34:	mov	sl, sp
   13a38:	mov	r1, sl
   13a3c:	mov	r2, #10
   13a40:	mov	r0, r4
   13a44:	bl	10d4c <strtol@plt>
   13a48:	str	r0, [r7]
   13a4c:	str	r0, [r6]
   13a50:	ldr	r0, [r8]
   13a54:	cmp	r0, #0
   13a58:	bne	13aec <strspn@plt+0x2b30>
   13a5c:	ldr	r2, [sp]
   13a60:	cmp	r2, #0
   13a64:	cmpne	r2, r4
   13a68:	beq	13aec <strspn@plt+0x2b30>
   13a6c:	ldrsb	r3, [r2]
   13a70:	cmp	r3, #58	; 0x3a
   13a74:	beq	13af4 <strspn@plt+0x2b38>
   13a78:	cmp	r3, #45	; 0x2d
   13a7c:	beq	13b04 <strspn@plt+0x2b48>
   13a80:	mov	r0, #0
   13a84:	ldr	r2, [sp, #4]
   13a88:	ldr	r3, [r5]
   13a8c:	cmp	r2, r3
   13a90:	bne	13b64 <strspn@plt+0x2ba8>
   13a94:	add	sp, sp, #8
   13a98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a9c:	add	r4, r4, #1
   13aa0:	mov	r0, r4
   13aa4:	mov	r2, #10
   13aa8:	mov	r1, sp
   13aac:	bl	10d4c <strtol@plt>
   13ab0:	str	r0, [r6]
   13ab4:	ldr	r3, [r8]
   13ab8:	cmp	r3, #0
   13abc:	bne	13aec <strspn@plt+0x2b30>
   13ac0:	ldr	r3, [sp]
   13ac4:	cmp	r3, #0
   13ac8:	beq	13aec <strspn@plt+0x2b30>
   13acc:	ldrsb	r2, [r3]
   13ad0:	sub	r3, r3, r4
   13ad4:	clz	r3, r3
   13ad8:	cmp	r2, #0
   13adc:	lsr	r3, r3, #5
   13ae0:	movne	r3, #1
   13ae4:	cmp	r3, #0
   13ae8:	beq	13a80 <strspn@plt+0x2ac4>
   13aec:	mvn	r0, #0
   13af0:	b	13a84 <strspn@plt+0x2ac8>
   13af4:	ldrsb	r3, [r2, #1]
   13af8:	cmp	r3, #0
   13afc:	streq	r9, [r6]
   13b00:	beq	13a84 <strspn@plt+0x2ac8>
   13b04:	mov	r3, #0
   13b08:	add	r4, r2, #1
   13b0c:	str	r3, [r8]
   13b10:	mov	r1, sl
   13b14:	mov	r0, r4
   13b18:	mov	r2, #10
   13b1c:	str	r3, [sp]
   13b20:	bl	10d4c <strtol@plt>
   13b24:	str	r0, [r6]
   13b28:	ldr	r3, [r8]
   13b2c:	cmp	r3, #0
   13b30:	bne	13aec <strspn@plt+0x2b30>
   13b34:	ldr	r2, [sp]
   13b38:	cmp	r2, #0
   13b3c:	beq	13aec <strspn@plt+0x2b30>
   13b40:	ldrsb	r3, [r2]
   13b44:	sub	r2, r2, r4
   13b48:	clz	r2, r2
   13b4c:	cmp	r3, #0
   13b50:	lsr	r2, r2, #5
   13b54:	movne	r2, #1
   13b58:	cmp	r2, #0
   13b5c:	beq	13a80 <strspn@plt+0x2ac4>
   13b60:	b	13aec <strspn@plt+0x2b30>
   13b64:	bl	10dd0 <__stack_chk_fail@plt>
   13b68:	andeq	r1, r1, r8, lsr #10
   13b6c:	andeq	r0, r0, ip, ror #1
   13b70:	ldr	r3, [pc, #244]	; 13c6c <strspn@plt+0x2cb0>
   13b74:	ldr	r2, [pc, #244]	; 13c70 <strspn@plt+0x2cb4>
   13b78:	add	r3, pc, r3
   13b7c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13b80:	sub	sp, sp, #20
   13b84:	ldr	r9, [r3, r2]
   13b88:	cmp	r0, #0
   13b8c:	cmpne	r1, #0
   13b90:	ldr	r3, [r9]
   13b94:	str	r3, [sp, #12]
   13b98:	beq	13c60 <strspn@plt+0x2ca4>
   13b9c:	mov	r4, r1
   13ba0:	add	r8, sp, #4
   13ba4:	add	r7, sp, #8
   13ba8:	b	13be8 <strspn@plt+0x2c2c>
   13bac:	cmp	r4, r3
   13bb0:	bne	13c60 <strspn@plt+0x2ca4>
   13bb4:	mov	r2, r4
   13bb8:	mov	r1, r6
   13bbc:	mov	r0, r5
   13bc0:	bl	10f8c <strncmp@plt>
   13bc4:	cmp	r0, #0
   13bc8:	bne	13c60 <strspn@plt+0x2ca4>
   13bcc:	adds	r0, r5, r4
   13bd0:	moveq	r3, #0
   13bd4:	movne	r3, #1
   13bd8:	adds	r4, r6, r4
   13bdc:	moveq	r3, #0
   13be0:	cmp	r3, #0
   13be4:	beq	13c60 <strspn@plt+0x2ca4>
   13be8:	mov	r1, r8
   13bec:	bl	11ff0 <strspn@plt+0x1034>
   13bf0:	mov	r1, r7
   13bf4:	mov	r5, r0
   13bf8:	mov	r0, r4
   13bfc:	bl	11ff0 <strspn@plt+0x1034>
   13c00:	ldr	r4, [sp, #4]
   13c04:	ldr	r3, [sp, #8]
   13c08:	mov	r6, r0
   13c0c:	adds	r0, r4, r3
   13c10:	beq	13c44 <strspn@plt+0x2c88>
   13c14:	cmp	r0, #1
   13c18:	bne	13bac <strspn@plt+0x2bf0>
   13c1c:	cmp	r5, #0
   13c20:	beq	13c30 <strspn@plt+0x2c74>
   13c24:	ldrsb	r2, [r5]
   13c28:	cmp	r2, #47	; 0x2f
   13c2c:	beq	13c48 <strspn@plt+0x2c8c>
   13c30:	cmp	r6, #0
   13c34:	beq	13bac <strspn@plt+0x2bf0>
   13c38:	ldrsb	r2, [r6]
   13c3c:	cmp	r2, #47	; 0x2f
   13c40:	bne	13bac <strspn@plt+0x2bf0>
   13c44:	mov	r0, #1
   13c48:	ldr	r2, [sp, #12]
   13c4c:	ldr	r3, [r9]
   13c50:	cmp	r2, r3
   13c54:	bne	13c68 <strspn@plt+0x2cac>
   13c58:	add	sp, sp, #20
   13c5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13c60:	mov	r0, #0
   13c64:	b	13c48 <strspn@plt+0x2c8c>
   13c68:	bl	10dd0 <__stack_chk_fail@plt>
   13c6c:	andeq	r1, r1, ip, lsl #7
   13c70:	andeq	r0, r0, ip, ror #1
   13c74:	orrs	r3, r0, r1
   13c78:	beq	13cf4 <strspn@plt+0x2d38>
   13c7c:	cmp	r0, #0
   13c80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c84:	mov	r4, r1
   13c88:	mov	r5, r0
   13c8c:	beq	13d00 <strspn@plt+0x2d44>
   13c90:	cmp	r1, #0
   13c94:	beq	13d10 <strspn@plt+0x2d54>
   13c98:	mov	r6, r2
   13c9c:	bl	10e84 <strlen@plt>
   13ca0:	mvn	r3, r0
   13ca4:	cmp	r6, r3
   13ca8:	mov	r7, r0
   13cac:	movhi	r8, #0
   13cb0:	bhi	13cec <strspn@plt+0x2d30>
   13cb4:	add	r9, r6, r0
   13cb8:	add	r0, r9, #1
   13cbc:	bl	10e30 <malloc@plt>
   13cc0:	subs	r8, r0, #0
   13cc4:	beq	13cec <strspn@plt+0x2d30>
   13cc8:	mov	r1, r5
   13ccc:	mov	r2, r7
   13cd0:	bl	10da0 <memcpy@plt>
   13cd4:	mov	r2, r6
   13cd8:	mov	r1, r4
   13cdc:	add	r0, r8, r7
   13ce0:	bl	10da0 <memcpy@plt>
   13ce4:	mov	r3, #0
   13ce8:	strb	r3, [r8, r9]
   13cec:	mov	r0, r8
   13cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cf4:	ldr	r0, [pc, #28]	; 13d18 <strspn@plt+0x2d5c>
   13cf8:	add	r0, pc, r0
   13cfc:	b	10dc4 <strdup@plt>
   13d00:	mov	r0, r4
   13d04:	mov	r1, r2
   13d08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d0c:	b	10d88 <strndup@plt>
   13d10:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d14:	b	10dc4 <strdup@plt>
   13d18:	andeq	r0, r0, r4, lsl r9
   13d1c:	push	{r4, r5, r6, lr}
   13d20:	subs	r4, r1, #0
   13d24:	mov	r5, r0
   13d28:	moveq	r2, r4
   13d2c:	beq	13d3c <strspn@plt+0x2d80>
   13d30:	mov	r0, r4
   13d34:	bl	10e84 <strlen@plt>
   13d38:	mov	r2, r0
   13d3c:	mov	r1, r4
   13d40:	mov	r0, r5
   13d44:	pop	{r4, r5, r6, lr}
   13d48:	b	13c74 <strspn@plt+0x2cb8>
   13d4c:	push	{r1, r2, r3}
   13d50:	ldr	r1, [pc, #132]	; 13ddc <strspn@plt+0x2e20>
   13d54:	ldr	r3, [pc, #132]	; 13de0 <strspn@plt+0x2e24>
   13d58:	add	r1, pc, r1
   13d5c:	push	{r4, r5, lr}
   13d60:	mov	r5, r0
   13d64:	ldr	r4, [r1, r3]
   13d68:	sub	sp, sp, #16
   13d6c:	add	ip, sp, #32
   13d70:	ldr	r0, [r4]
   13d74:	ldr	r2, [sp, #28]
   13d78:	str	r0, [sp, #12]
   13d7c:	mov	r3, ip
   13d80:	add	r0, sp, #8
   13d84:	mov	r1, #1
   13d88:	str	ip, [sp, #4]
   13d8c:	bl	10ecc <__vasprintf_chk@plt>
   13d90:	subs	r2, r0, #0
   13d94:	movlt	r5, #0
   13d98:	blt	13db4 <strspn@plt+0x2df8>
   13d9c:	mov	r0, r5
   13da0:	ldr	r1, [sp, #8]
   13da4:	bl	13c74 <strspn@plt+0x2cb8>
   13da8:	mov	r5, r0
   13dac:	ldr	r0, [sp, #8]
   13db0:	bl	10d70 <free@plt>
   13db4:	ldr	r2, [sp, #12]
   13db8:	ldr	r3, [r4]
   13dbc:	mov	r0, r5
   13dc0:	cmp	r2, r3
   13dc4:	bne	13dd8 <strspn@plt+0x2e1c>
   13dc8:	add	sp, sp, #16
   13dcc:	pop	{r4, r5, lr}
   13dd0:	add	sp, sp, #12
   13dd4:	bx	lr
   13dd8:	bl	10dd0 <__stack_chk_fail@plt>
   13ddc:	andeq	r1, r1, ip, lsr #3
   13de0:	andeq	r0, r0, ip, ror #1
   13de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13de8:	mov	r6, r0
   13dec:	ldr	r0, [pc, #348]	; 13f50 <strspn@plt+0x2f94>
   13df0:	ldr	ip, [pc, #348]	; 13f54 <strspn@plt+0x2f98>
   13df4:	add	r0, pc, r0
   13df8:	ldr	r5, [r6]
   13dfc:	ldr	r8, [r0, ip]
   13e00:	sub	sp, sp, #8
   13e04:	ldrsb	r4, [r5]
   13e08:	mov	r9, r2
   13e0c:	ldr	r2, [r8]
   13e10:	cmp	r4, #0
   13e14:	mov	r7, r1
   13e18:	str	r2, [sp, #4]
   13e1c:	mov	r1, r0
   13e20:	beq	13ed0 <strspn@plt+0x2f14>
   13e24:	mov	r0, r5
   13e28:	mov	r1, r9
   13e2c:	mov	sl, r3
   13e30:	bl	10fbc <strspn@plt>
   13e34:	add	r4, r5, r0
   13e38:	ldrsb	r5, [r5, r0]
   13e3c:	cmp	r5, #0
   13e40:	beq	13f38 <strspn@plt+0x2f7c>
   13e44:	cmp	sl, #0
   13e48:	beq	13eec <strspn@plt+0x2f30>
   13e4c:	ldr	r0, [pc, #260]	; 13f58 <strspn@plt+0x2f9c>
   13e50:	mov	r1, r5
   13e54:	add	r0, pc, r0
   13e58:	bl	10e90 <strchr@plt>
   13e5c:	cmp	r0, #0
   13e60:	beq	13f08 <strspn@plt+0x2f4c>
   13e64:	add	sl, r4, #1
   13e68:	mov	r3, #0
   13e6c:	mov	r0, sl
   13e70:	mov	r1, sp
   13e74:	strb	r5, [sp]
   13e78:	strb	r3, [sp, #1]
   13e7c:	bl	12090 <strspn@plt+0x10d4>
   13e80:	add	r3, r4, r0
   13e84:	str	r0, [r7]
   13e88:	ldrsb	r3, [r3, #1]
   13e8c:	subs	r5, r5, r3
   13e90:	movne	r5, #1
   13e94:	cmp	r3, #0
   13e98:	moveq	r5, #1
   13e9c:	cmp	r5, #0
   13ea0:	bne	13f38 <strspn@plt+0x2f7c>
   13ea4:	add	r0, r0, #2
   13ea8:	add	r5, r4, r0
   13eac:	ldrsb	r1, [r4, r0]
   13eb0:	cmp	r1, #0
   13eb4:	beq	13ec8 <strspn@plt+0x2f0c>
   13eb8:	mov	r0, r9
   13ebc:	bl	10e90 <strchr@plt>
   13ec0:	cmp	r0, #0
   13ec4:	beq	13f38 <strspn@plt+0x2f7c>
   13ec8:	mov	r4, sl
   13ecc:	str	r5, [r6]
   13ed0:	ldr	r2, [sp, #4]
   13ed4:	ldr	r3, [r8]
   13ed8:	mov	r0, r4
   13edc:	cmp	r2, r3
   13ee0:	bne	13f4c <strspn@plt+0x2f90>
   13ee4:	add	sp, sp, #8
   13ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13eec:	mov	r1, r9
   13ef0:	mov	r0, r4
   13ef4:	bl	10d58 <strcspn@plt>
   13ef8:	add	r3, r4, r0
   13efc:	str	r0, [r7]
   13f00:	str	r3, [r6]
   13f04:	b	13ed0 <strspn@plt+0x2f14>
   13f08:	mov	r1, r9
   13f0c:	mov	r0, r4
   13f10:	bl	12090 <strspn@plt+0x10d4>
   13f14:	str	r0, [r7]
   13f18:	ldrsb	r1, [r4, r0]
   13f1c:	add	r5, r4, r0
   13f20:	cmp	r1, #0
   13f24:	beq	13f44 <strspn@plt+0x2f88>
   13f28:	mov	r0, r9
   13f2c:	bl	10e90 <strchr@plt>
   13f30:	cmp	r0, #0
   13f34:	bne	13f44 <strspn@plt+0x2f88>
   13f38:	str	r4, [r6]
   13f3c:	mov	r4, #0
   13f40:	b	13ed0 <strspn@plt+0x2f14>
   13f44:	str	r5, [r6]
   13f48:	b	13ed0 <strspn@plt+0x2f14>
   13f4c:	bl	10dd0 <__stack_chk_fail@plt>
   13f50:	andeq	r1, r1, r0, lsl r1
   13f54:	andeq	r0, r0, ip, ror #1
   13f58:	andeq	r0, r0, r4, asr sp
   13f5c:	push	{r4, lr}
   13f60:	mov	r4, r0
   13f64:	b	13f70 <strspn@plt+0x2fb4>
   13f68:	cmp	r0, #10
   13f6c:	beq	13f88 <strspn@plt+0x2fcc>
   13f70:	mov	r0, r4
   13f74:	bl	10ed8 <fgetc@plt>
   13f78:	cmn	r0, #1
   13f7c:	bne	13f68 <strspn@plt+0x2fac>
   13f80:	mov	r0, #1
   13f84:	pop	{r4, pc}
   13f88:	mov	r0, #0
   13f8c:	pop	{r4, pc}
   13f90:	subs	r2, r1, #1
   13f94:	bxeq	lr
   13f98:	bcc	14170 <strspn@plt+0x31b4>
   13f9c:	cmp	r0, r1
   13fa0:	bls	14154 <strspn@plt+0x3198>
   13fa4:	tst	r1, r2
   13fa8:	beq	14160 <strspn@plt+0x31a4>
   13fac:	clz	r3, r0
   13fb0:	clz	r2, r1
   13fb4:	sub	r3, r2, r3
   13fb8:	rsbs	r3, r3, #31
   13fbc:	addne	r3, r3, r3, lsl #1
   13fc0:	mov	r2, #0
   13fc4:	addne	pc, pc, r3, lsl #2
   13fc8:	nop			; (mov r0, r0)
   13fcc:	cmp	r0, r1, lsl #31
   13fd0:	adc	r2, r2, r2
   13fd4:	subcs	r0, r0, r1, lsl #31
   13fd8:	cmp	r0, r1, lsl #30
   13fdc:	adc	r2, r2, r2
   13fe0:	subcs	r0, r0, r1, lsl #30
   13fe4:	cmp	r0, r1, lsl #29
   13fe8:	adc	r2, r2, r2
   13fec:	subcs	r0, r0, r1, lsl #29
   13ff0:	cmp	r0, r1, lsl #28
   13ff4:	adc	r2, r2, r2
   13ff8:	subcs	r0, r0, r1, lsl #28
   13ffc:	cmp	r0, r1, lsl #27
   14000:	adc	r2, r2, r2
   14004:	subcs	r0, r0, r1, lsl #27
   14008:	cmp	r0, r1, lsl #26
   1400c:	adc	r2, r2, r2
   14010:	subcs	r0, r0, r1, lsl #26
   14014:	cmp	r0, r1, lsl #25
   14018:	adc	r2, r2, r2
   1401c:	subcs	r0, r0, r1, lsl #25
   14020:	cmp	r0, r1, lsl #24
   14024:	adc	r2, r2, r2
   14028:	subcs	r0, r0, r1, lsl #24
   1402c:	cmp	r0, r1, lsl #23
   14030:	adc	r2, r2, r2
   14034:	subcs	r0, r0, r1, lsl #23
   14038:	cmp	r0, r1, lsl #22
   1403c:	adc	r2, r2, r2
   14040:	subcs	r0, r0, r1, lsl #22
   14044:	cmp	r0, r1, lsl #21
   14048:	adc	r2, r2, r2
   1404c:	subcs	r0, r0, r1, lsl #21
   14050:	cmp	r0, r1, lsl #20
   14054:	adc	r2, r2, r2
   14058:	subcs	r0, r0, r1, lsl #20
   1405c:	cmp	r0, r1, lsl #19
   14060:	adc	r2, r2, r2
   14064:	subcs	r0, r0, r1, lsl #19
   14068:	cmp	r0, r1, lsl #18
   1406c:	adc	r2, r2, r2
   14070:	subcs	r0, r0, r1, lsl #18
   14074:	cmp	r0, r1, lsl #17
   14078:	adc	r2, r2, r2
   1407c:	subcs	r0, r0, r1, lsl #17
   14080:	cmp	r0, r1, lsl #16
   14084:	adc	r2, r2, r2
   14088:	subcs	r0, r0, r1, lsl #16
   1408c:	cmp	r0, r1, lsl #15
   14090:	adc	r2, r2, r2
   14094:	subcs	r0, r0, r1, lsl #15
   14098:	cmp	r0, r1, lsl #14
   1409c:	adc	r2, r2, r2
   140a0:	subcs	r0, r0, r1, lsl #14
   140a4:	cmp	r0, r1, lsl #13
   140a8:	adc	r2, r2, r2
   140ac:	subcs	r0, r0, r1, lsl #13
   140b0:	cmp	r0, r1, lsl #12
   140b4:	adc	r2, r2, r2
   140b8:	subcs	r0, r0, r1, lsl #12
   140bc:	cmp	r0, r1, lsl #11
   140c0:	adc	r2, r2, r2
   140c4:	subcs	r0, r0, r1, lsl #11
   140c8:	cmp	r0, r1, lsl #10
   140cc:	adc	r2, r2, r2
   140d0:	subcs	r0, r0, r1, lsl #10
   140d4:	cmp	r0, r1, lsl #9
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #9
   140e0:	cmp	r0, r1, lsl #8
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #8
   140ec:	cmp	r0, r1, lsl #7
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #7
   140f8:	cmp	r0, r1, lsl #6
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #6
   14104:	cmp	r0, r1, lsl #5
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #5
   14110:	cmp	r0, r1, lsl #4
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #4
   1411c:	cmp	r0, r1, lsl #3
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #3
   14128:	cmp	r0, r1, lsl #2
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1, lsl #2
   14134:	cmp	r0, r1, lsl #1
   14138:	adc	r2, r2, r2
   1413c:	subcs	r0, r0, r1, lsl #1
   14140:	cmp	r0, r1
   14144:	adc	r2, r2, r2
   14148:	subcs	r0, r0, r1
   1414c:	mov	r0, r2
   14150:	bx	lr
   14154:	moveq	r0, #1
   14158:	movne	r0, #0
   1415c:	bx	lr
   14160:	clz	r2, r1
   14164:	rsb	r2, r2, #31
   14168:	lsr	r0, r0, r2
   1416c:	bx	lr
   14170:	cmp	r0, #0
   14174:	mvnne	r0, #0
   14178:	b	141d8 <strspn@plt+0x321c>
   1417c:	cmp	r1, #0
   14180:	beq	14170 <strspn@plt+0x31b4>
   14184:	push	{r0, r1, lr}
   14188:	bl	13f90 <strspn@plt+0x2fd4>
   1418c:	pop	{r1, r2, lr}
   14190:	mul	r3, r2, r0
   14194:	sub	r1, r1, r3
   14198:	bx	lr
   1419c:	cmp	r3, #0
   141a0:	cmpeq	r2, #0
   141a4:	bne	141bc <strspn@plt+0x3200>
   141a8:	cmp	r1, #0
   141ac:	cmpeq	r0, #0
   141b0:	mvnne	r1, #0
   141b4:	mvnne	r0, #0
   141b8:	b	141d8 <strspn@plt+0x321c>
   141bc:	sub	sp, sp, #8
   141c0:	push	{sp, lr}
   141c4:	bl	141e8 <strspn@plt+0x322c>
   141c8:	ldr	lr, [sp, #4]
   141cc:	add	sp, sp, #8
   141d0:	pop	{r2, r3}
   141d4:	bx	lr
   141d8:	push	{r1, lr}
   141dc:	mov	r0, #8
   141e0:	bl	10d28 <raise@plt>
   141e4:	pop	{r1, pc}
   141e8:	cmp	r1, r3
   141ec:	cmpeq	r0, r2
   141f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141f4:	mov	r4, r0
   141f8:	movcc	r0, #0
   141fc:	mov	r5, r1
   14200:	ldr	lr, [sp, #36]	; 0x24
   14204:	movcc	r1, r0
   14208:	bcc	14304 <strspn@plt+0x3348>
   1420c:	cmp	r3, #0
   14210:	clzeq	ip, r2
   14214:	clzne	ip, r3
   14218:	addeq	ip, ip, #32
   1421c:	cmp	r5, #0
   14220:	clzeq	r1, r4
   14224:	addeq	r1, r1, #32
   14228:	clzne	r1, r5
   1422c:	sub	ip, ip, r1
   14230:	sub	sl, ip, #32
   14234:	lsl	r9, r3, ip
   14238:	rsb	fp, ip, #32
   1423c:	orr	r9, r9, r2, lsl sl
   14240:	orr	r9, r9, r2, lsr fp
   14244:	lsl	r8, r2, ip
   14248:	cmp	r5, r9
   1424c:	cmpeq	r4, r8
   14250:	movcc	r0, #0
   14254:	movcc	r1, r0
   14258:	bcc	14274 <strspn@plt+0x32b8>
   1425c:	mov	r0, #1
   14260:	subs	r4, r4, r8
   14264:	lsl	r1, r0, sl
   14268:	orr	r1, r1, r0, lsr fp
   1426c:	lsl	r0, r0, ip
   14270:	sbc	r5, r5, r9
   14274:	cmp	ip, #0
   14278:	beq	14304 <strspn@plt+0x3348>
   1427c:	lsr	r6, r8, #1
   14280:	orr	r6, r6, r9, lsl #31
   14284:	lsr	r7, r9, #1
   14288:	mov	r2, ip
   1428c:	b	142b0 <strspn@plt+0x32f4>
   14290:	subs	r3, r4, r6
   14294:	sbc	r8, r5, r7
   14298:	adds	r3, r3, r3
   1429c:	adc	r8, r8, r8
   142a0:	adds	r4, r3, #1
   142a4:	adc	r5, r8, #0
   142a8:	subs	r2, r2, #1
   142ac:	beq	142cc <strspn@plt+0x3310>
   142b0:	cmp	r5, r7
   142b4:	cmpeq	r4, r6
   142b8:	bcs	14290 <strspn@plt+0x32d4>
   142bc:	adds	r4, r4, r4
   142c0:	adc	r5, r5, r5
   142c4:	subs	r2, r2, #1
   142c8:	bne	142b0 <strspn@plt+0x32f4>
   142cc:	lsr	r3, r4, ip
   142d0:	orr	r3, r3, r5, lsl fp
   142d4:	lsr	r2, r5, ip
   142d8:	orr	r3, r3, r5, lsr sl
   142dc:	adds	r0, r0, r4
   142e0:	mov	r4, r3
   142e4:	lsl	r3, r2, ip
   142e8:	orr	r3, r3, r4, lsl sl
   142ec:	lsl	ip, r4, ip
   142f0:	orr	r3, r3, r4, lsr fp
   142f4:	adc	r1, r1, r5
   142f8:	subs	r0, r0, ip
   142fc:	mov	r5, r2
   14300:	sbc	r1, r1, r3
   14304:	cmp	lr, #0
   14308:	strdne	r4, [lr]
   1430c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14310:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14314:	mov	r7, r0
   14318:	ldr	r6, [pc, #72]	; 14368 <strspn@plt+0x33ac>
   1431c:	ldr	r5, [pc, #72]	; 1436c <strspn@plt+0x33b0>
   14320:	add	r6, pc, r6
   14324:	add	r5, pc, r5
   14328:	sub	r6, r6, r5
   1432c:	mov	r8, r1
   14330:	mov	r9, r2
   14334:	bl	10d08 <raise@plt-0x20>
   14338:	asrs	r6, r6, #2
   1433c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14340:	mov	r4, #0
   14344:	add	r4, r4, #1
   14348:	ldr	r3, [r5], #4
   1434c:	mov	r2, r9
   14350:	mov	r1, r8
   14354:	mov	r0, r7
   14358:	blx	r3
   1435c:	cmp	r6, r4
   14360:	bne	14344 <strspn@plt+0x3388>
   14364:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14368:	ldrdeq	r0, [r1], -ip
   1436c:	ldrdeq	r0, [r1], -r4
   14370:	bx	lr
   14374:	ldr	r3, [pc, #12]	; 14388 <strspn@plt+0x33cc>
   14378:	mov	r1, #0
   1437c:	add	r3, pc, r3
   14380:	ldr	r2, [r3]
   14384:	b	10ec0 <__cxa_atexit@plt>
   14388:	andeq	r0, r1, r0, lsl #25

Disassembly of section .fini:

0001438c <.fini>:
   1438c:	push	{r3, lr}
   14390:	pop	{r3, pc}
