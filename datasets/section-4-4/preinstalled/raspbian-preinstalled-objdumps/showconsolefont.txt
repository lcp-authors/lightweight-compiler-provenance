
raspbian-preinstalled/showconsolefont:     file format elf32-littlearm


Disassembly of section .init:

0001084c <.init>:
   1084c:	push	{r3, lr}
   10850:	bl	110b4 <close@plt+0x6d4>
   10854:	pop	{r3, pc}

Disassembly of section .plt:

00010858 <calloc@plt-0x14>:
   10858:	push	{lr}		; (str lr, [sp, #-4]!)
   1085c:	ldr	lr, [pc, #4]	; 10868 <calloc@plt-0x4>
   10860:	add	lr, pc, lr
   10864:	ldr	pc, [lr, #8]!
   10868:	muleq	r1, r8, r7

0001086c <calloc@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #1944]!	; 0x798

00010878 <raise@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #1936]!	; 0x790

00010884 <strcmp@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #1928]!	; 0x788

00010890 <fflush@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #1920]!	; 0x780

0001089c <free@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1912]!	; 0x778

000108a8 <strndup@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #73728	; 0x12000
   108b0:	ldr	pc, [ip, #1904]!	; 0x770

000108b4 <memcpy@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #73728	; 0x12000
   108bc:	ldr	pc, [ip, #1896]!	; 0x768

000108c0 <dcgettext@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #73728	; 0x12000
   108c8:	ldr	pc, [ip, #1888]!	; 0x760

000108cc <strdup@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1880]!	; 0x758

000108d8 <__stack_chk_fail@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #73728	; 0x12000
   108e0:	ldr	pc, [ip, #1872]!	; 0x750

000108e4 <realloc@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #73728	; 0x12000
   108ec:	ldr	pc, [ip, #1864]!	; 0x748

000108f0 <textdomain@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #73728	; 0x12000
   108f8:	ldr	pc, [ip, #1856]!	; 0x740

000108fc <perror@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #73728	; 0x12000
   10904:	ldr	pc, [ip, #1848]!	; 0x738

00010908 <_IO_putc@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #73728	; 0x12000
   10910:	ldr	pc, [ip, #1840]!	; 0x730

00010914 <ioctl@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #73728	; 0x12000
   1091c:	ldr	pc, [ip, #1832]!	; 0x728

00010920 <malloc@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #73728	; 0x12000
   10928:	ldr	pc, [ip, #1824]!	; 0x720

0001092c <__libc_start_main@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #73728	; 0x12000
   10934:	ldr	pc, [ip, #1816]!	; 0x718

00010938 <strerror@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #73728	; 0x12000
   10940:	ldr	pc, [ip, #1808]!	; 0x710

00010944 <__vfprintf_chk@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #73728	; 0x12000
   1094c:	ldr	pc, [ip, #1800]!	; 0x708

00010950 <__gmon_start__@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #73728	; 0x12000
   10958:	ldr	pc, [ip, #1792]!	; 0x700

0001095c <open@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #73728	; 0x12000
   10964:	ldr	pc, [ip, #1784]!	; 0x6f8

00010968 <exit@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #73728	; 0x12000
   10970:	ldr	pc, [ip, #1776]!	; 0x6f0

00010974 <getopt@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #73728	; 0x12000
   1097c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010980 <__errno_location@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1760]!	; 0x6e0

0001098c <__printf_chk@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1752]!	; 0x6d8

00010998 <__fprintf_chk@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1744]!	; 0x6d0

000109a4 <setlocale@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1736]!	; 0x6c8

000109b0 <strrchr@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1728]!	; 0x6c0

000109bc <bindtextdomain@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1720]!	; 0x6b8

000109c8 <isatty@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109d4 <abort@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1704]!	; 0x6a8

000109e0 <close@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1696]!	; 0x6a0

Disassembly of section .text:

000109ec <.text>:
   109ec:	ldr	r3, [pc, #52]	; 10a28 <close@plt+0x48>
   109f0:	push	{r4, lr}
   109f4:	mov	r2, #5
   109f8:	ldr	r1, [pc, #44]	; 10a2c <close@plt+0x4c>
   109fc:	mov	r0, #0
   10a00:	ldr	r4, [r3]
   10a04:	bl	108c0 <dcgettext@plt>
   10a08:	ldr	r3, [pc, #32]	; 10a30 <close@plt+0x50>
   10a0c:	mov	r1, #1
   10a10:	ldr	r3, [r3]
   10a14:	mov	r2, r0
   10a18:	mov	r0, r4
   10a1c:	bl	10998 <__fprintf_chk@plt>
   10a20:	mov	r0, #71	; 0x47
   10a24:	bl	10968 <exit@plt>
   10a28:	andeq	r3, r2, r0, lsr #1
   10a2c:	andeq	r2, r1, r8, asr r5
   10a30:	andeq	r3, r2, r4, asr #1
   10a34:	ldr	r3, [pc, #1464]	; 10ff4 <close@plt+0x614>
   10a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a3c:	sub	sp, sp, #300	; 0x12c
   10a40:	ldr	r6, [r1]
   10a44:	ldr	r3, [r3]
   10a48:	mov	r5, r0
   10a4c:	mov	r4, r1
   10a50:	mov	r0, r6
   10a54:	mov	r1, #47	; 0x2f
   10a58:	str	r3, [sp, #292]	; 0x124
   10a5c:	bl	109b0 <strrchr@plt>
   10a60:	ldr	r7, [pc, #1424]	; 10ff8 <close@plt+0x618>
   10a64:	ldr	r1, [pc, #1424]	; 10ffc <close@plt+0x61c>
   10a68:	cmp	r0, #0
   10a6c:	addne	r6, r0, #1
   10a70:	mov	r0, #6
   10a74:	str	r6, [r7]
   10a78:	bl	109a4 <setlocale@plt>
   10a7c:	ldr	r1, [pc, #1404]	; 11000 <close@plt+0x620>
   10a80:	ldr	r0, [pc, #1404]	; 11004 <close@plt+0x624>
   10a84:	bl	109bc <bindtextdomain@plt>
   10a88:	ldr	r0, [pc, #1396]	; 11004 <close@plt+0x624>
   10a8c:	bl	108f0 <textdomain@plt>
   10a90:	cmp	r5, #2
   10a94:	beq	10af8 <close@plt+0x118>
   10a98:	mov	r7, #0
   10a9c:	ldr	r6, [pc, #1380]	; 11008 <close@plt+0x628>
   10aa0:	ldr	sl, [pc, #1380]	; 1100c <close@plt+0x62c>
   10aa4:	mov	r8, r7
   10aa8:	mov	r9, r7
   10aac:	mov	r2, r6
   10ab0:	mov	r1, r4
   10ab4:	mov	r0, r5
   10ab8:	bl	10974 <getopt@plt>
   10abc:	cmn	r0, #1
   10ac0:	beq	10b50 <close@plt+0x170>
   10ac4:	cmp	r0, #105	; 0x69
   10ac8:	beq	10ae0 <close@plt+0x100>
   10acc:	cmp	r0, #118	; 0x76
   10ad0:	beq	10af0 <close@plt+0x110>
   10ad4:	cmp	r0, #67	; 0x43
   10ad8:	beq	10ae8 <close@plt+0x108>
   10adc:	bl	11168 <close@plt+0x788>
   10ae0:	mov	r8, #1
   10ae4:	b	10aac <close@plt+0xcc>
   10ae8:	ldr	r9, [sl]
   10aec:	b	10aac <close@plt+0xcc>
   10af0:	mov	r7, #1
   10af4:	b	10aac <close@plt+0xcc>
   10af8:	ldr	r6, [r4, #4]
   10afc:	ldr	r1, [pc, #1292]	; 11010 <close@plt+0x630>
   10b00:	mov	r0, r6
   10b04:	bl	10884 <strcmp@plt>
   10b08:	cmp	r0, #0
   10b0c:	beq	10b24 <close@plt+0x144>
   10b10:	mov	r0, r6
   10b14:	ldr	r1, [pc, #1272]	; 11014 <close@plt+0x634>
   10b18:	bl	10884 <strcmp@plt>
   10b1c:	cmp	r0, #0
   10b20:	bne	10a98 <close@plt+0xb8>
   10b24:	mov	r2, #5
   10b28:	ldr	r1, [pc, #1256]	; 11018 <close@plt+0x638>
   10b2c:	mov	r0, #0
   10b30:	bl	108c0 <dcgettext@plt>
   10b34:	ldr	r2, [r7]
   10b38:	ldr	r3, [pc, #1244]	; 1101c <close@plt+0x63c>
   10b3c:	mov	r1, r0
   10b40:	mov	r0, #1
   10b44:	bl	1098c <__printf_chk@plt>
   10b48:	mov	r0, #0
   10b4c:	bl	10968 <exit@plt>
   10b50:	ldr	r3, [pc, #1224]	; 11020 <close@plt+0x640>
   10b54:	ldr	r3, [r3]
   10b58:	cmp	r3, r5
   10b5c:	bne	10adc <close@plt+0xfc>
   10b60:	mov	r0, r9
   10b64:	bl	1131c <close@plt+0x93c>
   10b68:	ldr	r3, [pc, #1204]	; 11024 <close@plt+0x644>
   10b6c:	cmp	r0, #0
   10b70:	str	r0, [r3, #4]
   10b74:	blt	10f3c <close@plt+0x55c>
   10b78:	ldr	r3, [pc, #1188]	; 11024 <close@plt+0x644>
   10b7c:	add	r2, sp, #24
   10b80:	ldr	r1, [pc, #1184]	; 11028 <close@plt+0x648>
   10b84:	ldr	r0, [r3, #4]
   10b88:	bl	10914 <ioctl@plt>
   10b8c:	subs	ip, r0, #0
   10b90:	bne	10c50 <close@plt+0x270>
   10b94:	ldr	r2, [sp, #24]
   10b98:	ldr	r3, [pc, #1164]	; 1102c <close@plt+0x64c>
   10b9c:	ldr	r1, [pc, #1152]	; 11024 <close@plt+0x644>
   10ba0:	cmp	r2, #3
   10ba4:	ldr	r6, [pc, #1156]	; 11030 <close@plt+0x650>
   10ba8:	moveq	r6, r3
   10bac:	cmp	r8, #0
   10bb0:	ldr	r0, [r1, #4]
   10bb4:	beq	10c68 <close@plt+0x288>
   10bb8:	add	r3, sp, #12
   10bbc:	str	r3, [sp]
   10bc0:	mov	r1, ip
   10bc4:	add	r3, sp, #16
   10bc8:	add	r2, sp, #20
   10bcc:	str	ip, [sp, #12]
   10bd0:	str	ip, [sp, #16]
   10bd4:	str	ip, [sp, #20]
   10bd8:	bl	119d0 <close@plt+0xff0>
   10bdc:	subs	r4, r0, #0
   10be0:	bne	10f24 <close@plt+0x544>
   10be4:	cmp	r7, #0
   10be8:	beq	10fcc <close@plt+0x5ec>
   10bec:	mov	r2, #5
   10bf0:	ldr	r1, [pc, #1084]	; 11034 <close@plt+0x654>
   10bf4:	bl	108c0 <dcgettext@plt>
   10bf8:	ldr	r2, [sp, #20]
   10bfc:	mov	r1, r0
   10c00:	mov	r0, #1
   10c04:	bl	1098c <__printf_chk@plt>
   10c08:	mov	r2, #5
   10c0c:	ldr	r1, [pc, #1060]	; 11038 <close@plt+0x658>
   10c10:	mov	r0, r4
   10c14:	bl	108c0 <dcgettext@plt>
   10c18:	ldr	r2, [sp, #16]
   10c1c:	mov	r1, r0
   10c20:	mov	r0, #1
   10c24:	bl	1098c <__printf_chk@plt>
   10c28:	mov	r2, #5
   10c2c:	ldr	r1, [pc, #1032]	; 1103c <close@plt+0x65c>
   10c30:	mov	r0, r4
   10c34:	bl	108c0 <dcgettext@plt>
   10c38:	ldr	r2, [sp, #12]
   10c3c:	mov	r1, r0
   10c40:	mov	r0, #1
   10c44:	bl	1098c <__printf_chk@plt>
   10c48:	mov	r0, #0
   10c4c:	bl	111a4 <close@plt+0x7c4>
   10c50:	bl	10980 <__errno_location@plt>
   10c54:	ldr	r1, [pc, #996]	; 11040 <close@plt+0x660>
   10c58:	ldr	r0, [r0]
   10c5c:	bl	11498 <close@plt+0xab8>
   10c60:	mov	r0, #1
   10c64:	bl	111a4 <close@plt+0x7c4>
   10c68:	ldr	r1, [pc, #980]	; 11044 <close@plt+0x664>
   10c6c:	bl	11650 <close@plt+0xc70>
   10c70:	cmp	r0, #0
   10c74:	bne	10fec <close@plt+0x60c>
   10c78:	ldr	r1, [pc, #932]	; 11024 <close@plt+0x644>
   10c7c:	ldr	r3, [pc, #964]	; 11048 <close@plt+0x668>
   10c80:	mov	r2, #1
   10c84:	str	r2, [r1]
   10c88:	strh	r0, [r3, #2]!
   10c8c:	add	r0, r0, #1
   10c90:	cmp	r0, #256	; 0x100
   10c94:	bne	10c88 <close@plt+0x2a8>
   10c98:	ldr	r3, [pc, #900]	; 11024 <close@plt+0x644>
   10c9c:	ldr	r1, [pc, #936]	; 1104c <close@plt+0x66c>
   10ca0:	ldr	r0, [r3, #4]
   10ca4:	bl	11680 <close@plt+0xca0>
   10ca8:	cmp	r0, #0
   10cac:	beq	10cd0 <close@plt+0x2f0>
   10cb0:	mov	r2, #5
   10cb4:	ldr	r1, [pc, #916]	; 11050 <close@plt+0x670>
   10cb8:	mov	r0, #0
   10cbc:	bl	108c0 <dcgettext@plt>
   10cc0:	mov	r1, #0
   10cc4:	mov	r2, r0
   10cc8:	mov	r0, #1
   10ccc:	bl	11550 <close@plt+0xb70>
   10cd0:	ldr	r8, [pc, #844]	; 11024 <close@plt+0x644>
   10cd4:	add	r4, sp, #28
   10cd8:	mov	r1, r4
   10cdc:	ldr	r0, [r8, #4]
   10ce0:	bl	116b0 <close@plt+0xcd0>
   10ce4:	subs	r5, r0, #0
   10ce8:	bne	10f24 <close@plt+0x544>
   10cec:	ldm	r4, {r0, r1}
   10cf0:	ldr	r3, [pc, #860]	; 11054 <close@plt+0x674>
   10cf4:	mov	r4, #1
   10cf8:	str	r4, [r8, #8]
   10cfc:	stm	r3, {r0, r1}
   10d00:	ldr	r0, [r8, #4]
   10d04:	bl	11bd0 <close@plt+0x11f0>
   10d08:	cmp	r7, #0
   10d0c:	mov	r8, r0
   10d10:	bne	10fa8 <close@plt+0x5c8>
   10d14:	cmp	r8, #256	; 0x100
   10d18:	ble	10f80 <close@plt+0x5a0>
   10d1c:	add	r3, r8, #31
   10d20:	ldr	r7, [pc, #816]	; 11058 <close@plt+0x678>
   10d24:	mov	r1, #32
   10d28:	asr	r3, r3, #5
   10d2c:	mov	r2, #2
   10d30:	str	r3, [sp, #16]
   10d34:	str	r1, [sp, #12]
   10d38:	str	r2, [sp, #20]
   10d3c:	mov	r5, #0
   10d40:	ldr	sl, [sp, #16]
   10d44:	cmp	sl, r5
   10d48:	ble	10c48 <close@plt+0x268>
   10d4c:	ldr	r4, [sp, #20]
   10d50:	mov	r0, r5
   10d54:	mov	r1, r4
   10d58:	bl	120d8 <close@plt+0x16f8>
   10d5c:	subs	r9, r1, #0
   10d60:	beq	10e58 <close@plt+0x478>
   10d64:	mov	r2, r6
   10d68:	ldr	r1, [pc, #748]	; 1105c <close@plt+0x67c>
   10d6c:	mov	r0, #1
   10d70:	bl	1098c <__printf_chk@plt>
   10d74:	ldr	r9, [sp, #12]
   10d78:	ldr	sl, [pc, #736]	; 11060 <close@plt+0x680>
   10d7c:	cmp	r9, #0
   10d80:	ble	10e30 <close@plt+0x450>
   10d84:	cmp	r5, r8
   10d88:	ldr	fp, [sl]
   10d8c:	bge	10e30 <close@plt+0x450>
   10d90:	ldr	r1, [sp, #20]
   10d94:	mov	r0, r5
   10d98:	bl	120d8 <close@plt+0x16f8>
   10d9c:	mov	r4, #0
   10da0:	mul	r0, r9, r1
   10da4:	mov	r1, fp
   10da8:	add	r0, r0, #33	; 0x21
   10dac:	bl	10908 <_IO_putc@plt>
   10db0:	mov	r2, r6
   10db4:	mov	r1, r7
   10db8:	mov	r0, #1
   10dbc:	bl	1098c <__printf_chk@plt>
   10dc0:	ldr	r9, [sp, #12]
   10dc4:	add	r4, r4, #1
   10dc8:	cmp	r9, r4
   10dcc:	ldr	fp, [sl]
   10dd0:	ble	10e30 <close@plt+0x450>
   10dd4:	ldr	r3, [sp, #16]
   10dd8:	mla	r3, r3, r4, r5
   10ddc:	cmp	r3, r8
   10de0:	bge	10e30 <close@plt+0x450>
   10de4:	ldr	r1, [sp, #20]
   10de8:	mov	r0, r5
   10dec:	bl	120d8 <close@plt+0x16f8>
   10df0:	mla	r0, r9, r1, r4
   10df4:	mov	r1, fp
   10df8:	add	r0, r0, #33	; 0x21
   10dfc:	bl	10908 <_IO_putc@plt>
   10e00:	mov	r2, r6
   10e04:	mov	r1, r7
   10e08:	mov	r0, #1
   10e0c:	bl	1098c <__printf_chk@plt>
   10e10:	and	r3, r4, #7
   10e14:	cmp	r3, #7
   10e18:	bne	10dc0 <close@plt+0x3e0>
   10e1c:	mov	r2, r6
   10e20:	mov	r1, r7
   10e24:	mov	r0, #1
   10e28:	bl	1098c <__printf_chk@plt>
   10e2c:	b	10dc0 <close@plt+0x3e0>
   10e30:	ldr	r1, [sl]
   10e34:	mov	r0, #10
   10e38:	bl	10908 <_IO_putc@plt>
   10e3c:	and	r3, r5, #7
   10e40:	cmp	r3, #7
   10e44:	beq	10f2c <close@plt+0x54c>
   10e48:	ldr	r0, [sl]
   10e4c:	bl	10890 <fflush@plt>
   10e50:	add	r5, r5, #1
   10e54:	b	10d40 <close@plt+0x360>
   10e58:	ldr	fp, [sp, #12]
   10e5c:	add	ip, r4, r5
   10e60:	mov	r0, r5
   10e64:	mov	r4, r9
   10e68:	cmp	ip, r0
   10e6c:	ble	10eac <close@plt+0x4cc>
   10e70:	cmp	fp, #0
   10e74:	ble	10ea4 <close@plt+0x4c4>
   10e78:	add	lr, fp, r4
   10e7c:	add	r2, sp, #36	; 0x24
   10e80:	add	r3, sp, #36	; 0x24
   10e84:	add	r1, r2, lr, lsl #2
   10e88:	add	r3, r3, r4, lsl #2
   10e8c:	mov	r2, r0
   10e90:	str	r2, [r3], #4
   10e94:	cmp	r1, r3
   10e98:	add	r2, r2, sl
   10e9c:	bne	10e90 <close@plt+0x4b0>
   10ea0:	mov	r4, lr
   10ea4:	add	r0, r0, #1
   10ea8:	b	10e68 <close@plt+0x488>
   10eac:	ldr	r3, [pc, #432]	; 11064 <close@plt+0x684>
   10eb0:	ldrh	r3, [r3]
   10eb4:	cmp	r3, #0
   10eb8:	beq	10f60 <close@plt+0x580>
   10ebc:	ldr	r3, [pc, #416]	; 11064 <close@plt+0x684>
   10ec0:	ldr	r1, [r3, #4]
   10ec4:	mov	r3, #0
   10ec8:	mov	r2, r1
   10ecc:	mov	r0, r3
   10ed0:	strh	r3, [r2, #2]
   10ed4:	add	r3, r3, #1
   10ed8:	cmp	r3, #512	; 0x200
   10edc:	strh	r0, [r2], #4
   10ee0:	bne	10ed0 <close@plt+0x4f0>
   10ee4:	b	10f00 <close@plt+0x520>
   10ee8:	add	r3, sp, #36	; 0x24
   10eec:	add	r2, r9, #33	; 0x21
   10ef0:	ldr	r3, [r3, r9, lsl #2]
   10ef4:	add	r9, r9, #1
   10ef8:	lsl	r3, r3, #2
   10efc:	strh	r2, [r1, r3]
   10f00:	cmp	r4, r9
   10f04:	bne	10ee8 <close@plt+0x508>
   10f08:	ldr	r3, [pc, #276]	; 11024 <close@plt+0x644>
   10f0c:	ldr	r2, [pc, #336]	; 11064 <close@plt+0x684>
   10f10:	mov	r1, #0
   10f14:	ldr	r0, [r3, #4]
   10f18:	bl	11814 <close@plt+0xe34>
   10f1c:	cmp	r0, #0
   10f20:	beq	10d64 <close@plt+0x384>
   10f24:	mov	r0, #1
   10f28:	bl	111a4 <close@plt+0x7c4>
   10f2c:	ldr	r1, [sl]
   10f30:	mov	r0, #10
   10f34:	bl	10908 <_IO_putc@plt>
   10f38:	b	10e48 <close@plt+0x468>
   10f3c:	mov	r2, #5
   10f40:	ldr	r1, [pc, #288]	; 11068 <close@plt+0x688>
   10f44:	mov	r0, #0
   10f48:	bl	108c0 <dcgettext@plt>
   10f4c:	mov	r1, #0
   10f50:	mov	r2, r0
   10f54:	mov	r0, #1
   10f58:	bl	11550 <close@plt+0xb70>
   10f5c:	b	10b78 <close@plt+0x198>
   10f60:	ldr	r2, [pc, #252]	; 11064 <close@plt+0x684>
   10f64:	mov	r3, #512	; 0x200
   10f68:	mov	r0, #2048	; 0x800
   10f6c:	mov	sl, r2
   10f70:	strh	r3, [r2]
   10f74:	bl	11428 <close@plt+0xa48>
   10f78:	str	r0, [sl, #4]
   10f7c:	b	10ebc <close@plt+0x4dc>
   10f80:	adds	r3, r8, #15
   10f84:	addmi	r3, r8, #30
   10f88:	mov	r1, #16
   10f8c:	asr	r3, r3, #4
   10f90:	mov	r2, #4
   10f94:	str	r3, [sp, #16]
   10f98:	str	r1, [sp, #12]
   10f9c:	str	r2, [sp, #20]
   10fa0:	ldr	r7, [pc, #196]	; 1106c <close@plt+0x68c>
   10fa4:	b	10d3c <close@plt+0x35c>
   10fa8:	mov	r0, r5
   10fac:	mov	r2, #5
   10fb0:	ldr	r1, [pc, #184]	; 11070 <close@plt+0x690>
   10fb4:	bl	108c0 <dcgettext@plt>
   10fb8:	mov	r2, r8
   10fbc:	mov	r1, r0
   10fc0:	mov	r0, r4
   10fc4:	bl	1098c <__printf_chk@plt>
   10fc8:	b	10d14 <close@plt+0x334>
   10fcc:	ldr	r2, [sp, #20]
   10fd0:	ldr	r3, [sp, #12]
   10fd4:	str	r2, [sp]
   10fd8:	ldr	r1, [pc, #148]	; 11074 <close@plt+0x694>
   10fdc:	ldr	r2, [sp, #16]
   10fe0:	mov	r0, #1
   10fe4:	bl	1098c <__printf_chk@plt>
   10fe8:	b	10c48 <close@plt+0x268>
   10fec:	mov	r0, #1
   10ff0:	bl	10968 <exit@plt>
   10ff4:	andeq	r2, r2, r8, lsl #30
   10ff8:	andeq	r3, r2, r4, asr #1
   10ffc:	andeq	r2, r1, r4, lsr #8
   11000:	andeq	r2, r1, r8, ror #6
   11004:	andeq	r2, r1, ip, ror r3
   11008:	andeq	r2, r1, r8, lsr #7
   1100c:	andeq	r3, r2, r8, lsr #1
   11010:	andeq	r2, r1, r0, lsl #7
   11014:	andeq	r2, r1, r4, lsl #7
   11018:	muleq	r1, r0, r3
   1101c:	muleq	r1, ip, r3
   11020:	muleq	r2, r8, r0
   11024:	strheq	r3, [r2], -r0
   11028:	andeq	r4, r0, r4, asr #22
   1102c:	andeq	r2, r1, r0, ror #6
   11030:	andeq	r2, r1, r4, ror #6
   11034:	strdeq	r2, [r1], -r8
   11038:	andeq	r2, r1, r0, lsl r4
   1103c:	andeq	r2, r1, r8, lsr #8
   11040:	andeq	r2, r1, r8, ror #7
   11044:	ldrdeq	r3, [r2], -r0
   11048:	andeq	r3, r2, lr, asr #1
   1104c:	ldrdeq	r3, [r2], -r0
   11050:	andeq	r2, r1, ip, asr #8
   11054:	andeq	r3, r2, r8, asr #1
   11058:	muleq	r1, r4, r4
   1105c:	andeq	r2, r1, r8, lsl #9
   11060:	andeq	r3, r2, r4, lsr #1
   11064:	strheq	r3, [r2], -ip
   11068:			; <UNDEFINED> instruction: 0x000123b0
   1106c:	muleq	r1, r0, r4
   11070:	andeq	r2, r1, r0, ror r4
   11074:	andeq	r2, r1, r0, asr #8
   11078:	mov	fp, #0
   1107c:	mov	lr, #0
   11080:	pop	{r1}		; (ldr r1, [sp], #4)
   11084:	mov	r2, sp
   11088:	push	{r2}		; (str r2, [sp, #-4]!)
   1108c:	push	{r0}		; (str r0, [sp, #-4]!)
   11090:	ldr	ip, [pc, #16]	; 110a8 <close@plt+0x6c8>
   11094:	push	{ip}		; (str ip, [sp, #-4]!)
   11098:	ldr	r0, [pc, #12]	; 110ac <close@plt+0x6cc>
   1109c:	ldr	r3, [pc, #12]	; 110b0 <close@plt+0x6d0>
   110a0:	bl	1092c <__libc_start_main@plt>
   110a4:	bl	109d4 <abort@plt>
   110a8:	andeq	r2, r1, r8, ror #2
   110ac:	andeq	r0, r1, r4, lsr sl
   110b0:	andeq	r2, r1, r8, lsl #2
   110b4:	ldr	r3, [pc, #20]	; 110d0 <close@plt+0x6f0>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <close@plt+0x6f4>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	10950 <__gmon_start__@plt>
   110d0:	andeq	r1, r1, ip, lsr pc
   110d4:	andeq	r0, r0, ip, lsl #1
   110d8:	ldr	r0, [pc, #24]	; 110f8 <close@plt+0x718>
   110dc:	ldr	r3, [pc, #24]	; 110fc <close@plt+0x71c>
   110e0:	cmp	r3, r0
   110e4:	bxeq	lr
   110e8:	ldr	r3, [pc, #16]	; 11100 <close@plt+0x720>
   110ec:	cmp	r3, #0
   110f0:	bxeq	lr
   110f4:	bx	r3
   110f8:	muleq	r2, r8, r0
   110fc:	muleq	r2, r8, r0
   11100:	andeq	r0, r0, r0
   11104:	ldr	r0, [pc, #36]	; 11130 <close@plt+0x750>
   11108:	ldr	r1, [pc, #36]	; 11134 <close@plt+0x754>
   1110c:	sub	r1, r1, r0
   11110:	asr	r1, r1, #2
   11114:	add	r1, r1, r1, lsr #31
   11118:	asrs	r1, r1, #1
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <close@plt+0x758>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	muleq	r2, r8, r0
   11134:	muleq	r2, r8, r0
   11138:	andeq	r0, r0, r0
   1113c:	push	{r4, lr}
   11140:	ldr	r4, [pc, #24]	; 11160 <close@plt+0x780>
   11144:	ldrb	r3, [r4]
   11148:	cmp	r3, #0
   1114c:	popne	{r4, pc}
   11150:	bl	110d8 <close@plt+0x6f8>
   11154:	mov	r3, #1
   11158:	strb	r3, [r4]
   1115c:	pop	{r4, pc}
   11160:	andeq	r3, r2, ip, lsr #1
   11164:	b	11104 <close@plt+0x724>
   11168:	ldr	r3, [pc, #44]	; 1119c <close@plt+0x7bc>
   1116c:	push	{r4, lr}
   11170:	mov	r2, #5
   11174:	ldr	r1, [pc, #36]	; 111a0 <close@plt+0x7c0>
   11178:	mov	r0, #0
   1117c:	ldr	r4, [r3]
   11180:	bl	108c0 <dcgettext@plt>
   11184:	mov	r1, #1
   11188:	mov	r2, r0
   1118c:	mov	r0, r4
   11190:	bl	10998 <__fprintf_chk@plt>
   11194:	mov	r0, #1
   11198:	bl	10968 <exit@plt>
   1119c:	andeq	r3, r2, r0, lsr #1
   111a0:	andeq	r2, r1, r8, ror r1
   111a4:	push	{r4, lr}
   111a8:	mov	r5, r0
   111ac:	ldr	r4, [pc, #144]	; 11244 <close@plt+0x864>
   111b0:	ldr	r3, [r4]
   111b4:	cmp	r3, #0
   111b8:	bne	111d0 <close@plt+0x7f0>
   111bc:	ldr	r3, [r4, #8]
   111c0:	cmp	r3, #0
   111c4:	bne	11208 <close@plt+0x828>
   111c8:	mov	r0, r5
   111cc:	bl	10968 <exit@plt>
   111d0:	ldr	r1, [pc, #112]	; 11248 <close@plt+0x868>
   111d4:	ldr	r0, [r4, #4]
   111d8:	bl	11680 <close@plt+0xca0>
   111dc:	cmp	r0, #0
   111e0:	beq	111bc <close@plt+0x7dc>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #92]	; 1124c <close@plt+0x86c>
   111ec:	mov	r0, #0
   111f0:	bl	108c0 <dcgettext@plt>
   111f4:	mov	r5, #1
   111f8:	mov	r1, r0
   111fc:	mov	r0, #0
   11200:	bl	11498 <close@plt+0xab8>
   11204:	b	111bc <close@plt+0x7dc>
   11208:	ldr	r0, [r4, #4]
   1120c:	ldr	r2, [pc, #60]	; 11250 <close@plt+0x870>
   11210:	mov	r1, #0
   11214:	bl	11814 <close@plt+0xe34>
   11218:	cmp	r0, #0
   1121c:	beq	111c8 <close@plt+0x7e8>
   11220:	mov	r2, #5
   11224:	ldr	r1, [pc, #40]	; 11254 <close@plt+0x874>
   11228:	mov	r0, #0
   1122c:	bl	108c0 <dcgettext@plt>
   11230:	mov	r5, #1
   11234:	mov	r1, r0
   11238:	mov	r0, #0
   1123c:	bl	11498 <close@plt+0xab8>
   11240:	b	111c8 <close@plt+0x7e8>
   11244:	strheq	r3, [r2], -r0
   11248:	ldrdeq	r3, [r2], -r0
   1124c:	andeq	r2, r1, ip, lsl #6
   11250:	andeq	r3, r2, r8, asr #1
   11254:	andeq	r2, r1, ip, lsr r3
   11258:	push	{r4, lr}
   1125c:	mov	r1, #2
   11260:	mov	r4, r0
   11264:	bl	1095c <open@plt>
   11268:	cmp	r0, #0
   1126c:	popge	{r4, pc}
   11270:	mov	r1, #1
   11274:	mov	r0, r4
   11278:	bl	1095c <open@plt>
   1127c:	cmp	r0, #0
   11280:	popge	{r4, pc}
   11284:	mov	r0, r4
   11288:	mov	r1, #0
   1128c:	bl	1095c <open@plt>
   11290:	orr	r0, r0, r0, asr #31
   11294:	pop	{r4, pc}
   11298:	push	{r4, r5, lr}
   1129c:	sub	sp, sp, #12
   112a0:	ldr	r4, [pc, #108]	; 11314 <close@plt+0x934>
   112a4:	mov	r3, #0
   112a8:	strb	r3, [sp, #3]
   112ac:	ldr	r3, [r4]
   112b0:	mov	r5, r0
   112b4:	str	r3, [sp, #4]
   112b8:	bl	109c8 <isatty@plt>
   112bc:	cmp	r0, #0
   112c0:	bne	112e0 <close@plt+0x900>
   112c4:	mov	r0, #0
   112c8:	ldr	r2, [sp, #4]
   112cc:	ldr	r3, [r4]
   112d0:	cmp	r2, r3
   112d4:	bne	11310 <close@plt+0x930>
   112d8:	add	sp, sp, #12
   112dc:	pop	{r4, r5, pc}
   112e0:	mov	r0, r5
   112e4:	add	r2, sp, #3
   112e8:	ldr	r1, [pc, #40]	; 11318 <close@plt+0x938>
   112ec:	bl	10914 <ioctl@plt>
   112f0:	cmp	r0, #0
   112f4:	bne	112c4 <close@plt+0x8e4>
   112f8:	ldrb	r0, [sp, #3]
   112fc:	sub	r0, r0, #1
   11300:	cmp	r0, #1
   11304:	movhi	r0, #0
   11308:	movls	r0, #1
   1130c:	b	112c8 <close@plt+0x8e8>
   11310:	bl	108d8 <__stack_chk_fail@plt>
   11314:	andeq	r2, r2, r8, lsl #30
   11318:	andeq	r4, r0, r3, lsr fp
   1131c:	push	{r4, r5, r6, lr}
   11320:	subs	r5, r0, #0
   11324:	beq	11348 <close@plt+0x968>
   11328:	bl	11258 <close@plt+0x878>
   1132c:	subs	r4, r0, #0
   11330:	blt	113e0 <close@plt+0xa00>
   11334:	bl	11298 <close@plt+0x8b8>
   11338:	cmp	r0, #0
   1133c:	beq	113d8 <close@plt+0x9f8>
   11340:	mov	r0, r4
   11344:	pop	{r4, r5, r6, pc}
   11348:	ldr	r5, [pc, #196]	; 11414 <close@plt+0xa34>
   1134c:	ldr	r0, [pc, #196]	; 11418 <close@plt+0xa38>
   11350:	b	11360 <close@plt+0x980>
   11354:	ldr	r0, [r5], #4
   11358:	cmp	r0, #0
   1135c:	beq	1138c <close@plt+0x9ac>
   11360:	bl	11258 <close@plt+0x878>
   11364:	subs	r4, r0, #0
   11368:	blt	11354 <close@plt+0x974>
   1136c:	bl	11298 <close@plt+0x8b8>
   11370:	cmp	r0, #0
   11374:	bne	11340 <close@plt+0x960>
   11378:	mov	r0, r4
   1137c:	bl	109e0 <close@plt>
   11380:	ldr	r0, [r5], #4
   11384:	cmp	r0, #0
   11388:	bne	11360 <close@plt+0x980>
   1138c:	mov	r4, r0
   11390:	mov	r0, r4
   11394:	bl	11298 <close@plt+0x8b8>
   11398:	cmp	r0, #0
   1139c:	bne	11340 <close@plt+0x960>
   113a0:	add	r4, r4, #1
   113a4:	cmp	r4, #3
   113a8:	bne	11390 <close@plt+0x9b0>
   113ac:	ldr	r3, [pc, #104]	; 1141c <close@plt+0xa3c>
   113b0:	mov	r2, #5
   113b4:	ldr	r1, [pc, #100]	; 11420 <close@plt+0xa40>
   113b8:	ldr	r4, [r3]
   113bc:	bl	108c0 <dcgettext@plt>
   113c0:	mov	r1, #1
   113c4:	mov	r2, r0
   113c8:	mov	r0, r4
   113cc:	bl	10998 <__fprintf_chk@plt>
   113d0:	mov	r0, #1
   113d4:	bl	10968 <exit@plt>
   113d8:	mov	r0, r4
   113dc:	bl	109e0 <close@plt>
   113e0:	ldr	r3, [pc, #52]	; 1141c <close@plt+0xa3c>
   113e4:	mov	r2, #5
   113e8:	ldr	r1, [pc, #52]	; 11424 <close@plt+0xa44>
   113ec:	mov	r0, #0
   113f0:	ldr	r4, [r3]
   113f4:	bl	108c0 <dcgettext@plt>
   113f8:	mov	r3, r5
   113fc:	mov	r1, #1
   11400:	mov	r2, r0
   11404:	mov	r0, r4
   11408:	bl	10998 <__fprintf_chk@plt>
   1140c:	mov	r0, #1
   11410:	bl	10968 <exit@plt>
   11414:	andeq	r2, r1, r0, lsr #9
   11418:			; <UNDEFINED> instruction: 0x000124b8
   1141c:	andeq	r3, r2, r0, lsr #1
   11420:	ldrdeq	r2, [r1], -ip
   11424:	andeq	r2, r1, r8, asr #9
   11428:	push	{r4, lr}
   1142c:	bl	10920 <malloc@plt>
   11430:	cmp	r0, #0
   11434:	popne	{r4, pc}
   11438:	bl	109ec <close@plt+0xc>
   1143c:	push	{r4, lr}
   11440:	bl	108e4 <realloc@plt>
   11444:	cmp	r0, #0
   11448:	popne	{r4, pc}
   1144c:	bl	109ec <close@plt+0xc>
   11450:	push	{r4, lr}
   11454:	bl	108cc <strdup@plt>
   11458:	cmp	r0, #0
   1145c:	popne	{r4, pc}
   11460:	bl	109ec <close@plt+0xc>
   11464:	push	{r4, lr}
   11468:	bl	108a8 <strndup@plt>
   1146c:	cmp	r0, #0
   11470:	popne	{r4, pc}
   11474:	bl	109ec <close@plt+0xc>
   11478:	cmp	r0, #0
   1147c:	beq	11490 <close@plt+0xab0>
   11480:	push	{r4, lr}
   11484:	bl	1089c <free@plt>
   11488:	mov	r0, #0
   1148c:	pop	{r4, pc}
   11490:	mov	r0, #0
   11494:	bx	lr
   11498:	push	{r1, r2, r3}
   1149c:	push	{r4, r5, r6, r7, lr}
   114a0:	sub	sp, sp, #8
   114a4:	ldr	r5, [pc, #144]	; 1153c <close@plt+0xb5c>
   114a8:	ldr	r4, [pc, #144]	; 11540 <close@plt+0xb60>
   114ac:	ldr	r3, [pc, #144]	; 11544 <close@plt+0xb64>
   114b0:	ldr	r1, [r5]
   114b4:	ldr	r7, [sp, #28]
   114b8:	add	ip, sp, #32
   114bc:	mov	r6, r0
   114c0:	ldr	r3, [r3]
   114c4:	ldr	r2, [pc, #124]	; 11548 <close@plt+0xb68>
   114c8:	str	r1, [sp, #4]
   114cc:	ldr	r0, [r4]
   114d0:	mov	r1, #1
   114d4:	str	ip, [sp]
   114d8:	bl	10998 <__fprintf_chk@plt>
   114dc:	mov	r2, r7
   114e0:	ldr	r0, [r4]
   114e4:	ldr	r3, [sp]
   114e8:	mov	r1, #1
   114ec:	bl	10944 <__vfprintf_chk@plt>
   114f0:	cmp	r6, #0
   114f4:	ble	11518 <close@plt+0xb38>
   114f8:	mov	r0, r6
   114fc:	ldr	r4, [r4]
   11500:	bl	10938 <strerror@plt>
   11504:	ldr	r2, [pc, #64]	; 1154c <close@plt+0xb6c>
   11508:	mov	r1, #1
   1150c:	mov	r3, r0
   11510:	mov	r0, r4
   11514:	bl	10998 <__fprintf_chk@plt>
   11518:	ldr	r2, [sp, #4]
   1151c:	ldr	r3, [r5]
   11520:	cmp	r2, r3
   11524:	bne	11538 <close@plt+0xb58>
   11528:	add	sp, sp, #8
   1152c:	pop	{r4, r5, r6, r7, lr}
   11530:	add	sp, sp, #12
   11534:	bx	lr
   11538:	bl	108d8 <__stack_chk_fail@plt>
   1153c:	andeq	r2, r2, r8, lsl #30
   11540:	andeq	r3, r2, r0, lsr #1
   11544:	andeq	r3, r2, r4, asr #1
   11548:	andeq	r2, r1, ip, ror #10
   1154c:	andeq	r2, r1, r4, ror r5
   11550:	push	{r2, r3}
   11554:	mov	r5, r1
   11558:	ldr	r2, [pc, #124]	; 115dc <close@plt+0xbfc>
   1155c:	push	{r7, lr}
   11560:	sub	sp, sp, #8
   11564:	ldr	r4, [pc, #116]	; 115e0 <close@plt+0xc00>
   11568:	ldr	r3, [pc, #116]	; 115e4 <close@plt+0xc04>
   1156c:	ldr	lr, [r2]
   11570:	ldr	r7, [sp, #16]
   11574:	add	ip, sp, #20
   11578:	ldr	r3, [r3]
   1157c:	ldr	r2, [pc, #100]	; 115e8 <close@plt+0xc08>
   11580:	mov	r1, #1
   11584:	mov	r6, r0
   11588:	ldr	r0, [r4]
   1158c:	str	lr, [sp, #4]
   11590:	str	ip, [sp]
   11594:	bl	10998 <__fprintf_chk@plt>
   11598:	mov	r2, r7
   1159c:	ldr	r0, [r4]
   115a0:	ldr	r3, [sp]
   115a4:	mov	r1, #1
   115a8:	bl	10944 <__vfprintf_chk@plt>
   115ac:	cmp	r5, #0
   115b0:	ble	115d4 <close@plt+0xbf4>
   115b4:	mov	r0, r5
   115b8:	ldr	r4, [r4]
   115bc:	bl	10938 <strerror@plt>
   115c0:	ldr	r2, [pc, #36]	; 115ec <close@plt+0xc0c>
   115c4:	mov	r1, #1
   115c8:	mov	r3, r0
   115cc:	mov	r0, r4
   115d0:	bl	10998 <__fprintf_chk@plt>
   115d4:	mov	r0, r6
   115d8:	bl	10968 <exit@plt>
   115dc:	andeq	r2, r2, r8, lsl #30
   115e0:	andeq	r3, r2, r0, lsr #1
   115e4:	andeq	r3, r2, r4, asr #1
   115e8:	andeq	r2, r1, ip, ror #10
   115ec:	andeq	r2, r1, r4, ror r5
   115f0:	push	{r4, lr}
   115f4:	mov	r2, r1
   115f8:	ldr	r1, [pc, #24]	; 11618 <close@plt+0xc38>
   115fc:	bl	10914 <ioctl@plt>
   11600:	cmp	r0, #0
   11604:	popeq	{r4, pc}
   11608:	ldr	r0, [pc, #12]	; 1161c <close@plt+0xc3c>
   1160c:	bl	108fc <perror@plt>
   11610:	mvn	r0, #0
   11614:	pop	{r4, pc}
   11618:	andeq	r4, r0, r0, asr #22
   1161c:	andeq	r2, r1, ip, ror r5
   11620:	push	{r4, lr}
   11624:	mov	r2, r1
   11628:	ldr	r1, [pc, #24]	; 11648 <close@plt+0xc68>
   1162c:	bl	10914 <ioctl@plt>
   11630:	cmp	r0, #0
   11634:	popeq	{r4, pc}
   11638:	ldr	r0, [pc, #12]	; 1164c <close@plt+0xc6c>
   1163c:	bl	108fc <perror@plt>
   11640:	mvn	r0, #0
   11644:	pop	{r4, pc}
   11648:	andeq	r4, r0, r1, asr #22
   1164c:	andeq	r2, r1, r8, lsl #11
   11650:	push	{r4, lr}
   11654:	mov	r2, r1
   11658:	ldr	r1, [pc, #24]	; 11678 <close@plt+0xc98>
   1165c:	bl	10914 <ioctl@plt>
   11660:	cmp	r0, #0
   11664:	popeq	{r4, pc}
   11668:	ldr	r0, [pc, #12]	; 1167c <close@plt+0xc9c>
   1166c:	bl	108fc <perror@plt>
   11670:	mvn	r0, #0
   11674:	pop	{r4, pc}
   11678:	andeq	r4, r0, r9, ror #22
   1167c:	muleq	r1, r4, r5
   11680:	push	{r4, lr}
   11684:	mov	r2, r1
   11688:	ldr	r1, [pc, #24]	; 116a8 <close@plt+0xcc8>
   1168c:	bl	10914 <ioctl@plt>
   11690:	cmp	r0, #0
   11694:	popeq	{r4, pc}
   11698:	ldr	r0, [pc, #12]	; 116ac <close@plt+0xccc>
   1169c:	bl	108fc <perror@plt>
   116a0:	mvn	r0, #0
   116a4:	pop	{r4, pc}
   116a8:	andeq	r4, r0, sl, ror #22
   116ac:	andeq	r2, r1, r4, lsr #11
   116b0:	push	{r4, r5, r6, r7, r8, lr}
   116b4:	sub	sp, sp, #24
   116b8:	ldr	r5, [pc, #308]	; 117f4 <close@plt+0xe14>
   116bc:	add	r4, sp, #12
   116c0:	mov	r3, #0
   116c4:	ldr	ip, [r5]
   116c8:	mov	r6, r1
   116cc:	mov	r2, r4
   116d0:	ldr	r1, [pc, #288]	; 117f8 <close@plt+0xe18>
   116d4:	str	ip, [sp, #20]
   116d8:	strh	r3, [sp, #12]
   116dc:	str	r3, [sp, #16]
   116e0:	mov	r8, r0
   116e4:	bl	10914 <ioctl@plt>
   116e8:	cmp	r0, #0
   116ec:	beq	11774 <close@plt+0xd94>
   116f0:	bl	10980 <__errno_location@plt>
   116f4:	ldr	r3, [r0]
   116f8:	cmp	r3, #12
   116fc:	bne	1179c <close@plt+0xdbc>
   11700:	ldrh	r7, [sp, #12]
   11704:	cmp	r7, #0
   11708:	beq	1179c <close@plt+0xdbc>
   1170c:	lsl	r0, r7, #2
   11710:	bl	10920 <malloc@plt>
   11714:	cmp	r0, #0
   11718:	str	r0, [sp, #16]
   1171c:	beq	117bc <close@plt+0xddc>
   11720:	mov	r0, r8
   11724:	mov	r2, r4
   11728:	ldr	r1, [pc, #200]	; 117f8 <close@plt+0xe18>
   1172c:	bl	10914 <ioctl@plt>
   11730:	cmp	r0, #0
   11734:	bne	117ac <close@plt+0xdcc>
   11738:	ldrh	r3, [sp, #12]
   1173c:	cmp	r3, r7
   11740:	beq	11774 <close@plt+0xd94>
   11744:	ldr	r3, [pc, #176]	; 117fc <close@plt+0xe1c>
   11748:	mov	r2, #5
   1174c:	ldr	r1, [pc, #172]	; 11800 <close@plt+0xe20>
   11750:	ldr	r8, [r3]
   11754:	bl	108c0 <dcgettext@plt>
   11758:	ldrh	r2, [sp, #12]
   1175c:	mov	r3, r7
   11760:	mov	r1, #1
   11764:	str	r2, [sp]
   11768:	mov	r2, r0
   1176c:	mov	r0, r8
   11770:	bl	10998 <__fprintf_chk@plt>
   11774:	ldm	r4, {r0, r1}
   11778:	mov	ip, #0
   1177c:	stm	r6, {r0, r1}
   11780:	ldr	r2, [sp, #20]
   11784:	ldr	r3, [r5]
   11788:	mov	r0, ip
   1178c:	cmp	r2, r3
   11790:	bne	117f0 <close@plt+0xe10>
   11794:	add	sp, sp, #24
   11798:	pop	{r4, r5, r6, r7, r8, pc}
   1179c:	ldr	r0, [pc, #96]	; 11804 <close@plt+0xe24>
   117a0:	bl	108fc <perror@plt>
   117a4:	mvn	ip, #0
   117a8:	b	11780 <close@plt+0xda0>
   117ac:	ldr	r0, [pc, #84]	; 11808 <close@plt+0xe28>
   117b0:	bl	108fc <perror@plt>
   117b4:	mvn	ip, #0
   117b8:	b	11780 <close@plt+0xda0>
   117bc:	ldr	r3, [pc, #56]	; 117fc <close@plt+0xe1c>
   117c0:	mov	r2, #5
   117c4:	ldr	r1, [pc, #64]	; 1180c <close@plt+0xe2c>
   117c8:	ldr	r4, [r3]
   117cc:	bl	108c0 <dcgettext@plt>
   117d0:	ldr	r3, [pc, #56]	; 11810 <close@plt+0xe30>
   117d4:	mov	r1, #1
   117d8:	ldr	r3, [r3]
   117dc:	mov	r2, r0
   117e0:	mov	r0, r4
   117e4:	bl	10998 <__fprintf_chk@plt>
   117e8:	mvn	ip, #0
   117ec:	b	11780 <close@plt+0xda0>
   117f0:	bl	108d8 <__stack_chk_fail@plt>
   117f4:	andeq	r2, r2, r8, lsl #30
   117f8:	andeq	r4, r0, r6, ror #22
   117fc:	andeq	r3, r2, r0, lsr #1
   11800:	ldrdeq	r2, [r1], -r0
   11804:			; <UNDEFINED> instruction: 0x000125b4
   11808:	andeq	r2, r1, r4, asr #11
   1180c:	andeq	r2, r1, r8, asr r5
   11810:	andeq	r3, r2, r4, asr #1
   11814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11818:	sub	sp, sp, #16
   1181c:	ldr	r9, [pc, #220]	; 11900 <close@plt+0xf20>
   11820:	cmp	r1, #0
   11824:	mov	r4, r0
   11828:	ldr	r3, [r9]
   1182c:	mov	r5, r2
   11830:	str	r3, [sp, #12]
   11834:	beq	118ec <close@plt+0xf0c>
   11838:	ldrh	r3, [r1, #4]
   1183c:	ldr	r0, [r1]
   11840:	add	r6, sp, #4
   11844:	str	r0, [sp, #4]
   11848:	strh	r3, [r6, #4]
   1184c:	ldr	r7, [pc, #176]	; 11904 <close@plt+0xf24>
   11850:	ldr	r8, [pc, #176]	; 11908 <close@plt+0xf28>
   11854:	b	1189c <close@plt+0xebc>
   11858:	cmp	r5, #0
   1185c:	beq	118c0 <close@plt+0xee0>
   11860:	mov	r2, r5
   11864:	mov	r1, r8
   11868:	mov	r0, r4
   1186c:	bl	10914 <ioctl@plt>
   11870:	cmp	r0, #0
   11874:	beq	118c0 <close@plt+0xee0>
   11878:	bl	10980 <__errno_location@plt>
   1187c:	ldr	r3, [r0]
   11880:	cmp	r3, #12
   11884:	bne	118dc <close@plt+0xefc>
   11888:	ldrh	r3, [sp, #8]
   1188c:	cmp	r3, #99	; 0x63
   11890:	bhi	118dc <close@plt+0xefc>
   11894:	add	r3, r3, #1
   11898:	strh	r3, [sp, #8]
   1189c:	mov	r2, r6
   118a0:	mov	r1, r7
   118a4:	mov	r0, r4
   118a8:	bl	10914 <ioctl@plt>
   118ac:	subs	sl, r0, #0
   118b0:	beq	11858 <close@plt+0xe78>
   118b4:	ldr	r0, [pc, #80]	; 1190c <close@plt+0xf2c>
   118b8:	bl	108fc <perror@plt>
   118bc:	mvn	sl, #0
   118c0:	ldr	r2, [sp, #12]
   118c4:	ldr	r3, [r9]
   118c8:	mov	r0, sl
   118cc:	cmp	r2, r3
   118d0:	bne	118fc <close@plt+0xf1c>
   118d4:	add	sp, sp, #16
   118d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118dc:	ldr	r0, [pc, #44]	; 11910 <close@plt+0xf30>
   118e0:	bl	108fc <perror@plt>
   118e4:	mvn	sl, #0
   118e8:	b	118c0 <close@plt+0xee0>
   118ec:	str	r1, [sp, #4]
   118f0:	strh	r1, [sp, #8]
   118f4:	add	r6, sp, #4
   118f8:	b	1184c <close@plt+0xe6c>
   118fc:	bl	108d8 <__stack_chk_fail@plt>
   11900:	andeq	r2, r2, r8, lsl #30
   11904:	andeq	r4, r0, r8, ror #22
   11908:	andeq	r4, r0, r7, ror #22
   1190c:	strdeq	r2, [r1], -r8
   11910:	andeq	r2, r1, r8, lsl #12
   11914:	push	{r4, lr}
   11918:	mov	r2, #0
   1191c:	ldr	r1, [pc, #24]	; 1193c <close@plt+0xf5c>
   11920:	bl	10914 <ioctl@plt>
   11924:	cmp	r0, #0
   11928:	popeq	{r4, pc}
   1192c:	ldr	r0, [pc, #12]	; 11940 <close@plt+0xf60>
   11930:	bl	108fc <perror@plt>
   11934:	mvn	r0, #0
   11938:	pop	{r4, pc}
   1193c:	andeq	r4, r0, sp, ror #22
   11940:	andeq	r2, r1, r4, lsl r6
   11944:	push	{r4, r5, r6, r7, r8, lr}
   11948:	adds	lr, r2, #7
   1194c:	addmi	lr, r2, #14
   11950:	asr	lr, lr, #3
   11954:	sub	r8, lr, #1
   11958:	lsl	r7, lr, #5
   1195c:	sub	r5, r7, lr
   11960:	add	r5, r5, #1
   11964:	add	r5, r0, r5
   11968:	mov	r0, #32
   1196c:	cmp	r1, #0
   11970:	movgt	r4, r5
   11974:	movgt	r6, #0
   11978:	ble	119c0 <close@plt+0xfe0>
   1197c:	cmp	lr, #0
   11980:	ble	119b0 <close@plt+0xfd0>
   11984:	ldrb	r3, [r4, #-1]
   11988:	cmp	r3, #0
   1198c:	popne	{r4, r5, r6, r7, r8, pc}
   11990:	add	ip, r8, r4
   11994:	mov	r3, r4
   11998:	b	119a8 <close@plt+0xfc8>
   1199c:	ldrb	r2, [r3], #1
   119a0:	cmp	r2, #0
   119a4:	popne	{r4, r5, r6, r7, r8, pc}
   119a8:	cmp	r3, ip
   119ac:	bne	1199c <close@plt+0xfbc>
   119b0:	add	r6, r6, #1
   119b4:	cmp	r1, r6
   119b8:	add	r4, r4, r7
   119bc:	bne	1197c <close@plt+0xf9c>
   119c0:	subs	r0, r0, #1
   119c4:	sub	r5, r5, lr
   119c8:	bne	1196c <close@plt+0xf8c>
   119cc:	pop	{r4, r5, r6, r7, r8, pc}
   119d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119d4:	mov	r6, r1
   119d8:	ldr	r5, [pc, #456]	; 11ba8 <close@plt+0x11c8>
   119dc:	sub	sp, sp, #40	; 0x28
   119e0:	mov	r4, r2
   119e4:	ldr	r1, [r5]
   119e8:	ldr	r2, [r2]
   119ec:	mov	ip, #32
   119f0:	mov	r8, #1
   119f4:	mov	lr, #0
   119f8:	str	r2, [sp, #28]
   119fc:	str	r1, [sp, #36]	; 0x24
   11a00:	add	r2, sp, #12
   11a04:	ldr	r1, [pc, #416]	; 11bac <close@plt+0x11cc>
   11a08:	str	r8, [sp, #12]
   11a0c:	str	r6, [sp, #32]
   11a10:	mov	r7, r3
   11a14:	str	lr, [sp, #16]
   11a18:	str	ip, [sp, #24]
   11a1c:	str	ip, [sp, #20]
   11a20:	mov	r9, r0
   11a24:	ldr	r8, [sp, #72]	; 0x48
   11a28:	bl	10914 <ioctl@plt>
   11a2c:	cmp	r0, #0
   11a30:	bne	11a6c <close@plt+0x108c>
   11a34:	ldr	r3, [sp, #28]
   11a38:	cmp	r8, #0
   11a3c:	str	r3, [r4]
   11a40:	ldrne	r3, [sp, #24]
   11a44:	strne	r3, [r8]
   11a48:	cmp	r7, #0
   11a4c:	ldrne	r3, [sp, #20]
   11a50:	strne	r3, [r7]
   11a54:	ldr	r2, [sp, #36]	; 0x24
   11a58:	ldr	r3, [r5]
   11a5c:	cmp	r2, r3
   11a60:	bne	11ba4 <close@plt+0x11c4>
   11a64:	add	sp, sp, #40	; 0x28
   11a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a6c:	bl	10980 <__errno_location@plt>
   11a70:	ldr	r3, [r0]
   11a74:	mov	sl, r0
   11a78:	sub	r3, r3, #22
   11a7c:	bics	r3, r3, #16
   11a80:	bne	11b30 <close@plt+0x1150>
   11a84:	cmp	r7, #0
   11a88:	movne	r3, #8
   11a8c:	strne	r3, [r7]
   11a90:	ldr	r0, [r4]
   11a94:	mov	r3, #0
   11a98:	strh	r0, [sp, #4]
   11a9c:	add	r2, sp, #4
   11aa0:	ldr	r1, [pc, #264]	; 11bb0 <close@plt+0x11d0>
   11aa4:	mov	r0, r9
   11aa8:	str	r6, [sp, #8]
   11aac:	strh	r3, [sp, #6]
   11ab0:	bl	10914 <ioctl@plt>
   11ab4:	cmp	r0, #0
   11ab8:	bne	11ad8 <close@plt+0x10f8>
   11abc:	ldrh	r3, [sp, #4]
   11ac0:	cmp	r8, #0
   11ac4:	str	r3, [r4]
   11ac8:	beq	11b28 <close@plt+0x1148>
   11acc:	ldrh	r3, [sp, #6]
   11ad0:	str	r3, [r8]
   11ad4:	b	11a54 <close@plt+0x1074>
   11ad8:	ldr	r0, [sl]
   11adc:	sub	r0, r0, #22
   11ae0:	bics	r0, r0, #16
   11ae4:	bne	11b40 <close@plt+0x1160>
   11ae8:	ldr	r3, [r4]
   11aec:	cmp	r3, #255	; 0xff
   11af0:	ble	11b50 <close@plt+0x1170>
   11af4:	cmp	r6, #0
   11af8:	beq	11b8c <close@plt+0x11ac>
   11afc:	mov	r2, r6
   11b00:	mov	r0, r9
   11b04:	ldr	r1, [pc, #168]	; 11bb4 <close@plt+0x11d4>
   11b08:	bl	10914 <ioctl@plt>
   11b0c:	cmp	r0, #0
   11b10:	bne	11b7c <close@plt+0x119c>
   11b14:	mov	r3, #256	; 0x100
   11b18:	cmp	r8, #0
   11b1c:	str	r3, [r4]
   11b20:	strne	r0, [r8]
   11b24:	bne	11a54 <close@plt+0x1074>
   11b28:	mov	r0, #0
   11b2c:	b	11a54 <close@plt+0x1074>
   11b30:	ldr	r0, [pc, #128]	; 11bb8 <close@plt+0x11d8>
   11b34:	bl	108fc <perror@plt>
   11b38:	mvn	r0, #0
   11b3c:	b	11a54 <close@plt+0x1074>
   11b40:	ldr	r0, [pc, #116]	; 11bbc <close@plt+0x11dc>
   11b44:	bl	108fc <perror@plt>
   11b48:	mvn	r0, #0
   11b4c:	b	11a54 <close@plt+0x1074>
   11b50:	ldr	r3, [pc, #104]	; 11bc0 <close@plt+0x11e0>
   11b54:	ldr	r1, [pc, #104]	; 11bc4 <close@plt+0x11e4>
   11b58:	mov	r2, #5
   11b5c:	ldr	r4, [r3]
   11b60:	bl	108c0 <dcgettext@plt>
   11b64:	mov	r1, #1
   11b68:	mov	r2, r0
   11b6c:	mov	r0, r4
   11b70:	bl	10998 <__fprintf_chk@plt>
   11b74:	mvn	r0, #0
   11b78:	b	11a54 <close@plt+0x1074>
   11b7c:	ldr	r0, [pc, #68]	; 11bc8 <close@plt+0x11e8>
   11b80:	bl	108fc <perror@plt>
   11b84:	mvn	r0, #0
   11b88:	b	11a54 <close@plt+0x1074>
   11b8c:	ldr	r3, [pc, #44]	; 11bc0 <close@plt+0x11e0>
   11b90:	mov	r0, r6
   11b94:	mov	r2, #5
   11b98:	ldr	r4, [r3]
   11b9c:	ldr	r1, [pc, #40]	; 11bcc <close@plt+0x11ec>
   11ba0:	b	11b60 <close@plt+0x1180>
   11ba4:	bl	108d8 <__stack_chk_fail@plt>
   11ba8:	andeq	r2, r2, r8, lsl #30
   11bac:	andeq	r4, r0, r2, ror fp
   11bb0:	andeq	r4, r0, fp, ror #22
   11bb4:	andeq	r4, r0, r0, ror #22
   11bb8:	andeq	r2, r1, r4, lsr #12
   11bbc:	andeq	r2, r1, r8, lsr r6
   11bc0:	andeq	r3, r2, r0, lsr #1
   11bc4:	andeq	r2, r1, ip, asr #12
   11bc8:	muleq	r1, r8, r6
   11bcc:	andeq	r2, r1, r0, ror r6
   11bd0:	push	{r4, lr}
   11bd4:	sub	sp, sp, #16
   11bd8:	ldr	r4, [pc, #68]	; 11c24 <close@plt+0x1244>
   11bdc:	add	r2, sp, #16
   11be0:	mov	r3, #0
   11be4:	ldr	ip, [r4]
   11be8:	str	r3, [r2, #-8]!
   11bec:	mov	r1, r3
   11bf0:	str	r3, [sp]
   11bf4:	str	ip, [sp, #12]
   11bf8:	bl	119d0 <close@plt+0xff0>
   11bfc:	ldr	r2, [sp, #12]
   11c00:	ldr	r3, [r4]
   11c04:	cmp	r0, #0
   11c08:	movne	r0, #256	; 0x100
   11c0c:	ldreq	r0, [sp, #8]
   11c10:	cmp	r2, r3
   11c14:	bne	11c20 <close@plt+0x1240>
   11c18:	add	sp, sp, #16
   11c1c:	pop	{r4, pc}
   11c20:	bl	108d8 <__stack_chk_fail@plt>
   11c24:	andeq	r2, r2, r8, lsl #30
   11c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c2c:	sub	sp, sp, #60	; 0x3c
   11c30:	ldr	r8, [pc, #588]	; 11e84 <close@plt+0x14a4>
   11c34:	subs	r7, r3, #0
   11c38:	ldr	r5, [sp, #96]	; 0x60
   11c3c:	moveq	sl, #8
   11c40:	ldr	r3, [r8]
   11c44:	movne	sl, r7
   11c48:	moveq	r7, sl
   11c4c:	cmp	r5, #0
   11c50:	mov	r9, r0
   11c54:	mov	r6, r1
   11c58:	mov	r4, r2
   11c5c:	str	r3, [sp, #52]	; 0x34
   11c60:	bne	11c78 <close@plt+0x1298>
   11c64:	mov	r2, r7
   11c68:	mov	r1, r4
   11c6c:	mov	r0, r6
   11c70:	bl	11944 <close@plt+0xf64>
   11c74:	mov	r5, r0
   11c78:	mov	r3, #0
   11c7c:	add	r2, sp, #28
   11c80:	ldr	r1, [pc, #512]	; 11e88 <close@plt+0x14a8>
   11c84:	mov	r0, r9
   11c88:	str	sl, [sp, #36]	; 0x24
   11c8c:	str	r5, [sp, #40]	; 0x28
   11c90:	str	r4, [sp, #44]	; 0x2c
   11c94:	str	r6, [sp, #48]	; 0x30
   11c98:	str	r3, [sp, #28]
   11c9c:	str	r3, [sp, #32]
   11ca0:	bl	10914 <ioctl@plt>
   11ca4:	cmp	r0, #0
   11ca8:	beq	11d3c <close@plt+0x135c>
   11cac:	cmp	r7, #8
   11cb0:	bne	11dfc <close@plt+0x141c>
   11cb4:	bl	10980 <__errno_location@plt>
   11cb8:	ldr	r2, [r0]
   11cbc:	mov	r7, r0
   11cc0:	sub	r3, r2, #22
   11cc4:	bics	r3, r3, #16
   11cc8:	bne	11dfc <close@plt+0x141c>
   11ccc:	cmp	r4, #256	; 0x100
   11cd0:	cmpne	r4, #512	; 0x200
   11cd4:	movlt	r3, #1
   11cd8:	movge	r3, #0
   11cdc:	cmp	r2, #22
   11ce0:	movne	r3, #0
   11ce4:	andeq	r3, r3, #1
   11ce8:	cmp	r3, #0
   11cec:	bne	11d58 <close@plt+0x1378>
   11cf0:	add	r2, sp, #20
   11cf4:	ldr	r1, [pc, #400]	; 11e8c <close@plt+0x14ac>
   11cf8:	mov	r0, r9
   11cfc:	strh	r4, [sp, #20]
   11d00:	strh	r5, [sp, #22]
   11d04:	str	r6, [sp, #24]
   11d08:	bl	10914 <ioctl@plt>
   11d0c:	cmp	r0, #0
   11d10:	beq	11d3c <close@plt+0x135c>
   11d14:	ldr	r3, [r7]
   11d18:	sub	r3, r3, #22
   11d1c:	bics	r3, r3, #16
   11d20:	bne	11e0c <close@plt+0x142c>
   11d24:	mov	r2, r6
   11d28:	mov	r0, r9
   11d2c:	ldr	r1, [pc, #348]	; 11e90 <close@plt+0x14b0>
   11d30:	bl	10914 <ioctl@plt>
   11d34:	cmp	r0, #0
   11d38:	bne	11dbc <close@plt+0x13dc>
   11d3c:	mov	r0, #0
   11d40:	ldr	r2, [sp, #52]	; 0x34
   11d44:	ldr	r3, [r8]
   11d48:	cmp	r2, r3
   11d4c:	bne	11e80 <close@plt+0x14a0>
   11d50:	add	sp, sp, #60	; 0x3c
   11d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d58:	ldr	r3, [pc, #308]	; 11e94 <close@plt+0x14b4>
   11d5c:	mov	r1, #1
   11d60:	cmp	r4, r3
   11d64:	movlt	r0, #8192	; 0x2000
   11d68:	movge	r0, #16384	; 0x4000
   11d6c:	movlt	fp, #256	; 0x100
   11d70:	movge	fp, #512	; 0x200
   11d74:	bl	1086c <calloc@plt>
   11d78:	subs	sl, r0, #0
   11d7c:	beq	11e4c <close@plt+0x146c>
   11d80:	lsl	r2, r4, #5
   11d84:	mov	r1, r6
   11d88:	bl	108b4 <memcpy@plt>
   11d8c:	add	r2, sp, #28
   11d90:	ldr	r1, [pc, #240]	; 11e88 <close@plt+0x14a8>
   11d94:	mov	r0, r9
   11d98:	str	fp, [sp, #44]	; 0x2c
   11d9c:	str	sl, [sp, #48]	; 0x30
   11da0:	bl	10914 <ioctl@plt>
   11da4:	mov	fp, r0
   11da8:	mov	r0, sl
   11dac:	bl	1089c <free@plt>
   11db0:	cmp	fp, #0
   11db4:	bne	11cf0 <close@plt+0x1310>
   11db8:	b	11d3c <close@plt+0x135c>
   11dbc:	ldr	r2, [pc, #212]	; 11e98 <close@plt+0x14b8>
   11dc0:	ldr	r3, [pc, #212]	; 11e9c <close@plt+0x14bc>
   11dc4:	str	r0, [sp, #12]
   11dc8:	ldr	r0, [r2]
   11dcc:	mov	r2, #8
   11dd0:	ldr	r3, [r3]
   11dd4:	mov	r1, #1
   11dd8:	str	r2, [sp, #4]
   11ddc:	str	r5, [sp, #8]
   11de0:	ldr	r2, [pc, #184]	; 11ea0 <close@plt+0x14c0>
   11de4:	str	r4, [sp]
   11de8:	bl	10998 <__fprintf_chk@plt>
   11dec:	ldr	r0, [pc, #176]	; 11ea4 <close@plt+0x14c4>
   11df0:	bl	108fc <perror@plt>
   11df4:	mvn	r0, #0
   11df8:	b	11d40 <close@plt+0x1360>
   11dfc:	ldr	r0, [pc, #164]	; 11ea8 <close@plt+0x14c8>
   11e00:	bl	108fc <perror@plt>
   11e04:	mvn	r0, #0
   11e08:	b	11d40 <close@plt+0x1360>
   11e0c:	ldr	r2, [pc, #132]	; 11e98 <close@plt+0x14b8>
   11e10:	ldr	r3, [pc, #132]	; 11e9c <close@plt+0x14bc>
   11e14:	str	r0, [sp, #12]
   11e18:	ldr	r0, [r2]
   11e1c:	mov	r2, #8
   11e20:	ldr	r3, [r3]
   11e24:	mov	r1, #1
   11e28:	str	r2, [sp, #4]
   11e2c:	str	r5, [sp, #8]
   11e30:	ldr	r2, [pc, #116]	; 11eac <close@plt+0x14cc>
   11e34:	str	r4, [sp]
   11e38:	bl	10998 <__fprintf_chk@plt>
   11e3c:	ldr	r0, [pc, #108]	; 11eb0 <close@plt+0x14d0>
   11e40:	bl	108fc <perror@plt>
   11e44:	mvn	r0, #0
   11e48:	b	11d40 <close@plt+0x1360>
   11e4c:	ldr	r3, [pc, #68]	; 11e98 <close@plt+0x14b8>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #88]	; 11eb4 <close@plt+0x14d4>
   11e58:	ldr	r4, [r3]
   11e5c:	bl	108c0 <dcgettext@plt>
   11e60:	ldr	r3, [pc, #52]	; 11e9c <close@plt+0x14bc>
   11e64:	mov	r1, #1
   11e68:	ldr	r3, [r3]
   11e6c:	mov	r2, r0
   11e70:	mov	r0, r4
   11e74:	bl	10998 <__fprintf_chk@plt>
   11e78:	mvn	r0, #0
   11e7c:	b	11d40 <close@plt+0x1360>
   11e80:	bl	108d8 <__stack_chk_fail@plt>
   11e84:	andeq	r2, r2, r8, lsl #30
   11e88:	andeq	r4, r0, r2, ror fp
   11e8c:	andeq	r4, r0, ip, ror #22
   11e90:	andeq	r4, r0, r1, ror #22
   11e94:	andeq	r0, r0, r1, lsl #2
   11e98:	andeq	r3, r2, r0, lsr #1
   11e9c:	andeq	r3, r2, r4, asr #1
   11ea0:	strdeq	r2, [r1], -r8
   11ea4:	andeq	r2, r1, ip, lsl r7
   11ea8:	andeq	r2, r1, ip, lsr #13
   11eac:	andeq	r2, r1, r0, asr #13
   11eb0:	andeq	r2, r1, r4, ror #13
   11eb4:	andeq	r2, r1, r8, asr r5
   11eb8:	cmp	r1, #0
   11ebc:	beq	120c8 <close@plt+0x16e8>
   11ec0:	eor	ip, r0, r1
   11ec4:	rsbmi	r1, r1, #0
   11ec8:	subs	r2, r1, #1
   11ecc:	beq	12094 <close@plt+0x16b4>
   11ed0:	movs	r3, r0
   11ed4:	rsbmi	r3, r0, #0
   11ed8:	cmp	r3, r1
   11edc:	bls	120a0 <close@plt+0x16c0>
   11ee0:	tst	r1, r2
   11ee4:	beq	120b0 <close@plt+0x16d0>
   11ee8:	clz	r2, r3
   11eec:	clz	r0, r1
   11ef0:	sub	r2, r0, r2
   11ef4:	rsbs	r2, r2, #31
   11ef8:	addne	r2, r2, r2, lsl #1
   11efc:	mov	r0, #0
   11f00:	addne	pc, pc, r2, lsl #2
   11f04:	nop			; (mov r0, r0)
   11f08:	cmp	r3, r1, lsl #31
   11f0c:	adc	r0, r0, r0
   11f10:	subcs	r3, r3, r1, lsl #31
   11f14:	cmp	r3, r1, lsl #30
   11f18:	adc	r0, r0, r0
   11f1c:	subcs	r3, r3, r1, lsl #30
   11f20:	cmp	r3, r1, lsl #29
   11f24:	adc	r0, r0, r0
   11f28:	subcs	r3, r3, r1, lsl #29
   11f2c:	cmp	r3, r1, lsl #28
   11f30:	adc	r0, r0, r0
   11f34:	subcs	r3, r3, r1, lsl #28
   11f38:	cmp	r3, r1, lsl #27
   11f3c:	adc	r0, r0, r0
   11f40:	subcs	r3, r3, r1, lsl #27
   11f44:	cmp	r3, r1, lsl #26
   11f48:	adc	r0, r0, r0
   11f4c:	subcs	r3, r3, r1, lsl #26
   11f50:	cmp	r3, r1, lsl #25
   11f54:	adc	r0, r0, r0
   11f58:	subcs	r3, r3, r1, lsl #25
   11f5c:	cmp	r3, r1, lsl #24
   11f60:	adc	r0, r0, r0
   11f64:	subcs	r3, r3, r1, lsl #24
   11f68:	cmp	r3, r1, lsl #23
   11f6c:	adc	r0, r0, r0
   11f70:	subcs	r3, r3, r1, lsl #23
   11f74:	cmp	r3, r1, lsl #22
   11f78:	adc	r0, r0, r0
   11f7c:	subcs	r3, r3, r1, lsl #22
   11f80:	cmp	r3, r1, lsl #21
   11f84:	adc	r0, r0, r0
   11f88:	subcs	r3, r3, r1, lsl #21
   11f8c:	cmp	r3, r1, lsl #20
   11f90:	adc	r0, r0, r0
   11f94:	subcs	r3, r3, r1, lsl #20
   11f98:	cmp	r3, r1, lsl #19
   11f9c:	adc	r0, r0, r0
   11fa0:	subcs	r3, r3, r1, lsl #19
   11fa4:	cmp	r3, r1, lsl #18
   11fa8:	adc	r0, r0, r0
   11fac:	subcs	r3, r3, r1, lsl #18
   11fb0:	cmp	r3, r1, lsl #17
   11fb4:	adc	r0, r0, r0
   11fb8:	subcs	r3, r3, r1, lsl #17
   11fbc:	cmp	r3, r1, lsl #16
   11fc0:	adc	r0, r0, r0
   11fc4:	subcs	r3, r3, r1, lsl #16
   11fc8:	cmp	r3, r1, lsl #15
   11fcc:	adc	r0, r0, r0
   11fd0:	subcs	r3, r3, r1, lsl #15
   11fd4:	cmp	r3, r1, lsl #14
   11fd8:	adc	r0, r0, r0
   11fdc:	subcs	r3, r3, r1, lsl #14
   11fe0:	cmp	r3, r1, lsl #13
   11fe4:	adc	r0, r0, r0
   11fe8:	subcs	r3, r3, r1, lsl #13
   11fec:	cmp	r3, r1, lsl #12
   11ff0:	adc	r0, r0, r0
   11ff4:	subcs	r3, r3, r1, lsl #12
   11ff8:	cmp	r3, r1, lsl #11
   11ffc:	adc	r0, r0, r0
   12000:	subcs	r3, r3, r1, lsl #11
   12004:	cmp	r3, r1, lsl #10
   12008:	adc	r0, r0, r0
   1200c:	subcs	r3, r3, r1, lsl #10
   12010:	cmp	r3, r1, lsl #9
   12014:	adc	r0, r0, r0
   12018:	subcs	r3, r3, r1, lsl #9
   1201c:	cmp	r3, r1, lsl #8
   12020:	adc	r0, r0, r0
   12024:	subcs	r3, r3, r1, lsl #8
   12028:	cmp	r3, r1, lsl #7
   1202c:	adc	r0, r0, r0
   12030:	subcs	r3, r3, r1, lsl #7
   12034:	cmp	r3, r1, lsl #6
   12038:	adc	r0, r0, r0
   1203c:	subcs	r3, r3, r1, lsl #6
   12040:	cmp	r3, r1, lsl #5
   12044:	adc	r0, r0, r0
   12048:	subcs	r3, r3, r1, lsl #5
   1204c:	cmp	r3, r1, lsl #4
   12050:	adc	r0, r0, r0
   12054:	subcs	r3, r3, r1, lsl #4
   12058:	cmp	r3, r1, lsl #3
   1205c:	adc	r0, r0, r0
   12060:	subcs	r3, r3, r1, lsl #3
   12064:	cmp	r3, r1, lsl #2
   12068:	adc	r0, r0, r0
   1206c:	subcs	r3, r3, r1, lsl #2
   12070:	cmp	r3, r1, lsl #1
   12074:	adc	r0, r0, r0
   12078:	subcs	r3, r3, r1, lsl #1
   1207c:	cmp	r3, r1
   12080:	adc	r0, r0, r0
   12084:	subcs	r3, r3, r1
   12088:	cmp	ip, #0
   1208c:	rsbmi	r0, r0, #0
   12090:	bx	lr
   12094:	teq	ip, r0
   12098:	rsbmi	r0, r0, #0
   1209c:	bx	lr
   120a0:	movcc	r0, #0
   120a4:	asreq	r0, ip, #31
   120a8:	orreq	r0, r0, #1
   120ac:	bx	lr
   120b0:	clz	r2, r1
   120b4:	rsb	r2, r2, #31
   120b8:	cmp	ip, #0
   120bc:	lsr	r0, r3, r2
   120c0:	rsbmi	r0, r0, #0
   120c4:	bx	lr
   120c8:	cmp	r0, #0
   120cc:	mvngt	r0, #-2147483648	; 0x80000000
   120d0:	movlt	r0, #-2147483648	; 0x80000000
   120d4:	b	120f8 <close@plt+0x1718>
   120d8:	cmp	r1, #0
   120dc:	beq	120c8 <close@plt+0x16e8>
   120e0:	push	{r0, r1, lr}
   120e4:	bl	11ec0 <close@plt+0x14e0>
   120e8:	pop	{r1, r2, lr}
   120ec:	mul	r3, r2, r0
   120f0:	sub	r1, r1, r3
   120f4:	bx	lr
   120f8:	push	{r1, lr}
   120fc:	mov	r0, #8
   12100:	bl	10878 <raise@plt>
   12104:	pop	{r1, pc}
   12108:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1210c:	mov	r7, r0
   12110:	ldr	r6, [pc, #72]	; 12160 <close@plt+0x1780>
   12114:	ldr	r5, [pc, #72]	; 12164 <close@plt+0x1784>
   12118:	add	r6, pc, r6
   1211c:	add	r5, pc, r5
   12120:	sub	r6, r6, r5
   12124:	mov	r8, r1
   12128:	mov	r9, r2
   1212c:	bl	1084c <calloc@plt-0x20>
   12130:	asrs	r6, r6, #2
   12134:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12138:	mov	r4, #0
   1213c:	add	r4, r4, #1
   12140:	ldr	r3, [r5], #4
   12144:	mov	r2, r9
   12148:	mov	r1, r8
   1214c:	mov	r0, r7
   12150:	blx	r3
   12154:	cmp	r6, r4
   12158:	bne	1213c <close@plt+0x175c>
   1215c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12160:	andeq	r0, r1, r4, ror #27
   12164:	ldrdeq	r0, [r1], -ip
   12168:	bx	lr

Disassembly of section .fini:

0001216c <.fini>:
   1216c:	push	{r3, lr}
   12170:	pop	{r3, pc}
