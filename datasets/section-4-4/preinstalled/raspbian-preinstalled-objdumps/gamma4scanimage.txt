
raspbian-preinstalled/gamma4scanimage:     file format elf32-littlearm


Disassembly of section .init:

000103e4 <.init>:
   103e4:	push	{r3, lr}
   103e8:	bl	10870 <abort@plt+0x418>
   103ec:	pop	{r3, pc}

Disassembly of section .plt:

000103f0 <strtol@plt-0x14>:
   103f0:	push	{lr}		; (str lr, [sp, #-4]!)
   103f4:	ldr	lr, [pc, #4]	; 10400 <strtol@plt-0x4>
   103f8:	add	lr, pc, lr
   103fc:	ldr	pc, [lr, #8]!
   10400:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00010404 <strtol@plt>:
   10404:	add	ip, pc, #0, 12
   10408:	add	ip, ip, #16, 20	; 0x10000
   1040c:	ldr	pc, [ip, #3024]!	; 0xbd0

00010410 <pow@plt>:
   10410:	add	ip, pc, #0, 12
   10414:	add	ip, ip, #16, 20	; 0x10000
   10418:	ldr	pc, [ip, #3016]!	; 0xbc8

0001041c <__libc_start_main@plt>:
   1041c:	add	ip, pc, #0, 12
   10420:	add	ip, ip, #16, 20	; 0x10000
   10424:	ldr	pc, [ip, #3008]!	; 0xbc0

00010428 <__gmon_start__@plt>:
   10428:	add	ip, pc, #0, 12
   1042c:	add	ip, ip, #16, 20	; 0x10000
   10430:	ldr	pc, [ip, #3000]!	; 0xbb8

00010434 <exit@plt>:
   10434:	add	ip, pc, #0, 12
   10438:	add	ip, ip, #16, 20	; 0x10000
   1043c:	ldr	pc, [ip, #2992]!	; 0xbb0

00010440 <__printf_chk@plt>:
   10440:	add	ip, pc, #0, 12
   10444:	add	ip, ip, #16, 20	; 0x10000
   10448:	ldr	pc, [ip, #2984]!	; 0xba8

0001044c <strtod@plt>:
   1044c:	add	ip, pc, #0, 12
   10450:	add	ip, ip, #16, 20	; 0x10000
   10454:	ldr	pc, [ip, #2976]!	; 0xba0

00010458 <abort@plt>:
   10458:	add	ip, pc, #0, 12
   1045c:	add	ip, ip, #16, 20	; 0x10000
   10460:	ldr	pc, [ip, #2968]!	; 0xb98

Disassembly of section .text:

00010468 <.text>:
   10468:	cmp	r0, #6
   1046c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10470:	vpush	{d8-d13}
   10474:	movle	r3, #0
   10478:	movgt	r3, #1
   1047c:	cmp	r0, #1
   10480:	orreq	r3, r3, #1
   10484:	cmp	r3, #0
   10488:	sub	sp, sp, #20
   1048c:	mov	r9, r1
   10490:	bne	107c4 <abort@plt+0x36c>
   10494:	cmp	r0, #1
   10498:	mov	r5, r0
   1049c:	bgt	105dc <abort@plt+0x184>
   104a0:	vldr	d11, [pc, #824]	; 107e0 <abort@plt+0x388>
   104a4:	cmp	r5, #2
   104a8:	bgt	105f0 <abort@plt+0x198>
   104ac:	ldr	r7, [pc, #848]	; 10804 <abort@plt+0x3ac>
   104b0:	mov	r4, #0
   104b4:	mov	r6, r7
   104b8:	mov	r8, #255	; 0xff
   104bc:	vldr	d7, [pc, #804]	; 107e8 <abort@plt+0x390>
   104c0:	vcmpe.f64	d11, d7
   104c4:	vmrs	APSR_nzcv, fpscr
   104c8:	bmi	1078c <abort@plt+0x334>
   104cc:	vldr	d7, [pc, #796]	; 107f0 <abort@plt+0x398>
   104d0:	vcmpe.f64	d11, d7
   104d4:	vmrs	APSR_nzcv, fpscr
   104d8:	bgt	1078c <abort@plt+0x334>
   104dc:	sub	r3, r6, r4
   104e0:	vldr	d6, [pc, #784]	; 107f8 <abort@plt+0x3a0>
   104e4:	vmov	s15, r3
   104e8:	mov	r3, #0
   104ec:	mov	r2, r3
   104f0:	ldr	r1, [pc, #784]	; 10808 <abort@plt+0x3b0>
   104f4:	vcvt.f64.s32	d9, s15
   104f8:	mov	r0, #1
   104fc:	vdiv.f64	d7, d9, d6
   10500:	vmov	s13, r4
   10504:	vcvt.f64.s32	d6, s13
   10508:	vadd.f64	d7, d7, d6
   1050c:	vcvt.f32.f64	s16, d7
   10510:	bl	10440 <__printf_chk@plt>
   10514:	cmp	r4, #0
   10518:	ble	10530 <abort@plt+0xd8>
   1051c:	mov	r3, #0
   10520:	mov	r2, r4
   10524:	ldr	r1, [pc, #732]	; 10808 <abort@plt+0x3b0>
   10528:	mov	r0, #1
   1052c:	bl	10440 <__printf_chk@plt>
   10530:	vmov	s15, r6
   10534:	vcvt.f32.s32	s17, s15
   10538:	vcmpe.f32	s17, s16
   1053c:	vmrs	APSR_nzcv, fpscr
   10540:	ble	105ac <abort@plt+0x154>
   10544:	vldr	d7, [pc, #660]	; 107e0 <abort@plt+0x388>
   10548:	vmov	s13, r8
   1054c:	vldr	s26, [pc, #684]	; 10800 <abort@plt+0x3a8>
   10550:	ldr	r5, [pc, #688]	; 10808 <abort@plt+0x3b0>
   10554:	vdiv.f64	d10, d7, d11
   10558:	vcvt.f64.s32	d12, s13
   1055c:	vcvt.s32.f32	s15, s16
   10560:	vmov.f64	d1, d10
   10564:	vmov	r2, s15
   10568:	vstr	s15, [sp, #12]
   1056c:	sub	r3, r2, r4
   10570:	vmov	s0, r3
   10574:	vcvt.f64.s32	d0, s0
   10578:	vdiv.f64	d0, d0, d9
   1057c:	bl	10410 <pow@plt>
   10580:	ldr	r2, [sp, #12]
   10584:	mov	r1, r5
   10588:	mov	r0, #1
   1058c:	vmul.f64	d0, d0, d12
   10590:	vcvt.s32.f64	s15, d0
   10594:	vmov	r3, s15
   10598:	bl	10440 <__printf_chk@plt>
   1059c:	vmul.f32	s16, s16, s26
   105a0:	vcmpe.f32	s17, s16
   105a4:	vmrs	APSR_nzcv, fpscr
   105a8:	bgt	1055c <abort@plt+0x104>
   105ac:	vcmpe.f32	s17, s16
   105b0:	vmrs	APSR_nzcv, fpscr
   105b4:	bmi	10650 <abort@plt+0x1f8>
   105b8:	mov	r3, r8
   105bc:	mov	r2, r7
   105c0:	ldr	r1, [pc, #580]	; 1080c <abort@plt+0x3b4>
   105c4:	mov	r0, #1
   105c8:	bl	10440 <__printf_chk@plt>
   105cc:	mov	r0, #0
   105d0:	add	sp, sp, #20
   105d4:	vpop	{d8-d13}
   105d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   105dc:	mov	r1, r3
   105e0:	ldr	r0, [r9, #4]
   105e4:	bl	1044c <strtod@plt>
   105e8:	vmov.f64	d11, d0
   105ec:	b	104a4 <abort@plt+0x4c>
   105f0:	mov	r2, #10
   105f4:	mov	r1, #0
   105f8:	ldr	r0, [r9, #8]
   105fc:	bl	10404 <strtol@plt>
   10600:	cmp	r5, #3
   10604:	mov	r4, r0
   10608:	bne	10668 <abort@plt+0x210>
   1060c:	cmp	r0, #0
   10610:	blt	10770 <abort@plt+0x318>
   10614:	ldr	r3, [pc, #500]	; 10810 <abort@plt+0x3b8>
   10618:	cmp	r0, r3
   1061c:	movle	r8, #255	; 0xff
   10620:	ldrle	r7, [pc, #476]	; 10804 <abort@plt+0x3ac>
   10624:	movle	r6, r7
   10628:	ble	104bc <abort@plt+0x64>
   1062c:	ldr	r6, [pc, #464]	; 10804 <abort@plt+0x3ac>
   10630:	str	r6, [sp]
   10634:	mov	r3, r4
   10638:	ldr	r2, [r9]
   1063c:	ldr	r1, [pc, #464]	; 10814 <abort@plt+0x3bc>
   10640:	mov	r0, #1
   10644:	bl	10440 <__printf_chk@plt>
   10648:	mvn	r0, #0
   1064c:	bl	10434 <exit@plt>
   10650:	mov	r2, r6
   10654:	mov	r3, r8
   10658:	ldr	r1, [pc, #424]	; 10808 <abort@plt+0x3b0>
   1065c:	mov	r0, #1
   10660:	bl	10440 <__printf_chk@plt>
   10664:	b	105b8 <abort@plt+0x160>
   10668:	mov	r2, #10
   1066c:	mov	r1, #0
   10670:	ldr	r0, [r9, #12]
   10674:	bl	10404 <strtol@plt>
   10678:	cmp	r5, #4
   1067c:	mov	r6, r0
   10680:	bne	106cc <abort@plt+0x274>
   10684:	cmp	r4, #0
   10688:	blt	10770 <abort@plt+0x318>
   1068c:	cmp	r0, #0
   10690:	movge	r8, #255	; 0xff
   10694:	ldrge	r7, [pc, #360]	; 10804 <abort@plt+0x3ac>
   10698:	blt	107a8 <abort@plt+0x350>
   1069c:	cmp	r4, r6
   106a0:	bge	10630 <abort@plt+0x1d8>
   106a4:	cmp	r6, r7
   106a8:	ble	104bc <abort@plt+0x64>
   106ac:	str	r7, [sp]
   106b0:	mov	r3, r6
   106b4:	ldr	r2, [r9]
   106b8:	ldr	r1, [pc, #344]	; 10818 <abort@plt+0x3c0>
   106bc:	mov	r0, #1
   106c0:	bl	10440 <__printf_chk@plt>
   106c4:	mvn	r0, #0
   106c8:	bl	10434 <exit@plt>
   106cc:	mov	r2, #10
   106d0:	mov	r1, #0
   106d4:	ldr	r0, [r9, #16]
   106d8:	bl	10404 <strtol@plt>
   106dc:	cmp	r5, #6
   106e0:	mov	r7, r0
   106e4:	beq	10720 <abort@plt+0x2c8>
   106e8:	cmp	r4, #0
   106ec:	blt	10770 <abort@plt+0x318>
   106f0:	cmp	r6, #0
   106f4:	blt	107a8 <abort@plt+0x350>
   106f8:	cmp	r0, #0
   106fc:	movge	r8, #255	; 0xff
   10700:	bge	1069c <abort@plt+0x244>
   10704:	mov	r3, r7
   10708:	ldr	r2, [r9]
   1070c:	ldr	r1, [pc, #264]	; 1081c <abort@plt+0x3c4>
   10710:	mov	r0, #1
   10714:	bl	10440 <__printf_chk@plt>
   10718:	mvn	r0, #0
   1071c:	bl	10434 <exit@plt>
   10720:	mov	r2, #10
   10724:	mov	r1, #0
   10728:	ldr	r0, [r9, #20]
   1072c:	bl	10404 <strtol@plt>
   10730:	cmp	r4, #0
   10734:	mov	r8, r0
   10738:	blt	10770 <abort@plt+0x318>
   1073c:	cmp	r6, #0
   10740:	blt	107a8 <abort@plt+0x350>
   10744:	cmp	r7, #0
   10748:	blt	10704 <abort@plt+0x2ac>
   1074c:	cmp	r0, #0
   10750:	bge	1069c <abort@plt+0x244>
   10754:	mov	r3, r0
   10758:	ldr	r2, [r9]
   1075c:	ldr	r1, [pc, #188]	; 10820 <abort@plt+0x3c8>
   10760:	mov	r0, #1
   10764:	bl	10440 <__printf_chk@plt>
   10768:	mvn	r0, #0
   1076c:	bl	10434 <exit@plt>
   10770:	mov	r3, r4
   10774:	ldr	r2, [r9]
   10778:	ldr	r1, [pc, #164]	; 10824 <abort@plt+0x3cc>
   1077c:	mov	r0, #1
   10780:	bl	10440 <__printf_chk@plt>
   10784:	mvn	r0, #0
   10788:	bl	10434 <exit@plt>
   1078c:	vstr	d11, [sp]
   10790:	ldr	r1, [pc, #144]	; 10828 <abort@plt+0x3d0>
   10794:	mov	r0, #1
   10798:	ldr	r2, [r9]
   1079c:	bl	10440 <__printf_chk@plt>
   107a0:	mvn	r0, #0
   107a4:	bl	10434 <exit@plt>
   107a8:	mov	r3, r6
   107ac:	ldr	r2, [r9]
   107b0:	ldr	r1, [pc, #116]	; 1082c <abort@plt+0x3d4>
   107b4:	mov	r0, #1
   107b8:	bl	10440 <__printf_chk@plt>
   107bc:	mvn	r0, #0
   107c0:	bl	10434 <exit@plt>
   107c4:	ldr	r2, [r1]
   107c8:	mov	r0, #1
   107cc:	ldr	r1, [pc, #92]	; 10830 <abort@plt+0x3d8>
   107d0:	bl	10440 <__printf_chk@plt>
   107d4:	mvn	r0, #0
   107d8:	bl	10434 <exit@plt>
   107dc:	nop			; (mov r0, r0)
   107e0:	andeq	r0, r0, r0
   107e4:	svccc	0x00f00000	; IMB
   107e8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   107ec:	svccc	0x00b99999
   107f0:	andeq	r0, r0, r0
   107f4:	andsmi	r0, r4, r0
   107f8:	andeq	r0, r0, r0
   107fc:	rsbmi	lr, pc, r0
   10800:	svccc	0x00c00000
   10804:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   10808:			; <UNDEFINED> instruction: 0x00010ab0
   1080c:			; <UNDEFINED> instruction: 0x00010ab8
   10810:	strdeq	r3, [r0], -lr
   10814:	andeq	r0, r1, r8, lsr sl
   10818:	andeq	r0, r1, r0, ror #20
   1081c:	andeq	r0, r1, r4, lsl #20
   10820:	andeq	r0, r1, ip, lsl sl
   10824:	andeq	r0, r1, ip, asr #19
   10828:	andeq	r0, r1, r4, lsl #21
   1082c:	andeq	r0, r1, r8, ror #19
   10830:	muleq	r1, r4, r9
   10834:	mov	fp, #0
   10838:	mov	lr, #0
   1083c:	pop	{r1}		; (ldr r1, [sp], #4)
   10840:	mov	r2, sp
   10844:	push	{r2}		; (str r2, [sp, #-4]!)
   10848:	push	{r0}		; (str r0, [sp, #-4]!)
   1084c:	ldr	ip, [pc, #16]	; 10864 <abort@plt+0x40c>
   10850:	push	{ip}		; (str ip, [sp, #-4]!)
   10854:	ldr	r0, [pc, #12]	; 10868 <abort@plt+0x410>
   10858:	ldr	r3, [pc, #12]	; 1086c <abort@plt+0x414>
   1085c:	bl	1041c <__libc_start_main@plt>
   10860:	bl	10458 <abort@plt>
   10864:	andeq	r0, r1, r4, lsl #19
   10868:	andeq	r0, r1, r8, ror #8
   1086c:	andeq	r0, r1, r4, lsr #18
   10870:	ldr	r3, [pc, #20]	; 1088c <abort@plt+0x434>
   10874:	ldr	r2, [pc, #20]	; 10890 <abort@plt+0x438>
   10878:	add	r3, pc, r3
   1087c:	ldr	r2, [r3, r2]
   10880:	cmp	r2, #0
   10884:	bxeq	lr
   10888:	b	10428 <__gmon_start__@plt>
   1088c:	andeq	r0, r1, r0, asr r7
   10890:	andeq	r0, r0, ip, lsr #32
   10894:	ldr	r0, [pc, #24]	; 108b4 <abort@plt+0x45c>
   10898:	ldr	r3, [pc, #24]	; 108b8 <abort@plt+0x460>
   1089c:	cmp	r3, r0
   108a0:	bxeq	lr
   108a4:	ldr	r3, [pc, #16]	; 108bc <abort@plt+0x464>
   108a8:	cmp	r3, #0
   108ac:	bxeq	lr
   108b0:	bx	r3
   108b4:	andeq	r1, r2, r8
   108b8:	andeq	r1, r2, r8
   108bc:	andeq	r0, r0, r0
   108c0:	ldr	r0, [pc, #36]	; 108ec <abort@plt+0x494>
   108c4:	ldr	r1, [pc, #36]	; 108f0 <abort@plt+0x498>
   108c8:	sub	r1, r1, r0
   108cc:	asr	r1, r1, #2
   108d0:	add	r1, r1, r1, lsr #31
   108d4:	asrs	r1, r1, #1
   108d8:	bxeq	lr
   108dc:	ldr	r3, [pc, #16]	; 108f4 <abort@plt+0x49c>
   108e0:	cmp	r3, #0
   108e4:	bxeq	lr
   108e8:	bx	r3
   108ec:	andeq	r1, r2, r8
   108f0:	andeq	r1, r2, r8
   108f4:	andeq	r0, r0, r0
   108f8:	push	{r4, lr}
   108fc:	ldr	r4, [pc, #24]	; 1091c <abort@plt+0x4c4>
   10900:	ldrb	r3, [r4]
   10904:	cmp	r3, #0
   10908:	popne	{r4, pc}
   1090c:	bl	10894 <abort@plt+0x43c>
   10910:	mov	r3, #1
   10914:	strb	r3, [r4]
   10918:	pop	{r4, pc}
   1091c:	andeq	r1, r2, r8
   10920:	b	108c0 <abort@plt+0x468>
   10924:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10928:	mov	r7, r0
   1092c:	ldr	r6, [pc, #72]	; 1097c <abort@plt+0x524>
   10930:	ldr	r5, [pc, #72]	; 10980 <abort@plt+0x528>
   10934:	add	r6, pc, r6
   10938:	add	r5, pc, r5
   1093c:	sub	r6, r6, r5
   10940:	mov	r8, r1
   10944:	mov	r9, r2
   10948:	bl	103e4 <strtol@plt-0x20>
   1094c:	asrs	r6, r6, #2
   10950:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10954:	mov	r4, #0
   10958:	add	r4, r4, #1
   1095c:	ldr	r3, [r5], #4
   10960:	mov	r2, r9
   10964:	mov	r1, r8
   10968:	mov	r0, r7
   1096c:	blx	r3
   10970:	cmp	r6, r4
   10974:	bne	10958 <abort@plt+0x500>
   10978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1097c:	muleq	r1, r0, r5
   10980:	andeq	r0, r1, r8, lsl #11
   10984:	bx	lr

Disassembly of section .fini:

00010988 <.fini>:
   10988:	push	{r3, lr}
   1098c:	pop	{r3, pc}
