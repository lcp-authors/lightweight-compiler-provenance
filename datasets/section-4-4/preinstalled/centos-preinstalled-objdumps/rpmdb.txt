
centos-preinstalled/rpmdb:     file format elf32-littlearm


Disassembly of section .init:

00010c0c <_init@@Base>:
   10c0c:	push	{r3, lr}
   10c10:	bl	10f10 <__errno_location@plt+0x188>
   10c14:	pop	{r3, pc}

Disassembly of section .plt:

00010c18 <rpmcliFini@plt-0x14>:
   10c18:	push	{lr}		; (str lr, [sp, #-4]!)
   10c1c:	ldr	lr, [pc, #4]	; 10c28 <_init@@Base+0x1c>
   10c20:	add	lr, pc, lr
   10c24:	ldr	pc, [lr, #8]!
   10c28:	ldrdeq	r1, [r1], -r8

00010c2c <rpmcliFini@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #984]!	; 0x3d8

00010c38 <abort@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #976]!	; 0x3d0

00010c44 <poptPrintHelp@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c50 <rpmtsFree@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #960]!	; 0x3c0

00010c5c <__libc_start_main@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #952]!	; 0x3b8

00010c68 <signal@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #944]!	; 0x3b0

00010c74 <__gmon_start__@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c80 <fclose@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #69632	; 0x11000
   10c88:	ldr	pc, [ip, #928]!	; 0x3a0

00010c8c <rpmtsRebuildDB@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #69632	; 0x11000
   10c94:	ldr	pc, [ip, #920]!	; 0x398

00010c98 <rpmlogSetMask@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #69632	; 0x11000
   10ca0:	ldr	pc, [ip, #912]!	; 0x390

00010ca4 <poptPeekArg@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #69632	; 0x11000
   10cac:	ldr	pc, [ip, #904]!	; 0x388

00010cb0 <dcgettext@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #69632	; 0x11000
   10cb8:	ldr	pc, [ip, #896]!	; 0x380

00010cbc <poptPrintUsage@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #69632	; 0x11000
   10cc4:	ldr	pc, [ip, #888]!	; 0x378

00010cc8 <execl@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #69632	; 0x11000
   10cd0:	ldr	pc, [ip, #880]!	; 0x370

00010cd4 <rpmtsVerifyDB@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #69632	; 0x11000
   10cdc:	ldr	pc, [ip, #872]!	; 0x368

00010ce0 <waitpid@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #69632	; 0x11000
   10ce8:	ldr	pc, [ip, #864]!	; 0x360

00010cec <rpmcliInit@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #69632	; 0x11000
   10cf4:	ldr	pc, [ip, #856]!	; 0x358

00010cf8 <rpmExpandNumeric@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #69632	; 0x11000
   10d00:	ldr	pc, [ip, #848]!	; 0x350

00010d04 <close@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #69632	; 0x11000
   10d0c:	ldr	pc, [ip, #840]!	; 0x348

00010d10 <rpmtsInitDB@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #69632	; 0x11000
   10d18:	ldr	pc, [ip, #832]!	; 0x340

00010d1c <__fprintf_chk@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #69632	; 0x11000
   10d24:	ldr	pc, [ip, #824]!	; 0x338

00010d28 <fputc@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #69632	; 0x11000
   10d30:	ldr	pc, [ip, #816]!	; 0x330

00010d34 <rpmtsSetRootDir@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #69632	; 0x11000
   10d3c:	ldr	pc, [ip, #808]!	; 0x328

00010d40 <rpmtsCreate@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #69632	; 0x11000
   10d48:	ldr	pc, [ip, #800]!	; 0x320

00010d4c <dup2@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #69632	; 0x11000
   10d54:	ldr	pc, [ip, #792]!	; 0x318

00010d58 <fork@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #69632	; 0x11000
   10d60:	ldr	pc, [ip, #784]!	; 0x310

00010d64 <pipe@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #69632	; 0x11000
   10d6c:	ldr	pc, [ip, #776]!	; 0x308

00010d70 <rpmtsSetVSFlags@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #69632	; 0x11000
   10d78:	ldr	pc, [ip, #768]!	; 0x300

00010d7c <exit@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #69632	; 0x11000
   10d84:	ldr	pc, [ip, #760]!	; 0x2f8

00010d88 <__errno_location@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #69632	; 0x11000
   10d90:	ldr	pc, [ip, #752]!	; 0x2f0

Disassembly of section .text:

00010d94 <.text>:
   10d94:	ldr	r2, [pc, #280]	; 10eb4 <__errno_location@plt+0x12c>
   10d98:	push	{r3, r4, r5, r6, r7, lr}
   10d9c:	add	r2, pc, r2
   10da0:	mov	r4, r0
   10da4:	bl	10cec <rpmcliInit@plt>
   10da8:	cmp	r4, #1
   10dac:	ldr	r4, [pc, #260]	; 10eb8 <__errno_location@plt+0x130>
   10db0:	add	r4, pc, r4
   10db4:	mov	r5, r0
   10db8:	ble	10dc8 <__errno_location@plt+0x40>
   10dbc:	bl	10ca4 <poptPeekArg@plt>
   10dc0:	cmp	r0, #0
   10dc4:	beq	10e00 <__errno_location@plt+0x78>
   10dc8:	ldr	r3, [pc, #236]	; 10ebc <__errno_location@plt+0x134>
   10dcc:	mov	r2, #0
   10dd0:	mov	r0, r5
   10dd4:	mov	r6, r2
   10dd8:	mov	r7, #1
   10ddc:	ldr	r3, [r4, r3]
   10de0:	ldr	r1, [r3]
   10de4:	bl	1107c <__errno_location@plt+0x2f4>
   10de8:	mov	r0, r6
   10dec:	bl	10c50 <rpmtsFree@plt>
   10df0:	mov	r0, r5
   10df4:	bl	10c2c <rpmcliFini@plt>
   10df8:	mov	r0, r7
   10dfc:	pop	{r3, r4, r5, r6, r7, pc}
   10e00:	bl	10d40 <rpmtsCreate@plt>
   10e04:	ldr	r3, [pc, #180]	; 10ec0 <__errno_location@plt+0x138>
   10e08:	ldr	r3, [r4, r3]
   10e0c:	ldr	r1, [r3]
   10e10:	mov	r6, r0
   10e14:	bl	10d34 <rpmtsSetRootDir@plt>
   10e18:	ldr	r3, [pc, #164]	; 10ec4 <__errno_location@plt+0x13c>
   10e1c:	add	r3, pc, r3
   10e20:	ldr	r3, [r3]
   10e24:	cmp	r3, #2
   10e28:	beq	10e68 <__errno_location@plt+0xe0>
   10e2c:	cmp	r3, #4
   10e30:	beq	10e58 <__errno_location@plt+0xd0>
   10e34:	cmp	r3, #1
   10e38:	beq	10ea0 <__errno_location@plt+0x118>
   10e3c:	ldr	r0, [pc, #132]	; 10ec8 <__errno_location@plt+0x140>
   10e40:	mov	r2, #5
   10e44:	ldr	r1, [pc, #128]	; 10ecc <__errno_location@plt+0x144>
   10e48:	add	r0, pc, r0
   10e4c:	add	r1, pc, r1
   10e50:	bl	10cb0 <dcgettext@plt>
   10e54:	bl	11008 <__errno_location@plt+0x280>
   10e58:	mov	r0, r6
   10e5c:	bl	10cd4 <rpmtsVerifyDB@plt>
   10e60:	mov	r7, r0
   10e64:	b	10de8 <__errno_location@plt+0x60>
   10e68:	ldr	r0, [pc, #96]	; 10ed0 <__errno_location@plt+0x148>
   10e6c:	add	r0, pc, r0
   10e70:	bl	10cf8 <rpmExpandNumeric@plt>
   10e74:	mov	r1, r0
   10e78:	mov	r0, r6
   10e7c:	bl	10d70 <rpmtsSetVSFlags@plt>
   10e80:	mov	r4, r0
   10e84:	mov	r0, r6
   10e88:	bl	10c8c <rpmtsRebuildDB@plt>
   10e8c:	mov	r1, r4
   10e90:	mov	r7, r0
   10e94:	mov	r0, r6
   10e98:	bl	10d70 <rpmtsSetVSFlags@plt>
   10e9c:	b	10de8 <__errno_location@plt+0x60>
   10ea0:	mov	r0, r6
   10ea4:	mov	r1, #420	; 0x1a4
   10ea8:	bl	10d10 <rpmtsInitDB@plt>
   10eac:	mov	r7, r0
   10eb0:	b	10de8 <__errno_location@plt+0x60>
   10eb4:	andeq	r1, r1, r0, ror r3
   10eb8:	andeq	r1, r1, r8, asr #4
   10ebc:	muleq	r0, r4, r0
   10ec0:	andeq	r0, r0, r8, lsl #1
   10ec4:	andeq	r1, r1, r0, lsl #14
   10ec8:	andeq	r0, r0, r0, lsr #11
   10ecc:	andeq	r0, r0, r0, lsr #11
   10ed0:	andeq	r0, r0, r4, ror #10
   10ed4:	mov	fp, #0
   10ed8:	mov	lr, #0
   10edc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ee0:	mov	r2, sp
   10ee4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eec:	ldr	ip, [pc, #16]	; 10f04 <__errno_location@plt+0x17c>
   10ef0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef4:	ldr	r0, [pc, #12]	; 10f08 <__errno_location@plt+0x180>
   10ef8:	ldr	r3, [pc, #12]	; 10f0c <__errno_location@plt+0x184>
   10efc:	bl	10c5c <__libc_start_main@plt>
   10f00:	bl	10c38 <abort@plt>
   10f04:	andeq	r1, r1, r4, asr #7
   10f08:	muleq	r1, r4, sp
   10f0c:	andeq	r1, r1, r0, ror #6
   10f10:	ldr	r3, [pc, #20]	; 10f2c <__errno_location@plt+0x1a4>
   10f14:	ldr	r2, [pc, #20]	; 10f30 <__errno_location@plt+0x1a8>
   10f18:	add	r3, pc, r3
   10f1c:	ldr	r2, [r3, r2]
   10f20:	cmp	r2, #0
   10f24:	bxeq	lr
   10f28:	b	10c74 <__gmon_start__@plt>
   10f2c:	andeq	r1, r1, r0, ror #1
   10f30:	andeq	r0, r0, r4, lsl #1
   10f34:	push	{r3, lr}
   10f38:	movw	r0, #8608	; 0x21a0
   10f3c:	ldr	r3, [pc, #36]	; 10f68 <__errno_location@plt+0x1e0>
   10f40:	movt	r0, #2
   10f44:	rsb	r3, r0, r3
   10f48:	cmp	r3, #6
   10f4c:	popls	{r3, pc}
   10f50:	movw	r3, #0
   10f54:	movt	r3, #0
   10f58:	cmp	r3, #0
   10f5c:	popeq	{r3, pc}
   10f60:	blx	r3
   10f64:	pop	{r3, pc}
   10f68:	andeq	r2, r2, r3, lsr #3
   10f6c:	push	{r3, lr}
   10f70:	movw	r0, #8608	; 0x21a0
   10f74:	movw	r3, #8608	; 0x21a0
   10f78:	movt	r0, #2
   10f7c:	movt	r3, #2
   10f80:	rsb	r3, r0, r3
   10f84:	asr	r3, r3, #2
   10f88:	add	r3, r3, r3, lsr #31
   10f8c:	asrs	r1, r3, #1
   10f90:	popeq	{r3, pc}
   10f94:	movw	r2, #0
   10f98:	movt	r2, #0
   10f9c:	cmp	r2, #0
   10fa0:	popeq	{r3, pc}
   10fa4:	blx	r2
   10fa8:	pop	{r3, pc}
   10fac:	push	{r4, lr}
   10fb0:	movw	r4, #9504	; 0x2520
   10fb4:	movt	r4, #2
   10fb8:	ldrb	r3, [r4]
   10fbc:	cmp	r3, #0
   10fc0:	popne	{r4, pc}
   10fc4:	bl	10f34 <__errno_location@plt+0x1ac>
   10fc8:	mov	r3, #1
   10fcc:	strb	r3, [r4]
   10fd0:	pop	{r4, pc}
   10fd4:	movw	r0, #7812	; 0x1e84
   10fd8:	movt	r0, #2
   10fdc:	push	{r3, lr}
   10fe0:	ldr	r3, [r0]
   10fe4:	cmp	r3, #0
   10fe8:	beq	11000 <__errno_location@plt+0x278>
   10fec:	movw	r3, #0
   10ff0:	movt	r3, #0
   10ff4:	cmp	r3, #0
   10ff8:	beq	11000 <__errno_location@plt+0x278>
   10ffc:	blx	r3
   11000:	pop	{r3, lr}
   11004:	b	10f6c <__errno_location@plt+0x1e4>
   11008:	push	{r4, r5, r6, lr}
   1100c:	mov	r5, r0
   11010:	ldr	r4, [pc, #80]	; 11068 <__errno_location@plt+0x2e0>
   11014:	sub	sp, sp, #8
   11018:	ldr	r3, [pc, #76]	; 1106c <__errno_location@plt+0x2e4>
   1101c:	mov	r2, #5
   11020:	add	r4, pc, r4
   11024:	ldr	r0, [pc, #68]	; 11070 <__errno_location@plt+0x2e8>
   11028:	ldr	r1, [pc, #68]	; 11074 <__errno_location@plt+0x2ec>
   1102c:	ldr	r3, [r4, r3]
   11030:	add	r0, pc, r0
   11034:	add	r1, pc, r1
   11038:	ldr	r6, [r3]
   1103c:	bl	10cb0 <dcgettext@plt>
   11040:	ldr	r3, [pc, #48]	; 11078 <__errno_location@plt+0x2f0>
   11044:	mov	r1, #1
   11048:	ldr	r3, [r4, r3]
   1104c:	str	r5, [sp]
   11050:	ldr	r3, [r3]
   11054:	mov	r2, r0
   11058:	mov	r0, r6
   1105c:	bl	10d1c <__fprintf_chk@plt>
   11060:	mov	r0, #1
   11064:	bl	10d7c <exit@plt>
   11068:	ldrdeq	r0, [r1], -r8
   1106c:	muleq	r0, r4, r0
   11070:			; <UNDEFINED> instruction: 0x000003b8
   11074:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11078:	muleq	r0, r8, r0
   1107c:	push	{r4, r5, r6, r7, r8, lr}
   11080:	mov	r4, r1
   11084:	ldr	r5, [pc, #196]	; 11150 <__errno_location@plt+0x3c8>
   11088:	mov	r7, r0
   1108c:	ldr	r1, [pc, #192]	; 11154 <__errno_location@plt+0x3cc>
   11090:	mov	r6, r2
   11094:	add	r5, pc, r5
   11098:	mov	r2, #5
   1109c:	add	r1, pc, r1
   110a0:	ldr	r8, [pc, #176]	; 11158 <__errno_location@plt+0x3d0>
   110a4:	mov	r0, r5
   110a8:	bl	10cb0 <dcgettext@plt>
   110ac:	ldr	ip, [pc, #168]	; 1115c <__errno_location@plt+0x3d4>
   110b0:	add	r8, pc, r8
   110b4:	mov	r1, #1
   110b8:	mov	r3, r8
   110bc:	ldr	r3, [r8, ip]
   110c0:	ldr	r3, [r3]
   110c4:	mov	r2, r0
   110c8:	mov	r0, r4
   110cc:	bl	10d1c <__fprintf_chk@plt>
   110d0:	ldr	r1, [pc, #136]	; 11160 <__errno_location@plt+0x3d8>
   110d4:	mov	r2, #5
   110d8:	mov	r0, r5
   110dc:	add	r1, pc, r1
   110e0:	bl	10cb0 <dcgettext@plt>
   110e4:	mov	r1, #1
   110e8:	mov	r2, r0
   110ec:	mov	r0, r4
   110f0:	bl	10d1c <__fprintf_chk@plt>
   110f4:	ldr	r1, [pc, #104]	; 11164 <__errno_location@plt+0x3dc>
   110f8:	mov	r2, #5
   110fc:	mov	r0, r5
   11100:	add	r1, pc, r1
   11104:	bl	10cb0 <dcgettext@plt>
   11108:	mov	r1, #1
   1110c:	mov	r2, r0
   11110:	mov	r0, r4
   11114:	bl	10d1c <__fprintf_chk@plt>
   11118:	mov	r1, r4
   1111c:	mov	r0, #10
   11120:	bl	10d28 <fputc@plt>
   11124:	mov	r0, #0
   11128:	bl	10c98 <rpmlogSetMask@plt>
   1112c:	mov	r1, r4
   11130:	mov	r2, r6
   11134:	cmp	r0, #63	; 0x3f
   11138:	mov	r0, r7
   1113c:	bgt	11148 <__errno_location@plt+0x3c0>
   11140:	pop	{r4, r5, r6, r7, r8, lr}
   11144:	b	10cbc <poptPrintUsage@plt>
   11148:	pop	{r4, r5, r6, r7, r8, lr}
   1114c:	b	10c44 <poptPrintHelp@plt>
   11150:	andeq	r0, r0, r4, asr r3
   11154:	muleq	r0, r0, r4
   11158:	andeq	r0, r1, r8, asr #30
   1115c:	muleq	r0, ip, r0
   11160:	andeq	r0, r0, r0, ror #8
   11164:	andeq	r0, r0, r8, ror #8
   11168:	push	{r4, r5, lr}
   1116c:	sub	sp, sp, #20
   11170:	add	r0, sp, #8
   11174:	ldr	r5, [pc, #280]	; 11294 <__errno_location@plt+0x50c>
   11178:	bl	10d64 <pipe@plt>
   1117c:	add	r5, pc, r5
   11180:	cmp	r0, #0
   11184:	blt	111cc <__errno_location@plt+0x444>
   11188:	bl	10d58 <fork@plt>
   1118c:	ldr	r3, [pc, #260]	; 11298 <__errno_location@plt+0x510>
   11190:	add	r3, pc, r3
   11194:	cmp	r0, #0
   11198:	mov	r4, r0
   1119c:	str	r0, [r3]
   111a0:	beq	11208 <__errno_location@plt+0x480>
   111a4:	ldr	r0, [sp, #8]
   111a8:	bl	10d04 <close@plt>
   111ac:	mov	r1, #1
   111b0:	ldr	r0, [sp, #12]
   111b4:	bl	10d4c <dup2@plt>
   111b8:	ldr	r0, [sp, #12]
   111bc:	bl	10d04 <close@plt>
   111c0:	mov	r0, #0
   111c4:	add	sp, sp, #20
   111c8:	pop	{r4, r5, pc}
   111cc:	ldr	r3, [pc, #200]	; 1129c <__errno_location@plt+0x514>
   111d0:	mov	r2, #5
   111d4:	ldr	r0, [pc, #196]	; 112a0 <__errno_location@plt+0x518>
   111d8:	ldr	r1, [pc, #196]	; 112a4 <__errno_location@plt+0x51c>
   111dc:	ldr	r3, [r5, r3]
   111e0:	add	r0, pc, r0
   111e4:	add	r1, pc, r1
   111e8:	ldr	r4, [r3]
   111ec:	bl	10cb0 <dcgettext@plt>
   111f0:	mov	r1, #1
   111f4:	mov	r2, r0
   111f8:	mov	r0, r4
   111fc:	bl	10d1c <__fprintf_chk@plt>
   11200:	mvn	r0, #0
   11204:	b	111c4 <__errno_location@plt+0x43c>
   11208:	mov	r1, r4
   1120c:	mov	r0, #13
   11210:	bl	10c68 <signal@plt>
   11214:	ldr	r0, [sp, #12]
   11218:	bl	10d04 <close@plt>
   1121c:	mov	r1, r4
   11220:	ldr	r0, [sp, #8]
   11224:	bl	10d4c <dup2@plt>
   11228:	ldr	r0, [sp, #8]
   1122c:	bl	10d04 <close@plt>
   11230:	ldr	r3, [pc, #112]	; 112a8 <__errno_location@plt+0x520>
   11234:	ldr	r0, [pc, #112]	; 112ac <__errno_location@plt+0x524>
   11238:	ldr	r2, [pc, #112]	; 112b0 <__errno_location@plt+0x528>
   1123c:	ldr	r3, [r5, r3]
   11240:	add	r0, pc, r0
   11244:	str	r4, [sp]
   11248:	add	r2, pc, r2
   1124c:	mov	r1, r0
   11250:	ldr	r3, [r3]
   11254:	bl	10cc8 <execl@plt>
   11258:	ldr	r3, [pc, #60]	; 1129c <__errno_location@plt+0x514>
   1125c:	ldr	r0, [pc, #80]	; 112b4 <__errno_location@plt+0x52c>
   11260:	mov	r2, #5
   11264:	ldr	r1, [pc, #76]	; 112b8 <__errno_location@plt+0x530>
   11268:	ldr	r3, [r5, r3]
   1126c:	add	r0, pc, r0
   11270:	add	r1, pc, r1
   11274:	ldr	r4, [r3]
   11278:	bl	10cb0 <dcgettext@plt>
   1127c:	mov	r1, #1
   11280:	mov	r2, r0
   11284:	mov	r0, r4
   11288:	bl	10d1c <__fprintf_chk@plt>
   1128c:	mov	r0, #1
   11290:	bl	10d7c <exit@plt>
   11294:	andeq	r0, r1, ip, ror lr
   11298:	muleq	r1, r0, r3
   1129c:	muleq	r0, r4, r0
   112a0:	andeq	r0, r0, r8, lsl #4
   112a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   112a8:	andeq	r0, r0, ip, lsl #1
   112ac:	muleq	r0, ip, r3
   112b0:	muleq	r0, ip, r3
   112b4:	andeq	r0, r0, ip, ror r1
   112b8:	andeq	r0, r0, r8, ror r3
   112bc:	push	{r4, r5, lr}
   112c0:	sub	sp, sp, #12
   112c4:	ldr	r4, [pc, #136]	; 11354 <__errno_location@plt+0x5cc>
   112c8:	ldr	r3, [pc, #136]	; 11358 <__errno_location@plt+0x5d0>
   112cc:	add	r4, pc, r4
   112d0:	add	r3, pc, r3
   112d4:	ldr	r0, [r4]
   112d8:	cmp	r0, #0
   112dc:	bne	112e8 <__errno_location@plt+0x560>
   112e0:	add	sp, sp, #12
   112e4:	pop	{r4, r5, pc}
   112e8:	ldr	r2, [pc, #108]	; 1135c <__errno_location@plt+0x5d4>
   112ec:	add	r5, sp, #4
   112f0:	ldr	r3, [r3, r2]
   112f4:	ldr	r0, [r3]
   112f8:	bl	10c80 <fclose@plt>
   112fc:	b	11310 <__errno_location@plt+0x588>
   11300:	bl	10d88 <__errno_location@plt>
   11304:	ldr	r3, [r0]
   11308:	cmp	r3, #4
   1130c:	bne	11348 <__errno_location@plt+0x5c0>
   11310:	ldr	r0, [r4]
   11314:	mov	r1, r5
   11318:	mov	r2, #0
   1131c:	bl	10ce0 <waitpid@plt>
   11320:	cmn	r0, #1
   11324:	beq	11300 <__errno_location@plt+0x578>
   11328:	ldr	r0, [sp, #4]
   1132c:	tst	r0, #127	; 0x7f
   11330:	bne	11348 <__errno_location@plt+0x5c0>
   11334:	ubfx	r0, r0, #8, #8
   11338:	adds	r0, r0, #0
   1133c:	movne	r0, #1
   11340:	add	sp, sp, #12
   11344:	pop	{r4, r5, pc}
   11348:	mov	r0, #1
   1134c:	add	sp, sp, #12
   11350:	pop	{r4, r5, pc}
   11354:	andeq	r1, r1, r4, asr r2
   11358:	andeq	r0, r1, r8, lsr #26
   1135c:	muleq	r0, r0, r0
   11360:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11364:	mov	r7, r0
   11368:	ldr	r6, [pc, #76]	; 113bc <__errno_location@plt+0x634>
   1136c:	mov	r8, r1
   11370:	ldr	r5, [pc, #72]	; 113c0 <__errno_location@plt+0x638>
   11374:	mov	r9, r2
   11378:	add	r6, pc, r6
   1137c:	bl	10c0c <_init@@Base>
   11380:	add	r5, pc, r5
   11384:	rsb	r6, r5, r6
   11388:	asrs	r6, r6, #2
   1138c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11390:	sub	r5, r5, #4
   11394:	mov	r4, #0
   11398:	add	r4, r4, #1
   1139c:	ldr	r3, [r5, #4]!
   113a0:	mov	r0, r7
   113a4:	mov	r1, r8
   113a8:	mov	r2, r9
   113ac:	blx	r3
   113b0:	cmp	r4, r6
   113b4:	bne	11398 <__errno_location@plt+0x610>
   113b8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   113bc:	andeq	r0, r1, r0, lsl #22
   113c0:	strdeq	r0, [r1], -r4
   113c4:	bx	lr

Disassembly of section .fini:

000113c8 <_fini@@Base>:
   113c8:	push	{r3, lr}
   113cc:	pop	{r3, pc}
