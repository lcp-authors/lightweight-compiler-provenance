
centos-preinstalled/preconv:     file format elf32-littlearm


Disassembly of section .init:

00008dec <.init>:
    8dec:	push	{r3, lr}
    8df0:	bl	94e8 <fputs@plt+0x430>
    8df4:	pop	{r3, pc}

Disassembly of section .plt:

00008df8 <open@plt-0x14>:
    8df8:	push	{lr}		; (str lr, [sp, #-4]!)
    8dfc:	ldr	lr, [pc, #4]	; 8e08 <open@plt-0x4>
    8e00:	add	lr, pc, lr
    8e04:	ldr	pc, [lr, #8]!
    8e08:	strdeq	lr, [r0], -r8

00008e0c <open@plt>:
    8e0c:	add	ip, pc, #0, 12
    8e10:	add	ip, ip, #57344	; 0xe000
    8e14:	ldr	pc, [ip, #504]!	; 0x1f8

00008e18 <strerror@plt>:
    8e18:	add	ip, pc, #0, 12
    8e1c:	add	ip, ip, #57344	; 0xe000
    8e20:	ldr	pc, [ip, #496]!	; 0x1f0

00008e24 <abort@plt>:
    8e24:	add	ip, pc, #0, 12
    8e28:	add	ip, ip, #57344	; 0xe000
    8e2c:	ldr	pc, [ip, #488]!	; 0x1e8

00008e30 <memcmp@plt>:
    8e30:	add	ip, pc, #0, 12
    8e34:	add	ip, ip, #57344	; 0xe000
    8e38:	ldr	pc, [ip, #480]!	; 0x1e0

00008e3c <__libc_start_main@plt>:
    8e3c:	add	ip, pc, #0, 12
    8e40:	add	ip, ip, #57344	; 0xe000
    8e44:	ldr	pc, [ip, #472]!	; 0x1d8

00008e48 <__gmon_start__@plt>:
    8e48:	add	ip, pc, #0, 12
    8e4c:	add	ip, ip, #57344	; 0xe000
    8e50:	ldr	pc, [ip, #464]!	; 0x1d0

00008e54 <strncpy@plt>:
    8e54:	add	ip, pc, #0, 12
    8e58:	add	ip, ip, #57344	; 0xe000
    8e5c:	ldr	pc, [ip, #456]!	; 0x1c8

00008e60 <fclose@plt>:
    8e60:	add	ip, pc, #0, 12
    8e64:	add	ip, ip, #57344	; 0xe000
    8e68:	ldr	pc, [ip, #448]!	; 0x1c0

00008e6c <getenv@plt>:
    8e6c:	add	ip, pc, #0, 12
    8e70:	add	ip, ip, #57344	; 0xe000
    8e74:	ldr	pc, [ip, #440]!	; 0x1b8

00008e78 <__printf_chk@plt>:
    8e78:	add	ip, pc, #0, 12
    8e7c:	add	ip, ip, #57344	; 0xe000
    8e80:	ldr	pc, [ip, #432]!	; 0x1b0

00008e84 <_IO_getc@plt>:
    8e84:	add	ip, pc, #0, 12
    8e88:	add	ip, ip, #57344	; 0xe000
    8e8c:	ldr	pc, [ip, #424]!	; 0x1a8

00008e90 <strchr@plt>:
    8e90:	add	ip, pc, #0, 12
    8e94:	add	ip, ip, #57344	; 0xe000
    8e98:	ldr	pc, [ip, #416]!	; 0x1a0

00008e9c <strcasecmp@plt>:
    8e9c:	add	ip, pc, #0, 12
    8ea0:	add	ip, ip, #57344	; 0xe000
    8ea4:	ldr	pc, [ip, #408]!	; 0x198

00008ea8 <__uflow@plt>:
    8ea8:	add	ip, pc, #0, 12
    8eac:	add	ip, ip, #57344	; 0xe000
    8eb0:	ldr	pc, [ip, #400]!	; 0x190

00008eb4 <stpcpy@plt>:
    8eb4:	add	ip, pc, #0, 12
    8eb8:	add	ip, ip, #57344	; 0xe000
    8ebc:	ldr	pc, [ip, #392]!	; 0x188

00008ec0 <fopen@plt>:
    8ec0:	add	ip, pc, #0, 12
    8ec4:	add	ip, ip, #57344	; 0xe000
    8ec8:	ldr	pc, [ip, #384]!	; 0x180

00008ecc <__cxa_end_cleanup@plt>:
    8ecc:	add	ip, pc, #0, 12
    8ed0:	add	ip, ip, #57344	; 0xe000
    8ed4:	ldr	pc, [ip, #376]!	; 0x178

00008ed8 <strrchr@plt>:
    8ed8:	add	ip, pc, #0, 12
    8edc:	add	ip, ip, #57344	; 0xe000
    8ee0:	ldr	pc, [ip, #368]!	; 0x170

00008ee4 <ungetc@plt>:
    8ee4:	add	ip, pc, #0, 12
    8ee8:	add	ip, ip, #57344	; 0xe000
    8eec:	ldr	pc, [ip, #360]!	; 0x168

00008ef0 <iconv@plt>:
    8ef0:	add	ip, pc, #0, 12
    8ef4:	add	ip, ip, #57344	; 0xe000
    8ef8:	ldr	pc, [ip, #352]!	; 0x160

00008efc <free@plt>:
    8efc:	add	ip, pc, #0, 12
    8f00:	add	ip, ip, #57344	; 0xe000
    8f04:	ldr	pc, [ip, #344]!	; 0x158

00008f08 <access@plt>:
    8f08:	add	ip, pc, #0, 12
    8f0c:	add	ip, ip, #57344	; 0xe000
    8f10:	ldr	pc, [ip, #336]!	; 0x150

00008f14 <__memcpy_chk@plt>:
    8f14:	add	ip, pc, #0, 12
    8f18:	add	ip, ip, #57344	; 0xe000
    8f1c:	ldr	pc, [ip, #328]!	; 0x148

00008f20 <fflush@plt>:
    8f20:	add	ip, pc, #0, 12
    8f24:	add	ip, ip, #57344	; 0xe000
    8f28:	ldr	pc, [ip, #320]!	; 0x140

00008f2c <iconv_close@plt>:
    8f2c:	add	ip, pc, #0, 12
    8f30:	add	ip, ip, #57344	; 0xe000
    8f34:	ldr	pc, [ip, #312]!	; 0x138

00008f38 <strlen@plt>:
    8f38:	add	ip, pc, #0, 12
    8f3c:	add	ip, ip, #57344	; 0xe000
    8f40:	ldr	pc, [ip, #304]!	; 0x130

00008f44 <memcpy@plt>:
    8f44:	add	ip, pc, #0, 12
    8f48:	add	ip, ip, #57344	; 0xe000
    8f4c:	ldr	pc, [ip, #296]!	; 0x128

00008f50 <setlocale@plt>:
    8f50:	add	ip, pc, #0, 12
    8f54:	add	ip, ip, #57344	; 0xe000
    8f58:	ldr	pc, [ip, #288]!	; 0x120

00008f5c <strcpy@plt>:
    8f5c:	add	ip, pc, #0, 12
    8f60:	add	ip, ip, #57344	; 0xe000
    8f64:	ldr	pc, [ip, #280]!	; 0x118

00008f68 <fdopen@plt>:
    8f68:	add	ip, pc, #0, 12
    8f6c:	add	ip, ip, #57344	; 0xe000
    8f70:	ldr	pc, [ip, #272]!	; 0x110

00008f74 <strstr@plt>:
    8f74:	add	ip, pc, #0, 12
    8f78:	add	ip, ip, #57344	; 0xe000
    8f7c:	ldr	pc, [ip, #264]!	; 0x108

00008f80 <realpath@plt>:
    8f80:	add	ip, pc, #0, 12
    8f84:	add	ip, ip, #57344	; 0xe000
    8f88:	ldr	pc, [ip, #256]!	; 0x100

00008f8c <close@plt>:
    8f8c:	add	ip, pc, #0, 12
    8f90:	add	ip, ip, #57344	; 0xe000
    8f94:	ldr	pc, [ip, #248]!	; 0xf8

00008f98 <fwrite@plt>:
    8f98:	add	ip, pc, #0, 12
    8f9c:	add	ip, ip, #57344	; 0xe000
    8fa0:	ldr	pc, [ip, #240]!	; 0xf0

00008fa4 <_Znaj@plt>:
    8fa4:	add	ip, pc, #0, 12
    8fa8:	add	ip, ip, #57344	; 0xe000
    8fac:	ldr	pc, [ip, #232]!	; 0xe8

00008fb0 <malloc@plt>:
    8fb0:	add	ip, pc, #0, 12
    8fb4:	add	ip, ip, #57344	; 0xe000
    8fb8:	ldr	pc, [ip, #224]!	; 0xe0

00008fbc <nl_langinfo@plt>:
    8fbc:	add	ip, pc, #0, 12
    8fc0:	add	ip, ip, #57344	; 0xe000
    8fc4:	ldr	pc, [ip, #216]!	; 0xd8

00008fc8 <__stack_chk_fail@plt>:
    8fc8:	add	ip, pc, #0, 12
    8fcc:	add	ip, ip, #57344	; 0xe000
    8fd0:	ldr	pc, [ip, #208]!	; 0xd0

00008fd4 <__fprintf_chk@plt>:
    8fd4:	add	ip, pc, #0, 12
    8fd8:	add	ip, ip, #57344	; 0xe000
    8fdc:	ldr	pc, [ip, #200]!	; 0xc8

00008fe0 <fputc@plt>:
    8fe0:	add	ip, pc, #0, 12
    8fe4:	add	ip, ip, #57344	; 0xe000
    8fe8:	ldr	pc, [ip, #192]!	; 0xc0

00008fec <strtok@plt>:
    8fec:	add	ip, pc, #0, 12
    8ff0:	add	ip, ip, #57344	; 0xe000
    8ff4:	ldr	pc, [ip, #184]!	; 0xb8

00008ff8 <_ZdaPv@plt>:
    8ff8:	add	ip, pc, #0, 12
    8ffc:	add	ip, ip, #57344	; 0xe000
    9000:	ldr	pc, [ip, #176]!	; 0xb0

00009004 <pathconf@plt>:
    9004:	add	ip, pc, #0, 12
    9008:	add	ip, ip, #57344	; 0xe000
    900c:	ldr	pc, [ip, #168]!	; 0xa8

00009010 <__sprintf_chk@plt>:
    9010:	add	ip, pc, #0, 12
    9014:	add	ip, ip, #57344	; 0xe000
    9018:	ldr	pc, [ip, #160]!	; 0xa0

0000901c <fread@plt>:
    901c:	add	ip, pc, #0, 12
    9020:	add	ip, ip, #57344	; 0xe000
    9024:	ldr	pc, [ip, #152]!	; 0x98

00009028 <strncmp@plt>:
    9028:	add	ip, pc, #0, 12
    902c:	add	ip, ip, #57344	; 0xe000
    9030:	ldr	pc, [ip, #144]!	; 0x90

00009034 <__gxx_personality_v0@plt>:
    9034:	add	ip, pc, #0, 12
    9038:	add	ip, ip, #57344	; 0xe000
    903c:	ldr	pc, [ip, #136]!	; 0x88

00009040 <ferror@plt>:
    9040:	add	ip, pc, #0, 12
    9044:	add	ip, ip, #57344	; 0xe000
    9048:	ldr	pc, [ip, #128]!	; 0x80

0000904c <__memmove_chk@plt>:
    904c:	add	ip, pc, #0, 12
    9050:	add	ip, ip, #57344	; 0xe000
    9054:	ldr	pc, [ip, #120]!	; 0x78

00009058 <realloc@plt>:
    9058:	add	ip, pc, #0, 12
    905c:	add	ip, ip, #57344	; 0xe000
    9060:	ldr	pc, [ip, #112]!	; 0x70

00009064 <iconv_open@plt>:
    9064:	add	ip, pc, #0, 12
    9068:	add	ip, ip, #57344	; 0xe000
    906c:	ldr	pc, [ip, #104]!	; 0x68

00009070 <_IO_putc@plt>:
    9070:	add	ip, pc, #0, 12
    9074:	add	ip, ip, #57344	; 0xe000
    9078:	ldr	pc, [ip, #96]!	; 0x60

0000907c <memchr@plt>:
    907c:	add	ip, pc, #0, 12
    9080:	add	ip, ip, #57344	; 0xe000
    9084:	ldr	pc, [ip, #88]!	; 0x58

00009088 <strcmp@plt>:
    9088:	add	ip, pc, #0, 12
    908c:	add	ip, ip, #57344	; 0xe000
    9090:	ldr	pc, [ip, #80]!	; 0x50

00009094 <exit@plt>:
    9094:	add	ip, pc, #0, 12
    9098:	add	ip, ip, #57344	; 0xe000
    909c:	ldr	pc, [ip, #72]!	; 0x48

000090a0 <__errno_location@plt>:
    90a0:	add	ip, pc, #0, 12
    90a4:	add	ip, ip, #57344	; 0xe000
    90a8:	ldr	pc, [ip, #64]!	; 0x40

000090ac <fscanf@plt>:
    90ac:	add	ip, pc, #0, 12
    90b0:	add	ip, ip, #57344	; 0xe000
    90b4:	ldr	pc, [ip, #56]!	; 0x38

000090b8 <fputs@plt>:
    90b8:	add	ip, pc, #0, 12
    90bc:	add	ip, ip, #57344	; 0xe000
    90c0:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

000090c4 <.text>:
    90c4:	ldr	r3, [r1]
    90c8:	push	{r4, r5, r6, r7, r8, r9, lr}
    90cc:	movw	r5, #29608	; 0x73a8
    90d0:	movt	r5, #1
    90d4:	sub	sp, sp, #12
    90d8:	mov	r6, r1
    90dc:	mov	r7, r0
    90e0:	movw	r1, #56940	; 0xde6c
    90e4:	mov	r0, #6
    90e8:	movt	r1, #0
    90ec:	str	r3, [r5]
    90f0:	bl	8f50 <setlocale@plt>
    90f4:	mov	r0, #0
    90f8:	mov	r1, r0
    90fc:	bl	8f50 <setlocale@plt>
    9100:	subs	r4, r0, #0
    9104:	beq	911c <fputs@plt+0x64>
    9108:	movw	r1, #57616	; 0xe110
    910c:	movt	r1, #0
    9110:	bl	9088 <strcmp@plt>
    9114:	cmp	r0, #0
    9118:	bne	9270 <fputs@plt+0x1b8>
    911c:	movw	r3, #57628	; 0xe11c
    9120:	movt	r3, #0
    9124:	movw	r4, #28976	; 0x7130
    9128:	movt	r4, #1
    912c:	ldm	r3, {r0, r1}
    9130:	add	r2, r4, #308	; 0x134
    9134:	lsr	r3, r1, #16
    9138:	str	r0, [r4, #304]	; 0x130
    913c:	strh	r1, [r2]
    9140:	strb	r3, [r4, #310]	; 0x136
    9144:	ldr	r3, [r6]
    9148:	movw	r8, #29632	; 0x73c0
    914c:	movt	r8, #1
    9150:	mov	r9, #1
    9154:	str	r3, [r5]
    9158:	mov	r3, #0
    915c:	movw	r2, #57708	; 0xe16c
    9160:	str	r3, [sp]
    9164:	movt	r2, #0
    9168:	mov	r0, r7
    916c:	mov	r1, r6
    9170:	ldr	r3, [pc, #788]	; 948c <fputs@plt+0x3d4>
    9174:	bl	c4d0 <fputs@plt+0x3418>
    9178:	cmn	r0, #1
    917c:	beq	93ac <fputs@plt+0x2f4>
    9180:	sub	r3, r0, #63	; 0x3f
    9184:	cmp	r3, #55	; 0x37
    9188:	ldrls	pc, [pc, r3, lsl #2]
    918c:	b	9398 <fputs@plt+0x2e0>
    9190:	andeq	r9, r0, r8, ror #6
    9194:	muleq	r0, r8, r3
    9198:	muleq	r0, r8, r3
    919c:	muleq	r0, r8, r3
    91a0:	muleq	r0, r8, r3
    91a4:	andeq	r9, r0, r4, asr #6
    91a8:	muleq	r0, r8, r3
    91ac:	muleq	r0, r8, r3
    91b0:	muleq	r0, r8, r3
    91b4:	muleq	r0, r8, r3
    91b8:	muleq	r0, r8, r3
    91bc:	muleq	r0, r8, r3
    91c0:	muleq	r0, r8, r3
    91c4:	muleq	r0, r8, r3
    91c8:	muleq	r0, r8, r3
    91cc:	muleq	r0, r8, r3
    91d0:	muleq	r0, r8, r3
    91d4:	muleq	r0, r8, r3
    91d8:	muleq	r0, r8, r3
    91dc:	muleq	r0, r8, r3
    91e0:	muleq	r0, r8, r3
    91e4:	muleq	r0, r8, r3
    91e8:	muleq	r0, r8, r3
    91ec:	muleq	r0, r8, r3
    91f0:	muleq	r0, r8, r3
    91f4:	muleq	r0, r8, r3
    91f8:	muleq	r0, r8, r3
    91fc:	muleq	r0, r8, r3
    9200:	muleq	r0, r8, r3
    9204:	muleq	r0, r8, r3
    9208:	muleq	r0, r8, r3
    920c:	muleq	r0, r8, r3
    9210:	muleq	r0, r8, r3
    9214:	muleq	r0, r8, r3
    9218:	muleq	r0, r8, r3
    921c:	muleq	r0, r8, r3
    9220:	muleq	r0, r8, r3
    9224:	andeq	r9, r0, ip, lsr r3
    9228:	andeq	r9, r0, r4, lsl r3
    922c:	muleq	r0, r8, r3
    9230:	muleq	r0, r8, r3
    9234:	andeq	r9, r0, r4, ror #5
    9238:	muleq	r0, r8, r3
    923c:	muleq	r0, r8, r3
    9240:	muleq	r0, r8, r3
    9244:	muleq	r0, r8, r3
    9248:	muleq	r0, r8, r3
    924c:	muleq	r0, r8, r3
    9250:	muleq	r0, r8, r3
    9254:	muleq	r0, r8, r3
    9258:	muleq	r0, r8, r3
    925c:	ldrdeq	r9, [r0], -ip
    9260:	muleq	r0, r8, r3
    9264:	muleq	r0, r8, r3
    9268:	muleq	r0, r8, r3
    926c:			; <UNDEFINED> instruction: 0x000092b0
    9270:	mov	r0, r4
    9274:	movw	r1, #57620	; 0xe114
    9278:	movt	r1, #0
    927c:	bl	9088 <strcmp@plt>
    9280:	cmp	r0, #0
    9284:	beq	911c <fputs@plt+0x64>
    9288:	bl	c640 <fputs@plt+0x3588>
    928c:	movw	r4, #28976	; 0x7130
    9290:	movt	r4, #1
    9294:	mov	r2, #99	; 0x63
    9298:	mov	r1, r0
    929c:	add	r0, r4, #304	; 0x130
    92a0:	bl	8e54 <strncpy@plt>
    92a4:	mov	r3, #0
    92a8:	strb	r3, [r4, #403]	; 0x193
    92ac:	b	9144 <fputs@plt+0x8c>
    92b0:	movw	r2, #28936	; 0x7108
    92b4:	movt	r2, #1
    92b8:	movw	r1, #57636	; 0xe124
    92bc:	movw	r3, #57688	; 0xe158
    92c0:	ldr	r2, [r2]
    92c4:	movt	r1, #0
    92c8:	movt	r3, #0
    92cc:	mov	r0, #1
    92d0:	bl	8e78 <__printf_chk@plt>
    92d4:	mov	r0, #0
    92d8:	bl	9094 <exit@plt>
    92dc:	str	r9, [r4, #504]	; 0x1f8
    92e0:	b	9158 <fputs@plt+0xa0>
    92e4:	ldr	ip, [pc, #420]	; 9490 <fputs@plt+0x3d8>
    92e8:	movw	r0, #28964	; 0x7124
    92ec:	movt	r0, #1
    92f0:	ldr	r3, [r5]
    92f4:	movw	r2, #57336	; 0xdff8
    92f8:	mov	r1, #1
    92fc:	ldr	r0, [r0]
    9300:	movt	r2, #0
    9304:	str	ip, [sp]
    9308:	bl	8fd4 <__fprintf_chk@plt>
    930c:	mov	r0, #0
    9310:	bl	9094 <exit@plt>
    9314:	ldr	r1, [r8]
    9318:	cmp	r1, #0
    931c:	strbeq	r1, [r4, #204]	; 0xcc
    9320:	beq	9158 <fputs@plt+0xa0>
    9324:	ldr	r0, [pc, #360]	; 9494 <fputs@plt+0x3dc>
    9328:	mov	r2, #99	; 0x63
    932c:	bl	8e54 <strncpy@plt>
    9330:	mov	r3, #0
    9334:	strb	r3, [r4, #303]	; 0x12f
    9338:	b	9158 <fputs@plt+0xa0>
    933c:	str	r9, [r4]
    9340:	b	9158 <fputs@plt+0xa0>
    9344:	ldr	r1, [r8]
    9348:	cmp	r1, #0
    934c:	beq	9158 <fputs@plt+0xa0>
    9350:	ldr	r0, [pc, #312]	; 9490 <fputs@plt+0x3d8>
    9354:	mov	r2, #99	; 0x63
    9358:	bl	8e54 <strncpy@plt>
    935c:	mov	r3, #0
    9360:	strb	r3, [r4, #403]	; 0x193
    9364:	b	9158 <fputs@plt+0xa0>
    9368:	ldr	ip, [pc, #288]	; 9490 <fputs@plt+0x3d8>
    936c:	movw	r0, #28968	; 0x7128
    9370:	movt	r0, #1
    9374:	ldr	r3, [r5]
    9378:	movw	r2, #57336	; 0xdff8
    937c:	mov	r1, #1
    9380:	ldr	r0, [r0]
    9384:	movt	r2, #0
    9388:	str	ip, [sp]
    938c:	bl	8fd4 <__fprintf_chk@plt>
    9390:	mov	r0, #1
    9394:	bl	9094 <exit@plt>
    9398:	movw	r1, #57696	; 0xe160
    939c:	movw	r0, #1181	; 0x49d
    93a0:	movt	r1, #0
    93a4:	bl	b090 <fputs@plt+0x1fd8>
    93a8:	b	9158 <fputs@plt+0xa0>
    93ac:	ldr	r3, [r4]
    93b0:	cmp	r3, #0
    93b4:	bne	9454 <fputs@plt+0x39c>
    93b8:	movw	r3, #28924	; 0x70fc
    93bc:	movt	r3, #1
    93c0:	ldr	r3, [r3]
    93c4:	cmp	r7, r3
    93c8:	ble	943c <fputs@plt+0x384>
    93cc:	mov	r4, #0
    93d0:	rsb	r7, r3, r7
    93d4:	add	r6, r6, r3, lsl #2
    93d8:	mov	r5, r4
    93dc:	ldr	r0, [r6, r4, lsl #2]
    93e0:	add	r4, r4, #1
    93e4:	bl	aba0 <fputs@plt+0x1ae8>
    93e8:	cmp	r0, #0
    93ec:	addeq	r5, r5, #1
    93f0:	cmp	r4, r7
    93f4:	bne	93dc <fputs@plt+0x324>
    93f8:	movw	r4, #28964	; 0x7124
    93fc:	movt	r4, #1
    9400:	ldr	r0, [r4]
    9404:	bl	9040 <ferror@plt>
    9408:	cmp	r0, #0
    940c:	beq	9478 <fputs@plt+0x3c0>
    9410:	movw	r1, #29488	; 0x7330
    9414:	movt	r1, #1
    9418:	movw	r0, #57744	; 0xe190
    941c:	movt	r0, #0
    9420:	mov	r2, r1
    9424:	mov	r3, r1
    9428:	bl	b5fc <fputs@plt+0x2544>
    942c:	adds	r0, r5, #0
    9430:	movne	r0, #1
    9434:	add	sp, sp, #12
    9438:	pop	{r4, r5, r6, r7, r8, r9, pc}
    943c:	movw	r0, #56960	; 0xde80
    9440:	movt	r0, #0
    9444:	bl	aba0 <fputs@plt+0x1ae8>
    9448:	rsbs	r5, r0, #1
    944c:	movcc	r5, #0
    9450:	b	93f8 <fputs@plt+0x340>
    9454:	movw	r3, #28968	; 0x7128
    9458:	movt	r3, #1
    945c:	movw	r2, #57720	; 0xe178
    9460:	mov	r1, #1
    9464:	ldr	r0, [r3]
    9468:	movt	r2, #0
    946c:	ldr	r3, [pc, #28]	; 9490 <fputs@plt+0x3d8>
    9470:	bl	8fd4 <__fprintf_chk@plt>
    9474:	b	93b8 <fputs@plt+0x300>
    9478:	ldr	r0, [r4]
    947c:	bl	8f20 <fflush@plt>
    9480:	cmp	r0, #0
    9484:	bge	942c <fputs@plt+0x374>
    9488:	b	9410 <fputs@plt+0x358>
    948c:	muleq	r0, r8, ip
    9490:	andeq	r7, r1, r0, ror #4
    9494:	strdeq	r7, [r1], -ip
    9498:	movw	r3, #29488	; 0x7330
    949c:	movt	r3, #1
    94a0:	mov	r2, #0
    94a4:	str	r2, [r3]
    94a8:	bx	lr
    94ac:	mov	fp, #0
    94b0:	mov	lr, #0
    94b4:	pop	{r1}		; (ldr r1, [sp], #4)
    94b8:	mov	r2, sp
    94bc:	push	{r2}		; (str r2, [sp, #-4]!)
    94c0:	push	{r0}		; (str r0, [sp, #-4]!)
    94c4:	ldr	ip, [pc, #16]	; 94dc <fputs@plt+0x424>
    94c8:	push	{ip}		; (str ip, [sp, #-4]!)
    94cc:	ldr	r0, [pc, #12]	; 94e0 <fputs@plt+0x428>
    94d0:	ldr	r3, [pc, #12]	; 94e4 <fputs@plt+0x42c>
    94d4:	bl	8e3c <__libc_start_main@plt>
    94d8:	bl	8e24 <abort@plt>
    94dc:	andeq	sp, r0, r8, lsl #18
    94e0:	andeq	r9, r0, r4, asr #1
    94e4:	andeq	sp, r0, r4, lsr #17
    94e8:	ldr	r3, [pc, #20]	; 9504 <fputs@plt+0x44c>
    94ec:	ldr	r2, [pc, #20]	; 9508 <fputs@plt+0x450>
    94f0:	add	r3, pc, r3
    94f4:	ldr	r2, [r3, r2]
    94f8:	cmp	r2, #0
    94fc:	bxeq	lr
    9500:	b	8e48 <__gmon_start__@plt>
    9504:	andeq	sp, r0, r8, lsl #22
    9508:	strdeq	r0, [r0], -r4
    950c:	push	{r3, lr}
    9510:	movw	r0, #28948	; 0x7114
    9514:	ldr	r3, [pc, #36]	; 9540 <fputs@plt+0x488>
    9518:	movt	r0, #1
    951c:	rsb	r3, r0, r3
    9520:	cmp	r3, #6
    9524:	popls	{r3, pc}
    9528:	movw	r3, #0
    952c:	movt	r3, #0
    9530:	cmp	r3, #0
    9534:	popeq	{r3, pc}
    9538:	blx	r3
    953c:	pop	{r3, pc}
    9540:	andeq	r7, r1, r7, lsl r1
    9544:	push	{r3, lr}
    9548:	movw	r0, #28948	; 0x7114
    954c:	movw	r3, #28948	; 0x7114
    9550:	movt	r0, #1
    9554:	movt	r3, #1
    9558:	rsb	r3, r0, r3
    955c:	asr	r3, r3, #2
    9560:	add	r3, r3, r3, lsr #31
    9564:	asrs	r1, r3, #1
    9568:	popeq	{r3, pc}
    956c:	movw	r2, #0
    9570:	movt	r2, #0
    9574:	cmp	r2, #0
    9578:	popeq	{r3, pc}
    957c:	blx	r2
    9580:	pop	{r3, pc}
    9584:	push	{r4, lr}
    9588:	movw	r4, #28972	; 0x712c
    958c:	movt	r4, #1
    9590:	ldrb	r3, [r4]
    9594:	cmp	r3, #0
    9598:	popne	{r4, pc}
    959c:	bl	950c <fputs@plt+0x454>
    95a0:	mov	r3, #1
    95a4:	strb	r3, [r4]
    95a8:	pop	{r4, pc}
    95ac:	movw	r0, #28404	; 0x6ef4
    95b0:	movt	r0, #1
    95b4:	push	{r3, lr}
    95b8:	ldr	r3, [r0]
    95bc:	cmp	r3, #0
    95c0:	beq	95d8 <fputs@plt+0x520>
    95c4:	movw	r3, #0
    95c8:	movt	r3, #0
    95cc:	cmp	r3, #0
    95d0:	beq	95d8 <fputs@plt+0x520>
    95d4:	blx	r3
    95d8:	pop	{r3, lr}
    95dc:	b	9544 <fputs@plt+0x48c>
    95e0:	push	{r3, r4, r5, r6, r7, lr}
    95e4:	mov	r5, r0
    95e8:	bl	8f38 <strlen@plt>
    95ec:	cmp	r0, #4
    95f0:	mov	r4, r0
    95f4:	ble	9654 <fputs@plt+0x59c>
    95f8:	sub	r6, r0, #4
    95fc:	movw	r1, #56544	; 0xdce0
    9600:	add	r7, r5, r6
    9604:	movt	r1, #0
    9608:	mov	r0, r7
    960c:	bl	8e9c <strcasecmp@plt>
    9610:	movw	r1, #56560	; 0xdcf0
    9614:	movt	r1, #0
    9618:	cmp	r0, #0
    961c:	strbeq	r0, [r5, r6]
    9620:	mov	r0, r7
    9624:	bl	8e9c <strcasecmp@plt>
    9628:	cmp	r0, #0
    962c:	strbeq	r0, [r5, r6]
    9630:	cmp	r4, #5
    9634:	beq	9654 <fputs@plt+0x59c>
    9638:	sub	r4, r4, #5
    963c:	movw	r1, #56552	; 0xdce8
    9640:	add	r0, r5, r4
    9644:	movt	r1, #0
    9648:	bl	8e9c <strcasecmp@plt>
    964c:	cmp	r0, #0
    9650:	strbeq	r0, [r5, r4]
    9654:	movw	r4, #55580	; 0xd91c
    9658:	movw	r1, #56536	; 0xdcd8
    965c:	movt	r4, #0
    9660:	movt	r1, #0
    9664:	b	9674 <fputs@plt+0x5bc>
    9668:	ldr	r1, [r4, #8]!
    966c:	cmp	r1, #0
    9670:	beq	968c <fputs@plt+0x5d4>
    9674:	mov	r0, r5
    9678:	bl	8e9c <strcasecmp@plt>
    967c:	cmp	r0, #0
    9680:	bne	9668 <fputs@plt+0x5b0>
    9684:	ldr	r0, [r4, #4]
    9688:	pop	{r3, r4, r5, r6, r7, pc}
    968c:	mov	r0, r5
    9690:	pop	{r3, r4, r5, r6, r7, pc}
    9694:	push	{r3, r4, r5, r6, r7, lr}
    9698:	mov	r5, r0
    969c:	ldm	r1, {r4, r6}
    96a0:	cmp	r6, #0
    96a4:	addgt	r6, r4, r6
    96a8:	movwgt	r7, #28964	; 0x7124
    96ac:	movtgt	r7, #1
    96b0:	bgt	96cc <fputs@plt+0x614>
    96b4:	b	96fc <fputs@plt+0x644>
    96b8:	cmp	r3, #173	; 0xad
    96bc:	beq	9740 <fputs@plt+0x688>
    96c0:	bl	8e78 <__printf_chk@plt>
    96c4:	cmp	r4, r6
    96c8:	beq	96fc <fputs@plt+0x644>
    96cc:	ldrb	r3, [r4], #1
    96d0:	movw	r1, #56568	; 0xdcf8
    96d4:	mov	r0, #1
    96d8:	movt	r1, #0
    96dc:	cmp	r3, #127	; 0x7f
    96e0:	mov	r2, r3
    96e4:	bgt	96b8 <fputs@plt+0x600>
    96e8:	mov	r0, r3
    96ec:	ldr	r1, [r7]
    96f0:	bl	9070 <_IO_putc@plt>
    96f4:	cmp	r4, r6
    96f8:	bne	96cc <fputs@plt+0x614>
    96fc:	movw	r4, #28964	; 0x7124
    9700:	movt	r4, #1
    9704:	mov	r0, r5
    9708:	bl	8e84 <_IO_getc@plt>
    970c:	movw	r1, #56568	; 0xdcf8
    9710:	movt	r1, #0
    9714:	cmn	r0, #1
    9718:	mov	r3, r0
    971c:	mov	r2, r0
    9720:	popeq	{r3, r4, r5, r6, r7, pc}
    9724:	cmp	r0, #127	; 0x7f
    9728:	ble	976c <fputs@plt+0x6b4>
    972c:	cmp	r3, #173	; 0xad
    9730:	mov	r0, #1
    9734:	beq	975c <fputs@plt+0x6a4>
    9738:	bl	8e78 <__printf_chk@plt>
    973c:	b	9704 <fputs@plt+0x64c>
    9740:	ldr	r1, [r7]
    9744:	mov	r0, #92	; 0x5c
    9748:	bl	9070 <_IO_putc@plt>
    974c:	ldr	r1, [r7]
    9750:	mov	r0, #37	; 0x25
    9754:	bl	9070 <_IO_putc@plt>
    9758:	b	96c4 <fputs@plt+0x60c>
    975c:	mov	r0, #92	; 0x5c
    9760:	ldr	r1, [r4]
    9764:	bl	9070 <_IO_putc@plt>
    9768:	mov	r0, #37	; 0x25
    976c:	ldr	r1, [r4]
    9770:	bl	9070 <_IO_putc@plt>
    9774:	b	9704 <fputs@plt+0x64c>
    9778:	mov	r2, #1
    977c:	mov	ip, #0
    9780:	str	r1, [r0]
    9784:	str	ip, [r0, #12]
    9788:	str	r2, [r0, #16]
    978c:	str	r2, [r0, #20]
    9790:	str	r2, [r0, #24]
    9794:	bx	lr
    9798:	movw	r3, #28976	; 0x7130
    979c:	movt	r3, #1
    97a0:	push	{r4, lr}
    97a4:	mov	r4, r0
    97a8:	ldr	r3, [r3]
    97ac:	cmp	r3, #0
    97b0:	beq	97c0 <fputs@plt+0x708>
    97b4:	ldr	r3, [r0, #20]
    97b8:	cmp	r3, #0
    97bc:	bne	97e0 <fputs@plt+0x728>
    97c0:	movw	r1, #56568	; 0xdcf8
    97c4:	mov	r0, #1
    97c8:	movt	r1, #0
    97cc:	movw	r2, #65533	; 0xfffd
    97d0:	bl	8e78 <__printf_chk@plt>
    97d4:	mov	r3, #0
    97d8:	str	r3, [r4, #12]
    97dc:	pop	{r4, pc}
    97e0:	movw	r3, #28968	; 0x7128
    97e4:	movt	r3, #1
    97e8:	movw	r0, #56580	; 0xdd04
    97ec:	mov	r1, #1
    97f0:	ldr	r3, [r3]
    97f4:	movt	r0, #0
    97f8:	mov	r2, #85	; 0x55
    97fc:	bl	8f98 <fwrite@plt>
    9800:	mov	r3, #0
    9804:	str	r3, [r4, #20]
    9808:	b	97c0 <fputs@plt+0x708>
    980c:	movw	r3, #28976	; 0x7130
    9810:	movt	r3, #1
    9814:	push	{r4, lr}
    9818:	mov	r4, r0
    981c:	ldr	r3, [r3]
    9820:	cmp	r3, #0
    9824:	beq	9834 <fputs@plt+0x77c>
    9828:	ldr	r3, [r0, #24]
    982c:	cmp	r3, #0
    9830:	bne	9854 <fputs@plt+0x79c>
    9834:	movw	r1, #56568	; 0xdcf8
    9838:	mov	r0, #1
    983c:	movt	r1, #0
    9840:	movw	r2, #65533	; 0xfffd
    9844:	bl	8e78 <__printf_chk@plt>
    9848:	mov	r3, #0
    984c:	str	r3, [r4, #12]
    9850:	pop	{r4, pc}
    9854:	movw	r3, #28968	; 0x7128
    9858:	movt	r3, #1
    985c:	movw	r0, #56668	; 0xdd5c
    9860:	mov	r1, #1
    9864:	ldr	r3, [r3]
    9868:	movt	r0, #0
    986c:	mov	r2, #92	; 0x5c
    9870:	bl	8f98 <fwrite@plt>
    9874:	mov	r3, #0
    9878:	str	r3, [r4, #24]
    987c:	b	9834 <fputs@plt+0x77c>
    9880:	ldr	r3, [r0, #12]
    9884:	push	{r4, lr}
    9888:	cmp	r3, #0
    988c:	mov	r4, r0
    9890:	beq	9898 <fputs@plt+0x7e0>
    9894:	bl	980c <fputs@plt+0x754>
    9898:	mov	r0, r4
    989c:	pop	{r4, pc}
    98a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98a4:	movw	sl, #28952	; 0x7118
    98a8:	movt	sl, #1
    98ac:	ldr	r8, [r1, #4]
    98b0:	sub	sp, sp, #36	; 0x24
    98b4:	ldr	r6, [r1]
    98b8:	ldr	r2, [sl]
    98bc:	cmp	r8, #0
    98c0:	mov	fp, #1
    98c4:	mov	r3, #0
    98c8:	movwgt	r9, #28964	; 0x7124
    98cc:	mov	r7, r0
    98d0:	str	r0, [sp]
    98d4:	addgt	r8, r6, r8
    98d8:	str	r3, [sp, #12]
    98dc:	movtgt	r9, #1
    98e0:	str	r2, [sp, #28]
    98e4:	str	fp, [sp, #16]
    98e8:	str	fp, [sp, #20]
    98ec:	str	fp, [sp, #24]
    98f0:	ble	99e8 <fputs@plt+0x930>
    98f4:	ldrb	r4, [r6], #1
    98f8:	eor	r5, r4, #128	; 0x80
    98fc:	b	9914 <fputs@plt+0x85c>
    9900:	cmp	r5, #63	; 0x3f
    9904:	bls	997c <fputs@plt+0x8c4>
    9908:	mov	r0, sp
    990c:	bl	980c <fputs@plt+0x754>
    9910:	ldr	r3, [sp, #12]
    9914:	add	r1, sp, #32
    9918:	cmp	r3, #0
    991c:	add	r2, r1, r3
    9920:	strb	r4, [r2, #-28]	; 0xffffffe4
    9924:	bne	9900 <fputs@plt+0x848>
    9928:	tst	r4, #128	; 0x80
    992c:	beq	9b58 <fputs@plt+0xaa0>
    9930:	cmp	r4, #191	; 0xbf
    9934:	bls	9b78 <fputs@plt+0xac0>
    9938:	cmp	r4, #223	; 0xdf
    993c:	bls	9b68 <fputs@plt+0xab0>
    9940:	cmp	r4, #239	; 0xef
    9944:	bls	9b84 <fputs@plt+0xacc>
    9948:	cmp	r4, #247	; 0xf7
    994c:	bls	9d88 <fputs@plt+0xcd0>
    9950:	cmp	r4, #251	; 0xfb
    9954:	bls	9e08 <fputs@plt+0xd50>
    9958:	cmp	r4, #253	; 0xfd
    995c:	bhi	9b78 <fputs@plt+0xac0>
    9960:	mov	r3, #6
    9964:	str	fp, [sp, #12]
    9968:	str	r3, [sp, #16]
    996c:	cmp	r6, r8
    9970:	beq	99e8 <fputs@plt+0x930>
    9974:	ldr	r3, [sp, #12]
    9978:	b	98f4 <fputs@plt+0x83c>
    997c:	sub	r3, r3, #1
    9980:	cmp	r3, #4
    9984:	ldrls	pc, [pc, r3, lsl #2]
    9988:	b	996c <fputs@plt+0x8b4>
    998c:	andeq	r9, r0, r0, lsl fp
    9990:	andeq	r9, r0, r8, lsr #21
    9994:	andeq	r9, r0, r0, lsr #19
    9998:	muleq	r0, r0, sl
    999c:	ldrdeq	r9, [r0], -r0
    99a0:	ldr	r3, [sp, #16]
    99a4:	cmp	r3, #4
    99a8:	movne	r3, #4
    99ac:	strne	r3, [sp, #12]
    99b0:	bne	996c <fputs@plt+0x8b4>
    99b4:	ldrb	r2, [sp, #4]
    99b8:	cmp	r2, #240	; 0xf0
    99bc:	bls	9da8 <fputs@plt+0xcf0>
    99c0:	cmp	r2, #243	; 0xf3
    99c4:	bls	9e38 <fputs@plt+0xd80>
    99c8:	cmp	r2, #244	; 0xf4
    99cc:	beq	9e28 <fputs@plt+0xd70>
    99d0:	mov	r0, sp
    99d4:	bl	9798 <fputs@plt+0x6e0>
    99d8:	cmp	r6, r8
    99dc:	mov	r3, #0
    99e0:	str	r3, [sp, #12]
    99e4:	bne	9974 <fputs@plt+0x8bc>
    99e8:	movw	r8, #28964	; 0x7124
    99ec:	movt	r8, #1
    99f0:	mov	fp, #4
    99f4:	mov	r9, #1
    99f8:	mov	r0, r7
    99fc:	bl	8e84 <_IO_getc@plt>
    9a00:	cmn	r0, #1
    9a04:	mov	r6, r0
    9a08:	beq	9d5c <fputs@plt+0xca4>
    9a0c:	uxtb	r4, r6
    9a10:	eor	r5, r4, #128	; 0x80
    9a14:	b	9a28 <fputs@plt+0x970>
    9a18:	cmp	r5, #63	; 0x3f
    9a1c:	bls	9b94 <fputs@plt+0xadc>
    9a20:	mov	r0, sp
    9a24:	bl	980c <fputs@plt+0x754>
    9a28:	ldr	r3, [sp, #12]
    9a2c:	add	r1, sp, #32
    9a30:	add	r2, r1, r3
    9a34:	cmp	r3, #0
    9a38:	strb	r4, [r2, #-28]	; 0xffffffe4
    9a3c:	bne	9a18 <fputs@plt+0x960>
    9a40:	tst	r6, #128	; 0x80
    9a44:	beq	9d20 <fputs@plt+0xc68>
    9a48:	cmp	r4, #191	; 0xbf
    9a4c:	bls	9d40 <fputs@plt+0xc88>
    9a50:	cmp	r4, #223	; 0xdf
    9a54:	bls	9d30 <fputs@plt+0xc78>
    9a58:	cmp	r4, #239	; 0xef
    9a5c:	bls	9d4c <fputs@plt+0xc94>
    9a60:	cmp	r4, #247	; 0xf7
    9a64:	strls	fp, [sp, #16]
    9a68:	strls	r9, [sp, #12]
    9a6c:	bls	99f8 <fputs@plt+0x940>
    9a70:	cmp	r4, #251	; 0xfb
    9a74:	bls	9d98 <fputs@plt+0xce0>
    9a78:	cmp	r4, #253	; 0xfd
    9a7c:	bhi	9d40 <fputs@plt+0xc88>
    9a80:	mov	r3, #6
    9a84:	str	r9, [sp, #12]
    9a88:	str	r3, [sp, #16]
    9a8c:	b	99f8 <fputs@plt+0x940>
    9a90:	ldr	r3, [sp, #16]
    9a94:	cmp	r3, #5
    9a98:	movne	r1, #5
    9a9c:	strne	r1, [sp, #12]
    9aa0:	bne	996c <fputs@plt+0x8b4>
    9aa4:	b	99d0 <fputs@plt+0x918>
    9aa8:	ldr	r3, [sp, #16]
    9aac:	cmp	r3, #3
    9ab0:	movne	r3, #3
    9ab4:	strne	r3, [sp, #12]
    9ab8:	bne	996c <fputs@plt+0x8b4>
    9abc:	ldrb	r2, [sp, #4]
    9ac0:	ldrb	r3, [sp, #5]
    9ac4:	cmp	r2, #224	; 0xe0
    9ac8:	bhi	9ad4 <fputs@plt+0xa1c>
    9acc:	cmp	r3, #159	; 0x9f
    9ad0:	bls	99d0 <fputs@plt+0x918>
    9ad4:	ldrb	r1, [sp, #6]
    9ad8:	and	r2, r2, #31
    9adc:	eor	r3, r3, #128	; 0x80
    9ae0:	eor	r1, r1, #128	; 0x80
    9ae4:	orr	r2, r1, r2, lsl #12
    9ae8:	orr	r2, r2, r3, lsl #6
    9aec:	cmp	r2, #127	; 0x7f
    9af0:	ble	9b48 <fputs@plt+0xa90>
    9af4:	cmp	r2, #173	; 0xad
    9af8:	beq	9dec <fputs@plt+0xd34>
    9afc:	movw	r1, #56568	; 0xdcf8
    9b00:	mov	r0, #1
    9b04:	movt	r1, #0
    9b08:	bl	8e78 <__printf_chk@plt>
    9b0c:	b	99d8 <fputs@plt+0x920>
    9b10:	ldr	r3, [sp, #16]
    9b14:	cmp	r3, #2
    9b18:	movne	r3, #2
    9b1c:	strne	r3, [sp, #12]
    9b20:	bne	996c <fputs@plt+0x8b4>
    9b24:	ldrb	r3, [sp, #4]
    9b28:	cmp	r3, #193	; 0xc1
    9b2c:	bls	99d0 <fputs@plt+0x918>
    9b30:	ldrb	r2, [sp, #5]
    9b34:	and	r3, r3, #31
    9b38:	eor	r2, r2, #128	; 0x80
    9b3c:	orr	r2, r2, r3, lsl #6
    9b40:	cmp	r2, #127	; 0x7f
    9b44:	bgt	9af4 <fputs@plt+0xa3c>
    9b48:	mov	r0, r2
    9b4c:	ldr	r1, [r9]
    9b50:	bl	9070 <_IO_putc@plt>
    9b54:	b	99d8 <fputs@plt+0x920>
    9b58:	mov	r0, r4
    9b5c:	ldr	r1, [r9]
    9b60:	bl	9070 <_IO_putc@plt>
    9b64:	b	996c <fputs@plt+0x8b4>
    9b68:	mov	r3, #2
    9b6c:	str	fp, [sp, #12]
    9b70:	str	r3, [sp, #16]
    9b74:	b	996c <fputs@plt+0x8b4>
    9b78:	mov	r0, sp
    9b7c:	bl	9798 <fputs@plt+0x6e0>
    9b80:	b	996c <fputs@plt+0x8b4>
    9b84:	mov	r3, #3
    9b88:	str	fp, [sp, #12]
    9b8c:	str	r3, [sp, #16]
    9b90:	b	996c <fputs@plt+0x8b4>
    9b94:	sub	r3, r3, #1
    9b98:	cmp	r3, #4
    9b9c:	ldrls	pc, [pc, r3, lsl #2]
    9ba0:	b	99f8 <fputs@plt+0x940>
    9ba4:	andeq	r9, r0, r4, asr #25
    9ba8:	andeq	r9, r0, ip, asr ip
    9bac:	strdeq	r9, [r0], -r4
    9bb0:	ldrdeq	r9, [r0], -ip
    9bb4:	andeq	r9, r0, r8, asr #23
    9bb8:	cmp	r3, #243	; 0xf3
    9bbc:	bls	9e40 <fputs@plt+0xd88>
    9bc0:	cmp	r3, #244	; 0xf4
    9bc4:	beq	9e18 <fputs@plt+0xd60>
    9bc8:	mov	r0, sp
    9bcc:	bl	9798 <fputs@plt+0x6e0>
    9bd0:	mov	r3, #0
    9bd4:	str	r3, [sp, #12]
    9bd8:	b	99f8 <fputs@plt+0x940>
    9bdc:	ldr	r3, [sp, #16]
    9be0:	cmp	r3, #5
    9be4:	movne	r1, #5
    9be8:	strne	r1, [sp, #12]
    9bec:	bne	99f8 <fputs@plt+0x940>
    9bf0:	b	9bc8 <fputs@plt+0xb10>
    9bf4:	ldr	r3, [sp, #16]
    9bf8:	cmp	r3, #4
    9bfc:	strne	fp, [sp, #12]
    9c00:	bne	99f8 <fputs@plt+0x940>
    9c04:	ldrb	r3, [sp, #4]
    9c08:	cmp	r3, #240	; 0xf0
    9c0c:	bhi	9bb8 <fputs@plt+0xb00>
    9c10:	ldrb	r2, [sp, #5]
    9c14:	cmp	r2, #143	; 0x8f
    9c18:	bls	9bc8 <fputs@plt+0xb10>
    9c1c:	ldrb	r0, [sp, #6]
    9c20:	and	r3, r3, #7
    9c24:	ldrb	r1, [sp, #7]
    9c28:	eor	r2, r2, #128	; 0x80
    9c2c:	eor	r0, r0, #128	; 0x80
    9c30:	eor	r1, r1, #128	; 0x80
    9c34:	lsl	r0, r0, #6
    9c38:	orr	r3, r0, r3, lsl #18
    9c3c:	orr	r3, r3, r1
    9c40:	orr	r2, r3, r2, lsl #12
    9c44:	cmp	r2, #127	; 0x7f
    9c48:	bgt	9ca8 <fputs@plt+0xbf0>
    9c4c:	mov	r0, r2
    9c50:	ldr	r1, [r8]
    9c54:	bl	9070 <_IO_putc@plt>
    9c58:	b	9bd0 <fputs@plt+0xb18>
    9c5c:	ldr	r3, [sp, #16]
    9c60:	cmp	r3, #3
    9c64:	movne	r3, #3
    9c68:	strne	r3, [sp, #12]
    9c6c:	bne	99f8 <fputs@plt+0x940>
    9c70:	ldrb	r3, [sp, #4]
    9c74:	ldrb	r2, [sp, #5]
    9c78:	cmp	r3, #224	; 0xe0
    9c7c:	bhi	9c88 <fputs@plt+0xbd0>
    9c80:	cmp	r2, #159	; 0x9f
    9c84:	bls	9bc8 <fputs@plt+0xb10>
    9c88:	ldrb	r1, [sp, #6]
    9c8c:	and	r3, r3, #31
    9c90:	eor	r2, r2, #128	; 0x80
    9c94:	eor	r1, r1, #128	; 0x80
    9c98:	orr	r3, r1, r3, lsl #12
    9c9c:	orr	r2, r3, r2, lsl #6
    9ca0:	cmp	r2, #127	; 0x7f
    9ca4:	ble	9c4c <fputs@plt+0xb94>
    9ca8:	cmp	r2, #173	; 0xad
    9cac:	beq	9d04 <fputs@plt+0xc4c>
    9cb0:	movw	r1, #56568	; 0xdcf8
    9cb4:	mov	r0, #1
    9cb8:	movt	r1, #0
    9cbc:	bl	8e78 <__printf_chk@plt>
    9cc0:	b	9bd0 <fputs@plt+0xb18>
    9cc4:	ldr	r3, [sp, #16]
    9cc8:	cmp	r3, #2
    9ccc:	movne	r3, #2
    9cd0:	strne	r3, [sp, #12]
    9cd4:	bne	99f8 <fputs@plt+0x940>
    9cd8:	ldrb	r3, [sp, #4]
    9cdc:	cmp	r3, #193	; 0xc1
    9ce0:	bls	9bc8 <fputs@plt+0xb10>
    9ce4:	ldrb	r2, [sp, #5]
    9ce8:	and	r3, r3, #31
    9cec:	eor	r2, r2, #128	; 0x80
    9cf0:	orr	r2, r2, r3, lsl #6
    9cf4:	cmp	r2, #127	; 0x7f
    9cf8:	ble	9c4c <fputs@plt+0xb94>
    9cfc:	cmp	r2, #173	; 0xad
    9d00:	bne	9cb0 <fputs@plt+0xbf8>
    9d04:	mov	r0, #92	; 0x5c
    9d08:	ldr	r1, [r8]
    9d0c:	bl	9070 <_IO_putc@plt>
    9d10:	mov	r0, #37	; 0x25
    9d14:	ldr	r1, [r8]
    9d18:	bl	9070 <_IO_putc@plt>
    9d1c:	b	9bd0 <fputs@plt+0xb18>
    9d20:	mov	r0, r4
    9d24:	ldr	r1, [r8]
    9d28:	bl	9070 <_IO_putc@plt>
    9d2c:	b	99f8 <fputs@plt+0x940>
    9d30:	mov	r3, #2
    9d34:	str	r9, [sp, #12]
    9d38:	str	r3, [sp, #16]
    9d3c:	b	99f8 <fputs@plt+0x940>
    9d40:	mov	r0, sp
    9d44:	bl	9798 <fputs@plt+0x6e0>
    9d48:	b	99f8 <fputs@plt+0x940>
    9d4c:	mov	r3, #3
    9d50:	str	r9, [sp, #12]
    9d54:	str	r3, [sp, #16]
    9d58:	b	99f8 <fputs@plt+0x940>
    9d5c:	ldr	r3, [sp, #12]
    9d60:	cmp	r3, #0
    9d64:	beq	9d70 <fputs@plt+0xcb8>
    9d68:	mov	r0, sp
    9d6c:	bl	980c <fputs@plt+0x754>
    9d70:	ldr	r2, [sp, #28]
    9d74:	ldr	r3, [sl]
    9d78:	cmp	r2, r3
    9d7c:	bne	9e48 <fputs@plt+0xd90>
    9d80:	add	sp, sp, #36	; 0x24
    9d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d88:	mov	r3, #4
    9d8c:	str	fp, [sp, #12]
    9d90:	str	r3, [sp, #16]
    9d94:	b	996c <fputs@plt+0x8b4>
    9d98:	mov	r3, #5
    9d9c:	str	r9, [sp, #12]
    9da0:	str	r3, [sp, #16]
    9da4:	b	99f8 <fputs@plt+0x940>
    9da8:	ldrb	r3, [sp, #5]
    9dac:	cmp	r3, #143	; 0x8f
    9db0:	bls	99d0 <fputs@plt+0x918>
    9db4:	ldrb	r0, [sp, #6]
    9db8:	and	r2, r2, #7
    9dbc:	ldrb	r1, [sp, #7]
    9dc0:	eor	r3, r3, #128	; 0x80
    9dc4:	eor	r0, r0, #128	; 0x80
    9dc8:	eor	r1, r1, #128	; 0x80
    9dcc:	lsl	r0, r0, #6
    9dd0:	orr	r2, r0, r2, lsl #18
    9dd4:	orr	r2, r2, r1
    9dd8:	orr	r2, r2, r3, lsl #12
    9ddc:	cmp	r2, #127	; 0x7f
    9de0:	ble	9b48 <fputs@plt+0xa90>
    9de4:	cmp	r2, #173	; 0xad
    9de8:	bne	9afc <fputs@plt+0xa44>
    9dec:	mov	r0, #92	; 0x5c
    9df0:	ldr	r1, [r9]
    9df4:	bl	9070 <_IO_putc@plt>
    9df8:	mov	r0, #37	; 0x25
    9dfc:	ldr	r1, [r9]
    9e00:	bl	9070 <_IO_putc@plt>
    9e04:	b	99d8 <fputs@plt+0x920>
    9e08:	mov	r1, #5
    9e0c:	str	fp, [sp, #12]
    9e10:	str	r1, [sp, #16]
    9e14:	b	996c <fputs@plt+0x8b4>
    9e18:	ldrb	r2, [sp, #5]
    9e1c:	cmp	r2, #143	; 0x8f
    9e20:	bls	9c1c <fputs@plt+0xb64>
    9e24:	b	9bc8 <fputs@plt+0xb10>
    9e28:	ldrb	r3, [sp, #5]
    9e2c:	cmp	r3, #143	; 0x8f
    9e30:	bls	9db4 <fputs@plt+0xcfc>
    9e34:	b	99d0 <fputs@plt+0x918>
    9e38:	ldrb	r3, [sp, #5]
    9e3c:	b	9db4 <fputs@plt+0xcfc>
    9e40:	ldrb	r2, [sp, #5]
    9e44:	b	9c1c <fputs@plt+0xb64>
    9e48:	bl	8fc8 <__stack_chk_fail@plt>
    9e4c:	ldr	r3, [sp, #12]
    9e50:	cmp	r3, #0
    9e54:	beq	9e60 <fputs@plt+0xda8>
    9e58:	mov	r0, sp
    9e5c:	bl	980c <fputs@plt+0x754>
    9e60:	bl	8ecc <__cxa_end_cleanup@plt>
    9e64:	push	{r4, r5, r6, r7, r8, lr}
    9e68:	mov	r5, r0
    9e6c:	ldm	r1, {r4, r7}
    9e70:	cmp	r7, #0
    9e74:	ble	9edc <fputs@plt+0xe24>
    9e78:	movw	r6, #55580	; 0xd91c
    9e7c:	movw	r8, #28964	; 0x7124
    9e80:	add	r7, r4, r7
    9e84:	movt	r6, #0
    9e88:	movt	r8, #1
    9e8c:	b	9ea4 <fputs@plt+0xdec>
    9e90:	cmp	r3, #173	; 0xad
    9e94:	beq	9f30 <fputs@plt+0xe78>
    9e98:	bl	8e78 <__printf_chk@plt>
    9e9c:	cmp	r4, r7
    9ea0:	beq	9edc <fputs@plt+0xe24>
    9ea4:	ldrb	r3, [r4], #1
    9ea8:	movw	r1, #56568	; 0xdcf8
    9eac:	mov	r0, #1
    9eb0:	movt	r1, #0
    9eb4:	add	r3, r6, r3
    9eb8:	ldrb	r3, [r3, #576]	; 0x240
    9ebc:	cmp	r3, #127	; 0x7f
    9ec0:	mov	r2, r3
    9ec4:	bgt	9e90 <fputs@plt+0xdd8>
    9ec8:	mov	r0, r3
    9ecc:	ldr	r1, [r8]
    9ed0:	bl	9070 <_IO_putc@plt>
    9ed4:	cmp	r4, r7
    9ed8:	bne	9ea4 <fputs@plt+0xdec>
    9edc:	movw	r4, #55580	; 0xd91c
    9ee0:	movw	r6, #28964	; 0x7124
    9ee4:	movt	r4, #0
    9ee8:	movt	r6, #1
    9eec:	mov	r0, r5
    9ef0:	bl	8e84 <_IO_getc@plt>
    9ef4:	movw	r1, #56568	; 0xdcf8
    9ef8:	movt	r1, #0
    9efc:	mov	r3, r0
    9f00:	cmn	r3, #1
    9f04:	add	r2, r4, r0
    9f08:	mov	r0, #1
    9f0c:	popeq	{r4, r5, r6, r7, r8, pc}
    9f10:	ldrb	r3, [r2, #576]	; 0x240
    9f14:	cmp	r3, #127	; 0x7f
    9f18:	mov	r2, r3
    9f1c:	ble	9f4c <fputs@plt+0xe94>
    9f20:	cmp	r3, #173	; 0xad
    9f24:	beq	9f5c <fputs@plt+0xea4>
    9f28:	bl	8e78 <__printf_chk@plt>
    9f2c:	b	9eec <fputs@plt+0xe34>
    9f30:	ldr	r1, [r8]
    9f34:	mov	r0, #92	; 0x5c
    9f38:	bl	9070 <_IO_putc@plt>
    9f3c:	ldr	r1, [r8]
    9f40:	mov	r0, #37	; 0x25
    9f44:	bl	9070 <_IO_putc@plt>
    9f48:	b	9e9c <fputs@plt+0xde4>
    9f4c:	mov	r0, r3
    9f50:	ldr	r1, [r6]
    9f54:	bl	9070 <_IO_putc@plt>
    9f58:	b	9eec <fputs@plt+0xe34>
    9f5c:	ldr	r1, [r6]
    9f60:	mov	r0, #92	; 0x5c
    9f64:	bl	9070 <_IO_putc@plt>
    9f68:	ldr	r1, [r6]
    9f6c:	mov	r0, #37	; 0x25
    9f70:	bl	9070 <_IO_putc@plt>
    9f74:	b	9eec <fputs@plt+0xe34>
    9f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f7c:	movw	r4, #28952	; 0x7118
    9f80:	movt	r4, #1
    9f84:	sub	sp, sp, #40960	; 0xa000
    9f88:	sub	sp, sp, #68	; 0x44
    9f8c:	mov	r6, r2
    9f90:	ldr	r3, [r4]
    9f94:	add	ip, sp, #40960	; 0xa000
    9f98:	str	r4, [sp, #20]
    9f9c:	mov	r4, r1
    9fa0:	str	r0, [sp, #16]
    9fa4:	mov	r1, r2
    9fa8:	movw	r0, #56764	; 0xddbc
    9fac:	movt	r0, #0
    9fb0:	str	r3, [ip, #60]	; 0x3c
    9fb4:	bl	9064 <iconv_open@plt>
    9fb8:	cmn	r0, #1
    9fbc:	mov	r5, r0
    9fc0:	beq	a46c <fputs@plt+0x13b4>
    9fc4:	ldr	lr, [r4]
    9fc8:	add	r6, sp, #40960	; 0xa000
    9fcc:	ldr	r2, [r4, #4]
    9fd0:	add	r6, r6, #64	; 0x40
    9fd4:	movw	ip, #24540	; 0x5fdc
    9fd8:	movw	r0, #24544	; 0x5fe0
    9fdc:	movt	ip, #65535	; 0xffff
    9fe0:	movt	r0, #65535	; 0xffff
    9fe4:	movw	r1, #24548	; 0x5fe4
    9fe8:	movw	r3, #24552	; 0x5fe8
    9fec:	movt	r1, #65535	; 0xffff
    9ff0:	movt	r3, #65535	; 0xffff
    9ff4:	mov	r4, #32768	; 0x8000
    9ff8:	add	r7, sp, #60	; 0x3c
    9ffc:	str	r4, [r6, r0]
    a000:	movw	r8, #28964	; 0x7124
    a004:	str	r7, [r6, ip]
    a008:	mov	sl, r0
    a00c:	mov	r9, r1
    a010:	str	lr, [r6, r1]
    a014:	mov	r4, r3
    a018:	str	r2, [r6, r3]
    a01c:	movt	r8, #1
    a020:	b	a030 <fputs@plt+0xf78>
    a024:	add	r0, sp, #40960	; 0xa000
    a028:	add	r0, r0, #64	; 0x40
    a02c:	ldr	r2, [r0, r4]
    a030:	cmp	r2, #0
    a034:	beq	a0ec <fputs@plt+0x1034>
    a038:	add	r3, sp, #32
    a03c:	mov	r0, r5
    a040:	str	r3, [sp]
    a044:	add	r1, sp, #36	; 0x24
    a048:	add	r2, sp, #40	; 0x28
    a04c:	add	r3, sp, #28
    a050:	bl	8ef0 <iconv@plt>
    a054:	cmn	r0, #1
    a058:	bne	a024 <fputs@plt+0xf6c>
    a05c:	bl	90a0 <__errno_location@plt>
    a060:	ldr	r3, [r0]
    a064:	cmp	r3, #84	; 0x54
    a068:	beq	a0c4 <fputs@plt+0x100c>
    a06c:	cmp	r3, #7
    a070:	beq	a1f4 <fputs@plt+0x113c>
    a074:	cmp	r3, #22
    a078:	bne	a024 <fputs@plt+0xf6c>
    a07c:	add	r6, sp, #40960	; 0xa000
    a080:	movw	r3, #24552	; 0x5fe8
    a084:	add	r6, r6, #64	; 0x40
    a088:	movt	r3, #65535	; 0xffff
    a08c:	add	ip, sp, #32768	; 0x8000
    a090:	movw	r1, #24548	; 0x5fe4
    a094:	ldr	r4, [r6, r3]
    a098:	add	ip, ip, #64	; 0x40
    a09c:	sub	ip, ip, #4
    a0a0:	movt	r1, #65535	; 0xffff
    a0a4:	mov	r3, #8192	; 0x2000
    a0a8:	str	ip, [sp, #8]
    a0ac:	mov	r2, r4
    a0b0:	mov	r0, ip
    a0b4:	ldr	r1, [r6, r1]
    a0b8:	bl	8f14 <__memcpy_chk@plt>
    a0bc:	mov	r2, r4
    a0c0:	b	a0f8 <fputs@plt+0x1040>
    a0c4:	add	r0, sp, #40960	; 0xa000
    a0c8:	add	r0, r0, #64	; 0x40
    a0cc:	ldr	r2, [r0, r4]
    a0d0:	ldr	r3, [r0, r9]
    a0d4:	sub	r2, r2, #1
    a0d8:	str	r2, [r0, r4]
    a0dc:	cmp	r2, #0
    a0e0:	add	r3, r3, #1
    a0e4:	str	r3, [r0, r9]
    a0e8:	bne	a038 <fputs@plt+0xf80>
    a0ec:	add	r4, sp, #32768	; 0x8000
    a0f0:	add	r4, r4, #60	; 0x3c
    a0f4:	str	r4, [sp, #8]
    a0f8:	ldr	ip, [sp, #8]
    a0fc:	movw	r9, #24548	; 0x5fe4
    a100:	movw	r4, #24552	; 0x5fe8
    a104:	movw	sl, #24544	; 0x5fe0
    a108:	movw	r8, #28964	; 0x7124
    a10c:	movt	r9, #65535	; 0xffff
    a110:	movt	r4, #65535	; 0xffff
    a114:	movt	sl, #65535	; 0xffff
    a118:	add	r0, ip, r2
    a11c:	movt	r8, #1
    a120:	movw	r6, #24540	; 0x5fdc
    a124:	movt	r6, #65535	; 0xffff
    a128:	str	r6, [sp, #12]
    a12c:	rsb	r2, r2, #8192	; 0x2000
    a130:	mov	r1, #1
    a134:	ldr	r3, [sp, #16]
    a138:	bl	901c <fread@plt>
    a13c:	cmp	r0, #0
    a140:	beq	a3a8 <fputs@plt+0x12f0>
    a144:	add	r1, sp, #40960	; 0xa000
    a148:	ldr	r6, [sp, #8]
    a14c:	add	r1, r1, #64	; 0x40
    a150:	ldr	r2, [r1, r4]
    a154:	str	r6, [r1, r9]
    a158:	add	r2, r0, r2
    a15c:	str	r2, [r1, r4]
    a160:	b	a170 <fputs@plt+0x10b8>
    a164:	add	r3, sp, #40960	; 0xa000
    a168:	add	r3, r3, #64	; 0x40
    a16c:	ldr	r2, [r3, r4]
    a170:	cmp	r2, #0
    a174:	beq	a1e8 <fputs@plt+0x1130>
    a178:	add	r3, sp, #32
    a17c:	mov	r0, r5
    a180:	str	r3, [sp]
    a184:	add	r1, sp, #36	; 0x24
    a188:	add	r2, sp, #40	; 0x28
    a18c:	add	r3, sp, #28
    a190:	bl	8ef0 <iconv@plt>
    a194:	cmn	r0, #1
    a198:	bne	a164 <fputs@plt+0x10ac>
    a19c:	bl	90a0 <__errno_location@plt>
    a1a0:	ldr	r3, [r0]
    a1a4:	cmp	r3, #84	; 0x54
    a1a8:	beq	a2b4 <fputs@plt+0x11fc>
    a1ac:	cmp	r3, #7
    a1b0:	beq	a2d8 <fputs@plt+0x1220>
    a1b4:	cmp	r3, #22
    a1b8:	bne	a164 <fputs@plt+0x10ac>
    a1bc:	add	r0, sp, #40960	; 0xa000
    a1c0:	add	r2, sp, #40960	; 0xa000
    a1c4:	add	r0, r0, #64	; 0x40
    a1c8:	add	r2, r2, #64	; 0x40
    a1cc:	mov	r3, #8192	; 0x2000
    a1d0:	ldr	r6, [r0, r4]
    a1d4:	ldr	r1, [r2, r9]
    a1d8:	ldr	r0, [sp, #8]
    a1dc:	mov	r2, r6
    a1e0:	bl	904c <__memmove_chk@plt>
    a1e4:	mov	r2, r6
    a1e8:	ldr	r6, [sp, #8]
    a1ec:	add	r0, r6, r2
    a1f0:	b	a12c <fputs@plt+0x1074>
    a1f4:	add	r1, sp, #40960	; 0xa000
    a1f8:	add	r1, r1, #64	; 0x40
    a1fc:	ldr	r3, [r1, sl]
    a200:	rsb	r2, r3, #32768	; 0x8000
    a204:	add	r6, r7, r2
    a208:	cmp	r6, r7
    a20c:	bls	a49c <fputs@plt+0x13e4>
    a210:	mov	fp, r7
    a214:	b	a238 <fputs@plt+0x1180>
    a218:	cmp	r2, #173	; 0xad
    a21c:	beq	a298 <fputs@plt+0x11e0>
    a220:	movw	r1, #56568	; 0xdcf8
    a224:	mov	r0, #1
    a228:	movt	r1, #0
    a22c:	bl	8e78 <__printf_chk@plt>
    a230:	cmp	r6, fp
    a234:	bls	a258 <fputs@plt+0x11a0>
    a238:	ldr	r2, [fp], #4
    a23c:	cmp	r2, #127	; 0x7f
    a240:	bgt	a218 <fputs@plt+0x1160>
    a244:	mov	r0, r2
    a248:	ldr	r1, [r8]
    a24c:	bl	9070 <_IO_putc@plt>
    a250:	cmp	r6, fp
    a254:	bhi	a238 <fputs@plt+0x1180>
    a258:	add	r2, sp, #40960	; 0xa000
    a25c:	add	r2, r2, #64	; 0x40
    a260:	ldr	r6, [r2, sl]
    a264:	rsb	fp, r6, #32768	; 0x8000
    a268:	mov	r2, r6
    a26c:	mov	r3, #32768	; 0x8000
    a270:	mov	r0, r7
    a274:	ldr	r1, [sp, #28]
    a278:	bl	904c <__memmove_chk@plt>
    a27c:	add	r3, sp, #40960	; 0xa000
    a280:	add	r3, r3, #64	; 0x40
    a284:	add	r6, r7, r6
    a288:	str	r6, [sp, #28]
    a28c:	str	fp, [r3, sl]
    a290:	ldr	r2, [r3, r4]
    a294:	b	a030 <fputs@plt+0xf78>
    a298:	ldr	r1, [r8]
    a29c:	mov	r0, #92	; 0x5c
    a2a0:	bl	9070 <_IO_putc@plt>
    a2a4:	ldr	r1, [r8]
    a2a8:	mov	r0, #37	; 0x25
    a2ac:	bl	9070 <_IO_putc@plt>
    a2b0:	b	a230 <fputs@plt+0x1178>
    a2b4:	add	r0, sp, #40960	; 0xa000
    a2b8:	add	r0, r0, #64	; 0x40
    a2bc:	ldr	r2, [r0, r4]
    a2c0:	ldr	r3, [r0, r9]
    a2c4:	sub	r2, r2, #1
    a2c8:	str	r2, [r0, r4]
    a2cc:	add	r3, r3, #1
    a2d0:	str	r3, [r0, r9]
    a2d4:	b	a170 <fputs@plt+0x10b8>
    a2d8:	add	r1, sp, #40960	; 0xa000
    a2dc:	add	r1, r1, #64	; 0x40
    a2e0:	ldr	r3, [r1, sl]
    a2e4:	rsb	r2, r3, #32768	; 0x8000
    a2e8:	add	r6, r7, r2
    a2ec:	cmp	r6, r7
    a2f0:	bls	a460 <fputs@plt+0x13a8>
    a2f4:	mov	fp, r7
    a2f8:	b	a31c <fputs@plt+0x1264>
    a2fc:	cmp	r2, #173	; 0xad
    a300:	beq	a38c <fputs@plt+0x12d4>
    a304:	movw	r1, #56568	; 0xdcf8
    a308:	mov	r0, #1
    a30c:	movt	r1, #0
    a310:	bl	8e78 <__printf_chk@plt>
    a314:	cmp	r6, fp
    a318:	bls	a33c <fputs@plt+0x1284>
    a31c:	ldr	r2, [fp], #4
    a320:	cmp	r2, #127	; 0x7f
    a324:	bgt	a2fc <fputs@plt+0x1244>
    a328:	mov	r0, r2
    a32c:	ldr	r1, [r8]
    a330:	bl	9070 <_IO_putc@plt>
    a334:	cmp	r6, fp
    a338:	bhi	a31c <fputs@plt+0x1264>
    a33c:	add	r2, sp, #40960	; 0xa000
    a340:	add	r2, r2, #64	; 0x40
    a344:	ldr	r6, [r2, sl]
    a348:	rsb	fp, r6, #32768	; 0x8000
    a34c:	ldr	ip, [sp, #12]
    a350:	add	r2, sp, #40960	; 0xa000
    a354:	add	r2, r2, #64	; 0x40
    a358:	mov	r3, #32768	; 0x8000
    a35c:	mov	r0, r7
    a360:	ldr	r1, [r2, ip]
    a364:	mov	r2, r6
    a368:	bl	904c <__memmove_chk@plt>
    a36c:	add	r3, sp, #40960	; 0xa000
    a370:	ldr	ip, [sp, #12]
    a374:	add	r3, r3, #64	; 0x40
    a378:	add	r6, r7, r6
    a37c:	str	fp, [r3, sl]
    a380:	str	r6, [r3, ip]
    a384:	ldr	r2, [r3, r4]
    a388:	b	a170 <fputs@plt+0x10b8>
    a38c:	ldr	r1, [r8]
    a390:	mov	r0, #92	; 0x5c
    a394:	bl	9070 <_IO_putc@plt>
    a398:	ldr	r1, [r8]
    a39c:	mov	r0, #37	; 0x25
    a3a0:	bl	9070 <_IO_putc@plt>
    a3a4:	b	a314 <fputs@plt+0x125c>
    a3a8:	mov	r0, r5
    a3ac:	bl	8f2c <iconv_close@plt>
    a3b0:	add	ip, sp, #40960	; 0xa000
    a3b4:	movw	r3, #24544	; 0x5fe0
    a3b8:	add	ip, ip, #64	; 0x40
    a3bc:	movt	r3, #65535	; 0xffff
    a3c0:	ldr	r4, [ip, r3]
    a3c4:	rsb	r4, r4, #32768	; 0x8000
    a3c8:	add	r4, r7, r4
    a3cc:	cmp	r4, r7
    a3d0:	bls	a420 <fputs@plt+0x1368>
    a3d4:	movw	r5, #28964	; 0x7124
    a3d8:	movt	r5, #1
    a3dc:	b	a400 <fputs@plt+0x1348>
    a3e0:	cmp	r2, #173	; 0xad
    a3e4:	beq	a444 <fputs@plt+0x138c>
    a3e8:	movw	r1, #56568	; 0xdcf8
    a3ec:	mov	r0, #1
    a3f0:	movt	r1, #0
    a3f4:	bl	8e78 <__printf_chk@plt>
    a3f8:	cmp	r4, r7
    a3fc:	bls	a420 <fputs@plt+0x1368>
    a400:	ldr	r2, [r7], #4
    a404:	cmp	r2, #127	; 0x7f
    a408:	bgt	a3e0 <fputs@plt+0x1328>
    a40c:	mov	r0, r2
    a410:	ldr	r1, [r5]
    a414:	bl	9070 <_IO_putc@plt>
    a418:	cmp	r4, r7
    a41c:	bhi	a400 <fputs@plt+0x1348>
    a420:	ldr	r4, [sp, #20]
    a424:	add	r0, sp, #40960	; 0xa000
    a428:	ldr	r2, [r0, #60]	; 0x3c
    a42c:	ldr	r3, [r4]
    a430:	cmp	r2, r3
    a434:	bne	a4d4 <fputs@plt+0x141c>
    a438:	add	sp, sp, #40960	; 0xa000
    a43c:	add	sp, sp, #68	; 0x44
    a440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a444:	ldr	r1, [r5]
    a448:	mov	r0, #92	; 0x5c
    a44c:	bl	9070 <_IO_putc@plt>
    a450:	ldr	r1, [r5]
    a454:	mov	r0, #37	; 0x25
    a458:	bl	9070 <_IO_putc@plt>
    a45c:	b	a3f8 <fputs@plt+0x1340>
    a460:	mov	fp, r2
    a464:	mov	r6, r3
    a468:	b	a34c <fputs@plt+0x1294>
    a46c:	bl	90a0 <__errno_location@plt>
    a470:	ldr	r3, [r0]
    a474:	cmp	r3, #22
    a478:	beq	a4a8 <fputs@plt+0x13f0>
    a47c:	movw	r1, #29488	; 0x7330
    a480:	movt	r1, #1
    a484:	movw	r0, #56824	; 0xddf8
    a488:	movt	r0, #0
    a48c:	mov	r2, r1
    a490:	mov	r3, r1
    a494:	bl	b5fc <fputs@plt+0x2544>
    a498:	b	9fc4 <fputs@plt+0xf0c>
    a49c:	mov	fp, r2
    a4a0:	mov	r6, r3
    a4a4:	b	a268 <fputs@plt+0x11b0>
    a4a8:	mov	r1, r6
    a4ac:	add	r0, sp, #40	; 0x28
    a4b0:	bl	b0f8 <fputs@plt+0x2040>
    a4b4:	movw	r2, #29488	; 0x7330
    a4b8:	movt	r2, #1
    a4bc:	add	r1, sp, #40	; 0x28
    a4c0:	movw	r0, #56776	; 0xddc8
    a4c4:	movt	r0, #0
    a4c8:	mov	r3, r2
    a4cc:	bl	b59c <fputs@plt+0x24e4>
    a4d0:	b	a420 <fputs@plt+0x1368>
    a4d4:	bl	8fc8 <__stack_chk_fail@plt>
    a4d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a4dc:	movw	r9, #28952	; 0x7118
    a4e0:	movt	r9, #1
    a4e4:	sub	sp, sp, #12
    a4e8:	mov	r4, r0
    a4ec:	mov	sl, r1
    a4f0:	ldr	r3, [r9]
    a4f4:	mov	r7, r2
    a4f8:	mov	r5, #0
    a4fc:	str	r3, [sp, #4]
    a500:	mov	r0, r4
    a504:	bl	8e84 <_IO_getc@plt>
    a508:	cmn	r0, #1
    a50c:	beq	a520 <fputs@plt+0x1468>
    a510:	strb	r0, [sp, r5]
    a514:	add	r5, r5, #1
    a518:	cmp	r5, #4
    a51c:	bne	a500 <fputs@plt+0x1448>
    a520:	ldr	fp, [pc, #280]	; a640 <fputs@plt+0x1588>
    a524:	mov	r6, #0
    a528:	mov	r8, r6
    a52c:	ldr	r4, [fp, r6]
    a530:	cmp	r4, r5
    a534:	bgt	a558 <fputs@plt+0x14a0>
    a538:	ldr	r3, [pc, #256]	; a640 <fputs@plt+0x1588>
    a53c:	mov	r0, sp
    a540:	mov	r2, r4
    a544:	add	r1, r3, r6
    a548:	ldr	r1, [r1, #4]
    a54c:	bl	8e30 <memcmp@plt>
    a550:	cmp	r0, #0
    a554:	beq	a5d4 <fputs@plt+0x151c>
    a558:	add	r6, r6, #12
    a55c:	add	r8, r8, #1
    a560:	cmp	r6, #60	; 0x3c
    a564:	bne	a52c <fputs@plt+0x1474>
    a568:	mov	r4, #0
    a56c:	mov	sl, r4
    a570:	cmp	r4, r5
    a574:	movlt	r6, sp
    a578:	bge	a5b8 <fputs@plt+0x1500>
    a57c:	ldr	r3, [r7, #4]
    a580:	ldr	r2, [r7, #8]
    a584:	ldrb	r8, [r6, r4]
    a588:	cmp	r3, r2
    a58c:	blt	a59c <fputs@plt+0x14e4>
    a590:	mov	r0, r7
    a594:	bl	d1c8 <fputs@plt+0x4110>
    a598:	ldr	r3, [r7, #4]
    a59c:	add	r4, r4, #1
    a5a0:	ldr	r2, [r7]
    a5a4:	cmp	r4, r5
    a5a8:	add	r1, r3, #1
    a5ac:	str	r1, [r7, #4]
    a5b0:	strb	r8, [r2, r3]
    a5b4:	bne	a57c <fputs@plt+0x14c4>
    a5b8:	ldr	r2, [sp, #4]
    a5bc:	mov	r0, sl
    a5c0:	ldr	r3, [r9]
    a5c4:	cmp	r2, r3
    a5c8:	bne	a63c <fputs@plt+0x1584>
    a5cc:	add	sp, sp, #12
    a5d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a5d4:	cmp	r4, #0
    a5d8:	movgt	r6, r0
    a5dc:	ble	a634 <fputs@plt+0x157c>
    a5e0:	ldr	r3, [sl, #4]
    a5e4:	ldr	r2, [sl, #8]
    a5e8:	ldrb	fp, [sp, r6]
    a5ec:	cmp	r3, r2
    a5f0:	blt	a600 <fputs@plt+0x1548>
    a5f4:	mov	r0, sl
    a5f8:	bl	d1c8 <fputs@plt+0x4110>
    a5fc:	ldr	r3, [sl, #4]
    a600:	add	r6, r6, #1
    a604:	ldr	r2, [sl]
    a608:	cmp	r6, r4
    a60c:	add	r1, r3, #1
    a610:	str	r1, [sl, #4]
    a614:	strb	fp, [r2, r3]
    a618:	bne	a5e0 <fputs@plt+0x1528>
    a61c:	add	r8, r8, r8, lsl #1
    a620:	movw	r3, #55580	; 0xd91c
    a624:	movt	r3, #0
    a628:	add	r3, r3, r8, lsl #2
    a62c:	ldr	sl, [r3, #840]	; 0x348
    a630:	b	a570 <fputs@plt+0x14b8>
    a634:	mov	r4, r0
    a638:	b	a61c <fputs@plt+0x1564>
    a63c:	bl	8fc8 <__stack_chk_fail@plt>
    a640:	andeq	sp, r0, ip, asr ip
    a644:	ldr	ip, [r1, #4]
    a648:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a64c:	cmp	ip, #0
    a650:	mov	r5, r1
    a654:	mov	r6, r0
    a658:	mov	r7, #0
    a65c:	ble	a6b4 <fputs@plt+0x15fc>
    a660:	ldr	r4, [r1]
    a664:	mov	r2, r7
    a668:	mvn	r1, #0
    a66c:	ldrb	r3, [r4, r2]
    a670:	add	r2, r2, #1
    a674:	cmp	r3, #10
    a678:	movne	r0, #0
    a67c:	moveq	r0, #1
    a680:	cmp	r3, #10
    a684:	cmpne	r3, #13
    a688:	addeq	r7, r7, #1
    a68c:	cmp	r1, #13
    a690:	movne	r0, #0
    a694:	andeq	r0, r0, #1
    a698:	cmp	r0, #0
    a69c:	mov	r1, r3
    a6a0:	subne	r7, r7, #1
    a6a4:	cmp	r2, ip
    a6a8:	blt	a66c <fputs@plt+0x15b4>
    a6ac:	cmp	r7, #1
    a6b0:	bgt	a7e8 <fputs@plt+0x1730>
    a6b4:	movw	r8, #28976	; 0x7130
    a6b8:	movw	sl, #28968	; 0x7128
    a6bc:	movt	r8, #1
    a6c0:	movt	sl, #1
    a6c4:	mov	r9, #1
    a6c8:	b	a708 <fputs@plt+0x1650>
    a6cc:	ldr	r3, [r5, #4]
    a6d0:	uxtb	fp, r4
    a6d4:	ldr	r2, [r5, #8]
    a6d8:	cmp	r3, r2
    a6dc:	blt	a6ec <fputs@plt+0x1634>
    a6e0:	mov	r0, r5
    a6e4:	bl	d1c8 <fputs@plt+0x4110>
    a6e8:	ldr	r3, [r5, #4]
    a6ec:	ldr	r2, [r5]
    a6f0:	cmp	r4, #10
    a6f4:	cmpne	r4, #13
    a6f8:	add	r1, r3, #1
    a6fc:	str	r1, [r5, #4]
    a700:	strb	fp, [r2, r3]
    a704:	beq	a758 <fputs@plt+0x16a0>
    a708:	mov	r0, r6
    a70c:	bl	8e84 <_IO_getc@plt>
    a710:	cmn	r0, #1
    a714:	mov	r4, r0
    a718:	beq	a77c <fputs@plt+0x16c4>
    a71c:	cmp	r4, #0
    a720:	bne	a6cc <fputs@plt+0x1614>
    a724:	ldr	r3, [r8]
    a728:	cmp	r3, #0
    a72c:	beq	a6cc <fputs@plt+0x1614>
    a730:	cmp	r9, #0
    a734:	beq	a6cc <fputs@plt+0x1614>
    a738:	movw	r0, #56844	; 0xde0c
    a73c:	mov	r1, #1
    a740:	mov	r2, #90	; 0x5a
    a744:	ldr	r3, [sl]
    a748:	movt	r0, #0
    a74c:	mov	r9, r4
    a750:	bl	8f98 <fwrite@plt>
    a754:	b	a6cc <fputs@plt+0x1614>
    a758:	cmp	r4, #13
    a75c:	bne	a77c <fputs@plt+0x16c4>
    a760:	mov	r0, r6
    a764:	bl	8e84 <_IO_getc@plt>
    a768:	cmp	r0, #10
    a76c:	cmnne	r0, #1
    a770:	beq	a794 <fputs@plt+0x16dc>
    a774:	mov	r1, r6
    a778:	bl	8ee4 <ungetc@plt>
    a77c:	add	r7, r7, #1
    a780:	cmp	r7, #2
    a784:	bne	a708 <fputs@plt+0x1650>
    a788:	mov	r0, r5
    a78c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a790:	b	d640 <fputs@plt+0x4588>
    a794:	ldr	r2, [r5, #4]
    a798:	uxtb	r4, r0
    a79c:	ldr	r3, [r5, #8]
    a7a0:	cmp	r2, r3
    a7a4:	bge	a7c8 <fputs@plt+0x1710>
    a7a8:	ldr	r3, [r5]
    a7ac:	add	r1, r2, #1
    a7b0:	str	r1, [r5, #4]
    a7b4:	strb	r4, [r3, r2]
    a7b8:	add	r7, r7, #1
    a7bc:	cmp	r7, #2
    a7c0:	bne	a708 <fputs@plt+0x1650>
    a7c4:	b	a788 <fputs@plt+0x16d0>
    a7c8:	mov	r0, r5
    a7cc:	bl	d1c8 <fputs@plt+0x4110>
    a7d0:	ldr	r2, [r5, #4]
    a7d4:	ldr	r3, [r5]
    a7d8:	add	r1, r2, #1
    a7dc:	str	r1, [r5, #4]
    a7e0:	strb	r4, [r3, r2]
    a7e4:	b	a7b8 <fputs@plt+0x1700>
    a7e8:	mov	r0, #0
    a7ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a7f0:	cmp	r0, #0
    a7f4:	bxeq	lr
    a7f8:	ldrb	r3, [r0]
    a7fc:	cmp	r3, #0
    a800:	beq	a864 <fputs@plt+0x17ac>
    a804:	cmp	r3, #46	; 0x2e
    a808:	cmpne	r3, #39	; 0x27
    a80c:	movne	r2, #0
    a810:	moveq	r2, #1
    a814:	bne	a854 <fputs@plt+0x179c>
    a818:	ldrb	r3, [r0, #1]
    a81c:	add	r1, r0, #1
    a820:	cmp	r3, #9
    a824:	cmpne	r3, #32
    a828:	bne	a844 <fputs@plt+0x178c>
    a82c:	add	r2, r0, #2
    a830:	mov	r1, r2
    a834:	ldrb	r3, [r2], #1
    a838:	cmp	r3, #32
    a83c:	cmpne	r3, #9
    a840:	beq	a830 <fputs@plt+0x1778>
    a844:	cmp	r3, #92	; 0x5c
    a848:	beq	a86c <fputs@plt+0x17b4>
    a84c:	mov	r0, #0
    a850:	bx	lr
    a854:	cmp	r3, #92	; 0x5c
    a858:	beq	a884 <fputs@plt+0x17cc>
    a85c:	mov	r0, r2
    a860:	bx	lr
    a864:	mov	r0, r3
    a868:	bx	lr
    a86c:	ldrb	r0, [r1, #1]
    a870:	sub	r0, r0, #34	; 0x22
    a874:	cmp	r0, #1
    a878:	movhi	r0, #0
    a87c:	movls	r0, #1
    a880:	bx	lr
    a884:	ldrb	r0, [r0, #1]
    a888:	subs	r3, r0, #35	; 0x23
    a88c:	rsbs	r0, r3, #0
    a890:	adcs	r0, r0, r3
    a894:	bx	lr
    a898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a89c:	mov	r8, r0
    a8a0:	ldr	r9, [pc, #432]	; aa58 <fputs@plt+0x19a0>
    a8a4:	add	r7, r9, #100	; 0x64
    a8a8:	str	r9, [r1]
    a8ac:	str	r7, [r2]
    a8b0:	ldrb	r4, [r0]
    a8b4:	cmp	r4, #32
    a8b8:	cmpne	r4, #9
    a8bc:	bne	a8d8 <fputs@plt+0x1820>
    a8c0:	add	r3, r0, #1
    a8c4:	mov	r8, r3
    a8c8:	ldrb	r4, [r3], #1
    a8cc:	cmp	r4, #32
    a8d0:	cmpne	r4, #9
    a8d4:	beq	a8c4 <fputs@plt+0x180c>
    a8d8:	mov	r6, r8
    a8dc:	mov	r5, #0
    a8e0:	b	a90c <fputs@plt+0x1854>
    a8e4:	bl	8e90 <strchr@plt>
    a8e8:	add	r3, r8, r5
    a8ec:	cmp	r0, #0
    a8f0:	bne	a924 <fputs@plt+0x186c>
    a8f4:	cmp	r5, #98	; 0x62
    a8f8:	strb	r4, [r9, r5]
    a8fc:	add	r6, r6, #1
    a900:	add	r5, r5, #1
    a904:	beq	aa48 <fputs@plt+0x1990>
    a908:	ldrb	r4, [r3, #1]
    a90c:	cmp	r4, #0
    a910:	movw	r0, #56936	; 0xde68
    a914:	mov	r1, r4
    a918:	movt	r0, #0
    a91c:	mov	sl, r5
    a920:	bne	a8e4 <fputs@plt+0x182c>
    a924:	movw	r8, #28976	; 0x7130
    a928:	movt	r8, #1
    a92c:	add	sl, r8, sl
    a930:	mov	r3, #0
    a934:	strb	r3, [sl, #4]
    a938:	ldrb	r3, [r6]
    a93c:	sub	r2, r3, #58	; 0x3a
    a940:	cmp	r3, #0
    a944:	cmpne	r2, #1
    a948:	bls	a968 <fputs@plt+0x18b0>
    a94c:	add	r3, r6, #1
    a950:	mov	r6, r3
    a954:	ldrb	r2, [r3], #1
    a958:	sub	r1, r2, #58	; 0x3a
    a95c:	cmp	r2, #0
    a960:	cmpne	r1, #1
    a964:	bhi	a950 <fputs@plt+0x1898>
    a968:	mov	r3, #0
    a96c:	strb	r3, [r8, #104]	; 0x68
    a970:	ldrb	r3, [r6]
    a974:	cmp	r3, #0
    a978:	beq	aa40 <fputs@plt+0x1988>
    a97c:	cmp	r3, #59	; 0x3b
    a980:	beq	aa38 <fputs@plt+0x1980>
    a984:	ldrb	r4, [r6, #1]
    a988:	add	r9, r6, #1
    a98c:	cmp	r4, #32
    a990:	cmpne	r4, #9
    a994:	bne	a9b0 <fputs@plt+0x18f8>
    a998:	add	r6, r6, #2
    a99c:	mov	r9, r6
    a9a0:	ldrb	r4, [r6], #1
    a9a4:	cmp	r4, #32
    a9a8:	cmpne	r4, #9
    a9ac:	beq	a99c <fputs@plt+0x18e4>
    a9b0:	mov	r6, r9
    a9b4:	mov	r5, #0
    a9b8:	b	a9e4 <fputs@plt+0x192c>
    a9bc:	bl	8e90 <strchr@plt>
    a9c0:	add	r3, r9, r5
    a9c4:	cmp	r0, #0
    a9c8:	bne	a9fc <fputs@plt+0x1944>
    a9cc:	cmp	r5, #98	; 0x62
    a9d0:	strb	r4, [r7, r5]
    a9d4:	add	r6, r6, #1
    a9d8:	add	r5, r5, #1
    a9dc:	beq	aa50 <fputs@plt+0x1998>
    a9e0:	ldrb	r4, [r3, #1]
    a9e4:	cmp	r4, #0
    a9e8:	movw	r0, #56944	; 0xde70
    a9ec:	mov	r1, r4
    a9f0:	movt	r0, #0
    a9f4:	mov	sl, r5
    a9f8:	bne	a9bc <fputs@plt+0x1904>
    a9fc:	add	r8, r8, sl
    aa00:	mov	r3, #0
    aa04:	strb	r3, [r8, #104]	; 0x68
    aa08:	ldrb	r3, [r6]
    aa0c:	cmp	r3, #0
    aa10:	cmpne	r3, #59	; 0x3b
    aa14:	beq	aa30 <fputs@plt+0x1978>
    aa18:	add	r2, r6, #1
    aa1c:	mov	r6, r2
    aa20:	ldrb	r3, [r2], #1
    aa24:	cmp	r3, #59	; 0x3b
    aa28:	cmpne	r3, #0
    aa2c:	bne	aa1c <fputs@plt+0x1964>
    aa30:	cmp	r3, #59	; 0x3b
    aa34:	bne	aa40 <fputs@plt+0x1988>
    aa38:	add	r0, r6, #1
    aa3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    aa40:	mov	r0, #0
    aa44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    aa48:	mov	sl, #99	; 0x63
    aa4c:	b	a924 <fputs@plt+0x186c>
    aa50:	mov	sl, #99	; 0x63
    aa54:	b	a9fc <fputs@plt+0x1944>
    aa58:	andeq	r7, r1, r4, lsr r1
    aa5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    aa60:	movw	r8, #28952	; 0x7118
    aa64:	movt	r8, #1
    aa68:	sub	sp, sp, #16
    aa6c:	mov	r9, #10
    aa70:	mov	r7, #0
    aa74:	ldr	r3, [r8]
    aa78:	str	r3, [sp, #12]
    aa7c:	bl	a644 <fputs@plt+0x158c>
    aa80:	mov	r4, r0
    aa84:	mov	sl, r0
    aa88:	mov	r0, r4
    aa8c:	bl	a7f0 <fputs@plt+0x1738>
    aa90:	cmp	r0, #0
    aa94:	beq	ab7c <fputs@plt+0x1ac4>
    aa98:	mov	r0, r4
    aa9c:	mov	r1, #10
    aaa0:	bl	8e90 <strchr@plt>
    aaa4:	subs	r5, r0, #0
    aaa8:	beq	ab7c <fputs@plt+0x1ac4>
    aaac:	strb	r7, [r5]
    aab0:	mov	r0, r4
    aab4:	movw	r1, #56948	; 0xde74
    aab8:	movt	r1, #0
    aabc:	bl	8f74 <strstr@plt>
    aac0:	cmp	r0, #0
    aac4:	beq	ab90 <fputs@plt+0x1ad8>
    aac8:	add	r4, r0, #3
    aacc:	movw	r1, #56948	; 0xde74
    aad0:	movt	r1, #0
    aad4:	mov	r0, r4
    aad8:	bl	8f74 <strstr@plt>
    aadc:	strb	r9, [r5]
    aae0:	subs	r6, r0, #0
    aae4:	beq	ab68 <fputs@plt+0x1ab0>
    aae8:	cmp	r4, #0
    aaec:	strb	r7, [r6]
    aaf0:	bne	ab00 <fputs@plt+0x1a48>
    aaf4:	b	ab60 <fputs@plt+0x1aa8>
    aaf8:	cmp	r4, #0
    aafc:	beq	ab60 <fputs@plt+0x1aa8>
    ab00:	mov	r0, r4
    ab04:	add	r1, sp, #4
    ab08:	add	r2, sp, #8
    ab0c:	bl	a898 <fputs@plt+0x17e0>
    ab10:	movw	r1, #56952	; 0xde78
    ab14:	movt	r1, #0
    ab18:	mov	r4, r0
    ab1c:	ldr	r0, [sp, #4]
    ab20:	bl	8e9c <strcasecmp@plt>
    ab24:	cmp	r0, #0
    ab28:	bne	aaf8 <fputs@plt+0x1a40>
    ab2c:	cmp	sl, #0
    ab30:	mov	r3, #45	; 0x2d
    ab34:	strb	r3, [r6]
    ab38:	beq	ab44 <fputs@plt+0x1a8c>
    ab3c:	mov	r0, sl
    ab40:	bl	8ff8 <_ZdaPv@plt>
    ab44:	ldr	r0, [sp, #8]
    ab48:	ldr	r2, [sp, #12]
    ab4c:	ldr	r3, [r8]
    ab50:	cmp	r2, r3
    ab54:	bne	ab9c <fputs@plt+0x1ae4>
    ab58:	add	sp, sp, #16
    ab5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ab60:	mov	r3, #45	; 0x2d
    ab64:	strb	r3, [r6]
    ab68:	add	r4, r5, #1
    ab6c:	mov	r0, r4
    ab70:	bl	a7f0 <fputs@plt+0x1738>
    ab74:	cmp	r0, #0
    ab78:	bne	aa98 <fputs@plt+0x19e0>
    ab7c:	subs	r0, sl, #0
    ab80:	beq	ab48 <fputs@plt+0x1a90>
    ab84:	bl	8ff8 <_ZdaPv@plt>
    ab88:	mov	r0, #0
    ab8c:	b	ab48 <fputs@plt+0x1a90>
    ab90:	strb	r9, [r5]
    ab94:	add	r4, r5, #1
    ab98:	b	ab6c <fputs@plt+0x1ab4>
    ab9c:	bl	8fc8 <__stack_chk_fail@plt>
    aba0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    aba4:	movw	r6, #28952	; 0x7118
    aba8:	movt	r6, #1
    abac:	sub	sp, sp, #88	; 0x58
    abb0:	mov	r9, r0
    abb4:	add	r0, sp, #12
    abb8:	ldr	r3, [r6]
    abbc:	str	r3, [sp, #84]	; 0x54
    abc0:	bl	cf18 <fputs@plt+0x3e60>
    abc4:	add	r0, sp, #24
    abc8:	bl	cf18 <fputs@plt+0x3e60>
    abcc:	mov	r0, r9
    abd0:	movw	r1, #56960	; 0xde80
    abd4:	movt	r1, #0
    abd8:	movw	r4, #28976	; 0x7130
    abdc:	bl	9088 <strcmp@plt>
    abe0:	movt	r4, #1
    abe4:	ldr	r3, [r4]
    abe8:	cmp	r0, #0
    abec:	beq	ad40 <fputs@plt+0x1c88>
    abf0:	cmp	r3, #0
    abf4:	bne	ad70 <fputs@plt+0x1cb8>
    abf8:	movw	r1, #56964	; 0xde84
    abfc:	mov	r0, r9
    ac00:	movt	r1, #0
    ac04:	bl	8ec0 <fopen@plt>
    ac08:	subs	r7, r0, #0
    ac0c:	beq	af50 <fputs@plt+0x1e98>
    ac10:	mov	r0, r7
    ac14:	add	r1, sp, #12
    ac18:	add	r2, sp, #24
    ac1c:	bl	a4d8 <fputs@plt+0x1420>
    ac20:	ldrb	r3, [r4, #204]	; 0xcc
    ac24:	movw	ip, #28976	; 0x7130
    ac28:	mov	r8, r0
    ac2c:	movt	ip, #1
    ac30:	cmp	r3, #0
    ac34:	bne	ad58 <fputs@plt+0x1ca0>
    ac38:	cmp	r0, #0
    ac3c:	beq	af9c <fputs@plt+0x1ee4>
    ac40:	ldr	r3, [ip]
    ac44:	cmp	r3, #0
    ac48:	bne	af2c <fputs@plt+0x1e74>
    ac4c:	movw	r5, #28976	; 0x7130
    ac50:	movt	r5, #1
    ac54:	mov	r1, r8
    ac58:	mov	r2, #99	; 0x63
    ac5c:	add	r0, r5, #404	; 0x194
    ac60:	bl	8e54 <strncpy@plt>
    ac64:	add	r0, r5, #404	; 0x194
    ac68:	mov	r3, #0
    ac6c:	strb	r3, [r4, #503]	; 0x1f7
    ac70:	bl	95e0 <fputs@plt+0x528>
    ac74:	ldrb	r3, [r0]
    ac78:	mov	r8, r0
    ac7c:	cmp	r3, #0
    ac80:	beq	ad94 <fputs@plt+0x1cdc>
    ac84:	ldr	r3, [r5]
    ac88:	cmp	r3, #0
    ac8c:	bne	aea0 <fputs@plt+0x1de8>
    ac90:	ldr	r3, [r4, #504]	; 0x1f8
    ac94:	cmp	r3, #0
    ac98:	beq	ae88 <fputs@plt+0x1dd0>
    ac9c:	movw	r1, #57296	; 0xdfd0
    aca0:	mov	r0, r8
    aca4:	movt	r1, #0
    aca8:	bl	8e9c <strcasecmp@plt>
    acac:	cmp	r0, #0
    acb0:	beq	ae54 <fputs@plt+0x1d9c>
    acb4:	movw	r1, #57320	; 0xdfe8
    acb8:	mov	r0, r8
    acbc:	movt	r1, #0
    acc0:	bl	8e9c <strcasecmp@plt>
    acc4:	cmp	r0, #0
    acc8:	beq	aec4 <fputs@plt+0x1e0c>
    accc:	movw	r1, #57328	; 0xdff0
    acd0:	mov	r0, r8
    acd4:	movt	r1, #0
    acd8:	bl	8e9c <strcasecmp@plt>
    acdc:	ldr	r1, [sp, #12]
    ace0:	cmp	r0, #0
    ace4:	beq	adf0 <fputs@plt+0x1d38>
    ace8:	ldr	ip, [sp, #28]
    acec:	add	r4, sp, #64	; 0x40
    acf0:	ldr	r2, [sp, #16]
    acf4:	ldr	r3, [sp, #24]
    acf8:	mov	r0, r4
    acfc:	str	ip, [sp]
    ad00:	bl	d35c <fputs@plt+0x42a4>
    ad04:	mov	r0, r7
    ad08:	mov	r1, r4
    ad0c:	mov	r2, r8
    ad10:	bl	9f78 <fputs@plt+0xec0>
    ad14:	mov	r0, r4
    ad18:	bl	d07c <fputs@plt+0x3fc4>
    ad1c:	movw	r3, #28960	; 0x7120
    ad20:	movt	r3, #1
    ad24:	ldr	r3, [r3]
    ad28:	cmp	r7, r3
    ad2c:	beq	ad38 <fputs@plt+0x1c80>
    ad30:	mov	r0, r7
    ad34:	bl	8e60 <fclose@plt>
    ad38:	mov	r4, #1
    ad3c:	b	adc4 <fputs@plt+0x1d0c>
    ad40:	cmp	r3, #0
    ad44:	bne	ae24 <fputs@plt+0x1d6c>
    ad48:	movw	r3, #28960	; 0x7120
    ad4c:	movt	r3, #1
    ad50:	ldr	r7, [r3]
    ad54:	b	ac10 <fputs@plt+0x1b58>
    ad58:	ldr	r3, [ip]
    ad5c:	add	r5, ip, #204	; 0xcc
    ad60:	cmp	r3, #0
    ad64:	bne	aed4 <fputs@plt+0x1e1c>
    ad68:	mov	r8, r5
    ad6c:	b	ac4c <fputs@plt+0x1b94>
    ad70:	movw	r3, #28968	; 0x7128
    ad74:	movt	r3, #1
    ad78:	movw	r2, #56968	; 0xde88
    ad7c:	mov	r1, #1
    ad80:	ldr	r0, [r3]
    ad84:	movt	r2, #0
    ad88:	mov	r3, r9
    ad8c:	bl	8fd4 <__fprintf_chk@plt>
    ad90:	b	abf8 <fputs@plt+0x1b40>
    ad94:	add	r4, sp, #64	; 0x40
    ad98:	add	r1, r5, #404	; 0x194
    ad9c:	mov	r0, r4
    ada0:	bl	b0f8 <fputs@plt+0x2040>
    ada4:	movw	r2, #29488	; 0x7330
    ada8:	movt	r2, #1
    adac:	movw	r0, #57216	; 0xdf80
    adb0:	mov	r1, r4
    adb4:	mov	r3, r2
    adb8:	movt	r0, #0
    adbc:	bl	b59c <fputs@plt+0x24e4>
    adc0:	mov	r4, #0
    adc4:	add	r0, sp, #24
    adc8:	bl	d07c <fputs@plt+0x3fc4>
    adcc:	add	r0, sp, #12
    add0:	bl	d07c <fputs@plt+0x3fc4>
    add4:	ldr	r2, [sp, #84]	; 0x54
    add8:	ldr	r3, [r6]
    addc:	mov	r0, r4
    ade0:	cmp	r2, r3
    ade4:	bne	b014 <fputs@plt+0x1f5c>
    ade8:	add	sp, sp, #88	; 0x58
    adec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    adf0:	ldr	ip, [sp, #28]
    adf4:	add	r5, sp, #48	; 0x30
    adf8:	ldr	r2, [sp, #16]
    adfc:	ldr	r3, [sp, #24]
    ae00:	mov	r0, r5
    ae04:	str	ip, [sp]
    ae08:	bl	d35c <fputs@plt+0x42a4>
    ae0c:	mov	r0, r7
    ae10:	mov	r1, r5
    ae14:	bl	9e64 <fputs@plt+0xdac>
    ae18:	mov	r0, r5
    ae1c:	bl	d07c <fputs@plt+0x3fc4>
    ae20:	b	ad1c <fputs@plt+0x1c64>
    ae24:	movw	r3, #28968	; 0x7128
    ae28:	movt	r3, #1
    ae2c:	movw	r0, #57000	; 0xdea8
    ae30:	mov	r1, #1
    ae34:	ldr	r3, [r3]
    ae38:	movt	r0, #0
    ae3c:	mov	r2, #16
    ae40:	bl	8f98 <fwrite@plt>
    ae44:	movw	r3, #28960	; 0x7120
    ae48:	movt	r3, #1
    ae4c:	ldr	r7, [r3]
    ae50:	b	ac10 <fputs@plt+0x1b58>
    ae54:	ldr	ip, [sp, #28]
    ae58:	add	r0, sp, #36	; 0x24
    ae5c:	ldr	r1, [sp, #12]
    ae60:	ldr	r2, [sp, #16]
    ae64:	ldr	r3, [sp, #24]
    ae68:	str	ip, [sp]
    ae6c:	bl	d35c <fputs@plt+0x42a4>
    ae70:	mov	r0, r7
    ae74:	add	r1, sp, #36	; 0x24
    ae78:	bl	9694 <fputs@plt+0x5dc>
    ae7c:	add	r0, sp, #36	; 0x24
    ae80:	bl	d07c <fputs@plt+0x3fc4>
    ae84:	b	ad1c <fputs@plt+0x1c64>
    ae88:	movw	r1, #57308	; 0xdfdc
    ae8c:	mov	r2, r9
    ae90:	mov	r0, #1
    ae94:	movt	r1, #0
    ae98:	bl	8e78 <__printf_chk@plt>
    ae9c:	b	ac9c <fputs@plt+0x1be4>
    aea0:	movw	r3, #28968	; 0x7128
    aea4:	movt	r3, #1
    aea8:	movw	r2, #57272	; 0xdfb8
    aeac:	mov	r1, #1
    aeb0:	ldr	r0, [r3]
    aeb4:	movt	r2, #0
    aeb8:	mov	r3, r8
    aebc:	bl	8fd4 <__fprintf_chk@plt>
    aec0:	b	ac90 <fputs@plt+0x1bd8>
    aec4:	mov	r0, r7
    aec8:	add	r1, sp, #24
    aecc:	bl	98a0 <fputs@plt+0x7e8>
    aed0:	b	ad1c <fputs@plt+0x1c64>
    aed4:	movw	sl, #28968	; 0x7128
    aed8:	movt	sl, #1
    aedc:	movw	r2, #57020	; 0xdebc
    aee0:	mov	r3, r5
    aee4:	movt	r2, #0
    aee8:	ldr	r0, [sl]
    aeec:	mov	r1, #1
    aef0:	bl	8fd4 <__fprintf_chk@plt>
    aef4:	cmp	r8, #0
    aef8:	beq	ad68 <fputs@plt+0x1cb0>
    aefc:	mov	r0, r8
    af00:	mov	r1, r5
    af04:	bl	9088 <strcmp@plt>
    af08:	cmp	r0, #0
    af0c:	beq	ad68 <fputs@plt+0x1cb0>
    af10:	movw	r2, #57080	; 0xdef8
    af14:	ldr	r0, [sl]
    af18:	mov	r3, r8
    af1c:	mov	r1, #1
    af20:	movt	r2, #0
    af24:	bl	8fd4 <__fprintf_chk@plt>
    af28:	b	ad68 <fputs@plt+0x1cb0>
    af2c:	movw	r3, #28968	; 0x7128
    af30:	movt	r3, #1
    af34:	movw	r0, #57132	; 0xdf2c
    af38:	mov	r1, #1
    af3c:	ldr	r3, [r3]
    af40:	movt	r0, #0
    af44:	mov	r2, #38	; 0x26
    af48:	bl	8f98 <fwrite@plt>
    af4c:	b	ac4c <fputs@plt+0x1b94>
    af50:	add	r5, sp, #48	; 0x30
    af54:	mov	r1, r9
    af58:	mov	r0, r5
    af5c:	bl	b0f8 <fputs@plt+0x2040>
    af60:	bl	90a0 <__errno_location@plt>
    af64:	add	r4, sp, #64	; 0x40
    af68:	ldr	r0, [r0]
    af6c:	bl	8e18 <strerror@plt>
    af70:	mov	r1, r0
    af74:	mov	r0, r4
    af78:	bl	b0f8 <fputs@plt+0x2040>
    af7c:	movw	r0, #56980	; 0xde94
    af80:	movw	r3, #29488	; 0x7330
    af84:	mov	r1, r5
    af88:	mov	r2, r4
    af8c:	movt	r0, #0
    af90:	movt	r3, #1
    af94:	bl	b59c <fputs@plt+0x24e4>
    af98:	b	adc0 <fputs@plt+0x1d08>
    af9c:	mov	r0, r7
    afa0:	add	r1, sp, #24
    afa4:	bl	aa5c <fputs@plt+0x19a4>
    afa8:	subs	r8, r0, #0
    afac:	ldr	r3, [r4]
    afb0:	beq	afe0 <fputs@plt+0x1f28>
    afb4:	cmp	r3, #0
    afb8:	beq	ac4c <fputs@plt+0x1b94>
    afbc:	movw	r3, #28968	; 0x7128
    afc0:	movt	r3, #1
    afc4:	movw	r2, #57192	; 0xdf68
    afc8:	mov	r1, #1
    afcc:	ldr	r0, [r3]
    afd0:	movt	r2, #0
    afd4:	mov	r3, r8
    afd8:	bl	8fd4 <__fprintf_chk@plt>
    afdc:	b	ac4c <fputs@plt+0x1b94>
    afe0:	cmp	r3, #0
    afe4:	bne	aff0 <fputs@plt+0x1f38>
    afe8:	ldr	r8, [pc, #100]	; b054 <fputs@plt+0x1f9c>
    afec:	b	ac4c <fputs@plt+0x1b94>
    aff0:	movw	r3, #28968	; 0x7128
    aff4:	movt	r3, #1
    aff8:	movw	r0, #57172	; 0xdf54
    affc:	mov	r1, #1
    b000:	ldr	r3, [r3]
    b004:	movt	r0, #0
    b008:	mov	r2, #19
    b00c:	bl	8f98 <fwrite@plt>
    b010:	b	afe8 <fputs@plt+0x1f30>
    b014:	bl	8fc8 <__stack_chk_fail@plt>
    b018:	add	r0, sp, #36	; 0x24
    b01c:	bl	d07c <fputs@plt+0x3fc4>
    b020:	add	r0, sp, #24
    b024:	bl	d07c <fputs@plt+0x3fc4>
    b028:	add	r0, sp, #12
    b02c:	bl	d07c <fputs@plt+0x3fc4>
    b030:	bl	8ecc <__cxa_end_cleanup@plt>
    b034:	mov	r0, r5
    b038:	bl	d07c <fputs@plt+0x3fc4>
    b03c:	b	b020 <fputs@plt+0x1f68>
    b040:	mov	r0, r4
    b044:	bl	d07c <fputs@plt+0x3fc4>
    b048:	b	b020 <fputs@plt+0x1f68>
    b04c:	b	b020 <fputs@plt+0x1f68>
    b050:	b	b028 <fputs@plt+0x1f70>
    b054:	andeq	r7, r1, r0, ror #4
    b058:	ldr	ip, [pc, #44]	; b08c <fputs@plt+0x1fd4>
    b05c:	movw	r3, #29608	; 0x73a8
    b060:	push	{lr}		; (str lr, [sp, #-4]!)
    b064:	movt	r3, #1
    b068:	sub	sp, sp, #12
    b06c:	mov	r1, #1
    b070:	ldr	r3, [r3]
    b074:	movw	r2, #57336	; 0xdff8
    b078:	str	ip, [sp]
    b07c:	movt	r2, #0
    b080:	bl	8fd4 <__fprintf_chk@plt>
    b084:	add	sp, sp, #12
    b088:	pop	{pc}		; (ldr pc, [sp], #4)
    b08c:	andeq	r7, r1, r0, ror #4
    b090:	movw	r2, #29608	; 0x73a8
    b094:	movt	r2, #1
    b098:	push	{r4, r5, r6, lr}
    b09c:	movw	r4, #28968	; 0x7128
    b0a0:	ldr	r3, [r2]
    b0a4:	sub	sp, sp, #8
    b0a8:	mov	r6, r0
    b0ac:	mov	r5, r1
    b0b0:	cmp	r3, #0
    b0b4:	movt	r4, #1
    b0b8:	beq	b0d0 <fputs@plt+0x2018>
    b0bc:	movw	r2, #58812	; 0xe5bc
    b0c0:	ldr	r0, [r4]
    b0c4:	movt	r2, #0
    b0c8:	mov	r1, #1
    b0cc:	bl	8fd4 <__fprintf_chk@plt>
    b0d0:	mov	r3, r6
    b0d4:	mov	r1, #1
    b0d8:	ldr	r0, [r4]
    b0dc:	movw	r2, #58820	; 0xe5c4
    b0e0:	str	r5, [sp]
    b0e4:	movt	r2, #0
    b0e8:	bl	8fd4 <__fprintf_chk@plt>
    b0ec:	ldr	r0, [r4]
    b0f0:	bl	8f20 <fflush@plt>
    b0f4:	bl	8e24 <abort@plt>
    b0f8:	cmp	r1, #0
    b0fc:	movw	r3, #58864	; 0xe5f0
    b100:	movt	r3, #0
    b104:	mov	ip, #1
    b108:	str	ip, [r0]
    b10c:	moveq	r1, r3
    b110:	str	r1, [r0, #8]
    b114:	bx	lr
    b118:	mov	r2, #0
    b11c:	str	r2, [r0]
    b120:	bx	lr
    b124:	mov	r2, #3
    b128:	str	r1, [r0, #8]
    b12c:	str	r2, [r0]
    b130:	bx	lr
    b134:	mov	r2, #4
    b138:	str	r1, [r0, #8]
    b13c:	str	r2, [r0]
    b140:	bx	lr
    b144:	mov	r2, #2
    b148:	strb	r1, [r0, #8]
    b14c:	str	r2, [r0]
    b150:	bx	lr
    b154:	mov	r2, #2
    b158:	strb	r1, [r0, #8]
    b15c:	str	r2, [r0]
    b160:	bx	lr
    b164:	mov	r2, #5
    b168:	vstr	d0, [r0, #8]
    b16c:	str	r2, [r0]
    b170:	bx	lr
    b174:	ldr	r0, [r0]
    b178:	rsbs	r0, r0, #1
    b17c:	movcc	r0, #0
    b180:	bx	lr
    b184:	ldr	r3, [r0]
    b188:	push	{r4, r5, lr}
    b18c:	sub	r3, r3, #1
    b190:	sub	sp, sp, #12
    b194:	cmp	r3, #4
    b198:	ldrls	pc, [pc, r3, lsl #2]
    b19c:	b	b1d8 <fputs@plt+0x2120>
    b1a0:	andeq	fp, r0, r0, lsl #4
    b1a4:	andeq	fp, r0, ip, lsl r2
    b1a8:	andeq	fp, r0, r8, lsr r2
    b1ac:	andeq	fp, r0, r0, ror #3
    b1b0:			; <UNDEFINED> instruction: 0x0000b1b4
    b1b4:	ldrd	r4, [r0, #8]
    b1b8:	movw	r3, #28968	; 0x7128
    b1bc:	movt	r3, #1
    b1c0:	movw	r2, #58872	; 0xe5f8
    b1c4:	mov	r1, #1
    b1c8:	movt	r2, #0
    b1cc:	ldr	r0, [r3]
    b1d0:	strd	r4, [sp]
    b1d4:	bl	8fd4 <__fprintf_chk@plt>
    b1d8:	add	sp, sp, #12
    b1dc:	pop	{r4, r5, pc}
    b1e0:	ldr	r0, [r0, #8]
    b1e4:	bl	c5fc <fputs@plt+0x3544>
    b1e8:	movw	r3, #28968	; 0x7128
    b1ec:	movt	r3, #1
    b1f0:	ldr	r1, [r3]
    b1f4:	add	sp, sp, #12
    b1f8:	pop	{r4, r5, lr}
    b1fc:	b	90b8 <fputs@plt>
    b200:	movw	r3, #28968	; 0x7128
    b204:	movt	r3, #1
    b208:	ldr	r0, [r0, #8]
    b20c:	ldr	r1, [r3]
    b210:	add	sp, sp, #12
    b214:	pop	{r4, r5, lr}
    b218:	b	90b8 <fputs@plt>
    b21c:	movw	r3, #28968	; 0x7128
    b220:	movt	r3, #1
    b224:	ldrb	r0, [r0, #8]
    b228:	ldr	r1, [r3]
    b22c:	add	sp, sp, #12
    b230:	pop	{r4, r5, lr}
    b234:	b	9070 <_IO_putc@plt>
    b238:	ldr	r0, [r0, #8]
    b23c:	bl	c574 <fputs@plt+0x34bc>
    b240:	movw	r3, #28968	; 0x7128
    b244:	movt	r3, #1
    b248:	ldr	r1, [r3]
    b24c:	add	sp, sp, #12
    b250:	pop	{r4, r5, lr}
    b254:	b	90b8 <fputs@plt>
    b258:	push	{r4, r5, r6, r7, r8, lr}
    b25c:	subs	r4, r0, #0
    b260:	mov	r6, r1
    b264:	mov	r7, r2
    b268:	mov	r8, r3
    b26c:	beq	b3a4 <fputs@plt+0x22ec>
    b270:	movw	r5, #28968	; 0x7128
    b274:	movt	r5, #1
    b278:	ldrb	r0, [r4]
    b27c:	cmp	r0, #0
    b280:	beq	b300 <fputs@plt+0x2248>
    b284:	cmp	r0, #37	; 0x25
    b288:	bne	b358 <fputs@plt+0x22a0>
    b28c:	ldrb	ip, [r4, #1]
    b290:	add	r4, r4, #2
    b294:	sub	ip, ip, #37	; 0x25
    b298:	cmp	ip, #14
    b29c:	ldrls	pc, [pc, ip, lsl #2]
    b2a0:	b	b344 <fputs@plt+0x228c>
    b2a4:	andeq	fp, r0, r4, lsr r3
    b2a8:	andeq	fp, r0, r4, asr #6
    b2ac:	andeq	fp, r0, r4, asr #6
    b2b0:	andeq	fp, r0, r4, asr #6
    b2b4:	andeq	fp, r0, r4, asr #6
    b2b8:	andeq	fp, r0, r4, asr #6
    b2bc:	andeq	fp, r0, r4, asr #6
    b2c0:	andeq	fp, r0, r4, asr #6
    b2c4:	andeq	fp, r0, r4, asr #6
    b2c8:	andeq	fp, r0, r4, asr #6
    b2cc:	andeq	fp, r0, r4, asr #6
    b2d0:	andeq	fp, r0, r4, asr #6
    b2d4:	andeq	fp, r0, ip, lsl r3
    b2d8:	andeq	fp, r0, r4, lsl #6
    b2dc:	andeq	fp, r0, r0, ror #5
    b2e0:	ldr	r3, [r8]
    b2e4:	cmp	r3, #0
    b2e8:	beq	b368 <fputs@plt+0x22b0>
    b2ec:	mov	r0, r8
    b2f0:	bl	b184 <fputs@plt+0x20cc>
    b2f4:	ldrb	r0, [r4]
    b2f8:	cmp	r0, #0
    b2fc:	bne	b284 <fputs@plt+0x21cc>
    b300:	pop	{r4, r5, r6, r7, r8, pc}
    b304:	ldr	r3, [r7]
    b308:	cmp	r3, #0
    b30c:	beq	b390 <fputs@plt+0x22d8>
    b310:	mov	r0, r7
    b314:	bl	b184 <fputs@plt+0x20cc>
    b318:	b	b278 <fputs@plt+0x21c0>
    b31c:	ldr	r3, [r6]
    b320:	cmp	r3, #0
    b324:	beq	b37c <fputs@plt+0x22c4>
    b328:	mov	r0, r6
    b32c:	bl	b184 <fputs@plt+0x20cc>
    b330:	b	b278 <fputs@plt+0x21c0>
    b334:	ldr	r1, [r5]
    b338:	mov	r0, #37	; 0x25
    b33c:	bl	8fe0 <fputc@plt>
    b340:	b	b278 <fputs@plt+0x21c0>
    b344:	movw	r1, #58876	; 0xe5fc
    b348:	mov	r0, #121	; 0x79
    b34c:	movt	r1, #0
    b350:	bl	b090 <fputs@plt+0x1fd8>
    b354:	b	b278 <fputs@plt+0x21c0>
    b358:	ldr	r1, [r5]
    b35c:	add	r4, r4, #1
    b360:	bl	9070 <_IO_putc@plt>
    b364:	b	b278 <fputs@plt+0x21c0>
    b368:	movw	r1, #58876	; 0xe5fc
    b36c:	mov	r0, #117	; 0x75
    b370:	movt	r1, #0
    b374:	bl	b090 <fputs@plt+0x1fd8>
    b378:	b	b2ec <fputs@plt+0x2234>
    b37c:	movw	r1, #58876	; 0xe5fc
    b380:	mov	r0, #109	; 0x6d
    b384:	movt	r1, #0
    b388:	bl	b090 <fputs@plt+0x1fd8>
    b38c:	b	b328 <fputs@plt+0x2270>
    b390:	movw	r1, #58876	; 0xe5fc
    b394:	mov	r0, #113	; 0x71
    b398:	movt	r1, #0
    b39c:	bl	b090 <fputs@plt+0x1fd8>
    b3a0:	b	b310 <fputs@plt+0x2258>
    b3a4:	movw	r1, #58876	; 0xe5fc
    b3a8:	mov	r0, #99	; 0x63
    b3ac:	movt	r1, #0
    b3b0:	bl	b090 <fputs@plt+0x1fd8>
    b3b4:	b	b270 <fputs@plt+0x21b8>
    b3b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b3bc:	movw	ip, #29608	; 0x73a8
    b3c0:	sub	sp, sp, #20
    b3c4:	movt	ip, #1
    b3c8:	movw	r4, #28968	; 0x7128
    b3cc:	mov	r5, r0
    b3d0:	str	r1, [sp, #12]
    b3d4:	mov	sl, r2
    b3d8:	ldr	r1, [ip]
    b3dc:	mov	r6, r3
    b3e0:	ldr	fp, [sp, #56]	; 0x38
    b3e4:	movt	r4, #1
    b3e8:	cmp	r1, #0
    b3ec:	ldr	r9, [sp, #60]	; 0x3c
    b3f0:	ldr	r8, [sp, #64]	; 0x40
    b3f4:	ldr	r7, [sp, #68]	; 0x44
    b3f8:	beq	b418 <fputs@plt+0x2360>
    b3fc:	mov	r3, r1
    b400:	movw	r2, #58908	; 0xe61c
    b404:	mov	r1, #1
    b408:	ldr	r0, [r4]
    b40c:	movt	r2, #0
    b410:	bl	8fd4 <__fprintf_chk@plt>
    b414:	mov	r1, #1
    b418:	mvn	r3, sl
    b41c:	cmp	r5, #0
    b420:	lsr	r3, r3, #31
    b424:	moveq	r3, #0
    b428:	cmp	r3, #0
    b42c:	beq	b480 <fputs@plt+0x23c8>
    b430:	mov	r0, r5
    b434:	movw	r1, #56960	; 0xde80
    b438:	movt	r1, #0
    b43c:	bl	9088 <strcmp@plt>
    b440:	movw	r3, #58888	; 0xe608
    b444:	ldr	r2, [sp, #12]
    b448:	movt	r3, #0
    b44c:	cmp	r0, #0
    b450:	ldr	r0, [r4]
    b454:	moveq	r5, r3
    b458:	cmp	r2, #0
    b45c:	mov	r3, r5
    b460:	beq	b514 <fputs@plt+0x245c>
    b464:	str	r2, [sp]
    b468:	mov	r1, #1
    b46c:	movw	r2, #58912	; 0xe620
    b470:	str	sl, [sp, #4]
    b474:	movt	r2, #0
    b478:	bl	8fd4 <__fprintf_chk@plt>
    b47c:	mov	r1, #1
    b480:	cmp	r6, #0
    b484:	beq	b4f8 <fputs@plt+0x2440>
    b488:	cmp	r6, #2
    b48c:	beq	b4d0 <fputs@plt+0x2418>
    b490:	cmp	r1, #0
    b494:	bne	b4e8 <fputs@plt+0x2430>
    b498:	mov	r2, r8
    b49c:	mov	r3, r7
    b4a0:	mov	r0, fp
    b4a4:	mov	r1, r9
    b4a8:	bl	b258 <fputs@plt+0x21a0>
    b4ac:	ldr	r1, [r4]
    b4b0:	mov	r0, #10
    b4b4:	bl	8fe0 <fputc@plt>
    b4b8:	ldr	r0, [r4]
    b4bc:	bl	8f20 <fflush@plt>
    b4c0:	cmp	r6, #2
    b4c4:	beq	b530 <fputs@plt+0x2478>
    b4c8:	add	sp, sp, #20
    b4cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b4d0:	movw	r0, #58932	; 0xe634
    b4d4:	mov	r1, #1
    b4d8:	movt	r0, #0
    b4dc:	mov	r2, #12
    b4e0:	ldr	r3, [r4]
    b4e4:	bl	8f98 <fwrite@plt>
    b4e8:	ldr	r1, [r4]
    b4ec:	mov	r0, #32
    b4f0:	bl	8fe0 <fputc@plt>
    b4f4:	b	b498 <fputs@plt+0x23e0>
    b4f8:	movw	r0, #58948	; 0xe644
    b4fc:	mov	r1, #1
    b500:	mov	r2, #8
    b504:	ldr	r3, [r4]
    b508:	movt	r0, #0
    b50c:	bl	8f98 <fwrite@plt>
    b510:	b	b4e8 <fputs@plt+0x2430>
    b514:	mov	r1, #1
    b518:	str	sl, [sp]
    b51c:	movw	r2, #58924	; 0xe62c
    b520:	movt	r2, #0
    b524:	bl	8fd4 <__fprintf_chk@plt>
    b528:	mov	r1, #1
    b52c:	b	b480 <fputs@plt+0x23c8>
    b530:	add	sp, sp, #20
    b534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b538:	b	b6e0 <fputs@plt+0x2628>
    b53c:	push	{r4, r5, r6, lr}
    b540:	movw	ip, #29600	; 0x73a0
    b544:	sub	sp, sp, #16
    b548:	movt	ip, #1
    b54c:	movw	r4, #29508	; 0x7344
    b550:	movw	lr, #29504	; 0x7340
    b554:	movt	r4, #1
    b558:	movt	lr, #1
    b55c:	ldr	r6, [r4]
    b560:	mov	r4, r0
    b564:	ldr	r5, [lr]
    b568:	ldr	lr, [ip]
    b56c:	ldr	ip, [sp, #32]
    b570:	mov	r0, r6
    b574:	str	r1, [sp]
    b578:	mov	r1, r5
    b57c:	str	r2, [sp, #4]
    b580:	mov	r2, lr
    b584:	str	r3, [sp, #8]
    b588:	mov	r3, r4
    b58c:	str	ip, [sp, #12]
    b590:	bl	b3b8 <fputs@plt+0x2300>
    b594:	add	sp, sp, #16
    b598:	pop	{r4, r5, r6, pc}
    b59c:	push	{lr}		; (str lr, [sp, #-4]!)
    b5a0:	sub	sp, sp, #12
    b5a4:	mov	lr, r1
    b5a8:	mov	ip, r2
    b5ac:	mov	r1, r0
    b5b0:	str	r3, [sp]
    b5b4:	mov	r2, lr
    b5b8:	mov	r0, #1
    b5bc:	mov	r3, ip
    b5c0:	bl	b53c <fputs@plt+0x2484>
    b5c4:	add	sp, sp, #12
    b5c8:	pop	{pc}		; (ldr pc, [sp], #4)
    b5cc:	push	{lr}		; (str lr, [sp, #-4]!)
    b5d0:	sub	sp, sp, #12
    b5d4:	mov	lr, r1
    b5d8:	mov	ip, r2
    b5dc:	mov	r1, r0
    b5e0:	str	r3, [sp]
    b5e4:	mov	r2, lr
    b5e8:	mov	r0, #0
    b5ec:	mov	r3, ip
    b5f0:	bl	b53c <fputs@plt+0x2484>
    b5f4:	add	sp, sp, #12
    b5f8:	pop	{pc}		; (ldr pc, [sp], #4)
    b5fc:	push	{lr}		; (str lr, [sp, #-4]!)
    b600:	sub	sp, sp, #12
    b604:	mov	lr, r1
    b608:	mov	ip, r2
    b60c:	mov	r1, r0
    b610:	str	r3, [sp]
    b614:	mov	r2, lr
    b618:	mov	r0, #2
    b61c:	mov	r3, ip
    b620:	bl	b53c <fputs@plt+0x2484>
    b624:	add	sp, sp, #12
    b628:	pop	{pc}		; (ldr pc, [sp], #4)
    b62c:	push	{r4, lr}
    b630:	sub	sp, sp, #16
    b634:	mov	r4, r1
    b638:	mov	r1, #0
    b63c:	ldr	lr, [sp, #24]
    b640:	ldr	ip, [sp, #28]
    b644:	str	r2, [sp]
    b648:	mov	r2, r4
    b64c:	str	r3, [sp, #4]
    b650:	mov	r3, #1
    b654:	str	lr, [sp, #8]
    b658:	str	ip, [sp, #12]
    b65c:	bl	b3b8 <fputs@plt+0x2300>
    b660:	add	sp, sp, #16
    b664:	pop	{r4, pc}
    b668:	push	{r4, lr}
    b66c:	sub	sp, sp, #16
    b670:	mov	r4, r1
    b674:	mov	r1, #0
    b678:	ldr	lr, [sp, #24]
    b67c:	ldr	ip, [sp, #28]
    b680:	str	r2, [sp]
    b684:	mov	r2, r4
    b688:	str	r3, [sp, #4]
    b68c:	mov	r3, r1
    b690:	str	lr, [sp, #8]
    b694:	str	ip, [sp, #12]
    b698:	bl	b3b8 <fputs@plt+0x2300>
    b69c:	add	sp, sp, #16
    b6a0:	pop	{r4, pc}
    b6a4:	push	{r4, lr}
    b6a8:	sub	sp, sp, #16
    b6ac:	mov	r4, r1
    b6b0:	mov	r1, #0
    b6b4:	ldr	lr, [sp, #24]
    b6b8:	ldr	ip, [sp, #28]
    b6bc:	str	r2, [sp]
    b6c0:	mov	r2, r4
    b6c4:	str	r3, [sp, #4]
    b6c8:	mov	r3, #2
    b6cc:	str	lr, [sp, #8]
    b6d0:	str	ip, [sp, #12]
    b6d4:	bl	b3b8 <fputs@plt+0x2300>
    b6d8:	add	sp, sp, #16
    b6dc:	pop	{r4, pc}
    b6e0:	push	{r3, lr}
    b6e4:	mov	r0, #3
    b6e8:	bl	9094 <exit@plt>
    b6ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    b6f0:	sub	sp, sp, #8
    b6f4:	ldr	r6, [r1, #36]	; 0x24
    b6f8:	ldr	fp, [r1, #32]
    b6fc:	ldr	sl, [r1]
    b700:	add	r9, r0, r6, lsl #2
    b704:	mov	r5, fp
    b708:	mov	r7, sl
    b70c:	cmp	r6, r5
    b710:	cmpgt	r7, r6
    b714:	ble	b768 <fputs@plt+0x26b0>
    b718:	rsb	r4, r6, r7
    b71c:	rsb	r8, r5, r6
    b720:	cmp	r4, r8
    b724:	bgt	b784 <fputs@plt+0x26cc>
    b728:	cmp	r4, #0
    b72c:	add	r4, r5, r4
    b730:	addgt	r5, r0, r5, lsl #2
    b734:	movgt	r3, r9
    b738:	addgt	r8, r0, r4, lsl #2
    b73c:	ble	b758 <fputs@plt+0x26a0>
    b740:	ldr	ip, [r3]
    b744:	ldr	r2, [r5]
    b748:	str	ip, [r5], #4
    b74c:	cmp	r5, r8
    b750:	str	r2, [r3], #4
    b754:	bne	b740 <fputs@plt+0x2688>
    b758:	mov	r5, r4
    b75c:	cmp	r6, r5
    b760:	cmpgt	r7, r6
    b764:	bgt	b718 <fputs@plt+0x2660>
    b768:	rsb	r6, r6, sl
    b76c:	str	sl, [r1, #36]	; 0x24
    b770:	add	fp, fp, r6
    b774:	str	fp, [r1, #32]
    b778:	add	sp, sp, #8
    b77c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    b780:	bx	lr
    b784:	cmp	r8, #0
    b788:	ble	b7c4 <fputs@plt+0x270c>
    b78c:	rsb	r2, r6, r5
    b790:	add	r4, r8, r5
    b794:	add	r2, r7, r2
    b798:	add	r3, r0, r5, lsl #2
    b79c:	add	r4, r0, r4, lsl #2
    b7a0:	str	r1, [sp, #4]
    b7a4:	add	r2, r0, r2, lsl #2
    b7a8:	ldr	r1, [r2]
    b7ac:	ldr	ip, [r3]
    b7b0:	str	r1, [r3], #4
    b7b4:	cmp	r3, r4
    b7b8:	str	ip, [r2], #4
    b7bc:	bne	b7a8 <fputs@plt+0x26f0>
    b7c0:	ldr	r1, [sp, #4]
    b7c4:	rsb	r7, r8, r7
    b7c8:	b	b70c <fputs@plt+0x2654>
    b7cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b7d0:	sub	sp, sp, #68	; 0x44
    b7d4:	mov	r9, r2
    b7d8:	ldrb	r2, [r2]
    b7dc:	ldr	r4, [sp, #116]	; 0x74
    b7e0:	cmp	r2, #58	; 0x3a
    b7e4:	str	r3, [sp, #24]
    b7e8:	str	r1, [sp, #20]
    b7ec:	ldr	r3, [r4, #4]
    b7f0:	moveq	r3, #0
    b7f4:	subs	r6, r0, #0
    b7f8:	str	r3, [sp, #8]
    b7fc:	ble	ba58 <fputs@plt+0x29a0>
    b800:	ldr	r3, [r4]
    b804:	mov	r2, #0
    b808:	str	r2, [r4, #12]
    b80c:	cmp	r3, r2
    b810:	beq	b9b0 <fputs@plt+0x28f8>
    b814:	ldr	r2, [r4, #16]
    b818:	cmp	r2, #0
    b81c:	bne	b888 <fputs@plt+0x27d0>
    b820:	ldr	r0, [sp, #112]	; 0x70
    b824:	str	r3, [r4, #36]	; 0x24
    b828:	cmp	r0, #0
    b82c:	str	r3, [r4, #32]
    b830:	mov	r3, #0
    b834:	str	r3, [r4, #20]
    b838:	movne	r0, #1
    b83c:	beq	ba90 <fputs@plt+0x29d8>
    b840:	str	r0, [r4, #28]
    b844:	ldrb	r3, [r9]
    b848:	cmp	r3, #45	; 0x2d
    b84c:	addeq	r9, r9, #1
    b850:	moveq	r3, #2
    b854:	streq	r3, [r4, #24]
    b858:	beq	b880 <fputs@plt+0x27c8>
    b85c:	cmp	r3, #43	; 0x2b
    b860:	addeq	r9, r9, #1
    b864:	moveq	r3, #0
    b868:	streq	r3, [r4, #24]
    b86c:	beq	b880 <fputs@plt+0x27c8>
    b870:	cmp	r0, #0
    b874:	movne	r3, #0
    b878:	moveq	r3, #1
    b87c:	str	r3, [r4, #24]
    b880:	mov	r3, #1
    b884:	str	r3, [r4, #16]
    b888:	ldr	r7, [r4, #20]
    b88c:	cmp	r7, #0
    b890:	beq	b9bc <fputs@plt+0x2904>
    b894:	ldrb	r3, [r7]
    b898:	cmp	r3, #0
    b89c:	beq	b9bc <fputs@plt+0x2904>
    b8a0:	ldr	r3, [sp, #24]
    b8a4:	cmp	r3, #0
    b8a8:	beq	b910 <fputs@plt+0x2858>
    b8ac:	ldr	r3, [r4]
    b8b0:	ldr	r0, [sp, #20]
    b8b4:	str	r3, [sp, #12]
    b8b8:	ldr	r3, [r0, r3, lsl #2]
    b8bc:	str	r3, [sp, #28]
    b8c0:	ldr	r3, [sp, #12]
    b8c4:	lsl	r3, r3, #2
    b8c8:	str	r3, [sp, #60]	; 0x3c
    b8cc:	ldr	r3, [sp, #28]
    b8d0:	ldrb	r3, [r3, #1]
    b8d4:	cmp	r3, #45	; 0x2d
    b8d8:	str	r3, [sp, #32]
    b8dc:	beq	bb28 <fputs@plt+0x2a70>
    b8e0:	ldr	r3, [sp, #108]	; 0x6c
    b8e4:	cmp	r3, #0
    b8e8:	beq	b910 <fputs@plt+0x2858>
    b8ec:	ldr	r0, [sp, #28]
    b8f0:	ldrb	r3, [r0, #2]
    b8f4:	cmp	r3, #0
    b8f8:	bne	bb28 <fputs@plt+0x2a70>
    b8fc:	mov	r0, r9
    b900:	ldr	r1, [sp, #32]
    b904:	bl	8e90 <strchr@plt>
    b908:	cmp	r0, #0
    b90c:	beq	bb28 <fputs@plt+0x2a70>
    b910:	add	r8, r7, #1
    b914:	str	r8, [r4, #20]
    b918:	ldrb	r7, [r7]
    b91c:	mov	r0, r9
    b920:	mov	r1, r7
    b924:	mov	r5, r7
    b928:	bl	8e90 <strchr@plt>
    b92c:	ldrb	r3, [r8]
    b930:	cmp	r3, #0
    b934:	ldreq	r3, [r4]
    b938:	addeq	r3, r3, #1
    b93c:	streq	r3, [r4]
    b940:	cmp	r0, #0
    b944:	cmpne	r7, #58	; 0x3a
    b948:	bne	badc <fputs@plt+0x2a24>
    b94c:	ldr	r3, [sp, #8]
    b950:	cmp	r3, #0
    b954:	beq	b99c <fputs@plt+0x28e4>
    b958:	ldr	r3, [r4, #28]
    b95c:	movw	r1, #28968	; 0x7128
    b960:	movt	r1, #1
    b964:	cmp	r3, #0
    b968:	ldreq	r0, [sp, #20]
    b96c:	movwne	r2, #59208	; 0xe748
    b970:	ldrne	lr, [sp, #20]
    b974:	movweq	r2, #59236	; 0xe764
    b978:	ldrne	r0, [r1]
    b97c:	movtne	r2, #0
    b980:	ldreq	r3, [r0]
    b984:	movteq	r2, #0
    b988:	ldreq	r0, [r1]
    b98c:	mov	r1, #1
    b990:	ldrne	r3, [lr]
    b994:	str	r7, [sp]
    b998:	bl	8fd4 <__fprintf_chk@plt>
    b99c:	str	r7, [r4, #8]
    b9a0:	mov	r5, #63	; 0x3f
    b9a4:	mov	r0, r5
    b9a8:	add	sp, sp, #68	; 0x44
    b9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b9b0:	mov	r3, #1
    b9b4:	str	r3, [r4]
    b9b8:	b	b820 <fputs@plt+0x2768>
    b9bc:	ldr	r2, [r4]
    b9c0:	ldr	r3, [r4, #36]	; 0x24
    b9c4:	cmp	r3, r2
    b9c8:	ldr	r3, [r4, #32]
    b9cc:	strgt	r2, [r4, #36]	; 0x24
    b9d0:	cmp	r2, r3
    b9d4:	ldr	r3, [r4, #24]
    b9d8:	strlt	r2, [r4, #32]
    b9dc:	cmp	r3, #1
    b9e0:	beq	bcdc <fputs@plt+0x2c24>
    b9e4:	cmp	r6, r2
    b9e8:	beq	bcd0 <fputs@plt+0x2c18>
    b9ec:	ldr	r0, [sp, #20]
    b9f0:	ldr	r3, [r0, r2, lsl #2]
    b9f4:	ldrb	r1, [r3]
    b9f8:	cmp	r1, #45	; 0x2d
    b9fc:	bne	ba68 <fputs@plt+0x29b0>
    ba00:	ldrb	r1, [r3, #1]
    ba04:	cmp	r1, #45	; 0x2d
    ba08:	bne	baa8 <fputs@plt+0x29f0>
    ba0c:	ldrb	r1, [r3, #2]
    ba10:	cmp	r1, #0
    ba14:	bne	baa8 <fputs@plt+0x29f0>
    ba18:	ldr	r3, [r4, #32]
    ba1c:	add	r2, r2, #1
    ba20:	ldr	r1, [r4, #36]	; 0x24
    ba24:	str	r2, [r4]
    ba28:	cmp	r3, r1
    ba2c:	beq	be80 <fputs@plt+0x2dc8>
    ba30:	cmp	r2, r1
    ba34:	beq	ba44 <fputs@plt+0x298c>
    ba38:	mov	r1, r4
    ba3c:	bl	b6ec <fputs@plt+0x2634>
    ba40:	ldr	r3, [r4, #32]
    ba44:	mov	r2, r6
    ba48:	str	r6, [r4, #36]	; 0x24
    ba4c:	str	r6, [r4]
    ba50:	cmp	r2, r3
    ba54:	strne	r3, [r4]
    ba58:	mvn	r5, #0
    ba5c:	mov	r0, r5
    ba60:	add	sp, sp, #68	; 0x44
    ba64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba68:	ldr	r1, [r4, #24]
    ba6c:	cmp	r1, #0
    ba70:	beq	ba58 <fputs@plt+0x29a0>
    ba74:	mov	r5, #1
    ba78:	add	r2, r2, #1
    ba7c:	str	r3, [r4, #12]
    ba80:	str	r2, [r4]
    ba84:	mov	r0, r5
    ba88:	add	sp, sp, #68	; 0x44
    ba8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba90:	movw	r0, #58960	; 0xe650
    ba94:	movt	r0, #0
    ba98:	bl	8e6c <getenv@plt>
    ba9c:	adds	r0, r0, #0
    baa0:	movne	r0, #1
    baa4:	b	b840 <fputs@plt+0x2788>
    baa8:	ldrb	r1, [r3, #1]
    baac:	cmp	r1, #0
    bab0:	beq	ba68 <fputs@plt+0x29b0>
    bab4:	ldr	r2, [sp, #24]
    bab8:	cmp	r2, #0
    babc:	moveq	r7, #1
    bac0:	beq	bad0 <fputs@plt+0x2a18>
    bac4:	cmp	r1, #45	; 0x2d
    bac8:	moveq	r7, #2
    bacc:	movne	r7, #1
    bad0:	add	r7, r3, r7
    bad4:	str	r7, [r4, #20]
    bad8:	b	b8a0 <fputs@plt+0x27e8>
    badc:	ldrb	r3, [r0]
    bae0:	cmp	r3, #87	; 0x57
    bae4:	ldrb	r3, [r0, #1]
    bae8:	beq	be8c <fputs@plt+0x2dd4>
    baec:	cmp	r3, #58	; 0x3a
    baf0:	bne	ba84 <fputs@plt+0x29cc>
    baf4:	ldrb	r3, [r0, #2]
    baf8:	cmp	r3, #58	; 0x3a
    bafc:	ldrb	r3, [r8]
    bb00:	beq	c0b4 <fputs@plt+0x2ffc>
    bb04:	cmp	r3, #0
    bb08:	ldr	r3, [r4]
    bb0c:	beq	c060 <fputs@plt+0x2fa8>
    bb10:	add	r3, r3, #1
    bb14:	str	r8, [r4, #12]
    bb18:	str	r3, [r4]
    bb1c:	mov	r3, #0
    bb20:	str	r3, [r4, #20]
    bb24:	b	ba84 <fputs@plt+0x29cc>
    bb28:	ldrb	r3, [r7]
    bb2c:	cmp	r3, #61	; 0x3d
    bb30:	cmpne	r3, #0
    bb34:	str	r3, [sp, #36]	; 0x24
    bb38:	beq	bfd0 <fputs@plt+0x2f18>
    bb3c:	add	r3, r7, #1
    bb40:	mov	r1, r3
    bb44:	ldrb	r2, [r3], #1
    bb48:	cmp	r2, #61	; 0x3d
    bb4c:	cmpne	r2, #0
    bb50:	bne	bb40 <fputs@plt+0x2a88>
    bb54:	str	r1, [sp, #40]	; 0x28
    bb58:	ldr	r3, [sp, #24]
    bb5c:	ldr	fp, [r3]
    bb60:	cmp	fp, #0
    bb64:	beq	bfd8 <fputs@plt+0x2f20>
    bb68:	ldr	sl, [sp, #24]
    bb6c:	mov	r5, #0
    bb70:	ldr	r3, [sp, #40]	; 0x28
    bb74:	mvn	lr, #0
    bb78:	str	r6, [sp, #44]	; 0x2c
    bb7c:	mov	r6, fp
    bb80:	str	r9, [sp, #48]	; 0x30
    bb84:	rsb	r8, r7, r3
    bb88:	str	r4, [sp, #52]	; 0x34
    bb8c:	mov	fp, r5
    bb90:	str	lr, [sp, #56]	; 0x38
    bb94:	mov	r9, sl
    bb98:	mov	r4, r5
    bb9c:	b	bbd0 <fputs@plt+0x2b18>
    bba0:	ldr	r3, [sp, #108]	; 0x6c
    bba4:	cmp	r3, #0
    bba8:	bne	bbbc <fputs@plt+0x2b04>
    bbac:	ldr	r2, [fp, #4]
    bbb0:	ldr	r3, [r9, #4]
    bbb4:	cmp	r2, r3
    bbb8:	beq	bcac <fputs@plt+0x2bf4>
    bbbc:	mov	r4, #1
    bbc0:	ldr	r6, [r9, #16]!
    bbc4:	add	r5, r5, #1
    bbc8:	cmp	r6, #0
    bbcc:	beq	bc1c <fputs@plt+0x2b64>
    bbd0:	mov	r0, r6
    bbd4:	mov	r1, r7
    bbd8:	mov	r2, r8
    bbdc:	mov	sl, r9
    bbe0:	bl	9028 <strncmp@plt>
    bbe4:	cmp	r0, #0
    bbe8:	bne	bbc0 <fputs@plt+0x2b08>
    bbec:	mov	r0, r6
    bbf0:	bl	8f38 <strlen@plt>
    bbf4:	cmp	r0, r8
    bbf8:	beq	be1c <fputs@plt+0x2d64>
    bbfc:	cmp	fp, #0
    bc00:	bne	bba0 <fputs@plt+0x2ae8>
    bc04:	mov	fp, r9
    bc08:	ldr	r6, [r9, #16]!
    bc0c:	str	r5, [sp, #56]	; 0x38
    bc10:	add	r5, r5, #1
    bc14:	cmp	r6, #0
    bc18:	bne	bbd0 <fputs@plt+0x2b18>
    bc1c:	mov	r3, r4
    bc20:	cmp	r3, #0
    bc24:	ldr	r6, [sp, #44]	; 0x2c
    bc28:	ldr	r9, [sp, #48]	; 0x30
    bc2c:	ldr	r4, [sp, #52]	; 0x34
    bc30:	beq	bd60 <fputs@plt+0x2ca8>
    bc34:	ldr	r3, [sp, #8]
    bc38:	cmp	r3, #0
    bc3c:	beq	bc78 <fputs@plt+0x2bc0>
    bc40:	movw	r1, #28968	; 0x7128
    bc44:	movt	r1, #1
    bc48:	ldr	lr, [sp, #20]
    bc4c:	movw	r2, #58976	; 0xe660
    bc50:	ldr	r0, [r1]
    bc54:	movt	r2, #0
    bc58:	ldr	r1, [sp, #28]
    bc5c:	ldr	r3, [lr]
    bc60:	str	r1, [sp]
    bc64:	mov	r1, #1
    bc68:	bl	8fd4 <__fprintf_chk@plt>
    bc6c:	ldr	r3, [r4]
    bc70:	ldr	r7, [r4, #20]
    bc74:	str	r3, [sp, #12]
    bc78:	mov	r0, r7
    bc7c:	mov	r5, #63	; 0x3f
    bc80:	bl	8f38 <strlen@plt>
    bc84:	ldr	r3, [sp, #12]
    bc88:	add	r2, r3, #1
    bc8c:	mov	r3, #0
    bc90:	str	r2, [r4]
    bc94:	str	r3, [r4, #8]
    bc98:	add	r0, r7, r0
    bc9c:	str	r0, [r4, #20]
    bca0:	mov	r0, r5
    bca4:	add	sp, sp, #68	; 0x44
    bca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bcac:	ldr	r2, [fp, #8]
    bcb0:	ldr	r3, [r9, #8]
    bcb4:	cmp	r2, r3
    bcb8:	bne	bbbc <fputs@plt+0x2b04>
    bcbc:	ldr	r2, [fp, #12]
    bcc0:	ldr	r3, [r9, #12]
    bcc4:	cmp	r2, r3
    bcc8:	movne	r4, #1
    bccc:	b	bbc0 <fputs@plt+0x2b08>
    bcd0:	ldr	r2, [r4, #36]	; 0x24
    bcd4:	ldr	r3, [r4, #32]
    bcd8:	b	ba50 <fputs@plt+0x2998>
    bcdc:	ldr	r1, [r4, #32]
    bce0:	ldr	r3, [r4, #36]	; 0x24
    bce4:	cmp	r1, r3
    bce8:	beq	be74 <fputs@plt+0x2dbc>
    bcec:	cmp	r2, r3
    bcf0:	beq	bd04 <fputs@plt+0x2c4c>
    bcf4:	ldr	r0, [sp, #20]
    bcf8:	mov	r1, r4
    bcfc:	bl	b6ec <fputs@plt+0x2634>
    bd00:	ldr	r2, [r4]
    bd04:	cmp	r6, r2
    bd08:	ble	c0ac <fputs@plt+0x2ff4>
    bd0c:	sub	r1, r2, #-1073741823	; 0xc0000001
    bd10:	mov	r3, r2
    bd14:	ldr	r2, [sp, #20]
    bd18:	add	r1, r2, r1, lsl #2
    bd1c:	b	bd30 <fputs@plt+0x2c78>
    bd20:	add	r3, r3, #1
    bd24:	str	r3, [r4]
    bd28:	cmp	r3, r6
    bd2c:	beq	bd54 <fputs@plt+0x2c9c>
    bd30:	ldr	r2, [r1, #4]!
    bd34:	ldrb	r0, [r2]
    bd38:	cmp	r0, #45	; 0x2d
    bd3c:	bne	bd20 <fputs@plt+0x2c68>
    bd40:	ldrb	r2, [r2, #1]
    bd44:	cmp	r2, #0
    bd48:	beq	bd20 <fputs@plt+0x2c68>
    bd4c:	ldr	r2, [r4]
    bd50:	b	bd58 <fputs@plt+0x2ca0>
    bd54:	mov	r2, r3
    bd58:	str	r3, [r4, #36]	; 0x24
    bd5c:	b	b9e4 <fputs@plt+0x292c>
    bd60:	cmp	fp, #0
    bd64:	beq	bfd8 <fputs@plt+0x2f20>
    bd68:	ldr	r5, [sp, #56]	; 0x38
    bd6c:	mov	sl, fp
    bd70:	ldr	r0, [sp, #40]	; 0x28
    bd74:	ldr	lr, [sp, #12]
    bd78:	add	r3, lr, #1
    bd7c:	str	r3, [r4]
    bd80:	ldrb	r2, [r0]
    bd84:	cmp	r2, #0
    bd88:	beq	be2c <fputs@plt+0x2d74>
    bd8c:	ldr	r3, [sl, #4]
    bd90:	cmp	r3, #0
    bd94:	addne	r3, r0, #1
    bd98:	strne	r3, [r4, #12]
    bd9c:	bne	be38 <fputs@plt+0x2d80>
    bda0:	ldr	r3, [sp, #8]
    bda4:	cmp	r3, #0
    bda8:	beq	bdfc <fputs@plt+0x2d44>
    bdac:	ldr	r0, [sp, #20]
    bdb0:	ldr	lr, [sp, #60]	; 0x3c
    bdb4:	ldr	r3, [r0, lr]
    bdb8:	ldrb	r2, [r3, #1]
    bdbc:	cmp	r2, #45	; 0x2d
    bdc0:	beq	c12c <fputs@plt+0x3074>
    bdc4:	ldrb	ip, [r3]
    bdc8:	movw	r0, #28968	; 0x7128
    bdcc:	ldr	r1, [sp, #20]
    bdd0:	movt	r0, #1
    bdd4:	movw	r2, #59056	; 0xe6b0
    bdd8:	movt	r2, #0
    bddc:	ldr	r3, [r1]
    bde0:	mov	r1, #1
    bde4:	str	ip, [sp]
    bde8:	ldr	ip, [sl]
    bdec:	ldr	r0, [r0]
    bdf0:	str	ip, [sp, #4]
    bdf4:	bl	8fd4 <__fprintf_chk@plt>
    bdf8:	ldr	r7, [r4, #20]
    bdfc:	mov	r0, r7
    be00:	mov	r5, #63	; 0x3f
    be04:	bl	8f38 <strlen@plt>
    be08:	ldr	r3, [sl, #12]
    be0c:	str	r3, [r4, #8]
    be10:	add	r0, r7, r0
    be14:	str	r0, [r4, #20]
    be18:	b	ba84 <fputs@plt+0x29cc>
    be1c:	ldr	r6, [sp, #44]	; 0x2c
    be20:	ldr	r9, [sp, #48]	; 0x30
    be24:	ldr	r4, [sp, #52]	; 0x34
    be28:	b	bd70 <fputs@plt+0x2cb8>
    be2c:	ldr	r1, [sl, #4]
    be30:	cmp	r1, #1
    be34:	beq	c080 <fputs@plt+0x2fc8>
    be38:	mov	r0, r7
    be3c:	bl	8f38 <strlen@plt>
    be40:	ldr	r1, [sp, #104]	; 0x68
    be44:	cmp	r1, #0
    be48:	add	r0, r7, r0
    be4c:	str	r0, [r4, #20]
    be50:	beq	be58 <fputs@plt+0x2da0>
    be54:	str	r5, [r1]
    be58:	ldr	r3, [sl, #8]
    be5c:	cmp	r3, #0
    be60:	ldrne	r2, [sl, #12]
    be64:	movne	r5, #0
    be68:	ldreq	r5, [sl, #12]
    be6c:	strne	r2, [r3]
    be70:	b	ba84 <fputs@plt+0x29cc>
    be74:	cmp	r2, r1
    be78:	strne	r2, [r4, #32]
    be7c:	b	bd04 <fputs@plt+0x2c4c>
    be80:	mov	r3, r2
    be84:	str	r2, [r4, #32]
    be88:	b	ba44 <fputs@plt+0x298c>
    be8c:	cmp	r3, #59	; 0x3b
    be90:	bne	baec <fputs@plt+0x2a34>
    be94:	ldrb	r3, [r8]
    be98:	cmp	r3, #0
    be9c:	ldr	r3, [r4]
    bea0:	beq	c108 <fputs@plt+0x3050>
    bea4:	add	r3, r3, #1
    bea8:	str	r8, [sp, #16]
    beac:	str	r8, [r4, #12]
    beb0:	str	r3, [r4]
    beb4:	ldr	r3, [sp, #16]
    beb8:	str	r3, [r4, #20]
    bebc:	ldrb	r7, [r3]
    bec0:	cmp	r7, #61	; 0x3d
    bec4:	cmpne	r7, #0
    bec8:	beq	c370 <fputs@plt+0x32b8>
    becc:	add	r3, r3, #1
    bed0:	mov	r2, r3
    bed4:	ldrb	r7, [r3], #1
    bed8:	cmp	r7, #61	; 0x3d
    bedc:	cmpne	r7, #0
    bee0:	bne	bed0 <fputs@plt+0x2e18>
    bee4:	str	r2, [sp, #12]
    bee8:	ldr	r3, [sp, #24]
    beec:	ldr	sl, [r3]
    bef0:	cmp	sl, #0
    bef4:	beq	c3a8 <fputs@plt+0x32f0>
    bef8:	ldr	fp, [sp, #24]
    befc:	mov	r5, #0
    bf00:	ldr	lr, [sp, #16]
    bf04:	ldr	r3, [sp, #12]
    bf08:	str	r7, [sp, #28]
    bf0c:	rsb	r8, lr, r3
    bf10:	str	r6, [sp, #32]
    bf14:	str	r9, [sp, #36]	; 0x24
    bf18:	mov	r7, lr
    bf1c:	str	r4, [sp, #40]	; 0x28
    bf20:	mov	r6, r5
    bf24:	mov	r4, fp
    bf28:	mov	r9, sl
    bf2c:	mov	fp, r5
    bf30:	str	r5, [sp, #24]
    bf34:	mov	r0, r9
    bf38:	mov	r1, r7
    bf3c:	mov	r2, r8
    bf40:	mov	sl, r4
    bf44:	bl	9028 <strncmp@plt>
    bf48:	cmp	r0, #0
    bf4c:	mov	r0, r9
    bf50:	bne	bf70 <fputs@plt+0x2eb8>
    bf54:	bl	8f38 <strlen@plt>
    bf58:	cmp	r8, r0
    bf5c:	beq	c1b0 <fputs@plt+0x30f8>
    bf60:	cmp	fp, #0
    bf64:	streq	r5, [sp, #24]
    bf68:	movne	r6, #1
    bf6c:	moveq	fp, r4
    bf70:	ldr	r9, [r4, #16]!
    bf74:	add	r5, r5, #1
    bf78:	cmp	r9, #0
    bf7c:	bne	bf34 <fputs@plt+0x2e7c>
    bf80:	mov	ip, r6
    bf84:	cmp	ip, #0
    bf88:	ldr	r7, [sp, #28]
    bf8c:	ldr	r6, [sp, #32]
    bf90:	ldr	r9, [sp, #36]	; 0x24
    bf94:	ldr	r4, [sp, #40]	; 0x28
    bf98:	beq	c234 <fputs@plt+0x317c>
    bf9c:	ldr	r3, [sp, #8]
    bfa0:	cmp	r3, #0
    bfa4:	bne	c248 <fputs@plt+0x3190>
    bfa8:	ldr	r6, [sp, #16]
    bfac:	mov	r0, r6
    bfb0:	mov	r5, #63	; 0x3f
    bfb4:	bl	8f38 <strlen@plt>
    bfb8:	ldr	r3, [r4]
    bfbc:	add	r3, r3, #1
    bfc0:	str	r3, [r4]
    bfc4:	add	r0, r6, r0
    bfc8:	str	r0, [r4, #20]
    bfcc:	b	ba84 <fputs@plt+0x29cc>
    bfd0:	str	r7, [sp, #40]	; 0x28
    bfd4:	b	bb58 <fputs@plt+0x2aa0>
    bfd8:	ldr	r3, [sp, #108]	; 0x6c
    bfdc:	cmp	r3, #0
    bfe0:	bne	c15c <fputs@plt+0x30a4>
    bfe4:	ldr	r3, [sp, #8]
    bfe8:	cmp	r3, #0
    bfec:	beq	c038 <fputs@plt+0x2f80>
    bff0:	ldr	r3, [sp, #32]
    bff4:	cmp	r3, #45	; 0x2d
    bff8:	beq	c28c <fputs@plt+0x31d4>
    bffc:	ldr	r0, [sp, #28]
    c000:	movw	r1, #28968	; 0x7128
    c004:	ldr	lr, [sp, #20]
    c008:	movt	r1, #1
    c00c:	movw	r2, #59176	; 0xe728
    c010:	movt	r2, #0
    c014:	ldrb	ip, [r0]
    c018:	ldr	r3, [lr]
    c01c:	ldr	r0, [r1]
    c020:	mov	r1, #1
    c024:	str	r7, [sp, #4]
    c028:	str	ip, [sp]
    c02c:	bl	8fd4 <__fprintf_chk@plt>
    c030:	ldr	r3, [r4]
    c034:	str	r3, [sp, #12]
    c038:	ldr	r3, [sp, #12]
    c03c:	mov	r5, #63	; 0x3f
    c040:	add	r2, r3, #1
    c044:	movw	r3, #56940	; 0xde6c
    c048:	str	r2, [r4]
    c04c:	movt	r3, #0
    c050:	mov	r2, #0
    c054:	str	r3, [r4, #20]
    c058:	str	r2, [r4, #8]
    c05c:	b	ba84 <fputs@plt+0x29cc>
    c060:	cmp	r3, r6
    c064:	beq	c18c <fputs@plt+0x30d4>
    c068:	ldr	r0, [sp, #20]
    c06c:	ldr	r2, [r0, r3, lsl #2]
    c070:	add	r3, r3, #1
    c074:	str	r3, [r4]
    c078:	str	r2, [r4, #12]
    c07c:	b	bb1c <fputs@plt+0x2a64>
    c080:	cmp	r6, r3
    c084:	ble	c0d0 <fputs@plt+0x3018>
    c088:	ldr	r2, [sp, #20]
    c08c:	ldr	lr, [sp, #60]	; 0x3c
    c090:	ldr	r0, [sp, #12]
    c094:	add	r3, r2, lr
    c098:	add	r2, r0, #2
    c09c:	str	r2, [r4]
    c0a0:	ldr	r3, [r3, #4]
    c0a4:	str	r3, [r4, #12]
    c0a8:	b	be38 <fputs@plt+0x2d80>
    c0ac:	mov	r3, r2
    c0b0:	b	bd58 <fputs@plt+0x2ca0>
    c0b4:	cmp	r3, #0
    c0b8:	strne	r8, [r4, #12]
    c0bc:	streq	r3, [r4, #12]
    c0c0:	ldrne	r3, [r4]
    c0c4:	addne	r3, r3, #1
    c0c8:	strne	r3, [r4]
    c0cc:	b	bb1c <fputs@plt+0x2a64>
    c0d0:	ldr	r3, [sp, #8]
    c0d4:	cmp	r3, #0
    c0d8:	bne	c2c0 <fputs@plt+0x3208>
    c0dc:	mov	r0, r7
    c0e0:	bl	8f38 <strlen@plt>
    c0e4:	ldr	r3, [sl, #12]
    c0e8:	str	r3, [r4, #8]
    c0ec:	add	r0, r7, r0
    c0f0:	str	r0, [r4, #20]
    c0f4:	ldrb	r3, [r9]
    c0f8:	cmp	r3, #58	; 0x3a
    c0fc:	bne	b9a0 <fputs@plt+0x28e8>
    c100:	mov	r5, #58	; 0x3a
    c104:	b	ba84 <fputs@plt+0x29cc>
    c108:	cmp	r3, r6
    c10c:	beq	c324 <fputs@plt+0x326c>
    c110:	ldr	r0, [sp, #20]
    c114:	ldr	r2, [r0, r3, lsl #2]
    c118:	add	r3, r3, #1
    c11c:	str	r3, [r4]
    c120:	str	r2, [sp, #16]
    c124:	str	r2, [r4, #12]
    c128:	b	beb4 <fputs@plt+0x2dfc>
    c12c:	ldr	ip, [sl]
    c130:	movw	r1, #28968	; 0x7128
    c134:	movt	r1, #1
    c138:	ldr	r3, [r0]
    c13c:	movw	r2, #59008	; 0xe680
    c140:	movt	r2, #0
    c144:	ldr	r0, [r1]
    c148:	mov	r1, #1
    c14c:	str	ip, [sp]
    c150:	bl	8fd4 <__fprintf_chk@plt>
    c154:	ldr	r7, [r4, #20]
    c158:	b	bdfc <fputs@plt+0x2d44>
    c15c:	ldr	r3, [sp, #32]
    c160:	cmp	r3, #45	; 0x2d
    c164:	beq	c280 <fputs@plt+0x31c8>
    c168:	ldr	r1, [sp, #36]	; 0x24
    c16c:	mov	r0, r9
    c170:	bl	8e90 <strchr@plt>
    c174:	cmp	r0, #0
    c178:	bne	b910 <fputs@plt+0x2858>
    c17c:	ldr	r3, [sp, #8]
    c180:	cmp	r3, #0
    c184:	bne	bffc <fputs@plt+0x2f44>
    c188:	b	c038 <fputs@plt+0x2f80>
    c18c:	ldr	r3, [sp, #8]
    c190:	cmp	r3, #0
    c194:	bne	c37c <fputs@plt+0x32c4>
    c198:	str	r7, [r4, #8]
    c19c:	ldrb	r5, [r9]
    c1a0:	cmp	r5, #58	; 0x3a
    c1a4:	movne	r5, #63	; 0x3f
    c1a8:	moveq	r5, #58	; 0x3a
    c1ac:	b	bb1c <fputs@plt+0x2a64>
    c1b0:	ldr	r7, [sp, #28]
    c1b4:	ldr	r6, [sp, #32]
    c1b8:	ldr	r9, [sp, #36]	; 0x24
    c1bc:	ldr	r4, [sp, #40]	; 0x28
    c1c0:	cmp	r7, #0
    c1c4:	beq	c2f4 <fputs@plt+0x323c>
    c1c8:	ldr	r3, [sl, #4]
    c1cc:	cmp	r3, #0
    c1d0:	ldrne	r0, [sp, #12]
    c1d4:	addne	r3, r0, #1
    c1d8:	strne	r3, [r4, #12]
    c1dc:	bne	c300 <fputs@plt+0x3248>
    c1e0:	ldr	r3, [sp, #8]
    c1e4:	cmp	r3, #0
    c1e8:	beq	c218 <fputs@plt+0x3160>
    c1ec:	ldr	ip, [sl]
    c1f0:	movw	r0, #28968	; 0x7128
    c1f4:	ldr	lr, [sp, #20]
    c1f8:	movt	r0, #1
    c1fc:	movw	r2, #59340	; 0xe7cc
    c200:	mov	r1, #1
    c204:	movt	r2, #0
    c208:	ldr	r3, [lr]
    c20c:	str	ip, [sp]
    c210:	ldr	r0, [r0]
    c214:	bl	8fd4 <__fprintf_chk@plt>
    c218:	ldr	r6, [r4, #20]
    c21c:	mov	r5, #63	; 0x3f
    c220:	mov	r0, r6
    c224:	bl	8f38 <strlen@plt>
    c228:	add	r0, r6, r0
    c22c:	str	r0, [r4, #20]
    c230:	b	ba84 <fputs@plt+0x29cc>
    c234:	cmp	fp, #0
    c238:	beq	c3a8 <fputs@plt+0x32f0>
    c23c:	ldr	r5, [sp, #24]
    c240:	mov	sl, fp
    c244:	b	c1c0 <fputs@plt+0x3108>
    c248:	ldr	ip, [r4]
    c24c:	movw	r0, #28968	; 0x7128
    c250:	ldr	lr, [sp, #20]
    c254:	movt	r0, #1
    c258:	movw	r2, #59304	; 0xe7a8
    c25c:	mov	r1, #1
    c260:	ldr	r0, [r0]
    c264:	movt	r2, #0
    c268:	ldr	ip, [lr, ip, lsl #2]
    c26c:	ldr	r3, [lr]
    c270:	str	ip, [sp]
    c274:	bl	8fd4 <__fprintf_chk@plt>
    c278:	ldr	r6, [r4, #20]
    c27c:	b	bfac <fputs@plt+0x2ef4>
    c280:	ldr	r3, [sp, #8]
    c284:	cmp	r3, #0
    c288:	beq	c038 <fputs@plt+0x2f80>
    c28c:	ldr	lr, [sp, #20]
    c290:	movw	r1, #28968	; 0x7128
    c294:	movt	r1, #1
    c298:	movw	r2, #59144	; 0xe708
    c29c:	movt	r2, #0
    c2a0:	ldr	r3, [lr]
    c2a4:	ldr	r0, [r1]
    c2a8:	mov	r1, #1
    c2ac:	str	r7, [sp]
    c2b0:	bl	8fd4 <__fprintf_chk@plt>
    c2b4:	ldr	r3, [r4]
    c2b8:	str	r3, [sp, #12]
    c2bc:	b	c038 <fputs@plt+0x2f80>
    c2c0:	ldr	lr, [sp, #20]
    c2c4:	movw	r0, #28968	; 0x7128
    c2c8:	ldr	r3, [sp, #60]	; 0x3c
    c2cc:	movt	r0, #1
    c2d0:	movw	r2, #59104	; 0xe6e0
    c2d4:	movt	r2, #0
    c2d8:	ldr	r0, [r0]
    c2dc:	ldr	ip, [lr, r3]
    c2e0:	ldr	r3, [lr]
    c2e4:	str	ip, [sp]
    c2e8:	bl	8fd4 <__fprintf_chk@plt>
    c2ec:	ldr	r7, [r4, #20]
    c2f0:	b	c0dc <fputs@plt+0x3024>
    c2f4:	ldr	r1, [sl, #4]
    c2f8:	cmp	r1, #1
    c2fc:	beq	c3b8 <fputs@plt+0x3300>
    c300:	ldr	r0, [sp, #16]
    c304:	bl	8f38 <strlen@plt>
    c308:	ldr	r1, [sp, #104]	; 0x68
    c30c:	ldr	r3, [sp, #16]
    c310:	cmp	r1, #0
    c314:	add	r0, r3, r0
    c318:	str	r0, [r4, #20]
    c31c:	bne	be54 <fputs@plt+0x2d9c>
    c320:	b	be58 <fputs@plt+0x2da0>
    c324:	ldr	r3, [sp, #8]
    c328:	cmp	r3, #0
    c32c:	beq	c358 <fputs@plt+0x32a0>
    c330:	ldr	lr, [sp, #20]
    c334:	movw	r1, #28968	; 0x7128
    c338:	movt	r1, #1
    c33c:	str	r7, [sp]
    c340:	movw	r2, #59264	; 0xe780
    c344:	movt	r2, #0
    c348:	ldr	r0, [r1]
    c34c:	mov	r1, #1
    c350:	ldr	r3, [lr]
    c354:	bl	8fd4 <__fprintf_chk@plt>
    c358:	str	r7, [r4, #8]
    c35c:	ldrb	r5, [r9]
    c360:	cmp	r5, #58	; 0x3a
    c364:	movne	r5, #63	; 0x3f
    c368:	moveq	r5, #58	; 0x3a
    c36c:	b	ba84 <fputs@plt+0x29cc>
    c370:	ldr	r3, [sp, #16]
    c374:	str	r3, [sp, #12]
    c378:	b	bee8 <fputs@plt+0x2e30>
    c37c:	ldr	lr, [sp, #20]
    c380:	movw	r1, #28968	; 0x7128
    c384:	movt	r1, #1
    c388:	str	r7, [sp]
    c38c:	movw	r2, #59264	; 0xe780
    c390:	movt	r2, #0
    c394:	ldr	r3, [lr]
    c398:	ldr	r0, [r1]
    c39c:	mov	r1, #1
    c3a0:	bl	8fd4 <__fprintf_chk@plt>
    c3a4:	b	c198 <fputs@plt+0x30e0>
    c3a8:	mov	r3, #0
    c3ac:	mov	r5, #87	; 0x57
    c3b0:	str	r3, [r4, #20]
    c3b4:	b	ba84 <fputs@plt+0x29cc>
    c3b8:	ldr	r3, [r4]
    c3bc:	cmp	r6, r3
    c3c0:	ble	c3dc <fputs@plt+0x3324>
    c3c4:	ldr	r0, [sp, #20]
    c3c8:	ldr	r2, [r0, r3, lsl #2]
    c3cc:	add	r3, r3, #1
    c3d0:	str	r3, [r4]
    c3d4:	str	r2, [r4, #12]
    c3d8:	b	c300 <fputs@plt+0x3248>
    c3dc:	ldr	r2, [sp, #8]
    c3e0:	cmp	r2, #0
    c3e4:	beq	c414 <fputs@plt+0x335c>
    c3e8:	ldr	lr, [sp, #20]
    c3ec:	sub	r3, r3, #-1073741823	; 0xc0000001
    c3f0:	movw	r0, #28968	; 0x7128
    c3f4:	movt	r0, #1
    c3f8:	movw	r2, #59104	; 0xe6e0
    c3fc:	movt	r2, #0
    c400:	ldr	ip, [lr, r3, lsl #2]
    c404:	ldr	r0, [r0]
    c408:	ldr	r3, [lr]
    c40c:	str	ip, [sp]
    c410:	bl	8fd4 <__fprintf_chk@plt>
    c414:	ldr	r5, [r4, #20]
    c418:	mov	r0, r5
    c41c:	bl	8f38 <strlen@plt>
    c420:	add	r0, r5, r0
    c424:	str	r0, [r4, #20]
    c428:	ldrb	r3, [r9]
    c42c:	cmp	r3, #58	; 0x3a
    c430:	bne	b9a0 <fputs@plt+0x28e8>
    c434:	b	c100 <fputs@plt+0x3048>
    c438:	push	{r4, r5, r6, r7, r8, lr}
    c43c:	sub	sp, sp, #16
    c440:	movw	r5, #28924	; 0x70fc
    c444:	movt	r5, #1
    c448:	ldr	r8, [sp, #40]	; 0x28
    c44c:	movw	r4, #29512	; 0x7348
    c450:	ldr	r7, [sp, #44]	; 0x2c
    c454:	movt	r4, #1
    c458:	ldr	r6, [sp, #48]	; 0x30
    c45c:	ldr	ip, [r5, #4]
    c460:	ldr	lr, [r5]
    c464:	str	r4, [sp, #12]
    c468:	str	r8, [sp]
    c46c:	str	r7, [sp, #4]
    c470:	str	r6, [sp, #8]
    c474:	str	ip, [r4, #4]
    c478:	str	lr, [r4]
    c47c:	bl	b7cc <fputs@plt+0x2714>
    c480:	ldr	ip, [r4]
    c484:	movw	r3, #29632	; 0x73c0
    c488:	ldr	r1, [r4, #8]
    c48c:	movt	r3, #1
    c490:	ldr	r2, [r4, #12]
    c494:	str	ip, [r5]
    c498:	str	r1, [r5, #8]
    c49c:	str	r2, [r3]
    c4a0:	add	sp, sp, #16
    c4a4:	pop	{r4, r5, r6, r7, r8, pc}
    c4a8:	push	{lr}		; (str lr, [sp, #-4]!)
    c4ac:	sub	sp, sp, #20
    c4b0:	mov	ip, #0
    c4b4:	mov	lr, #1
    c4b8:	str	ip, [sp]
    c4bc:	mov	r3, ip
    c4c0:	stmib	sp, {ip, lr}
    c4c4:	bl	c438 <fputs@plt+0x3380>
    c4c8:	add	sp, sp, #20
    c4cc:	pop	{pc}		; (ldr pc, [sp], #4)
    c4d0:	push	{lr}		; (str lr, [sp, #-4]!)
    c4d4:	sub	sp, sp, #20
    c4d8:	mov	ip, #0
    c4dc:	ldr	lr, [sp, #24]
    c4e0:	str	ip, [sp, #4]
    c4e4:	str	ip, [sp, #8]
    c4e8:	str	lr, [sp]
    c4ec:	bl	c438 <fputs@plt+0x3380>
    c4f0:	add	sp, sp, #20
    c4f4:	pop	{pc}		; (ldr pc, [sp], #4)
    c4f8:	push	{r4, lr}
    c4fc:	sub	sp, sp, #16
    c500:	mov	ip, #0
    c504:	ldr	r4, [sp, #24]
    c508:	ldr	lr, [sp, #28]
    c50c:	str	ip, [sp, #8]
    c510:	stm	sp, {r4, ip}
    c514:	str	lr, [sp, #12]
    c518:	bl	b7cc <fputs@plt+0x2714>
    c51c:	add	sp, sp, #16
    c520:	pop	{r4, pc}
    c524:	push	{r4, lr}
    c528:	sub	sp, sp, #16
    c52c:	mov	lr, #0
    c530:	mov	r4, #1
    c534:	ldr	ip, [sp, #24]
    c538:	stmib	sp, {r4, lr}
    c53c:	str	ip, [sp]
    c540:	bl	c438 <fputs@plt+0x3380>
    c544:	add	sp, sp, #16
    c548:	pop	{r4, pc}
    c54c:	push	{r4, r5, lr}
    c550:	sub	sp, sp, #20
    c554:	mov	ip, #0
    c558:	mov	r5, #1
    c55c:	ldr	r4, [sp, #32]
    c560:	ldr	lr, [sp, #36]	; 0x24
    c564:	stm	sp, {r4, r5, ip, lr}
    c568:	bl	b7cc <fputs@plt+0x2714>
    c56c:	add	sp, sp, #20
    c570:	pop	{r4, r5, pc}
    c574:	subs	r3, r0, #0
    c578:	ldr	r1, [pc, #120]	; c5f8 <fputs@plt+0x3540>
    c57c:	push	{r4}		; (str r4, [sp, #-4]!)
    c580:	movw	r4, #26215	; 0x6667
    c584:	movt	r4, #26214	; 0x6666
    c588:	blt	c5bc <fputs@plt+0x3504>
    c58c:	smull	r2, ip, r4, r3
    c590:	asr	r2, r3, #31
    c594:	mov	r0, r1
    c598:	rsb	r2, r2, ip, asr #2
    c59c:	add	ip, r2, r2, lsl #2
    c5a0:	sub	ip, r3, ip, lsl #1
    c5a4:	subs	r3, r2, #0
    c5a8:	add	r2, ip, #48	; 0x30
    c5ac:	strb	r2, [r1], #-1
    c5b0:	bne	c58c <fputs@plt+0x34d4>
    c5b4:	pop	{r4}		; (ldr r4, [sp], #4)
    c5b8:	bx	lr
    c5bc:	smull	r2, r0, r4, r3
    c5c0:	asr	r2, r3, #31
    c5c4:	mov	ip, r1
    c5c8:	rsb	r2, r2, r0, asr #2
    c5cc:	add	r0, r2, r2, lsl #2
    c5d0:	sub	r0, r3, r0, lsl #1
    c5d4:	subs	r3, r2, #0
    c5d8:	rsb	r2, r0, #48	; 0x30
    c5dc:	strb	r2, [r1], #-1
    c5e0:	bne	c5bc <fputs@plt+0x3504>
    c5e4:	mov	r3, #45	; 0x2d
    c5e8:	strb	r3, [ip, #-1]
    c5ec:	mov	r0, r1
    c5f0:	pop	{r4}		; (ldr r4, [sp], #4)
    c5f4:	bx	lr
    c5f8:	andeq	r7, r1, r3, lsl #7
    c5fc:	ldr	r2, [pc, #56]	; c63c <fputs@plt+0x3584>
    c600:	mov	r1, r0
    c604:	push	{r4}		; (str r4, [sp, #-4]!)
    c608:	movw	r4, #52429	; 0xcccd
    c60c:	movt	r4, #52428	; 0xcccc
    c610:	umull	r0, r3, r4, r1
    c614:	mov	r0, r2
    c618:	lsr	r3, r3, #3
    c61c:	add	ip, r3, r3, lsl #2
    c620:	sub	ip, r1, ip, lsl #1
    c624:	subs	r1, r3, #0
    c628:	add	r3, ip, #48	; 0x30
    c62c:	strb	r3, [r2], #-1
    c630:	bne	c610 <fputs@plt+0x3558>
    c634:	pop	{r4}		; (ldr r4, [sp], #4)
    c638:	bx	lr
    c63c:	muleq	r1, fp, r3
    c640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c644:	movw	r7, #28952	; 0x7118
    c648:	movt	r7, #1
    c64c:	sub	sp, sp, #132	; 0x84
    c650:	mov	r0, #14
    c654:	movw	r5, #29604	; 0x73a4
    c658:	ldr	r3, [r7]
    c65c:	movt	r5, #1
    c660:	movw	r6, #56940	; 0xde6c
    c664:	movt	r6, #0
    c668:	str	r3, [sp, #124]	; 0x7c
    c66c:	bl	8fbc <nl_langinfo@plt>
    c670:	ldr	r4, [r5]
    c674:	cmp	r0, #0
    c678:	movne	r6, r0
    c67c:	cmp	r4, #0
    c680:	beq	c728 <fputs@plt+0x3670>
    c684:	ldrb	r5, [r4]
    c688:	cmp	r5, #0
    c68c:	bne	c6c0 <fputs@plt+0x3608>
    c690:	b	c6f8 <fputs@plt+0x3640>
    c694:	mov	r0, r4
    c698:	bl	8f38 <strlen@plt>
    c69c:	add	r0, r0, #1
    c6a0:	add	r5, r4, r0
    c6a4:	mov	r0, r5
    c6a8:	bl	8f38 <strlen@plt>
    c6ac:	add	r0, r0, #1
    c6b0:	add	r4, r5, r0
    c6b4:	ldrb	r5, [r5, r0]
    c6b8:	cmp	r5, #0
    c6bc:	beq	c6f8 <fputs@plt+0x3640>
    c6c0:	mov	r0, r6
    c6c4:	mov	r1, r4
    c6c8:	bl	9088 <strcmp@plt>
    c6cc:	cmp	r0, #0
    c6d0:	beq	c6e8 <fputs@plt+0x3630>
    c6d4:	cmp	r5, #42	; 0x2a
    c6d8:	bne	c694 <fputs@plt+0x35dc>
    c6dc:	ldrb	r3, [r4, #1]
    c6e0:	cmp	r3, #0
    c6e4:	bne	c694 <fputs@plt+0x35dc>
    c6e8:	mov	r0, r4
    c6ec:	bl	8f38 <strlen@plt>
    c6f0:	add	r0, r0, #1
    c6f4:	add	r6, r4, r0
    c6f8:	ldrb	r0, [r6]
    c6fc:	movw	r3, #59388	; 0xe7fc
    c700:	ldr	r1, [sp, #124]	; 0x7c
    c704:	movt	r3, #0
    c708:	cmp	r0, #0
    c70c:	ldr	r2, [r7]
    c710:	movne	r0, r6
    c714:	moveq	r0, r3
    c718:	cmp	r1, r2
    c71c:	bne	c9c4 <fputs@plt+0x390c>
    c720:	add	sp, sp, #132	; 0x84
    c724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c728:	movw	r0, #59396	; 0xe804
    c72c:	movt	r0, #0
    c730:	bl	8e6c <getenv@plt>
    c734:	subs	r8, r0, #0
    c738:	beq	c904 <fputs@plt+0x384c>
    c73c:	ldrb	r3, [r8]
    c740:	cmp	r3, #0
    c744:	beq	c904 <fputs@plt+0x384c>
    c748:	mov	r0, r8
    c74c:	bl	8f38 <strlen@plt>
    c750:	subs	sl, r0, #0
    c754:	streq	sl, [sp, #12]
    c758:	moveq	ip, sl
    c75c:	beq	c778 <fputs@plt+0x36c0>
    c760:	add	r3, r8, sl
    c764:	ldrb	r3, [r3, #-1]
    c768:	cmp	r3, #47	; 0x2f
    c76c:	moveq	ip, #0
    c770:	movne	ip, #1
    c774:	str	ip, [sp, #12]
    c778:	add	fp, ip, sl
    c77c:	add	r0, fp, #14
    c780:	bl	8fb0 <malloc@plt>
    c784:	subs	r9, r0, #0
    c788:	beq	c9a4 <fputs@plt+0x38ec>
    c78c:	mov	r2, sl
    c790:	mov	r1, r8
    c794:	bl	8f44 <memcpy@plt>
    c798:	ldr	r3, [sp, #12]
    c79c:	add	lr, r9, fp
    c7a0:	cmp	r3, #0
    c7a4:	movne	r3, #47	; 0x2f
    c7a8:	strbne	r3, [r9, sl]
    c7ac:	movw	r3, #59424	; 0xe820
    c7b0:	movt	r3, #0
    c7b4:	ldm	r3!, {r0, r1, r2}
    c7b8:	ldrh	r3, [r3]
    c7bc:	str	r0, [r9, fp]
    c7c0:	mov	r0, r9
    c7c4:	str	r1, [lr, #4]
    c7c8:	mov	r1, #32768	; 0x8000
    c7cc:	strh	r3, [lr, #12]
    c7d0:	str	r2, [lr, #8]
    c7d4:	bl	8e0c <open@plt>
    c7d8:	subs	sl, r0, #0
    c7dc:	blt	c918 <fputs@plt+0x3860>
    c7e0:	movw	r1, #56964	; 0xde84
    c7e4:	movt	r1, #0
    c7e8:	bl	8f68 <fdopen@plt>
    c7ec:	subs	r8, r0, #0
    c7f0:	beq	c9b0 <fputs@plt+0x38f8>
    c7f4:	mov	sl, #0
    c7f8:	ldr	r3, [r8, #4]
    c7fc:	ldr	r2, [r8, #8]
    c800:	cmp	r3, r2
    c804:	bcs	c8f0 <fputs@plt+0x3838>
    c808:	add	r2, r3, #1
    c80c:	str	r2, [r8, #4]
    c810:	ldrb	r0, [r3]
    c814:	cmp	r0, #32
    c818:	beq	c7f8 <fputs@plt+0x3740>
    c81c:	sub	r3, r0, #9
    c820:	cmp	r3, #1
    c824:	bls	c7f8 <fputs@plt+0x3740>
    c828:	cmp	r0, #35	; 0x23
    c82c:	beq	c930 <fputs@plt+0x3878>
    c830:	mov	r1, r8
    c834:	bl	8ee4 <ungetc@plt>
    c838:	mov	r0, r8
    c83c:	movw	r1, #59440	; 0xe830
    c840:	add	r2, sp, #20
    c844:	movt	r1, #0
    c848:	add	r3, sp, #72	; 0x48
    c84c:	bl	90ac <fscanf@plt>
    c850:	cmp	r0, #1
    c854:	ble	c960 <fputs@plt+0x38a8>
    c858:	add	r0, sp, #20
    c85c:	bl	8f38 <strlen@plt>
    c860:	mov	fp, r0
    c864:	add	r0, sp, #72	; 0x48
    c868:	bl	8f38 <strlen@plt>
    c86c:	cmp	sl, #0
    c870:	mov	ip, r0
    c874:	bne	c97c <fputs@plt+0x38c4>
    c878:	add	sl, r0, fp
    c87c:	str	ip, [sp, #4]
    c880:	add	r0, sl, #3
    c884:	add	sl, sl, #2
    c888:	bl	8fb0 <malloc@plt>
    c88c:	ldr	ip, [sp, #4]
    c890:	mov	r2, r0
    c894:	cmp	r2, #0
    c898:	beq	c9c8 <fputs@plt+0x3910>
    c89c:	movw	r3, #65534	; 0xfffe
    c8a0:	movt	r3, #65535	; 0xffff
    c8a4:	rsb	ip, ip, sl
    c8a8:	rsb	r3, fp, r3
    c8ac:	add	r0, r3, ip
    c8b0:	add	r1, sp, #20
    c8b4:	add	r0, r2, r0
    c8b8:	mov	r4, r2
    c8bc:	str	r2, [sp, #8]
    c8c0:	str	ip, [sp, #4]
    c8c4:	bl	8f5c <strcpy@plt>
    c8c8:	ldr	ip, [sp, #4]
    c8cc:	add	r1, sp, #72	; 0x48
    c8d0:	ldr	r2, [sp, #8]
    c8d4:	sub	r0, ip, #1
    c8d8:	add	r0, r2, r0
    c8dc:	bl	8f5c <strcpy@plt>
    c8e0:	ldr	r3, [r8, #4]
    c8e4:	ldr	r2, [r8, #8]
    c8e8:	cmp	r3, r2
    c8ec:	bcc	c808 <fputs@plt+0x3750>
    c8f0:	mov	r0, r8
    c8f4:	bl	8ea8 <__uflow@plt>
    c8f8:	cmn	r0, #1
    c8fc:	beq	c960 <fputs@plt+0x38a8>
    c900:	b	c814 <fputs@plt+0x375c>
    c904:	movw	r0, #59412	; 0xe814
    c908:	movt	r0, #0
    c90c:	bl	cd84 <fputs@plt+0x3ccc>
    c910:	mov	r8, r0
    c914:	b	c748 <fputs@plt+0x3690>
    c918:	movw	r4, #56940	; 0xde6c
    c91c:	movt	r4, #0
    c920:	mov	r0, r9
    c924:	bl	8efc <free@plt>
    c928:	str	r4, [r5]
    c92c:	b	c684 <fputs@plt+0x35cc>
    c930:	ldr	r3, [r8, #4]
    c934:	ldr	r2, [r8, #8]
    c938:	cmp	r3, r2
    c93c:	bcs	c9e4 <fputs@plt+0x392c>
    c940:	add	r2, r3, #1
    c944:	str	r2, [r8, #4]
    c948:	ldrb	r0, [r3]
    c94c:	cmp	r0, #10
    c950:	cmnne	r0, #1
    c954:	bne	c930 <fputs@plt+0x3878>
    c958:	cmn	r0, #1
    c95c:	bne	c7f8 <fputs@plt+0x3740>
    c960:	mov	r0, r8
    c964:	bl	8e60 <fclose@plt>
    c968:	cmp	sl, #0
    c96c:	beq	c918 <fputs@plt+0x3860>
    c970:	mov	r3, #0
    c974:	strb	r3, [r4, sl]
    c978:	b	c920 <fputs@plt+0x3868>
    c97c:	add	r3, fp, r0
    c980:	mov	r0, r4
    c984:	add	sl, r3, sl
    c988:	str	ip, [sp, #4]
    c98c:	add	r1, sl, #3
    c990:	add	sl, sl, #2
    c994:	bl	9058 <realloc@plt>
    c998:	ldr	ip, [sp, #4]
    c99c:	mov	r2, r0
    c9a0:	b	c894 <fputs@plt+0x37dc>
    c9a4:	movw	r4, #56940	; 0xde6c
    c9a8:	movt	r4, #0
    c9ac:	b	c928 <fputs@plt+0x3870>
    c9b0:	mov	r0, sl
    c9b4:	movw	r4, #56940	; 0xde6c
    c9b8:	bl	8f8c <close@plt>
    c9bc:	movt	r4, #0
    c9c0:	b	c920 <fputs@plt+0x3868>
    c9c4:	bl	8fc8 <__stack_chk_fail@plt>
    c9c8:	mov	r0, r4
    c9cc:	movw	r4, #56940	; 0xde6c
    c9d0:	bl	8efc <free@plt>
    c9d4:	mov	r0, r8
    c9d8:	bl	8e60 <fclose@plt>
    c9dc:	movt	r4, #0
    c9e0:	b	c920 <fputs@plt+0x3868>
    c9e4:	mov	r0, r8
    c9e8:	bl	8ea8 <__uflow@plt>
    c9ec:	b	c94c <fputs@plt+0x3894>
    c9f0:	push	{r4, lr}
    c9f4:	subs	r4, r0, #0
    c9f8:	beq	ca28 <fputs@plt+0x3970>
    c9fc:	mov	r1, #47	; 0x2f
    ca00:	bl	8ed8 <strrchr@plt>
    ca04:	subs	r3, r0, #0
    ca08:	beq	ca1c <fputs@plt+0x3964>
    ca0c:	mov	r2, #0
    ca10:	mov	r0, r4
    ca14:	strb	r2, [r3]
    ca18:	pop	{r4, pc}
    ca1c:	movw	r0, #59452	; 0xe83c
    ca20:	movt	r0, #0
    ca24:	pop	{r4, pc}
    ca28:	mov	r0, r4
    ca2c:	pop	{r4, pc}
    ca30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ca34:	subs	r8, r0, #0
    ca38:	mov	r5, r1
    ca3c:	beq	cb68 <fputs@plt+0x3ab0>
    ca40:	ldrb	r6, [r8]
    ca44:	cmp	r6, #0
    ca48:	beq	cb1c <fputs@plt+0x3a64>
    ca4c:	mov	r1, #0
    ca50:	bl	8f08 <access@plt>
    ca54:	cmp	r0, #0
    ca58:	beq	cb50 <fputs@plt+0x3a98>
    ca5c:	mov	r0, r8
    ca60:	mov	sl, #47	; 0x2f
    ca64:	bl	8f38 <strlen@plt>
    ca68:	add	r9, r0, #1
    ca6c:	b	caf4 <fputs@plt+0x3a3c>
    ca70:	cmp	r5, r4
    ca74:	bcs	ca90 <fputs@plt+0x39d8>
    ca78:	movw	r0, #59456	; 0xe840
    ca7c:	ldrb	r1, [r4, #-1]
    ca80:	movt	r0, #0
    ca84:	bl	8e90 <strchr@plt>
    ca88:	cmp	r0, #0
    ca8c:	beq	cb24 <fputs@plt+0x3a6c>
    ca90:	rsb	r7, r5, r4
    ca94:	add	r0, r9, r7
    ca98:	bl	8fa4 <_Znaj@plt>
    ca9c:	mov	r1, r5
    caa0:	mov	r2, r7
    caa4:	mov	r6, r0
    caa8:	bl	8f44 <memcpy@plt>
    caac:	mov	r3, #0
    cab0:	add	r0, r7, r3
    cab4:	mov	r1, r8
    cab8:	add	r0, r6, r0
    cabc:	bl	8f5c <strcpy@plt>
    cac0:	mov	r0, r6
    cac4:	mov	r1, #0
    cac8:	bl	8f08 <access@plt>
    cacc:	cmp	r0, #0
    cad0:	beq	cb1c <fputs@plt+0x3a64>
    cad4:	cmp	r6, #0
    cad8:	beq	cae4 <fputs@plt+0x3a2c>
    cadc:	mov	r0, r6
    cae0:	bl	8ff8 <_ZdaPv@plt>
    cae4:	ldrb	r0, [r4]
    cae8:	cmp	r0, #0
    caec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    caf0:	add	r5, r4, #1
    caf4:	mov	r0, r5
    caf8:	mov	r1, #58	; 0x3a
    cafc:	bl	8e90 <strchr@plt>
    cb00:	subs	r4, r0, #0
    cb04:	bne	ca70 <fputs@plt+0x39b8>
    cb08:	mov	r1, r4
    cb0c:	mov	r0, r5
    cb10:	bl	8e90 <strchr@plt>
    cb14:	mov	r4, r0
    cb18:	b	ca70 <fputs@plt+0x39b8>
    cb1c:	mov	r0, r6
    cb20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    cb24:	rsb	r7, r5, r4
    cb28:	add	r0, r7, #1
    cb2c:	add	r0, r9, r0
    cb30:	bl	8fa4 <_Znaj@plt>
    cb34:	mov	r1, r5
    cb38:	mov	r2, r7
    cb3c:	mov	r6, r0
    cb40:	bl	8f44 <memcpy@plt>
    cb44:	strb	sl, [r6, r7]
    cb48:	mov	r3, #1
    cb4c:	b	cab0 <fputs@plt+0x39f8>
    cb50:	bl	d86c <fputs@plt+0x47b4>
    cb54:	bl	8fa4 <_Znaj@plt>
    cb58:	mov	r1, r0
    cb5c:	mov	r0, r8
    cb60:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    cb64:	b	8f80 <realpath@plt>
    cb68:	mov	r0, r8
    cb6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    cb70:	push	{r4, r5, r6, r7, r8, lr}
    cb74:	mov	r6, r0
    cb78:	mov	r0, r1
    cb7c:	mov	r7, r2
    cb80:	bl	d840 <fputs@plt+0x4788>
    cb84:	movw	r1, #59460	; 0xe844
    cb88:	movt	r1, #0
    cb8c:	mov	r8, r0
    cb90:	b	cbf8 <fputs@plt+0x3b40>
    cb94:	mov	r0, r6
    cb98:	bl	8f38 <strlen@plt>
    cb9c:	mov	r4, r0
    cba0:	mov	r0, r5
    cba4:	bl	8f38 <strlen@plt>
    cba8:	add	r0, r4, r0
    cbac:	add	r0, r0, #1
    cbb0:	bl	8fa4 <_Znaj@plt>
    cbb4:	mov	r1, r6
    cbb8:	mov	r4, r0
    cbbc:	bl	8eb4 <stpcpy@plt>
    cbc0:	mov	r1, r5
    cbc4:	bl	8f5c <strcpy@plt>
    cbc8:	mov	r0, r4
    cbcc:	mov	r1, r7
    cbd0:	bl	ca30 <fputs@plt+0x3978>
    cbd4:	mov	r5, r0
    cbd8:	subs	r0, r4, #0
    cbdc:	beq	cbe4 <fputs@plt+0x3b2c>
    cbe0:	bl	8ff8 <_ZdaPv@plt>
    cbe4:	cmp	r5, #0
    cbe8:	movw	r1, #59460	; 0xe844
    cbec:	mov	r0, r5
    cbf0:	movt	r1, #0
    cbf4:	bne	cc08 <fputs@plt+0x3b50>
    cbf8:	bl	8fec <strtok@plt>
    cbfc:	subs	r5, r0, #0
    cc00:	bne	cb94 <fputs@plt+0x3adc>
    cc04:	mov	r5, #0
    cc08:	cmp	r8, #0
    cc0c:	beq	cc18 <fputs@plt+0x3b60>
    cc10:	mov	r0, r8
    cc14:	bl	8ff8 <_ZdaPv@plt>
    cc18:	mov	r0, r5
    cc1c:	pop	{r4, r5, r6, r7, r8, pc}
    cc20:	ldrb	r3, [r0]
    cc24:	cmp	r3, #0
    cc28:	bxeq	lr
    cc2c:	add	r2, r0, #1
    cc30:	mov	r1, #47	; 0x2f
    cc34:	cmp	r3, #92	; 0x5c
    cc38:	strbeq	r1, [r2, #-1]
    cc3c:	ldrb	r3, [r2], #1
    cc40:	cmp	r3, #0
    cc44:	bne	cc34 <fputs@plt+0x3b7c>
    cc48:	bx	lr
    cc4c:	push	{r4, r5, r6, lr}
    cc50:	bl	d86c <fputs@plt+0x47b4>
    cc54:	movw	r4, #29612	; 0x73ac
    cc58:	bl	8fa4 <_Znaj@plt>
    cc5c:	movt	r4, #1
    cc60:	movw	r5, #29608	; 0x73a8
    cc64:	movt	r5, #1
    cc68:	ldr	r6, [r5]
    cc6c:	str	r0, [r4]
    cc70:	movw	r0, #59464	; 0xe848
    cc74:	movt	r0, #0
    cc78:	bl	8e6c <getenv@plt>
    cc7c:	mov	r1, r0
    cc80:	mov	r0, r6
    cc84:	bl	ca30 <fputs@plt+0x3978>
    cc88:	cmp	r0, #0
    cc8c:	str	r0, [r4]
    cc90:	beq	ccdc <fputs@plt+0x3c24>
    cc94:	ldrb	r3, [r0]
    cc98:	cmp	r3, #0
    cc9c:	addne	r0, r0, #1
    cca0:	movne	r2, #47	; 0x2f
    cca4:	beq	ccbc <fputs@plt+0x3c04>
    cca8:	cmp	r3, #92	; 0x5c
    ccac:	strbeq	r2, [r0, #-1]
    ccb0:	ldrb	r3, [r0], #1
    ccb4:	cmp	r3, #0
    ccb8:	bne	cca8 <fputs@plt+0x3bf0>
    ccbc:	ldr	r0, [r4]
    ccc0:	bl	c9f0 <fputs@plt+0x3938>
    ccc4:	str	r0, [r4]
    ccc8:	bl	c9f0 <fputs@plt+0x3938>
    cccc:	str	r0, [r4]
    ccd0:	bl	8f38 <strlen@plt>
    ccd4:	str	r0, [r4, #4]
    ccd8:	pop	{r4, r5, r6, pc}
    ccdc:	ldr	r0, [r5]
    cce0:	mov	r1, #46	; 0x2e
    cce4:	bl	8e90 <strchr@plt>
    cce8:	cmp	r0, #0
    ccec:	popne	{r4, r5, r6, pc}
    ccf0:	movw	r0, #59472	; 0xe850
    ccf4:	movt	r0, #0
    ccf8:	bl	8e6c <getenv@plt>
    ccfc:	bl	d840 <fputs@plt+0x4788>
    cd00:	subs	r6, r0, #0
    cd04:	beq	cd44 <fputs@plt+0x3c8c>
    cd08:	movw	r0, #59464	; 0xe848
    cd0c:	movt	r0, #0
    cd10:	ldr	r5, [r5]
    cd14:	bl	8e6c <getenv@plt>
    cd18:	mov	r1, r6
    cd1c:	mov	r2, r0
    cd20:	mov	r0, r5
    cd24:	bl	cb70 <fputs@plt+0x3ab8>
    cd28:	str	r0, [r4]
    cd2c:	mov	r0, r6
    cd30:	bl	8ff8 <_ZdaPv@plt>
    cd34:	ldr	r0, [r4]
    cd38:	cmp	r0, #0
    cd3c:	bne	cc94 <fputs@plt+0x3bdc>
    cd40:	pop	{r4, r5, r6, pc}
    cd44:	movw	r0, #56940	; 0xde6c
    cd48:	movt	r0, #0
    cd4c:	bl	d840 <fputs@plt+0x4788>
    cd50:	ldr	r5, [r5]
    cd54:	mov	r6, r0
    cd58:	movw	r0, #59464	; 0xe848
    cd5c:	movt	r0, #0
    cd60:	bl	8e6c <getenv@plt>
    cd64:	mov	r1, r6
    cd68:	mov	r2, r0
    cd6c:	mov	r0, r5
    cd70:	bl	cb70 <fputs@plt+0x3ab8>
    cd74:	cmp	r6, #0
    cd78:	str	r0, [r4]
    cd7c:	beq	cd38 <fputs@plt+0x3c80>
    cd80:	b	cd2c <fputs@plt+0x3c74>
    cd84:	push	{r4, r5, r6, lr}
    cd88:	movw	r4, #29612	; 0x73ac
    cd8c:	movt	r4, #1
    cd90:	mov	r5, r0
    cd94:	ldr	r3, [r4]
    cd98:	cmp	r3, #0
    cd9c:	beq	ce00 <fputs@plt+0x3d48>
    cda0:	movw	r0, #59480	; 0xe858
    cda4:	mov	r1, r5
    cda8:	movt	r0, #0
    cdac:	mov	r2, #4
    cdb0:	bl	9028 <strncmp@plt>
    cdb4:	cmp	r0, #0
    cdb8:	bne	cdf4 <fputs@plt+0x3d3c>
    cdbc:	add	r5, r5, #4
    cdc0:	mov	r0, r5
    cdc4:	bl	8f38 <strlen@plt>
    cdc8:	ldr	r3, [r4, #4]
    cdcc:	add	r3, r3, #1
    cdd0:	add	r0, r3, r0
    cdd4:	bl	8fa4 <_Znaj@plt>
    cdd8:	ldr	r1, [r4]
    cddc:	mov	r6, r0
    cde0:	bl	8eb4 <stpcpy@plt>
    cde4:	mov	r1, r5
    cde8:	bl	8f5c <strcpy@plt>
    cdec:	mov	r0, r6
    cdf0:	pop	{r4, r5, r6, pc}
    cdf4:	mov	r0, r5
    cdf8:	pop	{r4, r5, r6, lr}
    cdfc:	b	d840 <fputs@plt+0x4788>
    ce00:	bl	cc4c <fputs@plt+0x3b94>
    ce04:	b	cda0 <fputs@plt+0x3ce8>
    ce08:	push	{r4, lr}
    ce0c:	mov	r1, #0
    ce10:	mov	r4, r0
    ce14:	bl	8f08 <access@plt>
    ce18:	cmp	r0, #0
    ce1c:	mov	r0, r4
    ce20:	bne	ce2c <fputs@plt+0x3d74>
    ce24:	pop	{r4, lr}
    ce28:	b	d840 <fputs@plt+0x4788>
    ce2c:	pop	{r4, lr}
    ce30:	b	cd84 <fputs@plt+0x3ccc>
    ce34:	cmp	r1, r2
    ce38:	push	{r3, r4, r5, lr}
    ce3c:	mov	r4, r2
    ce40:	mov	r5, r3
    ce44:	bge	ce6c <fputs@plt+0x3db4>
    ce48:	cmp	r0, #0
    ce4c:	beq	ce54 <fputs@plt+0x3d9c>
    ce50:	bl	8ff8 <_ZdaPv@plt>
    ce54:	cmp	r4, #0
    ce58:	beq	ce74 <fputs@plt+0x3dbc>
    ce5c:	lsl	r0, r4, #1
    ce60:	str	r0, [r5]
    ce64:	pop	{r3, r4, r5, lr}
    ce68:	b	8fa4 <_Znaj@plt>
    ce6c:	str	r1, [r3]
    ce70:	pop	{r3, r4, r5, pc}
    ce74:	str	r4, [r5]
    ce78:	mov	r0, r4
    ce7c:	pop	{r3, r4, r5, pc}
    ce80:	cmp	r1, r3
    ce84:	push	{r3, r4, r5, r6, r7, lr}
    ce88:	mov	r4, r3
    ce8c:	mov	r6, r2
    ce90:	mov	r5, r0
    ce94:	bge	ced8 <fputs@plt+0x3e20>
    ce98:	cmp	r3, #0
    ce9c:	beq	cee4 <fputs@plt+0x3e2c>
    cea0:	lsl	r0, r3, #1
    cea4:	ldr	r3, [sp, #24]
    cea8:	str	r0, [r3]
    ceac:	bl	8fa4 <_Znaj@plt>
    ceb0:	cmp	r6, #0
    ceb4:	cmpne	r6, r4
    ceb8:	mov	r7, r0
    cebc:	blt	cf08 <fputs@plt+0x3e50>
    cec0:	cmp	r5, #0
    cec4:	beq	cf00 <fputs@plt+0x3e48>
    cec8:	mov	r0, r5
    cecc:	bl	8ff8 <_ZdaPv@plt>
    ced0:	mov	r0, r7
    ced4:	pop	{r3, r4, r5, r6, r7, pc}
    ced8:	ldr	r3, [sp, #24]
    cedc:	str	r1, [r3]
    cee0:	pop	{r3, r4, r5, r6, r7, pc}
    cee4:	cmp	r0, #0
    cee8:	beq	cef0 <fputs@plt+0x3e38>
    ceec:	bl	8ff8 <_ZdaPv@plt>
    cef0:	ldr	r3, [sp, #24]
    cef4:	mov	r0, #0
    cef8:	str	r0, [r3]
    cefc:	pop	{r3, r4, r5, r6, r7, pc}
    cf00:	mov	r0, r7
    cf04:	pop	{r3, r4, r5, r6, r7, pc}
    cf08:	mov	r2, r6
    cf0c:	mov	r1, r5
    cf10:	bl	8f44 <memcpy@plt>
    cf14:	b	cec0 <fputs@plt+0x3e08>
    cf18:	mov	r2, #0
    cf1c:	str	r2, [r0]
    cf20:	str	r2, [r0, #4]
    cf24:	str	r2, [r0, #8]
    cf28:	bx	lr
    cf2c:	cmp	r2, #0
    cf30:	push	{r4, r5, r6, lr}
    cf34:	mov	r4, r0
    cf38:	mov	r5, r2
    cf3c:	mov	r6, r1
    cf40:	str	r2, [r4, #4]
    cf44:	blt	cf5c <fputs@plt+0x3ea4>
    cf48:	bne	cf6c <fputs@plt+0x3eb4>
    cf4c:	str	r2, [r4, #8]
    cf50:	mov	r0, r4
    cf54:	str	r2, [r4]
    cf58:	pop	{r4, r5, r6, pc}
    cf5c:	movw	r1, #59488	; 0xe860
    cf60:	mov	r0, #86	; 0x56
    cf64:	movt	r1, #0
    cf68:	bl	b090 <fputs@plt+0x1fd8>
    cf6c:	lsl	r0, r5, #1
    cf70:	str	r0, [r4, #8]
    cf74:	bl	8fa4 <_Znaj@plt>
    cf78:	mov	r1, r6
    cf7c:	mov	r2, r5
    cf80:	str	r0, [r4]
    cf84:	bl	8f44 <memcpy@plt>
    cf88:	mov	r0, r4
    cf8c:	pop	{r4, r5, r6, pc}
    cf90:	push	{r3, r4, r5, lr}
    cf94:	subs	r5, r1, #0
    cf98:	mov	r4, r0
    cf9c:	streq	r5, [r0, #4]
    cfa0:	streq	r5, [r0]
    cfa4:	streq	r5, [r0, #8]
    cfa8:	beq	cfd4 <fputs@plt+0x3f1c>
    cfac:	mov	r0, r5
    cfb0:	bl	8f38 <strlen@plt>
    cfb4:	cmp	r0, #0
    cfb8:	mov	r2, r0
    cfbc:	str	r0, [r4, #4]
    cfc0:	bne	cfdc <fputs@plt+0x3f24>
    cfc4:	str	r0, [r4, #8]
    cfc8:	str	r0, [r4]
    cfcc:	mov	r1, r5
    cfd0:	bl	8f44 <memcpy@plt>
    cfd4:	mov	r0, r4
    cfd8:	pop	{r3, r4, r5, pc}
    cfdc:	lsl	r0, r0, #1
    cfe0:	str	r0, [r4, #8]
    cfe4:	bl	8fa4 <_Znaj@plt>
    cfe8:	ldr	r2, [r4, #4]
    cfec:	b	cfc8 <fputs@plt+0x3f10>
    cff0:	push	{r3, r4, r5, lr}
    cff4:	mov	r4, r0
    cff8:	mov	r3, #1
    cffc:	mov	r0, #2
    d000:	str	r3, [r4, #4]
    d004:	mov	r5, r1
    d008:	str	r0, [r4, #8]
    d00c:	bl	8fa4 <_Znaj@plt>
    d010:	mov	r3, r0
    d014:	mov	r0, r4
    d018:	str	r3, [r4]
    d01c:	strb	r5, [r3]
    d020:	pop	{r3, r4, r5, pc}
    d024:	push	{r3, r4, r5, lr}
    d028:	mov	r4, r0
    d02c:	ldr	r0, [r1, #4]
    d030:	mov	r5, r1
    d034:	cmp	r0, #0
    d038:	str	r0, [r4, #4]
    d03c:	bne	d050 <fputs@plt+0x3f98>
    d040:	str	r0, [r4, #8]
    d044:	str	r0, [r4]
    d048:	mov	r0, r4
    d04c:	pop	{r3, r4, r5, pc}
    d050:	lsl	r0, r0, #1
    d054:	str	r0, [r4, #8]
    d058:	bl	8fa4 <_Znaj@plt>
    d05c:	ldr	r2, [r4, #4]
    d060:	cmp	r2, #0
    d064:	str	r0, [r4]
    d068:	beq	d048 <fputs@plt+0x3f90>
    d06c:	ldr	r1, [r5]
    d070:	bl	8f44 <memcpy@plt>
    d074:	mov	r0, r4
    d078:	pop	{r3, r4, r5, pc}
    d07c:	push	{r4, lr}
    d080:	mov	r4, r0
    d084:	ldr	r0, [r0]
    d088:	cmp	r0, #0
    d08c:	beq	d094 <fputs@plt+0x3fdc>
    d090:	bl	8ff8 <_ZdaPv@plt>
    d094:	mov	r0, r4
    d098:	pop	{r4, pc}
    d09c:	push	{r3, r4, r5, lr}
    d0a0:	mov	r5, r1
    d0a4:	mov	r3, r0
    d0a8:	mov	r4, r0
    d0ac:	ldr	r2, [r5, #4]
    d0b0:	ldr	r0, [r0]
    d0b4:	ldr	r1, [r3, #8]!
    d0b8:	bl	ce34 <fputs@plt+0x3d7c>
    d0bc:	ldr	r2, [r5, #4]
    d0c0:	cmp	r2, #0
    d0c4:	stm	r4, {r0, r2}
    d0c8:	beq	d0d4 <fputs@plt+0x401c>
    d0cc:	ldr	r1, [r5]
    d0d0:	bl	8f44 <memcpy@plt>
    d0d4:	mov	r0, r4
    d0d8:	pop	{r3, r4, r5, pc}
    d0dc:	push	{r4, r5, r6, lr}
    d0e0:	subs	r6, r1, #0
    d0e4:	mov	r4, r0
    d0e8:	beq	d128 <fputs@plt+0x4070>
    d0ec:	mov	r0, r6
    d0f0:	bl	8f38 <strlen@plt>
    d0f4:	mov	r3, r4
    d0f8:	ldr	r1, [r3, #8]!
    d0fc:	mov	r5, r0
    d100:	mov	r2, r0
    d104:	ldr	r0, [r4]
    d108:	bl	ce34 <fputs@plt+0x3d7c>
    d10c:	str	r5, [r4, #4]
    d110:	mov	r2, r5
    d114:	mov	r1, r6
    d118:	str	r0, [r4]
    d11c:	bl	8f44 <memcpy@plt>
    d120:	mov	r0, r4
    d124:	pop	{r4, r5, r6, pc}
    d128:	ldr	r0, [r0]
    d12c:	cmp	r0, #0
    d130:	beq	d138 <fputs@plt+0x4080>
    d134:	bl	8ff8 <_ZdaPv@plt>
    d138:	mov	r3, #0
    d13c:	mov	r0, r4
    d140:	str	r3, [r4, #4]
    d144:	str	r3, [r4]
    d148:	str	r3, [r4, #8]
    d14c:	pop	{r4, r5, r6, pc}
    d150:	push	{r3, r4, r5, lr}
    d154:	mov	r3, r0
    d158:	mov	r4, r0
    d15c:	mov	r5, r1
    d160:	mov	r2, #1
    d164:	ldr	r1, [r3, #8]!
    d168:	ldr	r0, [r0]
    d16c:	bl	ce34 <fputs@plt+0x3d7c>
    d170:	mov	r2, #1
    d174:	str	r2, [r4, #4]
    d178:	mov	r3, r0
    d17c:	str	r0, [r4]
    d180:	mov	r0, r4
    d184:	strb	r5, [r3]
    d188:	pop	{r3, r4, r5, pc}
    d18c:	push	{r3, r4, r5, lr}
    d190:	mov	r5, r0
    d194:	ldr	r0, [r0]
    d198:	mov	r4, r1
    d19c:	cmp	r0, #0
    d1a0:	beq	d1a8 <fputs@plt+0x40f0>
    d1a4:	bl	8ff8 <_ZdaPv@plt>
    d1a8:	ldmib	r4, {r1, r2}
    d1ac:	mov	r3, #0
    d1b0:	ldr	r0, [r4]
    d1b4:	stm	r5, {r0, r1, r2}
    d1b8:	str	r3, [r4]
    d1bc:	str	r3, [r4, #4]
    d1c0:	str	r3, [r4, #8]
    d1c4:	pop	{r3, r4, r5, pc}
    d1c8:	mov	ip, r0
    d1cc:	ldr	r2, [r0, #4]
    d1d0:	ldr	r1, [ip, #8]!
    d1d4:	push	{r4, lr}
    d1d8:	sub	sp, sp, #8
    d1dc:	mov	r4, r0
    d1e0:	add	r3, r2, #1
    d1e4:	ldr	r0, [r0]
    d1e8:	str	ip, [sp]
    d1ec:	bl	ce80 <fputs@plt+0x3dc8>
    d1f0:	str	r0, [r4]
    d1f4:	add	sp, sp, #8
    d1f8:	pop	{r4, pc}
    d1fc:	push	{r4, r5, r6, r7, lr}
    d200:	subs	r6, r1, #0
    d204:	sub	sp, sp, #12
    d208:	mov	r4, r0
    d20c:	beq	d248 <fputs@plt+0x4190>
    d210:	mov	r0, r6
    d214:	bl	8f38 <strlen@plt>
    d218:	ldr	r2, [r4, #4]
    d21c:	ldr	r1, [r4, #8]
    d220:	add	r5, r2, r0
    d224:	mov	r7, r0
    d228:	cmp	r5, r1
    d22c:	bgt	d254 <fputs@plt+0x419c>
    d230:	ldr	r0, [r4]
    d234:	add	r0, r0, r2
    d238:	mov	r1, r6
    d23c:	mov	r2, r7
    d240:	bl	8f44 <memcpy@plt>
    d244:	str	r5, [r4, #4]
    d248:	mov	r0, r4
    d24c:	add	sp, sp, #12
    d250:	pop	{r4, r5, r6, r7, pc}
    d254:	mov	lr, r4
    d258:	mov	r3, r5
    d25c:	ldr	r0, [lr], #8
    d260:	str	lr, [sp]
    d264:	bl	ce80 <fputs@plt+0x3dc8>
    d268:	ldr	r2, [r4, #4]
    d26c:	str	r0, [r4]
    d270:	b	d234 <fputs@plt+0x417c>
    d274:	ldr	ip, [r1, #4]
    d278:	push	{r4, r5, r6, lr}
    d27c:	cmp	ip, #0
    d280:	sub	sp, sp, #8
    d284:	mov	r5, r1
    d288:	mov	r4, r0
    d28c:	beq	d2bc <fputs@plt+0x4204>
    d290:	ldr	lr, [r0, #4]
    d294:	ldr	r1, [r0, #8]
    d298:	add	r6, ip, lr
    d29c:	cmp	r6, r1
    d2a0:	bgt	d2c8 <fputs@plt+0x4210>
    d2a4:	ldr	r0, [r0]
    d2a8:	mov	r2, ip
    d2ac:	add	r0, r0, lr
    d2b0:	ldr	r1, [r5]
    d2b4:	bl	8f44 <memcpy@plt>
    d2b8:	str	r6, [r4, #4]
    d2bc:	mov	r0, r4
    d2c0:	add	sp, sp, #8
    d2c4:	pop	{r4, r5, r6, pc}
    d2c8:	mov	ip, r0
    d2cc:	mov	r2, lr
    d2d0:	ldr	r0, [ip], #8
    d2d4:	mov	r3, r6
    d2d8:	str	ip, [sp]
    d2dc:	bl	ce80 <fputs@plt+0x3dc8>
    d2e0:	ldr	r2, [r5, #4]
    d2e4:	ldr	lr, [r4, #4]
    d2e8:	str	r0, [r4]
    d2ec:	b	d2ac <fputs@plt+0x41f4>
    d2f0:	push	{r4, r5, r6, r7, lr}
    d2f4:	subs	r6, r2, #0
    d2f8:	sub	sp, sp, #12
    d2fc:	mov	r4, r0
    d300:	mov	r7, r1
    d304:	ble	d334 <fputs@plt+0x427c>
    d308:	ldr	r2, [r0, #4]
    d30c:	ldr	r1, [r0, #8]
    d310:	add	r5, r2, r6
    d314:	cmp	r5, r1
    d318:	bgt	d33c <fputs@plt+0x4284>
    d31c:	ldr	r0, [r0]
    d320:	add	r0, r0, r2
    d324:	mov	r1, r7
    d328:	mov	r2, r6
    d32c:	bl	8f44 <memcpy@plt>
    d330:	str	r5, [r4, #4]
    d334:	add	sp, sp, #12
    d338:	pop	{r4, r5, r6, r7, pc}
    d33c:	mov	lr, r0
    d340:	mov	r3, r5
    d344:	ldr	r0, [lr], #8
    d348:	str	lr, [sp]
    d34c:	bl	ce80 <fputs@plt+0x3dc8>
    d350:	ldr	r2, [r4, #4]
    d354:	str	r0, [r4]
    d358:	b	d320 <fputs@plt+0x4268>
    d35c:	push	{r4, r5, r6, r7, r8, lr}
    d360:	mov	r6, r2
    d364:	ldr	r5, [sp, #24]
    d368:	mov	r4, r0
    d36c:	mov	r8, r1
    d370:	mov	r7, r3
    d374:	cmp	r2, #0
    d378:	cmpge	r5, #0
    d37c:	blt	d3e0 <fputs@plt+0x4328>
    d380:	add	ip, r6, r5
    d384:	str	ip, [r4, #4]
    d388:	cmp	ip, #0
    d38c:	streq	ip, [r4, #8]
    d390:	streq	ip, [r4]
    d394:	beq	d3c4 <fputs@plt+0x430c>
    d398:	lsl	r0, ip, #1
    d39c:	str	r0, [r4, #8]
    d3a0:	bl	8fa4 <_Znaj@plt>
    d3a4:	cmp	r6, #0
    d3a8:	str	r0, [r4]
    d3ac:	beq	d3cc <fputs@plt+0x4314>
    d3b0:	mov	r1, r8
    d3b4:	mov	r2, r6
    d3b8:	bl	8f44 <memcpy@plt>
    d3bc:	cmp	r5, #0
    d3c0:	bne	d3f4 <fputs@plt+0x433c>
    d3c4:	mov	r0, r4
    d3c8:	pop	{r4, r5, r6, r7, r8, pc}
    d3cc:	mov	r1, r7
    d3d0:	mov	r2, r5
    d3d4:	bl	8f44 <memcpy@plt>
    d3d8:	mov	r0, r4
    d3dc:	pop	{r4, r5, r6, r7, r8, pc}
    d3e0:	movw	r1, #59488	; 0xe860
    d3e4:	mov	r0, #212	; 0xd4
    d3e8:	movt	r1, #0
    d3ec:	bl	b090 <fputs@plt+0x1fd8>
    d3f0:	b	d380 <fputs@plt+0x42c8>
    d3f4:	ldr	r0, [r4]
    d3f8:	mov	r1, r7
    d3fc:	mov	r2, r5
    d400:	add	r0, r0, r6
    d404:	bl	8f44 <memcpy@plt>
    d408:	mov	r0, r4
    d40c:	pop	{r4, r5, r6, r7, r8, pc}
    d410:	push	{r3, lr}
    d414:	ldr	r2, [r0, #4]
    d418:	ldr	r3, [r1, #4]
    d41c:	cmp	r2, r3
    d420:	bgt	d448 <fputs@plt+0x4390>
    d424:	cmp	r2, #0
    d428:	beq	d46c <fputs@plt+0x43b4>
    d42c:	ldr	r0, [r0]
    d430:	ldr	r1, [r1]
    d434:	bl	8e30 <memcmp@plt>
    d438:	cmp	r0, #0
    d43c:	movgt	r0, #0
    d440:	movle	r0, #1
    d444:	pop	{r3, pc}
    d448:	cmp	r3, #0
    d44c:	beq	d464 <fputs@plt+0x43ac>
    d450:	mov	r2, r3
    d454:	ldr	r0, [r0]
    d458:	ldr	r1, [r1]
    d45c:	bl	8e30 <memcmp@plt>
    d460:	lsr	r3, r0, #31
    d464:	mov	r0, r3
    d468:	pop	{r3, pc}
    d46c:	mov	r0, #1
    d470:	pop	{r3, pc}
    d474:	push	{r3, lr}
    d478:	ldr	r2, [r0, #4]
    d47c:	ldr	r3, [r1, #4]
    d480:	cmp	r2, r3
    d484:	bge	d4ac <fputs@plt+0x43f4>
    d488:	cmp	r2, #0
    d48c:	beq	d4d0 <fputs@plt+0x4418>
    d490:	ldr	r0, [r0]
    d494:	ldr	r1, [r1]
    d498:	bl	8e30 <memcmp@plt>
    d49c:	cmp	r0, #0
    d4a0:	movgt	r0, #0
    d4a4:	movle	r0, #1
    d4a8:	pop	{r3, pc}
    d4ac:	cmp	r3, #0
    d4b0:	beq	d4c8 <fputs@plt+0x4410>
    d4b4:	mov	r2, r3
    d4b8:	ldr	r0, [r0]
    d4bc:	ldr	r1, [r1]
    d4c0:	bl	8e30 <memcmp@plt>
    d4c4:	lsr	r3, r0, #31
    d4c8:	mov	r0, r3
    d4cc:	pop	{r3, pc}
    d4d0:	mov	r0, #1
    d4d4:	pop	{r3, pc}
    d4d8:	push	{r3, lr}
    d4dc:	ldr	r2, [r1, #4]
    d4e0:	ldr	r3, [r0, #4]
    d4e4:	cmp	r3, r2
    d4e8:	blt	d50c <fputs@plt+0x4454>
    d4ec:	cmp	r2, #0
    d4f0:	beq	d538 <fputs@plt+0x4480>
    d4f4:	ldr	r0, [r0]
    d4f8:	ldr	r1, [r1]
    d4fc:	bl	8e30 <memcmp@plt>
    d500:	mvn	r0, r0
    d504:	lsr	r0, r0, #31
    d508:	pop	{r3, pc}
    d50c:	cmp	r3, #0
    d510:	beq	d530 <fputs@plt+0x4478>
    d514:	mov	r2, r3
    d518:	ldr	r0, [r0]
    d51c:	ldr	r1, [r1]
    d520:	bl	8e30 <memcmp@plt>
    d524:	cmp	r0, #0
    d528:	movle	r3, #0
    d52c:	movgt	r3, #1
    d530:	mov	r0, r3
    d534:	pop	{r3, pc}
    d538:	mov	r0, #1
    d53c:	pop	{r3, pc}
    d540:	push	{r3, lr}
    d544:	ldr	r2, [r1, #4]
    d548:	ldr	r3, [r0, #4]
    d54c:	cmp	r3, r2
    d550:	ble	d574 <fputs@plt+0x44bc>
    d554:	cmp	r2, #0
    d558:	beq	d5a0 <fputs@plt+0x44e8>
    d55c:	ldr	r0, [r0]
    d560:	ldr	r1, [r1]
    d564:	bl	8e30 <memcmp@plt>
    d568:	mvn	r0, r0
    d56c:	lsr	r0, r0, #31
    d570:	pop	{r3, pc}
    d574:	cmp	r3, #0
    d578:	beq	d598 <fputs@plt+0x44e0>
    d57c:	mov	r2, r3
    d580:	ldr	r0, [r0]
    d584:	ldr	r1, [r1]
    d588:	bl	8e30 <memcmp@plt>
    d58c:	cmp	r0, #0
    d590:	movle	r3, #0
    d594:	movgt	r3, #1
    d598:	mov	r0, r3
    d59c:	pop	{r3, pc}
    d5a0:	mov	r0, #1
    d5a4:	pop	{r3, pc}
    d5a8:	push	{r4, r5, lr}
    d5ac:	subs	r5, r1, #0
    d5b0:	sub	sp, sp, #12
    d5b4:	mov	r4, r0
    d5b8:	blt	d5ec <fputs@plt+0x4534>
    d5bc:	ldr	r1, [r4, #8]
    d5c0:	cmp	r5, r1
    d5c4:	ble	d5e0 <fputs@plt+0x4528>
    d5c8:	ldm	r4, {r0, r2}
    d5cc:	add	ip, r4, #8
    d5d0:	mov	r3, r5
    d5d4:	str	ip, [sp]
    d5d8:	bl	ce80 <fputs@plt+0x3dc8>
    d5dc:	str	r0, [r4]
    d5e0:	str	r5, [r4, #4]
    d5e4:	add	sp, sp, #12
    d5e8:	pop	{r4, r5, pc}
    d5ec:	movw	r1, #59488	; 0xe860
    d5f0:	mov	r0, #260	; 0x104
    d5f4:	movt	r1, #0
    d5f8:	bl	b090 <fputs@plt+0x1fd8>
    d5fc:	b	d5bc <fputs@plt+0x4504>
    d600:	mov	r3, #0
    d604:	str	r3, [r0, #4]
    d608:	bx	lr
    d60c:	push	{r4, lr}
    d610:	ldr	r4, [r0]
    d614:	cmp	r4, #0
    d618:	beq	d638 <fputs@plt+0x4580>
    d61c:	ldr	r2, [r0, #4]
    d620:	mov	r0, r4
    d624:	bl	907c <memchr@plt>
    d628:	cmp	r0, #0
    d62c:	beq	d638 <fputs@plt+0x4580>
    d630:	rsb	r0, r4, r0
    d634:	pop	{r4, pc}
    d638:	mvn	r0, #0
    d63c:	pop	{r4, pc}
    d640:	push	{r3, r4, r5, lr}
    d644:	ldm	r0, {r5, lr}
    d648:	cmp	lr, #0
    d64c:	ble	d6a8 <fputs@plt+0x45f0>
    d650:	add	r4, r5, lr
    d654:	mov	r2, r5
    d658:	mov	ip, #0
    d65c:	ldrb	r1, [r2], #1
    d660:	cmp	r1, #0
    d664:	addeq	ip, ip, #1
    d668:	cmp	r2, r4
    d66c:	bne	d65c <fputs@plt+0x45a4>
    d670:	add	r0, lr, #1
    d674:	rsb	r0, ip, r0
    d678:	bl	8fa4 <_Znaj@plt>
    d67c:	mov	r3, r5
    d680:	mov	r1, r0
    d684:	ldrb	r2, [r3], #1
    d688:	cmp	r2, #0
    d68c:	strbne	r2, [r1]
    d690:	addne	r1, r1, #1
    d694:	cmp	r3, r4
    d698:	bne	d684 <fputs@plt+0x45cc>
    d69c:	mov	r3, #0
    d6a0:	strb	r3, [r1]
    d6a4:	pop	{r3, r4, r5, pc}
    d6a8:	add	r0, lr, #1
    d6ac:	bl	8fa4 <_Znaj@plt>
    d6b0:	mov	r1, r0
    d6b4:	b	d69c <fputs@plt+0x45e4>
    d6b8:	push	{r4, r5, r6, lr}
    d6bc:	mov	r5, r0
    d6c0:	ldr	r0, [r0, #4]
    d6c4:	ldr	ip, [r5]
    d6c8:	subs	r0, r0, #1
    d6cc:	bmi	d7a4 <fputs@plt+0x46ec>
    d6d0:	ldrb	r3, [ip, r0]
    d6d4:	cmp	r3, #32
    d6d8:	mov	r3, r0
    d6dc:	beq	d6f0 <fputs@plt+0x4638>
    d6e0:	b	d768 <fputs@plt+0x46b0>
    d6e4:	ldrb	r2, [ip, r3]
    d6e8:	cmp	r2, #32
    d6ec:	bne	d768 <fputs@plt+0x46b0>
    d6f0:	subs	r3, r3, #1
    d6f4:	bcs	d6e4 <fputs@plt+0x462c>
    d6f8:	cmp	r3, r0
    d6fc:	mov	r4, ip
    d700:	popeq	{r4, r5, r6, pc}
    d704:	cmp	r3, #0
    d708:	blt	d744 <fputs@plt+0x468c>
    d70c:	add	r3, r3, #1
    d710:	ldr	r0, [r5, #8]
    d714:	str	r3, [r5, #4]
    d718:	bl	8fa4 <_Znaj@plt>
    d71c:	mov	r1, r4
    d720:	ldr	r2, [r5, #4]
    d724:	mov	r6, r0
    d728:	bl	8f44 <memcpy@plt>
    d72c:	ldr	r0, [r5]
    d730:	cmp	r0, #0
    d734:	beq	d73c <fputs@plt+0x4684>
    d738:	bl	8ff8 <_ZdaPv@plt>
    d73c:	str	r6, [r5]
    d740:	pop	{r4, r5, r6, pc}
    d744:	cmp	ip, #0
    d748:	mov	r4, #0
    d74c:	str	r4, [r5, #4]
    d750:	popeq	{r4, r5, r6, pc}
    d754:	mov	r0, ip
    d758:	bl	8ff8 <_ZdaPv@plt>
    d75c:	str	r4, [r5]
    d760:	str	r4, [r5, #8]
    d764:	pop	{r4, r5, r6, pc}
    d768:	cmp	r3, #0
    d76c:	beq	d7ac <fputs@plt+0x46f4>
    d770:	ldrb	r2, [ip]
    d774:	cmp	r2, #32
    d778:	bne	d7bc <fputs@plt+0x4704>
    d77c:	add	r2, ip, #1
    d780:	ldrb	r1, [r2]
    d784:	mov	r4, r2
    d788:	sub	r3, r3, #1
    d78c:	add	r2, r2, #1
    d790:	cmp	r1, #32
    d794:	beq	d780 <fputs@plt+0x46c8>
    d798:	cmp	r3, r0
    d79c:	bne	d704 <fputs@plt+0x464c>
    d7a0:	pop	{r4, r5, r6, pc}
    d7a4:	mov	r3, r0
    d7a8:	b	d6f8 <fputs@plt+0x4640>
    d7ac:	cmp	r0, #0
    d7b0:	popeq	{r4, r5, r6, pc}
    d7b4:	mov	r4, ip
    d7b8:	b	d70c <fputs@plt+0x4654>
    d7bc:	cmp	r0, r3
    d7c0:	bne	d7b4 <fputs@plt+0x46fc>
    d7c4:	pop	{r4, r5, r6, pc}
    d7c8:	push	{r4, r5, r6, lr}
    d7cc:	mov	r5, r1
    d7d0:	ldm	r0, {r4, r6}
    d7d4:	cmp	r6, #0
    d7d8:	pople	{r4, r5, r6, pc}
    d7dc:	add	r6, r4, r6
    d7e0:	ldrb	r0, [r4], #1
    d7e4:	mov	r1, r5
    d7e8:	bl	9070 <_IO_putc@plt>
    d7ec:	cmp	r4, r6
    d7f0:	bne	d7e0 <fputs@plt+0x4728>
    d7f4:	pop	{r4, r5, r6, pc}
    d7f8:	push	{r4, r5, lr}
    d7fc:	movw	r4, #29620	; 0x73b4
    d800:	sub	sp, sp, #12
    d804:	movt	r4, #1
    d808:	mov	r5, r0
    d80c:	mov	r2, #12
    d810:	str	r1, [sp]
    d814:	mov	r0, r4
    d818:	mov	r1, #1
    d81c:	movw	r3, #59500	; 0xe86c
    d820:	movt	r3, #0
    d824:	bl	9010 <__sprintf_chk@plt>
    d828:	mov	r0, r5
    d82c:	mov	r1, r4
    d830:	bl	cf90 <fputs@plt+0x3ed8>
    d834:	mov	r0, r5
    d838:	add	sp, sp, #12
    d83c:	pop	{r4, r5, pc}
    d840:	push	{r4, lr}
    d844:	subs	r4, r0, #0
    d848:	beq	d864 <fputs@plt+0x47ac>
    d84c:	bl	8f38 <strlen@plt>
    d850:	add	r0, r0, #1
    d854:	bl	8fa4 <_Znaj@plt>
    d858:	mov	r1, r4
    d85c:	bl	8f5c <strcpy@plt>
    d860:	pop	{r4, pc}
    d864:	mov	r0, r4
    d868:	pop	{r4, pc}
    d86c:	push	{r3, lr}
    d870:	movw	r0, #59456	; 0xe840
    d874:	mov	r1, #4
    d878:	movt	r0, #0
    d87c:	bl	9004 <pathconf@plt>
    d880:	cmp	r0, #0
    d884:	bgt	d890 <fputs@plt+0x47d8>
    d888:	mov	r0, #1024	; 0x400
    d88c:	pop	{r3, pc}
    d890:	movw	r0, #59456	; 0xe840
    d894:	mov	r1, #4
    d898:	movt	r0, #0
    d89c:	pop	{r3, lr}
    d8a0:	b	9004 <pathconf@plt>
    d8a4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    d8a8:	mov	r7, r0
    d8ac:	ldr	r6, [pc, #76]	; d900 <fputs@plt+0x4848>
    d8b0:	mov	r8, r1
    d8b4:	ldr	r5, [pc, #72]	; d904 <fputs@plt+0x484c>
    d8b8:	mov	r9, r2
    d8bc:	add	r6, pc, r6
    d8c0:	bl	8dec <open@plt-0x20>
    d8c4:	add	r5, pc, r5
    d8c8:	rsb	r6, r5, r6
    d8cc:	asrs	r6, r6, #2
    d8d0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    d8d4:	sub	r5, r5, #4
    d8d8:	mov	r4, #0
    d8dc:	add	r4, r4, #1
    d8e0:	ldr	r3, [r5, #4]!
    d8e4:	mov	r0, r7
    d8e8:	mov	r1, r8
    d8ec:	mov	r2, r9
    d8f0:	blx	r3
    d8f4:	cmp	r4, r6
    d8f8:	bne	d8dc <fputs@plt+0x4824>
    d8fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    d900:	andeq	r9, r0, ip, lsr #12
    d904:	andeq	r9, r0, ip, lsl r6
    d908:	bx	lr

Disassembly of section .fini:

0000d90c <.fini>:
    d90c:	push	{r3, lr}
    d910:	pop	{r3, pc}
