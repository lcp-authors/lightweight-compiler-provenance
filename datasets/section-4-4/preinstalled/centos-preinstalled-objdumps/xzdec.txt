
centos-preinstalled/xzdec:     file format elf32-littlearm


Disassembly of section .init:

000108bc <.init>:
   108bc:	push	{r3, lr}
   108c0:	bl	10c64 <abort@plt+0x28c>
   108c4:	pop	{r3, pc}

Disassembly of section .plt:

000108c8 <lzma_code@plt-0x14>:
   108c8:	push	{lr}		; (str lr, [sp, #-4]!)
   108cc:	ldr	lr, [pc, #4]	; 108d8 <lzma_code@plt-0x4>
   108d0:	add	lr, pc, lr
   108d4:	ldr	pc, [lr, #8]!
   108d8:	andeq	r1, r1, r8, lsr #14

000108dc <lzma_code@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1832]!	; 0x728

000108e8 <ferror@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1824]!	; 0x720

000108f4 <__stack_chk_fail@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1816]!	; 0x718

00010900 <fwrite@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1808]!	; 0x710

0001090c <fread@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1800]!	; 0x708

00010918 <__libc_start_main@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1792]!	; 0x700

00010924 <strerror@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1784]!	; 0x6f8

00010930 <__vfprintf_chk@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1776]!	; 0x6f0

0001093c <lzma_version_string@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1768]!	; 0x6e8

00010948 <__gmon_start__@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1760]!	; 0x6e0

00010954 <getopt_long@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #69632	; 0x11000
   1095c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010960 <exit@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #69632	; 0x11000
   10968:	ldr	pc, [ip, #1744]!	; 0x6d0

0001096c <feof@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #69632	; 0x11000
   10974:	ldr	pc, [ip, #1736]!	; 0x6c8

00010978 <lzma_stream_decoder@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #69632	; 0x11000
   10980:	ldr	pc, [ip, #1728]!	; 0x6c0

00010984 <__errno_location@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1720]!	; 0x6b8

00010990 <memset@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1712]!	; 0x6b0

0001099c <__printf_chk@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #69632	; 0x11000
   109a4:	ldr	pc, [ip, #1704]!	; 0x6a8

000109a8 <__fprintf_chk@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #69632	; 0x11000
   109b0:	ldr	pc, [ip, #1696]!	; 0x6a0

000109b4 <fclose@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #69632	; 0x11000
   109bc:	ldr	pc, [ip, #1688]!	; 0x698

000109c0 <fputc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1680]!	; 0x690

000109cc <fopen64@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1672]!	; 0x688

000109d8 <abort@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1664]!	; 0x680

Disassembly of section .text:

000109e4 <.text>:
   109e4:	movw	r3, #8304	; 0x2070
   109e8:	movt	r3, #2
   109ec:	push	{r4, r5, r6, r7, r8, lr}
   109f0:	sub	sp, sp, #104	; 0x68
   109f4:	ldr	r3, [r3]
   109f8:	mov	r6, r0
   109fc:	mov	r0, r1
   10a00:	movw	r5, #8300	; 0x206c
   10a04:	mov	r4, r1
   10a08:	mov	r7, #0
   10a0c:	movt	r5, #2
   10a10:	str	r3, [sp, #100]	; 0x64
   10a14:	bl	11058 <abort@plt+0x680>
   10a18:	movw	r2, #4548	; 0x11c4
   10a1c:	movt	r2, #1
   10a20:	str	r7, [sp]
   10a24:	add	r3, r2, #12
   10a28:	mov	r0, r6
   10a2c:	mov	r1, r4
   10a30:	bl	10954 <getopt_long@plt>
   10a34:	cmn	r0, #1
   10a38:	beq	10b5c <abort@plt+0x184>
   10a3c:	sub	r3, r0, #81	; 0x51
   10a40:	cmp	r3, #32
   10a44:	ldrls	pc, [pc, r3, lsl #2]
   10a48:	b	10b54 <abort@plt+0x17c>
   10a4c:	andeq	r0, r1, r8, lsl sl
   10a50:	andeq	r0, r1, r4, asr fp
   10a54:	andeq	r0, r1, r4, asr fp
   10a58:	andeq	r0, r1, r4, asr fp
   10a5c:	andeq	r0, r1, r4, asr fp
   10a60:	andeq	r0, r1, r8, lsl fp
   10a64:	andeq	r0, r1, r4, asr fp
   10a68:	andeq	r0, r1, r4, asr fp
   10a6c:	andeq	r0, r1, r4, asr fp
   10a70:	andeq	r0, r1, r4, asr fp
   10a74:	andeq	r0, r1, r4, asr fp
   10a78:	andeq	r0, r1, r4, asr fp
   10a7c:	andeq	r0, r1, r4, asr fp
   10a80:	andeq	r0, r1, r4, asr fp
   10a84:	andeq	r0, r1, r4, asr fp
   10a88:	andeq	r0, r1, r4, asr fp
   10a8c:	andeq	r0, r1, r4, asr fp
   10a90:	andeq	r0, r1, r4, asr fp
   10a94:	andeq	r0, r1, r8, lsl sl
   10a98:	andeq	r0, r1, r8, lsl sl
   10a9c:	andeq	r0, r1, r4, asr fp
   10aa0:	andeq	r0, r1, r4, asr fp
   10aa4:	andeq	r0, r1, r4, asr fp
   10aa8:	andeq	r0, r1, r4, ror #21
   10aac:	andeq	r0, r1, r4, asr fp
   10ab0:	andeq	r0, r1, r4, asr fp
   10ab4:	andeq	r0, r1, r8, lsl sl
   10ab8:	andeq	r0, r1, r4, asr fp
   10abc:	andeq	r0, r1, r4, asr fp
   10ac0:	andeq	r0, r1, r4, asr fp
   10ac4:	andeq	r0, r1, r4, asr fp
   10ac8:	andeq	r0, r1, r4, asr fp
   10acc:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10ad0:	ldr	r3, [r5]
   10ad4:	cmp	r3, #0
   10ad8:	subne	r3, r3, #1
   10adc:	strne	r3, [r5]
   10ae0:	b	10a18 <abort@plt+0x40>
   10ae4:	movw	r3, #8308	; 0x2074
   10ae8:	movt	r3, #2
   10aec:	movw	r1, #4932	; 0x1344
   10af0:	movt	r1, #1
   10af4:	ldr	r2, [r3]
   10af8:	mov	r0, #1
   10afc:	bl	1099c <__printf_chk@plt>
   10b00:	movw	r3, #8300	; 0x206c
   10b04:	movt	r3, #2
   10b08:	mov	r0, #0
   10b0c:	mov	r1, #1
   10b10:	ldr	r2, [r3]
   10b14:	bl	1106c <abort@plt+0x694>
   10b18:	bl	1093c <lzma_version_string@plt>
   10b1c:	movw	r1, #5672	; 0x1628
   10b20:	movt	r1, #1
   10b24:	mov	r2, r0
   10b28:	mov	r0, #1
   10b2c:	b	10afc <abort@plt+0x124>
   10b30:	ldr	r4, [r4, r3, lsl #2]
   10b34:	bl	10984 <__errno_location@plt>
   10b38:	ldr	r0, [r0]
   10b3c:	bl	10924 <strerror@plt>
   10b40:	mov	r1, r4
   10b44:	mov	r2, r0
   10b48:	movw	r0, #4924	; 0x133c
   10b4c:	movt	r0, #1
   10b50:	bl	10d5c <abort@plt+0x384>
   10b54:	mov	r0, #1
   10b58:	bl	10960 <exit@plt>
   10b5c:	movw	r5, #8312	; 0x2078
   10b60:	movt	r5, #2
   10b64:	mov	r1, #0
   10b68:	add	r0, sp, #8
   10b6c:	mov	r2, #88	; 0x58
   10b70:	bl	10990 <memset@plt>
   10b74:	ldr	r3, [r5]
   10b78:	cmp	r3, r6
   10b7c:	movwne	r7, #8328	; 0x2088
   10b80:	movtne	r7, #2
   10b84:	bne	10bc0 <abort@plt+0x1e8>
   10b88:	b	10c08 <abort@plt+0x230>
   10b8c:	ldrb	r3, [r0, #1]
   10b90:	cmp	r3, #0
   10b94:	bne	10bd4 <abort@plt+0x1fc>
   10b98:	movw	r2, #5708	; 0x164c
   10b9c:	add	r0, sp, #8
   10ba0:	movt	r2, #1
   10ba4:	ldr	r1, [r7]
   10ba8:	bl	10e04 <abort@plt+0x42c>
   10bac:	ldr	r3, [r5]
   10bb0:	add	r3, r3, #1
   10bb4:	str	r3, [r5]
   10bb8:	cmp	r6, r3
   10bbc:	ble	10b00 <abort@plt+0x128>
   10bc0:	ldr	r3, [r5]
   10bc4:	ldr	r0, [r4, r3, lsl #2]
   10bc8:	ldrb	r3, [r0]
   10bcc:	cmp	r3, #45	; 0x2d
   10bd0:	beq	10b8c <abort@plt+0x1b4>
   10bd4:	movw	r1, #5716	; 0x1654
   10bd8:	movt	r1, #1
   10bdc:	bl	109cc <fopen64@plt>
   10be0:	ldr	r3, [r5]
   10be4:	subs	r8, r0, #0
   10be8:	beq	10b30 <abort@plt+0x158>
   10bec:	add	r0, sp, #8
   10bf0:	mov	r1, r8
   10bf4:	ldr	r2, [r4, r3, lsl #2]
   10bf8:	bl	10e04 <abort@plt+0x42c>
   10bfc:	mov	r0, r8
   10c00:	bl	109b4 <fclose@plt>
   10c04:	b	10bac <abort@plt+0x1d4>
   10c08:	movw	r3, #8328	; 0x2088
   10c0c:	movt	r3, #2
   10c10:	add	r0, sp, #8
   10c14:	movw	r2, #5708	; 0x164c
   10c18:	ldr	r1, [r3]
   10c1c:	movt	r2, #1
   10c20:	bl	10e04 <abort@plt+0x42c>
   10c24:	b	10b00 <abort@plt+0x128>
   10c28:	mov	fp, #0
   10c2c:	mov	lr, #0
   10c30:	pop	{r1}		; (ldr r1, [sp], #4)
   10c34:	mov	r2, sp
   10c38:	push	{r2}		; (str r2, [sp, #-4]!)
   10c3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c40:	ldr	ip, [pc, #16]	; 10c58 <abort@plt+0x280>
   10c44:	push	{ip}		; (str ip, [sp, #-4]!)
   10c48:	ldr	r0, [pc, #12]	; 10c5c <abort@plt+0x284>
   10c4c:	ldr	r3, [pc, #12]	; 10c60 <abort@plt+0x288>
   10c50:	bl	10918 <__libc_start_main@plt>
   10c54:	bl	109d8 <abort@plt>
   10c58:			; <UNDEFINED> instruction: 0x000111b0
   10c5c:	andeq	r0, r1, r4, ror #19
   10c60:	andeq	r1, r1, ip, asr #2
   10c64:	ldr	r3, [pc, #20]	; 10c80 <abort@plt+0x2a8>
   10c68:	ldr	r2, [pc, #20]	; 10c84 <abort@plt+0x2ac>
   10c6c:	add	r3, pc, r3
   10c70:	ldr	r2, [r3, r2]
   10c74:	cmp	r2, #0
   10c78:	bxeq	lr
   10c7c:	b	10948 <__gmon_start__@plt>
   10c80:	andeq	r1, r1, ip, lsl #7
   10c84:	andeq	r0, r0, r4, rrx
   10c88:	push	{r3, lr}
   10c8c:	movw	r0, #8304	; 0x2070
   10c90:	ldr	r3, [pc, #36]	; 10cbc <abort@plt+0x2e4>
   10c94:	movt	r0, #2
   10c98:	rsb	r3, r0, r3
   10c9c:	cmp	r3, #6
   10ca0:	popls	{r3, pc}
   10ca4:	movw	r3, #0
   10ca8:	movt	r3, #0
   10cac:	cmp	r3, #0
   10cb0:	popeq	{r3, pc}
   10cb4:	blx	r3
   10cb8:	pop	{r3, pc}
   10cbc:	andeq	r2, r2, r3, ror r0
   10cc0:	push	{r3, lr}
   10cc4:	movw	r0, #8304	; 0x2070
   10cc8:	movw	r3, #8304	; 0x2070
   10ccc:	movt	r0, #2
   10cd0:	movt	r3, #2
   10cd4:	rsb	r3, r0, r3
   10cd8:	asr	r3, r3, #2
   10cdc:	add	r3, r3, r3, lsr #31
   10ce0:	asrs	r1, r3, #1
   10ce4:	popeq	{r3, pc}
   10ce8:	movw	r2, #0
   10cec:	movt	r2, #0
   10cf0:	cmp	r2, #0
   10cf4:	popeq	{r3, pc}
   10cf8:	blx	r2
   10cfc:	pop	{r3, pc}
   10d00:	push	{r4, lr}
   10d04:	movw	r4, #8336	; 0x2090
   10d08:	movt	r4, #2
   10d0c:	ldrb	r3, [r4]
   10d10:	cmp	r3, #0
   10d14:	popne	{r4, pc}
   10d18:	bl	10c88 <abort@plt+0x2b0>
   10d1c:	mov	r3, #1
   10d20:	strb	r3, [r4]
   10d24:	pop	{r4, pc}
   10d28:	movw	r0, #7924	; 0x1ef4
   10d2c:	movt	r0, #2
   10d30:	push	{r3, lr}
   10d34:	ldr	r3, [r0]
   10d38:	cmp	r3, #0
   10d3c:	beq	10d54 <abort@plt+0x37c>
   10d40:	movw	r3, #0
   10d44:	movt	r3, #0
   10d48:	cmp	r3, #0
   10d4c:	beq	10d54 <abort@plt+0x37c>
   10d50:	blx	r3
   10d54:	pop	{r3, lr}
   10d58:	b	10cc0 <abort@plt+0x2e8>
   10d5c:	push	{r0, r1, r2, r3}
   10d60:	movw	r3, #8300	; 0x206c
   10d64:	movt	r3, #2
   10d68:	push	{r4, r5, r6, lr}
   10d6c:	movw	r4, #8304	; 0x2070
   10d70:	movt	r4, #2
   10d74:	ldr	r1, [r3]
   10d78:	sub	sp, sp, #8
   10d7c:	ldr	r3, [r4]
   10d80:	cmp	r1, #0
   10d84:	add	r2, sp, #28
   10d88:	ldr	r6, [sp, #24]
   10d8c:	str	r2, [sp]
   10d90:	str	r3, [sp, #4]
   10d94:	beq	10de0 <abort@plt+0x408>
   10d98:	movw	r5, #8320	; 0x2080
   10d9c:	movw	r3, #8308	; 0x2074
   10da0:	movt	r5, #2
   10da4:	movt	r3, #2
   10da8:	mov	r1, #1
   10dac:	movw	r2, #4720	; 0x1270
   10db0:	ldr	r3, [r3]
   10db4:	movt	r2, #1
   10db8:	ldr	r0, [r5]
   10dbc:	bl	109a8 <__fprintf_chk@plt>
   10dc0:	mov	r1, #1
   10dc4:	mov	r2, r6
   10dc8:	ldr	r0, [r5]
   10dcc:	ldr	r3, [sp]
   10dd0:	bl	10930 <__vfprintf_chk@plt>
   10dd4:	ldr	r1, [r5]
   10dd8:	mov	r0, #10
   10ddc:	bl	109c0 <fputc@plt>
   10de0:	ldr	r2, [sp, #4]
   10de4:	ldr	r3, [r4]
   10de8:	cmp	r2, r3
   10dec:	bne	10e00 <abort@plt+0x428>
   10df0:	add	sp, sp, #8
   10df4:	pop	{r4, r5, r6, lr}
   10df8:	add	sp, sp, #16
   10dfc:	bx	lr
   10e00:	bl	108f4 <__stack_chk_fail@plt>
   10e04:	movw	r3, #8304	; 0x2070
   10e08:	movt	r3, #2
   10e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e10:	sub	sp, sp, #16384	; 0x4000
   10e14:	sub	sp, sp, #28
   10e18:	ldr	ip, [r3]
   10e1c:	mov	r7, r1
   10e20:	add	r1, sp, #16384	; 0x4000
   10e24:	str	r3, [sp, #8]
   10e28:	mov	lr, #8
   10e2c:	str	r2, [sp, #12]
   10e30:	mvn	r3, #0
   10e34:	str	lr, [sp]
   10e38:	mvn	r2, #0
   10e3c:	str	ip, [r1, #20]
   10e40:	mov	r4, r0
   10e44:	bl	10978 <lzma_stream_decoder@plt>
   10e48:	cmp	r0, #0
   10e4c:	bne	10f9c <abort@plt+0x5c4>
   10e50:	add	r2, sp, #8192	; 0x2000
   10e54:	mov	fp, #8192	; 0x2000
   10e58:	add	r2, r2, #24
   10e5c:	movw	sl, #8332	; 0x208c
   10e60:	sub	r8, r2, #4
   10e64:	mov	r3, r0
   10e68:	str	r0, [r4, #4]
   10e6c:	mov	r6, r0
   10e70:	str	r8, [r4, #16]
   10e74:	add	r9, sp, #20
   10e78:	str	fp, [r4, #20]
   10e7c:	movt	sl, #2
   10e80:	b	10e88 <abort@plt+0x4b0>
   10e84:	ldr	r3, [r4, #4]
   10e88:	cmp	r3, #0
   10e8c:	bne	10ecc <abort@plt+0x4f4>
   10e90:	mov	r1, #1
   10e94:	mov	r2, #8192	; 0x2000
   10e98:	mov	r3, r7
   10e9c:	str	r9, [r4]
   10ea0:	mov	r0, r9
   10ea4:	bl	1090c <fread@plt>
   10ea8:	str	r0, [r4, #4]
   10eac:	mov	r0, r7
   10eb0:	bl	108e8 <ferror@plt>
   10eb4:	cmp	r0, #0
   10eb8:	bne	10f74 <abort@plt+0x59c>
   10ebc:	mov	r0, r7
   10ec0:	bl	1096c <feof@plt>
   10ec4:	cmp	r0, #0
   10ec8:	movne	r6, #3
   10ecc:	mov	r0, r4
   10ed0:	mov	r1, r6
   10ed4:	bl	108dc <lzma_code@plt>
   10ed8:	ldr	r2, [r4, #20]
   10edc:	cmp	r2, #0
   10ee0:	mov	r5, r0
   10ee4:	beq	10ef0 <abort@plt+0x518>
   10ee8:	cmp	r0, #0
   10eec:	beq	10e84 <abort@plt+0x4ac>
   10ef0:	rsb	fp, r2, #8192	; 0x2000
   10ef4:	mov	r0, r8
   10ef8:	mov	r1, #1
   10efc:	ldr	r3, [sl]
   10f00:	mov	r2, fp
   10f04:	bl	10900 <fwrite@plt>
   10f08:	cmp	fp, r0
   10f0c:	bne	10f50 <abort@plt+0x578>
   10f10:	cmp	r5, #0
   10f14:	mov	r2, #8192	; 0x2000
   10f18:	str	r8, [r4, #16]
   10f1c:	str	r2, [r4, #20]
   10f20:	beq	10e84 <abort@plt+0x4ac>
   10f24:	cmp	r5, #1
   10f28:	bne	10fd0 <abort@plt+0x5f8>
   10f2c:	ldr	r1, [sp, #8]
   10f30:	add	r3, sp, #16384	; 0x4000
   10f34:	ldr	r2, [r3, #20]
   10f38:	ldr	r3, [r1]
   10f3c:	cmp	r2, r3
   10f40:	bne	10fcc <abort@plt+0x5f4>
   10f44:	add	sp, sp, #16384	; 0x4000
   10f48:	add	sp, sp, #28
   10f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f50:	bl	10984 <__errno_location@plt>
   10f54:	ldr	r0, [r0]
   10f58:	bl	10924 <strerror@plt>
   10f5c:	mov	r1, r0
   10f60:	movw	r0, #4888	; 0x1318
   10f64:	movt	r0, #1
   10f68:	bl	10d5c <abort@plt+0x384>
   10f6c:	mov	r0, #1
   10f70:	bl	10960 <exit@plt>
   10f74:	bl	10984 <__errno_location@plt>
   10f78:	ldr	r0, [r0]
   10f7c:	bl	10924 <strerror@plt>
   10f80:	ldr	r1, [sp, #12]
   10f84:	mov	r2, r0
   10f88:	movw	r0, #4852	; 0x12f4
   10f8c:	movt	r0, #1
   10f90:	bl	10d5c <abort@plt+0x384>
   10f94:	mov	r0, #1
   10f98:	bl	10960 <exit@plt>
   10f9c:	cmp	r0, #5
   10fa0:	movwne	r1, #4728	; 0x1278
   10fa4:	movtne	r1, #1
   10fa8:	bne	10fb8 <abort@plt+0x5e0>
   10fac:	mov	r0, #12
   10fb0:	bl	10924 <strerror@plt>
   10fb4:	mov	r1, r0
   10fb8:	movw	r0, #4928	; 0x1340
   10fbc:	movt	r0, #1
   10fc0:	bl	10d5c <abort@plt+0x384>
   10fc4:	mov	r0, #1
   10fc8:	bl	10960 <exit@plt>
   10fcc:	bl	108f4 <__stack_chk_fail@plt>
   10fd0:	sub	r5, r5, #5
   10fd4:	cmp	r5, #5
   10fd8:	ldrls	pc, [pc, r5, lsl #2]
   10fdc:	b	10ff8 <abort@plt+0x620>
   10fe0:	andeq	r1, r1, r8, asr #32
   10fe4:	strdeq	r0, [r1], -r8
   10fe8:	andeq	r1, r1, ip, lsr r0
   10fec:	andeq	r1, r1, r0, lsr r0
   10ff0:	andeq	r1, r1, r4, lsr #32
   10ff4:	andeq	r1, r1, r8, lsl r0
   10ff8:	movw	r2, #4728	; 0x1278
   10ffc:	movt	r2, #1
   11000:	ldr	r1, [sp, #12]
   11004:	movw	r0, #4924	; 0x133c
   11008:	movt	r0, #1
   1100c:	bl	10d5c <abort@plt+0x384>
   11010:	mov	r0, #1
   11014:	bl	10960 <exit@plt>
   11018:	movw	r2, #4828	; 0x12dc
   1101c:	movt	r2, #1
   11020:	b	11000 <abort@plt+0x628>
   11024:	movw	r2, #4812	; 0x12cc
   11028:	movt	r2, #1
   1102c:	b	11000 <abort@plt+0x628>
   11030:	movw	r2, #4780	; 0x12ac
   11034:	movt	r2, #1
   11038:	b	11000 <abort@plt+0x628>
   1103c:	movw	r2, #4752	; 0x1290
   11040:	movt	r2, #1
   11044:	b	11000 <abort@plt+0x628>
   11048:	mov	r0, #12
   1104c:	bl	10924 <strerror@plt>
   11050:	mov	r2, r0
   11054:	b	11000 <abort@plt+0x628>
   11058:	ldr	r2, [r0]
   1105c:	movw	r3, #8308	; 0x2074
   11060:	movt	r3, #2
   11064:	str	r2, [r3]
   11068:	bx	lr
   1106c:	cmp	r0, r1
   11070:	push	{r4, r5, r6, r7, r8, lr}
   11074:	mov	r4, r0
   11078:	sub	sp, sp, #8
   1107c:	mov	r6, r1
   11080:	mov	r7, r2
   11084:	beq	1110c <abort@plt+0x734>
   11088:	movw	r5, #8332	; 0x208c
   1108c:	movt	r5, #2
   11090:	ldr	r0, [r5]
   11094:	bl	108e8 <ferror@plt>
   11098:	mov	r8, r0
   1109c:	ldr	r0, [r5]
   110a0:	bl	109b4 <fclose@plt>
   110a4:	orrs	r8, r0, r8
   110a8:	beq	11114 <abort@plt+0x73c>
   110ac:	cmp	r7, #0
   110b0:	moveq	r4, r6
   110b4:	beq	1110c <abort@plt+0x734>
   110b8:	cmp	r0, #0
   110bc:	movw	r2, #8320	; 0x2080
   110c0:	movw	r3, #8308	; 0x2074
   110c4:	movt	r2, #2
   110c8:	movt	r3, #2
   110cc:	movweq	r0, #5804	; 0x16ac
   110d0:	ldr	r5, [r2]
   110d4:	movteq	r0, #1
   110d8:	ldr	r4, [r3]
   110dc:	bne	1113c <abort@plt+0x764>
   110e0:	str	r0, [sp, #4]
   110e4:	mov	r3, r4
   110e8:	movw	r1, #5832	; 0x16c8
   110ec:	movw	r2, #5820	; 0x16bc
   110f0:	movt	r1, #1
   110f4:	mov	r0, r5
   110f8:	str	r1, [sp]
   110fc:	movt	r2, #1
   11100:	mov	r1, #1
   11104:	mov	r4, r6
   11108:	bl	109a8 <__fprintf_chk@plt>
   1110c:	mov	r0, r4
   11110:	bl	10960 <exit@plt>
   11114:	movw	r5, #8320	; 0x2080
   11118:	movt	r5, #2
   1111c:	ldr	r0, [r5]
   11120:	bl	108e8 <ferror@plt>
   11124:	mov	r7, r0
   11128:	ldr	r0, [r5]
   1112c:	bl	109b4 <fclose@plt>
   11130:	orrs	r7, r0, r7
   11134:	movne	r4, r6
   11138:	b	1110c <abort@plt+0x734>
   1113c:	bl	10984 <__errno_location@plt>
   11140:	ldr	r0, [r0]
   11144:	bl	10924 <strerror@plt>
   11148:	b	110e0 <abort@plt+0x708>
   1114c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11150:	mov	r7, r0
   11154:	ldr	r6, [pc, #76]	; 111a8 <abort@plt+0x7d0>
   11158:	mov	r8, r1
   1115c:	ldr	r5, [pc, #72]	; 111ac <abort@plt+0x7d4>
   11160:	mov	r9, r2
   11164:	add	r6, pc, r6
   11168:	bl	108bc <lzma_code@plt-0x20>
   1116c:	add	r5, pc, r5
   11170:	rsb	r6, r5, r6
   11174:	asrs	r6, r6, #2
   11178:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1117c:	sub	r5, r5, #4
   11180:	mov	r4, #0
   11184:	add	r4, r4, #1
   11188:	ldr	r3, [r5, #4]!
   1118c:	mov	r0, r7
   11190:	mov	r1, r8
   11194:	mov	r2, r9
   11198:	blx	r3
   1119c:	cmp	r4, r6
   111a0:	bne	11184 <abort@plt+0x7ac>
   111a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   111a8:	andeq	r0, r1, r4, lsl #27
   111ac:	andeq	r0, r1, r8, ror sp
   111b0:	bx	lr

Disassembly of section .fini:

000111b4 <.fini>:
   111b4:	push	{r3, lr}
   111b8:	pop	{r3, pc}
