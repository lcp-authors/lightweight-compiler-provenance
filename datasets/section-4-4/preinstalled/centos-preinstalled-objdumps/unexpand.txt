
centos-preinstalled/unexpand:     file format elf32-littlearm


Disassembly of section .init:

00010fd8 <.init>:
   10fd8:	push	{r3, lr}
   10fdc:	bl	11e24 <strspn@plt+0xb5c>
   10fe0:	pop	{r3, pc}

Disassembly of section .plt:

00010fe4 <fdopen@plt-0x14>:
   10fe4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fe8:	ldr	lr, [pc, #4]	; 10ff4 <fdopen@plt-0x4>
   10fec:	add	lr, pc, lr
   10ff0:	ldr	pc, [lr, #8]!
   10ff4:	andeq	r6, r1, ip

00010ff8 <fdopen@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #12]!

00011004 <calloc@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #4]!

00011010 <fputs_unlocked@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #4092]!	; 0xffc

0001101c <raise@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #4084]!	; 0xff4

00011028 <strcmp@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #4076]!	; 0xfec

00011034 <posix_fadvise64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #4068]!	; 0xfe4

00011040 <fflush@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #4060]!	; 0xfdc

0001104c <wcwidth@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #4052]!	; 0xfd4

00011058 <__memmove_chk@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #4044]!	; 0xfcc

00011064 <free@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #4036]!	; 0xfc4

00011070 <_exit@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #4028]!	; 0xfbc

0001107c <memcpy@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #4020]!	; 0xfb4

00011088 <mbsinit@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #4012]!	; 0xfac

00011094 <fwrite_unlocked@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a0 <memcmp@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #3996]!	; 0xf9c

000110ac <dcgettext@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #3988]!	; 0xf94

000110b8 <__stack_chk_fail@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c4 <realloc@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #3972]!	; 0xf84

000110d0 <textdomain@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #3964]!	; 0xf7c

000110dc <__strndup@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #3956]!	; 0xf74

000110e8 <iswprint@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f4 <fwrite@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #3940]!	; 0xf64

00011100 <lseek64@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #3932]!	; 0xf5c

0001110c <__ctype_get_mb_cur_max@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #3924]!	; 0xf54

00011118 <strcpy@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #3916]!	; 0xf4c

00011124 <__fpending@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #3908]!	; 0xf44

00011130 <mbrtowc@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3900]!	; 0xf3c

0001113c <error@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3892]!	; 0xf34

00011148 <open64@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3884]!	; 0xf2c

00011154 <getenv@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3876]!	; 0xf24

00011160 <malloc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3868]!	; 0xf1c

0001116c <__libc_start_main@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3860]!	; 0xf14

00011178 <__freading@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3852]!	; 0xf0c

00011184 <__gmon_start__@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3844]!	; 0xf04

00011190 <getopt_long@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #86016	; 0x15000
   11198:	ldr	pc, [ip, #3836]!	; 0xefc

0001119c <__ctype_b_loc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #86016	; 0x15000
   111a4:	ldr	pc, [ip, #3828]!	; 0xef4

000111a8 <exit@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #86016	; 0x15000
   111b0:	ldr	pc, [ip, #3820]!	; 0xeec

000111b4 <strlen@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #86016	; 0x15000
   111bc:	ldr	pc, [ip, #3812]!	; 0xee4

000111c0 <ungetc@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #86016	; 0x15000
   111c8:	ldr	pc, [ip, #3804]!	; 0xedc

000111cc <__errno_location@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #86016	; 0x15000
   111d4:	ldr	pc, [ip, #3796]!	; 0xed4

000111d8 <__cxa_atexit@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #86016	; 0x15000
   111e0:	ldr	pc, [ip, #3788]!	; 0xecc

000111e4 <memset@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #86016	; 0x15000
   111ec:	ldr	pc, [ip, #3780]!	; 0xec4

000111f0 <fscanf@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #86016	; 0x15000
   111f8:	ldr	pc, [ip, #3772]!	; 0xebc

000111fc <__printf_chk@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #86016	; 0x15000
   11204:	ldr	pc, [ip, #3764]!	; 0xeb4

00011208 <fileno@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #86016	; 0x15000
   11210:	ldr	pc, [ip, #3756]!	; 0xeac

00011214 <__fprintf_chk@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #86016	; 0x15000
   1121c:	ldr	pc, [ip, #3748]!	; 0xea4

00011220 <fclose@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #86016	; 0x15000
   11228:	ldr	pc, [ip, #3740]!	; 0xe9c

0001122c <fseeko64@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #86016	; 0x15000
   11234:	ldr	pc, [ip, #3732]!	; 0xe94

00011238 <__uflow@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #86016	; 0x15000
   11240:	ldr	pc, [ip, #3724]!	; 0xe8c

00011244 <__overflow@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #86016	; 0x15000
   1124c:	ldr	pc, [ip, #3716]!	; 0xe84

00011250 <setlocale@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #86016	; 0x15000
   11258:	ldr	pc, [ip, #3708]!	; 0xe7c

0001125c <strrchr@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #86016	; 0x15000
   11264:	ldr	pc, [ip, #3700]!	; 0xe74

00011268 <nl_langinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #86016	; 0x15000
   11270:	ldr	pc, [ip, #3692]!	; 0xe6c

00011274 <clearerr_unlocked@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #86016	; 0x15000
   1127c:	ldr	pc, [ip, #3684]!	; 0xe64

00011280 <fopen64@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #86016	; 0x15000
   11288:	ldr	pc, [ip, #3676]!	; 0xe5c

0001128c <bindtextdomain@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #86016	; 0x15000
   11294:	ldr	pc, [ip, #3668]!	; 0xe54

00011298 <fread_unlocked@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #86016	; 0x15000
   112a0:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a4 <strncmp@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #86016	; 0x15000
   112ac:	ldr	pc, [ip, #3652]!	; 0xe44

000112b0 <abort@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #86016	; 0x15000
   112b8:	ldr	pc, [ip, #3644]!	; 0xe3c

000112bc <close@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #86016	; 0x15000
   112c4:	ldr	pc, [ip, #3636]!	; 0xe34

000112c8 <strspn@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #86016	; 0x15000
   112d0:	ldr	pc, [ip, #3628]!	; 0xe2c

Disassembly of section .text:

000112d4 <close_stdout@@Base-0x1904>:
   112d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112d8:	sub	sp, sp, #76	; 0x4c
   112dc:	mov	r8, r1
   112e0:	ldr	r4, [pc, #2664]	; 11d50 <strspn@plt+0xa88>
   112e4:	str	r0, [sp, #12]
   112e8:	ldr	r0, [r1]
   112ec:	add	r4, pc, r4
   112f0:	bl	12dd4 <close_stdout@@Base+0x1fc>
   112f4:	ldr	r1, [pc, #2648]	; 11d54 <strspn@plt+0xa8c>
   112f8:	mov	r0, #6
   112fc:	ldr	fp, [pc, #2644]	; 11d58 <strspn@plt+0xa90>
   11300:	add	r1, pc, r1
   11304:	ldr	r5, [pc, #2640]	; 11d5c <strspn@plt+0xa94>
   11308:	bl	11250 <setlocale@plt>
   1130c:	ldr	r1, [pc, #2636]	; 11d60 <strspn@plt+0xa98>
   11310:	mov	r0, r4
   11314:	add	fp, pc, fp
   11318:	add	r1, pc, r1
   1131c:	ldr	r9, [pc, #2624]	; 11d64 <strspn@plt+0xa9c>
   11320:	bl	1128c <bindtextdomain@plt>
   11324:	mov	r0, r4
   11328:	bl	110d0 <textdomain@plt>
   1132c:	ldr	r4, [pc, #2612]	; 11d68 <strspn@plt+0xaa0>
   11330:	ldr	r3, [pc, #2612]	; 11d6c <strspn@plt+0xaa4>
   11334:	add	r5, pc, r5
   11338:	add	r4, pc, r4
   1133c:	ldr	ip, [pc, #2604]	; 11d70 <strspn@plt+0xaa8>
   11340:	str	r4, [sp, #44]	; 0x2c
   11344:	add	r9, pc, r9
   11348:	ldr	r0, [fp, r3]
   1134c:	add	ip, pc, ip
   11350:	str	r5, [sp, #36]	; 0x24
   11354:	str	r9, [sp, #24]
   11358:	str	ip, [sp, #28]
   1135c:	bl	1608c <close_stdout@@Base+0x34b4>
   11360:	ldr	r2, [pc, #2572]	; 11d74 <strspn@plt+0xaac>
   11364:	mov	r3, #0
   11368:	ldr	r4, [pc, #2568]	; 11d78 <strspn@plt+0xab0>
   1136c:	add	r2, pc, r2
   11370:	str	r3, [sp, #16]
   11374:	add	r4, pc, r4
   11378:	str	r3, [sp, #32]
   1137c:	str	r4, [sp, #40]	; 0x28
   11380:	strb	r3, [r2, #28]
   11384:	str	r3, [r2, #20]
   11388:	strb	r3, [r2, #36]	; 0x24
   1138c:	str	r3, [r2, #4]
   11390:	str	r3, [r2]
   11394:	ldr	r2, [pc, #2528]	; 11d7c <strspn@plt+0xab4>
   11398:	mov	r6, #0
   1139c:	ldr	r3, [pc, #2524]	; 11d80 <strspn@plt+0xab8>
   113a0:	mov	r1, r8
   113a4:	ldr	r0, [sp, #12]
   113a8:	add	r2, pc, r2
   113ac:	str	r6, [sp]
   113b0:	add	r3, pc, r3
   113b4:	bl	11190 <getopt_long@plt>
   113b8:	cmn	r0, #1
   113bc:	beq	116ac <strspn@plt+0x3e4>
   113c0:	cmp	r0, #63	; 0x3f
   113c4:	beq	1161c <strspn@plt+0x354>
   113c8:	bgt	11424 <strspn@plt+0x15c>
   113cc:	cmn	r0, #2
   113d0:	beq	11484 <strspn@plt+0x1bc>
   113d4:	cmp	r0, #44	; 0x2c
   113d8:	beq	11468 <strspn@plt+0x1a0>
   113dc:	cmn	r0, #3
   113e0:	bne	11444 <strspn@plt+0x17c>
   113e4:	ldr	r1, [pc, #2456]	; 11d84 <strspn@plt+0xabc>
   113e8:	ldr	r3, [pc, #2456]	; 11d88 <strspn@plt+0xac0>
   113ec:	ldr	r2, [pc, #2456]	; 11d8c <strspn@plt+0xac4>
   113f0:	ldr	r0, [fp, r1]
   113f4:	ldr	r3, [fp, r3]
   113f8:	add	r2, pc, r2
   113fc:	ldr	r1, [pc, #2444]	; 11d90 <strspn@plt+0xac8>
   11400:	ldr	r0, [r0]
   11404:	ldr	r3, [r3]
   11408:	add	r1, pc, r1
   1140c:	stm	sp, {r2, r6}
   11410:	ldr	r2, [pc, #2428]	; 11d94 <strspn@plt+0xacc>
   11414:	add	r2, pc, r2
   11418:	bl	14ac0 <close_stdout@@Base+0x1ee8>
   1141c:	mov	r0, r6
   11420:	bl	111a8 <exit@plt>
   11424:	cmp	r0, #116	; 0x74
   11428:	beq	1148c <strspn@plt+0x1c4>
   1142c:	cmp	r0, #256	; 0x100
   11430:	moveq	r4, #1
   11434:	streq	r4, [sp, #16]
   11438:	beq	11394 <strspn@plt+0xcc>
   1143c:	cmp	r0, #97	; 0x61
   11440:	beq	1160c <strspn@plt+0x344>
   11444:	ldr	ip, [sp, #32]
   11448:	cmp	ip, #0
   1144c:	bne	11624 <strspn@plt+0x35c>
   11450:	sub	r2, r0, #48	; 0x30
   11454:	asr	r3, r2, #31
   11458:	mov	r4, #1
   1145c:	strd	r2, [sp, #64]	; 0x40
   11460:	str	r4, [sp, #32]
   11464:	b	11394 <strspn@plt+0xcc>
   11468:	ldr	r9, [sp, #32]
   1146c:	cmp	r9, #0
   11470:	beq	11394 <strspn@plt+0xcc>
   11474:	ldrd	r0, [sp, #64]	; 0x40
   11478:	str	r6, [sp, #32]
   1147c:	bl	11f1c <strspn@plt+0xc54>
   11480:	b	11394 <strspn@plt+0xcc>
   11484:	mov	r0, r6
   11488:	bl	12994 <strspn@plt+0x16cc>
   1148c:	ldr	r9, [sp, #36]	; 0x24
   11490:	mov	r5, #1
   11494:	ldr	r3, [pc, #2300]	; 11d98 <strspn@plt+0xad0>
   11498:	strb	r5, [r9, #36]	; 0x24
   1149c:	ldr	r3, [fp, r3]
   114a0:	ldr	r9, [r3]
   114a4:	ldrb	r7, [r9]
   114a8:	cmp	r7, #0
   114ac:	beq	11394 <strspn@plt+0xcc>
   114b0:	mov	r0, #0
   114b4:	mov	r1, #0
   114b8:	str	r8, [sp, #56]	; 0x38
   114bc:	mov	r4, #0
   114c0:	mov	r8, r7
   114c4:	str	fp, [sp, #60]	; 0x3c
   114c8:	strd	r0, [sp, #48]	; 0x30
   114cc:	mov	r7, r9
   114d0:	mov	sl, r0
   114d4:	mov	fp, r1
   114d8:	b	11580 <strspn@plt+0x2b8>
   114dc:	sub	r1, r8, #48	; 0x30
   114e0:	cmp	r1, #9
   114e4:	bhi	11668 <strspn@plt+0x3a0>
   114e8:	cmp	r6, #0
   114ec:	beq	115f0 <strspn@plt+0x328>
   114f0:	movw	r2, #39321	; 0x9999
   114f4:	movw	r3, #39321	; 0x9999
   114f8:	movt	r2, #39321	; 0x9999
   114fc:	movt	r3, #6553	; 0x1999
   11500:	cmp	fp, r3
   11504:	cmpeq	sl, r2
   11508:	bls	11d2c <strspn@plt+0xa64>
   1150c:	ldr	r1, [sp, #24]
   11510:	mov	r0, r4
   11514:	bl	112c8 <strspn@plt>
   11518:	mov	r8, r0
   1151c:	mov	r0, r4
   11520:	mov	r1, r8
   11524:	bl	14e3c <close_stdout@@Base+0x2264>
   11528:	ldr	r1, [sp, #28]
   1152c:	mov	r2, #5
   11530:	mov	r7, r0
   11534:	mov	r0, #0
   11538:	mov	r5, r0
   1153c:	bl	110ac <dcgettext@plt>
   11540:	mov	r9, r0
   11544:	mov	r0, r7
   11548:	bl	14624 <close_stdout@@Base+0x1a4c>
   1154c:	mov	r2, r9
   11550:	mov	r1, r5
   11554:	mov	r3, r0
   11558:	mov	r0, r5
   1155c:	bl	1113c <error@plt>
   11560:	mov	r0, r7
   11564:	bl	11064 <free@plt>
   11568:	sub	ip, r8, #1
   1156c:	add	r7, r4, ip
   11570:	ldrb	r8, [r7, #1]
   11574:	add	r7, r7, #1
   11578:	cmp	r8, #0
   1157c:	beq	115c8 <strspn@plt+0x300>
   11580:	cmp	r8, #44	; 0x2c
   11584:	beq	115a0 <strspn@plt+0x2d8>
   11588:	bl	1119c <__ctype_b_loc@plt>
   1158c:	lsl	r3, r8, #1
   11590:	ldr	r2, [r0]
   11594:	ldrh	r3, [r2, r3]
   11598:	ands	r3, r3, #1
   1159c:	beq	114dc <strspn@plt+0x214>
   115a0:	cmp	r6, #0
   115a4:	beq	11570 <strspn@plt+0x2a8>
   115a8:	mov	r0, sl
   115ac:	mov	r1, fp
   115b0:	bl	11f1c <strspn@plt+0xc54>
   115b4:	ldrb	r8, [r7, #1]
   115b8:	mov	r6, #0
   115bc:	add	r7, r7, #1
   115c0:	cmp	r8, #0
   115c4:	bne	11580 <strspn@plt+0x2b8>
   115c8:	cmp	r5, #0
   115cc:	strd	sl, [sp, #48]	; 0x30
   115d0:	ldr	r8, [sp, #56]	; 0x38
   115d4:	ldr	fp, [sp, #60]	; 0x3c
   115d8:	beq	116a4 <strspn@plt+0x3dc>
   115dc:	cmp	r6, #0
   115e0:	beq	11394 <strspn@plt+0xcc>
   115e4:	ldrd	r0, [sp, #48]	; 0x30
   115e8:	bl	11f1c <strspn@plt+0xc54>
   115ec:	b	11394 <strspn@plt+0xcc>
   115f0:	asr	r3, r1, #31
   115f4:	mov	r2, r1
   115f8:	mov	r4, r7
   115fc:	mov	sl, r2
   11600:	mov	fp, r3
   11604:	mov	r6, #1
   11608:	b	11570 <strspn@plt+0x2a8>
   1160c:	ldr	r5, [sp, #40]	; 0x28
   11610:	mov	r3, #1
   11614:	strb	r3, [r5, #36]	; 0x24
   11618:	b	11394 <strspn@plt+0xcc>
   1161c:	mov	r0, #1
   11620:	bl	12994 <strspn@plt+0x16cc>
   11624:	ldrd	r4, [sp, #64]	; 0x40
   11628:	movw	r2, #39321	; 0x9999
   1162c:	movw	r3, #39321	; 0x9999
   11630:	movt	r2, #39321	; 0x9999
   11634:	movt	r3, #6553	; 0x1999
   11638:	cmp	r5, r3
   1163c:	cmpeq	r4, r2
   11640:	bls	11d04 <strspn@plt+0xa3c>
   11644:	ldr	r1, [sp, #44]	; 0x2c
   11648:	mov	r2, #5
   1164c:	mov	r0, #0
   11650:	bl	110ac <dcgettext@plt>
   11654:	mov	r1, #0
   11658:	mov	r2, r0
   1165c:	mov	r0, #1
   11660:	bl	1113c <error@plt>
   11664:	b	11394 <strspn@plt+0xcc>
   11668:	ldr	r1, [pc, #1836]	; 11d9c <strspn@plt+0xad4>
   1166c:	mov	r0, r3
   11670:	mov	r2, #5
   11674:	str	r3, [sp, #8]
   11678:	add	r1, pc, r1
   1167c:	bl	110ac <dcgettext@plt>
   11680:	mov	r4, r0
   11684:	mov	r0, r7
   11688:	bl	14624 <close_stdout@@Base+0x1a4c>
   1168c:	ldr	ip, [sp, #8]
   11690:	mov	r2, r4
   11694:	mov	r1, ip
   11698:	mov	r3, r0
   1169c:	mov	r0, ip
   116a0:	bl	1113c <error@plt>
   116a4:	mov	r0, #1
   116a8:	bl	111a8 <exit@plt>
   116ac:	ldr	r5, [sp, #16]
   116b0:	cmp	r5, r6
   116b4:	ldrne	r3, [pc, #1764]	; 11da0 <strspn@plt+0xad8>
   116b8:	addne	r3, pc, r3
   116bc:	strbne	r6, [r3, #36]	; 0x24
   116c0:	ldr	r9, [sp, #32]
   116c4:	cmp	r9, #0
   116c8:	bne	11810 <strspn@plt+0x548>
   116cc:	ldr	r3, [pc, #1744]	; 11da4 <strspn@plt+0xadc>
   116d0:	mov	sl, #0
   116d4:	ldr	r9, [pc, #1740]	; 11da8 <strspn@plt+0xae0>
   116d8:	mov	r4, #0
   116dc:	add	r3, pc, r3
   116e0:	ldr	ip, [pc, #1732]	; 11dac <strspn@plt+0xae4>
   116e4:	mov	r5, #0
   116e8:	add	r9, pc, r9
   116ec:	ldr	r6, [r3, #4]
   116f0:	add	ip, pc, ip
   116f4:	ldr	r7, [r3]
   116f8:	str	ip, [sp, #16]
   116fc:	sub	r6, r6, #8
   11700:	b	11718 <strspn@plt+0x450>
   11704:	cmp	r1, r5
   11708:	cmpeq	r0, r4
   1170c:	bls	11754 <strspn@plt+0x48c>
   11710:	ldrd	r4, [r6, #8]!
   11714:	add	sl, sl, #1
   11718:	cmp	sl, r7
   1171c:	beq	11778 <strspn@plt+0x4b0>
   11720:	ldrd	r0, [r6, #8]
   11724:	orrs	r2, r0, r1
   11728:	bne	11704 <strspn@plt+0x43c>
   1172c:	mov	r1, r9
   11730:	mov	r2, #5
   11734:	mov	r0, #0
   11738:	bl	110ac <dcgettext@plt>
   1173c:	mov	r1, #0
   11740:	mov	r2, r0
   11744:	mov	r0, #1
   11748:	bl	1113c <error@plt>
   1174c:	ldrd	r0, [r6, #8]
   11750:	b	11704 <strspn@plt+0x43c>
   11754:	ldr	r1, [sp, #16]
   11758:	mov	r2, #5
   1175c:	mov	r0, #0
   11760:	bl	110ac <dcgettext@plt>
   11764:	mov	r1, #0
   11768:	mov	r2, r0
   1176c:	mov	r0, #1
   11770:	bl	1113c <error@plt>
   11774:	b	11710 <strspn@plt+0x448>
   11778:	ldr	r3, [pc, #1584]	; 11db0 <strspn@plt+0xae8>
   1177c:	add	r3, pc, r3
   11780:	ldr	r2, [r3]
   11784:	cmp	r2, #0
   11788:	beq	11800 <strspn@plt+0x538>
   1178c:	cmp	r2, #1
   11790:	ldreq	r2, [r3, #4]
   11794:	movne	r2, #0
   11798:	ldreq	r2, [r2]
   1179c:	str	r2, [r3, #32]
   117a0:	ldr	r3, [pc, #1548]	; 11db4 <strspn@plt+0xaec>
   117a4:	ldr	r4, [sp, #12]
   117a8:	ldr	r3, [fp, r3]
   117ac:	ldr	r3, [r3]
   117b0:	cmp	r4, r3
   117b4:	addgt	r3, r8, r3, lsl #2
   117b8:	ldrle	r3, [pc, #1528]	; 11db8 <strspn@plt+0xaf0>
   117bc:	addle	r3, pc, r3
   117c0:	ldr	r4, [pc, #1524]	; 11dbc <strspn@plt+0xaf4>
   117c4:	add	r4, pc, r4
   117c8:	str	r3, [r4, #24]
   117cc:	bl	1110c <__ctype_get_mb_cur_max@plt>
   117d0:	cmp	r0, #1
   117d4:	bls	11850 <strspn@plt+0x588>
   117d8:	bl	12254 <strspn@plt+0xf8c>
   117dc:	ldr	r3, [pc, #1500]	; 11dc0 <strspn@plt+0xaf8>
   117e0:	add	r3, pc, r3
   117e4:	ldrb	r3, [r3, #28]
   117e8:	cmp	r3, #0
   117ec:	bne	1181c <strspn@plt+0x554>
   117f0:	ldr	r3, [pc, #1484]	; 11dc4 <strspn@plt+0xafc>
   117f4:	add	r3, pc, r3
   117f8:	ldr	r0, [r3, #20]
   117fc:	bl	111a8 <exit@plt>
   11800:	mov	r2, #8
   11804:	str	r2, [r3, #12]
   11808:	str	r2, [r3, #32]
   1180c:	b	117a0 <strspn@plt+0x4d8>
   11810:	ldrd	r0, [sp, #64]	; 0x40
   11814:	bl	11f1c <strspn@plt+0xc54>
   11818:	b	116cc <strspn@plt+0x404>
   1181c:	ldr	r3, [pc, #1444]	; 11dc8 <strspn@plt+0xb00>
   11820:	ldr	r3, [fp, r3]
   11824:	ldr	r0, [r3]
   11828:	bl	14e50 <close_stdout@@Base+0x2278>
   1182c:	cmp	r0, #0
   11830:	beq	117f0 <strspn@plt+0x528>
   11834:	bl	111cc <__errno_location@plt>
   11838:	ldr	r2, [pc, #1420]	; 11dcc <strspn@plt+0xb04>
   1183c:	add	r2, pc, r2
   11840:	ldr	r1, [r0]
   11844:	mov	r0, #1
   11848:	bl	1113c <error@plt>
   1184c:	b	117f0 <strspn@plt+0x528>
   11850:	mov	r0, #0
   11854:	bl	1207c <strspn@plt+0xdb4>
   11858:	subs	r7, r0, #0
   1185c:	beq	117dc <strspn@plt+0x514>
   11860:	ldr	r0, [r4, #12]
   11864:	mov	r5, #1
   11868:	mov	r4, #0
   1186c:	str	r5, [sp, #24]
   11870:	mov	r5, #0
   11874:	strd	r4, [sp, #16]
   11878:	bl	14bd0 <close_stdout@@Base+0x1ff8>
   1187c:	ldr	ip, [pc, #1356]	; 11dd0 <strspn@plt+0xb08>
   11880:	ldr	r5, [sp, #24]
   11884:	mov	r8, #0
   11888:	add	ip, pc, ip
   1188c:	str	ip, [sp, #40]	; 0x28
   11890:	ldr	ip, [pc, #1340]	; 11dd4 <strspn@plt+0xb0c>
   11894:	str	r5, [sp, #12]
   11898:	add	ip, pc, ip
   1189c:	str	ip, [sp, #32]
   118a0:	ldr	ip, [pc, #1328]	; 11dd8 <strspn@plt+0xb10>
   118a4:	ldrd	r4, [sp, #16]
   118a8:	add	ip, pc, ip
   118ac:	str	ip, [sp, #44]	; 0x2c
   118b0:	ldr	ip, [pc, #1316]	; 11ddc <strspn@plt+0xb14>
   118b4:	str	r8, [sp, #28]
   118b8:	add	ip, pc, ip
   118bc:	strd	r4, [sp, #64]	; 0x40
   118c0:	str	ip, [sp, #48]	; 0x30
   118c4:	str	r8, [sp, #56]	; 0x38
   118c8:	str	r8, [sp, #60]	; 0x3c
   118cc:	str	r0, [sp, #36]	; 0x24
   118d0:	ldr	r3, [r7, #4]
   118d4:	ldr	r2, [r7, #8]
   118d8:	cmp	r3, r2
   118dc:	addcc	r2, r3, #1
   118e0:	strcc	r2, [r7, #4]
   118e4:	ldrbcc	r6, [r3]
   118e8:	bcs	11ce0 <strspn@plt+0xa18>
   118ec:	ldr	ip, [sp, #12]
   118f0:	cmp	ip, #0
   118f4:	beq	11b10 <strspn@plt+0x848>
   118f8:	bl	1119c <__ctype_b_loc@plt>
   118fc:	lsl	r3, r6, #1
   11900:	ldr	r2, [r0]
   11904:	ldrh	sl, [r2, r3]
   11908:	and	sl, sl, #1
   1190c:	subs	ip, sl, #0
   11910:	beq	11a30 <strspn@plt+0x768>
   11914:	ldrd	r4, [sp, #16]
   11918:	ldrd	r8, [sp, #64]	; 0x40
   1191c:	cmp	r5, r9
   11920:	cmpeq	r4, r8
   11924:	bhi	11974 <strspn@plt+0x6ac>
   11928:	ldr	r3, [pc, #1200]	; 11de0 <strspn@plt+0xb18>
   1192c:	add	r3, pc, r3
   11930:	ldr	r2, [r3, #32]
   11934:	cmp	r2, #0
   11938:	beq	11bd0 <strspn@plt+0x908>
   1193c:	mov	r5, #0
   11940:	mov	r4, r2
   11944:	mov	r3, r5
   11948:	strd	r4, [sp, #16]
   1194c:	mov	r0, r8
   11950:	adds	r4, r4, r8
   11954:	mov	r1, r9
   11958:	adc	r5, r5, r9
   1195c:	str	ip, [sp, #8]
   11960:	bl	156a4 <close_stdout@@Base+0x2acc>
   11964:	ldr	ip, [sp, #8]
   11968:	subs	r4, r4, r2
   1196c:	sbc	r5, r5, r3
   11970:	strd	r4, [sp, #16]
   11974:	ldrd	r8, [sp, #64]	; 0x40
   11978:	ldrd	r4, [sp, #16]
   1197c:	cmp	r9, r5
   11980:	cmpeq	r8, r4
   11984:	bhi	11c90 <strspn@plt+0x9c8>
   11988:	cmp	r6, #9
   1198c:	beq	11c70 <strspn@plt+0x9a8>
   11990:	ldrd	r8, [sp, #64]	; 0x40
   11994:	ldrd	r4, [sp, #16]
   11998:	adds	r8, r8, #1
   1199c:	adc	r9, r9, #0
   119a0:	strd	r8, [sp, #64]	; 0x40
   119a4:	ldr	r9, [sp, #24]
   119a8:	eor	r3, r9, #1
   119ac:	ldrd	r8, [sp, #64]	; 0x40
   119b0:	cmp	r5, r9
   119b4:	cmpeq	r4, r8
   119b8:	orrne	r3, r3, #1
   119bc:	cmp	r3, #0
   119c0:	beq	11c54 <strspn@plt+0x98c>
   119c4:	cmp	r5, r9
   119c8:	cmpeq	r4, r8
   119cc:	ldr	r9, [sp, #56]	; 0x38
   119d0:	ldr	r5, [sp, #28]
   119d4:	ldr	r4, [sp, #36]	; 0x24
   119d8:	str	ip, [sp, #24]
   119dc:	moveq	r5, #1
   119e0:	str	r5, [sp, #28]
   119e4:	strb	r6, [r4, r9]
   119e8:	add	r9, r9, #1
   119ec:	str	r9, [sp, #56]	; 0x38
   119f0:	cmp	r6, #10
   119f4:	bne	118d0 <strspn@plt+0x608>
   119f8:	mov	r5, #0
   119fc:	mov	r9, #0
   11a00:	mov	r4, #0
   11a04:	mov	r8, #0
   11a08:	strd	r4, [sp, #16]
   11a0c:	mov	r5, #0
   11a10:	strd	r8, [sp, #64]	; 0x40
   11a14:	mov	r9, #1
   11a18:	str	r5, [sp, #56]	; 0x38
   11a1c:	str	r9, [sp, #24]
   11a20:	str	r5, [sp, #28]
   11a24:	str	r5, [sp, #60]	; 0x3c
   11a28:	str	r9, [sp, #12]
   11a2c:	b	118d0 <strspn@plt+0x608>
   11a30:	cmp	r6, #8
   11a34:	beq	11b88 <strspn@plt+0x8c0>
   11a38:	ldrd	r8, [sp, #64]	; 0x40
   11a3c:	adds	r8, r8, #1
   11a40:	adc	r9, r9, #0
   11a44:	strd	r8, [sp, #64]	; 0x40
   11a48:	orrs	r9, r8, r9
   11a4c:	beq	11c24 <strspn@plt+0x95c>
   11a50:	ldr	r5, [sp, #56]	; 0x38
   11a54:	cmp	r5, #0
   11a58:	beq	11ae8 <strspn@plt+0x820>
   11a5c:	ldr	r3, [sp, #28]
   11a60:	mov	r1, #1
   11a64:	ldr	r0, [sp, #36]	; 0x24
   11a68:	cmp	r5, #1
   11a6c:	movls	r3, #0
   11a70:	andhi	r3, r3, #1
   11a74:	ldr	r2, [sp, #56]	; 0x38
   11a78:	cmp	r3, #0
   11a7c:	ldrne	r8, [sp, #36]	; 0x24
   11a80:	movne	r3, #9
   11a84:	strbne	r3, [r8]
   11a88:	ldr	r3, [pc, #756]	; 11d84 <strspn@plt+0xabc>
   11a8c:	ldr	r3, [fp, r3]
   11a90:	ldr	r3, [r3]
   11a94:	str	ip, [sp, #8]
   11a98:	bl	11094 <fwrite_unlocked@plt>
   11a9c:	ldr	r9, [sp, #56]	; 0x38
   11aa0:	ldr	ip, [sp, #8]
   11aa4:	cmp	r9, r0
   11aa8:	moveq	r5, #0
   11aac:	streq	r5, [sp, #28]
   11ab0:	beq	11ae8 <strspn@plt+0x820>
   11ab4:	bl	111cc <__errno_location@plt>
   11ab8:	mov	r4, #0
   11abc:	ldr	r1, [sp, #44]	; 0x2c
   11ac0:	mov	r2, #5
   11ac4:	str	r4, [sp, #28]
   11ac8:	ldr	r8, [r0]
   11acc:	mov	r0, r4
   11ad0:	bl	110ac <dcgettext@plt>
   11ad4:	mov	r1, r8
   11ad8:	mov	r2, r0
   11adc:	mov	r0, #1
   11ae0:	bl	1113c <error@plt>
   11ae4:	ldr	ip, [sp, #8]
   11ae8:	ldr	r8, [sp, #32]
   11aec:	mov	r9, #0
   11af0:	str	ip, [sp, #24]
   11af4:	ldr	ip, [sp, #12]
   11af8:	ldrb	r3, [r8, #36]	; 0x24
   11afc:	str	r9, [sp, #56]	; 0x38
   11b00:	cmp	r3, r9
   11b04:	movne	sl, #1
   11b08:	and	ip, sl, ip
   11b0c:	str	ip, [sp, #12]
   11b10:	cmp	r6, #0
   11b14:	blt	11b7c <strspn@plt+0x8b4>
   11b18:	ldr	r3, [pc, #612]	; 11d84 <strspn@plt+0xabc>
   11b1c:	ldr	r3, [fp, r3]
   11b20:	ldr	r0, [r3]
   11b24:	ldr	r3, [r0, #20]
   11b28:	ldr	r2, [r0, #24]
   11b2c:	cmp	r3, r2
   11b30:	addcc	r2, r3, #1
   11b34:	strcc	r2, [r0, #20]
   11b38:	strbcc	r6, [r3]
   11b3c:	bcc	119f0 <strspn@plt+0x728>
   11b40:	uxtb	r1, r6
   11b44:	bl	11244 <__overflow@plt>
   11b48:	cmp	r0, #0
   11b4c:	bge	119f0 <strspn@plt+0x728>
   11b50:	bl	111cc <__errno_location@plt>
   11b54:	ldr	r1, [sp, #40]	; 0x28
   11b58:	mov	r2, #5
   11b5c:	ldr	sl, [r0]
   11b60:	mov	r0, #0
   11b64:	bl	110ac <dcgettext@plt>
   11b68:	mov	r1, sl
   11b6c:	mov	r2, r0
   11b70:	mov	r0, #1
   11b74:	bl	1113c <error@plt>
   11b78:	b	119f0 <strspn@plt+0x728>
   11b7c:	ldr	r0, [sp, #36]	; 0x24
   11b80:	bl	11064 <free@plt>
   11b84:	b	117dc <strspn@plt+0x514>
   11b88:	ldr	r8, [sp, #64]	; 0x40
   11b8c:	mov	r3, ip
   11b90:	ldr	r9, [sp, #68]	; 0x44
   11b94:	ldrd	r4, [sp, #64]	; 0x40
   11b98:	orrs	r8, r8, r9
   11b9c:	moveq	r2, #0
   11ba0:	movne	r2, #1
   11ba4:	subs	r4, r4, r2
   11ba8:	sbc	r5, r5, r3
   11bac:	strd	r4, [sp, #64]	; 0x40
   11bb0:	ldr	r5, [sp, #60]	; 0x3c
   11bb4:	mov	r8, r5
   11bb8:	cmp	r5, #0
   11bbc:	subne	r5, r5, #1
   11bc0:	str	r5, [sp, #60]	; 0x3c
   11bc4:	ldrd	r4, [sp, #64]	; 0x40
   11bc8:	strd	r4, [sp, #16]
   11bcc:	b	11a50 <strspn@plt+0x788>
   11bd0:	ldr	r5, [sp, #60]	; 0x3c
   11bd4:	ldm	r3, {r0, r2}
   11bd8:	sub	r1, r5, #-536870911	; 0xe0000001
   11bdc:	ldr	r8, [sp, #56]	; 0x38
   11be0:	ldrd	r4, [sp, #64]	; 0x40
   11be4:	add	r1, r2, r1, lsl #3
   11be8:	ldr	r9, [sp, #60]	; 0x3c
   11bec:	b	11c04 <strspn@plt+0x93c>
   11bf0:	ldrd	r2, [r1, #8]!
   11bf4:	add	r9, r9, #1
   11bf8:	cmp	r5, r3
   11bfc:	cmpeq	r4, r2
   11c00:	bcc	11cc0 <strspn@plt+0x9f8>
   11c04:	cmp	r9, r0
   11c08:	bne	11bf0 <strspn@plt+0x928>
   11c0c:	strd	r4, [sp, #64]	; 0x40
   11c10:	mov	r4, #0
   11c14:	str	r8, [sp, #56]	; 0x38
   11c18:	str	r9, [sp, #60]	; 0x3c
   11c1c:	str	r4, [sp, #12]
   11c20:	b	11a50 <strspn@plt+0x788>
   11c24:	mov	r0, ip
   11c28:	ldr	r1, [sp, #48]	; 0x30
   11c2c:	mov	r2, #5
   11c30:	str	ip, [sp, #8]
   11c34:	bl	110ac <dcgettext@plt>
   11c38:	ldr	ip, [sp, #8]
   11c3c:	mov	r1, ip
   11c40:	mov	r2, r0
   11c44:	mov	r0, #1
   11c48:	bl	1113c <error@plt>
   11c4c:	ldr	ip, [sp, #8]
   11c50:	b	11a50 <strspn@plt+0x788>
   11c54:	ldr	r8, [sp, #36]	; 0x24
   11c58:	mov	r3, #9
   11c5c:	strb	r3, [r8]
   11c60:	ldr	r5, [sp, #28]
   11c64:	mov	r6, #9
   11c68:	str	r5, [sp, #56]	; 0x38
   11c6c:	b	11a50 <strspn@plt+0x788>
   11c70:	ldr	r8, [sp, #56]	; 0x38
   11c74:	cmp	r8, #0
   11c78:	beq	11cd4 <strspn@plt+0xa0c>
   11c7c:	ldr	r9, [sp, #36]	; 0x24
   11c80:	ldrd	r4, [sp, #16]
   11c84:	strb	r6, [r9]
   11c88:	strd	r4, [sp, #64]	; 0x40
   11c8c:	b	11c60 <strspn@plt+0x998>
   11c90:	ldr	r1, [pc, #332]	; 11de4 <strspn@plt+0xb1c>
   11c94:	mov	r2, #5
   11c98:	mov	r0, #0
   11c9c:	str	ip, [sp, #8]
   11ca0:	add	r1, pc, r1
   11ca4:	bl	110ac <dcgettext@plt>
   11ca8:	mov	r1, #0
   11cac:	mov	r2, r0
   11cb0:	mov	r0, #1
   11cb4:	bl	1113c <error@plt>
   11cb8:	ldr	ip, [sp, #8]
   11cbc:	b	11988 <strspn@plt+0x6c0>
   11cc0:	strd	r4, [sp, #64]	; 0x40
   11cc4:	str	r8, [sp, #56]	; 0x38
   11cc8:	str	r9, [sp, #60]	; 0x3c
   11ccc:	strd	r2, [sp, #16]
   11cd0:	b	11974 <strspn@plt+0x6ac>
   11cd4:	ldrd	r4, [sp, #16]
   11cd8:	strd	r4, [sp, #64]	; 0x40
   11cdc:	b	11c60 <strspn@plt+0x998>
   11ce0:	mov	r0, r7
   11ce4:	bl	11238 <__uflow@plt>
   11ce8:	subs	r6, r0, #0
   11cec:	bge	118ec <strspn@plt+0x624>
   11cf0:	mov	r0, r7
   11cf4:	bl	1207c <strspn@plt+0xdb4>
   11cf8:	subs	r7, r0, #0
   11cfc:	bne	118d0 <strspn@plt+0x608>
   11d00:	b	118ec <strspn@plt+0x624>
   11d04:	mov	r1, #10
   11d08:	sub	r0, r0, #48	; 0x30
   11d0c:	umull	r2, r3, r4, r1
   11d10:	adds	r2, r2, r0
   11d14:	mla	r3, r1, r5, r3
   11d18:	adc	r3, r3, r0, asr #31
   11d1c:	cmp	r5, r3
   11d20:	cmpeq	r4, r2
   11d24:	bhi	11644 <strspn@plt+0x37c>
   11d28:	b	11458 <strspn@plt+0x190>
   11d2c:	mov	r8, #10
   11d30:	umull	r2, r3, sl, r8
   11d34:	adds	r2, r2, r1
   11d38:	mla	r3, r8, fp, r3
   11d3c:	adc	r3, r3, r1, asr #31
   11d40:	cmp	r3, fp
   11d44:	cmpeq	r2, sl
   11d48:	bcc	1150c <strspn@plt+0x244>
   11d4c:	b	115fc <strspn@plt+0x334>
   11d50:	andeq	r5, r0, ip, lsr #1
   11d54:	andeq	r5, r0, r8, asr r1
   11d58:	andeq	r5, r1, r4, ror #25
   11d5c:	andeq	r5, r1, ip, asr lr
   11d60:	andeq	r5, r0, r4, asr #2
   11d64:	andeq	r5, r0, r0, ror #3
   11d68:	andeq	r5, r0, r4, lsl r2
   11d6c:	andeq	r0, r0, r4, lsl r1
   11d70:	andeq	r5, r0, r4, ror #3
   11d74:	andeq	r5, r1, r4, lsr #28
   11d78:	andeq	r5, r1, ip, lsl lr
   11d7c:	andeq	r5, r0, r0, lsl r1
   11d80:	andeq	r5, r1, ip, asr #21
   11d84:	andeq	r0, r0, r4, lsr #2
   11d88:	andeq	r0, r0, ip, lsl #2
   11d8c:	strheq	r5, [r0], -r0
   11d90:	muleq	r0, r4, r0
   11d94:	andeq	r4, r0, r0, lsl #31
   11d98:	andeq	r0, r0, ip, lsr r1
   11d9c:	strdeq	r4, [r0], -r8
   11da0:	ldrdeq	r5, [r1], -r8
   11da4:			; <UNDEFINED> instruction: 0x00015ab4
   11da8:	andeq	r4, r0, r0, ror #27
   11dac:	strdeq	r4, [r0], -r0
   11db0:	andeq	r5, r1, r4, lsl sl
   11db4:	andeq	r0, r0, r8, lsl #2
   11db8:	andeq	r5, r1, r0, lsl #19
   11dbc:	andeq	r5, r1, ip, asr #19
   11dc0:			; <UNDEFINED> instruction: 0x000159b0
   11dc4:	muleq	r1, ip, r9
   11dc8:	andeq	r0, r0, r0, lsr #2
   11dcc:	andeq	r4, r0, r4, ror #25
   11dd0:	andeq	r4, r0, ip, lsl #25
   11dd4:	strdeq	r5, [r1], -r8
   11dd8:	andeq	r4, r0, ip, ror #24
   11ddc:	andeq	r4, r0, r4, asr #24
   11de0:	andeq	r5, r1, r4, ror #16
   11de4:	andeq	r4, r0, ip, asr r8
   11de8:	mov	fp, #0
   11dec:	mov	lr, #0
   11df0:	pop	{r1}		; (ldr r1, [sp], #4)
   11df4:	mov	r2, sp
   11df8:	push	{r2}		; (str r2, [sp, #-4]!)
   11dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   11e00:	ldr	ip, [pc, #16]	; 11e18 <strspn@plt+0xb50>
   11e04:	push	{ip}		; (str ip, [sp, #-4]!)
   11e08:	ldr	r0, [pc, #12]	; 11e1c <strspn@plt+0xb54>
   11e0c:	ldr	r3, [pc, #12]	; 11e20 <strspn@plt+0xb58>
   11e10:	bl	1116c <__libc_start_main@plt>
   11e14:	bl	112b0 <abort@plt>
   11e18:	andeq	r6, r1, r8, lsl #1
   11e1c:	ldrdeq	r1, [r1], -r4
   11e20:	andeq	r6, r1, r4, lsr #32
   11e24:	ldr	r3, [pc, #20]	; 11e40 <strspn@plt+0xb78>
   11e28:	ldr	r2, [pc, #20]	; 11e44 <strspn@plt+0xb7c>
   11e2c:	add	r3, pc, r3
   11e30:	ldr	r2, [r3, r2]
   11e34:	cmp	r2, #0
   11e38:	bxeq	lr
   11e3c:	b	11184 <__gmon_start__@plt>
   11e40:	andeq	r5, r1, ip, asr #3
   11e44:	andeq	r0, r0, r8, lsl r1
   11e48:	push	{r3, lr}
   11e4c:	movw	r0, #29076	; 0x7194
   11e50:	ldr	r3, [pc, #36]	; 11e7c <strspn@plt+0xbb4>
   11e54:	movt	r0, #2
   11e58:	rsb	r3, r0, r3
   11e5c:	cmp	r3, #6
   11e60:	popls	{r3, pc}
   11e64:	movw	r3, #0
   11e68:	movt	r3, #0
   11e6c:	cmp	r3, #0
   11e70:	popeq	{r3, pc}
   11e74:	blx	r3
   11e78:	pop	{r3, pc}
   11e7c:	muleq	r2, r7, r1
   11e80:	push	{r3, lr}
   11e84:	movw	r0, #29076	; 0x7194
   11e88:	movw	r3, #29076	; 0x7194
   11e8c:	movt	r0, #2
   11e90:	movt	r3, #2
   11e94:	rsb	r3, r0, r3
   11e98:	asr	r3, r3, #2
   11e9c:	add	r3, r3, r3, lsr #31
   11ea0:	asrs	r1, r3, #1
   11ea4:	popeq	{r3, pc}
   11ea8:	movw	r2, #0
   11eac:	movt	r2, #0
   11eb0:	cmp	r2, #0
   11eb4:	popeq	{r3, pc}
   11eb8:	blx	r2
   11ebc:	pop	{r3, pc}
   11ec0:	push	{r4, lr}
   11ec4:	movw	r4, #29076	; 0x7194
   11ec8:	movt	r4, #2
   11ecc:	ldrb	r3, [r4]
   11ed0:	cmp	r3, #0
   11ed4:	popne	{r4, pc}
   11ed8:	bl	11e48 <strspn@plt+0xb80>
   11edc:	mov	r3, #1
   11ee0:	strb	r3, [r4]
   11ee4:	pop	{r4, pc}
   11ee8:	movw	r0, #28288	; 0x6e80
   11eec:	movt	r0, #2
   11ef0:	push	{r3, lr}
   11ef4:	ldr	r3, [r0]
   11ef8:	cmp	r3, #0
   11efc:	beq	11f14 <strspn@plt+0xc4c>
   11f00:	movw	r3, #0
   11f04:	movt	r3, #0
   11f08:	cmp	r3, #0
   11f0c:	beq	11f14 <strspn@plt+0xc4c>
   11f10:	blx	r3
   11f14:	pop	{r3, lr}
   11f18:	b	11e80 <strspn@plt+0xbb8>
   11f1c:	ldr	r2, [pc, #316]	; 12060 <strspn@plt+0xd98>
   11f20:	push	{r4, r5, r6, r7, r8, lr}
   11f24:	add	r2, pc, r2
   11f28:	mov	r6, r0
   11f2c:	mov	r7, r1
   11f30:	ldr	r3, [r2]
   11f34:	cmp	r3, #0
   11f38:	beq	11fc0 <strspn@plt+0xcf8>
   11f3c:	ldr	r0, [r2, #4]
   11f40:	add	r2, r0, r3, lsl #3
   11f44:	ldrd	r4, [r2, #-8]
   11f48:	cmp	r5, r7
   11f4c:	cmpeq	r4, r6
   11f50:	movhi	r4, #0
   11f54:	movhi	r5, #0
   11f58:	bls	11fc8 <strspn@plt+0xd00>
   11f5c:	ldr	r2, [pc, #256]	; 12064 <strspn@plt+0xd9c>
   11f60:	add	r2, pc, r2
   11f64:	ldr	r2, [r2, #8]
   11f68:	cmp	r3, r2
   11f6c:	beq	11fe0 <strspn@plt+0xd18>
   11f70:	ldr	r1, [pc, #240]	; 12068 <strspn@plt+0xda0>
   11f74:	lsl	r2, r3, #3
   11f78:	add	r3, r3, #1
   11f7c:	add	r1, pc, r1
   11f80:	strd	r6, [r0, r2]
   11f84:	ldr	r2, [r1, #12]
   11f88:	str	r3, [r1]
   11f8c:	mov	r3, #0
   11f90:	cmp	r5, r3
   11f94:	cmpeq	r4, r2
   11f98:	popls	{r4, r5, r6, r7, r8, pc}
   11f9c:	mvn	r2, #0
   11fa0:	mov	r3, #0
   11fa4:	cmp	r5, r3
   11fa8:	cmpeq	r4, r2
   11fac:	bhi	12020 <strspn@plt+0xd58>
   11fb0:	ldr	r3, [pc, #180]	; 1206c <strspn@plt+0xda4>
   11fb4:	add	r3, pc, r3
   11fb8:	str	r4, [r3, #12]
   11fbc:	pop	{r4, r5, r6, r7, r8, pc}
   11fc0:	mov	r4, #0
   11fc4:	mov	r5, #0
   11fc8:	ldr	r2, [pc, #160]	; 12070 <strspn@plt+0xda8>
   11fcc:	subs	r4, r6, r4
   11fd0:	sbc	r5, r7, r5
   11fd4:	add	r2, pc, r2
   11fd8:	ldr	r0, [r2, #4]
   11fdc:	b	11f5c <strspn@plt+0xc94>
   11fe0:	cmp	r0, #0
   11fe4:	beq	12048 <strspn@plt+0xd80>
   11fe8:	movw	r2, #21844	; 0x5554
   11fec:	movt	r2, #5461	; 0x1555
   11ff0:	cmp	r3, r2
   11ff4:	addls	r2, r3, #1
   11ff8:	addls	r3, r3, r2, lsr #1
   11ffc:	bhi	1205c <strspn@plt+0xd94>
   12000:	lsl	r1, r3, #3
   12004:	ldr	r8, [pc, #104]	; 12074 <strspn@plt+0xdac>
   12008:	add	r8, pc, r8
   1200c:	str	r3, [r8, #8]
   12010:	bl	14c28 <close_stdout@@Base+0x2050>
   12014:	ldr	r3, [r8]
   12018:	str	r0, [r8, #4]
   1201c:	b	11f70 <strspn@plt+0xca8>
   12020:	ldr	r1, [pc, #80]	; 12078 <strspn@plt+0xdb0>
   12024:	mov	r2, #5
   12028:	mov	r0, #0
   1202c:	add	r1, pc, r1
   12030:	bl	110ac <dcgettext@plt>
   12034:	mov	r1, #0
   12038:	mov	r2, r0
   1203c:	mov	r0, #1
   12040:	bl	1113c <error@plt>
   12044:	b	11fb0 <strspn@plt+0xce8>
   12048:	cmp	r3, #0
   1204c:	moveq	r1, #64	; 0x40
   12050:	moveq	r3, #8
   12054:	beq	12004 <strspn@plt+0xd3c>
   12058:	b	12000 <strspn@plt+0xd38>
   1205c:	bl	14de4 <close_stdout@@Base+0x220c>
   12060:	andeq	r5, r1, ip, ror #4
   12064:	andeq	r5, r1, r0, lsr r2
   12068:	andeq	r5, r1, r4, lsl r2
   1206c:	ldrdeq	r5, [r1], -ip
   12070:			; <UNDEFINED> instruction: 0x000151bc
   12074:	andeq	r5, r1, r8, lsl #3
   12078:	muleq	r0, r4, r0
   1207c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12080:	subs	r4, r0, #0
   12084:	ldr	sl, [pc, #404]	; 12220 <strspn@plt+0xf58>
   12088:	add	sl, pc, sl
   1208c:	beq	120c8 <strspn@plt+0xe00>
   12090:	ldr	r3, [r4]
   12094:	tst	r3, #32
   12098:	bne	121f0 <strspn@plt+0xf28>
   1209c:	ldr	r3, [pc, #384]	; 12224 <strspn@plt+0xf5c>
   120a0:	mov	r0, r4
   120a4:	add	r3, pc, r3
   120a8:	ldr	r3, [r3, #16]
   120ac:	ldrb	r2, [r3]
   120b0:	cmp	r2, #45	; 0x2d
   120b4:	bne	121b4 <strspn@plt+0xeec>
   120b8:	ldrb	r3, [r3, #1]
   120bc:	cmp	r3, #0
   120c0:	bne	121b4 <strspn@plt+0xeec>
   120c4:	bl	11274 <clearerr_unlocked@plt>
   120c8:	ldr	r2, [pc, #344]	; 12228 <strspn@plt+0xf60>
   120cc:	add	r2, pc, r2
   120d0:	ldr	r3, [r2, #24]
   120d4:	add	r1, r3, #4
   120d8:	str	r1, [r2, #24]
   120dc:	ldr	r4, [r3]
   120e0:	cmp	r4, #0
   120e4:	beq	121ac <strspn@plt+0xee4>
   120e8:	ldr	r8, [pc, #316]	; 1222c <strspn@plt+0xf64>
   120ec:	mov	r7, #1
   120f0:	ldr	fp, [pc, #312]	; 12230 <strspn@plt+0xf68>
   120f4:	ldr	r9, [pc, #312]	; 12234 <strspn@plt+0xf6c>
   120f8:	add	r8, pc, r8
   120fc:	ldr	r6, [pc, #308]	; 12238 <strspn@plt+0xf70>
   12100:	add	fp, pc, fp
   12104:	add	r9, pc, r9
   12108:	add	r6, pc, r6
   1210c:	b	12154 <strspn@plt+0xe8c>
   12110:	bl	11280 <fopen64@plt>
   12114:	mov	r5, r0
   12118:	cmp	r5, #0
   1211c:	bne	1218c <strspn@plt+0xec4>
   12120:	bl	111cc <__errno_location@plt>
   12124:	mov	r3, r4
   12128:	mov	r2, r9
   1212c:	ldr	r1, [r0]
   12130:	mov	r0, r5
   12134:	bl	1113c <error@plt>
   12138:	ldr	r3, [r6, #24]
   1213c:	str	r7, [r6, #20]
   12140:	add	r2, r3, #4
   12144:	str	r2, [r6, #24]
   12148:	ldr	r4, [r3]
   1214c:	cmp	r4, #0
   12150:	beq	121ac <strspn@plt+0xee4>
   12154:	ldrb	r3, [r4]
   12158:	mov	r1, r8
   1215c:	ldr	r2, [pc, #216]	; 1223c <strspn@plt+0xf74>
   12160:	mov	r0, r4
   12164:	cmp	r3, #45	; 0x2d
   12168:	bne	12110 <strspn@plt+0xe48>
   1216c:	ldrb	r3, [r4, #1]
   12170:	cmp	r3, #0
   12174:	bne	12110 <strspn@plt+0xe48>
   12178:	strb	r7, [fp, #28]
   1217c:	ldr	r3, [sl, r2]
   12180:	ldr	r5, [r3]
   12184:	cmp	r5, #0
   12188:	beq	12120 <strspn@plt+0xe58>
   1218c:	ldr	r3, [pc, #172]	; 12240 <strspn@plt+0xf78>
   12190:	mov	r0, r5
   12194:	mov	r1, #2
   12198:	add	r3, pc, r3
   1219c:	str	r4, [r3, #16]
   121a0:	bl	12d98 <close_stdout@@Base+0x1c0>
   121a4:	mov	r0, r5
   121a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121ac:	mov	r0, #0
   121b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121b4:	bl	14e50 <close_stdout@@Base+0x2278>
   121b8:	cmp	r0, #0
   121bc:	beq	120c8 <strspn@plt+0xe00>
   121c0:	bl	111cc <__errno_location@plt>
   121c4:	ldr	r4, [pc, #120]	; 12244 <strspn@plt+0xf7c>
   121c8:	ldr	r2, [pc, #120]	; 12248 <strspn@plt+0xf80>
   121cc:	add	r4, pc, r4
   121d0:	add	r2, pc, r2
   121d4:	ldr	r3, [r4, #16]
   121d8:	ldr	r1, [r0]
   121dc:	mov	r0, #0
   121e0:	bl	1113c <error@plt>
   121e4:	mov	r3, #1
   121e8:	str	r3, [r4, #20]
   121ec:	b	120c8 <strspn@plt+0xe00>
   121f0:	bl	111cc <__errno_location@plt>
   121f4:	ldr	r5, [pc, #80]	; 1224c <strspn@plt+0xf84>
   121f8:	ldr	r2, [pc, #80]	; 12250 <strspn@plt+0xf88>
   121fc:	add	r5, pc, r5
   12200:	add	r2, pc, r2
   12204:	ldr	r3, [r5, #16]
   12208:	ldr	r1, [r0]
   1220c:	mov	r0, #0
   12210:	bl	1113c <error@plt>
   12214:	mov	r3, #1
   12218:	str	r3, [r5, #20]
   1221c:	b	1209c <strspn@plt+0xdd4>
   12220:	andeq	r4, r1, r0, ror pc
   12224:	andeq	r5, r1, ip, ror #1
   12228:	andeq	r5, r1, r4, asr #1
   1222c:	andeq	r3, r0, r0, ror #31
   12230:	muleq	r1, r0, r0
   12234:	muleq	r0, r4, r3
   12238:	andeq	r5, r1, r8, lsl #1
   1223c:	andeq	r0, r0, r0, lsr #2
   12240:	strdeq	r4, [r1], -r8
   12244:	andeq	r4, r1, r4, asr #31
   12248:	andeq	r4, r0, r8, asr #5
   1224c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12250:	muleq	r0, r8, r2
   12254:	ldr	ip, [pc, #1812]	; 12970 <strspn@plt+0x16a8>
   12258:	mov	r0, #0
   1225c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12260:	sub	sp, sp, #8256	; 0x2040
   12264:	ldr	r3, [pc, #1800]	; 12974 <strspn@plt+0x16ac>
   12268:	sub	sp, sp, #60	; 0x3c
   1226c:	add	ip, pc, ip
   12270:	add	r1, sp, #8192	; 0x2000
   12274:	str	ip, [sp]
   12278:	ldr	r3, [ip, r3]
   1227c:	str	r3, [sp, #52]	; 0x34
   12280:	ldr	r3, [r3]
   12284:	str	r3, [r1, #116]	; 0x74
   12288:	bl	1207c <strspn@plt+0xdb4>
   1228c:	cmp	r0, #0
   12290:	str	r0, [sp, #36]	; 0x24
   12294:	beq	128b4 <strspn@plt+0x15ec>
   12298:	ldr	r1, [pc, #1752]	; 12978 <strspn@plt+0x16b0>
   1229c:	add	ip, sp, #120	; 0x78
   122a0:	str	ip, [sp, #40]	; 0x28
   122a4:	add	ip, sp, #100	; 0x64
   122a8:	add	r1, pc, r1
   122ac:	str	r1, [sp, #60]	; 0x3c
   122b0:	ldr	r1, [pc, #1732]	; 1297c <strspn@plt+0x16b4>
   122b4:	mov	r3, #0
   122b8:	str	ip, [sp, #48]	; 0x30
   122bc:	mov	sl, r3
   122c0:	ldr	ip, [pc, #1720]	; 12980 <strspn@plt+0x16b8>
   122c4:	add	r1, pc, r1
   122c8:	str	r1, [sp, #56]	; 0x38
   122cc:	add	r1, sp, #76	; 0x4c
   122d0:	str	r1, [sp, #20]
   122d4:	add	ip, pc, ip
   122d8:	ldr	r1, [pc, #1700]	; 12984 <strspn@plt+0x16bc>
   122dc:	mov	r8, r3
   122e0:	mov	r9, r3
   122e4:	mov	fp, ip
   122e8:	add	r1, pc, r1
   122ec:	str	r1, [sp, #64]	; 0x40
   122f0:	ldr	r1, [pc, #1680]	; 12988 <strspn@plt+0x16c0>
   122f4:	mov	r2, #1
   122f8:	str	r3, [sp, #44]	; 0x2c
   122fc:	add	r1, pc, r1
   12300:	str	r3, [sp, #28]
   12304:	str	r1, [sp, #68]	; 0x44
   12308:	add	r1, sp, #84	; 0x54
   1230c:	str	r3, [sp, #8]
   12310:	str	r1, [sp, #32]
   12314:	add	r1, sp, #100	; 0x64
   12318:	str	r3, [sp, #96]	; 0x60
   1231c:	str	r1, [sp, #12]
   12320:	str	r2, [sp, #24]
   12324:	str	r3, [sp, #92]	; 0x5c
   12328:	str	r3, [sp, #76]	; 0x4c
   1232c:	str	r3, [sp, #80]	; 0x50
   12330:	ldr	ip, [sp, #8]
   12334:	cmp	ip, #15
   12338:	bls	124b8 <strspn@plt+0x11f0>
   1233c:	ldr	ip, [sp, #20]
   12340:	add	r3, sp, #76	; 0x4c
   12344:	ldr	r2, [sp, #8]
   12348:	ldm	ip, {r0, r1}
   1234c:	ldr	ip, [sp, #32]
   12350:	stm	ip, {r0, r1}
   12354:	add	r0, sp, #72	; 0x48
   12358:	ldr	r1, [sp, #12]
   1235c:	bl	11130 <mbrtowc@plt>
   12360:	movw	r3, #57296	; 0xdfd0
   12364:	movt	r3, #65535	; 0xffff
   12368:	add	r2, r0, #2
   1236c:	str	r0, [sp, #4]
   12370:	cmp	r2, #1
   12374:	str	r2, [sp, #16]
   12378:	bhi	12500 <strspn@plt+0x1238>
   1237c:	ldr	ip, [sp, #32]
   12380:	mov	r2, #0
   12384:	ldm	ip, {r0, r1}
   12388:	add	ip, sp, #8256	; 0x2040
   1238c:	add	ip, ip, #56	; 0x38
   12390:	str	r2, [ip, r3]
   12394:	ldr	ip, [sp, #20]
   12398:	stm	ip, {r0, r1}
   1239c:	subs	r3, r8, #1
   123a0:	movne	r3, #1
   123a4:	cmp	sl, #1
   123a8:	movne	r3, #0
   123ac:	cmp	r3, #0
   123b0:	beq	125c4 <strspn@plt+0x12fc>
   123b4:	ldr	ip, [sp, #28]
   123b8:	cmp	ip, #0
   123bc:	bne	127a8 <strspn@plt+0x14e0>
   123c0:	ldr	r3, [pc, #1476]	; 1298c <strspn@plt+0x16c4>
   123c4:	ldr	ip, [sp]
   123c8:	ldr	r6, [ip, r3]
   123cc:	ldr	r0, [r6]
   123d0:	ldr	r2, [r0, #24]
   123d4:	ldr	r3, [r0, #20]
   123d8:	cmp	r3, r2
   123dc:	addcc	r2, r3, #1
   123e0:	strcc	r2, [r0, #20]
   123e4:	movcc	r2, #32
   123e8:	strbcc	r2, [r3]
   123ec:	bcs	12964 <strspn@plt+0x169c>
   123f0:	add	r1, sp, #8256	; 0x2040
   123f4:	movw	r4, #57296	; 0xdfd0
   123f8:	add	r1, r1, #56	; 0x38
   123fc:	movt	r4, #65535	; 0xffff
   12400:	ldr	r0, [r1, r4]
   12404:	cmn	r0, #1
   12408:	beq	12728 <strspn@plt+0x1460>
   1240c:	ldr	r2, [sp, #16]
   12410:	cmp	r2, #1
   12414:	bls	127b4 <strspn@plt+0x14ec>
   12418:	ldr	ip, [sp, #4]
   1241c:	cmp	ip, #0
   12420:	ldr	ip, [sp, #24]
   12424:	bne	1274c <strspn@plt+0x1484>
   12428:	cmp	ip, #0
   1242c:	ldr	r3, [pc, #1368]	; 1298c <strspn@plt+0x16c4>
   12430:	ldrne	ip, [sp, #56]	; 0x38
   12434:	ldrbne	ip, [ip, #36]	; 0x24
   12438:	strne	ip, [sp, #24]
   1243c:	ldr	ip, [sp]
   12440:	ldr	r6, [ip, r3]
   12444:	ldr	r0, [r6]
   12448:	ldr	r3, [r0, #20]
   1244c:	ldr	r2, [r0, #24]
   12450:	cmp	r3, r2
   12454:	bcs	12934 <strspn@plt+0x166c>
   12458:	movw	r2, #57296	; 0xdfd0
   1245c:	movt	r2, #65535	; 0xffff
   12460:	add	r1, r3, #1
   12464:	mov	sl, #0
   12468:	str	r1, [r0, #20]
   1246c:	strb	sl, [r3]
   12470:	add	ip, sp, #8256	; 0x2040
   12474:	add	ip, ip, #56	; 0x38
   12478:	ldr	r3, [ip, r2]
   1247c:	mov	ip, #1
   12480:	str	ip, [sp, #4]
   12484:	ldmib	sp, {r1, ip}
   12488:	subs	r2, r3, #9
   1248c:	rsbs	r3, r2, #0
   12490:	rsb	ip, r1, ip
   12494:	str	ip, [sp, #8]
   12498:	ldr	ip, [sp, #12]
   1249c:	adcs	r3, r3, r2
   124a0:	str	r3, [sp, #28]
   124a4:	add	ip, ip, r1
   124a8:	str	ip, [sp, #12]
   124ac:	ldr	ip, [sp, #8]
   124b0:	cmp	ip, #15
   124b4:	bhi	1233c <strspn@plt+0x1074>
   124b8:	ldr	ip, [sp, #36]	; 0x24
   124bc:	ldr	r3, [ip]
   124c0:	tst	r3, #48	; 0x30
   124c4:	beq	1286c <strspn@plt+0x15a4>
   124c8:	ldr	ip, [sp, #8]
   124cc:	cmp	ip, #0
   124d0:	bne	1233c <strspn@plt+0x1074>
   124d4:	add	r1, sp, #8256	; 0x2040
   124d8:	movw	r3, #57296	; 0xdfd0
   124dc:	add	r1, r1, #56	; 0x38
   124e0:	movt	r3, #65535	; 0xffff
   124e4:	mov	ip, #3
   124e8:	mvn	r2, #0
   124ec:	str	ip, [sp, #16]
   124f0:	mov	ip, #1
   124f4:	str	r2, [r1, r3]
   124f8:	str	ip, [sp, #4]
   124fc:	b	1239c <strspn@plt+0x10d4>
   12500:	add	r1, sp, #8256	; 0x2040
   12504:	add	r1, r1, #56	; 0x38
   12508:	ldr	r3, [r1, r3]
   1250c:	cmp	r3, #32
   12510:	beq	126fc <strspn@plt+0x1434>
   12514:	cmp	r3, #9
   12518:	bne	1239c <strspn@plt+0x10d4>
   1251c:	ldr	ip, [sp, #24]
   12520:	cmp	ip, #0
   12524:	beq	1239c <strspn@plt+0x10d4>
   12528:	ldr	r2, [pc, #1120]	; 12990 <strspn@plt+0x16c8>
   1252c:	add	r2, pc, r2
   12530:	ldr	r3, [r2, #32]
   12534:	cmp	r3, #0
   12538:	bne	128d8 <strspn@plt+0x1610>
   1253c:	ldr	ip, [r2]
   12540:	ldr	r1, [sp, #44]	; 0x2c
   12544:	sub	ip, ip, #1
   12548:	cmp	ip, r1
   1254c:	bls	1259c <strspn@plt+0x12d4>
   12550:	ldr	lr, [r2, #4]
   12554:	lsl	r4, r1, #3
   12558:	mov	r0, r8
   1255c:	mov	r1, #0
   12560:	add	r5, lr, r4
   12564:	ldrd	r2, [lr, r4]
   12568:	cmp	r1, r3
   1256c:	cmpeq	r0, r2
   12570:	bcc	12910 <strspn@plt+0x1648>
   12574:	ldr	r4, [sp, #44]	; 0x2c
   12578:	b	1258c <strspn@plt+0x12c4>
   1257c:	ldrd	r2, [r5, #8]!
   12580:	cmp	r3, r1
   12584:	cmpeq	r2, r0
   12588:	bhi	12908 <strspn@plt+0x1640>
   1258c:	add	r4, r4, #1
   12590:	cmp	ip, r4
   12594:	bhi	1257c <strspn@plt+0x12b4>
   12598:	str	r4, [sp, #44]	; 0x2c
   1259c:	ldr	ip, [sp, #68]	; 0x44
   125a0:	ldr	r3, [ip, #4]
   125a4:	ldr	ip, [sp, #44]	; 0x2c
   125a8:	ldr	r3, [r3, ip, lsl #3]
   125ac:	mov	r1, r3
   125b0:	cmp	r8, r3
   125b4:	movcs	ip, #0
   125b8:	strcs	ip, [sp, #24]
   125bc:	bcs	1239c <strspn@plt+0x10d4>
   125c0:	b	128ec <strspn@plt+0x1624>
   125c4:	cmp	sl, #0
   125c8:	rsb	r8, sl, r8
   125cc:	beq	123f0 <strspn@plt+0x1128>
   125d0:	ldr	r2, [fp, #32]
   125d4:	mov	r7, #9
   125d8:	ldr	r3, [pc, #940]	; 1298c <strspn@plt+0x16c4>
   125dc:	ldr	ip, [sp]
   125e0:	cmp	r2, #0
   125e4:	ldr	r6, [ip, r3]
   125e8:	bne	1268c <strspn@plt+0x13c4>
   125ec:	ldr	r1, [fp]
   125f0:	ldr	r0, [fp, #4]
   125f4:	sub	r1, r1, #1
   125f8:	cmp	r9, r1
   125fc:	bcs	12640 <strspn@plt+0x1378>
   12600:	lsl	r3, r9, #3
   12604:	mov	r4, r8
   12608:	add	ip, r0, r3
   1260c:	mov	r5, #0
   12610:	ldrd	r2, [r3, r0]
   12614:	cmp	r5, r3
   12618:	cmpeq	r4, r2
   1261c:	bcs	12634 <strspn@plt+0x136c>
   12620:	b	126f0 <strspn@plt+0x1428>
   12624:	ldrd	r2, [ip, #8]!
   12628:	cmp	r3, r5
   1262c:	cmpeq	r2, r4
   12630:	bhi	126f0 <strspn@plt+0x1428>
   12634:	add	r9, r9, #1
   12638:	cmp	r9, r1
   1263c:	bcc	12624 <strspn@plt+0x135c>
   12640:	ldr	r4, [r0, r9, lsl #3]
   12644:	rsb	r3, r8, r4
   12648:	cmp	r3, sl
   1264c:	bhi	126ac <strspn@plt+0x13e4>
   12650:	ldr	r0, [r6]
   12654:	ldr	r3, [r0, #20]
   12658:	ldr	r1, [r0, #24]
   1265c:	cmp	r3, r1
   12660:	addcc	r1, r3, #1
   12664:	strcc	r1, [r0, #20]
   12668:	strbcc	r7, [r3]
   1266c:	bcs	12928 <strspn@plt+0x1660>
   12670:	rsb	r8, r4, r8
   12674:	adds	sl, sl, r8
   12678:	mov	r8, r4
   1267c:	beq	123f0 <strspn@plt+0x1128>
   12680:	ldr	r2, [fp, #32]
   12684:	cmp	r2, #0
   12688:	beq	125ec <strspn@plt+0x1324>
   1268c:	mov	r0, r8
   12690:	mov	r1, r2
   12694:	add	r4, r8, r2
   12698:	bl	15684 <close_stdout@@Base+0x2aac>
   1269c:	rsb	r4, r1, r4
   126a0:	rsb	r3, r8, r4
   126a4:	cmp	r3, sl
   126a8:	bls	12650 <strspn@plt+0x1388>
   126ac:	sub	r9, r9, #1
   126b0:	add	r8, r8, sl
   126b4:	mov	r4, #32
   126b8:	b	126c4 <strspn@plt+0x13fc>
   126bc:	subs	sl, sl, #1
   126c0:	beq	123f0 <strspn@plt+0x1128>
   126c4:	ldr	r0, [r6]
   126c8:	ldr	r3, [r0, #20]
   126cc:	ldr	r2, [r0, #24]
   126d0:	cmp	r3, r2
   126d4:	addcc	r2, r3, #1
   126d8:	strcc	r2, [r0, #20]
   126dc:	strbcc	r4, [r3]
   126e0:	bcc	126bc <strspn@plt+0x13f4>
   126e4:	mov	r1, #32
   126e8:	bl	11244 <__overflow@plt>
   126ec:	b	126bc <strspn@plt+0x13f4>
   126f0:	mov	r4, r2
   126f4:	add	r9, r9, #1
   126f8:	b	12644 <strspn@plt+0x137c>
   126fc:	cmn	r8, #-2147483646	; 0x80000002
   12700:	ldr	ip, [sp, #24]
   12704:	movhi	r2, #0
   12708:	movls	r2, #1
   1270c:	tst	ip, r2
   12710:	beq	1239c <strspn@plt+0x10d4>
   12714:	mov	ip, #1
   12718:	add	sl, sl, #1
   1271c:	add	r8, r8, #1
   12720:	str	ip, [sp, #24]
   12724:	b	12484 <strspn@plt+0x11bc>
   12728:	ldr	r0, [sp, #36]	; 0x24
   1272c:	bl	1207c <strspn@plt+0xdb4>
   12730:	cmp	r0, #0
   12734:	str	r0, [sp, #36]	; 0x24
   12738:	beq	128b4 <strspn@plt+0x15ec>
   1273c:	mov	sl, #0
   12740:	str	sl, [sp, #76]	; 0x4c
   12744:	str	sl, [sp, #80]	; 0x50
   12748:	b	12330 <strspn@plt+0x1068>
   1274c:	cmp	ip, #0
   12750:	beq	12850 <strspn@plt+0x1588>
   12754:	cmp	r0, #8
   12758:	bne	12820 <strspn@plt+0x1558>
   1275c:	cmp	r8, #0
   12760:	mov	ip, #1
   12764:	subne	r8, r8, #1
   12768:	str	ip, [sp, #24]
   1276c:	ldr	r3, [pc, #536]	; 1298c <strspn@plt+0x16c4>
   12770:	mov	r1, #1
   12774:	ldr	ip, [sp]
   12778:	mov	sl, #0
   1277c:	ldr	r0, [sp, #12]
   12780:	ldr	r2, [sp, #4]
   12784:	ldr	r6, [ip, r3]
   12788:	ldr	r3, [r6]
   1278c:	bl	11094 <fwrite_unlocked@plt>
   12790:	add	r1, sp, #8256	; 0x2040
   12794:	movw	r3, #57296	; 0xdfd0
   12798:	add	r1, r1, #56	; 0x38
   1279c:	movt	r3, #65535	; 0xffff
   127a0:	ldr	r3, [r1, r3]
   127a4:	b	12484 <strspn@plt+0x11bc>
   127a8:	sub	r8, r8, #1
   127ac:	mov	sl, #1
   127b0:	b	125d0 <strspn@plt+0x1308>
   127b4:	ldr	ip, [sp, #24]
   127b8:	movw	r3, #57324	; 0xdfec
   127bc:	ldr	r2, [pc, #456]	; 1298c <strspn@plt+0x16c4>
   127c0:	movt	r3, #65535	; 0xffff
   127c4:	cmp	ip, #0
   127c8:	addne	r8, r8, #1
   127cc:	ldrne	ip, [sp, #64]	; 0x40
   127d0:	ldrbne	ip, [ip, #36]	; 0x24
   127d4:	strne	ip, [sp, #24]
   127d8:	ldr	ip, [sp]
   127dc:	ldr	r6, [ip, r2]
   127e0:	add	r2, sp, #8256	; 0x2040
   127e4:	add	r2, r2, #56	; 0x38
   127e8:	ldr	r0, [r6]
   127ec:	ldrb	r3, [r2, r3]
   127f0:	ldr	r2, [r0, #24]
   127f4:	uxtb	r1, r3
   127f8:	ldr	r3, [r0, #20]
   127fc:	cmp	r3, r2
   12800:	bcs	12938 <strspn@plt+0x1670>
   12804:	movw	r2, #57296	; 0xdfd0
   12808:	add	ip, r3, #1
   1280c:	movt	r2, #65535	; 0xffff
   12810:	str	ip, [r0, #20]
   12814:	mov	sl, #0
   12818:	strb	r1, [r3]
   1281c:	b	12470 <strspn@plt+0x11a8>
   12820:	bl	1104c <wcwidth@plt>
   12824:	ldr	ip, [sp, #60]	; 0x3c
   12828:	add	r1, sp, #8256	; 0x2040
   1282c:	add	r1, r1, #56	; 0x38
   12830:	ldrb	r3, [ip, #36]	; 0x24
   12834:	cmp	r0, #0
   12838:	addge	r8, r8, r0
   1283c:	ldr	r0, [r1, r4]
   12840:	cmp	r3, #0
   12844:	streq	r3, [sp, #24]
   12848:	movne	ip, #1
   1284c:	strne	ip, [sp, #24]
   12850:	cmp	r0, #10
   12854:	moveq	r8, #0
   12858:	moveq	ip, #1
   1285c:	moveq	r9, r8
   12860:	streq	ip, [sp, #24]
   12864:	streq	r8, [sp, #44]	; 0x2c
   12868:	b	1276c <strspn@plt+0x14a4>
   1286c:	ldr	r1, [sp, #12]
   12870:	movw	r3, #8208	; 0x2010
   12874:	ldr	r2, [sp, #8]
   12878:	add	r0, sp, #100	; 0x64
   1287c:	bl	11058 <__memmove_chk@plt>
   12880:	ldr	ip, [sp, #8]
   12884:	add	r1, sp, #100	; 0x64
   12888:	mov	r2, #8192	; 0x2000
   1288c:	add	r0, r1, ip
   12890:	ldr	r3, [sp, #36]	; 0x24
   12894:	mov	r1, #1
   12898:	add	ip, sp, #100	; 0x64
   1289c:	str	ip, [sp, #12]
   128a0:	bl	11298 <fread_unlocked@plt>
   128a4:	ldr	ip, [sp, #8]
   128a8:	add	ip, ip, r0
   128ac:	str	ip, [sp, #8]
   128b0:	b	124c8 <strspn@plt+0x1200>
   128b4:	ldr	ip, [sp, #52]	; 0x34
   128b8:	add	r1, sp, #8192	; 0x2000
   128bc:	ldr	r2, [r1, #116]	; 0x74
   128c0:	ldr	r3, [ip]
   128c4:	cmp	r2, r3
   128c8:	bne	12960 <strspn@plt+0x1698>
   128cc:	add	sp, sp, #8256	; 0x2040
   128d0:	add	sp, sp, #60	; 0x3c
   128d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d8:	mov	r0, r8
   128dc:	mov	r1, r3
   128e0:	add	r4, r8, r3
   128e4:	bl	15684 <close_stdout@@Base+0x2aac>
   128e8:	rsb	r1, r1, r4
   128ec:	rsb	sl, r8, sl
   128f0:	mov	ip, #1
   128f4:	mov	r3, #9
   128f8:	add	sl, sl, r1
   128fc:	mov	r8, r1
   12900:	str	ip, [sp, #24]
   12904:	b	12484 <strspn@plt+0x11bc>
   12908:	str	r4, [sp, #44]	; 0x2c
   1290c:	lsl	r4, r4, #3
   12910:	ldr	r3, [lr, r4]
   12914:	ldr	ip, [sp, #44]	; 0x2c
   12918:	mov	r1, r3
   1291c:	add	ip, ip, #1
   12920:	str	ip, [sp, #44]	; 0x2c
   12924:	b	125b0 <strspn@plt+0x12e8>
   12928:	mov	r1, #9
   1292c:	bl	11244 <__overflow@plt>
   12930:	b	12670 <strspn@plt+0x13a8>
   12934:	mov	r1, #0
   12938:	bl	11244 <__overflow@plt>
   1293c:	add	r1, sp, #8256	; 0x2040
   12940:	movw	r3, #57296	; 0xdfd0
   12944:	add	r1, r1, #56	; 0x38
   12948:	movt	r3, #65535	; 0xffff
   1294c:	mov	ip, #1
   12950:	mov	sl, #0
   12954:	str	ip, [sp, #4]
   12958:	ldr	r3, [r1, r3]
   1295c:	b	12484 <strspn@plt+0x11bc>
   12960:	bl	110b8 <__stack_chk_fail@plt>
   12964:	mov	r1, #32
   12968:	bl	11244 <__overflow@plt>
   1296c:	b	123f0 <strspn@plt+0x1128>
   12970:	andeq	r4, r1, ip, lsl #27
   12974:	andeq	r0, r0, r4, lsl #2
   12978:	andeq	r4, r1, r8, ror #29
   1297c:	andeq	r4, r1, ip, asr #29
   12980:			; <UNDEFINED> instruction: 0x00014ebc
   12984:	andeq	r4, r1, r8, lsr #29
   12988:	muleq	r1, r4, lr
   1298c:	andeq	r0, r0, r4, lsr #2
   12990:	andeq	r4, r1, r4, ror #24
   12994:	push	{r4, r5, r6, lr}
   12998:	subs	r4, r0, #0
   1299c:	ldr	r5, [pc, #456]	; 12b6c <strspn@plt+0x18a4>
   129a0:	add	r5, pc, r5
   129a4:	beq	129ec <strspn@plt+0x1724>
   129a8:	ldr	r3, [pc, #448]	; 12b70 <strspn@plt+0x18a8>
   129ac:	mov	r2, #5
   129b0:	ldr	r1, [pc, #444]	; 12b74 <strspn@plt+0x18ac>
   129b4:	mov	r0, #0
   129b8:	ldr	r3, [r5, r3]
   129bc:	add	r1, pc, r1
   129c0:	ldr	r6, [r3]
   129c4:	bl	110ac <dcgettext@plt>
   129c8:	ldr	r3, [pc, #424]	; 12b78 <strspn@plt+0x18b0>
   129cc:	mov	r1, #1
   129d0:	ldr	r3, [r5, r3]
   129d4:	ldr	r3, [r3]
   129d8:	mov	r2, r0
   129dc:	mov	r0, r6
   129e0:	bl	11214 <__fprintf_chk@plt>
   129e4:	mov	r0, r4
   129e8:	bl	111a8 <exit@plt>
   129ec:	ldr	r1, [pc, #392]	; 12b7c <strspn@plt+0x18b4>
   129f0:	mov	r2, #5
   129f4:	add	r1, pc, r1
   129f8:	bl	110ac <dcgettext@plt>
   129fc:	ldr	r3, [pc, #372]	; 12b78 <strspn@plt+0x18b0>
   12a00:	ldr	r6, [r5, r3]
   12a04:	ldr	r2, [r6]
   12a08:	mov	r1, r0
   12a0c:	mov	r0, #1
   12a10:	bl	111fc <__printf_chk@plt>
   12a14:	ldr	r1, [pc, #356]	; 12b80 <strspn@plt+0x18b8>
   12a18:	mov	r2, #5
   12a1c:	mov	r0, r4
   12a20:	add	r1, pc, r1
   12a24:	bl	110ac <dcgettext@plt>
   12a28:	ldr	r3, [pc, #340]	; 12b84 <strspn@plt+0x18bc>
   12a2c:	ldr	r5, [r5, r3]
   12a30:	ldr	r1, [r5]
   12a34:	bl	11010 <fputs_unlocked@plt>
   12a38:	ldr	r1, [pc, #328]	; 12b88 <strspn@plt+0x18c0>
   12a3c:	mov	r2, #5
   12a40:	mov	r0, r4
   12a44:	add	r1, pc, r1
   12a48:	bl	110ac <dcgettext@plt>
   12a4c:	ldr	r1, [r5]
   12a50:	bl	11010 <fputs_unlocked@plt>
   12a54:	ldr	r1, [pc, #304]	; 12b8c <strspn@plt+0x18c4>
   12a58:	mov	r2, #5
   12a5c:	mov	r0, r4
   12a60:	add	r1, pc, r1
   12a64:	bl	110ac <dcgettext@plt>
   12a68:	ldr	r1, [r5]
   12a6c:	bl	11010 <fputs_unlocked@plt>
   12a70:	ldr	r1, [pc, #280]	; 12b90 <strspn@plt+0x18c8>
   12a74:	mov	r2, #5
   12a78:	mov	r0, r4
   12a7c:	add	r1, pc, r1
   12a80:	bl	110ac <dcgettext@plt>
   12a84:	ldr	r1, [r5]
   12a88:	bl	11010 <fputs_unlocked@plt>
   12a8c:	ldr	r1, [pc, #256]	; 12b94 <strspn@plt+0x18cc>
   12a90:	mov	r2, #5
   12a94:	mov	r0, r4
   12a98:	add	r1, pc, r1
   12a9c:	bl	110ac <dcgettext@plt>
   12aa0:	ldr	r1, [r5]
   12aa4:	bl	11010 <fputs_unlocked@plt>
   12aa8:	ldr	r1, [pc, #232]	; 12b98 <strspn@plt+0x18d0>
   12aac:	mov	r2, #5
   12ab0:	mov	r0, r4
   12ab4:	add	r1, pc, r1
   12ab8:	bl	110ac <dcgettext@plt>
   12abc:	ldr	r2, [pc, #216]	; 12b9c <strspn@plt+0x18d4>
   12ac0:	ldr	r3, [pc, #216]	; 12ba0 <strspn@plt+0x18d8>
   12ac4:	add	r2, pc, r2
   12ac8:	add	r3, pc, r3
   12acc:	mov	r1, r0
   12ad0:	mov	r0, #1
   12ad4:	bl	111fc <__printf_chk@plt>
   12ad8:	mov	r0, #5
   12adc:	mov	r1, r4
   12ae0:	bl	11250 <setlocale@plt>
   12ae4:	cmp	r0, #0
   12ae8:	beq	12b04 <strspn@plt+0x183c>
   12aec:	ldr	r1, [pc, #176]	; 12ba4 <strspn@plt+0x18dc>
   12af0:	mov	r2, #3
   12af4:	add	r1, pc, r1
   12af8:	bl	112a4 <strncmp@plt>
   12afc:	cmp	r0, #0
   12b00:	bne	12b38 <strspn@plt+0x1870>
   12b04:	ldr	r1, [pc, #156]	; 12ba8 <strspn@plt+0x18e0>
   12b08:	mov	r2, #5
   12b0c:	mov	r0, #0
   12b10:	add	r1, pc, r1
   12b14:	bl	110ac <dcgettext@plt>
   12b18:	mov	r5, r0
   12b1c:	ldr	r0, [r6]
   12b20:	bl	12cf0 <close_stdout@@Base+0x118>
   12b24:	mov	r1, r5
   12b28:	mov	r2, r0
   12b2c:	mov	r0, #1
   12b30:	bl	111fc <__printf_chk@plt>
   12b34:	b	129e4 <strspn@plt+0x171c>
   12b38:	ldr	r1, [pc, #108]	; 12bac <strspn@plt+0x18e4>
   12b3c:	mov	r2, #5
   12b40:	mov	r0, r4
   12b44:	add	r1, pc, r1
   12b48:	bl	110ac <dcgettext@plt>
   12b4c:	mov	r5, r0
   12b50:	ldr	r0, [r6]
   12b54:	bl	12cf0 <close_stdout@@Base+0x118>
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r0
   12b60:	mov	r0, #1
   12b64:	bl	111fc <__printf_chk@plt>
   12b68:	b	12b04 <strspn@plt+0x183c>
   12b6c:	andeq	r4, r1, r8, asr r6
   12b70:	andeq	r0, r0, r0, lsl r1
   12b74:	andeq	r3, r0, r0, lsr #14
   12b78:	andeq	r0, r0, r0, lsr r1
   12b7c:	andeq	r3, r0, r0, lsl r7
   12b80:	andeq	r3, r0, r8, lsl #14
   12b84:	andeq	r0, r0, r4, lsr #2
   12b88:	andeq	r3, r0, ip, asr r7
   12b8c:	andeq	r3, r0, ip, lsl #15
   12b90:	muleq	r0, r8, r8
   12b94:	andeq	r3, r0, ip, lsr #17
   12b98:	andeq	r3, r0, r8, asr #17
   12b9c:	ldrdeq	r3, [r0], -r0
   12ba0:	ldrdeq	r3, [r0], -ip
   12ba4:	ldrdeq	r3, [r0], -r8
   12ba8:	andeq	r3, r0, r8, lsl #18
   12bac:	andeq	r3, r0, ip, lsl #17
   12bb0:	ldr	r3, [pc, #8]	; 12bc0 <strspn@plt+0x18f8>
   12bb4:	add	r3, pc, r3
   12bb8:	str	r0, [r3]
   12bbc:	bx	lr
   12bc0:	andeq	r4, r1, r4, lsl #12
   12bc4:	ldr	r3, [pc, #8]	; 12bd4 <strspn@plt+0x190c>
   12bc8:	add	r3, pc, r3
   12bcc:	strb	r0, [r3, #4]
   12bd0:	bx	lr
   12bd4:	strdeq	r4, [r1], -r0

00012bd8 <close_stdout@@Base>:
   12bd8:	push	{r4, r5, r6, r7, lr}
   12bdc:	sub	sp, sp, #12
   12be0:	ldr	r4, [pc, #228]	; 12ccc <close_stdout@@Base+0xf4>
   12be4:	ldr	r3, [pc, #228]	; 12cd0 <close_stdout@@Base+0xf8>
   12be8:	add	r4, pc, r4
   12bec:	ldr	r3, [r4, r3]
   12bf0:	ldr	r0, [r3]
   12bf4:	bl	14ff8 <close_stdout@@Base+0x2420>
   12bf8:	cmp	r0, #0
   12bfc:	beq	12c24 <close_stdout@@Base+0x4c>
   12c00:	ldr	r3, [pc, #204]	; 12cd4 <close_stdout@@Base+0xfc>
   12c04:	add	r3, pc, r3
   12c08:	ldrb	r3, [r3, #4]
   12c0c:	cmp	r3, #0
   12c10:	beq	12c44 <close_stdout@@Base+0x6c>
   12c14:	bl	111cc <__errno_location@plt>
   12c18:	ldr	r3, [r0]
   12c1c:	cmp	r3, #32
   12c20:	bne	12c44 <close_stdout@@Base+0x6c>
   12c24:	ldr	r3, [pc, #172]	; 12cd8 <close_stdout@@Base+0x100>
   12c28:	ldr	r3, [r4, r3]
   12c2c:	ldr	r0, [r3]
   12c30:	bl	14ff8 <close_stdout@@Base+0x2420>
   12c34:	cmp	r0, #0
   12c38:	bne	12c98 <close_stdout@@Base+0xc0>
   12c3c:	add	sp, sp, #12
   12c40:	pop	{r4, r5, r6, r7, pc}
   12c44:	ldr	r1, [pc, #144]	; 12cdc <close_stdout@@Base+0x104>
   12c48:	mov	r0, #0
   12c4c:	mov	r2, #5
   12c50:	add	r1, pc, r1
   12c54:	bl	110ac <dcgettext@plt>
   12c58:	ldr	r3, [pc, #128]	; 12ce0 <close_stdout@@Base+0x108>
   12c5c:	ldr	r5, [pc, r3]
   12c60:	cmp	r5, #0
   12c64:	mov	r6, r0
   12c68:	beq	12ca8 <close_stdout@@Base+0xd0>
   12c6c:	bl	111cc <__errno_location@plt>
   12c70:	ldr	r7, [r0]
   12c74:	mov	r0, r5
   12c78:	bl	144d0 <close_stdout@@Base+0x18f8>
   12c7c:	ldr	r2, [pc, #96]	; 12ce4 <close_stdout@@Base+0x10c>
   12c80:	str	r6, [sp]
   12c84:	mov	r1, r7
   12c88:	add	r2, pc, r2
   12c8c:	mov	r3, r0
   12c90:	mov	r0, #0
   12c94:	bl	1113c <error@plt>
   12c98:	ldr	r3, [pc, #72]	; 12ce8 <close_stdout@@Base+0x110>
   12c9c:	ldr	r3, [r4, r3]
   12ca0:	ldr	r0, [r3]
   12ca4:	bl	11070 <_exit@plt>
   12ca8:	bl	111cc <__errno_location@plt>
   12cac:	ldr	r2, [pc, #56]	; 12cec <close_stdout@@Base+0x114>
   12cb0:	add	r2, pc, r2
   12cb4:	mov	r3, r0
   12cb8:	mov	r0, r5
   12cbc:	ldr	r1, [r3]
   12cc0:	mov	r3, r6
   12cc4:	bl	1113c <error@plt>
   12cc8:	b	12c98 <close_stdout@@Base+0xc0>
   12ccc:	andeq	r4, r1, r0, lsl r4
   12cd0:	andeq	r0, r0, r4, lsr #2
   12cd4:			; <UNDEFINED> instruction: 0x000145b4
   12cd8:	andeq	r0, r0, r0, lsl r1
   12cdc:	andeq	r3, r0, r4, asr #17
   12ce0:	andeq	r4, r1, ip, asr r5
   12ce4:	andeq	r3, r0, r0, lsl r9
   12ce8:	andeq	r0, r0, r8, lsr #2
   12cec:	andeq	r3, r0, r8, ror #15
   12cf0:	ldrb	r3, [r0]
   12cf4:	cmp	r3, #47	; 0x2f
   12cf8:	bne	12d14 <close_stdout@@Base+0x13c>
   12cfc:	add	r2, r0, #1
   12d00:	mov	r0, r2
   12d04:	add	r2, r2, #1
   12d08:	ldrb	r3, [r0]
   12d0c:	cmp	r3, #47	; 0x2f
   12d10:	beq	12d00 <close_stdout@@Base+0x128>
   12d14:	cmp	r3, #0
   12d18:	bxeq	lr
   12d1c:	mov	r2, r0
   12d20:	mov	r1, #0
   12d24:	cmp	r3, #47	; 0x2f
   12d28:	moveq	r1, #1
   12d2c:	beq	12d3c <close_stdout@@Base+0x164>
   12d30:	cmp	r1, #0
   12d34:	movne	r0, r2
   12d38:	movne	r1, #0
   12d3c:	ldrb	r3, [r2, #1]!
   12d40:	cmp	r3, #0
   12d44:	bne	12d24 <close_stdout@@Base+0x14c>
   12d48:	bx	lr
   12d4c:	push	{r4, lr}
   12d50:	mov	r4, r0
   12d54:	bl	111b4 <strlen@plt>
   12d58:	cmp	r0, #1
   12d5c:	popls	{r4, pc}
   12d60:	sub	r3, r0, #1
   12d64:	ldrb	r2, [r4, r3]
   12d68:	cmp	r2, #47	; 0x2f
   12d6c:	popne	{r4, pc}
   12d70:	mov	r0, r3
   12d74:	cmp	r0, #1
   12d78:	sub	r3, r3, #1
   12d7c:	beq	12d90 <close_stdout@@Base+0x1b8>
   12d80:	ldrb	r2, [r4, r3]
   12d84:	cmp	r2, #47	; 0x2f
   12d88:	popne	{r4, pc}
   12d8c:	b	12d70 <close_stdout@@Base+0x198>
   12d90:	pop	{r4, pc}
   12d94:	b	11034 <posix_fadvise64@plt>
   12d98:	cmp	r0, #0
   12d9c:	push	{r4, r5, r6, lr}
   12da0:	mov	r6, r1
   12da4:	sub	sp, sp, #16
   12da8:	beq	12dcc <close_stdout@@Base+0x1f4>
   12dac:	mov	r4, #0
   12db0:	mov	r5, #0
   12db4:	bl	11208 <fileno@plt>
   12db8:	str	r6, [sp, #8]
   12dbc:	mov	r2, r4
   12dc0:	mov	r3, r5
   12dc4:	strd	r4, [sp]
   12dc8:	bl	12d94 <close_stdout@@Base+0x1bc>
   12dcc:	add	sp, sp, #16
   12dd0:	pop	{r4, r5, r6, pc}
   12dd4:	push	{r3, r4, r5, r6, r7, lr}
   12dd8:	subs	r4, r0, #0
   12ddc:	ldr	r5, [pc, #172]	; 12e90 <close_stdout@@Base+0x2b8>
   12de0:	add	r5, pc, r5
   12de4:	beq	12e6c <close_stdout@@Base+0x294>
   12de8:	mov	r1, #47	; 0x2f
   12dec:	bl	1125c <strrchr@plt>
   12df0:	subs	r6, r0, #0
   12df4:	beq	12e50 <close_stdout@@Base+0x278>
   12df8:	add	r7, r6, #1
   12dfc:	rsb	r3, r4, r7
   12e00:	cmp	r3, #6
   12e04:	ble	12e50 <close_stdout@@Base+0x278>
   12e08:	ldr	r1, [pc, #132]	; 12e94 <close_stdout@@Base+0x2bc>
   12e0c:	sub	r0, r6, #6
   12e10:	mov	r2, #7
   12e14:	add	r1, pc, r1
   12e18:	bl	112a4 <strncmp@plt>
   12e1c:	cmp	r0, #0
   12e20:	bne	12e50 <close_stdout@@Base+0x278>
   12e24:	ldr	r1, [pc, #108]	; 12e98 <close_stdout@@Base+0x2c0>
   12e28:	mov	r0, r7
   12e2c:	mov	r2, #3
   12e30:	add	r1, pc, r1
   12e34:	bl	112a4 <strncmp@plt>
   12e38:	cmp	r0, #0
   12e3c:	movne	r4, r7
   12e40:	ldreq	r3, [pc, #84]	; 12e9c <close_stdout@@Base+0x2c4>
   12e44:	addeq	r4, r6, #4
   12e48:	ldreq	r3, [r5, r3]
   12e4c:	streq	r4, [r3]
   12e50:	ldr	r2, [pc, #72]	; 12ea0 <close_stdout@@Base+0x2c8>
   12e54:	ldr	r3, [pc, #72]	; 12ea4 <close_stdout@@Base+0x2cc>
   12e58:	ldr	r2, [r5, r2]
   12e5c:	str	r4, [r2]
   12e60:	ldr	r3, [r5, r3]
   12e64:	str	r4, [r3]
   12e68:	pop	{r3, r4, r5, r6, r7, pc}
   12e6c:	ldr	r3, [pc, #52]	; 12ea8 <close_stdout@@Base+0x2d0>
   12e70:	mov	r1, #1
   12e74:	ldr	r0, [pc, #48]	; 12eac <close_stdout@@Base+0x2d4>
   12e78:	mov	r2, #55	; 0x37
   12e7c:	ldr	r3, [r5, r3]
   12e80:	add	r0, pc, r0
   12e84:	ldr	r3, [r3]
   12e88:	bl	110f4 <fwrite@plt>
   12e8c:	bl	112b0 <abort@plt>
   12e90:	andeq	r4, r1, r8, lsl r2
   12e94:	andeq	r3, r0, r4, asr #15
   12e98:			; <UNDEFINED> instruction: 0x000037b0
   12e9c:	andeq	r0, r0, r8, lsr r1
   12ea0:	andeq	r0, r0, r0, lsr r1
   12ea4:	andeq	r0, r0, ip, lsr #2
   12ea8:	andeq	r0, r0, r0, lsl r1
   12eac:	andeq	r3, r0, r0, lsr #14
   12eb0:	push	{r3, lr}
   12eb4:	mov	r3, r0
   12eb8:	mov	r2, #0
   12ebc:	cmp	r1, #8
   12ec0:	str	r2, [r3], #4
   12ec4:	add	r3, r3, #4
   12ec8:	str	r2, [r0, #4]
   12ecc:	str	r2, [r3], #4
   12ed0:	str	r2, [r3], #4
   12ed4:	str	r2, [r3], #4
   12ed8:	str	r2, [r3], #4
   12edc:	str	r2, [r3], #4
   12ee0:	str	r2, [r3], #4
   12ee4:	str	r2, [r3], #4
   12ee8:	str	r2, [r3], #4
   12eec:	str	r2, [r3], #4
   12ef0:	str	r2, [r3]
   12ef4:	beq	12f00 <close_stdout@@Base+0x328>
   12ef8:	str	r1, [r0]
   12efc:	pop	{r3, pc}
   12f00:	bl	112b0 <abort@plt>
   12f04:	push	{r4, r5, r6, lr}
   12f08:	mov	r4, r0
   12f0c:	mov	r6, r1
   12f10:	mov	r0, #0
   12f14:	mov	r1, r4
   12f18:	mov	r2, #5
   12f1c:	bl	110ac <dcgettext@plt>
   12f20:	cmp	r0, r4
   12f24:	mov	r5, r0
   12f28:	beq	12f30 <close_stdout@@Base+0x358>
   12f2c:	pop	{r4, r5, r6, pc}
   12f30:	bl	15078 <close_stdout@@Base+0x24a0>
   12f34:	ldrb	r3, [r0]
   12f38:	bic	r3, r3, #32
   12f3c:	cmp	r3, #85	; 0x55
   12f40:	bne	12fb4 <close_stdout@@Base+0x3dc>
   12f44:	ldrb	r3, [r0, #1]
   12f48:	bic	r3, r3, #32
   12f4c:	cmp	r3, #84	; 0x54
   12f50:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12f54:	ldrb	r3, [r0, #2]
   12f58:	bic	r3, r3, #32
   12f5c:	cmp	r3, #70	; 0x46
   12f60:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12f64:	ldrb	r3, [r0, #3]
   12f68:	cmp	r3, #45	; 0x2d
   12f6c:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12f70:	ldrb	r3, [r0, #4]
   12f74:	cmp	r3, #56	; 0x38
   12f78:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12f7c:	ldrb	r3, [r0, #5]
   12f80:	cmp	r3, #0
   12f84:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12f88:	ldrb	r3, [r5]
   12f8c:	cmp	r3, #96	; 0x60
   12f90:	beq	1302c <close_stdout@@Base+0x454>
   12f94:	ldr	r0, [pc, #180]	; 13050 <close_stdout@@Base+0x478>
   12f98:	add	r0, pc, r0
   12f9c:	pop	{r4, r5, r6, pc}
   12fa0:	cmp	r6, #7
   12fa4:	beq	13038 <close_stdout@@Base+0x460>
   12fa8:	ldr	r0, [pc, #164]	; 13054 <close_stdout@@Base+0x47c>
   12fac:	add	r0, pc, r0
   12fb0:	pop	{r4, r5, r6, pc}
   12fb4:	cmp	r3, #71	; 0x47
   12fb8:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12fbc:	ldrb	r3, [r0, #1]
   12fc0:	bic	r3, r3, #32
   12fc4:	cmp	r3, #66	; 0x42
   12fc8:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12fcc:	ldrb	r3, [r0, #2]
   12fd0:	cmp	r3, #49	; 0x31
   12fd4:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12fd8:	ldrb	r3, [r0, #3]
   12fdc:	cmp	r3, #56	; 0x38
   12fe0:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12fe4:	ldrb	r3, [r0, #4]
   12fe8:	cmp	r3, #48	; 0x30
   12fec:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12ff0:	ldrb	r3, [r0, #5]
   12ff4:	cmp	r3, #51	; 0x33
   12ff8:	bne	12fa0 <close_stdout@@Base+0x3c8>
   12ffc:	ldrb	r3, [r0, #6]
   13000:	cmp	r3, #48	; 0x30
   13004:	bne	12fa0 <close_stdout@@Base+0x3c8>
   13008:	ldrb	r3, [r0, #7]
   1300c:	cmp	r3, #0
   13010:	bne	12fa0 <close_stdout@@Base+0x3c8>
   13014:	ldrb	r3, [r5]
   13018:	cmp	r3, #96	; 0x60
   1301c:	beq	13044 <close_stdout@@Base+0x46c>
   13020:	ldr	r0, [pc, #48]	; 13058 <close_stdout@@Base+0x480>
   13024:	add	r0, pc, r0
   13028:	pop	{r4, r5, r6, pc}
   1302c:	ldr	r0, [pc, #40]	; 1305c <close_stdout@@Base+0x484>
   13030:	add	r0, pc, r0
   13034:	pop	{r4, r5, r6, pc}
   13038:	ldr	r0, [pc, #32]	; 13060 <close_stdout@@Base+0x488>
   1303c:	add	r0, pc, r0
   13040:	pop	{r4, r5, r6, pc}
   13044:	ldr	r0, [pc, #24]	; 13064 <close_stdout@@Base+0x48c>
   13048:	add	r0, pc, r0
   1304c:	pop	{r4, r5, r6, pc}
   13050:	andeq	r3, r0, ip, ror #12
   13054:	andeq	r3, r0, r0, ror #12
   13058:	andeq	r3, r0, r4, ror #11
   1305c:	andeq	r3, r0, r8, ror #11
   13060:	ldrdeq	r3, [r0], -r4
   13064:	andeq	r3, r0, ip, asr #11
   13068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1306c:	sub	sp, sp, #124	; 0x7c
   13070:	ldr	ip, [pc, #3304]	; 13d60 <close_stdout@@Base+0x1188>
   13074:	mov	sl, r1
   13078:	str	r0, [sp, #40]	; 0x28
   1307c:	mov	r8, r3
   13080:	ldr	r0, [pc, #3292]	; 13d64 <close_stdout@@Base+0x118c>
   13084:	add	ip, pc, ip
   13088:	str	r2, [sp, #32]
   1308c:	ldr	r1, [sp, #164]	; 0xa4
   13090:	mov	r3, ip
   13094:	ldr	r0, [ip, r0]
   13098:	ldr	r2, [sp, #172]	; 0xac
   1309c:	ubfx	r1, r1, #1, #1
   130a0:	str	r1, [sp, #36]	; 0x24
   130a4:	str	r0, [sp, #56]	; 0x38
   130a8:	ldr	r0, [sp, #168]	; 0xa8
   130ac:	ldr	r1, [sp, #176]	; 0xb0
   130b0:	str	r2, [sp, #72]	; 0x48
   130b4:	str	r0, [sp, #48]	; 0x30
   130b8:	ldr	r0, [sp, #56]	; 0x38
   130bc:	str	r1, [sp, #68]	; 0x44
   130c0:	ldr	r3, [r0]
   130c4:	str	r3, [sp, #116]	; 0x74
   130c8:	bl	1110c <__ctype_get_mb_cur_max@plt>
   130cc:	ldr	r2, [sp, #160]	; 0xa0
   130d0:	str	r0, [sp, #64]	; 0x40
   130d4:	cmp	r2, #8
   130d8:	addls	pc, pc, r2, lsl #2
   130dc:	b	13c3c <close_stdout@@Base+0x1064>
   130e0:	b	13104 <close_stdout@@Base+0x52c>
   130e4:	b	13954 <close_stdout@@Base+0xd7c>
   130e8:	b	13984 <close_stdout@@Base+0xdac>
   130ec:	b	13834 <close_stdout@@Base+0xc5c>
   130f0:	b	13874 <close_stdout@@Base+0xc9c>
   130f4:	b	138a0 <close_stdout@@Base+0xcc8>
   130f8:	b	138c0 <close_stdout@@Base+0xce8>
   130fc:	b	138c0 <close_stdout@@Base+0xce8>
   13100:	b	138c0 <close_stdout@@Base+0xce8>
   13104:	mov	r2, #0
   13108:	str	r2, [sp, #36]	; 0x24
   1310c:	mov	r9, r2
   13110:	str	r2, [sp, #24]
   13114:	str	r2, [sp, #28]
   13118:	str	r2, [sp, #52]	; 0x34
   1311c:	ldr	r0, [sp, #36]	; 0x24
   13120:	mov	fp, #0
   13124:	ldr	r1, [sp, #24]
   13128:	eor	r2, r0, #1
   1312c:	eor	r3, r1, #1
   13130:	and	r3, r2, r3
   13134:	and	r2, r1, r0
   13138:	str	r3, [sp, #44]	; 0x2c
   1313c:	str	r2, [sp, #76]	; 0x4c
   13140:	cmn	r8, #1
   13144:	beq	134c4 <close_stdout@@Base+0x8ec>
   13148:	subs	r3, fp, r8
   1314c:	movne	r3, #1
   13150:	cmp	r3, #0
   13154:	beq	134dc <close_stdout@@Base+0x904>
   13158:	ldr	r3, [sp, #28]
   1315c:	ldr	r0, [sp, #24]
   13160:	adds	r7, r3, #0
   13164:	movne	r7, #1
   13168:	ands	r6, r7, r0
   1316c:	bne	139c8 <close_stdout@@Base+0xdf0>
   13170:	ldr	r1, [sp, #32]
   13174:	add	r5, r1, fp
   13178:	ldrb	r4, [r5]
   1317c:	cmp	r4, #126	; 0x7e
   13180:	addls	pc, pc, r4, lsl #2
   13184:	b	13748 <close_stdout@@Base+0xb70>
   13188:	b	13654 <close_stdout@@Base+0xa7c>
   1318c:	b	13748 <close_stdout@@Base+0xb70>
   13190:	b	13748 <close_stdout@@Base+0xb70>
   13194:	b	13748 <close_stdout@@Base+0xb70>
   13198:	b	13748 <close_stdout@@Base+0xb70>
   1319c:	b	13748 <close_stdout@@Base+0xb70>
   131a0:	b	13748 <close_stdout@@Base+0xb70>
   131a4:	b	1363c <close_stdout@@Base+0xa64>
   131a8:	b	13624 <close_stdout@@Base+0xa4c>
   131ac:	b	1364c <close_stdout@@Base+0xa74>
   131b0:	b	13644 <close_stdout@@Base+0xa6c>
   131b4:	b	13634 <close_stdout@@Base+0xa5c>
   131b8:	b	1362c <close_stdout@@Base+0xa54>
   131bc:	b	135f0 <close_stdout@@Base+0xa18>
   131c0:	b	13748 <close_stdout@@Base+0xb70>
   131c4:	b	13748 <close_stdout@@Base+0xb70>
   131c8:	b	13748 <close_stdout@@Base+0xb70>
   131cc:	b	13748 <close_stdout@@Base+0xb70>
   131d0:	b	13748 <close_stdout@@Base+0xb70>
   131d4:	b	13748 <close_stdout@@Base+0xb70>
   131d8:	b	13748 <close_stdout@@Base+0xb70>
   131dc:	b	13748 <close_stdout@@Base+0xb70>
   131e0:	b	13748 <close_stdout@@Base+0xb70>
   131e4:	b	13748 <close_stdout@@Base+0xb70>
   131e8:	b	13748 <close_stdout@@Base+0xb70>
   131ec:	b	13748 <close_stdout@@Base+0xb70>
   131f0:	b	13748 <close_stdout@@Base+0xb70>
   131f4:	b	13748 <close_stdout@@Base+0xb70>
   131f8:	b	13748 <close_stdout@@Base+0xb70>
   131fc:	b	13748 <close_stdout@@Base+0xb70>
   13200:	b	13748 <close_stdout@@Base+0xb70>
   13204:	b	13748 <close_stdout@@Base+0xb70>
   13208:	b	1357c <close_stdout@@Base+0x9a4>
   1320c:	b	1357c <close_stdout@@Base+0x9a4>
   13210:	b	1357c <close_stdout@@Base+0x9a4>
   13214:	b	13574 <close_stdout@@Base+0x99c>
   13218:	b	1357c <close_stdout@@Base+0x9a4>
   1321c:	b	13450 <close_stdout@@Base+0x878>
   13220:	b	1357c <close_stdout@@Base+0x9a4>
   13224:	b	136f0 <close_stdout@@Base+0xb18>
   13228:	b	1357c <close_stdout@@Base+0x9a4>
   1322c:	b	1357c <close_stdout@@Base+0x9a4>
   13230:	b	1357c <close_stdout@@Base+0x9a4>
   13234:	b	13450 <close_stdout@@Base+0x878>
   13238:	b	13450 <close_stdout@@Base+0x878>
   1323c:	b	13450 <close_stdout@@Base+0x878>
   13240:	b	13450 <close_stdout@@Base+0x878>
   13244:	b	13450 <close_stdout@@Base+0x878>
   13248:	b	13450 <close_stdout@@Base+0x878>
   1324c:	b	13450 <close_stdout@@Base+0x878>
   13250:	b	13450 <close_stdout@@Base+0x878>
   13254:	b	13450 <close_stdout@@Base+0x878>
   13258:	b	13450 <close_stdout@@Base+0x878>
   1325c:	b	13450 <close_stdout@@Base+0x878>
   13260:	b	13450 <close_stdout@@Base+0x878>
   13264:	b	13450 <close_stdout@@Base+0x878>
   13268:	b	13450 <close_stdout@@Base+0x878>
   1326c:	b	13450 <close_stdout@@Base+0x878>
   13270:	b	13450 <close_stdout@@Base+0x878>
   13274:	b	1357c <close_stdout@@Base+0x9a4>
   13278:	b	1357c <close_stdout@@Base+0x9a4>
   1327c:	b	1357c <close_stdout@@Base+0x9a4>
   13280:	b	1357c <close_stdout@@Base+0x9a4>
   13284:	b	13384 <close_stdout@@Base+0x7ac>
   13288:	b	13748 <close_stdout@@Base+0xb70>
   1328c:	b	13450 <close_stdout@@Base+0x878>
   13290:	b	13450 <close_stdout@@Base+0x878>
   13294:	b	13450 <close_stdout@@Base+0x878>
   13298:	b	13450 <close_stdout@@Base+0x878>
   1329c:	b	13450 <close_stdout@@Base+0x878>
   132a0:	b	13450 <close_stdout@@Base+0x878>
   132a4:	b	13450 <close_stdout@@Base+0x878>
   132a8:	b	13450 <close_stdout@@Base+0x878>
   132ac:	b	13450 <close_stdout@@Base+0x878>
   132b0:	b	13450 <close_stdout@@Base+0x878>
   132b4:	b	13450 <close_stdout@@Base+0x878>
   132b8:	b	13450 <close_stdout@@Base+0x878>
   132bc:	b	13450 <close_stdout@@Base+0x878>
   132c0:	b	13450 <close_stdout@@Base+0x878>
   132c4:	b	13450 <close_stdout@@Base+0x878>
   132c8:	b	13450 <close_stdout@@Base+0x878>
   132cc:	b	13450 <close_stdout@@Base+0x878>
   132d0:	b	13450 <close_stdout@@Base+0x878>
   132d4:	b	13450 <close_stdout@@Base+0x878>
   132d8:	b	13450 <close_stdout@@Base+0x878>
   132dc:	b	13450 <close_stdout@@Base+0x878>
   132e0:	b	13450 <close_stdout@@Base+0x878>
   132e4:	b	13450 <close_stdout@@Base+0x878>
   132e8:	b	13450 <close_stdout@@Base+0x878>
   132ec:	b	13450 <close_stdout@@Base+0x878>
   132f0:	b	13450 <close_stdout@@Base+0x878>
   132f4:	b	1357c <close_stdout@@Base+0x9a4>
   132f8:	b	136d4 <close_stdout@@Base+0xafc>
   132fc:	b	13450 <close_stdout@@Base+0x878>
   13300:	b	1357c <close_stdout@@Base+0x9a4>
   13304:	b	13450 <close_stdout@@Base+0x878>
   13308:	b	1357c <close_stdout@@Base+0x9a4>
   1330c:	b	13450 <close_stdout@@Base+0x878>
   13310:	b	13450 <close_stdout@@Base+0x878>
   13314:	b	13450 <close_stdout@@Base+0x878>
   13318:	b	13450 <close_stdout@@Base+0x878>
   1331c:	b	13450 <close_stdout@@Base+0x878>
   13320:	b	13450 <close_stdout@@Base+0x878>
   13324:	b	13450 <close_stdout@@Base+0x878>
   13328:	b	13450 <close_stdout@@Base+0x878>
   1332c:	b	13450 <close_stdout@@Base+0x878>
   13330:	b	13450 <close_stdout@@Base+0x878>
   13334:	b	13450 <close_stdout@@Base+0x878>
   13338:	b	13450 <close_stdout@@Base+0x878>
   1333c:	b	13450 <close_stdout@@Base+0x878>
   13340:	b	13450 <close_stdout@@Base+0x878>
   13344:	b	13450 <close_stdout@@Base+0x878>
   13348:	b	13450 <close_stdout@@Base+0x878>
   1334c:	b	13450 <close_stdout@@Base+0x878>
   13350:	b	13450 <close_stdout@@Base+0x878>
   13354:	b	13450 <close_stdout@@Base+0x878>
   13358:	b	13450 <close_stdout@@Base+0x878>
   1335c:	b	13450 <close_stdout@@Base+0x878>
   13360:	b	13450 <close_stdout@@Base+0x878>
   13364:	b	13450 <close_stdout@@Base+0x878>
   13368:	b	13450 <close_stdout@@Base+0x878>
   1336c:	b	13450 <close_stdout@@Base+0x878>
   13370:	b	13450 <close_stdout@@Base+0x878>
   13374:	b	1355c <close_stdout@@Base+0x984>
   13378:	b	1357c <close_stdout@@Base+0x9a4>
   1337c:	b	1355c <close_stdout@@Base+0x984>
   13380:	b	13574 <close_stdout@@Base+0x99c>
   13384:	ldr	r3, [sp, #160]	; 0xa0
   13388:	cmp	r3, #2
   1338c:	beq	13c18 <close_stdout@@Base+0x1040>
   13390:	cmp	r3, #3
   13394:	bne	13450 <close_stdout@@Base+0x878>
   13398:	ldr	r1, [sp, #164]	; 0xa4
   1339c:	tst	r1, #4
   133a0:	beq	13450 <close_stdout@@Base+0x878>
   133a4:	add	r3, fp, #2
   133a8:	cmp	r8, r3
   133ac:	bls	13450 <close_stdout@@Base+0x878>
   133b0:	ldrb	r2, [r5, #1]
   133b4:	mov	r1, #1
   133b8:	cmp	r2, #63	; 0x3f
   133bc:	bne	13450 <close_stdout@@Base+0x878>
   133c0:	ldr	r0, [sp, #32]
   133c4:	ldrb	ip, [r0, r3]
   133c8:	sub	r0, ip, #33	; 0x21
   133cc:	uxtb	r0, r0
   133d0:	cmp	r0, #29
   133d4:	bhi	13450 <close_stdout@@Base+0x878>
   133d8:	lsl	r1, r1, r0
   133dc:	movw	r0, #20929	; 0x51c1
   133e0:	movt	r0, #14336	; 0x3800
   133e4:	and	r0, r1, r0
   133e8:	cmp	r0, #0
   133ec:	beq	13450 <close_stdout@@Base+0x878>
   133f0:	ldr	r1, [sp, #36]	; 0x24
   133f4:	cmp	r1, #0
   133f8:	bne	13598 <close_stdout@@Base+0x9c0>
   133fc:	cmp	r9, sl
   13400:	mov	r4, ip
   13404:	mov	fp, r3
   13408:	ldrcc	r0, [sp, #40]	; 0x28
   1340c:	strbcc	r2, [r0, r9]
   13410:	add	r2, r9, #1
   13414:	cmp	sl, r2
   13418:	ldrhi	r0, [sp, #40]	; 0x28
   1341c:	movhi	r1, #34	; 0x22
   13420:	strbhi	r1, [r0, r2]
   13424:	add	r2, r9, #2
   13428:	cmp	sl, r2
   1342c:	ldrhi	r0, [sp, #40]	; 0x28
   13430:	movhi	r1, #34	; 0x22
   13434:	strbhi	r1, [r0, r2]
   13438:	add	r2, r9, #3
   1343c:	cmp	sl, r2
   13440:	add	r9, r9, #4
   13444:	ldrhi	r0, [sp, #40]	; 0x28
   13448:	movhi	r1, #63	; 0x3f
   1344c:	strbhi	r1, [r0, r2]
   13450:	ldr	r0, [sp, #44]	; 0x2c
   13454:	cmp	r0, #0
   13458:	bne	13480 <close_stdout@@Base+0x8a8>
   1345c:	ldr	r1, [sp, #48]	; 0x30
   13460:	cmp	r1, #0
   13464:	beq	13480 <close_stdout@@Base+0x8a8>
   13468:	ubfx	r2, r4, #5, #8
   1346c:	and	r3, r4, #31
   13470:	ldr	r2, [r1, r2, lsl #2]
   13474:	lsr	r3, r2, r3
   13478:	tst	r3, #1
   1347c:	bne	13488 <close_stdout@@Base+0x8b0>
   13480:	cmp	r6, #0
   13484:	beq	134a8 <close_stdout@@Base+0x8d0>
   13488:	ldr	r2, [sp, #36]	; 0x24
   1348c:	cmp	r2, #0
   13490:	bne	13598 <close_stdout@@Base+0x9c0>
   13494:	cmp	r9, sl
   13498:	ldrcc	r0, [sp, #40]	; 0x28
   1349c:	movcc	r3, #92	; 0x5c
   134a0:	strbcc	r3, [r0, r9]
   134a4:	add	r9, r9, #1
   134a8:	add	fp, fp, #1
   134ac:	cmp	r9, sl
   134b0:	ldrcc	r1, [sp, #40]	; 0x28
   134b4:	strbcc	r4, [r1, r9]
   134b8:	cmn	r8, #1
   134bc:	add	r9, r9, #1
   134c0:	bne	13148 <close_stdout@@Base+0x570>
   134c4:	ldr	r2, [sp, #32]
   134c8:	ldrb	r3, [r2, fp]
   134cc:	adds	r3, r3, #0
   134d0:	movne	r3, #1
   134d4:	cmp	r3, #0
   134d8:	bne	13158 <close_stdout@@Base+0x580>
   134dc:	ldr	r3, [sp, #160]	; 0xa0
   134e0:	cmp	r9, #0
   134e4:	cmpeq	r3, #2
   134e8:	bne	134f8 <close_stdout@@Base+0x920>
   134ec:	ldr	r0, [sp, #36]	; 0x24
   134f0:	cmp	r0, #0
   134f4:	bne	13598 <close_stdout@@Base+0x9c0>
   134f8:	ldr	r1, [sp, #36]	; 0x24
   134fc:	ldr	r2, [sp, #52]	; 0x34
   13500:	eor	r3, r1, #1
   13504:	cmp	r2, #0
   13508:	moveq	r3, #0
   1350c:	andne	r3, r3, #1
   13510:	cmp	r3, #0
   13514:	beq	13540 <close_stdout@@Base+0x968>
   13518:	ldrb	r3, [r2]
   1351c:	cmp	r3, #0
   13520:	beq	13540 <close_stdout@@Base+0x968>
   13524:	ldr	r1, [sp, #40]	; 0x28
   13528:	cmp	sl, r9
   1352c:	strbhi	r3, [r1, r9]
   13530:	ldrb	r3, [r2, #1]!
   13534:	add	r9, r9, #1
   13538:	cmp	r3, #0
   1353c:	bne	13528 <close_stdout@@Base+0x950>
   13540:	cmp	r9, sl
   13544:	movcs	r0, r9
   13548:	ldrcc	r1, [sp, #40]	; 0x28
   1354c:	movcc	r3, #0
   13550:	movcc	r0, r9
   13554:	strbcc	r3, [r1, r9]
   13558:	b	135d4 <close_stdout@@Base+0x9fc>
   1355c:	cmn	r8, #1
   13560:	beq	13c28 <close_stdout@@Base+0x1050>
   13564:	subs	r3, r8, #1
   13568:	movne	r3, #1
   1356c:	cmp	r3, #0
   13570:	bne	13450 <close_stdout@@Base+0x878>
   13574:	cmp	fp, #0
   13578:	bne	13450 <close_stdout@@Base+0x878>
   1357c:	ldr	r3, [sp, #36]	; 0x24
   13580:	ldr	r0, [sp, #160]	; 0xa0
   13584:	cmp	r0, #2
   13588:	movne	r3, #0
   1358c:	andeq	r3, r3, #1
   13590:	cmp	r3, #0
   13594:	beq	13450 <close_stdout@@Base+0x878>
   13598:	ldr	r2, [sp, #164]	; 0xa4
   1359c:	mov	ip, #0
   135a0:	ldr	r0, [sp, #160]	; 0xa0
   135a4:	bic	r3, r2, #2
   135a8:	ldr	r1, [sp, #72]	; 0x48
   135ac:	ldr	r2, [sp, #68]	; 0x44
   135b0:	stm	sp, {r0, r3}
   135b4:	mov	r3, r8
   135b8:	str	r1, [sp, #12]
   135bc:	mov	r1, sl
   135c0:	str	r2, [sp, #16]
   135c4:	ldr	r0, [sp, #40]	; 0x28
   135c8:	ldr	r2, [sp, #32]
   135cc:	str	ip, [sp, #8]
   135d0:	bl	13068 <close_stdout@@Base+0x490>
   135d4:	ldr	r1, [sp, #56]	; 0x38
   135d8:	ldr	r2, [sp, #116]	; 0x74
   135dc:	ldr	r3, [r1]
   135e0:	cmp	r2, r3
   135e4:	bne	13d18 <close_stdout@@Base+0x1140>
   135e8:	add	sp, sp, #124	; 0x7c
   135ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f0:	mov	r3, #114	; 0x72
   135f4:	ldr	r2, [sp, #36]	; 0x24
   135f8:	ldr	r0, [sp, #160]	; 0xa0
   135fc:	cmp	r0, #2
   13600:	movne	r2, #0
   13604:	andeq	r2, r2, #1
   13608:	cmp	r2, #0
   1360c:	bne	13598 <close_stdout@@Base+0x9c0>
   13610:	ldr	r1, [sp, #24]
   13614:	cmp	r1, #0
   13618:	beq	13450 <close_stdout@@Base+0x878>
   1361c:	mov	r4, r3
   13620:	b	13488 <close_stdout@@Base+0x8b0>
   13624:	mov	r3, #98	; 0x62
   13628:	b	13610 <close_stdout@@Base+0xa38>
   1362c:	mov	r3, #102	; 0x66
   13630:	b	13610 <close_stdout@@Base+0xa38>
   13634:	mov	r3, #118	; 0x76
   13638:	b	13610 <close_stdout@@Base+0xa38>
   1363c:	mov	r3, #97	; 0x61
   13640:	b	13610 <close_stdout@@Base+0xa38>
   13644:	mov	r3, #110	; 0x6e
   13648:	b	135f4 <close_stdout@@Base+0xa1c>
   1364c:	mov	r3, #116	; 0x74
   13650:	b	135f4 <close_stdout@@Base+0xa1c>
   13654:	ldr	r2, [sp, #24]
   13658:	cmp	r2, #0
   1365c:	beq	13c04 <close_stdout@@Base+0x102c>
   13660:	ldr	r3, [sp, #36]	; 0x24
   13664:	cmp	r3, #0
   13668:	bne	13598 <close_stdout@@Base+0x9c0>
   1366c:	cmp	r9, sl
   13670:	add	r2, r9, #1
   13674:	ldrcc	r0, [sp, #40]	; 0x28
   13678:	movcc	r3, #92	; 0x5c
   1367c:	strbcc	r3, [r0, r9]
   13680:	add	r3, fp, #1
   13684:	cmp	r8, r3
   13688:	bls	136c8 <close_stdout@@Base+0xaf0>
   1368c:	ldr	r1, [sp, #32]
   13690:	ldrb	r3, [r1, r3]
   13694:	sub	r3, r3, #48	; 0x30
   13698:	cmp	r3, #9
   1369c:	bhi	136c8 <close_stdout@@Base+0xaf0>
   136a0:	cmp	sl, r2
   136a4:	ldrhi	r0, [sp, #40]	; 0x28
   136a8:	movhi	r3, #48	; 0x30
   136ac:	strbhi	r3, [r0, r2]
   136b0:	add	r3, r9, #2
   136b4:	cmp	sl, r3
   136b8:	ldrhi	r1, [sp, #40]	; 0x28
   136bc:	movhi	r2, #48	; 0x30
   136c0:	strbhi	r2, [r1, r3]
   136c4:	add	r2, r9, #3
   136c8:	mov	r9, r2
   136cc:	mov	r4, #48	; 0x30
   136d0:	b	1345c <close_stdout@@Base+0x884>
   136d4:	ldr	r1, [sp, #76]	; 0x4c
   136d8:	cmp	r1, #0
   136dc:	beq	136e8 <close_stdout@@Base+0xb10>
   136e0:	cmp	r7, #0
   136e4:	bne	134a8 <close_stdout@@Base+0x8d0>
   136e8:	mov	r3, r4
   136ec:	b	135f4 <close_stdout@@Base+0xa1c>
   136f0:	ldr	r1, [sp, #160]	; 0xa0
   136f4:	cmp	r1, #2
   136f8:	bne	13450 <close_stdout@@Base+0x878>
   136fc:	ldr	r2, [sp, #36]	; 0x24
   13700:	cmp	r2, #0
   13704:	bne	13598 <close_stdout@@Base+0x9c0>
   13708:	cmp	r9, sl
   1370c:	ldrcc	r0, [sp, #40]	; 0x28
   13710:	movcc	r3, #39	; 0x27
   13714:	strbcc	r3, [r0, r9]
   13718:	add	r3, r9, #1
   1371c:	cmp	sl, r3
   13720:	ldrhi	r1, [sp, #40]	; 0x28
   13724:	movhi	r2, #92	; 0x5c
   13728:	strbhi	r2, [r1, r3]
   1372c:	add	r3, r9, #2
   13730:	cmp	sl, r3
   13734:	add	r9, r9, #3
   13738:	ldrhi	r0, [sp, #40]	; 0x28
   1373c:	movhi	r2, #39	; 0x27
   13740:	strbhi	r2, [r0, r3]
   13744:	b	13450 <close_stdout@@Base+0x878>
   13748:	ldr	r1, [sp, #64]	; 0x40
   1374c:	cmp	r1, #1
   13750:	bne	13a48 <close_stdout@@Base+0xe70>
   13754:	bl	1119c <__ctype_b_loc@plt>
   13758:	ldr	r2, [sp, #64]	; 0x40
   1375c:	sxth	r3, r4
   13760:	str	r2, [sp, #60]	; 0x3c
   13764:	lsl	r3, r3, #1
   13768:	ldr	r2, [r0]
   1376c:	ldrh	r2, [r2, r3]
   13770:	eor	r2, r2, #16384	; 0x4000
   13774:	ubfx	r2, r2, #14, #1
   13778:	ldr	r1, [sp, #24]
   1377c:	ands	r2, r2, r1
   13780:	beq	13450 <close_stdout@@Base+0x878>
   13784:	ldr	r3, [sp, #60]	; 0x3c
   13788:	mov	r0, #92	; 0x5c
   1378c:	ldr	r7, [sp, #36]	; 0x24
   13790:	add	r1, r3, fp
   13794:	str	r8, [sp, #60]	; 0x3c
   13798:	ldr	r3, [sp, #40]	; 0x28
   1379c:	b	13800 <close_stdout@@Base+0xc28>
   137a0:	cmp	r7, #0
   137a4:	bne	13c40 <close_stdout@@Base+0x1068>
   137a8:	add	ip, r9, #1
   137ac:	cmp	r9, sl
   137b0:	strbcc	r0, [r3, r9]
   137b4:	cmp	sl, ip
   137b8:	lsrhi	r8, r4, #6
   137bc:	addhi	r8, r8, #48	; 0x30
   137c0:	strbhi	r8, [r3, ip]
   137c4:	add	ip, r9, #2
   137c8:	add	r9, r9, #3
   137cc:	cmp	sl, ip
   137d0:	ubfxhi	r8, r4, #3, #3
   137d4:	and	r4, r4, #7
   137d8:	add	r4, r4, #48	; 0x30
   137dc:	addhi	r8, r8, #48	; 0x30
   137e0:	strbhi	r8, [r3, ip]
   137e4:	add	fp, fp, #1
   137e8:	cmp	r1, fp
   137ec:	bls	1382c <close_stdout@@Base+0xc54>
   137f0:	cmp	r9, sl
   137f4:	strbcc	r4, [r3, r9]
   137f8:	ldrb	r4, [r5, #1]!
   137fc:	add	r9, r9, #1
   13800:	cmp	r2, #0
   13804:	bne	137a0 <close_stdout@@Base+0xbc8>
   13808:	cmp	r6, #0
   1380c:	beq	137e4 <close_stdout@@Base+0xc0c>
   13810:	add	fp, fp, #1
   13814:	cmp	r9, sl
   13818:	strbcc	r0, [r3, r9]
   1381c:	cmp	r1, fp
   13820:	add	r9, r9, #1
   13824:	mov	r6, #0
   13828:	bhi	137f0 <close_stdout@@Base+0xc18>
   1382c:	ldr	r8, [sp, #60]	; 0x3c
   13830:	b	134ac <close_stdout@@Base+0x8d4>
   13834:	ldr	r3, [sp, #36]	; 0x24
   13838:	cmp	r3, #0
   1383c:	bne	13d40 <close_stdout@@Base+0x1168>
   13840:	cmp	sl, #0
   13844:	beq	13c58 <close_stdout@@Base+0x1080>
   13848:	ldr	r1, [sp, #40]	; 0x28
   1384c:	mov	r0, #1
   13850:	ldr	r2, [pc, #1296]	; 13d68 <close_stdout@@Base+0x1190>
   13854:	mov	r3, #34	; 0x22
   13858:	str	r0, [sp, #24]
   1385c:	mov	r9, r0
   13860:	add	r2, pc, r2
   13864:	str	r0, [sp, #28]
   13868:	strb	r3, [r1]
   1386c:	str	r2, [sp, #52]	; 0x34
   13870:	b	1311c <close_stdout@@Base+0x544>
   13874:	ldr	r3, [pc, #1264]	; 13d6c <close_stdout@@Base+0x1194>
   13878:	mov	r2, #1
   1387c:	mov	r0, #3
   13880:	str	r2, [sp, #36]	; 0x24
   13884:	add	r3, pc, r3
   13888:	str	r2, [sp, #24]
   1388c:	str	r3, [sp, #52]	; 0x34
   13890:	mov	r9, #0
   13894:	str	r2, [sp, #28]
   13898:	str	r0, [sp, #160]	; 0xa0
   1389c:	b	1311c <close_stdout@@Base+0x544>
   138a0:	mov	r0, #0
   138a4:	mov	r1, #1
   138a8:	str	r0, [sp, #36]	; 0x24
   138ac:	mov	r9, r0
   138b0:	str	r1, [sp, #24]
   138b4:	str	r0, [sp, #28]
   138b8:	str	r0, [sp, #52]	; 0x34
   138bc:	b	1311c <close_stdout@@Base+0x544>
   138c0:	ldr	r3, [sp, #160]	; 0xa0
   138c4:	cmp	r3, #8
   138c8:	beq	138f4 <close_stdout@@Base+0xd1c>
   138cc:	ldr	r0, [pc, #1180]	; 13d70 <close_stdout@@Base+0x1198>
   138d0:	mov	r1, r3
   138d4:	add	r0, pc, r0
   138d8:	bl	12f04 <close_stdout@@Base+0x32c>
   138dc:	ldr	r1, [sp, #160]	; 0xa0
   138e0:	str	r0, [sp, #72]	; 0x48
   138e4:	ldr	r0, [pc, #1160]	; 13d74 <close_stdout@@Base+0x119c>
   138e8:	add	r0, pc, r0
   138ec:	bl	12f04 <close_stdout@@Base+0x32c>
   138f0:	str	r0, [sp, #68]	; 0x44
   138f4:	ldr	r0, [sp, #36]	; 0x24
   138f8:	cmp	r0, #0
   138fc:	movne	r9, #0
   13900:	bne	13938 <close_stdout@@Base+0xd60>
   13904:	ldr	r1, [sp, #72]	; 0x48
   13908:	ldrb	r3, [r1]
   1390c:	cmp	r3, #0
   13910:	beq	13d10 <close_stdout@@Base+0x1138>
   13914:	mov	r2, r1
   13918:	ldr	r1, [sp, #40]	; 0x28
   1391c:	mov	r9, r0
   13920:	cmp	r9, sl
   13924:	strbcc	r3, [r1, r9]
   13928:	ldrb	r3, [r2, #1]!
   1392c:	add	r9, r9, #1
   13930:	cmp	r3, #0
   13934:	bne	13920 <close_stdout@@Base+0xd48>
   13938:	ldr	r0, [sp, #68]	; 0x44
   1393c:	str	r0, [sp, #52]	; 0x34
   13940:	bl	111b4 <strlen@plt>
   13944:	mov	r2, #1
   13948:	str	r2, [sp, #24]
   1394c:	str	r0, [sp, #28]
   13950:	b	1311c <close_stdout@@Base+0x544>
   13954:	ldr	r3, [pc, #1052]	; 13d78 <close_stdout@@Base+0x11a0>
   13958:	mov	r2, #0
   1395c:	mov	r1, #1
   13960:	mov	r0, #2
   13964:	add	r3, pc, r3
   13968:	str	r1, [sp, #36]	; 0x24
   1396c:	str	r2, [sp, #24]
   13970:	mov	r9, r2
   13974:	str	r1, [sp, #28]
   13978:	str	r3, [sp, #52]	; 0x34
   1397c:	str	r0, [sp, #160]	; 0xa0
   13980:	b	1311c <close_stdout@@Base+0x544>
   13984:	ldr	r3, [sp, #36]	; 0x24
   13988:	cmp	r3, #0
   1398c:	bne	13d1c <close_stdout@@Base+0x1144>
   13990:	cmp	sl, #0
   13994:	beq	13c78 <close_stdout@@Base+0x10a0>
   13998:	ldr	r1, [sp, #40]	; 0x28
   1399c:	mov	r3, #39	; 0x27
   139a0:	ldr	r2, [sp, #36]	; 0x24
   139a4:	mov	r0, #1
   139a8:	mov	r9, r0
   139ac:	str	r0, [sp, #28]
   139b0:	strb	r3, [r1]
   139b4:	ldr	r3, [pc, #960]	; 13d7c <close_stdout@@Base+0x11a4>
   139b8:	str	r2, [sp, #24]
   139bc:	add	r3, pc, r3
   139c0:	str	r3, [sp, #52]	; 0x34
   139c4:	b	1311c <close_stdout@@Base+0x544>
   139c8:	ldr	r2, [sp, #28]
   139cc:	cmp	r2, #1
   139d0:	add	r4, fp, r2
   139d4:	movls	r3, #0
   139d8:	movhi	r3, #1
   139dc:	cmn	r8, #1
   139e0:	movne	r3, #0
   139e4:	cmp	r3, #0
   139e8:	beq	139f8 <close_stdout@@Base+0xe20>
   139ec:	ldr	r0, [sp, #32]
   139f0:	bl	111b4 <strlen@plt>
   139f4:	mov	r8, r0
   139f8:	cmp	r8, r4
   139fc:	ldrcc	r3, [sp, #32]
   13a00:	movcc	r6, #0
   13a04:	addcc	r5, r3, fp
   13a08:	bcc	13178 <close_stdout@@Base+0x5a0>
   13a0c:	ldr	r0, [sp, #32]
   13a10:	ldr	r1, [sp, #52]	; 0x34
   13a14:	add	r5, r0, fp
   13a18:	ldr	r2, [sp, #28]
   13a1c:	mov	r0, r5
   13a20:	bl	110a0 <memcmp@plt>
   13a24:	cmp	r0, #0
   13a28:	bne	13a40 <close_stdout@@Base+0xe68>
   13a2c:	ldr	r1, [sp, #36]	; 0x24
   13a30:	cmp	r1, #0
   13a34:	bne	13598 <close_stdout@@Base+0x9c0>
   13a38:	mov	r6, #1
   13a3c:	b	13178 <close_stdout@@Base+0x5a0>
   13a40:	mov	r6, #0
   13a44:	b	13178 <close_stdout@@Base+0x5a0>
   13a48:	add	r7, sp, #108	; 0x6c
   13a4c:	cmn	r8, #1
   13a50:	mov	r3, #0
   13a54:	str	r3, [sp, #108]	; 0x6c
   13a58:	str	r3, [r7, #4]
   13a5c:	beq	13c48 <close_stdout@@Base+0x1070>
   13a60:	mov	r1, #0
   13a64:	ldr	r0, [sp, #32]
   13a68:	mov	ip, #1
   13a6c:	str	r9, [sp, #88]	; 0x58
   13a70:	str	r6, [sp, #96]	; 0x60
   13a74:	mov	r9, r1
   13a78:	str	r5, [sp, #100]	; 0x64
   13a7c:	mov	r6, ip
   13a80:	mov	r5, r7
   13a84:	add	r3, sp, #104	; 0x68
   13a88:	sub	r0, r0, #1
   13a8c:	str	r3, [sp, #80]	; 0x50
   13a90:	str	r0, [sp, #84]	; 0x54
   13a94:	str	r1, [sp, #60]	; 0x3c
   13a98:	str	r4, [sp, #92]	; 0x5c
   13a9c:	ldr	r2, [sp, #32]
   13aa0:	add	r7, r9, fp
   13aa4:	add	r0, sp, #104	; 0x68
   13aa8:	mov	r3, r5
   13aac:	add	r4, r2, r7
   13ab0:	rsb	r2, r7, r8
   13ab4:	mov	r1, r4
   13ab8:	bl	11130 <mbrtowc@plt>
   13abc:	subs	r2, r0, #0
   13ac0:	beq	13bcc <close_stdout@@Base+0xff4>
   13ac4:	cmn	r2, #1
   13ac8:	beq	13cf4 <close_stdout@@Base+0x111c>
   13acc:	cmn	r2, #2
   13ad0:	beq	13c98 <close_stdout@@Base+0x10c0>
   13ad4:	ldr	r3, [sp, #36]	; 0x24
   13ad8:	ldr	r0, [sp, #160]	; 0xa0
   13adc:	cmp	r0, #2
   13ae0:	movne	r3, #0
   13ae4:	andeq	r3, r3, #1
   13ae8:	cmp	r3, #0
   13aec:	beq	13ba8 <close_stdout@@Base+0xfd0>
   13af0:	cmp	r2, #1
   13af4:	beq	13ba8 <close_stdout@@Base+0xfd0>
   13af8:	ldr	r1, [sp, #84]	; 0x54
   13afc:	add	r3, r1, r2
   13b00:	add	r7, r3, r7
   13b04:	ldrb	r3, [r4, #1]!
   13b08:	sub	r3, r3, #91	; 0x5b
   13b0c:	cmp	r3, #33	; 0x21
   13b10:	addls	pc, pc, r3, lsl #2
   13b14:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b18:	b	13598 <close_stdout@@Base+0x9c0>
   13b1c:	b	13598 <close_stdout@@Base+0x9c0>
   13b20:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b24:	b	13598 <close_stdout@@Base+0x9c0>
   13b28:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b2c:	b	13598 <close_stdout@@Base+0x9c0>
   13b30:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b34:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b38:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b3c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b40:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b44:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b48:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b4c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b50:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b54:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b58:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b5c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b60:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b64:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b68:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b6c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b70:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b74:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b78:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b7c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b80:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b84:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b88:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b8c:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b90:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b94:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b98:	b	13ba0 <close_stdout@@Base+0xfc8>
   13b9c:	b	13598 <close_stdout@@Base+0x9c0>
   13ba0:	cmp	r4, r7
   13ba4:	bne	13b04 <close_stdout@@Base+0xf2c>
   13ba8:	ldr	r0, [sp, #104]	; 0x68
   13bac:	add	r9, r9, r2
   13bb0:	bl	110e8 <iswprint@plt>
   13bb4:	cmp	r0, #0
   13bb8:	mov	r0, r5
   13bbc:	moveq	r6, #0
   13bc0:	bl	11088 <mbsinit@plt>
   13bc4:	cmp	r0, #0
   13bc8:	beq	13a9c <close_stdout@@Base+0xec4>
   13bcc:	mov	ip, r6
   13bd0:	eor	r2, ip, #1
   13bd4:	str	r9, [sp, #60]	; 0x3c
   13bd8:	ldr	r4, [sp, #92]	; 0x5c
   13bdc:	uxtb	r2, r2
   13be0:	ldr	r9, [sp, #88]	; 0x58
   13be4:	ldr	r6, [sp, #96]	; 0x60
   13be8:	ldr	r5, [sp, #100]	; 0x64
   13bec:	ldr	r3, [sp, #60]	; 0x3c
   13bf0:	cmp	r3, #1
   13bf4:	bls	13778 <close_stdout@@Base+0xba0>
   13bf8:	ldr	r0, [sp, #24]
   13bfc:	and	r2, r2, r0
   13c00:	b	13784 <close_stdout@@Base+0xbac>
   13c04:	ldr	r2, [sp, #164]	; 0xa4
   13c08:	tst	r2, #1
   13c0c:	addne	fp, fp, #1
   13c10:	bne	13140 <close_stdout@@Base+0x568>
   13c14:	b	13450 <close_stdout@@Base+0x878>
   13c18:	ldr	r0, [sp, #36]	; 0x24
   13c1c:	cmp	r0, #0
   13c20:	beq	13450 <close_stdout@@Base+0x878>
   13c24:	b	13598 <close_stdout@@Base+0x9c0>
   13c28:	ldr	r2, [sp, #32]
   13c2c:	ldrb	r3, [r2, #1]
   13c30:	adds	r3, r3, #0
   13c34:	movne	r3, #1
   13c38:	b	1356c <close_stdout@@Base+0x994>
   13c3c:	bl	112b0 <abort@plt>
   13c40:	ldr	r8, [sp, #60]	; 0x3c
   13c44:	b	13598 <close_stdout@@Base+0x9c0>
   13c48:	ldr	r0, [sp, #32]
   13c4c:	bl	111b4 <strlen@plt>
   13c50:	mov	r8, r0
   13c54:	b	13a60 <close_stdout@@Base+0xe88>
   13c58:	ldr	r2, [pc, #288]	; 13d80 <close_stdout@@Base+0x11a8>
   13c5c:	mov	r1, #1
   13c60:	mov	r9, r1
   13c64:	str	r1, [sp, #24]
   13c68:	add	r2, pc, r2
   13c6c:	str	r1, [sp, #28]
   13c70:	str	r2, [sp, #52]	; 0x34
   13c74:	b	1311c <close_stdout@@Base+0x544>
   13c78:	ldr	r2, [pc, #260]	; 13d84 <close_stdout@@Base+0x11ac>
   13c7c:	mov	r3, #1
   13c80:	mov	r9, r3
   13c84:	str	r3, [sp, #28]
   13c88:	add	r2, pc, r2
   13c8c:	str	sl, [sp, #24]
   13c90:	str	r2, [sp, #52]	; 0x34
   13c94:	b	1311c <close_stdout@@Base+0x544>
   13c98:	cmp	r8, r7
   13c9c:	str	r9, [sp, #60]	; 0x3c
   13ca0:	mov	ip, r4
   13ca4:	ldr	r6, [sp, #96]	; 0x60
   13ca8:	ldr	r9, [sp, #88]	; 0x58
   13cac:	ldr	r4, [sp, #92]	; 0x5c
   13cb0:	ldr	r5, [sp, #100]	; 0x64
   13cb4:	bls	13cec <close_stdout@@Base+0x1114>
   13cb8:	ldrb	r3, [ip]
   13cbc:	cmp	r3, #0
   13cc0:	beq	13cec <close_stdout@@Base+0x1114>
   13cc4:	ldr	r3, [sp, #60]	; 0x3c
   13cc8:	b	13cd8 <close_stdout@@Base+0x1100>
   13ccc:	ldrb	r2, [r5, r3]
   13cd0:	cmp	r2, #0
   13cd4:	beq	13ce8 <close_stdout@@Base+0x1110>
   13cd8:	add	r3, r3, #1
   13cdc:	add	r2, fp, r3
   13ce0:	cmp	r8, r2
   13ce4:	bhi	13ccc <close_stdout@@Base+0x10f4>
   13ce8:	str	r3, [sp, #60]	; 0x3c
   13cec:	mov	r2, #1
   13cf0:	b	13bec <close_stdout@@Base+0x1014>
   13cf4:	str	r9, [sp, #60]	; 0x3c
   13cf8:	mov	r2, #1
   13cfc:	ldr	r4, [sp, #92]	; 0x5c
   13d00:	ldr	r6, [sp, #96]	; 0x60
   13d04:	ldr	r9, [sp, #88]	; 0x58
   13d08:	ldr	r5, [sp, #100]	; 0x64
   13d0c:	b	13bec <close_stdout@@Base+0x1014>
   13d10:	ldr	r9, [sp, #36]	; 0x24
   13d14:	b	13938 <close_stdout@@Base+0xd60>
   13d18:	bl	110b8 <__stack_chk_fail@plt>
   13d1c:	ldr	r1, [pc, #100]	; 13d88 <close_stdout@@Base+0x11b0>
   13d20:	mov	r3, #0
   13d24:	mov	r0, #1
   13d28:	str	r3, [sp, #24]
   13d2c:	add	r1, pc, r1
   13d30:	str	r0, [sp, #28]
   13d34:	mov	r9, r3
   13d38:	str	r1, [sp, #52]	; 0x34
   13d3c:	b	1311c <close_stdout@@Base+0x544>
   13d40:	ldr	r0, [pc, #68]	; 13d8c <close_stdout@@Base+0x11b4>
   13d44:	mov	r3, #1
   13d48:	mov	r9, #0
   13d4c:	str	r3, [sp, #24]
   13d50:	add	r0, pc, r0
   13d54:	str	r3, [sp, #28]
   13d58:	str	r0, [sp, #52]	; 0x34
   13d5c:	b	1311c <close_stdout@@Base+0x544>
   13d60:	andeq	r3, r1, r4, ror pc
   13d64:	andeq	r0, r0, r4, lsl #2
   13d68:			; <UNDEFINED> instruction: 0x00002db0
   13d6c:	andeq	r2, r0, ip, lsl #27
   13d70:	andeq	r2, r0, r8, asr #26
   13d74:	andeq	r2, r0, r4, lsr #26
   13d78:	andeq	r2, r0, r8, lsr #25
   13d7c:	andeq	r2, r0, r0, asr ip
   13d80:	andeq	r2, r0, r8, lsr #19
   13d84:	andeq	r2, r0, r4, lsl #19
   13d88:	andeq	r2, r0, r0, ror #17
   13d8c:	andeq	r2, r0, r0, asr #17
   13d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d94:	sub	sp, sp, #44	; 0x2c
   13d98:	mov	r6, r0
   13d9c:	mov	r9, r1
   13da0:	mov	sl, r2
   13da4:	mov	r4, r3
   13da8:	bl	111cc <__errno_location@plt>
   13dac:	ldr	fp, [pc, #412]	; 13f50 <close_stdout@@Base+0x1378>
   13db0:	cmp	r6, #0
   13db4:	add	fp, pc, fp
   13db8:	ldr	r5, [fp]
   13dbc:	ldr	r1, [r0]
   13dc0:	mov	r8, r0
   13dc4:	str	r1, [sp, #36]	; 0x24
   13dc8:	blt	13f48 <close_stdout@@Base+0x1370>
   13dcc:	ldr	r3, [pc, #384]	; 13f54 <close_stdout@@Base+0x137c>
   13dd0:	add	r3, pc, r3
   13dd4:	ldr	r3, [r3]
   13dd8:	cmp	r6, r3
   13ddc:	bcc	13e30 <close_stdout@@Base+0x1258>
   13de0:	add	r7, r6, #1
   13de4:	cmn	r7, #-536870911	; 0xe0000001
   13de8:	bhi	13f4c <close_stdout@@Base+0x1374>
   13dec:	add	r3, fp, #4
   13df0:	cmp	r5, r3
   13df4:	beq	13f20 <close_stdout@@Base+0x1348>
   13df8:	mov	r0, r5
   13dfc:	lsl	r1, r7, #3
   13e00:	bl	14c28 <close_stdout@@Base+0x2050>
   13e04:	mov	r5, r0
   13e08:	str	r0, [fp]
   13e0c:	ldr	fp, [pc, #324]	; 13f58 <close_stdout@@Base+0x1380>
   13e10:	mov	r1, #0
   13e14:	add	fp, pc, fp
   13e18:	ldr	r0, [fp]
   13e1c:	rsb	r2, r0, r7
   13e20:	add	r0, r5, r0, lsl #3
   13e24:	lsl	r2, r2, #3
   13e28:	bl	111e4 <memset@plt>
   13e2c:	str	r7, [fp]
   13e30:	add	r2, r4, #8
   13e34:	str	r2, [sp, #32]
   13e38:	ldr	r1, [r4]
   13e3c:	add	fp, r5, r6, lsl #3
   13e40:	ldr	lr, [sp, #32]
   13e44:	mov	r2, r9
   13e48:	ldr	r3, [r4, #4]
   13e4c:	ldr	ip, [r5, r6, lsl #3]
   13e50:	ldr	r7, [fp, #4]
   13e54:	orr	r3, r3, #1
   13e58:	str	r1, [sp]
   13e5c:	str	r3, [sp, #4]
   13e60:	mov	r1, ip
   13e64:	str	lr, [sp, #8]
   13e68:	mov	r0, r7
   13e6c:	ldr	lr, [r4, #40]	; 0x28
   13e70:	str	r3, [sp, #28]
   13e74:	mov	r3, sl
   13e78:	str	lr, [sp, #12]
   13e7c:	ldr	lr, [r4, #44]	; 0x2c
   13e80:	str	ip, [sp, #24]
   13e84:	str	lr, [sp, #16]
   13e88:	bl	13068 <close_stdout@@Base+0x490>
   13e8c:	ldr	ip, [sp, #24]
   13e90:	cmp	ip, r0
   13e94:	bhi	13f0c <close_stdout@@Base+0x1334>
   13e98:	ldr	r3, [pc, #188]	; 13f5c <close_stdout@@Base+0x1384>
   13e9c:	add	r1, r0, #1
   13ea0:	str	r1, [r5, r6, lsl #3]
   13ea4:	add	r3, pc, r3
   13ea8:	cmp	r7, r3
   13eac:	beq	13ec0 <close_stdout@@Base+0x12e8>
   13eb0:	mov	r0, r7
   13eb4:	str	r1, [sp, #24]
   13eb8:	bl	11064 <free@plt>
   13ebc:	ldr	r1, [sp, #24]
   13ec0:	mov	r0, r1
   13ec4:	str	r1, [sp, #24]
   13ec8:	bl	14bd0 <close_stdout@@Base+0x1ff8>
   13ecc:	ldr	r3, [sp, #28]
   13ed0:	ldr	lr, [sp, #32]
   13ed4:	mov	r2, r9
   13ed8:	str	r0, [fp, #4]
   13edc:	mov	r7, r0
   13ee0:	ldr	ip, [r4]
   13ee4:	str	r3, [sp, #4]
   13ee8:	mov	r3, sl
   13eec:	str	lr, [sp, #8]
   13ef0:	str	ip, [sp]
   13ef4:	ldr	ip, [r4, #40]	; 0x28
   13ef8:	ldr	r1, [sp, #24]
   13efc:	str	ip, [sp, #12]
   13f00:	ldr	ip, [r4, #44]	; 0x2c
   13f04:	str	ip, [sp, #16]
   13f08:	bl	13068 <close_stdout@@Base+0x490>
   13f0c:	ldr	r1, [sp, #36]	; 0x24
   13f10:	mov	r0, r7
   13f14:	str	r1, [r8]
   13f18:	add	sp, sp, #44	; 0x2c
   13f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f20:	lsl	r1, r7, #3
   13f24:	mov	r0, #0
   13f28:	str	r3, [sp, #24]
   13f2c:	bl	14c28 <close_stdout@@Base+0x2050>
   13f30:	ldr	r3, [sp, #24]
   13f34:	mov	r5, r0
   13f38:	ldm	r3, {r0, r1}
   13f3c:	str	r5, [fp]
   13f40:	stm	r5, {r0, r1}
   13f44:	b	13e0c <close_stdout@@Base+0x1234>
   13f48:	bl	112b0 <abort@plt>
   13f4c:	bl	14de4 <close_stdout@@Base+0x220c>
   13f50:	andeq	r3, r1, ip, asr #7
   13f54:	andeq	r3, r1, ip, ror r3
   13f58:	andeq	r3, r1, r8, lsr r3
   13f5c:	andeq	r3, r1, r0, lsr #6
   13f60:	push	{r4, r5, r6, lr}
   13f64:	mov	r5, r0
   13f68:	bl	111cc <__errno_location@plt>
   13f6c:	cmp	r5, #0
   13f70:	mov	r1, #48	; 0x30
   13f74:	mov	r4, r0
   13f78:	ldr	r0, [pc, #24]	; 13f98 <close_stdout@@Base+0x13c0>
   13f7c:	ldr	r6, [r4]
   13f80:	add	r0, pc, r0
   13f84:	add	r0, r0, #256	; 0x100
   13f88:	movne	r0, r5
   13f8c:	bl	14da4 <close_stdout@@Base+0x21cc>
   13f90:	str	r6, [r4]
   13f94:	pop	{r4, r5, r6, pc}
   13f98:	andeq	r3, r1, r4, asr #4
   13f9c:	cmp	r0, #0
   13fa0:	beq	13fac <close_stdout@@Base+0x13d4>
   13fa4:	ldr	r0, [r0]
   13fa8:	bx	lr
   13fac:	ldr	r0, [pc, #12]	; 13fc0 <close_stdout@@Base+0x13e8>
   13fb0:	add	r0, pc, r0
   13fb4:	add	r0, r0, #256	; 0x100
   13fb8:	ldr	r0, [r0]
   13fbc:	bx	lr
   13fc0:	andeq	r3, r1, r4, lsl r2
   13fc4:	cmp	r0, #0
   13fc8:	beq	13fd4 <close_stdout@@Base+0x13fc>
   13fcc:	str	r1, [r0]
   13fd0:	bx	lr
   13fd4:	ldr	r0, [pc, #12]	; 13fe8 <close_stdout@@Base+0x1410>
   13fd8:	add	r0, pc, r0
   13fdc:	add	r0, r0, #256	; 0x100
   13fe0:	str	r1, [r0]
   13fe4:	bx	lr
   13fe8:	andeq	r3, r1, ip, ror #3
   13fec:	cmp	r0, #0
   13ff0:	movne	r3, r0
   13ff4:	beq	14024 <close_stdout@@Base+0x144c>
   13ff8:	lsr	ip, r1, #5
   13ffc:	and	r1, r1, #31
   14000:	add	r3, r3, ip, lsl #2
   14004:	ldr	ip, [r3, #8]
   14008:	lsr	r0, ip, r1
   1400c:	eor	r2, r0, r2
   14010:	and	r0, r0, #1
   14014:	and	r2, r2, #1
   14018:	eor	ip, ip, r2, lsl r1
   1401c:	str	ip, [r3, #8]
   14020:	bx	lr
   14024:	ldr	r3, [pc, #8]	; 14034 <close_stdout@@Base+0x145c>
   14028:	add	r3, pc, r3
   1402c:	add	r3, r3, #256	; 0x100
   14030:	b	13ff8 <close_stdout@@Base+0x1420>
   14034:	muleq	r1, ip, r1
   14038:	subs	r3, r0, #0
   1403c:	beq	1404c <close_stdout@@Base+0x1474>
   14040:	ldr	r0, [r3, #4]
   14044:	str	r1, [r3, #4]
   14048:	bx	lr
   1404c:	ldr	r3, [pc, #8]	; 1405c <close_stdout@@Base+0x1484>
   14050:	add	r3, pc, r3
   14054:	add	r3, r3, #256	; 0x100
   14058:	b	14040 <close_stdout@@Base+0x1468>
   1405c:	andeq	r3, r1, r4, ror r1
   14060:	cmp	r0, #0
   14064:	push	{r3, lr}
   14068:	beq	1408c <close_stdout@@Base+0x14b4>
   1406c:	cmp	r2, #0
   14070:	cmpne	r1, #0
   14074:	mov	r3, #8
   14078:	strne	r1, [r0, #40]	; 0x28
   1407c:	str	r3, [r0]
   14080:	strne	r2, [r0, #44]	; 0x2c
   14084:	popne	{r3, pc}
   14088:	bl	112b0 <abort@plt>
   1408c:	ldr	r0, [pc, #8]	; 1409c <close_stdout@@Base+0x14c4>
   14090:	add	r0, pc, r0
   14094:	add	r0, r0, #256	; 0x100
   14098:	b	1406c <close_stdout@@Base+0x1494>
   1409c:	andeq	r3, r1, r4, lsr r1
   140a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140a4:	sub	sp, sp, #24
   140a8:	mov	r7, r0
   140ac:	mov	sl, r1
   140b0:	ldr	r4, [sp, #56]	; 0x38
   140b4:	mov	r9, r2
   140b8:	mov	r8, r3
   140bc:	cmp	r4, #0
   140c0:	beq	14114 <close_stdout@@Base+0x153c>
   140c4:	bl	111cc <__errno_location@plt>
   140c8:	ldr	r3, [r4]
   140cc:	add	lr, r4, #8
   140d0:	mov	r1, sl
   140d4:	mov	r2, r9
   140d8:	ldr	r6, [r0]
   140dc:	mov	r5, r0
   140e0:	str	r3, [sp]
   140e4:	mov	r0, r7
   140e8:	ldr	ip, [r4, #4]
   140ec:	mov	r3, r8
   140f0:	stmib	sp, {ip, lr}
   140f4:	ldr	ip, [r4, #40]	; 0x28
   140f8:	str	ip, [sp, #12]
   140fc:	ldr	ip, [r4, #44]	; 0x2c
   14100:	str	ip, [sp, #16]
   14104:	bl	13068 <close_stdout@@Base+0x490>
   14108:	str	r6, [r5]
   1410c:	add	sp, sp, #24
   14110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14114:	ldr	r4, [pc, #8]	; 14124 <close_stdout@@Base+0x154c>
   14118:	add	r4, pc, r4
   1411c:	add	r4, r4, #256	; 0x100
   14120:	b	140c4 <close_stdout@@Base+0x14ec>
   14124:	andeq	r3, r1, ip, lsr #1
   14128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1412c:	subs	r4, r3, #0
   14130:	sub	sp, sp, #36	; 0x24
   14134:	mov	r7, r0
   14138:	mov	r6, r1
   1413c:	mov	r5, r2
   14140:	beq	141fc <close_stdout@@Base+0x1624>
   14144:	bl	111cc <__errno_location@plt>
   14148:	ldr	r3, [r4]
   1414c:	ldr	sl, [r4, #4]
   14150:	add	r9, r4, #8
   14154:	mov	r8, r0
   14158:	mov	r0, #0
   1415c:	ldr	r2, [r8]
   14160:	cmp	r5, r0
   14164:	orreq	sl, sl, #1
   14168:	str	r9, [sp, #8]
   1416c:	mov	r1, r0
   14170:	stm	sp, {r3, sl}
   14174:	mov	r3, r6
   14178:	ldr	ip, [r4, #40]	; 0x28
   1417c:	str	r2, [sp, #28]
   14180:	mov	r2, r7
   14184:	str	ip, [sp, #12]
   14188:	ldr	ip, [r4, #44]	; 0x2c
   1418c:	str	ip, [sp, #16]
   14190:	bl	13068 <close_stdout@@Base+0x490>
   14194:	add	r1, r0, #1
   14198:	mov	fp, r0
   1419c:	str	r1, [sp, #24]
   141a0:	mov	r0, r1
   141a4:	bl	14bd0 <close_stdout@@Base+0x1ff8>
   141a8:	ldr	lr, [r4]
   141ac:	str	sl, [sp, #4]
   141b0:	mov	r3, r6
   141b4:	str	r9, [sp, #8]
   141b8:	mov	r2, r7
   141bc:	str	lr, [sp]
   141c0:	ldr	lr, [r4, #40]	; 0x28
   141c4:	ldr	r1, [sp, #24]
   141c8:	str	lr, [sp, #12]
   141cc:	ldr	lr, [r4, #44]	; 0x2c
   141d0:	str	lr, [sp, #16]
   141d4:	str	r0, [sp, #24]
   141d8:	bl	13068 <close_stdout@@Base+0x490>
   141dc:	ldr	r3, [sp, #28]
   141e0:	cmp	r5, #0
   141e4:	str	r3, [r8]
   141e8:	ldr	ip, [sp, #24]
   141ec:	strne	fp, [r5]
   141f0:	mov	r0, ip
   141f4:	add	sp, sp, #36	; 0x24
   141f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141fc:	ldr	r4, [pc, #8]	; 1420c <close_stdout@@Base+0x1634>
   14200:	add	r4, pc, r4
   14204:	add	r4, r4, #256	; 0x100
   14208:	b	14144 <close_stdout@@Base+0x156c>
   1420c:	andeq	r2, r1, r4, asr #31
   14210:	mov	r3, r2
   14214:	mov	r2, #0
   14218:	b	14128 <close_stdout@@Base+0x1550>
   1421c:	ldr	r2, [pc, #152]	; 142bc <close_stdout@@Base+0x16e4>
   14220:	push	{r3, r4, r5, r6, r7, lr}
   14224:	add	r2, pc, r2
   14228:	ldr	r3, [pc, #144]	; 142c0 <close_stdout@@Base+0x16e8>
   1422c:	ldr	r6, [r2]
   14230:	add	r3, pc, r3
   14234:	cmp	r6, #1
   14238:	ldr	r7, [r3]
   1423c:	movhi	r4, #1
   14240:	movhi	r5, r7
   14244:	bls	14260 <close_stdout@@Base+0x1688>
   14248:	ldr	r0, [r5, #12]
   1424c:	add	r4, r4, #1
   14250:	bl	11064 <free@plt>
   14254:	cmp	r4, r6
   14258:	add	r5, r5, #8
   1425c:	bne	14248 <close_stdout@@Base+0x1670>
   14260:	ldr	r4, [pc, #92]	; 142c4 <close_stdout@@Base+0x16ec>
   14264:	ldr	r0, [r7, #4]
   14268:	add	r4, pc, r4
   1426c:	cmp	r0, r4
   14270:	beq	14288 <close_stdout@@Base+0x16b0>
   14274:	bl	11064 <free@plt>
   14278:	ldr	r3, [pc, #72]	; 142c8 <close_stdout@@Base+0x16f0>
   1427c:	mov	r2, #256	; 0x100
   14280:	add	r3, pc, r3
   14284:	stmib	r3, {r2, r4}
   14288:	ldr	r4, [pc, #60]	; 142cc <close_stdout@@Base+0x16f4>
   1428c:	add	r4, pc, r4
   14290:	add	r5, r4, #4
   14294:	cmp	r7, r5
   14298:	beq	142a8 <close_stdout@@Base+0x16d0>
   1429c:	mov	r0, r7
   142a0:	bl	11064 <free@plt>
   142a4:	str	r5, [r4]
   142a8:	ldr	r3, [pc, #32]	; 142d0 <close_stdout@@Base+0x16f8>
   142ac:	mov	r2, #1
   142b0:	add	r3, pc, r3
   142b4:	str	r2, [r3]
   142b8:	pop	{r3, r4, r5, r6, r7, pc}
   142bc:	andeq	r2, r1, r8, lsr #30
   142c0:	andeq	r2, r1, r0, asr pc
   142c4:	andeq	r2, r1, ip, asr pc
   142c8:	andeq	r2, r1, r0, lsl #30
   142cc:	strdeq	r2, [r1], -r4
   142d0:	muleq	r1, ip, lr
   142d4:	ldr	r3, [pc, #12]	; 142e8 <close_stdout@@Base+0x1710>
   142d8:	mvn	r2, #0
   142dc:	add	r3, pc, r3
   142e0:	add	r3, r3, #256	; 0x100
   142e4:	b	13d90 <close_stdout@@Base+0x11b8>
   142e8:	andeq	r2, r1, r8, ror #29
   142ec:	ldr	r3, [pc, #8]	; 142fc <close_stdout@@Base+0x1724>
   142f0:	add	r3, pc, r3
   142f4:	add	r3, r3, #256	; 0x100
   142f8:	b	13d90 <close_stdout@@Base+0x11b8>
   142fc:	ldrdeq	r2, [r1], -r4
   14300:	mov	r1, r0
   14304:	mov	r0, #0
   14308:	b	142d4 <close_stdout@@Base+0x16fc>
   1430c:	mov	r2, r1
   14310:	mov	r1, r0
   14314:	mov	r0, #0
   14318:	b	142ec <close_stdout@@Base+0x1714>
   1431c:	ldr	r3, [pc, #92]	; 14380 <close_stdout@@Base+0x17a8>
   14320:	ldr	ip, [pc, #92]	; 14384 <close_stdout@@Base+0x17ac>
   14324:	add	r3, pc, r3
   14328:	push	{r4, r5, r6, r7, lr}
   1432c:	sub	sp, sp, #60	; 0x3c
   14330:	ldr	r4, [r3, ip]
   14334:	add	r5, sp, #4
   14338:	mov	r7, r2
   1433c:	mov	r6, r0
   14340:	mov	r0, r5
   14344:	ldr	r3, [r4]
   14348:	str	r3, [sp, #52]	; 0x34
   1434c:	bl	12eb0 <close_stdout@@Base+0x2d8>
   14350:	mov	r3, r5
   14354:	mvn	r2, #0
   14358:	mov	r0, r6
   1435c:	mov	r1, r7
   14360:	bl	13d90 <close_stdout@@Base+0x11b8>
   14364:	ldr	r2, [sp, #52]	; 0x34
   14368:	ldr	r3, [r4]
   1436c:	cmp	r2, r3
   14370:	bne	1437c <close_stdout@@Base+0x17a4>
   14374:	add	sp, sp, #60	; 0x3c
   14378:	pop	{r4, r5, r6, r7, pc}
   1437c:	bl	110b8 <__stack_chk_fail@plt>
   14380:	ldrdeq	r2, [r1], -r4
   14384:	andeq	r0, r0, r4, lsl #2
   14388:	ldr	ip, [pc, #96]	; 143f0 <close_stdout@@Base+0x1818>
   1438c:	push	{r4, r5, r6, r7, r8, lr}
   14390:	add	ip, pc, ip
   14394:	ldr	lr, [pc, #88]	; 143f4 <close_stdout@@Base+0x181c>
   14398:	sub	sp, sp, #56	; 0x38
   1439c:	mov	r8, r3
   143a0:	add	r5, sp, #4
   143a4:	mov	r7, r2
   143a8:	mov	r6, r0
   143ac:	ldr	r4, [ip, lr]
   143b0:	mov	r0, r5
   143b4:	ldr	r3, [r4]
   143b8:	str	r3, [sp, #52]	; 0x34
   143bc:	bl	12eb0 <close_stdout@@Base+0x2d8>
   143c0:	mov	r2, r8
   143c4:	mov	r3, r5
   143c8:	mov	r0, r6
   143cc:	mov	r1, r7
   143d0:	bl	13d90 <close_stdout@@Base+0x11b8>
   143d4:	ldr	r2, [sp, #52]	; 0x34
   143d8:	ldr	r3, [r4]
   143dc:	cmp	r2, r3
   143e0:	bne	143ec <close_stdout@@Base+0x1814>
   143e4:	add	sp, sp, #56	; 0x38
   143e8:	pop	{r4, r5, r6, r7, r8, pc}
   143ec:	bl	110b8 <__stack_chk_fail@plt>
   143f0:	andeq	r2, r1, r8, ror #24
   143f4:	andeq	r0, r0, r4, lsl #2
   143f8:	mov	r2, r1
   143fc:	mov	r1, r0
   14400:	mov	r0, #0
   14404:	b	1431c <close_stdout@@Base+0x1744>
   14408:	mov	ip, r1
   1440c:	mov	r3, r2
   14410:	mov	r1, r0
   14414:	mov	r2, ip
   14418:	mov	r0, #0
   1441c:	b	14388 <close_stdout@@Base+0x17b0>
   14420:	push	{r4, r5, r6, r7, r8, lr}
   14424:	mov	r5, r2
   14428:	ldr	lr, [pc, #136]	; 144b8 <close_stdout@@Base+0x18e0>
   1442c:	mov	r7, r0
   14430:	mov	r6, r1
   14434:	ldr	r4, [pc, #128]	; 144bc <close_stdout@@Base+0x18e4>
   14438:	add	lr, pc, lr
   1443c:	sub	sp, sp, #56	; 0x38
   14440:	add	lr, lr, #256	; 0x100
   14444:	ldr	r8, [pc, #116]	; 144c0 <close_stdout@@Base+0x18e8>
   14448:	add	r4, pc, r4
   1444c:	add	ip, sp, #4
   14450:	ldm	lr!, {r0, r1, r2, r3}
   14454:	ldr	r4, [r4, r8]
   14458:	stmia	ip!, {r0, r1, r2, r3}
   1445c:	ldm	lr!, {r0, r1, r2, r3}
   14460:	ldr	r8, [r4]
   14464:	stmia	ip!, {r0, r1, r2, r3}
   14468:	ldm	lr, {r0, r1, r2, r3}
   1446c:	str	r8, [sp, #52]	; 0x34
   14470:	stm	ip, {r0, r1, r2, r3}
   14474:	mov	r1, r5
   14478:	add	r5, sp, #4
   1447c:	mov	r2, #1
   14480:	mov	r0, r5
   14484:	bl	13fec <close_stdout@@Base+0x1414>
   14488:	mov	r2, r6
   1448c:	mov	r3, r5
   14490:	mov	r1, r7
   14494:	mov	r0, #0
   14498:	bl	13d90 <close_stdout@@Base+0x11b8>
   1449c:	ldr	r2, [sp, #52]	; 0x34
   144a0:	ldr	r3, [r4]
   144a4:	cmp	r2, r3
   144a8:	bne	144b4 <close_stdout@@Base+0x18dc>
   144ac:	add	sp, sp, #56	; 0x38
   144b0:	pop	{r4, r5, r6, r7, r8, pc}
   144b4:	bl	110b8 <__stack_chk_fail@plt>
   144b8:	andeq	r2, r1, ip, lsl #27
   144bc:			; <UNDEFINED> instruction: 0x00012bb0
   144c0:	andeq	r0, r0, r4, lsl #2
   144c4:	mov	r2, r1
   144c8:	mvn	r1, #0
   144cc:	b	14420 <close_stdout@@Base+0x1848>
   144d0:	mov	r1, #58	; 0x3a
   144d4:	b	144c4 <close_stdout@@Base+0x18ec>
   144d8:	mov	r2, #58	; 0x3a
   144dc:	b	14420 <close_stdout@@Base+0x1848>
   144e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144e4:	mov	r5, r2
   144e8:	ldr	lr, [pc, #144]	; 14580 <close_stdout@@Base+0x19a8>
   144ec:	mov	r8, r0
   144f0:	mov	r9, r1
   144f4:	mov	r7, r3
   144f8:	add	lr, pc, lr
   144fc:	ldr	r4, [pc, #128]	; 14584 <close_stdout@@Base+0x19ac>
   14500:	add	lr, lr, #256	; 0x100
   14504:	sub	sp, sp, #56	; 0x38
   14508:	ldr	sl, [pc, #120]	; 14588 <close_stdout@@Base+0x19b0>
   1450c:	add	r4, pc, r4
   14510:	ldm	lr!, {r0, r1, r2, r3}
   14514:	add	ip, sp, #4
   14518:	ldr	r4, [r4, sl]
   1451c:	ldr	r6, [sp, #88]	; 0x58
   14520:	stmia	ip!, {r0, r1, r2, r3}
   14524:	ldm	lr!, {r0, r1, r2, r3}
   14528:	ldr	sl, [r4]
   1452c:	stmia	ip!, {r0, r1, r2, r3}
   14530:	ldm	lr, {r0, r1, r2, r3}
   14534:	str	sl, [sp, #52]	; 0x34
   14538:	stm	ip, {r0, r1, r2, r3}
   1453c:	mov	r2, r5
   14540:	add	r5, sp, #4
   14544:	mov	r1, r9
   14548:	mov	r0, r5
   1454c:	bl	14060 <close_stdout@@Base+0x1488>
   14550:	mov	r2, r6
   14554:	mov	r3, r5
   14558:	mov	r0, r8
   1455c:	mov	r1, r7
   14560:	bl	13d90 <close_stdout@@Base+0x11b8>
   14564:	ldr	r2, [sp, #52]	; 0x34
   14568:	ldr	r3, [r4]
   1456c:	cmp	r2, r3
   14570:	bne	1457c <close_stdout@@Base+0x19a4>
   14574:	add	sp, sp, #56	; 0x38
   14578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1457c:	bl	110b8 <__stack_chk_fail@plt>
   14580:	andeq	r2, r1, ip, asr #25
   14584:	andeq	r2, r1, ip, ror #21
   14588:	andeq	r0, r0, r4, lsl #2
   1458c:	push	{lr}		; (str lr, [sp, #-4]!)
   14590:	sub	sp, sp, #12
   14594:	mvn	ip, #0
   14598:	str	ip, [sp]
   1459c:	bl	144e0 <close_stdout@@Base+0x1908>
   145a0:	add	sp, sp, #12
   145a4:	pop	{pc}		; (ldr pc, [sp], #4)
   145a8:	mov	ip, r1
   145ac:	mov	r3, r2
   145b0:	mov	r1, r0
   145b4:	mov	r2, ip
   145b8:	mov	r0, #0
   145bc:	b	1458c <close_stdout@@Base+0x19b4>
   145c0:	push	{lr}		; (str lr, [sp, #-4]!)
   145c4:	sub	sp, sp, #12
   145c8:	mov	lr, r1
   145cc:	mov	ip, r2
   145d0:	mov	r1, r0
   145d4:	str	r3, [sp]
   145d8:	mov	r2, lr
   145dc:	mov	r3, ip
   145e0:	mov	r0, #0
   145e4:	bl	144e0 <close_stdout@@Base+0x1908>
   145e8:	add	sp, sp, #12
   145ec:	pop	{pc}		; (ldr pc, [sp], #4)
   145f0:	ldr	r3, [pc, #12]	; 14604 <close_stdout@@Base+0x1a2c>
   145f4:	ldr	ip, [pc, #12]	; 14608 <close_stdout@@Base+0x1a30>
   145f8:	add	r3, pc, r3
   145fc:	ldr	r3, [r3, ip]
   14600:	b	13d90 <close_stdout@@Base+0x11b8>
   14604:	andeq	r2, r1, r0, lsl #20
   14608:	andeq	r0, r0, r0, lsl #2
   1460c:	mov	r2, r1
   14610:	mov	r1, r0
   14614:	mov	r0, #0
   14618:	b	145f0 <close_stdout@@Base+0x1a18>
   1461c:	mvn	r2, #0
   14620:	b	145f0 <close_stdout@@Base+0x1a18>
   14624:	mov	r1, r0
   14628:	mov	r0, #0
   1462c:	b	1461c <close_stdout@@Base+0x1a44>
   14630:	push	{r4, r5, r6, r7, lr}
   14634:	cmp	r1, #0
   14638:	sub	sp, sp, #36	; 0x24
   1463c:	ldr	r7, [pc, #896]	; 149c4 <close_stdout@@Base+0x1dec>
   14640:	mov	ip, r3
   14644:	mov	r5, r0
   14648:	add	r7, pc, r7
   1464c:	ldr	r4, [sp, #56]	; 0x38
   14650:	ldr	r6, [sp, #60]	; 0x3c
   14654:	beq	14998 <close_stdout@@Base+0x1dc0>
   14658:	str	r2, [sp]
   1465c:	mov	r3, r1
   14660:	ldr	r2, [pc, #864]	; 149c8 <close_stdout@@Base+0x1df0>
   14664:	mov	r1, #1
   14668:	str	ip, [sp, #4]
   1466c:	add	r2, pc, r2
   14670:	bl	11214 <__fprintf_chk@plt>
   14674:	ldr	r1, [pc, #848]	; 149cc <close_stdout@@Base+0x1df4>
   14678:	mov	r2, #5
   1467c:	mov	r0, #0
   14680:	add	r1, pc, r1
   14684:	bl	110ac <dcgettext@plt>
   14688:	ldr	r2, [pc, #832]	; 149d0 <close_stdout@@Base+0x1df8>
   1468c:	movw	ip, #2013	; 0x7dd
   14690:	mov	r1, #1
   14694:	ldr	r2, [r7, r2]
   14698:	str	ip, [sp]
   1469c:	mov	r3, r0
   146a0:	mov	r0, r5
   146a4:	bl	11214 <__fprintf_chk@plt>
   146a8:	ldr	r1, [pc, #804]	; 149d4 <close_stdout@@Base+0x1dfc>
   146ac:	mov	r0, #0
   146b0:	mov	r2, #5
   146b4:	add	r1, pc, r1
   146b8:	bl	110ac <dcgettext@plt>
   146bc:	mov	r1, r5
   146c0:	bl	11010 <fputs_unlocked@plt>
   146c4:	cmp	r6, #9
   146c8:	addls	pc, pc, r6, lsl #2
   146cc:	b	149b4 <close_stdout@@Base+0x1ddc>
   146d0:	b	14764 <close_stdout@@Base+0x1b8c>
   146d4:	b	14768 <close_stdout@@Base+0x1b90>
   146d8:	b	14798 <close_stdout@@Base+0x1bc0>
   146dc:	b	147cc <close_stdout@@Base+0x1bf4>
   146e0:	b	14808 <close_stdout@@Base+0x1c30>
   146e4:	b	14848 <close_stdout@@Base+0x1c70>
   146e8:	b	14890 <close_stdout@@Base+0x1cb8>
   146ec:	b	148e0 <close_stdout@@Base+0x1d08>
   146f0:	b	14938 <close_stdout@@Base+0x1d60>
   146f4:	b	146f8 <close_stdout@@Base+0x1b20>
   146f8:	ldr	r1, [pc, #728]	; 149d8 <close_stdout@@Base+0x1e00>
   146fc:	mov	r0, #0
   14700:	add	r1, pc, r1
   14704:	mov	r2, #5
   14708:	bl	110ac <dcgettext@plt>
   1470c:	ldm	r4, {r3, ip}
   14710:	mov	r1, #1
   14714:	str	ip, [sp]
   14718:	ldr	ip, [r4, #8]
   1471c:	str	ip, [sp, #4]
   14720:	ldr	ip, [r4, #12]
   14724:	str	ip, [sp, #8]
   14728:	ldr	ip, [r4, #16]
   1472c:	str	ip, [sp, #12]
   14730:	ldr	ip, [r4, #20]
   14734:	str	ip, [sp, #16]
   14738:	ldr	ip, [r4, #24]
   1473c:	str	ip, [sp, #20]
   14740:	ldr	ip, [r4, #28]
   14744:	str	ip, [sp, #24]
   14748:	ldr	ip, [r4, #32]
   1474c:	str	ip, [sp, #28]
   14750:	mov	r2, r0
   14754:	mov	r0, r5
   14758:	bl	11214 <__fprintf_chk@plt>
   1475c:	add	sp, sp, #36	; 0x24
   14760:	pop	{r4, r5, r6, r7, pc}
   14764:	bl	112b0 <abort@plt>
   14768:	ldr	r1, [pc, #620]	; 149dc <close_stdout@@Base+0x1e04>
   1476c:	mov	r2, #5
   14770:	mov	r0, #0
   14774:	add	r1, pc, r1
   14778:	bl	110ac <dcgettext@plt>
   1477c:	ldr	r3, [r4]
   14780:	mov	r1, #1
   14784:	mov	r2, r0
   14788:	mov	r0, r5
   1478c:	add	sp, sp, #36	; 0x24
   14790:	pop	{r4, r5, r6, r7, lr}
   14794:	b	11214 <__fprintf_chk@plt>
   14798:	ldr	r1, [pc, #576]	; 149e0 <close_stdout@@Base+0x1e08>
   1479c:	mov	r2, #5
   147a0:	mov	r0, #0
   147a4:	add	r1, pc, r1
   147a8:	bl	110ac <dcgettext@plt>
   147ac:	ldm	r4, {r3, ip}
   147b0:	mov	r1, #1
   147b4:	str	ip, [sp, #56]	; 0x38
   147b8:	mov	r2, r0
   147bc:	mov	r0, r5
   147c0:	add	sp, sp, #36	; 0x24
   147c4:	pop	{r4, r5, r6, r7, lr}
   147c8:	b	11214 <__fprintf_chk@plt>
   147cc:	ldr	r1, [pc, #528]	; 149e4 <close_stdout@@Base+0x1e0c>
   147d0:	mov	r2, #5
   147d4:	mov	r0, #0
   147d8:	add	r1, pc, r1
   147dc:	bl	110ac <dcgettext@plt>
   147e0:	ldm	r4, {r3, ip}
   147e4:	mov	r1, #1
   147e8:	str	ip, [sp, #56]	; 0x38
   147ec:	ldr	ip, [r4, #8]
   147f0:	str	ip, [sp, #60]	; 0x3c
   147f4:	mov	r2, r0
   147f8:	mov	r0, r5
   147fc:	add	sp, sp, #36	; 0x24
   14800:	pop	{r4, r5, r6, r7, lr}
   14804:	b	11214 <__fprintf_chk@plt>
   14808:	ldr	r1, [pc, #472]	; 149e8 <close_stdout@@Base+0x1e10>
   1480c:	mov	r2, #5
   14810:	mov	r0, #0
   14814:	add	r1, pc, r1
   14818:	bl	110ac <dcgettext@plt>
   1481c:	ldm	r4, {r3, ip}
   14820:	mov	r1, #1
   14824:	str	ip, [sp]
   14828:	ldr	ip, [r4, #8]
   1482c:	str	ip, [sp, #4]
   14830:	ldr	ip, [r4, #12]
   14834:	str	ip, [sp, #8]
   14838:	mov	r2, r0
   1483c:	mov	r0, r5
   14840:	bl	11214 <__fprintf_chk@plt>
   14844:	b	1475c <close_stdout@@Base+0x1b84>
   14848:	ldr	r1, [pc, #412]	; 149ec <close_stdout@@Base+0x1e14>
   1484c:	mov	r2, #5
   14850:	mov	r0, #0
   14854:	add	r1, pc, r1
   14858:	bl	110ac <dcgettext@plt>
   1485c:	ldm	r4, {r3, ip}
   14860:	mov	r1, #1
   14864:	str	ip, [sp]
   14868:	ldr	ip, [r4, #8]
   1486c:	str	ip, [sp, #4]
   14870:	ldr	ip, [r4, #12]
   14874:	str	ip, [sp, #8]
   14878:	ldr	ip, [r4, #16]
   1487c:	str	ip, [sp, #12]
   14880:	mov	r2, r0
   14884:	mov	r0, r5
   14888:	bl	11214 <__fprintf_chk@plt>
   1488c:	b	1475c <close_stdout@@Base+0x1b84>
   14890:	ldr	r1, [pc, #344]	; 149f0 <close_stdout@@Base+0x1e18>
   14894:	mov	r2, #5
   14898:	mov	r0, #0
   1489c:	add	r1, pc, r1
   148a0:	bl	110ac <dcgettext@plt>
   148a4:	ldm	r4, {r3, ip}
   148a8:	mov	r1, #1
   148ac:	str	ip, [sp]
   148b0:	ldr	ip, [r4, #8]
   148b4:	str	ip, [sp, #4]
   148b8:	ldr	ip, [r4, #12]
   148bc:	str	ip, [sp, #8]
   148c0:	ldr	ip, [r4, #16]
   148c4:	str	ip, [sp, #12]
   148c8:	ldr	ip, [r4, #20]
   148cc:	str	ip, [sp, #16]
   148d0:	mov	r2, r0
   148d4:	mov	r0, r5
   148d8:	bl	11214 <__fprintf_chk@plt>
   148dc:	b	1475c <close_stdout@@Base+0x1b84>
   148e0:	ldr	r1, [pc, #268]	; 149f4 <close_stdout@@Base+0x1e1c>
   148e4:	mov	r2, #5
   148e8:	mov	r0, #0
   148ec:	add	r1, pc, r1
   148f0:	bl	110ac <dcgettext@plt>
   148f4:	ldm	r4, {r3, ip}
   148f8:	mov	r1, #1
   148fc:	str	ip, [sp]
   14900:	ldr	ip, [r4, #8]
   14904:	str	ip, [sp, #4]
   14908:	ldr	ip, [r4, #12]
   1490c:	str	ip, [sp, #8]
   14910:	ldr	ip, [r4, #16]
   14914:	str	ip, [sp, #12]
   14918:	ldr	ip, [r4, #20]
   1491c:	str	ip, [sp, #16]
   14920:	ldr	ip, [r4, #24]
   14924:	str	ip, [sp, #20]
   14928:	mov	r2, r0
   1492c:	mov	r0, r5
   14930:	bl	11214 <__fprintf_chk@plt>
   14934:	b	1475c <close_stdout@@Base+0x1b84>
   14938:	ldr	r1, [pc, #184]	; 149f8 <close_stdout@@Base+0x1e20>
   1493c:	mov	r2, #5
   14940:	mov	r0, #0
   14944:	add	r1, pc, r1
   14948:	bl	110ac <dcgettext@plt>
   1494c:	ldm	r4, {r3, ip}
   14950:	mov	r1, #1
   14954:	str	ip, [sp]
   14958:	ldr	ip, [r4, #8]
   1495c:	str	ip, [sp, #4]
   14960:	ldr	ip, [r4, #12]
   14964:	str	ip, [sp, #8]
   14968:	ldr	ip, [r4, #16]
   1496c:	str	ip, [sp, #12]
   14970:	ldr	ip, [r4, #20]
   14974:	str	ip, [sp, #16]
   14978:	ldr	ip, [r4, #24]
   1497c:	str	ip, [sp, #20]
   14980:	ldr	ip, [r4, #28]
   14984:	str	ip, [sp, #24]
   14988:	mov	r2, r0
   1498c:	mov	r0, r5
   14990:	bl	11214 <__fprintf_chk@plt>
   14994:	b	1475c <close_stdout@@Base+0x1b84>
   14998:	str	r3, [sp]
   1499c:	mov	r3, r2
   149a0:	ldr	r2, [pc, #84]	; 149fc <close_stdout@@Base+0x1e24>
   149a4:	mov	r1, #1
   149a8:	add	r2, pc, r2
   149ac:	bl	11214 <__fprintf_chk@plt>
   149b0:	b	14674 <close_stdout@@Base+0x1a9c>
   149b4:	ldr	r1, [pc, #68]	; 14a00 <close_stdout@@Base+0x1e28>
   149b8:	mov	r0, #0
   149bc:	add	r1, pc, r1
   149c0:	b	14704 <close_stdout@@Base+0x1b2c>
   149c4:			; <UNDEFINED> instruction: 0x000129b0
   149c8:	strdeq	r1, [r0], -r8
   149cc:	strdeq	r1, [r0], -r8
   149d0:	andeq	r0, r0, r4, lsr r1
   149d4:	andeq	r1, r0, r8, asr #31
   149d8:	andeq	r2, r0, r4, asr r1
   149dc:	ldrdeq	r1, [r0], -r4
   149e0:			; <UNDEFINED> instruction: 0x00001fb4
   149e4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   149e8:	andeq	r1, r0, r8, ror pc
   149ec:	andeq	r1, r0, r8, asr pc
   149f0:	andeq	r1, r0, r4, lsr pc
   149f4:	andeq	r1, r0, ip, lsl #30
   149f8:	andeq	r1, r0, r0, ror #29
   149fc:	andeq	r1, r0, r8, asr #25
   14a00:	andeq	r1, r0, ip, asr #29
   14a04:	push	{r4, r5, lr}
   14a08:	sub	sp, sp, #12
   14a0c:	ldr	r5, [sp, #24]
   14a10:	ldr	ip, [r5]
   14a14:	cmp	ip, #0
   14a18:	beq	14a34 <close_stdout@@Base+0x1e5c>
   14a1c:	mov	lr, r5
   14a20:	mov	ip, #0
   14a24:	ldr	r4, [lr, #4]!
   14a28:	add	ip, ip, #1
   14a2c:	cmp	r4, #0
   14a30:	bne	14a24 <close_stdout@@Base+0x1e4c>
   14a34:	stm	sp, {r5, ip}
   14a38:	bl	14630 <close_stdout@@Base+0x1a58>
   14a3c:	add	sp, sp, #12
   14a40:	pop	{r4, r5, pc}
   14a44:	push	{r4, r5, r6, r7, lr}
   14a48:	sub	sp, sp, #60	; 0x3c
   14a4c:	ldr	r4, [pc, #100]	; 14ab8 <close_stdout@@Base+0x1ee0>
   14a50:	mov	ip, #0
   14a54:	ldr	r5, [pc, #96]	; 14abc <close_stdout@@Base+0x1ee4>
   14a58:	mov	lr, ip
   14a5c:	add	r4, pc, r4
   14a60:	ldr	r6, [sp, #80]	; 0x50
   14a64:	ldr	r7, [r4, r5]
   14a68:	add	r5, sp, #12
   14a6c:	ldr	r4, [r7]
   14a70:	str	r4, [sp, #52]	; 0x34
   14a74:	ldr	r4, [r6, ip]
   14a78:	cmp	r4, #0
   14a7c:	str	r4, [r5, ip]
   14a80:	beq	14a94 <close_stdout@@Base+0x1ebc>
   14a84:	add	lr, lr, #1
   14a88:	add	ip, ip, #4
   14a8c:	cmp	lr, #10
   14a90:	bne	14a74 <close_stdout@@Base+0x1e9c>
   14a94:	stm	sp, {r5, lr}
   14a98:	bl	14630 <close_stdout@@Base+0x1a58>
   14a9c:	ldr	r2, [sp, #52]	; 0x34
   14aa0:	ldr	r3, [r7]
   14aa4:	cmp	r2, r3
   14aa8:	bne	14ab4 <close_stdout@@Base+0x1edc>
   14aac:	add	sp, sp, #60	; 0x3c
   14ab0:	pop	{r4, r5, r6, r7, pc}
   14ab4:	bl	110b8 <__stack_chk_fail@plt>
   14ab8:	muleq	r1, ip, r5
   14abc:	andeq	r0, r0, r4, lsl #2
   14ac0:	push	{r3}		; (str r3, [sp, #-4]!)
   14ac4:	push	{r4, lr}
   14ac8:	sub	sp, sp, #20
   14acc:	ldr	lr, [pc, #72]	; 14b1c <close_stdout@@Base+0x1f44>
   14ad0:	add	ip, sp, #32
   14ad4:	ldr	r4, [pc, #68]	; 14b20 <close_stdout@@Base+0x1f48>
   14ad8:	add	lr, pc, lr
   14adc:	ldr	r3, [sp, #28]
   14ae0:	ldr	r4, [lr, r4]
   14ae4:	str	ip, [sp]
   14ae8:	str	ip, [sp, #8]
   14aec:	ldr	ip, [r4]
   14af0:	str	ip, [sp, #12]
   14af4:	bl	14a44 <close_stdout@@Base+0x1e6c>
   14af8:	ldr	r2, [sp, #12]
   14afc:	ldr	r3, [r4]
   14b00:	cmp	r2, r3
   14b04:	bne	14b18 <close_stdout@@Base+0x1f40>
   14b08:	add	sp, sp, #20
   14b0c:	pop	{r4, lr}
   14b10:	add	sp, sp, #4
   14b14:	bx	lr
   14b18:	bl	110b8 <__stack_chk_fail@plt>
   14b1c:	andeq	r2, r1, r0, lsr #10
   14b20:	andeq	r0, r0, r4, lsl #2
   14b24:	ldr	r1, [pc, #132]	; 14bb0 <close_stdout@@Base+0x1fd8>
   14b28:	mov	r2, #5
   14b2c:	push	{r4, lr}
   14b30:	add	r1, pc, r1
   14b34:	mov	r0, #0
   14b38:	ldr	r4, [pc, #116]	; 14bb4 <close_stdout@@Base+0x1fdc>
   14b3c:	bl	110ac <dcgettext@plt>
   14b40:	ldr	r2, [pc, #112]	; 14bb8 <close_stdout@@Base+0x1fe0>
   14b44:	add	r4, pc, r4
   14b48:	add	r2, pc, r2
   14b4c:	mov	r1, r0
   14b50:	mov	r0, #1
   14b54:	bl	111fc <__printf_chk@plt>
   14b58:	ldr	r1, [pc, #92]	; 14bbc <close_stdout@@Base+0x1fe4>
   14b5c:	mov	r2, #5
   14b60:	mov	r0, #0
   14b64:	add	r1, pc, r1
   14b68:	bl	110ac <dcgettext@plt>
   14b6c:	ldr	r2, [pc, #76]	; 14bc0 <close_stdout@@Base+0x1fe8>
   14b70:	ldr	r3, [pc, #76]	; 14bc4 <close_stdout@@Base+0x1fec>
   14b74:	add	r2, pc, r2
   14b78:	add	r3, pc, r3
   14b7c:	mov	r1, r0
   14b80:	mov	r0, #1
   14b84:	bl	111fc <__printf_chk@plt>
   14b88:	ldr	r1, [pc, #56]	; 14bc8 <close_stdout@@Base+0x1ff0>
   14b8c:	mov	r0, #0
   14b90:	mov	r2, #5
   14b94:	add	r1, pc, r1
   14b98:	bl	110ac <dcgettext@plt>
   14b9c:	ldr	r3, [pc, #40]	; 14bcc <close_stdout@@Base+0x1ff4>
   14ba0:	ldr	r3, [r4, r3]
   14ba4:	pop	{r4, lr}
   14ba8:	ldr	r1, [r3]
   14bac:	b	11010 <fputs_unlocked@plt>
   14bb0:	muleq	r0, r4, sp
   14bb4:			; <UNDEFINED> instruction: 0x000124b4
   14bb8:	muleq	r0, r4, sp
   14bbc:	muleq	r0, r0, sp
   14bc0:	andeq	r1, r0, r0, lsr #16
   14bc4:	andeq	r1, r0, ip, lsr #16
   14bc8:	andeq	r1, r0, r4, ror sp
   14bcc:	andeq	r0, r0, r4, lsr #2
   14bd0:	push	{r4, lr}
   14bd4:	mov	r4, r0
   14bd8:	bl	11160 <malloc@plt>
   14bdc:	rsbs	r3, r0, #1
   14be0:	movcc	r3, #0
   14be4:	cmp	r4, #0
   14be8:	moveq	r3, #0
   14bec:	cmp	r3, #0
   14bf0:	popeq	{r4, pc}
   14bf4:	bl	14de4 <close_stdout@@Base+0x220c>
   14bf8:	push	{r3, r4, r5, lr}
   14bfc:	mov	r4, r0
   14c00:	mvn	r0, #0
   14c04:	mov	r5, r1
   14c08:	bl	15498 <close_stdout@@Base+0x28c0>
   14c0c:	cmp	r0, r4
   14c10:	bcc	14c20 <close_stdout@@Base+0x2048>
   14c14:	mul	r0, r4, r5
   14c18:	pop	{r3, r4, r5, lr}
   14c1c:	b	14bd0 <close_stdout@@Base+0x1ff8>
   14c20:	bl	14de4 <close_stdout@@Base+0x220c>
   14c24:	b	14bd0 <close_stdout@@Base+0x1ff8>
   14c28:	rsbs	r3, r1, #1
   14c2c:	push	{r4, lr}
   14c30:	movcc	r3, #0
   14c34:	cmp	r0, #0
   14c38:	mov	r4, r1
   14c3c:	moveq	r3, #0
   14c40:	cmp	r3, #0
   14c44:	bne	14c68 <close_stdout@@Base+0x2090>
   14c48:	bl	110c4 <realloc@plt>
   14c4c:	rsbs	r3, r0, #1
   14c50:	movcc	r3, #0
   14c54:	cmp	r4, #0
   14c58:	moveq	r3, #0
   14c5c:	cmp	r3, #0
   14c60:	popeq	{r4, pc}
   14c64:	bl	14de4 <close_stdout@@Base+0x220c>
   14c68:	bl	11064 <free@plt>
   14c6c:	mov	r0, #0
   14c70:	pop	{r4, pc}
   14c74:	push	{r4, r5, r6, lr}
   14c78:	mov	r5, r1
   14c7c:	mov	r6, r0
   14c80:	mov	r1, r2
   14c84:	mvn	r0, #0
   14c88:	mov	r4, r2
   14c8c:	bl	15498 <close_stdout@@Base+0x28c0>
   14c90:	cmp	r0, r5
   14c94:	bcc	14ca8 <close_stdout@@Base+0x20d0>
   14c98:	mov	r0, r6
   14c9c:	mul	r1, r5, r4
   14ca0:	pop	{r4, r5, r6, lr}
   14ca4:	b	14c28 <close_stdout@@Base+0x2050>
   14ca8:	bl	14de4 <close_stdout@@Base+0x220c>
   14cac:	push	{r3, r4, r5, r6, r7, lr}
   14cb0:	subs	r7, r0, #0
   14cb4:	mov	r5, r1
   14cb8:	mov	r6, r2
   14cbc:	ldr	r4, [r1]
   14cc0:	beq	14cf8 <close_stdout@@Base+0x2120>
   14cc4:	movw	r0, #43690	; 0xaaaa
   14cc8:	mov	r1, r2
   14ccc:	bfi	r0, r0, #16, #16
   14cd0:	bl	15498 <close_stdout@@Base+0x28c0>
   14cd4:	cmp	r4, r0
   14cd8:	addcc	r3, r4, #1
   14cdc:	addcc	r4, r4, r3, lsr #1
   14ce0:	bcs	14d1c <close_stdout@@Base+0x2144>
   14ce4:	str	r4, [r5]
   14ce8:	mov	r0, r7
   14cec:	mul	r1, r6, r4
   14cf0:	pop	{r3, r4, r5, r6, r7, lr}
   14cf4:	b	14c28 <close_stdout@@Base+0x2050>
   14cf8:	cmp	r4, #0
   14cfc:	bne	14ce4 <close_stdout@@Base+0x210c>
   14d00:	mov	r0, #64	; 0x40
   14d04:	mov	r1, r2
   14d08:	bl	15498 <close_stdout@@Base+0x28c0>
   14d0c:	cmp	r0, #0
   14d10:	movne	r4, r0
   14d14:	addeq	r4, r0, #1
   14d18:	b	14ce4 <close_stdout@@Base+0x210c>
   14d1c:	bl	14de4 <close_stdout@@Base+0x220c>
   14d20:	cmp	r0, #0
   14d24:	push	{r3, lr}
   14d28:	ldr	r3, [r1]
   14d2c:	beq	14d58 <close_stdout@@Base+0x2180>
   14d30:	movw	r2, #43689	; 0xaaa9
   14d34:	movt	r2, #43690	; 0xaaaa
   14d38:	cmp	r3, r2
   14d3c:	addls	r2, r3, #1
   14d40:	addls	r3, r3, r2, lsr #1
   14d44:	bhi	14d70 <close_stdout@@Base+0x2198>
   14d48:	str	r3, [r1]
   14d4c:	mov	r1, r3
   14d50:	pop	{r3, lr}
   14d54:	b	14c28 <close_stdout@@Base+0x2050>
   14d58:	cmp	r3, #0
   14d5c:	moveq	r3, #64	; 0x40
   14d60:	str	r3, [r1]
   14d64:	mov	r1, r3
   14d68:	pop	{r3, lr}
   14d6c:	b	14c28 <close_stdout@@Base+0x2050>
   14d70:	bl	14de4 <close_stdout@@Base+0x220c>
   14d74:	push	{r4, lr}
   14d78:	mov	r4, r0
   14d7c:	bl	14bd0 <close_stdout@@Base+0x1ff8>
   14d80:	mov	r2, r4
   14d84:	mov	r1, #0
   14d88:	pop	{r4, lr}
   14d8c:	b	111e4 <memset@plt>
   14d90:	push	{r3, lr}
   14d94:	bl	11004 <calloc@plt>
   14d98:	cmp	r0, #0
   14d9c:	popne	{r3, pc}
   14da0:	bl	14de4 <close_stdout@@Base+0x220c>
   14da4:	push	{r3, r4, r5, lr}
   14da8:	mov	r4, r1
   14dac:	mov	r5, r0
   14db0:	mov	r0, r1
   14db4:	bl	14bd0 <close_stdout@@Base+0x1ff8>
   14db8:	mov	r1, r5
   14dbc:	mov	r2, r4
   14dc0:	pop	{r3, r4, r5, lr}
   14dc4:	b	1107c <memcpy@plt>
   14dc8:	push	{r4, lr}
   14dcc:	mov	r4, r0
   14dd0:	bl	111b4 <strlen@plt>
   14dd4:	add	r1, r0, #1
   14dd8:	mov	r0, r4
   14ddc:	pop	{r4, lr}
   14de0:	b	14da4 <close_stdout@@Base+0x21cc>
   14de4:	ldr	r3, [pc, #64]	; 14e2c <close_stdout@@Base+0x2254>
   14de8:	mov	r2, #5
   14dec:	ldr	ip, [pc, #60]	; 14e30 <close_stdout@@Base+0x2258>
   14df0:	mov	r0, #0
   14df4:	add	r3, pc, r3
   14df8:	ldr	r1, [pc, #52]	; 14e34 <close_stdout@@Base+0x225c>
   14dfc:	push	{r4, lr}
   14e00:	add	r1, pc, r1
   14e04:	ldr	r3, [r3, ip]
   14e08:	ldr	r4, [r3]
   14e0c:	bl	110ac <dcgettext@plt>
   14e10:	ldr	r2, [pc, #32]	; 14e38 <close_stdout@@Base+0x2260>
   14e14:	mov	r1, #0
   14e18:	add	r2, pc, r2
   14e1c:	mov	r3, r0
   14e20:	mov	r0, r4
   14e24:	bl	1113c <error@plt>
   14e28:	bl	112b0 <abort@plt>
   14e2c:	andeq	r2, r1, r4, lsl #4
   14e30:	andeq	r0, r0, r8, lsr #2
   14e34:	andeq	r1, r0, r8, ror fp
   14e38:	andeq	r1, r0, r0, lsl #13
   14e3c:	push	{r3, lr}
   14e40:	bl	110dc <__strndup@plt>
   14e44:	cmp	r0, #0
   14e48:	popne	{r3, pc}
   14e4c:	bl	14de4 <close_stdout@@Base+0x220c>
   14e50:	push	{r4, r5, r6, lr}
   14e54:	sub	sp, sp, #8
   14e58:	mov	r4, r0
   14e5c:	bl	11208 <fileno@plt>
   14e60:	cmp	r0, #0
   14e64:	mov	r0, r4
   14e68:	blt	14ee4 <close_stdout@@Base+0x230c>
   14e6c:	bl	11178 <__freading@plt>
   14e70:	cmp	r0, #0
   14e74:	bne	14eb0 <close_stdout@@Base+0x22d8>
   14e78:	mov	r0, r4
   14e7c:	bl	14ef0 <close_stdout@@Base+0x2318>
   14e80:	cmp	r0, #0
   14e84:	beq	14ee0 <close_stdout@@Base+0x2308>
   14e88:	bl	111cc <__errno_location@plt>
   14e8c:	ldr	r6, [r0]
   14e90:	mov	r5, r0
   14e94:	mov	r0, r4
   14e98:	bl	11220 <fclose@plt>
   14e9c:	cmp	r6, #0
   14ea0:	mvnne	r0, #0
   14ea4:	strne	r6, [r5]
   14ea8:	add	sp, sp, #8
   14eac:	pop	{r4, r5, r6, pc}
   14eb0:	mov	r0, r4
   14eb4:	bl	11208 <fileno@plt>
   14eb8:	mov	r1, #1
   14ebc:	mov	r2, #0
   14ec0:	mov	r3, #0
   14ec4:	str	r1, [sp]
   14ec8:	bl	11100 <lseek64@plt>
   14ecc:	mvn	r2, #0
   14ed0:	mvn	r3, #0
   14ed4:	cmp	r1, r3
   14ed8:	cmpeq	r0, r2
   14edc:	bne	14e78 <close_stdout@@Base+0x22a0>
   14ee0:	mov	r0, r4
   14ee4:	add	sp, sp, #8
   14ee8:	pop	{r4, r5, r6, lr}
   14eec:	b	11220 <fclose@plt>
   14ef0:	push	{r4, lr}
   14ef4:	subs	r4, r0, #0
   14ef8:	sub	sp, sp, #8
   14efc:	beq	14f0c <close_stdout@@Base+0x2334>
   14f00:	bl	11178 <__freading@plt>
   14f04:	cmp	r0, #0
   14f08:	bne	14f1c <close_stdout@@Base+0x2344>
   14f0c:	mov	r0, r4
   14f10:	add	sp, sp, #8
   14f14:	pop	{r4, lr}
   14f18:	b	11040 <fflush@plt>
   14f1c:	ldr	r3, [r4]
   14f20:	tst	r3, #256	; 0x100
   14f24:	beq	14f0c <close_stdout@@Base+0x2334>
   14f28:	mov	r3, #1
   14f2c:	mov	r0, r4
   14f30:	str	r3, [sp]
   14f34:	mov	r2, #0
   14f38:	mov	r3, #0
   14f3c:	bl	14f50 <close_stdout@@Base+0x2378>
   14f40:	mov	r0, r4
   14f44:	add	sp, sp, #8
   14f48:	pop	{r4, lr}
   14f4c:	b	11040 <fflush@plt>
   14f50:	push	{r4, r5, r6, r7, lr}
   14f54:	sub	sp, sp, #20
   14f58:	ldmib	r0, {r1, ip}
   14f5c:	mov	r6, r0
   14f60:	ldr	r4, [sp, #40]	; 0x28
   14f64:	cmp	ip, r1
   14f68:	beq	14f80 <close_stdout@@Base+0x23a8>
   14f6c:	str	r4, [sp, #40]	; 0x28
   14f70:	mov	r0, r6
   14f74:	add	sp, sp, #20
   14f78:	pop	{r4, r5, r6, r7, lr}
   14f7c:	b	1122c <fseeko64@plt>
   14f80:	ldr	ip, [r0, #20]
   14f84:	ldr	r1, [r0, #16]
   14f88:	cmp	ip, r1
   14f8c:	bne	14f6c <close_stdout@@Base+0x2394>
   14f90:	ldr	r7, [r0, #36]	; 0x24
   14f94:	cmp	r7, #0
   14f98:	bne	14f6c <close_stdout@@Base+0x2394>
   14f9c:	str	r2, [sp, #12]
   14fa0:	mvn	r5, #0
   14fa4:	str	r3, [sp, #8]
   14fa8:	bl	11208 <fileno@plt>
   14fac:	str	r4, [sp]
   14fb0:	mvn	r4, #0
   14fb4:	ldr	r2, [sp, #12]
   14fb8:	ldr	r3, [sp, #8]
   14fbc:	bl	11100 <lseek64@plt>
   14fc0:	mov	r2, r0
   14fc4:	mov	r3, r1
   14fc8:	cmp	r3, r5
   14fcc:	cmpeq	r2, r4
   14fd0:	beq	14ff0 <close_stdout@@Base+0x2418>
   14fd4:	ldr	r1, [r6]
   14fd8:	mov	r0, r7
   14fdc:	strd	r2, [r6, #80]	; 0x50
   14fe0:	bic	r3, r1, #16
   14fe4:	str	r3, [r6]
   14fe8:	add	sp, sp, #20
   14fec:	pop	{r4, r5, r6, r7, pc}
   14ff0:	mvn	r0, #0
   14ff4:	b	14fe8 <close_stdout@@Base+0x2410>
   14ff8:	push	{r4, r5, r6, lr}
   14ffc:	mov	r4, r0
   15000:	bl	11124 <__fpending@plt>
   15004:	mov	r6, r0
   15008:	mov	r0, r4
   1500c:	ldr	r4, [r4]
   15010:	bl	14e50 <close_stdout@@Base+0x2278>
   15014:	and	r4, r4, #32
   15018:	adds	r5, r0, #0
   1501c:	movne	r5, #1
   15020:	cmp	r4, #0
   15024:	bne	15044 <close_stdout@@Base+0x246c>
   15028:	cmp	r5, #0
   1502c:	beq	1503c <close_stdout@@Base+0x2464>
   15030:	cmp	r6, #0
   15034:	beq	15060 <close_stdout@@Base+0x2488>
   15038:	mvn	r4, #0
   1503c:	mov	r0, r4
   15040:	pop	{r4, r5, r6, pc}
   15044:	cmp	r5, #0
   15048:	bne	15038 <close_stdout@@Base+0x2460>
   1504c:	bl	111cc <__errno_location@plt>
   15050:	mvn	r4, #0
   15054:	str	r5, [r0]
   15058:	mov	r0, r4
   1505c:	pop	{r4, r5, r6, pc}
   15060:	bl	111cc <__errno_location@plt>
   15064:	ldr	r4, [r0]
   15068:	subs	r4, r4, #9
   1506c:	mvnne	r4, #0
   15070:	mov	r0, r4
   15074:	pop	{r4, r5, r6, pc}
   15078:	ldr	r3, [pc, #984]	; 15458 <close_stdout@@Base+0x2880>
   1507c:	mov	r0, #14
   15080:	ldr	r2, [pc, #980]	; 1545c <close_stdout@@Base+0x2884>
   15084:	add	r3, pc, r3
   15088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1508c:	sub	sp, sp, #132	; 0x84
   15090:	ldr	r6, [r3, r2]
   15094:	ldr	r3, [r6]
   15098:	str	r3, [sp, #124]	; 0x7c
   1509c:	bl	11268 <nl_langinfo@plt>
   150a0:	subs	r5, r0, #0
   150a4:	beq	15158 <close_stdout@@Base+0x2580>
   150a8:	ldr	r3, [pc, #944]	; 15460 <close_stdout@@Base+0x2888>
   150ac:	ldr	r4, [pc, r3]
   150b0:	cmp	r4, #0
   150b4:	beq	15164 <close_stdout@@Base+0x258c>
   150b8:	ldrb	r7, [r4]
   150bc:	cmp	r7, #0
   150c0:	bne	150f4 <close_stdout@@Base+0x251c>
   150c4:	b	1512c <close_stdout@@Base+0x2554>
   150c8:	mov	r0, r4
   150cc:	bl	111b4 <strlen@plt>
   150d0:	add	r0, r0, #1
   150d4:	add	r7, r4, r0
   150d8:	mov	r0, r7
   150dc:	bl	111b4 <strlen@plt>
   150e0:	add	r0, r0, #1
   150e4:	add	r4, r7, r0
   150e8:	ldrb	r7, [r7, r0]
   150ec:	cmp	r7, #0
   150f0:	beq	1512c <close_stdout@@Base+0x2554>
   150f4:	mov	r0, r5
   150f8:	mov	r1, r4
   150fc:	bl	11028 <strcmp@plt>
   15100:	cmp	r0, #0
   15104:	beq	1511c <close_stdout@@Base+0x2544>
   15108:	cmp	r7, #42	; 0x2a
   1510c:	bne	150c8 <close_stdout@@Base+0x24f0>
   15110:	ldrb	r3, [r4, #1]
   15114:	cmp	r3, #0
   15118:	bne	150c8 <close_stdout@@Base+0x24f0>
   1511c:	mov	r0, r4
   15120:	bl	111b4 <strlen@plt>
   15124:	add	r0, r0, #1
   15128:	add	r5, r4, r0
   1512c:	ldrb	r3, [r5]
   15130:	cmp	r3, #0
   15134:	ldreq	r5, [pc, #808]	; 15464 <close_stdout@@Base+0x288c>
   15138:	addeq	r5, pc, r5
   1513c:	ldr	r2, [sp, #124]	; 0x7c
   15140:	mov	r0, r5
   15144:	ldr	r3, [r6]
   15148:	cmp	r2, r3
   1514c:	bne	1542c <close_stdout@@Base+0x2854>
   15150:	add	sp, sp, #132	; 0x84
   15154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15158:	ldr	r5, [pc, #776]	; 15468 <close_stdout@@Base+0x2890>
   1515c:	add	r5, pc, r5
   15160:	b	150a8 <close_stdout@@Base+0x24d0>
   15164:	ldr	r0, [pc, #768]	; 1546c <close_stdout@@Base+0x2894>
   15168:	add	r0, pc, r0
   1516c:	bl	11154 <getenv@plt>
   15170:	subs	r8, r0, #0
   15174:	beq	15404 <close_stdout@@Base+0x282c>
   15178:	ldrb	r3, [r8]
   1517c:	cmp	r3, #0
   15180:	beq	15398 <close_stdout@@Base+0x27c0>
   15184:	bl	111b4 <strlen@plt>
   15188:	subs	sl, r0, #0
   1518c:	subne	r3, sl, #1
   15190:	bne	153a8 <close_stdout@@Base+0x27d0>
   15194:	mov	r9, #0
   15198:	mov	fp, r9
   1519c:	add	r9, sl, r9
   151a0:	add	r0, r9, #14
   151a4:	bl	11160 <malloc@plt>
   151a8:	subs	r7, r0, #0
   151ac:	beq	153f8 <close_stdout@@Base+0x2820>
   151b0:	mov	r1, r8
   151b4:	mov	r2, sl
   151b8:	bl	1107c <memcpy@plt>
   151bc:	cmp	fp, #0
   151c0:	add	ip, r7, r9
   151c4:	movne	r3, #47	; 0x2f
   151c8:	strbne	r3, [r7, sl]
   151cc:	ldr	r3, [pc, #668]	; 15470 <close_stdout@@Base+0x2898>
   151d0:	add	r3, pc, r3
   151d4:	ldm	r3!, {r0, r1, r2}
   151d8:	ldrh	r3, [r3]
   151dc:	str	r0, [r7, r9]
   151e0:	mov	r0, r7
   151e4:	str	r1, [ip, #4]
   151e8:	mov	r1, #32768	; 0x8000
   151ec:	strh	r3, [ip, #12]
   151f0:	str	r2, [ip, #8]
   151f4:	bl	11148 <open64@plt>
   151f8:	subs	r8, r0, #0
   151fc:	blt	153c0 <close_stdout@@Base+0x27e8>
   15200:	ldr	r1, [pc, #620]	; 15474 <close_stdout@@Base+0x289c>
   15204:	add	r1, pc, r1
   15208:	bl	10ff8 <fdopen@plt>
   1520c:	subs	fp, r0, #0
   15210:	beq	15418 <close_stdout@@Base+0x2840>
   15214:	ldr	r0, [pc, #604]	; 15478 <close_stdout@@Base+0x28a0>
   15218:	add	sl, sp, #20
   1521c:	add	r9, sp, #72	; 0x48
   15220:	mov	r8, #0
   15224:	add	r0, pc, r0
   15228:	str	r0, [sp, #12]
   1522c:	ldr	r3, [fp, #4]
   15230:	ldr	r2, [fp, #8]
   15234:	cmp	r3, r2
   15238:	bcs	15324 <close_stdout@@Base+0x274c>
   1523c:	add	r2, r3, #1
   15240:	str	r2, [fp, #4]
   15244:	ldrb	r0, [r3]
   15248:	cmp	r0, #32
   1524c:	beq	1522c <close_stdout@@Base+0x2654>
   15250:	sub	r3, r0, #9
   15254:	cmp	r3, #1
   15258:	bls	1522c <close_stdout@@Base+0x2654>
   1525c:	cmp	r0, #35	; 0x23
   15260:	beq	15338 <close_stdout@@Base+0x2760>
   15264:	mov	r1, fp
   15268:	bl	111c0 <ungetc@plt>
   1526c:	mov	r0, fp
   15270:	ldr	r1, [sp, #12]
   15274:	mov	r2, sl
   15278:	mov	r3, r9
   1527c:	bl	111f0 <fscanf@plt>
   15280:	cmp	r0, #1
   15284:	ble	15368 <close_stdout@@Base+0x2790>
   15288:	mov	r0, sl
   1528c:	bl	111b4 <strlen@plt>
   15290:	str	r0, [sp, #8]
   15294:	mov	r0, r9
   15298:	bl	111b4 <strlen@plt>
   1529c:	cmp	r8, #0
   152a0:	mov	r2, r0
   152a4:	bne	153cc <close_stdout@@Base+0x27f4>
   152a8:	ldr	r3, [sp, #8]
   152ac:	str	r2, [sp]
   152b0:	add	r8, r0, r3
   152b4:	add	r0, r8, #3
   152b8:	add	r8, r8, #2
   152bc:	bl	11160 <malloc@plt>
   152c0:	ldr	r2, [sp]
   152c4:	mov	r3, r0
   152c8:	cmp	r3, #0
   152cc:	beq	15430 <close_stdout@@Base+0x2858>
   152d0:	ldr	r0, [sp, #8]
   152d4:	movw	r1, #65534	; 0xfffe
   152d8:	movt	r1, #65535	; 0xffff
   152dc:	rsb	r2, r2, r8
   152e0:	rsb	r1, r0, r1
   152e4:	stm	sp, {r2, r3}
   152e8:	add	r0, r1, r2
   152ec:	mov	r1, sl
   152f0:	add	r0, r3, r0
   152f4:	mov	r4, r3
   152f8:	bl	11118 <strcpy@plt>
   152fc:	ldr	r2, [sp]
   15300:	ldr	r3, [sp, #4]
   15304:	mov	r1, r9
   15308:	sub	r0, r2, #1
   1530c:	add	r0, r3, r0
   15310:	bl	11118 <strcpy@plt>
   15314:	ldr	r3, [fp, #4]
   15318:	ldr	r2, [fp, #8]
   1531c:	cmp	r3, r2
   15320:	bcc	1523c <close_stdout@@Base+0x2664>
   15324:	mov	r0, fp
   15328:	bl	11238 <__uflow@plt>
   1532c:	cmn	r0, #1
   15330:	beq	15368 <close_stdout@@Base+0x2790>
   15334:	b	15248 <close_stdout@@Base+0x2670>
   15338:	ldr	r3, [fp, #4]
   1533c:	ldr	r2, [fp, #8]
   15340:	cmp	r3, r2
   15344:	bcs	1544c <close_stdout@@Base+0x2874>
   15348:	add	r2, r3, #1
   1534c:	str	r2, [fp, #4]
   15350:	ldrb	r0, [r3]
   15354:	cmp	r0, #10
   15358:	cmnne	r0, #1
   1535c:	bne	15338 <close_stdout@@Base+0x2760>
   15360:	cmn	r0, #1
   15364:	bne	1522c <close_stdout@@Base+0x2654>
   15368:	mov	r0, fp
   1536c:	bl	14e50 <close_stdout@@Base+0x2278>
   15370:	cmp	r8, #0
   15374:	beq	153c0 <close_stdout@@Base+0x27e8>
   15378:	mov	r3, #0
   1537c:	strb	r3, [r4, r8]
   15380:	mov	r0, r7
   15384:	bl	11064 <free@plt>
   15388:	ldr	r3, [pc, #236]	; 1547c <close_stdout@@Base+0x28a4>
   1538c:	add	r3, pc, r3
   15390:	str	r4, [r3]
   15394:	b	150b8 <close_stdout@@Base+0x24e0>
   15398:	ldr	r8, [pc, #224]	; 15480 <close_stdout@@Base+0x28a8>
   1539c:	mov	r3, #7
   153a0:	mov	sl, #8
   153a4:	add	r8, pc, r8
   153a8:	ldrb	r3, [r8, r3]
   153ac:	cmp	r3, #47	; 0x2f
   153b0:	movne	r9, #1
   153b4:	movne	fp, r9
   153b8:	bne	1519c <close_stdout@@Base+0x25c4>
   153bc:	b	15194 <close_stdout@@Base+0x25bc>
   153c0:	ldr	r4, [pc, #188]	; 15484 <close_stdout@@Base+0x28ac>
   153c4:	add	r4, pc, r4
   153c8:	b	15380 <close_stdout@@Base+0x27a8>
   153cc:	ldr	r0, [sp, #8]
   153d0:	str	r2, [sp]
   153d4:	add	r3, r0, r2
   153d8:	mov	r0, r4
   153dc:	add	r8, r3, r8
   153e0:	add	r1, r8, #3
   153e4:	add	r8, r8, #2
   153e8:	bl	110c4 <realloc@plt>
   153ec:	ldr	r2, [sp]
   153f0:	mov	r3, r0
   153f4:	b	152c8 <close_stdout@@Base+0x26f0>
   153f8:	ldr	r4, [pc, #136]	; 15488 <close_stdout@@Base+0x28b0>
   153fc:	add	r4, pc, r4
   15400:	b	15388 <close_stdout@@Base+0x27b0>
   15404:	ldr	r8, [pc, #128]	; 1548c <close_stdout@@Base+0x28b4>
   15408:	mov	r3, #7
   1540c:	mov	sl, #8
   15410:	add	r8, pc, r8
   15414:	b	153a8 <close_stdout@@Base+0x27d0>
   15418:	ldr	r4, [pc, #112]	; 15490 <close_stdout@@Base+0x28b8>
   1541c:	mov	r0, r8
   15420:	add	r4, pc, r4
   15424:	bl	112bc <close@plt>
   15428:	b	15380 <close_stdout@@Base+0x27a8>
   1542c:	bl	110b8 <__stack_chk_fail@plt>
   15430:	mov	r0, r4
   15434:	ldr	r4, [pc, #88]	; 15494 <close_stdout@@Base+0x28bc>
   15438:	bl	11064 <free@plt>
   1543c:	mov	r0, fp
   15440:	add	r4, pc, r4
   15444:	bl	14e50 <close_stdout@@Base+0x2278>
   15448:	b	15380 <close_stdout@@Base+0x27a8>
   1544c:	mov	r0, fp
   15450:	bl	11238 <__uflow@plt>
   15454:	b	15354 <close_stdout@@Base+0x277c>
   15458:	andeq	r1, r1, r4, ror pc
   1545c:	andeq	r0, r0, r4, lsl #2
   15460:	andeq	r2, r1, r8, asr #4
   15464:	andeq	r1, r0, r0, ror #16
   15468:	strdeq	r1, [r0], -ip
   1546c:	andeq	r1, r0, r8, lsr r8
   15470:	andeq	r1, r0, r0, ror #15
   15474:	ldrdeq	r0, [r0], -r4
   15478:	muleq	r0, ip, r7
   1547c:	andeq	r1, r1, r8, ror #30
   15480:	andeq	r1, r0, r8, ror #11
   15484:	muleq	r0, r4, r0
   15488:	andeq	r1, r0, ip, asr r0
   1548c:	andeq	r1, r0, ip, ror r5
   15490:	andeq	r1, r0, r8, lsr r0
   15494:	andeq	r1, r0, r8, lsl r0
   15498:	subs	r2, r1, #1
   1549c:	bxeq	lr
   154a0:	bcc	15678 <close_stdout@@Base+0x2aa0>
   154a4:	cmp	r0, r1
   154a8:	bls	1565c <close_stdout@@Base+0x2a84>
   154ac:	tst	r1, r2
   154b0:	beq	15668 <close_stdout@@Base+0x2a90>
   154b4:	clz	r3, r0
   154b8:	clz	r2, r1
   154bc:	sub	r3, r2, r3
   154c0:	rsbs	r3, r3, #31
   154c4:	addne	r3, r3, r3, lsl #1
   154c8:	mov	r2, #0
   154cc:	addne	pc, pc, r3, lsl #2
   154d0:	nop	{0}
   154d4:	cmp	r0, r1, lsl #31
   154d8:	adc	r2, r2, r2
   154dc:	subcs	r0, r0, r1, lsl #31
   154e0:	cmp	r0, r1, lsl #30
   154e4:	adc	r2, r2, r2
   154e8:	subcs	r0, r0, r1, lsl #30
   154ec:	cmp	r0, r1, lsl #29
   154f0:	adc	r2, r2, r2
   154f4:	subcs	r0, r0, r1, lsl #29
   154f8:	cmp	r0, r1, lsl #28
   154fc:	adc	r2, r2, r2
   15500:	subcs	r0, r0, r1, lsl #28
   15504:	cmp	r0, r1, lsl #27
   15508:	adc	r2, r2, r2
   1550c:	subcs	r0, r0, r1, lsl #27
   15510:	cmp	r0, r1, lsl #26
   15514:	adc	r2, r2, r2
   15518:	subcs	r0, r0, r1, lsl #26
   1551c:	cmp	r0, r1, lsl #25
   15520:	adc	r2, r2, r2
   15524:	subcs	r0, r0, r1, lsl #25
   15528:	cmp	r0, r1, lsl #24
   1552c:	adc	r2, r2, r2
   15530:	subcs	r0, r0, r1, lsl #24
   15534:	cmp	r0, r1, lsl #23
   15538:	adc	r2, r2, r2
   1553c:	subcs	r0, r0, r1, lsl #23
   15540:	cmp	r0, r1, lsl #22
   15544:	adc	r2, r2, r2
   15548:	subcs	r0, r0, r1, lsl #22
   1554c:	cmp	r0, r1, lsl #21
   15550:	adc	r2, r2, r2
   15554:	subcs	r0, r0, r1, lsl #21
   15558:	cmp	r0, r1, lsl #20
   1555c:	adc	r2, r2, r2
   15560:	subcs	r0, r0, r1, lsl #20
   15564:	cmp	r0, r1, lsl #19
   15568:	adc	r2, r2, r2
   1556c:	subcs	r0, r0, r1, lsl #19
   15570:	cmp	r0, r1, lsl #18
   15574:	adc	r2, r2, r2
   15578:	subcs	r0, r0, r1, lsl #18
   1557c:	cmp	r0, r1, lsl #17
   15580:	adc	r2, r2, r2
   15584:	subcs	r0, r0, r1, lsl #17
   15588:	cmp	r0, r1, lsl #16
   1558c:	adc	r2, r2, r2
   15590:	subcs	r0, r0, r1, lsl #16
   15594:	cmp	r0, r1, lsl #15
   15598:	adc	r2, r2, r2
   1559c:	subcs	r0, r0, r1, lsl #15
   155a0:	cmp	r0, r1, lsl #14
   155a4:	adc	r2, r2, r2
   155a8:	subcs	r0, r0, r1, lsl #14
   155ac:	cmp	r0, r1, lsl #13
   155b0:	adc	r2, r2, r2
   155b4:	subcs	r0, r0, r1, lsl #13
   155b8:	cmp	r0, r1, lsl #12
   155bc:	adc	r2, r2, r2
   155c0:	subcs	r0, r0, r1, lsl #12
   155c4:	cmp	r0, r1, lsl #11
   155c8:	adc	r2, r2, r2
   155cc:	subcs	r0, r0, r1, lsl #11
   155d0:	cmp	r0, r1, lsl #10
   155d4:	adc	r2, r2, r2
   155d8:	subcs	r0, r0, r1, lsl #10
   155dc:	cmp	r0, r1, lsl #9
   155e0:	adc	r2, r2, r2
   155e4:	subcs	r0, r0, r1, lsl #9
   155e8:	cmp	r0, r1, lsl #8
   155ec:	adc	r2, r2, r2
   155f0:	subcs	r0, r0, r1, lsl #8
   155f4:	cmp	r0, r1, lsl #7
   155f8:	adc	r2, r2, r2
   155fc:	subcs	r0, r0, r1, lsl #7
   15600:	cmp	r0, r1, lsl #6
   15604:	adc	r2, r2, r2
   15608:	subcs	r0, r0, r1, lsl #6
   1560c:	cmp	r0, r1, lsl #5
   15610:	adc	r2, r2, r2
   15614:	subcs	r0, r0, r1, lsl #5
   15618:	cmp	r0, r1, lsl #4
   1561c:	adc	r2, r2, r2
   15620:	subcs	r0, r0, r1, lsl #4
   15624:	cmp	r0, r1, lsl #3
   15628:	adc	r2, r2, r2
   1562c:	subcs	r0, r0, r1, lsl #3
   15630:	cmp	r0, r1, lsl #2
   15634:	adc	r2, r2, r2
   15638:	subcs	r0, r0, r1, lsl #2
   1563c:	cmp	r0, r1, lsl #1
   15640:	adc	r2, r2, r2
   15644:	subcs	r0, r0, r1, lsl #1
   15648:	cmp	r0, r1
   1564c:	adc	r2, r2, r2
   15650:	subcs	r0, r0, r1
   15654:	mov	r0, r2
   15658:	bx	lr
   1565c:	moveq	r0, #1
   15660:	movne	r0, #0
   15664:	bx	lr
   15668:	clz	r2, r1
   1566c:	rsb	r2, r2, #31
   15670:	lsr	r0, r0, r2
   15674:	bx	lr
   15678:	cmp	r0, #0
   1567c:	mvnne	r0, #0
   15680:	b	156e0 <close_stdout@@Base+0x2b08>
   15684:	cmp	r1, #0
   15688:	beq	15678 <close_stdout@@Base+0x2aa0>
   1568c:	push	{r0, r1, lr}
   15690:	bl	15498 <close_stdout@@Base+0x28c0>
   15694:	pop	{r1, r2, lr}
   15698:	mul	r3, r2, r0
   1569c:	sub	r1, r1, r3
   156a0:	bx	lr
   156a4:	cmp	r3, #0
   156a8:	cmpeq	r2, #0
   156ac:	bne	156c4 <close_stdout@@Base+0x2aec>
   156b0:	cmp	r1, #0
   156b4:	cmpeq	r0, #0
   156b8:	mvnne	r1, #0
   156bc:	mvnne	r0, #0
   156c0:	b	156e0 <close_stdout@@Base+0x2b08>
   156c4:	sub	sp, sp, #8
   156c8:	push	{sp, lr}
   156cc:	bl	1572c <close_stdout@@Base+0x2b54>
   156d0:	ldr	lr, [sp, #4]
   156d4:	add	sp, sp, #8
   156d8:	pop	{r2, r3}
   156dc:	bx	lr
   156e0:	push	{r1, lr}
   156e4:	mov	r0, #8
   156e8:	bl	1101c <raise@plt>
   156ec:	pop	{r1, pc}
   156f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156f4:	mov	r8, r2
   156f8:	mov	r6, r0
   156fc:	mov	r7, r1
   15700:	mov	sl, r3
   15704:	ldr	r9, [sp, #32]
   15708:	bl	15768 <close_stdout@@Base+0x2b90>
   1570c:	umull	r4, r5, r8, r0
   15710:	mul	r8, r8, r1
   15714:	mla	r2, r0, sl, r8
   15718:	add	r5, r2, r5
   1571c:	subs	r4, r6, r4
   15720:	sbc	r5, r7, r5
   15724:	strd	r4, [r9]
   15728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1572c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15730:	mov	r8, r2
   15734:	mov	r6, r0
   15738:	mov	r7, r1
   1573c:	mov	r5, r3
   15740:	ldr	r9, [sp, #32]
   15744:	bl	15bf4 <close_stdout@@Base+0x301c>
   15748:	mul	r3, r0, r5
   1574c:	umull	r4, r5, r0, r8
   15750:	mla	r8, r8, r1, r3
   15754:	add	r5, r8, r5
   15758:	subs	r4, r6, r4
   1575c:	sbc	r5, r7, r5
   15760:	strd	r4, [r9]
   15764:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1576c:	rsbs	r4, r0, #0
   15770:	rsc	r5, r1, #0
   15774:	cmp	r1, #0
   15778:	mvn	r6, #0
   1577c:	sub	sp, sp, #12
   15780:	movge	r4, r0
   15784:	movge	r5, r1
   15788:	movge	r6, #0
   1578c:	cmp	r3, #0
   15790:	blt	159c8 <close_stdout@@Base+0x2df0>
   15794:	cmp	r3, #0
   15798:	mov	sl, r4
   1579c:	mov	ip, r5
   157a0:	mov	r0, r2
   157a4:	mov	r1, r3
   157a8:	mov	r8, r2
   157ac:	mov	r7, r4
   157b0:	mov	r9, r5
   157b4:	bne	158ac <close_stdout@@Base+0x2cd4>
   157b8:	cmp	r2, r5
   157bc:	bls	158e8 <close_stdout@@Base+0x2d10>
   157c0:	clz	r3, r2
   157c4:	cmp	r3, #0
   157c8:	rsbne	r2, r3, #32
   157cc:	lslne	r8, r0, r3
   157d0:	lsrne	r2, r4, r2
   157d4:	lslne	r7, r4, r3
   157d8:	orrne	r9, r2, r5, lsl r3
   157dc:	lsr	r4, r8, #16
   157e0:	uxth	sl, r8
   157e4:	mov	r1, r4
   157e8:	mov	r0, r9
   157ec:	bl	15498 <close_stdout@@Base+0x28c0>
   157f0:	mov	r1, r4
   157f4:	mov	fp, r0
   157f8:	mov	r0, r9
   157fc:	bl	15684 <close_stdout@@Base+0x2aac>
   15800:	mul	r0, sl, fp
   15804:	lsr	r2, r7, #16
   15808:	orr	r1, r2, r1, lsl #16
   1580c:	cmp	r0, r1
   15810:	bls	15834 <close_stdout@@Base+0x2c5c>
   15814:	adds	r1, r1, r8
   15818:	sub	r3, fp, #1
   1581c:	bcs	15830 <close_stdout@@Base+0x2c58>
   15820:	cmp	r0, r1
   15824:	subhi	fp, fp, #2
   15828:	addhi	r1, r1, r8
   1582c:	bhi	15834 <close_stdout@@Base+0x2c5c>
   15830:	mov	fp, r3
   15834:	rsb	r9, r0, r1
   15838:	mov	r1, r4
   1583c:	uxth	r7, r7
   15840:	mov	r0, r9
   15844:	bl	15498 <close_stdout@@Base+0x28c0>
   15848:	mov	r1, r4
   1584c:	mov	r5, r0
   15850:	mov	r0, r9
   15854:	bl	15684 <close_stdout@@Base+0x2aac>
   15858:	mul	sl, sl, r5
   1585c:	orr	r1, r7, r1, lsl #16
   15860:	cmp	sl, r1
   15864:	bls	15884 <close_stdout@@Base+0x2cac>
   15868:	adds	r8, r1, r8
   1586c:	sub	r3, r5, #1
   15870:	bcs	15880 <close_stdout@@Base+0x2ca8>
   15874:	cmp	sl, r8
   15878:	subhi	r5, r5, #2
   1587c:	bhi	15884 <close_stdout@@Base+0x2cac>
   15880:	mov	r5, r3
   15884:	orr	r3, r5, fp, lsl #16
   15888:	mov	r4, #0
   1588c:	cmp	r6, #0
   15890:	mov	r0, r3
   15894:	mov	r1, r4
   15898:	beq	158a4 <close_stdout@@Base+0x2ccc>
   1589c:	rsbs	r0, r0, #0
   158a0:	rsc	r1, r1, #0
   158a4:	add	sp, sp, #12
   158a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158ac:	cmp	r3, r5
   158b0:	movhi	r4, #0
   158b4:	movhi	r3, r4
   158b8:	bhi	1588c <close_stdout@@Base+0x2cb4>
   158bc:	clz	r5, r1
   158c0:	cmp	r5, #0
   158c4:	bne	15ab4 <close_stdout@@Base+0x2edc>
   158c8:	cmp	r1, ip
   158cc:	cmpcs	r2, sl
   158d0:	movhi	r4, #0
   158d4:	movls	r4, #1
   158d8:	movls	r3, #1
   158dc:	movls	r4, r5
   158e0:	movhi	r3, r4
   158e4:	b	1588c <close_stdout@@Base+0x2cb4>
   158e8:	cmp	r2, #0
   158ec:	bne	15900 <close_stdout@@Base+0x2d28>
   158f0:	mov	r1, r2
   158f4:	mov	r0, #1
   158f8:	bl	15498 <close_stdout@@Base+0x28c0>
   158fc:	mov	r8, r0
   15900:	clz	r3, r8
   15904:	cmp	r3, #0
   15908:	bne	159d8 <close_stdout@@Base+0x2e00>
   1590c:	rsb	r9, r8, r9
   15910:	lsr	r5, r8, #16
   15914:	uxth	sl, r8
   15918:	mov	r4, #1
   1591c:	mov	r1, r5
   15920:	mov	r0, r9
   15924:	bl	15498 <close_stdout@@Base+0x28c0>
   15928:	mov	r1, r5
   1592c:	mov	fp, r0
   15930:	mov	r0, r9
   15934:	bl	15684 <close_stdout@@Base+0x2aac>
   15938:	mul	r0, sl, fp
   1593c:	lsr	r2, r7, #16
   15940:	orr	r1, r2, r1, lsl #16
   15944:	cmp	r0, r1
   15948:	bls	15968 <close_stdout@@Base+0x2d90>
   1594c:	adds	r1, r1, r8
   15950:	sub	r3, fp, #1
   15954:	bcs	15bd4 <close_stdout@@Base+0x2ffc>
   15958:	cmp	r0, r1
   1595c:	subhi	fp, fp, #2
   15960:	addhi	r1, r1, r8
   15964:	bls	15bd4 <close_stdout@@Base+0x2ffc>
   15968:	rsb	r2, r0, r1
   1596c:	mov	r1, r5
   15970:	str	r2, [sp]
   15974:	uxth	r7, r7
   15978:	mov	r0, r2
   1597c:	bl	15498 <close_stdout@@Base+0x28c0>
   15980:	ldr	r2, [sp]
   15984:	mov	r1, r5
   15988:	mov	r9, r0
   1598c:	mov	r0, r2
   15990:	bl	15684 <close_stdout@@Base+0x2aac>
   15994:	mul	sl, sl, r9
   15998:	orr	r1, r7, r1, lsl #16
   1599c:	cmp	sl, r1
   159a0:	bls	159c0 <close_stdout@@Base+0x2de8>
   159a4:	adds	r8, r1, r8
   159a8:	sub	r3, r9, #1
   159ac:	bcs	159bc <close_stdout@@Base+0x2de4>
   159b0:	cmp	sl, r8
   159b4:	subhi	r9, r9, #2
   159b8:	bhi	159c0 <close_stdout@@Base+0x2de8>
   159bc:	mov	r9, r3
   159c0:	orr	r3, r9, fp, lsl #16
   159c4:	b	1588c <close_stdout@@Base+0x2cb4>
   159c8:	mvn	r6, r6
   159cc:	rsbs	r2, r2, #0
   159d0:	rsc	r3, r3, #0
   159d4:	b	15794 <close_stdout@@Base+0x2bbc>
   159d8:	lsl	r8, r8, r3
   159dc:	rsb	fp, r3, #32
   159e0:	lsr	r4, r9, fp
   159e4:	lsr	fp, r7, fp
   159e8:	lsr	r5, r8, #16
   159ec:	orr	fp, fp, r9, lsl r3
   159f0:	mov	r0, r4
   159f4:	lsl	r7, r7, r3
   159f8:	mov	r1, r5
   159fc:	uxth	sl, r8
   15a00:	bl	15498 <close_stdout@@Base+0x28c0>
   15a04:	mov	r1, r5
   15a08:	mov	r3, r0
   15a0c:	mov	r0, r4
   15a10:	str	r3, [sp]
   15a14:	bl	15684 <close_stdout@@Base+0x2aac>
   15a18:	ldr	r3, [sp]
   15a1c:	lsr	r2, fp, #16
   15a20:	mul	r0, sl, r3
   15a24:	orr	r1, r2, r1, lsl #16
   15a28:	cmp	r0, r1
   15a2c:	bls	15a4c <close_stdout@@Base+0x2e74>
   15a30:	adds	r1, r1, r8
   15a34:	sub	r2, r3, #1
   15a38:	bcs	15bec <close_stdout@@Base+0x3014>
   15a3c:	cmp	r0, r1
   15a40:	subhi	r3, r3, #2
   15a44:	addhi	r1, r1, r8
   15a48:	bls	15bec <close_stdout@@Base+0x3014>
   15a4c:	rsb	r9, r0, r1
   15a50:	mov	r1, r5
   15a54:	str	r3, [sp]
   15a58:	uxth	fp, fp
   15a5c:	mov	r0, r9
   15a60:	bl	15498 <close_stdout@@Base+0x28c0>
   15a64:	mov	r1, r5
   15a68:	mov	r4, r0
   15a6c:	mov	r0, r9
   15a70:	bl	15684 <close_stdout@@Base+0x2aac>
   15a74:	mul	r9, sl, r4
   15a78:	ldr	r3, [sp]
   15a7c:	orr	r1, fp, r1, lsl #16
   15a80:	cmp	r9, r1
   15a84:	bls	15aa8 <close_stdout@@Base+0x2ed0>
   15a88:	adds	r1, r1, r8
   15a8c:	sub	r2, r4, #1
   15a90:	bcs	15aa4 <close_stdout@@Base+0x2ecc>
   15a94:	cmp	r9, r1
   15a98:	subhi	r4, r4, #2
   15a9c:	addhi	r1, r1, r8
   15aa0:	bhi	15aa8 <close_stdout@@Base+0x2ed0>
   15aa4:	mov	r4, r2
   15aa8:	rsb	r9, r9, r1
   15aac:	orr	r4, r4, r3, lsl #16
   15ab0:	b	1591c <close_stdout@@Base+0x2d44>
   15ab4:	rsb	sl, r5, #32
   15ab8:	lsl	r3, r2, r5
   15abc:	lsr	r0, r2, sl
   15ac0:	lsr	r2, ip, sl
   15ac4:	orr	r4, r0, r1, lsl r5
   15ac8:	lsr	sl, r7, sl
   15acc:	mov	r0, r2
   15ad0:	orr	sl, sl, ip, lsl r5
   15ad4:	lsr	r9, r4, #16
   15ad8:	str	r3, [sp, #4]
   15adc:	str	r2, [sp]
   15ae0:	uxth	fp, r4
   15ae4:	mov	r1, r9
   15ae8:	bl	15498 <close_stdout@@Base+0x28c0>
   15aec:	ldr	r2, [sp]
   15af0:	mov	r1, r9
   15af4:	mov	r8, r0
   15af8:	mov	r0, r2
   15afc:	bl	15684 <close_stdout@@Base+0x2aac>
   15b00:	mul	r0, fp, r8
   15b04:	lsr	r2, sl, #16
   15b08:	orr	r1, r2, r1, lsl #16
   15b0c:	cmp	r0, r1
   15b10:	bls	15b30 <close_stdout@@Base+0x2f58>
   15b14:	adds	r1, r1, r4
   15b18:	sub	r2, r8, #1
   15b1c:	bcs	15be4 <close_stdout@@Base+0x300c>
   15b20:	cmp	r0, r1
   15b24:	subhi	r8, r8, #2
   15b28:	addhi	r1, r1, r4
   15b2c:	bls	15be4 <close_stdout@@Base+0x300c>
   15b30:	rsb	ip, r0, r1
   15b34:	mov	r1, r9
   15b38:	str	ip, [sp]
   15b3c:	mov	r0, ip
   15b40:	bl	15498 <close_stdout@@Base+0x28c0>
   15b44:	ldr	ip, [sp]
   15b48:	mov	r1, r9
   15b4c:	mov	r2, r0
   15b50:	mov	r0, ip
   15b54:	str	r2, [sp]
   15b58:	bl	15684 <close_stdout@@Base+0x2aac>
   15b5c:	ldr	r2, [sp]
   15b60:	uxth	ip, sl
   15b64:	mul	fp, fp, r2
   15b68:	orr	ip, ip, r1, lsl #16
   15b6c:	cmp	fp, ip
   15b70:	bls	15b90 <close_stdout@@Base+0x2fb8>
   15b74:	adds	ip, ip, r4
   15b78:	sub	r1, r2, #1
   15b7c:	bcs	15bdc <close_stdout@@Base+0x3004>
   15b80:	cmp	fp, ip
   15b84:	subhi	r2, r2, #2
   15b88:	addhi	ip, ip, r4
   15b8c:	bls	15bdc <close_stdout@@Base+0x3004>
   15b90:	ldr	r0, [sp, #4]
   15b94:	orr	r1, r2, r8, lsl #16
   15b98:	rsb	fp, fp, ip
   15b9c:	umull	r2, r3, r1, r0
   15ba0:	cmp	fp, r3
   15ba4:	bcc	15bc8 <close_stdout@@Base+0x2ff0>
   15ba8:	movne	r4, #0
   15bac:	moveq	r4, #1
   15bb0:	cmp	r2, r7, lsl r5
   15bb4:	movls	r4, #0
   15bb8:	andhi	r4, r4, #1
   15bbc:	cmp	r4, #0
   15bc0:	moveq	r3, r1
   15bc4:	beq	1588c <close_stdout@@Base+0x2cb4>
   15bc8:	sub	r3, r1, #1
   15bcc:	mov	r4, #0
   15bd0:	b	1588c <close_stdout@@Base+0x2cb4>
   15bd4:	mov	fp, r3
   15bd8:	b	15968 <close_stdout@@Base+0x2d90>
   15bdc:	mov	r2, r1
   15be0:	b	15b90 <close_stdout@@Base+0x2fb8>
   15be4:	mov	r8, r2
   15be8:	b	15b30 <close_stdout@@Base+0x2f58>
   15bec:	mov	r3, r2
   15bf0:	b	15a4c <close_stdout@@Base+0x2e74>
   15bf4:	cmp	r3, #0
   15bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bfc:	mov	r6, r0
   15c00:	sub	sp, sp, #12
   15c04:	mov	r5, r1
   15c08:	mov	r7, r0
   15c0c:	mov	r4, r2
   15c10:	mov	r8, r1
   15c14:	bne	15cf4 <close_stdout@@Base+0x311c>
   15c18:	cmp	r2, r1
   15c1c:	bls	15d30 <close_stdout@@Base+0x3158>
   15c20:	clz	r3, r2
   15c24:	cmp	r3, #0
   15c28:	rsbne	r8, r3, #32
   15c2c:	lslne	r4, r2, r3
   15c30:	lsrne	r8, r0, r8
   15c34:	lslne	r7, r0, r3
   15c38:	orrne	r8, r8, r1, lsl r3
   15c3c:	lsr	r5, r4, #16
   15c40:	uxth	sl, r4
   15c44:	mov	r1, r5
   15c48:	mov	r0, r8
   15c4c:	bl	15498 <close_stdout@@Base+0x28c0>
   15c50:	mov	r1, r5
   15c54:	mov	r9, r0
   15c58:	mov	r0, r8
   15c5c:	bl	15684 <close_stdout@@Base+0x2aac>
   15c60:	mul	r0, sl, r9
   15c64:	lsr	r3, r7, #16
   15c68:	orr	r1, r3, r1, lsl #16
   15c6c:	cmp	r0, r1
   15c70:	bls	15c94 <close_stdout@@Base+0x30bc>
   15c74:	adds	r1, r1, r4
   15c78:	sub	r2, r9, #1
   15c7c:	bcs	15c90 <close_stdout@@Base+0x30b8>
   15c80:	cmp	r0, r1
   15c84:	subhi	r9, r9, #2
   15c88:	addhi	r1, r1, r4
   15c8c:	bhi	15c94 <close_stdout@@Base+0x30bc>
   15c90:	mov	r9, r2
   15c94:	rsb	r8, r0, r1
   15c98:	mov	r1, r5
   15c9c:	uxth	r7, r7
   15ca0:	mov	r0, r8
   15ca4:	bl	15498 <close_stdout@@Base+0x28c0>
   15ca8:	mov	r1, r5
   15cac:	mov	r6, r0
   15cb0:	mov	r0, r8
   15cb4:	bl	15684 <close_stdout@@Base+0x2aac>
   15cb8:	mul	sl, sl, r6
   15cbc:	orr	r1, r7, r1, lsl #16
   15cc0:	cmp	sl, r1
   15cc4:	bls	15ce0 <close_stdout@@Base+0x3108>
   15cc8:	adds	r4, r1, r4
   15ccc:	sub	r3, r6, #1
   15cd0:	bcs	15fdc <close_stdout@@Base+0x3404>
   15cd4:	cmp	sl, r4
   15cd8:	subhi	r6, r6, #2
   15cdc:	bls	15fdc <close_stdout@@Base+0x3404>
   15ce0:	orr	r0, r6, r9, lsl #16
   15ce4:	mov	r6, #0
   15ce8:	mov	r1, r6
   15cec:	add	sp, sp, #12
   15cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf4:	cmp	r3, r1
   15cf8:	movhi	r6, #0
   15cfc:	movhi	r0, r6
   15d00:	bhi	15ce8 <close_stdout@@Base+0x3110>
   15d04:	clz	r7, r3
   15d08:	cmp	r7, #0
   15d0c:	bne	15e0c <close_stdout@@Base+0x3234>
   15d10:	cmp	r3, r1
   15d14:	cmpcs	r2, r6
   15d18:	movhi	r6, #0
   15d1c:	movls	r6, #1
   15d20:	movls	r0, #1
   15d24:	movls	r6, r7
   15d28:	movhi	r0, r6
   15d2c:	b	15ce8 <close_stdout@@Base+0x3110>
   15d30:	cmp	r2, #0
   15d34:	bne	15d48 <close_stdout@@Base+0x3170>
   15d38:	mov	r1, r2
   15d3c:	mov	r0, #1
   15d40:	bl	15498 <close_stdout@@Base+0x28c0>
   15d44:	mov	r4, r0
   15d48:	clz	r3, r4
   15d4c:	cmp	r3, #0
   15d50:	bne	15f08 <close_stdout@@Base+0x3330>
   15d54:	rsb	r5, r4, r5
   15d58:	lsr	r8, r4, #16
   15d5c:	uxth	sl, r4
   15d60:	mov	r6, #1
   15d64:	mov	r1, r8
   15d68:	mov	r0, r5
   15d6c:	bl	15498 <close_stdout@@Base+0x28c0>
   15d70:	mov	r1, r8
   15d74:	mov	r9, r0
   15d78:	mov	r0, r5
   15d7c:	bl	15684 <close_stdout@@Base+0x2aac>
   15d80:	mul	r0, sl, r9
   15d84:	lsr	r3, r7, #16
   15d88:	orr	r1, r3, r1, lsl #16
   15d8c:	cmp	r0, r1
   15d90:	bls	15db0 <close_stdout@@Base+0x31d8>
   15d94:	adds	r1, r1, r4
   15d98:	sub	r2, r9, #1
   15d9c:	bcs	15fe4 <close_stdout@@Base+0x340c>
   15da0:	cmp	r0, r1
   15da4:	subhi	r9, r9, #2
   15da8:	addhi	r1, r1, r4
   15dac:	bls	15fe4 <close_stdout@@Base+0x340c>
   15db0:	rsb	fp, r0, r1
   15db4:	mov	r1, r8
   15db8:	uxth	r7, r7
   15dbc:	mov	r0, fp
   15dc0:	bl	15498 <close_stdout@@Base+0x28c0>
   15dc4:	mov	r1, r8
   15dc8:	mov	r5, r0
   15dcc:	mov	r0, fp
   15dd0:	bl	15684 <close_stdout@@Base+0x2aac>
   15dd4:	mul	sl, sl, r5
   15dd8:	orr	r1, r7, r1, lsl #16
   15ddc:	cmp	sl, r1
   15de0:	bls	15dfc <close_stdout@@Base+0x3224>
   15de4:	adds	r4, r1, r4
   15de8:	sub	r3, r5, #1
   15dec:	bcs	15fec <close_stdout@@Base+0x3414>
   15df0:	cmp	sl, r4
   15df4:	subhi	r5, r5, #2
   15df8:	bls	15fec <close_stdout@@Base+0x3414>
   15dfc:	orr	r0, r5, r9, lsl #16
   15e00:	mov	r1, r6
   15e04:	add	sp, sp, #12
   15e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e0c:	rsb	r1, r7, #32
   15e10:	lsl	r0, r2, r7
   15e14:	lsr	r2, r2, r1
   15e18:	lsr	fp, r5, r1
   15e1c:	orr	r8, r2, r3, lsl r7
   15e20:	lsr	r1, r6, r1
   15e24:	str	r0, [sp, #4]
   15e28:	orr	r5, r1, r5, lsl r7
   15e2c:	lsr	r9, r8, #16
   15e30:	mov	r0, fp
   15e34:	uxth	sl, r8
   15e38:	mov	r1, r9
   15e3c:	bl	15498 <close_stdout@@Base+0x28c0>
   15e40:	mov	r1, r9
   15e44:	mov	r4, r0
   15e48:	mov	r0, fp
   15e4c:	bl	15684 <close_stdout@@Base+0x2aac>
   15e50:	mul	r0, sl, r4
   15e54:	lsr	ip, r5, #16
   15e58:	orr	r1, ip, r1, lsl #16
   15e5c:	cmp	r0, r1
   15e60:	bls	15e74 <close_stdout@@Base+0x329c>
   15e64:	adds	r1, r1, r8
   15e68:	sub	r2, r4, #1
   15e6c:	bcc	16008 <close_stdout@@Base+0x3430>
   15e70:	mov	r4, r2
   15e74:	rsb	ip, r0, r1
   15e78:	mov	r1, r9
   15e7c:	str	ip, [sp]
   15e80:	uxth	r5, r5
   15e84:	mov	r0, ip
   15e88:	bl	15498 <close_stdout@@Base+0x28c0>
   15e8c:	ldr	ip, [sp]
   15e90:	mov	r1, r9
   15e94:	mov	fp, r0
   15e98:	mov	r0, ip
   15e9c:	bl	15684 <close_stdout@@Base+0x2aac>
   15ea0:	mul	sl, sl, fp
   15ea4:	orr	r1, r5, r1, lsl #16
   15ea8:	cmp	sl, r1
   15eac:	bls	15ec0 <close_stdout@@Base+0x32e8>
   15eb0:	adds	r1, r1, r8
   15eb4:	sub	r2, fp, #1
   15eb8:	bcc	15ff4 <close_stdout@@Base+0x341c>
   15ebc:	mov	fp, r2
   15ec0:	ldr	r3, [sp, #4]
   15ec4:	orr	r0, fp, r4, lsl #16
   15ec8:	rsb	sl, sl, r1
   15ecc:	umull	r4, r5, r0, r3
   15ed0:	cmp	sl, r5
   15ed4:	bcc	15ef4 <close_stdout@@Base+0x331c>
   15ed8:	movne	r3, #0
   15edc:	moveq	r3, #1
   15ee0:	cmp	r4, r6, lsl r7
   15ee4:	movls	r6, #0
   15ee8:	andhi	r6, r3, #1
   15eec:	cmp	r6, #0
   15ef0:	beq	15ce8 <close_stdout@@Base+0x3110>
   15ef4:	mov	r6, #0
   15ef8:	sub	r0, r0, #1
   15efc:	mov	r1, r6
   15f00:	add	sp, sp, #12
   15f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f08:	lsl	r4, r4, r3
   15f0c:	rsb	r9, r3, #32
   15f10:	lsr	r2, r5, r9
   15f14:	lsr	r9, r6, r9
   15f18:	lsr	r8, r4, #16
   15f1c:	orr	r9, r9, r5, lsl r3
   15f20:	mov	r0, r2
   15f24:	lsl	r7, r6, r3
   15f28:	mov	r1, r8
   15f2c:	str	r2, [sp]
   15f30:	bl	15498 <close_stdout@@Base+0x28c0>
   15f34:	ldr	r2, [sp]
   15f38:	mov	r1, r8
   15f3c:	uxth	sl, r4
   15f40:	mov	fp, r0
   15f44:	mov	r0, r2
   15f48:	bl	15684 <close_stdout@@Base+0x2aac>
   15f4c:	mul	r0, sl, fp
   15f50:	lsr	r3, r9, #16
   15f54:	orr	r1, r3, r1, lsl #16
   15f58:	cmp	r0, r1
   15f5c:	bls	15f7c <close_stdout@@Base+0x33a4>
   15f60:	adds	r1, r1, r4
   15f64:	sub	r3, fp, #1
   15f68:	bcs	1601c <close_stdout@@Base+0x3444>
   15f6c:	cmp	r0, r1
   15f70:	subhi	fp, fp, #2
   15f74:	addhi	r1, r1, r4
   15f78:	bls	1601c <close_stdout@@Base+0x3444>
   15f7c:	rsb	r5, r0, r1
   15f80:	mov	r1, r8
   15f84:	uxth	r9, r9
   15f88:	mov	r0, r5
   15f8c:	bl	15498 <close_stdout@@Base+0x28c0>
   15f90:	mov	r1, r8
   15f94:	mov	r6, r0
   15f98:	mov	r0, r5
   15f9c:	bl	15684 <close_stdout@@Base+0x2aac>
   15fa0:	mul	r5, sl, r6
   15fa4:	orr	r1, r9, r1, lsl #16
   15fa8:	cmp	r5, r1
   15fac:	bls	15fd0 <close_stdout@@Base+0x33f8>
   15fb0:	adds	r1, r1, r4
   15fb4:	sub	r3, r6, #1
   15fb8:	bcs	15fcc <close_stdout@@Base+0x33f4>
   15fbc:	cmp	r5, r1
   15fc0:	subhi	r6, r6, #2
   15fc4:	addhi	r1, r1, r4
   15fc8:	bhi	15fd0 <close_stdout@@Base+0x33f8>
   15fcc:	mov	r6, r3
   15fd0:	rsb	r5, r5, r1
   15fd4:	orr	r6, r6, fp, lsl #16
   15fd8:	b	15d64 <close_stdout@@Base+0x318c>
   15fdc:	mov	r6, r3
   15fe0:	b	15ce0 <close_stdout@@Base+0x3108>
   15fe4:	mov	r9, r2
   15fe8:	b	15db0 <close_stdout@@Base+0x31d8>
   15fec:	mov	r5, r3
   15ff0:	b	15dfc <close_stdout@@Base+0x3224>
   15ff4:	cmp	sl, r1
   15ff8:	subhi	fp, fp, #2
   15ffc:	addhi	r1, r1, r8
   16000:	bhi	15ec0 <close_stdout@@Base+0x32e8>
   16004:	b	15ebc <close_stdout@@Base+0x32e4>
   16008:	cmp	r0, r1
   1600c:	subhi	r4, r4, #2
   16010:	addhi	r1, r1, r8
   16014:	bhi	15e74 <close_stdout@@Base+0x329c>
   16018:	b	15e70 <close_stdout@@Base+0x3298>
   1601c:	mov	fp, r3
   16020:	b	15f7c <close_stdout@@Base+0x33a4>
   16024:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16028:	mov	r7, r0
   1602c:	ldr	r6, [pc, #76]	; 16080 <close_stdout@@Base+0x34a8>
   16030:	mov	r8, r1
   16034:	ldr	r5, [pc, #72]	; 16084 <close_stdout@@Base+0x34ac>
   16038:	mov	r9, r2
   1603c:	add	r6, pc, r6
   16040:	bl	10fd8 <fdopen@plt-0x20>
   16044:	add	r5, pc, r5
   16048:	rsb	r6, r5, r6
   1604c:	asrs	r6, r6, #2
   16050:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   16054:	sub	r5, r5, #4
   16058:	mov	r4, #0
   1605c:	add	r4, r4, #1
   16060:	ldr	r3, [r5, #4]!
   16064:	mov	r0, r7
   16068:	mov	r1, r8
   1606c:	mov	r2, r9
   16070:	blx	r3
   16074:	cmp	r4, r6
   16078:	bne	1605c <close_stdout@@Base+0x3484>
   1607c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16080:	andeq	r0, r1, r8, lsr lr
   16084:	andeq	r0, r1, ip, lsr #28
   16088:	bx	lr
   1608c:	ldr	r3, [pc, #28]	; 160b0 <close_stdout@@Base+0x34d8>
   16090:	mov	r1, #0
   16094:	ldr	r2, [pc, #24]	; 160b4 <close_stdout@@Base+0x34dc>
   16098:	add	r3, pc, r3
   1609c:	ldr	r3, [r3, r2]
   160a0:	cmp	r3, #0
   160a4:	ldrne	r2, [r3]
   160a8:	moveq	r2, r3
   160ac:	b	111d8 <__cxa_atexit@plt>
   160b0:	andeq	r0, r1, r0, ror #30
   160b4:	andeq	r0, r0, ip, lsl r1

Disassembly of section .fini:

000160b8 <.fini>:
   160b8:	push	{r3, lr}
   160bc:	pop	{r3, pc}
