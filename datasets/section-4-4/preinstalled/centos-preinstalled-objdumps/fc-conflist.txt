
centos-preinstalled/fc-conflist:     file format elf32-littlearm


Disassembly of section .init:

00010848 <_init@@Base>:
   10848:	push	{r3, lr}
   1084c:	bl	10ad0 <exit@plt+0x1a8>
   10850:	pop	{r3, pc}

Disassembly of section .plt:

00010854 <abort@plt-0x14>:
   10854:	push	{lr}		; (str lr, [sp, #-4]!)
   10858:	ldr	lr, [pc, #4]	; 10864 <_init@@Base+0x1c>
   1085c:	add	lr, pc, lr
   10860:	ldr	pc, [lr, #8]!
   10864:	muleq	r1, ip, r7

00010868 <abort@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #16, 20	; 0x10000
   10870:	ldr	pc, [ip, #1948]!	; 0x79c

00010874 <__libc_start_main@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #16, 20	; 0x10000
   1087c:	ldr	pc, [ip, #1940]!	; 0x794

00010880 <__gmon_start__@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #16, 20	; 0x10000
   10888:	ldr	pc, [ip, #1932]!	; 0x78c

0001088c <__printf_chk@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #16, 20	; 0x10000
   10894:	ldr	pc, [ip, #1924]!	; 0x784

00010898 <FcFini@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #16, 20	; 0x10000
   108a0:	ldr	pc, [ip, #1916]!	; 0x77c

000108a4 <FcConfigGetCurrent@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #16, 20	; 0x10000
   108ac:	ldr	pc, [ip, #1908]!	; 0x774

000108b0 <getopt_long@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #16, 20	; 0x10000
   108b8:	ldr	pc, [ip, #1900]!	; 0x76c

000108bc <dcgettext@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #16, 20	; 0x10000
   108c4:	ldr	pc, [ip, #1892]!	; 0x764

000108c8 <setlocale@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #16, 20	; 0x10000
   108d0:	ldr	pc, [ip, #1884]!	; 0x75c

000108d4 <FcConfigFileInfoIterGet@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #16, 20	; 0x10000
   108dc:	ldr	pc, [ip, #1876]!	; 0x754

000108e0 <FcConfigFileInfoIterNext@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #16, 20	; 0x10000
   108e8:	ldr	pc, [ip, #1868]!	; 0x74c

000108ec <__stack_chk_fail@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #16, 20	; 0x10000
   108f4:	ldr	pc, [ip, #1860]!	; 0x744

000108f8 <FcConfigFileInfoIterInit@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #16, 20	; 0x10000
   10900:	ldr	pc, [ip, #1852]!	; 0x73c

00010904 <__fprintf_chk@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #16, 20	; 0x10000
   1090c:	ldr	pc, [ip, #1844]!	; 0x734

00010910 <fputc@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #16, 20	; 0x10000
   10918:	ldr	pc, [ip, #1836]!	; 0x72c

0001091c <FcStrFree@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #16, 20	; 0x10000
   10924:	ldr	pc, [ip, #1828]!	; 0x724

00010928 <exit@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #16, 20	; 0x10000
   10930:	ldr	pc, [ip, #1820]!	; 0x71c

Disassembly of section .text:

00010934 <.text>:
   10934:	push	{r4, r5, r6, r7, lr}
   10938:	movw	r4, #4184	; 0x1058
   1093c:	movt	r4, #2
   10940:	sub	sp, sp, #44	; 0x2c
   10944:	mov	r6, r1
   10948:	mov	r7, r0
   1094c:	ldr	r3, [r4]
   10950:	movw	r1, #3652	; 0xe44
   10954:	mov	r0, #6
   10958:	movt	r1, #1
   1095c:	mov	r5, #0
   10960:	str	r3, [sp, #36]	; 0x24
   10964:	bl	108c8 <setlocale@plt>
   10968:	mov	r0, r7
   1096c:	mov	r1, r6
   10970:	str	r5, [sp]
   10974:	movw	r2, #3620	; 0xe24
   10978:	movw	r3, #3352	; 0xd18
   1097c:	movt	r2, #1
   10980:	movt	r3, #1
   10984:	bl	108b0 <getopt_long@plt>
   10988:	cmn	r0, #1
   1098c:	beq	109ec <exit@plt+0xc4>
   10990:	cmp	r0, #86	; 0x56
   10994:	beq	109b8 <exit@plt+0x90>
   10998:	cmp	r0, #104	; 0x68
   1099c:	bne	109ac <exit@plt+0x84>
   109a0:	ldr	r0, [r6]
   109a4:	mov	r1, r5
   109a8:	bl	10bc8 <exit@plt+0x2a0>
   109ac:	ldr	r0, [r6]
   109b0:	mov	r1, #1
   109b4:	bl	10bc8 <exit@plt+0x2a0>
   109b8:	movw	r3, #4196	; 0x1064
   109bc:	movt	r3, #2
   109c0:	str	r5, [sp, #4]
   109c4:	mov	r1, #13
   109c8:	ldr	r0, [r3]
   109cc:	movw	r2, #3624	; 0xe28
   109d0:	str	r1, [sp]
   109d4:	movt	r2, #1
   109d8:	mov	r1, #1
   109dc:	mov	r3, #2
   109e0:	bl	10904 <__fprintf_chk@plt>
   109e4:	mov	r0, r5
   109e8:	bl	10928 <exit@plt>
   109ec:	bl	108a4 <FcConfigGetCurrent@plt>
   109f0:	add	r1, sp, #24
   109f4:	add	r6, sp, #20
   109f8:	mov	r5, r0
   109fc:	bl	108f8 <FcConfigFileInfoIterInit@plt>
   10a00:	str	r6, [sp]
   10a04:	mov	r0, r5
   10a08:	add	r1, sp, #24
   10a0c:	add	r2, sp, #12
   10a10:	add	r3, sp, #16
   10a14:	bl	108d4 <FcConfigFileInfoIterGet@plt>
   10a18:	cmp	r0, #0
   10a1c:	beq	10a5c <exit@plt+0x134>
   10a20:	ldr	r2, [sp, #20]
   10a24:	movw	r1, #3656	; 0xe48
   10a28:	ldr	ip, [sp, #16]
   10a2c:	movt	r1, #1
   10a30:	cmp	r2, #0
   10a34:	ldr	r3, [sp, #12]
   10a38:	mov	r0, #1
   10a3c:	str	ip, [sp]
   10a40:	moveq	r2, #45	; 0x2d
   10a44:	movne	r2, #43	; 0x2b
   10a48:	bl	1088c <__printf_chk@plt>
   10a4c:	ldr	r0, [sp, #12]
   10a50:	bl	1091c <FcStrFree@plt>
   10a54:	ldr	r0, [sp, #16]
   10a58:	bl	1091c <FcStrFree@plt>
   10a5c:	mov	r0, r5
   10a60:	add	r1, sp, #24
   10a64:	bl	108e0 <FcConfigFileInfoIterNext@plt>
   10a68:	subs	r7, r0, #0
   10a6c:	bne	10a00 <exit@plt+0xd8>
   10a70:	bl	10898 <FcFini@plt>
   10a74:	ldr	r2, [sp, #36]	; 0x24
   10a78:	ldr	r3, [r4]
   10a7c:	mov	r0, r7
   10a80:	cmp	r2, r3
   10a84:	bne	10a90 <exit@plt+0x168>
   10a88:	add	sp, sp, #44	; 0x2c
   10a8c:	pop	{r4, r5, r6, r7, pc}
   10a90:	bl	108ec <__stack_chk_fail@plt>
   10a94:	mov	fp, #0
   10a98:	mov	lr, #0
   10a9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10aa0:	mov	r2, sp
   10aa4:	push	{r2}		; (str r2, [sp, #-4]!)
   10aa8:	push	{r0}		; (str r0, [sp, #-4]!)
   10aac:	ldr	ip, [pc, #16]	; 10ac4 <exit@plt+0x19c>
   10ab0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ab4:	ldr	r0, [pc, #12]	; 10ac8 <exit@plt+0x1a0>
   10ab8:	ldr	r3, [pc, #12]	; 10acc <exit@plt+0x1a4>
   10abc:	bl	10874 <__libc_start_main@plt>
   10ac0:	bl	10868 <abort@plt>
   10ac4:	andeq	r0, r1, r4, lsl #26
   10ac8:	andeq	r0, r1, r4, lsr r9
   10acc:	andeq	r0, r1, r0, lsr #25
   10ad0:	ldr	r3, [pc, #20]	; 10aec <exit@plt+0x1c4>
   10ad4:	ldr	r2, [pc, #20]	; 10af0 <exit@plt+0x1c8>
   10ad8:	add	r3, pc, r3
   10adc:	ldr	r2, [r3, r2]
   10ae0:	cmp	r2, #0
   10ae4:	bxeq	lr
   10ae8:	b	10880 <__gmon_start__@plt>
   10aec:	andeq	r0, r1, r0, lsr #10
   10af0:	andeq	r0, r0, r0, asr r0
   10af4:	push	{r3, lr}
   10af8:	movw	r0, #4184	; 0x1058
   10afc:	ldr	r3, [pc, #36]	; 10b28 <exit@plt+0x200>
   10b00:	movt	r0, #2
   10b04:	rsb	r3, r0, r3
   10b08:	cmp	r3, #6
   10b0c:	popls	{r3, pc}
   10b10:	movw	r3, #0
   10b14:	movt	r3, #0
   10b18:	cmp	r3, #0
   10b1c:	popeq	{r3, pc}
   10b20:	blx	r3
   10b24:	pop	{r3, pc}
   10b28:	andeq	r1, r2, fp, asr r0
   10b2c:	push	{r3, lr}
   10b30:	movw	r0, #4184	; 0x1058
   10b34:	movw	r3, #4184	; 0x1058
   10b38:	movt	r0, #2
   10b3c:	movt	r3, #2
   10b40:	rsb	r3, r0, r3
   10b44:	asr	r3, r3, #2
   10b48:	add	r3, r3, r3, lsr #31
   10b4c:	asrs	r1, r3, #1
   10b50:	popeq	{r3, pc}
   10b54:	movw	r2, #0
   10b58:	movt	r2, #0
   10b5c:	cmp	r2, #0
   10b60:	popeq	{r3, pc}
   10b64:	blx	r2
   10b68:	pop	{r3, pc}
   10b6c:	push	{r4, lr}
   10b70:	movw	r4, #4200	; 0x1068
   10b74:	movt	r4, #2
   10b78:	ldrb	r3, [r4]
   10b7c:	cmp	r3, #0
   10b80:	popne	{r4, pc}
   10b84:	bl	10af4 <exit@plt+0x1cc>
   10b88:	mov	r3, #1
   10b8c:	strb	r3, [r4]
   10b90:	pop	{r4, pc}
   10b94:	movw	r0, #3804	; 0xedc
   10b98:	movt	r0, #2
   10b9c:	push	{r3, lr}
   10ba0:	ldr	r3, [r0]
   10ba4:	cmp	r3, #0
   10ba8:	beq	10bc0 <exit@plt+0x298>
   10bac:	movw	r3, #0
   10bb0:	movt	r3, #0
   10bb4:	cmp	r3, #0
   10bb8:	beq	10bc0 <exit@plt+0x298>
   10bbc:	blx	r3
   10bc0:	pop	{r3, lr}
   10bc4:	b	10b2c <exit@plt+0x204>
   10bc8:	push	{r4, r5, r6, lr}
   10bcc:	subs	r5, r1, #0
   10bd0:	mov	r6, r0
   10bd4:	mov	r2, #5
   10bd8:	movwne	r3, #4196	; 0x1064
   10bdc:	movweq	r3, #4192	; 0x1060
   10be0:	movtne	r3, #2
   10be4:	movteq	r3, #2
   10be8:	movw	r0, #3400	; 0xd48
   10bec:	movw	r1, #3412	; 0xd54
   10bf0:	movt	r0, #1
   10bf4:	movt	r1, #1
   10bf8:	ldr	r4, [r3]
   10bfc:	bl	108bc <dcgettext@plt>
   10c00:	mov	r3, r6
   10c04:	mov	r1, #1
   10c08:	mov	r2, r0
   10c0c:	mov	r0, r4
   10c10:	bl	10904 <__fprintf_chk@plt>
   10c14:	mov	r2, #5
   10c18:	movw	r0, #3400	; 0xd48
   10c1c:	movw	r1, #3452	; 0xd7c
   10c20:	movt	r0, #1
   10c24:	movt	r1, #1
   10c28:	bl	108bc <dcgettext@plt>
   10c2c:	mov	r1, #1
   10c30:	mov	r2, r0
   10c34:	mov	r0, r4
   10c38:	bl	10904 <__fprintf_chk@plt>
   10c3c:	mov	r1, r4
   10c40:	mov	r0, #10
   10c44:	bl	10910 <fputc@plt>
   10c48:	mov	r2, #5
   10c4c:	movw	r0, #3400	; 0xd48
   10c50:	movw	r1, #3504	; 0xdb0
   10c54:	movt	r0, #1
   10c58:	movt	r1, #1
   10c5c:	bl	108bc <dcgettext@plt>
   10c60:	mov	r1, #1
   10c64:	mov	r2, r0
   10c68:	mov	r0, r4
   10c6c:	bl	10904 <__fprintf_chk@plt>
   10c70:	mov	r2, #5
   10c74:	movw	r0, #3400	; 0xd48
   10c78:	movw	r1, #3568	; 0xdf0
   10c7c:	movt	r0, #1
   10c80:	movt	r1, #1
   10c84:	bl	108bc <dcgettext@plt>
   10c88:	mov	r1, #1
   10c8c:	mov	r2, r0
   10c90:	mov	r0, r4
   10c94:	bl	10904 <__fprintf_chk@plt>
   10c98:	mov	r0, r5
   10c9c:	bl	10928 <exit@plt>
   10ca0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10ca4:	mov	r7, r0
   10ca8:	ldr	r6, [pc, #76]	; 10cfc <exit@plt+0x3d4>
   10cac:	mov	r8, r1
   10cb0:	ldr	r5, [pc, #72]	; 10d00 <exit@plt+0x3d8>
   10cb4:	mov	r9, r2
   10cb8:	add	r6, pc, r6
   10cbc:	bl	10848 <_init@@Base>
   10cc0:	add	r5, pc, r5
   10cc4:	rsb	r6, r5, r6
   10cc8:	asrs	r6, r6, #2
   10ccc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10cd0:	sub	r5, r5, #4
   10cd4:	mov	r4, #0
   10cd8:	add	r4, r4, #1
   10cdc:	ldr	r3, [r5, #4]!
   10ce0:	mov	r0, r7
   10ce4:	mov	r1, r8
   10ce8:	mov	r2, r9
   10cec:	blx	r3
   10cf0:	cmp	r4, r6
   10cf4:	bne	10cd8 <exit@plt+0x3b0>
   10cf8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10cfc:	andeq	r0, r1, r8, lsl r2
   10d00:	andeq	r0, r1, ip, lsl #4
   10d04:	bx	lr

Disassembly of section .fini:

00010d08 <_fini@@Base>:
   10d08:	push	{r3, lr}
   10d0c:	pop	{r3, pc}
