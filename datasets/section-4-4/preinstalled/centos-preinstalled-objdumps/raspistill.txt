
centos-preinstalled/raspistill:     file format elf32-littlearm


Disassembly of section .init:

000141b4 <_init@@Base>:
   141b4:	push	{r3, lr}
   141b8:	bl	178b4 <_start@@Base+0x3c>
   141bc:	pop	{r3, pc}

Disassembly of section .plt:

000141c0 <mmal_connection_destroy@plt-0x14>:
   141c0:	push	{lr}		; (str lr, [sp, #-4]!)
   141c4:	ldr	lr, [pc, #4]	; 141d0 <_init@@Base+0x1c>
   141c8:	add	lr, pc, lr
   141cc:	ldr	pc, [lr, #8]!
   141d0:	andeq	r5, r2, r0, lsr lr

000141d4 <mmal_connection_destroy@plt>:
   141d4:	add	ip, pc, #0, 12
   141d8:	add	ip, ip, #151552	; 0x25000
   141dc:	ldr	pc, [ip, #3632]!	; 0xe30

000141e0 <vc_dispmanx_element_add@plt>:
   141e0:	add	ip, pc, #0, 12
   141e4:	add	ip, ip, #151552	; 0x25000
   141e8:	ldr	pc, [ip, #3624]!	; 0xe28

000141ec <glAttachShader@plt>:
   141ec:	add	ip, pc, #0, 12
   141f0:	add	ip, ip, #151552	; 0x25000
   141f4:	ldr	pc, [ip, #3616]!	; 0xe20

000141f8 <sigemptyset@plt>:
   141f8:	add	ip, pc, #0, 12
   141fc:	add	ip, ip, #151552	; 0x25000
   14200:	ldr	pc, [ip, #3608]!	; 0xe18

00014204 <vc_dispmanx_update_start@plt>:
   14204:	add	ip, pc, #0, 12
   14208:	add	ip, ip, #151552	; 0x25000
   1420c:	ldr	pc, [ip, #3600]!	; 0xe10

00014210 <strerror@plt>:
   14210:	add	ip, pc, #0, 12
   14214:	add	ip, ip, #151552	; 0x25000
   14218:	ldr	pc, [ip, #3592]!	; 0xe08

0001421c <glEnable@plt>:
   1421c:	add	ip, pc, #0, 12
   14220:	add	ip, ip, #151552	; 0x25000
   14224:	ldr	pc, [ip, #3584]!	; 0xe00

00014228 <glTexCoordPointer@plt>:
   14228:	add	ip, pc, #0, 12
   1422c:	add	ip, ip, #151552	; 0x25000
   14230:	ldr	pc, [ip, #3576]!	; 0xdf8

00014234 <abort@plt>:
   14234:	add	ip, pc, #0, 12
   14238:	add	ip, ip, #151552	; 0x25000
   1423c:	ldr	pc, [ip, #3568]!	; 0xdf0

00014240 <glUniform2f@plt>:
   14240:	add	ip, pc, #0, 12
   14244:	add	ip, ip, #151552	; 0x25000
   14248:	ldr	pc, [ip, #3560]!	; 0xde8

0001424c <mmal_port_parameter_set_uint32@plt>:
   1424c:	add	ip, pc, #0, 12
   14250:	add	ip, ip, #151552	; 0x25000
   14254:	ldr	pc, [ip, #3552]!	; 0xde0

00014258 <mmal_connection_enable@plt>:
   14258:	add	ip, pc, #0, 12
   1425c:	add	ip, ip, #151552	; 0x25000
   14260:	ldr	pc, [ip, #3544]!	; 0xdd8

00014264 <glHint@plt>:
   14264:	add	ip, pc, #0, 12
   14268:	add	ip, ip, #151552	; 0x25000
   1426c:	ldr	pc, [ip, #3536]!	; 0xdd0

00014270 <localtime@plt>:
   14270:	add	ip, pc, #0, 12
   14274:	add	ip, ip, #151552	; 0x25000
   14278:	ldr	pc, [ip, #3528]!	; 0xdc8

0001427c <glGetShaderiv@plt>:
   1427c:	add	ip, pc, #0, 12
   14280:	add	ip, ip, #151552	; 0x25000
   14284:	ldr	pc, [ip, #3520]!	; 0xdc0

00014288 <mmal_port_parameter_set_rational@plt>:
   14288:	add	ip, pc, #0, 12
   1428c:	add	ip, ip, #151552	; 0x25000
   14290:	ldr	pc, [ip, #3512]!	; 0xdb8

00014294 <mmal_buffer_header_mem_lock@plt>:
   14294:	add	ip, pc, #0, 12
   14298:	add	ip, ip, #151552	; 0x25000
   1429c:	ldr	pc, [ip, #3504]!	; 0xdb0

000142a0 <clock_gettime@plt>:
   142a0:	add	ip, pc, #0, 12
   142a4:	add	ip, ip, #151552	; 0x25000
   142a8:	ldr	pc, [ip, #3496]!	; 0xda8

000142ac <mmal_port_parameter_set@plt>:
   142ac:	add	ip, pc, #0, 12
   142b0:	add	ip, ip, #151552	; 0x25000
   142b4:	ldr	pc, [ip, #3488]!	; 0xda0

000142b8 <__libc_start_main@plt>:
   142b8:	add	ip, pc, #0, 12
   142bc:	add	ip, ip, #151552	; 0x25000
   142c0:	ldr	pc, [ip, #3480]!	; 0xd98

000142c4 <glEnableClientState@plt>:
   142c4:	add	ip, pc, #0, 12
   142c8:	add	ip, ip, #151552	; 0x25000
   142cc:	ldr	pc, [ip, #3472]!	; 0xd90

000142d0 <mmal_port_enable@plt>:
   142d0:	add	ip, pc, #0, 12
   142d4:	add	ip, ip, #151552	; 0x25000
   142d8:	ldr	pc, [ip, #3464]!	; 0xd88

000142dc <signal@plt>:
   142dc:	add	ip, pc, #0, 12
   142e0:	add	ip, ip, #151552	; 0x25000
   142e4:	ldr	pc, [ip, #3456]!	; 0xd80

000142e8 <glEGLImageTargetTexture2DOES@plt>:
   142e8:	add	ip, pc, #0, 12
   142ec:	add	ip, ip, #151552	; 0x25000
   142f0:	ldr	pc, [ip, #3448]!	; 0xd78

000142f4 <glMatrixMode@plt>:
   142f4:	add	ip, pc, #0, 12
   142f8:	add	ip, ip, #151552	; 0x25000
   142fc:	ldr	pc, [ip, #3440]!	; 0xd70

00014300 <__gmon_start__@plt>:
   14300:	add	ip, pc, #0, 12
   14304:	add	ip, ip, #151552	; 0x25000
   14308:	ldr	pc, [ip, #3432]!	; 0xd68

0001430c <sqrtf@plt>:
   1430c:	add	ip, pc, #0, 12
   14310:	add	ip, ip, #151552	; 0x25000
   14314:	ldr	pc, [ip, #3424]!	; 0xd60

00014318 <glClear@plt>:
   14318:	add	ip, pc, #0, 12
   1431c:	add	ip, ip, #151552	; 0x25000
   14320:	ldr	pc, [ip, #3416]!	; 0xd58

00014324 <mmal_port_pool_create@plt>:
   14324:	add	ip, pc, #0, 12
   14328:	add	ip, ip, #151552	; 0x25000
   1432c:	ldr	pc, [ip, #3408]!	; 0xd50

00014330 <glFramebufferTexture2D@plt>:
   14330:	add	ip, pc, #0, 12
   14334:	add	ip, ip, #151552	; 0x25000
   14338:	ldr	pc, [ip, #3400]!	; 0xd48

0001433c <mmal_connection_create@plt>:
   1433c:	add	ip, pc, #0, 12
   14340:	add	ip, ip, #151552	; 0x25000
   14344:	ldr	pc, [ip, #3392]!	; 0xd40

00014348 <rename@plt>:
   14348:	add	ip, pc, #0, 12
   1434c:	add	ip, ip, #151552	; 0x25000
   14350:	ldr	pc, [ip, #3384]!	; 0xd38

00014354 <strncpy@plt>:
   14354:	add	ip, pc, #0, 12
   14358:	add	ip, ip, #151552	; 0x25000
   1435c:	ldr	pc, [ip, #3376]!	; 0xd30

00014360 <fclose@plt>:
   14360:	add	ip, pc, #0, 12
   14364:	add	ip, ip, #151552	; 0x25000
   14368:	ldr	pc, [ip, #3368]!	; 0xd28

0001436c <__printf_chk@plt>:
   1436c:	add	ip, pc, #0, 12
   14370:	add	ip, ip, #151552	; 0x25000
   14374:	ldr	pc, [ip, #3360]!	; 0xd20

00014378 <_IO_getc@plt>:
   14378:	add	ip, pc, #0, 12
   1437c:	add	ip, ip, #151552	; 0x25000
   14380:	ldr	pc, [ip, #3352]!	; 0xd18

00014384 <mmal_buffer_header_release@plt>:
   14384:	add	ip, pc, #0, 12
   14388:	add	ip, ip, #151552	; 0x25000
   1438c:	ldr	pc, [ip, #3344]!	; 0xd10

00014390 <strchr@plt>:
   14390:	add	ip, pc, #0, 12
   14394:	add	ip, ip, #151552	; 0x25000
   14398:	ldr	pc, [ip, #3336]!	; 0xd08

0001439c <strcasecmp@plt>:
   1439c:	add	ip, pc, #0, 12
   143a0:	add	ip, ip, #151552	; 0x25000
   143a4:	ldr	pc, [ip, #3328]!	; 0xd00

000143a8 <glGetError@plt>:
   143a8:	add	ip, pc, #0, 12
   143ac:	add	ip, ip, #151552	; 0x25000
   143b0:	ldr	pc, [ip, #3320]!	; 0xcf8

000143b4 <calloc@plt>:
   143b4:	add	ip, pc, #0, 12
   143b8:	add	ip, ip, #151552	; 0x25000
   143bc:	ldr	pc, [ip, #3312]!	; 0xcf0

000143c0 <mmal_format_full_copy@plt>:
   143c0:	add	ip, pc, #0, 12
   143c4:	add	ip, ip, #151552	; 0x25000
   143c8:	ldr	pc, [ip, #3304]!	; 0xce8

000143cc <vcsm_init@plt>:
   143cc:	add	ip, pc, #0, 12
   143d0:	add	ip, ip, #151552	; 0x25000
   143d4:	ldr	pc, [ip, #3296]!	; 0xce0

000143d8 <vcsm_unlock_ptr@plt>:
   143d8:	add	ip, pc, #0, 12
   143dc:	add	ip, ip, #151552	; 0x25000
   143e0:	ldr	pc, [ip, #3288]!	; 0xcd8

000143e4 <sem_init@plt>:
   143e4:	add	ip, pc, #0, 12
   143e8:	add	ip, ip, #151552	; 0x25000
   143ec:	ldr	pc, [ip, #3280]!	; 0xcd0

000143f0 <vcsm_lock_cache@plt>:
   143f0:	add	ip, pc, #0, 12
   143f4:	add	ip, ip, #151552	; 0x25000
   143f8:	ldr	pc, [ip, #3272]!	; 0xcc8

000143fc <dlclose@plt>:
   143fc:	add	ip, pc, #0, 12
   14400:	add	ip, ip, #151552	; 0x25000
   14404:	ldr	pc, [ip, #3264]!	; 0xcc0

00014408 <eglInitialize@plt>:
   14408:	add	ip, pc, #0, 12
   1440c:	add	ip, ip, #151552	; 0x25000
   14410:	ldr	pc, [ip, #3256]!	; 0xcb8

00014414 <memset@plt>:
   14414:	add	ip, pc, #0, 12
   14418:	add	ip, ip, #151552	; 0x25000
   1441c:	ldr	pc, [ip, #3248]!	; 0xcb0

00014420 <sem_destroy@plt>:
   14420:	add	ip, pc, #0, 12
   14424:	add	ip, ip, #151552	; 0x25000
   14428:	ldr	pc, [ip, #3240]!	; 0xca8

0001442c <vcos_init@plt>:
   1442c:	add	ip, pc, #0, 12
   14430:	add	ip, ip, #151552	; 0x25000
   14434:	ldr	pc, [ip, #3232]!	; 0xca0

00014438 <glDisableVertexAttribArray@plt>:
   14438:	add	ip, pc, #0, 12
   1443c:	add	ip, ip, #151552	; 0x25000
   14440:	ldr	pc, [ip, #3224]!	; 0xc98

00014444 <glDeleteProgram@plt>:
   14444:	add	ip, pc, #0, 12
   14448:	add	ip, ip, #151552	; 0x25000
   1444c:	ldr	pc, [ip, #3216]!	; 0xc90

00014450 <mmal_port_parameter_get@plt>:
   14450:	add	ip, pc, #0, 12
   14454:	add	ip, ip, #151552	; 0x25000
   14458:	ldr	pc, [ip, #3208]!	; 0xc88

0001445c <modf@plt>:
   1445c:	add	ip, pc, #0, 12
   14460:	add	ip, ip, #151552	; 0x25000
   14464:	ldr	pc, [ip, #3200]!	; 0xc80

00014468 <eglDestroyContext@plt>:
   14468:	add	ip, pc, #0, 12
   1446c:	add	ip, ip, #151552	; 0x25000
   14470:	ldr	pc, [ip, #3192]!	; 0xc78

00014474 <glUseProgram@plt>:
   14474:	add	ip, pc, #0, 12
   14478:	add	ip, ip, #151552	; 0x25000
   1447c:	ldr	pc, [ip, #3184]!	; 0xc70

00014480 <vcos_thread_join@plt>:
   14480:	add	ip, pc, #0, 12
   14484:	add	ip, ip, #151552	; 0x25000
   14488:	ldr	pc, [ip, #3176]!	; 0xc68

0001448c <glLoadIdentity@plt>:
   1448c:	add	ip, pc, #0, 12
   14490:	add	ip, ip, #151552	; 0x25000
   14494:	ldr	pc, [ip, #3168]!	; 0xc60

00014498 <glClearColor@plt>:
   14498:	add	ip, pc, #0, 12
   1449c:	add	ip, ip, #151552	; 0x25000
   144a0:	ldr	pc, [ip, #3160]!	; 0xc58

000144a4 <dlopen@plt>:
   144a4:	add	ip, pc, #0, 12
   144a8:	add	ip, ip, #151552	; 0x25000
   144ac:	ldr	pc, [ip, #3152]!	; 0xc50

000144b0 <mmal_queue_get@plt>:
   144b0:	add	ip, pc, #0, 12
   144b4:	add	ip, ip, #151552	; 0x25000
   144b8:	ldr	pc, [ip, #3144]!	; 0xc48

000144bc <eglDestroyImageKHR@plt>:
   144bc:	add	ip, pc, #0, 12
   144c0:	add	ip, ip, #151552	; 0x25000
   144c4:	ldr	pc, [ip, #3136]!	; 0xc40

000144c8 <eglCreateContext@plt>:
   144c8:	add	ip, pc, #0, 12
   144cc:	add	ip, ip, #151552	; 0x25000
   144d0:	ldr	pc, [ip, #3128]!	; 0xc38

000144d4 <__strncat_chk@plt>:
   144d4:	add	ip, pc, #0, 12
   144d8:	add	ip, ip, #151552	; 0x25000
   144dc:	ldr	pc, [ip, #3120]!	; 0xc30

000144e0 <sigwait@plt>:
   144e0:	add	ip, pc, #0, 12
   144e4:	add	ip, ip, #151552	; 0x25000
   144e8:	ldr	pc, [ip, #3112]!	; 0xc28

000144ec <eglMakeCurrent@plt>:
   144ec:	add	ip, pc, #0, 12
   144f0:	add	ip, ip, #151552	; 0x25000
   144f4:	ldr	pc, [ip, #3104]!	; 0xc20

000144f8 <glDeleteBuffers@plt>:
   144f8:	add	ip, pc, #0, 12
   144fc:	add	ip, ip, #151552	; 0x25000
   14500:	ldr	pc, [ip, #3096]!	; 0xc18

00014504 <glReadPixels@plt>:
   14504:	add	ip, pc, #0, 12
   14508:	add	ip, ip, #151552	; 0x25000
   1450c:	ldr	pc, [ip, #3088]!	; 0xc10

00014510 <mmal_component_destroy@plt>:
   14510:	add	ip, pc, #0, 12
   14514:	add	ip, ip, #151552	; 0x25000
   14518:	ldr	pc, [ip, #3080]!	; 0xc08

0001451c <glDeleteShader@plt>:
   1451c:	add	ip, pc, #0, 12
   14520:	add	ip, ip, #151552	; 0x25000
   14524:	ldr	pc, [ip, #3072]!	; 0xc00

00014528 <glCheckFramebufferStatus@plt>:
   14528:	add	ip, pc, #0, 12
   1452c:	add	ip, ip, #151552	; 0x25000
   14530:	ldr	pc, [ip, #3064]!	; 0xbf8

00014534 <free@plt>:
   14534:	add	ip, pc, #0, 12
   14538:	add	ip, ip, #151552	; 0x25000
   1453c:	ldr	pc, [ip, #3056]!	; 0xbf0

00014540 <glEnableVertexAttribArray@plt>:
   14540:	add	ip, pc, #0, 12
   14544:	add	ip, ip, #151552	; 0x25000
   14548:	ldr	pc, [ip, #3048]!	; 0xbe8

0001454c <vc_dispmanx_update_submit_sync@plt>:
   1454c:	add	ip, pc, #0, 12
   14550:	add	ip, ip, #151552	; 0x25000
   14554:	ldr	pc, [ip, #3040]!	; 0xbe0

00014558 <glUniform1f@plt>:
   14558:	add	ip, pc, #0, 12
   1455c:	add	ip, ip, #151552	; 0x25000
   14560:	ldr	pc, [ip, #3032]!	; 0xbd8

00014564 <glGenFramebuffers@plt>:
   14564:	add	ip, pc, #0, 12
   14568:	add	ip, ip, #151552	; 0x25000
   1456c:	ldr	pc, [ip, #3024]!	; 0xbd0

00014570 <gettimeofday@plt>:
   14570:	add	ip, pc, #0, 12
   14574:	add	ip, ip, #151552	; 0x25000
   14578:	ldr	pc, [ip, #3016]!	; 0xbc8

0001457c <glActiveTexture@plt>:
   1457c:	add	ip, pc, #0, 12
   14580:	add	ip, ip, #151552	; 0x25000
   14584:	ldr	pc, [ip, #3008]!	; 0xbc0

00014588 <glBufferData@plt>:
   14588:	add	ip, pc, #0, 12
   1458c:	add	ip, ip, #151552	; 0x25000
   14590:	ldr	pc, [ip, #3000]!	; 0xbb8

00014594 <fseek@plt>:
   14594:	add	ip, pc, #0, 12
   14598:	add	ip, ip, #151552	; 0x25000
   1459c:	ldr	pc, [ip, #2992]!	; 0xbb0

000145a0 <__asprintf_chk@plt>:
   145a0:	add	ip, pc, #0, 12
   145a4:	add	ip, ip, #151552	; 0x25000
   145a8:	ldr	pc, [ip, #2984]!	; 0xba8

000145ac <glNormalPointer@plt>:
   145ac:	add	ip, pc, #0, 12
   145b0:	add	ip, ip, #151552	; 0x25000
   145b4:	ldr	pc, [ip, #2976]!	; 0xba0

000145b8 <mmal_port_disable@plt>:
   145b8:	add	ip, pc, #0, 12
   145bc:	add	ip, ip, #151552	; 0x25000
   145c0:	ldr	pc, [ip, #2968]!	; 0xb98

000145c4 <__memcpy_chk@plt>:
   145c4:	add	ip, pc, #0, 12
   145c8:	add	ip, ip, #151552	; 0x25000
   145cc:	ldr	pc, [ip, #2960]!	; 0xb90

000145d0 <symlink@plt>:
   145d0:	add	ip, pc, #0, 12
   145d4:	add	ip, ip, #151552	; 0x25000
   145d8:	ldr	pc, [ip, #2952]!	; 0xb88

000145dc <pthread_mutex_unlock@plt>:
   145dc:	add	ip, pc, #0, 12
   145e0:	add	ip, ip, #151552	; 0x25000
   145e4:	ldr	pc, [ip, #2944]!	; 0xb80

000145e8 <bcm_host_init@plt>:
   145e8:	add	ip, pc, #0, 12
   145ec:	add	ip, ip, #151552	; 0x25000
   145f0:	ldr	pc, [ip, #2936]!	; 0xb78

000145f4 <mmal_queue_put@plt>:
   145f4:	add	ip, pc, #0, 12
   145f8:	add	ip, ip, #151552	; 0x25000
   145fc:	ldr	pc, [ip, #2928]!	; 0xb70

00014600 <eglSwapBuffers@plt>:
   14600:	add	ip, pc, #0, 12
   14604:	add	ip, ip, #151552	; 0x25000
   14608:	ldr	pc, [ip, #2920]!	; 0xb68

0001460c <fflush@plt>:
   1460c:	add	ip, pc, #0, 12
   14610:	add	ip, ip, #151552	; 0x25000
   14614:	ldr	pc, [ip, #2912]!	; 0xb60

00014618 <vc_gencmd_number_property@plt>:
   14618:	add	ip, pc, #0, 12
   1461c:	add	ip, ip, #151552	; 0x25000
   14620:	ldr	pc, [ip, #2904]!	; 0xb58

00014624 <glGetProgramInfoLog@plt>:
   14624:	add	ip, pc, #0, 12
   14628:	add	ip, ip, #151552	; 0x25000
   1462c:	ldr	pc, [ip, #2896]!	; 0xb50

00014630 <pthread_mutex_lock@plt>:
   14630:	add	ip, pc, #0, 12
   14634:	add	ip, ip, #151552	; 0x25000
   14638:	ldr	pc, [ip, #2888]!	; 0xb48

0001463c <strlen@plt>:
   1463c:	add	ip, pc, #0, 12
   14640:	add	ip, ip, #151552	; 0x25000
   14644:	ldr	pc, [ip, #2880]!	; 0xb40

00014648 <sscanf@plt>:
   14648:	add	ip, pc, #0, 12
   1464c:	add	ip, ip, #151552	; 0x25000
   14650:	ldr	pc, [ip, #2872]!	; 0xb38

00014654 <vc_gencmd@plt>:
   14654:	add	ip, pc, #0, 12
   14658:	add	ip, ip, #151552	; 0x25000
   1465c:	ldr	pc, [ip, #2864]!	; 0xb30

00014660 <glBindTexture@plt>:
   14660:	add	ip, pc, #0, 12
   14664:	add	ip, ip, #151552	; 0x25000
   14668:	ldr	pc, [ip, #2856]!	; 0xb28

0001466c <pthread_create@plt>:
   1466c:	add	ip, pc, #0, 12
   14670:	add	ip, ip, #151552	; 0x25000
   14674:	ldr	pc, [ip, #2848]!	; 0xb20

00014678 <memcpy@plt>:
   14678:	add	ip, pc, #0, 12
   1467c:	add	ip, ip, #151552	; 0x25000
   14680:	ldr	pc, [ip, #2840]!	; 0xb18

00014684 <glGetProgramiv@plt>:
   14684:	add	ip, pc, #0, 12
   14688:	add	ip, ip, #151552	; 0x25000
   1468c:	ldr	pc, [ip, #2832]!	; 0xb10

00014690 <fopen64@plt>:
   14690:	add	ip, pc, #0, 12
   14694:	add	ip, ip, #151552	; 0x25000
   14698:	ldr	pc, [ip, #2824]!	; 0xb08

0001469c <eglDestroySurface@plt>:
   1469c:	add	ip, pc, #0, 12
   146a0:	add	ip, ip, #151552	; 0x25000
   146a4:	ldr	pc, [ip, #2816]!	; 0xb00

000146a8 <glTranslatef@plt>:
   146a8:	add	ip, pc, #0, 12
   146ac:	add	ip, ip, #151552	; 0x25000
   146b0:	ldr	pc, [ip, #2808]!	; 0xaf8

000146b4 <glCreateShader@plt>:
   146b4:	add	ip, pc, #0, 12
   146b8:	add	ip, ip, #151552	; 0x25000
   146bc:	ldr	pc, [ip, #2800]!	; 0xaf0

000146c0 <glDeleteTextures@plt>:
   146c0:	add	ip, pc, #0, 12
   146c4:	add	ip, ip, #151552	; 0x25000
   146c8:	ldr	pc, [ip, #2792]!	; 0xae8

000146cc <glDisableClientState@plt>:
   146cc:	add	ip, pc, #0, 12
   146d0:	add	ip, ip, #151552	; 0x25000
   146d4:	ldr	pc, [ip, #2784]!	; 0xae0

000146d8 <glGetAttribLocation@plt>:
   146d8:	add	ip, pc, #0, 12
   146dc:	add	ip, ip, #151552	; 0x25000
   146e0:	ldr	pc, [ip, #2776]!	; 0xad8

000146e4 <sigaddset@plt>:
   146e4:	add	ip, pc, #0, 12
   146e8:	add	ip, ip, #151552	; 0x25000
   146ec:	ldr	pc, [ip, #2768]!	; 0xad0

000146f0 <strcpy@plt>:
   146f0:	add	ip, pc, #0, 12
   146f4:	add	ip, ip, #151552	; 0x25000
   146f8:	ldr	pc, [ip, #2760]!	; 0xac8

000146fc <sem_post@plt>:
   146fc:	add	ip, pc, #0, 12
   14700:	add	ip, ip, #151552	; 0x25000
   14704:	ldr	pc, [ip, #2752]!	; 0xac0

00014708 <pthread_sigmask@plt>:
   14708:	add	ip, pc, #0, 12
   1470c:	add	ip, ip, #151552	; 0x25000
   14710:	ldr	pc, [ip, #2744]!	; 0xab8

00014714 <glCreateProgram@plt>:
   14714:	add	ip, pc, #0, 12
   14718:	add	ip, ip, #151552	; 0x25000
   1471c:	ldr	pc, [ip, #2736]!	; 0xab0

00014720 <pthread_mutex_destroy@plt>:
   14720:	add	ip, pc, #0, 12
   14724:	add	ip, ip, #151552	; 0x25000
   14728:	ldr	pc, [ip, #2728]!	; 0xaa8

0001472c <eglCreateImageKHR@plt>:
   1472c:	add	ip, pc, #0, 12
   14730:	add	ip, ip, #151552	; 0x25000
   14734:	ldr	pc, [ip, #2720]!	; 0xaa0

00014738 <glFrustumf@plt>:
   14738:	add	ip, pc, #0, 12
   1473c:	add	ip, ip, #151552	; 0x25000
   14740:	ldr	pc, [ip, #2712]!	; 0xa98

00014744 <raise@plt>:
   14744:	add	ip, pc, #0, 12
   14748:	add	ip, ip, #151552	; 0x25000
   1474c:	ldr	pc, [ip, #2704]!	; 0xa90

00014750 <vc_dispmanx_display_open@plt>:
   14750:	add	ip, pc, #0, 12
   14754:	add	ip, ip, #151552	; 0x25000
   14758:	ldr	pc, [ip, #2696]!	; 0xa88

0001475c <__snprintf_chk@plt>:
   1475c:	add	ip, pc, #0, 12
   14760:	add	ip, ip, #151552	; 0x25000
   14764:	ldr	pc, [ip, #2688]!	; 0xa80

00014768 <pthread_mutex_init@plt>:
   14768:	add	ip, pc, #0, 12
   1476c:	add	ip, ip, #151552	; 0x25000
   14770:	ldr	pc, [ip, #2680]!	; 0xa78

00014774 <mmal_component_disable@plt>:
   14774:	add	ip, pc, #0, 12
   14778:	add	ip, ip, #151552	; 0x25000
   1477c:	ldr	pc, [ip, #2672]!	; 0xa70

00014780 <glGenBuffers@plt>:
   14780:	add	ip, pc, #0, 12
   14784:	add	ip, ip, #151552	; 0x25000
   14788:	ldr	pc, [ip, #2664]!	; 0xa68

0001478c <vc_dispmanx_display_close@plt>:
   1478c:	add	ip, pc, #0, 12
   14790:	add	ip, ip, #151552	; 0x25000
   14794:	ldr	pc, [ip, #2656]!	; 0xa60

00014798 <vcos_thread_create@plt>:
   14798:	add	ip, pc, #0, 12
   1479c:	add	ip, ip, #151552	; 0x25000
   147a0:	ldr	pc, [ip, #2648]!	; 0xa58

000147a4 <glUniform1i@plt>:
   147a4:	add	ip, pc, #0, 12
   147a8:	add	ip, ip, #151552	; 0x25000
   147ac:	ldr	pc, [ip, #2640]!	; 0xa50

000147b0 <fwrite@plt>:
   147b0:	add	ip, pc, #0, 12
   147b4:	add	ip, ip, #151552	; 0x25000
   147b8:	ldr	pc, [ip, #2632]!	; 0xa48

000147bc <__isnan@plt>:
   147bc:	add	ip, pc, #0, 12
   147c0:	add	ip, ip, #151552	; 0x25000
   147c4:	ldr	pc, [ip, #2624]!	; 0xa40

000147c8 <time@plt>:
   147c8:	add	ip, pc, #0, 12
   147cc:	add	ip, ip, #151552	; 0x25000
   147d0:	ldr	pc, [ip, #2616]!	; 0xa38

000147d4 <__ctype_b_loc@plt>:
   147d4:	add	ip, pc, #0, 12
   147d8:	add	ip, ip, #151552	; 0x25000
   147dc:	ldr	pc, [ip, #2608]!	; 0xa30

000147e0 <glRotatef@plt>:
   147e0:	add	ip, pc, #0, 12
   147e4:	add	ip, ip, #151552	; 0x25000
   147e8:	ldr	pc, [ip, #2600]!	; 0xa28

000147ec <malloc@plt>:
   147ec:	add	ip, pc, #0, 12
   147f0:	add	ip, ip, #151552	; 0x25000
   147f4:	ldr	pc, [ip, #2592]!	; 0xa20

000147f8 <eglGetError@plt>:
   147f8:	add	ip, pc, #0, 12
   147fc:	add	ip, ip, #151552	; 0x25000
   14800:	ldr	pc, [ip, #2584]!	; 0xa18

00014804 <__stack_chk_fail@plt>:
   14804:	add	ip, pc, #0, 12
   14808:	add	ip, ip, #151552	; 0x25000
   1480c:	ldr	pc, [ip, #2576]!	; 0xa10

00014810 <mmal_queue_create@plt>:
   14810:	add	ip, pc, #0, 12
   14814:	add	ip, ip, #151552	; 0x25000
   14818:	ldr	pc, [ip, #2568]!	; 0xa08

0001481c <mmal_component_enable@plt>:
   1481c:	add	ip, pc, #0, 12
   14820:	add	ip, ip, #151552	; 0x25000
   14824:	ldr	pc, [ip, #2560]!	; 0xa00

00014828 <glDepthFunc@plt>:
   14828:	add	ip, pc, #0, 12
   1482c:	add	ip, ip, #151552	; 0x25000
   14830:	ldr	pc, [ip, #2552]!	; 0x9f8

00014834 <__fprintf_chk@plt>:
   14834:	add	ip, pc, #0, 12
   14838:	add	ip, ip, #151552	; 0x25000
   1483c:	ldr	pc, [ip, #2544]!	; 0x9f0

00014840 <glLightfv@plt>:
   14840:	add	ip, pc, #0, 12
   14844:	add	ip, ip, #151552	; 0x25000
   14848:	ldr	pc, [ip, #2536]!	; 0x9e8

0001484c <glDrawArrays@plt>:
   1484c:	add	ip, pc, #0, 12
   14850:	add	ip, ip, #151552	; 0x25000
   14854:	ldr	pc, [ip, #2528]!	; 0x9e0

00014858 <dlerror@plt>:
   14858:	add	ip, pc, #0, 12
   1485c:	add	ip, ip, #151552	; 0x25000
   14860:	ldr	pc, [ip, #2520]!	; 0x9d8

00014864 <fputc@plt>:
   14864:	add	ip, pc, #0, 12
   14868:	add	ip, ip, #151552	; 0x25000
   1486c:	ldr	pc, [ip, #2512]!	; 0x9d0

00014870 <glClearDepthf@plt>:
   14870:	add	ip, pc, #0, 12
   14874:	add	ip, ip, #151552	; 0x25000
   14878:	ldr	pc, [ip, #2504]!	; 0x9c8

0001487c <vcos_pthreads_map_errno@plt>:
   1487c:	add	ip, pc, #0, 12
   14880:	add	ip, ip, #151552	; 0x25000
   14884:	ldr	pc, [ip, #2496]!	; 0x9c0

00014888 <mmal_queue_destroy@plt>:
   14888:	add	ip, pc, #0, 12
   1488c:	add	ip, ip, #151552	; 0x25000
   14890:	ldr	pc, [ip, #2488]!	; 0x9b8

00014894 <glVertexAttrib2f@plt>:
   14894:	add	ip, pc, #0, 12
   14898:	add	ip, ip, #151552	; 0x25000
   1489c:	ldr	pc, [ip, #2480]!	; 0x9b0

000148a0 <glVertexAttribPointer@plt>:
   148a0:	add	ip, pc, #0, 12
   148a4:	add	ip, ip, #151552	; 0x25000
   148a8:	ldr	pc, [ip, #2472]!	; 0x9a8

000148ac <puts@plt>:
   148ac:	add	ip, pc, #0, 12
   148b0:	add	ip, ip, #151552	; 0x25000
   148b4:	ldr	pc, [ip, #2464]!	; 0x9a0

000148b8 <strftime@plt>:
   148b8:	add	ip, pc, #0, 12
   148bc:	add	ip, ip, #151552	; 0x25000
   148c0:	ldr	pc, [ip, #2456]!	; 0x998

000148c4 <glBindBuffer@plt>:
   148c4:	add	ip, pc, #0, 12
   148c8:	add	ip, ip, #151552	; 0x25000
   148cc:	ldr	pc, [ip, #2448]!	; 0x990

000148d0 <glBindFramebuffer@plt>:
   148d0:	add	ip, pc, #0, 12
   148d4:	add	ip, ip, #151552	; 0x25000
   148d8:	ldr	pc, [ip, #2440]!	; 0x988

000148dc <glLinkProgram@plt>:
   148dc:	add	ip, pc, #0, 12
   148e0:	add	ip, ip, #151552	; 0x25000
   148e4:	ldr	pc, [ip, #2432]!	; 0x980

000148e8 <mmal_port_format_commit@plt>:
   148e8:	add	ip, pc, #0, 12
   148ec:	add	ip, ip, #151552	; 0x25000
   148f0:	ldr	pc, [ip, #2424]!	; 0x978

000148f4 <vcos_log_register@plt>:
   148f4:	add	ip, pc, #0, 12
   148f8:	add	ip, ip, #151552	; 0x25000
   148fc:	ldr	pc, [ip, #2416]!	; 0x970

00014900 <mmal_buffer_header_mem_unlock@plt>:
   14900:	add	ip, pc, #0, 12
   14904:	add	ip, ip, #151552	; 0x25000
   14908:	ldr	pc, [ip, #2408]!	; 0x968

0001490c <mmal_port_parameter_set_int32@plt>:
   1490c:	add	ip, pc, #0, 12
   14910:	add	ip, ip, #151552	; 0x25000
   14914:	ldr	pc, [ip, #2400]!	; 0x960

00014918 <mmal_queue_length@plt>:
   14918:	add	ip, pc, #0, 12
   1491c:	add	ip, ip, #151552	; 0x25000
   14920:	ldr	pc, [ip, #2392]!	; 0x958

00014924 <vcos_pthreads_logging_assert@plt>:
   14924:	add	ip, pc, #0, 12
   14928:	add	ip, ip, #151552	; 0x25000
   1492c:	ldr	pc, [ip, #2384]!	; 0x950

00014930 <glGetShaderInfoLog@plt>:
   14930:	add	ip, pc, #0, 12
   14934:	add	ip, ip, #151552	; 0x25000
   14938:	ldr	pc, [ip, #2376]!	; 0x948

0001493c <vcos_log_impl@plt>:
   1493c:	add	ip, pc, #0, 12
   14940:	add	ip, ip, #151552	; 0x25000
   14944:	ldr	pc, [ip, #2368]!	; 0x940

00014948 <glShaderSource@plt>:
   14948:	add	ip, pc, #0, 12
   1494c:	add	ip, ip, #151552	; 0x25000
   14950:	ldr	pc, [ip, #2360]!	; 0x938

00014954 <glVertexPointer@plt>:
   14954:	add	ip, pc, #0, 12
   14958:	add	ip, ip, #151552	; 0x25000
   1495c:	ldr	pc, [ip, #2352]!	; 0x930

00014960 <glViewport@plt>:
   14960:	add	ip, pc, #0, 12
   14964:	add	ip, ip, #151552	; 0x25000
   14968:	ldr	pc, [ip, #2344]!	; 0x928

0001496c <fread@plt>:
   1496c:	add	ip, pc, #0, 12
   14970:	add	ip, ip, #151552	; 0x25000
   14974:	ldr	pc, [ip, #2336]!	; 0x920

00014978 <strncmp@plt>:
   14978:	add	ip, pc, #0, 12
   1497c:	add	ip, ip, #151552	; 0x25000
   14980:	ldr	pc, [ip, #2328]!	; 0x918

00014984 <link@plt>:
   14984:	add	ip, pc, #0, 12
   14988:	add	ip, ip, #151552	; 0x25000
   1498c:	ldr	pc, [ip, #2320]!	; 0x910

00014990 <nanosleep@plt>:
   14990:	add	ip, pc, #0, 12
   14994:	add	ip, ip, #151552	; 0x25000
   14998:	ldr	pc, [ip, #2312]!	; 0x908

0001499c <__memmove_chk@plt>:
   1499c:	add	ip, pc, #0, 12
   149a0:	add	ip, ip, #151552	; 0x25000
   149a4:	ldr	pc, [ip, #2304]!	; 0x900

000149a8 <eglGetDisplay@plt>:
   149a8:	add	ip, pc, #0, 12
   149ac:	add	ip, ip, #151552	; 0x25000
   149b0:	ldr	pc, [ip, #2296]!	; 0x8f8

000149b4 <eglTerminate@plt>:
   149b4:	add	ip, pc, #0, 12
   149b8:	add	ip, ip, #151552	; 0x25000
   149bc:	ldr	pc, [ip, #2288]!	; 0x8f0

000149c0 <glGetUniformLocation@plt>:
   149c0:	add	ip, pc, #0, 12
   149c4:	add	ip, ip, #151552	; 0x25000
   149c8:	ldr	pc, [ip, #2280]!	; 0x8e8

000149cc <mmal_component_create@plt>:
   149cc:	add	ip, pc, #0, 12
   149d0:	add	ip, ip, #151552	; 0x25000
   149d4:	ldr	pc, [ip, #2272]!	; 0x8e0

000149d8 <sem_wait@plt>:
   149d8:	add	ip, pc, #0, 12
   149dc:	add	ip, ip, #151552	; 0x25000
   149e0:	ldr	pc, [ip, #2264]!	; 0x8d8

000149e4 <glTexParameteri@plt>:
   149e4:	add	ip, pc, #0, 12
   149e8:	add	ip, ip, #151552	; 0x25000
   149ec:	ldr	pc, [ip, #2256]!	; 0x8d0

000149f0 <mmal_port_pool_destroy@plt>:
   149f0:	add	ip, pc, #0, 12
   149f4:	add	ip, ip, #151552	; 0x25000
   149f8:	ldr	pc, [ip, #2248]!	; 0x8c8

000149fc <strcmp@plt>:
   149fc:	add	ip, pc, #0, 12
   14a00:	add	ip, ip, #151552	; 0x25000
   14a04:	ldr	pc, [ip, #2240]!	; 0x8c0

00014a08 <mmal_port_parameter_set_boolean@plt>:
   14a08:	add	ip, pc, #0, 12
   14a0c:	add	ip, ip, #151552	; 0x25000
   14a10:	ldr	pc, [ip, #2232]!	; 0x8b8

00014a14 <exit@plt>:
   14a14:	add	ip, pc, #0, 12
   14a18:	add	ip, ip, #151552	; 0x25000
   14a1c:	ldr	pc, [ip, #2224]!	; 0x8b0

00014a20 <eglCreateWindowSurface@plt>:
   14a20:	add	ip, pc, #0, 12
   14a24:	add	ip, ip, #151552	; 0x25000
   14a28:	ldr	pc, [ip, #2216]!	; 0x8a8

00014a2c <__errno_location@plt>:
   14a2c:	add	ip, pc, #0, 12
   14a30:	add	ip, ip, #151552	; 0x25000
   14a34:	ldr	pc, [ip, #2208]!	; 0x8a0

00014a38 <dlsym@plt>:
   14a38:	add	ip, pc, #0, 12
   14a3c:	add	ip, ip, #151552	; 0x25000
   14a40:	ldr	pc, [ip, #2200]!	; 0x898

00014a44 <basename@plt>:
   14a44:	add	ip, pc, #0, 12
   14a48:	add	ip, ip, #151552	; 0x25000
   14a4c:	ldr	pc, [ip, #2192]!	; 0x890

00014a50 <mmal_port_send_buffer@plt>:
   14a50:	add	ip, pc, #0, 12
   14a54:	add	ip, ip, #151552	; 0x25000
   14a58:	ldr	pc, [ip, #2184]!	; 0x888

00014a5c <glGenTextures@plt>:
   14a5c:	add	ip, pc, #0, 12
   14a60:	add	ip, ip, #151552	; 0x25000
   14a64:	ldr	pc, [ip, #2176]!	; 0x880

00014a68 <mmal_format_copy@plt>:
   14a68:	add	ip, pc, #0, 12
   14a6c:	add	ip, ip, #151552	; 0x25000
   14a70:	ldr	pc, [ip, #2168]!	; 0x878

00014a74 <pthread_join@plt>:
   14a74:	add	ip, pc, #0, 12
   14a78:	add	ip, ip, #151552	; 0x25000
   14a7c:	ldr	pc, [ip, #2160]!	; 0x870

00014a80 <glCompileShader@plt>:
   14a80:	add	ip, pc, #0, 12
   14a84:	add	ip, ip, #151552	; 0x25000
   14a88:	ldr	pc, [ip, #2152]!	; 0x868

00014a8c <glFinish@plt>:
   14a8c:	add	ip, pc, #0, 12
   14a90:	add	ip, ip, #151552	; 0x25000
   14a94:	ldr	pc, [ip, #2144]!	; 0x860

00014a98 <mmal_pool_destroy@plt>:
   14a98:	add	ip, pc, #0, 12
   14a9c:	add	ip, ip, #151552	; 0x25000
   14aa0:	ldr	pc, [ip, #2136]!	; 0x858

00014aa4 <eglChooseConfig@plt>:
   14aa4:	add	ip, pc, #0, 12
   14aa8:	add	ip, ip, #151552	; 0x25000
   14aac:	ldr	pc, [ip, #2128]!	; 0x850

00014ab0 <fputs@plt>:
   14ab0:	add	ip, pc, #0, 12
   14ab4:	add	ip, ip, #151552	; 0x25000
   14ab8:	ldr	pc, [ip, #2120]!	; 0x848

Disassembly of section .text:

00014ac0 <main@@Base>:
   14ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac4:	vpush	{d8-d12}
   14ac8:	sub	sp, sp, #1792	; 0x700
   14acc:	ldr	sl, [pc, #4056]	; 15aac <main@@Base+0xfec>
   14ad0:	sub	sp, sp, #4
   14ad4:	ldr	r3, [pc, #4052]	; 15ab0 <main@@Base+0xff0>
   14ad8:	mov	r8, r0
   14adc:	add	sl, pc, sl
   14ae0:	mov	r5, r1
   14ae4:	ldr	r3, [sl, r3]
   14ae8:	str	r3, [sp, #56]	; 0x38
   14aec:	ldr	r3, [r3]
   14af0:	str	r3, [sp, #1788]	; 0x6fc
   14af4:	bl	145e8 <bcm_host_init@plt>
   14af8:	ldr	r3, [pc, #4020]	; 15ab4 <main@@Base+0xff4>
   14afc:	ldr	r0, [pc, #4020]	; 15ab8 <main@@Base+0xff8>
   14b00:	ldr	fp, [sl, r3]
   14b04:	add	r0, pc, r0
   14b08:	mov	r1, fp
   14b0c:	bl	148f4 <vcos_log_register@plt>
   14b10:	ldr	r3, [pc, #4004]	; 15abc <main@@Base+0xffc>
   14b14:	mov	r0, #2
   14b18:	ldr	r3, [sl, r3]
   14b1c:	mov	r1, r3
   14b20:	str	r3, [sp, #60]	; 0x3c
   14b24:	bl	142dc <signal@plt>
   14b28:	mov	r1, #1
   14b2c:	mov	r0, #10
   14b30:	bl	142dc <signal@plt>
   14b34:	mov	r1, #1
   14b38:	mov	r0, #12
   14b3c:	bl	142dc <signal@plt>
   14b40:	ldr	r0, [r5]
   14b44:	bl	1b2ec <set_app_name@@Base>
   14b48:	cmp	r8, #1
   14b4c:	beq	15a4c <main@@Base+0xf8c>
   14b50:	add	r9, sp, #336	; 0x150
   14b54:	mov	r1, #0
   14b58:	movw	r2, #1256	; 0x4e8
   14b5c:	add	ip, sp, #1136	; 0x470
   14b60:	mov	r0, r9
   14b64:	str	ip, [sp, #64]	; 0x40
   14b68:	bl	14414 <memset@plt>
   14b6c:	mov	r0, r9
   14b70:	bl	1ac50 <raspicommonsettings_set_defaults@@Base>
   14b74:	add	r0, r9, #264	; 0x108
   14b78:	mov	ip, #64	; 0x40
   14b7c:	mov	r1, #48	; 0x30
   14b80:	mov	r4, #1
   14b84:	str	ip, [sp, #404]	; 0x194
   14b88:	str	r1, [sp, #408]	; 0x198
   14b8c:	mvn	r2, #0
   14b90:	movw	r3, #20554	; 0x504a
   14b94:	str	r2, [sp, #380]	; 0x17c
   14b98:	movt	r3, #18245	; 0x4745
   14b9c:	mov	r2, #85	; 0x55
   14ba0:	str	r3, [sp, #424]	; 0x1a8
   14ba4:	mov	r3, #0
   14ba8:	str	r2, [sp, #384]	; 0x180
   14bac:	mov	r2, #35	; 0x23
   14bb0:	str	r3, [sp, #388]	; 0x184
   14bb4:	str	r2, [sp, #412]	; 0x19c
   14bb8:	str	r3, [sp, #392]	; 0x188
   14bbc:	str	r3, [sp, #396]	; 0x18c
   14bc0:	str	r3, [sp, #416]	; 0x1a0
   14bc4:	str	r3, [sp, #1112]	; 0x458
   14bc8:	str	r3, [sp, #1116]	; 0x45c
   14bcc:	str	r3, [sp, #1124]	; 0x464
   14bd0:	str	r3, [sp, #1128]	; 0x468
   14bd4:	str	r3, [sp, #1132]	; 0x46c
   14bd8:	str	r3, [sp, #556]	; 0x22c
   14bdc:	str	r3, [sp, #564]	; 0x234
   14be0:	str	r3, [sp, #568]	; 0x238
   14be4:	str	r3, [sp, #572]	; 0x23c
   14be8:	str	r3, [sp, #576]	; 0x240
   14bec:	str	r3, [sp, #580]	; 0x244
   14bf0:	str	r3, [sp, #584]	; 0x248
   14bf4:	str	r3, [sp, #588]	; 0x24c
   14bf8:	str	r3, [sp, #592]	; 0x250
   14bfc:	str	r3, [sp, #596]	; 0x254
   14c00:	mov	r3, #250	; 0xfa
   14c04:	str	r4, [sp, #400]	; 0x190
   14c08:	str	r3, [sp, #420]	; 0x1a4
   14c0c:	str	r4, [sp, #560]	; 0x230
   14c10:	bl	1a9b4 <raspipreview_set_defaults@@Base>
   14c14:	add	r0, r9, #296	; 0x128
   14c18:	bl	186c8 <raspicamcontrol_set_defaults@@Base>
   14c1c:	add	r0, sp, #1136	; 0x470
   14c20:	bl	1d8e0 <raspitex_set_defaults@@Base>
   14c24:	cmp	r8, r4
   14c28:	ble	14d58 <main@@Base+0x298>
   14c2c:	ldr	ip, [pc, #3724]	; 15ac0 <main@@Base+0x1000>
   14c30:	mov	r1, r4
   14c34:	ldr	r3, [pc, #3720]	; 15ac4 <main@@Base+0x1004>
   14c38:	add	ip, pc, ip
   14c3c:	str	ip, [sp, #76]	; 0x4c
   14c40:	ldr	ip, [pc, #3712]	; 15ac8 <main@@Base+0x1008>
   14c44:	add	r3, pc, r3
   14c48:	add	r3, r3, #28
   14c4c:	str	r3, [sp, #80]	; 0x50
   14c50:	add	ip, pc, ip
   14c54:	str	ip, [sp, #68]	; 0x44
   14c58:	ldr	ip, [pc, #3692]	; 15acc <main@@Base+0x100c>
   14c5c:	add	ip, pc, ip
   14c60:	str	ip, [sp, #72]	; 0x48
   14c64:	b	14c8c <main@@Base+0x1cc>
   14c68:	ldrb	r3, [r2]
   14c6c:	cmp	r3, #45	; 0x2d
   14c70:	beq	14cb4 <main@@Base+0x1f4>
   14c74:	mov	r1, #0
   14c78:	add	r3, r4, #1
   14c7c:	mov	r2, r1
   14c80:	mov	r4, r3
   14c84:	cmp	r2, #0
   14c88:	beq	14d5c <main@@Base+0x29c>
   14c8c:	ldr	r2, [r5, r4, lsl #2]
   14c90:	lsl	r6, r4, #2
   14c94:	add	r7, r5, r6
   14c98:	cmp	r2, #0
   14c9c:	bne	14c68 <main@@Base+0x1a8>
   14ca0:	add	r3, r4, #1
   14ca4:	cmp	r8, r3
   14ca8:	movle	r2, #0
   14cac:	andgt	r2, r1, #1
   14cb0:	b	14c80 <main@@Base+0x1c0>
   14cb4:	ldr	r0, [pc, #3604]	; 15ad0 <main@@Base+0x1010>
   14cb8:	add	r2, r2, #1
   14cbc:	mov	r1, #19
   14cc0:	add	r3, sp, #160	; 0xa0
   14cc4:	add	r0, pc, r0
   14cc8:	bl	1a450 <raspicli_get_command_id@@Base>
   14ccc:	cmn	r0, #1
   14cd0:	addeq	ip, r4, #1
   14cd4:	beq	156b4 <main@@Base+0xbf4>
   14cd8:	ldr	r3, [sp, #160]	; 0xa0
   14cdc:	cmp	r3, #0
   14ce0:	addle	ip, r4, #1
   14ce4:	ble	14d00 <main@@Base+0x240>
   14ce8:	add	r3, r4, #1
   14cec:	cmp	r8, r3
   14cf0:	mov	ip, r3
   14cf4:	movle	r2, #0
   14cf8:	movle	r1, #1
   14cfc:	ble	14c80 <main@@Base+0x1c0>
   14d00:	cmp	r0, #18
   14d04:	addls	pc, pc, r0, lsl #2
   14d08:	b	156b4 <main@@Base+0xbf4>
   14d0c:	b	153a0 <main@@Base+0x8e0>
   14d10:	b	154d0 <main@@Base+0xa10>
   14d14:	b	153f0 <main@@Base+0x930>
   14d18:	b	1547c <main@@Base+0x9bc>
   14d1c:	b	15650 <main@@Base+0xb90>
   14d20:	b	155e0 <main@@Base+0xb20>
   14d24:	b	15594 <main@@Base+0xad4>
   14d28:	b	15558 <main@@Base+0xa98>
   14d2c:	b	1554c <main@@Base+0xa8c>
   14d30:	b	15500 <main@@Base+0xa40>
   14d34:	b	154dc <main@@Base+0xa1c>
   14d38:	b	15364 <main@@Base+0x8a4>
   14d3c:	b	15358 <main@@Base+0x898>
   14d40:	b	1533c <main@@Base+0x87c>
   14d44:	b	153e4 <main@@Base+0x924>
   14d48:	b	153cc <main@@Base+0x90c>
   14d4c:	b	153d8 <main@@Base+0x918>
   14d50:	b	15468 <main@@Base+0x9a8>
   14d54:	b	1543c <main@@Base+0x97c>
   14d58:	mov	r1, r4
   14d5c:	ldr	r3, [sp, #1408]	; 0x580
   14d60:	ldr	ip, [sp, #612]	; 0x264
   14d64:	cmp	r3, #0
   14d68:	ldr	r0, [sp, #616]	; 0x268
   14d6c:	ldr	r2, [sp, #620]	; 0x26c
   14d70:	ldr	r3, [sp, #624]	; 0x270
   14d74:	streq	ip, [sp, #1388]	; 0x56c
   14d78:	streq	r0, [sp, #1392]	; 0x570
   14d7c:	streq	r2, [sp, #1396]	; 0x574
   14d80:	streq	r3, [sp, #1400]	; 0x578
   14d84:	cmp	r1, #0
   14d88:	ldr	lr, [sp, #608]	; 0x260
   14d8c:	ldr	r1, [sp, #372]	; 0x174
   14d90:	str	ip, [sp, #1372]	; 0x55c
   14d94:	str	r0, [sp, #1376]	; 0x560
   14d98:	str	r2, [sp, #1380]	; 0x564
   14d9c:	str	r3, [sp, #1384]	; 0x568
   14da0:	str	lr, [sp, #1404]	; 0x57c
   14da4:	str	r1, [sp, #1540]	; 0x604
   14da8:	beq	14f70 <main@@Base+0x4b0>
   14dac:	ldr	r3, [sp, #380]	; 0x17c
   14db0:	cmn	r3, #1
   14db4:	beq	14f64 <main@@Base+0x4a4>
   14db8:	add	r3, r9, #20
   14dbc:	ldr	r0, [sp, #364]	; 0x16c
   14dc0:	mov	r1, r9
   14dc4:	add	r2, sp, #352	; 0x160
   14dc8:	bl	1b134 <get_sensor_defaults@@Base>
   14dcc:	ldr	r3, [sp, #372]	; 0x174
   14dd0:	cmp	r3, #0
   14dd4:	bne	14fb4 <main@@Base+0x4f4>
   14dd8:	ldr	r3, [sp, #376]	; 0x178
   14ddc:	cmp	r3, #0
   14de0:	bne	14f9c <main@@Base+0x4dc>
   14de4:	ldr	r3, [sp, #576]	; 0x240
   14de8:	cmp	r3, #0
   14dec:	bne	151c4 <main@@Base+0x704>
   14df0:	add	r4, sp, #128	; 0x80
   14df4:	ldr	r0, [pc, #3288]	; 15ad4 <main@@Base+0x1014>
   14df8:	sub	r8, r4, #8
   14dfc:	mov	r3, #0
   14e00:	add	r0, pc, r0
   14e04:	str	r3, [sp, #120]	; 0x78
   14e08:	mov	r1, r8
   14e0c:	bl	149cc <mmal_component_create@plt>
   14e10:	cmp	r0, #0
   14e14:	beq	15148 <main@@Base+0x688>
   14e18:	ldr	r3, [fp]
   14e1c:	cmp	r3, #1
   14e20:	bls	14f5c <main@@Base+0x49c>
   14e24:	ldr	r2, [pc, #3244]	; 15ad8 <main@@Base+0x1018>
   14e28:	mov	r0, fp
   14e2c:	mov	r1, #2
   14e30:	add	r2, pc, r2
   14e34:	bl	1493c <vcos_log_impl@plt>
   14e38:	ldr	r0, [sp, #120]	; 0x78
   14e3c:	cmp	r0, #0
   14e40:	beq	14e48 <main@@Base+0x388>
   14e44:	bl	14510 <mmal_component_destroy@plt>
   14e48:	ldr	r3, [fp]
   14e4c:	cmp	r3, #1
   14e50:	bls	14e74 <main@@Base+0x3b4>
   14e54:	ldr	r3, [pc, #3200]	; 15adc <main@@Base+0x101c>
   14e58:	mov	r0, fp
   14e5c:	ldr	r2, [pc, #3196]	; 15ae0 <main@@Base+0x1020>
   14e60:	mov	r1, #2
   14e64:	add	r3, pc, r3
   14e68:	add	r2, pc, r2
   14e6c:	add	r3, r3, #116	; 0x74
   14e70:	bl	1493c <vcos_log_impl@plt>
   14e74:	mov	r4, #70	; 0x46
   14e78:	mov	r0, #128	; 0x80
   14e7c:	bl	1a0e8 <raspicamcontrol_check_configuration@@Base>
   14e80:	ldr	ip, [sp, #56]	; 0x38
   14e84:	mov	r0, r4
   14e88:	ldr	r2, [sp, #1788]	; 0x6fc
   14e8c:	ldr	r3, [ip]
   14e90:	cmp	r2, r3
   14e94:	bne	15984 <main@@Base+0xec4>
   14e98:	add	sp, sp, #1792	; 0x700
   14e9c:	add	sp, sp, #4
   14ea0:	vpop	{d8-d12}
   14ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea8:	ldr	r3, [r7, #44]	; 0x2c
   14eac:	ldr	r2, [sp, #776]	; 0x308
   14eb0:	cmp	r3, #2
   14eb4:	ldr	r4, [r5, #20]
   14eb8:	movls	r3, #3
   14ebc:	strls	r3, [r7, #44]	; 0x2c
   14ec0:	movw	r3, #36224	; 0x8d80
   14ec4:	movt	r3, #91	; 0x5b
   14ec8:	cmp	r2, r3
   14ecc:	bgt	15c78 <main@@Base+0x11b8>
   14ed0:	movw	r3, #16960	; 0x4240
   14ed4:	movt	r3, #15
   14ed8:	cmp	r2, r3
   14edc:	bgt	15c48 <main@@Base+0x1188>
   14ee0:	ldr	ip, [sp, #352]	; 0x160
   14ee4:	movw	r2, #20559	; 0x504f
   14ee8:	ldr	r3, [r4, #12]
   14eec:	movt	r2, #22097	; 0x5651
   14ef0:	add	r1, ip, #31
   14ef4:	str	r2, [r4, #4]
   14ef8:	bic	r2, r1, #31
   14efc:	mov	r0, #1
   14f00:	str	r2, [r3]
   14f04:	mov	r2, #0
   14f08:	ldr	r1, [sp, #356]	; 0x164
   14f0c:	str	ip, [r3, #16]
   14f10:	add	ip, r1, #15
   14f14:	str	r0, [r3, #28]
   14f18:	str	r1, [r3, #20]
   14f1c:	mov	r0, r5
   14f20:	bic	r1, ip, #15
   14f24:	str	r2, [r3, #12]
   14f28:	stmib	r3, {r1, r2}
   14f2c:	str	r2, [r3, #24]
   14f30:	bl	148e8 <mmal_port_format_commit@plt>
   14f34:	cmp	r0, #0
   14f38:	beq	15c00 <main@@Base+0x1140>
   14f3c:	ldr	r3, [fp]
   14f40:	cmp	r3, #1
   14f44:	bls	14f5c <main@@Base+0x49c>
   14f48:	ldr	r2, [pc, #2964]	; 15ae4 <main@@Base+0x1024>
   14f4c:	mov	r0, fp
   14f50:	mov	r1, #2
   14f54:	add	r2, pc, r2
   14f58:	bl	1493c <vcos_log_impl@plt>
   14f5c:	ldr	r0, [sp, #120]	; 0x78
   14f60:	b	14e3c <main@@Base+0x37c>
   14f64:	movw	r3, #5000	; 0x1388
   14f68:	str	r3, [sp, #380]	; 0x17c
   14f6c:	b	14db8 <main@@Base+0x2f8>
   14f70:	ldr	r0, [pc, #3196]	; 15bf4 <main@@Base+0x1134>
   14f74:	sub	r4, r4, #-1073741823	; 0xc0000001
   14f78:	ldr	r2, [pc, #2920]	; 15ae8 <main@@Base+0x1028>
   14f7c:	mov	r1, #1
   14f80:	ldr	r3, [r5, r4, lsl #2]
   14f84:	ldr	r0, [sl, r0]
   14f88:	add	r2, pc, r2
   14f8c:	ldr	r0, [r0]
   14f90:	bl	14834 <__fprintf_chk@plt>
   14f94:	mov	r0, #64	; 0x40
   14f98:	bl	14a14 <exit@plt>
   14f9c:	ldr	r0, [sp, #372]	; 0x174
   14fa0:	bl	1bab0 <raspi_gps_setup@@Base>
   14fa4:	cmp	r0, #0
   14fa8:	movne	r3, #0
   14fac:	strne	r3, [sp, #376]	; 0x178
   14fb0:	b	14de4 <main@@Base+0x324>
   14fb4:	ldr	r3, [pc, #3128]	; 15bf4 <main@@Base+0x1134>
   14fb8:	ldr	r5, [sl, r3]
   14fbc:	ldr	r0, [r5]
   14fc0:	bl	1b064 <print_app_details@@Base>
   14fc4:	mov	r0, r9
   14fc8:	bl	1ac90 <raspicommonsettings_dump_parameters@@Base>
   14fcc:	ldr	r3, [sp, #388]	; 0x184
   14fd0:	ldr	r0, [r5]
   14fd4:	cmp	r3, #0
   14fd8:	ldr	r3, [sp, #384]	; 0x180
   14fdc:	bne	151d0 <main@@Base+0x710>
   14fe0:	ldr	r2, [pc, #2820]	; 15aec <main@@Base+0x102c>
   14fe4:	add	r2, pc, r2
   14fe8:	str	r2, [sp]
   14fec:	mov	r1, #1
   14ff0:	ldr	r2, [pc, #2808]	; 15af0 <main@@Base+0x1030>
   14ff4:	add	r2, pc, r2
   14ff8:	bl	14834 <__fprintf_chk@plt>
   14ffc:	ldr	r3, [sp, #400]	; 0x190
   15000:	ldr	r0, [r5]
   15004:	cmp	r3, #0
   15008:	beq	151f8 <main@@Base+0x738>
   1500c:	ldr	r3, [pc, #2784]	; 15af4 <main@@Base+0x1034>
   15010:	add	r3, pc, r3
   15014:	ldr	r2, [sp, #412]	; 0x19c
   15018:	mov	r1, #1
   1501c:	ldr	lr, [sp, #404]	; 0x194
   15020:	ldr	ip, [sp, #408]	; 0x198
   15024:	str	r2, [sp, #8]
   15028:	ldr	r2, [pc, #2760]	; 15af8 <main@@Base+0x1038>
   1502c:	str	lr, [sp]
   15030:	str	ip, [sp, #4]
   15034:	add	r2, pc, r2
   15038:	bl	14834 <__fprintf_chk@plt>
   1503c:	ldr	r3, [sp, #564]	; 0x234
   15040:	ldr	r2, [pc, #2740]	; 15afc <main@@Base+0x103c>
   15044:	mov	r1, #1
   15048:	ldr	r0, [r5]
   1504c:	add	r2, pc, r2
   15050:	str	r3, [sp]
   15054:	ldr	r3, [sp, #380]	; 0x17c
   15058:	bl	14834 <__fprintf_chk@plt>
   1505c:	ldr	r0, [pc, #2716]	; 15b00 <main@@Base+0x1040>
   15060:	ldr	r3, [r5]
   15064:	mov	r1, #1
   15068:	add	r0, pc, r0
   1506c:	mov	r2, #29
   15070:	bl	147b0 <fwrite@plt>
   15074:	ldr	r3, [sp, #392]	; 0x188
   15078:	cmp	r3, #0
   1507c:	beq	15698 <main@@Base+0xbd8>
   15080:	ldr	r2, [pc, #2684]	; 15b04 <main@@Base+0x1044>
   15084:	mov	r1, #1
   15088:	ldr	r0, [r5]
   1508c:	add	r2, pc, r2
   15090:	bl	14834 <__fprintf_chk@plt>
   15094:	ldr	r3, [sp, #568]	; 0x238
   15098:	ldr	r0, [r5]
   1509c:	cmp	r3, #0
   150a0:	beq	151ec <main@@Base+0x72c>
   150a4:	ldr	r3, [pc, #2652]	; 15b08 <main@@Base+0x1048>
   150a8:	add	r3, pc, r3
   150ac:	ldr	r2, [pc, #2648]	; 15b0c <main@@Base+0x104c>
   150b0:	mov	r1, #1
   150b4:	ldr	r6, [pc, #2644]	; 15b10 <main@@Base+0x1050>
   150b8:	mov	r4, #0
   150bc:	add	r2, pc, r2
   150c0:	bl	14834 <__fprintf_chk@plt>
   150c4:	ldr	r0, [pc, #2632]	; 15b14 <main@@Base+0x1054>
   150c8:	mov	r1, #1
   150cc:	mov	r2, #17
   150d0:	add	r0, pc, r0
   150d4:	ldr	r3, [r5]
   150d8:	bl	147b0 <fwrite@plt>
   150dc:	add	r6, pc, r6
   150e0:	add	r6, r6, #48	; 0x30
   150e4:	add	r3, r6, r4
   150e8:	ldr	r2, [sp, #572]	; 0x23c
   150ec:	ldr	r3, [r3, #4]
   150f0:	cmp	r2, r3
   150f4:	beq	151dc <main@@Base+0x71c>
   150f8:	add	r4, r4, #8
   150fc:	cmp	r4, #48	; 0x30
   15100:	bne	150e4 <main@@Base+0x624>
   15104:	ldr	r0, [pc, #2572]	; 15b18 <main@@Base+0x1058>
   15108:	mov	r1, #1
   1510c:	ldr	r3, [r5]
   15110:	mov	r2, #2
   15114:	add	r0, pc, r0
   15118:	bl	147b0 <fwrite@plt>
   1511c:	ldr	r3, [sp, #560]	; 0x230
   15120:	cmp	r3, #0
   15124:	beq	15204 <main@@Base+0x744>
   15128:	ldr	r3, [sp, #556]	; 0x22c
   1512c:	cmp	r3, #0
   15130:	bne	15294 <main@@Base+0x7d4>
   15134:	add	r0, r9, #264	; 0x108
   15138:	bl	1a9ec <raspipreview_dump_parameters@@Base>
   1513c:	add	r0, r9, #296	; 0x128
   15140:	bl	18464 <raspicamcontrol_dump_parameters@@Base>
   15144:	b	14dd8 <main@@Base+0x318>
   15148:	ldr	r3, [sp, #120]	; 0x78
   1514c:	add	r5, sp, #1072	; 0x430
   15150:	add	r5, r5, #8
   15154:	ldr	r3, [r3, #32]
   15158:	mov	r1, r5
   1515c:	ldr	r0, [r3]
   15160:	bl	19d50 <raspicamcontrol_set_stereo_mode@@Base>
   15164:	ldr	r3, [sp, #120]	; 0x78
   15168:	mov	r1, r5
   1516c:	ldr	r3, [r3, #32]
   15170:	mov	r6, r0
   15174:	ldr	r0, [r3, #4]
   15178:	bl	19d50 <raspicamcontrol_set_stereo_mode@@Base>
   1517c:	ldr	r3, [sp, #120]	; 0x78
   15180:	mov	r1, r5
   15184:	ldr	r3, [r3, #32]
   15188:	add	r5, r0, r6
   1518c:	ldr	r0, [r3, #8]
   15190:	bl	19d50 <raspicamcontrol_set_stereo_mode@@Base>
   15194:	adds	r3, r5, r0
   15198:	beq	15220 <main@@Base+0x760>
   1519c:	ldr	r2, [fp]
   151a0:	cmp	r2, #1
   151a4:	bls	14f5c <main@@Base+0x49c>
   151a8:	ldr	r2, [pc, #2412]	; 15b1c <main@@Base+0x105c>
   151ac:	mov	r0, fp
   151b0:	mov	r1, #2
   151b4:	add	r2, pc, r2
   151b8:	bl	1493c <vcos_log_impl@plt>
   151bc:	ldr	r0, [sp, #120]	; 0x78
   151c0:	b	14e3c <main@@Base+0x37c>
   151c4:	add	r0, sp, #1136	; 0x470
   151c8:	bl	1d6c8 <raspitex_init@@Base>
   151cc:	b	14df0 <main@@Base+0x330>
   151d0:	ldr	r2, [pc, #2376]	; 15b20 <main@@Base+0x1060>
   151d4:	add	r2, pc, r2
   151d8:	b	14fe8 <main@@Base+0x528>
   151dc:	ldr	r0, [r4, r6]
   151e0:	ldr	r1, [r5]
   151e4:	bl	14ab0 <fputs@plt>
   151e8:	b	150f8 <main@@Base+0x638>
   151ec:	ldr	r3, [pc, #2352]	; 15b24 <main@@Base+0x1064>
   151f0:	add	r3, pc, r3
   151f4:	b	150ac <main@@Base+0x5ec>
   151f8:	ldr	r3, [pc, #2344]	; 15b28 <main@@Base+0x1068>
   151fc:	add	r3, pc, r3
   15200:	b	15014 <main@@Base+0x554>
   15204:	ldr	r0, [pc, #2336]	; 15b2c <main@@Base+0x106c>
   15208:	mov	r1, #1
   1520c:	ldr	r3, [r5]
   15210:	mov	r2, #19
   15214:	add	r0, pc, r0
   15218:	bl	147b0 <fwrite@plt>
   1521c:	b	15134 <main@@Base+0x674>
   15220:	ldr	r2, [sp, #120]	; 0x78
   15224:	add	r1, sp, #124	; 0x7c
   15228:	ldr	ip, [sp, #364]	; 0x16c
   1522c:	sub	r4, r4, #4
   15230:	mov	r3, #16
   15234:	str	r4, [sp, #84]	; 0x54
   15238:	ldr	r0, [r2, #16]
   1523c:	movt	r3, #1
   15240:	mov	r2, #12
   15244:	str	r3, [sp, #124]	; 0x7c
   15248:	str	ip, [sp, #132]	; 0x84
   1524c:	str	r2, [sp, #128]	; 0x80
   15250:	bl	142ac <mmal_port_parameter_set@plt>
   15254:	subs	r3, r0, #0
   15258:	bne	15314 <main@@Base+0x854>
   1525c:	ldr	r0, [sp, #120]	; 0x78
   15260:	ldr	r3, [r0, #28]
   15264:	cmp	r3, #0
   15268:	bne	15734 <main@@Base+0xc74>
   1526c:	ldr	r3, [fp]
   15270:	cmp	r3, #1
   15274:	bls	14e3c <main@@Base+0x37c>
   15278:	ldr	r2, [pc, #2224]	; 15b30 <main@@Base+0x1070>
   1527c:	mov	r0, fp
   15280:	mov	r1, #2
   15284:	add	r2, pc, r2
   15288:	bl	1493c <vcos_log_impl@plt>
   1528c:	ldr	r0, [sp, #120]	; 0x78
   15290:	b	14e3c <main@@Base+0x37c>
   15294:	ldr	r0, [pc, #2200]	; 15b34 <main@@Base+0x1074>
   15298:	mov	r1, #1
   1529c:	ldr	r3, [r5]
   152a0:	mov	r2, #26
   152a4:	add	r0, pc, r0
   152a8:	bl	147b0 <fwrite@plt>
   152ac:	ldr	r3, [sp, #556]	; 0x22c
   152b0:	cmp	r3, #0
   152b4:	addgt	r6, r9, #88	; 0x58
   152b8:	movgt	r4, #0
   152bc:	ble	152f8 <main@@Base+0x838>
   152c0:	ldr	r0, [r6, #4]!
   152c4:	ldr	r1, [r5]
   152c8:	bl	14ab0 <fputs@plt>
   152cc:	ldr	r3, [sp, #556]	; 0x22c
   152d0:	sub	r2, r3, #1
   152d4:	cmp	r4, r2
   152d8:	beq	152ec <main@@Base+0x82c>
   152dc:	mov	r0, #44	; 0x2c
   152e0:	ldr	r1, [r5]
   152e4:	bl	14864 <fputc@plt>
   152e8:	ldr	r3, [sp, #556]	; 0x22c
   152ec:	add	r4, r4, #1
   152f0:	cmp	r4, r3
   152f4:	blt	152c0 <main@@Base+0x800>
   152f8:	ldr	r0, [pc, #2104]	; 15b38 <main@@Base+0x1078>
   152fc:	mov	r1, #1
   15300:	ldr	r3, [r5]
   15304:	mov	r2, #2
   15308:	add	r0, pc, r0
   1530c:	bl	147b0 <fwrite@plt>
   15310:	b	15134 <main@@Base+0x674>
   15314:	ldr	r2, [fp]
   15318:	cmp	r2, #1
   1531c:	bls	14f5c <main@@Base+0x49c>
   15320:	ldr	r2, [pc, #2068]	; 15b3c <main@@Base+0x107c>
   15324:	mov	r0, fp
   15328:	mov	r1, #2
   1532c:	add	r2, pc, r2
   15330:	bl	1493c <vcos_log_impl@plt>
   15334:	ldr	r0, [sp, #120]	; 0x78
   15338:	b	14e3c <main@@Base+0x37c>
   1533c:	mov	r1, #1
   15340:	str	r1, [sp, #580]	; 0x244
   15344:	cmp	r8, ip
   15348:	movle	r2, #0
   1534c:	andgt	r2, r1, #1
   15350:	mov	r4, ip
   15354:	b	14c84 <main@@Base+0x1c4>
   15358:	mov	r1, #1
   1535c:	str	r1, [sp, #576]	; 0x240
   15360:	b	15344 <main@@Base+0x884>
   15364:	ldr	r1, [sp, #60]	; 0x3c
   15368:	mov	r0, #10
   1536c:	mov	r3, #5
   15370:	str	ip, [sp, #52]	; 0x34
   15374:	str	r3, [sp, #572]	; 0x23c
   15378:	bl	142dc <signal@plt>
   1537c:	mov	r0, #12
   15380:	ldr	r1, [sp, #60]	; 0x3c
   15384:	bl	142dc <signal@plt>
   15388:	ldr	r3, [sp, #380]	; 0x17c
   1538c:	ldr	ip, [sp, #52]	; 0x34
   15390:	cmn	r3, #1
   15394:	beq	154f0 <main@@Base+0xa30>
   15398:	mov	r1, #1
   1539c:	b	15344 <main@@Base+0x884>
   153a0:	ldr	r1, [pc, #1944]	; 15b40 <main@@Base+0x1080>
   153a4:	add	r2, sp, #384	; 0x180
   153a8:	ldr	r0, [r7, #4]
   153ac:	add	r1, pc, r1
   153b0:	str	ip, [sp, #52]	; 0x34
   153b4:	bl	14648 <sscanf@plt>
   153b8:	ldr	ip, [sp, #52]	; 0x34
   153bc:	cmp	r0, #1
   153c0:	beq	156f8 <main@@Base+0xc38>
   153c4:	mov	r1, #0
   153c8:	b	15344 <main@@Base+0x884>
   153cc:	mov	r1, #1
   153d0:	str	r1, [sp, #588]	; 0x24c
   153d4:	b	15344 <main@@Base+0x884>
   153d8:	mov	r1, #1
   153dc:	str	r1, [sp, #592]	; 0x250
   153e0:	b	15344 <main@@Base+0x884>
   153e4:	mov	r1, #1
   153e8:	str	r1, [sp, #584]	; 0x248
   153ec:	b	15344 <main@@Base+0x884>
   153f0:	ldr	r1, [pc, #1868]	; 15b44 <main@@Base+0x1084>
   153f4:	add	r2, r9, #44	; 0x2c
   153f8:	ldr	r0, [r7, #4]
   153fc:	add	r1, pc, r1
   15400:	str	ip, [sp, #52]	; 0x34
   15404:	bl	14648 <sscanf@plt>
   15408:	ldr	ip, [sp, #52]	; 0x34
   1540c:	cmp	r0, #1
   15410:	bne	153c4 <main@@Base+0x904>
   15414:	ldr	r3, [sp, #380]	; 0x17c
   15418:	cmp	r3, #0
   1541c:	bne	15430 <main@@Base+0x970>
   15420:	ldr	r3, [sp, #572]	; 0x23c
   15424:	cmp	r3, #0
   15428:	moveq	r3, #3
   1542c:	streq	r3, [sp, #572]	; 0x23c
   15430:	add	ip, ip, #1
   15434:	mov	r1, #1
   15438:	b	15344 <main@@Base+0x884>
   1543c:	ldr	r0, [r7, #4]
   15440:	add	r2, r9, #260	; 0x104
   15444:	ldr	r1, [sp, #68]	; 0x44
   15448:	str	ip, [sp, #52]	; 0x34
   1544c:	bl	14648 <sscanf@plt>
   15450:	ldr	ip, [sp, #52]	; 0x34
   15454:	cmp	r0, #1
   15458:	addeq	ip, ip, #1
   1545c:	moveq	r1, r0
   15460:	bne	153c4 <main@@Base+0x904>
   15464:	b	15344 <main@@Base+0x884>
   15468:	ldr	r1, [pc, #1752]	; 15b48 <main@@Base+0x1088>
   1546c:	add	r2, r9, #60	; 0x3c
   15470:	ldr	r0, [r7, #4]
   15474:	add	r1, pc, r1
   15478:	b	15448 <main@@Base+0x988>
   1547c:	ldr	r4, [r7, #4]
   15480:	ldr	r1, [pc, #1732]	; 15b4c <main@@Base+0x108c>
   15484:	str	ip, [sp, #52]	; 0x34
   15488:	add	r1, pc, r1
   1548c:	mov	r0, r4
   15490:	bl	149fc <strcmp@plt>
   15494:	ldr	ip, [sp, #52]	; 0x34
   15498:	cmp	r0, #0
   1549c:	streq	r0, [sp, #400]	; 0x190
   154a0:	beq	15430 <main@@Base+0x970>
   154a4:	ldr	r1, [pc, #1700]	; 15b50 <main@@Base+0x1090>
   154a8:	add	r3, r9, #76	; 0x4c
   154ac:	mov	r0, r4
   154b0:	str	r3, [sp]
   154b4:	add	r1, pc, r1
   154b8:	add	r2, r9, #68	; 0x44
   154bc:	add	r3, r9, #72	; 0x48
   154c0:	str	ip, [sp, #52]	; 0x34
   154c4:	bl	14648 <sscanf@plt>
   154c8:	ldr	ip, [sp, #52]	; 0x34
   154cc:	b	15430 <main@@Base+0x970>
   154d0:	mov	r1, #1
   154d4:	str	r1, [sp, #388]	; 0x184
   154d8:	b	15344 <main@@Base+0x884>
   154dc:	ldr	r3, [sp, #380]	; 0x17c
   154e0:	mov	r2, #2
   154e4:	str	r2, [sp, #572]	; 0x23c
   154e8:	cmn	r3, #1
   154ec:	bne	15398 <main@@Base+0x8d8>
   154f0:	mov	r3, #0
   154f4:	mov	r1, #1
   154f8:	str	r3, [sp, #380]	; 0x17c
   154fc:	b	15344 <main@@Base+0x884>
   15500:	add	r6, r6, #4
   15504:	ldr	r0, [r5, r6]
   15508:	str	ip, [sp, #52]	; 0x34
   1550c:	bl	1463c <strlen@plt>
   15510:	ldr	ip, [sp, #52]	; 0x34
   15514:	subs	r4, r0, #0
   15518:	beq	153c4 <main@@Base+0x904>
   1551c:	add	r0, r4, #10
   15520:	bl	147ec <malloc@plt>
   15524:	ldr	ip, [sp, #52]	; 0x34
   15528:	cmp	r0, #0
   1552c:	str	r0, [sp, #392]	; 0x188
   15530:	beq	159cc <main@@Base+0xf0c>
   15534:	ldr	r1, [r5, r6]
   15538:	add	r2, r4, #1
   1553c:	str	ip, [sp, #52]	; 0x34
   15540:	bl	14354 <strncpy@plt>
   15544:	ldr	ip, [sp, #52]	; 0x34
   15548:	b	15430 <main@@Base+0x970>
   1554c:	mov	r1, #1
   15550:	str	r1, [sp, #568]	; 0x238
   15554:	b	15344 <main@@Base+0x884>
   15558:	ldr	r1, [pc, #1524]	; 15b54 <main@@Base+0x1094>
   1555c:	add	r2, r9, #228	; 0xe4
   15560:	ldr	r0, [r7, #4]
   15564:	add	r1, pc, r1
   15568:	str	ip, [sp, #52]	; 0x34
   1556c:	bl	14648 <sscanf@plt>
   15570:	ldr	ip, [sp, #52]	; 0x34
   15574:	cmp	r0, #1
   15578:	bne	153c4 <main@@Base+0x904>
   1557c:	ldr	r3, [sp, #564]	; 0x234
   15580:	cmp	r3, #0
   15584:	strne	r0, [sp, #572]	; 0x23c
   15588:	moveq	r3, #6
   1558c:	streq	r3, [sp, #572]	; 0x23c
   15590:	b	15430 <main@@Base+0x970>
   15594:	ldr	r4, [r7, #4]
   15598:	ldr	r1, [pc, #1464]	; 15b58 <main@@Base+0x1098>
   1559c:	str	ip, [sp, #52]	; 0x34
   155a0:	add	r1, pc, r1
   155a4:	mov	r0, r4
   155a8:	bl	149fc <strcmp@plt>
   155ac:	ldr	ip, [sp, #52]	; 0x34
   155b0:	cmp	r0, #0
   155b4:	streq	r0, [sp, #560]	; 0x230
   155b8:	beq	15430 <main@@Base+0x970>
   155bc:	ldr	r3, [sp, #556]	; 0x22c
   155c0:	cmp	r3, #31
   155c4:	bgt	15430 <main@@Base+0x970>
   155c8:	add	r1, sp, #1792	; 0x700
   155cc:	add	r2, r1, r3, lsl #2
   155d0:	add	r3, r3, #1
   155d4:	str	r3, [sp, #556]	; 0x22c
   155d8:	str	r4, [r2, #-1364]	; 0xfffffaac
   155dc:	b	15430 <main@@Base+0x970>
   155e0:	ldr	r6, [r7, #4]
   155e4:	str	ip, [sp, #52]	; 0x34
   155e8:	mov	r0, r6
   155ec:	bl	1463c <strlen@plt>
   155f0:	ldr	ip, [sp, #52]	; 0x34
   155f4:	cmp	r0, #0
   155f8:	beq	153c4 <main@@Base+0x904>
   155fc:	mov	r4, #0
   15600:	str	ip, [sp, #84]	; 0x54
   15604:	ldr	r7, [sp, #72]	; 0x48
   15608:	b	15618 <main@@Base+0xb58>
   1560c:	add	r4, r4, #1
   15610:	cmp	r4, #6
   15614:	beq	157dc <main@@Base+0xd1c>
   15618:	ldr	r0, [r7, r4, lsl #3]
   1561c:	mov	r1, r6
   15620:	bl	149fc <strcmp@plt>
   15624:	lsl	r3, r4, #3
   15628:	cmp	r0, #0
   1562c:	bne	1560c <main@@Base+0xb4c>
   15630:	ldr	r0, [sp, #72]	; 0x48
   15634:	mov	r1, #1
   15638:	ldr	ip, [sp, #84]	; 0x54
   1563c:	add	r3, r0, r3
   15640:	add	ip, ip, #1
   15644:	ldr	r3, [r3, #4]
   15648:	str	r3, [sp, #424]	; 0x1a8
   1564c:	b	15344 <main@@Base+0x884>
   15650:	cmp	r8, ip
   15654:	ble	156ec <main@@Base+0xc2c>
   15658:	ldr	r0, [r7, #4]
   1565c:	ldrb	r3, [r0]
   15660:	cmp	r3, #45	; 0x2d
   15664:	beq	156ec <main@@Base+0xc2c>
   15668:	ldr	r1, [pc, #1260]	; 15b5c <main@@Base+0x109c>
   1566c:	add	r2, r9, #84	; 0x54
   15670:	str	ip, [sp, #52]	; 0x34
   15674:	add	r1, pc, r1
   15678:	bl	14648 <sscanf@plt>
   1567c:	ldr	ip, [sp, #52]	; 0x34
   15680:	cmp	r0, #1
   15684:	streq	r0, [sp, #416]	; 0x1a0
   15688:	addeq	ip, ip, #1
   1568c:	moveq	r1, r0
   15690:	bne	153c4 <main@@Base+0x904>
   15694:	b	15344 <main@@Base+0x884>
   15698:	ldr	r0, [pc, #1216]	; 15b60 <main@@Base+0x10a0>
   1569c:	mov	r1, #1
   156a0:	mov	r2, #4
   156a4:	ldr	r3, [r5]
   156a8:	add	r0, pc, r0
   156ac:	bl	147b0 <fwrite@plt>
   156b0:	b	15094 <main@@Base+0x5d4>
   156b4:	cmp	r8, ip
   156b8:	ldr	r1, [r5, r6]
   156bc:	add	r0, r9, #296	; 0x128
   156c0:	ldrgt	r7, [r7, #4]
   156c4:	movle	r7, #0
   156c8:	add	r1, r1, #1
   156cc:	str	ip, [sp, #52]	; 0x34
   156d0:	mov	r2, r7
   156d4:	bl	17a84 <raspicamcontrol_parse_cmdline@@Base>
   156d8:	cmp	r0, #0
   156dc:	beq	15778 <main@@Base+0xcb8>
   156e0:	add	ip, r0, r4
   156e4:	mov	r1, #1
   156e8:	b	15344 <main@@Base+0x884>
   156ec:	mov	r1, #1
   156f0:	str	r1, [sp, #416]	; 0x1a0
   156f4:	b	15344 <main@@Base+0x884>
   156f8:	ldr	r3, [sp, #384]	; 0x180
   156fc:	cmp	r3, #100	; 0x64
   15700:	ble	15430 <main@@Base+0x970>
   15704:	ldr	r3, [pc, #1256]	; 15bf4 <main@@Base+0x1134>
   15708:	mov	r1, r0
   1570c:	ldr	r0, [pc, #1104]	; 15b64 <main@@Base+0x10a4>
   15710:	mov	r2, #26
   15714:	ldr	r3, [sl, r3]
   15718:	add	r0, pc, r0
   1571c:	ldr	r3, [r3]
   15720:	bl	147b0 <fwrite@plt>
   15724:	mov	r3, #100	; 0x64
   15728:	ldr	ip, [sp, #52]	; 0x34
   1572c:	str	r3, [sp, #384]	; 0x180
   15730:	b	15430 <main@@Base+0x970>
   15734:	ldr	r0, [r0, #16]
   15738:	mov	r1, #55	; 0x37
   1573c:	ldr	r2, [sp, #368]	; 0x170
   15740:	movt	r1, #1
   15744:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   15748:	subs	r3, r0, #0
   1574c:	beq	157e4 <main@@Base+0xd24>
   15750:	ldr	r2, [fp]
   15754:	cmp	r2, #1
   15758:	bls	14f5c <main@@Base+0x49c>
   1575c:	ldr	r2, [pc, #1028]	; 15b68 <main@@Base+0x10a8>
   15760:	mov	r0, fp
   15764:	mov	r1, #2
   15768:	add	r2, pc, r2
   1576c:	bl	1493c <vcos_log_impl@plt>
   15770:	ldr	r0, [sp, #120]	; 0x78
   15774:	b	14e3c <main@@Base+0x37c>
   15778:	ldr	r1, [r5, r6]
   1577c:	mov	r0, r9
   15780:	mov	r2, r7
   15784:	ldr	r3, [sp, #76]	; 0x4c
   15788:	add	r1, r1, #1
   1578c:	bl	1adbc <raspicommonsettings_parse_cmdline@@Base>
   15790:	cmp	r0, #0
   15794:	bne	156e0 <main@@Base+0xc20>
   15798:	ldr	r1, [r5, r6]
   1579c:	add	r0, r9, #264	; 0x108
   157a0:	mov	r2, r7
   157a4:	add	r1, r1, #1
   157a8:	bl	1aab8 <raspipreview_parse_cmdline@@Base>
   157ac:	cmp	r0, #0
   157b0:	bne	156e0 <main@@Base+0xc20>
   157b4:	ldr	r1, [r5, r6]
   157b8:	mov	r2, r7
   157bc:	add	r0, sp, #1136	; 0x470
   157c0:	add	r1, r1, #1
   157c4:	bl	1d258 <raspitex_parse_cmdline@@Base>
   157c8:	ldr	ip, [sp, #52]	; 0x34
   157cc:	cmp	r0, #0
   157d0:	moveq	r1, r0
   157d4:	beq	15344 <main@@Base+0x884>
   157d8:	b	156e0 <main@@Base+0xc20>
   157dc:	ldr	ip, [sp, #84]	; 0x54
   157e0:	b	153c4 <main@@Base+0x904>
   157e4:	ldr	r2, [sp, #120]	; 0x78
   157e8:	ldr	r3, [pc, #892]	; 15b6c <main@@Base+0x10ac>
   157ec:	ldr	r0, [r2, #16]
   157f0:	ldr	r1, [sl, r3]
   157f4:	ldr	r3, [r2, #32]
   157f8:	ldm	r3, {r6, r7}
   157fc:	ldr	r5, [r3, #8]
   15800:	bl	142d0 <mmal_port_enable@plt>
   15804:	subs	r3, r0, #0
   15808:	beq	15834 <main@@Base+0xd74>
   1580c:	ldr	r2, [fp]
   15810:	cmp	r2, #1
   15814:	bls	14f5c <main@@Base+0x49c>
   15818:	ldr	r2, [pc, #848]	; 15b70 <main@@Base+0x10b0>
   1581c:	mov	r0, fp
   15820:	mov	r1, #2
   15824:	add	r2, pc, r2
   15828:	bl	1493c <vcos_log_impl@plt>
   1582c:	ldr	r0, [sp, #120]	; 0x78
   15830:	b	14e3c <main@@Base+0x37c>
   15834:	str	r3, [sp, #176]	; 0xb0
   15838:	mov	r0, #21
   1583c:	str	r3, [sp, #196]	; 0xc4
   15840:	movt	r0, #1
   15844:	str	r3, [sp, #200]	; 0xc8
   15848:	ldr	r3, [sp, #624]	; 0x270
   1584c:	ldr	ip, [sp, #620]	; 0x26c
   15850:	ldr	r2, [sp, #568]	; 0x238
   15854:	ldr	r1, [sp, #352]	; 0x160
   15858:	str	r3, [sp, #188]	; 0xbc
   1585c:	mov	r3, #1
   15860:	str	r3, [sp, #180]	; 0xb4
   15864:	mov	r3, #2
   15868:	str	r3, [sp, #204]	; 0xcc
   1586c:	cmp	r2, #0
   15870:	ldr	r3, [sp, #120]	; 0x78
   15874:	ldr	r2, [sp, #356]	; 0x164
   15878:	str	ip, [sp, #184]	; 0xb8
   1587c:	add	ip, sp, #160	; 0xa0
   15880:	strne	r1, [sp, #184]	; 0xb8
   15884:	str	r0, [sp, #160]	; 0xa0
   15888:	mov	r0, #48	; 0x30
   1588c:	str	r1, [sp, #168]	; 0xa8
   15890:	mov	r1, ip
   15894:	str	r0, [sp, #164]	; 0xa4
   15898:	mov	r0, #3
   1589c:	str	r0, [sp, #192]	; 0xc0
   158a0:	ldr	r0, [r3, #16]
   158a4:	strne	r2, [sp, #188]	; 0xbc
   158a8:	str	r2, [sp, #172]	; 0xac
   158ac:	str	ip, [sp, #80]	; 0x50
   158b0:	bl	142ac <mmal_port_parameter_set@plt>
   158b4:	add	r1, r9, #296	; 0x128
   158b8:	ldr	r0, [sp, #120]	; 0x78
   158bc:	bl	19e84 <raspicamcontrol_set_all_parameters@@Base>
   158c0:	ldr	r2, [sp, #776]	; 0x308
   158c4:	ldr	r4, [r6, #20]
   158c8:	movw	r1, #36224	; 0x8d80
   158cc:	movt	r1, #91	; 0x5b
   158d0:	movw	r3, #20559	; 0x504f
   158d4:	cmp	r2, r1
   158d8:	movt	r3, #22097	; 0x5651
   158dc:	str	r3, [r4, #4]
   158e0:	movw	r3, #13385	; 0x3449
   158e4:	movt	r3, #12338	; 0x3032
   158e8:	str	r3, [r4, #8]
   158ec:	bgt	15a98 <main@@Base+0xfd8>
   158f0:	movw	r3, #16960	; 0x4240
   158f4:	movt	r3, #15
   158f8:	cmp	r2, r3
   158fc:	bgt	15a68 <main@@Base+0xfa8>
   15900:	ldr	r2, [sp, #568]	; 0x238
   15904:	cmp	r2, #0
   15908:	beq	15988 <main@@Base+0xec8>
   1590c:	ldr	r3, [r4, #12]
   15910:	mov	r2, #1
   15914:	ldr	r0, [sp, #352]	; 0x160
   15918:	add	r1, r0, #31
   1591c:	str	r2, [r3, #28]
   15920:	bic	r1, r1, #31
   15924:	str	r1, [r3]
   15928:	ldr	r1, [sp, #356]	; 0x164
   1592c:	mov	r2, #0
   15930:	str	r0, [r3, #16]
   15934:	add	r0, r1, #15
   15938:	str	r2, [r3, #12]
   1593c:	str	r1, [r3, #20]
   15940:	bic	r1, r0, #15
   15944:	str	r2, [r3, #24]
   15948:	stmib	r3, {r1, r2}
   1594c:	mov	r0, r6
   15950:	bl	148e8 <mmal_port_format_commit@plt>
   15954:	cmp	r0, #0
   15958:	beq	15a08 <main@@Base+0xf48>
   1595c:	ldr	r3, [fp]
   15960:	cmp	r3, #1
   15964:	bls	14f5c <main@@Base+0x49c>
   15968:	ldr	r2, [pc, #516]	; 15b74 <main@@Base+0x10b4>
   1596c:	mov	r0, fp
   15970:	mov	r1, #2
   15974:	add	r2, pc, r2
   15978:	bl	1493c <vcos_log_impl@plt>
   1597c:	ldr	r0, [sp, #120]	; 0x78
   15980:	b	14e3c <main@@Base+0x37c>
   15984:	bl	14804 <__stack_chk_fail@plt>
   15988:	ldr	r1, [sp, #620]	; 0x26c
   1598c:	mov	lr, #1
   15990:	ldr	r3, [r4, #12]
   15994:	add	r0, r1, #31
   15998:	bic	r0, r0, #31
   1599c:	str	r0, [r3]
   159a0:	ldr	r0, [sp, #624]	; 0x270
   159a4:	str	r2, [r3, #8]
   159a8:	add	ip, r0, #15
   159ac:	str	r2, [r3, #12]
   159b0:	bic	ip, ip, #15
   159b4:	str	r0, [r3, #20]
   159b8:	str	r1, [r3, #16]
   159bc:	str	ip, [r3, #4]
   159c0:	str	r2, [r3, #24]
   159c4:	str	lr, [r3, #28]
   159c8:	b	1594c <main@@Base+0xe8c>
   159cc:	ldr	lr, [pc, #420]	; 15b78 <main@@Base+0x10b8>
   159d0:	movw	r2, #462	; 0x1ce
   159d4:	ldr	r0, [pc, #416]	; 15b7c <main@@Base+0x10bc>
   159d8:	ldr	r3, [pc, #416]	; 15b80 <main@@Base+0x10c0>
   159dc:	add	lr, pc, lr
   159e0:	add	r0, pc, r0
   159e4:	ldr	r1, [sp, #80]	; 0x50
   159e8:	add	r3, pc, r3
   159ec:	str	lr, [sp]
   159f0:	bl	14924 <vcos_pthreads_logging_assert@plt>
   159f4:	ldr	r0, [sp, #392]	; 0x188
   159f8:	ldr	ip, [sp, #52]	; 0x34
   159fc:	cmp	r0, #0
   15a00:	beq	15430 <main@@Base+0x970>
   15a04:	b	15534 <main@@Base+0xa74>
   15a08:	mov	r1, r4
   15a0c:	ldr	r0, [r7, #20]
   15a10:	bl	143c0 <mmal_format_full_copy@plt>
   15a14:	mov	r0, r7
   15a18:	bl	148e8 <mmal_port_format_commit@plt>
   15a1c:	cmp	r0, #0
   15a20:	beq	14ea8 <main@@Base+0x3e8>
   15a24:	ldr	r3, [fp]
   15a28:	cmp	r3, #1
   15a2c:	bls	14f5c <main@@Base+0x49c>
   15a30:	ldr	r2, [pc, #332]	; 15b84 <main@@Base+0x10c4>
   15a34:	mov	r0, fp
   15a38:	mov	r1, #2
   15a3c:	add	r2, pc, r2
   15a40:	bl	1493c <vcos_log_impl@plt>
   15a44:	ldr	r0, [sp, #120]	; 0x78
   15a48:	b	14e3c <main@@Base+0x37c>
   15a4c:	ldr	r0, [r5]
   15a50:	bl	14a44 <basename@plt>
   15a54:	ldr	r1, [pc, #300]	; 15b88 <main@@Base+0x10c8>
   15a58:	add	r1, pc, r1
   15a5c:	bl	1b0dc <display_valid_parameters@@Base>
   15a60:	mov	r0, #64	; 0x40
   15a64:	bl	14a14 <exit@plt>
   15a68:	ldr	lr, [pc, #284]	; 15b8c <main@@Base+0x10cc>
   15a6c:	add	ip, sp, #160	; 0xa0
   15a70:	add	lr, pc, lr
   15a74:	add	lr, lr, #68	; 0x44
   15a78:	ldm	lr!, {r0, r1, r2, r3}
   15a7c:	stmia	ip!, {r0, r1, r2, r3}
   15a80:	ldm	lr, {r0, r1}
   15a84:	stm	ip, {r0, r1}
   15a88:	mov	r0, r6
   15a8c:	add	r1, sp, #160	; 0xa0
   15a90:	bl	142ac <mmal_port_parameter_set@plt>
   15a94:	b	15900 <main@@Base+0xe40>
   15a98:	ldr	lr, [pc, #240]	; 15b90 <main@@Base+0x10d0>
   15a9c:	add	ip, sp, #160	; 0xa0
   15aa0:	add	lr, pc, lr
   15aa4:	add	lr, lr, #44	; 0x2c
   15aa8:	b	15a78 <main@@Base+0xfb8>
   15aac:	andeq	r5, r2, ip, lsl r5
   15ab0:	andeq	r0, r0, r4, lsr r3
   15ab4:	andeq	r0, r0, r0, asr #6
   15ab8:	andeq	r0, r1, r8, lsr #1
   15abc:	andeq	r0, r0, r8, lsr #6
   15ac0:	andeq	r7, r0, r4, ror #25
   15ac4:			; <UNDEFINED> instruction: 0x0000fcb0
   15ac8:			; <UNDEFINED> instruction: 0x0000e8b0
   15acc:	ldrdeq	r5, [r2], -r4
   15ad0:			; <UNDEFINED> instruction: 0x00025bb4
   15ad4:	andeq	pc, r0, r8, lsl pc	; <UNPREDICTABLE>
   15ad8:	andeq	r0, r1, r8, lsr #1
   15adc:	muleq	r0, r0, sl
   15ae0:	andeq	r0, r1, ip, rrx
   15ae4:	andeq	pc, r0, r8, ror #29
   15ae8:	andeq	pc, r0, r8, ror #24
   15aec:	andeq	pc, r0, r4, asr #23
   15af0:	andeq	pc, r0, r0, lsr #24
   15af4:	andeq	lr, r0, ip
   15af8:	strdeq	pc, [r0], -r4
   15afc:	andeq	pc, r0, r4, lsl ip	; <UNPREDICTABLE>
   15b00:	andeq	pc, r0, r8, lsl ip	; <UNPREDICTABLE>
   15b04:	andeq	pc, r0, r4, lsl ip	; <UNPREDICTABLE>
   15b08:	andeq	sp, r0, r4, ror pc
   15b0c:	strdeq	pc, [r0], -ip
   15b10:	andeq	r4, r2, r4, asr sp
   15b14:	andeq	pc, r0, r4, lsl #24
   15b18:	andeq	pc, r0, ip, lsl #20
   15b1c:	andeq	pc, r0, r4, ror fp	; <UNPREDICTABLE>
   15b20:	ldrdeq	pc, [r0], -r0
   15b24:	andeq	sp, r0, r0, lsr lr
   15b28:	andeq	sp, r0, r4, lsr #28
   15b2c:	strdeq	pc, [r0], -r0
   15b30:	strdeq	pc, [r0], -r0
   15b34:	andeq	pc, r0, r4, asr #20
   15b38:	andeq	pc, r0, r8, lsl r8	; <UNPREDICTABLE>
   15b3c:	andeq	pc, r0, r4, lsr #20
   15b40:	andeq	lr, r0, r4, asr r1
   15b44:	andeq	pc, r0, r4, ror r9	; <UNPREDICTABLE>
   15b48:	strdeq	pc, [r0], -ip
   15b4c:	andeq	lr, r0, r4, lsr r7
   15b50:	andeq	pc, r0, r0, lsr r7	; <UNPREDICTABLE>
   15b54:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   15b58:	andeq	lr, r0, ip, lsl r6
   15b5c:	andeq	sp, r0, ip, lsl #29
   15b60:	andeq	pc, r0, r8, lsl #12
   15b64:	andeq	pc, r0, r0, lsr #9
   15b68:	andeq	pc, r0, r0, lsr r6	; <UNPREDICTABLE>
   15b6c:	andeq	r0, r0, r0, lsr r3
   15b70:	muleq	r0, ip, r5
   15b74:	andeq	pc, r0, r8, ror r4	; <UNPREDICTABLE>
   15b78:	strdeq	pc, [r0], -r8
   15b7c:	andeq	pc, r0, r8, lsr r0	; <UNPREDICTABLE>
   15b80:	andeq	sp, r0, r0, lsr r6
   15b84:	ldrdeq	pc, [r0], -ip
   15b88:	andeq	r6, r0, r4, asr #29
   15b8c:	andeq	lr, r0, r4, lsl #29
   15b90:	andeq	lr, r0, r4, asr lr
   15b94:	andeq	pc, r0, r8, lsr #4
   15b98:	andeq	lr, r0, r4, lsr #25
   15b9c:	andeq	lr, r0, r4, ror ip
   15ba0:	strdeq	pc, [r0], -ip
   15ba4:	andeq	pc, r0, ip, lsr r2	; <UNPREDICTABLE>
   15ba8:	andeq	pc, r0, r8, lsr #4
   15bac:			; <UNDEFINED> instruction: 0x0000ebb0
   15bb0:	andeq	pc, r0, r0, asr #6
   15bb4:	andeq	lr, r0, r0, asr fp
   15bb8:	andeq	pc, r0, r4, asr r1	; <UNPREDICTABLE>
   15bbc:	andeq	pc, r0, r4, ror r1	; <UNPREDICTABLE>
   15bc0:	andeq	pc, r0, r4, lsr #3
   15bc4:	andeq	pc, r0, ip, asr #1
   15bc8:	strheq	pc, [r0], -ip	; <UNPREDICTABLE>
   15bcc:	ldrdeq	lr, [r0], -r0
   15bd0:	andeq	pc, r0, r8, asr r0	; <UNPREDICTABLE>
   15bd4:	andeq	lr, r0, r4, lsr #29
   15bd8:	andeq	lr, r0, r4, asr #16
   15bdc:	andeq	pc, r0, r8, lsr r7	; <UNPREDICTABLE>
   15be0:	strdeq	lr, [r0], -r4
   15be4:	andeq	lr, r0, r0, asr #30
   15be8:	ldrdeq	pc, [r0], -r8
   15bec:			; <UNDEFINED> instruction: 0x0000f5b8
   15bf0:	andeq	lr, r0, r4, asr #27
   15bf4:	andeq	r0, r0, r4, asr r3
   15bf8:	andeq	lr, r0, ip, ror #26
   15bfc:	andeq	lr, r0, r4, asr r5
   15c00:	ldr	r3, [r5, #44]	; 0x2c
   15c04:	ldr	r0, [sp, #120]	; 0x78
   15c08:	cmp	r3, #2
   15c0c:	movls	r3, #3
   15c10:	strls	r3, [r5, #44]	; 0x2c
   15c14:	bl	1481c <mmal_component_enable@plt>
   15c18:	cmp	r0, #0
   15c1c:	beq	15c8c <main@@Base+0x11cc>
   15c20:	ldr	r3, [fp]
   15c24:	cmp	r3, #1
   15c28:	bls	14f5c <main@@Base+0x49c>
   15c2c:	ldr	r2, [pc, #-160]	; 15b94 <main@@Base+0x10d4>
   15c30:	mov	r0, fp
   15c34:	mov	r1, #2
   15c38:	add	r2, pc, r2
   15c3c:	bl	1493c <vcos_log_impl@plt>
   15c40:	ldr	r0, [sp, #120]	; 0x78
   15c44:	b	14e3c <main@@Base+0x37c>
   15c48:	ldr	lr, [pc, #-184]	; 15b98 <main@@Base+0x10d8>
   15c4c:	add	ip, sp, #160	; 0xa0
   15c50:	add	lr, pc, lr
   15c54:	add	lr, lr, #92	; 0x5c
   15c58:	ldm	lr!, {r0, r1, r2, r3}
   15c5c:	stmia	ip!, {r0, r1, r2, r3}
   15c60:	ldm	lr, {r0, r1}
   15c64:	stm	ip, {r0, r1}
   15c68:	mov	r0, r5
   15c6c:	add	r1, sp, #160	; 0xa0
   15c70:	bl	142ac <mmal_port_parameter_set@plt>
   15c74:	b	14ee0 <main@@Base+0x420>
   15c78:	ldr	lr, [pc, #-228]	; 15b9c <main@@Base+0x10dc>
   15c7c:	add	ip, sp, #160	; 0xa0
   15c80:	add	lr, pc, lr
   15c84:	add	lr, lr, #44	; 0x2c
   15c88:	b	15c58 <main@@Base+0x1198>
   15c8c:	ldr	r3, [sp, #576]	; 0x240
   15c90:	cmp	r3, #0
   15c94:	bne	15fbc <main@@Base+0x14fc>
   15c98:	ldr	r2, [sp, #372]	; 0x174
   15c9c:	ldr	r3, [sp, #120]	; 0x78
   15ca0:	cmp	r2, #0
   15ca4:	str	r3, [sp, #1112]	; 0x458
   15ca8:	beq	15ccc <main@@Base+0x120c>
   15cac:	ldr	r3, [pc, #-192]	; 15bf4 <main@@Base+0x1134>
   15cb0:	mov	r1, #1
   15cb4:	ldr	r0, [pc, #-284]	; 15ba0 <main@@Base+0x10e0>
   15cb8:	mov	r2, #22
   15cbc:	ldr	r3, [sl, r3]
   15cc0:	add	r0, pc, r0
   15cc4:	ldr	r3, [r3]
   15cc8:	bl	147b0 <fwrite@plt>
   15ccc:	ldr	r3, [sp, #576]	; 0x240
   15cd0:	cmp	r3, #0
   15cd4:	beq	15d78 <main@@Base+0x12b8>
   15cd8:	ldr	r0, [pc, #-316]	; 15ba4 <main@@Base+0x10e4>
   15cdc:	add	r1, sp, #124	; 0x7c
   15ce0:	mov	r3, #0
   15ce4:	str	r3, [sp, #124]	; 0x7c
   15ce8:	add	r0, pc, r0
   15cec:	bl	149cc <mmal_component_create@plt>
   15cf0:	cmp	r0, #0
   15cf4:	beq	15db8 <main@@Base+0x12f8>
   15cf8:	ldr	r3, [fp]
   15cfc:	cmp	r3, #1
   15d00:	bls	15e44 <main@@Base+0x1384>
   15d04:	ldr	r2, [pc, #-356]	; 15ba8 <main@@Base+0x10e8>
   15d08:	mov	r0, fp
   15d0c:	mov	r1, #2
   15d10:	add	r2, pc, r2
   15d14:	bl	1493c <vcos_log_impl@plt>
   15d18:	ldr	r0, [sp, #124]	; 0x7c
   15d1c:	cmp	r0, #0
   15d20:	beq	15d28 <main@@Base+0x1268>
   15d24:	bl	14510 <mmal_component_destroy@plt>
   15d28:	ldr	r3, [fp]
   15d2c:	cmp	r3, #1
   15d30:	bls	15d54 <main@@Base+0x1294>
   15d34:	ldr	r3, [pc, #-400]	; 15bac <main@@Base+0x10ec>
   15d38:	mov	r0, fp
   15d3c:	ldr	r2, [pc, #-404]	; 15bb0 <main@@Base+0x10f0>
   15d40:	mov	r1, #2
   15d44:	add	r3, pc, r3
   15d48:	add	r2, pc, r2
   15d4c:	add	r3, r3, #116	; 0x74
   15d50:	bl	1493c <vcos_log_impl@plt>
   15d54:	add	r0, r9, #264	; 0x108
   15d58:	bl	1a990 <raspipreview_destroy@@Base>
   15d5c:	ldr	r0, [sp, #1112]	; 0x458
   15d60:	cmp	r0, #0
   15d64:	beq	14e74 <main@@Base+0x3b4>
   15d68:	bl	14510 <mmal_component_destroy@plt>
   15d6c:	mov	r3, #0
   15d70:	str	r3, [sp, #1112]	; 0x458
   15d74:	b	14e74 <main@@Base+0x3b4>
   15d78:	add	r0, r9, #264	; 0x108
   15d7c:	bl	1a730 <raspipreview_create@@Base>
   15d80:	cmp	r0, #0
   15d84:	beq	15cd8 <main@@Base+0x1218>
   15d88:	ldr	r3, [fp]
   15d8c:	cmp	r3, #1
   15d90:	bls	15d5c <main@@Base+0x129c>
   15d94:	ldr	r3, [pc, #-488]	; 15bb4 <main@@Base+0x10f4>
   15d98:	mov	r0, fp
   15d9c:	ldr	r2, [pc, #-492]	; 15bb8 <main@@Base+0x10f8>
   15da0:	mov	r1, #2
   15da4:	add	r3, pc, r3
   15da8:	add	r2, pc, r2
   15dac:	add	r3, r3, #116	; 0x74
   15db0:	bl	1493c <vcos_log_impl@plt>
   15db4:	b	15d5c <main@@Base+0x129c>
   15db8:	ldr	r0, [sp, #124]	; 0x7c
   15dbc:	ldr	r3, [r0, #20]
   15dc0:	cmp	r3, #0
   15dc4:	beq	15dd4 <main@@Base+0x1314>
   15dc8:	ldr	r3, [r0, #28]
   15dcc:	cmp	r3, #0
   15dd0:	bne	15e4c <main@@Base+0x138c>
   15dd4:	ldr	r3, [fp]
   15dd8:	cmp	r3, #1
   15ddc:	bls	15d1c <main@@Base+0x125c>
   15de0:	ldr	r2, [pc, #-556]	; 15bbc <main@@Base+0x10fc>
   15de4:	mov	r0, fp
   15de8:	mov	r1, #2
   15dec:	add	r2, pc, r2
   15df0:	bl	1493c <vcos_log_impl@plt>
   15df4:	ldr	r0, [sp, #124]	; 0x7c
   15df8:	b	15d1c <main@@Base+0x125c>
   15dfc:	mov	r1, #80	; 0x50
   15e00:	mov	r0, r4
   15e04:	movt	r1, #1
   15e08:	ldr	r2, [sp, #596]	; 0x254
   15e0c:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   15e10:	ldr	r3, [sp, #596]	; 0x254
   15e14:	cmp	r3, #0
   15e18:	beq	15f18 <main@@Base+0x1458>
   15e1c:	cmp	r0, #0
   15e20:	beq	15f18 <main@@Base+0x1458>
   15e24:	ldr	r3, [fp]
   15e28:	cmp	r3, #1
   15e2c:	bls	15e44 <main@@Base+0x1384>
   15e30:	ldr	r2, [pc, #-632]	; 15bc0 <main@@Base+0x1100>
   15e34:	mov	r0, fp
   15e38:	mov	r1, #2
   15e3c:	add	r2, pc, r2
   15e40:	bl	1493c <vcos_log_impl@plt>
   15e44:	ldr	r0, [sp, #124]	; 0x7c
   15e48:	b	15d1c <main@@Base+0x125c>
   15e4c:	ldr	r2, [r0, #32]
   15e50:	ldr	r3, [r0, #24]
   15e54:	ldr	r4, [r2]
   15e58:	ldr	r3, [r3]
   15e5c:	ldr	r0, [r4, #20]
   15e60:	ldr	r1, [r3, #20]
   15e64:	bl	14a68 <mmal_format_copy@plt>
   15e68:	ldr	r0, [sp, #424]	; 0x1a8
   15e6c:	ldr	r3, [r4, #40]	; 0x28
   15e70:	ldr	r2, [r4, #28]
   15e74:	ldr	r1, [r4, #20]
   15e78:	cmp	r3, r2
   15e7c:	str	r0, [r1, #4]
   15e80:	mov	r0, r4
   15e84:	str	r3, [r4, #48]	; 0x30
   15e88:	strcc	r2, [r4, #48]	; 0x30
   15e8c:	ldr	r3, [r4, #36]	; 0x24
   15e90:	ldr	r2, [r4, #24]
   15e94:	str	r3, [r4, #44]	; 0x2c
   15e98:	cmp	r3, r2
   15e9c:	strcc	r2, [r4, #44]	; 0x2c
   15ea0:	bl	148e8 <mmal_port_format_commit@plt>
   15ea4:	cmp	r0, #0
   15ea8:	beq	15ed4 <main@@Base+0x1414>
   15eac:	ldr	r3, [fp]
   15eb0:	cmp	r3, #1
   15eb4:	bls	15e44 <main@@Base+0x1384>
   15eb8:	ldr	r2, [pc, #-764]	; 15bc4 <main@@Base+0x1104>
   15ebc:	mov	r0, fp
   15ec0:	mov	r1, #2
   15ec4:	add	r2, pc, r2
   15ec8:	bl	1493c <vcos_log_impl@plt>
   15ecc:	ldr	r0, [sp, #124]	; 0x7c
   15ed0:	b	15d1c <main@@Base+0x125c>
   15ed4:	mov	r1, #25
   15ed8:	mov	r0, r4
   15edc:	movt	r1, #1
   15ee0:	ldr	r2, [sp, #384]	; 0x180
   15ee4:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   15ee8:	cmp	r0, #0
   15eec:	beq	15dfc <main@@Base+0x133c>
   15ef0:	ldr	r3, [fp]
   15ef4:	cmp	r3, #1
   15ef8:	bls	15e44 <main@@Base+0x1384>
   15efc:	ldr	r2, [pc, #-828]	; 15bc8 <main@@Base+0x1108>
   15f00:	mov	r0, fp
   15f04:	mov	r1, #2
   15f08:	add	r2, pc, r2
   15f0c:	bl	1493c <vcos_log_impl@plt>
   15f10:	ldr	r0, [sp, #124]	; 0x7c
   15f14:	b	15d1c <main@@Base+0x125c>
   15f18:	ldr	lr, [pc, #-852]	; 15bcc <main@@Base+0x110c>
   15f1c:	add	ip, sp, #160	; 0xa0
   15f20:	ldr	r3, [sp, #400]	; 0x190
   15f24:	add	lr, pc, lr
   15f28:	add	lr, lr, #124	; 0x7c
   15f2c:	cmp	r3, #0
   15f30:	ldm	lr!, {r0, r1, r2, r3}
   15f34:	stmia	ip!, {r0, r1, r2, r3}
   15f38:	ldm	lr, {r0, r1}
   15f3c:	stm	ip, {r0, r1}
   15f40:	beq	15f74 <main@@Base+0x14b4>
   15f44:	ldr	r2, [sp, #404]	; 0x194
   15f48:	cmp	r2, #0
   15f4c:	ble	15f74 <main@@Base+0x14b4>
   15f50:	ldr	r3, [sp, #408]	; 0x198
   15f54:	cmp	r3, #0
   15f58:	ble	15f74 <main@@Base+0x14b4>
   15f5c:	ldr	r0, [sp, #412]	; 0x19c
   15f60:	mov	r1, #1
   15f64:	str	r2, [sp, #172]	; 0xac
   15f68:	str	r3, [sp, #176]	; 0xb0
   15f6c:	str	r0, [sp, #180]	; 0xb4
   15f70:	str	r1, [sp, #168]	; 0xa8
   15f74:	ldr	r3, [sp, #124]	; 0x7c
   15f78:	add	r1, sp, #160	; 0xa0
   15f7c:	ldr	r0, [r3, #16]
   15f80:	bl	142ac <mmal_port_parameter_set@plt>
   15f84:	ldr	r0, [sp, #124]	; 0x7c
   15f88:	bl	1481c <mmal_component_enable@plt>
   15f8c:	cmp	r0, #0
   15f90:	beq	15ff8 <main@@Base+0x1538>
   15f94:	ldr	r3, [fp]
   15f98:	cmp	r3, #1
   15f9c:	bls	15e44 <main@@Base+0x1384>
   15fa0:	ldr	r2, [pc, #-984]	; 15bd0 <main@@Base+0x1110>
   15fa4:	mov	r0, fp
   15fa8:	mov	r1, #2
   15fac:	add	r2, pc, r2
   15fb0:	bl	1493c <vcos_log_impl@plt>
   15fb4:	ldr	r0, [sp, #124]	; 0x7c
   15fb8:	b	15d1c <main@@Base+0x125c>
   15fbc:	mov	r1, r6
   15fc0:	add	r0, sp, #1136	; 0x470
   15fc4:	bl	1d4dc <raspitex_configure_preview_port@@Base>
   15fc8:	cmp	r0, #0
   15fcc:	beq	15c98 <main@@Base+0x11d8>
   15fd0:	ldr	r3, [pc, #-996]	; 15bf4 <main@@Base+0x1134>
   15fd4:	mov	r1, #1
   15fd8:	ldr	r0, [pc, #-1036]	; 15bd4 <main@@Base+0x1114>
   15fdc:	mov	r2, #49	; 0x31
   15fe0:	ldr	r3, [sl, r3]
   15fe4:	add	r0, pc, r0
   15fe8:	ldr	r3, [r3]
   15fec:	bl	147b0 <fwrite@plt>
   15ff0:	ldr	r0, [sp, #120]	; 0x78
   15ff4:	b	14e3c <main@@Base+0x37c>
   15ff8:	mov	r0, r4
   15ffc:	ldr	r1, [r4, #44]	; 0x2c
   16000:	ldr	r2, [r4, #48]	; 0x30
   16004:	bl	14324 <mmal_port_pool_create@plt>
   16008:	subs	r5, r0, #0
   1600c:	beq	1784c <main@@Base+0x2d8c>
   16010:	ldr	r0, [sp, #372]	; 0x174
   16014:	ldr	r3, [sp, #124]	; 0x7c
   16018:	cmp	r0, #0
   1601c:	str	r5, [sp, #1132]	; 0x46c
   16020:	str	r3, [sp, #1116]	; 0x45c
   16024:	bne	17800 <main@@Base+0x2d40>
   16028:	ldr	r3, [sp, #1112]	; 0x458
   1602c:	ldr	r2, [sp, #1116]	; 0x45c
   16030:	ldr	ip, [sp, #576]	; 0x240
   16034:	ldr	r3, [r3, #32]
   16038:	ldr	r1, [r2, #24]
   1603c:	cmp	ip, #0
   16040:	ldr	r2, [r2, #32]
   16044:	ldm	r3, {r5, ip}
   16048:	ldr	r3, [r3, #8]
   1604c:	ldr	r4, [r1]
   16050:	str	ip, [sp, #76]	; 0x4c
   16054:	str	r3, [sp, #72]	; 0x48
   16058:	ldr	r6, [r2]
   1605c:	bne	161c0 <main@@Base+0x1700>
   16060:	cmp	r0, #0
   16064:	bne	16358 <main@@Base+0x1898>
   16068:	ldr	r3, [sp, #628]	; 0x274
   1606c:	add	r2, sp, #1120	; 0x460
   16070:	mov	r0, r5
   16074:	add	r2, r2, #4
   16078:	ldr	r3, [r3, #24]
   1607c:	ldr	r1, [r3]
   16080:	bl	1b310 <connect_ports@@Base>
   16084:	subs	r7, r0, #0
   16088:	ldreq	r0, [sp, #372]	; 0x174
   1608c:	beq	161c0 <main@@Base+0x1700>
   16090:	bl	1b3c4 <mmal_status_to_int@@Base>
   16094:	ldr	r3, [fp]
   16098:	cmp	r3, #1
   1609c:	bls	160c0 <main@@Base+0x1600>
   160a0:	ldr	r3, [pc, #-1232]	; 15bd8 <main@@Base+0x1118>
   160a4:	mov	r0, fp
   160a8:	ldr	r2, [pc, #-1236]	; 15bdc <main@@Base+0x111c>
   160ac:	mov	r1, #2
   160b0:	add	r3, pc, r3
   160b4:	add	r2, pc, r2
   160b8:	add	r3, r3, #116	; 0x74
   160bc:	bl	1493c <vcos_log_impl@plt>
   160c0:	mov	r0, r7
   160c4:	bl	1b3c4 <mmal_status_to_int@@Base>
   160c8:	ldr	r3, [sp, #372]	; 0x174
   160cc:	cmp	r3, #0
   160d0:	bne	16228 <main@@Base+0x1768>
   160d4:	ldr	r3, [sp, #576]	; 0x240
   160d8:	cmp	r3, #0
   160dc:	bne	16214 <main@@Base+0x1754>
   160e0:	ldr	r0, [sp, #76]	; 0x4c
   160e4:	bl	1b360 <check_disable_port@@Base>
   160e8:	mov	r0, r6
   160ec:	bl	1b360 <check_disable_port@@Base>
   160f0:	ldr	r0, [sp, #1124]	; 0x464
   160f4:	cmp	r0, #0
   160f8:	beq	16100 <main@@Base+0x1640>
   160fc:	bl	141d4 <mmal_connection_destroy@plt>
   16100:	ldr	r0, [sp, #1128]	; 0x468
   16104:	cmp	r0, #0
   16108:	beq	16110 <main@@Base+0x1650>
   1610c:	bl	141d4 <mmal_connection_destroy@plt>
   16110:	ldr	r0, [sp, #1116]	; 0x45c
   16114:	cmp	r0, #0
   16118:	beq	16120 <main@@Base+0x1660>
   1611c:	bl	14774 <mmal_component_disable@plt>
   16120:	ldr	r0, [sp, #628]	; 0x274
   16124:	cmp	r0, #0
   16128:	beq	16130 <main@@Base+0x1670>
   1612c:	bl	14774 <mmal_component_disable@plt>
   16130:	ldr	r0, [sp, #1112]	; 0x458
   16134:	cmp	r0, #0
   16138:	beq	16140 <main@@Base+0x1680>
   1613c:	bl	14774 <mmal_component_disable@plt>
   16140:	ldr	r1, [sp, #1132]	; 0x46c
   16144:	cmp	r1, #0
   16148:	beq	1615c <main@@Base+0x169c>
   1614c:	ldr	r3, [sp, #1116]	; 0x45c
   16150:	ldr	r3, [r3, #32]
   16154:	ldr	r0, [r3]
   16158:	bl	149f0 <mmal_port_pool_destroy@plt>
   1615c:	ldr	r0, [sp, #1116]	; 0x45c
   16160:	cmp	r0, #0
   16164:	beq	16174 <main@@Base+0x16b4>
   16168:	bl	14510 <mmal_component_destroy@plt>
   1616c:	mov	r3, #0
   16170:	str	r3, [sp, #1116]	; 0x45c
   16174:	add	r0, r9, #264	; 0x108
   16178:	bl	1a990 <raspipreview_destroy@@Base>
   1617c:	ldr	r0, [sp, #1112]	; 0x458
   16180:	cmp	r0, #0
   16184:	beq	16194 <main@@Base+0x16d4>
   16188:	bl	14510 <mmal_component_destroy@plt>
   1618c:	mov	r3, #0
   16190:	str	r3, [sp, #1112]	; 0x458
   16194:	ldr	r3, [sp, #372]	; 0x174
   16198:	cmp	r3, #0
   1619c:	bne	16258 <main@@Base+0x1798>
   161a0:	ldr	r3, [sp, #376]	; 0x178
   161a4:	cmp	r3, #0
   161a8:	bne	1624c <main@@Base+0x178c>
   161ac:	cmp	r7, #0
   161b0:	moveq	r4, r7
   161b4:	beq	14e80 <main@@Base+0x3c0>
   161b8:	mov	r4, #0
   161bc:	b	14e78 <main@@Base+0x3b8>
   161c0:	cmp	r0, #0
   161c4:	bne	16334 <main@@Base+0x1874>
   161c8:	add	r2, sp, #1120	; 0x460
   161cc:	mov	r1, r4
   161d0:	ldr	r0, [sp, #72]	; 0x48
   161d4:	add	r2, r2, #8
   161d8:	bl	1b310 <connect_ports@@Base>
   161dc:	subs	r7, r0, #0
   161e0:	beq	1627c <main@@Base+0x17bc>
   161e4:	ldr	r3, [fp]
   161e8:	cmp	r3, #1
   161ec:	bls	160c0 <main@@Base+0x1600>
   161f0:	ldr	r3, [pc, #-1560]	; 15be0 <main@@Base+0x1120>
   161f4:	mov	r0, fp
   161f8:	ldr	r2, [pc, #-1564]	; 15be4 <main@@Base+0x1124>
   161fc:	mov	r1, #2
   16200:	add	r3, pc, r3
   16204:	add	r2, pc, r2
   16208:	add	r3, r3, #116	; 0x74
   1620c:	bl	1493c <vcos_log_impl@plt>
   16210:	b	160c0 <main@@Base+0x1600>
   16214:	add	r0, sp, #1136	; 0x470
   16218:	bl	1d9a8 <raspitex_stop@@Base>
   1621c:	add	r0, sp, #1136	; 0x470
   16220:	bl	1d820 <raspitex_destroy@@Base>
   16224:	b	160e0 <main@@Base+0x1620>
   16228:	ldr	r3, [pc, #-1596]	; 15bf4 <main@@Base+0x1134>
   1622c:	mov	r1, #1
   16230:	ldr	r0, [pc, #-1616]	; 15be8 <main@@Base+0x1128>
   16234:	mov	r2, #13
   16238:	ldr	r3, [sl, r3]
   1623c:	add	r0, pc, r0
   16240:	ldr	r3, [r3]
   16244:	bl	147b0 <fwrite@plt>
   16248:	b	160d4 <main@@Base+0x1614>
   1624c:	ldr	r0, [sp, #372]	; 0x174
   16250:	bl	1b9b4 <raspi_gps_shutdown@@Base>
   16254:	b	161ac <main@@Base+0x16ec>
   16258:	ldr	r3, [pc, #-1644]	; 15bf4 <main@@Base+0x1134>
   1625c:	mov	r1, #1
   16260:	ldr	r0, [pc, #-1660]	; 15bec <main@@Base+0x112c>
   16264:	mov	r2, #75	; 0x4b
   16268:	ldr	r3, [sl, r3]
   1626c:	add	r0, pc, r0
   16270:	ldr	r3, [r3]
   16274:	bl	147b0 <fwrite@plt>
   16278:	b	161a0 <main@@Base+0x16e0>
   1627c:	mov	r1, r7
   16280:	add	r0, sp, #140	; 0x8c
   16284:	mov	r2, r7
   16288:	add	ip, sp, #136	; 0x88
   1628c:	str	r7, [sp, #136]	; 0x88
   16290:	str	ip, [sp, #100]	; 0x64
   16294:	str	r9, [sp, #156]	; 0x9c
   16298:	bl	143e4 <sem_init@plt>
   1629c:	cmn	r0, #1
   162a0:	beq	172c8 <main@@Base+0x2808>
   162a4:	ldr	r3, [sp, #576]	; 0x240
   162a8:	cmp	r3, #0
   162ac:	bne	1637c <main@@Base+0x18bc>
   162b0:	ldr	r3, [sp, #416]	; 0x1a0
   162b4:	cmp	r3, #0
   162b8:	beq	16390 <main@@Base+0x18d0>
   162bc:	ldr	r0, [sp, #380]	; 0x17c
   162c0:	movw	r5, #16960	; 0x4240
   162c4:	ldr	r1, [sp, #420]	; 0x1a4
   162c8:	movt	r5, #15
   162cc:	bl	21d68 <vcsm_square_open@@Base+0x294>
   162d0:	mov	r8, #0
   162d4:	str	r6, [sp, #60]	; 0x3c
   162d8:	add	fp, sp, #160	; 0xa0
   162dc:	mov	r4, r0
   162e0:	b	16324 <main@@Base+0x1864>
   162e4:	ldr	r0, [sp, #1112]	; 0x458
   162e8:	add	r8, r8, #1
   162ec:	bl	190a4 <raspicamcontrol_cycle_test@@Base>
   162f0:	ldr	r6, [sp, #420]	; 0x1a4
   162f4:	mov	r1, #1000	; 0x3e8
   162f8:	mov	r0, r6
   162fc:	bl	21b5c <vcsm_square_open@@Base+0x88>
   16300:	mov	r1, #1000	; 0x3e8
   16304:	str	r0, [sp, #160]	; 0xa0
   16308:	mov	r0, r6
   1630c:	bl	21d48 <vcsm_square_open@@Base+0x274>
   16310:	mov	r0, fp
   16314:	mul	r3, r5, r1
   16318:	mov	r1, #0
   1631c:	str	r3, [sp, #164]	; 0xa4
   16320:	bl	14990 <nanosleep@plt>
   16324:	cmp	r8, r4
   16328:	blt	162e4 <main@@Base+0x1824>
   1632c:	ldr	r6, [sp, #60]	; 0x3c
   16330:	b	160c0 <main@@Base+0x1600>
   16334:	ldr	r3, [pc, #-1864]	; 15bf4 <main@@Base+0x1134>
   16338:	mov	r1, #1
   1633c:	ldr	r0, [pc, #-1876]	; 15bf0 <main@@Base+0x1130>
   16340:	mov	r2, #52	; 0x34
   16344:	ldr	r3, [sl, r3]
   16348:	add	r0, pc, r0
   1634c:	ldr	r3, [r3]
   16350:	bl	147b0 <fwrite@plt>
   16354:	b	161c8 <main@@Base+0x1708>
   16358:	ldr	r3, [pc, #-1900]	; 15bf4 <main@@Base+0x1134>
   1635c:	mov	r1, #1
   16360:	ldr	r0, [pc, #-1904]	; 15bf8 <main@@Base+0x1138>
   16364:	mov	r2, #48	; 0x30
   16368:	ldr	r3, [sl, r3]
   1636c:	add	r0, pc, r0
   16370:	ldr	r3, [r3]
   16374:	bl	147b0 <fwrite@plt>
   16378:	b	16068 <main@@Base+0x15a8>
   1637c:	add	r0, sp, #1136	; 0x470
   16380:	bl	1da10 <raspitex_start@@Base>
   16384:	cmp	r0, #0
   16388:	beq	162b0 <main@@Base+0x17f0>
   1638c:	b	160c0 <main@@Base+0x1600>
   16390:	vmov.f64	d8, #96	; 0x3f000000  0.5
   16394:	ldr	r2, [pc, #-1952]	; 15bfc <main@@Base+0x113c>
   16398:	ldr	r1, [sp, #396]	; 0x18c
   1639c:	vldr	d12, [pc, #860]	; 16700 <main@@Base+0x1c40>
   163a0:	add	r2, pc, r2
   163a4:	str	r3, [sp, #120]	; 0x78
   163a8:	sub	r1, r1, #1
   163ac:	add	r2, r2, #116	; 0x74
   163b0:	str	r1, [sp, #68]	; 0x44
   163b4:	vldr	d11, [pc, #844]	; 16708 <main@@Base+0x1c48>
   163b8:	str	r2, [sp, #116]	; 0x74
   163bc:	str	r3, [sp, #124]	; 0x7c
   163c0:	str	r3, [sp, #60]	; 0x3c
   163c4:	str	r8, [sp, #112]	; 0x70
   163c8:	vmov.f64	d9, #36	; 0x41200000  10.0
   163cc:	bl	1b6f8 <get_microseconds64@@Base>
   163d0:	mov	r2, #1000	; 0x3e8
   163d4:	mov	r3, #0
   163d8:	bl	223a8 <vcsm_square_open@@Base+0x8d4>
   163dc:	ldr	ip, [pc, #812]	; 16710 <main@@Base+0x1c50>
   163e0:	add	ip, pc, ip
   163e4:	ldrd	r2, [ip]
   163e8:	mov	r4, r0
   163ec:	mov	r5, r1
   163f0:	mvn	r0, #0
   163f4:	mvn	r1, #0
   163f8:	cmp	r3, r1
   163fc:	cmpeq	r2, r0
   16400:	beq	16d88 <main@@Base+0x22c8>
   16404:	ldr	r3, [pc, #776]	; 16714 <main@@Base+0x1c54>
   16408:	add	r3, pc, r3
   1640c:	ldrd	r2, [r3]
   16410:	cmp	r4, r2
   16414:	sbcs	r0, r5, r3
   16418:	movlt	ip, #1
   1641c:	strlt	ip, [sp, #96]	; 0x60
   16420:	blt	16434 <main@@Base+0x1974>
   16424:	ldr	r3, [sp, #380]	; 0x17c
   16428:	rsbs	r3, r3, #1
   1642c:	movcc	r3, #0
   16430:	str	r3, [sp, #96]	; 0x60
   16434:	ldr	r3, [sp, #572]	; 0x23c
   16438:	cmp	r3, #6
   1643c:	addls	pc, pc, r3, lsl #2
   16440:	b	16490 <main@@Base+0x19d0>
   16444:	b	1661c <main@@Base+0x1b5c>
   16448:	b	16664 <main@@Base+0x1ba4>
   1644c:	b	165dc <main@@Base+0x1b1c>
   16450:	b	168f4 <main@@Base+0x1e34>
   16454:	b	168e8 <main@@Base+0x1e28>
   16458:	b	16848 <main@@Base+0x1d88>
   1645c:	b	16460 <main@@Base+0x19a0>
   16460:	ldr	ip, [sp, #68]	; 0x44
   16464:	cmp	ip, #0
   16468:	bne	17308 <main@@Base+0x2848>
   1646c:	add	r0, sp, #160	; 0xa0
   16470:	mov	r1, ip
   16474:	mov	r3, #1
   16478:	str	ip, [sp, #164]	; 0xa4
   1647c:	str	r3, [sp, #160]	; 0xa0
   16480:	bl	14990 <nanosleep@plt>
   16484:	ldr	ip, [sp, #68]	; 0x44
   16488:	add	ip, ip, #1
   1648c:	str	ip, [sp, #68]	; 0x44
   16490:	ldr	r3, [sp, #588]	; 0x24c
   16494:	cmp	r3, #0
   16498:	bne	16d44 <main@@Base+0x2284>
   1649c:	ldr	r3, [sp, #592]	; 0x250
   164a0:	cmp	r3, #0
   164a4:	bne	16d34 <main@@Base+0x2274>
   164a8:	ldr	r3, [sp, #360]	; 0x168
   164ac:	cmp	r3, #0
   164b0:	beq	16520 <main@@Base+0x1a60>
   164b4:	ldrb	r3, [r3]
   164b8:	cmp	r3, #45	; 0x2d
   164bc:	beq	16d9c <main@@Base+0x22dc>
   164c0:	ldr	r2, [sp, #124]	; 0x7c
   164c4:	ldr	r3, [sp, #120]	; 0x78
   164c8:	cmp	r3, #0
   164cc:	cmpeq	r2, #0
   164d0:	bne	16ea8 <main@@Base+0x23e8>
   164d4:	add	r0, sp, #124	; 0x7c
   164d8:	ldr	r1, [sp, #112]	; 0x70
   164dc:	ldr	r2, [sp, #360]	; 0x168
   164e0:	ldr	r3, [sp, #68]	; 0x44
   164e4:	bl	1c9b4 <create_filenames@@Base>
   164e8:	subs	r7, r0, #0
   164ec:	bne	17424 <main@@Base+0x2964>
   164f0:	ldr	r3, [sp, #372]	; 0x174
   164f4:	cmp	r3, #0
   164f8:	bne	16edc <main@@Base+0x241c>
   164fc:	ldr	r1, [pc, #532]	; 16718 <main@@Base+0x1c58>
   16500:	ldr	r0, [sp, #120]	; 0x78
   16504:	add	r1, pc, r1
   16508:	bl	14690 <fopen64@plt>
   1650c:	cmp	r0, #0
   16510:	str	r0, [sp, #60]	; 0x3c
   16514:	beq	17254 <main@@Base+0x2794>
   16518:	ldr	ip, [sp, #60]	; 0x3c
   1651c:	str	ip, [sp, #136]	; 0x88
   16520:	ldr	r3, [sp, #576]	; 0x240
   16524:	ldr	ip, [sp, #60]	; 0x3c
   16528:	cmp	r3, #0
   1652c:	beq	16928 <main@@Base+0x1e68>
   16530:	ldr	r3, [sp, #580]	; 0x244
   16534:	cmp	r3, #0
   16538:	beq	16928 <main@@Base+0x1e68>
   1653c:	cmp	ip, #0
   16540:	beq	16594 <main@@Base+0x1ad4>
   16544:	add	r0, sp, #1136	; 0x470
   16548:	mov	r1, ip
   1654c:	bl	1dae4 <raspitex_capture@@Base>
   16550:	cmp	r0, #0
   16554:	beq	16578 <main@@Base+0x1ab8>
   16558:	ldr	r3, [fp]
   1655c:	cmp	r3, #1
   16560:	bls	16578 <main@@Base+0x1ab8>
   16564:	ldr	r2, [pc, #432]	; 1671c <main@@Base+0x1c5c>
   16568:	mov	r0, fp
   1656c:	mov	r1, #2
   16570:	add	r2, pc, r2
   16574:	bl	1493c <vcos_log_impl@plt>
   16578:	ldr	ip, [sp, #68]	; 0x44
   1657c:	add	r0, r9, #56	; 0x38
   16580:	ldr	r1, [sp, #60]	; 0x3c
   16584:	ldr	r2, [sp, #124]	; 0x7c
   16588:	str	ip, [sp]
   1658c:	ldr	r3, [sp, #120]	; 0x78
   16590:	bl	1ca20 <create_filenames@@Base+0x6c>
   16594:	ldr	r0, [sp, #120]	; 0x78
   16598:	cmp	r0, #0
   1659c:	beq	165ac <main@@Base+0x1aec>
   165a0:	bl	14534 <free@plt>
   165a4:	mov	r3, #0
   165a8:	str	r3, [sp, #120]	; 0x78
   165ac:	ldr	r0, [sp, #124]	; 0x7c
   165b0:	cmp	r0, #0
   165b4:	beq	165c4 <main@@Base+0x1b04>
   165b8:	bl	14534 <free@plt>
   165bc:	mov	r3, #0
   165c0:	str	r3, [sp, #124]	; 0x7c
   165c4:	ldr	ip, [sp, #96]	; 0x60
   165c8:	cmp	ip, #0
   165cc:	bne	163cc <main@@Base+0x190c>
   165d0:	add	r0, sp, #140	; 0x8c
   165d4:	bl	14420 <sem_destroy@plt>
   165d8:	b	160c0 <main@@Base+0x1600>
   165dc:	ldr	r3, [sp, #372]	; 0x174
   165e0:	cmp	r3, #0
   165e4:	bne	17400 <main@@Base+0x2940>
   165e8:	ldr	r3, [pc, #304]	; 16720 <main@@Base+0x1c60>
   165ec:	ldr	ip, [sp, #68]	; 0x44
   165f0:	add	ip, ip, #1
   165f4:	str	ip, [sp, #68]	; 0x44
   165f8:	ldr	r3, [sl, r3]
   165fc:	ldr	r0, [r3]
   16600:	bl	14378 <_IO_getc@plt>
   16604:	ldr	ip, [sp, #96]	; 0x60
   16608:	bic	r0, r0, #32
   1660c:	cmp	r0, #88	; 0x58
   16610:	moveq	ip, #0
   16614:	str	ip, [sp, #96]	; 0x60
   16618:	b	16490 <main@@Base+0x19d0>
   1661c:	ldr	r4, [sp, #380]	; 0x17c
   16620:	mov	r1, #1000	; 0x3e8
   16624:	mov	ip, #0
   16628:	str	ip, [sp, #96]	; 0x60
   1662c:	mov	r0, r4
   16630:	bl	21b5c <vcsm_square_open@@Base+0x88>
   16634:	mov	r1, #1000	; 0x3e8
   16638:	str	r0, [sp, #160]	; 0xa0
   1663c:	mov	r0, r4
   16640:	bl	21d48 <vcsm_square_open@@Base+0x274>
   16644:	movw	r3, #16960	; 0x4240
   16648:	movt	r3, #15
   1664c:	add	r0, sp, #160	; 0xa0
   16650:	mul	r3, r3, r1
   16654:	mov	r1, #0
   16658:	str	r3, [sp, #164]	; 0xa4
   1665c:	bl	14990 <nanosleep@plt>
   16660:	b	16490 <main@@Base+0x19d0>
   16664:	ldr	r8, [pc, #184]	; 16724 <main@@Base+0x1c64>
   16668:	mvn	r2, #0
   1666c:	ldr	ip, [sp, #68]	; 0x44
   16670:	mvn	r3, #0
   16674:	add	r8, pc, r8
   16678:	add	ip, ip, #1
   1667c:	str	ip, [sp, #68]	; 0x44
   16680:	ldrd	r0, [r8, #8]
   16684:	cmp	r1, r3
   16688:	cmpeq	r0, r2
   1668c:	strd	r0, [sp, #32]
   16690:	beq	17500 <main@@Base+0x2a40>
   16694:	ldrd	r2, [sp, #32]
   16698:	subs	r2, r2, r4
   1669c:	sbc	r3, r3, r5
   166a0:	strd	r2, [sp, #88]	; 0x58
   166a4:	cmp	r2, #0
   166a8:	sbcs	r3, r3, #0
   166ac:	blt	17364 <main@@Base+0x28a4>
   166b0:	ldr	r0, [sp, #88]	; 0x58
   166b4:	mov	r1, #1000	; 0x3e8
   166b8:	bl	21b5c <vcsm_square_open@@Base+0x88>
   166bc:	mov	r1, #1000	; 0x3e8
   166c0:	str	r0, [sp, #160]	; 0xa0
   166c4:	ldr	r0, [sp, #88]	; 0x58
   166c8:	bl	21d48 <vcsm_square_open@@Base+0x274>
   166cc:	movw	r3, #16960	; 0x4240
   166d0:	movt	r3, #15
   166d4:	add	r0, sp, #160	; 0xa0
   166d8:	mul	r3, r3, r1
   166dc:	mov	r1, #0
   166e0:	str	r3, [sp, #164]	; 0xa4
   166e4:	bl	14990 <nanosleep@plt>
   166e8:	ldrd	r2, [r8, #8]
   166ec:	ldr	r1, [sp, #564]	; 0x234
   166f0:	adds	r2, r2, r1
   166f4:	adc	r3, r3, r1, asr #31
   166f8:	strd	r2, [r8, #8]
   166fc:	b	16490 <main@@Base+0x19d0>
   16700:	andeq	r0, r0, r0
   16704:	subsmi	r0, r9, r0
   16708:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1670c:	andmi	ip, ip, ip, asr #25
   16710:	andeq	r4, r2, r8, lsl #9
   16714:	andeq	r4, r2, r0, ror #8
   16718:	andeq	lr, r0, r0, lsl lr
   1671c:	andeq	lr, r0, ip, ror #27
   16720:	andeq	r0, r0, r8, asr #6
   16724:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   16728:	andeq	lr, r0, r4, lsr #19
   1672c:	andeq	lr, r0, r4, lsr #20
   16730:	strdeq	lr, [r0], -ip
   16734:	strdeq	lr, [r0], -r0
   16738:	andeq	lr, r0, ip, lsr #19
   1673c:	muleq	r0, r8, r9
   16740:	andeq	lr, r0, r4, lsl #19
   16744:	andeq	lr, r0, ip, asr #23
   16748:	andeq	r5, r0, r0, lsl fp
   1674c:			; <UNDEFINED> instruction: 0x0000ebb8
   16750:	andeq	lr, r0, r4, ror #23
   16754:	andeq	sp, r0, ip, lsr ip
   16758:	strdeq	lr, [r0], -ip
   1675c:	andeq	r0, r0, r0, asr r3
   16760:	andeq	lr, r0, r0, ror #19
   16764:	andeq	lr, r0, r8, lsl #19
   16768:	andeq	lr, r0, r0, asr #17
   1676c:	andeq	lr, r0, r8, lsr r8
   16770:	strdeq	lr, [r0], -ip
   16774:	andeq	sp, r0, r4, lsr sl
   16778:	andeq	sp, r0, r0, asr fp
   1677c:	andeq	ip, r0, r8, asr #2
   16780:	andeq	lr, r0, ip, lsl #8
   16784:	andeq	lr, r0, ip, lsl #10
   16788:	andeq	lr, r0, r0, lsl r5
   1678c:	andeq	lr, r0, r4, lsl r5
   16790:	andeq	lr, r0, r8, lsl r5
   16794:	andeq	lr, r0, ip, lsl r5
   16798:	andeq	lr, r0, r0, lsr #10
   1679c:	andeq	lr, r0, r4, lsr #10
   167a0:	andeq	lr, r0, r8, lsr #10
   167a4:	andeq	lr, r0, r0, lsr r5
   167a8:	andeq	lr, r0, r4, lsr r5
   167ac:	andeq	lr, r0, r8, lsr r5
   167b0:	andeq	lr, r0, r8, lsr r5
   167b4:	andeq	lr, r0, ip, lsr r5
   167b8:	andeq	lr, r0, ip, lsr r5
   167bc:	andeq	lr, r0, r4, asr #10
   167c0:	andeq	lr, r0, r0, lsl r5
   167c4:	strdeq	lr, [r0], -r8
   167c8:	ldrdeq	lr, [r0], -r8
   167cc:	andeq	lr, r0, r4, lsr #9
   167d0:	andeq	lr, r0, r4, lsl #9
   167d4:	andeq	lr, r0, r4, lsr #1
   167d8:	andeq	sp, r0, r0, lsr #29
   167dc:	andeq	sp, r0, r8, lsl #12
   167e0:	andeq	sp, r0, r4, lsr #14
   167e4:	andeq	fp, r0, ip, lsl sp
   167e8:	andeq	sp, r0, r4, asr #30
   167ec:	ldrdeq	sp, [r0], -r0
   167f0:	andeq	sp, r0, r0, lsr #28
   167f4:	andeq	sp, r0, ip, asr #27
   167f8:	andeq	sp, r0, r4, lsr #29
   167fc:	andeq	sp, r0, r0, lsr sp
   16800:	andeq	r3, r2, r0, lsl #7
   16804:	andeq	sp, r0, r8, lsl #26
   16808:	andeq	lr, r0, ip, asr #32
   1680c:	andeq	lr, r0, r8, lsr #32
   16810:	andeq	sp, r0, r4, ror #30
   16814:	andeq	sp, r0, ip, asr #30
   16818:	andeq	sp, r0, r0, lsr pc
   1681c:	andeq	sp, r0, r8, lsr #30
   16820:	andeq	sp, r0, ip, lsr #29
   16824:	andeq	sp, r0, r4, ror pc
   16828:	andeq	sp, r0, r0, asr pc
   1682c:			; <UNDEFINED> instruction: 0x0000deb8
   16830:	muleq	r0, r4, lr
   16834:	muleq	r0, r4, lr
   16838:	andeq	sp, r0, ip, ror lr
   1683c:	andeq	r0, r0, r4, asr r3
   16840:	andeq	sp, r0, ip, asr r8
   16844:	andeq	sp, r0, r4, ror r8
   16848:	add	r4, sp, #208	; 0xd0
   1684c:	mov	r0, r4
   16850:	bl	141f8 <sigemptyset@plt>
   16854:	mov	r1, #10
   16858:	mov	r0, r4
   1685c:	bl	146e4 <sigaddset@plt>
   16860:	mov	r1, #12
   16864:	mov	r0, r4
   16868:	bl	146e4 <sigaddset@plt>
   1686c:	mov	r0, #0
   16870:	mov	r1, r4
   16874:	mov	r2, r0
   16878:	bl	14708 <pthread_sigmask@plt>
   1687c:	ldr	r3, [sp, #372]	; 0x174
   16880:	cmp	r3, #0
   16884:	bne	173dc <main@@Base+0x291c>
   16888:	mov	r0, r4
   1688c:	add	r1, sp, #160	; 0xa0
   16890:	bl	144e0 <sigwait@plt>
   16894:	subs	ip, r0, #0
   16898:	bne	17328 <main@@Base+0x2868>
   1689c:	ldr	r3, [sp, #160]	; 0xa0
   168a0:	cmp	r3, #10
   168a4:	beq	17540 <main@@Base+0x2a80>
   168a8:	cmp	r3, #12
   168ac:	bne	16484 <main@@Base+0x19c4>
   168b0:	ldr	r3, [sp, #372]	; 0x174
   168b4:	cmp	r3, #0
   168b8:	streq	r3, [sp, #96]	; 0x60
   168bc:	beq	16484 <main@@Base+0x19c4>
   168c0:	ldr	r3, [pc, #-140]	; 1683c <main@@Base+0x1d7c>
   168c4:	mov	r1, #1
   168c8:	str	ip, [sp, #96]	; 0x60
   168cc:	mov	r2, #17
   168d0:	ldr	r0, [pc, #-432]	; 16728 <main@@Base+0x1c68>
   168d4:	ldr	r3, [sl, r3]
   168d8:	add	r0, pc, r0
   168dc:	ldr	r3, [r3]
   168e0:	bl	147b0 <fwrite@plt>
   168e4:	b	16484 <main@@Base+0x19c4>
   168e8:	mov	ip, #0
   168ec:	str	ip, [sp, #96]	; 0x60
   168f0:	b	16490 <main@@Base+0x19d0>
   168f4:	mov	r3, #0
   168f8:	ldr	ip, [sp, #68]	; 0x44
   168fc:	mov	r1, r3
   16900:	add	r0, sp, #160	; 0xa0
   16904:	add	ip, ip, #1
   16908:	str	r3, [sp, #164]	; 0xa4
   1690c:	str	ip, [sp, #68]	; 0x44
   16910:	mov	r3, #10
   16914:	str	r3, [sp, #160]	; 0xa0
   16918:	bl	14990 <nanosleep@plt>
   1691c:	mov	ip, #1
   16920:	str	ip, [sp, #96]	; 0x60
   16924:	b	16490 <main@@Base+0x19d0>
   16928:	cmp	ip, #0
   1692c:	beq	16594 <main@@Base+0x1ad4>
   16930:	ldr	r3, [sp, #560]	; 0x230
   16934:	cmp	r3, #0
   16938:	beq	16d14 <main@@Base+0x2254>
   1693c:	bl	1b980 <raspi_gps_lock@@Base>
   16940:	add	r4, sp, #1584	; 0x630
   16944:	add	r4, r4, #12
   16948:	ldr	r2, [pc, #-548]	; 1672c <main@@Base+0x1c6c>
   1694c:	mov	r1, #32
   16950:	str	r9, [sp, #4]
   16954:	mov	r3, r1
   16958:	add	r2, pc, r2
   1695c:	str	r2, [sp]
   16960:	mov	r2, #1
   16964:	add	r7, sp, #1616	; 0x650
   16968:	add	r7, r7, #12
   1696c:	mov	r5, r0
   16970:	mov	r0, r4
   16974:	bl	1475c <__snprintf_chk@plt>
   16978:	mov	r1, r4
   1697c:	mov	r0, r9
   16980:	add	r4, sp, #1648	; 0x670
   16984:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16988:	ldr	r1, [pc, #-608]	; 16730 <main@@Base+0x1c70>
   1698c:	mov	r0, r9
   16990:	add	r4, r4, #12
   16994:	add	r1, pc, r1
   16998:	bl	1c7e0 <deg_to_str@@Base+0x284>
   1699c:	add	r0, sp, #160	; 0xa0
   169a0:	bl	147c8 <time@plt>
   169a4:	add	r0, sp, #160	; 0xa0
   169a8:	bl	14270 <localtime@plt>
   169ac:	ldr	lr, [pc, #-640]	; 16734 <main@@Base+0x1c74>
   169b0:	mov	r2, #1
   169b4:	mov	r1, #32
   169b8:	add	lr, pc, lr
   169bc:	str	lr, [sp]
   169c0:	mov	r3, r1
   169c4:	mov	ip, r0
   169c8:	mov	r0, r7
   169cc:	ldr	lr, [ip, #20]
   169d0:	add	lr, lr, #1888	; 0x760
   169d4:	add	lr, lr, #12
   169d8:	str	lr, [sp, #4]
   169dc:	ldr	lr, [ip, #16]
   169e0:	add	lr, lr, r2
   169e4:	str	lr, [sp, #8]
   169e8:	ldr	lr, [ip, #12]
   169ec:	str	lr, [sp, #12]
   169f0:	ldr	lr, [ip, #8]
   169f4:	str	lr, [sp, #16]
   169f8:	ldr	lr, [ip, #4]
   169fc:	str	lr, [sp, #20]
   16a00:	ldr	ip, [ip]
   16a04:	str	ip, [sp, #24]
   16a08:	bl	1475c <__snprintf_chk@plt>
   16a0c:	ldr	r2, [pc, #-732]	; 16738 <main@@Base+0x1c78>
   16a10:	mov	r1, #128	; 0x80
   16a14:	str	r7, [sp, #4]
   16a18:	mov	r3, r1
   16a1c:	add	r2, pc, r2
   16a20:	mov	r0, r4
   16a24:	str	r2, [sp]
   16a28:	mov	r2, #1
   16a2c:	bl	1475c <__snprintf_chk@plt>
   16a30:	mov	r1, r4
   16a34:	mov	r0, r9
   16a38:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16a3c:	ldr	r2, [pc, #-776]	; 1673c <main@@Base+0x1c7c>
   16a40:	mov	r1, #128	; 0x80
   16a44:	str	r7, [sp, #4]
   16a48:	mov	r3, r1
   16a4c:	add	r2, pc, r2
   16a50:	mov	r0, r4
   16a54:	str	r2, [sp]
   16a58:	mov	r2, #1
   16a5c:	bl	1475c <__snprintf_chk@plt>
   16a60:	mov	r1, r4
   16a64:	mov	r0, r9
   16a68:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16a6c:	ldr	r2, [pc, #-820]	; 16740 <main@@Base+0x1c80>
   16a70:	mov	r1, #128	; 0x80
   16a74:	str	r7, [sp, #4]
   16a78:	mov	r3, r1
   16a7c:	add	r2, pc, r2
   16a80:	mov	r0, r4
   16a84:	str	r2, [sp]
   16a88:	mov	r2, #1
   16a8c:	bl	1475c <__snprintf_chk@plt>
   16a90:	mov	r0, r9
   16a94:	mov	r1, r4
   16a98:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16a9c:	ldr	r3, [sp, #376]	; 0x178
   16aa0:	cmp	r3, #0
   16aa4:	bne	16f00 <main@@Base+0x2440>
   16aa8:	add	r5, r9, #88	; 0x58
   16aac:	mov	r4, #0
   16ab0:	ldr	r3, [sp, #556]	; 0x22c
   16ab4:	b	16adc <main@@Base+0x201c>
   16ab8:	cmp	r4, #32
   16abc:	beq	16ae4 <main@@Base+0x2024>
   16ac0:	ldr	r1, [r5, #4]!
   16ac4:	cmp	r1, #0
   16ac8:	beq	16ad8 <main@@Base+0x2018>
   16acc:	mov	r0, r9
   16ad0:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16ad4:	ldr	r3, [sp, #556]	; 0x22c
   16ad8:	add	r4, r4, #1
   16adc:	cmp	r4, r3
   16ae0:	blt	16ab8 <main@@Base+0x1ff8>
   16ae4:	bl	1b9a4 <raspi_gps_unlock@@Base>
   16ae8:	ldr	r3, [sp, #388]	; 0x184
   16aec:	cmp	r3, #0
   16af0:	bne	16e68 <main@@Base+0x23a8>
   16af4:	ldr	r3, [sp, #1112]	; 0x458
   16af8:	mov	r1, #67	; 0x43
   16afc:	ldr	r2, [sp, #776]	; 0x308
   16b00:	movt	r1, #1
   16b04:	ldr	r0, [r3, #16]
   16b08:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   16b0c:	bl	1b3c4 <mmal_status_to_int@@Base>
   16b10:	cmp	r0, #0
   16b14:	beq	16b38 <main@@Base+0x2078>
   16b18:	ldr	r3, [fp]
   16b1c:	cmp	r3, #1
   16b20:	bls	16b38 <main@@Base+0x2078>
   16b24:	ldr	r2, [pc, #-1000]	; 16744 <main@@Base+0x1c84>
   16b28:	mov	r0, fp
   16b2c:	mov	r1, #2
   16b30:	add	r2, pc, r2
   16b34:	bl	1493c <vcos_log_impl@plt>
   16b38:	ldr	r3, [sp, #372]	; 0x174
   16b3c:	add	r1, sp, #136	; 0x88
   16b40:	str	r1, [r6, #56]	; 0x38
   16b44:	cmp	r3, #0
   16b48:	bne	16e44 <main@@Base+0x2384>
   16b4c:	ldr	r1, [pc, #-1036]	; 16748 <main@@Base+0x1c88>
   16b50:	mov	r0, r6
   16b54:	add	r1, pc, r1
   16b58:	bl	142d0 <mmal_port_enable@plt>
   16b5c:	ldr	r3, [sp, #1132]	; 0x46c
   16b60:	ldr	r0, [r3]
   16b64:	bl	14918 <mmal_queue_length@plt>
   16b68:	subs	r5, r0, #0
   16b6c:	ble	16c10 <main@@Base+0x2150>
   16b70:	ldr	ip, [pc, #-1068]	; 1674c <main@@Base+0x1c8c>
   16b74:	mov	r4, #0
   16b78:	ldr	r8, [pc, #-1072]	; 16750 <main@@Base+0x1c90>
   16b7c:	mov	r7, fp
   16b80:	add	ip, pc, ip
   16b84:	str	ip, [sp, #88]	; 0x58
   16b88:	add	r8, pc, r8
   16b8c:	b	16bd0 <main@@Base+0x2110>
   16b90:	mov	r1, ip
   16b94:	mov	r0, r6
   16b98:	bl	14a50 <mmal_port_send_buffer@plt>
   16b9c:	cmp	r0, #0
   16ba0:	beq	16bc4 <main@@Base+0x2104>
   16ba4:	ldr	r3, [fp]
   16ba8:	cmp	r3, #1
   16bac:	bls	16bc4 <main@@Base+0x2104>
   16bb0:	mov	r0, r7
   16bb4:	mov	r1, #2
   16bb8:	mov	r2, r8
   16bbc:	mov	r3, r4
   16bc0:	bl	1493c <vcos_log_impl@plt>
   16bc4:	add	r4, r4, #1
   16bc8:	cmp	r5, r4
   16bcc:	beq	16c10 <main@@Base+0x2150>
   16bd0:	ldr	r3, [sp, #1132]	; 0x46c
   16bd4:	ldr	r0, [r3]
   16bd8:	bl	144b0 <mmal_queue_get@plt>
   16bdc:	subs	ip, r0, #0
   16be0:	bne	16b90 <main@@Base+0x20d0>
   16be4:	ldr	r3, [fp]
   16be8:	cmp	r3, #1
   16bec:	bls	16b90 <main@@Base+0x20d0>
   16bf0:	mov	r0, r7
   16bf4:	mov	r1, #2
   16bf8:	ldr	r2, [sp, #88]	; 0x58
   16bfc:	mov	r3, r4
   16c00:	str	ip, [sp, #52]	; 0x34
   16c04:	bl	1493c <vcos_log_impl@plt>
   16c08:	ldr	ip, [sp, #52]	; 0x34
   16c0c:	b	16b90 <main@@Base+0x20d0>
   16c10:	ldr	r3, [sp, #584]	; 0x248
   16c14:	cmp	r3, #0
   16c18:	bne	16e28 <main@@Base+0x2368>
   16c1c:	ldr	r1, [sp, #796]	; 0x31c
   16c20:	cmp	r1, #0
   16c24:	beq	16c74 <main@@Base+0x21b4>
   16c28:	tst	r1, #2
   16c2c:	beq	16c3c <main@@Base+0x217c>
   16c30:	ldr	r3, [sp, #376]	; 0x178
   16c34:	cmp	r3, #0
   16c38:	bne	17284 <main@@Base+0x27c4>
   16c3c:	ldr	ip, [sp, #1060]	; 0x424
   16c40:	add	r2, sp, #800	; 0x320
   16c44:	ldr	r0, [sp, #1068]	; 0x42c
   16c48:	ldr	r3, [sp, #1072]	; 0x430
   16c4c:	ldr	lr, [sp, #1064]	; 0x428
   16c50:	str	ip, [sp]
   16c54:	ldr	ip, [sp, #1076]	; 0x434
   16c58:	str	r0, [sp, #8]
   16c5c:	str	r3, [sp, #12]
   16c60:	str	lr, [sp, #4]
   16c64:	str	ip, [sp, #16]
   16c68:	ldr	r0, [sp, #1112]	; 0x458
   16c6c:	ldr	r3, [sp, #1056]	; 0x420
   16c70:	bl	19a74 <raspicamcontrol_set_annotate@@Base>
   16c74:	ldr	r3, [sp, #372]	; 0x174
   16c78:	cmp	r3, #0
   16c7c:	bne	16e04 <main@@Base+0x2344>
   16c80:	mov	r1, #17
   16c84:	ldr	r0, [sp, #72]	; 0x48
   16c88:	movt	r1, #1
   16c8c:	mov	r2, #1
   16c90:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   16c94:	cmp	r0, #0
   16c98:	beq	16db0 <main@@Base+0x22f0>
   16c9c:	ldr	r3, [fp]
   16ca0:	cmp	r3, #1
   16ca4:	bls	16cc8 <main@@Base+0x2208>
   16ca8:	ldr	r3, [pc, #-1372]	; 16754 <main@@Base+0x1c94>
   16cac:	mov	r0, fp
   16cb0:	ldr	r2, [pc, #-1376]	; 16758 <main@@Base+0x1c98>
   16cb4:	mov	r1, #2
   16cb8:	add	r3, pc, r3
   16cbc:	add	r2, pc, r2
   16cc0:	add	r3, r3, #116	; 0x74
   16cc4:	bl	1493c <vcos_log_impl@plt>
   16cc8:	ldr	r3, [pc, #-1396]	; 1675c <main@@Base+0x1c9c>
   16ccc:	mov	r2, #0
   16cd0:	str	r2, [sp, #136]	; 0x88
   16cd4:	ldr	ip, [sp, #60]	; 0x3c
   16cd8:	ldr	r3, [sl, r3]
   16cdc:	ldr	r3, [r3]
   16ce0:	cmp	ip, r3
   16ce4:	beq	17248 <main@@Base+0x2788>
   16ce8:	ldr	ip, [sp, #68]	; 0x44
   16cec:	add	r0, r9, #56	; 0x38
   16cf0:	ldr	r1, [sp, #60]	; 0x3c
   16cf4:	ldr	r2, [sp, #124]	; 0x7c
   16cf8:	str	ip, [sp]
   16cfc:	ldr	r3, [sp, #120]	; 0x78
   16d00:	bl	1ca20 <create_filenames@@Base+0x6c>
   16d04:	mov	r0, r6
   16d08:	bl	145b8 <mmal_port_disable@plt>
   16d0c:	mov	r7, r0
   16d10:	b	16594 <main@@Base+0x1ad4>
   16d14:	ldr	r3, [sp, #1116]	; 0x45c
   16d18:	mov	r1, #3
   16d1c:	mov	r2, #1
   16d20:	movt	r1, #1
   16d24:	ldr	r3, [r3, #32]
   16d28:	ldr	r0, [r3]
   16d2c:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   16d30:	b	16ae8 <main@@Base+0x2028>
   16d34:	mov	r0, #0
   16d38:	bl	147c8 <time@plt>
   16d3c:	str	r0, [sp, #68]	; 0x44
   16d40:	b	164a8 <main@@Base+0x19e8>
   16d44:	add	r0, sp, #160	; 0xa0
   16d48:	bl	147c8 <time@plt>
   16d4c:	add	r0, sp, #160	; 0xa0
   16d50:	bl	14270 <localtime@plt>
   16d54:	mov	r3, #100	; 0x64
   16d58:	ldr	lr, [r0, #16]
   16d5c:	ldr	r2, [r0, #12]
   16d60:	add	lr, lr, #1
   16d64:	ldr	ip, [r0, #8]
   16d68:	ldr	r1, [r0, #4]
   16d6c:	mla	lr, r3, lr, r2
   16d70:	ldr	r2, [r0]
   16d74:	mla	r0, r3, lr, ip
   16d78:	mla	r1, r3, r0, r1
   16d7c:	mla	r2, r3, r1, r2
   16d80:	str	r2, [sp, #68]	; 0x44
   16d84:	b	1649c <main@@Base+0x19dc>
   16d88:	ldr	r1, [sp, #380]	; 0x17c
   16d8c:	adds	r2, r4, r1
   16d90:	adc	r3, r5, r1, asr #31
   16d94:	strd	r2, [ip]
   16d98:	b	16404 <main@@Base+0x1944>
   16d9c:	ldr	r3, [pc, #-1608]	; 1675c <main@@Base+0x1c9c>
   16da0:	ldr	r3, [sl, r3]
   16da4:	ldr	r3, [r3]
   16da8:	str	r3, [sp, #60]	; 0x3c
   16dac:	b	16518 <main@@Base+0x1a58>
   16db0:	add	r4, sp, #140	; 0x8c
   16db4:	mov	r0, r4
   16db8:	bl	149d8 <sem_wait@plt>
   16dbc:	cmn	r0, #1
   16dc0:	bne	16dd4 <main@@Base+0x2314>
   16dc4:	bl	14a2c <__errno_location@plt>
   16dc8:	ldr	r3, [r0]
   16dcc:	cmp	r3, #4
   16dd0:	beq	16db4 <main@@Base+0x22f4>
   16dd4:	ldr	r3, [sp, #372]	; 0x174
   16dd8:	cmp	r3, #0
   16ddc:	beq	16cc8 <main@@Base+0x2208>
   16de0:	ldr	r0, [pc, #-1452]	; 1683c <main@@Base+0x1d7c>
   16de4:	mov	r1, #1
   16de8:	ldr	r2, [pc, #-1680]	; 16760 <main@@Base+0x1ca0>
   16dec:	ldr	r3, [sp, #68]	; 0x44
   16df0:	ldr	r0, [sl, r0]
   16df4:	add	r2, pc, r2
   16df8:	ldr	r0, [r0]
   16dfc:	bl	14834 <__fprintf_chk@plt>
   16e00:	b	16cc8 <main@@Base+0x2208>
   16e04:	ldr	r0, [pc, #-1488]	; 1683c <main@@Base+0x1d7c>
   16e08:	mov	r1, #1
   16e0c:	ldr	r2, [pc, #-1712]	; 16764 <main@@Base+0x1ca4>
   16e10:	ldr	r3, [sp, #68]	; 0x44
   16e14:	ldr	r0, [sl, r0]
   16e18:	add	r2, pc, r2
   16e1c:	ldr	r0, [r0]
   16e20:	bl	14834 <__fprintf_chk@plt>
   16e24:	b	16c80 <main@@Base+0x21c0>
   16e28:	ldr	r3, [sp, #1112]	; 0x458
   16e2c:	mov	r1, #51	; 0x33
   16e30:	mov	r2, #1
   16e34:	movt	r1, #1
   16e38:	ldr	r0, [r3, #16]
   16e3c:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   16e40:	b	16c1c <main@@Base+0x215c>
   16e44:	ldr	r3, [pc, #-1552]	; 1683c <main@@Base+0x1d7c>
   16e48:	mov	r1, #1
   16e4c:	ldr	r0, [pc, #-1772]	; 16768 <main@@Base+0x1ca8>
   16e50:	mov	r2, #29
   16e54:	ldr	r3, [sl, r3]
   16e58:	add	r0, pc, r0
   16e5c:	ldr	r3, [r3]
   16e60:	bl	147b0 <fwrite@plt>
   16e64:	b	16b4c <main@@Base+0x208c>
   16e68:	mov	r1, #31
   16e6c:	ldr	r0, [sp, #72]	; 0x48
   16e70:	movt	r1, #1
   16e74:	mov	r2, #1
   16e78:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   16e7c:	cmp	r0, #0
   16e80:	beq	16af4 <main@@Base+0x2034>
   16e84:	ldr	r3, [fp]
   16e88:	cmp	r3, #1
   16e8c:	bls	16af4 <main@@Base+0x2034>
   16e90:	ldr	r2, [pc, #-1836]	; 1676c <main@@Base+0x1cac>
   16e94:	mov	r0, fp
   16e98:	mov	r1, #2
   16e9c:	add	r2, pc, r2
   16ea0:	bl	1493c <vcos_log_impl@plt>
   16ea4:	b	16af4 <main@@Base+0x2034>
   16ea8:	ldr	r3, [pc, #-1856]	; 16770 <main@@Base+0x1cb0>
   16eac:	movw	r2, #1839	; 0x72f
   16eb0:	ldr	r1, [pc, #-1860]	; 16774 <main@@Base+0x1cb4>
   16eb4:	add	r3, pc, r3
   16eb8:	ldr	r0, [pc, #-1864]	; 16778 <main@@Base+0x1cb8>
   16ebc:	str	r3, [sp]
   16ec0:	add	r1, pc, r1
   16ec4:	ldr	r3, [pc, #-1872]	; 1677c <main@@Base+0x1cbc>
   16ec8:	add	r0, pc, r0
   16ecc:	add	r1, r1, #116	; 0x74
   16ed0:	add	r3, pc, r3
   16ed4:	bl	14924 <vcos_pthreads_logging_assert@plt>
   16ed8:	b	164d4 <main@@Base+0x1a14>
   16edc:	ldr	r0, [pc, #-1704]	; 1683c <main@@Base+0x1d7c>
   16ee0:	mov	r1, #1
   16ee4:	ldr	r2, [pc, #-1900]	; 16780 <main@@Base+0x1cc0>
   16ee8:	ldr	r3, [sp, #124]	; 0x7c
   16eec:	ldr	r0, [sl, r0]
   16ef0:	add	r2, pc, r2
   16ef4:	ldr	r0, [r0]
   16ef8:	bl	14834 <__fprintf_chk@plt>
   16efc:	b	164fc <main@@Base+0x1a3c>
   16f00:	ldr	r1, [pc, #-1924]	; 16784 <main@@Base+0x1cc4>
   16f04:	mov	r0, r9
   16f08:	add	r1, pc, r1
   16f0c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f10:	ldr	r1, [pc, #-1936]	; 16788 <main@@Base+0x1cc8>
   16f14:	mov	r0, r9
   16f18:	add	r1, pc, r1
   16f1c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f20:	ldr	r1, [pc, #-1948]	; 1678c <main@@Base+0x1ccc>
   16f24:	mov	r0, r9
   16f28:	add	r1, pc, r1
   16f2c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f30:	ldr	r1, [pc, #-1960]	; 16790 <main@@Base+0x1cd0>
   16f34:	mov	r0, r9
   16f38:	add	r1, pc, r1
   16f3c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f40:	ldr	r1, [pc, #-1972]	; 16794 <main@@Base+0x1cd4>
   16f44:	mov	r0, r9
   16f48:	add	r1, pc, r1
   16f4c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f50:	ldr	r1, [pc, #-1984]	; 16798 <main@@Base+0x1cd8>
   16f54:	mov	r0, r9
   16f58:	add	r1, pc, r1
   16f5c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f60:	ldr	r1, [pc, #-1996]	; 1679c <main@@Base+0x1cdc>
   16f64:	mov	r0, r9
   16f68:	add	r1, pc, r1
   16f6c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f70:	ldr	r1, [pc, #-2008]	; 167a0 <main@@Base+0x1ce0>
   16f74:	mov	r0, r9
   16f78:	add	r1, pc, r1
   16f7c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f80:	ldr	r1, [pc, #-2020]	; 167a4 <main@@Base+0x1ce4>
   16f84:	mov	r0, r9
   16f88:	add	r1, pc, r1
   16f8c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16f90:	ldr	r1, [pc, #-2032]	; 167a8 <main@@Base+0x1ce8>
   16f94:	mov	r0, r9
   16f98:	add	r1, pc, r1
   16f9c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16fa0:	ldr	r1, [pc, #-2044]	; 167ac <main@@Base+0x1cec>
   16fa4:	mov	r0, r9
   16fa8:	add	r1, pc, r1
   16fac:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16fb0:	ldr	r1, [pc, #-2056]	; 167b0 <main@@Base+0x1cf0>
   16fb4:	mov	r0, r9
   16fb8:	add	r1, pc, r1
   16fbc:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16fc0:	ldr	r1, [pc, #-2068]	; 167b4 <main@@Base+0x1cf4>
   16fc4:	mov	r0, r9
   16fc8:	add	r1, pc, r1
   16fcc:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16fd0:	ldr	r1, [pc, #-2080]	; 167b8 <main@@Base+0x1cf8>
   16fd4:	mov	r0, r9
   16fd8:	add	r1, pc, r1
   16fdc:	bl	1c7e0 <deg_to_str@@Base+0x284>
   16fe0:	vldr	d7, [r5, #8]
   16fe4:	vcmp.f64	d7, #0.0
   16fe8:	vmrs	APSR_nzcv, fpscr
   16fec:	beq	16aa8 <main@@Base+0x1fe8>
   16ff0:	ldr	r3, [sp, #372]	; 0x174
   16ff4:	cmp	r3, #0
   16ff8:	bne	17668 <main@@Base+0x2ba8>
   16ffc:	ldrd	r2, [r5]
   17000:	mov	r0, #4
   17004:	mov	r1, #0
   17008:	and	r2, r2, r0
   1700c:	and	r3, r3, r1
   17010:	orrs	r0, r2, r3
   17014:	bne	175bc <main@@Base+0x2afc>
   17018:	ldr	r3, [r5, #32]
   1701c:	cmp	r3, #1
   17020:	ble	16aa8 <main@@Base+0x1fe8>
   17024:	cmp	r3, #2
   17028:	ldr	r2, [pc, #-2164]	; 167bc <main@@Base+0x1cfc>
   1702c:	mov	r1, #128	; 0x80
   17030:	moveq	r0, #50	; 0x32
   17034:	movne	r0, #51	; 0x33
   17038:	mov	r3, r1
   1703c:	add	r2, pc, r2
   17040:	str	r0, [sp, #4]
   17044:	mov	r0, r4
   17048:	str	r2, [sp]
   1704c:	mov	r2, #1
   17050:	bl	1475c <__snprintf_chk@plt>
   17054:	mov	r0, r9
   17058:	mov	r1, r4
   1705c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17060:	ldr	r3, [r5, #156]	; 0x9c
   17064:	cmp	r3, #0
   17068:	ble	175a4 <main@@Base+0x2ae4>
   1706c:	ldr	r2, [r5, #232]	; 0xe8
   17070:	cmp	r2, #0
   17074:	ble	17570 <main@@Base+0x2ab0>
   17078:	ldr	ip, [pc, #-2240]	; 167c0 <main@@Base+0x1d00>
   1707c:	mov	r1, #128	; 0x80
   17080:	str	r3, [sp, #4]
   17084:	mov	r0, r4
   17088:	add	ip, pc, ip
   1708c:	mov	r3, r1
   17090:	str	r2, [sp, #8]
   17094:	mov	r2, #1
   17098:	str	ip, [sp]
   1709c:	bl	1475c <__snprintf_chk@plt>
   170a0:	mov	r0, r9
   170a4:	mov	r1, r4
   170a8:	bl	1c7e0 <deg_to_str@@Base+0x284>
   170ac:	ldrd	r2, [r5]
   170b0:	mov	r0, #16
   170b4:	mov	r1, #0
   170b8:	and	r0, r0, r2
   170bc:	and	r1, r1, r3
   170c0:	orrs	ip, r0, r1
   170c4:	beq	170f4 <main@@Base+0x2634>
   170c8:	vldr	d10, [r5, #48]	; 0x30
   170cc:	vmov.f64	d0, d10
   170d0:	bl	147bc <__isnan@plt>
   170d4:	cmp	r0, #0
   170d8:	beq	1771c <main@@Base+0x2c5c>
   170dc:	vldr	d10, [r5, #64]	; 0x40
   170e0:	vmov.f64	d0, d10
   170e4:	bl	147bc <__isnan@plt>
   170e8:	cmp	r0, #0
   170ec:	beq	1768c <main@@Base+0x2bcc>
   170f0:	ldrd	r2, [r5]
   170f4:	mov	r0, #32
   170f8:	mov	r1, #0
   170fc:	and	r0, r0, r2
   17100:	and	r1, r1, r3
   17104:	orrs	ip, r0, r1
   17108:	beq	1713c <main@@Base+0x267c>
   1710c:	ldr	r1, [r5, #32]
   17110:	cmp	r1, #2
   17114:	ble	1713c <main@@Base+0x267c>
   17118:	vldr	d10, [r5, #80]	; 0x50
   1711c:	vmov.f64	d0, d10
   17120:	str	r2, [sp, #52]	; 0x34
   17124:	str	r3, [sp, #48]	; 0x30
   17128:	bl	147bc <__isnan@plt>
   1712c:	ldr	r2, [sp, #52]	; 0x34
   17130:	ldr	r3, [sp, #48]	; 0x30
   17134:	cmp	r0, #0
   17138:	beq	177ac <main@@Base+0x2cec>
   1713c:	mov	r0, #64	; 0x40
   17140:	mov	r1, #0
   17144:	and	r0, r0, r2
   17148:	and	r1, r1, r3
   1714c:	orrs	ip, r0, r1
   17150:	beq	171cc <main@@Base+0x270c>
   17154:	vldr	d10, [r5, #112]	; 0x70
   17158:	vmov.f64	d0, d10
   1715c:	str	r2, [sp, #52]	; 0x34
   17160:	str	r3, [sp, #48]	; 0x30
   17164:	bl	147bc <__isnan@plt>
   17168:	ldr	r2, [sp, #52]	; 0x34
   1716c:	ldr	r3, [sp, #48]	; 0x30
   17170:	cmp	r0, #0
   17174:	bne	171cc <main@@Base+0x270c>
   17178:	vmul.f64	d10, d10, d11
   1717c:	ldr	r2, [pc, #-2496]	; 167c4 <main@@Base+0x1d04>
   17180:	mov	r1, #128	; 0x80
   17184:	mov	r0, r4
   17188:	mov	r3, r1
   1718c:	add	r2, pc, r2
   17190:	str	r2, [sp]
   17194:	mov	r2, #1
   17198:	vmov.f64	d7, d8
   1719c:	vmla.f64	d7, d10, d9
   171a0:	vcvt.s32.f64	s14, d7
   171a4:	vstr	s14, [sp, #4]
   171a8:	bl	1475c <__snprintf_chk@plt>
   171ac:	mov	r1, r4
   171b0:	mov	r0, r9
   171b4:	bl	1c7e0 <deg_to_str@@Base+0x284>
   171b8:	ldr	r1, [pc, #-2552]	; 167c8 <main@@Base+0x1d08>
   171bc:	mov	r0, r9
   171c0:	add	r1, pc, r1
   171c4:	bl	1c7e0 <deg_to_str@@Base+0x284>
   171c8:	ldrd	r2, [r5]
   171cc:	mov	r0, #128	; 0x80
   171d0:	mov	r1, #0
   171d4:	and	r2, r2, r0
   171d8:	and	r3, r3, r1
   171dc:	orrs	r0, r2, r3
   171e0:	beq	16aa8 <main@@Base+0x1fe8>
   171e4:	vldr	d10, [r5, #96]	; 0x60
   171e8:	vmov.f64	d0, d10
   171ec:	bl	147bc <__isnan@plt>
   171f0:	cmp	r0, #0
   171f4:	bne	16aa8 <main@@Base+0x1fe8>
   171f8:	vmov.f64	d7, d8
   171fc:	ldr	ip, [pc, #-2616]	; 167cc <main@@Base+0x1d0c>
   17200:	mov	r1, #128	; 0x80
   17204:	mov	r2, #1
   17208:	add	ip, pc, ip
   1720c:	mov	r3, r1
   17210:	str	ip, [sp]
   17214:	mov	r0, r4
   17218:	vmla.f64	d7, d10, d12
   1721c:	vcvt.s32.f64	s14, d7
   17220:	vstr	s14, [sp, #4]
   17224:	bl	1475c <__snprintf_chk@plt>
   17228:	mov	r1, r4
   1722c:	mov	r0, r9
   17230:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17234:	ldr	r1, [pc, #-2668]	; 167d0 <main@@Base+0x1d10>
   17238:	mov	r0, r9
   1723c:	add	r1, pc, r1
   17240:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17244:	b	16aa8 <main@@Base+0x1fe8>
   17248:	ldr	r0, [sp, #60]	; 0x3c
   1724c:	bl	1460c <fflush@plt>
   17250:	b	16d04 <main@@Base+0x2244>
   17254:	ldr	r3, [fp]
   17258:	cmp	r3, #1
   1725c:	bls	16518 <main@@Base+0x1a58>
   17260:	ldr	ip, [sp, #120]	; 0x78
   17264:	mov	r0, fp
   17268:	ldr	r2, [pc, #-2716]	; 167d4 <main@@Base+0x1d14>
   1726c:	mov	r1, #2
   17270:	ldr	r3, [sp, #116]	; 0x74
   17274:	add	r2, pc, r2
   17278:	str	ip, [sp]
   1727c:	bl	1493c <vcos_log_impl@plt>
   17280:	b	16518 <main@@Base+0x1a58>
   17284:	bl	1bd00 <raspi_gps_location_string@@Base>
   17288:	ldr	r1, [sp, #1068]	; 0x42c
   1728c:	ldr	r3, [sp, #1072]	; 0x430
   17290:	ldr	ip, [sp, #1060]	; 0x424
   17294:	ldr	lr, [sp, #1076]	; 0x434
   17298:	str	ip, [sp]
   1729c:	mov	r4, r0
   172a0:	mov	r2, r0
   172a4:	ldr	r0, [sp, #1064]	; 0x428
   172a8:	stmib	sp, {r0, r1, r3, lr}
   172ac:	ldr	r0, [sp, #1112]	; 0x458
   172b0:	ldr	r1, [sp, #796]	; 0x31c
   172b4:	ldr	r3, [sp, #1056]	; 0x420
   172b8:	bl	19a74 <raspicamcontrol_set_annotate@@Base>
   172bc:	mov	r0, r4
   172c0:	bl	14534 <free@plt>
   172c4:	b	16c74 <main@@Base+0x21b4>
   172c8:	bl	1487c <vcos_pthreads_map_errno@plt>
   172cc:	cmp	r0, #0
   172d0:	beq	162a4 <main@@Base+0x17e4>
   172d4:	ldr	r3, [pc, #-2820]	; 167d8 <main@@Base+0x1d18>
   172d8:	movw	r2, #1771	; 0x6eb
   172dc:	ldr	r1, [pc, #-2824]	; 167dc <main@@Base+0x1d1c>
   172e0:	add	r3, pc, r3
   172e4:	ldr	r0, [pc, #-2828]	; 167e0 <main@@Base+0x1d20>
   172e8:	str	r3, [sp]
   172ec:	add	r1, pc, r1
   172f0:	ldr	r3, [pc, #-2836]	; 167e4 <main@@Base+0x1d24>
   172f4:	add	r0, pc, r0
   172f8:	add	r1, r1, #116	; 0x74
   172fc:	add	r3, pc, r3
   17300:	bl	14924 <vcos_pthreads_logging_assert@plt>
   17304:	b	162a4 <main@@Base+0x17e4>
   17308:	mov	r1, #0
   1730c:	add	r0, sp, #160	; 0xa0
   17310:	movw	r3, #50048	; 0xc380
   17314:	str	r1, [sp, #160]	; 0xa0
   17318:	movt	r3, #457	; 0x1c9
   1731c:	str	r3, [sp, #164]	; 0xa4
   17320:	bl	14990 <nanosleep@plt>
   17324:	b	16484 <main@@Base+0x19c4>
   17328:	ldr	r3, [sp, #372]	; 0x174
   1732c:	cmp	r3, #0
   17330:	beq	16484 <main@@Base+0x19c4>
   17334:	ldr	r3, [pc, #-2816]	; 1683c <main@@Base+0x1d7c>
   17338:	ldr	r3, [sl, r3]
   1733c:	ldr	r4, [r3]
   17340:	bl	14a2c <__errno_location@plt>
   17344:	ldr	r2, [pc, #-2916]	; 167e8 <main@@Base+0x1d28>
   17348:	mov	r1, #1
   1734c:	add	r2, pc, r2
   17350:	mov	r3, r0
   17354:	mov	r0, r4
   17358:	ldr	r3, [r3]
   1735c:	bl	14834 <__fprintf_chk@plt>
   17360:	b	16484 <main@@Base+0x19c4>
   17364:	ldr	r4, [sp, #564]	; 0x234
   17368:	ldrd	r0, [sp, #88]	; 0x58
   1736c:	add	r2, r4, r4, lsr #31
   17370:	rsbs	r0, r0, #0
   17374:	rsc	r1, r1, #0
   17378:	strd	r0, [sp, #104]	; 0x68
   1737c:	asr	r1, r2, #1
   17380:	mov	r2, r1
   17384:	asr	r3, r1, #31
   17388:	ldrd	r0, [sp, #104]	; 0x68
   1738c:	cmp	r0, r2
   17390:	sbcs	r1, r1, r3
   17394:	bge	17448 <main@@Base+0x2988>
   17398:	ldrd	r0, [sp, #32]
   1739c:	ldr	r3, [fp]
   173a0:	adds	r0, r0, r4
   173a4:	adc	r1, r1, r4, asr #31
   173a8:	cmp	r3, #1
   173ac:	strd	r0, [r8, #8]
   173b0:	bls	16490 <main@@Base+0x19d0>
   173b4:	ldr	r2, [sp, #88]	; 0x58
   173b8:	mov	r0, fp
   173bc:	mov	r1, #2
   173c0:	rsb	r3, r2, #0
   173c4:	ldr	r2, [pc, #-3040]	; 167ec <main@@Base+0x1d2c>
   173c8:	str	r3, [sp]
   173cc:	add	r2, pc, r2
   173d0:	ldr	r3, [sp, #68]	; 0x44
   173d4:	bl	1493c <vcos_log_impl@plt>
   173d8:	b	16490 <main@@Base+0x19d0>
   173dc:	ldr	r3, [pc, #-2984]	; 1683c <main@@Base+0x1d7c>
   173e0:	mov	r1, #1
   173e4:	ldr	r0, [pc, #-3068]	; 167f0 <main@@Base+0x1d30>
   173e8:	mov	r2, #84	; 0x54
   173ec:	ldr	r3, [sl, r3]
   173f0:	add	r0, pc, r0
   173f4:	ldr	r3, [r3]
   173f8:	bl	147b0 <fwrite@plt>
   173fc:	b	16888 <main@@Base+0x1dc8>
   17400:	ldr	r3, [pc, #-3020]	; 1683c <main@@Base+0x1d7c>
   17404:	mov	r1, #1
   17408:	ldr	r0, [pc, #-3100]	; 167f4 <main@@Base+0x1d34>
   1740c:	mov	r2, #45	; 0x2d
   17410:	ldr	r3, [sl, r3]
   17414:	add	r0, pc, r0
   17418:	ldr	r3, [r3]
   1741c:	bl	147b0 <fwrite@plt>
   17420:	b	165e8 <main@@Base+0x1b28>
   17424:	ldr	r3, [fp]
   17428:	cmp	r3, #1
   1742c:	bls	160c0 <main@@Base+0x1600>
   17430:	ldr	r2, [pc, #-3136]	; 167f8 <main@@Base+0x1d38>
   17434:	mov	r0, fp
   17438:	mov	r1, #2
   1743c:	add	r2, pc, r2
   17440:	bl	1493c <vcos_log_impl@plt>
   17444:	b	160c0 <main@@Base+0x1600>
   17448:	asr	r3, r4, #31
   1744c:	ldrd	r0, [sp, #104]	; 0x68
   17450:	mov	r2, r4
   17454:	bl	22360 <vcsm_square_open@@Base+0x88c>
   17458:	ldr	r3, [fp]
   1745c:	ldr	ip, [sp, #68]	; 0x44
   17460:	cmp	r3, #1
   17464:	add	r8, r0, #1
   17468:	add	r5, ip, r8
   1746c:	bls	17490 <main@@Base+0x29d0>
   17470:	ldr	r2, [pc, #-3196]	; 167fc <main@@Base+0x1d3c>
   17474:	mov	r3, ip
   17478:	str	r5, [sp]
   1747c:	mov	r0, fp
   17480:	mov	r1, #2
   17484:	add	r2, pc, r2
   17488:	bl	1493c <vcos_log_impl@plt>
   1748c:	ldr	r4, [sp, #564]	; 0x234
   17490:	mul	r3, r4, r8
   17494:	str	r5, [sp, #68]	; 0x44
   17498:	ldrd	r4, [sp, #88]	; 0x58
   1749c:	mov	r1, #1000	; 0x3e8
   174a0:	add	r8, r8, #1
   174a4:	adds	r4, r4, r3
   174a8:	mov	r0, r4
   174ac:	bl	21b5c <vcsm_square_open@@Base+0x88>
   174b0:	mov	r1, #1000	; 0x3e8
   174b4:	str	r0, [sp, #160]	; 0xa0
   174b8:	mov	r0, r4
   174bc:	bl	21d48 <vcsm_square_open@@Base+0x274>
   174c0:	movw	r3, #16960	; 0x4240
   174c4:	movt	r3, #15
   174c8:	add	r0, sp, #160	; 0xa0
   174cc:	mul	r3, r3, r1
   174d0:	mov	r1, #0
   174d4:	str	r3, [sp, #164]	; 0xa4
   174d8:	bl	14990 <nanosleep@plt>
   174dc:	ldr	r0, [sp, #564]	; 0x234
   174e0:	ldr	r1, [pc, #-3304]	; 16800 <main@@Base+0x1d40>
   174e4:	mul	r0, r0, r8
   174e8:	add	r1, pc, r1
   174ec:	ldrd	r2, [r1, #8]
   174f0:	adds	r2, r2, r0
   174f4:	adc	r3, r3, r0, asr #31
   174f8:	strd	r2, [r1, #8]
   174fc:	b	16490 <main@@Base+0x19d0>
   17500:	mov	r3, #0
   17504:	add	r0, sp, #160	; 0xa0
   17508:	mov	r1, r3
   1750c:	str	r3, [sp, #164]	; 0xa4
   17510:	mov	r3, #1
   17514:	str	r3, [sp, #160]	; 0xa0
   17518:	bl	14990 <nanosleep@plt>
   1751c:	bl	1b6f8 <get_microseconds64@@Base>
   17520:	mov	r3, #0
   17524:	mov	r2, #1000	; 0x3e8
   17528:	bl	223a8 <vcsm_square_open@@Base+0x8d4>
   1752c:	ldr	r3, [sp, #564]	; 0x234
   17530:	adds	r0, r0, r3
   17534:	adc	r1, r1, r3, asr #31
   17538:	strd	r0, [r8, #8]
   1753c:	b	16490 <main@@Base+0x19d0>
   17540:	ldr	r3, [sp, #372]	; 0x174
   17544:	cmp	r3, #0
   17548:	beq	16484 <main@@Base+0x19c4>
   1754c:	ldr	r3, [pc, #-3352]	; 1683c <main@@Base+0x1d7c>
   17550:	mov	r1, #1
   17554:	ldr	r0, [pc, #-3416]	; 16804 <main@@Base+0x1d44>
   17558:	mov	r2, #17
   1755c:	ldr	r3, [sl, r3]
   17560:	add	r0, pc, r0
   17564:	ldr	r3, [r3]
   17568:	bl	147b0 <fwrite@plt>
   1756c:	b	16484 <main@@Base+0x19c4>
   17570:	ldr	ip, [pc, #-3440]	; 16808 <main@@Base+0x1d48>
   17574:	add	ip, pc, ip
   17578:	mov	r1, #128	; 0x80
   1757c:	str	r3, [sp, #4]
   17580:	mov	r0, r4
   17584:	mov	r3, r1
   17588:	mov	r2, #1
   1758c:	str	ip, [sp]
   17590:	bl	1475c <__snprintf_chk@plt>
   17594:	mov	r0, r9
   17598:	mov	r1, r4
   1759c:	bl	1c7e0 <deg_to_str@@Base+0x284>
   175a0:	b	170ac <main@@Base+0x25ec>
   175a4:	ldr	r3, [r5, #232]	; 0xe8
   175a8:	cmp	r3, #0
   175ac:	ble	170ac <main@@Base+0x25ec>
   175b0:	ldr	ip, [pc, #-3500]	; 1680c <main@@Base+0x1d4c>
   175b4:	add	ip, pc, ip
   175b8:	b	17578 <main@@Base+0x2ab8>
   175bc:	vldr	d7, [r5, #24]
   175c0:	vcvt.s32.f64	s14, d7
   175c4:	add	r0, sp, #160	; 0xa0
   175c8:	vstr	s14, [sp, #160]	; 0xa0
   175cc:	bl	14270 <localtime@plt>
   175d0:	ldr	r2, [pc, #-3528]	; 16810 <main@@Base+0x1d50>
   175d4:	mov	r1, #32
   175d8:	add	r2, pc, r2
   175dc:	mov	r8, r0
   175e0:	mov	r0, r7
   175e4:	mov	r3, r8
   175e8:	bl	148b8 <strftime@plt>
   175ec:	ldr	r2, [pc, #-3552]	; 16814 <main@@Base+0x1d54>
   175f0:	mov	r1, #128	; 0x80
   175f4:	str	r7, [sp, #4]
   175f8:	mov	r3, r1
   175fc:	add	r2, pc, r2
   17600:	mov	r0, r4
   17604:	str	r2, [sp]
   17608:	mov	r2, #1
   1760c:	bl	1475c <__snprintf_chk@plt>
   17610:	mov	r1, r4
   17614:	mov	r0, r9
   17618:	bl	1c7e0 <deg_to_str@@Base+0x284>
   1761c:	ldr	r2, [pc, #-3596]	; 16818 <main@@Base+0x1d58>
   17620:	mov	r3, r8
   17624:	mov	r0, r7
   17628:	mov	r1, #32
   1762c:	add	r2, pc, r2
   17630:	bl	148b8 <strftime@plt>
   17634:	ldr	r2, [pc, #-3616]	; 1681c <main@@Base+0x1d5c>
   17638:	mov	r1, #128	; 0x80
   1763c:	str	r7, [sp, #4]
   17640:	mov	r3, r1
   17644:	add	r2, pc, r2
   17648:	mov	r0, r4
   1764c:	str	r2, [sp]
   17650:	mov	r2, #1
   17654:	bl	1475c <__snprintf_chk@plt>
   17658:	mov	r0, r9
   1765c:	mov	r1, r4
   17660:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17664:	b	17018 <main@@Base+0x2558>
   17668:	ldr	r3, [pc, #-3636]	; 1683c <main@@Base+0x1d7c>
   1766c:	mov	r1, #1
   17670:	ldr	r0, [pc, #-3672]	; 16820 <main@@Base+0x1d60>
   17674:	mov	r2, #16
   17678:	ldr	r3, [sl, r3]
   1767c:	add	r0, pc, r0
   17680:	ldr	r3, [r3]
   17684:	bl	147b0 <fwrite@plt>
   17688:	b	16ffc <main@@Base+0x253c>
   1768c:	vabs.f64	d0, d10
   17690:	mov	r0, r7
   17694:	mov	r1, #32
   17698:	bl	1c55c <deg_to_str@@Base>
   1769c:	cmp	r0, #0
   176a0:	bne	170f0 <main@@Base+0x2630>
   176a4:	ldr	ip, [pc, #-3720]	; 16824 <main@@Base+0x1d64>
   176a8:	mov	r1, #128	; 0x80
   176ac:	mov	r3, r1
   176b0:	mov	r2, #1
   176b4:	add	ip, pc, ip
   176b8:	str	r7, [sp, #4]
   176bc:	str	ip, [sp]
   176c0:	mov	r0, r4
   176c4:	bl	1475c <__snprintf_chk@plt>
   176c8:	mov	r1, r4
   176cc:	mov	r0, r9
   176d0:	bl	1c7e0 <deg_to_str@@Base+0x284>
   176d4:	vldr	d7, [r5, #64]	; 0x40
   176d8:	vcmpe.f64	d7, #0.0
   176dc:	ldr	ip, [pc, #-3772]	; 16828 <main@@Base+0x1d68>
   176e0:	mov	r1, #128	; 0x80
   176e4:	mov	r0, r4
   176e8:	mov	r3, r1
   176ec:	add	ip, pc, ip
   176f0:	mov	r2, #1
   176f4:	str	ip, [sp]
   176f8:	vmrs	APSR_nzcv, fpscr
   176fc:	movmi	ip, #87	; 0x57
   17700:	movpl	ip, #69	; 0x45
   17704:	str	ip, [sp, #4]
   17708:	bl	1475c <__snprintf_chk@plt>
   1770c:	mov	r0, r9
   17710:	mov	r1, r4
   17714:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17718:	b	170f0 <main@@Base+0x2630>
   1771c:	vabs.f64	d0, d10
   17720:	mov	r0, r7
   17724:	mov	r1, #32
   17728:	bl	1c55c <deg_to_str@@Base>
   1772c:	cmp	r0, #0
   17730:	bne	170dc <main@@Base+0x261c>
   17734:	ldr	ip, [pc, #-3856]	; 1682c <main@@Base+0x1d6c>
   17738:	mov	r1, #128	; 0x80
   1773c:	mov	r3, r1
   17740:	mov	r2, #1
   17744:	add	ip, pc, ip
   17748:	str	r7, [sp, #4]
   1774c:	str	ip, [sp]
   17750:	mov	r0, r4
   17754:	bl	1475c <__snprintf_chk@plt>
   17758:	mov	r1, r4
   1775c:	mov	r0, r9
   17760:	bl	1c7e0 <deg_to_str@@Base+0x284>
   17764:	vldr	d7, [r5, #48]	; 0x30
   17768:	vcmpe.f64	d7, #0.0
   1776c:	ldr	ip, [pc, #-3908]	; 16830 <main@@Base+0x1d70>
   17770:	mov	r1, #128	; 0x80
   17774:	mov	r0, r4
   17778:	mov	r3, r1
   1777c:	add	ip, pc, ip
   17780:	mov	r2, #1
   17784:	str	ip, [sp]
   17788:	vmrs	APSR_nzcv, fpscr
   1778c:	movmi	ip, #83	; 0x53
   17790:	movpl	ip, #78	; 0x4e
   17794:	str	ip, [sp, #4]
   17798:	bl	1475c <__snprintf_chk@plt>
   1779c:	mov	r0, r9
   177a0:	mov	r1, r4
   177a4:	bl	1c7e0 <deg_to_str@@Base+0x284>
   177a8:	b	170dc <main@@Base+0x261c>
   177ac:	vmov.f64	d7, d8
   177b0:	ldr	ip, [pc, #-3972]	; 16834 <main@@Base+0x1d74>
   177b4:	mov	r1, #128	; 0x80
   177b8:	mov	r2, #1
   177bc:	mov	r3, r1
   177c0:	add	ip, pc, ip
   177c4:	mov	r0, r4
   177c8:	str	ip, [sp]
   177cc:	vmla.f64	d7, d10, d9
   177d0:	vcvt.s32.f64	s14, d7
   177d4:	vstr	s14, [sp, #4]
   177d8:	bl	1475c <__snprintf_chk@plt>
   177dc:	mov	r1, r4
   177e0:	mov	r0, r9
   177e4:	bl	1c7e0 <deg_to_str@@Base+0x284>
   177e8:	ldr	r1, [pc, #-4024]	; 16838 <main@@Base+0x1d78>
   177ec:	mov	r0, r9
   177f0:	add	r1, pc, r1
   177f4:	bl	1c7e0 <deg_to_str@@Base+0x284>
   177f8:	ldrd	r2, [r5]
   177fc:	b	1713c <main@@Base+0x267c>
   17800:	ldr	r3, [pc, #-4044]	; 1683c <main@@Base+0x1d7c>
   17804:	mov	r1, #1
   17808:	ldr	r0, [pc, #-4048]	; 16840 <main@@Base+0x1d80>
   1780c:	mov	r2, #23
   17810:	ldr	r4, [sl, r3]
   17814:	add	r0, pc, r0
   17818:	ldr	r3, [r4]
   1781c:	bl	147b0 <fwrite@plt>
   17820:	ldr	r0, [sp, #372]	; 0x174
   17824:	cmp	r0, #0
   17828:	beq	16028 <main@@Base+0x1568>
   1782c:	ldr	r0, [pc, #-4080]	; 16844 <main@@Base+0x1d84>
   17830:	mov	r1, #1
   17834:	ldr	r3, [r4]
   17838:	mov	r2, #36	; 0x24
   1783c:	add	r0, pc, r0
   17840:	bl	147b0 <fwrite@plt>
   17844:	ldr	r0, [sp, #372]	; 0x174
   17848:	b	16028 <main@@Base+0x1568>
   1784c:	ldr	r3, [fp]
   17850:	cmp	r3, #1
   17854:	bls	16010 <main@@Base+0x1550>
   17858:	ldr	r2, [pc, #20]	; 17874 <main@@Base+0x2db4>
   1785c:	mov	r0, fp
   17860:	ldr	r3, [r4, #4]
   17864:	mov	r1, #2
   17868:	add	r2, pc, r2
   1786c:	bl	1493c <vcos_log_impl@plt>
   17870:	b	16010 <main@@Base+0x1550>
   17874:	andeq	sp, r0, r8, asr #15

00017878 <_start@@Base>:
   17878:	mov	fp, #0
   1787c:	mov	lr, #0
   17880:	pop	{r1}		; (ldr r1, [sp], #4)
   17884:	mov	r2, sp
   17888:	push	{r2}		; (str r2, [sp, #-4]!)
   1788c:	push	{r0}		; (str r0, [sp, #-4]!)
   17890:	ldr	ip, [pc, #16]	; 178a8 <_start@@Base+0x30>
   17894:	push	{ip}		; (str ip, [sp, #-4]!)
   17898:	ldr	r0, [pc, #12]	; 178ac <_start@@Base+0x34>
   1789c:	ldr	r3, [pc, #12]	; 178b0 <_start@@Base+0x38>
   178a0:	bl	142b8 <__libc_start_main@plt>
   178a4:	bl	14234 <abort@plt>
   178a8:	andeq	r2, r2, ip, lsl #27
   178ac:	andeq	r4, r1, r0, asr #21
   178b0:	andeq	r2, r2, r8, lsr #26
   178b4:	ldr	r3, [pc, #20]	; 178d0 <_start@@Base+0x58>
   178b8:	ldr	r2, [pc, #20]	; 178d4 <_start@@Base+0x5c>
   178bc:	add	r3, pc, r3
   178c0:	ldr	r2, [r3, r2]
   178c4:	cmp	r2, #0
   178c8:	bxeq	lr
   178cc:	b	14300 <__gmon_start__@plt>
   178d0:	andeq	r2, r2, ip, lsr r7
   178d4:	andeq	r0, r0, ip, lsl #6
   178d8:	push	{r3, lr}
   178dc:	movw	r0, #45080	; 0xb018
   178e0:	ldr	r3, [pc, #36]	; 1790c <_start@@Base+0x94>
   178e4:	movt	r0, #3
   178e8:	rsb	r3, r0, r3
   178ec:	cmp	r3, #6
   178f0:	popls	{r3, pc}
   178f4:	movw	r3, #0
   178f8:	movt	r3, #0
   178fc:	cmp	r3, #0
   17900:	popeq	{r3, pc}
   17904:	blx	r3
   17908:	pop	{r3, pc}
   1790c:	andeq	fp, r3, fp, lsl r0
   17910:	push	{r3, lr}
   17914:	movw	r0, #45080	; 0xb018
   17918:	movw	r3, #45080	; 0xb018
   1791c:	movt	r0, #3
   17920:	movt	r3, #3
   17924:	rsb	r3, r0, r3
   17928:	asr	r3, r3, #2
   1792c:	add	r3, r3, r3, lsr #31
   17930:	asrs	r1, r3, #1
   17934:	popeq	{r3, pc}
   17938:	movw	r2, #0
   1793c:	movt	r2, #0
   17940:	cmp	r2, #0
   17944:	popeq	{r3, pc}
   17948:	blx	r2
   1794c:	pop	{r3, pc}
   17950:	push	{r4, lr}
   17954:	movw	r4, #45080	; 0xb018
   17958:	movt	r4, #3
   1795c:	ldrb	r3, [r4]
   17960:	cmp	r3, #0
   17964:	popne	{r4, pc}
   17968:	bl	178d8 <_start@@Base+0x60>
   1796c:	mov	r3, #1
   17970:	strb	r3, [r4]
   17974:	pop	{r4, pc}
   17978:	movw	r0, #40500	; 0x9e34
   1797c:	movt	r0, #3
   17980:	push	{r3, lr}
   17984:	ldr	r3, [r0]
   17988:	cmp	r3, #0
   1798c:	beq	179a4 <_start@@Base+0x12c>
   17990:	movw	r3, #0
   17994:	movt	r3, #0
   17998:	cmp	r3, #0
   1799c:	beq	179a4 <_start@@Base+0x12c>
   179a0:	blx	r3
   179a4:	pop	{r3, lr}
   179a8:	b	17910 <_start@@Base+0x98>
   179ac:	andeq	r0, r0, r0
   179b0:	ldr	r3, [pc, #80]	; 17a08 <_start@@Base+0x190>
   179b4:	movw	ip, #31073	; 0x7961
   179b8:	movt	ip, #65534	; 0xfffe
   179bc:	add	r3, pc, r3
   179c0:	ldr	r3, [r3]
   179c4:	cmp	r3, ip
   179c8:	rsbeq	r3, r2, r0
   179cc:	add	r3, r2, r3
   179d0:	cmp	r3, r1
   179d4:	ble	179f4 <_start@@Base+0x17c>
   179d8:	ldr	r2, [pc, #44]	; 17a0c <_start@@Base+0x194>
   179dc:	mov	r0, #0
   179e0:	movw	r3, #31073	; 0x7961
   179e4:	movt	r3, #65534	; 0xfffe
   179e8:	add	r2, pc, r2
   179ec:	str	r3, [r2]
   179f0:	bx	lr
   179f4:	ldr	r2, [pc, #20]	; 17a10 <_start@@Base+0x198>
   179f8:	mov	r0, #1
   179fc:	add	r2, pc, r2
   17a00:	str	r3, [r2]
   17a04:	bx	lr
   17a08:	andeq	r2, r2, r0, lsr #19
   17a0c:	andeq	r2, r2, r4, ror r9
   17a10:	andeq	r2, r2, r0, ror #18

00017a14 <imagefx_mode_from_string@@Base>:
   17a14:	ldr	r1, [pc, #88]	; 17a74 <imagefx_mode_from_string@@Base+0x60>
   17a18:	mov	r2, #20
   17a1c:	push	{r4, lr}
   17a20:	add	r1, pc, r1
   17a24:	mov	r4, r0
   17a28:	bl	1a680 <raspicli_map_xref@@Base>
   17a2c:	ldr	r2, [pc, #68]	; 17a78 <imagefx_mode_from_string@@Base+0x64>
   17a30:	add	r2, pc, r2
   17a34:	cmn	r0, #1
   17a38:	popne	{r4, pc}
   17a3c:	ldr	r3, [pc, #56]	; 17a7c <imagefx_mode_from_string@@Base+0x68>
   17a40:	ldr	r0, [r2, r3]
   17a44:	ldr	r3, [r0]
   17a48:	cmp	r3, #1
   17a4c:	bls	17a6c <imagefx_mode_from_string@@Base+0x58>
   17a50:	ldr	r2, [pc, #40]	; 17a80 <imagefx_mode_from_string@@Base+0x6c>
   17a54:	mov	r3, r4
   17a58:	mov	r1, #2
   17a5c:	add	r2, pc, r2
   17a60:	bl	1493c <vcos_log_impl@plt>
   17a64:	mov	r0, #0
   17a68:	pop	{r4, pc}
   17a6c:	mov	r0, #0
   17a70:	pop	{r4, pc}
   17a74:	andeq	r2, r2, r0, asr #18
   17a78:	andeq	r2, r2, r8, asr #11
   17a7c:	andeq	r0, r0, r0, asr #6
   17a80:	strdeq	fp, [r0], -r8

00017a84 <raspicamcontrol_parse_cmdline@@Base>:
   17a84:	push	{r4, r5, r6, r7, lr}
   17a88:	cmp	r1, #0
   17a8c:	ldr	r4, [pc, #1284]	; 17f98 <raspicamcontrol_parse_cmdline@@Base+0x514>
   17a90:	sub	sp, sp, #68	; 0x44
   17a94:	ldr	ip, [pc, #1280]	; 17f9c <raspicamcontrol_parse_cmdline@@Base+0x518>
   17a98:	mov	r7, r0
   17a9c:	add	r4, pc, r4
   17aa0:	mov	r6, r2
   17aa4:	ldr	r5, [r4, ip]
   17aa8:	ldr	ip, [r5]
   17aac:	str	ip, [sp, #60]	; 0x3c
   17ab0:	beq	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17ab4:	ldr	r0, [pc, #1252]	; 17fa0 <raspicamcontrol_parse_cmdline@@Base+0x51c>
   17ab8:	mov	r2, r1
   17abc:	add	r3, sp, #20
   17ac0:	mov	r1, #29
   17ac4:	add	r0, pc, r0
   17ac8:	add	r0, r0, #160	; 0xa0
   17acc:	bl	1a450 <raspicli_get_command_id@@Base>
   17ad0:	cmn	r0, #1
   17ad4:	beq	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17ad8:	ldr	r3, [sp, #20]
   17adc:	cmp	r3, #0
   17ae0:	ble	17aec <raspicamcontrol_parse_cmdline@@Base+0x68>
   17ae4:	cmp	r6, #0
   17ae8:	beq	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17aec:	cmp	r0, #28
   17af0:	addls	pc, pc, r0, lsl #2
   17af4:	b	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17af8:	b	180bc <raspicamcontrol_parse_cmdline@@Base+0x638>
   17afc:	b	180a0 <raspicamcontrol_parse_cmdline@@Base+0x61c>
   17b00:	b	180d8 <raspicamcontrol_parse_cmdline@@Base+0x654>
   17b04:	b	18040 <raspicamcontrol_parse_cmdline@@Base+0x5bc>
   17b08:	b	18068 <raspicamcontrol_parse_cmdline@@Base+0x5e4>
   17b0c:	b	1805c <raspicamcontrol_parse_cmdline@@Base+0x5d8>
   17b10:	b	18084 <raspicamcontrol_parse_cmdline@@Base+0x600>
   17b14:	b	18014 <raspicamcontrol_parse_cmdline@@Base+0x590>
   17b18:	b	17f64 <raspicamcontrol_parse_cmdline@@Base+0x4e0>
   17b1c:	b	17f50 <raspicamcontrol_parse_cmdline@@Base+0x4cc>
   17b20:	b	17f28 <raspicamcontrol_parse_cmdline@@Base+0x4a4>
   17b24:	b	17efc <raspicamcontrol_parse_cmdline@@Base+0x478>
   17b28:	b	17ee0 <raspicamcontrol_parse_cmdline@@Base+0x45c>
   17b2c:	b	17ed4 <raspicamcontrol_parse_cmdline@@Base+0x450>
   17b30:	b	17ec8 <raspicamcontrol_parse_cmdline@@Base+0x444>
   17b34:	b	17e08 <raspicamcontrol_parse_cmdline@@Base+0x384>
   17b38:	b	17dec <raspicamcontrol_parse_cmdline@@Base+0x368>
   17b3c:	b	17d90 <raspicamcontrol_parse_cmdline@@Base+0x30c>
   17b40:	b	17d64 <raspicamcontrol_parse_cmdline@@Base+0x2e0>
   17b44:	b	17d58 <raspicamcontrol_parse_cmdline@@Base+0x2d4>
   17b48:	b	17cc4 <raspicamcontrol_parse_cmdline@@Base+0x240>
   17b4c:	b	17c98 <raspicamcontrol_parse_cmdline@@Base+0x214>
   17b50:	b	17c8c <raspicamcontrol_parse_cmdline@@Base+0x208>
   17b54:	b	17c80 <raspicamcontrol_parse_cmdline@@Base+0x1fc>
   17b58:	b	17c44 <raspicamcontrol_parse_cmdline@@Base+0x1c0>
   17b5c:	b	17c18 <raspicamcontrol_parse_cmdline@@Base+0x194>
   17b60:	b	17bd8 <raspicamcontrol_parse_cmdline@@Base+0x154>
   17b64:	b	17b98 <raspicamcontrol_parse_cmdline@@Base+0x114>
   17b68:	b	17b8c <raspicamcontrol_parse_cmdline@@Base+0x108>
   17b6c:	mov	r3, #0
   17b70:	ldr	r2, [sp, #60]	; 0x3c
   17b74:	mov	r0, r3
   17b78:	ldr	r3, [r5]
   17b7c:	cmp	r2, r3
   17b80:	bne	1824c <raspicamcontrol_parse_cmdline@@Base+0x7c8>
   17b84:	add	sp, sp, #68	; 0x44
   17b88:	pop	{r4, r5, r6, r7, pc}
   17b8c:	mov	r3, #1
   17b90:	str	r3, [r7, #476]	; 0x1dc
   17b94:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17b98:	ldr	r1, [pc, #1028]	; 17fa4 <raspicamcontrol_parse_cmdline@@Base+0x520>
   17b9c:	mov	r0, r6
   17ba0:	add	r2, sp, #48	; 0x30
   17ba4:	add	r1, pc, r1
   17ba8:	bl	14648 <sscanf@plt>
   17bac:	cmp	r0, #1
   17bb0:	bne	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17bb4:	vldr	d7, [sp, #48]	; 0x30
   17bb8:	vldr	d6, [pc, #976]	; 17f90 <raspicamcontrol_parse_cmdline@@Base+0x50c>
   17bbc:	vcmpe.f64	d7, d6
   17bc0:	vmrs	APSR_nzcv, fpscr
   17bc4:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17bc8:	vcvt.f32.f64	s14, d7
   17bcc:	mov	r3, #2
   17bd0:	vstr	s14, [r7, #472]	; 0x1d8
   17bd4:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17bd8:	ldr	r1, [pc, #968]	; 17fa8 <raspicamcontrol_parse_cmdline@@Base+0x524>
   17bdc:	mov	r0, r6
   17be0:	add	r2, sp, #48	; 0x30
   17be4:	add	r1, pc, r1
   17be8:	bl	14648 <sscanf@plt>
   17bec:	cmp	r0, #1
   17bf0:	bne	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17bf4:	vmov.f64	d6, #48	; 0x41800000  16.0
   17bf8:	vldr	d7, [sp, #48]	; 0x30
   17bfc:	vcmpe.f64	d7, d6
   17c00:	vmrs	APSR_nzcv, fpscr
   17c04:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17c08:	vcvt.f32.f64	s14, d7
   17c0c:	mov	r3, #2
   17c10:	vstr	s14, [r7, #468]	; 0x1d4
   17c14:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17c18:	ldr	r1, [pc, #908]	; 17fac <raspicamcontrol_parse_cmdline@@Base+0x528>
   17c1c:	mov	r0, r6
   17c20:	mov	r2, #4
   17c24:	add	r1, pc, r1
   17c28:	add	r1, r1, #844	; 0x34c
   17c2c:	bl	1a680 <raspicli_map_xref@@Base>
   17c30:	cmn	r0, #1
   17c34:	beq	18204 <raspicamcontrol_parse_cmdline@@Base+0x780>
   17c38:	str	r0, [r7, #96]	; 0x60
   17c3c:	mov	r3, #2
   17c40:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17c44:	ldr	r1, [pc, #868]	; 17fb0 <raspicamcontrol_parse_cmdline@@Base+0x52c>
   17c48:	add	r2, r7, #432	; 0x1b0
   17c4c:	add	r3, r7, #436	; 0x1b4
   17c50:	mov	r0, r6
   17c54:	stm	sp, {r2, r3}
   17c58:	add	r1, pc, r1
   17c5c:	add	r2, r7, #440	; 0x1b8
   17c60:	add	r3, r7, #444	; 0x1bc
   17c64:	str	r2, [sp, #8]
   17c68:	add	r2, r7, #424	; 0x1a8
   17c6c:	str	r3, [sp, #12]
   17c70:	add	r3, r7, #428	; 0x1ac
   17c74:	bl	14648 <sscanf@plt>
   17c78:	mov	r3, #2
   17c7c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17c80:	mov	r3, #1
   17c84:	str	r3, [r7, #464]	; 0x1d0
   17c88:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17c8c:	mov	r3, #1
   17c90:	str	r3, [r7, #460]	; 0x1cc
   17c94:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17c98:	ldr	r1, [pc, #788]	; 17fb4 <raspicamcontrol_parse_cmdline@@Base+0x530>
   17c9c:	mov	r0, r6
   17ca0:	mov	r2, #3
   17ca4:	add	r1, pc, r1
   17ca8:	add	r1, r1, #1020	; 0x3fc
   17cac:	bl	1a680 <raspicli_map_xref@@Base>
   17cb0:	cmn	r0, #1
   17cb4:	beq	181d0 <raspicamcontrol_parse_cmdline@@Base+0x74c>
   17cb8:	str	r0, [r7, #456]	; 0x1c8
   17cbc:	mov	r3, #2
   17cc0:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17cc4:	ldr	r1, [pc, #748]	; 17fb8 <raspicamcontrol_parse_cmdline@@Base+0x534>
   17cc8:	mov	r0, r6
   17ccc:	add	r2, sp, #48	; 0x30
   17cd0:	add	r3, sp, #40	; 0x28
   17cd4:	add	r1, pc, r1
   17cd8:	bl	14648 <sscanf@plt>
   17cdc:	cmp	r0, #1
   17ce0:	beq	18238 <raspicamcontrol_parse_cmdline@@Base+0x7b4>
   17ce4:	ldr	r3, [r7, #164]	; 0xa4
   17ce8:	add	r1, r7, #168	; 0xa8
   17cec:	add	r2, r6, #1
   17cf0:	orr	r3, r3, #1
   17cf4:	str	r3, [r7, #164]	; 0xa4
   17cf8:	ldrb	r3, [r6]
   17cfc:	cmp	r3, #0
   17d00:	beq	180f4 <raspicamcontrol_parse_cmdline@@Base+0x670>
   17d04:	add	r7, r7, #420	; 0x1a4
   17d08:	add	r7, r7, #3
   17d0c:	b	17d34 <raspicamcontrol_parse_cmdline@@Base+0x2b0>
   17d10:	strb	r3, [r1], #1
   17d14:	add	r0, r2, #1
   17d18:	ldrb	r3, [r2]
   17d1c:	cmp	r3, #0
   17d20:	beq	180f4 <raspicamcontrol_parse_cmdline@@Base+0x670>
   17d24:	cmp	r1, r7
   17d28:	beq	180f4 <raspicamcontrol_parse_cmdline@@Base+0x670>
   17d2c:	mov	r6, r2
   17d30:	mov	r2, r0
   17d34:	cmp	r3, #92	; 0x5c
   17d38:	bne	17d10 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   17d3c:	ldrb	r0, [r6, #1]
   17d40:	cmp	r0, #0
   17d44:	beq	17d10 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   17d48:	cmp	r0, #110	; 0x6e
   17d4c:	addeq	r2, r6, #2
   17d50:	moveq	r3, #10
   17d54:	b	17d10 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   17d58:	mov	r3, #1
   17d5c:	str	r3, [r7, #160]	; 0xa0
   17d60:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17d64:	ldr	r1, [pc, #592]	; 17fbc <raspicamcontrol_parse_cmdline@@Base+0x538>
   17d68:	mov	r0, r6
   17d6c:	mov	r2, #4
   17d70:	add	r1, pc, r1
   17d74:	add	r1, r1, #988	; 0x3dc
   17d78:	bl	1a680 <raspicli_map_xref@@Base>
   17d7c:	cmn	r0, #1
   17d80:	beq	18134 <raspicamcontrol_parse_cmdline@@Base+0x6b0>
   17d84:	str	r0, [r7, #156]	; 0x9c
   17d88:	mov	r3, #2
   17d8c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17d90:	ldr	r1, [pc, #552]	; 17fc0 <raspicamcontrol_parse_cmdline@@Base+0x53c>
   17d94:	mov	r0, r6
   17d98:	add	r2, sp, #40	; 0x28
   17d9c:	add	r3, sp, #48	; 0x30
   17da0:	add	r1, pc, r1
   17da4:	bl	14648 <sscanf@plt>
   17da8:	cmp	r0, #2
   17dac:	bne	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17db0:	vmov.f64	d7, #32	; 0x41000000  8.0
   17db4:	vldr	d6, [sp, #40]	; 0x28
   17db8:	vcmpe.f64	d6, d7
   17dbc:	vmrs	APSR_nzcv, fpscr
   17dc0:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17dc4:	vldr	d5, [sp, #48]	; 0x30
   17dc8:	vcmpe.f64	d5, d7
   17dcc:	vmrs	APSR_nzcv, fpscr
   17dd0:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17dd4:	vcvt.f32.f64	s12, d6
   17dd8:	mov	r3, r0
   17ddc:	vcvt.f32.f64	s10, d5
   17de0:	vstr	s12, [r7, #148]	; 0x94
   17de4:	vstr	s10, [r7, #152]	; 0x98
   17de8:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17dec:	ldr	r1, [pc, #464]	; 17fc4 <raspicamcontrol_parse_cmdline@@Base+0x540>
   17df0:	mov	r0, r6
   17df4:	add	r2, r7, #144	; 0x90
   17df8:	add	r1, pc, r1
   17dfc:	bl	14648 <sscanf@plt>
   17e00:	mov	r3, #2
   17e04:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17e08:	ldr	r1, [pc, #440]	; 17fc8 <raspicamcontrol_parse_cmdline@@Base+0x544>
   17e0c:	add	r3, sp, #40	; 0x28
   17e10:	mov	r0, r6
   17e14:	str	r3, [sp]
   17e18:	add	r2, sp, #24
   17e1c:	add	r3, sp, #48	; 0x30
   17e20:	add	r1, pc, r1
   17e24:	str	r3, [sp, #4]
   17e28:	add	r3, sp, #32
   17e2c:	bl	14648 <sscanf@plt>
   17e30:	cmp	r0, #4
   17e34:	bne	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17e38:	vmov.f64	d7, #112	; 0x3f800000  1.0
   17e3c:	vldr	d6, [sp, #24]
   17e40:	vcmpe.f64	d6, d7
   17e44:	vmrs	APSR_nzcv, fpscr
   17e48:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17e4c:	vldr	d5, [sp, #32]
   17e50:	vcmpe.f64	d5, d7
   17e54:	vmrs	APSR_nzcv, fpscr
   17e58:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17e5c:	vldr	d3, [sp, #40]	; 0x28
   17e60:	vcmpe.f64	d3, d7
   17e64:	vmrs	APSR_nzcv, fpscr
   17e68:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17e6c:	vldr	d4, [sp, #48]	; 0x30
   17e70:	vcmpe.f64	d4, d7
   17e74:	vmrs	APSR_nzcv, fpscr
   17e78:	bgt	17b6c <raspicamcontrol_parse_cmdline@@Base+0xe8>
   17e7c:	vadd.f64	d2, d6, d3
   17e80:	vstr	d6, [r7, #112]	; 0x70
   17e84:	vstr	d5, [r7, #120]	; 0x78
   17e88:	mov	r3, #2
   17e8c:	vcmpe.f64	d2, d7
   17e90:	vmrs	APSR_nzcv, fpscr
   17e94:	vsubgt.f64	d7, d7, d6
   17e98:	vadd.f64	d2, d5, d4
   17e9c:	vstrgt	d7, [sp, #40]	; 0x28
   17ea0:	vmovgt.f64	d3, d7
   17ea4:	vstr	d3, [r7, #128]	; 0x80
   17ea8:	vmov.f64	d7, #112	; 0x3f800000  1.0
   17eac:	vcmpe.f64	d2, d7
   17eb0:	vmrs	APSR_nzcv, fpscr
   17eb4:	vsubgt.f64	d7, d7, d5
   17eb8:	vmovgt.f64	d4, d7
   17ebc:	vstrgt	d7, [sp, #48]	; 0x30
   17ec0:	vstr	d4, [r7, #136]	; 0x88
   17ec4:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17ec8:	mov	r3, #1
   17ecc:	str	r3, [r7, #108]	; 0x6c
   17ed0:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17ed4:	mov	r3, #1
   17ed8:	str	r3, [r7, #104]	; 0x68
   17edc:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17ee0:	ldr	r1, [pc, #228]	; 17fcc <raspicamcontrol_parse_cmdline@@Base+0x548>
   17ee4:	mov	r0, r6
   17ee8:	add	r2, r7, #100	; 0x64
   17eec:	add	r1, pc, r1
   17ef0:	bl	14648 <sscanf@plt>
   17ef4:	mov	r3, #2
   17ef8:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17efc:	ldr	r1, [pc, #204]	; 17fd0 <raspicamcontrol_parse_cmdline@@Base+0x54c>
   17f00:	mov	r0, r6
   17f04:	mov	r2, #4
   17f08:	add	r1, pc, r1
   17f0c:	add	r1, r1, #956	; 0x3bc
   17f10:	bl	1a680 <raspicli_map_xref@@Base>
   17f14:	cmn	r0, #1
   17f18:	beq	18168 <raspicamcontrol_parse_cmdline@@Base+0x6e4>
   17f1c:	str	r0, [r7, #32]
   17f20:	mov	r3, #2
   17f24:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17f28:	ldr	r1, [pc, #164]	; 17fd4 <raspicamcontrol_parse_cmdline@@Base+0x550>
   17f2c:	add	r2, r7, #88	; 0x58
   17f30:	add	r3, r7, #92	; 0x5c
   17f34:	mov	r0, r6
   17f38:	add	r1, pc, r1
   17f3c:	bl	14648 <sscanf@plt>
   17f40:	mov	r2, #1
   17f44:	mov	r3, #2
   17f48:	str	r2, [r7, #84]	; 0x54
   17f4c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17f50:	mov	r0, r6
   17f54:	bl	17a14 <imagefx_mode_from_string@@Base>
   17f58:	mov	r3, #2
   17f5c:	str	r0, [r7, #40]	; 0x28
   17f60:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17f64:	ldr	r1, [pc, #108]	; 17fd8 <raspicamcontrol_parse_cmdline@@Base+0x554>
   17f68:	mov	r0, r6
   17f6c:	mov	r2, #10
   17f70:	add	r1, pc, r1
   17f74:	add	r1, r1, #876	; 0x36c
   17f78:	bl	1a680 <raspicli_map_xref@@Base>
   17f7c:	cmn	r0, #1
   17f80:	beq	1819c <raspicamcontrol_parse_cmdline@@Base+0x718>
   17f84:	str	r0, [r7, #36]	; 0x24
   17f88:	mov	r3, #2
   17f8c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   17f90:	andeq	r0, r0, r0
   17f94:	subsmi	r0, r0, r0
   17f98:	andeq	r2, r2, ip, asr r5
   17f9c:	andeq	r0, r0, r4, lsr r3
   17fa0:	muleq	r2, ip, r8
   17fa4:	andeq	fp, r0, ip, asr #6
   17fa8:	andeq	fp, r0, ip, lsl #6
   17fac:	andeq	r2, r2, ip, lsr r7
   17fb0:			; <UNDEFINED> instruction: 0x0000b2bc
   17fb4:			; <UNDEFINED> instruction: 0x000226bc
   17fb8:	andeq	fp, r0, r8, lsr r2
   17fbc:	strdeq	r2, [r2], -r0
   17fc0:	andeq	fp, r0, ip, asr #2
   17fc4:	andeq	ip, r0, r8, ror pc
   17fc8:	andeq	fp, r0, r4, asr #1
   17fcc:	andeq	ip, r0, r4, lsl #29
   17fd0:	andeq	r2, r2, r8, asr r4
   17fd4:	andeq	sl, r0, r8, lsl #31
   17fd8:	strdeq	r2, [r2], -r0
   17fdc:	andeq	r2, r2, r0, asr #6
   17fe0:	andeq	ip, r0, r4, lsr #26
   17fe4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   17fe8:	andeq	ip, r0, r0, ror #25
   17fec:	andeq	ip, r0, r4, asr #25
   17ff0:	andeq	ip, r0, r8, lsr #25
   17ff4:	andeq	ip, r0, ip, lsl #25
   17ff8:	andeq	sl, r0, r8, asr #26
   17ffc:	muleq	r0, ip, sp
   18000:	andeq	sl, r0, ip, lsr sp
   18004:	andeq	sl, r0, r8, ror #25
   18008:	ldrdeq	sl, [r0], -r4
   1800c:	andeq	r0, r0, r0, asr #6
   18010:	andeq	sl, r0, r0, ror #24
   18014:	ldr	r1, [pc, #-64]	; 17fdc <raspicamcontrol_parse_cmdline@@Base+0x558>
   18018:	mov	r0, r6
   1801c:	mov	r2, #13
   18020:	add	r1, pc, r1
   18024:	add	r1, r1, #740	; 0x2e4
   18028:	bl	1a680 <raspicli_map_xref@@Base>
   1802c:	cmn	r0, #1
   18030:	beq	18100 <raspicamcontrol_parse_cmdline@@Base+0x67c>
   18034:	str	r0, [r7, #28]
   18038:	mov	r3, #2
   1803c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   18040:	ldr	r1, [pc, #-104]	; 17fe0 <raspicamcontrol_parse_cmdline@@Base+0x55c>
   18044:	mov	r0, r6
   18048:	add	r2, r7, #12
   1804c:	add	r1, pc, r1
   18050:	bl	14648 <sscanf@plt>
   18054:	mov	r3, #2
   18058:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   1805c:	mov	r3, #1
   18060:	str	r3, [r7, #20]
   18064:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   18068:	ldr	r1, [pc, #-140]	; 17fe4 <raspicamcontrol_parse_cmdline@@Base+0x560>
   1806c:	mov	r0, r6
   18070:	add	r2, r7, #16
   18074:	add	r1, pc, r1
   18078:	bl	14648 <sscanf@plt>
   1807c:	mov	r3, #2
   18080:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   18084:	ldr	r1, [pc, #-164]	; 17fe8 <raspicamcontrol_parse_cmdline@@Base+0x564>
   18088:	mov	r0, r6
   1808c:	add	r2, r7, #24
   18090:	add	r1, pc, r1
   18094:	bl	14648 <sscanf@plt>
   18098:	mov	r3, #2
   1809c:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   180a0:	ldr	r1, [pc, #-188]	; 17fec <raspicamcontrol_parse_cmdline@@Base+0x568>
   180a4:	mov	r0, r6
   180a8:	add	r2, r7, #4
   180ac:	add	r1, pc, r1
   180b0:	bl	14648 <sscanf@plt>
   180b4:	mov	r3, #2
   180b8:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   180bc:	ldr	r1, [pc, #-212]	; 17ff0 <raspicamcontrol_parse_cmdline@@Base+0x56c>
   180c0:	mov	r0, r6
   180c4:	mov	r2, r7
   180c8:	add	r1, pc, r1
   180cc:	bl	14648 <sscanf@plt>
   180d0:	mov	r3, #2
   180d4:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   180d8:	ldr	r1, [pc, #-236]	; 17ff4 <raspicamcontrol_parse_cmdline@@Base+0x570>
   180dc:	mov	r0, r6
   180e0:	add	r2, r7, #8
   180e4:	add	r1, pc, r1
   180e8:	bl	14648 <sscanf@plt>
   180ec:	mov	r3, #2
   180f0:	b	17b70 <raspicamcontrol_parse_cmdline@@Base+0xec>
   180f4:	mov	r3, #0
   180f8:	strb	r3, [r1]
   180fc:	b	17cbc <raspicamcontrol_parse_cmdline@@Base+0x238>
   18100:	ldr	r3, [pc, #-252]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   18104:	ldr	r0, [r4, r3]
   18108:	ldr	r3, [r0]
   1810c:	cmp	r3, #1
   18110:	movls	r0, #1
   18114:	bls	18034 <raspicamcontrol_parse_cmdline@@Base+0x5b0>
   18118:	ldr	r2, [pc, #-296]	; 17ff8 <raspicamcontrol_parse_cmdline@@Base+0x574>
   1811c:	mov	r3, r6
   18120:	mov	r1, #2
   18124:	add	r2, pc, r2
   18128:	bl	1493c <vcos_log_impl@plt>
   1812c:	mov	r0, #1
   18130:	b	18034 <raspicamcontrol_parse_cmdline@@Base+0x5b0>
   18134:	ldr	r3, [pc, #-304]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   18138:	ldr	r0, [r4, r3]
   1813c:	ldr	r3, [r0]
   18140:	cmp	r3, #1
   18144:	movls	r0, #0
   18148:	bls	17d84 <raspicamcontrol_parse_cmdline@@Base+0x300>
   1814c:	ldr	r2, [pc, #-344]	; 17ffc <raspicamcontrol_parse_cmdline@@Base+0x578>
   18150:	mov	r3, r6
   18154:	mov	r1, #2
   18158:	add	r2, pc, r2
   1815c:	bl	1493c <vcos_log_impl@plt>
   18160:	mov	r0, #0
   18164:	b	17d84 <raspicamcontrol_parse_cmdline@@Base+0x300>
   18168:	ldr	r3, [pc, #-356]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   1816c:	ldr	r0, [r4, r3]
   18170:	ldr	r3, [r0]
   18174:	cmp	r3, #1
   18178:	movls	r0, #0
   1817c:	bls	17f1c <raspicamcontrol_parse_cmdline@@Base+0x498>
   18180:	ldr	r2, [pc, #-392]	; 18000 <raspicamcontrol_parse_cmdline@@Base+0x57c>
   18184:	mov	r3, r6
   18188:	mov	r1, #2
   1818c:	add	r2, pc, r2
   18190:	bl	1493c <vcos_log_impl@plt>
   18194:	mov	r0, #0
   18198:	b	17f1c <raspicamcontrol_parse_cmdline@@Base+0x498>
   1819c:	ldr	r3, [pc, #-408]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   181a0:	ldr	r0, [r4, r3]
   181a4:	ldr	r3, [r0]
   181a8:	cmp	r3, #1
   181ac:	movls	r0, #1
   181b0:	bls	17f84 <raspicamcontrol_parse_cmdline@@Base+0x500>
   181b4:	ldr	r2, [pc, #-440]	; 18004 <raspicamcontrol_parse_cmdline@@Base+0x580>
   181b8:	mov	r3, r6
   181bc:	mov	r1, #2
   181c0:	add	r2, pc, r2
   181c4:	bl	1493c <vcos_log_impl@plt>
   181c8:	mov	r0, #1
   181cc:	b	17f84 <raspicamcontrol_parse_cmdline@@Base+0x500>
   181d0:	ldr	r3, [pc, #-460]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   181d4:	ldr	r0, [r4, r3]
   181d8:	ldr	r3, [r0]
   181dc:	cmp	r3, #1
   181e0:	movls	r0, #0
   181e4:	bls	17cb8 <raspicamcontrol_parse_cmdline@@Base+0x234>
   181e8:	ldr	r2, [pc, #-488]	; 18008 <raspicamcontrol_parse_cmdline@@Base+0x584>
   181ec:	mov	r3, r6
   181f0:	mov	r1, #2
   181f4:	add	r2, pc, r2
   181f8:	bl	1493c <vcos_log_impl@plt>
   181fc:	mov	r0, #0
   18200:	b	17cb8 <raspicamcontrol_parse_cmdline@@Base+0x234>
   18204:	ldr	r3, [pc, #-512]	; 1800c <raspicamcontrol_parse_cmdline@@Base+0x588>
   18208:	ldr	r0, [r4, r3]
   1820c:	ldr	r3, [r0]
   18210:	cmp	r3, #1
   18214:	movls	r0, #0
   18218:	bls	17c38 <raspicamcontrol_parse_cmdline@@Base+0x1b4>
   1821c:	ldr	r2, [pc, #-532]	; 18010 <raspicamcontrol_parse_cmdline@@Base+0x58c>
   18220:	mov	r3, r6
   18224:	mov	r1, #2
   18228:	add	r2, pc, r2
   1822c:	bl	1493c <vcos_log_impl@plt>
   18230:	mov	r0, #0
   18234:	b	17c38 <raspicamcontrol_parse_cmdline@@Base+0x1b4>
   18238:	ldr	r2, [r7, #164]	; 0xa4
   1823c:	ldr	r3, [sp, #48]	; 0x30
   18240:	orr	r3, r2, r3
   18244:	str	r3, [r7, #164]	; 0xa4
   18248:	b	17cbc <raspicamcontrol_parse_cmdline@@Base+0x238>
   1824c:	bl	14804 <__stack_chk_fail@plt>

00018250 <raspicamcontrol_display_help@@Base>:
   18250:	ldr	r3, [pc, #460]	; 18424 <raspicamcontrol_display_help@@Base+0x1d4>
   18254:	mov	r2, #27
   18258:	ldr	ip, [pc, #456]	; 18428 <raspicamcontrol_display_help@@Base+0x1d8>
   1825c:	mov	r1, #1
   18260:	add	r3, pc, r3
   18264:	ldr	r0, [pc, #448]	; 1842c <raspicamcontrol_display_help@@Base+0x1dc>
   18268:	push	{r4, r5, r6, r7, r8, lr}
   1826c:	add	r0, pc, r0
   18270:	ldr	r5, [r3, ip]
   18274:	ldr	r8, [pc, #436]	; 18430 <raspicamcontrol_display_help@@Base+0x1e0>
   18278:	ldr	r6, [pc, #436]	; 18434 <raspicamcontrol_display_help@@Base+0x1e4>
   1827c:	add	r8, pc, r8
   18280:	ldr	r3, [r5]
   18284:	bl	147b0 <fwrite@plt>
   18288:	add	r0, r8, #160	; 0xa0
   1828c:	mov	r1, #29
   18290:	mov	r4, r8
   18294:	bl	1a5b8 <raspicli_display_help@@Base>
   18298:	ldr	r2, [pc, #408]	; 18438 <raspicamcontrol_display_help@@Base+0x1e8>
   1829c:	ldr	r0, [r5]
   182a0:	mov	r1, #1
   182a4:	ldr	r3, [r4, #740]!	; 0x2e4
   182a8:	add	r2, pc, r2
   182ac:	add	r7, r8, #836	; 0x344
   182b0:	add	r6, pc, r6
   182b4:	bl	14834 <__fprintf_chk@plt>
   182b8:	ldr	r3, [r4, #8]!
   182bc:	mov	r1, #1
   182c0:	ldr	r0, [r5]
   182c4:	mov	r2, r6
   182c8:	bl	14834 <__fprintf_chk@plt>
   182cc:	cmp	r4, r7
   182d0:	bne	182b8 <raspicamcontrol_display_help@@Base+0x68>
   182d4:	ldr	r4, [pc, #352]	; 1843c <raspicamcontrol_display_help@@Base+0x1ec>
   182d8:	mov	r1, #1
   182dc:	ldr	r2, [pc, #348]	; 18440 <raspicamcontrol_display_help@@Base+0x1f0>
   182e0:	add	r4, pc, r4
   182e4:	ldr	r0, [r5]
   182e8:	add	r7, r4, #868	; 0x364
   182ec:	add	r2, pc, r2
   182f0:	ldr	r3, [r4, #844]!	; 0x34c
   182f4:	bl	14834 <__fprintf_chk@plt>
   182f8:	ldr	r3, [r4, #8]!
   182fc:	mov	r1, #1
   18300:	ldr	r0, [r5]
   18304:	mov	r2, r6
   18308:	bl	14834 <__fprintf_chk@plt>
   1830c:	cmp	r4, r7
   18310:	bne	182f8 <raspicamcontrol_display_help@@Base+0xa8>
   18314:	ldr	r4, [pc, #296]	; 18444 <raspicamcontrol_display_help@@Base+0x1f4>
   18318:	mov	r1, #1
   1831c:	ldr	r2, [pc, #292]	; 18448 <raspicamcontrol_display_help@@Base+0x1f8>
   18320:	add	r4, pc, r4
   18324:	ldr	r0, [r5]
   18328:	add	r7, r4, #948	; 0x3b4
   1832c:	add	r2, pc, r2
   18330:	ldr	r3, [r4, #876]!	; 0x36c
   18334:	bl	14834 <__fprintf_chk@plt>
   18338:	ldr	r3, [r4, #8]!
   1833c:	mov	r1, #1
   18340:	ldr	r0, [r5]
   18344:	mov	r2, r6
   18348:	bl	14834 <__fprintf_chk@plt>
   1834c:	cmp	r4, r7
   18350:	bne	18338 <raspicamcontrol_display_help@@Base+0xe8>
   18354:	ldr	r4, [pc, #240]	; 1844c <raspicamcontrol_display_help@@Base+0x1fc>
   18358:	mov	r1, #1
   1835c:	ldr	r2, [pc, #236]	; 18450 <raspicamcontrol_display_help@@Base+0x200>
   18360:	add	r4, pc, r4
   18364:	ldr	r0, [r5]
   18368:	add	r2, pc, r2
   1836c:	add	r7, r4, #152	; 0x98
   18370:	ldr	r3, [r4]
   18374:	bl	14834 <__fprintf_chk@plt>
   18378:	ldr	r3, [r4, #8]!
   1837c:	mov	r1, #1
   18380:	ldr	r0, [r5]
   18384:	mov	r2, r6
   18388:	bl	14834 <__fprintf_chk@plt>
   1838c:	cmp	r4, r7
   18390:	bne	18378 <raspicamcontrol_display_help@@Base+0x128>
   18394:	ldr	r4, [pc, #184]	; 18454 <raspicamcontrol_display_help@@Base+0x204>
   18398:	mov	r1, #1
   1839c:	ldr	r2, [pc, #180]	; 18458 <raspicamcontrol_display_help@@Base+0x208>
   183a0:	add	r4, pc, r4
   183a4:	ldr	r0, [r5]
   183a8:	add	r7, r4, #980	; 0x3d4
   183ac:	add	r2, pc, r2
   183b0:	ldr	r3, [r4, #956]!	; 0x3bc
   183b4:	bl	14834 <__fprintf_chk@plt>
   183b8:	ldr	r3, [r4, #8]!
   183bc:	mov	r1, #1
   183c0:	ldr	r0, [r5]
   183c4:	mov	r2, r6
   183c8:	bl	14834 <__fprintf_chk@plt>
   183cc:	cmp	r4, r7
   183d0:	bne	183b8 <raspicamcontrol_display_help@@Base+0x168>
   183d4:	ldr	r4, [pc, #128]	; 1845c <raspicamcontrol_display_help@@Base+0x20c>
   183d8:	mov	r1, #1
   183dc:	ldr	r2, [pc, #124]	; 18460 <raspicamcontrol_display_help@@Base+0x210>
   183e0:	add	r4, pc, r4
   183e4:	ldr	r0, [r5]
   183e8:	add	r7, r4, #1012	; 0x3f4
   183ec:	add	r2, pc, r2
   183f0:	ldr	r3, [r4, #988]!	; 0x3dc
   183f4:	bl	14834 <__fprintf_chk@plt>
   183f8:	ldr	r3, [r4, #8]!
   183fc:	mov	r1, #1
   18400:	ldr	r0, [r5]
   18404:	mov	r2, r6
   18408:	bl	14834 <__fprintf_chk@plt>
   1840c:	cmp	r4, r7
   18410:	bne	183f8 <raspicamcontrol_display_help@@Base+0x1a8>
   18414:	ldr	r1, [r5]
   18418:	mov	r0, #10
   1841c:	pop	{r4, r5, r6, r7, r8, lr}
   18420:	b	14864 <fputc@plt>
   18424:	muleq	r2, r8, sp
   18428:	andeq	r0, r0, r0, asr r3
   1842c:			; <UNDEFINED> instruction: 0x0000acbc
   18430:	andeq	r2, r2, r4, ror #1
   18434:			; <UNDEFINED> instruction: 0x0000acb8
   18438:	muleq	r0, ip, ip
   1843c:	andeq	r2, r2, r0, lsl #1
   18440:	andeq	sl, r0, r0, lsl #25
   18444:	andeq	r2, r2, r0, asr #32
   18448:	andeq	sl, r0, r4, ror #24
   1844c:	andeq	r2, r2, r0
   18450:	andeq	sl, r0, r0, asr #24
   18454:	andeq	r1, r2, r0, asr #31
   18458:	andeq	sl, r0, r0, lsr #24
   1845c:	andeq	r1, r2, r0, lsl #31
   18460:	andeq	sl, r0, r0, lsl #24

00018464 <raspicamcontrol_dump_parameters@@Base>:
   18464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18468:	mov	r2, #13
   1846c:	ldr	r4, [pc, #524]	; 18680 <raspicamcontrol_dump_parameters@@Base+0x21c>
   18470:	mov	r6, r0
   18474:	sub	sp, sp, #36	; 0x24
   18478:	ldr	r0, [r0, #28]
   1847c:	add	r4, pc, r4
   18480:	ldr	r5, [pc, #508]	; 18684 <raspicamcontrol_dump_parameters@@Base+0x220>
   18484:	add	r1, r4, #740	; 0x2e4
   18488:	bl	1a6d0 <raspicli_unmap_xref@@Base>
   1848c:	add	r1, r4, #844	; 0x34c
   18490:	mov	r2, #4
   18494:	add	r5, pc, r5
   18498:	mov	r9, r0
   1849c:	ldr	r0, [r6, #96]	; 0x60
   184a0:	bl	1a6d0 <raspicli_unmap_xref@@Base>
   184a4:	add	r1, r4, #876	; 0x36c
   184a8:	mov	r2, #10
   184ac:	mov	r7, r0
   184b0:	ldr	r0, [r6, #36]	; 0x24
   184b4:	bl	1a6d0 <raspicli_unmap_xref@@Base>
   184b8:	mov	r1, r4
   184bc:	mov	r2, #20
   184c0:	mov	sl, r0
   184c4:	ldr	r0, [r6, #40]	; 0x28
   184c8:	bl	1a6d0 <raspicli_unmap_xref@@Base>
   184cc:	add	r1, r4, #956	; 0x3bc
   184d0:	mov	r2, #4
   184d4:	mov	r8, r0
   184d8:	ldr	r0, [r6, #32]
   184dc:	bl	1a6d0 <raspicli_unmap_xref@@Base>
   184e0:	ldr	r2, [r6, #4]
   184e4:	ldr	r3, [r6]
   184e8:	mov	r1, #1
   184ec:	mov	fp, r0
   184f0:	ldr	r0, [pc, #400]	; 18688 <raspicamcontrol_dump_parameters@@Base+0x224>
   184f4:	ldr	r4, [r5, r0]
   184f8:	str	r2, [sp]
   184fc:	ldr	ip, [r6, #8]
   18500:	ldr	r2, [pc, #388]	; 1868c <raspicamcontrol_dump_parameters@@Base+0x228>
   18504:	ldr	r0, [r4]
   18508:	add	r2, pc, r2
   1850c:	str	ip, [sp, #4]
   18510:	bl	14834 <__fprintf_chk@plt>
   18514:	ldr	r3, [r6, #20]
   18518:	ldr	r0, [r4]
   1851c:	cmp	r3, #0
   18520:	ldr	r1, [r6, #16]
   18524:	ldr	r3, [r6, #12]
   18528:	beq	18648 <raspicamcontrol_dump_parameters@@Base+0x1e4>
   1852c:	ldr	r2, [pc, #348]	; 18690 <raspicamcontrol_dump_parameters@@Base+0x22c>
   18530:	add	r2, pc, r2
   18534:	stm	sp, {r1, r2}
   18538:	mov	r1, #1
   1853c:	ldr	ip, [r6, #24]
   18540:	ldr	r2, [pc, #332]	; 18694 <raspicamcontrol_dump_parameters@@Base+0x230>
   18544:	str	ip, [sp, #8]
   18548:	add	r2, pc, r2
   1854c:	bl	14834 <__fprintf_chk@plt>
   18550:	ldr	r2, [pc, #320]	; 18698 <raspicamcontrol_dump_parameters@@Base+0x234>
   18554:	ldr	r0, [r4]
   18558:	mov	r3, r9
   1855c:	mov	r1, #1
   18560:	add	r2, pc, r2
   18564:	str	sl, [sp]
   18568:	str	r8, [sp, #4]
   1856c:	bl	14834 <__fprintf_chk@plt>
   18570:	ldr	r2, [pc, #292]	; 1869c <raspicamcontrol_dump_parameters@@Base+0x238>
   18574:	mov	r3, r7
   18578:	ldr	r0, [r4]
   1857c:	mov	r1, #1
   18580:	add	r2, pc, r2
   18584:	bl	14834 <__fprintf_chk@plt>
   18588:	ldr	r3, [r6, #84]	; 0x54
   1858c:	ldr	r0, [r4]
   18590:	cmp	r3, #0
   18594:	beq	18674 <raspicamcontrol_dump_parameters@@Base+0x210>
   18598:	ldr	r3, [pc, #256]	; 186a0 <raspicamcontrol_dump_parameters@@Base+0x23c>
   1859c:	add	r3, pc, r3
   185a0:	str	r3, [sp]
   185a4:	mov	r1, #1
   185a8:	ldr	ip, [r6, #88]	; 0x58
   185ac:	mov	r3, fp
   185b0:	ldr	r2, [pc, #236]	; 186a4 <raspicamcontrol_dump_parameters@@Base+0x240>
   185b4:	str	ip, [sp, #4]
   185b8:	add	r2, pc, r2
   185bc:	ldr	ip, [r6, #92]	; 0x5c
   185c0:	str	ip, [sp, #8]
   185c4:	bl	14834 <__fprintf_chk@plt>
   185c8:	ldr	r3, [r6, #104]	; 0x68
   185cc:	ldr	r0, [r4]
   185d0:	cmp	r3, #0
   185d4:	ldr	r3, [r6, #100]	; 0x64
   185d8:	beq	18654 <raspicamcontrol_dump_parameters@@Base+0x1f0>
   185dc:	ldr	r2, [r6, #108]	; 0x6c
   185e0:	ldr	r1, [pc, #192]	; 186a8 <raspicamcontrol_dump_parameters@@Base+0x244>
   185e4:	cmp	r2, #0
   185e8:	add	r1, pc, r1
   185ec:	bne	18668 <raspicamcontrol_dump_parameters@@Base+0x204>
   185f0:	ldr	r2, [pc, #180]	; 186ac <raspicamcontrol_dump_parameters@@Base+0x248>
   185f4:	add	r2, pc, r2
   185f8:	stm	sp, {r1, r2}
   185fc:	mov	r1, #1
   18600:	ldr	r2, [pc, #168]	; 186b0 <raspicamcontrol_dump_parameters@@Base+0x24c>
   18604:	add	r2, pc, r2
   18608:	bl	14834 <__fprintf_chk@plt>
   1860c:	ldrd	r2, [r6, #112]	; 0x70
   18610:	ldr	r0, [r4]
   18614:	mov	r1, #1
   18618:	strd	r2, [sp]
   1861c:	ldrd	r4, [r6, #120]	; 0x78
   18620:	ldr	r2, [pc, #140]	; 186b4 <raspicamcontrol_dump_parameters@@Base+0x250>
   18624:	strd	r4, [sp, #8]
   18628:	add	r2, pc, r2
   1862c:	ldrd	r4, [r6, #128]	; 0x80
   18630:	strd	r4, [sp, #16]
   18634:	ldrd	r4, [r6, #136]	; 0x88
   18638:	strd	r4, [sp, #24]
   1863c:	bl	14834 <__fprintf_chk@plt>
   18640:	add	sp, sp, #36	; 0x24
   18644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18648:	ldr	r2, [pc, #104]	; 186b8 <raspicamcontrol_dump_parameters@@Base+0x254>
   1864c:	add	r2, pc, r2
   18650:	b	18534 <raspicamcontrol_dump_parameters@@Base+0xd0>
   18654:	ldr	r2, [r6, #108]	; 0x6c
   18658:	ldr	r1, [pc, #92]	; 186bc <raspicamcontrol_dump_parameters@@Base+0x258>
   1865c:	cmp	r2, #0
   18660:	add	r1, pc, r1
   18664:	beq	185f0 <raspicamcontrol_dump_parameters@@Base+0x18c>
   18668:	ldr	r2, [pc, #80]	; 186c0 <raspicamcontrol_dump_parameters@@Base+0x25c>
   1866c:	add	r2, pc, r2
   18670:	b	185f8 <raspicamcontrol_dump_parameters@@Base+0x194>
   18674:	ldr	r3, [pc, #72]	; 186c4 <raspicamcontrol_dump_parameters@@Base+0x260>
   18678:	add	r3, pc, r3
   1867c:	b	185a0 <raspicamcontrol_dump_parameters@@Base+0x13c>
   18680:	andeq	r1, r2, r4, ror #29
   18684:	andeq	r1, r2, r4, ror #22
   18688:	andeq	r0, r0, r4, asr r3
   1868c:	andeq	sl, r0, ip, lsl fp
   18690:	andeq	sl, r0, ip, ror #21
   18694:	andeq	sl, r0, r8, lsl #22
   18698:	andeq	sl, r0, ip, lsr fp
   1869c:	andeq	sl, r0, r4, asr fp
   186a0:	andeq	sl, r0, r0, lsl #21
   186a4:	andeq	sl, r0, r8, lsr fp
   186a8:	andeq	sl, r0, r4, lsr sl
   186ac:	andeq	sl, r0, ip, lsr #20
   186b0:	andeq	sl, r0, r0, lsr fp
   186b4:	andeq	sl, r0, r0, lsr fp
   186b8:	ldrdeq	sl, [r0], -r4
   186bc:	andeq	sl, r0, r0, asr #19
   186c0:			; <UNDEFINED> instruction: 0x0000a9b0
   186c4:	andeq	sl, r0, r8, lsr #19

000186c8 <raspicamcontrol_set_defaults@@Base>:
   186c8:	push	{r4, r5, r6, r7, lr}
   186cc:	subs	r6, r0, #0
   186d0:	sub	sp, sp, #12
   186d4:	beq	18798 <raspicamcontrol_set_defaults@@Base+0xd0>
   186d8:	mov	r1, #0
   186dc:	mov	r2, #0
   186e0:	mov	ip, #1
   186e4:	mov	r0, #128	; 0x80
   186e8:	mov	r4, #0
   186ec:	mov	r5, #0
   186f0:	mov	r7, #50	; 0x32
   186f4:	strd	r4, [r6, #120]	; 0x78
   186f8:	strd	r4, [r6, #112]	; 0x70
   186fc:	mov	r3, #0
   18700:	mov	r4, #0
   18704:	movt	r3, #16368	; 0x3ff0
   18708:	str	r1, [r6]
   1870c:	strd	r2, [r6, #136]	; 0x88
   18710:	strd	r2, [r6, #128]	; 0x80
   18714:	mvn	r3, #0
   18718:	str	r1, [r6, #4]
   1871c:	str	r1, [r6, #12]
   18720:	str	r1, [r6, #16]
   18724:	str	r1, [r6, #20]
   18728:	str	r1, [r6, #24]
   1872c:	str	r1, [r6, #96]	; 0x60
   18730:	str	r1, [r6, #32]
   18734:	str	r4, [r6, #148]	; 0x94
   18738:	str	r1, [r6, #40]	; 0x28
   1873c:	str	r4, [r6, #152]	; 0x98
   18740:	str	r1, [r6, #84]	; 0x54
   18744:	str	r1, [r6, #100]	; 0x64
   18748:	str	r1, [r6, #108]	; 0x6c
   1874c:	str	r1, [r6, #104]	; 0x68
   18750:	str	r1, [r6, #144]	; 0x90
   18754:	str	r1, [r6, #156]	; 0x9c
   18758:	str	r1, [r6, #160]	; 0xa0
   1875c:	str	r1, [r6, #164]	; 0xa4
   18760:	strb	r1, [r6, #168]	; 0xa8
   18764:	str	r1, [r6, #424]	; 0x1a8
   18768:	str	r1, [r6, #456]	; 0x1c8
   1876c:	str	r7, [r6, #8]
   18770:	str	ip, [r6, #28]
   18774:	str	ip, [r6, #36]	; 0x24
   18778:	str	r0, [r6, #88]	; 0x58
   1877c:	str	r0, [r6, #92]	; 0x5c
   18780:	str	r3, [r6, #428]	; 0x1ac
   18784:	str	r3, [r6, #432]	; 0x1b0
   18788:	str	r1, [r6, #460]	; 0x1cc
   1878c:	str	r1, [r6, #464]	; 0x1d0
   18790:	add	sp, sp, #12
   18794:	pop	{r4, r5, r6, r7, pc}
   18798:	ldr	r3, [pc, #40]	; 187c8 <raspicamcontrol_set_defaults@@Base+0x100>
   1879c:	movw	r2, #942	; 0x3ae
   187a0:	ldr	r0, [pc, #36]	; 187cc <raspicamcontrol_set_defaults@@Base+0x104>
   187a4:	add	r3, pc, r3
   187a8:	ldr	r1, [pc, #32]	; 187d0 <raspicamcontrol_set_defaults@@Base+0x108>
   187ac:	str	r3, [sp]
   187b0:	add	r0, pc, r0
   187b4:	ldr	r3, [pc, #24]	; 187d4 <raspicamcontrol_set_defaults@@Base+0x10c>
   187b8:	add	r1, pc, r1
   187bc:	add	r3, pc, r3
   187c0:	bl	14924 <vcos_pthreads_logging_assert@plt>
   187c4:	b	186d8 <raspicamcontrol_set_defaults@@Base+0x10>
   187c8:	andeq	sl, r0, ip, lsr sl
   187cc:	andeq	sl, r0, r4, asr #19
   187d0:	andeq	sl, r0, r0, ror #11
   187d4:	andeq	sl, r0, ip, asr r8

000187d8 <raspicamcontrol_get_all_parameters@@Base>:
   187d8:	push	{r4, r5, lr}
   187dc:	subs	r5, r0, #0
   187e0:	sub	sp, sp, #12
   187e4:	mov	r4, r1
   187e8:	beq	1880c <raspicamcontrol_get_all_parameters@@Base+0x34>
   187ec:	cmp	r4, #0
   187f0:	beq	18840 <raspicamcontrol_get_all_parameters@@Base+0x68>
   187f4:	cmp	r4, #0
   187f8:	cmpne	r5, #0
   187fc:	movne	r0, #0
   18800:	moveq	r0, #1
   18804:	add	sp, sp, #12
   18808:	pop	{r4, r5, pc}
   1880c:	ldr	r3, [pc, #96]	; 18874 <raspicamcontrol_get_all_parameters@@Base+0x9c>
   18810:	movw	r2, #986	; 0x3da
   18814:	ldr	r1, [pc, #92]	; 18878 <raspicamcontrol_get_all_parameters@@Base+0xa0>
   18818:	add	r3, pc, r3
   1881c:	ldr	r0, [pc, #88]	; 1887c <raspicamcontrol_get_all_parameters@@Base+0xa4>
   18820:	str	r3, [sp]
   18824:	add	r1, pc, r1
   18828:	ldr	r3, [pc, #80]	; 18880 <raspicamcontrol_get_all_parameters@@Base+0xa8>
   1882c:	add	r0, pc, r0
   18830:	add	r1, r1, #32
   18834:	add	r3, pc, r3
   18838:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1883c:	b	187ec <raspicamcontrol_get_all_parameters@@Base+0x14>
   18840:	ldr	r3, [pc, #60]	; 18884 <raspicamcontrol_get_all_parameters@@Base+0xac>
   18844:	movw	r2, #987	; 0x3db
   18848:	ldr	r1, [pc, #56]	; 18888 <raspicamcontrol_get_all_parameters@@Base+0xb0>
   1884c:	add	r3, pc, r3
   18850:	ldr	r0, [pc, #52]	; 1888c <raspicamcontrol_get_all_parameters@@Base+0xb4>
   18854:	str	r3, [sp]
   18858:	add	r1, pc, r1
   1885c:	ldr	r3, [pc, #44]	; 18890 <raspicamcontrol_get_all_parameters@@Base+0xb8>
   18860:	add	r0, pc, r0
   18864:	add	r1, r1, #32
   18868:	add	r3, pc, r3
   1886c:	bl	14924 <vcos_pthreads_logging_assert@plt>
   18870:	b	187f4 <raspicamcontrol_get_all_parameters@@Base+0x1c>
   18874:	andeq	sl, r0, r4, ror #21
   18878:	andeq	sl, r0, r4, ror r5
   1887c:	andeq	sl, r0, r8, asr #18
   18880:	andeq	sl, r0, r4, ror #15
   18884:	muleq	r0, r4, r9
   18888:	andeq	sl, r0, r0, asr #10
   1888c:	andeq	sl, r0, r4, lsl r9
   18890:			; <UNDEFINED> instruction: 0x0000a7b0

00018894 <raspicamcontrol_set_saturation@@Base>:
   18894:	cmp	r0, #0
   18898:	ldr	r3, [pc, #120]	; 18918 <raspicamcontrol_set_saturation@@Base+0x84>
   1889c:	push	{lr}		; (str lr, [sp, #-4]!)
   188a0:	add	r3, pc, r3
   188a4:	sub	sp, sp, #12
   188a8:	beq	188dc <raspicamcontrol_set_saturation@@Base+0x48>
   188ac:	add	r2, r1, #100	; 0x64
   188b0:	cmp	r2, #200	; 0xc8
   188b4:	bls	188e8 <raspicamcontrol_set_saturation@@Base+0x54>
   188b8:	ldr	r2, [pc, #92]	; 1891c <raspicamcontrol_set_saturation@@Base+0x88>
   188bc:	ldr	r0, [r3, r2]
   188c0:	ldr	r3, [r0]
   188c4:	cmp	r3, #1
   188c8:	bls	188dc <raspicamcontrol_set_saturation@@Base+0x48>
   188cc:	ldr	r2, [pc, #76]	; 18920 <raspicamcontrol_set_saturation@@Base+0x8c>
   188d0:	mov	r1, #2
   188d4:	add	r2, pc, r2
   188d8:	bl	1493c <vcos_log_impl@plt>
   188dc:	mov	r0, #1
   188e0:	add	sp, sp, #12
   188e4:	pop	{pc}		; (ldr pc, [sp], #4)
   188e8:	add	ip, sp, #8
   188ec:	str	r1, [sp]
   188f0:	mov	r3, #100	; 0x64
   188f4:	ldr	r0, [r0, #16]
   188f8:	str	r3, [sp, #4]
   188fc:	mov	r1, #47	; 0x2f
   18900:	ldmdb	ip, {r2, r3}
   18904:	movt	r1, #1
   18908:	bl	14288 <mmal_port_parameter_set_rational@plt>
   1890c:	add	sp, sp, #12
   18910:	pop	{lr}		; (ldr lr, [sp], #4)
   18914:	b	1b3c4 <mmal_status_to_int@@Base>
   18918:	andeq	r1, r2, r8, asr r7
   1891c:	andeq	r0, r0, r0, asr #6
   18920:	andeq	sl, r0, r4, lsl r9

00018924 <raspicamcontrol_set_sharpness@@Base>:
   18924:	cmp	r0, #0
   18928:	ldr	r3, [pc, #120]	; 189a8 <raspicamcontrol_set_sharpness@@Base+0x84>
   1892c:	push	{lr}		; (str lr, [sp, #-4]!)
   18930:	add	r3, pc, r3
   18934:	sub	sp, sp, #12
   18938:	beq	1896c <raspicamcontrol_set_sharpness@@Base+0x48>
   1893c:	add	r2, r1, #100	; 0x64
   18940:	cmp	r2, #200	; 0xc8
   18944:	bls	18978 <raspicamcontrol_set_sharpness@@Base+0x54>
   18948:	ldr	r2, [pc, #92]	; 189ac <raspicamcontrol_set_sharpness@@Base+0x88>
   1894c:	ldr	r0, [r3, r2]
   18950:	ldr	r3, [r0]
   18954:	cmp	r3, #1
   18958:	bls	1896c <raspicamcontrol_set_sharpness@@Base+0x48>
   1895c:	ldr	r2, [pc, #76]	; 189b0 <raspicamcontrol_set_sharpness@@Base+0x8c>
   18960:	mov	r1, #2
   18964:	add	r2, pc, r2
   18968:	bl	1493c <vcos_log_impl@plt>
   1896c:	mov	r0, #1
   18970:	add	sp, sp, #12
   18974:	pop	{pc}		; (ldr pc, [sp], #4)
   18978:	add	ip, sp, #8
   1897c:	str	r1, [sp]
   18980:	mov	r3, #100	; 0x64
   18984:	ldr	r0, [r0, #16]
   18988:	str	r3, [sp, #4]
   1898c:	mov	r1, #44	; 0x2c
   18990:	ldmdb	ip, {r2, r3}
   18994:	movt	r1, #1
   18998:	bl	14288 <mmal_port_parameter_set_rational@plt>
   1899c:	add	sp, sp, #12
   189a0:	pop	{lr}		; (ldr lr, [sp], #4)
   189a4:	b	1b3c4 <mmal_status_to_int@@Base>
   189a8:	andeq	r1, r2, r8, asr #13
   189ac:	andeq	r0, r0, r0, asr #6
   189b0:	andeq	sl, r0, r0, lsr #17

000189b4 <raspicamcontrol_set_contrast@@Base>:
   189b4:	cmp	r0, #0
   189b8:	ldr	r3, [pc, #120]	; 18a38 <raspicamcontrol_set_contrast@@Base+0x84>
   189bc:	push	{lr}		; (str lr, [sp, #-4]!)
   189c0:	add	r3, pc, r3
   189c4:	sub	sp, sp, #12
   189c8:	beq	189fc <raspicamcontrol_set_contrast@@Base+0x48>
   189cc:	add	r2, r1, #100	; 0x64
   189d0:	cmp	r2, #200	; 0xc8
   189d4:	bls	18a08 <raspicamcontrol_set_contrast@@Base+0x54>
   189d8:	ldr	r2, [pc, #92]	; 18a3c <raspicamcontrol_set_contrast@@Base+0x88>
   189dc:	ldr	r0, [r3, r2]
   189e0:	ldr	r3, [r0]
   189e4:	cmp	r3, #1
   189e8:	bls	189fc <raspicamcontrol_set_contrast@@Base+0x48>
   189ec:	ldr	r2, [pc, #76]	; 18a40 <raspicamcontrol_set_contrast@@Base+0x8c>
   189f0:	mov	r1, #2
   189f4:	add	r2, pc, r2
   189f8:	bl	1493c <vcos_log_impl@plt>
   189fc:	mov	r0, #1
   18a00:	add	sp, sp, #12
   18a04:	pop	{pc}		; (ldr pc, [sp], #4)
   18a08:	add	ip, sp, #8
   18a0c:	str	r1, [sp]
   18a10:	mov	r3, #100	; 0x64
   18a14:	ldr	r0, [r0, #16]
   18a18:	str	r3, [sp, #4]
   18a1c:	mov	r1, #45	; 0x2d
   18a20:	ldmdb	ip, {r2, r3}
   18a24:	movt	r1, #1
   18a28:	bl	14288 <mmal_port_parameter_set_rational@plt>
   18a2c:	add	sp, sp, #12
   18a30:	pop	{lr}		; (ldr lr, [sp], #4)
   18a34:	b	1b3c4 <mmal_status_to_int@@Base>
   18a38:	andeq	r1, r2, r8, lsr r6
   18a3c:	andeq	r0, r0, r0, asr #6
   18a40:	andeq	sl, r0, r8, lsr #16

00018a44 <raspicamcontrol_set_brightness@@Base>:
   18a44:	cmp	r0, #0
   18a48:	ldr	r3, [pc, #116]	; 18ac4 <raspicamcontrol_set_brightness@@Base+0x80>
   18a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   18a50:	add	r3, pc, r3
   18a54:	sub	sp, sp, #12
   18a58:	beq	18a88 <raspicamcontrol_set_brightness@@Base+0x44>
   18a5c:	cmp	r1, #100	; 0x64
   18a60:	bls	18a94 <raspicamcontrol_set_brightness@@Base+0x50>
   18a64:	ldr	r2, [pc, #92]	; 18ac8 <raspicamcontrol_set_brightness@@Base+0x84>
   18a68:	ldr	r0, [r3, r2]
   18a6c:	ldr	r3, [r0]
   18a70:	cmp	r3, #1
   18a74:	bls	18a88 <raspicamcontrol_set_brightness@@Base+0x44>
   18a78:	ldr	r2, [pc, #76]	; 18acc <raspicamcontrol_set_brightness@@Base+0x88>
   18a7c:	mov	r1, #2
   18a80:	add	r2, pc, r2
   18a84:	bl	1493c <vcos_log_impl@plt>
   18a88:	mov	r0, #1
   18a8c:	add	sp, sp, #12
   18a90:	pop	{pc}		; (ldr pc, [sp], #4)
   18a94:	add	ip, sp, #8
   18a98:	str	r1, [sp]
   18a9c:	mov	r3, #100	; 0x64
   18aa0:	ldr	r0, [r0, #16]
   18aa4:	str	r3, [sp, #4]
   18aa8:	mov	r1, #46	; 0x2e
   18aac:	ldmdb	ip, {r2, r3}
   18ab0:	movt	r1, #1
   18ab4:	bl	14288 <mmal_port_parameter_set_rational@plt>
   18ab8:	add	sp, sp, #12
   18abc:	pop	{lr}		; (ldr lr, [sp], #4)
   18ac0:	b	1b3c4 <mmal_status_to_int@@Base>
   18ac4:	andeq	r1, r2, r8, lsr #11
   18ac8:	andeq	r0, r0, r0, asr #6
   18acc:			; <UNDEFINED> instruction: 0x0000a7b4

00018ad0 <raspicamcontrol_set_ISO@@Base>:
   18ad0:	cmp	r0, #0
   18ad4:	push	{r3, lr}
   18ad8:	beq	18af8 <raspicamcontrol_set_ISO@@Base+0x28>
   18adc:	mov	r2, r1
   18ae0:	ldr	r0, [r0, #16]
   18ae4:	mov	r1, #48	; 0x30
   18ae8:	movt	r1, #1
   18aec:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   18af0:	pop	{r3, lr}
   18af4:	b	1b3c4 <mmal_status_to_int@@Base>
   18af8:	mov	r0, #1
   18afc:	pop	{r3, pc}

00018b00 <raspicamcontrol_set_metering_mode@@Base>:
   18b00:	ldr	r2, [pc, #104]	; 18b70 <raspicamcontrol_set_metering_mode@@Base+0x70>
   18b04:	mov	r3, #19
   18b08:	push	{r4, lr}
   18b0c:	add	r2, pc, r2
   18b10:	ldr	r4, [pc, #92]	; 18b74 <raspicamcontrol_set_metering_mode@@Base+0x74>
   18b14:	sub	sp, sp, #16
   18b18:	movt	r3, #1
   18b1c:	cmp	r0, #0
   18b20:	mov	ip, #12
   18b24:	ldr	r4, [r2, r4]
   18b28:	moveq	r0, #1
   18b2c:	str	r3, [sp]
   18b30:	str	r1, [sp, #8]
   18b34:	ldr	r3, [r4]
   18b38:	str	ip, [sp, #4]
   18b3c:	str	r3, [sp, #12]
   18b40:	beq	18b54 <raspicamcontrol_set_metering_mode@@Base+0x54>
   18b44:	mov	r1, sp
   18b48:	ldr	r0, [r0, #16]
   18b4c:	bl	142ac <mmal_port_parameter_set@plt>
   18b50:	bl	1b3c4 <mmal_status_to_int@@Base>
   18b54:	ldr	r2, [sp, #12]
   18b58:	ldr	r3, [r4]
   18b5c:	cmp	r2, r3
   18b60:	bne	18b6c <raspicamcontrol_set_metering_mode@@Base+0x6c>
   18b64:	add	sp, sp, #16
   18b68:	pop	{r4, pc}
   18b6c:	bl	14804 <__stack_chk_fail@plt>
   18b70:	andeq	r1, r2, ip, ror #9
   18b74:	andeq	r0, r0, r4, lsr r3

00018b78 <raspicamcontrol_set_video_stabilisation@@Base>:
   18b78:	cmp	r0, #0
   18b7c:	push	{r3, lr}
   18b80:	beq	18ba0 <raspicamcontrol_set_video_stabilisation@@Base+0x28>
   18b84:	mov	r2, r1
   18b88:	ldr	r0, [r0, #16]
   18b8c:	mov	r1, #29
   18b90:	movt	r1, #1
   18b94:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   18b98:	pop	{r3, lr}
   18b9c:	b	1b3c4 <mmal_status_to_int@@Base>
   18ba0:	mov	r0, #1
   18ba4:	pop	{r3, pc}

00018ba8 <raspicamcontrol_set_exposure_compensation@@Base>:
   18ba8:	cmp	r0, #0
   18bac:	push	{r3, lr}
   18bb0:	beq	18bd0 <raspicamcontrol_set_exposure_compensation@@Base+0x28>
   18bb4:	mov	r2, r1
   18bb8:	ldr	r0, [r0, #16]
   18bbc:	mov	r1, #13
   18bc0:	movt	r1, #1
   18bc4:	bl	1490c <mmal_port_parameter_set_int32@plt>
   18bc8:	pop	{r3, lr}
   18bcc:	b	1b3c4 <mmal_status_to_int@@Base>
   18bd0:	mov	r0, #1
   18bd4:	pop	{r3, pc}

00018bd8 <raspicamcontrol_set_exposure_mode@@Base>:
   18bd8:	ldr	r2, [pc, #104]	; 18c48 <raspicamcontrol_set_exposure_mode@@Base+0x70>
   18bdc:	mov	r3, #18
   18be0:	push	{r4, lr}
   18be4:	add	r2, pc, r2
   18be8:	ldr	r4, [pc, #92]	; 18c4c <raspicamcontrol_set_exposure_mode@@Base+0x74>
   18bec:	sub	sp, sp, #16
   18bf0:	movt	r3, #1
   18bf4:	cmp	r0, #0
   18bf8:	mov	ip, #12
   18bfc:	ldr	r4, [r2, r4]
   18c00:	moveq	r0, #1
   18c04:	str	r3, [sp]
   18c08:	str	r1, [sp, #8]
   18c0c:	ldr	r3, [r4]
   18c10:	str	ip, [sp, #4]
   18c14:	str	r3, [sp, #12]
   18c18:	beq	18c2c <raspicamcontrol_set_exposure_mode@@Base+0x54>
   18c1c:	mov	r1, sp
   18c20:	ldr	r0, [r0, #16]
   18c24:	bl	142ac <mmal_port_parameter_set@plt>
   18c28:	bl	1b3c4 <mmal_status_to_int@@Base>
   18c2c:	ldr	r2, [sp, #12]
   18c30:	ldr	r3, [r4]
   18c34:	cmp	r2, r3
   18c38:	bne	18c44 <raspicamcontrol_set_exposure_mode@@Base+0x6c>
   18c3c:	add	sp, sp, #16
   18c40:	pop	{r4, pc}
   18c44:	bl	14804 <__stack_chk_fail@plt>
   18c48:	andeq	r1, r2, r4, lsl r4
   18c4c:	andeq	r0, r0, r4, lsr r3

00018c50 <raspicamcontrol_set_flicker_avoid_mode@@Base>:
   18c50:	ldr	r2, [pc, #104]	; 18cc0 <raspicamcontrol_set_flicker_avoid_mode@@Base+0x70>
   18c54:	mov	r3, #8
   18c58:	push	{r4, lr}
   18c5c:	add	r2, pc, r2
   18c60:	ldr	r4, [pc, #92]	; 18cc4 <raspicamcontrol_set_flicker_avoid_mode@@Base+0x74>
   18c64:	sub	sp, sp, #16
   18c68:	movt	r3, #1
   18c6c:	cmp	r0, #0
   18c70:	mov	ip, #12
   18c74:	ldr	r4, [r2, r4]
   18c78:	moveq	r0, #1
   18c7c:	str	r3, [sp]
   18c80:	str	r1, [sp, #8]
   18c84:	ldr	r3, [r4]
   18c88:	str	ip, [sp, #4]
   18c8c:	str	r3, [sp, #12]
   18c90:	beq	18ca4 <raspicamcontrol_set_flicker_avoid_mode@@Base+0x54>
   18c94:	mov	r1, sp
   18c98:	ldr	r0, [r0, #16]
   18c9c:	bl	142ac <mmal_port_parameter_set@plt>
   18ca0:	bl	1b3c4 <mmal_status_to_int@@Base>
   18ca4:	ldr	r2, [sp, #12]
   18ca8:	ldr	r3, [r4]
   18cac:	cmp	r2, r3
   18cb0:	bne	18cbc <raspicamcontrol_set_flicker_avoid_mode@@Base+0x6c>
   18cb4:	add	sp, sp, #16
   18cb8:	pop	{r4, pc}
   18cbc:	bl	14804 <__stack_chk_fail@plt>
   18cc0:	muleq	r2, ip, r3
   18cc4:	andeq	r0, r0, r4, lsr r3

00018cc8 <raspicamcontrol_set_awb_mode@@Base>:
   18cc8:	ldr	r2, [pc, #104]	; 18d38 <raspicamcontrol_set_awb_mode@@Base+0x70>
   18ccc:	mov	r3, #5
   18cd0:	push	{r4, lr}
   18cd4:	add	r2, pc, r2
   18cd8:	ldr	r4, [pc, #92]	; 18d3c <raspicamcontrol_set_awb_mode@@Base+0x74>
   18cdc:	sub	sp, sp, #16
   18ce0:	movt	r3, #1
   18ce4:	cmp	r0, #0
   18ce8:	mov	ip, #12
   18cec:	ldr	r4, [r2, r4]
   18cf0:	moveq	r0, #1
   18cf4:	str	r3, [sp]
   18cf8:	str	r1, [sp, #8]
   18cfc:	ldr	r3, [r4]
   18d00:	str	ip, [sp, #4]
   18d04:	str	r3, [sp, #12]
   18d08:	beq	18d1c <raspicamcontrol_set_awb_mode@@Base+0x54>
   18d0c:	mov	r1, sp
   18d10:	ldr	r0, [r0, #16]
   18d14:	bl	142ac <mmal_port_parameter_set@plt>
   18d18:	bl	1b3c4 <mmal_status_to_int@@Base>
   18d1c:	ldr	r2, [sp, #12]
   18d20:	ldr	r3, [r4]
   18d24:	cmp	r2, r3
   18d28:	bne	18d34 <raspicamcontrol_set_awb_mode@@Base+0x6c>
   18d2c:	add	sp, sp, #16
   18d30:	pop	{r4, pc}
   18d34:	bl	14804 <__stack_chk_fail@plt>
   18d38:	andeq	r1, r2, r4, lsr #6
   18d3c:	andeq	r0, r0, r4, lsr r3

00018d40 <raspicamcontrol_set_awb_gains@@Base>:
   18d40:	push	{r4, r5, r6, r7, r8, lr}
   18d44:	cmp	r0, #0
   18d48:	ldr	r4, [pc, #200]	; 18e18 <raspicamcontrol_set_awb_gains@@Base+0xd8>
   18d4c:	mov	r7, r0
   18d50:	ldr	r5, [pc, #196]	; 18e1c <raspicamcontrol_set_awb_gains@@Base+0xdc>
   18d54:	sub	sp, sp, #32
   18d58:	add	r4, pc, r4
   18d5c:	ldr	r8, [pc, #188]	; 18e20 <raspicamcontrol_set_awb_gains@@Base+0xe0>
   18d60:	add	r4, r4, #68	; 0x44
   18d64:	add	r5, pc, r5
   18d68:	add	r6, sp, #4
   18d6c:	ldm	r4!, {r0, r1, r2, r3}
   18d70:	mov	ip, r6
   18d74:	ldr	r5, [r5, r8]
   18d78:	stmia	ip!, {r0, r1, r2, r3}
   18d7c:	ldr	r3, [r5]
   18d80:	ldm	r4, {r0, r1}
   18d84:	str	r3, [sp, #28]
   18d88:	stm	ip, {r0, r1}
   18d8c:	beq	18e08 <raspicamcontrol_set_awb_gains@@Base+0xc8>
   18d90:	vcmp.f32	s0, #0.0
   18d94:	vmrs	APSR_nzcv, fpscr
   18d98:	vcmp.f32	s1, #0.0
   18d9c:	movne	r3, #0
   18da0:	moveq	r3, #1
   18da4:	vmrs	APSR_nzcv, fpscr
   18da8:	orreq	r3, r3, #1
   18dac:	cmp	r3, #0
   18db0:	movne	r0, #0
   18db4:	bne	18df0 <raspicamcontrol_set_awb_gains@@Base+0xb0>
   18db8:	vldr	s15, [pc, #84]	; 18e14 <raspicamcontrol_set_awb_gains@@Base+0xd4>
   18dbc:	vmul.f32	s0, s0, s15
   18dc0:	mov	r1, r6
   18dc4:	ldr	r0, [r7, #16]
   18dc8:	mov	r3, #65536	; 0x10000
   18dcc:	str	r3, [sp, #24]
   18dd0:	str	r3, [sp, #16]
   18dd4:	vmul.f32	s1, s1, s15
   18dd8:	vcvt.u32.f32	s0, s0
   18ddc:	vcvt.u32.f32	s1, s1
   18de0:	vstr	s0, [sp, #12]
   18de4:	vstr	s1, [sp, #20]
   18de8:	bl	142ac <mmal_port_parameter_set@plt>
   18dec:	bl	1b3c4 <mmal_status_to_int@@Base>
   18df0:	ldr	r2, [sp, #28]
   18df4:	ldr	r3, [r5]
   18df8:	cmp	r2, r3
   18dfc:	bne	18e10 <raspicamcontrol_set_awb_gains@@Base+0xd0>
   18e00:	add	sp, sp, #32
   18e04:	pop	{r4, r5, r6, r7, r8, pc}
   18e08:	mov	r0, #1
   18e0c:	b	18df0 <raspicamcontrol_set_awb_gains@@Base+0xb0>
   18e10:	bl	14804 <__stack_chk_fail@plt>
   18e14:	strmi	r0, [r0, r0]
   18e18:	andeq	sl, r0, r0, asr #32
   18e1c:	muleq	r2, r4, r2
   18e20:	andeq	r0, r0, r4, lsr r3

00018e24 <raspicamcontrol_set_imageFX@@Base>:
   18e24:	ldr	r2, [pc, #104]	; 18e94 <raspicamcontrol_set_imageFX@@Base+0x70>
   18e28:	mov	r3, #6
   18e2c:	push	{r4, lr}
   18e30:	add	r2, pc, r2
   18e34:	ldr	r4, [pc, #92]	; 18e98 <raspicamcontrol_set_imageFX@@Base+0x74>
   18e38:	sub	sp, sp, #16
   18e3c:	movt	r3, #1
   18e40:	cmp	r0, #0
   18e44:	mov	ip, #12
   18e48:	ldr	r4, [r2, r4]
   18e4c:	moveq	r0, #1
   18e50:	str	r3, [sp]
   18e54:	str	r1, [sp, #8]
   18e58:	ldr	r3, [r4]
   18e5c:	str	ip, [sp, #4]
   18e60:	str	r3, [sp, #12]
   18e64:	beq	18e78 <raspicamcontrol_set_imageFX@@Base+0x54>
   18e68:	mov	r1, sp
   18e6c:	ldr	r0, [r0, #16]
   18e70:	bl	142ac <mmal_port_parameter_set@plt>
   18e74:	bl	1b3c4 <mmal_status_to_int@@Base>
   18e78:	ldr	r2, [sp, #12]
   18e7c:	ldr	r3, [r4]
   18e80:	cmp	r2, r3
   18e84:	bne	18e90 <raspicamcontrol_set_imageFX@@Base+0x6c>
   18e88:	add	sp, sp, #16
   18e8c:	pop	{r4, pc}
   18e90:	bl	14804 <__stack_chk_fail@plt>
   18e94:	andeq	r1, r2, r8, asr #3
   18e98:	andeq	r0, r0, r4, lsr r3

00018e9c <raspicamcontrol_set_colourFX@@Base>:
   18e9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18ea0:	cmp	r0, #0
   18ea4:	ldr	r4, [pc, #132]	; 18f30 <raspicamcontrol_set_colourFX@@Base+0x94>
   18ea8:	mov	r7, r0
   18eac:	ldr	r6, [pc, #128]	; 18f34 <raspicamcontrol_set_colourFX@@Base+0x98>
   18eb0:	mov	r5, r1
   18eb4:	add	r4, pc, r4
   18eb8:	ldr	r9, [pc, #120]	; 18f38 <raspicamcontrol_set_colourFX@@Base+0x9c>
   18ebc:	add	r4, r4, #92	; 0x5c
   18ec0:	add	r6, pc, r6
   18ec4:	sub	sp, sp, #28
   18ec8:	ldm	r4!, {r0, r1, r2, r3}
   18ecc:	mov	ip, sp
   18ed0:	ldr	r6, [r6, r9]
   18ed4:	ldr	r4, [r4]
   18ed8:	ldr	r9, [r6]
   18edc:	stmia	ip!, {r0, r1, r2, r3}
   18ee0:	moveq	r0, #1
   18ee4:	str	r9, [sp, #20]
   18ee8:	str	r4, [ip]
   18eec:	beq	18f14 <raspicamcontrol_set_colourFX@@Base+0x78>
   18ef0:	ldmib	r5, {r2, r3}
   18ef4:	mov	r1, sp
   18ef8:	ldr	ip, [r5]
   18efc:	ldr	r0, [r7, #16]
   18f00:	str	r2, [sp, #12]
   18f04:	str	ip, [sp, #8]
   18f08:	str	r3, [sp, #16]
   18f0c:	bl	142ac <mmal_port_parameter_set@plt>
   18f10:	bl	1b3c4 <mmal_status_to_int@@Base>
   18f14:	ldr	r2, [sp, #20]
   18f18:	ldr	r3, [r6]
   18f1c:	cmp	r2, r3
   18f20:	bne	18f2c <raspicamcontrol_set_colourFX@@Base+0x90>
   18f24:	add	sp, sp, #28
   18f28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18f2c:	bl	14804 <__stack_chk_fail@plt>
   18f30:	andeq	r9, r0, r4, ror #29
   18f34:	andeq	r1, r2, r8, lsr r1
   18f38:	andeq	r0, r0, r4, lsr r3

00018f3c <raspicamcontrol_set_rotation@@Base>:
   18f3c:	movw	r2, #24759	; 0x60b7
   18f40:	movt	r2, #46603	; 0xb60b
   18f44:	push	{r3, r4, r5, r6, r7, lr}
   18f48:	mov	r3, r1
   18f4c:	smull	r1, ip, r2, r3
   18f50:	asr	r1, r3, #31
   18f54:	mov	lr, #360	; 0x168
   18f58:	mov	r5, #90	; 0x5a
   18f5c:	add	ip, ip, r3
   18f60:	mov	r6, r0
   18f64:	ldr	r0, [r0, #32]
   18f68:	mov	r4, #2
   18f6c:	rsb	ip, r1, ip, asr #8
   18f70:	movt	r4, #1
   18f74:	mls	r3, lr, ip, r3
   18f78:	mov	r1, r4
   18f7c:	ldr	r0, [r0]
   18f80:	smull	ip, r2, r2, r3
   18f84:	asr	ip, r3, #31
   18f88:	add	r3, r2, r3
   18f8c:	rsb	r3, ip, r3, asr #6
   18f90:	mul	r5, r5, r3
   18f94:	mov	r2, r5
   18f98:	bl	1490c <mmal_port_parameter_set_int32@plt>
   18f9c:	ldr	r3, [r6, #32]
   18fa0:	mov	r2, r5
   18fa4:	mov	r1, r4
   18fa8:	mov	r7, r0
   18fac:	ldr	r0, [r3, #4]
   18fb0:	bl	1490c <mmal_port_parameter_set_int32@plt>
   18fb4:	ldr	r3, [r6, #32]
   18fb8:	mov	r2, r5
   18fbc:	mov	r1, r4
   18fc0:	ldr	r0, [r3, #8]
   18fc4:	bl	1490c <mmal_port_parameter_set_int32@plt>
   18fc8:	mov	r0, r7
   18fcc:	pop	{r3, r4, r5, r6, r7, lr}
   18fd0:	b	1b3c4 <mmal_status_to_int@@Base>

00018fd4 <raspicamcontrol_set_flips@@Base>:
   18fd4:	ldr	ip, [pc, #188]	; 19098 <raspicamcontrol_set_flips@@Base+0xc4>
   18fd8:	ldr	r3, [pc, #188]	; 1909c <raspicamcontrol_set_flips@@Base+0xc8>
   18fdc:	push	{r4, r5, r6, r7, lr}
   18fe0:	mov	r5, r0
   18fe4:	ldr	r0, [pc, #180]	; 190a0 <raspicamcontrol_set_flips@@Base+0xcc>
   18fe8:	add	ip, pc, ip
   18fec:	add	r3, pc, r3
   18ff0:	adds	lr, r1, #0
   18ff4:	add	r3, r3, #112	; 0x70
   18ff8:	sub	sp, sp, #20
   18ffc:	ldr	r6, [ip, r0]
   19000:	movne	lr, #1
   19004:	adds	r7, r2, #0
   19008:	ldm	r3, {r0, r1, r2}
   1900c:	movne	r7, #1
   19010:	ldr	r3, [r6]
   19014:	tst	lr, r7
   19018:	stm	sp, {r0, r1, r2}
   1901c:	str	r3, [sp, #12]
   19020:	movne	r3, #3
   19024:	strne	r3, [sp, #8]
   19028:	bne	19048 <raspicamcontrol_set_flips@@Base+0x74>
   1902c:	cmp	lr, #0
   19030:	movne	r3, #2
   19034:	strne	r3, [sp, #8]
   19038:	bne	19048 <raspicamcontrol_set_flips@@Base+0x74>
   1903c:	cmp	r7, #0
   19040:	movne	r3, #1
   19044:	strne	r3, [sp, #8]
   19048:	ldr	r3, [r5, #32]
   1904c:	mov	r1, sp
   19050:	ldr	r0, [r3]
   19054:	bl	142ac <mmal_port_parameter_set@plt>
   19058:	ldr	r3, [r5, #32]
   1905c:	mov	r1, sp
   19060:	ldr	r0, [r3, #4]
   19064:	bl	142ac <mmal_port_parameter_set@plt>
   19068:	ldr	r3, [r5, #32]
   1906c:	mov	r1, sp
   19070:	ldr	r0, [r3, #8]
   19074:	bl	142ac <mmal_port_parameter_set@plt>
   19078:	bl	1b3c4 <mmal_status_to_int@@Base>
   1907c:	ldr	r2, [sp, #12]
   19080:	ldr	r3, [r6]
   19084:	cmp	r2, r3
   19088:	bne	19094 <raspicamcontrol_set_flips@@Base+0xc0>
   1908c:	add	sp, sp, #20
   19090:	pop	{r4, r5, r6, r7, pc}
   19094:	bl	14804 <__stack_chk_fail@plt>
   19098:	andeq	r1, r2, r0, lsl r0
   1909c:	andeq	r9, r0, ip, lsr #27
   190a0:	andeq	r0, r0, r4, lsr r3

000190a4 <raspicamcontrol_cycle_test@@Base>:
   190a4:	ldr	r3, [pc, #1452]	; 19658 <raspicamcontrol_cycle_test@@Base+0x5b4>
   190a8:	ldr	r2, [pc, #1452]	; 1965c <raspicamcontrol_cycle_test@@Base+0x5b8>
   190ac:	add	r3, pc, r3
   190b0:	push	{r4, r5, r6, lr}
   190b4:	subs	r6, r0, #0
   190b8:	ldr	r5, [r3, r2]
   190bc:	sub	sp, sp, #24
   190c0:	ldr	r3, [r5]
   190c4:	str	r3, [sp, #20]
   190c8:	beq	193fc <raspicamcontrol_cycle_test@@Base+0x358>
   190cc:	ldr	r4, [pc, #1420]	; 19660 <raspicamcontrol_cycle_test@@Base+0x5bc>
   190d0:	add	r4, pc, r4
   190d4:	ldr	r2, [r4]
   190d8:	cmp	r2, #0
   190dc:	beq	19164 <raspicamcontrol_cycle_test@@Base+0xc0>
   190e0:	cmp	r2, #1
   190e4:	beq	19358 <raspicamcontrol_cycle_test@@Base+0x2b4>
   190e8:	cmp	r2, #2
   190ec:	beq	1938c <raspicamcontrol_cycle_test@@Base+0x2e8>
   190f0:	cmp	r2, #3
   190f4:	beq	19304 <raspicamcontrol_cycle_test@@Base+0x260>
   190f8:	cmp	r2, #4
   190fc:	beq	19430 <raspicamcontrol_cycle_test@@Base+0x38c>
   19100:	cmp	r2, #5
   19104:	beq	19460 <raspicamcontrol_cycle_test@@Base+0x3bc>
   19108:	cmp	r2, #6
   1910c:	beq	19528 <raspicamcontrol_cycle_test@@Base+0x484>
   19110:	cmp	r2, #7
   19114:	beq	1919c <raspicamcontrol_cycle_test@@Base+0xf8>
   19118:	cmp	r2, #8
   1911c:	beq	19244 <raspicamcontrol_cycle_test@@Base+0x1a0>
   19120:	cmp	r2, #9
   19124:	beq	191e4 <raspicamcontrol_cycle_test@@Base+0x140>
   19128:	cmp	r2, #10
   1912c:	beq	1914c <raspicamcontrol_cycle_test@@Base+0xa8>
   19130:	mov	r0, #1
   19134:	ldr	r2, [sp, #20]
   19138:	ldr	r3, [r5]
   1913c:	cmp	r2, r3
   19140:	bne	19654 <raspicamcontrol_cycle_test@@Base+0x5b0>
   19144:	add	sp, sp, #24
   19148:	pop	{r4, r5, r6, pc}
   1914c:	ldr	r3, [pc, #1296]	; 19664 <raspicamcontrol_cycle_test@@Base+0x5c0>
   19150:	mov	r2, #1
   19154:	mov	r0, #0
   19158:	add	r3, pc, r3
   1915c:	str	r2, [r3]
   19160:	b	19134 <raspicamcontrol_cycle_test@@Base+0x90>
   19164:	mov	r1, #100	; 0x64
   19168:	mvn	r0, #99	; 0x63
   1916c:	mov	r2, #10
   19170:	bl	179b0 <_start@@Base+0x138>
   19174:	subs	r1, r0, #0
   19178:	beq	192ac <raspicamcontrol_cycle_test@@Base+0x208>
   1917c:	ldr	r3, [pc, #1252]	; 19668 <raspicamcontrol_cycle_test@@Base+0x5c4>
   19180:	mov	r0, r6
   19184:	add	r3, pc, r3
   19188:	ldr	r1, [r3]
   1918c:	bl	18924 <raspicamcontrol_set_sharpness@@Base>
   19190:	ldr	r2, [r4]
   19194:	cmp	r2, #7
   19198:	bne	19118 <raspicamcontrol_cycle_test@@Base+0x74>
   1919c:	mov	r1, #20
   191a0:	mov	r0, #0
   191a4:	mov	r2, #1
   191a8:	bl	179b0 <_start@@Base+0x138>
   191ac:	subs	r1, r0, #0
   191b0:	beq	193dc <raspicamcontrol_cycle_test@@Base+0x338>
   191b4:	ldr	r2, [pc, #1200]	; 1966c <raspicamcontrol_cycle_test@@Base+0x5c8>
   191b8:	mov	r0, r6
   191bc:	ldr	r3, [pc, #1196]	; 19670 <raspicamcontrol_cycle_test@@Base+0x5cc>
   191c0:	add	r2, pc, r2
   191c4:	add	r3, pc, r3
   191c8:	ldr	r2, [r2]
   191cc:	add	r3, r3, r2, lsl #3
   191d0:	ldr	r1, [r3, #4]
   191d4:	bl	18e24 <raspicamcontrol_set_imageFX@@Base>
   191d8:	ldr	r3, [pc, #1172]	; 19674 <raspicamcontrol_cycle_test@@Base+0x5d0>
   191dc:	ldr	r2, [pc, r3]
   191e0:	b	19118 <raspicamcontrol_cycle_test@@Base+0x74>
   191e4:	ldr	r4, [pc, #1164]	; 19678 <raspicamcontrol_cycle_test@@Base+0x5d4>
   191e8:	add	r4, pc, r4
   191ec:	ldr	r3, [r4]
   191f0:	cmp	r3, #3
   191f4:	beq	19590 <raspicamcontrol_cycle_test@@Base+0x4ec>
   191f8:	ble	192c4 <raspicamcontrol_cycle_test@@Base+0x220>
   191fc:	cmp	r3, #5
   19200:	beq	19610 <raspicamcontrol_cycle_test@@Base+0x56c>
   19204:	blt	195e8 <raspicamcontrol_cycle_test@@Base+0x544>
   19208:	cmp	r3, #6
   1920c:	bne	19130 <raspicamcontrol_cycle_test@@Base+0x8c>
   19210:	mov	r1, #0
   19214:	mov	r0, r6
   19218:	mov	r2, r1
   1921c:	bl	18fd4 <raspicamcontrol_set_flips@@Base>
   19220:	ldr	r3, [pc, #1108]	; 1967c <raspicamcontrol_cycle_test@@Base+0x5d8>
   19224:	movw	r2, #31073	; 0x7961
   19228:	movt	r2, #65534	; 0xfffe
   1922c:	add	r3, pc, r3
   19230:	str	r2, [r4]
   19234:	ldr	r2, [r3]
   19238:	add	r2, r2, #1
   1923c:	str	r2, [r3]
   19240:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   19244:	ldr	r1, [pc, #1076]	; 19680 <raspicamcontrol_cycle_test@@Base+0x5dc>
   19248:	mov	r3, #0
   1924c:	str	r3, [sp, #8]
   19250:	add	r1, pc, r1
   19254:	str	r3, [sp, #12]
   19258:	str	r3, [sp, #16]
   1925c:	ldr	r2, [r1]
   19260:	cmp	r2, #1
   19264:	beq	193c0 <raspicamcontrol_cycle_test@@Base+0x31c>
   19268:	cmp	r2, #2
   1926c:	beq	19338 <raspicamcontrol_cycle_test@@Base+0x294>
   19270:	movw	r3, #31073	; 0x7961
   19274:	movt	r3, #65534	; 0xfffe
   19278:	cmp	r2, r3
   1927c:	bne	19294 <raspicamcontrol_cycle_test@@Base+0x1f0>
   19280:	mov	r3, #128	; 0x80
   19284:	mov	r2, #1
   19288:	str	r3, [sp, #12]
   1928c:	str	r2, [r1]
   19290:	str	r3, [sp, #16]
   19294:	mov	r0, r6
   19298:	add	r1, sp, #8
   1929c:	bl	18e9c <raspicamcontrol_set_colourFX@@Base>
   192a0:	ldr	r3, [pc, #988]	; 19684 <raspicamcontrol_cycle_test@@Base+0x5e0>
   192a4:	ldr	r2, [pc, r3]
   192a8:	b	19120 <raspicamcontrol_cycle_test@@Base+0x7c>
   192ac:	mov	r0, r6
   192b0:	bl	18924 <raspicamcontrol_set_sharpness@@Base>
   192b4:	ldr	r2, [r4]
   192b8:	add	r2, r2, #1
   192bc:	str	r2, [r4]
   192c0:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   192c4:	cmp	r3, #1
   192c8:	beq	195c4 <raspicamcontrol_cycle_test@@Base+0x520>
   192cc:	bgt	1956c <raspicamcontrol_cycle_test@@Base+0x4c8>
   192d0:	movw	r2, #31073	; 0x7961
   192d4:	movt	r2, #65534	; 0xfffe
   192d8:	cmp	r3, r2
   192dc:	bne	19130 <raspicamcontrol_cycle_test@@Base+0x8c>
   192e0:	mov	r0, r6
   192e4:	mov	r1, #90	; 0x5a
   192e8:	bl	18f3c <raspicamcontrol_set_rotation@@Base>
   192ec:	ldr	r3, [pc, #916]	; 19688 <raspicamcontrol_cycle_test@@Base+0x5e4>
   192f0:	mov	r2, #1
   192f4:	str	r2, [r4]
   192f8:	add	r3, pc, r3
   192fc:	ldr	r2, [r3]
   19300:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   19304:	mov	r1, #100	; 0x64
   19308:	mvn	r0, #99	; 0x63
   1930c:	mov	r2, #10
   19310:	bl	179b0 <_start@@Base+0x138>
   19314:	subs	r1, r0, #0
   19318:	beq	194d8 <raspicamcontrol_cycle_test@@Base+0x434>
   1931c:	ldr	r3, [pc, #872]	; 1968c <raspicamcontrol_cycle_test@@Base+0x5e8>
   19320:	mov	r0, r6
   19324:	add	r3, pc, r3
   19328:	ldr	r1, [r3]
   1932c:	bl	18894 <raspicamcontrol_set_saturation@@Base>
   19330:	ldr	r2, [r4]
   19334:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   19338:	ldr	r0, [pc, #848]	; 19690 <raspicamcontrol_cycle_test@@Base+0x5ec>
   1933c:	movw	r3, #31073	; 0x7961
   19340:	mov	r2, #9
   19344:	movt	r3, #65534	; 0xfffe
   19348:	add	r0, pc, r0
   1934c:	str	r3, [r1]
   19350:	str	r2, [r0]
   19354:	b	19294 <raspicamcontrol_cycle_test@@Base+0x1f0>
   19358:	mov	r1, #100	; 0x64
   1935c:	mvn	r0, #99	; 0x63
   19360:	mov	r2, #10
   19364:	bl	179b0 <_start@@Base+0x138>
   19368:	subs	r1, r0, #0
   1936c:	beq	194a4 <raspicamcontrol_cycle_test@@Base+0x400>
   19370:	ldr	r3, [pc, #796]	; 19694 <raspicamcontrol_cycle_test@@Base+0x5f0>
   19374:	mov	r0, r6
   19378:	add	r3, pc, r3
   1937c:	ldr	r1, [r3]
   19380:	bl	189b4 <raspicamcontrol_set_contrast@@Base>
   19384:	ldr	r2, [r4]
   19388:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   1938c:	mov	r0, #0
   19390:	mov	r1, #100	; 0x64
   19394:	mov	r2, #10
   19398:	bl	179b0 <_start@@Base+0x138>
   1939c:	cmp	r0, #0
   193a0:	beq	194bc <raspicamcontrol_cycle_test@@Base+0x418>
   193a4:	ldr	r3, [pc, #748]	; 19698 <raspicamcontrol_cycle_test@@Base+0x5f4>
   193a8:	mov	r0, r6
   193ac:	add	r3, pc, r3
   193b0:	ldr	r1, [r3]
   193b4:	bl	18a44 <raspicamcontrol_set_brightness@@Base>
   193b8:	ldr	r2, [r4]
   193bc:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   193c0:	mov	r3, #2
   193c4:	mov	r2, #100	; 0x64
   193c8:	str	r3, [r1]
   193cc:	mov	r3, #200	; 0xc8
   193d0:	str	r2, [sp, #12]
   193d4:	str	r3, [sp, #16]
   193d8:	b	19294 <raspicamcontrol_cycle_test@@Base+0x1f0>
   193dc:	mov	r0, r6
   193e0:	bl	18e24 <raspicamcontrol_set_imageFX@@Base>
   193e4:	ldr	r3, [pc, #688]	; 1969c <raspicamcontrol_cycle_test@@Base+0x5f8>
   193e8:	add	r3, pc, r3
   193ec:	ldr	r2, [r3]
   193f0:	add	r2, r2, #1
   193f4:	str	r2, [r3]
   193f8:	b	19118 <raspicamcontrol_cycle_test@@Base+0x74>
   193fc:	ldr	r3, [pc, #668]	; 196a0 <raspicamcontrol_cycle_test@@Base+0x5fc>
   19400:	movw	r2, #271	; 0x10f
   19404:	ldr	r1, [pc, #664]	; 196a4 <raspicamcontrol_cycle_test@@Base+0x600>
   19408:	add	r3, pc, r3
   1940c:	ldr	r0, [pc, #660]	; 196a8 <raspicamcontrol_cycle_test@@Base+0x604>
   19410:	str	r3, [sp]
   19414:	add	r1, pc, r1
   19418:	ldr	r3, [pc, #652]	; 196ac <raspicamcontrol_cycle_test@@Base+0x608>
   1941c:	add	r0, pc, r0
   19420:	add	r1, r1, #124	; 0x7c
   19424:	add	r3, pc, r3
   19428:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1942c:	b	190cc <raspicamcontrol_cycle_test@@Base+0x28>
   19430:	mov	r1, #10
   19434:	mvn	r0, #9
   19438:	bl	179b0 <_start@@Base+0x138>
   1943c:	subs	r1, r0, #0
   19440:	beq	194f4 <raspicamcontrol_cycle_test@@Base+0x450>
   19444:	ldr	r3, [pc, #612]	; 196b0 <raspicamcontrol_cycle_test@@Base+0x60c>
   19448:	mov	r0, r6
   1944c:	add	r3, pc, r3
   19450:	ldr	r1, [r3]
   19454:	bl	18ba8 <raspicamcontrol_set_exposure_compensation@@Base>
   19458:	ldr	r2, [r4]
   1945c:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   19460:	mov	r0, #0
   19464:	mov	r1, #13
   19468:	mov	r2, #1
   1946c:	bl	179b0 <_start@@Base+0x138>
   19470:	cmp	r0, #0
   19474:	beq	1950c <raspicamcontrol_cycle_test@@Base+0x468>
   19478:	ldr	r2, [pc, #564]	; 196b4 <raspicamcontrol_cycle_test@@Base+0x610>
   1947c:	mov	r0, r6
   19480:	ldr	r3, [pc, #560]	; 196b8 <raspicamcontrol_cycle_test@@Base+0x614>
   19484:	add	r2, pc, r2
   19488:	add	r3, pc, r3
   1948c:	ldr	r2, [r2]
   19490:	add	r3, r3, r2, lsl #3
   19494:	ldr	r1, [r3, #744]	; 0x2e8
   19498:	bl	18bd8 <raspicamcontrol_set_exposure_mode@@Base>
   1949c:	ldr	r2, [r4]
   194a0:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   194a4:	mov	r0, r6
   194a8:	bl	189b4 <raspicamcontrol_set_contrast@@Base>
   194ac:	ldr	r2, [r4]
   194b0:	add	r2, r2, #1
   194b4:	str	r2, [r4]
   194b8:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   194bc:	mov	r0, r6
   194c0:	mov	r1, #50	; 0x32
   194c4:	bl	18a44 <raspicamcontrol_set_brightness@@Base>
   194c8:	ldr	r2, [r4]
   194cc:	add	r2, r2, #1
   194d0:	str	r2, [r4]
   194d4:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   194d8:	ldr	r3, [r4]
   194dc:	mov	r0, r6
   194e0:	add	r3, r3, #1
   194e4:	str	r3, [r4]
   194e8:	bl	18894 <raspicamcontrol_set_saturation@@Base>
   194ec:	ldr	r2, [r4]
   194f0:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   194f4:	mov	r0, r6
   194f8:	bl	18ba8 <raspicamcontrol_set_exposure_compensation@@Base>
   194fc:	ldr	r2, [r4]
   19500:	add	r2, r2, #1
   19504:	str	r2, [r4]
   19508:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   1950c:	mov	r0, r6
   19510:	mov	r1, #1
   19514:	bl	18bd8 <raspicamcontrol_set_exposure_mode@@Base>
   19518:	ldr	r2, [r4]
   1951c:	add	r2, r2, #1
   19520:	str	r2, [r4]
   19524:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   19528:	mov	r0, #0
   1952c:	mov	r1, #10
   19530:	mov	r2, #1
   19534:	bl	179b0 <_start@@Base+0x138>
   19538:	cmp	r0, #0
   1953c:	beq	19638 <raspicamcontrol_cycle_test@@Base+0x594>
   19540:	ldr	r2, [pc, #372]	; 196bc <raspicamcontrol_cycle_test@@Base+0x618>
   19544:	mov	r0, r6
   19548:	ldr	r3, [pc, #368]	; 196c0 <raspicamcontrol_cycle_test@@Base+0x61c>
   1954c:	add	r2, pc, r2
   19550:	add	r3, pc, r3
   19554:	ldr	r2, [r2]
   19558:	add	r3, r3, r2, lsl #3
   1955c:	ldr	r1, [r3, #880]	; 0x370
   19560:	bl	18cc8 <raspicamcontrol_set_awb_mode@@Base>
   19564:	ldr	r2, [r4]
   19568:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   1956c:	mov	r0, r6
   19570:	movw	r1, #270	; 0x10e
   19574:	bl	18f3c <raspicamcontrol_set_rotation@@Base>
   19578:	ldr	r3, [pc, #324]	; 196c4 <raspicamcontrol_cycle_test@@Base+0x620>
   1957c:	mov	r2, #3
   19580:	str	r2, [r4]
   19584:	add	r3, pc, r3
   19588:	ldr	r2, [r3]
   1958c:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   19590:	mov	r1, #0
   19594:	mov	r0, r6
   19598:	bl	18f3c <raspicamcontrol_set_rotation@@Base>
   1959c:	mov	r2, #0
   195a0:	mov	r0, r6
   195a4:	mov	r1, #1
   195a8:	bl	18fd4 <raspicamcontrol_set_flips@@Base>
   195ac:	ldr	r3, [pc, #276]	; 196c8 <raspicamcontrol_cycle_test@@Base+0x624>
   195b0:	mov	r2, #4
   195b4:	str	r2, [r4]
   195b8:	add	r3, pc, r3
   195bc:	ldr	r2, [r3]
   195c0:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   195c4:	mov	r0, r6
   195c8:	mov	r1, #180	; 0xb4
   195cc:	bl	18f3c <raspicamcontrol_set_rotation@@Base>
   195d0:	ldr	r3, [pc, #244]	; 196cc <raspicamcontrol_cycle_test@@Base+0x628>
   195d4:	mov	r2, #2
   195d8:	str	r2, [r4]
   195dc:	add	r3, pc, r3
   195e0:	ldr	r2, [r3]
   195e4:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   195e8:	mov	r2, #1
   195ec:	mov	r0, r6
   195f0:	mov	r1, #0
   195f4:	bl	18fd4 <raspicamcontrol_set_flips@@Base>
   195f8:	ldr	r3, [pc, #208]	; 196d0 <raspicamcontrol_cycle_test@@Base+0x62c>
   195fc:	mov	r2, #5
   19600:	str	r2, [r4]
   19604:	add	r3, pc, r3
   19608:	ldr	r2, [r3]
   1960c:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   19610:	mov	r1, #1
   19614:	mov	r0, r6
   19618:	mov	r2, r1
   1961c:	bl	18fd4 <raspicamcontrol_set_flips@@Base>
   19620:	ldr	r3, [pc, #172]	; 196d4 <raspicamcontrol_cycle_test@@Base+0x630>
   19624:	mov	r2, #6
   19628:	str	r2, [r4]
   1962c:	add	r3, pc, r3
   19630:	ldr	r2, [r3]
   19634:	b	19128 <raspicamcontrol_cycle_test@@Base+0x84>
   19638:	mov	r0, r6
   1963c:	mov	r1, #1
   19640:	bl	18cc8 <raspicamcontrol_set_awb_mode@@Base>
   19644:	ldr	r2, [r4]
   19648:	add	r2, r2, #1
   1964c:	str	r2, [r4]
   19650:	b	19110 <raspicamcontrol_cycle_test@@Base+0x6c>
   19654:	bl	14804 <__stack_chk_fail@plt>
   19658:	andeq	r0, r2, ip, asr #30
   1965c:	andeq	r0, r0, r4, lsr r3
   19660:	andeq	r1, r2, r4, asr #30
   19664:			; <UNDEFINED> instruction: 0x00021ebc
   19668:	ldrdeq	r1, [r2], -r8
   1966c:	muleq	r2, ip, r1
   19670:	muleq	r2, ip, r1
   19674:	andeq	r1, r2, r8, lsr lr
   19678:	andeq	r1, r2, r4, ror r1
   1967c:	andeq	r1, r2, r8, ror #27
   19680:	andeq	r1, r2, ip, lsl #2
   19684:	andeq	r1, r2, r0, ror sp
   19688:	andeq	r1, r2, ip, lsl sp
   1968c:	andeq	r1, r2, r8, lsr r0
   19690:	andeq	r1, r2, ip, asr #25
   19694:	andeq	r0, r2, r4, ror #31
   19698:			; <UNDEFINED> instruction: 0x00020fb0
   1969c:	andeq	r1, r2, ip, lsr #24
   196a0:	strdeq	r9, [r0], -r4
   196a4:	andeq	r9, r0, r4, lsl #19
   196a8:	andeq	r9, r0, r8, asr sp
   196ac:	strdeq	r9, [r0], -r4
   196b0:	andeq	r0, r2, r0, lsl pc
   196b4:	ldrdeq	r0, [r2], -r8
   196b8:	ldrdeq	r0, [r2], -r8
   196bc:	andeq	r0, r2, r0, lsl lr
   196c0:	andeq	r0, r2, r0, lsl lr
   196c4:	muleq	r2, r0, sl
   196c8:	andeq	r1, r2, ip, asr sl
   196cc:	andeq	r1, r2, r8, lsr sl
   196d0:	andeq	r1, r2, r0, lsl sl
   196d4:	andeq	r1, r2, r8, ror #19

000196d8 <raspicamcontrol_set_ROI@@Base>:
   196d8:	push	{r4, lr}
   196dc:	vldr	d7, [pc, #156]	; 19780 <raspicamcontrol_set_ROI@@Base+0xa8>
   196e0:	sub	sp, sp, #64	; 0x40
   196e4:	vstr	d1, [sp, #8]
   196e8:	vmul.f64	d6, d0, d7
   196ec:	vstr	d2, [sp, #16]
   196f0:	ldr	r2, [pc, #144]	; 19788 <raspicamcontrol_set_ROI@@Base+0xb0>
   196f4:	vstr	d0, [sp]
   196f8:	ldr	lr, [pc, #140]	; 1978c <raspicamcontrol_set_ROI@@Base+0xb4>
   196fc:	vstr	d3, [sp, #24]
   19700:	add	r2, pc, r2
   19704:	mov	r3, #37	; 0x25
   19708:	movt	r3, #1
   1970c:	add	r1, sp, #36	; 0x24
   19710:	ldr	r4, [r2, lr]
   19714:	mov	ip, #24
   19718:	str	r3, [sp, #36]	; 0x24
   1971c:	ldr	r0, [r0, #16]
   19720:	ldr	r3, [r4]
   19724:	str	ip, [sp, #40]	; 0x28
   19728:	str	r3, [sp, #60]	; 0x3c
   1972c:	vmul.f64	d1, d1, d7
   19730:	vmul.f64	d2, d2, d7
   19734:	vmul.f64	d7, d3, d7
   19738:	vcvt.s32.f64	s12, d6
   1973c:	vcvt.s32.f64	s2, d1
   19740:	vstr	s12, [sp, #44]	; 0x2c
   19744:	vcvt.s32.f64	s4, d2
   19748:	vstr	s2, [sp, #48]	; 0x30
   1974c:	vcvt.s32.f64	s14, d7
   19750:	vstr	s4, [sp, #52]	; 0x34
   19754:	vstr	s14, [sp, #56]	; 0x38
   19758:	bl	142ac <mmal_port_parameter_set@plt>
   1975c:	bl	1b3c4 <mmal_status_to_int@@Base>
   19760:	ldr	r2, [sp, #60]	; 0x3c
   19764:	ldr	r3, [r4]
   19768:	cmp	r2, r3
   1976c:	bne	19778 <raspicamcontrol_set_ROI@@Base+0xa0>
   19770:	add	sp, sp, #64	; 0x40
   19774:	pop	{r4, pc}
   19778:	bl	14804 <__stack_chk_fail@plt>
   1977c:	nop	{0}
   19780:	andeq	r0, r0, r0
   19784:	rscsmi	r0, r0, r0
   19788:	strdeq	r0, [r2], -r8
   1978c:	andeq	r0, r0, r4, lsr r3

00019790 <raspicamcontrol_zoom_in_zoom_out@@Base>:
   19790:	push	{r4, r5, r6, r7, r8, r9, lr}
   19794:	sub	sp, sp, #44	; 0x2c
   19798:	ldr	r4, [pc, #488]	; 19988 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1f8>
   1979c:	add	r6, sp, #12
   197a0:	ldr	r3, [pc, #484]	; 1998c <raspicamcontrol_zoom_in_zoom_out@@Base+0x1fc>
   197a4:	mov	r8, r2
   197a8:	add	r4, pc, r4
   197ac:	mov	r2, #24
   197b0:	mov	r7, r0
   197b4:	mov	r9, r1
   197b8:	ldr	r5, [r4, r3]
   197bc:	mov	r1, r6
   197c0:	str	r2, [sp, #16]
   197c4:	mov	r3, #37	; 0x25
   197c8:	ldr	r0, [r0, #16]
   197cc:	movt	r3, #1
   197d0:	ldr	r2, [r5]
   197d4:	str	r3, [sp, #12]
   197d8:	str	r2, [sp, #36]	; 0x24
   197dc:	bl	14450 <mmal_port_parameter_get@plt>
   197e0:	cmp	r0, #0
   197e4:	beq	1982c <raspicamcontrol_zoom_in_zoom_out@@Base+0x9c>
   197e8:	ldr	r3, [pc, #416]	; 19990 <raspicamcontrol_zoom_in_zoom_out@@Base+0x200>
   197ec:	ldr	r0, [r4, r3]
   197f0:	ldr	r3, [r0]
   197f4:	cmp	r3, #1
   197f8:	movls	r0, #0
   197fc:	bls	19814 <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   19800:	ldr	r2, [pc, #396]	; 19994 <raspicamcontrol_zoom_in_zoom_out@@Base+0x204>
   19804:	mov	r1, #2
   19808:	add	r2, pc, r2
   1980c:	bl	1493c <vcos_log_impl@plt>
   19810:	mov	r0, #0
   19814:	ldr	r2, [sp, #36]	; 0x24
   19818:	ldr	r3, [r5]
   1981c:	cmp	r2, r3
   19820:	bne	19978 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1e8>
   19824:	add	sp, sp, #44	; 0x2c
   19828:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1982c:	cmp	r9, #0
   19830:	bne	19874 <raspicamcontrol_zoom_in_zoom_out@@Base+0xe4>
   19834:	ldr	r3, [sp, #28]
   19838:	cmp	r3, #16384	; 0x4000
   1983c:	bcc	198e0 <raspicamcontrol_zoom_in_zoom_out@@Base+0x150>
   19840:	sub	r0, r3, #6528	; 0x1980
   19844:	ldr	r3, [sp, #32]
   19848:	sub	r0, r0, #25
   1984c:	str	r0, [sp, #28]
   19850:	rsb	r0, r0, #65536	; 0x10000
   19854:	sub	r3, r3, #6528	; 0x1980
   19858:	sub	r3, r3, #25
   1985c:	str	r3, [sp, #32]
   19860:	add	r0, r0, r0, lsr #31
   19864:	asr	r0, r0, #1
   19868:	str	r0, [sp, #20]
   1986c:	str	r0, [sp, #24]
   19870:	b	19898 <raspicamcontrol_zoom_in_zoom_out@@Base+0x108>
   19874:	cmp	r9, #1
   19878:	beq	198f4 <raspicamcontrol_zoom_in_zoom_out@@Base+0x164>
   1987c:	cmp	r9, #2
   19880:	bne	19964 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1d4>
   19884:	mov	r3, #65536	; 0x10000
   19888:	str	r0, [sp, #20]
   1988c:	str	r0, [sp, #24]
   19890:	str	r3, [sp, #28]
   19894:	str	r3, [sp, #32]
   19898:	mov	r1, r6
   1989c:	ldr	r0, [r7, #16]
   198a0:	bl	142ac <mmal_port_parameter_set@plt>
   198a4:	bl	1b3c4 <mmal_status_to_int@@Base>
   198a8:	cmp	r0, #0
   198ac:	bne	19928 <raspicamcontrol_zoom_in_zoom_out@@Base+0x198>
   198b0:	vldr	s9, [sp, #20]
   198b4:	vcvt.f64.s32	d6, s9
   198b8:	vldr	s9, [sp, #28]
   198bc:	vldr	d7, [pc, #188]	; 19980 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1f0>
   198c0:	vcvt.f64.s32	d5, s9
   198c4:	vmul.f64	d6, d6, d7
   198c8:	vmul.f64	d7, d5, d7
   198cc:	vstr	d6, [r8, #8]
   198d0:	vstr	d6, [r8]
   198d4:	vstr	d7, [r8, #24]
   198d8:	vstr	d7, [r8, #16]
   198dc:	b	19814 <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   198e0:	movw	r3, #9830	; 0x2666
   198e4:	movw	r0, #27853	; 0x6ccd
   198e8:	str	r3, [sp, #28]
   198ec:	str	r3, [sp, #32]
   198f0:	b	19868 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   198f4:	ldr	r2, [sp, #28]
   198f8:	add	r3, r2, #6528	; 0x1980
   198fc:	add	r3, r3, #25
   19900:	cmp	r2, r3
   19904:	strls	r3, [sp, #28]
   19908:	rsbls	r0, r3, #65536	; 0x10000
   1990c:	strls	r3, [sp, #32]
   19910:	movhi	r3, #65536	; 0x10000
   19914:	strhi	r3, [sp, #28]
   19918:	addls	r0, r0, r0, lsr #31
   1991c:	strhi	r3, [sp, #32]
   19920:	asrls	r0, r0, #1
   19924:	b	19868 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   19928:	ldr	r3, [pc, #96]	; 19990 <raspicamcontrol_zoom_in_zoom_out@@Base+0x200>
   1992c:	ldr	r0, [r4, r3]
   19930:	ldr	r3, [r0]
   19934:	cmp	r3, #1
   19938:	movls	r0, #1
   1993c:	bls	19814 <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   19940:	ldr	ip, [sp, #28]
   19944:	mov	r1, #2
   19948:	ldr	r2, [pc, #72]	; 19998 <raspicamcontrol_zoom_in_zoom_out@@Base+0x208>
   1994c:	ldr	r3, [sp, #20]
   19950:	add	r2, pc, r2
   19954:	str	ip, [sp]
   19958:	bl	1493c <vcos_log_impl@plt>
   1995c:	mov	r0, #1
   19960:	b	19814 <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   19964:	ldr	r0, [sp, #28]
   19968:	rsb	r0, r0, #65536	; 0x10000
   1996c:	add	r0, r0, r0, lsr #31
   19970:	asr	r0, r0, #1
   19974:	b	19868 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   19978:	bl	14804 <__stack_chk_fail@plt>
   1997c:	nop	{0}
   19980:	andeq	r0, r0, r0
   19984:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   19988:	andeq	r0, r2, r0, asr r8
   1998c:	andeq	r0, r0, r4, lsr r3
   19990:	andeq	r0, r0, r0, asr #6
   19994:	andeq	r9, r0, r8, asr #20
   19998:	andeq	r9, r0, r4, asr #18

0001999c <raspicamcontrol_set_shutter_speed@@Base>:
   1999c:	cmp	r0, #0
   199a0:	push	{r3, lr}
   199a4:	beq	199c4 <raspicamcontrol_set_shutter_speed@@Base+0x28>
   199a8:	mov	r2, r1
   199ac:	ldr	r0, [r0, #16]
   199b0:	mov	r1, #67	; 0x43
   199b4:	movt	r1, #1
   199b8:	bl	1424c <mmal_port_parameter_set_uint32@plt>
   199bc:	pop	{r3, lr}
   199c0:	b	1b3c4 <mmal_status_to_int@@Base>
   199c4:	mov	r0, #1
   199c8:	pop	{r3, pc}

000199cc <raspicamcontrol_set_DRC@@Base>:
   199cc:	ldr	r2, [pc, #104]	; 19a3c <raspicamcontrol_set_DRC@@Base+0x70>
   199d0:	mov	r3, #42	; 0x2a
   199d4:	push	{r4, lr}
   199d8:	add	r2, pc, r2
   199dc:	ldr	r4, [pc, #92]	; 19a40 <raspicamcontrol_set_DRC@@Base+0x74>
   199e0:	sub	sp, sp, #16
   199e4:	movt	r3, #1
   199e8:	cmp	r0, #0
   199ec:	mov	ip, #12
   199f0:	ldr	r4, [r2, r4]
   199f4:	moveq	r0, #1
   199f8:	str	r3, [sp]
   199fc:	str	r1, [sp, #8]
   19a00:	ldr	r3, [r4]
   19a04:	str	ip, [sp, #4]
   19a08:	str	r3, [sp, #12]
   19a0c:	beq	19a20 <raspicamcontrol_set_DRC@@Base+0x54>
   19a10:	mov	r1, sp
   19a14:	ldr	r0, [r0, #16]
   19a18:	bl	142ac <mmal_port_parameter_set@plt>
   19a1c:	bl	1b3c4 <mmal_status_to_int@@Base>
   19a20:	ldr	r2, [sp, #12]
   19a24:	ldr	r3, [r4]
   19a28:	cmp	r2, r3
   19a2c:	bne	19a38 <raspicamcontrol_set_DRC@@Base+0x6c>
   19a30:	add	sp, sp, #16
   19a34:	pop	{r4, pc}
   19a38:	bl	14804 <__stack_chk_fail@plt>
   19a3c:	andeq	r0, r2, r0, lsr #12
   19a40:	andeq	r0, r0, r4, lsr r3

00019a44 <raspicamcontrol_set_stats_pass@@Base>:
   19a44:	cmp	r0, #0
   19a48:	push	{r3, lr}
   19a4c:	beq	19a6c <raspicamcontrol_set_stats_pass@@Base+0x28>
   19a50:	mov	r2, r1
   19a54:	ldr	r0, [r0, #16]
   19a58:	mov	r1, #54	; 0x36
   19a5c:	movt	r1, #1
   19a60:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   19a64:	pop	{r3, lr}
   19a68:	b	1b3c4 <mmal_status_to_int@@Base>
   19a6c:	mov	r0, #1
   19a70:	pop	{r3, pc}

00019a74 <raspicamcontrol_set_annotate@@Base>:
   19a74:	ldr	ip, [pc, #700]	; 19d38 <raspicamcontrol_set_annotate@@Base+0x2c4>
   19a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a7c:	add	ip, pc, ip
   19a80:	ldr	lr, [pc, #692]	; 19d3c <raspicamcontrol_set_annotate@@Base+0x2c8>
   19a84:	sub	sp, sp, #636	; 0x27c
   19a88:	add	r4, sp, #48	; 0x30
   19a8c:	mov	r7, r3
   19a90:	mov	r9, #324	; 0x144
   19a94:	mov	sl, r1
   19a98:	ldr	r5, [ip, lr]
   19a9c:	mov	r6, r0
   19aa0:	mov	r8, r2
   19aa4:	mov	r0, r4
   19aa8:	mov	r2, r9
   19aac:	mov	r1, #0
   19ab0:	ldr	r3, [r5]
   19ab4:	str	r3, [sp, #628]	; 0x274
   19ab8:	bl	14414 <memset@plt>
   19abc:	cmp	sl, #0
   19ac0:	mov	r3, #73	; 0x49
   19ac4:	str	r9, [sp, #52]	; 0x34
   19ac8:	movt	r3, #1
   19acc:	str	r3, [sp, #48]	; 0x30
   19ad0:	bne	19afc <raspicamcontrol_set_annotate@@Base+0x88>
   19ad4:	mov	r1, r4
   19ad8:	ldr	r0, [r6, #16]
   19adc:	bl	142ac <mmal_port_parameter_set@plt>
   19ae0:	bl	1b3c4 <mmal_status_to_int@@Base>
   19ae4:	ldr	r2, [sp, #628]	; 0x274
   19ae8:	ldr	r3, [r5]
   19aec:	cmp	r2, r3
   19af0:	bne	19d34 <raspicamcontrol_set_annotate@@Base+0x2c0>
   19af4:	add	sp, sp, #636	; 0x27c
   19af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19afc:	mov	r0, #0
   19b00:	add	r9, sp, #4
   19b04:	bl	147c8 <time@plt>
   19b08:	add	r3, sp, #632	; 0x278
   19b0c:	mov	fp, #1
   19b10:	str	r0, [r3, #-632]!	; 0xfffffd88
   19b14:	mov	r0, sp
   19b18:	bl	14270 <localtime@plt>
   19b1c:	mov	ip, r9
   19b20:	tst	sl, #3
   19b24:	mov	lr, r0
   19b28:	ldm	lr!, {r0, r1, r2, r3}
   19b2c:	str	fp, [sp, #56]	; 0x38
   19b30:	stmia	ip!, {r0, r1, r2, r3}
   19b34:	ldm	lr!, {r0, r1, r2, r3}
   19b38:	stmia	ip!, {r0, r1, r2, r3}
   19b3c:	ldm	lr, {r0, r1, r2}
   19b40:	stm	ip, {r0, r1, r2}
   19b44:	beq	19c64 <raspicamcontrol_set_annotate@@Base+0x1f0>
   19b48:	tst	sl, #12
   19b4c:	beq	19c4c <raspicamcontrol_set_annotate@@Base+0x1d8>
   19b50:	mov	r0, r8
   19b54:	mov	r1, #37	; 0x25
   19b58:	bl	14390 <strchr@plt>
   19b5c:	cmp	r0, #0
   19b60:	beq	19c4c <raspicamcontrol_set_annotate@@Base+0x1d8>
   19b64:	mov	r3, r9
   19b68:	mov	r2, r8
   19b6c:	add	r0, sp, #104	; 0x68
   19b70:	mov	r1, #256	; 0x100
   19b74:	bl	148b8 <strftime@plt>
   19b78:	mov	r3, #0
   19b7c:	strb	r3, [sp, #359]	; 0x167
   19b80:	tst	sl, #16
   19b84:	ldr	ip, [sp, #672]	; 0x2a0
   19b88:	ldr	r1, [sp, #680]	; 0x2a8
   19b8c:	movne	r3, #1
   19b90:	strne	r3, [sp, #60]	; 0x3c
   19b94:	tst	sl, #64	; 0x40
   19b98:	strb	r7, [sp, #103]	; 0x67
   19b9c:	str	r1, [sp, #360]	; 0x168
   19ba0:	movne	r3, #1
   19ba4:	strne	r3, [sp, #64]	; 0x40
   19ba8:	tst	sl, #128	; 0x80
   19bac:	movne	r3, #1
   19bb0:	strne	r3, [sp, #68]	; 0x44
   19bb4:	tst	sl, #32
   19bb8:	movne	r3, #1
   19bbc:	strne	r3, [sp, #72]	; 0x48
   19bc0:	tst	sl, #256	; 0x100
   19bc4:	movne	r3, #1
   19bc8:	strne	r3, [sp, #76]	; 0x4c
   19bcc:	tst	sl, #512	; 0x200
   19bd0:	movne	r3, #1
   19bd4:	strne	r3, [sp, #80]	; 0x50
   19bd8:	tst	sl, #1024	; 0x400
   19bdc:	movne	r3, #1
   19be0:	strne	r3, [sp, #84]	; 0x54
   19be4:	cmn	ip, #1
   19be8:	strbne	ip, [sp, #100]	; 0x64
   19bec:	asrne	r3, ip, #8
   19bf0:	strbne	r3, [sp, #101]	; 0x65
   19bf4:	asrne	r3, ip, #16
   19bf8:	ldr	ip, [sp, #676]	; 0x2a4
   19bfc:	movne	r2, #1
   19c00:	moveq	r3, #0
   19c04:	strbne	r3, [sp, #102]	; 0x66
   19c08:	strne	r2, [sp, #96]	; 0x60
   19c0c:	streq	r3, [sp, #96]	; 0x60
   19c10:	cmn	ip, #1
   19c14:	asrne	r3, ip, #8
   19c18:	strbne	r3, [sp, #93]	; 0x5d
   19c1c:	movne	r2, #1
   19c20:	asrne	r3, ip, #16
   19c24:	moveq	r3, #0
   19c28:	strne	r2, [sp, #88]	; 0x58
   19c2c:	strbne	r3, [sp, #94]	; 0x5e
   19c30:	streq	r3, [sp, #88]	; 0x58
   19c34:	ldr	r2, [sp, #684]	; 0x2ac
   19c38:	ldr	r3, [sp, #688]	; 0x2b0
   19c3c:	strbne	ip, [sp, #92]	; 0x5c
   19c40:	str	r2, [sp, #364]	; 0x16c
   19c44:	str	r3, [sp, #368]	; 0x170
   19c48:	b	19ad4 <raspicamcontrol_set_annotate@@Base+0x60>
   19c4c:	mov	r1, r8
   19c50:	add	r0, sp, #104	; 0x68
   19c54:	mov	r2, #256	; 0x100
   19c58:	bl	14354 <strncpy@plt>
   19c5c:	mov	r3, #0
   19c60:	strb	r3, [sp, #359]	; 0x167
   19c64:	tst	sl, #8
   19c68:	beq	19cb4 <raspicamcontrol_set_annotate@@Base+0x240>
   19c6c:	ldrb	r3, [sp, #104]	; 0x68
   19c70:	add	r8, sp, #372	; 0x174
   19c74:	mov	r1, #32
   19c78:	cmp	r3, #0
   19c7c:	bne	19d1c <raspicamcontrol_set_annotate@@Base+0x2a8>
   19c80:	ldr	r2, [pc, #184]	; 19d40 <raspicamcontrol_set_annotate@@Base+0x2cc>
   19c84:	mov	r3, r9
   19c88:	mov	r0, r8
   19c8c:	add	r2, pc, r2
   19c90:	bl	148b8 <strftime@plt>
   19c94:	add	fp, sp, #104	; 0x68
   19c98:	mov	r0, fp
   19c9c:	bl	1463c <strlen@plt>
   19ca0:	mov	r1, r8
   19ca4:	mov	r3, #256	; 0x100
   19ca8:	rsb	r2, r0, #255	; 0xff
   19cac:	mov	r0, fp
   19cb0:	bl	144d4 <__strncat_chk@plt>
   19cb4:	tst	sl, #4
   19cb8:	beq	19b80 <raspicamcontrol_set_annotate@@Base+0x10c>
   19cbc:	ldrb	r3, [sp, #104]	; 0x68
   19cc0:	add	r8, sp, #372	; 0x174
   19cc4:	mov	r1, #32
   19cc8:	cmp	r3, #0
   19ccc:	mov	r3, r9
   19cd0:	bne	19d08 <raspicamcontrol_set_annotate@@Base+0x294>
   19cd4:	ldr	r2, [pc, #104]	; 19d44 <raspicamcontrol_set_annotate@@Base+0x2d0>
   19cd8:	mov	r0, r8
   19cdc:	add	r2, pc, r2
   19ce0:	bl	148b8 <strftime@plt>
   19ce4:	add	r9, sp, #104	; 0x68
   19ce8:	mov	r0, r9
   19cec:	bl	1463c <strlen@plt>
   19cf0:	mov	r1, r8
   19cf4:	mov	r3, #256	; 0x100
   19cf8:	rsb	r2, r0, #255	; 0xff
   19cfc:	mov	r0, r9
   19d00:	bl	144d4 <__strncat_chk@plt>
   19d04:	b	19b80 <raspicamcontrol_set_annotate@@Base+0x10c>
   19d08:	ldr	r2, [pc, #56]	; 19d48 <raspicamcontrol_set_annotate@@Base+0x2d4>
   19d0c:	mov	r0, r8
   19d10:	add	r2, pc, r2
   19d14:	bl	148b8 <strftime@plt>
   19d18:	b	19ce4 <raspicamcontrol_set_annotate@@Base+0x270>
   19d1c:	ldr	r2, [pc, #40]	; 19d4c <raspicamcontrol_set_annotate@@Base+0x2d8>
   19d20:	mov	r3, r9
   19d24:	mov	r0, r8
   19d28:	add	r2, pc, r2
   19d2c:	bl	148b8 <strftime@plt>
   19d30:	b	19c94 <raspicamcontrol_set_annotate@@Base+0x220>
   19d34:	bl	14804 <__stack_chk_fail@plt>
   19d38:	andeq	r0, r2, ip, ror r5
   19d3c:	andeq	r0, r0, r4, lsr r3
   19d40:	andeq	r9, r0, r8, lsr r6
   19d44:	strdeq	r9, [r0], -r0
   19d48:			; <UNDEFINED> instruction: 0x000095b8
   19d4c:	muleq	r0, r8, r5

00019d50 <raspicamcontrol_set_stereo_mode@@Base>:
   19d50:	push	{r4, r5, r6, r7, r8, r9, lr}
   19d54:	mov	r4, r1
   19d58:	ldr	lr, [pc, #128]	; 19de0 <raspicamcontrol_set_stereo_mode@@Base+0x90>
   19d5c:	mov	r8, r0
   19d60:	ldr	ip, [pc, #124]	; 19de4 <raspicamcontrol_set_stereo_mode@@Base+0x94>
   19d64:	sub	sp, sp, #28
   19d68:	add	lr, pc, lr
   19d6c:	ldr	r5, [pc, #116]	; 19de8 <raspicamcontrol_set_stereo_mode@@Base+0x98>
   19d70:	add	lr, lr, #152	; 0x98
   19d74:	ldr	r7, [r1, #8]
   19d78:	add	ip, pc, ip
   19d7c:	ldm	lr!, {r0, r1, r2, r3}
   19d80:	cmp	r7, #0
   19d84:	ldr	r5, [ip, r5]
   19d88:	mov	ip, sp
   19d8c:	stmia	ip!, {r0, r1, r2, r3}
   19d90:	mov	r1, sp
   19d94:	ldrne	r2, [r4, #12]
   19d98:	mov	r0, r8
   19d9c:	ldrne	r3, [r4, #16]
   19da0:	ldr	lr, [lr]
   19da4:	ldr	r9, [r5]
   19da8:	strne	r2, [sp, #12]
   19dac:	str	lr, [ip]
   19db0:	strne	r7, [sp, #8]
   19db4:	strne	r3, [sp, #16]
   19db8:	str	r9, [sp, #20]
   19dbc:	bl	142ac <mmal_port_parameter_set@plt>
   19dc0:	bl	1b3c4 <mmal_status_to_int@@Base>
   19dc4:	ldr	r2, [sp, #20]
   19dc8:	ldr	r3, [r5]
   19dcc:	cmp	r2, r3
   19dd0:	bne	19ddc <raspicamcontrol_set_stereo_mode@@Base+0x8c>
   19dd4:	add	sp, sp, #28
   19dd8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19ddc:	bl	14804 <__stack_chk_fail@plt>
   19de0:	andeq	r9, r0, r0, lsr r0
   19de4:	andeq	r0, r2, r0, lsl #5
   19de8:	andeq	r0, r0, r4, lsr r3

00019dec <raspicamcontrol_set_gains@@Base>:
   19dec:	push	{r4, r5, lr}
   19df0:	vpush	{d8}
   19df4:	subs	r5, r0, #0
   19df8:	sub	sp, sp, #12
   19dfc:	mov	r3, #65536	; 0x10000
   19e00:	vmov.f32	s17, s1
   19e04:	str	r3, [sp, #4]
   19e08:	beq	19e70 <raspicamcontrol_set_gains@@Base+0x84>
   19e0c:	vldr	s16, [pc, #108]	; 19e80 <raspicamcontrol_set_gains@@Base+0x94>
   19e10:	add	r4, sp, #8
   19e14:	mov	r1, #89	; 0x59
   19e18:	ldr	r0, [r5, #16]
   19e1c:	vmul.f32	s0, s0, s16
   19e20:	movt	r1, #1
   19e24:	vcvt.u32.f32	s0, s0
   19e28:	vmov	r3, s0
   19e2c:	str	r3, [r4, #-8]!
   19e30:	ldm	r4, {r2, r3}
   19e34:	bl	14288 <mmal_port_parameter_set_rational@plt>
   19e38:	cmp	r0, #0
   19e3c:	bne	19e60 <raspicamcontrol_set_gains@@Base+0x74>
   19e40:	vmul.f32	s16, s17, s16
   19e44:	mov	r1, #90	; 0x5a
   19e48:	ldr	r0, [r5, #16]
   19e4c:	movt	r1, #1
   19e50:	vcvt.u32.f32	s16, s16
   19e54:	vstr	s16, [sp]
   19e58:	ldm	r4, {r2, r3}
   19e5c:	bl	14288 <mmal_port_parameter_set_rational@plt>
   19e60:	add	sp, sp, #12
   19e64:	vpop	{d8}
   19e68:	pop	{r4, r5, lr}
   19e6c:	b	1b3c4 <mmal_status_to_int@@Base>
   19e70:	mov	r0, #1
   19e74:	add	sp, sp, #12
   19e78:	vpop	{d8}
   19e7c:	pop	{r4, r5, pc}
   19e80:	strmi	r0, [r0, r0]

00019e84 <raspicamcontrol_set_all_parameters@@Base>:
   19e84:	push	{r4, r5, r6, r7, r8, lr}
   19e88:	sub	sp, sp, #48	; 0x30
   19e8c:	ldr	r6, [pc, #576]	; 1a0d4 <raspicamcontrol_set_all_parameters@@Base+0x250>
   19e90:	mov	r4, r1
   19e94:	ldr	r3, [pc, #572]	; 1a0d8 <raspicamcontrol_set_all_parameters@@Base+0x254>
   19e98:	mov	r5, r0
   19e9c:	add	r6, pc, r6
   19ea0:	ldr	r1, [r1, #12]
   19ea4:	ldr	r7, [r6, r3]
   19ea8:	ldr	r3, [r7]
   19eac:	str	r3, [sp, #44]	; 0x2c
   19eb0:	bl	18894 <raspicamcontrol_set_saturation@@Base>
   19eb4:	ldr	r1, [r4]
   19eb8:	mov	r8, r0
   19ebc:	mov	r0, r5
   19ec0:	bl	18924 <raspicamcontrol_set_sharpness@@Base>
   19ec4:	ldr	r1, [r4, #4]
   19ec8:	add	r8, r8, r0
   19ecc:	mov	r0, r5
   19ed0:	bl	189b4 <raspicamcontrol_set_contrast@@Base>
   19ed4:	ldr	r1, [r4, #8]
   19ed8:	add	r8, r8, r0
   19edc:	mov	r0, r5
   19ee0:	bl	18a44 <raspicamcontrol_set_brightness@@Base>
   19ee4:	ldr	r1, [r4, #16]
   19ee8:	add	r8, r8, r0
   19eec:	mov	r0, r5
   19ef0:	bl	18ad0 <raspicamcontrol_set_ISO@@Base>
   19ef4:	ldr	r1, [r4, #20]
   19ef8:	add	r8, r8, r0
   19efc:	mov	r0, r5
   19f00:	bl	18b78 <raspicamcontrol_set_video_stabilisation@@Base>
   19f04:	ldr	r1, [r4, #24]
   19f08:	add	r8, r8, r0
   19f0c:	mov	r0, r5
   19f10:	bl	18ba8 <raspicamcontrol_set_exposure_compensation@@Base>
   19f14:	ldr	r1, [r4, #28]
   19f18:	add	r8, r8, r0
   19f1c:	mov	r0, r5
   19f20:	bl	18bd8 <raspicamcontrol_set_exposure_mode@@Base>
   19f24:	ldr	r1, [r4, #96]	; 0x60
   19f28:	add	r8, r8, r0
   19f2c:	mov	r0, r5
   19f30:	bl	18c50 <raspicamcontrol_set_flicker_avoid_mode@@Base>
   19f34:	ldr	r1, [r4, #32]
   19f38:	add	r8, r8, r0
   19f3c:	mov	r0, r5
   19f40:	bl	18b00 <raspicamcontrol_set_metering_mode@@Base>
   19f44:	ldr	r1, [r4, #36]	; 0x24
   19f48:	add	r8, r8, r0
   19f4c:	mov	r0, r5
   19f50:	bl	18cc8 <raspicamcontrol_set_awb_mode@@Base>
   19f54:	vldr	s0, [r4, #148]	; 0x94
   19f58:	vldr	s1, [r4, #152]	; 0x98
   19f5c:	add	r8, r8, r0
   19f60:	mov	r0, r5
   19f64:	bl	18d40 <raspicamcontrol_set_awb_gains@@Base>
   19f68:	ldr	r1, [r4, #40]	; 0x28
   19f6c:	add	r8, r8, r0
   19f70:	mov	r0, r5
   19f74:	bl	18e24 <raspicamcontrol_set_imageFX@@Base>
   19f78:	add	r1, r4, #84	; 0x54
   19f7c:	add	r8, r8, r0
   19f80:	mov	r0, r5
   19f84:	bl	18e9c <raspicamcontrol_set_colourFX@@Base>
   19f88:	ldr	r1, [r4, #100]	; 0x64
   19f8c:	add	r8, r8, r0
   19f90:	mov	r0, r5
   19f94:	bl	18f3c <raspicamcontrol_set_rotation@@Base>
   19f98:	ldr	r2, [r4, #108]	; 0x6c
   19f9c:	ldr	r1, [r4, #104]	; 0x68
   19fa0:	add	r8, r8, r0
   19fa4:	mov	r0, r5
   19fa8:	bl	18fd4 <raspicamcontrol_set_flips@@Base>
   19fac:	vldr	d0, [r4, #112]	; 0x70
   19fb0:	vldr	d1, [r4, #120]	; 0x78
   19fb4:	vldr	d2, [r4, #128]	; 0x80
   19fb8:	vldr	d3, [r4, #136]	; 0x88
   19fbc:	add	r8, r8, r0
   19fc0:	mov	r0, r5
   19fc4:	bl	196d8 <raspicamcontrol_set_ROI@@Base>
   19fc8:	ldr	r1, [r4, #144]	; 0x90
   19fcc:	add	r8, r8, r0
   19fd0:	mov	r0, r5
   19fd4:	bl	1999c <raspicamcontrol_set_shutter_speed@@Base>
   19fd8:	ldr	r1, [r4, #156]	; 0x9c
   19fdc:	add	r8, r8, r0
   19fe0:	mov	r0, r5
   19fe4:	bl	199cc <raspicamcontrol_set_DRC@@Base>
   19fe8:	ldr	r1, [r4, #160]	; 0xa0
   19fec:	add	r8, r8, r0
   19ff0:	mov	r0, r5
   19ff4:	bl	19a44 <raspicamcontrol_set_stats_pass@@Base>
   19ff8:	ldr	ip, [r4, #428]	; 0x1ac
   19ffc:	ldr	r3, [r4, #424]	; 0x1a8
   1a000:	add	r2, r4, #168	; 0xa8
   1a004:	ldr	r1, [r4, #164]	; 0xa4
   1a008:	str	ip, [sp]
   1a00c:	ldr	ip, [r4, #432]	; 0x1b0
   1a010:	str	ip, [sp, #4]
   1a014:	ldr	ip, [r4, #436]	; 0x1b4
   1a018:	str	ip, [sp, #8]
   1a01c:	ldr	ip, [r4, #440]	; 0x1b8
   1a020:	str	ip, [sp, #12]
   1a024:	ldr	ip, [r4, #444]	; 0x1bc
   1a028:	str	ip, [sp, #16]
   1a02c:	add	r8, r8, r0
   1a030:	mov	r0, r5
   1a034:	bl	19a74 <raspicamcontrol_set_annotate@@Base>
   1a038:	vldr	s0, [r4, #468]	; 0x1d4
   1a03c:	vldr	s1, [r4, #472]	; 0x1d8
   1a040:	add	r8, r8, r0
   1a044:	mov	r0, r5
   1a048:	bl	19dec <raspicamcontrol_set_gains@@Base>
   1a04c:	ldr	r3, [r4, #476]	; 0x1dc
   1a050:	cmp	r3, #0
   1a054:	add	r4, r8, r0
   1a058:	bne	1a078 <raspicamcontrol_set_all_parameters@@Base+0x1f4>
   1a05c:	ldr	r2, [sp, #44]	; 0x2c
   1a060:	mov	r0, r4
   1a064:	ldr	r3, [r7]
   1a068:	cmp	r2, r3
   1a06c:	bne	1a0d0 <raspicamcontrol_set_all_parameters@@Base+0x24c>
   1a070:	add	sp, sp, #48	; 0x30
   1a074:	pop	{r4, r5, r6, r7, r8, pc}
   1a078:	ldr	r3, [pc, #92]	; 1a0dc <raspicamcontrol_set_all_parameters@@Base+0x258>
   1a07c:	add	ip, sp, #28
   1a080:	add	r3, pc, r3
   1a084:	add	r3, r3, #172	; 0xac
   1a088:	ldm	r3, {r0, r1, r2, r3}
   1a08c:	stm	ip, {r0, r1, r2, r3}
   1a090:	mov	r1, ip
   1a094:	ldr	r0, [r5, #16]
   1a098:	bl	142ac <mmal_port_parameter_set@plt>
   1a09c:	subs	r5, r0, #0
   1a0a0:	beq	1a0c8 <raspicamcontrol_set_all_parameters@@Base+0x244>
   1a0a4:	ldr	r3, [pc, #52]	; 1a0e0 <raspicamcontrol_set_all_parameters@@Base+0x25c>
   1a0a8:	ldr	r0, [r6, r3]
   1a0ac:	ldr	r3, [r0]
   1a0b0:	cmp	r3, #1
   1a0b4:	bls	1a0c8 <raspicamcontrol_set_all_parameters@@Base+0x244>
   1a0b8:	ldr	r2, [pc, #36]	; 1a0e4 <raspicamcontrol_set_all_parameters@@Base+0x260>
   1a0bc:	mov	r1, #2
   1a0c0:	add	r2, pc, r2
   1a0c4:	bl	1493c <vcos_log_impl@plt>
   1a0c8:	add	r4, r5, r4
   1a0cc:	b	1a05c <raspicamcontrol_set_all_parameters@@Base+0x1d8>
   1a0d0:	bl	14804 <__stack_chk_fail@plt>
   1a0d4:	andeq	r0, r2, ip, asr r1
   1a0d8:	andeq	r0, r0, r4, lsr r3
   1a0dc:	andeq	r8, r0, r8, lsl sp
   1a0e0:	andeq	r0, r0, r0, asr #6
   1a0e4:	andeq	r9, r0, r0, lsl r2

0001a0e8 <raspicamcontrol_check_configuration@@Base>:
   1a0e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a0ec:	sub	sp, sp, #108	; 0x6c
   1a0f0:	ldr	r5, [pc, #420]	; 1a29c <raspicamcontrol_check_configuration@@Base+0x1b4>
   1a0f4:	add	r8, sp, #24
   1a0f8:	ldr	r3, [pc, #416]	; 1a2a0 <raspicamcontrol_check_configuration@@Base+0x1b8>
   1a0fc:	mov	r6, #0
   1a100:	add	r5, pc, r5
   1a104:	mov	r1, r6
   1a108:	mov	r2, #76	; 0x4c
   1a10c:	mov	r9, r0
   1a110:	ldr	r7, [r5, r3]
   1a114:	mov	r0, r8
   1a118:	add	r4, sp, #20
   1a11c:	str	r6, [sp, #20]
   1a120:	ldr	r3, [r7]
   1a124:	str	r3, [sp, #100]	; 0x64
   1a128:	bl	14414 <memset@plt>
   1a12c:	ldr	r2, [pc, #368]	; 1a2a4 <raspicamcontrol_check_configuration@@Base+0x1bc>
   1a130:	mov	r0, r4
   1a134:	mov	r1, #80	; 0x50
   1a138:	str	r6, [sp, #16]
   1a13c:	add	r2, pc, r2
   1a140:	bl	14654 <vc_gencmd@plt>
   1a144:	cmp	r0, r6
   1a148:	bne	1a160 <raspicamcontrol_check_configuration@@Base+0x78>
   1a14c:	ldr	r1, [pc, #340]	; 1a2a8 <raspicamcontrol_check_configuration@@Base+0x1c0>
   1a150:	mov	r0, r4
   1a154:	add	r2, sp, #16
   1a158:	add	r1, pc, r1
   1a15c:	bl	14618 <vc_gencmd_number_property@plt>
   1a160:	mov	ip, #0
   1a164:	mov	r2, #76	; 0x4c
   1a168:	mov	r1, ip
   1a16c:	mov	r0, r8
   1a170:	str	ip, [sp, #12]
   1a174:	str	ip, [sp, #20]
   1a178:	ldr	r6, [sp, #16]
   1a17c:	str	ip, [sp, #16]
   1a180:	bl	14414 <memset@plt>
   1a184:	ldr	r2, [pc, #288]	; 1a2ac <raspicamcontrol_check_configuration@@Base+0x1c4>
   1a188:	mov	r0, r4
   1a18c:	mov	r1, #80	; 0x50
   1a190:	add	r2, pc, r2
   1a194:	bl	14654 <vc_gencmd@plt>
   1a198:	cmp	r0, #0
   1a19c:	bne	1a1c8 <raspicamcontrol_check_configuration@@Base+0xe0>
   1a1a0:	ldr	r1, [pc, #264]	; 1a2b0 <raspicamcontrol_check_configuration@@Base+0x1c8>
   1a1a4:	add	r2, sp, #12
   1a1a8:	mov	r0, r4
   1a1ac:	add	r1, pc, r1
   1a1b0:	bl	14618 <vc_gencmd_number_property@plt>
   1a1b4:	ldr	r1, [pc, #248]	; 1a2b4 <raspicamcontrol_check_configuration@@Base+0x1cc>
   1a1b8:	mov	r0, r4
   1a1bc:	add	r2, sp, #16
   1a1c0:	add	r1, pc, r1
   1a1c4:	bl	14618 <vc_gencmd_number_property@plt>
   1a1c8:	ldr	r2, [sp, #12]
   1a1cc:	cmp	r2, #0
   1a1d0:	bne	1a210 <raspicamcontrol_check_configuration@@Base+0x128>
   1a1d4:	ldr	r3, [pc, #220]	; 1a2b8 <raspicamcontrol_check_configuration@@Base+0x1d0>
   1a1d8:	ldr	r0, [r5, r3]
   1a1dc:	ldr	r3, [r0]
   1a1e0:	cmp	r3, #1
   1a1e4:	bls	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a1e8:	ldr	r2, [pc, #204]	; 1a2bc <raspicamcontrol_check_configuration@@Base+0x1d4>
   1a1ec:	mov	r1, #2
   1a1f0:	add	r2, pc, r2
   1a1f4:	bl	1493c <vcos_log_impl@plt>
   1a1f8:	ldr	r2, [sp, #100]	; 0x64
   1a1fc:	ldr	r3, [r7]
   1a200:	cmp	r2, r3
   1a204:	bne	1a298 <raspicamcontrol_check_configuration@@Base+0x1b0>
   1a208:	add	sp, sp, #108	; 0x6c
   1a20c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a210:	cmp	r9, r6
   1a214:	ble	1a248 <raspicamcontrol_check_configuration@@Base+0x160>
   1a218:	ldr	r3, [pc, #152]	; 1a2b8 <raspicamcontrol_check_configuration@@Base+0x1d0>
   1a21c:	ldr	r0, [r5, r3]
   1a220:	ldr	r3, [r0]
   1a224:	cmp	r3, #1
   1a228:	bls	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a22c:	ldr	r2, [pc, #140]	; 1a2c0 <raspicamcontrol_check_configuration@@Base+0x1d8>
   1a230:	mov	r3, r6
   1a234:	str	r9, [sp]
   1a238:	mov	r1, #2
   1a23c:	add	r2, pc, r2
   1a240:	bl	1493c <vcos_log_impl@plt>
   1a244:	b	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a248:	ldr	r3, [sp, #16]
   1a24c:	cmp	r3, #0
   1a250:	ldr	r3, [pc, #96]	; 1a2b8 <raspicamcontrol_check_configuration@@Base+0x1d0>
   1a254:	ldr	r0, [r5, r3]
   1a258:	ldr	r3, [r0]
   1a25c:	bne	1a27c <raspicamcontrol_check_configuration@@Base+0x194>
   1a260:	cmp	r3, #1
   1a264:	bls	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a268:	ldr	r2, [pc, #84]	; 1a2c4 <raspicamcontrol_check_configuration@@Base+0x1dc>
   1a26c:	mov	r1, #2
   1a270:	add	r2, pc, r2
   1a274:	bl	1493c <vcos_log_impl@plt>
   1a278:	b	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a27c:	cmp	r3, #1
   1a280:	bls	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a284:	ldr	r2, [pc, #60]	; 1a2c8 <raspicamcontrol_check_configuration@@Base+0x1e0>
   1a288:	mov	r1, #2
   1a28c:	add	r2, pc, r2
   1a290:	bl	1493c <vcos_log_impl@plt>
   1a294:	b	1a1f8 <raspicamcontrol_check_configuration@@Base+0x110>
   1a298:	bl	14804 <__stack_chk_fail@plt>
   1a29c:	strdeq	pc, [r1], -r8
   1a2a0:	andeq	r0, r0, r4, lsr r3
   1a2a4:			; <UNDEFINED> instruction: 0x000091b0
   1a2a8:	muleq	r0, ip, r1
   1a2ac:	andeq	r9, r0, r8, ror #2
   1a2b0:	andeq	r9, r0, r8, asr r1
   1a2b4:	andeq	r9, r0, r0, asr r1
   1a2b8:	andeq	r0, r0, r0, asr #6
   1a2bc:	andeq	r9, r0, ip, lsr #2
   1a2c0:	andeq	r9, r0, r0, asr r1
   1a2c4:	muleq	r0, ip, r1
   1a2c8:	ldrdeq	r9, [r0], -ip

0001a2cc <default_camera_control_callback@@Base>:
   1a2cc:	push	{r4, r5, r6, lr}
   1a2d0:	mov	r4, r1
   1a2d4:	ldr	r5, [pc, #340]	; 1a430 <default_camera_control_callback@@Base+0x164>
   1a2d8:	sub	sp, sp, #16
   1a2dc:	ldr	r0, [pc, #336]	; 1a434 <default_camera_control_callback@@Base+0x168>
   1a2e0:	mov	r1, #1
   1a2e4:	add	r5, pc, r5
   1a2e8:	ldr	r2, [pc, #328]	; 1a438 <default_camera_control_callback@@Base+0x16c>
   1a2ec:	ldr	r3, [r4, #8]
   1a2f0:	ldr	r0, [r5, r0]
   1a2f4:	add	r2, pc, r2
   1a2f8:	ldr	r0, [r0]
   1a2fc:	bl	14834 <__fprintf_chk@plt>
   1a300:	ldr	r3, [r4, #8]
   1a304:	movw	r2, #20549	; 0x5045
   1a308:	movt	r2, #18499	; 0x4843
   1a30c:	cmp	r3, r2
   1a310:	beq	1a358 <default_camera_control_callback@@Base+0x8c>
   1a314:	movw	r2, #21061	; 0x5245
   1a318:	movt	r2, #20306	; 0x4f52
   1a31c:	cmp	r3, r2
   1a320:	beq	1a3fc <default_camera_control_callback@@Base+0x130>
   1a324:	ldr	r2, [pc, #272]	; 1a43c <default_camera_control_callback@@Base+0x170>
   1a328:	ldr	r0, [r5, r2]
   1a32c:	ldr	r2, [r0]
   1a330:	cmp	r2, #1
   1a334:	bls	1a348 <default_camera_control_callback@@Base+0x7c>
   1a338:	ldr	r2, [pc, #256]	; 1a440 <default_camera_control_callback@@Base+0x174>
   1a33c:	mov	r1, #2
   1a340:	add	r2, pc, r2
   1a344:	bl	1493c <vcos_log_impl@plt>
   1a348:	mov	r0, r4
   1a34c:	add	sp, sp, #16
   1a350:	pop	{r4, r5, r6, lr}
   1a354:	b	14384 <mmal_buffer_header_release@plt>
   1a358:	ldr	r6, [r4, #12]
   1a35c:	mov	r3, #69	; 0x45
   1a360:	movt	r3, #1
   1a364:	ldr	r2, [r6]
   1a368:	cmp	r2, r3
   1a36c:	bne	1a348 <default_camera_control_callback@@Base+0x7c>
   1a370:	ldr	r3, [pc, #196]	; 1a43c <default_camera_control_callback@@Base+0x170>
   1a374:	ldr	r5, [r5, r3]
   1a378:	ldr	r3, [r5]
   1a37c:	cmp	r3, #1
   1a380:	bls	1a348 <default_camera_control_callback@@Base+0x7c>
   1a384:	ldr	ip, [r6, #12]
   1a388:	mov	r0, r5
   1a38c:	ldr	r3, [r6, #8]
   1a390:	mov	r1, #2
   1a394:	ldr	r2, [pc, #168]	; 1a444 <default_camera_control_callback@@Base+0x178>
   1a398:	str	ip, [sp]
   1a39c:	ldr	ip, [r6, #16]
   1a3a0:	add	r2, pc, r2
   1a3a4:	str	ip, [sp, #4]
   1a3a8:	ldr	ip, [r6, #20]
   1a3ac:	str	ip, [sp, #8]
   1a3b0:	ldr	ip, [r6, #24]
   1a3b4:	str	ip, [sp, #12]
   1a3b8:	bl	1493c <vcos_log_impl@plt>
   1a3bc:	ldr	r3, [r5]
   1a3c0:	cmp	r3, #1
   1a3c4:	bls	1a348 <default_camera_control_callback@@Base+0x7c>
   1a3c8:	ldr	ip, [r6, #32]
   1a3cc:	mov	r0, r5
   1a3d0:	ldr	r3, [r6, #28]
   1a3d4:	mov	r1, #2
   1a3d8:	ldr	r2, [pc, #104]	; 1a448 <default_camera_control_callback@@Base+0x17c>
   1a3dc:	str	ip, [sp]
   1a3e0:	ldr	ip, [r6, #36]	; 0x24
   1a3e4:	add	r2, pc, r2
   1a3e8:	str	ip, [sp, #4]
   1a3ec:	ldr	ip, [r6, #40]	; 0x28
   1a3f0:	str	ip, [sp, #8]
   1a3f4:	bl	1493c <vcos_log_impl@plt>
   1a3f8:	b	1a348 <default_camera_control_callback@@Base+0x7c>
   1a3fc:	ldr	r3, [pc, #56]	; 1a43c <default_camera_control_callback@@Base+0x170>
   1a400:	ldr	r0, [r5, r3]
   1a404:	ldr	r3, [r0]
   1a408:	cmp	r3, #1
   1a40c:	bls	1a348 <default_camera_control_callback@@Base+0x7c>
   1a410:	ldr	r2, [pc, #52]	; 1a44c <default_camera_control_callback@@Base+0x180>
   1a414:	mov	r1, #2
   1a418:	add	r2, pc, r2
   1a41c:	bl	1493c <vcos_log_impl@plt>
   1a420:	mov	r0, r4
   1a424:	add	sp, sp, #16
   1a428:	pop	{r4, r5, r6, lr}
   1a42c:	b	14384 <mmal_buffer_header_release@plt>
   1a430:	andeq	pc, r1, r4, lsl sp	; <UNPREDICTABLE>
   1a434:	andeq	r0, r0, r4, asr r3
   1a438:			; <UNDEFINED> instruction: 0x000091b4
   1a43c:	andeq	r0, r0, r0, asr #6
   1a440:	andeq	r9, r0, r0, asr #4
   1a444:	andeq	r9, r0, ip, lsr #2
   1a448:	andeq	r9, r0, r0, lsr #2
   1a44c:	andeq	r9, r0, r4, lsl #2

0001a450 <raspicli_get_command_id@@Base>:
   1a450:	push	{r4, r5, r6, r7, r8, lr}
   1a454:	subs	r4, r0, #0
   1a458:	sub	sp, sp, #8
   1a45c:	mov	r7, r1
   1a460:	mov	r6, r2
   1a464:	mov	r8, r3
   1a468:	beq	1a528 <raspicli_get_command_id@@Base+0xd8>
   1a46c:	cmp	r8, #0
   1a470:	beq	1a558 <raspicli_get_command_id@@Base+0x108>
   1a474:	cmp	r6, #0
   1a478:	beq	1a4f4 <raspicli_get_command_id@@Base+0xa4>
   1a47c:	cmp	r8, #0
   1a480:	cmpne	r4, #0
   1a484:	movne	r5, #0
   1a488:	moveq	r5, #1
   1a48c:	beq	1a4e8 <raspicli_get_command_id@@Base+0x98>
   1a490:	cmp	r7, #0
   1a494:	bgt	1a4b8 <raspicli_get_command_id@@Base+0x68>
   1a498:	b	1a4e8 <raspicli_get_command_id@@Base+0x98>
   1a49c:	ldr	r1, [r4, #8]
   1a4a0:	bl	149fc <strcmp@plt>
   1a4a4:	cmp	r0, #0
   1a4a8:	beq	1a4d4 <raspicli_get_command_id@@Base+0x84>
   1a4ac:	cmp	r5, r7
   1a4b0:	add	r4, r4, #20
   1a4b4:	beq	1a4e8 <raspicli_get_command_id@@Base+0x98>
   1a4b8:	mov	r0, r6
   1a4bc:	ldr	r1, [r4, #4]
   1a4c0:	bl	149fc <strcmp@plt>
   1a4c4:	add	r5, r5, #1
   1a4c8:	cmp	r0, #0
   1a4cc:	mov	r0, r6
   1a4d0:	bne	1a49c <raspicli_get_command_id@@Base+0x4c>
   1a4d4:	ldr	r3, [r4, #16]
   1a4d8:	ldr	r0, [r4]
   1a4dc:	str	r3, [r8]
   1a4e0:	add	sp, sp, #8
   1a4e4:	pop	{r4, r5, r6, r7, r8, pc}
   1a4e8:	mvn	r0, #0
   1a4ec:	add	sp, sp, #8
   1a4f0:	pop	{r4, r5, r6, r7, r8, pc}
   1a4f4:	ldr	r3, [pc, #140]	; 1a588 <raspicli_get_command_id@@Base+0x138>
   1a4f8:	mov	r2, #69	; 0x45
   1a4fc:	ldr	r0, [pc, #136]	; 1a58c <raspicli_get_command_id@@Base+0x13c>
   1a500:	add	r3, pc, r3
   1a504:	ldr	r1, [pc, #132]	; 1a590 <raspicli_get_command_id@@Base+0x140>
   1a508:	str	r3, [sp]
   1a50c:	add	r0, pc, r0
   1a510:	ldr	r3, [pc, #124]	; 1a594 <raspicli_get_command_id@@Base+0x144>
   1a514:	add	r1, pc, r1
   1a518:	add	r3, pc, r3
   1a51c:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1a520:	mvn	r0, #0
   1a524:	b	1a4e0 <raspicli_get_command_id@@Base+0x90>
   1a528:	ldr	r3, [pc, #104]	; 1a598 <raspicli_get_command_id@@Base+0x148>
   1a52c:	mov	r2, #67	; 0x43
   1a530:	ldr	r0, [pc, #100]	; 1a59c <raspicli_get_command_id@@Base+0x14c>
   1a534:	add	r3, pc, r3
   1a538:	ldr	r1, [pc, #96]	; 1a5a0 <raspicli_get_command_id@@Base+0x150>
   1a53c:	str	r3, [sp]
   1a540:	add	r0, pc, r0
   1a544:	ldr	r3, [pc, #88]	; 1a5a4 <raspicli_get_command_id@@Base+0x154>
   1a548:	add	r1, pc, r1
   1a54c:	add	r3, pc, r3
   1a550:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1a554:	b	1a46c <raspicli_get_command_id@@Base+0x1c>
   1a558:	ldr	r3, [pc, #72]	; 1a5a8 <raspicli_get_command_id@@Base+0x158>
   1a55c:	mov	r2, #68	; 0x44
   1a560:	ldr	r0, [pc, #68]	; 1a5ac <raspicli_get_command_id@@Base+0x15c>
   1a564:	add	r3, pc, r3
   1a568:	ldr	r1, [pc, #64]	; 1a5b0 <raspicli_get_command_id@@Base+0x160>
   1a56c:	str	r3, [sp]
   1a570:	add	r0, pc, r0
   1a574:	ldr	r3, [pc, #56]	; 1a5b4 <raspicli_get_command_id@@Base+0x164>
   1a578:	add	r1, pc, r1
   1a57c:	add	r3, pc, r3
   1a580:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1a584:	b	1a474 <raspicli_get_command_id@@Base+0x24>
   1a588:	andeq	r9, r0, r4, lsl r9
   1a58c:	andeq	r9, r0, r8, lsl #17
   1a590:	andeq	r9, r0, r0, asr r8
   1a594:	andeq	r8, r0, r0, lsl #22
   1a598:	andeq	r9, r0, r4, asr #17
   1a59c:	andeq	r9, r0, r4, asr r8
   1a5a0:	andeq	r9, r0, ip, lsl r8
   1a5a4:	andeq	r8, r0, ip, asr #21
   1a5a8:	andeq	r9, r0, r0, lsr #17
   1a5ac:	andeq	r9, r0, r4, lsr #16
   1a5b0:	andeq	r9, r0, ip, ror #15
   1a5b4:	muleq	r0, ip, sl

0001a5b8 <raspicli_display_help@@Base>:
   1a5b8:	cmp	r0, #0
   1a5bc:	ldr	r3, [pc, #160]	; 1a664 <raspicli_display_help@@Base+0xac>
   1a5c0:	push	{r4, r5, r6, r7, r8, lr}
   1a5c4:	add	r3, pc, r3
   1a5c8:	sub	sp, sp, #8
   1a5cc:	mov	r6, r1
   1a5d0:	beq	1a630 <raspicli_display_help@@Base+0x78>
   1a5d4:	cmp	r1, #0
   1a5d8:	ble	1a628 <raspicli_display_help@@Base+0x70>
   1a5dc:	ldr	r2, [pc, #132]	; 1a668 <raspicli_display_help@@Base+0xb0>
   1a5e0:	mov	r4, r0
   1a5e4:	ldr	r8, [pc, #128]	; 1a66c <raspicli_display_help@@Base+0xb4>
   1a5e8:	mov	r5, #0
   1a5ec:	ldr	r7, [r3, r2]
   1a5f0:	add	r8, pc, r8
   1a5f4:	ldr	ip, [r4, #4]
   1a5f8:	add	r5, r5, #1
   1a5fc:	ldr	r3, [r4, #8]
   1a600:	mov	r1, #1
   1a604:	ldr	r0, [r7]
   1a608:	mov	r2, r8
   1a60c:	str	ip, [sp]
   1a610:	add	r4, r4, #20
   1a614:	ldr	ip, [r4, #-8]
   1a618:	str	ip, [sp, #4]
   1a61c:	bl	14834 <__fprintf_chk@plt>
   1a620:	cmp	r5, r6
   1a624:	bne	1a5f4 <raspicli_display_help@@Base+0x3c>
   1a628:	add	sp, sp, #8
   1a62c:	pop	{r4, r5, r6, r7, r8, pc}
   1a630:	ldr	r3, [pc, #56]	; 1a670 <raspicli_display_help@@Base+0xb8>
   1a634:	mov	r2, #102	; 0x66
   1a638:	ldr	r1, [pc, #52]	; 1a674 <raspicli_display_help@@Base+0xbc>
   1a63c:	add	r3, pc, r3
   1a640:	ldr	r0, [pc, #48]	; 1a678 <raspicli_display_help@@Base+0xc0>
   1a644:	str	r3, [sp]
   1a648:	add	r1, pc, r1
   1a64c:	ldr	r3, [pc, #40]	; 1a67c <raspicli_display_help@@Base+0xc4>
   1a650:	add	r0, pc, r0
   1a654:	add	r1, r1, #24
   1a658:	add	r3, pc, r3
   1a65c:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1a660:	b	1a628 <raspicli_display_help@@Base+0x70>
   1a664:	andeq	pc, r1, r4, lsr sl	; <UNPREDICTABLE>
   1a668:	andeq	r0, r0, r0, asr r3
   1a66c:	andeq	r9, r0, r8, lsr #16
   1a670:			; <UNDEFINED> instruction: 0x000097bc
   1a674:	andeq	r9, r0, ip, lsl r7
   1a678:	andeq	r9, r0, r4, asr #14
   1a67c:	andeq	r8, r0, r0, asr #19

0001a680 <raspicli_map_xref@@Base>:
   1a680:	push	{r3, r4, r5, r6, r7, lr}
   1a684:	subs	r7, r2, #0
   1a688:	mov	r6, r0
   1a68c:	ble	1a6c8 <raspicli_map_xref@@Base+0x48>
   1a690:	mov	r4, r1
   1a694:	mov	r5, #0
   1a698:	b	1a6a8 <raspicli_map_xref@@Base+0x28>
   1a69c:	cmp	r5, r7
   1a6a0:	add	r4, r4, #8
   1a6a4:	beq	1a6c8 <raspicli_map_xref@@Base+0x48>
   1a6a8:	mov	r0, r6
   1a6ac:	ldr	r1, [r4]
   1a6b0:	bl	1439c <strcasecmp@plt>
   1a6b4:	add	r5, r5, #1
   1a6b8:	cmp	r0, #0
   1a6bc:	bne	1a69c <raspicli_map_xref@@Base+0x1c>
   1a6c0:	ldr	r0, [r4, #4]
   1a6c4:	pop	{r3, r4, r5, r6, r7, pc}
   1a6c8:	mvn	r0, #0
   1a6cc:	pop	{r3, r4, r5, r6, r7, pc}

0001a6d0 <raspicli_unmap_xref@@Base>:
   1a6d0:	cmp	r2, #0
   1a6d4:	push	{r4}		; (str r4, [sp, #-4]!)
   1a6d8:	ble	1a714 <raspicli_unmap_xref@@Base+0x44>
   1a6dc:	ldr	r3, [r1, #4]
   1a6e0:	cmp	r3, r0
   1a6e4:	addne	r1, r1, #8
   1a6e8:	movne	r3, #0
   1a6ec:	bne	1a700 <raspicli_unmap_xref@@Base+0x30>
   1a6f0:	b	1a720 <raspicli_unmap_xref@@Base+0x50>
   1a6f4:	ldr	ip, [r1, #-4]
   1a6f8:	cmp	ip, r0
   1a6fc:	beq	1a724 <raspicli_unmap_xref@@Base+0x54>
   1a700:	add	r3, r3, #1
   1a704:	mov	r4, r1
   1a708:	cmp	r3, r2
   1a70c:	add	r1, r1, #8
   1a710:	bne	1a6f4 <raspicli_unmap_xref@@Base+0x24>
   1a714:	mov	r0, #0
   1a718:	pop	{r4}		; (ldr r4, [sp], #4)
   1a71c:	bx	lr
   1a720:	mov	r4, r1
   1a724:	ldr	r0, [r4]
   1a728:	pop	{r4}		; (ldr r4, [sp], #4)
   1a72c:	bx	lr

0001a730 <raspipreview_create@@Base>:
   1a730:	push	{r4, r5, r6, r7, lr}
   1a734:	sub	sp, sp, #100	; 0x64
   1a738:	ldr	r4, [pc, #552]	; 1a968 <raspipreview_create@@Base+0x238>
   1a73c:	mov	r3, #0
   1a740:	ldr	r1, [pc, #548]	; 1a96c <raspipreview_create@@Base+0x23c>
   1a744:	mov	r7, r0
   1a748:	add	r4, pc, r4
   1a74c:	ldr	r2, [r0]
   1a750:	ldr	r5, [r4, r1]
   1a754:	cmp	r2, r3
   1a758:	str	r3, [sp, #4]
   1a75c:	ldr	r3, [r5]
   1a760:	str	r3, [sp, #92]	; 0x5c
   1a764:	bne	1a7ac <raspipreview_create@@Base+0x7c>
   1a768:	ldr	r0, [pc, #512]	; 1a970 <raspipreview_create@@Base+0x240>
   1a76c:	add	r1, sp, #4
   1a770:	add	r0, pc, r0
   1a774:	bl	149cc <mmal_component_create@plt>
   1a778:	subs	r6, r0, #0
   1a77c:	beq	1a7f0 <raspipreview_create@@Base+0xc0>
   1a780:	ldr	r3, [pc, #492]	; 1a974 <raspipreview_create@@Base+0x244>
   1a784:	ldr	r0, [r4, r3]
   1a788:	ldr	r3, [r0]
   1a78c:	cmp	r3, #1
   1a790:	bls	1a8d4 <raspipreview_create@@Base+0x1a4>
   1a794:	ldr	r2, [pc, #476]	; 1a978 <raspipreview_create@@Base+0x248>
   1a798:	mov	r1, #2
   1a79c:	add	r2, pc, r2
   1a7a0:	bl	1493c <vcos_log_impl@plt>
   1a7a4:	ldr	r0, [sp, #4]
   1a7a8:	b	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a7ac:	ldr	r0, [pc, #456]	; 1a97c <raspipreview_create@@Base+0x24c>
   1a7b0:	add	r1, sp, #4
   1a7b4:	add	r0, pc, r0
   1a7b8:	bl	149cc <mmal_component_create@plt>
   1a7bc:	subs	r6, r0, #0
   1a7c0:	beq	1a830 <raspipreview_create@@Base+0x100>
   1a7c4:	ldr	r3, [pc, #424]	; 1a974 <raspipreview_create@@Base+0x244>
   1a7c8:	ldr	r0, [r4, r3]
   1a7cc:	ldr	r3, [r0]
   1a7d0:	cmp	r3, #1
   1a7d4:	bls	1a8d4 <raspipreview_create@@Base+0x1a4>
   1a7d8:	ldr	r2, [pc, #416]	; 1a980 <raspipreview_create@@Base+0x250>
   1a7dc:	mov	r1, #2
   1a7e0:	add	r2, pc, r2
   1a7e4:	bl	1493c <vcos_log_impl@plt>
   1a7e8:	ldr	r0, [sp, #4]
   1a7ec:	b	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a7f0:	ldr	r0, [sp, #4]
   1a7f4:	bl	1481c <mmal_component_enable@plt>
   1a7f8:	subs	r6, r0, #0
   1a7fc:	beq	1a938 <raspipreview_create@@Base+0x208>
   1a800:	ldr	r3, [pc, #364]	; 1a974 <raspipreview_create@@Base+0x244>
   1a804:	ldr	r0, [r4, r3]
   1a808:	ldr	r3, [r0]
   1a80c:	cmp	r3, #1
   1a810:	bls	1a8d4 <raspipreview_create@@Base+0x1a4>
   1a814:	ldr	r2, [pc, #360]	; 1a984 <raspipreview_create@@Base+0x254>
   1a818:	mov	r1, #2
   1a81c:	mov	r3, r6
   1a820:	add	r2, pc, r2
   1a824:	bl	1493c <vcos_log_impl@plt>
   1a828:	ldr	r0, [sp, #4]
   1a82c:	b	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a830:	ldr	r3, [sp, #4]
   1a834:	ldr	r2, [r3, #20]
   1a838:	cmp	r2, #0
   1a83c:	beq	1a900 <raspipreview_create@@Base+0x1d0>
   1a840:	ldr	r2, [r7, #4]
   1a844:	mov	ip, #131072	; 0x20000
   1a848:	ldr	lr, [r3, #24]
   1a84c:	mov	r0, #84	; 0x54
   1a850:	ldr	r6, [r7, #8]
   1a854:	cmp	r2, #0
   1a858:	mov	r1, #2
   1a85c:	mov	r3, #1280	; 0x500
   1a860:	ldr	lr, [lr]
   1a864:	str	r6, [sp, #88]	; 0x58
   1a868:	str	ip, [sp, #8]
   1a86c:	str	r0, [sp, #12]
   1a870:	str	r1, [sp, #80]	; 0x50
   1a874:	str	r3, [sp, #16]
   1a878:	beq	1a944 <raspipreview_create@@Base+0x214>
   1a87c:	movw	r2, #1282	; 0x502
   1a880:	mov	r3, #1
   1a884:	str	r2, [sp, #16]
   1a888:	str	r3, [sp, #24]
   1a88c:	mov	r0, lr
   1a890:	add	r1, sp, #8
   1a894:	bl	142ac <mmal_port_parameter_set@plt>
   1a898:	bics	r3, r0, #4
   1a89c:	mov	r6, r0
   1a8a0:	beq	1a7f0 <raspipreview_create@@Base+0xc0>
   1a8a4:	ldr	r3, [pc, #200]	; 1a974 <raspipreview_create@@Base+0x244>
   1a8a8:	ldr	r0, [r4, r3]
   1a8ac:	ldr	r3, [r0]
   1a8b0:	cmp	r3, #1
   1a8b4:	bls	1a8d4 <raspipreview_create@@Base+0x1a4>
   1a8b8:	ldr	r2, [pc, #200]	; 1a988 <raspipreview_create@@Base+0x258>
   1a8bc:	mov	r1, #2
   1a8c0:	mov	r3, r6
   1a8c4:	add	r2, pc, r2
   1a8c8:	bl	1493c <vcos_log_impl@plt>
   1a8cc:	ldr	r0, [sp, #4]
   1a8d0:	b	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a8d4:	ldr	r0, [sp, #4]
   1a8d8:	cmp	r0, #0
   1a8dc:	beq	1a8e4 <raspipreview_create@@Base+0x1b4>
   1a8e0:	bl	14510 <mmal_component_destroy@plt>
   1a8e4:	ldr	r2, [sp, #92]	; 0x5c
   1a8e8:	mov	r0, r6
   1a8ec:	ldr	r3, [r5]
   1a8f0:	cmp	r2, r3
   1a8f4:	bne	1a964 <raspipreview_create@@Base+0x234>
   1a8f8:	add	sp, sp, #100	; 0x64
   1a8fc:	pop	{r4, r5, r6, r7, pc}
   1a900:	ldr	r2, [pc, #108]	; 1a974 <raspipreview_create@@Base+0x244>
   1a904:	ldr	r0, [r4, r2]
   1a908:	ldr	r2, [r0]
   1a90c:	cmp	r2, #1
   1a910:	movls	r0, r3
   1a914:	movls	r6, #4
   1a918:	bls	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a91c:	ldr	r2, [pc, #104]	; 1a98c <raspipreview_create@@Base+0x25c>
   1a920:	mov	r1, #2
   1a924:	mov	r6, #4
   1a928:	add	r2, pc, r2
   1a92c:	bl	1493c <vcos_log_impl@plt>
   1a930:	ldr	r0, [sp, #4]
   1a934:	b	1a8d8 <raspipreview_create@@Base+0x1a8>
   1a938:	ldr	r3, [sp, #4]
   1a93c:	str	r3, [r7, #28]
   1a940:	b	1a8e4 <raspipreview_create@@Base+0x1b4>
   1a944:	add	r3, r7, #12
   1a948:	str	r2, [sp, #24]
   1a94c:	movw	ip, #1290	; 0x50a
   1a950:	str	ip, [sp, #16]
   1a954:	ldm	r3, {r0, r1, r2, r3}
   1a958:	add	ip, sp, #32
   1a95c:	stm	ip, {r0, r1, r2, r3}
   1a960:	b	1a88c <raspipreview_create@@Base+0x15c>
   1a964:	bl	14804 <__stack_chk_fail@plt>
   1a968:			; <UNDEFINED> instruction: 0x0001f8b0
   1a96c:	andeq	r0, r0, r4, lsr r3
   1a970:			; <UNDEFINED> instruction: 0x000096b8
   1a974:	andeq	r0, r0, r0, asr #6
   1a978:	muleq	r0, ip, r6
   1a97c:	andeq	r9, r0, ip, lsr #13
   1a980:	muleq	r0, r4, r6
   1a984:	andeq	r9, r0, r8, asr #13
   1a988:	strdeq	r9, [r0], -r8
   1a98c:	andeq	r9, r0, r0, ror r5

0001a990 <raspipreview_destroy@@Base>:
   1a990:	push	{r4, lr}
   1a994:	mov	r4, r0
   1a998:	ldr	r0, [r0, #28]
   1a99c:	cmp	r0, #0
   1a9a0:	popeq	{r4, pc}
   1a9a4:	bl	14510 <mmal_component_destroy@plt>
   1a9a8:	mov	r3, #0
   1a9ac:	str	r3, [r4, #28]
   1a9b0:	pop	{r4, pc}

0001a9b4 <raspipreview_set_defaults@@Base>:
   1a9b4:	mov	r2, #255	; 0xff
   1a9b8:	mov	r3, #1024	; 0x400
   1a9bc:	str	r2, [r0, #8]
   1a9c0:	mov	r2, #1
   1a9c4:	str	r3, [r0, #20]
   1a9c8:	mov	r3, #768	; 0x300
   1a9cc:	str	r2, [r0]
   1a9d0:	str	r3, [r0, #24]
   1a9d4:	mov	r3, #0
   1a9d8:	str	r2, [r0, #4]
   1a9dc:	str	r3, [r0, #12]
   1a9e0:	str	r3, [r0, #16]
   1a9e4:	str	r3, [r0, #28]
   1a9e8:	bx	lr

0001a9ec <raspipreview_dump_parameters@@Base>:
   1a9ec:	ldr	r3, [pc, #164]	; 1aa98 <raspipreview_dump_parameters@@Base+0xac>
   1a9f0:	ldr	r1, [pc, #164]	; 1aa9c <raspipreview_dump_parameters@@Base+0xb0>
   1a9f4:	add	r3, pc, r3
   1a9f8:	ldr	r2, [r0]
   1a9fc:	push	{r4, r5, lr}
   1aa00:	cmp	r2, #0
   1aa04:	ldr	r5, [r3, r1]
   1aa08:	mov	r4, r0
   1aa0c:	ldr	r3, [pc, #140]	; 1aaa0 <raspipreview_dump_parameters@@Base+0xb4>
   1aa10:	sub	sp, sp, #20
   1aa14:	add	r3, pc, r3
   1aa18:	ldr	r0, [r5]
   1aa1c:	ldreq	r3, [pc, #128]	; 1aaa4 <raspipreview_dump_parameters@@Base+0xb8>
   1aa20:	addeq	r3, pc, r3
   1aa24:	ldr	r2, [r4, #4]
   1aa28:	cmp	r2, #0
   1aa2c:	bne	1aa8c <raspipreview_dump_parameters@@Base+0xa0>
   1aa30:	ldr	r2, [pc, #112]	; 1aaa8 <raspipreview_dump_parameters@@Base+0xbc>
   1aa34:	add	r2, pc, r2
   1aa38:	str	r2, [sp]
   1aa3c:	mov	r1, #1
   1aa40:	ldr	r2, [pc, #100]	; 1aaac <raspipreview_dump_parameters@@Base+0xc0>
   1aa44:	add	r2, pc, r2
   1aa48:	bl	14834 <__fprintf_chk@plt>
   1aa4c:	ldr	r2, [r4, #16]
   1aa50:	ldr	r3, [r4, #12]
   1aa54:	mov	r1, #1
   1aa58:	ldr	r0, [r5]
   1aa5c:	str	r2, [sp]
   1aa60:	ldr	ip, [r4, #20]
   1aa64:	ldr	r2, [pc, #68]	; 1aab0 <raspipreview_dump_parameters@@Base+0xc4>
   1aa68:	str	ip, [sp, #4]
   1aa6c:	add	r2, pc, r2
   1aa70:	ldr	ip, [r4, #24]
   1aa74:	str	ip, [sp, #8]
   1aa78:	ldr	ip, [r4, #8]
   1aa7c:	str	ip, [sp, #12]
   1aa80:	bl	14834 <__fprintf_chk@plt>
   1aa84:	add	sp, sp, #20
   1aa88:	pop	{r4, r5, pc}
   1aa8c:	ldr	r2, [pc, #32]	; 1aab4 <raspipreview_dump_parameters@@Base+0xc8>
   1aa90:	add	r2, pc, r2
   1aa94:	b	1aa38 <raspipreview_dump_parameters@@Base+0x4c>
   1aa98:	andeq	pc, r1, r4, lsl #12
   1aa9c:	andeq	r0, r0, r4, asr r3
   1aaa0:	andeq	r8, r0, r8, lsl #12
   1aaa4:	andeq	r8, r0, r0, lsl #12
   1aaa8:	andeq	r8, r0, ip, ror #11
   1aaac:	ldrdeq	r9, [r0], -r8
   1aab0:	andeq	r9, r0, ip, asr #9
   1aab4:	andeq	r8, r0, ip, lsl #11

0001aab8 <raspipreview_parse_cmdline@@Base>:
   1aab8:	ldr	r3, [pc, #300]	; 1abec <raspipreview_parse_cmdline@@Base+0x134>
   1aabc:	cmp	r1, #0
   1aac0:	ldr	ip, [pc, #296]	; 1abf0 <raspipreview_parse_cmdline@@Base+0x138>
   1aac4:	add	r3, pc, r3
   1aac8:	push	{r4, r5, r6, lr}
   1aacc:	sub	sp, sp, #16
   1aad0:	ldr	r4, [r3, ip]
   1aad4:	mov	r5, r0
   1aad8:	mov	r6, r2
   1aadc:	ldr	r3, [r4]
   1aae0:	str	r3, [sp, #12]
   1aae4:	beq	1ab38 <raspipreview_parse_cmdline@@Base+0x80>
   1aae8:	ldr	r0, [pc, #260]	; 1abf4 <raspipreview_parse_cmdline@@Base+0x13c>
   1aaec:	mov	r2, r1
   1aaf0:	add	r3, sp, #8
   1aaf4:	mov	r1, #4
   1aaf8:	add	r0, pc, r0
   1aafc:	bl	1a450 <raspicli_get_command_id@@Base>
   1ab00:	cmn	r0, #1
   1ab04:	beq	1ab38 <raspipreview_parse_cmdline@@Base+0x80>
   1ab08:	ldr	r2, [sp, #8]
   1ab0c:	cmp	r2, #0
   1ab10:	ble	1ab1c <raspipreview_parse_cmdline@@Base+0x64>
   1ab14:	cmp	r6, #0
   1ab18:	beq	1ab38 <raspipreview_parse_cmdline@@Base+0x80>
   1ab1c:	cmp	r0, #3
   1ab20:	addls	pc, pc, r0, lsl #2
   1ab24:	b	1ab38 <raspipreview_parse_cmdline@@Base+0x80>
   1ab28:	b	1ab64 <raspipreview_parse_cmdline@@Base+0xac>
   1ab2c:	b	1abac <raspipreview_parse_cmdline@@Base+0xf4>
   1ab30:	b	1abbc <raspipreview_parse_cmdline@@Base+0x104>
   1ab34:	b	1ab54 <raspipreview_parse_cmdline@@Base+0x9c>
   1ab38:	mov	r0, #0
   1ab3c:	ldr	r2, [sp, #12]
   1ab40:	ldr	r3, [r4]
   1ab44:	cmp	r2, r3
   1ab48:	bne	1abe8 <raspipreview_parse_cmdline@@Base+0x130>
   1ab4c:	add	sp, sp, #16
   1ab50:	pop	{r4, r5, r6, pc}
   1ab54:	mov	r3, #0
   1ab58:	mov	r0, #1
   1ab5c:	str	r3, [r5]
   1ab60:	b	1ab3c <raspipreview_parse_cmdline@@Base+0x84>
   1ab64:	mov	r2, r5
   1ab68:	mov	r0, r6
   1ab6c:	add	r1, r5, #20
   1ab70:	mov	r6, #1
   1ab74:	add	r3, r5, #24
   1ab78:	str	r6, [r2], #12
   1ab7c:	stm	sp, {r1, r3}
   1ab80:	add	r3, r5, #16
   1ab84:	ldr	r1, [pc, #108]	; 1abf8 <raspipreview_parse_cmdline@@Base+0x140>
   1ab88:	add	r1, pc, r1
   1ab8c:	bl	14648 <sscanf@plt>
   1ab90:	cmp	r0, #0
   1ab94:	streq	r6, [r5, #4]
   1ab98:	movne	r3, #0
   1ab9c:	moveq	r0, #2
   1aba0:	movne	r0, #2
   1aba4:	strne	r3, [r5, #4]
   1aba8:	b	1ab3c <raspipreview_parse_cmdline@@Base+0x84>
   1abac:	mov	r0, #1
   1abb0:	str	r0, [r5]
   1abb4:	str	r0, [r5, #4]
   1abb8:	b	1ab3c <raspipreview_parse_cmdline@@Base+0x84>
   1abbc:	ldr	r1, [pc, #56]	; 1abfc <raspipreview_parse_cmdline@@Base+0x144>
   1abc0:	mov	r0, r6
   1abc4:	add	r2, r5, #8
   1abc8:	add	r1, pc, r1
   1abcc:	bl	14648 <sscanf@plt>
   1abd0:	cmp	r0, #1
   1abd4:	moveq	r0, #2
   1abd8:	movne	r3, #255	; 0xff
   1abdc:	movne	r0, #0
   1abe0:	strne	r3, [r5, #8]
   1abe4:	b	1ab3c <raspipreview_parse_cmdline@@Base+0x84>
   1abe8:	bl	14804 <__stack_chk_fail@plt>
   1abec:	andeq	pc, r1, r4, lsr r5	; <UNPREDICTABLE>
   1abf0:	andeq	r0, r0, r4, lsr r3
   1abf4:	andeq	pc, r1, ip, ror ip	; <UNPREDICTABLE>
   1abf8:	ldrdeq	r9, [r0], -r8
   1abfc:	andeq	r8, r0, r8, lsr r9

0001ac00 <raspipreview_display_help@@Base>:
   1ac00:	push	{r3, lr}
   1ac04:	mov	r1, #1
   1ac08:	ldr	r3, [pc, #48]	; 1ac40 <raspipreview_display_help@@Base+0x40>
   1ac0c:	mov	r2, #29
   1ac10:	ldr	ip, [pc, #44]	; 1ac44 <raspipreview_display_help@@Base+0x44>
   1ac14:	add	r3, pc, r3
   1ac18:	ldr	r0, [pc, #40]	; 1ac48 <raspipreview_display_help@@Base+0x48>
   1ac1c:	ldr	r3, [r3, ip]
   1ac20:	add	r0, pc, r0
   1ac24:	ldr	r3, [r3]
   1ac28:	bl	147b0 <fwrite@plt>
   1ac2c:	ldr	r0, [pc, #24]	; 1ac4c <raspipreview_display_help@@Base+0x4c>
   1ac30:	mov	r1, #4
   1ac34:	add	r0, pc, r0
   1ac38:	pop	{r3, lr}
   1ac3c:	b	1a5b8 <raspicli_display_help@@Base>
   1ac40:	andeq	pc, r1, r4, ror #7
   1ac44:	andeq	r0, r0, r0, asr r3
   1ac48:	andeq	r9, r0, ip, asr #6
   1ac4c:	andeq	pc, r1, r0, asr #22

0001ac50 <raspicommonsettings_set_defaults@@Base>:
   1ac50:	ldr	r1, [pc, #52]	; 1ac8c <raspicommonsettings_set_defaults@@Base+0x3c>
   1ac54:	mov	r2, #16
   1ac58:	push	{r4, lr}
   1ac5c:	add	r1, pc, r1
   1ac60:	mov	r4, r0
   1ac64:	bl	14354 <strncpy@plt>
   1ac68:	mov	r3, #0
   1ac6c:	str	r3, [r4, #16]
   1ac70:	str	r3, [r4, #20]
   1ac74:	str	r3, [r4, #24]
   1ac78:	str	r3, [r4, #36]	; 0x24
   1ac7c:	str	r3, [r4, #28]
   1ac80:	str	r3, [r4, #32]
   1ac84:	str	r3, [r4, #40]	; 0x28
   1ac88:	pop	{r4, pc}
   1ac8c:	andeq	r9, r0, r4, lsl #8

0001ac90 <raspicommonsettings_dump_parameters@@Base>:
   1ac90:	ldr	ip, [pc, #180]	; 1ad4c <raspicommonsettings_dump_parameters@@Base+0xbc>
   1ac94:	mov	r3, r0
   1ac98:	push	{r4, r5, lr}
   1ac9c:	add	ip, pc, ip
   1aca0:	ldr	lr, [pc, #168]	; 1ad50 <raspicommonsettings_dump_parameters@@Base+0xc0>
   1aca4:	mov	r4, r0
   1aca8:	mov	r0, ip
   1acac:	ldr	r2, [pc, #160]	; 1ad54 <raspicommonsettings_dump_parameters@@Base+0xc4>
   1acb0:	sub	sp, sp, #12
   1acb4:	mov	r1, #1
   1acb8:	ldr	r5, [r0, lr]
   1acbc:	add	r2, pc, r2
   1acc0:	ldr	r0, [r5]
   1acc4:	bl	14834 <__fprintf_chk@plt>
   1acc8:	ldr	r2, [r4, #20]
   1accc:	ldr	r3, [r4, #16]
   1acd0:	mov	r1, #1
   1acd4:	ldr	r0, [r5]
   1acd8:	str	r2, [sp]
   1acdc:	ldr	ip, [r4, #24]
   1ace0:	ldr	r2, [pc, #112]	; 1ad58 <raspicommonsettings_dump_parameters@@Base+0xc8>
   1ace4:	str	ip, [sp, #4]
   1ace8:	add	r2, pc, r2
   1acec:	bl	14834 <__fprintf_chk@plt>
   1acf0:	ldr	ip, [r4, #32]
   1acf4:	ldr	r2, [pc, #96]	; 1ad5c <raspicommonsettings_dump_parameters@@Base+0xcc>
   1acf8:	mov	r1, #1
   1acfc:	ldr	r3, [r4, #28]
   1ad00:	ldr	r0, [r5]
   1ad04:	add	r2, pc, r2
   1ad08:	str	ip, [sp]
   1ad0c:	bl	14834 <__fprintf_chk@plt>
   1ad10:	ldr	r3, [r4, #40]	; 0x28
   1ad14:	ldr	r0, [r5]
   1ad18:	cmp	r3, #0
   1ad1c:	bne	1ad40 <raspicommonsettings_dump_parameters@@Base+0xb0>
   1ad20:	ldr	r3, [pc, #56]	; 1ad60 <raspicommonsettings_dump_parameters@@Base+0xd0>
   1ad24:	add	r3, pc, r3
   1ad28:	ldr	r2, [pc, #52]	; 1ad64 <raspicommonsettings_dump_parameters@@Base+0xd4>
   1ad2c:	mov	r1, #1
   1ad30:	add	r2, pc, r2
   1ad34:	add	sp, sp, #12
   1ad38:	pop	{r4, r5, lr}
   1ad3c:	b	14834 <__fprintf_chk@plt>
   1ad40:	ldr	r3, [pc, #32]	; 1ad68 <raspicommonsettings_dump_parameters@@Base+0xd8>
   1ad44:	add	r3, pc, r3
   1ad48:	b	1ad28 <raspicommonsettings_dump_parameters@@Base+0x98>
   1ad4c:	andeq	pc, r1, ip, asr r3	; <UNPREDICTABLE>
   1ad50:	andeq	r0, r0, r4, asr r3
   1ad54:	andeq	r9, r0, r4, asr #7
   1ad58:	andeq	r9, r0, r8, lsr #7
   1ad5c:			; <UNDEFINED> instruction: 0x000093b0
   1ad60:	andeq	r9, r0, r0, asr r3
   1ad64:	andeq	r9, r0, r8, lsr #7
   1ad68:	andeq	r9, r0, r8, lsr #6

0001ad6c <raspicommonsettings_display_help@@Base>:
   1ad6c:	push	{r3, lr}
   1ad70:	mov	r1, #1
   1ad74:	ldr	r3, [pc, #48]	; 1adac <raspicommonsettings_display_help@@Base+0x40>
   1ad78:	mov	r2, #27
   1ad7c:	ldr	ip, [pc, #44]	; 1adb0 <raspicommonsettings_display_help@@Base+0x44>
   1ad80:	add	r3, pc, r3
   1ad84:	ldr	r0, [pc, #40]	; 1adb4 <raspicommonsettings_display_help@@Base+0x48>
   1ad88:	ldr	r3, [r3, ip]
   1ad8c:	add	r0, pc, r0
   1ad90:	ldr	r3, [r3]
   1ad94:	bl	147b0 <fwrite@plt>
   1ad98:	ldr	r0, [pc, #24]	; 1adb8 <raspicommonsettings_display_help@@Base+0x4c>
   1ad9c:	mov	r1, #8
   1ada0:	add	r0, pc, r0
   1ada4:	pop	{r3, lr}
   1ada8:	b	1a5b8 <raspicli_display_help@@Base>
   1adac:	andeq	pc, r1, r8, ror r2	; <UNPREDICTABLE>
   1adb0:	andeq	r0, r0, r0, asr r3
   1adb4:	andeq	r9, r0, ip, asr r3
   1adb8:	andeq	pc, r1, r4, lsr #20

0001adbc <raspicommonsettings_parse_cmdline@@Base>:
   1adbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1adc0:	mov	r7, r0
   1adc4:	ldr	r4, [pc, #612]	; 1b030 <raspicommonsettings_parse_cmdline@@Base+0x274>
   1adc8:	sub	sp, sp, #20
   1adcc:	ldr	ip, [pc, #608]	; 1b034 <raspicommonsettings_parse_cmdline@@Base+0x278>
   1add0:	cmp	r1, #0
   1add4:	add	r4, pc, r4
   1add8:	mov	r6, r2
   1addc:	mov	r8, r3
   1ade0:	ldr	r5, [r4, ip]
   1ade4:	ldr	r0, [r5]
   1ade8:	str	r0, [sp, #12]
   1adec:	beq	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1adf0:	ldr	r0, [pc, #576]	; 1b038 <raspicommonsettings_parse_cmdline@@Base+0x27c>
   1adf4:	mov	r2, r1
   1adf8:	mov	r1, #8
   1adfc:	add	r3, sp, r1
   1ae00:	add	r0, pc, r0
   1ae04:	bl	1a450 <raspicli_get_command_id@@Base>
   1ae08:	cmn	r0, #1
   1ae0c:	beq	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1ae10:	ldr	r3, [sp, #8]
   1ae14:	cmp	r3, #0
   1ae18:	ble	1ae24 <raspicommonsettings_parse_cmdline@@Base+0x68>
   1ae1c:	cmp	r6, #0
   1ae20:	beq	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1ae24:	cmp	r0, #7
   1ae28:	addls	pc, pc, r0, lsl #2
   1ae2c:	b	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1ae30:	b	1ae94 <raspicommonsettings_parse_cmdline@@Base+0xd8>
   1ae34:	b	1ae50 <raspicommonsettings_parse_cmdline@@Base+0x94>
   1ae38:	b	1aeac <raspicommonsettings_parse_cmdline@@Base+0xf0>
   1ae3c:	b	1aed0 <raspicommonsettings_parse_cmdline@@Base+0x114>
   1ae40:	b	1af7c <raspicommonsettings_parse_cmdline@@Base+0x1c0>
   1ae44:	b	1af88 <raspicommonsettings_parse_cmdline@@Base+0x1cc>
   1ae48:	b	1afa8 <raspicommonsettings_parse_cmdline@@Base+0x1ec>
   1ae4c:	b	1ae88 <raspicommonsettings_parse_cmdline@@Base+0xcc>
   1ae50:	ldr	r1, [pc, #484]	; 1b03c <raspicommonsettings_parse_cmdline@@Base+0x280>
   1ae54:	mov	r0, r6
   1ae58:	add	r2, r7, #16
   1ae5c:	add	r1, pc, r1
   1ae60:	bl	14648 <sscanf@plt>
   1ae64:	cmp	r0, #1
   1ae68:	beq	1aec8 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   1ae6c:	mov	r0, #0
   1ae70:	ldr	r2, [sp, #12]
   1ae74:	ldr	r3, [r5]
   1ae78:	cmp	r2, r3
   1ae7c:	bne	1b02c <raspicommonsettings_parse_cmdline@@Base+0x270>
   1ae80:	add	sp, sp, #20
   1ae84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ae88:	mov	r0, #1
   1ae8c:	str	r0, [r7, #40]	; 0x28
   1ae90:	b	1ae70 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   1ae94:	bl	1b300 <get_app_name@@Base>
   1ae98:	bl	14a44 <basename@plt>
   1ae9c:	mov	r1, r8
   1aea0:	bl	1b0dc <display_valid_parameters@@Base>
   1aea4:	mov	r0, #0
   1aea8:	bl	14a14 <exit@plt>
   1aeac:	ldr	r1, [pc, #396]	; 1b040 <raspicommonsettings_parse_cmdline@@Base+0x284>
   1aeb0:	mov	r0, r6
   1aeb4:	add	r2, r7, #20
   1aeb8:	add	r1, pc, r1
   1aebc:	bl	14648 <sscanf@plt>
   1aec0:	cmp	r0, #1
   1aec4:	bne	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1aec8:	mov	r0, #2
   1aecc:	b	1ae70 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   1aed0:	mov	r0, r6
   1aed4:	bl	1463c <strlen@plt>
   1aed8:	subs	r8, r0, #0
   1aedc:	beq	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1aee0:	ldrb	r3, [r6]
   1aee4:	cmp	r3, #0
   1aee8:	beq	1af54 <raspicommonsettings_parse_cmdline@@Base+0x198>
   1aeec:	mov	r0, r6
   1aef0:	mov	r1, #37	; 0x25
   1aef4:	bl	14390 <strchr@plt>
   1aef8:	subs	r9, r0, #0
   1aefc:	beq	1af54 <raspicommonsettings_parse_cmdline@@Base+0x198>
   1af00:	bl	147d4 <__ctype_b_loc@plt>
   1af04:	add	lr, r9, #1
   1af08:	mov	r1, #0
   1af0c:	ldr	r0, [r0]
   1af10:	b	1af18 <raspicommonsettings_parse_cmdline@@Base+0x15c>
   1af14:	add	r1, r1, #1
   1af18:	mov	r3, lr
   1af1c:	add	lr, lr, #1
   1af20:	ldrb	ip, [r3]
   1af24:	lsl	r2, ip, #1
   1af28:	ldrh	r2, [r0, r2]
   1af2c:	tst	r2, #2048	; 0x800
   1af30:	bne	1af14 <raspicommonsettings_parse_cmdline@@Base+0x158>
   1af34:	cmp	ip, #37	; 0x25
   1af38:	beq	1afc8 <raspicommonsettings_parse_cmdline@@Base+0x20c>
   1af3c:	cmp	ip, #100	; 0x64
   1af40:	bne	1afd0 <raspicommonsettings_parse_cmdline@@Base+0x214>
   1af44:	ldrb	r2, [r3, #1]
   1af48:	add	r0, r3, #1
   1af4c:	cmp	r2, #0
   1af50:	bne	1aef0 <raspicommonsettings_parse_cmdline@@Base+0x134>
   1af54:	add	r0, r8, #10
   1af58:	bl	147ec <malloc@plt>
   1af5c:	cmp	r0, #0
   1af60:	str	r0, [r7, #24]
   1af64:	beq	1aff0 <raspicommonsettings_parse_cmdline@@Base+0x234>
   1af68:	mov	r1, r6
   1af6c:	add	r2, r8, #1
   1af70:	bl	14354 <strncpy@plt>
   1af74:	mov	r0, #2
   1af78:	b	1ae70 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   1af7c:	mov	r0, #1
   1af80:	str	r0, [r7, #36]	; 0x24
   1af84:	b	1ae70 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   1af88:	ldr	r1, [pc, #180]	; 1b044 <raspicommonsettings_parse_cmdline@@Base+0x288>
   1af8c:	mov	r0, r6
   1af90:	add	r2, r7, #28
   1af94:	add	r1, pc, r1
   1af98:	bl	14648 <sscanf@plt>
   1af9c:	cmp	r0, #1
   1afa0:	bne	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1afa4:	b	1aec8 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   1afa8:	ldr	r1, [pc, #152]	; 1b048 <raspicommonsettings_parse_cmdline@@Base+0x28c>
   1afac:	mov	r0, r6
   1afb0:	add	r2, r7, #32
   1afb4:	add	r1, pc, r1
   1afb8:	bl	14648 <sscanf@plt>
   1afbc:	cmp	r0, #1
   1afc0:	bne	1ae6c <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1afc4:	b	1aec8 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   1afc8:	cmp	r1, #0
   1afcc:	beq	1af44 <raspicommonsettings_parse_cmdline@@Base+0x188>
   1afd0:	ldr	r3, [pc, #116]	; 1b04c <raspicommonsettings_parse_cmdline@@Base+0x290>
   1afd4:	mov	r1, #1
   1afd8:	ldr	r2, [pc, #112]	; 1b050 <raspicommonsettings_parse_cmdline@@Base+0x294>
   1afdc:	ldr	r3, [r4, r3]
   1afe0:	add	r2, pc, r2
   1afe4:	ldr	r0, [r3]
   1afe8:	bl	14834 <__fprintf_chk@plt>
   1afec:	b	1af54 <raspicommonsettings_parse_cmdline@@Base+0x198>
   1aff0:	ldr	r3, [pc, #92]	; 1b054 <raspicommonsettings_parse_cmdline@@Base+0x298>
   1aff4:	mov	r2, #190	; 0xbe
   1aff8:	ldr	r0, [pc, #88]	; 1b058 <raspicommonsettings_parse_cmdline@@Base+0x29c>
   1affc:	add	r3, pc, r3
   1b000:	ldr	r1, [pc, #84]	; 1b05c <raspicommonsettings_parse_cmdline@@Base+0x2a0>
   1b004:	str	r3, [sp]
   1b008:	add	r0, pc, r0
   1b00c:	ldr	r3, [pc, #76]	; 1b060 <raspicommonsettings_parse_cmdline@@Base+0x2a4>
   1b010:	add	r1, pc, r1
   1b014:	add	r3, pc, r3
   1b018:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1b01c:	ldr	r0, [r7, #24]
   1b020:	cmp	r0, #0
   1b024:	beq	1aec8 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   1b028:	b	1af68 <raspicommonsettings_parse_cmdline@@Base+0x1ac>
   1b02c:	bl	14804 <__stack_chk_fail@plt>
   1b030:	andeq	pc, r1, r4, lsr #4
   1b034:	andeq	r0, r0, r4, lsr r3
   1b038:	andeq	pc, r1, r4, asr #19
   1b03c:	andeq	r8, r0, r4, lsr #13
   1b040:	andeq	r8, r0, r8, asr #12
   1b044:	andeq	r8, r0, ip, ror #10
   1b048:	andeq	r8, r0, ip, asr #10
   1b04c:	andeq	r0, r0, r4, asr r3
   1b050:	andeq	r9, r0, r4, lsr #2
   1b054:	andeq	r9, r0, r4, asr #3
   1b058:	andeq	r9, r0, r8, asr #2
   1b05c:	andeq	r9, r0, ip, lsr #32
   1b060:	andeq	r8, r0, r4

0001b064 <print_app_details@@Base>:
   1b064:	ldr	r2, [pc, #96]	; 1b0cc <print_app_details@@Base+0x68>
   1b068:	push	{r4, lr}
   1b06c:	add	r2, pc, r2
   1b070:	mov	r4, r0
   1b074:	sub	sp, sp, #8
   1b078:	ldr	r3, [r2]
   1b07c:	cmp	r3, #0
   1b080:	movne	r0, r3
   1b084:	beq	1b0bc <print_app_details@@Base+0x58>
   1b088:	bl	14a44 <basename@plt>
   1b08c:	ldr	ip, [pc, #60]	; 1b0d0 <print_app_details@@Base+0x6c>
   1b090:	ldr	r2, [pc, #60]	; 1b0d4 <print_app_details@@Base+0x70>
   1b094:	mov	r1, #1
   1b098:	add	ip, pc, ip
   1b09c:	str	ip, [sp]
   1b0a0:	add	r2, pc, r2
   1b0a4:	str	ip, [sp, #4]
   1b0a8:	mov	r3, r0
   1b0ac:	mov	r0, r4
   1b0b0:	bl	14834 <__fprintf_chk@plt>
   1b0b4:	add	sp, sp, #8
   1b0b8:	pop	{r4, pc}
   1b0bc:	ldr	r0, [pc, #20]	; 1b0d8 <print_app_details@@Base+0x74>
   1b0c0:	add	r0, pc, r0
   1b0c4:	str	r0, [r2]
   1b0c8:	b	1b088 <print_app_details@@Base+0x24>
   1b0cc:	andeq	pc, r1, ip, lsr #31
   1b0d0:	andeq	r9, r0, r8, ror #6
   1b0d4:	andeq	r9, r0, r0, asr #6
   1b0d8:	andeq	r9, r0, r4, lsl r3

0001b0dc <display_valid_parameters@@Base>:
   1b0dc:	ldr	r3, [pc, #72]	; 1b12c <display_valid_parameters@@Base+0x50>
   1b0e0:	ldr	r2, [pc, #72]	; 1b130 <display_valid_parameters@@Base+0x54>
   1b0e4:	add	r3, pc, r3
   1b0e8:	push	{r4, r5, r6, lr}
   1b0ec:	mov	r6, r0
   1b0f0:	ldr	r4, [r3, r2]
   1b0f4:	mov	r5, r1
   1b0f8:	ldr	r0, [r4]
   1b0fc:	bl	1b064 <print_app_details@@Base>
   1b100:	cmp	r5, #0
   1b104:	beq	1b110 <display_valid_parameters@@Base+0x34>
   1b108:	mov	r0, r6
   1b10c:	blx	r5
   1b110:	bl	1ad6c <raspicommonsettings_display_help@@Base>
   1b114:	bl	1ac00 <raspipreview_display_help@@Base>
   1b118:	bl	18250 <raspicamcontrol_display_help@@Base>
   1b11c:	ldr	r1, [r4]
   1b120:	mov	r0, #10
   1b124:	pop	{r4, r5, r6, lr}
   1b128:	b	14864 <fputc@plt>
   1b12c:	andeq	lr, r1, r4, lsl pc
   1b130:	andeq	r0, r0, r0, asr r3

0001b134 <get_sensor_defaults@@Base>:
   1b134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b138:	mov	r8, r1
   1b13c:	ldr	r4, [pc, #396]	; 1b2d0 <get_sensor_defaults@@Base+0x19c>
   1b140:	mov	r9, r0
   1b144:	ldr	ip, [pc, #392]	; 1b2d4 <get_sensor_defaults@@Base+0x1a0>
   1b148:	mov	r0, r1
   1b14c:	add	r4, pc, r4
   1b150:	ldr	r1, [pc, #384]	; 1b2d8 <get_sensor_defaults@@Base+0x1a4>
   1b154:	mov	r6, r3
   1b158:	sub	sp, sp, #160	; 0xa0
   1b15c:	ldr	r5, [r4, ip]
   1b160:	add	r1, pc, r1
   1b164:	mov	r7, r2
   1b168:	mov	r2, #16
   1b16c:	ldr	r3, [r5]
   1b170:	str	r3, [sp, #156]	; 0x9c
   1b174:	bl	14354 <strncpy@plt>
   1b178:	ldr	r0, [pc, #348]	; 1b2dc <get_sensor_defaults@@Base+0x1a8>
   1b17c:	mov	r1, sp
   1b180:	add	r0, pc, r0
   1b184:	bl	149cc <mmal_component_create@plt>
   1b188:	cmp	r0, #0
   1b18c:	beq	1b1ec <get_sensor_defaults@@Base+0xb8>
   1b190:	ldr	r3, [pc, #328]	; 1b2e0 <get_sensor_defaults@@Base+0x1ac>
   1b194:	ldr	r0, [r4, r3]
   1b198:	ldr	r3, [r0]
   1b19c:	cmp	r3, #1
   1b1a0:	bls	1b1b4 <get_sensor_defaults@@Base+0x80>
   1b1a4:	ldr	r2, [pc, #312]	; 1b2e4 <get_sensor_defaults@@Base+0x1b0>
   1b1a8:	mov	r1, #2
   1b1ac:	add	r2, pc, r2
   1b1b0:	bl	1493c <vcos_log_impl@plt>
   1b1b4:	ldr	r3, [r7]
   1b1b8:	ldr	r2, [sp, #156]	; 0x9c
   1b1bc:	cmp	r3, #0
   1b1c0:	moveq	r3, #2592	; 0xa20
   1b1c4:	streq	r3, [r7]
   1b1c8:	ldr	r3, [r6]
   1b1cc:	cmp	r3, #0
   1b1d0:	movweq	r3, #1944	; 0x798
   1b1d4:	streq	r3, [r6]
   1b1d8:	ldr	r3, [r5]
   1b1dc:	cmp	r2, r3
   1b1e0:	bne	1b2cc <get_sensor_defaults@@Base+0x198>
   1b1e4:	add	sp, sp, #160	; 0xa0
   1b1e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b1ec:	ldr	r0, [sp]
   1b1f0:	add	sl, sp, #4
   1b1f4:	mov	r2, #148	; 0x94
   1b1f8:	mov	r3, #28
   1b1fc:	mov	r1, sl
   1b200:	movt	r3, #1
   1b204:	ldr	r0, [r0, #16]
   1b208:	str	r3, [sp, #4]
   1b20c:	str	r2, [sp, #8]
   1b210:	bl	14450 <mmal_port_parameter_get@plt>
   1b214:	cmp	r0, #0
   1b218:	bne	1b228 <get_sensor_defaults@@Base+0xf4>
   1b21c:	ldr	r0, [sp]
   1b220:	bl	14510 <mmal_component_destroy@plt>
   1b224:	b	1b1b4 <get_sensor_defaults@@Base+0x80>
   1b228:	ldr	r3, [sp]
   1b22c:	mov	r1, sl
   1b230:	mov	r2, #152	; 0x98
   1b234:	str	r2, [sp, #8]
   1b238:	ldr	r0, [r3, #16]
   1b23c:	bl	14450 <mmal_port_parameter_get@plt>
   1b240:	cmp	r0, #0
   1b244:	bne	1b2a4 <get_sensor_defaults@@Base+0x170>
   1b248:	ldr	r3, [sp, #12]
   1b24c:	cmp	r3, r9
   1b250:	bls	1b2a4 <get_sensor_defaults@@Base+0x170>
   1b254:	ldr	r3, [r7]
   1b258:	add	r1, r9, #1
   1b25c:	mov	r0, r8
   1b260:	cmp	r3, #0
   1b264:	add	r1, sl, r1, lsl #5
   1b268:	addeq	r2, sp, #160	; 0xa0
   1b26c:	addeq	r3, r2, r9, lsl #5
   1b270:	ldreq	r3, [r3, #-136]	; 0xffffff78
   1b274:	streq	r3, [r7]
   1b278:	ldr	r3, [r6]
   1b27c:	cmp	r3, #0
   1b280:	addeq	r2, sp, #160	; 0xa0
   1b284:	addeq	r3, r2, r9, lsl #5
   1b288:	mov	r2, #16
   1b28c:	ldreq	r3, [r3, #-132]	; 0xffffff7c
   1b290:	streq	r3, [r6]
   1b294:	bl	14354 <strncpy@plt>
   1b298:	mov	r3, #0
   1b29c:	strb	r3, [r8, #15]
   1b2a0:	b	1b21c <get_sensor_defaults@@Base+0xe8>
   1b2a4:	ldr	r3, [pc, #52]	; 1b2e0 <get_sensor_defaults@@Base+0x1ac>
   1b2a8:	ldr	r0, [r4, r3]
   1b2ac:	ldr	r3, [r0]
   1b2b0:	cmp	r3, #1
   1b2b4:	bls	1b21c <get_sensor_defaults@@Base+0xe8>
   1b2b8:	ldr	r2, [pc, #40]	; 1b2e8 <get_sensor_defaults@@Base+0x1b4>
   1b2bc:	mov	r1, #2
   1b2c0:	add	r2, pc, r2
   1b2c4:	bl	1493c <vcos_log_impl@plt>
   1b2c8:	b	1b21c <get_sensor_defaults@@Base+0xe8>
   1b2cc:	bl	14804 <__stack_chk_fail@plt>
   1b2d0:	andeq	lr, r1, ip, lsr #29
   1b2d4:	andeq	r0, r0, r4, lsr r3
   1b2d8:	andeq	r9, r0, r4, lsr #5
   1b2dc:	andeq	r9, r0, ip, lsl #5
   1b2e0:	andeq	r0, r0, r0, asr #6
   1b2e4:	andeq	r9, r0, ip, lsr #5
   1b2e8:	andeq	r9, r0, ip, asr r1

0001b2ec <set_app_name@@Base>:
   1b2ec:	ldr	r3, [pc, #8]	; 1b2fc <set_app_name@@Base+0x10>
   1b2f0:	add	r3, pc, r3
   1b2f4:	str	r0, [r3]
   1b2f8:	bx	lr
   1b2fc:	andeq	pc, r1, r8, lsr #26

0001b300 <get_app_name@@Base>:
   1b300:	ldr	r3, [pc, #4]	; 1b30c <get_app_name@@Base+0xc>
   1b304:	ldr	r0, [pc, r3]
   1b308:	bx	lr
   1b30c:	andeq	pc, r1, r4, lsl sp	; <UNPREDICTABLE>

0001b310 <connect_ports@@Base>:
   1b310:	push	{r3, r4, r5, lr}
   1b314:	mov	r3, r1
   1b318:	mov	r4, r2
   1b31c:	mov	r1, r0
   1b320:	mov	r2, r3
   1b324:	mov	r0, r4
   1b328:	mov	r3, #3
   1b32c:	bl	1433c <mmal_connection_create@plt>
   1b330:	subs	r5, r0, #0
   1b334:	beq	1b340 <connect_ports@@Base+0x30>
   1b338:	mov	r0, r5
   1b33c:	pop	{r3, r4, r5, pc}
   1b340:	ldr	r0, [r4]
   1b344:	bl	14258 <mmal_connection_enable@plt>
   1b348:	subs	r5, r0, #0
   1b34c:	beq	1b338 <connect_ports@@Base+0x28>
   1b350:	ldr	r0, [r4]
   1b354:	bl	141d4 <mmal_connection_destroy@plt>
   1b358:	mov	r0, r5
   1b35c:	pop	{r3, r4, r5, pc}

0001b360 <check_disable_port@@Base>:
   1b360:	subs	r3, r0, #0
   1b364:	bxeq	lr
   1b368:	ldr	r3, [r3, #16]
   1b36c:	cmp	r3, #0
   1b370:	bxeq	lr
   1b374:	b	145b8 <mmal_port_disable@plt>

0001b378 <default_signal_handler@@Base>:
   1b378:	push	{r3, lr}
   1b37c:	cmp	r0, #10
   1b380:	ldr	r3, [pc, #48]	; 1b3b8 <default_signal_handler@@Base+0x40>
   1b384:	add	r3, pc, r3
   1b388:	popeq	{r3, pc}
   1b38c:	ldr	r2, [pc, #40]	; 1b3bc <default_signal_handler@@Base+0x44>
   1b390:	ldr	r0, [r3, r2]
   1b394:	ldr	r3, [r0]
   1b398:	cmp	r3, #1
   1b39c:	bls	1b3b0 <default_signal_handler@@Base+0x38>
   1b3a0:	ldr	r2, [pc, #24]	; 1b3c0 <default_signal_handler@@Base+0x48>
   1b3a4:	mov	r1, #2
   1b3a8:	add	r2, pc, r2
   1b3ac:	bl	1493c <vcos_log_impl@plt>
   1b3b0:	mov	r0, #130	; 0x82
   1b3b4:	bl	14a14 <exit@plt>
   1b3b8:	andeq	lr, r1, r4, ror ip
   1b3bc:	andeq	r0, r0, r0, asr #6
   1b3c0:	ldrdeq	r9, [r0], -r8

0001b3c4 <mmal_status_to_int@@Base>:
   1b3c4:	push	{r3, lr}
   1b3c8:	cmp	r0, #0
   1b3cc:	ldr	r3, [pc, #732]	; 1b6b0 <mmal_status_to_int@@Base+0x2ec>
   1b3d0:	add	r3, pc, r3
   1b3d4:	popeq	{r3, pc}
   1b3d8:	sub	r0, r0, #1
   1b3dc:	ldr	r2, [pc, #720]	; 1b6b4 <mmal_status_to_int@@Base+0x2f0>
   1b3e0:	cmp	r0, #14
   1b3e4:	addls	pc, pc, r0, lsl #2
   1b3e8:	b	1b688 <mmal_status_to_int@@Base+0x2c4>
   1b3ec:	b	1b658 <mmal_status_to_int@@Base+0x294>
   1b3f0:	b	1b630 <mmal_status_to_int@@Base+0x26c>
   1b3f4:	b	1b608 <mmal_status_to_int@@Base+0x244>
   1b3f8:	b	1b5e0 <mmal_status_to_int@@Base+0x21c>
   1b3fc:	b	1b5b8 <mmal_status_to_int@@Base+0x1f4>
   1b400:	b	1b590 <mmal_status_to_int@@Base+0x1cc>
   1b404:	b	1b568 <mmal_status_to_int@@Base+0x1a4>
   1b408:	b	1b540 <mmal_status_to_int@@Base+0x17c>
   1b40c:	b	1b518 <mmal_status_to_int@@Base+0x154>
   1b410:	b	1b4f0 <mmal_status_to_int@@Base+0x12c>
   1b414:	b	1b4c8 <mmal_status_to_int@@Base+0x104>
   1b418:	b	1b4a0 <mmal_status_to_int@@Base+0xdc>
   1b41c:	b	1b478 <mmal_status_to_int@@Base+0xb4>
   1b420:	b	1b450 <mmal_status_to_int@@Base+0x8c>
   1b424:	b	1b428 <mmal_status_to_int@@Base+0x64>
   1b428:	ldr	r0, [r3, r2]
   1b42c:	ldr	r3, [r0]
   1b430:	cmp	r3, #1
   1b434:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b438:	ldr	r2, [pc, #632]	; 1b6b8 <mmal_status_to_int@@Base+0x2f4>
   1b43c:	mov	r1, #2
   1b440:	add	r2, pc, r2
   1b444:	bl	1493c <vcos_log_impl@plt>
   1b448:	mov	r0, #1
   1b44c:	pop	{r3, pc}
   1b450:	ldr	r0, [r3, r2]
   1b454:	ldr	r3, [r0]
   1b458:	cmp	r3, #1
   1b45c:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b460:	ldr	r2, [pc, #596]	; 1b6bc <mmal_status_to_int@@Base+0x2f8>
   1b464:	mov	r1, #2
   1b468:	add	r2, pc, r2
   1b46c:	bl	1493c <vcos_log_impl@plt>
   1b470:	mov	r0, #1
   1b474:	pop	{r3, pc}
   1b478:	ldr	r0, [r3, r2]
   1b47c:	ldr	r3, [r0]
   1b480:	cmp	r3, #1
   1b484:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b488:	ldr	r2, [pc, #560]	; 1b6c0 <mmal_status_to_int@@Base+0x2fc>
   1b48c:	mov	r1, #2
   1b490:	add	r2, pc, r2
   1b494:	bl	1493c <vcos_log_impl@plt>
   1b498:	mov	r0, #1
   1b49c:	pop	{r3, pc}
   1b4a0:	ldr	r0, [r3, r2]
   1b4a4:	ldr	r3, [r0]
   1b4a8:	cmp	r3, #1
   1b4ac:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b4b0:	ldr	r2, [pc, #524]	; 1b6c4 <mmal_status_to_int@@Base+0x300>
   1b4b4:	mov	r1, #2
   1b4b8:	add	r2, pc, r2
   1b4bc:	bl	1493c <vcos_log_impl@plt>
   1b4c0:	mov	r0, #1
   1b4c4:	pop	{r3, pc}
   1b4c8:	ldr	r0, [r3, r2]
   1b4cc:	ldr	r3, [r0]
   1b4d0:	cmp	r3, #1
   1b4d4:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b4d8:	ldr	r2, [pc, #488]	; 1b6c8 <mmal_status_to_int@@Base+0x304>
   1b4dc:	mov	r1, #2
   1b4e0:	add	r2, pc, r2
   1b4e4:	bl	1493c <vcos_log_impl@plt>
   1b4e8:	mov	r0, #1
   1b4ec:	pop	{r3, pc}
   1b4f0:	ldr	r0, [r3, r2]
   1b4f4:	ldr	r3, [r0]
   1b4f8:	cmp	r3, #1
   1b4fc:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b500:	ldr	r2, [pc, #452]	; 1b6cc <mmal_status_to_int@@Base+0x308>
   1b504:	mov	r1, #2
   1b508:	add	r2, pc, r2
   1b50c:	bl	1493c <vcos_log_impl@plt>
   1b510:	mov	r0, #1
   1b514:	pop	{r3, pc}
   1b518:	ldr	r0, [r3, r2]
   1b51c:	ldr	r3, [r0]
   1b520:	cmp	r3, #1
   1b524:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b528:	ldr	r2, [pc, #416]	; 1b6d0 <mmal_status_to_int@@Base+0x30c>
   1b52c:	mov	r1, #2
   1b530:	add	r2, pc, r2
   1b534:	bl	1493c <vcos_log_impl@plt>
   1b538:	mov	r0, #1
   1b53c:	pop	{r3, pc}
   1b540:	ldr	r0, [r3, r2]
   1b544:	ldr	r3, [r0]
   1b548:	cmp	r3, #1
   1b54c:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b550:	ldr	r2, [pc, #380]	; 1b6d4 <mmal_status_to_int@@Base+0x310>
   1b554:	mov	r1, #2
   1b558:	add	r2, pc, r2
   1b55c:	bl	1493c <vcos_log_impl@plt>
   1b560:	mov	r0, #1
   1b564:	pop	{r3, pc}
   1b568:	ldr	r0, [r3, r2]
   1b56c:	ldr	r3, [r0]
   1b570:	cmp	r3, #1
   1b574:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b578:	ldr	r2, [pc, #344]	; 1b6d8 <mmal_status_to_int@@Base+0x314>
   1b57c:	mov	r1, #2
   1b580:	add	r2, pc, r2
   1b584:	bl	1493c <vcos_log_impl@plt>
   1b588:	mov	r0, #1
   1b58c:	pop	{r3, pc}
   1b590:	ldr	r0, [r3, r2]
   1b594:	ldr	r3, [r0]
   1b598:	cmp	r3, #1
   1b59c:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b5a0:	ldr	r2, [pc, #308]	; 1b6dc <mmal_status_to_int@@Base+0x318>
   1b5a4:	mov	r1, #2
   1b5a8:	add	r2, pc, r2
   1b5ac:	bl	1493c <vcos_log_impl@plt>
   1b5b0:	mov	r0, #1
   1b5b4:	pop	{r3, pc}
   1b5b8:	ldr	r0, [r3, r2]
   1b5bc:	ldr	r3, [r0]
   1b5c0:	cmp	r3, #1
   1b5c4:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b5c8:	ldr	r2, [pc, #272]	; 1b6e0 <mmal_status_to_int@@Base+0x31c>
   1b5cc:	mov	r1, #2
   1b5d0:	add	r2, pc, r2
   1b5d4:	bl	1493c <vcos_log_impl@plt>
   1b5d8:	mov	r0, #1
   1b5dc:	pop	{r3, pc}
   1b5e0:	ldr	r0, [r3, r2]
   1b5e4:	ldr	r3, [r0]
   1b5e8:	cmp	r3, #1
   1b5ec:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b5f0:	ldr	r2, [pc, #236]	; 1b6e4 <mmal_status_to_int@@Base+0x320>
   1b5f4:	mov	r1, #2
   1b5f8:	add	r2, pc, r2
   1b5fc:	bl	1493c <vcos_log_impl@plt>
   1b600:	mov	r0, #1
   1b604:	pop	{r3, pc}
   1b608:	ldr	r0, [r3, r2]
   1b60c:	ldr	r3, [r0]
   1b610:	cmp	r3, #1
   1b614:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b618:	ldr	r2, [pc, #200]	; 1b6e8 <mmal_status_to_int@@Base+0x324>
   1b61c:	mov	r1, #2
   1b620:	add	r2, pc, r2
   1b624:	bl	1493c <vcos_log_impl@plt>
   1b628:	mov	r0, #1
   1b62c:	pop	{r3, pc}
   1b630:	ldr	r0, [r3, r2]
   1b634:	ldr	r3, [r0]
   1b638:	cmp	r3, #1
   1b63c:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b640:	ldr	r2, [pc, #164]	; 1b6ec <mmal_status_to_int@@Base+0x328>
   1b644:	mov	r1, #2
   1b648:	add	r2, pc, r2
   1b64c:	bl	1493c <vcos_log_impl@plt>
   1b650:	mov	r0, #1
   1b654:	pop	{r3, pc}
   1b658:	ldr	r0, [r3, r2]
   1b65c:	ldr	r3, [r0]
   1b660:	cmp	r3, #1
   1b664:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b668:	ldr	r2, [pc, #128]	; 1b6f0 <mmal_status_to_int@@Base+0x32c>
   1b66c:	mov	r1, #2
   1b670:	add	r2, pc, r2
   1b674:	bl	1493c <vcos_log_impl@plt>
   1b678:	mov	r0, #1
   1b67c:	pop	{r3, pc}
   1b680:	mov	r0, #1
   1b684:	pop	{r3, pc}
   1b688:	ldr	r0, [r3, r2]
   1b68c:	ldr	r3, [r0]
   1b690:	cmp	r3, #1
   1b694:	bls	1b680 <mmal_status_to_int@@Base+0x2bc>
   1b698:	ldr	r2, [pc, #84]	; 1b6f4 <mmal_status_to_int@@Base+0x330>
   1b69c:	mov	r1, #2
   1b6a0:	add	r2, pc, r2
   1b6a4:	bl	1493c <vcos_log_impl@plt>
   1b6a8:	mov	r0, #1
   1b6ac:	pop	{r3, pc}
   1b6b0:	andeq	lr, r1, r8, lsr #24
   1b6b4:	andeq	r0, r0, r0, asr #6
   1b6b8:	andeq	r9, r0, r0, lsl r2
   1b6bc:			; <UNDEFINED> instruction: 0x000091b4
   1b6c0:	andeq	r9, r0, r4, ror r1
   1b6c4:	andeq	r9, r0, r0, lsr r1
   1b6c8:	ldrdeq	r9, [r0], -r0
   1b6cc:	andeq	r9, r0, r4, ror r0
   1b6d0:	andeq	r9, r0, r0, lsr #32
   1b6d4:	andeq	r8, r0, r8, ror #31
   1b6d8:			; <UNDEFINED> instruction: 0x00008fb4
   1b6dc:	andeq	r8, r0, r0, ror pc
   1b6e0:	andeq	r8, r0, ip, lsr #30
   1b6e4:	andeq	r8, r0, r8, ror #29
   1b6e8:	andeq	r8, r0, ip, lsr #29
   1b6ec:	andeq	r8, r0, ip, asr lr
   1b6f0:	andeq	r8, r0, r4, lsr #28
   1b6f4:			; <UNDEFINED> instruction: 0x00008fbc

0001b6f8 <get_microseconds64@@Base>:
   1b6f8:	ldr	r3, [pc, #124]	; 1b77c <get_microseconds64@@Base+0x84>
   1b6fc:	mov	r0, #4
   1b700:	ldr	r2, [pc, #120]	; 1b780 <get_microseconds64@@Base+0x88>
   1b704:	add	r3, pc, r3
   1b708:	push	{r4, r5, r6, r7, lr}
   1b70c:	sub	sp, sp, #20
   1b710:	ldr	r4, [r3, r2]
   1b714:	add	r1, sp, r0
   1b718:	ldr	r3, [r4]
   1b71c:	str	r3, [sp, #12]
   1b720:	bl	142a0 <clock_gettime@plt>
   1b724:	ldr	r1, [sp, #8]
   1b728:	movw	r2, #19923	; 0x4dd3
   1b72c:	movt	r2, #4194	; 0x1062
   1b730:	ldr	r0, [sp, #4]
   1b734:	movw	r3, #16960	; 0x4240
   1b738:	movt	r3, #15
   1b73c:	smull	r6, r2, r2, r1
   1b740:	asr	r1, r1, #31
   1b744:	mul	r0, r3, r0
   1b748:	ldr	r5, [sp, #12]
   1b74c:	ldr	ip, [r4]
   1b750:	rsb	r2, r1, r2, asr #6
   1b754:	adds	r6, r2, r0
   1b758:	asr	r3, r2, #31
   1b75c:	adc	r7, r3, r0, asr #31
   1b760:	cmp	r5, ip
   1b764:	mov	r0, r6
   1b768:	mov	r1, r7
   1b76c:	bne	1b778 <get_microseconds64@@Base+0x80>
   1b770:	add	sp, sp, #20
   1b774:	pop	{r4, r5, r6, r7, pc}
   1b778:	bl	14804 <__stack_chk_fail@plt>
   1b77c:	strdeq	lr, [r1], -r4
   1b780:	andeq	r0, r0, r4, lsr r3
   1b784:	andeq	r0, r0, r0
   1b788:	ldr	r3, [pc, #472]	; 1b968 <get_microseconds64@@Base+0x270>
   1b78c:	ldr	r2, [pc, #472]	; 1b96c <get_microseconds64@@Base+0x274>
   1b790:	add	r3, pc, r3
   1b794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b798:	sub	sp, sp, #28
   1b79c:	ldr	sl, [pc, #460]	; 1b970 <get_microseconds64@@Base+0x278>
   1b7a0:	ldr	r2, [r3, r2]
   1b7a4:	ldr	r6, [pc, #456]	; 1b974 <get_microseconds64@@Base+0x27c>
   1b7a8:	add	sl, pc, sl
   1b7ac:	add	r3, sl, #8960	; 0x2300
   1b7b0:	ldr	r4, [pc, #448]	; 1b978 <get_microseconds64@@Base+0x280>
   1b7b4:	add	r6, pc, r6
   1b7b8:	add	r3, r3, #32
   1b7bc:	add	r8, r6, #17664	; 0x4500
   1b7c0:	str	r3, [sp, #4]
   1b7c4:	ldr	r3, [r2]
   1b7c8:	add	r8, r8, #232	; 0xe8
   1b7cc:	add	r4, pc, r4
   1b7d0:	str	r2, [sp, #8]
   1b7d4:	str	r4, [sp, #12]
   1b7d8:	str	r3, [sp, #20]
   1b7dc:	ldr	r5, [sp, #12]
   1b7e0:	movw	r3, #17904	; 0x45f0
   1b7e4:	ldr	r9, [r5, r3]
   1b7e8:	cmp	r9, #0
   1b7ec:	bne	1b908 <get_microseconds64@@Base+0x210>
   1b7f0:	add	r7, r6, #8960	; 0x2300
   1b7f4:	mov	r4, #0
   1b7f8:	mov	r5, #0
   1b7fc:	add	r7, r7, #24
   1b800:	b	1b858 <get_microseconds64@@Base+0x160>
   1b804:	vldr	d7, [r6, #56]	; 0x38
   1b808:	vcmp.f64	d7, #0.0
   1b80c:	vmrs	APSR_nzcv, fpscr
   1b810:	beq	1b888 <get_microseconds64@@Base+0x190>
   1b814:	ldr	r3, [r6, #80]	; 0x50
   1b818:	cmp	r3, #1
   1b81c:	ble	1b888 <get_microseconds64@@Base+0x190>
   1b820:	mov	r0, r8
   1b824:	bl	147c8 <time@plt>
   1b828:	mov	r0, r6
   1b82c:	bl	14630 <pthread_mutex_lock@plt>
   1b830:	add	r1, r6, #48	; 0x30
   1b834:	movw	r2, #8912	; 0x22d0
   1b838:	mov	r0, r7
   1b83c:	bl	14678 <memcpy@plt>
   1b840:	mov	r0, r6
   1b844:	bl	145dc <pthread_mutex_unlock@plt>
   1b848:	movw	r3, #17904	; 0x45f0
   1b84c:	ldr	r3, [r6, r3]
   1b850:	cmp	r3, #0
   1b854:	bne	1b908 <get_microseconds64@@Base+0x210>
   1b858:	add	fp, r6, #24
   1b85c:	strd	r4, [r6, #48]	; 0x30
   1b860:	str	r9, [r6, #80]	; 0x50
   1b864:	mov	r0, fp
   1b868:	bl	1c2f8 <connect_gpsd@@Base>
   1b86c:	cmp	r0, #0
   1b870:	blt	1b908 <get_microseconds64@@Base+0x210>
   1b874:	mov	r0, fp
   1b878:	bl	1c400 <read_gps_data_once@@Base>
   1b87c:	cmp	r0, #0
   1b880:	blt	1b908 <get_microseconds64@@Base+0x210>
   1b884:	bne	1b804 <get_microseconds64@@Base+0x10c>
   1b888:	add	r0, sp, #16
   1b88c:	bl	147c8 <time@plt>
   1b890:	movw	r3, #17896	; 0x45e8
   1b894:	ldr	r3, [sl, r3]
   1b898:	ldr	r2, [sp, #16]
   1b89c:	rsb	r3, r3, r2
   1b8a0:	cmp	r3, #5
   1b8a4:	bgt	1b928 <get_microseconds64@@Base+0x230>
   1b8a8:	ldr	r7, [pc, #204]	; 1b97c <get_microseconds64@@Base+0x284>
   1b8ac:	mov	r1, #0
   1b8b0:	mov	r0, #4
   1b8b4:	add	r7, pc, r7
   1b8b8:	ldrd	r2, [r7, #48]	; 0x30
   1b8bc:	and	r2, r2, r0
   1b8c0:	and	r3, r3, r1
   1b8c4:	orrs	r1, r2, r3
   1b8c8:	beq	1b7dc <get_microseconds64@@Base+0xe4>
   1b8cc:	mov	r0, r7
   1b8d0:	mov	r4, #4
   1b8d4:	bl	14630 <pthread_mutex_lock@plt>
   1b8d8:	movw	r1, #8984	; 0x2318
   1b8dc:	ldrd	r2, [r7, r1]
   1b8e0:	mov	r5, #0
   1b8e4:	add	ip, r7, #8960	; 0x2300
   1b8e8:	mov	r0, r7
   1b8ec:	orr	r2, r2, r4
   1b8f0:	orr	r3, r3, r5
   1b8f4:	strd	r2, [r7, r1]
   1b8f8:	ldrd	r2, [r7, #72]	; 0x48
   1b8fc:	strd	r2, [ip, #48]	; 0x30
   1b900:	bl	145dc <pthread_mutex_unlock@plt>
   1b904:	b	1b7dc <get_microseconds64@@Base+0xe4>
   1b908:	ldr	r5, [sp, #8]
   1b90c:	mov	r0, #0
   1b910:	ldr	r2, [sp, #20]
   1b914:	ldr	r3, [r5]
   1b918:	cmp	r2, r3
   1b91c:	bne	1b964 <get_microseconds64@@Base+0x26c>
   1b920:	add	sp, sp, #28
   1b924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b928:	mov	r0, sl
   1b92c:	bl	14630 <pthread_mutex_lock@plt>
   1b930:	movw	lr, #8984	; 0x2318
   1b934:	mov	r2, #0
   1b938:	mov	r3, #0
   1b93c:	ldr	r4, [sp, #4]
   1b940:	movw	r1, #9016	; 0x2338
   1b944:	strd	r2, [sl, lr]
   1b948:	mov	r0, sl
   1b94c:	ldrd	r2, [sl, #56]	; 0x38
   1b950:	mov	ip, #0
   1b954:	str	ip, [sl, r1]
   1b958:	strd	r2, [r4]
   1b95c:	bl	145dc <pthread_mutex_unlock@plt>
   1b960:	b	1b8a8 <get_microseconds64@@Base+0x1b0>
   1b964:	bl	14804 <__stack_chk_fail@plt>
   1b968:	andeq	lr, r1, r8, ror #16
   1b96c:	andeq	r0, r0, r4, lsr r3
   1b970:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   1b974:	andeq	pc, r1, ip, ror #16
   1b978:	andeq	pc, r1, r4, asr r8	; <UNPREDICTABLE>
   1b97c:	andeq	pc, r1, ip, ror #14

0001b980 <raspi_gps_lock@@Base>:
   1b980:	push	{r4, lr}
   1b984:	ldr	r4, [pc, #20]	; 1b9a0 <raspi_gps_lock@@Base+0x20>
   1b988:	add	r4, pc, r4
   1b98c:	mov	r0, r4
   1b990:	bl	14630 <pthread_mutex_lock@plt>
   1b994:	add	r0, r4, #8960	; 0x2300
   1b998:	add	r0, r0, #24
   1b99c:	pop	{r4, pc}
   1b9a0:	muleq	r1, r8, r6

0001b9a4 <raspi_gps_unlock@@Base>:
   1b9a4:	ldr	r0, [pc, #4]	; 1b9b0 <raspi_gps_unlock@@Base+0xc>
   1b9a8:	add	r0, pc, r0
   1b9ac:	b	145dc <pthread_mutex_unlock@plt>
   1b9b0:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>

0001b9b4 <raspi_gps_shutdown@@Base>:
   1b9b4:	push	{r3, r4, r5, lr}
   1b9b8:	movw	ip, #17908	; 0x45f4
   1b9bc:	ldr	r3, [pc, #204]	; 1ba90 <raspi_gps_shutdown@@Base+0xdc>
   1b9c0:	mov	r4, r0
   1b9c4:	ldr	r5, [pc, #200]	; 1ba94 <raspi_gps_shutdown@@Base+0xe0>
   1b9c8:	movw	r2, #17904	; 0x45f0
   1b9cc:	add	r3, pc, r3
   1b9d0:	mov	r1, #1
   1b9d4:	add	r5, pc, r5
   1b9d8:	ldr	r0, [r3, ip]
   1b9dc:	str	r1, [r3, r2]
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1ba08 <raspi_gps_shutdown@@Base+0x54>
   1b9e8:	cmp	r4, #0
   1b9ec:	bne	1ba70 <raspi_gps_shutdown@@Base+0xbc>
   1b9f0:	ldr	r2, [pc, #160]	; 1ba98 <raspi_gps_shutdown@@Base+0xe4>
   1b9f4:	movw	r3, #17900	; 0x45ec
   1b9f8:	mov	r1, #0
   1b9fc:	add	r2, pc, r2
   1ba00:	ldr	r0, [r2, r3]
   1ba04:	bl	14a74 <pthread_join@plt>
   1ba08:	cmp	r4, #0
   1ba0c:	beq	1ba24 <raspi_gps_shutdown@@Base+0x70>
   1ba10:	ldr	r3, [pc, #132]	; 1ba9c <raspi_gps_shutdown@@Base+0xe8>
   1ba14:	add	r3, pc, r3
   1ba18:	ldr	r3, [r3, #36]	; 0x24
   1ba1c:	cmp	r3, #0
   1ba20:	bne	1ba4c <raspi_gps_shutdown@@Base+0x98>
   1ba24:	ldr	r4, [pc, #116]	; 1baa0 <raspi_gps_shutdown@@Base+0xec>
   1ba28:	add	r4, pc, r4
   1ba2c:	add	r5, r4, #24
   1ba30:	mov	r0, r5
   1ba34:	bl	1c370 <disconnect_gpsd@@Base>
   1ba38:	mov	r0, r5
   1ba3c:	bl	1c3d4 <libgps_unload@@Base>
   1ba40:	mov	r0, r4
   1ba44:	pop	{r3, r4, r5, lr}
   1ba48:	b	14720 <pthread_mutex_destroy@plt>
   1ba4c:	ldr	r3, [pc, #80]	; 1baa4 <raspi_gps_shutdown@@Base+0xf0>
   1ba50:	mov	r1, #1
   1ba54:	ldr	r0, [pc, #76]	; 1baa8 <raspi_gps_shutdown@@Base+0xf4>
   1ba58:	mov	r2, #25
   1ba5c:	ldr	r3, [r5, r3]
   1ba60:	add	r0, pc, r0
   1ba64:	ldr	r3, [r3]
   1ba68:	bl	147b0 <fwrite@plt>
   1ba6c:	b	1ba24 <raspi_gps_shutdown@@Base+0x70>
   1ba70:	ldr	r3, [pc, #44]	; 1baa4 <raspi_gps_shutdown@@Base+0xf0>
   1ba74:	mov	r2, #43	; 0x2b
   1ba78:	ldr	r0, [pc, #44]	; 1baac <raspi_gps_shutdown@@Base+0xf8>
   1ba7c:	ldr	r3, [r5, r3]
   1ba80:	add	r0, pc, r0
   1ba84:	ldr	r3, [r3]
   1ba88:	bl	147b0 <fwrite@plt>
   1ba8c:	b	1b9f0 <raspi_gps_shutdown@@Base+0x3c>
   1ba90:	andeq	pc, r1, r4, asr r6	; <UNPREDICTABLE>
   1ba94:	andeq	lr, r1, r4, lsr #12
   1ba98:	andeq	pc, r1, r4, lsr #12
   1ba9c:	andeq	pc, r1, ip, lsl #12
   1baa0:	strdeq	pc, [r1], -r8
   1baa4:	andeq	r0, r0, r4, asr r3
   1baa8:	andeq	r8, r0, r8, lsr #25
   1baac:	andeq	r8, r0, ip, asr ip

0001bab0 <raspi_gps_setup@@Base>:
   1bab0:	push	{r4, r5, r6, r7, lr}
   1bab4:	movw	r2, #17912	; 0x45f8
   1bab8:	ldr	r4, [pc, #524]	; 1bccc <raspi_gps_setup@@Base+0x21c>
   1babc:	sub	sp, sp, #12
   1bac0:	mov	r1, #0
   1bac4:	mov	r7, r0
   1bac8:	add	r4, pc, r4
   1bacc:	ldr	r6, [pc, #508]	; 1bcd0 <raspi_gps_setup@@Base+0x220>
   1bad0:	add	r5, r4, #24
   1bad4:	mov	r0, r4
   1bad8:	add	r6, pc, r6
   1badc:	bl	14414 <memset@plt>
   1bae0:	mov	r1, #0
   1bae4:	mov	r0, r4
   1bae8:	bl	14768 <pthread_mutex_init@plt>
   1baec:	mov	r0, r5
   1baf0:	bl	1c2c4 <gpsd_init@@Base>
   1baf4:	mov	r0, r5
   1baf8:	bl	1c19c <libgps_load@@Base>
   1bafc:	cmp	r0, #0
   1bb00:	bne	1bc00 <raspi_gps_setup@@Base+0x150>
   1bb04:	cmp	r7, #0
   1bb08:	bne	1bb68 <raspi_gps_setup@@Base+0xb8>
   1bb0c:	mov	r0, r5
   1bb10:	bl	1c2f8 <connect_gpsd@@Base>
   1bb14:	cmp	r0, #0
   1bb18:	bne	1bc6c <raspi_gps_setup@@Base+0x1bc>
   1bb1c:	mov	r0, r5
   1bb20:	mov	r1, #2
   1bb24:	bl	1c488 <wait_gps_time@@Base>
   1bb28:	ldr	r4, [pc, #420]	; 1bcd4 <raspi_gps_setup@@Base+0x224>
   1bb2c:	mov	r1, #0
   1bb30:	ldr	r2, [pc, #416]	; 1bcd8 <raspi_gps_setup@@Base+0x228>
   1bb34:	add	r4, pc, r4
   1bb38:	add	r0, r4, #17664	; 0x4500
   1bb3c:	add	r2, pc, r2
   1bb40:	mov	r3, r4
   1bb44:	add	r0, r0, #236	; 0xec
   1bb48:	bl	1466c <pthread_create@plt>
   1bb4c:	cmp	r0, #0
   1bb50:	movweq	r3, #17908	; 0x45f4
   1bb54:	moveq	r2, #1
   1bb58:	streq	r2, [r4, r3]
   1bb5c:	bne	1bc30 <raspi_gps_setup@@Base+0x180>
   1bb60:	add	sp, sp, #12
   1bb64:	pop	{r4, r5, r6, r7, pc}
   1bb68:	ldr	r2, [pc, #364]	; 1bcdc <raspi_gps_setup@@Base+0x22c>
   1bb6c:	mov	r1, #1
   1bb70:	ldr	r3, [r4, #24]
   1bb74:	ldr	ip, [r4, #28]
   1bb78:	ldr	r4, [r6, r2]
   1bb7c:	ldr	r2, [pc, #348]	; 1bce0 <raspi_gps_setup@@Base+0x230>
   1bb80:	ldr	r0, [r4]
   1bb84:	add	r2, pc, r2
   1bb88:	str	ip, [sp]
   1bb8c:	bl	14834 <__fprintf_chk@plt>
   1bb90:	mov	r0, r5
   1bb94:	bl	1c2f8 <connect_gpsd@@Base>
   1bb98:	cmp	r0, #0
   1bb9c:	bne	1bc74 <raspi_gps_setup@@Base+0x1c4>
   1bba0:	ldr	r0, [pc, #316]	; 1bce4 <raspi_gps_setup@@Base+0x234>
   1bba4:	mov	r1, #1
   1bba8:	mov	r2, #21
   1bbac:	ldr	r3, [r4]
   1bbb0:	add	r0, pc, r0
   1bbb4:	bl	147b0 <fwrite@plt>
   1bbb8:	mov	r0, r5
   1bbbc:	mov	r1, #2
   1bbc0:	bl	1c488 <wait_gps_time@@Base>
   1bbc4:	cmp	r0, #0
   1bbc8:	beq	1bbe4 <raspi_gps_setup@@Base+0x134>
   1bbcc:	ldr	r0, [pc, #276]	; 1bce8 <raspi_gps_setup@@Base+0x238>
   1bbd0:	mov	r1, #1
   1bbd4:	mov	r2, #32
   1bbd8:	ldr	r3, [r4]
   1bbdc:	add	r0, pc, r0
   1bbe0:	bl	147b0 <fwrite@plt>
   1bbe4:	ldr	r0, [pc, #256]	; 1bcec <raspi_gps_setup@@Base+0x23c>
   1bbe8:	mov	r1, #1
   1bbec:	ldr	r3, [r4]
   1bbf0:	mov	r2, #27
   1bbf4:	add	r0, pc, r0
   1bbf8:	bl	147b0 <fwrite@plt>
   1bbfc:	b	1bb28 <raspi_gps_setup@@Base+0x78>
   1bc00:	mov	r0, r4
   1bc04:	bl	14720 <pthread_mutex_destroy@plt>
   1bc08:	ldr	r3, [pc, #204]	; 1bcdc <raspi_gps_setup@@Base+0x22c>
   1bc0c:	ldr	r0, [pc, #220]	; 1bcf0 <raspi_gps_setup@@Base+0x240>
   1bc10:	mov	r1, #1
   1bc14:	mov	r2, #33	; 0x21
   1bc18:	ldr	r3, [r6, r3]
   1bc1c:	add	r0, pc, r0
   1bc20:	ldr	r3, [r3]
   1bc24:	bl	147b0 <fwrite@plt>
   1bc28:	mvn	r0, #0
   1bc2c:	b	1bb60 <raspi_gps_setup@@Base+0xb0>
   1bc30:	ldr	r3, [pc, #164]	; 1bcdc <raspi_gps_setup@@Base+0x22c>
   1bc34:	mov	r1, #1
   1bc38:	ldr	r0, [pc, #180]	; 1bcf4 <raspi_gps_setup@@Base+0x244>
   1bc3c:	mov	r2, #33	; 0x21
   1bc40:	ldr	r3, [r6, r3]
   1bc44:	add	r0, pc, r0
   1bc48:	ldr	r3, [r3]
   1bc4c:	bl	147b0 <fwrite@plt>
   1bc50:	mov	r0, r7
   1bc54:	movw	r3, #17904	; 0x45f0
   1bc58:	mov	r2, #1
   1bc5c:	str	r2, [r4, r3]
   1bc60:	bl	1b9b4 <raspi_gps_shutdown@@Base>
   1bc64:	mvn	r0, #0
   1bc68:	b	1bb60 <raspi_gps_setup@@Base+0xb0>
   1bc6c:	ldr	r3, [pc, #104]	; 1bcdc <raspi_gps_setup@@Base+0x22c>
   1bc70:	ldr	r4, [r6, r3]
   1bc74:	ldr	r5, [pc, #124]	; 1bcf8 <raspi_gps_setup@@Base+0x248>
   1bc78:	movw	r3, #8976	; 0x2310
   1bc7c:	ldr	r6, [r4]
   1bc80:	add	r5, pc, r5
   1bc84:	ldr	r7, [r5, r3]
   1bc88:	bl	14a2c <__errno_location@plt>
   1bc8c:	ldr	r4, [r0]
   1bc90:	mov	r0, r4
   1bc94:	blx	r7
   1bc98:	ldr	r2, [pc, #92]	; 1bcfc <raspi_gps_setup@@Base+0x24c>
   1bc9c:	mov	r3, r4
   1bca0:	mov	r1, #1
   1bca4:	add	r2, pc, r2
   1bca8:	str	r0, [sp]
   1bcac:	mov	r0, r6
   1bcb0:	bl	14834 <__fprintf_chk@plt>
   1bcb4:	add	r0, r5, #24
   1bcb8:	bl	1c3d4 <libgps_unload@@Base>
   1bcbc:	mov	r0, r5
   1bcc0:	bl	14720 <pthread_mutex_destroy@plt>
   1bcc4:	mvn	r0, #0
   1bcc8:	b	1bb60 <raspi_gps_setup@@Base+0xb0>
   1bccc:	andeq	pc, r1, r8, asr r5	; <UNPREDICTABLE>
   1bcd0:	andeq	lr, r1, r0, lsr #10
   1bcd4:	andeq	pc, r1, ip, ror #9
   1bcd8:			; <UNDEFINED> instruction: 0xfffffc44
   1bcdc:	andeq	r0, r0, r4, asr r3
   1bce0:	andeq	r8, r0, r4, asr #23
   1bce4:	andeq	r8, r0, r0, ror #23
   1bce8:	andeq	r8, r0, ip, lsl #24
   1bcec:			; <UNDEFINED> instruction: 0x00008bb4
   1bcf0:	andeq	r8, r0, r8, lsl #22
   1bcf4:	andeq	r8, r0, r0, lsl #23
   1bcf8:	andeq	pc, r1, r0, lsr #7
   1bcfc:	andeq	r8, r0, r0, asr #21

0001bd00 <raspi_gps_location_string@@Base>:
   1bd00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd04:	vpush	{d8}
   1bd08:	sub	sp, sp, #204	; 0xcc
   1bd0c:	ldr	lr, [pc, #1020]	; 1c110 <raspi_gps_location_string@@Base+0x410>
   1bd10:	add	r9, sp, #92	; 0x5c
   1bd14:	ldr	r3, [pc, #1016]	; 1c114 <raspi_gps_location_string@@Base+0x414>
   1bd18:	mov	ip, #0
   1bd1c:	add	lr, pc, lr
   1bd20:	ldr	r5, [pc, #1008]	; 1c118 <raspi_gps_location_string@@Base+0x418>
   1bd24:	mov	r6, r9
   1bd28:	movw	r4, #12142	; 0x2f6e
   1bd2c:	ldr	r3, [lr, r3]
   1bd30:	add	r5, pc, r5
   1bd34:	add	fp, r5, #24
   1bd38:	movt	r4, #97	; 0x61
   1bd3c:	str	ip, [sp, #48]	; 0x30
   1bd40:	add	r8, sp, #116	; 0x74
   1bd44:	str	r3, [sp, #36]	; 0x24
   1bd48:	add	sl, r5, #48	; 0x30
   1bd4c:	ldr	r7, [sp, #36]	; 0x24
   1bd50:	ldm	r5, {r0, r1, r2, r3}
   1bd54:	add	r5, r5, #72	; 0x48
   1bd58:	ldr	lr, [r7]
   1bd5c:	add	r7, sp, #140	; 0x8c
   1bd60:	str	r4, [sp, #44]	; 0x2c
   1bd64:	str	r4, [sp, #68]	; 0x44
   1bd68:	mov	r4, r8
   1bd6c:	stmia	r6!, {r0, r1, r2}
   1bd70:	str	lr, [sp, #196]	; 0xc4
   1bd74:	mov	lr, r7
   1bd78:	strb	r3, [r6]
   1bd7c:	add	r6, sp, #164	; 0xa4
   1bd80:	str	ip, [sp, #52]	; 0x34
   1bd84:	str	ip, [sp, #56]	; 0x38
   1bd88:	mov	r3, r6
   1bd8c:	str	ip, [sp, #60]	; 0x3c
   1bd90:	str	ip, [sp, #64]	; 0x40
   1bd94:	str	ip, [sp, #72]	; 0x48
   1bd98:	str	ip, [sp, #76]	; 0x4c
   1bd9c:	str	ip, [sp, #80]	; 0x50
   1bda0:	str	ip, [sp, #84]	; 0x54
   1bda4:	str	ip, [sp, #88]	; 0x58
   1bda8:	strb	ip, [sp, #105]	; 0x69
   1bdac:	strb	ip, [sp, #106]	; 0x6a
   1bdb0:	strb	ip, [sp, #107]	; 0x6b
   1bdb4:	strb	ip, [sp, #108]	; 0x6c
   1bdb8:	strb	ip, [sp, #109]	; 0x6d
   1bdbc:	strb	ip, [sp, #110]	; 0x6e
   1bdc0:	strb	ip, [sp, #111]	; 0x6f
   1bdc4:	ldm	fp, {r0, r1, r2}
   1bdc8:	strb	ip, [sp, #112]	; 0x70
   1bdcc:	strb	ip, [sp, #113]	; 0x71
   1bdd0:	strb	ip, [sp, #114]	; 0x72
   1bdd4:	stmia	r4!, {r0, r1}
   1bdd8:	strh	r2, [r4]
   1bddc:	ldm	sl, {r0, r1, r2}
   1bde0:	strb	ip, [sp, #115]	; 0x73
   1bde4:	strh	ip, [sp, #126]	; 0x7e
   1bde8:	strh	ip, [sp, #128]	; 0x80
   1bdec:	stmia	lr!, {r0, r1}
   1bdf0:	strh	r2, [lr]
   1bdf4:	ldm	r5, {r0, r1, r2}
   1bdf8:	strh	ip, [sp, #130]	; 0x82
   1bdfc:	strh	ip, [sp, #132]	; 0x84
   1be00:	strh	ip, [sp, #134]	; 0x86
   1be04:	stmia	r3!, {r0, r1}
   1be08:	mov	r1, ip
   1be0c:	strb	r2, [r3]
   1be10:	add	r0, sp, #173	; 0xad
   1be14:	mov	r2, #23
   1be18:	strh	ip, [sp, #136]	; 0x88
   1be1c:	strh	ip, [sp, #138]	; 0x8a
   1be20:	strh	ip, [sp, #150]	; 0x96
   1be24:	strh	ip, [sp, #152]	; 0x98
   1be28:	strh	ip, [sp, #154]	; 0x9a
   1be2c:	strh	ip, [sp, #156]	; 0x9c
   1be30:	strh	ip, [sp, #158]	; 0x9e
   1be34:	strh	ip, [sp, #160]	; 0xa0
   1be38:	strh	ip, [sp, #162]	; 0xa2
   1be3c:	bl	14414 <memset@plt>
   1be40:	bl	1b980 <raspi_gps_lock@@Base>
   1be44:	mov	r1, #0
   1be48:	ldrd	r2, [r0]
   1be4c:	mov	fp, r0
   1be50:	mov	r0, #4
   1be54:	and	r3, r3, r1
   1be58:	and	r2, r2, r0
   1be5c:	orrs	ip, r2, r3
   1be60:	addeq	r4, sp, #40	; 0x28
   1be64:	bne	1bfec <raspi_gps_location_string@@Base+0x2ec>
   1be68:	vldr	d7, [fp, #8]
   1be6c:	vcmp.f64	d7, #0.0
   1be70:	vmrs	APSR_nzcv, fpscr
   1be74:	beq	1bf90 <raspi_gps_location_string@@Base+0x290>
   1be78:	ldr	r3, [fp, #32]
   1be7c:	cmp	r3, #1
   1be80:	ble	1bf90 <raspi_gps_location_string@@Base+0x290>
   1be84:	ldrd	r2, [fp]
   1be88:	mov	r0, #16
   1be8c:	mov	r1, #0
   1be90:	and	r0, r0, r2
   1be94:	and	r1, r1, r3
   1be98:	orrs	ip, r0, r1
   1be9c:	addeq	sl, sp, #44	; 0x2c
   1bea0:	addeq	r5, sp, #68	; 0x44
   1bea4:	beq	1bedc <raspi_gps_location_string@@Base+0x1dc>
   1bea8:	vldr	d8, [fp, #48]	; 0x30
   1beac:	vmov.f64	d0, d8
   1beb0:	bl	147bc <__isnan@plt>
   1beb4:	cmp	r0, #0
   1beb8:	addne	sl, sp, #44	; 0x2c
   1bebc:	beq	1c0d8 <raspi_gps_location_string@@Base+0x3d8>
   1bec0:	vldr	d8, [fp, #64]	; 0x40
   1bec4:	vmov.f64	d0, d8
   1bec8:	bl	147bc <__isnan@plt>
   1becc:	cmp	r0, #0
   1bed0:	beq	1c0a8 <raspi_gps_location_string@@Base+0x3a8>
   1bed4:	ldrd	r2, [fp]
   1bed8:	add	r5, sp, #68	; 0x44
   1bedc:	mov	r0, #32
   1bee0:	mov	r1, #0
   1bee4:	and	r0, r0, r2
   1bee8:	and	r1, r1, r3
   1beec:	orrs	ip, r0, r1
   1bef0:	beq	1bf00 <raspi_gps_location_string@@Base+0x200>
   1bef4:	ldr	r1, [fp, #32]
   1bef8:	cmp	r1, #2
   1befc:	bgt	1c024 <raspi_gps_location_string@@Base+0x324>
   1bf00:	mov	r0, #64	; 0x40
   1bf04:	mov	r1, #0
   1bf08:	and	r0, r0, r2
   1bf0c:	and	r1, r1, r3
   1bf10:	orrs	ip, r0, r1
   1bf14:	beq	1bf3c <raspi_gps_location_string@@Base+0x23c>
   1bf18:	vldr	d8, [fp, #112]	; 0x70
   1bf1c:	vmov.f64	d0, d8
   1bf20:	str	r2, [sp, #32]
   1bf24:	str	r3, [sp, #28]
   1bf28:	bl	147bc <__isnan@plt>
   1bf2c:	ldr	r2, [sp, #32]
   1bf30:	ldr	r3, [sp, #28]
   1bf34:	cmp	r0, #0
   1bf38:	beq	1c074 <raspi_gps_location_string@@Base+0x374>
   1bf3c:	mov	r1, #0
   1bf40:	mov	r0, #128	; 0x80
   1bf44:	and	r3, r3, r1
   1bf48:	and	r2, r2, r0
   1bf4c:	orrs	r1, r2, r3
   1bf50:	beq	1bf98 <raspi_gps_location_string@@Base+0x298>
   1bf54:	vldr	d8, [fp, #96]	; 0x60
   1bf58:	vmov.f64	d0, d8
   1bf5c:	bl	147bc <__isnan@plt>
   1bf60:	cmp	r0, #0
   1bf64:	bne	1bf98 <raspi_gps_location_string@@Base+0x298>
   1bf68:	ldr	ip, [pc, #428]	; 1c11c <raspi_gps_location_string@@Base+0x41c>
   1bf6c:	mov	r1, #24
   1bf70:	vstr	d8, [sp, #8]
   1bf74:	mov	r3, r1
   1bf78:	add	ip, pc, ip
   1bf7c:	mov	r0, r7
   1bf80:	mov	r2, #1
   1bf84:	str	ip, [sp]
   1bf88:	bl	1475c <__snprintf_chk@plt>
   1bf8c:	b	1bf98 <raspi_gps_location_string@@Base+0x298>
   1bf90:	add	sl, sp, #44	; 0x2c
   1bf94:	add	r5, sp, #68	; 0x44
   1bf98:	bl	1b9a4 <raspi_gps_unlock@@Base>
   1bf9c:	ldr	r2, [pc, #380]	; 1c120 <raspi_gps_location_string@@Base+0x420>
   1bfa0:	mov	r3, r6
   1bfa4:	str	r7, [sp, #16]
   1bfa8:	add	r2, pc, r2
   1bfac:	str	sl, [sp]
   1bfb0:	str	r5, [sp, #4]
   1bfb4:	mov	r0, r4
   1bfb8:	str	r9, [sp, #8]
   1bfbc:	mov	r1, #1
   1bfc0:	str	r8, [sp, #12]
   1bfc4:	bl	145a0 <__asprintf_chk@plt>
   1bfc8:	ldr	r7, [sp, #36]	; 0x24
   1bfcc:	ldr	r2, [sp, #196]	; 0xc4
   1bfd0:	ldr	r0, [sp, #40]	; 0x28
   1bfd4:	ldr	r3, [r7]
   1bfd8:	cmp	r2, r3
   1bfdc:	bne	1c104 <raspi_gps_location_string@@Base+0x404>
   1bfe0:	add	sp, sp, #204	; 0xcc
   1bfe4:	vpop	{d8}
   1bfe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfec:	vldr	d7, [fp, #24]
   1bff0:	vcvt.s32.f64	s14, d7
   1bff4:	add	r4, sp, #200	; 0xc8
   1bff8:	vmov	r1, s14
   1bffc:	str	r1, [r4, #-160]!	; 0xffffff60
   1c000:	mov	r0, r4
   1c004:	bl	14270 <localtime@plt>
   1c008:	ldr	r2, [pc, #276]	; 1c124 <raspi_gps_location_string@@Base+0x424>
   1c00c:	mov	r1, #32
   1c010:	add	r2, pc, r2
   1c014:	mov	r3, r0
   1c018:	mov	r0, r6
   1c01c:	bl	148b8 <strftime@plt>
   1c020:	b	1be68 <raspi_gps_location_string@@Base+0x168>
   1c024:	vldr	d8, [fp, #80]	; 0x50
   1c028:	vmov.f64	d0, d8
   1c02c:	str	r2, [sp, #32]
   1c030:	str	r3, [sp, #28]
   1c034:	bl	147bc <__isnan@plt>
   1c038:	ldr	r2, [sp, #32]
   1c03c:	ldr	r3, [sp, #28]
   1c040:	cmp	r0, #0
   1c044:	bne	1bf00 <raspi_gps_location_string@@Base+0x200>
   1c048:	ldr	ip, [pc, #216]	; 1c128 <raspi_gps_location_string@@Base+0x428>
   1c04c:	mov	r1, #24
   1c050:	mov	r3, r1
   1c054:	mov	r2, #1
   1c058:	add	ip, pc, ip
   1c05c:	vstr	d8, [sp, #8]
   1c060:	mov	r0, r9
   1c064:	str	ip, [sp]
   1c068:	bl	1475c <__snprintf_chk@plt>
   1c06c:	ldrd	r2, [fp]
   1c070:	b	1bf00 <raspi_gps_location_string@@Base+0x200>
   1c074:	vldr	d7, [pc, #140]	; 1c108 <raspi_gps_location_string@@Base+0x408>
   1c078:	vmul.f64	d8, d8, d7
   1c07c:	ldr	ip, [pc, #168]	; 1c12c <raspi_gps_location_string@@Base+0x42c>
   1c080:	mov	r1, #24
   1c084:	mov	r3, r1
   1c088:	mov	r2, #1
   1c08c:	add	ip, pc, ip
   1c090:	mov	r0, r8
   1c094:	str	ip, [sp]
   1c098:	vstr	d8, [sp, #8]
   1c09c:	bl	1475c <__snprintf_chk@plt>
   1c0a0:	ldrd	r2, [fp]
   1c0a4:	b	1bf3c <raspi_gps_location_string@@Base+0x23c>
   1c0a8:	ldr	r2, [pc, #128]	; 1c130 <raspi_gps_location_string@@Base+0x430>
   1c0ac:	add	r5, sp, #68	; 0x44
   1c0b0:	mov	r1, #24
   1c0b4:	vstr	d8, [sp, #8]
   1c0b8:	add	r2, pc, r2
   1c0bc:	mov	r3, r1
   1c0c0:	str	r2, [sp]
   1c0c4:	mov	r0, r5
   1c0c8:	mov	r2, #1
   1c0cc:	bl	1475c <__snprintf_chk@plt>
   1c0d0:	ldrd	r2, [fp]
   1c0d4:	b	1bedc <raspi_gps_location_string@@Base+0x1dc>
   1c0d8:	add	sl, sp, #44	; 0x2c
   1c0dc:	ldr	r2, [pc, #80]	; 1c134 <raspi_gps_location_string@@Base+0x434>
   1c0e0:	mov	r1, #24
   1c0e4:	vstr	d8, [sp, #8]
   1c0e8:	add	r2, pc, r2
   1c0ec:	mov	r0, sl
   1c0f0:	str	r2, [sp]
   1c0f4:	mov	r3, r1
   1c0f8:	mov	r2, #1
   1c0fc:	bl	1475c <__snprintf_chk@plt>
   1c100:	b	1bec0 <raspi_gps_location_string@@Base+0x1c0>
   1c104:	bl	14804 <__stack_chk_fail@plt>
   1c108:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1c10c:	andmi	ip, ip, ip, asr #25
   1c110:	ldrdeq	lr, [r1], -ip
   1c114:	andeq	r0, r0, r4, lsr r3
   1c118:	andeq	r8, r0, r4, asr #18
   1c11c:	ldrdeq	r8, [r0], -r0
   1c120:	andeq	r8, r0, ip, lsr #17
   1c124:	strdeq	r8, [r0], -ip
   1c128:	ldrdeq	r8, [r0], -r0
   1c12c:	andeq	r8, r0, ip, lsr #15
   1c130:	andeq	r8, r0, r8, ror #14
   1c134:	andeq	r8, r0, r8, lsr r7
   1c138:	push	{r3, r4, r5, lr}
   1c13c:	mov	r5, r0
   1c140:	mov	r0, r1
   1c144:	mov	r1, r2
   1c148:	bl	14a38 <dlsym@plt>
   1c14c:	ldr	r4, [pc, #60]	; 1c190 <raspi_gps_location_string@@Base+0x490>
   1c150:	add	r4, pc, r4
   1c154:	str	r0, [r5]
   1c158:	bl	14858 <dlerror@plt>
   1c15c:	subs	r3, r0, #0
   1c160:	bne	1c16c <raspi_gps_location_string@@Base+0x46c>
   1c164:	mov	r0, r3
   1c168:	pop	{r3, r4, r5, pc}
   1c16c:	ldr	ip, [pc, #32]	; 1c194 <raspi_gps_location_string@@Base+0x494>
   1c170:	mov	r1, #1
   1c174:	ldr	r2, [pc, #28]	; 1c198 <raspi_gps_location_string@@Base+0x498>
   1c178:	ldr	r0, [r4, ip]
   1c17c:	add	r2, pc, r2
   1c180:	ldr	r0, [r0]
   1c184:	bl	14834 <__fprintf_chk@plt>
   1c188:	mvn	r0, #0
   1c18c:	pop	{r3, r4, r5, pc}
   1c190:	andeq	sp, r1, r8, lsr #29
   1c194:	andeq	r0, r0, r4, asr r3
   1c198:	muleq	r0, r4, r1

0001c19c <libgps_load@@Base>:
   1c19c:	push	{r4, r5, r6, lr}
   1c1a0:	mov	r1, #1
   1c1a4:	ldr	r5, [pc, #240]	; 1c29c <libgps_load@@Base+0x100>
   1c1a8:	mov	r4, r0
   1c1ac:	ldr	r3, [pc, #236]	; 1c2a0 <libgps_load@@Base+0x104>
   1c1b0:	add	r5, pc, r5
   1c1b4:	ldr	r3, [r5, r3]
   1c1b8:	ldr	r0, [r3]
   1c1bc:	bl	144a4 <dlopen@plt>
   1c1c0:	cmp	r0, #0
   1c1c4:	str	r0, [r4, #8]
   1c1c8:	beq	1c26c <libgps_load@@Base+0xd0>
   1c1cc:	ldr	r2, [pc, #208]	; 1c2a4 <libgps_load@@Base+0x108>
   1c1d0:	add	r5, r4, #8896	; 0x22c0
   1c1d4:	mov	r1, r0
   1c1d8:	add	r0, r5, #40	; 0x28
   1c1dc:	add	r2, pc, r2
   1c1e0:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c1e4:	ldr	r2, [pc, #188]	; 1c2a8 <libgps_load@@Base+0x10c>
   1c1e8:	ldr	r1, [r4, #8]
   1c1ec:	add	r2, pc, r2
   1c1f0:	mov	r6, r0
   1c1f4:	add	r0, r5, #44	; 0x2c
   1c1f8:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c1fc:	ldr	r2, [pc, #168]	; 1c2ac <libgps_load@@Base+0x110>
   1c200:	ldr	r1, [r4, #8]
   1c204:	add	r2, pc, r2
   1c208:	orr	r6, r0, r6
   1c20c:	add	r0, r5, #48	; 0x30
   1c210:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c214:	ldr	r2, [pc, #148]	; 1c2b0 <libgps_load@@Base+0x114>
   1c218:	ldr	r1, [r4, #8]
   1c21c:	add	r2, pc, r2
   1c220:	orr	r6, r6, r0
   1c224:	add	r0, r5, #52	; 0x34
   1c228:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c22c:	ldr	r2, [pc, #128]	; 1c2b4 <libgps_load@@Base+0x118>
   1c230:	ldr	r1, [r4, #8]
   1c234:	add	r2, pc, r2
   1c238:	orr	r6, r6, r0
   1c23c:	add	r0, r5, #56	; 0x38
   1c240:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c244:	ldr	r2, [pc, #108]	; 1c2b8 <libgps_load@@Base+0x11c>
   1c248:	ldr	r1, [r4, #8]
   1c24c:	add	r2, pc, r2
   1c250:	orr	r4, r6, r0
   1c254:	add	r0, r5, #60	; 0x3c
   1c258:	bl	1c138 <raspi_gps_location_string@@Base+0x438>
   1c25c:	orrs	r4, r4, r0
   1c260:	moveq	r0, #0
   1c264:	mvnne	r0, #0
   1c268:	pop	{r4, r5, r6, pc}
   1c26c:	ldr	r3, [pc, #72]	; 1c2bc <libgps_load@@Base+0x120>
   1c270:	ldr	r3, [r5, r3]
   1c274:	ldr	r4, [r3]
   1c278:	bl	14858 <dlerror@plt>
   1c27c:	ldr	r2, [pc, #60]	; 1c2c0 <libgps_load@@Base+0x124>
   1c280:	mov	r1, #1
   1c284:	add	r2, pc, r2
   1c288:	mov	r3, r0
   1c28c:	mov	r0, r4
   1c290:	bl	14834 <__fprintf_chk@plt>
   1c294:	mvn	r0, #0
   1c298:	pop	{r4, r5, r6, pc}
   1c29c:	andeq	sp, r1, r8, asr #28
   1c2a0:	andeq	r0, r0, ip, lsr r3
   1c2a4:	muleq	r0, r4, r6
   1c2a8:	muleq	r0, r0, r6
   1c2ac:	andeq	r8, r0, r4, lsl #13
   1c2b0:	andeq	r8, r0, r8, ror r6
   1c2b4:	andeq	r8, r0, ip, ror #12
   1c2b8:	andeq	r8, r0, r0, ror #12
   1c2bc:	andeq	r0, r0, r4, asr r3
   1c2c0:	andeq	r9, r0, ip, lsl #1

0001c2c4 <gpsd_init@@Base>:
   1c2c4:	push	{r4, lr}
   1c2c8:	mov	r2, #8960	; 0x2300
   1c2cc:	mov	r1, #0
   1c2d0:	mov	r4, r0
   1c2d4:	bl	14414 <memset@plt>
   1c2d8:	ldr	r2, [pc, #16]	; 1c2f0 <gpsd_init@@Base+0x2c>
   1c2dc:	ldr	r3, [pc, #16]	; 1c2f4 <gpsd_init@@Base+0x30>
   1c2e0:	add	r2, pc, r2
   1c2e4:	add	r3, pc, r3
   1c2e8:	stm	r4, {r2, r3}
   1c2ec:	pop	{r4, pc}
   1c2f0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1c2f4:	andeq	r8, r0, r0, ror #11

0001c2f8 <connect_gpsd@@Base>:
   1c2f8:	ldr	r3, [r0, #8]
   1c2fc:	push	{r4, r5, r6, lr}
   1c300:	cmp	r3, #0
   1c304:	mov	r4, r0
   1c308:	beq	1c368 <connect_gpsd@@Base+0x70>
   1c30c:	ldr	r3, [r0, #12]
   1c310:	cmp	r3, #0
   1c314:	movne	r5, #0
   1c318:	beq	1c324 <connect_gpsd@@Base+0x2c>
   1c31c:	mov	r0, r5
   1c320:	pop	{r4, r5, r6, pc}
   1c324:	add	r6, r0, #24
   1c328:	movw	r3, #8944	; 0x22f0
   1c32c:	ldr	r3, [r0, r3]
   1c330:	mov	r2, r6
   1c334:	ldm	r0, {r0, r1}
   1c338:	blx	r3
   1c33c:	subs	r5, r0, #0
   1c340:	bne	1c368 <connect_gpsd@@Base+0x70>
   1c344:	movw	r3, #8956	; 0x22fc
   1c348:	mov	r1, #1
   1c34c:	mov	r0, r6
   1c350:	str	r1, [r4, #12]
   1c354:	ldr	r3, [r4, r3]
   1c358:	mov	r2, r5
   1c35c:	blx	r3
   1c360:	mov	r0, r5
   1c364:	pop	{r4, r5, r6, pc}
   1c368:	mvn	r5, #0
   1c36c:	b	1c31c <connect_gpsd@@Base+0x24>

0001c370 <disconnect_gpsd@@Base>:
   1c370:	push	{r3, r4, r5, lr}
   1c374:	mov	r4, r0
   1c378:	ldr	r3, [r0, #8]
   1c37c:	cmp	r3, #0
   1c380:	beq	1c3cc <disconnect_gpsd@@Base+0x5c>
   1c384:	ldr	r0, [r0, #12]
   1c388:	cmp	r0, #0
   1c38c:	popeq	{r3, r4, r5, pc}
   1c390:	add	r5, r4, #24
   1c394:	movw	r3, #8956	; 0x22fc
   1c398:	ldr	r3, [r4, r3]
   1c39c:	mov	r1, #2
   1c3a0:	mov	r2, #0
   1c3a4:	mov	r0, r5
   1c3a8:	blx	r3
   1c3ac:	movw	r3, #8948	; 0x22f4
   1c3b0:	ldr	r3, [r4, r3]
   1c3b4:	mov	r0, r5
   1c3b8:	blx	r3
   1c3bc:	mov	r3, #0
   1c3c0:	mov	r0, r3
   1c3c4:	str	r3, [r4, #12]
   1c3c8:	pop	{r3, r4, r5, pc}
   1c3cc:	mvn	r0, #0
   1c3d0:	pop	{r3, r4, r5, pc}

0001c3d4 <libgps_unload@@Base>:
   1c3d4:	ldr	r3, [r0, #8]
   1c3d8:	push	{r4, lr}
   1c3dc:	cmp	r3, #0
   1c3e0:	mov	r4, r0
   1c3e4:	popeq	{r4, pc}
   1c3e8:	bl	1c370 <disconnect_gpsd@@Base>
   1c3ec:	ldr	r0, [r4, #8]
   1c3f0:	bl	143fc <dlclose@plt>
   1c3f4:	mov	r3, #0
   1c3f8:	str	r3, [r4, #8]
   1c3fc:	pop	{r4, pc}

0001c400 <read_gps_data_once@@Base>:
   1c400:	push	{r3, r4, r5, lr}
   1c404:	mov	r4, r0
   1c408:	ldr	r3, [r0, #8]
   1c40c:	cmp	r3, #0
   1c410:	beq	1c480 <read_gps_data_once@@Base+0x80>
   1c414:	ldr	r3, [r0, #12]
   1c418:	cmp	r3, #0
   1c41c:	bne	1c428 <read_gps_data_once@@Base+0x28>
   1c420:	mov	r0, #0
   1c424:	pop	{r3, r4, r5, pc}
   1c428:	add	r5, r0, #24
   1c42c:	movw	r3, #8940	; 0x22ec
   1c430:	ldr	r3, [r0, r3]
   1c434:	mov	r1, #200	; 0xc8
   1c438:	mov	r0, r5
   1c43c:	blx	r3
   1c440:	cmp	r0, #0
   1c444:	beq	1c420 <read_gps_data_once@@Base+0x20>
   1c448:	movw	r3, #8936	; 0x22e8
   1c44c:	mov	r0, r5
   1c450:	ldr	r3, [r4, r3]
   1c454:	blx	r3
   1c458:	cmp	r0, #0
   1c45c:	popge	{r3, r4, r5, pc}
   1c460:	movw	r3, #8948	; 0x22f4
   1c464:	mov	r0, r5
   1c468:	ldr	r3, [r4, r3]
   1c46c:	blx	r3
   1c470:	mov	r3, #0
   1c474:	mov	r0, r3
   1c478:	str	r3, [r4, #12]
   1c47c:	pop	{r3, r4, r5, pc}
   1c480:	mvn	r0, #0
   1c484:	pop	{r3, r4, r5, pc}

0001c488 <wait_gps_time@@Base>:
   1c488:	ldr	r3, [r0, #8]
   1c48c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c490:	cmp	r3, #0
   1c494:	mov	sl, r0
   1c498:	mov	r4, r1
   1c49c:	beq	1c554 <wait_gps_time@@Base+0xcc>
   1c4a0:	ldr	r3, [r0, #12]
   1c4a4:	cmp	r3, #0
   1c4a8:	beq	1c554 <wait_gps_time@@Base+0xcc>
   1c4ac:	mov	r0, #0
   1c4b0:	mov	r8, #4
   1c4b4:	bl	147c8 <time@plt>
   1c4b8:	mov	r9, #0
   1c4bc:	movw	r7, #8940	; 0x22ec
   1c4c0:	add	r5, sl, #24
   1c4c4:	mov	r6, r0
   1c4c8:	b	1c4f8 <wait_gps_time@@Base+0x70>
   1c4cc:	vmrs	APSR_nzcv, fpscr
   1c4d0:	beq	1c4e8 <wait_gps_time@@Base+0x60>
   1c4d4:	ldrd	r2, [sl, #24]
   1c4d8:	and	r2, r2, r8
   1c4dc:	and	r3, r3, r9
   1c4e0:	orrs	ip, r2, r3
   1c4e4:	bne	1c538 <wait_gps_time@@Base+0xb0>
   1c4e8:	ldr	r3, [sl, r7]
   1c4ec:	blx	r3
   1c4f0:	cmp	r0, #0
   1c4f4:	bne	1c548 <wait_gps_time@@Base+0xc0>
   1c4f8:	mov	r0, #0
   1c4fc:	bl	147c8 <time@plt>
   1c500:	vldr	d7, [sl, #32]
   1c504:	mov	r1, #200	; 0xc8
   1c508:	vcmp.f64	d7, #0.0
   1c50c:	rsb	r3, r6, r0
   1c510:	mov	r0, r5
   1c514:	cmp	r3, r4
   1c518:	blt	1c4cc <wait_gps_time@@Base+0x44>
   1c51c:	vmrs	APSR_nzcv, fpscr
   1c520:	beq	1c554 <wait_gps_time@@Base+0xcc>
   1c524:	ldrd	r0, [sl, #24]
   1c528:	mov	r2, #4
   1c52c:	mov	r3, #0
   1c530:	and	r2, r2, r0
   1c534:	and	r3, r3, r1
   1c538:	orrs	r1, r2, r3
   1c53c:	movne	r0, #0
   1c540:	mvneq	r0, #0
   1c544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c548:	mov	r0, sl
   1c54c:	bl	1c400 <read_gps_data_once@@Base>
   1c550:	b	1c4f8 <wait_gps_time@@Base+0x70>
   1c554:	mvn	r0, #0
   1c558:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001c55c <deg_to_str@@Base>:
   1c55c:	ldr	r3, [pc, #252]	; 1c660 <deg_to_str@@Base+0x104>
   1c560:	ldr	r2, [pc, #252]	; 1c664 <deg_to_str@@Base+0x108>
   1c564:	add	r3, pc, r3
   1c568:	push	{r4, r5, r6, r7, lr}
   1c56c:	vpush	{d8}
   1c570:	subs	r7, r1, #0
   1c574:	ldr	r4, [r3, r2]
   1c578:	sub	sp, sp, #44	; 0x2c
   1c57c:	mov	r5, r0
   1c580:	ldr	r3, [r4]
   1c584:	str	r3, [sp, #36]	; 0x24
   1c588:	ble	1c63c <deg_to_str@@Base+0xe0>
   1c58c:	vcmpe.f64	d0, #0.0
   1c590:	mov	r6, #0
   1c594:	strb	r6, [r0]
   1c598:	vmrs	APSR_nzcv, fpscr
   1c59c:	bmi	1c63c <deg_to_str@@Base+0xe0>
   1c5a0:	vldr	d6, [pc, #160]	; 1c648 <deg_to_str@@Base+0xec>
   1c5a4:	vcmpe.f64	d0, d6
   1c5a8:	vmrs	APSR_nzcv, fpscr
   1c5ac:	bgt	1c63c <deg_to_str@@Base+0xe0>
   1c5b0:	add	r0, sp, #16
   1c5b4:	vldr	d8, [pc, #148]	; 1c650 <deg_to_str@@Base+0xf4>
   1c5b8:	bl	1445c <modf@plt>
   1c5bc:	add	r0, sp, #40	; 0x28
   1c5c0:	vmov	r2, r3, d0
   1c5c4:	vmul.f64	d0, d0, d8
   1c5c8:	strd	r2, [r0, #-16]!
   1c5cc:	bl	1445c <modf@plt>
   1c5d0:	vldr	d5, [pc, #128]	; 1c658 <deg_to_str@@Base+0xfc>
   1c5d4:	vldr	d6, [sp, #16]
   1c5d8:	vldr	d7, [sp, #24]
   1c5dc:	vcvt.s32.f64	s12, d6
   1c5e0:	ldr	ip, [pc, #128]	; 1c668 <deg_to_str@@Base+0x10c>
   1c5e4:	mov	r0, r5
   1c5e8:	mov	r1, r7
   1c5ec:	add	ip, pc, ip
   1c5f0:	mov	r2, #1
   1c5f4:	mvn	r3, #0
   1c5f8:	str	ip, [sp]
   1c5fc:	vcvt.s32.f64	s14, d7
   1c600:	vstr	s12, [sp, #4]
   1c604:	vstr	s14, [sp, #8]
   1c608:	vmul.f64	d0, d0, d8
   1c60c:	vmul.f64	d5, d0, d5
   1c610:	vcvt.s32.f64	s10, d5
   1c614:	vstr	s10, [sp, #12]
   1c618:	bl	1475c <__snprintf_chk@plt>
   1c61c:	mov	r0, r6
   1c620:	ldr	r2, [sp, #36]	; 0x24
   1c624:	ldr	r3, [r4]
   1c628:	cmp	r2, r3
   1c62c:	bne	1c644 <deg_to_str@@Base+0xe8>
   1c630:	add	sp, sp, #44	; 0x2c
   1c634:	vpop	{d8}
   1c638:	pop	{r4, r5, r6, r7, pc}
   1c63c:	mvn	r0, #0
   1c640:	b	1c620 <deg_to_str@@Base+0xc4>
   1c644:	bl	14804 <__stack_chk_fail@plt>
   1c648:	andeq	r0, r0, r0
   1c64c:	rsbsmi	r8, r6, r0
   1c650:	andeq	r0, r0, r0
   1c654:	submi	r0, lr, r0
   1c658:	andeq	r0, r0, r0
   1c65c:	addmi	r4, pc, r0
   1c660:	muleq	r1, r4, sl
   1c664:	andeq	r0, r0, r4, lsr r3
   1c668:	andeq	r8, r0, r0, ror #5
   1c66c:	push	{r4, r5, r6, r7, r8, lr}
   1c670:	mov	r7, r0
   1c674:	ldr	r6, [r0, #56]	; 0x38
   1c678:	mov	r4, r1
   1c67c:	ldr	r8, [pc, #328]	; 1c7cc <deg_to_str@@Base+0x270>
   1c680:	cmp	r6, #0
   1c684:	add	r8, pc, r8
   1c688:	beq	1c79c <deg_to_str@@Base+0x240>
   1c68c:	ldr	r5, [r1, #20]
   1c690:	cmp	r5, #0
   1c694:	bne	1c710 <deg_to_str@@Base+0x1b4>
   1c698:	mov	r3, r5
   1c69c:	cmp	r3, r5
   1c6a0:	moveq	r5, #0
   1c6a4:	beq	1c6d4 <deg_to_str@@Base+0x178>
   1c6a8:	ldr	r3, [pc, #288]	; 1c7d0 <deg_to_str@@Base+0x274>
   1c6ac:	ldr	r0, [r8, r3]
   1c6b0:	ldr	r3, [r0]
   1c6b4:	cmp	r3, #1
   1c6b8:	movls	r5, #1
   1c6bc:	bls	1c6d4 <deg_to_str@@Base+0x178>
   1c6c0:	ldr	r2, [pc, #268]	; 1c7d4 <deg_to_str@@Base+0x278>
   1c6c4:	mov	r1, #2
   1c6c8:	mov	r5, #1
   1c6cc:	add	r2, pc, r2
   1c6d0:	bl	1493c <vcos_log_impl@plt>
   1c6d4:	ldr	r2, [r4, #28]
   1c6d8:	movw	r3, #1028	; 0x404
   1c6dc:	and	r3, r2, r3
   1c6e0:	cmp	r3, #0
   1c6e4:	movne	r5, #1
   1c6e8:	mov	r0, r4
   1c6ec:	bl	14384 <mmal_buffer_header_release@plt>
   1c6f0:	ldr	r3, [r7, #16]
   1c6f4:	cmp	r3, #0
   1c6f8:	bne	1c74c <deg_to_str@@Base+0x1f0>
   1c6fc:	cmp	r5, #0
   1c700:	popeq	{r4, r5, r6, r7, r8, pc}
   1c704:	add	r0, r6, #4
   1c708:	pop	{r4, r5, r6, r7, r8, lr}
   1c70c:	b	146fc <sem_post@plt>
   1c710:	ldr	r3, [r6]
   1c714:	cmp	r3, #0
   1c718:	beq	1c698 <deg_to_str@@Base+0x13c>
   1c71c:	mov	r0, r1
   1c720:	bl	14294 <mmal_buffer_header_mem_lock@plt>
   1c724:	ldr	r3, [r6]
   1c728:	mov	r1, #1
   1c72c:	ldr	r2, [r4, #20]
   1c730:	ldr	r0, [r4, #12]
   1c734:	bl	147b0 <fwrite@plt>
   1c738:	mov	r5, r0
   1c73c:	mov	r0, r4
   1c740:	bl	14900 <mmal_buffer_header_mem_unlock@plt>
   1c744:	ldr	r3, [r4, #20]
   1c748:	b	1c69c <deg_to_str@@Base+0x140>
   1c74c:	ldr	r3, [r6, #20]
   1c750:	ldr	r3, [r3, #796]	; 0x31c
   1c754:	ldr	r0, [r3]
   1c758:	bl	144b0 <mmal_queue_get@plt>
   1c75c:	subs	r1, r0, #0
   1c760:	beq	1c774 <deg_to_str@@Base+0x218>
   1c764:	mov	r0, r7
   1c768:	bl	14a50 <mmal_port_send_buffer@plt>
   1c76c:	cmp	r0, #0
   1c770:	beq	1c6fc <deg_to_str@@Base+0x1a0>
   1c774:	ldr	r3, [pc, #84]	; 1c7d0 <deg_to_str@@Base+0x274>
   1c778:	ldr	r0, [r8, r3]
   1c77c:	ldr	r3, [r0]
   1c780:	cmp	r3, #1
   1c784:	bls	1c6fc <deg_to_str@@Base+0x1a0>
   1c788:	ldr	r2, [pc, #72]	; 1c7d8 <deg_to_str@@Base+0x27c>
   1c78c:	mov	r1, #2
   1c790:	add	r2, pc, r2
   1c794:	bl	1493c <vcos_log_impl@plt>
   1c798:	b	1c6fc <deg_to_str@@Base+0x1a0>
   1c79c:	ldr	r3, [pc, #44]	; 1c7d0 <deg_to_str@@Base+0x274>
   1c7a0:	ldr	r0, [r8, r3]
   1c7a4:	ldr	r3, [r0]
   1c7a8:	cmp	r3, #1
   1c7ac:	movls	r5, r6
   1c7b0:	bls	1c6e8 <deg_to_str@@Base+0x18c>
   1c7b4:	ldr	r2, [pc, #32]	; 1c7dc <deg_to_str@@Base+0x280>
   1c7b8:	mov	r1, #2
   1c7bc:	mov	r5, r6
   1c7c0:	add	r2, pc, r2
   1c7c4:	bl	1493c <vcos_log_impl@plt>
   1c7c8:	b	1c6e8 <deg_to_str@@Base+0x18c>
   1c7cc:	andeq	sp, r1, r4, ror r9
   1c7d0:	andeq	r0, r0, r0, asr #6
   1c7d4:			; <UNDEFINED> instruction: 0x000082bc
   1c7d8:	andeq	r8, r0, r8, asr r2
   1c7dc:	strdeq	r8, [r0], -r4
   1c7e0:	push	{r4, r5, r6, r7, lr}
   1c7e4:	mov	r5, r0
   1c7e8:	sub	sp, sp, #12
   1c7ec:	mov	r4, r1
   1c7f0:	mov	r0, #152	; 0x98
   1c7f4:	mov	r1, #1
   1c7f8:	bl	143b4 <calloc@plt>
   1c7fc:	cmp	r5, #0
   1c800:	mov	r6, r0
   1c804:	beq	1c8a4 <deg_to_str@@Base+0x348>
   1c808:	ldr	r3, [r5, #780]	; 0x30c
   1c80c:	cmp	r3, #0
   1c810:	beq	1c8d4 <deg_to_str@@Base+0x378>
   1c814:	cmp	r4, #0
   1c818:	beq	1c840 <deg_to_str@@Base+0x2e4>
   1c81c:	mov	r0, r4
   1c820:	mov	r1, #61	; 0x3d
   1c824:	bl	14390 <strchr@plt>
   1c828:	cmp	r0, #0
   1c82c:	beq	1c840 <deg_to_str@@Base+0x2e4>
   1c830:	mov	r0, r4
   1c834:	bl	1463c <strlen@plt>
   1c838:	cmp	r0, #127	; 0x7f
   1c83c:	bls	1c84c <deg_to_str@@Base+0x2f0>
   1c840:	mov	r0, #3
   1c844:	add	sp, sp, #12
   1c848:	pop	{r4, r5, r6, r7, pc}
   1c84c:	mov	r7, r6
   1c850:	mov	r1, r4
   1c854:	mov	r2, #127	; 0x7f
   1c858:	mov	r3, #4
   1c85c:	movt	r3, #1
   1c860:	str	r3, [r7], #20
   1c864:	mov	r0, r7
   1c868:	bl	14354 <strncpy@plt>
   1c86c:	mov	r0, r7
   1c870:	bl	1463c <strlen@plt>
   1c874:	ldr	r3, [r5, #780]	; 0x30c
   1c878:	mov	r1, r6
   1c87c:	ldr	r2, [r3, #32]
   1c880:	add	r3, r0, #24
   1c884:	ldr	r0, [r2]
   1c888:	str	r3, [r6, #4]
   1c88c:	bl	142ac <mmal_port_parameter_set@plt>
   1c890:	mov	r4, r0
   1c894:	mov	r0, r6
   1c898:	bl	14534 <free@plt>
   1c89c:	mov	r0, r4
   1c8a0:	b	1c844 <deg_to_str@@Base+0x2e8>
   1c8a4:	ldr	r3, [pc, #88]	; 1c904 <deg_to_str@@Base+0x3a8>
   1c8a8:	movw	r2, #1179	; 0x49b
   1c8ac:	ldr	r0, [pc, #84]	; 1c908 <deg_to_str@@Base+0x3ac>
   1c8b0:	add	r3, pc, r3
   1c8b4:	ldr	r1, [pc, #80]	; 1c90c <deg_to_str@@Base+0x3b0>
   1c8b8:	str	r3, [sp]
   1c8bc:	add	r0, pc, r0
   1c8c0:	ldr	r3, [pc, #72]	; 1c910 <deg_to_str@@Base+0x3b4>
   1c8c4:	add	r1, pc, r1
   1c8c8:	add	r3, pc, r3
   1c8cc:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1c8d0:	b	1c808 <deg_to_str@@Base+0x2ac>
   1c8d4:	ldr	r3, [pc, #56]	; 1c914 <deg_to_str@@Base+0x3b8>
   1c8d8:	movw	r2, #1180	; 0x49c
   1c8dc:	ldr	r0, [pc, #52]	; 1c918 <deg_to_str@@Base+0x3bc>
   1c8e0:	add	r3, pc, r3
   1c8e4:	ldr	r1, [pc, #48]	; 1c91c <deg_to_str@@Base+0x3c0>
   1c8e8:	str	r3, [sp]
   1c8ec:	add	r0, pc, r0
   1c8f0:	ldr	r3, [pc, #40]	; 1c920 <deg_to_str@@Base+0x3c4>
   1c8f4:	add	r1, pc, r1
   1c8f8:	add	r3, pc, r3
   1c8fc:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1c900:	b	1c814 <deg_to_str@@Base+0x2b8>
   1c904:	ldrdeq	r8, [r0], -r0
   1c908:	andeq	r8, r0, ip, asr r1
   1c90c:	andeq	r8, r0, r0, lsr r0
   1c910:	andeq	r6, r0, r0, asr r7
   1c914:	andeq	r8, r0, r8, lsr #3
   1c918:	andeq	r8, r0, ip, lsr #2
   1c91c:	andeq	r8, r0, r0
   1c920:	andeq	r6, r0, r0, lsr #14
   1c924:	ldr	ip, [pc, #112]	; 1c99c <deg_to_str@@Base+0x440>
   1c928:	mov	r1, #1
   1c92c:	push	{r3, r4, r5, lr}
   1c930:	add	ip, pc, ip
   1c934:	ldr	r3, [pc, #100]	; 1c9a0 <deg_to_str@@Base+0x444>
   1c938:	mov	r5, r0
   1c93c:	ldr	r0, [pc, #96]	; 1c9a4 <deg_to_str@@Base+0x448>
   1c940:	mov	r2, #73	; 0x49
   1c944:	ldr	r4, [ip, r3]
   1c948:	add	r0, pc, r0
   1c94c:	ldr	r3, [r4]
   1c950:	bl	147b0 <fwrite@plt>
   1c954:	ldr	r2, [pc, #76]	; 1c9a8 <deg_to_str@@Base+0x44c>
   1c958:	mov	r3, r5
   1c95c:	ldr	r0, [r4]
   1c960:	mov	r1, #1
   1c964:	add	r2, pc, r2
   1c968:	bl	14834 <__fprintf_chk@plt>
   1c96c:	ldr	r0, [pc, #56]	; 1c9ac <deg_to_str@@Base+0x450>
   1c970:	ldr	r3, [r4]
   1c974:	mov	r1, #1
   1c978:	mov	r2, #26
   1c97c:	add	r0, pc, r0
   1c980:	bl	147b0 <fwrite@plt>
   1c984:	ldr	r0, [pc, #36]	; 1c9b0 <deg_to_str@@Base+0x454>
   1c988:	mov	r1, #19
   1c98c:	add	r0, pc, r0
   1c990:	bl	1a5b8 <raspicli_display_help@@Base>
   1c994:	pop	{r3, r4, r5, lr}
   1c998:	b	1d48c <raspitex_display_help@@Base>
   1c99c:	andeq	sp, r1, r8, asr #13
   1c9a0:	andeq	r0, r0, r0, asr r3
   1c9a4:	andeq	r8, r0, ip, asr r1
   1c9a8:	andeq	r8, r0, ip, lsl #3
   1c9ac:	andeq	r8, r0, ip, lsl #3
   1c9b0:	andeq	sp, r1, ip, ror #29

0001c9b4 <create_filenames@@Base>:
   1c9b4:	push	{r4, r5, r6, lr}
   1c9b8:	mov	r6, r1
   1c9bc:	mov	r4, #0
   1c9c0:	mov	r1, #1
   1c9c4:	str	r4, [r0]
   1c9c8:	mov	r5, r0
   1c9cc:	str	r4, [r6]
   1c9d0:	bl	145a0 <__asprintf_chk@plt>
   1c9d4:	cmp	r0, r4
   1c9d8:	blt	1ca04 <create_filenames@@Base+0x50>
   1c9dc:	ldr	r2, [pc, #56]	; 1ca1c <create_filenames@@Base+0x68>
   1c9e0:	mov	r0, r6
   1c9e4:	mov	r1, #1
   1c9e8:	ldr	r3, [r5]
   1c9ec:	add	r2, pc, r2
   1c9f0:	bl	145a0 <__asprintf_chk@plt>
   1c9f4:	cmp	r0, #0
   1c9f8:	blt	1ca04 <create_filenames@@Base+0x50>
   1c9fc:	mov	r0, r4
   1ca00:	pop	{r4, r5, r6, pc}
   1ca04:	ldr	r0, [r5]
   1ca08:	cmp	r0, #0
   1ca0c:	beq	1ca14 <create_filenames@@Base+0x60>
   1ca10:	bl	14534 <free@plt>
   1ca14:	mov	r0, #1
   1ca18:	pop	{r4, r5, r6, pc}
   1ca1c:	andeq	r8, r0, r8, lsr r1
   1ca20:	push	{r4, r5, r6, r7, r8, lr}
   1ca24:	mov	r7, r3
   1ca28:	ldr	r4, [pc, #404]	; 1cbc4 <create_filenames@@Base+0x210>
   1ca2c:	sub	sp, sp, #24
   1ca30:	ldr	ip, [pc, #400]	; 1cbc8 <create_filenames@@Base+0x214>
   1ca34:	mov	r8, r0
   1ca38:	add	r4, pc, r4
   1ca3c:	mov	r0, r1
   1ca40:	mov	r5, r2
   1ca44:	ldr	r6, [r4, ip]
   1ca48:	ldr	r3, [r6]
   1ca4c:	str	r3, [sp, #20]
   1ca50:	bl	14360 <fclose@plt>
   1ca54:	cmp	r5, #0
   1ca58:	cmpne	r7, #0
   1ca5c:	beq	1cb4c <create_filenames@@Base+0x198>
   1ca60:	mov	r0, r7
   1ca64:	mov	r1, r5
   1ca68:	bl	14348 <rename@plt>
   1ca6c:	cmp	r0, #0
   1ca70:	beq	1cab0 <create_filenames@@Base+0xfc>
   1ca74:	ldr	r3, [pc, #336]	; 1cbcc <create_filenames@@Base+0x218>
   1ca78:	ldr	r7, [r4, r3]
   1ca7c:	ldr	r3, [r7]
   1ca80:	cmp	r3, #1
   1ca84:	bls	1cab0 <create_filenames@@Base+0xfc>
   1ca88:	bl	14a2c <__errno_location@plt>
   1ca8c:	ldr	r0, [r0]
   1ca90:	bl	14210 <strerror@plt>
   1ca94:	ldr	r2, [pc, #308]	; 1cbd0 <create_filenames@@Base+0x21c>
   1ca98:	mov	r1, #2
   1ca9c:	mov	r3, r5
   1caa0:	add	r2, pc, r2
   1caa4:	str	r0, [sp]
   1caa8:	mov	r0, r7
   1caac:	bl	1493c <vcos_log_impl@plt>
   1cab0:	ldr	r2, [r8]
   1cab4:	cmp	r2, #0
   1cab8:	beq	1cb34 <create_filenames@@Base+0x180>
   1cabc:	add	r0, sp, #16
   1cac0:	add	r1, sp, #12
   1cac4:	ldr	r3, [sp, #48]	; 0x30
   1cac8:	bl	1c9b4 <create_filenames@@Base>
   1cacc:	cmp	r0, #0
   1cad0:	beq	1cb80 <create_filenames@@Base+0x1cc>
   1cad4:	ldr	r3, [pc, #240]	; 1cbcc <create_filenames@@Base+0x218>
   1cad8:	ldr	r4, [r4, r3]
   1cadc:	ldr	r3, [r4]
   1cae0:	cmp	r3, #1
   1cae4:	bls	1cb14 <create_filenames@@Base+0x160>
   1cae8:	bl	14a2c <__errno_location@plt>
   1caec:	ldr	r5, [r8]
   1caf0:	ldr	r0, [r0]
   1caf4:	bl	14210 <strerror@plt>
   1caf8:	ldr	r2, [pc, #212]	; 1cbd4 <create_filenames@@Base+0x220>
   1cafc:	mov	r3, r5
   1cb00:	mov	r1, #2
   1cb04:	add	r2, pc, r2
   1cb08:	str	r0, [sp]
   1cb0c:	mov	r0, r4
   1cb10:	bl	1493c <vcos_log_impl@plt>
   1cb14:	ldr	r0, [sp, #12]
   1cb18:	cmp	r0, #0
   1cb1c:	beq	1cb24 <create_filenames@@Base+0x170>
   1cb20:	bl	14534 <free@plt>
   1cb24:	ldr	r0, [sp, #16]
   1cb28:	cmp	r0, #0
   1cb2c:	beq	1cb34 <create_filenames@@Base+0x180>
   1cb30:	bl	14534 <free@plt>
   1cb34:	ldr	r2, [sp, #20]
   1cb38:	ldr	r3, [r6]
   1cb3c:	cmp	r2, r3
   1cb40:	bne	1cbc0 <create_filenames@@Base+0x20c>
   1cb44:	add	sp, sp, #24
   1cb48:	pop	{r4, r5, r6, r7, r8, pc}
   1cb4c:	ldr	r3, [pc, #132]	; 1cbd8 <create_filenames@@Base+0x224>
   1cb50:	movw	r2, #1606	; 0x646
   1cb54:	ldr	r1, [pc, #128]	; 1cbdc <create_filenames@@Base+0x228>
   1cb58:	add	r3, pc, r3
   1cb5c:	ldr	r0, [pc, #124]	; 1cbe0 <create_filenames@@Base+0x22c>
   1cb60:	str	r3, [sp]
   1cb64:	add	r1, pc, r1
   1cb68:	ldr	r3, [pc, #116]	; 1cbe4 <create_filenames@@Base+0x230>
   1cb6c:	add	r0, pc, r0
   1cb70:	add	r1, r1, #16
   1cb74:	add	r3, pc, r3
   1cb78:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1cb7c:	b	1ca60 <create_filenames@@Base+0xac>
   1cb80:	mov	r0, r5
   1cb84:	ldr	r1, [sp, #12]
   1cb88:	bl	14984 <link@plt>
   1cb8c:	cmp	r0, #0
   1cb90:	beq	1cba8 <create_filenames@@Base+0x1f4>
   1cb94:	mov	r0, r5
   1cb98:	ldr	r1, [sp, #12]
   1cb9c:	bl	145d0 <symlink@plt>
   1cba0:	cmp	r0, #0
   1cba4:	bne	1cad4 <create_filenames@@Base+0x120>
   1cba8:	ldr	r0, [sp, #12]
   1cbac:	ldr	r1, [sp, #16]
   1cbb0:	bl	14348 <rename@plt>
   1cbb4:	cmp	r0, #0
   1cbb8:	bne	1cad4 <create_filenames@@Base+0x120>
   1cbbc:	b	1cb14 <create_filenames@@Base+0x160>
   1cbc0:	bl	14804 <__stack_chk_fail@plt>
   1cbc4:	andeq	sp, r1, r0, asr #11
   1cbc8:	andeq	r0, r0, r4, lsr r3
   1cbcc:	andeq	r0, r0, r0, asr #6
   1cbd0:	strheq	r8, [r0], -r8	; <UNPREDICTABLE>
   1cbd4:	andeq	r8, r0, ip, ror r0
   1cbd8:	ldrdeq	r7, [r0], -r0
   1cbdc:	muleq	r0, r0, sp
   1cbe0:	andeq	r7, r0, ip, lsr #29
   1cbe4:	andeq	r6, r0, r4, lsr #9
   1cbe8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cbec:	vpush	{d8}
   1cbf0:	subs	r5, r1, #0
   1cbf4:	ldr	r9, [pc, #844]	; 1cf48 <create_filenames@@Base+0x594>
   1cbf8:	sub	sp, sp, #24
   1cbfc:	ldr	r3, [pc, #840]	; 1cf4c <create_filenames@@Base+0x598>
   1cc00:	mov	r4, r0
   1cc04:	add	r9, pc, r9
   1cc08:	ldr	r6, [r9, r3]
   1cc0c:	ldr	r3, [r6]
   1cc10:	str	r3, [sp, #20]
   1cc14:	beq	1cd94 <create_filenames@@Base+0x3e0>
   1cc18:	ldr	r3, [r0, #360]	; 0x168
   1cc1c:	cmp	r3, #0
   1cc20:	beq	1cc84 <create_filenames@@Base+0x2d0>
   1cc24:	ldr	r1, [r5, #12]
   1cc28:	blx	r3
   1cc2c:	subs	r8, r0, #0
   1cc30:	beq	1cc84 <create_filenames@@Base+0x2d0>
   1cc34:	ldr	r3, [pc, #788]	; 1cf50 <create_filenames@@Base+0x59c>
   1cc38:	ldr	r0, [r9, r3]
   1cc3c:	ldr	r3, [r0]
   1cc40:	cmp	r3, #1
   1cc44:	bls	1cc64 <create_filenames@@Base+0x2b0>
   1cc48:	ldr	r2, [pc, #772]	; 1cf54 <create_filenames@@Base+0x5a0>
   1cc4c:	mov	r1, #2
   1cc50:	ldr	r3, [pc, #768]	; 1cf58 <create_filenames@@Base+0x5a4>
   1cc54:	str	r8, [sp]
   1cc58:	add	r2, pc, r2
   1cc5c:	add	r3, pc, r3
   1cc60:	bl	1493c <vcos_log_impl@plt>
   1cc64:	ldr	r2, [sp, #20]
   1cc68:	mov	r0, r8
   1cc6c:	ldr	r3, [r6]
   1cc70:	cmp	r2, r3
   1cc74:	bne	1cf38 <create_filenames@@Base+0x584>
   1cc78:	add	sp, sp, #24
   1cc7c:	vpop	{d8}
   1cc80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc84:	ldr	r3, [r4, #364]	; 0x16c
   1cc88:	cmp	r3, #0
   1cc8c:	beq	1ccd8 <create_filenames@@Base+0x324>
   1cc90:	mov	r0, r4
   1cc94:	ldr	r1, [r5, #12]
   1cc98:	blx	r3
   1cc9c:	subs	r8, r0, #0
   1cca0:	beq	1ccd8 <create_filenames@@Base+0x324>
   1cca4:	ldr	r3, [pc, #676]	; 1cf50 <create_filenames@@Base+0x59c>
   1cca8:	ldr	r0, [r9, r3]
   1ccac:	ldr	r3, [r0]
   1ccb0:	cmp	r3, #1
   1ccb4:	bls	1cc64 <create_filenames@@Base+0x2b0>
   1ccb8:	ldr	r2, [pc, #668]	; 1cf5c <create_filenames@@Base+0x5a8>
   1ccbc:	mov	r1, #2
   1ccc0:	ldr	r3, [pc, #664]	; 1cf60 <create_filenames@@Base+0x5ac>
   1ccc4:	str	r8, [sp]
   1ccc8:	add	r2, pc, r2
   1cccc:	add	r3, pc, r3
   1ccd0:	bl	1493c <vcos_log_impl@plt>
   1ccd4:	b	1cc64 <create_filenames@@Base+0x2b0>
   1ccd8:	ldr	r3, [r4, #368]	; 0x170
   1ccdc:	cmp	r3, #0
   1cce0:	beq	1cd2c <create_filenames@@Base+0x378>
   1cce4:	mov	r0, r4
   1cce8:	ldr	r1, [r5, #12]
   1ccec:	blx	r3
   1ccf0:	subs	r8, r0, #0
   1ccf4:	beq	1cd2c <create_filenames@@Base+0x378>
   1ccf8:	ldr	r3, [pc, #592]	; 1cf50 <create_filenames@@Base+0x59c>
   1ccfc:	ldr	r0, [r9, r3]
   1cd00:	ldr	r3, [r0]
   1cd04:	cmp	r3, #1
   1cd08:	bls	1cc64 <create_filenames@@Base+0x2b0>
   1cd0c:	ldr	r2, [pc, #592]	; 1cf64 <create_filenames@@Base+0x5b0>
   1cd10:	mov	r1, #2
   1cd14:	ldr	r3, [pc, #588]	; 1cf68 <create_filenames@@Base+0x5b4>
   1cd18:	str	r8, [sp]
   1cd1c:	add	r2, pc, r2
   1cd20:	add	r3, pc, r3
   1cd24:	bl	1493c <vcos_log_impl@plt>
   1cd28:	b	1cc64 <create_filenames@@Base+0x2b0>
   1cd2c:	ldr	r3, [r4, #372]	; 0x174
   1cd30:	cmp	r3, #0
   1cd34:	beq	1cd80 <create_filenames@@Base+0x3cc>
   1cd38:	mov	r0, r4
   1cd3c:	ldr	r1, [r5, #12]
   1cd40:	blx	r3
   1cd44:	subs	r8, r0, #0
   1cd48:	beq	1cd80 <create_filenames@@Base+0x3cc>
   1cd4c:	ldr	r3, [pc, #508]	; 1cf50 <create_filenames@@Base+0x59c>
   1cd50:	ldr	r0, [r9, r3]
   1cd54:	ldr	r3, [r0]
   1cd58:	cmp	r3, #1
   1cd5c:	bls	1cc64 <create_filenames@@Base+0x2b0>
   1cd60:	ldr	r2, [pc, #516]	; 1cf6c <create_filenames@@Base+0x5b8>
   1cd64:	mov	r1, #2
   1cd68:	ldr	r3, [pc, #512]	; 1cf70 <create_filenames@@Base+0x5bc>
   1cd6c:	str	r8, [sp]
   1cd70:	add	r2, pc, r2
   1cd74:	add	r3, pc, r3
   1cd78:	bl	1493c <vcos_log_impl@plt>
   1cd7c:	b	1cc64 <create_filenames@@Base+0x2b0>
   1cd80:	ldr	r0, [r4, #344]	; 0x158
   1cd84:	cmp	r0, #0
   1cd88:	beq	1cd90 <create_filenames@@Base+0x3dc>
   1cd8c:	bl	14384 <mmal_buffer_header_release@plt>
   1cd90:	str	r5, [r4, #344]	; 0x158
   1cd94:	ldr	r3, [r4, #316]	; 0x13c
   1cd98:	cmp	r3, #0
   1cd9c:	beq	1cf10 <create_filenames@@Base+0x55c>
   1cda0:	ldr	r3, [r4, #376]	; 0x178
   1cda4:	mov	r0, r4
   1cda8:	blx	r3
   1cdac:	subs	r8, r0, #0
   1cdb0:	bne	1cc64 <create_filenames@@Base+0x2b0>
   1cdb4:	ldr	r3, [r4, #380]	; 0x17c
   1cdb8:	mov	r0, r4
   1cdbc:	blx	r3
   1cdc0:	subs	r8, r0, #0
   1cdc4:	bne	1cc64 <create_filenames@@Base+0x2b0>
   1cdc8:	ldr	r3, [r4, #448]	; 0x1c0
   1cdcc:	add	r5, sp, #12
   1cdd0:	str	r8, [sp, #8]
   1cdd4:	cmp	r3, #0
   1cdd8:	str	r8, [sp, #12]
   1cddc:	beq	1ce20 <create_filenames@@Base+0x46c>
   1cde0:	ldr	r3, [r4, #384]	; 0x180
   1cde4:	mov	r2, r5
   1cde8:	mov	r0, r4
   1cdec:	add	r1, sp, #8
   1cdf0:	blx	r3
   1cdf4:	cmp	r0, #0
   1cdf8:	add	r0, r4, #424	; 0x1a8
   1cdfc:	strne	r8, [r4, #440]	; 0x1b8
   1ce00:	ldreq	r3, [sp, #12]
   1ce04:	ldreq	r2, [sp, #8]
   1ce08:	strne	r8, [r4, #444]	; 0x1bc
   1ce0c:	streq	r3, [r4, #444]	; 0x1bc
   1ce10:	mov	r3, #0
   1ce14:	streq	r2, [r4, #440]	; 0x1b8
   1ce18:	str	r3, [r4, #448]	; 0x1c0
   1ce1c:	bl	146fc <sem_post@plt>
   1ce20:	ldr	sl, [pc, #332]	; 1cf74 <create_filenames@@Base+0x5c0>
   1ce24:	ldr	r1, [r4, #300]	; 0x12c
   1ce28:	add	sl, pc, sl
   1ce2c:	ldr	r0, [r4, #296]	; 0x128
   1ce30:	bl	14600 <eglSwapBuffers@plt>
   1ce34:	mov	r0, r5
   1ce38:	ldr	r7, [sl]
   1ce3c:	mov	r1, #0
   1ce40:	add	r7, r7, #1
   1ce44:	str	r7, [sl]
   1ce48:	bl	14570 <gettimeofday@plt>
   1ce4c:	ldr	r3, [sp, #16]
   1ce50:	movw	r2, #19923	; 0x4dd3
   1ce54:	movt	r2, #4194	; 0x1062
   1ce58:	mov	r1, #1000	; 0x3e8
   1ce5c:	ldrd	r4, [sl, #8]
   1ce60:	smull	r0, r2, r2, r3
   1ce64:	asr	r3, r3, #31
   1ce68:	ldr	r0, [sp, #12]
   1ce6c:	orrs	ip, r4, r5
   1ce70:	rsb	r2, r3, r2, asr #6
   1ce74:	asr	r3, r2, #31
   1ce78:	smlal	r2, r3, r1, r0
   1ce7c:	strdeq	r2, [sl, #8]
   1ce80:	beq	1cc64 <create_filenames@@Base+0x2b0>
   1ce84:	mov	r0, r2
   1ce88:	mov	r1, r3
   1ce8c:	subs	r0, r0, r4
   1ce90:	sbc	r1, r1, r5
   1ce94:	movw	r4, #5000	; 0x1388
   1ce98:	mov	r5, #0
   1ce9c:	cmp	r4, r0
   1cea0:	sbcs	ip, r5, r1
   1cea4:	bge	1cc64 <create_filenames@@Base+0x2b0>
   1cea8:	ldr	ip, [pc, #160]	; 1cf50 <create_filenames@@Base+0x59c>
   1ceac:	mov	r4, #0
   1ceb0:	strd	r2, [sl, #8]
   1ceb4:	str	r4, [sl]
   1ceb8:	ldr	r4, [r9, ip]
   1cebc:	ldr	r3, [r4]
   1cec0:	cmp	r3, #1
   1cec4:	bls	1cc64 <create_filenames@@Base+0x2b0>
   1cec8:	vmov	s12, r7
   1cecc:	ldr	r5, [pc, #164]	; 1cf78 <create_filenames@@Base+0x5c4>
   1ced0:	vcvt.f32.s32	s16, s12
   1ced4:	bl	22300 <vcsm_square_open@@Base+0x82c>
   1ced8:	vldr	d7, [pc, #96]	; 1cf40 <create_filenames@@Base+0x58c>
   1cedc:	add	r5, pc, r5
   1cee0:	mov	r2, r5
   1cee4:	vcvt.f64.f32	d8, s16
   1cee8:	vmov	d6, r0, r1
   1ceec:	mov	r0, r4
   1cef0:	mov	r1, #2
   1cef4:	vdiv.f64	d7, d6, d7
   1cef8:	vdiv.f64	d8, d8, d7
   1cefc:	vcvt.f32.f64	s14, d8
   1cf00:	vcvt.f64.f32	d7, s14
   1cf04:	vstr	d7, [sp]
   1cf08:	bl	1493c <vcos_log_impl@plt>
   1cf0c:	b	1cc64 <create_filenames@@Base+0x2b0>
   1cf10:	ldr	r3, [r4, #324]	; 0x144
   1cf14:	cmp	r3, #0
   1cf18:	bne	1cda0 <create_filenames@@Base+0x3ec>
   1cf1c:	ldr	r3, [r4, #332]	; 0x14c
   1cf20:	cmp	r3, #0
   1cf24:	bne	1cda0 <create_filenames@@Base+0x3ec>
   1cf28:	ldr	r8, [r4, #340]	; 0x154
   1cf2c:	cmp	r8, #0
   1cf30:	bne	1cda0 <create_filenames@@Base+0x3ec>
   1cf34:	b	1cc64 <create_filenames@@Base+0x2b0>
   1cf38:	bl	14804 <__stack_chk_fail@plt>
   1cf3c:	nop	{0}
   1cf40:	andeq	r0, r0, r0
   1cf44:	addmi	r4, pc, r0
   1cf48:	strdeq	sp, [r1], -r4
   1cf4c:	andeq	r0, r0, r4, lsr r3
   1cf50:	andeq	r0, r0, r8, lsr r3
   1cf54:	andeq	r9, r0, r0, ror r2
   1cf58:	andeq	r9, r0, r4, asr #3
   1cf5c:	andeq	r9, r0, r8, lsr #4
   1cf60:	andeq	r9, r0, r4, asr r1
   1cf64:	andeq	r9, r0, r0, lsl #4
   1cf68:	andeq	r9, r0, r0, lsl #2
   1cf6c:	ldrdeq	r9, [r0], -r4
   1cf70:	andeq	r9, r0, ip, lsr #1
   1cf74:	strdeq	r2, [r2], -r0
   1cf78:	andeq	r9, r0, ip, lsl #1
   1cf7c:	ldr	r3, [pc, #496]	; 1d174 <create_filenames@@Base+0x7c0>
   1cf80:	ldr	r2, [pc, #496]	; 1d178 <create_filenames@@Base+0x7c4>
   1cf84:	add	r3, pc, r3
   1cf88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf8c:	mov	r4, r0
   1cf90:	ldr	r6, [r3, r2]
   1cf94:	sub	sp, sp, #12
   1cf98:	ldr	r5, [r0, #8]
   1cf9c:	ldr	r3, [r6]
   1cfa0:	cmp	r3, #4
   1cfa4:	bhi	1d09c <create_filenames@@Base+0x6e8>
   1cfa8:	ldr	r3, [r4, #352]	; 0x160
   1cfac:	mov	r0, r4
   1cfb0:	blx	r3
   1cfb4:	cmp	r0, #0
   1cfb8:	bne	1cfc4 <create_filenames@@Base+0x610>
   1cfbc:	b	1d00c <create_filenames@@Base+0x658>
   1cfc0:	bl	14384 <mmal_buffer_header_release@plt>
   1cfc4:	ldr	r0, [r4, #16]
   1cfc8:	bl	144b0 <mmal_queue_get@plt>
   1cfcc:	cmp	r0, #0
   1cfd0:	bne	1cfc0 <create_filenames@@Base+0x60c>
   1cfd4:	ldr	r3, [r4, #388]	; 0x184
   1cfd8:	mov	r0, r4
   1cfdc:	blx	r3
   1cfe0:	ldr	r3, [r6]
   1cfe4:	cmp	r3, #4
   1cfe8:	bls	1d000 <create_filenames@@Base+0x64c>
   1cfec:	ldr	r2, [pc, #392]	; 1d17c <create_filenames@@Base+0x7c8>
   1cff0:	mov	r0, r6
   1cff4:	mov	r1, #5
   1cff8:	add	r2, pc, r2
   1cffc:	bl	1493c <vcos_log_impl@plt>
   1d000:	mov	r0, #0
   1d004:	add	sp, sp, #12
   1d008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d00c:	ldr	r3, [r4, #356]	; 0x164
   1d010:	mov	r0, r4
   1d014:	blx	r3
   1d018:	cmp	r0, #0
   1d01c:	bne	1cfc4 <create_filenames@@Base+0x610>
   1d020:	ldr	fp, [pc, #344]	; 1d180 <create_filenames@@Base+0x7cc>
   1d024:	ldr	r7, [pc, #344]	; 1d184 <create_filenames@@Base+0x7d0>
   1d028:	ldr	sl, [pc, #344]	; 1d188 <create_filenames@@Base+0x7d4>
   1d02c:	add	fp, pc, fp
   1d030:	ldr	r9, [pc, #340]	; 1d18c <create_filenames@@Base+0x7d8>
   1d034:	add	fp, fp, #32
   1d038:	ldr	r3, [r4, #232]	; 0xe8
   1d03c:	add	r7, pc, r7
   1d040:	add	sl, pc, sl
   1d044:	add	r9, pc, r9
   1d048:	cmp	r3, #0
   1d04c:	bne	1cfc4 <create_filenames@@Base+0x610>
   1d050:	ldr	r3, [r4, #12]
   1d054:	ldr	r0, [r3]
   1d058:	bl	144b0 <mmal_queue_get@plt>
   1d05c:	subs	r8, r0, #0
   1d060:	mov	r0, r5
   1d064:	mov	r1, r8
   1d068:	beq	1d0d0 <create_filenames@@Base+0x71c>
   1d06c:	bl	14a50 <mmal_port_send_buffer@plt>
   1d070:	cmp	r0, #0
   1d074:	beq	1d050 <create_filenames@@Base+0x69c>
   1d078:	ldr	r3, [r6]
   1d07c:	mov	r0, r6
   1d080:	mov	r1, #2
   1d084:	mov	r2, r7
   1d088:	cmp	r3, #1
   1d08c:	bls	1d050 <create_filenames@@Base+0x69c>
   1d090:	ldr	r3, [r5, #4]
   1d094:	bl	1493c <vcos_log_impl@plt>
   1d098:	b	1d050 <create_filenames@@Base+0x69c>
   1d09c:	ldr	r3, [pc, #236]	; 1d190 <create_filenames@@Base+0x7dc>
   1d0a0:	mov	r0, r6
   1d0a4:	ldr	r2, [pc, #232]	; 1d194 <create_filenames@@Base+0x7e0>
   1d0a8:	mov	r1, #5
   1d0ac:	add	r3, pc, r3
   1d0b0:	str	r5, [sp]
   1d0b4:	add	r3, r3, #16
   1d0b8:	add	r2, pc, r2
   1d0bc:	bl	1493c <vcos_log_impl@plt>
   1d0c0:	b	1cfa8 <create_filenames@@Base+0x5f4>
   1d0c4:	ldr	r3, [r4, #232]	; 0xe8
   1d0c8:	cmp	r3, #0
   1d0cc:	beq	1d0f0 <create_filenames@@Base+0x73c>
   1d0d0:	ldr	r0, [r4, #16]
   1d0d4:	bl	144b0 <mmal_queue_get@plt>
   1d0d8:	cmp	r0, #0
   1d0dc:	bne	1d0c4 <create_filenames@@Base+0x710>
   1d0e0:	cmp	r8, #0
   1d0e4:	beq	1d158 <create_filenames@@Base+0x7a4>
   1d0e8:	ldr	r3, [r4, #232]	; 0xe8
   1d0ec:	b	1d048 <create_filenames@@Base+0x694>
   1d0f0:	mov	r1, r0
   1d0f4:	mov	r0, r4
   1d0f8:	bl	1cbe8 <create_filenames@@Base+0x234>
   1d0fc:	mov	r8, #1
   1d100:	cmp	r0, #0
   1d104:	beq	1d0d0 <create_filenames@@Base+0x71c>
   1d108:	ldr	r3, [r6]
   1d10c:	cmp	r3, r8
   1d110:	bls	1d12c <create_filenames@@Base+0x778>
   1d114:	mov	r3, fp
   1d118:	mov	r0, r6
   1d11c:	mov	r1, #2
   1d120:	mov	r2, sl
   1d124:	bl	1493c <vcos_log_impl@plt>
   1d128:	ldr	r3, [r6]
   1d12c:	mov	r2, #1
   1d130:	str	r2, [r4, #232]	; 0xe8
   1d134:	cmp	r3, #1
   1d138:	bls	1d14c <create_filenames@@Base+0x798>
   1d13c:	mov	r0, r6
   1d140:	mov	r1, #2
   1d144:	mov	r2, r9
   1d148:	bl	1493c <vcos_log_impl@plt>
   1d14c:	mov	r3, #1
   1d150:	str	r3, [r4, #232]	; 0xe8
   1d154:	b	1d048 <create_filenames@@Base+0x694>
   1d158:	mov	r1, r8
   1d15c:	mov	r0, r4
   1d160:	bl	1cbe8 <create_filenames@@Base+0x234>
   1d164:	cmp	r0, #0
   1d168:	beq	1d0e8 <create_filenames@@Base+0x734>
   1d16c:	ldr	r3, [r6]
   1d170:	b	1d134 <create_filenames@@Base+0x780>
   1d174:	andeq	sp, r1, r4, ror r0
   1d178:	andeq	r0, r0, r8, lsr r3
   1d17c:	andeq	r8, r0, r0, ror #31
   1d180:	strdeq	r8, [r0], -r4
   1d184:	andeq	r8, r0, r4, asr #30
   1d188:	andeq	r8, r0, ip, asr pc
   1d18c:	andeq	r8, r0, ip, ror pc
   1d190:	andeq	r8, r0, r4, ror sp
   1d194:			; <UNDEFINED> instruction: 0x00008ebc
   1d198:	push	{r3, r4, r5, lr}
   1d19c:	mov	r2, r0
   1d1a0:	ldr	r3, [r1, #20]
   1d1a4:	mov	r4, r1
   1d1a8:	ldr	r5, [r0, #56]	; 0x38
   1d1ac:	cmp	r3, #0
   1d1b0:	ldr	r3, [pc, #144]	; 1d248 <create_filenames@@Base+0x894>
   1d1b4:	add	r3, pc, r3
   1d1b8:	bne	1d1e4 <create_filenames@@Base+0x830>
   1d1bc:	ldr	r1, [pc, #136]	; 1d24c <create_filenames@@Base+0x898>
   1d1c0:	ldr	r0, [r3, r1]
   1d1c4:	ldr	r3, [r0]
   1d1c8:	cmp	r3, #4
   1d1cc:	bhi	1d1fc <create_filenames@@Base+0x848>
   1d1d0:	mov	r3, #1
   1d1d4:	mov	r0, r4
   1d1d8:	str	r3, [r5, #232]	; 0xe8
   1d1dc:	pop	{r3, r4, r5, lr}
   1d1e0:	b	14384 <mmal_buffer_header_release@plt>
   1d1e4:	ldr	r0, [r1, #12]
   1d1e8:	cmp	r0, #0
   1d1ec:	beq	1d214 <create_filenames@@Base+0x860>
   1d1f0:	ldr	r0, [r5, #16]
   1d1f4:	pop	{r3, r4, r5, lr}
   1d1f8:	b	145f4 <mmal_queue_put@plt>
   1d1fc:	ldr	r3, [r2, #4]
   1d200:	mov	r1, #5
   1d204:	ldr	r2, [pc, #68]	; 1d250 <create_filenames@@Base+0x89c>
   1d208:	add	r2, pc, r2
   1d20c:	bl	1493c <vcos_log_impl@plt>
   1d210:	b	1d1d0 <create_filenames@@Base+0x81c>
   1d214:	ldr	r1, [pc, #48]	; 1d24c <create_filenames@@Base+0x898>
   1d218:	ldr	r0, [r3, r1]
   1d21c:	ldr	r3, [r0]
   1d220:	cmp	r3, #4
   1d224:	bls	1d23c <create_filenames@@Base+0x888>
   1d228:	ldr	r3, [r2, #4]
   1d22c:	mov	r1, #5
   1d230:	ldr	r2, [pc, #28]	; 1d254 <create_filenames@@Base+0x8a0>
   1d234:	add	r2, pc, r2
   1d238:	bl	1493c <vcos_log_impl@plt>
   1d23c:	mov	r0, r4
   1d240:	pop	{r3, r4, r5, lr}
   1d244:	b	14384 <mmal_buffer_header_release@plt>
   1d248:	andeq	ip, r1, r4, asr #28
   1d24c:	andeq	r0, r0, r8, lsr r3
   1d250:	andeq	r8, r0, r8, ror #27
   1d254:	ldrdeq	r8, [r0], -ip

0001d258 <raspitex_parse_cmdline@@Base>:
   1d258:	push	{r4, r5, r6, r7, r8, lr}
   1d25c:	cmp	r1, #0
   1d260:	ldr	r4, [pc, #504]	; 1d460 <raspitex_parse_cmdline@@Base+0x208>
   1d264:	sub	sp, sp, #16
   1d268:	ldr	r3, [pc, #500]	; 1d464 <raspitex_parse_cmdline@@Base+0x20c>
   1d26c:	mov	r7, r0
   1d270:	add	r4, pc, r4
   1d274:	mov	r8, r2
   1d278:	ldr	r5, [r4, r3]
   1d27c:	ldr	r3, [r5]
   1d280:	str	r3, [sp, #12]
   1d284:	beq	1d2d0 <raspitex_parse_cmdline@@Base+0x78>
   1d288:	ldr	r0, [pc, #472]	; 1d468 <raspitex_parse_cmdline@@Base+0x210>
   1d28c:	mov	r2, r1
   1d290:	add	r3, sp, #8
   1d294:	mov	r1, #2
   1d298:	add	r0, pc, r0
   1d29c:	bl	1a450 <raspicli_get_command_id@@Base>
   1d2a0:	cmn	r0, #1
   1d2a4:	mov	r6, r0
   1d2a8:	beq	1d2d0 <raspitex_parse_cmdline@@Base+0x78>
   1d2ac:	ldr	r3, [sp, #8]
   1d2b0:	cmp	r3, #0
   1d2b4:	ble	1d2c0 <raspitex_parse_cmdline@@Base+0x68>
   1d2b8:	cmp	r8, #0
   1d2bc:	beq	1d2d0 <raspitex_parse_cmdline@@Base+0x78>
   1d2c0:	cmp	r6, #0
   1d2c4:	beq	1d340 <raspitex_parse_cmdline@@Base+0xe8>
   1d2c8:	cmp	r6, #1
   1d2cc:	beq	1d2ec <raspitex_parse_cmdline@@Base+0x94>
   1d2d0:	mov	r0, #0
   1d2d4:	ldr	r2, [sp, #12]
   1d2d8:	ldr	r3, [r5]
   1d2dc:	cmp	r2, r3
   1d2e0:	bne	1d45c <raspitex_parse_cmdline@@Base+0x204>
   1d2e4:	add	sp, sp, #16
   1d2e8:	pop	{r4, r5, r6, r7, r8, pc}
   1d2ec:	ldr	r1, [pc, #376]	; 1d46c <raspitex_parse_cmdline@@Base+0x214>
   1d2f0:	add	r2, r7, #260	; 0x104
   1d2f4:	add	r3, r7, #264	; 0x108
   1d2f8:	mov	r0, r8
   1d2fc:	stm	sp, {r2, r3}
   1d300:	add	r1, pc, r1
   1d304:	add	r3, r7, #256	; 0x100
   1d308:	add	r2, r7, #252	; 0xfc
   1d30c:	bl	14648 <sscanf@plt>
   1d310:	cmp	r0, #4
   1d314:	streq	r6, [r7, #272]	; 0x110
   1d318:	movne	r3, #0
   1d31c:	movne	r1, #640	; 0x280
   1d320:	movne	r2, #480	; 0x1e0
   1d324:	strne	r3, [r7, #256]	; 0x100
   1d328:	strne	r3, [r7, #252]	; 0xfc
   1d32c:	movne	r0, #2
   1d330:	strne	r1, [r7, #260]	; 0x104
   1d334:	moveq	r0, #2
   1d338:	strne	r2, [r7, #264]	; 0x108
   1d33c:	b	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d340:	ldr	r1, [pc, #296]	; 1d470 <raspitex_parse_cmdline@@Base+0x218>
   1d344:	mov	r0, r8
   1d348:	add	r1, pc, r1
   1d34c:	bl	149fc <strcmp@plt>
   1d350:	cmp	r0, #0
   1d354:	streq	r6, [r7, #348]	; 0x15c
   1d358:	moveq	r0, #2
   1d35c:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d360:	ldr	r1, [pc, #268]	; 1d474 <raspitex_parse_cmdline@@Base+0x21c>
   1d364:	mov	r0, r8
   1d368:	add	r1, pc, r1
   1d36c:	bl	149fc <strcmp@plt>
   1d370:	cmp	r0, #0
   1d374:	moveq	r0, #2
   1d378:	streq	r0, [r7, #348]	; 0x15c
   1d37c:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d380:	ldr	r1, [pc, #240]	; 1d478 <raspitex_parse_cmdline@@Base+0x220>
   1d384:	mov	r0, r8
   1d388:	add	r1, pc, r1
   1d38c:	bl	149fc <strcmp@plt>
   1d390:	cmp	r0, #0
   1d394:	moveq	r3, #1
   1d398:	moveq	r0, #2
   1d39c:	streq	r3, [r7, #348]	; 0x15c
   1d3a0:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d3a4:	ldrb	r3, [r8]
   1d3a8:	cmp	r3, #121	; 0x79
   1d3ac:	bne	1d3e0 <raspitex_parse_cmdline@@Base+0x188>
   1d3b0:	ldrb	r3, [r8, #1]
   1d3b4:	cmp	r3, #117	; 0x75
   1d3b8:	bne	1d3e0 <raspitex_parse_cmdline@@Base+0x188>
   1d3bc:	ldrb	r3, [r8, #2]
   1d3c0:	cmp	r3, #118	; 0x76
   1d3c4:	bne	1d3e0 <raspitex_parse_cmdline@@Base+0x188>
   1d3c8:	ldrb	r3, [r8, #3]
   1d3cc:	cmp	r3, #0
   1d3d0:	moveq	r3, #3
   1d3d4:	moveq	r0, #2
   1d3d8:	streq	r3, [r7, #348]	; 0x15c
   1d3dc:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d3e0:	ldr	r1, [pc, #148]	; 1d47c <raspitex_parse_cmdline@@Base+0x224>
   1d3e4:	mov	r0, r8
   1d3e8:	add	r1, pc, r1
   1d3ec:	bl	149fc <strcmp@plt>
   1d3f0:	cmp	r0, #0
   1d3f4:	moveq	r3, #4
   1d3f8:	moveq	r0, #2
   1d3fc:	streq	r3, [r7, #348]	; 0x15c
   1d400:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d404:	ldr	r1, [pc, #116]	; 1d480 <raspitex_parse_cmdline@@Base+0x228>
   1d408:	mov	r0, r8
   1d40c:	add	r1, pc, r1
   1d410:	bl	149fc <strcmp@plt>
   1d414:	cmp	r0, #0
   1d418:	moveq	r3, #5
   1d41c:	moveq	r0, #2
   1d420:	streq	r3, [r7, #348]	; 0x15c
   1d424:	beq	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d428:	ldr	r3, [pc, #84]	; 1d484 <raspitex_parse_cmdline@@Base+0x22c>
   1d42c:	ldr	r0, [r4, r3]
   1d430:	ldr	r3, [r0]
   1d434:	cmp	r3, #1
   1d438:	movls	r0, #2
   1d43c:	bls	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d440:	ldr	r2, [pc, #64]	; 1d488 <raspitex_parse_cmdline@@Base+0x230>
   1d444:	mov	r3, r8
   1d448:	mov	r1, #2
   1d44c:	add	r2, pc, r2
   1d450:	bl	1493c <vcos_log_impl@plt>
   1d454:	mov	r0, #2
   1d458:	b	1d2d4 <raspitex_parse_cmdline@@Base+0x7c>
   1d45c:	bl	14804 <__stack_chk_fail@plt>
   1d460:	andeq	ip, r1, r8, lsl #27
   1d464:	andeq	r0, r0, r4, lsr r3
   1d468:	andeq	sp, r1, ip, asr r7
   1d46c:	andeq	r6, r0, r0, ror #24
   1d470:	andeq	r8, r0, r0, ror #25
   1d474:	andeq	r8, r0, r8, asr #25
   1d478:			; <UNDEFINED> instruction: 0x00008cb0
   1d47c:	andeq	r8, r0, r8, asr ip
   1d480:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1d484:	andeq	r0, r0, r8, lsr r3
   1d488:	strdeq	r8, [r0], -ip

0001d48c <raspitex_display_help@@Base>:
   1d48c:	push	{r3, lr}
   1d490:	mov	r1, #1
   1d494:	ldr	r3, [pc, #48]	; 1d4cc <raspitex_display_help@@Base+0x40>
   1d498:	mov	r2, #24
   1d49c:	ldr	ip, [pc, #44]	; 1d4d0 <raspitex_display_help@@Base+0x44>
   1d4a0:	add	r3, pc, r3
   1d4a4:	ldr	r0, [pc, #40]	; 1d4d4 <raspitex_display_help@@Base+0x48>
   1d4a8:	ldr	r3, [r3, ip]
   1d4ac:	add	r0, pc, r0
   1d4b0:	ldr	r3, [r3]
   1d4b4:	bl	147b0 <fwrite@plt>
   1d4b8:	ldr	r0, [pc, #24]	; 1d4d8 <raspitex_display_help@@Base+0x4c>
   1d4bc:	mov	r1, #2
   1d4c0:	add	r0, pc, r0
   1d4c4:	pop	{r3, lr}
   1d4c8:	b	1a5b8 <raspicli_display_help@@Base>
   1d4cc:	andeq	ip, r1, r8, asr fp
   1d4d0:	andeq	r0, r0, r0, asr r3
   1d4d4:			; <UNDEFINED> instruction: 0x00008bb0
   1d4d8:	andeq	sp, r1, r4, lsr r5

0001d4dc <raspitex_configure_preview_port@@Base>:
   1d4dc:	ldr	r3, [pc, #440]	; 1d69c <raspitex_configure_preview_port@@Base+0x1c0>
   1d4e0:	ldr	r2, [pc, #440]	; 1d6a0 <raspitex_configure_preview_port@@Base+0x1c4>
   1d4e4:	add	r3, pc, r3
   1d4e8:	push	{r4, r5, r6, lr}
   1d4ec:	mov	r6, r0
   1d4f0:	ldr	r4, [r3, r2]
   1d4f4:	sub	sp, sp, #8
   1d4f8:	mov	r5, r1
   1d4fc:	ldr	r3, [r4]
   1d500:	cmp	r3, #4
   1d504:	bhi	1d5e4 <raspitex_configure_preview_port@@Base+0x108>
   1d508:	mov	r0, r5
   1d50c:	mov	r1, #4
   1d510:	mov	r2, #1
   1d514:	bl	14a08 <mmal_port_parameter_set_boolean@plt>
   1d518:	cmp	r0, #0
   1d51c:	beq	1d54c <raspitex_configure_preview_port@@Base+0x70>
   1d520:	ldr	r3, [r4]
   1d524:	cmp	r3, #1
   1d528:	bls	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d52c:	ldr	r2, [pc, #368]	; 1d6a4 <raspitex_configure_preview_port@@Base+0x1c8>
   1d530:	mov	r0, r4
   1d534:	mov	r1, #2
   1d538:	add	r2, pc, r2
   1d53c:	bl	1493c <vcos_log_impl@plt>
   1d540:	mvn	r0, #0
   1d544:	add	sp, sp, #8
   1d548:	pop	{r4, r5, r6, pc}
   1d54c:	mov	r0, r5
   1d550:	bl	148e8 <mmal_port_format_commit@plt>
   1d554:	cmp	r0, #0
   1d558:	bne	1d60c <raspitex_configure_preview_port@@Base+0x130>
   1d55c:	ldr	r1, [r4]
   1d560:	ldr	r3, [r5, #36]	; 0x24
   1d564:	ldr	r2, [r5, #40]	; 0x28
   1d568:	cmp	r1, #4
   1d56c:	str	r5, [r6, #8]
   1d570:	movls	r1, r3
   1d574:	str	r3, [r5, #44]	; 0x2c
   1d578:	str	r2, [r5, #48]	; 0x30
   1d57c:	bhi	1d654 <raspitex_configure_preview_port@@Base+0x178>
   1d580:	mov	r0, r5
   1d584:	bl	14324 <mmal_port_pool_create@plt>
   1d588:	cmp	r0, #0
   1d58c:	str	r0, [r6, #12]
   1d590:	beq	1d630 <raspitex_configure_preview_port@@Base+0x154>
   1d594:	bl	14810 <mmal_queue_create@plt>
   1d598:	cmp	r0, #0
   1d59c:	str	r0, [r6, #16]
   1d5a0:	beq	1d678 <raspitex_configure_preview_port@@Base+0x19c>
   1d5a4:	ldr	r1, [pc, #252]	; 1d6a8 <raspitex_configure_preview_port@@Base+0x1cc>
   1d5a8:	mov	r0, r5
   1d5ac:	str	r6, [r5, #56]	; 0x38
   1d5b0:	add	r1, pc, r1
   1d5b4:	bl	142d0 <mmal_port_enable@plt>
   1d5b8:	cmp	r0, #0
   1d5bc:	beq	1d544 <raspitex_configure_preview_port@@Base+0x68>
   1d5c0:	ldr	r3, [r4]
   1d5c4:	cmp	r3, #1
   1d5c8:	bls	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d5cc:	ldr	r2, [pc, #216]	; 1d6ac <raspitex_configure_preview_port@@Base+0x1d0>
   1d5d0:	mov	r0, r4
   1d5d4:	mov	r1, #2
   1d5d8:	add	r2, pc, r2
   1d5dc:	bl	1493c <vcos_log_impl@plt>
   1d5e0:	b	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d5e4:	ldr	r3, [pc, #196]	; 1d6b0 <raspitex_configure_preview_port@@Base+0x1d4>
   1d5e8:	mov	r0, r4
   1d5ec:	ldr	r2, [pc, #192]	; 1d6b4 <raspitex_configure_preview_port@@Base+0x1d8>
   1d5f0:	add	r3, pc, r3
   1d5f4:	str	r1, [sp]
   1d5f8:	add	r3, r3, #64	; 0x40
   1d5fc:	mov	r1, #5
   1d600:	add	r2, pc, r2
   1d604:	bl	1493c <vcos_log_impl@plt>
   1d608:	b	1d508 <raspitex_configure_preview_port@@Base+0x2c>
   1d60c:	ldr	r3, [r4]
   1d610:	cmp	r3, #1
   1d614:	bls	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d618:	ldr	r2, [pc, #152]	; 1d6b8 <raspitex_configure_preview_port@@Base+0x1dc>
   1d61c:	mov	r0, r4
   1d620:	mov	r1, #2
   1d624:	add	r2, pc, r2
   1d628:	bl	1493c <vcos_log_impl@plt>
   1d62c:	b	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d630:	ldr	r3, [r4]
   1d634:	cmp	r3, #1
   1d638:	bls	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d63c:	ldr	r2, [pc, #120]	; 1d6bc <raspitex_configure_preview_port@@Base+0x1e0>
   1d640:	mov	r0, r4
   1d644:	mov	r1, #2
   1d648:	add	r2, pc, r2
   1d64c:	bl	1493c <vcos_log_impl@plt>
   1d650:	b	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d654:	str	r2, [sp]
   1d658:	mov	r1, #5
   1d65c:	ldr	r2, [pc, #92]	; 1d6c0 <raspitex_configure_preview_port@@Base+0x1e4>
   1d660:	mov	r0, r4
   1d664:	add	r2, pc, r2
   1d668:	bl	1493c <vcos_log_impl@plt>
   1d66c:	ldr	r1, [r5, #44]	; 0x2c
   1d670:	ldr	r2, [r5, #48]	; 0x30
   1d674:	b	1d580 <raspitex_configure_preview_port@@Base+0xa4>
   1d678:	ldr	r3, [r4]
   1d67c:	cmp	r3, #1
   1d680:	bls	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d684:	ldr	r2, [pc, #56]	; 1d6c4 <raspitex_configure_preview_port@@Base+0x1e8>
   1d688:	mov	r0, r4
   1d68c:	mov	r1, #2
   1d690:	add	r2, pc, r2
   1d694:	bl	1493c <vcos_log_impl@plt>
   1d698:	b	1d540 <raspitex_configure_preview_port@@Base+0x64>
   1d69c:	andeq	ip, r1, r4, lsl fp
   1d6a0:	andeq	r0, r0, r8, lsr r3
   1d6a4:	andeq	r8, r0, ip, asr #22
   1d6a8:			; <UNDEFINED> instruction: 0xfffffbe0
   1d6ac:	andeq	r8, r0, r4, asr #22
   1d6b0:	andeq	r8, r0, r0, lsr r8
   1d6b4:	andeq	r8, r0, r8, ror sl
   1d6b8:	andeq	r7, r0, r8, asr #15
   1d6bc:	andeq	r8, r0, r4, lsr #21
   1d6c0:	andeq	r8, r0, r4, asr sl
   1d6c4:	andeq	r8, r0, r4, ror sl

0001d6c8 <raspitex_init@@Base>:
   1d6c8:	push	{r3, r4, r5, lr}
   1d6cc:	mov	r5, r0
   1d6d0:	bl	1442c <vcos_init@plt>
   1d6d4:	ldr	r4, [pc, #304]	; 1d80c <raspitex_init@@Base+0x144>
   1d6d8:	ldr	r2, [pc, #304]	; 1d810 <raspitex_init@@Base+0x148>
   1d6dc:	add	r4, pc, r4
   1d6e0:	ldr	r0, [pc, #300]	; 1d814 <raspitex_init@@Base+0x14c>
   1d6e4:	mov	r3, r4
   1d6e8:	ldr	r4, [r4, r2]
   1d6ec:	add	r0, pc, r0
   1d6f0:	mov	r1, r4
   1d6f4:	bl	148f4 <vcos_log_register@plt>
   1d6f8:	ldr	r3, [r5, #404]	; 0x194
   1d6fc:	mov	r1, #0
   1d700:	add	r0, r5, #408	; 0x198
   1d704:	cmp	r3, r1
   1d708:	mov	r2, #1
   1d70c:	moveq	r3, #3
   1d710:	movne	r3, #4
   1d714:	str	r3, [r4]
   1d718:	bl	143e4 <sem_init@plt>
   1d71c:	cmn	r0, #1
   1d720:	beq	1d764 <raspitex_init@@Base+0x9c>
   1d724:	mov	r1, #0
   1d728:	add	r0, r5, #424	; 0x1a8
   1d72c:	mov	r2, r1
   1d730:	bl	143e4 <sem_init@plt>
   1d734:	cmn	r0, #1
   1d738:	beq	1d7ac <raspitex_init@@Base+0xe4>
   1d73c:	ldr	r3, [r5, #348]	; 0x15c
   1d740:	cmp	r3, #5
   1d744:	addls	pc, pc, r3, lsl #2
   1d748:	b	1d770 <raspitex_init@@Base+0xa8>
   1d74c:	b	1d7d0 <raspitex_init@@Base+0x108>
   1d750:	b	1d800 <raspitex_init@@Base+0x138>
   1d754:	b	1d7f4 <raspitex_init@@Base+0x12c>
   1d758:	b	1d7e8 <raspitex_init@@Base+0x120>
   1d75c:	b	1d7dc <raspitex_init@@Base+0x114>
   1d760:	b	1d7bc <raspitex_init@@Base+0xf4>
   1d764:	bl	1487c <vcos_pthreads_map_errno@plt>
   1d768:	cmp	r0, #0
   1d76c:	beq	1d724 <raspitex_init@@Base+0x5c>
   1d770:	ldr	r3, [r4]
   1d774:	cmp	r3, #1
   1d778:	bls	1d7a4 <raspitex_init@@Base+0xdc>
   1d77c:	ldr	r3, [pc, #148]	; 1d818 <raspitex_init@@Base+0x150>
   1d780:	mov	r0, r4
   1d784:	ldr	r2, [pc, #144]	; 1d81c <raspitex_init@@Base+0x154>
   1d788:	mov	r1, #2
   1d78c:	add	r3, pc, r3
   1d790:	add	r2, pc, r2
   1d794:	add	r3, r3, #96	; 0x60
   1d798:	bl	1493c <vcos_log_impl@plt>
   1d79c:	mvn	r0, #0
   1d7a0:	pop	{r3, r4, r5, pc}
   1d7a4:	mvn	r0, #0
   1d7a8:	pop	{r3, r4, r5, pc}
   1d7ac:	bl	1487c <vcos_pthreads_map_errno@plt>
   1d7b0:	cmp	r0, #0
   1d7b4:	bne	1d770 <raspitex_init@@Base+0xa8>
   1d7b8:	b	1d73c <raspitex_init@@Base+0x74>
   1d7bc:	mov	r0, r5
   1d7c0:	bl	21ad4 <vcsm_square_open@@Base>
   1d7c4:	cmp	r0, #0
   1d7c8:	bne	1d770 <raspitex_init@@Base+0xa8>
   1d7cc:	pop	{r3, r4, r5, pc}
   1d7d0:	mov	r0, r5
   1d7d4:	bl	210a0 <square_open@@Base>
   1d7d8:	b	1d7c4 <raspitex_init@@Base+0xfc>
   1d7dc:	mov	r0, r5
   1d7e0:	bl	20ef8 <sobel_open@@Base>
   1d7e4:	b	1d7c4 <raspitex_init@@Base+0xfc>
   1d7e8:	mov	r0, r5
   1d7ec:	bl	20c94 <yuv_open@@Base>
   1d7f0:	b	1d7c4 <raspitex_init@@Base+0xfc>
   1d7f4:	mov	r0, r5
   1d7f8:	bl	214fc <teapot_open@@Base>
   1d7fc:	b	1d7c4 <raspitex_init@@Base+0xfc>
   1d800:	mov	r0, r5
   1d804:	bl	20ab0 <mirror_open@@Base>
   1d808:	b	1d7c4 <raspitex_init@@Base+0xfc>
   1d80c:	andeq	ip, r1, ip, lsl r9
   1d810:	andeq	r0, r0, r8, lsr r3
   1d814:	andeq	r8, r0, r0, asr sl
   1d818:	muleq	r0, r4, r6
   1d81c:			; <UNDEFINED> instruction: 0x000089b8

0001d820 <raspitex_destroy@@Base>:
   1d820:	ldr	r3, [pc, #168]	; 1d8d0 <raspitex_destroy@@Base+0xb0>
   1d824:	ldr	r2, [pc, #168]	; 1d8d4 <raspitex_destroy@@Base+0xb4>
   1d828:	add	r3, pc, r3
   1d82c:	push	{r4, lr}
   1d830:	mov	r4, r0
   1d834:	ldr	r0, [r3, r2]
   1d838:	ldr	r3, [r0]
   1d83c:	cmp	r3, #4
   1d840:	bhi	1d8b0 <raspitex_destroy@@Base+0x90>
   1d844:	ldr	r0, [r4, #12]
   1d848:	cmp	r0, #0
   1d84c:	beq	1d85c <raspitex_destroy@@Base+0x3c>
   1d850:	bl	14a98 <mmal_pool_destroy@plt>
   1d854:	mov	r3, #0
   1d858:	str	r3, [r4, #12]
   1d85c:	ldr	r0, [r4, #16]
   1d860:	cmp	r0, #0
   1d864:	beq	1d874 <raspitex_destroy@@Base+0x54>
   1d868:	bl	14888 <mmal_queue_destroy@plt>
   1d86c:	mov	r3, #0
   1d870:	str	r3, [r4, #16]
   1d874:	ldr	r3, [r4, #392]	; 0x188
   1d878:	cmp	r3, #0
   1d87c:	beq	1d888 <raspitex_destroy@@Base+0x68>
   1d880:	mov	r0, r4
   1d884:	blx	r3
   1d888:	ldr	r3, [r4, #396]	; 0x18c
   1d88c:	cmp	r3, #0
   1d890:	beq	1d89c <raspitex_destroy@@Base+0x7c>
   1d894:	mov	r0, r4
   1d898:	blx	r3
   1d89c:	add	r0, r4, #408	; 0x198
   1d8a0:	bl	14420 <sem_destroy@plt>
   1d8a4:	add	r0, r4, #424	; 0x1a8
   1d8a8:	pop	{r4, lr}
   1d8ac:	b	14420 <sem_destroy@plt>
   1d8b0:	ldr	r3, [pc, #32]	; 1d8d8 <raspitex_destroy@@Base+0xb8>
   1d8b4:	mov	r1, #5
   1d8b8:	ldr	r2, [pc, #28]	; 1d8dc <raspitex_destroy@@Base+0xbc>
   1d8bc:	add	r3, pc, r3
   1d8c0:	add	r2, pc, r2
   1d8c4:	add	r3, r3, #112	; 0x70
   1d8c8:	bl	1493c <vcos_log_impl@plt>
   1d8cc:	b	1d844 <raspitex_destroy@@Base+0x24>
   1d8d0:	ldrdeq	ip, [r1], -r0
   1d8d4:	andeq	r0, r0, r8, lsr r3
   1d8d8:	andeq	r8, r0, r4, ror #10
   1d8dc:	andeq	r5, r0, r8, asr r7

0001d8e0 <raspitex_set_defaults@@Base>:
   1d8e0:	push	{r4, r5, r6, lr}
   1d8e4:	mov	r1, #0
   1d8e8:	mov	r2, #456	; 0x1c8
   1d8ec:	ldr	r5, [pc, #144]	; 1d984 <raspitex_set_defaults@@Base+0xa4>
   1d8f0:	mov	r4, r0
   1d8f4:	bl	14414 <memset@plt>
   1d8f8:	ldr	r2, [pc, #136]	; 1d988 <raspitex_set_defaults@@Base+0xa8>
   1d8fc:	add	r5, pc, r5
   1d900:	mov	r3, #1
   1d904:	mov	r1, #255	; 0xff
   1d908:	str	r3, [r4]
   1d90c:	mov	r3, #640	; 0x280
   1d910:	str	r1, [r4, #268]	; 0x10c
   1d914:	mov	r1, #480	; 0x1e0
   1d918:	str	r3, [r4, #260]	; 0x104
   1d91c:	mov	r3, r5
   1d920:	str	r1, [r4, #264]	; 0x108
   1d924:	ldr	r0, [r5, r2]
   1d928:	ldr	r1, [pc, #92]	; 1d98c <raspitex_set_defaults@@Base+0xac>
   1d92c:	ldr	r2, [pc, #92]	; 1d990 <raspitex_set_defaults@@Base+0xb0>
   1d930:	str	r0, [r4, #352]	; 0x160
   1d934:	ldr	r1, [r3, r1]
   1d938:	ldr	r5, [pc, #84]	; 1d994 <raspitex_set_defaults@@Base+0xb4>
   1d93c:	ldr	ip, [pc, #84]	; 1d998 <raspitex_set_defaults@@Base+0xb8>
   1d940:	str	r1, [r4, #356]	; 0x164
   1d944:	ldr	r6, [r3, r2]
   1d948:	ldr	r0, [pc, #76]	; 1d99c <raspitex_set_defaults@@Base+0xbc>
   1d94c:	ldr	r1, [pc, #76]	; 1d9a0 <raspitex_set_defaults@@Base+0xc0>
   1d950:	str	r6, [r4, #376]	; 0x178
   1d954:	ldr	r5, [r3, r5]
   1d958:	ldr	r2, [pc, #68]	; 1d9a4 <raspitex_set_defaults@@Base+0xc4>
   1d95c:	str	r5, [r4, #380]	; 0x17c
   1d960:	ldr	ip, [r3, ip]
   1d964:	str	ip, [r4, #384]	; 0x180
   1d968:	ldr	r0, [r3, r0]
   1d96c:	str	r0, [r4, #388]	; 0x184
   1d970:	ldr	r1, [r3, r1]
   1d974:	str	r1, [r4, #392]	; 0x188
   1d978:	ldr	r3, [r3, r2]
   1d97c:	str	r3, [r4, #396]	; 0x18c
   1d980:	pop	{r4, r5, r6, pc}
   1d984:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1d988:	andeq	r0, r0, r4, lsl r3
   1d98c:	andeq	r0, r0, r8, asr r3
   1d990:	andeq	r0, r0, ip, lsr #6
   1d994:	andeq	r0, r0, r0, lsr #6
   1d998:	andeq	r0, r0, r8, lsl #6
   1d99c:	andeq	r0, r0, r4, asr #6
   1d9a0:	andeq	r0, r0, r4, lsr #6
   1d9a4:	andeq	r0, r0, ip, lsl r3

0001d9a8 <raspitex_stop@@Base>:
   1d9a8:	ldr	r2, [r0, #232]	; 0xe8
   1d9ac:	ldr	r3, [pc, #80]	; 1da04 <raspitex_stop@@Base+0x5c>
   1d9b0:	cmp	r2, #0
   1d9b4:	push	{r4, lr}
   1d9b8:	add	r3, pc, r3
   1d9bc:	mov	r4, r0
   1d9c0:	popne	{r4, pc}
   1d9c4:	ldr	r2, [pc, #60]	; 1da08 <raspitex_stop@@Base+0x60>
   1d9c8:	ldr	r0, [r3, r2]
   1d9cc:	ldr	r3, [r0]
   1d9d0:	cmp	r3, #4
   1d9d4:	bhi	1d9f0 <raspitex_stop@@Base+0x48>
   1d9d8:	mov	r3, #1
   1d9dc:	add	r0, r4, #24
   1d9e0:	str	r3, [r4, #232]	; 0xe8
   1d9e4:	mov	r1, #0
   1d9e8:	pop	{r4, lr}
   1d9ec:	b	14480 <vcos_thread_join@plt>
   1d9f0:	ldr	r2, [pc, #20]	; 1da0c <raspitex_stop@@Base+0x64>
   1d9f4:	mov	r1, #5
   1d9f8:	add	r2, pc, r2
   1d9fc:	bl	1493c <vcos_log_impl@plt>
   1da00:	b	1d9d8 <raspitex_stop@@Base+0x30>
   1da04:	andeq	ip, r1, r0, asr #12
   1da08:	andeq	r0, r0, r8, lsr r3
   1da0c:	andeq	r8, r0, ip, asr r7

0001da10 <raspitex_start@@Base>:
   1da10:	ldr	r3, [pc, #172]	; 1dac4 <raspitex_start@@Base+0xb4>
   1da14:	ldr	r2, [pc, #172]	; 1dac8 <raspitex_start@@Base+0xb8>
   1da18:	add	r3, pc, r3
   1da1c:	push	{r4, r5, lr}
   1da20:	mov	r5, r0
   1da24:	ldr	r4, [r3, r2]
   1da28:	sub	sp, sp, #12
   1da2c:	ldr	r3, [r4]
   1da30:	cmp	r3, #4
   1da34:	bhi	1daa0 <raspitex_start@@Base+0x90>
   1da38:	ldr	r1, [pc, #140]	; 1dacc <raspitex_start@@Base+0xbc>
   1da3c:	mov	r2, #0
   1da40:	ldr	r3, [pc, #136]	; 1dad0 <raspitex_start@@Base+0xc0>
   1da44:	add	r0, r5, #24
   1da48:	str	r5, [sp]
   1da4c:	add	r1, pc, r1
   1da50:	add	r3, pc, r3
   1da54:	bl	14798 <vcos_thread_create@plt>
   1da58:	subs	r2, r0, #0
   1da5c:	moveq	r0, r2
   1da60:	beq	1da98 <raspitex_start@@Base+0x88>
   1da64:	ldr	r3, [r4]
   1da68:	cmp	r3, #1
   1da6c:	bls	1da94 <raspitex_start@@Base+0x84>
   1da70:	ldr	r3, [pc, #92]	; 1dad4 <raspitex_start@@Base+0xc4>
   1da74:	mov	r0, r4
   1da78:	str	r2, [sp]
   1da7c:	mov	r1, #2
   1da80:	ldr	r2, [pc, #80]	; 1dad8 <raspitex_start@@Base+0xc8>
   1da84:	add	r3, pc, r3
   1da88:	add	r3, r3, #132	; 0x84
   1da8c:	add	r2, pc, r2
   1da90:	bl	1493c <vcos_log_impl@plt>
   1da94:	mvn	r0, #0
   1da98:	add	sp, sp, #12
   1da9c:	pop	{r4, r5, pc}
   1daa0:	ldr	r3, [pc, #52]	; 1dadc <raspitex_start@@Base+0xcc>
   1daa4:	mov	r0, r4
   1daa8:	ldr	r2, [pc, #48]	; 1dae0 <raspitex_start@@Base+0xd0>
   1daac:	mov	r1, #5
   1dab0:	add	r3, pc, r3
   1dab4:	add	r2, pc, r2
   1dab8:	add	r3, r3, #132	; 0x84
   1dabc:	bl	1493c <vcos_log_impl@plt>
   1dac0:	b	1da38 <raspitex_start@@Base+0x28>
   1dac4:	andeq	ip, r1, r0, ror #11
   1dac8:	andeq	r0, r0, r8, lsr r3
   1dacc:	andeq	r8, r0, ip, lsl r7
   1dad0:			; <UNDEFINED> instruction: 0xfffff524
   1dad4:	muleq	r0, ip, r3
   1dad8:	andeq	r8, r0, ip, ror #13
   1dadc:	andeq	r8, r0, r0, ror r3
   1dae0:	andeq	r5, r0, r4, ror #10

0001dae4 <raspitex_capture@@Base>:
   1dae4:	ldr	r3, [pc, #348]	; 1dc48 <raspitex_capture@@Base+0x164>
   1dae8:	ldr	r2, [pc, #348]	; 1dc4c <raspitex_capture@@Base+0x168>
   1daec:	add	r3, pc, r3
   1daf0:	push	{r4, r5, r6, r7, r8, lr}
   1daf4:	mov	r4, r0
   1daf8:	ldr	r6, [r3, r2]
   1dafc:	sub	sp, sp, #8
   1db00:	mov	r5, r1
   1db04:	ldr	r3, [r6]
   1db08:	cmp	r3, #4
   1db0c:	bhi	1dc1c <raspitex_capture@@Base+0x138>
   1db10:	cmp	r4, #0
   1db14:	cmpne	r5, #0
   1db18:	moveq	r7, #0
   1db1c:	movne	r7, #1
   1db20:	bne	1db6c <raspitex_capture@@Base+0x88>
   1db24:	ldr	r3, [r6]
   1db28:	cmp	r3, #1
   1db2c:	mvnls	r4, #0
   1db30:	bls	1db58 <raspitex_capture@@Base+0x74>
   1db34:	ldr	r3, [pc, #276]	; 1dc50 <raspitex_capture@@Base+0x16c>
   1db38:	mov	r0, r6
   1db3c:	ldr	r2, [pc, #272]	; 1dc54 <raspitex_capture@@Base+0x170>
   1db40:	mov	r1, #2
   1db44:	add	r3, pc, r3
   1db48:	mvn	r4, #0
   1db4c:	add	r2, pc, r2
   1db50:	add	r3, r3, #148	; 0x94
   1db54:	bl	1493c <vcos_log_impl@plt>
   1db58:	mov	r0, r7
   1db5c:	bl	14534 <free@plt>
   1db60:	mov	r0, r4
   1db64:	add	sp, sp, #8
   1db68:	pop	{r4, r5, r6, r7, r8, pc}
   1db6c:	add	r8, r4, #408	; 0x198
   1db70:	mov	r0, r8
   1db74:	bl	149d8 <sem_wait@plt>
   1db78:	cmn	r0, #1
   1db7c:	bne	1db90 <raspitex_capture@@Base+0xac>
   1db80:	bl	14a2c <__errno_location@plt>
   1db84:	ldr	r3, [r0]
   1db88:	cmp	r3, #4
   1db8c:	beq	1db70 <raspitex_capture@@Base+0x8c>
   1db90:	add	r7, r4, #424	; 0x1a8
   1db94:	mov	r3, #1
   1db98:	str	r3, [r4, #448]	; 0x1c0
   1db9c:	mov	r0, r7
   1dba0:	bl	149d8 <sem_wait@plt>
   1dba4:	cmn	r0, #1
   1dba8:	bne	1dbbc <raspitex_capture@@Base+0xd8>
   1dbac:	bl	14a2c <__errno_location@plt>
   1dbb0:	ldr	r3, [r0]
   1dbb4:	cmp	r3, #4
   1dbb8:	beq	1db9c <raspitex_capture@@Base+0xb8>
   1dbbc:	ldr	r7, [r4, #440]	; 0x1b8
   1dbc0:	mov	r0, r8
   1dbc4:	ldr	r8, [r4, #444]	; 0x1bc
   1dbc8:	mov	r3, #0
   1dbcc:	str	r3, [r4, #448]	; 0x1c0
   1dbd0:	str	r3, [r4, #440]	; 0x1b8
   1dbd4:	str	r3, [r4, #444]	; 0x1bc
   1dbd8:	bl	146fc <sem_post@plt>
   1dbdc:	cmp	r8, #0
   1dbe0:	cmpne	r7, #0
   1dbe4:	beq	1db24 <raspitex_capture@@Base+0x40>
   1dbe8:	mov	r0, r7
   1dbec:	mov	r1, r8
   1dbf0:	bl	1e698 <raspitexutil_brga_to_rgba@@Base>
   1dbf4:	ldr	r1, [r4, #260]	; 0x104
   1dbf8:	ldr	r2, [r4, #264]	; 0x108
   1dbfc:	mov	r0, r5
   1dc00:	str	r8, [sp]
   1dc04:	mov	r3, r7
   1dc08:	bl	1ec78 <write_tga@@Base>
   1dc0c:	mov	r4, r0
   1dc10:	mov	r0, r5
   1dc14:	bl	1460c <fflush@plt>
   1dc18:	b	1db58 <raspitex_capture@@Base+0x74>
   1dc1c:	ldr	r3, [pc, #52]	; 1dc58 <raspitex_capture@@Base+0x174>
   1dc20:	mov	r0, r6
   1dc24:	ldr	r2, [pc, #48]	; 1dc5c <raspitex_capture@@Base+0x178>
   1dc28:	mov	r1, #5
   1dc2c:	add	r3, pc, r3
   1dc30:	str	r4, [sp]
   1dc34:	str	r5, [sp, #4]
   1dc38:	add	r3, r3, #148	; 0x94
   1dc3c:	add	r2, pc, r2
   1dc40:	bl	1493c <vcos_log_impl@plt>
   1dc44:	b	1db10 <raspitex_capture@@Base+0x2c>
   1dc48:	andeq	ip, r1, ip, lsl #10
   1dc4c:	andeq	r0, r0, r8, lsr r3
   1dc50:	ldrdeq	r8, [r0], -ip
   1dc54:	andeq	r8, r0, ip, ror #12
   1dc58:	strdeq	r8, [r0], -r4
   1dc5c:	andeq	r8, r0, r4, ror #10
   1dc60:	ldr	ip, [pc, #676]	; 1df0c <raspitex_capture@@Base+0x428>
   1dc64:	ldr	r3, [pc, #676]	; 1df10 <raspitex_capture@@Base+0x42c>
   1dc68:	add	ip, pc, ip
   1dc6c:	push	{r4, r5, r6, r7, r8, lr}
   1dc70:	mov	r8, r1
   1dc74:	ldr	r5, [ip, r3]
   1dc78:	sub	sp, sp, #24
   1dc7c:	ldr	r1, [pc, #656]	; 1df14 <raspitex_capture@@Base+0x430>
   1dc80:	mov	r4, r0
   1dc84:	mov	r7, r2
   1dc88:	mov	r0, ip
   1dc8c:	ldr	r3, [r5]
   1dc90:	str	r3, [sp, #20]
   1dc94:	ldr	r6, [ip, r1]
   1dc98:	ldr	r3, [r6]
   1dc9c:	cmp	r3, #4
   1dca0:	bhi	1dd74 <raspitex_capture@@Base+0x290>
   1dca4:	ldr	r3, [r4, #292]	; 0x124
   1dca8:	cmp	r3, #0
   1dcac:	beq	1de58 <raspitex_capture@@Base+0x374>
   1dcb0:	mov	r0, #0
   1dcb4:	bl	149a8 <eglGetDisplay@plt>
   1dcb8:	cmp	r0, #0
   1dcbc:	str	r0, [r4, #296]	; 0x128
   1dcc0:	beq	1de84 <raspitex_capture@@Base+0x3a0>
   1dcc4:	mov	r1, #0
   1dcc8:	mov	r2, r1
   1dccc:	bl	14408 <eglInitialize@plt>
   1dcd0:	cmp	r0, #0
   1dcd4:	beq	1dd94 <raspitex_capture@@Base+0x2b0>
   1dcd8:	ldr	r0, [r4, #296]	; 0x128
   1dcdc:	add	r3, sp, #16
   1dce0:	mov	r1, r8
   1dce4:	str	r3, [sp]
   1dce8:	add	r2, sp, #12
   1dcec:	mov	r3, #1
   1dcf0:	bl	14aa4 <eglChooseConfig@plt>
   1dcf4:	cmp	r0, #0
   1dcf8:	beq	1de00 <raspitex_capture@@Base+0x31c>
   1dcfc:	ldr	r0, [r4, #296]	; 0x128
   1dd00:	mov	r3, #0
   1dd04:	ldr	r1, [sp, #12]
   1dd08:	ldr	r2, [r4, #292]	; 0x124
   1dd0c:	bl	14a20 <eglCreateWindowSurface@plt>
   1dd10:	cmp	r0, #0
   1dd14:	str	r0, [r4, #300]	; 0x12c
   1dd18:	beq	1deb0 <raspitex_capture@@Base+0x3cc>
   1dd1c:	mov	r3, r7
   1dd20:	ldr	r0, [r4, #296]	; 0x128
   1dd24:	ldr	r1, [sp, #12]
   1dd28:	mov	r2, #0
   1dd2c:	bl	144c8 <eglCreateContext@plt>
   1dd30:	cmp	r0, #0
   1dd34:	str	r0, [r4, #304]	; 0x130
   1dd38:	beq	1dedc <raspitex_capture@@Base+0x3f8>
   1dd3c:	ldr	r1, [r4, #300]	; 0x12c
   1dd40:	mov	r3, r0
   1dd44:	ldr	r0, [r4, #296]	; 0x128
   1dd48:	mov	r2, r1
   1dd4c:	bl	144ec <eglMakeCurrent@plt>
   1dd50:	cmp	r0, #0
   1dd54:	movne	r0, #0
   1dd58:	beq	1de2c <raspitex_capture@@Base+0x348>
   1dd5c:	ldr	r2, [sp, #20]
   1dd60:	ldr	r3, [r5]
   1dd64:	cmp	r2, r3
   1dd68:	bne	1df08 <raspitex_capture@@Base+0x424>
   1dd6c:	add	sp, sp, #24
   1dd70:	pop	{r4, r5, r6, r7, r8, pc}
   1dd74:	ldr	r2, [pc, #412]	; 1df18 <raspitex_capture@@Base+0x434>
   1dd78:	mov	r0, r6
   1dd7c:	ldr	r3, [pc, #408]	; 1df1c <raspitex_capture@@Base+0x438>
   1dd80:	mov	r1, #5
   1dd84:	add	r2, pc, r2
   1dd88:	add	r3, pc, r3
   1dd8c:	bl	1493c <vcos_log_impl@plt>
   1dd90:	b	1dca4 <raspitex_capture@@Base+0x1c0>
   1dd94:	ldr	r3, [r6]
   1dd98:	cmp	r3, #1
   1dd9c:	bls	1ddec <raspitex_capture@@Base+0x308>
   1dda0:	ldr	r2, [pc, #376]	; 1df20 <raspitex_capture@@Base+0x43c>
   1dda4:	mov	r0, r6
   1dda8:	ldr	r3, [pc, #372]	; 1df24 <raspitex_capture@@Base+0x440>
   1ddac:	mov	r1, #2
   1ddb0:	add	r2, pc, r2
   1ddb4:	add	r3, pc, r3
   1ddb8:	bl	1493c <vcos_log_impl@plt>
   1ddbc:	ldr	r3, [r6]
   1ddc0:	cmp	r3, #1
   1ddc4:	bls	1ddec <raspitex_capture@@Base+0x308>
   1ddc8:	bl	147f8 <eglGetError@plt>
   1ddcc:	ldr	r2, [pc, #340]	; 1df28 <raspitex_capture@@Base+0x444>
   1ddd0:	ldr	r3, [pc, #340]	; 1df2c <raspitex_capture@@Base+0x448>
   1ddd4:	mov	r1, #2
   1ddd8:	add	r2, pc, r2
   1dddc:	add	r3, pc, r3
   1dde0:	str	r0, [sp]
   1dde4:	mov	r0, r6
   1dde8:	bl	1493c <vcos_log_impl@plt>
   1ddec:	mov	r0, r4
   1ddf0:	ldr	r3, [r4, #388]	; 0x184
   1ddf4:	blx	r3
   1ddf8:	mvn	r0, #0
   1ddfc:	b	1dd5c <raspitex_capture@@Base+0x278>
   1de00:	ldr	r3, [r6]
   1de04:	cmp	r3, #1
   1de08:	bls	1ddec <raspitex_capture@@Base+0x308>
   1de0c:	ldr	r2, [pc, #284]	; 1df30 <raspitex_capture@@Base+0x44c>
   1de10:	mov	r0, r6
   1de14:	ldr	r3, [pc, #280]	; 1df34 <raspitex_capture@@Base+0x450>
   1de18:	mov	r1, #2
   1de1c:	add	r2, pc, r2
   1de20:	add	r3, pc, r3
   1de24:	bl	1493c <vcos_log_impl@plt>
   1de28:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1de2c:	ldr	r3, [r6]
   1de30:	cmp	r3, #1
   1de34:	bls	1ddec <raspitex_capture@@Base+0x308>
   1de38:	ldr	r2, [pc, #248]	; 1df38 <raspitex_capture@@Base+0x454>
   1de3c:	mov	r0, r6
   1de40:	ldr	r3, [pc, #244]	; 1df3c <raspitex_capture@@Base+0x458>
   1de44:	mov	r1, #2
   1de48:	add	r2, pc, r2
   1de4c:	add	r3, pc, r3
   1de50:	bl	1493c <vcos_log_impl@plt>
   1de54:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1de58:	ldr	r3, [r6]
   1de5c:	cmp	r3, #1
   1de60:	bls	1ddec <raspitex_capture@@Base+0x308>
   1de64:	ldr	r2, [pc, #212]	; 1df40 <raspitex_capture@@Base+0x45c>
   1de68:	mov	r0, r6
   1de6c:	ldr	r3, [pc, #208]	; 1df44 <raspitex_capture@@Base+0x460>
   1de70:	mov	r1, #2
   1de74:	add	r2, pc, r2
   1de78:	add	r3, pc, r3
   1de7c:	bl	1493c <vcos_log_impl@plt>
   1de80:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1de84:	ldr	r3, [r6]
   1de88:	cmp	r3, #1
   1de8c:	bls	1ddec <raspitex_capture@@Base+0x308>
   1de90:	ldr	r2, [pc, #176]	; 1df48 <raspitex_capture@@Base+0x464>
   1de94:	mov	r0, r6
   1de98:	ldr	r3, [pc, #172]	; 1df4c <raspitex_capture@@Base+0x468>
   1de9c:	mov	r1, #2
   1dea0:	add	r2, pc, r2
   1dea4:	add	r3, pc, r3
   1dea8:	bl	1493c <vcos_log_impl@plt>
   1deac:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1deb0:	ldr	r3, [r6]
   1deb4:	cmp	r3, #1
   1deb8:	bls	1ddec <raspitex_capture@@Base+0x308>
   1debc:	ldr	r2, [pc, #140]	; 1df50 <raspitex_capture@@Base+0x46c>
   1dec0:	mov	r0, r6
   1dec4:	ldr	r3, [pc, #136]	; 1df54 <raspitex_capture@@Base+0x470>
   1dec8:	mov	r1, #2
   1decc:	add	r2, pc, r2
   1ded0:	add	r3, pc, r3
   1ded4:	bl	1493c <vcos_log_impl@plt>
   1ded8:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1dedc:	ldr	r3, [r6]
   1dee0:	cmp	r3, #1
   1dee4:	bls	1ddec <raspitex_capture@@Base+0x308>
   1dee8:	ldr	r2, [pc, #104]	; 1df58 <raspitex_capture@@Base+0x474>
   1deec:	mov	r0, r6
   1def0:	ldr	r3, [pc, #100]	; 1df5c <raspitex_capture@@Base+0x478>
   1def4:	mov	r1, #2
   1def8:	add	r2, pc, r2
   1defc:	add	r3, pc, r3
   1df00:	bl	1493c <vcos_log_impl@plt>
   1df04:	b	1ddbc <raspitex_capture@@Base+0x2d8>
   1df08:	bl	14804 <__stack_chk_fail@plt>
   1df0c:	muleq	r1, r0, r3
   1df10:	andeq	r0, r0, r4, lsr r3
   1df14:	andeq	r0, r0, r8, lsr r3
   1df18:	muleq	r0, r4, r2
   1df1c:			; <UNDEFINED> instruction: 0x000084b4
   1df20:	andeq	r8, r0, r8, ror #12
   1df24:	andeq	r8, r0, r8, lsl #9
   1df28:	ldrdeq	r8, [r0], -ip
   1df2c:	andeq	r8, r0, r0, ror #8
   1df30:	andeq	r8, r0, r8, lsl r6
   1df34:	andeq	r8, r0, ip, lsl r4
   1df38:	andeq	r8, r0, r8, asr #12
   1df3c:	strdeq	r8, [r0], -r0
   1df40:	andeq	r8, r0, ip, ror #10
   1df44:	andeq	r8, r0, r4, asr #7
   1df48:	andeq	r8, r0, r8, asr r5
   1df4c:	muleq	r0, r8, r3
   1df50:	andeq	r8, r0, r4, lsl #11
   1df54:	andeq	r8, r0, ip, ror #6
   1df58:	andeq	r8, r0, ip, ror r5
   1df5c:	andeq	r8, r0, r0, asr #6

0001df60 <raspitexutil_gl_term@@Base>:
   1df60:	push	{r3, r4, r5, lr}
   1df64:	mov	r4, r0
   1df68:	ldr	r3, [pc, #220]	; 1e04c <raspitexutil_gl_term@@Base+0xec>
   1df6c:	ldr	r2, [pc, #220]	; 1e050 <raspitexutil_gl_term@@Base+0xf0>
   1df70:	add	r3, pc, r3
   1df74:	ldr	r0, [r3, r2]
   1df78:	ldr	r3, [r0]
   1df7c:	cmp	r3, #4
   1df80:	bls	1dfa0 <raspitexutil_gl_term@@Base+0x40>
   1df84:	ldr	r3, [pc, #200]	; 1e054 <raspitexutil_gl_term@@Base+0xf4>
   1df88:	mov	r1, #5
   1df8c:	ldr	r2, [pc, #196]	; 1e058 <raspitexutil_gl_term@@Base+0xf8>
   1df90:	add	r3, pc, r3
   1df94:	add	r2, pc, r2
   1df98:	add	r3, r3, #24
   1df9c:	bl	1493c <vcos_log_impl@plt>
   1dfa0:	add	r1, r4, #312	; 0x138
   1dfa4:	mov	r0, #1
   1dfa8:	bl	146c0 <glDeleteTextures@plt>
   1dfac:	ldr	r1, [r4, #316]	; 0x13c
   1dfb0:	ldr	r0, [r4, #296]	; 0x128
   1dfb4:	mov	r5, #0
   1dfb8:	bl	144bc <eglDestroyImageKHR@plt>
   1dfbc:	add	r1, r4, #320	; 0x140
   1dfc0:	str	r5, [r4, #316]	; 0x13c
   1dfc4:	mov	r0, #1
   1dfc8:	bl	146c0 <glDeleteTextures@plt>
   1dfcc:	ldr	r1, [r4, #324]	; 0x144
   1dfd0:	ldr	r0, [r4, #296]	; 0x128
   1dfd4:	bl	144bc <eglDestroyImageKHR@plt>
   1dfd8:	add	r1, r4, #328	; 0x148
   1dfdc:	str	r5, [r4, #324]	; 0x144
   1dfe0:	mov	r0, #1
   1dfe4:	bl	146c0 <glDeleteTextures@plt>
   1dfe8:	ldr	r1, [r4, #332]	; 0x14c
   1dfec:	ldr	r0, [r4, #296]	; 0x128
   1dff0:	bl	144bc <eglDestroyImageKHR@plt>
   1dff4:	add	r1, r4, #336	; 0x150
   1dff8:	str	r5, [r4, #332]	; 0x14c
   1dffc:	mov	r0, #1
   1e000:	bl	146c0 <glDeleteTextures@plt>
   1e004:	ldr	r1, [r4, #340]	; 0x154
   1e008:	ldr	r0, [r4, #296]	; 0x128
   1e00c:	bl	144bc <eglDestroyImageKHR@plt>
   1e010:	mov	r2, r5
   1e014:	mov	r3, r5
   1e018:	mov	r1, r5
   1e01c:	str	r5, [r4, #340]	; 0x154
   1e020:	ldr	r0, [r4, #296]	; 0x128
   1e024:	bl	144ec <eglMakeCurrent@plt>
   1e028:	ldr	r1, [r4, #304]	; 0x130
   1e02c:	ldr	r0, [r4, #296]	; 0x128
   1e030:	bl	14468 <eglDestroyContext@plt>
   1e034:	ldr	r0, [r4, #296]	; 0x128
   1e038:	ldr	r1, [r4, #300]	; 0x12c
   1e03c:	bl	1469c <eglDestroySurface@plt>
   1e040:	ldr	r0, [r4, #296]	; 0x128
   1e044:	pop	{r3, r4, r5, lr}
   1e048:	b	149b4 <eglTerminate@plt>
   1e04c:	andeq	ip, r1, r8, lsl #1
   1e050:	andeq	r0, r0, r8, lsr r3
   1e054:	andeq	r8, r0, ip, lsr #5
   1e058:	andeq	r5, r0, r4, lsl #1

0001e05c <raspitexutil_create_native_window@@Base>:
   1e05c:	ldr	r3, [pc, #496]	; 1e254 <raspitexutil_create_native_window@@Base+0x1f8>
   1e060:	mov	ip, #0
   1e064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e068:	add	r3, pc, r3
   1e06c:	ldr	lr, [pc, #484]	; 1e258 <raspitexutil_create_native_window@@Base+0x1fc>
   1e070:	add	r2, r3, #48	; 0x30
   1e074:	ldr	r6, [pc, #480]	; 1e25c <raspitexutil_create_native_window@@Base+0x200>
   1e078:	mov	r4, r0
   1e07c:	add	lr, pc, lr
   1e080:	sub	sp, sp, #84	; 0x54
   1e084:	ldm	r2, {r0, r1, r2}
   1e088:	add	r5, sp, #32
   1e08c:	ldr	r7, [lr, r6]
   1e090:	ldr	fp, [r4, #252]	; 0xfc
   1e094:	ldr	sl, [r4, #256]	; 0x100
   1e098:	stm	r5, {r0, r1, r2}
   1e09c:	ldr	r6, [r7]
   1e0a0:	ldr	r2, [pc, #440]	; 1e260 <raspitexutil_create_native_window@@Base+0x204>
   1e0a4:	ldr	r8, [r4, #260]	; 0x104
   1e0a8:	ldr	r9, [r4, #264]	; 0x108
   1e0ac:	ldr	r1, [r4, #268]	; 0x10c
   1e0b0:	str	r6, [sp, #76]	; 0x4c
   1e0b4:	str	fp, [sp, #60]	; 0x3c
   1e0b8:	str	r1, [sp, #36]	; 0x24
   1e0bc:	str	sl, [sp, #64]	; 0x40
   1e0c0:	str	r8, [sp, #68]	; 0x44
   1e0c4:	str	r9, [sp, #72]	; 0x48
   1e0c8:	str	ip, [sp, #44]	; 0x2c
   1e0cc:	str	ip, [sp, #48]	; 0x30
   1e0d0:	str	ip, [sp, #52]	; 0x34
   1e0d4:	str	ip, [sp, #56]	; 0x38
   1e0d8:	ldr	r6, [lr, r2]
   1e0dc:	ldr	r2, [r6]
   1e0e0:	cmp	r2, #4
   1e0e4:	bhi	1e180 <raspitexutil_create_native_window@@Base+0x124>
   1e0e8:	mov	r0, #0
   1e0ec:	lsl	r8, r8, #16
   1e0f0:	lsl	r9, r9, #16
   1e0f4:	str	r8, [sp, #52]	; 0x34
   1e0f8:	str	r9, [sp, #56]	; 0x38
   1e0fc:	bl	14750 <vc_dispmanx_display_open@plt>
   1e100:	cmp	r0, #0
   1e104:	str	r0, [r4, #276]	; 0x114
   1e108:	bne	1e148 <raspitexutil_create_native_window@@Base+0xec>
   1e10c:	ldr	r3, [r6]
   1e110:	cmp	r3, #1
   1e114:	bls	1e12c <raspitexutil_create_native_window@@Base+0xd0>
   1e118:	ldr	r2, [pc, #324]	; 1e264 <raspitexutil_create_native_window@@Base+0x208>
   1e11c:	mov	r0, r6
   1e120:	mov	r1, #2
   1e124:	add	r2, pc, r2
   1e128:	bl	1493c <vcos_log_impl@plt>
   1e12c:	mvn	r0, #0
   1e130:	ldr	r1, [sp, #76]	; 0x4c
   1e134:	ldr	r3, [r7]
   1e138:	cmp	r1, r3
   1e13c:	bne	1e250 <raspitexutil_create_native_window@@Base+0x1f4>
   1e140:	add	sp, sp, #84	; 0x54
   1e144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e148:	mov	r0, #0
   1e14c:	bl	14204 <vc_dispmanx_update_start@plt>
   1e150:	subs	r9, r0, #0
   1e154:	bne	1e1c4 <raspitexutil_create_native_window@@Base+0x168>
   1e158:	ldr	r3, [r6]
   1e15c:	cmp	r3, #1
   1e160:	bls	1e12c <raspitexutil_create_native_window@@Base+0xd0>
   1e164:	ldr	r2, [pc, #252]	; 1e268 <raspitexutil_create_native_window@@Base+0x20c>
   1e168:	mov	r0, r6
   1e16c:	mov	r1, #2
   1e170:	add	r2, pc, r2
   1e174:	bl	1493c <vcos_log_impl@plt>
   1e178:	mvn	r0, #0
   1e17c:	b	1e130 <raspitexutil_create_native_window@@Base+0xd4>
   1e180:	ldr	r2, [pc, #228]	; 1e26c <raspitexutil_create_native_window@@Base+0x210>
   1e184:	add	r3, r3, #60	; 0x3c
   1e188:	str	r8, [sp, #24]
   1e18c:	mov	r0, r6
   1e190:	str	r9, [sp, #28]
   1e194:	mov	r1, #5
   1e198:	str	ip, [sp]
   1e19c:	add	r2, pc, r2
   1e1a0:	str	ip, [sp, #4]
   1e1a4:	str	ip, [sp, #8]
   1e1a8:	str	ip, [sp, #12]
   1e1ac:	str	fp, [sp, #16]
   1e1b0:	str	sl, [sp, #20]
   1e1b4:	bl	1493c <vcos_log_impl@plt>
   1e1b8:	ldr	r8, [sp, #68]	; 0x44
   1e1bc:	ldr	r9, [sp, #72]	; 0x48
   1e1c0:	b	1e0e8 <raspitexutil_create_native_window@@Base+0x8c>
   1e1c4:	mov	r8, #0
   1e1c8:	ldr	r1, [r4, #276]	; 0x114
   1e1cc:	add	r3, sp, #60	; 0x3c
   1e1d0:	add	ip, sp, #44	; 0x2c
   1e1d4:	str	r5, [sp, #12]
   1e1d8:	mov	r2, r8
   1e1dc:	str	r8, [sp]
   1e1e0:	str	r8, [sp, #8]
   1e1e4:	str	r8, [sp, #16]
   1e1e8:	str	r8, [sp, #20]
   1e1ec:	str	ip, [sp, #4]
   1e1f0:	bl	141e0 <vc_dispmanx_element_add@plt>
   1e1f4:	subs	r3, r0, #0
   1e1f8:	bne	1e224 <raspitexutil_create_native_window@@Base+0x1c8>
   1e1fc:	ldr	r3, [r6]
   1e200:	cmp	r3, #1
   1e204:	bls	1e12c <raspitexutil_create_native_window@@Base+0xd0>
   1e208:	ldr	r2, [pc, #96]	; 1e270 <raspitexutil_create_native_window@@Base+0x214>
   1e20c:	mov	r0, r6
   1e210:	mov	r1, #2
   1e214:	add	r2, pc, r2
   1e218:	bl	1493c <vcos_log_impl@plt>
   1e21c:	mvn	r0, #0
   1e220:	b	1e130 <raspitexutil_create_native_window@@Base+0xd4>
   1e224:	ldr	r1, [r4, #260]	; 0x104
   1e228:	mov	r0, r9
   1e22c:	ldr	r2, [r4, #264]	; 0x108
   1e230:	str	r3, [r4, #280]	; 0x118
   1e234:	str	r1, [r4, #284]	; 0x11c
   1e238:	str	r2, [r4, #288]	; 0x120
   1e23c:	bl	1454c <vc_dispmanx_update_submit_sync@plt>
   1e240:	add	r3, r4, #280	; 0x118
   1e244:	mov	r0, r8
   1e248:	str	r3, [r4, #292]	; 0x124
   1e24c:	b	1e130 <raspitexutil_create_native_window@@Base+0xd4>
   1e250:	bl	14804 <__stack_chk_fail@plt>
   1e254:	ldrdeq	r8, [r0], -r4
   1e258:	andeq	fp, r1, ip, ror pc
   1e25c:	andeq	r0, r0, r4, lsr r3
   1e260:	andeq	r0, r0, r8, lsr r3
   1e264:	andeq	r8, r0, r8, asr #7
   1e268:	muleq	r0, ip, r3
   1e26c:	andeq	r8, r0, r0, lsr r3
   1e270:	andeq	r8, r0, r8, lsl r3

0001e274 <raspitexutil_destroy_native_window@@Base>:
   1e274:	ldr	r3, [pc, #88]	; 1e2d4 <raspitexutil_destroy_native_window@@Base+0x60>
   1e278:	ldr	r2, [pc, #88]	; 1e2d8 <raspitexutil_destroy_native_window@@Base+0x64>
   1e27c:	add	r3, pc, r3
   1e280:	push	{r4, lr}
   1e284:	mov	r4, r0
   1e288:	ldr	r0, [r3, r2]
   1e28c:	ldr	r3, [r0]
   1e290:	cmp	r3, #4
   1e294:	bhi	1e2b4 <raspitexutil_destroy_native_window@@Base+0x40>
   1e298:	ldr	r0, [r4, #276]	; 0x114
   1e29c:	cmp	r0, #0
   1e2a0:	popeq	{r4, pc}
   1e2a4:	bl	1478c <vc_dispmanx_display_close@plt>
   1e2a8:	mov	r3, #0
   1e2ac:	str	r3, [r4, #276]	; 0x114
   1e2b0:	pop	{r4, pc}
   1e2b4:	ldr	r3, [pc, #32]	; 1e2dc <raspitexutil_destroy_native_window@@Base+0x68>
   1e2b8:	mov	r1, #5
   1e2bc:	ldr	r2, [pc, #28]	; 1e2e0 <raspitexutil_destroy_native_window@@Base+0x6c>
   1e2c0:	add	r3, pc, r3
   1e2c4:	add	r2, pc, r2
   1e2c8:	add	r3, r3, #96	; 0x60
   1e2cc:	bl	1493c <vcos_log_impl@plt>
   1e2d0:	b	1e298 <raspitexutil_destroy_native_window@@Base+0x24>
   1e2d4:	andeq	fp, r1, ip, ror sp
   1e2d8:	andeq	r0, r0, r8, lsr r3
   1e2dc:	andeq	r7, r0, ip, ror pc
   1e2e0:	andeq	r4, r0, r4, asr sp

0001e2e4 <raspitexutil_create_textures@@Base>:
   1e2e4:	push	{r4, lr}
   1e2e8:	mov	r4, r0
   1e2ec:	mov	r0, #1
   1e2f0:	add	r1, r4, #312	; 0x138
   1e2f4:	bl	14a5c <glGenTextures@plt>
   1e2f8:	add	r1, r4, #320	; 0x140
   1e2fc:	mov	r0, #1
   1e300:	bl	14a5c <glGenTextures@plt>
   1e304:	add	r1, r4, #328	; 0x148
   1e308:	mov	r0, #1
   1e30c:	bl	14a5c <glGenTextures@plt>
   1e310:	add	r1, r4, #336	; 0x150
   1e314:	mov	r0, #1
   1e318:	bl	14a5c <glGenTextures@plt>
   1e31c:	mov	r0, #0
   1e320:	pop	{r4, pc}

0001e324 <raspitexutil_gl_init_1_0@@Base>:
   1e324:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e328:	mov	r5, r0
   1e32c:	ldr	r4, [pc, #168]	; 1e3dc <raspitexutil_gl_init_1_0@@Base+0xb8>
   1e330:	sub	sp, sp, #76	; 0x4c
   1e334:	ldr	r6, [pc, #164]	; 1e3e0 <raspitexutil_gl_init_1_0@@Base+0xbc>
   1e338:	add	r7, sp, #16
   1e33c:	add	r4, pc, r4
   1e340:	ldr	r8, [pc, #156]	; 1e3e4 <raspitexutil_gl_init_1_0@@Base+0xc0>
   1e344:	add	lr, r4, #132	; 0x84
   1e348:	add	r6, pc, r6
   1e34c:	mov	ip, r7
   1e350:	add	r4, r4, #184	; 0xb8
   1e354:	ldm	lr!, {r0, r1, r2, r3}
   1e358:	ldr	r6, [r6, r8]
   1e35c:	ldr	r8, [r5, #308]	; 0x134
   1e360:	stmia	ip!, {r0, r1, r2, r3}
   1e364:	cmp	r8, #0
   1e368:	ldm	lr!, {r0, r1, r2, r3}
   1e36c:	ldr	r9, [r6]
   1e370:	stmia	ip!, {r0, r1, r2, r3}
   1e374:	ldm	lr!, {r0, r1, r2, r3}
   1e378:	str	r9, [sp, #68]	; 0x44
   1e37c:	stmia	ip!, {r0, r1, r2, r3}
   1e380:	ldm	r4, {r0, r1, r2}
   1e384:	ldr	r3, [lr]
   1e388:	str	r3, [ip]
   1e38c:	add	r3, sp, #4
   1e390:	stm	r3, {r0, r1, r2}
   1e394:	movne	r1, r8
   1e398:	moveq	r1, r7
   1e39c:	mov	r2, r3
   1e3a0:	mov	r0, r5
   1e3a4:	bl	1dc60 <raspitex_capture@@Base+0x17c>
   1e3a8:	cmp	r0, #0
   1e3ac:	bne	1e3c0 <raspitexutil_gl_init_1_0@@Base+0x9c>
   1e3b0:	movw	r0, #36197	; 0x8d65
   1e3b4:	bl	1421c <glEnable@plt>
   1e3b8:	mov	r0, r5
   1e3bc:	bl	1e2e4 <raspitexutil_create_textures@@Base>
   1e3c0:	ldr	r2, [sp, #68]	; 0x44
   1e3c4:	ldr	r3, [r6]
   1e3c8:	cmp	r2, r3
   1e3cc:	bne	1e3d8 <raspitexutil_gl_init_1_0@@Base+0xb4>
   1e3d0:	add	sp, sp, #76	; 0x4c
   1e3d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e3d8:	bl	14804 <__stack_chk_fail@plt>
   1e3dc:	andeq	r7, r0, r0, lsl #30
   1e3e0:			; <UNDEFINED> instruction: 0x0001bcb0
   1e3e4:	andeq	r0, r0, r4, lsr r3

0001e3e8 <raspitexutil_gl_init_2_0@@Base>:
   1e3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3ec:	mov	r8, r0
   1e3f0:	ldr	r9, [pc, #220]	; 1e4d4 <raspitexutil_gl_init_2_0@@Base+0xec>
   1e3f4:	sub	sp, sp, #84	; 0x54
   1e3f8:	ldr	r6, [pc, #216]	; 1e4d8 <raspitexutil_gl_init_2_0@@Base+0xf0>
   1e3fc:	add	sl, sp, #24
   1e400:	add	r9, pc, r9
   1e404:	ldr	r5, [pc, #208]	; 1e4dc <raspitexutil_gl_init_2_0@@Base+0xf4>
   1e408:	add	lr, r9, #196	; 0xc4
   1e40c:	add	r6, pc, r6
   1e410:	mov	ip, sl
   1e414:	add	r7, r9, #248	; 0xf8
   1e418:	ldm	lr!, {r0, r1, r2, r3}
   1e41c:	add	r4, sp, #12
   1e420:	str	r7, [sp]
   1e424:	ldr	r5, [r6, r5]
   1e428:	ldr	r7, [sp]
   1e42c:	stmia	ip!, {r0, r1, r2, r3}
   1e430:	ldm	lr!, {r0, r1, r2, r3}
   1e434:	str	r5, [sp, #4]
   1e438:	ldr	fp, [pc, #160]	; 1e4e0 <raspitexutil_gl_init_2_0@@Base+0xf8>
   1e43c:	ldr	r5, [r5]
   1e440:	stmia	ip!, {r0, r1, r2, r3}
   1e444:	ldm	lr!, {r0, r1, r2, r3}
   1e448:	str	r5, [sp, #76]	; 0x4c
   1e44c:	ldr	r5, [r8, #308]	; 0x134
   1e450:	stmia	ip!, {r0, r1, r2, r3}
   1e454:	cmp	r5, #0
   1e458:	ldm	r7, {r0, r1, r2}
   1e45c:	moveq	r5, sl
   1e460:	ldr	r3, [lr]
   1e464:	str	r3, [ip]
   1e468:	stm	r4, {r0, r1, r2}
   1e46c:	ldr	r0, [r6, fp]
   1e470:	ldr	r3, [r0]
   1e474:	cmp	r3, #4
   1e478:	bhi	1e4b8 <raspitexutil_gl_init_2_0@@Base+0xd0>
   1e47c:	mov	r1, r5
   1e480:	mov	r2, r4
   1e484:	mov	r0, r8
   1e488:	bl	1dc60 <raspitex_capture@@Base+0x17c>
   1e48c:	cmp	r0, #0
   1e490:	bne	1e49c <raspitexutil_gl_init_2_0@@Base+0xb4>
   1e494:	mov	r0, r8
   1e498:	bl	1e2e4 <raspitexutil_create_textures@@Base>
   1e49c:	ldr	r7, [sp, #4]
   1e4a0:	ldr	r2, [sp, #76]	; 0x4c
   1e4a4:	ldr	r3, [r7]
   1e4a8:	cmp	r2, r3
   1e4ac:	bne	1e4d0 <raspitexutil_gl_init_2_0@@Base+0xe8>
   1e4b0:	add	sp, sp, #84	; 0x54
   1e4b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4b8:	ldr	r2, [pc, #36]	; 1e4e4 <raspitexutil_gl_init_2_0@@Base+0xfc>
   1e4bc:	add	r3, r9, #260	; 0x104
   1e4c0:	mov	r1, #5
   1e4c4:	add	r2, pc, r2
   1e4c8:	bl	1493c <vcos_log_impl@plt>
   1e4cc:	b	1e47c <raspitexutil_gl_init_2_0@@Base+0x94>
   1e4d0:	bl	14804 <__stack_chk_fail@plt>
   1e4d4:	andeq	r7, r0, ip, lsr lr
   1e4d8:	andeq	fp, r1, ip, ror #23
   1e4dc:	andeq	r0, r0, r4, lsr r3
   1e4e0:	andeq	r0, r0, r8, lsr r3
   1e4e4:	andeq	r4, r0, r4, asr fp

0001e4e8 <raspitexutil_do_update_texture@@Base>:
   1e4e8:	ldr	ip, [pc, #180]	; 1e5a4 <raspitexutil_do_update_texture@@Base+0xbc>
   1e4ec:	push	{r4, r5, r6, r7, r8, lr}
   1e4f0:	mov	r6, r0
   1e4f4:	ldr	r0, [pc, #172]	; 1e5a8 <raspitexutil_do_update_texture@@Base+0xc0>
   1e4f8:	add	ip, pc, ip
   1e4fc:	mov	r4, r3
   1e500:	sub	sp, sp, #8
   1e504:	mov	r8, r1
   1e508:	mov	r7, r2
   1e50c:	ldr	r0, [ip, r0]
   1e510:	ldr	r5, [sp, #32]
   1e514:	ldr	r3, [r0]
   1e518:	cmp	r3, #4
   1e51c:	bhi	1e580 <raspitexutil_do_update_texture@@Base+0x98>
   1e520:	ldr	r1, [r4]
   1e524:	movw	r0, #36197	; 0x8d65
   1e528:	bl	14660 <glBindTexture@plt>
   1e52c:	ldr	r1, [r5]
   1e530:	cmp	r1, #0
   1e534:	beq	1e548 <raspitexutil_do_update_texture@@Base+0x60>
   1e538:	mov	r0, r6
   1e53c:	bl	144bc <eglDestroyImageKHR@plt>
   1e540:	mov	r3, #0
   1e544:	str	r3, [r5]
   1e548:	mov	r4, #0
   1e54c:	mov	r2, r8
   1e550:	mov	r3, r7
   1e554:	mov	r1, r4
   1e558:	mov	r0, r6
   1e55c:	str	r4, [sp]
   1e560:	bl	1472c <eglCreateImageKHR@plt>
   1e564:	mov	r1, r0
   1e568:	str	r0, [r5]
   1e56c:	movw	r0, #36197	; 0x8d65
   1e570:	bl	142e8 <glEGLImageTargetTexture2DOES@plt>
   1e574:	mov	r0, r4
   1e578:	add	sp, sp, #8
   1e57c:	pop	{r4, r5, r6, r7, r8, pc}
   1e580:	ldr	r3, [pc, #36]	; 1e5ac <raspitexutil_do_update_texture@@Base+0xc4>
   1e584:	mov	r1, #5
   1e588:	str	r2, [sp]
   1e58c:	ldr	r2, [pc, #28]	; 1e5b0 <raspitexutil_do_update_texture@@Base+0xc8>
   1e590:	add	r3, pc, r3
   1e594:	add	r3, r3, #288	; 0x120
   1e598:	add	r2, pc, r2
   1e59c:	bl	1493c <vcos_log_impl@plt>
   1e5a0:	b	1e520 <raspitexutil_do_update_texture@@Base+0x38>
   1e5a4:	andeq	fp, r1, r0, lsl #22
   1e5a8:	andeq	r0, r0, r8, lsr r3
   1e5ac:	andeq	r7, r0, ip, lsr #25
   1e5b0:			; <UNDEFINED> instruction: 0x00007fb4

0001e5b4 <raspitexutil_update_texture@@Base>:
   1e5b4:	push	{lr}		; (str lr, [sp, #-4]!)
   1e5b8:	sub	sp, sp, #12
   1e5bc:	mov	r3, r0
   1e5c0:	mov	r2, r1
   1e5c4:	ldr	r0, [r0, #296]	; 0x128
   1e5c8:	add	r1, r3, #316	; 0x13c
   1e5cc:	add	r3, r3, #312	; 0x138
   1e5d0:	str	r1, [sp]
   1e5d4:	movw	r1, #12466	; 0x30b2
   1e5d8:	movt	r1, #2457	; 0x999
   1e5dc:	bl	1e4e8 <raspitexutil_do_update_texture@@Base>
   1e5e0:	add	sp, sp, #12
   1e5e4:	pop	{pc}		; (ldr pc, [sp], #4)

0001e5e8 <raspitexutil_update_y_texture@@Base>:
   1e5e8:	push	{lr}		; (str lr, [sp, #-4]!)
   1e5ec:	sub	sp, sp, #12
   1e5f0:	mov	r3, r0
   1e5f4:	mov	r2, r1
   1e5f8:	ldr	r0, [r0, #296]	; 0x128
   1e5fc:	add	r1, r3, #324	; 0x144
   1e600:	add	r3, r3, #320	; 0x140
   1e604:	str	r1, [sp]
   1e608:	mov	r1, #12480	; 0x30c0
   1e60c:	movt	r1, #2457	; 0x999
   1e610:	bl	1e4e8 <raspitexutil_do_update_texture@@Base>
   1e614:	add	sp, sp, #12
   1e618:	pop	{pc}		; (ldr pc, [sp], #4)

0001e61c <raspitexutil_update_u_texture@@Base>:
   1e61c:	push	{lr}		; (str lr, [sp, #-4]!)
   1e620:	sub	sp, sp, #12
   1e624:	mov	r3, r0
   1e628:	mov	r2, r1
   1e62c:	ldr	r0, [r0, #296]	; 0x128
   1e630:	add	r1, r3, #332	; 0x14c
   1e634:	add	r3, r3, #328	; 0x148
   1e638:	str	r1, [sp]
   1e63c:	movw	r1, #12481	; 0x30c1
   1e640:	movt	r1, #2457	; 0x999
   1e644:	bl	1e4e8 <raspitexutil_do_update_texture@@Base>
   1e648:	add	sp, sp, #12
   1e64c:	pop	{pc}		; (ldr pc, [sp], #4)

0001e650 <raspitexutil_update_v_texture@@Base>:
   1e650:	push	{lr}		; (str lr, [sp, #-4]!)
   1e654:	sub	sp, sp, #12
   1e658:	mov	r3, r0
   1e65c:	mov	r2, r1
   1e660:	ldr	r0, [r0, #296]	; 0x128
   1e664:	add	r1, r3, #340	; 0x154
   1e668:	add	r3, r3, #336	; 0x150
   1e66c:	str	r1, [sp]
   1e670:	movw	r1, #12482	; 0x30c2
   1e674:	movt	r1, #2457	; 0x999
   1e678:	bl	1e4e8 <raspitexutil_do_update_texture@@Base>
   1e67c:	add	sp, sp, #12
   1e680:	pop	{pc}		; (ldr pc, [sp], #4)

0001e684 <raspitexutil_update_model@@Base>:
   1e684:	mov	r0, #0
   1e688:	bx	lr

0001e68c <raspitexutil_redraw@@Base>:
   1e68c:	mov	r0, #0
   1e690:	bx	lr

0001e694 <raspitexutil_close@@Base>:
   1e694:	bx	lr

0001e698 <raspitexutil_brga_to_rgba@@Base>:
   1e698:	add	r1, r0, r1
   1e69c:	cmp	r0, r1
   1e6a0:	push	{r4}		; (str r4, [sp, #-4]!)
   1e6a4:	bcs	1e6d4 <raspitexutil_brga_to_rgba@@Base+0x3c>
   1e6a8:	add	r3, r0, #4
   1e6ac:	mov	r2, r3
   1e6b0:	ldrb	ip, [r2, #-4]
   1e6b4:	cmp	r1, r3
   1e6b8:	ldrb	r4, [r0, #2]
   1e6bc:	add	r2, r2, #4
   1e6c0:	strb	r4, [r2, #-8]
   1e6c4:	strb	ip, [r0, #2]
   1e6c8:	mov	r0, r3
   1e6cc:	add	r3, r3, #4
   1e6d0:	bhi	1e6b0 <raspitexutil_brga_to_rgba@@Base+0x18>
   1e6d4:	pop	{r4}		; (ldr r4, [sp], #4)
   1e6d8:	bx	lr

0001e6dc <raspitexutil_capture_bgra@@Base>:
   1e6dc:	ldr	r3, [pc, #240]	; 1e7d4 <raspitexutil_capture_bgra@@Base+0xf8>
   1e6e0:	push	{r4, r5, r6, lr}
   1e6e4:	mov	r4, r0
   1e6e8:	ldr	r0, [pc, #232]	; 1e7d8 <raspitexutil_capture_bgra@@Base+0xfc>
   1e6ec:	add	r3, pc, r3
   1e6f0:	sub	sp, sp, #16
   1e6f4:	mov	r5, r1
   1e6f8:	mov	r6, r2
   1e6fc:	ldr	r0, [r3, r0]
   1e700:	ldr	r3, [r0]
   1e704:	cmp	r3, #4
   1e708:	bhi	1e770 <raspitexutil_capture_bgra@@Base+0x94>
   1e70c:	ldr	r3, [r4, #260]	; 0x104
   1e710:	mov	r1, #1
   1e714:	ldr	r0, [r4, #264]	; 0x108
   1e718:	mul	r0, r0, r3
   1e71c:	lsl	r0, r0, #2
   1e720:	str	r0, [r6]
   1e724:	bl	143b4 <calloc@plt>
   1e728:	cmp	r0, #0
   1e72c:	mov	ip, r0
   1e730:	str	r0, [r5]
   1e734:	beq	1e7cc <raspitexutil_capture_bgra@@Base+0xf0>
   1e738:	mov	r0, #0
   1e73c:	ldr	r2, [r4, #260]	; 0x104
   1e740:	ldr	r3, [r4, #264]	; 0x108
   1e744:	movw	lr, #5121	; 0x1401
   1e748:	mov	r1, r0
   1e74c:	str	ip, [sp, #8]
   1e750:	movw	ip, #6408	; 0x1908
   1e754:	stm	sp, {ip, lr}
   1e758:	bl	14504 <glReadPixels@plt>
   1e75c:	bl	143a8 <glGetError@plt>
   1e760:	cmp	r0, #0
   1e764:	bne	1e7a4 <raspitexutil_capture_bgra@@Base+0xc8>
   1e768:	add	sp, sp, #16
   1e76c:	pop	{r4, r5, r6, pc}
   1e770:	ldr	ip, [r4, #260]	; 0x104
   1e774:	mov	lr, #4
   1e778:	ldr	r3, [pc, #92]	; 1e7dc <raspitexutil_capture_bgra@@Base+0x100>
   1e77c:	mov	r1, #5
   1e780:	ldr	r2, [pc, #88]	; 1e7e0 <raspitexutil_capture_bgra@@Base+0x104>
   1e784:	str	ip, [sp]
   1e788:	add	r3, pc, r3
   1e78c:	ldr	ip, [r4, #264]	; 0x108
   1e790:	add	r2, pc, r2
   1e794:	add	r3, r3, #320	; 0x140
   1e798:	stmib	sp, {ip, lr}
   1e79c:	bl	1493c <vcos_log_impl@plt>
   1e7a0:	b	1e70c <raspitexutil_capture_bgra@@Base+0x30>
   1e7a4:	ldr	r0, [r5]
   1e7a8:	mov	r3, #0
   1e7ac:	str	r3, [r6]
   1e7b0:	cmp	r0, r3
   1e7b4:	beq	1e7bc <raspitexutil_capture_bgra@@Base+0xe0>
   1e7b8:	bl	14534 <free@plt>
   1e7bc:	mov	r3, #0
   1e7c0:	mvn	r0, #0
   1e7c4:	str	r3, [r5]
   1e7c8:	b	1e768 <raspitexutil_capture_bgra@@Base+0x8c>
   1e7cc:	str	r0, [r6]
   1e7d0:	b	1e7bc <raspitexutil_capture_bgra@@Base+0xe0>
   1e7d4:	andeq	fp, r1, ip, lsl #18
   1e7d8:	andeq	r0, r0, r8, lsr r3
   1e7dc:			; <UNDEFINED> instruction: 0x00007ab4
   1e7e0:	andeq	r7, r0, ip, asr #27

0001e7e4 <raspitexutil_build_shader_program@@Base>:
   1e7e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e7e8:	sub	sp, sp, #1040	; 0x410
   1e7ec:	ldr	r5, [pc, #1064]	; 1ec1c <raspitexutil_build_shader_program@@Base+0x438>
   1e7f0:	sub	sp, sp, #12
   1e7f4:	ldr	r2, [pc, #1060]	; 1ec20 <raspitexutil_build_shader_program@@Base+0x43c>
   1e7f8:	mov	r3, #0
   1e7fc:	add	r5, pc, r5
   1e800:	subs	r4, r0, #0
   1e804:	ldr	r6, [r5, r2]
   1e808:	str	r3, [sp, #16]
   1e80c:	ldr	r3, [r6]
   1e810:	str	r3, [sp, #1044]	; 0x414
   1e814:	beq	1ea30 <raspitexutil_build_shader_program@@Base+0x24c>
   1e818:	ldr	r3, [r4]
   1e81c:	cmp	r3, #0
   1e820:	beq	1ea64 <raspitexutil_build_shader_program@@Base+0x280>
   1e824:	ldr	r3, [r4, #4]
   1e828:	cmp	r3, #0
   1e82c:	beq	1ea98 <raspitexutil_build_shader_program@@Base+0x2b4>
   1e830:	ldr	r3, [r4]
   1e834:	cmp	r3, #0
   1e838:	beq	1ea14 <raspitexutil_build_shader_program@@Base+0x230>
   1e83c:	ldr	r3, [r4, #4]
   1e840:	cmp	r3, #0
   1e844:	beq	1ea14 <raspitexutil_build_shader_program@@Base+0x230>
   1e848:	mov	r7, #0
   1e84c:	movw	r0, #35633	; 0x8b31
   1e850:	str	r7, [r4, #140]	; 0x8c
   1e854:	add	r8, sp, #24
   1e858:	str	r7, [r4, #136]	; 0x88
   1e85c:	sub	r9, r8, #12
   1e860:	bl	146b4 <glCreateShader@plt>
   1e864:	mov	r3, r7
   1e868:	mov	r1, #1
   1e86c:	mov	r2, r4
   1e870:	str	r0, [r4, #136]	; 0x88
   1e874:	bl	14948 <glShaderSource@plt>
   1e878:	ldr	r0, [r4, #136]	; 0x88
   1e87c:	bl	14a80 <glCompileShader@plt>
   1e880:	mov	r2, r9
   1e884:	ldr	r0, [r4, #136]	; 0x88
   1e888:	movw	r1, #35713	; 0x8b81
   1e88c:	bl	1427c <glGetShaderiv@plt>
   1e890:	ldr	r3, [sp, #12]
   1e894:	cmp	r3, r7
   1e898:	bne	1e944 <raspitexutil_build_shader_program@@Base+0x160>
   1e89c:	ldr	r0, [r4, #136]	; 0x88
   1e8a0:	sub	r7, r8, #4
   1e8a4:	sub	r2, r8, #8
   1e8a8:	mov	r3, r7
   1e8ac:	mov	r1, #1024	; 0x400
   1e8b0:	bl	14930 <glGetShaderInfoLog@plt>
   1e8b4:	ldr	r3, [pc, #872]	; 1ec24 <raspitexutil_build_shader_program@@Base+0x440>
   1e8b8:	ldr	r5, [r5, r3]
   1e8bc:	ldr	r3, [r5]
   1e8c0:	cmp	r3, #1
   1e8c4:	bls	1e90c <raspitexutil_build_shader_program@@Base+0x128>
   1e8c8:	ldr	r2, [pc, #856]	; 1ec28 <raspitexutil_build_shader_program@@Base+0x444>
   1e8cc:	mov	r3, r7
   1e8d0:	mov	r0, r5
   1e8d4:	mov	r1, #2
   1e8d8:	add	r2, pc, r2
   1e8dc:	bl	1493c <vcos_log_impl@plt>
   1e8e0:	ldr	r3, [r5]
   1e8e4:	cmp	r3, #1
   1e8e8:	bls	1e90c <raspitexutil_build_shader_program@@Base+0x128>
   1e8ec:	ldr	r3, [pc, #824]	; 1ec2c <raspitexutil_build_shader_program@@Base+0x448>
   1e8f0:	mov	r0, r5
   1e8f4:	ldr	r2, [pc, #820]	; 1ec30 <raspitexutil_build_shader_program@@Base+0x44c>
   1e8f8:	mov	r1, #2
   1e8fc:	add	r3, pc, r3
   1e900:	add	r2, pc, r2
   1e904:	add	r3, r3, #384	; 0x180
   1e908:	bl	1493c <vcos_log_impl@plt>
   1e90c:	ldr	r0, [r4, #144]	; 0x90
   1e910:	bl	14444 <glDeleteProgram@plt>
   1e914:	ldr	r0, [r4, #140]	; 0x8c
   1e918:	bl	1451c <glDeleteShader@plt>
   1e91c:	ldr	r0, [r4, #136]	; 0x88
   1e920:	bl	1451c <glDeleteShader@plt>
   1e924:	mvn	r0, #0
   1e928:	ldr	r2, [sp, #1044]	; 0x414
   1e92c:	ldr	r3, [r6]
   1e930:	cmp	r2, r3
   1e934:	bne	1ec18 <raspitexutil_build_shader_program@@Base+0x434>
   1e938:	add	sp, sp, #1040	; 0x410
   1e93c:	add	sp, sp, #12
   1e940:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e944:	movw	r0, #35632	; 0x8b30
   1e948:	bl	146b4 <glCreateShader@plt>
   1e94c:	mov	r3, r7
   1e950:	mov	r1, #1
   1e954:	add	r2, r4, #4
   1e958:	str	r0, [r4, #140]	; 0x8c
   1e95c:	bl	14948 <glShaderSource@plt>
   1e960:	ldr	r0, [r4, #140]	; 0x8c
   1e964:	bl	14a80 <glCompileShader@plt>
   1e968:	ldr	r0, [r4, #140]	; 0x8c
   1e96c:	movw	r1, #35713	; 0x8b81
   1e970:	mov	r2, r9
   1e974:	bl	1427c <glGetShaderiv@plt>
   1e978:	ldr	r3, [sp, #12]
   1e97c:	cmp	r3, #0
   1e980:	beq	1ea20 <raspitexutil_build_shader_program@@Base+0x23c>
   1e984:	bl	14714 <glCreateProgram@plt>
   1e988:	ldr	r1, [r4, #136]	; 0x88
   1e98c:	str	r0, [r4, #144]	; 0x90
   1e990:	bl	141ec <glAttachShader@plt>
   1e994:	ldr	r1, [r4, #140]	; 0x8c
   1e998:	ldr	r0, [r4, #144]	; 0x90
   1e99c:	bl	141ec <glAttachShader@plt>
   1e9a0:	ldr	r0, [r4, #144]	; 0x90
   1e9a4:	bl	148dc <glLinkProgram@plt>
   1e9a8:	mov	r2, r9
   1e9ac:	ldr	r0, [r4, #144]	; 0x90
   1e9b0:	movw	r1, #35714	; 0x8b82
   1e9b4:	bl	14684 <glGetProgramiv@plt>
   1e9b8:	ldr	r3, [sp, #12]
   1e9bc:	cmp	r3, #0
   1e9c0:	bne	1eacc <raspitexutil_build_shader_program@@Base+0x2e8>
   1e9c4:	ldr	r3, [pc, #600]	; 1ec24 <raspitexutil_build_shader_program@@Base+0x440>
   1e9c8:	ldr	r5, [r5, r3]
   1e9cc:	ldr	r3, [r5]
   1e9d0:	cmp	r3, #1
   1e9d4:	bls	1e9ec <raspitexutil_build_shader_program@@Base+0x208>
   1e9d8:	ldr	r2, [pc, #596]	; 1ec34 <raspitexutil_build_shader_program@@Base+0x450>
   1e9dc:	mov	r0, r5
   1e9e0:	mov	r1, #2
   1e9e4:	add	r2, pc, r2
   1e9e8:	bl	1493c <vcos_log_impl@plt>
   1e9ec:	sub	r7, r8, #4
   1e9f0:	sub	r2, r8, #8
   1e9f4:	ldr	r0, [r4, #144]	; 0x90
   1e9f8:	mov	r1, #1024	; 0x400
   1e9fc:	mov	r3, r7
   1ea00:	bl	14624 <glGetProgramInfoLog@plt>
   1ea04:	ldr	r3, [r5]
   1ea08:	cmp	r3, #1
   1ea0c:	bhi	1e8c8 <raspitexutil_build_shader_program@@Base+0xe4>
   1ea10:	b	1e90c <raspitexutil_build_shader_program@@Base+0x128>
   1ea14:	ldr	r3, [pc, #520]	; 1ec24 <raspitexutil_build_shader_program@@Base+0x440>
   1ea18:	ldr	r5, [r5, r3]
   1ea1c:	b	1e8e0 <raspitexutil_build_shader_program@@Base+0xfc>
   1ea20:	sub	r7, r8, #4
   1ea24:	sub	r2, r8, #8
   1ea28:	ldr	r0, [r4, #140]	; 0x8c
   1ea2c:	b	1e8a8 <raspitexutil_build_shader_program@@Base+0xc4>
   1ea30:	ldr	r3, [pc, #512]	; 1ec38 <raspitexutil_build_shader_program@@Base+0x454>
   1ea34:	mov	r2, #508	; 0x1fc
   1ea38:	ldr	r1, [pc, #508]	; 1ec3c <raspitexutil_build_shader_program@@Base+0x458>
   1ea3c:	add	r3, pc, r3
   1ea40:	ldr	r0, [pc, #504]	; 1ec40 <raspitexutil_build_shader_program@@Base+0x45c>
   1ea44:	str	r3, [sp]
   1ea48:	add	r1, pc, r1
   1ea4c:	ldr	r3, [pc, #496]	; 1ec44 <raspitexutil_build_shader_program@@Base+0x460>
   1ea50:	add	r0, pc, r0
   1ea54:	add	r1, r1, #348	; 0x15c
   1ea58:	add	r3, pc, r3
   1ea5c:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1ea60:	b	1e818 <raspitexutil_build_shader_program@@Base+0x34>
   1ea64:	ldr	r3, [pc, #476]	; 1ec48 <raspitexutil_build_shader_program@@Base+0x464>
   1ea68:	movw	r2, #509	; 0x1fd
   1ea6c:	ldr	r1, [pc, #472]	; 1ec4c <raspitexutil_build_shader_program@@Base+0x468>
   1ea70:	add	r3, pc, r3
   1ea74:	ldr	r0, [pc, #468]	; 1ec50 <raspitexutil_build_shader_program@@Base+0x46c>
   1ea78:	str	r3, [sp]
   1ea7c:	add	r1, pc, r1
   1ea80:	ldr	r3, [pc, #460]	; 1ec54 <raspitexutil_build_shader_program@@Base+0x470>
   1ea84:	add	r0, pc, r0
   1ea88:	add	r1, r1, #348	; 0x15c
   1ea8c:	add	r3, pc, r3
   1ea90:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1ea94:	b	1e824 <raspitexutil_build_shader_program@@Base+0x40>
   1ea98:	ldr	r3, [pc, #440]	; 1ec58 <raspitexutil_build_shader_program@@Base+0x474>
   1ea9c:	movw	r2, #510	; 0x1fe
   1eaa0:	ldr	r1, [pc, #436]	; 1ec5c <raspitexutil_build_shader_program@@Base+0x478>
   1eaa4:	add	r3, pc, r3
   1eaa8:	ldr	r0, [pc, #432]	; 1ec60 <raspitexutil_build_shader_program@@Base+0x47c>
   1eaac:	str	r3, [sp]
   1eab0:	add	r1, pc, r1
   1eab4:	ldr	r3, [pc, #424]	; 1ec64 <raspitexutil_build_shader_program@@Base+0x480>
   1eab8:	add	r0, pc, r0
   1eabc:	add	r1, r1, #348	; 0x15c
   1eac0:	add	r3, pc, r3
   1eac4:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1eac8:	b	1e830 <raspitexutil_build_shader_program@@Base+0x4c>
   1eacc:	ldr	r9, [pc, #404]	; 1ec68 <raspitexutil_build_shader_program@@Base+0x484>
   1ead0:	mov	r8, r4
   1ead4:	add	r9, pc, r9
   1ead8:	b	1eaec <raspitexutil_build_shader_program@@Base+0x308>
   1eadc:	add	r7, r7, #1
   1eae0:	add	r8, r8, #4
   1eae4:	cmp	r7, #16
   1eae8:	beq	1eb3c <raspitexutil_build_shader_program@@Base+0x358>
   1eaec:	ldr	r1, [r8, #72]	; 0x48
   1eaf0:	cmp	r1, #0
   1eaf4:	beq	1eb3c <raspitexutil_build_shader_program@@Base+0x358>
   1eaf8:	ldr	r0, [r4, #144]	; 0x90
   1eafc:	bl	146d8 <glGetAttribLocation@plt>
   1eb00:	ldr	r3, [pc, #284]	; 1ec24 <raspitexutil_build_shader_program@@Base+0x440>
   1eb04:	cmn	r0, #1
   1eb08:	mov	r1, r0
   1eb0c:	str	r0, [r8, #212]	; 0xd4
   1eb10:	beq	1ebb8 <raspitexutil_build_shader_program@@Base+0x3d4>
   1eb14:	ldr	r0, [r5, r3]
   1eb18:	ldr	r3, [r0]
   1eb1c:	cmp	r3, #4
   1eb20:	bls	1eadc <raspitexutil_build_shader_program@@Base+0x2f8>
   1eb24:	ldr	r3, [r8, #72]	; 0x48
   1eb28:	mov	r2, r9
   1eb2c:	str	r1, [sp]
   1eb30:	mov	r1, #5
   1eb34:	bl	1493c <vcos_log_impl@plt>
   1eb38:	b	1eadc <raspitexutil_build_shader_program@@Base+0x2f8>
   1eb3c:	ldr	r9, [pc, #296]	; 1ec6c <raspitexutil_build_shader_program@@Base+0x488>
   1eb40:	mov	r7, r4
   1eb44:	mov	r8, #0
   1eb48:	add	r9, pc, r9
   1eb4c:	b	1eb60 <raspitexutil_build_shader_program@@Base+0x37c>
   1eb50:	add	r8, r8, #1
   1eb54:	add	r7, r7, #4
   1eb58:	cmp	r8, #16
   1eb5c:	beq	1ebb0 <raspitexutil_build_shader_program@@Base+0x3cc>
   1eb60:	ldr	r1, [r7, #8]
   1eb64:	cmp	r1, #0
   1eb68:	beq	1ebb0 <raspitexutil_build_shader_program@@Base+0x3cc>
   1eb6c:	ldr	r0, [r4, #144]	; 0x90
   1eb70:	bl	149c0 <glGetUniformLocation@plt>
   1eb74:	ldr	r3, [pc, #168]	; 1ec24 <raspitexutil_build_shader_program@@Base+0x440>
   1eb78:	cmn	r0, #1
   1eb7c:	mov	r1, r0
   1eb80:	str	r0, [r7, #148]	; 0x94
   1eb84:	beq	1ebe8 <raspitexutil_build_shader_program@@Base+0x404>
   1eb88:	ldr	r0, [r5, r3]
   1eb8c:	ldr	r3, [r0]
   1eb90:	cmp	r3, #4
   1eb94:	bls	1eb50 <raspitexutil_build_shader_program@@Base+0x36c>
   1eb98:	ldr	r3, [r7, #8]
   1eb9c:	mov	r2, r9
   1eba0:	str	r1, [sp]
   1eba4:	mov	r1, #5
   1eba8:	bl	1493c <vcos_log_impl@plt>
   1ebac:	b	1eb50 <raspitexutil_build_shader_program@@Base+0x36c>
   1ebb0:	mov	r0, #0
   1ebb4:	b	1e928 <raspitexutil_build_shader_program@@Base+0x144>
   1ebb8:	ldr	r5, [r5, r3]
   1ebbc:	ldr	r3, [r5]
   1ebc0:	cmp	r3, #1
   1ebc4:	bls	1e90c <raspitexutil_build_shader_program@@Base+0x128>
   1ebc8:	add	r7, r7, #18
   1ebcc:	ldr	r2, [pc, #156]	; 1ec70 <raspitexutil_build_shader_program@@Base+0x48c>
   1ebd0:	mov	r0, r5
   1ebd4:	mov	r1, #2
   1ebd8:	add	r2, pc, r2
   1ebdc:	ldr	r3, [r4, r7, lsl #2]
   1ebe0:	bl	1493c <vcos_log_impl@plt>
   1ebe4:	b	1e8e0 <raspitexutil_build_shader_program@@Base+0xfc>
   1ebe8:	ldr	r5, [r5, r3]
   1ebec:	ldr	r3, [r5]
   1ebf0:	cmp	r3, #1
   1ebf4:	bls	1e90c <raspitexutil_build_shader_program@@Base+0x128>
   1ebf8:	add	r8, r8, #2
   1ebfc:	ldr	r2, [pc, #112]	; 1ec74 <raspitexutil_build_shader_program@@Base+0x490>
   1ec00:	mov	r0, r5
   1ec04:	mov	r1, #2
   1ec08:	add	r2, pc, r2
   1ec0c:	ldr	r3, [r4, r8, lsl #2]
   1ec10:	bl	1493c <vcos_log_impl@plt>
   1ec14:	b	1e8e0 <raspitexutil_build_shader_program@@Base+0xfc>
   1ec18:	bl	14804 <__stack_chk_fail@plt>
   1ec1c:	strdeq	fp, [r1], -ip
   1ec20:	andeq	r0, r0, r4, lsr r3
   1ec24:	andeq	r0, r0, r8, lsr r3
   1ec28:	andeq	r7, r0, r4, lsr #26
   1ec2c:	andeq	r7, r0, r0, asr #18
   1ec30:			; <UNDEFINED> instruction: 0x00007db0
   1ec34:	andeq	r7, r0, ip, lsr #24
   1ec38:	andeq	r4, r0, ip, lsr #28
   1ec3c:	strdeq	r7, [r0], -r4
   1ec40:	andeq	r7, r0, ip, lsl fp
   1ec44:	andeq	r4, r0, r0, asr #11
   1ec48:	andeq	r7, r0, r4, ror #22
   1ec4c:	andeq	r7, r0, r0, asr #15
   1ec50:	andeq	r7, r0, r8, ror #21
   1ec54:	andeq	r4, r0, ip, lsl #11
   1ec58:	andeq	r7, r0, r4, asr #22
   1ec5c:	andeq	r7, r0, ip, lsl #15
   1ec60:			; <UNDEFINED> instruction: 0x00007ab4
   1ec64:	andeq	r4, r0, r8, asr r5
   1ec68:	andeq	r7, r0, r4, lsl #23
   1ec6c:	andeq	r7, r0, r0, asr fp
   1ec70:	andeq	r7, r0, r8, asr sl
   1ec74:	andeq	r7, r0, r8, ror #20

0001ec78 <write_tga@@Base>:
   1ec78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ec7c:	sub	sp, sp, #24
   1ec80:	ldr	r5, [pc, #488]	; 1ee70 <write_tga@@Base+0x1f8>
   1ec84:	uxth	lr, r2
   1ec88:	ldr	ip, [pc, #484]	; 1ee74 <write_tga@@Base+0x1fc>
   1ec8c:	mov	r4, r0
   1ec90:	add	r5, pc, r5
   1ec94:	mov	r7, r3
   1ec98:	mov	r3, r0
   1ec9c:	mov	r0, sp
   1eca0:	ldr	r6, [r5, ip]
   1eca4:	mov	r2, r5
   1eca8:	strh	r1, [sp, #14]
   1ecac:	mov	r1, #1
   1ecb0:	mov	r2, r1
   1ecb4:	mov	ip, #0
   1ecb8:	ldr	sl, [r6]
   1ecbc:	mov	r5, #2
   1ecc0:	str	ip, [sp, #16]
   1ecc4:	mov	r9, #32
   1ecc8:	str	ip, [sp]
   1eccc:	add	r8, sp, #16
   1ecd0:	strh	lr, [sp, #12]
   1ecd4:	strh	lr, [sp, #16]
   1ecd8:	str	ip, [sp, #4]
   1ecdc:	str	ip, [sp, #8]
   1ece0:	str	sl, [sp, #20]
   1ece4:	strb	r5, [sp, #2]
   1ece8:	strb	r9, [sp, #18]
   1ecec:	bl	147b0 <fwrite@plt>
   1ecf0:	cmp	r0, #1
   1ecf4:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ecf8:	mov	r1, r0
   1ecfc:	mov	r3, r4
   1ed00:	add	r0, sp, #1
   1ed04:	mov	r2, r1
   1ed08:	bl	147b0 <fwrite@plt>
   1ed0c:	cmp	r0, #1
   1ed10:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ed14:	mov	r1, r0
   1ed18:	mov	r3, r4
   1ed1c:	add	r0, sp, #2
   1ed20:	mov	r2, r1
   1ed24:	bl	147b0 <fwrite@plt>
   1ed28:	cmp	r0, #1
   1ed2c:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ed30:	mov	r2, r0
   1ed34:	mov	r1, r5
   1ed38:	add	r0, sp, #4
   1ed3c:	mov	r3, r4
   1ed40:	bl	147b0 <fwrite@plt>
   1ed44:	cmp	r0, #1
   1ed48:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ed4c:	mov	r2, r0
   1ed50:	mov	r1, r5
   1ed54:	add	r0, sp, #6
   1ed58:	mov	r3, r4
   1ed5c:	bl	147b0 <fwrite@plt>
   1ed60:	cmp	r0, #1
   1ed64:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ed68:	mov	r1, r0
   1ed6c:	mov	r3, r4
   1ed70:	add	r0, sp, #8
   1ed74:	mov	r2, r1
   1ed78:	bl	147b0 <fwrite@plt>
   1ed7c:	cmp	r0, #1
   1ed80:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ed84:	mov	r2, r0
   1ed88:	mov	r1, r5
   1ed8c:	add	r0, sp, #10
   1ed90:	mov	r3, r4
   1ed94:	bl	147b0 <fwrite@plt>
   1ed98:	cmp	r0, #1
   1ed9c:	bne	1ee50 <write_tga@@Base+0x1d8>
   1eda0:	mov	r2, r0
   1eda4:	mov	r1, r5
   1eda8:	add	r0, sp, #12
   1edac:	mov	r3, r4
   1edb0:	bl	147b0 <fwrite@plt>
   1edb4:	cmp	r0, #1
   1edb8:	bne	1ee50 <write_tga@@Base+0x1d8>
   1edbc:	mov	r2, r0
   1edc0:	mov	r1, r5
   1edc4:	add	r0, sp, #14
   1edc8:	mov	r3, r4
   1edcc:	bl	147b0 <fwrite@plt>
   1edd0:	cmp	r0, #1
   1edd4:	mov	r2, r0
   1edd8:	bne	1ee50 <write_tga@@Base+0x1d8>
   1eddc:	mov	r0, r8
   1ede0:	mov	r1, r5
   1ede4:	mov	r3, r4
   1ede8:	bl	147b0 <fwrite@plt>
   1edec:	cmp	r0, #1
   1edf0:	bne	1ee50 <write_tga@@Base+0x1d8>
   1edf4:	mov	r1, #1
   1edf8:	add	r0, sp, #18
   1edfc:	mov	r2, r1
   1ee00:	mov	r3, r4
   1ee04:	bl	147b0 <fwrite@plt>
   1ee08:	cmp	r0, #1
   1ee0c:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ee10:	mov	r1, r0
   1ee14:	mov	r3, r4
   1ee18:	mov	r2, r1
   1ee1c:	add	r0, sp, #19
   1ee20:	bl	147b0 <fwrite@plt>
   1ee24:	cmp	r0, #1
   1ee28:	mov	r1, r0
   1ee2c:	bne	1ee50 <write_tga@@Base+0x1d8>
   1ee30:	ldr	r2, [sp, #56]	; 0x38
   1ee34:	mov	r0, r7
   1ee38:	mov	r3, r4
   1ee3c:	bl	147b0 <fwrite@plt>
   1ee40:	ldr	r2, [sp, #56]	; 0x38
   1ee44:	subs	r0, r2, r0
   1ee48:	mvnne	r0, #0
   1ee4c:	b	1ee54 <write_tga@@Base+0x1dc>
   1ee50:	mvn	r0, #0
   1ee54:	ldr	r2, [sp, #20]
   1ee58:	ldr	r3, [r6]
   1ee5c:	cmp	r2, r3
   1ee60:	bne	1ee6c <write_tga@@Base+0x1f4>
   1ee64:	add	sp, sp, #24
   1ee68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee6c:	bl	14804 <__stack_chk_fail@plt>
   1ee70:	andeq	fp, r1, r8, ror #6
   1ee74:	andeq	r0, r0, r4, lsr r3

0001ee78 <load_tga@@Base>:
   1ee78:	push	{r4, r5, r6, r7, r8, lr}
   1ee7c:	mov	r5, r1
   1ee80:	ldr	r1, [pc, #516]	; 1f08c <load_tga@@Base+0x214>
   1ee84:	add	r1, pc, r1
   1ee88:	bl	14690 <fopen64@plt>
   1ee8c:	subs	r4, r0, #0
   1ee90:	beq	1f074 <load_tga@@Base+0x1fc>
   1ee94:	mov	r1, #1
   1ee98:	mov	r0, r5
   1ee9c:	mov	r2, r1
   1eea0:	mov	r3, r4
   1eea4:	bl	1496c <fread@plt>
   1eea8:	cmp	r0, #1
   1eeac:	bne	1eff4 <load_tga@@Base+0x17c>
   1eeb0:	mov	r1, r0
   1eeb4:	mov	r3, r4
   1eeb8:	add	r0, r5, #1
   1eebc:	mov	r2, r1
   1eec0:	bl	1496c <fread@plt>
   1eec4:	cmp	r0, #1
   1eec8:	bne	1eff4 <load_tga@@Base+0x17c>
   1eecc:	mov	r1, r0
   1eed0:	mov	r3, r4
   1eed4:	add	r0, r5, #2
   1eed8:	mov	r2, r1
   1eedc:	bl	1496c <fread@plt>
   1eee0:	cmp	r0, #1
   1eee4:	bne	1eff4 <load_tga@@Base+0x17c>
   1eee8:	mov	r2, r0
   1eeec:	mov	r1, #2
   1eef0:	add	r0, r5, #4
   1eef4:	mov	r3, r4
   1eef8:	bl	1496c <fread@plt>
   1eefc:	cmp	r0, #1
   1ef00:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef04:	mov	r2, r0
   1ef08:	mov	r1, #2
   1ef0c:	add	r0, r5, #6
   1ef10:	mov	r3, r4
   1ef14:	bl	1496c <fread@plt>
   1ef18:	cmp	r0, #1
   1ef1c:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef20:	mov	r1, r0
   1ef24:	mov	r3, r4
   1ef28:	add	r0, r5, #8
   1ef2c:	mov	r2, r1
   1ef30:	bl	1496c <fread@plt>
   1ef34:	cmp	r0, #1
   1ef38:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef3c:	mov	r2, r0
   1ef40:	mov	r1, #2
   1ef44:	add	r0, r5, #10
   1ef48:	mov	r3, r4
   1ef4c:	bl	1496c <fread@plt>
   1ef50:	cmp	r0, #1
   1ef54:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef58:	mov	r2, r0
   1ef5c:	mov	r1, #2
   1ef60:	add	r0, r5, #12
   1ef64:	mov	r3, r4
   1ef68:	bl	1496c <fread@plt>
   1ef6c:	cmp	r0, #1
   1ef70:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef74:	mov	r2, r0
   1ef78:	mov	r1, #2
   1ef7c:	add	r0, r5, #14
   1ef80:	mov	r3, r4
   1ef84:	bl	1496c <fread@plt>
   1ef88:	cmp	r0, #1
   1ef8c:	bne	1eff4 <load_tga@@Base+0x17c>
   1ef90:	add	r0, r5, #16
   1ef94:	mov	r1, #2
   1ef98:	mov	r2, #1
   1ef9c:	mov	r3, r4
   1efa0:	bl	1496c <fread@plt>
   1efa4:	cmp	r0, #1
   1efa8:	bne	1eff4 <load_tga@@Base+0x17c>
   1efac:	mov	r1, r0
   1efb0:	mov	r3, r4
   1efb4:	add	r0, r5, #18
   1efb8:	mov	r2, r1
   1efbc:	bl	1496c <fread@plt>
   1efc0:	cmp	r0, #1
   1efc4:	bne	1eff4 <load_tga@@Base+0x17c>
   1efc8:	mov	r1, r0
   1efcc:	mov	r3, r4
   1efd0:	add	r0, r5, #19
   1efd4:	mov	r2, r1
   1efd8:	bl	1496c <fread@plt>
   1efdc:	cmp	r0, #1
   1efe0:	mov	r7, r0
   1efe4:	bne	1eff4 <load_tga@@Base+0x17c>
   1efe8:	ldrb	r3, [r5, #2]
   1efec:	cmp	r3, #2
   1eff0:	beq	1f008 <load_tga@@Base+0x190>
   1eff4:	mov	r6, #0
   1eff8:	mov	r0, r4
   1effc:	bl	14360 <fclose@plt>
   1f000:	mov	r0, r6
   1f004:	pop	{r4, r5, r6, r7, r8, pc}
   1f008:	ldrb	r3, [r5, #18]
   1f00c:	cmp	r3, #24
   1f010:	cmpne	r3, #32
   1f014:	bne	1eff4 <load_tga@@Base+0x17c>
   1f018:	ldrh	r8, [r5, #16]
   1f01c:	lsr	r3, r3, #3
   1f020:	ldrh	r2, [r5, #14]
   1f024:	mul	r2, r8, r2
   1f028:	mul	r8, r3, r2
   1f02c:	mov	r0, r8
   1f030:	bl	147ec <malloc@plt>
   1f034:	subs	r6, r0, #0
   1f038:	beq	1eff4 <load_tga@@Base+0x17c>
   1f03c:	ldrb	r2, [r5]
   1f040:	cmp	r2, #0
   1f044:	bne	1f07c <load_tga@@Base+0x204>
   1f048:	mov	r0, r6
   1f04c:	mov	r1, #1
   1f050:	mov	r2, r8
   1f054:	mov	r3, r4
   1f058:	bl	1496c <fread@plt>
   1f05c:	cmp	r8, r0
   1f060:	beq	1eff8 <load_tga@@Base+0x180>
   1f064:	mov	r0, r6
   1f068:	mov	r6, #0
   1f06c:	bl	14534 <free@plt>
   1f070:	b	1eff8 <load_tga@@Base+0x180>
   1f074:	mov	r6, r4
   1f078:	b	1f000 <load_tga@@Base+0x188>
   1f07c:	mov	r1, r7
   1f080:	mov	r0, r4
   1f084:	bl	14594 <fseek@plt>
   1f088:	b	1f048 <load_tga@@Base+0x1d0>
   1f08c:	andeq	r5, r0, r8, asr #15
   1f090:	push	{r4, r5}
   1f094:	ldr	ip, [sp, #8]
   1f098:	cmp	ip, #0
   1f09c:	ble	1f0f0 <load_tga@@Base+0x278>
   1f0a0:	add	r5, ip, ip, lsl #1
   1f0a4:	add	ip, r2, #6
   1f0a8:	add	r5, r2, r5, lsl #1
   1f0ac:	add	r5, r5, #6
   1f0b0:	ldrh	r2, [ip, #-6]
   1f0b4:	cmp	r3, #2
   1f0b8:	add	ip, ip, #6
   1f0bc:	sub	r2, r2, #1
   1f0c0:	mul	r2, r3, r2
   1f0c4:	add	r2, r1, r2, lsl #2
   1f0c8:	ldr	r4, [r2]
   1f0cc:	str	r4, [r0]
   1f0d0:	ldr	r4, [r2, #4]
   1f0d4:	str	r4, [r0, #4]
   1f0d8:	addle	r0, r0, #8
   1f0dc:	ldrgt	r2, [r2, #8]
   1f0e0:	strgt	r2, [r0, #8]
   1f0e4:	addgt	r0, r0, #12
   1f0e8:	cmp	ip, r5
   1f0ec:	bne	1f0b0 <load_tga@@Base+0x238>
   1f0f0:	pop	{r4, r5}
   1f0f4:	bx	lr
   1f0f8:	push	{r3, r4, r5, lr}
   1f0fc:	mov	r5, r1
   1f100:	ldr	r1, [pc, #68]	; 1f14c <load_tga@@Base+0x2d4>
   1f104:	add	r1, pc, r1
   1f108:	bl	14690 <fopen64@plt>
   1f10c:	subs	r4, r0, #0
   1f110:	beq	1f144 <load_tga@@Base+0x2cc>
   1f114:	mov	r0, r5
   1f118:	movw	r2, #64476	; 0xfbdc
   1f11c:	mov	r1, #1
   1f120:	movt	r2, #57	; 0x39
   1f124:	mov	r3, r4
   1f128:	bl	1496c <fread@plt>
   1f12c:	cmp	r0, #0
   1f130:	blt	1f144 <load_tga@@Base+0x2cc>
   1f134:	mov	r0, r4
   1f138:	bl	14360 <fclose@plt>
   1f13c:	mov	r0, #0
   1f140:	pop	{r3, r4, r5, pc}
   1f144:	mvn	r0, #0
   1f148:	pop	{r3, r4, r5, pc}
   1f14c:	andeq	r5, r0, r8, asr #10
   1f150:	push	{r4, r5, r6, lr}
   1f154:	mov	r4, r0
   1f158:	sub	sp, sp, #8
   1f15c:	mov	r6, r1
   1f160:	mov	r0, #1
   1f164:	mov	r1, r4
   1f168:	mov	r5, r2
   1f16c:	bl	14780 <glGenBuffers@plt>
   1f170:	ldr	r3, [r4]
   1f174:	cmp	r3, #0
   1f178:	movne	r1, r3
   1f17c:	bne	1f1b0 <load_tga@@Base+0x338>
   1f180:	ldr	r3, [pc, #88]	; 1f1e0 <load_tga@@Base+0x368>
   1f184:	mov	r2, #77	; 0x4d
   1f188:	ldr	r0, [pc, #84]	; 1f1e4 <load_tga@@Base+0x36c>
   1f18c:	add	r3, pc, r3
   1f190:	ldr	r1, [pc, #80]	; 1f1e8 <load_tga@@Base+0x370>
   1f194:	str	r3, [sp]
   1f198:	add	r0, pc, r0
   1f19c:	ldr	r3, [pc, #72]	; 1f1ec <load_tga@@Base+0x374>
   1f1a0:	add	r1, pc, r1
   1f1a4:	add	r3, pc, r3
   1f1a8:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1f1ac:	ldr	r1, [r4]
   1f1b0:	movw	r0, #34962	; 0x8892
   1f1b4:	bl	148c4 <glBindBuffer@plt>
   1f1b8:	mov	r1, r6
   1f1bc:	mov	r2, r5
   1f1c0:	movw	r0, #34962	; 0x8892
   1f1c4:	movw	r3, #35044	; 0x88e4
   1f1c8:	bl	14588 <glBufferData@plt>
   1f1cc:	movw	r0, #34962	; 0x8892
   1f1d0:	mov	r1, #0
   1f1d4:	add	sp, sp, #8
   1f1d8:	pop	{r4, r5, r6, lr}
   1f1dc:	b	148c4 <glBindBuffer@plt>
   1f1e0:	andeq	r7, r0, r4, lsl #15
   1f1e4:	andeq	r7, r0, ip, lsl #14
   1f1e8:	andeq	r7, r0, r4, lsr r5
   1f1ec:	andeq	r3, r0, r4, ror lr

0001f1f0 <draw_wavefront@@Base>:
   1f1f0:	push	{r3, r4, r5, r6, r7, lr}
   1f1f4:	mov	r6, r0
   1f1f8:	ldr	r3, [r0, #208]	; 0xd0
   1f1fc:	mov	r7, r1
   1f200:	cmp	r3, #0
   1f204:	ble	1f304 <draw_wavefront@@Base+0x114>
   1f208:	mov	r4, r0
   1f20c:	mov	r5, #0
   1f210:	b	1f28c <draw_wavefront@@Base+0x9c>
   1f214:	bl	142c4 <glEnableClientState@plt>
   1f218:	movw	r0, #34962	; 0x8892
   1f21c:	ldr	r1, [r4, #4]
   1f220:	bl	148c4 <glBindBuffer@plt>
   1f224:	mov	r1, #0
   1f228:	movw	r0, #5126	; 0x1406
   1f22c:	mov	r2, r1
   1f230:	bl	145ac <glNormalPointer@plt>
   1f234:	ldr	r3, [r4, #8]
   1f238:	movw	r0, #32888	; 0x8078
   1f23c:	cmp	r3, #0
   1f240:	beq	1f2dc <draw_wavefront@@Base+0xec>
   1f244:	bl	142c4 <glEnableClientState@plt>
   1f248:	movw	r0, #34962	; 0x8892
   1f24c:	ldr	r1, [r4, #8]
   1f250:	bl	148c4 <glBindBuffer@plt>
   1f254:	mov	r2, #0
   1f258:	mov	r3, r2
   1f25c:	mov	r0, #2
   1f260:	movw	r1, #5126	; 0x1406
   1f264:	bl	14228 <glTexCoordPointer@plt>
   1f268:	mov	r0, #4
   1f26c:	mov	r1, #0
   1f270:	ldr	r2, [r4, #12]
   1f274:	bl	1484c <glDrawArrays@plt>
   1f278:	ldr	r3, [r6, #208]	; 0xd0
   1f27c:	add	r5, r5, #1
   1f280:	add	r4, r4, #52	; 0x34
   1f284:	cmp	r3, r5
   1f288:	ble	1f304 <draw_wavefront@@Base+0x114>
   1f28c:	ldr	r1, [r4, #48]	; 0x30
   1f290:	cmn	r1, #1
   1f294:	beq	1f27c <draw_wavefront@@Base+0x8c>
   1f298:	cmp	r1, #0
   1f29c:	moveq	r1, r7
   1f2a0:	movwne	r0, #3553	; 0xde1
   1f2a4:	movweq	r0, #36197	; 0x8d65
   1f2a8:	bl	14660 <glBindTexture@plt>
   1f2ac:	ldr	r1, [r4]
   1f2b0:	cmp	r1, #0
   1f2b4:	bne	1f2e4 <draw_wavefront@@Base+0xf4>
   1f2b8:	ldr	r3, [r4, #4]
   1f2bc:	movw	r0, #32885	; 0x8075
   1f2c0:	cmp	r3, #0
   1f2c4:	bne	1f214 <draw_wavefront@@Base+0x24>
   1f2c8:	bl	146cc <glDisableClientState@plt>
   1f2cc:	ldr	r3, [r4, #8]
   1f2d0:	movw	r0, #32888	; 0x8078
   1f2d4:	cmp	r3, #0
   1f2d8:	bne	1f244 <draw_wavefront@@Base+0x54>
   1f2dc:	bl	146cc <glDisableClientState@plt>
   1f2e0:	b	1f268 <draw_wavefront@@Base+0x78>
   1f2e4:	movw	r0, #34962	; 0x8892
   1f2e8:	bl	148c4 <glBindBuffer@plt>
   1f2ec:	mov	r2, #0
   1f2f0:	mov	r3, r2
   1f2f4:	mov	r0, #3
   1f2f8:	movw	r1, #5126	; 0x1406
   1f2fc:	bl	14954 <glVertexPointer@plt>
   1f300:	b	1f2b8 <draw_wavefront@@Base+0xc8>
   1f304:	movw	r0, #34962	; 0x8892
   1f308:	mov	r1, #0
   1f30c:	bl	148c4 <glBindBuffer@plt>
   1f310:	mov	r0, #0
   1f314:	pop	{r3, r4, r5, r6, r7, pc}

0001f318 <load_wavefront@@Base>:
   1f318:	ldr	r3, [pc, #2616]	; 1fd58 <load_wavefront@@Base+0xa40>
   1f31c:	ldr	r2, [pc, #2616]	; 1fd5c <load_wavefront@@Base+0xa44>
   1f320:	add	r3, pc, r3
   1f324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f328:	vpush	{d8-d9}
   1f32c:	sub	sp, sp, #924	; 0x39c
   1f330:	ldr	r2, [r3, r2]
   1f334:	mov	r5, r0
   1f338:	mov	r0, #216	; 0xd8
   1f33c:	ldr	r3, [r2]
   1f340:	str	r2, [sp, #256]	; 0x100
   1f344:	str	r3, [sp, #916]	; 0x394
   1f348:	bl	147ec <malloc@plt>
   1f34c:	cmp	r5, #0
   1f350:	cmpne	r0, #0
   1f354:	str	r0, [sp, #232]	; 0xe8
   1f358:	movne	r4, #0
   1f35c:	moveq	r4, #1
   1f360:	beq	1f3e8 <load_wavefront@@Base+0xd0>
   1f364:	mov	r1, r4
   1f368:	mov	r2, #216	; 0xd8
   1f36c:	bl	14414 <memset@plt>
   1f370:	ldr	r6, [sp, #232]	; 0xe8
   1f374:	movw	r0, #64476	; 0xfbdc
   1f378:	movt	r0, #57	; 0x39
   1f37c:	str	r4, [r6, #212]	; 0xd4
   1f380:	bl	147ec <malloc@plt>
   1f384:	subs	fp, r0, #0
   1f388:	beq	1f3e8 <load_wavefront@@Base+0xd0>
   1f38c:	mov	r0, r5
   1f390:	bl	1463c <strlen@plt>
   1f394:	add	r3, r0, #5
   1f398:	mov	r4, r0
   1f39c:	cmp	r3, #128	; 0x80
   1f3a0:	movhi	r0, r0
   1f3a4:	bls	1f40c <load_wavefront@@Base+0xf4>
   1f3a8:	sub	r4, r0, #4
   1f3ac:	ldr	r1, [pc, #2476]	; 1fd60 <load_wavefront@@Base+0xa48>
   1f3b0:	add	r6, r5, r4
   1f3b4:	mov	r2, #4
   1f3b8:	add	r1, pc, r1
   1f3bc:	mov	r0, r6
   1f3c0:	bl	14978 <strncmp@plt>
   1f3c4:	subs	r4, r0, #0
   1f3c8:	beq	1f684 <load_wavefront@@Base+0x36c>
   1f3cc:	ldr	r1, [pc, #2448]	; 1fd64 <load_wavefront@@Base+0xa4c>
   1f3d0:	mov	r0, r6
   1f3d4:	mov	r2, #4
   1f3d8:	add	r1, pc, r1
   1f3dc:	bl	14978 <strncmp@plt>
   1f3e0:	cmp	r0, #0
   1f3e4:	beq	1fbe8 <load_wavefront@@Base+0x8d0>
   1f3e8:	mov	r0, #0
   1f3ec:	ldr	r8, [sp, #256]	; 0x100
   1f3f0:	ldr	r2, [sp, #916]	; 0x394
   1f3f4:	ldr	r3, [r8]
   1f3f8:	cmp	r2, r3
   1f3fc:	bne	20490 <load_wavefront@@Base+0x1178>
   1f400:	add	sp, sp, #924	; 0x39c
   1f404:	vpop	{d8-d9}
   1f408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f40c:	add	ip, sp, #528	; 0x210
   1f410:	mov	r1, r5
   1f414:	mov	r2, r4
   1f418:	mov	r3, #128	; 0x80
   1f41c:	mov	r0, ip
   1f420:	bl	145c4 <__memcpy_chk@plt>
   1f424:	ldr	r3, [pc, #2364]	; 1fd68 <load_wavefront@@Base+0xa50>
   1f428:	mov	r1, fp
   1f42c:	add	r3, pc, r3
   1f430:	mov	ip, r0
   1f434:	add	r2, r0, r4
   1f438:	ldr	r0, [r3]
   1f43c:	ldrb	r3, [r3, #4]
   1f440:	str	r0, [ip, r4]
   1f444:	mov	r0, ip
   1f448:	strb	r3, [r2, #4]
   1f44c:	bl	1f0f8 <load_tga@@Base+0x280>
   1f450:	cmp	r0, #0
   1f454:	bne	207a8 <load_wavefront@@Base+0x1490>
   1f458:	add	r8, fp, #28
   1f45c:	str	r8, [sp, #248]	; 0xf8
   1f460:	ldr	r2, [fp, #24]
   1f464:	movw	r0, #21846	; 0x5556
   1f468:	movt	r0, #21845	; 0x5555
   1f46c:	ldr	r1, [fp, #12]
   1f470:	ldr	ip, [fp, #16]
   1f474:	movw	r3, #34464	; 0x86a0
   1f478:	smull	lr, r0, r0, r2
   1f47c:	ldr	sl, [fp, #20]
   1f480:	add	ip, r1, ip
   1f484:	movt	r3, #1
   1f488:	add	sl, ip, sl
   1f48c:	add	r1, fp, r1, lsl #2
   1f490:	add	ip, fp, ip, lsl #2
   1f494:	add	r1, r1, #28
   1f498:	add	sl, fp, sl, lsl #2
   1f49c:	add	ip, ip, #28
   1f4a0:	sub	r0, r0, r2, asr #31
   1f4a4:	str	r1, [sp, #240]	; 0xf0
   1f4a8:	cmp	r0, r3
   1f4ac:	str	ip, [sp, #244]	; 0xf4
   1f4b0:	str	r0, [sp, #252]	; 0xfc
   1f4b4:	add	sl, sl, #28
   1f4b8:	ble	1f4ec <load_wavefront@@Base+0x1d4>
   1f4bc:	ldr	r3, [pc, #2216]	; 1fd6c <load_wavefront@@Base+0xa54>
   1f4c0:	mov	r2, #412	; 0x19c
   1f4c4:	ldr	r1, [pc, #2212]	; 1fd70 <load_wavefront@@Base+0xa58>
   1f4c8:	add	r3, pc, r3
   1f4cc:	ldr	r0, [pc, #2208]	; 1fd74 <load_wavefront@@Base+0xa5c>
   1f4d0:	str	r3, [sp]
   1f4d4:	add	r1, pc, r1
   1f4d8:	ldr	r3, [pc, #2200]	; 1fd78 <load_wavefront@@Base+0xa60>
   1f4dc:	add	r0, pc, r0
   1f4e0:	add	r1, r1, #32
   1f4e4:	add	r3, pc, r3
   1f4e8:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1f4ec:	ldr	r6, [sp, #252]	; 0xfc
   1f4f0:	add	r0, r6, r6, lsl #1
   1f4f4:	lsl	r0, r0, #2
   1f4f8:	bl	147ec <malloc@plt>
   1f4fc:	ldr	r3, [fp, #8]
   1f500:	cmp	r3, #0
   1f504:	mov	r5, r0
   1f508:	ble	1ff28 <load_wavefront@@Base+0xc10>
   1f50c:	ldr	r4, [sp, #232]	; 0xe8
   1f510:	mov	r9, fp
   1f514:	mov	r7, #1
   1f518:	mov	r6, #0
   1f51c:	str	fp, [sp, #236]	; 0xec
   1f520:	sub	r3, r3, #1
   1f524:	sub	r2, r7, #1
   1f528:	cmp	r3, r2
   1f52c:	mov	r0, r5
   1f530:	ldr	r1, [sp, #248]	; 0xf8
   1f534:	add	r9, r9, #2
   1f538:	ldrhle	r3, [r9, #-2]
   1f53c:	movgt	fp, r7
   1f540:	ldrle	r8, [sp, #252]	; 0xfc
   1f544:	movle	fp, r7
   1f548:	ldrhgt	r3, [r9, #-2]
   1f54c:	add	r7, r7, #1
   1f550:	rsble	r3, r3, r8
   1f554:	add	r8, r6, r6, lsl #1
   1f558:	ldrhgt	r2, [r9]
   1f55c:	lsl	r8, r8, #1
   1f560:	rsbgt	r3, r3, r2
   1f564:	add	r2, sl, r8
   1f568:	str	r3, [r4, #12]
   1f56c:	str	r3, [sp]
   1f570:	mov	r3, #3
   1f574:	bl	1f090 <load_tga@@Base+0x218>
   1f578:	ldr	r1, [r4, #12]
   1f57c:	mov	r0, r4
   1f580:	mov	r2, r5
   1f584:	add	r1, r1, r1, lsl #1
   1f588:	lsl	r1, r1, #2
   1f58c:	bl	1f150 <load_tga@@Base+0x2d8>
   1f590:	ldr	r3, [r4, #12]
   1f594:	add	r2, r8, #2
   1f598:	mov	r0, r5
   1f59c:	add	r2, sl, r2
   1f5a0:	ldr	r1, [sp, #240]	; 0xf0
   1f5a4:	str	r3, [sp]
   1f5a8:	mov	r3, #2
   1f5ac:	bl	1f090 <load_tga@@Base+0x218>
   1f5b0:	ldr	r1, [r4, #12]
   1f5b4:	add	r0, r4, #8
   1f5b8:	mov	r2, r5
   1f5bc:	lsl	r1, r1, #3
   1f5c0:	bl	1f150 <load_tga@@Base+0x2d8>
   1f5c4:	ldr	r3, [r4, #12]
   1f5c8:	add	r2, r8, #4
   1f5cc:	mov	r0, r5
   1f5d0:	add	r2, sl, r2
   1f5d4:	ldr	r1, [sp, #244]	; 0xf4
   1f5d8:	str	r3, [sp]
   1f5dc:	mov	r3, #3
   1f5e0:	bl	1f090 <load_tga@@Base+0x218>
   1f5e4:	ldr	r1, [r4, #12]
   1f5e8:	add	r0, r4, #4
   1f5ec:	mov	r2, r5
   1f5f0:	add	r4, r4, #52	; 0x34
   1f5f4:	add	r1, r1, r1, lsl #1
   1f5f8:	lsl	r1, r1, #2
   1f5fc:	bl	1f150 <load_tga@@Base+0x2d8>
   1f600:	ldr	ip, [sp, #236]	; 0xec
   1f604:	ldr	r8, [sp, #232]	; 0xe8
   1f608:	ldr	r2, [r4, #-40]	; 0xffffffd8
   1f60c:	ldr	r3, [ip, #8]
   1f610:	ldr	r1, [r8, #212]	; 0xd4
   1f614:	add	r6, r6, r2
   1f618:	cmp	r3, fp
   1f61c:	str	r1, [r4, #-4]
   1f620:	bgt	1f520 <load_wavefront@@Base+0x208>
   1f624:	mov	fp, ip
   1f628:	ldr	ip, [sp, #252]	; 0xfc
   1f62c:	cmp	r6, ip
   1f630:	ldr	r6, [sp, #232]	; 0xe8
   1f634:	str	r3, [r6, #208]	; 0xd0
   1f638:	beq	1f66c <load_wavefront@@Base+0x354>
   1f63c:	ldr	r3, [pc, #1848]	; 1fd7c <load_wavefront@@Base+0xa64>
   1f640:	movw	r2, #431	; 0x1af
   1f644:	ldr	r1, [pc, #1844]	; 1fd80 <load_wavefront@@Base+0xa68>
   1f648:	add	r3, pc, r3
   1f64c:	ldr	r0, [pc, #1840]	; 1fd84 <load_wavefront@@Base+0xa6c>
   1f650:	str	r3, [sp]
   1f654:	add	r1, pc, r1
   1f658:	ldr	r3, [pc, #1832]	; 1fd88 <load_wavefront@@Base+0xa70>
   1f65c:	add	r0, pc, r0
   1f660:	add	r1, r1, #32
   1f664:	add	r3, pc, r3
   1f668:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1f66c:	mov	r0, r5
   1f670:	bl	14534 <free@plt>
   1f674:	mov	r0, fp
   1f678:	bl	14534 <free@plt>
   1f67c:	ldr	r0, [sp, #232]	; 0xe8
   1f680:	b	1f3ec <load_wavefront@@Base+0xd4>
   1f684:	ldr	r1, [pc, #1792]	; 1fd8c <load_wavefront@@Base+0xa74>
   1f688:	mov	r0, r5
   1f68c:	movw	r6, #33948	; 0x849c
   1f690:	movw	r5, #20380	; 0x4f9c
   1f694:	add	r1, pc, r1
   1f698:	movt	r5, #18
   1f69c:	bl	14690 <fopen64@plt>
   1f6a0:	movt	r6, #30
   1f6a4:	movw	r8, #54300	; 0xd41c
   1f6a8:	movt	r8, #48	; 0x30
   1f6ac:	add	r5, fp, r5
   1f6b0:	add	r6, fp, r6
   1f6b4:	add	r8, fp, r8
   1f6b8:	add	ip, fp, #28
   1f6bc:	str	r5, [sp, #244]	; 0xf4
   1f6c0:	str	r6, [sp, #252]	; 0xfc
   1f6c4:	str	r8, [sp, #240]	; 0xf0
   1f6c8:	str	ip, [sp, #248]	; 0xf8
   1f6cc:	subs	r9, r0, #0
   1f6d0:	beq	1f3e8 <load_wavefront@@Base+0xd0>
   1f6d4:	add	sl, sp, #656	; 0x290
   1f6d8:	str	r4, [fp, #8]
   1f6dc:	strh	r4, [fp]
   1f6e0:	mov	r1, #1
   1f6e4:	mov	r0, sl
   1f6e8:	mov	r2, #256	; 0x100
   1f6ec:	mov	r3, r9
   1f6f0:	bl	1496c <fread@plt>
   1f6f4:	subs	r7, r0, #0
   1f6f8:	ble	20254 <load_wavefront@@Base+0xf3c>
   1f6fc:	ldr	r1, [pc, #1676]	; 1fd90 <load_wavefront@@Base+0xa78>
   1f700:	ldr	r2, [pc, #1676]	; 1fd94 <load_wavefront@@Base+0xa7c>
   1f704:	str	r5, [sp, #260]	; 0x104
   1f708:	add	r1, pc, r1
   1f70c:	ldr	r3, [pc, #1668]	; 1fd98 <load_wavefront@@Base+0xa80>
   1f710:	add	r2, pc, r2
   1f714:	ldr	r5, [sp, #248]	; 0xf8
   1f718:	add	r1, r1, #12
   1f71c:	add	r3, pc, r3
   1f720:	add	r2, r2, #12
   1f724:	add	r3, r3, #12
   1f728:	str	r6, [sp, #268]	; 0x10c
   1f72c:	str	r1, [sp, #284]	; 0x11c
   1f730:	str	r2, [sp, #276]	; 0x114
   1f734:	str	r5, [sp, #236]	; 0xec
   1f738:	str	r3, [sp, #288]	; 0x120
   1f73c:	str	r8, [sp, #264]	; 0x108
   1f740:	cmp	r7, #0
   1f744:	ble	1fecc <load_wavefront@@Base+0xbb4>
   1f748:	ldrb	r3, [sp, #656]	; 0x290
   1f74c:	cmp	r3, #10
   1f750:	beq	1fecc <load_wavefront@@Base+0xbb4>
   1f754:	cmp	r3, #13
   1f758:	beq	1fecc <load_wavefront@@Base+0xbb4>
   1f75c:	add	r3, sl, #1
   1f760:	b	1f778 <load_wavefront@@Base+0x460>
   1f764:	ldrb	r2, [r3], #1
   1f768:	cmp	r2, #10
   1f76c:	beq	1f788 <load_wavefront@@Base+0x470>
   1f770:	cmp	r2, #13
   1f774:	beq	1f788 <load_wavefront@@Base+0x470>
   1f778:	rsb	r2, sl, r3
   1f77c:	mov	r1, r3
   1f780:	cmp	r2, r7
   1f784:	blt	1f764 <load_wavefront@@Base+0x44c>
   1f788:	add	r4, r1, #1
   1f78c:	mov	r3, #0
   1f790:	rsb	r5, sl, r4
   1f794:	strb	r3, [r1]
   1f798:	cmp	r5, r7
   1f79c:	bge	1f7bc <load_wavefront@@Base+0x4a4>
   1f7a0:	ldrb	r2, [r1, #1]
   1f7a4:	cmp	r2, #10
   1f7a8:	beq	1f7bc <load_wavefront@@Base+0x4a4>
   1f7ac:	cmp	r2, #13
   1f7b0:	strbne	r3, [r1, #1]
   1f7b4:	addne	r4, r1, #2
   1f7b8:	rsbne	r5, sl, r4
   1f7bc:	mov	r0, sl
   1f7c0:	bl	1463c <strlen@plt>
   1f7c4:	sub	r0, r0, #1
   1f7c8:	ldrb	r3, [sl, r0]
   1f7cc:	cmp	r3, #10
   1f7d0:	moveq	r3, #0
   1f7d4:	strbeq	r3, [sl, r0]
   1f7d8:	ldrb	r2, [sp, #656]	; 0x290
   1f7dc:	cmp	r2, #103	; 0x67
   1f7e0:	beq	1fd0c <load_wavefront@@Base+0x9f4>
   1f7e4:	bls	1fc08 <load_wavefront@@Base+0x8f0>
   1f7e8:	cmp	r2, #115	; 0x73
   1f7ec:	beq	1fe1c <load_wavefront@@Base+0xb04>
   1f7f0:	bls	1fcb4 <load_wavefront@@Base+0x99c>
   1f7f4:	cmp	r2, #117	; 0x75
   1f7f8:	bne	1fec0 <load_wavefront@@Base+0xba8>
   1f7fc:	ldr	r2, [fp, #8]
   1f800:	mov	r6, #52	; 0x34
   1f804:	ldr	r8, [sp, #232]	; 0xe8
   1f808:	mov	r0, sl
   1f80c:	ldr	r1, [pc, #1416]	; 1fd9c <load_wavefront@@Base+0xa84>
   1f810:	mla	r2, r6, r2, r8
   1f814:	add	r1, pc, r1
   1f818:	add	r2, r2, #16
   1f81c:	bl	14648 <sscanf@plt>
   1f820:	cmp	r0, #1
   1f824:	bne	1fed4 <load_wavefront@@Base+0xbbc>
   1f828:	ldr	r8, [fp, #8]
   1f82c:	cmp	r8, #3
   1f830:	bgt	1f8d0 <load_wavefront@@Base+0x5b8>
   1f834:	cmp	r8, #0
   1f838:	ble	1ff40 <load_wavefront@@Base+0xc28>
   1f83c:	ldr	ip, [sp, #264]	; 0x108
   1f840:	movw	r1, #21846	; 0x5556
   1f844:	ldr	lr, [sp, #240]	; 0xf0
   1f848:	movt	r1, #21845	; 0x5555
   1f84c:	sub	r3, r8, #1
   1f850:	rsb	r2, lr, ip
   1f854:	asr	r0, r2, #1
   1f858:	smull	ip, r1, r1, r0
   1f85c:	lsl	r0, r3, #1
   1f860:	ldrh	r0, [fp, r0]
   1f864:	sub	r2, r1, r2, asr #31
   1f868:	cmp	r2, r0
   1f86c:	beq	20478 <load_wavefront@@Base+0x1160>
   1f870:	ldr	lr, [sp, #232]	; 0xe8
   1f874:	str	r2, [sp, #228]	; 0xe4
   1f878:	str	r3, [sp, #224]	; 0xe0
   1f87c:	mla	ip, r6, r3, lr
   1f880:	mla	r6, r6, r8, lr
   1f884:	add	ip, ip, #16
   1f888:	str	ip, [sp, #220]	; 0xdc
   1f88c:	add	r6, r6, #16
   1f890:	mov	r0, ip
   1f894:	mov	r1, r6
   1f898:	bl	149fc <strcmp@plt>
   1f89c:	ldr	r2, [sp, #228]	; 0xe4
   1f8a0:	ldr	r3, [sp, #224]	; 0xe0
   1f8a4:	ldr	ip, [sp, #220]	; 0xdc
   1f8a8:	cmp	r0, #0
   1f8ac:	bne	1ff60 <load_wavefront@@Base+0xc48>
   1f8b0:	mov	r0, ip
   1f8b4:	mov	r1, r6
   1f8b8:	str	r3, [sp, #224]	; 0xe0
   1f8bc:	bl	146f0 <strcpy@plt>
   1f8c0:	ldr	r3, [sp, #224]	; 0xe0
   1f8c4:	mov	r8, r3
   1f8c8:	add	r8, r8, #1
   1f8cc:	str	r8, [fp, #8]
   1f8d0:	cmp	r5, r7
   1f8d4:	movge	r5, r7
   1f8d8:	mov	r1, r4
   1f8dc:	rsb	r7, r5, r7
   1f8e0:	movw	r3, #257	; 0x101
   1f8e4:	mov	r0, sl
   1f8e8:	mov	r2, r7
   1f8ec:	bl	1499c <__memmove_chk@plt>
   1f8f0:	add	r0, sl, r7
   1f8f4:	rsb	r2, r7, #256	; 0x100
   1f8f8:	mov	r1, #1
   1f8fc:	mov	r3, r9
   1f900:	bl	1496c <fread@plt>
   1f904:	add	r7, r0, r7
   1f908:	cmp	r7, #0
   1f90c:	bgt	1f740 <load_wavefront@@Base+0x428>
   1f910:	ldr	r5, [sp, #268]	; 0x10c
   1f914:	movw	r3, #21846	; 0x5556
   1f918:	ldr	r6, [sp, #252]	; 0xfc
   1f91c:	movt	r3, #21845	; 0x5555
   1f920:	ldr	r8, [sp, #236]	; 0xec
   1f924:	rsb	r2, r6, r5
   1f928:	ldr	ip, [sp, #248]	; 0xf8
   1f92c:	ldr	r5, [sp, #244]	; 0xf4
   1f930:	rsb	r1, ip, r8
   1f934:	ldr	r6, [sp, #264]	; 0x108
   1f938:	ldr	ip, [sp, #260]	; 0x104
   1f93c:	asr	r8, r2, #2
   1f940:	str	r8, [sp, #236]	; 0xec
   1f944:	asr	r4, r1, #2
   1f948:	ldr	r8, [sp, #240]	; 0xf0
   1f94c:	rsb	lr, r5, ip
   1f950:	smull	r5, r0, r3, r4
   1f954:	rsb	ip, r8, r6
   1f958:	ldr	r8, [sp, #236]	; 0xec
   1f95c:	asr	r6, lr, #2
   1f960:	add	lr, fp, r4, lsl #2
   1f964:	asr	ip, ip, #1
   1f968:	add	sl, lr, #28
   1f96c:	str	ip, [sp, #260]	; 0x104
   1f970:	smull	r8, r3, r3, r8
   1f974:	sub	r5, r0, r1, asr #31
   1f978:	lsl	ip, r6, #2
   1f97c:	str	ip, [sp, #264]	; 0x108
   1f980:	sub	r7, r3, r2, asr #31
   1f984:	mov	r0, r9
   1f988:	bl	14360 <fclose@plt>
   1f98c:	ldr	r3, [fp, #8]
   1f990:	vldr	s6, [pc, #956]	; 1fd54 <load_wavefront@@Base+0xa3c>
   1f994:	vldr	s3, [fp, #28]
   1f998:	cmp	r3, #0
   1f99c:	vldr	s2, [fp, #32]
   1f9a0:	strheq	r3, [fp]
   1f9a4:	vldr	s1, [fp, #36]	; 0x24
   1f9a8:	moveq	r3, #1
   1f9ac:	streq	r3, [fp, #8]
   1f9b0:	cmp	r5, #0
   1f9b4:	ble	20274 <load_wavefront@@Base+0xf5c>
   1f9b8:	add	r3, fp, #40	; 0x28
   1f9bc:	vmov.f32	s5, s6
   1f9c0:	mov	r2, #0
   1f9c4:	vmov.f32	s4, s6
   1f9c8:	vmov.f32	s14, s1
   1f9cc:	vmov.f32	s15, s2
   1f9d0:	vmov.f32	s13, s3
   1f9d4:	vmov.f32	s11, s1
   1f9d8:	vmov.f32	s9, s2
   1f9dc:	vmov.f32	s8, s3
   1f9e0:	vmov.f32	s12, s1
   1f9e4:	vmov.f32	s10, s2
   1f9e8:	vmov.f32	s7, s3
   1f9ec:	b	1fa0c <load_wavefront@@Base+0x6f4>
   1f9f0:	vldr	s13, [r3]
   1f9f4:	vcmpe.f32	s7, s13
   1f9f8:	vldr	s15, [r3, #4]
   1f9fc:	vldr	s14, [r3, #8]
   1fa00:	add	r3, r3, #12
   1fa04:	vmrs	APSR_nzcv, fpscr
   1fa08:	vmovpl.f32	s7, s13
   1fa0c:	add	r2, r2, #1
   1fa10:	vcmpe.f32	s10, s15
   1fa14:	vmrs	APSR_nzcv, fpscr
   1fa18:	vcmpe.f32	s12, s14
   1fa1c:	vmovpl.f32	s10, s15
   1fa20:	vmrs	APSR_nzcv, fpscr
   1fa24:	vcmpe.f32	s8, s13
   1fa28:	vmovpl.f32	s12, s14
   1fa2c:	vmrs	APSR_nzcv, fpscr
   1fa30:	vcmpe.f32	s9, s15
   1fa34:	vmovle.f32	s8, s13
   1fa38:	vmrs	APSR_nzcv, fpscr
   1fa3c:	vcmpe.f32	s11, s14
   1fa40:	vmovle.f32	s9, s15
   1fa44:	vmrs	APSR_nzcv, fpscr
   1fa48:	vmovle.f32	s11, s14
   1fa4c:	cmp	r2, r5
   1fa50:	vadd.f32	s4, s4, s13
   1fa54:	vadd.f32	s5, s5, s15
   1fa58:	vadd.f32	s6, s6, s14
   1fa5c:	bne	1f9f0 <load_wavefront@@Base+0x6d8>
   1fa60:	vsub.f32	s8, s8, s7
   1fa64:	cmp	r5, #0
   1fa68:	vmov	s13, r5
   1fa6c:	vadd.f32	s9, s9, s8
   1fa70:	vsub.f32	s10, s9, s10
   1fa74:	vadd.f32	s11, s11, s10
   1fa78:	vmov.f32	s15, #8	; 0x40400000  3.0
   1fa7c:	vsub.f32	s12, s11, s12
   1fa80:	vcvt.f32.s32	s14, s13
   1fa84:	vdiv.f32	s15, s15, s12
   1fa88:	vdiv.f32	s4, s4, s14
   1fa8c:	vdiv.f32	s5, s5, s14
   1fa90:	vdiv.f32	s6, s6, s14
   1fa94:	ble	1faf0 <load_wavefront@@Base+0x7d8>
   1fa98:	ldr	r3, [sp, #248]	; 0xf8
   1fa9c:	mov	r2, #0
   1faa0:	vmov.f32	s14, s1
   1faa4:	vmov.f32	s13, s2
   1faa8:	vmov.f32	s12, s3
   1faac:	b	1fac0 <load_wavefront@@Base+0x7a8>
   1fab0:	vldr	s12, [r3, #12]
   1fab4:	vldr	s13, [r3, #16]
   1fab8:	vldr	s14, [r3, #20]
   1fabc:	add	r3, r3, #12
   1fac0:	vsub.f32	s12, s12, s4
   1fac4:	add	r2, r2, #1
   1fac8:	cmp	r2, r5
   1facc:	vsub.f32	s13, s13, s5
   1fad0:	vsub.f32	s14, s14, s6
   1fad4:	vmul.f32	s12, s15, s12
   1fad8:	vmul.f32	s13, s15, s13
   1fadc:	vstr	s12, [r3]
   1fae0:	vmul.f32	s14, s15, s14
   1fae4:	vstr	s13, [r3, #4]
   1fae8:	vstr	s14, [r3, #8]
   1faec:	bne	1fab0 <load_wavefront@@Base+0x798>
   1faf0:	cmp	r7, #0
   1faf4:	ble	1fb6c <load_wavefront@@Base+0x854>
   1faf8:	vmov.f32	s19, #112	; 0x3f800000  1.0
   1fafc:	movw	r8, #33960	; 0x84a8
   1fb00:	add	r5, fp, #1998848	; 0x1e8000
   1fb04:	movt	r8, #30
   1fb08:	add	r8, fp, r8
   1fb0c:	add	r5, r5, #1184	; 0x4a0
   1fb10:	mov	r9, #0
   1fb14:	vldr	s17, [r5]
   1fb18:	vldr	s18, [r8, #-12]
   1fb1c:	vldr	s16, [r5, #4]
   1fb20:	vmul.f32	s15, s17, s17
   1fb24:	vmla.f32	s15, s18, s18
   1fb28:	vmla.f32	s15, s16, s16
   1fb2c:	vsqrt.f32	s0, s15
   1fb30:	vcmp.f32	s0, s0
   1fb34:	vmrs	APSR_nzcv, fpscr
   1fb38:	bne	207b4 <load_wavefront@@Base+0x149c>
   1fb3c:	vdiv.f32	s0, s19, s0
   1fb40:	add	r9, r9, #1
   1fb44:	cmp	r9, r7
   1fb48:	add	r8, r8, #12
   1fb4c:	add	r5, r5, #12
   1fb50:	vmul.f32	s18, s18, s0
   1fb54:	vmul.f32	s17, s17, s0
   1fb58:	vstr	s18, [r8, #-24]	; 0xffffffe8
   1fb5c:	vmul.f32	s0, s16, s0
   1fb60:	vstr	s17, [r5, #-12]
   1fb64:	vstr	s0, [r5, #-8]
   1fb68:	bne	1fb14 <load_wavefront@@Base+0x7fc>
   1fb6c:	ldr	r2, [sp, #236]	; 0xec
   1fb70:	mov	r0, sl
   1fb74:	ldr	r3, [sp, #260]	; 0x104
   1fb78:	ldr	r1, [sp, #244]	; 0xf4
   1fb7c:	str	r2, [fp, #20]
   1fb80:	str	r3, [fp, #24]
   1fb84:	ldr	r2, [sp, #264]	; 0x108
   1fb88:	str	r4, [fp, #12]
   1fb8c:	str	r6, [fp, #16]
   1fb90:	bl	14678 <memcpy@plt>
   1fb94:	ldr	r3, [fp, #12]
   1fb98:	ldr	r0, [fp, #16]
   1fb9c:	ldr	r2, [fp, #20]
   1fba0:	add	r0, r0, r3
   1fba4:	ldr	r1, [sp, #252]	; 0xfc
   1fba8:	add	r0, fp, r0, lsl #2
   1fbac:	lsl	r2, r2, #2
   1fbb0:	add	r0, r0, #28
   1fbb4:	bl	14678 <memcpy@plt>
   1fbb8:	ldr	r2, [fp, #12]
   1fbbc:	ldr	r0, [fp, #16]
   1fbc0:	ldr	r3, [fp, #20]
   1fbc4:	add	r0, r0, r2
   1fbc8:	ldr	r2, [fp, #24]
   1fbcc:	add	r0, r0, r3
   1fbd0:	ldr	r1, [sp, #240]	; 0xf0
   1fbd4:	add	r0, fp, r0, lsl #2
   1fbd8:	lsl	r2, r2, #1
   1fbdc:	add	r0, r0, #28
   1fbe0:	bl	14678 <memcpy@plt>
   1fbe4:	b	1f460 <load_wavefront@@Base+0x148>
   1fbe8:	mov	r0, r5
   1fbec:	mov	r1, fp
   1fbf0:	bl	1f0f8 <load_tga@@Base+0x280>
   1fbf4:	cmp	r0, #0
   1fbf8:	bne	1f3e8 <load_wavefront@@Base+0xd0>
   1fbfc:	add	r5, fp, #28
   1fc00:	str	r5, [sp, #248]	; 0xf8
   1fc04:	b	1f460 <load_wavefront@@Base+0x148>
   1fc08:	cmp	r2, #13
   1fc0c:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fc10:	bls	1fe6c <load_wavefront@@Base+0xb54>
   1fc14:	cmp	r2, #35	; 0x23
   1fc18:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fc1c:	cmp	r2, #102	; 0x66
   1fc20:	bne	1fe7c <load_wavefront@@Base+0xb64>
   1fc24:	ldr	r6, [sp, #236]	; 0xec
   1fc28:	mov	r0, sl
   1fc2c:	ldr	r1, [pc, #364]	; 1fda0 <load_wavefront@@Base+0xa88>
   1fc30:	add	r3, r6, #8
   1fc34:	str	r3, [sp]
   1fc38:	mov	r2, r6
   1fc3c:	add	r3, r6, #4
   1fc40:	add	r1, pc, r1
   1fc44:	bl	14648 <sscanf@plt>
   1fc48:	cmp	r0, #3
   1fc4c:	addeq	r6, r6, #12
   1fc50:	streq	r6, [sp, #236]	; 0xec
   1fc54:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fc58:	ldr	r2, [sp, #260]	; 0x104
   1fc5c:	mov	r0, sl
   1fc60:	ldr	r1, [pc, #316]	; 1fda4 <load_wavefront@@Base+0xa8c>
   1fc64:	add	r3, r2, #4
   1fc68:	add	r1, pc, r1
   1fc6c:	bl	14648 <sscanf@plt>
   1fc70:	cmp	r0, #2
   1fc74:	beq	1ff30 <load_wavefront@@Base+0xc18>
   1fc78:	ldr	ip, [sp, #268]	; 0x10c
   1fc7c:	mov	r0, sl
   1fc80:	ldr	r1, [pc, #288]	; 1fda8 <load_wavefront@@Base+0xa90>
   1fc84:	add	r3, ip, #8
   1fc88:	str	r3, [sp]
   1fc8c:	mov	r2, ip
   1fc90:	add	r1, pc, r1
   1fc94:	add	r3, ip, #4
   1fc98:	bl	14648 <sscanf@plt>
   1fc9c:	cmp	r0, #3
   1fca0:	bne	1ff6c <load_wavefront@@Base+0xc54>
   1fca4:	ldr	r6, [sp, #268]	; 0x10c
   1fca8:	add	r6, r6, #12
   1fcac:	str	r6, [sp, #268]	; 0x10c
   1fcb0:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1fcb4:	cmp	r2, #109	; 0x6d
   1fcb8:	bne	1ff1c <load_wavefront@@Base+0xc04>
   1fcbc:	ldr	r1, [pc, #232]	; 1fdac <load_wavefront@@Base+0xa94>
   1fcc0:	mov	r0, sl
   1fcc4:	mov	r2, #6
   1fcc8:	add	r1, pc, r1
   1fccc:	bl	14978 <strncmp@plt>
   1fcd0:	cmp	r0, #0
   1fcd4:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fcd8:	ldr	r3, [pc, #208]	; 1fdb0 <load_wavefront@@Base+0xa98>
   1fcdc:	mov	r2, #246	; 0xf6
   1fce0:	ldr	r1, [pc, #204]	; 1fdb4 <load_wavefront@@Base+0xa9c>
   1fce4:	add	r3, pc, r3
   1fce8:	ldr	r0, [pc, #200]	; 1fdb8 <load_wavefront@@Base+0xaa0>
   1fcec:	str	r3, [sp]
   1fcf0:	add	r1, pc, r1
   1fcf4:	ldr	r3, [pc, #192]	; 1fdbc <load_wavefront@@Base+0xaa4>
   1fcf8:	add	r0, pc, r0
   1fcfc:	add	r1, r1, #12
   1fd00:	add	r3, pc, r3
   1fd04:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1fd08:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1fd0c:	ldr	r1, [pc, #172]	; 1fdc0 <load_wavefront@@Base+0xaa8>
   1fd10:	mov	r0, sl
   1fd14:	mov	r2, #2
   1fd18:	add	r1, pc, r1
   1fd1c:	bl	14978 <strncmp@plt>
   1fd20:	cmp	r0, #0
   1fd24:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fd28:	ldr	ip, [pc, #148]	; 1fdc4 <load_wavefront@@Base+0xaac>
   1fd2c:	mov	r2, #260	; 0x104
   1fd30:	ldr	r0, [pc, #144]	; 1fdc8 <load_wavefront@@Base+0xab0>
   1fd34:	ldr	r3, [pc, #144]	; 1fdcc <load_wavefront@@Base+0xab4>
   1fd38:	add	ip, pc, ip
   1fd3c:	ldr	r1, [sp, #284]	; 0x11c
   1fd40:	add	r0, pc, r0
   1fd44:	add	r3, pc, r3
   1fd48:	str	ip, [sp]
   1fd4c:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1fd50:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1fd54:	andeq	r0, r0, r0
   1fd58:	ldrdeq	sl, [r1], -r8
   1fd5c:	andeq	r0, r0, r4, lsr r3
   1fd60:	andeq	r7, r0, r0, ror #10
   1fd64:	andeq	r9, r0, ip, asr ip
   1fd68:	andeq	r9, r0, r8, lsl #24
   1fd6c:	muleq	r0, r8, r1
   1fd70:	andeq	r7, r0, r0, lsl #4
   1fd74:	andeq	r7, r0, r8, asr #7
   1fd78:	andeq	r3, r0, r4, lsr fp
   1fd7c:	andeq	r9, r0, ip, lsr #32
   1fd80:	andeq	r7, r0, r0, lsl #1
   1fd84:	andeq	r7, r0, r8, asr #4
   1fd88:			; <UNDEFINED> instruction: 0x000039b4
   1fd8c:			; <UNDEFINED> instruction: 0x00004fb8
   1fd90:	andeq	r6, r0, ip, asr #31
   1fd94:	andeq	r6, r0, r4, asr #31
   1fd98:			; <UNDEFINED> instruction: 0x00006fb8
   1fd9c:	andeq	r7, r0, ip, asr #20
   1fda0:	andeq	r8, r0, ip, asr #15
   1fda4:			; <UNDEFINED> instruction: 0x000087b0
   1fda8:	muleq	r0, r4, r7
   1fdac:	andeq	r6, r0, r8, asr ip
   1fdb0:	andeq	r6, r0, r4, asr #24
   1fdb4:	andeq	r6, r0, r4, ror #19
   1fdb8:	andeq	r6, r0, ip, lsr #23
   1fdbc:	andeq	r3, r0, r8, lsl r3
   1fdc0:	andeq	r7, r0, r4, asr r5
   1fdc4:	andeq	r7, r0, r8, lsr r5
   1fdc8:	andeq	r6, r0, r4, ror #22
   1fdcc:	ldrdeq	r3, [r0], -r4
   1fdd0:	andeq	r7, r0, r4, lsl sp
   1fdd4:	strdeq	r7, [r0], -ip
   1fdd8:	andeq	r6, r0, r4, lsl #17
   1fddc:	andeq	r6, r0, ip, asr #20
   1fde0:			; <UNDEFINED> instruction: 0x000031b8
   1fde4:	andeq	r8, r0, r4, asr #15
   1fde8:	andeq	r4, r0, r4, ror #8
   1fdec:	strdeq	r6, [r0], -ip
   1fdf0:	andeq	r3, r0, r8, ror #2
   1fdf4:	andeq	r3, r0, r8, lsr r1
   1fdf8:	ldrdeq	r6, [r0], -r8
   1fdfc:	andeq	r4, r0, r8, lsl #8
   1fe00:	muleq	r0, ip, r9
   1fe04:	strdeq	r8, [r0], -r0
   1fe08:	andeq	r8, r0, r0, asr #2
   1fe0c:	andeq	r7, r0, r0, lsl #31
   1fe10:	andeq	r2, r0, r4, lsr #17
   1fe14:	andeq	r3, r0, ip, ror fp
   1fe18:	andeq	r6, r0, r0, lsl r1
   1fe1c:	ldr	r1, [pc, #-84]	; 1fdd0 <load_wavefront@@Base+0xab8>
   1fe20:	mov	r0, sl
   1fe24:	mov	r2, #2
   1fe28:	add	r1, pc, r1
   1fe2c:	bl	14978 <strncmp@plt>
   1fe30:	cmp	r0, #0
   1fe34:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fe38:	ldr	r3, [pc, #-108]	; 1fdd4 <load_wavefront@@Base+0xabc>
   1fe3c:	movw	r2, #261	; 0x105
   1fe40:	ldr	r1, [pc, #-112]	; 1fdd8 <load_wavefront@@Base+0xac0>
   1fe44:	add	r3, pc, r3
   1fe48:	ldr	r0, [pc, #-116]	; 1fddc <load_wavefront@@Base+0xac4>
   1fe4c:	str	r3, [sp]
   1fe50:	add	r1, pc, r1
   1fe54:	ldr	r3, [pc, #-124]	; 1fde0 <load_wavefront@@Base+0xac8>
   1fe58:	add	r0, pc, r0
   1fe5c:	add	r1, r1, #12
   1fe60:	add	r3, pc, r3
   1fe64:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1fe68:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1fe6c:	cmp	r2, #0
   1fe70:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fe74:	cmp	r2, #10
   1fe78:	beq	1f8d0 <load_wavefront@@Base+0x5b8>
   1fe7c:	ldr	r1, [pc, #-160]	; 1fde4 <load_wavefront@@Base+0xacc>
   1fe80:	mov	r0, #1
   1fe84:	ldrb	r3, [sp, #657]	; 0x291
   1fe88:	str	sl, [sp]
   1fe8c:	add	r1, pc, r1
   1fe90:	bl	1436c <__printf_chk@plt>
   1fe94:	ldr	ip, [pc, #-180]	; 1fde8 <load_wavefront@@Base+0xad0>
   1fe98:	ldr	r0, [pc, #-180]	; 1fdec <load_wavefront@@Base+0xad4>
   1fe9c:	movw	r2, #311	; 0x137
   1fea0:	ldr	r3, [pc, #-184]	; 1fdf0 <load_wavefront@@Base+0xad8>
   1fea4:	add	ip, pc, ip
   1fea8:	add	r0, pc, r0
   1feac:	ldr	r1, [sp, #276]	; 0x114
   1feb0:	add	r3, pc, r3
   1feb4:	str	ip, [sp]
   1feb8:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1febc:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1fec0:	cmp	r2, #118	; 0x76
   1fec4:	beq	1fc24 <load_wavefront@@Base+0x90c>
   1fec8:	b	1fe7c <load_wavefront@@Base+0xb64>
   1fecc:	mov	r1, sl
   1fed0:	b	1f788 <load_wavefront@@Base+0x470>
   1fed4:	ldr	r6, [pc, #-232]	; 1fdf4 <load_wavefront@@Base+0xadc>
   1fed8:	mov	r2, sl
   1fedc:	mov	r0, #1
   1fee0:	add	r6, pc, r6
   1fee4:	mov	r1, r6
   1fee8:	bl	1436c <__printf_chk@plt>
   1feec:	ldr	r1, [pc, #-252]	; 1fdf8 <load_wavefront@@Base+0xae0>
   1fef0:	ldr	ip, [pc, #-252]	; 1fdfc <load_wavefront@@Base+0xae4>
   1fef4:	mov	r3, r6
   1fef8:	ldr	r0, [pc, #-256]	; 1fe00 <load_wavefront@@Base+0xae8>
   1fefc:	add	r1, pc, r1
   1ff00:	add	ip, pc, ip
   1ff04:	movw	r2, #258	; 0x102
   1ff08:	add	r0, pc, r0
   1ff0c:	str	ip, [sp]
   1ff10:	add	r1, r1, #12
   1ff14:	bl	14924 <vcos_pthreads_logging_assert@plt>
   1ff18:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1ff1c:	cmp	r2, #111	; 0x6f
   1ff20:	bne	1fe7c <load_wavefront@@Base+0xb64>
   1ff24:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1ff28:	mov	r6, #0
   1ff2c:	b	1f628 <load_wavefront@@Base+0x310>
   1ff30:	ldr	r8, [sp, #260]	; 0x104
   1ff34:	add	r8, r8, #8
   1ff38:	str	r8, [sp, #260]	; 0x104
   1ff3c:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   1ff40:	ldr	r6, [sp, #264]	; 0x108
   1ff44:	movw	r2, #21846	; 0x5556
   1ff48:	ldr	ip, [sp, #240]	; 0xf0
   1ff4c:	movt	r2, #21845	; 0x5555
   1ff50:	rsb	r3, ip, r6
   1ff54:	asr	r1, r3, #1
   1ff58:	smull	lr, r2, r2, r1
   1ff5c:	sub	r2, r2, r3, asr #31
   1ff60:	lsl	r3, r8, #1
   1ff64:	strh	r2, [fp, r3]
   1ff68:	b	1f8c8 <load_wavefront@@Base+0x5b0>
   1ff6c:	add	r8, sp, #416	; 0x1a0
   1ff70:	add	ip, sp, #420	; 0x1a4
   1ff74:	add	r6, r8, #2
   1ff78:	str	r6, [sp, #272]	; 0x110
   1ff7c:	add	r6, r8, #6
   1ff80:	str	r6, [sp, #280]	; 0x118
   1ff84:	add	r6, r8, #10
   1ff88:	str	r6, [sp, #296]	; 0x128
   1ff8c:	ldr	r6, [sp, #280]	; 0x118
   1ff90:	add	lr, sp, #424	; 0x1a8
   1ff94:	add	r0, sp, #484	; 0x1e4
   1ff98:	mov	r2, r8
   1ff9c:	str	r6, [sp, #4]
   1ffa0:	ldr	r6, [sp, #296]	; 0x128
   1ffa4:	str	r6, [sp, #12]
   1ffa8:	add	r6, r8, #14
   1ffac:	str	r6, [sp, #304]	; 0x130
   1ffb0:	add	r6, r8, #18
   1ffb4:	str	r6, [sp, #312]	; 0x138
   1ffb8:	ldr	r6, [sp, #304]	; 0x130
   1ffbc:	str	r6, [sp, #20]
   1ffc0:	ldr	r6, [sp, #312]	; 0x138
   1ffc4:	str	r6, [sp, #28]
   1ffc8:	add	r6, r8, #22
   1ffcc:	str	r6, [sp, #320]	; 0x140
   1ffd0:	add	r6, r8, #26
   1ffd4:	str	r6, [sp, #328]	; 0x148
   1ffd8:	ldr	r6, [sp, #320]	; 0x140
   1ffdc:	str	r6, [sp, #36]	; 0x24
   1ffe0:	ldr	r6, [sp, #328]	; 0x148
   1ffe4:	str	r6, [sp, #44]	; 0x2c
   1ffe8:	add	r6, r8, #30
   1ffec:	str	r6, [sp, #336]	; 0x150
   1fff0:	add	r6, r8, #34	; 0x22
   1fff4:	str	r6, [sp, #344]	; 0x158
   1fff8:	ldr	r6, [sp, #336]	; 0x150
   1fffc:	str	r6, [sp, #52]	; 0x34
   20000:	ldr	r6, [sp, #344]	; 0x158
   20004:	str	r6, [sp, #60]	; 0x3c
   20008:	add	r6, r8, #38	; 0x26
   2000c:	str	r6, [sp, #352]	; 0x160
   20010:	add	r6, r8, #42	; 0x2a
   20014:	str	r6, [sp, #360]	; 0x168
   20018:	ldr	r6, [sp, #352]	; 0x160
   2001c:	str	r6, [sp, #68]	; 0x44
   20020:	ldr	r6, [sp, #360]	; 0x168
   20024:	str	r6, [sp, #76]	; 0x4c
   20028:	add	r6, r8, #46	; 0x2e
   2002c:	str	r6, [sp, #368]	; 0x170
   20030:	add	r6, r8, #50	; 0x32
   20034:	str	r6, [sp, #376]	; 0x178
   20038:	ldr	r6, [sp, #368]	; 0x170
   2003c:	str	r6, [sp, #84]	; 0x54
   20040:	ldr	r6, [sp, #376]	; 0x178
   20044:	str	ip, [sp]
   20048:	str	lr, [sp, #8]
   2004c:	add	lr, sp, #432	; 0x1b0
   20050:	str	r6, [sp, #92]	; 0x5c
   20054:	add	r6, r8, #54	; 0x36
   20058:	str	r6, [sp, #384]	; 0x180
   2005c:	add	r6, r8, #58	; 0x3a
   20060:	str	r6, [sp, #392]	; 0x188
   20064:	ldr	r6, [sp, #384]	; 0x180
   20068:	str	lr, [sp, #24]
   2006c:	add	lr, sp, #440	; 0x1b8
   20070:	str	lr, [sp, #40]	; 0x28
   20074:	add	lr, sp, #448	; 0x1c0
   20078:	str	r6, [sp, #100]	; 0x64
   2007c:	ldr	r6, [sp, #392]	; 0x188
   20080:	str	lr, [sp, #56]	; 0x38
   20084:	add	lr, sp, #456	; 0x1c8
   20088:	str	lr, [sp, #72]	; 0x48
   2008c:	add	lr, sp, #464	; 0x1d0
   20090:	str	r6, [sp, #108]	; 0x6c
   20094:	add	r6, r8, #66	; 0x42
   20098:	str	r6, [sp, #400]	; 0x190
   2009c:	add	r6, r8, #70	; 0x46
   200a0:	str	r6, [sp, #408]	; 0x198
   200a4:	ldr	r6, [sp, #400]	; 0x190
   200a8:	str	r6, [sp, #124]	; 0x7c
   200ac:	add	r6, sp, #424	; 0x1a8
   200b0:	str	r6, [sp, #292]	; 0x124
   200b4:	add	r6, sp, #428	; 0x1ac
   200b8:	str	r6, [sp, #300]	; 0x12c
   200bc:	str	r6, [sp, #16]
   200c0:	add	r6, sp, #432	; 0x1b0
   200c4:	str	r6, [sp, #308]	; 0x134
   200c8:	add	r6, sp, #436	; 0x1b4
   200cc:	str	r6, [sp, #316]	; 0x13c
   200d0:	str	r6, [sp, #32]
   200d4:	add	r6, sp, #440	; 0x1b8
   200d8:	str	r6, [sp, #324]	; 0x144
   200dc:	add	r6, sp, #444	; 0x1bc
   200e0:	str	r6, [sp, #332]	; 0x14c
   200e4:	str	r6, [sp, #48]	; 0x30
   200e8:	add	r6, sp, #448	; 0x1c0
   200ec:	str	r6, [sp, #340]	; 0x154
   200f0:	add	r6, sp, #452	; 0x1c4
   200f4:	str	r6, [sp, #348]	; 0x15c
   200f8:	str	r6, [sp, #64]	; 0x40
   200fc:	add	r6, sp, #456	; 0x1c8
   20100:	str	r6, [sp, #356]	; 0x164
   20104:	add	r6, sp, #460	; 0x1cc
   20108:	str	r6, [sp, #364]	; 0x16c
   2010c:	str	r6, [sp, #80]	; 0x50
   20110:	add	r6, sp, #464	; 0x1d0
   20114:	str	r6, [sp, #372]	; 0x174
   20118:	add	r6, sp, #468	; 0x1d4
   2011c:	ldr	r1, [sp, #408]	; 0x198
   20120:	str	r6, [sp, #380]	; 0x17c
   20124:	str	lr, [sp, #88]	; 0x58
   20128:	add	lr, sp, #472	; 0x1d8
   2012c:	str	r1, [sp, #132]	; 0x84
   20130:	ldr	r1, [pc, #-820]	; 1fe04 <load_wavefront@@Base+0xaec>
   20134:	str	r6, [sp, #96]	; 0x60
   20138:	add	r6, sp, #472	; 0x1d8
   2013c:	str	lr, [sp, #104]	; 0x68
   20140:	add	r1, pc, r1
   20144:	add	lr, sp, #488	; 0x1e8
   20148:	str	r6, [sp, #388]	; 0x184
   2014c:	str	r0, [sp, #404]	; 0x194
   20150:	add	r6, sp, #476	; 0x1dc
   20154:	str	r0, [sp, #128]	; 0x80
   20158:	mov	r0, sl
   2015c:	str	r6, [sp, #396]	; 0x18c
   20160:	str	r6, [sp, #112]	; 0x70
   20164:	add	r6, sp, #480	; 0x1e0
   20168:	ldr	r3, [sp, #272]	; 0x110
   2016c:	str	r6, [sp, #116]	; 0x74
   20170:	str	r6, [sp, #120]	; 0x78
   20174:	str	lr, [sp, #136]	; 0x88
   20178:	str	ip, [sp, #220]	; 0xdc
   2017c:	str	lr, [sp, #412]	; 0x19c
   20180:	bl	14648 <sscanf@plt>
   20184:	ldr	ip, [sp, #220]	; 0xdc
   20188:	cmp	r0, #5
   2018c:	ble	20298 <load_wavefront@@Base+0xf80>
   20190:	asr	r0, r0, #1
   20194:	movw	r2, #65036	; 0xfe0c
   20198:	str	r0, [sp, #272]	; 0x110
   2019c:	movt	r2, #65535	; 0xffff
   201a0:	add	r0, sp, #920	; 0x398
   201a4:	movw	r1, #65034	; 0xfe0a
   201a8:	movt	r1, #65535	; 0xffff
   201ac:	movw	ip, #65032	; 0xfe08
   201b0:	ldrh	r2, [r0, r2]
   201b4:	movt	ip, #65535	; 0xffff
   201b8:	ldrh	r1, [r0, r1]
   201bc:	movw	r3, #65038	; 0xfe0e
   201c0:	ldrh	ip, [r0, ip]
   201c4:	movt	r3, #65535	; 0xffff
   201c8:	uxth	r0, r2
   201cc:	add	r2, sp, #920	; 0x398
   201d0:	uxth	lr, r1
   201d4:	ldr	r1, [sp, #272]	; 0x110
   201d8:	ldrh	r3, [r2, r3]
   201dc:	uxth	r6, ip
   201e0:	ldr	r2, [sp, #264]	; 0x108
   201e4:	add	ip, sp, #408	; 0x198
   201e8:	add	ip, ip, r1, lsl #2
   201ec:	uxth	r1, r3
   201f0:	add	r3, r2, #12
   201f4:	mov	r2, r8
   201f8:	mov	r8, #0
   201fc:	strh	r0, [r3, #-6]
   20200:	add	r2, r2, #4
   20204:	ldrh	r0, [r2, #4]
   20208:	add	r3, r3, #18
   2020c:	strh	r1, [r3, #-20]	; 0xffffffec
   20210:	ldrh	r1, [r2, #6]
   20214:	cmp	r2, ip
   20218:	strh	r6, [r3, #-30]	; 0xffffffe2
   2021c:	strh	r8, [r3, #-28]	; 0xffffffe4
   20220:	strh	lr, [r3, #-26]	; 0xffffffe6
   20224:	strh	r8, [r3, #-22]	; 0xffffffea
   20228:	strh	r8, [r3, #-16]
   2022c:	strh	r0, [r3, #-18]	; 0xffffffee
   20230:	strh	r1, [r3, #-14]
   20234:	bne	201fc <load_wavefront@@Base+0xee4>
   20238:	ldr	r6, [sp, #272]	; 0x110
   2023c:	ldr	r8, [sp, #264]	; 0x108
   20240:	add	r3, r6, r6, lsl #3
   20244:	add	r3, r8, r3, lsl #1
   20248:	sub	r3, r3, #36	; 0x24
   2024c:	str	r3, [sp, #264]	; 0x108
   20250:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   20254:	ldr	sl, [sp, #248]	; 0xf8
   20258:	mov	r6, r4
   2025c:	str	r4, [sp, #260]	; 0x104
   20260:	mov	r7, r4
   20264:	str	r4, [sp, #236]	; 0xec
   20268:	mov	r5, r4
   2026c:	str	r4, [sp, #264]	; 0x108
   20270:	b	1f984 <load_wavefront@@Base+0x66c>
   20274:	vmov.f32	s11, s1
   20278:	vmov.f32	s5, s6
   2027c:	vmov.f32	s4, s6
   20280:	vmov.f32	s9, s2
   20284:	vmov.f32	s8, s3
   20288:	vmov.f32	s12, s1
   2028c:	vmov.f32	s10, s2
   20290:	vmov.f32	s7, s3
   20294:	b	1fa60 <load_wavefront@@Base+0x748>
   20298:	ldr	lr, [sp, #280]	; 0x118
   2029c:	add	r1, sp, #424	; 0x1a8
   202a0:	str	ip, [sp]
   202a4:	mov	r0, sl
   202a8:	str	r1, [sp, #8]
   202ac:	add	r1, sp, #428	; 0x1ac
   202b0:	str	lr, [sp, #4]
   202b4:	mov	r2, r8
   202b8:	ldr	lr, [sp, #296]	; 0x128
   202bc:	ldr	r3, [sp, #272]	; 0x110
   202c0:	str	r1, [sp, #16]
   202c4:	add	r1, sp, #432	; 0x1b0
   202c8:	str	lr, [sp, #12]
   202cc:	ldr	lr, [sp, #304]	; 0x130
   202d0:	str	r1, [sp, #24]
   202d4:	add	r1, sp, #436	; 0x1b4
   202d8:	str	r1, [sp, #32]
   202dc:	add	r1, sp, #440	; 0x1b8
   202e0:	str	lr, [sp, #20]
   202e4:	ldr	lr, [sp, #312]	; 0x138
   202e8:	str	r1, [sp, #40]	; 0x28
   202ec:	add	r1, sp, #444	; 0x1bc
   202f0:	str	r1, [sp, #48]	; 0x30
   202f4:	add	r1, sp, #448	; 0x1c0
   202f8:	str	lr, [sp, #28]
   202fc:	ldr	lr, [sp, #320]	; 0x140
   20300:	str	r1, [sp, #56]	; 0x38
   20304:	add	r1, sp, #452	; 0x1c4
   20308:	str	r1, [sp, #64]	; 0x40
   2030c:	add	r1, sp, #456	; 0x1c8
   20310:	str	lr, [sp, #36]	; 0x24
   20314:	ldr	lr, [sp, #328]	; 0x148
   20318:	str	r1, [sp, #72]	; 0x48
   2031c:	add	r1, sp, #460	; 0x1cc
   20320:	str	r1, [sp, #80]	; 0x50
   20324:	add	r1, sp, #464	; 0x1d0
   20328:	str	lr, [sp, #44]	; 0x2c
   2032c:	ldr	lr, [sp, #336]	; 0x150
   20330:	str	lr, [sp, #52]	; 0x34
   20334:	ldr	lr, [sp, #344]	; 0x158
   20338:	str	lr, [sp, #60]	; 0x3c
   2033c:	ldr	lr, [sp, #352]	; 0x160
   20340:	str	lr, [sp, #68]	; 0x44
   20344:	ldr	lr, [sp, #360]	; 0x168
   20348:	str	lr, [sp, #76]	; 0x4c
   2034c:	ldr	lr, [sp, #368]	; 0x170
   20350:	str	lr, [sp, #84]	; 0x54
   20354:	ldr	lr, [sp, #376]	; 0x178
   20358:	str	r1, [sp, #88]	; 0x58
   2035c:	add	r1, sp, #468	; 0x1d4
   20360:	str	r1, [sp, #96]	; 0x60
   20364:	add	r1, sp, #472	; 0x1d8
   20368:	str	lr, [sp, #92]	; 0x5c
   2036c:	ldr	lr, [sp, #384]	; 0x180
   20370:	str	r1, [sp, #104]	; 0x68
   20374:	add	r1, sp, #476	; 0x1dc
   20378:	str	r1, [sp, #112]	; 0x70
   2037c:	add	r1, sp, #484	; 0x1e4
   20380:	str	lr, [sp, #100]	; 0x64
   20384:	ldr	lr, [sp, #392]	; 0x188
   20388:	str	r1, [sp, #128]	; 0x80
   2038c:	ldr	r1, [pc, #-1420]	; 1fe08 <load_wavefront@@Base+0xaf0>
   20390:	str	lr, [sp, #108]	; 0x6c
   20394:	ldr	lr, [sp, #400]	; 0x190
   20398:	add	r1, pc, r1
   2039c:	str	r6, [sp, #116]	; 0x74
   203a0:	str	r6, [sp, #120]	; 0x78
   203a4:	str	lr, [sp, #124]	; 0x7c
   203a8:	ldr	lr, [sp, #408]	; 0x198
   203ac:	str	ip, [sp, #220]	; 0xdc
   203b0:	str	lr, [sp, #132]	; 0x84
   203b4:	add	lr, sp, #488	; 0x1e8
   203b8:	str	lr, [sp, #136]	; 0x88
   203bc:	bl	14648 <sscanf@plt>
   203c0:	ldr	ip, [sp, #220]	; 0xdc
   203c4:	cmp	r0, #5
   203c8:	ble	20494 <load_wavefront@@Base+0x117c>
   203cc:	asr	r0, r0, #1
   203d0:	movw	r2, #65036	; 0xfe0c
   203d4:	str	r0, [sp, #272]	; 0x110
   203d8:	movt	r2, #65535	; 0xffff
   203dc:	add	r0, sp, #920	; 0x398
   203e0:	movw	r1, #65034	; 0xfe0a
   203e4:	movt	r1, #65535	; 0xffff
   203e8:	movw	ip, #65032	; 0xfe08
   203ec:	ldrh	r2, [r0, r2]
   203f0:	movt	ip, #65535	; 0xffff
   203f4:	ldrh	r1, [r0, r1]
   203f8:	movw	r3, #65038	; 0xfe0e
   203fc:	ldrh	ip, [r0, ip]
   20400:	movt	r3, #65535	; 0xffff
   20404:	uxth	r0, r2
   20408:	add	r2, sp, #920	; 0x398
   2040c:	uxth	lr, r1
   20410:	ldr	r1, [sp, #272]	; 0x110
   20414:	ldrh	r3, [r2, r3]
   20418:	uxth	r6, ip
   2041c:	ldr	r2, [sp, #264]	; 0x108
   20420:	add	ip, sp, #408	; 0x198
   20424:	add	ip, ip, r1, lsl #2
   20428:	uxth	r1, r3
   2042c:	add	r3, r2, #12
   20430:	mov	r2, r8
   20434:	mov	r8, #0
   20438:	strh	r0, [r3, #-6]
   2043c:	add	r2, r2, #4
   20440:	ldrh	r0, [r2, #4]
   20444:	add	r3, r3, #18
   20448:	strh	r1, [r3, #-22]	; 0xffffffea
   2044c:	ldrh	r1, [r2, #6]
   20450:	cmp	r2, ip
   20454:	strh	r6, [r3, #-30]	; 0xffffffe2
   20458:	strh	lr, [r3, #-28]	; 0xffffffe4
   2045c:	strh	r8, [r3, #-26]	; 0xffffffe6
   20460:	strh	r8, [r3, #-20]	; 0xffffffec
   20464:	strh	r8, [r3, #-14]
   20468:	strh	r0, [r3, #-18]	; 0xffffffee
   2046c:	strh	r1, [r3, #-16]
   20470:	bne	20438 <load_wavefront@@Base+0x1120>
   20474:	b	20238 <load_wavefront@@Base+0xf20>
   20478:	ldr	ip, [sp, #232]	; 0xe8
   2047c:	mla	r8, r6, r8, ip
   20480:	mla	ip, r6, r3, ip
   20484:	add	r6, r8, #16
   20488:	add	ip, ip, #16
   2048c:	b	1f8b0 <load_wavefront@@Base+0x598>
   20490:	bl	14804 <__stack_chk_fail@plt>
   20494:	ldr	r2, [sp, #304]	; 0x130
   20498:	add	lr, sp, #424	; 0x1a8
   2049c:	ldr	r0, [sp, #296]	; 0x128
   204a0:	add	r1, sp, #428	; 0x1ac
   204a4:	str	ip, [sp]
   204a8:	str	r2, [sp, #20]
   204ac:	ldr	r2, [sp, #312]	; 0x138
   204b0:	ldr	ip, [sp, #280]	; 0x118
   204b4:	ldr	r3, [sp, #272]	; 0x110
   204b8:	str	r2, [sp, #28]
   204bc:	ldr	r2, [sp, #320]	; 0x140
   204c0:	str	ip, [sp, #4]
   204c4:	add	ip, r8, #74	; 0x4a
   204c8:	str	lr, [sp, #8]
   204cc:	add	lr, r8, #78	; 0x4e
   204d0:	str	r2, [sp, #36]	; 0x24
   204d4:	ldr	r2, [sp, #328]	; 0x148
   204d8:	str	r0, [sp, #12]
   204dc:	add	r0, r8, #82	; 0x52
   204e0:	str	r1, [sp, #16]
   204e4:	add	r1, sp, #432	; 0x1b0
   204e8:	str	r2, [sp, #44]	; 0x2c
   204ec:	ldr	r2, [sp, #336]	; 0x150
   204f0:	str	r0, [sp, #156]	; 0x9c
   204f4:	add	r0, r8, #86	; 0x56
   204f8:	str	r1, [sp, #24]
   204fc:	add	r1, sp, #436	; 0x1b4
   20500:	str	r2, [sp, #52]	; 0x34
   20504:	ldr	r2, [sp, #344]	; 0x158
   20508:	str	r0, [sp, #164]	; 0xa4
   2050c:	add	r0, r8, #90	; 0x5a
   20510:	str	r1, [sp, #32]
   20514:	add	r1, sp, #440	; 0x1b8
   20518:	str	r2, [sp, #60]	; 0x3c
   2051c:	ldr	r2, [sp, #352]	; 0x160
   20520:	str	r0, [sp, #172]	; 0xac
   20524:	add	r0, r8, #94	; 0x5e
   20528:	str	r1, [sp, #40]	; 0x28
   2052c:	add	r1, sp, #444	; 0x1bc
   20530:	str	r0, [sp, #180]	; 0xb4
   20534:	add	r0, r8, #98	; 0x62
   20538:	str	r1, [sp, #48]	; 0x30
   2053c:	add	r1, sp, #448	; 0x1c0
   20540:	str	r0, [sp, #188]	; 0xbc
   20544:	add	r0, r8, #102	; 0x66
   20548:	str	r1, [sp, #56]	; 0x38
   2054c:	add	r1, sp, #452	; 0x1c4
   20550:	str	r0, [sp, #196]	; 0xc4
   20554:	add	r0, r8, #106	; 0x6a
   20558:	str	r1, [sp, #64]	; 0x40
   2055c:	add	r1, sp, #456	; 0x1c8
   20560:	str	r2, [sp, #68]	; 0x44
   20564:	str	r1, [sp, #72]	; 0x48
   20568:	add	r1, sp, #460	; 0x1cc
   2056c:	str	r1, [sp, #80]	; 0x50
   20570:	ldr	r1, [sp, #368]	; 0x170
   20574:	str	r6, [sp, #116]	; 0x74
   20578:	str	r6, [sp, #120]	; 0x78
   2057c:	str	r1, [sp, #84]	; 0x54
   20580:	add	r1, sp, #464	; 0x1d0
   20584:	str	r1, [sp, #88]	; 0x58
   20588:	ldr	r1, [sp, #376]	; 0x178
   2058c:	ldr	r6, [sp, #400]	; 0x190
   20590:	ldr	r2, [sp, #360]	; 0x168
   20594:	str	r1, [sp, #92]	; 0x5c
   20598:	add	r1, sp, #468	; 0x1d4
   2059c:	str	r1, [sp, #96]	; 0x60
   205a0:	ldr	r1, [sp, #384]	; 0x180
   205a4:	str	r6, [sp, #124]	; 0x7c
   205a8:	ldr	r6, [sp, #408]	; 0x198
   205ac:	str	r1, [sp, #100]	; 0x64
   205b0:	add	r1, sp, #472	; 0x1d8
   205b4:	str	r1, [sp, #104]	; 0x68
   205b8:	ldr	r1, [sp, #392]	; 0x188
   205bc:	str	r0, [sp, #204]	; 0xcc
   205c0:	mov	r0, sl
   205c4:	str	r2, [sp, #76]	; 0x4c
   205c8:	mov	r2, r8
   205cc:	str	r1, [sp, #108]	; 0x6c
   205d0:	add	r1, sp, #476	; 0x1dc
   205d4:	str	r1, [sp, #112]	; 0x70
   205d8:	add	r1, sp, #484	; 0x1e4
   205dc:	str	r1, [sp, #128]	; 0x80
   205e0:	ldr	r1, [pc, #-2012]	; 1fe0c <load_wavefront@@Base+0xaf4>
   205e4:	str	r6, [sp, #132]	; 0x84
   205e8:	add	r6, sp, #488	; 0x1e8
   205ec:	str	ip, [sp, #140]	; 0x8c
   205f0:	add	r1, pc, r1
   205f4:	add	ip, sp, #492	; 0x1ec
   205f8:	str	lr, [sp, #148]	; 0x94
   205fc:	str	ip, [sp, #144]	; 0x90
   20600:	add	ip, sp, #496	; 0x1f0
   20604:	str	r6, [sp, #136]	; 0x88
   20608:	str	ip, [sp, #152]	; 0x98
   2060c:	add	ip, sp, #500	; 0x1f4
   20610:	str	ip, [sp, #160]	; 0xa0
   20614:	add	ip, sp, #504	; 0x1f8
   20618:	str	ip, [sp, #168]	; 0xa8
   2061c:	add	ip, sp, #508	; 0x1fc
   20620:	str	ip, [sp, #176]	; 0xb0
   20624:	add	ip, sp, #512	; 0x200
   20628:	str	ip, [sp, #184]	; 0xb8
   2062c:	add	ip, sp, #516	; 0x204
   20630:	str	ip, [sp, #192]	; 0xc0
   20634:	add	ip, sp, #520	; 0x208
   20638:	str	ip, [sp, #200]	; 0xc8
   2063c:	add	ip, sp, #524	; 0x20c
   20640:	str	ip, [sp, #208]	; 0xd0
   20644:	bl	14648 <sscanf@plt>
   20648:	cmp	r0, #8
   2064c:	str	r0, [sp, #280]	; 0x118
   20650:	ble	20768 <load_wavefront@@Base+0x1450>
   20654:	movw	r3, #21846	; 0x5556
   20658:	movt	r3, #21845	; 0x5555
   2065c:	movw	r6, #65032	; 0xfe08
   20660:	movt	r6, #65535	; 0xffff
   20664:	smull	r0, lr, r3, r0
   20668:	ldr	r0, [sp, #280]	; 0x118
   2066c:	movw	ip, #65034	; 0xfe0a
   20670:	movt	ip, #65535	; 0xffff
   20674:	str	ip, [sp, #292]	; 0x124
   20678:	movw	r1, #65038	; 0xfe0e
   2067c:	movw	ip, #65036	; 0xfe0c
   20680:	movt	r1, #65535	; 0xffff
   20684:	movt	ip, #65535	; 0xffff
   20688:	movw	r2, #65040	; 0xfe10
   2068c:	sub	lr, lr, r0, asr #31
   20690:	str	lr, [sp, #272]	; 0x110
   20694:	add	lr, sp, #920	; 0x398
   20698:	ldr	r0, [sp, #272]	; 0x110
   2069c:	movt	r2, #65535	; 0xffff
   206a0:	movw	r3, #65042	; 0xfe12
   206a4:	ldrh	r6, [lr, r6]
   206a8:	movt	r3, #65535	; 0xffff
   206ac:	ldrh	ip, [lr, ip]
   206b0:	ldrh	r1, [lr, r1]
   206b4:	uxth	r6, r6
   206b8:	str	r6, [sp, #296]	; 0x128
   206bc:	add	r6, r0, r0, lsl #1
   206c0:	ldr	r0, [sp, #292]	; 0x124
   206c4:	uxth	r1, r1
   206c8:	uxth	ip, ip
   206cc:	str	ip, [sp, #292]	; 0x124
   206d0:	mov	ip, r8
   206d4:	ldrh	r0, [lr, r0]
   206d8:	add	lr, sp, #404	; 0x194
   206dc:	add	lr, lr, r6, lsl #1
   206e0:	add	r6, sp, #920	; 0x398
   206e4:	ldrh	r2, [r6, r2]
   206e8:	uxth	r0, r0
   206ec:	ldrh	r3, [r6, r3]
   206f0:	str	r0, [sp, #280]	; 0x118
   206f4:	ldr	r6, [sp, #296]	; 0x128
   206f8:	uxth	r0, r2
   206fc:	ldr	r2, [sp, #264]	; 0x108
   20700:	uxth	r3, r3
   20704:	ldr	r8, [sp, #280]	; 0x118
   20708:	add	ip, ip, #6
   2070c:	strh	r1, [r2, #6]
   20710:	add	r2, r2, #18
   20714:	ldrh	r1, [ip, #6]
   20718:	strh	r0, [r2, #-10]
   2071c:	strh	r3, [r2, #-8]
   20720:	ldrh	r0, [ip, #8]
   20724:	ldrh	r3, [ip, #10]
   20728:	cmp	ip, lr
   2072c:	strh	r8, [r2, #-16]
   20730:	ldr	r8, [sp, #292]	; 0x124
   20734:	strh	r6, [r2, #-18]	; 0xffffffee
   20738:	strh	r1, [r2, #-6]
   2073c:	strh	r8, [r2, #-14]
   20740:	strh	r0, [r2, #-4]
   20744:	strh	r3, [r2, #-2]
   20748:	bne	20704 <load_wavefront@@Base+0x13ec>
   2074c:	ldr	ip, [sp, #272]	; 0x110
   20750:	ldr	r6, [sp, #264]	; 0x108
   20754:	add	r8, ip, ip, lsl #3
   20758:	add	r3, r6, r8, lsl #1
   2075c:	sub	r3, r3, #36	; 0x24
   20760:	str	r3, [sp, #264]	; 0x108
   20764:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   20768:	ldr	r6, [pc, #-2400]	; 1fe10 <load_wavefront@@Base+0xaf8>
   2076c:	mov	r2, sl
   20770:	mov	r0, #1
   20774:	add	r6, pc, r6
   20778:	mov	r1, r6
   2077c:	bl	1436c <__printf_chk@plt>
   20780:	ldr	ip, [pc, #-2420]	; 1fe14 <load_wavefront@@Base+0xafc>
   20784:	ldr	r0, [pc, #-2420]	; 1fe18 <load_wavefront@@Base+0xb00>
   20788:	mov	r3, r6
   2078c:	add	ip, pc, ip
   20790:	ldr	r1, [sp, #288]	; 0x120
   20794:	add	r0, pc, r0
   20798:	mov	r2, #308	; 0x134
   2079c:	str	ip, [sp]
   207a0:	bl	14924 <vcos_pthreads_logging_assert@plt>
   207a4:	b	1f8d0 <load_wavefront@@Base+0x5b8>
   207a8:	mov	r0, r5
   207ac:	bl	1463c <strlen@plt>
   207b0:	b	1f3a8 <load_wavefront@@Base+0x90>
   207b4:	vmov.f32	s0, s15
   207b8:	bl	1430c <sqrtf@plt>
   207bc:	b	1fb3c <load_wavefront@@Base+0x824>

000207c0 <unload_wavefront@@Base>:
   207c0:	ldr	r3, [r0, #208]	; 0xd0
   207c4:	push	{r4, r5, r6, r7, r8, lr}
   207c8:	cmp	r3, #0
   207cc:	mov	r8, r0
   207d0:	pople	{r4, r5, r6, r7, r8, pc}
   207d4:	mov	r6, #0
   207d8:	add	r5, r0, #4
   207dc:	mov	r7, r6
   207e0:	mov	r4, r0
   207e4:	b	20814 <unload_wavefront@@Base+0x54>
   207e8:	ldr	r3, [r4, #8]
   207ec:	cmp	r3, #0
   207f0:	bne	20840 <unload_wavefront@@Base+0x80>
   207f4:	ldr	r3, [r4, #4]
   207f8:	cmp	r3, #0
   207fc:	bne	2085c <unload_wavefront@@Base+0x9c>
   20800:	ldr	r3, [r8, #208]	; 0xd0
   20804:	add	r4, r4, #52	; 0x34
   20808:	add	r5, r5, #52	; 0x34
   2080c:	cmp	r3, r6
   20810:	ble	20870 <unload_wavefront@@Base+0xb0>
   20814:	ldr	r3, [r5, #-4]
   20818:	add	r6, r6, #1
   2081c:	cmp	r3, #0
   20820:	beq	207e8 <unload_wavefront@@Base+0x28>
   20824:	mov	r0, #1
   20828:	mov	r1, r4
   2082c:	bl	144f8 <glDeleteBuffers@plt>
   20830:	str	r7, [r5, #-4]
   20834:	ldr	r3, [r4, #8]
   20838:	cmp	r3, #0
   2083c:	beq	207f4 <unload_wavefront@@Base+0x34>
   20840:	mov	r0, #1
   20844:	add	r1, r4, #8
   20848:	bl	144f8 <glDeleteBuffers@plt>
   2084c:	ldr	r3, [r4, #4]
   20850:	str	r7, [r4, #8]
   20854:	cmp	r3, #0
   20858:	beq	20800 <unload_wavefront@@Base+0x40>
   2085c:	mov	r0, #1
   20860:	mov	r1, r5
   20864:	bl	144f8 <glDeleteBuffers@plt>
   20868:	str	r7, [r4, #4]
   2086c:	b	20800 <unload_wavefront@@Base+0x40>
   20870:	pop	{r4, r5, r6, r7, r8, pc}

00020874 <cube_wavefront@@Base>:
   20874:	push	{r4, r5, r6, lr}
   20878:	mov	r0, #216	; 0xd8
   2087c:	sub	sp, sp, #8
   20880:	bl	147ec <malloc@plt>
   20884:	subs	r4, r0, #0
   20888:	beq	20958 <cube_wavefront@@Base+0xe4>
   2088c:	mov	r1, #0
   20890:	mov	r2, #216	; 0xd8
   20894:	bl	14414 <memset@plt>
   20898:	movw	r0, #20352	; 0x4f80
   2089c:	movt	r0, #18
   208a0:	ldr	r6, [pc, #188]	; 20964 <cube_wavefront@@Base+0xf0>
   208a4:	bl	147ec <malloc@plt>
   208a8:	mov	r3, #36	; 0x24
   208ac:	add	r6, pc, r6
   208b0:	str	r3, [r4, #12]
   208b4:	add	r1, r6, #48	; 0x30
   208b8:	add	r2, r6, #144	; 0x90
   208bc:	str	r3, [sp]
   208c0:	mov	r3, #3
   208c4:	mov	r5, r0
   208c8:	bl	1f090 <load_tga@@Base+0x218>
   208cc:	ldr	r1, [r4, #12]
   208d0:	mov	r2, r5
   208d4:	mov	r0, r4
   208d8:	add	r1, r1, r1, lsl #1
   208dc:	lsl	r1, r1, #2
   208e0:	bl	1f150 <load_tga@@Base+0x2d8>
   208e4:	ldr	ip, [r4, #12]
   208e8:	mov	r3, #2
   208ec:	mov	r0, r5
   208f0:	add	r1, r6, #360	; 0x168
   208f4:	add	r2, r6, #146	; 0x92
   208f8:	str	ip, [sp]
   208fc:	bl	1f090 <load_tga@@Base+0x218>
   20900:	ldr	r1, [r4, #12]
   20904:	mov	r2, r5
   20908:	add	r0, r4, #8
   2090c:	lsl	r1, r1, #3
   20910:	bl	1f150 <load_tga@@Base+0x2d8>
   20914:	ldr	ip, [r4, #12]
   20918:	mov	r3, #3
   2091c:	mov	r0, r5
   20920:	add	r1, r6, #392	; 0x188
   20924:	add	r2, r6, #148	; 0x94
   20928:	str	ip, [sp]
   2092c:	bl	1f090 <load_tga@@Base+0x218>
   20930:	ldr	r1, [r4, #12]
   20934:	mov	r2, r5
   20938:	add	r0, r4, #4
   2093c:	add	r1, r1, r1, lsl #1
   20940:	lsl	r1, r1, #2
   20944:	bl	1f150 <load_tga@@Base+0x2d8>
   20948:	mov	r0, r5
   2094c:	bl	14534 <free@plt>
   20950:	mov	r3, #1
   20954:	str	r3, [r4, #208]	; 0xd0
   20958:	mov	r0, r4
   2095c:	add	sp, sp, #8
   20960:	pop	{r4, r5, r6, pc}
   20964:	andeq	r5, r0, r8, lsr #28
   20968:	ldr	r3, [pc, #264]	; 20a78 <cube_wavefront@@Base+0x204>
   2096c:	ldr	r2, [pc, #264]	; 20a7c <cube_wavefront@@Base+0x208>
   20970:	add	r3, pc, r3
   20974:	push	{r4, r5, r6, r7, r8, r9, lr}
   20978:	sub	sp, sp, #68	; 0x44
   2097c:	ldr	r7, [r3, r2]
   20980:	mov	r8, r0
   20984:	ldr	r6, [pc, #244]	; 20a80 <cube_wavefront@@Base+0x20c>
   20988:	mov	r0, #16640	; 0x4100
   2098c:	ldr	r5, [pc, #240]	; 20a84 <cube_wavefront@@Base+0x210>
   20990:	mov	r4, #0
   20994:	ldr	r3, [r7]
   20998:	add	r6, pc, r6
   2099c:	add	r5, pc, r5
   209a0:	str	r3, [sp, #60]	; 0x3c
   209a4:	bl	14318 <glClear@plt>
   209a8:	ldr	r1, [r8, #312]	; 0x138
   209ac:	movw	r0, #36197	; 0x8d65
   209b0:	bl	14660 <glBindTexture@plt>
   209b4:	vldr	s14, [r6]
   209b8:	vcvt.f64.f32	d7, s14
   209bc:	vldr	d6, [pc, #172]	; 20a70 <cube_wavefront@@Base+0x1fc>
   209c0:	ldr	r0, [r5, #144]	; 0x90
   209c4:	vadd.f64	d7, d7, d6
   209c8:	vcvt.f32.f64	s14, d7
   209cc:	vstr	s14, [r6]
   209d0:	bl	14474 <glUseProgram@plt>
   209d4:	ldr	r0, [r5, #212]	; 0xd4
   209d8:	bl	14540 <glEnableVertexAttribArray@plt>
   209dc:	ldr	lr, [pc, #164]	; 20a88 <cube_wavefront@@Base+0x214>
   209e0:	add	ip, sp, #12
   209e4:	ldr	r8, [r5, #212]	; 0xd4
   209e8:	add	lr, pc, lr
   209ec:	str	r4, [sp]
   209f0:	str	ip, [sp, #4]
   209f4:	ldm	lr!, {r0, r1, r2, r3}
   209f8:	stmia	ip!, {r0, r1, r2, r3}
   209fc:	ldm	lr!, {r0, r1, r2, r3}
   20a00:	stmia	ip!, {r0, r1, r2, r3}
   20a04:	ldm	lr, {r0, r1, r2, r3}
   20a08:	stm	ip, {r0, r1, r2, r3}
   20a0c:	mov	r3, r4
   20a10:	mov	r1, #2
   20a14:	movw	r2, #5126	; 0x1406
   20a18:	mov	r0, r8
   20a1c:	bl	148a0 <glVertexAttribPointer@plt>
   20a20:	vldr	s0, [r6]
   20a24:	ldr	r0, [r5, #152]	; 0x98
   20a28:	bl	14558 <glUniform1f@plt>
   20a2c:	mov	r2, #6
   20a30:	mov	r1, r4
   20a34:	mov	r0, #4
   20a38:	bl	1484c <glDrawArrays@plt>
   20a3c:	ldr	r0, [r5, #212]	; 0xd4
   20a40:	bl	14438 <glDisableVertexAttribArray@plt>
   20a44:	mov	r0, r4
   20a48:	bl	14474 <glUseProgram@plt>
   20a4c:	ldr	r2, [sp, #60]	; 0x3c
   20a50:	ldr	r3, [r7]
   20a54:	mov	r0, r4
   20a58:	cmp	r2, r3
   20a5c:	bne	20a68 <cube_wavefront@@Base+0x1f4>
   20a60:	add	sp, sp, #68	; 0x44
   20a64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20a68:	bl	14804 <__stack_chk_fail@plt>
   20a6c:	nop	{0}
   20a70:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   20a74:	svccc	0x00a99999
   20a78:	andeq	r9, r1, r8, lsl #13
   20a7c:	andeq	r0, r0, r4, lsr r3
   20a80:	muleq	r1, r0, ip
   20a84:	andeq	sl, r1, r0, lsl #1
   20a88:	andeq	r7, r0, r0, lsr #25
   20a8c:	push	{r3, lr}
   20a90:	bl	1e3e8 <raspitexutil_gl_init_2_0@@Base>
   20a94:	cmp	r0, #0
   20a98:	popne	{r3, pc}
   20a9c:	ldr	r0, [pc, #8]	; 20aac <cube_wavefront@@Base+0x238>
   20aa0:	pop	{r3, lr}
   20aa4:	add	r0, pc, r0
   20aa8:	b	1e7e4 <raspitexutil_build_shader_program@@Base>
   20aac:	andeq	r9, r1, r8, ror pc

00020ab0 <mirror_open@@Base>:
   20ab0:	ldr	r2, [pc, #56]	; 20af0 <mirror_open@@Base+0x40>
   20ab4:	mov	r3, r0
   20ab8:	ldr	r1, [pc, #52]	; 20af4 <mirror_open@@Base+0x44>
   20abc:	mov	r0, #0
   20ac0:	push	{r4}		; (str r4, [sp, #-4]!)
   20ac4:	add	r2, pc, r2
   20ac8:	ldr	r4, [pc, #40]	; 20af8 <mirror_open@@Base+0x48>
   20acc:	ldr	ip, [pc, #40]	; 20afc <mirror_open@@Base+0x4c>
   20ad0:	add	r4, pc, r4
   20ad4:	str	r4, [r3, #356]	; 0x164
   20ad8:	add	ip, pc, ip
   20adc:	str	ip, [r3, #380]	; 0x17c
   20ae0:	ldr	r2, [r2, r1]
   20ae4:	pop	{r4}		; (ldr r4, [sp], #4)
   20ae8:	str	r2, [r3, #360]	; 0x168
   20aec:	bx	lr
   20af0:	andeq	r9, r1, r4, lsr r5
   20af4:	andeq	r0, r0, r0, lsl r3
   20af8:			; <UNDEFINED> instruction: 0xffffffb4
   20afc:			; <UNDEFINED> instruction: 0xfffffe88
   20b00:	push	{r4, r5, r6, lr}
   20b04:	vpush	{d8}
   20b08:	mov	r6, r0
   20b0c:	vldr	s16, [pc, #288]	; 20c34 <mirror_open@@Base+0x184>
   20b10:	ldr	r5, [pc, #288]	; 20c38 <mirror_open@@Base+0x188>
   20b14:	sub	sp, sp, #8
   20b18:	mov	r0, #16640	; 0x4100
   20b1c:	mov	r4, #0
   20b20:	add	r5, pc, r5
   20b24:	bl	14318 <glClear@plt>
   20b28:	ldr	r0, [r5, #144]	; 0x90
   20b2c:	bl	14474 <glUseProgram@plt>
   20b30:	movw	r0, #33984	; 0x84c0
   20b34:	bl	1457c <glActiveTexture@plt>
   20b38:	ldr	r0, [r5, #212]	; 0xd4
   20b3c:	bl	14540 <glEnableVertexAttribArray@plt>
   20b40:	ldr	ip, [pc, #244]	; 20c3c <mirror_open@@Base+0x18c>
   20b44:	mov	r3, r4
   20b48:	ldr	r0, [r5, #212]	; 0xd4
   20b4c:	add	ip, pc, ip
   20b50:	movw	r2, #5126	; 0x1406
   20b54:	str	ip, [sp, #4]
   20b58:	mov	r1, #2
   20b5c:	str	r4, [sp]
   20b60:	bl	148a0 <glVertexAttribPointer@plt>
   20b64:	ldr	r1, [r6, #320]	; 0x140
   20b68:	movw	r0, #36197	; 0x8d65
   20b6c:	bl	14660 <glBindTexture@plt>
   20b70:	vmov.f32	s0, #240	; 0xbf800000 -1.0
   20b74:	ldr	r0, [r5, #216]	; 0xd8
   20b78:	vmov.f32	s1, #112	; 0x3f800000  1.0
   20b7c:	bl	14894 <glVertexAttrib2f@plt>
   20b80:	mov	r2, #6
   20b84:	mov	r1, r4
   20b88:	mov	r0, #4
   20b8c:	bl	1484c <glDrawArrays@plt>
   20b90:	ldr	r1, [r6, #328]	; 0x148
   20b94:	movw	r0, #36197	; 0x8d65
   20b98:	bl	14660 <glBindTexture@plt>
   20b9c:	ldr	r0, [r5, #216]	; 0xd8
   20ba0:	vmov.f32	s0, s16
   20ba4:	vmov.f32	s1, #112	; 0x3f800000  1.0
   20ba8:	bl	14894 <glVertexAttrib2f@plt>
   20bac:	mov	r2, #6
   20bb0:	mov	r1, r4
   20bb4:	mov	r0, #4
   20bb8:	bl	1484c <glDrawArrays@plt>
   20bbc:	ldr	r1, [r6, #336]	; 0x150
   20bc0:	movw	r0, #36197	; 0x8d65
   20bc4:	bl	14660 <glBindTexture@plt>
   20bc8:	ldr	r0, [r5, #216]	; 0xd8
   20bcc:	vmov.f32	s0, s16
   20bd0:	vmov.f32	s1, s16
   20bd4:	bl	14894 <glVertexAttrib2f@plt>
   20bd8:	mov	r2, #6
   20bdc:	mov	r1, r4
   20be0:	mov	r0, #4
   20be4:	bl	1484c <glDrawArrays@plt>
   20be8:	ldr	r1, [r6, #312]	; 0x138
   20bec:	movw	r0, #36197	; 0x8d65
   20bf0:	bl	14660 <glBindTexture@plt>
   20bf4:	vmov.f32	s1, s16
   20bf8:	ldr	r0, [r5, #216]	; 0xd8
   20bfc:	vmov.f32	s0, #240	; 0xbf800000 -1.0
   20c00:	bl	14894 <glVertexAttrib2f@plt>
   20c04:	mov	r1, r4
   20c08:	mov	r2, #6
   20c0c:	mov	r0, #4
   20c10:	bl	1484c <glDrawArrays@plt>
   20c14:	ldr	r0, [r5, #212]	; 0xd4
   20c18:	bl	14438 <glDisableVertexAttribArray@plt>
   20c1c:	mov	r0, r4
   20c20:	bl	14474 <glUseProgram@plt>
   20c24:	mov	r0, r4
   20c28:	add	sp, sp, #8
   20c2c:	vpop	{d8}
   20c30:	pop	{r4, r5, r6, pc}
   20c34:	andeq	r0, r0, r0
   20c38:	andeq	sl, r1, r0, asr #32
   20c3c:	andeq	r9, r1, r4, ror #31
   20c40:	push	{r3, r4, r5, lr}
   20c44:	ldr	r3, [pc, #64]	; 20c8c <mirror_open@@Base+0x1dc>
   20c48:	add	r3, pc, r3
   20c4c:	str	r3, [r0, #308]	; 0x134
   20c50:	bl	1e3e8 <raspitexutil_gl_init_2_0@@Base>
   20c54:	subs	r4, r0, #0
   20c58:	bne	20c84 <mirror_open@@Base+0x1d4>
   20c5c:	ldr	r5, [pc, #44]	; 20c90 <mirror_open@@Base+0x1e0>
   20c60:	add	r5, pc, r5
   20c64:	mov	r0, r5
   20c68:	bl	1e7e4 <raspitexutil_build_shader_program@@Base>
   20c6c:	mov	r4, r0
   20c70:	ldr	r0, [r5, #144]	; 0x90
   20c74:	bl	14474 <glUseProgram@plt>
   20c78:	ldr	r0, [r5, #148]	; 0x94
   20c7c:	mov	r1, #0
   20c80:	bl	147a4 <glUniform1i@plt>
   20c84:	mov	r0, r4
   20c88:	pop	{r3, r4, r5, pc}
   20c8c:	andeq	r7, r0, r0, lsr sp
   20c90:	andeq	r9, r1, r0, lsl #30

00020c94 <yuv_open@@Base>:
   20c94:	ldr	r2, [pc, #92]	; 20cf8 <yuv_open@@Base+0x64>
   20c98:	mov	r3, r0
   20c9c:	ldr	r1, [pc, #88]	; 20cfc <yuv_open@@Base+0x68>
   20ca0:	mov	r0, #0
   20ca4:	push	{r4, r5}
   20ca8:	add	r2, pc, r2
   20cac:	ldr	r4, [pc, #76]	; 20d00 <yuv_open@@Base+0x6c>
   20cb0:	ldr	ip, [pc, #76]	; 20d04 <yuv_open@@Base+0x70>
   20cb4:	add	r4, pc, r4
   20cb8:	str	r4, [r3, #356]	; 0x164
   20cbc:	add	ip, pc, ip
   20cc0:	ldr	r4, [pc, #64]	; 20d08 <yuv_open@@Base+0x74>
   20cc4:	str	ip, [r3, #380]	; 0x17c
   20cc8:	ldr	r5, [r2, r1]
   20ccc:	ldr	ip, [pc, #56]	; 20d0c <yuv_open@@Base+0x78>
   20cd0:	ldr	r1, [pc, #56]	; 20d10 <yuv_open@@Base+0x7c>
   20cd4:	str	r5, [r3, #360]	; 0x168
   20cd8:	ldr	r4, [r2, r4]
   20cdc:	str	r4, [r3, #364]	; 0x16c
   20ce0:	ldr	ip, [r2, ip]
   20ce4:	pop	{r4, r5}
   20ce8:	str	ip, [r3, #368]	; 0x170
   20cec:	ldr	r2, [r2, r1]
   20cf0:	str	r2, [r3, #372]	; 0x174
   20cf4:	bx	lr
   20cf8:	andeq	r9, r1, r0, asr r3
   20cfc:	andeq	r0, r0, r0, lsl r3
   20d00:			; <UNDEFINED> instruction: 0xffffff84
   20d04:			; <UNDEFINED> instruction: 0xfffffe3c
   20d08:	andeq	r0, r0, r4, lsl #6
   20d0c:	andeq	r0, r0, r8, lsl r3
   20d10:	andeq	r0, r0, ip, asr #6
   20d14:	push	{r4, r5, r6, lr}
   20d18:	mov	r6, r0
   20d1c:	ldr	r5, [pc, #128]	; 20da4 <yuv_open@@Base+0x110>
   20d20:	sub	sp, sp, #8
   20d24:	mov	r0, #16640	; 0x4100
   20d28:	mov	r4, #0
   20d2c:	add	r5, pc, r5
   20d30:	bl	14318 <glClear@plt>
   20d34:	ldr	r0, [r5, #144]	; 0x90
   20d38:	bl	14474 <glUseProgram@plt>
   20d3c:	movw	r0, #33984	; 0x84c0
   20d40:	bl	1457c <glActiveTexture@plt>
   20d44:	ldr	r1, [r6, #320]	; 0x140
   20d48:	movw	r0, #36197	; 0x8d65
   20d4c:	bl	14660 <glBindTexture@plt>
   20d50:	ldr	r3, [pc, #80]	; 20da8 <yuv_open@@Base+0x114>
   20d54:	movw	r0, #34962	; 0x8892
   20d58:	add	r3, pc, r3
   20d5c:	ldr	r1, [r3]
   20d60:	bl	148c4 <glBindBuffer@plt>
   20d64:	ldr	r0, [r5, #212]	; 0xd4
   20d68:	bl	14540 <glEnableVertexAttribArray@plt>
   20d6c:	ldr	r0, [r5, #212]	; 0xd4
   20d70:	mov	r3, r4
   20d74:	str	r4, [sp]
   20d78:	str	r4, [sp, #4]
   20d7c:	mov	r1, #2
   20d80:	movw	r2, #5126	; 0x1406
   20d84:	bl	148a0 <glVertexAttribPointer@plt>
   20d88:	mov	r1, r4
   20d8c:	mov	r0, #4
   20d90:	mov	r2, #6
   20d94:	bl	1484c <glDrawArrays@plt>
   20d98:	mov	r0, r4
   20d9c:	add	sp, sp, #8
   20da0:	pop	{r4, r5, r6, pc}
   20da4:	andeq	r9, r1, r8, ror pc
   20da8:	ldrdeq	lr, [r1], -r4
   20dac:	ldr	r3, [pc, #292]	; 20ed8 <yuv_open@@Base+0x244>
   20db0:	ldr	r2, [pc, #292]	; 20edc <yuv_open@@Base+0x248>
   20db4:	add	r3, pc, r3
   20db8:	push	{r4, r5, r6, r7, r8, lr}
   20dbc:	vpush	{d8}
   20dc0:	mov	r4, r0
   20dc4:	ldr	r6, [r0, #260]	; 0x104
   20dc8:	ldr	r5, [r0, #264]	; 0x108
   20dcc:	ldr	r0, [r3, r2]
   20dd0:	ldr	r3, [r0]
   20dd4:	cmp	r3, #4
   20dd8:	bhi	20eb8 <yuv_open@@Base+0x224>
   20ddc:	ldr	r3, [pc, #252]	; 20ee0 <yuv_open@@Base+0x24c>
   20de0:	mov	r0, r4
   20de4:	add	r3, pc, r3
   20de8:	add	r3, r3, #12
   20dec:	str	r3, [r4, #308]	; 0x134
   20df0:	bl	1e3e8 <raspitexutil_gl_init_2_0@@Base>
   20df4:	subs	r4, r0, #0
   20df8:	beq	20e08 <yuv_open@@Base+0x174>
   20dfc:	vpop	{d8}
   20e00:	mov	r0, r4
   20e04:	pop	{r4, r5, r6, r7, r8, pc}
   20e08:	ldr	r7, [pc, #212]	; 20ee4 <yuv_open@@Base+0x250>
   20e0c:	add	r7, pc, r7
   20e10:	mov	r0, r7
   20e14:	bl	1e7e4 <raspitexutil_build_shader_program@@Base>
   20e18:	subs	r4, r0, #0
   20e1c:	bne	20dfc <yuv_open@@Base+0x168>
   20e20:	ldr	r0, [r7, #144]	; 0x90
   20e24:	vmov.f32	s16, #112	; 0x3f800000  1.0
   20e28:	bl	14474 <glUseProgram@plt>
   20e2c:	mov	r1, r4
   20e30:	ldr	r0, [r7, #148]	; 0x94
   20e34:	bl	147a4 <glUniform1i@plt>
   20e38:	vmov	s15, r6
   20e3c:	ldr	r8, [pc, #164]	; 20ee8 <yuv_open@@Base+0x254>
   20e40:	ldr	r0, [r7, #152]	; 0x98
   20e44:	add	r8, pc, r8
   20e48:	vcvt.f32.s32	s0, s15
   20e4c:	vmov	s15, r5
   20e50:	vcvt.f32.s32	s1, s15
   20e54:	vdiv.f32	s0, s16, s0
   20e58:	vdiv.f32	s1, s16, s1
   20e5c:	bl	14240 <glUniform2f@plt>
   20e60:	ldr	r0, [r7, #212]	; 0xd4
   20e64:	bl	14540 <glEnableVertexAttribArray@plt>
   20e68:	mov	r1, r8
   20e6c:	mov	r0, #1
   20e70:	bl	14780 <glGenBuffers@plt>
   20e74:	ldr	r1, [r8]
   20e78:	movw	r0, #34962	; 0x8892
   20e7c:	bl	148c4 <glBindBuffer@plt>
   20e80:	ldr	r2, [pc, #100]	; 20eec <yuv_open@@Base+0x258>
   20e84:	movw	r0, #34962	; 0x8892
   20e88:	mov	r1, #48	; 0x30
   20e8c:	add	r2, pc, r2
   20e90:	movw	r3, #35044	; 0x88e4
   20e94:	bl	14588 <glBufferData@plt>
   20e98:	vldr	s0, [pc, #52]	; 20ed4 <yuv_open@@Base+0x240>
   20e9c:	vmov.f32	s3, s16
   20ea0:	vmov.f32	s1, s0
   20ea4:	vmov.f32	s2, s0
   20ea8:	bl	14498 <glClearColor@plt>
   20eac:	vpop	{d8}
   20eb0:	mov	r0, r4
   20eb4:	pop	{r4, r5, r6, r7, r8, pc}
   20eb8:	ldr	r2, [pc, #48]	; 20ef0 <yuv_open@@Base+0x25c>
   20ebc:	mov	r1, #5
   20ec0:	ldr	r3, [pc, #44]	; 20ef4 <yuv_open@@Base+0x260>
   20ec4:	add	r2, pc, r2
   20ec8:	add	r3, pc, r3
   20ecc:	bl	1493c <vcos_log_impl@plt>
   20ed0:	b	20ddc <yuv_open@@Base+0x148>
   20ed4:	andeq	r0, r0, r0
   20ed8:	andeq	r9, r1, r4, asr #4
   20edc:	andeq	r0, r0, r8, lsr r3
   20ee0:	andeq	r7, r0, ip, lsr #26
   20ee4:	muleq	r1, r8, lr
   20ee8:	andeq	lr, r1, r8, ror #15
   20eec:	andeq	r9, r1, r8, ror #27
   20ef0:	andeq	r2, r0, r4, asr r1
   20ef4:	andeq	r7, r0, r8, asr #24

00020ef8 <sobel_open@@Base>:
   20ef8:	ldr	r2, [pc, #56]	; 20f38 <sobel_open@@Base+0x40>
   20efc:	mov	r3, r0
   20f00:	ldr	r1, [pc, #52]	; 20f3c <sobel_open@@Base+0x44>
   20f04:	mov	r0, #0
   20f08:	push	{r4}		; (str r4, [sp, #-4]!)
   20f0c:	add	r2, pc, r2
   20f10:	ldr	r4, [pc, #40]	; 20f40 <sobel_open@@Base+0x48>
   20f14:	ldr	ip, [pc, #40]	; 20f44 <sobel_open@@Base+0x4c>
   20f18:	add	r4, pc, r4
   20f1c:	str	r4, [r3, #356]	; 0x164
   20f20:	add	ip, pc, ip
   20f24:	str	ip, [r3, #380]	; 0x17c
   20f28:	ldr	r2, [r2, r1]
   20f2c:	pop	{r4}		; (ldr r4, [sp], #4)
   20f30:	str	r2, [r3, #364]	; 0x16c
   20f34:	bx	lr
   20f38:	andeq	r9, r1, ip, ror #1
   20f3c:	andeq	r0, r0, r4, lsl #6
   20f40:			; <UNDEFINED> instruction: 0xfffffe8c
   20f44:			; <UNDEFINED> instruction: 0xfffffdec
   20f48:	ldr	r3, [pc, #84]	; 20fa4 <sobel_open@@Base+0xac>
   20f4c:	vldr	s14, [pc, #76]	; 20fa0 <sobel_open@@Base+0xa8>
   20f50:	push	{r4, r5}
   20f54:	add	r3, pc, r3
   20f58:	mov	r5, #360	; 0x168
   20f5c:	movw	r1, #46021	; 0xb3c5
   20f60:	ldr	ip, [r3]
   20f64:	movt	r1, #37282	; 0x91a2
   20f68:	movw	r4, #450	; 0x1c2
   20f6c:	mov	r0, #0
   20f70:	add	r2, ip, #1
   20f74:	mul	r5, r5, ip
   20f78:	umull	ip, r1, r1, r2
   20f7c:	vmov	s15, r5
   20f80:	vcvt.f32.u32	s15, s15
   20f84:	lsr	r1, r1, #8
   20f88:	mls	r2, r4, r1, r2
   20f8c:	pop	{r4, r5}
   20f90:	vdiv.f32	s15, s15, s14
   20f94:	str	r2, [r3]
   20f98:	vstr	s15, [r3, #4]
   20f9c:	bx	lr
   20fa0:	mvnmi	r0, #0
   20fa4:	ldrdeq	lr, [r1], -ip
   20fa8:	push	{r4, lr}
   20fac:	ldr	r1, [r0, #312]	; 0x138
   20fb0:	movw	r0, #36197	; 0x8d65
   20fb4:	bl	14660 <glBindTexture@plt>
   20fb8:	ldr	r4, [pc, #124]	; 2103c <sobel_open@@Base+0x144>
   20fbc:	bl	1448c <glLoadIdentity@plt>
   20fc0:	ldr	r3, [pc, #120]	; 21040 <sobel_open@@Base+0x148>
   20fc4:	vldr	s1, [pc, #108]	; 21038 <sobel_open@@Base+0x140>
   20fc8:	vmov.f32	s3, #112	; 0x3f800000  1.0
   20fcc:	add	r3, pc, r3
   20fd0:	add	r4, pc, r4
   20fd4:	vldr	s0, [r3, #4]
   20fd8:	vmov.f32	s2, s1
   20fdc:	bl	147e0 <glRotatef@plt>
   20fe0:	movw	r0, #32884	; 0x8074
   20fe4:	bl	142c4 <glEnableClientState@plt>
   20fe8:	mov	r3, r4
   20fec:	movw	r1, #5126	; 0x1406
   20ff0:	mov	r2, #0
   20ff4:	mov	r0, #3
   20ff8:	bl	14954 <glVertexPointer@plt>
   20ffc:	movw	r0, #32886	; 0x8076
   21000:	bl	146cc <glDisableClientState@plt>
   21004:	movw	r0, #32888	; 0x8078
   21008:	bl	142c4 <glEnableClientState@plt>
   2100c:	add	r3, r4, #72	; 0x48
   21010:	mov	r0, #2
   21014:	movw	r1, #5126	; 0x1406
   21018:	mov	r2, #0
   2101c:	bl	14228 <glTexCoordPointer@plt>
   21020:	mov	r0, #4
   21024:	mov	r1, #0
   21028:	mov	r2, #6
   2102c:	bl	1484c <glDrawArrays@plt>
   21030:	mov	r0, #0
   21034:	pop	{r4, pc}
   21038:	andeq	r0, r0, r0
   2103c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   21040:	andeq	lr, r1, r4, ror #12
   21044:	push	{r4, lr}
   21048:	bl	1e324 <raspitexutil_gl_init_1_0@@Base>
   2104c:	subs	r4, r0, #0
   21050:	bne	21090 <sobel_open@@Base+0x198>
   21054:	ldr	r3, [pc, #64]	; 2109c <sobel_open@@Base+0x1a4>
   21058:	vldr	s15, [pc, #56]	; 21098 <sobel_open@@Base+0x1a0>
   2105c:	vmov.f32	s0, s15
   21060:	add	r3, pc, r3
   21064:	vstr	s15, [r3, #4]
   21068:	str	r4, [r3]
   2106c:	vmov.f32	s1, s15
   21070:	vmov.f32	s2, s15
   21074:	vmov.f32	s3, s15
   21078:	bl	14498 <glClearColor@plt>
   2107c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   21080:	bl	14870 <glClearDepthf@plt>
   21084:	mov	r0, #16640	; 0x4100
   21088:	bl	14318 <glClear@plt>
   2108c:	bl	1448c <glLoadIdentity@plt>
   21090:	mov	r0, r4
   21094:	pop	{r4, pc}
   21098:	andeq	r0, r0, r0
   2109c:	ldrdeq	lr, [r1], -r0

000210a0 <square_open@@Base>:
   210a0:	ldr	r2, [pc, #68]	; 210ec <square_open@@Base+0x4c>
   210a4:	mov	r3, r0
   210a8:	ldr	r1, [pc, #64]	; 210f0 <square_open@@Base+0x50>
   210ac:	mov	r0, #0
   210b0:	push	{r4, r5}
   210b4:	add	r2, pc, r2
   210b8:	ldr	r5, [pc, #52]	; 210f4 <square_open@@Base+0x54>
   210bc:	ldr	r4, [pc, #52]	; 210f8 <square_open@@Base+0x58>
   210c0:	ldr	ip, [pc, #52]	; 210fc <square_open@@Base+0x5c>
   210c4:	add	r5, pc, r5
   210c8:	add	r4, pc, r4
   210cc:	str	r5, [r3, #356]	; 0x164
   210d0:	str	r4, [r3, #376]	; 0x178
   210d4:	add	ip, pc, ip
   210d8:	str	ip, [r3, #380]	; 0x17c
   210dc:	ldr	r2, [r2, r1]
   210e0:	pop	{r4, r5}
   210e4:	str	r2, [r3, #360]	; 0x168
   210e8:	bx	lr
   210ec:	andeq	r8, r1, r4, asr #30
   210f0:	andeq	r0, r0, r0, lsl r3
   210f4:			; <UNDEFINED> instruction: 0xffffff78
   210f8:			; <UNDEFINED> instruction: 0xfffffe78
   210fc:			; <UNDEFINED> instruction: 0xfffffecc
   21100:	ldr	r3, [pc, #112]	; 21178 <square_open@@Base+0xd8>
   21104:	ldr	r2, [pc, #112]	; 2117c <square_open@@Base+0xdc>
   21108:	add	r3, pc, r3
   2110c:	push	{r4, lr}
   21110:	mov	r4, r0
   21114:	ldr	r0, [r3, r2]
   21118:	ldr	r3, [r0]
   2111c:	cmp	r3, #4
   21120:	bhi	2115c <square_open@@Base+0xbc>
   21124:	ldr	r3, [r4, #400]	; 0x190
   21128:	cmp	r3, #0
   2112c:	popeq	{r4, pc}
   21130:	ldr	r0, [r3, #44]	; 0x2c
   21134:	cmp	r0, #0
   21138:	beq	21140 <square_open@@Base+0xa0>
   2113c:	bl	207c0 <unload_wavefront@@Base>
   21140:	mov	r0, r4
   21144:	bl	1df60 <raspitexutil_gl_term@@Base>
   21148:	ldr	r0, [r4, #400]	; 0x190
   2114c:	bl	14534 <free@plt>
   21150:	mov	r3, #0
   21154:	str	r3, [r4, #400]	; 0x190
   21158:	pop	{r4, pc}
   2115c:	ldr	r2, [pc, #28]	; 21180 <square_open@@Base+0xe0>
   21160:	mov	r1, #5
   21164:	ldr	r3, [pc, #24]	; 21184 <square_open@@Base+0xe4>
   21168:	add	r2, pc, r2
   2116c:	add	r3, pc, r3
   21170:	bl	1493c <vcos_log_impl@plt>
   21174:	b	21124 <square_open@@Base+0x84>
   21178:	strdeq	r8, [r1], -r0
   2117c:	andeq	r0, r0, r8, lsr r3
   21180:	muleq	r0, ip, lr
   21184:	andeq	r7, r0, r8, ror lr
   21188:	push	{r3, r4, r5, lr}
   2118c:	mov	r4, r0
   21190:	ldr	r5, [r4, #400]	; 0x190
   21194:	mov	r0, #16640	; 0x4100
   21198:	bl	14318 <glClear@plt>
   2119c:	ldr	r1, [r4, #312]	; 0x138
   211a0:	movw	r0, #36197	; 0x8d65
   211a4:	bl	14660 <glBindTexture@plt>
   211a8:	ldr	r1, [r4, #312]	; 0x138
   211ac:	ldr	r0, [r5, #44]	; 0x2c
   211b0:	bl	1f1f0 <draw_wavefront@@Base>
   211b4:	mov	r0, #0
   211b8:	pop	{r3, r4, r5, pc}
   211bc:	push	{r4, lr}
   211c0:	ldr	r4, [r0, #400]	; 0x190
   211c4:	vldr	s15, [r4, #12]
   211c8:	vldr	s14, [r4, #24]
   211cc:	vadd.f32	s14, s14, s15
   211d0:	vldr	s15, [pc, #268]	; 212e4 <square_open@@Base+0x244>
   211d4:	vcmpe.f32	s14, s15
   211d8:	vmrs	APSR_nzcv, fpscr
   211dc:	vsubge.f32	s14, s14, s15
   211e0:	bge	211f0 <square_open@@Base+0x150>
   211e4:	vcmpe.f32	s14, #0.0
   211e8:	vmrs	APSR_nzcv, fpscr
   211ec:	vaddls.f32	s14, s14, s15
   211f0:	vldr	s12, [r4, #28]
   211f4:	vldr	s15, [r4, #16]
   211f8:	vldr	s13, [pc, #228]	; 212e4 <square_open@@Base+0x244>
   211fc:	vstr	s14, [r4, #24]
   21200:	vadd.f32	s15, s12, s15
   21204:	vcmpe.f32	s15, s13
   21208:	vmrs	APSR_nzcv, fpscr
   2120c:	vsubge.f32	s15, s15, s13
   21210:	bge	21220 <square_open@@Base+0x180>
   21214:	vcmpe.f32	s15, #0.0
   21218:	vmrs	APSR_nzcv, fpscr
   2121c:	vaddls.f32	s15, s15, s13
   21220:	vldr	s12, [r4, #32]
   21224:	vldr	s14, [r4, #20]
   21228:	vldr	s13, [pc, #180]	; 212e4 <square_open@@Base+0x244>
   2122c:	vstr	s15, [r4, #28]
   21230:	vadd.f32	s14, s12, s14
   21234:	vcmpe.f32	s14, s13
   21238:	vmrs	APSR_nzcv, fpscr
   2123c:	vsubge.f32	s14, s14, s13
   21240:	bge	21250 <square_open@@Base+0x1b0>
   21244:	vcmpe.f32	s14, #0.0
   21248:	vmrs	APSR_nzcv, fpscr
   2124c:	vaddls.f32	s14, s14, s13
   21250:	vldr	s13, [r4, #36]	; 0x24
   21254:	vldr	s15, [r4, #40]	; 0x28
   21258:	vstr	s14, [r4, #32]
   2125c:	vadd.f32	s15, s13, s15
   21260:	vmov.f32	s14, #36	; 0x41200000  10.0
   21264:	vcmpe.f32	s15, s14
   21268:	vmrs	APSR_nzcv, fpscr
   2126c:	vmovge.f32	s15, s14
   21270:	bge	21284 <square_open@@Base+0x1e4>
   21274:	vmov.f32	s14, #112	; 0x3f800000  1.0
   21278:	vcmp.f32	s15, s14
   2127c:	vmrs	APSR_nzcv, fpscr
   21280:	vmovls.f32	s15, s14
   21284:	vstr	s15, [r4, #36]	; 0x24
   21288:	bl	1448c <glLoadIdentity@plt>
   2128c:	vldr	s2, [r4, #36]	; 0x24
   21290:	vldr	s0, [pc, #80]	; 212e8 <square_open@@Base+0x248>
   21294:	vneg.f32	s2, s2
   21298:	vmov.f32	s1, s0
   2129c:	bl	146a8 <glTranslatef@plt>
   212a0:	vldr	s2, [pc, #64]	; 212e8 <square_open@@Base+0x248>
   212a4:	vldr	s0, [r4, #24]
   212a8:	vmov.f32	s3, s2
   212ac:	vmov.f32	s1, #112	; 0x3f800000  1.0
   212b0:	bl	147e0 <glRotatef@plt>
   212b4:	vldr	s1, [pc, #44]	; 212e8 <square_open@@Base+0x248>
   212b8:	vldr	s0, [r4, #28]
   212bc:	vmov.f32	s3, s1
   212c0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   212c4:	bl	147e0 <glRotatef@plt>
   212c8:	vldr	s1, [pc, #24]	; 212e8 <square_open@@Base+0x248>
   212cc:	vldr	s0, [r4, #32]
   212d0:	vmov.f32	s2, s1
   212d4:	vmov.f32	s3, #112	; 0x3f800000  1.0
   212d8:	bl	147e0 <glRotatef@plt>
   212dc:	mov	r0, #0
   212e0:	pop	{r4, pc}
   212e4:			; <UNDEFINED> instruction: 0x43b40000
   212e8:	andeq	r0, r0, r0
   212ec:	push	{r4, r5, r6, r7, r8, lr}
   212f0:	sub	sp, sp, #24
   212f4:	ldr	r6, [pc, #488]	; 214e4 <square_open@@Base+0x444>
   212f8:	mov	r5, r0
   212fc:	ldr	r3, [pc, #484]	; 214e8 <square_open@@Base+0x448>
   21300:	mov	r1, #48	; 0x30
   21304:	add	r6, pc, r6
   21308:	mov	r0, #1
   2130c:	ldr	r7, [r6, r3]
   21310:	ldr	r3, [r7]
   21314:	str	r3, [sp, #20]
   21318:	bl	143b4 <calloc@plt>
   2131c:	ldr	r2, [r5, #260]	; 0x104
   21320:	ldr	r3, [r5, #264]	; 0x108
   21324:	mov	r4, r0
   21328:	mov	r0, r5
   2132c:	str	r4, [r5, #400]	; 0x190
   21330:	stm	r4, {r2, r3}
   21334:	bl	1e324 <raspitexutil_gl_init_1_0@@Base>
   21338:	subs	r5, r0, #0
   2133c:	beq	2135c <square_open@@Base+0x2bc>
   21340:	ldr	r2, [sp, #20]
   21344:	mov	r0, r5
   21348:	ldr	r3, [r7]
   2134c:	cmp	r2, r3
   21350:	bne	214c4 <square_open@@Base+0x424>
   21354:	add	sp, sp, #24
   21358:	pop	{r4, r5, r6, r7, r8, pc}
   2135c:	vldr	s1, [pc, #356]	; 214c8 <square_open@@Base+0x428>
   21360:	vldr	s2, [pc, #356]	; 214cc <square_open@@Base+0x42c>
   21364:	vmov.f32	s3, #112	; 0x3f800000  1.0
   21368:	vldr	s0, [pc, #352]	; 214d0 <square_open@@Base+0x430>
   2136c:	bl	14498 <glClearColor@plt>
   21370:	movw	r0, #2884	; 0xb44
   21374:	bl	1421c <glEnable@plt>
   21378:	movw	r0, #2929	; 0xb71
   2137c:	bl	1421c <glEnable@plt>
   21380:	ldr	r8, [pc, #356]	; 214ec <square_open@@Base+0x44c>
   21384:	add	r8, pc, r8
   21388:	vmov.f32	s0, #112	; 0x3f800000  1.0
   2138c:	bl	14870 <glClearDepthf@plt>
   21390:	movw	r0, #515	; 0x203
   21394:	bl	14828 <glDepthFunc@plt>
   21398:	ldr	r2, [pc, #336]	; 214f0 <square_open@@Base+0x450>
   2139c:	add	ip, sp, #4
   213a0:	add	r2, pc, r2
   213a4:	add	r2, r2, #16
   213a8:	ldm	r2, {r0, r1, r2, r3}
   213ac:	stm	ip, {r0, r1, r2, r3}
   213b0:	mov	r2, ip
   213b4:	mov	r1, #4608	; 0x1200
   213b8:	mov	r0, #16384	; 0x4000
   213bc:	bl	14840 <glLightfv@plt>
   213c0:	mov	r0, #16384	; 0x4000
   213c4:	bl	1421c <glEnable@plt>
   213c8:	mov	r0, #2896	; 0xb50
   213cc:	bl	1421c <glEnable@plt>
   213d0:	mov	r0, #3152	; 0xc50
   213d4:	movw	r1, #4354	; 0x1102
   213d8:	bl	14264 <glHint@plt>
   213dc:	ldm	r4, {r2, r3}
   213e0:	mov	r1, r5
   213e4:	mov	r0, r5
   213e8:	bl	14960 <glViewport@plt>
   213ec:	movw	r0, #5889	; 0x1701
   213f0:	bl	142f4 <glMatrixMode@plt>
   213f4:	bl	1448c <glLoadIdentity@plt>
   213f8:	vldr	s14, [r4]
   213fc:	vcvt.f32.u32	s1, s14
   21400:	vldr	s15, [pc, #204]	; 214d4 <square_open@@Base+0x434>
   21404:	vldr	s2, [pc, #204]	; 214d8 <square_open@@Base+0x438>
   21408:	vldr	s4, [pc, #204]	; 214dc <square_open@@Base+0x43c>
   2140c:	vldr	s5, [pc, #204]	; 214e0 <square_open@@Base+0x440>
   21410:	vmul.f32	s1, s1, s15
   21414:	vmov.f32	s3, s15
   21418:	vldr	s15, [r4, #4]
   2141c:	vcvt.f32.u32	s14, s15
   21420:	vdiv.f32	s1, s1, s14
   21424:	vneg.f32	s0, s1
   21428:	bl	14738 <glFrustumf@plt>
   2142c:	movw	r0, #32884	; 0x8074
   21430:	bl	142c4 <glEnableClientState@plt>
   21434:	mov	r0, #5888	; 0x1700
   21438:	bl	142f4 <glMatrixMode@plt>
   2143c:	mov	r0, r8
   21440:	mov	r1, r5
   21444:	mov	r3, #0
   21448:	mov	r2, #0
   2144c:	str	r3, [r4, #32]
   21450:	movt	r2, #16880	; 0x41f0
   21454:	str	r3, [r4, #20]
   21458:	mov	ip, #0
   2145c:	movw	r3, #39322	; 0x999a
   21460:	movt	ip, #16948	; 0x4234
   21464:	movt	r3, #16281	; 0x3f99
   21468:	str	ip, [r4, #24]
   2146c:	str	r3, [r4, #36]	; 0x24
   21470:	mov	r3, #1056964608	; 0x3f000000
   21474:	str	r2, [r4, #28]
   21478:	str	r3, [r4, #12]
   2147c:	str	r3, [r4, #16]
   21480:	bl	1f318 <load_wavefront@@Base>
   21484:	cmp	r0, #0
   21488:	str	r0, [r4, #44]	; 0x2c
   2148c:	bne	21340 <square_open@@Base+0x2a0>
   21490:	ldr	r3, [pc, #92]	; 214f4 <square_open@@Base+0x454>
   21494:	ldr	r0, [r6, r3]
   21498:	ldr	r3, [r0]
   2149c:	cmp	r3, #1
   214a0:	mvnls	r5, #0
   214a4:	bls	21340 <square_open@@Base+0x2a0>
   214a8:	ldr	r2, [pc, #72]	; 214f8 <square_open@@Base+0x458>
   214ac:	mov	r3, r8
   214b0:	mov	r1, #2
   214b4:	mvn	r5, #0
   214b8:	add	r2, pc, r2
   214bc:	bl	1493c <vcos_log_impl@plt>
   214c0:	b	21340 <square_open@@Base+0x2a0>
   214c4:	bl	14804 <__stack_chk_fail@plt>
   214c8:	cdpcc	6, 14, cr8, cr7, cr2, {6}
   214cc:	svccc	0x0002d289
   214d0:			; <UNDEFINED> instruction: 0x3ef919ce
   214d4:			; <UNDEFINED> instruction: 0x3d29a971
   214d8:			; <UNDEFINED> instruction: 0xbd29a971
   214dc:	stclcc	12, cr12, [ip, #820]	; 0x334
   214e0:	mvnsmi	r0, #0
   214e4:	strdeq	r8, [r1], -r4
   214e8:	andeq	r0, r0, r4, lsr r3
   214ec:	andeq	r7, r0, r4, lsl #25
   214f0:	andeq	r7, r0, r4, asr #24
   214f4:	andeq	r0, r0, r8, lsr r3
   214f8:	andeq	r7, r0, r4, lsl #23

000214fc <teapot_open@@Base>:
   214fc:	ldr	r2, [pc, #80]	; 21554 <teapot_open@@Base+0x58>
   21500:	mov	r3, r0
   21504:	ldr	r1, [pc, #76]	; 21558 <teapot_open@@Base+0x5c>
   21508:	mov	r0, #0
   2150c:	push	{r4, r5, r6}
   21510:	add	r2, pc, r2
   21514:	ldr	r6, [pc, #64]	; 2155c <teapot_open@@Base+0x60>
   21518:	ldr	r5, [pc, #64]	; 21560 <teapot_open@@Base+0x64>
   2151c:	ldr	r4, [pc, #64]	; 21564 <teapot_open@@Base+0x68>
   21520:	add	r6, pc, r6
   21524:	ldr	ip, [pc, #60]	; 21568 <teapot_open@@Base+0x6c>
   21528:	add	r5, pc, r5
   2152c:	add	r4, pc, r4
   21530:	str	r6, [r3, #356]	; 0x164
   21534:	str	r5, [r3, #376]	; 0x178
   21538:	add	ip, pc, ip
   2153c:	str	r4, [r3, #380]	; 0x17c
   21540:	str	ip, [r3, #388]	; 0x184
   21544:	ldr	r2, [r2, r1]
   21548:	pop	{r4, r5, r6}
   2154c:	str	r2, [r3, #360]	; 0x168
   21550:	bx	lr
   21554:	andeq	r8, r1, r8, ror #21
   21558:	andeq	r0, r0, r0, lsl r3
   2155c:			; <UNDEFINED> instruction: 0xfffffdc4
   21560:			; <UNDEFINED> instruction: 0xfffffc8c
   21564:			; <UNDEFINED> instruction: 0xfffffc54
   21568:			; <UNDEFINED> instruction: 0xfffffbc0
   2156c:	ldr	r3, [pc, #644]	; 217f8 <teapot_open@@Base+0x2fc>
   21570:	ldr	r1, [pc, #644]	; 217fc <teapot_open@@Base+0x300>
   21574:	add	r3, pc, r3
   21578:	ldr	r2, [pc, #640]	; 21800 <teapot_open@@Base+0x304>
   2157c:	push	{r4, r5, r6, r7, r8, r9, lr}
   21580:	sub	sp, sp, #20
   21584:	ldr	r7, [r3, r1]
   21588:	mov	r6, r0
   2158c:	ldr	r1, [r7]
   21590:	str	r1, [sp, #12]
   21594:	ldr	r9, [r3, r2]
   21598:	ldr	r3, [r9]
   2159c:	cmp	r3, #4
   215a0:	bhi	21780 <teapot_open@@Base+0x284>
   215a4:	ldr	r5, [pc, #600]	; 21804 <teapot_open@@Base+0x308>
   215a8:	vldr	s0, [pc, #576]	; 217f0 <teapot_open@@Base+0x2f4>
   215ac:	vldr	s1, [pc, #576]	; 217f4 <teapot_open@@Base+0x2f8>
   215b0:	vmov.f32	s3, s0
   215b4:	add	r5, pc, r5
   215b8:	ldr	r8, [pc, #584]	; 21808 <teapot_open@@Base+0x30c>
   215bc:	mov	r4, #0
   215c0:	add	r8, pc, r8
   215c4:	vmov.f32	s2, s1
   215c8:	bl	14498 <glClearColor@plt>
   215cc:	ldr	r1, [r5]
   215d0:	movw	r0, #36160	; 0x8d40
   215d4:	bl	148d0 <glBindFramebuffer@plt>
   215d8:	mov	r2, #1024	; 0x400
   215dc:	mov	r3, r2
   215e0:	mov	r1, r4
   215e4:	mov	r0, r4
   215e8:	bl	14960 <glViewport@plt>
   215ec:	mov	r0, #16640	; 0x4100
   215f0:	bl	14318 <glClear@plt>
   215f4:	ldr	r0, [r8, #144]	; 0x90
   215f8:	bl	14474 <glUseProgram@plt>
   215fc:	movw	r0, #33984	; 0x84c0
   21600:	bl	1457c <glActiveTexture@plt>
   21604:	movw	r0, #36197	; 0x8d65
   21608:	ldr	r1, [r6, #320]	; 0x140
   2160c:	bl	14660 <glBindTexture@plt>
   21610:	ldr	r1, [r5, #4]
   21614:	movw	r0, #34962	; 0x8892
   21618:	bl	148c4 <glBindBuffer@plt>
   2161c:	ldr	r0, [r8, #212]	; 0xd4
   21620:	bl	14540 <glEnableVertexAttribArray@plt>
   21624:	ldr	r0, [r8, #212]	; 0xd4
   21628:	mov	r3, r4
   2162c:	mov	r1, #2
   21630:	movw	r2, #5126	; 0x1406
   21634:	str	r4, [sp]
   21638:	str	r4, [sp, #4]
   2163c:	bl	148a0 <glVertexAttribPointer@plt>
   21640:	mov	r1, r4
   21644:	mov	r0, #4
   21648:	mov	r2, #6
   2164c:	bl	1484c <glDrawArrays@plt>
   21650:	bl	14a8c <glFinish@plt>
   21654:	ldr	r0, [r5, #16]
   21658:	mov	r1, #1
   2165c:	add	r2, sp, #8
   21660:	bl	143f0 <vcsm_lock_cache@plt>
   21664:	ldr	r3, [r9]
   21668:	subs	r8, r0, #0
   2166c:	beq	217c0 <teapot_open@@Base+0x2c4>
   21670:	cmp	r3, #4
   21674:	bhi	217a0 <teapot_open@@Base+0x2a4>
   21678:	ldr	r3, [pc, #396]	; 2180c <teapot_open@@Base+0x310>
   2167c:	movw	r1, #4229	; 0x1085
   21680:	movt	r1, #2114	; 0x842
   21684:	add	r3, pc, r3
   21688:	ldr	r2, [r3, #20]
   2168c:	add	r2, r2, #1
   21690:	lsr	r4, r2, #5
   21694:	umull	r0, r4, r1, r4
   21698:	rsb	r4, r4, r4, lsl #5
   2169c:	sub	r4, r2, r4, lsl #5
   216a0:	str	r4, [r3, #20]
   216a4:	lsl	r4, r4, #2
   216a8:	add	r5, r4, #4194304	; 0x400000
   216ac:	add	r4, r8, r4
   216b0:	add	r5, r8, r5
   216b4:	mov	r0, r4
   216b8:	mvn	r1, #0
   216bc:	add	r4, r4, #4096	; 0x1000
   216c0:	mov	r2, #128	; 0x80
   216c4:	bl	14414 <memset@plt>
   216c8:	cmp	r4, r5
   216cc:	bne	216b4 <teapot_open@@Base+0x1b8>
   216d0:	mov	r0, r8
   216d4:	ldr	r5, [pc, #308]	; 21810 <teapot_open@@Base+0x314>
   216d8:	bl	143d8 <vcsm_unlock_ptr@plt>
   216dc:	mov	r1, #0
   216e0:	movw	r0, #36160	; 0x8d40
   216e4:	mov	r4, r1
   216e8:	bl	148d0 <glBindFramebuffer@plt>
   216ec:	add	r0, r6, #252	; 0xfc
   216f0:	add	r5, pc, r5
   216f4:	ldm	r0, {r0, r1, r2, r3}
   216f8:	bl	14960 <glViewport@plt>
   216fc:	ldr	r0, [r5, #420]	; 0x1a4
   21700:	bl	14474 <glUseProgram@plt>
   21704:	movw	r0, #33984	; 0x84c0
   21708:	bl	1457c <glActiveTexture@plt>
   2170c:	ldr	r3, [pc, #256]	; 21814 <teapot_open@@Base+0x318>
   21710:	movw	r0, #3553	; 0xde1
   21714:	add	r3, pc, r3
   21718:	ldr	r1, [r3, #24]
   2171c:	bl	14660 <glBindTexture@plt>
   21720:	ldr	r0, [r5, #488]	; 0x1e8
   21724:	bl	14540 <glEnableVertexAttribArray@plt>
   21728:	ldr	r0, [r5, #488]	; 0x1e8
   2172c:	mov	r3, r4
   21730:	mov	r1, #2
   21734:	movw	r2, #5126	; 0x1406
   21738:	str	r4, [sp]
   2173c:	str	r4, [sp, #4]
   21740:	bl	148a0 <glVertexAttribPointer@plt>
   21744:	mov	r1, r4
   21748:	mov	r2, #6
   2174c:	mov	r0, #4
   21750:	bl	1484c <glDrawArrays@plt>
   21754:	ldr	r0, [r5, #488]	; 0x1e8
   21758:	bl	14438 <glDisableVertexAttribArray@plt>
   2175c:	mov	r0, r4
   21760:	bl	14474 <glUseProgram@plt>
   21764:	mov	r0, r4
   21768:	ldr	r2, [sp, #12]
   2176c:	ldr	r3, [r7]
   21770:	cmp	r2, r3
   21774:	bne	217ec <teapot_open@@Base+0x2f0>
   21778:	add	sp, sp, #20
   2177c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21780:	ldr	r2, [pc, #144]	; 21818 <teapot_open@@Base+0x31c>
   21784:	mov	r0, r9
   21788:	ldr	r3, [pc, #140]	; 2181c <teapot_open@@Base+0x320>
   2178c:	mov	r1, #5
   21790:	add	r2, pc, r2
   21794:	add	r3, pc, r3
   21798:	bl	1493c <vcos_log_impl@plt>
   2179c:	b	215a4 <teapot_open@@Base+0xa8>
   217a0:	ldr	r2, [pc, #120]	; 21820 <teapot_open@@Base+0x324>
   217a4:	mov	r0, r9
   217a8:	ldr	r3, [r5, #16]
   217ac:	mov	r1, #5
   217b0:	str	r8, [sp]
   217b4:	add	r2, pc, r2
   217b8:	bl	1493c <vcos_log_impl@plt>
   217bc:	b	21678 <teapot_open@@Base+0x17c>
   217c0:	cmp	r3, #1
   217c4:	mvnls	r0, #0
   217c8:	bls	21768 <teapot_open@@Base+0x26c>
   217cc:	ldr	r2, [pc, #80]	; 21824 <teapot_open@@Base+0x328>
   217d0:	mov	r0, r9
   217d4:	ldr	r3, [r5, #16]
   217d8:	mov	r1, #2
   217dc:	add	r2, pc, r2
   217e0:	bl	1493c <vcos_log_impl@plt>
   217e4:	mvn	r0, #0
   217e8:	b	21768 <teapot_open@@Base+0x26c>
   217ec:	bl	14804 <__stack_chk_fail@plt>
   217f0:	cmnmi	pc, #0
   217f4:	andeq	r0, r0, r0
   217f8:	andeq	r8, r1, r4, lsl #21
   217fc:	andeq	r0, r0, r4, lsr r3
   21800:	andeq	r0, r0, r8, lsr r3
   21804:	andeq	lr, r1, r4, lsl #1
   21808:	andeq	r9, r1, r8, lsr #16
   2180c:			; <UNDEFINED> instruction: 0x0001dfb4
   21810:	strdeq	r9, [r1], -r8
   21814:	andeq	sp, r1, r4, lsr #30
   21818:	andeq	r1, r0, r8, lsl #17
   2181c:	andeq	r7, r0, r8, asr #17
   21820:	andeq	r7, r0, ip, lsr r9
   21824:	andeq	r7, r0, r8, ror #17
   21828:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2182c:	sub	sp, sp, #8
   21830:	mov	r5, r0
   21834:	bl	143cc <vcsm_init@plt>
   21838:	ldr	r4, [pc, #612]	; 21aa4 <teapot_open@@Base+0x5a8>
   2183c:	ldr	r2, [pc, #612]	; 21aa8 <teapot_open@@Base+0x5ac>
   21840:	add	r4, pc, r4
   21844:	ldr	r7, [r4, r2]
   21848:	mov	r3, r4
   2184c:	ldr	r3, [r7]
   21850:	cmp	r3, #4
   21854:	mov	r1, r0
   21858:	bhi	219b4 <teapot_open@@Base+0x4b8>
   2185c:	ldr	r3, [pc, #584]	; 21aac <teapot_open@@Base+0x5b0>
   21860:	mov	r0, r5
   21864:	add	r3, pc, r3
   21868:	add	r3, r3, #40	; 0x28
   2186c:	str	r3, [r5, #308]	; 0x134
   21870:	bl	1e3e8 <raspitexutil_gl_init_2_0@@Base>
   21874:	subs	r6, r0, #0
   21878:	beq	21888 <teapot_open@@Base+0x38c>
   2187c:	mov	r0, r6
   21880:	add	sp, sp, #8
   21884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21888:	ldr	r8, [pc, #544]	; 21ab0 <teapot_open@@Base+0x5b4>
   2188c:	mov	sl, #0
   21890:	ldr	r4, [pc, #540]	; 21ab4 <teapot_open@@Base+0x5b8>
   21894:	add	r8, pc, r8
   21898:	add	r4, pc, r4
   2189c:	mov	r0, r8
   218a0:	bl	1e7e4 <raspitexutil_build_shader_program@@Base>
   218a4:	ldr	r0, [r8, #144]	; 0x90
   218a8:	bl	14474 <glUseProgram@plt>
   218ac:	mov	r1, r6
   218b0:	ldr	r0, [r8, #148]	; 0x94
   218b4:	mov	r9, r4
   218b8:	bl	147a4 <glUniform1i@plt>
   218bc:	add	r0, r8, #276	; 0x114
   218c0:	bl	1e7e4 <raspitexutil_build_shader_program@@Base>
   218c4:	mov	r6, r0
   218c8:	ldr	r0, [r8, #420]	; 0x1a4
   218cc:	bl	14474 <glUseProgram@plt>
   218d0:	ldr	r0, [r8, #424]	; 0x1a8
   218d4:	mov	r1, sl
   218d8:	bl	147a4 <glUniform1i@plt>
   218dc:	mov	r1, r4
   218e0:	mov	r0, #1
   218e4:	bl	14564 <glGenFramebuffers@plt>
   218e8:	ldr	r1, [r9], #24
   218ec:	movw	r0, #36160	; 0x8d40
   218f0:	bl	148d0 <glBindFramebuffer@plt>
   218f4:	mov	r0, #1
   218f8:	mov	r1, r9
   218fc:	bl	14a5c <glGenTextures@plt>
   21900:	ldr	r1, [r4, #24]
   21904:	movw	r0, #3553	; 0xde1
   21908:	bl	14660 <glBindTexture@plt>
   2190c:	movw	r0, #3553	; 0xde1
   21910:	mov	r1, #10240	; 0x2800
   21914:	mov	r2, #9728	; 0x2600
   21918:	bl	149e4 <glTexParameteri@plt>
   2191c:	movw	r1, #10241	; 0x2801
   21920:	mov	r2, #9728	; 0x2600
   21924:	movw	r0, #3553	; 0xde1
   21928:	bl	149e4 <glTexParameteri@plt>
   2192c:	ldr	r0, [pc, #388]	; 21ab8 <teapot_open@@Base+0x5bc>
   21930:	add	r0, pc, r0
   21934:	bl	148ac <puts@plt>
   21938:	mov	ip, #1024	; 0x400
   2193c:	ldr	r0, [r5, #296]	; 0x128
   21940:	add	r3, r4, #8
   21944:	str	sl, [sp]
   21948:	mov	r1, sl
   2194c:	movw	r2, #12483	; 0x30c3
   21950:	str	ip, [r4, #8]
   21954:	movt	r2, #2457	; 0x999
   21958:	str	ip, [r4, #12]
   2195c:	bl	1472c <eglCreateImageKHR@plt>
   21960:	cmp	r0, sl
   21964:	str	r0, [r4, #28]
   21968:	beq	21978 <teapot_open@@Base+0x47c>
   2196c:	ldr	r3, [r4, #16]
   21970:	cmp	r3, sl
   21974:	bne	219dc <teapot_open@@Base+0x4e0>
   21978:	ldr	r3, [r7]
   2197c:	cmp	r3, #1
   21980:	bls	21a20 <teapot_open@@Base+0x524>
   21984:	ldr	r3, [pc, #304]	; 21abc <teapot_open@@Base+0x5c0>
   21988:	mov	r0, r7
   2198c:	ldr	r2, [pc, #300]	; 21ac0 <teapot_open@@Base+0x5c4>
   21990:	mov	r1, #2
   21994:	add	r3, pc, r3
   21998:	mvn	r6, #0
   2199c:	add	r2, pc, r2
   219a0:	add	r3, r3, #20
   219a4:	bl	1493c <vcos_log_impl@plt>
   219a8:	mov	r0, r6
   219ac:	add	sp, sp, #8
   219b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   219b4:	ldr	r3, [pc, #264]	; 21ac4 <teapot_open@@Base+0x5c8>
   219b8:	mov	r0, r7
   219bc:	ldr	r2, [pc, #260]	; 21ac8 <teapot_open@@Base+0x5cc>
   219c0:	add	r3, pc, r3
   219c4:	str	r1, [sp]
   219c8:	add	r3, r3, #20
   219cc:	mov	r1, #5
   219d0:	add	r2, pc, r2
   219d4:	bl	1493c <vcos_log_impl@plt>
   219d8:	b	2185c <teapot_open@@Base+0x360>
   219dc:	mov	r1, r0
   219e0:	movw	r0, #3553	; 0xde1
   219e4:	bl	142e8 <glEGLImageTargetTexture2DOES@plt>
   219e8:	ldr	r3, [r4, #24]
   219ec:	movw	r0, #36160	; 0x8d40
   219f0:	movw	r1, #36064	; 0x8ce0
   219f4:	movw	r2, #3553	; 0xde1
   219f8:	str	sl, [sp]
   219fc:	bl	14330 <glFramebufferTexture2D@plt>
   21a00:	movw	r0, #36160	; 0x8d40
   21a04:	bl	14528 <glCheckFramebufferStatus@plt>
   21a08:	movw	r3, #36053	; 0x8cd5
   21a0c:	cmp	r0, r3
   21a10:	beq	21a4c <teapot_open@@Base+0x550>
   21a14:	ldr	r3, [r7]
   21a18:	cmp	r3, #1
   21a1c:	bhi	21a30 <teapot_open@@Base+0x534>
   21a20:	mvn	r6, #0
   21a24:	mov	r0, r6
   21a28:	add	sp, sp, #8
   21a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21a30:	ldr	r2, [pc, #148]	; 21acc <teapot_open@@Base+0x5d0>
   21a34:	mov	r0, r7
   21a38:	mov	r1, #2
   21a3c:	mvn	r6, #0
   21a40:	add	r2, pc, r2
   21a44:	bl	1493c <vcos_log_impl@plt>
   21a48:	b	2187c <teapot_open@@Base+0x380>
   21a4c:	mov	r1, sl
   21a50:	movw	r0, #36160	; 0x8d40
   21a54:	bl	148d0 <glBindFramebuffer@plt>
   21a58:	add	r1, r4, #4
   21a5c:	mov	r0, #1
   21a60:	bl	14780 <glGenBuffers@plt>
   21a64:	ldr	r1, [r4, #4]
   21a68:	movw	r0, #34962	; 0x8892
   21a6c:	bl	148c4 <glBindBuffer@plt>
   21a70:	ldr	r2, [pc, #88]	; 21ad0 <teapot_open@@Base+0x5d4>
   21a74:	movw	r0, #34962	; 0x8892
   21a78:	mov	r1, #48	; 0x30
   21a7c:	add	r2, pc, r2
   21a80:	movw	r3, #35044	; 0x88e4
   21a84:	bl	14588 <glBufferData@plt>
   21a88:	vldr	s0, [pc, #16]	; 21aa0 <teapot_open@@Base+0x5a4>
   21a8c:	vmov.f32	s1, s0
   21a90:	vmov.f32	s2, s0
   21a94:	vmov.f32	s3, s0
   21a98:	bl	14498 <glClearColor@plt>
   21a9c:	b	2187c <teapot_open@@Base+0x380>
   21aa0:	andeq	r0, r0, r0
   21aa4:			; <UNDEFINED> instruction: 0x000187b8
   21aa8:	andeq	r0, r0, r8, lsr r3
   21aac:	strdeq	r7, [r0], -r8
   21ab0:	andeq	r9, r1, r4, asr r5
   21ab4:	andeq	sp, r1, r0, lsr #27
   21ab8:	strdeq	r7, [r0], -r4
   21abc:	andeq	r7, r0, r8, asr #13
   21ac0:	muleq	r0, r4, r7
   21ac4:	muleq	r0, ip, r6
   21ac8:	andeq	r7, r0, r0, asr #14
   21acc:	andeq	r7, r0, r8, lsl r7
   21ad0:	andeq	r9, r1, ip, lsr r3

00021ad4 <vcsm_square_open@@Base>:
   21ad4:	push	{r3, r4, r5, lr}
   21ad8:	mov	r4, r0
   21adc:	ldr	r5, [pc, #92]	; 21b40 <vcsm_square_open@@Base+0x6c>
   21ae0:	ldr	r3, [pc, #92]	; 21b44 <vcsm_square_open@@Base+0x70>
   21ae4:	add	r5, pc, r5
   21ae8:	ldr	r0, [r5, r3]
   21aec:	ldr	r3, [r0]
   21af0:	cmp	r3, #4
   21af4:	bls	21b14 <vcsm_square_open@@Base+0x40>
   21af8:	ldr	r3, [pc, #72]	; 21b48 <vcsm_square_open@@Base+0x74>
   21afc:	mov	r1, #5
   21b00:	ldr	r2, [pc, #68]	; 21b4c <vcsm_square_open@@Base+0x78>
   21b04:	add	r3, pc, r3
   21b08:	add	r2, pc, r2
   21b0c:	add	r3, r3, #84	; 0x54
   21b10:	bl	1493c <vcos_log_impl@plt>
   21b14:	ldr	r3, [pc, #52]	; 21b50 <vcsm_square_open@@Base+0x7c>
   21b18:	mov	r0, #0
   21b1c:	ldr	r1, [pc, #48]	; 21b54 <vcsm_square_open@@Base+0x80>
   21b20:	ldr	r2, [pc, #48]	; 21b58 <vcsm_square_open@@Base+0x84>
   21b24:	add	r1, pc, r1
   21b28:	str	r1, [r4, #356]	; 0x164
   21b2c:	add	r2, pc, r2
   21b30:	str	r2, [r4, #380]	; 0x17c
   21b34:	ldr	r3, [r5, r3]
   21b38:	str	r3, [r4, #364]	; 0x16c
   21b3c:	pop	{r3, r4, r5, pc}
   21b40:	andeq	r8, r1, r4, lsl r5
   21b44:	andeq	r0, r0, r8, lsr r3
   21b48:	andeq	r7, r0, r8, asr r5
   21b4c:	andeq	r1, r0, r0, lsl r5
   21b50:	andeq	r0, r0, r4, lsl #6
   21b54:			; <UNDEFINED> instruction: 0xfffffcfc
   21b58:			; <UNDEFINED> instruction: 0xfffffa38
   21b5c:	subs	r2, r1, #1
   21b60:	bxeq	lr
   21b64:	bcc	21d3c <vcsm_square_open@@Base+0x268>
   21b68:	cmp	r0, r1
   21b6c:	bls	21d20 <vcsm_square_open@@Base+0x24c>
   21b70:	tst	r1, r2
   21b74:	beq	21d2c <vcsm_square_open@@Base+0x258>
   21b78:	clz	r3, r0
   21b7c:	clz	r2, r1
   21b80:	sub	r3, r2, r3
   21b84:	rsbs	r3, r3, #31
   21b88:	addne	r3, r3, r3, lsl #1
   21b8c:	mov	r2, #0
   21b90:	addne	pc, pc, r3, lsl #2
   21b94:	nop	{0}
   21b98:	cmp	r0, r1, lsl #31
   21b9c:	adc	r2, r2, r2
   21ba0:	subcs	r0, r0, r1, lsl #31
   21ba4:	cmp	r0, r1, lsl #30
   21ba8:	adc	r2, r2, r2
   21bac:	subcs	r0, r0, r1, lsl #30
   21bb0:	cmp	r0, r1, lsl #29
   21bb4:	adc	r2, r2, r2
   21bb8:	subcs	r0, r0, r1, lsl #29
   21bbc:	cmp	r0, r1, lsl #28
   21bc0:	adc	r2, r2, r2
   21bc4:	subcs	r0, r0, r1, lsl #28
   21bc8:	cmp	r0, r1, lsl #27
   21bcc:	adc	r2, r2, r2
   21bd0:	subcs	r0, r0, r1, lsl #27
   21bd4:	cmp	r0, r1, lsl #26
   21bd8:	adc	r2, r2, r2
   21bdc:	subcs	r0, r0, r1, lsl #26
   21be0:	cmp	r0, r1, lsl #25
   21be4:	adc	r2, r2, r2
   21be8:	subcs	r0, r0, r1, lsl #25
   21bec:	cmp	r0, r1, lsl #24
   21bf0:	adc	r2, r2, r2
   21bf4:	subcs	r0, r0, r1, lsl #24
   21bf8:	cmp	r0, r1, lsl #23
   21bfc:	adc	r2, r2, r2
   21c00:	subcs	r0, r0, r1, lsl #23
   21c04:	cmp	r0, r1, lsl #22
   21c08:	adc	r2, r2, r2
   21c0c:	subcs	r0, r0, r1, lsl #22
   21c10:	cmp	r0, r1, lsl #21
   21c14:	adc	r2, r2, r2
   21c18:	subcs	r0, r0, r1, lsl #21
   21c1c:	cmp	r0, r1, lsl #20
   21c20:	adc	r2, r2, r2
   21c24:	subcs	r0, r0, r1, lsl #20
   21c28:	cmp	r0, r1, lsl #19
   21c2c:	adc	r2, r2, r2
   21c30:	subcs	r0, r0, r1, lsl #19
   21c34:	cmp	r0, r1, lsl #18
   21c38:	adc	r2, r2, r2
   21c3c:	subcs	r0, r0, r1, lsl #18
   21c40:	cmp	r0, r1, lsl #17
   21c44:	adc	r2, r2, r2
   21c48:	subcs	r0, r0, r1, lsl #17
   21c4c:	cmp	r0, r1, lsl #16
   21c50:	adc	r2, r2, r2
   21c54:	subcs	r0, r0, r1, lsl #16
   21c58:	cmp	r0, r1, lsl #15
   21c5c:	adc	r2, r2, r2
   21c60:	subcs	r0, r0, r1, lsl #15
   21c64:	cmp	r0, r1, lsl #14
   21c68:	adc	r2, r2, r2
   21c6c:	subcs	r0, r0, r1, lsl #14
   21c70:	cmp	r0, r1, lsl #13
   21c74:	adc	r2, r2, r2
   21c78:	subcs	r0, r0, r1, lsl #13
   21c7c:	cmp	r0, r1, lsl #12
   21c80:	adc	r2, r2, r2
   21c84:	subcs	r0, r0, r1, lsl #12
   21c88:	cmp	r0, r1, lsl #11
   21c8c:	adc	r2, r2, r2
   21c90:	subcs	r0, r0, r1, lsl #11
   21c94:	cmp	r0, r1, lsl #10
   21c98:	adc	r2, r2, r2
   21c9c:	subcs	r0, r0, r1, lsl #10
   21ca0:	cmp	r0, r1, lsl #9
   21ca4:	adc	r2, r2, r2
   21ca8:	subcs	r0, r0, r1, lsl #9
   21cac:	cmp	r0, r1, lsl #8
   21cb0:	adc	r2, r2, r2
   21cb4:	subcs	r0, r0, r1, lsl #8
   21cb8:	cmp	r0, r1, lsl #7
   21cbc:	adc	r2, r2, r2
   21cc0:	subcs	r0, r0, r1, lsl #7
   21cc4:	cmp	r0, r1, lsl #6
   21cc8:	adc	r2, r2, r2
   21ccc:	subcs	r0, r0, r1, lsl #6
   21cd0:	cmp	r0, r1, lsl #5
   21cd4:	adc	r2, r2, r2
   21cd8:	subcs	r0, r0, r1, lsl #5
   21cdc:	cmp	r0, r1, lsl #4
   21ce0:	adc	r2, r2, r2
   21ce4:	subcs	r0, r0, r1, lsl #4
   21ce8:	cmp	r0, r1, lsl #3
   21cec:	adc	r2, r2, r2
   21cf0:	subcs	r0, r0, r1, lsl #3
   21cf4:	cmp	r0, r1, lsl #2
   21cf8:	adc	r2, r2, r2
   21cfc:	subcs	r0, r0, r1, lsl #2
   21d00:	cmp	r0, r1, lsl #1
   21d04:	adc	r2, r2, r2
   21d08:	subcs	r0, r0, r1, lsl #1
   21d0c:	cmp	r0, r1
   21d10:	adc	r2, r2, r2
   21d14:	subcs	r0, r0, r1
   21d18:	mov	r0, r2
   21d1c:	bx	lr
   21d20:	moveq	r0, #1
   21d24:	movne	r0, #0
   21d28:	bx	lr
   21d2c:	clz	r2, r1
   21d30:	rsb	r2, r2, #31
   21d34:	lsr	r0, r0, r2
   21d38:	bx	lr
   21d3c:	cmp	r0, #0
   21d40:	mvnne	r0, #0
   21d44:	b	223e4 <vcsm_square_open@@Base+0x910>
   21d48:	cmp	r1, #0
   21d4c:	beq	21d3c <vcsm_square_open@@Base+0x268>
   21d50:	push	{r0, r1, lr}
   21d54:	bl	21b5c <vcsm_square_open@@Base+0x88>
   21d58:	pop	{r1, r2, lr}
   21d5c:	mul	r3, r2, r0
   21d60:	sub	r1, r1, r3
   21d64:	bx	lr
   21d68:	cmp	r1, #0
   21d6c:	beq	21f78 <vcsm_square_open@@Base+0x4a4>
   21d70:	eor	ip, r0, r1
   21d74:	rsbmi	r1, r1, #0
   21d78:	subs	r2, r1, #1
   21d7c:	beq	21f44 <vcsm_square_open@@Base+0x470>
   21d80:	movs	r3, r0
   21d84:	rsbmi	r3, r0, #0
   21d88:	cmp	r3, r1
   21d8c:	bls	21f50 <vcsm_square_open@@Base+0x47c>
   21d90:	tst	r1, r2
   21d94:	beq	21f60 <vcsm_square_open@@Base+0x48c>
   21d98:	clz	r2, r3
   21d9c:	clz	r0, r1
   21da0:	sub	r2, r0, r2
   21da4:	rsbs	r2, r2, #31
   21da8:	addne	r2, r2, r2, lsl #1
   21dac:	mov	r0, #0
   21db0:	addne	pc, pc, r2, lsl #2
   21db4:	nop	{0}
   21db8:	cmp	r3, r1, lsl #31
   21dbc:	adc	r0, r0, r0
   21dc0:	subcs	r3, r3, r1, lsl #31
   21dc4:	cmp	r3, r1, lsl #30
   21dc8:	adc	r0, r0, r0
   21dcc:	subcs	r3, r3, r1, lsl #30
   21dd0:	cmp	r3, r1, lsl #29
   21dd4:	adc	r0, r0, r0
   21dd8:	subcs	r3, r3, r1, lsl #29
   21ddc:	cmp	r3, r1, lsl #28
   21de0:	adc	r0, r0, r0
   21de4:	subcs	r3, r3, r1, lsl #28
   21de8:	cmp	r3, r1, lsl #27
   21dec:	adc	r0, r0, r0
   21df0:	subcs	r3, r3, r1, lsl #27
   21df4:	cmp	r3, r1, lsl #26
   21df8:	adc	r0, r0, r0
   21dfc:	subcs	r3, r3, r1, lsl #26
   21e00:	cmp	r3, r1, lsl #25
   21e04:	adc	r0, r0, r0
   21e08:	subcs	r3, r3, r1, lsl #25
   21e0c:	cmp	r3, r1, lsl #24
   21e10:	adc	r0, r0, r0
   21e14:	subcs	r3, r3, r1, lsl #24
   21e18:	cmp	r3, r1, lsl #23
   21e1c:	adc	r0, r0, r0
   21e20:	subcs	r3, r3, r1, lsl #23
   21e24:	cmp	r3, r1, lsl #22
   21e28:	adc	r0, r0, r0
   21e2c:	subcs	r3, r3, r1, lsl #22
   21e30:	cmp	r3, r1, lsl #21
   21e34:	adc	r0, r0, r0
   21e38:	subcs	r3, r3, r1, lsl #21
   21e3c:	cmp	r3, r1, lsl #20
   21e40:	adc	r0, r0, r0
   21e44:	subcs	r3, r3, r1, lsl #20
   21e48:	cmp	r3, r1, lsl #19
   21e4c:	adc	r0, r0, r0
   21e50:	subcs	r3, r3, r1, lsl #19
   21e54:	cmp	r3, r1, lsl #18
   21e58:	adc	r0, r0, r0
   21e5c:	subcs	r3, r3, r1, lsl #18
   21e60:	cmp	r3, r1, lsl #17
   21e64:	adc	r0, r0, r0
   21e68:	subcs	r3, r3, r1, lsl #17
   21e6c:	cmp	r3, r1, lsl #16
   21e70:	adc	r0, r0, r0
   21e74:	subcs	r3, r3, r1, lsl #16
   21e78:	cmp	r3, r1, lsl #15
   21e7c:	adc	r0, r0, r0
   21e80:	subcs	r3, r3, r1, lsl #15
   21e84:	cmp	r3, r1, lsl #14
   21e88:	adc	r0, r0, r0
   21e8c:	subcs	r3, r3, r1, lsl #14
   21e90:	cmp	r3, r1, lsl #13
   21e94:	adc	r0, r0, r0
   21e98:	subcs	r3, r3, r1, lsl #13
   21e9c:	cmp	r3, r1, lsl #12
   21ea0:	adc	r0, r0, r0
   21ea4:	subcs	r3, r3, r1, lsl #12
   21ea8:	cmp	r3, r1, lsl #11
   21eac:	adc	r0, r0, r0
   21eb0:	subcs	r3, r3, r1, lsl #11
   21eb4:	cmp	r3, r1, lsl #10
   21eb8:	adc	r0, r0, r0
   21ebc:	subcs	r3, r3, r1, lsl #10
   21ec0:	cmp	r3, r1, lsl #9
   21ec4:	adc	r0, r0, r0
   21ec8:	subcs	r3, r3, r1, lsl #9
   21ecc:	cmp	r3, r1, lsl #8
   21ed0:	adc	r0, r0, r0
   21ed4:	subcs	r3, r3, r1, lsl #8
   21ed8:	cmp	r3, r1, lsl #7
   21edc:	adc	r0, r0, r0
   21ee0:	subcs	r3, r3, r1, lsl #7
   21ee4:	cmp	r3, r1, lsl #6
   21ee8:	adc	r0, r0, r0
   21eec:	subcs	r3, r3, r1, lsl #6
   21ef0:	cmp	r3, r1, lsl #5
   21ef4:	adc	r0, r0, r0
   21ef8:	subcs	r3, r3, r1, lsl #5
   21efc:	cmp	r3, r1, lsl #4
   21f00:	adc	r0, r0, r0
   21f04:	subcs	r3, r3, r1, lsl #4
   21f08:	cmp	r3, r1, lsl #3
   21f0c:	adc	r0, r0, r0
   21f10:	subcs	r3, r3, r1, lsl #3
   21f14:	cmp	r3, r1, lsl #2
   21f18:	adc	r0, r0, r0
   21f1c:	subcs	r3, r3, r1, lsl #2
   21f20:	cmp	r3, r1, lsl #1
   21f24:	adc	r0, r0, r0
   21f28:	subcs	r3, r3, r1, lsl #1
   21f2c:	cmp	r3, r1
   21f30:	adc	r0, r0, r0
   21f34:	subcs	r3, r3, r1
   21f38:	cmp	ip, #0
   21f3c:	rsbmi	r0, r0, #0
   21f40:	bx	lr
   21f44:	teq	ip, r0
   21f48:	rsbmi	r0, r0, #0
   21f4c:	bx	lr
   21f50:	movcc	r0, #0
   21f54:	asreq	r0, ip, #31
   21f58:	orreq	r0, r0, #1
   21f5c:	bx	lr
   21f60:	clz	r2, r1
   21f64:	rsb	r2, r2, #31
   21f68:	cmp	ip, #0
   21f6c:	lsr	r0, r3, r2
   21f70:	rsbmi	r0, r0, #0
   21f74:	bx	lr
   21f78:	cmp	r0, #0
   21f7c:	mvngt	r0, #-2147483648	; 0x80000000
   21f80:	movlt	r0, #-2147483648	; 0x80000000
   21f84:	b	223e4 <vcsm_square_open@@Base+0x910>
   21f88:	cmp	r1, #0
   21f8c:	beq	21f78 <vcsm_square_open@@Base+0x4a4>
   21f90:	push	{r0, r1, lr}
   21f94:	bl	21d70 <vcsm_square_open@@Base+0x29c>
   21f98:	pop	{r1, r2, lr}
   21f9c:	mul	r3, r2, r0
   21fa0:	sub	r1, r1, r3
   21fa4:	bx	lr
   21fa8:	eor	r1, r1, #-2147483648	; 0x80000000
   21fac:	b	21fb4 <vcsm_square_open@@Base+0x4e0>
   21fb0:	eor	r3, r3, #-2147483648	; 0x80000000
   21fb4:	push	{r4, r5, lr}
   21fb8:	lsl	r4, r1, #1
   21fbc:	lsl	r5, r3, #1
   21fc0:	teq	r4, r5
   21fc4:	teqeq	r0, r2
   21fc8:	orrsne	ip, r4, r0
   21fcc:	orrsne	ip, r5, r2
   21fd0:	mvnsne	ip, r4, asr #21
   21fd4:	mvnsne	ip, r5, asr #21
   21fd8:	beq	221c4 <vcsm_square_open@@Base+0x6f0>
   21fdc:	lsr	r4, r4, #21
   21fe0:	rsbs	r5, r4, r5, lsr #21
   21fe4:	rsblt	r5, r5, #0
   21fe8:	ble	22008 <vcsm_square_open@@Base+0x534>
   21fec:	add	r4, r4, r5
   21ff0:	eor	r2, r0, r2
   21ff4:	eor	r3, r1, r3
   21ff8:	eor	r0, r2, r0
   21ffc:	eor	r1, r3, r1
   22000:	eor	r2, r0, r2
   22004:	eor	r3, r1, r3
   22008:	cmp	r5, #54	; 0x36
   2200c:	pophi	{r4, r5, pc}
   22010:	tst	r1, #-2147483648	; 0x80000000
   22014:	lsl	r1, r1, #12
   22018:	mov	ip, #1048576	; 0x100000
   2201c:	orr	r1, ip, r1, lsr #12
   22020:	beq	2202c <vcsm_square_open@@Base+0x558>
   22024:	rsbs	r0, r0, #0
   22028:	rsc	r1, r1, #0
   2202c:	tst	r3, #-2147483648	; 0x80000000
   22030:	lsl	r3, r3, #12
   22034:	orr	r3, ip, r3, lsr #12
   22038:	beq	22044 <vcsm_square_open@@Base+0x570>
   2203c:	rsbs	r2, r2, #0
   22040:	rsc	r3, r3, #0
   22044:	teq	r4, r5
   22048:	beq	221ac <vcsm_square_open@@Base+0x6d8>
   2204c:	sub	r4, r4, #1
   22050:	rsbs	lr, r5, #32
   22054:	blt	22070 <vcsm_square_open@@Base+0x59c>
   22058:	lsl	ip, r2, lr
   2205c:	adds	r0, r0, r2, lsr r5
   22060:	adc	r1, r1, #0
   22064:	adds	r0, r0, r3, lsl lr
   22068:	adcs	r1, r1, r3, asr r5
   2206c:	b	2208c <vcsm_square_open@@Base+0x5b8>
   22070:	sub	r5, r5, #32
   22074:	add	lr, lr, #32
   22078:	cmp	r2, #1
   2207c:	lsl	ip, r3, lr
   22080:	orrcs	ip, ip, #2
   22084:	adds	r0, r0, r3, asr r5
   22088:	adcs	r1, r1, r3, asr #31
   2208c:	and	r5, r1, #-2147483648	; 0x80000000
   22090:	bpl	220a0 <vcsm_square_open@@Base+0x5cc>
   22094:	rsbs	ip, ip, #0
   22098:	rscs	r0, r0, #0
   2209c:	rsc	r1, r1, #0
   220a0:	cmp	r1, #1048576	; 0x100000
   220a4:	bcc	220e4 <vcsm_square_open@@Base+0x610>
   220a8:	cmp	r1, #2097152	; 0x200000
   220ac:	bcc	220cc <vcsm_square_open@@Base+0x5f8>
   220b0:	lsrs	r1, r1, #1
   220b4:	rrxs	r0, r0
   220b8:	rrx	ip, ip
   220bc:	add	r4, r4, #1
   220c0:	lsl	r2, r4, #21
   220c4:	cmn	r2, #4194304	; 0x400000
   220c8:	bcs	22224 <vcsm_square_open@@Base+0x750>
   220cc:	cmp	ip, #-2147483648	; 0x80000000
   220d0:	lsrseq	ip, r0, #1
   220d4:	adcs	r0, r0, #0
   220d8:	adc	r1, r1, r4, lsl #20
   220dc:	orr	r1, r1, r5
   220e0:	pop	{r4, r5, pc}
   220e4:	lsls	ip, ip, #1
   220e8:	adcs	r0, r0, r0
   220ec:	adc	r1, r1, r1
   220f0:	tst	r1, #1048576	; 0x100000
   220f4:	sub	r4, r4, #1
   220f8:	bne	220cc <vcsm_square_open@@Base+0x5f8>
   220fc:	teq	r1, #0
   22100:	moveq	r1, r0
   22104:	moveq	r0, #0
   22108:	clz	r3, r1
   2210c:	addeq	r3, r3, #32
   22110:	sub	r3, r3, #11
   22114:	subs	r2, r3, #32
   22118:	bge	2213c <vcsm_square_open@@Base+0x668>
   2211c:	adds	r2, r2, #12
   22120:	ble	22138 <vcsm_square_open@@Base+0x664>
   22124:	add	ip, r2, #20
   22128:	rsb	r2, r2, #12
   2212c:	lsl	r0, r1, ip
   22130:	lsr	r1, r1, r2
   22134:	b	2214c <vcsm_square_open@@Base+0x678>
   22138:	add	r2, r2, #20
   2213c:	rsble	ip, r2, #32
   22140:	lsl	r1, r1, r2
   22144:	orrle	r1, r1, r0, lsr ip
   22148:	lslle	r0, r0, r2
   2214c:	subs	r4, r4, r3
   22150:	addge	r1, r1, r4, lsl #20
   22154:	orrge	r1, r1, r5
   22158:	popge	{r4, r5, pc}
   2215c:	mvn	r4, r4
   22160:	subs	r4, r4, #31
   22164:	bge	221a0 <vcsm_square_open@@Base+0x6cc>
   22168:	adds	r4, r4, #12
   2216c:	bgt	22188 <vcsm_square_open@@Base+0x6b4>
   22170:	add	r4, r4, #20
   22174:	rsb	r2, r4, #32
   22178:	lsr	r0, r0, r4
   2217c:	orr	r0, r0, r1, lsl r2
   22180:	orr	r1, r5, r1, lsr r4
   22184:	pop	{r4, r5, pc}
   22188:	rsb	r4, r4, #12
   2218c:	rsb	r2, r4, #32
   22190:	lsr	r0, r0, r2
   22194:	orr	r0, r0, r1, lsl r4
   22198:	mov	r1, r5
   2219c:	pop	{r4, r5, pc}
   221a0:	lsr	r0, r1, r4
   221a4:	mov	r1, r5
   221a8:	pop	{r4, r5, pc}
   221ac:	teq	r4, #0
   221b0:	eor	r3, r3, #1048576	; 0x100000
   221b4:	eoreq	r1, r1, #1048576	; 0x100000
   221b8:	addeq	r4, r4, #1
   221bc:	subne	r5, r5, #1
   221c0:	b	2204c <vcsm_square_open@@Base+0x578>
   221c4:	mvns	ip, r4, asr #21
   221c8:	mvnsne	ip, r5, asr #21
   221cc:	beq	22234 <vcsm_square_open@@Base+0x760>
   221d0:	teq	r4, r5
   221d4:	teqeq	r0, r2
   221d8:	beq	221ec <vcsm_square_open@@Base+0x718>
   221dc:	orrs	ip, r4, r0
   221e0:	moveq	r1, r3
   221e4:	moveq	r0, r2
   221e8:	pop	{r4, r5, pc}
   221ec:	teq	r1, r3
   221f0:	movne	r1, #0
   221f4:	movne	r0, #0
   221f8:	popne	{r4, r5, pc}
   221fc:	lsrs	ip, r4, #21
   22200:	bne	22214 <vcsm_square_open@@Base+0x740>
   22204:	lsls	r0, r0, #1
   22208:	adcs	r1, r1, r1
   2220c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   22210:	pop	{r4, r5, pc}
   22214:	adds	r4, r4, #4194304	; 0x400000
   22218:	addcc	r1, r1, #1048576	; 0x100000
   2221c:	popcc	{r4, r5, pc}
   22220:	and	r5, r1, #-2147483648	; 0x80000000
   22224:	orr	r1, r5, #2130706432	; 0x7f000000
   22228:	orr	r1, r1, #15728640	; 0xf00000
   2222c:	mov	r0, #0
   22230:	pop	{r4, r5, pc}
   22234:	mvns	ip, r4, asr #21
   22238:	movne	r1, r3
   2223c:	movne	r0, r2
   22240:	mvnseq	ip, r5, asr #21
   22244:	movne	r3, r1
   22248:	movne	r2, r0
   2224c:	orrs	r4, r0, r1, lsl #12
   22250:	orrseq	r5, r2, r3, lsl #12
   22254:	teqeq	r1, r3
   22258:	orrne	r1, r1, #524288	; 0x80000
   2225c:	pop	{r4, r5, pc}
   22260:	teq	r0, #0
   22264:	moveq	r1, #0
   22268:	bxeq	lr
   2226c:	push	{r4, r5, lr}
   22270:	mov	r4, #1024	; 0x400
   22274:	add	r4, r4, #50	; 0x32
   22278:	mov	r5, #0
   2227c:	mov	r1, #0
   22280:	b	220fc <vcsm_square_open@@Base+0x628>
   22284:	teq	r0, #0
   22288:	moveq	r1, #0
   2228c:	bxeq	lr
   22290:	push	{r4, r5, lr}
   22294:	mov	r4, #1024	; 0x400
   22298:	add	r4, r4, #50	; 0x32
   2229c:	ands	r5, r0, #-2147483648	; 0x80000000
   222a0:	rsbmi	r0, r0, #0
   222a4:	mov	r1, #0
   222a8:	b	220fc <vcsm_square_open@@Base+0x628>
   222ac:	lsls	r2, r0, #1
   222b0:	asr	r1, r2, #3
   222b4:	rrx	r1, r1
   222b8:	lsl	r0, r2, #28
   222bc:	andsne	r3, r2, #-16777216	; 0xff000000
   222c0:	teqne	r3, #-16777216	; 0xff000000
   222c4:	eorne	r1, r1, #939524096	; 0x38000000
   222c8:	bxne	lr
   222cc:	teq	r2, #0
   222d0:	teqne	r3, #-16777216	; 0xff000000
   222d4:	bxeq	lr
   222d8:	push	{r4, r5, lr}
   222dc:	mov	r4, #896	; 0x380
   222e0:	and	r5, r1, #-2147483648	; 0x80000000
   222e4:	bic	r1, r1, #-2147483648	; 0x80000000
   222e8:	b	220fc <vcsm_square_open@@Base+0x628>
   222ec:	orrs	r2, r0, r1
   222f0:	bxeq	lr
   222f4:	push	{r4, r5, lr}
   222f8:	mov	r5, #0
   222fc:	b	2231c <vcsm_square_open@@Base+0x848>
   22300:	orrs	r2, r0, r1
   22304:	bxeq	lr
   22308:	push	{r4, r5, lr}
   2230c:	ands	r5, r1, #-2147483648	; 0x80000000
   22310:	bpl	2231c <vcsm_square_open@@Base+0x848>
   22314:	rsbs	r0, r0, #0
   22318:	rsc	r1, r1, #0
   2231c:	mov	r4, #1024	; 0x400
   22320:	add	r4, r4, #50	; 0x32
   22324:	lsrs	ip, r1, #22
   22328:	beq	220a0 <vcsm_square_open@@Base+0x5cc>
   2232c:	mov	r2, #3
   22330:	lsrs	ip, ip, #3
   22334:	addne	r2, r2, #3
   22338:	lsrs	ip, ip, #3
   2233c:	addne	r2, r2, #3
   22340:	add	r2, r2, ip, lsr #3
   22344:	rsb	r3, r2, #32
   22348:	lsl	ip, r0, r3
   2234c:	lsr	r0, r0, r2
   22350:	orr	r0, r0, r1, lsl r3
   22354:	lsr	r1, r1, r2
   22358:	add	r4, r4, r2
   2235c:	b	220a0 <vcsm_square_open@@Base+0x5cc>
   22360:	cmp	r3, #0
   22364:	cmpeq	r2, #0
   22368:	bne	2238c <vcsm_square_open@@Base+0x8b8>
   2236c:	cmp	r1, #0
   22370:	movlt	r1, #-2147483648	; 0x80000000
   22374:	movlt	r0, #0
   22378:	blt	22388 <vcsm_square_open@@Base+0x8b4>
   2237c:	cmpeq	r0, #0
   22380:	mvnne	r1, #-2147483648	; 0x80000000
   22384:	mvnne	r0, #0
   22388:	b	223e4 <vcsm_square_open@@Base+0x910>
   2238c:	sub	sp, sp, #8
   22390:	push	{sp, lr}
   22394:	bl	223f4 <vcsm_square_open@@Base+0x920>
   22398:	ldr	lr, [sp, #4]
   2239c:	add	sp, sp, #8
   223a0:	pop	{r2, r3}
   223a4:	bx	lr
   223a8:	cmp	r3, #0
   223ac:	cmpeq	r2, #0
   223b0:	bne	223c8 <vcsm_square_open@@Base+0x8f4>
   223b4:	cmp	r1, #0
   223b8:	cmpeq	r0, #0
   223bc:	mvnne	r1, #0
   223c0:	mvnne	r0, #0
   223c4:	b	223e4 <vcsm_square_open@@Base+0x910>
   223c8:	sub	sp, sp, #8
   223cc:	push	{sp, lr}
   223d0:	bl	22430 <vcsm_square_open@@Base+0x95c>
   223d4:	ldr	lr, [sp, #4]
   223d8:	add	sp, sp, #8
   223dc:	pop	{r2, r3}
   223e0:	bx	lr
   223e4:	push	{r1, lr}
   223e8:	mov	r0, #8
   223ec:	bl	14744 <raise@plt>
   223f0:	pop	{r1, pc}
   223f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   223f8:	mov	r8, r2
   223fc:	mov	r6, r0
   22400:	mov	r7, r1
   22404:	mov	sl, r3
   22408:	ldr	r9, [sp, #32]
   2240c:	bl	2246c <vcsm_square_open@@Base+0x998>
   22410:	umull	r4, r5, r8, r0
   22414:	mul	r8, r8, r1
   22418:	mla	r2, r0, sl, r8
   2241c:	add	r5, r2, r5
   22420:	subs	r4, r6, r4
   22424:	sbc	r5, r7, r5
   22428:	strd	r4, [r9]
   2242c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22430:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   22434:	mov	r8, r2
   22438:	mov	r6, r0
   2243c:	mov	r7, r1
   22440:	mov	r5, r3
   22444:	ldr	r9, [sp, #32]
   22448:	bl	228f8 <vcsm_square_open@@Base+0xe24>
   2244c:	mul	r3, r0, r5
   22450:	umull	r4, r5, r0, r8
   22454:	mla	r8, r8, r1, r3
   22458:	add	r5, r8, r5
   2245c:	subs	r4, r6, r4
   22460:	sbc	r5, r7, r5
   22464:	strd	r4, [r9]
   22468:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2246c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22470:	rsbs	r4, r0, #0
   22474:	rsc	r5, r1, #0
   22478:	cmp	r1, #0
   2247c:	mvn	r6, #0
   22480:	sub	sp, sp, #12
   22484:	movge	r4, r0
   22488:	movge	r5, r1
   2248c:	movge	r6, #0
   22490:	cmp	r3, #0
   22494:	blt	226cc <vcsm_square_open@@Base+0xbf8>
   22498:	cmp	r3, #0
   2249c:	mov	sl, r4
   224a0:	mov	ip, r5
   224a4:	mov	r0, r2
   224a8:	mov	r1, r3
   224ac:	mov	r8, r2
   224b0:	mov	r7, r4
   224b4:	mov	r9, r5
   224b8:	bne	225b0 <vcsm_square_open@@Base+0xadc>
   224bc:	cmp	r2, r5
   224c0:	bls	225ec <vcsm_square_open@@Base+0xb18>
   224c4:	clz	r3, r2
   224c8:	cmp	r3, #0
   224cc:	rsbne	r2, r3, #32
   224d0:	lslne	r8, r0, r3
   224d4:	lsrne	r2, r4, r2
   224d8:	lslne	r7, r4, r3
   224dc:	orrne	r9, r2, r5, lsl r3
   224e0:	lsr	r4, r8, #16
   224e4:	uxth	sl, r8
   224e8:	mov	r1, r4
   224ec:	mov	r0, r9
   224f0:	bl	21b5c <vcsm_square_open@@Base+0x88>
   224f4:	mov	r1, r4
   224f8:	mov	fp, r0
   224fc:	mov	r0, r9
   22500:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22504:	mul	r0, sl, fp
   22508:	lsr	r2, r7, #16
   2250c:	orr	r1, r2, r1, lsl #16
   22510:	cmp	r0, r1
   22514:	bls	22538 <vcsm_square_open@@Base+0xa64>
   22518:	adds	r1, r1, r8
   2251c:	sub	r3, fp, #1
   22520:	bcs	22534 <vcsm_square_open@@Base+0xa60>
   22524:	cmp	r0, r1
   22528:	subhi	fp, fp, #2
   2252c:	addhi	r1, r1, r8
   22530:	bhi	22538 <vcsm_square_open@@Base+0xa64>
   22534:	mov	fp, r3
   22538:	rsb	r9, r0, r1
   2253c:	mov	r1, r4
   22540:	uxth	r7, r7
   22544:	mov	r0, r9
   22548:	bl	21b5c <vcsm_square_open@@Base+0x88>
   2254c:	mov	r1, r4
   22550:	mov	r5, r0
   22554:	mov	r0, r9
   22558:	bl	21d48 <vcsm_square_open@@Base+0x274>
   2255c:	mul	sl, sl, r5
   22560:	orr	r1, r7, r1, lsl #16
   22564:	cmp	sl, r1
   22568:	bls	22588 <vcsm_square_open@@Base+0xab4>
   2256c:	adds	r8, r1, r8
   22570:	sub	r3, r5, #1
   22574:	bcs	22584 <vcsm_square_open@@Base+0xab0>
   22578:	cmp	sl, r8
   2257c:	subhi	r5, r5, #2
   22580:	bhi	22588 <vcsm_square_open@@Base+0xab4>
   22584:	mov	r5, r3
   22588:	orr	r3, r5, fp, lsl #16
   2258c:	mov	r4, #0
   22590:	cmp	r6, #0
   22594:	mov	r0, r3
   22598:	mov	r1, r4
   2259c:	beq	225a8 <vcsm_square_open@@Base+0xad4>
   225a0:	rsbs	r0, r0, #0
   225a4:	rsc	r1, r1, #0
   225a8:	add	sp, sp, #12
   225ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   225b0:	cmp	r3, r5
   225b4:	movhi	r4, #0
   225b8:	movhi	r3, r4
   225bc:	bhi	22590 <vcsm_square_open@@Base+0xabc>
   225c0:	clz	r5, r1
   225c4:	cmp	r5, #0
   225c8:	bne	227b8 <vcsm_square_open@@Base+0xce4>
   225cc:	cmp	r1, ip
   225d0:	cmpcs	r2, sl
   225d4:	movhi	r4, #0
   225d8:	movls	r4, #1
   225dc:	movls	r3, #1
   225e0:	movls	r4, r5
   225e4:	movhi	r3, r4
   225e8:	b	22590 <vcsm_square_open@@Base+0xabc>
   225ec:	cmp	r2, #0
   225f0:	bne	22604 <vcsm_square_open@@Base+0xb30>
   225f4:	mov	r1, r2
   225f8:	mov	r0, #1
   225fc:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22600:	mov	r8, r0
   22604:	clz	r3, r8
   22608:	cmp	r3, #0
   2260c:	bne	226dc <vcsm_square_open@@Base+0xc08>
   22610:	rsb	r9, r8, r9
   22614:	lsr	r5, r8, #16
   22618:	uxth	sl, r8
   2261c:	mov	r4, #1
   22620:	mov	r1, r5
   22624:	mov	r0, r9
   22628:	bl	21b5c <vcsm_square_open@@Base+0x88>
   2262c:	mov	r1, r5
   22630:	mov	fp, r0
   22634:	mov	r0, r9
   22638:	bl	21d48 <vcsm_square_open@@Base+0x274>
   2263c:	mul	r0, sl, fp
   22640:	lsr	r2, r7, #16
   22644:	orr	r1, r2, r1, lsl #16
   22648:	cmp	r0, r1
   2264c:	bls	2266c <vcsm_square_open@@Base+0xb98>
   22650:	adds	r1, r1, r8
   22654:	sub	r3, fp, #1
   22658:	bcs	228d8 <vcsm_square_open@@Base+0xe04>
   2265c:	cmp	r0, r1
   22660:	subhi	fp, fp, #2
   22664:	addhi	r1, r1, r8
   22668:	bls	228d8 <vcsm_square_open@@Base+0xe04>
   2266c:	rsb	r2, r0, r1
   22670:	mov	r1, r5
   22674:	str	r2, [sp]
   22678:	uxth	r7, r7
   2267c:	mov	r0, r2
   22680:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22684:	ldr	r2, [sp]
   22688:	mov	r1, r5
   2268c:	mov	r9, r0
   22690:	mov	r0, r2
   22694:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22698:	mul	sl, sl, r9
   2269c:	orr	r1, r7, r1, lsl #16
   226a0:	cmp	sl, r1
   226a4:	bls	226c4 <vcsm_square_open@@Base+0xbf0>
   226a8:	adds	r8, r1, r8
   226ac:	sub	r3, r9, #1
   226b0:	bcs	226c0 <vcsm_square_open@@Base+0xbec>
   226b4:	cmp	sl, r8
   226b8:	subhi	r9, r9, #2
   226bc:	bhi	226c4 <vcsm_square_open@@Base+0xbf0>
   226c0:	mov	r9, r3
   226c4:	orr	r3, r9, fp, lsl #16
   226c8:	b	22590 <vcsm_square_open@@Base+0xabc>
   226cc:	mvn	r6, r6
   226d0:	rsbs	r2, r2, #0
   226d4:	rsc	r3, r3, #0
   226d8:	b	22498 <vcsm_square_open@@Base+0x9c4>
   226dc:	lsl	r8, r8, r3
   226e0:	rsb	fp, r3, #32
   226e4:	lsr	r4, r9, fp
   226e8:	lsr	fp, r7, fp
   226ec:	lsr	r5, r8, #16
   226f0:	orr	fp, fp, r9, lsl r3
   226f4:	mov	r0, r4
   226f8:	lsl	r7, r7, r3
   226fc:	mov	r1, r5
   22700:	uxth	sl, r8
   22704:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22708:	mov	r1, r5
   2270c:	mov	r3, r0
   22710:	mov	r0, r4
   22714:	str	r3, [sp]
   22718:	bl	21d48 <vcsm_square_open@@Base+0x274>
   2271c:	ldr	r3, [sp]
   22720:	lsr	r2, fp, #16
   22724:	mul	r0, sl, r3
   22728:	orr	r1, r2, r1, lsl #16
   2272c:	cmp	r0, r1
   22730:	bls	22750 <vcsm_square_open@@Base+0xc7c>
   22734:	adds	r1, r1, r8
   22738:	sub	r2, r3, #1
   2273c:	bcs	228f0 <vcsm_square_open@@Base+0xe1c>
   22740:	cmp	r0, r1
   22744:	subhi	r3, r3, #2
   22748:	addhi	r1, r1, r8
   2274c:	bls	228f0 <vcsm_square_open@@Base+0xe1c>
   22750:	rsb	r9, r0, r1
   22754:	mov	r1, r5
   22758:	str	r3, [sp]
   2275c:	uxth	fp, fp
   22760:	mov	r0, r9
   22764:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22768:	mov	r1, r5
   2276c:	mov	r4, r0
   22770:	mov	r0, r9
   22774:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22778:	mul	r9, sl, r4
   2277c:	ldr	r3, [sp]
   22780:	orr	r1, fp, r1, lsl #16
   22784:	cmp	r9, r1
   22788:	bls	227ac <vcsm_square_open@@Base+0xcd8>
   2278c:	adds	r1, r1, r8
   22790:	sub	r2, r4, #1
   22794:	bcs	227a8 <vcsm_square_open@@Base+0xcd4>
   22798:	cmp	r9, r1
   2279c:	subhi	r4, r4, #2
   227a0:	addhi	r1, r1, r8
   227a4:	bhi	227ac <vcsm_square_open@@Base+0xcd8>
   227a8:	mov	r4, r2
   227ac:	rsb	r9, r9, r1
   227b0:	orr	r4, r4, r3, lsl #16
   227b4:	b	22620 <vcsm_square_open@@Base+0xb4c>
   227b8:	rsb	sl, r5, #32
   227bc:	lsl	r3, r2, r5
   227c0:	lsr	r0, r2, sl
   227c4:	lsr	r2, ip, sl
   227c8:	orr	r4, r0, r1, lsl r5
   227cc:	lsr	sl, r7, sl
   227d0:	mov	r0, r2
   227d4:	orr	sl, sl, ip, lsl r5
   227d8:	lsr	r9, r4, #16
   227dc:	str	r3, [sp, #4]
   227e0:	str	r2, [sp]
   227e4:	uxth	fp, r4
   227e8:	mov	r1, r9
   227ec:	bl	21b5c <vcsm_square_open@@Base+0x88>
   227f0:	ldr	r2, [sp]
   227f4:	mov	r1, r9
   227f8:	mov	r8, r0
   227fc:	mov	r0, r2
   22800:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22804:	mul	r0, fp, r8
   22808:	lsr	r2, sl, #16
   2280c:	orr	r1, r2, r1, lsl #16
   22810:	cmp	r0, r1
   22814:	bls	22834 <vcsm_square_open@@Base+0xd60>
   22818:	adds	r1, r1, r4
   2281c:	sub	r2, r8, #1
   22820:	bcs	228e8 <vcsm_square_open@@Base+0xe14>
   22824:	cmp	r0, r1
   22828:	subhi	r8, r8, #2
   2282c:	addhi	r1, r1, r4
   22830:	bls	228e8 <vcsm_square_open@@Base+0xe14>
   22834:	rsb	ip, r0, r1
   22838:	mov	r1, r9
   2283c:	str	ip, [sp]
   22840:	mov	r0, ip
   22844:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22848:	ldr	ip, [sp]
   2284c:	mov	r1, r9
   22850:	mov	r2, r0
   22854:	mov	r0, ip
   22858:	str	r2, [sp]
   2285c:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22860:	ldr	r2, [sp]
   22864:	uxth	ip, sl
   22868:	mul	fp, fp, r2
   2286c:	orr	ip, ip, r1, lsl #16
   22870:	cmp	fp, ip
   22874:	bls	22894 <vcsm_square_open@@Base+0xdc0>
   22878:	adds	ip, ip, r4
   2287c:	sub	r1, r2, #1
   22880:	bcs	228e0 <vcsm_square_open@@Base+0xe0c>
   22884:	cmp	fp, ip
   22888:	subhi	r2, r2, #2
   2288c:	addhi	ip, ip, r4
   22890:	bls	228e0 <vcsm_square_open@@Base+0xe0c>
   22894:	ldr	r0, [sp, #4]
   22898:	orr	r1, r2, r8, lsl #16
   2289c:	rsb	fp, fp, ip
   228a0:	umull	r2, r3, r1, r0
   228a4:	cmp	fp, r3
   228a8:	bcc	228cc <vcsm_square_open@@Base+0xdf8>
   228ac:	movne	r4, #0
   228b0:	moveq	r4, #1
   228b4:	cmp	r2, r7, lsl r5
   228b8:	movls	r4, #0
   228bc:	andhi	r4, r4, #1
   228c0:	cmp	r4, #0
   228c4:	moveq	r3, r1
   228c8:	beq	22590 <vcsm_square_open@@Base+0xabc>
   228cc:	sub	r3, r1, #1
   228d0:	mov	r4, #0
   228d4:	b	22590 <vcsm_square_open@@Base+0xabc>
   228d8:	mov	fp, r3
   228dc:	b	2266c <vcsm_square_open@@Base+0xb98>
   228e0:	mov	r2, r1
   228e4:	b	22894 <vcsm_square_open@@Base+0xdc0>
   228e8:	mov	r8, r2
   228ec:	b	22834 <vcsm_square_open@@Base+0xd60>
   228f0:	mov	r3, r2
   228f4:	b	22750 <vcsm_square_open@@Base+0xc7c>
   228f8:	cmp	r3, #0
   228fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22900:	mov	r6, r0
   22904:	sub	sp, sp, #12
   22908:	mov	r5, r1
   2290c:	mov	r7, r0
   22910:	mov	r4, r2
   22914:	mov	r8, r1
   22918:	bne	229f8 <vcsm_square_open@@Base+0xf24>
   2291c:	cmp	r2, r1
   22920:	bls	22a34 <vcsm_square_open@@Base+0xf60>
   22924:	clz	r3, r2
   22928:	cmp	r3, #0
   2292c:	rsbne	r8, r3, #32
   22930:	lslne	r4, r2, r3
   22934:	lsrne	r8, r0, r8
   22938:	lslne	r7, r0, r3
   2293c:	orrne	r8, r8, r1, lsl r3
   22940:	lsr	r5, r4, #16
   22944:	uxth	sl, r4
   22948:	mov	r1, r5
   2294c:	mov	r0, r8
   22950:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22954:	mov	r1, r5
   22958:	mov	r9, r0
   2295c:	mov	r0, r8
   22960:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22964:	mul	r0, sl, r9
   22968:	lsr	r3, r7, #16
   2296c:	orr	r1, r3, r1, lsl #16
   22970:	cmp	r0, r1
   22974:	bls	22998 <vcsm_square_open@@Base+0xec4>
   22978:	adds	r1, r1, r4
   2297c:	sub	r2, r9, #1
   22980:	bcs	22994 <vcsm_square_open@@Base+0xec0>
   22984:	cmp	r0, r1
   22988:	subhi	r9, r9, #2
   2298c:	addhi	r1, r1, r4
   22990:	bhi	22998 <vcsm_square_open@@Base+0xec4>
   22994:	mov	r9, r2
   22998:	rsb	r8, r0, r1
   2299c:	mov	r1, r5
   229a0:	uxth	r7, r7
   229a4:	mov	r0, r8
   229a8:	bl	21b5c <vcsm_square_open@@Base+0x88>
   229ac:	mov	r1, r5
   229b0:	mov	r6, r0
   229b4:	mov	r0, r8
   229b8:	bl	21d48 <vcsm_square_open@@Base+0x274>
   229bc:	mul	sl, sl, r6
   229c0:	orr	r1, r7, r1, lsl #16
   229c4:	cmp	sl, r1
   229c8:	bls	229e4 <vcsm_square_open@@Base+0xf10>
   229cc:	adds	r4, r1, r4
   229d0:	sub	r3, r6, #1
   229d4:	bcs	22ce0 <vcsm_square_open@@Base+0x120c>
   229d8:	cmp	sl, r4
   229dc:	subhi	r6, r6, #2
   229e0:	bls	22ce0 <vcsm_square_open@@Base+0x120c>
   229e4:	orr	r0, r6, r9, lsl #16
   229e8:	mov	r6, #0
   229ec:	mov	r1, r6
   229f0:	add	sp, sp, #12
   229f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229f8:	cmp	r3, r1
   229fc:	movhi	r6, #0
   22a00:	movhi	r0, r6
   22a04:	bhi	229ec <vcsm_square_open@@Base+0xf18>
   22a08:	clz	r7, r3
   22a0c:	cmp	r7, #0
   22a10:	bne	22b10 <vcsm_square_open@@Base+0x103c>
   22a14:	cmp	r3, r1
   22a18:	cmpcs	r2, r6
   22a1c:	movhi	r6, #0
   22a20:	movls	r6, #1
   22a24:	movls	r0, #1
   22a28:	movls	r6, r7
   22a2c:	movhi	r0, r6
   22a30:	b	229ec <vcsm_square_open@@Base+0xf18>
   22a34:	cmp	r2, #0
   22a38:	bne	22a4c <vcsm_square_open@@Base+0xf78>
   22a3c:	mov	r1, r2
   22a40:	mov	r0, #1
   22a44:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22a48:	mov	r4, r0
   22a4c:	clz	r3, r4
   22a50:	cmp	r3, #0
   22a54:	bne	22c0c <vcsm_square_open@@Base+0x1138>
   22a58:	rsb	r5, r4, r5
   22a5c:	lsr	r8, r4, #16
   22a60:	uxth	sl, r4
   22a64:	mov	r6, #1
   22a68:	mov	r1, r8
   22a6c:	mov	r0, r5
   22a70:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22a74:	mov	r1, r8
   22a78:	mov	r9, r0
   22a7c:	mov	r0, r5
   22a80:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22a84:	mul	r0, sl, r9
   22a88:	lsr	r3, r7, #16
   22a8c:	orr	r1, r3, r1, lsl #16
   22a90:	cmp	r0, r1
   22a94:	bls	22ab4 <vcsm_square_open@@Base+0xfe0>
   22a98:	adds	r1, r1, r4
   22a9c:	sub	r2, r9, #1
   22aa0:	bcs	22ce8 <vcsm_square_open@@Base+0x1214>
   22aa4:	cmp	r0, r1
   22aa8:	subhi	r9, r9, #2
   22aac:	addhi	r1, r1, r4
   22ab0:	bls	22ce8 <vcsm_square_open@@Base+0x1214>
   22ab4:	rsb	fp, r0, r1
   22ab8:	mov	r1, r8
   22abc:	uxth	r7, r7
   22ac0:	mov	r0, fp
   22ac4:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22ac8:	mov	r1, r8
   22acc:	mov	r5, r0
   22ad0:	mov	r0, fp
   22ad4:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22ad8:	mul	sl, sl, r5
   22adc:	orr	r1, r7, r1, lsl #16
   22ae0:	cmp	sl, r1
   22ae4:	bls	22b00 <vcsm_square_open@@Base+0x102c>
   22ae8:	adds	r4, r1, r4
   22aec:	sub	r3, r5, #1
   22af0:	bcs	22cf0 <vcsm_square_open@@Base+0x121c>
   22af4:	cmp	sl, r4
   22af8:	subhi	r5, r5, #2
   22afc:	bls	22cf0 <vcsm_square_open@@Base+0x121c>
   22b00:	orr	r0, r5, r9, lsl #16
   22b04:	mov	r1, r6
   22b08:	add	sp, sp, #12
   22b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b10:	rsb	r1, r7, #32
   22b14:	lsl	r0, r2, r7
   22b18:	lsr	r2, r2, r1
   22b1c:	lsr	fp, r5, r1
   22b20:	orr	r8, r2, r3, lsl r7
   22b24:	lsr	r1, r6, r1
   22b28:	str	r0, [sp, #4]
   22b2c:	orr	r5, r1, r5, lsl r7
   22b30:	lsr	r9, r8, #16
   22b34:	mov	r0, fp
   22b38:	uxth	sl, r8
   22b3c:	mov	r1, r9
   22b40:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22b44:	mov	r1, r9
   22b48:	mov	r4, r0
   22b4c:	mov	r0, fp
   22b50:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22b54:	mul	r0, sl, r4
   22b58:	lsr	ip, r5, #16
   22b5c:	orr	r1, ip, r1, lsl #16
   22b60:	cmp	r0, r1
   22b64:	bls	22b78 <vcsm_square_open@@Base+0x10a4>
   22b68:	adds	r1, r1, r8
   22b6c:	sub	r2, r4, #1
   22b70:	bcc	22d0c <vcsm_square_open@@Base+0x1238>
   22b74:	mov	r4, r2
   22b78:	rsb	ip, r0, r1
   22b7c:	mov	r1, r9
   22b80:	str	ip, [sp]
   22b84:	uxth	r5, r5
   22b88:	mov	r0, ip
   22b8c:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22b90:	ldr	ip, [sp]
   22b94:	mov	r1, r9
   22b98:	mov	fp, r0
   22b9c:	mov	r0, ip
   22ba0:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22ba4:	mul	sl, sl, fp
   22ba8:	orr	r1, r5, r1, lsl #16
   22bac:	cmp	sl, r1
   22bb0:	bls	22bc4 <vcsm_square_open@@Base+0x10f0>
   22bb4:	adds	r1, r1, r8
   22bb8:	sub	r2, fp, #1
   22bbc:	bcc	22cf8 <vcsm_square_open@@Base+0x1224>
   22bc0:	mov	fp, r2
   22bc4:	ldr	r3, [sp, #4]
   22bc8:	orr	r0, fp, r4, lsl #16
   22bcc:	rsb	sl, sl, r1
   22bd0:	umull	r4, r5, r0, r3
   22bd4:	cmp	sl, r5
   22bd8:	bcc	22bf8 <vcsm_square_open@@Base+0x1124>
   22bdc:	movne	r3, #0
   22be0:	moveq	r3, #1
   22be4:	cmp	r4, r6, lsl r7
   22be8:	movls	r6, #0
   22bec:	andhi	r6, r3, #1
   22bf0:	cmp	r6, #0
   22bf4:	beq	229ec <vcsm_square_open@@Base+0xf18>
   22bf8:	mov	r6, #0
   22bfc:	sub	r0, r0, #1
   22c00:	mov	r1, r6
   22c04:	add	sp, sp, #12
   22c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c0c:	lsl	r4, r4, r3
   22c10:	rsb	r9, r3, #32
   22c14:	lsr	r2, r5, r9
   22c18:	lsr	r9, r6, r9
   22c1c:	lsr	r8, r4, #16
   22c20:	orr	r9, r9, r5, lsl r3
   22c24:	mov	r0, r2
   22c28:	lsl	r7, r6, r3
   22c2c:	mov	r1, r8
   22c30:	str	r2, [sp]
   22c34:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22c38:	ldr	r2, [sp]
   22c3c:	mov	r1, r8
   22c40:	uxth	sl, r4
   22c44:	mov	fp, r0
   22c48:	mov	r0, r2
   22c4c:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22c50:	mul	r0, sl, fp
   22c54:	lsr	r3, r9, #16
   22c58:	orr	r1, r3, r1, lsl #16
   22c5c:	cmp	r0, r1
   22c60:	bls	22c80 <vcsm_square_open@@Base+0x11ac>
   22c64:	adds	r1, r1, r4
   22c68:	sub	r3, fp, #1
   22c6c:	bcs	22d20 <vcsm_square_open@@Base+0x124c>
   22c70:	cmp	r0, r1
   22c74:	subhi	fp, fp, #2
   22c78:	addhi	r1, r1, r4
   22c7c:	bls	22d20 <vcsm_square_open@@Base+0x124c>
   22c80:	rsb	r5, r0, r1
   22c84:	mov	r1, r8
   22c88:	uxth	r9, r9
   22c8c:	mov	r0, r5
   22c90:	bl	21b5c <vcsm_square_open@@Base+0x88>
   22c94:	mov	r1, r8
   22c98:	mov	r6, r0
   22c9c:	mov	r0, r5
   22ca0:	bl	21d48 <vcsm_square_open@@Base+0x274>
   22ca4:	mul	r5, sl, r6
   22ca8:	orr	r1, r9, r1, lsl #16
   22cac:	cmp	r5, r1
   22cb0:	bls	22cd4 <vcsm_square_open@@Base+0x1200>
   22cb4:	adds	r1, r1, r4
   22cb8:	sub	r3, r6, #1
   22cbc:	bcs	22cd0 <vcsm_square_open@@Base+0x11fc>
   22cc0:	cmp	r5, r1
   22cc4:	subhi	r6, r6, #2
   22cc8:	addhi	r1, r1, r4
   22ccc:	bhi	22cd4 <vcsm_square_open@@Base+0x1200>
   22cd0:	mov	r6, r3
   22cd4:	rsb	r5, r5, r1
   22cd8:	orr	r6, r6, fp, lsl #16
   22cdc:	b	22a68 <vcsm_square_open@@Base+0xf94>
   22ce0:	mov	r6, r3
   22ce4:	b	229e4 <vcsm_square_open@@Base+0xf10>
   22ce8:	mov	r9, r2
   22cec:	b	22ab4 <vcsm_square_open@@Base+0xfe0>
   22cf0:	mov	r5, r3
   22cf4:	b	22b00 <vcsm_square_open@@Base+0x102c>
   22cf8:	cmp	sl, r1
   22cfc:	subhi	fp, fp, #2
   22d00:	addhi	r1, r1, r8
   22d04:	bhi	22bc4 <vcsm_square_open@@Base+0x10f0>
   22d08:	b	22bc0 <vcsm_square_open@@Base+0x10ec>
   22d0c:	cmp	r0, r1
   22d10:	subhi	r4, r4, #2
   22d14:	addhi	r1, r1, r8
   22d18:	bhi	22b78 <vcsm_square_open@@Base+0x10a4>
   22d1c:	b	22b74 <vcsm_square_open@@Base+0x10a0>
   22d20:	mov	fp, r3
   22d24:	b	22c80 <vcsm_square_open@@Base+0x11ac>

00022d28 <__libc_csu_init@@Base>:
   22d28:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   22d2c:	mov	r7, r0
   22d30:	ldr	r6, [pc, #76]	; 22d84 <__libc_csu_init@@Base+0x5c>
   22d34:	mov	r8, r1
   22d38:	ldr	r5, [pc, #72]	; 22d88 <__libc_csu_init@@Base+0x60>
   22d3c:	mov	r9, r2
   22d40:	add	r6, pc, r6
   22d44:	bl	141b4 <_init@@Base>
   22d48:	add	r5, pc, r5
   22d4c:	rsb	r6, r5, r6
   22d50:	asrs	r6, r6, #2
   22d54:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   22d58:	sub	r5, r5, #4
   22d5c:	mov	r4, #0
   22d60:	add	r4, r4, #1
   22d64:	ldr	r3, [r5, #4]!
   22d68:	mov	r0, r7
   22d6c:	mov	r1, r8
   22d70:	mov	r2, r9
   22d74:	blx	r3
   22d78:	cmp	r4, r6
   22d7c:	bne	22d60 <__libc_csu_init@@Base+0x38>
   22d80:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   22d84:	andeq	r7, r1, r8, ror #1
   22d88:	ldrdeq	r7, [r1], -ip

00022d8c <__libc_csu_fini@@Base>:
   22d8c:	bx	lr

Disassembly of section .fini:

00022d90 <_fini@@Base>:
   22d90:	push	{r3, lr}
   22d94:	pop	{r3, pc}
