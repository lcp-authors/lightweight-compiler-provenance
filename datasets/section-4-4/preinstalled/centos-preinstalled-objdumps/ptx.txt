
centos-preinstalled/ptx:     file format elf32-littlearm


Disassembly of section .init:

000113e8 <.init>:
   113e8:	push	{r3, lr}
   113ec:	bl	143c0 <ftello64@plt+0x2bf8>
   113f0:	pop	{r3, pc}

Disassembly of section .plt:

000113f4 <fdopen@plt-0x14>:
   113f4:	push	{lr}		; (str lr, [sp, #-4]!)
   113f8:	ldr	lr, [pc, #4]	; 11404 <fdopen@plt-0x4>
   113fc:	add	lr, pc, lr
   11400:	ldr	pc, [lr, #8]!
   11404:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00011408 <fdopen@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #28, 20	; 0x1c000
   11410:	ldr	pc, [ip, #3068]!	; 0xbfc

00011414 <calloc@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #28, 20	; 0x1c000
   1141c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011420 <fputs_unlocked@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #28, 20	; 0x1c000
   11428:	ldr	pc, [ip, #3052]!	; 0xbec

0001142c <raise@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #28, 20	; 0x1c000
   11434:	ldr	pc, [ip, #3044]!	; 0xbe4

00011438 <iconv_close@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #28, 20	; 0x1c000
   11440:	ldr	pc, [ip, #3036]!	; 0xbdc

00011444 <iconv@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #28, 20	; 0x1c000
   1144c:	ldr	pc, [ip, #3028]!	; 0xbd4

00011450 <strcmp@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #28, 20	; 0x1c000
   11458:	ldr	pc, [ip, #3020]!	; 0xbcc

0001145c <fflush@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #28, 20	; 0x1c000
   11464:	ldr	pc, [ip, #3012]!	; 0xbc4

00011468 <wcwidth@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #28, 20	; 0x1c000
   11470:	ldr	pc, [ip, #3004]!	; 0xbbc

00011474 <memmove@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #28, 20	; 0x1c000
   1147c:	ldr	pc, [ip, #2996]!	; 0xbb4

00011480 <free@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #28, 20	; 0x1c000
   11488:	ldr	pc, [ip, #2988]!	; 0xbac

0001148c <ferror@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #28, 20	; 0x1c000
   11494:	ldr	pc, [ip, #2980]!	; 0xba4

00011498 <_exit@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #28, 20	; 0x1c000
   114a0:	ldr	pc, [ip, #2972]!	; 0xb9c

000114a4 <memcpy@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #28, 20	; 0x1c000
   114ac:	ldr	pc, [ip, #2964]!	; 0xb94

000114b0 <mbsinit@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #28, 20	; 0x1c000
   114b8:	ldr	pc, [ip, #2956]!	; 0xb8c

000114bc <fwrite_unlocked@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #28, 20	; 0x1c000
   114c4:	ldr	pc, [ip, #2948]!	; 0xb84

000114c8 <memcmp@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #28, 20	; 0x1c000
   114d0:	ldr	pc, [ip, #2940]!	; 0xb7c

000114d4 <dcgettext@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #28, 20	; 0x1c000
   114dc:	ldr	pc, [ip, #2932]!	; 0xb74

000114e0 <__stack_chk_fail@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #28, 20	; 0x1c000
   114e8:	ldr	pc, [ip, #2924]!	; 0xb6c

000114ec <dup2@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #28, 20	; 0x1c000
   114f4:	ldr	pc, [ip, #2916]!	; 0xb64

000114f8 <realloc@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #28, 20	; 0x1c000
   11500:	ldr	pc, [ip, #2908]!	; 0xb5c

00011504 <textdomain@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #28, 20	; 0x1c000
   1150c:	ldr	pc, [ip, #2900]!	; 0xb54

00011510 <iswcntrl@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #28, 20	; 0x1c000
   11518:	ldr	pc, [ip, #2892]!	; 0xb4c

0001151c <iswprint@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #28, 20	; 0x1c000
   11524:	ldr	pc, [ip, #2884]!	; 0xb44

00011528 <__fxstat64@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #28, 20	; 0x1c000
   11530:	ldr	pc, [ip, #2876]!	; 0xb3c

00011534 <fwrite@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #28, 20	; 0x1c000
   1153c:	ldr	pc, [ip, #2868]!	; 0xb34

00011540 <lseek64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #28, 20	; 0x1c000
   11548:	ldr	pc, [ip, #2860]!	; 0xb2c

0001154c <__ctype_get_mb_cur_max@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #28, 20	; 0x1c000
   11554:	ldr	pc, [ip, #2852]!	; 0xb24

00011558 <strcpy@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #28, 20	; 0x1c000
   11560:	ldr	pc, [ip, #2844]!	; 0xb1c

00011564 <fread@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #28, 20	; 0x1c000
   1156c:	ldr	pc, [ip, #2836]!	; 0xb14

00011570 <__fpending@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #28, 20	; 0x1c000
   11578:	ldr	pc, [ip, #2828]!	; 0xb0c

0001157c <mbrtowc@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #28, 20	; 0x1c000
   11584:	ldr	pc, [ip, #2820]!	; 0xb04

00011588 <error@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #28, 20	; 0x1c000
   11590:	ldr	pc, [ip, #2812]!	; 0xafc

00011594 <open64@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #28, 20	; 0x1c000
   1159c:	ldr	pc, [ip, #2804]!	; 0xaf4

000115a0 <getenv@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #28, 20	; 0x1c000
   115a8:	ldr	pc, [ip, #2796]!	; 0xaec

000115ac <malloc@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #28, 20	; 0x1c000
   115b4:	ldr	pc, [ip, #2788]!	; 0xae4

000115b8 <iconv_open@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #28, 20	; 0x1c000
   115c0:	ldr	pc, [ip, #2780]!	; 0xadc

000115c4 <__libc_start_main@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #28, 20	; 0x1c000
   115cc:	ldr	pc, [ip, #2772]!	; 0xad4

000115d0 <__freading@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #28, 20	; 0x1c000
   115d8:	ldr	pc, [ip, #2764]!	; 0xacc

000115dc <__ctype_toupper_loc@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #28, 20	; 0x1c000
   115e4:	ldr	pc, [ip, #2756]!	; 0xac4

000115e8 <__gmon_start__@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #28, 20	; 0x1c000
   115f0:	ldr	pc, [ip, #2748]!	; 0xabc

000115f4 <freopen64@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #28, 20	; 0x1c000
   115fc:	ldr	pc, [ip, #2740]!	; 0xab4

00011600 <getopt_long@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #28, 20	; 0x1c000
   11608:	ldr	pc, [ip, #2732]!	; 0xaac

0001160c <__ctype_b_loc@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #28, 20	; 0x1c000
   11614:	ldr	pc, [ip, #2724]!	; 0xaa4

00011618 <exit@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #28, 20	; 0x1c000
   11620:	ldr	pc, [ip, #2716]!	; 0xa9c

00011624 <iswspace@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #28, 20	; 0x1c000
   1162c:	ldr	pc, [ip, #2708]!	; 0xa94

00011630 <strtoul@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #28, 20	; 0x1c000
   11638:	ldr	pc, [ip, #2700]!	; 0xa8c

0001163c <strlen@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #28, 20	; 0x1c000
   11644:	ldr	pc, [ip, #2692]!	; 0xa84

00011648 <strchr@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #28, 20	; 0x1c000
   11650:	ldr	pc, [ip, #2684]!	; 0xa7c

00011654 <re_search@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #28, 20	; 0x1c000
   1165c:	ldr	pc, [ip, #2676]!	; 0xa74

00011660 <re_match@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #28, 20	; 0x1c000
   11668:	ldr	pc, [ip, #2668]!	; 0xa6c

0001166c <ungetc@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #28, 20	; 0x1c000
   11674:	ldr	pc, [ip, #2660]!	; 0xa64

00011678 <__errno_location@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #28, 20	; 0x1c000
   11680:	ldr	pc, [ip, #2652]!	; 0xa5c

00011684 <iswalnum@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #28, 20	; 0x1c000
   1168c:	ldr	pc, [ip, #2644]!	; 0xa54

00011690 <__sprintf_chk@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #28, 20	; 0x1c000
   11698:	ldr	pc, [ip, #2636]!	; 0xa4c

0001169c <__cxa_atexit@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #28, 20	; 0x1c000
   116a4:	ldr	pc, [ip, #2628]!	; 0xa44

000116a8 <__strdup@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #28, 20	; 0x1c000
   116b0:	ldr	pc, [ip, #2620]!	; 0xa3c

000116b4 <memset@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #28, 20	; 0x1c000
   116bc:	ldr	pc, [ip, #2612]!	; 0xa34

000116c0 <re_compile_fastmap@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #28, 20	; 0x1c000
   116c8:	ldr	pc, [ip, #2604]!	; 0xa2c

000116cc <fscanf@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #28, 20	; 0x1c000
   116d4:	ldr	pc, [ip, #2596]!	; 0xa24

000116d8 <__printf_chk@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #28, 20	; 0x1c000
   116e0:	ldr	pc, [ip, #2588]!	; 0xa1c

000116e4 <fileno@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #28, 20	; 0x1c000
   116ec:	ldr	pc, [ip, #2580]!	; 0xa14

000116f0 <__fprintf_chk@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #28, 20	; 0x1c000
   116f8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116fc <memchr@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #28, 20	; 0x1c000
   11704:	ldr	pc, [ip, #2564]!	; 0xa04

00011708 <fclose@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #28, 20	; 0x1c000
   11710:	ldr	pc, [ip, #2556]!	; 0x9fc

00011714 <strnlen@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #28, 20	; 0x1c000
   1171c:	ldr	pc, [ip, #2548]!	; 0x9f4

00011720 <fseeko64@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #28, 20	; 0x1c000
   11728:	ldr	pc, [ip, #2540]!	; 0x9ec

0001172c <__uflow@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #28, 20	; 0x1c000
   11734:	ldr	pc, [ip, #2532]!	; 0x9e4

00011738 <__overflow@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #28, 20	; 0x1c000
   11740:	ldr	pc, [ip, #2524]!	; 0x9dc

00011744 <setlocale@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #28, 20	; 0x1c000
   1174c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011750 <strrchr@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #28, 20	; 0x1c000
   11758:	ldr	pc, [ip, #2508]!	; 0x9cc

0001175c <nl_langinfo@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #28, 20	; 0x1c000
   11764:	ldr	pc, [ip, #2500]!	; 0x9c4

00011768 <fopen64@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #28, 20	; 0x1c000
   11770:	ldr	pc, [ip, #2492]!	; 0x9bc

00011774 <qsort@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #28, 20	; 0x1c000
   1177c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011780 <bindtextdomain@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #28, 20	; 0x1c000
   11788:	ldr	pc, [ip, #2476]!	; 0x9ac

0001178c <re_compile_pattern@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #28, 20	; 0x1c000
   11794:	ldr	pc, [ip, #2468]!	; 0x9a4

00011798 <strncmp@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #28, 20	; 0x1c000
   117a0:	ldr	pc, [ip, #2460]!	; 0x99c

000117a4 <abort@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #28, 20	; 0x1c000
   117ac:	ldr	pc, [ip, #2452]!	; 0x994

000117b0 <close@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #28, 20	; 0x1c000
   117b8:	ldr	pc, [ip, #2444]!	; 0x98c

000117bc <__assert_fail@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #28, 20	; 0x1c000
   117c4:	ldr	pc, [ip, #2436]!	; 0x984

000117c8 <ftello64@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #28, 20	; 0x1c000
   117d0:	ldr	pc, [ip, #2428]!	; 0x97c

Disassembly of section .text:

000117d4 <close_stdout@@Base-0x4058>:
   117d4:	ldr	ip, [pc, #4068]	; 127c0 <ftello64@plt+0xff8>
   117d8:	ldr	r3, [pc, #4068]	; 127c4 <ftello64@plt+0xffc>
   117dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117e0:	add	ip, pc, ip
   117e4:	sub	sp, sp, #124	; 0x7c
   117e8:	mov	r7, r0
   117ec:	ldr	r0, [r1]
   117f0:	mov	r6, r1
   117f4:	str	ip, [sp, #36]	; 0x24
   117f8:	ldr	r3, [ip, r3]
   117fc:	ldr	ip, [pc, #4036]	; 127c8 <ftello64@plt+0x1000>
   11800:	ldr	r4, [pc, #4036]	; 127cc <ftello64@plt+0x1004>
   11804:	ldr	r3, [r3]
   11808:	add	ip, pc, ip
   1180c:	str	ip, [sp, #12]
   11810:	add	r4, pc, r4
   11814:	ldr	ip, [pc, #4020]	; 127d0 <ftello64@plt+0x1008>
   11818:	str	r3, [sp, #116]	; 0x74
   1181c:	add	ip, pc, ip
   11820:	str	ip, [sp, #16]
   11824:	bl	15b98 <close_stdout@@Base+0x36c>
   11828:	ldr	r1, [pc, #4004]	; 127d4 <ftello64@plt+0x100c>
   1182c:	mov	r0, #6
   11830:	ldr	r8, [pc, #4000]	; 127d8 <ftello64@plt+0x1010>
   11834:	add	r1, pc, r1
   11838:	ldr	sl, [pc, #3996]	; 127dc <ftello64@plt+0x1014>
   1183c:	bl	11744 <setlocale@plt>
   11840:	ldr	r1, [pc, #3992]	; 127e0 <ftello64@plt+0x1018>
   11844:	mov	r0, r4
   11848:	ldr	fp, [pc, #3988]	; 127e4 <ftello64@plt+0x101c>
   1184c:	add	r1, pc, r1
   11850:	add	r8, pc, r8
   11854:	bl	11780 <bindtextdomain@plt>
   11858:	mov	r0, r4
   1185c:	bl	11504 <textdomain@plt>
   11860:	ldr	r3, [pc, #3968]	; 127e8 <ftello64@plt+0x1020>
   11864:	ldr	ip, [sp, #36]	; 0x24
   11868:	add	sl, pc, sl
   1186c:	add	fp, pc, fp
   11870:	add	r8, r8, #12
   11874:	ldr	r0, [ip, r3]
   11878:	bl	1c0d0 <close_stdout@@Base+0x68a4>
   1187c:	ldr	r5, [pc, #3944]	; 127ec <ftello64@plt+0x1024>
   11880:	mov	r4, #0
   11884:	add	r5, pc, r5
   11888:	str	r4, [sp]
   1188c:	mov	r0, r7
   11890:	mov	r1, r6
   11894:	mov	r2, r5
   11898:	mov	r3, r8
   1189c:	mov	r9, #0
   118a0:	bl	11600 <getopt_long@plt>
   118a4:	cmn	r0, #1
   118a8:	beq	11ec4 <ftello64@plt+0x6fc>
   118ac:	add	r0, r0, #3
   118b0:	cmp	r0, #122	; 0x7a
   118b4:	addls	pc, pc, r0, lsl #2
   118b8:	b	11e44 <ftello64@plt+0x67c>
   118bc:	b	11b08 <ftello64@plt+0x340>
   118c0:	b	11b00 <ftello64@plt+0x338>
   118c4:	b	11e44 <ftello64@plt+0x67c>
   118c8:	b	11e44 <ftello64@plt+0x67c>
   118cc:	b	11e44 <ftello64@plt+0x67c>
   118d0:	b	11e44 <ftello64@plt+0x67c>
   118d4:	b	11e44 <ftello64@plt+0x67c>
   118d8:	b	11e44 <ftello64@plt+0x67c>
   118dc:	b	11e44 <ftello64@plt+0x67c>
   118e0:	b	11e44 <ftello64@plt+0x67c>
   118e4:	b	11e44 <ftello64@plt+0x67c>
   118e8:	b	11e44 <ftello64@plt+0x67c>
   118ec:	b	11e44 <ftello64@plt+0x67c>
   118f0:	b	11aa8 <ftello64@plt+0x2e0>
   118f4:	b	11e44 <ftello64@plt+0x67c>
   118f8:	b	11e44 <ftello64@plt+0x67c>
   118fc:	b	11e44 <ftello64@plt+0x67c>
   11900:	b	11e44 <ftello64@plt+0x67c>
   11904:	b	11e44 <ftello64@plt+0x67c>
   11908:	b	11e44 <ftello64@plt+0x67c>
   1190c:	b	11e44 <ftello64@plt+0x67c>
   11910:	b	11e44 <ftello64@plt+0x67c>
   11914:	b	11e44 <ftello64@plt+0x67c>
   11918:	b	11e44 <ftello64@plt+0x67c>
   1191c:	b	11e44 <ftello64@plt+0x67c>
   11920:	b	11e44 <ftello64@plt+0x67c>
   11924:	b	11e44 <ftello64@plt+0x67c>
   11928:	b	11e44 <ftello64@plt+0x67c>
   1192c:	b	11e44 <ftello64@plt+0x67c>
   11930:	b	11e44 <ftello64@plt+0x67c>
   11934:	b	11e44 <ftello64@plt+0x67c>
   11938:	b	11e44 <ftello64@plt+0x67c>
   1193c:	b	11e44 <ftello64@plt+0x67c>
   11940:	b	11e44 <ftello64@plt+0x67c>
   11944:	b	11e44 <ftello64@plt+0x67c>
   11948:	b	11e44 <ftello64@plt+0x67c>
   1194c:	b	11e44 <ftello64@plt+0x67c>
   11950:	b	11e44 <ftello64@plt+0x67c>
   11954:	b	11e44 <ftello64@plt+0x67c>
   11958:	b	11e44 <ftello64@plt+0x67c>
   1195c:	b	11e44 <ftello64@plt+0x67c>
   11960:	b	11e44 <ftello64@plt+0x67c>
   11964:	b	11e44 <ftello64@plt+0x67c>
   11968:	b	11e44 <ftello64@plt+0x67c>
   1196c:	b	11e44 <ftello64@plt+0x67c>
   11970:	b	11e44 <ftello64@plt+0x67c>
   11974:	b	11e44 <ftello64@plt+0x67c>
   11978:	b	11e44 <ftello64@plt+0x67c>
   1197c:	b	11e44 <ftello64@plt+0x67c>
   11980:	b	11e44 <ftello64@plt+0x67c>
   11984:	b	11e44 <ftello64@plt+0x67c>
   11988:	b	11e44 <ftello64@plt+0x67c>
   1198c:	b	11e44 <ftello64@plt+0x67c>
   11990:	b	11e44 <ftello64@plt+0x67c>
   11994:	b	11e44 <ftello64@plt+0x67c>
   11998:	b	11e44 <ftello64@plt+0x67c>
   1199c:	b	11e44 <ftello64@plt+0x67c>
   119a0:	b	11e44 <ftello64@plt+0x67c>
   119a4:	b	11e44 <ftello64@plt+0x67c>
   119a8:	b	11e44 <ftello64@plt+0x67c>
   119ac:	b	11e44 <ftello64@plt+0x67c>
   119b0:	b	11e44 <ftello64@plt+0x67c>
   119b4:	b	11e44 <ftello64@plt+0x67c>
   119b8:	b	11e44 <ftello64@plt+0x67c>
   119bc:	b	11e44 <ftello64@plt+0x67c>
   119c0:	b	11e44 <ftello64@plt+0x67c>
   119c4:	b	11e44 <ftello64@plt+0x67c>
   119c8:	b	11e44 <ftello64@plt+0x67c>
   119cc:	b	11d58 <ftello64@plt+0x590>
   119d0:	b	11e44 <ftello64@plt+0x67c>
   119d4:	b	11e44 <ftello64@plt+0x67c>
   119d8:	b	11e44 <ftello64@plt+0x67c>
   119dc:	b	11e44 <ftello64@plt+0x67c>
   119e0:	b	11d34 <ftello64@plt+0x56c>
   119e4:	b	11d20 <ftello64@plt+0x558>
   119e8:	b	11e44 <ftello64@plt+0x67c>
   119ec:	b	11e44 <ftello64@plt+0x67c>
   119f0:	b	11e44 <ftello64@plt+0x67c>
   119f4:	b	11e44 <ftello64@plt+0x67c>
   119f8:	b	11e44 <ftello64@plt+0x67c>
   119fc:	b	11d00 <ftello64@plt+0x538>
   11a00:	b	11e44 <ftello64@plt+0x67c>
   11a04:	b	11cec <ftello64@plt+0x524>
   11a08:	b	11e44 <ftello64@plt+0x67c>
   11a0c:	b	11e44 <ftello64@plt+0x67c>
   11a10:	b	11cdc <ftello64@plt+0x514>
   11a14:	b	11cbc <ftello64@plt+0x4f4>
   11a18:	b	11cb0 <ftello64@plt+0x4e8>
   11a1c:	b	11e44 <ftello64@plt+0x67c>
   11a20:	b	11e44 <ftello64@plt+0x67c>
   11a24:	b	11c88 <ftello64@plt+0x4c0>
   11a28:	b	11e44 <ftello64@plt+0x67c>
   11a2c:	b	11e44 <ftello64@plt+0x67c>
   11a30:	b	11e44 <ftello64@plt+0x67c>
   11a34:	b	11e44 <ftello64@plt+0x67c>
   11a38:	b	11e44 <ftello64@plt+0x67c>
   11a3c:	b	11e44 <ftello64@plt+0x67c>
   11a40:	b	11e44 <ftello64@plt+0x67c>
   11a44:	b	11e44 <ftello64@plt+0x67c>
   11a48:	b	11e44 <ftello64@plt+0x67c>
   11a4c:	b	11e44 <ftello64@plt+0x67c>
   11a50:	b	11c68 <ftello64@plt+0x4a0>
   11a54:	b	11e44 <ftello64@plt+0x67c>
   11a58:	b	11e44 <ftello64@plt+0x67c>
   11a5c:	b	11e44 <ftello64@plt+0x67c>
   11a60:	b	11c54 <ftello64@plt+0x48c>
   11a64:	b	11c08 <ftello64@plt+0x440>
   11a68:	b	11e44 <ftello64@plt+0x67c>
   11a6c:	b	11be8 <ftello64@plt+0x420>
   11a70:	b	11e44 <ftello64@plt+0x67c>
   11a74:	b	11e44 <ftello64@plt+0x67c>
   11a78:	b	11e44 <ftello64@plt+0x67c>
   11a7c:	b	11e44 <ftello64@plt+0x67c>
   11a80:	b	11e44 <ftello64@plt+0x67c>
   11a84:	b	11bc8 <ftello64@plt+0x400>
   11a88:	b	11e44 <ftello64@plt+0x67c>
   11a8c:	b	11e44 <ftello64@plt+0x67c>
   11a90:	b	11bb4 <ftello64@plt+0x3ec>
   11a94:	b	11e44 <ftello64@plt+0x67c>
   11a98:	b	11888 <ftello64@plt+0xc0>
   11a9c:	b	11e44 <ftello64@plt+0x67c>
   11aa0:	b	11e44 <ftello64@plt+0x67c>
   11aa4:	b	11b68 <ftello64@plt+0x3a0>
   11aa8:	ldr	ip, [sp, #36]	; 0x24
   11aac:	mov	r2, #4
   11ab0:	ldr	r3, [pc, #3384]	; 127f0 <ftello64@plt+0x1028>
   11ab4:	ldr	r1, [pc, #3384]	; 127f4 <ftello64@plt+0x102c>
   11ab8:	ldr	r4, [pc, #3384]	; 127f8 <ftello64@plt+0x1030>
   11abc:	ldr	r0, [pc, #3384]	; 127fc <ftello64@plt+0x1034>
   11ac0:	ldr	r1, [ip, r1]
   11ac4:	add	r4, pc, r4
   11ac8:	str	r2, [sp]
   11acc:	add	r0, pc, r0
   11ad0:	ldr	r2, [ip, r3]
   11ad4:	mov	r3, r4
   11ad8:	ldr	r1, [r1]
   11adc:	ldr	ip, [r2]
   11ae0:	ldr	r2, [pc, #3352]	; 12800 <ftello64@plt+0x1038>
   11ae4:	str	ip, [sp, #4]
   11ae8:	add	r2, pc, r2
   11aec:	bl	15748 <ftello64@plt+0x3f80>
   11af0:	ldr	r3, [pc, #3340]	; 12804 <ftello64@plt+0x103c>
   11af4:	add	r3, pc, r3
   11af8:	ldr	r2, [r4, r0, lsl #2]
   11afc:	str	r2, [r3, #516]	; 0x204
   11b00:	mov	r0, #0
   11b04:	bl	151dc <ftello64@plt+0x3a14>
   11b08:	ldr	ip, [sp, #36]	; 0x24
   11b0c:	mov	r4, #0
   11b10:	ldr	r2, [pc, #3864]	; 12a30 <ftello64@plt+0x1268>
   11b14:	ldr	r3, [pc, #3308]	; 12808 <ftello64@plt+0x1040>
   11b18:	ldr	r0, [pc, #3308]	; 1280c <ftello64@plt+0x1044>
   11b1c:	ldr	r2, [ip, r2]
   11b20:	ldr	r3, [ip, r3]
   11b24:	add	r0, pc, r0
   11b28:	ldr	r1, [pc, #3296]	; 12810 <ftello64@plt+0x1048>
   11b2c:	ldr	r5, [r2]
   11b30:	add	r1, pc, r1
   11b34:	ldr	r6, [r3]
   11b38:	bl	1658c <close_stdout@@Base+0xd60>
   11b3c:	ldr	r1, [pc, #3280]	; 12814 <ftello64@plt+0x104c>
   11b40:	ldr	r2, [pc, #3280]	; 12818 <ftello64@plt+0x1050>
   11b44:	str	r4, [sp, #4]
   11b48:	add	r1, pc, r1
   11b4c:	mov	r3, r6
   11b50:	add	r2, pc, r2
   11b54:	str	r0, [sp]
   11b58:	mov	r0, r5
   11b5c:	bl	18c9c <close_stdout@@Base+0x3470>
   11b60:	mov	r0, r4
   11b64:	bl	11618 <exit@plt>
   11b68:	ldr	ip, [pc, #3204]	; 127f4 <ftello64@plt+0x102c>
   11b6c:	mov	r0, #0
   11b70:	ldr	lr, [sp, #36]	; 0x24
   11b74:	mov	r1, r0
   11b78:	mov	r2, r0
   11b7c:	add	r3, sp, #96	; 0x60
   11b80:	ldr	r4, [lr, ip]
   11b84:	str	r0, [sp]
   11b88:	ldr	r0, [r4]
   11b8c:	bl	190ac <close_stdout@@Base+0x3880>
   11b90:	cmp	r0, #0
   11b94:	bne	11e88 <ftello64@plt+0x6c0>
   11b98:	ldr	r3, [sp, #96]	; 0x60
   11b9c:	cmp	r3, #0
   11ba0:	ble	11e88 <ftello64@plt+0x6c0>
   11ba4:	ldr	r2, [pc, #3184]	; 1281c <ftello64@plt+0x1054>
   11ba8:	add	r2, pc, r2
   11bac:	str	r3, [r2, #8]
   11bb0:	b	1187c <ftello64@plt+0xb4>
   11bb4:	ldr	r3, [pc, #3172]	; 12820 <ftello64@plt+0x1058>
   11bb8:	mov	r2, #1
   11bbc:	add	r3, pc, r3
   11bc0:	strb	r2, [r3, #532]	; 0x214
   11bc4:	b	1187c <ftello64@plt+0xb4>
   11bc8:	ldr	r2, [pc, #3108]	; 127f4 <ftello64@plt+0x102c>
   11bcc:	ldr	ip, [sp, #36]	; 0x24
   11bd0:	ldr	r3, [pc, #3148]	; 12824 <ftello64@plt+0x105c>
   11bd4:	ldr	r2, [ip, r2]
   11bd8:	add	r3, pc, r3
   11bdc:	ldr	r2, [r2]
   11be0:	str	r2, [r3, #528]	; 0x210
   11be4:	b	1187c <ftello64@plt+0xb4>
   11be8:	ldr	r2, [pc, #3076]	; 127f4 <ftello64@plt+0x102c>
   11bec:	ldr	ip, [sp, #36]	; 0x24
   11bf0:	ldr	r3, [pc, #3120]	; 12828 <ftello64@plt+0x1060>
   11bf4:	ldr	r2, [ip, r2]
   11bf8:	add	r3, pc, r3
   11bfc:	ldr	r2, [r2]
   11c00:	str	r2, [r3, #524]	; 0x20c
   11c04:	b	1187c <ftello64@plt+0xb4>
   11c08:	ldr	ip, [pc, #3044]	; 127f4 <ftello64@plt+0x102c>
   11c0c:	mov	r0, #0
   11c10:	ldr	lr, [sp, #36]	; 0x24
   11c14:	mov	r1, r0
   11c18:	mov	r2, r0
   11c1c:	add	r3, sp, #96	; 0x60
   11c20:	ldr	r4, [lr, ip]
   11c24:	str	r0, [sp]
   11c28:	ldr	r0, [r4]
   11c2c:	bl	190ac <close_stdout@@Base+0x3880>
   11c30:	cmp	r0, #0
   11c34:	bne	11e4c <ftello64@plt+0x684>
   11c38:	ldr	r3, [sp, #96]	; 0x60
   11c3c:	cmp	r3, #0
   11c40:	ble	11e4c <ftello64@plt+0x684>
   11c44:	ldr	r2, [pc, #3040]	; 1282c <ftello64@plt+0x1064>
   11c48:	add	r2, pc, r2
   11c4c:	str	r3, [r2, #4]
   11c50:	b	1187c <ftello64@plt+0xb4>
   11c54:	ldr	r3, [pc, #3028]	; 12830 <ftello64@plt+0x1068>
   11c58:	mov	r2, #1
   11c5c:	add	r3, pc, r3
   11c60:	strb	r2, [r3]
   11c64:	b	1187c <ftello64@plt+0xb4>
   11c68:	ldr	r2, [pc, #2948]	; 127f4 <ftello64@plt+0x102c>
   11c6c:	ldr	ip, [sp, #36]	; 0x24
   11c70:	ldr	r3, [pc, #3004]	; 12834 <ftello64@plt+0x106c>
   11c74:	ldr	r2, [ip, r2]
   11c78:	add	r3, pc, r3
   11c7c:	ldr	r2, [r2]
   11c80:	str	r2, [r3, #520]	; 0x208
   11c84:	b	1187c <ftello64@plt+0xb4>
   11c88:	ldr	ip, [sp, #36]	; 0x24
   11c8c:	ldr	r3, [pc, #2912]	; 127f4 <ftello64@plt+0x102c>
   11c90:	ldr	r3, [ip, r3]
   11c94:	ldr	r0, [r3]
   11c98:	bl	1462c <ftello64@plt+0x2e64>
   11c9c:	str	r0, [sl, #828]	; 0x33c
   11ca0:	ldrb	r3, [r0]
   11ca4:	cmp	r3, #0
   11ca8:	streq	r3, [sl, #828]	; 0x33c
   11cac:	b	1187c <ftello64@plt+0xb4>
   11cb0:	mov	r3, #3
   11cb4:	str	r3, [fp, #516]	; 0x204
   11cb8:	b	1187c <ftello64@plt+0xb4>
   11cbc:	ldr	ip, [sp, #36]	; 0x24
   11cc0:	ldr	r3, [pc, #2860]	; 127f4 <ftello64@plt+0x102c>
   11cc4:	ldr	r3, [ip, r3]
   11cc8:	ldr	r0, [r3]
   11ccc:	bl	1462c <ftello64@plt+0x2e64>
   11cd0:	ldr	ip, [sp, #12]
   11cd4:	str	r0, [ip, #536]	; 0x218
   11cd8:	b	1187c <ftello64@plt+0xb4>
   11cdc:	ldr	ip, [sp, #16]
   11ce0:	mov	r3, #1
   11ce4:	strb	r3, [ip, #534]	; 0x216
   11ce8:	b	1187c <ftello64@plt+0xb4>
   11cec:	ldr	r3, [pc, #2884]	; 12838 <ftello64@plt+0x1070>
   11cf0:	mov	r2, #2
   11cf4:	add	r3, pc, r3
   11cf8:	str	r2, [r3, #516]	; 0x204
   11cfc:	b	1187c <ftello64@plt+0xb4>
   11d00:	ldr	r2, [pc, #2796]	; 127f4 <ftello64@plt+0x102c>
   11d04:	ldr	ip, [sp, #36]	; 0x24
   11d08:	ldr	r3, [pc, #2860]	; 1283c <ftello64@plt+0x1074>
   11d0c:	ldr	r2, [ip, r2]
   11d10:	add	r3, pc, r3
   11d14:	ldr	r2, [r2]
   11d18:	str	r2, [r3, #4]
   11d1c:	b	1187c <ftello64@plt+0xb4>
   11d20:	ldr	r3, [pc, #2840]	; 12840 <ftello64@plt+0x1078>
   11d24:	mov	r2, #0
   11d28:	add	r3, pc, r3
   11d2c:	strb	r2, [r3]
   11d30:	b	1187c <ftello64@plt+0xb4>
   11d34:	ldr	ip, [sp, #36]	; 0x24
   11d38:	ldr	r3, [pc, #2740]	; 127f4 <ftello64@plt+0x102c>
   11d3c:	ldr	r3, [ip, r3]
   11d40:	ldr	r0, [r3]
   11d44:	bl	1462c <ftello64@plt+0x2e64>
   11d48:	ldr	r3, [pc, #2804]	; 12844 <ftello64@plt+0x107c>
   11d4c:	add	r3, pc, r3
   11d50:	str	r0, [r3]
   11d54:	b	1187c <ftello64@plt+0xb4>
   11d58:	ldr	r3, [pc, #2792]	; 12848 <ftello64@plt+0x1080>
   11d5c:	mov	r2, #1
   11d60:	add	r3, pc, r3
   11d64:	strb	r2, [r3, #533]	; 0x215
   11d68:	b	1187c <ftello64@plt+0xb4>
   11d6c:	ldr	r5, [pc, #2776]	; 1284c <ftello64@plt+0x1084>
   11d70:	mov	r0, #4
   11d74:	mov	r3, #1
   11d78:	add	r5, pc, r5
   11d7c:	str	r3, [r5, #1128]	; 0x468
   11d80:	bl	18dac <close_stdout@@Base+0x3580>
   11d84:	str	r0, [r5, #1120]	; 0x460
   11d88:	mov	r0, #4
   11d8c:	bl	18dac <close_stdout@@Base+0x3580>
   11d90:	ldr	r3, [r4]
   11d94:	ldr	r3, [r6, r3, lsl #2]
   11d98:	ldrb	r2, [r3]
   11d9c:	cmp	r2, #0
   11da0:	str	r0, [r5, #1124]	; 0x464
   11da4:	bne	12a88 <ftello64@plt+0x12c0>
   11da8:	ldr	r3, [pc, #2720]	; 12850 <ftello64@plt+0x1088>
   11dac:	mov	r2, #0
   11db0:	add	r3, pc, r3
   11db4:	ldr	r3, [r3, #1120]	; 0x460
   11db8:	str	r2, [r3]
   11dbc:	ldr	r3, [r4]
   11dc0:	add	r3, r3, #1
   11dc4:	str	r3, [r4]
   11dc8:	cmp	r7, r3
   11dcc:	ble	11fa8 <ftello64@plt+0x7e0>
   11dd0:	ldr	r2, [pc, #3160]	; 12a30 <ftello64@plt+0x1268>
   11dd4:	ldr	ip, [sp, #36]	; 0x24
   11dd8:	ldr	r0, [r6, r3, lsl #2]
   11ddc:	ldr	r1, [pc, #2672]	; 12854 <ftello64@plt+0x108c>
   11de0:	ldr	r3, [ip, r2]
   11de4:	add	r1, pc, r1
   11de8:	ldr	r2, [r3]
   11dec:	bl	15a3c <close_stdout@@Base+0x210>
   11df0:	cmp	r0, #0
   11df4:	beq	14250 <ftello64@plt+0x2a88>
   11df8:	ldr	r3, [r4]
   11dfc:	add	r3, r3, #1
   11e00:	str	r3, [r4]
   11e04:	cmp	r7, r3
   11e08:	ble	11fa8 <ftello64@plt+0x7e0>
   11e0c:	ldr	r1, [pc, #2628]	; 12858 <ftello64@plt+0x1090>
   11e10:	mov	r2, #5
   11e14:	mov	r0, #0
   11e18:	add	r1, pc, r1
   11e1c:	bl	114d4 <dcgettext@plt>
   11e20:	ldr	r3, [r4]
   11e24:	mov	r5, r0
   11e28:	ldr	r0, [r6, r3, lsl #2]
   11e2c:	bl	17fb0 <close_stdout@@Base+0x2784>
   11e30:	mov	r2, r5
   11e34:	mov	r3, r0
   11e38:	mov	r0, #0
   11e3c:	mov	r1, r0
   11e40:	bl	11588 <error@plt>
   11e44:	mov	r0, #1
   11e48:	bl	151dc <ftello64@plt+0x3a14>
   11e4c:	ldr	r1, [pc, #2568]	; 1285c <ftello64@plt+0x1094>
   11e50:	mov	r2, #5
   11e54:	mov	r0, #0
   11e58:	add	r1, pc, r1
   11e5c:	bl	114d4 <dcgettext@plt>
   11e60:	mov	r5, r0
   11e64:	ldr	r0, [r4]
   11e68:	bl	17c8c <close_stdout@@Base+0x2460>
   11e6c:	mov	r2, r5
   11e70:	mov	r1, #0
   11e74:	mov	r3, r0
   11e78:	mov	r0, #1
   11e7c:	bl	11588 <error@plt>
   11e80:	ldr	r3, [sp, #96]	; 0x60
   11e84:	b	11c44 <ftello64@plt+0x47c>
   11e88:	ldr	r1, [pc, #2512]	; 12860 <ftello64@plt+0x1098>
   11e8c:	mov	r2, #5
   11e90:	mov	r0, #0
   11e94:	add	r1, pc, r1
   11e98:	bl	114d4 <dcgettext@plt>
   11e9c:	mov	r5, r0
   11ea0:	ldr	r0, [r4]
   11ea4:	bl	17c8c <close_stdout@@Base+0x2460>
   11ea8:	mov	r2, r5
   11eac:	mov	r1, #0
   11eb0:	mov	r3, r0
   11eb4:	mov	r0, #1
   11eb8:	bl	11588 <error@plt>
   11ebc:	ldr	r3, [sp, #96]	; 0x60
   11ec0:	b	11ba4 <ftello64@plt+0x3dc>
   11ec4:	ldr	r3, [pc, #2456]	; 12864 <ftello64@plt+0x109c>
   11ec8:	ldr	ip, [sp, #36]	; 0x24
   11ecc:	ldr	r4, [ip, r3]
   11ed0:	ldr	r3, [r4]
   11ed4:	cmp	r3, r7
   11ed8:	beq	11f78 <ftello64@plt+0x7b0>
   11edc:	ldr	r2, [pc, #2436]	; 12868 <ftello64@plt+0x10a0>
   11ee0:	add	r2, pc, r2
   11ee4:	ldrb	r2, [r2]
   11ee8:	cmp	r2, #0
   11eec:	beq	11d6c <ftello64@plt+0x5a4>
   11ef0:	ldr	r5, [pc, #2420]	; 1286c <ftello64@plt+0x10a4>
   11ef4:	rsb	r7, r3, r7
   11ef8:	add	r5, pc, r5
   11efc:	lsl	r0, r7, #2
   11f00:	str	r7, [r5, #1128]	; 0x468
   11f04:	bl	18dac <close_stdout@@Base+0x3580>
   11f08:	ldr	r3, [r5, #1128]	; 0x468
   11f0c:	str	r0, [r5, #1120]	; 0x460
   11f10:	lsl	r0, r3, #2
   11f14:	bl	18dac <close_stdout@@Base+0x3580>
   11f18:	ldr	ip, [r5, #1128]	; 0x468
   11f1c:	mov	lr, r9
   11f20:	ldr	r1, [r5, #1120]	; 0x460
   11f24:	str	r0, [r5, #1124]	; 0x464
   11f28:	b	11f4c <ftello64@plt+0x784>
   11f2c:	ldrb	r2, [r3, #1]
   11f30:	cmp	r2, #0
   11f34:	bne	11f70 <ftello64@plt+0x7a8>
   11f38:	str	lr, [r1, r9, lsl #2]
   11f3c:	ldr	r3, [r4]
   11f40:	add	r9, r9, #1
   11f44:	add	r3, r3, #1
   11f48:	str	r3, [r4]
   11f4c:	cmp	r9, ip
   11f50:	bge	11fa8 <ftello64@plt+0x7e0>
   11f54:	ldr	r3, [r4]
   11f58:	ldr	r3, [r6, r3, lsl #2]
   11f5c:	ldrb	r2, [r3]
   11f60:	cmp	r2, #0
   11f64:	beq	11f38 <ftello64@plt+0x770>
   11f68:	cmp	r2, #45	; 0x2d
   11f6c:	beq	11f2c <ftello64@plt+0x764>
   11f70:	str	r3, [r1, r9, lsl #2]
   11f74:	b	11f3c <ftello64@plt+0x774>
   11f78:	mov	r0, #4
   11f7c:	ldr	r4, [pc, #2284]	; 12870 <ftello64@plt+0x10a8>
   11f80:	bl	18dac <close_stdout@@Base+0x3580>
   11f84:	add	r4, pc, r4
   11f88:	str	r0, [r4, #1120]	; 0x460
   11f8c:	mov	r0, #4
   11f90:	bl	18dac <close_stdout@@Base+0x3580>
   11f94:	ldr	r3, [r4, #1120]	; 0x460
   11f98:	mov	r2, #1
   11f9c:	str	r2, [r4, #1128]	; 0x468
   11fa0:	str	r9, [r3]
   11fa4:	str	r0, [r4, #1124]	; 0x464
   11fa8:	ldr	r3, [pc, #2244]	; 12874 <ftello64@plt+0x10ac>
   11fac:	add	r3, pc, r3
   11fb0:	ldr	r2, [r3, #516]	; 0x204
   11fb4:	cmp	r2, #0
   11fb8:	bne	11fd8 <ftello64@plt+0x810>
   11fbc:	ldr	r2, [pc, #2228]	; 12878 <ftello64@plt+0x10b0>
   11fc0:	add	r2, pc, r2
   11fc4:	ldrb	r2, [r2]
   11fc8:	cmp	r2, #0
   11fcc:	moveq	r2, #2
   11fd0:	movne	r2, #1
   11fd4:	str	r2, [r3, #516]	; 0x204
   11fd8:	ldr	r4, [pc, #2204]	; 1287c <ftello64@plt+0x10b4>
   11fdc:	add	r4, pc, r4
   11fe0:	ldrb	r3, [r4]
   11fe4:	cmp	r3, #0
   11fe8:	beq	12014 <ftello64@plt+0x84c>
   11fec:	bl	115dc <__ctype_toupper_loc@plt>
   11ff0:	mov	ip, r4
   11ff4:	mov	r3, #0
   11ff8:	ldr	r1, [r0]
   11ffc:	add	r2, ip, #4
   12000:	ldr	r1, [r1, r3, lsl #2]
   12004:	strb	r1, [r3, r2]
   12008:	add	r3, r3, #1
   1200c:	cmp	r3, #256	; 0x100
   12010:	bne	11ff8 <ftello64@plt+0x830>
   12014:	ldr	r3, [pc, #2148]	; 12880 <ftello64@plt+0x10b8>
   12018:	add	r3, pc, r3
   1201c:	ldr	r2, [r3, #536]	; 0x218
   12020:	cmp	r2, #0
   12024:	beq	12b08 <ftello64@plt+0x1340>
   12028:	ldrb	r2, [r2]
   1202c:	cmp	r2, #0
   12030:	streq	r2, [r3, #536]	; 0x218
   12034:	beq	12048 <ftello64@plt+0x880>
   12038:	ldr	r0, [pc, #2116]	; 12884 <ftello64@plt+0x10bc>
   1203c:	add	r0, pc, r0
   12040:	add	r0, r0, #536	; 0x218
   12044:	bl	148f8 <ftello64@plt+0x3130>
   12048:	ldr	r4, [pc, #2104]	; 12888 <ftello64@plt+0x10c0>
   1204c:	add	r4, pc, r4
   12050:	ldr	r3, [r4, #828]	; 0x33c
   12054:	cmp	r3, #0
   12058:	beq	12ab0 <ftello64@plt+0x12e8>
   1205c:	add	r0, r4, #828	; 0x33c
   12060:	bl	148f8 <ftello64@plt+0x3130>
   12064:	ldr	r3, [pc, #2080]	; 1288c <ftello64@plt+0x10c4>
   12068:	add	r3, pc, r3
   1206c:	ldr	r0, [r3, #520]	; 0x208
   12070:	cmp	r0, #0
   12074:	beq	120f8 <ftello64@plt+0x930>
   12078:	add	r1, sp, #96	; 0x60
   1207c:	bl	149a8 <ftello64@plt+0x31e0>
   12080:	ldr	r0, [pc, #2056]	; 12890 <ftello64@plt+0x10c8>
   12084:	mov	r1, #1
   12088:	mov	r2, #256	; 0x100
   1208c:	add	r0, pc, r0
   12090:	add	r0, r0, #1120	; 0x460
   12094:	add	r0, r0, #12
   12098:	bl	116b4 <memset@plt>
   1209c:	ldr	r0, [sp, #96]	; 0x60
   120a0:	ldr	r1, [pc, #2028]	; 12894 <ftello64@plt+0x10cc>
   120a4:	mov	ip, #0
   120a8:	ldr	lr, [sp, #100]	; 0x64
   120ac:	add	r1, pc, r1
   120b0:	mov	r3, r0
   120b4:	b	120c4 <ftello64@plt+0x8fc>
   120b8:	ldrb	r2, [r3], #1
   120bc:	add	r2, r1, r2
   120c0:	strb	ip, [r2, #1132]	; 0x46c
   120c4:	cmp	r3, lr
   120c8:	bcc	120b8 <ftello64@plt+0x8f0>
   120cc:	ldr	r3, [pc, #1988]	; 12898 <ftello64@plt+0x10d0>
   120d0:	add	r3, pc, r3
   120d4:	ldrb	r3, [r3]
   120d8:	cmp	r3, #0
   120dc:	bne	120f4 <ftello64@plt+0x92c>
   120e0:	ldr	r2, [pc, #1972]	; 1289c <ftello64@plt+0x10d4>
   120e4:	add	r2, pc, r2
   120e8:	strb	r3, [r2, #1164]	; 0x48c
   120ec:	strb	r3, [r2, #1141]	; 0x475
   120f0:	strb	r3, [r2, #1142]	; 0x476
   120f4:	bl	11480 <free@plt>
   120f8:	ldr	r4, [pc, #1952]	; 128a0 <ftello64@plt+0x10d8>
   120fc:	add	r4, pc, r4
   12100:	ldr	r0, [r4, #524]	; 0x20c
   12104:	cmp	r0, #0
   12108:	beq	12124 <ftello64@plt+0x95c>
   1210c:	add	r1, r4, #1376	; 0x560
   12110:	add	r1, r1, #12
   12114:	bl	14aac <ftello64@plt+0x32e4>
   12118:	ldr	r3, [r4, #1396]	; 0x574
   1211c:	cmp	r3, #0
   12120:	streq	r3, [r4, #524]	; 0x20c
   12124:	ldr	r4, [pc, #1912]	; 128a4 <ftello64@plt+0x10dc>
   12128:	add	r4, pc, r4
   1212c:	ldr	r0, [r4, #528]	; 0x210
   12130:	cmp	r0, #0
   12134:	beq	12150 <ftello64@plt+0x988>
   12138:	add	r1, r4, #1392	; 0x570
   1213c:	add	r1, r1, #8
   12140:	bl	14aac <ftello64@plt+0x32e4>
   12144:	ldr	r3, [r4, #1408]	; 0x580
   12148:	cmp	r3, #0
   1214c:	streq	r3, [r4, #528]	; 0x210
   12150:	ldr	r3, [pc, #1872]	; 128a8 <ftello64@plt+0x10e0>
   12154:	mov	r2, #0
   12158:	ldr	ip, [pc, #1868]	; 128ac <ftello64@plt+0x10e4>
   1215c:	add	r3, pc, r3
   12160:	str	r2, [sp, #64]	; 0x40
   12164:	add	ip, pc, ip
   12168:	add	r1, r3, #1424	; 0x590
   1216c:	add	r0, ip, #1424	; 0x590
   12170:	add	r1, r1, #4
   12174:	add	r0, r0, #12
   12178:	str	ip, [sp, #56]	; 0x38
   1217c:	str	r3, [sp, #52]	; 0x34
   12180:	str	r0, [sp, #76]	; 0x4c
   12184:	str	r1, [sp, #72]	; 0x48
   12188:	str	r2, [r3, #1412]	; 0x584
   1218c:	str	r2, [r3, #1416]	; 0x588
   12190:	str	r2, [r3, #1420]	; 0x58c
   12194:	str	r2, [r3, #1424]	; 0x590
   12198:	ldr	ip, [sp, #52]	; 0x34
   1219c:	ldr	r3, [ip, #1128]	; 0x468
   121a0:	ldr	ip, [sp, #64]	; 0x40
   121a4:	cmp	ip, r3
   121a8:	ldr	ip, [sp, #52]	; 0x34
   121ac:	bge	12b64 <ftello64@plt+0x139c>
   121b0:	ldr	r3, [ip, #1120]	; 0x460
   121b4:	ldr	ip, [sp, #64]	; 0x40
   121b8:	ldr	r1, [sp, #72]	; 0x48
   121bc:	lsl	ip, ip, #2
   121c0:	str	ip, [sp, #68]	; 0x44
   121c4:	ldr	ip, [sp, #64]	; 0x40
   121c8:	ldr	r0, [r3, ip, lsl #2]
   121cc:	bl	149a8 <ftello64@plt+0x31e0>
   121d0:	ldr	ip, [sp, #52]	; 0x34
   121d4:	ldrb	r3, [ip, #532]	; 0x214
   121d8:	ldr	r9, [ip, #1428]	; 0x594
   121dc:	cmp	r3, #0
   121e0:	ldrne	r4, [ip, #1432]	; 0x598
   121e4:	movne	r6, r9
   121e8:	bne	12690 <ftello64@plt+0xec8>
   121ec:	mov	r7, r9
   121f0:	str	r3, [sp, #28]
   121f4:	ldr	r8, [pc, #1716]	; 128b0 <ftello64@plt+0x10e8>
   121f8:	mov	sl, r9
   121fc:	add	r8, pc, r8
   12200:	add	r3, r8, #1440	; 0x5a0
   12204:	add	r3, r3, #8
   12208:	str	r3, [sp, #32]
   1220c:	ldr	ip, [sp, #56]	; 0x38
   12210:	ldr	ip, [ip, #1432]	; 0x598
   12214:	cmp	ip, r9
   12218:	str	ip, [sp, #60]	; 0x3c
   1221c:	ldr	ip, [sp, #56]	; 0x38
   12220:	bls	12b38 <ftello64@plt+0x1370>
   12224:	ldr	r3, [ip, #536]	; 0x218
   12228:	cmp	r3, #0
   1222c:	beq	12284 <ftello64@plt+0xabc>
   12230:	ldr	ip, [sp, #60]	; 0x3c
   12234:	mov	r1, r9
   12238:	mov	r3, #0
   1223c:	rsb	r2, r9, ip
   12240:	ldr	ip, [sp, #76]	; 0x4c
   12244:	stm	sp, {r2, ip}
   12248:	ldr	ip, [sp, #56]	; 0x38
   1224c:	add	r0, ip, #540	; 0x21c
   12250:	bl	11654 <re_search@plt>
   12254:	cmn	r0, #2
   12258:	beq	12a84 <ftello64@plt+0x12bc>
   1225c:	cmn	r0, #1
   12260:	ldrne	ip, [sp, #56]	; 0x38
   12264:	ldrne	r3, [ip, #1444]	; 0x5a4
   12268:	ldrne	r3, [r3]
   1226c:	addne	r3, r9, r3
   12270:	strne	r3, [sp, #60]	; 0x3c
   12274:	ldr	ip, [sp, #60]	; 0x3c
   12278:	cmp	r9, ip
   1227c:	movcs	r5, ip
   12280:	bcs	122b4 <ftello64@plt+0xaec>
   12284:	bl	1160c <__ctype_b_loc@plt>
   12288:	ldr	r5, [sp, #60]	; 0x3c
   1228c:	ldr	r2, [r0]
   12290:	b	122a0 <ftello64@plt+0xad8>
   12294:	sub	r5, r5, #1
   12298:	cmp	r9, r5
   1229c:	bcs	122b4 <ftello64@plt+0xaec>
   122a0:	ldrb	r3, [r5, #-1]
   122a4:	lsl	r3, r3, #1
   122a8:	ldrh	r3, [r2, r3]
   122ac:	tst	r3, #8192	; 0x2000
   122b0:	bne	12294 <ftello64@plt+0xacc>
   122b4:	ldr	ip, [pc, #1528]	; 128b4 <ftello64@plt+0x10ec>
   122b8:	ldr	r6, [pc, #1528]	; 128b8 <ftello64@plt+0x10f0>
   122bc:	add	ip, pc, ip
   122c0:	str	ip, [sp, #20]
   122c4:	add	r6, pc, r6
   122c8:	ldr	ip, [pc, #1516]	; 128bc <ftello64@plt+0x10f4>
   122cc:	str	r9, [sp, #40]	; 0x28
   122d0:	add	ip, pc, ip
   122d4:	str	ip, [sp, #16]
   122d8:	ldr	r3, [r8, #828]	; 0x33c
   122dc:	cmp	r3, #0
   122e0:	beq	125b4 <ftello64@plt+0xdec>
   122e4:	ldr	ip, [sp, #32]
   122e8:	rsb	r2, r9, r5
   122ec:	add	r0, r8, #832	; 0x340
   122f0:	mov	r1, r9
   122f4:	mov	r3, #0
   122f8:	stm	sp, {r2, ip}
   122fc:	bl	11654 <re_search@plt>
   12300:	cmn	r0, #2
   12304:	beq	12a84 <ftello64@plt+0x12bc>
   12308:	cmn	r0, #1
   1230c:	beq	12750 <ftello64@plt+0xf88>
   12310:	ldr	r2, [r8, #1452]	; 0x5ac
   12314:	ldr	r3, [r8, #1456]	; 0x5b0
   12318:	ldr	r4, [r2]
   1231c:	ldr	r3, [r3]
   12320:	add	r4, r9, r4
   12324:	add	r9, r9, r3
   12328:	cmp	r9, r4
   1232c:	beq	1266c <ftello64@plt+0xea4>
   12330:	rsb	r3, r4, r9
   12334:	ldr	ip, [sp, #20]
   12338:	str	r4, [sp, #80]	; 0x50
   1233c:	uxth	r3, r3
   12340:	strh	r3, [sp, #84]	; 0x54
   12344:	ldr	r2, [ip, #1420]	; 0x58c
   12348:	sxth	r3, r3
   1234c:	cmp	r3, r2
   12350:	add	r9, r4, r3
   12354:	strgt	r3, [ip, #1420]	; 0x58c
   12358:	ldr	r3, [sp, #16]
   1235c:	ldrb	r3, [r3, #532]	; 0x214
   12360:	cmp	r3, #0
   12364:	str	r3, [sp, #12]
   12368:	beq	12414 <ftello64@plt+0xc4c>
   1236c:	cmp	r4, r7
   12370:	bls	1240c <ftello64@plt+0xc44>
   12374:	ldr	ip, [sp, #16]
   12378:	str	r5, [sp, #24]
   1237c:	ldr	r2, [sp, #28]
   12380:	ldr	fp, [ip, #1432]	; 0x598
   12384:	ldr	r1, [ip, #1416]	; 0x588
   12388:	b	12394 <ftello64@plt+0xbcc>
   1238c:	cmp	r4, r7
   12390:	bls	123f8 <ftello64@plt+0xc30>
   12394:	ldrb	r3, [r7]
   12398:	cmp	r3, #10
   1239c:	addne	r7, r7, #1
   123a0:	bne	1238c <ftello64@plt+0xbc4>
   123a4:	add	sl, r7, #1
   123a8:	add	r5, r1, #1
   123ac:	cmp	sl, fp
   123b0:	bcs	1273c <ftello64@plt+0xf74>
   123b4:	bl	1160c <__ctype_b_loc@plt>
   123b8:	mov	r3, sl
   123bc:	ldr	r0, [r0]
   123c0:	b	123d0 <ftello64@plt+0xc08>
   123c4:	cmp	r3, fp
   123c8:	mov	r7, r3
   123cc:	beq	123e8 <ftello64@plt+0xc20>
   123d0:	mov	r7, r3
   123d4:	ldrb	r2, [r3], #1
   123d8:	lsl	r2, r2, #1
   123dc:	ldrh	r2, [r0, r2]
   123e0:	tst	r2, #8192	; 0x2000
   123e4:	beq	123c4 <ftello64@plt+0xbfc>
   123e8:	cmp	r4, r7
   123ec:	mov	r1, r5
   123f0:	rsb	r2, sl, r7
   123f4:	bhi	12394 <ftello64@plt+0xbcc>
   123f8:	ldr	r3, [pc, #1216]	; 128c0 <ftello64@plt+0x10f8>
   123fc:	ldr	r5, [sp, #24]
   12400:	add	r3, pc, r3
   12404:	str	r2, [sp, #28]
   12408:	str	r1, [r3, #1416]	; 0x588
   1240c:	cmp	r4, r7
   12410:	bcc	122d8 <ftello64@plt+0xb10>
   12414:	ldr	r3, [r6, #524]	; 0x20c
   12418:	cmp	r3, #0
   1241c:	beq	12438 <ftello64@plt+0xc70>
   12420:	add	r0, sp, #80	; 0x50
   12424:	ldr	r1, [r6, #1388]	; 0x56c
   12428:	ldr	r2, [r6, #1396]	; 0x574
   1242c:	bl	15180 <ftello64@plt+0x39b8>
   12430:	cmp	r0, #0
   12434:	bne	122d8 <ftello64@plt+0xb10>
   12438:	ldr	r3, [pc, #1156]	; 128c4 <ftello64@plt+0x10fc>
   1243c:	add	r3, pc, r3
   12440:	ldr	r2, [r3, #528]	; 0x210
   12444:	cmp	r2, #0
   12448:	beq	12464 <ftello64@plt+0xc9c>
   1244c:	add	r0, sp, #80	; 0x50
   12450:	ldr	r1, [r3, #1400]	; 0x578
   12454:	ldr	r2, [r3, #1408]	; 0x580
   12458:	bl	15180 <ftello64@plt+0x39b8>
   1245c:	cmp	r0, #0
   12460:	beq	122d8 <ftello64@plt+0xb10>
   12464:	ldr	r3, [pc, #1116]	; 128c8 <ftello64@plt+0x1100>
   12468:	add	r3, pc, r3
   1246c:	ldr	r2, [r3, #1412]	; 0x584
   12470:	ldr	r1, [r3, #1460]	; 0x5b4
   12474:	cmp	r2, r1
   12478:	movne	ip, r2
   1247c:	beq	12700 <ftello64@plt+0xf38>
   12480:	ldr	r3, [pc, #1092]	; 128cc <ftello64@plt+0x1104>
   12484:	add	r3, pc, r3
   12488:	ldrb	r2, [r3, #533]	; 0x215
   1248c:	ldr	r1, [r3, #1464]	; 0x5b8
   12490:	cmp	r2, #0
   12494:	add	fp, r1, ip, lsl #4
   12498:	beq	126d4 <ftello64@plt+0xf0c>
   1249c:	cmp	r4, r7
   124a0:	ldr	r0, [r3, #1416]	; 0x588
   124a4:	bls	1255c <ftello64@plt+0xd94>
   124a8:	ldr	r2, [r3, #1432]	; 0x598
   124ac:	mov	r1, r0
   124b0:	str	r5, [sp, #24]
   124b4:	mov	r5, r4
   124b8:	str	ip, [sp, #48]	; 0x30
   124bc:	mov	r4, sl
   124c0:	str	r6, [sp, #44]	; 0x2c
   124c4:	mov	sl, r2
   124c8:	b	124d4 <ftello64@plt+0xd0c>
   124cc:	cmp	r5, r7
   124d0:	bls	1253c <ftello64@plt+0xd74>
   124d4:	ldrb	r3, [r7]
   124d8:	cmp	r3, #10
   124dc:	addne	r7, r7, #1
   124e0:	bne	124cc <ftello64@plt+0xd04>
   124e4:	add	r4, r7, #1
   124e8:	add	r6, r0, #1
   124ec:	cmp	r4, sl
   124f0:	bcs	12a74 <ftello64@plt+0x12ac>
   124f4:	bl	1160c <__ctype_b_loc@plt>
   124f8:	mov	r3, r4
   124fc:	ldr	lr, [r0]
   12500:	b	12510 <ftello64@plt+0xd48>
   12504:	cmp	r3, sl
   12508:	mov	r7, r3
   1250c:	beq	1252c <ftello64@plt+0xd64>
   12510:	mov	r7, r3
   12514:	add	r3, r3, #1
   12518:	ldrb	r2, [r7]
   1251c:	lsl	r2, r2, #1
   12520:	ldrh	r2, [lr, r2]
   12524:	tst	r2, #8192	; 0x2000
   12528:	beq	12504 <ftello64@plt+0xd3c>
   1252c:	cmp	r5, r7
   12530:	mov	r1, r6
   12534:	mov	r0, r6
   12538:	bhi	124d4 <ftello64@plt+0xd0c>
   1253c:	ldr	r3, [pc, #908]	; 128d0 <ftello64@plt+0x1108>
   12540:	mov	sl, r4
   12544:	ldr	ip, [sp, #48]	; 0x30
   12548:	mov	r4, r5
   1254c:	ldr	r6, [sp, #44]	; 0x2c
   12550:	add	r3, pc, r3
   12554:	ldr	r5, [sp, #24]
   12558:	str	r1, [r3, #1416]	; 0x588
   1255c:	ldr	r2, [sp, #12]
   12560:	str	r0, [fp, #12]
   12564:	cmp	r2, #0
   12568:	beq	12578 <ftello64@plt+0xdb0>
   1256c:	ldr	r0, [sp, #40]	; 0x28
   12570:	cmp	sl, r0
   12574:	beq	12758 <ftello64@plt+0xf90>
   12578:	add	r2, ip, #1
   1257c:	ldr	ip, [sp, #40]	; 0x28
   12580:	ldr	r3, [pc, #844]	; 128d4 <ftello64@plt+0x110c>
   12584:	rsb	r1, r4, ip
   12588:	strh	r1, [fp, #8]
   1258c:	add	r1, sp, #80	; 0x50
   12590:	add	r3, pc, r3
   12594:	rsb	r4, r4, r5
   12598:	strh	r4, [fp, #10]
   1259c:	ldm	r1, {r0, r1}
   125a0:	str	r2, [r3, #1412]	; 0x584
   125a4:	stm	fp, {r0, r1}
   125a8:	ldr	r3, [r8, #828]	; 0x33c
   125ac:	cmp	r3, #0
   125b0:	bne	122e4 <ftello64@plt+0xb1c>
   125b4:	cmp	r9, r5
   125b8:	bcs	1274c <ftello64@plt+0xf84>
   125bc:	ldrb	r3, [r9]
   125c0:	add	r3, r8, r3
   125c4:	ldrb	r3, [r3, #1132]	; 0x46c
   125c8:	cmp	r3, #0
   125cc:	bne	142a8 <ftello64@plt+0x2ae0>
   125d0:	ldr	r2, [pc, #768]	; 128d8 <ftello64@plt+0x1110>
   125d4:	add	r9, r9, #1
   125d8:	add	r2, pc, r2
   125dc:	b	125f8 <ftello64@plt+0xe30>
   125e0:	ldrb	r3, [r9]
   125e4:	add	r9, r9, #1
   125e8:	add	r3, r2, r3
   125ec:	ldrb	r3, [r3, #1132]	; 0x46c
   125f0:	cmp	r3, #0
   125f4:	bne	12604 <ftello64@plt+0xe3c>
   125f8:	cmp	r9, r5
   125fc:	mov	r4, r9
   12600:	bne	125e0 <ftello64@plt+0xe18>
   12604:	cmp	r5, r4
   12608:	beq	12750 <ftello64@plt+0xf88>
   1260c:	cmp	r4, r5
   12610:	bcs	12744 <ftello64@plt+0xf7c>
   12614:	ldr	r3, [pc, #704]	; 128dc <ftello64@plt+0x1114>
   12618:	ldrb	r2, [r4]
   1261c:	add	r3, pc, r3
   12620:	add	r3, r3, r2
   12624:	ldrb	r3, [r3, #1132]	; 0x46c
   12628:	cmp	r3, #0
   1262c:	beq	12744 <ftello64@plt+0xf7c>
   12630:	ldr	r1, [pc, #680]	; 128e0 <ftello64@plt+0x1118>
   12634:	add	r3, r4, #1
   12638:	add	r1, pc, r1
   1263c:	b	12658 <ftello64@plt+0xe90>
   12640:	ldrb	r2, [r3]
   12644:	add	r3, r3, #1
   12648:	add	r2, r1, r2
   1264c:	ldrb	r2, [r2, #1132]	; 0x46c
   12650:	cmp	r2, #0
   12654:	beq	12328 <ftello64@plt+0xb60>
   12658:	cmp	r3, r5
   1265c:	mov	r9, r3
   12660:	bne	12640 <ftello64@plt+0xe78>
   12664:	cmp	r9, r4
   12668:	bne	12330 <ftello64@plt+0xb68>
   1266c:	add	r9, r9, #1
   12670:	b	122d8 <ftello64@plt+0xb10>
   12674:	bl	1160c <__ctype_b_loc@plt>
   12678:	ldrb	r3, [r6], #1
   1267c:	lsl	r3, r3, #1
   12680:	ldr	r2, [r0]
   12684:	ldrh	r3, [r2, r3]
   12688:	tst	r3, #8192	; 0x2000
   1268c:	bne	1269c <ftello64@plt+0xed4>
   12690:	cmp	r6, r4
   12694:	mov	r5, r6
   12698:	bcc	12674 <ftello64@plt+0xeac>
   1269c:	rsb	ip, r9, r5
   126a0:	str	ip, [sp, #28]
   126a4:	b	126c4 <ftello64@plt+0xefc>
   126a8:	bl	1160c <__ctype_b_loc@plt>
   126ac:	ldrb	r3, [r5], #1
   126b0:	lsl	r3, r3, #1
   126b4:	ldr	r2, [r0]
   126b8:	ldrh	r3, [r2, r3]
   126bc:	tst	r3, #8192	; 0x2000
   126c0:	beq	121f4 <ftello64@plt+0xa2c>
   126c4:	cmp	r4, r5
   126c8:	mov	r7, r5
   126cc:	bhi	126a8 <ftello64@plt+0xee0>
   126d0:	b	121f4 <ftello64@plt+0xa2c>
   126d4:	ldr	r1, [sp, #12]
   126d8:	cmp	r1, #0
   126dc:	beq	12578 <ftello64@plt+0xdb0>
   126e0:	ldr	lr, [sp, #28]
   126e4:	rsb	r2, r4, sl
   126e8:	ldr	r1, [r3, #1424]	; 0x590
   126ec:	sxth	r2, r2
   126f0:	str	r2, [fp, #12]
   126f4:	cmp	r1, lr
   126f8:	strlt	lr, [r3, #1424]	; 0x590
   126fc:	b	1256c <ftello64@plt+0xda4>
   12700:	cmn	r2, #-134217727	; 0xf8000001
   12704:	bhi	14280 <ftello64@plt+0x2ab8>
   12708:	lsl	r2, r2, #1
   1270c:	ldr	r0, [r3, #1464]	; 0x5b8
   12710:	add	r1, r2, #1
   12714:	str	r1, [r3, #1460]	; 0x5b4
   12718:	str	r3, [sp, #8]
   1271c:	lsl	r1, r1, #4
   12720:	bl	18e04 <close_stdout@@Base+0x35d8>
   12724:	ldr	r3, [sp, #8]
   12728:	ldrb	r1, [r3, #532]	; 0x214
   1272c:	ldr	ip, [r3, #1412]	; 0x584
   12730:	str	r1, [sp, #12]
   12734:	str	r0, [r3, #1464]	; 0x5b8
   12738:	b	12480 <ftello64@plt+0xcb8>
   1273c:	mov	r7, sl
   12740:	b	123e8 <ftello64@plt+0xc20>
   12744:	mov	r9, r4
   12748:	b	1266c <ftello64@plt+0xea4>
   1274c:	bne	1266c <ftello64@plt+0xea4>
   12750:	ldr	r9, [sp, #60]	; 0x3c
   12754:	b	1220c <ftello64@plt+0xa44>
   12758:	cmp	sl, r5
   1275c:	bcs	14278 <ftello64@plt+0x2ab0>
   12760:	str	ip, [sp, #8]
   12764:	bl	1160c <__ctype_b_loc@plt>
   12768:	mov	r3, sl
   1276c:	ldr	ip, [sp, #8]
   12770:	ldr	r1, [r0]
   12774:	b	12784 <ftello64@plt+0xfbc>
   12778:	cmp	r3, r5
   1277c:	mov	r2, r3
   12780:	beq	12a6c <ftello64@plt+0x12a4>
   12784:	mov	r2, r3
   12788:	ldrb	r0, [r3], #1
   1278c:	lsl	r0, r0, #1
   12790:	ldrh	r0, [r1, r0]
   12794:	tst	r0, #8192	; 0x2000
   12798:	beq	12778 <ftello64@plt+0xfb0>
   1279c:	cmp	r2, r5
   127a0:	str	r2, [sp, #40]	; 0x28
   127a4:	bcs	12578 <ftello64@plt+0xdb0>
   127a8:	str	ip, [sp, #8]
   127ac:	bl	1160c <__ctype_b_loc@plt>
   127b0:	ldr	r3, [sp, #40]	; 0x28
   127b4:	ldr	ip, [sp, #8]
   127b8:	ldr	r1, [r0]
   127bc:	b	12a54 <ftello64@plt+0x128c>
   127c0:	andeq	ip, r1, r8, lsl r8
   127c4:	andeq	r0, r0, r8, asr r1
   127c8:	strdeq	ip, [r1], -r8
   127cc:	andeq	fp, r0, r8, asr r0
   127d0:	andeq	ip, r1, r4, ror #19
   127d4:	strdeq	fp, [r0], -r4
   127d8:	andeq	ip, r1, r0, asr r5
   127dc:	muleq	r1, r8, r9
   127e0:	andeq	fp, r0, r0, ror #1
   127e4:	muleq	r1, r4, r9
   127e8:	andeq	r0, r0, r0, ror r1
   127ec:	andeq	fp, r0, ip, lsl r1
   127f0:	andeq	r0, r0, ip, ror #2
   127f4:	muleq	r0, ip, r1
   127f8:	andeq	sl, r0, r0, asr #12
   127fc:	andeq	sl, r0, r4, lsr #29
   12800:			; <UNDEFINED> instruction: 0x0001c2b8
   12804:	andeq	ip, r1, ip, lsl #14
   12808:	andeq	r0, r0, r4, ror #2
   1280c:	andeq	sl, r0, r8, asr lr
   12810:	andeq	sl, r0, r8, asr lr
   12814:	andeq	sl, r0, r4, asr lr
   12818:	andeq	sl, r0, r4, lsl sp
   1281c:	strdeq	ip, [r1], -r4
   12820:	andeq	ip, r1, r4, asr #12
   12824:	andeq	ip, r1, r8, lsr #12
   12828:	andeq	ip, r1, r8, lsl #12
   1282c:	andeq	ip, r1, r4, asr r5
   12830:	andeq	ip, r1, r4, lsr #11
   12834:	andeq	ip, r1, r8, lsl #11
   12838:	andeq	ip, r1, ip, lsl #10
   1283c:	muleq	r1, r8, r4
   12840:	andeq	ip, r1, r4, ror r4
   12844:	andeq	ip, r1, ip, asr r4
   12848:	andeq	ip, r1, r0, lsr #9
   1284c:	andeq	ip, r1, r8, lsl #9
   12850:	andeq	ip, r1, r0, asr r4
   12854:	ldrdeq	sl, [r0], -r8
   12858:	andeq	sl, r0, r8, lsr #23
   1285c:	andeq	sl, r0, r8, ror #21
   12860:	andeq	sl, r0, r4, asr #21
   12864:	andeq	r0, r0, ip, asr r1
   12868:			; <UNDEFINED> instruction: 0x0001c2bc
   1286c:	andeq	ip, r1, r8, lsl #6
   12870:	andeq	ip, r1, ip, ror r2
   12874:	andeq	ip, r1, r4, asr r2
   12878:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1287c:	andeq	ip, r1, r4, lsr #4
   12880:	andeq	ip, r1, r8, ror #3
   12884:	andeq	ip, r1, r4, asr #3
   12888:			; <UNDEFINED> instruction: 0x0001c1b4
   1288c:	muleq	r1, r8, r1
   12890:	andeq	ip, r1, r4, ror r1
   12894:	andeq	ip, r1, r4, asr r1
   12898:	andeq	ip, r1, ip, asr #1
   1289c:	andeq	ip, r1, ip, lsl r1
   128a0:	andeq	ip, r1, r4, lsl #2
   128a4:	ldrdeq	ip, [r1], -r8
   128a8:	andeq	ip, r1, r4, lsr #1
   128ac:	muleq	r1, ip, r0
   128b0:	andeq	ip, r1, r4
   128b4:	andeq	fp, r1, r4, asr #30
   128b8:	andeq	fp, r1, ip, lsr pc
   128bc:	andeq	fp, r1, r0, lsr pc
   128c0:	andeq	fp, r1, r0, lsl #28
   128c4:	andeq	fp, r1, r4, asr #27
   128c8:	muleq	r1, r8, sp
   128cc:	andeq	fp, r1, ip, ror sp
   128d0:			; <UNDEFINED> instruction: 0x0001bcb0
   128d4:	andeq	fp, r1, r0, ror ip
   128d8:	andeq	fp, r1, r8, lsr #24
   128dc:	andeq	fp, r1, r4, ror #23
   128e0:	andeq	fp, r1, r8, asr #23
   128e4:	andeq	fp, r1, r0, ror #14
   128e8:	ldrdeq	fp, [r1], -r8
   128ec:	muleq	r1, r0, r6
   128f0:	andeq	r9, r0, r8, lsr #29
   128f4:	andeq	r1, r0, r0, asr sl
   128f8:	andeq	r9, r0, r0, asr lr
   128fc:	andeq	fp, r1, r4, asr r6
   12900:	andeq	fp, r1, r0, asr r6
   12904:	andeq	fp, r1, r4, lsr #11
   12908:	muleq	r1, r0, r5
   1290c:	andeq	fp, r1, r4, lsl r5
   12910:	strdeq	fp, [r1], -r4
   12914:	strdeq	fp, [r1], -r8
   12918:	andeq	fp, r1, r8, asr #10
   1291c:	andeq	fp, r1, r0, lsr #9
   12920:	andeq	fp, r1, ip, ror #9
   12924:	andeq	fp, r1, r4, asr #9
   12928:	andeq	fp, r1, ip, lsr #9
   1292c:	andeq	fp, r1, ip, ror r4
   12930:	andeq	r9, r0, ip, asr #24
   12934:	andeq	fp, r1, r0, asr r4
   12938:	andeq	r0, r0, r0, lsl #3
   1293c:	andeq	fp, r1, ip, lsl r4
   12940:	andeq	fp, r1, ip, ror #7
   12944:	andeq	fp, r1, r4, ror #7
   12948:	ldrdeq	fp, [r1], -r8
   1294c:	andeq	fp, r1, r4, lsr r3
   12950:	andeq	fp, r1, r0, lsr r3
   12954:	andeq	fp, r1, ip, ror r2
   12958:	andeq	fp, r1, r8, lsl #4
   1295c:	andeq	fp, r1, r0, asr r2
   12960:	andeq	fp, r1, r8, lsr r2
   12964:	strdeq	fp, [r1], -r8
   12968:	andeq	fp, r1, r8, ror #3
   1296c:	andeq	fp, r1, r8, lsl #3
   12970:	andeq	fp, r1, r4, asr #2
   12974:	andeq	fp, r1, ip, lsr #2
   12978:	andeq	fp, r1, r0, lsr #2
   1297c:	andeq	fp, r1, r8, lsl r1
   12980:	andeq	fp, r1, ip, lsl #2
   12984:	muleq	r1, r4, r0
   12988:	andeq	r9, r0, ip, lsr #2
   1298c:			; <UNDEFINED> instruction: 0x0001afb4
   12990:			; <UNDEFINED> instruction: 0x0001afb8
   12994:	andeq	sl, r1, r0, lsr #31
   12998:	andeq	sl, r1, ip, asr #30
   1299c:	ldrdeq	sl, [r1], -r4
   129a0:	andeq	sl, r1, r0, lsr #30
   129a4:	andeq	sl, r1, r0, ror #29
   129a8:	ldrdeq	sl, [r1], -r0
   129ac:			; <UNDEFINED> instruction: 0x0001aeb0
   129b0:	andeq	sl, r1, r8, lsr #29
   129b4:	strdeq	sl, [r1], -r4
   129b8:	ldrdeq	sl, [r1], -ip
   129bc:	andeq	sl, r1, r0, ror #26
   129c0:	muleq	r1, r8, sp
   129c4:	andeq	sl, r1, ip, lsl #27
   129c8:	andeq	sl, r1, r4, asr sp
   129cc:	andeq	sl, r1, r4, asr #26
   129d0:	ldrdeq	sl, [r1], -ip
   129d4:	andeq	sl, r1, r0, ror #25
   129d8:	andeq	sl, r1, r8, asr #25
   129dc:			; <UNDEFINED> instruction: 0x0001acbc
   129e0:			; <UNDEFINED> instruction: 0x0001acb4
   129e4:	muleq	r1, ip, ip
   129e8:	andeq	sl, r1, r4, asr #23
   129ec:	strdeq	sl, [r1], -r0
   129f0:	andeq	sl, r1, r4, ror #23
   129f4:			; <UNDEFINED> instruction: 0x0001abb0
   129f8:	andeq	sl, r1, r4, lsr #23
   129fc:	andeq	sl, r1, r0, asr #22
   12a00:	andeq	sl, r1, r4, lsr fp
   12a04:	andeq	sl, r1, ip, lsr #21
   12a08:	andeq	r9, r0, r8, lsl r3
   12a0c:			; <UNDEFINED> instruction: 0x0001aabc
   12a10:	ldrdeq	r9, [r0], -r4
   12a14:	andeq	r9, r0, r0, asr #4
   12a18:	ldrdeq	sl, [r1], -r8
   12a1c:	andeq	sl, r1, r0, lsr #19
   12a20:	andeq	sl, r1, ip, asr r9
   12a24:	andeq	sl, r1, r4, lsl #17
   12a28:	ldrdeq	sl, [r1], -r4
   12a2c:	ldrdeq	r9, [r0], -ip
   12a30:	andeq	r0, r0, r4, lsl #3
   12a34:	andeq	r9, r0, r0, lsl #1
   12a38:	andeq	sl, r1, r0, ror #16
   12a3c:	andeq	sl, r1, ip, asr #16
   12a40:	andeq	sl, r1, r8, lsl #16
   12a44:	andeq	r9, r0, r4, lsl r0
   12a48:	cmp	r3, r5
   12a4c:	mov	r2, r3
   12a50:	beq	12a6c <ftello64@plt+0x12a4>
   12a54:	mov	r2, r3
   12a58:	ldrb	r0, [r3], #1
   12a5c:	lsl	r0, r0, #1
   12a60:	ldrh	r0, [r1, r0]
   12a64:	tst	r0, #8192	; 0x2000
   12a68:	bne	12a48 <ftello64@plt+0x1280>
   12a6c:	str	r2, [sp, #40]	; 0x28
   12a70:	b	12578 <ftello64@plt+0xdb0>
   12a74:	mov	r1, r6
   12a78:	mov	r7, r4
   12a7c:	mov	r0, r6
   12a80:	b	124cc <ftello64@plt+0xd04>
   12a84:	bl	145f0 <ftello64@plt+0x2e28>
   12a88:	cmp	r2, #45	; 0x2d
   12a8c:	bne	12a9c <ftello64@plt+0x12d4>
   12a90:	ldrb	r2, [r3, #1]
   12a94:	cmp	r2, #0
   12a98:	beq	11da8 <ftello64@plt+0x5e0>
   12a9c:	ldr	r2, [pc, #-448]	; 128e4 <ftello64@plt+0x111c>
   12aa0:	add	r2, pc, r2
   12aa4:	ldr	r2, [r2, #1120]	; 0x460
   12aa8:	str	r3, [r2]
   12aac:	b	11dbc <ftello64@plt+0x5f4>
   12ab0:	ldr	r6, [r4, #520]	; 0x208
   12ab4:	cmp	r6, #0
   12ab8:	movne	r0, r6
   12abc:	bne	12078 <ftello64@plt+0x8b0>
   12ac0:	ldr	r3, [pc, #-480]	; 128e8 <ftello64@plt+0x1120>
   12ac4:	add	r3, pc, r3
   12ac8:	ldrb	r5, [r3]
   12acc:	cmp	r5, #0
   12ad0:	beq	14284 <ftello64@plt+0x2abc>
   12ad4:	add	r4, r4, #1120	; 0x460
   12ad8:	bl	1160c <__ctype_b_loc@plt>
   12adc:	mov	r3, r6
   12ae0:	ldr	ip, [r0]
   12ae4:	lsl	r1, r3, #1
   12ae8:	add	r2, r4, #12
   12aec:	ldrh	r1, [ip, r1]
   12af0:	ubfx	r1, r1, #10, #1
   12af4:	strb	r1, [r3, r2]
   12af8:	add	r3, r3, #1
   12afc:	cmp	r3, #256	; 0x100
   12b00:	bne	12ae0 <ftello64@plt+0x1318>
   12b04:	b	12064 <ftello64@plt+0x89c>
   12b08:	ldr	r2, [pc, #-548]	; 128ec <ftello64@plt+0x1124>
   12b0c:	add	r2, pc, r2
   12b10:	ldrb	r2, [r2]
   12b14:	cmp	r2, #0
   12b18:	beq	13164 <ftello64@plt+0x199c>
   12b1c:	ldrb	r2, [r3, #532]	; 0x214
   12b20:	cmp	r2, #0
   12b24:	bne	13164 <ftello64@plt+0x199c>
   12b28:	ldr	r2, [pc, #-576]	; 128f0 <ftello64@plt+0x1128>
   12b2c:	add	r2, pc, r2
   12b30:	str	r2, [r3, #536]	; 0x218
   12b34:	b	12038 <ftello64@plt+0x870>
   12b38:	ldr	r2, [ip, #1124]	; 0x464
   12b3c:	ldr	ip, [sp, #64]	; 0x40
   12b40:	add	ip, ip, #1
   12b44:	str	ip, [sp, #64]	; 0x40
   12b48:	ldr	ip, [sp, #56]	; 0x38
   12b4c:	ldr	r3, [ip, #1416]	; 0x588
   12b50:	add	r3, r3, #1
   12b54:	str	r3, [ip, #1416]	; 0x588
   12b58:	ldr	ip, [sp, #68]	; 0x44
   12b5c:	str	r3, [r2, ip]
   12b60:	b	12198 <ftello64@plt+0x9d0>
   12b64:	ldr	r3, [pc, #-632]	; 128f4 <ftello64@plt+0x112c>
   12b68:	mov	r2, #16
   12b6c:	ldr	r0, [ip, #1464]	; 0x5b8
   12b70:	ldr	r1, [ip, #1412]	; 0x584
   12b74:	add	r3, pc, r3
   12b78:	bl	11774 <qsort@plt>
   12b7c:	ldr	ip, [sp, #52]	; 0x34
   12b80:	ldrb	r3, [ip, #533]	; 0x215
   12b84:	cmp	r3, #0
   12b88:	beq	12c58 <ftello64@plt+0x1490>
   12b8c:	ldr	r4, [sp, #52]	; 0x34
   12b90:	mov	r5, #0
   12b94:	ldr	r8, [pc, #-676]	; 128f8 <ftello64@plt+0x1130>
   12b98:	add	r6, sp, #104	; 0x68
   12b9c:	ldr	r7, [pc, #-680]	; 128fc <ftello64@plt+0x1134>
   12ba0:	ldr	r9, [pc, #-680]	; 12900 <ftello64@plt+0x1138>
   12ba4:	add	r8, pc, r8
   12ba8:	str	r5, [r4, #1424]	; 0x590
   12bac:	add	r7, pc, r7
   12bb0:	add	r9, pc, r9
   12bb4:	b	12c28 <ftello64@plt+0x1460>
   12bb8:	ldr	r3, [r4, #1124]	; 0x464
   12bbc:	cmp	r5, #0
   12bc0:	lsl	sl, r5, #2
   12bc4:	mov	r1, #1
   12bc8:	mov	r0, r6
   12bcc:	ldr	r2, [r3, r5, lsl #2]
   12bd0:	addgt	r3, r3, sl
   12bd4:	ldrgt	r3, [r3, #-4]
   12bd8:	add	r2, r2, #1
   12bdc:	rsbgt	r2, r3, r2
   12be0:	mov	r3, r8
   12be4:	str	r2, [sp]
   12be8:	mov	r2, #12
   12bec:	bl	11690 <__sprintf_chk@plt>
   12bf0:	mov	r0, r6
   12bf4:	bl	1163c <strlen@plt>
   12bf8:	ldr	r3, [r7, #1120]	; 0x460
   12bfc:	mov	fp, r0
   12c00:	ldr	r0, [r3, sl]
   12c04:	cmp	r0, #0
   12c08:	moveq	r0, fp
   12c0c:	beq	12c18 <ftello64@plt+0x1450>
   12c10:	bl	1163c <strlen@plt>
   12c14:	add	r0, r0, fp
   12c18:	ldr	r3, [r9, #1424]	; 0x590
   12c1c:	add	r5, r5, #1
   12c20:	cmp	r3, r0
   12c24:	strlt	r0, [r9, #1424]	; 0x590
   12c28:	ldr	r3, [r4, #1128]	; 0x468
   12c2c:	cmp	r5, r3
   12c30:	blt	12bb8 <ftello64@plt+0x13f0>
   12c34:	ldr	r0, [r4, #1424]	; 0x590
   12c38:	add	r0, r0, #1
   12c3c:	str	r0, [r4, #1424]	; 0x590
   12c40:	add	r0, r0, #1
   12c44:	bl	18dac <close_stdout@@Base+0x3580>
   12c48:	ldrb	r3, [r4, #533]	; 0x215
   12c4c:	cmp	r3, #0
   12c50:	str	r0, [r4, #1468]	; 0x5bc
   12c54:	bne	12c6c <ftello64@plt+0x14a4>
   12c58:	ldr	r3, [pc, #-860]	; 12904 <ftello64@plt+0x113c>
   12c5c:	add	r3, pc, r3
   12c60:	ldrb	r3, [r3, #532]	; 0x214
   12c64:	cmp	r3, #0
   12c68:	beq	12ca0 <ftello64@plt+0x14d8>
   12c6c:	ldr	r2, [pc, #-876]	; 12908 <ftello64@plt+0x1140>
   12c70:	add	r2, pc, r2
   12c74:	ldrb	r3, [r2, #534]	; 0x216
   12c78:	cmp	r3, #0
   12c7c:	bne	12ca0 <ftello64@plt+0x14d8>
   12c80:	ldr	r3, [pc, #-892]	; 1290c <ftello64@plt+0x1144>
   12c84:	ldr	r0, [r2, #1424]	; 0x590
   12c88:	add	r3, pc, r3
   12c8c:	ldr	r2, [r3, #4]
   12c90:	ldr	r1, [r3, #8]
   12c94:	add	r2, r0, r2
   12c98:	rsb	r2, r2, r1
   12c9c:	str	r2, [r3, #8]
   12ca0:	ldr	r3, [pc, #-920]	; 12910 <ftello64@plt+0x1148>
   12ca4:	ldr	r2, [pc, #-920]	; 12914 <ftello64@plt+0x114c>
   12ca8:	add	r3, pc, r3
   12cac:	ldr	r5, [pc, #-924]	; 12918 <ftello64@plt+0x1150>
   12cb0:	add	r2, pc, r2
   12cb4:	ldr	r4, [r3, #8]
   12cb8:	add	r5, pc, r5
   12cbc:	ldr	r0, [r2]
   12cc0:	ldr	r6, [r3, #4]
   12cc4:	add	r4, r4, r4, lsr #31
   12cc8:	cmp	r0, #0
   12ccc:	asr	r4, r4, #1
   12cd0:	str	r4, [r5, #1476]	; 0x5c4
   12cd4:	rsb	r6, r6, r4
   12cd8:	str	r4, [r5, #1484]	; 0x5cc
   12cdc:	str	r6, [r5, #1480]	; 0x5c8
   12ce0:	beq	1421c <ftello64@plt+0x2a54>
   12ce4:	ldrb	r3, [r0]
   12ce8:	cmp	r3, #0
   12cec:	beq	1421c <ftello64@plt+0x2a54>
   12cf0:	bl	1163c <strlen@plt>
   12cf4:	str	r0, [r5, #1488]	; 0x5d0
   12cf8:	ldr	r3, [pc, #-996]	; 1291c <ftello64@plt+0x1154>
   12cfc:	add	r3, pc, r3
   12d00:	ldrb	r3, [r3]
   12d04:	cmp	r3, #0
   12d08:	beq	14200 <ftello64@plt+0x2a38>
   12d0c:	ldr	r3, [pc, #-1012]	; 12920 <ftello64@plt+0x1158>
   12d10:	mvn	r1, #1
   12d14:	add	r3, pc, r3
   12d18:	ldr	r2, [r3, #1488]	; 0x5d0
   12d1c:	mul	r2, r1, r2
   12d20:	add	r6, r6, r2
   12d24:	str	r6, [r3, #1480]	; 0x5c8
   12d28:	cmp	r6, #0
   12d2c:	add	r2, r4, r2
   12d30:	movlt	r1, #0
   12d34:	strlt	r1, [r3, #1480]	; 0x5c8
   12d38:	ldr	r3, [pc, #-1052]	; 12924 <ftello64@plt+0x115c>
   12d3c:	add	r3, pc, r3
   12d40:	str	r2, [r3, #1484]	; 0x5cc
   12d44:	bl	1160c <__ctype_b_loc@plt>
   12d48:	mov	fp, r0
   12d4c:	ldr	r0, [pc, #-1068]	; 12928 <ftello64@plt+0x1160>
   12d50:	ldr	r2, [fp]
   12d54:	add	r0, pc, r0
   12d58:	add	r0, r0, #260	; 0x104
   12d5c:	sub	r2, r2, #2
   12d60:	sub	r3, r0, #1
   12d64:	add	r0, r0, #255	; 0xff
   12d68:	ldrh	r1, [r2, #2]!
   12d6c:	ubfx	r1, r1, #13, #1
   12d70:	strb	r1, [r3, #1]!
   12d74:	cmp	r3, r0
   12d78:	bne	12d68 <ftello64@plt+0x15a0>
   12d7c:	ldr	r3, [pc, #-1112]	; 1292c <ftello64@plt+0x1164>
   12d80:	mov	r2, #1
   12d84:	add	r3, pc, r3
   12d88:	ldr	r1, [r3, #516]	; 0x204
   12d8c:	strb	r2, [r3, #272]	; 0x110
   12d90:	cmp	r1, #2
   12d94:	strbeq	r2, [r3, #294]	; 0x126
   12d98:	beq	12e08 <ftello64@plt+0x1640>
   12d9c:	cmp	r1, #3
   12da0:	bne	12e08 <ftello64@plt+0x1640>
   12da4:	ldr	r3, [pc, #-1148]	; 12930 <ftello64@plt+0x1168>
   12da8:	ldr	r0, [pc, #-1148]	; 12934 <ftello64@plt+0x116c>
   12dac:	add	r3, pc, r3
   12db0:	add	r0, pc, r0
   12db4:	sub	r3, r3, #1
   12db8:	b	12dc4 <ftello64@plt+0x15fc>
   12dbc:	add	r1, r0, r1
   12dc0:	strb	r2, [r1, #260]	; 0x104
   12dc4:	ldrb	r1, [r3, #1]!
   12dc8:	cmp	r1, #0
   12dcc:	bne	12dbc <ftello64@plt+0x15f4>
   12dd0:	ldr	r2, [pc, #-1184]	; 12938 <ftello64@plt+0x1170>
   12dd4:	mov	r3, #128	; 0x80
   12dd8:	ldr	ip, [sp, #36]	; 0x24
   12ddc:	ldr	r1, [pc, #-1192]	; 1293c <ftello64@plt+0x1174>
   12de0:	ldr	r2, [ip, r2]
   12de4:	add	r1, pc, r1
   12de8:	ldrb	ip, [r2, r3]
   12dec:	add	r0, r1, #260	; 0x104
   12df0:	adds	ip, ip, #0
   12df4:	movne	ip, #1
   12df8:	strb	ip, [r3, r0]
   12dfc:	add	r3, r3, #1
   12e00:	cmp	r3, #256	; 0x100
   12e04:	bne	12de8 <ftello64@plt+0x1620>
   12e08:	ldr	r3, [pc, #-1232]	; 12940 <ftello64@plt+0x1178>
   12e0c:	mov	r2, #0
   12e10:	ldr	sl, [pc, #-1236]	; 12944 <ftello64@plt+0x117c>
   12e14:	add	r3, pc, r3
   12e18:	ldr	r7, [pc, #-1240]	; 12948 <ftello64@plt+0x1180>
   12e1c:	add	sl, pc, sl
   12e20:	str	r2, [sp, #40]	; 0x28
   12e24:	ldr	r1, [r3, #1464]	; 0x5b8
   12e28:	add	r7, pc, r7
   12e2c:	add	ip, sl, #832	; 0x340
   12e30:	str	r3, [sp, #24]
   12e34:	str	ip, [sp, #52]	; 0x34
   12e38:	add	r1, r1, #16
   12e3c:	add	ip, r7, #832	; 0x340
   12e40:	str	r2, [r3, #1492]	; 0x5d4
   12e44:	str	r1, [sp, #12]
   12e48:	str	r2, [r3, #1496]	; 0x5d8
   12e4c:	str	r2, [r3, #1500]	; 0x5dc
   12e50:	str	ip, [sp, #32]
   12e54:	str	r2, [r3, #1504]	; 0x5e0
   12e58:	str	r2, [r3, #1508]	; 0x5e4
   12e5c:	str	r2, [r3, #1512]	; 0x5e8
   12e60:	ldr	ip, [sp, #24]
   12e64:	ldr	r3, [ip, #1412]	; 0x584
   12e68:	ldr	ip, [sp, #40]	; 0x28
   12e6c:	cmp	ip, r3
   12e70:	bcs	14230 <ftello64@plt+0x2a68>
   12e74:	ldr	ip, [sp, #12]
   12e78:	ldr	r3, [ip, #-16]
   12e7c:	ldrsh	r5, [ip, #-12]
   12e80:	ldrsh	r4, [ip, #-6]
   12e84:	add	r5, r3, r5
   12e88:	ldrsh	r2, [ip, #-8]
   12e8c:	add	r4, r3, r4
   12e90:	ldr	ip, [sp, #24]
   12e94:	cmp	r5, r4
   12e98:	add	r2, r3, r2
   12e9c:	str	r2, [sp, #48]	; 0x30
   12ea0:	str	r3, [ip, #1516]	; 0x5ec
   12ea4:	str	r5, [ip, #1520]	; 0x5f0
   12ea8:	bcs	12f80 <ftello64@plt+0x17b8>
   12eac:	ldr	r2, [ip, #1484]	; 0x5cc
   12eb0:	add	r3, r3, r2
   12eb4:	cmp	r5, r3
   12eb8:	bhi	13e5c <ftello64@plt+0x2694>
   12ebc:	ldr	r9, [pc, #-1400]	; 1294c <ftello64@plt+0x1184>
   12ec0:	mov	r8, #0
   12ec4:	ldr	r6, [pc, #-1404]	; 12950 <ftello64@plt+0x1188>
   12ec8:	str	r7, [sp, #16]
   12ecc:	add	r9, pc, r9
   12ed0:	add	r6, pc, r6
   12ed4:	ldr	r7, [sp, #52]	; 0x34
   12ed8:	b	12f24 <ftello64@plt+0x175c>
   12edc:	str	r8, [sp]
   12ee0:	mov	r0, r7
   12ee4:	mov	r1, r5
   12ee8:	rsb	r2, r5, r4
   12eec:	mov	r3, #0
   12ef0:	bl	11660 <re_match@plt>
   12ef4:	cmn	r0, #2
   12ef8:	beq	12a84 <ftello64@plt+0x12bc>
   12efc:	cmn	r0, #1
   12f00:	moveq	r0, #1
   12f04:	add	r5, r5, r0
   12f08:	cmp	r5, r4
   12f0c:	bcs	12f7c <ftello64@plt+0x17b4>
   12f10:	ldr	r2, [r6, #1516]	; 0x5ec
   12f14:	ldr	r3, [r6, #1484]	; 0x5cc
   12f18:	add	r3, r2, r3
   12f1c:	cmp	r5, r3
   12f20:	bhi	13e58 <ftello64@plt+0x2690>
   12f24:	ldr	r3, [sl, #828]	; 0x33c
   12f28:	str	r5, [sl, #1520]	; 0x5f0
   12f2c:	cmp	r3, #0
   12f30:	bne	12edc <ftello64@plt+0x1714>
   12f34:	ldrb	r3, [r5]
   12f38:	add	r3, sl, r3
   12f3c:	ldrb	r3, [r3, #1132]	; 0x46c
   12f40:	cmp	r3, #0
   12f44:	beq	131d8 <ftello64@plt+0x1a10>
   12f48:	cmp	r4, r5
   12f4c:	bls	12f7c <ftello64@plt+0x17b4>
   12f50:	add	r3, r5, #1
   12f54:	b	12f70 <ftello64@plt+0x17a8>
   12f58:	ldrb	r2, [r3]
   12f5c:	add	r3, r3, #1
   12f60:	add	r2, r9, r2
   12f64:	ldrb	r2, [r2, #1132]	; 0x46c
   12f68:	cmp	r2, #0
   12f6c:	beq	12f10 <ftello64@plt+0x1748>
   12f70:	cmp	r3, r4
   12f74:	mov	r5, r3
   12f78:	bne	12f58 <ftello64@plt+0x1790>
   12f7c:	ldr	r7, [sp, #16]
   12f80:	ldr	r3, [pc, #-1588]	; 12954 <ftello64@plt+0x118c>
   12f84:	add	r3, pc, r3
   12f88:	ldr	r2, [r3, #1516]	; 0x5ec
   12f8c:	ldr	r1, [r3, #1484]	; 0x5cc
   12f90:	add	r1, r2, r1
   12f94:	cmp	r5, r1
   12f98:	strls	r5, [r3, #1520]	; 0x5f0
   12f9c:	ldr	r3, [pc, #-1612]	; 12958 <ftello64@plt+0x1190>
   12fa0:	ldr	r0, [pc, r3]
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fc4 <ftello64@plt+0x17fc>
   12fac:	ldr	r3, [pc, #-1624]	; 1295c <ftello64@plt+0x1194>
   12fb0:	add	r3, pc, r3
   12fb4:	ldr	r0, [r3, #1520]	; 0x5f0
   12fb8:	cmp	r4, r0
   12fbc:	movls	r0, #0
   12fc0:	movhi	r0, #1
   12fc4:	ldr	r1, [pc, #-1644]	; 12960 <ftello64@plt+0x1198>
   12fc8:	add	r1, pc, r1
   12fcc:	ldr	r3, [r1, #1520]	; 0x5f0
   12fd0:	str	r0, [r1, #1524]	; 0x5f4
   12fd4:	cmp	r2, r3
   12fd8:	ldrcc	r0, [fp]
   12fdc:	bcc	12ff0 <ftello64@plt+0x1828>
   12fe0:	b	13010 <ftello64@plt+0x1848>
   12fe4:	sub	r3, r3, #1
   12fe8:	cmp	r3, r2
   12fec:	beq	13e6c <ftello64@plt+0x26a4>
   12ff0:	ldrb	r1, [r3, #-1]
   12ff4:	lsl	r1, r1, #1
   12ff8:	ldrh	r1, [r0, r1]
   12ffc:	tst	r1, #8192	; 0x2000
   13000:	bne	12fe4 <ftello64@plt+0x181c>
   13004:	ldr	r1, [pc, #-1704]	; 12964 <ftello64@plt+0x119c>
   13008:	add	r1, pc, r1
   1300c:	str	r3, [r1, #1520]	; 0x5f0
   13010:	ldr	r0, [pc, #-1712]	; 12968 <ftello64@plt+0x11a0>
   13014:	ldr	ip, [sp, #12]
   13018:	add	r0, pc, r0
   1301c:	ldrsh	r3, [ip, #-8]
   13020:	ldr	lr, [r0, #1476]	; 0x5c4
   13024:	ldr	ip, [r0, #1420]	; 0x58c
   13028:	rsb	r1, r3, #0
   1302c:	add	ip, lr, ip
   13030:	cmp	r1, ip
   13034:	ble	13e50 <ftello64@plt+0x2688>
   13038:	ldr	r3, [r0, #828]	; 0x33c
   1303c:	rsb	r6, ip, r2
   13040:	cmp	r3, #0
   13044:	beq	13f08 <ftello64@plt+0x2740>
   13048:	mov	r3, #0
   1304c:	add	r0, r0, #832	; 0x340
   13050:	rsb	r2, r6, r2
   13054:	str	r3, [sp]
   13058:	mov	r1, r6
   1305c:	bl	11660 <re_match@plt>
   13060:	cmn	r0, #2
   13064:	beq	12a84 <ftello64@plt+0x12bc>
   13068:	cmn	r0, #1
   1306c:	moveq	r0, #1
   13070:	add	r6, r6, r0
   13074:	ldr	r2, [pc, #-1808]	; 1296c <ftello64@plt+0x11a4>
   13078:	add	r2, pc, r2
   1307c:	ldr	r3, [r2, #1516]	; 0x5ec
   13080:	str	r6, [r2, #1528]	; 0x5f8
   13084:	cmp	r6, r3
   13088:	str	r3, [r2, #1532]	; 0x5fc
   1308c:	ldrcc	r1, [fp]
   13090:	bcc	130a4 <ftello64@plt+0x18dc>
   13094:	b	130c4 <ftello64@plt+0x18fc>
   13098:	sub	r3, r3, #1
   1309c:	cmp	r3, r6
   130a0:	beq	13e7c <ftello64@plt+0x26b4>
   130a4:	ldrb	r2, [r3, #-1]
   130a8:	lsl	r2, r2, #1
   130ac:	ldrh	r2, [r1, r2]
   130b0:	tst	r2, #8192	; 0x2000
   130b4:	bne	13098 <ftello64@plt+0x18d0>
   130b8:	ldr	r2, [pc, #-1872]	; 12970 <ftello64@plt+0x11a8>
   130bc:	add	r2, pc, r2
   130c0:	str	r3, [r2, #1532]	; 0x5fc
   130c4:	ldr	ip, [pc, #-1880]	; 12974 <ftello64@plt+0x11ac>
   130c8:	mov	r1, r6
   130cc:	ldr	r5, [pc, #-1884]	; 12978 <ftello64@plt+0x11b0>
   130d0:	mov	r9, #0
   130d4:	add	ip, pc, ip
   130d8:	ldr	r8, [pc, #-1892]	; 1297c <ftello64@plt+0x11b4>
   130dc:	str	ip, [sp, #16]
   130e0:	add	r5, pc, r5
   130e4:	ldr	ip, [pc, #-1900]	; 12980 <ftello64@plt+0x11b8>
   130e8:	add	r8, pc, r8
   130ec:	add	lr, r5, #832	; 0x340
   130f0:	str	r4, [sp, #28]
   130f4:	add	ip, pc, ip
   130f8:	str	r6, [sp, #44]	; 0x2c
   130fc:	mov	r6, r8
   13100:	mov	r8, r7
   13104:	mov	r4, ip
   13108:	mov	r7, lr
   1310c:	str	lr, [sp, #20]
   13110:	ldr	r0, [r5, #1480]	; 0x5c8
   13114:	ldr	r2, [r5, #1532]	; 0x5fc
   13118:	add	r3, r1, r0
   1311c:	cmp	r2, r3
   13120:	bls	131e8 <ftello64@plt+0x1a20>
   13124:	ldr	r3, [r5, #828]	; 0x33c
   13128:	cmp	r3, #0
   1312c:	beq	1317c <ftello64@plt+0x19b4>
   13130:	str	r9, [sp]
   13134:	rsb	r2, r1, r2
   13138:	mov	r0, r7
   1313c:	mov	r3, #0
   13140:	bl	11660 <re_match@plt>
   13144:	cmn	r0, #2
   13148:	beq	12a84 <ftello64@plt+0x12bc>
   1314c:	ldr	r1, [r5, #1528]	; 0x5f8
   13150:	cmn	r0, #1
   13154:	moveq	r0, #1
   13158:	add	r1, r1, r0
   1315c:	str	r1, [r4, #1528]	; 0x5f8
   13160:	b	13110 <ftello64@plt+0x1948>
   13164:	ldr	r3, [pc, #-2024]	; 12984 <ftello64@plt+0x11bc>
   13168:	ldr	r2, [pc, #-2024]	; 12988 <ftello64@plt+0x11c0>
   1316c:	add	r3, pc, r3
   13170:	add	r2, pc, r2
   13174:	str	r2, [r3, #536]	; 0x218
   13178:	b	12038 <ftello64@plt+0x870>
   1317c:	ldrb	r3, [r1]
   13180:	add	r3, r5, r3
   13184:	ldrb	r3, [r3, #1132]	; 0x46c
   13188:	cmp	r3, #0
   1318c:	addeq	r1, r1, #1
   13190:	streq	r1, [r5, #1528]	; 0x5f8
   13194:	beq	13110 <ftello64@plt+0x1948>
   13198:	cmp	r2, r1
   1319c:	bls	13110 <ftello64@plt+0x1948>
   131a0:	add	r3, r1, #1
   131a4:	b	131c0 <ftello64@plt+0x19f8>
   131a8:	ldrb	r0, [r3]
   131ac:	add	r3, r3, #1
   131b0:	add	r0, r6, r0
   131b4:	ldrb	r0, [r0, #1132]	; 0x46c
   131b8:	cmp	r0, #0
   131bc:	beq	131e0 <ftello64@plt+0x1a18>
   131c0:	cmp	r3, r2
   131c4:	mov	r1, r3
   131c8:	bne	131a8 <ftello64@plt+0x19e0>
   131cc:	ldr	ip, [sp, #16]
   131d0:	str	r2, [ip, #1528]	; 0x5f8
   131d4:	b	13110 <ftello64@plt+0x1948>
   131d8:	add	r5, r5, #1
   131dc:	b	12f08 <ftello64@plt+0x1740>
   131e0:	str	r1, [r6, #1528]	; 0x5f8
   131e4:	b	13110 <ftello64@plt+0x1948>
   131e8:	ldr	r3, [pc, #-2148]	; 1298c <ftello64@plt+0x11c4>
   131ec:	mov	r7, r8
   131f0:	ldr	r4, [sp, #28]
   131f4:	add	r3, pc, r3
   131f8:	ldr	r6, [sp, #44]	; 0x2c
   131fc:	ldr	r3, [r3]
   13200:	cmp	r3, #0
   13204:	streq	r3, [r5, #1536]	; 0x600
   13208:	beq	1325c <ftello64@plt+0x1a94>
   1320c:	ldr	ip, [r5, #1428]	; 0x594
   13210:	cmp	ip, r1
   13214:	bcs	13240 <ftello64@plt+0x1a78>
   13218:	ldr	lr, [fp]
   1321c:	b	1322c <ftello64@plt+0x1a64>
   13220:	sub	r1, r1, #1
   13224:	cmp	r1, ip
   13228:	beq	13240 <ftello64@plt+0x1a78>
   1322c:	ldrb	r3, [r1, #-1]
   13230:	lsl	r3, r3, #1
   13234:	ldrh	r3, [lr, r3]
   13238:	tst	r3, #8192	; 0x2000
   1323c:	bne	13220 <ftello64@plt+0x1a58>
   13240:	ldr	r3, [pc, #-2232]	; 12990 <ftello64@plt+0x11c8>
   13244:	ldr	ip, [sp, #48]	; 0x30
   13248:	add	r3, pc, r3
   1324c:	cmp	ip, r1
   13250:	movcs	r1, #0
   13254:	movcc	r1, #1
   13258:	str	r1, [r3, #1536]	; 0x600
   1325c:	ldr	r1, [pc, #-2256]	; 12994 <ftello64@plt+0x11cc>
   13260:	add	r1, pc, r1
   13264:	ldr	r3, [r1, #1528]	; 0x5f8
   13268:	ldr	ip, [r1, #1432]	; 0x598
   1326c:	cmp	ip, r3
   13270:	bls	132bc <ftello64@plt+0x1af4>
   13274:	mov	r1, r3
   13278:	ldr	r8, [fp]
   1327c:	mov	r5, r3
   13280:	b	13294 <ftello64@plt+0x1acc>
   13284:	cmp	r1, ip
   13288:	mov	r3, r1
   1328c:	beq	13ebc <ftello64@plt+0x26f4>
   13290:	mov	r5, r1
   13294:	mov	r3, r1
   13298:	add	r1, r1, #1
   1329c:	ldrb	lr, [r3]
   132a0:	lsl	lr, lr, #1
   132a4:	ldrh	lr, [r8, lr]
   132a8:	tst	lr, #8192	; 0x2000
   132ac:	bne	13284 <ftello64@plt+0x1abc>
   132b0:	ldr	r1, [pc, #-2336]	; 12998 <ftello64@plt+0x11d0>
   132b4:	add	r1, pc, r1
   132b8:	str	r5, [r1, #1528]	; 0x5f8
   132bc:	ldr	r1, [pc, #-2344]	; 1299c <ftello64@plt+0x11d4>
   132c0:	rsb	r3, r2, r3
   132c4:	add	r0, r0, r3
   132c8:	add	r1, pc, r1
   132cc:	ldr	r3, [r1, #4]
   132d0:	rsb	r8, r3, r0
   132d4:	cmp	r8, #0
   132d8:	ble	13eec <ftello64@plt+0x2724>
   132dc:	ldr	r2, [pc, #-2372]	; 129a0 <ftello64@plt+0x11d8>
   132e0:	add	r2, pc, r2
   132e4:	ldr	r1, [r2, #1520]	; 0x5f0
   132e8:	mov	r3, r1
   132ec:	str	r1, [r2, #1492]	; 0x5d4
   132f0:	b	13310 <ftello64@plt+0x1b48>
   132f4:	ldrb	r2, [r3]
   132f8:	add	r3, r3, #1
   132fc:	ldr	r1, [fp]
   13300:	lsl	r2, r2, #1
   13304:	ldrh	r2, [r1, r2]
   13308:	tst	r2, #8192	; 0x2000
   1330c:	beq	13eac <ftello64@plt+0x26e4>
   13310:	cmp	ip, r3
   13314:	mov	r5, r3
   13318:	bhi	132f4 <ftello64@plt+0x1b2c>
   1331c:	ldr	r3, [pc, #-2432]	; 129a4 <ftello64@plt+0x11dc>
   13320:	add	r3, pc, r3
   13324:	str	r5, [r3, #1492]	; 0x5d4
   13328:	ldr	r3, [pc, #-2440]	; 129a8 <ftello64@plt+0x11e0>
   1332c:	cmp	r4, r5
   13330:	add	r3, pc, r3
   13334:	str	r5, [r3, #1496]	; 0x5d8
   13338:	bls	13408 <ftello64@plt+0x1c40>
   1333c:	add	r3, r5, r8
   13340:	cmp	r5, r3
   13344:	bcs	13408 <ftello64@plt+0x1c40>
   13348:	ldr	ip, [pc, #-2468]	; 129ac <ftello64@plt+0x11e4>
   1334c:	ldr	r9, [pc, #-2468]	; 129b0 <ftello64@plt+0x11e8>
   13350:	add	ip, pc, ip
   13354:	str	r6, [sp, #16]
   13358:	add	r9, pc, r9
   1335c:	mov	r6, ip
   13360:	b	133ac <ftello64@plt+0x1be4>
   13364:	mov	lr, #0
   13368:	ldr	r0, [sp, #32]
   1336c:	str	lr, [sp]
   13370:	mov	r1, r5
   13374:	rsb	r2, r5, r4
   13378:	mov	r3, lr
   1337c:	bl	11660 <re_match@plt>
   13380:	cmn	r0, #2
   13384:	beq	12a84 <ftello64@plt+0x12bc>
   13388:	cmn	r0, #1
   1338c:	moveq	r0, #1
   13390:	add	r5, r5, r0
   13394:	cmp	r5, r4
   13398:	bcs	13404 <ftello64@plt+0x1c3c>
   1339c:	ldr	r3, [r6, #1492]	; 0x5d4
   133a0:	add	r2, r3, r8
   133a4:	cmp	r5, r2
   133a8:	bcs	13e48 <ftello64@plt+0x2680>
   133ac:	ldr	r3, [r7, #828]	; 0x33c
   133b0:	str	r5, [r7, #1496]	; 0x5d8
   133b4:	cmp	r3, #0
   133b8:	bne	13364 <ftello64@plt+0x1b9c>
   133bc:	ldrb	r3, [r5]
   133c0:	add	r3, r7, r3
   133c4:	ldrb	r3, [r3, #1132]	; 0x46c
   133c8:	cmp	r3, #0
   133cc:	beq	13da0 <ftello64@plt+0x25d8>
   133d0:	cmp	r4, r5
   133d4:	bls	13404 <ftello64@plt+0x1c3c>
   133d8:	add	r3, r5, #1
   133dc:	b	133f8 <ftello64@plt+0x1c30>
   133e0:	ldrb	r2, [r3]
   133e4:	add	r3, r3, #1
   133e8:	add	r2, r9, r2
   133ec:	ldrb	r2, [r2, #1132]	; 0x46c
   133f0:	cmp	r2, #0
   133f4:	beq	1339c <ftello64@plt+0x1bd4>
   133f8:	cmp	r3, r4
   133fc:	mov	r5, r3
   13400:	bne	133e0 <ftello64@plt+0x1c18>
   13404:	ldr	r6, [sp, #16]
   13408:	ldr	r2, [pc, #-2652]	; 129b4 <ftello64@plt+0x11ec>
   1340c:	add	r2, pc, r2
   13410:	ldr	r3, [r2, #1492]	; 0x5d4
   13414:	add	r8, r3, r8
   13418:	cmp	r5, r8
   1341c:	strcc	r5, [r2, #1496]	; 0x5d8
   13420:	ldr	r2, [pc, #-2672]	; 129b8 <ftello64@plt+0x11f0>
   13424:	add	r2, pc, r2
   13428:	ldr	r1, [r2, #1496]	; 0x5d8
   1342c:	cmp	r3, r1
   13430:	movcs	r3, #0
   13434:	strcs	r3, [r2, #1500]	; 0x5dc
   13438:	bcs	13470 <ftello64@plt+0x1ca8>
   1343c:	ldr	r3, [pc, #-2696]	; 129bc <ftello64@plt+0x11f4>
   13440:	mov	r0, #0
   13444:	str	r0, [r2, #1524]	; 0x5f4
   13448:	add	r3, pc, r3
   1344c:	ldr	r3, [r3]
   13450:	cmp	r3, r0
   13454:	beq	13464 <ftello64@plt+0x1c9c>
   13458:	cmp	r4, r1
   1345c:	movls	r3, #0
   13460:	movhi	r3, #1
   13464:	ldr	r2, [pc, #-2732]	; 129c0 <ftello64@plt+0x11f8>
   13468:	add	r2, pc, r2
   1346c:	str	r3, [r2, #1500]	; 0x5dc
   13470:	ldr	r3, [pc, #-2740]	; 129c4 <ftello64@plt+0x11fc>
   13474:	add	r3, pc, r3
   13478:	ldr	r0, [r3, #1492]	; 0x5d4
   1347c:	ldr	r3, [r3, #1496]	; 0x5d8
   13480:	b	1349c <ftello64@plt+0x1cd4>
   13484:	ldrb	r2, [r3, #-1]!
   13488:	ldr	ip, [fp]
   1348c:	lsl	r2, r2, #1
   13490:	ldrh	r2, [ip, r2]
   13494:	tst	r2, #8192	; 0x2000
   13498:	beq	13e8c <ftello64@plt+0x26c4>
   1349c:	cmp	r0, r3
   134a0:	mov	r1, r3
   134a4:	bcc	13484 <ftello64@plt+0x1cbc>
   134a8:	ldr	r2, [pc, #-2792]	; 129c8 <ftello64@plt+0x1200>
   134ac:	add	r2, pc, r2
   134b0:	str	r3, [r2, #1496]	; 0x5d8
   134b4:	ldr	r2, [pc, #-2800]	; 129cc <ftello64@plt+0x1204>
   134b8:	ldr	r3, [pc, #-2800]	; 129d0 <ftello64@plt+0x1208>
   134bc:	add	r2, pc, r2
   134c0:	add	r3, pc, r3
   134c4:	ldr	r1, [r2, #1520]	; 0x5f0
   134c8:	ldr	r8, [r2, #1516]	; 0x5ec
   134cc:	ldr	r3, [r3, #4]
   134d0:	rsb	r8, r1, r8
   134d4:	ldr	r1, [r2, #1484]	; 0x5cc
   134d8:	add	r8, r8, r1
   134dc:	rsb	r8, r3, r8
   134e0:	cmp	r8, #0
   134e4:	ble	13fb4 <ftello64@plt+0x27ec>
   134e8:	ldr	r3, [r2, #1528]	; 0x5f8
   134ec:	ldr	r1, [r2, #1428]	; 0x594
   134f0:	str	r3, [r2, #1508]	; 0x5e4
   134f4:	b	13510 <ftello64@plt+0x1d48>
   134f8:	ldrb	r2, [r3, #-1]!
   134fc:	ldr	ip, [fp]
   13500:	lsl	r2, r2, #1
   13504:	ldrh	r2, [ip, r2]
   13508:	tst	r2, #8192	; 0x2000
   1350c:	beq	13e9c <ftello64@plt+0x26d4>
   13510:	cmp	r1, r3
   13514:	mov	r0, r3
   13518:	bcc	134f8 <ftello64@plt+0x1d30>
   1351c:	ldr	r2, [pc, #-2896]	; 129d4 <ftello64@plt+0x120c>
   13520:	add	r2, pc, r2
   13524:	str	r3, [r2, #1508]	; 0x5e4
   13528:	ldr	ip, [pc, #-2904]	; 129d8 <ftello64@plt+0x1210>
   1352c:	mov	r1, r6
   13530:	ldr	r5, [pc, #-2908]	; 129dc <ftello64@plt+0x1214>
   13534:	add	r3, r6, r8
   13538:	add	ip, pc, ip
   1353c:	str	ip, [sp, #28]
   13540:	ldr	ip, [pc, #-2920]	; 129e0 <ftello64@plt+0x1218>
   13544:	add	r5, pc, r5
   13548:	mov	r9, #0
   1354c:	add	ip, pc, ip
   13550:	str	ip, [sp, #44]	; 0x2c
   13554:	ldr	ip, [sp, #28]
   13558:	str	r6, [ip, #1504]	; 0x5e0
   1355c:	mov	r6, ip
   13560:	ldr	ip, [pc, #-2948]	; 129e4 <ftello64@plt+0x121c>
   13564:	add	ip, pc, ip
   13568:	str	ip, [sp, #20]
   1356c:	add	ip, r6, #832	; 0x340
   13570:	str	ip, [sp, #16]
   13574:	ldr	r2, [r6, #1508]	; 0x5e4
   13578:	cmp	r2, r3
   1357c:	bls	135d0 <ftello64@plt+0x1e08>
   13580:	ldr	r0, [r6, #828]	; 0x33c
   13584:	cmp	r0, #0
   13588:	beq	13d38 <ftello64@plt+0x2570>
   1358c:	str	r9, [sp]
   13590:	rsb	r2, r1, r2
   13594:	ldr	r0, [sp, #16]
   13598:	mov	r3, #0
   1359c:	bl	11660 <re_match@plt>
   135a0:	cmn	r0, #2
   135a4:	beq	12a84 <ftello64@plt+0x12bc>
   135a8:	ldr	r1, [r6, #1504]	; 0x5e0
   135ac:	cmn	r0, #1
   135b0:	ldr	r2, [r6, #1508]	; 0x5e4
   135b4:	moveq	r0, #1
   135b8:	add	r1, r1, r0
   135bc:	ldr	ip, [sp, #20]
   135c0:	add	r3, r1, r8
   135c4:	cmp	r2, r3
   135c8:	str	r1, [ip, #1504]	; 0x5e0
   135cc:	bhi	13580 <ftello64@plt+0x1db8>
   135d0:	cmp	r1, r2
   135d4:	bcs	13ecc <ftello64@plt+0x2704>
   135d8:	ldr	r3, [pc, #-3064]	; 129e8 <ftello64@plt+0x1220>
   135dc:	mov	r0, #0
   135e0:	ldr	ip, [sp, #28]
   135e4:	add	r3, pc, r3
   135e8:	ldr	r3, [r3]
   135ec:	str	r0, [ip, #1536]	; 0x600
   135f0:	cmp	r3, r0
   135f4:	moveq	r1, r3
   135f8:	beq	1360c <ftello64@plt+0x1e44>
   135fc:	ldr	ip, [sp, #48]	; 0x30
   13600:	cmp	ip, r1
   13604:	movcs	r1, #0
   13608:	movcc	r1, #1
   1360c:	ldr	r3, [pc, #-3112]	; 129ec <ftello64@plt+0x1224>
   13610:	add	r3, pc, r3
   13614:	str	r1, [r3, #1512]	; 0x5e8
   13618:	ldr	r3, [pc, #-3120]	; 129f0 <ftello64@plt+0x1228>
   1361c:	add	r3, pc, r3
   13620:	ldr	r3, [r3, #1504]	; 0x5e0
   13624:	b	13640 <ftello64@plt+0x1e78>
   13628:	ldrb	r1, [r3], #1
   1362c:	ldr	ip, [fp]
   13630:	lsl	r1, r1, #1
   13634:	ldrh	r1, [ip, r1]
   13638:	tst	r1, #8192	; 0x2000
   1363c:	beq	13edc <ftello64@plt+0x2714>
   13640:	cmp	r3, r2
   13644:	mov	r0, r3
   13648:	bcc	13628 <ftello64@plt+0x1e60>
   1364c:	ldr	r2, [pc, #-3168]	; 129f4 <ftello64@plt+0x122c>
   13650:	add	r2, pc, r2
   13654:	str	r3, [r2, #1504]	; 0x5e0
   13658:	ldr	r3, [pc, #-3176]	; 129f8 <ftello64@plt+0x1230>
   1365c:	add	r3, pc, r3
   13660:	ldrb	r2, [r3, #533]	; 0x215
   13664:	cmp	r2, #0
   13668:	bne	13db4 <ftello64@plt+0x25ec>
   1366c:	ldrb	r2, [r3, #532]	; 0x214
   13670:	cmp	r2, #0
   13674:	beq	136c8 <ftello64@plt+0x1f00>
   13678:	ldr	ip, [sp, #12]
   1367c:	ldr	r1, [r3, #1516]	; 0x5ec
   13680:	ldrsh	r2, [ip, #-4]
   13684:	add	r2, r1, r2
   13688:	str	r2, [r3, #1468]	; 0x5bc
   1368c:	str	r2, [r3, #1472]	; 0x5c0
   13690:	mov	r3, r2
   13694:	b	136b0 <ftello64@plt+0x1ee8>
   13698:	ldrb	r1, [r3], #1
   1369c:	ldr	r0, [fp]
   136a0:	lsl	r1, r1, #1
   136a4:	ldrh	r1, [r0, r1]
   136a8:	tst	r1, #8192	; 0x2000
   136ac:	bne	13fc8 <ftello64@plt+0x2800>
   136b0:	cmp	r4, r3
   136b4:	mov	r2, r3
   136b8:	bhi	13698 <ftello64@plt+0x1ed0>
   136bc:	ldr	r2, [pc, #-3272]	; 129fc <ftello64@plt+0x1234>
   136c0:	add	r2, pc, r2
   136c4:	str	r3, [r2, #1472]	; 0x5c0
   136c8:	ldr	r3, [pc, #-3280]	; 12a00 <ftello64@plt+0x1238>
   136cc:	add	r3, pc, r3
   136d0:	ldr	r3, [r3, #516]	; 0x204
   136d4:	cmp	r3, #3
   136d8:	addls	pc, pc, r3, lsl #2
   136dc:	b	138fc <ftello64@plt+0x2134>
   136e0:	b	13b24 <ftello64@plt+0x235c>
   136e4:	b	13b24 <ftello64@plt+0x235c>
   136e8:	b	13918 <ftello64@plt+0x2150>
   136ec:	b	136f0 <ftello64@plt+0x1f28>
   136f0:	ldr	r3, [pc, #-3316]	; 12a04 <ftello64@plt+0x123c>
   136f4:	mov	r0, #1
   136f8:	ldr	r1, [pc, #-3320]	; 12a08 <ftello64@plt+0x1240>
   136fc:	add	r3, pc, r3
   13700:	add	r1, pc, r1
   13704:	ldr	r2, [r3, #4]
   13708:	bl	116d8 <__printf_chk@plt>
   1370c:	ldr	r3, [pc, #-3300]	; 12a30 <ftello64@plt+0x1268>
   13710:	ldr	ip, [sp, #36]	; 0x24
   13714:	ldr	r4, [ip, r3]
   13718:	ldr	r0, [r4]
   1371c:	ldr	r2, [r0, #24]
   13720:	ldr	r3, [r0, #20]
   13724:	cmp	r3, r2
   13728:	addcc	r2, r3, #1
   1372c:	strcc	r2, [r0, #20]
   13730:	movcc	r2, #123	; 0x7b
   13734:	strbcc	r2, [r3]
   13738:	bcs	141ac <ftello64@plt+0x29e4>
   1373c:	ldr	r5, [pc, #-3384]	; 12a0c <ftello64@plt+0x1244>
   13740:	ldr	r6, [pc, #-3384]	; 12a10 <ftello64@plt+0x1248>
   13744:	add	r5, pc, r5
   13748:	add	r3, r5, #1488	; 0x5d0
   1374c:	add	r6, pc, r6
   13750:	ldmib	r3, {r0, r1}
   13754:	bl	14c6c <ftello64@plt+0x34a4>
   13758:	mov	r2, #2
   1375c:	ldr	r3, [r4]
   13760:	mov	r0, r6
   13764:	mov	r1, #1
   13768:	bl	114bc <fwrite_unlocked@plt>
   1376c:	ldr	r1, [r5, #1532]	; 0x5fc
   13770:	ldr	r0, [r5, #1528]	; 0x5f8
   13774:	bl	14c6c <ftello64@plt+0x34a4>
   13778:	mov	r0, r6
   1377c:	mov	r2, #2
   13780:	ldr	r3, [r4]
   13784:	mov	r1, #1
   13788:	bl	114bc <fwrite_unlocked@plt>
   1378c:	ldr	r3, [r5, #828]	; 0x33c
   13790:	ldr	r6, [r5, #1516]	; 0x5ec
   13794:	ldr	r2, [r5, #1520]	; 0x5f0
   13798:	cmp	r3, #0
   1379c:	str	r6, [sp, #88]	; 0x58
   137a0:	str	r2, [sp, #100]	; 0x64
   137a4:	beq	1415c <ftello64@plt+0x2994>
   137a8:	mov	r3, #0
   137ac:	add	r0, r5, #832	; 0x340
   137b0:	rsb	r2, r6, r2
   137b4:	str	r3, [sp]
   137b8:	mov	r1, r6
   137bc:	bl	11660 <re_match@plt>
   137c0:	cmn	r0, #2
   137c4:	beq	12a84 <ftello64@plt+0x12bc>
   137c8:	cmn	r0, #1
   137cc:	moveq	r0, #1
   137d0:	add	r6, r6, r0
   137d4:	ldr	r5, [pc, #-3528]	; 12a14 <ftello64@plt+0x124c>
   137d8:	add	r3, sp, #88	; 0x58
   137dc:	str	r6, [sp, #92]	; 0x5c
   137e0:	add	r5, pc, r5
   137e4:	ldm	r3, {r0, r1}
   137e8:	str	r6, [sp, #96]	; 0x60
   137ec:	bl	14c6c <ftello64@plt+0x34a4>
   137f0:	mov	r2, #2
   137f4:	mov	r1, #1
   137f8:	ldr	r3, [r4]
   137fc:	mov	r0, r5
   13800:	bl	114bc <fwrite_unlocked@plt>
   13804:	add	r3, sp, #96	; 0x60
   13808:	ldm	r3, {r0, r1}
   1380c:	bl	14c6c <ftello64@plt+0x34a4>
   13810:	mov	r2, #2
   13814:	mov	r1, #1
   13818:	ldr	r3, [r4]
   1381c:	mov	r0, r5
   13820:	bl	114bc <fwrite_unlocked@plt>
   13824:	ldr	r3, [pc, #-3604]	; 12a18 <ftello64@plt+0x1250>
   13828:	add	r3, pc, r3
   1382c:	add	r3, r3, #1504	; 0x5e0
   13830:	ldm	r3, {r0, r1}
   13834:	bl	14c6c <ftello64@plt+0x34a4>
   13838:	ldr	r0, [r4]
   1383c:	ldr	r2, [r0, #24]
   13840:	ldr	r3, [r0, #20]
   13844:	cmp	r3, r2
   13848:	addcc	r2, r3, #1
   1384c:	strcc	r2, [r0, #20]
   13850:	movcc	r2, #125	; 0x7d
   13854:	strbcc	r2, [r3]
   13858:	bcs	14150 <ftello64@plt+0x2988>
   1385c:	ldr	r3, [pc, #-3656]	; 12a1c <ftello64@plt+0x1254>
   13860:	add	r3, pc, r3
   13864:	ldrb	r2, [r3, #533]	; 0x215
   13868:	cmp	r2, #0
   1386c:	bne	1387c <ftello64@plt+0x20b4>
   13870:	ldrb	r3, [r3, #532]	; 0x214
   13874:	cmp	r3, #0
   13878:	beq	138d8 <ftello64@plt+0x2110>
   1387c:	ldr	r0, [r4]
   13880:	ldr	r2, [r0, #24]
   13884:	ldr	r3, [r0, #20]
   13888:	cmp	r3, r2
   1388c:	addcc	r2, r3, #1
   13890:	strcc	r2, [r0, #20]
   13894:	movcc	r2, #123	; 0x7b
   13898:	strbcc	r2, [r3]
   1389c:	bcs	14144 <ftello64@plt+0x297c>
   138a0:	ldr	r3, [pc, #-3720]	; 12a20 <ftello64@plt+0x1258>
   138a4:	add	r3, pc, r3
   138a8:	ldr	r0, [r3, #1468]	; 0x5bc
   138ac:	ldr	r1, [r3, #1472]	; 0x5c0
   138b0:	bl	14c6c <ftello64@plt+0x34a4>
   138b4:	ldr	r0, [r4]
   138b8:	ldr	r2, [r0, #24]
   138bc:	ldr	r3, [r0, #20]
   138c0:	cmp	r3, r2
   138c4:	addcc	r2, r3, #1
   138c8:	strcc	r2, [r0, #20]
   138cc:	movcc	r2, #125	; 0x7d
   138d0:	strbcc	r2, [r3]
   138d4:	bcs	14138 <ftello64@plt+0x2970>
   138d8:	ldr	r0, [r4]
   138dc:	ldr	r3, [r0, #20]
   138e0:	ldr	r2, [r0, #24]
   138e4:	cmp	r3, r2
   138e8:	addcc	r1, r3, #1
   138ec:	strcc	r1, [r0, #20]
   138f0:	movcc	r2, #10
   138f4:	strbcc	r2, [r3]
   138f8:	bcs	1412c <ftello64@plt+0x2964>
   138fc:	ldr	ip, [sp, #40]	; 0x28
   13900:	add	ip, ip, #1
   13904:	str	ip, [sp, #40]	; 0x28
   13908:	ldr	ip, [sp, #12]
   1390c:	add	ip, ip, #16
   13910:	str	ip, [sp, #12]
   13914:	b	12e60 <ftello64@plt+0x1698>
   13918:	ldr	r4, [pc, #-3836]	; 12a24 <ftello64@plt+0x125c>
   1391c:	mov	r0, #1
   13920:	ldr	r5, [pc, #-3840]	; 12a28 <ftello64@plt+0x1260>
   13924:	add	r4, pc, r4
   13928:	ldr	r1, [pc, #-3844]	; 12a2c <ftello64@plt+0x1264>
   1392c:	add	r5, pc, r5
   13930:	add	r1, pc, r1
   13934:	ldr	r2, [r4, #4]
   13938:	bl	116d8 <__printf_chk@plt>
   1393c:	add	r3, r5, #1488	; 0x5d0
   13940:	ldmib	r3, {r0, r1}
   13944:	bl	14c6c <ftello64@plt+0x34a4>
   13948:	ldr	r3, [r5, #1500]	; 0x5dc
   1394c:	cmp	r3, #0
   13950:	ldr	r3, [pc, #-3880]	; 12a30 <ftello64@plt+0x1268>
   13954:	bne	14114 <ftello64@plt+0x294c>
   13958:	ldr	ip, [sp, #36]	; 0x24
   1395c:	ldr	r4, [ip, r3]
   13960:	ldr	r0, [r4]
   13964:	ldr	r2, [r0, #24]
   13968:	ldr	r3, [r0, #20]
   1396c:	cmp	r3, r2
   13970:	addcc	r2, r3, #1
   13974:	strcc	r2, [r0, #20]
   13978:	movcc	r2, #34	; 0x22
   1397c:	strbcc	r2, [r3]
   13980:	bcs	14108 <ftello64@plt+0x2940>
   13984:	ldr	r0, [pc, #-3928]	; 12a34 <ftello64@plt+0x126c>
   13988:	mov	r1, #1
   1398c:	ldr	r3, [r4]
   13990:	mov	r2, #2
   13994:	add	r0, pc, r0
   13998:	bl	114bc <fwrite_unlocked@plt>
   1399c:	ldr	r3, [pc, #-3948]	; 12a38 <ftello64@plt+0x1270>
   139a0:	add	r3, pc, r3
   139a4:	ldr	r3, [r3, #1536]	; 0x600
   139a8:	cmp	r3, #0
   139ac:	bne	140f0 <ftello64@plt+0x2928>
   139b0:	ldr	r3, [pc, #-3964]	; 12a3c <ftello64@plt+0x1274>
   139b4:	add	r3, pc, r3
   139b8:	ldr	r0, [r3, #1528]	; 0x5f8
   139bc:	ldr	r1, [r3, #1532]	; 0x5fc
   139c0:	bl	14c6c <ftello64@plt+0x34a4>
   139c4:	ldr	r0, [r4]
   139c8:	ldr	r2, [r0, #24]
   139cc:	ldr	r3, [r0, #20]
   139d0:	cmp	r3, r2
   139d4:	addcc	r2, r3, #1
   139d8:	strcc	r2, [r0, #20]
   139dc:	movcc	r2, #34	; 0x22
   139e0:	strbcc	r2, [r3]
   139e4:	bcs	140e4 <ftello64@plt+0x291c>
   139e8:	ldr	r5, [pc, #-4016]	; 12a40 <ftello64@plt+0x1278>
   139ec:	mov	r1, #1
   139f0:	ldr	r0, [pc, #-4020]	; 12a44 <ftello64@plt+0x127c>
   139f4:	mov	r2, #2
   139f8:	add	r5, pc, r5
   139fc:	ldr	r3, [r4]
   13a00:	add	r0, pc, r0
   13a04:	bl	114bc <fwrite_unlocked@plt>
   13a08:	ldr	r1, [r5, #1520]	; 0x5f0
   13a0c:	ldr	r0, [r5, #1516]	; 0x5ec
   13a10:	bl	14c6c <ftello64@plt+0x34a4>
   13a14:	ldr	r3, [r5, #1524]	; 0x5f4
   13a18:	cmp	r3, #0
   13a1c:	bne	140cc <ftello64@plt+0x2904>
   13a20:	ldr	r0, [r4]
   13a24:	ldr	r2, [r0, #24]
   13a28:	ldr	r3, [r0, #20]
   13a2c:	cmp	r3, r2
   13a30:	addcc	r2, r3, #1
   13a34:	strcc	r2, [r0, #20]
   13a38:	movcc	r2, #34	; 0x22
   13a3c:	strbcc	r2, [r3]
   13a40:	bcs	140c0 <ftello64@plt+0x28f8>
   13a44:	ldr	r0, [pc, #2148]	; 142b0 <ftello64@plt+0x2ae8>
   13a48:	mov	r1, #1
   13a4c:	ldr	r3, [r4]
   13a50:	mov	r2, #2
   13a54:	add	r0, pc, r0
   13a58:	bl	114bc <fwrite_unlocked@plt>
   13a5c:	ldr	r3, [pc, #2128]	; 142b4 <ftello64@plt+0x2aec>
   13a60:	add	r3, pc, r3
   13a64:	ldr	r3, [r3, #1512]	; 0x5e8
   13a68:	cmp	r3, #0
   13a6c:	bne	141e8 <ftello64@plt+0x2a20>
   13a70:	ldr	r3, [pc, #2112]	; 142b8 <ftello64@plt+0x2af0>
   13a74:	add	r3, pc, r3
   13a78:	add	r3, r3, #1504	; 0x5e0
   13a7c:	ldm	r3, {r0, r1}
   13a80:	bl	14c6c <ftello64@plt+0x34a4>
   13a84:	ldr	r0, [r4]
   13a88:	ldr	r2, [r0, #24]
   13a8c:	ldr	r3, [r0, #20]
   13a90:	cmp	r3, r2
   13a94:	addcc	r2, r3, #1
   13a98:	strcc	r2, [r0, #20]
   13a9c:	movcc	r2, #34	; 0x22
   13aa0:	strbcc	r2, [r3]
   13aa4:	bcs	141dc <ftello64@plt+0x2a14>
   13aa8:	ldr	r3, [pc, #2060]	; 142bc <ftello64@plt+0x2af4>
   13aac:	add	r3, pc, r3
   13ab0:	ldrb	r2, [r3, #533]	; 0x215
   13ab4:	cmp	r2, #0
   13ab8:	bne	13ac8 <ftello64@plt+0x2300>
   13abc:	ldrb	r3, [r3, #532]	; 0x214
   13ac0:	cmp	r3, #0
   13ac4:	beq	138d8 <ftello64@plt+0x2110>
   13ac8:	ldr	r0, [pc, #2032]	; 142c0 <ftello64@plt+0x2af8>
   13acc:	mov	r2, #2
   13ad0:	mov	r1, #1
   13ad4:	ldr	r3, [r4]
   13ad8:	add	r0, pc, r0
   13adc:	bl	114bc <fwrite_unlocked@plt>
   13ae0:	ldr	r3, [pc, #2012]	; 142c4 <ftello64@plt+0x2afc>
   13ae4:	add	r3, pc, r3
   13ae8:	ldr	r0, [r3, #1468]	; 0x5bc
   13aec:	ldr	r1, [r3, #1472]	; 0x5c0
   13af0:	bl	14c6c <ftello64@plt+0x34a4>
   13af4:	ldr	r0, [r4]
   13af8:	ldr	r2, [r0, #24]
   13afc:	ldr	r3, [r0, #20]
   13b00:	cmp	r3, r2
   13b04:	addcc	r2, r3, #1
   13b08:	strcc	r2, [r0, #20]
   13b0c:	movcc	r2, #34	; 0x22
   13b10:	strbcc	r2, [r3]
   13b14:	bcc	138d8 <ftello64@plt+0x2110>
   13b18:	mov	r1, #34	; 0x22
   13b1c:	bl	11738 <__overflow@plt>
   13b20:	b	138d8 <ftello64@plt+0x2110>
   13b24:	ldr	r4, [pc, #1948]	; 142c8 <ftello64@plt+0x2b00>
   13b28:	add	r4, pc, r4
   13b2c:	ldrb	r3, [r4, #534]	; 0x216
   13b30:	cmp	r3, #0
   13b34:	bne	14004 <ftello64@plt+0x283c>
   13b38:	ldrb	r3, [r4, #533]	; 0x215
   13b3c:	ldr	r1, [r4, #1472]	; 0x5c0
   13b40:	cmp	r3, #0
   13b44:	ldr	r0, [r4, #1468]	; 0x5bc
   13b48:	beq	13fd8 <ftello64@plt+0x2810>
   13b4c:	bl	14c6c <ftello64@plt+0x34a4>
   13b50:	ldr	r3, [pc, #1908]	; 142cc <ftello64@plt+0x2b04>
   13b54:	ldr	ip, [sp, #36]	; 0x24
   13b58:	ldr	r4, [ip, r3]
   13b5c:	ldr	r0, [r4]
   13b60:	ldr	r2, [r0, #24]
   13b64:	ldr	r3, [r0, #20]
   13b68:	cmp	r3, r2
   13b6c:	addcc	r2, r3, #1
   13b70:	strcc	r2, [r0, #20]
   13b74:	movcc	r2, #58	; 0x3a
   13b78:	strbcc	r2, [r3]
   13b7c:	bcc	13b88 <ftello64@plt+0x23c0>
   13b80:	mov	r1, #58	; 0x3a
   13b84:	bl	11738 <__overflow@plt>
   13b88:	ldr	r3, [pc, #1856]	; 142d0 <ftello64@plt+0x2b08>
   13b8c:	ldr	r2, [pc, #1856]	; 142d4 <ftello64@plt+0x2b0c>
   13b90:	add	r3, pc, r3
   13b94:	add	r2, pc, r2
   13b98:	ldr	r0, [r3, #1424]	; 0x590
   13b9c:	ldr	r1, [r2, #4]
   13ba0:	ldr	r2, [r3, #1468]	; 0x5bc
   13ba4:	ldr	r3, [r3, #1472]	; 0x5c0
   13ba8:	add	r0, r0, r1
   13bac:	rsb	r3, r3, r2
   13bb0:	add	r0, r0, r3
   13bb4:	sub	r0, r0, #1
   13bb8:	bl	14c08 <ftello64@plt+0x3440>
   13bbc:	ldr	r5, [pc, #1812]	; 142d8 <ftello64@plt+0x2b10>
   13bc0:	add	r5, pc, r5
   13bc4:	ldr	r2, [r5, #1492]	; 0x5d4
   13bc8:	ldr	r3, [r5, #1496]	; 0x5d8
   13bcc:	cmp	r2, r3
   13bd0:	bcc	1402c <ftello64@plt+0x2864>
   13bd4:	ldr	r2, [pc, #1792]	; 142dc <ftello64@plt+0x2b14>
   13bd8:	ldr	r3, [r5, #1536]	; 0x600
   13bdc:	add	r2, pc, r2
   13be0:	ldr	r0, [r5, #1476]	; 0x5c4
   13be4:	cmp	r3, #0
   13be8:	ldr	r1, [r5, #1528]	; 0x5f8
   13bec:	ldr	r2, [r2, #4]
   13bf0:	ldrne	r3, [r5, #1488]	; 0x5d0
   13bf4:	rsb	r0, r2, r0
   13bf8:	ldr	r2, [r5, #1532]	; 0x5fc
   13bfc:	rsb	r2, r2, r1
   13c00:	add	r0, r0, r2
   13c04:	rsb	r0, r3, r0
   13c08:	bl	14c08 <ftello64@plt+0x3440>
   13c0c:	ldr	r3, [pc, #1740]	; 142e0 <ftello64@plt+0x2b18>
   13c10:	add	r3, pc, r3
   13c14:	ldr	r3, [r3, #1536]	; 0x600
   13c18:	cmp	r3, #0
   13c1c:	bne	14014 <ftello64@plt+0x284c>
   13c20:	ldr	r5, [pc, #1724]	; 142e4 <ftello64@plt+0x2b1c>
   13c24:	add	r5, pc, r5
   13c28:	ldr	r1, [r5, #1532]	; 0x5fc
   13c2c:	ldr	r0, [r5, #1528]	; 0x5f8
   13c30:	bl	14c6c <ftello64@plt+0x34a4>
   13c34:	ldr	r3, [pc, #1708]	; 142e8 <ftello64@plt+0x2b20>
   13c38:	add	r3, pc, r3
   13c3c:	ldr	r0, [r3, #4]
   13c40:	bl	14c08 <ftello64@plt+0x3440>
   13c44:	ldr	r1, [r5, #1520]	; 0x5f0
   13c48:	ldr	r0, [r5, #1516]	; 0x5ec
   13c4c:	bl	14c6c <ftello64@plt+0x34a4>
   13c50:	ldr	r3, [r5, #1524]	; 0x5f4
   13c54:	cmp	r3, #0
   13c58:	bne	14238 <ftello64@plt+0x2a70>
   13c5c:	ldr	r3, [pc, #1672]	; 142ec <ftello64@plt+0x2b24>
   13c60:	add	r3, pc, r3
   13c64:	ldr	r1, [r3, #1504]	; 0x5e0
   13c68:	ldr	r2, [r3, #1508]	; 0x5e4
   13c6c:	cmp	r1, r2
   13c70:	bcs	13f58 <ftello64@plt+0x2790>
   13c74:	ldr	lr, [r3, #1516]	; 0x5ec
   13c78:	rsb	r2, r2, r1
   13c7c:	ldr	ip, [r3, #1520]	; 0x5f0
   13c80:	ldr	r5, [r3, #1476]	; 0x5c4
   13c84:	rsb	ip, ip, lr
   13c88:	ldr	r0, [r3, #1524]	; 0x5f4
   13c8c:	add	r5, ip, r5
   13c90:	ldr	ip, [pc, #1624]	; 142f0 <ftello64@plt+0x2b28>
   13c94:	cmp	r0, #0
   13c98:	add	ip, pc, ip
   13c9c:	ldrne	r0, [r3, #1488]	; 0x5d0
   13ca0:	ldr	r3, [ip, #1512]	; 0x5e8
   13ca4:	rsb	r0, r0, r5
   13ca8:	cmp	r3, #0
   13cac:	add	r0, r0, r2
   13cb0:	ldrne	r3, [ip, #1488]	; 0x5d0
   13cb4:	rsb	r0, r3, r0
   13cb8:	bl	14c08 <ftello64@plt+0x3440>
   13cbc:	ldr	r3, [pc, #1584]	; 142f4 <ftello64@plt+0x2b2c>
   13cc0:	add	r3, pc, r3
   13cc4:	ldr	r3, [r3, #1512]	; 0x5e8
   13cc8:	cmp	r3, #0
   13ccc:	bne	141b8 <ftello64@plt+0x29f0>
   13cd0:	ldr	r3, [pc, #1568]	; 142f8 <ftello64@plt+0x2b30>
   13cd4:	add	r3, pc, r3
   13cd8:	add	r3, r3, #1504	; 0x5e0
   13cdc:	ldm	r3, {r0, r1}
   13ce0:	bl	14c6c <ftello64@plt+0x34a4>
   13ce4:	ldr	r3, [pc, #1552]	; 142fc <ftello64@plt+0x2b34>
   13ce8:	add	r3, pc, r3
   13cec:	ldrb	r2, [r3, #533]	; 0x215
   13cf0:	cmp	r2, #0
   13cf4:	bne	13d04 <ftello64@plt+0x253c>
   13cf8:	ldrb	r3, [r3, #532]	; 0x214
   13cfc:	cmp	r3, #0
   13d00:	beq	138d8 <ftello64@plt+0x2110>
   13d04:	ldr	r5, [pc, #1524]	; 14300 <ftello64@plt+0x2b38>
   13d08:	add	r5, pc, r5
   13d0c:	ldrb	r3, [r5, #534]	; 0x216
   13d10:	cmp	r3, #0
   13d14:	beq	138d8 <ftello64@plt+0x2110>
   13d18:	ldr	r3, [pc, #1508]	; 14304 <ftello64@plt+0x2b3c>
   13d1c:	add	r3, pc, r3
   13d20:	ldr	r0, [r3, #4]
   13d24:	bl	14c08 <ftello64@plt+0x3440>
   13d28:	ldr	r1, [r5, #1472]	; 0x5c0
   13d2c:	ldr	r0, [r5, #1468]	; 0x5bc
   13d30:	bl	14c6c <ftello64@plt+0x34a4>
   13d34:	b	138d8 <ftello64@plt+0x2110>
   13d38:	ldrb	r0, [r1]
   13d3c:	add	r0, r6, r0
   13d40:	ldrb	r0, [r0, #1132]	; 0x46c
   13d44:	cmp	r0, #0
   13d48:	beq	13d90 <ftello64@plt+0x25c8>
   13d4c:	cmp	r2, r1
   13d50:	bls	13574 <ftello64@plt+0x1dac>
   13d54:	add	r3, r1, #1
   13d58:	b	13d74 <ftello64@plt+0x25ac>
   13d5c:	ldrb	r0, [r3]
   13d60:	add	r3, r3, #1
   13d64:	add	r0, r5, r0
   13d68:	ldrb	r0, [r0, #1132]	; 0x46c
   13d6c:	cmp	r0, #0
   13d70:	beq	13da8 <ftello64@plt+0x25e0>
   13d74:	cmp	r3, r2
   13d78:	mov	r1, r3
   13d7c:	bne	13d5c <ftello64@plt+0x2594>
   13d80:	ldr	ip, [sp, #44]	; 0x2c
   13d84:	add	r3, r2, r8
   13d88:	str	r2, [ip, #1504]	; 0x5e0
   13d8c:	b	13574 <ftello64@plt+0x1dac>
   13d90:	add	r1, r1, #1
   13d94:	str	r1, [r6, #1504]	; 0x5e0
   13d98:	add	r3, r1, r8
   13d9c:	b	13574 <ftello64@plt+0x1dac>
   13da0:	add	r5, r5, #1
   13da4:	b	13394 <ftello64@plt+0x1bcc>
   13da8:	str	r1, [r5, #1504]	; 0x5e0
   13dac:	add	r3, r1, r8
   13db0:	b	13574 <ftello64@plt+0x1dac>
   13db4:	ldr	ip, [sp, #12]
   13db8:	ldr	r1, [r3, #1124]	; 0x464
   13dbc:	mov	r3, #0
   13dc0:	ldr	r0, [ip, #-4]
   13dc4:	b	13dcc <ftello64@plt+0x2604>
   13dc8:	add	r3, r3, #1
   13dcc:	ldr	r2, [r1, r3, lsl #2]
   13dd0:	lsl	ip, r3, #2
   13dd4:	cmp	r2, r0
   13dd8:	blt	13dc8 <ftello64@plt+0x2600>
   13ddc:	ldr	r2, [pc, #1316]	; 14308 <ftello64@plt+0x2b40>
   13de0:	add	r2, pc, r2
   13de4:	ldr	r2, [r2, #1120]	; 0x460
   13de8:	ldr	r2, [r2, ip]
   13dec:	cmp	r2, #0
   13df0:	beq	141d0 <ftello64@plt+0x2a08>
   13df4:	cmp	r3, #0
   13df8:	ldr	r4, [pc, #1292]	; 1430c <ftello64@plt+0x2b44>
   13dfc:	subne	r3, r3, #-1073741823	; 0xc0000001
   13e00:	add	r0, r0, #1
   13e04:	add	r4, pc, r4
   13e08:	ldrne	r3, [r1, r3, lsl #2]
   13e0c:	mov	r1, #1
   13e10:	str	r2, [sp]
   13e14:	mvn	r2, #0
   13e18:	rsbne	r0, r3, r0
   13e1c:	ldr	r3, [pc, #1260]	; 14310 <ftello64@plt+0x2b48>
   13e20:	str	r0, [sp, #4]
   13e24:	add	r3, pc, r3
   13e28:	ldr	r0, [r4, #1468]	; 0x5bc
   13e2c:	bl	11690 <__sprintf_chk@plt>
   13e30:	ldr	r5, [r4, #1468]	; 0x5bc
   13e34:	mov	r0, r5
   13e38:	bl	1163c <strlen@plt>
   13e3c:	add	r0, r5, r0
   13e40:	str	r0, [r4, #1472]	; 0x5c0
   13e44:	b	136c8 <ftello64@plt+0x1f00>
   13e48:	ldr	r6, [sp, #16]
   13e4c:	b	13420 <ftello64@plt+0x1c58>
   13e50:	add	r6, r2, r3
   13e54:	b	13074 <ftello64@plt+0x18ac>
   13e58:	ldr	r7, [sp, #16]
   13e5c:	ldr	r3, [pc, #1200]	; 14314 <ftello64@plt+0x2b4c>
   13e60:	add	r3, pc, r3
   13e64:	ldr	r2, [r3, #1516]	; 0x5ec
   13e68:	b	12f9c <ftello64@plt+0x17d4>
   13e6c:	ldr	r3, [pc, #1188]	; 14318 <ftello64@plt+0x2b50>
   13e70:	add	r3, pc, r3
   13e74:	str	r2, [r3, #1520]	; 0x5f0
   13e78:	b	13010 <ftello64@plt+0x1848>
   13e7c:	ldr	r3, [pc, #1176]	; 1431c <ftello64@plt+0x2b54>
   13e80:	add	r3, pc, r3
   13e84:	str	r6, [r3, #1532]	; 0x5fc
   13e88:	b	130c4 <ftello64@plt+0x18fc>
   13e8c:	ldr	r3, [pc, #1164]	; 14320 <ftello64@plt+0x2b58>
   13e90:	add	r3, pc, r3
   13e94:	str	r1, [r3, #1496]	; 0x5d8
   13e98:	b	134b4 <ftello64@plt+0x1cec>
   13e9c:	ldr	r3, [pc, #1152]	; 14324 <ftello64@plt+0x2b5c>
   13ea0:	add	r3, pc, r3
   13ea4:	str	r0, [r3, #1508]	; 0x5e4
   13ea8:	b	13528 <ftello64@plt+0x1d60>
   13eac:	ldr	r3, [pc, #1140]	; 14328 <ftello64@plt+0x2b60>
   13eb0:	add	r3, pc, r3
   13eb4:	str	r5, [r3, #1492]	; 0x5d4
   13eb8:	b	13328 <ftello64@plt+0x1b60>
   13ebc:	ldr	r1, [pc, #1128]	; 1432c <ftello64@plt+0x2b64>
   13ec0:	add	r1, pc, r1
   13ec4:	str	ip, [r1, #1528]	; 0x5f8
   13ec8:	b	132bc <ftello64@plt+0x1af4>
   13ecc:	ldr	ip, [sp, #28]
   13ed0:	mov	r3, #0
   13ed4:	str	r3, [ip, #1512]	; 0x5e8
   13ed8:	b	13618 <ftello64@plt+0x1e50>
   13edc:	ldr	r3, [pc, #1100]	; 14330 <ftello64@plt+0x2b68>
   13ee0:	add	r3, pc, r3
   13ee4:	str	r0, [r3, #1504]	; 0x5e0
   13ee8:	b	13658 <ftello64@plt+0x1e90>
   13eec:	ldr	r3, [pc, #1088]	; 14334 <ftello64@plt+0x2b6c>
   13ef0:	mov	r2, #0
   13ef4:	add	r3, pc, r3
   13ef8:	str	r2, [r3, #1492]	; 0x5d4
   13efc:	str	r2, [r3, #1496]	; 0x5d8
   13f00:	str	r2, [r3, #1500]	; 0x5dc
   13f04:	b	134b4 <ftello64@plt+0x1cec>
   13f08:	ldrb	r3, [r6]
   13f0c:	add	r0, r0, r3
   13f10:	ldrb	r3, [r0, #1132]	; 0x46c
   13f14:	cmp	r3, #0
   13f18:	addeq	r6, r6, #1
   13f1c:	beq	13074 <ftello64@plt+0x18ac>
   13f20:	ldr	r1, [pc, #1040]	; 14338 <ftello64@plt+0x2b70>
   13f24:	mov	r3, r6
   13f28:	add	r1, pc, r1
   13f2c:	b	13f48 <ftello64@plt+0x2780>
   13f30:	ldrb	r0, [r3]
   13f34:	add	r3, r3, #1
   13f38:	add	r0, r1, r0
   13f3c:	ldrb	r0, [r0, #1132]	; 0x46c
   13f40:	cmp	r0, #0
   13f44:	beq	13074 <ftello64@plt+0x18ac>
   13f48:	cmp	r3, r2
   13f4c:	mov	r6, r3
   13f50:	bcc	13f30 <ftello64@plt+0x2768>
   13f54:	b	13074 <ftello64@plt+0x18ac>
   13f58:	ldrb	r2, [r3, #533]	; 0x215
   13f5c:	cmp	r2, #0
   13f60:	bne	13f70 <ftello64@plt+0x27a8>
   13f64:	ldrb	r3, [r3, #532]	; 0x214
   13f68:	cmp	r3, #0
   13f6c:	beq	138d8 <ftello64@plt+0x2110>
   13f70:	ldr	r3, [pc, #964]	; 1433c <ftello64@plt+0x2b74>
   13f74:	add	r3, pc, r3
   13f78:	ldrb	r2, [r3, #534]	; 0x216
   13f7c:	cmp	r2, #0
   13f80:	beq	13ce4 <ftello64@plt+0x251c>
   13f84:	ldr	r2, [r3, #1524]	; 0x5f4
   13f88:	ldr	ip, [r3, #1516]	; 0x5ec
   13f8c:	ldr	r0, [r3, #1520]	; 0x5f0
   13f90:	cmp	r2, #0
   13f94:	ldr	r1, [r3, #1476]	; 0x5c4
   13f98:	rsb	r0, r0, ip
   13f9c:	ldrne	r3, [r3, #1488]	; 0x5d0
   13fa0:	add	r0, r0, r1
   13fa4:	moveq	r3, r2
   13fa8:	rsb	r0, r3, r0
   13fac:	bl	14c08 <ftello64@plt+0x3440>
   13fb0:	b	13ce4 <ftello64@plt+0x251c>
   13fb4:	mov	r3, #0
   13fb8:	str	r3, [r2, #1504]	; 0x5e0
   13fbc:	str	r3, [r2, #1508]	; 0x5e4
   13fc0:	str	r3, [r2, #1512]	; 0x5e8
   13fc4:	b	13658 <ftello64@plt+0x1e90>
   13fc8:	ldr	r3, [pc, #880]	; 14340 <ftello64@plt+0x2b78>
   13fcc:	add	r3, pc, r3
   13fd0:	str	r2, [r3, #1472]	; 0x5c0
   13fd4:	b	136c8 <ftello64@plt+0x1f00>
   13fd8:	bl	14c6c <ftello64@plt+0x34a4>
   13fdc:	ldr	r3, [pc, #864]	; 14344 <ftello64@plt+0x2b7c>
   13fe0:	ldr	r0, [r4, #1424]	; 0x590
   13fe4:	add	r3, pc, r3
   13fe8:	ldr	r2, [r4, #1468]	; 0x5bc
   13fec:	ldr	r1, [r3, #4]
   13ff0:	ldr	r3, [r4, #1472]	; 0x5c0
   13ff4:	add	r0, r0, r1
   13ff8:	rsb	r3, r3, r2
   13ffc:	add	r0, r0, r3
   14000:	bl	14c08 <ftello64@plt+0x3440>
   14004:	ldr	r3, [pc, #704]	; 142cc <ftello64@plt+0x2b04>
   14008:	ldr	ip, [sp, #36]	; 0x24
   1400c:	ldr	r4, [ip, r3]
   14010:	b	13bbc <ftello64@plt+0x23f4>
   14014:	ldr	r3, [pc, #812]	; 14348 <ftello64@plt+0x2b80>
   14018:	ldr	r1, [r4]
   1401c:	add	r3, pc, r3
   14020:	ldr	r0, [r3]
   14024:	bl	11420 <fputs_unlocked@plt>
   14028:	b	13c20 <ftello64@plt+0x2458>
   1402c:	add	r3, r5, #1488	; 0x5d0
   14030:	ldmib	r3, {r0, r1}
   14034:	bl	14c6c <ftello64@plt+0x34a4>
   14038:	ldr	r3, [r5, #1500]	; 0x5dc
   1403c:	cmp	r3, #0
   14040:	beq	14058 <ftello64@plt+0x2890>
   14044:	ldr	r3, [pc, #768]	; 1434c <ftello64@plt+0x2b84>
   14048:	ldr	r1, [r4]
   1404c:	add	r3, pc, r3
   14050:	ldr	r0, [r3]
   14054:	bl	11420 <fputs_unlocked@plt>
   14058:	ldr	r3, [pc, #752]	; 14350 <ftello64@plt+0x2b88>
   1405c:	ldr	r1, [pc, #752]	; 14354 <ftello64@plt+0x2b8c>
   14060:	add	r3, pc, r3
   14064:	add	r1, pc, r1
   14068:	ldr	r2, [r3, #1536]	; 0x600
   1406c:	ldr	r0, [r3, #1476]	; 0x5c4
   14070:	cmp	r2, #0
   14074:	ldr	r1, [r1, #4]
   14078:	ldr	ip, [r3, #1528]	; 0x5f8
   1407c:	ldrne	r2, [r3, #1488]	; 0x5d0
   14080:	rsb	r0, r1, r0
   14084:	ldr	r1, [r3, #1532]	; 0x5fc
   14088:	ldr	r3, [pc, #712]	; 14358 <ftello64@plt+0x2b90>
   1408c:	rsb	r1, r1, ip
   14090:	add	r3, pc, r3
   14094:	add	r0, r0, r1
   14098:	rsb	r0, r2, r0
   1409c:	ldr	r2, [r3, #1500]	; 0x5dc
   140a0:	ldr	ip, [r3, #1492]	; 0x5d4
   140a4:	ldr	r1, [r3, #1496]	; 0x5d8
   140a8:	cmp	r2, #0
   140ac:	rsb	r1, r1, ip
   140b0:	ldrne	r3, [r3, #1488]	; 0x5d0
   140b4:	add	r0, r0, r1
   140b8:	moveq	r3, r2
   140bc:	b	13c04 <ftello64@plt+0x243c>
   140c0:	mov	r1, #34	; 0x22
   140c4:	bl	11738 <__overflow@plt>
   140c8:	b	13a44 <ftello64@plt+0x227c>
   140cc:	ldr	r3, [pc, #648]	; 1435c <ftello64@plt+0x2b94>
   140d0:	ldr	r1, [r4]
   140d4:	add	r3, pc, r3
   140d8:	ldr	r0, [r3]
   140dc:	bl	11420 <fputs_unlocked@plt>
   140e0:	b	13a20 <ftello64@plt+0x2258>
   140e4:	mov	r1, #34	; 0x22
   140e8:	bl	11738 <__overflow@plt>
   140ec:	b	139e8 <ftello64@plt+0x2220>
   140f0:	ldr	r3, [pc, #616]	; 14360 <ftello64@plt+0x2b98>
   140f4:	ldr	r1, [r4]
   140f8:	add	r3, pc, r3
   140fc:	ldr	r0, [r3]
   14100:	bl	11420 <fputs_unlocked@plt>
   14104:	b	139b0 <ftello64@plt+0x21e8>
   14108:	mov	r1, #34	; 0x22
   1410c:	bl	11738 <__overflow@plt>
   14110:	b	13984 <ftello64@plt+0x21bc>
   14114:	ldr	ip, [sp, #36]	; 0x24
   14118:	ldr	r0, [r4]
   1411c:	ldr	r4, [ip, r3]
   14120:	ldr	r1, [r4]
   14124:	bl	11420 <fputs_unlocked@plt>
   14128:	b	13960 <ftello64@plt+0x2198>
   1412c:	mov	r1, #10
   14130:	bl	11738 <__overflow@plt>
   14134:	b	138fc <ftello64@plt+0x2134>
   14138:	mov	r1, #125	; 0x7d
   1413c:	bl	11738 <__overflow@plt>
   14140:	b	138d8 <ftello64@plt+0x2110>
   14144:	mov	r1, #123	; 0x7b
   14148:	bl	11738 <__overflow@plt>
   1414c:	b	138a0 <ftello64@plt+0x20d8>
   14150:	mov	r1, #125	; 0x7d
   14154:	bl	11738 <__overflow@plt>
   14158:	b	1385c <ftello64@plt+0x2094>
   1415c:	ldrb	r3, [r6]
   14160:	add	r5, r5, r3
   14164:	ldrb	r3, [r5, #1132]	; 0x46c
   14168:	cmp	r3, #0
   1416c:	addeq	r6, r6, #1
   14170:	beq	137d4 <ftello64@plt+0x200c>
   14174:	ldr	r1, [pc, #488]	; 14364 <ftello64@plt+0x2b9c>
   14178:	mov	r3, r6
   1417c:	add	r1, pc, r1
   14180:	b	1419c <ftello64@plt+0x29d4>
   14184:	ldrb	r0, [r3]
   14188:	add	r3, r3, #1
   1418c:	add	r0, r1, r0
   14190:	ldrb	r0, [r0, #1132]	; 0x46c
   14194:	cmp	r0, #0
   14198:	beq	137d4 <ftello64@plt+0x200c>
   1419c:	cmp	r2, r3
   141a0:	mov	r6, r3
   141a4:	bhi	14184 <ftello64@plt+0x29bc>
   141a8:	b	137d4 <ftello64@plt+0x200c>
   141ac:	mov	r1, #123	; 0x7b
   141b0:	bl	11738 <__overflow@plt>
   141b4:	b	1373c <ftello64@plt+0x1f74>
   141b8:	ldr	r3, [pc, #424]	; 14368 <ftello64@plt+0x2ba0>
   141bc:	ldr	r1, [r4]
   141c0:	add	r3, pc, r3
   141c4:	ldr	r0, [r3]
   141c8:	bl	11420 <fputs_unlocked@plt>
   141cc:	b	13cd0 <ftello64@plt+0x2508>
   141d0:	ldr	r2, [pc, #404]	; 1436c <ftello64@plt+0x2ba4>
   141d4:	add	r2, pc, r2
   141d8:	b	13df4 <ftello64@plt+0x262c>
   141dc:	mov	r1, #34	; 0x22
   141e0:	bl	11738 <__overflow@plt>
   141e4:	b	13aa8 <ftello64@plt+0x22e0>
   141e8:	ldr	r3, [pc, #384]	; 14370 <ftello64@plt+0x2ba8>
   141ec:	ldr	r1, [r4]
   141f0:	add	r3, pc, r3
   141f4:	ldr	r0, [r3]
   141f8:	bl	11420 <fputs_unlocked@plt>
   141fc:	b	13a70 <ftello64@plt+0x22a8>
   14200:	ldr	r3, [pc, #364]	; 14374 <ftello64@plt+0x2bac>
   14204:	add	r3, pc, r3
   14208:	ldr	r2, [r3, #1488]	; 0x5d0
   1420c:	mvn	r2, r2, lsl #1
   14210:	add	r4, r4, r2
   14214:	str	r4, [r3, #1484]	; 0x5cc
   14218:	b	12d44 <ftello64@plt+0x157c>
   1421c:	ldr	r3, [pc, #340]	; 14378 <ftello64@plt+0x2bb0>
   14220:	mov	r2, #0
   14224:	add	r3, pc, r3
   14228:	str	r2, [r3]
   1422c:	b	12cf8 <ftello64@plt+0x1530>
   14230:	mov	r0, #0
   14234:	bl	11618 <exit@plt>
   14238:	ldr	r3, [pc, #316]	; 1437c <ftello64@plt+0x2bb4>
   1423c:	ldr	r1, [r4]
   14240:	add	r3, pc, r3
   14244:	ldr	r0, [r3]
   14248:	bl	11420 <fputs_unlocked@plt>
   1424c:	b	13c5c <ftello64@plt+0x2494>
   14250:	bl	11678 <__errno_location@plt>
   14254:	ldr	r3, [r4]
   14258:	ldr	r3, [r6, r3, lsl #2]
   1425c:	mov	r2, r0
   14260:	mov	r0, #1
   14264:	ldr	r1, [r2]
   14268:	ldr	r2, [pc, #272]	; 14380 <ftello64@plt+0x2bb8>
   1426c:	add	r2, pc, r2
   14270:	bl	11588 <error@plt>
   14274:	b	11df8 <ftello64@plt+0x630>
   14278:	str	sl, [sp, #40]	; 0x28
   1427c:	b	12578 <ftello64@plt+0xdb0>
   14280:	bl	18fc0 <close_stdout@@Base+0x3794>
   14284:	add	r0, r4, #1120	; 0x460
   14288:	mov	r1, #1
   1428c:	add	r0, r0, #12
   14290:	mov	r2, #256	; 0x100
   14294:	bl	116b4 <memset@plt>
   14298:	strb	r5, [r4, #1164]	; 0x48c
   1429c:	strb	r5, [r4, #1141]	; 0x475
   142a0:	strb	r5, [r4, #1142]	; 0x476
   142a4:	b	12064 <ftello64@plt+0x89c>
   142a8:	mov	r4, r9
   142ac:	b	12614 <ftello64@plt+0xe4c>
   142b0:	andeq	r8, r0, r0, asr #31
   142b4:	andeq	sl, r1, r0, lsr #15
   142b8:	andeq	sl, r1, ip, lsl #15
   142bc:	andeq	sl, r1, r4, asr r7
   142c0:	andeq	r8, r0, ip, lsr pc
   142c4:	andeq	sl, r1, ip, lsl r7
   142c8:	ldrdeq	sl, [r1], -r8
   142cc:	andeq	r0, r0, r4, lsl #3
   142d0:	andeq	sl, r1, r0, ror r6
   142d4:	andeq	sl, r1, r8, lsl #12
   142d8:	andeq	sl, r1, r0, asr #12
   142dc:	andeq	sl, r1, r0, asr #11
   142e0:	strdeq	sl, [r1], -r0
   142e4:	ldrdeq	sl, [r1], -ip
   142e8:	andeq	sl, r1, r4, ror #10
   142ec:	andeq	sl, r1, r0, lsr #11
   142f0:	andeq	sl, r1, r8, ror #10
   142f4:	andeq	sl, r1, r0, asr #10
   142f8:	andeq	sl, r1, ip, lsr #10
   142fc:	andeq	sl, r1, r8, lsl r5
   14300:	strdeq	sl, [r1], -r8
   14304:	andeq	sl, r1, r0, lsl #9
   14308:	andeq	sl, r1, r0, lsr #8
   1430c:	strdeq	sl, [r1], -ip
   14310:	andeq	r8, r0, r0, ror #23
   14314:	andeq	sl, r1, r0, lsr #7
   14318:	muleq	r1, r0, r3
   1431c:	andeq	sl, r1, r0, lsl #7
   14320:	andeq	sl, r1, r0, ror r3
   14324:	andeq	sl, r1, r0, ror #6
   14328:	andeq	sl, r1, r0, asr r3
   1432c:	andeq	sl, r1, r0, asr #6
   14330:	andeq	sl, r1, r0, lsr #6
   14334:	andeq	sl, r1, ip, lsl #6
   14338:	ldrdeq	sl, [r1], -r8
   1433c:	andeq	sl, r1, ip, lsl #5
   14340:	andeq	sl, r1, r4, lsr r2
   14344:			; <UNDEFINED> instruction: 0x0001a1b8
   14348:	andeq	sl, r1, ip, lsl #3
   1434c:	andeq	sl, r1, ip, asr r1
   14350:	andeq	sl, r1, r0, lsr #3
   14354:	andeq	sl, r1, r8, lsr r1
   14358:	andeq	sl, r1, r0, ror r1
   1435c:	ldrdeq	sl, [r1], -r4
   14360:	strheq	sl, [r1], -r0
   14364:	andeq	sl, r1, r4, lsl #1
   14368:	andeq	r9, r1, r8, ror #31
   1436c:	andeq	r8, r0, r4, asr r7
   14370:			; <UNDEFINED> instruction: 0x00019fb8
   14374:	strdeq	r9, [r1], -ip
   14378:	andeq	r9, r1, r4, lsl #31
   1437c:	andeq	r9, r1, r8, ror #30
   14380:	andeq	r8, r0, r0, lsl #14
   14384:	mov	fp, #0
   14388:	mov	lr, #0
   1438c:	pop	{r1}		; (ldr r1, [sp], #4)
   14390:	mov	r2, sp
   14394:	push	{r2}		; (str r2, [sp, #-4]!)
   14398:	push	{r0}		; (str r0, [sp, #-4]!)
   1439c:	ldr	ip, [pc, #16]	; 143b4 <ftello64@plt+0x2bec>
   143a0:	push	{ip}		; (str ip, [sp, #-4]!)
   143a4:	ldr	r0, [pc, #12]	; 143b8 <ftello64@plt+0x2bf0>
   143a8:	ldr	r3, [pc, #12]	; 143bc <ftello64@plt+0x2bf4>
   143ac:	bl	115c4 <__libc_start_main@plt>
   143b0:	bl	117a4 <abort@plt>
   143b4:	andeq	ip, r1, ip, asr #1
   143b8:	ldrdeq	r1, [r1], -r4
   143bc:	andeq	ip, r1, r8, rrx
   143c0:	ldr	r3, [pc, #20]	; 143dc <ftello64@plt+0x2c14>
   143c4:	ldr	r2, [pc, #20]	; 143e0 <ftello64@plt+0x2c18>
   143c8:	add	r3, pc, r3
   143cc:	ldr	r2, [r3, r2]
   143d0:	cmp	r2, #0
   143d4:	bxeq	lr
   143d8:	b	115e8 <__gmon_start__@plt>
   143dc:	andeq	r9, r1, r0, lsr ip
   143e0:	andeq	r0, r0, r4, ror r1
   143e4:	push	{r3, lr}
   143e8:	movw	r0, #57860	; 0xe204
   143ec:	ldr	r3, [pc, #36]	; 14418 <ftello64@plt+0x2c50>
   143f0:	movt	r0, #2
   143f4:	rsb	r3, r0, r3
   143f8:	cmp	r3, #6
   143fc:	popls	{r3, pc}
   14400:	movw	r3, #0
   14404:	movt	r3, #0
   14408:	cmp	r3, #0
   1440c:	popeq	{r3, pc}
   14410:	blx	r3
   14414:	pop	{r3, pc}
   14418:	andeq	lr, r2, r7, lsl #4
   1441c:	push	{r3, lr}
   14420:	movw	r0, #57860	; 0xe204
   14424:	movw	r3, #57860	; 0xe204
   14428:	movt	r0, #2
   1442c:	movt	r3, #2
   14430:	rsb	r3, r0, r3
   14434:	asr	r3, r3, #2
   14438:	add	r3, r3, r3, lsr #31
   1443c:	asrs	r1, r3, #1
   14440:	popeq	{r3, pc}
   14444:	movw	r2, #0
   14448:	movt	r2, #0
   1444c:	cmp	r2, #0
   14450:	popeq	{r3, pc}
   14454:	blx	r2
   14458:	pop	{r3, pc}
   1445c:	push	{r4, lr}
   14460:	movw	r4, #57860	; 0xe204
   14464:	movt	r4, #2
   14468:	ldrb	r3, [r4]
   1446c:	cmp	r3, #0
   14470:	popne	{r4, pc}
   14474:	bl	143e4 <ftello64@plt+0x2c1c>
   14478:	mov	r3, #1
   1447c:	strb	r3, [r4]
   14480:	pop	{r4, pc}
   14484:	movw	r0, #56740	; 0xdda4
   14488:	movt	r0, #2
   1448c:	push	{r3, lr}
   14490:	ldr	r3, [r0]
   14494:	cmp	r3, #0
   14498:	beq	144b0 <ftello64@plt+0x2ce8>
   1449c:	movw	r3, #0
   144a0:	movt	r3, #0
   144a4:	cmp	r3, #0
   144a8:	beq	144b0 <ftello64@plt+0x2ce8>
   144ac:	blx	r3
   144b0:	pop	{r3, lr}
   144b4:	b	1441c <ftello64@plt+0x2c54>
   144b8:	ldr	r3, [pc, #260]	; 145c4 <ftello64@plt+0x2dfc>
   144bc:	push	{r4, r5, r6, r7, r8, r9}
   144c0:	add	r3, pc, r3
   144c4:	ldrsh	r9, [r0, #4]
   144c8:	ldrsh	r8, [r1, #4]
   144cc:	ldrb	r2, [r3]
   144d0:	cmp	r9, r8
   144d4:	movlt	r4, r9
   144d8:	movge	r4, r8
   144dc:	cmp	r2, #0
   144e0:	bne	14530 <ftello64@plt+0x2d68>
   144e4:	cmp	r4, #0
   144e8:	ble	14524 <ftello64@plt+0x2d5c>
   144ec:	ldr	r6, [r0]
   144f0:	ldr	r5, [r1]
   144f4:	ldrb	r2, [r6]
   144f8:	ldrb	r3, [r5]
   144fc:	subs	r2, r2, r3
   14500:	beq	14518 <ftello64@plt+0x2d50>
   14504:	b	145bc <ftello64@plt+0x2df4>
   14508:	ldrb	r3, [r6, #1]!
   1450c:	ldrb	r1, [r5, #1]!
   14510:	subs	r1, r3, r1
   14514:	bne	145a8 <ftello64@plt+0x2de0>
   14518:	add	r2, r2, #1
   1451c:	cmp	r4, r2
   14520:	bgt	14508 <ftello64@plt+0x2d40>
   14524:	rsb	r0, r8, r9
   14528:	pop	{r4, r5, r6, r7, r8, r9}
   1452c:	bx	lr
   14530:	cmp	r4, #0
   14534:	ble	14524 <ftello64@plt+0x2d5c>
   14538:	ldr	r7, [r0]
   1453c:	ldr	r6, [r1]
   14540:	ldrb	r2, [r7]
   14544:	ldrb	r1, [r6]
   14548:	add	r2, r3, r2
   1454c:	add	r3, r3, r1
   14550:	ldrb	r0, [r2, #4]
   14554:	ldrb	r3, [r3, #4]
   14558:	subs	r3, r0, r3
   1455c:	bne	145b4 <ftello64@plt+0x2dec>
   14560:	ldr	r5, [pc, #96]	; 145c8 <ftello64@plt+0x2e00>
   14564:	add	r5, pc, r5
   14568:	b	1458c <ftello64@plt+0x2dc4>
   1456c:	ldrb	r2, [r7, #1]!
   14570:	ldrb	r1, [r6, #1]!
   14574:	add	r2, r5, r2
   14578:	add	r1, r5, r1
   1457c:	ldrb	r2, [r2, #4]
   14580:	ldrb	ip, [r1, #4]
   14584:	subs	ip, r2, ip
   14588:	bne	1459c <ftello64@plt+0x2dd4>
   1458c:	add	r3, r3, #1
   14590:	cmp	r4, r3
   14594:	bgt	1456c <ftello64@plt+0x2da4>
   14598:	b	14524 <ftello64@plt+0x2d5c>
   1459c:	mov	r0, ip
   145a0:	pop	{r4, r5, r6, r7, r8, r9}
   145a4:	bx	lr
   145a8:	mov	r0, r1
   145ac:	pop	{r4, r5, r6, r7, r8, r9}
   145b0:	bx	lr
   145b4:	mov	r0, r3
   145b8:	b	14528 <ftello64@plt+0x2d60>
   145bc:	mov	r0, r2
   145c0:	b	14528 <ftello64@plt+0x2d60>
   145c4:	andeq	r9, r1, r0, asr #26
   145c8:	muleq	r1, ip, ip
   145cc:	push	{r3, r4, r5, lr}
   145d0:	mov	r5, r0
   145d4:	mov	r4, r1
   145d8:	bl	144b8 <ftello64@plt+0x2cf0>
   145dc:	cmp	r0, #0
   145e0:	ldreq	r3, [r4]
   145e4:	ldreq	r0, [r5]
   145e8:	rsbeq	r0, r3, r0
   145ec:	pop	{r3, r4, r5, pc}
   145f0:	push	{r4, lr}
   145f4:	bl	11678 <__errno_location@plt>
   145f8:	mov	r2, #5
   145fc:	ldr	r1, [pc, #36]	; 14628 <ftello64@plt+0x2e60>
   14600:	add	r1, pc, r1
   14604:	ldr	r4, [r0]
   14608:	mov	r0, #0
   1460c:	bl	114d4 <dcgettext@plt>
   14610:	mov	r1, r4
   14614:	mov	r2, r0
   14618:	mov	r0, #0
   1461c:	bl	11588 <error@plt>
   14620:	mov	r0, #1
   14624:	bl	11618 <exit@plt>
   14628:	andeq	r7, r0, ip, lsl #22
   1462c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14630:	sub	sp, sp, #28
   14634:	mov	r4, r0
   14638:	bl	1163c <strlen@plt>
   1463c:	mov	r8, #92	; 0x5c
   14640:	mov	r9, #10
   14644:	mov	sl, #7
   14648:	mov	fp, #8
   1464c:	add	r0, r0, #1
   14650:	bl	18dac <close_stdout@@Base+0x3580>
   14654:	ldrb	r3, [r4]
   14658:	mov	r6, r0
   1465c:	mov	r5, r0
   14660:	cmp	r3, #0
   14664:	beq	14688 <ftello64@plt+0x2ec0>
   14668:	cmp	r3, #92	; 0x5c
   1466c:	beq	14698 <ftello64@plt+0x2ed0>
   14670:	strb	r3, [r5]
   14674:	add	r4, r4, #1
   14678:	ldrb	r3, [r4]
   1467c:	add	r5, r5, #1
   14680:	cmp	r3, #0
   14684:	bne	14668 <ftello64@plt+0x2ea0>
   14688:	mov	r0, r6
   1468c:	strb	r3, [r5]
   14690:	add	sp, sp, #28
   14694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14698:	ldrb	r3, [r4, #1]
   1469c:	cmp	r3, #102	; 0x66
   146a0:	beq	148b4 <ftello64@plt+0x30ec>
   146a4:	bhi	14708 <ftello64@plt+0x2f40>
   146a8:	cmp	r3, #97	; 0x61
   146ac:	beq	148a0 <ftello64@plt+0x30d8>
   146b0:	bhi	1473c <ftello64@plt+0x2f74>
   146b4:	cmp	r3, #0
   146b8:	beq	14688 <ftello64@plt+0x2ec0>
   146bc:	cmp	r3, #48	; 0x30
   146c0:	addeq	r3, r4, #2
   146c4:	addeq	ip, r4, #5
   146c8:	moveq	r1, #0
   146cc:	bne	14880 <ftello64@plt+0x30b8>
   146d0:	mov	r4, r3
   146d4:	ldrb	r2, [r3], #1
   146d8:	sub	r2, r2, #48	; 0x30
   146dc:	uxtb	r0, r2
   146e0:	cmp	r0, #7
   146e4:	bhi	146f8 <ftello64@plt+0x2f30>
   146e8:	cmp	r3, ip
   146ec:	add	r1, r2, r1, lsl #3
   146f0:	mov	r4, r3
   146f4:	bne	146d0 <ftello64@plt+0x2f08>
   146f8:	strb	r1, [r5]
   146fc:	add	r5, r5, #1
   14700:	ldrb	r3, [r4]
   14704:	b	14660 <ftello64@plt+0x2e98>
   14708:	cmp	r3, #116	; 0x74
   1470c:	beq	14868 <ftello64@plt+0x30a0>
   14710:	bhi	14774 <ftello64@plt+0x2fac>
   14714:	cmp	r3, #110	; 0x6e
   14718:	beq	14854 <ftello64@plt+0x308c>
   1471c:	cmp	r3, #114	; 0x72
   14720:	bne	14880 <ftello64@plt+0x30b8>
   14724:	mov	r3, #13
   14728:	add	r5, r5, #1
   1472c:	strb	r3, [r5, #-1]
   14730:	add	r4, r4, #2
   14734:	ldrb	r3, [r4]
   14738:	b	14660 <ftello64@plt+0x2e98>
   1473c:	cmp	r3, #98	; 0x62
   14740:	beq	14840 <ftello64@plt+0x3078>
   14744:	cmp	r3, #99	; 0x63
   14748:	bne	14880 <ftello64@plt+0x30b8>
   1474c:	add	r4, r4, #2
   14750:	mov	r3, r4
   14754:	add	r4, r4, #1
   14758:	ldrb	r3, [r3]
   1475c:	cmp	r3, #0
   14760:	bne	14750 <ftello64@plt+0x2f88>
   14764:	mov	r0, r6
   14768:	strb	r3, [r5]
   1476c:	add	sp, sp, #28
   14770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14774:	cmp	r3, #118	; 0x76
   14778:	beq	14828 <ftello64@plt+0x3060>
   1477c:	cmp	r3, #120	; 0x78
   14780:	bne	14880 <ftello64@plt+0x30b8>
   14784:	bl	1160c <__ctype_b_loc@plt>
   14788:	add	r7, r4, #2
   1478c:	mov	ip, #0
   14790:	str	r5, [sp, #16]
   14794:	str	ip, [sp, #8]
   14798:	str	r6, [sp, #20]
   1479c:	ldr	r0, [r0]
   147a0:	str	r0, [sp, #12]
   147a4:	ldr	r3, [sp, #8]
   147a8:	mov	r4, r7
   147ac:	add	r7, r7, #1
   147b0:	lsl	r5, r3, #4
   147b4:	ldrb	r3, [r7, #-1]
   147b8:	sub	r6, r3, #65	; 0x41
   147bc:	str	r6, [sp, #4]
   147c0:	ldr	r6, [sp, #12]
   147c4:	lsl	r1, r3, #1
   147c8:	sub	r0, r3, #97	; 0x61
   147cc:	sub	r2, r3, #87	; 0x57
   147d0:	ldrh	r1, [r6, r1]
   147d4:	tst	r1, #4096	; 0x1000
   147d8:	beq	148cc <ftello64@plt+0x3104>
   147dc:	cmp	r0, #5
   147e0:	bls	147f4 <ftello64@plt+0x302c>
   147e4:	ldr	r2, [sp, #4]
   147e8:	cmp	r2, #5
   147ec:	sub	r2, r3, #55	; 0x37
   147f0:	subhi	r2, r3, #48	; 0x30
   147f4:	add	ip, ip, #1
   147f8:	add	r5, r5, r2
   147fc:	cmp	ip, #3
   14800:	str	r5, [sp, #8]
   14804:	mov	r4, r7
   14808:	bne	147a4 <ftello64@plt+0x2fdc>
   1480c:	ldr	r5, [sp, #16]
   14810:	ldr	r6, [sp, #20]
   14814:	ldr	r3, [sp, #8]
   14818:	add	r5, r5, #1
   1481c:	strb	r3, [r5, #-1]
   14820:	ldrb	r3, [r4]
   14824:	b	14660 <ftello64@plt+0x2e98>
   14828:	mov	r3, #11
   1482c:	add	r5, r5, #1
   14830:	strb	r3, [r5, #-1]
   14834:	add	r4, r4, #2
   14838:	ldrb	r3, [r4]
   1483c:	b	14660 <ftello64@plt+0x2e98>
   14840:	strb	fp, [r5]
   14844:	add	r4, r4, #2
   14848:	ldrb	r3, [r4]
   1484c:	add	r5, r5, #1
   14850:	b	14660 <ftello64@plt+0x2e98>
   14854:	strb	r9, [r5]
   14858:	add	r4, r4, #2
   1485c:	ldrb	r3, [r4]
   14860:	add	r5, r5, #1
   14864:	b	14660 <ftello64@plt+0x2e98>
   14868:	mov	r2, #9
   1486c:	add	r5, r5, #1
   14870:	strb	r2, [r5, #-1]
   14874:	add	r4, r4, #2
   14878:	ldrb	r3, [r4]
   1487c:	b	14660 <ftello64@plt+0x2e98>
   14880:	mov	r3, r5
   14884:	add	r4, r4, #2
   14888:	strb	r8, [r3], #2
   1488c:	ldrb	r2, [r4, #-1]
   14890:	strb	r2, [r5, #1]
   14894:	mov	r5, r3
   14898:	ldrb	r3, [r4]
   1489c:	b	14660 <ftello64@plt+0x2e98>
   148a0:	strb	sl, [r5]
   148a4:	add	r4, r4, #2
   148a8:	ldrb	r3, [r4]
   148ac:	add	r5, r5, #1
   148b0:	b	14660 <ftello64@plt+0x2e98>
   148b4:	mov	r2, #12
   148b8:	add	r5, r5, #1
   148bc:	strb	r2, [r5, #-1]
   148c0:	add	r4, r4, #2
   148c4:	ldrb	r3, [r4]
   148c8:	b	14660 <ftello64@plt+0x2e98>
   148cc:	cmp	ip, #0
   148d0:	ldr	r5, [sp, #16]
   148d4:	ldr	r6, [sp, #20]
   148d8:	bne	14814 <ftello64@plt+0x304c>
   148dc:	mov	r3, r5
   148e0:	mov	r2, #120	; 0x78
   148e4:	strb	r8, [r3], #2
   148e8:	strb	r2, [r5, #1]
   148ec:	mov	r5, r3
   148f0:	ldrb	r3, [r4]
   148f4:	b	14660 <ftello64@plt+0x2e98>
   148f8:	ldr	r1, [pc, #160]	; 149a0 <ftello64@plt+0x31d8>
   148fc:	mov	r3, r0
   14900:	push	{r4, r5, r6, r7, lr}
   14904:	add	r1, pc, r1
   14908:	ldr	r4, [r0]
   1490c:	add	r2, r0, #36	; 0x24
   14910:	add	r5, r0, #4
   14914:	str	r2, [r0, #20]
   14918:	ldrb	r0, [r1]
   1491c:	mov	r2, #0
   14920:	sub	sp, sp, #12
   14924:	str	r2, [r3, #4]
   14928:	cmp	r0, r2
   1492c:	str	r2, [r3, #8]
   14930:	addne	r0, r1, #4
   14934:	str	r0, [r3, #24]
   14938:	mov	r0, r4
   1493c:	bl	1163c <strlen@plt>
   14940:	mov	r2, r5
   14944:	mov	r1, r0
   14948:	mov	r0, r4
   1494c:	bl	1178c <re_compile_pattern@plt>
   14950:	subs	r6, r0, #0
   14954:	beq	14990 <ftello64@plt+0x31c8>
   14958:	ldr	r1, [pc, #68]	; 149a4 <ftello64@plt+0x31dc>
   1495c:	mov	r2, #5
   14960:	mov	r0, #0
   14964:	add	r1, pc, r1
   14968:	bl	114d4 <dcgettext@plt>
   1496c:	mov	r7, r0
   14970:	mov	r0, r4
   14974:	bl	17fb0 <close_stdout@@Base+0x2784>
   14978:	mov	r2, r7
   1497c:	mov	r3, r6
   14980:	mov	r1, #0
   14984:	str	r0, [sp]
   14988:	mov	r0, #1
   1498c:	bl	11588 <error@plt>
   14990:	mov	r0, r5
   14994:	add	sp, sp, #12
   14998:	pop	{r4, r5, r6, r7, lr}
   1499c:	b	116c0 <re_compile_fastmap@plt>
   149a0:	strdeq	r9, [r1], -ip
   149a4:	andeq	r7, r0, ip, asr #15
   149a8:	ldr	r3, [pc, #232]	; 14a98 <ftello64@plt+0x32d0>
   149ac:	ldr	r2, [pc, #232]	; 14a9c <ftello64@plt+0x32d4>
   149b0:	add	r3, pc, r3
   149b4:	push	{r4, r5, r6, r7, lr}
   149b8:	subs	r6, r0, #0
   149bc:	ldr	r5, [r3, r2]
   149c0:	sub	sp, sp, #12
   149c4:	mov	r4, r1
   149c8:	ldr	r2, [r5]
   149cc:	str	r2, [sp, #4]
   149d0:	beq	149e0 <ftello64@plt+0x3218>
   149d4:	ldrb	r2, [r6]
   149d8:	cmp	r2, #0
   149dc:	bne	14a28 <ftello64@plt+0x3260>
   149e0:	ldr	r2, [pc, #184]	; 14aa0 <ftello64@plt+0x32d8>
   149e4:	mov	r1, sp
   149e8:	mov	r7, #1
   149ec:	ldr	r3, [r3, r2]
   149f0:	ldr	r0, [r3]
   149f4:	bl	17fbc <close_stdout@@Base+0x2790>
   149f8:	cmp	r0, #0
   149fc:	str	r0, [r4]
   14a00:	beq	14a58 <ftello64@plt+0x3290>
   14a04:	ldr	r1, [sp, #4]
   14a08:	ldr	r2, [r5]
   14a0c:	ldr	r3, [sp]
   14a10:	cmp	r1, r2
   14a14:	add	r0, r0, r3
   14a18:	str	r0, [r4, #4]
   14a1c:	bne	14a94 <ftello64@plt+0x32cc>
   14a20:	add	sp, sp, #12
   14a24:	pop	{r4, r5, r6, r7, pc}
   14a28:	cmp	r2, #45	; 0x2d
   14a2c:	bne	14a3c <ftello64@plt+0x3274>
   14a30:	ldrb	r2, [r6, #1]
   14a34:	cmp	r2, #0
   14a38:	beq	149e0 <ftello64@plt+0x3218>
   14a3c:	mov	r0, r6
   14a40:	mov	r1, sp
   14a44:	bl	1820c <close_stdout@@Base+0x29e0>
   14a48:	mov	r7, #0
   14a4c:	cmp	r0, #0
   14a50:	str	r0, [r4]
   14a54:	bne	14a04 <ftello64@plt+0x323c>
   14a58:	bl	11678 <__errno_location@plt>
   14a5c:	cmp	r7, #0
   14a60:	ldr	r7, [r0]
   14a64:	moveq	r0, r6
   14a68:	ldrne	r0, [pc, #52]	; 14aa4 <ftello64@plt+0x32dc>
   14a6c:	addne	r0, pc, r0
   14a70:	bl	17fb0 <close_stdout@@Base+0x2784>
   14a74:	ldr	r2, [pc, #44]	; 14aa8 <ftello64@plt+0x32e0>
   14a78:	mov	r1, r7
   14a7c:	add	r2, pc, r2
   14a80:	mov	r3, r0
   14a84:	mov	r0, #1
   14a88:	bl	11588 <error@plt>
   14a8c:	ldr	r0, [r4]
   14a90:	b	14a04 <ftello64@plt+0x323c>
   14a94:	bl	114e0 <__stack_chk_fail@plt>
   14a98:	andeq	r9, r1, r8, asr #12
   14a9c:	andeq	r0, r0, r8, asr r1
   14aa0:	andeq	r0, r0, ip, ror r1
   14aa4:	ldrdeq	r7, [r0], -r8
   14aa8:	strdeq	r7, [r0], -r0
   14aac:	ldr	r3, [pc, #328]	; 14bfc <ftello64@plt+0x3434>
   14ab0:	ldr	r2, [pc, #328]	; 14c00 <ftello64@plt+0x3438>
   14ab4:	add	r3, pc, r3
   14ab8:	push	{r4, r5, r6, r7, r8, lr}
   14abc:	sub	sp, sp, #16
   14ac0:	ldr	r8, [r3, r2]
   14ac4:	mov	r6, r1
   14ac8:	add	r1, sp, #4
   14acc:	ldr	r3, [r8]
   14ad0:	str	r3, [sp, #12]
   14ad4:	bl	149a8 <ftello64@plt+0x31e0>
   14ad8:	ldr	r5, [sp, #4]
   14adc:	mov	r3, #0
   14ae0:	ldr	r0, [sp, #8]
   14ae4:	mov	r1, r3
   14ae8:	str	r3, [r6]
   14aec:	cmp	r5, r0
   14af0:	str	r3, [r6, #4]
   14af4:	str	r3, [r6, #8]
   14af8:	bcs	14b88 <ftello64@plt+0x33c0>
   14afc:	ldrb	r3, [r5]
   14b00:	cmp	r3, #10
   14b04:	beq	14bec <ftello64@plt+0x3424>
   14b08:	add	r3, r5, #1
   14b0c:	b	14b20 <ftello64@plt+0x3358>
   14b10:	ldrb	r2, [r3]
   14b14:	add	r3, r3, #1
   14b18:	cmp	r2, #10
   14b1c:	beq	14bb4 <ftello64@plt+0x33ec>
   14b20:	cmp	r3, r0
   14b24:	mov	r4, r3
   14b28:	bne	14b10 <ftello64@plt+0x3348>
   14b2c:	mov	r7, r0
   14b30:	cmp	r5, r7
   14b34:	bcs	14b70 <ftello64@plt+0x33a8>
   14b38:	ldr	r3, [r6, #4]
   14b3c:	cmp	r3, r1
   14b40:	beq	14bbc <ftello64@plt+0x33f4>
   14b44:	ldr	r3, [r6]
   14b48:	str	r5, [r3, r1, lsl #3]
   14b4c:	rsb	r5, r5, r7
   14b50:	ldr	r2, [r6, #8]
   14b54:	ldr	r3, [r6]
   14b58:	add	r3, r3, r2, lsl #3
   14b5c:	strh	r5, [r3, #4]
   14b60:	ldr	r0, [sp, #8]
   14b64:	ldr	r1, [r6, #8]
   14b68:	add	r1, r1, #1
   14b6c:	str	r1, [r6, #8]
   14b70:	cmp	r4, r0
   14b74:	bcs	14b7c <ftello64@plt+0x33b4>
   14b78:	add	r4, r4, #1
   14b7c:	mov	r5, r4
   14b80:	cmp	r5, r0
   14b84:	bcc	14afc <ftello64@plt+0x3334>
   14b88:	ldr	r3, [pc, #116]	; 14c04 <ftello64@plt+0x343c>
   14b8c:	mov	r2, #8
   14b90:	ldr	r0, [r6]
   14b94:	add	r3, pc, r3
   14b98:	bl	11774 <qsort@plt>
   14b9c:	ldr	r2, [sp, #12]
   14ba0:	ldr	r3, [r8]
   14ba4:	cmp	r2, r3
   14ba8:	bne	14bf8 <ftello64@plt+0x3430>
   14bac:	add	sp, sp, #16
   14bb0:	pop	{r4, r5, r6, r7, r8, pc}
   14bb4:	mov	r7, r4
   14bb8:	b	14b30 <ftello64@plt+0x3368>
   14bbc:	cmn	r1, #-268435455	; 0xf0000001
   14bc0:	bhi	14bf4 <ftello64@plt+0x342c>
   14bc4:	lsl	r1, r1, #1
   14bc8:	ldr	r0, [r6]
   14bcc:	add	r1, r1, #1
   14bd0:	str	r1, [r6, #4]
   14bd4:	lsl	r1, r1, #3
   14bd8:	bl	18e04 <close_stdout@@Base+0x35d8>
   14bdc:	ldr	r1, [r6, #8]
   14be0:	mov	r3, r0
   14be4:	str	r0, [r6]
   14be8:	b	14b48 <ftello64@plt+0x3380>
   14bec:	mov	r4, r5
   14bf0:	b	14b78 <ftello64@plt+0x33b0>
   14bf4:	bl	18fc0 <close_stdout@@Base+0x3794>
   14bf8:	bl	114e0 <__stack_chk_fail@plt>
   14bfc:	andeq	r9, r1, r4, asr #10
   14c00:	andeq	r0, r0, r8, asr r1
   14c04:			; <UNDEFINED> instruction: 0xfffff91c
   14c08:	push	{r4, r5, r6, lr}
   14c0c:	subs	r4, r0, #0
   14c10:	ldr	r3, [pc, #76]	; 14c64 <ftello64@plt+0x349c>
   14c14:	add	r3, pc, r3
   14c18:	pople	{r4, r5, r6, pc}
   14c1c:	ldr	r2, [pc, #68]	; 14c68 <ftello64@plt+0x34a0>
   14c20:	mov	r6, #32
   14c24:	ldr	r5, [r3, r2]
   14c28:	ldr	r3, [r5]
   14c2c:	ldr	r2, [r3, #20]
   14c30:	ldr	r1, [r3, #24]
   14c34:	add	r0, r2, #1
   14c38:	cmp	r2, r1
   14c3c:	strcc	r0, [r3, #20]
   14c40:	strbcc	r6, [r2]
   14c44:	bcs	14c54 <ftello64@plt+0x348c>
   14c48:	subs	r4, r4, #1
   14c4c:	bne	14c28 <ftello64@plt+0x3460>
   14c50:	pop	{r4, r5, r6, pc}
   14c54:	mov	r0, r3
   14c58:	mov	r1, #32
   14c5c:	bl	11738 <__overflow@plt>
   14c60:	b	14c48 <ftello64@plt+0x3480>
   14c64:	andeq	r9, r1, r4, ror #7
   14c68:	andeq	r0, r0, r4, lsl #3
   14c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c70:	sub	sp, sp, #28
   14c74:	add	r3, sp, #24
   14c78:	ldr	r5, [pc, #1156]	; 15104 <ftello64@plt+0x393c>
   14c7c:	stmdb	r3, {r0, r1}
   14c80:	add	r5, pc, r5
   14c84:	ldr	fp, [sp, #20]
   14c88:	ldr	r4, [sp, #16]
   14c8c:	cmp	fp, r4
   14c90:	bls	14d78 <ftello64@plt+0x35b0>
   14c94:	ldr	r6, [pc, #1132]	; 15108 <ftello64@plt+0x3940>
   14c98:	sub	r4, r4, #1
   14c9c:	ldr	r8, [pc, #1128]	; 1510c <ftello64@plt+0x3944>
   14ca0:	sub	fp, fp, #1
   14ca4:	ldr	r7, [pc, #1124]	; 15110 <ftello64@plt+0x3948>
   14ca8:	add	r6, pc, r6
   14cac:	ldr	sl, [pc, #1120]	; 15114 <ftello64@plt+0x394c>
   14cb0:	add	r8, pc, r8
   14cb4:	ldr	r9, [pc, #1116]	; 15118 <ftello64@plt+0x3950>
   14cb8:	add	r7, pc, r7
   14cbc:	ldr	r3, [pc, #1112]	; 1511c <ftello64@plt+0x3954>
   14cc0:	add	sl, pc, sl
   14cc4:	add	r9, pc, r9
   14cc8:	add	r3, pc, r3
   14ccc:	str	r3, [sp, #12]
   14cd0:	ldrb	r2, [r4, #1]!
   14cd4:	add	r3, r6, r2
   14cd8:	ldrb	r3, [r3, #260]	; 0x104
   14cdc:	cmp	r3, #0
   14ce0:	beq	14dd0 <ftello64@plt+0x3608>
   14ce4:	ldr	r3, [pc, #1076]	; 15120 <ftello64@plt+0x3958>
   14ce8:	ldr	r3, [r5, r3]
   14cec:	ldrb	r3, [r3, r2]
   14cf0:	cmp	r3, #0
   14cf4:	beq	14d04 <ftello64@plt+0x353c>
   14cf8:	ldr	r1, [r6, #516]	; 0x204
   14cfc:	cmp	r1, #3
   14d00:	beq	14e64 <ftello64@plt+0x369c>
   14d04:	cmp	r2, #92	; 0x5c
   14d08:	beq	14e44 <ftello64@plt+0x367c>
   14d0c:	bhi	14d80 <ftello64@plt+0x35b8>
   14d10:	cmp	r2, #34	; 0x22
   14d14:	beq	14ddc <ftello64@plt+0x3614>
   14d18:	bcc	14d98 <ftello64@plt+0x35d0>
   14d1c:	cmp	r2, #38	; 0x26
   14d20:	bhi	14d98 <ftello64@plt+0x35d0>
   14d24:	ldr	r3, [pc, #1016]	; 15124 <ftello64@plt+0x395c>
   14d28:	ldr	r3, [r5, r3]
   14d2c:	ldr	r0, [r3]
   14d30:	ldr	r1, [r0, #20]
   14d34:	ldr	ip, [r0, #24]
   14d38:	cmp	r1, ip
   14d3c:	addcc	ip, r1, #1
   14d40:	strcc	ip, [r0, #20]
   14d44:	movcc	r0, #92	; 0x5c
   14d48:	strbcc	r0, [r1]
   14d4c:	bcs	150d4 <ftello64@plt+0x390c>
   14d50:	ldr	r0, [r3]
   14d54:	ldr	r3, [r0, #20]
   14d58:	ldr	r1, [r0, #24]
   14d5c:	cmp	r3, r1
   14d60:	addcc	r1, r3, #1
   14d64:	strcc	r1, [r0, #20]
   14d68:	strbcc	r2, [r3]
   14d6c:	bcs	150c8 <ftello64@plt+0x3900>
   14d70:	cmp	r4, fp
   14d74:	bne	14cd0 <ftello64@plt+0x3508>
   14d78:	add	sp, sp, #28
   14d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d80:	cmp	r2, #123	; 0x7b
   14d84:	beq	14e34 <ftello64@plt+0x366c>
   14d88:	cmp	r2, #125	; 0x7d
   14d8c:	beq	14e34 <ftello64@plt+0x366c>
   14d90:	cmp	r2, #95	; 0x5f
   14d94:	beq	14d24 <ftello64@plt+0x355c>
   14d98:	ldr	r3, [pc, #900]	; 15124 <ftello64@plt+0x395c>
   14d9c:	ldr	r3, [r5, r3]
   14da0:	ldr	r0, [r3]
   14da4:	ldr	r2, [r0, #24]
   14da8:	ldr	r3, [r0, #20]
   14dac:	cmp	r3, r2
   14db0:	addcc	r2, r3, #1
   14db4:	strcc	r2, [r0, #20]
   14db8:	movcc	r2, #32
   14dbc:	strbcc	r2, [r3]
   14dc0:	bcc	14d70 <ftello64@plt+0x35a8>
   14dc4:	mov	r1, #32
   14dc8:	bl	11738 <__overflow@plt>
   14dcc:	b	14d70 <ftello64@plt+0x35a8>
   14dd0:	ldr	r3, [pc, #844]	; 15124 <ftello64@plt+0x395c>
   14dd4:	ldr	r3, [r5, r3]
   14dd8:	b	14d50 <ftello64@plt+0x3588>
   14ddc:	ldr	r3, [pc, #832]	; 15124 <ftello64@plt+0x395c>
   14de0:	ldr	r3, [r5, r3]
   14de4:	ldr	r0, [r3]
   14de8:	ldr	r1, [r0, #20]
   14dec:	ldr	ip, [r0, #24]
   14df0:	cmp	r1, ip
   14df4:	addcc	ip, r1, #1
   14df8:	strcc	ip, [r0, #20]
   14dfc:	strbcc	r2, [r1]
   14e00:	bcs	150f0 <ftello64@plt+0x3928>
   14e04:	ldr	r0, [r3]
   14e08:	ldr	r2, [r0, #24]
   14e0c:	ldr	r3, [r0, #20]
   14e10:	cmp	r3, r2
   14e14:	addcc	r2, r3, #1
   14e18:	strcc	r2, [r0, #20]
   14e1c:	movcc	r2, #34	; 0x22
   14e20:	strbcc	r2, [r3]
   14e24:	bcc	14d70 <ftello64@plt+0x35a8>
   14e28:	mov	r1, #34	; 0x22
   14e2c:	bl	11738 <__overflow@plt>
   14e30:	b	14d70 <ftello64@plt+0x35a8>
   14e34:	mov	r1, r7
   14e38:	mov	r0, #1
   14e3c:	bl	116d8 <__printf_chk@plt>
   14e40:	b	14d70 <ftello64@plt+0x35a8>
   14e44:	ldr	r3, [pc, #728]	; 15124 <ftello64@plt+0x395c>
   14e48:	mov	r0, r8
   14e4c:	mov	r1, #1
   14e50:	mov	r2, #12
   14e54:	ldr	r3, [r5, r3]
   14e58:	ldr	r3, [r3]
   14e5c:	bl	114bc <fwrite_unlocked@plt>
   14e60:	b	14d70 <ftello64@plt+0x35a8>
   14e64:	ldr	r0, [pc, #700]	; 15128 <ftello64@plt+0x3960>
   14e68:	sub	r1, r3, #1
   14e6c:	ldr	r3, [r5, r0]
   14e70:	ldrb	r3, [r3, r2]
   14e74:	cmp	r1, #8
   14e78:	addls	pc, pc, r1, lsl #2
   14e7c:	b	14d70 <ftello64@plt+0x35a8>
   14e80:	b	14ed4 <ftello64@plt+0x370c>
   14e84:	b	14f14 <ftello64@plt+0x374c>
   14e88:	b	14f3c <ftello64@plt+0x3774>
   14e8c:	b	14f64 <ftello64@plt+0x379c>
   14e90:	b	14f8c <ftello64@plt+0x37c4>
   14e94:	b	14fb4 <ftello64@plt+0x37ec>
   14e98:	b	14fdc <ftello64@plt+0x3814>
   14e9c:	b	14ff4 <ftello64@plt+0x382c>
   14ea0:	b	14ea4 <ftello64@plt+0x36dc>
   14ea4:	cmp	r3, #79	; 0x4f
   14ea8:	beq	15048 <ftello64@plt+0x3880>
   14eac:	cmp	r3, #111	; 0x6f
   14eb0:	ldr	r3, [pc, #620]	; 15124 <ftello64@plt+0x395c>
   14eb4:	moveq	r0, r9
   14eb8:	bne	14d9c <ftello64@plt+0x35d4>
   14ebc:	ldr	r3, [r5, r3]
   14ec0:	mov	r1, #1
   14ec4:	mov	r2, #4
   14ec8:	ldr	r3, [r3]
   14ecc:	bl	114bc <fwrite_unlocked@plt>
   14ed0:	b	14d70 <ftello64@plt+0x35a8>
   14ed4:	cmp	r3, #79	; 0x4f
   14ed8:	beq	15080 <ftello64@plt+0x38b8>
   14edc:	bls	15054 <ftello64@plt+0x388c>
   14ee0:	cmp	r3, #97	; 0x61
   14ee4:	beq	150a4 <ftello64@plt+0x38dc>
   14ee8:	cmp	r3, #111	; 0x6f
   14eec:	bne	14d98 <ftello64@plt+0x35d0>
   14ef0:	ldr	r3, [pc, #556]	; 15124 <ftello64@plt+0x395c>
   14ef4:	mov	r1, #1
   14ef8:	ldr	r0, [pc, #556]	; 1512c <ftello64@plt+0x3964>
   14efc:	mov	r2, #5
   14f00:	ldr	r3, [r5, r3]
   14f04:	add	r0, pc, r0
   14f08:	ldr	r3, [r3]
   14f0c:	bl	114bc <fwrite_unlocked@plt>
   14f10:	b	14d70 <ftello64@plt+0x35a8>
   14f14:	ldr	r2, [pc, #532]	; 15130 <ftello64@plt+0x3968>
   14f18:	cmp	r3, #105	; 0x69
   14f1c:	add	r2, pc, r2
   14f20:	ldrne	r2, [pc, #524]	; 15134 <ftello64@plt+0x396c>
   14f24:	addne	r2, pc, r2
   14f28:	ldr	r1, [pc, #520]	; 15138 <ftello64@plt+0x3970>
   14f2c:	mov	r0, #1
   14f30:	add	r1, pc, r1
   14f34:	bl	116d8 <__printf_chk@plt>
   14f38:	b	14d70 <ftello64@plt+0x35a8>
   14f3c:	ldr	r2, [pc, #504]	; 1513c <ftello64@plt+0x3974>
   14f40:	cmp	r3, #105	; 0x69
   14f44:	add	r2, pc, r2
   14f48:	ldrne	r2, [pc, #496]	; 15140 <ftello64@plt+0x3978>
   14f4c:	addne	r2, pc, r2
   14f50:	ldr	r1, [pc, #492]	; 15144 <ftello64@plt+0x397c>
   14f54:	mov	r0, #1
   14f58:	add	r1, pc, r1
   14f5c:	bl	116d8 <__printf_chk@plt>
   14f60:	b	14d70 <ftello64@plt+0x35a8>
   14f64:	ldr	r2, [pc, #476]	; 15148 <ftello64@plt+0x3980>
   14f68:	cmp	r3, #105	; 0x69
   14f6c:	add	r2, pc, r2
   14f70:	ldrne	r2, [pc, #468]	; 1514c <ftello64@plt+0x3984>
   14f74:	addne	r2, pc, r2
   14f78:	ldr	r1, [pc, #464]	; 15150 <ftello64@plt+0x3988>
   14f7c:	mov	r0, #1
   14f80:	add	r1, pc, r1
   14f84:	bl	116d8 <__printf_chk@plt>
   14f88:	b	14d70 <ftello64@plt+0x35a8>
   14f8c:	ldr	r2, [pc, #448]	; 15154 <ftello64@plt+0x398c>
   14f90:	cmp	r3, #105	; 0x69
   14f94:	add	r2, pc, r2
   14f98:	ldrne	r2, [pc, #440]	; 15158 <ftello64@plt+0x3990>
   14f9c:	addne	r2, pc, r2
   14fa0:	ldr	r1, [pc, #436]	; 1515c <ftello64@plt+0x3994>
   14fa4:	mov	r0, #1
   14fa8:	add	r1, pc, r1
   14fac:	bl	116d8 <__printf_chk@plt>
   14fb0:	b	14d70 <ftello64@plt+0x35a8>
   14fb4:	ldr	r2, [pc, #420]	; 15160 <ftello64@plt+0x3998>
   14fb8:	cmp	r3, #105	; 0x69
   14fbc:	add	r2, pc, r2
   14fc0:	ldrne	r2, [pc, #412]	; 15164 <ftello64@plt+0x399c>
   14fc4:	addne	r2, pc, r2
   14fc8:	ldr	r1, [pc, #408]	; 15168 <ftello64@plt+0x39a0>
   14fcc:	mov	r0, #1
   14fd0:	add	r1, pc, r1
   14fd4:	bl	116d8 <__printf_chk@plt>
   14fd8:	b	14d70 <ftello64@plt+0x35a8>
   14fdc:	ldr	r1, [pc, #392]	; 1516c <ftello64@plt+0x39a4>
   14fe0:	mov	r2, r3
   14fe4:	mov	r0, #1
   14fe8:	add	r1, pc, r1
   14fec:	bl	116d8 <__printf_chk@plt>
   14ff0:	b	14d70 <ftello64@plt+0x35a8>
   14ff4:	cmp	r3, #65	; 0x41
   14ff8:	beq	15028 <ftello64@plt+0x3860>
   14ffc:	cmp	r3, #97	; 0x61
   15000:	ldr	r3, [pc, #284]	; 15124 <ftello64@plt+0x395c>
   15004:	bne	14d9c <ftello64@plt+0x35d4>
   15008:	ldr	r3, [r5, r3]
   1500c:	mov	r1, #1
   15010:	ldr	r0, [pc, #344]	; 15170 <ftello64@plt+0x39a8>
   15014:	mov	r2, #5
   15018:	ldr	r3, [r3]
   1501c:	add	r0, pc, r0
   15020:	bl	114bc <fwrite_unlocked@plt>
   15024:	b	14d70 <ftello64@plt+0x35a8>
   15028:	ldr	r3, [pc, #244]	; 15124 <ftello64@plt+0x395c>
   1502c:	mov	r1, #1
   15030:	ldr	r0, [sp, #12]
   15034:	mov	r2, #5
   15038:	ldr	r3, [r5, r3]
   1503c:	ldr	r3, [r3]
   15040:	bl	114bc <fwrite_unlocked@plt>
   15044:	b	14d70 <ftello64@plt+0x35a8>
   15048:	ldr	r3, [pc, #212]	; 15124 <ftello64@plt+0x395c>
   1504c:	mov	r0, sl
   15050:	b	14ebc <ftello64@plt+0x36f4>
   15054:	cmp	r3, #65	; 0x41
   15058:	bne	14d98 <ftello64@plt+0x35d0>
   1505c:	ldr	r3, [pc, #192]	; 15124 <ftello64@plt+0x395c>
   15060:	mov	r1, #1
   15064:	ldr	r0, [pc, #264]	; 15174 <ftello64@plt+0x39ac>
   15068:	mov	r2, #5
   1506c:	ldr	r3, [r5, r3]
   15070:	add	r0, pc, r0
   15074:	ldr	r3, [r3]
   15078:	bl	114bc <fwrite_unlocked@plt>
   1507c:	b	14d70 <ftello64@plt+0x35a8>
   15080:	ldr	r3, [pc, #156]	; 15124 <ftello64@plt+0x395c>
   15084:	mov	r1, #1
   15088:	ldr	r0, [pc, #232]	; 15178 <ftello64@plt+0x39b0>
   1508c:	mov	r2, #5
   15090:	ldr	r3, [r5, r3]
   15094:	add	r0, pc, r0
   15098:	ldr	r3, [r3]
   1509c:	bl	114bc <fwrite_unlocked@plt>
   150a0:	b	14d70 <ftello64@plt+0x35a8>
   150a4:	ldr	r3, [pc, #120]	; 15124 <ftello64@plt+0x395c>
   150a8:	mov	r1, #1
   150ac:	ldr	r0, [pc, #200]	; 1517c <ftello64@plt+0x39b4>
   150b0:	mov	r2, #5
   150b4:	ldr	r3, [r5, r3]
   150b8:	add	r0, pc, r0
   150bc:	ldr	r3, [r3]
   150c0:	bl	114bc <fwrite_unlocked@plt>
   150c4:	b	14d70 <ftello64@plt+0x35a8>
   150c8:	mov	r1, r2
   150cc:	bl	11738 <__overflow@plt>
   150d0:	b	14d70 <ftello64@plt+0x35a8>
   150d4:	mov	r1, #92	; 0x5c
   150d8:	str	r2, [sp, #8]
   150dc:	str	r3, [sp, #4]
   150e0:	bl	11738 <__overflow@plt>
   150e4:	ldr	r2, [sp, #8]
   150e8:	ldr	r3, [sp, #4]
   150ec:	b	14d50 <ftello64@plt+0x3588>
   150f0:	mov	r1, r2
   150f4:	str	r3, [sp, #4]
   150f8:	bl	11738 <__overflow@plt>
   150fc:	ldr	r3, [sp, #4]
   15100:	b	14e04 <ftello64@plt+0x363c>
   15104:	andeq	r9, r1, r8, ror r3
   15108:	andeq	r9, r1, r8, asr r5
   1510c:	andeq	r7, r0, ip, lsl #10
   15110:	strdeq	r7, [r0], -ip
   15114:	andeq	r7, r0, ip, ror #9
   15118:	andeq	r7, r0, r0, ror #9
   1511c:	ldrdeq	r7, [r0], -r4
   15120:	andeq	r0, r0, r0, lsl #3
   15124:	andeq	r0, r0, r4, lsl #3
   15128:	andeq	r0, r0, r0, ror #2
   1512c:	andeq	r7, r0, r8, asr #4
   15130:	andeq	r7, r0, ip, lsr #4
   15134:	andeq	r7, r0, r4, lsl #20
   15138:	andeq	r7, r0, ip, lsr r2
   1513c:	andeq	r7, r0, r4, lsl #4
   15140:	ldrdeq	r7, [r0], -ip
   15144:	andeq	r7, r0, r4, lsl r2
   15148:	ldrdeq	r7, [r0], -ip
   1514c:			; <UNDEFINED> instruction: 0x000079b4
   15150:	strdeq	r7, [r0], -r4
   15154:			; <UNDEFINED> instruction: 0x000071b4
   15158:	andeq	r7, r0, ip, lsl #19
   1515c:	ldrdeq	r7, [r0], -r4
   15160:	andeq	r7, r0, ip, lsl #3
   15164:	andeq	r7, r0, r4, ror #18
   15168:			; <UNDEFINED> instruction: 0x000071b4
   1516c:	andeq	r7, r0, r4, lsr #3
   15170:	andeq	r7, r0, r8, ror r1
   15174:	strdeq	r7, [r0], -r4
   15178:	andeq	r7, r0, r0, asr #1
   1517c:	andeq	r7, r0, r4, lsr #1
   15180:	push	{r4, r5, r6, r7, r8, lr}
   15184:	subs	r6, r2, #1
   15188:	mov	r7, r0
   1518c:	mov	r8, r1
   15190:	bmi	151cc <ftello64@plt+0x3a04>
   15194:	mov	r5, #0
   15198:	add	r3, r5, r6
   1519c:	mov	r0, r7
   151a0:	add	r3, r3, r3, lsr #31
   151a4:	asr	r4, r3, #1
   151a8:	add	r1, r8, r4, lsl #3
   151ac:	bl	144b8 <ftello64@plt+0x2cf0>
   151b0:	cmp	r0, #0
   151b4:	sublt	r6, r4, #1
   151b8:	blt	151c4 <ftello64@plt+0x39fc>
   151bc:	add	r5, r4, #1
   151c0:	beq	151d4 <ftello64@plt+0x3a0c>
   151c4:	cmp	r6, r5
   151c8:	bge	15198 <ftello64@plt+0x39d0>
   151cc:	mov	r0, #0
   151d0:	pop	{r4, r5, r6, r7, r8, pc}
   151d4:	mov	r0, #1
   151d8:	pop	{r4, r5, r6, r7, r8, pc}
   151dc:	push	{r4, r5, r6, lr}
   151e0:	subs	r4, r0, #0
   151e4:	ldr	r5, [pc, #572]	; 15428 <ftello64@plt+0x3c60>
   151e8:	add	r5, pc, r5
   151ec:	beq	15234 <ftello64@plt+0x3a6c>
   151f0:	ldr	r3, [pc, #564]	; 1542c <ftello64@plt+0x3c64>
   151f4:	mov	r2, #5
   151f8:	ldr	r1, [pc, #560]	; 15430 <ftello64@plt+0x3c68>
   151fc:	mov	r0, #0
   15200:	ldr	r3, [r5, r3]
   15204:	add	r1, pc, r1
   15208:	ldr	r6, [r3]
   1520c:	bl	114d4 <dcgettext@plt>
   15210:	ldr	r3, [pc, #540]	; 15434 <ftello64@plt+0x3c6c>
   15214:	mov	r1, #1
   15218:	ldr	r3, [r5, r3]
   1521c:	ldr	r3, [r3]
   15220:	mov	r2, r0
   15224:	mov	r0, r6
   15228:	bl	116f0 <__fprintf_chk@plt>
   1522c:	mov	r0, r4
   15230:	bl	11618 <exit@plt>
   15234:	ldr	r1, [pc, #508]	; 15438 <ftello64@plt+0x3c70>
   15238:	mov	r2, #5
   1523c:	add	r1, pc, r1
   15240:	bl	114d4 <dcgettext@plt>
   15244:	ldr	r3, [pc, #488]	; 15434 <ftello64@plt+0x3c6c>
   15248:	ldr	r6, [r5, r3]
   1524c:	ldr	r2, [r6]
   15250:	mov	r3, r2
   15254:	mov	r1, r0
   15258:	mov	r0, #1
   1525c:	bl	116d8 <__printf_chk@plt>
   15260:	ldr	r1, [pc, #468]	; 1543c <ftello64@plt+0x3c74>
   15264:	mov	r2, #5
   15268:	mov	r0, r4
   1526c:	add	r1, pc, r1
   15270:	bl	114d4 <dcgettext@plt>
   15274:	ldr	r3, [pc, #452]	; 15440 <ftello64@plt+0x3c78>
   15278:	ldr	r5, [r5, r3]
   1527c:	ldr	r1, [r5]
   15280:	bl	11420 <fputs_unlocked@plt>
   15284:	ldr	r1, [pc, #440]	; 15444 <ftello64@plt+0x3c7c>
   15288:	mov	r2, #5
   1528c:	mov	r0, r4
   15290:	add	r1, pc, r1
   15294:	bl	114d4 <dcgettext@plt>
   15298:	ldr	r1, [r5]
   1529c:	bl	11420 <fputs_unlocked@plt>
   152a0:	ldr	r1, [pc, #416]	; 15448 <ftello64@plt+0x3c80>
   152a4:	mov	r2, #5
   152a8:	mov	r0, r4
   152ac:	add	r1, pc, r1
   152b0:	bl	114d4 <dcgettext@plt>
   152b4:	ldr	r1, [r5]
   152b8:	bl	11420 <fputs_unlocked@plt>
   152bc:	ldr	r1, [pc, #392]	; 1544c <ftello64@plt+0x3c84>
   152c0:	mov	r2, #5
   152c4:	mov	r0, r4
   152c8:	add	r1, pc, r1
   152cc:	bl	114d4 <dcgettext@plt>
   152d0:	ldr	r1, [r5]
   152d4:	bl	11420 <fputs_unlocked@plt>
   152d8:	ldr	r1, [pc, #368]	; 15450 <ftello64@plt+0x3c88>
   152dc:	mov	r2, #5
   152e0:	mov	r0, r4
   152e4:	add	r1, pc, r1
   152e8:	bl	114d4 <dcgettext@plt>
   152ec:	ldr	r1, [r5]
   152f0:	bl	11420 <fputs_unlocked@plt>
   152f4:	ldr	r1, [pc, #344]	; 15454 <ftello64@plt+0x3c8c>
   152f8:	mov	r2, #5
   152fc:	mov	r0, r4
   15300:	add	r1, pc, r1
   15304:	bl	114d4 <dcgettext@plt>
   15308:	ldr	r1, [r5]
   1530c:	bl	11420 <fputs_unlocked@plt>
   15310:	ldr	r1, [pc, #320]	; 15458 <ftello64@plt+0x3c90>
   15314:	mov	r2, #5
   15318:	mov	r0, r4
   1531c:	add	r1, pc, r1
   15320:	bl	114d4 <dcgettext@plt>
   15324:	ldr	r1, [r5]
   15328:	bl	11420 <fputs_unlocked@plt>
   1532c:	ldr	r1, [pc, #296]	; 1545c <ftello64@plt+0x3c94>
   15330:	mov	r2, #5
   15334:	mov	r0, r4
   15338:	add	r1, pc, r1
   1533c:	bl	114d4 <dcgettext@plt>
   15340:	ldr	r1, [r5]
   15344:	bl	11420 <fputs_unlocked@plt>
   15348:	ldr	r1, [pc, #272]	; 15460 <ftello64@plt+0x3c98>
   1534c:	mov	r2, #5
   15350:	mov	r0, r4
   15354:	add	r1, pc, r1
   15358:	bl	114d4 <dcgettext@plt>
   1535c:	ldr	r1, [r5]
   15360:	bl	11420 <fputs_unlocked@plt>
   15364:	ldr	r1, [pc, #248]	; 15464 <ftello64@plt+0x3c9c>
   15368:	mov	r2, #5
   1536c:	mov	r0, r4
   15370:	add	r1, pc, r1
   15374:	bl	114d4 <dcgettext@plt>
   15378:	ldr	r2, [pc, #232]	; 15468 <ftello64@plt+0x3ca0>
   1537c:	ldr	r3, [pc, #232]	; 1546c <ftello64@plt+0x3ca4>
   15380:	add	r2, pc, r2
   15384:	add	r3, pc, r3
   15388:	mov	r1, r0
   1538c:	mov	r0, #1
   15390:	bl	116d8 <__printf_chk@plt>
   15394:	mov	r0, #5
   15398:	mov	r1, r4
   1539c:	bl	11744 <setlocale@plt>
   153a0:	cmp	r0, #0
   153a4:	beq	153c0 <ftello64@plt+0x3bf8>
   153a8:	ldr	r1, [pc, #192]	; 15470 <ftello64@plt+0x3ca8>
   153ac:	mov	r2, #3
   153b0:	add	r1, pc, r1
   153b4:	bl	11798 <strncmp@plt>
   153b8:	cmp	r0, #0
   153bc:	bne	153f4 <ftello64@plt+0x3c2c>
   153c0:	ldr	r1, [pc, #172]	; 15474 <ftello64@plt+0x3cac>
   153c4:	mov	r2, #5
   153c8:	mov	r0, #0
   153cc:	add	r1, pc, r1
   153d0:	bl	114d4 <dcgettext@plt>
   153d4:	mov	r5, r0
   153d8:	ldr	r0, [r6]
   153dc:	bl	15944 <close_stdout@@Base+0x118>
   153e0:	mov	r1, r5
   153e4:	mov	r2, r0
   153e8:	mov	r0, #1
   153ec:	bl	116d8 <__printf_chk@plt>
   153f0:	b	1522c <ftello64@plt+0x3a64>
   153f4:	ldr	r1, [pc, #124]	; 15478 <ftello64@plt+0x3cb0>
   153f8:	mov	r2, #5
   153fc:	mov	r0, r4
   15400:	add	r1, pc, r1
   15404:	bl	114d4 <dcgettext@plt>
   15408:	mov	r5, r0
   1540c:	ldr	r0, [r6]
   15410:	bl	15944 <close_stdout@@Base+0x118>
   15414:	mov	r1, r5
   15418:	mov	r2, r0
   1541c:	mov	r0, #1
   15420:	bl	116d8 <__printf_chk@plt>
   15424:	b	153c0 <ftello64@plt+0x3bf8>
   15428:	andeq	r8, r1, r0, lsl lr
   1542c:	andeq	r0, r0, r8, ror #2
   15430:	andeq	r6, r0, r8, asr #31
   15434:	muleq	r0, r0, r1
   15438:			; <UNDEFINED> instruction: 0x00006fb8
   1543c:	andeq	r6, r0, r4, ror #31
   15440:	andeq	r0, r0, r4, lsl #3
   15444:	andeq	r7, r0, r0, lsl r0
   15448:	andeq	r7, r0, r0, asr #32
   1544c:	strdeq	r7, [r0], -ip
   15450:	andeq	r7, r0, r0, asr #4
   15454:	andeq	r7, r0, r8, asr #7
   15458:	andeq	r7, r0, ip, ror r4
   1545c:	muleq	r0, r0, r4
   15460:	andeq	r7, r0, ip, lsr #9
   15464:	ldrdeq	r7, [r0], -ip
   15468:	andeq	r7, r0, r4, ror #9
   1546c:	strdeq	r7, [r0], -r0
   15470:	andeq	r7, r0, ip, ror #9
   15474:	andeq	r7, r0, ip, lsl r5
   15478:	andeq	r7, r0, r0, lsr #9
   1547c:	mov	r0, #1
   15480:	b	151dc <ftello64@plt+0x3a14>
   15484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15488:	sub	sp, sp, #12
   1548c:	mov	r7, r1
   15490:	mov	r6, r3
   15494:	str	r2, [sp]
   15498:	mov	sl, r0
   1549c:	bl	1163c <strlen@plt>
   154a0:	ldr	fp, [r7]
   154a4:	cmp	fp, #0
   154a8:	mov	r8, r0
   154ac:	beq	15570 <ftello64@plt+0x3da8>
   154b0:	mov	r3, #0
   154b4:	ldr	r4, [sp]
   154b8:	str	r3, [sp, #4]
   154bc:	mov	r5, r3
   154c0:	mvn	r9, #0
   154c4:	b	154f0 <ftello64@plt+0x3d28>
   154c8:	bl	114c8 <memcmp@plt>
   154cc:	ldr	r3, [sp, #4]
   154d0:	cmp	r0, #0
   154d4:	movne	r3, #1
   154d8:	str	r3, [sp, #4]
   154dc:	ldr	fp, [r7, #4]!
   154e0:	add	r5, r5, #1
   154e4:	add	r4, r4, r6
   154e8:	cmp	fp, #0
   154ec:	beq	1554c <ftello64@plt+0x3d84>
   154f0:	mov	r0, fp
   154f4:	mov	r1, sl
   154f8:	mov	r2, r8
   154fc:	bl	11798 <strncmp@plt>
   15500:	cmp	r0, #0
   15504:	mov	r0, fp
   15508:	bne	154dc <ftello64@plt+0x3d14>
   1550c:	bl	1163c <strlen@plt>
   15510:	ldr	r3, [sp]
   15514:	mov	r1, r4
   15518:	mov	r2, r6
   1551c:	cmp	r0, r8
   15520:	mla	r0, r6, r9, r3
   15524:	beq	15564 <ftello64@plt+0x3d9c>
   15528:	cmn	r9, #1
   1552c:	moveq	r9, r5
   15530:	beq	154dc <ftello64@plt+0x3d14>
   15534:	ldr	r3, [sp]
   15538:	cmp	r3, #0
   1553c:	bne	154c8 <ftello64@plt+0x3d00>
   15540:	mov	r3, #1
   15544:	str	r3, [sp, #4]
   15548:	b	154dc <ftello64@plt+0x3d14>
   1554c:	ldr	r3, [sp, #4]
   15550:	cmp	r3, #0
   15554:	bne	15578 <ftello64@plt+0x3db0>
   15558:	mov	r0, r9
   1555c:	add	sp, sp, #12
   15560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15564:	mov	r0, r5
   15568:	add	sp, sp, #12
   1556c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15570:	mvn	r9, #0
   15574:	b	15558 <ftello64@plt+0x3d90>
   15578:	mvn	r0, #1
   1557c:	b	1555c <ftello64@plt+0x3d94>
   15580:	cmn	r2, #1
   15584:	push	{r4, r5, r6, lr}
   15588:	mov	r4, r0
   1558c:	sub	sp, sp, #8
   15590:	mov	r5, r1
   15594:	mov	r0, #0
   15598:	beq	155f0 <ftello64@plt+0x3e28>
   1559c:	ldr	r1, [pc, #100]	; 15608 <ftello64@plt+0x3e40>
   155a0:	mov	r2, #5
   155a4:	add	r1, pc, r1
   155a8:	bl	114d4 <dcgettext@plt>
   155ac:	mov	r6, r0
   155b0:	mov	r2, r5
   155b4:	mov	r1, #6
   155b8:	mov	r0, #0
   155bc:	bl	17ca8 <close_stdout@@Base+0x247c>
   155c0:	mov	r1, r4
   155c4:	mov	r5, r0
   155c8:	mov	r0, #1
   155cc:	bl	17fa8 <close_stdout@@Base+0x277c>
   155d0:	mov	r3, r5
   155d4:	mov	r2, r6
   155d8:	str	r0, [sp]
   155dc:	mov	r0, #0
   155e0:	mov	r1, r0
   155e4:	bl	11588 <error@plt>
   155e8:	add	sp, sp, #8
   155ec:	pop	{r4, r5, r6, pc}
   155f0:	ldr	r1, [pc, #20]	; 1560c <ftello64@plt+0x3e44>
   155f4:	mov	r2, #5
   155f8:	add	r1, pc, r1
   155fc:	bl	114d4 <dcgettext@plt>
   15600:	mov	r6, r0
   15604:	b	155b0 <ftello64@plt+0x3de8>
   15608:	muleq	r0, r4, r5
   1560c:	andeq	r7, r0, r4, lsr #10
   15610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15614:	mov	r4, r1
   15618:	ldr	r1, [pc, #276]	; 15734 <ftello64@plt+0x3f6c>
   1561c:	sub	sp, sp, #12
   15620:	mov	r7, r0
   15624:	mov	r6, r2
   15628:	add	r1, pc, r1
   1562c:	mov	r2, #5
   15630:	mov	r0, #0
   15634:	bl	114d4 <dcgettext@plt>
   15638:	ldr	r3, [pc, #248]	; 15738 <ftello64@plt+0x3f70>
   1563c:	ldr	r2, [pc, #248]	; 1573c <ftello64@plt+0x3f74>
   15640:	add	r3, pc, r3
   15644:	ldr	r9, [r3, r2]
   15648:	ldr	r1, [r9]
   1564c:	bl	11420 <fputs_unlocked@plt>
   15650:	ldr	fp, [r7]
   15654:	cmp	fp, #0
   15658:	beq	156f8 <ftello64@plt+0x3f30>
   1565c:	ldr	sl, [pc, #220]	; 15740 <ftello64@plt+0x3f78>
   15660:	mov	r8, #0
   15664:	ldr	r3, [pc, #216]	; 15744 <ftello64@plt+0x3f7c>
   15668:	mov	r5, r8
   1566c:	add	sl, pc, sl
   15670:	add	r3, pc, r3
   15674:	str	r3, [sp, #4]
   15678:	b	156b4 <ftello64@plt+0x3eec>
   1567c:	mov	r0, fp
   15680:	ldr	fp, [r9]
   15684:	bl	17fb0 <close_stdout@@Base+0x2784>
   15688:	mov	r1, #1
   1568c:	mov	r2, sl
   15690:	mov	r8, r4
   15694:	mov	r3, r0
   15698:	mov	r0, fp
   1569c:	bl	116f0 <__fprintf_chk@plt>
   156a0:	ldr	fp, [r7, #4]!
   156a4:	add	r5, r5, #1
   156a8:	add	r4, r4, r6
   156ac:	cmp	fp, #0
   156b0:	beq	156f8 <ftello64@plt+0x3f30>
   156b4:	cmp	r5, #0
   156b8:	mov	r1, r4
   156bc:	mov	r2, r6
   156c0:	mov	r0, r8
   156c4:	beq	1567c <ftello64@plt+0x3eb4>
   156c8:	bl	114c8 <memcmp@plt>
   156cc:	cmp	r0, #0
   156d0:	bne	1567c <ftello64@plt+0x3eb4>
   156d4:	mov	r0, fp
   156d8:	ldr	fp, [r9]
   156dc:	bl	17fb0 <close_stdout@@Base+0x2784>
   156e0:	mov	r1, #1
   156e4:	ldr	r2, [sp, #4]
   156e8:	mov	r3, r0
   156ec:	mov	r0, fp
   156f0:	bl	116f0 <__fprintf_chk@plt>
   156f4:	b	156a0 <ftello64@plt+0x3ed8>
   156f8:	ldr	r0, [r9]
   156fc:	ldr	r3, [r0, #20]
   15700:	ldr	r2, [r0, #24]
   15704:	cmp	r3, r2
   15708:	bcs	15724 <ftello64@plt+0x3f5c>
   1570c:	add	r1, r3, #1
   15710:	mov	r2, #10
   15714:	str	r1, [r0, #20]
   15718:	strb	r2, [r3]
   1571c:	add	sp, sp, #12
   15720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15724:	mov	r1, #10
   15728:	add	sp, sp, #12
   1572c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15730:	b	11738 <__overflow@plt>
   15734:	andeq	r7, r0, r0, lsr r5
   15738:			; <UNDEFINED> instruction: 0x000189b8
   1573c:	andeq	r0, r0, r8, ror #2
   15740:	andeq	r7, r0, r4, lsl #10
   15744:	andeq	r7, r0, r8, lsl #10
   15748:	push	{r4, r5, r6, r7, r8, lr}
   1574c:	mov	r7, r1
   15750:	ldr	r4, [sp, #24]
   15754:	mov	r1, r2
   15758:	mov	r6, r2
   1575c:	mov	r5, r3
   15760:	mov	r2, r3
   15764:	mov	r8, r0
   15768:	mov	r3, r4
   1576c:	mov	r0, r7
   15770:	bl	15484 <ftello64@plt+0x3cbc>
   15774:	subs	r2, r0, #0
   15778:	blt	15784 <ftello64@plt+0x3fbc>
   1577c:	mov	r0, r2
   15780:	pop	{r4, r5, r6, r7, r8, pc}
   15784:	mov	r0, r8
   15788:	mov	r1, r7
   1578c:	bl	15580 <ftello64@plt+0x3db8>
   15790:	mov	r0, r6
   15794:	mov	r1, r5
   15798:	mov	r2, r4
   1579c:	bl	15610 <ftello64@plt+0x3e48>
   157a0:	ldr	r3, [sp, #28]
   157a4:	blx	r3
   157a8:	mvn	r0, #0
   157ac:	pop	{r4, r5, r6, r7, r8, pc}
   157b0:	push	{r4, r5, r6, r7, r8, lr}
   157b4:	mov	r8, r0
   157b8:	ldr	r5, [r1]
   157bc:	mov	r6, r3
   157c0:	cmp	r5, #0
   157c4:	beq	157fc <ftello64@plt+0x4034>
   157c8:	mov	r4, r2
   157cc:	mov	r7, r1
   157d0:	b	157e0 <ftello64@plt+0x4018>
   157d4:	ldr	r5, [r7, #4]!
   157d8:	cmp	r5, #0
   157dc:	beq	157fc <ftello64@plt+0x4034>
   157e0:	mov	r1, r4
   157e4:	mov	r0, r8
   157e8:	mov	r2, r6
   157ec:	add	r4, r4, r6
   157f0:	bl	114c8 <memcmp@plt>
   157f4:	cmp	r0, #0
   157f8:	bne	157d4 <ftello64@plt+0x400c>
   157fc:	mov	r0, r5
   15800:	pop	{r4, r5, r6, r7, r8, pc}
   15804:	ldr	r3, [pc, #8]	; 15814 <ftello64@plt+0x404c>
   15808:	add	r3, pc, r3
   1580c:	str	r0, [r3]
   15810:	bx	lr
   15814:	strdeq	r8, [r1], -ip
   15818:	ldr	r3, [pc, #8]	; 15828 <ftello64@plt+0x4060>
   1581c:	add	r3, pc, r3
   15820:	strb	r0, [r3, #4]
   15824:	bx	lr
   15828:	andeq	r8, r1, r8, ror #31

0001582c <close_stdout@@Base>:
   1582c:	push	{r4, r5, r6, r7, lr}
   15830:	sub	sp, sp, #12
   15834:	ldr	r4, [pc, #228]	; 15920 <close_stdout@@Base+0xf4>
   15838:	ldr	r3, [pc, #228]	; 15924 <close_stdout@@Base+0xf8>
   1583c:	add	r4, pc, r4
   15840:	ldr	r3, [r4, r3]
   15844:	ldr	r0, [r3]
   15848:	bl	197fc <close_stdout@@Base+0x3fd0>
   1584c:	cmp	r0, #0
   15850:	beq	15878 <close_stdout@@Base+0x4c>
   15854:	ldr	r3, [pc, #204]	; 15928 <close_stdout@@Base+0xfc>
   15858:	add	r3, pc, r3
   1585c:	ldrb	r3, [r3, #4]
   15860:	cmp	r3, #0
   15864:	beq	15898 <close_stdout@@Base+0x6c>
   15868:	bl	11678 <__errno_location@plt>
   1586c:	ldr	r3, [r0]
   15870:	cmp	r3, #32
   15874:	bne	15898 <close_stdout@@Base+0x6c>
   15878:	ldr	r3, [pc, #172]	; 1592c <close_stdout@@Base+0x100>
   1587c:	ldr	r3, [r4, r3]
   15880:	ldr	r0, [r3]
   15884:	bl	197fc <close_stdout@@Base+0x3fd0>
   15888:	cmp	r0, #0
   1588c:	bne	158ec <close_stdout@@Base+0xc0>
   15890:	add	sp, sp, #12
   15894:	pop	{r4, r5, r6, r7, pc}
   15898:	ldr	r1, [pc, #144]	; 15930 <close_stdout@@Base+0x104>
   1589c:	mov	r0, #0
   158a0:	mov	r2, #5
   158a4:	add	r1, pc, r1
   158a8:	bl	114d4 <dcgettext@plt>
   158ac:	ldr	r3, [pc, #128]	; 15934 <close_stdout@@Base+0x108>
   158b0:	ldr	r5, [pc, r3]
   158b4:	cmp	r5, #0
   158b8:	mov	r6, r0
   158bc:	beq	158fc <close_stdout@@Base+0xd0>
   158c0:	bl	11678 <__errno_location@plt>
   158c4:	ldr	r7, [r0]
   158c8:	mov	r0, r5
   158cc:	bl	17e5c <close_stdout@@Base+0x2630>
   158d0:	ldr	r2, [pc, #96]	; 15938 <close_stdout@@Base+0x10c>
   158d4:	str	r6, [sp]
   158d8:	mov	r1, r7
   158dc:	add	r2, pc, r2
   158e0:	mov	r3, r0
   158e4:	mov	r0, #0
   158e8:	bl	11588 <error@plt>
   158ec:	ldr	r3, [pc, #72]	; 1593c <close_stdout@@Base+0x110>
   158f0:	ldr	r3, [r4, r3]
   158f4:	ldr	r0, [r3]
   158f8:	bl	11498 <_exit@plt>
   158fc:	bl	11678 <__errno_location@plt>
   15900:	ldr	r2, [pc, #56]	; 15940 <close_stdout@@Base+0x114>
   15904:	add	r2, pc, r2
   15908:	mov	r3, r0
   1590c:	mov	r0, r5
   15910:	ldr	r1, [r3]
   15914:	mov	r3, r6
   15918:	bl	11588 <error@plt>
   1591c:	b	158ec <close_stdout@@Base+0xc0>
   15920:			; <UNDEFINED> instruction: 0x000187bc
   15924:	andeq	r0, r0, r4, lsl #3
   15928:	andeq	r8, r1, ip, lsr #31
   1592c:	andeq	r0, r0, r8, ror #2
   15930:	ldrdeq	r7, [r0], -ip
   15934:	andeq	r8, r1, r4, asr pc
   15938:			; <UNDEFINED> instruction: 0x000072b0
   1593c:	andeq	r0, r0, r8, lsl #3
   15940:	andeq	r7, r0, r8, rrx
   15944:	ldrb	r3, [r0]
   15948:	cmp	r3, #47	; 0x2f
   1594c:	bne	15968 <close_stdout@@Base+0x13c>
   15950:	add	r2, r0, #1
   15954:	mov	r0, r2
   15958:	add	r2, r2, #1
   1595c:	ldrb	r3, [r0]
   15960:	cmp	r3, #47	; 0x2f
   15964:	beq	15954 <close_stdout@@Base+0x128>
   15968:	cmp	r3, #0
   1596c:	bxeq	lr
   15970:	mov	r2, r0
   15974:	mov	r1, #0
   15978:	cmp	r3, #47	; 0x2f
   1597c:	moveq	r1, #1
   15980:	beq	15990 <close_stdout@@Base+0x164>
   15984:	cmp	r1, #0
   15988:	movne	r0, r2
   1598c:	movne	r1, #0
   15990:	ldrb	r3, [r2, #1]!
   15994:	cmp	r3, #0
   15998:	bne	15978 <close_stdout@@Base+0x14c>
   1599c:	bx	lr
   159a0:	push	{r4, lr}
   159a4:	mov	r4, r0
   159a8:	bl	1163c <strlen@plt>
   159ac:	cmp	r0, #1
   159b0:	popls	{r4, pc}
   159b4:	sub	r3, r0, #1
   159b8:	ldrb	r2, [r4, r3]
   159bc:	cmp	r2, #47	; 0x2f
   159c0:	popne	{r4, pc}
   159c4:	mov	r0, r3
   159c8:	cmp	r0, #1
   159cc:	sub	r3, r3, #1
   159d0:	beq	159e4 <close_stdout@@Base+0x1b8>
   159d4:	ldrb	r2, [r4, r3]
   159d8:	cmp	r2, #47	; 0x2f
   159dc:	popne	{r4, pc}
   159e0:	b	159c4 <close_stdout@@Base+0x198>
   159e4:	pop	{r4, pc}
   159e8:	push	{r4, lr}
   159ec:	mov	r4, r0
   159f0:	ldr	r0, [pc, #64]	; 15a38 <close_stdout@@Base+0x20c>
   159f4:	mov	r1, #0
   159f8:	add	r0, pc, r0
   159fc:	bl	11594 <open64@plt>
   15a00:	cmp	r4, r0
   15a04:	mov	r3, r0
   15a08:	moveq	r3, #1
   15a0c:	beq	15a30 <close_stdout@@Base+0x204>
   15a10:	cmp	r3, #0
   15a14:	movlt	r3, #0
   15a18:	blt	15a30 <close_stdout@@Base+0x204>
   15a1c:	bl	117b0 <close@plt>
   15a20:	bl	11678 <__errno_location@plt>
   15a24:	mov	r3, #0
   15a28:	mov	r2, #9
   15a2c:	str	r2, [r0]
   15a30:	mov	r0, r3
   15a34:	pop	{r4, pc}
   15a38:	muleq	r0, ip, r3
   15a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a40:	mov	r9, r0
   15a44:	mov	r0, r2
   15a48:	mov	r7, r2
   15a4c:	mov	sl, r1
   15a50:	bl	116e4 <fileno@plt>
   15a54:	cmp	r0, #1
   15a58:	beq	15b8c <close_stdout@@Base+0x360>
   15a5c:	cmp	r0, #2
   15a60:	beq	15b84 <close_stdout@@Base+0x358>
   15a64:	cmp	r0, #0
   15a68:	beq	15b2c <close_stdout@@Base+0x300>
   15a6c:	mov	r0, #2
   15a70:	mov	r1, r0
   15a74:	bl	114ec <dup2@plt>
   15a78:	subs	r5, r0, #2
   15a7c:	movne	r5, #1
   15a80:	mov	r0, #1
   15a84:	mov	r1, r0
   15a88:	bl	114ec <dup2@plt>
   15a8c:	subs	r6, r0, #1
   15a90:	movne	r6, #1
   15a94:	mov	r0, #0
   15a98:	mov	r1, r0
   15a9c:	bl	114ec <dup2@plt>
   15aa0:	cmp	r0, #0
   15aa4:	beq	15b34 <close_stdout@@Base+0x308>
   15aa8:	mov	r0, #0
   15aac:	bl	159e8 <close_stdout@@Base+0x1bc>
   15ab0:	cmp	r0, #0
   15ab4:	moveq	r4, r0
   15ab8:	moveq	r8, #1
   15abc:	beq	15af8 <close_stdout@@Base+0x2cc>
   15ac0:	cmp	r6, #0
   15ac4:	mov	r8, #1
   15ac8:	bne	15b40 <close_stdout@@Base+0x314>
   15acc:	cmp	r5, #0
   15ad0:	beq	15ae4 <close_stdout@@Base+0x2b8>
   15ad4:	mov	r0, #2
   15ad8:	bl	159e8 <close_stdout@@Base+0x1bc>
   15adc:	subs	r4, r0, #0
   15ae0:	beq	15b6c <close_stdout@@Base+0x340>
   15ae4:	mov	r0, r9
   15ae8:	mov	r1, sl
   15aec:	mov	r2, r7
   15af0:	bl	115f4 <freopen64@plt>
   15af4:	mov	r4, r0
   15af8:	bl	11678 <__errno_location@plt>
   15afc:	cmp	r5, #0
   15b00:	mov	r7, r0
   15b04:	ldr	r5, [r0]
   15b08:	bne	15b78 <close_stdout@@Base+0x34c>
   15b0c:	cmp	r6, #0
   15b10:	bne	15b60 <close_stdout@@Base+0x334>
   15b14:	cmp	r8, #0
   15b18:	bne	15b54 <close_stdout@@Base+0x328>
   15b1c:	cmp	r4, #0
   15b20:	mov	r0, r4
   15b24:	streq	r5, [r7]
   15b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b2c:	mov	r5, r0
   15b30:	mov	r6, r0
   15b34:	cmp	r6, #0
   15b38:	mov	r8, #0
   15b3c:	beq	15acc <close_stdout@@Base+0x2a0>
   15b40:	mov	r0, #1
   15b44:	bl	159e8 <close_stdout@@Base+0x1bc>
   15b48:	cmp	r0, #0
   15b4c:	bne	15acc <close_stdout@@Base+0x2a0>
   15b50:	b	15af4 <close_stdout@@Base+0x2c8>
   15b54:	mov	r0, #0
   15b58:	bl	117b0 <close@plt>
   15b5c:	b	15b1c <close_stdout@@Base+0x2f0>
   15b60:	mov	r0, #1
   15b64:	bl	117b0 <close@plt>
   15b68:	b	15b14 <close_stdout@@Base+0x2e8>
   15b6c:	bl	11678 <__errno_location@plt>
   15b70:	ldr	r5, [r0]
   15b74:	mov	r7, r0
   15b78:	mov	r0, #2
   15b7c:	bl	117b0 <close@plt>
   15b80:	b	15b0c <close_stdout@@Base+0x2e0>
   15b84:	mov	r5, #0
   15b88:	b	15a80 <close_stdout@@Base+0x254>
   15b8c:	mov	r5, #0
   15b90:	mov	r6, r5
   15b94:	b	15a94 <close_stdout@@Base+0x268>
   15b98:	push	{r3, r4, r5, r6, r7, lr}
   15b9c:	subs	r4, r0, #0
   15ba0:	ldr	r5, [pc, #172]	; 15c54 <close_stdout@@Base+0x428>
   15ba4:	add	r5, pc, r5
   15ba8:	beq	15c30 <close_stdout@@Base+0x404>
   15bac:	mov	r1, #47	; 0x2f
   15bb0:	bl	11750 <strrchr@plt>
   15bb4:	subs	r6, r0, #0
   15bb8:	beq	15c14 <close_stdout@@Base+0x3e8>
   15bbc:	add	r7, r6, #1
   15bc0:	rsb	r3, r4, r7
   15bc4:	cmp	r3, #6
   15bc8:	ble	15c14 <close_stdout@@Base+0x3e8>
   15bcc:	ldr	r1, [pc, #132]	; 15c58 <close_stdout@@Base+0x42c>
   15bd0:	sub	r0, r6, #6
   15bd4:	mov	r2, #7
   15bd8:	add	r1, pc, r1
   15bdc:	bl	11798 <strncmp@plt>
   15be0:	cmp	r0, #0
   15be4:	bne	15c14 <close_stdout@@Base+0x3e8>
   15be8:	ldr	r1, [pc, #108]	; 15c5c <close_stdout@@Base+0x430>
   15bec:	mov	r0, r7
   15bf0:	mov	r2, #3
   15bf4:	add	r1, pc, r1
   15bf8:	bl	11798 <strncmp@plt>
   15bfc:	cmp	r0, #0
   15c00:	movne	r4, r7
   15c04:	ldreq	r3, [pc, #84]	; 15c60 <close_stdout@@Base+0x434>
   15c08:	addeq	r4, r6, #4
   15c0c:	ldreq	r3, [r5, r3]
   15c10:	streq	r4, [r3]
   15c14:	ldr	r2, [pc, #72]	; 15c64 <close_stdout@@Base+0x438>
   15c18:	ldr	r3, [pc, #72]	; 15c68 <close_stdout@@Base+0x43c>
   15c1c:	ldr	r2, [r5, r2]
   15c20:	str	r4, [r2]
   15c24:	ldr	r3, [r5, r3]
   15c28:	str	r4, [r3]
   15c2c:	pop	{r3, r4, r5, r6, r7, pc}
   15c30:	ldr	r3, [pc, #52]	; 15c6c <close_stdout@@Base+0x440>
   15c34:	mov	r1, #1
   15c38:	ldr	r0, [pc, #48]	; 15c70 <close_stdout@@Base+0x444>
   15c3c:	mov	r2, #55	; 0x37
   15c40:	ldr	r3, [r5, r3]
   15c44:	add	r0, pc, r0
   15c48:	ldr	r3, [r3]
   15c4c:	bl	11534 <fwrite@plt>
   15c50:	bl	117a4 <abort@plt>
   15c54:	andeq	r8, r1, r4, asr r4
   15c58:	andeq	r7, r0, r0, lsl #4
   15c5c:	andeq	r7, r0, ip, ror #3
   15c60:	muleq	r0, r8, r1
   15c64:	muleq	r0, r0, r1
   15c68:	andeq	r0, r0, ip, lsl #3
   15c6c:	andeq	r0, r0, r8, ror #2
   15c70:	andeq	r7, r0, ip, asr r1
   15c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c78:	sub	sp, sp, #156	; 0x9c
   15c7c:	ldr	r7, [pc, #2116]	; 164c8 <close_stdout@@Base+0xc9c>
   15c80:	add	r2, sp, #120	; 0x78
   15c84:	ldr	r3, [pc, #2112]	; 164cc <close_stdout@@Base+0xca0>
   15c88:	mov	fp, r0
   15c8c:	add	r7, pc, r7
   15c90:	mov	r0, r1
   15c94:	mov	r1, #2
   15c98:	add	r6, sp, #40	; 0x28
   15c9c:	ldr	r3, [r7, r3]
   15ca0:	add	r9, sp, #96	; 0x60
   15ca4:	str	r2, [sp, #16]
   15ca8:	mov	r4, #1
   15cac:	mov	r5, #0
   15cb0:	str	r3, [sp, #28]
   15cb4:	add	r3, sp, #64	; 0x40
   15cb8:	ldr	r2, [sp, #28]
   15cbc:	str	r3, [sp, #12]
   15cc0:	ldr	r3, [r2]
   15cc4:	str	r3, [sp, #148]	; 0x94
   15cc8:	bl	18258 <close_stdout@@Base+0x2a2c>
   15ccc:	str	r0, [sp, #20]
   15cd0:	ldrb	r3, [fp]
   15cd4:	cmp	r3, #0
   15cd8:	beq	162d0 <close_stdout@@Base+0xaa4>
   15cdc:	mov	r0, fp
   15ce0:	ldr	r1, [sp, #20]
   15ce4:	bl	1a7f4 <close_stdout@@Base+0x4fc8>
   15ce8:	subs	r8, r0, #0
   15cec:	beq	162d0 <close_stdout@@Base+0xaa4>
   15cf0:	bl	1154c <__ctype_get_mb_cur_max@plt>
   15cf4:	cmp	r0, #1
   15cf8:	bls	16250 <close_stdout@@Base+0xa24>
   15cfc:	cmp	fp, r8
   15d00:	str	r5, [r6, #4]
   15d04:	str	fp, [sp, #52]	; 0x34
   15d08:	addcc	sl, sp, #64	; 0x40
   15d0c:	strb	r5, [sp, #36]	; 0x24
   15d10:	str	r5, [r6]
   15d14:	strb	r5, [sp, #48]	; 0x30
   15d18:	strcc	r9, [sp, #24]
   15d1c:	bcs	162f0 <close_stdout@@Base+0xac4>
   15d20:	ldrb	r3, [sp, #36]	; 0x24
   15d24:	cmp	r3, #0
   15d28:	bne	15d88 <close_stdout@@Base+0x55c>
   15d2c:	ldr	r2, [pc, #1948]	; 164d0 <close_stdout@@Base+0xca4>
   15d30:	ldrb	r3, [fp]
   15d34:	ldr	r1, [r7, r2]
   15d38:	and	r2, r3, #31
   15d3c:	lsr	r3, r3, #5
   15d40:	ldr	r3, [r1, r3, lsl #2]
   15d44:	lsr	r3, r3, r2
   15d48:	tst	r3, #1
   15d4c:	beq	15d74 <close_stdout@@Base+0x548>
   15d50:	str	r4, [sp, #56]	; 0x38
   15d54:	ldrb	r2, [fp]
   15d58:	strb	r4, [sp, #60]	; 0x3c
   15d5c:	strb	r4, [sp, #48]	; 0x30
   15d60:	mov	r9, r2
   15d64:	cmp	r9, #0
   15d68:	str	r2, [sp, #64]	; 0x40
   15d6c:	bne	15e0c <close_stdout@@Base+0x5e0>
   15d70:	bl	117a4 <abort@plt>
   15d74:	mov	r0, r6
   15d78:	bl	114b0 <mbsinit@plt>
   15d7c:	cmp	r0, #0
   15d80:	beq	16484 <close_stdout@@Base+0xc58>
   15d84:	strb	r4, [sp, #36]	; 0x24
   15d88:	bl	1154c <__ctype_get_mb_cur_max@plt>
   15d8c:	mov	r1, r0
   15d90:	mov	r0, fp
   15d94:	bl	1822c <close_stdout@@Base+0x2a00>
   15d98:	mov	r1, fp
   15d9c:	mov	r3, r6
   15da0:	mov	r2, r0
   15da4:	mov	r0, sl
   15da8:	bl	1157c <mbrtowc@plt>
   15dac:	cmn	r0, #1
   15db0:	str	r0, [sp, #56]	; 0x38
   15db4:	beq	161f8 <close_stdout@@Base+0x9cc>
   15db8:	cmn	r0, #2
   15dbc:	beq	16228 <close_stdout@@Base+0x9fc>
   15dc0:	cmp	r0, #0
   15dc4:	bne	16220 <close_stdout@@Base+0x9f4>
   15dc8:	ldr	fp, [sp, #52]	; 0x34
   15dcc:	str	r4, [sp, #56]	; 0x38
   15dd0:	ldrb	r3, [fp]
   15dd4:	cmp	r3, #0
   15dd8:	bne	164a8 <close_stdout@@Base+0xc7c>
   15ddc:	ldr	r2, [sp, #64]	; 0x40
   15de0:	cmp	r2, #0
   15de4:	bne	161d8 <close_stdout@@Base+0x9ac>
   15de8:	mov	r9, r2
   15dec:	mov	r0, r6
   15df0:	strb	r4, [sp, #60]	; 0x3c
   15df4:	bl	114b0 <mbsinit@plt>
   15df8:	strb	r4, [sp, #48]	; 0x30
   15dfc:	cmp	r0, #0
   15e00:	strbne	r5, [sp, #36]	; 0x24
   15e04:	cmp	r9, #0
   15e08:	beq	15d70 <close_stdout@@Base+0x544>
   15e0c:	ldr	fp, [sp, #52]	; 0x34
   15e10:	ldr	r3, [sp, #56]	; 0x38
   15e14:	strb	r5, [sp, #48]	; 0x30
   15e18:	add	fp, fp, r3
   15e1c:	ldrb	r3, [sp, #60]	; 0x3c
   15e20:	cmp	r8, fp
   15e24:	str	fp, [sp, #52]	; 0x34
   15e28:	bhi	15d20 <close_stdout@@Base+0x4f4>
   15e2c:	cmp	r3, #0
   15e30:	mov	r2, r9
   15e34:	ldr	r9, [sp, #24]
   15e38:	beq	162f0 <close_stdout@@Base+0xac4>
   15e3c:	mov	r0, r2
   15e40:	bl	11684 <iswalnum@plt>
   15e44:	rsbs	r0, r0, #1
   15e48:	movcc	r0, #0
   15e4c:	str	r0, [sp, #24]
   15e50:	strb	r5, [sp, #92]	; 0x5c
   15e54:	ldrb	r2, [sp, #92]	; 0x5c
   15e58:	ldr	fp, [sp, #20]
   15e5c:	cmp	r2, #0
   15e60:	str	r5, [r6, #4]
   15e64:	str	r5, [r9, #4]
   15e68:	str	r8, [sp, #52]	; 0x34
   15e6c:	strb	r5, [sp, #36]	; 0x24
   15e70:	str	r5, [r6]
   15e74:	strb	r5, [sp, #48]	; 0x30
   15e78:	str	fp, [sp, #108]	; 0x6c
   15e7c:	str	r5, [r9]
   15e80:	strb	r5, [sp, #104]	; 0x68
   15e84:	bne	16040 <close_stdout@@Base+0x814>
   15e88:	ldr	r1, [pc, #1600]	; 164d0 <close_stdout@@Base+0xca4>
   15e8c:	ldrb	r2, [fp]
   15e90:	ldr	r0, [r7, r1]
   15e94:	and	r1, r2, #31
   15e98:	lsr	r2, r2, #5
   15e9c:	ldr	r2, [r0, r2, lsl #2]
   15ea0:	lsr	r2, r2, r1
   15ea4:	tst	r2, #1
   15ea8:	beq	161a0 <close_stdout@@Base+0x974>
   15eac:	str	r4, [sp, #112]	; 0x70
   15eb0:	ldrb	r3, [fp]
   15eb4:	strb	r4, [sp, #116]	; 0x74
   15eb8:	mov	fp, r3
   15ebc:	str	r3, [sp, #120]	; 0x78
   15ec0:	cmp	fp, #0
   15ec4:	strb	r4, [sp, #104]	; 0x68
   15ec8:	mov	r3, #1
   15ecc:	bne	15ff4 <close_stdout@@Base+0x7c8>
   15ed0:	ldrb	ip, [sp, #48]	; 0x30
   15ed4:	cmp	ip, #0
   15ed8:	bne	16244 <close_stdout@@Base+0xa18>
   15edc:	ldrb	r2, [sp, #36]	; 0x24
   15ee0:	ldr	sl, [sp, #52]	; 0x34
   15ee4:	cmp	r2, #0
   15ee8:	bne	16394 <close_stdout@@Base+0xb68>
   15eec:	ldr	r1, [pc, #1500]	; 164d0 <close_stdout@@Base+0xca4>
   15ef0:	ldrb	r2, [sl]
   15ef4:	ldr	r0, [r7, r1]
   15ef8:	and	r1, r2, #31
   15efc:	lsr	r2, r2, #5
   15f00:	ldr	r2, [r0, r2, lsl #2]
   15f04:	lsr	r2, r2, r1
   15f08:	tst	r2, #1
   15f0c:	beq	16370 <close_stdout@@Base+0xb44>
   15f10:	str	r3, [sp, #56]	; 0x38
   15f14:	mov	ip, r3
   15f18:	ldrb	r2, [sl]
   15f1c:	strb	r3, [sp, #60]	; 0x3c
   15f20:	mov	r3, r2
   15f24:	str	r2, [sp, #64]	; 0x40
   15f28:	strb	r4, [sp, #48]	; 0x30
   15f2c:	cmp	ip, #0
   15f30:	beq	15f3c <close_stdout@@Base+0x710>
   15f34:	cmp	r3, #0
   15f38:	beq	15f58 <close_stdout@@Base+0x72c>
   15f3c:	ldrb	r2, [sp, #60]	; 0x3c
   15f40:	cmp	r2, #0
   15f44:	beq	15f58 <close_stdout@@Base+0x72c>
   15f48:	mov	r0, r3
   15f4c:	bl	11684 <iswalnum@plt>
   15f50:	cmp	r0, #0
   15f54:	bne	15f64 <close_stdout@@Base+0x738>
   15f58:	ldr	r2, [sp, #24]
   15f5c:	cmp	r2, #0
   15f60:	bne	1647c <close_stdout@@Base+0xc50>
   15f64:	ldr	r2, [pc, #1380]	; 164d0 <close_stdout@@Base+0xca4>
   15f68:	str	r5, [r6, #4]
   15f6c:	str	r8, [sp, #52]	; 0x34
   15f70:	strb	r5, [sp, #36]	; 0x24
   15f74:	str	r5, [r6]
   15f78:	strb	r5, [sp, #48]	; 0x30
   15f7c:	ldrb	r3, [r8]
   15f80:	ldr	r1, [r7, r2]
   15f84:	and	r2, r3, #31
   15f88:	lsr	r3, r3, #5
   15f8c:	ldr	r3, [r1, r3, lsl #2]
   15f90:	lsr	r3, r3, r2
   15f94:	tst	r3, #1
   15f98:	beq	162fc <close_stdout@@Base+0xad0>
   15f9c:	str	r4, [sp, #56]	; 0x38
   15fa0:	ldrb	fp, [r8]
   15fa4:	strb	r4, [sp, #60]	; 0x3c
   15fa8:	str	fp, [sp, #64]	; 0x40
   15fac:	cmp	fp, #0
   15fb0:	strb	r4, [sp, #48]	; 0x30
   15fb4:	bne	162e4 <close_stdout@@Base+0xab8>
   15fb8:	ldr	r0, [sp, #20]
   15fbc:	bl	11480 <free@plt>
   15fc0:	ldr	r1, [sp, #28]
   15fc4:	ldr	r2, [sp, #148]	; 0x94
   15fc8:	mov	r0, fp
   15fcc:	ldr	r3, [r1]
   15fd0:	cmp	r2, r3
   15fd4:	bne	164a4 <close_stdout@@Base+0xc78>
   15fd8:	add	sp, sp, #156	; 0x9c
   15fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe0:	ldr	r0, [sp, #108]	; 0x6c
   15fe4:	bl	1163c <strlen@plt>
   15fe8:	strb	r5, [sp, #116]	; 0x74
   15fec:	str	r0, [sp, #112]	; 0x70
   15ff0:	strb	r4, [sp, #104]	; 0x68
   15ff4:	ldrb	fp, [sp, #48]	; 0x30
   15ff8:	cmp	fp, #0
   15ffc:	beq	160a4 <close_stdout@@Base+0x878>
   16000:	ldrb	fp, [sp, #60]	; 0x3c
   16004:	cmp	fp, #0
   16008:	bne	160f8 <close_stdout@@Base+0x8cc>
   1600c:	ldr	r1, [sp, #52]	; 0x34
   16010:	ldr	r2, [sp, #56]	; 0x38
   16014:	ldr	fp, [sp, #108]	; 0x6c
   16018:	add	r1, r1, r2
   1601c:	ldr	r2, [sp, #112]	; 0x70
   16020:	strb	r5, [sp, #48]	; 0x30
   16024:	add	fp, fp, r2
   16028:	ldrb	r2, [sp, #92]	; 0x5c
   1602c:	strb	r5, [sp, #104]	; 0x68
   16030:	cmp	r2, #0
   16034:	str	r1, [sp, #52]	; 0x34
   16038:	str	fp, [sp, #108]	; 0x6c
   1603c:	beq	15e88 <close_stdout@@Base+0x65c>
   16040:	bl	1154c <__ctype_get_mb_cur_max@plt>
   16044:	mov	r1, r0
   16048:	mov	r0, fp
   1604c:	bl	1822c <close_stdout@@Base+0x2a00>
   16050:	mov	r1, fp
   16054:	mov	r3, r9
   16058:	mov	r2, r0
   1605c:	add	r0, sp, #120	; 0x78
   16060:	bl	1157c <mbrtowc@plt>
   16064:	cmn	r0, #1
   16068:	str	r0, [sp, #112]	; 0x70
   1606c:	strbeq	r5, [sp, #116]	; 0x74
   16070:	streq	r4, [sp, #112]	; 0x70
   16074:	beq	15ff0 <close_stdout@@Base+0x7c4>
   16078:	cmn	r0, #2
   1607c:	beq	15fe0 <close_stdout@@Base+0x7b4>
   16080:	cmp	r0, #0
   16084:	beq	161b8 <close_stdout@@Base+0x98c>
   16088:	ldr	fp, [sp, #120]	; 0x78
   1608c:	mov	r0, r9
   16090:	strb	r4, [sp, #116]	; 0x74
   16094:	bl	114b0 <mbsinit@plt>
   16098:	cmp	r0, #0
   1609c:	strbne	r5, [sp, #92]	; 0x5c
   160a0:	b	15ec0 <close_stdout@@Base+0x694>
   160a4:	ldrb	r3, [sp, #36]	; 0x24
   160a8:	ldr	sl, [sp, #52]	; 0x34
   160ac:	cmp	r3, #0
   160b0:	bne	1611c <close_stdout@@Base+0x8f0>
   160b4:	ldr	r1, [pc, #1044]	; 164d0 <close_stdout@@Base+0xca4>
   160b8:	ldrb	r2, [sl]
   160bc:	ldr	r0, [r7, r1]
   160c0:	and	r1, r2, #31
   160c4:	lsr	r2, r2, #5
   160c8:	ldr	r2, [r0, r2, lsl #2]
   160cc:	lsr	r2, r2, r1
   160d0:	tst	r2, #1
   160d4:	beq	16108 <close_stdout@@Base+0x8dc>
   160d8:	str	r4, [sp, #56]	; 0x38
   160dc:	mov	fp, #1
   160e0:	ldrb	r3, [sl]
   160e4:	strb	r4, [sp, #60]	; 0x3c
   160e8:	str	r3, [sp, #64]	; 0x40
   160ec:	cmp	fp, #0
   160f0:	strb	r4, [sp, #48]	; 0x30
   160f4:	beq	1600c <close_stdout@@Base+0x7e0>
   160f8:	ldr	r3, [sp, #64]	; 0x40
   160fc:	cmp	r3, #0
   16100:	bne	1600c <close_stdout@@Base+0x7e0>
   16104:	b	15d70 <close_stdout@@Base+0x544>
   16108:	mov	r0, r6
   1610c:	bl	114b0 <mbsinit@plt>
   16110:	cmp	r0, #0
   16114:	beq	16484 <close_stdout@@Base+0xc58>
   16118:	strb	r4, [sp, #36]	; 0x24
   1611c:	bl	1154c <__ctype_get_mb_cur_max@plt>
   16120:	mov	r1, r0
   16124:	mov	r0, sl
   16128:	bl	1822c <close_stdout@@Base+0x2a00>
   1612c:	mov	r1, sl
   16130:	mov	r3, r6
   16134:	mov	r2, r0
   16138:	add	r0, sp, #64	; 0x40
   1613c:	bl	1157c <mbrtowc@plt>
   16140:	cmn	r0, #1
   16144:	str	r0, [sp, #56]	; 0x38
   16148:	strbeq	r5, [sp, #60]	; 0x3c
   1614c:	streq	r4, [sp, #56]	; 0x38
   16150:	beq	160ec <close_stdout@@Base+0x8c0>
   16154:	cmn	r0, #2
   16158:	beq	1620c <close_stdout@@Base+0x9e0>
   1615c:	cmp	r0, #0
   16160:	bne	16184 <close_stdout@@Base+0x958>
   16164:	ldr	r3, [sp, #52]	; 0x34
   16168:	str	r4, [sp, #56]	; 0x38
   1616c:	ldrb	r3, [r3]
   16170:	cmp	r3, #0
   16174:	bne	164a8 <close_stdout@@Base+0xc7c>
   16178:	ldr	r3, [sp, #64]	; 0x40
   1617c:	cmp	r3, #0
   16180:	bne	161d8 <close_stdout@@Base+0x9ac>
   16184:	mov	r0, r6
   16188:	strb	r4, [sp, #60]	; 0x3c
   1618c:	bl	114b0 <mbsinit@plt>
   16190:	mov	fp, #1
   16194:	cmp	r0, #0
   16198:	strbne	r5, [sp, #36]	; 0x24
   1619c:	b	160ec <close_stdout@@Base+0x8c0>
   161a0:	mov	r0, r9
   161a4:	bl	114b0 <mbsinit@plt>
   161a8:	cmp	r0, #0
   161ac:	beq	16484 <close_stdout@@Base+0xc58>
   161b0:	strb	r4, [sp, #92]	; 0x5c
   161b4:	b	16040 <close_stdout@@Base+0x814>
   161b8:	ldr	r3, [sp, #108]	; 0x6c
   161bc:	str	r4, [sp, #112]	; 0x70
   161c0:	ldrb	r3, [r3]
   161c4:	cmp	r3, #0
   161c8:	bne	164a8 <close_stdout@@Base+0xc7c>
   161cc:	ldr	fp, [sp, #120]	; 0x78
   161d0:	cmp	fp, #0
   161d4:	beq	1608c <close_stdout@@Base+0x860>
   161d8:	ldr	r0, [pc, #756]	; 164d4 <close_stdout@@Base+0xca8>
   161dc:	mov	r2, #179	; 0xb3
   161e0:	ldr	r1, [pc, #752]	; 164d8 <close_stdout@@Base+0xcac>
   161e4:	ldr	r3, [pc, #752]	; 164dc <close_stdout@@Base+0xcb0>
   161e8:	add	r0, pc, r0
   161ec:	add	r1, pc, r1
   161f0:	add	r3, pc, r3
   161f4:	bl	117bc <__assert_fail@plt>
   161f8:	str	r4, [sp, #56]	; 0x38
   161fc:	strb	r5, [sp, #60]	; 0x3c
   16200:	ldr	r9, [sp, #64]	; 0x40
   16204:	ldr	fp, [sp, #52]	; 0x34
   16208:	b	15e10 <close_stdout@@Base+0x5e4>
   1620c:	ldr	r0, [sp, #52]	; 0x34
   16210:	bl	1163c <strlen@plt>
   16214:	strb	r5, [sp, #60]	; 0x3c
   16218:	str	r0, [sp, #56]	; 0x38
   1621c:	b	160ec <close_stdout@@Base+0x8c0>
   16220:	ldr	r9, [sp, #64]	; 0x40
   16224:	b	15dec <close_stdout@@Base+0x5c0>
   16228:	ldr	fp, [sp, #52]	; 0x34
   1622c:	mov	r0, fp
   16230:	bl	1163c <strlen@plt>
   16234:	strb	r5, [sp, #60]	; 0x3c
   16238:	ldr	r9, [sp, #64]	; 0x40
   1623c:	str	r0, [sp, #56]	; 0x38
   16240:	b	15e10 <close_stdout@@Base+0x5e4>
   16244:	ldr	r3, [sp, #64]	; 0x40
   16248:	ldrb	ip, [sp, #60]	; 0x3c
   1624c:	b	15f2c <close_stdout@@Base+0x700>
   16250:	cmp	fp, r8
   16254:	movcs	fp, #1
   16258:	bcs	16278 <close_stdout@@Base+0xa4c>
   1625c:	bl	1160c <__ctype_b_loc@plt>
   16260:	ldrb	r3, [r8, #-1]
   16264:	lsl	r3, r3, #1
   16268:	ldr	r2, [r0]
   1626c:	ldrh	fp, [r2, r3]
   16270:	eor	fp, fp, #8
   16274:	ubfx	fp, fp, #3, #1
   16278:	ldr	r0, [sp, #20]
   1627c:	bl	1163c <strlen@plt>
   16280:	ldrb	r3, [r8, r0]
   16284:	cmp	r3, #0
   16288:	beq	162ac <close_stdout@@Base+0xa80>
   1628c:	str	r3, [sp, #8]
   16290:	bl	1160c <__ctype_b_loc@plt>
   16294:	ldr	r3, [sp, #8]
   16298:	lsl	r3, r3, #1
   1629c:	ldr	r2, [r0]
   162a0:	ldrh	r3, [r2, r3]
   162a4:	tst	r3, #8
   162a8:	bne	162b4 <close_stdout@@Base+0xa88>
   162ac:	cmp	fp, #0
   162b0:	bne	1647c <close_stdout@@Base+0xc50>
   162b4:	ldrb	r3, [r8]
   162b8:	cmp	r3, #0
   162bc:	beq	162d0 <close_stdout@@Base+0xaa4>
   162c0:	add	fp, r8, #1
   162c4:	ldrb	r3, [fp]
   162c8:	cmp	r3, #0
   162cc:	bne	15cdc <close_stdout@@Base+0x4b0>
   162d0:	mov	fp, #0
   162d4:	b	15fb8 <close_stdout@@Base+0x78c>
   162d8:	ldr	r0, [sp, #52]	; 0x34
   162dc:	bl	1163c <strlen@plt>
   162e0:	str	r0, [sp, #56]	; 0x38
   162e4:	ldr	fp, [sp, #56]	; 0x38
   162e8:	add	fp, r8, fp
   162ec:	b	15cd0 <close_stdout@@Base+0x4a4>
   162f0:	mov	r3, #1
   162f4:	str	r3, [sp, #24]
   162f8:	b	15e50 <close_stdout@@Base+0x624>
   162fc:	mov	r0, r6
   16300:	bl	114b0 <mbsinit@plt>
   16304:	cmp	r0, #0
   16308:	beq	16484 <close_stdout@@Base+0xc58>
   1630c:	strb	r4, [sp, #36]	; 0x24
   16310:	bl	1154c <__ctype_get_mb_cur_max@plt>
   16314:	mov	r1, r0
   16318:	mov	r0, r8
   1631c:	bl	1822c <close_stdout@@Base+0x2a00>
   16320:	mov	r1, r8
   16324:	mov	r3, r6
   16328:	mov	r2, r0
   1632c:	add	r0, sp, #64	; 0x40
   16330:	bl	1157c <mbrtowc@plt>
   16334:	cmn	r0, #1
   16338:	str	r0, [sp, #56]	; 0x38
   1633c:	streq	r4, [sp, #56]	; 0x38
   16340:	beq	162e4 <close_stdout@@Base+0xab8>
   16344:	cmn	r0, #2
   16348:	beq	162d8 <close_stdout@@Base+0xaac>
   1634c:	cmp	r0, #0
   16350:	beq	16400 <close_stdout@@Base+0xbd4>
   16354:	ldr	fp, [sp, #64]	; 0x40
   16358:	mov	r0, r6
   1635c:	strb	r4, [sp, #60]	; 0x3c
   16360:	bl	114b0 <mbsinit@plt>
   16364:	cmp	r0, #0
   16368:	strbne	r5, [sp, #36]	; 0x24
   1636c:	b	15fac <close_stdout@@Base+0x780>
   16370:	mov	r0, r6
   16374:	str	r3, [sp, #8]
   16378:	str	ip, [sp, #4]
   1637c:	bl	114b0 <mbsinit@plt>
   16380:	ldr	r3, [sp, #8]
   16384:	ldr	ip, [sp, #4]
   16388:	cmp	r0, #0
   1638c:	beq	16484 <close_stdout@@Base+0xc58>
   16390:	strb	r3, [sp, #36]	; 0x24
   16394:	str	ip, [sp, #4]
   16398:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1639c:	mov	r1, r0
   163a0:	mov	r0, sl
   163a4:	bl	1822c <close_stdout@@Base+0x2a00>
   163a8:	mov	r1, sl
   163ac:	mov	r3, r6
   163b0:	mov	r2, r0
   163b4:	add	r0, sp, #64	; 0x40
   163b8:	bl	1157c <mbrtowc@plt>
   163bc:	ldr	ip, [sp, #4]
   163c0:	cmn	r0, #1
   163c4:	str	r0, [sp, #56]	; 0x38
   163c8:	beq	1644c <close_stdout@@Base+0xc20>
   163cc:	cmn	r0, #2
   163d0:	beq	1645c <close_stdout@@Base+0xc30>
   163d4:	cmp	r0, #0
   163d8:	bne	16424 <close_stdout@@Base+0xbf8>
   163dc:	ldr	r3, [sp, #52]	; 0x34
   163e0:	str	r4, [sp, #56]	; 0x38
   163e4:	ldrb	r3, [r3]
   163e8:	cmp	r3, #0
   163ec:	bne	164a8 <close_stdout@@Base+0xc7c>
   163f0:	ldr	r3, [sp, #64]	; 0x40
   163f4:	cmp	r3, #0
   163f8:	beq	16428 <close_stdout@@Base+0xbfc>
   163fc:	b	161d8 <close_stdout@@Base+0x9ac>
   16400:	ldr	r3, [sp, #52]	; 0x34
   16404:	str	r4, [sp, #56]	; 0x38
   16408:	ldrb	r3, [r3]
   1640c:	cmp	r3, #0
   16410:	bne	164a8 <close_stdout@@Base+0xc7c>
   16414:	ldr	fp, [sp, #64]	; 0x40
   16418:	cmp	fp, #0
   1641c:	beq	16358 <close_stdout@@Base+0xb2c>
   16420:	b	161d8 <close_stdout@@Base+0x9ac>
   16424:	ldr	r3, [sp, #64]	; 0x40
   16428:	mov	r0, r6
   1642c:	str	r3, [sp, #8]
   16430:	strb	r4, [sp, #60]	; 0x3c
   16434:	bl	114b0 <mbsinit@plt>
   16438:	ldr	r3, [sp, #8]
   1643c:	mov	ip, #1
   16440:	cmp	r0, #0
   16444:	strbne	r5, [sp, #36]	; 0x24
   16448:	b	15f28 <close_stdout@@Base+0x6fc>
   1644c:	str	r4, [sp, #56]	; 0x38
   16450:	strb	r5, [sp, #60]	; 0x3c
   16454:	ldr	r3, [sp, #64]	; 0x40
   16458:	b	15f28 <close_stdout@@Base+0x6fc>
   1645c:	ldr	r0, [sp, #52]	; 0x34
   16460:	str	ip, [sp, #4]
   16464:	bl	1163c <strlen@plt>
   16468:	strb	r5, [sp, #60]	; 0x3c
   1646c:	ldr	r3, [sp, #64]	; 0x40
   16470:	ldr	ip, [sp, #4]
   16474:	str	r0, [sp, #56]	; 0x38
   16478:	b	15f28 <close_stdout@@Base+0x6fc>
   1647c:	mov	fp, #1
   16480:	b	15fb8 <close_stdout@@Base+0x78c>
   16484:	ldr	r0, [pc, #84]	; 164e0 <close_stdout@@Base+0xcb4>
   16488:	mov	r2, #150	; 0x96
   1648c:	ldr	r1, [pc, #80]	; 164e4 <close_stdout@@Base+0xcb8>
   16490:	ldr	r3, [pc, #80]	; 164e8 <close_stdout@@Base+0xcbc>
   16494:	add	r0, pc, r0
   16498:	add	r1, pc, r1
   1649c:	add	r3, pc, r3
   164a0:	bl	117bc <__assert_fail@plt>
   164a4:	bl	114e0 <__stack_chk_fail@plt>
   164a8:	ldr	r0, [pc, #60]	; 164ec <close_stdout@@Base+0xcc0>
   164ac:	mov	r2, #178	; 0xb2
   164b0:	ldr	r1, [pc, #56]	; 164f0 <close_stdout@@Base+0xcc4>
   164b4:	ldr	r3, [pc, #56]	; 164f4 <close_stdout@@Base+0xcc8>
   164b8:	add	r0, pc, r0
   164bc:	add	r1, pc, r1
   164c0:	add	r3, pc, r3
   164c4:	bl	117bc <__assert_fail@plt>
   164c8:	andeq	r8, r1, ip, ror #6
   164cc:	andeq	r0, r0, r8, asr r1
   164d0:	andeq	r0, r0, r4, asr r1
   164d4:	andeq	r6, r0, r0, asr ip
   164d8:	andeq	r6, r0, r4, lsr #24
   164dc:	strdeq	r6, [r0], -r4
   164e0:	andeq	r6, r0, r4, ror #18
   164e4:	andeq	r6, r0, r8, ror r9
   164e8:	andeq	r6, r0, r8, asr #18
   164ec:	andeq	r6, r0, r8, ror #18
   164f0:	andeq	r6, r0, r4, asr r9
   164f4:	andeq	r6, r0, r4, lsr #18
   164f8:	push	{r4, r5, r6, lr}
   164fc:	mov	r1, r0
   16500:	mov	r4, r0
   16504:	sub	sp, sp, #8
   16508:	mov	r2, #5
   1650c:	mov	r0, #0
   16510:	bl	114d4 <dcgettext@plt>
   16514:	cmp	r0, r4
   16518:	mov	r5, r0
   1651c:	moveq	r0, r0
   16520:	beq	16538 <close_stdout@@Base+0xd0c>
   16524:	mov	r1, r4
   16528:	bl	15c74 <close_stdout@@Base+0x448>
   1652c:	cmp	r0, #0
   16530:	mov	r0, r5
   16534:	beq	16540 <close_stdout@@Base+0xd14>
   16538:	add	sp, sp, #8
   1653c:	pop	{r4, r5, r6, pc}
   16540:	bl	1163c <strlen@plt>
   16544:	mov	r6, r0
   16548:	mov	r0, r4
   1654c:	bl	1163c <strlen@plt>
   16550:	add	r0, r6, r0
   16554:	add	r0, r0, #4
   16558:	bl	18dac <close_stdout@@Base+0x3580>
   1655c:	ldr	r3, [pc, #36]	; 16588 <close_stdout@@Base+0xd5c>
   16560:	str	r5, [sp]
   16564:	mov	r1, #1
   16568:	str	r4, [sp, #4]
   1656c:	mvn	r2, #0
   16570:	add	r3, pc, r3
   16574:	mov	r6, r0
   16578:	bl	11690 <__sprintf_chk@plt>
   1657c:	mov	r0, r6
   16580:	add	sp, sp, #8
   16584:	pop	{r4, r5, r6, pc}
   16588:	ldrdeq	r6, [r0], -ip
   1658c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16590:	mov	r6, r0
   16594:	sub	sp, sp, #12
   16598:	mov	r2, #5
   1659c:	mov	r4, r1
   165a0:	mov	r0, #0
   165a4:	mov	r1, r6
   165a8:	ldr	r7, [pc, #640]	; 16830 <close_stdout@@Base+0x1004>
   165ac:	bl	114d4 <dcgettext@plt>
   165b0:	add	r7, pc, r7
   165b4:	mov	r8, r0
   165b8:	bl	1987c <close_stdout@@Base+0x4050>
   165bc:	mov	r1, r7
   165c0:	mov	r9, r0
   165c4:	bl	1978c <close_stdout@@Base+0x3f60>
   165c8:	cmp	r0, #0
   165cc:	moveq	r5, r0
   165d0:	moveq	r9, r4
   165d4:	bne	16620 <close_stdout@@Base+0xdf4>
   165d8:	cmp	r4, #0
   165dc:	movne	sl, r4
   165e0:	movne	r7, #0
   165e4:	beq	166d8 <close_stdout@@Base+0xeac>
   165e8:	mov	r0, r8
   165ec:	mov	r1, r6
   165f0:	bl	11450 <strcmp@plt>
   165f4:	cmp	r0, #0
   165f8:	bne	166f0 <close_stdout@@Base+0xec4>
   165fc:	cmp	r5, r4
   16600:	cmpne	r5, #0
   16604:	bne	16780 <close_stdout@@Base+0xf54>
   16608:	cmp	r7, r4
   1660c:	cmpne	r7, #0
   16610:	moveq	r0, r4
   16614:	bne	1676c <close_stdout@@Base+0xf40>
   16618:	add	sp, sp, #12
   1661c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16620:	mov	r2, r9
   16624:	mov	r1, r7
   16628:	mov	r0, r4
   1662c:	bl	19080 <close_stdout@@Base+0x3854>
   16630:	mov	r5, r0
   16634:	mov	r0, r9
   16638:	bl	1163c <strlen@plt>
   1663c:	mov	fp, r0
   16640:	add	r0, r0, #11
   16644:	bl	18dac <close_stdout@@Base+0x3580>
   16648:	mov	r1, r9
   1664c:	mov	r2, fp
   16650:	mov	sl, r0
   16654:	bl	114a4 <memcpy@plt>
   16658:	ldr	r3, [pc, #468]	; 16834 <close_stdout@@Base+0x1008>
   1665c:	add	ip, sl, fp
   16660:	mov	r2, sl
   16664:	add	r3, pc, r3
   16668:	ldm	r3!, {r0, r1}
   1666c:	ldrh	lr, [r3]
   16670:	ldrb	r3, [r3, #2]
   16674:	str	r0, [sl, fp]
   16678:	mov	r0, r4
   1667c:	str	r1, [ip, #4]
   16680:	mov	r1, r7
   16684:	strh	lr, [ip, #8]
   16688:	strb	r3, [ip, #10]
   1668c:	bl	19080 <close_stdout@@Base+0x3854>
   16690:	mov	r9, r0
   16694:	mov	r0, sl
   16698:	bl	11480 <free@plt>
   1669c:	cmp	r9, #0
   166a0:	beq	16810 <close_stdout@@Base+0xfe4>
   166a4:	mov	r0, r9
   166a8:	mov	r1, #63	; 0x3f
   166ac:	bl	11648 <strchr@plt>
   166b0:	cmp	r0, #0
   166b4:	beq	167f8 <close_stdout@@Base+0xfcc>
   166b8:	mov	r0, r9
   166bc:	mov	r4, r5
   166c0:	bl	11480 <free@plt>
   166c4:	cmp	r4, #0
   166c8:	mov	r9, #0
   166cc:	movne	sl, r4
   166d0:	movne	r7, #0
   166d4:	bne	165e8 <close_stdout@@Base+0xdbc>
   166d8:	cmp	r9, #0
   166dc:	beq	16818 <close_stdout@@Base+0xfec>
   166e0:	mov	r7, r4
   166e4:	mov	sl, #0
   166e8:	mov	r4, r9
   166ec:	b	165e8 <close_stdout@@Base+0xdbc>
   166f0:	mov	r1, r6
   166f4:	mov	r0, r8
   166f8:	bl	15c74 <close_stdout@@Base+0x448>
   166fc:	cmp	r0, #0
   16700:	bne	1673c <close_stdout@@Base+0xf10>
   16704:	cmp	sl, #0
   16708:	beq	16720 <close_stdout@@Base+0xef4>
   1670c:	mov	r1, sl
   16710:	mov	r0, r8
   16714:	bl	15c74 <close_stdout@@Base+0x448>
   16718:	cmp	r0, #0
   1671c:	bne	1673c <close_stdout@@Base+0xf10>
   16720:	cmp	r9, #0
   16724:	beq	1678c <close_stdout@@Base+0xf60>
   16728:	mov	r1, r9
   1672c:	mov	r0, r8
   16730:	bl	15c74 <close_stdout@@Base+0x448>
   16734:	cmp	r0, #0
   16738:	beq	1678c <close_stdout@@Base+0xf60>
   1673c:	cmp	r5, #0
   16740:	beq	1674c <close_stdout@@Base+0xf20>
   16744:	mov	r0, r5
   16748:	bl	11480 <free@plt>
   1674c:	cmp	r7, #0
   16750:	moveq	r0, r8
   16754:	beq	16618 <close_stdout@@Base+0xdec>
   16758:	mov	r0, r7
   1675c:	bl	11480 <free@plt>
   16760:	mov	r0, r8
   16764:	add	sp, sp, #12
   16768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1676c:	mov	r0, r7
   16770:	bl	11480 <free@plt>
   16774:	mov	r0, r4
   16778:	add	sp, sp, #12
   1677c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16780:	mov	r0, r5
   16784:	bl	11480 <free@plt>
   16788:	b	16608 <close_stdout@@Base+0xddc>
   1678c:	mov	r0, r8
   16790:	bl	1163c <strlen@plt>
   16794:	mov	r6, r0
   16798:	mov	r0, r4
   1679c:	bl	1163c <strlen@plt>
   167a0:	add	r0, r6, r0
   167a4:	add	r0, r0, #4
   167a8:	bl	18dac <close_stdout@@Base+0x3580>
   167ac:	ldr	r3, [pc, #132]	; 16838 <close_stdout@@Base+0x100c>
   167b0:	str	r8, [sp]
   167b4:	mov	r1, #1
   167b8:	str	r4, [sp, #4]
   167bc:	mvn	r2, #0
   167c0:	add	r3, pc, r3
   167c4:	mov	r6, r0
   167c8:	bl	11690 <__sprintf_chk@plt>
   167cc:	cmp	r5, #0
   167d0:	beq	167dc <close_stdout@@Base+0xfb0>
   167d4:	mov	r0, r5
   167d8:	bl	11480 <free@plt>
   167dc:	cmp	r7, #0
   167e0:	moveq	r0, r6
   167e4:	beq	16618 <close_stdout@@Base+0xdec>
   167e8:	mov	r0, r7
   167ec:	bl	11480 <free@plt>
   167f0:	mov	r0, r6
   167f4:	b	16618 <close_stdout@@Base+0xdec>
   167f8:	cmp	r5, #0
   167fc:	beq	16828 <close_stdout@@Base+0xffc>
   16800:	mov	sl, r5
   16804:	mov	r7, r9
   16808:	mov	r4, r5
   1680c:	b	165e8 <close_stdout@@Base+0xdbc>
   16810:	mov	r4, r5
   16814:	b	165d8 <close_stdout@@Base+0xdac>
   16818:	mov	sl, r9
   1681c:	mov	r7, r9
   16820:	mov	r4, r6
   16824:	b	165e8 <close_stdout@@Base+0xdbc>
   16828:	mov	r4, r9
   1682c:	b	166e0 <close_stdout@@Base+0xeb4>
   16830:	andeq	r6, r0, r4, lsr #17
   16834:	strdeq	r6, [r0], -r8
   16838:	andeq	r6, r0, ip, lsl #13
   1683c:	push	{r3, lr}
   16840:	mov	r3, r0
   16844:	mov	r2, #0
   16848:	cmp	r1, #8
   1684c:	str	r2, [r3], #4
   16850:	add	r3, r3, #4
   16854:	str	r2, [r0, #4]
   16858:	str	r2, [r3], #4
   1685c:	str	r2, [r3], #4
   16860:	str	r2, [r3], #4
   16864:	str	r2, [r3], #4
   16868:	str	r2, [r3], #4
   1686c:	str	r2, [r3], #4
   16870:	str	r2, [r3], #4
   16874:	str	r2, [r3], #4
   16878:	str	r2, [r3], #4
   1687c:	str	r2, [r3]
   16880:	beq	1688c <close_stdout@@Base+0x1060>
   16884:	str	r1, [r0]
   16888:	pop	{r3, pc}
   1688c:	bl	117a4 <abort@plt>
   16890:	push	{r4, r5, r6, lr}
   16894:	mov	r4, r0
   16898:	mov	r6, r1
   1689c:	mov	r0, #0
   168a0:	mov	r1, r4
   168a4:	mov	r2, #5
   168a8:	bl	114d4 <dcgettext@plt>
   168ac:	cmp	r0, r4
   168b0:	mov	r5, r0
   168b4:	beq	168bc <close_stdout@@Base+0x1090>
   168b8:	pop	{r4, r5, r6, pc}
   168bc:	bl	1987c <close_stdout@@Base+0x4050>
   168c0:	ldrb	r3, [r0]
   168c4:	bic	r3, r3, #32
   168c8:	cmp	r3, #85	; 0x55
   168cc:	bne	16940 <close_stdout@@Base+0x1114>
   168d0:	ldrb	r3, [r0, #1]
   168d4:	bic	r3, r3, #32
   168d8:	cmp	r3, #84	; 0x54
   168dc:	bne	1692c <close_stdout@@Base+0x1100>
   168e0:	ldrb	r3, [r0, #2]
   168e4:	bic	r3, r3, #32
   168e8:	cmp	r3, #70	; 0x46
   168ec:	bne	1692c <close_stdout@@Base+0x1100>
   168f0:	ldrb	r3, [r0, #3]
   168f4:	cmp	r3, #45	; 0x2d
   168f8:	bne	1692c <close_stdout@@Base+0x1100>
   168fc:	ldrb	r3, [r0, #4]
   16900:	cmp	r3, #56	; 0x38
   16904:	bne	1692c <close_stdout@@Base+0x1100>
   16908:	ldrb	r3, [r0, #5]
   1690c:	cmp	r3, #0
   16910:	bne	1692c <close_stdout@@Base+0x1100>
   16914:	ldrb	r3, [r5]
   16918:	cmp	r3, #96	; 0x60
   1691c:	beq	169b8 <close_stdout@@Base+0x118c>
   16920:	ldr	r0, [pc, #180]	; 169dc <close_stdout@@Base+0x11b0>
   16924:	add	r0, pc, r0
   16928:	pop	{r4, r5, r6, pc}
   1692c:	cmp	r6, #7
   16930:	beq	169c4 <close_stdout@@Base+0x1198>
   16934:	ldr	r0, [pc, #164]	; 169e0 <close_stdout@@Base+0x11b4>
   16938:	add	r0, pc, r0
   1693c:	pop	{r4, r5, r6, pc}
   16940:	cmp	r3, #71	; 0x47
   16944:	bne	1692c <close_stdout@@Base+0x1100>
   16948:	ldrb	r3, [r0, #1]
   1694c:	bic	r3, r3, #32
   16950:	cmp	r3, #66	; 0x42
   16954:	bne	1692c <close_stdout@@Base+0x1100>
   16958:	ldrb	r3, [r0, #2]
   1695c:	cmp	r3, #49	; 0x31
   16960:	bne	1692c <close_stdout@@Base+0x1100>
   16964:	ldrb	r3, [r0, #3]
   16968:	cmp	r3, #56	; 0x38
   1696c:	bne	1692c <close_stdout@@Base+0x1100>
   16970:	ldrb	r3, [r0, #4]
   16974:	cmp	r3, #48	; 0x30
   16978:	bne	1692c <close_stdout@@Base+0x1100>
   1697c:	ldrb	r3, [r0, #5]
   16980:	cmp	r3, #51	; 0x33
   16984:	bne	1692c <close_stdout@@Base+0x1100>
   16988:	ldrb	r3, [r0, #6]
   1698c:	cmp	r3, #48	; 0x30
   16990:	bne	1692c <close_stdout@@Base+0x1100>
   16994:	ldrb	r3, [r0, #7]
   16998:	cmp	r3, #0
   1699c:	bne	1692c <close_stdout@@Base+0x1100>
   169a0:	ldrb	r3, [r5]
   169a4:	cmp	r3, #96	; 0x60
   169a8:	beq	169d0 <close_stdout@@Base+0x11a4>
   169ac:	ldr	r0, [pc, #48]	; 169e4 <close_stdout@@Base+0x11b8>
   169b0:	add	r0, pc, r0
   169b4:	pop	{r4, r5, r6, pc}
   169b8:	ldr	r0, [pc, #40]	; 169e8 <close_stdout@@Base+0x11bc>
   169bc:	add	r0, pc, r0
   169c0:	pop	{r4, r5, r6, pc}
   169c4:	ldr	r0, [pc, #32]	; 169ec <close_stdout@@Base+0x11c0>
   169c8:	add	r0, pc, r0
   169cc:	pop	{r4, r5, r6, pc}
   169d0:	ldr	r0, [pc, #24]	; 169f0 <close_stdout@@Base+0x11c4>
   169d4:	add	r0, pc, r0
   169d8:	pop	{r4, r5, r6, pc}
   169dc:	andeq	r6, r0, r4, ror #10
   169e0:	andeq	r6, r0, r8, asr r5
   169e4:	ldrdeq	r6, [r0], -ip
   169e8:	ldrdeq	r6, [r0], -ip
   169ec:	andeq	r6, r0, r8, asr #32
   169f0:	andeq	r6, r0, r0, asr #9
   169f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169f8:	sub	sp, sp, #124	; 0x7c
   169fc:	ldr	ip, [pc, #3304]	; 176ec <close_stdout@@Base+0x1ec0>
   16a00:	mov	sl, r1
   16a04:	str	r0, [sp, #40]	; 0x28
   16a08:	mov	r8, r3
   16a0c:	ldr	r0, [pc, #3292]	; 176f0 <close_stdout@@Base+0x1ec4>
   16a10:	add	ip, pc, ip
   16a14:	str	r2, [sp, #32]
   16a18:	ldr	r1, [sp, #164]	; 0xa4
   16a1c:	mov	r3, ip
   16a20:	ldr	r0, [ip, r0]
   16a24:	ldr	r2, [sp, #172]	; 0xac
   16a28:	ubfx	r1, r1, #1, #1
   16a2c:	str	r1, [sp, #36]	; 0x24
   16a30:	str	r0, [sp, #56]	; 0x38
   16a34:	ldr	r0, [sp, #168]	; 0xa8
   16a38:	ldr	r1, [sp, #176]	; 0xb0
   16a3c:	str	r2, [sp, #72]	; 0x48
   16a40:	str	r0, [sp, #48]	; 0x30
   16a44:	ldr	r0, [sp, #56]	; 0x38
   16a48:	str	r1, [sp, #68]	; 0x44
   16a4c:	ldr	r3, [r0]
   16a50:	str	r3, [sp, #116]	; 0x74
   16a54:	bl	1154c <__ctype_get_mb_cur_max@plt>
   16a58:	ldr	r2, [sp, #160]	; 0xa0
   16a5c:	str	r0, [sp, #64]	; 0x40
   16a60:	cmp	r2, #8
   16a64:	addls	pc, pc, r2, lsl #2
   16a68:	b	175c8 <close_stdout@@Base+0x1d9c>
   16a6c:	b	16a90 <close_stdout@@Base+0x1264>
   16a70:	b	172e0 <close_stdout@@Base+0x1ab4>
   16a74:	b	17310 <close_stdout@@Base+0x1ae4>
   16a78:	b	171c0 <close_stdout@@Base+0x1994>
   16a7c:	b	17200 <close_stdout@@Base+0x19d4>
   16a80:	b	1722c <close_stdout@@Base+0x1a00>
   16a84:	b	1724c <close_stdout@@Base+0x1a20>
   16a88:	b	1724c <close_stdout@@Base+0x1a20>
   16a8c:	b	1724c <close_stdout@@Base+0x1a20>
   16a90:	mov	r2, #0
   16a94:	str	r2, [sp, #36]	; 0x24
   16a98:	mov	r9, r2
   16a9c:	str	r2, [sp, #24]
   16aa0:	str	r2, [sp, #28]
   16aa4:	str	r2, [sp, #52]	; 0x34
   16aa8:	ldr	r0, [sp, #36]	; 0x24
   16aac:	mov	fp, #0
   16ab0:	ldr	r1, [sp, #24]
   16ab4:	eor	r2, r0, #1
   16ab8:	eor	r3, r1, #1
   16abc:	and	r3, r2, r3
   16ac0:	and	r2, r1, r0
   16ac4:	str	r3, [sp, #44]	; 0x2c
   16ac8:	str	r2, [sp, #76]	; 0x4c
   16acc:	cmn	r8, #1
   16ad0:	beq	16e50 <close_stdout@@Base+0x1624>
   16ad4:	subs	r3, fp, r8
   16ad8:	movne	r3, #1
   16adc:	cmp	r3, #0
   16ae0:	beq	16e68 <close_stdout@@Base+0x163c>
   16ae4:	ldr	r3, [sp, #28]
   16ae8:	ldr	r0, [sp, #24]
   16aec:	adds	r7, r3, #0
   16af0:	movne	r7, #1
   16af4:	ands	r6, r7, r0
   16af8:	bne	17354 <close_stdout@@Base+0x1b28>
   16afc:	ldr	r1, [sp, #32]
   16b00:	add	r5, r1, fp
   16b04:	ldrb	r4, [r5]
   16b08:	cmp	r4, #126	; 0x7e
   16b0c:	addls	pc, pc, r4, lsl #2
   16b10:	b	170d4 <close_stdout@@Base+0x18a8>
   16b14:	b	16fe0 <close_stdout@@Base+0x17b4>
   16b18:	b	170d4 <close_stdout@@Base+0x18a8>
   16b1c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b20:	b	170d4 <close_stdout@@Base+0x18a8>
   16b24:	b	170d4 <close_stdout@@Base+0x18a8>
   16b28:	b	170d4 <close_stdout@@Base+0x18a8>
   16b2c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b30:	b	16fc8 <close_stdout@@Base+0x179c>
   16b34:	b	16fb0 <close_stdout@@Base+0x1784>
   16b38:	b	16fd8 <close_stdout@@Base+0x17ac>
   16b3c:	b	16fd0 <close_stdout@@Base+0x17a4>
   16b40:	b	16fc0 <close_stdout@@Base+0x1794>
   16b44:	b	16fb8 <close_stdout@@Base+0x178c>
   16b48:	b	16f7c <close_stdout@@Base+0x1750>
   16b4c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b50:	b	170d4 <close_stdout@@Base+0x18a8>
   16b54:	b	170d4 <close_stdout@@Base+0x18a8>
   16b58:	b	170d4 <close_stdout@@Base+0x18a8>
   16b5c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b60:	b	170d4 <close_stdout@@Base+0x18a8>
   16b64:	b	170d4 <close_stdout@@Base+0x18a8>
   16b68:	b	170d4 <close_stdout@@Base+0x18a8>
   16b6c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b70:	b	170d4 <close_stdout@@Base+0x18a8>
   16b74:	b	170d4 <close_stdout@@Base+0x18a8>
   16b78:	b	170d4 <close_stdout@@Base+0x18a8>
   16b7c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b80:	b	170d4 <close_stdout@@Base+0x18a8>
   16b84:	b	170d4 <close_stdout@@Base+0x18a8>
   16b88:	b	170d4 <close_stdout@@Base+0x18a8>
   16b8c:	b	170d4 <close_stdout@@Base+0x18a8>
   16b90:	b	170d4 <close_stdout@@Base+0x18a8>
   16b94:	b	16f08 <close_stdout@@Base+0x16dc>
   16b98:	b	16f08 <close_stdout@@Base+0x16dc>
   16b9c:	b	16f08 <close_stdout@@Base+0x16dc>
   16ba0:	b	16f00 <close_stdout@@Base+0x16d4>
   16ba4:	b	16f08 <close_stdout@@Base+0x16dc>
   16ba8:	b	16ddc <close_stdout@@Base+0x15b0>
   16bac:	b	16f08 <close_stdout@@Base+0x16dc>
   16bb0:	b	1707c <close_stdout@@Base+0x1850>
   16bb4:	b	16f08 <close_stdout@@Base+0x16dc>
   16bb8:	b	16f08 <close_stdout@@Base+0x16dc>
   16bbc:	b	16f08 <close_stdout@@Base+0x16dc>
   16bc0:	b	16ddc <close_stdout@@Base+0x15b0>
   16bc4:	b	16ddc <close_stdout@@Base+0x15b0>
   16bc8:	b	16ddc <close_stdout@@Base+0x15b0>
   16bcc:	b	16ddc <close_stdout@@Base+0x15b0>
   16bd0:	b	16ddc <close_stdout@@Base+0x15b0>
   16bd4:	b	16ddc <close_stdout@@Base+0x15b0>
   16bd8:	b	16ddc <close_stdout@@Base+0x15b0>
   16bdc:	b	16ddc <close_stdout@@Base+0x15b0>
   16be0:	b	16ddc <close_stdout@@Base+0x15b0>
   16be4:	b	16ddc <close_stdout@@Base+0x15b0>
   16be8:	b	16ddc <close_stdout@@Base+0x15b0>
   16bec:	b	16ddc <close_stdout@@Base+0x15b0>
   16bf0:	b	16ddc <close_stdout@@Base+0x15b0>
   16bf4:	b	16ddc <close_stdout@@Base+0x15b0>
   16bf8:	b	16ddc <close_stdout@@Base+0x15b0>
   16bfc:	b	16ddc <close_stdout@@Base+0x15b0>
   16c00:	b	16f08 <close_stdout@@Base+0x16dc>
   16c04:	b	16f08 <close_stdout@@Base+0x16dc>
   16c08:	b	16f08 <close_stdout@@Base+0x16dc>
   16c0c:	b	16f08 <close_stdout@@Base+0x16dc>
   16c10:	b	16d10 <close_stdout@@Base+0x14e4>
   16c14:	b	170d4 <close_stdout@@Base+0x18a8>
   16c18:	b	16ddc <close_stdout@@Base+0x15b0>
   16c1c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c20:	b	16ddc <close_stdout@@Base+0x15b0>
   16c24:	b	16ddc <close_stdout@@Base+0x15b0>
   16c28:	b	16ddc <close_stdout@@Base+0x15b0>
   16c2c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c30:	b	16ddc <close_stdout@@Base+0x15b0>
   16c34:	b	16ddc <close_stdout@@Base+0x15b0>
   16c38:	b	16ddc <close_stdout@@Base+0x15b0>
   16c3c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c40:	b	16ddc <close_stdout@@Base+0x15b0>
   16c44:	b	16ddc <close_stdout@@Base+0x15b0>
   16c48:	b	16ddc <close_stdout@@Base+0x15b0>
   16c4c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c50:	b	16ddc <close_stdout@@Base+0x15b0>
   16c54:	b	16ddc <close_stdout@@Base+0x15b0>
   16c58:	b	16ddc <close_stdout@@Base+0x15b0>
   16c5c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c60:	b	16ddc <close_stdout@@Base+0x15b0>
   16c64:	b	16ddc <close_stdout@@Base+0x15b0>
   16c68:	b	16ddc <close_stdout@@Base+0x15b0>
   16c6c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c70:	b	16ddc <close_stdout@@Base+0x15b0>
   16c74:	b	16ddc <close_stdout@@Base+0x15b0>
   16c78:	b	16ddc <close_stdout@@Base+0x15b0>
   16c7c:	b	16ddc <close_stdout@@Base+0x15b0>
   16c80:	b	16f08 <close_stdout@@Base+0x16dc>
   16c84:	b	17060 <close_stdout@@Base+0x1834>
   16c88:	b	16ddc <close_stdout@@Base+0x15b0>
   16c8c:	b	16f08 <close_stdout@@Base+0x16dc>
   16c90:	b	16ddc <close_stdout@@Base+0x15b0>
   16c94:	b	16f08 <close_stdout@@Base+0x16dc>
   16c98:	b	16ddc <close_stdout@@Base+0x15b0>
   16c9c:	b	16ddc <close_stdout@@Base+0x15b0>
   16ca0:	b	16ddc <close_stdout@@Base+0x15b0>
   16ca4:	b	16ddc <close_stdout@@Base+0x15b0>
   16ca8:	b	16ddc <close_stdout@@Base+0x15b0>
   16cac:	b	16ddc <close_stdout@@Base+0x15b0>
   16cb0:	b	16ddc <close_stdout@@Base+0x15b0>
   16cb4:	b	16ddc <close_stdout@@Base+0x15b0>
   16cb8:	b	16ddc <close_stdout@@Base+0x15b0>
   16cbc:	b	16ddc <close_stdout@@Base+0x15b0>
   16cc0:	b	16ddc <close_stdout@@Base+0x15b0>
   16cc4:	b	16ddc <close_stdout@@Base+0x15b0>
   16cc8:	b	16ddc <close_stdout@@Base+0x15b0>
   16ccc:	b	16ddc <close_stdout@@Base+0x15b0>
   16cd0:	b	16ddc <close_stdout@@Base+0x15b0>
   16cd4:	b	16ddc <close_stdout@@Base+0x15b0>
   16cd8:	b	16ddc <close_stdout@@Base+0x15b0>
   16cdc:	b	16ddc <close_stdout@@Base+0x15b0>
   16ce0:	b	16ddc <close_stdout@@Base+0x15b0>
   16ce4:	b	16ddc <close_stdout@@Base+0x15b0>
   16ce8:	b	16ddc <close_stdout@@Base+0x15b0>
   16cec:	b	16ddc <close_stdout@@Base+0x15b0>
   16cf0:	b	16ddc <close_stdout@@Base+0x15b0>
   16cf4:	b	16ddc <close_stdout@@Base+0x15b0>
   16cf8:	b	16ddc <close_stdout@@Base+0x15b0>
   16cfc:	b	16ddc <close_stdout@@Base+0x15b0>
   16d00:	b	16ee8 <close_stdout@@Base+0x16bc>
   16d04:	b	16f08 <close_stdout@@Base+0x16dc>
   16d08:	b	16ee8 <close_stdout@@Base+0x16bc>
   16d0c:	b	16f00 <close_stdout@@Base+0x16d4>
   16d10:	ldr	r3, [sp, #160]	; 0xa0
   16d14:	cmp	r3, #2
   16d18:	beq	175a4 <close_stdout@@Base+0x1d78>
   16d1c:	cmp	r3, #3
   16d20:	bne	16ddc <close_stdout@@Base+0x15b0>
   16d24:	ldr	r1, [sp, #164]	; 0xa4
   16d28:	tst	r1, #4
   16d2c:	beq	16ddc <close_stdout@@Base+0x15b0>
   16d30:	add	r3, fp, #2
   16d34:	cmp	r8, r3
   16d38:	bls	16ddc <close_stdout@@Base+0x15b0>
   16d3c:	ldrb	r2, [r5, #1]
   16d40:	mov	r1, #1
   16d44:	cmp	r2, #63	; 0x3f
   16d48:	bne	16ddc <close_stdout@@Base+0x15b0>
   16d4c:	ldr	r0, [sp, #32]
   16d50:	ldrb	ip, [r0, r3]
   16d54:	sub	r0, ip, #33	; 0x21
   16d58:	uxtb	r0, r0
   16d5c:	cmp	r0, #29
   16d60:	bhi	16ddc <close_stdout@@Base+0x15b0>
   16d64:	lsl	r1, r1, r0
   16d68:	movw	r0, #20929	; 0x51c1
   16d6c:	movt	r0, #14336	; 0x3800
   16d70:	and	r0, r1, r0
   16d74:	cmp	r0, #0
   16d78:	beq	16ddc <close_stdout@@Base+0x15b0>
   16d7c:	ldr	r1, [sp, #36]	; 0x24
   16d80:	cmp	r1, #0
   16d84:	bne	16f24 <close_stdout@@Base+0x16f8>
   16d88:	cmp	r9, sl
   16d8c:	mov	r4, ip
   16d90:	mov	fp, r3
   16d94:	ldrcc	r0, [sp, #40]	; 0x28
   16d98:	strbcc	r2, [r0, r9]
   16d9c:	add	r2, r9, #1
   16da0:	cmp	sl, r2
   16da4:	ldrhi	r0, [sp, #40]	; 0x28
   16da8:	movhi	r1, #34	; 0x22
   16dac:	strbhi	r1, [r0, r2]
   16db0:	add	r2, r9, #2
   16db4:	cmp	sl, r2
   16db8:	ldrhi	r0, [sp, #40]	; 0x28
   16dbc:	movhi	r1, #34	; 0x22
   16dc0:	strbhi	r1, [r0, r2]
   16dc4:	add	r2, r9, #3
   16dc8:	cmp	sl, r2
   16dcc:	add	r9, r9, #4
   16dd0:	ldrhi	r0, [sp, #40]	; 0x28
   16dd4:	movhi	r1, #63	; 0x3f
   16dd8:	strbhi	r1, [r0, r2]
   16ddc:	ldr	r0, [sp, #44]	; 0x2c
   16de0:	cmp	r0, #0
   16de4:	bne	16e0c <close_stdout@@Base+0x15e0>
   16de8:	ldr	r1, [sp, #48]	; 0x30
   16dec:	cmp	r1, #0
   16df0:	beq	16e0c <close_stdout@@Base+0x15e0>
   16df4:	ubfx	r2, r4, #5, #8
   16df8:	and	r3, r4, #31
   16dfc:	ldr	r2, [r1, r2, lsl #2]
   16e00:	lsr	r3, r2, r3
   16e04:	tst	r3, #1
   16e08:	bne	16e14 <close_stdout@@Base+0x15e8>
   16e0c:	cmp	r6, #0
   16e10:	beq	16e34 <close_stdout@@Base+0x1608>
   16e14:	ldr	r2, [sp, #36]	; 0x24
   16e18:	cmp	r2, #0
   16e1c:	bne	16f24 <close_stdout@@Base+0x16f8>
   16e20:	cmp	r9, sl
   16e24:	ldrcc	r0, [sp, #40]	; 0x28
   16e28:	movcc	r3, #92	; 0x5c
   16e2c:	strbcc	r3, [r0, r9]
   16e30:	add	r9, r9, #1
   16e34:	add	fp, fp, #1
   16e38:	cmp	r9, sl
   16e3c:	ldrcc	r1, [sp, #40]	; 0x28
   16e40:	strbcc	r4, [r1, r9]
   16e44:	cmn	r8, #1
   16e48:	add	r9, r9, #1
   16e4c:	bne	16ad4 <close_stdout@@Base+0x12a8>
   16e50:	ldr	r2, [sp, #32]
   16e54:	ldrb	r3, [r2, fp]
   16e58:	adds	r3, r3, #0
   16e5c:	movne	r3, #1
   16e60:	cmp	r3, #0
   16e64:	bne	16ae4 <close_stdout@@Base+0x12b8>
   16e68:	ldr	r3, [sp, #160]	; 0xa0
   16e6c:	cmp	r9, #0
   16e70:	cmpeq	r3, #2
   16e74:	bne	16e84 <close_stdout@@Base+0x1658>
   16e78:	ldr	r0, [sp, #36]	; 0x24
   16e7c:	cmp	r0, #0
   16e80:	bne	16f24 <close_stdout@@Base+0x16f8>
   16e84:	ldr	r1, [sp, #36]	; 0x24
   16e88:	ldr	r2, [sp, #52]	; 0x34
   16e8c:	eor	r3, r1, #1
   16e90:	cmp	r2, #0
   16e94:	moveq	r3, #0
   16e98:	andne	r3, r3, #1
   16e9c:	cmp	r3, #0
   16ea0:	beq	16ecc <close_stdout@@Base+0x16a0>
   16ea4:	ldrb	r3, [r2]
   16ea8:	cmp	r3, #0
   16eac:	beq	16ecc <close_stdout@@Base+0x16a0>
   16eb0:	ldr	r1, [sp, #40]	; 0x28
   16eb4:	cmp	sl, r9
   16eb8:	strbhi	r3, [r1, r9]
   16ebc:	ldrb	r3, [r2, #1]!
   16ec0:	add	r9, r9, #1
   16ec4:	cmp	r3, #0
   16ec8:	bne	16eb4 <close_stdout@@Base+0x1688>
   16ecc:	cmp	r9, sl
   16ed0:	movcs	r0, r9
   16ed4:	ldrcc	r1, [sp, #40]	; 0x28
   16ed8:	movcc	r3, #0
   16edc:	movcc	r0, r9
   16ee0:	strbcc	r3, [r1, r9]
   16ee4:	b	16f60 <close_stdout@@Base+0x1734>
   16ee8:	cmn	r8, #1
   16eec:	beq	175b4 <close_stdout@@Base+0x1d88>
   16ef0:	subs	r3, r8, #1
   16ef4:	movne	r3, #1
   16ef8:	cmp	r3, #0
   16efc:	bne	16ddc <close_stdout@@Base+0x15b0>
   16f00:	cmp	fp, #0
   16f04:	bne	16ddc <close_stdout@@Base+0x15b0>
   16f08:	ldr	r3, [sp, #36]	; 0x24
   16f0c:	ldr	r0, [sp, #160]	; 0xa0
   16f10:	cmp	r0, #2
   16f14:	movne	r3, #0
   16f18:	andeq	r3, r3, #1
   16f1c:	cmp	r3, #0
   16f20:	beq	16ddc <close_stdout@@Base+0x15b0>
   16f24:	ldr	r2, [sp, #164]	; 0xa4
   16f28:	mov	ip, #0
   16f2c:	ldr	r0, [sp, #160]	; 0xa0
   16f30:	bic	r3, r2, #2
   16f34:	ldr	r1, [sp, #72]	; 0x48
   16f38:	ldr	r2, [sp, #68]	; 0x44
   16f3c:	stm	sp, {r0, r3}
   16f40:	mov	r3, r8
   16f44:	str	r1, [sp, #12]
   16f48:	mov	r1, sl
   16f4c:	str	r2, [sp, #16]
   16f50:	ldr	r0, [sp, #40]	; 0x28
   16f54:	ldr	r2, [sp, #32]
   16f58:	str	ip, [sp, #8]
   16f5c:	bl	169f4 <close_stdout@@Base+0x11c8>
   16f60:	ldr	r1, [sp, #56]	; 0x38
   16f64:	ldr	r2, [sp, #116]	; 0x74
   16f68:	ldr	r3, [r1]
   16f6c:	cmp	r2, r3
   16f70:	bne	176a4 <close_stdout@@Base+0x1e78>
   16f74:	add	sp, sp, #124	; 0x7c
   16f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f7c:	mov	r3, #114	; 0x72
   16f80:	ldr	r2, [sp, #36]	; 0x24
   16f84:	ldr	r0, [sp, #160]	; 0xa0
   16f88:	cmp	r0, #2
   16f8c:	movne	r2, #0
   16f90:	andeq	r2, r2, #1
   16f94:	cmp	r2, #0
   16f98:	bne	16f24 <close_stdout@@Base+0x16f8>
   16f9c:	ldr	r1, [sp, #24]
   16fa0:	cmp	r1, #0
   16fa4:	beq	16ddc <close_stdout@@Base+0x15b0>
   16fa8:	mov	r4, r3
   16fac:	b	16e14 <close_stdout@@Base+0x15e8>
   16fb0:	mov	r3, #98	; 0x62
   16fb4:	b	16f9c <close_stdout@@Base+0x1770>
   16fb8:	mov	r3, #102	; 0x66
   16fbc:	b	16f9c <close_stdout@@Base+0x1770>
   16fc0:	mov	r3, #118	; 0x76
   16fc4:	b	16f9c <close_stdout@@Base+0x1770>
   16fc8:	mov	r3, #97	; 0x61
   16fcc:	b	16f9c <close_stdout@@Base+0x1770>
   16fd0:	mov	r3, #110	; 0x6e
   16fd4:	b	16f80 <close_stdout@@Base+0x1754>
   16fd8:	mov	r3, #116	; 0x74
   16fdc:	b	16f80 <close_stdout@@Base+0x1754>
   16fe0:	ldr	r2, [sp, #24]
   16fe4:	cmp	r2, #0
   16fe8:	beq	17590 <close_stdout@@Base+0x1d64>
   16fec:	ldr	r3, [sp, #36]	; 0x24
   16ff0:	cmp	r3, #0
   16ff4:	bne	16f24 <close_stdout@@Base+0x16f8>
   16ff8:	cmp	r9, sl
   16ffc:	add	r2, r9, #1
   17000:	ldrcc	r0, [sp, #40]	; 0x28
   17004:	movcc	r3, #92	; 0x5c
   17008:	strbcc	r3, [r0, r9]
   1700c:	add	r3, fp, #1
   17010:	cmp	r8, r3
   17014:	bls	17054 <close_stdout@@Base+0x1828>
   17018:	ldr	r1, [sp, #32]
   1701c:	ldrb	r3, [r1, r3]
   17020:	sub	r3, r3, #48	; 0x30
   17024:	cmp	r3, #9
   17028:	bhi	17054 <close_stdout@@Base+0x1828>
   1702c:	cmp	sl, r2
   17030:	ldrhi	r0, [sp, #40]	; 0x28
   17034:	movhi	r3, #48	; 0x30
   17038:	strbhi	r3, [r0, r2]
   1703c:	add	r3, r9, #2
   17040:	cmp	sl, r3
   17044:	ldrhi	r1, [sp, #40]	; 0x28
   17048:	movhi	r2, #48	; 0x30
   1704c:	strbhi	r2, [r1, r3]
   17050:	add	r2, r9, #3
   17054:	mov	r9, r2
   17058:	mov	r4, #48	; 0x30
   1705c:	b	16de8 <close_stdout@@Base+0x15bc>
   17060:	ldr	r1, [sp, #76]	; 0x4c
   17064:	cmp	r1, #0
   17068:	beq	17074 <close_stdout@@Base+0x1848>
   1706c:	cmp	r7, #0
   17070:	bne	16e34 <close_stdout@@Base+0x1608>
   17074:	mov	r3, r4
   17078:	b	16f80 <close_stdout@@Base+0x1754>
   1707c:	ldr	r1, [sp, #160]	; 0xa0
   17080:	cmp	r1, #2
   17084:	bne	16ddc <close_stdout@@Base+0x15b0>
   17088:	ldr	r2, [sp, #36]	; 0x24
   1708c:	cmp	r2, #0
   17090:	bne	16f24 <close_stdout@@Base+0x16f8>
   17094:	cmp	r9, sl
   17098:	ldrcc	r0, [sp, #40]	; 0x28
   1709c:	movcc	r3, #39	; 0x27
   170a0:	strbcc	r3, [r0, r9]
   170a4:	add	r3, r9, #1
   170a8:	cmp	sl, r3
   170ac:	ldrhi	r1, [sp, #40]	; 0x28
   170b0:	movhi	r2, #92	; 0x5c
   170b4:	strbhi	r2, [r1, r3]
   170b8:	add	r3, r9, #2
   170bc:	cmp	sl, r3
   170c0:	add	r9, r9, #3
   170c4:	ldrhi	r0, [sp, #40]	; 0x28
   170c8:	movhi	r2, #39	; 0x27
   170cc:	strbhi	r2, [r0, r3]
   170d0:	b	16ddc <close_stdout@@Base+0x15b0>
   170d4:	ldr	r1, [sp, #64]	; 0x40
   170d8:	cmp	r1, #1
   170dc:	bne	173d4 <close_stdout@@Base+0x1ba8>
   170e0:	bl	1160c <__ctype_b_loc@plt>
   170e4:	ldr	r2, [sp, #64]	; 0x40
   170e8:	sxth	r3, r4
   170ec:	str	r2, [sp, #60]	; 0x3c
   170f0:	lsl	r3, r3, #1
   170f4:	ldr	r2, [r0]
   170f8:	ldrh	r2, [r2, r3]
   170fc:	eor	r2, r2, #16384	; 0x4000
   17100:	ubfx	r2, r2, #14, #1
   17104:	ldr	r1, [sp, #24]
   17108:	ands	r2, r2, r1
   1710c:	beq	16ddc <close_stdout@@Base+0x15b0>
   17110:	ldr	r3, [sp, #60]	; 0x3c
   17114:	mov	r0, #92	; 0x5c
   17118:	ldr	r7, [sp, #36]	; 0x24
   1711c:	add	r1, r3, fp
   17120:	str	r8, [sp, #60]	; 0x3c
   17124:	ldr	r3, [sp, #40]	; 0x28
   17128:	b	1718c <close_stdout@@Base+0x1960>
   1712c:	cmp	r7, #0
   17130:	bne	175cc <close_stdout@@Base+0x1da0>
   17134:	add	ip, r9, #1
   17138:	cmp	r9, sl
   1713c:	strbcc	r0, [r3, r9]
   17140:	cmp	sl, ip
   17144:	lsrhi	r8, r4, #6
   17148:	addhi	r8, r8, #48	; 0x30
   1714c:	strbhi	r8, [r3, ip]
   17150:	add	ip, r9, #2
   17154:	add	r9, r9, #3
   17158:	cmp	sl, ip
   1715c:	ubfxhi	r8, r4, #3, #3
   17160:	and	r4, r4, #7
   17164:	add	r4, r4, #48	; 0x30
   17168:	addhi	r8, r8, #48	; 0x30
   1716c:	strbhi	r8, [r3, ip]
   17170:	add	fp, fp, #1
   17174:	cmp	r1, fp
   17178:	bls	171b8 <close_stdout@@Base+0x198c>
   1717c:	cmp	r9, sl
   17180:	strbcc	r4, [r3, r9]
   17184:	ldrb	r4, [r5, #1]!
   17188:	add	r9, r9, #1
   1718c:	cmp	r2, #0
   17190:	bne	1712c <close_stdout@@Base+0x1900>
   17194:	cmp	r6, #0
   17198:	beq	17170 <close_stdout@@Base+0x1944>
   1719c:	add	fp, fp, #1
   171a0:	cmp	r9, sl
   171a4:	strbcc	r0, [r3, r9]
   171a8:	cmp	r1, fp
   171ac:	add	r9, r9, #1
   171b0:	mov	r6, #0
   171b4:	bhi	1717c <close_stdout@@Base+0x1950>
   171b8:	ldr	r8, [sp, #60]	; 0x3c
   171bc:	b	16e38 <close_stdout@@Base+0x160c>
   171c0:	ldr	r3, [sp, #36]	; 0x24
   171c4:	cmp	r3, #0
   171c8:	bne	176cc <close_stdout@@Base+0x1ea0>
   171cc:	cmp	sl, #0
   171d0:	beq	175e4 <close_stdout@@Base+0x1db8>
   171d4:	ldr	r1, [sp, #40]	; 0x28
   171d8:	mov	r0, #1
   171dc:	ldr	r2, [pc, #1296]	; 176f4 <close_stdout@@Base+0x1ec8>
   171e0:	mov	r3, #34	; 0x22
   171e4:	str	r0, [sp, #24]
   171e8:	mov	r9, r0
   171ec:	add	r2, pc, r2
   171f0:	str	r0, [sp, #28]
   171f4:	strb	r3, [r1]
   171f8:	str	r2, [sp, #52]	; 0x34
   171fc:	b	16aa8 <close_stdout@@Base+0x127c>
   17200:	ldr	r3, [pc, #1264]	; 176f8 <close_stdout@@Base+0x1ecc>
   17204:	mov	r2, #1
   17208:	mov	r0, #3
   1720c:	str	r2, [sp, #36]	; 0x24
   17210:	add	r3, pc, r3
   17214:	str	r2, [sp, #24]
   17218:	str	r3, [sp, #52]	; 0x34
   1721c:	mov	r9, #0
   17220:	str	r2, [sp, #28]
   17224:	str	r0, [sp, #160]	; 0xa0
   17228:	b	16aa8 <close_stdout@@Base+0x127c>
   1722c:	mov	r0, #0
   17230:	mov	r1, #1
   17234:	str	r0, [sp, #36]	; 0x24
   17238:	mov	r9, r0
   1723c:	str	r1, [sp, #24]
   17240:	str	r0, [sp, #28]
   17244:	str	r0, [sp, #52]	; 0x34
   17248:	b	16aa8 <close_stdout@@Base+0x127c>
   1724c:	ldr	r3, [sp, #160]	; 0xa0
   17250:	cmp	r3, #8
   17254:	beq	17280 <close_stdout@@Base+0x1a54>
   17258:	ldr	r0, [pc, #1180]	; 176fc <close_stdout@@Base+0x1ed0>
   1725c:	mov	r1, r3
   17260:	add	r0, pc, r0
   17264:	bl	16890 <close_stdout@@Base+0x1064>
   17268:	ldr	r1, [sp, #160]	; 0xa0
   1726c:	str	r0, [sp, #72]	; 0x48
   17270:	ldr	r0, [pc, #1160]	; 17700 <close_stdout@@Base+0x1ed4>
   17274:	add	r0, pc, r0
   17278:	bl	16890 <close_stdout@@Base+0x1064>
   1727c:	str	r0, [sp, #68]	; 0x44
   17280:	ldr	r0, [sp, #36]	; 0x24
   17284:	cmp	r0, #0
   17288:	movne	r9, #0
   1728c:	bne	172c4 <close_stdout@@Base+0x1a98>
   17290:	ldr	r1, [sp, #72]	; 0x48
   17294:	ldrb	r3, [r1]
   17298:	cmp	r3, #0
   1729c:	beq	1769c <close_stdout@@Base+0x1e70>
   172a0:	mov	r2, r1
   172a4:	ldr	r1, [sp, #40]	; 0x28
   172a8:	mov	r9, r0
   172ac:	cmp	r9, sl
   172b0:	strbcc	r3, [r1, r9]
   172b4:	ldrb	r3, [r2, #1]!
   172b8:	add	r9, r9, #1
   172bc:	cmp	r3, #0
   172c0:	bne	172ac <close_stdout@@Base+0x1a80>
   172c4:	ldr	r0, [sp, #68]	; 0x44
   172c8:	str	r0, [sp, #52]	; 0x34
   172cc:	bl	1163c <strlen@plt>
   172d0:	mov	r2, #1
   172d4:	str	r2, [sp, #24]
   172d8:	str	r0, [sp, #28]
   172dc:	b	16aa8 <close_stdout@@Base+0x127c>
   172e0:	ldr	r3, [pc, #1052]	; 17704 <close_stdout@@Base+0x1ed8>
   172e4:	mov	r2, #0
   172e8:	mov	r1, #1
   172ec:	mov	r0, #2
   172f0:	add	r3, pc, r3
   172f4:	str	r1, [sp, #36]	; 0x24
   172f8:	str	r2, [sp, #24]
   172fc:	mov	r9, r2
   17300:	str	r1, [sp, #28]
   17304:	str	r3, [sp, #52]	; 0x34
   17308:	str	r0, [sp, #160]	; 0xa0
   1730c:	b	16aa8 <close_stdout@@Base+0x127c>
   17310:	ldr	r3, [sp, #36]	; 0x24
   17314:	cmp	r3, #0
   17318:	bne	176a8 <close_stdout@@Base+0x1e7c>
   1731c:	cmp	sl, #0
   17320:	beq	17604 <close_stdout@@Base+0x1dd8>
   17324:	ldr	r1, [sp, #40]	; 0x28
   17328:	mov	r3, #39	; 0x27
   1732c:	ldr	r2, [sp, #36]	; 0x24
   17330:	mov	r0, #1
   17334:	mov	r9, r0
   17338:	str	r0, [sp, #28]
   1733c:	strb	r3, [r1]
   17340:	ldr	r3, [pc, #960]	; 17708 <close_stdout@@Base+0x1edc>
   17344:	str	r2, [sp, #24]
   17348:	add	r3, pc, r3
   1734c:	str	r3, [sp, #52]	; 0x34
   17350:	b	16aa8 <close_stdout@@Base+0x127c>
   17354:	ldr	r2, [sp, #28]
   17358:	cmp	r2, #1
   1735c:	add	r4, fp, r2
   17360:	movls	r3, #0
   17364:	movhi	r3, #1
   17368:	cmn	r8, #1
   1736c:	movne	r3, #0
   17370:	cmp	r3, #0
   17374:	beq	17384 <close_stdout@@Base+0x1b58>
   17378:	ldr	r0, [sp, #32]
   1737c:	bl	1163c <strlen@plt>
   17380:	mov	r8, r0
   17384:	cmp	r8, r4
   17388:	ldrcc	r3, [sp, #32]
   1738c:	movcc	r6, #0
   17390:	addcc	r5, r3, fp
   17394:	bcc	16b04 <close_stdout@@Base+0x12d8>
   17398:	ldr	r0, [sp, #32]
   1739c:	ldr	r1, [sp, #52]	; 0x34
   173a0:	add	r5, r0, fp
   173a4:	ldr	r2, [sp, #28]
   173a8:	mov	r0, r5
   173ac:	bl	114c8 <memcmp@plt>
   173b0:	cmp	r0, #0
   173b4:	bne	173cc <close_stdout@@Base+0x1ba0>
   173b8:	ldr	r1, [sp, #36]	; 0x24
   173bc:	cmp	r1, #0
   173c0:	bne	16f24 <close_stdout@@Base+0x16f8>
   173c4:	mov	r6, #1
   173c8:	b	16b04 <close_stdout@@Base+0x12d8>
   173cc:	mov	r6, #0
   173d0:	b	16b04 <close_stdout@@Base+0x12d8>
   173d4:	add	r7, sp, #108	; 0x6c
   173d8:	cmn	r8, #1
   173dc:	mov	r3, #0
   173e0:	str	r3, [sp, #108]	; 0x6c
   173e4:	str	r3, [r7, #4]
   173e8:	beq	175d4 <close_stdout@@Base+0x1da8>
   173ec:	mov	r1, #0
   173f0:	ldr	r0, [sp, #32]
   173f4:	mov	ip, #1
   173f8:	str	r9, [sp, #88]	; 0x58
   173fc:	str	r6, [sp, #96]	; 0x60
   17400:	mov	r9, r1
   17404:	str	r5, [sp, #100]	; 0x64
   17408:	mov	r6, ip
   1740c:	mov	r5, r7
   17410:	add	r3, sp, #104	; 0x68
   17414:	sub	r0, r0, #1
   17418:	str	r3, [sp, #80]	; 0x50
   1741c:	str	r0, [sp, #84]	; 0x54
   17420:	str	r1, [sp, #60]	; 0x3c
   17424:	str	r4, [sp, #92]	; 0x5c
   17428:	ldr	r2, [sp, #32]
   1742c:	add	r7, r9, fp
   17430:	add	r0, sp, #104	; 0x68
   17434:	mov	r3, r5
   17438:	add	r4, r2, r7
   1743c:	rsb	r2, r7, r8
   17440:	mov	r1, r4
   17444:	bl	1157c <mbrtowc@plt>
   17448:	subs	r2, r0, #0
   1744c:	beq	17558 <close_stdout@@Base+0x1d2c>
   17450:	cmn	r2, #1
   17454:	beq	17680 <close_stdout@@Base+0x1e54>
   17458:	cmn	r2, #2
   1745c:	beq	17624 <close_stdout@@Base+0x1df8>
   17460:	ldr	r3, [sp, #36]	; 0x24
   17464:	ldr	r0, [sp, #160]	; 0xa0
   17468:	cmp	r0, #2
   1746c:	movne	r3, #0
   17470:	andeq	r3, r3, #1
   17474:	cmp	r3, #0
   17478:	beq	17534 <close_stdout@@Base+0x1d08>
   1747c:	cmp	r2, #1
   17480:	beq	17534 <close_stdout@@Base+0x1d08>
   17484:	ldr	r1, [sp, #84]	; 0x54
   17488:	add	r3, r1, r2
   1748c:	add	r7, r3, r7
   17490:	ldrb	r3, [r4, #1]!
   17494:	sub	r3, r3, #91	; 0x5b
   17498:	cmp	r3, #33	; 0x21
   1749c:	addls	pc, pc, r3, lsl #2
   174a0:	b	1752c <close_stdout@@Base+0x1d00>
   174a4:	b	16f24 <close_stdout@@Base+0x16f8>
   174a8:	b	16f24 <close_stdout@@Base+0x16f8>
   174ac:	b	1752c <close_stdout@@Base+0x1d00>
   174b0:	b	16f24 <close_stdout@@Base+0x16f8>
   174b4:	b	1752c <close_stdout@@Base+0x1d00>
   174b8:	b	16f24 <close_stdout@@Base+0x16f8>
   174bc:	b	1752c <close_stdout@@Base+0x1d00>
   174c0:	b	1752c <close_stdout@@Base+0x1d00>
   174c4:	b	1752c <close_stdout@@Base+0x1d00>
   174c8:	b	1752c <close_stdout@@Base+0x1d00>
   174cc:	b	1752c <close_stdout@@Base+0x1d00>
   174d0:	b	1752c <close_stdout@@Base+0x1d00>
   174d4:	b	1752c <close_stdout@@Base+0x1d00>
   174d8:	b	1752c <close_stdout@@Base+0x1d00>
   174dc:	b	1752c <close_stdout@@Base+0x1d00>
   174e0:	b	1752c <close_stdout@@Base+0x1d00>
   174e4:	b	1752c <close_stdout@@Base+0x1d00>
   174e8:	b	1752c <close_stdout@@Base+0x1d00>
   174ec:	b	1752c <close_stdout@@Base+0x1d00>
   174f0:	b	1752c <close_stdout@@Base+0x1d00>
   174f4:	b	1752c <close_stdout@@Base+0x1d00>
   174f8:	b	1752c <close_stdout@@Base+0x1d00>
   174fc:	b	1752c <close_stdout@@Base+0x1d00>
   17500:	b	1752c <close_stdout@@Base+0x1d00>
   17504:	b	1752c <close_stdout@@Base+0x1d00>
   17508:	b	1752c <close_stdout@@Base+0x1d00>
   1750c:	b	1752c <close_stdout@@Base+0x1d00>
   17510:	b	1752c <close_stdout@@Base+0x1d00>
   17514:	b	1752c <close_stdout@@Base+0x1d00>
   17518:	b	1752c <close_stdout@@Base+0x1d00>
   1751c:	b	1752c <close_stdout@@Base+0x1d00>
   17520:	b	1752c <close_stdout@@Base+0x1d00>
   17524:	b	1752c <close_stdout@@Base+0x1d00>
   17528:	b	16f24 <close_stdout@@Base+0x16f8>
   1752c:	cmp	r4, r7
   17530:	bne	17490 <close_stdout@@Base+0x1c64>
   17534:	ldr	r0, [sp, #104]	; 0x68
   17538:	add	r9, r9, r2
   1753c:	bl	1151c <iswprint@plt>
   17540:	cmp	r0, #0
   17544:	mov	r0, r5
   17548:	moveq	r6, #0
   1754c:	bl	114b0 <mbsinit@plt>
   17550:	cmp	r0, #0
   17554:	beq	17428 <close_stdout@@Base+0x1bfc>
   17558:	mov	ip, r6
   1755c:	eor	r2, ip, #1
   17560:	str	r9, [sp, #60]	; 0x3c
   17564:	ldr	r4, [sp, #92]	; 0x5c
   17568:	uxtb	r2, r2
   1756c:	ldr	r9, [sp, #88]	; 0x58
   17570:	ldr	r6, [sp, #96]	; 0x60
   17574:	ldr	r5, [sp, #100]	; 0x64
   17578:	ldr	r3, [sp, #60]	; 0x3c
   1757c:	cmp	r3, #1
   17580:	bls	17104 <close_stdout@@Base+0x18d8>
   17584:	ldr	r0, [sp, #24]
   17588:	and	r2, r2, r0
   1758c:	b	17110 <close_stdout@@Base+0x18e4>
   17590:	ldr	r2, [sp, #164]	; 0xa4
   17594:	tst	r2, #1
   17598:	addne	fp, fp, #1
   1759c:	bne	16acc <close_stdout@@Base+0x12a0>
   175a0:	b	16ddc <close_stdout@@Base+0x15b0>
   175a4:	ldr	r0, [sp, #36]	; 0x24
   175a8:	cmp	r0, #0
   175ac:	beq	16ddc <close_stdout@@Base+0x15b0>
   175b0:	b	16f24 <close_stdout@@Base+0x16f8>
   175b4:	ldr	r2, [sp, #32]
   175b8:	ldrb	r3, [r2, #1]
   175bc:	adds	r3, r3, #0
   175c0:	movne	r3, #1
   175c4:	b	16ef8 <close_stdout@@Base+0x16cc>
   175c8:	bl	117a4 <abort@plt>
   175cc:	ldr	r8, [sp, #60]	; 0x3c
   175d0:	b	16f24 <close_stdout@@Base+0x16f8>
   175d4:	ldr	r0, [sp, #32]
   175d8:	bl	1163c <strlen@plt>
   175dc:	mov	r8, r0
   175e0:	b	173ec <close_stdout@@Base+0x1bc0>
   175e4:	ldr	r2, [pc, #288]	; 1770c <close_stdout@@Base+0x1ee0>
   175e8:	mov	r1, #1
   175ec:	mov	r9, r1
   175f0:	str	r1, [sp, #24]
   175f4:	add	r2, pc, r2
   175f8:	str	r1, [sp, #28]
   175fc:	str	r2, [sp, #52]	; 0x34
   17600:	b	16aa8 <close_stdout@@Base+0x127c>
   17604:	ldr	r2, [pc, #260]	; 17710 <close_stdout@@Base+0x1ee4>
   17608:	mov	r3, #1
   1760c:	mov	r9, r3
   17610:	str	r3, [sp, #28]
   17614:	add	r2, pc, r2
   17618:	str	sl, [sp, #24]
   1761c:	str	r2, [sp, #52]	; 0x34
   17620:	b	16aa8 <close_stdout@@Base+0x127c>
   17624:	cmp	r8, r7
   17628:	str	r9, [sp, #60]	; 0x3c
   1762c:	mov	ip, r4
   17630:	ldr	r6, [sp, #96]	; 0x60
   17634:	ldr	r9, [sp, #88]	; 0x58
   17638:	ldr	r4, [sp, #92]	; 0x5c
   1763c:	ldr	r5, [sp, #100]	; 0x64
   17640:	bls	17678 <close_stdout@@Base+0x1e4c>
   17644:	ldrb	r3, [ip]
   17648:	cmp	r3, #0
   1764c:	beq	17678 <close_stdout@@Base+0x1e4c>
   17650:	ldr	r3, [sp, #60]	; 0x3c
   17654:	b	17664 <close_stdout@@Base+0x1e38>
   17658:	ldrb	r2, [r5, r3]
   1765c:	cmp	r2, #0
   17660:	beq	17674 <close_stdout@@Base+0x1e48>
   17664:	add	r3, r3, #1
   17668:	add	r2, fp, r3
   1766c:	cmp	r8, r2
   17670:	bhi	17658 <close_stdout@@Base+0x1e2c>
   17674:	str	r3, [sp, #60]	; 0x3c
   17678:	mov	r2, #1
   1767c:	b	17578 <close_stdout@@Base+0x1d4c>
   17680:	str	r9, [sp, #60]	; 0x3c
   17684:	mov	r2, #1
   17688:	ldr	r4, [sp, #92]	; 0x5c
   1768c:	ldr	r6, [sp, #96]	; 0x60
   17690:	ldr	r9, [sp, #88]	; 0x58
   17694:	ldr	r5, [sp, #100]	; 0x64
   17698:	b	17578 <close_stdout@@Base+0x1d4c>
   1769c:	ldr	r9, [sp, #36]	; 0x24
   176a0:	b	172c4 <close_stdout@@Base+0x1a98>
   176a4:	bl	114e0 <__stack_chk_fail@plt>
   176a8:	ldr	r1, [pc, #100]	; 17714 <close_stdout@@Base+0x1ee8>
   176ac:	mov	r3, #0
   176b0:	mov	r0, #1
   176b4:	str	r3, [sp, #24]
   176b8:	add	r1, pc, r1
   176bc:	str	r0, [sp, #28]
   176c0:	mov	r9, r3
   176c4:	str	r1, [sp, #52]	; 0x34
   176c8:	b	16aa8 <close_stdout@@Base+0x127c>
   176cc:	ldr	r0, [pc, #68]	; 17718 <close_stdout@@Base+0x1eec>
   176d0:	mov	r3, #1
   176d4:	mov	r9, #0
   176d8:	str	r3, [sp, #24]
   176dc:	add	r0, pc, r0
   176e0:	str	r3, [sp, #28]
   176e4:	str	r0, [sp, #52]	; 0x34
   176e8:	b	16aa8 <close_stdout@@Base+0x127c>
   176ec:	andeq	r7, r1, r8, ror #11
   176f0:	andeq	r0, r0, r8, asr r1
   176f4:	andeq	r5, r0, r4, lsr #16
   176f8:	andeq	r5, r0, r0, lsl #16
   176fc:	andeq	r5, r0, ip, lsr ip
   17700:	andeq	r5, r0, ip, lsl ip
   17704:	andeq	r5, r0, r0, lsr #23
   17708:	andeq	r5, r0, r8, asr #22
   1770c:	andeq	r5, r0, ip, lsl r4
   17710:	andeq	r5, r0, ip, ror r8
   17714:	ldrdeq	r5, [r0], -r8
   17718:	andeq	r5, r0, r4, lsr r3
   1771c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17720:	sub	sp, sp, #44	; 0x2c
   17724:	mov	r6, r0
   17728:	mov	r9, r1
   1772c:	mov	sl, r2
   17730:	mov	r4, r3
   17734:	bl	11678 <__errno_location@plt>
   17738:	ldr	fp, [pc, #412]	; 178dc <close_stdout@@Base+0x20b0>
   1773c:	cmp	r6, #0
   17740:	add	fp, pc, fp
   17744:	ldr	r5, [fp]
   17748:	ldr	r1, [r0]
   1774c:	mov	r8, r0
   17750:	str	r1, [sp, #36]	; 0x24
   17754:	blt	178d4 <close_stdout@@Base+0x20a8>
   17758:	ldr	r3, [pc, #384]	; 178e0 <close_stdout@@Base+0x20b4>
   1775c:	add	r3, pc, r3
   17760:	ldr	r3, [r3]
   17764:	cmp	r6, r3
   17768:	bcc	177bc <close_stdout@@Base+0x1f90>
   1776c:	add	r7, r6, #1
   17770:	cmn	r7, #-536870911	; 0xe0000001
   17774:	bhi	178d8 <close_stdout@@Base+0x20ac>
   17778:	add	r3, fp, #4
   1777c:	cmp	r5, r3
   17780:	beq	178ac <close_stdout@@Base+0x2080>
   17784:	mov	r0, r5
   17788:	lsl	r1, r7, #3
   1778c:	bl	18e04 <close_stdout@@Base+0x35d8>
   17790:	mov	r5, r0
   17794:	str	r0, [fp]
   17798:	ldr	fp, [pc, #324]	; 178e4 <close_stdout@@Base+0x20b8>
   1779c:	mov	r1, #0
   177a0:	add	fp, pc, fp
   177a4:	ldr	r0, [fp]
   177a8:	rsb	r2, r0, r7
   177ac:	add	r0, r5, r0, lsl #3
   177b0:	lsl	r2, r2, #3
   177b4:	bl	116b4 <memset@plt>
   177b8:	str	r7, [fp]
   177bc:	add	r2, r4, #8
   177c0:	str	r2, [sp, #32]
   177c4:	ldr	r1, [r4]
   177c8:	add	fp, r5, r6, lsl #3
   177cc:	ldr	lr, [sp, #32]
   177d0:	mov	r2, r9
   177d4:	ldr	r3, [r4, #4]
   177d8:	ldr	ip, [r5, r6, lsl #3]
   177dc:	ldr	r7, [fp, #4]
   177e0:	orr	r3, r3, #1
   177e4:	str	r1, [sp]
   177e8:	str	r3, [sp, #4]
   177ec:	mov	r1, ip
   177f0:	str	lr, [sp, #8]
   177f4:	mov	r0, r7
   177f8:	ldr	lr, [r4, #40]	; 0x28
   177fc:	str	r3, [sp, #28]
   17800:	mov	r3, sl
   17804:	str	lr, [sp, #12]
   17808:	ldr	lr, [r4, #44]	; 0x2c
   1780c:	str	ip, [sp, #24]
   17810:	str	lr, [sp, #16]
   17814:	bl	169f4 <close_stdout@@Base+0x11c8>
   17818:	ldr	ip, [sp, #24]
   1781c:	cmp	ip, r0
   17820:	bhi	17898 <close_stdout@@Base+0x206c>
   17824:	ldr	r3, [pc, #188]	; 178e8 <close_stdout@@Base+0x20bc>
   17828:	add	r1, r0, #1
   1782c:	str	r1, [r5, r6, lsl #3]
   17830:	add	r3, pc, r3
   17834:	cmp	r7, r3
   17838:	beq	1784c <close_stdout@@Base+0x2020>
   1783c:	mov	r0, r7
   17840:	str	r1, [sp, #24]
   17844:	bl	11480 <free@plt>
   17848:	ldr	r1, [sp, #24]
   1784c:	mov	r0, r1
   17850:	str	r1, [sp, #24]
   17854:	bl	18dac <close_stdout@@Base+0x3580>
   17858:	ldr	r3, [sp, #28]
   1785c:	ldr	lr, [sp, #32]
   17860:	mov	r2, r9
   17864:	str	r0, [fp, #4]
   17868:	mov	r7, r0
   1786c:	ldr	ip, [r4]
   17870:	str	r3, [sp, #4]
   17874:	mov	r3, sl
   17878:	str	lr, [sp, #8]
   1787c:	str	ip, [sp]
   17880:	ldr	ip, [r4, #40]	; 0x28
   17884:	ldr	r1, [sp, #24]
   17888:	str	ip, [sp, #12]
   1788c:	ldr	ip, [r4, #44]	; 0x2c
   17890:	str	ip, [sp, #16]
   17894:	bl	169f4 <close_stdout@@Base+0x11c8>
   17898:	ldr	r1, [sp, #36]	; 0x24
   1789c:	mov	r0, r7
   178a0:	str	r1, [r8]
   178a4:	add	sp, sp, #44	; 0x2c
   178a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178ac:	lsl	r1, r7, #3
   178b0:	mov	r0, #0
   178b4:	str	r3, [sp, #24]
   178b8:	bl	18e04 <close_stdout@@Base+0x35d8>
   178bc:	ldr	r3, [sp, #24]
   178c0:	mov	r5, r0
   178c4:	ldm	r3, {r0, r1}
   178c8:	str	r5, [fp]
   178cc:	stm	r5, {r0, r1}
   178d0:	b	17798 <close_stdout@@Base+0x1f6c>
   178d4:	bl	117a4 <abort@plt>
   178d8:	bl	18fc0 <close_stdout@@Base+0x3794>
   178dc:			; <UNDEFINED> instruction: 0x00016ab0
   178e0:	andeq	r6, r1, r0, ror #20
   178e4:	andeq	r6, r1, ip, lsl sl
   178e8:	andeq	r6, r1, r0, ror #31
   178ec:	push	{r4, r5, r6, lr}
   178f0:	mov	r5, r0
   178f4:	bl	11678 <__errno_location@plt>
   178f8:	cmp	r5, #0
   178fc:	mov	r1, #48	; 0x30
   17900:	mov	r4, r0
   17904:	ldr	r0, [pc, #24]	; 17924 <close_stdout@@Base+0x20f8>
   17908:	ldr	r6, [r4]
   1790c:	add	r0, pc, r0
   17910:	add	r0, r0, #256	; 0x100
   17914:	movne	r0, r5
   17918:	bl	18f80 <close_stdout@@Base+0x3754>
   1791c:	str	r6, [r4]
   17920:	pop	{r4, r5, r6, pc}
   17924:	andeq	r6, r1, r4, lsl #30
   17928:	cmp	r0, #0
   1792c:	beq	17938 <close_stdout@@Base+0x210c>
   17930:	ldr	r0, [r0]
   17934:	bx	lr
   17938:	ldr	r0, [pc, #12]	; 1794c <close_stdout@@Base+0x2120>
   1793c:	add	r0, pc, r0
   17940:	add	r0, r0, #256	; 0x100
   17944:	ldr	r0, [r0]
   17948:	bx	lr
   1794c:	ldrdeq	r6, [r1], -r4
   17950:	cmp	r0, #0
   17954:	beq	17960 <close_stdout@@Base+0x2134>
   17958:	str	r1, [r0]
   1795c:	bx	lr
   17960:	ldr	r0, [pc, #12]	; 17974 <close_stdout@@Base+0x2148>
   17964:	add	r0, pc, r0
   17968:	add	r0, r0, #256	; 0x100
   1796c:	str	r1, [r0]
   17970:	bx	lr
   17974:	andeq	r6, r1, ip, lsr #29
   17978:	cmp	r0, #0
   1797c:	movne	r3, r0
   17980:	beq	179b0 <close_stdout@@Base+0x2184>
   17984:	lsr	ip, r1, #5
   17988:	and	r1, r1, #31
   1798c:	add	r3, r3, ip, lsl #2
   17990:	ldr	ip, [r3, #8]
   17994:	lsr	r0, ip, r1
   17998:	eor	r2, r0, r2
   1799c:	and	r0, r0, #1
   179a0:	and	r2, r2, #1
   179a4:	eor	ip, ip, r2, lsl r1
   179a8:	str	ip, [r3, #8]
   179ac:	bx	lr
   179b0:	ldr	r3, [pc, #8]	; 179c0 <close_stdout@@Base+0x2194>
   179b4:	add	r3, pc, r3
   179b8:	add	r3, r3, #256	; 0x100
   179bc:	b	17984 <close_stdout@@Base+0x2158>
   179c0:	andeq	r6, r1, ip, asr lr
   179c4:	subs	r3, r0, #0
   179c8:	beq	179d8 <close_stdout@@Base+0x21ac>
   179cc:	ldr	r0, [r3, #4]
   179d0:	str	r1, [r3, #4]
   179d4:	bx	lr
   179d8:	ldr	r3, [pc, #8]	; 179e8 <close_stdout@@Base+0x21bc>
   179dc:	add	r3, pc, r3
   179e0:	add	r3, r3, #256	; 0x100
   179e4:	b	179cc <close_stdout@@Base+0x21a0>
   179e8:	andeq	r6, r1, r4, lsr lr
   179ec:	cmp	r0, #0
   179f0:	push	{r3, lr}
   179f4:	beq	17a18 <close_stdout@@Base+0x21ec>
   179f8:	cmp	r2, #0
   179fc:	cmpne	r1, #0
   17a00:	mov	r3, #8
   17a04:	strne	r1, [r0, #40]	; 0x28
   17a08:	str	r3, [r0]
   17a0c:	strne	r2, [r0, #44]	; 0x2c
   17a10:	popne	{r3, pc}
   17a14:	bl	117a4 <abort@plt>
   17a18:	ldr	r0, [pc, #8]	; 17a28 <close_stdout@@Base+0x21fc>
   17a1c:	add	r0, pc, r0
   17a20:	add	r0, r0, #256	; 0x100
   17a24:	b	179f8 <close_stdout@@Base+0x21cc>
   17a28:	strdeq	r6, [r1], -r4
   17a2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a30:	sub	sp, sp, #24
   17a34:	mov	r7, r0
   17a38:	mov	sl, r1
   17a3c:	ldr	r4, [sp, #56]	; 0x38
   17a40:	mov	r9, r2
   17a44:	mov	r8, r3
   17a48:	cmp	r4, #0
   17a4c:	beq	17aa0 <close_stdout@@Base+0x2274>
   17a50:	bl	11678 <__errno_location@plt>
   17a54:	ldr	r3, [r4]
   17a58:	add	lr, r4, #8
   17a5c:	mov	r1, sl
   17a60:	mov	r2, r9
   17a64:	ldr	r6, [r0]
   17a68:	mov	r5, r0
   17a6c:	str	r3, [sp]
   17a70:	mov	r0, r7
   17a74:	ldr	ip, [r4, #4]
   17a78:	mov	r3, r8
   17a7c:	stmib	sp, {ip, lr}
   17a80:	ldr	ip, [r4, #40]	; 0x28
   17a84:	str	ip, [sp, #12]
   17a88:	ldr	ip, [r4, #44]	; 0x2c
   17a8c:	str	ip, [sp, #16]
   17a90:	bl	169f4 <close_stdout@@Base+0x11c8>
   17a94:	str	r6, [r5]
   17a98:	add	sp, sp, #24
   17a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17aa0:	ldr	r4, [pc, #8]	; 17ab0 <close_stdout@@Base+0x2284>
   17aa4:	add	r4, pc, r4
   17aa8:	add	r4, r4, #256	; 0x100
   17aac:	b	17a50 <close_stdout@@Base+0x2224>
   17ab0:	andeq	r6, r1, ip, ror #26
   17ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ab8:	subs	r4, r3, #0
   17abc:	sub	sp, sp, #36	; 0x24
   17ac0:	mov	r7, r0
   17ac4:	mov	r6, r1
   17ac8:	mov	r5, r2
   17acc:	beq	17b88 <close_stdout@@Base+0x235c>
   17ad0:	bl	11678 <__errno_location@plt>
   17ad4:	ldr	r3, [r4]
   17ad8:	ldr	sl, [r4, #4]
   17adc:	add	r9, r4, #8
   17ae0:	mov	r8, r0
   17ae4:	mov	r0, #0
   17ae8:	ldr	r2, [r8]
   17aec:	cmp	r5, r0
   17af0:	orreq	sl, sl, #1
   17af4:	str	r9, [sp, #8]
   17af8:	mov	r1, r0
   17afc:	stm	sp, {r3, sl}
   17b00:	mov	r3, r6
   17b04:	ldr	ip, [r4, #40]	; 0x28
   17b08:	str	r2, [sp, #28]
   17b0c:	mov	r2, r7
   17b10:	str	ip, [sp, #12]
   17b14:	ldr	ip, [r4, #44]	; 0x2c
   17b18:	str	ip, [sp, #16]
   17b1c:	bl	169f4 <close_stdout@@Base+0x11c8>
   17b20:	add	r1, r0, #1
   17b24:	mov	fp, r0
   17b28:	str	r1, [sp, #24]
   17b2c:	mov	r0, r1
   17b30:	bl	18dac <close_stdout@@Base+0x3580>
   17b34:	ldr	lr, [r4]
   17b38:	str	sl, [sp, #4]
   17b3c:	mov	r3, r6
   17b40:	str	r9, [sp, #8]
   17b44:	mov	r2, r7
   17b48:	str	lr, [sp]
   17b4c:	ldr	lr, [r4, #40]	; 0x28
   17b50:	ldr	r1, [sp, #24]
   17b54:	str	lr, [sp, #12]
   17b58:	ldr	lr, [r4, #44]	; 0x2c
   17b5c:	str	lr, [sp, #16]
   17b60:	str	r0, [sp, #24]
   17b64:	bl	169f4 <close_stdout@@Base+0x11c8>
   17b68:	ldr	r3, [sp, #28]
   17b6c:	cmp	r5, #0
   17b70:	str	r3, [r8]
   17b74:	ldr	ip, [sp, #24]
   17b78:	strne	fp, [r5]
   17b7c:	mov	r0, ip
   17b80:	add	sp, sp, #36	; 0x24
   17b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b88:	ldr	r4, [pc, #8]	; 17b98 <close_stdout@@Base+0x236c>
   17b8c:	add	r4, pc, r4
   17b90:	add	r4, r4, #256	; 0x100
   17b94:	b	17ad0 <close_stdout@@Base+0x22a4>
   17b98:	andeq	r6, r1, r4, lsl #25
   17b9c:	mov	r3, r2
   17ba0:	mov	r2, #0
   17ba4:	b	17ab4 <close_stdout@@Base+0x2288>
   17ba8:	ldr	r2, [pc, #152]	; 17c48 <close_stdout@@Base+0x241c>
   17bac:	push	{r3, r4, r5, r6, r7, lr}
   17bb0:	add	r2, pc, r2
   17bb4:	ldr	r3, [pc, #144]	; 17c4c <close_stdout@@Base+0x2420>
   17bb8:	ldr	r6, [r2]
   17bbc:	add	r3, pc, r3
   17bc0:	cmp	r6, #1
   17bc4:	ldr	r7, [r3]
   17bc8:	movhi	r4, #1
   17bcc:	movhi	r5, r7
   17bd0:	bls	17bec <close_stdout@@Base+0x23c0>
   17bd4:	ldr	r0, [r5, #12]
   17bd8:	add	r4, r4, #1
   17bdc:	bl	11480 <free@plt>
   17be0:	cmp	r4, r6
   17be4:	add	r5, r5, #8
   17be8:	bne	17bd4 <close_stdout@@Base+0x23a8>
   17bec:	ldr	r4, [pc, #92]	; 17c50 <close_stdout@@Base+0x2424>
   17bf0:	ldr	r0, [r7, #4]
   17bf4:	add	r4, pc, r4
   17bf8:	cmp	r0, r4
   17bfc:	beq	17c14 <close_stdout@@Base+0x23e8>
   17c00:	bl	11480 <free@plt>
   17c04:	ldr	r3, [pc, #72]	; 17c54 <close_stdout@@Base+0x2428>
   17c08:	mov	r2, #256	; 0x100
   17c0c:	add	r3, pc, r3
   17c10:	stmib	r3, {r2, r4}
   17c14:	ldr	r4, [pc, #60]	; 17c58 <close_stdout@@Base+0x242c>
   17c18:	add	r4, pc, r4
   17c1c:	add	r5, r4, #4
   17c20:	cmp	r7, r5
   17c24:	beq	17c34 <close_stdout@@Base+0x2408>
   17c28:	mov	r0, r7
   17c2c:	bl	11480 <free@plt>
   17c30:	str	r5, [r4]
   17c34:	ldr	r3, [pc, #32]	; 17c5c <close_stdout@@Base+0x2430>
   17c38:	mov	r2, #1
   17c3c:	add	r3, pc, r3
   17c40:	str	r2, [r3]
   17c44:	pop	{r3, r4, r5, r6, r7, pc}
   17c48:	andeq	r6, r1, ip, lsl #12
   17c4c:	andeq	r6, r1, r4, lsr r6
   17c50:	andeq	r6, r1, ip, lsl ip
   17c54:	andeq	r6, r1, r4, ror #11
   17c58:	ldrdeq	r6, [r1], -r8
   17c5c:	andeq	r6, r1, r0, lsl #11
   17c60:	ldr	r3, [pc, #12]	; 17c74 <close_stdout@@Base+0x2448>
   17c64:	mvn	r2, #0
   17c68:	add	r3, pc, r3
   17c6c:	add	r3, r3, #256	; 0x100
   17c70:	b	1771c <close_stdout@@Base+0x1ef0>
   17c74:	andeq	r6, r1, r8, lsr #23
   17c78:	ldr	r3, [pc, #8]	; 17c88 <close_stdout@@Base+0x245c>
   17c7c:	add	r3, pc, r3
   17c80:	add	r3, r3, #256	; 0x100
   17c84:	b	1771c <close_stdout@@Base+0x1ef0>
   17c88:	muleq	r1, r4, fp
   17c8c:	mov	r1, r0
   17c90:	mov	r0, #0
   17c94:	b	17c60 <close_stdout@@Base+0x2434>
   17c98:	mov	r2, r1
   17c9c:	mov	r1, r0
   17ca0:	mov	r0, #0
   17ca4:	b	17c78 <close_stdout@@Base+0x244c>
   17ca8:	ldr	r3, [pc, #92]	; 17d0c <close_stdout@@Base+0x24e0>
   17cac:	ldr	ip, [pc, #92]	; 17d10 <close_stdout@@Base+0x24e4>
   17cb0:	add	r3, pc, r3
   17cb4:	push	{r4, r5, r6, r7, lr}
   17cb8:	sub	sp, sp, #60	; 0x3c
   17cbc:	ldr	r4, [r3, ip]
   17cc0:	add	r5, sp, #4
   17cc4:	mov	r7, r2
   17cc8:	mov	r6, r0
   17ccc:	mov	r0, r5
   17cd0:	ldr	r3, [r4]
   17cd4:	str	r3, [sp, #52]	; 0x34
   17cd8:	bl	1683c <close_stdout@@Base+0x1010>
   17cdc:	mov	r3, r5
   17ce0:	mvn	r2, #0
   17ce4:	mov	r0, r6
   17ce8:	mov	r1, r7
   17cec:	bl	1771c <close_stdout@@Base+0x1ef0>
   17cf0:	ldr	r2, [sp, #52]	; 0x34
   17cf4:	ldr	r3, [r4]
   17cf8:	cmp	r2, r3
   17cfc:	bne	17d08 <close_stdout@@Base+0x24dc>
   17d00:	add	sp, sp, #60	; 0x3c
   17d04:	pop	{r4, r5, r6, r7, pc}
   17d08:	bl	114e0 <__stack_chk_fail@plt>
   17d0c:	andeq	r6, r1, r8, asr #6
   17d10:	andeq	r0, r0, r8, asr r1
   17d14:	ldr	ip, [pc, #96]	; 17d7c <close_stdout@@Base+0x2550>
   17d18:	push	{r4, r5, r6, r7, r8, lr}
   17d1c:	add	ip, pc, ip
   17d20:	ldr	lr, [pc, #88]	; 17d80 <close_stdout@@Base+0x2554>
   17d24:	sub	sp, sp, #56	; 0x38
   17d28:	mov	r8, r3
   17d2c:	add	r5, sp, #4
   17d30:	mov	r7, r2
   17d34:	mov	r6, r0
   17d38:	ldr	r4, [ip, lr]
   17d3c:	mov	r0, r5
   17d40:	ldr	r3, [r4]
   17d44:	str	r3, [sp, #52]	; 0x34
   17d48:	bl	1683c <close_stdout@@Base+0x1010>
   17d4c:	mov	r2, r8
   17d50:	mov	r3, r5
   17d54:	mov	r0, r6
   17d58:	mov	r1, r7
   17d5c:	bl	1771c <close_stdout@@Base+0x1ef0>
   17d60:	ldr	r2, [sp, #52]	; 0x34
   17d64:	ldr	r3, [r4]
   17d68:	cmp	r2, r3
   17d6c:	bne	17d78 <close_stdout@@Base+0x254c>
   17d70:	add	sp, sp, #56	; 0x38
   17d74:	pop	{r4, r5, r6, r7, r8, pc}
   17d78:	bl	114e0 <__stack_chk_fail@plt>
   17d7c:	ldrdeq	r6, [r1], -ip
   17d80:	andeq	r0, r0, r8, asr r1
   17d84:	mov	r2, r1
   17d88:	mov	r1, r0
   17d8c:	mov	r0, #0
   17d90:	b	17ca8 <close_stdout@@Base+0x247c>
   17d94:	mov	ip, r1
   17d98:	mov	r3, r2
   17d9c:	mov	r1, r0
   17da0:	mov	r2, ip
   17da4:	mov	r0, #0
   17da8:	b	17d14 <close_stdout@@Base+0x24e8>
   17dac:	push	{r4, r5, r6, r7, r8, lr}
   17db0:	mov	r5, r2
   17db4:	ldr	lr, [pc, #136]	; 17e44 <close_stdout@@Base+0x2618>
   17db8:	mov	r7, r0
   17dbc:	mov	r6, r1
   17dc0:	ldr	r4, [pc, #128]	; 17e48 <close_stdout@@Base+0x261c>
   17dc4:	add	lr, pc, lr
   17dc8:	sub	sp, sp, #56	; 0x38
   17dcc:	add	lr, lr, #256	; 0x100
   17dd0:	ldr	r8, [pc, #116]	; 17e4c <close_stdout@@Base+0x2620>
   17dd4:	add	r4, pc, r4
   17dd8:	add	ip, sp, #4
   17ddc:	ldm	lr!, {r0, r1, r2, r3}
   17de0:	ldr	r4, [r4, r8]
   17de4:	stmia	ip!, {r0, r1, r2, r3}
   17de8:	ldm	lr!, {r0, r1, r2, r3}
   17dec:	ldr	r8, [r4]
   17df0:	stmia	ip!, {r0, r1, r2, r3}
   17df4:	ldm	lr, {r0, r1, r2, r3}
   17df8:	str	r8, [sp, #52]	; 0x34
   17dfc:	stm	ip, {r0, r1, r2, r3}
   17e00:	mov	r1, r5
   17e04:	add	r5, sp, #4
   17e08:	mov	r2, #1
   17e0c:	mov	r0, r5
   17e10:	bl	17978 <close_stdout@@Base+0x214c>
   17e14:	mov	r2, r6
   17e18:	mov	r3, r5
   17e1c:	mov	r1, r7
   17e20:	mov	r0, #0
   17e24:	bl	1771c <close_stdout@@Base+0x1ef0>
   17e28:	ldr	r2, [sp, #52]	; 0x34
   17e2c:	ldr	r3, [r4]
   17e30:	cmp	r2, r3
   17e34:	bne	17e40 <close_stdout@@Base+0x2614>
   17e38:	add	sp, sp, #56	; 0x38
   17e3c:	pop	{r4, r5, r6, r7, r8, pc}
   17e40:	bl	114e0 <__stack_chk_fail@plt>
   17e44:	andeq	r6, r1, ip, asr #20
   17e48:	andeq	r6, r1, r4, lsr #4
   17e4c:	andeq	r0, r0, r8, asr r1
   17e50:	mov	r2, r1
   17e54:	mvn	r1, #0
   17e58:	b	17dac <close_stdout@@Base+0x2580>
   17e5c:	mov	r1, #58	; 0x3a
   17e60:	b	17e50 <close_stdout@@Base+0x2624>
   17e64:	mov	r2, #58	; 0x3a
   17e68:	b	17dac <close_stdout@@Base+0x2580>
   17e6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17e70:	mov	r5, r2
   17e74:	ldr	lr, [pc, #144]	; 17f0c <close_stdout@@Base+0x26e0>
   17e78:	mov	r8, r0
   17e7c:	mov	r9, r1
   17e80:	mov	r7, r3
   17e84:	add	lr, pc, lr
   17e88:	ldr	r4, [pc, #128]	; 17f10 <close_stdout@@Base+0x26e4>
   17e8c:	add	lr, lr, #256	; 0x100
   17e90:	sub	sp, sp, #56	; 0x38
   17e94:	ldr	sl, [pc, #120]	; 17f14 <close_stdout@@Base+0x26e8>
   17e98:	add	r4, pc, r4
   17e9c:	ldm	lr!, {r0, r1, r2, r3}
   17ea0:	add	ip, sp, #4
   17ea4:	ldr	r4, [r4, sl]
   17ea8:	ldr	r6, [sp, #88]	; 0x58
   17eac:	stmia	ip!, {r0, r1, r2, r3}
   17eb0:	ldm	lr!, {r0, r1, r2, r3}
   17eb4:	ldr	sl, [r4]
   17eb8:	stmia	ip!, {r0, r1, r2, r3}
   17ebc:	ldm	lr, {r0, r1, r2, r3}
   17ec0:	str	sl, [sp, #52]	; 0x34
   17ec4:	stm	ip, {r0, r1, r2, r3}
   17ec8:	mov	r2, r5
   17ecc:	add	r5, sp, #4
   17ed0:	mov	r1, r9
   17ed4:	mov	r0, r5
   17ed8:	bl	179ec <close_stdout@@Base+0x21c0>
   17edc:	mov	r2, r6
   17ee0:	mov	r3, r5
   17ee4:	mov	r0, r8
   17ee8:	mov	r1, r7
   17eec:	bl	1771c <close_stdout@@Base+0x1ef0>
   17ef0:	ldr	r2, [sp, #52]	; 0x34
   17ef4:	ldr	r3, [r4]
   17ef8:	cmp	r2, r3
   17efc:	bne	17f08 <close_stdout@@Base+0x26dc>
   17f00:	add	sp, sp, #56	; 0x38
   17f04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f08:	bl	114e0 <__stack_chk_fail@plt>
   17f0c:	andeq	r6, r1, ip, lsl #19
   17f10:	andeq	r6, r1, r0, ror #2
   17f14:	andeq	r0, r0, r8, asr r1
   17f18:	push	{lr}		; (str lr, [sp, #-4]!)
   17f1c:	sub	sp, sp, #12
   17f20:	mvn	ip, #0
   17f24:	str	ip, [sp]
   17f28:	bl	17e6c <close_stdout@@Base+0x2640>
   17f2c:	add	sp, sp, #12
   17f30:	pop	{pc}		; (ldr pc, [sp], #4)
   17f34:	mov	ip, r1
   17f38:	mov	r3, r2
   17f3c:	mov	r1, r0
   17f40:	mov	r2, ip
   17f44:	mov	r0, #0
   17f48:	b	17f18 <close_stdout@@Base+0x26ec>
   17f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   17f50:	sub	sp, sp, #12
   17f54:	mov	lr, r1
   17f58:	mov	ip, r2
   17f5c:	mov	r1, r0
   17f60:	str	r3, [sp]
   17f64:	mov	r2, lr
   17f68:	mov	r3, ip
   17f6c:	mov	r0, #0
   17f70:	bl	17e6c <close_stdout@@Base+0x2640>
   17f74:	add	sp, sp, #12
   17f78:	pop	{pc}		; (ldr pc, [sp], #4)
   17f7c:	ldr	r3, [pc, #12]	; 17f90 <close_stdout@@Base+0x2764>
   17f80:	ldr	ip, [pc, #12]	; 17f94 <close_stdout@@Base+0x2768>
   17f84:	add	r3, pc, r3
   17f88:	ldr	r3, [r3, ip]
   17f8c:	b	1771c <close_stdout@@Base+0x1ef0>
   17f90:	andeq	r6, r1, r4, ror r0
   17f94:	andeq	r0, r0, r0, asr r1
   17f98:	mov	r2, r1
   17f9c:	mov	r1, r0
   17fa0:	mov	r0, #0
   17fa4:	b	17f7c <close_stdout@@Base+0x2750>
   17fa8:	mvn	r2, #0
   17fac:	b	17f7c <close_stdout@@Base+0x2750>
   17fb0:	mov	r1, r0
   17fb4:	mov	r0, #0
   17fb8:	b	17fa8 <close_stdout@@Base+0x277c>
   17fbc:	ldr	r3, [pc, #472]	; 1819c <close_stdout@@Base+0x2970>
   17fc0:	ldr	r2, [pc, #472]	; 181a0 <close_stdout@@Base+0x2974>
   17fc4:	add	r3, pc, r3
   17fc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17fcc:	sub	sp, sp, #112	; 0x70
   17fd0:	ldr	r7, [r3, r2]
   17fd4:	mov	r8, r1
   17fd8:	mov	r6, r0
   17fdc:	ldr	r3, [r7]
   17fe0:	str	r3, [sp, #108]	; 0x6c
   17fe4:	bl	116e4 <fileno@plt>
   17fe8:	mov	r2, sp
   17fec:	mov	r1, r0
   17ff0:	mov	r0, #3
   17ff4:	bl	11528 <__fxstat64@plt>
   17ff8:	cmp	r0, #0
   17ffc:	blt	18010 <close_stdout@@Base+0x27e4>
   18000:	ldr	r3, [sp, #16]
   18004:	and	r3, r3, #61440	; 0xf000
   18008:	cmp	r3, #32768	; 0x8000
   1800c:	beq	18130 <close_stdout@@Base+0x2904>
   18010:	mov	r4, #8192	; 0x2000
   18014:	mov	r0, r4
   18018:	bl	115ac <malloc@plt>
   1801c:	subs	r9, r0, #0
   18020:	beq	18190 <close_stdout@@Base+0x2964>
   18024:	mov	r5, #0
   18028:	b	18060 <close_stdout@@Base+0x2834>
   1802c:	cmn	r4, #1
   18030:	beq	180f8 <close_stdout@@Base+0x28cc>
   18034:	lsr	r3, r4, #1
   18038:	mov	r0, r9
   1803c:	mvn	r2, r3
   18040:	cmp	r4, r2
   18044:	addcc	r4, r4, r3
   18048:	mvncs	r4, #0
   1804c:	mov	r1, r4
   18050:	bl	114f8 <realloc@plt>
   18054:	cmp	r0, #0
   18058:	beq	180d8 <close_stdout@@Base+0x28ac>
   1805c:	mov	r9, r0
   18060:	rsb	sl, r5, r4
   18064:	add	r0, r9, r5
   18068:	mov	r1, #1
   1806c:	mov	r3, r6
   18070:	mov	r2, sl
   18074:	bl	11564 <fread@plt>
   18078:	cmp	sl, r0
   1807c:	add	r5, r5, r0
   18080:	beq	1802c <close_stdout@@Base+0x2800>
   18084:	bl	11678 <__errno_location@plt>
   18088:	mov	sl, r0
   1808c:	mov	r0, r6
   18090:	ldr	r6, [sl]
   18094:	bl	1148c <ferror@plt>
   18098:	cmp	r0, #0
   1809c:	bne	180e4 <close_stdout@@Base+0x28b8>
   180a0:	sub	r4, r4, #1
   180a4:	cmp	r4, r5
   180a8:	bhi	18118 <close_stdout@@Base+0x28ec>
   180ac:	mov	r3, r9
   180b0:	mov	r2, #0
   180b4:	strb	r2, [r9, r5]
   180b8:	str	r5, [r8]
   180bc:	ldr	r2, [sp, #108]	; 0x6c
   180c0:	mov	r0, r3
   180c4:	ldr	r3, [r7]
   180c8:	cmp	r2, r3
   180cc:	bne	18198 <close_stdout@@Base+0x296c>
   180d0:	add	sp, sp, #112	; 0x70
   180d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   180d8:	bl	11678 <__errno_location@plt>
   180dc:	ldr	r6, [r0]
   180e0:	mov	sl, r0
   180e4:	mov	r0, r9
   180e8:	bl	11480 <free@plt>
   180ec:	str	r6, [sl]
   180f0:	mov	r3, #0
   180f4:	b	180bc <close_stdout@@Base+0x2890>
   180f8:	bl	11678 <__errno_location@plt>
   180fc:	mov	r6, #12
   18100:	mov	sl, r0
   18104:	mov	r0, r9
   18108:	bl	11480 <free@plt>
   1810c:	str	r6, [sl]
   18110:	mov	r3, #0
   18114:	b	180bc <close_stdout@@Base+0x2890>
   18118:	mov	r0, r9
   1811c:	add	r1, r5, #1
   18120:	bl	114f8 <realloc@plt>
   18124:	cmp	r0, #0
   18128:	movne	r9, r0
   1812c:	b	180ac <close_stdout@@Base+0x2880>
   18130:	mov	r0, r6
   18134:	bl	117c8 <ftello64@plt>
   18138:	cmp	r0, #0
   1813c:	sbcs	r3, r1, #0
   18140:	blt	18010 <close_stdout@@Base+0x27e4>
   18144:	ldrd	r4, [sp, #48]	; 0x30
   18148:	cmp	r0, r4
   1814c:	sbcs	ip, r1, r5
   18150:	bge	18010 <close_stdout@@Base+0x27e4>
   18154:	mov	r2, r4
   18158:	mov	r3, r5
   1815c:	subs	r2, r2, r0
   18160:	sbc	r3, r3, r1
   18164:	mvn	r0, #1
   18168:	mov	r1, #0
   1816c:	cmp	r0, r2
   18170:	sbcs	ip, r1, r3
   18174:	addge	r4, r2, #1
   18178:	bge	18014 <close_stdout@@Base+0x27e8>
   1817c:	bl	11678 <__errno_location@plt>
   18180:	mov	r2, #12
   18184:	mov	r3, #0
   18188:	str	r2, [r0]
   1818c:	b	180bc <close_stdout@@Base+0x2890>
   18190:	mov	r3, r9
   18194:	b	180bc <close_stdout@@Base+0x2890>
   18198:	bl	114e0 <__stack_chk_fail@plt>
   1819c:	andeq	r6, r1, r4, lsr r0
   181a0:	andeq	r0, r0, r8, asr r1
   181a4:	push	{r4, r5, r6, lr}
   181a8:	mov	r4, r1
   181ac:	mov	r1, r2
   181b0:	bl	11768 <fopen64@plt>
   181b4:	subs	r5, r0, #0
   181b8:	beq	18204 <close_stdout@@Base+0x29d8>
   181bc:	mov	r1, r4
   181c0:	bl	17fbc <close_stdout@@Base+0x2790>
   181c4:	mov	r6, r0
   181c8:	bl	11678 <__errno_location@plt>
   181cc:	mov	r4, r0
   181d0:	mov	r0, r5
   181d4:	ldr	r5, [r4]
   181d8:	bl	195e4 <close_stdout@@Base+0x3db8>
   181dc:	cmp	r0, #0
   181e0:	bne	181ec <close_stdout@@Base+0x29c0>
   181e4:	mov	r0, r6
   181e8:	pop	{r4, r5, r6, pc}
   181ec:	cmp	r6, #0
   181f0:	beq	18200 <close_stdout@@Base+0x29d4>
   181f4:	mov	r0, r6
   181f8:	ldr	r5, [r4]
   181fc:	bl	11480 <free@plt>
   18200:	str	r5, [r4]
   18204:	mov	r0, #0
   18208:	pop	{r4, r5, r6, pc}
   1820c:	ldr	r2, [pc, #4]	; 18218 <close_stdout@@Base+0x29ec>
   18210:	add	r2, pc, r2
   18214:	b	181a4 <close_stdout@@Base+0x2978>
   18218:	ldrdeq	r4, [r0], -r0
   1821c:	ldr	r2, [pc, #4]	; 18228 <close_stdout@@Base+0x29fc>
   18220:	add	r2, pc, r2
   18224:	b	181a4 <close_stdout@@Base+0x2978>
   18228:	andeq	r4, r0, r4, asr #25
   1822c:	push	{r3, r4, r5, lr}
   18230:	mov	r4, r1
   18234:	mov	r2, r4
   18238:	mov	r1, #0
   1823c:	mov	r5, r0
   18240:	bl	116fc <memchr@plt>
   18244:	cmp	r0, #0
   18248:	rsbne	r0, r5, r0
   1824c:	addne	r0, r0, #1
   18250:	moveq	r0, r4
   18254:	pop	{r3, r4, r5, pc}
   18258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1825c:	sub	sp, sp, #84	; 0x54
   18260:	ldr	r5, [pc, #1396]	; 187dc <close_stdout@@Base+0x2fb0>
   18264:	mov	sl, r1
   18268:	ldr	r3, [pc, #1392]	; 187e0 <close_stdout@@Base+0x2fb4>
   1826c:	add	r5, pc, r5
   18270:	ldr	r3, [r5, r3]
   18274:	str	r3, [sp, #12]
   18278:	ldr	r3, [r3]
   1827c:	str	r3, [sp, #76]	; 0x4c
   18280:	bl	116a8 <__strdup@plt>
   18284:	cmp	r0, #0
   18288:	str	r0, [sp]
   1828c:	beq	187b8 <close_stdout@@Base+0x2f8c>
   18290:	bl	1154c <__ctype_get_mb_cur_max@plt>
   18294:	cmp	r0, #1
   18298:	bls	1853c <close_stdout@@Base+0x2d10>
   1829c:	cmp	sl, #0
   182a0:	bne	185fc <close_stdout@@Base+0x2dd0>
   182a4:	add	r4, sp, #24
   182a8:	ldr	r0, [sp]
   182ac:	mov	fp, #0
   182b0:	str	r0, [sp, #36]	; 0x24
   182b4:	bl	1163c <strlen@plt>
   182b8:	ldr	r1, [sp]
   182bc:	str	fp, [sp, #24]
   182c0:	strb	fp, [sp, #20]
   182c4:	str	fp, [r4, #4]
   182c8:	strb	fp, [sp, #32]
   182cc:	add	r9, r1, r0
   182d0:	str	r9, [sp, #16]
   182d4:	cmp	r1, r9
   182d8:	bcs	1850c <close_stdout@@Base+0x2ce0>
   182dc:	add	r1, sp, #48	; 0x30
   182e0:	str	r1, [sp, #4]
   182e4:	ldrb	r1, [sp, #20]
   182e8:	mov	r8, fp
   182ec:	ldr	r3, [sp]
   182f0:	mov	r7, #1
   182f4:	cmp	r1, #0
   182f8:	mov	ip, r3
   182fc:	bne	183a0 <close_stdout@@Base+0x2b74>
   18300:	ldr	r2, [pc, #1244]	; 187e4 <close_stdout@@Base+0x2fb8>
   18304:	ldrb	r3, [ip]
   18308:	ldr	r1, [r5, r2]
   1830c:	and	r2, r3, #31
   18310:	lsr	r3, r3, #5
   18314:	ldr	r3, [r1, r3, lsl #2]
   18318:	lsr	r3, r3, r2
   1831c:	tst	r3, #1
   18320:	beq	18450 <close_stdout@@Base+0x2c24>
   18324:	str	r7, [sp, #40]	; 0x28
   18328:	mov	r6, #1
   1832c:	ldrb	r2, [ip]
   18330:	ldr	r9, [sp, #16]
   18334:	ldr	sl, [sp, #36]	; 0x24
   18338:	strb	r7, [sp, #44]	; 0x2c
   1833c:	str	r2, [sp, #48]	; 0x30
   18340:	cmp	fp, #0
   18344:	strb	r7, [sp, #32]
   18348:	beq	18428 <close_stdout@@Base+0x2bfc>
   1834c:	cmp	fp, #1
   18350:	beq	18468 <close_stdout@@Base+0x2c3c>
   18354:	cmp	fp, #2
   18358:	bne	18448 <close_stdout@@Base+0x2c1c>
   1835c:	ldrb	r2, [sp, #44]	; 0x2c
   18360:	cmp	r2, #0
   18364:	beq	18448 <close_stdout@@Base+0x2c1c>
   18368:	ldr	r0, [sp, #48]	; 0x30
   1836c:	bl	11624 <iswspace@plt>
   18370:	cmp	r0, #0
   18374:	movne	fp, #2
   18378:	moveq	fp, #1
   1837c:	add	ip, sl, r6
   18380:	strb	r8, [sp, #32]
   18384:	cmp	ip, r9
   18388:	str	ip, [sp, #36]	; 0x24
   1838c:	mov	r1, #0
   18390:	bcs	1852c <close_stdout@@Base+0x2d00>
   18394:	ldrb	r1, [sp, #20]
   18398:	cmp	r1, #0
   1839c:	beq	18300 <close_stdout@@Base+0x2ad4>
   183a0:	ldr	r1, [sp, #36]	; 0x24
   183a4:	add	r0, sp, #48	; 0x30
   183a8:	mov	r3, r4
   183ac:	rsb	r2, r1, r9
   183b0:	bl	1157c <mbrtowc@plt>
   183b4:	cmn	r0, #1
   183b8:	str	r0, [sp, #40]	; 0x28
   183bc:	beq	18498 <close_stdout@@Base+0x2c6c>
   183c0:	cmn	r0, #2
   183c4:	beq	184b0 <close_stdout@@Base+0x2c84>
   183c8:	cmp	r0, #0
   183cc:	ldr	r6, [sp, #36]	; 0x24
   183d0:	bne	183f0 <close_stdout@@Base+0x2bc4>
   183d4:	str	r7, [sp, #40]	; 0x28
   183d8:	ldrb	r3, [r6]
   183dc:	cmp	r3, #0
   183e0:	bne	187bc <close_stdout@@Base+0x2f90>
   183e4:	ldr	r3, [sp, #48]	; 0x30
   183e8:	cmp	r3, #0
   183ec:	bne	18798 <close_stdout@@Base+0x2f6c>
   183f0:	mov	r0, r4
   183f4:	strb	r7, [sp, #44]	; 0x2c
   183f8:	bl	114b0 <mbsinit@plt>
   183fc:	strb	r7, [sp, #32]
   18400:	cmp	r0, #0
   18404:	strbne	r8, [sp, #20]
   18408:	moveq	sl, r6
   1840c:	movne	sl, r6
   18410:	ldreq	r9, [sp, #16]
   18414:	ldreq	r6, [sp, #40]	; 0x28
   18418:	ldrne	r9, [sp, #16]
   1841c:	ldrne	r6, [sp, #40]	; 0x28
   18420:	cmp	fp, #0
   18424:	bne	1834c <close_stdout@@Base+0x2b20>
   18428:	ldrb	r2, [sp, #44]	; 0x2c
   1842c:	cmp	r2, #0
   18430:	beq	18448 <close_stdout@@Base+0x2c1c>
   18434:	ldr	r0, [sp, #48]	; 0x30
   18438:	bl	11624 <iswspace@plt>
   1843c:	rsbs	fp, r0, #1
   18440:	movcc	fp, #0
   18444:	b	1837c <close_stdout@@Base+0x2b50>
   18448:	mov	fp, #1
   1844c:	b	1837c <close_stdout@@Base+0x2b50>
   18450:	mov	r0, r4
   18454:	bl	114b0 <mbsinit@plt>
   18458:	cmp	r0, #0
   1845c:	beq	18774 <close_stdout@@Base+0x2f48>
   18460:	strb	r7, [sp, #20]
   18464:	b	183a0 <close_stdout@@Base+0x2b74>
   18468:	ldrb	r2, [sp, #44]	; 0x2c
   1846c:	cmp	r2, #0
   18470:	beq	1837c <close_stdout@@Base+0x2b50>
   18474:	ldr	r0, [sp, #48]	; 0x30
   18478:	bl	11624 <iswspace@plt>
   1847c:	ldr	r2, [sp, #8]
   18480:	cmp	r0, #0
   18484:	movne	r2, sl
   18488:	moveq	fp, #1
   1848c:	movne	fp, #2
   18490:	str	r2, [sp, #8]
   18494:	b	1837c <close_stdout@@Base+0x2b50>
   18498:	str	r7, [sp, #40]	; 0x28
   1849c:	mov	r6, #1
   184a0:	strb	r8, [sp, #44]	; 0x2c
   184a4:	ldr	r9, [sp, #16]
   184a8:	ldr	sl, [sp, #36]	; 0x24
   184ac:	b	18340 <close_stdout@@Base+0x2b14>
   184b0:	ldr	ip, [sp, #36]	; 0x24
   184b4:	ldr	r9, [sp, #16]
   184b8:	strb	r8, [sp, #44]	; 0x2c
   184bc:	rsb	r3, ip, r9
   184c0:	mov	sl, ip
   184c4:	str	r3, [sp, #40]	; 0x28
   184c8:	mov	r6, r3
   184cc:	b	18340 <close_stdout@@Base+0x2b14>
   184d0:	ldr	fp, [sp, #36]	; 0x24
   184d4:	mov	r2, #1
   184d8:	mov	r3, #0
   184dc:	str	r2, [sp, #40]	; 0x28
   184e0:	strb	r3, [sp, #44]	; 0x2c
   184e4:	mov	r3, #1
   184e8:	strb	r3, [sp, #32]
   184ec:	mov	r0, fp
   184f0:	bl	1163c <strlen@plt>
   184f4:	mov	r1, fp
   184f8:	add	r2, r0, #1
   184fc:	ldr	r0, [sp]
   18500:	bl	11474 <memmove@plt>
   18504:	cmp	sl, #1
   18508:	bne	182a8 <close_stdout@@Base+0x2a7c>
   1850c:	ldr	r1, [sp, #12]
   18510:	ldr	r2, [sp, #76]	; 0x4c
   18514:	ldr	r0, [sp]
   18518:	ldr	r3, [r1]
   1851c:	cmp	r2, r3
   18520:	bne	18794 <close_stdout@@Base+0x2f68>
   18524:	add	sp, sp, #84	; 0x54
   18528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1852c:	cmp	fp, #2
   18530:	ldreq	r3, [sp, #8]
   18534:	strbeq	r1, [r3]
   18538:	b	1850c <close_stdout@@Base+0x2ce0>
   1853c:	cmp	sl, #0
   18540:	beq	185a8 <close_stdout@@Base+0x2d7c>
   18544:	ldr	r2, [sp]
   18548:	ldrb	r4, [r2]
   1854c:	cmp	r4, #0
   18550:	beq	18764 <close_stdout@@Base+0x2f38>
   18554:	bl	1160c <__ctype_b_loc@plt>
   18558:	ldr	r3, [sp]
   1855c:	ldr	r1, [r0]
   18560:	b	18574 <close_stdout@@Base+0x2d48>
   18564:	ldrb	r4, [r3, #1]
   18568:	add	r3, r3, #1
   1856c:	cmp	r4, #0
   18570:	beq	1875c <close_stdout@@Base+0x2f30>
   18574:	lsl	r4, r4, #1
   18578:	mov	r5, r3
   1857c:	ldrh	r2, [r1, r4]
   18580:	tst	r2, #8192	; 0x2000
   18584:	bne	18564 <close_stdout@@Base+0x2d38>
   18588:	mov	r0, r5
   1858c:	bl	1163c <strlen@plt>
   18590:	mov	r1, r5
   18594:	add	r2, r0, #1
   18598:	ldr	r0, [sp]
   1859c:	bl	11474 <memmove@plt>
   185a0:	cmp	sl, #1
   185a4:	beq	1850c <close_stdout@@Base+0x2ce0>
   185a8:	ldr	r0, [sp]
   185ac:	bl	1163c <strlen@plt>
   185b0:	ldr	r1, [sp]
   185b4:	sub	r0, r0, #1
   185b8:	adds	r4, r1, r0
   185bc:	bcs	1850c <close_stdout@@Base+0x2ce0>
   185c0:	bl	1160c <__ctype_b_loc@plt>
   185c4:	mov	r3, r4
   185c8:	mov	ip, #0
   185cc:	ldr	r4, [sp]
   185d0:	b	185e0 <close_stdout@@Base+0x2db4>
   185d4:	cmp	r4, r3
   185d8:	strb	ip, [r3, #1]
   185dc:	bhi	1850c <close_stdout@@Base+0x2ce0>
   185e0:	ldrb	r2, [r3], #-1
   185e4:	ldr	r1, [r0]
   185e8:	lsl	r2, r2, #1
   185ec:	ldrh	r2, [r1, r2]
   185f0:	tst	r2, #8192	; 0x2000
   185f4:	bne	185d4 <close_stdout@@Base+0x2da8>
   185f8:	b	1850c <close_stdout@@Base+0x2ce0>
   185fc:	ldr	r0, [sp]
   18600:	add	r4, sp, #24
   18604:	mov	r8, #0
   18608:	str	r0, [sp, #36]	; 0x24
   1860c:	bl	1163c <strlen@plt>
   18610:	ldr	r3, [sp]
   18614:	str	r8, [sp, #24]
   18618:	strb	r8, [sp, #20]
   1861c:	str	r8, [r4, #4]
   18620:	strb	r8, [sp, #32]
   18624:	add	r2, r3, r0
   18628:	str	r2, [sp, #16]
   1862c:	cmp	r3, r2
   18630:	bcs	1876c <close_stdout@@Base+0x2f40>
   18634:	mov	fp, r3
   18638:	add	r9, sp, #48	; 0x30
   1863c:	mov	r7, #1
   18640:	mov	r6, r2
   18644:	b	186b0 <close_stdout@@Base+0x2e84>
   18648:	ldr	r2, [pc, #404]	; 187e4 <close_stdout@@Base+0x2fb8>
   1864c:	ldrb	r3, [fp]
   18650:	ldr	r1, [r5, r2]
   18654:	and	r2, r3, #31
   18658:	lsr	r3, r3, #5
   1865c:	ldr	r3, [r1, r3, lsl #2]
   18660:	lsr	r3, r3, r2
   18664:	tst	r3, #1
   18668:	beq	18724 <close_stdout@@Base+0x2ef8>
   1866c:	str	r7, [sp, #40]	; 0x28
   18670:	ldrb	r6, [fp]
   18674:	ldr	fp, [sp, #36]	; 0x24
   18678:	strb	r7, [sp, #44]	; 0x2c
   1867c:	str	r6, [sp, #48]	; 0x30
   18680:	mov	r0, r6
   18684:	strb	r7, [sp, #32]
   18688:	bl	11624 <iswspace@plt>
   1868c:	cmp	r0, #0
   18690:	beq	184ec <close_stdout@@Base+0x2cc0>
   18694:	ldr	r3, [sp, #40]	; 0x28
   18698:	ldr	r6, [sp, #16]
   1869c:	add	fp, fp, r3
   186a0:	strb	r8, [sp, #32]
   186a4:	cmp	r6, fp
   186a8:	str	fp, [sp, #36]	; 0x24
   186ac:	bls	184ec <close_stdout@@Base+0x2cc0>
   186b0:	ldrb	r3, [sp, #20]
   186b4:	cmp	r3, #0
   186b8:	beq	18648 <close_stdout@@Base+0x2e1c>
   186bc:	ldr	r1, [sp, #36]	; 0x24
   186c0:	mov	r0, r9
   186c4:	mov	r3, r4
   186c8:	rsb	r2, r1, r6
   186cc:	bl	1157c <mbrtowc@plt>
   186d0:	cmn	r0, #1
   186d4:	str	r0, [sp, #40]	; 0x28
   186d8:	beq	184d0 <close_stdout@@Base+0x2ca4>
   186dc:	cmn	r0, #2
   186e0:	ldr	fp, [sp, #36]	; 0x24
   186e4:	beq	18744 <close_stdout@@Base+0x2f18>
   186e8:	cmp	r0, #0
   186ec:	bne	1873c <close_stdout@@Base+0x2f10>
   186f0:	str	r7, [sp, #40]	; 0x28
   186f4:	ldrb	r3, [fp]
   186f8:	cmp	r3, #0
   186fc:	bne	187bc <close_stdout@@Base+0x2f90>
   18700:	ldr	r6, [sp, #48]	; 0x30
   18704:	cmp	r6, #0
   18708:	bne	18798 <close_stdout@@Base+0x2f6c>
   1870c:	mov	r0, r4
   18710:	strb	r7, [sp, #44]	; 0x2c
   18714:	bl	114b0 <mbsinit@plt>
   18718:	cmp	r0, #0
   1871c:	strbne	r8, [sp, #20]
   18720:	b	18680 <close_stdout@@Base+0x2e54>
   18724:	mov	r0, r4
   18728:	bl	114b0 <mbsinit@plt>
   1872c:	cmp	r0, #0
   18730:	beq	18774 <close_stdout@@Base+0x2f48>
   18734:	strb	r7, [sp, #20]
   18738:	b	186bc <close_stdout@@Base+0x2e90>
   1873c:	ldr	r6, [sp, #48]	; 0x30
   18740:	b	1870c <close_stdout@@Base+0x2ee0>
   18744:	ldr	r3, [sp, #16]
   18748:	mov	r2, #0
   1874c:	strb	r2, [sp, #44]	; 0x2c
   18750:	rsb	r3, fp, r3
   18754:	str	r3, [sp, #40]	; 0x28
   18758:	b	184e4 <close_stdout@@Base+0x2cb8>
   1875c:	mov	r5, r3
   18760:	b	18588 <close_stdout@@Base+0x2d5c>
   18764:	ldr	r5, [sp]
   18768:	b	18588 <close_stdout@@Base+0x2d5c>
   1876c:	ldr	fp, [sp]
   18770:	b	184ec <close_stdout@@Base+0x2cc0>
   18774:	ldr	r0, [pc, #108]	; 187e8 <close_stdout@@Base+0x2fbc>
   18778:	mov	r2, #142	; 0x8e
   1877c:	ldr	r1, [pc, #104]	; 187ec <close_stdout@@Base+0x2fc0>
   18780:	ldr	r3, [pc, #104]	; 187f0 <close_stdout@@Base+0x2fc4>
   18784:	add	r0, pc, r0
   18788:	add	r1, pc, r1
   1878c:	add	r3, pc, r3
   18790:	bl	117bc <__assert_fail@plt>
   18794:	bl	114e0 <__stack_chk_fail@plt>
   18798:	ldr	r0, [pc, #84]	; 187f4 <close_stdout@@Base+0x2fc8>
   1879c:	mov	r2, #170	; 0xaa
   187a0:	ldr	r1, [pc, #80]	; 187f8 <close_stdout@@Base+0x2fcc>
   187a4:	ldr	r3, [pc, #80]	; 187fc <close_stdout@@Base+0x2fd0>
   187a8:	add	r0, pc, r0
   187ac:	add	r1, pc, r1
   187b0:	add	r3, pc, r3
   187b4:	bl	117bc <__assert_fail@plt>
   187b8:	bl	18fc0 <close_stdout@@Base+0x3794>
   187bc:	ldr	r0, [pc, #60]	; 18800 <close_stdout@@Base+0x2fd4>
   187c0:	mov	r2, #169	; 0xa9
   187c4:	ldr	r1, [pc, #56]	; 18804 <close_stdout@@Base+0x2fd8>
   187c8:	ldr	r3, [pc, #56]	; 18808 <close_stdout@@Base+0x2fdc>
   187cc:	add	r0, pc, r0
   187d0:	add	r1, pc, r1
   187d4:	add	r3, pc, r3
   187d8:	bl	117bc <__assert_fail@plt>
   187dc:	andeq	r5, r1, ip, lsl #27
   187e0:	andeq	r0, r0, r8, asr r1
   187e4:	andeq	r0, r0, r4, asr r1
   187e8:	andeq	r4, r0, r4, ror r6
   187ec:	andeq	r4, r0, r4, ror r7
   187f0:	andeq	r4, r0, ip, asr r7
   187f4:	muleq	r0, r0, r6
   187f8:	andeq	r4, r0, r0, asr r7
   187fc:	andeq	r4, r0, r8, lsr r7
   18800:	andeq	r4, r0, r4, asr r6
   18804:	andeq	r4, r0, ip, lsr #14
   18808:	andeq	r4, r0, r4, lsl r7
   1880c:	push	{r4, r5, r6, r7, lr}
   18810:	cmp	r1, #0
   18814:	sub	sp, sp, #36	; 0x24
   18818:	ldr	r7, [pc, #896]	; 18ba0 <close_stdout@@Base+0x3374>
   1881c:	mov	ip, r3
   18820:	mov	r5, r0
   18824:	add	r7, pc, r7
   18828:	ldr	r4, [sp, #56]	; 0x38
   1882c:	ldr	r6, [sp, #60]	; 0x3c
   18830:	beq	18b74 <close_stdout@@Base+0x3348>
   18834:	str	r2, [sp]
   18838:	mov	r3, r1
   1883c:	ldr	r2, [pc, #864]	; 18ba4 <close_stdout@@Base+0x3378>
   18840:	mov	r1, #1
   18844:	str	ip, [sp, #4]
   18848:	add	r2, pc, r2
   1884c:	bl	116f0 <__fprintf_chk@plt>
   18850:	ldr	r1, [pc, #848]	; 18ba8 <close_stdout@@Base+0x337c>
   18854:	mov	r2, #5
   18858:	mov	r0, #0
   1885c:	add	r1, pc, r1
   18860:	bl	114d4 <dcgettext@plt>
   18864:	ldr	r2, [pc, #832]	; 18bac <close_stdout@@Base+0x3380>
   18868:	movw	ip, #2013	; 0x7dd
   1886c:	mov	r1, #1
   18870:	ldr	r2, [r7, r2]
   18874:	str	ip, [sp]
   18878:	mov	r3, r0
   1887c:	mov	r0, r5
   18880:	bl	116f0 <__fprintf_chk@plt>
   18884:	ldr	r1, [pc, #804]	; 18bb0 <close_stdout@@Base+0x3384>
   18888:	mov	r0, #0
   1888c:	mov	r2, #5
   18890:	add	r1, pc, r1
   18894:	bl	114d4 <dcgettext@plt>
   18898:	mov	r1, r5
   1889c:	bl	11420 <fputs_unlocked@plt>
   188a0:	cmp	r6, #9
   188a4:	addls	pc, pc, r6, lsl #2
   188a8:	b	18b90 <close_stdout@@Base+0x3364>
   188ac:	b	18940 <close_stdout@@Base+0x3114>
   188b0:	b	18944 <close_stdout@@Base+0x3118>
   188b4:	b	18974 <close_stdout@@Base+0x3148>
   188b8:	b	189a8 <close_stdout@@Base+0x317c>
   188bc:	b	189e4 <close_stdout@@Base+0x31b8>
   188c0:	b	18a24 <close_stdout@@Base+0x31f8>
   188c4:	b	18a6c <close_stdout@@Base+0x3240>
   188c8:	b	18abc <close_stdout@@Base+0x3290>
   188cc:	b	18b14 <close_stdout@@Base+0x32e8>
   188d0:	b	188d4 <close_stdout@@Base+0x30a8>
   188d4:	ldr	r1, [pc, #728]	; 18bb4 <close_stdout@@Base+0x3388>
   188d8:	mov	r0, #0
   188dc:	add	r1, pc, r1
   188e0:	mov	r2, #5
   188e4:	bl	114d4 <dcgettext@plt>
   188e8:	ldm	r4, {r3, ip}
   188ec:	mov	r1, #1
   188f0:	str	ip, [sp]
   188f4:	ldr	ip, [r4, #8]
   188f8:	str	ip, [sp, #4]
   188fc:	ldr	ip, [r4, #12]
   18900:	str	ip, [sp, #8]
   18904:	ldr	ip, [r4, #16]
   18908:	str	ip, [sp, #12]
   1890c:	ldr	ip, [r4, #20]
   18910:	str	ip, [sp, #16]
   18914:	ldr	ip, [r4, #24]
   18918:	str	ip, [sp, #20]
   1891c:	ldr	ip, [r4, #28]
   18920:	str	ip, [sp, #24]
   18924:	ldr	ip, [r4, #32]
   18928:	str	ip, [sp, #28]
   1892c:	mov	r2, r0
   18930:	mov	r0, r5
   18934:	bl	116f0 <__fprintf_chk@plt>
   18938:	add	sp, sp, #36	; 0x24
   1893c:	pop	{r4, r5, r6, r7, pc}
   18940:	bl	117a4 <abort@plt>
   18944:	ldr	r1, [pc, #620]	; 18bb8 <close_stdout@@Base+0x338c>
   18948:	mov	r2, #5
   1894c:	mov	r0, #0
   18950:	add	r1, pc, r1
   18954:	bl	114d4 <dcgettext@plt>
   18958:	ldr	r3, [r4]
   1895c:	mov	r1, #1
   18960:	mov	r2, r0
   18964:	mov	r0, r5
   18968:	add	sp, sp, #36	; 0x24
   1896c:	pop	{r4, r5, r6, r7, lr}
   18970:	b	116f0 <__fprintf_chk@plt>
   18974:	ldr	r1, [pc, #576]	; 18bbc <close_stdout@@Base+0x3390>
   18978:	mov	r2, #5
   1897c:	mov	r0, #0
   18980:	add	r1, pc, r1
   18984:	bl	114d4 <dcgettext@plt>
   18988:	ldm	r4, {r3, ip}
   1898c:	mov	r1, #1
   18990:	str	ip, [sp, #56]	; 0x38
   18994:	mov	r2, r0
   18998:	mov	r0, r5
   1899c:	add	sp, sp, #36	; 0x24
   189a0:	pop	{r4, r5, r6, r7, lr}
   189a4:	b	116f0 <__fprintf_chk@plt>
   189a8:	ldr	r1, [pc, #528]	; 18bc0 <close_stdout@@Base+0x3394>
   189ac:	mov	r2, #5
   189b0:	mov	r0, #0
   189b4:	add	r1, pc, r1
   189b8:	bl	114d4 <dcgettext@plt>
   189bc:	ldm	r4, {r3, ip}
   189c0:	mov	r1, #1
   189c4:	str	ip, [sp, #56]	; 0x38
   189c8:	ldr	ip, [r4, #8]
   189cc:	str	ip, [sp, #60]	; 0x3c
   189d0:	mov	r2, r0
   189d4:	mov	r0, r5
   189d8:	add	sp, sp, #36	; 0x24
   189dc:	pop	{r4, r5, r6, r7, lr}
   189e0:	b	116f0 <__fprintf_chk@plt>
   189e4:	ldr	r1, [pc, #472]	; 18bc4 <close_stdout@@Base+0x3398>
   189e8:	mov	r2, #5
   189ec:	mov	r0, #0
   189f0:	add	r1, pc, r1
   189f4:	bl	114d4 <dcgettext@plt>
   189f8:	ldm	r4, {r3, ip}
   189fc:	mov	r1, #1
   18a00:	str	ip, [sp]
   18a04:	ldr	ip, [r4, #8]
   18a08:	str	ip, [sp, #4]
   18a0c:	ldr	ip, [r4, #12]
   18a10:	str	ip, [sp, #8]
   18a14:	mov	r2, r0
   18a18:	mov	r0, r5
   18a1c:	bl	116f0 <__fprintf_chk@plt>
   18a20:	b	18938 <close_stdout@@Base+0x310c>
   18a24:	ldr	r1, [pc, #412]	; 18bc8 <close_stdout@@Base+0x339c>
   18a28:	mov	r2, #5
   18a2c:	mov	r0, #0
   18a30:	add	r1, pc, r1
   18a34:	bl	114d4 <dcgettext@plt>
   18a38:	ldm	r4, {r3, ip}
   18a3c:	mov	r1, #1
   18a40:	str	ip, [sp]
   18a44:	ldr	ip, [r4, #8]
   18a48:	str	ip, [sp, #4]
   18a4c:	ldr	ip, [r4, #12]
   18a50:	str	ip, [sp, #8]
   18a54:	ldr	ip, [r4, #16]
   18a58:	str	ip, [sp, #12]
   18a5c:	mov	r2, r0
   18a60:	mov	r0, r5
   18a64:	bl	116f0 <__fprintf_chk@plt>
   18a68:	b	18938 <close_stdout@@Base+0x310c>
   18a6c:	ldr	r1, [pc, #344]	; 18bcc <close_stdout@@Base+0x33a0>
   18a70:	mov	r2, #5
   18a74:	mov	r0, #0
   18a78:	add	r1, pc, r1
   18a7c:	bl	114d4 <dcgettext@plt>
   18a80:	ldm	r4, {r3, ip}
   18a84:	mov	r1, #1
   18a88:	str	ip, [sp]
   18a8c:	ldr	ip, [r4, #8]
   18a90:	str	ip, [sp, #4]
   18a94:	ldr	ip, [r4, #12]
   18a98:	str	ip, [sp, #8]
   18a9c:	ldr	ip, [r4, #16]
   18aa0:	str	ip, [sp, #12]
   18aa4:	ldr	ip, [r4, #20]
   18aa8:	str	ip, [sp, #16]
   18aac:	mov	r2, r0
   18ab0:	mov	r0, r5
   18ab4:	bl	116f0 <__fprintf_chk@plt>
   18ab8:	b	18938 <close_stdout@@Base+0x310c>
   18abc:	ldr	r1, [pc, #268]	; 18bd0 <close_stdout@@Base+0x33a4>
   18ac0:	mov	r2, #5
   18ac4:	mov	r0, #0
   18ac8:	add	r1, pc, r1
   18acc:	bl	114d4 <dcgettext@plt>
   18ad0:	ldm	r4, {r3, ip}
   18ad4:	mov	r1, #1
   18ad8:	str	ip, [sp]
   18adc:	ldr	ip, [r4, #8]
   18ae0:	str	ip, [sp, #4]
   18ae4:	ldr	ip, [r4, #12]
   18ae8:	str	ip, [sp, #8]
   18aec:	ldr	ip, [r4, #16]
   18af0:	str	ip, [sp, #12]
   18af4:	ldr	ip, [r4, #20]
   18af8:	str	ip, [sp, #16]
   18afc:	ldr	ip, [r4, #24]
   18b00:	str	ip, [sp, #20]
   18b04:	mov	r2, r0
   18b08:	mov	r0, r5
   18b0c:	bl	116f0 <__fprintf_chk@plt>
   18b10:	b	18938 <close_stdout@@Base+0x310c>
   18b14:	ldr	r1, [pc, #184]	; 18bd4 <close_stdout@@Base+0x33a8>
   18b18:	mov	r2, #5
   18b1c:	mov	r0, #0
   18b20:	add	r1, pc, r1
   18b24:	bl	114d4 <dcgettext@plt>
   18b28:	ldm	r4, {r3, ip}
   18b2c:	mov	r1, #1
   18b30:	str	ip, [sp]
   18b34:	ldr	ip, [r4, #8]
   18b38:	str	ip, [sp, #4]
   18b3c:	ldr	ip, [r4, #12]
   18b40:	str	ip, [sp, #8]
   18b44:	ldr	ip, [r4, #16]
   18b48:	str	ip, [sp, #12]
   18b4c:	ldr	ip, [r4, #20]
   18b50:	str	ip, [sp, #16]
   18b54:	ldr	ip, [r4, #24]
   18b58:	str	ip, [sp, #20]
   18b5c:	ldr	ip, [r4, #28]
   18b60:	str	ip, [sp, #24]
   18b64:	mov	r2, r0
   18b68:	mov	r0, r5
   18b6c:	bl	116f0 <__fprintf_chk@plt>
   18b70:	b	18938 <close_stdout@@Base+0x310c>
   18b74:	str	r3, [sp]
   18b78:	mov	r3, r2
   18b7c:	ldr	r2, [pc, #84]	; 18bd8 <close_stdout@@Base+0x33ac>
   18b80:	mov	r1, #1
   18b84:	add	r2, pc, r2
   18b88:	bl	116f0 <__fprintf_chk@plt>
   18b8c:	b	18850 <close_stdout@@Base+0x3024>
   18b90:	ldr	r1, [pc, #68]	; 18bdc <close_stdout@@Base+0x33b0>
   18b94:	mov	r0, #0
   18b98:	add	r1, pc, r1
   18b9c:	b	188e0 <close_stdout@@Base+0x30b4>
   18ba0:	ldrdeq	r5, [r1], -r4
   18ba4:	andeq	r4, r0, r4, asr #13
   18ba8:	andeq	r4, r0, r4, asr #13
   18bac:	muleq	r0, r4, r1
   18bb0:	muleq	r0, r4, r6
   18bb4:	andeq	r4, r0, r0, lsr #16
   18bb8:	andeq	r4, r0, r0, lsr #13
   18bbc:	andeq	r4, r0, r0, lsl #13
   18bc0:	andeq	r4, r0, r4, ror #12
   18bc4:	andeq	r4, r0, r4, asr #12
   18bc8:	andeq	r4, r0, r4, lsr #12
   18bcc:	andeq	r4, r0, r0, lsl #12
   18bd0:	ldrdeq	r4, [r0], -r8
   18bd4:	andeq	r4, r0, ip, lsr #11
   18bd8:	muleq	r0, r4, r3
   18bdc:	muleq	r0, r8, r5
   18be0:	push	{r4, r5, lr}
   18be4:	sub	sp, sp, #12
   18be8:	ldr	r5, [sp, #24]
   18bec:	ldr	ip, [r5]
   18bf0:	cmp	ip, #0
   18bf4:	beq	18c10 <close_stdout@@Base+0x33e4>
   18bf8:	mov	lr, r5
   18bfc:	mov	ip, #0
   18c00:	ldr	r4, [lr, #4]!
   18c04:	add	ip, ip, #1
   18c08:	cmp	r4, #0
   18c0c:	bne	18c00 <close_stdout@@Base+0x33d4>
   18c10:	stm	sp, {r5, ip}
   18c14:	bl	1880c <close_stdout@@Base+0x2fe0>
   18c18:	add	sp, sp, #12
   18c1c:	pop	{r4, r5, pc}
   18c20:	push	{r4, r5, r6, r7, lr}
   18c24:	sub	sp, sp, #60	; 0x3c
   18c28:	ldr	r4, [pc, #100]	; 18c94 <close_stdout@@Base+0x3468>
   18c2c:	mov	ip, #0
   18c30:	ldr	r5, [pc, #96]	; 18c98 <close_stdout@@Base+0x346c>
   18c34:	mov	lr, ip
   18c38:	add	r4, pc, r4
   18c3c:	ldr	r6, [sp, #80]	; 0x50
   18c40:	ldr	r7, [r4, r5]
   18c44:	add	r5, sp, #12
   18c48:	ldr	r4, [r7]
   18c4c:	str	r4, [sp, #52]	; 0x34
   18c50:	ldr	r4, [r6, ip]
   18c54:	cmp	r4, #0
   18c58:	str	r4, [r5, ip]
   18c5c:	beq	18c70 <close_stdout@@Base+0x3444>
   18c60:	add	lr, lr, #1
   18c64:	add	ip, ip, #4
   18c68:	cmp	lr, #10
   18c6c:	bne	18c50 <close_stdout@@Base+0x3424>
   18c70:	stm	sp, {r5, lr}
   18c74:	bl	1880c <close_stdout@@Base+0x2fe0>
   18c78:	ldr	r2, [sp, #52]	; 0x34
   18c7c:	ldr	r3, [r7]
   18c80:	cmp	r2, r3
   18c84:	bne	18c90 <close_stdout@@Base+0x3464>
   18c88:	add	sp, sp, #60	; 0x3c
   18c8c:	pop	{r4, r5, r6, r7, pc}
   18c90:	bl	114e0 <__stack_chk_fail@plt>
   18c94:	andeq	r5, r1, r0, asr #7
   18c98:	andeq	r0, r0, r8, asr r1
   18c9c:	push	{r3}		; (str r3, [sp, #-4]!)
   18ca0:	push	{r4, lr}
   18ca4:	sub	sp, sp, #20
   18ca8:	ldr	lr, [pc, #72]	; 18cf8 <close_stdout@@Base+0x34cc>
   18cac:	add	ip, sp, #32
   18cb0:	ldr	r4, [pc, #68]	; 18cfc <close_stdout@@Base+0x34d0>
   18cb4:	add	lr, pc, lr
   18cb8:	ldr	r3, [sp, #28]
   18cbc:	ldr	r4, [lr, r4]
   18cc0:	str	ip, [sp]
   18cc4:	str	ip, [sp, #8]
   18cc8:	ldr	ip, [r4]
   18ccc:	str	ip, [sp, #12]
   18cd0:	bl	18c20 <close_stdout@@Base+0x33f4>
   18cd4:	ldr	r2, [sp, #12]
   18cd8:	ldr	r3, [r4]
   18cdc:	cmp	r2, r3
   18ce0:	bne	18cf4 <close_stdout@@Base+0x34c8>
   18ce4:	add	sp, sp, #20
   18ce8:	pop	{r4, lr}
   18cec:	add	sp, sp, #4
   18cf0:	bx	lr
   18cf4:	bl	114e0 <__stack_chk_fail@plt>
   18cf8:	andeq	r5, r1, r4, asr #6
   18cfc:	andeq	r0, r0, r8, asr r1
   18d00:	ldr	r1, [pc, #132]	; 18d8c <close_stdout@@Base+0x3560>
   18d04:	mov	r2, #5
   18d08:	push	{r4, lr}
   18d0c:	add	r1, pc, r1
   18d10:	mov	r0, #0
   18d14:	ldr	r4, [pc, #116]	; 18d90 <close_stdout@@Base+0x3564>
   18d18:	bl	114d4 <dcgettext@plt>
   18d1c:	ldr	r2, [pc, #112]	; 18d94 <close_stdout@@Base+0x3568>
   18d20:	add	r4, pc, r4
   18d24:	add	r2, pc, r2
   18d28:	mov	r1, r0
   18d2c:	mov	r0, #1
   18d30:	bl	116d8 <__printf_chk@plt>
   18d34:	ldr	r1, [pc, #92]	; 18d98 <close_stdout@@Base+0x356c>
   18d38:	mov	r2, #5
   18d3c:	mov	r0, #0
   18d40:	add	r1, pc, r1
   18d44:	bl	114d4 <dcgettext@plt>
   18d48:	ldr	r2, [pc, #76]	; 18d9c <close_stdout@@Base+0x3570>
   18d4c:	ldr	r3, [pc, #76]	; 18da0 <close_stdout@@Base+0x3574>
   18d50:	add	r2, pc, r2
   18d54:	add	r3, pc, r3
   18d58:	mov	r1, r0
   18d5c:	mov	r0, #1
   18d60:	bl	116d8 <__printf_chk@plt>
   18d64:	ldr	r1, [pc, #56]	; 18da4 <close_stdout@@Base+0x3578>
   18d68:	mov	r0, #0
   18d6c:	mov	r2, #5
   18d70:	add	r1, pc, r1
   18d74:	bl	114d4 <dcgettext@plt>
   18d78:	ldr	r3, [pc, #40]	; 18da8 <close_stdout@@Base+0x357c>
   18d7c:	ldr	r3, [r4, r3]
   18d80:	pop	{r4, lr}
   18d84:	ldr	r1, [r3]
   18d88:	b	11420 <fputs_unlocked@plt>
   18d8c:	andeq	r4, r0, r0, ror #8
   18d90:	ldrdeq	r5, [r1], -r8
   18d94:	andeq	r4, r0, r0, ror #8
   18d98:	andeq	r4, r0, ip, asr r4
   18d9c:	andeq	r3, r0, r4, lsl fp
   18da0:	andeq	r3, r0, r0, lsr #22
   18da4:	andeq	r4, r0, r0, asr #8
   18da8:	andeq	r0, r0, r4, lsl #3
   18dac:	push	{r4, lr}
   18db0:	mov	r4, r0
   18db4:	bl	115ac <malloc@plt>
   18db8:	rsbs	r3, r0, #1
   18dbc:	movcc	r3, #0
   18dc0:	cmp	r4, #0
   18dc4:	moveq	r3, #0
   18dc8:	cmp	r3, #0
   18dcc:	popeq	{r4, pc}
   18dd0:	bl	18fc0 <close_stdout@@Base+0x3794>
   18dd4:	push	{r3, r4, r5, lr}
   18dd8:	mov	r4, r0
   18ddc:	mvn	r0, #0
   18de0:	mov	r5, r1
   18de4:	bl	1be4c <close_stdout@@Base+0x6620>
   18de8:	cmp	r0, r4
   18dec:	bcc	18dfc <close_stdout@@Base+0x35d0>
   18df0:	mul	r0, r4, r5
   18df4:	pop	{r3, r4, r5, lr}
   18df8:	b	18dac <close_stdout@@Base+0x3580>
   18dfc:	bl	18fc0 <close_stdout@@Base+0x3794>
   18e00:	b	18dac <close_stdout@@Base+0x3580>
   18e04:	rsbs	r3, r1, #1
   18e08:	push	{r4, lr}
   18e0c:	movcc	r3, #0
   18e10:	cmp	r0, #0
   18e14:	mov	r4, r1
   18e18:	moveq	r3, #0
   18e1c:	cmp	r3, #0
   18e20:	bne	18e44 <close_stdout@@Base+0x3618>
   18e24:	bl	114f8 <realloc@plt>
   18e28:	rsbs	r3, r0, #1
   18e2c:	movcc	r3, #0
   18e30:	cmp	r4, #0
   18e34:	moveq	r3, #0
   18e38:	cmp	r3, #0
   18e3c:	popeq	{r4, pc}
   18e40:	bl	18fc0 <close_stdout@@Base+0x3794>
   18e44:	bl	11480 <free@plt>
   18e48:	mov	r0, #0
   18e4c:	pop	{r4, pc}
   18e50:	push	{r4, r5, r6, lr}
   18e54:	mov	r5, r1
   18e58:	mov	r6, r0
   18e5c:	mov	r1, r2
   18e60:	mvn	r0, #0
   18e64:	mov	r4, r2
   18e68:	bl	1be4c <close_stdout@@Base+0x6620>
   18e6c:	cmp	r0, r5
   18e70:	bcc	18e84 <close_stdout@@Base+0x3658>
   18e74:	mov	r0, r6
   18e78:	mul	r1, r5, r4
   18e7c:	pop	{r4, r5, r6, lr}
   18e80:	b	18e04 <close_stdout@@Base+0x35d8>
   18e84:	bl	18fc0 <close_stdout@@Base+0x3794>
   18e88:	push	{r3, r4, r5, r6, r7, lr}
   18e8c:	subs	r7, r0, #0
   18e90:	mov	r5, r1
   18e94:	mov	r6, r2
   18e98:	ldr	r4, [r1]
   18e9c:	beq	18ed4 <close_stdout@@Base+0x36a8>
   18ea0:	movw	r0, #43690	; 0xaaaa
   18ea4:	mov	r1, r2
   18ea8:	bfi	r0, r0, #16, #16
   18eac:	bl	1be4c <close_stdout@@Base+0x6620>
   18eb0:	cmp	r4, r0
   18eb4:	addcc	r3, r4, #1
   18eb8:	addcc	r4, r4, r3, lsr #1
   18ebc:	bcs	18ef8 <close_stdout@@Base+0x36cc>
   18ec0:	str	r4, [r5]
   18ec4:	mov	r0, r7
   18ec8:	mul	r1, r6, r4
   18ecc:	pop	{r3, r4, r5, r6, r7, lr}
   18ed0:	b	18e04 <close_stdout@@Base+0x35d8>
   18ed4:	cmp	r4, #0
   18ed8:	bne	18ec0 <close_stdout@@Base+0x3694>
   18edc:	mov	r0, #64	; 0x40
   18ee0:	mov	r1, r2
   18ee4:	bl	1be4c <close_stdout@@Base+0x6620>
   18ee8:	cmp	r0, #0
   18eec:	movne	r4, r0
   18ef0:	addeq	r4, r0, #1
   18ef4:	b	18ec0 <close_stdout@@Base+0x3694>
   18ef8:	bl	18fc0 <close_stdout@@Base+0x3794>
   18efc:	cmp	r0, #0
   18f00:	push	{r3, lr}
   18f04:	ldr	r3, [r1]
   18f08:	beq	18f34 <close_stdout@@Base+0x3708>
   18f0c:	movw	r2, #43689	; 0xaaa9
   18f10:	movt	r2, #43690	; 0xaaaa
   18f14:	cmp	r3, r2
   18f18:	addls	r2, r3, #1
   18f1c:	addls	r3, r3, r2, lsr #1
   18f20:	bhi	18f4c <close_stdout@@Base+0x3720>
   18f24:	str	r3, [r1]
   18f28:	mov	r1, r3
   18f2c:	pop	{r3, lr}
   18f30:	b	18e04 <close_stdout@@Base+0x35d8>
   18f34:	cmp	r3, #0
   18f38:	moveq	r3, #64	; 0x40
   18f3c:	str	r3, [r1]
   18f40:	mov	r1, r3
   18f44:	pop	{r3, lr}
   18f48:	b	18e04 <close_stdout@@Base+0x35d8>
   18f4c:	bl	18fc0 <close_stdout@@Base+0x3794>
   18f50:	push	{r4, lr}
   18f54:	mov	r4, r0
   18f58:	bl	18dac <close_stdout@@Base+0x3580>
   18f5c:	mov	r2, r4
   18f60:	mov	r1, #0
   18f64:	pop	{r4, lr}
   18f68:	b	116b4 <memset@plt>
   18f6c:	push	{r3, lr}
   18f70:	bl	11414 <calloc@plt>
   18f74:	cmp	r0, #0
   18f78:	popne	{r3, pc}
   18f7c:	bl	18fc0 <close_stdout@@Base+0x3794>
   18f80:	push	{r3, r4, r5, lr}
   18f84:	mov	r4, r1
   18f88:	mov	r5, r0
   18f8c:	mov	r0, r1
   18f90:	bl	18dac <close_stdout@@Base+0x3580>
   18f94:	mov	r1, r5
   18f98:	mov	r2, r4
   18f9c:	pop	{r3, r4, r5, lr}
   18fa0:	b	114a4 <memcpy@plt>
   18fa4:	push	{r4, lr}
   18fa8:	mov	r4, r0
   18fac:	bl	1163c <strlen@plt>
   18fb0:	add	r1, r0, #1
   18fb4:	mov	r0, r4
   18fb8:	pop	{r4, lr}
   18fbc:	b	18f80 <close_stdout@@Base+0x3754>
   18fc0:	ldr	r3, [pc, #64]	; 19008 <close_stdout@@Base+0x37dc>
   18fc4:	mov	r2, #5
   18fc8:	ldr	ip, [pc, #60]	; 1900c <close_stdout@@Base+0x37e0>
   18fcc:	mov	r0, #0
   18fd0:	add	r3, pc, r3
   18fd4:	ldr	r1, [pc, #52]	; 19010 <close_stdout@@Base+0x37e4>
   18fd8:	push	{r4, lr}
   18fdc:	add	r1, pc, r1
   18fe0:	ldr	r3, [r3, ip]
   18fe4:	ldr	r4, [r3]
   18fe8:	bl	114d4 <dcgettext@plt>
   18fec:	ldr	r2, [pc, #32]	; 19014 <close_stdout@@Base+0x37e8>
   18ff0:	mov	r1, #0
   18ff4:	add	r2, pc, r2
   18ff8:	mov	r3, r0
   18ffc:	mov	r0, r4
   19000:	bl	11588 <error@plt>
   19004:	bl	117a4 <abort@plt>
   19008:	andeq	r5, r1, r8, lsr #32
   1900c:	andeq	r0, r0, r8, lsl #3
   19010:	andeq	r4, r0, r4, asr #4
   19014:	andeq	r3, r0, r8, ror r9
   19018:	push	{r4, lr}
   1901c:	sub	sp, sp, #8
   19020:	ldr	ip, [sp, #16]
   19024:	str	ip, [sp]
   19028:	bl	1b4a8 <close_stdout@@Base+0x5c7c>
   1902c:	subs	r4, r0, #0
   19030:	blt	19040 <close_stdout@@Base+0x3814>
   19034:	mov	r0, r4
   19038:	add	sp, sp, #8
   1903c:	pop	{r4, pc}
   19040:	bl	11678 <__errno_location@plt>
   19044:	ldr	r3, [r0]
   19048:	cmp	r3, #12
   1904c:	bne	19034 <close_stdout@@Base+0x3808>
   19050:	bl	18fc0 <close_stdout@@Base+0x3794>
   19054:	push	{r4, lr}
   19058:	bl	1b80c <close_stdout@@Base+0x5fe0>
   1905c:	subs	r4, r0, #0
   19060:	beq	1906c <close_stdout@@Base+0x3840>
   19064:	mov	r0, r4
   19068:	pop	{r4, pc}
   1906c:	bl	11678 <__errno_location@plt>
   19070:	ldr	r3, [r0]
   19074:	cmp	r3, #12
   19078:	bne	19064 <close_stdout@@Base+0x3838>
   1907c:	bl	18fc0 <close_stdout@@Base+0x3794>
   19080:	push	{r4, lr}
   19084:	bl	1ba28 <close_stdout@@Base+0x61fc>
   19088:	subs	r4, r0, #0
   1908c:	beq	19098 <close_stdout@@Base+0x386c>
   19090:	mov	r0, r4
   19094:	pop	{r4, pc}
   19098:	bl	11678 <__errno_location@plt>
   1909c:	ldr	r3, [r0]
   190a0:	cmp	r3, #12
   190a4:	bne	19090 <close_stdout@@Base+0x3864>
   190a8:	bl	18fc0 <close_stdout@@Base+0x3794>
   190ac:	ldr	ip, [pc, #1308]	; 195d0 <close_stdout@@Base+0x3da4>
   190b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190b4:	mov	sl, r2
   190b8:	ldr	r2, [pc, #1300]	; 195d4 <close_stdout@@Base+0x3da8>
   190bc:	add	ip, pc, ip
   190c0:	mov	r9, r3
   190c4:	sub	sp, sp, #20
   190c8:	mov	r3, ip
   190cc:	cmp	sl, #36	; 0x24
   190d0:	ldr	r6, [ip, r2]
   190d4:	mov	r5, r0
   190d8:	mov	r7, r1
   190dc:	ldr	r8, [sp, #56]	; 0x38
   190e0:	ldr	r3, [r6]
   190e4:	str	r3, [sp, #12]
   190e8:	bhi	195b0 <close_stdout@@Base+0x3d84>
   190ec:	cmp	r1, #0
   190f0:	addeq	r7, sp, #8
   190f4:	bl	1160c <__ctype_b_loc@plt>
   190f8:	ldrb	ip, [r5]
   190fc:	mov	r2, r5
   19100:	ldr	r1, [r0]
   19104:	b	1910c <close_stdout@@Base+0x38e0>
   19108:	ldrb	ip, [r2, #1]!
   1910c:	lsl	r3, ip, #1
   19110:	ldrh	r4, [r1, r3]
   19114:	and	r4, r4, #8192	; 0x2000
   19118:	uxth	r4, r4
   1911c:	cmp	r4, #0
   19120:	bne	19108 <close_stdout@@Base+0x38dc>
   19124:	cmp	ip, #45	; 0x2d
   19128:	bne	19148 <close_stdout@@Base+0x391c>
   1912c:	mov	r0, #4
   19130:	ldr	r2, [sp, #12]
   19134:	ldr	r3, [r6]
   19138:	cmp	r2, r3
   1913c:	bne	195ac <close_stdout@@Base+0x3d80>
   19140:	add	sp, sp, #20
   19144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19148:	bl	11678 <__errno_location@plt>
   1914c:	mov	r2, sl
   19150:	mov	r1, r7
   19154:	str	r4, [r0]
   19158:	mov	fp, r0
   1915c:	mov	r0, r5
   19160:	bl	11630 <strtoul@plt>
   19164:	ldr	r3, [r7]
   19168:	cmp	r3, r5
   1916c:	mov	sl, r0
   19170:	beq	19300 <close_stdout@@Base+0x3ad4>
   19174:	ldr	r0, [fp]
   19178:	cmp	r0, #0
   1917c:	bne	191ac <close_stdout@@Base+0x3980>
   19180:	mov	r4, r0
   19184:	cmp	r8, #0
   19188:	streq	sl, [r9]
   1918c:	moveq	r0, r4
   19190:	beq	19130 <close_stdout@@Base+0x3904>
   19194:	ldrb	r5, [r3]
   19198:	cmp	r5, #0
   1919c:	bne	191bc <close_stdout@@Base+0x3990>
   191a0:	mov	r0, r4
   191a4:	str	sl, [r9]
   191a8:	b	19130 <close_stdout@@Base+0x3904>
   191ac:	cmp	r0, #34	; 0x22
   191b0:	moveq	r4, #1
   191b4:	bne	1912c <close_stdout@@Base+0x3900>
   191b8:	b	19184 <close_stdout@@Base+0x3958>
   191bc:	mov	r0, r8
   191c0:	mov	r1, r5
   191c4:	str	r3, [sp, #4]
   191c8:	bl	11648 <strchr@plt>
   191cc:	ldr	r3, [sp, #4]
   191d0:	cmp	r0, #0
   191d4:	beq	19338 <close_stdout@@Base+0x3b0c>
   191d8:	mov	r0, r8
   191dc:	mov	r1, #48	; 0x30
   191e0:	str	r3, [sp, #4]
   191e4:	bl	11648 <strchr@plt>
   191e8:	ldr	r3, [sp, #4]
   191ec:	cmp	r0, #0
   191f0:	beq	19210 <close_stdout@@Base+0x39e4>
   191f4:	ldrb	r2, [r3, #1]
   191f8:	cmp	r2, #68	; 0x44
   191fc:	beq	19594 <close_stdout@@Base+0x3d68>
   19200:	cmp	r2, #105	; 0x69
   19204:	beq	1957c <close_stdout@@Base+0x3d50>
   19208:	cmp	r2, #66	; 0x42
   1920c:	beq	19594 <close_stdout@@Base+0x3d68>
   19210:	mov	r8, #1
   19214:	mov	fp, #1024	; 0x400
   19218:	sub	r5, r5, #66	; 0x42
   1921c:	cmp	r5, #53	; 0x35
   19220:	addls	pc, pc, r5, lsl #2
   19224:	b	19338 <close_stdout@@Base+0x3b0c>
   19228:	b	19528 <close_stdout@@Base+0x3cfc>
   1922c:	b	19338 <close_stdout@@Base+0x3b0c>
   19230:	b	19338 <close_stdout@@Base+0x3b0c>
   19234:	b	194e8 <close_stdout@@Base+0x3cbc>
   19238:	b	19338 <close_stdout@@Base+0x3b0c>
   1923c:	b	1953c <close_stdout@@Base+0x3d10>
   19240:	b	19338 <close_stdout@@Base+0x3b0c>
   19244:	b	19338 <close_stdout@@Base+0x3b0c>
   19248:	b	19338 <close_stdout@@Base+0x3b0c>
   1924c:	b	194c8 <close_stdout@@Base+0x3c9c>
   19250:	b	19338 <close_stdout@@Base+0x3b0c>
   19254:	b	19494 <close_stdout@@Base+0x3c68>
   19258:	b	19338 <close_stdout@@Base+0x3b0c>
   1925c:	b	19338 <close_stdout@@Base+0x3b0c>
   19260:	b	19454 <close_stdout@@Base+0x3c28>
   19264:	b	19338 <close_stdout@@Base+0x3b0c>
   19268:	b	19338 <close_stdout@@Base+0x3b0c>
   1926c:	b	19338 <close_stdout@@Base+0x3b0c>
   19270:	b	19414 <close_stdout@@Base+0x3be8>
   19274:	b	19338 <close_stdout@@Base+0x3b0c>
   19278:	b	19338 <close_stdout@@Base+0x3b0c>
   1927c:	b	19338 <close_stdout@@Base+0x3b0c>
   19280:	b	19338 <close_stdout@@Base+0x3b0c>
   19284:	b	193d4 <close_stdout@@Base+0x3ba8>
   19288:	b	19394 <close_stdout@@Base+0x3b68>
   1928c:	b	19338 <close_stdout@@Base+0x3b0c>
   19290:	b	19338 <close_stdout@@Base+0x3b0c>
   19294:	b	19338 <close_stdout@@Base+0x3b0c>
   19298:	b	19338 <close_stdout@@Base+0x3b0c>
   1929c:	b	19338 <close_stdout@@Base+0x3b0c>
   192a0:	b	19338 <close_stdout@@Base+0x3b0c>
   192a4:	b	19338 <close_stdout@@Base+0x3b0c>
   192a8:	b	19380 <close_stdout@@Base+0x3b54>
   192ac:	b	19344 <close_stdout@@Base+0x3b18>
   192b0:	b	19338 <close_stdout@@Base+0x3b0c>
   192b4:	b	19338 <close_stdout@@Base+0x3b0c>
   192b8:	b	19338 <close_stdout@@Base+0x3b0c>
   192bc:	b	1953c <close_stdout@@Base+0x3d10>
   192c0:	b	19338 <close_stdout@@Base+0x3b0c>
   192c4:	b	19338 <close_stdout@@Base+0x3b0c>
   192c8:	b	19338 <close_stdout@@Base+0x3b0c>
   192cc:	b	194c8 <close_stdout@@Base+0x3c9c>
   192d0:	b	19338 <close_stdout@@Base+0x3b0c>
   192d4:	b	19494 <close_stdout@@Base+0x3c68>
   192d8:	b	19338 <close_stdout@@Base+0x3b0c>
   192dc:	b	19338 <close_stdout@@Base+0x3b0c>
   192e0:	b	19338 <close_stdout@@Base+0x3b0c>
   192e4:	b	19338 <close_stdout@@Base+0x3b0c>
   192e8:	b	19338 <close_stdout@@Base+0x3b0c>
   192ec:	b	19338 <close_stdout@@Base+0x3b0c>
   192f0:	b	19414 <close_stdout@@Base+0x3be8>
   192f4:	b	19338 <close_stdout@@Base+0x3b0c>
   192f8:	b	19338 <close_stdout@@Base+0x3b0c>
   192fc:	b	19364 <close_stdout@@Base+0x3b38>
   19300:	cmp	r8, #0
   19304:	beq	1912c <close_stdout@@Base+0x3900>
   19308:	ldrb	r5, [r5]
   1930c:	cmp	r5, #0
   19310:	beq	1912c <close_stdout@@Base+0x3900>
   19314:	mov	r0, r8
   19318:	mov	r1, r5
   1931c:	str	r3, [sp, #4]
   19320:	bl	11648 <strchr@plt>
   19324:	ldr	r3, [sp, #4]
   19328:	cmp	r0, #0
   1932c:	movne	sl, #1
   19330:	bne	191d8 <close_stdout@@Base+0x39ac>
   19334:	b	1912c <close_stdout@@Base+0x3900>
   19338:	str	sl, [r9]
   1933c:	orr	r0, r4, #2
   19340:	b	19130 <close_stdout@@Base+0x3904>
   19344:	mov	r2, #0
   19348:	add	r1, r3, r8
   1934c:	str	r1, [r7]
   19350:	ldrb	r3, [r3, r8]
   19354:	orr	r4, r4, r2
   19358:	cmp	r3, #0
   1935c:	orrne	r4, r4, #2
   19360:	b	191a0 <close_stdout@@Base+0x3974>
   19364:	cmn	sl, #-2147483647	; 0x80000001
   19368:	lslls	sl, sl, #1
   1936c:	movls	r2, #0
   19370:	bls	19348 <close_stdout@@Base+0x3b1c>
   19374:	mvn	sl, #0
   19378:	mov	r2, #1
   1937c:	b	19348 <close_stdout@@Base+0x3b1c>
   19380:	cmp	sl, #8388608	; 0x800000
   19384:	lslcc	sl, sl, #9
   19388:	movcc	r2, #0
   1938c:	bcc	19348 <close_stdout@@Base+0x3b1c>
   19390:	b	19374 <close_stdout@@Base+0x3b48>
   19394:	mov	r1, fp
   19398:	mvn	r0, #0
   1939c:	str	r3, [sp, #4]
   193a0:	bl	1be4c <close_stdout@@Base+0x6620>
   193a4:	ldr	r3, [sp, #4]
   193a8:	mov	r1, #7
   193ac:	mov	r2, #0
   193b0:	cmp	r0, sl
   193b4:	movcs	ip, #0
   193b8:	movcc	ip, #1
   193bc:	mulcs	sl, fp, sl
   193c0:	mvncc	sl, #0
   193c4:	subs	r1, r1, #1
   193c8:	orr	r2, r2, ip
   193cc:	bne	193b0 <close_stdout@@Base+0x3b84>
   193d0:	b	19348 <close_stdout@@Base+0x3b1c>
   193d4:	mov	r1, fp
   193d8:	mvn	r0, #0
   193dc:	str	r3, [sp, #4]
   193e0:	bl	1be4c <close_stdout@@Base+0x6620>
   193e4:	ldr	r3, [sp, #4]
   193e8:	mov	r1, #8
   193ec:	mov	r2, #0
   193f0:	cmp	r0, sl
   193f4:	movcs	ip, #0
   193f8:	movcc	ip, #1
   193fc:	mulcs	sl, fp, sl
   19400:	mvncc	sl, #0
   19404:	subs	r1, r1, #1
   19408:	orr	r2, r2, ip
   1940c:	bne	193f0 <close_stdout@@Base+0x3bc4>
   19410:	b	19348 <close_stdout@@Base+0x3b1c>
   19414:	mov	r1, fp
   19418:	mvn	r0, #0
   1941c:	str	r3, [sp, #4]
   19420:	bl	1be4c <close_stdout@@Base+0x6620>
   19424:	ldr	r3, [sp, #4]
   19428:	mov	r1, #4
   1942c:	mov	r2, #0
   19430:	cmp	r0, sl
   19434:	movcs	ip, #0
   19438:	movcc	ip, #1
   1943c:	mulcs	sl, fp, sl
   19440:	mvncc	sl, #0
   19444:	subs	r1, r1, #1
   19448:	orr	r2, r2, ip
   1944c:	bne	19430 <close_stdout@@Base+0x3c04>
   19450:	b	19348 <close_stdout@@Base+0x3b1c>
   19454:	mov	r1, fp
   19458:	mvn	r0, #0
   1945c:	str	r3, [sp, #4]
   19460:	bl	1be4c <close_stdout@@Base+0x6620>
   19464:	ldr	r3, [sp, #4]
   19468:	mov	r1, #5
   1946c:	mov	r2, #0
   19470:	cmp	r0, sl
   19474:	movcs	ip, #0
   19478:	movcc	ip, #1
   1947c:	mulcs	sl, fp, sl
   19480:	mvncc	sl, #0
   19484:	subs	r1, r1, #1
   19488:	orr	r2, r2, ip
   1948c:	bne	19470 <close_stdout@@Base+0x3c44>
   19490:	b	19348 <close_stdout@@Base+0x3b1c>
   19494:	mvn	r0, #0
   19498:	mov	r1, fp
   1949c:	str	r3, [sp, #4]
   194a0:	bl	1be4c <close_stdout@@Base+0x6620>
   194a4:	ldr	r3, [sp, #4]
   194a8:	cmp	sl, r0
   194ac:	bhi	195a0 <close_stdout@@Base+0x3d74>
   194b0:	mul	sl, sl, fp
   194b4:	cmp	r0, sl
   194b8:	bcc	195a0 <close_stdout@@Base+0x3d74>
   194bc:	mul	sl, fp, sl
   194c0:	mov	r2, #0
   194c4:	b	19348 <close_stdout@@Base+0x3b1c>
   194c8:	mvn	r0, #0
   194cc:	mov	r1, fp
   194d0:	str	r3, [sp, #4]
   194d4:	bl	1be4c <close_stdout@@Base+0x6620>
   194d8:	ldr	r3, [sp, #4]
   194dc:	cmp	sl, r0
   194e0:	bhi	19374 <close_stdout@@Base+0x3b48>
   194e4:	b	194bc <close_stdout@@Base+0x3c90>
   194e8:	mov	r1, fp
   194ec:	mvn	r0, #0
   194f0:	str	r3, [sp, #4]
   194f4:	bl	1be4c <close_stdout@@Base+0x6620>
   194f8:	ldr	r3, [sp, #4]
   194fc:	mov	r1, #6
   19500:	mov	r2, #0
   19504:	cmp	r0, sl
   19508:	movcs	ip, #0
   1950c:	movcc	ip, #1
   19510:	mulcs	sl, fp, sl
   19514:	mvncc	sl, #0
   19518:	subs	r1, r1, #1
   1951c:	orr	r2, r2, ip
   19520:	bne	19504 <close_stdout@@Base+0x3cd8>
   19524:	b	19348 <close_stdout@@Base+0x3b1c>
   19528:	cmp	sl, #4194304	; 0x400000
   1952c:	lslcc	sl, sl, #10
   19530:	movcc	r2, #0
   19534:	bcc	19348 <close_stdout@@Base+0x3b1c>
   19538:	b	19374 <close_stdout@@Base+0x3b48>
   1953c:	mov	r1, fp
   19540:	mvn	r0, #0
   19544:	str	r3, [sp, #4]
   19548:	bl	1be4c <close_stdout@@Base+0x6620>
   1954c:	ldr	r3, [sp, #4]
   19550:	mov	r1, #3
   19554:	mov	r2, #0
   19558:	cmp	r0, sl
   1955c:	movcs	ip, #0
   19560:	movcc	ip, #1
   19564:	mulcs	sl, fp, sl
   19568:	mvncc	sl, #0
   1956c:	subs	r1, r1, #1
   19570:	orr	r2, r2, ip
   19574:	bne	19558 <close_stdout@@Base+0x3d2c>
   19578:	b	19348 <close_stdout@@Base+0x3b1c>
   1957c:	ldrb	r8, [r3, #2]
   19580:	mov	fp, #1024	; 0x400
   19584:	cmp	r8, #66	; 0x42
   19588:	moveq	r8, #3
   1958c:	movne	r8, #1
   19590:	b	19218 <close_stdout@@Base+0x39ec>
   19594:	mov	r8, #2
   19598:	mov	fp, #1000	; 0x3e8
   1959c:	b	19218 <close_stdout@@Base+0x39ec>
   195a0:	mov	r2, #1
   195a4:	mvn	sl, #0
   195a8:	b	19348 <close_stdout@@Base+0x3b1c>
   195ac:	bl	114e0 <__stack_chk_fail@plt>
   195b0:	ldr	r0, [pc, #32]	; 195d8 <close_stdout@@Base+0x3dac>
   195b4:	mov	r2, #96	; 0x60
   195b8:	ldr	r1, [pc, #28]	; 195dc <close_stdout@@Base+0x3db0>
   195bc:	ldr	r3, [pc, #28]	; 195e0 <close_stdout@@Base+0x3db4>
   195c0:	add	r0, pc, r0
   195c4:	add	r1, pc, r1
   195c8:	add	r3, pc, r3
   195cc:	bl	117bc <__assert_fail@plt>
   195d0:	andeq	r4, r1, ip, lsr pc
   195d4:	andeq	r0, r0, r8, asr r1
   195d8:	andeq	r3, r0, r0, lsl #25
   195dc:	andeq	r3, r0, r4, lsr #25
   195e0:	andeq	r3, r0, ip, ror #24
   195e4:	push	{r4, r5, r6, lr}
   195e8:	sub	sp, sp, #8
   195ec:	mov	r4, r0
   195f0:	bl	116e4 <fileno@plt>
   195f4:	cmp	r0, #0
   195f8:	mov	r0, r4
   195fc:	blt	19678 <close_stdout@@Base+0x3e4c>
   19600:	bl	115d0 <__freading@plt>
   19604:	cmp	r0, #0
   19608:	bne	19644 <close_stdout@@Base+0x3e18>
   1960c:	mov	r0, r4
   19610:	bl	19684 <close_stdout@@Base+0x3e58>
   19614:	cmp	r0, #0
   19618:	beq	19674 <close_stdout@@Base+0x3e48>
   1961c:	bl	11678 <__errno_location@plt>
   19620:	ldr	r6, [r0]
   19624:	mov	r5, r0
   19628:	mov	r0, r4
   1962c:	bl	11708 <fclose@plt>
   19630:	cmp	r6, #0
   19634:	mvnne	r0, #0
   19638:	strne	r6, [r5]
   1963c:	add	sp, sp, #8
   19640:	pop	{r4, r5, r6, pc}
   19644:	mov	r0, r4
   19648:	bl	116e4 <fileno@plt>
   1964c:	mov	r1, #1
   19650:	mov	r2, #0
   19654:	mov	r3, #0
   19658:	str	r1, [sp]
   1965c:	bl	11540 <lseek64@plt>
   19660:	mvn	r2, #0
   19664:	mvn	r3, #0
   19668:	cmp	r1, r3
   1966c:	cmpeq	r0, r2
   19670:	bne	1960c <close_stdout@@Base+0x3de0>
   19674:	mov	r0, r4
   19678:	add	sp, sp, #8
   1967c:	pop	{r4, r5, r6, lr}
   19680:	b	11708 <fclose@plt>
   19684:	push	{r4, lr}
   19688:	subs	r4, r0, #0
   1968c:	sub	sp, sp, #8
   19690:	beq	196a0 <close_stdout@@Base+0x3e74>
   19694:	bl	115d0 <__freading@plt>
   19698:	cmp	r0, #0
   1969c:	bne	196b0 <close_stdout@@Base+0x3e84>
   196a0:	mov	r0, r4
   196a4:	add	sp, sp, #8
   196a8:	pop	{r4, lr}
   196ac:	b	1145c <fflush@plt>
   196b0:	ldr	r3, [r4]
   196b4:	tst	r3, #256	; 0x100
   196b8:	beq	196a0 <close_stdout@@Base+0x3e74>
   196bc:	mov	r3, #1
   196c0:	mov	r0, r4
   196c4:	str	r3, [sp]
   196c8:	mov	r2, #0
   196cc:	mov	r3, #0
   196d0:	bl	196e4 <close_stdout@@Base+0x3eb8>
   196d4:	mov	r0, r4
   196d8:	add	sp, sp, #8
   196dc:	pop	{r4, lr}
   196e0:	b	1145c <fflush@plt>
   196e4:	push	{r4, r5, r6, r7, lr}
   196e8:	sub	sp, sp, #20
   196ec:	ldmib	r0, {r1, ip}
   196f0:	mov	r6, r0
   196f4:	ldr	r4, [sp, #40]	; 0x28
   196f8:	cmp	ip, r1
   196fc:	beq	19714 <close_stdout@@Base+0x3ee8>
   19700:	str	r4, [sp, #40]	; 0x28
   19704:	mov	r0, r6
   19708:	add	sp, sp, #20
   1970c:	pop	{r4, r5, r6, r7, lr}
   19710:	b	11720 <fseeko64@plt>
   19714:	ldr	ip, [r0, #20]
   19718:	ldr	r1, [r0, #16]
   1971c:	cmp	ip, r1
   19720:	bne	19700 <close_stdout@@Base+0x3ed4>
   19724:	ldr	r7, [r0, #36]	; 0x24
   19728:	cmp	r7, #0
   1972c:	bne	19700 <close_stdout@@Base+0x3ed4>
   19730:	str	r2, [sp, #12]
   19734:	mvn	r5, #0
   19738:	str	r3, [sp, #8]
   1973c:	bl	116e4 <fileno@plt>
   19740:	str	r4, [sp]
   19744:	mvn	r4, #0
   19748:	ldr	r2, [sp, #12]
   1974c:	ldr	r3, [sp, #8]
   19750:	bl	11540 <lseek64@plt>
   19754:	mov	r2, r0
   19758:	mov	r3, r1
   1975c:	cmp	r3, r5
   19760:	cmpeq	r2, r4
   19764:	beq	19784 <close_stdout@@Base+0x3f58>
   19768:	ldr	r1, [r6]
   1976c:	mov	r0, r7
   19770:	strd	r2, [r6, #80]	; 0x50
   19774:	bic	r3, r1, #16
   19778:	str	r3, [r6]
   1977c:	add	sp, sp, #20
   19780:	pop	{r4, r5, r6, r7, pc}
   19784:	mvn	r0, #0
   19788:	b	1977c <close_stdout@@Base+0x3f50>
   1978c:	cmp	r0, r1
   19790:	push	{r4}		; (str r4, [sp, #-4]!)
   19794:	beq	197f0 <close_stdout@@Base+0x3fc4>
   19798:	sub	r4, r0, #1
   1979c:	sub	r1, r1, #1
   197a0:	b	197ac <close_stdout@@Base+0x3f80>
   197a4:	cmp	r2, ip
   197a8:	bne	197e4 <close_stdout@@Base+0x3fb8>
   197ac:	ldrb	r3, [r4, #1]!
   197b0:	sub	r0, r3, #65	; 0x41
   197b4:	add	r2, r3, #32
   197b8:	cmp	r0, #25
   197bc:	movhi	r2, r3
   197c0:	ldrb	r3, [r1, #1]!
   197c4:	uxtb	r2, r2
   197c8:	sub	r0, r3, #65	; 0x41
   197cc:	add	ip, r3, #32
   197d0:	cmp	r0, #25
   197d4:	movhi	ip, r3
   197d8:	cmp	r2, #0
   197dc:	uxtb	ip, ip
   197e0:	bne	197a4 <close_stdout@@Base+0x3f78>
   197e4:	rsb	r0, ip, r2
   197e8:	pop	{r4}		; (ldr r4, [sp], #4)
   197ec:	bx	lr
   197f0:	mov	r0, #0
   197f4:	pop	{r4}		; (ldr r4, [sp], #4)
   197f8:	bx	lr
   197fc:	push	{r4, r5, r6, lr}
   19800:	mov	r4, r0
   19804:	bl	11570 <__fpending@plt>
   19808:	mov	r6, r0
   1980c:	mov	r0, r4
   19810:	ldr	r4, [r4]
   19814:	bl	195e4 <close_stdout@@Base+0x3db8>
   19818:	and	r4, r4, #32
   1981c:	adds	r5, r0, #0
   19820:	movne	r5, #1
   19824:	cmp	r4, #0
   19828:	bne	19848 <close_stdout@@Base+0x401c>
   1982c:	cmp	r5, #0
   19830:	beq	19840 <close_stdout@@Base+0x4014>
   19834:	cmp	r6, #0
   19838:	beq	19864 <close_stdout@@Base+0x4038>
   1983c:	mvn	r4, #0
   19840:	mov	r0, r4
   19844:	pop	{r4, r5, r6, pc}
   19848:	cmp	r5, #0
   1984c:	bne	1983c <close_stdout@@Base+0x4010>
   19850:	bl	11678 <__errno_location@plt>
   19854:	mvn	r4, #0
   19858:	str	r5, [r0]
   1985c:	mov	r0, r4
   19860:	pop	{r4, r5, r6, pc}
   19864:	bl	11678 <__errno_location@plt>
   19868:	ldr	r4, [r0]
   1986c:	subs	r4, r4, #9
   19870:	mvnne	r4, #0
   19874:	mov	r0, r4
   19878:	pop	{r4, r5, r6, pc}
   1987c:	ldr	r3, [pc, #984]	; 19c5c <close_stdout@@Base+0x4430>
   19880:	mov	r0, #14
   19884:	ldr	r2, [pc, #980]	; 19c60 <close_stdout@@Base+0x4434>
   19888:	add	r3, pc, r3
   1988c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19890:	sub	sp, sp, #132	; 0x84
   19894:	ldr	r6, [r3, r2]
   19898:	ldr	r3, [r6]
   1989c:	str	r3, [sp, #124]	; 0x7c
   198a0:	bl	1175c <nl_langinfo@plt>
   198a4:	subs	r5, r0, #0
   198a8:	beq	1995c <close_stdout@@Base+0x4130>
   198ac:	ldr	r3, [pc, #944]	; 19c64 <close_stdout@@Base+0x4438>
   198b0:	ldr	r4, [pc, r3]
   198b4:	cmp	r4, #0
   198b8:	beq	19968 <close_stdout@@Base+0x413c>
   198bc:	ldrb	r7, [r4]
   198c0:	cmp	r7, #0
   198c4:	bne	198f8 <close_stdout@@Base+0x40cc>
   198c8:	b	19930 <close_stdout@@Base+0x4104>
   198cc:	mov	r0, r4
   198d0:	bl	1163c <strlen@plt>
   198d4:	add	r0, r0, #1
   198d8:	add	r7, r4, r0
   198dc:	mov	r0, r7
   198e0:	bl	1163c <strlen@plt>
   198e4:	add	r0, r0, #1
   198e8:	add	r4, r7, r0
   198ec:	ldrb	r7, [r7, r0]
   198f0:	cmp	r7, #0
   198f4:	beq	19930 <close_stdout@@Base+0x4104>
   198f8:	mov	r0, r5
   198fc:	mov	r1, r4
   19900:	bl	11450 <strcmp@plt>
   19904:	cmp	r0, #0
   19908:	beq	19920 <close_stdout@@Base+0x40f4>
   1990c:	cmp	r7, #42	; 0x2a
   19910:	bne	198cc <close_stdout@@Base+0x40a0>
   19914:	ldrb	r3, [r4, #1]
   19918:	cmp	r3, #0
   1991c:	bne	198cc <close_stdout@@Base+0x40a0>
   19920:	mov	r0, r4
   19924:	bl	1163c <strlen@plt>
   19928:	add	r0, r0, #1
   1992c:	add	r5, r4, r0
   19930:	ldrb	r3, [r5]
   19934:	cmp	r3, #0
   19938:	ldreq	r5, [pc, #808]	; 19c68 <close_stdout@@Base+0x443c>
   1993c:	addeq	r5, pc, r5
   19940:	ldr	r2, [sp, #124]	; 0x7c
   19944:	mov	r0, r5
   19948:	ldr	r3, [r6]
   1994c:	cmp	r2, r3
   19950:	bne	19c30 <close_stdout@@Base+0x4404>
   19954:	add	sp, sp, #132	; 0x84
   19958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1995c:	ldr	r5, [pc, #776]	; 19c6c <close_stdout@@Base+0x4440>
   19960:	add	r5, pc, r5
   19964:	b	198ac <close_stdout@@Base+0x4080>
   19968:	ldr	r0, [pc, #768]	; 19c70 <close_stdout@@Base+0x4444>
   1996c:	add	r0, pc, r0
   19970:	bl	115a0 <getenv@plt>
   19974:	subs	r8, r0, #0
   19978:	beq	19c08 <close_stdout@@Base+0x43dc>
   1997c:	ldrb	r3, [r8]
   19980:	cmp	r3, #0
   19984:	beq	19b9c <close_stdout@@Base+0x4370>
   19988:	bl	1163c <strlen@plt>
   1998c:	subs	sl, r0, #0
   19990:	subne	r3, sl, #1
   19994:	bne	19bac <close_stdout@@Base+0x4380>
   19998:	mov	r9, #0
   1999c:	mov	fp, r9
   199a0:	add	r9, sl, r9
   199a4:	add	r0, r9, #14
   199a8:	bl	115ac <malloc@plt>
   199ac:	subs	r7, r0, #0
   199b0:	beq	19bfc <close_stdout@@Base+0x43d0>
   199b4:	mov	r1, r8
   199b8:	mov	r2, sl
   199bc:	bl	114a4 <memcpy@plt>
   199c0:	cmp	fp, #0
   199c4:	add	ip, r7, r9
   199c8:	movne	r3, #47	; 0x2f
   199cc:	strbne	r3, [r7, sl]
   199d0:	ldr	r3, [pc, #668]	; 19c74 <close_stdout@@Base+0x4448>
   199d4:	add	r3, pc, r3
   199d8:	ldm	r3!, {r0, r1, r2}
   199dc:	ldrh	r3, [r3]
   199e0:	str	r0, [r7, r9]
   199e4:	mov	r0, r7
   199e8:	str	r1, [ip, #4]
   199ec:	mov	r1, #32768	; 0x8000
   199f0:	strh	r3, [ip, #12]
   199f4:	str	r2, [ip, #8]
   199f8:	bl	11594 <open64@plt>
   199fc:	subs	r8, r0, #0
   19a00:	blt	19bc4 <close_stdout@@Base+0x4398>
   19a04:	ldr	r1, [pc, #620]	; 19c78 <close_stdout@@Base+0x444c>
   19a08:	add	r1, pc, r1
   19a0c:	bl	11408 <fdopen@plt>
   19a10:	subs	fp, r0, #0
   19a14:	beq	19c1c <close_stdout@@Base+0x43f0>
   19a18:	ldr	r0, [pc, #604]	; 19c7c <close_stdout@@Base+0x4450>
   19a1c:	add	sl, sp, #20
   19a20:	add	r9, sp, #72	; 0x48
   19a24:	mov	r8, #0
   19a28:	add	r0, pc, r0
   19a2c:	str	r0, [sp, #12]
   19a30:	ldr	r3, [fp, #4]
   19a34:	ldr	r2, [fp, #8]
   19a38:	cmp	r3, r2
   19a3c:	bcs	19b28 <close_stdout@@Base+0x42fc>
   19a40:	add	r2, r3, #1
   19a44:	str	r2, [fp, #4]
   19a48:	ldrb	r0, [r3]
   19a4c:	cmp	r0, #32
   19a50:	beq	19a30 <close_stdout@@Base+0x4204>
   19a54:	sub	r3, r0, #9
   19a58:	cmp	r3, #1
   19a5c:	bls	19a30 <close_stdout@@Base+0x4204>
   19a60:	cmp	r0, #35	; 0x23
   19a64:	beq	19b3c <close_stdout@@Base+0x4310>
   19a68:	mov	r1, fp
   19a6c:	bl	1166c <ungetc@plt>
   19a70:	mov	r0, fp
   19a74:	ldr	r1, [sp, #12]
   19a78:	mov	r2, sl
   19a7c:	mov	r3, r9
   19a80:	bl	116cc <fscanf@plt>
   19a84:	cmp	r0, #1
   19a88:	ble	19b6c <close_stdout@@Base+0x4340>
   19a8c:	mov	r0, sl
   19a90:	bl	1163c <strlen@plt>
   19a94:	str	r0, [sp, #8]
   19a98:	mov	r0, r9
   19a9c:	bl	1163c <strlen@plt>
   19aa0:	cmp	r8, #0
   19aa4:	mov	r2, r0
   19aa8:	bne	19bd0 <close_stdout@@Base+0x43a4>
   19aac:	ldr	r3, [sp, #8]
   19ab0:	str	r2, [sp]
   19ab4:	add	r8, r0, r3
   19ab8:	add	r0, r8, #3
   19abc:	add	r8, r8, #2
   19ac0:	bl	115ac <malloc@plt>
   19ac4:	ldr	r2, [sp]
   19ac8:	mov	r3, r0
   19acc:	cmp	r3, #0
   19ad0:	beq	19c34 <close_stdout@@Base+0x4408>
   19ad4:	ldr	r0, [sp, #8]
   19ad8:	movw	r1, #65534	; 0xfffe
   19adc:	movt	r1, #65535	; 0xffff
   19ae0:	rsb	r2, r2, r8
   19ae4:	rsb	r1, r0, r1
   19ae8:	stm	sp, {r2, r3}
   19aec:	add	r0, r1, r2
   19af0:	mov	r1, sl
   19af4:	add	r0, r3, r0
   19af8:	mov	r4, r3
   19afc:	bl	11558 <strcpy@plt>
   19b00:	ldr	r2, [sp]
   19b04:	ldr	r3, [sp, #4]
   19b08:	mov	r1, r9
   19b0c:	sub	r0, r2, #1
   19b10:	add	r0, r3, r0
   19b14:	bl	11558 <strcpy@plt>
   19b18:	ldr	r3, [fp, #4]
   19b1c:	ldr	r2, [fp, #8]
   19b20:	cmp	r3, r2
   19b24:	bcc	19a40 <close_stdout@@Base+0x4214>
   19b28:	mov	r0, fp
   19b2c:	bl	1172c <__uflow@plt>
   19b30:	cmn	r0, #1
   19b34:	beq	19b6c <close_stdout@@Base+0x4340>
   19b38:	b	19a4c <close_stdout@@Base+0x4220>
   19b3c:	ldr	r3, [fp, #4]
   19b40:	ldr	r2, [fp, #8]
   19b44:	cmp	r3, r2
   19b48:	bcs	19c50 <close_stdout@@Base+0x4424>
   19b4c:	add	r2, r3, #1
   19b50:	str	r2, [fp, #4]
   19b54:	ldrb	r0, [r3]
   19b58:	cmp	r0, #10
   19b5c:	cmnne	r0, #1
   19b60:	bne	19b3c <close_stdout@@Base+0x4310>
   19b64:	cmn	r0, #1
   19b68:	bne	19a30 <close_stdout@@Base+0x4204>
   19b6c:	mov	r0, fp
   19b70:	bl	195e4 <close_stdout@@Base+0x3db8>
   19b74:	cmp	r8, #0
   19b78:	beq	19bc4 <close_stdout@@Base+0x4398>
   19b7c:	mov	r3, #0
   19b80:	strb	r3, [r4, r8]
   19b84:	mov	r0, r7
   19b88:	bl	11480 <free@plt>
   19b8c:	ldr	r3, [pc, #236]	; 19c80 <close_stdout@@Base+0x4454>
   19b90:	add	r3, pc, r3
   19b94:	str	r4, [r3]
   19b98:	b	198bc <close_stdout@@Base+0x4090>
   19b9c:	ldr	r8, [pc, #224]	; 19c84 <close_stdout@@Base+0x4458>
   19ba0:	mov	r3, #7
   19ba4:	mov	sl, #8
   19ba8:	add	r8, pc, r8
   19bac:	ldrb	r3, [r8, r3]
   19bb0:	cmp	r3, #47	; 0x2f
   19bb4:	movne	r9, #1
   19bb8:	movne	fp, r9
   19bbc:	bne	199a0 <close_stdout@@Base+0x4174>
   19bc0:	b	19998 <close_stdout@@Base+0x416c>
   19bc4:	ldr	r4, [pc, #188]	; 19c88 <close_stdout@@Base+0x445c>
   19bc8:	add	r4, pc, r4
   19bcc:	b	19b84 <close_stdout@@Base+0x4358>
   19bd0:	ldr	r0, [sp, #8]
   19bd4:	str	r2, [sp]
   19bd8:	add	r3, r0, r2
   19bdc:	mov	r0, r4
   19be0:	add	r8, r3, r8
   19be4:	add	r1, r8, #3
   19be8:	add	r8, r8, #2
   19bec:	bl	114f8 <realloc@plt>
   19bf0:	ldr	r2, [sp]
   19bf4:	mov	r3, r0
   19bf8:	b	19acc <close_stdout@@Base+0x42a0>
   19bfc:	ldr	r4, [pc, #136]	; 19c8c <close_stdout@@Base+0x4460>
   19c00:	add	r4, pc, r4
   19c04:	b	19b8c <close_stdout@@Base+0x4360>
   19c08:	ldr	r8, [pc, #128]	; 19c90 <close_stdout@@Base+0x4464>
   19c0c:	mov	r3, #7
   19c10:	mov	sl, #8
   19c14:	add	r8, pc, r8
   19c18:	b	19bac <close_stdout@@Base+0x4380>
   19c1c:	ldr	r4, [pc, #112]	; 19c94 <close_stdout@@Base+0x4468>
   19c20:	mov	r0, r8
   19c24:	add	r4, pc, r4
   19c28:	bl	117b0 <close@plt>
   19c2c:	b	19b84 <close_stdout@@Base+0x4358>
   19c30:	bl	114e0 <__stack_chk_fail@plt>
   19c34:	mov	r0, r4
   19c38:	ldr	r4, [pc, #88]	; 19c98 <close_stdout@@Base+0x446c>
   19c3c:	bl	11480 <free@plt>
   19c40:	mov	r0, fp
   19c44:	add	r4, pc, r4
   19c48:	bl	195e4 <close_stdout@@Base+0x3db8>
   19c4c:	b	19b84 <close_stdout@@Base+0x4358>
   19c50:	mov	r0, fp
   19c54:	bl	1172c <__uflow@plt>
   19c58:	b	19b58 <close_stdout@@Base+0x432c>
   19c5c:	andeq	r4, r1, r0, ror r7
   19c60:	andeq	r0, r0, r8, asr r1
   19c64:	muleq	r1, r0, r0
   19c68:	andeq	r3, r0, r8, asr #18
   19c6c:	andeq	r2, r0, r8, asr #31
   19c70:	andeq	r3, r0, r0, lsr #18
   19c74:	andeq	r3, r0, r8, asr #17
   19c78:	ldrdeq	r3, [r0], -r8
   19c7c:	andeq	r3, r0, r4, lsl #17
   19c80:			; <UNDEFINED> instruction: 0x00014db0
   19c84:	ldrdeq	r3, [r0], -r0
   19c88:	andeq	r2, r0, r0, ror #26
   19c8c:	andeq	r2, r0, r8, lsr #26
   19c90:	andeq	r3, r0, r4, ror #12
   19c94:	andeq	r2, r0, r4, lsl #26
   19c98:	andeq	r2, r0, r4, ror #25
   19c9c:	push	{r4, lr}
   19ca0:	mov	r4, r0
   19ca4:	bl	11468 <wcwidth@plt>
   19ca8:	cmp	r0, #0
   19cac:	popge	{r4, pc}
   19cb0:	mov	r0, r4
   19cb4:	bl	11510 <iswcntrl@plt>
   19cb8:	rsbs	r0, r0, #1
   19cbc:	movcc	r0, #0
   19cc0:	pop	{r4, pc}
   19cc4:	push	{r3, r4, r5, lr}
   19cc8:	mov	r3, r1
   19ccc:	mov	r4, r1
   19cd0:	ldr	r1, [r3], #16
   19cd4:	mov	r5, r0
   19cd8:	cmp	r1, r3
   19cdc:	strne	r1, [r0]
   19ce0:	beq	19d04 <close_stdout@@Base+0x44d8>
   19ce4:	ldr	r3, [r4, #4]
   19ce8:	str	r3, [r5, #4]
   19cec:	ldrb	r3, [r4, #8]
   19cf0:	cmp	r3, #0
   19cf4:	strb	r3, [r5, #8]
   19cf8:	ldrne	r3, [r4, #12]
   19cfc:	strne	r3, [r5, #12]
   19d00:	pop	{r3, r4, r5, pc}
   19d04:	add	r3, r0, #16
   19d08:	ldr	r2, [r4, #4]
   19d0c:	mov	r0, r3
   19d10:	bl	114a4 <memcpy@plt>
   19d14:	str	r0, [r5]
   19d18:	b	19ce4 <close_stdout@@Base+0x44b8>
   19d1c:	ldr	r3, [pc, #32]	; 19d44 <close_stdout@@Base+0x4518>
   19d20:	lsr	r2, r0, #5
   19d24:	ldr	r1, [pc, #28]	; 19d48 <close_stdout@@Base+0x451c>
   19d28:	and	r0, r0, #31
   19d2c:	add	r3, pc, r3
   19d30:	ldr	r3, [r3, r1]
   19d34:	ldr	r3, [r3, r2, lsl #2]
   19d38:	lsr	r0, r3, r0
   19d3c:	and	r0, r0, #1
   19d40:	bx	lr
   19d44:	andeq	r4, r1, ip, asr #5
   19d48:	andeq	r0, r0, r4, asr r1
   19d4c:	ldr	ip, [pc, #380]	; 19ed0 <close_stdout@@Base+0x46a4>
   19d50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19d54:	mov	r7, r2
   19d58:	add	fp, sp, #28
   19d5c:	ldr	r2, [pc, #368]	; 19ed4 <close_stdout@@Base+0x46a8>
   19d60:	sub	sp, sp, #8
   19d64:	add	ip, pc, ip
   19d68:	mov	r8, r3
   19d6c:	mov	r3, ip
   19d70:	cmn	r7, #-1073741823	; 0xc0000001
   19d74:	ldr	r5, [ip, r2]
   19d78:	mov	r6, r0
   19d7c:	mov	r4, r1
   19d80:	ldr	r3, [r5]
   19d84:	str	r3, [fp, #-32]	; 0xffffffe0
   19d88:	bls	19da8 <close_stdout@@Base+0x457c>
   19d8c:	mov	r0, #0
   19d90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d94:	ldr	r3, [r5]
   19d98:	cmp	r2, r3
   19d9c:	bne	19ecc <close_stdout@@Base+0x46a0>
   19da0:	sub	sp, fp, #28
   19da4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19da8:	lsl	r0, r7, #2
   19dac:	movw	r3, #4023	; 0xfb7
   19db0:	cmp	r0, r3
   19db4:	bls	19e80 <close_stdout@@Base+0x4654>
   19db8:	bl	1bb10 <close_stdout@@Base+0x62e4>
   19dbc:	cmp	r0, #0
   19dc0:	beq	19d8c <close_stdout@@Base+0x4560>
   19dc4:	cmp	r7, #2
   19dc8:	mov	r3, #1
   19dcc:	str	r3, [r0, #4]
   19dd0:	movhi	r9, r4
   19dd4:	movhi	r2, r0
   19dd8:	movhi	ip, #0
   19ddc:	movhi	r3, #2
   19de0:	bls	19e2c <close_stdout@@Base+0x4600>
   19de4:	ldrb	r1, [r9, #1]!
   19de8:	ldrb	lr, [r4, ip]
   19dec:	cmp	lr, r1
   19df0:	bne	19e0c <close_stdout@@Base+0x45e0>
   19df4:	b	19e94 <close_stdout@@Base+0x4668>
   19df8:	ldr	lr, [r0, ip, lsl #2]
   19dfc:	rsb	ip, lr, ip
   19e00:	ldrb	lr, [r4, ip]
   19e04:	cmp	lr, r1
   19e08:	beq	19e94 <close_stdout@@Base+0x4668>
   19e0c:	cmp	ip, #0
   19e10:	bne	19df8 <close_stdout@@Base+0x45cc>
   19e14:	mov	ip, #0
   19e18:	str	r3, [r2, #8]
   19e1c:	add	r3, r3, #1
   19e20:	add	r2, r2, #4
   19e24:	cmp	r3, r7
   19e28:	bne	19de4 <close_stdout@@Base+0x45b8>
   19e2c:	mov	r2, #0
   19e30:	str	r2, [r8]
   19e34:	ldrb	r3, [r6]
   19e38:	mov	ip, r6
   19e3c:	cmp	r3, #0
   19e40:	beq	19e74 <close_stdout@@Base+0x4648>
   19e44:	ldrb	r1, [r4, r2]
   19e48:	cmp	r1, r3
   19e4c:	beq	19ea4 <close_stdout@@Base+0x4678>
   19e50:	cmp	r2, #0
   19e54:	addeq	r6, r6, #1
   19e58:	ldrne	r1, [r0, r2, lsl #2]
   19e5c:	ldrbeq	r3, [ip, #1]
   19e60:	addeq	ip, ip, #1
   19e64:	addne	r6, r6, r1
   19e68:	rsbne	r2, r1, r2
   19e6c:	cmp	r3, #0
   19e70:	bne	19e44 <close_stdout@@Base+0x4618>
   19e74:	bl	1bb78 <close_stdout@@Base+0x634c>
   19e78:	mov	r0, #1
   19e7c:	b	19d90 <close_stdout@@Base+0x4564>
   19e80:	add	r3, r0, #22
   19e84:	bic	r3, r3, #7
   19e88:	sub	sp, sp, r3
   19e8c:	add	r0, sp, #8
   19e90:	b	19dbc <close_stdout@@Base+0x4590>
   19e94:	add	ip, ip, #1
   19e98:	rsb	r1, ip, r3
   19e9c:	str	r1, [r2, #8]
   19ea0:	b	19e1c <close_stdout@@Base+0x45f0>
   19ea4:	add	r2, r2, #1
   19ea8:	add	r1, ip, #1
   19eac:	cmp	r7, r2
   19eb0:	ldrbne	r3, [ip, #1]
   19eb4:	movne	ip, r1
   19eb8:	bne	19e3c <close_stdout@@Base+0x4610>
   19ebc:	str	r6, [r8]
   19ec0:	bl	1bb78 <close_stdout@@Base+0x634c>
   19ec4:	mov	r0, #1
   19ec8:	b	19d90 <close_stdout@@Base+0x4564>
   19ecc:	bl	114e0 <__stack_chk_fail@plt>
   19ed0:	muleq	r1, r4, r2
   19ed4:	andeq	r0, r0, r8, asr r1
   19ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19edc:	add	fp, sp, #32
   19ee0:	ldr	r8, [pc, #2268]	; 1a7c4 <close_stdout@@Base+0x4f98>
   19ee4:	sub	sp, sp, #220	; 0xdc
   19ee8:	ldr	r3, [pc, #2264]	; 1a7c8 <close_stdout@@Base+0x4f9c>
   19eec:	add	r8, pc, r8
   19ef0:	str	r0, [fp, #-232]	; 0xffffff18
   19ef4:	str	r2, [fp, #-248]	; 0xffffff08
   19ef8:	mov	r0, r1
   19efc:	ldr	r3, [r8, r3]
   19f00:	mov	r4, r1
   19f04:	str	r3, [fp, #-244]	; 0xffffff0c
   19f08:	ldr	r3, [r3]
   19f0c:	str	r3, [fp, #-40]	; 0xffffffd8
   19f10:	bl	1bc00 <close_stdout@@Base+0x63d4>
   19f14:	movw	r3, #29789	; 0x745d
   19f18:	movt	r3, #1489	; 0x5d1
   19f1c:	cmp	r0, r3
   19f20:	str	r0, [fp, #-224]	; 0xffffff20
   19f24:	bls	19f48 <close_stdout@@Base+0x471c>
   19f28:	mov	r0, #0
   19f2c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   19f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f34:	ldr	r3, [r1]
   19f38:	cmp	r2, r3
   19f3c:	bne	1a7a0 <close_stdout@@Base+0x4f74>
   19f40:	sub	sp, fp, #32
   19f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f48:	ldr	r1, [fp, #-224]	; 0xffffff20
   19f4c:	mov	r0, #44	; 0x2c
   19f50:	movw	r3, #4023	; 0xfb7
   19f54:	mul	r0, r0, r1
   19f58:	cmp	r0, r3
   19f5c:	bls	1a328 <close_stdout@@Base+0x4afc>
   19f60:	bl	1bb10 <close_stdout@@Base+0x62e4>
   19f64:	str	r0, [fp, #-236]	; 0xffffff14
   19f68:	ldr	r3, [fp, #-236]	; 0xffffff14
   19f6c:	cmp	r3, #0
   19f70:	beq	19f28 <close_stdout@@Base+0x46fc>
   19f74:	mov	r2, #0
   19f78:	ldr	r0, [fp, #-224]	; 0xffffff20
   19f7c:	str	r2, [fp, #-200]	; 0xffffff38
   19f80:	mov	r5, r2
   19f84:	strb	r2, [fp, #-208]	; 0xffffff30
   19f88:	add	sl, r3, #16
   19f8c:	str	r2, [fp, #-204]	; 0xffffff34
   19f90:	add	r9, r0, r0, lsl #2
   19f94:	strb	r2, [fp, #-196]	; 0xffffff3c
   19f98:	sub	ip, fp, #204	; 0xcc
   19f9c:	ldrb	r2, [fp, #-208]	; 0xffffff30
   19fa0:	mov	r7, r4
   19fa4:	add	r9, r3, r9, lsl #3
   19fa8:	str	r4, [fp, #-192]	; 0xffffff40
   19fac:	cmp	r2, #0
   19fb0:	sub	r1, fp, #180	; 0xb4
   19fb4:	str	r9, [fp, #-220]	; 0xffffff24
   19fb8:	mov	r4, #1
   19fbc:	mov	r9, sl
   19fc0:	str	r1, [fp, #-216]	; 0xffffff28
   19fc4:	mov	sl, r7
   19fc8:	sub	r6, fp, #176	; 0xb0
   19fcc:	mov	r7, ip
   19fd0:	bne	1a3a4 <close_stdout@@Base+0x4b78>
   19fd4:	ldr	r1, [pc, #2032]	; 1a7cc <close_stdout@@Base+0x4fa0>
   19fd8:	ldrb	r2, [sl]
   19fdc:	ldr	r0, [r8, r1]
   19fe0:	and	r1, r2, #31
   19fe4:	lsr	r2, r2, #5
   19fe8:	ldr	r2, [r0, r2, lsl #2]
   19fec:	lsr	r2, r2, r1
   19ff0:	tst	r2, #1
   19ff4:	beq	1a408 <close_stdout@@Base+0x4bdc>
   19ff8:	str	r4, [fp, #-188]	; 0xffffff44
   19ffc:	ldrb	r3, [sl]
   1a000:	strb	r4, [fp, #-184]	; 0xffffff48
   1a004:	mov	sl, r3
   1a008:	str	r3, [fp, #-180]	; 0xffffff4c
   1a00c:	cmp	sl, #0
   1a010:	strb	r4, [fp, #-196]	; 0xffffff3c
   1a014:	mov	r2, #1
   1a018:	bne	1a354 <close_stdout@@Base+0x4b28>
   1a01c:	ldr	r0, [fp, #-224]	; 0xffffff20
   1a020:	ldr	r9, [fp, #-220]	; 0xffffff24
   1a024:	cmp	r0, #2
   1a028:	str	r2, [r9, #4]
   1a02c:	bls	1a0f8 <close_stdout@@Base+0x48cc>
   1a030:	ldr	r7, [fp, #-236]	; 0xffffff14
   1a034:	mov	r6, r9
   1a038:	str	r8, [fp, #-216]	; 0xffffff28
   1a03c:	mov	r4, sl
   1a040:	mov	r8, r9
   1a044:	mov	r5, #2
   1a048:	mov	r9, r7
   1a04c:	ldrb	sl, [r7, #48]	; 0x30
   1a050:	b	1a08c <close_stdout@@Base+0x4860>
   1a054:	ldrb	r2, [r3, #8]
   1a058:	cmp	r2, #0
   1a05c:	beq	1a09c <close_stdout@@Base+0x4870>
   1a060:	ldr	r0, [r7, #52]	; 0x34
   1a064:	ldr	r3, [r3, #12]
   1a068:	subs	r1, r0, r3
   1a06c:	rsbs	r0, r1, #0
   1a070:	adcs	r0, r0, r1
   1a074:	cmp	r0, #0
   1a078:	bne	1a0cc <close_stdout@@Base+0x48a0>
   1a07c:	cmp	r4, #0
   1a080:	beq	1a5e0 <close_stdout@@Base+0x4db4>
   1a084:	ldr	r3, [r8, r4, lsl #2]
   1a088:	rsb	r4, r3, r4
   1a08c:	add	r3, r4, r4, lsl #2
   1a090:	cmp	sl, #0
   1a094:	add	r3, r9, r3, lsl #3
   1a098:	bne	1a054 <close_stdout@@Base+0x4828>
   1a09c:	ldr	r2, [r7, #44]	; 0x2c
   1a0a0:	ldr	r1, [r3, #4]
   1a0a4:	cmp	r2, r1
   1a0a8:	movne	r0, #0
   1a0ac:	bne	1a074 <close_stdout@@Base+0x4848>
   1a0b0:	ldr	r1, [r3]
   1a0b4:	ldr	r0, [r7, #40]	; 0x28
   1a0b8:	bl	114c8 <memcmp@plt>
   1a0bc:	rsbs	r0, r0, #1
   1a0c0:	movcc	r0, #0
   1a0c4:	cmp	r0, #0
   1a0c8:	beq	1a07c <close_stdout@@Base+0x4850>
   1a0cc:	add	r4, r4, #1
   1a0d0:	rsb	r2, r4, r5
   1a0d4:	str	r2, [r6, #8]
   1a0d8:	ldr	r2, [fp, #-224]	; 0xffffff20
   1a0dc:	add	r5, r5, #1
   1a0e0:	add	r7, r7, #40	; 0x28
   1a0e4:	add	r6, r6, #4
   1a0e8:	cmp	r5, r2
   1a0ec:	bne	1a04c <close_stdout@@Base+0x4820>
   1a0f0:	mov	r9, r8
   1a0f4:	ldr	r8, [fp, #-216]	; 0xffffff28
   1a0f8:	ldr	r1, [fp, #-232]	; 0xffffff18
   1a0fc:	mov	r3, #0
   1a100:	ldr	r2, [fp, #-248]	; 0xffffff08
   1a104:	sub	r7, fp, #148	; 0x94
   1a108:	mov	r4, r3
   1a10c:	mov	r6, r3
   1a110:	mov	r5, #1
   1a114:	sub	r0, fp, #92	; 0x5c
   1a118:	str	r1, [fp, #-136]	; 0xffffff78
   1a11c:	str	r0, [fp, #-228]	; 0xffffff1c
   1a120:	sub	r0, fp, #68	; 0x44
   1a124:	str	r1, [fp, #-80]	; 0xffffffb0
   1a128:	sub	r1, fp, #124	; 0x7c
   1a12c:	str	r3, [fp, #-148]	; 0xffffff6c
   1a130:	strb	r3, [fp, #-140]	; 0xffffff74
   1a134:	str	r3, [fp, #-220]	; 0xffffff24
   1a138:	str	r3, [r2]
   1a13c:	strb	r3, [fp, #-152]	; 0xffffff68
   1a140:	str	r0, [fp, #-232]	; 0xffffff18
   1a144:	str	r1, [fp, #-216]	; 0xffffff28
   1a148:	strb	r3, [fp, #-96]	; 0xffffffa0
   1a14c:	str	r3, [fp, #-92]	; 0xffffffa4
   1a150:	strb	r3, [fp, #-84]	; 0xffffffac
   1a154:	str	r3, [r7, #4]
   1a158:	str	r3, [fp, #-88]	; 0xffffffa8
   1a15c:	str	r9, [fp, #-240]	; 0xffffff10
   1a160:	cmp	r4, #0
   1a164:	beq	1a1d4 <close_stdout@@Base+0x49a8>
   1a168:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   1a16c:	cmp	r4, #0
   1a170:	bne	1a228 <close_stdout@@Base+0x49fc>
   1a174:	ldr	r2, [fp, #-220]	; 0xffffff24
   1a178:	ldr	r3, [fp, #-236]	; 0xffffff14
   1a17c:	add	r1, r2, r2, lsl #2
   1a180:	add	r1, r3, r1, lsl #3
   1a184:	ldr	r2, [r1, #4]
   1a188:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a18c:	cmp	r2, r3
   1a190:	movne	r0, #0
   1a194:	beq	1a5c8 <close_stdout@@Base+0x4d9c>
   1a198:	mov	r3, r0
   1a19c:	cmp	r3, #0
   1a1a0:	ldr	r2, [fp, #-220]	; 0xffffff24
   1a1a4:	beq	1a26c <close_stdout@@Base+0x4a40>
   1a1a8:	ldr	r0, [fp, #-224]	; 0xffffff20
   1a1ac:	add	r2, r2, #1
   1a1b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a1b4:	str	r2, [fp, #-220]	; 0xffffff24
   1a1b8:	cmp	r0, r2
   1a1bc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a1c0:	strb	r6, [fp, #-84]	; 0xffffffac
   1a1c4:	add	r3, r3, r2
   1a1c8:	str	r3, [fp, #-80]	; 0xffffffb0
   1a1cc:	beq	1a750 <close_stdout@@Base+0x4f24>
   1a1d0:	mov	r4, #0
   1a1d4:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   1a1d8:	cmp	r3, #0
   1a1dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a1e0:	bne	1a4e8 <close_stdout@@Base+0x4cbc>
   1a1e4:	ldr	r1, [pc, #1504]	; 1a7cc <close_stdout@@Base+0x4fa0>
   1a1e8:	ldrb	r2, [r3]
   1a1ec:	ldr	r0, [r8, r1]
   1a1f0:	and	r1, r2, #31
   1a1f4:	lsr	r2, r2, #5
   1a1f8:	ldr	r2, [r0, r2, lsl #2]
   1a1fc:	lsr	r2, r2, r1
   1a200:	tst	r2, #1
   1a204:	beq	1a4cc <close_stdout@@Base+0x4ca0>
   1a208:	str	r5, [fp, #-76]	; 0xffffffb4
   1a20c:	mov	r4, #1
   1a210:	ldrb	r3, [r3]
   1a214:	strb	r5, [fp, #-72]	; 0xffffffb8
   1a218:	str	r3, [fp, #-68]	; 0xffffffbc
   1a21c:	cmp	r4, #0
   1a220:	strb	r5, [fp, #-84]	; 0xffffffac
   1a224:	beq	1a174 <close_stdout@@Base+0x4948>
   1a228:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a22c:	cmp	r2, #0
   1a230:	beq	1a75c <close_stdout@@Base+0x4f30>
   1a234:	ldr	r3, [fp, #-220]	; 0xffffff24
   1a238:	ldr	r0, [fp, #-236]	; 0xffffff14
   1a23c:	add	r1, r3, r3, lsl #2
   1a240:	add	r1, r0, r1, lsl #3
   1a244:	ldrb	r3, [r1, #8]
   1a248:	cmp	r3, #0
   1a24c:	beq	1a184 <close_stdout@@Base+0x4958>
   1a250:	ldr	r3, [r1, #12]
   1a254:	subs	r2, r2, r3
   1a258:	rsbs	r3, r2, #0
   1a25c:	adcs	r3, r3, r2
   1a260:	ldr	r2, [fp, #-220]	; 0xffffff24
   1a264:	cmp	r3, #0
   1a268:	bne	1a1a8 <close_stdout@@Base+0x497c>
   1a26c:	cmp	r2, #0
   1a270:	beq	1a578 <close_stdout@@Base+0x4d4c>
   1a274:	ldr	r3, [fp, #-240]	; 0xffffff10
   1a278:	ldr	r4, [r3, r2, lsl #2]
   1a27c:	cmp	r4, #0
   1a280:	rsb	r2, r4, r2
   1a284:	str	r2, [fp, #-220]	; 0xffffff24
   1a288:	beq	1a5c0 <close_stdout@@Base+0x4d94>
   1a28c:	ldrb	sl, [fp, #-140]	; 0xffffff74
   1a290:	cmp	sl, #0
   1a294:	beq	1a2c4 <close_stdout@@Base+0x4a98>
   1a298:	ldrb	sl, [fp, #-128]	; 0xffffff80
   1a29c:	cmp	sl, #0
   1a2a0:	bne	1a318 <close_stdout@@Base+0x4aec>
   1a2a4:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a2a8:	subs	r4, r4, #1
   1a2ac:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1a2b0:	strb	r6, [fp, #-140]	; 0xffffff74
   1a2b4:	movne	sl, #0
   1a2b8:	add	r3, r2, r3
   1a2bc:	str	r3, [fp, #-136]	; 0xffffff78
   1a2c0:	beq	1a5c0 <close_stdout@@Base+0x4d94>
   1a2c4:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1a2c8:	ldr	r9, [fp, #-136]	; 0xffffff78
   1a2cc:	cmp	r3, #0
   1a2d0:	bne	1a434 <close_stdout@@Base+0x4c08>
   1a2d4:	ldr	r1, [pc, #1264]	; 1a7cc <close_stdout@@Base+0x4fa0>
   1a2d8:	ldrb	r2, [r9]
   1a2dc:	ldr	r0, [r8, r1]
   1a2e0:	and	r1, r2, #31
   1a2e4:	lsr	r2, r2, #5
   1a2e8:	ldr	r2, [r0, r2, lsl #2]
   1a2ec:	lsr	r2, r2, r1
   1a2f0:	tst	r2, #1
   1a2f4:	beq	1a420 <close_stdout@@Base+0x4bf4>
   1a2f8:	str	r5, [fp, #-132]	; 0xffffff7c
   1a2fc:	mov	sl, #1
   1a300:	ldrb	r3, [r9]
   1a304:	strb	r5, [fp, #-128]	; 0xffffff80
   1a308:	str	r3, [fp, #-124]	; 0xffffff84
   1a30c:	cmp	sl, #0
   1a310:	strb	r5, [fp, #-140]	; 0xffffff74
   1a314:	beq	1a2a4 <close_stdout@@Base+0x4a78>
   1a318:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a31c:	cmp	r3, #0
   1a320:	bne	1a2a4 <close_stdout@@Base+0x4a78>
   1a324:	bl	117a4 <abort@plt>
   1a328:	add	r3, r0, #22
   1a32c:	bic	r3, r3, #7
   1a330:	sub	sp, sp, r3
   1a334:	add	r2, sp, #8
   1a338:	str	r2, [fp, #-236]	; 0xffffff14
   1a33c:	b	19f68 <close_stdout@@Base+0x473c>
   1a340:	ldr	r0, [fp, #-192]	; 0xffffff40
   1a344:	bl	1163c <strlen@plt>
   1a348:	strb	r5, [fp, #-184]	; 0xffffff48
   1a34c:	str	r0, [fp, #-188]	; 0xffffff44
   1a350:	strb	r4, [fp, #-196]	; 0xffffff3c
   1a354:	ldr	r3, [fp, #-192]	; 0xffffff40
   1a358:	cmp	r3, r6
   1a35c:	strne	r3, [r9, #-16]
   1a360:	beq	1a68c <close_stdout@@Base+0x4e60>
   1a364:	ldr	r3, [fp, #-188]	; 0xffffff44
   1a368:	add	r9, r9, #40	; 0x28
   1a36c:	str	r3, [r9, #-52]	; 0xffffffcc
   1a370:	ldrb	r3, [fp, #-184]	; 0xffffff48
   1a374:	cmp	r3, #0
   1a378:	strb	r3, [r9, #-48]	; 0xffffffd0
   1a37c:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   1a380:	strne	r3, [r9, #-44]	; 0xffffffd4
   1a384:	ldr	sl, [fp, #-192]	; 0xffffff40
   1a388:	ldr	r2, [fp, #-188]	; 0xffffff44
   1a38c:	strb	r5, [fp, #-196]	; 0xffffff3c
   1a390:	add	sl, sl, r2
   1a394:	ldrb	r2, [fp, #-208]	; 0xffffff30
   1a398:	str	sl, [fp, #-192]	; 0xffffff40
   1a39c:	cmp	r2, #0
   1a3a0:	beq	19fd4 <close_stdout@@Base+0x47a8>
   1a3a4:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a3a8:	mov	r1, r0
   1a3ac:	mov	r0, sl
   1a3b0:	bl	1822c <close_stdout@@Base+0x2a00>
   1a3b4:	mov	r1, sl
   1a3b8:	mov	r3, r7
   1a3bc:	mov	r2, r0
   1a3c0:	sub	r0, fp, #180	; 0xb4
   1a3c4:	bl	1157c <mbrtowc@plt>
   1a3c8:	cmn	r0, #1
   1a3cc:	str	r0, [fp, #-188]	; 0xffffff44
   1a3d0:	strbeq	r5, [fp, #-184]	; 0xffffff48
   1a3d4:	streq	r4, [fp, #-188]	; 0xffffff44
   1a3d8:	beq	1a350 <close_stdout@@Base+0x4b24>
   1a3dc:	cmn	r0, #2
   1a3e0:	beq	1a340 <close_stdout@@Base+0x4b14>
   1a3e4:	cmp	r0, #0
   1a3e8:	beq	1a5e8 <close_stdout@@Base+0x4dbc>
   1a3ec:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1a3f0:	mov	r0, r7
   1a3f4:	strb	r4, [fp, #-184]	; 0xffffff48
   1a3f8:	bl	114b0 <mbsinit@plt>
   1a3fc:	cmp	r0, #0
   1a400:	strbne	r5, [fp, #-208]	; 0xffffff30
   1a404:	b	1a00c <close_stdout@@Base+0x47e0>
   1a408:	mov	r0, r7
   1a40c:	bl	114b0 <mbsinit@plt>
   1a410:	cmp	r0, #0
   1a414:	beq	1a780 <close_stdout@@Base+0x4f54>
   1a418:	strb	r4, [fp, #-208]	; 0xffffff30
   1a41c:	b	1a3a4 <close_stdout@@Base+0x4b78>
   1a420:	mov	r0, r7
   1a424:	bl	114b0 <mbsinit@plt>
   1a428:	cmp	r0, #0
   1a42c:	beq	1a780 <close_stdout@@Base+0x4f54>
   1a430:	strb	r5, [fp, #-152]	; 0xffffff68
   1a434:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a438:	mov	r1, r0
   1a43c:	mov	r0, r9
   1a440:	bl	1822c <close_stdout@@Base+0x2a00>
   1a444:	mov	r1, r9
   1a448:	mov	r3, r7
   1a44c:	mov	r2, r0
   1a450:	sub	r0, fp, #124	; 0x7c
   1a454:	bl	1157c <mbrtowc@plt>
   1a458:	cmn	r0, #1
   1a45c:	str	r0, [fp, #-132]	; 0xffffff7c
   1a460:	strbeq	r6, [fp, #-128]	; 0xffffff80
   1a464:	streq	r5, [fp, #-132]	; 0xffffff7c
   1a468:	beq	1a30c <close_stdout@@Base+0x4ae0>
   1a46c:	cmn	r0, #2
   1a470:	beq	1a4b8 <close_stdout@@Base+0x4c8c>
   1a474:	cmp	r0, #0
   1a478:	bne	1a49c <close_stdout@@Base+0x4c70>
   1a47c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a480:	str	r5, [fp, #-132]	; 0xffffff7c
   1a484:	ldrb	r3, [r3]
   1a488:	cmp	r3, #0
   1a48c:	bne	1a7a4 <close_stdout@@Base+0x4f78>
   1a490:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a494:	cmp	r3, #0
   1a498:	bne	1a608 <close_stdout@@Base+0x4ddc>
   1a49c:	mov	r0, r7
   1a4a0:	strb	r5, [fp, #-128]	; 0xffffff80
   1a4a4:	bl	114b0 <mbsinit@plt>
   1a4a8:	mov	sl, #1
   1a4ac:	cmp	r0, #0
   1a4b0:	strbne	r6, [fp, #-152]	; 0xffffff68
   1a4b4:	b	1a30c <close_stdout@@Base+0x4ae0>
   1a4b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a4bc:	bl	1163c <strlen@plt>
   1a4c0:	strb	r6, [fp, #-128]	; 0xffffff80
   1a4c4:	str	r0, [fp, #-132]	; 0xffffff7c
   1a4c8:	b	1a30c <close_stdout@@Base+0x4ae0>
   1a4cc:	sub	r0, fp, #92	; 0x5c
   1a4d0:	str	r3, [fp, #-252]	; 0xffffff04
   1a4d4:	bl	114b0 <mbsinit@plt>
   1a4d8:	ldr	r3, [fp, #-252]	; 0xffffff04
   1a4dc:	cmp	r0, #0
   1a4e0:	beq	1a780 <close_stdout@@Base+0x4f54>
   1a4e4:	strb	r5, [fp, #-96]	; 0xffffffa0
   1a4e8:	str	r3, [fp, #-252]	; 0xffffff04
   1a4ec:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a4f0:	ldr	r3, [fp, #-252]	; 0xffffff04
   1a4f4:	mov	r1, r0
   1a4f8:	mov	r0, r3
   1a4fc:	bl	1822c <close_stdout@@Base+0x2a00>
   1a500:	ldr	r3, [fp, #-252]	; 0xffffff04
   1a504:	mov	r1, r3
   1a508:	sub	r3, fp, #92	; 0x5c
   1a50c:	mov	r2, r0
   1a510:	sub	r0, fp, #68	; 0x44
   1a514:	bl	1157c <mbrtowc@plt>
   1a518:	cmn	r0, #1
   1a51c:	str	r0, [fp, #-76]	; 0xffffffb4
   1a520:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   1a524:	streq	r5, [fp, #-76]	; 0xffffffb4
   1a528:	beq	1a21c <close_stdout@@Base+0x49f0>
   1a52c:	cmn	r0, #2
   1a530:	beq	1a73c <close_stdout@@Base+0x4f10>
   1a534:	cmp	r0, #0
   1a538:	bne	1a55c <close_stdout@@Base+0x4d30>
   1a53c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a540:	str	r5, [fp, #-76]	; 0xffffffb4
   1a544:	ldrb	r3, [r3]
   1a548:	cmp	r3, #0
   1a54c:	bne	1a7a4 <close_stdout@@Base+0x4f78>
   1a550:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a554:	cmp	r3, #0
   1a558:	bne	1a608 <close_stdout@@Base+0x4ddc>
   1a55c:	sub	r0, fp, #92	; 0x5c
   1a560:	strb	r5, [fp, #-72]	; 0xffffffb8
   1a564:	bl	114b0 <mbsinit@plt>
   1a568:	mov	r4, #1
   1a56c:	cmp	r0, #0
   1a570:	strbne	r6, [fp, #-96]	; 0xffffffa0
   1a574:	b	1a21c <close_stdout@@Base+0x49f0>
   1a578:	ldrb	r4, [fp, #-140]	; 0xffffff74
   1a57c:	cmp	r4, #0
   1a580:	beq	1a628 <close_stdout@@Base+0x4dfc>
   1a584:	ldrb	r4, [fp, #-128]	; 0xffffff80
   1a588:	cmp	r4, #0
   1a58c:	bne	1a67c <close_stdout@@Base+0x4e50>
   1a590:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a594:	mov	r4, #0
   1a598:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1a59c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a5a0:	add	r2, r1, r2
   1a5a4:	str	r2, [fp, #-136]	; 0xffffff78
   1a5a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a5ac:	strb	r6, [fp, #-140]	; 0xffffff74
   1a5b0:	add	r3, r3, r2
   1a5b4:	strb	r6, [fp, #-84]	; 0xffffffac
   1a5b8:	str	r3, [fp, #-80]	; 0xffffffb0
   1a5bc:	b	1a1d4 <close_stdout@@Base+0x49a8>
   1a5c0:	ldrb	r4, [fp, #-84]	; 0xffffffac
   1a5c4:	b	1a160 <close_stdout@@Base+0x4934>
   1a5c8:	ldr	r0, [r1]
   1a5cc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a5d0:	bl	114c8 <memcmp@plt>
   1a5d4:	rsbs	r0, r0, #1
   1a5d8:	movcc	r0, #0
   1a5dc:	b	1a198 <close_stdout@@Base+0x496c>
   1a5e0:	str	r5, [r6, #8]
   1a5e4:	b	1a0d8 <close_stdout@@Base+0x48ac>
   1a5e8:	ldr	r3, [fp, #-192]	; 0xffffff40
   1a5ec:	str	r4, [fp, #-188]	; 0xffffff44
   1a5f0:	ldrb	r3, [r3]
   1a5f4:	cmp	r3, #0
   1a5f8:	bne	1a7a4 <close_stdout@@Base+0x4f78>
   1a5fc:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1a600:	cmp	sl, #0
   1a604:	beq	1a3f0 <close_stdout@@Base+0x4bc4>
   1a608:	ldr	r0, [pc, #448]	; 1a7d0 <close_stdout@@Base+0x4fa4>
   1a60c:	mov	r2, #179	; 0xb3
   1a610:	ldr	r1, [pc, #444]	; 1a7d4 <close_stdout@@Base+0x4fa8>
   1a614:	ldr	r3, [pc, #444]	; 1a7d8 <close_stdout@@Base+0x4fac>
   1a618:	add	r0, pc, r0
   1a61c:	add	r1, pc, r1
   1a620:	add	r3, pc, r3
   1a624:	bl	117bc <__assert_fail@plt>
   1a628:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1a62c:	ldr	sl, [fp, #-136]	; 0xffffff78
   1a630:	cmp	r3, #0
   1a634:	bne	1a6b8 <close_stdout@@Base+0x4e8c>
   1a638:	ldr	r1, [pc, #396]	; 1a7cc <close_stdout@@Base+0x4fa0>
   1a63c:	ldrb	r2, [sl]
   1a640:	ldr	r0, [r8, r1]
   1a644:	and	r1, r2, #31
   1a648:	lsr	r2, r2, #5
   1a64c:	ldr	r2, [r0, r2, lsl #2]
   1a650:	lsr	r2, r2, r1
   1a654:	tst	r2, #1
   1a658:	beq	1a6a4 <close_stdout@@Base+0x4e78>
   1a65c:	str	r5, [fp, #-132]	; 0xffffff7c
   1a660:	mov	r4, #1
   1a664:	ldrb	r3, [sl]
   1a668:	strb	r5, [fp, #-128]	; 0xffffff80
   1a66c:	str	r3, [fp, #-124]	; 0xffffff84
   1a670:	cmp	r4, #0
   1a674:	strb	r5, [fp, #-140]	; 0xffffff74
   1a678:	beq	1a590 <close_stdout@@Base+0x4d64>
   1a67c:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a680:	cmp	r3, #0
   1a684:	bne	1a590 <close_stdout@@Base+0x4d64>
   1a688:	b	1a324 <close_stdout@@Base+0x4af8>
   1a68c:	mov	r0, r9
   1a690:	mov	r1, r6
   1a694:	ldr	r2, [fp, #-188]	; 0xffffff44
   1a698:	bl	114a4 <memcpy@plt>
   1a69c:	str	r9, [r9, #-16]
   1a6a0:	b	1a364 <close_stdout@@Base+0x4b38>
   1a6a4:	mov	r0, r7
   1a6a8:	bl	114b0 <mbsinit@plt>
   1a6ac:	cmp	r0, #0
   1a6b0:	beq	1a780 <close_stdout@@Base+0x4f54>
   1a6b4:	strb	r5, [fp, #-152]	; 0xffffff68
   1a6b8:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a6bc:	mov	r1, r0
   1a6c0:	mov	r0, sl
   1a6c4:	bl	1822c <close_stdout@@Base+0x2a00>
   1a6c8:	mov	r1, sl
   1a6cc:	mov	r3, r7
   1a6d0:	mov	r2, r0
   1a6d4:	sub	r0, fp, #124	; 0x7c
   1a6d8:	bl	1157c <mbrtowc@plt>
   1a6dc:	cmn	r0, #1
   1a6e0:	str	r0, [fp, #-132]	; 0xffffff7c
   1a6e4:	strbeq	r6, [fp, #-128]	; 0xffffff80
   1a6e8:	streq	r5, [fp, #-132]	; 0xffffff7c
   1a6ec:	beq	1a670 <close_stdout@@Base+0x4e44>
   1a6f0:	cmn	r0, #2
   1a6f4:	beq	1a76c <close_stdout@@Base+0x4f40>
   1a6f8:	cmp	r0, #0
   1a6fc:	bne	1a720 <close_stdout@@Base+0x4ef4>
   1a700:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a704:	str	r5, [fp, #-132]	; 0xffffff7c
   1a708:	ldrb	r3, [r3]
   1a70c:	cmp	r3, #0
   1a710:	bne	1a7a4 <close_stdout@@Base+0x4f78>
   1a714:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a718:	cmp	r3, #0
   1a71c:	bne	1a608 <close_stdout@@Base+0x4ddc>
   1a720:	mov	r0, r7
   1a724:	strb	r5, [fp, #-128]	; 0xffffff80
   1a728:	bl	114b0 <mbsinit@plt>
   1a72c:	mov	r4, #1
   1a730:	cmp	r0, #0
   1a734:	strbne	r6, [fp, #-152]	; 0xffffff68
   1a738:	b	1a670 <close_stdout@@Base+0x4e44>
   1a73c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a740:	bl	1163c <strlen@plt>
   1a744:	strb	r6, [fp, #-72]	; 0xffffffb8
   1a748:	str	r0, [fp, #-76]	; 0xffffffb4
   1a74c:	b	1a21c <close_stdout@@Base+0x49f0>
   1a750:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a754:	ldr	r1, [fp, #-248]	; 0xffffff08
   1a758:	str	r3, [r1]
   1a75c:	ldr	r0, [fp, #-236]	; 0xffffff14
   1a760:	bl	1bb78 <close_stdout@@Base+0x634c>
   1a764:	mov	r0, #1
   1a768:	b	19f2c <close_stdout@@Base+0x4700>
   1a76c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a770:	bl	1163c <strlen@plt>
   1a774:	strb	r6, [fp, #-128]	; 0xffffff80
   1a778:	str	r0, [fp, #-132]	; 0xffffff7c
   1a77c:	b	1a670 <close_stdout@@Base+0x4e44>
   1a780:	ldr	r0, [pc, #84]	; 1a7dc <close_stdout@@Base+0x4fb0>
   1a784:	mov	r2, #150	; 0x96
   1a788:	ldr	r1, [pc, #80]	; 1a7e0 <close_stdout@@Base+0x4fb4>
   1a78c:	ldr	r3, [pc, #80]	; 1a7e4 <close_stdout@@Base+0x4fb8>
   1a790:	add	r0, pc, r0
   1a794:	add	r1, pc, r1
   1a798:	add	r3, pc, r3
   1a79c:	bl	117bc <__assert_fail@plt>
   1a7a0:	bl	114e0 <__stack_chk_fail@plt>
   1a7a4:	ldr	r0, [pc, #60]	; 1a7e8 <close_stdout@@Base+0x4fbc>
   1a7a8:	mov	r2, #178	; 0xb2
   1a7ac:	ldr	r1, [pc, #56]	; 1a7ec <close_stdout@@Base+0x4fc0>
   1a7b0:	ldr	r3, [pc, #56]	; 1a7f0 <close_stdout@@Base+0x4fc4>
   1a7b4:	add	r0, pc, r0
   1a7b8:	add	r1, pc, r1
   1a7bc:	add	r3, pc, r3
   1a7c0:	bl	117bc <__assert_fail@plt>
   1a7c4:	andeq	r4, r1, ip, lsl #2
   1a7c8:	andeq	r0, r0, r8, asr r1
   1a7cc:	andeq	r0, r0, r4, asr r1
   1a7d0:	andeq	r2, r0, r0, lsr #16
   1a7d4:	strdeq	r2, [r0], -r4
   1a7d8:			; <UNDEFINED> instruction: 0x00002cb8
   1a7dc:	andeq	r2, r0, r8, ror #12
   1a7e0:	andeq	r2, r0, ip, ror r6
   1a7e4:	andeq	r2, r0, r0, asr #22
   1a7e8:	andeq	r2, r0, ip, ror #12
   1a7ec:	andeq	r2, r0, r8, asr r6
   1a7f0:	andeq	r2, r0, ip, lsl fp
   1a7f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7f8:	sub	sp, sp, #348	; 0x15c
   1a7fc:	ldr	r4, [pc, #3188]	; 1b478 <close_stdout@@Base+0x5c4c>
   1a800:	ldr	r3, [pc, #3188]	; 1b47c <close_stdout@@Base+0x5c50>
   1a804:	add	r4, pc, r4
   1a808:	str	r0, [sp, #16]
   1a80c:	str	r1, [sp, #4]
   1a810:	ldr	r3, [r4, r3]
   1a814:	str	r3, [sp, #20]
   1a818:	ldr	r3, [r3]
   1a81c:	str	r3, [sp, #340]	; 0x154
   1a820:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a824:	cmp	r0, #1
   1a828:	bls	1aa0c <close_stdout@@Base+0x51e0>
   1a82c:	ldr	r0, [sp, #4]
   1a830:	add	r5, sp, #64	; 0x40
   1a834:	ldr	ip, [pc, #3140]	; 1b480 <close_stdout@@Base+0x5c54>
   1a838:	mov	r2, #0
   1a83c:	str	r2, [r5, #4]
   1a840:	ldrb	r1, [r0]
   1a844:	str	r0, [sp, #76]	; 0x4c
   1a848:	strb	r2, [sp, #60]	; 0x3c
   1a84c:	and	r3, r1, #31
   1a850:	str	r2, [sp, #64]	; 0x40
   1a854:	lsr	r0, r1, #5
   1a858:	strb	r2, [sp, #72]	; 0x48
   1a85c:	ldr	r6, [r4, ip]
   1a860:	ldr	r2, [r6, r0, lsl #2]
   1a864:	lsr	r3, r2, r3
   1a868:	ands	r4, r3, #1
   1a86c:	beq	1a95c <close_stdout@@Base+0x5130>
   1a870:	mov	r4, r1
   1a874:	cmp	r4, #0
   1a878:	mov	r3, #1
   1a87c:	str	r1, [sp, #88]	; 0x58
   1a880:	str	r3, [sp, #80]	; 0x50
   1a884:	strb	r3, [sp, #84]	; 0x54
   1a888:	mov	r3, #1
   1a88c:	strb	r3, [sp, #72]	; 0x48
   1a890:	beq	1a9ec <close_stdout@@Base+0x51c0>
   1a894:	add	r2, sp, #120	; 0x78
   1a898:	add	r0, sp, #176	; 0xb0
   1a89c:	str	r2, [sp, #8]
   1a8a0:	mov	r3, #0
   1a8a4:	ldr	r2, [sp, #4]
   1a8a8:	mov	r9, r3
   1a8ac:	str	r0, [sp, #44]	; 0x2c
   1a8b0:	mov	r5, r3
   1a8b4:	ldr	r0, [sp, #16]
   1a8b8:	mov	r4, #1
   1a8bc:	mov	r1, #1
   1a8c0:	str	r2, [sp, #132]	; 0x84
   1a8c4:	str	r1, [sp, #32]
   1a8c8:	add	r2, sp, #200	; 0xc8
   1a8cc:	str	r0, [sp, #188]	; 0xbc
   1a8d0:	mov	r8, r0
   1a8d4:	add	r1, sp, #144	; 0x90
   1a8d8:	add	r0, sp, #56	; 0x38
   1a8dc:	str	r3, [sp, #28]
   1a8e0:	strb	r3, [sp, #116]	; 0x74
   1a8e4:	str	r3, [sp, #12]
   1a8e8:	str	r3, [sp, #120]	; 0x78
   1a8ec:	strb	r3, [sp, #128]	; 0x80
   1a8f0:	strb	r3, [sp, #172]	; 0xac
   1a8f4:	str	r3, [sp, #176]	; 0xb0
   1a8f8:	str	r2, [sp, #48]	; 0x30
   1a8fc:	strb	r3, [sp, #184]	; 0xb8
   1a900:	str	r0, [sp, #52]	; 0x34
   1a904:	str	r3, [sp, #124]	; 0x7c
   1a908:	str	r1, [sp, #24]
   1a90c:	str	r3, [sp, #180]	; 0xb4
   1a910:	ldrb	r3, [sp, #172]	; 0xac
   1a914:	cmp	r3, #0
   1a918:	bne	1ab74 <close_stdout@@Base+0x5348>
   1a91c:	ldrb	r3, [r8]
   1a920:	and	r2, r3, #31
   1a924:	lsr	r3, r3, #5
   1a928:	ldr	r3, [r6, r3, lsl #2]
   1a92c:	lsr	r3, r3, r2
   1a930:	tst	r3, #1
   1a934:	beq	1ab60 <close_stdout@@Base+0x5334>
   1a938:	str	r4, [sp, #192]	; 0xc0
   1a93c:	ldrb	r7, [r8]
   1a940:	strb	r4, [sp, #196]	; 0xc4
   1a944:	cmp	r7, #0
   1a948:	strb	r4, [sp, #184]	; 0xb8
   1a94c:	str	r7, [sp, #200]	; 0xc8
   1a950:	bne	1abe0 <close_stdout@@Base+0x53b4>
   1a954:	mov	r0, r7
   1a958:	b	1a9f0 <close_stdout@@Base+0x51c4>
   1a95c:	mov	r0, r5
   1a960:	bl	114b0 <mbsinit@plt>
   1a964:	cmp	r0, #0
   1a968:	beq	1b434 <close_stdout@@Base+0x5c08>
   1a96c:	mov	r7, #1
   1a970:	strb	r7, [sp, #60]	; 0x3c
   1a974:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1a978:	mov	r1, r0
   1a97c:	ldr	r0, [sp, #4]
   1a980:	bl	1822c <close_stdout@@Base+0x2a00>
   1a984:	ldr	r1, [sp, #4]
   1a988:	mov	r3, r5
   1a98c:	mov	r2, r0
   1a990:	add	r0, sp, #88	; 0x58
   1a994:	bl	1157c <mbrtowc@plt>
   1a998:	cmn	r0, #1
   1a99c:	str	r0, [sp, #80]	; 0x50
   1a9a0:	strbeq	r4, [sp, #84]	; 0x54
   1a9a4:	streq	r7, [sp, #80]	; 0x50
   1a9a8:	beq	1abf8 <close_stdout@@Base+0x53cc>
   1a9ac:	cmn	r0, #2
   1a9b0:	beq	1abe8 <close_stdout@@Base+0x53bc>
   1a9b4:	cmp	r0, #0
   1a9b8:	beq	1b370 <close_stdout@@Base+0x5b44>
   1a9bc:	ldr	r4, [sp, #88]	; 0x58
   1a9c0:	mov	r0, r5
   1a9c4:	mov	r3, #1
   1a9c8:	strb	r3, [sp, #84]	; 0x54
   1a9cc:	bl	114b0 <mbsinit@plt>
   1a9d0:	cmp	r0, #0
   1a9d4:	movne	r3, #0
   1a9d8:	strbne	r3, [sp, #60]	; 0x3c
   1a9dc:	cmp	r4, #0
   1a9e0:	mov	r3, #1
   1a9e4:	strb	r3, [sp, #72]	; 0x48
   1a9e8:	bne	1a894 <close_stdout@@Base+0x5068>
   1a9ec:	ldr	r0, [sp, #16]
   1a9f0:	ldr	r1, [sp, #20]
   1a9f4:	ldr	r2, [sp, #340]	; 0x154
   1a9f8:	ldr	r3, [r1]
   1a9fc:	cmp	r2, r3
   1aa00:	bne	1b454 <close_stdout@@Base+0x5c28>
   1aa04:	add	sp, sp, #348	; 0x15c
   1aa08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa0c:	ldr	r2, [sp, #4]
   1aa10:	ldrb	r8, [r2]
   1aa14:	cmp	r8, #0
   1aa18:	beq	1a9ec <close_stdout@@Base+0x51c0>
   1aa1c:	ldr	r3, [sp, #16]
   1aa20:	ldrb	sl, [r3]
   1aa24:	cmp	sl, #0
   1aa28:	beq	1aee8 <close_stdout@@Base+0x56bc>
   1aa2c:	cmp	sl, r8
   1aa30:	mov	r4, #0
   1aa34:	mov	r5, r4
   1aa38:	mov	r9, r4
   1aa3c:	add	r0, sp, #56	; 0x38
   1aa40:	add	r7, r3, #1
   1aa44:	mov	r6, r3
   1aa48:	mov	fp, r2
   1aa4c:	mov	r1, #1
   1aa50:	str	r0, [sp, #8]
   1aa54:	add	r4, r4, #1
   1aa58:	beq	1aafc <close_stdout@@Base+0x52d0>
   1aa5c:	ldrb	sl, [r6, #1]
   1aa60:	cmp	sl, #0
   1aa64:	beq	1aee8 <close_stdout@@Base+0x56bc>
   1aa68:	add	r5, r5, #1
   1aa6c:	cmp	r4, #9
   1aa70:	movls	r3, #0
   1aa74:	andhi	r3, r1, #1
   1aa78:	cmp	r3, #0
   1aa7c:	beq	1aae8 <close_stdout@@Base+0x52bc>
   1aa80:	add	r3, r4, r4, lsl #2
   1aa84:	cmp	r5, r3
   1aa88:	bcc	1aae4 <close_stdout@@Base+0x52b8>
   1aa8c:	cmp	fp, #0
   1aa90:	beq	1aab0 <close_stdout@@Base+0x5284>
   1aa94:	rsb	r1, r9, r5
   1aa98:	mov	r0, fp
   1aa9c:	bl	11714 <strnlen@plt>
   1aaa0:	mov	r9, r5
   1aaa4:	ldrb	r3, [fp, r0]!
   1aaa8:	cmp	r3, #0
   1aaac:	bne	1aae4 <close_stdout@@Base+0x52b8>
   1aab0:	ldr	r0, [sp, #4]
   1aab4:	bl	1163c <strlen@plt>
   1aab8:	ldr	r1, [sp, #4]
   1aabc:	add	r3, sp, #56	; 0x38
   1aac0:	mov	r2, r0
   1aac4:	mov	r0, r7
   1aac8:	bl	19d4c <close_stdout@@Base+0x4520>
   1aacc:	cmp	r0, #0
   1aad0:	bne	1b42c <close_stdout@@Base+0x5c00>
   1aad4:	mov	fp, r0
   1aad8:	ldrb	sl, [r6, #1]
   1aadc:	mov	r1, r0
   1aae0:	b	1aae8 <close_stdout@@Base+0x52bc>
   1aae4:	mov	r1, #1
   1aae8:	cmp	sl, r8
   1aaec:	add	r7, r7, #1
   1aaf0:	add	r6, r6, #1
   1aaf4:	add	r4, r4, #1
   1aaf8:	bne	1aa5c <close_stdout@@Base+0x5230>
   1aafc:	ldr	r2, [sp, #4]
   1ab00:	ldrb	r3, [r2, #1]
   1ab04:	cmp	r3, #0
   1ab08:	beq	1ab58 <close_stdout@@Base+0x532c>
   1ab0c:	ldrb	sl, [r6, #1]
   1ab10:	cmp	sl, #0
   1ab14:	beq	1aee8 <close_stdout@@Base+0x56bc>
   1ab18:	cmp	r3, sl
   1ab1c:	add	r3, r5, #2
   1ab20:	bne	1af84 <close_stdout@@Base+0x5758>
   1ab24:	rsb	r0, r5, #0
   1ab28:	add	r5, r2, r0
   1ab2c:	add	r0, r6, r0
   1ab30:	b	1ab4c <close_stdout@@Base+0x5320>
   1ab34:	ldrb	ip, [r0, r3]
   1ab38:	cmp	ip, #0
   1ab3c:	beq	1aee8 <close_stdout@@Base+0x56bc>
   1ab40:	cmp	r2, ip
   1ab44:	add	r3, r3, #1
   1ab48:	bne	1af84 <close_stdout@@Base+0x5758>
   1ab4c:	ldrb	r2, [r5, r3]
   1ab50:	cmp	r2, #0
   1ab54:	bne	1ab34 <close_stdout@@Base+0x5308>
   1ab58:	mov	r0, r6
   1ab5c:	b	1a9f0 <close_stdout@@Base+0x51c4>
   1ab60:	add	r0, sp, #176	; 0xb0
   1ab64:	bl	114b0 <mbsinit@plt>
   1ab68:	cmp	r0, #0
   1ab6c:	beq	1b434 <close_stdout@@Base+0x5c08>
   1ab70:	strb	r4, [sp, #172]	; 0xac
   1ab74:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1ab78:	mov	r1, r0
   1ab7c:	mov	r0, r8
   1ab80:	bl	1822c <close_stdout@@Base+0x2a00>
   1ab84:	mov	r1, r8
   1ab88:	add	r3, sp, #176	; 0xb0
   1ab8c:	mov	r2, r0
   1ab90:	add	r0, sp, #200	; 0xc8
   1ab94:	bl	1157c <mbrtowc@plt>
   1ab98:	cmn	r0, #1
   1ab9c:	str	r0, [sp, #192]	; 0xc0
   1aba0:	strbeq	r5, [sp, #196]	; 0xc4
   1aba4:	streq	r4, [sp, #192]	; 0xc0
   1aba8:	beq	1ac14 <close_stdout@@Base+0x53e8>
   1abac:	cmn	r0, #2
   1abb0:	beq	1ac04 <close_stdout@@Base+0x53d8>
   1abb4:	cmp	r0, #0
   1abb8:	beq	1b34c <close_stdout@@Base+0x5b20>
   1abbc:	ldr	r7, [sp, #200]	; 0xc8
   1abc0:	add	r0, sp, #176	; 0xb0
   1abc4:	strb	r4, [sp, #196]	; 0xc4
   1abc8:	bl	114b0 <mbsinit@plt>
   1abcc:	strb	r4, [sp, #184]	; 0xb8
   1abd0:	cmp	r0, #0
   1abd4:	strbne	r5, [sp, #172]	; 0xac
   1abd8:	cmp	r7, #0
   1abdc:	beq	1a954 <close_stdout@@Base+0x5128>
   1abe0:	mov	r3, #1
   1abe4:	b	1ac1c <close_stdout@@Base+0x53f0>
   1abe8:	ldr	r0, [sp, #76]	; 0x4c
   1abec:	bl	1163c <strlen@plt>
   1abf0:	strb	r4, [sp, #84]	; 0x54
   1abf4:	str	r0, [sp, #80]	; 0x50
   1abf8:	mov	r3, #1
   1abfc:	strb	r3, [sp, #72]	; 0x48
   1ac00:	b	1a894 <close_stdout@@Base+0x5068>
   1ac04:	ldr	r0, [sp, #188]	; 0xbc
   1ac08:	bl	1163c <strlen@plt>
   1ac0c:	strb	r5, [sp, #196]	; 0xc4
   1ac10:	str	r0, [sp, #192]	; 0xc0
   1ac14:	mov	r3, #0
   1ac18:	strb	r4, [sp, #184]	; 0xb8
   1ac1c:	ldr	r8, [sp, #32]
   1ac20:	ldr	r2, [sp, #12]
   1ac24:	cmp	r2, #9
   1ac28:	movls	r8, #0
   1ac2c:	andhi	r8, r8, #1
   1ac30:	cmp	r8, #0
   1ac34:	beq	1ad0c <close_stdout@@Base+0x54e0>
   1ac38:	ldr	r1, [sp, #12]
   1ac3c:	add	r2, r1, r1, lsl #2
   1ac40:	cmp	r9, r2
   1ac44:	bcc	1aedc <close_stdout@@Base+0x56b0>
   1ac48:	ldr	r2, [sp, #28]
   1ac4c:	subs	r7, r9, r2
   1ac50:	beq	1ace4 <close_stdout@@Base+0x54b8>
   1ac54:	ldrb	sl, [sp, #128]	; 0x80
   1ac58:	cmp	sl, #0
   1ac5c:	beq	1ac8c <close_stdout@@Base+0x5460>
   1ac60:	ldrb	sl, [sp, #140]	; 0x8c
   1ac64:	cmp	sl, #0
   1ac68:	bne	1acd8 <close_stdout@@Base+0x54ac>
   1ac6c:	ldr	sl, [sp, #132]	; 0x84
   1ac70:	subs	r7, r7, #1
   1ac74:	ldr	r3, [sp, #136]	; 0x88
   1ac78:	strb	r5, [sp, #128]	; 0x80
   1ac7c:	add	sl, sl, r3
   1ac80:	str	sl, [sp, #132]	; 0x84
   1ac84:	beq	1afb0 <close_stdout@@Base+0x5784>
   1ac88:	mov	sl, #0
   1ac8c:	ldrb	r3, [sp, #116]	; 0x74
   1ac90:	ldr	fp, [sp, #132]	; 0x84
   1ac94:	cmp	r3, #0
   1ac98:	bne	1ad7c <close_stdout@@Base+0x5550>
   1ac9c:	ldrb	r3, [fp]
   1aca0:	and	r2, r3, #31
   1aca4:	lsr	r3, r3, #5
   1aca8:	ldr	r3, [r6, r3, lsl #2]
   1acac:	lsr	r3, r3, r2
   1acb0:	tst	r3, #1
   1acb4:	beq	1ad68 <close_stdout@@Base+0x553c>
   1acb8:	str	r4, [sp, #136]	; 0x88
   1acbc:	mov	sl, r8
   1acc0:	ldrb	r3, [fp]
   1acc4:	strb	r4, [sp, #140]	; 0x8c
   1acc8:	str	r3, [sp, #144]	; 0x90
   1accc:	cmp	sl, #0
   1acd0:	strb	r4, [sp, #128]	; 0x80
   1acd4:	beq	1ac6c <close_stdout@@Base+0x5440>
   1acd8:	ldr	r3, [sp, #144]	; 0x90
   1acdc:	cmp	r3, #0
   1ace0:	bne	1ac6c <close_stdout@@Base+0x5440>
   1ace4:	ldrb	r3, [sp, #128]	; 0x80
   1ace8:	cmp	r3, #0
   1acec:	ldrbne	r8, [sp, #140]	; 0x8c
   1acf0:	beq	1afac <close_stdout@@Base+0x5780>
   1acf4:	cmp	r8, #0
   1acf8:	bne	1af8c <close_stdout@@Base+0x5760>
   1acfc:	ldrb	r3, [sp, #196]	; 0xc4
   1ad00:	mov	r0, #1
   1ad04:	str	r9, [sp, #28]
   1ad08:	str	r0, [sp, #32]
   1ad0c:	cmp	r3, #0
   1ad10:	ldr	r3, [sp, #12]
   1ad14:	add	r7, r9, #1
   1ad18:	add	r3, r3, #1
   1ad1c:	str	r3, [sp, #12]
   1ad20:	beq	1ae00 <close_stdout@@Base+0x55d4>
   1ad24:	ldrb	r3, [sp, #84]	; 0x54
   1ad28:	cmp	r3, #0
   1ad2c:	beq	1ae00 <close_stdout@@Base+0x55d4>
   1ad30:	ldr	r0, [sp, #200]	; 0xc8
   1ad34:	ldr	r3, [sp, #88]	; 0x58
   1ad38:	subs	r3, r0, r3
   1ad3c:	rsbs	r0, r3, #0
   1ad40:	adcs	r0, r0, r3
   1ad44:	cmp	r0, #0
   1ad48:	bne	1ae30 <close_stdout@@Base+0x5604>
   1ad4c:	ldr	r8, [sp, #188]	; 0xbc
   1ad50:	mov	r9, r7
   1ad54:	ldr	r3, [sp, #192]	; 0xc0
   1ad58:	strb	r5, [sp, #184]	; 0xb8
   1ad5c:	add	r8, r8, r3
   1ad60:	str	r8, [sp, #188]	; 0xbc
   1ad64:	b	1a910 <close_stdout@@Base+0x50e4>
   1ad68:	add	r0, sp, #120	; 0x78
   1ad6c:	bl	114b0 <mbsinit@plt>
   1ad70:	cmp	r0, #0
   1ad74:	beq	1b434 <close_stdout@@Base+0x5c08>
   1ad78:	strb	r4, [sp, #116]	; 0x74
   1ad7c:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1ad80:	mov	r1, r0
   1ad84:	mov	r0, fp
   1ad88:	bl	1822c <close_stdout@@Base+0x2a00>
   1ad8c:	mov	r1, fp
   1ad90:	add	r3, sp, #120	; 0x78
   1ad94:	mov	r2, r0
   1ad98:	add	r0, sp, #144	; 0x90
   1ad9c:	bl	1157c <mbrtowc@plt>
   1ada0:	cmn	r0, #1
   1ada4:	str	r0, [sp, #136]	; 0x88
   1ada8:	strbeq	r5, [sp, #140]	; 0x8c
   1adac:	streq	r4, [sp, #136]	; 0x88
   1adb0:	beq	1accc <close_stdout@@Base+0x54a0>
   1adb4:	cmn	r0, #2
   1adb8:	beq	1aec8 <close_stdout@@Base+0x569c>
   1adbc:	cmp	r0, #0
   1adc0:	bne	1ade4 <close_stdout@@Base+0x55b8>
   1adc4:	ldr	r3, [sp, #132]	; 0x84
   1adc8:	str	r4, [sp, #136]	; 0x88
   1adcc:	ldrb	r3, [r3]
   1add0:	cmp	r3, #0
   1add4:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1add8:	ldr	r3, [sp, #144]	; 0x90
   1addc:	cmp	r3, #0
   1ade0:	bne	1af64 <close_stdout@@Base+0x5738>
   1ade4:	add	r0, sp, #120	; 0x78
   1ade8:	strb	r4, [sp, #140]	; 0x8c
   1adec:	bl	114b0 <mbsinit@plt>
   1adf0:	mov	sl, r8
   1adf4:	cmp	r0, #0
   1adf8:	strbne	r5, [sp, #116]	; 0x74
   1adfc:	b	1accc <close_stdout@@Base+0x54a0>
   1ae00:	ldr	r2, [sp, #192]	; 0xc0
   1ae04:	ldr	r3, [sp, #80]	; 0x50
   1ae08:	cmp	r2, r3
   1ae0c:	movne	r0, #0
   1ae10:	bne	1ad44 <close_stdout@@Base+0x5518>
   1ae14:	ldr	r0, [sp, #188]	; 0xbc
   1ae18:	ldr	r1, [sp, #76]	; 0x4c
   1ae1c:	bl	114c8 <memcmp@plt>
   1ae20:	rsbs	r0, r0, #1
   1ae24:	movcc	r0, #0
   1ae28:	cmp	r0, #0
   1ae2c:	beq	1ad4c <close_stdout@@Base+0x5520>
   1ae30:	ldr	r0, [sp, #4]
   1ae34:	add	r7, sp, #172	; 0xac
   1ae38:	add	ip, sp, #228	; 0xe4
   1ae3c:	add	r8, sp, #288	; 0x120
   1ae40:	str	r0, [sp, #300]	; 0x12c
   1ae44:	ldm	r7!, {r0, r1, r2, r3}
   1ae48:	stmia	ip!, {r0, r1, r2, r3}
   1ae4c:	ldm	r7!, {r0, r1, r2, r3}
   1ae50:	strb	r5, [sp, #240]	; 0xf0
   1ae54:	stmia	ip!, {r0, r1, r2, r3}
   1ae58:	ldm	r7!, {r0, r1, r2, r3}
   1ae5c:	ldr	sl, [sp, #244]	; 0xf4
   1ae60:	stmia	ip!, {r0, r1, r2, r3}
   1ae64:	ldm	r7, {r0, r1}
   1ae68:	ldr	r3, [sp, #248]	; 0xf8
   1ae6c:	stm	ip, {r0, r1}
   1ae70:	add	r3, sl, r3
   1ae74:	str	r3, [sp, #244]	; 0xf4
   1ae78:	ldr	r1, [sp, #4]
   1ae7c:	str	r5, [sp, #288]	; 0x120
   1ae80:	strb	r5, [sp, #296]	; 0x128
   1ae84:	ldrb	r3, [r1]
   1ae88:	strb	r5, [sp, #284]	; 0x11c
   1ae8c:	and	r2, r3, #31
   1ae90:	str	r5, [r8, #4]
   1ae94:	lsr	r1, r3, #5
   1ae98:	ldr	r7, [r6, r1, lsl #2]
   1ae9c:	lsr	r7, r7, r2
   1aea0:	ands	r7, r7, #1
   1aea4:	beq	1aef0 <close_stdout@@Base+0x56c4>
   1aea8:	mov	r7, r3
   1aeac:	str	r4, [sp, #304]	; 0x130
   1aeb0:	str	r3, [sp, #312]	; 0x138
   1aeb4:	strb	r4, [sp, #308]	; 0x134
   1aeb8:	cmp	r7, #0
   1aebc:	strb	r4, [sp, #296]	; 0x128
   1aec0:	bne	1b074 <close_stdout@@Base+0x5848>
   1aec4:	bl	117a4 <abort@plt>
   1aec8:	ldr	r0, [sp, #132]	; 0x84
   1aecc:	bl	1163c <strlen@plt>
   1aed0:	strb	r5, [sp, #140]	; 0x8c
   1aed4:	str	r0, [sp, #136]	; 0x88
   1aed8:	b	1accc <close_stdout@@Base+0x54a0>
   1aedc:	mov	r2, #1
   1aee0:	str	r2, [sp, #32]
   1aee4:	b	1ad0c <close_stdout@@Base+0x54e0>
   1aee8:	mov	r0, #0
   1aeec:	b	1a9f0 <close_stdout@@Base+0x51c4>
   1aef0:	mov	r0, r8
   1aef4:	bl	114b0 <mbsinit@plt>
   1aef8:	cmp	r0, #0
   1aefc:	beq	1b434 <close_stdout@@Base+0x5c08>
   1af00:	strb	r4, [sp, #284]	; 0x11c
   1af04:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1af08:	mov	r1, r0
   1af0c:	ldr	r0, [sp, #4]
   1af10:	bl	1822c <close_stdout@@Base+0x2a00>
   1af14:	ldr	r1, [sp, #4]
   1af18:	mov	r3, r8
   1af1c:	mov	r2, r0
   1af20:	add	r0, sp, #312	; 0x138
   1af24:	bl	1157c <mbrtowc@plt>
   1af28:	cmn	r0, #1
   1af2c:	str	r0, [sp, #304]	; 0x130
   1af30:	beq	1b404 <close_stdout@@Base+0x5bd8>
   1af34:	cmn	r0, #2
   1af38:	beq	1b414 <close_stdout@@Base+0x5be8>
   1af3c:	cmp	r0, #0
   1af40:	bne	1b3d0 <close_stdout@@Base+0x5ba4>
   1af44:	ldr	fp, [sp, #300]	; 0x12c
   1af48:	str	r4, [sp, #304]	; 0x130
   1af4c:	ldrb	r3, [fp]
   1af50:	cmp	r3, #0
   1af54:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1af58:	ldr	r7, [sp, #312]	; 0x138
   1af5c:	cmp	r7, #0
   1af60:	beq	1b3d4 <close_stdout@@Base+0x5ba8>
   1af64:	ldr	r0, [pc, #1304]	; 1b484 <close_stdout@@Base+0x5c58>
   1af68:	mov	r2, #179	; 0xb3
   1af6c:	ldr	r1, [pc, #1300]	; 1b488 <close_stdout@@Base+0x5c5c>
   1af70:	ldr	r3, [pc, #1300]	; 1b48c <close_stdout@@Base+0x5c60>
   1af74:	add	r0, pc, r0
   1af78:	add	r1, pc, r1
   1af7c:	add	r3, pc, r3
   1af80:	bl	117bc <__assert_fail@plt>
   1af84:	mov	r5, r3
   1af88:	b	1aa6c <close_stdout@@Base+0x5240>
   1af8c:	ldr	r3, [sp, #144]	; 0x90
   1af90:	cmp	r3, #0
   1af94:	beq	1b394 <close_stdout@@Base+0x5b68>
   1af98:	mov	r1, #1
   1af9c:	ldrb	r3, [sp, #196]	; 0xc4
   1afa0:	str	r9, [sp, #28]
   1afa4:	str	r1, [sp, #32]
   1afa8:	b	1ad0c <close_stdout@@Base+0x54e0>
   1afac:	ldr	sl, [sp, #132]	; 0x84
   1afb0:	ldrb	r3, [sp, #116]	; 0x74
   1afb4:	cmp	r3, #0
   1afb8:	bne	1afec <close_stdout@@Base+0x57c0>
   1afbc:	ldrb	r3, [sl]
   1afc0:	and	r2, r3, #31
   1afc4:	lsr	r3, r3, #5
   1afc8:	ldr	r3, [r6, r3, lsl #2]
   1afcc:	lsr	r3, r3, r2
   1afd0:	tst	r3, #1
   1afd4:	bne	1b3bc <close_stdout@@Base+0x5b90>
   1afd8:	add	r0, sp, #120	; 0x78
   1afdc:	bl	114b0 <mbsinit@plt>
   1afe0:	cmp	r0, #0
   1afe4:	beq	1b434 <close_stdout@@Base+0x5c08>
   1afe8:	strb	r4, [sp, #116]	; 0x74
   1afec:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1aff0:	mov	r1, r0
   1aff4:	mov	r0, sl
   1aff8:	bl	1822c <close_stdout@@Base+0x2a00>
   1affc:	mov	r1, sl
   1b000:	add	r3, sp, #120	; 0x78
   1b004:	mov	r2, r0
   1b008:	add	r0, sp, #144	; 0x90
   1b00c:	bl	1157c <mbrtowc@plt>
   1b010:	cmn	r0, #1
   1b014:	str	r0, [sp, #136]	; 0x88
   1b018:	strbeq	r5, [sp, #140]	; 0x8c
   1b01c:	streq	r4, [sp, #136]	; 0x88
   1b020:	moveq	r8, #0
   1b024:	beq	1b06c <close_stdout@@Base+0x5840>
   1b028:	cmn	r0, #2
   1b02c:	beq	1b3ec <close_stdout@@Base+0x5bc0>
   1b030:	cmp	r0, #0
   1b034:	bne	1b058 <close_stdout@@Base+0x582c>
   1b038:	ldr	r3, [sp, #132]	; 0x84
   1b03c:	str	r4, [sp, #136]	; 0x88
   1b040:	ldrb	r3, [r3]
   1b044:	cmp	r3, #0
   1b048:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1b04c:	ldr	r3, [sp, #144]	; 0x90
   1b050:	cmp	r3, #0
   1b054:	bne	1af64 <close_stdout@@Base+0x5738>
   1b058:	add	r0, sp, #120	; 0x78
   1b05c:	strb	r4, [sp, #140]	; 0x8c
   1b060:	bl	114b0 <mbsinit@plt>
   1b064:	cmp	r0, #0
   1b068:	strbne	r5, [sp, #116]	; 0x74
   1b06c:	strb	r4, [sp, #128]	; 0x80
   1b070:	b	1acf4 <close_stdout@@Base+0x54c8>
   1b074:	ldr	fp, [sp, #300]	; 0x12c
   1b078:	ldr	r2, [sp, #304]	; 0x130
   1b07c:	add	r7, r9, #2
   1b080:	add	r3, sp, #312	; 0x138
   1b084:	add	r0, sp, #256	; 0x100
   1b088:	add	fp, fp, r2
   1b08c:	ldrb	r2, [sp, #284]	; 0x11c
   1b090:	strb	r5, [sp, #296]	; 0x128
   1b094:	add	r9, sp, #232	; 0xe8
   1b098:	cmp	r2, #0
   1b09c:	str	r3, [sp, #36]	; 0x24
   1b0a0:	str	r0, [sp, #40]	; 0x28
   1b0a4:	str	fp, [sp, #300]	; 0x12c
   1b0a8:	bne	1b174 <close_stdout@@Base+0x5948>
   1b0ac:	ldrb	r2, [fp]
   1b0b0:	and	r1, r2, #31
   1b0b4:	lsr	r2, r2, #5
   1b0b8:	ldr	r2, [r6, r2, lsl #2]
   1b0bc:	lsr	r2, r2, r1
   1b0c0:	tst	r2, #1
   1b0c4:	beq	1b2fc <close_stdout@@Base+0x5ad0>
   1b0c8:	str	r4, [sp, #304]	; 0x130
   1b0cc:	ldrb	r3, [fp]
   1b0d0:	strb	r4, [sp, #308]	; 0x134
   1b0d4:	mov	fp, r3
   1b0d8:	str	r3, [sp, #312]	; 0x138
   1b0dc:	cmp	fp, #0
   1b0e0:	strb	r4, [sp, #296]	; 0x128
   1b0e4:	bne	1b104 <close_stdout@@Base+0x58d8>
   1b0e8:	ldr	r0, [sp, #188]	; 0xbc
   1b0ec:	b	1a9f0 <close_stdout@@Base+0x51c4>
   1b0f0:	ldr	r0, [sp, #300]	; 0x12c
   1b0f4:	bl	1163c <strlen@plt>
   1b0f8:	strb	r5, [sp, #308]	; 0x134
   1b0fc:	str	r0, [sp, #304]	; 0x130
   1b100:	strb	r4, [sp, #296]	; 0x128
   1b104:	ldrb	fp, [sp, #240]	; 0xf0
   1b108:	cmp	fp, #0
   1b10c:	beq	1b1d8 <close_stdout@@Base+0x59ac>
   1b110:	ldrb	fp, [sp, #252]	; 0xfc
   1b114:	cmp	fp, #0
   1b118:	bne	1b224 <close_stdout@@Base+0x59f8>
   1b11c:	ldr	r2, [sp, #248]	; 0xf8
   1b120:	ldr	r3, [sp, #304]	; 0x130
   1b124:	cmp	r2, r3
   1b128:	movne	r0, #1
   1b12c:	beq	1b2e4 <close_stdout@@Base+0x5ab8>
   1b130:	cmp	r0, #0
   1b134:	add	r3, r7, #1
   1b138:	bne	1ad4c <close_stdout@@Base+0x5520>
   1b13c:	ldr	r1, [sp, #244]	; 0xf4
   1b140:	mov	r7, r3
   1b144:	ldr	r2, [sp, #248]	; 0xf8
   1b148:	ldr	fp, [sp, #300]	; 0x12c
   1b14c:	add	r1, r1, r2
   1b150:	ldr	r2, [sp, #304]	; 0x130
   1b154:	strb	r0, [sp, #240]	; 0xf0
   1b158:	add	fp, fp, r2
   1b15c:	ldrb	r2, [sp, #284]	; 0x11c
   1b160:	strb	r0, [sp, #296]	; 0x128
   1b164:	cmp	r2, #0
   1b168:	str	r1, [sp, #244]	; 0xf4
   1b16c:	str	fp, [sp, #300]	; 0x12c
   1b170:	beq	1b0ac <close_stdout@@Base+0x5880>
   1b174:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1b178:	mov	r1, r0
   1b17c:	mov	r0, fp
   1b180:	bl	1822c <close_stdout@@Base+0x2a00>
   1b184:	mov	r1, fp
   1b188:	mov	r3, r8
   1b18c:	mov	r2, r0
   1b190:	add	r0, sp, #312	; 0x138
   1b194:	bl	1157c <mbrtowc@plt>
   1b198:	cmn	r0, #1
   1b19c:	str	r0, [sp, #304]	; 0x130
   1b1a0:	strbeq	r5, [sp, #308]	; 0x134
   1b1a4:	streq	r4, [sp, #304]	; 0x130
   1b1a8:	beq	1b100 <close_stdout@@Base+0x58d4>
   1b1ac:	cmn	r0, #2
   1b1b0:	beq	1b0f0 <close_stdout@@Base+0x58c4>
   1b1b4:	cmp	r0, #0
   1b1b8:	beq	1b314 <close_stdout@@Base+0x5ae8>
   1b1bc:	ldr	fp, [sp, #312]	; 0x138
   1b1c0:	mov	r0, r8
   1b1c4:	strb	r4, [sp, #308]	; 0x134
   1b1c8:	bl	114b0 <mbsinit@plt>
   1b1cc:	cmp	r0, #0
   1b1d0:	strbne	r5, [sp, #284]	; 0x11c
   1b1d4:	b	1b0dc <close_stdout@@Base+0x58b0>
   1b1d8:	ldrb	r3, [sp, #228]	; 0xe4
   1b1dc:	ldr	sl, [sp, #244]	; 0xf4
   1b1e0:	cmp	r3, #0
   1b1e4:	bne	1b260 <close_stdout@@Base+0x5a34>
   1b1e8:	ldrb	r2, [sl]
   1b1ec:	and	r1, r2, #31
   1b1f0:	lsr	r2, r2, #5
   1b1f4:	ldr	r2, [r6, r2, lsl #2]
   1b1f8:	lsr	r2, r2, r1
   1b1fc:	tst	r2, #1
   1b200:	beq	1b24c <close_stdout@@Base+0x5a20>
   1b204:	str	r4, [sp, #248]	; 0xf8
   1b208:	mov	fp, #1
   1b20c:	ldrb	r3, [sl]
   1b210:	strb	r4, [sp, #252]	; 0xfc
   1b214:	str	r3, [sp, #256]	; 0x100
   1b218:	cmp	fp, #0
   1b21c:	strb	r4, [sp, #240]	; 0xf0
   1b220:	beq	1b11c <close_stdout@@Base+0x58f0>
   1b224:	ldr	r0, [sp, #256]	; 0x100
   1b228:	cmp	r0, #0
   1b22c:	beq	1a9f0 <close_stdout@@Base+0x51c4>
   1b230:	ldrb	r3, [sp, #308]	; 0x134
   1b234:	cmp	r3, #0
   1b238:	beq	1b11c <close_stdout@@Base+0x58f0>
   1b23c:	ldr	r3, [sp, #312]	; 0x138
   1b240:	subs	r0, r0, r3
   1b244:	movne	r0, #1
   1b248:	b	1b130 <close_stdout@@Base+0x5904>
   1b24c:	mov	r0, r9
   1b250:	bl	114b0 <mbsinit@plt>
   1b254:	cmp	r0, #0
   1b258:	beq	1b434 <close_stdout@@Base+0x5c08>
   1b25c:	strb	r4, [sp, #228]	; 0xe4
   1b260:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1b264:	mov	r1, r0
   1b268:	mov	r0, sl
   1b26c:	bl	1822c <close_stdout@@Base+0x2a00>
   1b270:	mov	r1, sl
   1b274:	mov	r3, r9
   1b278:	mov	r2, r0
   1b27c:	add	r0, sp, #256	; 0x100
   1b280:	bl	1157c <mbrtowc@plt>
   1b284:	cmn	r0, #1
   1b288:	str	r0, [sp, #248]	; 0xf8
   1b28c:	strbeq	r5, [sp, #252]	; 0xfc
   1b290:	streq	r4, [sp, #248]	; 0xf8
   1b294:	beq	1b218 <close_stdout@@Base+0x59ec>
   1b298:	cmn	r0, #2
   1b29c:	beq	1b338 <close_stdout@@Base+0x5b0c>
   1b2a0:	cmp	r0, #0
   1b2a4:	bne	1b2c8 <close_stdout@@Base+0x5a9c>
   1b2a8:	ldr	r3, [sp, #244]	; 0xf4
   1b2ac:	str	r4, [sp, #248]	; 0xf8
   1b2b0:	ldrb	r3, [r3]
   1b2b4:	cmp	r3, #0
   1b2b8:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1b2bc:	ldr	r3, [sp, #256]	; 0x100
   1b2c0:	cmp	r3, #0
   1b2c4:	bne	1af64 <close_stdout@@Base+0x5738>
   1b2c8:	mov	r0, r9
   1b2cc:	strb	r4, [sp, #252]	; 0xfc
   1b2d0:	bl	114b0 <mbsinit@plt>
   1b2d4:	mov	fp, #1
   1b2d8:	cmp	r0, #0
   1b2dc:	strbne	r5, [sp, #228]	; 0xe4
   1b2e0:	b	1b218 <close_stdout@@Base+0x59ec>
   1b2e4:	ldr	r0, [sp, #244]	; 0xf4
   1b2e8:	ldr	r1, [sp, #300]	; 0x12c
   1b2ec:	bl	114c8 <memcmp@plt>
   1b2f0:	adds	r0, r0, #0
   1b2f4:	movne	r0, #1
   1b2f8:	b	1b130 <close_stdout@@Base+0x5904>
   1b2fc:	mov	r0, r8
   1b300:	bl	114b0 <mbsinit@plt>
   1b304:	cmp	r0, #0
   1b308:	beq	1b434 <close_stdout@@Base+0x5c08>
   1b30c:	strb	r4, [sp, #284]	; 0x11c
   1b310:	b	1b174 <close_stdout@@Base+0x5948>
   1b314:	ldr	r3, [sp, #300]	; 0x12c
   1b318:	str	r4, [sp, #304]	; 0x130
   1b31c:	ldrb	r3, [r3]
   1b320:	cmp	r3, #0
   1b324:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1b328:	ldr	fp, [sp, #312]	; 0x138
   1b32c:	cmp	fp, #0
   1b330:	beq	1b1c0 <close_stdout@@Base+0x5994>
   1b334:	b	1af64 <close_stdout@@Base+0x5738>
   1b338:	ldr	r0, [sp, #244]	; 0xf4
   1b33c:	bl	1163c <strlen@plt>
   1b340:	strb	r5, [sp, #252]	; 0xfc
   1b344:	str	r0, [sp, #248]	; 0xf8
   1b348:	b	1b218 <close_stdout@@Base+0x59ec>
   1b34c:	ldr	r3, [sp, #188]	; 0xbc
   1b350:	str	r4, [sp, #192]	; 0xc0
   1b354:	ldrb	r3, [r3]
   1b358:	cmp	r3, #0
   1b35c:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1b360:	ldr	r7, [sp, #200]	; 0xc8
   1b364:	cmp	r7, #0
   1b368:	beq	1abc0 <close_stdout@@Base+0x5394>
   1b36c:	b	1af64 <close_stdout@@Base+0x5738>
   1b370:	ldr	r3, [sp, #76]	; 0x4c
   1b374:	str	r7, [sp, #80]	; 0x50
   1b378:	ldrb	r3, [r3]
   1b37c:	cmp	r3, #0
   1b380:	bne	1b458 <close_stdout@@Base+0x5c2c>
   1b384:	ldr	r4, [sp, #88]	; 0x58
   1b388:	cmp	r4, #0
   1b38c:	beq	1a9c0 <close_stdout@@Base+0x5194>
   1b390:	b	1af64 <close_stdout@@Base+0x5738>
   1b394:	ldr	r0, [sp, #16]
   1b398:	add	r2, sp, #56	; 0x38
   1b39c:	ldr	r1, [sp, #4]
   1b3a0:	bl	19ed8 <close_stdout@@Base+0x46ac>
   1b3a4:	cmp	r0, #0
   1b3a8:	bne	1b42c <close_stdout@@Base+0x5c00>
   1b3ac:	str	r0, [sp, #32]
   1b3b0:	ldrb	r3, [sp, #196]	; 0xc4
   1b3b4:	str	r9, [sp, #28]
   1b3b8:	b	1ad0c <close_stdout@@Base+0x54e0>
   1b3bc:	str	r4, [sp, #136]	; 0x88
   1b3c0:	ldrb	r3, [sl]
   1b3c4:	strb	r4, [sp, #140]	; 0x8c
   1b3c8:	str	r3, [sp, #144]	; 0x90
   1b3cc:	b	1b06c <close_stdout@@Base+0x5840>
   1b3d0:	ldr	r7, [sp, #312]	; 0x138
   1b3d4:	mov	r0, r8
   1b3d8:	strb	r4, [sp, #308]	; 0x134
   1b3dc:	bl	114b0 <mbsinit@plt>
   1b3e0:	cmp	r0, #0
   1b3e4:	strbne	r5, [sp, #284]	; 0x11c
   1b3e8:	b	1aeb8 <close_stdout@@Base+0x568c>
   1b3ec:	ldr	r0, [sp, #132]	; 0x84
   1b3f0:	mov	r8, #0
   1b3f4:	bl	1163c <strlen@plt>
   1b3f8:	strb	r5, [sp, #140]	; 0x8c
   1b3fc:	str	r0, [sp, #136]	; 0x88
   1b400:	b	1b06c <close_stdout@@Base+0x5840>
   1b404:	str	r4, [sp, #304]	; 0x130
   1b408:	strb	r7, [sp, #308]	; 0x134
   1b40c:	ldr	fp, [sp, #300]	; 0x12c
   1b410:	b	1b078 <close_stdout@@Base+0x584c>
   1b414:	ldr	fp, [sp, #300]	; 0x12c
   1b418:	mov	r0, fp
   1b41c:	bl	1163c <strlen@plt>
   1b420:	strb	r7, [sp, #308]	; 0x134
   1b424:	str	r0, [sp, #304]	; 0x130
   1b428:	b	1b078 <close_stdout@@Base+0x584c>
   1b42c:	ldr	r0, [sp, #56]	; 0x38
   1b430:	b	1a9f0 <close_stdout@@Base+0x51c4>
   1b434:	ldr	r0, [pc, #84]	; 1b490 <close_stdout@@Base+0x5c64>
   1b438:	mov	r2, #150	; 0x96
   1b43c:	ldr	r1, [pc, #80]	; 1b494 <close_stdout@@Base+0x5c68>
   1b440:	ldr	r3, [pc, #80]	; 1b498 <close_stdout@@Base+0x5c6c>
   1b444:	add	r0, pc, r0
   1b448:	add	r1, pc, r1
   1b44c:	add	r3, pc, r3
   1b450:	bl	117bc <__assert_fail@plt>
   1b454:	bl	114e0 <__stack_chk_fail@plt>
   1b458:	ldr	r0, [pc, #60]	; 1b49c <close_stdout@@Base+0x5c70>
   1b45c:	mov	r2, #178	; 0xb2
   1b460:	ldr	r1, [pc, #56]	; 1b4a0 <close_stdout@@Base+0x5c74>
   1b464:	ldr	r3, [pc, #56]	; 1b4a4 <close_stdout@@Base+0x5c78>
   1b468:	add	r0, pc, r0
   1b46c:	add	r1, pc, r1
   1b470:	add	r3, pc, r3
   1b474:	bl	117bc <__assert_fail@plt>
   1b478:	strdeq	r3, [r1], -r4
   1b47c:	andeq	r0, r0, r8, asr r1
   1b480:	andeq	r0, r0, r4, asr r1
   1b484:	andeq	r1, r0, r4, asr #29
   1b488:	muleq	r0, r8, lr
   1b48c:	andeq	r2, r0, ip, asr r3
   1b490:			; <UNDEFINED> instruction: 0x000019b4
   1b494:	andeq	r1, r0, r8, asr #19
   1b498:	andeq	r1, r0, ip, lsl #29
   1b49c:			; <UNDEFINED> instruction: 0x000019b8
   1b4a0:	andeq	r1, r0, r4, lsr #19
   1b4a4:	andeq	r1, r0, r8, ror #28
   1b4a8:	ldr	ip, [pc, #852]	; 1b804 <close_stdout@@Base+0x5fd8>
   1b4ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4b0:	mov	r6, r2
   1b4b4:	sub	sp, sp, #4160	; 0x1040
   1b4b8:	ldr	r2, [pc, #840]	; 1b808 <close_stdout@@Base+0x5fdc>
   1b4bc:	sub	sp, sp, #4
   1b4c0:	add	ip, pc, ip
   1b4c4:	mov	r5, #0
   1b4c8:	movw	fp, #61424	; 0xeff0
   1b4cc:	str	r0, [sp, #24]
   1b4d0:	mov	r0, r6
   1b4d4:	str	r1, [sp, #16]
   1b4d8:	mov	r1, r5
   1b4dc:	str	r3, [sp, #32]
   1b4e0:	mov	r3, r5
   1b4e4:	ldr	r2, [ip, r2]
   1b4e8:	add	ip, sp, #8192	; 0x2000
   1b4ec:	str	r5, [sp]
   1b4f0:	movt	fp, #65535	; 0xffff
   1b4f4:	ldr	ip, [ip, #-3992]	; 0xfffff068
   1b4f8:	str	r2, [sp, #20]
   1b4fc:	mov	r2, r5
   1b500:	ldr	lr, [sp, #20]
   1b504:	str	ip, [sp, #28]
   1b508:	ldr	ip, [lr]
   1b50c:	add	lr, sp, #8192	; 0x2000
   1b510:	str	ip, [lr, #-4036]	; 0xfffff03c
   1b514:	bl	11444 <iconv@plt>
   1b518:	ldr	ip, [sp, #16]
   1b51c:	add	lr, sp, #4160	; 0x1040
   1b520:	movw	r3, #61420	; 0xefec
   1b524:	cmp	ip, r5
   1b528:	ldr	ip, [sp, #24]
   1b52c:	movt	r3, #65535	; 0xffff
   1b530:	str	ip, [lr, r3]
   1b534:	ldr	ip, [sp, #16]
   1b538:	str	ip, [lr, fp]
   1b53c:	beq	1b7e0 <close_stdout@@Base+0x5fb4>
   1b540:	movw	r9, #61432	; 0xeff8
   1b544:	movt	r9, #65535	; 0xffff
   1b548:	movw	sl, #61428	; 0xeff4
   1b54c:	movt	sl, #65535	; 0xffff
   1b550:	mov	r3, r9
   1b554:	add	ip, sp, #64	; 0x40
   1b558:	mov	r9, sl
   1b55c:	str	ip, [sp, #36]	; 0x24
   1b560:	add	r4, sp, #60	; 0x3c
   1b564:	add	ip, sp, #44	; 0x2c
   1b568:	add	r7, sp, #52	; 0x34
   1b56c:	str	ip, [sp, #8]
   1b570:	add	r8, sp, #56	; 0x38
   1b574:	add	ip, sp, #48	; 0x30
   1b578:	mov	sl, r3
   1b57c:	str	ip, [sp, #12]
   1b580:	b	1b5a0 <close_stdout@@Base+0x5d74>
   1b584:	add	lr, sp, #4160	; 0x1040
   1b588:	ldr	r2, [lr, fp]
   1b58c:	ldr	r3, [lr, r9]
   1b590:	cmp	r2, #0
   1b594:	rsb	r3, r4, r3
   1b598:	add	r5, r5, r3
   1b59c:	beq	1b5e8 <close_stdout@@Base+0x5dbc>
   1b5a0:	add	lr, sp, #4160	; 0x1040
   1b5a4:	str	r8, [sp]
   1b5a8:	mov	ip, #4096	; 0x1000
   1b5ac:	mov	r0, r6
   1b5b0:	add	r1, sp, #44	; 0x2c
   1b5b4:	add	r2, sp, #48	; 0x30
   1b5b8:	mov	r3, r7
   1b5bc:	str	r4, [lr, r9]
   1b5c0:	str	ip, [lr, sl]
   1b5c4:	bl	11444 <iconv@plt>
   1b5c8:	cmn	r0, #1
   1b5cc:	bne	1b584 <close_stdout@@Base+0x5d58>
   1b5d0:	bl	11678 <__errno_location@plt>
   1b5d4:	ldr	r3, [r0]
   1b5d8:	cmp	r3, #7
   1b5dc:	beq	1b584 <close_stdout@@Base+0x5d58>
   1b5e0:	cmp	r3, #22
   1b5e4:	bne	1b7d8 <close_stdout@@Base+0x5fac>
   1b5e8:	add	lr, sp, #4160	; 0x1040
   1b5ec:	movw	r9, #61428	; 0xeff4
   1b5f0:	movw	r3, #61432	; 0xeff8
   1b5f4:	movt	r9, #65535	; 0xffff
   1b5f8:	movt	r3, #65535	; 0xffff
   1b5fc:	mov	r1, #0
   1b600:	str	r8, [sp]
   1b604:	mov	ip, #4096	; 0x1000
   1b608:	mov	r2, r1
   1b60c:	str	ip, [lr, r3]
   1b610:	mov	r0, r6
   1b614:	str	r4, [lr, r9]
   1b618:	mov	r3, r7
   1b61c:	bl	11444 <iconv@plt>
   1b620:	cmn	r0, #1
   1b624:	beq	1b7d8 <close_stdout@@Base+0x5fac>
   1b628:	add	r0, sp, #4160	; 0x1040
   1b62c:	ldr	r3, [r0, r9]
   1b630:	rsb	r4, r4, r3
   1b634:	adds	r5, r5, r4
   1b638:	beq	1b788 <close_stdout@@Base+0x5f5c>
   1b63c:	ldr	ip, [sp, #32]
   1b640:	ldr	r4, [ip]
   1b644:	cmp	r4, #0
   1b648:	beq	1b764 <close_stdout@@Base+0x5f38>
   1b64c:	ldr	ip, [sp, #28]
   1b650:	ldr	r3, [ip]
   1b654:	cmp	r5, r3
   1b658:	bhi	1b764 <close_stdout@@Base+0x5f38>
   1b65c:	mov	r3, #0
   1b660:	mov	r0, r6
   1b664:	mov	r1, r3
   1b668:	mov	r2, r3
   1b66c:	str	r3, [sp]
   1b670:	movw	sl, #61424	; 0xeff0
   1b674:	bl	11444 <iconv@plt>
   1b678:	ldr	ip, [sp, #24]
   1b67c:	add	lr, sp, #4160	; 0x1040
   1b680:	movw	r3, #61420	; 0xefec
   1b684:	movt	r3, #65535	; 0xffff
   1b688:	movt	sl, #65535	; 0xffff
   1b68c:	movw	r1, #61428	; 0xeff4
   1b690:	movw	r2, #61432	; 0xeff8
   1b694:	str	ip, [lr, r3]
   1b698:	movt	r1, #65535	; 0xffff
   1b69c:	ldr	ip, [sp, #16]
   1b6a0:	movt	r2, #65535	; 0xffff
   1b6a4:	str	r4, [lr, r1]
   1b6a8:	str	r5, [lr, r2]
   1b6ac:	str	ip, [lr, sl]
   1b6b0:	mov	r3, ip
   1b6b4:	ldr	ip, [sp, #36]	; 0x24
   1b6b8:	sub	fp, ip, #20
   1b6bc:	sub	r9, ip, #16
   1b6c0:	b	1b6ec <close_stdout@@Base+0x5ec0>
   1b6c4:	str	r8, [sp]
   1b6c8:	mov	r0, r6
   1b6cc:	mov	r1, fp
   1b6d0:	mov	r2, r9
   1b6d4:	mov	r3, r7
   1b6d8:	bl	11444 <iconv@plt>
   1b6dc:	cmn	r0, #1
   1b6e0:	beq	1b798 <close_stdout@@Base+0x5f6c>
   1b6e4:	add	lr, sp, #4160	; 0x1040
   1b6e8:	ldr	r3, [lr, sl]
   1b6ec:	cmp	r3, #0
   1b6f0:	bne	1b6c4 <close_stdout@@Base+0x5e98>
   1b6f4:	mov	r1, #0
   1b6f8:	str	r8, [sp]
   1b6fc:	mov	r0, r6
   1b700:	mov	r3, r7
   1b704:	mov	r2, r1
   1b708:	bl	11444 <iconv@plt>
   1b70c:	cmn	r0, #1
   1b710:	beq	1b7a8 <close_stdout@@Base+0x5f7c>
   1b714:	movw	r3, #61432	; 0xeff8
   1b718:	add	r0, sp, #4160	; 0x1040
   1b71c:	movt	r3, #65535	; 0xffff
   1b720:	ldr	r3, [r0, r3]
   1b724:	cmp	r3, #0
   1b728:	bne	1b7fc <close_stdout@@Base+0x5fd0>
   1b72c:	ldr	ip, [sp, #32]
   1b730:	str	r4, [ip]
   1b734:	ldr	ip, [sp, #28]
   1b738:	str	r5, [ip]
   1b73c:	ldr	ip, [sp, #20]
   1b740:	add	r0, sp, #8192	; 0x2000
   1b744:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   1b748:	mov	r0, r3
   1b74c:	ldr	r3, [ip]
   1b750:	cmp	r2, r3
   1b754:	bne	1b800 <close_stdout@@Base+0x5fd4>
   1b758:	add	sp, sp, #4160	; 0x1040
   1b75c:	add	sp, sp, #4
   1b760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b764:	mov	r0, r5
   1b768:	bl	115ac <malloc@plt>
   1b76c:	subs	r4, r0, #0
   1b770:	bne	1b65c <close_stdout@@Base+0x5e30>
   1b774:	bl	11678 <__errno_location@plt>
   1b778:	mov	r2, #12
   1b77c:	mvn	r3, #0
   1b780:	str	r2, [r0]
   1b784:	b	1b73c <close_stdout@@Base+0x5f10>
   1b788:	ldr	ip, [sp, #28]
   1b78c:	mov	r3, r5
   1b790:	str	r5, [ip]
   1b794:	b	1b73c <close_stdout@@Base+0x5f10>
   1b798:	bl	11678 <__errno_location@plt>
   1b79c:	ldr	r3, [r0]
   1b7a0:	cmp	r3, #22
   1b7a4:	beq	1b6f4 <close_stdout@@Base+0x5ec8>
   1b7a8:	ldr	ip, [sp, #32]
   1b7ac:	ldr	r3, [ip]
   1b7b0:	cmp	r3, r4
   1b7b4:	beq	1b7d8 <close_stdout@@Base+0x5fac>
   1b7b8:	bl	11678 <__errno_location@plt>
   1b7bc:	ldr	r6, [r0]
   1b7c0:	mov	r5, r0
   1b7c4:	mov	r0, r4
   1b7c8:	bl	11480 <free@plt>
   1b7cc:	mvn	r3, #0
   1b7d0:	str	r6, [r5]
   1b7d4:	b	1b73c <close_stdout@@Base+0x5f10>
   1b7d8:	mvn	r3, #0
   1b7dc:	b	1b73c <close_stdout@@Base+0x5f10>
   1b7e0:	add	ip, sp, #64	; 0x40
   1b7e4:	add	r4, sp, #60	; 0x3c
   1b7e8:	str	ip, [sp, #36]	; 0x24
   1b7ec:	add	r7, sp, #52	; 0x34
   1b7f0:	add	r8, sp, #56	; 0x38
   1b7f4:	ldr	r5, [sp, #16]
   1b7f8:	b	1b5e8 <close_stdout@@Base+0x5dbc>
   1b7fc:	bl	117a4 <abort@plt>
   1b800:	bl	114e0 <__stack_chk_fail@plt>
   1b804:	andeq	r2, r1, r8, lsr fp
   1b808:	andeq	r0, r0, r8, asr r1
   1b80c:	ldr	r3, [pc, #524]	; 1ba20 <close_stdout@@Base+0x61f4>
   1b810:	ldr	r2, [pc, #524]	; 1ba24 <close_stdout@@Base+0x61f8>
   1b814:	add	r3, pc, r3
   1b818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b81c:	sub	sp, sp, #52	; 0x34
   1b820:	ldr	r2, [r3, r2]
   1b824:	mov	r6, r1
   1b828:	str	r0, [sp, #28]
   1b82c:	ldr	r3, [r2]
   1b830:	str	r2, [sp, #20]
   1b834:	str	r3, [sp, #44]	; 0x2c
   1b838:	bl	1163c <strlen@plt>
   1b83c:	cmp	r0, #4096	; 0x1000
   1b840:	mov	fp, r0
   1b844:	lslcc	fp, r0, #4
   1b848:	str	r0, [sp, #32]
   1b84c:	add	r5, fp, #1
   1b850:	mov	r0, r5
   1b854:	bl	115ac <malloc@plt>
   1b858:	subs	r4, r0, #0
   1b85c:	beq	1ba0c <close_stdout@@Base+0x61e0>
   1b860:	mov	r3, #0
   1b864:	add	r2, sp, #32
   1b868:	mov	r1, r3
   1b86c:	str	r2, [sp, #16]
   1b870:	str	r3, [sp]
   1b874:	mov	r2, r3
   1b878:	mov	r0, r6
   1b87c:	add	sl, sp, #28
   1b880:	bl	11444 <iconv@plt>
   1b884:	add	r8, sp, #36	; 0x24
   1b888:	add	r7, sp, #40	; 0x28
   1b88c:	str	r4, [sp, #36]	; 0x24
   1b890:	str	fp, [sp, #40]	; 0x28
   1b894:	b	1b8f8 <close_stdout@@Base+0x60cc>
   1b898:	bl	11678 <__errno_location@plt>
   1b89c:	ldr	r3, [r0]
   1b8a0:	mov	fp, r0
   1b8a4:	cmp	r3, #22
   1b8a8:	beq	1b974 <close_stdout@@Base+0x6148>
   1b8ac:	cmp	r3, #7
   1b8b0:	bne	1b9d4 <close_stdout@@Base+0x61a8>
   1b8b4:	lsl	r9, r5, #1
   1b8b8:	ldr	r1, [sp, #36]	; 0x24
   1b8bc:	cmp	r5, r9
   1b8c0:	rsb	r5, r4, r1
   1b8c4:	bcs	1b9cc <close_stdout@@Base+0x61a0>
   1b8c8:	mov	r0, r4
   1b8cc:	mov	r1, r9
   1b8d0:	bl	114f8 <realloc@plt>
   1b8d4:	cmp	r0, #0
   1b8d8:	beq	1b9cc <close_stdout@@Base+0x61a0>
   1b8dc:	sub	r1, r9, #1
   1b8e0:	add	r2, r0, r5
   1b8e4:	mov	r4, r0
   1b8e8:	rsb	r5, r5, r1
   1b8ec:	str	r5, [sp, #40]	; 0x28
   1b8f0:	mov	r5, r9
   1b8f4:	str	r2, [sp, #36]	; 0x24
   1b8f8:	str	r7, [sp]
   1b8fc:	mov	r0, r6
   1b900:	mov	r1, sl
   1b904:	add	r2, sp, #32
   1b908:	mov	r3, r8
   1b90c:	bl	11444 <iconv@plt>
   1b910:	cmn	r0, #1
   1b914:	beq	1b898 <close_stdout@@Base+0x606c>
   1b918:	b	1b974 <close_stdout@@Base+0x6148>
   1b91c:	bl	11678 <__errno_location@plt>
   1b920:	ldr	r3, [r0]
   1b924:	mov	fp, r0
   1b928:	cmp	r3, #7
   1b92c:	bne	1b9d4 <close_stdout@@Base+0x61a8>
   1b930:	lsl	r9, r5, #1
   1b934:	ldr	r3, [sp, #36]	; 0x24
   1b938:	cmp	r5, r9
   1b93c:	rsb	r5, r4, r3
   1b940:	bcs	1b9cc <close_stdout@@Base+0x61a0>
   1b944:	mov	r0, r4
   1b948:	mov	r1, r9
   1b94c:	bl	114f8 <realloc@plt>
   1b950:	cmp	r0, #0
   1b954:	beq	1b9cc <close_stdout@@Base+0x61a0>
   1b958:	sub	r2, r9, #1
   1b95c:	add	r3, r0, r5
   1b960:	mov	r4, r0
   1b964:	rsb	r5, r5, r2
   1b968:	str	r5, [sp, #40]	; 0x28
   1b96c:	mov	r5, r9
   1b970:	str	r3, [sp, #36]	; 0x24
   1b974:	mov	r1, #0
   1b978:	str	r7, [sp]
   1b97c:	mov	r2, r1
   1b980:	mov	r0, r6
   1b984:	mov	r3, r8
   1b988:	bl	11444 <iconv@plt>
   1b98c:	cmn	r0, #1
   1b990:	beq	1b91c <close_stdout@@Base+0x60f0>
   1b994:	ldr	r3, [sp, #36]	; 0x24
   1b998:	mov	r2, #0
   1b99c:	add	r1, r3, #1
   1b9a0:	str	r1, [sp, #36]	; 0x24
   1b9a4:	strb	r2, [r3]
   1b9a8:	ldr	r1, [sp, #36]	; 0x24
   1b9ac:	rsb	r1, r4, r1
   1b9b0:	cmp	r1, r5
   1b9b4:	bcs	1b9ec <close_stdout@@Base+0x61c0>
   1b9b8:	mov	r0, r4
   1b9bc:	bl	114f8 <realloc@plt>
   1b9c0:	cmp	r0, #0
   1b9c4:	movne	r4, r0
   1b9c8:	b	1b9ec <close_stdout@@Base+0x61c0>
   1b9cc:	mov	r3, #12
   1b9d0:	str	r3, [fp]
   1b9d4:	mov	r0, r4
   1b9d8:	str	r3, [sp, #12]
   1b9dc:	bl	11480 <free@plt>
   1b9e0:	ldr	r3, [sp, #12]
   1b9e4:	mov	r4, #0
   1b9e8:	str	r3, [fp]
   1b9ec:	ldr	r1, [sp, #20]
   1b9f0:	mov	r0, r4
   1b9f4:	ldr	r2, [sp, #44]	; 0x2c
   1b9f8:	ldr	r3, [r1]
   1b9fc:	cmp	r2, r3
   1ba00:	bne	1ba1c <close_stdout@@Base+0x61f0>
   1ba04:	add	sp, sp, #52	; 0x34
   1ba08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba0c:	bl	11678 <__errno_location@plt>
   1ba10:	mov	r3, #12
   1ba14:	str	r3, [r0]
   1ba18:	b	1b9ec <close_stdout@@Base+0x61c0>
   1ba1c:	bl	114e0 <__stack_chk_fail@plt>
   1ba20:	andeq	r2, r1, r4, ror #15
   1ba24:	andeq	r0, r0, r8, asr r1
   1ba28:	push	{r3, r4, r5, r6, r7, lr}
   1ba2c:	mov	r4, r0
   1ba30:	ldrb	r3, [r0]
   1ba34:	mov	r5, r1
   1ba38:	mov	r6, r2
   1ba3c:	cmp	r3, #0
   1ba40:	beq	1ba58 <close_stdout@@Base+0x622c>
   1ba44:	mov	r0, r1
   1ba48:	mov	r1, r2
   1ba4c:	bl	1978c <close_stdout@@Base+0x3f60>
   1ba50:	cmp	r0, #0
   1ba54:	bne	1ba74 <close_stdout@@Base+0x6248>
   1ba58:	mov	r0, r4
   1ba5c:	bl	116a8 <__strdup@plt>
   1ba60:	subs	r4, r0, #0
   1ba64:	beq	1bad0 <close_stdout@@Base+0x62a4>
   1ba68:	mov	r3, r4
   1ba6c:	mov	r0, r3
   1ba70:	pop	{r3, r4, r5, r6, r7, pc}
   1ba74:	mov	r1, r5
   1ba78:	mov	r0, r6
   1ba7c:	bl	115b8 <iconv_open@plt>
   1ba80:	cmn	r0, #1
   1ba84:	mov	r5, r0
   1ba88:	beq	1bae8 <close_stdout@@Base+0x62bc>
   1ba8c:	mov	r0, r4
   1ba90:	mov	r1, r5
   1ba94:	bl	1b80c <close_stdout@@Base+0x5fe0>
   1ba98:	subs	r4, r0, #0
   1ba9c:	beq	1baf0 <close_stdout@@Base+0x62c4>
   1baa0:	mov	r0, r5
   1baa4:	bl	11438 <iconv_close@plt>
   1baa8:	cmp	r0, #0
   1baac:	bge	1ba68 <close_stdout@@Base+0x623c>
   1bab0:	bl	11678 <__errno_location@plt>
   1bab4:	ldr	r6, [r0]
   1bab8:	mov	r5, r0
   1babc:	mov	r0, r4
   1bac0:	bl	11480 <free@plt>
   1bac4:	mov	r3, #0
   1bac8:	str	r6, [r5]
   1bacc:	b	1ba6c <close_stdout@@Base+0x6240>
   1bad0:	bl	11678 <__errno_location@plt>
   1bad4:	mov	r3, r4
   1bad8:	mov	r2, #12
   1badc:	str	r2, [r0]
   1bae0:	mov	r0, r3
   1bae4:	pop	{r3, r4, r5, r6, r7, pc}
   1bae8:	mov	r3, #0
   1baec:	b	1ba6c <close_stdout@@Base+0x6240>
   1baf0:	bl	11678 <__errno_location@plt>
   1baf4:	ldr	r7, [r0]
   1baf8:	mov	r6, r0
   1bafc:	mov	r0, r5
   1bb00:	bl	11438 <iconv_close@plt>
   1bb04:	mov	r3, r4
   1bb08:	str	r7, [r6]
   1bb0c:	b	1ba6c <close_stdout@@Base+0x6240>
   1bb10:	adds	r0, r0, #8
   1bb14:	push	{r3, r4, r5, lr}
   1bb18:	bcs	1bb6c <close_stdout@@Base+0x6340>
   1bb1c:	bl	115ac <malloc@plt>
   1bb20:	subs	r1, r0, #0
   1bb24:	beq	1bb6c <close_stdout@@Base+0x6340>
   1bb28:	add	r2, r1, #8
   1bb2c:	movw	r3, #65281	; 0xff01
   1bb30:	movt	r3, #65280	; 0xff00
   1bb34:	ldr	ip, [pc, #56]	; 1bb74 <close_stdout@@Base+0x6348>
   1bb38:	movw	r4, #64330	; 0xfb4a
   1bb3c:	movt	r4, #5141	; 0x1415
   1bb40:	umull	r5, r3, r3, r2
   1bb44:	add	ip, pc, ip
   1bb48:	str	r4, [r1, #4]
   1bb4c:	mov	r0, r2
   1bb50:	lsr	r3, r3, #8
   1bb54:	add	r3, r3, r3, lsl #8
   1bb58:	rsb	r3, r3, r2
   1bb5c:	ldr	r4, [ip, r3, lsl #2]
   1bb60:	str	r2, [ip, r3, lsl #2]
   1bb64:	str	r4, [r1]
   1bb68:	pop	{r3, r4, r5, pc}
   1bb6c:	mov	r0, #0
   1bb70:	pop	{r3, r4, r5, pc}
   1bb74:	andeq	r2, r1, r0, lsl #28
   1bb78:	cmp	r0, #0
   1bb7c:	bxeq	lr
   1bb80:	ldr	r2, [r0, #-4]
   1bb84:	movw	r3, #64330	; 0xfb4a
   1bb88:	movt	r3, #5141	; 0x1415
   1bb8c:	cmp	r2, r3
   1bb90:	bxne	lr
   1bb94:	movw	r3, #65281	; 0xff01
   1bb98:	movt	r3, #65280	; 0xff00
   1bb9c:	ldr	r1, [pc, #88]	; 1bbfc <close_stdout@@Base+0x63d0>
   1bba0:	umull	r2, r3, r3, r0
   1bba4:	add	r1, pc, r1
   1bba8:	lsr	r3, r3, #8
   1bbac:	add	r3, r3, r3, lsl #8
   1bbb0:	rsb	r3, r3, r0
   1bbb4:	ldr	r2, [r1, r3, lsl #2]
   1bbb8:	cmp	r2, #0
   1bbbc:	bxeq	lr
   1bbc0:	cmp	r0, r2
   1bbc4:	addeq	r2, r1, r3, lsl #2
   1bbc8:	bne	1bbdc <close_stdout@@Base+0x63b0>
   1bbcc:	b	1bbf0 <close_stdout@@Base+0x63c4>
   1bbd0:	cmp	r0, r3
   1bbd4:	beq	1bbec <close_stdout@@Base+0x63c0>
   1bbd8:	mov	r2, r3
   1bbdc:	ldr	r3, [r2, #-8]
   1bbe0:	cmp	r3, #0
   1bbe4:	bne	1bbd0 <close_stdout@@Base+0x63a4>
   1bbe8:	bx	lr
   1bbec:	sub	r2, r2, #8
   1bbf0:	ldr	ip, [r0, #-8]!
   1bbf4:	str	ip, [r2]
   1bbf8:	b	11480 <free@plt>
   1bbfc:	andeq	r2, r1, r0, lsr #27
   1bc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc04:	sub	sp, sp, #76	; 0x4c
   1bc08:	ldr	r8, [pc, #524]	; 1be1c <close_stdout@@Base+0x65f0>
   1bc0c:	mov	sl, r0
   1bc10:	ldr	r3, [pc, #520]	; 1be20 <close_stdout@@Base+0x65f4>
   1bc14:	add	r8, pc, r8
   1bc18:	ldr	r3, [r8, r3]
   1bc1c:	str	r3, [sp, #4]
   1bc20:	ldr	r3, [r3]
   1bc24:	str	r3, [sp, #68]	; 0x44
   1bc28:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1bc2c:	cmp	r0, #1
   1bc30:	bls	1bdcc <close_stdout@@Base+0x65a0>
   1bc34:	mov	r3, #0
   1bc38:	add	r7, sp, #16
   1bc3c:	add	r9, sp, #40	; 0x28
   1bc40:	mov	fp, r3
   1bc44:	mov	r4, sl
   1bc48:	mov	r6, r3
   1bc4c:	mov	r5, #1
   1bc50:	str	r3, [sp, #16]
   1bc54:	strb	r3, [sp, #24]
   1bc58:	str	sl, [sp, #28]
   1bc5c:	strb	r3, [sp, #12]
   1bc60:	str	r3, [r7, #4]
   1bc64:	ldrb	r2, [sp, #12]
   1bc68:	cmp	r2, #0
   1bc6c:	bne	1bce4 <close_stdout@@Base+0x64b8>
   1bc70:	ldr	r2, [pc, #428]	; 1be24 <close_stdout@@Base+0x65f8>
   1bc74:	ldrb	r3, [r4]
   1bc78:	ldr	r1, [r8, r2]
   1bc7c:	and	r2, r3, #31
   1bc80:	lsr	r3, r3, #5
   1bc84:	ldr	r3, [r1, r3, lsl #2]
   1bc88:	lsr	r3, r3, r2
   1bc8c:	tst	r3, #1
   1bc90:	beq	1bcd0 <close_stdout@@Base+0x64a4>
   1bc94:	str	r5, [sp, #32]
   1bc98:	ldrb	r4, [r4]
   1bc9c:	strb	r5, [sp, #36]	; 0x24
   1bca0:	cmp	r4, #0
   1bca4:	strb	r5, [sp, #24]
   1bca8:	str	r4, [sp, #40]	; 0x28
   1bcac:	bne	1bd48 <close_stdout@@Base+0x651c>
   1bcb0:	mov	r0, fp
   1bcb4:	ldr	r1, [sp, #4]
   1bcb8:	ldr	r2, [sp, #68]	; 0x44
   1bcbc:	ldr	r3, [r1]
   1bcc0:	cmp	r2, r3
   1bcc4:	bne	1bdf8 <close_stdout@@Base+0x65cc>
   1bcc8:	add	sp, sp, #76	; 0x4c
   1bccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcd0:	mov	r0, r7
   1bcd4:	bl	114b0 <mbsinit@plt>
   1bcd8:	cmp	r0, #0
   1bcdc:	beq	1bdd8 <close_stdout@@Base+0x65ac>
   1bce0:	strb	r5, [sp, #12]
   1bce4:	bl	1154c <__ctype_get_mb_cur_max@plt>
   1bce8:	mov	r1, r0
   1bcec:	mov	r0, r4
   1bcf0:	bl	1822c <close_stdout@@Base+0x2a00>
   1bcf4:	mov	r1, r4
   1bcf8:	mov	r3, r7
   1bcfc:	mov	r2, r0
   1bd00:	mov	r0, r9
   1bd04:	bl	1157c <mbrtowc@plt>
   1bd08:	cmn	r0, #1
   1bd0c:	str	r0, [sp, #32]
   1bd10:	beq	1bd64 <close_stdout@@Base+0x6538>
   1bd14:	cmn	r0, #2
   1bd18:	beq	1bdb4 <close_stdout@@Base+0x6588>
   1bd1c:	cmp	r0, #0
   1bd20:	beq	1bd74 <close_stdout@@Base+0x6548>
   1bd24:	ldr	r4, [sp, #40]	; 0x28
   1bd28:	mov	r0, r7
   1bd2c:	strb	r5, [sp, #36]	; 0x24
   1bd30:	bl	114b0 <mbsinit@plt>
   1bd34:	strb	r5, [sp, #24]
   1bd38:	cmp	r0, #0
   1bd3c:	strbne	r6, [sp, #12]
   1bd40:	cmp	r4, #0
   1bd44:	beq	1bcb0 <close_stdout@@Base+0x6484>
   1bd48:	ldr	r4, [sp, #28]
   1bd4c:	ldr	r3, [sp, #32]
   1bd50:	add	fp, fp, #1
   1bd54:	strb	r6, [sp, #24]
   1bd58:	add	r4, r4, r3
   1bd5c:	str	r4, [sp, #28]
   1bd60:	b	1bc64 <close_stdout@@Base+0x6438>
   1bd64:	str	r5, [sp, #32]
   1bd68:	strb	r6, [sp, #36]	; 0x24
   1bd6c:	ldr	r4, [sp, #28]
   1bd70:	b	1bd4c <close_stdout@@Base+0x6520>
   1bd74:	ldr	r4, [sp, #28]
   1bd78:	str	r5, [sp, #32]
   1bd7c:	ldrb	r3, [r4]
   1bd80:	cmp	r3, #0
   1bd84:	bne	1bdfc <close_stdout@@Base+0x65d0>
   1bd88:	ldr	r4, [sp, #40]	; 0x28
   1bd8c:	cmp	r4, #0
   1bd90:	beq	1bd28 <close_stdout@@Base+0x64fc>
   1bd94:	ldr	r0, [pc, #140]	; 1be28 <close_stdout@@Base+0x65fc>
   1bd98:	mov	r2, #179	; 0xb3
   1bd9c:	ldr	r1, [pc, #136]	; 1be2c <close_stdout@@Base+0x6600>
   1bda0:	ldr	r3, [pc, #136]	; 1be30 <close_stdout@@Base+0x6604>
   1bda4:	add	r0, pc, r0
   1bda8:	add	r1, pc, r1
   1bdac:	add	r3, pc, r3
   1bdb0:	bl	117bc <__assert_fail@plt>
   1bdb4:	ldr	r4, [sp, #28]
   1bdb8:	mov	r0, r4
   1bdbc:	bl	1163c <strlen@plt>
   1bdc0:	strb	r6, [sp, #36]	; 0x24
   1bdc4:	str	r0, [sp, #32]
   1bdc8:	b	1bd4c <close_stdout@@Base+0x6520>
   1bdcc:	mov	r0, sl
   1bdd0:	bl	1163c <strlen@plt>
   1bdd4:	b	1bcb4 <close_stdout@@Base+0x6488>
   1bdd8:	ldr	r0, [pc, #84]	; 1be34 <close_stdout@@Base+0x6608>
   1bddc:	mov	r2, #150	; 0x96
   1bde0:	ldr	r1, [pc, #80]	; 1be38 <close_stdout@@Base+0x660c>
   1bde4:	ldr	r3, [pc, #80]	; 1be3c <close_stdout@@Base+0x6610>
   1bde8:	add	r0, pc, r0
   1bdec:	add	r1, pc, r1
   1bdf0:	add	r3, pc, r3
   1bdf4:	bl	117bc <__assert_fail@plt>
   1bdf8:	bl	114e0 <__stack_chk_fail@plt>
   1bdfc:	ldr	r0, [pc, #60]	; 1be40 <close_stdout@@Base+0x6614>
   1be00:	mov	r2, #178	; 0xb2
   1be04:	ldr	r1, [pc, #56]	; 1be44 <close_stdout@@Base+0x6618>
   1be08:	ldr	r3, [pc, #56]	; 1be48 <close_stdout@@Base+0x661c>
   1be0c:	add	r0, pc, r0
   1be10:	add	r1, pc, r1
   1be14:	add	r3, pc, r3
   1be18:	bl	117bc <__assert_fail@plt>
   1be1c:	andeq	r2, r1, r4, ror #7
   1be20:	andeq	r0, r0, r8, asr r1
   1be24:	andeq	r0, r0, r4, asr r1
   1be28:	muleq	r0, r4, r0
   1be2c:	andeq	r1, r0, r8, rrx
   1be30:	andeq	r1, r0, r0, asr #10
   1be34:	andeq	r1, r0, r0, lsl r0
   1be38:	andeq	r1, r0, r4, lsr #32
   1be3c:	strdeq	r1, [r0], -ip
   1be40:	andeq	r1, r0, r4, lsl r0
   1be44:	andeq	r1, r0, r0
   1be48:	ldrdeq	r1, [r0], -r8
   1be4c:	subs	r2, r1, #1
   1be50:	bxeq	lr
   1be54:	bcc	1c02c <close_stdout@@Base+0x6800>
   1be58:	cmp	r0, r1
   1be5c:	bls	1c010 <close_stdout@@Base+0x67e4>
   1be60:	tst	r1, r2
   1be64:	beq	1c01c <close_stdout@@Base+0x67f0>
   1be68:	clz	r3, r0
   1be6c:	clz	r2, r1
   1be70:	sub	r3, r2, r3
   1be74:	rsbs	r3, r3, #31
   1be78:	addne	r3, r3, r3, lsl #1
   1be7c:	mov	r2, #0
   1be80:	addne	pc, pc, r3, lsl #2
   1be84:	nop	{0}
   1be88:	cmp	r0, r1, lsl #31
   1be8c:	adc	r2, r2, r2
   1be90:	subcs	r0, r0, r1, lsl #31
   1be94:	cmp	r0, r1, lsl #30
   1be98:	adc	r2, r2, r2
   1be9c:	subcs	r0, r0, r1, lsl #30
   1bea0:	cmp	r0, r1, lsl #29
   1bea4:	adc	r2, r2, r2
   1bea8:	subcs	r0, r0, r1, lsl #29
   1beac:	cmp	r0, r1, lsl #28
   1beb0:	adc	r2, r2, r2
   1beb4:	subcs	r0, r0, r1, lsl #28
   1beb8:	cmp	r0, r1, lsl #27
   1bebc:	adc	r2, r2, r2
   1bec0:	subcs	r0, r0, r1, lsl #27
   1bec4:	cmp	r0, r1, lsl #26
   1bec8:	adc	r2, r2, r2
   1becc:	subcs	r0, r0, r1, lsl #26
   1bed0:	cmp	r0, r1, lsl #25
   1bed4:	adc	r2, r2, r2
   1bed8:	subcs	r0, r0, r1, lsl #25
   1bedc:	cmp	r0, r1, lsl #24
   1bee0:	adc	r2, r2, r2
   1bee4:	subcs	r0, r0, r1, lsl #24
   1bee8:	cmp	r0, r1, lsl #23
   1beec:	adc	r2, r2, r2
   1bef0:	subcs	r0, r0, r1, lsl #23
   1bef4:	cmp	r0, r1, lsl #22
   1bef8:	adc	r2, r2, r2
   1befc:	subcs	r0, r0, r1, lsl #22
   1bf00:	cmp	r0, r1, lsl #21
   1bf04:	adc	r2, r2, r2
   1bf08:	subcs	r0, r0, r1, lsl #21
   1bf0c:	cmp	r0, r1, lsl #20
   1bf10:	adc	r2, r2, r2
   1bf14:	subcs	r0, r0, r1, lsl #20
   1bf18:	cmp	r0, r1, lsl #19
   1bf1c:	adc	r2, r2, r2
   1bf20:	subcs	r0, r0, r1, lsl #19
   1bf24:	cmp	r0, r1, lsl #18
   1bf28:	adc	r2, r2, r2
   1bf2c:	subcs	r0, r0, r1, lsl #18
   1bf30:	cmp	r0, r1, lsl #17
   1bf34:	adc	r2, r2, r2
   1bf38:	subcs	r0, r0, r1, lsl #17
   1bf3c:	cmp	r0, r1, lsl #16
   1bf40:	adc	r2, r2, r2
   1bf44:	subcs	r0, r0, r1, lsl #16
   1bf48:	cmp	r0, r1, lsl #15
   1bf4c:	adc	r2, r2, r2
   1bf50:	subcs	r0, r0, r1, lsl #15
   1bf54:	cmp	r0, r1, lsl #14
   1bf58:	adc	r2, r2, r2
   1bf5c:	subcs	r0, r0, r1, lsl #14
   1bf60:	cmp	r0, r1, lsl #13
   1bf64:	adc	r2, r2, r2
   1bf68:	subcs	r0, r0, r1, lsl #13
   1bf6c:	cmp	r0, r1, lsl #12
   1bf70:	adc	r2, r2, r2
   1bf74:	subcs	r0, r0, r1, lsl #12
   1bf78:	cmp	r0, r1, lsl #11
   1bf7c:	adc	r2, r2, r2
   1bf80:	subcs	r0, r0, r1, lsl #11
   1bf84:	cmp	r0, r1, lsl #10
   1bf88:	adc	r2, r2, r2
   1bf8c:	subcs	r0, r0, r1, lsl #10
   1bf90:	cmp	r0, r1, lsl #9
   1bf94:	adc	r2, r2, r2
   1bf98:	subcs	r0, r0, r1, lsl #9
   1bf9c:	cmp	r0, r1, lsl #8
   1bfa0:	adc	r2, r2, r2
   1bfa4:	subcs	r0, r0, r1, lsl #8
   1bfa8:	cmp	r0, r1, lsl #7
   1bfac:	adc	r2, r2, r2
   1bfb0:	subcs	r0, r0, r1, lsl #7
   1bfb4:	cmp	r0, r1, lsl #6
   1bfb8:	adc	r2, r2, r2
   1bfbc:	subcs	r0, r0, r1, lsl #6
   1bfc0:	cmp	r0, r1, lsl #5
   1bfc4:	adc	r2, r2, r2
   1bfc8:	subcs	r0, r0, r1, lsl #5
   1bfcc:	cmp	r0, r1, lsl #4
   1bfd0:	adc	r2, r2, r2
   1bfd4:	subcs	r0, r0, r1, lsl #4
   1bfd8:	cmp	r0, r1, lsl #3
   1bfdc:	adc	r2, r2, r2
   1bfe0:	subcs	r0, r0, r1, lsl #3
   1bfe4:	cmp	r0, r1, lsl #2
   1bfe8:	adc	r2, r2, r2
   1bfec:	subcs	r0, r0, r1, lsl #2
   1bff0:	cmp	r0, r1, lsl #1
   1bff4:	adc	r2, r2, r2
   1bff8:	subcs	r0, r0, r1, lsl #1
   1bffc:	cmp	r0, r1
   1c000:	adc	r2, r2, r2
   1c004:	subcs	r0, r0, r1
   1c008:	mov	r0, r2
   1c00c:	bx	lr
   1c010:	moveq	r0, #1
   1c014:	movne	r0, #0
   1c018:	bx	lr
   1c01c:	clz	r2, r1
   1c020:	rsb	r2, r2, #31
   1c024:	lsr	r0, r0, r2
   1c028:	bx	lr
   1c02c:	cmp	r0, #0
   1c030:	mvnne	r0, #0
   1c034:	b	1c058 <close_stdout@@Base+0x682c>
   1c038:	cmp	r1, #0
   1c03c:	beq	1c02c <close_stdout@@Base+0x6800>
   1c040:	push	{r0, r1, lr}
   1c044:	bl	1be4c <close_stdout@@Base+0x6620>
   1c048:	pop	{r1, r2, lr}
   1c04c:	mul	r3, r2, r0
   1c050:	sub	r1, r1, r3
   1c054:	bx	lr
   1c058:	push	{r1, lr}
   1c05c:	mov	r0, #8
   1c060:	bl	1142c <raise@plt>
   1c064:	pop	{r1, pc}
   1c068:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c06c:	mov	r7, r0
   1c070:	ldr	r6, [pc, #76]	; 1c0c4 <close_stdout@@Base+0x6898>
   1c074:	mov	r8, r1
   1c078:	ldr	r5, [pc, #72]	; 1c0c8 <close_stdout@@Base+0x689c>
   1c07c:	mov	r9, r2
   1c080:	add	r6, pc, r6
   1c084:	bl	113e8 <fdopen@plt-0x20>
   1c088:	add	r5, pc, r5
   1c08c:	rsb	r6, r5, r6
   1c090:	asrs	r6, r6, #2
   1c094:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c098:	sub	r5, r5, #4
   1c09c:	mov	r4, #0
   1c0a0:	add	r4, r4, #1
   1c0a4:	ldr	r3, [r5, #4]!
   1c0a8:	mov	r0, r7
   1c0ac:	mov	r1, r8
   1c0b0:	mov	r2, r9
   1c0b4:	blx	r3
   1c0b8:	cmp	r4, r6
   1c0bc:	bne	1c0a0 <close_stdout@@Base+0x6874>
   1c0c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c0c4:	andeq	r1, r1, r8, lsl sp
   1c0c8:	andeq	r1, r1, ip, lsl #26
   1c0cc:	bx	lr
   1c0d0:	ldr	r3, [pc, #28]	; 1c0f4 <close_stdout@@Base+0x68c8>
   1c0d4:	mov	r1, #0
   1c0d8:	ldr	r2, [pc, #24]	; 1c0f8 <close_stdout@@Base+0x68cc>
   1c0dc:	add	r3, pc, r3
   1c0e0:	ldr	r3, [r3, r2]
   1c0e4:	cmp	r3, #0
   1c0e8:	ldrne	r2, [r3]
   1c0ec:	moveq	r2, r3
   1c0f0:	b	1169c <__cxa_atexit@plt>
   1c0f4:	andeq	r1, r1, ip, lsl pc
   1c0f8:	andeq	r0, r0, r8, ror r1

Disassembly of section .fini:

0001c0fc <.fini>:
   1c0fc:	push	{r3, lr}
   1c100:	pop	{r3, pc}
