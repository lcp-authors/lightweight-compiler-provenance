
centos-preinstalled/stty:     file format elf32-littlearm


Disassembly of section .init:

00011108 <.init>:
   11108:	push	{r3, lr}
   1110c:	bl	12f84 <tcgetattr@plt+0x1b50>
   11110:	pop	{r3, pc}

Disassembly of section .plt:

00011114 <fdopen@plt-0x14>:
   11114:	push	{lr}		; (str lr, [sp, #-4]!)
   11118:	ldr	lr, [pc, #4]	; 11124 <fdopen@plt-0x4>
   1111c:	add	lr, pc, lr
   11120:	ldr	pc, [lr, #8]!
   11124:	ldrdeq	fp, [r1], -ip

00011128 <fdopen@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #110592	; 0x1b000
   11130:	ldr	pc, [ip, #3804]!	; 0xedc

00011134 <calloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #110592	; 0x1b000
   1113c:	ldr	pc, [ip, #3796]!	; 0xed4

00011140 <fputs_unlocked@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #110592	; 0x1b000
   11148:	ldr	pc, [ip, #3788]!	; 0xecc

0001114c <raise@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #110592	; 0x1b000
   11154:	ldr	pc, [ip, #3780]!	; 0xec4

00011158 <strcmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #110592	; 0x1b000
   11160:	ldr	pc, [ip, #3772]!	; 0xebc

00011164 <strtol@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #110592	; 0x1b000
   1116c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011170 <fflush@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #110592	; 0x1b000
   11178:	ldr	pc, [ip, #3756]!	; 0xeac

0001117c <free@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #110592	; 0x1b000
   11184:	ldr	pc, [ip, #3748]!	; 0xea4

00011188 <_exit@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #110592	; 0x1b000
   11190:	ldr	pc, [ip, #3740]!	; 0xe9c

00011194 <memcpy@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #110592	; 0x1b000
   1119c:	ldr	pc, [ip, #3732]!	; 0xe94

000111a0 <mbsinit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #110592	; 0x1b000
   111a8:	ldr	pc, [ip, #3724]!	; 0xe8c

000111ac <memcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #110592	; 0x1b000
   111b4:	ldr	pc, [ip, #3716]!	; 0xe84

000111b8 <dcgettext@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #110592	; 0x1b000
   111c0:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c4 <__stack_chk_fail@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #110592	; 0x1b000
   111cc:	ldr	pc, [ip, #3700]!	; 0xe74

000111d0 <cfgetispeed@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #110592	; 0x1b000
   111d8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111dc <dup2@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #110592	; 0x1b000
   111e4:	ldr	pc, [ip, #3684]!	; 0xe64

000111e8 <realloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #110592	; 0x1b000
   111f0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f4 <textdomain@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #110592	; 0x1b000
   111fc:	ldr	pc, [ip, #3668]!	; 0xe54

00011200 <iswprint@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #110592	; 0x1b000
   11208:	ldr	pc, [ip, #3660]!	; 0xe4c

0001120c <cfsetospeed@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #110592	; 0x1b000
   11214:	ldr	pc, [ip, #3652]!	; 0xe44

00011218 <fwrite@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #110592	; 0x1b000
   11220:	ldr	pc, [ip, #3644]!	; 0xe3c

00011224 <ioctl@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #110592	; 0x1b000
   1122c:	ldr	pc, [ip, #3636]!	; 0xe34

00011230 <lseek64@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #110592	; 0x1b000
   11238:	ldr	pc, [ip, #3628]!	; 0xe2c

0001123c <__ctype_get_mb_cur_max@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #110592	; 0x1b000
   11244:	ldr	pc, [ip, #3620]!	; 0xe24

00011248 <tcsetattr@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #110592	; 0x1b000
   11250:	ldr	pc, [ip, #3612]!	; 0xe1c

00011254 <strcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #110592	; 0x1b000
   1125c:	ldr	pc, [ip, #3604]!	; 0xe14

00011260 <__fpending@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #110592	; 0x1b000
   11268:	ldr	pc, [ip, #3596]!	; 0xe0c

0001126c <mbrtowc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #110592	; 0x1b000
   11274:	ldr	pc, [ip, #3588]!	; 0xe04

00011278 <error@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #110592	; 0x1b000
   11280:	ldr	pc, [ip, #3580]!	; 0xdfc

00011284 <open64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #110592	; 0x1b000
   1128c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011290 <getenv@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #110592	; 0x1b000
   11298:	ldr	pc, [ip, #3564]!	; 0xdec

0001129c <malloc@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #110592	; 0x1b000
   112a4:	ldr	pc, [ip, #3556]!	; 0xde4

000112a8 <__libc_start_main@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #110592	; 0x1b000
   112b0:	ldr	pc, [ip, #3548]!	; 0xddc

000112b4 <__freading@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #110592	; 0x1b000
   112bc:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c0 <__gmon_start__@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #110592	; 0x1b000
   112c8:	ldr	pc, [ip, #3532]!	; 0xdcc

000112cc <getopt_long@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #110592	; 0x1b000
   112d4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112d8 <__ctype_b_loc@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #110592	; 0x1b000
   112e0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e4 <exit@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #110592	; 0x1b000
   112ec:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f0 <strtoul@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #110592	; 0x1b000
   112f8:	ldr	pc, [ip, #3500]!	; 0xdac

000112fc <strlen@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #110592	; 0x1b000
   11304:	ldr	pc, [ip, #3492]!	; 0xda4

00011308 <strchr@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #110592	; 0x1b000
   11310:	ldr	pc, [ip, #3484]!	; 0xd9c

00011314 <cfsetispeed@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #110592	; 0x1b000
   1131c:	ldr	pc, [ip, #3476]!	; 0xd94

00011320 <ungetc@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #110592	; 0x1b000
   11328:	ldr	pc, [ip, #3468]!	; 0xd8c

0001132c <fcntl@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #110592	; 0x1b000
   11334:	ldr	pc, [ip, #3460]!	; 0xd84

00011338 <cfgetospeed@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #110592	; 0x1b000
   11340:	ldr	pc, [ip, #3452]!	; 0xd7c

00011344 <__errno_location@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #110592	; 0x1b000
   1134c:	ldr	pc, [ip, #3444]!	; 0xd74

00011350 <__cxa_atexit@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #110592	; 0x1b000
   11358:	ldr	pc, [ip, #3436]!	; 0xd6c

0001135c <memset@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #110592	; 0x1b000
   11364:	ldr	pc, [ip, #3428]!	; 0xd64

00011368 <fscanf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #110592	; 0x1b000
   11370:	ldr	pc, [ip, #3420]!	; 0xd5c

00011374 <__printf_chk@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #110592	; 0x1b000
   1137c:	ldr	pc, [ip, #3412]!	; 0xd54

00011380 <fileno@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #110592	; 0x1b000
   11388:	ldr	pc, [ip, #3404]!	; 0xd4c

0001138c <__fprintf_chk@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #110592	; 0x1b000
   11394:	ldr	pc, [ip, #3396]!	; 0xd44

00011398 <fclose@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #110592	; 0x1b000
   113a0:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a4 <fseeko64@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #110592	; 0x1b000
   113ac:	ldr	pc, [ip, #3380]!	; 0xd34

000113b0 <__uflow@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #110592	; 0x1b000
   113b8:	ldr	pc, [ip, #3372]!	; 0xd2c

000113bc <__overflow@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #110592	; 0x1b000
   113c4:	ldr	pc, [ip, #3364]!	; 0xd24

000113c8 <setlocale@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #110592	; 0x1b000
   113d0:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d4 <strrchr@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #110592	; 0x1b000
   113dc:	ldr	pc, [ip, #3348]!	; 0xd14

000113e0 <nl_langinfo@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #110592	; 0x1b000
   113e8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113ec <bindtextdomain@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #110592	; 0x1b000
   113f4:	ldr	pc, [ip, #3332]!	; 0xd04

000113f8 <strncmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #110592	; 0x1b000
   11400:	ldr	pc, [ip, #3324]!	; 0xcfc

00011404 <abort@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #110592	; 0x1b000
   1140c:	ldr	pc, [ip, #3316]!	; 0xcf4

00011410 <close@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #110592	; 0x1b000
   11418:	ldr	pc, [ip, #3308]!	; 0xcec

0001141c <__snprintf_chk@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #110592	; 0x1b000
   11424:	ldr	pc, [ip, #3300]!	; 0xce4

00011428 <__assert_fail@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #110592	; 0x1b000
   11430:	ldr	pc, [ip, #3292]!	; 0xcdc

00011434 <tcgetattr@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #110592	; 0x1b000
   1143c:	ldr	pc, [ip, #3284]!	; 0xcd4

Disassembly of section .text:

00011440 <close_stdout@@Base-0x2adc>:
   11440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11444:	sub	sp, sp, #76	; 0x4c
   11448:	ldr	r5, [pc, #4056]	; 12428 <tcgetattr@plt+0xff4>
   1144c:	mov	r9, r1
   11450:	ldr	r3, [pc, #4052]	; 1242c <tcgetattr@plt+0xff8>
   11454:	mov	r1, #1
   11458:	add	r5, pc, r5
   1145c:	str	r0, [sp, #28]
   11460:	str	r1, [sp, #24]
   11464:	mov	r4, r1
   11468:	ldr	r3, [r5, r3]
   1146c:	ldr	r2, [pc, #4028]	; 12430 <tcgetattr@plt+0xffc>
   11470:	ldr	r1, [pc, #4028]	; 12434 <tcgetattr@plt+0x1000>
   11474:	ldr	r3, [r3]
   11478:	add	r2, pc, r2
   1147c:	ldr	r0, [r9]
   11480:	add	r1, pc, r1
   11484:	str	r2, [sp, #16]
   11488:	str	r3, [sp, #68]	; 0x44
   1148c:	str	r1, [sp, #44]	; 0x2c
   11490:	ldr	r8, [sp, #28]
   11494:	bl	14138 <close_stdout@@Base+0x21c>
   11498:	ldr	r1, [pc, #3992]	; 12438 <tcgetattr@plt+0x1004>
   1149c:	mov	r0, #6
   114a0:	ldr	r6, [pc, #3988]	; 1243c <tcgetattr@plt+0x1008>
   114a4:	add	r1, pc, r1
   114a8:	ldr	sl, [pc, #3984]	; 12440 <tcgetattr@plt+0x100c>
   114ac:	bl	113c8 <setlocale@plt>
   114b0:	add	r6, pc, r6
   114b4:	ldr	r1, [pc, #3976]	; 12444 <tcgetattr@plt+0x1010>
   114b8:	add	sl, pc, sl
   114bc:	mov	r0, r6
   114c0:	add	sl, sl, #420	; 0x1a4
   114c4:	add	r1, pc, r1
   114c8:	bl	113ec <bindtextdomain@plt>
   114cc:	mov	r0, r6
   114d0:	bl	111f4 <textdomain@plt>
   114d4:	ldr	r3, [pc, #3948]	; 12448 <tcgetattr@plt+0x1014>
   114d8:	ldr	r0, [r5, r3]
   114dc:	bl	19624 <close_stdout@@Base+0x5708>
   114e0:	ldr	r2, [pc, #3940]	; 1244c <tcgetattr@plt+0x1018>
   114e4:	mov	r3, #0
   114e8:	mov	r6, r3
   114ec:	mov	fp, r3
   114f0:	ldr	r2, [r5, r2]
   114f4:	mov	r7, r3
   114f8:	str	r3, [sp, #40]	; 0x28
   114fc:	str	r3, [sp, #32]
   11500:	str	sl, [sp, #20]
   11504:	str	r3, [sp, #36]	; 0x24
   11508:	str	r3, [r2]
   1150c:	mov	sl, #0
   11510:	mov	r0, r8
   11514:	str	sl, [sp]
   11518:	add	r1, r9, r7
   1151c:	ldr	r2, [sp, #16]
   11520:	ldr	r3, [sp, #20]
   11524:	bl	112cc <getopt_long@plt>
   11528:	cmn	r0, #1
   1152c:	beq	11664 <tcgetattr@plt+0x230>
   11530:	cmp	r0, #70	; 0x46
   11534:	beq	1162c <tcgetattr@plt+0x1f8>
   11538:	bgt	11554 <tcgetattr@plt+0x120>
   1153c:	cmn	r0, #3
   11540:	beq	115dc <tcgetattr@plt+0x1a8>
   11544:	cmn	r0, #2
   11548:	bne	115b0 <tcgetattr@plt+0x17c>
   1154c:	mov	r0, sl
   11550:	bl	1386c <tcgetattr@plt+0x2438>
   11554:	cmp	r0, #97	; 0x61
   11558:	beq	1161c <tcgetattr@plt+0x1e8>
   1155c:	cmp	r0, #103	; 0x67
   11560:	bne	115b0 <tcgetattr@plt+0x17c>
   11564:	mov	r3, #1
   11568:	mov	r1, #2
   1156c:	str	r3, [sp, #40]	; 0x28
   11570:	str	r1, [sp, #36]	; 0x24
   11574:	ldr	r3, [pc, #3796]	; 12450 <tcgetattr@plt+0x101c>
   11578:	ldr	r1, [r5, r3]
   1157c:	ldr	r3, [r1]
   11580:	cmp	r4, r3
   11584:	addlt	r3, fp, r4
   11588:	sublt	r3, r3, #-1073741823	; 0xc0000001
   1158c:	movlt	r0, #0
   11590:	addlt	r3, r9, r3, lsl #2
   11594:	bge	1150c <tcgetattr@plt+0xd8>
   11598:	str	r0, [r3, #4]!
   1159c:	add	r4, r4, #1
   115a0:	ldr	r2, [r1]
   115a4:	cmp	r2, r4
   115a8:	bgt	11598 <tcgetattr@plt+0x164>
   115ac:	b	1150c <tcgetattr@plt+0xd8>
   115b0:	ldr	r2, [pc, #3736]	; 12450 <tcgetattr@plt+0x101c>
   115b4:	mov	r3, #0
   115b8:	str	r3, [sp, #24]
   115bc:	add	fp, fp, r4
   115c0:	ldr	r1, [sp, #28]
   115c4:	mov	r4, #1
   115c8:	ldr	r2, [r5, r2]
   115cc:	lsl	r7, fp, #2
   115d0:	rsb	r8, fp, r1
   115d4:	str	r3, [r2]
   115d8:	b	1150c <tcgetattr@plt+0xd8>
   115dc:	ldr	r1, [pc, #3696]	; 12454 <tcgetattr@plt+0x1020>
   115e0:	ldr	r3, [pc, #3696]	; 12458 <tcgetattr@plt+0x1024>
   115e4:	ldr	r2, [pc, #3696]	; 1245c <tcgetattr@plt+0x1028>
   115e8:	ldr	r0, [r5, r1]
   115ec:	ldr	r3, [r5, r3]
   115f0:	add	r2, pc, r2
   115f4:	ldr	r1, [pc, #3684]	; 12460 <tcgetattr@plt+0x102c>
   115f8:	ldr	r0, [r0]
   115fc:	ldr	r3, [r3]
   11600:	add	r1, pc, r1
   11604:	stm	sp, {r2, sl}
   11608:	ldr	r2, [pc, #3668]	; 12464 <tcgetattr@plt+0x1030>
   1160c:	add	r2, pc, r2
   11610:	bl	15e24 <close_stdout@@Base+0x1f08>
   11614:	mov	r0, sl
   11618:	bl	112e4 <exit@plt>
   1161c:	mov	r2, #1
   11620:	str	r2, [sp, #32]
   11624:	str	r2, [sp, #36]	; 0x24
   11628:	b	11574 <tcgetattr@plt+0x140>
   1162c:	cmp	r6, #0
   11630:	beq	11654 <tcgetattr@plt+0x220>
   11634:	ldr	r1, [sp, #44]	; 0x2c
   11638:	mov	r2, #5
   1163c:	mov	r0, sl
   11640:	bl	111b8 <dcgettext@plt>
   11644:	mov	r1, sl
   11648:	mov	r2, r0
   1164c:	mov	r0, #1
   11650:	bl	11278 <error@plt>
   11654:	ldr	r3, [pc, #3596]	; 12468 <tcgetattr@plt+0x1034>
   11658:	ldr	r3, [r5, r3]
   1165c:	ldr	r6, [r3]
   11660:	b	11574 <tcgetattr@plt+0x140>
   11664:	ldr	r2, [sp, #32]
   11668:	ldr	r3, [sp, #40]	; 0x28
   1166c:	tst	r2, r3
   11670:	bne	11a48 <tcgetattr@plt+0x614>
   11674:	ldr	r1, [sp, #24]
   11678:	cmp	r1, #0
   1167c:	beq	11820 <tcgetattr@plt+0x3ec>
   11680:	ldr	r2, [sp, #32]
   11684:	ldr	r3, [sp, #40]	; 0x28
   11688:	orr	r4, r2, r3
   1168c:	cmp	r6, #0
   11690:	beq	11f90 <tcgetattr@plt+0xb5c>
   11694:	mov	r0, #0
   11698:	mov	r1, r6
   1169c:	mov	r3, r0
   116a0:	mov	r2, #2048	; 0x800
   116a4:	bl	140d8 <close_stdout@@Base+0x1bc>
   116a8:	cmp	r0, #0
   116ac:	blt	120b8 <tcgetattr@plt+0xc84>
   116b0:	mov	r0, #0
   116b4:	mov	r1, #3
   116b8:	bl	16d24 <close_stdout@@Base+0x2e08>
   116bc:	cmn	r0, #1
   116c0:	beq	11984 <tcgetattr@plt+0x550>
   116c4:	bic	r2, r0, #2048	; 0x800
   116c8:	mov	r1, #4
   116cc:	mov	r0, #0
   116d0:	bl	16d24 <close_stdout@@Base+0x2e08>
   116d4:	cmp	r0, #0
   116d8:	blt	11984 <tcgetattr@plt+0x550>
   116dc:	ldr	r1, [pc, #3464]	; 1246c <tcgetattr@plt+0x1038>
   116e0:	mov	r0, #0
   116e4:	add	r1, pc, r1
   116e8:	add	r1, r1, #20
   116ec:	bl	11434 <tcgetattr@plt>
   116f0:	cmp	r0, #0
   116f4:	bne	11a28 <tcgetattr@plt+0x5f4>
   116f8:	tst	r4, #255	; 0xff
   116fc:	bne	1189c <tcgetattr@plt+0x468>
   11700:	ldr	r3, [sp, #24]
   11704:	cmp	r3, #0
   11708:	bne	1189c <tcgetattr@plt+0x468>
   1170c:	ldr	r2, [pc, #3420]	; 12470 <tcgetattr@plt+0x103c>
   11710:	mov	r5, #1
   11714:	ldr	r3, [pc, #3416]	; 12474 <tcgetattr@plt+0x1040>
   11718:	add	r2, pc, r2
   1171c:	ldr	r1, [sp, #24]
   11720:	add	r3, pc, r3
   11724:	ldr	r8, [sp, #28]
   11728:	add	r2, r2, #20
   1172c:	add	r3, r3, #20
   11730:	str	r2, [sp, #40]	; 0x28
   11734:	str	r3, [sp, #32]
   11738:	ldr	r2, [pc, #3384]	; 12478 <tcgetattr@plt+0x1044>
   1173c:	ldr	r3, [pc, #3384]	; 1247c <tcgetattr@plt+0x1048>
   11740:	add	r2, pc, r2
   11744:	str	r1, [sp, #16]
   11748:	add	r3, pc, r3
   1174c:	str	r2, [sp, #20]
   11750:	str	r3, [sp, #44]	; 0x2c
   11754:	str	r6, [sp, #36]	; 0x24
   11758:	cmp	r5, r8
   1175c:	bge	11fac <tcgetattr@plt+0xb78>
   11760:	ldr	r4, [r9, r5, lsl #2]
   11764:	lsl	sl, r5, #2
   11768:	cmp	r4, #0
   1176c:	beq	11818 <tcgetattr@plt+0x3e4>
   11770:	ldrb	r3, [r4]
   11774:	cmp	r3, #45	; 0x2d
   11778:	addeq	r4, r4, #1
   1177c:	moveq	r6, #1
   11780:	movne	r6, #0
   11784:	ldr	r2, [sp, #20]
   11788:	mov	r7, #0
   1178c:	ldr	r1, [pc, #3308]	; 12480 <tcgetattr@plt+0x104c>
   11790:	add	fp, r2, #732	; 0x2dc
   11794:	add	r1, pc, r1
   11798:	b	117ac <tcgetattr@plt+0x378>
   1179c:	ldr	r1, [fp, #20]!
   117a0:	add	r7, r7, #1
   117a4:	cmp	r1, #0
   117a8:	beq	1221c <tcgetattr@plt+0xde8>
   117ac:	mov	r0, r4
   117b0:	bl	11158 <strcmp@plt>
   117b4:	cmp	r0, #0
   117b8:	bne	1179c <tcgetattr@plt+0x368>
   117bc:	mov	r3, #20
   117c0:	ldr	fp, [pc, #3260]	; 12484 <tcgetattr@plt+0x1050>
   117c4:	mul	r7, r3, r7
   117c8:	add	fp, pc, fp
   117cc:	cmp	r6, #0
   117d0:	add	fp, fp, #732	; 0x2dc
   117d4:	add	sl, fp, r7
   117d8:	bne	11858 <tcgetattr@plt+0x424>
   117dc:	ldr	r1, [pc, #3236]	; 12488 <tcgetattr@plt+0x1054>
   117e0:	ldr	r0, [sl, #4]
   117e4:	add	r1, pc, r1
   117e8:	add	r1, r1, #20
   117ec:	bl	130e8 <tcgetattr@plt+0x1cb4>
   117f0:	cmp	r0, #0
   117f4:	beq	119b8 <tcgetattr@plt+0x584>
   117f8:	ldr	r1, [sl, #16]
   117fc:	ldr	r2, [r0]
   11800:	ldr	r3, [sl, #12]
   11804:	bic	r2, r2, r1
   11808:	orr	r3, r2, r3
   1180c:	str	r3, [r0]
   11810:	mov	r3, #1
   11814:	str	r3, [sp, #16]
   11818:	add	r5, r5, #1
   1181c:	b	11758 <tcgetattr@plt+0x324>
   11820:	ldr	r1, [sp, #32]
   11824:	ldr	r2, [sp, #40]	; 0x28
   11828:	orrs	r4, r1, r2
   1182c:	beq	1168c <tcgetattr@plt+0x258>
   11830:	ldr	r1, [pc, #3156]	; 1248c <tcgetattr@plt+0x1058>
   11834:	mov	r2, #5
   11838:	ldr	r0, [sp, #24]
   1183c:	add	r1, pc, r1
   11840:	bl	111b8 <dcgettext@plt>
   11844:	ldr	r1, [sp, #24]
   11848:	mov	r2, r0
   1184c:	mov	r0, #1
   11850:	bl	11278 <error@plt>
   11854:	b	1168c <tcgetattr@plt+0x258>
   11858:	ldrb	r3, [sl, #8]
   1185c:	tst	r3, #4
   11860:	beq	11948 <tcgetattr@plt+0x514>
   11864:	ldr	r1, [pc, #3108]	; 12490 <tcgetattr@plt+0x105c>
   11868:	ldr	r0, [sl, #4]
   1186c:	add	r1, pc, r1
   11870:	add	r1, r1, #20
   11874:	bl	130e8 <tcgetattr@plt+0x1cb4>
   11878:	cmp	r0, #0
   1187c:	beq	119b8 <tcgetattr@plt+0x584>
   11880:	ldr	r1, [sl, #12]
   11884:	ldr	r2, [sl, #16]
   11888:	ldr	r3, [r0]
   1188c:	orr	r2, r1, r2
   11890:	bic	r3, r3, r2
   11894:	str	r3, [r0]
   11898:	b	11810 <tcgetattr@plt+0x3dc>
   1189c:	bl	132b0 <tcgetattr@plt+0x1e7c>
   118a0:	ldr	r8, [pc, #3052]	; 12494 <tcgetattr@plt+0x1060>
   118a4:	ldr	r1, [sp, #36]	; 0x24
   118a8:	mov	r3, #0
   118ac:	add	r8, pc, r8
   118b0:	cmp	r1, #1
   118b4:	str	r3, [r8]
   118b8:	str	r0, [r8, #4]
   118bc:	beq	11d54 <tcgetattr@plt+0x920>
   118c0:	cmp	r1, #2
   118c4:	bne	11a94 <tcgetattr@plt+0x660>
   118c8:	ldr	r2, [r8, #28]
   118cc:	mov	r0, #1
   118d0:	ldr	r3, [r8, #32]
   118d4:	add	r4, r8, #36	; 0x24
   118d8:	ldr	r1, [pc, #3000]	; 12498 <tcgetattr@plt+0x1064>
   118dc:	add	r7, r8, #68	; 0x44
   118e0:	ldr	r6, [pc, #2996]	; 1249c <tcgetattr@plt+0x1068>
   118e4:	stm	sp, {r2, r3}
   118e8:	add	r1, pc, r1
   118ec:	ldr	r2, [r8, #20]
   118f0:	add	r6, pc, r6
   118f4:	ldr	r3, [r8, #24]
   118f8:	bl	11374 <__printf_chk@plt>
   118fc:	ldrb	r2, [r4, #1]!
   11900:	mov	r0, #1
   11904:	mov	r1, r6
   11908:	bl	11374 <__printf_chk@plt>
   1190c:	cmp	r4, r7
   11910:	bne	118fc <tcgetattr@plt+0x4c8>
   11914:	ldr	r3, [pc, #2872]	; 12454 <tcgetattr@plt+0x1020>
   11918:	ldr	r3, [r5, r3]
   1191c:	ldr	r0, [r3]
   11920:	ldr	r3, [r0, #20]
   11924:	ldr	r2, [r0, #24]
   11928:	cmp	r3, r2
   1192c:	addcc	r1, r3, #1
   11930:	strcc	r1, [r0, #20]
   11934:	movcc	r2, #10
   11938:	strbcc	r2, [r3]
   1193c:	bcs	12210 <tcgetattr@plt+0xddc>
   11940:	mov	r0, #0
   11944:	bl	112e4 <exit@plt>
   11948:	ldr	r1, [pc, #2896]	; 124a0 <tcgetattr@plt+0x106c>
   1194c:	mov	r0, #0
   11950:	mov	r2, #5
   11954:	add	r1, pc, r1
   11958:	bl	111b8 <dcgettext@plt>
   1195c:	mov	r5, r0
   11960:	sub	r0, r4, #1
   11964:	bl	15988 <close_stdout@@Base+0x1a6c>
   11968:	mov	r2, r5
   1196c:	mov	r3, r0
   11970:	mov	r0, #0
   11974:	mov	r1, r0
   11978:	bl	11278 <error@plt>
   1197c:	mov	r0, #1
   11980:	bl	1386c <tcgetattr@plt+0x2438>
   11984:	bl	11344 <__errno_location@plt>
   11988:	ldr	r1, [pc, #2836]	; 124a4 <tcgetattr@plt+0x1070>
   1198c:	mov	r2, #5
   11990:	add	r1, pc, r1
   11994:	ldr	r7, [r0]
   11998:	mov	r0, #0
   1199c:	bl	111b8 <dcgettext@plt>
   119a0:	mov	r3, r6
   119a4:	mov	r1, r7
   119a8:	mov	r2, r0
   119ac:	mov	r0, #1
   119b0:	bl	11278 <error@plt>
   119b4:	b	116dc <tcgetattr@plt+0x2a8>
   119b8:	ldr	r7, [fp, r7]
   119bc:	ldr	r1, [pc, #2788]	; 124a8 <tcgetattr@plt+0x1074>
   119c0:	mov	r0, r7
   119c4:	add	r1, pc, r1
   119c8:	bl	11158 <strcmp@plt>
   119cc:	cmp	r0, #0
   119d0:	beq	11a70 <tcgetattr@plt+0x63c>
   119d4:	ldr	r1, [pc, #2768]	; 124ac <tcgetattr@plt+0x1078>
   119d8:	mov	r0, r7
   119dc:	add	r1, pc, r1
   119e0:	bl	11158 <strcmp@plt>
   119e4:	cmp	r0, #0
   119e8:	beq	11a70 <tcgetattr@plt+0x63c>
   119ec:	ldr	r1, [pc, #2748]	; 124b0 <tcgetattr@plt+0x107c>
   119f0:	mov	r0, r7
   119f4:	add	r1, pc, r1
   119f8:	bl	11158 <strcmp@plt>
   119fc:	cmp	r0, #0
   11a00:	bne	120d8 <tcgetattr@plt+0xca4>
   11a04:	cmp	r6, #0
   11a08:	bne	11d38 <tcgetattr@plt+0x904>
   11a0c:	ldr	r3, [pc, #2720]	; 124b4 <tcgetattr@plt+0x1080>
   11a10:	add	r3, pc, r3
   11a14:	ldr	r2, [r3, #28]
   11a18:	bic	r2, r2, #816	; 0x330
   11a1c:	orr	r2, r2, #800	; 0x320
   11a20:	str	r2, [r3, #28]
   11a24:	b	11810 <tcgetattr@plt+0x3dc>
   11a28:	bl	11344 <__errno_location@plt>
   11a2c:	ldr	r2, [pc, #2692]	; 124b8 <tcgetattr@plt+0x1084>
   11a30:	mov	r3, r6
   11a34:	add	r2, pc, r2
   11a38:	ldr	r1, [r0]
   11a3c:	mov	r0, #1
   11a40:	bl	11278 <error@plt>
   11a44:	b	116f8 <tcgetattr@plt+0x2c4>
   11a48:	ldr	r1, [pc, #2668]	; 124bc <tcgetattr@plt+0x1088>
   11a4c:	mov	r0, sl
   11a50:	mov	r2, #5
   11a54:	add	r1, pc, r1
   11a58:	bl	111b8 <dcgettext@plt>
   11a5c:	mov	r1, sl
   11a60:	mov	r2, r0
   11a64:	mov	r0, #1
   11a68:	bl	11278 <error@plt>
   11a6c:	b	11674 <tcgetattr@plt+0x240>
   11a70:	cmp	r6, #0
   11a74:	bne	11d38 <tcgetattr@plt+0x904>
   11a78:	ldr	r3, [pc, #2624]	; 124c0 <tcgetattr@plt+0x108c>
   11a7c:	add	r3, pc, r3
   11a80:	ldr	r2, [r3, #28]
   11a84:	bic	r2, r2, #816	; 0x330
   11a88:	orr	r2, r2, #288	; 0x120
   11a8c:	str	r2, [r3, #28]
   11a90:	b	11810 <tcgetattr@plt+0x3dc>
   11a94:	mov	r0, #1
   11a98:	bl	1365c <tcgetattr@plt+0x2228>
   11a9c:	ldr	r0, [pc, #2592]	; 124c4 <tcgetattr@plt+0x1090>
   11aa0:	ldrb	r1, [r8, #36]	; 0x24
   11aa4:	add	r0, pc, r0
   11aa8:	bl	13138 <tcgetattr@plt+0x1d04>
   11aac:	ldr	r3, [pc, #2464]	; 12454 <tcgetattr@plt+0x1020>
   11ab0:	ldr	r6, [r5, r3]
   11ab4:	ldr	r0, [r6]
   11ab8:	ldr	r3, [r0, #20]
   11abc:	ldr	r2, [r0, #24]
   11ac0:	cmp	r3, r2
   11ac4:	addcc	r1, r3, #1
   11ac8:	movcc	r2, #10
   11acc:	strcc	r1, [r0, #20]
   11ad0:	strbcc	r2, [r3]
   11ad4:	bcs	121d4 <tcgetattr@plt+0xda0>
   11ad8:	ldr	r4, [pc, #2536]	; 124c8 <tcgetattr@plt+0x1094>
   11adc:	mov	r1, #1
   11ae0:	ldr	r3, [pc, #2532]	; 124cc <tcgetattr@plt+0x1098>
   11ae4:	mov	r2, #0
   11ae8:	ldr	r7, [pc, #2528]	; 124d0 <tcgetattr@plt+0x109c>
   11aec:	add	r4, pc, r4
   11af0:	ldr	r8, [pc, #2524]	; 124d4 <tcgetattr@plt+0x10a0>
   11af4:	add	r3, pc, r3
   11af8:	ldr	r9, [pc, #2520]	; 124d8 <tcgetattr@plt+0x10a4>
   11afc:	add	r7, pc, r7
   11b00:	add	r4, r4, #524	; 0x20c
   11b04:	add	r8, pc, r8
   11b08:	add	r9, pc, r9
   11b0c:	str	r2, [r3]
   11b10:	ldr	r5, [r4, #-8]
   11b14:	ldrb	r3, [r5]
   11b18:	cmp	r3, #109	; 0x6d
   11b1c:	bne	11c9c <tcgetattr@plt+0x868>
   11b20:	ldrb	r3, [r5, #1]
   11b24:	cmp	r3, #105	; 0x69
   11b28:	bne	11c9c <tcgetattr@plt+0x868>
   11b2c:	ldrb	r3, [r5, #2]
   11b30:	cmp	r3, #110	; 0x6e
   11b34:	bne	11c9c <tcgetattr@plt+0x868>
   11b38:	ldrb	r3, [r5, #3]
   11b3c:	cmp	r3, #0
   11b40:	bne	11c9c <tcgetattr@plt+0x868>
   11b44:	ldr	r3, [pc, #2448]	; 124dc <tcgetattr@plt+0x10a8>
   11b48:	add	r3, pc, r3
   11b4c:	ldr	r2, [r3, #32]
   11b50:	tst	r2, #2
   11b54:	beq	12120 <tcgetattr@plt+0xcec>
   11b58:	cmp	r1, #0
   11b5c:	bne	11b84 <tcgetattr@plt+0x750>
   11b60:	ldr	r0, [r6]
   11b64:	ldr	r3, [r0, #20]
   11b68:	ldr	r2, [r0, #24]
   11b6c:	cmp	r3, r2
   11b70:	addcc	r1, r3, #1
   11b74:	strcc	r1, [r0, #20]
   11b78:	movcc	r2, #10
   11b7c:	strbcc	r2, [r3]
   11b80:	bcs	121e0 <tcgetattr@plt+0xdac>
   11b84:	ldr	r2, [pc, #2388]	; 124e0 <tcgetattr@plt+0x10ac>
   11b88:	mov	r3, #0
   11b8c:	ldr	r4, [pc, #2384]	; 124e4 <tcgetattr@plt+0x10b0>
   11b90:	mov	r5, r3
   11b94:	add	r2, pc, r2
   11b98:	ldr	r7, [pc, #2376]	; 124e8 <tcgetattr@plt+0x10b4>
   11b9c:	ldr	fp, [pc, #2376]	; 124ec <tcgetattr@plt+0x10b8>
   11ba0:	add	r4, pc, r4
   11ba4:	str	r3, [r2]
   11ba8:	add	r7, pc, r7
   11bac:	ldr	r2, [pc, #2364]	; 124f0 <tcgetattr@plt+0x10bc>
   11bb0:	mov	r9, r3
   11bb4:	ldr	r8, [pc, #2360]	; 124f4 <tcgetattr@plt+0x10c0>
   11bb8:	add	r4, r4, #748	; 0x2ec
   11bbc:	add	r2, pc, r2
   11bc0:	add	r7, r7, #20
   11bc4:	mov	sl, #1
   11bc8:	add	fp, pc, fp
   11bcc:	str	r2, [sp, #16]
   11bd0:	add	r8, pc, r8
   11bd4:	b	11be8 <tcgetattr@plt+0x7b4>
   11bd8:	and	r3, r3, #5
   11bdc:	cmp	r3, #5
   11be0:	beq	11ce4 <tcgetattr@plt+0x8b0>
   11be4:	add	r4, r4, #20
   11be8:	ldr	r3, [r4, #-16]
   11bec:	cmp	r3, #0
   11bf0:	beq	11cf8 <tcgetattr@plt+0x8c4>
   11bf4:	ldrb	r3, [r4, #-8]
   11bf8:	tst	r3, #8
   11bfc:	bne	11be4 <tcgetattr@plt+0x7b0>
   11c00:	ldr	r3, [r4, #-12]
   11c04:	cmp	r3, r5
   11c08:	beq	11c48 <tcgetattr@plt+0x814>
   11c0c:	cmp	sl, #0
   11c10:	bne	11c40 <tcgetattr@plt+0x80c>
   11c14:	ldr	r0, [r6]
   11c18:	ldr	r3, [r0, #20]
   11c1c:	ldr	r2, [r0, #24]
   11c20:	cmp	r3, r2
   11c24:	addcc	r1, r3, #1
   11c28:	strcc	r1, [r0, #20]
   11c2c:	movcc	r2, #10
   11c30:	strbcc	r2, [r3]
   11c34:	bcs	12a14 <tcgetattr@plt+0x15e0>
   11c38:	ldr	r3, [r4, #-12]
   11c3c:	str	r9, [r8]
   11c40:	mov	r5, r3
   11c44:	mov	sl, #1
   11c48:	ldr	r0, [r4, #-12]
   11c4c:	mov	r1, r7
   11c50:	bl	130e8 <tcgetattr@plt+0x1cb4>
   11c54:	ldr	r3, [r4]
   11c58:	cmp	r3, #0
   11c5c:	ldreq	r3, [r4, #-4]
   11c60:	cmp	r0, #0
   11c64:	beq	12a94 <tcgetattr@plt+0x1660>
   11c68:	ldr	r1, [r0]
   11c6c:	ldr	r2, [r4, #-4]
   11c70:	and	r3, r3, r1
   11c74:	cmp	r3, r2
   11c78:	ldrb	r3, [r4, #-8]
   11c7c:	bne	11bd8 <tcgetattr@plt+0x7a4>
   11c80:	tst	r3, #2
   11c84:	beq	11be4 <tcgetattr@plt+0x7b0>
   11c88:	ldr	r0, [sp, #16]
   11c8c:	mov	sl, #0
   11c90:	ldr	r1, [r4, #-16]
   11c94:	bl	13138 <tcgetattr@plt+0x1d04>
   11c98:	b	11be4 <tcgetattr@plt+0x7b0>
   11c9c:	ldr	r3, [r4]
   11ca0:	ldrb	r2, [r4, #-4]
   11ca4:	add	r3, r7, r3
   11ca8:	ldrb	r0, [r3, #37]	; 0x25
   11cac:	cmp	r2, r0
   11cb0:	beq	11cd0 <tcgetattr@plt+0x89c>
   11cb4:	cmp	r0, #0
   11cb8:	moveq	r2, r9
   11cbc:	bne	11cd8 <tcgetattr@plt+0x8a4>
   11cc0:	mov	r1, r5
   11cc4:	mov	r0, r8
   11cc8:	bl	13138 <tcgetattr@plt+0x1d04>
   11ccc:	mov	r1, #0
   11cd0:	add	r4, r4, #12
   11cd4:	b	11b10 <tcgetattr@plt+0x6dc>
   11cd8:	bl	1336c <tcgetattr@plt+0x1f38>
   11cdc:	mov	r2, r0
   11ce0:	b	11cc0 <tcgetattr@plt+0x88c>
   11ce4:	mov	r0, fp
   11ce8:	ldr	r1, [r4, #-16]
   11cec:	bl	13138 <tcgetattr@plt+0x1d04>
   11cf0:	mov	sl, #0
   11cf4:	b	11be4 <tcgetattr@plt+0x7b0>
   11cf8:	cmp	sl, #0
   11cfc:	bne	11d24 <tcgetattr@plt+0x8f0>
   11d00:	ldr	r0, [r6]
   11d04:	ldr	r3, [r0, #20]
   11d08:	ldr	r2, [r0, #24]
   11d0c:	cmp	r3, r2
   11d10:	addcc	r1, r3, #1
   11d14:	strcc	r1, [r0, #20]
   11d18:	movcc	r2, #10
   11d1c:	strbcc	r2, [r3]
   11d20:	bcs	12a20 <tcgetattr@plt+0x15ec>
   11d24:	ldr	r3, [pc, #1996]	; 124f8 <tcgetattr@plt+0x10c4>
   11d28:	mov	r2, #0
   11d2c:	add	r3, pc, r3
   11d30:	str	r2, [r3]
   11d34:	b	11940 <tcgetattr@plt+0x50c>
   11d38:	ldr	r3, [pc, #1980]	; 124fc <tcgetattr@plt+0x10c8>
   11d3c:	add	r3, pc, r3
   11d40:	ldr	r2, [r3, #28]
   11d44:	bic	r2, r2, #304	; 0x130
   11d48:	orr	r2, r2, #48	; 0x30
   11d4c:	str	r2, [r3, #28]
   11d50:	b	11810 <tcgetattr@plt+0x3dc>
   11d54:	ldr	r0, [sp, #36]	; 0x24
   11d58:	bl	1365c <tcgetattr@plt+0x2228>
   11d5c:	mov	r1, r6
   11d60:	ldr	r0, [sp, #36]	; 0x24
   11d64:	bl	13548 <tcgetattr@plt+0x2114>
   11d68:	ldr	r0, [pc, #1936]	; 12500 <tcgetattr@plt+0x10cc>
   11d6c:	ldrb	r1, [r8, #36]	; 0x24
   11d70:	add	r0, pc, r0
   11d74:	bl	13138 <tcgetattr@plt+0x1d04>
   11d78:	ldr	r3, [pc, #1748]	; 12454 <tcgetattr@plt+0x1020>
   11d7c:	ldr	r6, [r5, r3]
   11d80:	ldr	r0, [r6]
   11d84:	ldr	r3, [r0, #20]
   11d88:	ldr	r2, [r0, #24]
   11d8c:	cmp	r3, r2
   11d90:	addcc	r1, r3, #1
   11d94:	movcc	r2, #10
   11d98:	strcc	r1, [r0, #20]
   11d9c:	strbcc	r2, [r3]
   11da0:	bcs	12a7c <tcgetattr@plt+0x1648>
   11da4:	ldr	r4, [pc, #1880]	; 12504 <tcgetattr@plt+0x10d0>
   11da8:	mov	r2, #0
   11dac:	ldr	r3, [pc, #1876]	; 12508 <tcgetattr@plt+0x10d4>
   11db0:	ldr	r8, [pc, #1876]	; 1250c <tcgetattr@plt+0x10d8>
   11db4:	add	r4, pc, r4
   11db8:	ldr	r9, [pc, #1872]	; 12510 <tcgetattr@plt+0x10dc>
   11dbc:	add	r3, pc, r3
   11dc0:	ldr	r7, [pc, #1868]	; 12514 <tcgetattr@plt+0x10e0>
   11dc4:	add	r8, pc, r8
   11dc8:	add	r4, r4, #516	; 0x204
   11dcc:	add	r9, pc, r9
   11dd0:	add	r7, pc, r7
   11dd4:	str	r2, [r3]
   11dd8:	ldr	r5, [r4]
   11ddc:	ldrb	r3, [r5]
   11de0:	cmp	r3, #109	; 0x6d
   11de4:	bne	11f48 <tcgetattr@plt+0xb14>
   11de8:	ldrb	r3, [r5, #1]
   11dec:	cmp	r3, #105	; 0x69
   11df0:	bne	11f48 <tcgetattr@plt+0xb14>
   11df4:	ldrb	r3, [r5, #2]
   11df8:	cmp	r3, #110	; 0x6e
   11dfc:	bne	11f48 <tcgetattr@plt+0xb14>
   11e00:	ldrb	r3, [r5, #3]
   11e04:	cmp	r3, #0
   11e08:	bne	11f48 <tcgetattr@plt+0xb14>
   11e0c:	ldr	r4, [pc, #1796]	; 12518 <tcgetattr@plt+0x10e4>
   11e10:	ldr	r0, [pc, #1796]	; 1251c <tcgetattr@plt+0x10e8>
   11e14:	add	r4, pc, r4
   11e18:	add	r0, pc, r0
   11e1c:	ldrb	r1, [r4, #43]	; 0x2b
   11e20:	ldrb	r2, [r4, #42]	; 0x2a
   11e24:	bl	13138 <tcgetattr@plt+0x1d04>
   11e28:	ldr	r3, [r4]
   11e2c:	cmp	r3, #0
   11e30:	beq	11e58 <tcgetattr@plt+0xa24>
   11e34:	ldr	r0, [r6]
   11e38:	ldr	r3, [r0, #20]
   11e3c:	ldr	r2, [r0, #24]
   11e40:	cmp	r3, r2
   11e44:	addcc	r1, r3, #1
   11e48:	strcc	r1, [r0, #20]
   11e4c:	movcc	r2, #10
   11e50:	strbcc	r2, [r3]
   11e54:	bcs	12a88 <tcgetattr@plt+0x1654>
   11e58:	ldr	r2, [pc, #1728]	; 12520 <tcgetattr@plt+0x10ec>
   11e5c:	mov	r3, #0
   11e60:	ldr	r4, [pc, #1724]	; 12524 <tcgetattr@plt+0x10f0>
   11e64:	mov	r5, r3
   11e68:	ldr	r7, [pc, #1720]	; 12528 <tcgetattr@plt+0x10f4>
   11e6c:	add	r2, pc, r2
   11e70:	ldr	fp, [pc, #1716]	; 1252c <tcgetattr@plt+0x10f8>
   11e74:	add	r4, pc, r4
   11e78:	ldr	sl, [pc, #1712]	; 12530 <tcgetattr@plt+0x10fc>
   11e7c:	add	r7, pc, r7
   11e80:	ldr	r8, [pc, #1708]	; 12534 <tcgetattr@plt+0x1100>
   11e84:	mov	r9, r3
   11e88:	str	r3, [r2]
   11e8c:	add	r4, r4, #748	; 0x2ec
   11e90:	add	r7, r7, #20
   11e94:	add	fp, pc, fp
   11e98:	add	sl, pc, sl
   11e9c:	add	r8, pc, r8
   11ea0:	b	11ea8 <tcgetattr@plt+0xa74>
   11ea4:	add	r4, r4, #20
   11ea8:	ldr	r3, [r4, #-16]
   11eac:	cmp	r3, #0
   11eb0:	beq	11d00 <tcgetattr@plt+0x8cc>
   11eb4:	ldrb	r3, [r4, #-8]
   11eb8:	tst	r3, #8
   11ebc:	bne	11ea4 <tcgetattr@plt+0xa70>
   11ec0:	ldr	r2, [r4, #-12]
   11ec4:	cmp	r2, r5
   11ec8:	beq	11ef8 <tcgetattr@plt+0xac4>
   11ecc:	ldr	r0, [r6]
   11ed0:	ldr	r3, [r0, #20]
   11ed4:	ldr	r1, [r0, #24]
   11ed8:	cmp	r3, r1
   11edc:	addcc	ip, r3, #1
   11ee0:	strcc	ip, [r0, #20]
   11ee4:	movcc	r1, #10
   11ee8:	strbcc	r1, [r3]
   11eec:	bcs	12a44 <tcgetattr@plt+0x1610>
   11ef0:	mov	r5, r2
   11ef4:	str	r9, [r8]
   11ef8:	ldr	r0, [r4, #-12]
   11efc:	mov	r1, r7
   11f00:	bl	130e8 <tcgetattr@plt+0x1cb4>
   11f04:	ldr	r3, [r4]
   11f08:	cmp	r3, #0
   11f0c:	ldreq	r3, [r4, #-4]
   11f10:	cmp	r0, #0
   11f14:	beq	12a58 <tcgetattr@plt+0x1624>
   11f18:	ldr	r1, [r0]
   11f1c:	ldr	r2, [r4, #-4]
   11f20:	and	r3, r3, r1
   11f24:	cmp	r3, r2
   11f28:	beq	11f80 <tcgetattr@plt+0xb4c>
   11f2c:	ldrb	r3, [r4, #-8]
   11f30:	tst	r3, #4
   11f34:	beq	11ea4 <tcgetattr@plt+0xa70>
   11f38:	mov	r0, fp
   11f3c:	ldr	r1, [r4, #-16]
   11f40:	bl	13138 <tcgetattr@plt+0x1d04>
   11f44:	b	11ea4 <tcgetattr@plt+0xa70>
   11f48:	ldr	r3, [r4, #8]
   11f4c:	add	r3, r8, r3
   11f50:	ldrb	r0, [r3, #37]	; 0x25
   11f54:	cmp	r0, #0
   11f58:	moveq	r2, r9
   11f5c:	bne	11f74 <tcgetattr@plt+0xb40>
   11f60:	mov	r1, r5
   11f64:	mov	r0, r7
   11f68:	add	r4, r4, #12
   11f6c:	bl	13138 <tcgetattr@plt+0x1d04>
   11f70:	b	11dd8 <tcgetattr@plt+0x9a4>
   11f74:	bl	1336c <tcgetattr@plt+0x1f38>
   11f78:	mov	r2, r0
   11f7c:	b	11f60 <tcgetattr@plt+0xb2c>
   11f80:	mov	r0, sl
   11f84:	ldr	r1, [r4, #-16]
   11f88:	bl	13138 <tcgetattr@plt+0x1d04>
   11f8c:	b	11ea4 <tcgetattr@plt+0xa70>
   11f90:	ldr	r1, [pc, #1440]	; 12538 <tcgetattr@plt+0x1104>
   11f94:	mov	r0, r6
   11f98:	mov	r2, #5
   11f9c:	add	r1, pc, r1
   11fa0:	bl	111b8 <dcgettext@plt>
   11fa4:	mov	r6, r0
   11fa8:	b	116dc <tcgetattr@plt+0x2a8>
   11fac:	ldr	r2, [sp, #16]
   11fb0:	ldr	r6, [sp, #36]	; 0x24
   11fb4:	cmp	r2, #0
   11fb8:	beq	11940 <tcgetattr@plt+0x50c>
   11fbc:	ldr	r2, [pc, #1400]	; 1253c <tcgetattr@plt+0x1108>
   11fc0:	mov	r0, #0
   11fc4:	mov	r1, r0
   11fc8:	add	r2, pc, r2
   11fcc:	add	r2, r2, #20
   11fd0:	bl	11248 <tcsetattr@plt>
   11fd4:	cmp	r0, #0
   11fd8:	beq	11ff8 <tcgetattr@plt+0xbc4>
   11fdc:	bl	11344 <__errno_location@plt>
   11fe0:	ldr	r2, [pc, #1368]	; 12540 <tcgetattr@plt+0x110c>
   11fe4:	mov	r3, r6
   11fe8:	add	r2, pc, r2
   11fec:	ldr	r1, [r0]
   11ff0:	mov	r0, #1
   11ff4:	bl	11278 <error@plt>
   11ff8:	ldr	r1, [pc, #1348]	; 12544 <tcgetattr@plt+0x1110>
   11ffc:	mov	r0, #0
   12000:	add	r1, pc, r1
   12004:	add	r1, r1, #80	; 0x50
   12008:	bl	11434 <tcgetattr@plt>
   1200c:	cmp	r0, #0
   12010:	beq	12030 <tcgetattr@plt+0xbfc>
   12014:	bl	11344 <__errno_location@plt>
   12018:	ldr	r2, [pc, #1320]	; 12548 <tcgetattr@plt+0x1114>
   1201c:	mov	r3, r6
   12020:	add	r2, pc, r2
   12024:	ldr	r1, [r0]
   12028:	mov	r0, #1
   1202c:	bl	11278 <error@plt>
   12030:	ldr	r4, [pc, #1300]	; 1254c <tcgetattr@plt+0x1118>
   12034:	mov	r2, #60	; 0x3c
   12038:	add	r4, pc, r4
   1203c:	add	r7, r4, #20
   12040:	add	r5, r4, #80	; 0x50
   12044:	mov	r0, r7
   12048:	mov	r1, r5
   1204c:	bl	111ac <memcmp@plt>
   12050:	cmp	r0, #0
   12054:	beq	11940 <tcgetattr@plt+0x50c>
   12058:	ldr	r1, [sp, #24]
   1205c:	ldr	r3, [r4, #88]	; 0x58
   12060:	cmp	r1, #0
   12064:	bic	r3, r3, #268435456	; 0x10000000
   12068:	bic	r3, r3, #983040	; 0xf0000
   1206c:	str	r3, [r4, #88]	; 0x58
   12070:	bne	1208c <tcgetattr@plt+0xc58>
   12074:	mov	r0, r7
   12078:	mov	r1, r5
   1207c:	mov	r2, #60	; 0x3c
   12080:	bl	111ac <memcmp@plt>
   12084:	cmp	r0, #0
   12088:	beq	11940 <tcgetattr@plt+0x50c>
   1208c:	ldr	r1, [pc, #1212]	; 12550 <tcgetattr@plt+0x111c>
   12090:	mov	r2, #5
   12094:	mov	r0, #0
   12098:	add	r1, pc, r1
   1209c:	bl	111b8 <dcgettext@plt>
   120a0:	mov	r3, r6
   120a4:	mov	r1, #0
   120a8:	mov	r2, r0
   120ac:	mov	r0, #1
   120b0:	bl	11278 <error@plt>
   120b4:	b	11940 <tcgetattr@plt+0x50c>
   120b8:	bl	11344 <__errno_location@plt>
   120bc:	ldr	r2, [pc, #1168]	; 12554 <tcgetattr@plt+0x1120>
   120c0:	mov	r3, r6
   120c4:	add	r2, pc, r2
   120c8:	ldr	r1, [r0]
   120cc:	mov	r0, #1
   120d0:	bl	11278 <error@plt>
   120d4:	b	116b0 <tcgetattr@plt+0x27c>
   120d8:	ldrb	r4, [r7]
   120dc:	cmp	r4, #110	; 0x6e
   120e0:	beq	12188 <tcgetattr@plt+0xd54>
   120e4:	cmp	r4, #101	; 0x65
   120e8:	bne	12138 <tcgetattr@plt+0xd04>
   120ec:	ldrb	r3, [r7, #1]
   120f0:	cmp	r3, #107	; 0x6b
   120f4:	bne	12138 <tcgetattr@plt+0xd04>
   120f8:	ldrb	r3, [r7, #2]
   120fc:	cmp	r3, #0
   12100:	bne	12138 <tcgetattr@plt+0xd04>
   12104:	ldr	r3, [pc, #1100]	; 12558 <tcgetattr@plt+0x1124>
   12108:	mov	r1, #127	; 0x7f
   1210c:	mov	r2, #21
   12110:	add	r3, pc, r3
   12114:	strb	r1, [r3, #39]	; 0x27
   12118:	strb	r2, [r3, #40]	; 0x28
   1211c:	b	11810 <tcgetattr@plt+0x3dc>
   12120:	ldr	r0, [pc, #1076]	; 1255c <tcgetattr@plt+0x1128>
   12124:	ldrb	r1, [r3, #43]	; 0x2b
   12128:	add	r0, pc, r0
   1212c:	ldrb	r2, [r3, #42]	; 0x2a
   12130:	bl	13138 <tcgetattr@plt+0x1d04>
   12134:	b	11b84 <tcgetattr@plt+0x750>
   12138:	ldr	r1, [pc, #1056]	; 12560 <tcgetattr@plt+0x112c>
   1213c:	mov	r0, r7
   12140:	add	r1, pc, r1
   12144:	bl	11158 <strcmp@plt>
   12148:	cmp	r0, #0
   1214c:	beq	12b14 <tcgetattr@plt+0x16e0>
   12150:	ldr	r1, [pc, #1036]	; 12564 <tcgetattr@plt+0x1130>
   12154:	mov	r0, r7
   12158:	add	r1, pc, r1
   1215c:	bl	11158 <strcmp@plt>
   12160:	cmp	r0, #0
   12164:	bne	12acc <tcgetattr@plt+0x1698>
   12168:	cmp	r6, #0
   1216c:	beq	12ab4 <tcgetattr@plt+0x1680>
   12170:	ldr	r3, [pc, #1008]	; 12568 <tcgetattr@plt+0x1134>
   12174:	add	r3, pc, r3
   12178:	ldr	r2, [r3, #32]
   1217c:	orr	r2, r2, #2
   12180:	str	r2, [r3, #32]
   12184:	b	11810 <tcgetattr@plt+0x3dc>
   12188:	ldrb	r3, [r7, #1]
   1218c:	cmp	r3, #108	; 0x6c
   12190:	bne	12138 <tcgetattr@plt+0xd04>
   12194:	ldrb	r3, [r7, #2]
   12198:	cmp	r3, #0
   1219c:	bne	12138 <tcgetattr@plt+0xd04>
   121a0:	cmp	r6, #0
   121a4:	beq	121ec <tcgetattr@plt+0xdb8>
   121a8:	ldr	r3, [pc, #956]	; 1256c <tcgetattr@plt+0x1138>
   121ac:	add	r3, pc, r3
   121b0:	ldr	r1, [r3, #20]
   121b4:	ldr	r2, [r3, #24]
   121b8:	bic	r1, r1, #448	; 0x1c0
   121bc:	bic	r2, r2, #44	; 0x2c
   121c0:	orr	r1, r1, #256	; 0x100
   121c4:	orr	r2, r2, #4
   121c8:	str	r1, [r3, #20]
   121cc:	str	r2, [r3, #24]
   121d0:	b	11810 <tcgetattr@plt+0x3dc>
   121d4:	mov	r1, #10
   121d8:	bl	113bc <__overflow@plt>
   121dc:	b	11ad8 <tcgetattr@plt+0x6a4>
   121e0:	mov	r1, #10
   121e4:	bl	113bc <__overflow@plt>
   121e8:	b	11b84 <tcgetattr@plt+0x750>
   121ec:	ldr	r3, [pc, #892]	; 12570 <tcgetattr@plt+0x113c>
   121f0:	add	r3, pc, r3
   121f4:	ldr	r1, [r3, #20]
   121f8:	ldr	r2, [r3, #24]
   121fc:	bic	r1, r1, #256	; 0x100
   12200:	str	r1, [r3, #20]
   12204:	bic	r2, r2, #4
   12208:	str	r2, [r3, #24]
   1220c:	b	11810 <tcgetattr@plt+0x3dc>
   12210:	mov	r1, #10
   12214:	bl	113bc <__overflow@plt>
   12218:	b	11940 <tcgetattr@plt+0x50c>
   1221c:	cmp	r6, #0
   12220:	bne	11948 <tcgetattr@plt+0x514>
   12224:	ldr	fp, [pc, #840]	; 12574 <tcgetattr@plt+0x1140>
   12228:	ldr	r2, [sp, #44]	; 0x2c
   1222c:	add	fp, pc, fp
   12230:	add	r7, r2, #516	; 0x204
   12234:	mov	r1, fp
   12238:	b	1224c <tcgetattr@plt+0xe18>
   1223c:	ldr	r1, [r7, #12]!
   12240:	add	r6, r6, #1
   12244:	cmp	r1, #0
   12248:	beq	122e4 <tcgetattr@plt+0xeb0>
   1224c:	mov	r0, r4
   12250:	bl	11158 <strcmp@plt>
   12254:	subs	r3, r0, #0
   12258:	bne	1223c <tcgetattr@plt+0xe08>
   1225c:	sub	r2, r8, #1
   12260:	cmp	r2, r5
   12264:	beq	12898 <tcgetattr@plt+0x1464>
   12268:	mov	r2, #12
   1226c:	ldr	r3, [pc, #772]	; 12578 <tcgetattr@plt+0x1144>
   12270:	mul	r6, r2, r6
   12274:	add	r3, pc, r3
   12278:	add	r3, r3, #516	; 0x204
   1227c:	add	sl, r9, sl
   12280:	add	r5, r5, #1
   12284:	ldr	r7, [sl, #4]
   12288:	add	r4, r3, r6
   1228c:	ldr	r0, [r3, r6]
   12290:	ldrb	r2, [r0]
   12294:	cmp	r2, #109	; 0x6d
   12298:	bne	12388 <tcgetattr@plt+0xf54>
   1229c:	ldrb	r2, [r0, #1]
   122a0:	cmp	r2, #105	; 0x69
   122a4:	bne	12388 <tcgetattr@plt+0xf54>
   122a8:	ldrb	r2, [r0, #2]
   122ac:	cmp	r2, #110	; 0x6e
   122b0:	bne	12388 <tcgetattr@plt+0xf54>
   122b4:	ldrb	r2, [r0, #3]
   122b8:	cmp	r2, #0
   122bc:	bne	12388 <tcgetattr@plt+0xf54>
   122c0:	mov	r0, r7
   122c4:	mov	r1, #255	; 0xff
   122c8:	bl	13e34 <tcgetattr@plt+0x2a00>
   122cc:	ldr	r2, [pc, #680]	; 1257c <tcgetattr@plt+0x1148>
   122d0:	ldr	r3, [r4, #8]
   122d4:	add	r2, pc, r2
   122d8:	add	r3, r2, r3
   122dc:	strb	r0, [r3, #37]	; 0x25
   122e0:	b	11810 <tcgetattr@plt+0x3dc>
   122e4:	mov	fp, r1
   122e8:	ldr	r1, [pc, #656]	; 12580 <tcgetattr@plt+0x114c>
   122ec:	mov	r0, r4
   122f0:	add	r1, pc, r1
   122f4:	bl	11158 <strcmp@plt>
   122f8:	cmp	r0, #0
   122fc:	bne	12338 <tcgetattr@plt+0xf04>
   12300:	sub	r2, r8, #1
   12304:	cmp	r5, r2
   12308:	beq	12860 <tcgetattr@plt+0x142c>
   1230c:	add	sl, r9, sl
   12310:	mov	r3, #1
   12314:	str	r3, [sp, #24]
   12318:	add	r5, r5, r3
   1231c:	ldr	r0, [sl, #4]
   12320:	str	r3, [sp, #16]
   12324:	bl	1307c <tcgetattr@plt+0x1c48>
   12328:	mov	r1, r0
   1232c:	ldr	r0, [sp, #32]
   12330:	bl	11314 <cfsetispeed@plt>
   12334:	b	11818 <tcgetattr@plt+0x3e4>
   12338:	ldr	r1, [pc, #580]	; 12584 <tcgetattr@plt+0x1150>
   1233c:	mov	r0, r4
   12340:	add	r1, pc, r1
   12344:	bl	11158 <strcmp@plt>
   12348:	cmp	r0, #0
   1234c:	bne	123d8 <tcgetattr@plt+0xfa4>
   12350:	sub	r2, r8, #1
   12354:	cmp	r5, r2
   12358:	beq	128a8 <tcgetattr@plt+0x1474>
   1235c:	add	sl, r9, sl
   12360:	mov	r1, #1
   12364:	str	r1, [sp, #24]
   12368:	add	r5, r5, r1
   1236c:	ldr	r0, [sl, #4]
   12370:	str	r1, [sp, #16]
   12374:	bl	1307c <tcgetattr@plt+0x1c48>
   12378:	mov	r1, r0
   1237c:	ldr	r0, [sp, #40]	; 0x28
   12380:	bl	1120c <cfsetospeed@plt>
   12384:	b	11818 <tcgetattr@plt+0x3e4>
   12388:	ldr	r1, [pc, #504]	; 12588 <tcgetattr@plt+0x1154>
   1238c:	add	r1, pc, r1
   12390:	bl	11158 <strcmp@plt>
   12394:	cmp	r0, #0
   12398:	beq	122c0 <tcgetattr@plt+0xe8c>
   1239c:	ldrb	r3, [r7]
   123a0:	cmp	r3, #0
   123a4:	beq	12420 <tcgetattr@plt+0xfec>
   123a8:	ldrb	r6, [r7, #1]
   123ac:	cmp	r6, #0
   123b0:	beq	12420 <tcgetattr@plt+0xfec>
   123b4:	cmp	r3, #94	; 0x5e
   123b8:	beq	12740 <tcgetattr@plt+0x130c>
   123bc:	ldr	r1, [pc, #456]	; 1258c <tcgetattr@plt+0x1158>
   123c0:	mov	r0, r7
   123c4:	add	r1, pc, r1
   123c8:	bl	11158 <strcmp@plt>
   123cc:	cmp	r0, #0
   123d0:	bne	122c0 <tcgetattr@plt+0xe8c>
   123d4:	b	122cc <tcgetattr@plt+0xe98>
   123d8:	ldr	r1, [pc, #432]	; 12590 <tcgetattr@plt+0x115c>
   123dc:	mov	r0, r4
   123e0:	add	r1, pc, r1
   123e4:	bl	11158 <strcmp@plt>
   123e8:	cmp	r0, #0
   123ec:	bne	12668 <tcgetattr@plt+0x1234>
   123f0:	sub	r2, r8, #1
   123f4:	cmp	r5, r2
   123f8:	beq	12a2c <tcgetattr@plt+0x15f8>
   123fc:	add	sl, r9, sl
   12400:	mvn	r1, #-2147483648	; 0x80000000
   12404:	add	r5, r5, #1
   12408:	ldr	r0, [sl, #4]
   1240c:	bl	13e34 <tcgetattr@plt+0x2a00>
   12410:	mvn	r1, #0
   12414:	ldr	r2, [sp, #36]	; 0x24
   12418:	bl	13460 <tcgetattr@plt+0x202c>
   1241c:	b	11818 <tcgetattr@plt+0x3e4>
   12420:	mov	r0, r3
   12424:	b	122cc <tcgetattr@plt+0xe98>
   12428:	andeq	fp, r1, r0, lsr #23
   1242c:	andeq	r0, r0, r8, lsl r1
   12430:	andeq	sl, r0, ip, ror #4
   12434:	andeq	sl, r0, r8, lsr #4
   12438:			; <UNDEFINED> instruction: 0x0000a1b4
   1243c:	andeq	sl, r0, r8, ror #1
   12440:	andeq	fp, r1, r8, rrx
   12444:	ldrdeq	sl, [r0], -r0
   12448:	andeq	r0, r0, r8, lsr #2
   1244c:	andeq	r0, r0, r8, asr #2
   12450:	andeq	r0, r0, ip, lsl r1
   12454:	andeq	r0, r0, r4, lsr r1
   12458:	andeq	r0, r0, r0, lsr #2
   1245c:	andeq	sl, r0, r4, ror #1
   12460:	andeq	sl, r0, ip, asr #1
   12464:	andeq	r9, r0, r8, lsl #31
   12468:	andeq	r0, r0, r0, asr r1
   1246c:			; <UNDEFINED> instruction: 0x0001bab8
   12470:	andeq	fp, r1, r4, lsl #21
   12474:	andeq	fp, r1, ip, ror sl
   12478:	andeq	sl, r1, r0, ror #27
   1247c:	ldrdeq	sl, [r1], -r8
   12480:	strdeq	r9, [r0], -r0
   12484:	andeq	sl, r1, r8, asr sp
   12488:			; <UNDEFINED> instruction: 0x0001b9b8
   1248c:	andeq	r9, r0, r0, lsl #30
   12490:	andeq	fp, r1, r0, lsr r9
   12494:	strdeq	fp, [r1], -r0
   12498:	andeq	r9, r0, r4, lsr #30
   1249c:	andeq	r9, r0, ip, lsr #30
   124a0:	andeq	r9, r0, r0, lsr pc
   124a4:	andeq	r9, r0, r4, ror #27
   124a8:	andeq	r9, r0, r0, ror #28
   124ac:	andeq	r9, r0, r0, asr lr
   124b0:	andeq	r9, r0, r0, asr #28
   124b4:	andeq	fp, r1, ip, lsl #15
   124b8:	andeq	sl, r0, r4, lsr #5
   124bc:	muleq	r0, r8, ip
   124c0:	andeq	fp, r1, r0, lsr #14
   124c4:	andeq	r9, r0, r8, lsl #26
   124c8:	andeq	sl, r1, r4, lsr sl
   124cc:	andeq	fp, r1, r8, lsr #13
   124d0:	andeq	fp, r1, r0, lsr #13
   124d4:			; <UNDEFINED> instruction: 0x00009cb4
   124d8:	andeq	r9, r0, r4, ror fp
   124dc:	andeq	fp, r1, r4, asr r6
   124e0:	andeq	fp, r1, r8, lsl #12
   124e4:	andeq	sl, r1, r0, lsl #19
   124e8:	strdeq	fp, [r1], -r4
   124ec:	andeq	r9, r0, r8, lsr #24
   124f0:	andeq	sl, r0, ip, lsl r1
   124f4:	andeq	fp, r1, ip, asr #11
   124f8:	andeq	fp, r1, r0, ror r4
   124fc:	andeq	fp, r1, r0, ror #8
   12500:	andeq	r9, r0, ip, lsr sl
   12504:	andeq	sl, r1, ip, ror #14
   12508:	andeq	fp, r1, r0, ror #7
   1250c:	ldrdeq	fp, [r1], -r8
   12510:			; <UNDEFINED> instruction: 0x000098b0
   12514:	andeq	r9, r0, r8, ror #19
   12518:	andeq	fp, r1, r8, lsl #7
   1251c:	ldrdeq	r9, [r0], -ip
   12520:	andeq	fp, r1, r0, lsr r3
   12524:	andeq	sl, r1, ip, lsr #13
   12528:	andeq	fp, r1, r0, lsr #6
   1252c:	andeq	r9, r0, ip, asr r9
   12530:	andeq	r9, r0, r0, asr #28
   12534:	andeq	fp, r1, r0, lsl #6
   12538:	andeq	r9, r0, r0, lsl #16
   1253c:	ldrdeq	fp, [r1], -r4
   12540:	strdeq	r9, [r0], -r0
   12544:	muleq	r1, ip, r1
   12548:			; <UNDEFINED> instruction: 0x00009cb8
   1254c:	andeq	fp, r1, r4, ror #2
   12550:	andeq	r9, r0, r4, ror r8
   12554:	andeq	r9, r0, r4, lsl ip
   12558:	andeq	fp, r1, ip, lsl #1
   1255c:	muleq	r0, ip, r6
   12560:	strdeq	r9, [r0], -ip
   12564:	andeq	r9, r0, ip, ror #13
   12568:	andeq	fp, r1, r8, lsr #32
   1256c:	strdeq	sl, [r1], -r0
   12570:	andeq	sl, r1, ip, lsr #31
   12574:	andeq	r9, r0, r0, ror #8
   12578:	andeq	sl, r1, ip, lsr #5
   1257c:	andeq	sl, r1, r8, asr #29
   12580:	andeq	r9, r0, ip, asr #12
   12584:	andeq	r9, r0, r8, ror r5
   12588:	andeq	r9, r0, r4, lsr #10
   1258c:	andeq	r9, r0, r0, lsl #11
   12590:	andeq	r9, r0, r0, ror #9
   12594:	andeq	r9, r0, r8, asr r2
   12598:	andeq	r9, r0, r8, asr #4
   1259c:	andeq	r9, r0, r8, lsr r2
   125a0:	andeq	r9, r0, r8, lsr #4
   125a4:			; <UNDEFINED> instruction: 0x0001aab0
   125a8:	strdeq	r9, [r0], -r4
   125ac:			; <UNDEFINED> instruction: 0x000091bc
   125b0:	andeq	r9, r0, ip, lsr r1
   125b4:	andeq	r9, r0, r0, lsr #2
   125b8:	andeq	sl, r1, r4, lsl #19
   125bc:	andeq	sl, r1, r4, asr r9
   125c0:	andeq	r9, r0, r4, lsr r0
   125c4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   125c8:	andeq	r8, r0, ip, ror #31
   125cc:	ldrdeq	r8, [r0], -ip
   125d0:	andeq	r8, r0, r8, lsr pc
   125d4:	andeq	sl, r1, r0, asr #16
   125d8:	andeq	sl, r1, ip, lsl r8
   125dc:	andeq	r8, r0, r8, ror #28
   125e0:	andeq	r8, r0, ip, asr lr
   125e4:	strdeq	r6, [r0], -r0
   125e8:	andeq	r8, r0, r0, ror sp
   125ec:	andeq	r8, r0, r0, ror sp
   125f0:	andeq	r8, r0, r8, lsr sp
   125f4:	andeq	r8, r0, ip, lsr sp
   125f8:	andeq	r6, r0, ip, lsr #23
   125fc:	andeq	sl, r1, r4, ror #13
   12600:	andeq	r8, r0, r8, ror sp
   12604:	andeq	sl, r1, ip, lsr #13
   12608:	andeq	r9, r1, r4, lsl #20
   1260c:	andeq	sl, r1, ip, ror r6
   12610:	andeq	r9, r1, r8, asr #19
   12614:	andeq	sl, r1, r0, asr #12
   12618:	andeq	sl, r1, r8, lsr r6
   1261c:			; <UNDEFINED> instruction: 0x0001a5b8
   12620:	andeq	r8, r0, r4, asr #24
   12624:	andeq	sl, r1, r0, ror r5
   12628:	andeq	sl, r1, ip, lsr r5
   1262c:	muleq	r0, r8, fp
   12630:	andeq	sl, r1, ip, lsr #9
   12634:	andeq	sl, r1, r4, ror r4
   12638:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1263c:	andeq	sl, r1, r4, lsl r4
   12640:	andeq	r8, r0, r8, asr #21
   12644:	ldrdeq	sl, [r1], -ip
   12648:	andeq	sl, r1, r4, asr #7
   1264c:	andeq	sl, r1, ip, lsr #7
   12650:	andeq	r8, r0, r8, ror #20
   12654:	andeq	r8, r0, r8, asr sl
   12658:	andeq	sl, r1, ip, asr r3
   1265c:	andeq	sl, r1, r0, lsl #6
   12660:	andeq	sl, r1, r8, ror #5
   12664:	andeq	sl, r1, r0, lsl #5
   12668:	ldr	r1, [pc, #-220]	; 12594 <tcgetattr@plt+0x1160>
   1266c:	mov	r0, r4
   12670:	add	r1, pc, r1
   12674:	bl	11158 <strcmp@plt>
   12678:	cmp	r0, #0
   1267c:	beq	1270c <tcgetattr@plt+0x12d8>
   12680:	ldr	r1, [pc, #-240]	; 12598 <tcgetattr@plt+0x1164>
   12684:	mov	r0, r4
   12688:	add	r1, pc, r1
   1268c:	bl	11158 <strcmp@plt>
   12690:	cmp	r0, #0
   12694:	beq	1270c <tcgetattr@plt+0x12d8>
   12698:	ldr	r1, [pc, #-260]	; 1259c <tcgetattr@plt+0x1168>
   1269c:	mov	r0, r4
   126a0:	add	r1, pc, r1
   126a4:	bl	11158 <strcmp@plt>
   126a8:	cmp	r0, #0
   126ac:	beq	1283c <tcgetattr@plt+0x1408>
   126b0:	ldr	r1, [pc, #-280]	; 125a0 <tcgetattr@plt+0x116c>
   126b4:	mov	r0, r4
   126b8:	add	r1, pc, r1
   126bc:	bl	11158 <strcmp@plt>
   126c0:	cmp	r0, #0
   126c4:	bne	127dc <tcgetattr@plt+0x13a8>
   126c8:	sub	r3, r8, #1
   126cc:	cmp	r5, r3
   126d0:	beq	12a38 <tcgetattr@plt+0x1604>
   126d4:	add	sl, sl, #4
   126d8:	mvn	r1, #0
   126dc:	add	r5, r5, #1
   126e0:	ldr	r0, [r9, sl]
   126e4:	bl	13e34 <tcgetattr@plt+0x2a00>
   126e8:	ldr	r3, [pc, #-332]	; 125a4 <tcgetattr@plt+0x1170>
   126ec:	add	r3, pc, r3
   126f0:	uxtb	r2, r0
   126f4:	strb	r0, [r3, #36]	; 0x24
   126f8:	cmp	r0, r2
   126fc:	bne	1279c <tcgetattr@plt+0x1368>
   12700:	mov	r1, #1
   12704:	str	r1, [sp, #16]
   12708:	b	11818 <tcgetattr@plt+0x3e4>
   1270c:	sub	r3, r8, #1
   12710:	cmp	r5, r3
   12714:	beq	128b4 <tcgetattr@plt+0x1480>
   12718:	add	sl, r9, sl
   1271c:	mvn	r1, #-2147483648	; 0x80000000
   12720:	add	r5, r5, #1
   12724:	ldr	r0, [sl, #4]
   12728:	bl	13e34 <tcgetattr@plt+0x2a00>
   1272c:	ldr	r2, [sp, #36]	; 0x24
   12730:	mov	r1, r0
   12734:	mvn	r0, #0
   12738:	bl	13460 <tcgetattr@plt+0x202c>
   1273c:	b	11818 <tcgetattr@plt+0x3e4>
   12740:	cmp	r6, #45	; 0x2d
   12744:	beq	12774 <tcgetattr@plt+0x1340>
   12748:	ldr	r1, [pc, #-424]	; 125a8 <tcgetattr@plt+0x1174>
   1274c:	mov	r0, r7
   12750:	add	r1, pc, r1
   12754:	bl	11158 <strcmp@plt>
   12758:	cmp	r0, #0
   1275c:	beq	122cc <tcgetattr@plt+0xe98>
   12760:	cmp	r6, #63	; 0x3f
   12764:	moveq	r0, #127	; 0x7f
   12768:	beq	122cc <tcgetattr@plt+0xe98>
   1276c:	bic	r0, r6, #96	; 0x60
   12770:	b	122cc <tcgetattr@plt+0xe98>
   12774:	ldrb	r0, [r7, #2]
   12778:	cmp	r0, #0
   1277c:	beq	122cc <tcgetattr@plt+0xe98>
   12780:	ldr	r1, [pc, #-476]	; 125ac <tcgetattr@plt+0x1178>
   12784:	mov	r0, r7
   12788:	add	r1, pc, r1
   1278c:	bl	11158 <strcmp@plt>
   12790:	cmp	r0, #0
   12794:	bne	1276c <tcgetattr@plt+0x1338>
   12798:	b	122cc <tcgetattr@plt+0xe98>
   1279c:	ldr	r1, [pc, #-500]	; 125b0 <tcgetattr@plt+0x117c>
   127a0:	mov	r2, #5
   127a4:	mov	r0, #0
   127a8:	mov	r3, #1
   127ac:	add	r1, pc, r1
   127b0:	str	r3, [sp, #16]
   127b4:	bl	111b8 <dcgettext@plt>
   127b8:	mov	r4, r0
   127bc:	ldr	r0, [r9, sl]
   127c0:	bl	15988 <close_stdout@@Base+0x1a6c>
   127c4:	mov	r2, r4
   127c8:	mov	r3, r0
   127cc:	mov	r0, #0
   127d0:	mov	r1, r0
   127d4:	bl	11278 <error@plt>
   127d8:	b	11818 <tcgetattr@plt+0x3e4>
   127dc:	ldr	r1, [pc, #-560]	; 125b4 <tcgetattr@plt+0x1180>
   127e0:	mov	r0, r4
   127e4:	add	r1, pc, r1
   127e8:	bl	11158 <strcmp@plt>
   127ec:	cmp	r0, #0
   127f0:	beq	12954 <tcgetattr@plt+0x1520>
   127f4:	mov	r0, r4
   127f8:	bl	1307c <tcgetattr@plt+0x1c48>
   127fc:	cmn	r0, #1
   12800:	mov	r6, r0
   12804:	beq	128d4 <tcgetattr@plt+0x14a0>
   12808:	ldr	r4, [pc, #-600]	; 125b8 <tcgetattr@plt+0x1184>
   1280c:	mov	r1, r0
   12810:	mov	r2, #1
   12814:	str	r2, [sp, #24]
   12818:	add	r4, pc, r4
   1281c:	str	r2, [sp, #16]
   12820:	add	r4, r4, #20
   12824:	mov	r0, r4
   12828:	bl	11314 <cfsetispeed@plt>
   1282c:	mov	r0, r4
   12830:	mov	r1, r6
   12834:	bl	1120c <cfsetospeed@plt>
   12838:	b	11818 <tcgetattr@plt+0x3e4>
   1283c:	bl	132b0 <tcgetattr@plt+0x1e7c>
   12840:	ldr	r2, [pc, #-652]	; 125bc <tcgetattr@plt+0x1188>
   12844:	ldr	r1, [sp, #36]	; 0x24
   12848:	add	r2, pc, r2
   1284c:	str	fp, [r2]
   12850:	str	r0, [r2, #4]
   12854:	mov	r0, fp
   12858:	bl	13548 <tcgetattr@plt+0x2114>
   1285c:	b	11818 <tcgetattr@plt+0x3e4>
   12860:	ldr	r1, [pc, #-680]	; 125c0 <tcgetattr@plt+0x118c>
   12864:	add	r1, pc, r1
   12868:	mov	r2, #5
   1286c:	bl	111b8 <dcgettext@plt>
   12870:	mov	r5, r0
   12874:	mov	r0, r4
   12878:	bl	15988 <close_stdout@@Base+0x1a6c>
   1287c:	mov	r1, fp
   12880:	mov	r2, r5
   12884:	mov	r3, r0
   12888:	mov	r0, fp
   1288c:	bl	11278 <error@plt>
   12890:	mov	r0, #1
   12894:	bl	1386c <tcgetattr@plt+0x2438>
   12898:	ldr	r1, [pc, #-732]	; 125c4 <tcgetattr@plt+0x1190>
   1289c:	mov	fp, r3
   128a0:	add	r1, pc, r1
   128a4:	b	12868 <tcgetattr@plt+0x1434>
   128a8:	ldr	r1, [pc, #-744]	; 125c8 <tcgetattr@plt+0x1194>
   128ac:	add	r1, pc, r1
   128b0:	b	12868 <tcgetattr@plt+0x1434>
   128b4:	ldr	r1, [pc, #-752]	; 125cc <tcgetattr@plt+0x1198>
   128b8:	mov	r0, #0
   128bc:	add	r1, pc, r1
   128c0:	mov	r2, #5
   128c4:	bl	111b8 <dcgettext@plt>
   128c8:	mov	r5, r0
   128cc:	mov	r0, r4
   128d0:	b	11964 <tcgetattr@plt+0x530>
   128d4:	add	r3, sp, #48	; 0x30
   128d8:	str	r3, [sp, #16]
   128dc:	bl	11344 <__errno_location@plt>
   128e0:	mov	fp, #0
   128e4:	mov	r7, fp
   128e8:	mov	r6, r4
   128ec:	mov	sl, r0
   128f0:	b	12924 <tcgetattr@plt+0x14f0>
   128f4:	ldr	r3, [sp, #48]	; 0x30
   128f8:	ldrb	r2, [r3]
   128fc:	cmp	r2, #58	; 0x3a
   12900:	bne	12944 <tcgetattr@plt+0x1510>
   12904:	cmp	r6, r3
   12908:	beq	12944 <tcgetattr@plt+0x1510>
   1290c:	add	r6, r3, #1
   12910:	add	r3, sp, #52	; 0x34
   12914:	str	r0, [fp, r3]
   12918:	add	fp, fp, #4
   1291c:	cmp	fp, #16
   12920:	beq	12970 <tcgetattr@plt+0x153c>
   12924:	add	r1, sp, #48	; 0x30
   12928:	str	r7, [sl]
   1292c:	mov	r0, r6
   12930:	mov	r2, #16
   12934:	bl	112f0 <strtoul@plt>
   12938:	ldr	r1, [sl]
   1293c:	cmp	r1, #0
   12940:	beq	128f4 <tcgetattr@plt+0x14c0>
   12944:	ldr	r1, [pc, #-892]	; 125d0 <tcgetattr@plt+0x119c>
   12948:	mov	r0, #0
   1294c:	add	r1, pc, r1
   12950:	b	128c0 <tcgetattr@plt+0x148c>
   12954:	bl	132b0 <tcgetattr@plt+0x1e7c>
   12958:	ldr	r3, [pc, #-908]	; 125d4 <tcgetattr@plt+0x11a0>
   1295c:	add	r3, pc, r3
   12960:	str	r0, [r3, #4]
   12964:	mov	r0, #0
   12968:	bl	1365c <tcgetattr@plt+0x2228>
   1296c:	b	11818 <tcgetattr@plt+0x3e4>
   12970:	ldr	r2, [pc, #-928]	; 125d8 <tcgetattr@plt+0x11a4>
   12974:	mov	r7, r1
   12978:	mov	r3, r1
   1297c:	ldr	r1, [sp, #56]	; 0x38
   12980:	add	r2, pc, r2
   12984:	ldr	ip, [sp, #52]	; 0x34
   12988:	ldr	r0, [sp, #60]	; 0x3c
   1298c:	add	fp, r2, #36	; 0x24
   12990:	str	r1, [r2, #24]
   12994:	ldr	r1, [sp, #64]	; 0x40
   12998:	str	ip, [r2, #20]
   1299c:	str	r0, [r2, #28]
   129a0:	str	r1, [r2, #32]
   129a4:	str	r3, [sl]
   129a8:	add	r1, sp, #48	; 0x30
   129ac:	mov	r2, #16
   129b0:	mov	r0, r6
   129b4:	str	r3, [sp, #12]
   129b8:	bl	112f0 <strtoul@plt>
   129bc:	cmp	r7, #31
   129c0:	ldr	r2, [sl]
   129c4:	ldr	r3, [sp, #12]
   129c8:	movne	r1, #58	; 0x3a
   129cc:	moveq	r1, #0
   129d0:	cmp	r2, #0
   129d4:	bne	12944 <tcgetattr@plt+0x1510>
   129d8:	ldr	r2, [sp, #48]	; 0x30
   129dc:	ldrb	ip, [r2]
   129e0:	cmp	ip, r1
   129e4:	bne	12944 <tcgetattr@plt+0x1510>
   129e8:	cmp	r6, r2
   129ec:	beq	12944 <tcgetattr@plt+0x1510>
   129f0:	uxtb	r1, r0
   129f4:	cmp	r0, r1
   129f8:	bne	12944 <tcgetattr@plt+0x1510>
   129fc:	add	r7, r7, #1
   12a00:	strb	r0, [fp, #1]!
   12a04:	cmp	r7, #32
   12a08:	add	r6, r2, #1
   12a0c:	bne	129a4 <tcgetattr@plt+0x1570>
   12a10:	b	12700 <tcgetattr@plt+0x12cc>
   12a14:	mov	r1, #10
   12a18:	bl	113bc <__overflow@plt>
   12a1c:	b	11c38 <tcgetattr@plt+0x804>
   12a20:	mov	r1, #10
   12a24:	bl	113bc <__overflow@plt>
   12a28:	b	11d24 <tcgetattr@plt+0x8f0>
   12a2c:	ldr	r1, [pc, #-1112]	; 125dc <tcgetattr@plt+0x11a8>
   12a30:	add	r1, pc, r1
   12a34:	b	12868 <tcgetattr@plt+0x1434>
   12a38:	ldr	r1, [pc, #-1120]	; 125e0 <tcgetattr@plt+0x11ac>
   12a3c:	add	r1, pc, r1
   12a40:	b	128c0 <tcgetattr@plt+0x148c>
   12a44:	mov	r1, #10
   12a48:	str	r2, [sp, #12]
   12a4c:	bl	113bc <__overflow@plt>
   12a50:	ldr	r2, [sp, #12]
   12a54:	b	11ef0 <tcgetattr@plt+0xabc>
   12a58:	ldr	r3, [pc, #-1148]	; 125e4 <tcgetattr@plt+0x11b0>
   12a5c:	movw	r2, #1637	; 0x665
   12a60:	ldr	r0, [pc, #-1152]	; 125e8 <tcgetattr@plt+0x11b4>
   12a64:	ldr	r1, [pc, #-1152]	; 125ec <tcgetattr@plt+0x11b8>
   12a68:	add	r3, pc, r3
   12a6c:	add	r0, pc, r0
   12a70:	add	r3, r3, #16
   12a74:	add	r1, pc, r1
   12a78:	bl	11428 <__assert_fail@plt>
   12a7c:	mov	r1, #10
   12a80:	bl	113bc <__overflow@plt>
   12a84:	b	11da4 <tcgetattr@plt+0x970>
   12a88:	mov	r1, #10
   12a8c:	bl	113bc <__overflow@plt>
   12a90:	b	11e58 <tcgetattr@plt+0xa24>
   12a94:	ldr	r0, [pc, #-1196]	; 125f0 <tcgetattr@plt+0x11bc>
   12a98:	movw	r2, #1558	; 0x616
   12a9c:	ldr	r1, [pc, #-1200]	; 125f4 <tcgetattr@plt+0x11c0>
   12aa0:	ldr	r3, [pc, #-1200]	; 125f8 <tcgetattr@plt+0x11c4>
   12aa4:	add	r0, pc, r0
   12aa8:	add	r1, pc, r1
   12aac:	add	r3, pc, r3
   12ab0:	bl	11428 <__assert_fail@plt>
   12ab4:	ldr	r3, [pc, #-1216]	; 125fc <tcgetattr@plt+0x11c8>
   12ab8:	add	r3, pc, r3
   12abc:	ldr	r2, [r3, #32]
   12ac0:	bic	r2, r2, #2
   12ac4:	str	r2, [r3, #32]
   12ac8:	b	11810 <tcgetattr@plt+0x3dc>
   12acc:	ldr	r1, [pc, #-1236]	; 12600 <tcgetattr@plt+0x11cc>
   12ad0:	mov	r0, r7
   12ad4:	add	r1, pc, r1
   12ad8:	bl	11158 <strcmp@plt>
   12adc:	cmp	r0, #0
   12ae0:	bne	12c08 <tcgetattr@plt+0x17d4>
   12ae4:	cmp	r6, #0
   12ae8:	beq	12be0 <tcgetattr@plt+0x17ac>
   12aec:	ldr	r3, [pc, #-1264]	; 12604 <tcgetattr@plt+0x11d0>
   12af0:	add	r3, pc, r3
   12af4:	ldr	r1, [r3, #28]
   12af8:	ldr	r2, [r3, #20]
   12afc:	bic	r1, r1, #304	; 0x130
   12b00:	orr	r1, r1, #288	; 0x120
   12b04:	orr	r2, r2, #32
   12b08:	str	r1, [r3, #28]
   12b0c:	str	r2, [r3, #20]
   12b10:	b	11810 <tcgetattr@plt+0x3dc>
   12b14:	ldr	r3, [pc, #-1300]	; 12608 <tcgetattr@plt+0x11d4>
   12b18:	ldr	r2, [pc, #-1300]	; 1260c <tcgetattr@plt+0x11d8>
   12b1c:	add	r3, pc, r3
   12b20:	add	r2, pc, r2
   12b24:	add	r3, r3, #524	; 0x20c
   12b28:	b	12b3c <tcgetattr@plt+0x1708>
   12b2c:	ldr	r1, [r3, #-12]
   12b30:	ldrb	r0, [r3, #-16]
   12b34:	add	r1, r2, r1
   12b38:	strb	r0, [r1, #37]	; 0x25
   12b3c:	add	r3, r3, #12
   12b40:	ldr	r1, [r3, #-20]	; 0xffffffec
   12b44:	cmp	r1, #0
   12b48:	bne	12b2c <tcgetattr@plt+0x16f8>
   12b4c:	ldr	r7, [pc, #-1348]	; 12610 <tcgetattr@plt+0x11dc>
   12b50:	ldr	r6, [pc, #-1348]	; 12614 <tcgetattr@plt+0x11e0>
   12b54:	ldr	r4, [pc, #-1348]	; 12618 <tcgetattr@plt+0x11e4>
   12b58:	add	r7, pc, r7
   12b5c:	add	r6, pc, r6
   12b60:	add	r7, r7, #748	; 0x2ec
   12b64:	add	r4, pc, r4
   12b68:	add	r6, r6, #20
   12b6c:	add	r4, r4, #20
   12b70:	b	12b9c <tcgetattr@plt+0x1768>
   12b74:	ldr	r0, [r7, #-12]
   12b78:	mov	r1, r4
   12b7c:	bl	130e8 <tcgetattr@plt+0x1cb4>
   12b80:	ldr	r1, [r7]
   12b84:	ldr	r3, [r7, #-4]
   12b88:	ldr	r2, [r0]
   12b8c:	bic	r2, r2, r1
   12b90:	orr	r3, r2, r3
   12b94:	str	r3, [r0]
   12b98:	add	r7, r7, #20
   12b9c:	ldr	r3, [r7, #-16]
   12ba0:	cmp	r3, #0
   12ba4:	beq	11810 <tcgetattr@plt+0x3dc>
   12ba8:	ldrb	r3, [r7, #-8]
   12bac:	tst	r3, #1
   12bb0:	bne	12b74 <tcgetattr@plt+0x1740>
   12bb4:	tst	r3, #2
   12bb8:	beq	12b98 <tcgetattr@plt+0x1764>
   12bbc:	ldr	r0, [r7, #-12]
   12bc0:	mov	r1, r6
   12bc4:	bl	130e8 <tcgetattr@plt+0x1cb4>
   12bc8:	ldmda	r7, {r1, r2}
   12bcc:	orr	r2, r1, r2
   12bd0:	ldr	r3, [r0]
   12bd4:	bic	r3, r3, r2
   12bd8:	str	r3, [r0]
   12bdc:	b	12b98 <tcgetattr@plt+0x1764>
   12be0:	ldr	r3, [pc, #-1484]	; 1261c <tcgetattr@plt+0x11e8>
   12be4:	add	r3, pc, r3
   12be8:	ldr	r1, [r3, #28]
   12bec:	ldr	r2, [r3, #20]
   12bf0:	bic	r1, r1, #304	; 0x130
   12bf4:	orr	r1, r1, #48	; 0x30
   12bf8:	bic	r2, r2, #32
   12bfc:	str	r1, [r3, #28]
   12c00:	str	r2, [r3, #20]
   12c04:	b	11810 <tcgetattr@plt+0x3dc>
   12c08:	ldr	r1, [pc, #-1520]	; 12620 <tcgetattr@plt+0x11ec>
   12c0c:	mov	r0, r7
   12c10:	add	r1, pc, r1
   12c14:	bl	11158 <strcmp@plt>
   12c18:	cmp	r0, #0
   12c1c:	bne	12c90 <tcgetattr@plt+0x185c>
   12c20:	cmp	r6, #0
   12c24:	beq	12c5c <tcgetattr@plt+0x1828>
   12c28:	ldr	r3, [pc, #-1548]	; 12624 <tcgetattr@plt+0x11f0>
   12c2c:	add	r3, pc, r3
   12c30:	ldr	r0, [r3, #28]
   12c34:	ldr	r1, [r3, #20]
   12c38:	ldr	r2, [r3, #24]
   12c3c:	bic	r0, r0, #304	; 0x130
   12c40:	orr	r0, r0, #288	; 0x120
   12c44:	orr	r1, r1, #32
   12c48:	orr	r2, r2, #1
   12c4c:	str	r0, [r3, #28]
   12c50:	str	r1, [r3, #20]
   12c54:	str	r2, [r3, #24]
   12c58:	b	11810 <tcgetattr@plt+0x3dc>
   12c5c:	ldr	r3, [pc, #-1596]	; 12628 <tcgetattr@plt+0x11f4>
   12c60:	add	r3, pc, r3
   12c64:	ldr	r0, [r3, #28]
   12c68:	ldr	r1, [r3, #20]
   12c6c:	ldr	r2, [r3, #24]
   12c70:	bic	r0, r0, #304	; 0x130
   12c74:	orr	r0, r0, #48	; 0x30
   12c78:	bic	r1, r1, #32
   12c7c:	bic	r2, r2, #1
   12c80:	str	r0, [r3, #28]
   12c84:	str	r1, [r3, #20]
   12c88:	str	r2, [r3, #24]
   12c8c:	b	11810 <tcgetattr@plt+0x3dc>
   12c90:	cmp	r4, #114	; 0x72
   12c94:	bne	12cbc <tcgetattr@plt+0x1888>
   12c98:	ldrb	r3, [r7, #1]
   12c9c:	cmp	r3, #97	; 0x61
   12ca0:	bne	12cbc <tcgetattr@plt+0x1888>
   12ca4:	ldrb	r3, [r7, #2]
   12ca8:	cmp	r3, #119	; 0x77
   12cac:	bne	12cbc <tcgetattr@plt+0x1888>
   12cb0:	ldrb	r3, [r7, #3]
   12cb4:	cmp	r3, #0
   12cb8:	beq	12d1c <tcgetattr@plt+0x18e8>
   12cbc:	ldr	r1, [pc, #-1688]	; 1262c <tcgetattr@plt+0x11f8>
   12cc0:	mov	r0, r7
   12cc4:	add	r1, pc, r1
   12cc8:	bl	11158 <strcmp@plt>
   12ccc:	cmp	r0, #0
   12cd0:	bne	12d64 <tcgetattr@plt+0x1930>
   12cd4:	cmp	r4, #114	; 0x72
   12cd8:	beq	12d1c <tcgetattr@plt+0x18e8>
   12cdc:	cmp	r4, #99	; 0x63
   12ce0:	beq	12d58 <tcgetattr@plt+0x1924>
   12ce4:	ldr	r3, [pc, #-1724]	; 12630 <tcgetattr@plt+0x11fc>
   12ce8:	mov	r2, #0
   12cec:	mov	ip, #1
   12cf0:	add	r3, pc, r3
   12cf4:	ldr	r0, [r3, #24]
   12cf8:	ldr	r1, [r3, #32]
   12cfc:	bic	r0, r0, #1
   12d00:	strb	ip, [r3, #43]	; 0x2b
   12d04:	bic	r1, r1, #7
   12d08:	str	r0, [r3, #24]
   12d0c:	str	r2, [r3, #20]
   12d10:	str	r1, [r3, #32]
   12d14:	strb	r2, [r3, #42]	; 0x2a
   12d18:	b	11810 <tcgetattr@plt+0x3dc>
   12d1c:	cmp	r6, #0
   12d20:	beq	12ce4 <tcgetattr@plt+0x18b0>
   12d24:	ldr	r3, [pc, #-1784]	; 12634 <tcgetattr@plt+0x1200>
   12d28:	add	r3, pc, r3
   12d2c:	ldr	r0, [r3, #20]
   12d30:	ldr	r1, [r3, #24]
   12d34:	ldr	r2, [r3, #32]
   12d38:	orr	r0, r0, #1312	; 0x520
   12d3c:	orr	r0, r0, #6
   12d40:	orr	r1, r1, #1
   12d44:	orr	r2, r2, #3
   12d48:	str	r0, [r3, #20]
   12d4c:	str	r1, [r3, #24]
   12d50:	str	r2, [r3, #32]
   12d54:	b	11810 <tcgetattr@plt+0x3dc>
   12d58:	cmp	r6, #0
   12d5c:	bne	12ce4 <tcgetattr@plt+0x18b0>
   12d60:	b	12d24 <tcgetattr@plt+0x18f0>
   12d64:	ldr	r1, [pc, #-1844]	; 12638 <tcgetattr@plt+0x1204>
   12d68:	mov	r0, r7
   12d6c:	add	r1, pc, r1
   12d70:	bl	11158 <strcmp@plt>
   12d74:	cmp	r0, #0
   12d78:	bne	12d9c <tcgetattr@plt+0x1968>
   12d7c:	cmp	r6, #0
   12d80:	beq	12dd4 <tcgetattr@plt+0x19a0>
   12d84:	ldr	r3, [pc, #-1872]	; 1263c <tcgetattr@plt+0x1208>
   12d88:	add	r3, pc, r3
   12d8c:	ldr	r2, [r3, #20]
   12d90:	orr	r2, r2, #2048	; 0x800
   12d94:	str	r2, [r3, #20]
   12d98:	b	11810 <tcgetattr@plt+0x3dc>
   12d9c:	ldr	r1, [pc, #-1892]	; 12640 <tcgetattr@plt+0x120c>
   12da0:	mov	r0, r7
   12da4:	add	r1, pc, r1
   12da8:	bl	11158 <strcmp@plt>
   12dac:	cmp	r0, #0
   12db0:	bne	12e04 <tcgetattr@plt+0x19d0>
   12db4:	cmp	r6, #0
   12db8:	beq	12dec <tcgetattr@plt+0x19b8>
   12dbc:	ldr	r3, [pc, #-1920]	; 12644 <tcgetattr@plt+0x1210>
   12dc0:	add	r3, pc, r3
   12dc4:	ldr	r2, [r3, #24]
   12dc8:	orr	r2, r2, #6144	; 0x1800
   12dcc:	str	r2, [r3, #24]
   12dd0:	b	11810 <tcgetattr@plt+0x3dc>
   12dd4:	ldr	r3, [pc, #-1940]	; 12648 <tcgetattr@plt+0x1214>
   12dd8:	add	r3, pc, r3
   12ddc:	ldr	r2, [r3, #20]
   12de0:	bic	r2, r2, #2048	; 0x800
   12de4:	str	r2, [r3, #20]
   12de8:	b	11810 <tcgetattr@plt+0x3dc>
   12dec:	ldr	r3, [pc, #-1960]	; 1264c <tcgetattr@plt+0x1218>
   12df0:	add	r3, pc, r3
   12df4:	ldr	r2, [r3, #24]
   12df8:	bic	r2, r2, #6144	; 0x1800
   12dfc:	str	r2, [r3, #24]
   12e00:	b	11810 <tcgetattr@plt+0x3dc>
   12e04:	ldr	r1, [pc, #-1980]	; 12650 <tcgetattr@plt+0x121c>
   12e08:	mov	r0, r7
   12e0c:	add	r1, pc, r1
   12e10:	bl	11158 <strcmp@plt>
   12e14:	cmp	r0, #0
   12e18:	beq	12e34 <tcgetattr@plt+0x1a00>
   12e1c:	ldr	r1, [pc, #-2000]	; 12654 <tcgetattr@plt+0x1220>
   12e20:	mov	r0, r7
   12e24:	add	r1, pc, r1
   12e28:	bl	11158 <strcmp@plt>
   12e2c:	cmp	r0, #0
   12e30:	bne	12e6c <tcgetattr@plt+0x1a38>
   12e34:	cmp	r6, #0
   12e38:	beq	12eb0 <tcgetattr@plt+0x1a7c>
   12e3c:	ldr	r3, [pc, #-2028]	; 12658 <tcgetattr@plt+0x1224>
   12e40:	add	r3, pc, r3
   12e44:	ldr	r0, [r3, #32]
   12e48:	ldr	r1, [r3, #20]
   12e4c:	ldr	r2, [r3, #24]
   12e50:	bic	r0, r0, #4
   12e54:	bic	r1, r1, #512	; 0x200
   12e58:	str	r0, [r3, #32]
   12e5c:	bic	r2, r2, #2
   12e60:	str	r1, [r3, #20]
   12e64:	str	r2, [r3, #24]
   12e68:	b	11810 <tcgetattr@plt+0x3dc>
   12e6c:	cmp	r4, #99	; 0x63
   12e70:	bne	12ee0 <tcgetattr@plt+0x1aac>
   12e74:	ldrb	r3, [r7, #1]
   12e78:	cmp	r3, #114	; 0x72
   12e7c:	bne	11810 <tcgetattr@plt+0x3dc>
   12e80:	ldrb	r3, [r7, #2]
   12e84:	cmp	r3, #116	; 0x74
   12e88:	bne	11810 <tcgetattr@plt+0x3dc>
   12e8c:	ldrb	r3, [r7, #3]
   12e90:	cmp	r3, #0
   12e94:	bne	11810 <tcgetattr@plt+0x3dc>
   12e98:	ldr	r3, [pc, #-2116]	; 1265c <tcgetattr@plt+0x1228>
   12e9c:	add	r3, pc, r3
   12ea0:	ldr	r2, [r3, #32]
   12ea4:	orr	r2, r2, #2576	; 0xa10
   12ea8:	str	r2, [r3, #32]
   12eac:	b	11810 <tcgetattr@plt+0x3dc>
   12eb0:	ldr	r3, [pc, #-2136]	; 12660 <tcgetattr@plt+0x122c>
   12eb4:	add	r3, pc, r3
   12eb8:	ldr	r0, [r3, #32]
   12ebc:	ldr	r1, [r3, #20]
   12ec0:	ldr	r2, [r3, #24]
   12ec4:	orr	r0, r0, #4
   12ec8:	orr	r1, r1, #512	; 0x200
   12ecc:	str	r0, [r3, #32]
   12ed0:	orr	r2, r2, #2
   12ed4:	str	r1, [r3, #20]
   12ed8:	str	r2, [r3, #24]
   12edc:	b	11810 <tcgetattr@plt+0x3dc>
   12ee0:	cmp	r4, #100	; 0x64
   12ee4:	bne	11810 <tcgetattr@plt+0x3dc>
   12ee8:	ldrb	r3, [r7, #1]
   12eec:	cmp	r3, #101	; 0x65
   12ef0:	bne	11810 <tcgetattr@plt+0x3dc>
   12ef4:	ldrb	r3, [r7, #2]
   12ef8:	cmp	r3, #99	; 0x63
   12efc:	bne	11810 <tcgetattr@plt+0x3dc>
   12f00:	ldrb	r3, [r7, #3]
   12f04:	cmp	r3, #0
   12f08:	bne	11810 <tcgetattr@plt+0x3dc>
   12f0c:	ldr	r3, [pc, #-2224]	; 12664 <tcgetattr@plt+0x1230>
   12f10:	mov	r2, #3
   12f14:	mov	ip, #127	; 0x7f
   12f18:	mov	r0, #21
   12f1c:	add	r3, pc, r3
   12f20:	ldr	r1, [r3, #32]
   12f24:	strb	r2, [r3, #37]	; 0x25
   12f28:	ldr	r2, [r3, #20]
   12f2c:	orr	r1, r1, #2576	; 0xa10
   12f30:	strb	ip, [r3, #39]	; 0x27
   12f34:	bic	r2, r2, #2048	; 0x800
   12f38:	strb	r0, [r3, #40]	; 0x28
   12f3c:	str	r1, [r3, #32]
   12f40:	str	r2, [r3, #20]
   12f44:	b	11810 <tcgetattr@plt+0x3dc>
   12f48:	mov	fp, #0
   12f4c:	mov	lr, #0
   12f50:	pop	{r1}		; (ldr r1, [sp], #4)
   12f54:	mov	r2, sp
   12f58:	push	{r2}		; (str r2, [sp, #-4]!)
   12f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   12f60:	ldr	ip, [pc, #16]	; 12f78 <tcgetattr@plt+0x1b44>
   12f64:	push	{ip}		; (str ip, [sp, #-4]!)
   12f68:	ldr	r0, [pc, #12]	; 12f7c <tcgetattr@plt+0x1b48>
   12f6c:	ldr	r3, [pc, #12]	; 12f80 <tcgetattr@plt+0x1b4c>
   12f70:	bl	112a8 <__libc_start_main@plt>
   12f74:	bl	11404 <abort@plt>
   12f78:	andeq	r9, r1, r0, lsr #12
   12f7c:	andeq	r1, r1, r0, asr #8
   12f80:			; <UNDEFINED> instruction: 0x000195bc
   12f84:	ldr	r3, [pc, #20]	; 12fa0 <tcgetattr@plt+0x1b6c>
   12f88:	ldr	r2, [pc, #20]	; 12fa4 <tcgetattr@plt+0x1b70>
   12f8c:	add	r3, pc, r3
   12f90:	ldr	r2, [r3, r2]
   12f94:	cmp	r2, #0
   12f98:	bxeq	lr
   12f9c:	b	112c0 <__gmon_start__@plt>
   12fa0:	andeq	sl, r1, ip, rrx
   12fa4:	andeq	r0, r0, ip, lsr #2
   12fa8:	push	{r3, lr}
   12fac:	movw	r0, #53664	; 0xd1a0
   12fb0:	ldr	r3, [pc, #36]	; 12fdc <tcgetattr@plt+0x1ba8>
   12fb4:	movt	r0, #2
   12fb8:	rsb	r3, r0, r3
   12fbc:	cmp	r3, #6
   12fc0:	popls	{r3, pc}
   12fc4:	movw	r3, #0
   12fc8:	movt	r3, #0
   12fcc:	cmp	r3, #0
   12fd0:	popeq	{r3, pc}
   12fd4:	blx	r3
   12fd8:	pop	{r3, pc}
   12fdc:	andeq	sp, r2, r3, lsr #3
   12fe0:	push	{r3, lr}
   12fe4:	movw	r0, #53664	; 0xd1a0
   12fe8:	movw	r3, #53664	; 0xd1a0
   12fec:	movt	r0, #2
   12ff0:	movt	r3, #2
   12ff4:	rsb	r3, r0, r3
   12ff8:	asr	r3, r3, #2
   12ffc:	add	r3, r3, r3, lsr #31
   13000:	asrs	r1, r3, #1
   13004:	popeq	{r3, pc}
   13008:	movw	r2, #0
   1300c:	movt	r2, #0
   13010:	cmp	r2, #0
   13014:	popeq	{r3, pc}
   13018:	blx	r2
   1301c:	pop	{r3, pc}
   13020:	push	{r4, lr}
   13024:	movw	r4, #53664	; 0xd1a0
   13028:	movt	r4, #2
   1302c:	ldrb	r3, [r4]
   13030:	cmp	r3, #0
   13034:	popne	{r4, pc}
   13038:	bl	12fa8 <tcgetattr@plt+0x1b74>
   1303c:	mov	r3, #1
   13040:	strb	r3, [r4]
   13044:	pop	{r4, pc}
   13048:	movw	r0, #50468	; 0xc524
   1304c:	movt	r0, #2
   13050:	push	{r3, lr}
   13054:	ldr	r3, [r0]
   13058:	cmp	r3, #0
   1305c:	beq	13074 <tcgetattr@plt+0x1c40>
   13060:	movw	r3, #0
   13064:	movt	r3, #0
   13068:	cmp	r3, #0
   1306c:	beq	13074 <tcgetattr@plt+0x1c40>
   13070:	blx	r3
   13074:	pop	{r3, lr}
   13078:	b	12fe0 <tcgetattr@plt+0x1bac>
   1307c:	push	{r4, r5, r6, lr}
   13080:	mov	r6, r0
   13084:	ldr	r5, [pc, #80]	; 130dc <tcgetattr@plt+0x1ca8>
   13088:	mov	r4, #0
   1308c:	ldr	r1, [pc, #76]	; 130e0 <tcgetattr@plt+0x1cac>
   13090:	add	r5, pc, r5
   13094:	add	r1, pc, r1
   13098:	b	130ac <tcgetattr@plt+0x1c78>
   1309c:	ldr	r1, [r5, #12]!
   130a0:	add	r4, r4, #1
   130a4:	cmp	r1, #0
   130a8:	beq	130d4 <tcgetattr@plt+0x1ca0>
   130ac:	mov	r0, r6
   130b0:	bl	11158 <strcmp@plt>
   130b4:	cmp	r0, #0
   130b8:	bne	1309c <tcgetattr@plt+0x1c68>
   130bc:	ldr	r3, [pc, #32]	; 130e4 <tcgetattr@plt+0x1cb0>
   130c0:	add	r4, r4, r4, lsl #1
   130c4:	add	r3, pc, r3
   130c8:	add	r4, r3, r4, lsl #2
   130cc:	ldr	r0, [r4, #4]
   130d0:	pop	{r4, r5, r6, pc}
   130d4:	mvn	r0, #0
   130d8:	pop	{r4, r5, r6, pc}
   130dc:	muleq	r1, r0, r4
   130e0:	andeq	r8, r0, ip, lsl #18
   130e4:	andeq	r9, r1, ip, asr r4
   130e8:	push	{r3, lr}
   130ec:	cmp	r0, #4
   130f0:	addls	pc, pc, r0, lsl #2
   130f4:	b	13134 <tcgetattr@plt+0x1d00>
   130f8:	b	1311c <tcgetattr@plt+0x1ce8>
   130fc:	b	13124 <tcgetattr@plt+0x1cf0>
   13100:	b	1312c <tcgetattr@plt+0x1cf8>
   13104:	b	13114 <tcgetattr@plt+0x1ce0>
   13108:	b	1310c <tcgetattr@plt+0x1cd8>
   1310c:	mov	r0, #0
   13110:	pop	{r3, pc}
   13114:	add	r0, r1, #12
   13118:	pop	{r3, pc}
   1311c:	add	r0, r1, #8
   13120:	pop	{r3, pc}
   13124:	mov	r0, r1
   13128:	pop	{r3, pc}
   1312c:	add	r0, r1, #4
   13130:	pop	{r3, pc}
   13134:	bl	11404 <abort@plt>
   13138:	push	{r0, r1, r2, r3}
   1313c:	push	{r4, r5, r6, r7, lr}
   13140:	sub	sp, sp, #20
   13144:	ldr	r4, [pc, #328]	; 13294 <tcgetattr@plt+0x1e60>
   13148:	add	r3, sp, #44	; 0x2c
   1314c:	ldr	ip, [pc, #324]	; 13298 <tcgetattr@plt+0x1e64>
   13150:	add	r0, sp, #8
   13154:	add	r4, pc, r4
   13158:	mov	r2, r3
   1315c:	ldr	r1, [sp, #40]	; 0x28
   13160:	ldr	r5, [r4, ip]
   13164:	str	r3, [sp, #4]
   13168:	ldr	r3, [r5]
   1316c:	str	r3, [sp, #12]
   13170:	bl	16e98 <close_stdout@@Base+0x2f7c>
   13174:	subs	r6, r0, #0
   13178:	blt	13274 <tcgetattr@plt+0x1e40>
   1317c:	ldr	r7, [pc, #280]	; 1329c <tcgetattr@plt+0x1e68>
   13180:	add	r7, pc, r7
   13184:	ldr	r3, [r7]
   13188:	cmp	r3, #0
   1318c:	ble	13264 <tcgetattr@plt+0x1e30>
   13190:	ldr	r2, [r7, #4]
   13194:	rsb	r2, r3, r2
   13198:	cmp	r6, r2
   1319c:	bgt	13224 <tcgetattr@plt+0x1df0>
   131a0:	ldr	r2, [pc, #248]	; 132a0 <tcgetattr@plt+0x1e6c>
   131a4:	ldr	r4, [r4, r2]
   131a8:	ldr	r0, [r4]
   131ac:	ldr	r2, [r0, #20]
   131b0:	ldr	r1, [r0, #24]
   131b4:	cmp	r2, r1
   131b8:	addcc	ip, r2, #1
   131bc:	strcc	ip, [r0, #20]
   131c0:	movcc	r1, #32
   131c4:	strbcc	r1, [r2]
   131c8:	bcs	13278 <tcgetattr@plt+0x1e44>
   131cc:	ldr	r2, [pc, #208]	; 132a4 <tcgetattr@plt+0x1e70>
   131d0:	add	r3, r3, #1
   131d4:	add	r2, pc, r2
   131d8:	str	r3, [r2]
   131dc:	ldr	r1, [r4]
   131e0:	ldr	r0, [sp, #8]
   131e4:	bl	11140 <fputs_unlocked@plt>
   131e8:	ldr	r0, [sp, #8]
   131ec:	bl	1117c <free@plt>
   131f0:	ldr	r3, [pc, #176]	; 132a8 <tcgetattr@plt+0x1e74>
   131f4:	ldr	r0, [sp, #12]
   131f8:	add	r3, pc, r3
   131fc:	ldr	r1, [r5]
   13200:	ldr	r2, [r3]
   13204:	cmp	r0, r1
   13208:	add	r6, r6, r2
   1320c:	str	r6, [r3]
   13210:	bne	13270 <tcgetattr@plt+0x1e3c>
   13214:	add	sp, sp, #20
   13218:	pop	{r4, r5, r6, r7, lr}
   1321c:	add	sp, sp, #16
   13220:	bx	lr
   13224:	ldr	r3, [pc, #116]	; 132a0 <tcgetattr@plt+0x1e6c>
   13228:	ldr	r4, [r4, r3]
   1322c:	ldr	r0, [r4]
   13230:	ldr	r3, [r0, #20]
   13234:	ldr	r2, [r0, #24]
   13238:	cmp	r3, r2
   1323c:	addcc	r1, r3, #1
   13240:	strcc	r1, [r0, #20]
   13244:	movcc	r2, #10
   13248:	strbcc	r2, [r3]
   1324c:	bcs	13288 <tcgetattr@plt+0x1e54>
   13250:	ldr	r3, [pc, #84]	; 132ac <tcgetattr@plt+0x1e78>
   13254:	mov	r2, #0
   13258:	add	r3, pc, r3
   1325c:	str	r2, [r3]
   13260:	b	131dc <tcgetattr@plt+0x1da8>
   13264:	ldr	r3, [pc, #52]	; 132a0 <tcgetattr@plt+0x1e6c>
   13268:	ldr	r4, [r4, r3]
   1326c:	b	131dc <tcgetattr@plt+0x1da8>
   13270:	bl	111c4 <__stack_chk_fail@plt>
   13274:	bl	16148 <close_stdout@@Base+0x222c>
   13278:	mov	r1, #32
   1327c:	bl	113bc <__overflow@plt>
   13280:	ldr	r3, [r7]
   13284:	b	131cc <tcgetattr@plt+0x1d98>
   13288:	mov	r1, #10
   1328c:	bl	113bc <__overflow@plt>
   13290:	b	13250 <tcgetattr@plt+0x1e1c>
   13294:	andeq	r9, r1, r4, lsr #29
   13298:	andeq	r0, r0, r8, lsl r1
   1329c:	andeq	sl, r1, ip, lsl r0
   132a0:	andeq	r0, r0, r4, lsr r1
   132a4:	andeq	r9, r1, r8, asr #31
   132a8:	andeq	r9, r1, r4, lsr #31
   132ac:	andeq	r9, r1, r4, asr #30
   132b0:	ldr	r3, [pc, #164]	; 1335c <tcgetattr@plt+0x1f28>
   132b4:	mov	r0, #1
   132b8:	ldr	ip, [pc, #160]	; 13360 <tcgetattr@plt+0x1f2c>
   132bc:	movw	r1, #21523	; 0x5413
   132c0:	add	r3, pc, r3
   132c4:	push	{r4, lr}
   132c8:	sub	sp, sp, #24
   132cc:	ldr	r4, [r3, ip]
   132d0:	add	r2, sp, #12
   132d4:	ldr	r3, [r4]
   132d8:	str	r3, [sp, #20]
   132dc:	bl	11224 <ioctl@plt>
   132e0:	cmp	r0, #0
   132e4:	bne	132f4 <tcgetattr@plt+0x1ec0>
   132e8:	ldrh	r0, [sp, #14]
   132ec:	cmp	r0, #0
   132f0:	bne	13330 <tcgetattr@plt+0x1efc>
   132f4:	ldr	r0, [pc, #104]	; 13364 <tcgetattr@plt+0x1f30>
   132f8:	add	r0, pc, r0
   132fc:	bl	11290 <getenv@plt>
   13300:	cmp	r0, #0
   13304:	beq	1332c <tcgetattr@plt+0x1ef8>
   13308:	ldr	ip, [pc, #88]	; 13368 <tcgetattr@plt+0x1f34>
   1330c:	mov	r1, #0
   13310:	mov	r2, r1
   13314:	add	r3, sp, #8
   13318:	add	ip, pc, ip
   1331c:	str	ip, [sp]
   13320:	bl	161a0 <close_stdout@@Base+0x2284>
   13324:	cmp	r0, #0
   13328:	beq	13348 <tcgetattr@plt+0x1f14>
   1332c:	mov	r0, #80	; 0x50
   13330:	ldr	r2, [sp, #20]
   13334:	ldr	r3, [r4]
   13338:	cmp	r2, r3
   1333c:	bne	13358 <tcgetattr@plt+0x1f24>
   13340:	add	sp, sp, #24
   13344:	pop	{r4, pc}
   13348:	ldr	r0, [sp, #8]
   1334c:	cmp	r0, #0
   13350:	bgt	13330 <tcgetattr@plt+0x1efc>
   13354:	b	1332c <tcgetattr@plt+0x1ef8>
   13358:	bl	111c4 <__stack_chk_fail@plt>
   1335c:	andeq	r9, r1, r8, lsr sp
   13360:	andeq	r0, r0, r8, lsl r1
   13364:	andeq	r6, r0, ip, ror r3
   13368:	andeq	r8, r0, r0, asr #6
   1336c:	cmp	r0, #31
   13370:	bls	13390 <tcgetattr@plt+0x1f5c>
   13374:	cmp	r0, #126	; 0x7e
   13378:	bhi	133c4 <tcgetattr@plt+0x1f90>
   1337c:	ldr	r3, [pc, #200]	; 1344c <tcgetattr@plt+0x2018>
   13380:	add	r3, pc, r3
   13384:	add	r2, r3, #9
   13388:	strb	r0, [r3, #8]
   1338c:	b	133ac <tcgetattr@plt+0x1f78>
   13390:	ldr	r3, [pc, #184]	; 13450 <tcgetattr@plt+0x201c>
   13394:	add	r0, r0, #64	; 0x40
   13398:	mov	r1, #94	; 0x5e
   1339c:	add	r3, pc, r3
   133a0:	add	r2, r3, #10
   133a4:	strb	r0, [r3, #9]
   133a8:	strb	r1, [r3, #8]
   133ac:	ldr	r0, [pc, #160]	; 13454 <tcgetattr@plt+0x2020>
   133b0:	mov	r3, #0
   133b4:	strb	r3, [r2]
   133b8:	add	r0, pc, r0
   133bc:	add	r0, r0, #8
   133c0:	bx	lr
   133c4:	cmp	r0, #127	; 0x7f
   133c8:	beq	13414 <tcgetattr@plt+0x1fe0>
   133cc:	ldr	r3, [pc, #132]	; 13458 <tcgetattr@plt+0x2024>
   133d0:	cmp	r0, #159	; 0x9f
   133d4:	mov	r1, #77	; 0x4d
   133d8:	mov	r2, #45	; 0x2d
   133dc:	add	r3, pc, r3
   133e0:	strb	r1, [r3, #8]
   133e4:	strb	r2, [r3, #9]
   133e8:	bls	13434 <tcgetattr@plt+0x2000>
   133ec:	cmp	r0, #255	; 0xff
   133f0:	subne	r0, r0, #128	; 0x80
   133f4:	addne	r2, r3, #11
   133f8:	moveq	r2, #94	; 0x5e
   133fc:	moveq	r1, #63	; 0x3f
   13400:	strbeq	r2, [r3, #10]
   13404:	addeq	r2, r3, #12
   13408:	strbne	r0, [r3, #10]
   1340c:	strbeq	r1, [r3, #11]
   13410:	b	133ac <tcgetattr@plt+0x1f78>
   13414:	ldr	r3, [pc, #64]	; 1345c <tcgetattr@plt+0x2028>
   13418:	mov	r0, #94	; 0x5e
   1341c:	mov	r1, #63	; 0x3f
   13420:	add	r3, pc, r3
   13424:	add	r2, r3, #10
   13428:	strb	r0, [r3, #8]
   1342c:	strb	r1, [r3, #9]
   13430:	b	133ac <tcgetattr@plt+0x1f78>
   13434:	sub	r0, r0, #64	; 0x40
   13438:	mov	r1, #94	; 0x5e
   1343c:	strb	r0, [r3, #11]
   13440:	add	r2, r3, #12
   13444:	strb	r1, [r3, #10]
   13448:	b	133ac <tcgetattr@plt+0x1f78>
   1344c:	andeq	r9, r1, ip, lsl lr
   13450:	andeq	r9, r1, r0, lsl #28
   13454:	andeq	r9, r1, r4, ror #27
   13458:	andeq	r9, r1, r0, asr #27
   1345c:	andeq	r9, r1, ip, ror sp
   13460:	ldr	ip, [pc, #208]	; 13538 <tcgetattr@plt+0x2104>
   13464:	push	{r4, r5, r6, r7, r8, lr}
   13468:	add	ip, pc, ip
   1346c:	ldr	lr, [pc, #200]	; 1353c <tcgetattr@plt+0x2108>
   13470:	sub	sp, sp, #16
   13474:	add	r4, sp, #4
   13478:	mov	r7, r0
   1347c:	mov	r6, r1
   13480:	mov	r8, r2
   13484:	ldr	r5, [ip, lr]
   13488:	mov	r0, #0
   1348c:	mov	r2, r4
   13490:	movw	r1, #21523	; 0x5413
   13494:	ldr	ip, [r5]
   13498:	str	ip, [sp, #12]
   1349c:	bl	11224 <ioctl@plt>
   134a0:	cmp	r0, #0
   134a4:	beq	134d8 <tcgetattr@plt+0x20a4>
   134a8:	bl	11344 <__errno_location@plt>
   134ac:	ldr	r1, [r0]
   134b0:	cmp	r1, #22
   134b4:	beq	134cc <tcgetattr@plt+0x2098>
   134b8:	ldr	r2, [pc, #128]	; 13540 <tcgetattr@plt+0x210c>
   134bc:	mov	r0, #1
   134c0:	mov	r3, r8
   134c4:	add	r2, pc, r2
   134c8:	bl	11278 <error@plt>
   134cc:	mov	r3, #0
   134d0:	str	r3, [sp, #4]
   134d4:	str	r3, [r4, #4]
   134d8:	mov	r2, r4
   134dc:	mov	r0, #0
   134e0:	movw	r1, #21524	; 0x5414
   134e4:	cmp	r7, #0
   134e8:	strhge	r7, [sp, #4]
   134ec:	cmp	r6, #0
   134f0:	strhge	r6, [sp, #6]
   134f4:	bl	11224 <ioctl@plt>
   134f8:	cmp	r0, #0
   134fc:	beq	1351c <tcgetattr@plt+0x20e8>
   13500:	bl	11344 <__errno_location@plt>
   13504:	ldr	r2, [pc, #56]	; 13544 <tcgetattr@plt+0x2110>
   13508:	mov	r3, r8
   1350c:	add	r2, pc, r2
   13510:	ldr	r1, [r0]
   13514:	mov	r0, #1
   13518:	bl	11278 <error@plt>
   1351c:	ldr	r2, [sp, #12]
   13520:	ldr	r3, [r5]
   13524:	cmp	r2, r3
   13528:	bne	13534 <tcgetattr@plt+0x2100>
   1352c:	add	sp, sp, #16
   13530:	pop	{r4, r5, r6, r7, r8, pc}
   13534:	bl	111c4 <__stack_chk_fail@plt>
   13538:	muleq	r1, r0, fp
   1353c:	andeq	r0, r0, r8, lsl r1
   13540:	andeq	r8, r0, r4, lsl r8
   13544:	andeq	r8, r0, ip, asr #15
   13548:	ldr	ip, [pc, #240]	; 13640 <tcgetattr@plt+0x220c>
   1354c:	push	{r4, r5, r6, lr}
   13550:	add	ip, pc, ip
   13554:	ldr	lr, [pc, #232]	; 13644 <tcgetattr@plt+0x2210>
   13558:	sub	sp, sp, #16
   1355c:	mov	r5, r0
   13560:	mov	r6, r1
   13564:	mov	r0, #0
   13568:	movw	r1, #21523	; 0x5413
   1356c:	ldr	r4, [ip, lr]
   13570:	add	r2, sp, #4
   13574:	ldr	ip, [r4]
   13578:	str	ip, [sp, #12]
   1357c:	bl	11224 <ioctl@plt>
   13580:	cmp	r0, #0
   13584:	beq	135cc <tcgetattr@plt+0x2198>
   13588:	bl	11344 <__errno_location@plt>
   1358c:	ldr	r1, [r0]
   13590:	cmp	r1, #22
   13594:	beq	135ac <tcgetattr@plt+0x2178>
   13598:	ldr	r2, [pc, #168]	; 13648 <tcgetattr@plt+0x2214>
   1359c:	mov	r0, #1
   135a0:	mov	r3, r6
   135a4:	add	r2, pc, r2
   135a8:	bl	11278 <error@plt>
   135ac:	cmp	r5, #0
   135b0:	beq	13610 <tcgetattr@plt+0x21dc>
   135b4:	ldr	r2, [sp, #12]
   135b8:	ldr	r3, [r4]
   135bc:	cmp	r2, r3
   135c0:	bne	1363c <tcgetattr@plt+0x2208>
   135c4:	add	sp, sp, #16
   135c8:	pop	{r4, r5, r6, pc}
   135cc:	cmp	r5, #0
   135d0:	beq	135ec <tcgetattr@plt+0x21b8>
   135d4:	ldr	r0, [pc, #112]	; 1364c <tcgetattr@plt+0x2218>
   135d8:	ldrh	r1, [sp, #4]
   135dc:	add	r0, pc, r0
   135e0:	ldrh	r2, [sp, #6]
   135e4:	bl	13138 <tcgetattr@plt+0x1d04>
   135e8:	b	135b4 <tcgetattr@plt+0x2180>
   135ec:	ldr	r0, [pc, #92]	; 13650 <tcgetattr@plt+0x221c>
   135f0:	ldrh	r1, [sp, #4]
   135f4:	add	r0, pc, r0
   135f8:	ldrh	r2, [sp, #6]
   135fc:	bl	13138 <tcgetattr@plt+0x1d04>
   13600:	ldr	r3, [pc, #76]	; 13654 <tcgetattr@plt+0x2220>
   13604:	add	r3, pc, r3
   13608:	str	r5, [r3]
   1360c:	b	135b4 <tcgetattr@plt+0x2180>
   13610:	ldr	r1, [pc, #64]	; 13658 <tcgetattr@plt+0x2224>
   13614:	mov	r0, r5
   13618:	mov	r2, #5
   1361c:	add	r1, pc, r1
   13620:	bl	111b8 <dcgettext@plt>
   13624:	mov	r1, r5
   13628:	mov	r3, r6
   1362c:	mov	r2, r0
   13630:	mov	r0, #1
   13634:	bl	11278 <error@plt>
   13638:	b	135b4 <tcgetattr@plt+0x2180>
   1363c:	bl	111c4 <__stack_chk_fail@plt>
   13640:	andeq	r9, r1, r8, lsr #21
   13644:	andeq	r0, r0, r8, lsl r1
   13648:	andeq	r8, r0, r4, lsr r7
   1364c:	ldrdeq	r6, [r0], -r0
   13650:	strheq	r6, [r0], -r0
   13654:	muleq	r1, r8, fp
   13658:	andeq	r6, r0, r0, rrx
   1365c:	push	{r4, r5, r6, lr}
   13660:	mov	r4, r0
   13664:	ldr	r5, [pc, #452]	; 13830 <tcgetattr@plt+0x23fc>
   13668:	add	r5, pc, r5
   1366c:	add	r5, r5, #20
   13670:	mov	r0, r5
   13674:	bl	111d0 <cfgetispeed@plt>
   13678:	cmp	r0, #0
   1367c:	bne	1371c <tcgetattr@plt+0x22e8>
   13680:	cmp	r4, #0
   13684:	bne	136f4 <tcgetattr@plt+0x22c0>
   13688:	ldr	r5, [pc, #420]	; 13834 <tcgetattr@plt+0x2400>
   1368c:	add	r5, pc, r5
   13690:	ldr	r0, [pc, #416]	; 13838 <tcgetattr@plt+0x2404>
   13694:	add	r0, pc, r0
   13698:	add	r0, r0, #20
   1369c:	bl	11338 <cfgetospeed@plt>
   136a0:	cmp	r0, #0
   136a4:	beq	13700 <tcgetattr@plt+0x22cc>
   136a8:	ldr	r3, [pc, #396]	; 1383c <tcgetattr@plt+0x2408>
   136ac:	mov	r2, #0
   136b0:	add	r3, pc, r3
   136b4:	b	136c4 <tcgetattr@plt+0x2290>
   136b8:	ldr	r1, [r3, #4]
   136bc:	cmp	r0, r1
   136c0:	beq	13704 <tcgetattr@plt+0x22d0>
   136c4:	ldr	r1, [r3, #12]
   136c8:	add	r2, r2, #1
   136cc:	add	r3, r3, #12
   136d0:	cmp	r1, #0
   136d4:	bne	136b8 <tcgetattr@plt+0x2284>
   136d8:	mov	r0, r5
   136dc:	bl	13138 <tcgetattr@plt+0x1d04>
   136e0:	cmp	r4, #0
   136e4:	ldreq	r3, [pc, #340]	; 13840 <tcgetattr@plt+0x240c>
   136e8:	addeq	r3, pc, r3
   136ec:	streq	r4, [r3]
   136f0:	pop	{r4, r5, r6, pc}
   136f4:	ldr	r5, [pc, #328]	; 13844 <tcgetattr@plt+0x2410>
   136f8:	add	r5, pc, r5
   136fc:	b	13690 <tcgetattr@plt+0x225c>
   13700:	mov	r2, r0
   13704:	ldr	r3, [pc, #316]	; 13848 <tcgetattr@plt+0x2414>
   13708:	mov	r1, #12
   1370c:	add	r3, pc, r3
   13710:	mla	r2, r1, r2, r3
   13714:	ldr	r1, [r2, #8]
   13718:	b	136d8 <tcgetattr@plt+0x22a4>
   1371c:	mov	r0, r5
   13720:	bl	111d0 <cfgetispeed@plt>
   13724:	mov	r6, r0
   13728:	mov	r0, r5
   1372c:	bl	11338 <cfgetospeed@plt>
   13730:	cmp	r6, r0
   13734:	beq	13680 <tcgetattr@plt+0x224c>
   13738:	cmp	r4, #0
   1373c:	bne	137ec <tcgetattr@plt+0x23b8>
   13740:	ldr	r5, [pc, #260]	; 1384c <tcgetattr@plt+0x2418>
   13744:	add	r5, pc, r5
   13748:	ldr	r0, [pc, #256]	; 13850 <tcgetattr@plt+0x241c>
   1374c:	add	r0, pc, r0
   13750:	add	r0, r0, #20
   13754:	bl	111d0 <cfgetispeed@plt>
   13758:	cmp	r0, #0
   1375c:	beq	13814 <tcgetattr@plt+0x23e0>
   13760:	ldr	r3, [pc, #236]	; 13854 <tcgetattr@plt+0x2420>
   13764:	mov	r2, #0
   13768:	add	r3, pc, r3
   1376c:	b	1377c <tcgetattr@plt+0x2348>
   13770:	ldr	r1, [r3, #4]
   13774:	cmp	r0, r1
   13778:	beq	13818 <tcgetattr@plt+0x23e4>
   1377c:	ldr	r1, [r3, #12]
   13780:	add	r2, r2, #1
   13784:	add	r3, r3, #12
   13788:	cmp	r1, #0
   1378c:	bne	13770 <tcgetattr@plt+0x233c>
   13790:	mov	r6, r1
   13794:	ldr	r0, [pc, #188]	; 13858 <tcgetattr@plt+0x2424>
   13798:	add	r0, pc, r0
   1379c:	add	r0, r0, #20
   137a0:	bl	11338 <cfgetospeed@plt>
   137a4:	cmp	r0, #0
   137a8:	beq	137f8 <tcgetattr@plt+0x23c4>
   137ac:	ldr	r3, [pc, #168]	; 1385c <tcgetattr@plt+0x2428>
   137b0:	mov	ip, #0
   137b4:	add	r3, pc, r3
   137b8:	b	137c8 <tcgetattr@plt+0x2394>
   137bc:	ldr	r2, [r3, #4]
   137c0:	cmp	r0, r2
   137c4:	beq	137fc <tcgetattr@plt+0x23c8>
   137c8:	ldr	r2, [r3, #12]
   137cc:	add	ip, ip, #1
   137d0:	add	r3, r3, #12
   137d4:	cmp	r2, #0
   137d8:	bne	137bc <tcgetattr@plt+0x2388>
   137dc:	mov	r0, r5
   137e0:	mov	r1, r6
   137e4:	bl	13138 <tcgetattr@plt+0x1d04>
   137e8:	b	136e0 <tcgetattr@plt+0x22ac>
   137ec:	ldr	r5, [pc, #108]	; 13860 <tcgetattr@plt+0x242c>
   137f0:	add	r5, pc, r5
   137f4:	b	13748 <tcgetattr@plt+0x2314>
   137f8:	mov	ip, r0
   137fc:	ldr	r3, [pc, #96]	; 13864 <tcgetattr@plt+0x2430>
   13800:	mov	r2, #12
   13804:	add	r3, pc, r3
   13808:	mla	ip, r2, ip, r3
   1380c:	ldr	r2, [ip, #8]
   13810:	b	137dc <tcgetattr@plt+0x23a8>
   13814:	mov	r2, r0
   13818:	ldr	r3, [pc, #72]	; 13868 <tcgetattr@plt+0x2434>
   1381c:	mov	r1, #12
   13820:	add	r3, pc, r3
   13824:	mla	r2, r1, r2, r3
   13828:	ldr	r6, [r2, #8]
   1382c:	b	13794 <tcgetattr@plt+0x2360>
   13830:	andeq	r9, r1, r4, lsr fp
   13834:	andeq	r6, r0, ip, asr #32
   13838:	andeq	r9, r1, r8, lsl #22
   1383c:	andeq	r8, r1, r0, ror lr
   13840:			; <UNDEFINED> instruction: 0x00019ab4
   13844:	andeq	r5, r0, ip, asr #31
   13848:	andeq	r8, r1, r4, lsl lr
   1384c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   13850:	andeq	r9, r1, r0, asr sl
   13854:			; <UNDEFINED> instruction: 0x00018db8
   13858:	andeq	r9, r1, r4, lsl #20
   1385c:	andeq	r8, r1, ip, ror #26
   13860:	strdeq	r5, [r0], -r0
   13864:	andeq	r8, r1, ip, lsl sp
   13868:	andeq	r8, r1, r0, lsl #26
   1386c:	push	{r4, r5, r6, lr}
   13870:	subs	r4, r0, #0
   13874:	ldr	r5, [pc, #1280]	; 13d7c <tcgetattr@plt+0x2948>
   13878:	sub	sp, sp, #8
   1387c:	add	r5, pc, r5
   13880:	beq	138c8 <tcgetattr@plt+0x2494>
   13884:	ldr	r3, [pc, #1268]	; 13d80 <tcgetattr@plt+0x294c>
   13888:	mov	r2, #5
   1388c:	ldr	r1, [pc, #1264]	; 13d84 <tcgetattr@plt+0x2950>
   13890:	mov	r0, #0
   13894:	ldr	r3, [r5, r3]
   13898:	add	r1, pc, r1
   1389c:	ldr	r6, [r3]
   138a0:	bl	111b8 <dcgettext@plt>
   138a4:	ldr	r3, [pc, #1244]	; 13d88 <tcgetattr@plt+0x2954>
   138a8:	mov	r1, #1
   138ac:	ldr	r3, [r5, r3]
   138b0:	ldr	r3, [r3]
   138b4:	mov	r2, r0
   138b8:	mov	r0, r6
   138bc:	bl	1138c <__fprintf_chk@plt>
   138c0:	mov	r0, r4
   138c4:	bl	112e4 <exit@plt>
   138c8:	ldr	r1, [pc, #1212]	; 13d8c <tcgetattr@plt+0x2958>
   138cc:	mov	r2, #5
   138d0:	add	r1, pc, r1
   138d4:	bl	111b8 <dcgettext@plt>
   138d8:	ldr	r3, [pc, #1192]	; 13d88 <tcgetattr@plt+0x2954>
   138dc:	ldr	r6, [r5, r3]
   138e0:	ldr	r3, [r6]
   138e4:	mov	r2, r3
   138e8:	str	r3, [sp]
   138ec:	mov	r1, r0
   138f0:	mov	r0, #1
   138f4:	bl	11374 <__printf_chk@plt>
   138f8:	ldr	r1, [pc, #1168]	; 13d90 <tcgetattr@plt+0x295c>
   138fc:	mov	r2, #5
   13900:	mov	r0, r4
   13904:	add	r1, pc, r1
   13908:	bl	111b8 <dcgettext@plt>
   1390c:	ldr	r3, [pc, #1152]	; 13d94 <tcgetattr@plt+0x2960>
   13910:	ldr	r5, [r5, r3]
   13914:	ldr	r1, [r5]
   13918:	bl	11140 <fputs_unlocked@plt>
   1391c:	ldr	r1, [pc, #1140]	; 13d98 <tcgetattr@plt+0x2964>
   13920:	mov	r2, #5
   13924:	mov	r0, r4
   13928:	add	r1, pc, r1
   1392c:	bl	111b8 <dcgettext@plt>
   13930:	ldr	r1, [r5]
   13934:	bl	11140 <fputs_unlocked@plt>
   13938:	ldr	r1, [pc, #1116]	; 13d9c <tcgetattr@plt+0x2968>
   1393c:	mov	r2, #5
   13940:	mov	r0, r4
   13944:	add	r1, pc, r1
   13948:	bl	111b8 <dcgettext@plt>
   1394c:	ldr	r1, [r5]
   13950:	bl	11140 <fputs_unlocked@plt>
   13954:	ldr	r1, [pc, #1092]	; 13da0 <tcgetattr@plt+0x296c>
   13958:	mov	r2, #5
   1395c:	mov	r0, r4
   13960:	add	r1, pc, r1
   13964:	bl	111b8 <dcgettext@plt>
   13968:	ldr	r1, [r5]
   1396c:	bl	11140 <fputs_unlocked@plt>
   13970:	ldr	r1, [pc, #1068]	; 13da4 <tcgetattr@plt+0x2970>
   13974:	mov	r2, #5
   13978:	mov	r0, r4
   1397c:	add	r1, pc, r1
   13980:	bl	111b8 <dcgettext@plt>
   13984:	ldr	r1, [r5]
   13988:	bl	11140 <fputs_unlocked@plt>
   1398c:	ldr	r1, [pc, #1044]	; 13da8 <tcgetattr@plt+0x2974>
   13990:	mov	r2, #5
   13994:	mov	r0, r4
   13998:	add	r1, pc, r1
   1399c:	bl	111b8 <dcgettext@plt>
   139a0:	ldr	r1, [r5]
   139a4:	bl	11140 <fputs_unlocked@plt>
   139a8:	ldr	r1, [pc, #1020]	; 13dac <tcgetattr@plt+0x2978>
   139ac:	mov	r2, #5
   139b0:	mov	r0, r4
   139b4:	add	r1, pc, r1
   139b8:	bl	111b8 <dcgettext@plt>
   139bc:	ldr	r1, [r5]
   139c0:	bl	11140 <fputs_unlocked@plt>
   139c4:	ldr	r1, [pc, #996]	; 13db0 <tcgetattr@plt+0x297c>
   139c8:	mov	r2, #5
   139cc:	mov	r0, r4
   139d0:	add	r1, pc, r1
   139d4:	bl	111b8 <dcgettext@plt>
   139d8:	ldr	r1, [r5]
   139dc:	bl	11140 <fputs_unlocked@plt>
   139e0:	ldr	r1, [pc, #972]	; 13db4 <tcgetattr@plt+0x2980>
   139e4:	mov	r2, #5
   139e8:	mov	r0, r4
   139ec:	add	r1, pc, r1
   139f0:	bl	111b8 <dcgettext@plt>
   139f4:	ldr	r1, [r5]
   139f8:	bl	11140 <fputs_unlocked@plt>
   139fc:	ldr	r1, [pc, #948]	; 13db8 <tcgetattr@plt+0x2984>
   13a00:	mov	r2, #5
   13a04:	mov	r0, r4
   13a08:	add	r1, pc, r1
   13a0c:	bl	111b8 <dcgettext@plt>
   13a10:	ldr	r1, [r5]
   13a14:	bl	11140 <fputs_unlocked@plt>
   13a18:	ldr	r1, [pc, #924]	; 13dbc <tcgetattr@plt+0x2988>
   13a1c:	mov	r2, #5
   13a20:	mov	r0, r4
   13a24:	add	r1, pc, r1
   13a28:	bl	111b8 <dcgettext@plt>
   13a2c:	ldr	r1, [r5]
   13a30:	bl	11140 <fputs_unlocked@plt>
   13a34:	ldr	r1, [pc, #900]	; 13dc0 <tcgetattr@plt+0x298c>
   13a38:	mov	r2, #5
   13a3c:	mov	r0, r4
   13a40:	add	r1, pc, r1
   13a44:	bl	111b8 <dcgettext@plt>
   13a48:	ldr	r1, [r5]
   13a4c:	bl	11140 <fputs_unlocked@plt>
   13a50:	ldr	r1, [pc, #876]	; 13dc4 <tcgetattr@plt+0x2990>
   13a54:	mov	r2, #5
   13a58:	mov	r0, r4
   13a5c:	add	r1, pc, r1
   13a60:	bl	111b8 <dcgettext@plt>
   13a64:	ldr	r1, [r5]
   13a68:	bl	11140 <fputs_unlocked@plt>
   13a6c:	ldr	r1, [pc, #852]	; 13dc8 <tcgetattr@plt+0x2994>
   13a70:	mov	r2, #5
   13a74:	mov	r0, r4
   13a78:	add	r1, pc, r1
   13a7c:	bl	111b8 <dcgettext@plt>
   13a80:	ldr	r1, [r5]
   13a84:	bl	11140 <fputs_unlocked@plt>
   13a88:	ldr	r1, [pc, #828]	; 13dcc <tcgetattr@plt+0x2998>
   13a8c:	mov	r2, #5
   13a90:	mov	r0, r4
   13a94:	add	r1, pc, r1
   13a98:	bl	111b8 <dcgettext@plt>
   13a9c:	ldr	r1, [r5]
   13aa0:	bl	11140 <fputs_unlocked@plt>
   13aa4:	ldr	r1, [pc, #804]	; 13dd0 <tcgetattr@plt+0x299c>
   13aa8:	mov	r2, #5
   13aac:	mov	r0, r4
   13ab0:	add	r1, pc, r1
   13ab4:	bl	111b8 <dcgettext@plt>
   13ab8:	ldr	r1, [r5]
   13abc:	bl	11140 <fputs_unlocked@plt>
   13ac0:	ldr	r1, [pc, #780]	; 13dd4 <tcgetattr@plt+0x29a0>
   13ac4:	mov	r2, #5
   13ac8:	mov	r0, r4
   13acc:	add	r1, pc, r1
   13ad0:	bl	111b8 <dcgettext@plt>
   13ad4:	ldr	r1, [r5]
   13ad8:	bl	11140 <fputs_unlocked@plt>
   13adc:	ldr	r1, [pc, #756]	; 13dd8 <tcgetattr@plt+0x29a4>
   13ae0:	mov	r2, #5
   13ae4:	mov	r0, r4
   13ae8:	add	r1, pc, r1
   13aec:	bl	111b8 <dcgettext@plt>
   13af0:	ldr	r1, [r5]
   13af4:	bl	11140 <fputs_unlocked@plt>
   13af8:	ldr	r1, [pc, #732]	; 13ddc <tcgetattr@plt+0x29a8>
   13afc:	mov	r2, #5
   13b00:	mov	r0, r4
   13b04:	add	r1, pc, r1
   13b08:	bl	111b8 <dcgettext@plt>
   13b0c:	ldr	r1, [r5]
   13b10:	bl	11140 <fputs_unlocked@plt>
   13b14:	ldr	r1, [pc, #708]	; 13de0 <tcgetattr@plt+0x29ac>
   13b18:	mov	r2, #5
   13b1c:	mov	r0, r4
   13b20:	add	r1, pc, r1
   13b24:	bl	111b8 <dcgettext@plt>
   13b28:	ldr	r1, [r5]
   13b2c:	bl	11140 <fputs_unlocked@plt>
   13b30:	ldr	r1, [pc, #684]	; 13de4 <tcgetattr@plt+0x29b0>
   13b34:	mov	r2, #5
   13b38:	mov	r0, r4
   13b3c:	add	r1, pc, r1
   13b40:	bl	111b8 <dcgettext@plt>
   13b44:	ldr	r1, [r5]
   13b48:	bl	11140 <fputs_unlocked@plt>
   13b4c:	ldr	r1, [pc, #660]	; 13de8 <tcgetattr@plt+0x29b4>
   13b50:	mov	r2, #5
   13b54:	mov	r0, r4
   13b58:	add	r1, pc, r1
   13b5c:	bl	111b8 <dcgettext@plt>
   13b60:	ldr	r1, [r5]
   13b64:	bl	11140 <fputs_unlocked@plt>
   13b68:	ldr	r1, [pc, #636]	; 13dec <tcgetattr@plt+0x29b8>
   13b6c:	mov	r2, #5
   13b70:	mov	r0, r4
   13b74:	add	r1, pc, r1
   13b78:	bl	111b8 <dcgettext@plt>
   13b7c:	ldr	r1, [r5]
   13b80:	bl	11140 <fputs_unlocked@plt>
   13b84:	ldr	r1, [pc, #612]	; 13df0 <tcgetattr@plt+0x29bc>
   13b88:	mov	r2, #5
   13b8c:	mov	r0, r4
   13b90:	add	r1, pc, r1
   13b94:	bl	111b8 <dcgettext@plt>
   13b98:	ldr	r1, [r5]
   13b9c:	bl	11140 <fputs_unlocked@plt>
   13ba0:	ldr	r1, [pc, #588]	; 13df4 <tcgetattr@plt+0x29c0>
   13ba4:	mov	r2, #5
   13ba8:	mov	r0, r4
   13bac:	add	r1, pc, r1
   13bb0:	bl	111b8 <dcgettext@plt>
   13bb4:	ldr	r1, [r5]
   13bb8:	bl	11140 <fputs_unlocked@plt>
   13bbc:	ldr	r1, [pc, #564]	; 13df8 <tcgetattr@plt+0x29c4>
   13bc0:	mov	r2, #5
   13bc4:	mov	r0, r4
   13bc8:	add	r1, pc, r1
   13bcc:	bl	111b8 <dcgettext@plt>
   13bd0:	ldr	r1, [r5]
   13bd4:	bl	11140 <fputs_unlocked@plt>
   13bd8:	ldr	r1, [pc, #540]	; 13dfc <tcgetattr@plt+0x29c8>
   13bdc:	mov	r2, #5
   13be0:	mov	r0, r4
   13be4:	add	r1, pc, r1
   13be8:	bl	111b8 <dcgettext@plt>
   13bec:	ldr	r1, [r5]
   13bf0:	bl	11140 <fputs_unlocked@plt>
   13bf4:	ldr	r1, [pc, #516]	; 13e00 <tcgetattr@plt+0x29cc>
   13bf8:	mov	r2, #5
   13bfc:	mov	r0, r4
   13c00:	add	r1, pc, r1
   13c04:	bl	111b8 <dcgettext@plt>
   13c08:	ldr	r1, [r5]
   13c0c:	bl	11140 <fputs_unlocked@plt>
   13c10:	ldr	r1, [pc, #492]	; 13e04 <tcgetattr@plt+0x29d0>
   13c14:	mov	r2, #5
   13c18:	mov	r0, r4
   13c1c:	add	r1, pc, r1
   13c20:	bl	111b8 <dcgettext@plt>
   13c24:	ldr	r1, [r5]
   13c28:	bl	11140 <fputs_unlocked@plt>
   13c2c:	ldr	r1, [pc, #468]	; 13e08 <tcgetattr@plt+0x29d4>
   13c30:	mov	r2, #5
   13c34:	mov	r0, r4
   13c38:	add	r1, pc, r1
   13c3c:	bl	111b8 <dcgettext@plt>
   13c40:	ldr	r1, [r5]
   13c44:	bl	11140 <fputs_unlocked@plt>
   13c48:	ldr	r1, [pc, #444]	; 13e0c <tcgetattr@plt+0x29d8>
   13c4c:	mov	r2, #5
   13c50:	mov	r0, r4
   13c54:	add	r1, pc, r1
   13c58:	bl	111b8 <dcgettext@plt>
   13c5c:	ldr	r1, [r5]
   13c60:	bl	11140 <fputs_unlocked@plt>
   13c64:	ldr	r1, [pc, #420]	; 13e10 <tcgetattr@plt+0x29dc>
   13c68:	mov	r2, #5
   13c6c:	mov	r0, r4
   13c70:	add	r1, pc, r1
   13c74:	bl	111b8 <dcgettext@plt>
   13c78:	ldr	r1, [r5]
   13c7c:	bl	11140 <fputs_unlocked@plt>
   13c80:	ldr	r1, [pc, #396]	; 13e14 <tcgetattr@plt+0x29e0>
   13c84:	mov	r2, #5
   13c88:	mov	r0, r4
   13c8c:	add	r1, pc, r1
   13c90:	bl	111b8 <dcgettext@plt>
   13c94:	ldr	r1, [r5]
   13c98:	bl	11140 <fputs_unlocked@plt>
   13c9c:	ldr	r1, [pc, #372]	; 13e18 <tcgetattr@plt+0x29e4>
   13ca0:	mov	r2, #5
   13ca4:	mov	r0, r4
   13ca8:	add	r1, pc, r1
   13cac:	bl	111b8 <dcgettext@plt>
   13cb0:	ldr	r1, [r5]
   13cb4:	bl	11140 <fputs_unlocked@plt>
   13cb8:	ldr	r1, [pc, #348]	; 13e1c <tcgetattr@plt+0x29e8>
   13cbc:	mov	r2, #5
   13cc0:	mov	r0, r4
   13cc4:	add	r1, pc, r1
   13cc8:	bl	111b8 <dcgettext@plt>
   13ccc:	ldr	r2, [pc, #332]	; 13e20 <tcgetattr@plt+0x29ec>
   13cd0:	ldr	r3, [pc, #332]	; 13e24 <tcgetattr@plt+0x29f0>
   13cd4:	add	r2, pc, r2
   13cd8:	add	r3, pc, r3
   13cdc:	mov	r1, r0
   13ce0:	mov	r0, #1
   13ce4:	bl	11374 <__printf_chk@plt>
   13ce8:	mov	r0, #5
   13cec:	mov	r1, r4
   13cf0:	bl	113c8 <setlocale@plt>
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d14 <tcgetattr@plt+0x28e0>
   13cfc:	ldr	r1, [pc, #292]	; 13e28 <tcgetattr@plt+0x29f4>
   13d00:	mov	r2, #3
   13d04:	add	r1, pc, r1
   13d08:	bl	113f8 <strncmp@plt>
   13d0c:	cmp	r0, #0
   13d10:	bne	13d48 <tcgetattr@plt+0x2914>
   13d14:	ldr	r1, [pc, #272]	; 13e2c <tcgetattr@plt+0x29f8>
   13d18:	mov	r2, #5
   13d1c:	mov	r0, #0
   13d20:	add	r1, pc, r1
   13d24:	bl	111b8 <dcgettext@plt>
   13d28:	mov	r5, r0
   13d2c:	ldr	r0, [r6]
   13d30:	bl	14034 <close_stdout@@Base+0x118>
   13d34:	mov	r1, r5
   13d38:	mov	r2, r0
   13d3c:	mov	r0, #1
   13d40:	bl	11374 <__printf_chk@plt>
   13d44:	b	138c0 <tcgetattr@plt+0x248c>
   13d48:	ldr	r1, [pc, #224]	; 13e30 <tcgetattr@plt+0x29fc>
   13d4c:	mov	r2, #5
   13d50:	mov	r0, r4
   13d54:	add	r1, pc, r1
   13d58:	bl	111b8 <dcgettext@plt>
   13d5c:	mov	r5, r0
   13d60:	ldr	r0, [r6]
   13d64:	bl	14034 <close_stdout@@Base+0x118>
   13d68:	mov	r1, r5
   13d6c:	mov	r2, r0
   13d70:	mov	r0, #1
   13d74:	bl	11374 <__printf_chk@plt>
   13d78:	b	13d14 <tcgetattr@plt+0x28e0>
   13d7c:	andeq	r9, r1, ip, ror r7
   13d80:	andeq	r0, r0, r4, lsr #2
   13d84:	andeq	r5, r0, ip, ror #28
   13d88:	andeq	r0, r0, r0, asr #2
   13d8c:	andeq	r5, r0, ip, asr lr
   13d90:	andeq	r5, r0, r0, asr #29
   13d94:	andeq	r0, r0, r4, lsr r1
   13d98:	andeq	r5, r0, r8, asr #29
   13d9c:	strdeq	r5, [r0], -r8
   13da0:			; <UNDEFINED> instruction: 0x00005fb4
   13da4:	andeq	r5, r0, r8, asr #31
   13da8:	andeq	r5, r0, r4, ror #31
   13dac:	andeq	r6, r0, r8, asr r0
   13db0:	andeq	r6, r0, ip, lsl #2
   13db4:	andeq	r6, r0, r8, asr #3
   13db8:	andeq	r6, r0, ip, lsl #5
   13dbc:	andeq	r6, r0, r8, asr #6
   13dc0:	andeq	r6, r0, r0, ror #7
   13dc4:	muleq	r0, r0, r4
   13dc8:	andeq	r6, r0, r4, ror r5
   13dcc:	andeq	r6, r0, ip, asr r6
   13dd0:	andeq	r6, r0, r8, lsr #15
   13dd4:	andeq	r6, r0, r8, asr r8
   13dd8:	andeq	r6, r0, ip, asr r9
   13ddc:	andeq	r6, r0, ip, ror r9
   13de0:			; <UNDEFINED> instruction: 0x00006abc
   13de4:	andeq	r6, r0, r8, lsl #23
   13de8:	andeq	r6, r0, ip, ror #25
   13dec:	andeq	r6, r0, r4, ror #27
   13df0:			; <UNDEFINED> instruction: 0x00006eb0
   13df4:	andeq	r6, r0, ip, ror pc
   13df8:	muleq	r0, r0, r0
   13dfc:	andeq	r7, r0, r0, asr #3
   13e00:	andeq	r7, r0, r0, lsr #4
   13e04:	ldrdeq	r7, [r0], -ip
   13e08:			; <UNDEFINED> instruction: 0x000073b4
   13e0c:			; <UNDEFINED> instruction: 0x000074b8
   13e10:	andeq	r7, r0, r8, ror #10
   13e14:	andeq	r7, r0, r0, asr #12
   13e18:			; <UNDEFINED> instruction: 0x000077bc
   13e1c:			; <UNDEFINED> instruction: 0x000078b8
   13e20:	andeq	r7, r0, r0, asr #17
   13e24:	andeq	r7, r0, ip, asr #17
   13e28:	andeq	r7, r0, r8, asr #17
   13e2c:	strdeq	r7, [r0], -r8
   13e30:	andeq	r7, r0, ip, ror r8
   13e34:	ldr	ip, [pc, #168]	; 13ee4 <tcgetattr@plt+0x2ab0>
   13e38:	push	{r4, r5, r6, lr}
   13e3c:	add	ip, pc, ip
   13e40:	ldr	r4, [pc, #160]	; 13ee8 <tcgetattr@plt+0x2ab4>
   13e44:	sub	sp, sp, #16
   13e48:	ldr	lr, [pc, #156]	; 13eec <tcgetattr@plt+0x2ab8>
   13e4c:	mov	r5, r1
   13e50:	mov	r1, #0
   13e54:	add	r3, sp, #8
   13e58:	ldr	r4, [ip, r4]
   13e5c:	add	lr, pc, lr
   13e60:	str	lr, [sp]
   13e64:	mov	r2, r1
   13e68:	mov	r6, r0
   13e6c:	ldr	ip, [r4]
   13e70:	str	ip, [sp, #12]
   13e74:	bl	167ec <close_stdout@@Base+0x28d0>
   13e78:	cmp	r0, #0
   13e7c:	bne	13ea4 <tcgetattr@plt+0x2a70>
   13e80:	ldr	r0, [sp, #8]
   13e84:	cmp	r0, r5
   13e88:	bhi	13ea4 <tcgetattr@plt+0x2a70>
   13e8c:	ldr	r2, [sp, #12]
   13e90:	ldr	r3, [r4]
   13e94:	cmp	r2, r3
   13e98:	bne	13ee0 <tcgetattr@plt+0x2aac>
   13e9c:	add	sp, sp, #16
   13ea0:	pop	{r4, r5, r6, pc}
   13ea4:	ldr	r1, [pc, #68]	; 13ef0 <tcgetattr@plt+0x2abc>
   13ea8:	mov	r2, #5
   13eac:	mov	r0, #0
   13eb0:	add	r1, pc, r1
   13eb4:	bl	111b8 <dcgettext@plt>
   13eb8:	mov	r4, r0
   13ebc:	mov	r0, r6
   13ec0:	bl	15988 <close_stdout@@Base+0x1a6c>
   13ec4:	mov	r2, r4
   13ec8:	mov	r3, r0
   13ecc:	mov	r0, #0
   13ed0:	mov	r1, r0
   13ed4:	bl	11278 <error@plt>
   13ed8:	mov	r0, #1
   13edc:	bl	1386c <tcgetattr@plt+0x2438>
   13ee0:	bl	111c4 <__stack_chk_fail@plt>
   13ee4:			; <UNDEFINED> instruction: 0x000191bc
   13ee8:	andeq	r0, r0, r8, lsl r1
   13eec:	andeq	r7, r0, r0, lsl #16
   13ef0:			; <UNDEFINED> instruction: 0x000077b0
   13ef4:	ldr	r3, [pc, #8]	; 13f04 <tcgetattr@plt+0x2ad0>
   13ef8:	add	r3, pc, r3
   13efc:	str	r0, [r3]
   13f00:	bx	lr
   13f04:	andeq	r9, r1, r0, lsr r3
   13f08:	ldr	r3, [pc, #8]	; 13f18 <tcgetattr@plt+0x2ae4>
   13f0c:	add	r3, pc, r3
   13f10:	strb	r0, [r3, #4]
   13f14:	bx	lr
   13f18:	andeq	r9, r1, ip, lsl r3

00013f1c <close_stdout@@Base>:
   13f1c:	push	{r4, r5, r6, r7, lr}
   13f20:	sub	sp, sp, #12
   13f24:	ldr	r4, [pc, #228]	; 14010 <close_stdout@@Base+0xf4>
   13f28:	ldr	r3, [pc, #228]	; 14014 <close_stdout@@Base+0xf8>
   13f2c:	add	r4, pc, r4
   13f30:	ldr	r3, [r4, r3]
   13f34:	ldr	r0, [r3]
   13f38:	bl	16f30 <close_stdout@@Base+0x3014>
   13f3c:	cmp	r0, #0
   13f40:	beq	13f68 <close_stdout@@Base+0x4c>
   13f44:	ldr	r3, [pc, #204]	; 14018 <close_stdout@@Base+0xfc>
   13f48:	add	r3, pc, r3
   13f4c:	ldrb	r3, [r3, #4]
   13f50:	cmp	r3, #0
   13f54:	beq	13f88 <close_stdout@@Base+0x6c>
   13f58:	bl	11344 <__errno_location@plt>
   13f5c:	ldr	r3, [r0]
   13f60:	cmp	r3, #32
   13f64:	bne	13f88 <close_stdout@@Base+0x6c>
   13f68:	ldr	r3, [pc, #172]	; 1401c <close_stdout@@Base+0x100>
   13f6c:	ldr	r3, [r4, r3]
   13f70:	ldr	r0, [r3]
   13f74:	bl	16f30 <close_stdout@@Base+0x3014>
   13f78:	cmp	r0, #0
   13f7c:	bne	13fdc <close_stdout@@Base+0xc0>
   13f80:	add	sp, sp, #12
   13f84:	pop	{r4, r5, r6, r7, pc}
   13f88:	ldr	r1, [pc, #144]	; 14020 <close_stdout@@Base+0x104>
   13f8c:	mov	r0, #0
   13f90:	mov	r2, #5
   13f94:	add	r1, pc, r1
   13f98:	bl	111b8 <dcgettext@plt>
   13f9c:	ldr	r3, [pc, #128]	; 14024 <close_stdout@@Base+0x108>
   13fa0:	ldr	r5, [pc, r3]
   13fa4:	cmp	r5, #0
   13fa8:	mov	r6, r0
   13fac:	beq	13fec <close_stdout@@Base+0xd0>
   13fb0:	bl	11344 <__errno_location@plt>
   13fb4:	ldr	r7, [r0]
   13fb8:	mov	r0, r5
   13fbc:	bl	15834 <close_stdout@@Base+0x1918>
   13fc0:	ldr	r2, [pc, #96]	; 14028 <close_stdout@@Base+0x10c>
   13fc4:	str	r6, [sp]
   13fc8:	mov	r1, r7
   13fcc:	add	r2, pc, r2
   13fd0:	mov	r3, r0
   13fd4:	mov	r0, #0
   13fd8:	bl	11278 <error@plt>
   13fdc:	ldr	r3, [pc, #72]	; 1402c <close_stdout@@Base+0x110>
   13fe0:	ldr	r3, [r4, r3]
   13fe4:	ldr	r0, [r3]
   13fe8:	bl	11188 <_exit@plt>
   13fec:	bl	11344 <__errno_location@plt>
   13ff0:	ldr	r2, [pc, #56]	; 14030 <close_stdout@@Base+0x114>
   13ff4:	add	r2, pc, r2
   13ff8:	mov	r3, r0
   13ffc:	mov	r0, r5
   14000:	ldr	r1, [r3]
   14004:	mov	r3, r6
   14008:	bl	11278 <error@plt>
   1400c:	b	13fdc <close_stdout@@Base+0xc0>
   14010:	andeq	r9, r1, ip, asr #1
   14014:	andeq	r0, r0, r4, lsr r1
   14018:	andeq	r9, r1, r0, ror #5
   1401c:	andeq	r0, r0, r4, lsr #2
   14020:	andeq	r7, r0, r4, lsr sp
   14024:	andeq	r9, r1, r8, lsl #5
   14028:	andeq	r7, r0, r8, lsl #26
   1402c:	andeq	r0, r0, r8, lsr r1
   14030:	andeq	r7, r0, r4, ror #25
   14034:	ldrb	r3, [r0]
   14038:	cmp	r3, #47	; 0x2f
   1403c:	bne	14058 <close_stdout@@Base+0x13c>
   14040:	add	r2, r0, #1
   14044:	mov	r0, r2
   14048:	add	r2, r2, #1
   1404c:	ldrb	r3, [r0]
   14050:	cmp	r3, #47	; 0x2f
   14054:	beq	14044 <close_stdout@@Base+0x128>
   14058:	cmp	r3, #0
   1405c:	bxeq	lr
   14060:	mov	r2, r0
   14064:	mov	r1, #0
   14068:	cmp	r3, #47	; 0x2f
   1406c:	moveq	r1, #1
   14070:	beq	14080 <close_stdout@@Base+0x164>
   14074:	cmp	r1, #0
   14078:	movne	r0, r2
   1407c:	movne	r1, #0
   14080:	ldrb	r3, [r2, #1]!
   14084:	cmp	r3, #0
   14088:	bne	14068 <close_stdout@@Base+0x14c>
   1408c:	bx	lr
   14090:	push	{r4, lr}
   14094:	mov	r4, r0
   14098:	bl	112fc <strlen@plt>
   1409c:	cmp	r0, #1
   140a0:	popls	{r4, pc}
   140a4:	sub	r3, r0, #1
   140a8:	ldrb	r2, [r4, r3]
   140ac:	cmp	r2, #47	; 0x2f
   140b0:	popne	{r4, pc}
   140b4:	mov	r0, r3
   140b8:	cmp	r0, #1
   140bc:	sub	r3, r3, #1
   140c0:	beq	140d4 <close_stdout@@Base+0x1b8>
   140c4:	ldrb	r2, [r4, r3]
   140c8:	cmp	r2, #47	; 0x2f
   140cc:	popne	{r4, pc}
   140d0:	b	140b4 <close_stdout@@Base+0x198>
   140d4:	pop	{r4, pc}
   140d8:	push	{r3, r4, r5, r6, r7, lr}
   140dc:	mov	r5, r0
   140e0:	mov	r0, r1
   140e4:	mov	r1, r2
   140e8:	mov	r2, r3
   140ec:	bl	11284 <open64@plt>
   140f0:	subs	r2, r5, r0
   140f4:	mov	r4, r0
   140f8:	rsbs	r3, r2, #0
   140fc:	adcs	r3, r3, r2
   14100:	orrs	r3, r3, r0, lsr #31
   14104:	bne	14130 <close_stdout@@Base+0x214>
   14108:	mov	r1, r5
   1410c:	bl	111dc <dup2@plt>
   14110:	mov	r7, r0
   14114:	bl	11344 <__errno_location@plt>
   14118:	ldr	r6, [r0]
   1411c:	mov	r5, r0
   14120:	mov	r0, r4
   14124:	mov	r4, r7
   14128:	bl	11410 <close@plt>
   1412c:	str	r6, [r5]
   14130:	mov	r0, r4
   14134:	pop	{r3, r4, r5, r6, r7, pc}
   14138:	push	{r3, r4, r5, r6, r7, lr}
   1413c:	subs	r4, r0, #0
   14140:	ldr	r5, [pc, #172]	; 141f4 <close_stdout@@Base+0x2d8>
   14144:	add	r5, pc, r5
   14148:	beq	141d0 <close_stdout@@Base+0x2b4>
   1414c:	mov	r1, #47	; 0x2f
   14150:	bl	113d4 <strrchr@plt>
   14154:	subs	r6, r0, #0
   14158:	beq	141b4 <close_stdout@@Base+0x298>
   1415c:	add	r7, r6, #1
   14160:	rsb	r3, r4, r7
   14164:	cmp	r3, #6
   14168:	ble	141b4 <close_stdout@@Base+0x298>
   1416c:	ldr	r1, [pc, #132]	; 141f8 <close_stdout@@Base+0x2dc>
   14170:	sub	r0, r6, #6
   14174:	mov	r2, #7
   14178:	add	r1, pc, r1
   1417c:	bl	113f8 <strncmp@plt>
   14180:	cmp	r0, #0
   14184:	bne	141b4 <close_stdout@@Base+0x298>
   14188:	ldr	r1, [pc, #108]	; 141fc <close_stdout@@Base+0x2e0>
   1418c:	mov	r0, r7
   14190:	mov	r2, #3
   14194:	add	r1, pc, r1
   14198:	bl	113f8 <strncmp@plt>
   1419c:	cmp	r0, #0
   141a0:	movne	r4, r7
   141a4:	ldreq	r3, [pc, #84]	; 14200 <close_stdout@@Base+0x2e4>
   141a8:	addeq	r4, r6, #4
   141ac:	ldreq	r3, [r5, r3]
   141b0:	streq	r4, [r3]
   141b4:	ldr	r2, [pc, #72]	; 14204 <close_stdout@@Base+0x2e8>
   141b8:	ldr	r3, [pc, #72]	; 14208 <close_stdout@@Base+0x2ec>
   141bc:	ldr	r2, [r5, r2]
   141c0:	str	r4, [r2]
   141c4:	ldr	r3, [r5, r3]
   141c8:	str	r4, [r3]
   141cc:	pop	{r3, r4, r5, r6, r7, pc}
   141d0:	ldr	r3, [pc, #52]	; 1420c <close_stdout@@Base+0x2f0>
   141d4:	mov	r1, #1
   141d8:	ldr	r0, [pc, #48]	; 14210 <close_stdout@@Base+0x2f4>
   141dc:	mov	r2, #55	; 0x37
   141e0:	ldr	r3, [r5, r3]
   141e4:	add	r0, pc, r0
   141e8:	ldr	r3, [r3]
   141ec:	bl	11218 <fwrite@plt>
   141f0:	bl	11404 <abort@plt>
   141f4:			; <UNDEFINED> instruction: 0x00018eb4
   141f8:	muleq	r0, ip, fp
   141fc:	andeq	r7, r0, r8, lsl #23
   14200:	andeq	r0, r0, ip, asr #2
   14204:	andeq	r0, r0, r0, asr #2
   14208:	andeq	r0, r0, ip, lsr r1
   1420c:	andeq	r0, r0, r4, lsr #2
   14210:	strdeq	r7, [r0], -r8
   14214:	push	{r3, lr}
   14218:	mov	r3, r0
   1421c:	mov	r2, #0
   14220:	cmp	r1, #8
   14224:	str	r2, [r3], #4
   14228:	add	r3, r3, #4
   1422c:	str	r2, [r0, #4]
   14230:	str	r2, [r3], #4
   14234:	str	r2, [r3], #4
   14238:	str	r2, [r3], #4
   1423c:	str	r2, [r3], #4
   14240:	str	r2, [r3], #4
   14244:	str	r2, [r3], #4
   14248:	str	r2, [r3], #4
   1424c:	str	r2, [r3], #4
   14250:	str	r2, [r3], #4
   14254:	str	r2, [r3]
   14258:	beq	14264 <close_stdout@@Base+0x348>
   1425c:	str	r1, [r0]
   14260:	pop	{r3, pc}
   14264:	bl	11404 <abort@plt>
   14268:	push	{r4, r5, r6, lr}
   1426c:	mov	r4, r0
   14270:	mov	r6, r1
   14274:	mov	r0, #0
   14278:	mov	r1, r4
   1427c:	mov	r2, #5
   14280:	bl	111b8 <dcgettext@plt>
   14284:	cmp	r0, r4
   14288:	mov	r5, r0
   1428c:	beq	14294 <close_stdout@@Base+0x378>
   14290:	pop	{r4, r5, r6, pc}
   14294:	bl	16fb0 <close_stdout@@Base+0x3094>
   14298:	ldrb	r3, [r0]
   1429c:	bic	r3, r3, #32
   142a0:	cmp	r3, #85	; 0x55
   142a4:	bne	14318 <close_stdout@@Base+0x3fc>
   142a8:	ldrb	r3, [r0, #1]
   142ac:	bic	r3, r3, #32
   142b0:	cmp	r3, #84	; 0x54
   142b4:	bne	14304 <close_stdout@@Base+0x3e8>
   142b8:	ldrb	r3, [r0, #2]
   142bc:	bic	r3, r3, #32
   142c0:	cmp	r3, #70	; 0x46
   142c4:	bne	14304 <close_stdout@@Base+0x3e8>
   142c8:	ldrb	r3, [r0, #3]
   142cc:	cmp	r3, #45	; 0x2d
   142d0:	bne	14304 <close_stdout@@Base+0x3e8>
   142d4:	ldrb	r3, [r0, #4]
   142d8:	cmp	r3, #56	; 0x38
   142dc:	bne	14304 <close_stdout@@Base+0x3e8>
   142e0:	ldrb	r3, [r0, #5]
   142e4:	cmp	r3, #0
   142e8:	bne	14304 <close_stdout@@Base+0x3e8>
   142ec:	ldrb	r3, [r5]
   142f0:	cmp	r3, #96	; 0x60
   142f4:	beq	14390 <close_stdout@@Base+0x474>
   142f8:	ldr	r0, [pc, #180]	; 143b4 <close_stdout@@Base+0x498>
   142fc:	add	r0, pc, r0
   14300:	pop	{r4, r5, r6, pc}
   14304:	cmp	r6, #7
   14308:	beq	1439c <close_stdout@@Base+0x480>
   1430c:	ldr	r0, [pc, #164]	; 143b8 <close_stdout@@Base+0x49c>
   14310:	add	r0, pc, r0
   14314:	pop	{r4, r5, r6, pc}
   14318:	cmp	r3, #71	; 0x47
   1431c:	bne	14304 <close_stdout@@Base+0x3e8>
   14320:	ldrb	r3, [r0, #1]
   14324:	bic	r3, r3, #32
   14328:	cmp	r3, #66	; 0x42
   1432c:	bne	14304 <close_stdout@@Base+0x3e8>
   14330:	ldrb	r3, [r0, #2]
   14334:	cmp	r3, #49	; 0x31
   14338:	bne	14304 <close_stdout@@Base+0x3e8>
   1433c:	ldrb	r3, [r0, #3]
   14340:	cmp	r3, #56	; 0x38
   14344:	bne	14304 <close_stdout@@Base+0x3e8>
   14348:	ldrb	r3, [r0, #4]
   1434c:	cmp	r3, #48	; 0x30
   14350:	bne	14304 <close_stdout@@Base+0x3e8>
   14354:	ldrb	r3, [r0, #5]
   14358:	cmp	r3, #51	; 0x33
   1435c:	bne	14304 <close_stdout@@Base+0x3e8>
   14360:	ldrb	r3, [r0, #6]
   14364:	cmp	r3, #48	; 0x30
   14368:	bne	14304 <close_stdout@@Base+0x3e8>
   1436c:	ldrb	r3, [r0, #7]
   14370:	cmp	r3, #0
   14374:	bne	14304 <close_stdout@@Base+0x3e8>
   14378:	ldrb	r3, [r5]
   1437c:	cmp	r3, #96	; 0x60
   14380:	beq	143a8 <close_stdout@@Base+0x48c>
   14384:	ldr	r0, [pc, #48]	; 143bc <close_stdout@@Base+0x4a0>
   14388:	add	r0, pc, r0
   1438c:	pop	{r4, r5, r6, pc}
   14390:	ldr	r0, [pc, #40]	; 143c0 <close_stdout@@Base+0x4a4>
   14394:	add	r0, pc, r0
   14398:	pop	{r4, r5, r6, pc}
   1439c:	ldr	r0, [pc, #32]	; 143c4 <close_stdout@@Base+0x4a8>
   143a0:	add	r0, pc, r0
   143a4:	pop	{r4, r5, r6, pc}
   143a8:	ldr	r0, [pc, #24]	; 143c8 <close_stdout@@Base+0x4ac>
   143ac:	add	r0, pc, r0
   143b0:	pop	{r4, r5, r6, pc}
   143b4:	andeq	r7, r0, r4, asr #20
   143b8:	andeq	r7, r0, r8, lsr sl
   143bc:			; <UNDEFINED> instruction: 0x000079bc
   143c0:	andeq	r7, r0, r0, asr #19
   143c4:	andeq	r7, r0, ip, lsr #19
   143c8:	andeq	r7, r0, r4, lsr #19
   143cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143d0:	sub	sp, sp, #124	; 0x7c
   143d4:	ldr	ip, [pc, #3304]	; 150c4 <close_stdout@@Base+0x11a8>
   143d8:	mov	sl, r1
   143dc:	str	r0, [sp, #40]	; 0x28
   143e0:	mov	r8, r3
   143e4:	ldr	r0, [pc, #3292]	; 150c8 <close_stdout@@Base+0x11ac>
   143e8:	add	ip, pc, ip
   143ec:	str	r2, [sp, #32]
   143f0:	ldr	r1, [sp, #164]	; 0xa4
   143f4:	mov	r3, ip
   143f8:	ldr	r0, [ip, r0]
   143fc:	ldr	r2, [sp, #172]	; 0xac
   14400:	ubfx	r1, r1, #1, #1
   14404:	str	r1, [sp, #36]	; 0x24
   14408:	str	r0, [sp, #56]	; 0x38
   1440c:	ldr	r0, [sp, #168]	; 0xa8
   14410:	ldr	r1, [sp, #176]	; 0xb0
   14414:	str	r2, [sp, #72]	; 0x48
   14418:	str	r0, [sp, #48]	; 0x30
   1441c:	ldr	r0, [sp, #56]	; 0x38
   14420:	str	r1, [sp, #68]	; 0x44
   14424:	ldr	r3, [r0]
   14428:	str	r3, [sp, #116]	; 0x74
   1442c:	bl	1123c <__ctype_get_mb_cur_max@plt>
   14430:	ldr	r2, [sp, #160]	; 0xa0
   14434:	str	r0, [sp, #64]	; 0x40
   14438:	cmp	r2, #8
   1443c:	addls	pc, pc, r2, lsl #2
   14440:	b	14fa0 <close_stdout@@Base+0x1084>
   14444:	b	14468 <close_stdout@@Base+0x54c>
   14448:	b	14cb8 <close_stdout@@Base+0xd9c>
   1444c:	b	14ce8 <close_stdout@@Base+0xdcc>
   14450:	b	14b98 <close_stdout@@Base+0xc7c>
   14454:	b	14bd8 <close_stdout@@Base+0xcbc>
   14458:	b	14c04 <close_stdout@@Base+0xce8>
   1445c:	b	14c24 <close_stdout@@Base+0xd08>
   14460:	b	14c24 <close_stdout@@Base+0xd08>
   14464:	b	14c24 <close_stdout@@Base+0xd08>
   14468:	mov	r2, #0
   1446c:	str	r2, [sp, #36]	; 0x24
   14470:	mov	r9, r2
   14474:	str	r2, [sp, #24]
   14478:	str	r2, [sp, #28]
   1447c:	str	r2, [sp, #52]	; 0x34
   14480:	ldr	r0, [sp, #36]	; 0x24
   14484:	mov	fp, #0
   14488:	ldr	r1, [sp, #24]
   1448c:	eor	r2, r0, #1
   14490:	eor	r3, r1, #1
   14494:	and	r3, r2, r3
   14498:	and	r2, r1, r0
   1449c:	str	r3, [sp, #44]	; 0x2c
   144a0:	str	r2, [sp, #76]	; 0x4c
   144a4:	cmn	r8, #1
   144a8:	beq	14828 <close_stdout@@Base+0x90c>
   144ac:	subs	r3, fp, r8
   144b0:	movne	r3, #1
   144b4:	cmp	r3, #0
   144b8:	beq	14840 <close_stdout@@Base+0x924>
   144bc:	ldr	r3, [sp, #28]
   144c0:	ldr	r0, [sp, #24]
   144c4:	adds	r7, r3, #0
   144c8:	movne	r7, #1
   144cc:	ands	r6, r7, r0
   144d0:	bne	14d2c <close_stdout@@Base+0xe10>
   144d4:	ldr	r1, [sp, #32]
   144d8:	add	r5, r1, fp
   144dc:	ldrb	r4, [r5]
   144e0:	cmp	r4, #126	; 0x7e
   144e4:	addls	pc, pc, r4, lsl #2
   144e8:	b	14aac <close_stdout@@Base+0xb90>
   144ec:	b	149b8 <close_stdout@@Base+0xa9c>
   144f0:	b	14aac <close_stdout@@Base+0xb90>
   144f4:	b	14aac <close_stdout@@Base+0xb90>
   144f8:	b	14aac <close_stdout@@Base+0xb90>
   144fc:	b	14aac <close_stdout@@Base+0xb90>
   14500:	b	14aac <close_stdout@@Base+0xb90>
   14504:	b	14aac <close_stdout@@Base+0xb90>
   14508:	b	149a0 <close_stdout@@Base+0xa84>
   1450c:	b	14988 <close_stdout@@Base+0xa6c>
   14510:	b	149b0 <close_stdout@@Base+0xa94>
   14514:	b	149a8 <close_stdout@@Base+0xa8c>
   14518:	b	14998 <close_stdout@@Base+0xa7c>
   1451c:	b	14990 <close_stdout@@Base+0xa74>
   14520:	b	14954 <close_stdout@@Base+0xa38>
   14524:	b	14aac <close_stdout@@Base+0xb90>
   14528:	b	14aac <close_stdout@@Base+0xb90>
   1452c:	b	14aac <close_stdout@@Base+0xb90>
   14530:	b	14aac <close_stdout@@Base+0xb90>
   14534:	b	14aac <close_stdout@@Base+0xb90>
   14538:	b	14aac <close_stdout@@Base+0xb90>
   1453c:	b	14aac <close_stdout@@Base+0xb90>
   14540:	b	14aac <close_stdout@@Base+0xb90>
   14544:	b	14aac <close_stdout@@Base+0xb90>
   14548:	b	14aac <close_stdout@@Base+0xb90>
   1454c:	b	14aac <close_stdout@@Base+0xb90>
   14550:	b	14aac <close_stdout@@Base+0xb90>
   14554:	b	14aac <close_stdout@@Base+0xb90>
   14558:	b	14aac <close_stdout@@Base+0xb90>
   1455c:	b	14aac <close_stdout@@Base+0xb90>
   14560:	b	14aac <close_stdout@@Base+0xb90>
   14564:	b	14aac <close_stdout@@Base+0xb90>
   14568:	b	14aac <close_stdout@@Base+0xb90>
   1456c:	b	148e0 <close_stdout@@Base+0x9c4>
   14570:	b	148e0 <close_stdout@@Base+0x9c4>
   14574:	b	148e0 <close_stdout@@Base+0x9c4>
   14578:	b	148d8 <close_stdout@@Base+0x9bc>
   1457c:	b	148e0 <close_stdout@@Base+0x9c4>
   14580:	b	147b4 <close_stdout@@Base+0x898>
   14584:	b	148e0 <close_stdout@@Base+0x9c4>
   14588:	b	14a54 <close_stdout@@Base+0xb38>
   1458c:	b	148e0 <close_stdout@@Base+0x9c4>
   14590:	b	148e0 <close_stdout@@Base+0x9c4>
   14594:	b	148e0 <close_stdout@@Base+0x9c4>
   14598:	b	147b4 <close_stdout@@Base+0x898>
   1459c:	b	147b4 <close_stdout@@Base+0x898>
   145a0:	b	147b4 <close_stdout@@Base+0x898>
   145a4:	b	147b4 <close_stdout@@Base+0x898>
   145a8:	b	147b4 <close_stdout@@Base+0x898>
   145ac:	b	147b4 <close_stdout@@Base+0x898>
   145b0:	b	147b4 <close_stdout@@Base+0x898>
   145b4:	b	147b4 <close_stdout@@Base+0x898>
   145b8:	b	147b4 <close_stdout@@Base+0x898>
   145bc:	b	147b4 <close_stdout@@Base+0x898>
   145c0:	b	147b4 <close_stdout@@Base+0x898>
   145c4:	b	147b4 <close_stdout@@Base+0x898>
   145c8:	b	147b4 <close_stdout@@Base+0x898>
   145cc:	b	147b4 <close_stdout@@Base+0x898>
   145d0:	b	147b4 <close_stdout@@Base+0x898>
   145d4:	b	147b4 <close_stdout@@Base+0x898>
   145d8:	b	148e0 <close_stdout@@Base+0x9c4>
   145dc:	b	148e0 <close_stdout@@Base+0x9c4>
   145e0:	b	148e0 <close_stdout@@Base+0x9c4>
   145e4:	b	148e0 <close_stdout@@Base+0x9c4>
   145e8:	b	146e8 <close_stdout@@Base+0x7cc>
   145ec:	b	14aac <close_stdout@@Base+0xb90>
   145f0:	b	147b4 <close_stdout@@Base+0x898>
   145f4:	b	147b4 <close_stdout@@Base+0x898>
   145f8:	b	147b4 <close_stdout@@Base+0x898>
   145fc:	b	147b4 <close_stdout@@Base+0x898>
   14600:	b	147b4 <close_stdout@@Base+0x898>
   14604:	b	147b4 <close_stdout@@Base+0x898>
   14608:	b	147b4 <close_stdout@@Base+0x898>
   1460c:	b	147b4 <close_stdout@@Base+0x898>
   14610:	b	147b4 <close_stdout@@Base+0x898>
   14614:	b	147b4 <close_stdout@@Base+0x898>
   14618:	b	147b4 <close_stdout@@Base+0x898>
   1461c:	b	147b4 <close_stdout@@Base+0x898>
   14620:	b	147b4 <close_stdout@@Base+0x898>
   14624:	b	147b4 <close_stdout@@Base+0x898>
   14628:	b	147b4 <close_stdout@@Base+0x898>
   1462c:	b	147b4 <close_stdout@@Base+0x898>
   14630:	b	147b4 <close_stdout@@Base+0x898>
   14634:	b	147b4 <close_stdout@@Base+0x898>
   14638:	b	147b4 <close_stdout@@Base+0x898>
   1463c:	b	147b4 <close_stdout@@Base+0x898>
   14640:	b	147b4 <close_stdout@@Base+0x898>
   14644:	b	147b4 <close_stdout@@Base+0x898>
   14648:	b	147b4 <close_stdout@@Base+0x898>
   1464c:	b	147b4 <close_stdout@@Base+0x898>
   14650:	b	147b4 <close_stdout@@Base+0x898>
   14654:	b	147b4 <close_stdout@@Base+0x898>
   14658:	b	148e0 <close_stdout@@Base+0x9c4>
   1465c:	b	14a38 <close_stdout@@Base+0xb1c>
   14660:	b	147b4 <close_stdout@@Base+0x898>
   14664:	b	148e0 <close_stdout@@Base+0x9c4>
   14668:	b	147b4 <close_stdout@@Base+0x898>
   1466c:	b	148e0 <close_stdout@@Base+0x9c4>
   14670:	b	147b4 <close_stdout@@Base+0x898>
   14674:	b	147b4 <close_stdout@@Base+0x898>
   14678:	b	147b4 <close_stdout@@Base+0x898>
   1467c:	b	147b4 <close_stdout@@Base+0x898>
   14680:	b	147b4 <close_stdout@@Base+0x898>
   14684:	b	147b4 <close_stdout@@Base+0x898>
   14688:	b	147b4 <close_stdout@@Base+0x898>
   1468c:	b	147b4 <close_stdout@@Base+0x898>
   14690:	b	147b4 <close_stdout@@Base+0x898>
   14694:	b	147b4 <close_stdout@@Base+0x898>
   14698:	b	147b4 <close_stdout@@Base+0x898>
   1469c:	b	147b4 <close_stdout@@Base+0x898>
   146a0:	b	147b4 <close_stdout@@Base+0x898>
   146a4:	b	147b4 <close_stdout@@Base+0x898>
   146a8:	b	147b4 <close_stdout@@Base+0x898>
   146ac:	b	147b4 <close_stdout@@Base+0x898>
   146b0:	b	147b4 <close_stdout@@Base+0x898>
   146b4:	b	147b4 <close_stdout@@Base+0x898>
   146b8:	b	147b4 <close_stdout@@Base+0x898>
   146bc:	b	147b4 <close_stdout@@Base+0x898>
   146c0:	b	147b4 <close_stdout@@Base+0x898>
   146c4:	b	147b4 <close_stdout@@Base+0x898>
   146c8:	b	147b4 <close_stdout@@Base+0x898>
   146cc:	b	147b4 <close_stdout@@Base+0x898>
   146d0:	b	147b4 <close_stdout@@Base+0x898>
   146d4:	b	147b4 <close_stdout@@Base+0x898>
   146d8:	b	148c0 <close_stdout@@Base+0x9a4>
   146dc:	b	148e0 <close_stdout@@Base+0x9c4>
   146e0:	b	148c0 <close_stdout@@Base+0x9a4>
   146e4:	b	148d8 <close_stdout@@Base+0x9bc>
   146e8:	ldr	r3, [sp, #160]	; 0xa0
   146ec:	cmp	r3, #2
   146f0:	beq	14f7c <close_stdout@@Base+0x1060>
   146f4:	cmp	r3, #3
   146f8:	bne	147b4 <close_stdout@@Base+0x898>
   146fc:	ldr	r1, [sp, #164]	; 0xa4
   14700:	tst	r1, #4
   14704:	beq	147b4 <close_stdout@@Base+0x898>
   14708:	add	r3, fp, #2
   1470c:	cmp	r8, r3
   14710:	bls	147b4 <close_stdout@@Base+0x898>
   14714:	ldrb	r2, [r5, #1]
   14718:	mov	r1, #1
   1471c:	cmp	r2, #63	; 0x3f
   14720:	bne	147b4 <close_stdout@@Base+0x898>
   14724:	ldr	r0, [sp, #32]
   14728:	ldrb	ip, [r0, r3]
   1472c:	sub	r0, ip, #33	; 0x21
   14730:	uxtb	r0, r0
   14734:	cmp	r0, #29
   14738:	bhi	147b4 <close_stdout@@Base+0x898>
   1473c:	lsl	r1, r1, r0
   14740:	movw	r0, #20929	; 0x51c1
   14744:	movt	r0, #14336	; 0x3800
   14748:	and	r0, r1, r0
   1474c:	cmp	r0, #0
   14750:	beq	147b4 <close_stdout@@Base+0x898>
   14754:	ldr	r1, [sp, #36]	; 0x24
   14758:	cmp	r1, #0
   1475c:	bne	148fc <close_stdout@@Base+0x9e0>
   14760:	cmp	r9, sl
   14764:	mov	r4, ip
   14768:	mov	fp, r3
   1476c:	ldrcc	r0, [sp, #40]	; 0x28
   14770:	strbcc	r2, [r0, r9]
   14774:	add	r2, r9, #1
   14778:	cmp	sl, r2
   1477c:	ldrhi	r0, [sp, #40]	; 0x28
   14780:	movhi	r1, #34	; 0x22
   14784:	strbhi	r1, [r0, r2]
   14788:	add	r2, r9, #2
   1478c:	cmp	sl, r2
   14790:	ldrhi	r0, [sp, #40]	; 0x28
   14794:	movhi	r1, #34	; 0x22
   14798:	strbhi	r1, [r0, r2]
   1479c:	add	r2, r9, #3
   147a0:	cmp	sl, r2
   147a4:	add	r9, r9, #4
   147a8:	ldrhi	r0, [sp, #40]	; 0x28
   147ac:	movhi	r1, #63	; 0x3f
   147b0:	strbhi	r1, [r0, r2]
   147b4:	ldr	r0, [sp, #44]	; 0x2c
   147b8:	cmp	r0, #0
   147bc:	bne	147e4 <close_stdout@@Base+0x8c8>
   147c0:	ldr	r1, [sp, #48]	; 0x30
   147c4:	cmp	r1, #0
   147c8:	beq	147e4 <close_stdout@@Base+0x8c8>
   147cc:	ubfx	r2, r4, #5, #8
   147d0:	and	r3, r4, #31
   147d4:	ldr	r2, [r1, r2, lsl #2]
   147d8:	lsr	r3, r2, r3
   147dc:	tst	r3, #1
   147e0:	bne	147ec <close_stdout@@Base+0x8d0>
   147e4:	cmp	r6, #0
   147e8:	beq	1480c <close_stdout@@Base+0x8f0>
   147ec:	ldr	r2, [sp, #36]	; 0x24
   147f0:	cmp	r2, #0
   147f4:	bne	148fc <close_stdout@@Base+0x9e0>
   147f8:	cmp	r9, sl
   147fc:	ldrcc	r0, [sp, #40]	; 0x28
   14800:	movcc	r3, #92	; 0x5c
   14804:	strbcc	r3, [r0, r9]
   14808:	add	r9, r9, #1
   1480c:	add	fp, fp, #1
   14810:	cmp	r9, sl
   14814:	ldrcc	r1, [sp, #40]	; 0x28
   14818:	strbcc	r4, [r1, r9]
   1481c:	cmn	r8, #1
   14820:	add	r9, r9, #1
   14824:	bne	144ac <close_stdout@@Base+0x590>
   14828:	ldr	r2, [sp, #32]
   1482c:	ldrb	r3, [r2, fp]
   14830:	adds	r3, r3, #0
   14834:	movne	r3, #1
   14838:	cmp	r3, #0
   1483c:	bne	144bc <close_stdout@@Base+0x5a0>
   14840:	ldr	r3, [sp, #160]	; 0xa0
   14844:	cmp	r9, #0
   14848:	cmpeq	r3, #2
   1484c:	bne	1485c <close_stdout@@Base+0x940>
   14850:	ldr	r0, [sp, #36]	; 0x24
   14854:	cmp	r0, #0
   14858:	bne	148fc <close_stdout@@Base+0x9e0>
   1485c:	ldr	r1, [sp, #36]	; 0x24
   14860:	ldr	r2, [sp, #52]	; 0x34
   14864:	eor	r3, r1, #1
   14868:	cmp	r2, #0
   1486c:	moveq	r3, #0
   14870:	andne	r3, r3, #1
   14874:	cmp	r3, #0
   14878:	beq	148a4 <close_stdout@@Base+0x988>
   1487c:	ldrb	r3, [r2]
   14880:	cmp	r3, #0
   14884:	beq	148a4 <close_stdout@@Base+0x988>
   14888:	ldr	r1, [sp, #40]	; 0x28
   1488c:	cmp	sl, r9
   14890:	strbhi	r3, [r1, r9]
   14894:	ldrb	r3, [r2, #1]!
   14898:	add	r9, r9, #1
   1489c:	cmp	r3, #0
   148a0:	bne	1488c <close_stdout@@Base+0x970>
   148a4:	cmp	r9, sl
   148a8:	movcs	r0, r9
   148ac:	ldrcc	r1, [sp, #40]	; 0x28
   148b0:	movcc	r3, #0
   148b4:	movcc	r0, r9
   148b8:	strbcc	r3, [r1, r9]
   148bc:	b	14938 <close_stdout@@Base+0xa1c>
   148c0:	cmn	r8, #1
   148c4:	beq	14f8c <close_stdout@@Base+0x1070>
   148c8:	subs	r3, r8, #1
   148cc:	movne	r3, #1
   148d0:	cmp	r3, #0
   148d4:	bne	147b4 <close_stdout@@Base+0x898>
   148d8:	cmp	fp, #0
   148dc:	bne	147b4 <close_stdout@@Base+0x898>
   148e0:	ldr	r3, [sp, #36]	; 0x24
   148e4:	ldr	r0, [sp, #160]	; 0xa0
   148e8:	cmp	r0, #2
   148ec:	movne	r3, #0
   148f0:	andeq	r3, r3, #1
   148f4:	cmp	r3, #0
   148f8:	beq	147b4 <close_stdout@@Base+0x898>
   148fc:	ldr	r2, [sp, #164]	; 0xa4
   14900:	mov	ip, #0
   14904:	ldr	r0, [sp, #160]	; 0xa0
   14908:	bic	r3, r2, #2
   1490c:	ldr	r1, [sp, #72]	; 0x48
   14910:	ldr	r2, [sp, #68]	; 0x44
   14914:	stm	sp, {r0, r3}
   14918:	mov	r3, r8
   1491c:	str	r1, [sp, #12]
   14920:	mov	r1, sl
   14924:	str	r2, [sp, #16]
   14928:	ldr	r0, [sp, #40]	; 0x28
   1492c:	ldr	r2, [sp, #32]
   14930:	str	ip, [sp, #8]
   14934:	bl	143cc <close_stdout@@Base+0x4b0>
   14938:	ldr	r1, [sp, #56]	; 0x38
   1493c:	ldr	r2, [sp, #116]	; 0x74
   14940:	ldr	r3, [r1]
   14944:	cmp	r2, r3
   14948:	bne	1507c <close_stdout@@Base+0x1160>
   1494c:	add	sp, sp, #124	; 0x7c
   14950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14954:	mov	r3, #114	; 0x72
   14958:	ldr	r2, [sp, #36]	; 0x24
   1495c:	ldr	r0, [sp, #160]	; 0xa0
   14960:	cmp	r0, #2
   14964:	movne	r2, #0
   14968:	andeq	r2, r2, #1
   1496c:	cmp	r2, #0
   14970:	bne	148fc <close_stdout@@Base+0x9e0>
   14974:	ldr	r1, [sp, #24]
   14978:	cmp	r1, #0
   1497c:	beq	147b4 <close_stdout@@Base+0x898>
   14980:	mov	r4, r3
   14984:	b	147ec <close_stdout@@Base+0x8d0>
   14988:	mov	r3, #98	; 0x62
   1498c:	b	14974 <close_stdout@@Base+0xa58>
   14990:	mov	r3, #102	; 0x66
   14994:	b	14974 <close_stdout@@Base+0xa58>
   14998:	mov	r3, #118	; 0x76
   1499c:	b	14974 <close_stdout@@Base+0xa58>
   149a0:	mov	r3, #97	; 0x61
   149a4:	b	14974 <close_stdout@@Base+0xa58>
   149a8:	mov	r3, #110	; 0x6e
   149ac:	b	14958 <close_stdout@@Base+0xa3c>
   149b0:	mov	r3, #116	; 0x74
   149b4:	b	14958 <close_stdout@@Base+0xa3c>
   149b8:	ldr	r2, [sp, #24]
   149bc:	cmp	r2, #0
   149c0:	beq	14f68 <close_stdout@@Base+0x104c>
   149c4:	ldr	r3, [sp, #36]	; 0x24
   149c8:	cmp	r3, #0
   149cc:	bne	148fc <close_stdout@@Base+0x9e0>
   149d0:	cmp	r9, sl
   149d4:	add	r2, r9, #1
   149d8:	ldrcc	r0, [sp, #40]	; 0x28
   149dc:	movcc	r3, #92	; 0x5c
   149e0:	strbcc	r3, [r0, r9]
   149e4:	add	r3, fp, #1
   149e8:	cmp	r8, r3
   149ec:	bls	14a2c <close_stdout@@Base+0xb10>
   149f0:	ldr	r1, [sp, #32]
   149f4:	ldrb	r3, [r1, r3]
   149f8:	sub	r3, r3, #48	; 0x30
   149fc:	cmp	r3, #9
   14a00:	bhi	14a2c <close_stdout@@Base+0xb10>
   14a04:	cmp	sl, r2
   14a08:	ldrhi	r0, [sp, #40]	; 0x28
   14a0c:	movhi	r3, #48	; 0x30
   14a10:	strbhi	r3, [r0, r2]
   14a14:	add	r3, r9, #2
   14a18:	cmp	sl, r3
   14a1c:	ldrhi	r1, [sp, #40]	; 0x28
   14a20:	movhi	r2, #48	; 0x30
   14a24:	strbhi	r2, [r1, r3]
   14a28:	add	r2, r9, #3
   14a2c:	mov	r9, r2
   14a30:	mov	r4, #48	; 0x30
   14a34:	b	147c0 <close_stdout@@Base+0x8a4>
   14a38:	ldr	r1, [sp, #76]	; 0x4c
   14a3c:	cmp	r1, #0
   14a40:	beq	14a4c <close_stdout@@Base+0xb30>
   14a44:	cmp	r7, #0
   14a48:	bne	1480c <close_stdout@@Base+0x8f0>
   14a4c:	mov	r3, r4
   14a50:	b	14958 <close_stdout@@Base+0xa3c>
   14a54:	ldr	r1, [sp, #160]	; 0xa0
   14a58:	cmp	r1, #2
   14a5c:	bne	147b4 <close_stdout@@Base+0x898>
   14a60:	ldr	r2, [sp, #36]	; 0x24
   14a64:	cmp	r2, #0
   14a68:	bne	148fc <close_stdout@@Base+0x9e0>
   14a6c:	cmp	r9, sl
   14a70:	ldrcc	r0, [sp, #40]	; 0x28
   14a74:	movcc	r3, #39	; 0x27
   14a78:	strbcc	r3, [r0, r9]
   14a7c:	add	r3, r9, #1
   14a80:	cmp	sl, r3
   14a84:	ldrhi	r1, [sp, #40]	; 0x28
   14a88:	movhi	r2, #92	; 0x5c
   14a8c:	strbhi	r2, [r1, r3]
   14a90:	add	r3, r9, #2
   14a94:	cmp	sl, r3
   14a98:	add	r9, r9, #3
   14a9c:	ldrhi	r0, [sp, #40]	; 0x28
   14aa0:	movhi	r2, #39	; 0x27
   14aa4:	strbhi	r2, [r0, r3]
   14aa8:	b	147b4 <close_stdout@@Base+0x898>
   14aac:	ldr	r1, [sp, #64]	; 0x40
   14ab0:	cmp	r1, #1
   14ab4:	bne	14dac <close_stdout@@Base+0xe90>
   14ab8:	bl	112d8 <__ctype_b_loc@plt>
   14abc:	ldr	r2, [sp, #64]	; 0x40
   14ac0:	sxth	r3, r4
   14ac4:	str	r2, [sp, #60]	; 0x3c
   14ac8:	lsl	r3, r3, #1
   14acc:	ldr	r2, [r0]
   14ad0:	ldrh	r2, [r2, r3]
   14ad4:	eor	r2, r2, #16384	; 0x4000
   14ad8:	ubfx	r2, r2, #14, #1
   14adc:	ldr	r1, [sp, #24]
   14ae0:	ands	r2, r2, r1
   14ae4:	beq	147b4 <close_stdout@@Base+0x898>
   14ae8:	ldr	r3, [sp, #60]	; 0x3c
   14aec:	mov	r0, #92	; 0x5c
   14af0:	ldr	r7, [sp, #36]	; 0x24
   14af4:	add	r1, r3, fp
   14af8:	str	r8, [sp, #60]	; 0x3c
   14afc:	ldr	r3, [sp, #40]	; 0x28
   14b00:	b	14b64 <close_stdout@@Base+0xc48>
   14b04:	cmp	r7, #0
   14b08:	bne	14fa4 <close_stdout@@Base+0x1088>
   14b0c:	add	ip, r9, #1
   14b10:	cmp	r9, sl
   14b14:	strbcc	r0, [r3, r9]
   14b18:	cmp	sl, ip
   14b1c:	lsrhi	r8, r4, #6
   14b20:	addhi	r8, r8, #48	; 0x30
   14b24:	strbhi	r8, [r3, ip]
   14b28:	add	ip, r9, #2
   14b2c:	add	r9, r9, #3
   14b30:	cmp	sl, ip
   14b34:	ubfxhi	r8, r4, #3, #3
   14b38:	and	r4, r4, #7
   14b3c:	add	r4, r4, #48	; 0x30
   14b40:	addhi	r8, r8, #48	; 0x30
   14b44:	strbhi	r8, [r3, ip]
   14b48:	add	fp, fp, #1
   14b4c:	cmp	r1, fp
   14b50:	bls	14b90 <close_stdout@@Base+0xc74>
   14b54:	cmp	r9, sl
   14b58:	strbcc	r4, [r3, r9]
   14b5c:	ldrb	r4, [r5, #1]!
   14b60:	add	r9, r9, #1
   14b64:	cmp	r2, #0
   14b68:	bne	14b04 <close_stdout@@Base+0xbe8>
   14b6c:	cmp	r6, #0
   14b70:	beq	14b48 <close_stdout@@Base+0xc2c>
   14b74:	add	fp, fp, #1
   14b78:	cmp	r9, sl
   14b7c:	strbcc	r0, [r3, r9]
   14b80:	cmp	r1, fp
   14b84:	add	r9, r9, #1
   14b88:	mov	r6, #0
   14b8c:	bhi	14b54 <close_stdout@@Base+0xc38>
   14b90:	ldr	r8, [sp, #60]	; 0x3c
   14b94:	b	14810 <close_stdout@@Base+0x8f4>
   14b98:	ldr	r3, [sp, #36]	; 0x24
   14b9c:	cmp	r3, #0
   14ba0:	bne	150a4 <close_stdout@@Base+0x1188>
   14ba4:	cmp	sl, #0
   14ba8:	beq	14fbc <close_stdout@@Base+0x10a0>
   14bac:	ldr	r1, [sp, #40]	; 0x28
   14bb0:	mov	r0, #1
   14bb4:	ldr	r2, [pc, #1296]	; 150cc <close_stdout@@Base+0x11b0>
   14bb8:	mov	r3, #34	; 0x22
   14bbc:	str	r0, [sp, #24]
   14bc0:	mov	r9, r0
   14bc4:	add	r2, pc, r2
   14bc8:	str	r0, [sp, #28]
   14bcc:	strb	r3, [r1]
   14bd0:	str	r2, [sp, #52]	; 0x34
   14bd4:	b	14480 <close_stdout@@Base+0x564>
   14bd8:	ldr	r3, [pc, #1264]	; 150d0 <close_stdout@@Base+0x11b4>
   14bdc:	mov	r2, #1
   14be0:	mov	r0, #3
   14be4:	str	r2, [sp, #36]	; 0x24
   14be8:	add	r3, pc, r3
   14bec:	str	r2, [sp, #24]
   14bf0:	str	r3, [sp, #52]	; 0x34
   14bf4:	mov	r9, #0
   14bf8:	str	r2, [sp, #28]
   14bfc:	str	r0, [sp, #160]	; 0xa0
   14c00:	b	14480 <close_stdout@@Base+0x564>
   14c04:	mov	r0, #0
   14c08:	mov	r1, #1
   14c0c:	str	r0, [sp, #36]	; 0x24
   14c10:	mov	r9, r0
   14c14:	str	r1, [sp, #24]
   14c18:	str	r0, [sp, #28]
   14c1c:	str	r0, [sp, #52]	; 0x34
   14c20:	b	14480 <close_stdout@@Base+0x564>
   14c24:	ldr	r3, [sp, #160]	; 0xa0
   14c28:	cmp	r3, #8
   14c2c:	beq	14c58 <close_stdout@@Base+0xd3c>
   14c30:	ldr	r0, [pc, #1180]	; 150d4 <close_stdout@@Base+0x11b8>
   14c34:	mov	r1, r3
   14c38:	add	r0, pc, r0
   14c3c:	bl	14268 <close_stdout@@Base+0x34c>
   14c40:	ldr	r1, [sp, #160]	; 0xa0
   14c44:	str	r0, [sp, #72]	; 0x48
   14c48:	ldr	r0, [pc, #1160]	; 150d8 <close_stdout@@Base+0x11bc>
   14c4c:	add	r0, pc, r0
   14c50:	bl	14268 <close_stdout@@Base+0x34c>
   14c54:	str	r0, [sp, #68]	; 0x44
   14c58:	ldr	r0, [sp, #36]	; 0x24
   14c5c:	cmp	r0, #0
   14c60:	movne	r9, #0
   14c64:	bne	14c9c <close_stdout@@Base+0xd80>
   14c68:	ldr	r1, [sp, #72]	; 0x48
   14c6c:	ldrb	r3, [r1]
   14c70:	cmp	r3, #0
   14c74:	beq	15074 <close_stdout@@Base+0x1158>
   14c78:	mov	r2, r1
   14c7c:	ldr	r1, [sp, #40]	; 0x28
   14c80:	mov	r9, r0
   14c84:	cmp	r9, sl
   14c88:	strbcc	r3, [r1, r9]
   14c8c:	ldrb	r3, [r2, #1]!
   14c90:	add	r9, r9, #1
   14c94:	cmp	r3, #0
   14c98:	bne	14c84 <close_stdout@@Base+0xd68>
   14c9c:	ldr	r0, [sp, #68]	; 0x44
   14ca0:	str	r0, [sp, #52]	; 0x34
   14ca4:	bl	112fc <strlen@plt>
   14ca8:	mov	r2, #1
   14cac:	str	r2, [sp, #24]
   14cb0:	str	r0, [sp, #28]
   14cb4:	b	14480 <close_stdout@@Base+0x564>
   14cb8:	ldr	r3, [pc, #1052]	; 150dc <close_stdout@@Base+0x11c0>
   14cbc:	mov	r2, #0
   14cc0:	mov	r1, #1
   14cc4:	mov	r0, #2
   14cc8:	add	r3, pc, r3
   14ccc:	str	r1, [sp, #36]	; 0x24
   14cd0:	str	r2, [sp, #24]
   14cd4:	mov	r9, r2
   14cd8:	str	r1, [sp, #28]
   14cdc:	str	r3, [sp, #52]	; 0x34
   14ce0:	str	r0, [sp, #160]	; 0xa0
   14ce4:	b	14480 <close_stdout@@Base+0x564>
   14ce8:	ldr	r3, [sp, #36]	; 0x24
   14cec:	cmp	r3, #0
   14cf0:	bne	15080 <close_stdout@@Base+0x1164>
   14cf4:	cmp	sl, #0
   14cf8:	beq	14fdc <close_stdout@@Base+0x10c0>
   14cfc:	ldr	r1, [sp, #40]	; 0x28
   14d00:	mov	r3, #39	; 0x27
   14d04:	ldr	r2, [sp, #36]	; 0x24
   14d08:	mov	r0, #1
   14d0c:	mov	r9, r0
   14d10:	str	r0, [sp, #28]
   14d14:	strb	r3, [r1]
   14d18:	ldr	r3, [pc, #960]	; 150e0 <close_stdout@@Base+0x11c4>
   14d1c:	str	r2, [sp, #24]
   14d20:	add	r3, pc, r3
   14d24:	str	r3, [sp, #52]	; 0x34
   14d28:	b	14480 <close_stdout@@Base+0x564>
   14d2c:	ldr	r2, [sp, #28]
   14d30:	cmp	r2, #1
   14d34:	add	r4, fp, r2
   14d38:	movls	r3, #0
   14d3c:	movhi	r3, #1
   14d40:	cmn	r8, #1
   14d44:	movne	r3, #0
   14d48:	cmp	r3, #0
   14d4c:	beq	14d5c <close_stdout@@Base+0xe40>
   14d50:	ldr	r0, [sp, #32]
   14d54:	bl	112fc <strlen@plt>
   14d58:	mov	r8, r0
   14d5c:	cmp	r8, r4
   14d60:	ldrcc	r3, [sp, #32]
   14d64:	movcc	r6, #0
   14d68:	addcc	r5, r3, fp
   14d6c:	bcc	144dc <close_stdout@@Base+0x5c0>
   14d70:	ldr	r0, [sp, #32]
   14d74:	ldr	r1, [sp, #52]	; 0x34
   14d78:	add	r5, r0, fp
   14d7c:	ldr	r2, [sp, #28]
   14d80:	mov	r0, r5
   14d84:	bl	111ac <memcmp@plt>
   14d88:	cmp	r0, #0
   14d8c:	bne	14da4 <close_stdout@@Base+0xe88>
   14d90:	ldr	r1, [sp, #36]	; 0x24
   14d94:	cmp	r1, #0
   14d98:	bne	148fc <close_stdout@@Base+0x9e0>
   14d9c:	mov	r6, #1
   14da0:	b	144dc <close_stdout@@Base+0x5c0>
   14da4:	mov	r6, #0
   14da8:	b	144dc <close_stdout@@Base+0x5c0>
   14dac:	add	r7, sp, #108	; 0x6c
   14db0:	cmn	r8, #1
   14db4:	mov	r3, #0
   14db8:	str	r3, [sp, #108]	; 0x6c
   14dbc:	str	r3, [r7, #4]
   14dc0:	beq	14fac <close_stdout@@Base+0x1090>
   14dc4:	mov	r1, #0
   14dc8:	ldr	r0, [sp, #32]
   14dcc:	mov	ip, #1
   14dd0:	str	r9, [sp, #88]	; 0x58
   14dd4:	str	r6, [sp, #96]	; 0x60
   14dd8:	mov	r9, r1
   14ddc:	str	r5, [sp, #100]	; 0x64
   14de0:	mov	r6, ip
   14de4:	mov	r5, r7
   14de8:	add	r3, sp, #104	; 0x68
   14dec:	sub	r0, r0, #1
   14df0:	str	r3, [sp, #80]	; 0x50
   14df4:	str	r0, [sp, #84]	; 0x54
   14df8:	str	r1, [sp, #60]	; 0x3c
   14dfc:	str	r4, [sp, #92]	; 0x5c
   14e00:	ldr	r2, [sp, #32]
   14e04:	add	r7, r9, fp
   14e08:	add	r0, sp, #104	; 0x68
   14e0c:	mov	r3, r5
   14e10:	add	r4, r2, r7
   14e14:	rsb	r2, r7, r8
   14e18:	mov	r1, r4
   14e1c:	bl	1126c <mbrtowc@plt>
   14e20:	subs	r2, r0, #0
   14e24:	beq	14f30 <close_stdout@@Base+0x1014>
   14e28:	cmn	r2, #1
   14e2c:	beq	15058 <close_stdout@@Base+0x113c>
   14e30:	cmn	r2, #2
   14e34:	beq	14ffc <close_stdout@@Base+0x10e0>
   14e38:	ldr	r3, [sp, #36]	; 0x24
   14e3c:	ldr	r0, [sp, #160]	; 0xa0
   14e40:	cmp	r0, #2
   14e44:	movne	r3, #0
   14e48:	andeq	r3, r3, #1
   14e4c:	cmp	r3, #0
   14e50:	beq	14f0c <close_stdout@@Base+0xff0>
   14e54:	cmp	r2, #1
   14e58:	beq	14f0c <close_stdout@@Base+0xff0>
   14e5c:	ldr	r1, [sp, #84]	; 0x54
   14e60:	add	r3, r1, r2
   14e64:	add	r7, r3, r7
   14e68:	ldrb	r3, [r4, #1]!
   14e6c:	sub	r3, r3, #91	; 0x5b
   14e70:	cmp	r3, #33	; 0x21
   14e74:	addls	pc, pc, r3, lsl #2
   14e78:	b	14f04 <close_stdout@@Base+0xfe8>
   14e7c:	b	148fc <close_stdout@@Base+0x9e0>
   14e80:	b	148fc <close_stdout@@Base+0x9e0>
   14e84:	b	14f04 <close_stdout@@Base+0xfe8>
   14e88:	b	148fc <close_stdout@@Base+0x9e0>
   14e8c:	b	14f04 <close_stdout@@Base+0xfe8>
   14e90:	b	148fc <close_stdout@@Base+0x9e0>
   14e94:	b	14f04 <close_stdout@@Base+0xfe8>
   14e98:	b	14f04 <close_stdout@@Base+0xfe8>
   14e9c:	b	14f04 <close_stdout@@Base+0xfe8>
   14ea0:	b	14f04 <close_stdout@@Base+0xfe8>
   14ea4:	b	14f04 <close_stdout@@Base+0xfe8>
   14ea8:	b	14f04 <close_stdout@@Base+0xfe8>
   14eac:	b	14f04 <close_stdout@@Base+0xfe8>
   14eb0:	b	14f04 <close_stdout@@Base+0xfe8>
   14eb4:	b	14f04 <close_stdout@@Base+0xfe8>
   14eb8:	b	14f04 <close_stdout@@Base+0xfe8>
   14ebc:	b	14f04 <close_stdout@@Base+0xfe8>
   14ec0:	b	14f04 <close_stdout@@Base+0xfe8>
   14ec4:	b	14f04 <close_stdout@@Base+0xfe8>
   14ec8:	b	14f04 <close_stdout@@Base+0xfe8>
   14ecc:	b	14f04 <close_stdout@@Base+0xfe8>
   14ed0:	b	14f04 <close_stdout@@Base+0xfe8>
   14ed4:	b	14f04 <close_stdout@@Base+0xfe8>
   14ed8:	b	14f04 <close_stdout@@Base+0xfe8>
   14edc:	b	14f04 <close_stdout@@Base+0xfe8>
   14ee0:	b	14f04 <close_stdout@@Base+0xfe8>
   14ee4:	b	14f04 <close_stdout@@Base+0xfe8>
   14ee8:	b	14f04 <close_stdout@@Base+0xfe8>
   14eec:	b	14f04 <close_stdout@@Base+0xfe8>
   14ef0:	b	14f04 <close_stdout@@Base+0xfe8>
   14ef4:	b	14f04 <close_stdout@@Base+0xfe8>
   14ef8:	b	14f04 <close_stdout@@Base+0xfe8>
   14efc:	b	14f04 <close_stdout@@Base+0xfe8>
   14f00:	b	148fc <close_stdout@@Base+0x9e0>
   14f04:	cmp	r4, r7
   14f08:	bne	14e68 <close_stdout@@Base+0xf4c>
   14f0c:	ldr	r0, [sp, #104]	; 0x68
   14f10:	add	r9, r9, r2
   14f14:	bl	11200 <iswprint@plt>
   14f18:	cmp	r0, #0
   14f1c:	mov	r0, r5
   14f20:	moveq	r6, #0
   14f24:	bl	111a0 <mbsinit@plt>
   14f28:	cmp	r0, #0
   14f2c:	beq	14e00 <close_stdout@@Base+0xee4>
   14f30:	mov	ip, r6
   14f34:	eor	r2, ip, #1
   14f38:	str	r9, [sp, #60]	; 0x3c
   14f3c:	ldr	r4, [sp, #92]	; 0x5c
   14f40:	uxtb	r2, r2
   14f44:	ldr	r9, [sp, #88]	; 0x58
   14f48:	ldr	r6, [sp, #96]	; 0x60
   14f4c:	ldr	r5, [sp, #100]	; 0x64
   14f50:	ldr	r3, [sp, #60]	; 0x3c
   14f54:	cmp	r3, #1
   14f58:	bls	14adc <close_stdout@@Base+0xbc0>
   14f5c:	ldr	r0, [sp, #24]
   14f60:	and	r2, r2, r0
   14f64:	b	14ae8 <close_stdout@@Base+0xbcc>
   14f68:	ldr	r2, [sp, #164]	; 0xa4
   14f6c:	tst	r2, #1
   14f70:	addne	fp, fp, #1
   14f74:	bne	144a4 <close_stdout@@Base+0x588>
   14f78:	b	147b4 <close_stdout@@Base+0x898>
   14f7c:	ldr	r0, [sp, #36]	; 0x24
   14f80:	cmp	r0, #0
   14f84:	beq	147b4 <close_stdout@@Base+0x898>
   14f88:	b	148fc <close_stdout@@Base+0x9e0>
   14f8c:	ldr	r2, [sp, #32]
   14f90:	ldrb	r3, [r2, #1]
   14f94:	adds	r3, r3, #0
   14f98:	movne	r3, #1
   14f9c:	b	148d0 <close_stdout@@Base+0x9b4>
   14fa0:	bl	11404 <abort@plt>
   14fa4:	ldr	r8, [sp, #60]	; 0x3c
   14fa8:	b	148fc <close_stdout@@Base+0x9e0>
   14fac:	ldr	r0, [sp, #32]
   14fb0:	bl	112fc <strlen@plt>
   14fb4:	mov	r8, r0
   14fb8:	b	14dc4 <close_stdout@@Base+0xea8>
   14fbc:	ldr	r2, [pc, #288]	; 150e4 <close_stdout@@Base+0x11c8>
   14fc0:	mov	r1, #1
   14fc4:	mov	r9, r1
   14fc8:	str	r1, [sp, #24]
   14fcc:	add	r2, pc, r2
   14fd0:	str	r1, [sp, #28]
   14fd4:	str	r2, [sp, #52]	; 0x34
   14fd8:	b	14480 <close_stdout@@Base+0x564>
   14fdc:	ldr	r2, [pc, #260]	; 150e8 <close_stdout@@Base+0x11cc>
   14fe0:	mov	r3, #1
   14fe4:	mov	r9, r3
   14fe8:	str	r3, [sp, #28]
   14fec:	add	r2, pc, r2
   14ff0:	str	sl, [sp, #24]
   14ff4:	str	r2, [sp, #52]	; 0x34
   14ff8:	b	14480 <close_stdout@@Base+0x564>
   14ffc:	cmp	r8, r7
   15000:	str	r9, [sp, #60]	; 0x3c
   15004:	mov	ip, r4
   15008:	ldr	r6, [sp, #96]	; 0x60
   1500c:	ldr	r9, [sp, #88]	; 0x58
   15010:	ldr	r4, [sp, #92]	; 0x5c
   15014:	ldr	r5, [sp, #100]	; 0x64
   15018:	bls	15050 <close_stdout@@Base+0x1134>
   1501c:	ldrb	r3, [ip]
   15020:	cmp	r3, #0
   15024:	beq	15050 <close_stdout@@Base+0x1134>
   15028:	ldr	r3, [sp, #60]	; 0x3c
   1502c:	b	1503c <close_stdout@@Base+0x1120>
   15030:	ldrb	r2, [r5, r3]
   15034:	cmp	r2, #0
   15038:	beq	1504c <close_stdout@@Base+0x1130>
   1503c:	add	r3, r3, #1
   15040:	add	r2, fp, r3
   15044:	cmp	r8, r2
   15048:	bhi	15030 <close_stdout@@Base+0x1114>
   1504c:	str	r3, [sp, #60]	; 0x3c
   15050:	mov	r2, #1
   15054:	b	14f50 <close_stdout@@Base+0x1034>
   15058:	str	r9, [sp, #60]	; 0x3c
   1505c:	mov	r2, #1
   15060:	ldr	r4, [sp, #92]	; 0x5c
   15064:	ldr	r6, [sp, #96]	; 0x60
   15068:	ldr	r9, [sp, #88]	; 0x58
   1506c:	ldr	r5, [sp, #100]	; 0x64
   15070:	b	14f50 <close_stdout@@Base+0x1034>
   15074:	ldr	r9, [sp, #36]	; 0x24
   15078:	b	14c9c <close_stdout@@Base+0xd80>
   1507c:	bl	111c4 <__stack_chk_fail@plt>
   15080:	ldr	r1, [pc, #100]	; 150ec <close_stdout@@Base+0x11d0>
   15084:	mov	r3, #0
   15088:	mov	r0, #1
   1508c:	str	r3, [sp, #24]
   15090:	add	r1, pc, r1
   15094:	str	r0, [sp, #28]
   15098:	mov	r9, r3
   1509c:	str	r1, [sp, #52]	; 0x34
   150a0:	b	14480 <close_stdout@@Base+0x564>
   150a4:	ldr	r0, [pc, #68]	; 150f0 <close_stdout@@Base+0x11d4>
   150a8:	mov	r3, #1
   150ac:	mov	r9, #0
   150b0:	str	r3, [sp, #24]
   150b4:	add	r0, pc, r0
   150b8:	str	r3, [sp, #28]
   150bc:	str	r0, [sp, #52]	; 0x34
   150c0:	b	14480 <close_stdout@@Base+0x564>
   150c4:	andeq	r8, r1, r0, lsl ip
   150c8:	andeq	r0, r0, r8, lsl r1
   150cc:	andeq	r7, r0, r8, lsl #3
   150d0:	andeq	r7, r0, r4, ror #2
   150d4:	andeq	r7, r0, r0, lsr #2
   150d8:	strdeq	r7, [r0], -ip
   150dc:	andeq	r7, r0, r0, lsl #1
   150e0:	andeq	r7, r0, r8, lsr #32
   150e4:	andeq	r6, r0, r0, lsl #27
   150e8:	andeq	r6, r0, ip, asr sp
   150ec:			; <UNDEFINED> instruction: 0x00006cb8
   150f0:	muleq	r0, r8, ip
   150f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150f8:	sub	sp, sp, #44	; 0x2c
   150fc:	mov	r6, r0
   15100:	mov	r9, r1
   15104:	mov	sl, r2
   15108:	mov	r4, r3
   1510c:	bl	11344 <__errno_location@plt>
   15110:	ldr	fp, [pc, #412]	; 152b4 <close_stdout@@Base+0x1398>
   15114:	cmp	r6, #0
   15118:	add	fp, pc, fp
   1511c:	ldr	r5, [fp]
   15120:	ldr	r1, [r0]
   15124:	mov	r8, r0
   15128:	str	r1, [sp, #36]	; 0x24
   1512c:	blt	152ac <close_stdout@@Base+0x1390>
   15130:	ldr	r3, [pc, #384]	; 152b8 <close_stdout@@Base+0x139c>
   15134:	add	r3, pc, r3
   15138:	ldr	r3, [r3]
   1513c:	cmp	r6, r3
   15140:	bcc	15194 <close_stdout@@Base+0x1278>
   15144:	add	r7, r6, #1
   15148:	cmn	r7, #-536870911	; 0xe0000001
   1514c:	bhi	152b0 <close_stdout@@Base+0x1394>
   15150:	add	r3, fp, #4
   15154:	cmp	r5, r3
   15158:	beq	15284 <close_stdout@@Base+0x1368>
   1515c:	mov	r0, r5
   15160:	lsl	r1, r7, #3
   15164:	bl	15f8c <close_stdout@@Base+0x2070>
   15168:	mov	r5, r0
   1516c:	str	r0, [fp]
   15170:	ldr	fp, [pc, #324]	; 152bc <close_stdout@@Base+0x13a0>
   15174:	mov	r1, #0
   15178:	add	fp, pc, fp
   1517c:	ldr	r0, [fp]
   15180:	rsb	r2, r0, r7
   15184:	add	r0, r5, r0, lsl #3
   15188:	lsl	r2, r2, #3
   1518c:	bl	1135c <memset@plt>
   15190:	str	r7, [fp]
   15194:	add	r2, r4, #8
   15198:	str	r2, [sp, #32]
   1519c:	ldr	r1, [r4]
   151a0:	add	fp, r5, r6, lsl #3
   151a4:	ldr	lr, [sp, #32]
   151a8:	mov	r2, r9
   151ac:	ldr	r3, [r4, #4]
   151b0:	ldr	ip, [r5, r6, lsl #3]
   151b4:	ldr	r7, [fp, #4]
   151b8:	orr	r3, r3, #1
   151bc:	str	r1, [sp]
   151c0:	str	r3, [sp, #4]
   151c4:	mov	r1, ip
   151c8:	str	lr, [sp, #8]
   151cc:	mov	r0, r7
   151d0:	ldr	lr, [r4, #40]	; 0x28
   151d4:	str	r3, [sp, #28]
   151d8:	mov	r3, sl
   151dc:	str	lr, [sp, #12]
   151e0:	ldr	lr, [r4, #44]	; 0x2c
   151e4:	str	ip, [sp, #24]
   151e8:	str	lr, [sp, #16]
   151ec:	bl	143cc <close_stdout@@Base+0x4b0>
   151f0:	ldr	ip, [sp, #24]
   151f4:	cmp	ip, r0
   151f8:	bhi	15270 <close_stdout@@Base+0x1354>
   151fc:	ldr	r3, [pc, #188]	; 152c0 <close_stdout@@Base+0x13a4>
   15200:	add	r1, r0, #1
   15204:	str	r1, [r5, r6, lsl #3]
   15208:	add	r3, pc, r3
   1520c:	cmp	r7, r3
   15210:	beq	15224 <close_stdout@@Base+0x1308>
   15214:	mov	r0, r7
   15218:	str	r1, [sp, #24]
   1521c:	bl	1117c <free@plt>
   15220:	ldr	r1, [sp, #24]
   15224:	mov	r0, r1
   15228:	str	r1, [sp, #24]
   1522c:	bl	15f34 <close_stdout@@Base+0x2018>
   15230:	ldr	r3, [sp, #28]
   15234:	ldr	lr, [sp, #32]
   15238:	mov	r2, r9
   1523c:	str	r0, [fp, #4]
   15240:	mov	r7, r0
   15244:	ldr	ip, [r4]
   15248:	str	r3, [sp, #4]
   1524c:	mov	r3, sl
   15250:	str	lr, [sp, #8]
   15254:	str	ip, [sp]
   15258:	ldr	ip, [r4, #40]	; 0x28
   1525c:	ldr	r1, [sp, #24]
   15260:	str	ip, [sp, #12]
   15264:	ldr	ip, [r4, #44]	; 0x2c
   15268:	str	ip, [sp, #16]
   1526c:	bl	143cc <close_stdout@@Base+0x4b0>
   15270:	ldr	r1, [sp, #36]	; 0x24
   15274:	mov	r0, r7
   15278:	str	r1, [r8]
   1527c:	add	sp, sp, #44	; 0x2c
   15280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15284:	lsl	r1, r7, #3
   15288:	mov	r0, #0
   1528c:	str	r3, [sp, #24]
   15290:	bl	15f8c <close_stdout@@Base+0x2070>
   15294:	ldr	r3, [sp, #24]
   15298:	mov	r5, r0
   1529c:	ldm	r3, {r0, r1}
   152a0:	str	r5, [fp]
   152a4:	stm	r5, {r0, r1}
   152a8:	b	15170 <close_stdout@@Base+0x1254>
   152ac:	bl	11404 <abort@plt>
   152b0:	bl	16148 <close_stdout@@Base+0x222c>
   152b4:	andeq	r8, r1, r4, ror r0
   152b8:	andeq	r8, r1, r4, lsr #32
   152bc:	andeq	r7, r1, r0, ror #31
   152c0:	andeq	r8, r1, ip, lsr #32
   152c4:	push	{r4, r5, r6, lr}
   152c8:	mov	r5, r0
   152cc:	bl	11344 <__errno_location@plt>
   152d0:	cmp	r5, #0
   152d4:	mov	r1, #48	; 0x30
   152d8:	mov	r4, r0
   152dc:	ldr	r0, [pc, #24]	; 152fc <close_stdout@@Base+0x13e0>
   152e0:	ldr	r6, [r4]
   152e4:	add	r0, pc, r0
   152e8:	add	r0, r0, #256	; 0x100
   152ec:	movne	r0, r5
   152f0:	bl	16108 <close_stdout@@Base+0x21ec>
   152f4:	str	r6, [r4]
   152f8:	pop	{r4, r5, r6, pc}
   152fc:	andeq	r7, r1, r0, asr pc
   15300:	cmp	r0, #0
   15304:	beq	15310 <close_stdout@@Base+0x13f4>
   15308:	ldr	r0, [r0]
   1530c:	bx	lr
   15310:	ldr	r0, [pc, #12]	; 15324 <close_stdout@@Base+0x1408>
   15314:	add	r0, pc, r0
   15318:	add	r0, r0, #256	; 0x100
   1531c:	ldr	r0, [r0]
   15320:	bx	lr
   15324:	andeq	r7, r1, r0, lsr #30
   15328:	cmp	r0, #0
   1532c:	beq	15338 <close_stdout@@Base+0x141c>
   15330:	str	r1, [r0]
   15334:	bx	lr
   15338:	ldr	r0, [pc, #12]	; 1534c <close_stdout@@Base+0x1430>
   1533c:	add	r0, pc, r0
   15340:	add	r0, r0, #256	; 0x100
   15344:	str	r1, [r0]
   15348:	bx	lr
   1534c:	strdeq	r7, [r1], -r8
   15350:	cmp	r0, #0
   15354:	movne	r3, r0
   15358:	beq	15388 <close_stdout@@Base+0x146c>
   1535c:	lsr	ip, r1, #5
   15360:	and	r1, r1, #31
   15364:	add	r3, r3, ip, lsl #2
   15368:	ldr	ip, [r3, #8]
   1536c:	lsr	r0, ip, r1
   15370:	eor	r2, r0, r2
   15374:	and	r0, r0, #1
   15378:	and	r2, r2, #1
   1537c:	eor	ip, ip, r2, lsl r1
   15380:	str	ip, [r3, #8]
   15384:	bx	lr
   15388:	ldr	r3, [pc, #8]	; 15398 <close_stdout@@Base+0x147c>
   1538c:	add	r3, pc, r3
   15390:	add	r3, r3, #256	; 0x100
   15394:	b	1535c <close_stdout@@Base+0x1440>
   15398:	andeq	r7, r1, r8, lsr #29
   1539c:	subs	r3, r0, #0
   153a0:	beq	153b0 <close_stdout@@Base+0x1494>
   153a4:	ldr	r0, [r3, #4]
   153a8:	str	r1, [r3, #4]
   153ac:	bx	lr
   153b0:	ldr	r3, [pc, #8]	; 153c0 <close_stdout@@Base+0x14a4>
   153b4:	add	r3, pc, r3
   153b8:	add	r3, r3, #256	; 0x100
   153bc:	b	153a4 <close_stdout@@Base+0x1488>
   153c0:	andeq	r7, r1, r0, lsl #29
   153c4:	cmp	r0, #0
   153c8:	push	{r3, lr}
   153cc:	beq	153f0 <close_stdout@@Base+0x14d4>
   153d0:	cmp	r2, #0
   153d4:	cmpne	r1, #0
   153d8:	mov	r3, #8
   153dc:	strne	r1, [r0, #40]	; 0x28
   153e0:	str	r3, [r0]
   153e4:	strne	r2, [r0, #44]	; 0x2c
   153e8:	popne	{r3, pc}
   153ec:	bl	11404 <abort@plt>
   153f0:	ldr	r0, [pc, #8]	; 15400 <close_stdout@@Base+0x14e4>
   153f4:	add	r0, pc, r0
   153f8:	add	r0, r0, #256	; 0x100
   153fc:	b	153d0 <close_stdout@@Base+0x14b4>
   15400:	andeq	r7, r1, r0, asr #28
   15404:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15408:	sub	sp, sp, #24
   1540c:	mov	r7, r0
   15410:	mov	sl, r1
   15414:	ldr	r4, [sp, #56]	; 0x38
   15418:	mov	r9, r2
   1541c:	mov	r8, r3
   15420:	cmp	r4, #0
   15424:	beq	15478 <close_stdout@@Base+0x155c>
   15428:	bl	11344 <__errno_location@plt>
   1542c:	ldr	r3, [r4]
   15430:	add	lr, r4, #8
   15434:	mov	r1, sl
   15438:	mov	r2, r9
   1543c:	ldr	r6, [r0]
   15440:	mov	r5, r0
   15444:	str	r3, [sp]
   15448:	mov	r0, r7
   1544c:	ldr	ip, [r4, #4]
   15450:	mov	r3, r8
   15454:	stmib	sp, {ip, lr}
   15458:	ldr	ip, [r4, #40]	; 0x28
   1545c:	str	ip, [sp, #12]
   15460:	ldr	ip, [r4, #44]	; 0x2c
   15464:	str	ip, [sp, #16]
   15468:	bl	143cc <close_stdout@@Base+0x4b0>
   1546c:	str	r6, [r5]
   15470:	add	sp, sp, #24
   15474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15478:	ldr	r4, [pc, #8]	; 15488 <close_stdout@@Base+0x156c>
   1547c:	add	r4, pc, r4
   15480:	add	r4, r4, #256	; 0x100
   15484:	b	15428 <close_stdout@@Base+0x150c>
   15488:			; <UNDEFINED> instruction: 0x00017db8
   1548c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15490:	subs	r4, r3, #0
   15494:	sub	sp, sp, #36	; 0x24
   15498:	mov	r7, r0
   1549c:	mov	r6, r1
   154a0:	mov	r5, r2
   154a4:	beq	15560 <close_stdout@@Base+0x1644>
   154a8:	bl	11344 <__errno_location@plt>
   154ac:	ldr	r3, [r4]
   154b0:	ldr	sl, [r4, #4]
   154b4:	add	r9, r4, #8
   154b8:	mov	r8, r0
   154bc:	mov	r0, #0
   154c0:	ldr	r2, [r8]
   154c4:	cmp	r5, r0
   154c8:	orreq	sl, sl, #1
   154cc:	str	r9, [sp, #8]
   154d0:	mov	r1, r0
   154d4:	stm	sp, {r3, sl}
   154d8:	mov	r3, r6
   154dc:	ldr	ip, [r4, #40]	; 0x28
   154e0:	str	r2, [sp, #28]
   154e4:	mov	r2, r7
   154e8:	str	ip, [sp, #12]
   154ec:	ldr	ip, [r4, #44]	; 0x2c
   154f0:	str	ip, [sp, #16]
   154f4:	bl	143cc <close_stdout@@Base+0x4b0>
   154f8:	add	r1, r0, #1
   154fc:	mov	fp, r0
   15500:	str	r1, [sp, #24]
   15504:	mov	r0, r1
   15508:	bl	15f34 <close_stdout@@Base+0x2018>
   1550c:	ldr	lr, [r4]
   15510:	str	sl, [sp, #4]
   15514:	mov	r3, r6
   15518:	str	r9, [sp, #8]
   1551c:	mov	r2, r7
   15520:	str	lr, [sp]
   15524:	ldr	lr, [r4, #40]	; 0x28
   15528:	ldr	r1, [sp, #24]
   1552c:	str	lr, [sp, #12]
   15530:	ldr	lr, [r4, #44]	; 0x2c
   15534:	str	lr, [sp, #16]
   15538:	str	r0, [sp, #24]
   1553c:	bl	143cc <close_stdout@@Base+0x4b0>
   15540:	ldr	r3, [sp, #28]
   15544:	cmp	r5, #0
   15548:	str	r3, [r8]
   1554c:	ldr	ip, [sp, #24]
   15550:	strne	fp, [r5]
   15554:	mov	r0, ip
   15558:	add	sp, sp, #36	; 0x24
   1555c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15560:	ldr	r4, [pc, #8]	; 15570 <close_stdout@@Base+0x1654>
   15564:	add	r4, pc, r4
   15568:	add	r4, r4, #256	; 0x100
   1556c:	b	154a8 <close_stdout@@Base+0x158c>
   15570:	ldrdeq	r7, [r1], -r0
   15574:	mov	r3, r2
   15578:	mov	r2, #0
   1557c:	b	1548c <close_stdout@@Base+0x1570>
   15580:	ldr	r2, [pc, #152]	; 15620 <close_stdout@@Base+0x1704>
   15584:	push	{r3, r4, r5, r6, r7, lr}
   15588:	add	r2, pc, r2
   1558c:	ldr	r3, [pc, #144]	; 15624 <close_stdout@@Base+0x1708>
   15590:	ldr	r6, [r2]
   15594:	add	r3, pc, r3
   15598:	cmp	r6, #1
   1559c:	ldr	r7, [r3]
   155a0:	movhi	r4, #1
   155a4:	movhi	r5, r7
   155a8:	bls	155c4 <close_stdout@@Base+0x16a8>
   155ac:	ldr	r0, [r5, #12]
   155b0:	add	r4, r4, #1
   155b4:	bl	1117c <free@plt>
   155b8:	cmp	r4, r6
   155bc:	add	r5, r5, #8
   155c0:	bne	155ac <close_stdout@@Base+0x1690>
   155c4:	ldr	r4, [pc, #92]	; 15628 <close_stdout@@Base+0x170c>
   155c8:	ldr	r0, [r7, #4]
   155cc:	add	r4, pc, r4
   155d0:	cmp	r0, r4
   155d4:	beq	155ec <close_stdout@@Base+0x16d0>
   155d8:	bl	1117c <free@plt>
   155dc:	ldr	r3, [pc, #72]	; 1562c <close_stdout@@Base+0x1710>
   155e0:	mov	r2, #256	; 0x100
   155e4:	add	r3, pc, r3
   155e8:	stmib	r3, {r2, r4}
   155ec:	ldr	r4, [pc, #60]	; 15630 <close_stdout@@Base+0x1714>
   155f0:	add	r4, pc, r4
   155f4:	add	r5, r4, #4
   155f8:	cmp	r7, r5
   155fc:	beq	1560c <close_stdout@@Base+0x16f0>
   15600:	mov	r0, r7
   15604:	bl	1117c <free@plt>
   15608:	str	r5, [r4]
   1560c:	ldr	r3, [pc, #32]	; 15634 <close_stdout@@Base+0x1718>
   15610:	mov	r2, #1
   15614:	add	r3, pc, r3
   15618:	str	r2, [r3]
   1561c:	pop	{r3, r4, r5, r6, r7, pc}
   15620:	ldrdeq	r7, [r1], -r0
   15624:	strdeq	r7, [r1], -r8
   15628:	andeq	r7, r1, r8, ror #24
   1562c:	andeq	r7, r1, r8, lsr #23
   15630:	muleq	r1, ip, fp
   15634:	andeq	r7, r1, r4, asr #22
   15638:	ldr	r3, [pc, #12]	; 1564c <close_stdout@@Base+0x1730>
   1563c:	mvn	r2, #0
   15640:	add	r3, pc, r3
   15644:	add	r3, r3, #256	; 0x100
   15648:	b	150f4 <close_stdout@@Base+0x11d8>
   1564c:	strdeq	r7, [r1], -r4
   15650:	ldr	r3, [pc, #8]	; 15660 <close_stdout@@Base+0x1744>
   15654:	add	r3, pc, r3
   15658:	add	r3, r3, #256	; 0x100
   1565c:	b	150f4 <close_stdout@@Base+0x11d8>
   15660:	andeq	r7, r1, r0, ror #23
   15664:	mov	r1, r0
   15668:	mov	r0, #0
   1566c:	b	15638 <close_stdout@@Base+0x171c>
   15670:	mov	r2, r1
   15674:	mov	r1, r0
   15678:	mov	r0, #0
   1567c:	b	15650 <close_stdout@@Base+0x1734>
   15680:	ldr	r3, [pc, #92]	; 156e4 <close_stdout@@Base+0x17c8>
   15684:	ldr	ip, [pc, #92]	; 156e8 <close_stdout@@Base+0x17cc>
   15688:	add	r3, pc, r3
   1568c:	push	{r4, r5, r6, r7, lr}
   15690:	sub	sp, sp, #60	; 0x3c
   15694:	ldr	r4, [r3, ip]
   15698:	add	r5, sp, #4
   1569c:	mov	r7, r2
   156a0:	mov	r6, r0
   156a4:	mov	r0, r5
   156a8:	ldr	r3, [r4]
   156ac:	str	r3, [sp, #52]	; 0x34
   156b0:	bl	14214 <close_stdout@@Base+0x2f8>
   156b4:	mov	r3, r5
   156b8:	mvn	r2, #0
   156bc:	mov	r0, r6
   156c0:	mov	r1, r7
   156c4:	bl	150f4 <close_stdout@@Base+0x11d8>
   156c8:	ldr	r2, [sp, #52]	; 0x34
   156cc:	ldr	r3, [r4]
   156d0:	cmp	r2, r3
   156d4:	bne	156e0 <close_stdout@@Base+0x17c4>
   156d8:	add	sp, sp, #60	; 0x3c
   156dc:	pop	{r4, r5, r6, r7, pc}
   156e0:	bl	111c4 <__stack_chk_fail@plt>
   156e4:	andeq	r7, r1, r0, ror r9
   156e8:	andeq	r0, r0, r8, lsl r1
   156ec:	ldr	ip, [pc, #96]	; 15754 <close_stdout@@Base+0x1838>
   156f0:	push	{r4, r5, r6, r7, r8, lr}
   156f4:	add	ip, pc, ip
   156f8:	ldr	lr, [pc, #88]	; 15758 <close_stdout@@Base+0x183c>
   156fc:	sub	sp, sp, #56	; 0x38
   15700:	mov	r8, r3
   15704:	add	r5, sp, #4
   15708:	mov	r7, r2
   1570c:	mov	r6, r0
   15710:	ldr	r4, [ip, lr]
   15714:	mov	r0, r5
   15718:	ldr	r3, [r4]
   1571c:	str	r3, [sp, #52]	; 0x34
   15720:	bl	14214 <close_stdout@@Base+0x2f8>
   15724:	mov	r2, r8
   15728:	mov	r3, r5
   1572c:	mov	r0, r6
   15730:	mov	r1, r7
   15734:	bl	150f4 <close_stdout@@Base+0x11d8>
   15738:	ldr	r2, [sp, #52]	; 0x34
   1573c:	ldr	r3, [r4]
   15740:	cmp	r2, r3
   15744:	bne	15750 <close_stdout@@Base+0x1834>
   15748:	add	sp, sp, #56	; 0x38
   1574c:	pop	{r4, r5, r6, r7, r8, pc}
   15750:	bl	111c4 <__stack_chk_fail@plt>
   15754:	andeq	r7, r1, r4, lsl #18
   15758:	andeq	r0, r0, r8, lsl r1
   1575c:	mov	r2, r1
   15760:	mov	r1, r0
   15764:	mov	r0, #0
   15768:	b	15680 <close_stdout@@Base+0x1764>
   1576c:	mov	ip, r1
   15770:	mov	r3, r2
   15774:	mov	r1, r0
   15778:	mov	r2, ip
   1577c:	mov	r0, #0
   15780:	b	156ec <close_stdout@@Base+0x17d0>
   15784:	push	{r4, r5, r6, r7, r8, lr}
   15788:	mov	r5, r2
   1578c:	ldr	lr, [pc, #136]	; 1581c <close_stdout@@Base+0x1900>
   15790:	mov	r7, r0
   15794:	mov	r6, r1
   15798:	ldr	r4, [pc, #128]	; 15820 <close_stdout@@Base+0x1904>
   1579c:	add	lr, pc, lr
   157a0:	sub	sp, sp, #56	; 0x38
   157a4:	add	lr, lr, #256	; 0x100
   157a8:	ldr	r8, [pc, #116]	; 15824 <close_stdout@@Base+0x1908>
   157ac:	add	r4, pc, r4
   157b0:	add	ip, sp, #4
   157b4:	ldm	lr!, {r0, r1, r2, r3}
   157b8:	ldr	r4, [r4, r8]
   157bc:	stmia	ip!, {r0, r1, r2, r3}
   157c0:	ldm	lr!, {r0, r1, r2, r3}
   157c4:	ldr	r8, [r4]
   157c8:	stmia	ip!, {r0, r1, r2, r3}
   157cc:	ldm	lr, {r0, r1, r2, r3}
   157d0:	str	r8, [sp, #52]	; 0x34
   157d4:	stm	ip, {r0, r1, r2, r3}
   157d8:	mov	r1, r5
   157dc:	add	r5, sp, #4
   157e0:	mov	r2, #1
   157e4:	mov	r0, r5
   157e8:	bl	15350 <close_stdout@@Base+0x1434>
   157ec:	mov	r2, r6
   157f0:	mov	r3, r5
   157f4:	mov	r1, r7
   157f8:	mov	r0, #0
   157fc:	bl	150f4 <close_stdout@@Base+0x11d8>
   15800:	ldr	r2, [sp, #52]	; 0x34
   15804:	ldr	r3, [r4]
   15808:	cmp	r2, r3
   1580c:	bne	15818 <close_stdout@@Base+0x18fc>
   15810:	add	sp, sp, #56	; 0x38
   15814:	pop	{r4, r5, r6, r7, r8, pc}
   15818:	bl	111c4 <__stack_chk_fail@plt>
   1581c:	muleq	r1, r8, sl
   15820:	andeq	r7, r1, ip, asr #16
   15824:	andeq	r0, r0, r8, lsl r1
   15828:	mov	r2, r1
   1582c:	mvn	r1, #0
   15830:	b	15784 <close_stdout@@Base+0x1868>
   15834:	mov	r1, #58	; 0x3a
   15838:	b	15828 <close_stdout@@Base+0x190c>
   1583c:	mov	r2, #58	; 0x3a
   15840:	b	15784 <close_stdout@@Base+0x1868>
   15844:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15848:	mov	r5, r2
   1584c:	ldr	lr, [pc, #144]	; 158e4 <close_stdout@@Base+0x19c8>
   15850:	mov	r8, r0
   15854:	mov	r9, r1
   15858:	mov	r7, r3
   1585c:	add	lr, pc, lr
   15860:	ldr	r4, [pc, #128]	; 158e8 <close_stdout@@Base+0x19cc>
   15864:	add	lr, lr, #256	; 0x100
   15868:	sub	sp, sp, #56	; 0x38
   1586c:	ldr	sl, [pc, #120]	; 158ec <close_stdout@@Base+0x19d0>
   15870:	add	r4, pc, r4
   15874:	ldm	lr!, {r0, r1, r2, r3}
   15878:	add	ip, sp, #4
   1587c:	ldr	r4, [r4, sl]
   15880:	ldr	r6, [sp, #88]	; 0x58
   15884:	stmia	ip!, {r0, r1, r2, r3}
   15888:	ldm	lr!, {r0, r1, r2, r3}
   1588c:	ldr	sl, [r4]
   15890:	stmia	ip!, {r0, r1, r2, r3}
   15894:	ldm	lr, {r0, r1, r2, r3}
   15898:	str	sl, [sp, #52]	; 0x34
   1589c:	stm	ip, {r0, r1, r2, r3}
   158a0:	mov	r2, r5
   158a4:	add	r5, sp, #4
   158a8:	mov	r1, r9
   158ac:	mov	r0, r5
   158b0:	bl	153c4 <close_stdout@@Base+0x14a8>
   158b4:	mov	r2, r6
   158b8:	mov	r3, r5
   158bc:	mov	r0, r8
   158c0:	mov	r1, r7
   158c4:	bl	150f4 <close_stdout@@Base+0x11d8>
   158c8:	ldr	r2, [sp, #52]	; 0x34
   158cc:	ldr	r3, [r4]
   158d0:	cmp	r2, r3
   158d4:	bne	158e0 <close_stdout@@Base+0x19c4>
   158d8:	add	sp, sp, #56	; 0x38
   158dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158e0:	bl	111c4 <__stack_chk_fail@plt>
   158e4:	ldrdeq	r7, [r1], -r8
   158e8:	andeq	r7, r1, r8, lsl #15
   158ec:	andeq	r0, r0, r8, lsl r1
   158f0:	push	{lr}		; (str lr, [sp, #-4]!)
   158f4:	sub	sp, sp, #12
   158f8:	mvn	ip, #0
   158fc:	str	ip, [sp]
   15900:	bl	15844 <close_stdout@@Base+0x1928>
   15904:	add	sp, sp, #12
   15908:	pop	{pc}		; (ldr pc, [sp], #4)
   1590c:	mov	ip, r1
   15910:	mov	r3, r2
   15914:	mov	r1, r0
   15918:	mov	r2, ip
   1591c:	mov	r0, #0
   15920:	b	158f0 <close_stdout@@Base+0x19d4>
   15924:	push	{lr}		; (str lr, [sp, #-4]!)
   15928:	sub	sp, sp, #12
   1592c:	mov	lr, r1
   15930:	mov	ip, r2
   15934:	mov	r1, r0
   15938:	str	r3, [sp]
   1593c:	mov	r2, lr
   15940:	mov	r3, ip
   15944:	mov	r0, #0
   15948:	bl	15844 <close_stdout@@Base+0x1928>
   1594c:	add	sp, sp, #12
   15950:	pop	{pc}		; (ldr pc, [sp], #4)
   15954:	ldr	r3, [pc, #12]	; 15968 <close_stdout@@Base+0x1a4c>
   15958:	ldr	ip, [pc, #12]	; 1596c <close_stdout@@Base+0x1a50>
   1595c:	add	r3, pc, r3
   15960:	ldr	r3, [r3, ip]
   15964:	b	150f4 <close_stdout@@Base+0x11d8>
   15968:	muleq	r1, ip, r6
   1596c:	andeq	r0, r0, r4, lsl r1
   15970:	mov	r2, r1
   15974:	mov	r1, r0
   15978:	mov	r0, #0
   1597c:	b	15954 <close_stdout@@Base+0x1a38>
   15980:	mvn	r2, #0
   15984:	b	15954 <close_stdout@@Base+0x1a38>
   15988:	mov	r1, r0
   1598c:	mov	r0, #0
   15990:	b	15980 <close_stdout@@Base+0x1a64>
   15994:	push	{r4, r5, r6, r7, lr}
   15998:	cmp	r1, #0
   1599c:	sub	sp, sp, #36	; 0x24
   159a0:	ldr	r7, [pc, #896]	; 15d28 <close_stdout@@Base+0x1e0c>
   159a4:	mov	ip, r3
   159a8:	mov	r5, r0
   159ac:	add	r7, pc, r7
   159b0:	ldr	r4, [sp, #56]	; 0x38
   159b4:	ldr	r6, [sp, #60]	; 0x3c
   159b8:	beq	15cfc <close_stdout@@Base+0x1de0>
   159bc:	str	r2, [sp]
   159c0:	mov	r3, r1
   159c4:	ldr	r2, [pc, #864]	; 15d2c <close_stdout@@Base+0x1e10>
   159c8:	mov	r1, #1
   159cc:	str	ip, [sp, #4]
   159d0:	add	r2, pc, r2
   159d4:	bl	1138c <__fprintf_chk@plt>
   159d8:	ldr	r1, [pc, #848]	; 15d30 <close_stdout@@Base+0x1e14>
   159dc:	mov	r2, #5
   159e0:	mov	r0, #0
   159e4:	add	r1, pc, r1
   159e8:	bl	111b8 <dcgettext@plt>
   159ec:	ldr	r2, [pc, #832]	; 15d34 <close_stdout@@Base+0x1e18>
   159f0:	movw	ip, #2013	; 0x7dd
   159f4:	mov	r1, #1
   159f8:	ldr	r2, [r7, r2]
   159fc:	str	ip, [sp]
   15a00:	mov	r3, r0
   15a04:	mov	r0, r5
   15a08:	bl	1138c <__fprintf_chk@plt>
   15a0c:	ldr	r1, [pc, #804]	; 15d38 <close_stdout@@Base+0x1e1c>
   15a10:	mov	r0, #0
   15a14:	mov	r2, #5
   15a18:	add	r1, pc, r1
   15a1c:	bl	111b8 <dcgettext@plt>
   15a20:	mov	r1, r5
   15a24:	bl	11140 <fputs_unlocked@plt>
   15a28:	cmp	r6, #9
   15a2c:	addls	pc, pc, r6, lsl #2
   15a30:	b	15d18 <close_stdout@@Base+0x1dfc>
   15a34:	b	15ac8 <close_stdout@@Base+0x1bac>
   15a38:	b	15acc <close_stdout@@Base+0x1bb0>
   15a3c:	b	15afc <close_stdout@@Base+0x1be0>
   15a40:	b	15b30 <close_stdout@@Base+0x1c14>
   15a44:	b	15b6c <close_stdout@@Base+0x1c50>
   15a48:	b	15bac <close_stdout@@Base+0x1c90>
   15a4c:	b	15bf4 <close_stdout@@Base+0x1cd8>
   15a50:	b	15c44 <close_stdout@@Base+0x1d28>
   15a54:	b	15c9c <close_stdout@@Base+0x1d80>
   15a58:	b	15a5c <close_stdout@@Base+0x1b40>
   15a5c:	ldr	r1, [pc, #728]	; 15d3c <close_stdout@@Base+0x1e20>
   15a60:	mov	r0, #0
   15a64:	add	r1, pc, r1
   15a68:	mov	r2, #5
   15a6c:	bl	111b8 <dcgettext@plt>
   15a70:	ldm	r4, {r3, ip}
   15a74:	mov	r1, #1
   15a78:	str	ip, [sp]
   15a7c:	ldr	ip, [r4, #8]
   15a80:	str	ip, [sp, #4]
   15a84:	ldr	ip, [r4, #12]
   15a88:	str	ip, [sp, #8]
   15a8c:	ldr	ip, [r4, #16]
   15a90:	str	ip, [sp, #12]
   15a94:	ldr	ip, [r4, #20]
   15a98:	str	ip, [sp, #16]
   15a9c:	ldr	ip, [r4, #24]
   15aa0:	str	ip, [sp, #20]
   15aa4:	ldr	ip, [r4, #28]
   15aa8:	str	ip, [sp, #24]
   15aac:	ldr	ip, [r4, #32]
   15ab0:	str	ip, [sp, #28]
   15ab4:	mov	r2, r0
   15ab8:	mov	r0, r5
   15abc:	bl	1138c <__fprintf_chk@plt>
   15ac0:	add	sp, sp, #36	; 0x24
   15ac4:	pop	{r4, r5, r6, r7, pc}
   15ac8:	bl	11404 <abort@plt>
   15acc:	ldr	r1, [pc, #620]	; 15d40 <close_stdout@@Base+0x1e24>
   15ad0:	mov	r2, #5
   15ad4:	mov	r0, #0
   15ad8:	add	r1, pc, r1
   15adc:	bl	111b8 <dcgettext@plt>
   15ae0:	ldr	r3, [r4]
   15ae4:	mov	r1, #1
   15ae8:	mov	r2, r0
   15aec:	mov	r0, r5
   15af0:	add	sp, sp, #36	; 0x24
   15af4:	pop	{r4, r5, r6, r7, lr}
   15af8:	b	1138c <__fprintf_chk@plt>
   15afc:	ldr	r1, [pc, #576]	; 15d44 <close_stdout@@Base+0x1e28>
   15b00:	mov	r2, #5
   15b04:	mov	r0, #0
   15b08:	add	r1, pc, r1
   15b0c:	bl	111b8 <dcgettext@plt>
   15b10:	ldm	r4, {r3, ip}
   15b14:	mov	r1, #1
   15b18:	str	ip, [sp, #56]	; 0x38
   15b1c:	mov	r2, r0
   15b20:	mov	r0, r5
   15b24:	add	sp, sp, #36	; 0x24
   15b28:	pop	{r4, r5, r6, r7, lr}
   15b2c:	b	1138c <__fprintf_chk@plt>
   15b30:	ldr	r1, [pc, #528]	; 15d48 <close_stdout@@Base+0x1e2c>
   15b34:	mov	r2, #5
   15b38:	mov	r0, #0
   15b3c:	add	r1, pc, r1
   15b40:	bl	111b8 <dcgettext@plt>
   15b44:	ldm	r4, {r3, ip}
   15b48:	mov	r1, #1
   15b4c:	str	ip, [sp, #56]	; 0x38
   15b50:	ldr	ip, [r4, #8]
   15b54:	str	ip, [sp, #60]	; 0x3c
   15b58:	mov	r2, r0
   15b5c:	mov	r0, r5
   15b60:	add	sp, sp, #36	; 0x24
   15b64:	pop	{r4, r5, r6, r7, lr}
   15b68:	b	1138c <__fprintf_chk@plt>
   15b6c:	ldr	r1, [pc, #472]	; 15d4c <close_stdout@@Base+0x1e30>
   15b70:	mov	r2, #5
   15b74:	mov	r0, #0
   15b78:	add	r1, pc, r1
   15b7c:	bl	111b8 <dcgettext@plt>
   15b80:	ldm	r4, {r3, ip}
   15b84:	mov	r1, #1
   15b88:	str	ip, [sp]
   15b8c:	ldr	ip, [r4, #8]
   15b90:	str	ip, [sp, #4]
   15b94:	ldr	ip, [r4, #12]
   15b98:	str	ip, [sp, #8]
   15b9c:	mov	r2, r0
   15ba0:	mov	r0, r5
   15ba4:	bl	1138c <__fprintf_chk@plt>
   15ba8:	b	15ac0 <close_stdout@@Base+0x1ba4>
   15bac:	ldr	r1, [pc, #412]	; 15d50 <close_stdout@@Base+0x1e34>
   15bb0:	mov	r2, #5
   15bb4:	mov	r0, #0
   15bb8:	add	r1, pc, r1
   15bbc:	bl	111b8 <dcgettext@plt>
   15bc0:	ldm	r4, {r3, ip}
   15bc4:	mov	r1, #1
   15bc8:	str	ip, [sp]
   15bcc:	ldr	ip, [r4, #8]
   15bd0:	str	ip, [sp, #4]
   15bd4:	ldr	ip, [r4, #12]
   15bd8:	str	ip, [sp, #8]
   15bdc:	ldr	ip, [r4, #16]
   15be0:	str	ip, [sp, #12]
   15be4:	mov	r2, r0
   15be8:	mov	r0, r5
   15bec:	bl	1138c <__fprintf_chk@plt>
   15bf0:	b	15ac0 <close_stdout@@Base+0x1ba4>
   15bf4:	ldr	r1, [pc, #344]	; 15d54 <close_stdout@@Base+0x1e38>
   15bf8:	mov	r2, #5
   15bfc:	mov	r0, #0
   15c00:	add	r1, pc, r1
   15c04:	bl	111b8 <dcgettext@plt>
   15c08:	ldm	r4, {r3, ip}
   15c0c:	mov	r1, #1
   15c10:	str	ip, [sp]
   15c14:	ldr	ip, [r4, #8]
   15c18:	str	ip, [sp, #4]
   15c1c:	ldr	ip, [r4, #12]
   15c20:	str	ip, [sp, #8]
   15c24:	ldr	ip, [r4, #16]
   15c28:	str	ip, [sp, #12]
   15c2c:	ldr	ip, [r4, #20]
   15c30:	str	ip, [sp, #16]
   15c34:	mov	r2, r0
   15c38:	mov	r0, r5
   15c3c:	bl	1138c <__fprintf_chk@plt>
   15c40:	b	15ac0 <close_stdout@@Base+0x1ba4>
   15c44:	ldr	r1, [pc, #268]	; 15d58 <close_stdout@@Base+0x1e3c>
   15c48:	mov	r2, #5
   15c4c:	mov	r0, #0
   15c50:	add	r1, pc, r1
   15c54:	bl	111b8 <dcgettext@plt>
   15c58:	ldm	r4, {r3, ip}
   15c5c:	mov	r1, #1
   15c60:	str	ip, [sp]
   15c64:	ldr	ip, [r4, #8]
   15c68:	str	ip, [sp, #4]
   15c6c:	ldr	ip, [r4, #12]
   15c70:	str	ip, [sp, #8]
   15c74:	ldr	ip, [r4, #16]
   15c78:	str	ip, [sp, #12]
   15c7c:	ldr	ip, [r4, #20]
   15c80:	str	ip, [sp, #16]
   15c84:	ldr	ip, [r4, #24]
   15c88:	str	ip, [sp, #20]
   15c8c:	mov	r2, r0
   15c90:	mov	r0, r5
   15c94:	bl	1138c <__fprintf_chk@plt>
   15c98:	b	15ac0 <close_stdout@@Base+0x1ba4>
   15c9c:	ldr	r1, [pc, #184]	; 15d5c <close_stdout@@Base+0x1e40>
   15ca0:	mov	r2, #5
   15ca4:	mov	r0, #0
   15ca8:	add	r1, pc, r1
   15cac:	bl	111b8 <dcgettext@plt>
   15cb0:	ldm	r4, {r3, ip}
   15cb4:	mov	r1, #1
   15cb8:	str	ip, [sp]
   15cbc:	ldr	ip, [r4, #8]
   15cc0:	str	ip, [sp, #4]
   15cc4:	ldr	ip, [r4, #12]
   15cc8:	str	ip, [sp, #8]
   15ccc:	ldr	ip, [r4, #16]
   15cd0:	str	ip, [sp, #12]
   15cd4:	ldr	ip, [r4, #20]
   15cd8:	str	ip, [sp, #16]
   15cdc:	ldr	ip, [r4, #24]
   15ce0:	str	ip, [sp, #20]
   15ce4:	ldr	ip, [r4, #28]
   15ce8:	str	ip, [sp, #24]
   15cec:	mov	r2, r0
   15cf0:	mov	r0, r5
   15cf4:	bl	1138c <__fprintf_chk@plt>
   15cf8:	b	15ac0 <close_stdout@@Base+0x1ba4>
   15cfc:	str	r3, [sp]
   15d00:	mov	r3, r2
   15d04:	ldr	r2, [pc, #84]	; 15d60 <close_stdout@@Base+0x1e44>
   15d08:	mov	r1, #1
   15d0c:	add	r2, pc, r2
   15d10:	bl	1138c <__fprintf_chk@plt>
   15d14:	b	159d8 <close_stdout@@Base+0x1abc>
   15d18:	ldr	r1, [pc, #68]	; 15d64 <close_stdout@@Base+0x1e48>
   15d1c:	mov	r0, #0
   15d20:	add	r1, pc, r1
   15d24:	b	15a68 <close_stdout@@Base+0x1b4c>
   15d28:	andeq	r7, r1, ip, asr #12
   15d2c:	andeq	r6, r0, ip, asr #7
   15d30:	andeq	r6, r0, ip, asr #7
   15d34:	andeq	r0, r0, r4, asr #2
   15d38:	muleq	r0, ip, r3
   15d3c:	andeq	r6, r0, r8, lsr #10
   15d40:	andeq	r6, r0, r8, lsr #7
   15d44:	andeq	r6, r0, r8, lsl #7
   15d48:	andeq	r6, r0, ip, ror #6
   15d4c:	andeq	r6, r0, ip, asr #6
   15d50:	andeq	r6, r0, ip, lsr #6
   15d54:	andeq	r6, r0, r8, lsl #6
   15d58:	andeq	r6, r0, r0, ror #5
   15d5c:			; <UNDEFINED> instruction: 0x000062b4
   15d60:	muleq	r0, ip, r0
   15d64:	andeq	r6, r0, r0, lsr #5
   15d68:	push	{r4, r5, lr}
   15d6c:	sub	sp, sp, #12
   15d70:	ldr	r5, [sp, #24]
   15d74:	ldr	ip, [r5]
   15d78:	cmp	ip, #0
   15d7c:	beq	15d98 <close_stdout@@Base+0x1e7c>
   15d80:	mov	lr, r5
   15d84:	mov	ip, #0
   15d88:	ldr	r4, [lr, #4]!
   15d8c:	add	ip, ip, #1
   15d90:	cmp	r4, #0
   15d94:	bne	15d88 <close_stdout@@Base+0x1e6c>
   15d98:	stm	sp, {r5, ip}
   15d9c:	bl	15994 <close_stdout@@Base+0x1a78>
   15da0:	add	sp, sp, #12
   15da4:	pop	{r4, r5, pc}
   15da8:	push	{r4, r5, r6, r7, lr}
   15dac:	sub	sp, sp, #60	; 0x3c
   15db0:	ldr	r4, [pc, #100]	; 15e1c <close_stdout@@Base+0x1f00>
   15db4:	mov	ip, #0
   15db8:	ldr	r5, [pc, #96]	; 15e20 <close_stdout@@Base+0x1f04>
   15dbc:	mov	lr, ip
   15dc0:	add	r4, pc, r4
   15dc4:	ldr	r6, [sp, #80]	; 0x50
   15dc8:	ldr	r7, [r4, r5]
   15dcc:	add	r5, sp, #12
   15dd0:	ldr	r4, [r7]
   15dd4:	str	r4, [sp, #52]	; 0x34
   15dd8:	ldr	r4, [r6, ip]
   15ddc:	cmp	r4, #0
   15de0:	str	r4, [r5, ip]
   15de4:	beq	15df8 <close_stdout@@Base+0x1edc>
   15de8:	add	lr, lr, #1
   15dec:	add	ip, ip, #4
   15df0:	cmp	lr, #10
   15df4:	bne	15dd8 <close_stdout@@Base+0x1ebc>
   15df8:	stm	sp, {r5, lr}
   15dfc:	bl	15994 <close_stdout@@Base+0x1a78>
   15e00:	ldr	r2, [sp, #52]	; 0x34
   15e04:	ldr	r3, [r7]
   15e08:	cmp	r2, r3
   15e0c:	bne	15e18 <close_stdout@@Base+0x1efc>
   15e10:	add	sp, sp, #60	; 0x3c
   15e14:	pop	{r4, r5, r6, r7, pc}
   15e18:	bl	111c4 <__stack_chk_fail@plt>
   15e1c:	andeq	r7, r1, r8, lsr r2
   15e20:	andeq	r0, r0, r8, lsl r1
   15e24:	push	{r3}		; (str r3, [sp, #-4]!)
   15e28:	push	{r4, lr}
   15e2c:	sub	sp, sp, #20
   15e30:	ldr	lr, [pc, #72]	; 15e80 <close_stdout@@Base+0x1f64>
   15e34:	add	ip, sp, #32
   15e38:	ldr	r4, [pc, #68]	; 15e84 <close_stdout@@Base+0x1f68>
   15e3c:	add	lr, pc, lr
   15e40:	ldr	r3, [sp, #28]
   15e44:	ldr	r4, [lr, r4]
   15e48:	str	ip, [sp]
   15e4c:	str	ip, [sp, #8]
   15e50:	ldr	ip, [r4]
   15e54:	str	ip, [sp, #12]
   15e58:	bl	15da8 <close_stdout@@Base+0x1e8c>
   15e5c:	ldr	r2, [sp, #12]
   15e60:	ldr	r3, [r4]
   15e64:	cmp	r2, r3
   15e68:	bne	15e7c <close_stdout@@Base+0x1f60>
   15e6c:	add	sp, sp, #20
   15e70:	pop	{r4, lr}
   15e74:	add	sp, sp, #4
   15e78:	bx	lr
   15e7c:	bl	111c4 <__stack_chk_fail@plt>
   15e80:			; <UNDEFINED> instruction: 0x000171bc
   15e84:	andeq	r0, r0, r8, lsl r1
   15e88:	ldr	r1, [pc, #132]	; 15f14 <close_stdout@@Base+0x1ff8>
   15e8c:	mov	r2, #5
   15e90:	push	{r4, lr}
   15e94:	add	r1, pc, r1
   15e98:	mov	r0, #0
   15e9c:	ldr	r4, [pc, #116]	; 15f18 <close_stdout@@Base+0x1ffc>
   15ea0:	bl	111b8 <dcgettext@plt>
   15ea4:	ldr	r2, [pc, #112]	; 15f1c <close_stdout@@Base+0x2000>
   15ea8:	add	r4, pc, r4
   15eac:	add	r2, pc, r2
   15eb0:	mov	r1, r0
   15eb4:	mov	r0, #1
   15eb8:	bl	11374 <__printf_chk@plt>
   15ebc:	ldr	r1, [pc, #92]	; 15f20 <close_stdout@@Base+0x2004>
   15ec0:	mov	r2, #5
   15ec4:	mov	r0, #0
   15ec8:	add	r1, pc, r1
   15ecc:	bl	111b8 <dcgettext@plt>
   15ed0:	ldr	r2, [pc, #76]	; 15f24 <close_stdout@@Base+0x2008>
   15ed4:	ldr	r3, [pc, #76]	; 15f28 <close_stdout@@Base+0x200c>
   15ed8:	add	r2, pc, r2
   15edc:	add	r3, pc, r3
   15ee0:	mov	r1, r0
   15ee4:	mov	r0, #1
   15ee8:	bl	11374 <__printf_chk@plt>
   15eec:	ldr	r1, [pc, #56]	; 15f2c <close_stdout@@Base+0x2010>
   15ef0:	mov	r0, #0
   15ef4:	mov	r2, #5
   15ef8:	add	r1, pc, r1
   15efc:	bl	111b8 <dcgettext@plt>
   15f00:	ldr	r3, [pc, #40]	; 15f30 <close_stdout@@Base+0x2014>
   15f04:	ldr	r3, [r4, r3]
   15f08:	pop	{r4, lr}
   15f0c:	ldr	r1, [r3]
   15f10:	b	11140 <fputs_unlocked@plt>
   15f14:	andeq	r6, r0, r8, ror #2
   15f18:	andeq	r7, r1, r0, asr r1
   15f1c:	andeq	r6, r0, r8, ror #2
   15f20:	andeq	r6, r0, r4, ror #2
   15f24:			; <UNDEFINED> instruction: 0x000056bc
   15f28:	andeq	r5, r0, r8, asr #13
   15f2c:	andeq	r6, r0, r8, asr #2
   15f30:	andeq	r0, r0, r4, lsr r1
   15f34:	push	{r4, lr}
   15f38:	mov	r4, r0
   15f3c:	bl	1129c <malloc@plt>
   15f40:	rsbs	r3, r0, #1
   15f44:	movcc	r3, #0
   15f48:	cmp	r4, #0
   15f4c:	moveq	r3, #0
   15f50:	cmp	r3, #0
   15f54:	popeq	{r4, pc}
   15f58:	bl	16148 <close_stdout@@Base+0x222c>
   15f5c:	push	{r3, r4, r5, lr}
   15f60:	mov	r4, r0
   15f64:	mvn	r0, #0
   15f68:	mov	r5, r1
   15f6c:	bl	19160 <close_stdout@@Base+0x5244>
   15f70:	cmp	r0, r4
   15f74:	bcc	15f84 <close_stdout@@Base+0x2068>
   15f78:	mul	r0, r4, r5
   15f7c:	pop	{r3, r4, r5, lr}
   15f80:	b	15f34 <close_stdout@@Base+0x2018>
   15f84:	bl	16148 <close_stdout@@Base+0x222c>
   15f88:	b	15f34 <close_stdout@@Base+0x2018>
   15f8c:	rsbs	r3, r1, #1
   15f90:	push	{r4, lr}
   15f94:	movcc	r3, #0
   15f98:	cmp	r0, #0
   15f9c:	mov	r4, r1
   15fa0:	moveq	r3, #0
   15fa4:	cmp	r3, #0
   15fa8:	bne	15fcc <close_stdout@@Base+0x20b0>
   15fac:	bl	111e8 <realloc@plt>
   15fb0:	rsbs	r3, r0, #1
   15fb4:	movcc	r3, #0
   15fb8:	cmp	r4, #0
   15fbc:	moveq	r3, #0
   15fc0:	cmp	r3, #0
   15fc4:	popeq	{r4, pc}
   15fc8:	bl	16148 <close_stdout@@Base+0x222c>
   15fcc:	bl	1117c <free@plt>
   15fd0:	mov	r0, #0
   15fd4:	pop	{r4, pc}
   15fd8:	push	{r4, r5, r6, lr}
   15fdc:	mov	r5, r1
   15fe0:	mov	r6, r0
   15fe4:	mov	r1, r2
   15fe8:	mvn	r0, #0
   15fec:	mov	r4, r2
   15ff0:	bl	19160 <close_stdout@@Base+0x5244>
   15ff4:	cmp	r0, r5
   15ff8:	bcc	1600c <close_stdout@@Base+0x20f0>
   15ffc:	mov	r0, r6
   16000:	mul	r1, r5, r4
   16004:	pop	{r4, r5, r6, lr}
   16008:	b	15f8c <close_stdout@@Base+0x2070>
   1600c:	bl	16148 <close_stdout@@Base+0x222c>
   16010:	push	{r3, r4, r5, r6, r7, lr}
   16014:	subs	r7, r0, #0
   16018:	mov	r5, r1
   1601c:	mov	r6, r2
   16020:	ldr	r4, [r1]
   16024:	beq	1605c <close_stdout@@Base+0x2140>
   16028:	movw	r0, #43690	; 0xaaaa
   1602c:	mov	r1, r2
   16030:	bfi	r0, r0, #16, #16
   16034:	bl	19160 <close_stdout@@Base+0x5244>
   16038:	cmp	r4, r0
   1603c:	addcc	r3, r4, #1
   16040:	addcc	r4, r4, r3, lsr #1
   16044:	bcs	16080 <close_stdout@@Base+0x2164>
   16048:	str	r4, [r5]
   1604c:	mov	r0, r7
   16050:	mul	r1, r6, r4
   16054:	pop	{r3, r4, r5, r6, r7, lr}
   16058:	b	15f8c <close_stdout@@Base+0x2070>
   1605c:	cmp	r4, #0
   16060:	bne	16048 <close_stdout@@Base+0x212c>
   16064:	mov	r0, #64	; 0x40
   16068:	mov	r1, r2
   1606c:	bl	19160 <close_stdout@@Base+0x5244>
   16070:	cmp	r0, #0
   16074:	movne	r4, r0
   16078:	addeq	r4, r0, #1
   1607c:	b	16048 <close_stdout@@Base+0x212c>
   16080:	bl	16148 <close_stdout@@Base+0x222c>
   16084:	cmp	r0, #0
   16088:	push	{r3, lr}
   1608c:	ldr	r3, [r1]
   16090:	beq	160bc <close_stdout@@Base+0x21a0>
   16094:	movw	r2, #43689	; 0xaaa9
   16098:	movt	r2, #43690	; 0xaaaa
   1609c:	cmp	r3, r2
   160a0:	addls	r2, r3, #1
   160a4:	addls	r3, r3, r2, lsr #1
   160a8:	bhi	160d4 <close_stdout@@Base+0x21b8>
   160ac:	str	r3, [r1]
   160b0:	mov	r1, r3
   160b4:	pop	{r3, lr}
   160b8:	b	15f8c <close_stdout@@Base+0x2070>
   160bc:	cmp	r3, #0
   160c0:	moveq	r3, #64	; 0x40
   160c4:	str	r3, [r1]
   160c8:	mov	r1, r3
   160cc:	pop	{r3, lr}
   160d0:	b	15f8c <close_stdout@@Base+0x2070>
   160d4:	bl	16148 <close_stdout@@Base+0x222c>
   160d8:	push	{r4, lr}
   160dc:	mov	r4, r0
   160e0:	bl	15f34 <close_stdout@@Base+0x2018>
   160e4:	mov	r2, r4
   160e8:	mov	r1, #0
   160ec:	pop	{r4, lr}
   160f0:	b	1135c <memset@plt>
   160f4:	push	{r3, lr}
   160f8:	bl	11134 <calloc@plt>
   160fc:	cmp	r0, #0
   16100:	popne	{r3, pc}
   16104:	bl	16148 <close_stdout@@Base+0x222c>
   16108:	push	{r3, r4, r5, lr}
   1610c:	mov	r4, r1
   16110:	mov	r5, r0
   16114:	mov	r0, r1
   16118:	bl	15f34 <close_stdout@@Base+0x2018>
   1611c:	mov	r1, r5
   16120:	mov	r2, r4
   16124:	pop	{r3, r4, r5, lr}
   16128:	b	11194 <memcpy@plt>
   1612c:	push	{r4, lr}
   16130:	mov	r4, r0
   16134:	bl	112fc <strlen@plt>
   16138:	add	r1, r0, #1
   1613c:	mov	r0, r4
   16140:	pop	{r4, lr}
   16144:	b	16108 <close_stdout@@Base+0x21ec>
   16148:	ldr	r3, [pc, #64]	; 16190 <close_stdout@@Base+0x2274>
   1614c:	mov	r2, #5
   16150:	ldr	ip, [pc, #60]	; 16194 <close_stdout@@Base+0x2278>
   16154:	mov	r0, #0
   16158:	add	r3, pc, r3
   1615c:	ldr	r1, [pc, #52]	; 16198 <close_stdout@@Base+0x227c>
   16160:	push	{r4, lr}
   16164:	add	r1, pc, r1
   16168:	ldr	r3, [r3, ip]
   1616c:	ldr	r4, [r3]
   16170:	bl	111b8 <dcgettext@plt>
   16174:	ldr	r2, [pc, #32]	; 1619c <close_stdout@@Base+0x2280>
   16178:	mov	r1, #0
   1617c:	add	r2, pc, r2
   16180:	mov	r3, r0
   16184:	mov	r0, r4
   16188:	bl	11278 <error@plt>
   1618c:	bl	11404 <abort@plt>
   16190:	andeq	r6, r1, r0, lsr #29
   16194:	andeq	r0, r0, r8, lsr r1
   16198:	andeq	r5, r0, ip, asr #30
   1619c:	andeq	r5, r0, ip, asr fp
   161a0:	ldr	ip, [pc, #1584]	; 167d8 <close_stdout@@Base+0x28bc>
   161a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161a8:	mov	r7, r2
   161ac:	ldr	r2, [pc, #1576]	; 167dc <close_stdout@@Base+0x28c0>
   161b0:	add	ip, pc, ip
   161b4:	mov	r9, r3
   161b8:	sub	sp, sp, #28
   161bc:	cmp	r7, #36	; 0x24
   161c0:	mov	r4, r1
   161c4:	ldr	r2, [ip, r2]
   161c8:	mov	r1, ip
   161cc:	mov	r5, r0
   161d0:	ldr	r8, [sp, #64]	; 0x40
   161d4:	ldr	r3, [r2]
   161d8:	str	r2, [sp, #12]
   161dc:	str	r3, [sp, #20]
   161e0:	bhi	167b8 <close_stdout@@Base+0x289c>
   161e4:	cmp	r4, #0
   161e8:	mov	fp, #0
   161ec:	addeq	r4, sp, #16
   161f0:	bl	11344 <__errno_location@plt>
   161f4:	mov	r2, r7
   161f8:	mov	r1, r4
   161fc:	mov	sl, r0
   16200:	mov	r0, r5
   16204:	str	fp, [sl]
   16208:	bl	11164 <strtol@plt>
   1620c:	ldr	r7, [r4]
   16210:	cmp	r7, r5
   16214:	mov	r6, r0
   16218:	beq	163b0 <close_stdout@@Base+0x2494>
   1621c:	ldr	fp, [sl]
   16220:	cmp	fp, #0
   16224:	bne	16260 <close_stdout@@Base+0x2344>
   16228:	cmp	r8, #0
   1622c:	beq	1623c <close_stdout@@Base+0x2320>
   16230:	ldrb	r5, [r7]
   16234:	cmp	r5, #0
   16238:	bne	16270 <close_stdout@@Base+0x2354>
   1623c:	mov	r0, fp
   16240:	str	r6, [r9]
   16244:	ldr	r1, [sp, #12]
   16248:	ldr	r2, [sp, #20]
   1624c:	ldr	r3, [r1]
   16250:	cmp	r2, r3
   16254:	bne	167b4 <close_stdout@@Base+0x2898>
   16258:	add	sp, sp, #28
   1625c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16260:	cmp	fp, #34	; 0x22
   16264:	beq	163e0 <close_stdout@@Base+0x24c4>
   16268:	mov	r0, #4
   1626c:	b	16244 <close_stdout@@Base+0x2328>
   16270:	mov	r0, r8
   16274:	mov	r1, r5
   16278:	bl	11308 <strchr@plt>
   1627c:	cmp	r0, #0
   16280:	beq	163a4 <close_stdout@@Base+0x2488>
   16284:	mov	r0, r8
   16288:	mov	r1, #48	; 0x30
   1628c:	bl	11308 <strchr@plt>
   16290:	cmp	r0, #0
   16294:	beq	162b4 <close_stdout@@Base+0x2398>
   16298:	ldrb	r2, [r7, #1]
   1629c:	cmp	r2, #68	; 0x44
   162a0:	beq	163e8 <close_stdout@@Base+0x24cc>
   162a4:	cmp	r2, #105	; 0x69
   162a8:	beq	16774 <close_stdout@@Base+0x2858>
   162ac:	cmp	r2, #66	; 0x42
   162b0:	beq	163e8 <close_stdout@@Base+0x24cc>
   162b4:	mov	sl, #1
   162b8:	mov	r8, #1024	; 0x400
   162bc:	sub	r5, r5, #66	; 0x42
   162c0:	cmp	r5, #53	; 0x35
   162c4:	addls	pc, pc, r5, lsl #2
   162c8:	b	163a4 <close_stdout@@Base+0x2488>
   162cc:	b	16518 <close_stdout@@Base+0x25fc>
   162d0:	b	163a4 <close_stdout@@Base+0x2488>
   162d4:	b	163a4 <close_stdout@@Base+0x2488>
   162d8:	b	164b0 <close_stdout@@Base+0x2594>
   162dc:	b	163a4 <close_stdout@@Base+0x2488>
   162e0:	b	16448 <close_stdout@@Base+0x252c>
   162e4:	b	163a4 <close_stdout@@Base+0x2488>
   162e8:	b	163a4 <close_stdout@@Base+0x2488>
   162ec:	b	163a4 <close_stdout@@Base+0x2488>
   162f0:	b	16414 <close_stdout@@Base+0x24f8>
   162f4:	b	163a4 <close_stdout@@Base+0x2488>
   162f8:	b	16714 <close_stdout@@Base+0x27f8>
   162fc:	b	163a4 <close_stdout@@Base+0x2488>
   16300:	b	163a4 <close_stdout@@Base+0x2488>
   16304:	b	166ac <close_stdout@@Base+0x2790>
   16308:	b	163a4 <close_stdout@@Base+0x2488>
   1630c:	b	163a4 <close_stdout@@Base+0x2488>
   16310:	b	163a4 <close_stdout@@Base+0x2488>
   16314:	b	16644 <close_stdout@@Base+0x2728>
   16318:	b	163a4 <close_stdout@@Base+0x2488>
   1631c:	b	163a4 <close_stdout@@Base+0x2488>
   16320:	b	163a4 <close_stdout@@Base+0x2488>
   16324:	b	163a4 <close_stdout@@Base+0x2488>
   16328:	b	165dc <close_stdout@@Base+0x26c0>
   1632c:	b	16574 <close_stdout@@Base+0x2658>
   16330:	b	163a4 <close_stdout@@Base+0x2488>
   16334:	b	163a4 <close_stdout@@Base+0x2488>
   16338:	b	163a4 <close_stdout@@Base+0x2488>
   1633c:	b	163a4 <close_stdout@@Base+0x2488>
   16340:	b	163a4 <close_stdout@@Base+0x2488>
   16344:	b	163a4 <close_stdout@@Base+0x2488>
   16348:	b	163a4 <close_stdout@@Base+0x2488>
   1634c:	b	16558 <close_stdout@@Base+0x263c>
   16350:	b	163f4 <close_stdout@@Base+0x24d8>
   16354:	b	163a4 <close_stdout@@Base+0x2488>
   16358:	b	163a4 <close_stdout@@Base+0x2488>
   1635c:	b	163a4 <close_stdout@@Base+0x2488>
   16360:	b	16448 <close_stdout@@Base+0x252c>
   16364:	b	163a4 <close_stdout@@Base+0x2488>
   16368:	b	163a4 <close_stdout@@Base+0x2488>
   1636c:	b	163a4 <close_stdout@@Base+0x2488>
   16370:	b	16414 <close_stdout@@Base+0x24f8>
   16374:	b	163a4 <close_stdout@@Base+0x2488>
   16378:	b	16714 <close_stdout@@Base+0x27f8>
   1637c:	b	163a4 <close_stdout@@Base+0x2488>
   16380:	b	163a4 <close_stdout@@Base+0x2488>
   16384:	b	163a4 <close_stdout@@Base+0x2488>
   16388:	b	163a4 <close_stdout@@Base+0x2488>
   1638c:	b	163a4 <close_stdout@@Base+0x2488>
   16390:	b	163a4 <close_stdout@@Base+0x2488>
   16394:	b	16644 <close_stdout@@Base+0x2728>
   16398:	b	163a4 <close_stdout@@Base+0x2488>
   1639c:	b	163a4 <close_stdout@@Base+0x2488>
   163a0:	b	1653c <close_stdout@@Base+0x2620>
   163a4:	str	r6, [r9]
   163a8:	orr	r0, fp, #2
   163ac:	b	16244 <close_stdout@@Base+0x2328>
   163b0:	cmp	r8, fp
   163b4:	beq	16268 <close_stdout@@Base+0x234c>
   163b8:	ldrb	r5, [r5]
   163bc:	cmp	r5, fp
   163c0:	beq	16268 <close_stdout@@Base+0x234c>
   163c4:	mov	r0, r8
   163c8:	mov	r1, r5
   163cc:	bl	11308 <strchr@plt>
   163d0:	cmp	r0, fp
   163d4:	movne	r6, #1
   163d8:	bne	16284 <close_stdout@@Base+0x2368>
   163dc:	b	16268 <close_stdout@@Base+0x234c>
   163e0:	mov	fp, #1
   163e4:	b	16228 <close_stdout@@Base+0x230c>
   163e8:	mov	sl, #2
   163ec:	mov	r8, #1000	; 0x3e8
   163f0:	b	162bc <close_stdout@@Base+0x23a0>
   163f4:	mov	r5, #0
   163f8:	add	r2, r7, sl
   163fc:	str	r2, [r4]
   16400:	ldrb	r2, [r7, sl]
   16404:	orr	fp, fp, r5
   16408:	cmp	r2, #0
   1640c:	orrne	fp, fp, #2
   16410:	b	1623c <close_stdout@@Base+0x2320>
   16414:	mov	r0, #-2147483648	; 0x80000000
   16418:	mov	r1, r8
   1641c:	bl	1936c <close_stdout@@Base+0x5450>
   16420:	cmp	r6, r0
   16424:	blt	1678c <close_stdout@@Base+0x2870>
   16428:	mvn	r0, #-2147483648	; 0x80000000
   1642c:	mov	r1, r8
   16430:	bl	1936c <close_stdout@@Base+0x5450>
   16434:	cmp	r6, r0
   16438:	bgt	16530 <close_stdout@@Base+0x2614>
   1643c:	mul	r6, r8, r6
   16440:	mov	r5, #0
   16444:	b	163f8 <close_stdout@@Base+0x24dc>
   16448:	mov	r0, #-2147483648	; 0x80000000
   1644c:	mov	r1, r8
   16450:	bl	1936c <close_stdout@@Base+0x5450>
   16454:	mov	r5, #0
   16458:	mov	r2, #3
   1645c:	mov	ip, r0
   16460:	cmp	ip, r6
   16464:	movgt	r6, #-2147483648	; 0x80000000
   16468:	movgt	r1, #1
   1646c:	bgt	164a0 <close_stdout@@Base+0x2584>
   16470:	mov	r1, r8
   16474:	mvn	r0, #-2147483648	; 0x80000000
   16478:	str	r2, [sp, #8]
   1647c:	str	ip, [sp, #4]
   16480:	bl	1936c <close_stdout@@Base+0x5450>
   16484:	ldr	r2, [sp, #8]
   16488:	ldr	ip, [sp, #4]
   1648c:	cmp	r0, r6
   16490:	mulge	r6, r8, r6
   16494:	movge	r1, #0
   16498:	mvnlt	r6, #-2147483648	; 0x80000000
   1649c:	movlt	r1, #1
   164a0:	subs	r2, r2, #1
   164a4:	orr	r5, r5, r1
   164a8:	bne	16460 <close_stdout@@Base+0x2544>
   164ac:	b	163f8 <close_stdout@@Base+0x24dc>
   164b0:	mov	r0, #-2147483648	; 0x80000000
   164b4:	mov	r1, r8
   164b8:	bl	1936c <close_stdout@@Base+0x5450>
   164bc:	mov	r5, #0
   164c0:	mov	r2, #6
   164c4:	mov	ip, r0
   164c8:	cmp	ip, r6
   164cc:	movgt	r6, #-2147483648	; 0x80000000
   164d0:	movgt	r1, #1
   164d4:	bgt	16508 <close_stdout@@Base+0x25ec>
   164d8:	mov	r1, r8
   164dc:	mvn	r0, #-2147483648	; 0x80000000
   164e0:	str	r2, [sp, #8]
   164e4:	str	ip, [sp, #4]
   164e8:	bl	1936c <close_stdout@@Base+0x5450>
   164ec:	ldr	r2, [sp, #8]
   164f0:	ldr	ip, [sp, #4]
   164f4:	cmp	r0, r6
   164f8:	mulge	r6, r8, r6
   164fc:	movge	r1, #0
   16500:	mvnlt	r6, #-2147483648	; 0x80000000
   16504:	movlt	r1, #1
   16508:	subs	r2, r2, #1
   1650c:	orr	r5, r5, r1
   16510:	bne	164c8 <close_stdout@@Base+0x25ac>
   16514:	b	163f8 <close_stdout@@Base+0x24dc>
   16518:	cmn	r6, #2097152	; 0x200000
   1651c:	blt	1678c <close_stdout@@Base+0x2870>
   16520:	cmp	r6, #2097152	; 0x200000
   16524:	lsllt	r6, r6, #10
   16528:	movlt	r5, #0
   1652c:	blt	163f8 <close_stdout@@Base+0x24dc>
   16530:	mvn	r6, #-2147483648	; 0x80000000
   16534:	mov	r5, #1
   16538:	b	163f8 <close_stdout@@Base+0x24dc>
   1653c:	cmp	r6, #-1073741824	; 0xc0000000
   16540:	blt	1678c <close_stdout@@Base+0x2870>
   16544:	cmn	r6, #-1073741823	; 0xc0000001
   16548:	lslle	r6, r6, #1
   1654c:	movle	r5, #0
   16550:	ble	163f8 <close_stdout@@Base+0x24dc>
   16554:	b	16530 <close_stdout@@Base+0x2614>
   16558:	cmn	r6, #4194304	; 0x400000
   1655c:	blt	1678c <close_stdout@@Base+0x2870>
   16560:	cmp	r6, #4194304	; 0x400000
   16564:	lsllt	r6, r6, #9
   16568:	movlt	r5, #0
   1656c:	blt	163f8 <close_stdout@@Base+0x24dc>
   16570:	b	16530 <close_stdout@@Base+0x2614>
   16574:	mov	r0, #-2147483648	; 0x80000000
   16578:	mov	r1, r8
   1657c:	bl	1936c <close_stdout@@Base+0x5450>
   16580:	mov	r5, #0
   16584:	mov	r2, #7
   16588:	mov	ip, r0
   1658c:	cmp	ip, r6
   16590:	movgt	r6, #-2147483648	; 0x80000000
   16594:	movgt	r1, #1
   16598:	bgt	165cc <close_stdout@@Base+0x26b0>
   1659c:	mov	r1, r8
   165a0:	mvn	r0, #-2147483648	; 0x80000000
   165a4:	str	r2, [sp, #8]
   165a8:	str	ip, [sp, #4]
   165ac:	bl	1936c <close_stdout@@Base+0x5450>
   165b0:	ldr	r2, [sp, #8]
   165b4:	ldr	ip, [sp, #4]
   165b8:	cmp	r0, r6
   165bc:	mulge	r6, r8, r6
   165c0:	movge	r1, #0
   165c4:	mvnlt	r6, #-2147483648	; 0x80000000
   165c8:	movlt	r1, #1
   165cc:	subs	r2, r2, #1
   165d0:	orr	r5, r5, r1
   165d4:	bne	1658c <close_stdout@@Base+0x2670>
   165d8:	b	163f8 <close_stdout@@Base+0x24dc>
   165dc:	mov	r0, #-2147483648	; 0x80000000
   165e0:	mov	r1, r8
   165e4:	bl	1936c <close_stdout@@Base+0x5450>
   165e8:	mov	r5, #0
   165ec:	mov	r2, #8
   165f0:	mov	ip, r0
   165f4:	cmp	ip, r6
   165f8:	movgt	r6, #-2147483648	; 0x80000000
   165fc:	movgt	r1, #1
   16600:	bgt	16634 <close_stdout@@Base+0x2718>
   16604:	mov	r1, r8
   16608:	mvn	r0, #-2147483648	; 0x80000000
   1660c:	str	r2, [sp, #8]
   16610:	str	ip, [sp, #4]
   16614:	bl	1936c <close_stdout@@Base+0x5450>
   16618:	ldr	r2, [sp, #8]
   1661c:	ldr	ip, [sp, #4]
   16620:	cmp	r0, r6
   16624:	mulge	r6, r8, r6
   16628:	movge	r1, #0
   1662c:	mvnlt	r6, #-2147483648	; 0x80000000
   16630:	movlt	r1, #1
   16634:	subs	r2, r2, #1
   16638:	orr	r5, r5, r1
   1663c:	bne	165f4 <close_stdout@@Base+0x26d8>
   16640:	b	163f8 <close_stdout@@Base+0x24dc>
   16644:	mov	r0, #-2147483648	; 0x80000000
   16648:	mov	r1, r8
   1664c:	bl	1936c <close_stdout@@Base+0x5450>
   16650:	mov	r5, #0
   16654:	mov	r2, #4
   16658:	mov	ip, r0
   1665c:	cmp	ip, r6
   16660:	movgt	r6, #-2147483648	; 0x80000000
   16664:	movgt	r1, #1
   16668:	bgt	1669c <close_stdout@@Base+0x2780>
   1666c:	mov	r1, r8
   16670:	mvn	r0, #-2147483648	; 0x80000000
   16674:	str	r2, [sp, #8]
   16678:	str	ip, [sp, #4]
   1667c:	bl	1936c <close_stdout@@Base+0x5450>
   16680:	ldr	r2, [sp, #8]
   16684:	ldr	ip, [sp, #4]
   16688:	cmp	r0, r6
   1668c:	mulge	r6, r8, r6
   16690:	movge	r1, #0
   16694:	mvnlt	r6, #-2147483648	; 0x80000000
   16698:	movlt	r1, #1
   1669c:	subs	r2, r2, #1
   166a0:	orr	r5, r5, r1
   166a4:	bne	1665c <close_stdout@@Base+0x2740>
   166a8:	b	163f8 <close_stdout@@Base+0x24dc>
   166ac:	mov	r0, #-2147483648	; 0x80000000
   166b0:	mov	r1, r8
   166b4:	bl	1936c <close_stdout@@Base+0x5450>
   166b8:	mov	r5, #0
   166bc:	mov	r2, #5
   166c0:	mov	ip, r0
   166c4:	cmp	ip, r6
   166c8:	movgt	r6, #-2147483648	; 0x80000000
   166cc:	movgt	r1, #1
   166d0:	bgt	16704 <close_stdout@@Base+0x27e8>
   166d4:	mov	r1, r8
   166d8:	mvn	r0, #-2147483648	; 0x80000000
   166dc:	str	r2, [sp, #8]
   166e0:	str	ip, [sp, #4]
   166e4:	bl	1936c <close_stdout@@Base+0x5450>
   166e8:	ldr	r2, [sp, #8]
   166ec:	ldr	ip, [sp, #4]
   166f0:	cmp	r0, r6
   166f4:	mulge	r6, r8, r6
   166f8:	movge	r1, #0
   166fc:	mvnlt	r6, #-2147483648	; 0x80000000
   16700:	movlt	r1, #1
   16704:	subs	r2, r2, #1
   16708:	orr	r5, r5, r1
   1670c:	bne	166c4 <close_stdout@@Base+0x27a8>
   16710:	b	163f8 <close_stdout@@Base+0x24dc>
   16714:	mov	r0, #-2147483648	; 0x80000000
   16718:	mov	r1, r8
   1671c:	bl	1936c <close_stdout@@Base+0x5450>
   16720:	cmp	r6, r0
   16724:	mov	r5, r0
   16728:	blt	16798 <close_stdout@@Base+0x287c>
   1672c:	mvn	r0, #-2147483648	; 0x80000000
   16730:	mov	r1, r8
   16734:	bl	1936c <close_stdout@@Base+0x5450>
   16738:	cmp	r6, r0
   1673c:	bgt	167a8 <close_stdout@@Base+0x288c>
   16740:	mul	r3, r6, r8
   16744:	mov	r2, #0
   16748:	cmp	r3, r5
   1674c:	movlt	r6, #-2147483648	; 0x80000000
   16750:	movlt	r5, #1
   16754:	blt	1676c <close_stdout@@Base+0x2850>
   16758:	cmp	r0, r3
   1675c:	mvnlt	r6, #-2147483648	; 0x80000000
   16760:	movlt	r5, #1
   16764:	mulge	r6, r3, r8
   16768:	movge	r5, #0
   1676c:	orr	r5, r5, r2
   16770:	b	163f8 <close_stdout@@Base+0x24dc>
   16774:	ldrb	sl, [r7, #2]
   16778:	mov	r8, #1024	; 0x400
   1677c:	cmp	sl, #66	; 0x42
   16780:	moveq	sl, #3
   16784:	movne	sl, #1
   16788:	b	162bc <close_stdout@@Base+0x23a0>
   1678c:	mov	r6, #-2147483648	; 0x80000000
   16790:	mov	r5, #1
   16794:	b	163f8 <close_stdout@@Base+0x24dc>
   16798:	mov	r2, #1
   1679c:	mov	r6, #-2147483648	; 0x80000000
   167a0:	mov	r5, r2
   167a4:	b	1676c <close_stdout@@Base+0x2850>
   167a8:	mov	r2, #1
   167ac:	mvn	r3, #-2147483648	; 0x80000000
   167b0:	b	16758 <close_stdout@@Base+0x283c>
   167b4:	bl	111c4 <__stack_chk_fail@plt>
   167b8:	ldr	r0, [pc, #32]	; 167e0 <close_stdout@@Base+0x28c4>
   167bc:	mov	r2, #96	; 0x60
   167c0:	ldr	r1, [pc, #28]	; 167e4 <close_stdout@@Base+0x28c8>
   167c4:	ldr	r3, [pc, #28]	; 167e8 <close_stdout@@Base+0x28cc>
   167c8:	add	r0, pc, r0
   167cc:	add	r1, pc, r1
   167d0:	add	r3, pc, r3
   167d4:	bl	11428 <__assert_fail@plt>
   167d8:	andeq	r6, r1, r8, asr #28
   167dc:	andeq	r0, r0, r8, lsl r1
   167e0:	andeq	r5, r0, r4, lsl #18
   167e4:	andeq	r5, r0, r8, lsr #18
   167e8:	strdeq	r5, [r0], -r4
   167ec:	ldr	ip, [pc, #1308]	; 16d10 <close_stdout@@Base+0x2df4>
   167f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167f4:	mov	sl, r2
   167f8:	ldr	r2, [pc, #1300]	; 16d14 <close_stdout@@Base+0x2df8>
   167fc:	add	ip, pc, ip
   16800:	mov	r9, r3
   16804:	sub	sp, sp, #20
   16808:	mov	r3, ip
   1680c:	cmp	sl, #36	; 0x24
   16810:	ldr	r6, [ip, r2]
   16814:	mov	r5, r0
   16818:	mov	r7, r1
   1681c:	ldr	r8, [sp, #56]	; 0x38
   16820:	ldr	r3, [r6]
   16824:	str	r3, [sp, #12]
   16828:	bhi	16cf0 <close_stdout@@Base+0x2dd4>
   1682c:	cmp	r1, #0
   16830:	addeq	r7, sp, #8
   16834:	bl	112d8 <__ctype_b_loc@plt>
   16838:	ldrb	ip, [r5]
   1683c:	mov	r2, r5
   16840:	ldr	r1, [r0]
   16844:	b	1684c <close_stdout@@Base+0x2930>
   16848:	ldrb	ip, [r2, #1]!
   1684c:	lsl	r3, ip, #1
   16850:	ldrh	r4, [r1, r3]
   16854:	and	r4, r4, #8192	; 0x2000
   16858:	uxth	r4, r4
   1685c:	cmp	r4, #0
   16860:	bne	16848 <close_stdout@@Base+0x292c>
   16864:	cmp	ip, #45	; 0x2d
   16868:	bne	16888 <close_stdout@@Base+0x296c>
   1686c:	mov	r0, #4
   16870:	ldr	r2, [sp, #12]
   16874:	ldr	r3, [r6]
   16878:	cmp	r2, r3
   1687c:	bne	16cec <close_stdout@@Base+0x2dd0>
   16880:	add	sp, sp, #20
   16884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16888:	bl	11344 <__errno_location@plt>
   1688c:	mov	r2, sl
   16890:	mov	r1, r7
   16894:	str	r4, [r0]
   16898:	mov	fp, r0
   1689c:	mov	r0, r5
   168a0:	bl	112f0 <strtoul@plt>
   168a4:	ldr	r3, [r7]
   168a8:	cmp	r3, r5
   168ac:	mov	sl, r0
   168b0:	beq	16a40 <close_stdout@@Base+0x2b24>
   168b4:	ldr	r0, [fp]
   168b8:	cmp	r0, #0
   168bc:	bne	168ec <close_stdout@@Base+0x29d0>
   168c0:	mov	r4, r0
   168c4:	cmp	r8, #0
   168c8:	streq	sl, [r9]
   168cc:	moveq	r0, r4
   168d0:	beq	16870 <close_stdout@@Base+0x2954>
   168d4:	ldrb	r5, [r3]
   168d8:	cmp	r5, #0
   168dc:	bne	168fc <close_stdout@@Base+0x29e0>
   168e0:	mov	r0, r4
   168e4:	str	sl, [r9]
   168e8:	b	16870 <close_stdout@@Base+0x2954>
   168ec:	cmp	r0, #34	; 0x22
   168f0:	moveq	r4, #1
   168f4:	bne	1686c <close_stdout@@Base+0x2950>
   168f8:	b	168c4 <close_stdout@@Base+0x29a8>
   168fc:	mov	r0, r8
   16900:	mov	r1, r5
   16904:	str	r3, [sp, #4]
   16908:	bl	11308 <strchr@plt>
   1690c:	ldr	r3, [sp, #4]
   16910:	cmp	r0, #0
   16914:	beq	16a78 <close_stdout@@Base+0x2b5c>
   16918:	mov	r0, r8
   1691c:	mov	r1, #48	; 0x30
   16920:	str	r3, [sp, #4]
   16924:	bl	11308 <strchr@plt>
   16928:	ldr	r3, [sp, #4]
   1692c:	cmp	r0, #0
   16930:	beq	16950 <close_stdout@@Base+0x2a34>
   16934:	ldrb	r2, [r3, #1]
   16938:	cmp	r2, #68	; 0x44
   1693c:	beq	16cd4 <close_stdout@@Base+0x2db8>
   16940:	cmp	r2, #105	; 0x69
   16944:	beq	16cbc <close_stdout@@Base+0x2da0>
   16948:	cmp	r2, #66	; 0x42
   1694c:	beq	16cd4 <close_stdout@@Base+0x2db8>
   16950:	mov	r8, #1
   16954:	mov	fp, #1024	; 0x400
   16958:	sub	r5, r5, #66	; 0x42
   1695c:	cmp	r5, #53	; 0x35
   16960:	addls	pc, pc, r5, lsl #2
   16964:	b	16a78 <close_stdout@@Base+0x2b5c>
   16968:	b	16c68 <close_stdout@@Base+0x2d4c>
   1696c:	b	16a78 <close_stdout@@Base+0x2b5c>
   16970:	b	16a78 <close_stdout@@Base+0x2b5c>
   16974:	b	16c28 <close_stdout@@Base+0x2d0c>
   16978:	b	16a78 <close_stdout@@Base+0x2b5c>
   1697c:	b	16c7c <close_stdout@@Base+0x2d60>
   16980:	b	16a78 <close_stdout@@Base+0x2b5c>
   16984:	b	16a78 <close_stdout@@Base+0x2b5c>
   16988:	b	16a78 <close_stdout@@Base+0x2b5c>
   1698c:	b	16c08 <close_stdout@@Base+0x2cec>
   16990:	b	16a78 <close_stdout@@Base+0x2b5c>
   16994:	b	16bd4 <close_stdout@@Base+0x2cb8>
   16998:	b	16a78 <close_stdout@@Base+0x2b5c>
   1699c:	b	16a78 <close_stdout@@Base+0x2b5c>
   169a0:	b	16b94 <close_stdout@@Base+0x2c78>
   169a4:	b	16a78 <close_stdout@@Base+0x2b5c>
   169a8:	b	16a78 <close_stdout@@Base+0x2b5c>
   169ac:	b	16a78 <close_stdout@@Base+0x2b5c>
   169b0:	b	16b54 <close_stdout@@Base+0x2c38>
   169b4:	b	16a78 <close_stdout@@Base+0x2b5c>
   169b8:	b	16a78 <close_stdout@@Base+0x2b5c>
   169bc:	b	16a78 <close_stdout@@Base+0x2b5c>
   169c0:	b	16a78 <close_stdout@@Base+0x2b5c>
   169c4:	b	16b14 <close_stdout@@Base+0x2bf8>
   169c8:	b	16ad4 <close_stdout@@Base+0x2bb8>
   169cc:	b	16a78 <close_stdout@@Base+0x2b5c>
   169d0:	b	16a78 <close_stdout@@Base+0x2b5c>
   169d4:	b	16a78 <close_stdout@@Base+0x2b5c>
   169d8:	b	16a78 <close_stdout@@Base+0x2b5c>
   169dc:	b	16a78 <close_stdout@@Base+0x2b5c>
   169e0:	b	16a78 <close_stdout@@Base+0x2b5c>
   169e4:	b	16a78 <close_stdout@@Base+0x2b5c>
   169e8:	b	16ac0 <close_stdout@@Base+0x2ba4>
   169ec:	b	16a84 <close_stdout@@Base+0x2b68>
   169f0:	b	16a78 <close_stdout@@Base+0x2b5c>
   169f4:	b	16a78 <close_stdout@@Base+0x2b5c>
   169f8:	b	16a78 <close_stdout@@Base+0x2b5c>
   169fc:	b	16c7c <close_stdout@@Base+0x2d60>
   16a00:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a04:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a08:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a0c:	b	16c08 <close_stdout@@Base+0x2cec>
   16a10:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a14:	b	16bd4 <close_stdout@@Base+0x2cb8>
   16a18:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a1c:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a20:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a24:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a28:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a2c:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a30:	b	16b54 <close_stdout@@Base+0x2c38>
   16a34:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a38:	b	16a78 <close_stdout@@Base+0x2b5c>
   16a3c:	b	16aa4 <close_stdout@@Base+0x2b88>
   16a40:	cmp	r8, #0
   16a44:	beq	1686c <close_stdout@@Base+0x2950>
   16a48:	ldrb	r5, [r5]
   16a4c:	cmp	r5, #0
   16a50:	beq	1686c <close_stdout@@Base+0x2950>
   16a54:	mov	r0, r8
   16a58:	mov	r1, r5
   16a5c:	str	r3, [sp, #4]
   16a60:	bl	11308 <strchr@plt>
   16a64:	ldr	r3, [sp, #4]
   16a68:	cmp	r0, #0
   16a6c:	movne	sl, #1
   16a70:	bne	16918 <close_stdout@@Base+0x29fc>
   16a74:	b	1686c <close_stdout@@Base+0x2950>
   16a78:	str	sl, [r9]
   16a7c:	orr	r0, r4, #2
   16a80:	b	16870 <close_stdout@@Base+0x2954>
   16a84:	mov	r2, #0
   16a88:	add	r1, r3, r8
   16a8c:	str	r1, [r7]
   16a90:	ldrb	r3, [r3, r8]
   16a94:	orr	r4, r4, r2
   16a98:	cmp	r3, #0
   16a9c:	orrne	r4, r4, #2
   16aa0:	b	168e0 <close_stdout@@Base+0x29c4>
   16aa4:	cmn	sl, #-2147483647	; 0x80000001
   16aa8:	lslls	sl, sl, #1
   16aac:	movls	r2, #0
   16ab0:	bls	16a88 <close_stdout@@Base+0x2b6c>
   16ab4:	mvn	sl, #0
   16ab8:	mov	r2, #1
   16abc:	b	16a88 <close_stdout@@Base+0x2b6c>
   16ac0:	cmp	sl, #8388608	; 0x800000
   16ac4:	lslcc	sl, sl, #9
   16ac8:	movcc	r2, #0
   16acc:	bcc	16a88 <close_stdout@@Base+0x2b6c>
   16ad0:	b	16ab4 <close_stdout@@Base+0x2b98>
   16ad4:	mov	r1, fp
   16ad8:	mvn	r0, #0
   16adc:	str	r3, [sp, #4]
   16ae0:	bl	19160 <close_stdout@@Base+0x5244>
   16ae4:	ldr	r3, [sp, #4]
   16ae8:	mov	r1, #7
   16aec:	mov	r2, #0
   16af0:	cmp	r0, sl
   16af4:	movcs	ip, #0
   16af8:	movcc	ip, #1
   16afc:	mulcs	sl, fp, sl
   16b00:	mvncc	sl, #0
   16b04:	subs	r1, r1, #1
   16b08:	orr	r2, r2, ip
   16b0c:	bne	16af0 <close_stdout@@Base+0x2bd4>
   16b10:	b	16a88 <close_stdout@@Base+0x2b6c>
   16b14:	mov	r1, fp
   16b18:	mvn	r0, #0
   16b1c:	str	r3, [sp, #4]
   16b20:	bl	19160 <close_stdout@@Base+0x5244>
   16b24:	ldr	r3, [sp, #4]
   16b28:	mov	r1, #8
   16b2c:	mov	r2, #0
   16b30:	cmp	r0, sl
   16b34:	movcs	ip, #0
   16b38:	movcc	ip, #1
   16b3c:	mulcs	sl, fp, sl
   16b40:	mvncc	sl, #0
   16b44:	subs	r1, r1, #1
   16b48:	orr	r2, r2, ip
   16b4c:	bne	16b30 <close_stdout@@Base+0x2c14>
   16b50:	b	16a88 <close_stdout@@Base+0x2b6c>
   16b54:	mov	r1, fp
   16b58:	mvn	r0, #0
   16b5c:	str	r3, [sp, #4]
   16b60:	bl	19160 <close_stdout@@Base+0x5244>
   16b64:	ldr	r3, [sp, #4]
   16b68:	mov	r1, #4
   16b6c:	mov	r2, #0
   16b70:	cmp	r0, sl
   16b74:	movcs	ip, #0
   16b78:	movcc	ip, #1
   16b7c:	mulcs	sl, fp, sl
   16b80:	mvncc	sl, #0
   16b84:	subs	r1, r1, #1
   16b88:	orr	r2, r2, ip
   16b8c:	bne	16b70 <close_stdout@@Base+0x2c54>
   16b90:	b	16a88 <close_stdout@@Base+0x2b6c>
   16b94:	mov	r1, fp
   16b98:	mvn	r0, #0
   16b9c:	str	r3, [sp, #4]
   16ba0:	bl	19160 <close_stdout@@Base+0x5244>
   16ba4:	ldr	r3, [sp, #4]
   16ba8:	mov	r1, #5
   16bac:	mov	r2, #0
   16bb0:	cmp	r0, sl
   16bb4:	movcs	ip, #0
   16bb8:	movcc	ip, #1
   16bbc:	mulcs	sl, fp, sl
   16bc0:	mvncc	sl, #0
   16bc4:	subs	r1, r1, #1
   16bc8:	orr	r2, r2, ip
   16bcc:	bne	16bb0 <close_stdout@@Base+0x2c94>
   16bd0:	b	16a88 <close_stdout@@Base+0x2b6c>
   16bd4:	mvn	r0, #0
   16bd8:	mov	r1, fp
   16bdc:	str	r3, [sp, #4]
   16be0:	bl	19160 <close_stdout@@Base+0x5244>
   16be4:	ldr	r3, [sp, #4]
   16be8:	cmp	sl, r0
   16bec:	bhi	16ce0 <close_stdout@@Base+0x2dc4>
   16bf0:	mul	sl, sl, fp
   16bf4:	cmp	r0, sl
   16bf8:	bcc	16ce0 <close_stdout@@Base+0x2dc4>
   16bfc:	mul	sl, fp, sl
   16c00:	mov	r2, #0
   16c04:	b	16a88 <close_stdout@@Base+0x2b6c>
   16c08:	mvn	r0, #0
   16c0c:	mov	r1, fp
   16c10:	str	r3, [sp, #4]
   16c14:	bl	19160 <close_stdout@@Base+0x5244>
   16c18:	ldr	r3, [sp, #4]
   16c1c:	cmp	sl, r0
   16c20:	bhi	16ab4 <close_stdout@@Base+0x2b98>
   16c24:	b	16bfc <close_stdout@@Base+0x2ce0>
   16c28:	mov	r1, fp
   16c2c:	mvn	r0, #0
   16c30:	str	r3, [sp, #4]
   16c34:	bl	19160 <close_stdout@@Base+0x5244>
   16c38:	ldr	r3, [sp, #4]
   16c3c:	mov	r1, #6
   16c40:	mov	r2, #0
   16c44:	cmp	r0, sl
   16c48:	movcs	ip, #0
   16c4c:	movcc	ip, #1
   16c50:	mulcs	sl, fp, sl
   16c54:	mvncc	sl, #0
   16c58:	subs	r1, r1, #1
   16c5c:	orr	r2, r2, ip
   16c60:	bne	16c44 <close_stdout@@Base+0x2d28>
   16c64:	b	16a88 <close_stdout@@Base+0x2b6c>
   16c68:	cmp	sl, #4194304	; 0x400000
   16c6c:	lslcc	sl, sl, #10
   16c70:	movcc	r2, #0
   16c74:	bcc	16a88 <close_stdout@@Base+0x2b6c>
   16c78:	b	16ab4 <close_stdout@@Base+0x2b98>
   16c7c:	mov	r1, fp
   16c80:	mvn	r0, #0
   16c84:	str	r3, [sp, #4]
   16c88:	bl	19160 <close_stdout@@Base+0x5244>
   16c8c:	ldr	r3, [sp, #4]
   16c90:	mov	r1, #3
   16c94:	mov	r2, #0
   16c98:	cmp	r0, sl
   16c9c:	movcs	ip, #0
   16ca0:	movcc	ip, #1
   16ca4:	mulcs	sl, fp, sl
   16ca8:	mvncc	sl, #0
   16cac:	subs	r1, r1, #1
   16cb0:	orr	r2, r2, ip
   16cb4:	bne	16c98 <close_stdout@@Base+0x2d7c>
   16cb8:	b	16a88 <close_stdout@@Base+0x2b6c>
   16cbc:	ldrb	r8, [r3, #2]
   16cc0:	mov	fp, #1024	; 0x400
   16cc4:	cmp	r8, #66	; 0x42
   16cc8:	moveq	r8, #3
   16ccc:	movne	r8, #1
   16cd0:	b	16958 <close_stdout@@Base+0x2a3c>
   16cd4:	mov	r8, #2
   16cd8:	mov	fp, #1000	; 0x3e8
   16cdc:	b	16958 <close_stdout@@Base+0x2a3c>
   16ce0:	mov	r2, #1
   16ce4:	mvn	sl, #0
   16ce8:	b	16a88 <close_stdout@@Base+0x2b6c>
   16cec:	bl	111c4 <__stack_chk_fail@plt>
   16cf0:	ldr	r0, [pc, #32]	; 16d18 <close_stdout@@Base+0x2dfc>
   16cf4:	mov	r2, #96	; 0x60
   16cf8:	ldr	r1, [pc, #28]	; 16d1c <close_stdout@@Base+0x2e00>
   16cfc:	ldr	r3, [pc, #28]	; 16d20 <close_stdout@@Base+0x2e04>
   16d00:	add	r0, pc, r0
   16d04:	add	r1, pc, r1
   16d08:	add	r3, pc, r3
   16d0c:	bl	11428 <__assert_fail@plt>
   16d10:	strdeq	r6, [r1], -ip
   16d14:	andeq	r0, r0, r8, lsl r1
   16d18:	andeq	r5, r0, ip, asr #7
   16d1c:	strdeq	r5, [r0], -r0
   16d20:	strdeq	r5, [r0], -ip
   16d24:	push	{r1, r2, r3}
   16d28:	movw	ip, #1030	; 0x406
   16d2c:	ldr	r3, [pc, #336]	; 16e84 <close_stdout@@Base+0x2f68>
   16d30:	push	{r4, r5, r6, r7, r8, lr}
   16d34:	add	r3, pc, r3
   16d38:	ldr	lr, [pc, #328]	; 16e88 <close_stdout@@Base+0x2f6c>
   16d3c:	sub	sp, sp, #12
   16d40:	add	r2, sp, #40	; 0x28
   16d44:	mov	r6, r0
   16d48:	ldr	r1, [sp, #36]	; 0x24
   16d4c:	ldr	r4, [r3, lr]
   16d50:	cmp	r1, ip
   16d54:	str	r2, [sp]
   16d58:	ldr	r3, [r4]
   16d5c:	str	r3, [sp, #4]
   16d60:	bne	16de4 <close_stdout@@Base+0x2ec8>
   16d64:	ldr	r8, [pc, #288]	; 16e8c <close_stdout@@Base+0x2f70>
   16d68:	add	r3, sp, #44	; 0x2c
   16d6c:	str	r3, [sp]
   16d70:	add	r8, pc, r8
   16d74:	ldr	r7, [sp, #40]	; 0x28
   16d78:	ldr	r3, [r8]
   16d7c:	mov	r2, r7
   16d80:	cmp	r3, #0
   16d84:	blt	16e70 <close_stdout@@Base+0x2f54>
   16d88:	bl	1132c <fcntl@plt>
   16d8c:	subs	r5, r0, #0
   16d90:	blt	16df4 <close_stdout@@Base+0x2ed8>
   16d94:	ldr	r3, [pc, #244]	; 16e90 <close_stdout@@Base+0x2f74>
   16d98:	mov	r2, #1
   16d9c:	add	r3, pc, r3
   16da0:	str	r2, [r3]
   16da4:	cmp	r5, #0
   16da8:	blt	16dc0 <close_stdout@@Base+0x2ea4>
   16dac:	ldr	r3, [pc, #224]	; 16e94 <close_stdout@@Base+0x2f78>
   16db0:	add	r3, pc, r3
   16db4:	ldr	r3, [r3]
   16db8:	cmn	r3, #1
   16dbc:	beq	16e24 <close_stdout@@Base+0x2f08>
   16dc0:	ldr	r2, [sp, #4]
   16dc4:	mov	r0, r5
   16dc8:	ldr	r3, [r4]
   16dcc:	cmp	r2, r3
   16dd0:	bne	16e80 <close_stdout@@Base+0x2f64>
   16dd4:	add	sp, sp, #12
   16dd8:	pop	{r4, r5, r6, r7, r8, lr}
   16ddc:	add	sp, sp, #12
   16de0:	bx	lr
   16de4:	ldr	r2, [sp, #40]	; 0x28
   16de8:	bl	1132c <fcntl@plt>
   16dec:	mov	r5, r0
   16df0:	b	16dc0 <close_stdout@@Base+0x2ea4>
   16df4:	bl	11344 <__errno_location@plt>
   16df8:	ldr	r3, [r0]
   16dfc:	cmp	r3, #22
   16e00:	bne	16d94 <close_stdout@@Base+0x2e78>
   16e04:	mov	r0, r6
   16e08:	mov	r2, r7
   16e0c:	mov	r1, #0
   16e10:	bl	16d24 <close_stdout@@Base+0x2e08>
   16e14:	subs	r5, r0, #0
   16e18:	blt	16dc0 <close_stdout@@Base+0x2ea4>
   16e1c:	mvn	r3, #0
   16e20:	str	r3, [r8]
   16e24:	mov	r0, r5
   16e28:	mov	r1, #1
   16e2c:	bl	1132c <fcntl@plt>
   16e30:	subs	r2, r0, #0
   16e34:	blt	16e50 <close_stdout@@Base+0x2f34>
   16e38:	orr	r2, r2, #1
   16e3c:	mov	r0, r5
   16e40:	mov	r1, #2
   16e44:	bl	1132c <fcntl@plt>
   16e48:	cmn	r0, #1
   16e4c:	bne	16dc0 <close_stdout@@Base+0x2ea4>
   16e50:	bl	11344 <__errno_location@plt>
   16e54:	ldr	r7, [r0]
   16e58:	mov	r6, r0
   16e5c:	mov	r0, r5
   16e60:	mvn	r5, #0
   16e64:	bl	11410 <close@plt>
   16e68:	str	r7, [r6]
   16e6c:	b	16dc0 <close_stdout@@Base+0x2ea4>
   16e70:	mov	r1, #0
   16e74:	bl	16d24 <close_stdout@@Base+0x2e08>
   16e78:	mov	r5, r0
   16e7c:	b	16da4 <close_stdout@@Base+0x2e88>
   16e80:	bl	111c4 <__stack_chk_fail@plt>
   16e84:	andeq	r6, r1, r4, asr #5
   16e88:	andeq	r0, r0, r8, lsl r1
   16e8c:	strdeq	r6, [r1], -r4
   16e90:	andeq	r6, r1, r8, asr #11
   16e94:			; <UNDEFINED> instruction: 0x000165b4
   16e98:	ldr	ip, [pc, #136]	; 16f28 <close_stdout@@Base+0x300c>
   16e9c:	mov	r3, r2
   16ea0:	push	{r4, r5, lr}
   16ea4:	add	ip, pc, ip
   16ea8:	ldr	lr, [pc, #124]	; 16f2c <close_stdout@@Base+0x3010>
   16eac:	sub	sp, sp, #12
   16eb0:	mov	r2, r1
   16eb4:	mov	r5, r0
   16eb8:	mov	r1, sp
   16ebc:	mov	r0, #0
   16ec0:	ldr	r4, [ip, lr]
   16ec4:	ldr	ip, [r4]
   16ec8:	str	ip, [sp, #4]
   16ecc:	bl	17578 <close_stdout@@Base+0x365c>
   16ed0:	subs	r2, r0, #0
   16ed4:	beq	16f04 <close_stdout@@Base+0x2fe8>
   16ed8:	ldr	r3, [sp]
   16edc:	cmp	r3, #0
   16ee0:	strge	r2, [r5]
   16ee4:	blt	16f0c <close_stdout@@Base+0x2ff0>
   16ee8:	ldr	r2, [sp, #4]
   16eec:	mov	r0, r3
   16ef0:	ldr	r3, [r4]
   16ef4:	cmp	r2, r3
   16ef8:	bne	16f24 <close_stdout@@Base+0x3008>
   16efc:	add	sp, sp, #12
   16f00:	pop	{r4, r5, pc}
   16f04:	mvn	r3, #0
   16f08:	b	16ee8 <close_stdout@@Base+0x2fcc>
   16f0c:	bl	1117c <free@plt>
   16f10:	bl	11344 <__errno_location@plt>
   16f14:	mov	r2, #75	; 0x4b
   16f18:	mvn	r3, #0
   16f1c:	str	r2, [r0]
   16f20:	b	16ee8 <close_stdout@@Base+0x2fcc>
   16f24:	bl	111c4 <__stack_chk_fail@plt>
   16f28:	andeq	r6, r1, r4, asr r1
   16f2c:	andeq	r0, r0, r8, lsl r1
   16f30:	push	{r4, r5, r6, lr}
   16f34:	mov	r4, r0
   16f38:	bl	11260 <__fpending@plt>
   16f3c:	mov	r6, r0
   16f40:	mov	r0, r4
   16f44:	ldr	r4, [r4]
   16f48:	bl	173d0 <close_stdout@@Base+0x34b4>
   16f4c:	and	r4, r4, #32
   16f50:	adds	r5, r0, #0
   16f54:	movne	r5, #1
   16f58:	cmp	r4, #0
   16f5c:	bne	16f7c <close_stdout@@Base+0x3060>
   16f60:	cmp	r5, #0
   16f64:	beq	16f74 <close_stdout@@Base+0x3058>
   16f68:	cmp	r6, #0
   16f6c:	beq	16f98 <close_stdout@@Base+0x307c>
   16f70:	mvn	r4, #0
   16f74:	mov	r0, r4
   16f78:	pop	{r4, r5, r6, pc}
   16f7c:	cmp	r5, #0
   16f80:	bne	16f70 <close_stdout@@Base+0x3054>
   16f84:	bl	11344 <__errno_location@plt>
   16f88:	mvn	r4, #0
   16f8c:	str	r5, [r0]
   16f90:	mov	r0, r4
   16f94:	pop	{r4, r5, r6, pc}
   16f98:	bl	11344 <__errno_location@plt>
   16f9c:	ldr	r4, [r0]
   16fa0:	subs	r4, r4, #9
   16fa4:	mvnne	r4, #0
   16fa8:	mov	r0, r4
   16fac:	pop	{r4, r5, r6, pc}
   16fb0:	ldr	r3, [pc, #984]	; 17390 <close_stdout@@Base+0x3474>
   16fb4:	mov	r0, #14
   16fb8:	ldr	r2, [pc, #980]	; 17394 <close_stdout@@Base+0x3478>
   16fbc:	add	r3, pc, r3
   16fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fc4:	sub	sp, sp, #132	; 0x84
   16fc8:	ldr	r6, [r3, r2]
   16fcc:	ldr	r3, [r6]
   16fd0:	str	r3, [sp, #124]	; 0x7c
   16fd4:	bl	113e0 <nl_langinfo@plt>
   16fd8:	subs	r5, r0, #0
   16fdc:	beq	17090 <close_stdout@@Base+0x3174>
   16fe0:	ldr	r3, [pc, #944]	; 17398 <close_stdout@@Base+0x347c>
   16fe4:	ldr	r4, [pc, r3]
   16fe8:	cmp	r4, #0
   16fec:	beq	1709c <close_stdout@@Base+0x3180>
   16ff0:	ldrb	r7, [r4]
   16ff4:	cmp	r7, #0
   16ff8:	bne	1702c <close_stdout@@Base+0x3110>
   16ffc:	b	17064 <close_stdout@@Base+0x3148>
   17000:	mov	r0, r4
   17004:	bl	112fc <strlen@plt>
   17008:	add	r0, r0, #1
   1700c:	add	r7, r4, r0
   17010:	mov	r0, r7
   17014:	bl	112fc <strlen@plt>
   17018:	add	r0, r0, #1
   1701c:	add	r4, r7, r0
   17020:	ldrb	r7, [r7, r0]
   17024:	cmp	r7, #0
   17028:	beq	17064 <close_stdout@@Base+0x3148>
   1702c:	mov	r0, r5
   17030:	mov	r1, r4
   17034:	bl	11158 <strcmp@plt>
   17038:	cmp	r0, #0
   1703c:	beq	17054 <close_stdout@@Base+0x3138>
   17040:	cmp	r7, #42	; 0x2a
   17044:	bne	17000 <close_stdout@@Base+0x30e4>
   17048:	ldrb	r3, [r4, #1]
   1704c:	cmp	r3, #0
   17050:	bne	17000 <close_stdout@@Base+0x30e4>
   17054:	mov	r0, r4
   17058:	bl	112fc <strlen@plt>
   1705c:	add	r0, r0, #1
   17060:	add	r5, r4, r0
   17064:	ldrb	r3, [r5]
   17068:	cmp	r3, #0
   1706c:	ldreq	r5, [pc, #808]	; 1739c <close_stdout@@Base+0x3480>
   17070:	addeq	r5, pc, r5
   17074:	ldr	r2, [sp, #124]	; 0x7c
   17078:	mov	r0, r5
   1707c:	ldr	r3, [r6]
   17080:	cmp	r2, r3
   17084:	bne	17364 <close_stdout@@Base+0x3448>
   17088:	add	sp, sp, #132	; 0x84
   1708c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17090:	ldr	r5, [pc, #776]	; 173a0 <close_stdout@@Base+0x3484>
   17094:	add	r5, pc, r5
   17098:	b	16fe0 <close_stdout@@Base+0x30c4>
   1709c:	ldr	r0, [pc, #768]	; 173a4 <close_stdout@@Base+0x3488>
   170a0:	add	r0, pc, r0
   170a4:	bl	11290 <getenv@plt>
   170a8:	subs	r8, r0, #0
   170ac:	beq	1733c <close_stdout@@Base+0x3420>
   170b0:	ldrb	r3, [r8]
   170b4:	cmp	r3, #0
   170b8:	beq	172d0 <close_stdout@@Base+0x33b4>
   170bc:	bl	112fc <strlen@plt>
   170c0:	subs	sl, r0, #0
   170c4:	subne	r3, sl, #1
   170c8:	bne	172e0 <close_stdout@@Base+0x33c4>
   170cc:	mov	r9, #0
   170d0:	mov	fp, r9
   170d4:	add	r9, sl, r9
   170d8:	add	r0, r9, #14
   170dc:	bl	1129c <malloc@plt>
   170e0:	subs	r7, r0, #0
   170e4:	beq	17330 <close_stdout@@Base+0x3414>
   170e8:	mov	r1, r8
   170ec:	mov	r2, sl
   170f0:	bl	11194 <memcpy@plt>
   170f4:	cmp	fp, #0
   170f8:	add	ip, r7, r9
   170fc:	movne	r3, #47	; 0x2f
   17100:	strbne	r3, [r7, sl]
   17104:	ldr	r3, [pc, #668]	; 173a8 <close_stdout@@Base+0x348c>
   17108:	add	r3, pc, r3
   1710c:	ldm	r3!, {r0, r1, r2}
   17110:	ldrh	r3, [r3]
   17114:	str	r0, [r7, r9]
   17118:	mov	r0, r7
   1711c:	str	r1, [ip, #4]
   17120:	mov	r1, #32768	; 0x8000
   17124:	strh	r3, [ip, #12]
   17128:	str	r2, [ip, #8]
   1712c:	bl	11284 <open64@plt>
   17130:	subs	r8, r0, #0
   17134:	blt	172f8 <close_stdout@@Base+0x33dc>
   17138:	ldr	r1, [pc, #620]	; 173ac <close_stdout@@Base+0x3490>
   1713c:	add	r1, pc, r1
   17140:	bl	11128 <fdopen@plt>
   17144:	subs	fp, r0, #0
   17148:	beq	17350 <close_stdout@@Base+0x3434>
   1714c:	ldr	r0, [pc, #604]	; 173b0 <close_stdout@@Base+0x3494>
   17150:	add	sl, sp, #20
   17154:	add	r9, sp, #72	; 0x48
   17158:	mov	r8, #0
   1715c:	add	r0, pc, r0
   17160:	str	r0, [sp, #12]
   17164:	ldr	r3, [fp, #4]
   17168:	ldr	r2, [fp, #8]
   1716c:	cmp	r3, r2
   17170:	bcs	1725c <close_stdout@@Base+0x3340>
   17174:	add	r2, r3, #1
   17178:	str	r2, [fp, #4]
   1717c:	ldrb	r0, [r3]
   17180:	cmp	r0, #32
   17184:	beq	17164 <close_stdout@@Base+0x3248>
   17188:	sub	r3, r0, #9
   1718c:	cmp	r3, #1
   17190:	bls	17164 <close_stdout@@Base+0x3248>
   17194:	cmp	r0, #35	; 0x23
   17198:	beq	17270 <close_stdout@@Base+0x3354>
   1719c:	mov	r1, fp
   171a0:	bl	11320 <ungetc@plt>
   171a4:	mov	r0, fp
   171a8:	ldr	r1, [sp, #12]
   171ac:	mov	r2, sl
   171b0:	mov	r3, r9
   171b4:	bl	11368 <fscanf@plt>
   171b8:	cmp	r0, #1
   171bc:	ble	172a0 <close_stdout@@Base+0x3384>
   171c0:	mov	r0, sl
   171c4:	bl	112fc <strlen@plt>
   171c8:	str	r0, [sp, #8]
   171cc:	mov	r0, r9
   171d0:	bl	112fc <strlen@plt>
   171d4:	cmp	r8, #0
   171d8:	mov	r2, r0
   171dc:	bne	17304 <close_stdout@@Base+0x33e8>
   171e0:	ldr	r3, [sp, #8]
   171e4:	str	r2, [sp]
   171e8:	add	r8, r0, r3
   171ec:	add	r0, r8, #3
   171f0:	add	r8, r8, #2
   171f4:	bl	1129c <malloc@plt>
   171f8:	ldr	r2, [sp]
   171fc:	mov	r3, r0
   17200:	cmp	r3, #0
   17204:	beq	17368 <close_stdout@@Base+0x344c>
   17208:	ldr	r0, [sp, #8]
   1720c:	movw	r1, #65534	; 0xfffe
   17210:	movt	r1, #65535	; 0xffff
   17214:	rsb	r2, r2, r8
   17218:	rsb	r1, r0, r1
   1721c:	stm	sp, {r2, r3}
   17220:	add	r0, r1, r2
   17224:	mov	r1, sl
   17228:	add	r0, r3, r0
   1722c:	mov	r4, r3
   17230:	bl	11254 <strcpy@plt>
   17234:	ldr	r2, [sp]
   17238:	ldr	r3, [sp, #4]
   1723c:	mov	r1, r9
   17240:	sub	r0, r2, #1
   17244:	add	r0, r3, r0
   17248:	bl	11254 <strcpy@plt>
   1724c:	ldr	r3, [fp, #4]
   17250:	ldr	r2, [fp, #8]
   17254:	cmp	r3, r2
   17258:	bcc	17174 <close_stdout@@Base+0x3258>
   1725c:	mov	r0, fp
   17260:	bl	113b0 <__uflow@plt>
   17264:	cmn	r0, #1
   17268:	beq	172a0 <close_stdout@@Base+0x3384>
   1726c:	b	17180 <close_stdout@@Base+0x3264>
   17270:	ldr	r3, [fp, #4]
   17274:	ldr	r2, [fp, #8]
   17278:	cmp	r3, r2
   1727c:	bcs	17384 <close_stdout@@Base+0x3468>
   17280:	add	r2, r3, #1
   17284:	str	r2, [fp, #4]
   17288:	ldrb	r0, [r3]
   1728c:	cmp	r0, #10
   17290:	cmnne	r0, #1
   17294:	bne	17270 <close_stdout@@Base+0x3354>
   17298:	cmn	r0, #1
   1729c:	bne	17164 <close_stdout@@Base+0x3248>
   172a0:	mov	r0, fp
   172a4:	bl	173d0 <close_stdout@@Base+0x34b4>
   172a8:	cmp	r8, #0
   172ac:	beq	172f8 <close_stdout@@Base+0x33dc>
   172b0:	mov	r3, #0
   172b4:	strb	r3, [r4, r8]
   172b8:	mov	r0, r7
   172bc:	bl	1117c <free@plt>
   172c0:	ldr	r3, [pc, #236]	; 173b4 <close_stdout@@Base+0x3498>
   172c4:	add	r3, pc, r3
   172c8:	str	r4, [r3]
   172cc:	b	16ff0 <close_stdout@@Base+0x30d4>
   172d0:	ldr	r8, [pc, #224]	; 173b8 <close_stdout@@Base+0x349c>
   172d4:	mov	r3, #7
   172d8:	mov	sl, #8
   172dc:	add	r8, pc, r8
   172e0:	ldrb	r3, [r8, r3]
   172e4:	cmp	r3, #47	; 0x2f
   172e8:	movne	r9, #1
   172ec:	movne	fp, r9
   172f0:	bne	170d4 <close_stdout@@Base+0x31b8>
   172f4:	b	170cc <close_stdout@@Base+0x31b0>
   172f8:	ldr	r4, [pc, #188]	; 173bc <close_stdout@@Base+0x34a0>
   172fc:	add	r4, pc, r4
   17300:	b	172b8 <close_stdout@@Base+0x339c>
   17304:	ldr	r0, [sp, #8]
   17308:	str	r2, [sp]
   1730c:	add	r3, r0, r2
   17310:	mov	r0, r4
   17314:	add	r8, r3, r8
   17318:	add	r1, r8, #3
   1731c:	add	r8, r8, #2
   17320:	bl	111e8 <realloc@plt>
   17324:	ldr	r2, [sp]
   17328:	mov	r3, r0
   1732c:	b	17200 <close_stdout@@Base+0x32e4>
   17330:	ldr	r4, [pc, #136]	; 173c0 <close_stdout@@Base+0x34a4>
   17334:	add	r4, pc, r4
   17338:	b	172c0 <close_stdout@@Base+0x33a4>
   1733c:	ldr	r8, [pc, #128]	; 173c4 <close_stdout@@Base+0x34a8>
   17340:	mov	r3, #7
   17344:	mov	sl, #8
   17348:	add	r8, pc, r8
   1734c:	b	172e0 <close_stdout@@Base+0x33c4>
   17350:	ldr	r4, [pc, #112]	; 173c8 <close_stdout@@Base+0x34ac>
   17354:	mov	r0, r8
   17358:	add	r4, pc, r4
   1735c:	bl	11410 <close@plt>
   17360:	b	172b8 <close_stdout@@Base+0x339c>
   17364:	bl	111c4 <__stack_chk_fail@plt>
   17368:	mov	r0, r4
   1736c:	ldr	r4, [pc, #88]	; 173cc <close_stdout@@Base+0x34b0>
   17370:	bl	1117c <free@plt>
   17374:	mov	r0, fp
   17378:	add	r4, pc, r4
   1737c:	bl	173d0 <close_stdout@@Base+0x34b4>
   17380:	b	172b8 <close_stdout@@Base+0x339c>
   17384:	mov	r0, fp
   17388:	bl	113b0 <__uflow@plt>
   1738c:	b	1728c <close_stdout@@Base+0x3370>
   17390:	andeq	r6, r1, ip, lsr r0
   17394:	andeq	r0, r0, r8, lsl r1
   17398:	andeq	r6, r1, r4, lsl #7
   1739c:	andeq	r5, r0, ip, lsr #1
   173a0:	andeq	r4, r0, r4, asr #11
   173a4:	andeq	r5, r0, r4, lsl #1
   173a8:	andeq	r5, r0, ip, lsr #32
   173ac:	andeq	r4, r0, r8, lsl #20
   173b0:	andeq	r4, r0, r8, ror #31
   173b4:	andeq	r6, r1, r4, lsr #1
   173b8:	andeq	r4, r0, r4, lsr lr
   173bc:	andeq	r4, r0, ip, asr r3
   173c0:	andeq	r4, r0, r4, lsr #6
   173c4:	andeq	r4, r0, r8, asr #27
   173c8:	andeq	r4, r0, r0, lsl #6
   173cc:	andeq	r4, r0, r0, ror #5
   173d0:	push	{r4, r5, r6, lr}
   173d4:	sub	sp, sp, #8
   173d8:	mov	r4, r0
   173dc:	bl	11380 <fileno@plt>
   173e0:	cmp	r0, #0
   173e4:	mov	r0, r4
   173e8:	blt	17464 <close_stdout@@Base+0x3548>
   173ec:	bl	112b4 <__freading@plt>
   173f0:	cmp	r0, #0
   173f4:	bne	17430 <close_stdout@@Base+0x3514>
   173f8:	mov	r0, r4
   173fc:	bl	17470 <close_stdout@@Base+0x3554>
   17400:	cmp	r0, #0
   17404:	beq	17460 <close_stdout@@Base+0x3544>
   17408:	bl	11344 <__errno_location@plt>
   1740c:	ldr	r6, [r0]
   17410:	mov	r5, r0
   17414:	mov	r0, r4
   17418:	bl	11398 <fclose@plt>
   1741c:	cmp	r6, #0
   17420:	mvnne	r0, #0
   17424:	strne	r6, [r5]
   17428:	add	sp, sp, #8
   1742c:	pop	{r4, r5, r6, pc}
   17430:	mov	r0, r4
   17434:	bl	11380 <fileno@plt>
   17438:	mov	r1, #1
   1743c:	mov	r2, #0
   17440:	mov	r3, #0
   17444:	str	r1, [sp]
   17448:	bl	11230 <lseek64@plt>
   1744c:	mvn	r2, #0
   17450:	mvn	r3, #0
   17454:	cmp	r1, r3
   17458:	cmpeq	r0, r2
   1745c:	bne	173f8 <close_stdout@@Base+0x34dc>
   17460:	mov	r0, r4
   17464:	add	sp, sp, #8
   17468:	pop	{r4, r5, r6, lr}
   1746c:	b	11398 <fclose@plt>
   17470:	push	{r4, lr}
   17474:	subs	r4, r0, #0
   17478:	sub	sp, sp, #8
   1747c:	beq	1748c <close_stdout@@Base+0x3570>
   17480:	bl	112b4 <__freading@plt>
   17484:	cmp	r0, #0
   17488:	bne	1749c <close_stdout@@Base+0x3580>
   1748c:	mov	r0, r4
   17490:	add	sp, sp, #8
   17494:	pop	{r4, lr}
   17498:	b	11170 <fflush@plt>
   1749c:	ldr	r3, [r4]
   174a0:	tst	r3, #256	; 0x100
   174a4:	beq	1748c <close_stdout@@Base+0x3570>
   174a8:	mov	r3, #1
   174ac:	mov	r0, r4
   174b0:	str	r3, [sp]
   174b4:	mov	r2, #0
   174b8:	mov	r3, #0
   174bc:	bl	174d0 <close_stdout@@Base+0x35b4>
   174c0:	mov	r0, r4
   174c4:	add	sp, sp, #8
   174c8:	pop	{r4, lr}
   174cc:	b	11170 <fflush@plt>
   174d0:	push	{r4, r5, r6, r7, lr}
   174d4:	sub	sp, sp, #20
   174d8:	ldmib	r0, {r1, ip}
   174dc:	mov	r6, r0
   174e0:	ldr	r4, [sp, #40]	; 0x28
   174e4:	cmp	ip, r1
   174e8:	beq	17500 <close_stdout@@Base+0x35e4>
   174ec:	str	r4, [sp, #40]	; 0x28
   174f0:	mov	r0, r6
   174f4:	add	sp, sp, #20
   174f8:	pop	{r4, r5, r6, r7, lr}
   174fc:	b	113a4 <fseeko64@plt>
   17500:	ldr	ip, [r0, #20]
   17504:	ldr	r1, [r0, #16]
   17508:	cmp	ip, r1
   1750c:	bne	174ec <close_stdout@@Base+0x35d0>
   17510:	ldr	r7, [r0, #36]	; 0x24
   17514:	cmp	r7, #0
   17518:	bne	174ec <close_stdout@@Base+0x35d0>
   1751c:	str	r2, [sp, #12]
   17520:	mvn	r5, #0
   17524:	str	r3, [sp, #8]
   17528:	bl	11380 <fileno@plt>
   1752c:	str	r4, [sp]
   17530:	mvn	r4, #0
   17534:	ldr	r2, [sp, #12]
   17538:	ldr	r3, [sp, #8]
   1753c:	bl	11230 <lseek64@plt>
   17540:	mov	r2, r0
   17544:	mov	r3, r1
   17548:	cmp	r3, r5
   1754c:	cmpeq	r2, r4
   17550:	beq	17570 <close_stdout@@Base+0x3654>
   17554:	ldr	r1, [r6]
   17558:	mov	r0, r7
   1755c:	strd	r2, [r6, #80]	; 0x50
   17560:	bic	r3, r1, #16
   17564:	str	r3, [r6]
   17568:	add	sp, sp, #20
   1756c:	pop	{r4, r5, r6, r7, pc}
   17570:	mvn	r0, #0
   17574:	b	17568 <close_stdout@@Base+0x364c>
   17578:	ldr	ip, [pc, #3636]	; 183b4 <close_stdout@@Base+0x4498>
   1757c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17580:	add	fp, sp, #32
   17584:	ldr	lr, [pc, #3628]	; 183b8 <close_stdout@@Base+0x449c>
   17588:	sub	sp, sp, #564	; 0x234
   1758c:	add	ip, pc, ip
   17590:	str	r0, [fp, #-504]	; 0xfffffe08
   17594:	sub	r4, fp, #484	; 0x1e4
   17598:	str	r1, [fp, #-536]	; 0xfffffde8
   1759c:	mov	r0, r2
   175a0:	ldr	lr, [ip, lr]
   175a4:	mov	r5, r2
   175a8:	sub	r1, fp, #364	; 0x16c
   175ac:	mov	r2, r4
   175b0:	mov	r6, r3
   175b4:	ldr	ip, [lr]
   175b8:	str	lr, [fp, #-528]	; 0xfffffdf0
   175bc:	str	ip, [fp, #-40]	; 0xffffffd8
   175c0:	bl	1850c <close_stdout@@Base+0x45f0>
   175c4:	cmp	r0, #0
   175c8:	blt	180b8 <close_stdout@@Base+0x419c>
   175cc:	mov	r0, r6
   175d0:	mov	r1, r4
   175d4:	bl	183bc <close_stdout@@Base+0x44a0>
   175d8:	cmp	r0, #0
   175dc:	blt	18178 <close_stdout@@Base+0x425c>
   175e0:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   175e4:	ldr	r2, [fp, #-352]	; 0xfffffea0
   175e8:	add	r3, r3, #7
   175ec:	cmp	r3, #6
   175f0:	mvnls	r3, #0
   175f4:	adds	r3, r3, r2
   175f8:	bcs	17914 <close_stdout@@Base+0x39f8>
   175fc:	adds	r0, r3, #6
   17600:	bcs	17914 <close_stdout@@Base+0x39f8>
   17604:	cmp	r0, #4000	; 0xfa0
   17608:	bcs	1805c <close_stdout@@Base+0x4140>
   1760c:	add	r3, r3, #20
   17610:	mov	r1, #0
   17614:	bic	r3, r3, #7
   17618:	str	r1, [fp, #-548]	; 0xfffffddc
   1761c:	sub	sp, sp, r3
   17620:	add	r2, sp, #32
   17624:	str	r2, [fp, #-512]	; 0xfffffe00
   17628:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1762c:	sub	r2, fp, #496	; 0x1f0
   17630:	str	r2, [fp, #-532]	; 0xfffffdec
   17634:	mov	ip, #0
   17638:	cmp	r3, #0
   1763c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   17640:	ldr	r2, [fp, #-504]	; 0xfffffe08
   17644:	mov	r6, ip
   17648:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   1764c:	add	r7, r3, #44	; 0x2c
   17650:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   17654:	str	ip, [fp, #-520]	; 0xfffffdf8
   17658:	ldrne	r4, [r1]
   1765c:	ldr	sl, [r7, #-44]	; 0xffffffd4
   17660:	sub	r3, r7, #44	; 0x2c
   17664:	str	r3, [fp, #-540]	; 0xfffffde4
   17668:	cmp	sl, r5
   1766c:	beq	17f28 <close_stdout@@Base+0x400c>
   17670:	rsb	r3, r5, sl
   17674:	adds	r9, r3, r6
   17678:	mvncs	r9, #0
   1767c:	cmp	r4, r9
   17680:	bcs	17eb8 <close_stdout@@Base+0x3f9c>
   17684:	cmp	r4, #0
   17688:	beq	17d84 <close_stdout@@Base+0x3e68>
   1768c:	blt	181b4 <close_stdout@@Base+0x4298>
   17690:	lsl	r4, r4, #1
   17694:	cmp	r4, r9
   17698:	movcc	r4, r9
   1769c:	cmn	r4, #1
   176a0:	beq	181b4 <close_stdout@@Base+0x4298>
   176a4:	ldr	r1, [fp, #-504]	; 0xfffffe08
   176a8:	subs	lr, r2, r1
   176ac:	rsbs	r8, lr, #0
   176b0:	adcs	r8, r8, lr
   176b4:	cmp	r2, r1
   176b8:	cmpne	r2, #0
   176bc:	bne	17d8c <close_stdout@@Base+0x3e70>
   176c0:	mov	r0, r4
   176c4:	str	r2, [fp, #-560]	; 0xfffffdd0
   176c8:	str	r3, [fp, #-556]	; 0xfffffdd4
   176cc:	bl	1129c <malloc@plt>
   176d0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   176d4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   176d8:	mov	sl, r0
   176dc:	cmp	sl, #0
   176e0:	beq	181b4 <close_stdout@@Base+0x4298>
   176e4:	cmp	r6, #0
   176e8:	moveq	r8, #0
   176ec:	andne	r8, r8, #1
   176f0:	cmp	r8, #0
   176f4:	bne	17f0c <close_stdout@@Base+0x3ff0>
   176f8:	add	r0, sl, r6
   176fc:	mov	r1, r5
   17700:	mov	r2, r3
   17704:	bl	11194 <memcpy@plt>
   17708:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1770c:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   17710:	cmp	r3, r2
   17714:	beq	181c8 <close_stdout@@Base+0x42ac>
   17718:	ldrb	r3, [r7, #-8]
   1771c:	cmp	r3, #37	; 0x25
   17720:	beq	17db0 <close_stdout@@Base+0x3e94>
   17724:	ldr	r2, [r7, #-4]
   17728:	cmn	r2, #1
   1772c:	beq	18098 <close_stdout@@Base+0x417c>
   17730:	cmp	r3, #110	; 0x6e
   17734:	beq	17edc <close_stdout@@Base+0x3fc0>
   17738:	ldr	r1, [fp, #-480]	; 0xfffffe20
   1773c:	ldr	r3, [r7, #-36]	; 0xffffffdc
   17740:	ldr	r8, [r1, r2, lsl #4]
   17744:	tst	r3, #1
   17748:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1774c:	mov	r2, #37	; 0x25
   17750:	addeq	r5, r1, #1
   17754:	strb	r2, [r1]
   17758:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   1775c:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   17760:	addne	r5, r2, #2
   17764:	movne	r2, #39	; 0x27
   17768:	strbne	r2, [r1, #1]
   1776c:	tst	r3, #2
   17770:	movne	r2, #45	; 0x2d
   17774:	strbne	r2, [r5]
   17778:	addne	r5, r5, #1
   1777c:	tst	r3, #4
   17780:	movne	r2, #43	; 0x2b
   17784:	strbne	r2, [r5]
   17788:	addne	r5, r5, #1
   1778c:	tst	r3, #8
   17790:	movne	r2, #32
   17794:	strbne	r2, [r5]
   17798:	addne	r5, r5, #1
   1779c:	tst	r3, #16
   177a0:	movne	r2, #35	; 0x23
   177a4:	strbne	r2, [r5]
   177a8:	addne	r5, r5, #1
   177ac:	tst	r3, #64	; 0x40
   177b0:	movne	r2, #73	; 0x49
   177b4:	strbne	r2, [r5]
   177b8:	addne	r5, r5, #1
   177bc:	tst	r3, #32
   177c0:	movne	r3, #48	; 0x30
   177c4:	strbne	r3, [r5]
   177c8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   177cc:	addne	r5, r5, #1
   177d0:	ldr	r2, [r7, #-28]	; 0xffffffe4
   177d4:	cmp	r1, r2
   177d8:	beq	177ec <close_stdout@@Base+0x38d0>
   177dc:	rsb	r2, r1, r2
   177e0:	mov	r0, r5
   177e4:	add	r5, r5, r2
   177e8:	bl	11194 <memcpy@plt>
   177ec:	ldr	r1, [r7, #-20]	; 0xffffffec
   177f0:	ldr	r2, [r7, #-16]
   177f4:	cmp	r1, r2
   177f8:	beq	1780c <close_stdout@@Base+0x38f0>
   177fc:	rsb	r2, r1, r2
   17800:	mov	r0, r5
   17804:	add	r5, r5, r2
   17808:	bl	11194 <memcpy@plt>
   1780c:	sub	r3, r8, #7
   17810:	cmp	r3, #9
   17814:	bhi	1783c <close_stdout@@Base+0x3920>
   17818:	mov	r2, #1
   1781c:	lsl	r3, r2, r3
   17820:	movw	r2, #643	; 0x283
   17824:	and	r2, r3, r2
   17828:	cmp	r2, #0
   1782c:	beq	17f34 <close_stdout@@Base+0x4018>
   17830:	mov	r3, #108	; 0x6c
   17834:	add	r5, r5, #1
   17838:	strb	r3, [r5, #-1]
   1783c:	ldrb	r3, [r7, #-8]
   17840:	mov	r1, #0
   17844:	strb	r1, [r5, #1]
   17848:	strb	r3, [r5]
   1784c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   17850:	cmn	r3, #1
   17854:	beq	18054 <close_stdout@@Base+0x4138>
   17858:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1785c:	add	r1, r2, r3, lsl #4
   17860:	ldr	r3, [r2, r3, lsl #4]
   17864:	cmp	r3, #5
   17868:	bne	18098 <close_stdout@@Base+0x417c>
   1786c:	ldr	r3, [r1, #8]
   17870:	mov	r6, #1
   17874:	str	r3, [fp, #-492]	; 0xfffffe14
   17878:	ldr	r3, [r7, #-12]
   1787c:	cmn	r3, #1
   17880:	beq	178ac <close_stdout@@Base+0x3990>
   17884:	ldr	r2, [fp, #-480]	; 0xfffffe20
   17888:	add	r1, r2, r3, lsl #4
   1788c:	ldr	r3, [r2, r3, lsl #4]
   17890:	cmp	r3, #5
   17894:	bne	18098 <close_stdout@@Base+0x417c>
   17898:	ldr	r2, [r1, #8]
   1789c:	sub	r1, fp, #36	; 0x24
   178a0:	add	r3, r1, r6, lsl #2
   178a4:	add	r6, r6, #1
   178a8:	str	r2, [r3, #-456]	; 0xfffffe38
   178ac:	adds	r2, r9, #2
   178b0:	str	r2, [fp, #-524]	; 0xfffffdf4
   178b4:	mov	r3, r2
   178b8:	mvncs	r3, #0
   178bc:	cmp	r4, r3
   178c0:	bcs	179fc <close_stdout@@Base+0x3ae0>
   178c4:	cmp	r4, #0
   178c8:	beq	17974 <close_stdout@@Base+0x3a58>
   178cc:	blt	183a0 <close_stdout@@Base+0x4484>
   178d0:	cmp	r9, r2
   178d4:	lsl	r4, r4, #1
   178d8:	bls	17984 <close_stdout@@Base+0x3a68>
   178dc:	str	sl, [fp, #-560]	; 0xfffffdd0
   178e0:	bl	11344 <__errno_location@plt>
   178e4:	str	r0, [fp, #-516]	; 0xfffffdfc
   178e8:	mov	r2, sl
   178ec:	ldr	r3, [fp, #-504]	; 0xfffffe08
   178f0:	cmp	r2, #0
   178f4:	cmpne	r2, r3
   178f8:	bne	18340 <close_stdout@@Base+0x4424>
   178fc:	ldr	r1, [fp, #-548]	; 0xfffffddc
   17900:	cmp	r1, #0
   17904:	beq	17914 <close_stdout@@Base+0x39f8>
   17908:	mov	r0, r1
   1790c:	bl	1117c <free@plt>
   17910:	b	1791c <close_stdout@@Base+0x3a00>
   17914:	bl	11344 <__errno_location@plt>
   17918:	str	r0, [fp, #-516]	; 0xfffffdfc
   1791c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   17920:	sub	r3, fp, #348	; 0x15c
   17924:	cmp	r0, r3
   17928:	beq	17930 <close_stdout@@Base+0x3a14>
   1792c:	bl	1117c <free@plt>
   17930:	ldr	r0, [fp, #-480]	; 0xfffffe20
   17934:	sub	r3, fp, #476	; 0x1dc
   17938:	cmp	r0, r3
   1793c:	beq	17944 <close_stdout@@Base+0x3a28>
   17940:	bl	1117c <free@plt>
   17944:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   17948:	mov	r3, #0
   1794c:	mov	r2, #12
   17950:	str	r2, [r1]
   17954:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   17958:	mov	r0, r3
   1795c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17960:	ldr	r3, [r1]
   17964:	cmp	r2, r3
   17968:	bne	1839c <close_stdout@@Base+0x4480>
   1796c:	sub	sp, fp, #32
   17970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17974:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   17978:	cmp	r9, r3
   1797c:	bhi	178dc <close_stdout@@Base+0x39c0>
   17980:	mov	r4, #12
   17984:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   17988:	cmp	r3, r4
   1798c:	movcs	r4, r3
   17990:	cmn	r4, #1
   17994:	beq	178dc <close_stdout@@Base+0x39c0>
   17998:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1799c:	subs	r0, sl, r1
   179a0:	rsbs	r2, r0, #0
   179a4:	adcs	r2, r2, r0
   179a8:	cmp	sl, r1
   179ac:	cmpne	sl, #0
   179b0:	bne	1807c <close_stdout@@Base+0x4160>
   179b4:	mov	r0, r4
   179b8:	str	r2, [fp, #-560]	; 0xfffffdd0
   179bc:	bl	1129c <malloc@plt>
   179c0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   179c4:	mov	r3, r0
   179c8:	cmp	r3, #0
   179cc:	beq	178dc <close_stdout@@Base+0x39c0>
   179d0:	cmp	r9, #0
   179d4:	moveq	r2, #0
   179d8:	andne	r2, r2, #1
   179dc:	cmp	r2, #0
   179e0:	moveq	sl, r3
   179e4:	beq	179fc <close_stdout@@Base+0x3ae0>
   179e8:	mov	r1, sl
   179ec:	mov	r0, r3
   179f0:	mov	r2, r9
   179f4:	mov	sl, r3
   179f8:	bl	11194 <memcpy@plt>
   179fc:	mov	r2, #0
   17a00:	strb	r2, [sl, r9]
   17a04:	sub	r8, r8, #1
   17a08:	str	r8, [fp, #-508]	; 0xfffffe04
   17a0c:	bl	11344 <__errno_location@plt>
   17a10:	rsb	ip, r9, r4
   17a14:	str	r5, [fp, #-544]	; 0xfffffde0
   17a18:	mov	r5, ip
   17a1c:	ldr	r3, [r0]
   17a20:	str	r0, [fp, #-516]	; 0xfffffdfc
   17a24:	str	r3, [fp, #-552]	; 0xfffffdd8
   17a28:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   17a2c:	mvn	r1, #0
   17a30:	cmp	r5, #0
   17a34:	str	r1, [fp, #-496]	; 0xfffffe10
   17a38:	ldr	r1, [fp, #-508]	; 0xfffffe04
   17a3c:	mov	r3, #0
   17a40:	movge	r8, r5
   17a44:	mvnlt	r8, #-2147483648	; 0x80000000
   17a48:	str	r3, [r2]
   17a4c:	cmp	r1, #16
   17a50:	addls	pc, pc, r1, lsl #2
   17a54:	b	18098 <close_stdout@@Base+0x417c>
   17a58:	b	17f8c <close_stdout@@Base+0x4070>
   17a5c:	b	17e6c <close_stdout@@Base+0x3f50>
   17a60:	b	17f70 <close_stdout@@Base+0x4054>
   17a64:	b	17f54 <close_stdout@@Base+0x4038>
   17a68:	b	17a9c <close_stdout@@Base+0x3b80>
   17a6c:	b	17a9c <close_stdout@@Base+0x3b80>
   17a70:	b	17a9c <close_stdout@@Base+0x3b80>
   17a74:	b	17a9c <close_stdout@@Base+0x3b80>
   17a78:	b	17bf4 <close_stdout@@Base+0x3cd8>
   17a7c:	b	17bf4 <close_stdout@@Base+0x3cd8>
   17a80:	b	17c50 <close_stdout@@Base+0x3d34>
   17a84:	b	17c50 <close_stdout@@Base+0x3d34>
   17a88:	b	17a9c <close_stdout@@Base+0x3b80>
   17a8c:	b	17a9c <close_stdout@@Base+0x3b80>
   17a90:	b	17a9c <close_stdout@@Base+0x3b80>
   17a94:	b	17a9c <close_stdout@@Base+0x3b80>
   17a98:	b	17a9c <close_stdout@@Base+0x3b80>
   17a9c:	ldr	r2, [r7, #-4]
   17aa0:	cmp	r6, #1
   17aa4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17aa8:	add	r3, r3, r2, lsl #4
   17aac:	ldr	r3, [r3, #8]
   17ab0:	beq	17e84 <close_stdout@@Base+0x3f68>
   17ab4:	cmp	r6, #2
   17ab8:	bne	17cac <close_stdout@@Base+0x3d90>
   17abc:	ldr	r2, [fp, #-512]	; 0xfffffe00
   17ac0:	add	r0, sl, r9
   17ac4:	ldr	lr, [fp, #-492]	; 0xfffffe14
   17ac8:	mov	r1, r8
   17acc:	ldr	ip, [fp, #-488]	; 0xfffffe18
   17ad0:	str	r2, [sp]
   17ad4:	mov	r2, #1
   17ad8:	str	r3, [sp, #12]
   17adc:	sub	r3, fp, #496	; 0x1f0
   17ae0:	str	lr, [sp, #4]
   17ae4:	str	r3, [sp, #16]
   17ae8:	mvn	r3, #0
   17aec:	str	ip, [sp, #8]
   17af0:	bl	1141c <__snprintf_chk@plt>
   17af4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   17af8:	cmp	r3, #0
   17afc:	blt	17ce0 <close_stdout@@Base+0x3dc4>
   17b00:	cmp	r8, r3
   17b04:	bls	17b18 <close_stdout@@Base+0x3bfc>
   17b08:	add	r2, sl, r3
   17b0c:	ldrb	r2, [r2, r9]
   17b10:	cmp	r2, #0
   17b14:	bne	18098 <close_stdout@@Base+0x417c>
   17b18:	cmp	r0, r3
   17b1c:	movle	r0, r3
   17b20:	ble	17b28 <close_stdout@@Base+0x3c0c>
   17b24:	str	r0, [fp, #-496]	; 0xfffffe10
   17b28:	add	r3, r0, #1
   17b2c:	cmp	r8, r3
   17b30:	bhi	182c8 <close_stdout@@Base+0x43ac>
   17b34:	cmn	r8, #-2147483647	; 0x80000001
   17b38:	beq	182e0 <close_stdout@@Base+0x43c4>
   17b3c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   17b40:	add	r0, r0, r2
   17b44:	cmp	r9, r0
   17b48:	mvnhi	r0, #0
   17b4c:	cmp	r4, #0
   17b50:	mvnlt	r0, #0
   17b54:	blt	17b64 <close_stdout@@Base+0x3c48>
   17b58:	lsl	r3, r4, #1
   17b5c:	cmp	r0, r3
   17b60:	movcc	r0, r3
   17b64:	cmp	r4, r0
   17b68:	bcs	17a28 <close_stdout@@Base+0x3b0c>
   17b6c:	cmp	r4, #0
   17b70:	beq	17ec0 <close_stdout@@Base+0x3fa4>
   17b74:	blt	178e8 <close_stdout@@Base+0x39cc>
   17b78:	lsl	r4, r4, #1
   17b7c:	cmp	r4, r0
   17b80:	movcc	r4, r0
   17b84:	cmn	r4, #1
   17b88:	beq	178e8 <close_stdout@@Base+0x39cc>
   17b8c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   17b90:	subs	r2, sl, r3
   17b94:	rsbs	r5, r2, #0
   17b98:	adcs	r5, r5, r2
   17b9c:	cmp	sl, r3
   17ba0:	cmpne	sl, #0
   17ba4:	bne	17ec8 <close_stdout@@Base+0x3fac>
   17ba8:	mov	r0, r4
   17bac:	bl	1129c <malloc@plt>
   17bb0:	mov	r3, r0
   17bb4:	cmp	r3, #0
   17bb8:	beq	178e8 <close_stdout@@Base+0x39cc>
   17bbc:	cmp	r9, #0
   17bc0:	moveq	r5, #0
   17bc4:	andne	r5, r5, #1
   17bc8:	cmp	r5, #0
   17bcc:	rsbeq	r5, r9, r4
   17bd0:	moveq	sl, r3
   17bd4:	beq	17a28 <close_stdout@@Base+0x3b0c>
   17bd8:	mov	r1, sl
   17bdc:	mov	r0, r3
   17be0:	mov	r2, r9
   17be4:	mov	sl, r3
   17be8:	rsb	r5, r9, r4
   17bec:	bl	11194 <memcpy@plt>
   17bf0:	b	17a28 <close_stdout@@Base+0x3b0c>
   17bf4:	ldr	r2, [r7, #-4]
   17bf8:	cmp	r6, #1
   17bfc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17c00:	add	r3, r3, r2, lsl #4
   17c04:	ldrd	r2, [r3, #8]
   17c08:	beq	18020 <close_stdout@@Base+0x4104>
   17c0c:	cmp	r6, #2
   17c10:	bne	180fc <close_stdout@@Base+0x41e0>
   17c14:	ldr	r1, [fp, #-512]	; 0xfffffe00
   17c18:	add	r0, sl, r9
   17c1c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   17c20:	ldr	ip, [fp, #-488]	; 0xfffffe18
   17c24:	strd	r2, [sp, #16]
   17c28:	sub	r2, fp, #496	; 0x1f0
   17c2c:	str	r1, [sp]
   17c30:	mvn	r3, #0
   17c34:	str	r2, [sp, #24]
   17c38:	mov	r1, r8
   17c3c:	mov	r2, #1
   17c40:	str	lr, [sp, #4]
   17c44:	str	ip, [sp, #8]
   17c48:	bl	1141c <__snprintf_chk@plt>
   17c4c:	b	17af4 <close_stdout@@Base+0x3bd8>
   17c50:	ldr	r2, [r7, #-4]
   17c54:	cmp	r6, #1
   17c58:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17c5c:	add	r3, r3, r2, lsl #4
   17c60:	ldrd	r0, [r3, #8]
   17c64:	beq	17fec <close_stdout@@Base+0x40d0>
   17c68:	cmp	r6, #2
   17c6c:	bne	180d0 <close_stdout@@Base+0x41b4>
   17c70:	ldr	r3, [fp, #-492]	; 0xfffffe14
   17c74:	ldr	r2, [fp, #-512]	; 0xfffffe00
   17c78:	ldr	lr, [fp, #-488]	; 0xfffffe18
   17c7c:	strd	r0, [sp, #16]
   17c80:	add	r0, sl, r9
   17c84:	str	r2, [sp]
   17c88:	mov	r1, r8
   17c8c:	sub	r2, fp, #496	; 0x1f0
   17c90:	str	r3, [sp, #4]
   17c94:	str	r2, [sp, #24]
   17c98:	mvn	r3, #0
   17c9c:	mov	r2, #1
   17ca0:	str	lr, [sp, #8]
   17ca4:	bl	1141c <__snprintf_chk@plt>
   17ca8:	b	17af4 <close_stdout@@Base+0x3bd8>
   17cac:	ldr	r1, [fp, #-512]	; 0xfffffe00
   17cb0:	sub	r2, fp, #496	; 0x1f0
   17cb4:	str	r3, [sp, #4]
   17cb8:	add	r0, sl, r9
   17cbc:	str	r2, [sp, #8]
   17cc0:	mvn	r3, #0
   17cc4:	str	r1, [sp]
   17cc8:	mov	r2, #1
   17ccc:	mov	r1, r8
   17cd0:	bl	1141c <__snprintf_chk@plt>
   17cd4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   17cd8:	cmp	r3, #0
   17cdc:	bge	17b00 <close_stdout@@Base+0x3be4>
   17ce0:	ldr	r1, [fp, #-544]	; 0xfffffde0
   17ce4:	ldrb	r3, [r1, #1]
   17ce8:	cmp	r3, #0
   17cec:	movne	r2, #0
   17cf0:	strbne	r2, [r1, #1]
   17cf4:	bne	17a28 <close_stdout@@Base+0x3b0c>
   17cf8:	cmp	r0, #0
   17cfc:	bge	17b24 <close_stdout@@Base+0x3c08>
   17d00:	ldr	r3, [fp, #-504]	; 0xfffffe08
   17d04:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   17d08:	cmp	sl, #0
   17d0c:	cmpne	r3, sl
   17d10:	ldr	r4, [r1]
   17d14:	bne	1816c <close_stdout@@Base+0x4250>
   17d18:	ldr	r2, [fp, #-548]	; 0xfffffddc
   17d1c:	cmp	r2, #0
   17d20:	beq	17d2c <close_stdout@@Base+0x3e10>
   17d24:	mov	r0, r2
   17d28:	bl	1117c <free@plt>
   17d2c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   17d30:	sub	r3, fp, #348	; 0x15c
   17d34:	cmp	r0, r3
   17d38:	beq	17d40 <close_stdout@@Base+0x3e24>
   17d3c:	bl	1117c <free@plt>
   17d40:	ldr	r0, [fp, #-480]	; 0xfffffe20
   17d44:	sub	r3, fp, #476	; 0x1dc
   17d48:	cmp	r0, r3
   17d4c:	beq	17d54 <close_stdout@@Base+0x3e38>
   17d50:	bl	1117c <free@plt>
   17d54:	cmp	r4, #0
   17d58:	bne	17d74 <close_stdout@@Base+0x3e58>
   17d5c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   17d60:	ldrb	r4, [r3, #36]	; 0x24
   17d64:	and	r4, r4, #239	; 0xef
   17d68:	cmp	r4, #99	; 0x63
   17d6c:	movne	r4, #22
   17d70:	moveq	r4, #84	; 0x54
   17d74:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   17d78:	mov	r3, #0
   17d7c:	str	r4, [r1]
   17d80:	b	17954 <close_stdout@@Base+0x3a38>
   17d84:	mov	r4, #12
   17d88:	b	17694 <close_stdout@@Base+0x3778>
   17d8c:	mov	r0, r2
   17d90:	mov	r1, r4
   17d94:	str	r2, [fp, #-560]	; 0xfffffdd0
   17d98:	str	r3, [fp, #-556]	; 0xfffffdd4
   17d9c:	bl	111e8 <realloc@plt>
   17da0:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   17da4:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   17da8:	mov	sl, r0
   17dac:	b	176dc <close_stdout@@Base+0x37c0>
   17db0:	ldr	r3, [r7, #-4]
   17db4:	cmn	r3, #1
   17db8:	bne	18098 <close_stdout@@Base+0x417c>
   17dbc:	adds	r6, r9, #1
   17dc0:	mvncs	r6, #0
   17dc4:	cmp	r4, r6
   17dc8:	bcs	17e48 <close_stdout@@Base+0x3f2c>
   17dcc:	cmp	r4, #0
   17dd0:	beq	1809c <close_stdout@@Base+0x4180>
   17dd4:	blt	178dc <close_stdout@@Base+0x39c0>
   17dd8:	lsl	r4, r4, #1
   17ddc:	cmp	r4, r6
   17de0:	movcc	r4, r6
   17de4:	cmn	r4, #1
   17de8:	beq	178dc <close_stdout@@Base+0x39c0>
   17dec:	ldr	r3, [fp, #-504]	; 0xfffffe08
   17df0:	subs	ip, sl, r3
   17df4:	rsbs	r5, ip, #0
   17df8:	adcs	r5, r5, ip
   17dfc:	cmp	sl, r3
   17e00:	cmpne	sl, #0
   17e04:	bne	180a4 <close_stdout@@Base+0x4188>
   17e08:	mov	r0, r4
   17e0c:	bl	1129c <malloc@plt>
   17e10:	mov	r3, r0
   17e14:	cmp	r3, #0
   17e18:	beq	178dc <close_stdout@@Base+0x39c0>
   17e1c:	cmp	r9, #0
   17e20:	moveq	r5, #0
   17e24:	andne	r5, r5, #1
   17e28:	cmp	r5, #0
   17e2c:	moveq	sl, r3
   17e30:	beq	17e48 <close_stdout@@Base+0x3f2c>
   17e34:	mov	r1, sl
   17e38:	mov	r0, r3
   17e3c:	mov	r2, r9
   17e40:	mov	sl, r3
   17e44:	bl	11194 <memcpy@plt>
   17e48:	mov	r2, sl
   17e4c:	mov	r1, #37	; 0x25
   17e50:	strb	r1, [sl, r9]
   17e54:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   17e58:	add	r7, r7, #44	; 0x2c
   17e5c:	ldr	r5, [r7, #-84]	; 0xffffffac
   17e60:	add	r1, r1, #1
   17e64:	str	r1, [fp, #-520]	; 0xfffffdf8
   17e68:	b	1765c <close_stdout@@Base+0x3740>
   17e6c:	ldr	r2, [r7, #-4]
   17e70:	cmp	r6, #1
   17e74:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17e78:	add	r3, r3, r2, lsl #4
   17e7c:	ldrb	r3, [r3, #8]
   17e80:	bne	17ab4 <close_stdout@@Base+0x3b98>
   17e84:	ldr	r1, [fp, #-512]	; 0xfffffe00
   17e88:	add	r0, sl, r9
   17e8c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   17e90:	mov	r2, r6
   17e94:	str	r3, [sp, #8]
   17e98:	sub	r3, fp, #496	; 0x1f0
   17e9c:	str	r1, [sp]
   17ea0:	mov	r1, r8
   17ea4:	str	r3, [sp, #12]
   17ea8:	mvn	r3, #0
   17eac:	str	lr, [sp, #4]
   17eb0:	bl	1141c <__snprintf_chk@plt>
   17eb4:	b	17af4 <close_stdout@@Base+0x3bd8>
   17eb8:	mov	sl, r2
   17ebc:	b	176f8 <close_stdout@@Base+0x37dc>
   17ec0:	mov	r4, #12
   17ec4:	b	17b7c <close_stdout@@Base+0x3c60>
   17ec8:	mov	r0, sl
   17ecc:	mov	r1, r4
   17ed0:	bl	111e8 <realloc@plt>
   17ed4:	mov	r3, r0
   17ed8:	b	17bb4 <close_stdout@@Base+0x3c98>
   17edc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17ee0:	add	r1, r3, r2, lsl #4
   17ee4:	ldr	r3, [r3, r2, lsl #4]
   17ee8:	sub	r3, r3, #18
   17eec:	cmp	r3, #4
   17ef0:	addls	pc, pc, r3, lsl #2
   17ef4:	b	18098 <close_stdout@@Base+0x417c>
   17ef8:	b	18128 <close_stdout@@Base+0x420c>
   17efc:	b	1813c <close_stdout@@Base+0x4220>
   17f00:	b	17fd8 <close_stdout@@Base+0x40bc>
   17f04:	b	17fd8 <close_stdout@@Base+0x40bc>
   17f08:	b	18150 <close_stdout@@Base+0x4234>
   17f0c:	mov	r1, r2
   17f10:	mov	r0, sl
   17f14:	mov	r2, r6
   17f18:	str	r3, [fp, #-556]	; 0xfffffdd4
   17f1c:	bl	11194 <memcpy@plt>
   17f20:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   17f24:	b	176f8 <close_stdout@@Base+0x37dc>
   17f28:	mov	r9, r6
   17f2c:	mov	sl, r2
   17f30:	b	17708 <close_stdout@@Base+0x37ec>
   17f34:	tst	r3, #32
   17f38:	bne	180c0 <close_stdout@@Base+0x41a4>
   17f3c:	tst	r3, #12
   17f40:	beq	1783c <close_stdout@@Base+0x3920>
   17f44:	mov	r3, #108	; 0x6c
   17f48:	add	r5, r5, #1
   17f4c:	strb	r3, [r5, #-1]
   17f50:	b	17830 <close_stdout@@Base+0x3914>
   17f54:	ldr	r2, [r7, #-4]
   17f58:	cmp	r6, #1
   17f5c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17f60:	add	r3, r3, r2, lsl #4
   17f64:	ldrh	r3, [r3, #8]
   17f68:	bne	17ab4 <close_stdout@@Base+0x3b98>
   17f6c:	b	17e84 <close_stdout@@Base+0x3f68>
   17f70:	ldr	r2, [r7, #-4]
   17f74:	cmp	r6, #1
   17f78:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17f7c:	add	r3, r3, r2, lsl #4
   17f80:	ldrsh	r3, [r3, #8]
   17f84:	bne	17ab4 <close_stdout@@Base+0x3b98>
   17f88:	b	17e84 <close_stdout@@Base+0x3f68>
   17f8c:	ldr	r2, [r7, #-4]
   17f90:	cmp	r6, #1
   17f94:	ldr	r3, [fp, #-480]	; 0xfffffe20
   17f98:	add	r3, r3, r2, lsl #4
   17f9c:	ldrsb	r3, [r3, #8]
   17fa0:	beq	17e84 <close_stdout@@Base+0x3f68>
   17fa4:	cmp	r6, #2
   17fa8:	beq	17abc <close_stdout@@Base+0x3ba0>
   17fac:	ldr	r2, [fp, #-512]	; 0xfffffe00
   17fb0:	add	r0, sl, r9
   17fb4:	str	r3, [sp, #4]
   17fb8:	mov	r1, r8
   17fbc:	sub	r3, fp, #496	; 0x1f0
   17fc0:	str	r3, [sp, #8]
   17fc4:	str	r2, [sp]
   17fc8:	mvn	r3, #0
   17fcc:	mov	r2, #1
   17fd0:	bl	1141c <__snprintf_chk@plt>
   17fd4:	b	17af4 <close_stdout@@Base+0x3bd8>
   17fd8:	ldr	r3, [r1, #8]
   17fdc:	mov	r2, sl
   17fe0:	mov	r6, r9
   17fe4:	str	r9, [r3]
   17fe8:	b	17e54 <close_stdout@@Base+0x3f38>
   17fec:	ldr	r3, [fp, #-492]	; 0xfffffe14
   17ff0:	ldr	r2, [fp, #-512]	; 0xfffffe00
   17ff4:	strd	r0, [sp, #8]
   17ff8:	sub	r1, fp, #496	; 0x1f0
   17ffc:	str	r3, [sp, #4]
   18000:	add	r0, sl, r9
   18004:	str	r2, [sp]
   18008:	mvn	r3, #0
   1800c:	str	r1, [sp, #16]
   18010:	mov	r2, r6
   18014:	mov	r1, r8
   18018:	bl	1141c <__snprintf_chk@plt>
   1801c:	b	17af4 <close_stdout@@Base+0x3bd8>
   18020:	ldr	r1, [fp, #-512]	; 0xfffffe00
   18024:	add	r0, sl, r9
   18028:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1802c:	strd	r2, [sp, #8]
   18030:	sub	r3, fp, #496	; 0x1f0
   18034:	str	r1, [sp]
   18038:	mov	r2, r6
   1803c:	str	r3, [sp, #16]
   18040:	mov	r1, r8
   18044:	mvn	r3, #0
   18048:	str	lr, [sp, #4]
   1804c:	bl	1141c <__snprintf_chk@plt>
   18050:	b	17af4 <close_stdout@@Base+0x3bd8>
   18054:	mov	r6, #0
   18058:	b	17878 <close_stdout@@Base+0x395c>
   1805c:	cmn	r0, #1
   18060:	beq	17914 <close_stdout@@Base+0x39f8>
   18064:	bl	1129c <malloc@plt>
   18068:	cmp	r0, #0
   1806c:	str	r0, [fp, #-512]	; 0xfffffe00
   18070:	beq	17914 <close_stdout@@Base+0x39f8>
   18074:	str	r0, [fp, #-548]	; 0xfffffddc
   18078:	b	17628 <close_stdout@@Base+0x370c>
   1807c:	mov	r0, sl
   18080:	mov	r1, r4
   18084:	str	r2, [fp, #-560]	; 0xfffffdd0
   18088:	bl	111e8 <realloc@plt>
   1808c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   18090:	mov	r3, r0
   18094:	b	179c8 <close_stdout@@Base+0x3aac>
   18098:	bl	11404 <abort@plt>
   1809c:	mov	r4, #12
   180a0:	b	17ddc <close_stdout@@Base+0x3ec0>
   180a4:	mov	r0, sl
   180a8:	mov	r1, r4
   180ac:	bl	111e8 <realloc@plt>
   180b0:	mov	r3, r0
   180b4:	b	17e14 <close_stdout@@Base+0x3ef8>
   180b8:	mov	r3, #0
   180bc:	b	17954 <close_stdout@@Base+0x3a38>
   180c0:	mov	r3, #76	; 0x4c
   180c4:	add	r5, r5, #1
   180c8:	strb	r3, [r5, #-1]
   180cc:	b	1783c <close_stdout@@Base+0x3920>
   180d0:	ldr	r3, [fp, #-512]	; 0xfffffe00
   180d4:	mov	r2, #1
   180d8:	strd	r0, [sp, #8]
   180dc:	sub	r1, fp, #496	; 0x1f0
   180e0:	add	r0, sl, r9
   180e4:	str	r1, [sp, #16]
   180e8:	str	r3, [sp]
   180ec:	mov	r1, r8
   180f0:	mvn	r3, #0
   180f4:	bl	1141c <__snprintf_chk@plt>
   180f8:	b	17af4 <close_stdout@@Base+0x3bd8>
   180fc:	ldr	r1, [fp, #-512]	; 0xfffffe00
   18100:	add	r0, sl, r9
   18104:	strd	r2, [sp, #8]
   18108:	sub	r2, fp, #496	; 0x1f0
   1810c:	mvn	r3, #0
   18110:	str	r2, [sp, #16]
   18114:	str	r1, [sp]
   18118:	mov	r2, #1
   1811c:	mov	r1, r8
   18120:	bl	1141c <__snprintf_chk@plt>
   18124:	b	17af4 <close_stdout@@Base+0x3bd8>
   18128:	ldr	r3, [r1, #8]
   1812c:	mov	r2, sl
   18130:	mov	r6, r9
   18134:	strb	r9, [r3]
   18138:	b	17e54 <close_stdout@@Base+0x3f38>
   1813c:	ldr	r3, [r1, #8]
   18140:	mov	r2, sl
   18144:	mov	r6, r9
   18148:	strh	r9, [r3]
   1814c:	b	17e54 <close_stdout@@Base+0x3f38>
   18150:	ldr	r3, [r1, #8]
   18154:	mov	r2, sl
   18158:	mov	r1, #0
   1815c:	mov	r6, r9
   18160:	str	r9, [r3]
   18164:	str	r1, [r3, #4]
   18168:	b	17e54 <close_stdout@@Base+0x3f38>
   1816c:	mov	r0, sl
   18170:	bl	1117c <free@plt>
   18174:	b	17d18 <close_stdout@@Base+0x3dfc>
   18178:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1817c:	sub	r3, fp, #348	; 0x15c
   18180:	cmp	r0, r3
   18184:	beq	1818c <close_stdout@@Base+0x4270>
   18188:	bl	1117c <free@plt>
   1818c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   18190:	sub	r3, fp, #476	; 0x1dc
   18194:	cmp	r0, r3
   18198:	beq	181a0 <close_stdout@@Base+0x4284>
   1819c:	bl	1117c <free@plt>
   181a0:	bl	11344 <__errno_location@plt>
   181a4:	mov	r2, #22
   181a8:	mov	r3, #0
   181ac:	str	r2, [r0]
   181b0:	b	17954 <close_stdout@@Base+0x3a38>
   181b4:	str	r2, [fp, #-560]	; 0xfffffdd0
   181b8:	bl	11344 <__errno_location@plt>
   181bc:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   181c0:	str	r0, [fp, #-516]	; 0xfffffdfc
   181c4:	b	178ec <close_stdout@@Base+0x39d0>
   181c8:	adds	r5, r9, #1
   181cc:	movcc	r3, r5
   181d0:	mvncs	r3, #0
   181d4:	cmp	r3, r4
   181d8:	bls	18260 <close_stdout@@Base+0x4344>
   181dc:	cmp	r4, #0
   181e0:	moveq	r4, #12
   181e4:	beq	181f0 <close_stdout@@Base+0x42d4>
   181e8:	lslge	r4, r4, #1
   181ec:	mvnlt	r4, #0
   181f0:	cmp	r5, r9
   181f4:	movcs	r3, r5
   181f8:	mvncc	r3, #0
   181fc:	cmp	r4, r3
   18200:	bcs	18210 <close_stdout@@Base+0x42f4>
   18204:	cmp	r5, r9
   18208:	bcc	178dc <close_stdout@@Base+0x39c0>
   1820c:	mov	r4, r5
   18210:	cmn	r4, #1
   18214:	beq	178dc <close_stdout@@Base+0x39c0>
   18218:	ldr	r2, [fp, #-504]	; 0xfffffe08
   1821c:	subs	r3, sl, r2
   18220:	rsbs	r6, r3, #0
   18224:	adcs	r6, r6, r3
   18228:	cmp	sl, r2
   1822c:	cmpne	sl, #0
   18230:	bne	18370 <close_stdout@@Base+0x4454>
   18234:	mov	r0, r4
   18238:	bl	1129c <malloc@plt>
   1823c:	mov	r3, r0
   18240:	cmp	r3, #0
   18244:	beq	178dc <close_stdout@@Base+0x39c0>
   18248:	cmp	r9, #0
   1824c:	moveq	r6, #0
   18250:	andne	r6, r6, #1
   18254:	cmp	r6, #0
   18258:	moveq	sl, r3
   1825c:	bne	18384 <close_stdout@@Base+0x4468>
   18260:	ldr	r3, [fp, #-504]	; 0xfffffe08
   18264:	cmp	sl, r3
   18268:	mov	r3, #0
   1826c:	strb	r3, [sl, r9]
   18270:	beq	1827c <close_stdout@@Base+0x4360>
   18274:	cmp	r4, r5
   18278:	bhi	18358 <close_stdout@@Base+0x443c>
   1827c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   18280:	cmp	r1, #0
   18284:	beq	18290 <close_stdout@@Base+0x4374>
   18288:	mov	r0, r1
   1828c:	bl	1117c <free@plt>
   18290:	ldr	r0, [fp, #-360]	; 0xfffffe98
   18294:	sub	r3, fp, #348	; 0x15c
   18298:	cmp	r0, r3
   1829c:	beq	182a4 <close_stdout@@Base+0x4388>
   182a0:	bl	1117c <free@plt>
   182a4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   182a8:	sub	r3, fp, #476	; 0x1dc
   182ac:	cmp	r0, r3
   182b0:	beq	182b8 <close_stdout@@Base+0x439c>
   182b4:	bl	1117c <free@plt>
   182b8:	ldr	r2, [fp, #-536]	; 0xfffffde8
   182bc:	mov	r3, sl
   182c0:	str	r9, [r2]
   182c4:	b	17954 <close_stdout@@Base+0x3a38>
   182c8:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   182cc:	add	r6, r0, r9
   182d0:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   182d4:	str	r1, [r2]
   182d8:	mov	r2, sl
   182dc:	b	17e54 <close_stdout@@Base+0x3f38>
   182e0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   182e4:	cmp	sl, #0
   182e8:	cmpne	sl, r3
   182ec:	bne	1834c <close_stdout@@Base+0x4430>
   182f0:	ldr	r3, [fp, #-548]	; 0xfffffddc
   182f4:	cmp	r3, #0
   182f8:	beq	18304 <close_stdout@@Base+0x43e8>
   182fc:	mov	r0, r3
   18300:	bl	1117c <free@plt>
   18304:	ldr	r0, [fp, #-360]	; 0xfffffe98
   18308:	sub	r3, fp, #348	; 0x15c
   1830c:	cmp	r0, r3
   18310:	beq	18318 <close_stdout@@Base+0x43fc>
   18314:	bl	1117c <free@plt>
   18318:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1831c:	sub	r3, fp, #476	; 0x1dc
   18320:	cmp	r0, r3
   18324:	beq	1832c <close_stdout@@Base+0x4410>
   18328:	bl	1117c <free@plt>
   1832c:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   18330:	mov	r2, #75	; 0x4b
   18334:	mov	r3, #0
   18338:	str	r2, [r1]
   1833c:	b	17954 <close_stdout@@Base+0x3a38>
   18340:	mov	r0, r2
   18344:	bl	1117c <free@plt>
   18348:	b	178fc <close_stdout@@Base+0x39e0>
   1834c:	mov	r0, sl
   18350:	bl	1117c <free@plt>
   18354:	b	182f0 <close_stdout@@Base+0x43d4>
   18358:	mov	r0, sl
   1835c:	mov	r1, r5
   18360:	bl	111e8 <realloc@plt>
   18364:	cmp	r0, #0
   18368:	movne	sl, r0
   1836c:	b	1827c <close_stdout@@Base+0x4360>
   18370:	mov	r0, sl
   18374:	mov	r1, r4
   18378:	bl	111e8 <realloc@plt>
   1837c:	mov	r3, r0
   18380:	b	18240 <close_stdout@@Base+0x4324>
   18384:	mov	r1, sl
   18388:	mov	r0, r3
   1838c:	mov	r2, r9
   18390:	mov	sl, r3
   18394:	bl	11194 <memcpy@plt>
   18398:	b	18260 <close_stdout@@Base+0x4344>
   1839c:	bl	111c4 <__stack_chk_fail@plt>
   183a0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   183a4:	cmp	r9, r2
   183a8:	bhi	178dc <close_stdout@@Base+0x39c0>
   183ac:	mvn	r4, #0
   183b0:	b	17984 <close_stdout@@Base+0x3a68>
   183b4:	andeq	r5, r1, ip, ror #20
   183b8:	andeq	r0, r0, r8, lsl r1
   183bc:	push	{r4, r5, r6}
   183c0:	ldm	r1, {r3, ip}
   183c4:	cmp	r3, #0
   183c8:	beq	18470 <close_stdout@@Base+0x4554>
   183cc:	ldr	r6, [pc, #304]	; 18504 <close_stdout@@Base+0x45e8>
   183d0:	add	ip, ip, #16
   183d4:	ldr	r5, [pc, #300]	; 18508 <close_stdout@@Base+0x45ec>
   183d8:	mov	r4, #0
   183dc:	add	r6, pc, r6
   183e0:	add	r5, pc, r5
   183e4:	ldr	r3, [ip, #-16]
   183e8:	sub	r3, r3, #1
   183ec:	cmp	r3, #21
   183f0:	addls	pc, pc, r3, lsl #2
   183f4:	b	184fc <close_stdout@@Base+0x45e0>
   183f8:	b	184bc <close_stdout@@Base+0x45a0>
   183fc:	b	184bc <close_stdout@@Base+0x45a0>
   18400:	b	184ac <close_stdout@@Base+0x4590>
   18404:	b	184ac <close_stdout@@Base+0x4590>
   18408:	b	18450 <close_stdout@@Base+0x4534>
   1840c:	b	18450 <close_stdout@@Base+0x4534>
   18410:	b	18450 <close_stdout@@Base+0x4534>
   18414:	b	18450 <close_stdout@@Base+0x4534>
   18418:	b	1847c <close_stdout@@Base+0x4560>
   1841c:	b	1847c <close_stdout@@Base+0x4560>
   18420:	b	18494 <close_stdout@@Base+0x4578>
   18424:	b	18494 <close_stdout@@Base+0x4578>
   18428:	b	18450 <close_stdout@@Base+0x4534>
   1842c:	b	18450 <close_stdout@@Base+0x4534>
   18430:	b	184cc <close_stdout@@Base+0x45b0>
   18434:	b	184e4 <close_stdout@@Base+0x45c8>
   18438:	b	18450 <close_stdout@@Base+0x4534>
   1843c:	b	18450 <close_stdout@@Base+0x4534>
   18440:	b	18450 <close_stdout@@Base+0x4534>
   18444:	b	18450 <close_stdout@@Base+0x4534>
   18448:	b	18450 <close_stdout@@Base+0x4534>
   1844c:	b	18450 <close_stdout@@Base+0x4534>
   18450:	ldr	r3, [r0]
   18454:	add	r0, r0, #4
   18458:	str	r3, [ip, #-8]
   1845c:	ldr	r3, [r1]
   18460:	add	r4, r4, #1
   18464:	add	ip, ip, #16
   18468:	cmp	r3, r4
   1846c:	bhi	183e4 <close_stdout@@Base+0x44c8>
   18470:	mov	r0, #0
   18474:	pop	{r4, r5, r6}
   18478:	bx	lr
   1847c:	add	r3, r0, #7
   18480:	bic	r3, r3, #7
   18484:	add	r0, r3, #8
   18488:	ldrd	r2, [r3]
   1848c:	strd	r2, [ip, #-8]
   18490:	b	1845c <close_stdout@@Base+0x4540>
   18494:	add	r0, r0, #7
   18498:	bic	r0, r0, #7
   1849c:	add	r0, r0, #8
   184a0:	ldrd	r2, [r0, #-8]
   184a4:	strd	r2, [ip, #-8]
   184a8:	b	1845c <close_stdout@@Base+0x4540>
   184ac:	ldr	r3, [r0]
   184b0:	add	r0, r0, #4
   184b4:	strh	r3, [ip, #-8]
   184b8:	b	1845c <close_stdout@@Base+0x4540>
   184bc:	ldr	r3, [r0]
   184c0:	add	r0, r0, #4
   184c4:	strb	r3, [ip, #-8]
   184c8:	b	1845c <close_stdout@@Base+0x4540>
   184cc:	ldr	r3, [r0]
   184d0:	add	r0, r0, #4
   184d4:	cmp	r3, #0
   184d8:	str	r3, [ip, #-8]
   184dc:	streq	r5, [ip, #-8]
   184e0:	b	1845c <close_stdout@@Base+0x4540>
   184e4:	ldr	r3, [r0]
   184e8:	add	r0, r0, #4
   184ec:	cmp	r3, #0
   184f0:	str	r3, [ip, #-8]
   184f4:	streq	r6, [ip, #-8]
   184f8:	b	1845c <close_stdout@@Base+0x4540>
   184fc:	mvn	r0, #0
   18500:	b	18474 <close_stdout@@Base+0x4558>
   18504:	andeq	r3, r0, r4, ror sp
   18508:	andeq	r3, r0, ip, lsl #27
   1850c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18510:	mov	r7, r1
   18514:	sub	sp, sp, #44	; 0x2c
   18518:	mov	r5, r2
   1851c:	movw	sl, #39321	; 0x9999
   18520:	mov	r2, r7
   18524:	movt	sl, #6553	; 0x1999
   18528:	mov	r3, #0
   1852c:	str	r3, [r2], #16
   18530:	mov	r1, #7
   18534:	str	r2, [r7, #4]
   18538:	mov	r9, r0
   1853c:	str	r2, [sp, #16]
   18540:	mov	r2, r5
   18544:	str	r3, [r2], #8
   18548:	mov	r6, r3
   1854c:	str	r2, [r5, #4]
   18550:	movw	r0, #29789	; 0x745d
   18554:	str	r3, [sp, #8]
   18558:	movt	r0, #1489	; 0x5d1
   1855c:	str	r1, [sp, #20]
   18560:	mov	ip, sl
   18564:	str	r3, [sp, #24]
   18568:	str	r3, [sp, #36]	; 0x24
   1856c:	mov	r3, #7
   18570:	str	r2, [sp, #12]
   18574:	str	r3, [sp, #28]
   18578:	ldr	r1, [r7]
   1857c:	ldr	r3, [r7, #4]
   18580:	str	r0, [sp, #32]
   18584:	b	18590 <close_stdout@@Base+0x4674>
   18588:	cmp	r0, #37	; 0x25
   1858c:	beq	185d0 <close_stdout@@Base+0x46b4>
   18590:	mov	r8, r9
   18594:	ldrb	r0, [r9], #1
   18598:	cmp	r0, #0
   1859c:	mov	r2, r9
   185a0:	bne	18588 <close_stdout@@Base+0x466c>
   185a4:	mov	r4, #44	; 0x2c
   185a8:	mov	r2, r0
   185ac:	mul	r1, r4, r1
   185b0:	str	r8, [r3, r1]
   185b4:	ldr	r3, [sp, #24]
   185b8:	str	r3, [r7, #8]
   185bc:	ldr	r3, [sp, #8]
   185c0:	str	r3, [r7, #12]
   185c4:	mov	r0, r2
   185c8:	add	sp, sp, #44	; 0x2c
   185cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185d0:	mov	r0, #44	; 0x2c
   185d4:	mul	r1, r0, r1
   185d8:	add	r4, r3, r1
   185dc:	str	r8, [r3, r1]
   185e0:	mvn	r1, #0
   185e4:	str	r6, [r4, #8]
   185e8:	str	r1, [r4, #20]
   185ec:	str	r1, [r4, #32]
   185f0:	str	r1, [r4, #40]	; 0x28
   185f4:	str	r6, [r4, #12]
   185f8:	str	r6, [r4, #16]
   185fc:	str	r6, [r4, #24]
   18600:	str	r6, [r4, #28]
   18604:	ldrb	r3, [r8, #1]
   18608:	sub	sl, r3, #48	; 0x30
   1860c:	uxtb	r1, sl
   18610:	cmp	r1, #9
   18614:	bls	189a8 <close_stdout@@Base+0x4a8c>
   18618:	mvn	r8, #0
   1861c:	b	18660 <close_stdout@@Base+0x4744>
   18620:	cmp	r3, #45	; 0x2d
   18624:	beq	1867c <close_stdout@@Base+0x4760>
   18628:	cmp	r3, #43	; 0x2b
   1862c:	beq	1868c <close_stdout@@Base+0x4770>
   18630:	cmp	r3, #32
   18634:	beq	1869c <close_stdout@@Base+0x4780>
   18638:	cmp	r3, #35	; 0x23
   1863c:	beq	186ac <close_stdout@@Base+0x4790>
   18640:	cmp	r3, #48	; 0x30
   18644:	beq	186bc <close_stdout@@Base+0x47a0>
   18648:	cmp	r3, #73	; 0x49
   1864c:	bne	186cc <close_stdout@@Base+0x47b0>
   18650:	ldr	r3, [r4, #8]
   18654:	orr	r3, r3, #64	; 0x40
   18658:	str	r3, [r4, #8]
   1865c:	ldrb	r3, [r2, #1]!
   18660:	cmp	r3, #39	; 0x27
   18664:	mov	r9, r2
   18668:	bne	18620 <close_stdout@@Base+0x4704>
   1866c:	ldr	r3, [r4, #8]
   18670:	orr	r3, r3, #1
   18674:	str	r3, [r4, #8]
   18678:	b	1865c <close_stdout@@Base+0x4740>
   1867c:	ldr	r3, [r4, #8]
   18680:	orr	r3, r3, #2
   18684:	str	r3, [r4, #8]
   18688:	b	1865c <close_stdout@@Base+0x4740>
   1868c:	ldr	r3, [r4, #8]
   18690:	orr	r3, r3, #4
   18694:	str	r3, [r4, #8]
   18698:	b	1865c <close_stdout@@Base+0x4740>
   1869c:	ldr	r3, [r4, #8]
   186a0:	orr	r3, r3, #8
   186a4:	str	r3, [r4, #8]
   186a8:	b	1865c <close_stdout@@Base+0x4740>
   186ac:	ldr	r3, [r4, #8]
   186b0:	orr	r3, r3, #16
   186b4:	str	r3, [r4, #8]
   186b8:	b	1865c <close_stdout@@Base+0x4740>
   186bc:	ldr	r3, [r4, #8]
   186c0:	orr	r3, r3, #32
   186c4:	str	r3, [r4, #8]
   186c8:	b	1865c <close_stdout@@Base+0x4740>
   186cc:	cmp	r3, #42	; 0x2a
   186d0:	beq	18b44 <close_stdout@@Base+0x4c28>
   186d4:	sub	r1, r3, #48	; 0x30
   186d8:	uxtb	r1, r1
   186dc:	cmp	r1, #9
   186e0:	bls	18a20 <close_stdout@@Base+0x4b04>
   186e4:	cmp	r3, #46	; 0x2e
   186e8:	beq	18a74 <close_stdout@@Base+0x4b58>
   186ec:	mov	sl, #0
   186f0:	mov	r0, #1
   186f4:	b	18700 <close_stdout@@Base+0x47e4>
   186f8:	ldrb	r3, [r2, #1]
   186fc:	add	r9, r9, #1
   18700:	cmp	r3, #104	; 0x68
   18704:	mov	r2, r9
   18708:	andeq	r3, sl, #1
   1870c:	orreq	sl, sl, r0, lsl r3
   18710:	beq	186f8 <close_stdout@@Base+0x47dc>
   18714:	cmp	r3, #76	; 0x4c
   18718:	orreq	sl, sl, #4
   1871c:	beq	186f8 <close_stdout@@Base+0x47dc>
   18720:	cmp	r3, #108	; 0x6c
   18724:	addeq	sl, sl, #8
   18728:	beq	186f8 <close_stdout@@Base+0x47dc>
   1872c:	cmp	r3, #106	; 0x6a
   18730:	addeq	sl, sl, #16
   18734:	beq	186f8 <close_stdout@@Base+0x47dc>
   18738:	and	r1, r3, #223	; 0xdf
   1873c:	cmp	r1, #90	; 0x5a
   18740:	beq	186f8 <close_stdout@@Base+0x47dc>
   18744:	cmp	r3, #116	; 0x74
   18748:	beq	186f8 <close_stdout@@Base+0x47dc>
   1874c:	sub	r2, r3, #37	; 0x25
   18750:	add	r9, r9, #1
   18754:	mov	fp, r3
   18758:	cmp	r2, #83	; 0x53
   1875c:	addls	pc, pc, r2, lsl #2
   18760:	b	18e84 <close_stdout@@Base+0x4f68>
   18764:	b	18914 <close_stdout@@Base+0x49f8>
   18768:	b	18e84 <close_stdout@@Base+0x4f68>
   1876c:	b	18e84 <close_stdout@@Base+0x4f68>
   18770:	b	18e84 <close_stdout@@Base+0x4f68>
   18774:	b	18e84 <close_stdout@@Base+0x4f68>
   18778:	b	18e84 <close_stdout@@Base+0x4f68>
   1877c:	b	18e84 <close_stdout@@Base+0x4f68>
   18780:	b	18e84 <close_stdout@@Base+0x4f68>
   18784:	b	18e84 <close_stdout@@Base+0x4f68>
   18788:	b	18e84 <close_stdout@@Base+0x4f68>
   1878c:	b	18e84 <close_stdout@@Base+0x4f68>
   18790:	b	18e84 <close_stdout@@Base+0x4f68>
   18794:	b	18e84 <close_stdout@@Base+0x4f68>
   18798:	b	18e84 <close_stdout@@Base+0x4f68>
   1879c:	b	18e84 <close_stdout@@Base+0x4f68>
   187a0:	b	18e84 <close_stdout@@Base+0x4f68>
   187a4:	b	18e84 <close_stdout@@Base+0x4f68>
   187a8:	b	18e84 <close_stdout@@Base+0x4f68>
   187ac:	b	18e84 <close_stdout@@Base+0x4f68>
   187b0:	b	18e84 <close_stdout@@Base+0x4f68>
   187b4:	b	18e84 <close_stdout@@Base+0x4f68>
   187b8:	b	18e84 <close_stdout@@Base+0x4f68>
   187bc:	b	18e84 <close_stdout@@Base+0x4f68>
   187c0:	b	18e84 <close_stdout@@Base+0x4f68>
   187c4:	b	18e84 <close_stdout@@Base+0x4f68>
   187c8:	b	18e84 <close_stdout@@Base+0x4f68>
   187cc:	b	18e84 <close_stdout@@Base+0x4f68>
   187d0:	b	18e84 <close_stdout@@Base+0x4f68>
   187d4:	b	18c60 <close_stdout@@Base+0x4d44>
   187d8:	b	18e84 <close_stdout@@Base+0x4f68>
   187dc:	b	18c84 <close_stdout@@Base+0x4d68>
   187e0:	b	18e84 <close_stdout@@Base+0x4f68>
   187e4:	b	18c60 <close_stdout@@Base+0x4d44>
   187e8:	b	18c60 <close_stdout@@Base+0x4d44>
   187ec:	b	18c60 <close_stdout@@Base+0x4d44>
   187f0:	b	18e84 <close_stdout@@Base+0x4f68>
   187f4:	b	18e84 <close_stdout@@Base+0x4f68>
   187f8:	b	18e84 <close_stdout@@Base+0x4f68>
   187fc:	b	18e84 <close_stdout@@Base+0x4f68>
   18800:	b	18e84 <close_stdout@@Base+0x4f68>
   18804:	b	18e84 <close_stdout@@Base+0x4f68>
   18808:	b	18e84 <close_stdout@@Base+0x4f68>
   1880c:	b	18e84 <close_stdout@@Base+0x4f68>
   18810:	b	18e84 <close_stdout@@Base+0x4f68>
   18814:	b	18e84 <close_stdout@@Base+0x4f68>
   18818:	b	18e84 <close_stdout@@Base+0x4f68>
   1881c:	b	18c90 <close_stdout@@Base+0x4d74>
   18820:	b	18e84 <close_stdout@@Base+0x4f68>
   18824:	b	18e84 <close_stdout@@Base+0x4f68>
   18828:	b	18e84 <close_stdout@@Base+0x4f68>
   1882c:	b	18e84 <close_stdout@@Base+0x4f68>
   18830:	b	18c9c <close_stdout@@Base+0x4d80>
   18834:	b	18e84 <close_stdout@@Base+0x4f68>
   18838:	b	18e84 <close_stdout@@Base+0x4f68>
   1883c:	b	18e84 <close_stdout@@Base+0x4f68>
   18840:	b	18e84 <close_stdout@@Base+0x4f68>
   18844:	b	18e84 <close_stdout@@Base+0x4f68>
   18848:	b	18e84 <close_stdout@@Base+0x4f68>
   1884c:	b	18e84 <close_stdout@@Base+0x4f68>
   18850:	b	18e84 <close_stdout@@Base+0x4f68>
   18854:	b	18c60 <close_stdout@@Base+0x4d44>
   18858:	b	18e84 <close_stdout@@Base+0x4f68>
   1885c:	b	18d24 <close_stdout@@Base+0x4e08>
   18860:	b	18ce0 <close_stdout@@Base+0x4dc4>
   18864:	b	18c60 <close_stdout@@Base+0x4d44>
   18868:	b	18c60 <close_stdout@@Base+0x4d44>
   1886c:	b	18c60 <close_stdout@@Base+0x4d44>
   18870:	b	18e84 <close_stdout@@Base+0x4f68>
   18874:	b	18ce0 <close_stdout@@Base+0x4dc4>
   18878:	b	18e84 <close_stdout@@Base+0x4f68>
   1887c:	b	18e84 <close_stdout@@Base+0x4f68>
   18880:	b	18e84 <close_stdout@@Base+0x4f68>
   18884:	b	18e84 <close_stdout@@Base+0x4f68>
   18888:	b	18d34 <close_stdout@@Base+0x4e18>
   1888c:	b	18c9c <close_stdout@@Base+0x4d80>
   18890:	b	188b4 <close_stdout@@Base+0x4998>
   18894:	b	18e84 <close_stdout@@Base+0x4f68>
   18898:	b	18e84 <close_stdout@@Base+0x4f68>
   1889c:	b	18c50 <close_stdout@@Base+0x4d34>
   188a0:	b	18e84 <close_stdout@@Base+0x4f68>
   188a4:	b	18c9c <close_stdout@@Base+0x4d80>
   188a8:	b	18e84 <close_stdout@@Base+0x4f68>
   188ac:	b	18e84 <close_stdout@@Base+0x4f68>
   188b0:	b	18c9c <close_stdout@@Base+0x4d80>
   188b4:	mov	sl, #17
   188b8:	cmn	r8, #1
   188bc:	strne	r8, [r4, #40]	; 0x28
   188c0:	beq	18fe0 <close_stdout@@Base+0x50c4>
   188c4:	ldr	r3, [sp, #20]
   188c8:	cmp	r3, r8
   188cc:	bls	18f0c <close_stdout@@Base+0x4ff0>
   188d0:	ldr	r0, [r5, #4]
   188d4:	ldr	r3, [r5]
   188d8:	cmp	r3, r8
   188dc:	bhi	188fc <close_stdout@@Base+0x49e0>
   188e0:	add	r2, r3, #1
   188e4:	str	r2, [r5]
   188e8:	str	r6, [r0, r3, lsl #4]
   188ec:	ldr	r3, [r5]
   188f0:	ldr	r0, [r5, #4]
   188f4:	cmp	r3, r8
   188f8:	bls	188e0 <close_stdout@@Base+0x49c4>
   188fc:	ldr	r3, [r0, r8, lsl #4]
   18900:	cmp	r3, #0
   18904:	streq	sl, [r0, r8, lsl #4]
   18908:	beq	18914 <close_stdout@@Base+0x49f8>
   1890c:	cmp	sl, r3
   18910:	bne	18e88 <close_stdout@@Base+0x4f6c>
   18914:	strb	fp, [r4, #36]	; 0x24
   18918:	str	r9, [r4, #4]
   1891c:	ldr	r1, [r7]
   18920:	ldr	r3, [sp, #28]
   18924:	add	r1, r1, #1
   18928:	str	r1, [r7]
   1892c:	cmp	r3, r1
   18930:	bhi	18a18 <close_stdout@@Base+0x4afc>
   18934:	ldr	r3, [sp, #28]
   18938:	cmp	r3, #0
   1893c:	blt	18b04 <close_stdout@@Base+0x4be8>
   18940:	ldr	r3, [sp, #28]
   18944:	ldr	r0, [sp, #32]
   18948:	lsl	r3, r3, #1
   1894c:	str	r3, [sp, #28]
   18950:	cmp	r3, r0
   18954:	bhi	18b04 <close_stdout@@Base+0x4be8>
   18958:	mov	r2, #44	; 0x2c
   1895c:	ldr	r0, [r7, #4]
   18960:	mul	r1, r2, r3
   18964:	ldr	r3, [sp, #16]
   18968:	cmp	r3, r0
   1896c:	beq	19000 <close_stdout@@Base+0x50e4>
   18970:	str	ip, [sp, #4]
   18974:	bl	111e8 <realloc@plt>
   18978:	ldr	ip, [sp, #4]
   1897c:	mov	r4, r0
   18980:	cmp	r4, #0
   18984:	beq	18b04 <close_stdout@@Base+0x4be8>
   18988:	ldr	r3, [r7, #4]
   1898c:	ldr	r0, [sp, #16]
   18990:	cmp	r0, r3
   18994:	beq	190bc <close_stdout@@Base+0x51a0>
   18998:	ldr	r1, [r7]
   1899c:	mov	r3, r4
   189a0:	str	r4, [r7, #4]
   189a4:	b	18590 <close_stdout@@Base+0x4674>
   189a8:	mov	r0, r9
   189ac:	ldrb	r1, [r0, #1]!
   189b0:	sub	r8, r1, #48	; 0x30
   189b4:	cmp	r8, #9
   189b8:	bls	189ac <close_stdout@@Base+0x4a90>
   189bc:	cmp	r1, #36	; 0x24
   189c0:	bne	18618 <close_stdout@@Base+0x46fc>
   189c4:	mov	r8, #0
   189c8:	b	189d0 <close_stdout@@Base+0x4ab4>
   189cc:	mov	r9, r2
   189d0:	add	r3, r8, r8, lsl #2
   189d4:	cmp	r8, ip
   189d8:	mvn	r8, #0
   189dc:	add	r2, r9, #1
   189e0:	lslls	r8, r3, #1
   189e4:	adds	r8, r8, sl
   189e8:	ldrb	sl, [r9, #1]
   189ec:	sub	sl, sl, #48	; 0x30
   189f0:	mvncs	r8, #0
   189f4:	uxtb	r3, sl
   189f8:	cmp	r3, #9
   189fc:	bls	189cc <close_stdout@@Base+0x4ab0>
   18a00:	sub	r8, r8, #1
   18a04:	cmn	r8, #3
   18a08:	bhi	18e84 <close_stdout@@Base+0x4f68>
   18a0c:	add	r2, r2, #1
   18a10:	ldrb	r3, [r9, #2]
   18a14:	b	18660 <close_stdout@@Base+0x4744>
   18a18:	ldr	r3, [r7, #4]
   18a1c:	b	18590 <close_stdout@@Base+0x4674>
   18a20:	str	r2, [r4, #12]
   18a24:	ldrb	r3, [r2]
   18a28:	sub	r3, r3, #48	; 0x30
   18a2c:	cmp	r3, #9
   18a30:	bhi	190b4 <close_stdout@@Base+0x5198>
   18a34:	add	r3, r2, #1
   18a38:	mov	r9, r3
   18a3c:	add	r3, r3, #1
   18a40:	ldrb	r1, [r9]
   18a44:	sub	r1, r1, #48	; 0x30
   18a48:	cmp	r1, #9
   18a4c:	bls	18a38 <close_stdout@@Base+0x4b1c>
   18a50:	rsb	r2, r2, r9
   18a54:	ldr	r3, [sp, #24]
   18a58:	str	r9, [r4, #16]
   18a5c:	cmp	r3, r2
   18a60:	movcc	r3, r2
   18a64:	str	r3, [sp, #24]
   18a68:	ldrb	r3, [r9]
   18a6c:	cmp	r3, #46	; 0x2e
   18a70:	bne	186ec <close_stdout@@Base+0x47d0>
   18a74:	ldrb	r3, [r9, #1]
   18a78:	str	r9, [r4, #24]
   18a7c:	cmp	r3, #42	; 0x2a
   18a80:	beq	18d6c <close_stdout@@Base+0x4e50>
   18a84:	ldrb	r3, [r9, #1]
   18a88:	add	r2, r9, #1
   18a8c:	sub	r3, r3, #48	; 0x30
   18a90:	cmp	r3, #9
   18a94:	bhi	18ab4 <close_stdout@@Base+0x4b98>
   18a98:	add	r3, r9, #2
   18a9c:	mov	r2, r3
   18aa0:	add	r3, r3, #1
   18aa4:	ldrb	r1, [r2]
   18aa8:	sub	r1, r1, #48	; 0x30
   18aac:	cmp	r1, #9
   18ab0:	bls	18a9c <close_stdout@@Base+0x4b80>
   18ab4:	ldr	r0, [sp, #8]
   18ab8:	rsb	r9, r9, r2
   18abc:	str	r2, [r4, #28]
   18ac0:	cmp	r0, r9
   18ac4:	movcc	r0, r9
   18ac8:	ldrb	r3, [r2]
   18acc:	str	r0, [sp, #8]
   18ad0:	mov	r9, r2
   18ad4:	b	186ec <close_stdout@@Base+0x47d0>
   18ad8:	ldr	r3, [sp, #20]
   18adc:	cmp	r3, #0
   18ae0:	lslge	r3, r3, #1
   18ae4:	mvnlt	r3, #0
   18ae8:	str	r3, [sp, #20]
   18aec:	ldr	r3, [sp, #20]
   18af0:	cmp	r3, sl
   18af4:	bhi	18f90 <close_stdout@@Base+0x5074>
   18af8:	adds	r3, sl, #1
   18afc:	str	r3, [sp, #20]
   18b00:	bcc	18f90 <close_stdout@@Base+0x5074>
   18b04:	ldr	r2, [r5, #4]
   18b08:	ldr	r3, [sp, #12]
   18b0c:	cmp	r3, r2
   18b10:	beq	18b1c <close_stdout@@Base+0x4c00>
   18b14:	mov	r0, r2
   18b18:	bl	1117c <free@plt>
   18b1c:	ldr	r0, [r7, #4]
   18b20:	ldr	r3, [sp, #16]
   18b24:	cmp	r3, r0
   18b28:	beq	18b30 <close_stdout@@Base+0x4c14>
   18b2c:	bl	1117c <free@plt>
   18b30:	bl	11344 <__errno_location@plt>
   18b34:	mov	r3, #12
   18b38:	mvn	r2, #0
   18b3c:	str	r3, [r0]
   18b40:	b	185c4 <close_stdout@@Base+0x46a8>
   18b44:	ldr	r3, [sp, #24]
   18b48:	add	r9, r2, #1
   18b4c:	str	r2, [r4, #12]
   18b50:	str	r9, [r4, #16]
   18b54:	cmp	r3, #0
   18b58:	ldrb	sl, [r2, #1]
   18b5c:	moveq	r3, #1
   18b60:	str	r3, [sp, #24]
   18b64:	sub	sl, sl, #48	; 0x30
   18b68:	uxtb	r3, sl
   18b6c:	cmp	r3, #9
   18b70:	bls	18be4 <close_stdout@@Base+0x4cc8>
   18b74:	ldr	r3, [sp, #36]	; 0x24
   18b78:	cmn	r3, #1
   18b7c:	str	r3, [r4, #20]
   18b80:	add	r3, r3, #1
   18b84:	beq	18e84 <close_stdout@@Base+0x4f68>
   18b88:	ldr	sl, [sp, #36]	; 0x24
   18b8c:	str	r3, [sp, #36]	; 0x24
   18b90:	ldr	r3, [sp, #20]
   18b94:	cmp	r3, sl
   18b98:	bls	18ad8 <close_stdout@@Base+0x4bbc>
   18b9c:	ldr	r0, [r5, #4]
   18ba0:	ldr	r3, [r5]
   18ba4:	cmp	r3, sl
   18ba8:	bhi	18bc8 <close_stdout@@Base+0x4cac>
   18bac:	add	r2, r3, #1
   18bb0:	str	r2, [r5]
   18bb4:	str	r6, [r0, r3, lsl #4]
   18bb8:	ldr	r3, [r5]
   18bbc:	ldr	r0, [r5, #4]
   18bc0:	cmp	r3, sl
   18bc4:	bls	18bac <close_stdout@@Base+0x4c90>
   18bc8:	ldr	r3, [r0, sl, lsl #4]
   18bcc:	cmp	r3, #0
   18bd0:	bne	18f84 <close_stdout@@Base+0x5068>
   18bd4:	mov	r1, #5
   18bd8:	str	r1, [r0, sl, lsl #4]
   18bdc:	ldrb	r3, [r9]
   18be0:	b	186e4 <close_stdout@@Base+0x47c8>
   18be4:	mov	r1, r9
   18be8:	ldrb	r3, [r1, #1]!
   18bec:	sub	r0, r3, #48	; 0x30
   18bf0:	cmp	r0, #9
   18bf4:	bls	18be8 <close_stdout@@Base+0x4ccc>
   18bf8:	cmp	r3, #36	; 0x24
   18bfc:	bne	18b74 <close_stdout@@Base+0x4c58>
   18c00:	add	r2, r2, #2
   18c04:	mov	r3, #0
   18c08:	add	r1, r3, r3, lsl #2
   18c0c:	cmp	r3, ip
   18c10:	mvn	r3, #0
   18c14:	lslls	r3, r1, #1
   18c18:	adds	r3, r3, sl
   18c1c:	ldrb	sl, [r2], #1
   18c20:	sub	sl, sl, #48	; 0x30
   18c24:	mvncs	r3, #0
   18c28:	uxtb	r1, sl
   18c2c:	cmp	r1, #9
   18c30:	bls	18c08 <close_stdout@@Base+0x4cec>
   18c34:	sub	r3, r3, #1
   18c38:	cmn	r3, #3
   18c3c:	bhi	18e84 <close_stdout@@Base+0x4f68>
   18c40:	str	r3, [r4, #20]
   18c44:	mov	r9, r2
   18c48:	mov	sl, r3
   18c4c:	b	18b90 <close_stdout@@Base+0x4c74>
   18c50:	cmp	sl, #7
   18c54:	movle	sl, #15
   18c58:	movgt	sl, #16
   18c5c:	b	188b8 <close_stdout@@Base+0x499c>
   18c60:	cmp	sl, #15
   18c64:	movgt	fp, r3
   18c68:	movgt	sl, #12
   18c6c:	bgt	188b8 <close_stdout@@Base+0x499c>
   18c70:	tst	sl, #4
   18c74:	mov	fp, r3
   18c78:	moveq	sl, #11
   18c7c:	movne	sl, #12
   18c80:	b	188b8 <close_stdout@@Base+0x499c>
   18c84:	mov	sl, #14
   18c88:	mov	fp, #99	; 0x63
   18c8c:	b	188b8 <close_stdout@@Base+0x499c>
   18c90:	mov	sl, #16
   18c94:	mov	fp, #115	; 0x73
   18c98:	b	188b8 <close_stdout@@Base+0x499c>
   18c9c:	cmp	sl, #15
   18ca0:	bgt	18ec0 <close_stdout@@Base+0x4fa4>
   18ca4:	tst	sl, #4
   18ca8:	bne	18ec0 <close_stdout@@Base+0x4fa4>
   18cac:	cmp	sl, #7
   18cb0:	movgt	fp, r3
   18cb4:	movgt	sl, #8
   18cb8:	bgt	188b8 <close_stdout@@Base+0x499c>
   18cbc:	tst	sl, #2
   18cc0:	movne	fp, r3
   18cc4:	movne	sl, #2
   18cc8:	bne	188b8 <close_stdout@@Base+0x499c>
   18ccc:	tst	sl, #1
   18cd0:	mov	fp, r3
   18cd4:	moveq	sl, #6
   18cd8:	movne	sl, #4
   18cdc:	b	188b8 <close_stdout@@Base+0x499c>
   18ce0:	cmp	sl, #15
   18ce4:	bgt	18ecc <close_stdout@@Base+0x4fb0>
   18ce8:	tst	sl, #4
   18cec:	bne	18ecc <close_stdout@@Base+0x4fb0>
   18cf0:	cmp	sl, #7
   18cf4:	movgt	fp, r3
   18cf8:	movgt	sl, #7
   18cfc:	bgt	188b8 <close_stdout@@Base+0x499c>
   18d00:	tst	sl, #2
   18d04:	movne	fp, r3
   18d08:	movne	sl, #1
   18d0c:	bne	188b8 <close_stdout@@Base+0x499c>
   18d10:	tst	sl, #1
   18d14:	mov	fp, r3
   18d18:	moveq	sl, #5
   18d1c:	movne	sl, #3
   18d20:	b	188b8 <close_stdout@@Base+0x499c>
   18d24:	cmp	sl, #7
   18d28:	movle	sl, #13
   18d2c:	movgt	sl, #14
   18d30:	b	188b8 <close_stdout@@Base+0x499c>
   18d34:	cmp	sl, #15
   18d38:	bgt	18ed8 <close_stdout@@Base+0x4fbc>
   18d3c:	tst	sl, #4
   18d40:	bne	18ed8 <close_stdout@@Base+0x4fbc>
   18d44:	cmp	sl, #7
   18d48:	movgt	sl, #21
   18d4c:	bgt	188b8 <close_stdout@@Base+0x499c>
   18d50:	tst	sl, #2
   18d54:	movne	sl, #18
   18d58:	bne	188b8 <close_stdout@@Base+0x499c>
   18d5c:	tst	sl, #1
   18d60:	moveq	sl, #20
   18d64:	movne	sl, #19
   18d68:	b	188b8 <close_stdout@@Base+0x499c>
   18d6c:	ldr	r3, [sp, #8]
   18d70:	add	sl, r9, #2
   18d74:	str	sl, [r4, #28]
   18d78:	ldrb	r0, [r9, #2]
   18d7c:	cmp	r3, #1
   18d80:	sub	r0, r0, #48	; 0x30
   18d84:	movls	r3, #2
   18d88:	str	r3, [sp, #8]
   18d8c:	uxtb	r3, r0
   18d90:	cmp	r3, #9
   18d94:	bhi	18ee0 <close_stdout@@Base+0x4fc4>
   18d98:	mov	r2, sl
   18d9c:	ldrb	r3, [r2, #1]!
   18da0:	sub	r1, r3, #48	; 0x30
   18da4:	cmp	r1, #9
   18da8:	bls	18d9c <close_stdout@@Base+0x4e80>
   18dac:	cmp	r3, #36	; 0x24
   18db0:	bne	18ee0 <close_stdout@@Base+0x4fc4>
   18db4:	add	r9, r9, #3
   18db8:	mov	r3, #0
   18dbc:	add	r2, r3, r3, lsl #2
   18dc0:	cmp	r3, ip
   18dc4:	mvn	r3, #0
   18dc8:	lslls	r3, r2, #1
   18dcc:	adds	r3, r3, r0
   18dd0:	ldrb	r0, [r9], #1
   18dd4:	sub	r0, r0, #48	; 0x30
   18dd8:	mvncs	r3, #0
   18ddc:	uxtb	r2, r0
   18de0:	cmp	r2, #9
   18de4:	bls	18dbc <close_stdout@@Base+0x4ea0>
   18de8:	sub	r3, r3, #1
   18dec:	cmn	r3, #3
   18df0:	bhi	18e84 <close_stdout@@Base+0x4f68>
   18df4:	mov	sl, r9
   18df8:	mov	r9, r3
   18dfc:	str	r3, [r4, #32]
   18e00:	ldr	r3, [sp, #20]
   18e04:	cmp	r3, r9
   18e08:	bhi	19018 <close_stdout@@Base+0x50fc>
   18e0c:	ldr	r3, [sp, #20]
   18e10:	cmp	r3, #0
   18e14:	blt	18b04 <close_stdout@@Base+0x4be8>
   18e18:	lsl	r3, r3, #1
   18e1c:	str	r3, [sp, #20]
   18e20:	cmp	r3, r9
   18e24:	bhi	18e34 <close_stdout@@Base+0x4f18>
   18e28:	adds	r3, r9, #1
   18e2c:	str	r3, [sp, #20]
   18e30:	bcs	18b04 <close_stdout@@Base+0x4be8>
   18e34:	ldr	r3, [sp, #20]
   18e38:	cmn	r3, #-268435455	; 0xf0000001
   18e3c:	bhi	18b04 <close_stdout@@Base+0x4be8>
   18e40:	ldr	r0, [r5, #4]
   18e44:	lsl	r1, r3, #4
   18e48:	ldr	r3, [sp, #12]
   18e4c:	cmp	r3, r0
   18e50:	beq	1911c <close_stdout@@Base+0x5200>
   18e54:	str	ip, [sp, #4]
   18e58:	bl	111e8 <realloc@plt>
   18e5c:	ldr	r2, [r5, #4]
   18e60:	ldr	ip, [sp, #4]
   18e64:	subs	r3, r0, #0
   18e68:	beq	18b08 <close_stdout@@Base+0x4bec>
   18e6c:	ldr	r0, [sp, #12]
   18e70:	cmp	r0, r2
   18e74:	beq	19134 <close_stdout@@Base+0x5218>
   18e78:	mov	r0, r3
   18e7c:	str	r3, [r5, #4]
   18e80:	b	1901c <close_stdout@@Base+0x5100>
   18e84:	ldr	r0, [r5, #4]
   18e88:	ldr	r3, [sp, #12]
   18e8c:	cmp	r3, r0
   18e90:	beq	18e98 <close_stdout@@Base+0x4f7c>
   18e94:	bl	1117c <free@plt>
   18e98:	ldr	r0, [r7, #4]
   18e9c:	ldr	r3, [sp, #16]
   18ea0:	cmp	r3, r0
   18ea4:	beq	18eac <close_stdout@@Base+0x4f90>
   18ea8:	bl	1117c <free@plt>
   18eac:	bl	11344 <__errno_location@plt>
   18eb0:	mov	r3, #22
   18eb4:	mvn	r2, #0
   18eb8:	str	r3, [r0]
   18ebc:	b	185c4 <close_stdout@@Base+0x46a8>
   18ec0:	mov	fp, r3
   18ec4:	mov	sl, #10
   18ec8:	b	188b8 <close_stdout@@Base+0x499c>
   18ecc:	mov	fp, r3
   18ed0:	mov	sl, #9
   18ed4:	b	188b8 <close_stdout@@Base+0x499c>
   18ed8:	mov	sl, #22
   18edc:	b	188b8 <close_stdout@@Base+0x499c>
   18ee0:	ldr	r9, [r4, #32]
   18ee4:	cmn	r9, #1
   18ee8:	bne	18e00 <close_stdout@@Base+0x4ee4>
   18eec:	ldr	r3, [sp, #36]	; 0x24
   18ef0:	cmn	r3, #1
   18ef4:	str	r3, [r4, #32]
   18ef8:	add	r3, r3, #1
   18efc:	beq	18e84 <close_stdout@@Base+0x4f68>
   18f00:	ldr	r9, [sp, #36]	; 0x24
   18f04:	str	r3, [sp, #36]	; 0x24
   18f08:	b	18e00 <close_stdout@@Base+0x4ee4>
   18f0c:	ldr	r3, [sp, #20]
   18f10:	cmp	r3, #0
   18f14:	blt	18b04 <close_stdout@@Base+0x4be8>
   18f18:	lsl	r3, r3, #1
   18f1c:	str	r3, [sp, #20]
   18f20:	cmp	r3, r8
   18f24:	bhi	18f34 <close_stdout@@Base+0x5018>
   18f28:	adds	r3, r8, #1
   18f2c:	str	r3, [sp, #20]
   18f30:	bcs	18b04 <close_stdout@@Base+0x4be8>
   18f34:	ldr	r3, [sp, #20]
   18f38:	cmn	r3, #-268435455	; 0xf0000001
   18f3c:	bhi	18b04 <close_stdout@@Base+0x4be8>
   18f40:	ldr	r0, [r5, #4]
   18f44:	lsl	r1, r3, #4
   18f48:	ldr	r3, [sp, #12]
   18f4c:	cmp	r3, r0
   18f50:	beq	19078 <close_stdout@@Base+0x515c>
   18f54:	str	ip, [sp, #4]
   18f58:	bl	111e8 <realloc@plt>
   18f5c:	ldr	r2, [r5, #4]
   18f60:	ldr	ip, [sp, #4]
   18f64:	subs	r3, r0, #0
   18f68:	beq	18b08 <close_stdout@@Base+0x4bec>
   18f6c:	ldr	r0, [sp, #12]
   18f70:	cmp	r0, r2
   18f74:	beq	19090 <close_stdout@@Base+0x5174>
   18f78:	mov	r0, r3
   18f7c:	str	r3, [r5, #4]
   18f80:	b	188d4 <close_stdout@@Base+0x49b8>
   18f84:	cmp	r3, #5
   18f88:	beq	18a68 <close_stdout@@Base+0x4b4c>
   18f8c:	b	18e88 <close_stdout@@Base+0x4f6c>
   18f90:	ldr	r3, [sp, #20]
   18f94:	cmn	r3, #-268435455	; 0xf0000001
   18f98:	bhi	18b04 <close_stdout@@Base+0x4be8>
   18f9c:	ldr	r0, [r5, #4]
   18fa0:	lsl	r1, r3, #4
   18fa4:	ldr	r3, [sp, #12]
   18fa8:	cmp	r3, r0
   18fac:	beq	190e0 <close_stdout@@Base+0x51c4>
   18fb0:	str	ip, [sp, #4]
   18fb4:	bl	111e8 <realloc@plt>
   18fb8:	ldr	r2, [r5, #4]
   18fbc:	ldr	ip, [sp, #4]
   18fc0:	subs	r3, r0, #0
   18fc4:	beq	18b08 <close_stdout@@Base+0x4bec>
   18fc8:	ldr	r0, [sp, #12]
   18fcc:	cmp	r0, r2
   18fd0:	beq	190f8 <close_stdout@@Base+0x51dc>
   18fd4:	mov	r0, r3
   18fd8:	str	r3, [r5, #4]
   18fdc:	b	18ba0 <close_stdout@@Base+0x4c84>
   18fe0:	ldr	r3, [sp, #36]	; 0x24
   18fe4:	cmn	r3, #1
   18fe8:	str	r3, [r4, #40]	; 0x28
   18fec:	add	r3, r3, #1
   18ff0:	beq	18e84 <close_stdout@@Base+0x4f68>
   18ff4:	ldr	r8, [sp, #36]	; 0x24
   18ff8:	str	r3, [sp, #36]	; 0x24
   18ffc:	b	188c4 <close_stdout@@Base+0x49a8>
   19000:	mov	r0, r1
   19004:	str	ip, [sp, #4]
   19008:	bl	1129c <malloc@plt>
   1900c:	ldr	ip, [sp, #4]
   19010:	mov	r4, r0
   19014:	b	18980 <close_stdout@@Base+0x4a64>
   19018:	ldr	r0, [r5, #4]
   1901c:	ldr	r3, [r5]
   19020:	cmp	r3, r9
   19024:	bhi	19044 <close_stdout@@Base+0x5128>
   19028:	add	r2, r3, #1
   1902c:	str	r2, [r5]
   19030:	str	r6, [r0, r3, lsl #4]
   19034:	ldr	r3, [r5]
   19038:	ldr	r0, [r5, #4]
   1903c:	cmp	r3, r9
   19040:	bls	19028 <close_stdout@@Base+0x510c>
   19044:	ldr	r3, [r0, r9, lsl #4]
   19048:	cmp	r3, #0
   1904c:	bne	19064 <close_stdout@@Base+0x5148>
   19050:	mov	r1, #5
   19054:	str	r1, [r0, r9, lsl #4]
   19058:	mov	r9, sl
   1905c:	ldrb	r3, [sl]
   19060:	b	186ec <close_stdout@@Base+0x47d0>
   19064:	cmp	r3, #5
   19068:	bne	18e88 <close_stdout@@Base+0x4f6c>
   1906c:	ldrb	r3, [sl]
   19070:	mov	r9, sl
   19074:	b	186ec <close_stdout@@Base+0x47d0>
   19078:	mov	r0, r1
   1907c:	str	ip, [sp, #4]
   19080:	bl	1129c <malloc@plt>
   19084:	ldr	ip, [sp, #4]
   19088:	subs	r3, r0, #0
   1908c:	beq	19158 <close_stdout@@Base+0x523c>
   19090:	ldr	r2, [r5]
   19094:	mov	r0, r3
   19098:	ldr	r1, [sp, #12]
   1909c:	str	ip, [sp, #4]
   190a0:	lsl	r2, r2, #4
   190a4:	bl	11194 <memcpy@plt>
   190a8:	ldr	ip, [sp, #4]
   190ac:	mov	r3, r0
   190b0:	b	18f78 <close_stdout@@Base+0x505c>
   190b4:	mov	r2, #0
   190b8:	b	18a54 <close_stdout@@Base+0x4b38>
   190bc:	ldr	r2, [r7]
   190c0:	mov	r3, #44	; 0x2c
   190c4:	mov	r0, r4
   190c8:	ldr	r1, [sp, #16]
   190cc:	str	ip, [sp, #4]
   190d0:	mul	r2, r3, r2
   190d4:	bl	11194 <memcpy@plt>
   190d8:	ldr	ip, [sp, #4]
   190dc:	b	18998 <close_stdout@@Base+0x4a7c>
   190e0:	mov	r0, r1
   190e4:	str	ip, [sp, #4]
   190e8:	bl	1129c <malloc@plt>
   190ec:	ldr	ip, [sp, #4]
   190f0:	subs	r3, r0, #0
   190f4:	beq	19158 <close_stdout@@Base+0x523c>
   190f8:	ldr	r2, [r5]
   190fc:	mov	r0, r3
   19100:	ldr	r1, [sp, #12]
   19104:	str	ip, [sp, #4]
   19108:	lsl	r2, r2, #4
   1910c:	bl	11194 <memcpy@plt>
   19110:	ldr	ip, [sp, #4]
   19114:	mov	r3, r0
   19118:	b	18fd4 <close_stdout@@Base+0x50b8>
   1911c:	mov	r0, r1
   19120:	str	ip, [sp, #4]
   19124:	bl	1129c <malloc@plt>
   19128:	ldr	ip, [sp, #4]
   1912c:	subs	r3, r0, #0
   19130:	beq	19158 <close_stdout@@Base+0x523c>
   19134:	ldr	r2, [r5]
   19138:	mov	r0, r3
   1913c:	ldr	r1, [sp, #12]
   19140:	str	ip, [sp, #4]
   19144:	lsl	r2, r2, #4
   19148:	bl	11194 <memcpy@plt>
   1914c:	ldr	ip, [sp, #4]
   19150:	mov	r3, r0
   19154:	b	18e78 <close_stdout@@Base+0x4f5c>
   19158:	ldr	r2, [sp, #12]
   1915c:	b	18b08 <close_stdout@@Base+0x4bec>
   19160:	subs	r2, r1, #1
   19164:	bxeq	lr
   19168:	bcc	19340 <close_stdout@@Base+0x5424>
   1916c:	cmp	r0, r1
   19170:	bls	19324 <close_stdout@@Base+0x5408>
   19174:	tst	r1, r2
   19178:	beq	19330 <close_stdout@@Base+0x5414>
   1917c:	clz	r3, r0
   19180:	clz	r2, r1
   19184:	sub	r3, r2, r3
   19188:	rsbs	r3, r3, #31
   1918c:	addne	r3, r3, r3, lsl #1
   19190:	mov	r2, #0
   19194:	addne	pc, pc, r3, lsl #2
   19198:	nop	{0}
   1919c:	cmp	r0, r1, lsl #31
   191a0:	adc	r2, r2, r2
   191a4:	subcs	r0, r0, r1, lsl #31
   191a8:	cmp	r0, r1, lsl #30
   191ac:	adc	r2, r2, r2
   191b0:	subcs	r0, r0, r1, lsl #30
   191b4:	cmp	r0, r1, lsl #29
   191b8:	adc	r2, r2, r2
   191bc:	subcs	r0, r0, r1, lsl #29
   191c0:	cmp	r0, r1, lsl #28
   191c4:	adc	r2, r2, r2
   191c8:	subcs	r0, r0, r1, lsl #28
   191cc:	cmp	r0, r1, lsl #27
   191d0:	adc	r2, r2, r2
   191d4:	subcs	r0, r0, r1, lsl #27
   191d8:	cmp	r0, r1, lsl #26
   191dc:	adc	r2, r2, r2
   191e0:	subcs	r0, r0, r1, lsl #26
   191e4:	cmp	r0, r1, lsl #25
   191e8:	adc	r2, r2, r2
   191ec:	subcs	r0, r0, r1, lsl #25
   191f0:	cmp	r0, r1, lsl #24
   191f4:	adc	r2, r2, r2
   191f8:	subcs	r0, r0, r1, lsl #24
   191fc:	cmp	r0, r1, lsl #23
   19200:	adc	r2, r2, r2
   19204:	subcs	r0, r0, r1, lsl #23
   19208:	cmp	r0, r1, lsl #22
   1920c:	adc	r2, r2, r2
   19210:	subcs	r0, r0, r1, lsl #22
   19214:	cmp	r0, r1, lsl #21
   19218:	adc	r2, r2, r2
   1921c:	subcs	r0, r0, r1, lsl #21
   19220:	cmp	r0, r1, lsl #20
   19224:	adc	r2, r2, r2
   19228:	subcs	r0, r0, r1, lsl #20
   1922c:	cmp	r0, r1, lsl #19
   19230:	adc	r2, r2, r2
   19234:	subcs	r0, r0, r1, lsl #19
   19238:	cmp	r0, r1, lsl #18
   1923c:	adc	r2, r2, r2
   19240:	subcs	r0, r0, r1, lsl #18
   19244:	cmp	r0, r1, lsl #17
   19248:	adc	r2, r2, r2
   1924c:	subcs	r0, r0, r1, lsl #17
   19250:	cmp	r0, r1, lsl #16
   19254:	adc	r2, r2, r2
   19258:	subcs	r0, r0, r1, lsl #16
   1925c:	cmp	r0, r1, lsl #15
   19260:	adc	r2, r2, r2
   19264:	subcs	r0, r0, r1, lsl #15
   19268:	cmp	r0, r1, lsl #14
   1926c:	adc	r2, r2, r2
   19270:	subcs	r0, r0, r1, lsl #14
   19274:	cmp	r0, r1, lsl #13
   19278:	adc	r2, r2, r2
   1927c:	subcs	r0, r0, r1, lsl #13
   19280:	cmp	r0, r1, lsl #12
   19284:	adc	r2, r2, r2
   19288:	subcs	r0, r0, r1, lsl #12
   1928c:	cmp	r0, r1, lsl #11
   19290:	adc	r2, r2, r2
   19294:	subcs	r0, r0, r1, lsl #11
   19298:	cmp	r0, r1, lsl #10
   1929c:	adc	r2, r2, r2
   192a0:	subcs	r0, r0, r1, lsl #10
   192a4:	cmp	r0, r1, lsl #9
   192a8:	adc	r2, r2, r2
   192ac:	subcs	r0, r0, r1, lsl #9
   192b0:	cmp	r0, r1, lsl #8
   192b4:	adc	r2, r2, r2
   192b8:	subcs	r0, r0, r1, lsl #8
   192bc:	cmp	r0, r1, lsl #7
   192c0:	adc	r2, r2, r2
   192c4:	subcs	r0, r0, r1, lsl #7
   192c8:	cmp	r0, r1, lsl #6
   192cc:	adc	r2, r2, r2
   192d0:	subcs	r0, r0, r1, lsl #6
   192d4:	cmp	r0, r1, lsl #5
   192d8:	adc	r2, r2, r2
   192dc:	subcs	r0, r0, r1, lsl #5
   192e0:	cmp	r0, r1, lsl #4
   192e4:	adc	r2, r2, r2
   192e8:	subcs	r0, r0, r1, lsl #4
   192ec:	cmp	r0, r1, lsl #3
   192f0:	adc	r2, r2, r2
   192f4:	subcs	r0, r0, r1, lsl #3
   192f8:	cmp	r0, r1, lsl #2
   192fc:	adc	r2, r2, r2
   19300:	subcs	r0, r0, r1, lsl #2
   19304:	cmp	r0, r1, lsl #1
   19308:	adc	r2, r2, r2
   1930c:	subcs	r0, r0, r1, lsl #1
   19310:	cmp	r0, r1
   19314:	adc	r2, r2, r2
   19318:	subcs	r0, r0, r1
   1931c:	mov	r0, r2
   19320:	bx	lr
   19324:	moveq	r0, #1
   19328:	movne	r0, #0
   1932c:	bx	lr
   19330:	clz	r2, r1
   19334:	rsb	r2, r2, #31
   19338:	lsr	r0, r0, r2
   1933c:	bx	lr
   19340:	cmp	r0, #0
   19344:	mvnne	r0, #0
   19348:	b	195ac <close_stdout@@Base+0x5690>
   1934c:	cmp	r1, #0
   19350:	beq	19340 <close_stdout@@Base+0x5424>
   19354:	push	{r0, r1, lr}
   19358:	bl	19160 <close_stdout@@Base+0x5244>
   1935c:	pop	{r1, r2, lr}
   19360:	mul	r3, r2, r0
   19364:	sub	r1, r1, r3
   19368:	bx	lr
   1936c:	cmp	r1, #0
   19370:	beq	1957c <close_stdout@@Base+0x5660>
   19374:	eor	ip, r0, r1
   19378:	rsbmi	r1, r1, #0
   1937c:	subs	r2, r1, #1
   19380:	beq	19548 <close_stdout@@Base+0x562c>
   19384:	movs	r3, r0
   19388:	rsbmi	r3, r0, #0
   1938c:	cmp	r3, r1
   19390:	bls	19554 <close_stdout@@Base+0x5638>
   19394:	tst	r1, r2
   19398:	beq	19564 <close_stdout@@Base+0x5648>
   1939c:	clz	r2, r3
   193a0:	clz	r0, r1
   193a4:	sub	r2, r0, r2
   193a8:	rsbs	r2, r2, #31
   193ac:	addne	r2, r2, r2, lsl #1
   193b0:	mov	r0, #0
   193b4:	addne	pc, pc, r2, lsl #2
   193b8:	nop	{0}
   193bc:	cmp	r3, r1, lsl #31
   193c0:	adc	r0, r0, r0
   193c4:	subcs	r3, r3, r1, lsl #31
   193c8:	cmp	r3, r1, lsl #30
   193cc:	adc	r0, r0, r0
   193d0:	subcs	r3, r3, r1, lsl #30
   193d4:	cmp	r3, r1, lsl #29
   193d8:	adc	r0, r0, r0
   193dc:	subcs	r3, r3, r1, lsl #29
   193e0:	cmp	r3, r1, lsl #28
   193e4:	adc	r0, r0, r0
   193e8:	subcs	r3, r3, r1, lsl #28
   193ec:	cmp	r3, r1, lsl #27
   193f0:	adc	r0, r0, r0
   193f4:	subcs	r3, r3, r1, lsl #27
   193f8:	cmp	r3, r1, lsl #26
   193fc:	adc	r0, r0, r0
   19400:	subcs	r3, r3, r1, lsl #26
   19404:	cmp	r3, r1, lsl #25
   19408:	adc	r0, r0, r0
   1940c:	subcs	r3, r3, r1, lsl #25
   19410:	cmp	r3, r1, lsl #24
   19414:	adc	r0, r0, r0
   19418:	subcs	r3, r3, r1, lsl #24
   1941c:	cmp	r3, r1, lsl #23
   19420:	adc	r0, r0, r0
   19424:	subcs	r3, r3, r1, lsl #23
   19428:	cmp	r3, r1, lsl #22
   1942c:	adc	r0, r0, r0
   19430:	subcs	r3, r3, r1, lsl #22
   19434:	cmp	r3, r1, lsl #21
   19438:	adc	r0, r0, r0
   1943c:	subcs	r3, r3, r1, lsl #21
   19440:	cmp	r3, r1, lsl #20
   19444:	adc	r0, r0, r0
   19448:	subcs	r3, r3, r1, lsl #20
   1944c:	cmp	r3, r1, lsl #19
   19450:	adc	r0, r0, r0
   19454:	subcs	r3, r3, r1, lsl #19
   19458:	cmp	r3, r1, lsl #18
   1945c:	adc	r0, r0, r0
   19460:	subcs	r3, r3, r1, lsl #18
   19464:	cmp	r3, r1, lsl #17
   19468:	adc	r0, r0, r0
   1946c:	subcs	r3, r3, r1, lsl #17
   19470:	cmp	r3, r1, lsl #16
   19474:	adc	r0, r0, r0
   19478:	subcs	r3, r3, r1, lsl #16
   1947c:	cmp	r3, r1, lsl #15
   19480:	adc	r0, r0, r0
   19484:	subcs	r3, r3, r1, lsl #15
   19488:	cmp	r3, r1, lsl #14
   1948c:	adc	r0, r0, r0
   19490:	subcs	r3, r3, r1, lsl #14
   19494:	cmp	r3, r1, lsl #13
   19498:	adc	r0, r0, r0
   1949c:	subcs	r3, r3, r1, lsl #13
   194a0:	cmp	r3, r1, lsl #12
   194a4:	adc	r0, r0, r0
   194a8:	subcs	r3, r3, r1, lsl #12
   194ac:	cmp	r3, r1, lsl #11
   194b0:	adc	r0, r0, r0
   194b4:	subcs	r3, r3, r1, lsl #11
   194b8:	cmp	r3, r1, lsl #10
   194bc:	adc	r0, r0, r0
   194c0:	subcs	r3, r3, r1, lsl #10
   194c4:	cmp	r3, r1, lsl #9
   194c8:	adc	r0, r0, r0
   194cc:	subcs	r3, r3, r1, lsl #9
   194d0:	cmp	r3, r1, lsl #8
   194d4:	adc	r0, r0, r0
   194d8:	subcs	r3, r3, r1, lsl #8
   194dc:	cmp	r3, r1, lsl #7
   194e0:	adc	r0, r0, r0
   194e4:	subcs	r3, r3, r1, lsl #7
   194e8:	cmp	r3, r1, lsl #6
   194ec:	adc	r0, r0, r0
   194f0:	subcs	r3, r3, r1, lsl #6
   194f4:	cmp	r3, r1, lsl #5
   194f8:	adc	r0, r0, r0
   194fc:	subcs	r3, r3, r1, lsl #5
   19500:	cmp	r3, r1, lsl #4
   19504:	adc	r0, r0, r0
   19508:	subcs	r3, r3, r1, lsl #4
   1950c:	cmp	r3, r1, lsl #3
   19510:	adc	r0, r0, r0
   19514:	subcs	r3, r3, r1, lsl #3
   19518:	cmp	r3, r1, lsl #2
   1951c:	adc	r0, r0, r0
   19520:	subcs	r3, r3, r1, lsl #2
   19524:	cmp	r3, r1, lsl #1
   19528:	adc	r0, r0, r0
   1952c:	subcs	r3, r3, r1, lsl #1
   19530:	cmp	r3, r1
   19534:	adc	r0, r0, r0
   19538:	subcs	r3, r3, r1
   1953c:	cmp	ip, #0
   19540:	rsbmi	r0, r0, #0
   19544:	bx	lr
   19548:	teq	ip, r0
   1954c:	rsbmi	r0, r0, #0
   19550:	bx	lr
   19554:	movcc	r0, #0
   19558:	asreq	r0, ip, #31
   1955c:	orreq	r0, r0, #1
   19560:	bx	lr
   19564:	clz	r2, r1
   19568:	rsb	r2, r2, #31
   1956c:	cmp	ip, #0
   19570:	lsr	r0, r3, r2
   19574:	rsbmi	r0, r0, #0
   19578:	bx	lr
   1957c:	cmp	r0, #0
   19580:	mvngt	r0, #-2147483648	; 0x80000000
   19584:	movlt	r0, #-2147483648	; 0x80000000
   19588:	b	195ac <close_stdout@@Base+0x5690>
   1958c:	cmp	r1, #0
   19590:	beq	1957c <close_stdout@@Base+0x5660>
   19594:	push	{r0, r1, lr}
   19598:	bl	19374 <close_stdout@@Base+0x5458>
   1959c:	pop	{r1, r2, lr}
   195a0:	mul	r3, r2, r0
   195a4:	sub	r1, r1, r3
   195a8:	bx	lr
   195ac:	push	{r1, lr}
   195b0:	mov	r0, #8
   195b4:	bl	1114c <raise@plt>
   195b8:	pop	{r1, pc}
   195bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   195c0:	mov	r7, r0
   195c4:	ldr	r6, [pc, #76]	; 19618 <close_stdout@@Base+0x56fc>
   195c8:	mov	r8, r1
   195cc:	ldr	r5, [pc, #72]	; 1961c <close_stdout@@Base+0x5700>
   195d0:	mov	r9, r2
   195d4:	add	r6, pc, r6
   195d8:	bl	11108 <fdopen@plt-0x20>
   195dc:	add	r5, pc, r5
   195e0:	rsb	r6, r5, r6
   195e4:	asrs	r6, r6, #2
   195e8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   195ec:	sub	r5, r5, #4
   195f0:	mov	r4, #0
   195f4:	add	r4, r4, #1
   195f8:	ldr	r3, [r5, #4]!
   195fc:	mov	r0, r7
   19600:	mov	r1, r8
   19604:	mov	r2, r9
   19608:	blx	r3
   1960c:	cmp	r4, r6
   19610:	bne	195f4 <close_stdout@@Base+0x56d8>
   19614:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19618:	andeq	r2, r1, r4, asr #30
   1961c:	andeq	r2, r1, r8, lsr pc
   19620:	bx	lr
   19624:	ldr	r3, [pc, #28]	; 19648 <close_stdout@@Base+0x572c>
   19628:	mov	r1, #0
   1962c:	ldr	r2, [pc, #24]	; 1964c <close_stdout@@Base+0x5730>
   19630:	add	r3, pc, r3
   19634:	ldr	r3, [r3, r2]
   19638:	cmp	r3, #0
   1963c:	ldrne	r2, [r3]
   19640:	moveq	r2, r3
   19644:	b	11350 <__cxa_atexit@plt>
   19648:	andeq	r3, r1, r8, asr #19
   1964c:	andeq	r0, r0, r0, lsr r1

Disassembly of section .fini:

00019650 <.fini>:
   19650:	push	{r3, lr}
   19654:	pop	{r3, pc}
