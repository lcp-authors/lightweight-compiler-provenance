
centos-preinstalled/sg_turs:     file format elf32-littlearm


Disassembly of section .init:

000108f4 <_init@@Base>:
   108f4:	push	{r3, lr}
   108f8:	bl	10f34 <abort@plt+0x530>
   108fc:	pop	{r3, pc}

Disassembly of section .plt:

00010900 <sg_cmds_close_device@plt-0x14>:
   10900:	push	{lr}		; (str lr, [sp, #-4]!)
   10904:	ldr	lr, [pc, #4]	; 10910 <_init@@Base+0x1c>
   10908:	add	lr, pc, lr
   1090c:	ldr	pc, [lr, #8]!
   10910:	strdeq	r1, [r1], -r0

00010914 <sg_cmds_close_device@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010920 <sleep@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1768]!	; 0x6e8

0001092c <sg_ll_test_unit_ready_progress@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1760]!	; 0x6e0

00010938 <__stack_chk_fail@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1752]!	; 0x6d8

00010944 <fwrite@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010950 <gettimeofday@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1736]!	; 0x6c8

0001095c <getenv@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1728]!	; 0x6c0

00010968 <puts@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1720]!	; 0x6b8

00010974 <__libc_start_main@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1712]!	; 0x6b0

00010980 <__gmon_start__@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1704]!	; 0x6a8

0001098c <getopt_long@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1696]!	; 0x6a0

00010998 <strlen@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1688]!	; 0x698

000109a4 <sg_ll_test_unit_ready@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1680]!	; 0x690

000109b0 <putchar@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1672]!	; 0x688

000109bc <__printf_chk@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1664]!	; 0x680

000109c8 <__fprintf_chk@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1656]!	; 0x678

000109d4 <safe_strerror@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1648]!	; 0x670

000109e0 <sg_get_num@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1640]!	; 0x668

000109ec <sg_cmds_open_device@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1632]!	; 0x660

000109f8 <strncmp@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1624]!	; 0x658

00010a04 <abort@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1616]!	; 0x650

Disassembly of section .text:

00010a10 <.text>:
   10a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a14:	vpush	{d8}
   10a18:	movw	r6, #8440	; 0x20f8
   10a1c:	movt	r6, #2
   10a20:	sub	sp, sp, #64	; 0x40
   10a24:	mov	r7, r0
   10a28:	movw	r0, #6908	; 0x1afc
   10a2c:	ldr	r3, [r6]
   10a30:	movt	r0, #1
   10a34:	mov	r4, #0
   10a38:	mov	r5, r1
   10a3c:	mov	r8, #1
   10a40:	str	r4, [sp, #28]
   10a44:	str	r3, [sp, #60]	; 0x3c
   10a48:	str	r4, [sp, #36]	; 0x24
   10a4c:	str	r4, [sp, #40]	; 0x28
   10a50:	str	r4, [sp, #44]	; 0x2c
   10a54:	str	r4, [sp, #48]	; 0x30
   10a58:	str	r4, [sp, #52]	; 0x34
   10a5c:	str	r4, [sp, #56]	; 0x38
   10a60:	str	r8, [sp, #32]
   10a64:	bl	1095c <getenv@plt>
   10a68:	mov	r1, r7
   10a6c:	mov	r2, r5
   10a70:	cmp	r0, r4
   10a74:	add	r0, sp, #28
   10a78:	beq	10d2c <abort@plt+0x328>
   10a7c:	str	r4, [sp, #56]	; 0x38
   10a80:	bl	11300 <abort@plt+0x8fc>
   10a84:	cmp	r0, r4
   10a88:	bne	10c4c <abort@plt+0x248>
   10a8c:	ldr	r3, [sp, #56]	; 0x38
   10a90:	cmp	r3, r4
   10a94:	bne	10c34 <abort@plt+0x230>
   10a98:	ldr	r5, [sp, #28]
   10a9c:	cmp	r5, #0
   10aa0:	bne	10d10 <abort@plt+0x30c>
   10aa4:	ldr	r4, [sp, #48]	; 0x30
   10aa8:	cmp	r4, #0
   10aac:	bne	10d88 <abort@plt+0x384>
   10ab0:	ldr	r0, [sp, #52]	; 0x34
   10ab4:	cmp	r0, #0
   10ab8:	beq	10e00 <abort@plt+0x3fc>
   10abc:	mov	r1, #1
   10ac0:	ldr	r2, [sp, #44]	; 0x2c
   10ac4:	bl	109ec <sg_cmds_open_device@plt>
   10ac8:	subs	r7, r0, #0
   10acc:	blt	10db0 <abort@plt+0x3ac>
   10ad0:	ldr	r3, [sp, #36]	; 0x24
   10ad4:	cmp	r3, #0
   10ad8:	bne	10c70 <abort@plt+0x26c>
   10adc:	ldr	r2, [sp, #40]	; 0x28
   10ae0:	cmp	r2, #0
   10ae4:	bne	10e44 <abort@plt+0x440>
   10ae8:	ldr	r3, [sp, #32]
   10aec:	cmp	r3, #0
   10af0:	ble	10ea0 <abort@plt+0x49c>
   10af4:	mov	r9, #0
   10af8:	mov	r8, r9
   10afc:	mov	r4, r9
   10b00:	b	10b14 <abort@plt+0x110>
   10b04:	mov	r9, r5
   10b08:	add	r4, r4, #1
   10b0c:	cmp	r4, r2
   10b10:	bge	10b50 <abort@plt+0x14c>
   10b14:	rsbs	r2, r4, #1
   10b18:	mov	r0, r7
   10b1c:	mov	r1, r4
   10b20:	ldr	r3, [sp, #44]	; 0x2c
   10b24:	movcc	r2, #0
   10b28:	bl	109a4 <sg_ll_test_unit_ready@plt>
   10b2c:	ldr	r2, [sp, #32]
   10b30:	subs	r5, r0, #0
   10b34:	beq	10b08 <abort@plt+0x104>
   10b38:	cmp	r2, #1
   10b3c:	add	r8, r8, #1
   10b40:	bne	10b04 <abort@plt+0x100>
   10b44:	cmp	r5, #2
   10b48:	movne	r9, r5
   10b4c:	beq	10e8c <abort@plt+0x488>
   10b50:	mov	r5, r9
   10b54:	mov	r4, #0
   10b58:	ldr	r3, [sp, #40]	; 0x28
   10b5c:	cmp	r3, #0
   10b60:	beq	10c0c <abort@plt+0x208>
   10b64:	ldr	r3, [sp, #12]
   10b68:	cmp	r3, #0
   10b6c:	bne	10b7c <abort@plt+0x178>
   10b70:	ldr	r3, [sp, #16]
   10b74:	cmp	r3, #0
   10b78:	beq	10c0c <abort@plt+0x208>
   10b7c:	mov	r1, #0
   10b80:	add	r0, sp, #20
   10b84:	bl	10950 <gettimeofday@plt>
   10b88:	ldr	r3, [sp, #16]
   10b8c:	ldr	ip, [sp, #24]
   10b90:	vldr	d7, [pc, #848]	; 10ee8 <abort@plt+0x4e4>
   10b94:	ldr	r2, [sp, #20]
   10b98:	movw	r1, #7132	; 0x1bdc
   10b9c:	subs	ip, ip, r3
   10ba0:	ldr	r3, [sp, #12]
   10ba4:	addmi	ip, ip, #999424	; 0xf4000
   10ba8:	mov	r0, #1
   10bac:	rsb	r2, r3, r2
   10bb0:	addmi	ip, ip, #576	; 0x240
   10bb4:	submi	r2, r2, #1
   10bb8:	movt	r1, #1
   10bbc:	mov	r3, ip
   10bc0:	ldr	r9, [sp, #32]
   10bc4:	vmov	s11, r2
   10bc8:	vcvt.f64.s32	d8, s11
   10bcc:	vmov	s11, ip
   10bd0:	vcvt.f64.s32	d6, s11
   10bd4:	vmla.f64	d8, d6, d7
   10bd8:	bl	109bc <__printf_chk@plt>
   10bdc:	vldr	d7, [pc, #780]	; 10ef0 <abort@plt+0x4ec>
   10be0:	vcmpe.f64	d8, d7
   10be4:	vmrs	APSR_nzcv, fpscr
   10be8:	ble	10e80 <abort@plt+0x47c>
   10bec:	vmov	s12, r9
   10bf0:	movw	r1, #7176	; 0x1c08
   10bf4:	mov	r0, #1
   10bf8:	movt	r1, #1
   10bfc:	vcvt.f64.s32	d7, s12
   10c00:	vdiv.f64	d6, d7, d8
   10c04:	vmov	r2, r3, d6
   10c08:	bl	109bc <__printf_chk@plt>
   10c0c:	ldr	r2, [sp, #32]
   10c10:	cmp	r2, #1
   10c14:	ble	10e5c <abort@plt+0x458>
   10c18:	cmp	r4, #0
   10c1c:	beq	10e68 <abort@plt+0x464>
   10c20:	cmp	r5, #0
   10c24:	mov	r0, r7
   10c28:	movlt	r5, #99	; 0x63
   10c2c:	bl	10914 <sg_cmds_close_device@plt>
   10c30:	b	10c50 <abort@plt+0x24c>
   10c34:	add	r0, sp, #28
   10c38:	mov	r1, r7
   10c3c:	mov	r2, r5
   10c40:	bl	1102c <abort@plt+0x628>
   10c44:	cmp	r0, #0
   10c48:	beq	10a98 <abort@plt+0x94>
   10c4c:	mov	r5, #1
   10c50:	ldr	r2, [sp, #60]	; 0x3c
   10c54:	mov	r0, r5
   10c58:	ldr	r3, [r6]
   10c5c:	cmp	r2, r3
   10c60:	bne	10eb0 <abort@plt+0x4ac>
   10c64:	add	sp, sp, #64	; 0x40
   10c68:	vpop	{d8}
   10c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c70:	ldr	r3, [sp, #32]
   10c74:	cmp	r3, #0
   10c78:	ble	10ed4 <abort@plt+0x4d0>
   10c7c:	movw	r8, #1599	; 0x63f
   10c80:	movt	r8, #25575	; 0x63e7
   10c84:	mvn	r9, #0
   10c88:	mov	sl, #100	; 0x64
   10c8c:	ldr	ip, [sp, #44]	; 0x2c
   10c90:	subs	r2, r3, #1
   10c94:	rsbs	r3, r2, #0
   10c98:	mov	r0, r7
   10c9c:	adcs	r3, r3, r2
   10ca0:	mov	r1, r4
   10ca4:	add	r2, sp, #8
   10ca8:	str	ip, [sp]
   10cac:	str	r9, [sp, #8]
   10cb0:	bl	1092c <sg_ll_test_unit_ready_progress@plt>
   10cb4:	ldr	r2, [sp, #8]
   10cb8:	cmp	r2, #0
   10cbc:	mov	r5, r0
   10cc0:	blt	10d5c <abort@plt+0x358>
   10cc4:	mul	r2, sl, r2
   10cc8:	mov	r0, #1
   10ccc:	movw	r1, #7032	; 0x1b78
   10cd0:	movt	r1, #1
   10cd4:	add	r4, r4, r0
   10cd8:	uxth	r3, r2
   10cdc:	asr	r2, r2, #16
   10ce0:	smull	ip, r3, r8, r3
   10ce4:	lsr	r3, r3, #8
   10ce8:	bl	109bc <__printf_chk@plt>
   10cec:	ldr	r3, [sp, #32]
   10cf0:	cmp	r3, r4
   10cf4:	ble	10eb4 <abort@plt+0x4b0>
   10cf8:	cmp	r4, #0
   10cfc:	ble	10c8c <abort@plt+0x288>
   10d00:	mov	r0, #30
   10d04:	bl	10920 <sleep@plt>
   10d08:	ldr	r3, [sp, #32]
   10d0c:	b	10c8c <abort@plt+0x288>
   10d10:	ldr	r5, [sp, #56]	; 0x38
   10d14:	cmp	r5, #0
   10d18:	bne	10dec <abort@plt+0x3e8>
   10d1c:	movw	r0, #6404	; 0x1904
   10d20:	movt	r0, #1
   10d24:	bl	10968 <puts@plt>
   10d28:	b	10c50 <abort@plt+0x24c>
   10d2c:	str	r8, [sp, #56]	; 0x38
   10d30:	bl	1102c <abort@plt+0x628>
   10d34:	cmp	r0, #0
   10d38:	bne	10c4c <abort@plt+0x248>
   10d3c:	ldr	r3, [sp, #56]	; 0x38
   10d40:	cmp	r3, #0
   10d44:	bne	10a98 <abort@plt+0x94>
   10d48:	add	r0, sp, #28
   10d4c:	mov	r1, r7
   10d50:	mov	r2, r5
   10d54:	bl	11300 <abort@plt+0x8fc>
   10d58:	b	10c44 <abort@plt+0x240>
   10d5c:	ldr	r3, [sp, #32]
   10d60:	cmp	r3, #1
   10d64:	ble	10c20 <abort@plt+0x21c>
   10d68:	cmp	r4, r3
   10d6c:	addlt	r2, r4, #1
   10d70:	movge	r2, r4
   10d74:	movw	r1, #7072	; 0x1ba0
   10d78:	mov	r0, #1
   10d7c:	movt	r1, #1
   10d80:	bl	109bc <__printf_chk@plt>
   10d84:	b	10c20 <abort@plt+0x21c>
   10d88:	movw	r1, #8452	; 0x2104
   10d8c:	movt	r1, #2
   10d90:	movw	r2, #6928	; 0x1b10
   10d94:	movw	r3, #6948	; 0x1b24
   10d98:	ldr	r0, [r1]
   10d9c:	movt	r2, #1
   10da0:	movt	r3, #1
   10da4:	mov	r1, #1
   10da8:	bl	109c8 <__fprintf_chk@plt>
   10dac:	b	10c50 <abort@plt+0x24c>
   10db0:	movw	r2, #8452	; 0x2104
   10db4:	movt	r2, #2
   10db8:	rsb	r0, r7, #0
   10dbc:	ldr	r5, [sp, #52]	; 0x34
   10dc0:	ldr	r4, [r2]
   10dc4:	bl	109d4 <safe_strerror@plt>
   10dc8:	movw	r2, #6992	; 0x1b50
   10dcc:	mov	r1, #1
   10dd0:	mov	r3, r5
   10dd4:	movt	r2, #1
   10dd8:	mov	r5, #15
   10ddc:	str	r0, [sp]
   10de0:	mov	r0, r4
   10de4:	bl	109c8 <__fprintf_chk@plt>
   10de8:	b	10c50 <abort@plt+0x24c>
   10dec:	movw	r0, #5700	; 0x1644
   10df0:	movt	r0, #1
   10df4:	bl	10968 <puts@plt>
   10df8:	mov	r5, #0
   10dfc:	b	10c50 <abort@plt+0x24c>
   10e00:	movw	r3, #8452	; 0x2104
   10e04:	movt	r3, #2
   10e08:	mov	r1, #1
   10e0c:	mov	r2, #25
   10e10:	ldr	r3, [r3]
   10e14:	movw	r0, #6964	; 0x1b34
   10e18:	movt	r0, #1
   10e1c:	mov	r5, #1
   10e20:	bl	10944 <fwrite@plt>
   10e24:	ldr	r3, [sp, #56]	; 0x38
   10e28:	cmp	r3, #0
   10e2c:	movwne	r0, #5700	; 0x1644
   10e30:	movweq	r0, #6404	; 0x1904
   10e34:	movtne	r0, #1
   10e38:	movteq	r0, #1
   10e3c:	bl	10968 <puts@plt>
   10e40:	b	10c50 <abort@plt+0x24c>
   10e44:	mov	r1, r3
   10e48:	add	r0, sp, #12
   10e4c:	str	r3, [sp, #12]
   10e50:	str	r3, [sp, #16]
   10e54:	bl	10950 <gettimeofday@plt>
   10e58:	b	10ae8 <abort@plt+0xe4>
   10e5c:	cmp	r8, #0
   10e60:	bne	10c18 <abort@plt+0x214>
   10e64:	b	10c20 <abort@plt+0x21c>
   10e68:	mov	r3, r8
   10e6c:	movw	r1, #7200	; 0x1c20
   10e70:	mov	r0, #1
   10e74:	movt	r1, #1
   10e78:	bl	109bc <__printf_chk@plt>
   10e7c:	b	10c20 <abort@plt+0x21c>
   10e80:	mov	r0, #10
   10e84:	bl	109b0 <putchar@plt>
   10e88:	b	10c0c <abort@plt+0x208>
   10e8c:	movw	r0, #7112	; 0x1bc8
   10e90:	movt	r0, #1
   10e94:	mov	r4, r2
   10e98:	bl	10968 <puts@plt>
   10e9c:	b	10b58 <abort@plt+0x154>
   10ea0:	mov	r5, #0
   10ea4:	mov	r4, r5
   10ea8:	mov	r8, r5
   10eac:	b	10b58 <abort@plt+0x154>
   10eb0:	bl	10938 <__stack_chk_fail@plt>
   10eb4:	cmp	r3, #1
   10eb8:	movgt	r2, r4
   10ebc:	movgt	r5, #0
   10ec0:	bgt	10d74 <abort@plt+0x370>
   10ec4:	mov	r0, r7
   10ec8:	mov	r5, #0
   10ecc:	bl	10914 <sg_cmds_close_device@plt>
   10ed0:	b	10c50 <abort@plt+0x24c>
   10ed4:	cmp	r3, #1
   10ed8:	mov	r5, r4
   10edc:	movgt	r2, r4
   10ee0:	bgt	10d74 <abort@plt+0x370>
   10ee4:	b	10c20 <abort@plt+0x21c>
   10ee8:	adcsge	lr, r5, sp, lsl #27
   10eec:	mrccc	6, 5, ip, cr0, cr7, {7}
   10ef0:	stmiahi	r3!, {r0, r4, r5, r6, r7, fp, sp, lr}^
   10ef4:	mcrcc	8, 7, pc, cr4, cr5, {5}	; <UNPREDICTABLE>
   10ef8:	mov	fp, #0
   10efc:	mov	lr, #0
   10f00:	pop	{r1}		; (ldr r1, [sp], #4)
   10f04:	mov	r2, sp
   10f08:	push	{r2}		; (str r2, [sp, #-4]!)
   10f0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f10:	ldr	ip, [pc, #16]	; 10f28 <abort@plt+0x524>
   10f14:	push	{ip}		; (str ip, [sp, #-4]!)
   10f18:	ldr	r0, [pc, #12]	; 10f2c <abort@plt+0x528>
   10f1c:	ldr	r3, [pc, #12]	; 10f30 <abort@plt+0x52c>
   10f20:	bl	10974 <__libc_start_main@plt>
   10f24:	bl	10a04 <abort@plt>
   10f28:	andeq	r1, r1, r4, lsl #12
   10f2c:	andeq	r0, r1, r0, lsl sl
   10f30:	andeq	r1, r1, r0, lsr #11
   10f34:	ldr	r3, [pc, #20]	; 10f50 <abort@plt+0x54c>
   10f38:	ldr	r2, [pc, #20]	; 10f54 <abort@plt+0x550>
   10f3c:	add	r3, pc, r3
   10f40:	ldr	r2, [r3, r2]
   10f44:	cmp	r2, #0
   10f48:	bxeq	lr
   10f4c:	b	10980 <__gmon_start__@plt>
   10f50:	strheq	r1, [r1], -ip
   10f54:	andeq	r0, r0, r0, rrx
   10f58:	push	{r3, lr}
   10f5c:	movw	r0, #8440	; 0x20f8
   10f60:	ldr	r3, [pc, #36]	; 10f8c <abort@plt+0x588>
   10f64:	movt	r0, #2
   10f68:	rsb	r3, r0, r3
   10f6c:	cmp	r3, #6
   10f70:	popls	{r3, pc}
   10f74:	movw	r3, #0
   10f78:	movt	r3, #0
   10f7c:	cmp	r3, #0
   10f80:	popeq	{r3, pc}
   10f84:	blx	r3
   10f88:	pop	{r3, pc}
   10f8c:	strdeq	r2, [r2], -fp
   10f90:	push	{r3, lr}
   10f94:	movw	r0, #8440	; 0x20f8
   10f98:	movw	r3, #8440	; 0x20f8
   10f9c:	movt	r0, #2
   10fa0:	movt	r3, #2
   10fa4:	rsb	r3, r0, r3
   10fa8:	asr	r3, r3, #2
   10fac:	add	r3, r3, r3, lsr #31
   10fb0:	asrs	r1, r3, #1
   10fb4:	popeq	{r3, pc}
   10fb8:	movw	r2, #0
   10fbc:	movt	r2, #0
   10fc0:	cmp	r2, #0
   10fc4:	popeq	{r3, pc}
   10fc8:	blx	r2
   10fcc:	pop	{r3, pc}
   10fd0:	push	{r4, lr}
   10fd4:	movw	r4, #8460	; 0x210c
   10fd8:	movt	r4, #2
   10fdc:	ldrb	r3, [r4]
   10fe0:	cmp	r3, #0
   10fe4:	popne	{r4, pc}
   10fe8:	bl	10f58 <abort@plt+0x554>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [r4]
   10ff4:	pop	{r4, pc}
   10ff8:	movw	r0, #7932	; 0x1efc
   10ffc:	movt	r0, #2
   11000:	push	{r3, lr}
   11004:	ldr	r3, [r0]
   11008:	cmp	r3, #0
   1100c:	beq	11024 <abort@plt+0x620>
   11010:	movw	r3, #0
   11014:	movt	r3, #0
   11018:	cmp	r3, #0
   1101c:	beq	11024 <abort@plt+0x620>
   11020:	blx	r3
   11024:	pop	{r3, lr}
   11028:	b	10f90 <abort@plt+0x58c>
   1102c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11030:	movw	r9, #8440	; 0x20f8
   11034:	movt	r9, #2
   11038:	sub	sp, sp, #20
   1103c:	movw	fp, #8452	; 0x2104
   11040:	movw	sl, #8456	; 0x2108
   11044:	ldr	r3, [r9]
   11048:	movt	fp, #2
   1104c:	movt	sl, #2
   11050:	add	r8, sp, #8
   11054:	mov	r4, r0
   11058:	mov	r5, r1
   1105c:	mov	r6, r2
   11060:	mov	r7, #0
   11064:	str	r3, [sp, #12]
   11068:	str	r8, [sp]
   1106c:	movw	r2, #5656	; 0x1618
   11070:	movw	r3, #8296	; 0x2068
   11074:	movt	r2, #1
   11078:	movt	r3, #2
   1107c:	mov	r0, r5
   11080:	mov	r1, r6
   11084:	str	r7, [sp, #8]
   11088:	bl	1098c <getopt_long@plt>
   1108c:	cmn	r0, #1
   11090:	beq	1124c <abort@plt+0x848>
   11094:	sub	r3, r0, #63	; 0x3f
   11098:	cmp	r3, #55	; 0x37
   1109c:	ldrls	pc, [pc, r3, lsl #2]
   110a0:	b	1120c <abort@plt+0x808>
   110a4:	strdeq	r1, [r1], -ip
   110a8:	andeq	r1, r1, ip, lsl #4
   110ac:	andeq	r1, r1, ip, lsl #4
   110b0:	andeq	r1, r1, ip, lsl #4
   110b4:	andeq	r1, r1, ip, lsl #4
   110b8:	andeq	r1, r1, ip, lsl #4
   110bc:	andeq	r1, r1, ip, lsl #4
   110c0:	andeq	r1, r1, ip, lsl #4
   110c4:	andeq	r1, r1, ip, lsl #4
   110c8:	andeq	r1, r1, ip, lsl #4
   110cc:	andeq	r1, r1, ip, lsl #4
   110d0:	andeq	r1, r1, ip, lsl #4
   110d4:	andeq	r1, r1, ip, lsl #4
   110d8:	andeq	r1, r1, ip, lsl #4
   110dc:	andeq	r1, r1, ip, lsl #4
   110e0:	andeq	r1, r1, r8, rrx
   110e4:	ldrdeq	r1, [r1], -ip
   110e8:	andeq	r1, r1, ip, lsl #4
   110ec:	andeq	r1, r1, ip, lsl #4
   110f0:	andeq	r1, r1, ip, lsl #4
   110f4:	andeq	r1, r1, ip, lsl #4
   110f8:	andeq	r1, r1, ip, lsl #4
   110fc:	andeq	r1, r1, ip, lsl #4
   11100:	andeq	r1, r1, ip, asr #3
   11104:	andeq	r1, r1, ip, lsl #4
   11108:	andeq	r1, r1, ip, lsl #4
   1110c:	andeq	r1, r1, ip, lsl #4
   11110:	andeq	r1, r1, ip, lsl #4
   11114:	andeq	r1, r1, ip, lsl #4
   11118:	andeq	r1, r1, ip, lsl #4
   1111c:	andeq	r1, r1, ip, lsl #4
   11120:	andeq	r1, r1, ip, lsl #4
   11124:	andeq	r1, r1, ip, lsl #4
   11128:	andeq	r1, r1, ip, lsl #4
   1112c:	andeq	r1, r1, ip, lsl #4
   11130:	andeq	r1, r1, ip, lsl #4
   11134:	andeq	r1, r1, ip, lsl #4
   11138:	andeq	r1, r1, ip, lsl #4
   1113c:	andeq	r1, r1, ip, lsl #4
   11140:	andeq	r1, r1, ip, lsl #4
   11144:	andeq	r1, r1, ip, lsl #4
   11148:	strdeq	r1, [r1], -ip
   1114c:	andeq	r1, r1, ip, lsl #4
   11150:	andeq	r1, r1, ip, lsl #4
   11154:	andeq	r1, r1, ip, lsl #4
   11158:	andeq	r1, r1, ip, lsl #4
   1115c:	andeq	r1, r1, ip, lsl #4
   11160:			; <UNDEFINED> instruction: 0x000111b4
   11164:	andeq	r1, r1, ip, lsl #4
   11168:	andeq	r1, r1, r4, lsr #3
   1116c:	andeq	r1, r1, ip, lsl #4
   11170:	andeq	r1, r1, ip, lsl #4
   11174:	andeq	r1, r1, ip, lsl #4
   11178:	muleq	r1, r4, r1
   1117c:	andeq	r1, r1, ip, lsl #4
   11180:	andeq	r1, r1, r4, lsl #3
   11184:	ldr	r3, [r4, #16]
   11188:	add	r3, r3, #1
   1118c:	str	r3, [r4, #16]
   11190:	b	11068 <abort@plt+0x664>
   11194:	ldr	r3, [r4, #12]
   11198:	add	r3, r3, #1
   1119c:	str	r3, [r4, #12]
   111a0:	b	11068 <abort@plt+0x664>
   111a4:	ldr	r3, [r4, #8]
   111a8:	add	r3, r3, #1
   111ac:	str	r3, [r4, #8]
   111b0:	b	11068 <abort@plt+0x664>
   111b4:	ldr	r0, [sl]
   111b8:	bl	109e0 <sg_get_num@plt>
   111bc:	cmp	r0, #0
   111c0:	blt	112c8 <abort@plt+0x8c4>
   111c4:	str	r0, [r4, #4]
   111c8:	b	11068 <abort@plt+0x664>
   111cc:	ldr	r3, [r4, #20]
   111d0:	add	r3, r3, #1
   111d4:	str	r3, [r4, #20]
   111d8:	b	11068 <abort@plt+0x664>
   111dc:	mov	r0, #0
   111e0:	str	r0, [r4, #28]
   111e4:	ldr	r2, [sp, #12]
   111e8:	ldr	r3, [r9]
   111ec:	cmp	r2, r3
   111f0:	bne	112fc <abort@plt+0x8f8>
   111f4:	add	sp, sp, #20
   111f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111fc:	ldr	r3, [r4]
   11200:	add	r3, r3, #1
   11204:	str	r3, [r4]
   11208:	b	11068 <abort@plt+0x664>
   1120c:	ldr	ip, [fp]
   11210:	mov	r3, r0
   11214:	str	r0, [sp]
   11218:	movw	r2, #6292	; 0x1894
   1121c:	mov	r1, #1
   11220:	movt	r2, #1
   11224:	mov	r0, ip
   11228:	bl	109c8 <__fprintf_chk@plt>
   1122c:	ldr	r3, [r4]
   11230:	cmp	r3, #0
   11234:	bne	11068 <abort@plt+0x664>
   11238:	movw	r0, #5700	; 0x1644
   1123c:	movt	r0, #1
   11240:	bl	10968 <puts@plt>
   11244:	mov	r0, #1
   11248:	b	111e4 <abort@plt+0x7e0>
   1124c:	movw	r7, #8448	; 0x2100
   11250:	movt	r7, #2
   11254:	ldr	r3, [r7]
   11258:	cmp	r5, r3
   1125c:	ble	112c0 <abort@plt+0x8bc>
   11260:	ldr	r2, [r4, #24]
   11264:	cmp	r2, #0
   11268:	beq	112a8 <abort@plt+0x8a4>
   1126c:	ldr	r3, [r7]
   11270:	movw	r4, #8452	; 0x2104
   11274:	movt	r4, #2
   11278:	ldr	r3, [r6, r3, lsl #2]
   1127c:	movw	r2, #6328	; 0x18b8
   11280:	ldr	r0, [r4]
   11284:	movt	r2, #1
   11288:	mov	r1, #1
   1128c:	bl	109c8 <__fprintf_chk@plt>
   11290:	ldr	r3, [r7]
   11294:	add	r3, r3, #1
   11298:	str	r3, [r7]
   1129c:	cmp	r5, r3
   112a0:	bgt	11278 <abort@plt+0x874>
   112a4:	b	11238 <abort@plt+0x834>
   112a8:	ldr	r2, [r6, r3, lsl #2]
   112ac:	add	r3, r3, #1
   112b0:	cmp	r5, r3
   112b4:	str	r3, [r7]
   112b8:	str	r2, [r4, #24]
   112bc:	bgt	1126c <abort@plt+0x868>
   112c0:	mov	r0, #0
   112c4:	b	111e4 <abort@plt+0x7e0>
   112c8:	movw	r3, #8452	; 0x2104
   112cc:	movt	r3, #2
   112d0:	mov	r1, #1
   112d4:	mov	r2, #28
   112d8:	ldr	r3, [r3]
   112dc:	movw	r0, #5668	; 0x1624
   112e0:	movt	r0, #1
   112e4:	bl	10944 <fwrite@plt>
   112e8:	movw	r0, #5700	; 0x1644
   112ec:	movt	r0, #1
   112f0:	bl	10968 <puts@plt>
   112f4:	mov	r0, #1
   112f8:	b	111e4 <abort@plt+0x7e0>
   112fc:	bl	10938 <__stack_chk_fail@plt>
   11300:	cmp	r1, #1
   11304:	push	{r4, r5, r6, r7, r8, r9, lr}
   11308:	mov	r8, r1
   1130c:	sub	sp, sp, #12
   11310:	mov	r6, r0
   11314:	movgt	r7, r2
   11318:	movgt	r5, #1
   1131c:	ble	1135c <abort@plt+0x958>
   11320:	ldr	r4, [r7, #4]!
   11324:	mov	r0, r4
   11328:	bl	10998 <strlen@plt>
   1132c:	cmp	r0, #0
   11330:	ble	11350 <abort@plt+0x94c>
   11334:	ldrb	r3, [r4]
   11338:	cmp	r3, #45	; 0x2d
   1133c:	beq	11364 <abort@plt+0x960>
   11340:	ldr	r3, [r6, #24]
   11344:	cmp	r3, #0
   11348:	bne	11538 <abort@plt+0xb34>
   1134c:	str	r4, [r6, #24]
   11350:	add	r5, r5, #1
   11354:	cmp	r5, r8
   11358:	bne	11320 <abort@plt+0x91c>
   1135c:	mov	r0, #0
   11360:	b	114b0 <abort@plt+0xaac>
   11364:	subs	ip, r0, #1
   11368:	add	r4, r4, #1
   1136c:	beq	11350 <abort@plt+0x94c>
   11370:	mov	r9, r4
   11374:	add	r4, r4, #1
   11378:	ldrb	r2, [r9]
   1137c:	sub	r2, r2, #63	; 0x3f
   11380:	cmp	r2, #55	; 0x37
   11384:	ldrls	pc, [pc, r2, lsl #2]
   11388:	b	114cc <abort@plt+0xac8>
   1138c:			; <UNDEFINED> instruction: 0x000114b8
   11390:	andeq	r1, r1, ip, asr #9
   11394:	andeq	r1, r1, ip, asr #9
   11398:	andeq	r1, r1, ip, asr #9
   1139c:	andeq	r1, r1, ip, asr #9
   113a0:	andeq	r1, r1, ip, asr #9
   113a4:	andeq	r1, r1, ip, asr #9
   113a8:	andeq	r1, r1, ip, asr #9
   113ac:	andeq	r1, r1, ip, asr #9
   113b0:	andeq	r1, r1, ip, asr #9
   113b4:	andeq	r1, r1, ip, asr #9
   113b8:	andeq	r1, r1, ip, asr #9
   113bc:	andeq	r1, r1, ip, asr #9
   113c0:	andeq	r1, r1, ip, asr #9
   113c4:	andeq	r1, r1, ip, asr #9
   113c8:	andeq	r1, r1, r4, lsr #9
   113cc:	andeq	r1, r1, r8, ror r4
   113d0:	andeq	r1, r1, ip, asr #9
   113d4:	andeq	r1, r1, ip, asr #9
   113d8:	andeq	r1, r1, ip, asr #9
   113dc:	andeq	r1, r1, ip, asr #9
   113e0:	andeq	r1, r1, ip, asr #9
   113e4:	andeq	r1, r1, ip, asr #9
   113e8:	andeq	r1, r1, ip, ror #8
   113ec:	andeq	r1, r1, ip, asr #9
   113f0:	andeq	r1, r1, ip, asr #9
   113f4:	andeq	r1, r1, ip, asr #9
   113f8:	andeq	r1, r1, ip, asr #9
   113fc:	andeq	r1, r1, ip, asr #9
   11400:	andeq	r1, r1, ip, asr #9
   11404:	andeq	r1, r1, ip, asr #9
   11408:	andeq	r1, r1, ip, asr #9
   1140c:	andeq	r1, r1, ip, asr #9
   11410:	andeq	r1, r1, ip, asr #9
   11414:	andeq	r1, r1, ip, asr #9
   11418:	andeq	r1, r1, ip, asr #9
   1141c:	andeq	r1, r1, ip, asr #9
   11420:	andeq	r1, r1, ip, asr #9
   11424:	andeq	r1, r1, ip, asr #9
   11428:	andeq	r1, r1, ip, asr #9
   1142c:	andeq	r1, r1, ip, asr #9
   11430:	andeq	r1, r1, ip, asr #9
   11434:	andeq	r1, r1, ip, asr #9
   11438:	andeq	r1, r1, ip, asr #9
   1143c:	andeq	r1, r1, ip, asr #9
   11440:	andeq	r1, r1, ip, asr #9
   11444:	andeq	r1, r1, ip, asr #9
   11448:	andeq	r1, r1, ip, asr #9
   1144c:	andeq	r1, r1, ip, asr #9
   11450:	muleq	r1, r4, r4
   11454:	andeq	r1, r1, ip, asr #9
   11458:	andeq	r1, r1, ip, asr #9
   1145c:	andeq	r1, r1, ip, asr #9
   11460:	andeq	r1, r1, r4, lsl #9
   11464:	andeq	r1, r1, ip, asr #9
   11468:	andeq	r1, r1, ip, ror #8
   1146c:	ldr	r3, [r6, #16]
   11470:	add	r3, r3, #1
   11474:	str	r3, [r6, #16]
   11478:	subs	ip, ip, #1
   1147c:	bne	11370 <abort@plt+0x96c>
   11480:	b	11350 <abort@plt+0x94c>
   11484:	ldr	r3, [r6, #12]
   11488:	add	r3, r3, #1
   1148c:	str	r3, [r6, #12]
   11490:	b	11478 <abort@plt+0xa74>
   11494:	ldr	r3, [r6, #8]
   11498:	add	r3, r3, #1
   1149c:	str	r3, [r6, #8]
   114a0:	b	11478 <abort@plt+0xa74>
   114a4:	mov	r0, #0
   114a8:	mov	r3, #1
   114ac:	str	r3, [r6, #28]
   114b0:	add	sp, sp, #12
   114b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   114b8:	ldr	r3, [r6]
   114bc:	mov	r0, #0
   114c0:	add	r3, r3, #1
   114c4:	str	r3, [r6]
   114c8:	b	114b0 <abort@plt+0xaac>
   114cc:	movw	r0, #6904	; 0x1af8
   114d0:	mov	r1, r9
   114d4:	movt	r0, #1
   114d8:	mov	r2, #2
   114dc:	bl	109f8 <strncmp@plt>
   114e0:	cmp	r0, #0
   114e4:	beq	1156c <abort@plt+0xb68>
   114e8:	movw	r0, #6820	; 0x1aa4
   114ec:	mov	r1, r9
   114f0:	movt	r0, #1
   114f4:	mov	r2, #4
   114f8:	bl	109f8 <strncmp@plt>
   114fc:	cmp	r0, #0
   11500:	beq	11350 <abort@plt+0x94c>
   11504:	movw	r1, #8452	; 0x2104
   11508:	movt	r1, #2
   1150c:	mov	r3, r9
   11510:	movw	r2, #6828	; 0x1aac
   11514:	ldr	r0, [r1]
   11518:	movt	r2, #1
   1151c:	mov	r1, #1
   11520:	bl	109c8 <__fprintf_chk@plt>
   11524:	movw	r0, #6404	; 0x1904
   11528:	movt	r0, #1
   1152c:	bl	10968 <puts@plt>
   11530:	mov	r0, #1
   11534:	b	114b0 <abort@plt+0xaac>
   11538:	movw	r2, #8452	; 0x2104
   1153c:	movt	r2, #2
   11540:	str	r4, [sp]
   11544:	mov	r1, #1
   11548:	ldr	r0, [r2]
   1154c:	movw	r2, #6856	; 0x1ac8
   11550:	movt	r2, #1
   11554:	bl	109c8 <__fprintf_chk@plt>
   11558:	movw	r0, #6404	; 0x1904
   1155c:	movt	r0, #1
   11560:	bl	10968 <puts@plt>
   11564:	mov	r0, #1
   11568:	b	114b0 <abort@plt+0xaac>
   1156c:	add	r0, r9, #2
   11570:	bl	109e0 <sg_get_num@plt>
   11574:	cmp	r0, #0
   11578:	str	r0, [r6, #4]
   1157c:	bgt	11350 <abort@plt+0x94c>
   11580:	movw	r0, #6360	; 0x18d8
   11584:	movt	r0, #1
   11588:	bl	10968 <puts@plt>
   1158c:	movw	r0, #6404	; 0x1904
   11590:	movt	r0, #1
   11594:	bl	10968 <puts@plt>
   11598:	mov	r0, #1
   1159c:	b	114b0 <abort@plt+0xaac>
   115a0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   115a4:	mov	r7, r0
   115a8:	ldr	r6, [pc, #76]	; 115fc <abort@plt+0xbf8>
   115ac:	mov	r8, r1
   115b0:	ldr	r5, [pc, #72]	; 11600 <abort@plt+0xbfc>
   115b4:	mov	r9, r2
   115b8:	add	r6, pc, r6
   115bc:	bl	108f4 <_init@@Base>
   115c0:	add	r5, pc, r5
   115c4:	rsb	r6, r5, r6
   115c8:	asrs	r6, r6, #2
   115cc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   115d0:	sub	r5, r5, #4
   115d4:	mov	r4, #0
   115d8:	add	r4, r4, #1
   115dc:	ldr	r3, [r5, #4]!
   115e0:	mov	r0, r7
   115e4:	mov	r1, r8
   115e8:	mov	r2, r9
   115ec:	blx	r3
   115f0:	cmp	r4, r6
   115f4:	bne	115d8 <abort@plt+0xbd4>
   115f8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   115fc:	andeq	r0, r1, r8, lsr r9
   11600:	andeq	r0, r1, ip, lsr #18
   11604:	bx	lr

Disassembly of section .fini:

00011608 <_fini@@Base>:
   11608:	push	{r3, lr}
   1160c:	pop	{r3, pc}
