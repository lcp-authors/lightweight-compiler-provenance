
centos-preinstalled/gst-stats-1.0:     file format elf32-littlearm


Disassembly of section .init:

000112c0 <_init@@Base>:
   112c0:	push	{r3, lr}
   112c4:	bl	11dd8 <g_slice_alloc0@plt+0x7ec>
   112c8:	pop	{r3, pc}

Disassembly of section .plt:

000112cc <g_free@plt-0x14>:
   112cc:	push	{lr}		; (str lr, [sp, #-4]!)
   112d0:	ldr	lr, [pc, #4]	; 112dc <_init@@Base+0x1c>
   112d4:	add	lr, pc, lr
   112d8:	ldr	pc, [lr, #8]!
   112dc:	andeq	r4, r1, r4, lsr #26

000112e0 <g_free@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #20, 20	; 0x14000
   112e8:	ldr	pc, [ip, #3364]!	; 0xd24

000112ec <gst_pad_direction_get_type@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #20, 20	; 0x14000
   112f4:	ldr	pc, [ip, #3356]!	; 0xd1c

000112f8 <g_regex_unref@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #20, 20	; 0x14000
   11300:	ldr	pc, [ip, #3348]!	; 0xd14

00011304 <g_regex_new@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #20, 20	; 0x14000
   1130c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011310 <abort@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #20, 20	; 0x14000
   11318:	ldr	pc, [ip, #3332]!	; 0xd04

0001131c <g_slist_free@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #20, 20	; 0x14000
   11324:	ldr	pc, [ip, #3324]!	; 0xcfc

00011328 <gst_buffer_flags_get_type@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #20, 20	; 0x14000
   11330:	ldr	pc, [ip, #3316]!	; 0xcf4

00011334 <g_hash_table_destroy@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #20, 20	; 0x14000
   1133c:	ldr	pc, [ip, #3308]!	; 0xcec

00011340 <__libc_start_main@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #20, 20	; 0x14000
   11348:	ldr	pc, [ip, #3300]!	; 0xce4

0001134c <gst_structure_get_name@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #20, 20	; 0x14000
   11354:	ldr	pc, [ip, #3292]!	; 0xcdc

00011358 <g_ptr_array_new_with_free_func@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #20, 20	; 0x14000
   11360:	ldr	pc, [ip, #3284]!	; 0xcd4

00011364 <g_print@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #20, 20	; 0x14000
   1136c:	ldr	pc, [ip, #3276]!	; 0xccc

00011370 <g_option_context_free@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #20, 20	; 0x14000
   11378:	ldr	pc, [ip, #3268]!	; 0xcc4

0001137c <g_regex_match@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #20, 20	; 0x14000
   11384:	ldr	pc, [ip, #3260]!	; 0xcbc

00011388 <__gmon_start__@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #20, 20	; 0x14000
   11390:	ldr	pc, [ip, #3252]!	; 0xcb4

00011394 <rewind@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #20, 20	; 0x14000
   1139c:	ldr	pc, [ip, #3244]!	; 0xcac

000113a0 <fclose@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #20, 20	; 0x14000
   113a8:	ldr	pc, [ip, #3236]!	; 0xca4

000113ac <fgets@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #20, 20	; 0x14000
   113b4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113b8 <__printf_chk@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #20, 20	; 0x14000
   113c0:	ldr	pc, [ip, #3220]!	; 0xc94

000113c4 <strchr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #20, 20	; 0x14000
   113cc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113d0 <g_hash_table_insert@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #20, 20	; 0x14000
   113d8:	ldr	pc, [ip, #3204]!	; 0xc84

000113dc <g_hash_table_find@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #20, 20	; 0x14000
   113e4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113e8 <memset@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #20, 20	; 0x14000
   113f0:	ldr	pc, [ip, #3188]!	; 0xc74

000113f4 <g_ptr_array_foreach@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #20, 20	; 0x14000
   113fc:	ldr	pc, [ip, #3180]!	; 0xc6c

00011400 <g_option_context_add_main_entries@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #20, 20	; 0x14000
   11408:	ldr	pc, [ip, #3172]!	; 0xc64

0001140c <bindtextdomain@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #20, 20	; 0x14000
   11414:	ldr	pc, [ip, #3164]!	; 0xc5c

00011418 <gst_init_get_option_group@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #20, 20	; 0x14000
   11420:	ldr	pc, [ip, #3156]!	; 0xc54

00011424 <gst_version_string@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #20, 20	; 0x14000
   1142c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011430 <gst_structure_free@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #20, 20	; 0x14000
   11438:	ldr	pc, [ip, #3140]!	; 0xc44

0001143c <g_strv_length@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #20, 20	; 0x14000
   11444:	ldr	pc, [ip, #3132]!	; 0xc3c

00011448 <bind_textdomain_codeset@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #20, 20	; 0x14000
   11450:	ldr	pc, [ip, #3124]!	; 0xc34

00011454 <g_ptr_array_free@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #20, 20	; 0x14000
   1145c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011460 <g_hash_table_size@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #20, 20	; 0x14000
   11468:	ldr	pc, [ip, #3108]!	; 0xc24

0001146c <g_hash_table_new_full@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #20, 20	; 0x14000
   11474:	ldr	pc, [ip, #3100]!	; 0xc1c

00011478 <gst_debug_log@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #20, 20	; 0x14000
   11480:	ldr	pc, [ip, #3092]!	; 0xc14

00011484 <g_hash_table_foreach@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #20, 20	; 0x14000
   1148c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011490 <g_option_context_parse@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #20, 20	; 0x14000
   11498:	ldr	pc, [ip, #3076]!	; 0xc04

0001149c <g_slist_insert_sorted@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #20, 20	; 0x14000
   114a4:	ldr	pc, [ip, #3068]!	; 0xbfc

000114a8 <fopen64@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #20, 20	; 0x14000
   114b0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114b4 <g_snprintf@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #20, 20	; 0x14000
   114bc:	ldr	pc, [ip, #3052]!	; 0xbec

000114c0 <feof@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #20, 20	; 0x14000
   114c8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114cc <g_option_context_add_group@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #20, 20	; 0x14000
   114d4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114d8 <raise@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #20, 20	; 0x14000
   114e0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114e4 <gst_structure_from_string@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #20, 20	; 0x14000
   114ec:	ldr	pc, [ip, #3020]!	; 0xbcc

000114f0 <g_strchomp@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #20, 20	; 0x14000
   114f8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114fc <g_slist_foreach@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #20, 20	; 0x14000
   11504:	ldr	pc, [ip, #3004]!	; 0xbbc

00011508 <g_get_prgname@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #20, 20	; 0x14000
   11510:	ldr	pc, [ip, #2996]!	; 0xbb4

00011514 <fwrite@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #20, 20	; 0x14000
   1151c:	ldr	pc, [ip, #2988]!	; 0xbac

00011520 <g_match_info_fetch@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #20, 20	; 0x14000
   11528:	ldr	pc, [ip, #2980]!	; 0xba4

0001152c <__stack_chk_fail@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #20, 20	; 0x14000
   11534:	ldr	pc, [ip, #2972]!	; 0xb9c

00011538 <gst_structure_get@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #20, 20	; 0x14000
   11540:	ldr	pc, [ip, #2964]!	; 0xb94

00011544 <g_hash_table_lookup@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #20, 20	; 0x14000
   1154c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011550 <g_ptr_array_set_size@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #20, 20	; 0x14000
   11558:	ldr	pc, [ip, #2948]!	; 0xb84

0001155c <puts@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #20, 20	; 0x14000
   11564:	ldr	pc, [ip, #2940]!	; 0xb7c

00011568 <textdomain@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #20, 20	; 0x14000
   11570:	ldr	pc, [ip, #2932]!	; 0xb74

00011574 <g_option_context_new@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #20, 20	; 0x14000
   1157c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011580 <g_strfreev@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #20, 20	; 0x14000
   11588:	ldr	pc, [ip, #2916]!	; 0xb64

0001158c <g_str_has_suffix@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #20, 20	; 0x14000
   11594:	ldr	pc, [ip, #2908]!	; 0xb5c

00011598 <g_slist_find_custom@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #20, 20	; 0x14000
   115a0:	ldr	pc, [ip, #2900]!	; 0xb54

000115a4 <g_hash_table_foreach_remove@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #20, 20	; 0x14000
   115ac:	ldr	pc, [ip, #2892]!	; 0xb4c

000115b0 <g_match_info_free@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #20, 20	; 0x14000
   115b8:	ldr	pc, [ip, #2884]!	; 0xb44

000115bc <g_slice_free1@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #20, 20	; 0x14000
   115c4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115c8 <g_set_prgname@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #20, 20	; 0x14000
   115d0:	ldr	pc, [ip, #2868]!	; 0xb34

000115d4 <strcmp@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #20, 20	; 0x14000
   115dc:	ldr	pc, [ip, #2860]!	; 0xb2c

000115e0 <exit@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #20, 20	; 0x14000
   115e8:	ldr	pc, [ip, #2852]!	; 0xb24

000115ec <g_slice_alloc0@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #20, 20	; 0x14000
   115f4:	ldr	pc, [ip, #2844]!	; 0xb1c

Disassembly of section .text:

000115f8 <.text>:
   115f8:	push	{r4, r5, r6, lr}
   115fc:	mov	r4, r0
   11600:	mov	r0, #16
   11604:	mvn	r5, #0
   11608:	bl	115ec <g_slice_alloc0@plt>
   1160c:	movw	r3, #24896	; 0x6140
   11610:	movt	r3, #2
   11614:	mov	r1, r4
   11618:	mvn	r4, #0
   1161c:	mov	r6, r0
   11620:	mov	r2, r0
   11624:	ldr	r0, [r3, #4]
   11628:	strd	r4, [r6]
   1162c:	bl	113d0 <g_hash_table_insert@plt>
   11630:	mov	r0, r6
   11634:	pop	{r4, r5, r6, pc}
   11638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1163c:	movw	r9, #24872	; 0x6128
   11640:	movt	r9, #2
   11644:	sub	sp, sp, #132	; 0x84
   11648:	mov	r4, #0
   1164c:	mov	r2, #84	; 0x54
   11650:	ldr	r3, [r9]
   11654:	movw	r8, #24896	; 0x6140
   11658:	str	r0, [sp, #20]
   1165c:	add	r0, sp, #40	; 0x28
   11660:	str	r1, [sp, #16]
   11664:	mov	r1, r4
   11668:	str	r3, [sp, #124]	; 0x7c
   1166c:	movt	r8, #2
   11670:	str	r4, [sp, #28]
   11674:	str	r4, [sp, #32]
   11678:	bl	113e8 <memset@plt>
   1167c:	movw	r0, #20240	; 0x4f10
   11680:	movw	r1, #20256	; 0x4f20
   11684:	movt	r0, #1
   11688:	movt	r1, #1
   1168c:	add	r2, r8, #88	; 0x58
   11690:	movw	r3, #20196	; 0x4ee4
   11694:	str	r2, [sp, #56]	; 0x38
   11698:	movt	r3, #1
   1169c:	movw	r2, #20204	; 0x4eec
   116a0:	str	r3, [sp, #40]	; 0x28
   116a4:	movt	r2, #1
   116a8:	movw	r3, #20468	; 0x4ff4
   116ac:	str	r2, [sp, #60]	; 0x3c
   116b0:	movt	r3, #1
   116b4:	mov	r2, #6
   116b8:	str	r3, [sp, #68]	; 0x44
   116bc:	str	r2, [sp, #80]	; 0x50
   116c0:	add	r3, sp, #28
   116c4:	str	r3, [sp, #84]	; 0x54
   116c8:	bl	1140c <bindtextdomain@plt>
   116cc:	movw	r0, #20240	; 0x4f10
   116d0:	movw	r1, #20276	; 0x4f34
   116d4:	movt	r0, #1
   116d8:	movt	r1, #1
   116dc:	bl	11448 <bind_textdomain_codeset@plt>
   116e0:	movw	r0, #20240	; 0x4f10
   116e4:	movt	r0, #1
   116e8:	bl	11568 <textdomain@plt>
   116ec:	movw	r0, #20284	; 0x4f3c
   116f0:	movt	r0, #1
   116f4:	bl	115c8 <g_set_prgname@plt>
   116f8:	movw	r0, #20300	; 0x4f4c
   116fc:	movt	r0, #1
   11700:	bl	11574 <g_option_context_new@plt>
   11704:	add	r1, sp, #40	; 0x28
   11708:	movw	r2, #20240	; 0x4f10
   1170c:	movt	r2, #1
   11710:	mov	r5, r0
   11714:	bl	11400 <g_option_context_add_main_entries@plt>
   11718:	bl	11418 <gst_init_get_option_group@plt>
   1171c:	mov	r1, r0
   11720:	mov	r0, r5
   11724:	bl	114cc <g_option_context_add_group@plt>
   11728:	mov	r0, r5
   1172c:	add	r1, sp, #20
   11730:	add	r2, sp, #16
   11734:	add	r3, sp, #32
   11738:	bl	11490 <g_option_context_parse@plt>
   1173c:	cmp	r0, r4
   11740:	beq	11d0c <g_slice_alloc0@plt+0x720>
   11744:	mov	r0, r5
   11748:	bl	11370 <g_option_context_free@plt>
   1174c:	ldr	r5, [r8, #88]	; 0x58
   11750:	cmp	r5, #0
   11754:	bne	11d38 <g_slice_alloc0@plt+0x74c>
   11758:	ldr	r0, [sp, #28]
   1175c:	cmp	r0, #0
   11760:	beq	11a94 <g_slice_alloc0@plt+0x4a8>
   11764:	ldr	r3, [r0]
   11768:	cmp	r3, #0
   1176c:	beq	11a94 <g_slice_alloc0@plt+0x4a8>
   11770:	bl	1143c <g_strv_length@plt>
   11774:	cmp	r0, #1
   11778:	mov	r4, r0
   1177c:	beq	117b4 <g_slice_alloc0@plt+0x1c8>
   11780:	bl	11508 <g_get_prgname@plt>
   11784:	mov	r2, r4
   11788:	mov	r1, r0
   1178c:	movw	r0, #20416	; 0x4fc0
   11790:	movt	r0, #1
   11794:	bl	11364 <g_print@plt>
   11798:	mov	r0, #1
   1179c:	ldr	r2, [sp, #124]	; 0x7c
   117a0:	ldr	r3, [r9]
   117a4:	cmp	r2, r3
   117a8:	bne	11d08 <g_slice_alloc0@plt+0x71c>
   117ac:	add	sp, sp, #132	; 0x84
   117b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117b4:	movw	r0, #20472	; 0x4ff8
   117b8:	mov	r1, r5
   117bc:	movt	r0, #1
   117c0:	mov	r2, r5
   117c4:	mov	r3, r5
   117c8:	bl	11304 <g_regex_new@plt>
   117cc:	cmp	r0, #0
   117d0:	str	r0, [r8, #12]
   117d4:	beq	11ab0 <g_slice_alloc0@plt+0x4c4>
   117d8:	mov	r3, r5
   117dc:	movw	r0, #20568	; 0x5058
   117e0:	mov	r1, r5
   117e4:	movt	r0, #1
   117e8:	mov	r2, r5
   117ec:	bl	11304 <g_regex_new@plt>
   117f0:	ldr	r3, [r8, #12]
   117f4:	cmp	r3, #0
   117f8:	str	r0, [r8, #8]
   117fc:	beq	11b00 <g_slice_alloc0@plt+0x514>
   11800:	movw	r0, #8268	; 0x204c
   11804:	movt	r0, #1
   11808:	bl	11358 <g_ptr_array_new_with_free_func@plt>
   1180c:	mvn	r6, #0
   11810:	mvn	r7, #0
   11814:	str	r0, [r8]
   11818:	movw	r0, #8256	; 0x2040
   1181c:	movt	r0, #1
   11820:	bl	11358 <g_ptr_array_new_with_free_func@plt>
   11824:	mov	r1, r5
   11828:	mov	r2, r5
   1182c:	movw	r3, #8244	; 0x2034
   11830:	movt	r3, #1
   11834:	str	r0, [r8, #24]
   11838:	mov	r0, r5
   1183c:	bl	1146c <g_hash_table_new_full@plt>
   11840:	ldr	r3, [sp, #28]
   11844:	str	r0, [r8, #4]
   11848:	ldr	r0, [r3]
   1184c:	bl	12740 <g_slice_alloc0@plt+0x1154>
   11850:	ldr	r0, [r8, #4]
   11854:	bl	11460 <g_hash_table_size@plt>
   11858:	mov	sl, r0
   1185c:	movw	r0, #20736	; 0x5100
   11860:	movt	r0, #1
   11864:	bl	1155c <puts@plt>
   11868:	mov	r0, r4
   1186c:	mov	r2, sl
   11870:	movw	r1, #20760	; 0x5118
   11874:	movt	r1, #1
   11878:	bl	113b8 <__printf_chk@plt>
   1187c:	ldr	r3, [r8, #28]
   11880:	ldr	r2, [r8, #32]
   11884:	mov	r0, r4
   11888:	movw	r1, #20784	; 0x5130
   1188c:	movt	r1, #1
   11890:	rsb	r2, r3, r2
   11894:	bl	113b8 <__printf_chk@plt>
   11898:	mov	r0, r4
   1189c:	ldr	r2, [r8, #28]
   118a0:	movw	r1, #20808	; 0x5148
   118a4:	movt	r1, #1
   118a8:	bl	113b8 <__printf_chk@plt>
   118ac:	ldr	r3, [r8, #16]
   118b0:	ldr	r2, [r8, #20]
   118b4:	mov	r0, r4
   118b8:	movw	r1, #20828	; 0x515c
   118bc:	movt	r1, #1
   118c0:	rsb	r2, r3, r2
   118c4:	bl	113b8 <__printf_chk@plt>
   118c8:	mov	r0, r4
   118cc:	ldr	r2, [r8, #16]
   118d0:	movw	r1, #20848	; 0x5170
   118d4:	movt	r1, #1
   118d8:	bl	113b8 <__printf_chk@plt>
   118dc:	mov	r0, r4
   118e0:	ldrd	r2, [r8, #40]	; 0x28
   118e4:	movw	r1, #20876	; 0x518c
   118e8:	movt	r1, #1
   118ec:	bl	113b8 <__printf_chk@plt>
   118f0:	mov	r0, r4
   118f4:	ldrd	r2, [r8, #56]	; 0x38
   118f8:	movw	r1, #20908	; 0x51ac
   118fc:	movt	r1, #1
   11900:	bl	113b8 <__printf_chk@plt>
   11904:	mov	r0, r4
   11908:	ldrd	r2, [r8, #64]	; 0x40
   1190c:	movw	r1, #20940	; 0x51cc
   11910:	movt	r1, #1
   11914:	bl	113b8 <__printf_chk@plt>
   11918:	mov	r0, r4
   1191c:	movw	r1, #20972	; 0x51ec
   11920:	ldrd	r2, [r8, #72]	; 0x48
   11924:	movt	r1, #1
   11928:	bl	113b8 <__printf_chk@plt>
   1192c:	ldrd	r4, [r8, #48]	; 0x30
   11930:	cmp	r5, r7
   11934:	cmpeq	r4, r6
   11938:	beq	11b34 <g_slice_alloc0@plt+0x548>
   1193c:	movw	r3, #838	; 0x346
   11940:	mov	r0, r4
   11944:	mov	r1, r5
   11948:	mov	r2, #40960	; 0xa000
   1194c:	movt	r2, #12472	; 0x30b8
   11950:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   11954:	mov	r3, #13
   11958:	mov	r1, r5
   1195c:	mov	r2, #22528	; 0x5800
   11960:	movt	r2, #63559	; 0xf847
   11964:	mov	fp, r0
   11968:	mov	r0, r4
   1196c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   11970:	mov	r2, #60	; 0x3c
   11974:	mov	r3, #0
   11978:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1197c:	mov	r3, #0
   11980:	mov	r0, r4
   11984:	mov	r1, r5
   11988:	mov	r7, r2
   1198c:	mov	r2, #51712	; 0xca00
   11990:	movt	r2, #15258	; 0x3b9a
   11994:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   11998:	mov	r2, #60	; 0x3c
   1199c:	mov	r3, #0
   119a0:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   119a4:	mov	r0, r4
   119a8:	mov	r1, r5
   119ac:	mov	r3, #0
   119b0:	mov	r6, r2
   119b4:	mov	r2, #51712	; 0xca00
   119b8:	movt	r2, #15258	; 0x3b9a
   119bc:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   119c0:	mov	r1, r2
   119c4:	mov	r2, fp
   119c8:	str	r1, [sp, #4]
   119cc:	mov	r3, r7
   119d0:	str	r6, [sp]
   119d4:	movw	r1, #21004	; 0x520c
   119d8:	mov	r0, #1
   119dc:	movt	r1, #1
   119e0:	bl	113b8 <__printf_chk@plt>
   119e4:	ldr	r2, [r8, #84]	; 0x54
   119e8:	movw	r3, #24896	; 0x6140
   119ec:	movt	r3, #2
   119f0:	cmp	r2, #0
   119f4:	bne	11cdc <g_slice_alloc0@plt+0x6f0>
   119f8:	movw	r0, #20468	; 0x4ff4
   119fc:	movt	r0, #1
   11a00:	bl	1155c <puts@plt>
   11a04:	cmp	sl, #0
   11a08:	bne	11c94 <g_slice_alloc0@plt+0x6a8>
   11a0c:	ldr	r3, [r8, #32]
   11a10:	movw	r4, #24896	; 0x6140
   11a14:	movt	r4, #2
   11a18:	cmp	r3, #0
   11a1c:	bne	11c28 <g_slice_alloc0@plt+0x63c>
   11a20:	ldr	r3, [r8, #28]
   11a24:	cmp	r3, #0
   11a28:	bne	11b4c <g_slice_alloc0@plt+0x560>
   11a2c:	ldr	r0, [r8, #24]
   11a30:	cmp	r0, #0
   11a34:	beq	11a40 <g_slice_alloc0@plt+0x454>
   11a38:	mov	r1, #1
   11a3c:	bl	11454 <g_ptr_array_free@plt>
   11a40:	ldr	r0, [r8]
   11a44:	cmp	r0, #0
   11a48:	beq	11a54 <g_slice_alloc0@plt+0x468>
   11a4c:	mov	r1, #1
   11a50:	bl	11454 <g_ptr_array_free@plt>
   11a54:	ldr	r0, [r8, #4]
   11a58:	cmp	r0, #0
   11a5c:	beq	11a64 <g_slice_alloc0@plt+0x478>
   11a60:	bl	11334 <g_hash_table_destroy@plt>
   11a64:	ldr	r0, [r8, #12]
   11a68:	cmp	r0, #0
   11a6c:	beq	11a74 <g_slice_alloc0@plt+0x488>
   11a70:	bl	112f8 <g_regex_unref@plt>
   11a74:	ldr	r0, [r8, #8]
   11a78:	cmp	r0, #0
   11a7c:	beq	11a84 <g_slice_alloc0@plt+0x498>
   11a80:	bl	112f8 <g_regex_unref@plt>
   11a84:	ldr	r0, [sp, #28]
   11a88:	bl	11580 <g_strfreev@plt>
   11a8c:	mov	r0, #0
   11a90:	b	1179c <g_slice_alloc0@plt+0x1b0>
   11a94:	bl	11508 <g_get_prgname@plt>
   11a98:	mov	r1, r0
   11a9c:	movw	r0, #20380	; 0x4f9c
   11aa0:	movt	r0, #1
   11aa4:	bl	11364 <g_print@plt>
   11aa8:	mov	r0, #1
   11aac:	b	1179c <g_slice_alloc0@plt+0x1b0>
   11ab0:	movw	r3, #24884	; 0x6134
   11ab4:	movt	r3, #2
   11ab8:	ldr	r3, [r3]
   11abc:	cmp	r3, #1
   11ac0:	bls	11a2c <g_slice_alloc0@plt+0x440>
   11ac4:	movw	r2, #24864	; 0x6120
   11ac8:	movt	r2, #2
   11acc:	movw	r3, #21092	; 0x5264
   11ad0:	movt	r3, #1
   11ad4:	str	r0, [sp, #4]
   11ad8:	ldr	r0, [r2]
   11adc:	movw	r2, #643	; 0x283
   11ae0:	str	r3, [sp, #8]
   11ae4:	mov	r1, #2
   11ae8:	str	r2, [sp]
   11aec:	movw	r2, #20004	; 0x4e24
   11af0:	ldr	r3, [pc, #672]	; 11d98 <g_slice_alloc0@plt+0x7ac>
   11af4:	movt	r2, #1
   11af8:	bl	11478 <gst_debug_log@plt>
   11afc:	b	11a2c <g_slice_alloc0@plt+0x440>
   11b00:	movw	r2, #24884	; 0x6134
   11b04:	movt	r2, #2
   11b08:	ldr	r2, [r2]
   11b0c:	cmp	r2, #1
   11b10:	bls	11a2c <g_slice_alloc0@plt+0x440>
   11b14:	movw	r2, #24864	; 0x6120
   11b18:	movt	r2, #2
   11b1c:	str	r3, [sp, #4]
   11b20:	movw	r3, #21128	; 0x5288
   11b24:	ldr	r0, [r2]
   11b28:	movt	r3, #1
   11b2c:	movw	r2, #663	; 0x297
   11b30:	b	11ae0 <g_slice_alloc0@plt+0x4f4>
   11b34:	mov	r6, #99	; 0x63
   11b38:	movw	r1, #51711	; 0xc9ff
   11b3c:	mov	r7, r6
   11b40:	movt	r1, #15258	; 0x3b9a
   11b44:	mov	fp, r6
   11b48:	b	119c4 <g_slice_alloc0@plt+0x3d8>
   11b4c:	mov	r4, #0
   11b50:	str	r4, [sp, #36]	; 0x24
   11b54:	mov	r1, r4
   11b58:	mov	r2, r4
   11b5c:	mov	r3, r4
   11b60:	mov	r0, r4
   11b64:	bl	1146c <g_hash_table_new_full@plt>
   11b68:	movw	r6, #24896	; 0x6140
   11b6c:	movt	r6, #2
   11b70:	mov	r5, r0
   11b74:	movw	r0, #21076	; 0x5254
   11b78:	movt	r0, #1
   11b7c:	bl	1155c <puts@plt>
   11b80:	b	11b88 <g_slice_alloc0@plt+0x59c>
   11b84:	add	r4, r4, #1
   11b88:	ldr	r3, [r8, #32]
   11b8c:	cmp	r4, r3
   11b90:	bcs	11bd0 <g_slice_alloc0@plt+0x5e4>
   11b94:	ldr	r3, [r6]
   11b98:	ldr	r3, [r3]
   11b9c:	ldr	r2, [r3, r4, lsl #2]
   11ba0:	ldr	r3, [r2, #12]
   11ba4:	cmp	r3, #0
   11ba8:	beq	11b84 <g_slice_alloc0@plt+0x598>
   11bac:	mov	r0, r5
   11bb0:	mov	r1, r4
   11bb4:	bl	113d0 <g_hash_table_insert@plt>
   11bb8:	b	11b84 <g_slice_alloc0@plt+0x598>
   11bbc:	movw	r1, #8320	; 0x2080
   11bc0:	mov	r0, r5
   11bc4:	movt	r1, #1
   11bc8:	mov	r2, r5
   11bcc:	bl	115a4 <g_hash_table_foreach_remove@plt>
   11bd0:	mov	r0, r5
   11bd4:	bl	11460 <g_hash_table_size@plt>
   11bd8:	subs	r4, r0, #0
   11bdc:	bne	11bbc <g_slice_alloc0@plt+0x5d0>
   11be0:	mov	r0, r5
   11be4:	bl	11334 <g_hash_table_destroy@plt>
   11be8:	ldr	r0, [r8]
   11bec:	add	r2, sp, #36	; 0x24
   11bf0:	movw	r1, #8720	; 0x2210
   11bf4:	movt	r1, #1
   11bf8:	bl	113f4 <g_ptr_array_foreach@plt>
   11bfc:	mov	r2, r4
   11c00:	ldr	r0, [sp, #36]	; 0x24
   11c04:	movw	r1, #8816	; 0x2270
   11c08:	movt	r1, #1
   11c0c:	bl	114fc <g_slist_foreach@plt>
   11c10:	movw	r0, #20468	; 0x4ff4
   11c14:	movt	r0, #1
   11c18:	bl	1155c <puts@plt>
   11c1c:	ldr	r0, [sp, #36]	; 0x24
   11c20:	bl	1131c <g_slist_free@plt>
   11c24:	b	11a2c <g_slice_alloc0@plt+0x440>
   11c28:	add	r6, sp, #128	; 0x80
   11c2c:	movw	r0, #21056	; 0x5240
   11c30:	movt	r0, #1
   11c34:	mov	r5, #0
   11c38:	str	r5, [r6, #-92]!	; 0xffffffa4
   11c3c:	bl	1155c <puts@plt>
   11c40:	mov	r2, r6
   11c44:	ldr	r0, [r4]
   11c48:	movw	r1, #8768	; 0x2240
   11c4c:	movt	r1, #1
   11c50:	bl	113f4 <g_ptr_array_foreach@plt>
   11c54:	mov	r2, r5
   11c58:	ldr	r0, [sp, #36]	; 0x24
   11c5c:	movw	r1, #7924	; 0x1ef4
   11c60:	movt	r1, #1
   11c64:	bl	114fc <g_slist_foreach@plt>
   11c68:	mov	r2, r5
   11c6c:	ldr	r0, [sp, #36]	; 0x24
   11c70:	movw	r1, #8816	; 0x2270
   11c74:	movt	r1, #1
   11c78:	bl	114fc <g_slist_foreach@plt>
   11c7c:	movw	r0, #20468	; 0x4ff4
   11c80:	movt	r0, #1
   11c84:	bl	1155c <puts@plt>
   11c88:	ldr	r0, [sp, #36]	; 0x24
   11c8c:	bl	1131c <g_slist_free@plt>
   11c90:	b	11a20 <g_slice_alloc0@plt+0x434>
   11c94:	add	r2, sp, #128	; 0x80
   11c98:	mov	r3, #0
   11c9c:	ldr	r0, [r8, #24]
   11ca0:	movw	r1, #8280	; 0x2058
   11ca4:	str	r3, [r2, #-92]!	; 0xffffffa4
   11ca8:	movt	r1, #1
   11cac:	bl	113f4 <g_ptr_array_foreach@plt>
   11cb0:	ldr	r0, [r8, #4]
   11cb4:	ldr	r2, [sp, #36]	; 0x24
   11cb8:	movw	r1, #8384	; 0x20c0
   11cbc:	movt	r1, #1
   11cc0:	bl	11484 <g_hash_table_foreach@plt>
   11cc4:	movw	r0, #20468	; 0x4ff4
   11cc8:	movt	r0, #1
   11ccc:	bl	1155c <puts@plt>
   11cd0:	ldr	r0, [sp, #36]	; 0x24
   11cd4:	bl	1131c <g_slist_free@plt>
   11cd8:	b	11a0c <g_slice_alloc0@plt+0x420>
   11cdc:	vldr	s12, [r3, #80]	; 0x50
   11ce0:	vcvt.f32.u32	s12, s12
   11ce4:	movw	r1, #21032	; 0x5228
   11ce8:	mov	r0, #1
   11cec:	movt	r1, #1
   11cf0:	vmov.f64	d7, #36	; 0x41200000  10.0
   11cf4:	vcvt.f64.f32	d6, s12
   11cf8:	vdiv.f64	d5, d6, d7
   11cfc:	vmov	r2, r3, d5
   11d00:	bl	113b8 <__printf_chk@plt>
   11d04:	b	119f8 <g_slice_alloc0@plt+0x40c>
   11d08:	bl	1152c <__stack_chk_fail@plt>
   11d0c:	ldr	r2, [sp, #32]
   11d10:	movw	r3, #20188	; 0x4edc
   11d14:	movt	r3, #1
   11d18:	movw	r0, #20308	; 0x4f54
   11d1c:	movt	r0, #1
   11d20:	ldr	r1, [r2, #8]
   11d24:	cmp	r1, r4
   11d28:	moveq	r1, r3
   11d2c:	bl	11364 <g_print@plt>
   11d30:	mov	r0, #1
   11d34:	bl	115e0 <exit@plt>
   11d38:	bl	11424 <gst_version_string@plt>
   11d3c:	mov	r5, r0
   11d40:	bl	11508 <g_get_prgname@plt>
   11d44:	mov	r2, #1
   11d48:	mov	r3, #4
   11d4c:	str	r3, [sp]
   11d50:	mov	r3, #10
   11d54:	mov	r1, r0
   11d58:	movw	r0, #20332	; 0x4f6c
   11d5c:	movt	r0, #1
   11d60:	bl	11364 <g_print@plt>
   11d64:	mov	r1, r5
   11d68:	movw	r0, #20328	; 0x4f68
   11d6c:	movt	r0, #1
   11d70:	bl	11364 <g_print@plt>
   11d74:	movw	r0, #20328	; 0x4f68
   11d78:	movw	r1, #20356	; 0x4f84
   11d7c:	movt	r0, #1
   11d80:	movt	r1, #1
   11d84:	bl	11364 <g_print@plt>
   11d88:	mov	r0, r5
   11d8c:	bl	112e0 <g_free@plt>
   11d90:	mov	r0, r4
   11d94:	bl	115e0 <exit@plt>
   11d98:	andeq	r4, r1, r0, asr #21
   11d9c:	mov	fp, #0
   11da0:	mov	lr, #0
   11da4:	pop	{r1}		; (ldr r1, [sp], #4)
   11da8:	mov	r2, sp
   11dac:	push	{r2}		; (str r2, [sp, #-4]!)
   11db0:	push	{r0}		; (str r0, [sp, #-4]!)
   11db4:	ldr	ip, [pc, #16]	; 11dcc <g_slice_alloc0@plt+0x7e0>
   11db8:	push	{ip}		; (str ip, [sp, #-4]!)
   11dbc:	ldr	r0, [pc, #12]	; 11dd0 <g_slice_alloc0@plt+0x7e4>
   11dc0:	ldr	r3, [pc, #12]	; 11dd4 <g_slice_alloc0@plt+0x7e8>
   11dc4:	bl	11340 <__libc_start_main@plt>
   11dc8:	bl	11310 <abort@plt>
   11dcc:	andeq	r4, r1, r8, asr sl
   11dd0:	andeq	r1, r1, r8, lsr r6
   11dd4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11dd8:	ldr	r3, [pc, #20]	; 11df4 <g_slice_alloc0@plt+0x808>
   11ddc:	ldr	r2, [pc, #20]	; 11df8 <g_slice_alloc0@plt+0x80c>
   11de0:	add	r3, pc, r3
   11de4:	ldr	r2, [r3, r2]
   11de8:	cmp	r2, #0
   11dec:	bxeq	lr
   11df0:	b	11388 <__gmon_start__@plt>
   11df4:	andeq	r4, r1, r8, lsl r2
   11df8:	andeq	r0, r0, r4, lsl r1
   11dfc:	push	{r3, lr}
   11e00:	movw	r0, #24860	; 0x611c
   11e04:	ldr	r3, [pc, #36]	; 11e30 <g_slice_alloc0@plt+0x844>
   11e08:	movt	r0, #2
   11e0c:	rsb	r3, r0, r3
   11e10:	cmp	r3, #6
   11e14:	popls	{r3, pc}
   11e18:	movw	r3, #0
   11e1c:	movt	r3, #0
   11e20:	cmp	r3, #0
   11e24:	popeq	{r3, pc}
   11e28:	blx	r3
   11e2c:	pop	{r3, pc}
   11e30:	andeq	r6, r2, pc, lsl r1
   11e34:	push	{r3, lr}
   11e38:	movw	r0, #24860	; 0x611c
   11e3c:	movw	r3, #24860	; 0x611c
   11e40:	movt	r0, #2
   11e44:	movt	r3, #2
   11e48:	rsb	r3, r0, r3
   11e4c:	asr	r3, r3, #2
   11e50:	add	r3, r3, r3, lsr #31
   11e54:	asrs	r1, r3, #1
   11e58:	popeq	{r3, pc}
   11e5c:	movw	r2, #0
   11e60:	movt	r2, #0
   11e64:	cmp	r2, #0
   11e68:	popeq	{r3, pc}
   11e6c:	blx	r2
   11e70:	pop	{r3, pc}
   11e74:	push	{r4, lr}
   11e78:	movw	r4, #24888	; 0x6138
   11e7c:	movt	r4, #2
   11e80:	ldrb	r3, [r4]
   11e84:	cmp	r3, #0
   11e88:	popne	{r4, pc}
   11e8c:	bl	11dfc <g_slice_alloc0@plt+0x810>
   11e90:	mov	r3, #1
   11e94:	strb	r3, [r4]
   11e98:	pop	{r4, pc}
   11e9c:	movw	r0, #24268	; 0x5ecc
   11ea0:	movt	r0, #2
   11ea4:	push	{r3, lr}
   11ea8:	ldr	r3, [r0]
   11eac:	cmp	r3, #0
   11eb0:	beq	11ec8 <g_slice_alloc0@plt+0x8dc>
   11eb4:	movw	r3, #0
   11eb8:	movt	r3, #0
   11ebc:	cmp	r3, #0
   11ec0:	beq	11ec8 <g_slice_alloc0@plt+0x8dc>
   11ec4:	blx	r3
   11ec8:	pop	{r3, lr}
   11ecc:	b	11e34 <g_slice_alloc0@plt+0x848>
   11ed0:	ldr	r3, [r0, #104]	; 0x68
   11ed4:	cmp	r3, r1
   11ed8:	beq	11ee4 <g_slice_alloc0@plt+0x8f8>
   11edc:	mov	r0, #1
   11ee0:	bx	lr
   11ee4:	ldr	r0, [r0, #20]
   11ee8:	rsbs	r0, r0, #1
   11eec:	movcc	r0, #0
   11ef0:	bx	lr
   11ef4:	ldr	r3, [r0, #72]	; 0x48
   11ef8:	push	{r4, r5, r6, r7, r8, r9}
   11efc:	cmn	r3, #1
   11f00:	beq	11fcc <g_slice_alloc0@plt+0x9e0>
   11f04:	movw	r2, #24896	; 0x6140
   11f08:	movt	r2, #2
   11f0c:	ldr	r7, [r0, #44]	; 0x2c
   11f10:	mvn	r4, #0
   11f14:	ldr	r2, [r2]
   11f18:	mvn	r5, #0
   11f1c:	ldr	r1, [r2, #4]
   11f20:	cmp	r3, r1
   11f24:	ldr	r1, [r0, #40]	; 0x28
   11f28:	ldrcc	r2, [r2]
   11f2c:	movcs	ip, #0
   11f30:	ldrcc	ip, [r2, r3, lsl #2]
   11f34:	ldr	r8, [ip, #40]	; 0x28
   11f38:	ldrd	r2, [ip, #56]	; 0x38
   11f3c:	ldr	r9, [ip, #44]	; 0x2c
   11f40:	add	r8, r8, r1
   11f44:	ldr	r6, [ip, #48]	; 0x30
   11f48:	cmp	r3, r5
   11f4c:	cmpeq	r2, r4
   11f50:	ldr	r1, [r0, #48]	; 0x30
   11f54:	add	r7, r9, r7
   11f58:	str	r8, [ip, #40]	; 0x28
   11f5c:	add	r1, r6, r1
   11f60:	str	r7, [ip, #44]	; 0x2c
   11f64:	str	r1, [ip, #48]	; 0x30
   11f68:	beq	11fd4 <g_slice_alloc0@plt+0x9e8>
   11f6c:	ldrd	r6, [r0, #56]	; 0x38
   11f70:	cmp	r7, r5
   11f74:	cmpeq	r6, r4
   11f78:	beq	11f90 <g_slice_alloc0@plt+0x9a4>
   11f7c:	cmp	r7, r3
   11f80:	cmpeq	r6, r2
   11f84:	movhi	r6, r2
   11f88:	movhi	r7, r3
   11f8c:	strd	r6, [ip, #56]	; 0x38
   11f90:	ldrd	r2, [ip, #64]	; 0x40
   11f94:	mvn	r4, #0
   11f98:	mvn	r5, #0
   11f9c:	cmp	r3, r5
   11fa0:	cmpeq	r2, r4
   11fa4:	beq	11fe0 <g_slice_alloc0@plt+0x9f4>
   11fa8:	ldrd	r0, [r0, #64]	; 0x40
   11fac:	cmp	r1, r5
   11fb0:	cmpeq	r0, r4
   11fb4:	beq	11fcc <g_slice_alloc0@plt+0x9e0>
   11fb8:	cmp	r1, r3
   11fbc:	cmpeq	r0, r2
   11fc0:	movcc	r0, r2
   11fc4:	movcc	r1, r3
   11fc8:	strd	r0, [ip, #64]	; 0x40
   11fcc:	pop	{r4, r5, r6, r7, r8, r9}
   11fd0:	bx	lr
   11fd4:	ldrd	r2, [r0, #56]	; 0x38
   11fd8:	strd	r2, [ip, #56]	; 0x38
   11fdc:	b	11f90 <g_slice_alloc0@plt+0x9a4>
   11fe0:	ldrd	r2, [r0, #64]	; 0x40
   11fe4:	pop	{r4, r5, r6, r7, r8, r9}
   11fe8:	strd	r2, [ip, #64]	; 0x40
   11fec:	bx	lr
   11ff0:	ldr	r2, [r0, #80]	; 0x50
   11ff4:	ldr	r3, [r1, #80]	; 0x50
   11ff8:	subs	r3, r2, r3
   11ffc:	ldreq	r2, [r0, #16]
   12000:	ldreq	r3, [r1, #16]
   12004:	rsbeq	r3, r3, r2
   12008:	mov	r0, r3
   1200c:	bx	lr
   12010:	ldr	r3, [r0, #56]	; 0x38
   12014:	ldr	r0, [r1, #56]	; 0x38
   12018:	rsb	r0, r0, r3
   1201c:	bx	lr
   12020:	ldr	r0, [r1, #72]	; 0x48
   12024:	subs	r3, r2, r0
   12028:	rsbs	r0, r3, #0
   1202c:	adcs	r0, r0, r3
   12030:	bx	lr
   12034:	mov	r1, r0
   12038:	mov	r0, #16
   1203c:	b	115bc <g_slice_free1@plt>
   12040:	mov	r1, r0
   12044:	mov	r0, #112	; 0x70
   12048:	b	115bc <g_slice_free1@plt>
   1204c:	mov	r1, r0
   12050:	mov	r0, #80	; 0x50
   12054:	b	115bc <g_slice_free1@plt>
   12058:	mov	r3, r0
   1205c:	movw	r2, #8176	; 0x1ff0
   12060:	push	{r4, lr}
   12064:	movt	r2, #1
   12068:	mov	r4, r1
   1206c:	ldr	r0, [r1]
   12070:	mov	r1, r3
   12074:	bl	1149c <g_slist_insert_sorted@plt>
   12078:	str	r0, [r4]
   1207c:	pop	{r4, pc}
   12080:	mov	r3, r0
   12084:	mov	r0, r2
   12088:	push	{r4, lr}
   1208c:	mov	r2, r3
   12090:	mov	r4, r1
   12094:	movw	r1, #8224	; 0x2020
   12098:	movt	r1, #1
   1209c:	bl	113dc <g_hash_table_find@plt>
   120a0:	subs	r1, r0, #0
   120a4:	beq	120b0 <g_slice_alloc0@plt+0xac4>
   120a8:	mov	r0, #0
   120ac:	pop	{r4, pc}
   120b0:	mov	r0, r4
   120b4:	bl	11ef4 <g_slice_alloc0@plt+0x908>
   120b8:	mov	r0, #1
   120bc:	pop	{r4, pc}
   120c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120c4:	mov	r8, r0
   120c8:	sub	sp, sp, #8
   120cc:	mov	r0, r2
   120d0:	mov	r9, r1
   120d4:	movw	r2, #7888	; 0x1ed0
   120d8:	mov	r1, r8
   120dc:	movt	r2, #1
   120e0:	bl	11598 <g_slist_find_custom@plt>
   120e4:	subs	sl, r0, #0
   120e8:	beq	12208 <g_slice_alloc0@plt+0xc1c>
   120ec:	movw	r1, #19144	; 0x4ac8
   120f0:	mov	r0, #1
   120f4:	movt	r1, #1
   120f8:	mov	r2, r8
   120fc:	bl	113b8 <__printf_chk@plt>
   12100:	ldrd	r4, [r9]
   12104:	mvn	r6, #0
   12108:	mvn	r7, #0
   1210c:	cmp	r5, r7
   12110:	cmpeq	r4, r6
   12114:	beq	121e0 <g_slice_alloc0@plt+0xbf4>
   12118:	movw	r3, #838	; 0x346
   1211c:	mov	r0, r4
   12120:	mov	r1, r5
   12124:	mov	r2, #40960	; 0xa000
   12128:	movt	r2, #12472	; 0x30b8
   1212c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12130:	mov	r3, #13
   12134:	mov	r1, r5
   12138:	mov	r2, #22528	; 0x5800
   1213c:	movt	r2, #63559	; 0xf847
   12140:	mov	r6, r0
   12144:	mov	r0, r4
   12148:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1214c:	mov	r2, #60	; 0x3c
   12150:	mov	r3, #0
   12154:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12158:	mov	r3, #0
   1215c:	mov	r0, r4
   12160:	mov	r1, r5
   12164:	mov	r7, r2
   12168:	mov	r2, #51712	; 0xca00
   1216c:	movt	r2, #15258	; 0x3b9a
   12170:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12174:	mov	r2, #60	; 0x3c
   12178:	mov	r3, #0
   1217c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12180:	mov	r0, r4
   12184:	mov	r1, r5
   12188:	mov	r3, #0
   1218c:	str	r2, [sp]
   12190:	mov	r2, #51712	; 0xca00
   12194:	movt	r2, #15258	; 0x3b9a
   12198:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1219c:	mov	r3, r7
   121a0:	movw	r1, #19168	; 0x4ae0
   121a4:	mov	r0, #1
   121a8:	movt	r1, #1
   121ac:	str	r2, [sp, #4]
   121b0:	mov	r2, r6
   121b4:	bl	113b8 <__printf_chk@plt>
   121b8:	vldr	s12, [r9, #8]
   121bc:	vcvt.f32.u32	s12, s12
   121c0:	movw	r1, #19196	; 0x4afc
   121c4:	mov	r0, #1
   121c8:	movt	r1, #1
   121cc:	vmov.f64	d7, #36	; 0x41200000  10.0
   121d0:	vcvt.f64.f32	d6, s12
   121d4:	vdiv.f64	d5, d6, d7
   121d8:	vmov	r2, r3, d5
   121dc:	bl	113b8 <__printf_chk@plt>
   121e0:	movw	r0, #19224	; 0x4b18
   121e4:	movt	r0, #1
   121e8:	bl	1155c <puts@plt>
   121ec:	mov	r0, sl
   121f0:	mov	r2, r8
   121f4:	movw	r1, #9396	; 0x24b4
   121f8:	movt	r1, #1
   121fc:	add	sp, sp, #8
   12200:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12204:	b	114fc <g_slist_foreach@plt>
   12208:	add	sp, sp, #8
   1220c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12210:	ldr	r3, [r0, #12]
   12214:	push	{r4, lr}
   12218:	cmp	r3, #0
   1221c:	mov	r4, r1
   12220:	popeq	{r4, pc}
   12224:	mov	r1, r0
   12228:	movw	r2, #8208	; 0x2010
   1222c:	ldr	r0, [r4]
   12230:	movt	r2, #1
   12234:	bl	1149c <g_slist_insert_sorted@plt>
   12238:	str	r0, [r4]
   1223c:	pop	{r4, pc}
   12240:	ldr	r3, [r0, #12]
   12244:	push	{r4, lr}
   12248:	cmp	r3, #0
   1224c:	mov	r4, r1
   12250:	popne	{r4, pc}
   12254:	mov	r1, r0
   12258:	movw	r2, #8208	; 0x2010
   1225c:	ldr	r0, [r4]
   12260:	movt	r2, #1
   12264:	bl	1149c <g_slist_insert_sorted@plt>
   12268:	str	r0, [r4]
   1226c:	pop	{r4, pc}
   12270:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12274:	movw	r7, #24872	; 0x6128
   12278:	movt	r7, #2
   1227c:	ldrd	r2, [r0, #56]	; 0x38
   12280:	sub	sp, sp, #80	; 0x50
   12284:	mvn	r4, #0
   12288:	ldr	r1, [r7]
   1228c:	mvn	r5, #0
   12290:	cmp	r3, r5
   12294:	cmpeq	r2, r4
   12298:	mov	r6, r0
   1229c:	str	r1, [sp, #76]	; 0x4c
   122a0:	beq	12448 <g_slice_alloc0@plt+0xe5c>
   122a4:	ldr	ip, [r0]
   122a8:	mov	r1, #45	; 0x2d
   122ac:	ldr	r3, [r0, #4]
   122b0:	movw	r2, #19244	; 0x4b2c
   122b4:	add	r0, sp, #28
   122b8:	movt	r2, #1
   122bc:	str	ip, [sp]
   122c0:	bl	114b4 <g_snprintf@plt>
   122c4:	add	r2, sp, #28
   122c8:	movw	r1, #19252	; 0x4b34
   122cc:	mov	r0, #1
   122d0:	movt	r1, #1
   122d4:	bl	113b8 <__printf_chk@plt>
   122d8:	ldr	r2, [r6, #16]
   122dc:	cmp	r2, #0
   122e0:	movwne	r1, #19264	; 0x4b40
   122e4:	movweq	r1, #19284	; 0x4b54
   122e8:	movweq	r2, #19304	; 0x4b68
   122ec:	movne	r0, #1
   122f0:	movteq	r2, #1
   122f4:	moveq	r0, #1
   122f8:	movtne	r1, #1
   122fc:	movteq	r1, #1
   12300:	bl	113b8 <__printf_chk@plt>
   12304:	ldr	r2, [r6, #20]
   12308:	cmp	r2, #0
   1230c:	movweq	r2, #19304	; 0x4b68
   12310:	movwne	r1, #19308	; 0x4b6c
   12314:	movweq	r1, #19316	; 0x4b74
   12318:	movteq	r2, #1
   1231c:	movne	r0, #1
   12320:	moveq	r0, #1
   12324:	movtne	r1, #1
   12328:	movteq	r1, #1
   1232c:	bl	113b8 <__printf_chk@plt>
   12330:	ldrd	r2, [r6, #24]
   12334:	orrs	r1, r2, r3
   12338:	bne	12460 <g_slice_alloc0@plt+0xe74>
   1233c:	movw	r1, #19348	; 0x4b94
   12340:	movw	r2, #19304	; 0x4b68
   12344:	movt	r1, #1
   12348:	movt	r2, #1
   1234c:	mov	r0, #1
   12350:	bl	113b8 <__printf_chk@plt>
   12354:	ldrd	r2, [r6, #32]
   12358:	orrs	r1, r2, r3
   1235c:	beq	1247c <g_slice_alloc0@plt+0xe90>
   12360:	movw	r1, #19368	; 0x4ba8
   12364:	mov	r0, #1
   12368:	movt	r1, #1
   1236c:	bl	113b8 <__printf_chk@plt>
   12370:	ldrd	r4, [r6, #56]	; 0x38
   12374:	mvn	r2, #0
   12378:	mvn	r3, #0
   1237c:	cmp	r5, r3
   12380:	cmpeq	r4, r2
   12384:	beq	12498 <g_slice_alloc0@plt+0xeac>
   12388:	movw	r3, #838	; 0x346
   1238c:	mov	r0, r4
   12390:	mov	r1, r5
   12394:	mov	r2, #40960	; 0xa000
   12398:	movt	r2, #12472	; 0x30b8
   1239c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   123a0:	mov	r3, #13
   123a4:	mov	r1, r5
   123a8:	mov	r2, #22528	; 0x5800
   123ac:	movt	r2, #63559	; 0xf847
   123b0:	mov	sl, r0
   123b4:	mov	r0, r4
   123b8:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   123bc:	mov	r2, #60	; 0x3c
   123c0:	mov	r3, #0
   123c4:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   123c8:	mov	r3, #0
   123cc:	mov	r0, r4
   123d0:	mov	r1, r5
   123d4:	mov	r9, r2
   123d8:	mov	r2, #51712	; 0xca00
   123dc:	movt	r2, #15258	; 0x3b9a
   123e0:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   123e4:	mov	r2, #60	; 0x3c
   123e8:	mov	r3, #0
   123ec:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   123f0:	mov	r0, r4
   123f4:	mov	r1, r5
   123f8:	mov	r3, #0
   123fc:	mov	r8, r2
   12400:	mov	r2, #51712	; 0xca00
   12404:	movt	r2, #15258	; 0x3b9a
   12408:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1240c:	mov	r1, r2
   12410:	str	r1, [sp, #4]
   12414:	mov	r2, sl
   12418:	str	r8, [sp]
   1241c:	movw	r1, #19384	; 0x4bb8
   12420:	ldr	ip, [r6, #40]	; 0x28
   12424:	mov	r3, r9
   12428:	mov	r0, #1
   1242c:	movt	r1, #1
   12430:	str	ip, [sp, #8]
   12434:	ldr	ip, [r6, #44]	; 0x2c
   12438:	str	ip, [sp, #12]
   1243c:	ldr	ip, [r6, #48]	; 0x30
   12440:	str	ip, [sp, #16]
   12444:	bl	113b8 <__printf_chk@plt>
   12448:	ldr	r2, [sp, #76]	; 0x4c
   1244c:	ldr	r3, [r7]
   12450:	cmp	r2, r3
   12454:	bne	124b0 <g_slice_alloc0@plt+0xec4>
   12458:	add	sp, sp, #80	; 0x50
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12460:	movw	r1, #19324	; 0x4b7c
   12464:	mov	r0, #1
   12468:	movt	r1, #1
   1246c:	bl	113b8 <__printf_chk@plt>
   12470:	ldrd	r2, [r6, #32]
   12474:	orrs	r1, r2, r3
   12478:	bne	12360 <g_slice_alloc0@plt+0xd74>
   1247c:	movw	r1, #19376	; 0x4bb0
   12480:	movw	r2, #19304	; 0x4b68
   12484:	movt	r1, #1
   12488:	movt	r2, #1
   1248c:	mov	r0, #1
   12490:	bl	113b8 <__printf_chk@plt>
   12494:	b	12370 <g_slice_alloc0@plt+0xd84>
   12498:	mov	r8, #99	; 0x63
   1249c:	movw	r1, #51711	; 0xc9ff
   124a0:	mov	r9, r8
   124a4:	movt	r1, #15258	; 0x3b9a
   124a8:	mov	sl, r8
   124ac:	b	12410 <g_slice_alloc0@plt+0xe24>
   124b0:	bl	1152c <__stack_chk_fail@plt>
   124b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124b8:	vpush	{d8}
   124bc:	movw	r6, #24872	; 0x6128
   124c0:	movt	r6, #2
   124c4:	ldr	r2, [r0, #104]	; 0x68
   124c8:	sub	sp, sp, #88	; 0x58
   124cc:	mov	r7, r0
   124d0:	ldr	r3, [r6]
   124d4:	cmp	r2, r1
   124d8:	str	r3, [sp, #84]	; 0x54
   124dc:	beq	124fc <g_slice_alloc0@plt+0xf10>
   124e0:	ldr	r2, [sp, #84]	; 0x54
   124e4:	ldr	r3, [r6]
   124e8:	cmp	r2, r3
   124ec:	bne	12730 <g_slice_alloc0@plt+0x1144>
   124f0:	add	sp, sp, #88	; 0x58
   124f4:	vpop	{d8}
   124f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124fc:	ldr	r3, [r0, #20]
   12500:	cmp	r3, #0
   12504:	beq	124e0 <g_slice_alloc0@plt+0xef4>
   12508:	ldrd	r4, [r0, #88]	; 0x58
   1250c:	ldrd	r2, [r0, #80]	; 0x50
   12510:	ldr	r1, [r0, #108]	; 0x6c
   12514:	subs	r4, r4, r2
   12518:	sbc	r5, r5, r3
   1251c:	cmn	r1, #1
   12520:	beq	1253c <g_slice_alloc0@plt+0xf50>
   12524:	movw	r3, #24896	; 0x6140
   12528:	movt	r3, #2
   1252c:	ldr	r3, [r3]
   12530:	ldr	r2, [r3, #4]
   12534:	cmp	r1, r2
   12538:	bcc	126f4 <g_slice_alloc0@plt+0x1108>
   1253c:	mov	r3, #0
   12540:	ldr	ip, [r7]
   12544:	mov	r1, #30
   12548:	ldr	r3, [r3]
   1254c:	movw	r2, #19452	; 0x4bfc
   12550:	add	r0, sp, #52	; 0x34
   12554:	movt	r2, #1
   12558:	str	ip, [sp]
   1255c:	bl	114b4 <g_snprintf@plt>
   12560:	ldr	ip, [r7, #20]
   12564:	ldr	r2, [r7, #16]
   12568:	mov	r0, #1
   1256c:	add	r3, sp, #52	; 0x34
   12570:	movw	r1, #19460	; 0x4c04
   12574:	str	ip, [sp]
   12578:	cmp	r2, r0
   1257c:	ldr	ip, [r7, #24]
   12580:	movt	r1, #1
   12584:	movne	r2, #60	; 0x3c
   12588:	moveq	r2, #62	; 0x3e
   1258c:	str	ip, [sp, #4]
   12590:	ldr	ip, [r7, #28]
   12594:	str	ip, [sp, #8]
   12598:	ldr	ip, [r7, #32]
   1259c:	str	ip, [sp, #12]
   125a0:	ldr	ip, [r7, #36]	; 0x24
   125a4:	str	ip, [sp, #16]
   125a8:	ldr	ip, [r7, #40]	; 0x28
   125ac:	str	ip, [sp, #20]
   125b0:	ldr	ip, [r7, #44]	; 0x2c
   125b4:	str	ip, [sp, #24]
   125b8:	ldr	ip, [r7, #48]	; 0x30
   125bc:	str	ip, [sp, #28]
   125c0:	ldr	ip, [r7, #52]	; 0x34
   125c4:	str	ip, [sp, #32]
   125c8:	ldr	ip, [r7, #56]	; 0x38
   125cc:	str	ip, [sp, #36]	; 0x24
   125d0:	ldr	ip, [r7, #60]	; 0x3c
   125d4:	str	ip, [sp, #40]	; 0x28
   125d8:	bl	113b8 <__printf_chk@plt>
   125dc:	ldr	r2, [r7, #64]	; 0x40
   125e0:	ldr	r1, [r7, #68]	; 0x44
   125e4:	cmp	r2, r1
   125e8:	beq	12718 <g_slice_alloc0@plt+0x112c>
   125ec:	ldr	r3, [r7, #72]	; 0x48
   125f0:	mov	r0, #1
   125f4:	str	r1, [sp]
   125f8:	movw	r1, #19620	; 0x4ca4
   125fc:	movt	r1, #1
   12600:	bl	113b8 <__printf_chk@plt>
   12604:	mvn	r2, #0
   12608:	mvn	r3, #0
   1260c:	cmp	r5, r3
   12610:	cmpeq	r4, r2
   12614:	beq	12700 <g_slice_alloc0@plt+0x1114>
   12618:	movw	r3, #838	; 0x346
   1261c:	mov	r0, r4
   12620:	mov	r1, r5
   12624:	mov	r2, #40960	; 0xa000
   12628:	movt	r2, #12472	; 0x30b8
   1262c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12630:	mov	r3, #13
   12634:	mov	r1, r5
   12638:	mov	r2, #22528	; 0x5800
   1263c:	movt	r2, #63559	; 0xf847
   12640:	mov	sl, r0
   12644:	mov	r0, r4
   12648:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1264c:	mov	r2, #60	; 0x3c
   12650:	mov	r3, #0
   12654:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12658:	mov	r3, #0
   1265c:	mov	r0, r4
   12660:	mov	r1, r5
   12664:	mov	r9, r2
   12668:	mov	r2, #51712	; 0xca00
   1266c:	movt	r2, #15258	; 0x3b9a
   12670:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12674:	mov	r2, #60	; 0x3c
   12678:	mov	r3, #0
   1267c:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   12680:	mov	r0, r4
   12684:	mov	r1, r5
   12688:	mov	r3, #0
   1268c:	mov	r8, r2
   12690:	mov	r2, #51712	; 0xca00
   12694:	movt	r2, #15258	; 0x3b9a
   12698:	bl	14074 <g_slice_alloc0@plt+0x2a88>
   1269c:	str	r8, [sp]
   126a0:	mov	r0, r4
   126a4:	str	r2, [sp, #4]
   126a8:	mov	r1, r5
   126ac:	ldr	r3, [r7, #72]	; 0x48
   126b0:	vldr	d7, [pc, #128]	; 12738 <g_slice_alloc0@plt+0x114c>
   126b4:	ldr	r2, [r7, #20]
   126b8:	mul	r2, r2, r3
   126bc:	vmov	s16, r2
   126c0:	vcvt.f64.u32	d8, s16
   126c4:	vmul.f64	d8, d8, d7
   126c8:	bl	14014 <g_slice_alloc0@plt+0x2a28>
   126cc:	mov	r2, sl
   126d0:	mov	r3, r9
   126d4:	vmov	d7, r0, r1
   126d8:	movw	r1, #19656	; 0x4cc8
   126dc:	mov	r0, #1
   126e0:	movt	r1, #1
   126e4:	vdiv.f64	d8, d8, d7
   126e8:	vstr	d8, [sp, #8]
   126ec:	bl	113b8 <__printf_chk@plt>
   126f0:	b	124e0 <g_slice_alloc0@plt+0xef4>
   126f4:	ldr	r3, [r3]
   126f8:	ldr	r3, [r3, r1, lsl #2]
   126fc:	b	12540 <g_slice_alloc0@plt+0xf54>
   12700:	mov	r8, #99	; 0x63
   12704:	movw	r2, #51711	; 0xc9ff
   12708:	mov	r9, r8
   1270c:	movt	r2, #15258	; 0x3b9a
   12710:	mov	sl, r8
   12714:	b	1269c <g_slice_alloc0@plt+0x10b0>
   12718:	movw	r1, #19576	; 0x4c78
   1271c:	ldr	r2, [r7, #72]	; 0x48
   12720:	movt	r1, #1
   12724:	mov	r0, #1
   12728:	bl	113b8 <__printf_chk@plt>
   1272c:	b	12604 <g_slice_alloc0@plt+0x1018>
   12730:	bl	1152c <__stack_chk_fail@plt>
   12734:	nop	{0}
   12738:	andeq	r0, r0, r0
   1273c:	bicmi	ip, sp, r5, ror #26
   12740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12744:	movw	r7, #24872	; 0x6128
   12748:	movt	r7, #2
   1274c:	sub	sp, sp, #5248	; 0x1480
   12750:	sub	sp, sp, #4
   12754:	movw	r1, #19696	; 0x4cf0
   12758:	ldr	r3, [r7]
   1275c:	add	r2, sp, #8192	; 0x2000
   12760:	movt	r1, #1
   12764:	str	r0, [sp, #148]	; 0x94
   12768:	str	r3, [r2, #-2948]	; 0xfffff47c
   1276c:	bl	114a8 <fopen64@plt>
   12770:	subs	fp, r0, #0
   12774:	beq	128f8 <g_slice_alloc0@plt+0x130c>
   12778:	movw	r1, #5000	; 0x1388
   1277c:	mov	r2, fp
   12780:	add	r0, sp, #240	; 0xf0
   12784:	bl	113ac <fgets@plt>
   12788:	cmp	r0, #0
   1278c:	beq	12cb8 <g_slice_alloc0@plt+0x16cc>
   12790:	add	r0, sp, #240	; 0xf0
   12794:	mov	r1, #27
   12798:	bl	113c4 <strchr@plt>
   1279c:	movw	r9, #24884	; 0x6134
   127a0:	movt	r9, #2
   127a4:	movw	r8, #24896	; 0x6140
   127a8:	movt	r8, #2
   127ac:	ldr	r3, [r9]
   127b0:	cmp	r0, #0
   127b4:	beq	12d0c <g_slice_alloc0@plt+0x1720>
   127b8:	cmp	r3, #3
   127bc:	ldr	sl, [r8, #8]
   127c0:	bhi	12ad8 <g_slice_alloc0@plt+0x14ec>
   127c4:	mov	r0, fp
   127c8:	mov	r6, #0
   127cc:	movw	r4, #24896	; 0x6140
   127d0:	movw	r5, #24880	; 0x6130
   127d4:	movt	r4, #2
   127d8:	movt	r5, #2
   127dc:	str	r4, [sp, #144]	; 0x90
   127e0:	bl	11394 <rewind@plt>
   127e4:	movw	r4, #20144	; 0x4eb0
   127e8:	movw	ip, #24864	; 0x6120
   127ec:	movt	r4, #1
   127f0:	movt	ip, #2
   127f4:	str	r5, [sp, #160]	; 0xa0
   127f8:	str	ip, [sp, #136]	; 0x88
   127fc:	str	r4, [sp, #140]	; 0x8c
   12800:	mov	r0, fp
   12804:	bl	114c0 <feof@plt>
   12808:	subs	r4, r0, #0
   1280c:	bne	128f0 <g_slice_alloc0@plt+0x1304>
   12810:	add	r0, sp, #240	; 0xf0
   12814:	movw	r1, #5000	; 0x1388
   12818:	mov	r2, fp
   1281c:	bl	113ac <fgets@plt>
   12820:	cmp	r0, #0
   12824:	beq	12aa8 <g_slice_alloc0@plt+0x14bc>
   12828:	mov	r2, r4
   1282c:	mov	r0, sl
   12830:	add	r1, sp, #240	; 0xf0
   12834:	add	r3, sp, #192	; 0xc0
   12838:	bl	1137c <g_regex_match@plt>
   1283c:	subs	r4, r0, #0
   12840:	bne	12918 <g_slice_alloc0@plt+0x132c>
   12844:	movw	r3, #60528	; 0xec70
   12848:	add	ip, sp, #5248	; 0x1480
   1284c:	movt	r3, #65535	; 0xffff
   12850:	ldrb	r3, [ip, r3]
   12854:	uxtb	r3, r3
   12858:	cmp	r3, #0
   1285c:	beq	128bc <g_slice_alloc0@plt+0x12d0>
   12860:	ldr	r3, [r9]
   12864:	cmp	r3, #1
   12868:	bls	128bc <g_slice_alloc0@plt+0x12d0>
   1286c:	ldr	ip, [sp, #136]	; 0x88
   12870:	add	r0, sp, #240	; 0xf0
   12874:	ldr	r5, [ip]
   12878:	bl	114f0 <g_strchomp@plt>
   1287c:	str	r4, [sp, #4]
   12880:	mov	r3, #828	; 0x33c
   12884:	ldr	r4, [sp, #140]	; 0x8c
   12888:	movw	r2, #20004	; 0x4e24
   1288c:	ldr	ip, [sp, #148]	; 0x94
   12890:	movt	r2, #1
   12894:	str	r3, [sp]
   12898:	mov	r1, #2
   1289c:	movw	r3, #19052	; 0x4a6c
   128a0:	str	r4, [sp, #8]
   128a4:	str	ip, [sp, #12]
   128a8:	movt	r3, #1
   128ac:	str	r6, [sp, #16]
   128b0:	str	r0, [sp, #20]
   128b4:	mov	r0, r5
   128b8:	bl	11478 <gst_debug_log@plt>
   128bc:	add	lr, sp, #5248	; 0x1480
   128c0:	movw	r4, #60480	; 0xec40
   128c4:	movt	r4, #65535	; 0xffff
   128c8:	add	r6, r6, #1
   128cc:	ldr	r0, [lr, r4]
   128d0:	bl	115b0 <g_match_info_free@plt>
   128d4:	add	r0, sp, #5248	; 0x1480
   128d8:	mov	r3, #0
   128dc:	str	r3, [r0, r4]
   128e0:	mov	r0, fp
   128e4:	bl	114c0 <feof@plt>
   128e8:	subs	r4, r0, #0
   128ec:	beq	12810 <g_slice_alloc0@plt+0x1224>
   128f0:	mov	r0, fp
   128f4:	bl	113a0 <fclose@plt>
   128f8:	add	r0, sp, #8192	; 0x2000
   128fc:	ldr	r2, [r0, #-2948]	; 0xfffff47c
   12900:	ldr	r3, [r7]
   12904:	cmp	r2, r3
   12908:	bne	13aac <g_slice_alloc0@plt+0x24c0>
   1290c:	add	sp, sp, #5248	; 0x1480
   12910:	add	sp, sp, #4
   12914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12918:	add	r5, sp, #5248	; 0x1480
   1291c:	movw	r4, #60480	; 0xec40
   12920:	movt	r4, #65535	; 0xffff
   12924:	mov	r1, #4
   12928:	ldr	r0, [r5, r4]
   1292c:	bl	11520 <g_match_info_fetch@plt>
   12930:	movw	r1, #19700	; 0x4cf4
   12934:	movt	r1, #1
   12938:	bl	115d4 <strcmp@plt>
   1293c:	subs	r5, r0, #0
   12940:	bne	128bc <g_slice_alloc0@plt+0x12d0>
   12944:	add	ip, sp, #5248	; 0x1480
   12948:	mov	r1, #7
   1294c:	ldr	r0, [ip, r4]
   12950:	bl	11520 <g_match_info_fetch@plt>
   12954:	mov	r1, r5
   12958:	str	r0, [sp, #152]	; 0x98
   1295c:	bl	114e4 <gst_structure_from_string@plt>
   12960:	subs	r4, r0, #0
   12964:	str	r4, [sp, #96]	; 0x60
   12968:	beq	12c64 <g_slice_alloc0@plt+0x1678>
   1296c:	bl	1134c <gst_structure_get_name@plt>
   12970:	movw	r1, #19708	; 0x4cfc
   12974:	movt	r1, #1
   12978:	mov	r4, r0
   1297c:	bl	115d4 <strcmp@plt>
   12980:	subs	r3, r0, #0
   12984:	beq	12d58 <g_slice_alloc0@plt+0x176c>
   12988:	movw	r1, #19784	; 0x4d48
   1298c:	mov	r0, r4
   12990:	movt	r1, #1
   12994:	bl	115d4 <strcmp@plt>
   12998:	cmp	r0, #0
   1299c:	beq	12b1c <g_slice_alloc0@plt+0x1530>
   129a0:	movw	r1, #19804	; 0x4d5c
   129a4:	mov	r0, r4
   129a8:	movt	r1, #1
   129ac:	bl	115d4 <strcmp@plt>
   129b0:	subs	r1, r0, #0
   129b4:	beq	13014 <g_slice_alloc0@plt+0x1a28>
   129b8:	movw	r1, #19904	; 0x4dc0
   129bc:	mov	r0, r4
   129c0:	movt	r1, #1
   129c4:	bl	115d4 <strcmp@plt>
   129c8:	cmp	r0, #0
   129cc:	beq	131ac <g_slice_alloc0@plt+0x1bc0>
   129d0:	movw	r1, #19912	; 0x4dc8
   129d4:	mov	r0, r4
   129d8:	movt	r1, #1
   129dc:	bl	115d4 <strcmp@plt>
   129e0:	cmp	r0, #0
   129e4:	beq	132b4 <g_slice_alloc0@plt+0x1cc8>
   129e8:	movw	r1, #19920	; 0x4dd0
   129ec:	mov	r0, r4
   129f0:	movt	r1, #1
   129f4:	bl	115d4 <strcmp@plt>
   129f8:	cmp	r0, #0
   129fc:	beq	12f24 <g_slice_alloc0@plt+0x1938>
   12a00:	movw	r1, #19928	; 0x4dd8
   12a04:	mov	r0, r4
   12a08:	movt	r1, #1
   12a0c:	bl	115d4 <strcmp@plt>
   12a10:	cmp	r0, #0
   12a14:	beq	134f0 <g_slice_alloc0@plt+0x1f04>
   12a18:	mov	r0, r4
   12a1c:	movw	r1, #19968	; 0x4e00
   12a20:	movt	r1, #1
   12a24:	bl	115d4 <strcmp@plt>
   12a28:	cmp	r0, #0
   12a2c:	bne	13438 <g_slice_alloc0@plt+0x1e4c>
   12a30:	ldr	r5, [pc, #3928]	; 13990 <g_slice_alloc0@plt+0x23a4>
   12a34:	mov	r2, #28
   12a38:	str	r0, [sp, #12]
   12a3c:	movw	r3, #19944	; 0x4de8
   12a40:	str	r2, [sp, #4]
   12a44:	movt	r3, #1
   12a48:	str	r5, [sp, #8]
   12a4c:	mov	r2, #44	; 0x2c
   12a50:	str	r3, [sp]
   12a54:	movw	r1, #19868	; 0x4d9c
   12a58:	add	r3, sp, #232	; 0xe8
   12a5c:	movt	r1, #1
   12a60:	ldr	r0, [sp, #96]	; 0x60
   12a64:	add	r5, sp, #5248	; 0x1480
   12a68:	bl	11538 <gst_structure_get@plt>
   12a6c:	ldr	r4, [sp, #144]	; 0x90
   12a70:	movw	r1, #60520	; 0xec68
   12a74:	movt	r1, #65535	; 0xffff
   12a78:	movw	r8, #24896	; 0x6140
   12a7c:	movt	r8, #2
   12a80:	ldrd	r2, [r4, #48]	; 0x30
   12a84:	ldrd	r0, [r1, r5]
   12a88:	cmp	r3, r1
   12a8c:	cmpeq	r2, r0
   12a90:	movcc	r3, r1
   12a94:	movcc	r2, r0
   12a98:	strd	r2, [r8, #48]	; 0x30
   12a9c:	mov	r3, #1
   12aa0:	str	r3, [r8, #84]	; 0x54
   12aa4:	b	12c58 <g_slice_alloc0@plt+0x166c>
   12aa8:	mov	r0, fp
   12aac:	bl	114c0 <feof@plt>
   12ab0:	cmp	r0, #0
   12ab4:	bne	12800 <g_slice_alloc0@plt+0x1214>
   12ab8:	ldr	r4, [sp, #160]	; 0xa0
   12abc:	movw	r0, #19988	; 0x4e14
   12ac0:	mov	r1, #1
   12ac4:	mov	r2, #13
   12ac8:	movt	r0, #1
   12acc:	ldr	r3, [r4]
   12ad0:	bl	11514 <fwrite@plt>
   12ad4:	b	12800 <g_slice_alloc0@plt+0x1214>
   12ad8:	movw	r2, #24864	; 0x6120
   12adc:	movt	r2, #2
   12ae0:	mov	r1, #780	; 0x30c
   12ae4:	movw	r3, #20016	; 0x4e30
   12ae8:	ldr	r0, [r2]
   12aec:	movt	r3, #1
   12af0:	str	r1, [sp]
   12af4:	movw	r2, #20004	; 0x4e24
   12af8:	mov	r1, #0
   12afc:	str	r3, [sp, #8]
   12b00:	str	r1, [sp, #4]
   12b04:	movt	r2, #1
   12b08:	movw	r3, #19052	; 0x4a6c
   12b0c:	mov	r1, #4
   12b10:	movt	r3, #1
   12b14:	bl	11478 <gst_debug_log@plt>
   12b18:	b	127c4 <g_slice_alloc0@plt+0x11d8>
   12b1c:	mov	r2, #28
   12b20:	add	ip, sp, #224	; 0xe0
   12b24:	str	r2, [sp, #4]
   12b28:	movw	r1, #19716	; 0x4d04
   12b2c:	str	ip, [sp, #20]
   12b30:	movt	r1, #1
   12b34:	str	r0, [sp, #48]	; 0x30
   12b38:	movw	r3, #19728	; 0x4d10
   12b3c:	str	r1, [sp]
   12b40:	movt	r3, #1
   12b44:	mov	r0, #20
   12b48:	str	r3, [sp, #12]
   12b4c:	str	r0, [sp, #40]	; 0x28
   12b50:	movw	r1, #19736	; 0x4d18
   12b54:	movw	r3, #19796	; 0x4d54
   12b58:	movt	r1, #1
   12b5c:	movt	r3, #1
   12b60:	str	r1, [sp, #24]
   12b64:	str	r3, [sp, #36]	; 0x24
   12b68:	add	r1, sp, #212	; 0xd4
   12b6c:	mov	r3, #64	; 0x40
   12b70:	str	r1, [sp, #8]
   12b74:	str	r3, [sp, #16]
   12b78:	add	r1, sp, #216	; 0xd8
   12b7c:	str	r3, [sp, #28]
   12b80:	add	r3, sp, #232	; 0xe8
   12b84:	str	r1, [sp, #32]
   12b88:	movw	r1, #19816	; 0x4d68
   12b8c:	str	r3, [sp, #44]	; 0x2c
   12b90:	movt	r1, #1
   12b94:	add	r3, sp, #208	; 0xd0
   12b98:	ldr	r0, [sp, #96]	; 0x60
   12b9c:	bl	11538 <gst_structure_get@plt>
   12ba0:	mov	r0, #80	; 0x50
   12ba4:	bl	115ec <g_slice_alloc0@plt>
   12ba8:	movw	r3, #60520	; 0xec68
   12bac:	movt	r3, #65535	; 0xffff
   12bb0:	add	ip, sp, #5248	; 0x1480
   12bb4:	movw	lr, #60500	; 0xec54
   12bb8:	movt	lr, #65535	; 0xffff
   12bbc:	movw	r1, #60496	; 0xec50
   12bc0:	movt	r1, #65535	; 0xffff
   12bc4:	ldr	lr, [ip, lr]
   12bc8:	movw	r5, #60512	; 0xec60
   12bcc:	movt	r5, #65535	; 0xffff
   12bd0:	ldr	r1, [ip, r1]
   12bd4:	ldr	r5, [ip, r5]
   12bd8:	mov	r4, r0
   12bdc:	add	r0, sp, #5248	; 0x1480
   12be0:	str	lr, [r4, #72]	; 0x48
   12be4:	ldr	r3, [r0, r3]
   12be8:	ldr	r0, [r8]
   12bec:	cmp	r3, #0
   12bf0:	ldrne	r2, [r8, #28]
   12bf4:	ldr	lr, [r0, #4]
   12bf8:	addne	r2, r2, #1
   12bfc:	str	r3, [r4, #12]
   12c00:	strne	r2, [r8, #28]
   12c04:	movw	r2, #60504	; 0xec58
   12c08:	movt	r2, #65535	; 0xffff
   12c0c:	ldr	r3, [r8, #32]
   12c10:	cmp	r1, lr
   12c14:	str	r1, [r4, #8]
   12c18:	ldr	r2, [ip, r2]
   12c1c:	add	r3, r3, #1
   12c20:	str	r5, [r4]
   12c24:	str	r3, [r8, #32]
   12c28:	mvn	r3, #0
   12c2c:	str	r2, [r4, #4]
   12c30:	mvn	r2, #0
   12c34:	strd	r2, [r4, #56]	; 0x38
   12c38:	bcs	12f18 <g_slice_alloc0@plt+0x192c>
   12c3c:	ldr	r2, [r8]
   12c40:	movw	r3, #60496	; 0xec50
   12c44:	add	lr, sp, #5248	; 0x1480
   12c48:	movt	r3, #65535	; 0xffff
   12c4c:	ldr	r2, [r2]
   12c50:	ldr	r3, [lr, r3]
   12c54:	str	r4, [r2, r3, lsl #2]
   12c58:	ldr	r0, [sp, #96]	; 0x60
   12c5c:	bl	11430 <gst_structure_free@plt>
   12c60:	b	128bc <g_slice_alloc0@plt+0x12d0>
   12c64:	ldr	r3, [r9]
   12c68:	cmp	r3, #1
   12c6c:	bls	128bc <g_slice_alloc0@plt+0x12d0>
   12c70:	ldr	r4, [sp, #96]	; 0x60
   12c74:	movw	r2, #822	; 0x336
   12c78:	ldr	r5, [sp, #152]	; 0x98
   12c7c:	movw	r3, #20120	; 0x4e98
   12c80:	ldr	ip, [sp, #136]	; 0x88
   12c84:	movt	r3, #1
   12c88:	str	r2, [sp]
   12c8c:	mov	r1, #2
   12c90:	str	r3, [sp, #8]
   12c94:	movw	r2, #20004	; 0x4e24
   12c98:	str	r4, [sp, #4]
   12c9c:	movw	r3, #19052	; 0x4a6c
   12ca0:	str	r5, [sp, #12]
   12ca4:	movt	r2, #1
   12ca8:	movt	r3, #1
   12cac:	ldr	r0, [ip]
   12cb0:	bl	11478 <gst_debug_log@plt>
   12cb4:	b	128bc <g_slice_alloc0@plt+0x12d0>
   12cb8:	movw	r3, #24884	; 0x6134
   12cbc:	movt	r3, #2
   12cc0:	ldr	r3, [r3]
   12cc4:	cmp	r3, #1
   12cc8:	bls	128f0 <g_slice_alloc0@plt+0x1304>
   12ccc:	movw	r2, #24864	; 0x6120
   12cd0:	movt	r2, #2
   12cd4:	str	r0, [sp, #4]
   12cd8:	movw	r3, #20176	; 0x4ed0
   12cdc:	ldr	r0, [r2]
   12ce0:	movt	r3, #1
   12ce4:	movw	r2, #842	; 0x34a
   12ce8:	str	r3, [sp, #8]
   12cec:	str	r2, [sp]
   12cf0:	movw	r3, #19052	; 0x4a6c
   12cf4:	movw	r2, #20004	; 0x4e24
   12cf8:	movt	r3, #1
   12cfc:	movt	r2, #1
   12d00:	mov	r1, #2
   12d04:	bl	11478 <gst_debug_log@plt>
   12d08:	b	128f0 <g_slice_alloc0@plt+0x1304>
   12d0c:	cmp	r3, #3
   12d10:	ldr	sl, [r8, #12]
   12d14:	bls	127c4 <g_slice_alloc0@plt+0x11d8>
   12d18:	movw	r2, #24864	; 0x6120
   12d1c:	movt	r2, #2
   12d20:	str	r0, [sp, #4]
   12d24:	movw	r3, #20036	; 0x4e44
   12d28:	ldr	r0, [r2]
   12d2c:	movt	r3, #1
   12d30:	movw	r2, #783	; 0x30f
   12d34:	str	r3, [sp, #8]
   12d38:	str	r2, [sp]
   12d3c:	movw	r3, #19052	; 0x4a6c
   12d40:	movw	r2, #20004	; 0x4e24
   12d44:	movt	r3, #1
   12d48:	movt	r2, #1
   12d4c:	mov	r1, #4
   12d50:	bl	11478 <gst_debug_log@plt>
   12d54:	b	127c4 <g_slice_alloc0@plt+0x11d8>
   12d58:	str	r3, [sp, #104]	; 0x68
   12d5c:	bl	112ec <gst_pad_direction_get_type@plt>
   12d60:	ldr	r3, [sp, #104]	; 0x68
   12d64:	mov	ip, #28
   12d68:	movw	r2, #19716	; 0x4d04
   12d6c:	str	ip, [sp, #4]
   12d70:	movt	r2, #1
   12d74:	movw	r1, #19756	; 0x4d2c
   12d78:	str	r3, [sp, #72]	; 0x48
   12d7c:	movt	r1, #1
   12d80:	str	r2, [sp]
   12d84:	movw	r3, #19728	; 0x4d10
   12d88:	str	r1, [sp, #48]	; 0x30
   12d8c:	movt	r3, #1
   12d90:	add	r1, sp, #204	; 0xcc
   12d94:	str	r3, [sp, #12]
   12d98:	str	r1, [sp, #8]
   12d9c:	movw	r2, #19736	; 0x4d18
   12da0:	add	r1, sp, #208	; 0xd0
   12da4:	movt	r2, #1
   12da8:	str	r1, [sp, #32]
   12dac:	movw	r3, #19744	; 0x4d20
   12db0:	str	r2, [sp, #24]
   12db4:	movt	r3, #1
   12db8:	mov	r2, ip
   12dbc:	str	r3, [sp, #36]	; 0x24
   12dc0:	add	ip, sp, #212	; 0xd4
   12dc4:	add	r1, sp, #216	; 0xd8
   12dc8:	str	ip, [sp, #20]
   12dcc:	movw	r3, #19772	; 0x4d3c
   12dd0:	str	r1, [sp, #44]	; 0x2c
   12dd4:	movt	r3, #1
   12dd8:	mov	r1, #44	; 0x2c
   12ddc:	str	r3, [sp, #60]	; 0x3c
   12de0:	str	r1, [sp, #64]	; 0x40
   12de4:	mov	r3, #64	; 0x40
   12de8:	movw	r1, #19816	; 0x4d68
   12dec:	str	r3, [sp, #16]
   12df0:	movt	r1, #1
   12df4:	str	r3, [sp, #28]
   12df8:	mov	r3, #20
   12dfc:	str	r3, [sp, #40]	; 0x28
   12e00:	add	r3, sp, #224	; 0xe0
   12e04:	str	r3, [sp, #56]	; 0x38
   12e08:	add	r3, sp, #232	; 0xe8
   12e0c:	str	r3, [sp, #68]	; 0x44
   12e10:	add	r3, sp, #200	; 0xc8
   12e14:	str	r0, [sp, #52]	; 0x34
   12e18:	ldr	r0, [sp, #96]	; 0x60
   12e1c:	bl	11538 <gst_structure_get@plt>
   12e20:	mov	r0, #112	; 0x70
   12e24:	bl	115ec <g_slice_alloc0@plt>
   12e28:	add	ip, sp, #5248	; 0x1480
   12e2c:	movw	r3, #60504	; 0xec58
   12e30:	movt	r3, #65535	; 0xffff
   12e34:	movw	r1, #60488	; 0xec48
   12e38:	movw	lr, #60496	; 0xec50
   12e3c:	ldr	r5, [ip, r3]
   12e40:	add	r3, sp, #5248	; 0x1480
   12e44:	movw	ip, #60512	; 0xec60
   12e48:	movt	ip, #65535	; 0xffff
   12e4c:	cmp	r5, #0
   12e50:	movt	r1, #65535	; 0xffff
   12e54:	ldr	ip, [r3, ip]
   12e58:	movt	lr, #65535	; 0xffff
   12e5c:	ldrne	r2, [r8, #16]
   12e60:	ldr	r1, [r3, r1]
   12e64:	ldr	lr, [r3, lr]
   12e68:	addne	r2, r2, #1
   12e6c:	strne	r2, [r8, #16]
   12e70:	movw	r2, #60500	; 0xec54
   12e74:	movt	r2, #65535	; 0xffff
   12e78:	mov	r4, r0
   12e7c:	ldr	r0, [r8, #24]
   12e80:	ldr	r2, [r3, r2]
   12e84:	str	ip, [r4, #16]
   12e88:	movw	ip, #60492	; 0xec4c
   12e8c:	str	r5, [r4, #12]
   12e90:	movt	ip, #65535	; 0xffff
   12e94:	str	r2, [r4]
   12e98:	movw	r2, #60520	; 0xec68
   12e9c:	movt	r2, #65535	; 0xffff
   12ea0:	add	r5, sp, #5248	; 0x1480
   12ea4:	str	lr, [r4, #4]
   12ea8:	mvn	lr, #0
   12eac:	ldr	r2, [r3, r2]
   12eb0:	ldr	r3, [r0, #4]
   12eb4:	ldr	ip, [r5, ip]
   12eb8:	cmp	r1, r3
   12ebc:	ldr	r3, [r8, #20]
   12ec0:	str	r2, [r4, #104]	; 0x68
   12ec4:	mvn	r2, #0
   12ec8:	add	r3, r3, #1
   12ecc:	str	r1, [r4, #8]
   12ed0:	str	r3, [r8, #20]
   12ed4:	mvn	r3, #0
   12ed8:	str	ip, [r4, #108]	; 0x6c
   12edc:	str	lr, [r4, #64]	; 0x40
   12ee0:	strd	r2, [r4, #96]	; 0x60
   12ee4:	strd	r2, [r4, #88]	; 0x58
   12ee8:	strd	r2, [r4, #80]	; 0x50
   12eec:	bcc	12ef8 <g_slice_alloc0@plt+0x190c>
   12ef0:	add	r1, r1, #1
   12ef4:	bl	11550 <g_ptr_array_set_size@plt>
   12ef8:	ldr	r2, [r8, #24]
   12efc:	movw	r3, #60488	; 0xec48
   12f00:	add	ip, sp, #5248	; 0x1480
   12f04:	movt	r3, #65535	; 0xffff
   12f08:	ldr	r2, [r2]
   12f0c:	ldr	r3, [ip, r3]
   12f10:	str	r4, [r2, r3, lsl #2]
   12f14:	b	12c58 <g_slice_alloc0@plt+0x166c>
   12f18:	add	r1, r1, #1
   12f1c:	bl	11550 <g_ptr_array_set_size@plt>
   12f20:	b	12c3c <g_slice_alloc0@plt+0x1650>
   12f24:	ldrd	r4, [r8, #72]	; 0x48
   12f28:	mov	r2, #28
   12f2c:	str	r0, [sp, #12]
   12f30:	movw	r3, #19820	; 0x4d6c
   12f34:	adds	r4, r4, #1
   12f38:	movt	r3, #1
   12f3c:	str	r2, [sp, #4]
   12f40:	movw	r1, #19868	; 0x4d9c
   12f44:	str	r3, [sp]
   12f48:	movt	r1, #1
   12f4c:	add	r3, sp, #224	; 0xe0
   12f50:	mov	r2, #44	; 0x2c
   12f54:	str	r3, [sp, #8]
   12f58:	add	r3, sp, #232	; 0xe8
   12f5c:	ldr	r0, [sp, #96]	; 0x60
   12f60:	adc	r5, r5, #0
   12f64:	strd	r4, [r8, #72]	; 0x48
   12f68:	bl	11538 <gst_structure_get@plt>
   12f6c:	ldr	r5, [sp, #144]	; 0x90
   12f70:	movw	r1, #60520	; 0xec68
   12f74:	add	ip, sp, #5248	; 0x1480
   12f78:	movt	r1, #65535	; 0xffff
   12f7c:	movw	r8, #24896	; 0x6140
   12f80:	add	lr, sp, #5248	; 0x1480
   12f84:	ldrd	r2, [r5, #48]	; 0x30
   12f88:	movt	r8, #2
   12f8c:	ldrd	r0, [r1, ip]
   12f90:	cmp	r3, r1
   12f94:	cmpeq	r2, r0
   12f98:	movcc	r3, r1
   12f9c:	movw	r1, #60512	; 0xec60
   12fa0:	movt	r1, #65535	; 0xffff
   12fa4:	movcc	r2, r0
   12fa8:	strd	r2, [r8, #48]	; 0x30
   12fac:	ldr	r3, [lr, r1]
   12fb0:	cmn	r3, #1
   12fb4:	beq	12fc8 <g_slice_alloc0@plt+0x19dc>
   12fb8:	ldr	r2, [r8]
   12fbc:	ldr	r1, [r2, #4]
   12fc0:	cmp	r3, r1
   12fc4:	bcc	13a60 <g_slice_alloc0@plt+0x2474>
   12fc8:	ldr	r2, [r9]
   12fcc:	cmp	r2, #1
   12fd0:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   12fd4:	ldr	r4, [sp, #136]	; 0x88
   12fd8:	movw	r2, #378	; 0x17a
   12fdc:	str	r3, [sp, #12]
   12fe0:	mov	r1, #0
   12fe4:	str	r2, [sp]
   12fe8:	movw	r3, #20084	; 0x4e74
   12fec:	str	r1, [sp, #4]
   12ff0:	movt	r3, #1
   12ff4:	movw	r2, #20004	; 0x4e24
   12ff8:	str	r3, [sp, #8]
   12ffc:	movt	r2, #1
   13000:	ldr	r0, [r4]
   13004:	mov	r1, #2
   13008:	ldr	r3, [pc, #2436]	; 13994 <g_slice_alloc0@plt+0x23a8>
   1300c:	bl	11478 <gst_debug_log@plt>
   13010:	b	12c58 <g_slice_alloc0@plt+0x166c>
   13014:	ldrd	r2, [r8, #40]	; 0x28
   13018:	add	r4, sp, #200	; 0xc8
   1301c:	str	r1, [sp, #108]	; 0x6c
   13020:	adds	r2, r2, #1
   13024:	adc	r3, r3, #0
   13028:	strd	r2, [r8, #40]	; 0x28
   1302c:	bl	11328 <gst_buffer_flags_get_type@plt>
   13030:	ldr	r1, [sp, #108]	; 0x6c
   13034:	movw	r3, #19820	; 0x4d6c
   13038:	movt	r3, #1
   1303c:	str	r3, [sp, #12]
   13040:	movw	r3, #19848	; 0x4d88
   13044:	str	r1, [sp, #84]	; 0x54
   13048:	movt	r3, #1
   1304c:	movw	r1, #19812	; 0x4d64
   13050:	str	r3, [sp, #36]	; 0x24
   13054:	movt	r1, #1
   13058:	movw	r3, #19872	; 0x4da0
   1305c:	str	r1, [sp]
   13060:	movt	r3, #1
   13064:	movw	r1, #19832	; 0x4d78
   13068:	str	r3, [sp, #60]	; 0x3c
   1306c:	movt	r1, #1
   13070:	movw	r3, #19888	; 0x4db0
   13074:	str	r1, [sp, #24]
   13078:	movt	r3, #1
   1307c:	movw	r1, #19860	; 0x4d94
   13080:	str	r3, [sp, #72]	; 0x48
   13084:	movt	r1, #1
   13088:	mov	r3, #28
   1308c:	str	r1, [sp, #48]	; 0x30
   13090:	add	r1, sp, #256	; 0x100
   13094:	str	r3, [sp, #4]
   13098:	mov	r2, #44	; 0x2c
   1309c:	str	r3, [sp, #16]
   130a0:	add	lr, sp, #196	; 0xc4
   130a4:	str	r3, [sp, #28]
   130a8:	add	ip, sp, #204	; 0xcc
   130ac:	str	r3, [sp, #40]	; 0x28
   130b0:	add	r3, sp, #256	; 0x100
   130b4:	str	r2, [sp, #52]	; 0x34
   130b8:	sub	r1, r1, #48	; 0x30
   130bc:	str	r2, [sp, #64]	; 0x40
   130c0:	sub	r3, r3, #24
   130c4:	str	lr, [sp, #8]
   130c8:	add	lr, sp, #224	; 0xe0
   130cc:	str	r4, [sp, #20]
   130d0:	movw	r8, #24896	; 0x6140
   130d4:	str	ip, [sp, #32]
   130d8:	add	ip, sp, #212	; 0xd4
   130dc:	str	r1, [sp, #44]	; 0x2c
   130e0:	movw	r1, #19868	; 0x4d9c
   130e4:	str	r3, [sp, #68]	; 0x44
   130e8:	movt	r1, #1
   130ec:	add	r3, sp, #216	; 0xd8
   130f0:	str	ip, [sp, #80]	; 0x50
   130f4:	str	lr, [sp, #56]	; 0x38
   130f8:	movt	r8, #2
   130fc:	str	r0, [sp, #76]	; 0x4c
   13100:	ldr	r0, [sp, #96]	; 0x60
   13104:	bl	11538 <gst_structure_get@plt>
   13108:	ldr	ip, [sp, #144]	; 0x90
   1310c:	movw	r1, #60504	; 0xec58
   13110:	add	r3, sp, #5248	; 0x1480
   13114:	movt	r1, #65535	; 0xffff
   13118:	ldrd	r4, [ip, #48]	; 0x30
   1311c:	ldrd	r2, [r3, r1]
   13120:	movw	r1, #60484	; 0xec44
   13124:	movt	r1, #65535	; 0xffff
   13128:	cmp	r5, r3
   1312c:	cmpeq	r4, r2
   13130:	strd	r2, [sp, #152]	; 0x98
   13134:	movcc	r4, r2
   13138:	movcc	r5, r3
   1313c:	strd	r4, [r8, #48]	; 0x30
   13140:	add	r4, sp, #5248	; 0x1480
   13144:	ldr	r3, [r4, r1]
   13148:	cmn	r3, #1
   1314c:	beq	13160 <g_slice_alloc0@plt+0x1b74>
   13150:	ldr	r2, [r8, #24]
   13154:	ldr	r1, [r2, #4]
   13158:	cmp	r3, r1
   1315c:	bcc	133a8 <g_slice_alloc0@plt+0x1dbc>
   13160:	ldr	r2, [r9]
   13164:	cmp	r2, #1
   13168:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   1316c:	str	r3, [sp, #12]
   13170:	movw	r3, #20052	; 0x4e54
   13174:	movt	r3, #1
   13178:	movw	r2, #301	; 0x12d
   1317c:	ldr	r5, [sp, #136]	; 0x88
   13180:	mov	r1, #0
   13184:	str	r2, [sp]
   13188:	movw	r2, #20004	; 0x4e24
   1318c:	str	r3, [sp, #8]
   13190:	movt	r2, #1
   13194:	str	r1, [sp, #4]
   13198:	mov	r1, #2
   1319c:	ldr	r0, [r5]
   131a0:	ldr	r3, [pc, #2032]	; 13998 <g_slice_alloc0@plt+0x23ac>
   131a4:	bl	11478 <gst_debug_log@plt>
   131a8:	b	12c58 <g_slice_alloc0@plt+0x166c>
   131ac:	ldrd	r4, [r8, #56]	; 0x38
   131b0:	movw	r2, #19812	; 0x4d64
   131b4:	str	r0, [sp, #24]
   131b8:	movt	r2, #1
   131bc:	adds	r4, r4, #1
   131c0:	str	r2, [sp]
   131c4:	add	r0, sp, #216	; 0xd8
   131c8:	mov	r2, #28
   131cc:	str	r0, [sp, #8]
   131d0:	movw	r3, #19820	; 0x4d6c
   131d4:	str	r2, [sp, #4]
   131d8:	movt	r3, #1
   131dc:	str	r2, [sp, #16]
   131e0:	movw	r1, #19868	; 0x4d9c
   131e4:	str	r3, [sp, #12]
   131e8:	movt	r1, #1
   131ec:	add	r3, sp, #224	; 0xe0
   131f0:	mov	r2, #44	; 0x2c
   131f4:	str	r3, [sp, #20]
   131f8:	add	r3, sp, #232	; 0xe8
   131fc:	ldr	r0, [sp, #96]	; 0x60
   13200:	adc	r5, r5, #0
   13204:	strd	r4, [r8, #56]	; 0x38
   13208:	bl	11538 <gst_structure_get@plt>
   1320c:	ldr	r5, [sp, #144]	; 0x90
   13210:	movw	r1, #60520	; 0xec68
   13214:	add	ip, sp, #5248	; 0x1480
   13218:	movt	r1, #65535	; 0xffff
   1321c:	movw	r8, #24896	; 0x6140
   13220:	add	lr, sp, #5248	; 0x1480
   13224:	ldrd	r2, [r5, #48]	; 0x30
   13228:	movt	r8, #2
   1322c:	ldrd	r0, [r1, ip]
   13230:	cmp	r3, r1
   13234:	cmpeq	r2, r0
   13238:	movcc	r3, r1
   1323c:	movw	r1, #60504	; 0xec58
   13240:	movt	r1, #65535	; 0xffff
   13244:	movcc	r2, r0
   13248:	strd	r2, [r8, #48]	; 0x30
   1324c:	ldr	r3, [lr, r1]
   13250:	cmn	r3, #1
   13254:	beq	13268 <g_slice_alloc0@plt+0x1c7c>
   13258:	ldr	r2, [r8, #24]
   1325c:	ldr	r1, [r2, #4]
   13260:	cmp	r3, r1
   13264:	bcc	138b0 <g_slice_alloc0@plt+0x22c4>
   13268:	ldr	r2, [r9]
   1326c:	cmp	r2, #1
   13270:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   13274:	ldr	r4, [sp, #136]	; 0x88
   13278:	movw	r2, #337	; 0x151
   1327c:	str	r3, [sp, #12]
   13280:	mov	r1, #0
   13284:	str	r2, [sp]
   13288:	movw	r3, #20052	; 0x4e54
   1328c:	str	r1, [sp, #4]
   13290:	movt	r3, #1
   13294:	movw	r2, #20004	; 0x4e24
   13298:	str	r3, [sp, #8]
   1329c:	movt	r2, #1
   132a0:	ldr	r0, [r4]
   132a4:	mov	r1, #2
   132a8:	ldr	r3, [pc, #1772]	; 1399c <g_slice_alloc0@plt+0x23b0>
   132ac:	bl	11478 <gst_debug_log@plt>
   132b0:	b	12c58 <g_slice_alloc0@plt+0x166c>
   132b4:	ldrd	r4, [r8, #64]	; 0x40
   132b8:	mov	r2, #28
   132bc:	movw	r3, #19820	; 0x4d6c
   132c0:	str	r2, [sp, #4]
   132c4:	adds	r4, r4, #1
   132c8:	movt	r3, #1
   132cc:	add	r2, sp, #224	; 0xe0
   132d0:	str	r3, [sp]
   132d4:	str	r2, [sp, #8]
   132d8:	mov	r3, #0
   132dc:	mov	r2, #44	; 0x2c
   132e0:	str	r3, [sp, #12]
   132e4:	movw	r1, #19868	; 0x4d9c
   132e8:	add	r3, sp, #232	; 0xe8
   132ec:	movt	r1, #1
   132f0:	ldr	r0, [sp, #96]	; 0x60
   132f4:	adc	r5, r5, #0
   132f8:	strd	r4, [r8, #64]	; 0x40
   132fc:	bl	11538 <gst_structure_get@plt>
   13300:	ldr	r5, [sp, #144]	; 0x90
   13304:	movw	r1, #60520	; 0xec68
   13308:	add	ip, sp, #5248	; 0x1480
   1330c:	movt	r1, #65535	; 0xffff
   13310:	movw	r8, #24896	; 0x6140
   13314:	ldrd	r2, [r5, #48]	; 0x30
   13318:	movt	r8, #2
   1331c:	ldrd	r0, [r1, ip]
   13320:	add	lr, sp, #5248	; 0x1480
   13324:	cmp	r3, r1
   13328:	cmpeq	r2, r0
   1332c:	movcc	r3, r1
   13330:	movw	r1, #60512	; 0xec60
   13334:	movt	r1, #65535	; 0xffff
   13338:	movcc	r2, r0
   1333c:	strd	r2, [r8, #48]	; 0x30
   13340:	ldr	r3, [lr, r1]
   13344:	cmn	r3, #1
   13348:	beq	1335c <g_slice_alloc0@plt+0x1d70>
   1334c:	ldr	r2, [r8]
   13350:	ldr	r1, [r2, #4]
   13354:	cmp	r3, r1
   13358:	bcc	13970 <g_slice_alloc0@plt+0x2384>
   1335c:	ldr	r2, [r9]
   13360:	cmp	r2, #1
   13364:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   13368:	ldr	ip, [sp, #136]	; 0x88
   1336c:	mov	r2, #360	; 0x168
   13370:	str	r3, [sp, #12]
   13374:	mov	r1, #0
   13378:	str	r2, [sp]
   1337c:	movw	r3, #20084	; 0x4e74
   13380:	str	r1, [sp, #4]
   13384:	movt	r3, #1
   13388:	movw	r2, #20004	; 0x4e24
   1338c:	str	r3, [sp, #8]
   13390:	movt	r2, #1
   13394:	ldr	r0, [ip]
   13398:	mov	r1, #2
   1339c:	ldr	r3, [pc, #1532]	; 139a0 <g_slice_alloc0@plt+0x23b4>
   133a0:	bl	11478 <gst_debug_log@plt>
   133a4:	b	12c58 <g_slice_alloc0@plt+0x166c>
   133a8:	ldr	r2, [r2]
   133ac:	ldr	ip, [r2, r3, lsl #2]
   133b0:	cmp	ip, #0
   133b4:	beq	13160 <g_slice_alloc0@plt+0x1b74>
   133b8:	movw	r3, #60488	; 0xec48
   133bc:	add	r5, sp, #5248	; 0x1480
   133c0:	movt	r3, #65535	; 0xffff
   133c4:	ldr	r3, [r5, r3]
   133c8:	cmn	r3, #1
   133cc:	str	r3, [sp, #92]	; 0x5c
   133d0:	beq	133e8 <g_slice_alloc0@plt+0x1dfc>
   133d4:	ldr	r4, [sp, #144]	; 0x90
   133d8:	ldr	r2, [r4]
   133dc:	ldr	r1, [r2, #4]
   133e0:	cmp	r3, r1
   133e4:	bcc	134a0 <g_slice_alloc0@plt+0x1eb4>
   133e8:	ldr	r2, [r9]
   133ec:	cmp	r2, #1
   133f0:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   133f4:	ldr	ip, [sp, #92]	; 0x5c
   133f8:	movw	r2, #305	; 0x131
   133fc:	ldr	r4, [sp, #136]	; 0x88
   13400:	mov	r1, #0
   13404:	str	r2, [sp]
   13408:	movw	r3, #20084	; 0x4e74
   1340c:	str	r1, [sp, #4]
   13410:	movt	r3, #1
   13414:	str	ip, [sp, #12]
   13418:	movw	r2, #20004	; 0x4e24
   1341c:	str	r3, [sp, #8]
   13420:	movt	r2, #1
   13424:	ldr	r0, [r4]
   13428:	mov	r1, #2
   1342c:	ldr	r3, [pc, #1380]	; 13998 <g_slice_alloc0@plt+0x23ac>
   13430:	bl	11478 <gst_debug_log@plt>
   13434:	b	12c58 <g_slice_alloc0@plt+0x166c>
   13438:	movw	r1, #19980	; 0x4e0c
   1343c:	ldr	r0, [sp, #152]	; 0x98
   13440:	movt	r1, #1
   13444:	bl	1158c <g_str_has_suffix@plt>
   13448:	cmp	r0, #0
   1344c:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   13450:	ldr	r3, [r9]
   13454:	cmp	r3, #1
   13458:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   1345c:	ldr	r5, [sp, #152]	; 0x98
   13460:	movw	r2, #817	; 0x331
   13464:	ldr	ip, [sp, #136]	; 0x88
   13468:	movw	r3, #20120	; 0x4e98
   1346c:	str	r2, [sp]
   13470:	movt	r3, #1
   13474:	str	r0, [sp, #4]
   13478:	movw	r2, #20004	; 0x4e24
   1347c:	str	r3, [sp, #8]
   13480:	movt	r2, #1
   13484:	str	r5, [sp, #12]
   13488:	movw	r3, #19052	; 0x4a6c
   1348c:	ldr	r0, [ip]
   13490:	movt	r3, #1
   13494:	mov	r1, #2
   13498:	bl	11478 <gst_debug_log@plt>
   1349c:	b	12c58 <g_slice_alloc0@plt+0x166c>
   134a0:	ldr	r0, [r2]
   134a4:	ldr	r4, [r0, r3, lsl #2]
   134a8:	cmp	r4, #0
   134ac:	beq	133e8 <g_slice_alloc0@plt+0x1dfc>
   134b0:	movw	r2, #60492	; 0xec4c
   134b4:	add	r5, sp, #5248	; 0x1480
   134b8:	movt	r2, #65535	; 0xffff
   134bc:	ldr	r2, [r5, r2]
   134c0:	cmn	r2, #1
   134c4:	beq	134d0 <g_slice_alloc0@plt+0x1ee4>
   134c8:	cmp	r1, r2
   134cc:	bhi	135d4 <g_slice_alloc0@plt+0x1fe8>
   134d0:	ldr	r3, [r9]
   134d4:	cmp	r3, #1
   134d8:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   134dc:	str	r2, [sp, #12]
   134e0:	movw	r3, #20084	; 0x4e74
   134e4:	movw	r2, #309	; 0x135
   134e8:	movt	r3, #1
   134ec:	b	1317c <g_slice_alloc0@plt+0x1b90>
   134f0:	mov	r3, #44	; 0x2c
   134f4:	str	r0, [sp, #36]	; 0x24
   134f8:	str	r3, [sp, #4]
   134fc:	movw	r1, #19772	; 0x4d3c
   13500:	str	r3, [sp, #28]
   13504:	movt	r1, #1
   13508:	movw	r2, #19944	; 0x4de8
   1350c:	str	r1, [sp]
   13510:	movt	r2, #1
   13514:	movw	r1, #19960	; 0x4df8
   13518:	str	r2, [sp, #12]
   1351c:	movt	r1, #1
   13520:	mov	r2, r3
   13524:	str	r1, [sp, #24]
   13528:	mov	r3, #28
   1352c:	add	r1, sp, #232	; 0xe8
   13530:	str	r3, [sp, #16]
   13534:	add	r3, sp, #224	; 0xe0
   13538:	str	r1, [sp, #8]
   1353c:	add	r1, sp, #212	; 0xd4
   13540:	str	r3, [sp, #32]
   13544:	add	r3, sp, #216	; 0xd8
   13548:	str	r1, [sp, #20]
   1354c:	movw	r1, #19868	; 0x4d9c
   13550:	ldr	r0, [sp, #96]	; 0x60
   13554:	movt	r1, #1
   13558:	bl	11538 <gst_structure_get@plt>
   1355c:	add	r5, sp, #5248	; 0x1480
   13560:	movw	r3, #60520	; 0xec68
   13564:	movt	r3, #65535	; 0xffff
   13568:	ldr	r0, [r8, #4]
   1356c:	ldr	r4, [r5, r3]
   13570:	mov	r1, r4
   13574:	bl	11544 <g_hash_table_lookup@plt>
   13578:	cmp	r0, #0
   1357c:	beq	13a8c <g_slice_alloc0@plt+0x24a0>
   13580:	add	ip, sp, #5248	; 0x1480
   13584:	movw	r3, #60512	; 0xec60
   13588:	movt	r3, #65535	; 0xffff
   1358c:	add	lr, sp, #5248	; 0x1480
   13590:	movw	r1, #60500	; 0xec54
   13594:	movt	r1, #65535	; 0xffff
   13598:	ldrd	r2, [r3, ip]
   1359c:	movw	ip, #60504	; 0xec58
   135a0:	movt	ip, #65535	; 0xffff
   135a4:	ldr	r1, [lr, r1]
   135a8:	strd	r2, [r0]
   135ac:	ldrd	r2, [r8, #48]	; 0x30
   135b0:	ldrd	r4, [lr, ip]
   135b4:	str	r1, [r0, #8]
   135b8:	cmp	r3, r5
   135bc:	cmpeq	r2, r4
   135c0:	movcc	r2, r4
   135c4:	ldr	r4, [sp, #144]	; 0x90
   135c8:	movcc	r3, r5
   135cc:	strd	r2, [r4, #48]	; 0x30
   135d0:	b	12c58 <g_slice_alloc0@plt+0x166c>
   135d4:	ldr	r5, [r0, r2, lsl #2]
   135d8:	cmp	r5, #0
   135dc:	beq	134d0 <g_slice_alloc0@plt+0x1ee4>
   135e0:	ldr	r3, [ip, #108]	; 0x6c
   135e4:	movw	lr, #60496	; 0xec50
   135e8:	movw	r0, #60512	; 0xec60
   135ec:	movt	lr, #65535	; 0xffff
   135f0:	movt	r0, #65535	; 0xffff
   135f4:	movw	r2, #60500	; 0xec54
   135f8:	movt	r2, #65535	; 0xffff
   135fc:	str	r2, [sp, #88]	; 0x58
   13600:	add	r2, sp, #5248	; 0x1480
   13604:	cmn	r3, #1
   13608:	movw	r1, #60520	; 0xec68
   1360c:	movt	r1, #65535	; 0xffff
   13610:	ldr	lr, [r2, lr]
   13614:	ldrd	r2, [r2, r0]
   13618:	add	r0, sp, #5248	; 0x1480
   1361c:	str	lr, [sp, #168]	; 0xa8
   13620:	strd	r2, [sp, #176]	; 0xb0
   13624:	add	r3, sp, #5248	; 0x1480
   13628:	ldr	lr, [sp, #88]	; 0x58
   1362c:	ldrd	r2, [r3, r1]
   13630:	ldreq	r1, [sp, #92]	; 0x5c
   13634:	ldr	lr, [r0, lr]
   13638:	strd	r2, [sp, #184]	; 0xb8
   1363c:	ldr	r3, [ip, #104]	; 0x68
   13640:	streq	r1, [ip, #108]	; 0x6c
   13644:	cmp	r3, #0
   13648:	str	lr, [sp, #88]	; 0x58
   1364c:	beq	13674 <g_slice_alloc0@plt+0x2088>
   13650:	mov	r1, r3
   13654:	ldr	r0, [r8, #4]
   13658:	str	r3, [sp, #104]	; 0x68
   1365c:	str	ip, [sp, #108]	; 0x6c
   13660:	bl	11544 <g_hash_table_lookup@plt>
   13664:	ldr	r3, [sp, #104]	; 0x68
   13668:	ldr	ip, [sp, #108]	; 0x6c
   1366c:	cmp	r0, #0
   13670:	beq	13a98 <g_slice_alloc0@plt+0x24ac>
   13674:	ldr	r3, [ip, #20]
   13678:	ldr	r0, [ip, #72]	; 0x48
   1367c:	ldr	r2, [sp, #168]	; 0xa8
   13680:	add	r1, r3, #1
   13684:	str	r1, [ip, #20]
   13688:	str	ip, [sp, #108]	; 0x6c
   1368c:	mla	r0, r0, r3, r2
   13690:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   13694:	ldr	ip, [sp, #108]	; 0x6c
   13698:	ldr	r2, [sp, #168]	; 0xa8
   1369c:	ldr	r3, [ip, #64]	; 0x40
   136a0:	cmp	r2, r3
   136a4:	strcc	r2, [ip, #64]	; 0x40
   136a8:	str	r0, [ip, #72]	; 0x48
   136ac:	bcc	136c0 <g_slice_alloc0@plt+0x20d4>
   136b0:	ldr	r2, [sp, #168]	; 0xa8
   136b4:	ldr	r3, [ip, #68]	; 0x44
   136b8:	cmp	r2, r3
   136bc:	strhi	r2, [ip, #68]	; 0x44
   136c0:	ldrd	r0, [ip, #88]	; 0x58
   136c4:	mvn	r2, #0
   136c8:	mvn	r3, #0
   136cc:	cmp	r1, r3
   136d0:	cmpeq	r0, r2
   136d4:	ldrdeq	r2, [sp, #152]	; 0x98
   136d8:	strdeq	r2, [ip, #80]	; 0x50
   136dc:	ldr	r3, [sp, #88]	; 0x58
   136e0:	tst	r3, #16
   136e4:	ldrd	r2, [sp, #152]	; 0x98
   136e8:	strd	r2, [ip, #88]	; 0x58
   136ec:	ldrne	r3, [ip, #24]
   136f0:	ldr	r2, [sp, #88]	; 0x58
   136f4:	addne	r3, r3, #1
   136f8:	strne	r3, [ip, #24]
   136fc:	ldr	r3, [sp, #88]	; 0x58
   13700:	tst	r3, #32
   13704:	ldrne	r3, [ip, #28]
   13708:	addne	r3, r3, #1
   1370c:	strne	r3, [ip, #28]
   13710:	tst	r2, #64	; 0x40
   13714:	ldr	r2, [sp, #88]	; 0x58
   13718:	ldrne	r3, [ip, #32]
   1371c:	addne	r3, r3, #1
   13720:	strne	r3, [ip, #32]
   13724:	ldr	r3, [sp, #88]	; 0x58
   13728:	tst	r3, #128	; 0x80
   1372c:	ldrne	r3, [ip, #36]	; 0x24
   13730:	addne	r3, r3, #1
   13734:	strne	r3, [ip, #36]	; 0x24
   13738:	tst	r2, #256	; 0x100
   1373c:	ldr	r2, [sp, #88]	; 0x58
   13740:	ldrne	r3, [ip, #40]	; 0x28
   13744:	addne	r3, r3, #1
   13748:	strne	r3, [ip, #40]	; 0x28
   1374c:	ldr	r3, [sp, #88]	; 0x58
   13750:	tst	r3, #512	; 0x200
   13754:	ldrne	r3, [ip, #44]	; 0x2c
   13758:	addne	r3, r3, #1
   1375c:	strne	r3, [ip, #44]	; 0x2c
   13760:	tst	r2, #1024	; 0x400
   13764:	ldr	r2, [sp, #88]	; 0x58
   13768:	ldrne	r3, [ip, #48]	; 0x30
   1376c:	addne	r3, r3, #1
   13770:	strne	r3, [ip, #48]	; 0x30
   13774:	ldr	r3, [sp, #88]	; 0x58
   13778:	tst	r3, #2048	; 0x800
   1377c:	ldrne	r3, [ip, #52]	; 0x34
   13780:	addne	r3, r3, #1
   13784:	strne	r3, [ip, #52]	; 0x34
   13788:	tst	r2, #4096	; 0x1000
   1378c:	ldrne	r3, [ip, #56]	; 0x38
   13790:	addne	r3, r3, #1
   13794:	strne	r3, [ip, #56]	; 0x38
   13798:	ldr	r3, [sp, #88]	; 0x58
   1379c:	tst	r3, #8192	; 0x2000
   137a0:	ldrne	r3, [ip, #60]	; 0x3c
   137a4:	addne	r3, r3, #1
   137a8:	strne	r3, [ip, #60]	; 0x3c
   137ac:	ldr	lr, [sp, #184]	; 0xb8
   137b0:	ldr	r0, [sp, #188]	; 0xbc
   137b4:	ldr	r1, [sp, #176]	; 0xb0
   137b8:	and	r3, lr, r0
   137bc:	ldr	lr, [sp, #180]	; 0xb4
   137c0:	and	r2, r1, lr
   137c4:	cmn	r2, #1
   137c8:	cmnne	r3, #1
   137cc:	bne	13958 <g_slice_alloc0@plt+0x236c>
   137d0:	mvn	r2, #0
   137d4:	mvn	r3, #0
   137d8:	strd	r2, [ip, #96]	; 0x60
   137dc:	ldr	r3, [ip, #16]
   137e0:	cmp	r3, #1
   137e4:	movw	r3, #60496	; 0xec50
   137e8:	movt	r3, #65535	; 0xffff
   137ec:	beq	139a4 <g_slice_alloc0@plt+0x23b8>
   137f0:	ldrd	r0, [r5, #32]
   137f4:	movw	lr, #60504	; 0xec58
   137f8:	movt	lr, #65535	; 0xffff
   137fc:	strd	r0, [sp, #120]	; 0x78
   13800:	add	r1, sp, #5248	; 0x1480
   13804:	ldr	ip, [r1, r3]
   13808:	mov	r3, #0
   1380c:	ldrd	r0, [sp, #120]	; 0x78
   13810:	mov	r2, ip
   13814:	adds	r0, r0, r2
   13818:	adc	r1, r1, r3
   1381c:	strd	r0, [sp, #168]	; 0xa8
   13820:	ldrd	r0, [r4, #24]
   13824:	ldr	ip, [r5, #20]
   13828:	adds	r0, r0, r2
   1382c:	adc	r1, r1, r3
   13830:	strd	r0, [sp, #176]	; 0xb0
   13834:	add	r1, sp, #5248	; 0x1480
   13838:	ldrd	r2, [r5, #56]	; 0x38
   1383c:	add	ip, ip, #1
   13840:	ldrd	r0, [r1, lr]
   13844:	strd	r2, [sp, #112]	; 0x70
   13848:	mvn	r2, #0
   1384c:	mvn	r3, #0
   13850:	strd	r0, [sp, #152]	; 0x98
   13854:	ldrd	r0, [sp, #112]	; 0x70
   13858:	cmp	r1, r3
   1385c:	cmpeq	r0, r2
   13860:	ldr	r3, [r4, #16]
   13864:	ldrd	r0, [sp, #176]	; 0xb0
   13868:	str	ip, [r5, #20]
   1386c:	add	r3, r3, #1
   13870:	str	r3, [r4, #16]
   13874:	ldrd	r2, [sp, #168]	; 0xa8
   13878:	strd	r2, [r5, #32]
   1387c:	strd	r0, [r4, #24]
   13880:	beq	13a80 <g_slice_alloc0@plt+0x2494>
   13884:	ldrd	r2, [r4, #56]	; 0x38
   13888:	mvn	r0, #0
   1388c:	mvn	r1, #0
   13890:	cmp	r3, r1
   13894:	cmpeq	r2, r0
   13898:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   1389c:	ldrd	r2, [sp, #152]	; 0x98
   138a0:	adds	r2, r2, #1
   138a4:	adc	r3, r3, #0
   138a8:	strd	r2, [r4, #56]	; 0x38
   138ac:	b	12c58 <g_slice_alloc0@plt+0x166c>
   138b0:	ldr	r2, [r2]
   138b4:	ldr	r2, [r2, r3, lsl #2]
   138b8:	cmp	r2, #0
   138bc:	beq	13268 <g_slice_alloc0@plt+0x1c7c>
   138c0:	movw	r3, #60512	; 0xec60
   138c4:	add	r0, sp, #5248	; 0x1480
   138c8:	movt	r3, #65535	; 0xffff
   138cc:	ldr	r3, [r0, r3]
   138d0:	cmn	r3, #1
   138d4:	beq	138ec <g_slice_alloc0@plt+0x2300>
   138d8:	ldr	r4, [sp, #144]	; 0x90
   138dc:	ldr	r2, [r4]
   138e0:	ldr	r1, [r2, #4]
   138e4:	cmp	r3, r1
   138e8:	bcc	13938 <g_slice_alloc0@plt+0x234c>
   138ec:	ldr	r2, [r9]
   138f0:	cmp	r2, #3
   138f4:	bls	12c58 <g_slice_alloc0@plt+0x166c>
   138f8:	ldr	r5, [sp, #136]	; 0x88
   138fc:	movw	r2, #342	; 0x156
   13900:	str	r3, [sp, #12]
   13904:	mov	r1, #0
   13908:	str	r2, [sp]
   1390c:	movw	r3, #20084	; 0x4e74
   13910:	str	r1, [sp, #4]
   13914:	movt	r3, #1
   13918:	movw	r2, #20004	; 0x4e24
   1391c:	str	r3, [sp, #8]
   13920:	movt	r2, #1
   13924:	ldr	r0, [r5]
   13928:	mov	r1, #4
   1392c:	ldr	r3, [pc, #104]	; 1399c <g_slice_alloc0@plt+0x23b0>
   13930:	bl	11478 <gst_debug_log@plt>
   13934:	b	12c58 <g_slice_alloc0@plt+0x166c>
   13938:	ldr	r2, [r2]
   1393c:	ldr	r2, [r2, r3, lsl #2]
   13940:	cmp	r2, #0
   13944:	ldrne	r3, [r2, #40]	; 0x28
   13948:	addne	r3, r3, #1
   1394c:	strne	r3, [r2, #40]	; 0x28
   13950:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   13954:	b	138ec <g_slice_alloc0@plt+0x2300>
   13958:	ldrd	r2, [sp, #184]	; 0xb8
   1395c:	ldrd	r0, [sp, #176]	; 0xb0
   13960:	adds	r2, r2, r0
   13964:	adc	r3, r3, r1
   13968:	strd	r2, [ip, #96]	; 0x60
   1396c:	b	137dc <g_slice_alloc0@plt+0x21f0>
   13970:	ldr	r2, [r2]
   13974:	ldr	r2, [r2, r3, lsl #2]
   13978:	cmp	r2, #0
   1397c:	ldrne	r3, [r2, #44]	; 0x2c
   13980:	addne	r3, r3, #1
   13984:	strne	r3, [r2, #44]	; 0x2c
   13988:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   1398c:	b	1335c <g_slice_alloc0@plt+0x1d70>
   13990:	muleq	r2, r0, r1
   13994:			; <UNDEFINED> instruction: 0x00014ab0
   13998:	andeq	r4, r1, ip, ror sl
   1399c:	andeq	r4, r1, ip, lsl #21
   139a0:	muleq	r1, ip, sl
   139a4:	add	r1, sp, #5248	; 0x1480
   139a8:	movw	lr, #60504	; 0xec58
   139ac:	movt	lr, #65535	; 0xffff
   139b0:	ldr	ip, [r1, r3]
   139b4:	mov	r1, #0
   139b8:	ldrd	r2, [r5, #24]
   139bc:	mov	r0, ip
   139c0:	ldr	ip, [r4, #20]
   139c4:	strd	r2, [sp, #128]	; 0x80
   139c8:	ldrd	r2, [r4, #32]
   139cc:	add	ip, ip, #1
   139d0:	adds	r2, r2, r0
   139d4:	adc	r3, r3, r1
   139d8:	strd	r2, [sp, #168]	; 0xa8
   139dc:	ldrd	r2, [sp, #128]	; 0x80
   139e0:	adds	r2, r2, r0
   139e4:	adc	r3, r3, r1
   139e8:	add	r1, sp, #5248	; 0x1480
   139ec:	strd	r2, [sp, #176]	; 0xb0
   139f0:	mvn	r2, #0
   139f4:	ldrd	r0, [r1, lr]
   139f8:	mvn	r3, #0
   139fc:	strd	r0, [sp, #152]	; 0x98
   13a00:	ldrd	r0, [r4, #56]	; 0x38
   13a04:	cmp	r1, r3
   13a08:	cmpeq	r0, r2
   13a0c:	ldr	r3, [r5, #16]
   13a10:	ldrd	r0, [sp, #176]	; 0xb0
   13a14:	str	ip, [r4, #20]
   13a18:	add	r3, r3, #1
   13a1c:	str	r3, [r5, #16]
   13a20:	ldrd	r2, [sp, #168]	; 0xa8
   13a24:	strd	r2, [r4, #32]
   13a28:	strd	r0, [r5, #24]
   13a2c:	ldrdeq	r0, [sp, #152]	; 0x98
   13a30:	strdeq	r0, [r4, #56]	; 0x38
   13a34:	ldrd	r2, [r5, #56]	; 0x38
   13a38:	mvn	r0, #0
   13a3c:	mvn	r1, #0
   13a40:	cmp	r3, r1
   13a44:	cmpeq	r2, r0
   13a48:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   13a4c:	ldrd	r2, [sp, #152]	; 0x98
   13a50:	adds	r2, r2, #1
   13a54:	adc	r3, r3, #0
   13a58:	strd	r2, [r5, #56]	; 0x38
   13a5c:	b	12c58 <g_slice_alloc0@plt+0x166c>
   13a60:	ldr	r2, [r2]
   13a64:	ldr	r2, [r2, r3, lsl #2]
   13a68:	cmp	r2, #0
   13a6c:	ldrne	r3, [r2, #48]	; 0x30
   13a70:	addne	r3, r3, #1
   13a74:	strne	r3, [r2, #48]	; 0x30
   13a78:	bne	12c58 <g_slice_alloc0@plt+0x166c>
   13a7c:	b	12fc8 <g_slice_alloc0@plt+0x19dc>
   13a80:	ldrd	r2, [sp, #152]	; 0x98
   13a84:	strd	r2, [r5, #56]	; 0x38
   13a88:	b	13884 <g_slice_alloc0@plt+0x2298>
   13a8c:	mov	r0, r4
   13a90:	bl	115f8 <g_slice_alloc0@plt+0xc>
   13a94:	b	13580 <g_slice_alloc0@plt+0x1f94>
   13a98:	mov	r0, r3
   13a9c:	str	ip, [sp, #108]	; 0x6c
   13aa0:	bl	115f8 <g_slice_alloc0@plt+0xc>
   13aa4:	ldr	ip, [sp, #108]	; 0x6c
   13aa8:	b	13674 <g_slice_alloc0@plt+0x2088>
   13aac:	bl	1152c <__stack_chk_fail@plt>
   13ab0:	subs	r2, r1, #1
   13ab4:	bxeq	lr
   13ab8:	bcc	13c90 <g_slice_alloc0@plt+0x26a4>
   13abc:	cmp	r0, r1
   13ac0:	bls	13c74 <g_slice_alloc0@plt+0x2688>
   13ac4:	tst	r1, r2
   13ac8:	beq	13c80 <g_slice_alloc0@plt+0x2694>
   13acc:	clz	r3, r0
   13ad0:	clz	r2, r1
   13ad4:	sub	r3, r2, r3
   13ad8:	rsbs	r3, r3, #31
   13adc:	addne	r3, r3, r3, lsl #1
   13ae0:	mov	r2, #0
   13ae4:	addne	pc, pc, r3, lsl #2
   13ae8:	nop	{0}
   13aec:	cmp	r0, r1, lsl #31
   13af0:	adc	r2, r2, r2
   13af4:	subcs	r0, r0, r1, lsl #31
   13af8:	cmp	r0, r1, lsl #30
   13afc:	adc	r2, r2, r2
   13b00:	subcs	r0, r0, r1, lsl #30
   13b04:	cmp	r0, r1, lsl #29
   13b08:	adc	r2, r2, r2
   13b0c:	subcs	r0, r0, r1, lsl #29
   13b10:	cmp	r0, r1, lsl #28
   13b14:	adc	r2, r2, r2
   13b18:	subcs	r0, r0, r1, lsl #28
   13b1c:	cmp	r0, r1, lsl #27
   13b20:	adc	r2, r2, r2
   13b24:	subcs	r0, r0, r1, lsl #27
   13b28:	cmp	r0, r1, lsl #26
   13b2c:	adc	r2, r2, r2
   13b30:	subcs	r0, r0, r1, lsl #26
   13b34:	cmp	r0, r1, lsl #25
   13b38:	adc	r2, r2, r2
   13b3c:	subcs	r0, r0, r1, lsl #25
   13b40:	cmp	r0, r1, lsl #24
   13b44:	adc	r2, r2, r2
   13b48:	subcs	r0, r0, r1, lsl #24
   13b4c:	cmp	r0, r1, lsl #23
   13b50:	adc	r2, r2, r2
   13b54:	subcs	r0, r0, r1, lsl #23
   13b58:	cmp	r0, r1, lsl #22
   13b5c:	adc	r2, r2, r2
   13b60:	subcs	r0, r0, r1, lsl #22
   13b64:	cmp	r0, r1, lsl #21
   13b68:	adc	r2, r2, r2
   13b6c:	subcs	r0, r0, r1, lsl #21
   13b70:	cmp	r0, r1, lsl #20
   13b74:	adc	r2, r2, r2
   13b78:	subcs	r0, r0, r1, lsl #20
   13b7c:	cmp	r0, r1, lsl #19
   13b80:	adc	r2, r2, r2
   13b84:	subcs	r0, r0, r1, lsl #19
   13b88:	cmp	r0, r1, lsl #18
   13b8c:	adc	r2, r2, r2
   13b90:	subcs	r0, r0, r1, lsl #18
   13b94:	cmp	r0, r1, lsl #17
   13b98:	adc	r2, r2, r2
   13b9c:	subcs	r0, r0, r1, lsl #17
   13ba0:	cmp	r0, r1, lsl #16
   13ba4:	adc	r2, r2, r2
   13ba8:	subcs	r0, r0, r1, lsl #16
   13bac:	cmp	r0, r1, lsl #15
   13bb0:	adc	r2, r2, r2
   13bb4:	subcs	r0, r0, r1, lsl #15
   13bb8:	cmp	r0, r1, lsl #14
   13bbc:	adc	r2, r2, r2
   13bc0:	subcs	r0, r0, r1, lsl #14
   13bc4:	cmp	r0, r1, lsl #13
   13bc8:	adc	r2, r2, r2
   13bcc:	subcs	r0, r0, r1, lsl #13
   13bd0:	cmp	r0, r1, lsl #12
   13bd4:	adc	r2, r2, r2
   13bd8:	subcs	r0, r0, r1, lsl #12
   13bdc:	cmp	r0, r1, lsl #11
   13be0:	adc	r2, r2, r2
   13be4:	subcs	r0, r0, r1, lsl #11
   13be8:	cmp	r0, r1, lsl #10
   13bec:	adc	r2, r2, r2
   13bf0:	subcs	r0, r0, r1, lsl #10
   13bf4:	cmp	r0, r1, lsl #9
   13bf8:	adc	r2, r2, r2
   13bfc:	subcs	r0, r0, r1, lsl #9
   13c00:	cmp	r0, r1, lsl #8
   13c04:	adc	r2, r2, r2
   13c08:	subcs	r0, r0, r1, lsl #8
   13c0c:	cmp	r0, r1, lsl #7
   13c10:	adc	r2, r2, r2
   13c14:	subcs	r0, r0, r1, lsl #7
   13c18:	cmp	r0, r1, lsl #6
   13c1c:	adc	r2, r2, r2
   13c20:	subcs	r0, r0, r1, lsl #6
   13c24:	cmp	r0, r1, lsl #5
   13c28:	adc	r2, r2, r2
   13c2c:	subcs	r0, r0, r1, lsl #5
   13c30:	cmp	r0, r1, lsl #4
   13c34:	adc	r2, r2, r2
   13c38:	subcs	r0, r0, r1, lsl #4
   13c3c:	cmp	r0, r1, lsl #3
   13c40:	adc	r2, r2, r2
   13c44:	subcs	r0, r0, r1, lsl #3
   13c48:	cmp	r0, r1, lsl #2
   13c4c:	adc	r2, r2, r2
   13c50:	subcs	r0, r0, r1, lsl #2
   13c54:	cmp	r0, r1, lsl #1
   13c58:	adc	r2, r2, r2
   13c5c:	subcs	r0, r0, r1, lsl #1
   13c60:	cmp	r0, r1
   13c64:	adc	r2, r2, r2
   13c68:	subcs	r0, r0, r1
   13c6c:	mov	r0, r2
   13c70:	bx	lr
   13c74:	moveq	r0, #1
   13c78:	movne	r0, #0
   13c7c:	bx	lr
   13c80:	clz	r2, r1
   13c84:	rsb	r2, r2, #31
   13c88:	lsr	r0, r0, r2
   13c8c:	bx	lr
   13c90:	cmp	r0, #0
   13c94:	mvnne	r0, #0
   13c98:	b	140b0 <g_slice_alloc0@plt+0x2ac4>
   13c9c:	cmp	r1, #0
   13ca0:	beq	13c90 <g_slice_alloc0@plt+0x26a4>
   13ca4:	push	{r0, r1, lr}
   13ca8:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   13cac:	pop	{r1, r2, lr}
   13cb0:	mul	r3, r2, r0
   13cb4:	sub	r1, r1, r3
   13cb8:	bx	lr
   13cbc:	eor	r1, r1, #-2147483648	; 0x80000000
   13cc0:	b	13cc8 <g_slice_alloc0@plt+0x26dc>
   13cc4:	eor	r3, r3, #-2147483648	; 0x80000000
   13cc8:	push	{r4, r5, lr}
   13ccc:	lsl	r4, r1, #1
   13cd0:	lsl	r5, r3, #1
   13cd4:	teq	r4, r5
   13cd8:	teqeq	r0, r2
   13cdc:	orrsne	ip, r4, r0
   13ce0:	orrsne	ip, r5, r2
   13ce4:	mvnsne	ip, r4, asr #21
   13ce8:	mvnsne	ip, r5, asr #21
   13cec:	beq	13ed8 <g_slice_alloc0@plt+0x28ec>
   13cf0:	lsr	r4, r4, #21
   13cf4:	rsbs	r5, r4, r5, lsr #21
   13cf8:	rsblt	r5, r5, #0
   13cfc:	ble	13d1c <g_slice_alloc0@plt+0x2730>
   13d00:	add	r4, r4, r5
   13d04:	eor	r2, r0, r2
   13d08:	eor	r3, r1, r3
   13d0c:	eor	r0, r2, r0
   13d10:	eor	r1, r3, r1
   13d14:	eor	r2, r0, r2
   13d18:	eor	r3, r1, r3
   13d1c:	cmp	r5, #54	; 0x36
   13d20:	pophi	{r4, r5, pc}
   13d24:	tst	r1, #-2147483648	; 0x80000000
   13d28:	lsl	r1, r1, #12
   13d2c:	mov	ip, #1048576	; 0x100000
   13d30:	orr	r1, ip, r1, lsr #12
   13d34:	beq	13d40 <g_slice_alloc0@plt+0x2754>
   13d38:	rsbs	r0, r0, #0
   13d3c:	rsc	r1, r1, #0
   13d40:	tst	r3, #-2147483648	; 0x80000000
   13d44:	lsl	r3, r3, #12
   13d48:	orr	r3, ip, r3, lsr #12
   13d4c:	beq	13d58 <g_slice_alloc0@plt+0x276c>
   13d50:	rsbs	r2, r2, #0
   13d54:	rsc	r3, r3, #0
   13d58:	teq	r4, r5
   13d5c:	beq	13ec0 <g_slice_alloc0@plt+0x28d4>
   13d60:	sub	r4, r4, #1
   13d64:	rsbs	lr, r5, #32
   13d68:	blt	13d84 <g_slice_alloc0@plt+0x2798>
   13d6c:	lsl	ip, r2, lr
   13d70:	adds	r0, r0, r2, lsr r5
   13d74:	adc	r1, r1, #0
   13d78:	adds	r0, r0, r3, lsl lr
   13d7c:	adcs	r1, r1, r3, asr r5
   13d80:	b	13da0 <g_slice_alloc0@plt+0x27b4>
   13d84:	sub	r5, r5, #32
   13d88:	add	lr, lr, #32
   13d8c:	cmp	r2, #1
   13d90:	lsl	ip, r3, lr
   13d94:	orrcs	ip, ip, #2
   13d98:	adds	r0, r0, r3, asr r5
   13d9c:	adcs	r1, r1, r3, asr #31
   13da0:	and	r5, r1, #-2147483648	; 0x80000000
   13da4:	bpl	13db4 <g_slice_alloc0@plt+0x27c8>
   13da8:	rsbs	ip, ip, #0
   13dac:	rscs	r0, r0, #0
   13db0:	rsc	r1, r1, #0
   13db4:	cmp	r1, #1048576	; 0x100000
   13db8:	bcc	13df8 <g_slice_alloc0@plt+0x280c>
   13dbc:	cmp	r1, #2097152	; 0x200000
   13dc0:	bcc	13de0 <g_slice_alloc0@plt+0x27f4>
   13dc4:	lsrs	r1, r1, #1
   13dc8:	rrxs	r0, r0
   13dcc:	rrx	ip, ip
   13dd0:	add	r4, r4, #1
   13dd4:	lsl	r2, r4, #21
   13dd8:	cmn	r2, #4194304	; 0x400000
   13ddc:	bcs	13f38 <g_slice_alloc0@plt+0x294c>
   13de0:	cmp	ip, #-2147483648	; 0x80000000
   13de4:	lsrseq	ip, r0, #1
   13de8:	adcs	r0, r0, #0
   13dec:	adc	r1, r1, r4, lsl #20
   13df0:	orr	r1, r1, r5
   13df4:	pop	{r4, r5, pc}
   13df8:	lsls	ip, ip, #1
   13dfc:	adcs	r0, r0, r0
   13e00:	adc	r1, r1, r1
   13e04:	tst	r1, #1048576	; 0x100000
   13e08:	sub	r4, r4, #1
   13e0c:	bne	13de0 <g_slice_alloc0@plt+0x27f4>
   13e10:	teq	r1, #0
   13e14:	moveq	r1, r0
   13e18:	moveq	r0, #0
   13e1c:	clz	r3, r1
   13e20:	addeq	r3, r3, #32
   13e24:	sub	r3, r3, #11
   13e28:	subs	r2, r3, #32
   13e2c:	bge	13e50 <g_slice_alloc0@plt+0x2864>
   13e30:	adds	r2, r2, #12
   13e34:	ble	13e4c <g_slice_alloc0@plt+0x2860>
   13e38:	add	ip, r2, #20
   13e3c:	rsb	r2, r2, #12
   13e40:	lsl	r0, r1, ip
   13e44:	lsr	r1, r1, r2
   13e48:	b	13e60 <g_slice_alloc0@plt+0x2874>
   13e4c:	add	r2, r2, #20
   13e50:	rsble	ip, r2, #32
   13e54:	lsl	r1, r1, r2
   13e58:	orrle	r1, r1, r0, lsr ip
   13e5c:	lslle	r0, r0, r2
   13e60:	subs	r4, r4, r3
   13e64:	addge	r1, r1, r4, lsl #20
   13e68:	orrge	r1, r1, r5
   13e6c:	popge	{r4, r5, pc}
   13e70:	mvn	r4, r4
   13e74:	subs	r4, r4, #31
   13e78:	bge	13eb4 <g_slice_alloc0@plt+0x28c8>
   13e7c:	adds	r4, r4, #12
   13e80:	bgt	13e9c <g_slice_alloc0@plt+0x28b0>
   13e84:	add	r4, r4, #20
   13e88:	rsb	r2, r4, #32
   13e8c:	lsr	r0, r0, r4
   13e90:	orr	r0, r0, r1, lsl r2
   13e94:	orr	r1, r5, r1, lsr r4
   13e98:	pop	{r4, r5, pc}
   13e9c:	rsb	r4, r4, #12
   13ea0:	rsb	r2, r4, #32
   13ea4:	lsr	r0, r0, r2
   13ea8:	orr	r0, r0, r1, lsl r4
   13eac:	mov	r1, r5
   13eb0:	pop	{r4, r5, pc}
   13eb4:	lsr	r0, r1, r4
   13eb8:	mov	r1, r5
   13ebc:	pop	{r4, r5, pc}
   13ec0:	teq	r4, #0
   13ec4:	eor	r3, r3, #1048576	; 0x100000
   13ec8:	eoreq	r1, r1, #1048576	; 0x100000
   13ecc:	addeq	r4, r4, #1
   13ed0:	subne	r5, r5, #1
   13ed4:	b	13d60 <g_slice_alloc0@plt+0x2774>
   13ed8:	mvns	ip, r4, asr #21
   13edc:	mvnsne	ip, r5, asr #21
   13ee0:	beq	13f48 <g_slice_alloc0@plt+0x295c>
   13ee4:	teq	r4, r5
   13ee8:	teqeq	r0, r2
   13eec:	beq	13f00 <g_slice_alloc0@plt+0x2914>
   13ef0:	orrs	ip, r4, r0
   13ef4:	moveq	r1, r3
   13ef8:	moveq	r0, r2
   13efc:	pop	{r4, r5, pc}
   13f00:	teq	r1, r3
   13f04:	movne	r1, #0
   13f08:	movne	r0, #0
   13f0c:	popne	{r4, r5, pc}
   13f10:	lsrs	ip, r4, #21
   13f14:	bne	13f28 <g_slice_alloc0@plt+0x293c>
   13f18:	lsls	r0, r0, #1
   13f1c:	adcs	r1, r1, r1
   13f20:	orrcs	r1, r1, #-2147483648	; 0x80000000
   13f24:	pop	{r4, r5, pc}
   13f28:	adds	r4, r4, #4194304	; 0x400000
   13f2c:	addcc	r1, r1, #1048576	; 0x100000
   13f30:	popcc	{r4, r5, pc}
   13f34:	and	r5, r1, #-2147483648	; 0x80000000
   13f38:	orr	r1, r5, #2130706432	; 0x7f000000
   13f3c:	orr	r1, r1, #15728640	; 0xf00000
   13f40:	mov	r0, #0
   13f44:	pop	{r4, r5, pc}
   13f48:	mvns	ip, r4, asr #21
   13f4c:	movne	r1, r3
   13f50:	movne	r0, r2
   13f54:	mvnseq	ip, r5, asr #21
   13f58:	movne	r3, r1
   13f5c:	movne	r2, r0
   13f60:	orrs	r4, r0, r1, lsl #12
   13f64:	orrseq	r5, r2, r3, lsl #12
   13f68:	teqeq	r1, r3
   13f6c:	orrne	r1, r1, #524288	; 0x80000
   13f70:	pop	{r4, r5, pc}
   13f74:	teq	r0, #0
   13f78:	moveq	r1, #0
   13f7c:	bxeq	lr
   13f80:	push	{r4, r5, lr}
   13f84:	mov	r4, #1024	; 0x400
   13f88:	add	r4, r4, #50	; 0x32
   13f8c:	mov	r5, #0
   13f90:	mov	r1, #0
   13f94:	b	13e10 <g_slice_alloc0@plt+0x2824>
   13f98:	teq	r0, #0
   13f9c:	moveq	r1, #0
   13fa0:	bxeq	lr
   13fa4:	push	{r4, r5, lr}
   13fa8:	mov	r4, #1024	; 0x400
   13fac:	add	r4, r4, #50	; 0x32
   13fb0:	ands	r5, r0, #-2147483648	; 0x80000000
   13fb4:	rsbmi	r0, r0, #0
   13fb8:	mov	r1, #0
   13fbc:	b	13e10 <g_slice_alloc0@plt+0x2824>
   13fc0:	lsls	r2, r0, #1
   13fc4:	asr	r1, r2, #3
   13fc8:	rrx	r1, r1
   13fcc:	lsl	r0, r2, #28
   13fd0:	andsne	r3, r2, #-16777216	; 0xff000000
   13fd4:	teqne	r3, #-16777216	; 0xff000000
   13fd8:	eorne	r1, r1, #939524096	; 0x38000000
   13fdc:	bxne	lr
   13fe0:	teq	r2, #0
   13fe4:	teqne	r3, #-16777216	; 0xff000000
   13fe8:	bxeq	lr
   13fec:	push	{r4, r5, lr}
   13ff0:	mov	r4, #896	; 0x380
   13ff4:	and	r5, r1, #-2147483648	; 0x80000000
   13ff8:	bic	r1, r1, #-2147483648	; 0x80000000
   13ffc:	b	13e10 <g_slice_alloc0@plt+0x2824>
   14000:	orrs	r2, r0, r1
   14004:	bxeq	lr
   14008:	push	{r4, r5, lr}
   1400c:	mov	r5, #0
   14010:	b	14030 <g_slice_alloc0@plt+0x2a44>
   14014:	orrs	r2, r0, r1
   14018:	bxeq	lr
   1401c:	push	{r4, r5, lr}
   14020:	ands	r5, r1, #-2147483648	; 0x80000000
   14024:	bpl	14030 <g_slice_alloc0@plt+0x2a44>
   14028:	rsbs	r0, r0, #0
   1402c:	rsc	r1, r1, #0
   14030:	mov	r4, #1024	; 0x400
   14034:	add	r4, r4, #50	; 0x32
   14038:	lsrs	ip, r1, #22
   1403c:	beq	13db4 <g_slice_alloc0@plt+0x27c8>
   14040:	mov	r2, #3
   14044:	lsrs	ip, ip, #3
   14048:	addne	r2, r2, #3
   1404c:	lsrs	ip, ip, #3
   14050:	addne	r2, r2, #3
   14054:	add	r2, r2, ip, lsr #3
   14058:	rsb	r3, r2, #32
   1405c:	lsl	ip, r0, r3
   14060:	lsr	r0, r0, r2
   14064:	orr	r0, r0, r1, lsl r3
   14068:	lsr	r1, r1, r2
   1406c:	add	r4, r4, r2
   14070:	b	13db4 <g_slice_alloc0@plt+0x27c8>
   14074:	cmp	r3, #0
   14078:	cmpeq	r2, #0
   1407c:	bne	14094 <g_slice_alloc0@plt+0x2aa8>
   14080:	cmp	r1, #0
   14084:	cmpeq	r0, #0
   14088:	mvnne	r1, #0
   1408c:	mvnne	r0, #0
   14090:	b	140b0 <g_slice_alloc0@plt+0x2ac4>
   14094:	sub	sp, sp, #8
   14098:	push	{sp, lr}
   1409c:	bl	140fc <g_slice_alloc0@plt+0x2b10>
   140a0:	ldr	lr, [sp, #4]
   140a4:	add	sp, sp, #8
   140a8:	pop	{r2, r3}
   140ac:	bx	lr
   140b0:	push	{r1, lr}
   140b4:	mov	r0, #8
   140b8:	bl	114d8 <raise@plt>
   140bc:	pop	{r1, pc}
   140c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140c4:	mov	r8, r2
   140c8:	mov	r6, r0
   140cc:	mov	r7, r1
   140d0:	mov	sl, r3
   140d4:	ldr	r9, [sp, #32]
   140d8:	bl	14138 <g_slice_alloc0@plt+0x2b4c>
   140dc:	umull	r4, r5, r8, r0
   140e0:	mul	r8, r8, r1
   140e4:	mla	r2, r0, sl, r8
   140e8:	add	r5, r2, r5
   140ec:	subs	r4, r6, r4
   140f0:	sbc	r5, r7, r5
   140f4:	strd	r4, [r9]
   140f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140fc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14100:	mov	r8, r2
   14104:	mov	r6, r0
   14108:	mov	r7, r1
   1410c:	mov	r5, r3
   14110:	ldr	r9, [sp, #32]
   14114:	bl	145c4 <g_slice_alloc0@plt+0x2fd8>
   14118:	mul	r3, r0, r5
   1411c:	umull	r4, r5, r0, r8
   14120:	mla	r8, r8, r1, r3
   14124:	add	r5, r8, r5
   14128:	subs	r4, r6, r4
   1412c:	sbc	r5, r7, r5
   14130:	strd	r4, [r9]
   14134:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1413c:	rsbs	r4, r0, #0
   14140:	rsc	r5, r1, #0
   14144:	cmp	r1, #0
   14148:	mvn	r6, #0
   1414c:	sub	sp, sp, #12
   14150:	movge	r4, r0
   14154:	movge	r5, r1
   14158:	movge	r6, #0
   1415c:	cmp	r3, #0
   14160:	blt	14398 <g_slice_alloc0@plt+0x2dac>
   14164:	cmp	r3, #0
   14168:	mov	sl, r4
   1416c:	mov	ip, r5
   14170:	mov	r0, r2
   14174:	mov	r1, r3
   14178:	mov	r8, r2
   1417c:	mov	r7, r4
   14180:	mov	r9, r5
   14184:	bne	1427c <g_slice_alloc0@plt+0x2c90>
   14188:	cmp	r2, r5
   1418c:	bls	142b8 <g_slice_alloc0@plt+0x2ccc>
   14190:	clz	r3, r2
   14194:	cmp	r3, #0
   14198:	rsbne	r2, r3, #32
   1419c:	lslne	r8, r0, r3
   141a0:	lsrne	r2, r4, r2
   141a4:	lslne	r7, r4, r3
   141a8:	orrne	r9, r2, r5, lsl r3
   141ac:	lsr	r4, r8, #16
   141b0:	uxth	sl, r8
   141b4:	mov	r1, r4
   141b8:	mov	r0, r9
   141bc:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   141c0:	mov	r1, r4
   141c4:	mov	fp, r0
   141c8:	mov	r0, r9
   141cc:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   141d0:	mul	r0, sl, fp
   141d4:	lsr	r2, r7, #16
   141d8:	orr	r1, r2, r1, lsl #16
   141dc:	cmp	r0, r1
   141e0:	bls	14204 <g_slice_alloc0@plt+0x2c18>
   141e4:	adds	r1, r1, r8
   141e8:	sub	r3, fp, #1
   141ec:	bcs	14200 <g_slice_alloc0@plt+0x2c14>
   141f0:	cmp	r0, r1
   141f4:	subhi	fp, fp, #2
   141f8:	addhi	r1, r1, r8
   141fc:	bhi	14204 <g_slice_alloc0@plt+0x2c18>
   14200:	mov	fp, r3
   14204:	rsb	r9, r0, r1
   14208:	mov	r1, r4
   1420c:	uxth	r7, r7
   14210:	mov	r0, r9
   14214:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14218:	mov	r1, r4
   1421c:	mov	r5, r0
   14220:	mov	r0, r9
   14224:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14228:	mul	sl, sl, r5
   1422c:	orr	r1, r7, r1, lsl #16
   14230:	cmp	sl, r1
   14234:	bls	14254 <g_slice_alloc0@plt+0x2c68>
   14238:	adds	r8, r1, r8
   1423c:	sub	r3, r5, #1
   14240:	bcs	14250 <g_slice_alloc0@plt+0x2c64>
   14244:	cmp	sl, r8
   14248:	subhi	r5, r5, #2
   1424c:	bhi	14254 <g_slice_alloc0@plt+0x2c68>
   14250:	mov	r5, r3
   14254:	orr	r3, r5, fp, lsl #16
   14258:	mov	r4, #0
   1425c:	cmp	r6, #0
   14260:	mov	r0, r3
   14264:	mov	r1, r4
   14268:	beq	14274 <g_slice_alloc0@plt+0x2c88>
   1426c:	rsbs	r0, r0, #0
   14270:	rsc	r1, r1, #0
   14274:	add	sp, sp, #12
   14278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1427c:	cmp	r3, r5
   14280:	movhi	r4, #0
   14284:	movhi	r3, r4
   14288:	bhi	1425c <g_slice_alloc0@plt+0x2c70>
   1428c:	clz	r5, r1
   14290:	cmp	r5, #0
   14294:	bne	14484 <g_slice_alloc0@plt+0x2e98>
   14298:	cmp	r1, ip
   1429c:	cmpcs	r2, sl
   142a0:	movhi	r4, #0
   142a4:	movls	r4, #1
   142a8:	movls	r3, #1
   142ac:	movls	r4, r5
   142b0:	movhi	r3, r4
   142b4:	b	1425c <g_slice_alloc0@plt+0x2c70>
   142b8:	cmp	r2, #0
   142bc:	bne	142d0 <g_slice_alloc0@plt+0x2ce4>
   142c0:	mov	r1, r2
   142c4:	mov	r0, #1
   142c8:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   142cc:	mov	r8, r0
   142d0:	clz	r3, r8
   142d4:	cmp	r3, #0
   142d8:	bne	143a8 <g_slice_alloc0@plt+0x2dbc>
   142dc:	rsb	r9, r8, r9
   142e0:	lsr	r5, r8, #16
   142e4:	uxth	sl, r8
   142e8:	mov	r4, #1
   142ec:	mov	r1, r5
   142f0:	mov	r0, r9
   142f4:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   142f8:	mov	r1, r5
   142fc:	mov	fp, r0
   14300:	mov	r0, r9
   14304:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14308:	mul	r0, sl, fp
   1430c:	lsr	r2, r7, #16
   14310:	orr	r1, r2, r1, lsl #16
   14314:	cmp	r0, r1
   14318:	bls	14338 <g_slice_alloc0@plt+0x2d4c>
   1431c:	adds	r1, r1, r8
   14320:	sub	r3, fp, #1
   14324:	bcs	145a4 <g_slice_alloc0@plt+0x2fb8>
   14328:	cmp	r0, r1
   1432c:	subhi	fp, fp, #2
   14330:	addhi	r1, r1, r8
   14334:	bls	145a4 <g_slice_alloc0@plt+0x2fb8>
   14338:	rsb	r2, r0, r1
   1433c:	mov	r1, r5
   14340:	str	r2, [sp]
   14344:	uxth	r7, r7
   14348:	mov	r0, r2
   1434c:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14350:	ldr	r2, [sp]
   14354:	mov	r1, r5
   14358:	mov	r9, r0
   1435c:	mov	r0, r2
   14360:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14364:	mul	sl, sl, r9
   14368:	orr	r1, r7, r1, lsl #16
   1436c:	cmp	sl, r1
   14370:	bls	14390 <g_slice_alloc0@plt+0x2da4>
   14374:	adds	r8, r1, r8
   14378:	sub	r3, r9, #1
   1437c:	bcs	1438c <g_slice_alloc0@plt+0x2da0>
   14380:	cmp	sl, r8
   14384:	subhi	r9, r9, #2
   14388:	bhi	14390 <g_slice_alloc0@plt+0x2da4>
   1438c:	mov	r9, r3
   14390:	orr	r3, r9, fp, lsl #16
   14394:	b	1425c <g_slice_alloc0@plt+0x2c70>
   14398:	mvn	r6, r6
   1439c:	rsbs	r2, r2, #0
   143a0:	rsc	r3, r3, #0
   143a4:	b	14164 <g_slice_alloc0@plt+0x2b78>
   143a8:	lsl	r8, r8, r3
   143ac:	rsb	fp, r3, #32
   143b0:	lsr	r4, r9, fp
   143b4:	lsr	fp, r7, fp
   143b8:	lsr	r5, r8, #16
   143bc:	orr	fp, fp, r9, lsl r3
   143c0:	mov	r0, r4
   143c4:	lsl	r7, r7, r3
   143c8:	mov	r1, r5
   143cc:	uxth	sl, r8
   143d0:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   143d4:	mov	r1, r5
   143d8:	mov	r3, r0
   143dc:	mov	r0, r4
   143e0:	str	r3, [sp]
   143e4:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   143e8:	ldr	r3, [sp]
   143ec:	lsr	r2, fp, #16
   143f0:	mul	r0, sl, r3
   143f4:	orr	r1, r2, r1, lsl #16
   143f8:	cmp	r0, r1
   143fc:	bls	1441c <g_slice_alloc0@plt+0x2e30>
   14400:	adds	r1, r1, r8
   14404:	sub	r2, r3, #1
   14408:	bcs	145bc <g_slice_alloc0@plt+0x2fd0>
   1440c:	cmp	r0, r1
   14410:	subhi	r3, r3, #2
   14414:	addhi	r1, r1, r8
   14418:	bls	145bc <g_slice_alloc0@plt+0x2fd0>
   1441c:	rsb	r9, r0, r1
   14420:	mov	r1, r5
   14424:	str	r3, [sp]
   14428:	uxth	fp, fp
   1442c:	mov	r0, r9
   14430:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14434:	mov	r1, r5
   14438:	mov	r4, r0
   1443c:	mov	r0, r9
   14440:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14444:	mul	r9, sl, r4
   14448:	ldr	r3, [sp]
   1444c:	orr	r1, fp, r1, lsl #16
   14450:	cmp	r9, r1
   14454:	bls	14478 <g_slice_alloc0@plt+0x2e8c>
   14458:	adds	r1, r1, r8
   1445c:	sub	r2, r4, #1
   14460:	bcs	14474 <g_slice_alloc0@plt+0x2e88>
   14464:	cmp	r9, r1
   14468:	subhi	r4, r4, #2
   1446c:	addhi	r1, r1, r8
   14470:	bhi	14478 <g_slice_alloc0@plt+0x2e8c>
   14474:	mov	r4, r2
   14478:	rsb	r9, r9, r1
   1447c:	orr	r4, r4, r3, lsl #16
   14480:	b	142ec <g_slice_alloc0@plt+0x2d00>
   14484:	rsb	sl, r5, #32
   14488:	lsl	r3, r2, r5
   1448c:	lsr	r0, r2, sl
   14490:	lsr	r2, ip, sl
   14494:	orr	r4, r0, r1, lsl r5
   14498:	lsr	sl, r7, sl
   1449c:	mov	r0, r2
   144a0:	orr	sl, sl, ip, lsl r5
   144a4:	lsr	r9, r4, #16
   144a8:	str	r3, [sp, #4]
   144ac:	str	r2, [sp]
   144b0:	uxth	fp, r4
   144b4:	mov	r1, r9
   144b8:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   144bc:	ldr	r2, [sp]
   144c0:	mov	r1, r9
   144c4:	mov	r8, r0
   144c8:	mov	r0, r2
   144cc:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   144d0:	mul	r0, fp, r8
   144d4:	lsr	r2, sl, #16
   144d8:	orr	r1, r2, r1, lsl #16
   144dc:	cmp	r0, r1
   144e0:	bls	14500 <g_slice_alloc0@plt+0x2f14>
   144e4:	adds	r1, r1, r4
   144e8:	sub	r2, r8, #1
   144ec:	bcs	145b4 <g_slice_alloc0@plt+0x2fc8>
   144f0:	cmp	r0, r1
   144f4:	subhi	r8, r8, #2
   144f8:	addhi	r1, r1, r4
   144fc:	bls	145b4 <g_slice_alloc0@plt+0x2fc8>
   14500:	rsb	ip, r0, r1
   14504:	mov	r1, r9
   14508:	str	ip, [sp]
   1450c:	mov	r0, ip
   14510:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14514:	ldr	ip, [sp]
   14518:	mov	r1, r9
   1451c:	mov	r2, r0
   14520:	mov	r0, ip
   14524:	str	r2, [sp]
   14528:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   1452c:	ldr	r2, [sp]
   14530:	uxth	ip, sl
   14534:	mul	fp, fp, r2
   14538:	orr	ip, ip, r1, lsl #16
   1453c:	cmp	fp, ip
   14540:	bls	14560 <g_slice_alloc0@plt+0x2f74>
   14544:	adds	ip, ip, r4
   14548:	sub	r1, r2, #1
   1454c:	bcs	145ac <g_slice_alloc0@plt+0x2fc0>
   14550:	cmp	fp, ip
   14554:	subhi	r2, r2, #2
   14558:	addhi	ip, ip, r4
   1455c:	bls	145ac <g_slice_alloc0@plt+0x2fc0>
   14560:	ldr	r0, [sp, #4]
   14564:	orr	r1, r2, r8, lsl #16
   14568:	rsb	fp, fp, ip
   1456c:	umull	r2, r3, r1, r0
   14570:	cmp	fp, r3
   14574:	bcc	14598 <g_slice_alloc0@plt+0x2fac>
   14578:	movne	r4, #0
   1457c:	moveq	r4, #1
   14580:	cmp	r2, r7, lsl r5
   14584:	movls	r4, #0
   14588:	andhi	r4, r4, #1
   1458c:	cmp	r4, #0
   14590:	moveq	r3, r1
   14594:	beq	1425c <g_slice_alloc0@plt+0x2c70>
   14598:	sub	r3, r1, #1
   1459c:	mov	r4, #0
   145a0:	b	1425c <g_slice_alloc0@plt+0x2c70>
   145a4:	mov	fp, r3
   145a8:	b	14338 <g_slice_alloc0@plt+0x2d4c>
   145ac:	mov	r2, r1
   145b0:	b	14560 <g_slice_alloc0@plt+0x2f74>
   145b4:	mov	r8, r2
   145b8:	b	14500 <g_slice_alloc0@plt+0x2f14>
   145bc:	mov	r3, r2
   145c0:	b	1441c <g_slice_alloc0@plt+0x2e30>
   145c4:	cmp	r3, #0
   145c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145cc:	mov	r6, r0
   145d0:	sub	sp, sp, #12
   145d4:	mov	r5, r1
   145d8:	mov	r7, r0
   145dc:	mov	r4, r2
   145e0:	mov	r8, r1
   145e4:	bne	146c4 <g_slice_alloc0@plt+0x30d8>
   145e8:	cmp	r2, r1
   145ec:	bls	14700 <g_slice_alloc0@plt+0x3114>
   145f0:	clz	r3, r2
   145f4:	cmp	r3, #0
   145f8:	rsbne	r8, r3, #32
   145fc:	lslne	r4, r2, r3
   14600:	lsrne	r8, r0, r8
   14604:	lslne	r7, r0, r3
   14608:	orrne	r8, r8, r1, lsl r3
   1460c:	lsr	r5, r4, #16
   14610:	uxth	sl, r4
   14614:	mov	r1, r5
   14618:	mov	r0, r8
   1461c:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14620:	mov	r1, r5
   14624:	mov	r9, r0
   14628:	mov	r0, r8
   1462c:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14630:	mul	r0, sl, r9
   14634:	lsr	r3, r7, #16
   14638:	orr	r1, r3, r1, lsl #16
   1463c:	cmp	r0, r1
   14640:	bls	14664 <g_slice_alloc0@plt+0x3078>
   14644:	adds	r1, r1, r4
   14648:	sub	r2, r9, #1
   1464c:	bcs	14660 <g_slice_alloc0@plt+0x3074>
   14650:	cmp	r0, r1
   14654:	subhi	r9, r9, #2
   14658:	addhi	r1, r1, r4
   1465c:	bhi	14664 <g_slice_alloc0@plt+0x3078>
   14660:	mov	r9, r2
   14664:	rsb	r8, r0, r1
   14668:	mov	r1, r5
   1466c:	uxth	r7, r7
   14670:	mov	r0, r8
   14674:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14678:	mov	r1, r5
   1467c:	mov	r6, r0
   14680:	mov	r0, r8
   14684:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14688:	mul	sl, sl, r6
   1468c:	orr	r1, r7, r1, lsl #16
   14690:	cmp	sl, r1
   14694:	bls	146b0 <g_slice_alloc0@plt+0x30c4>
   14698:	adds	r4, r1, r4
   1469c:	sub	r3, r6, #1
   146a0:	bcs	149ac <g_slice_alloc0@plt+0x33c0>
   146a4:	cmp	sl, r4
   146a8:	subhi	r6, r6, #2
   146ac:	bls	149ac <g_slice_alloc0@plt+0x33c0>
   146b0:	orr	r0, r6, r9, lsl #16
   146b4:	mov	r6, #0
   146b8:	mov	r1, r6
   146bc:	add	sp, sp, #12
   146c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146c4:	cmp	r3, r1
   146c8:	movhi	r6, #0
   146cc:	movhi	r0, r6
   146d0:	bhi	146b8 <g_slice_alloc0@plt+0x30cc>
   146d4:	clz	r7, r3
   146d8:	cmp	r7, #0
   146dc:	bne	147dc <g_slice_alloc0@plt+0x31f0>
   146e0:	cmp	r3, r1
   146e4:	cmpcs	r2, r6
   146e8:	movhi	r6, #0
   146ec:	movls	r6, #1
   146f0:	movls	r0, #1
   146f4:	movls	r6, r7
   146f8:	movhi	r0, r6
   146fc:	b	146b8 <g_slice_alloc0@plt+0x30cc>
   14700:	cmp	r2, #0
   14704:	bne	14718 <g_slice_alloc0@plt+0x312c>
   14708:	mov	r1, r2
   1470c:	mov	r0, #1
   14710:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14714:	mov	r4, r0
   14718:	clz	r3, r4
   1471c:	cmp	r3, #0
   14720:	bne	148d8 <g_slice_alloc0@plt+0x32ec>
   14724:	rsb	r5, r4, r5
   14728:	lsr	r8, r4, #16
   1472c:	uxth	sl, r4
   14730:	mov	r6, #1
   14734:	mov	r1, r8
   14738:	mov	r0, r5
   1473c:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14740:	mov	r1, r8
   14744:	mov	r9, r0
   14748:	mov	r0, r5
   1474c:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14750:	mul	r0, sl, r9
   14754:	lsr	r3, r7, #16
   14758:	orr	r1, r3, r1, lsl #16
   1475c:	cmp	r0, r1
   14760:	bls	14780 <g_slice_alloc0@plt+0x3194>
   14764:	adds	r1, r1, r4
   14768:	sub	r2, r9, #1
   1476c:	bcs	149b4 <g_slice_alloc0@plt+0x33c8>
   14770:	cmp	r0, r1
   14774:	subhi	r9, r9, #2
   14778:	addhi	r1, r1, r4
   1477c:	bls	149b4 <g_slice_alloc0@plt+0x33c8>
   14780:	rsb	fp, r0, r1
   14784:	mov	r1, r8
   14788:	uxth	r7, r7
   1478c:	mov	r0, fp
   14790:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14794:	mov	r1, r8
   14798:	mov	r5, r0
   1479c:	mov	r0, fp
   147a0:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   147a4:	mul	sl, sl, r5
   147a8:	orr	r1, r7, r1, lsl #16
   147ac:	cmp	sl, r1
   147b0:	bls	147cc <g_slice_alloc0@plt+0x31e0>
   147b4:	adds	r4, r1, r4
   147b8:	sub	r3, r5, #1
   147bc:	bcs	149bc <g_slice_alloc0@plt+0x33d0>
   147c0:	cmp	sl, r4
   147c4:	subhi	r5, r5, #2
   147c8:	bls	149bc <g_slice_alloc0@plt+0x33d0>
   147cc:	orr	r0, r5, r9, lsl #16
   147d0:	mov	r1, r6
   147d4:	add	sp, sp, #12
   147d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147dc:	rsb	r1, r7, #32
   147e0:	lsl	r0, r2, r7
   147e4:	lsr	r2, r2, r1
   147e8:	lsr	fp, r5, r1
   147ec:	orr	r8, r2, r3, lsl r7
   147f0:	lsr	r1, r6, r1
   147f4:	str	r0, [sp, #4]
   147f8:	orr	r5, r1, r5, lsl r7
   147fc:	lsr	r9, r8, #16
   14800:	mov	r0, fp
   14804:	uxth	sl, r8
   14808:	mov	r1, r9
   1480c:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14810:	mov	r1, r9
   14814:	mov	r4, r0
   14818:	mov	r0, fp
   1481c:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14820:	mul	r0, sl, r4
   14824:	lsr	ip, r5, #16
   14828:	orr	r1, ip, r1, lsl #16
   1482c:	cmp	r0, r1
   14830:	bls	14844 <g_slice_alloc0@plt+0x3258>
   14834:	adds	r1, r1, r8
   14838:	sub	r2, r4, #1
   1483c:	bcc	149d8 <g_slice_alloc0@plt+0x33ec>
   14840:	mov	r4, r2
   14844:	rsb	ip, r0, r1
   14848:	mov	r1, r9
   1484c:	str	ip, [sp]
   14850:	uxth	r5, r5
   14854:	mov	r0, ip
   14858:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   1485c:	ldr	ip, [sp]
   14860:	mov	r1, r9
   14864:	mov	fp, r0
   14868:	mov	r0, ip
   1486c:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14870:	mul	sl, sl, fp
   14874:	orr	r1, r5, r1, lsl #16
   14878:	cmp	sl, r1
   1487c:	bls	14890 <g_slice_alloc0@plt+0x32a4>
   14880:	adds	r1, r1, r8
   14884:	sub	r2, fp, #1
   14888:	bcc	149c4 <g_slice_alloc0@plt+0x33d8>
   1488c:	mov	fp, r2
   14890:	ldr	r3, [sp, #4]
   14894:	orr	r0, fp, r4, lsl #16
   14898:	rsb	sl, sl, r1
   1489c:	umull	r4, r5, r0, r3
   148a0:	cmp	sl, r5
   148a4:	bcc	148c4 <g_slice_alloc0@plt+0x32d8>
   148a8:	movne	r3, #0
   148ac:	moveq	r3, #1
   148b0:	cmp	r4, r6, lsl r7
   148b4:	movls	r6, #0
   148b8:	andhi	r6, r3, #1
   148bc:	cmp	r6, #0
   148c0:	beq	146b8 <g_slice_alloc0@plt+0x30cc>
   148c4:	mov	r6, #0
   148c8:	sub	r0, r0, #1
   148cc:	mov	r1, r6
   148d0:	add	sp, sp, #12
   148d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148d8:	lsl	r4, r4, r3
   148dc:	rsb	r9, r3, #32
   148e0:	lsr	r2, r5, r9
   148e4:	lsr	r9, r6, r9
   148e8:	lsr	r8, r4, #16
   148ec:	orr	r9, r9, r5, lsl r3
   148f0:	mov	r0, r2
   148f4:	lsl	r7, r6, r3
   148f8:	mov	r1, r8
   148fc:	str	r2, [sp]
   14900:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14904:	ldr	r2, [sp]
   14908:	mov	r1, r8
   1490c:	uxth	sl, r4
   14910:	mov	fp, r0
   14914:	mov	r0, r2
   14918:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   1491c:	mul	r0, sl, fp
   14920:	lsr	r3, r9, #16
   14924:	orr	r1, r3, r1, lsl #16
   14928:	cmp	r0, r1
   1492c:	bls	1494c <g_slice_alloc0@plt+0x3360>
   14930:	adds	r1, r1, r4
   14934:	sub	r3, fp, #1
   14938:	bcs	149ec <g_slice_alloc0@plt+0x3400>
   1493c:	cmp	r0, r1
   14940:	subhi	fp, fp, #2
   14944:	addhi	r1, r1, r4
   14948:	bls	149ec <g_slice_alloc0@plt+0x3400>
   1494c:	rsb	r5, r0, r1
   14950:	mov	r1, r8
   14954:	uxth	r9, r9
   14958:	mov	r0, r5
   1495c:	bl	13ab0 <g_slice_alloc0@plt+0x24c4>
   14960:	mov	r1, r8
   14964:	mov	r6, r0
   14968:	mov	r0, r5
   1496c:	bl	13c9c <g_slice_alloc0@plt+0x26b0>
   14970:	mul	r5, sl, r6
   14974:	orr	r1, r9, r1, lsl #16
   14978:	cmp	r5, r1
   1497c:	bls	149a0 <g_slice_alloc0@plt+0x33b4>
   14980:	adds	r1, r1, r4
   14984:	sub	r3, r6, #1
   14988:	bcs	1499c <g_slice_alloc0@plt+0x33b0>
   1498c:	cmp	r5, r1
   14990:	subhi	r6, r6, #2
   14994:	addhi	r1, r1, r4
   14998:	bhi	149a0 <g_slice_alloc0@plt+0x33b4>
   1499c:	mov	r6, r3
   149a0:	rsb	r5, r5, r1
   149a4:	orr	r6, r6, fp, lsl #16
   149a8:	b	14734 <g_slice_alloc0@plt+0x3148>
   149ac:	mov	r6, r3
   149b0:	b	146b0 <g_slice_alloc0@plt+0x30c4>
   149b4:	mov	r9, r2
   149b8:	b	14780 <g_slice_alloc0@plt+0x3194>
   149bc:	mov	r5, r3
   149c0:	b	147cc <g_slice_alloc0@plt+0x31e0>
   149c4:	cmp	sl, r1
   149c8:	subhi	fp, fp, #2
   149cc:	addhi	r1, r1, r8
   149d0:	bhi	14890 <g_slice_alloc0@plt+0x32a4>
   149d4:	b	1488c <g_slice_alloc0@plt+0x32a0>
   149d8:	cmp	r0, r1
   149dc:	subhi	r4, r4, #2
   149e0:	addhi	r1, r1, r8
   149e4:	bhi	14844 <g_slice_alloc0@plt+0x3258>
   149e8:	b	14840 <g_slice_alloc0@plt+0x3254>
   149ec:	mov	fp, r3
   149f0:	b	1494c <g_slice_alloc0@plt+0x3360>
   149f4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   149f8:	mov	r7, r0
   149fc:	ldr	r6, [pc, #76]	; 14a50 <g_slice_alloc0@plt+0x3464>
   14a00:	mov	r8, r1
   14a04:	ldr	r5, [pc, #72]	; 14a54 <g_slice_alloc0@plt+0x3468>
   14a08:	mov	r9, r2
   14a0c:	add	r6, pc, r6
   14a10:	bl	112c0 <_init@@Base>
   14a14:	add	r5, pc, r5
   14a18:	rsb	r6, r5, r6
   14a1c:	asrs	r6, r6, #2
   14a20:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14a24:	sub	r5, r5, #4
   14a28:	mov	r4, #0
   14a2c:	add	r4, r4, #1
   14a30:	ldr	r3, [r5, #4]!
   14a34:	mov	r0, r7
   14a38:	mov	r1, r8
   14a3c:	mov	r2, r9
   14a40:	blx	r3
   14a44:	cmp	r4, r6
   14a48:	bne	14a2c <g_slice_alloc0@plt+0x3440>
   14a4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14a50:			; <UNDEFINED> instruction: 0x000114b4
   14a54:	andeq	r1, r1, r8, lsr #9
   14a58:	bx	lr

Disassembly of section .fini:

00014a5c <_fini@@Base>:
   14a5c:	push	{r3, lr}
   14a60:	pop	{r3, pc}
