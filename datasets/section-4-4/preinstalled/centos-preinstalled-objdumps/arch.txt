
centos-preinstalled/arch:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	11640 <close@plt+0x548>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <fdopen@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <fdopen@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r5, r1, ip, ror r1

00010e88 <fdopen@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <calloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <fputs_unlocked@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <raise@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <strcmp@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <fflush@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <free@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <_exit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <memcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <mbsinit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <memcmp@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <uname@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <dcgettext@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <__stack_chk_fail@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <textdomain@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <iswprint@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

00010f54 <fwrite@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #244]!	; 0xf4

00010f60 <lseek64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #236]!	; 0xec

00010f6c <__ctype_get_mb_cur_max@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #228]!	; 0xe4

00010f78 <strcpy@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #220]!	; 0xdc

00010f84 <__fpending@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #212]!	; 0xd4

00010f90 <mbrtowc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #204]!	; 0xcc

00010f9c <error@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #196]!	; 0xc4

00010fa8 <open64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #188]!	; 0xbc

00010fb4 <getenv@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #180]!	; 0xb4

00010fc0 <malloc@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #172]!	; 0xac

00010fcc <__libc_start_main@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #164]!	; 0xa4

00010fd8 <__freading@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #156]!	; 0x9c

00010fe4 <__gmon_start__@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #148]!	; 0x94

00010ff0 <getopt_long@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #140]!	; 0x8c

00010ffc <__ctype_b_loc@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #132]!	; 0x84

00011008 <exit@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #124]!	; 0x7c

00011014 <strlen@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #116]!	; 0x74

00011020 <ungetc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #108]!	; 0x6c

0001102c <__errno_location@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #100]!	; 0x64

00011038 <__cxa_atexit@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #92]!	; 0x5c

00011044 <memset@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #84]!	; 0x54

00011050 <fscanf@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #76]!	; 0x4c

0001105c <__printf_chk@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #86016	; 0x15000
   11064:	ldr	pc, [ip, #68]!	; 0x44

00011068 <fileno@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #86016	; 0x15000
   11070:	ldr	pc, [ip, #60]!	; 0x3c

00011074 <__fprintf_chk@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #86016	; 0x15000
   1107c:	ldr	pc, [ip, #52]!	; 0x34

00011080 <fclose@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #86016	; 0x15000
   11088:	ldr	pc, [ip, #44]!	; 0x2c

0001108c <fseeko64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #86016	; 0x15000
   11094:	ldr	pc, [ip, #36]!	; 0x24

00011098 <__uflow@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #28]!

000110a4 <__overflow@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #20]!

000110b0 <setlocale@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #12]!

000110bc <strrchr@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #86016	; 0x15000
   110c4:	ldr	pc, [ip, #4]!

000110c8 <nl_langinfo@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #20, 20	; 0x14000
   110d0:	ldr	pc, [ip, #4092]!	; 0xffc

000110d4 <bindtextdomain@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #20, 20	; 0x14000
   110dc:	ldr	pc, [ip, #4084]!	; 0xff4

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #20, 20	; 0x14000
   110e8:	ldr	pc, [ip, #4076]!	; 0xfec

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #20, 20	; 0x14000
   110f4:	ldr	pc, [ip, #4068]!	; 0xfe4

000110f8 <close@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #20, 20	; 0x14000
   11100:	ldr	pc, [ip, #4060]!	; 0xfdc

Disassembly of section .text:

00011104 <close_stdout@@Base-0x924>:
   11104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11108:	sub	sp, sp, #420	; 0x1a4
   1110c:	ldr	r4, [pc, #1152]	; 11594 <close@plt+0x49c>
   11110:	mov	r6, r0
   11114:	ldr	r3, [pc, #1148]	; 11598 <close@plt+0x4a0>
   11118:	mov	r5, r1
   1111c:	add	r4, pc, r4
   11120:	ldr	r8, [pc, #1140]	; 1159c <close@plt+0x4a4>
   11124:	ldr	r0, [r1]
   11128:	ldr	r3, [r4, r3]
   1112c:	add	r8, pc, r8
   11130:	ldr	r7, [pc, #1128]	; 115a0 <close@plt+0x4a8>
   11134:	ldr	r3, [r3]
   11138:	add	r7, pc, r7
   1113c:	str	r3, [sp, #412]	; 0x19c
   11140:	bl	11be4 <close_stdout@@Base+0x1bc>
   11144:	mov	r1, r8
   11148:	mov	r0, #6
   1114c:	bl	110b0 <setlocale@plt>
   11150:	ldr	r1, [pc, #1100]	; 115a4 <close@plt+0x4ac>
   11154:	mov	r0, r7
   11158:	add	r1, pc, r1
   1115c:	bl	110d4 <bindtextdomain@plt>
   11160:	mov	r0, r7
   11164:	bl	10f3c <textdomain@plt>
   11168:	ldr	r3, [pc, #1080]	; 115a8 <close@plt+0x4b0>
   1116c:	ldr	r0, [r4, r3]
   11170:	bl	14518 <close_stdout@@Base+0x2af0>
   11174:	ldr	r3, [pc, #1072]	; 115ac <close@plt+0x4b4>
   11178:	ldr	sl, [r4, r3]
   1117c:	ldr	r3, [sl]
   11180:	cmp	r3, #2
   11184:	beq	11318 <close@plt+0x220>
   11188:	ldr	r7, [pc, #1056]	; 115b0 <close@plt+0x4b8>
   1118c:	mov	fp, #0
   11190:	ldr	r8, [pc, #1052]	; 115b4 <close@plt+0x4bc>
   11194:	mov	r9, fp
   11198:	add	r7, pc, r7
   1119c:	add	r8, pc, r8
   111a0:	add	r7, r7, #48	; 0x30
   111a4:	str	r9, [sp]
   111a8:	mov	r0, r6
   111ac:	mov	r1, r5
   111b0:	mov	r2, r8
   111b4:	mov	r3, r7
   111b8:	bl	10ff0 <getopt_long@plt>
   111bc:	cmn	r0, #1
   111c0:	beq	11358 <close@plt+0x260>
   111c4:	cmp	r0, #110	; 0x6e
   111c8:	beq	11304 <close@plt+0x20c>
   111cc:	bgt	111f4 <close@plt+0xfc>
   111d0:	cmp	r0, #97	; 0x61
   111d4:	beq	112fc <close@plt+0x204>
   111d8:	bgt	11218 <close@plt+0x120>
   111dc:	cmn	r0, #3
   111e0:	beq	11258 <close@plt+0x160>
   111e4:	cmn	r0, #2
   111e8:	bne	112ec <close@plt+0x1f4>
   111ec:	mov	r0, #0
   111f0:	bl	117c8 <close@plt+0x6d0>
   111f4:	cmp	r0, #114	; 0x72
   111f8:	beq	112f4 <close@plt+0x1fc>
   111fc:	bgt	11230 <close@plt+0x138>
   11200:	cmp	r0, #111	; 0x6f
   11204:	beq	112ac <close@plt+0x1b4>
   11208:	cmp	r0, #112	; 0x70
   1120c:	bne	112ec <close@plt+0x1f4>
   11210:	orr	fp, fp, #32
   11214:	b	111a4 <close@plt+0xac>
   11218:	cmp	r0, #105	; 0x69
   1121c:	beq	11250 <close@plt+0x158>
   11220:	cmp	r0, #109	; 0x6d
   11224:	bne	112ec <close@plt+0x1f4>
   11228:	orr	fp, fp, #16
   1122c:	b	111a4 <close@plt+0xac>
   11230:	cmp	r0, #115	; 0x73
   11234:	beq	11248 <close@plt+0x150>
   11238:	cmp	r0, #118	; 0x76
   1123c:	bne	112ec <close@plt+0x1f4>
   11240:	orr	fp, fp, #8
   11244:	b	111a4 <close@plt+0xac>
   11248:	orr	fp, fp, #1
   1124c:	b	111a4 <close@plt+0xac>
   11250:	orr	fp, fp, #64	; 0x40
   11254:	b	111a4 <close@plt+0xac>
   11258:	ldr	r3, [pc, #856]	; 115b8 <close@plt+0x4c0>
   1125c:	ldr	r2, [sl]
   11260:	ldr	r3, [r4, r3]
   11264:	cmp	r2, #1
   11268:	ldr	r0, [r3]
   1126c:	beq	1130c <close@plt+0x214>
   11270:	ldr	r1, [pc, #836]	; 115bc <close@plt+0x4c4>
   11274:	add	r1, pc, r1
   11278:	ldr	r3, [pc, #832]	; 115c0 <close@plt+0x4c8>
   1127c:	mov	r5, #0
   11280:	ldr	ip, [pc, #828]	; 115c4 <close@plt+0x4cc>
   11284:	ldr	r2, [pc, #828]	; 115c8 <close@plt+0x4d0>
   11288:	ldr	r3, [r4, r3]
   1128c:	add	ip, pc, ip
   11290:	str	r5, [sp, #4]
   11294:	add	r2, pc, r2
   11298:	str	ip, [sp]
   1129c:	ldr	r3, [r3]
   112a0:	bl	138d0 <close_stdout@@Base+0x1ea8>
   112a4:	mov	r0, r5
   112a8:	bl	11008 <exit@plt>
   112ac:	orr	fp, fp, #128	; 0x80
   112b0:	b	111a4 <close@plt+0xac>
   112b4:	ldr	r1, [pc, #784]	; 115cc <close@plt+0x4d4>
   112b8:	mov	r2, #5
   112bc:	mov	r0, #0
   112c0:	add	r1, pc, r1
   112c4:	bl	10f18 <dcgettext@plt>
   112c8:	ldr	r3, [r7]
   112cc:	mov	r4, r0
   112d0:	ldr	r0, [r5, r3, lsl #2]
   112d4:	bl	13434 <close_stdout@@Base+0x1a0c>
   112d8:	mov	r2, r4
   112dc:	mov	r3, r0
   112e0:	mov	r0, #0
   112e4:	mov	r1, r0
   112e8:	bl	10f9c <error@plt>
   112ec:	mov	r0, #1
   112f0:	bl	117c8 <close@plt+0x6d0>
   112f4:	orr	fp, fp, #4
   112f8:	b	111a4 <close@plt+0xac>
   112fc:	mvn	fp, #0
   11300:	b	111a4 <close@plt+0xac>
   11304:	orr	fp, fp, #2
   11308:	b	111a4 <close@plt+0xac>
   1130c:	ldr	r1, [pc, #700]	; 115d0 <close@plt+0x4d8>
   11310:	add	r1, pc, r1
   11314:	b	11278 <close@plt+0x180>
   11318:	ldr	r3, [pc, #692]	; 115d4 <close@plt+0x4dc>
   1131c:	mov	r2, r8
   11320:	mov	r7, #0
   11324:	mov	r0, r6
   11328:	str	r7, [sp]
   1132c:	mov	r1, r5
   11330:	add	r3, pc, r3
   11334:	bl	10ff0 <getopt_long@plt>
   11338:	cmn	r0, #1
   1133c:	beq	11578 <close@plt+0x480>
   11340:	cmn	r0, #3
   11344:	beq	11444 <close@plt+0x34c>
   11348:	cmn	r0, #2
   1134c:	bne	112ec <close@plt+0x1f4>
   11350:	mov	r0, r7
   11354:	bl	117c8 <close@plt+0x6d0>
   11358:	ldr	r3, [pc, #632]	; 115d8 <close@plt+0x4e0>
   1135c:	ldr	r7, [r4, r3]
   11360:	ldr	r3, [r7]
   11364:	cmp	r6, r3
   11368:	bne	112b4 <close@plt+0x1bc>
   1136c:	cmp	fp, #0
   11370:	beq	113c8 <close@plt+0x2d0>
   11374:	tst	fp, #31
   11378:	bne	113cc <close@plt+0x2d4>
   1137c:	tst	fp, #32
   11380:	bne	114e8 <close@plt+0x3f0>
   11384:	tst	fp, #64	; 0x40
   11388:	bne	114b4 <close@plt+0x3bc>
   1138c:	tst	fp, #128	; 0x80
   11390:	bne	114a4 <close@plt+0x3ac>
   11394:	ldr	r3, [pc, #540]	; 115b8 <close@plt+0x4c0>
   11398:	ldr	r3, [r4, r3]
   1139c:	ldr	r0, [r3]
   113a0:	ldr	r3, [r0, #20]
   113a4:	ldr	r2, [r0, #24]
   113a8:	cmp	r3, r2
   113ac:	addcc	r1, r3, #1
   113b0:	strcc	r1, [r0, #20]
   113b4:	movcc	r2, #10
   113b8:	strbcc	r2, [r3]
   113bc:	bcs	1156c <close@plt+0x474>
   113c0:	mov	r0, #0
   113c4:	bl	11008 <exit@plt>
   113c8:	mov	fp, #1
   113cc:	add	r5, sp, #20
   113d0:	mov	r0, r5
   113d4:	bl	10f0c <uname@plt>
   113d8:	cmn	r0, #1
   113dc:	beq	11414 <close@plt+0x31c>
   113e0:	tst	fp, #1
   113e4:	bne	11534 <close@plt+0x43c>
   113e8:	tst	fp, #2
   113ec:	bne	11528 <close@plt+0x430>
   113f0:	tst	fp, #4
   113f4:	bne	1151c <close@plt+0x424>
   113f8:	tst	fp, #8
   113fc:	bne	11510 <close@plt+0x418>
   11400:	tst	fp, #16
   11404:	beq	1137c <close@plt+0x284>
   11408:	add	r0, r5, #260	; 0x104
   1140c:	bl	11738 <close@plt+0x640>
   11410:	b	1137c <close@plt+0x284>
   11414:	bl	1102c <__errno_location@plt>
   11418:	ldr	r1, [pc, #444]	; 115dc <close@plt+0x4e4>
   1141c:	mov	r2, #5
   11420:	add	r1, pc, r1
   11424:	ldr	r6, [r0]
   11428:	mov	r0, #0
   1142c:	bl	10f18 <dcgettext@plt>
   11430:	mov	r1, r6
   11434:	mov	r2, r0
   11438:	mov	r0, #1
   1143c:	bl	10f9c <error@plt>
   11440:	b	113e0 <close@plt+0x2e8>
   11444:	ldr	r3, [pc, #364]	; 115b8 <close@plt+0x4c0>
   11448:	ldr	r2, [sl]
   1144c:	ldr	r3, [r4, r3]
   11450:	cmp	r2, #1
   11454:	ldr	r0, [r3]
   11458:	beq	11504 <close@plt+0x40c>
   1145c:	ldr	r1, [pc, #380]	; 115e0 <close@plt+0x4e8>
   11460:	add	r1, pc, r1
   11464:	ldr	r3, [pc, #340]	; 115c0 <close@plt+0x4c8>
   11468:	mov	r5, #0
   1146c:	ldr	lr, [pc, #368]	; 115e4 <close@plt+0x4ec>
   11470:	ldr	ip, [pc, #368]	; 115e8 <close@plt+0x4f0>
   11474:	ldr	r3, [r4, r3]
   11478:	add	lr, pc, lr
   1147c:	ldr	r2, [pc, #360]	; 115ec <close@plt+0x4f4>
   11480:	add	ip, pc, ip
   11484:	str	lr, [sp]
   11488:	add	r2, pc, r2
   1148c:	ldr	r3, [r3]
   11490:	str	ip, [sp, #4]
   11494:	str	r5, [sp, #8]
   11498:	bl	138d0 <close_stdout@@Base+0x1ea8>
   1149c:	mov	r0, r5
   114a0:	bl	11008 <exit@plt>
   114a4:	ldr	r0, [pc, #324]	; 115f0 <close@plt+0x4f8>
   114a8:	add	r0, pc, r0
   114ac:	bl	11738 <close@plt+0x640>
   114b0:	b	11394 <close@plt+0x29c>
   114b4:	ldr	r5, [pc, #312]	; 115f4 <close@plt+0x4fc>
   114b8:	add	r5, pc, r5
   114bc:	add	r0, r5, #396	; 0x18c
   114c0:	bl	10f0c <uname@plt>
   114c4:	add	r0, r5, #656	; 0x290
   114c8:	bl	11014 <strlen@plt>
   114cc:	cmp	r0, #4
   114d0:	beq	11540 <close@plt+0x448>
   114d4:	ldr	r0, [pc, #284]	; 115f8 <close@plt+0x500>
   114d8:	add	r0, pc, r0
   114dc:	add	r0, r0, #656	; 0x290
   114e0:	bl	11738 <close@plt+0x640>
   114e4:	b	1138c <close@plt+0x294>
   114e8:	ldr	r5, [pc, #268]	; 115fc <close@plt+0x504>
   114ec:	add	r5, pc, r5
   114f0:	add	r0, r5, #4
   114f4:	bl	10f0c <uname@plt>
   114f8:	add	r0, r5, #264	; 0x108
   114fc:	bl	11738 <close@plt+0x640>
   11500:	b	11384 <close@plt+0x28c>
   11504:	ldr	r1, [pc, #244]	; 11600 <close@plt+0x508>
   11508:	add	r1, pc, r1
   1150c:	b	11464 <close@plt+0x36c>
   11510:	add	r0, r5, #195	; 0xc3
   11514:	bl	11738 <close@plt+0x640>
   11518:	b	11400 <close@plt+0x308>
   1151c:	add	r0, r5, #130	; 0x82
   11520:	bl	11738 <close@plt+0x640>
   11524:	b	113f8 <close@plt+0x300>
   11528:	add	r0, r5, #65	; 0x41
   1152c:	bl	11738 <close@plt+0x640>
   11530:	b	113f0 <close@plt+0x2f8>
   11534:	mov	r0, r5
   11538:	bl	11738 <close@plt+0x640>
   1153c:	b	113e8 <close@plt+0x2f0>
   11540:	ldrb	r3, [r5, #656]	; 0x290
   11544:	cmp	r3, #105	; 0x69
   11548:	bne	114d4 <close@plt+0x3dc>
   1154c:	ldrb	r3, [r5, #658]	; 0x292
   11550:	cmp	r3, #56	; 0x38
   11554:	bne	114d4 <close@plt+0x3dc>
   11558:	ldrb	r3, [r5, #659]	; 0x293
   1155c:	cmp	r3, #54	; 0x36
   11560:	moveq	r3, #51	; 0x33
   11564:	strbeq	r3, [r5, #657]	; 0x291
   11568:	b	114d4 <close@plt+0x3dc>
   1156c:	mov	r1, #10
   11570:	bl	110a4 <__overflow@plt>
   11574:	b	113c0 <close@plt+0x2c8>
   11578:	ldr	r3, [pc, #88]	; 115d8 <close@plt+0x4e0>
   1157c:	ldr	r7, [r4, r3]
   11580:	ldr	r3, [r7]
   11584:	cmp	r6, r3
   11588:	bne	112b4 <close@plt+0x1bc>
   1158c:	mov	fp, #16
   11590:	b	113cc <close@plt+0x2d4>
   11594:	ldrdeq	r4, [r1], -ip
   11598:	andeq	r0, r0, r4, ror #1
   1159c:	andeq	r3, r0, ip, asr r8
   115a0:	muleq	r0, r0, r7
   115a4:	andeq	r3, r0, r4, asr #16
   115a8:	strdeq	r0, [r0], -r8
   115ac:	andeq	r0, r0, r8, ror #1
   115b0:	andeq	r4, r1, r4, lsr ip
   115b4:	andeq	r3, r0, r0, lsr r8
   115b8:	andeq	r0, r0, r4, lsl #2
   115bc:	andeq	r3, r0, r0, lsr #14
   115c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   115c4:	andeq	r3, r0, r4, lsr #14
   115c8:	andeq	r3, r0, r0, lsr r6
   115cc:	andeq	r3, r0, r8, lsl r7
   115d0:	andeq	r3, r0, ip, ror r6
   115d4:	muleq	r1, ip, sl
   115d8:	andeq	r0, r0, ip, ror #1
   115dc:	andeq	r3, r0, ip, asr #11
   115e0:	andeq	r3, r0, r4, lsr r5
   115e4:	andeq	r3, r0, r8, lsr r5
   115e8:	andeq	r3, r0, r0, asr #10
   115ec:	andeq	r3, r0, ip, lsr r4
   115f0:	andeq	r3, r0, ip, asr r5
   115f4:			; <UNDEFINED> instruction: 0x00014cb0
   115f8:	muleq	r1, r0, ip
   115fc:	andeq	r4, r1, ip, ror ip
   11600:	andeq	r3, r0, r4, lsl #9
   11604:	mov	fp, #0
   11608:	mov	lr, #0
   1160c:	pop	{r1}		; (ldr r1, [sp], #4)
   11610:	mov	r2, sp
   11614:	push	{r2}		; (str r2, [sp, #-4]!)
   11618:	push	{r0}		; (str r0, [sp, #-4]!)
   1161c:	ldr	ip, [pc, #16]	; 11634 <close@plt+0x53c>
   11620:	push	{ip}		; (str ip, [sp, #-4]!)
   11624:	ldr	r0, [pc, #12]	; 11638 <close@plt+0x540>
   11628:	ldr	r3, [pc, #12]	; 1163c <close@plt+0x544>
   1162c:	bl	10fcc <__libc_start_main@plt>
   11630:	bl	110ec <abort@plt>
   11634:	andeq	r4, r1, r4, lsl r5
   11638:	andeq	r1, r1, r4, lsl #2
   1163c:			; <UNDEFINED> instruction: 0x000144b0
   11640:	ldr	r3, [pc, #20]	; 1165c <close@plt+0x564>
   11644:	ldr	r2, [pc, #20]	; 11660 <close@plt+0x568>
   11648:	add	r3, pc, r3
   1164c:	ldr	r2, [r3, r2]
   11650:	cmp	r2, #0
   11654:	bxeq	lr
   11658:	b	10fe4 <__gmon_start__@plt>
   1165c:			; <UNDEFINED> instruction: 0x000149b0
   11660:	strdeq	r0, [r0], -ip
   11664:	push	{r3, lr}
   11668:	movw	r0, #24940	; 0x616c
   1166c:	ldr	r3, [pc, #36]	; 11698 <close@plt+0x5a0>
   11670:	movt	r0, #2
   11674:	rsb	r3, r0, r3
   11678:	cmp	r3, #6
   1167c:	popls	{r3, pc}
   11680:	movw	r3, #0
   11684:	movt	r3, #0
   11688:	cmp	r3, #0
   1168c:	popeq	{r3, pc}
   11690:	blx	r3
   11694:	pop	{r3, pc}
   11698:	andeq	r6, r2, pc, ror #2
   1169c:	push	{r3, lr}
   116a0:	movw	r0, #24940	; 0x616c
   116a4:	movw	r3, #24940	; 0x616c
   116a8:	movt	r0, #2
   116ac:	movt	r3, #2
   116b0:	rsb	r3, r0, r3
   116b4:	asr	r3, r3, #2
   116b8:	add	r3, r3, r3, lsr #31
   116bc:	asrs	r1, r3, #1
   116c0:	popeq	{r3, pc}
   116c4:	movw	r2, #0
   116c8:	movt	r2, #0
   116cc:	cmp	r2, #0
   116d0:	popeq	{r3, pc}
   116d4:	blx	r2
   116d8:	pop	{r3, pc}
   116dc:	push	{r4, lr}
   116e0:	movw	r4, #24940	; 0x616c
   116e4:	movt	r4, #2
   116e8:	ldrb	r3, [r4]
   116ec:	cmp	r3, #0
   116f0:	popne	{r4, pc}
   116f4:	bl	11664 <close@plt+0x56c>
   116f8:	mov	r3, #1
   116fc:	strb	r3, [r4]
   11700:	pop	{r4, pc}
   11704:	movw	r0, #24016	; 0x5dd0
   11708:	movt	r0, #2
   1170c:	push	{r3, lr}
   11710:	ldr	r3, [r0]
   11714:	cmp	r3, #0
   11718:	beq	11730 <close@plt+0x638>
   1171c:	movw	r3, #0
   11720:	movt	r3, #0
   11724:	cmp	r3, #0
   11728:	beq	11730 <close@plt+0x638>
   1172c:	blx	r3
   11730:	pop	{r3, lr}
   11734:	b	1169c <close@plt+0x5a4>
   11738:	ldr	r2, [pc, #120]	; 117b8 <close@plt+0x6c0>
   1173c:	push	{r3, r4, r5, lr}
   11740:	add	r2, pc, r2
   11744:	ldr	r3, [pc, #112]	; 117bc <close@plt+0x6c4>
   11748:	mov	r5, r0
   1174c:	ldrb	r2, [r2]
   11750:	add	r3, pc, r3
   11754:	cmp	r2, #0
   11758:	ldr	r2, [pc, #96]	; 117c0 <close@plt+0x6c8>
   1175c:	ldr	r4, [r3, r2]
   11760:	beq	11788 <close@plt+0x690>
   11764:	ldr	r3, [r4]
   11768:	ldr	r2, [r3, #20]
   1176c:	ldr	r1, [r3, #24]
   11770:	cmp	r2, r1
   11774:	addcc	r0, r2, #1
   11778:	strcc	r0, [r3, #20]
   1177c:	movcc	r1, #32
   11780:	strbcc	r1, [r2]
   11784:	bcs	117a8 <close@plt+0x6b0>
   11788:	ldr	r3, [pc, #52]	; 117c4 <close@plt+0x6cc>
   1178c:	mov	r0, r5
   11790:	ldr	r1, [r4]
   11794:	mov	r2, #1
   11798:	add	r3, pc, r3
   1179c:	strb	r2, [r3]
   117a0:	pop	{r3, r4, r5, lr}
   117a4:	b	10ea0 <fputs_unlocked@plt>
   117a8:	mov	r0, r3
   117ac:	mov	r1, #32
   117b0:	bl	110a4 <__overflow@plt>
   117b4:	b	11788 <close@plt+0x690>
   117b8:	andeq	r4, r1, r8, lsr #20
   117bc:	andeq	r4, r1, r8, lsr #17
   117c0:	andeq	r0, r0, r4, lsl #2
   117c4:	ldrdeq	r4, [r1], -r0
   117c8:	push	{r4, r5, r6, lr}
   117cc:	subs	r5, r0, #0
   117d0:	ldr	r4, [pc, #480]	; 119b8 <close@plt+0x8c0>
   117d4:	add	r4, pc, r4
   117d8:	beq	11820 <close@plt+0x728>
   117dc:	ldr	r3, [pc, #472]	; 119bc <close@plt+0x8c4>
   117e0:	mov	r2, #5
   117e4:	ldr	r1, [pc, #468]	; 119c0 <close@plt+0x8c8>
   117e8:	mov	r0, #0
   117ec:	ldr	r3, [r4, r3]
   117f0:	add	r1, pc, r1
   117f4:	ldr	r6, [r3]
   117f8:	bl	10f18 <dcgettext@plt>
   117fc:	ldr	r3, [pc, #448]	; 119c4 <close@plt+0x8cc>
   11800:	mov	r1, #1
   11804:	ldr	r3, [r4, r3]
   11808:	ldr	r3, [r3]
   1180c:	mov	r2, r0
   11810:	mov	r0, r6
   11814:	bl	11074 <__fprintf_chk@plt>
   11818:	mov	r0, r5
   1181c:	bl	11008 <exit@plt>
   11820:	ldr	r1, [pc, #416]	; 119c8 <close@plt+0x8d0>
   11824:	mov	r2, #5
   11828:	add	r1, pc, r1
   1182c:	bl	10f18 <dcgettext@plt>
   11830:	ldr	r3, [pc, #396]	; 119c4 <close@plt+0x8cc>
   11834:	ldr	r6, [r4, r3]
   11838:	ldr	r2, [r6]
   1183c:	mov	r1, r0
   11840:	mov	r0, #1
   11844:	bl	1105c <__printf_chk@plt>
   11848:	ldr	r3, [pc, #380]	; 119cc <close@plt+0x8d4>
   1184c:	mov	r0, r5
   11850:	ldr	r3, [r4, r3]
   11854:	ldr	r3, [r3]
   11858:	cmp	r3, #1
   1185c:	beq	11978 <close@plt+0x880>
   11860:	ldr	r1, [pc, #360]	; 119d0 <close@plt+0x8d8>
   11864:	mov	r2, #5
   11868:	add	r1, pc, r1
   1186c:	bl	10f18 <dcgettext@plt>
   11870:	ldr	r3, [pc, #348]	; 119d4 <close@plt+0x8dc>
   11874:	ldr	r4, [r4, r3]
   11878:	ldr	r1, [r4]
   1187c:	bl	10ea0 <fputs_unlocked@plt>
   11880:	ldr	r1, [pc, #336]	; 119d8 <close@plt+0x8e0>
   11884:	mov	r2, #5
   11888:	mov	r0, #0
   1188c:	add	r1, pc, r1
   11890:	bl	10f18 <dcgettext@plt>
   11894:	ldr	r1, [r4]
   11898:	bl	10ea0 <fputs_unlocked@plt>
   1189c:	ldr	r1, [pc, #312]	; 119dc <close@plt+0x8e4>
   118a0:	mov	r2, #5
   118a4:	mov	r0, #0
   118a8:	add	r1, pc, r1
   118ac:	bl	10f18 <dcgettext@plt>
   118b0:	ldr	r1, [r4]
   118b4:	bl	10ea0 <fputs_unlocked@plt>
   118b8:	ldr	r1, [pc, #288]	; 119e0 <close@plt+0x8e8>
   118bc:	mov	r2, #5
   118c0:	mov	r0, #0
   118c4:	add	r1, pc, r1
   118c8:	bl	10f18 <dcgettext@plt>
   118cc:	ldr	r2, [pc, #272]	; 119e4 <close@plt+0x8ec>
   118d0:	ldr	r3, [pc, #272]	; 119e8 <close@plt+0x8f0>
   118d4:	add	r2, pc, r2
   118d8:	add	r3, pc, r3
   118dc:	mov	r1, r0
   118e0:	mov	r0, #1
   118e4:	bl	1105c <__printf_chk@plt>
   118e8:	mov	r0, #5
   118ec:	mov	r1, #0
   118f0:	bl	110b0 <setlocale@plt>
   118f4:	cmp	r0, #0
   118f8:	beq	11944 <close@plt+0x84c>
   118fc:	ldr	r1, [pc, #232]	; 119ec <close@plt+0x8f4>
   11900:	mov	r2, #3
   11904:	add	r1, pc, r1
   11908:	bl	110e0 <strncmp@plt>
   1190c:	cmp	r0, #0
   11910:	beq	11944 <close@plt+0x84c>
   11914:	ldr	r1, [pc, #212]	; 119f0 <close@plt+0x8f8>
   11918:	mov	r2, #5
   1191c:	mov	r0, #0
   11920:	add	r1, pc, r1
   11924:	bl	10f18 <dcgettext@plt>
   11928:	mov	r4, r0
   1192c:	ldr	r0, [r6]
   11930:	bl	11b40 <close_stdout@@Base+0x118>
   11934:	mov	r1, r4
   11938:	mov	r2, r0
   1193c:	mov	r0, #1
   11940:	bl	1105c <__printf_chk@plt>
   11944:	ldr	r1, [pc, #168]	; 119f4 <close@plt+0x8fc>
   11948:	mov	r2, #5
   1194c:	mov	r0, #0
   11950:	add	r1, pc, r1
   11954:	bl	10f18 <dcgettext@plt>
   11958:	mov	r4, r0
   1195c:	ldr	r0, [r6]
   11960:	bl	11b40 <close_stdout@@Base+0x118>
   11964:	mov	r1, r4
   11968:	mov	r2, r0
   1196c:	mov	r0, #1
   11970:	bl	1105c <__printf_chk@plt>
   11974:	b	11818 <close@plt+0x720>
   11978:	ldr	r1, [pc, #120]	; 119f8 <close@plt+0x900>
   1197c:	mov	r2, #5
   11980:	add	r1, pc, r1
   11984:	bl	10f18 <dcgettext@plt>
   11988:	ldr	r3, [pc, #68]	; 119d4 <close@plt+0x8dc>
   1198c:	ldr	r4, [r4, r3]
   11990:	ldr	r1, [r4]
   11994:	bl	10ea0 <fputs_unlocked@plt>
   11998:	ldr	r1, [pc, #92]	; 119fc <close@plt+0x904>
   1199c:	mov	r0, r5
   119a0:	mov	r2, #5
   119a4:	add	r1, pc, r1
   119a8:	bl	10f18 <dcgettext@plt>
   119ac:	ldr	r1, [r4]
   119b0:	bl	10ea0 <fputs_unlocked@plt>
   119b4:	b	11880 <close@plt+0x788>
   119b8:	andeq	r4, r1, r4, lsr #16
   119bc:	strdeq	r0, [r0], -r4
   119c0:	andeq	r2, r0, ip, asr sp
   119c4:	andeq	r0, r0, r0, lsl r1
   119c8:	andeq	r2, r0, ip, asr #26
   119cc:	andeq	r0, r0, r8, ror #1
   119d0:			; <UNDEFINED> instruction: 0x00002fbc
   119d4:	andeq	r0, r0, r4, lsl #2
   119d8:			; <UNDEFINED> instruction: 0x00002fb8
   119dc:	andeq	r2, r0, ip, asr #31
   119e0:	andeq	r2, r0, r8, ror #31
   119e4:	strdeq	r2, [r0], -r0
   119e8:	strdeq	r2, [r0], -ip
   119ec:	strdeq	r2, [r0], -r8
   119f0:	andeq	r2, r0, r0, ror #31
   119f4:	strdeq	r2, [r0], -r8
   119f8:	andeq	r2, r0, ip, lsl #24
   119fc:	andeq	r2, r0, r4, asr sp
   11a00:	ldr	r3, [pc, #8]	; 11a10 <close@plt+0x918>
   11a04:	add	r3, pc, r3
   11a08:	str	r0, [r3]
   11a0c:	bx	lr
   11a10:	andeq	r4, r1, r8, ror sl
   11a14:	ldr	r3, [pc, #8]	; 11a24 <close@plt+0x92c>
   11a18:	add	r3, pc, r3
   11a1c:	strb	r0, [r3, #4]
   11a20:	bx	lr
   11a24:	andeq	r4, r1, r4, ror #20

00011a28 <close_stdout@@Base>:
   11a28:	push	{r4, r5, r6, r7, lr}
   11a2c:	sub	sp, sp, #12
   11a30:	ldr	r4, [pc, #228]	; 11b1c <close_stdout@@Base+0xf4>
   11a34:	ldr	r3, [pc, #228]	; 11b20 <close_stdout@@Base+0xf8>
   11a38:	add	r4, pc, r4
   11a3c:	ldr	r3, [r4, r3]
   11a40:	ldr	r0, [r3]
   11a44:	bl	13c4c <close_stdout@@Base+0x2224>
   11a48:	cmp	r0, #0
   11a4c:	beq	11a74 <close_stdout@@Base+0x4c>
   11a50:	ldr	r3, [pc, #204]	; 11b24 <close_stdout@@Base+0xfc>
   11a54:	add	r3, pc, r3
   11a58:	ldrb	r3, [r3, #4]
   11a5c:	cmp	r3, #0
   11a60:	beq	11a94 <close_stdout@@Base+0x6c>
   11a64:	bl	1102c <__errno_location@plt>
   11a68:	ldr	r3, [r0]
   11a6c:	cmp	r3, #32
   11a70:	bne	11a94 <close_stdout@@Base+0x6c>
   11a74:	ldr	r3, [pc, #172]	; 11b28 <close_stdout@@Base+0x100>
   11a78:	ldr	r3, [r4, r3]
   11a7c:	ldr	r0, [r3]
   11a80:	bl	13c4c <close_stdout@@Base+0x2224>
   11a84:	cmp	r0, #0
   11a88:	bne	11ae8 <close_stdout@@Base+0xc0>
   11a8c:	add	sp, sp, #12
   11a90:	pop	{r4, r5, r6, r7, pc}
   11a94:	ldr	r1, [pc, #144]	; 11b2c <close_stdout@@Base+0x104>
   11a98:	mov	r0, #0
   11a9c:	mov	r2, #5
   11aa0:	add	r1, pc, r1
   11aa4:	bl	10f18 <dcgettext@plt>
   11aa8:	ldr	r3, [pc, #128]	; 11b30 <close_stdout@@Base+0x108>
   11aac:	ldr	r5, [pc, r3]
   11ab0:	cmp	r5, #0
   11ab4:	mov	r6, r0
   11ab8:	beq	11af8 <close_stdout@@Base+0xd0>
   11abc:	bl	1102c <__errno_location@plt>
   11ac0:	ldr	r7, [r0]
   11ac4:	mov	r0, r5
   11ac8:	bl	132e0 <close_stdout@@Base+0x18b8>
   11acc:	ldr	r2, [pc, #96]	; 11b34 <close_stdout@@Base+0x10c>
   11ad0:	str	r6, [sp]
   11ad4:	mov	r1, r7
   11ad8:	add	r2, pc, r2
   11adc:	mov	r3, r0
   11ae0:	mov	r0, #0
   11ae4:	bl	10f9c <error@plt>
   11ae8:	ldr	r3, [pc, #72]	; 11b38 <close_stdout@@Base+0x110>
   11aec:	ldr	r3, [r4, r3]
   11af0:	ldr	r0, [r3]
   11af4:	bl	10edc <_exit@plt>
   11af8:	bl	1102c <__errno_location@plt>
   11afc:	ldr	r2, [pc, #56]	; 11b3c <close_stdout@@Base+0x114>
   11b00:	add	r2, pc, r2
   11b04:	mov	r3, r0
   11b08:	mov	r0, r5
   11b0c:	ldr	r1, [r3]
   11b10:	mov	r3, r6
   11b14:	bl	10f9c <error@plt>
   11b18:	b	11ae8 <close_stdout@@Base+0xc0>
   11b1c:	andeq	r4, r1, r0, asr #11
   11b20:	andeq	r0, r0, r4, lsl #2
   11b24:	andeq	r4, r1, r8, lsr #20
   11b28:	strdeq	r0, [r0], -r4
   11b2c:	andeq	r3, r0, r0, lsl r0
   11b30:	ldrdeq	r4, [r1], -r0
   11b34:	andeq	r2, r0, r4, ror #31
   11b38:	andeq	r0, r0, r8, lsl #2
   11b3c:	andeq	r2, r0, r0, asr #31
   11b40:	ldrb	r3, [r0]
   11b44:	cmp	r3, #47	; 0x2f
   11b48:	bne	11b64 <close_stdout@@Base+0x13c>
   11b4c:	add	r2, r0, #1
   11b50:	mov	r0, r2
   11b54:	add	r2, r2, #1
   11b58:	ldrb	r3, [r0]
   11b5c:	cmp	r3, #47	; 0x2f
   11b60:	beq	11b50 <close_stdout@@Base+0x128>
   11b64:	cmp	r3, #0
   11b68:	bxeq	lr
   11b6c:	mov	r2, r0
   11b70:	mov	r1, #0
   11b74:	cmp	r3, #47	; 0x2f
   11b78:	moveq	r1, #1
   11b7c:	beq	11b8c <close_stdout@@Base+0x164>
   11b80:	cmp	r1, #0
   11b84:	movne	r0, r2
   11b88:	movne	r1, #0
   11b8c:	ldrb	r3, [r2, #1]!
   11b90:	cmp	r3, #0
   11b94:	bne	11b74 <close_stdout@@Base+0x14c>
   11b98:	bx	lr
   11b9c:	push	{r4, lr}
   11ba0:	mov	r4, r0
   11ba4:	bl	11014 <strlen@plt>
   11ba8:	cmp	r0, #1
   11bac:	popls	{r4, pc}
   11bb0:	sub	r3, r0, #1
   11bb4:	ldrb	r2, [r4, r3]
   11bb8:	cmp	r2, #47	; 0x2f
   11bbc:	popne	{r4, pc}
   11bc0:	mov	r0, r3
   11bc4:	cmp	r0, #1
   11bc8:	sub	r3, r3, #1
   11bcc:	beq	11be0 <close_stdout@@Base+0x1b8>
   11bd0:	ldrb	r2, [r4, r3]
   11bd4:	cmp	r2, #47	; 0x2f
   11bd8:	popne	{r4, pc}
   11bdc:	b	11bc0 <close_stdout@@Base+0x198>
   11be0:	pop	{r4, pc}
   11be4:	push	{r3, r4, r5, r6, r7, lr}
   11be8:	subs	r4, r0, #0
   11bec:	ldr	r5, [pc, #172]	; 11ca0 <close_stdout@@Base+0x278>
   11bf0:	add	r5, pc, r5
   11bf4:	beq	11c7c <close_stdout@@Base+0x254>
   11bf8:	mov	r1, #47	; 0x2f
   11bfc:	bl	110bc <strrchr@plt>
   11c00:	subs	r6, r0, #0
   11c04:	beq	11c60 <close_stdout@@Base+0x238>
   11c08:	add	r7, r6, #1
   11c0c:	rsb	r3, r4, r7
   11c10:	cmp	r3, #6
   11c14:	ble	11c60 <close_stdout@@Base+0x238>
   11c18:	ldr	r1, [pc, #132]	; 11ca4 <close_stdout@@Base+0x27c>
   11c1c:	sub	r0, r6, #6
   11c20:	mov	r2, #7
   11c24:	add	r1, pc, r1
   11c28:	bl	110e0 <strncmp@plt>
   11c2c:	cmp	r0, #0
   11c30:	bne	11c60 <close_stdout@@Base+0x238>
   11c34:	ldr	r1, [pc, #108]	; 11ca8 <close_stdout@@Base+0x280>
   11c38:	mov	r0, r7
   11c3c:	mov	r2, #3
   11c40:	add	r1, pc, r1
   11c44:	bl	110e0 <strncmp@plt>
   11c48:	cmp	r0, #0
   11c4c:	movne	r4, r7
   11c50:	ldreq	r3, [pc, #84]	; 11cac <close_stdout@@Base+0x284>
   11c54:	addeq	r4, r6, #4
   11c58:	ldreq	r3, [r5, r3]
   11c5c:	streq	r4, [r3]
   11c60:	ldr	r2, [pc, #72]	; 11cb0 <close_stdout@@Base+0x288>
   11c64:	ldr	r3, [pc, #72]	; 11cb4 <close_stdout@@Base+0x28c>
   11c68:	ldr	r2, [r5, r2]
   11c6c:	str	r4, [r2]
   11c70:	ldr	r3, [r5, r3]
   11c74:	str	r4, [r3]
   11c78:	pop	{r3, r4, r5, r6, r7, pc}
   11c7c:	ldr	r3, [pc, #52]	; 11cb8 <close_stdout@@Base+0x290>
   11c80:	mov	r1, #1
   11c84:	ldr	r0, [pc, #48]	; 11cbc <close_stdout@@Base+0x294>
   11c88:	mov	r2, #55	; 0x37
   11c8c:	ldr	r3, [r5, r3]
   11c90:	add	r0, pc, r0
   11c94:	ldr	r3, [r3]
   11c98:	bl	10f54 <fwrite@plt>
   11c9c:	bl	110ec <abort@plt>
   11ca0:	andeq	r4, r1, r8, lsl #8
   11ca4:	ldrdeq	r2, [r0], -r8
   11ca8:	andeq	r2, r0, r4, asr #29
   11cac:	andeq	r0, r0, r8, lsl r1
   11cb0:	andeq	r0, r0, r0, lsl r1
   11cb4:	andeq	r0, r0, ip, lsl #2
   11cb8:	strdeq	r0, [r0], -r4
   11cbc:	andeq	r2, r0, r4, lsr lr
   11cc0:	push	{r3, lr}
   11cc4:	mov	r3, r0
   11cc8:	mov	r2, #0
   11ccc:	cmp	r1, #8
   11cd0:	str	r2, [r3], #4
   11cd4:	add	r3, r3, #4
   11cd8:	str	r2, [r0, #4]
   11cdc:	str	r2, [r3], #4
   11ce0:	str	r2, [r3], #4
   11ce4:	str	r2, [r3], #4
   11ce8:	str	r2, [r3], #4
   11cec:	str	r2, [r3], #4
   11cf0:	str	r2, [r3], #4
   11cf4:	str	r2, [r3], #4
   11cf8:	str	r2, [r3], #4
   11cfc:	str	r2, [r3], #4
   11d00:	str	r2, [r3]
   11d04:	beq	11d10 <close_stdout@@Base+0x2e8>
   11d08:	str	r1, [r0]
   11d0c:	pop	{r3, pc}
   11d10:	bl	110ec <abort@plt>
   11d14:	push	{r4, r5, r6, lr}
   11d18:	mov	r4, r0
   11d1c:	mov	r6, r1
   11d20:	mov	r0, #0
   11d24:	mov	r1, r4
   11d28:	mov	r2, #5
   11d2c:	bl	10f18 <dcgettext@plt>
   11d30:	cmp	r0, r4
   11d34:	mov	r5, r0
   11d38:	beq	11d40 <close_stdout@@Base+0x318>
   11d3c:	pop	{r4, r5, r6, pc}
   11d40:	bl	13ccc <close_stdout@@Base+0x22a4>
   11d44:	ldrb	r3, [r0]
   11d48:	bic	r3, r3, #32
   11d4c:	cmp	r3, #85	; 0x55
   11d50:	bne	11dc4 <close_stdout@@Base+0x39c>
   11d54:	ldrb	r3, [r0, #1]
   11d58:	bic	r3, r3, #32
   11d5c:	cmp	r3, #84	; 0x54
   11d60:	bne	11db0 <close_stdout@@Base+0x388>
   11d64:	ldrb	r3, [r0, #2]
   11d68:	bic	r3, r3, #32
   11d6c:	cmp	r3, #70	; 0x46
   11d70:	bne	11db0 <close_stdout@@Base+0x388>
   11d74:	ldrb	r3, [r0, #3]
   11d78:	cmp	r3, #45	; 0x2d
   11d7c:	bne	11db0 <close_stdout@@Base+0x388>
   11d80:	ldrb	r3, [r0, #4]
   11d84:	cmp	r3, #56	; 0x38
   11d88:	bne	11db0 <close_stdout@@Base+0x388>
   11d8c:	ldrb	r3, [r0, #5]
   11d90:	cmp	r3, #0
   11d94:	bne	11db0 <close_stdout@@Base+0x388>
   11d98:	ldrb	r3, [r5]
   11d9c:	cmp	r3, #96	; 0x60
   11da0:	beq	11e3c <close_stdout@@Base+0x414>
   11da4:	ldr	r0, [pc, #180]	; 11e60 <close_stdout@@Base+0x438>
   11da8:	add	r0, pc, r0
   11dac:	pop	{r4, r5, r6, pc}
   11db0:	cmp	r6, #7
   11db4:	beq	11e48 <close_stdout@@Base+0x420>
   11db8:	ldr	r0, [pc, #164]	; 11e64 <close_stdout@@Base+0x43c>
   11dbc:	add	r0, pc, r0
   11dc0:	pop	{r4, r5, r6, pc}
   11dc4:	cmp	r3, #71	; 0x47
   11dc8:	bne	11db0 <close_stdout@@Base+0x388>
   11dcc:	ldrb	r3, [r0, #1]
   11dd0:	bic	r3, r3, #32
   11dd4:	cmp	r3, #66	; 0x42
   11dd8:	bne	11db0 <close_stdout@@Base+0x388>
   11ddc:	ldrb	r3, [r0, #2]
   11de0:	cmp	r3, #49	; 0x31
   11de4:	bne	11db0 <close_stdout@@Base+0x388>
   11de8:	ldrb	r3, [r0, #3]
   11dec:	cmp	r3, #56	; 0x38
   11df0:	bne	11db0 <close_stdout@@Base+0x388>
   11df4:	ldrb	r3, [r0, #4]
   11df8:	cmp	r3, #48	; 0x30
   11dfc:	bne	11db0 <close_stdout@@Base+0x388>
   11e00:	ldrb	r3, [r0, #5]
   11e04:	cmp	r3, #51	; 0x33
   11e08:	bne	11db0 <close_stdout@@Base+0x388>
   11e0c:	ldrb	r3, [r0, #6]
   11e10:	cmp	r3, #48	; 0x30
   11e14:	bne	11db0 <close_stdout@@Base+0x388>
   11e18:	ldrb	r3, [r0, #7]
   11e1c:	cmp	r3, #0
   11e20:	bne	11db0 <close_stdout@@Base+0x388>
   11e24:	ldrb	r3, [r5]
   11e28:	cmp	r3, #96	; 0x60
   11e2c:	beq	11e54 <close_stdout@@Base+0x42c>
   11e30:	ldr	r0, [pc, #48]	; 11e68 <close_stdout@@Base+0x440>
   11e34:	add	r0, pc, r0
   11e38:	pop	{r4, r5, r6, pc}
   11e3c:	ldr	r0, [pc, #40]	; 11e6c <close_stdout@@Base+0x444>
   11e40:	add	r0, pc, r0
   11e44:	pop	{r4, r5, r6, pc}
   11e48:	ldr	r0, [pc, #32]	; 11e70 <close_stdout@@Base+0x448>
   11e4c:	add	r0, pc, r0
   11e50:	pop	{r4, r5, r6, pc}
   11e54:	ldr	r0, [pc, #24]	; 11e74 <close_stdout@@Base+0x44c>
   11e58:	add	r0, pc, r0
   11e5c:	pop	{r4, r5, r6, pc}
   11e60:	andeq	r2, r0, r0, lsl #27
   11e64:	andeq	r2, r0, r4, ror sp
   11e68:	strdeq	r2, [r0], -r8
   11e6c:	strdeq	r2, [r0], -ip
   11e70:	andeq	r2, r0, r8, ror #25
   11e74:	andeq	r2, r0, r0, ror #25
   11e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e7c:	sub	sp, sp, #124	; 0x7c
   11e80:	ldr	ip, [pc, #3304]	; 12b70 <close_stdout@@Base+0x1148>
   11e84:	mov	sl, r1
   11e88:	str	r0, [sp, #40]	; 0x28
   11e8c:	mov	r8, r3
   11e90:	ldr	r0, [pc, #3292]	; 12b74 <close_stdout@@Base+0x114c>
   11e94:	add	ip, pc, ip
   11e98:	str	r2, [sp, #32]
   11e9c:	ldr	r1, [sp, #164]	; 0xa4
   11ea0:	mov	r3, ip
   11ea4:	ldr	r0, [ip, r0]
   11ea8:	ldr	r2, [sp, #172]	; 0xac
   11eac:	ubfx	r1, r1, #1, #1
   11eb0:	str	r1, [sp, #36]	; 0x24
   11eb4:	str	r0, [sp, #56]	; 0x38
   11eb8:	ldr	r0, [sp, #168]	; 0xa8
   11ebc:	ldr	r1, [sp, #176]	; 0xb0
   11ec0:	str	r2, [sp, #72]	; 0x48
   11ec4:	str	r0, [sp, #48]	; 0x30
   11ec8:	ldr	r0, [sp, #56]	; 0x38
   11ecc:	str	r1, [sp, #68]	; 0x44
   11ed0:	ldr	r3, [r0]
   11ed4:	str	r3, [sp, #116]	; 0x74
   11ed8:	bl	10f6c <__ctype_get_mb_cur_max@plt>
   11edc:	ldr	r2, [sp, #160]	; 0xa0
   11ee0:	str	r0, [sp, #64]	; 0x40
   11ee4:	cmp	r2, #8
   11ee8:	addls	pc, pc, r2, lsl #2
   11eec:	b	12a4c <close_stdout@@Base+0x1024>
   11ef0:	b	11f14 <close_stdout@@Base+0x4ec>
   11ef4:	b	12764 <close_stdout@@Base+0xd3c>
   11ef8:	b	12794 <close_stdout@@Base+0xd6c>
   11efc:	b	12644 <close_stdout@@Base+0xc1c>
   11f00:	b	12684 <close_stdout@@Base+0xc5c>
   11f04:	b	126b0 <close_stdout@@Base+0xc88>
   11f08:	b	126d0 <close_stdout@@Base+0xca8>
   11f0c:	b	126d0 <close_stdout@@Base+0xca8>
   11f10:	b	126d0 <close_stdout@@Base+0xca8>
   11f14:	mov	r2, #0
   11f18:	str	r2, [sp, #36]	; 0x24
   11f1c:	mov	r9, r2
   11f20:	str	r2, [sp, #24]
   11f24:	str	r2, [sp, #28]
   11f28:	str	r2, [sp, #52]	; 0x34
   11f2c:	ldr	r0, [sp, #36]	; 0x24
   11f30:	mov	fp, #0
   11f34:	ldr	r1, [sp, #24]
   11f38:	eor	r2, r0, #1
   11f3c:	eor	r3, r1, #1
   11f40:	and	r3, r2, r3
   11f44:	and	r2, r1, r0
   11f48:	str	r3, [sp, #44]	; 0x2c
   11f4c:	str	r2, [sp, #76]	; 0x4c
   11f50:	cmn	r8, #1
   11f54:	beq	122d4 <close_stdout@@Base+0x8ac>
   11f58:	subs	r3, fp, r8
   11f5c:	movne	r3, #1
   11f60:	cmp	r3, #0
   11f64:	beq	122ec <close_stdout@@Base+0x8c4>
   11f68:	ldr	r3, [sp, #28]
   11f6c:	ldr	r0, [sp, #24]
   11f70:	adds	r7, r3, #0
   11f74:	movne	r7, #1
   11f78:	ands	r6, r7, r0
   11f7c:	bne	127d8 <close_stdout@@Base+0xdb0>
   11f80:	ldr	r1, [sp, #32]
   11f84:	add	r5, r1, fp
   11f88:	ldrb	r4, [r5]
   11f8c:	cmp	r4, #126	; 0x7e
   11f90:	addls	pc, pc, r4, lsl #2
   11f94:	b	12558 <close_stdout@@Base+0xb30>
   11f98:	b	12464 <close_stdout@@Base+0xa3c>
   11f9c:	b	12558 <close_stdout@@Base+0xb30>
   11fa0:	b	12558 <close_stdout@@Base+0xb30>
   11fa4:	b	12558 <close_stdout@@Base+0xb30>
   11fa8:	b	12558 <close_stdout@@Base+0xb30>
   11fac:	b	12558 <close_stdout@@Base+0xb30>
   11fb0:	b	12558 <close_stdout@@Base+0xb30>
   11fb4:	b	1244c <close_stdout@@Base+0xa24>
   11fb8:	b	12434 <close_stdout@@Base+0xa0c>
   11fbc:	b	1245c <close_stdout@@Base+0xa34>
   11fc0:	b	12454 <close_stdout@@Base+0xa2c>
   11fc4:	b	12444 <close_stdout@@Base+0xa1c>
   11fc8:	b	1243c <close_stdout@@Base+0xa14>
   11fcc:	b	12400 <close_stdout@@Base+0x9d8>
   11fd0:	b	12558 <close_stdout@@Base+0xb30>
   11fd4:	b	12558 <close_stdout@@Base+0xb30>
   11fd8:	b	12558 <close_stdout@@Base+0xb30>
   11fdc:	b	12558 <close_stdout@@Base+0xb30>
   11fe0:	b	12558 <close_stdout@@Base+0xb30>
   11fe4:	b	12558 <close_stdout@@Base+0xb30>
   11fe8:	b	12558 <close_stdout@@Base+0xb30>
   11fec:	b	12558 <close_stdout@@Base+0xb30>
   11ff0:	b	12558 <close_stdout@@Base+0xb30>
   11ff4:	b	12558 <close_stdout@@Base+0xb30>
   11ff8:	b	12558 <close_stdout@@Base+0xb30>
   11ffc:	b	12558 <close_stdout@@Base+0xb30>
   12000:	b	12558 <close_stdout@@Base+0xb30>
   12004:	b	12558 <close_stdout@@Base+0xb30>
   12008:	b	12558 <close_stdout@@Base+0xb30>
   1200c:	b	12558 <close_stdout@@Base+0xb30>
   12010:	b	12558 <close_stdout@@Base+0xb30>
   12014:	b	12558 <close_stdout@@Base+0xb30>
   12018:	b	1238c <close_stdout@@Base+0x964>
   1201c:	b	1238c <close_stdout@@Base+0x964>
   12020:	b	1238c <close_stdout@@Base+0x964>
   12024:	b	12384 <close_stdout@@Base+0x95c>
   12028:	b	1238c <close_stdout@@Base+0x964>
   1202c:	b	12260 <close_stdout@@Base+0x838>
   12030:	b	1238c <close_stdout@@Base+0x964>
   12034:	b	12500 <close_stdout@@Base+0xad8>
   12038:	b	1238c <close_stdout@@Base+0x964>
   1203c:	b	1238c <close_stdout@@Base+0x964>
   12040:	b	1238c <close_stdout@@Base+0x964>
   12044:	b	12260 <close_stdout@@Base+0x838>
   12048:	b	12260 <close_stdout@@Base+0x838>
   1204c:	b	12260 <close_stdout@@Base+0x838>
   12050:	b	12260 <close_stdout@@Base+0x838>
   12054:	b	12260 <close_stdout@@Base+0x838>
   12058:	b	12260 <close_stdout@@Base+0x838>
   1205c:	b	12260 <close_stdout@@Base+0x838>
   12060:	b	12260 <close_stdout@@Base+0x838>
   12064:	b	12260 <close_stdout@@Base+0x838>
   12068:	b	12260 <close_stdout@@Base+0x838>
   1206c:	b	12260 <close_stdout@@Base+0x838>
   12070:	b	12260 <close_stdout@@Base+0x838>
   12074:	b	12260 <close_stdout@@Base+0x838>
   12078:	b	12260 <close_stdout@@Base+0x838>
   1207c:	b	12260 <close_stdout@@Base+0x838>
   12080:	b	12260 <close_stdout@@Base+0x838>
   12084:	b	1238c <close_stdout@@Base+0x964>
   12088:	b	1238c <close_stdout@@Base+0x964>
   1208c:	b	1238c <close_stdout@@Base+0x964>
   12090:	b	1238c <close_stdout@@Base+0x964>
   12094:	b	12194 <close_stdout@@Base+0x76c>
   12098:	b	12558 <close_stdout@@Base+0xb30>
   1209c:	b	12260 <close_stdout@@Base+0x838>
   120a0:	b	12260 <close_stdout@@Base+0x838>
   120a4:	b	12260 <close_stdout@@Base+0x838>
   120a8:	b	12260 <close_stdout@@Base+0x838>
   120ac:	b	12260 <close_stdout@@Base+0x838>
   120b0:	b	12260 <close_stdout@@Base+0x838>
   120b4:	b	12260 <close_stdout@@Base+0x838>
   120b8:	b	12260 <close_stdout@@Base+0x838>
   120bc:	b	12260 <close_stdout@@Base+0x838>
   120c0:	b	12260 <close_stdout@@Base+0x838>
   120c4:	b	12260 <close_stdout@@Base+0x838>
   120c8:	b	12260 <close_stdout@@Base+0x838>
   120cc:	b	12260 <close_stdout@@Base+0x838>
   120d0:	b	12260 <close_stdout@@Base+0x838>
   120d4:	b	12260 <close_stdout@@Base+0x838>
   120d8:	b	12260 <close_stdout@@Base+0x838>
   120dc:	b	12260 <close_stdout@@Base+0x838>
   120e0:	b	12260 <close_stdout@@Base+0x838>
   120e4:	b	12260 <close_stdout@@Base+0x838>
   120e8:	b	12260 <close_stdout@@Base+0x838>
   120ec:	b	12260 <close_stdout@@Base+0x838>
   120f0:	b	12260 <close_stdout@@Base+0x838>
   120f4:	b	12260 <close_stdout@@Base+0x838>
   120f8:	b	12260 <close_stdout@@Base+0x838>
   120fc:	b	12260 <close_stdout@@Base+0x838>
   12100:	b	12260 <close_stdout@@Base+0x838>
   12104:	b	1238c <close_stdout@@Base+0x964>
   12108:	b	124e4 <close_stdout@@Base+0xabc>
   1210c:	b	12260 <close_stdout@@Base+0x838>
   12110:	b	1238c <close_stdout@@Base+0x964>
   12114:	b	12260 <close_stdout@@Base+0x838>
   12118:	b	1238c <close_stdout@@Base+0x964>
   1211c:	b	12260 <close_stdout@@Base+0x838>
   12120:	b	12260 <close_stdout@@Base+0x838>
   12124:	b	12260 <close_stdout@@Base+0x838>
   12128:	b	12260 <close_stdout@@Base+0x838>
   1212c:	b	12260 <close_stdout@@Base+0x838>
   12130:	b	12260 <close_stdout@@Base+0x838>
   12134:	b	12260 <close_stdout@@Base+0x838>
   12138:	b	12260 <close_stdout@@Base+0x838>
   1213c:	b	12260 <close_stdout@@Base+0x838>
   12140:	b	12260 <close_stdout@@Base+0x838>
   12144:	b	12260 <close_stdout@@Base+0x838>
   12148:	b	12260 <close_stdout@@Base+0x838>
   1214c:	b	12260 <close_stdout@@Base+0x838>
   12150:	b	12260 <close_stdout@@Base+0x838>
   12154:	b	12260 <close_stdout@@Base+0x838>
   12158:	b	12260 <close_stdout@@Base+0x838>
   1215c:	b	12260 <close_stdout@@Base+0x838>
   12160:	b	12260 <close_stdout@@Base+0x838>
   12164:	b	12260 <close_stdout@@Base+0x838>
   12168:	b	12260 <close_stdout@@Base+0x838>
   1216c:	b	12260 <close_stdout@@Base+0x838>
   12170:	b	12260 <close_stdout@@Base+0x838>
   12174:	b	12260 <close_stdout@@Base+0x838>
   12178:	b	12260 <close_stdout@@Base+0x838>
   1217c:	b	12260 <close_stdout@@Base+0x838>
   12180:	b	12260 <close_stdout@@Base+0x838>
   12184:	b	1236c <close_stdout@@Base+0x944>
   12188:	b	1238c <close_stdout@@Base+0x964>
   1218c:	b	1236c <close_stdout@@Base+0x944>
   12190:	b	12384 <close_stdout@@Base+0x95c>
   12194:	ldr	r3, [sp, #160]	; 0xa0
   12198:	cmp	r3, #2
   1219c:	beq	12a28 <close_stdout@@Base+0x1000>
   121a0:	cmp	r3, #3
   121a4:	bne	12260 <close_stdout@@Base+0x838>
   121a8:	ldr	r1, [sp, #164]	; 0xa4
   121ac:	tst	r1, #4
   121b0:	beq	12260 <close_stdout@@Base+0x838>
   121b4:	add	r3, fp, #2
   121b8:	cmp	r8, r3
   121bc:	bls	12260 <close_stdout@@Base+0x838>
   121c0:	ldrb	r2, [r5, #1]
   121c4:	mov	r1, #1
   121c8:	cmp	r2, #63	; 0x3f
   121cc:	bne	12260 <close_stdout@@Base+0x838>
   121d0:	ldr	r0, [sp, #32]
   121d4:	ldrb	ip, [r0, r3]
   121d8:	sub	r0, ip, #33	; 0x21
   121dc:	uxtb	r0, r0
   121e0:	cmp	r0, #29
   121e4:	bhi	12260 <close_stdout@@Base+0x838>
   121e8:	lsl	r1, r1, r0
   121ec:	movw	r0, #20929	; 0x51c1
   121f0:	movt	r0, #14336	; 0x3800
   121f4:	and	r0, r1, r0
   121f8:	cmp	r0, #0
   121fc:	beq	12260 <close_stdout@@Base+0x838>
   12200:	ldr	r1, [sp, #36]	; 0x24
   12204:	cmp	r1, #0
   12208:	bne	123a8 <close_stdout@@Base+0x980>
   1220c:	cmp	r9, sl
   12210:	mov	r4, ip
   12214:	mov	fp, r3
   12218:	ldrcc	r0, [sp, #40]	; 0x28
   1221c:	strbcc	r2, [r0, r9]
   12220:	add	r2, r9, #1
   12224:	cmp	sl, r2
   12228:	ldrhi	r0, [sp, #40]	; 0x28
   1222c:	movhi	r1, #34	; 0x22
   12230:	strbhi	r1, [r0, r2]
   12234:	add	r2, r9, #2
   12238:	cmp	sl, r2
   1223c:	ldrhi	r0, [sp, #40]	; 0x28
   12240:	movhi	r1, #34	; 0x22
   12244:	strbhi	r1, [r0, r2]
   12248:	add	r2, r9, #3
   1224c:	cmp	sl, r2
   12250:	add	r9, r9, #4
   12254:	ldrhi	r0, [sp, #40]	; 0x28
   12258:	movhi	r1, #63	; 0x3f
   1225c:	strbhi	r1, [r0, r2]
   12260:	ldr	r0, [sp, #44]	; 0x2c
   12264:	cmp	r0, #0
   12268:	bne	12290 <close_stdout@@Base+0x868>
   1226c:	ldr	r1, [sp, #48]	; 0x30
   12270:	cmp	r1, #0
   12274:	beq	12290 <close_stdout@@Base+0x868>
   12278:	ubfx	r2, r4, #5, #8
   1227c:	and	r3, r4, #31
   12280:	ldr	r2, [r1, r2, lsl #2]
   12284:	lsr	r3, r2, r3
   12288:	tst	r3, #1
   1228c:	bne	12298 <close_stdout@@Base+0x870>
   12290:	cmp	r6, #0
   12294:	beq	122b8 <close_stdout@@Base+0x890>
   12298:	ldr	r2, [sp, #36]	; 0x24
   1229c:	cmp	r2, #0
   122a0:	bne	123a8 <close_stdout@@Base+0x980>
   122a4:	cmp	r9, sl
   122a8:	ldrcc	r0, [sp, #40]	; 0x28
   122ac:	movcc	r3, #92	; 0x5c
   122b0:	strbcc	r3, [r0, r9]
   122b4:	add	r9, r9, #1
   122b8:	add	fp, fp, #1
   122bc:	cmp	r9, sl
   122c0:	ldrcc	r1, [sp, #40]	; 0x28
   122c4:	strbcc	r4, [r1, r9]
   122c8:	cmn	r8, #1
   122cc:	add	r9, r9, #1
   122d0:	bne	11f58 <close_stdout@@Base+0x530>
   122d4:	ldr	r2, [sp, #32]
   122d8:	ldrb	r3, [r2, fp]
   122dc:	adds	r3, r3, #0
   122e0:	movne	r3, #1
   122e4:	cmp	r3, #0
   122e8:	bne	11f68 <close_stdout@@Base+0x540>
   122ec:	ldr	r3, [sp, #160]	; 0xa0
   122f0:	cmp	r9, #0
   122f4:	cmpeq	r3, #2
   122f8:	bne	12308 <close_stdout@@Base+0x8e0>
   122fc:	ldr	r0, [sp, #36]	; 0x24
   12300:	cmp	r0, #0
   12304:	bne	123a8 <close_stdout@@Base+0x980>
   12308:	ldr	r1, [sp, #36]	; 0x24
   1230c:	ldr	r2, [sp, #52]	; 0x34
   12310:	eor	r3, r1, #1
   12314:	cmp	r2, #0
   12318:	moveq	r3, #0
   1231c:	andne	r3, r3, #1
   12320:	cmp	r3, #0
   12324:	beq	12350 <close_stdout@@Base+0x928>
   12328:	ldrb	r3, [r2]
   1232c:	cmp	r3, #0
   12330:	beq	12350 <close_stdout@@Base+0x928>
   12334:	ldr	r1, [sp, #40]	; 0x28
   12338:	cmp	sl, r9
   1233c:	strbhi	r3, [r1, r9]
   12340:	ldrb	r3, [r2, #1]!
   12344:	add	r9, r9, #1
   12348:	cmp	r3, #0
   1234c:	bne	12338 <close_stdout@@Base+0x910>
   12350:	cmp	r9, sl
   12354:	movcs	r0, r9
   12358:	ldrcc	r1, [sp, #40]	; 0x28
   1235c:	movcc	r3, #0
   12360:	movcc	r0, r9
   12364:	strbcc	r3, [r1, r9]
   12368:	b	123e4 <close_stdout@@Base+0x9bc>
   1236c:	cmn	r8, #1
   12370:	beq	12a38 <close_stdout@@Base+0x1010>
   12374:	subs	r3, r8, #1
   12378:	movne	r3, #1
   1237c:	cmp	r3, #0
   12380:	bne	12260 <close_stdout@@Base+0x838>
   12384:	cmp	fp, #0
   12388:	bne	12260 <close_stdout@@Base+0x838>
   1238c:	ldr	r3, [sp, #36]	; 0x24
   12390:	ldr	r0, [sp, #160]	; 0xa0
   12394:	cmp	r0, #2
   12398:	movne	r3, #0
   1239c:	andeq	r3, r3, #1
   123a0:	cmp	r3, #0
   123a4:	beq	12260 <close_stdout@@Base+0x838>
   123a8:	ldr	r2, [sp, #164]	; 0xa4
   123ac:	mov	ip, #0
   123b0:	ldr	r0, [sp, #160]	; 0xa0
   123b4:	bic	r3, r2, #2
   123b8:	ldr	r1, [sp, #72]	; 0x48
   123bc:	ldr	r2, [sp, #68]	; 0x44
   123c0:	stm	sp, {r0, r3}
   123c4:	mov	r3, r8
   123c8:	str	r1, [sp, #12]
   123cc:	mov	r1, sl
   123d0:	str	r2, [sp, #16]
   123d4:	ldr	r0, [sp, #40]	; 0x28
   123d8:	ldr	r2, [sp, #32]
   123dc:	str	ip, [sp, #8]
   123e0:	bl	11e78 <close_stdout@@Base+0x450>
   123e4:	ldr	r1, [sp, #56]	; 0x38
   123e8:	ldr	r2, [sp, #116]	; 0x74
   123ec:	ldr	r3, [r1]
   123f0:	cmp	r2, r3
   123f4:	bne	12b28 <close_stdout@@Base+0x1100>
   123f8:	add	sp, sp, #124	; 0x7c
   123fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12400:	mov	r3, #114	; 0x72
   12404:	ldr	r2, [sp, #36]	; 0x24
   12408:	ldr	r0, [sp, #160]	; 0xa0
   1240c:	cmp	r0, #2
   12410:	movne	r2, #0
   12414:	andeq	r2, r2, #1
   12418:	cmp	r2, #0
   1241c:	bne	123a8 <close_stdout@@Base+0x980>
   12420:	ldr	r1, [sp, #24]
   12424:	cmp	r1, #0
   12428:	beq	12260 <close_stdout@@Base+0x838>
   1242c:	mov	r4, r3
   12430:	b	12298 <close_stdout@@Base+0x870>
   12434:	mov	r3, #98	; 0x62
   12438:	b	12420 <close_stdout@@Base+0x9f8>
   1243c:	mov	r3, #102	; 0x66
   12440:	b	12420 <close_stdout@@Base+0x9f8>
   12444:	mov	r3, #118	; 0x76
   12448:	b	12420 <close_stdout@@Base+0x9f8>
   1244c:	mov	r3, #97	; 0x61
   12450:	b	12420 <close_stdout@@Base+0x9f8>
   12454:	mov	r3, #110	; 0x6e
   12458:	b	12404 <close_stdout@@Base+0x9dc>
   1245c:	mov	r3, #116	; 0x74
   12460:	b	12404 <close_stdout@@Base+0x9dc>
   12464:	ldr	r2, [sp, #24]
   12468:	cmp	r2, #0
   1246c:	beq	12a14 <close_stdout@@Base+0xfec>
   12470:	ldr	r3, [sp, #36]	; 0x24
   12474:	cmp	r3, #0
   12478:	bne	123a8 <close_stdout@@Base+0x980>
   1247c:	cmp	r9, sl
   12480:	add	r2, r9, #1
   12484:	ldrcc	r0, [sp, #40]	; 0x28
   12488:	movcc	r3, #92	; 0x5c
   1248c:	strbcc	r3, [r0, r9]
   12490:	add	r3, fp, #1
   12494:	cmp	r8, r3
   12498:	bls	124d8 <close_stdout@@Base+0xab0>
   1249c:	ldr	r1, [sp, #32]
   124a0:	ldrb	r3, [r1, r3]
   124a4:	sub	r3, r3, #48	; 0x30
   124a8:	cmp	r3, #9
   124ac:	bhi	124d8 <close_stdout@@Base+0xab0>
   124b0:	cmp	sl, r2
   124b4:	ldrhi	r0, [sp, #40]	; 0x28
   124b8:	movhi	r3, #48	; 0x30
   124bc:	strbhi	r3, [r0, r2]
   124c0:	add	r3, r9, #2
   124c4:	cmp	sl, r3
   124c8:	ldrhi	r1, [sp, #40]	; 0x28
   124cc:	movhi	r2, #48	; 0x30
   124d0:	strbhi	r2, [r1, r3]
   124d4:	add	r2, r9, #3
   124d8:	mov	r9, r2
   124dc:	mov	r4, #48	; 0x30
   124e0:	b	1226c <close_stdout@@Base+0x844>
   124e4:	ldr	r1, [sp, #76]	; 0x4c
   124e8:	cmp	r1, #0
   124ec:	beq	124f8 <close_stdout@@Base+0xad0>
   124f0:	cmp	r7, #0
   124f4:	bne	122b8 <close_stdout@@Base+0x890>
   124f8:	mov	r3, r4
   124fc:	b	12404 <close_stdout@@Base+0x9dc>
   12500:	ldr	r1, [sp, #160]	; 0xa0
   12504:	cmp	r1, #2
   12508:	bne	12260 <close_stdout@@Base+0x838>
   1250c:	ldr	r2, [sp, #36]	; 0x24
   12510:	cmp	r2, #0
   12514:	bne	123a8 <close_stdout@@Base+0x980>
   12518:	cmp	r9, sl
   1251c:	ldrcc	r0, [sp, #40]	; 0x28
   12520:	movcc	r3, #39	; 0x27
   12524:	strbcc	r3, [r0, r9]
   12528:	add	r3, r9, #1
   1252c:	cmp	sl, r3
   12530:	ldrhi	r1, [sp, #40]	; 0x28
   12534:	movhi	r2, #92	; 0x5c
   12538:	strbhi	r2, [r1, r3]
   1253c:	add	r3, r9, #2
   12540:	cmp	sl, r3
   12544:	add	r9, r9, #3
   12548:	ldrhi	r0, [sp, #40]	; 0x28
   1254c:	movhi	r2, #39	; 0x27
   12550:	strbhi	r2, [r0, r3]
   12554:	b	12260 <close_stdout@@Base+0x838>
   12558:	ldr	r1, [sp, #64]	; 0x40
   1255c:	cmp	r1, #1
   12560:	bne	12858 <close_stdout@@Base+0xe30>
   12564:	bl	10ffc <__ctype_b_loc@plt>
   12568:	ldr	r2, [sp, #64]	; 0x40
   1256c:	sxth	r3, r4
   12570:	str	r2, [sp, #60]	; 0x3c
   12574:	lsl	r3, r3, #1
   12578:	ldr	r2, [r0]
   1257c:	ldrh	r2, [r2, r3]
   12580:	eor	r2, r2, #16384	; 0x4000
   12584:	ubfx	r2, r2, #14, #1
   12588:	ldr	r1, [sp, #24]
   1258c:	ands	r2, r2, r1
   12590:	beq	12260 <close_stdout@@Base+0x838>
   12594:	ldr	r3, [sp, #60]	; 0x3c
   12598:	mov	r0, #92	; 0x5c
   1259c:	ldr	r7, [sp, #36]	; 0x24
   125a0:	add	r1, r3, fp
   125a4:	str	r8, [sp, #60]	; 0x3c
   125a8:	ldr	r3, [sp, #40]	; 0x28
   125ac:	b	12610 <close_stdout@@Base+0xbe8>
   125b0:	cmp	r7, #0
   125b4:	bne	12a50 <close_stdout@@Base+0x1028>
   125b8:	add	ip, r9, #1
   125bc:	cmp	r9, sl
   125c0:	strbcc	r0, [r3, r9]
   125c4:	cmp	sl, ip
   125c8:	lsrhi	r8, r4, #6
   125cc:	addhi	r8, r8, #48	; 0x30
   125d0:	strbhi	r8, [r3, ip]
   125d4:	add	ip, r9, #2
   125d8:	add	r9, r9, #3
   125dc:	cmp	sl, ip
   125e0:	ubfxhi	r8, r4, #3, #3
   125e4:	and	r4, r4, #7
   125e8:	add	r4, r4, #48	; 0x30
   125ec:	addhi	r8, r8, #48	; 0x30
   125f0:	strbhi	r8, [r3, ip]
   125f4:	add	fp, fp, #1
   125f8:	cmp	r1, fp
   125fc:	bls	1263c <close_stdout@@Base+0xc14>
   12600:	cmp	r9, sl
   12604:	strbcc	r4, [r3, r9]
   12608:	ldrb	r4, [r5, #1]!
   1260c:	add	r9, r9, #1
   12610:	cmp	r2, #0
   12614:	bne	125b0 <close_stdout@@Base+0xb88>
   12618:	cmp	r6, #0
   1261c:	beq	125f4 <close_stdout@@Base+0xbcc>
   12620:	add	fp, fp, #1
   12624:	cmp	r9, sl
   12628:	strbcc	r0, [r3, r9]
   1262c:	cmp	r1, fp
   12630:	add	r9, r9, #1
   12634:	mov	r6, #0
   12638:	bhi	12600 <close_stdout@@Base+0xbd8>
   1263c:	ldr	r8, [sp, #60]	; 0x3c
   12640:	b	122bc <close_stdout@@Base+0x894>
   12644:	ldr	r3, [sp, #36]	; 0x24
   12648:	cmp	r3, #0
   1264c:	bne	12b50 <close_stdout@@Base+0x1128>
   12650:	cmp	sl, #0
   12654:	beq	12a68 <close_stdout@@Base+0x1040>
   12658:	ldr	r1, [sp, #40]	; 0x28
   1265c:	mov	r0, #1
   12660:	ldr	r2, [pc, #1296]	; 12b78 <close_stdout@@Base+0x1150>
   12664:	mov	r3, #34	; 0x22
   12668:	str	r0, [sp, #24]
   1266c:	mov	r9, r0
   12670:	add	r2, pc, r2
   12674:	str	r0, [sp, #28]
   12678:	strb	r3, [r1]
   1267c:	str	r2, [sp, #52]	; 0x34
   12680:	b	11f2c <close_stdout@@Base+0x504>
   12684:	ldr	r3, [pc, #1264]	; 12b7c <close_stdout@@Base+0x1154>
   12688:	mov	r2, #1
   1268c:	mov	r0, #3
   12690:	str	r2, [sp, #36]	; 0x24
   12694:	add	r3, pc, r3
   12698:	str	r2, [sp, #24]
   1269c:	str	r3, [sp, #52]	; 0x34
   126a0:	mov	r9, #0
   126a4:	str	r2, [sp, #28]
   126a8:	str	r0, [sp, #160]	; 0xa0
   126ac:	b	11f2c <close_stdout@@Base+0x504>
   126b0:	mov	r0, #0
   126b4:	mov	r1, #1
   126b8:	str	r0, [sp, #36]	; 0x24
   126bc:	mov	r9, r0
   126c0:	str	r1, [sp, #24]
   126c4:	str	r0, [sp, #28]
   126c8:	str	r0, [sp, #52]	; 0x34
   126cc:	b	11f2c <close_stdout@@Base+0x504>
   126d0:	ldr	r3, [sp, #160]	; 0xa0
   126d4:	cmp	r3, #8
   126d8:	beq	12704 <close_stdout@@Base+0xcdc>
   126dc:	ldr	r0, [pc, #1180]	; 12b80 <close_stdout@@Base+0x1158>
   126e0:	mov	r1, r3
   126e4:	add	r0, pc, r0
   126e8:	bl	11d14 <close_stdout@@Base+0x2ec>
   126ec:	ldr	r1, [sp, #160]	; 0xa0
   126f0:	str	r0, [sp, #72]	; 0x48
   126f4:	ldr	r0, [pc, #1160]	; 12b84 <close_stdout@@Base+0x115c>
   126f8:	add	r0, pc, r0
   126fc:	bl	11d14 <close_stdout@@Base+0x2ec>
   12700:	str	r0, [sp, #68]	; 0x44
   12704:	ldr	r0, [sp, #36]	; 0x24
   12708:	cmp	r0, #0
   1270c:	movne	r9, #0
   12710:	bne	12748 <close_stdout@@Base+0xd20>
   12714:	ldr	r1, [sp, #72]	; 0x48
   12718:	ldrb	r3, [r1]
   1271c:	cmp	r3, #0
   12720:	beq	12b20 <close_stdout@@Base+0x10f8>
   12724:	mov	r2, r1
   12728:	ldr	r1, [sp, #40]	; 0x28
   1272c:	mov	r9, r0
   12730:	cmp	r9, sl
   12734:	strbcc	r3, [r1, r9]
   12738:	ldrb	r3, [r2, #1]!
   1273c:	add	r9, r9, #1
   12740:	cmp	r3, #0
   12744:	bne	12730 <close_stdout@@Base+0xd08>
   12748:	ldr	r0, [sp, #68]	; 0x44
   1274c:	str	r0, [sp, #52]	; 0x34
   12750:	bl	11014 <strlen@plt>
   12754:	mov	r2, #1
   12758:	str	r2, [sp, #24]
   1275c:	str	r0, [sp, #28]
   12760:	b	11f2c <close_stdout@@Base+0x504>
   12764:	ldr	r3, [pc, #1052]	; 12b88 <close_stdout@@Base+0x1160>
   12768:	mov	r2, #0
   1276c:	mov	r1, #1
   12770:	mov	r0, #2
   12774:	add	r3, pc, r3
   12778:	str	r1, [sp, #36]	; 0x24
   1277c:	str	r2, [sp, #24]
   12780:	mov	r9, r2
   12784:	str	r1, [sp, #28]
   12788:	str	r3, [sp, #52]	; 0x34
   1278c:	str	r0, [sp, #160]	; 0xa0
   12790:	b	11f2c <close_stdout@@Base+0x504>
   12794:	ldr	r3, [sp, #36]	; 0x24
   12798:	cmp	r3, #0
   1279c:	bne	12b2c <close_stdout@@Base+0x1104>
   127a0:	cmp	sl, #0
   127a4:	beq	12a88 <close_stdout@@Base+0x1060>
   127a8:	ldr	r1, [sp, #40]	; 0x28
   127ac:	mov	r3, #39	; 0x27
   127b0:	ldr	r2, [sp, #36]	; 0x24
   127b4:	mov	r0, #1
   127b8:	mov	r9, r0
   127bc:	str	r0, [sp, #28]
   127c0:	strb	r3, [r1]
   127c4:	ldr	r3, [pc, #960]	; 12b8c <close_stdout@@Base+0x1164>
   127c8:	str	r2, [sp, #24]
   127cc:	add	r3, pc, r3
   127d0:	str	r3, [sp, #52]	; 0x34
   127d4:	b	11f2c <close_stdout@@Base+0x504>
   127d8:	ldr	r2, [sp, #28]
   127dc:	cmp	r2, #1
   127e0:	add	r4, fp, r2
   127e4:	movls	r3, #0
   127e8:	movhi	r3, #1
   127ec:	cmn	r8, #1
   127f0:	movne	r3, #0
   127f4:	cmp	r3, #0
   127f8:	beq	12808 <close_stdout@@Base+0xde0>
   127fc:	ldr	r0, [sp, #32]
   12800:	bl	11014 <strlen@plt>
   12804:	mov	r8, r0
   12808:	cmp	r8, r4
   1280c:	ldrcc	r3, [sp, #32]
   12810:	movcc	r6, #0
   12814:	addcc	r5, r3, fp
   12818:	bcc	11f88 <close_stdout@@Base+0x560>
   1281c:	ldr	r0, [sp, #32]
   12820:	ldr	r1, [sp, #52]	; 0x34
   12824:	add	r5, r0, fp
   12828:	ldr	r2, [sp, #28]
   1282c:	mov	r0, r5
   12830:	bl	10f00 <memcmp@plt>
   12834:	cmp	r0, #0
   12838:	bne	12850 <close_stdout@@Base+0xe28>
   1283c:	ldr	r1, [sp, #36]	; 0x24
   12840:	cmp	r1, #0
   12844:	bne	123a8 <close_stdout@@Base+0x980>
   12848:	mov	r6, #1
   1284c:	b	11f88 <close_stdout@@Base+0x560>
   12850:	mov	r6, #0
   12854:	b	11f88 <close_stdout@@Base+0x560>
   12858:	add	r7, sp, #108	; 0x6c
   1285c:	cmn	r8, #1
   12860:	mov	r3, #0
   12864:	str	r3, [sp, #108]	; 0x6c
   12868:	str	r3, [r7, #4]
   1286c:	beq	12a58 <close_stdout@@Base+0x1030>
   12870:	mov	r1, #0
   12874:	ldr	r0, [sp, #32]
   12878:	mov	ip, #1
   1287c:	str	r9, [sp, #88]	; 0x58
   12880:	str	r6, [sp, #96]	; 0x60
   12884:	mov	r9, r1
   12888:	str	r5, [sp, #100]	; 0x64
   1288c:	mov	r6, ip
   12890:	mov	r5, r7
   12894:	add	r3, sp, #104	; 0x68
   12898:	sub	r0, r0, #1
   1289c:	str	r3, [sp, #80]	; 0x50
   128a0:	str	r0, [sp, #84]	; 0x54
   128a4:	str	r1, [sp, #60]	; 0x3c
   128a8:	str	r4, [sp, #92]	; 0x5c
   128ac:	ldr	r2, [sp, #32]
   128b0:	add	r7, r9, fp
   128b4:	add	r0, sp, #104	; 0x68
   128b8:	mov	r3, r5
   128bc:	add	r4, r2, r7
   128c0:	rsb	r2, r7, r8
   128c4:	mov	r1, r4
   128c8:	bl	10f90 <mbrtowc@plt>
   128cc:	subs	r2, r0, #0
   128d0:	beq	129dc <close_stdout@@Base+0xfb4>
   128d4:	cmn	r2, #1
   128d8:	beq	12b04 <close_stdout@@Base+0x10dc>
   128dc:	cmn	r2, #2
   128e0:	beq	12aa8 <close_stdout@@Base+0x1080>
   128e4:	ldr	r3, [sp, #36]	; 0x24
   128e8:	ldr	r0, [sp, #160]	; 0xa0
   128ec:	cmp	r0, #2
   128f0:	movne	r3, #0
   128f4:	andeq	r3, r3, #1
   128f8:	cmp	r3, #0
   128fc:	beq	129b8 <close_stdout@@Base+0xf90>
   12900:	cmp	r2, #1
   12904:	beq	129b8 <close_stdout@@Base+0xf90>
   12908:	ldr	r1, [sp, #84]	; 0x54
   1290c:	add	r3, r1, r2
   12910:	add	r7, r3, r7
   12914:	ldrb	r3, [r4, #1]!
   12918:	sub	r3, r3, #91	; 0x5b
   1291c:	cmp	r3, #33	; 0x21
   12920:	addls	pc, pc, r3, lsl #2
   12924:	b	129b0 <close_stdout@@Base+0xf88>
   12928:	b	123a8 <close_stdout@@Base+0x980>
   1292c:	b	123a8 <close_stdout@@Base+0x980>
   12930:	b	129b0 <close_stdout@@Base+0xf88>
   12934:	b	123a8 <close_stdout@@Base+0x980>
   12938:	b	129b0 <close_stdout@@Base+0xf88>
   1293c:	b	123a8 <close_stdout@@Base+0x980>
   12940:	b	129b0 <close_stdout@@Base+0xf88>
   12944:	b	129b0 <close_stdout@@Base+0xf88>
   12948:	b	129b0 <close_stdout@@Base+0xf88>
   1294c:	b	129b0 <close_stdout@@Base+0xf88>
   12950:	b	129b0 <close_stdout@@Base+0xf88>
   12954:	b	129b0 <close_stdout@@Base+0xf88>
   12958:	b	129b0 <close_stdout@@Base+0xf88>
   1295c:	b	129b0 <close_stdout@@Base+0xf88>
   12960:	b	129b0 <close_stdout@@Base+0xf88>
   12964:	b	129b0 <close_stdout@@Base+0xf88>
   12968:	b	129b0 <close_stdout@@Base+0xf88>
   1296c:	b	129b0 <close_stdout@@Base+0xf88>
   12970:	b	129b0 <close_stdout@@Base+0xf88>
   12974:	b	129b0 <close_stdout@@Base+0xf88>
   12978:	b	129b0 <close_stdout@@Base+0xf88>
   1297c:	b	129b0 <close_stdout@@Base+0xf88>
   12980:	b	129b0 <close_stdout@@Base+0xf88>
   12984:	b	129b0 <close_stdout@@Base+0xf88>
   12988:	b	129b0 <close_stdout@@Base+0xf88>
   1298c:	b	129b0 <close_stdout@@Base+0xf88>
   12990:	b	129b0 <close_stdout@@Base+0xf88>
   12994:	b	129b0 <close_stdout@@Base+0xf88>
   12998:	b	129b0 <close_stdout@@Base+0xf88>
   1299c:	b	129b0 <close_stdout@@Base+0xf88>
   129a0:	b	129b0 <close_stdout@@Base+0xf88>
   129a4:	b	129b0 <close_stdout@@Base+0xf88>
   129a8:	b	129b0 <close_stdout@@Base+0xf88>
   129ac:	b	123a8 <close_stdout@@Base+0x980>
   129b0:	cmp	r4, r7
   129b4:	bne	12914 <close_stdout@@Base+0xeec>
   129b8:	ldr	r0, [sp, #104]	; 0x68
   129bc:	add	r9, r9, r2
   129c0:	bl	10f48 <iswprint@plt>
   129c4:	cmp	r0, #0
   129c8:	mov	r0, r5
   129cc:	moveq	r6, #0
   129d0:	bl	10ef4 <mbsinit@plt>
   129d4:	cmp	r0, #0
   129d8:	beq	128ac <close_stdout@@Base+0xe84>
   129dc:	mov	ip, r6
   129e0:	eor	r2, ip, #1
   129e4:	str	r9, [sp, #60]	; 0x3c
   129e8:	ldr	r4, [sp, #92]	; 0x5c
   129ec:	uxtb	r2, r2
   129f0:	ldr	r9, [sp, #88]	; 0x58
   129f4:	ldr	r6, [sp, #96]	; 0x60
   129f8:	ldr	r5, [sp, #100]	; 0x64
   129fc:	ldr	r3, [sp, #60]	; 0x3c
   12a00:	cmp	r3, #1
   12a04:	bls	12588 <close_stdout@@Base+0xb60>
   12a08:	ldr	r0, [sp, #24]
   12a0c:	and	r2, r2, r0
   12a10:	b	12594 <close_stdout@@Base+0xb6c>
   12a14:	ldr	r2, [sp, #164]	; 0xa4
   12a18:	tst	r2, #1
   12a1c:	addne	fp, fp, #1
   12a20:	bne	11f50 <close_stdout@@Base+0x528>
   12a24:	b	12260 <close_stdout@@Base+0x838>
   12a28:	ldr	r0, [sp, #36]	; 0x24
   12a2c:	cmp	r0, #0
   12a30:	beq	12260 <close_stdout@@Base+0x838>
   12a34:	b	123a8 <close_stdout@@Base+0x980>
   12a38:	ldr	r2, [sp, #32]
   12a3c:	ldrb	r3, [r2, #1]
   12a40:	adds	r3, r3, #0
   12a44:	movne	r3, #1
   12a48:	b	1237c <close_stdout@@Base+0x954>
   12a4c:	bl	110ec <abort@plt>
   12a50:	ldr	r8, [sp, #60]	; 0x3c
   12a54:	b	123a8 <close_stdout@@Base+0x980>
   12a58:	ldr	r0, [sp, #32]
   12a5c:	bl	11014 <strlen@plt>
   12a60:	mov	r8, r0
   12a64:	b	12870 <close_stdout@@Base+0xe48>
   12a68:	ldr	r2, [pc, #288]	; 12b90 <close_stdout@@Base+0x1168>
   12a6c:	mov	r1, #1
   12a70:	mov	r9, r1
   12a74:	str	r1, [sp, #24]
   12a78:	add	r2, pc, r2
   12a7c:	str	r1, [sp, #28]
   12a80:	str	r2, [sp, #52]	; 0x34
   12a84:	b	11f2c <close_stdout@@Base+0x504>
   12a88:	ldr	r2, [pc, #260]	; 12b94 <close_stdout@@Base+0x116c>
   12a8c:	mov	r3, #1
   12a90:	mov	r9, r3
   12a94:	str	r3, [sp, #28]
   12a98:	add	r2, pc, r2
   12a9c:	str	sl, [sp, #24]
   12aa0:	str	r2, [sp, #52]	; 0x34
   12aa4:	b	11f2c <close_stdout@@Base+0x504>
   12aa8:	cmp	r8, r7
   12aac:	str	r9, [sp, #60]	; 0x3c
   12ab0:	mov	ip, r4
   12ab4:	ldr	r6, [sp, #96]	; 0x60
   12ab8:	ldr	r9, [sp, #88]	; 0x58
   12abc:	ldr	r4, [sp, #92]	; 0x5c
   12ac0:	ldr	r5, [sp, #100]	; 0x64
   12ac4:	bls	12afc <close_stdout@@Base+0x10d4>
   12ac8:	ldrb	r3, [ip]
   12acc:	cmp	r3, #0
   12ad0:	beq	12afc <close_stdout@@Base+0x10d4>
   12ad4:	ldr	r3, [sp, #60]	; 0x3c
   12ad8:	b	12ae8 <close_stdout@@Base+0x10c0>
   12adc:	ldrb	r2, [r5, r3]
   12ae0:	cmp	r2, #0
   12ae4:	beq	12af8 <close_stdout@@Base+0x10d0>
   12ae8:	add	r3, r3, #1
   12aec:	add	r2, fp, r3
   12af0:	cmp	r8, r2
   12af4:	bhi	12adc <close_stdout@@Base+0x10b4>
   12af8:	str	r3, [sp, #60]	; 0x3c
   12afc:	mov	r2, #1
   12b00:	b	129fc <close_stdout@@Base+0xfd4>
   12b04:	str	r9, [sp, #60]	; 0x3c
   12b08:	mov	r2, #1
   12b0c:	ldr	r4, [sp, #92]	; 0x5c
   12b10:	ldr	r6, [sp, #96]	; 0x60
   12b14:	ldr	r9, [sp, #88]	; 0x58
   12b18:	ldr	r5, [sp, #100]	; 0x64
   12b1c:	b	129fc <close_stdout@@Base+0xfd4>
   12b20:	ldr	r9, [sp, #36]	; 0x24
   12b24:	b	12748 <close_stdout@@Base+0xd20>
   12b28:	bl	10f24 <__stack_chk_fail@plt>
   12b2c:	ldr	r1, [pc, #100]	; 12b98 <close_stdout@@Base+0x1170>
   12b30:	mov	r3, #0
   12b34:	mov	r0, #1
   12b38:	str	r3, [sp, #24]
   12b3c:	add	r1, pc, r1
   12b40:	str	r0, [sp, #28]
   12b44:	mov	r9, r3
   12b48:	str	r1, [sp, #52]	; 0x34
   12b4c:	b	11f2c <close_stdout@@Base+0x504>
   12b50:	ldr	r0, [pc, #68]	; 12b9c <close_stdout@@Base+0x1174>
   12b54:	mov	r3, #1
   12b58:	mov	r9, #0
   12b5c:	str	r3, [sp, #24]
   12b60:	add	r0, pc, r0
   12b64:	str	r3, [sp, #28]
   12b68:	str	r0, [sp, #52]	; 0x34
   12b6c:	b	11f2c <close_stdout@@Base+0x504>
   12b70:	andeq	r4, r1, r4, ror #2
   12b74:	andeq	r0, r0, r4, ror #1
   12b78:	andeq	r2, r0, r4, asr #9
   12b7c:	andeq	r2, r0, r0, lsr #9
   12b80:	andeq	r2, r0, ip, asr r4
   12b84:	andeq	r2, r0, r8, lsr r4
   12b88:			; <UNDEFINED> instruction: 0x000023bc
   12b8c:	andeq	r2, r0, r4, ror #6
   12b90:	strheq	r2, [r0], -ip
   12b94:	muleq	r0, r8, r0
   12b98:	strdeq	r1, [r0], -r4
   12b9c:	ldrdeq	r1, [r0], -r4
   12ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ba4:	sub	sp, sp, #44	; 0x2c
   12ba8:	mov	r6, r0
   12bac:	mov	r9, r1
   12bb0:	mov	sl, r2
   12bb4:	mov	r4, r3
   12bb8:	bl	1102c <__errno_location@plt>
   12bbc:	ldr	fp, [pc, #412]	; 12d60 <close_stdout@@Base+0x1338>
   12bc0:	cmp	r6, #0
   12bc4:	add	fp, pc, fp
   12bc8:	ldr	r5, [fp]
   12bcc:	ldr	r1, [r0]
   12bd0:	mov	r8, r0
   12bd4:	str	r1, [sp, #36]	; 0x24
   12bd8:	blt	12d58 <close_stdout@@Base+0x1330>
   12bdc:	ldr	r3, [pc, #384]	; 12d64 <close_stdout@@Base+0x133c>
   12be0:	add	r3, pc, r3
   12be4:	ldr	r3, [r3]
   12be8:	cmp	r6, r3
   12bec:	bcc	12c40 <close_stdout@@Base+0x1218>
   12bf0:	add	r7, r6, #1
   12bf4:	cmn	r7, #-536870911	; 0xe0000001
   12bf8:	bhi	12d5c <close_stdout@@Base+0x1334>
   12bfc:	add	r3, fp, #4
   12c00:	cmp	r5, r3
   12c04:	beq	12d30 <close_stdout@@Base+0x1308>
   12c08:	mov	r0, r5
   12c0c:	lsl	r1, r7, #3
   12c10:	bl	13a38 <close_stdout@@Base+0x2010>
   12c14:	mov	r5, r0
   12c18:	str	r0, [fp]
   12c1c:	ldr	fp, [pc, #324]	; 12d68 <close_stdout@@Base+0x1340>
   12c20:	mov	r1, #0
   12c24:	add	fp, pc, fp
   12c28:	ldr	r0, [fp]
   12c2c:	rsb	r2, r0, r7
   12c30:	add	r0, r5, r0, lsl #3
   12c34:	lsl	r2, r2, #3
   12c38:	bl	11044 <memset@plt>
   12c3c:	str	r7, [fp]
   12c40:	add	r2, r4, #8
   12c44:	str	r2, [sp, #32]
   12c48:	ldr	r1, [r4]
   12c4c:	add	fp, r5, r6, lsl #3
   12c50:	ldr	lr, [sp, #32]
   12c54:	mov	r2, r9
   12c58:	ldr	r3, [r4, #4]
   12c5c:	ldr	ip, [r5, r6, lsl #3]
   12c60:	ldr	r7, [fp, #4]
   12c64:	orr	r3, r3, #1
   12c68:	str	r1, [sp]
   12c6c:	str	r3, [sp, #4]
   12c70:	mov	r1, ip
   12c74:	str	lr, [sp, #8]
   12c78:	mov	r0, r7
   12c7c:	ldr	lr, [r4, #40]	; 0x28
   12c80:	str	r3, [sp, #28]
   12c84:	mov	r3, sl
   12c88:	str	lr, [sp, #12]
   12c8c:	ldr	lr, [r4, #44]	; 0x2c
   12c90:	str	ip, [sp, #24]
   12c94:	str	lr, [sp, #16]
   12c98:	bl	11e78 <close_stdout@@Base+0x450>
   12c9c:	ldr	ip, [sp, #24]
   12ca0:	cmp	ip, r0
   12ca4:	bhi	12d1c <close_stdout@@Base+0x12f4>
   12ca8:	ldr	r3, [pc, #188]	; 12d6c <close_stdout@@Base+0x1344>
   12cac:	add	r1, r0, #1
   12cb0:	str	r1, [r5, r6, lsl #3]
   12cb4:	add	r3, pc, r3
   12cb8:	cmp	r7, r3
   12cbc:	beq	12cd0 <close_stdout@@Base+0x12a8>
   12cc0:	mov	r0, r7
   12cc4:	str	r1, [sp, #24]
   12cc8:	bl	10ed0 <free@plt>
   12ccc:	ldr	r1, [sp, #24]
   12cd0:	mov	r0, r1
   12cd4:	str	r1, [sp, #24]
   12cd8:	bl	139e0 <close_stdout@@Base+0x1fb8>
   12cdc:	ldr	r3, [sp, #28]
   12ce0:	ldr	lr, [sp, #32]
   12ce4:	mov	r2, r9
   12ce8:	str	r0, [fp, #4]
   12cec:	mov	r7, r0
   12cf0:	ldr	ip, [r4]
   12cf4:	str	r3, [sp, #4]
   12cf8:	mov	r3, sl
   12cfc:	str	lr, [sp, #8]
   12d00:	str	ip, [sp]
   12d04:	ldr	ip, [r4, #40]	; 0x28
   12d08:	ldr	r1, [sp, #24]
   12d0c:	str	ip, [sp, #12]
   12d10:	ldr	ip, [r4, #44]	; 0x2c
   12d14:	str	ip, [sp, #16]
   12d18:	bl	11e78 <close_stdout@@Base+0x450>
   12d1c:	ldr	r1, [sp, #36]	; 0x24
   12d20:	mov	r0, r7
   12d24:	str	r1, [r8]
   12d28:	add	sp, sp, #44	; 0x2c
   12d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d30:	lsl	r1, r7, #3
   12d34:	mov	r0, #0
   12d38:	str	r3, [sp, #24]
   12d3c:	bl	13a38 <close_stdout@@Base+0x2010>
   12d40:	ldr	r3, [sp, #24]
   12d44:	mov	r5, r0
   12d48:	ldm	r3, {r0, r1}
   12d4c:	str	r5, [fp]
   12d50:	stm	r5, {r0, r1}
   12d54:	b	12c1c <close_stdout@@Base+0x11f4>
   12d58:	bl	110ec <abort@plt>
   12d5c:	bl	13bf4 <close_stdout@@Base+0x21cc>
   12d60:	muleq	r1, r4, r5
   12d64:	andeq	r3, r1, r4, asr #10
   12d68:	andeq	r3, r1, r0, lsl #10
   12d6c:	ldrdeq	r3, [r1], -r4
   12d70:	push	{r4, r5, r6, lr}
   12d74:	mov	r5, r0
   12d78:	bl	1102c <__errno_location@plt>
   12d7c:	cmp	r5, #0
   12d80:	mov	r1, #48	; 0x30
   12d84:	mov	r4, r0
   12d88:	ldr	r0, [pc, #24]	; 12da8 <close_stdout@@Base+0x1380>
   12d8c:	ldr	r6, [r4]
   12d90:	add	r0, pc, r0
   12d94:	add	r0, r0, #256	; 0x100
   12d98:	movne	r0, r5
   12d9c:	bl	13bb4 <close_stdout@@Base+0x218c>
   12da0:	str	r6, [r4]
   12da4:	pop	{r4, r5, r6, pc}
   12da8:	strdeq	r3, [r1], -r8
   12dac:	cmp	r0, #0
   12db0:	beq	12dbc <close_stdout@@Base+0x1394>
   12db4:	ldr	r0, [r0]
   12db8:	bx	lr
   12dbc:	ldr	r0, [pc, #12]	; 12dd0 <close_stdout@@Base+0x13a8>
   12dc0:	add	r0, pc, r0
   12dc4:	add	r0, r0, #256	; 0x100
   12dc8:	ldr	r0, [r0]
   12dcc:	bx	lr
   12dd0:	andeq	r3, r1, r8, asr #13
   12dd4:	cmp	r0, #0
   12dd8:	beq	12de4 <close_stdout@@Base+0x13bc>
   12ddc:	str	r1, [r0]
   12de0:	bx	lr
   12de4:	ldr	r0, [pc, #12]	; 12df8 <close_stdout@@Base+0x13d0>
   12de8:	add	r0, pc, r0
   12dec:	add	r0, r0, #256	; 0x100
   12df0:	str	r1, [r0]
   12df4:	bx	lr
   12df8:	andeq	r3, r1, r0, lsr #13
   12dfc:	cmp	r0, #0
   12e00:	movne	r3, r0
   12e04:	beq	12e34 <close_stdout@@Base+0x140c>
   12e08:	lsr	ip, r1, #5
   12e0c:	and	r1, r1, #31
   12e10:	add	r3, r3, ip, lsl #2
   12e14:	ldr	ip, [r3, #8]
   12e18:	lsr	r0, ip, r1
   12e1c:	eor	r2, r0, r2
   12e20:	and	r0, r0, #1
   12e24:	and	r2, r2, #1
   12e28:	eor	ip, ip, r2, lsl r1
   12e2c:	str	ip, [r3, #8]
   12e30:	bx	lr
   12e34:	ldr	r3, [pc, #8]	; 12e44 <close_stdout@@Base+0x141c>
   12e38:	add	r3, pc, r3
   12e3c:	add	r3, r3, #256	; 0x100
   12e40:	b	12e08 <close_stdout@@Base+0x13e0>
   12e44:	andeq	r3, r1, r0, asr r6
   12e48:	subs	r3, r0, #0
   12e4c:	beq	12e5c <close_stdout@@Base+0x1434>
   12e50:	ldr	r0, [r3, #4]
   12e54:	str	r1, [r3, #4]
   12e58:	bx	lr
   12e5c:	ldr	r3, [pc, #8]	; 12e6c <close_stdout@@Base+0x1444>
   12e60:	add	r3, pc, r3
   12e64:	add	r3, r3, #256	; 0x100
   12e68:	b	12e50 <close_stdout@@Base+0x1428>
   12e6c:	andeq	r3, r1, r8, lsr #12
   12e70:	cmp	r0, #0
   12e74:	push	{r3, lr}
   12e78:	beq	12e9c <close_stdout@@Base+0x1474>
   12e7c:	cmp	r2, #0
   12e80:	cmpne	r1, #0
   12e84:	mov	r3, #8
   12e88:	strne	r1, [r0, #40]	; 0x28
   12e8c:	str	r3, [r0]
   12e90:	strne	r2, [r0, #44]	; 0x2c
   12e94:	popne	{r3, pc}
   12e98:	bl	110ec <abort@plt>
   12e9c:	ldr	r0, [pc, #8]	; 12eac <close_stdout@@Base+0x1484>
   12ea0:	add	r0, pc, r0
   12ea4:	add	r0, r0, #256	; 0x100
   12ea8:	b	12e7c <close_stdout@@Base+0x1454>
   12eac:	andeq	r3, r1, r8, ror #11
   12eb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12eb4:	sub	sp, sp, #24
   12eb8:	mov	r7, r0
   12ebc:	mov	sl, r1
   12ec0:	ldr	r4, [sp, #56]	; 0x38
   12ec4:	mov	r9, r2
   12ec8:	mov	r8, r3
   12ecc:	cmp	r4, #0
   12ed0:	beq	12f24 <close_stdout@@Base+0x14fc>
   12ed4:	bl	1102c <__errno_location@plt>
   12ed8:	ldr	r3, [r4]
   12edc:	add	lr, r4, #8
   12ee0:	mov	r1, sl
   12ee4:	mov	r2, r9
   12ee8:	ldr	r6, [r0]
   12eec:	mov	r5, r0
   12ef0:	str	r3, [sp]
   12ef4:	mov	r0, r7
   12ef8:	ldr	ip, [r4, #4]
   12efc:	mov	r3, r8
   12f00:	stmib	sp, {ip, lr}
   12f04:	ldr	ip, [r4, #40]	; 0x28
   12f08:	str	ip, [sp, #12]
   12f0c:	ldr	ip, [r4, #44]	; 0x2c
   12f10:	str	ip, [sp, #16]
   12f14:	bl	11e78 <close_stdout@@Base+0x450>
   12f18:	str	r6, [r5]
   12f1c:	add	sp, sp, #24
   12f20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f24:	ldr	r4, [pc, #8]	; 12f34 <close_stdout@@Base+0x150c>
   12f28:	add	r4, pc, r4
   12f2c:	add	r4, r4, #256	; 0x100
   12f30:	b	12ed4 <close_stdout@@Base+0x14ac>
   12f34:	andeq	r3, r1, r0, ror #10
   12f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f3c:	subs	r4, r3, #0
   12f40:	sub	sp, sp, #36	; 0x24
   12f44:	mov	r7, r0
   12f48:	mov	r6, r1
   12f4c:	mov	r5, r2
   12f50:	beq	1300c <close_stdout@@Base+0x15e4>
   12f54:	bl	1102c <__errno_location@plt>
   12f58:	ldr	r3, [r4]
   12f5c:	ldr	sl, [r4, #4]
   12f60:	add	r9, r4, #8
   12f64:	mov	r8, r0
   12f68:	mov	r0, #0
   12f6c:	ldr	r2, [r8]
   12f70:	cmp	r5, r0
   12f74:	orreq	sl, sl, #1
   12f78:	str	r9, [sp, #8]
   12f7c:	mov	r1, r0
   12f80:	stm	sp, {r3, sl}
   12f84:	mov	r3, r6
   12f88:	ldr	ip, [r4, #40]	; 0x28
   12f8c:	str	r2, [sp, #28]
   12f90:	mov	r2, r7
   12f94:	str	ip, [sp, #12]
   12f98:	ldr	ip, [r4, #44]	; 0x2c
   12f9c:	str	ip, [sp, #16]
   12fa0:	bl	11e78 <close_stdout@@Base+0x450>
   12fa4:	add	r1, r0, #1
   12fa8:	mov	fp, r0
   12fac:	str	r1, [sp, #24]
   12fb0:	mov	r0, r1
   12fb4:	bl	139e0 <close_stdout@@Base+0x1fb8>
   12fb8:	ldr	lr, [r4]
   12fbc:	str	sl, [sp, #4]
   12fc0:	mov	r3, r6
   12fc4:	str	r9, [sp, #8]
   12fc8:	mov	r2, r7
   12fcc:	str	lr, [sp]
   12fd0:	ldr	lr, [r4, #40]	; 0x28
   12fd4:	ldr	r1, [sp, #24]
   12fd8:	str	lr, [sp, #12]
   12fdc:	ldr	lr, [r4, #44]	; 0x2c
   12fe0:	str	lr, [sp, #16]
   12fe4:	str	r0, [sp, #24]
   12fe8:	bl	11e78 <close_stdout@@Base+0x450>
   12fec:	ldr	r3, [sp, #28]
   12ff0:	cmp	r5, #0
   12ff4:	str	r3, [r8]
   12ff8:	ldr	ip, [sp, #24]
   12ffc:	strne	fp, [r5]
   13000:	mov	r0, ip
   13004:	add	sp, sp, #36	; 0x24
   13008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1300c:	ldr	r4, [pc, #8]	; 1301c <close_stdout@@Base+0x15f4>
   13010:	add	r4, pc, r4
   13014:	add	r4, r4, #256	; 0x100
   13018:	b	12f54 <close_stdout@@Base+0x152c>
   1301c:	andeq	r3, r1, r8, ror r4
   13020:	mov	r3, r2
   13024:	mov	r2, #0
   13028:	b	12f38 <close_stdout@@Base+0x1510>
   1302c:	ldr	r2, [pc, #152]	; 130cc <close_stdout@@Base+0x16a4>
   13030:	push	{r3, r4, r5, r6, r7, lr}
   13034:	add	r2, pc, r2
   13038:	ldr	r3, [pc, #144]	; 130d0 <close_stdout@@Base+0x16a8>
   1303c:	ldr	r6, [r2]
   13040:	add	r3, pc, r3
   13044:	cmp	r6, #1
   13048:	ldr	r7, [r3]
   1304c:	movhi	r4, #1
   13050:	movhi	r5, r7
   13054:	bls	13070 <close_stdout@@Base+0x1648>
   13058:	ldr	r0, [r5, #12]
   1305c:	add	r4, r4, #1
   13060:	bl	10ed0 <free@plt>
   13064:	cmp	r4, r6
   13068:	add	r5, r5, #8
   1306c:	bne	13058 <close_stdout@@Base+0x1630>
   13070:	ldr	r4, [pc, #92]	; 130d4 <close_stdout@@Base+0x16ac>
   13074:	ldr	r0, [r7, #4]
   13078:	add	r4, pc, r4
   1307c:	cmp	r0, r4
   13080:	beq	13098 <close_stdout@@Base+0x1670>
   13084:	bl	10ed0 <free@plt>
   13088:	ldr	r3, [pc, #72]	; 130d8 <close_stdout@@Base+0x16b0>
   1308c:	mov	r2, #256	; 0x100
   13090:	add	r3, pc, r3
   13094:	stmib	r3, {r2, r4}
   13098:	ldr	r4, [pc, #60]	; 130dc <close_stdout@@Base+0x16b4>
   1309c:	add	r4, pc, r4
   130a0:	add	r5, r4, #4
   130a4:	cmp	r7, r5
   130a8:	beq	130b8 <close_stdout@@Base+0x1690>
   130ac:	mov	r0, r7
   130b0:	bl	10ed0 <free@plt>
   130b4:	str	r5, [r4]
   130b8:	ldr	r3, [pc, #32]	; 130e0 <close_stdout@@Base+0x16b8>
   130bc:	mov	r2, #1
   130c0:	add	r3, pc, r3
   130c4:	str	r2, [r3]
   130c8:	pop	{r3, r4, r5, r6, r7, pc}
   130cc:	strdeq	r3, [r1], -r0
   130d0:	andeq	r3, r1, r8, lsl r1
   130d4:	andeq	r3, r1, r0, lsl r4
   130d8:	andeq	r3, r1, r8, asr #1
   130dc:	strheq	r3, [r1], -ip
   130e0:	andeq	r3, r1, r4, rrx
   130e4:	ldr	r3, [pc, #12]	; 130f8 <close_stdout@@Base+0x16d0>
   130e8:	mvn	r2, #0
   130ec:	add	r3, pc, r3
   130f0:	add	r3, r3, #256	; 0x100
   130f4:	b	12ba0 <close_stdout@@Base+0x1178>
   130f8:	muleq	r1, ip, r3
   130fc:	ldr	r3, [pc, #8]	; 1310c <close_stdout@@Base+0x16e4>
   13100:	add	r3, pc, r3
   13104:	add	r3, r3, #256	; 0x100
   13108:	b	12ba0 <close_stdout@@Base+0x1178>
   1310c:	andeq	r3, r1, r8, lsl #7
   13110:	mov	r1, r0
   13114:	mov	r0, #0
   13118:	b	130e4 <close_stdout@@Base+0x16bc>
   1311c:	mov	r2, r1
   13120:	mov	r1, r0
   13124:	mov	r0, #0
   13128:	b	130fc <close_stdout@@Base+0x16d4>
   1312c:	ldr	r3, [pc, #92]	; 13190 <close_stdout@@Base+0x1768>
   13130:	ldr	ip, [pc, #92]	; 13194 <close_stdout@@Base+0x176c>
   13134:	add	r3, pc, r3
   13138:	push	{r4, r5, r6, r7, lr}
   1313c:	sub	sp, sp, #60	; 0x3c
   13140:	ldr	r4, [r3, ip]
   13144:	add	r5, sp, #4
   13148:	mov	r7, r2
   1314c:	mov	r6, r0
   13150:	mov	r0, r5
   13154:	ldr	r3, [r4]
   13158:	str	r3, [sp, #52]	; 0x34
   1315c:	bl	11cc0 <close_stdout@@Base+0x298>
   13160:	mov	r3, r5
   13164:	mvn	r2, #0
   13168:	mov	r0, r6
   1316c:	mov	r1, r7
   13170:	bl	12ba0 <close_stdout@@Base+0x1178>
   13174:	ldr	r2, [sp, #52]	; 0x34
   13178:	ldr	r3, [r4]
   1317c:	cmp	r2, r3
   13180:	bne	1318c <close_stdout@@Base+0x1764>
   13184:	add	sp, sp, #60	; 0x3c
   13188:	pop	{r4, r5, r6, r7, pc}
   1318c:	bl	10f24 <__stack_chk_fail@plt>
   13190:	andeq	r2, r1, r4, asr #29
   13194:	andeq	r0, r0, r4, ror #1
   13198:	ldr	ip, [pc, #96]	; 13200 <close_stdout@@Base+0x17d8>
   1319c:	push	{r4, r5, r6, r7, r8, lr}
   131a0:	add	ip, pc, ip
   131a4:	ldr	lr, [pc, #88]	; 13204 <close_stdout@@Base+0x17dc>
   131a8:	sub	sp, sp, #56	; 0x38
   131ac:	mov	r8, r3
   131b0:	add	r5, sp, #4
   131b4:	mov	r7, r2
   131b8:	mov	r6, r0
   131bc:	ldr	r4, [ip, lr]
   131c0:	mov	r0, r5
   131c4:	ldr	r3, [r4]
   131c8:	str	r3, [sp, #52]	; 0x34
   131cc:	bl	11cc0 <close_stdout@@Base+0x298>
   131d0:	mov	r2, r8
   131d4:	mov	r3, r5
   131d8:	mov	r0, r6
   131dc:	mov	r1, r7
   131e0:	bl	12ba0 <close_stdout@@Base+0x1178>
   131e4:	ldr	r2, [sp, #52]	; 0x34
   131e8:	ldr	r3, [r4]
   131ec:	cmp	r2, r3
   131f0:	bne	131fc <close_stdout@@Base+0x17d4>
   131f4:	add	sp, sp, #56	; 0x38
   131f8:	pop	{r4, r5, r6, r7, r8, pc}
   131fc:	bl	10f24 <__stack_chk_fail@plt>
   13200:	andeq	r2, r1, r8, asr lr
   13204:	andeq	r0, r0, r4, ror #1
   13208:	mov	r2, r1
   1320c:	mov	r1, r0
   13210:	mov	r0, #0
   13214:	b	1312c <close_stdout@@Base+0x1704>
   13218:	mov	ip, r1
   1321c:	mov	r3, r2
   13220:	mov	r1, r0
   13224:	mov	r2, ip
   13228:	mov	r0, #0
   1322c:	b	13198 <close_stdout@@Base+0x1770>
   13230:	push	{r4, r5, r6, r7, r8, lr}
   13234:	mov	r5, r2
   13238:	ldr	lr, [pc, #136]	; 132c8 <close_stdout@@Base+0x18a0>
   1323c:	mov	r7, r0
   13240:	mov	r6, r1
   13244:	ldr	r4, [pc, #128]	; 132cc <close_stdout@@Base+0x18a4>
   13248:	add	lr, pc, lr
   1324c:	sub	sp, sp, #56	; 0x38
   13250:	add	lr, lr, #256	; 0x100
   13254:	ldr	r8, [pc, #116]	; 132d0 <close_stdout@@Base+0x18a8>
   13258:	add	r4, pc, r4
   1325c:	add	ip, sp, #4
   13260:	ldm	lr!, {r0, r1, r2, r3}
   13264:	ldr	r4, [r4, r8]
   13268:	stmia	ip!, {r0, r1, r2, r3}
   1326c:	ldm	lr!, {r0, r1, r2, r3}
   13270:	ldr	r8, [r4]
   13274:	stmia	ip!, {r0, r1, r2, r3}
   13278:	ldm	lr, {r0, r1, r2, r3}
   1327c:	str	r8, [sp, #52]	; 0x34
   13280:	stm	ip, {r0, r1, r2, r3}
   13284:	mov	r1, r5
   13288:	add	r5, sp, #4
   1328c:	mov	r2, #1
   13290:	mov	r0, r5
   13294:	bl	12dfc <close_stdout@@Base+0x13d4>
   13298:	mov	r2, r6
   1329c:	mov	r3, r5
   132a0:	mov	r1, r7
   132a4:	mov	r0, #0
   132a8:	bl	12ba0 <close_stdout@@Base+0x1178>
   132ac:	ldr	r2, [sp, #52]	; 0x34
   132b0:	ldr	r3, [r4]
   132b4:	cmp	r2, r3
   132b8:	bne	132c4 <close_stdout@@Base+0x189c>
   132bc:	add	sp, sp, #56	; 0x38
   132c0:	pop	{r4, r5, r6, r7, r8, pc}
   132c4:	bl	10f24 <__stack_chk_fail@plt>
   132c8:	andeq	r3, r1, r0, asr #4
   132cc:	andeq	r2, r1, r0, lsr #27
   132d0:	andeq	r0, r0, r4, ror #1
   132d4:	mov	r2, r1
   132d8:	mvn	r1, #0
   132dc:	b	13230 <close_stdout@@Base+0x1808>
   132e0:	mov	r1, #58	; 0x3a
   132e4:	b	132d4 <close_stdout@@Base+0x18ac>
   132e8:	mov	r2, #58	; 0x3a
   132ec:	b	13230 <close_stdout@@Base+0x1808>
   132f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132f4:	mov	r5, r2
   132f8:	ldr	lr, [pc, #144]	; 13390 <close_stdout@@Base+0x1968>
   132fc:	mov	r8, r0
   13300:	mov	r9, r1
   13304:	mov	r7, r3
   13308:	add	lr, pc, lr
   1330c:	ldr	r4, [pc, #128]	; 13394 <close_stdout@@Base+0x196c>
   13310:	add	lr, lr, #256	; 0x100
   13314:	sub	sp, sp, #56	; 0x38
   13318:	ldr	sl, [pc, #120]	; 13398 <close_stdout@@Base+0x1970>
   1331c:	add	r4, pc, r4
   13320:	ldm	lr!, {r0, r1, r2, r3}
   13324:	add	ip, sp, #4
   13328:	ldr	r4, [r4, sl]
   1332c:	ldr	r6, [sp, #88]	; 0x58
   13330:	stmia	ip!, {r0, r1, r2, r3}
   13334:	ldm	lr!, {r0, r1, r2, r3}
   13338:	ldr	sl, [r4]
   1333c:	stmia	ip!, {r0, r1, r2, r3}
   13340:	ldm	lr, {r0, r1, r2, r3}
   13344:	str	sl, [sp, #52]	; 0x34
   13348:	stm	ip, {r0, r1, r2, r3}
   1334c:	mov	r2, r5
   13350:	add	r5, sp, #4
   13354:	mov	r1, r9
   13358:	mov	r0, r5
   1335c:	bl	12e70 <close_stdout@@Base+0x1448>
   13360:	mov	r2, r6
   13364:	mov	r3, r5
   13368:	mov	r0, r8
   1336c:	mov	r1, r7
   13370:	bl	12ba0 <close_stdout@@Base+0x1178>
   13374:	ldr	r2, [sp, #52]	; 0x34
   13378:	ldr	r3, [r4]
   1337c:	cmp	r2, r3
   13380:	bne	1338c <close_stdout@@Base+0x1964>
   13384:	add	sp, sp, #56	; 0x38
   13388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1338c:	bl	10f24 <__stack_chk_fail@plt>
   13390:	andeq	r3, r1, r0, lsl #3
   13394:	ldrdeq	r2, [r1], -ip
   13398:	andeq	r0, r0, r4, ror #1
   1339c:	push	{lr}		; (str lr, [sp, #-4]!)
   133a0:	sub	sp, sp, #12
   133a4:	mvn	ip, #0
   133a8:	str	ip, [sp]
   133ac:	bl	132f0 <close_stdout@@Base+0x18c8>
   133b0:	add	sp, sp, #12
   133b4:	pop	{pc}		; (ldr pc, [sp], #4)
   133b8:	mov	ip, r1
   133bc:	mov	r3, r2
   133c0:	mov	r1, r0
   133c4:	mov	r2, ip
   133c8:	mov	r0, #0
   133cc:	b	1339c <close_stdout@@Base+0x1974>
   133d0:	push	{lr}		; (str lr, [sp, #-4]!)
   133d4:	sub	sp, sp, #12
   133d8:	mov	lr, r1
   133dc:	mov	ip, r2
   133e0:	mov	r1, r0
   133e4:	str	r3, [sp]
   133e8:	mov	r2, lr
   133ec:	mov	r3, ip
   133f0:	mov	r0, #0
   133f4:	bl	132f0 <close_stdout@@Base+0x18c8>
   133f8:	add	sp, sp, #12
   133fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13400:	ldr	r3, [pc, #12]	; 13414 <close_stdout@@Base+0x19ec>
   13404:	ldr	ip, [pc, #12]	; 13418 <close_stdout@@Base+0x19f0>
   13408:	add	r3, pc, r3
   1340c:	ldr	r3, [r3, ip]
   13410:	b	12ba0 <close_stdout@@Base+0x1178>
   13414:	strdeq	r2, [r1], -r0
   13418:	andeq	r0, r0, r0, ror #1
   1341c:	mov	r2, r1
   13420:	mov	r1, r0
   13424:	mov	r0, #0
   13428:	b	13400 <close_stdout@@Base+0x19d8>
   1342c:	mvn	r2, #0
   13430:	b	13400 <close_stdout@@Base+0x19d8>
   13434:	mov	r1, r0
   13438:	mov	r0, #0
   1343c:	b	1342c <close_stdout@@Base+0x1a04>
   13440:	push	{r4, r5, r6, r7, lr}
   13444:	cmp	r1, #0
   13448:	sub	sp, sp, #36	; 0x24
   1344c:	ldr	r7, [pc, #896]	; 137d4 <close_stdout@@Base+0x1dac>
   13450:	mov	ip, r3
   13454:	mov	r5, r0
   13458:	add	r7, pc, r7
   1345c:	ldr	r4, [sp, #56]	; 0x38
   13460:	ldr	r6, [sp, #60]	; 0x3c
   13464:	beq	137a8 <close_stdout@@Base+0x1d80>
   13468:	str	r2, [sp]
   1346c:	mov	r3, r1
   13470:	ldr	r2, [pc, #864]	; 137d8 <close_stdout@@Base+0x1db0>
   13474:	mov	r1, #1
   13478:	str	ip, [sp, #4]
   1347c:	add	r2, pc, r2
   13480:	bl	11074 <__fprintf_chk@plt>
   13484:	ldr	r1, [pc, #848]	; 137dc <close_stdout@@Base+0x1db4>
   13488:	mov	r2, #5
   1348c:	mov	r0, #0
   13490:	add	r1, pc, r1
   13494:	bl	10f18 <dcgettext@plt>
   13498:	ldr	r2, [pc, #832]	; 137e0 <close_stdout@@Base+0x1db8>
   1349c:	movw	ip, #2013	; 0x7dd
   134a0:	mov	r1, #1
   134a4:	ldr	r2, [r7, r2]
   134a8:	str	ip, [sp]
   134ac:	mov	r3, r0
   134b0:	mov	r0, r5
   134b4:	bl	11074 <__fprintf_chk@plt>
   134b8:	ldr	r1, [pc, #804]	; 137e4 <close_stdout@@Base+0x1dbc>
   134bc:	mov	r0, #0
   134c0:	mov	r2, #5
   134c4:	add	r1, pc, r1
   134c8:	bl	10f18 <dcgettext@plt>
   134cc:	mov	r1, r5
   134d0:	bl	10ea0 <fputs_unlocked@plt>
   134d4:	cmp	r6, #9
   134d8:	addls	pc, pc, r6, lsl #2
   134dc:	b	137c4 <close_stdout@@Base+0x1d9c>
   134e0:	b	13574 <close_stdout@@Base+0x1b4c>
   134e4:	b	13578 <close_stdout@@Base+0x1b50>
   134e8:	b	135a8 <close_stdout@@Base+0x1b80>
   134ec:	b	135dc <close_stdout@@Base+0x1bb4>
   134f0:	b	13618 <close_stdout@@Base+0x1bf0>
   134f4:	b	13658 <close_stdout@@Base+0x1c30>
   134f8:	b	136a0 <close_stdout@@Base+0x1c78>
   134fc:	b	136f0 <close_stdout@@Base+0x1cc8>
   13500:	b	13748 <close_stdout@@Base+0x1d20>
   13504:	b	13508 <close_stdout@@Base+0x1ae0>
   13508:	ldr	r1, [pc, #728]	; 137e8 <close_stdout@@Base+0x1dc0>
   1350c:	mov	r0, #0
   13510:	add	r1, pc, r1
   13514:	mov	r2, #5
   13518:	bl	10f18 <dcgettext@plt>
   1351c:	ldm	r4, {r3, ip}
   13520:	mov	r1, #1
   13524:	str	ip, [sp]
   13528:	ldr	ip, [r4, #8]
   1352c:	str	ip, [sp, #4]
   13530:	ldr	ip, [r4, #12]
   13534:	str	ip, [sp, #8]
   13538:	ldr	ip, [r4, #16]
   1353c:	str	ip, [sp, #12]
   13540:	ldr	ip, [r4, #20]
   13544:	str	ip, [sp, #16]
   13548:	ldr	ip, [r4, #24]
   1354c:	str	ip, [sp, #20]
   13550:	ldr	ip, [r4, #28]
   13554:	str	ip, [sp, #24]
   13558:	ldr	ip, [r4, #32]
   1355c:	str	ip, [sp, #28]
   13560:	mov	r2, r0
   13564:	mov	r0, r5
   13568:	bl	11074 <__fprintf_chk@plt>
   1356c:	add	sp, sp, #36	; 0x24
   13570:	pop	{r4, r5, r6, r7, pc}
   13574:	bl	110ec <abort@plt>
   13578:	ldr	r1, [pc, #620]	; 137ec <close_stdout@@Base+0x1dc4>
   1357c:	mov	r2, #5
   13580:	mov	r0, #0
   13584:	add	r1, pc, r1
   13588:	bl	10f18 <dcgettext@plt>
   1358c:	ldr	r3, [r4]
   13590:	mov	r1, #1
   13594:	mov	r2, r0
   13598:	mov	r0, r5
   1359c:	add	sp, sp, #36	; 0x24
   135a0:	pop	{r4, r5, r6, r7, lr}
   135a4:	b	11074 <__fprintf_chk@plt>
   135a8:	ldr	r1, [pc, #576]	; 137f0 <close_stdout@@Base+0x1dc8>
   135ac:	mov	r2, #5
   135b0:	mov	r0, #0
   135b4:	add	r1, pc, r1
   135b8:	bl	10f18 <dcgettext@plt>
   135bc:	ldm	r4, {r3, ip}
   135c0:	mov	r1, #1
   135c4:	str	ip, [sp, #56]	; 0x38
   135c8:	mov	r2, r0
   135cc:	mov	r0, r5
   135d0:	add	sp, sp, #36	; 0x24
   135d4:	pop	{r4, r5, r6, r7, lr}
   135d8:	b	11074 <__fprintf_chk@plt>
   135dc:	ldr	r1, [pc, #528]	; 137f4 <close_stdout@@Base+0x1dcc>
   135e0:	mov	r2, #5
   135e4:	mov	r0, #0
   135e8:	add	r1, pc, r1
   135ec:	bl	10f18 <dcgettext@plt>
   135f0:	ldm	r4, {r3, ip}
   135f4:	mov	r1, #1
   135f8:	str	ip, [sp, #56]	; 0x38
   135fc:	ldr	ip, [r4, #8]
   13600:	str	ip, [sp, #60]	; 0x3c
   13604:	mov	r2, r0
   13608:	mov	r0, r5
   1360c:	add	sp, sp, #36	; 0x24
   13610:	pop	{r4, r5, r6, r7, lr}
   13614:	b	11074 <__fprintf_chk@plt>
   13618:	ldr	r1, [pc, #472]	; 137f8 <close_stdout@@Base+0x1dd0>
   1361c:	mov	r2, #5
   13620:	mov	r0, #0
   13624:	add	r1, pc, r1
   13628:	bl	10f18 <dcgettext@plt>
   1362c:	ldm	r4, {r3, ip}
   13630:	mov	r1, #1
   13634:	str	ip, [sp]
   13638:	ldr	ip, [r4, #8]
   1363c:	str	ip, [sp, #4]
   13640:	ldr	ip, [r4, #12]
   13644:	str	ip, [sp, #8]
   13648:	mov	r2, r0
   1364c:	mov	r0, r5
   13650:	bl	11074 <__fprintf_chk@plt>
   13654:	b	1356c <close_stdout@@Base+0x1b44>
   13658:	ldr	r1, [pc, #412]	; 137fc <close_stdout@@Base+0x1dd4>
   1365c:	mov	r2, #5
   13660:	mov	r0, #0
   13664:	add	r1, pc, r1
   13668:	bl	10f18 <dcgettext@plt>
   1366c:	ldm	r4, {r3, ip}
   13670:	mov	r1, #1
   13674:	str	ip, [sp]
   13678:	ldr	ip, [r4, #8]
   1367c:	str	ip, [sp, #4]
   13680:	ldr	ip, [r4, #12]
   13684:	str	ip, [sp, #8]
   13688:	ldr	ip, [r4, #16]
   1368c:	str	ip, [sp, #12]
   13690:	mov	r2, r0
   13694:	mov	r0, r5
   13698:	bl	11074 <__fprintf_chk@plt>
   1369c:	b	1356c <close_stdout@@Base+0x1b44>
   136a0:	ldr	r1, [pc, #344]	; 13800 <close_stdout@@Base+0x1dd8>
   136a4:	mov	r2, #5
   136a8:	mov	r0, #0
   136ac:	add	r1, pc, r1
   136b0:	bl	10f18 <dcgettext@plt>
   136b4:	ldm	r4, {r3, ip}
   136b8:	mov	r1, #1
   136bc:	str	ip, [sp]
   136c0:	ldr	ip, [r4, #8]
   136c4:	str	ip, [sp, #4]
   136c8:	ldr	ip, [r4, #12]
   136cc:	str	ip, [sp, #8]
   136d0:	ldr	ip, [r4, #16]
   136d4:	str	ip, [sp, #12]
   136d8:	ldr	ip, [r4, #20]
   136dc:	str	ip, [sp, #16]
   136e0:	mov	r2, r0
   136e4:	mov	r0, r5
   136e8:	bl	11074 <__fprintf_chk@plt>
   136ec:	b	1356c <close_stdout@@Base+0x1b44>
   136f0:	ldr	r1, [pc, #268]	; 13804 <close_stdout@@Base+0x1ddc>
   136f4:	mov	r2, #5
   136f8:	mov	r0, #0
   136fc:	add	r1, pc, r1
   13700:	bl	10f18 <dcgettext@plt>
   13704:	ldm	r4, {r3, ip}
   13708:	mov	r1, #1
   1370c:	str	ip, [sp]
   13710:	ldr	ip, [r4, #8]
   13714:	str	ip, [sp, #4]
   13718:	ldr	ip, [r4, #12]
   1371c:	str	ip, [sp, #8]
   13720:	ldr	ip, [r4, #16]
   13724:	str	ip, [sp, #12]
   13728:	ldr	ip, [r4, #20]
   1372c:	str	ip, [sp, #16]
   13730:	ldr	ip, [r4, #24]
   13734:	str	ip, [sp, #20]
   13738:	mov	r2, r0
   1373c:	mov	r0, r5
   13740:	bl	11074 <__fprintf_chk@plt>
   13744:	b	1356c <close_stdout@@Base+0x1b44>
   13748:	ldr	r1, [pc, #184]	; 13808 <close_stdout@@Base+0x1de0>
   1374c:	mov	r2, #5
   13750:	mov	r0, #0
   13754:	add	r1, pc, r1
   13758:	bl	10f18 <dcgettext@plt>
   1375c:	ldm	r4, {r3, ip}
   13760:	mov	r1, #1
   13764:	str	ip, [sp]
   13768:	ldr	ip, [r4, #8]
   1376c:	str	ip, [sp, #4]
   13770:	ldr	ip, [r4, #12]
   13774:	str	ip, [sp, #8]
   13778:	ldr	ip, [r4, #16]
   1377c:	str	ip, [sp, #12]
   13780:	ldr	ip, [r4, #20]
   13784:	str	ip, [sp, #16]
   13788:	ldr	ip, [r4, #24]
   1378c:	str	ip, [sp, #20]
   13790:	ldr	ip, [r4, #28]
   13794:	str	ip, [sp, #24]
   13798:	mov	r2, r0
   1379c:	mov	r0, r5
   137a0:	bl	11074 <__fprintf_chk@plt>
   137a4:	b	1356c <close_stdout@@Base+0x1b44>
   137a8:	str	r3, [sp]
   137ac:	mov	r3, r2
   137b0:	ldr	r2, [pc, #84]	; 1380c <close_stdout@@Base+0x1de4>
   137b4:	mov	r1, #1
   137b8:	add	r2, pc, r2
   137bc:	bl	11074 <__fprintf_chk@plt>
   137c0:	b	13484 <close_stdout@@Base+0x1a5c>
   137c4:	ldr	r1, [pc, #68]	; 13810 <close_stdout@@Base+0x1de8>
   137c8:	mov	r0, #0
   137cc:	add	r1, pc, r1
   137d0:	b	13514 <close_stdout@@Base+0x1aec>
   137d4:	andeq	r2, r1, r0, lsr #23
   137d8:	andeq	r1, r0, ip, lsl #14
   137dc:	andeq	r1, r0, ip, lsl #14
   137e0:	andeq	r0, r0, r4, lsl r1
   137e4:	ldrdeq	r1, [r0], -ip
   137e8:	andeq	r1, r0, r8, ror #16
   137ec:	andeq	r1, r0, r8, ror #13
   137f0:	andeq	r1, r0, r8, asr #13
   137f4:	andeq	r1, r0, ip, lsr #13
   137f8:	andeq	r1, r0, ip, lsl #13
   137fc:	andeq	r1, r0, ip, ror #12
   13800:	andeq	r1, r0, r8, asr #12
   13804:	andeq	r1, r0, r0, lsr #12
   13808:	strdeq	r1, [r0], -r4
   1380c:	ldrdeq	r1, [r0], -ip
   13810:	andeq	r1, r0, r0, ror #11
   13814:	push	{r4, r5, lr}
   13818:	sub	sp, sp, #12
   1381c:	ldr	r5, [sp, #24]
   13820:	ldr	ip, [r5]
   13824:	cmp	ip, #0
   13828:	beq	13844 <close_stdout@@Base+0x1e1c>
   1382c:	mov	lr, r5
   13830:	mov	ip, #0
   13834:	ldr	r4, [lr, #4]!
   13838:	add	ip, ip, #1
   1383c:	cmp	r4, #0
   13840:	bne	13834 <close_stdout@@Base+0x1e0c>
   13844:	stm	sp, {r5, ip}
   13848:	bl	13440 <close_stdout@@Base+0x1a18>
   1384c:	add	sp, sp, #12
   13850:	pop	{r4, r5, pc}
   13854:	push	{r4, r5, r6, r7, lr}
   13858:	sub	sp, sp, #60	; 0x3c
   1385c:	ldr	r4, [pc, #100]	; 138c8 <close_stdout@@Base+0x1ea0>
   13860:	mov	ip, #0
   13864:	ldr	r5, [pc, #96]	; 138cc <close_stdout@@Base+0x1ea4>
   13868:	mov	lr, ip
   1386c:	add	r4, pc, r4
   13870:	ldr	r6, [sp, #80]	; 0x50
   13874:	ldr	r7, [r4, r5]
   13878:	add	r5, sp, #12
   1387c:	ldr	r4, [r7]
   13880:	str	r4, [sp, #52]	; 0x34
   13884:	ldr	r4, [r6, ip]
   13888:	cmp	r4, #0
   1388c:	str	r4, [r5, ip]
   13890:	beq	138a4 <close_stdout@@Base+0x1e7c>
   13894:	add	lr, lr, #1
   13898:	add	ip, ip, #4
   1389c:	cmp	lr, #10
   138a0:	bne	13884 <close_stdout@@Base+0x1e5c>
   138a4:	stm	sp, {r5, lr}
   138a8:	bl	13440 <close_stdout@@Base+0x1a18>
   138ac:	ldr	r2, [sp, #52]	; 0x34
   138b0:	ldr	r3, [r7]
   138b4:	cmp	r2, r3
   138b8:	bne	138c4 <close_stdout@@Base+0x1e9c>
   138bc:	add	sp, sp, #60	; 0x3c
   138c0:	pop	{r4, r5, r6, r7, pc}
   138c4:	bl	10f24 <__stack_chk_fail@plt>
   138c8:	andeq	r2, r1, ip, lsl #15
   138cc:	andeq	r0, r0, r4, ror #1
   138d0:	push	{r3}		; (str r3, [sp, #-4]!)
   138d4:	push	{r4, lr}
   138d8:	sub	sp, sp, #20
   138dc:	ldr	lr, [pc, #72]	; 1392c <close_stdout@@Base+0x1f04>
   138e0:	add	ip, sp, #32
   138e4:	ldr	r4, [pc, #68]	; 13930 <close_stdout@@Base+0x1f08>
   138e8:	add	lr, pc, lr
   138ec:	ldr	r3, [sp, #28]
   138f0:	ldr	r4, [lr, r4]
   138f4:	str	ip, [sp]
   138f8:	str	ip, [sp, #8]
   138fc:	ldr	ip, [r4]
   13900:	str	ip, [sp, #12]
   13904:	bl	13854 <close_stdout@@Base+0x1e2c>
   13908:	ldr	r2, [sp, #12]
   1390c:	ldr	r3, [r4]
   13910:	cmp	r2, r3
   13914:	bne	13928 <close_stdout@@Base+0x1f00>
   13918:	add	sp, sp, #20
   1391c:	pop	{r4, lr}
   13920:	add	sp, sp, #4
   13924:	bx	lr
   13928:	bl	10f24 <__stack_chk_fail@plt>
   1392c:	andeq	r2, r1, r0, lsl r7
   13930:	andeq	r0, r0, r4, ror #1
   13934:	ldr	r1, [pc, #132]	; 139c0 <close_stdout@@Base+0x1f98>
   13938:	mov	r2, #5
   1393c:	push	{r4, lr}
   13940:	add	r1, pc, r1
   13944:	mov	r0, #0
   13948:	ldr	r4, [pc, #116]	; 139c4 <close_stdout@@Base+0x1f9c>
   1394c:	bl	10f18 <dcgettext@plt>
   13950:	ldr	r2, [pc, #112]	; 139c8 <close_stdout@@Base+0x1fa0>
   13954:	add	r4, pc, r4
   13958:	add	r2, pc, r2
   1395c:	mov	r1, r0
   13960:	mov	r0, #1
   13964:	bl	1105c <__printf_chk@plt>
   13968:	ldr	r1, [pc, #92]	; 139cc <close_stdout@@Base+0x1fa4>
   1396c:	mov	r2, #5
   13970:	mov	r0, #0
   13974:	add	r1, pc, r1
   13978:	bl	10f18 <dcgettext@plt>
   1397c:	ldr	r2, [pc, #76]	; 139d0 <close_stdout@@Base+0x1fa8>
   13980:	ldr	r3, [pc, #76]	; 139d4 <close_stdout@@Base+0x1fac>
   13984:	add	r2, pc, r2
   13988:	add	r3, pc, r3
   1398c:	mov	r1, r0
   13990:	mov	r0, #1
   13994:	bl	1105c <__printf_chk@plt>
   13998:	ldr	r1, [pc, #56]	; 139d8 <close_stdout@@Base+0x1fb0>
   1399c:	mov	r0, #0
   139a0:	mov	r2, #5
   139a4:	add	r1, pc, r1
   139a8:	bl	10f18 <dcgettext@plt>
   139ac:	ldr	r3, [pc, #40]	; 139dc <close_stdout@@Base+0x1fb4>
   139b0:	ldr	r3, [r4, r3]
   139b4:	pop	{r4, lr}
   139b8:	ldr	r1, [r3]
   139bc:	b	10ea0 <fputs_unlocked@plt>
   139c0:	andeq	r1, r0, r8, lsr #9
   139c4:	andeq	r2, r1, r4, lsr #13
   139c8:	andeq	r1, r0, r8, lsr #9
   139cc:	andeq	r1, r0, r4, lsr #9
   139d0:	andeq	r0, r0, r0, asr #30
   139d4:	andeq	r0, r0, ip, asr #30
   139d8:	andeq	r1, r0, r8, lsl #9
   139dc:	andeq	r0, r0, r4, lsl #2
   139e0:	push	{r4, lr}
   139e4:	mov	r4, r0
   139e8:	bl	10fc0 <malloc@plt>
   139ec:	rsbs	r3, r0, #1
   139f0:	movcc	r3, #0
   139f4:	cmp	r4, #0
   139f8:	moveq	r3, #0
   139fc:	cmp	r3, #0
   13a00:	popeq	{r4, pc}
   13a04:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13a08:	push	{r3, r4, r5, lr}
   13a0c:	mov	r4, r0
   13a10:	mvn	r0, #0
   13a14:	mov	r5, r1
   13a18:	bl	14294 <close_stdout@@Base+0x286c>
   13a1c:	cmp	r0, r4
   13a20:	bcc	13a30 <close_stdout@@Base+0x2008>
   13a24:	mul	r0, r4, r5
   13a28:	pop	{r3, r4, r5, lr}
   13a2c:	b	139e0 <close_stdout@@Base+0x1fb8>
   13a30:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13a34:	b	139e0 <close_stdout@@Base+0x1fb8>
   13a38:	rsbs	r3, r1, #1
   13a3c:	push	{r4, lr}
   13a40:	movcc	r3, #0
   13a44:	cmp	r0, #0
   13a48:	mov	r4, r1
   13a4c:	moveq	r3, #0
   13a50:	cmp	r3, #0
   13a54:	bne	13a78 <close_stdout@@Base+0x2050>
   13a58:	bl	10f30 <realloc@plt>
   13a5c:	rsbs	r3, r0, #1
   13a60:	movcc	r3, #0
   13a64:	cmp	r4, #0
   13a68:	moveq	r3, #0
   13a6c:	cmp	r3, #0
   13a70:	popeq	{r4, pc}
   13a74:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13a78:	bl	10ed0 <free@plt>
   13a7c:	mov	r0, #0
   13a80:	pop	{r4, pc}
   13a84:	push	{r4, r5, r6, lr}
   13a88:	mov	r5, r1
   13a8c:	mov	r6, r0
   13a90:	mov	r1, r2
   13a94:	mvn	r0, #0
   13a98:	mov	r4, r2
   13a9c:	bl	14294 <close_stdout@@Base+0x286c>
   13aa0:	cmp	r0, r5
   13aa4:	bcc	13ab8 <close_stdout@@Base+0x2090>
   13aa8:	mov	r0, r6
   13aac:	mul	r1, r5, r4
   13ab0:	pop	{r4, r5, r6, lr}
   13ab4:	b	13a38 <close_stdout@@Base+0x2010>
   13ab8:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13abc:	push	{r3, r4, r5, r6, r7, lr}
   13ac0:	subs	r7, r0, #0
   13ac4:	mov	r5, r1
   13ac8:	mov	r6, r2
   13acc:	ldr	r4, [r1]
   13ad0:	beq	13b08 <close_stdout@@Base+0x20e0>
   13ad4:	movw	r0, #43690	; 0xaaaa
   13ad8:	mov	r1, r2
   13adc:	bfi	r0, r0, #16, #16
   13ae0:	bl	14294 <close_stdout@@Base+0x286c>
   13ae4:	cmp	r4, r0
   13ae8:	addcc	r3, r4, #1
   13aec:	addcc	r4, r4, r3, lsr #1
   13af0:	bcs	13b2c <close_stdout@@Base+0x2104>
   13af4:	str	r4, [r5]
   13af8:	mov	r0, r7
   13afc:	mul	r1, r6, r4
   13b00:	pop	{r3, r4, r5, r6, r7, lr}
   13b04:	b	13a38 <close_stdout@@Base+0x2010>
   13b08:	cmp	r4, #0
   13b0c:	bne	13af4 <close_stdout@@Base+0x20cc>
   13b10:	mov	r0, #64	; 0x40
   13b14:	mov	r1, r2
   13b18:	bl	14294 <close_stdout@@Base+0x286c>
   13b1c:	cmp	r0, #0
   13b20:	movne	r4, r0
   13b24:	addeq	r4, r0, #1
   13b28:	b	13af4 <close_stdout@@Base+0x20cc>
   13b2c:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13b30:	cmp	r0, #0
   13b34:	push	{r3, lr}
   13b38:	ldr	r3, [r1]
   13b3c:	beq	13b68 <close_stdout@@Base+0x2140>
   13b40:	movw	r2, #43689	; 0xaaa9
   13b44:	movt	r2, #43690	; 0xaaaa
   13b48:	cmp	r3, r2
   13b4c:	addls	r2, r3, #1
   13b50:	addls	r3, r3, r2, lsr #1
   13b54:	bhi	13b80 <close_stdout@@Base+0x2158>
   13b58:	str	r3, [r1]
   13b5c:	mov	r1, r3
   13b60:	pop	{r3, lr}
   13b64:	b	13a38 <close_stdout@@Base+0x2010>
   13b68:	cmp	r3, #0
   13b6c:	moveq	r3, #64	; 0x40
   13b70:	str	r3, [r1]
   13b74:	mov	r1, r3
   13b78:	pop	{r3, lr}
   13b7c:	b	13a38 <close_stdout@@Base+0x2010>
   13b80:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13b84:	push	{r4, lr}
   13b88:	mov	r4, r0
   13b8c:	bl	139e0 <close_stdout@@Base+0x1fb8>
   13b90:	mov	r2, r4
   13b94:	mov	r1, #0
   13b98:	pop	{r4, lr}
   13b9c:	b	11044 <memset@plt>
   13ba0:	push	{r3, lr}
   13ba4:	bl	10e94 <calloc@plt>
   13ba8:	cmp	r0, #0
   13bac:	popne	{r3, pc}
   13bb0:	bl	13bf4 <close_stdout@@Base+0x21cc>
   13bb4:	push	{r3, r4, r5, lr}
   13bb8:	mov	r4, r1
   13bbc:	mov	r5, r0
   13bc0:	mov	r0, r1
   13bc4:	bl	139e0 <close_stdout@@Base+0x1fb8>
   13bc8:	mov	r1, r5
   13bcc:	mov	r2, r4
   13bd0:	pop	{r3, r4, r5, lr}
   13bd4:	b	10ee8 <memcpy@plt>
   13bd8:	push	{r4, lr}
   13bdc:	mov	r4, r0
   13be0:	bl	11014 <strlen@plt>
   13be4:	add	r1, r0, #1
   13be8:	mov	r0, r4
   13bec:	pop	{r4, lr}
   13bf0:	b	13bb4 <close_stdout@@Base+0x218c>
   13bf4:	ldr	r3, [pc, #64]	; 13c3c <close_stdout@@Base+0x2214>
   13bf8:	mov	r2, #5
   13bfc:	ldr	ip, [pc, #60]	; 13c40 <close_stdout@@Base+0x2218>
   13c00:	mov	r0, #0
   13c04:	add	r3, pc, r3
   13c08:	ldr	r1, [pc, #52]	; 13c44 <close_stdout@@Base+0x221c>
   13c0c:	push	{r4, lr}
   13c10:	add	r1, pc, r1
   13c14:	ldr	r3, [r3, ip]
   13c18:	ldr	r4, [r3]
   13c1c:	bl	10f18 <dcgettext@plt>
   13c20:	ldr	r2, [pc, #32]	; 13c48 <close_stdout@@Base+0x2220>
   13c24:	mov	r1, #0
   13c28:	add	r2, pc, r2
   13c2c:	mov	r3, r0
   13c30:	mov	r0, r4
   13c34:	bl	10f9c <error@plt>
   13c38:	bl	110ec <abort@plt>
   13c3c:	strdeq	r2, [r1], -r4
   13c40:	andeq	r0, r0, r8, lsl #2
   13c44:	andeq	r1, r0, ip, lsl #5
   13c48:	muleq	r0, r8, lr
   13c4c:	push	{r4, r5, r6, lr}
   13c50:	mov	r4, r0
   13c54:	bl	10f84 <__fpending@plt>
   13c58:	mov	r6, r0
   13c5c:	mov	r0, r4
   13c60:	ldr	r4, [r4]
   13c64:	bl	140ec <close_stdout@@Base+0x26c4>
   13c68:	and	r4, r4, #32
   13c6c:	adds	r5, r0, #0
   13c70:	movne	r5, #1
   13c74:	cmp	r4, #0
   13c78:	bne	13c98 <close_stdout@@Base+0x2270>
   13c7c:	cmp	r5, #0
   13c80:	beq	13c90 <close_stdout@@Base+0x2268>
   13c84:	cmp	r6, #0
   13c88:	beq	13cb4 <close_stdout@@Base+0x228c>
   13c8c:	mvn	r4, #0
   13c90:	mov	r0, r4
   13c94:	pop	{r4, r5, r6, pc}
   13c98:	cmp	r5, #0
   13c9c:	bne	13c8c <close_stdout@@Base+0x2264>
   13ca0:	bl	1102c <__errno_location@plt>
   13ca4:	mvn	r4, #0
   13ca8:	str	r5, [r0]
   13cac:	mov	r0, r4
   13cb0:	pop	{r4, r5, r6, pc}
   13cb4:	bl	1102c <__errno_location@plt>
   13cb8:	ldr	r4, [r0]
   13cbc:	subs	r4, r4, #9
   13cc0:	mvnne	r4, #0
   13cc4:	mov	r0, r4
   13cc8:	pop	{r4, r5, r6, pc}
   13ccc:	ldr	r3, [pc, #984]	; 140ac <close_stdout@@Base+0x2684>
   13cd0:	mov	r0, #14
   13cd4:	ldr	r2, [pc, #980]	; 140b0 <close_stdout@@Base+0x2688>
   13cd8:	add	r3, pc, r3
   13cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce0:	sub	sp, sp, #132	; 0x84
   13ce4:	ldr	r6, [r3, r2]
   13ce8:	ldr	r3, [r6]
   13cec:	str	r3, [sp, #124]	; 0x7c
   13cf0:	bl	110c8 <nl_langinfo@plt>
   13cf4:	subs	r5, r0, #0
   13cf8:	beq	13dac <close_stdout@@Base+0x2384>
   13cfc:	ldr	r3, [pc, #944]	; 140b4 <close_stdout@@Base+0x268c>
   13d00:	ldr	r4, [pc, r3]
   13d04:	cmp	r4, #0
   13d08:	beq	13db8 <close_stdout@@Base+0x2390>
   13d0c:	ldrb	r7, [r4]
   13d10:	cmp	r7, #0
   13d14:	bne	13d48 <close_stdout@@Base+0x2320>
   13d18:	b	13d80 <close_stdout@@Base+0x2358>
   13d1c:	mov	r0, r4
   13d20:	bl	11014 <strlen@plt>
   13d24:	add	r0, r0, #1
   13d28:	add	r7, r4, r0
   13d2c:	mov	r0, r7
   13d30:	bl	11014 <strlen@plt>
   13d34:	add	r0, r0, #1
   13d38:	add	r4, r7, r0
   13d3c:	ldrb	r7, [r7, r0]
   13d40:	cmp	r7, #0
   13d44:	beq	13d80 <close_stdout@@Base+0x2358>
   13d48:	mov	r0, r5
   13d4c:	mov	r1, r4
   13d50:	bl	10eb8 <strcmp@plt>
   13d54:	cmp	r0, #0
   13d58:	beq	13d70 <close_stdout@@Base+0x2348>
   13d5c:	cmp	r7, #42	; 0x2a
   13d60:	bne	13d1c <close_stdout@@Base+0x22f4>
   13d64:	ldrb	r3, [r4, #1]
   13d68:	cmp	r3, #0
   13d6c:	bne	13d1c <close_stdout@@Base+0x22f4>
   13d70:	mov	r0, r4
   13d74:	bl	11014 <strlen@plt>
   13d78:	add	r0, r0, #1
   13d7c:	add	r5, r4, r0
   13d80:	ldrb	r3, [r5]
   13d84:	cmp	r3, #0
   13d88:	ldreq	r5, [pc, #808]	; 140b8 <close_stdout@@Base+0x2690>
   13d8c:	addeq	r5, pc, r5
   13d90:	ldr	r2, [sp, #124]	; 0x7c
   13d94:	mov	r0, r5
   13d98:	ldr	r3, [r6]
   13d9c:	cmp	r2, r3
   13da0:	bne	14080 <close_stdout@@Base+0x2658>
   13da4:	add	sp, sp, #132	; 0x84
   13da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dac:	ldr	r5, [pc, #776]	; 140bc <close_stdout@@Base+0x2694>
   13db0:	add	r5, pc, r5
   13db4:	b	13cfc <close_stdout@@Base+0x22d4>
   13db8:	ldr	r0, [pc, #768]	; 140c0 <close_stdout@@Base+0x2698>
   13dbc:	add	r0, pc, r0
   13dc0:	bl	10fb4 <getenv@plt>
   13dc4:	subs	r8, r0, #0
   13dc8:	beq	14058 <close_stdout@@Base+0x2630>
   13dcc:	ldrb	r3, [r8]
   13dd0:	cmp	r3, #0
   13dd4:	beq	13fec <close_stdout@@Base+0x25c4>
   13dd8:	bl	11014 <strlen@plt>
   13ddc:	subs	sl, r0, #0
   13de0:	subne	r3, sl, #1
   13de4:	bne	13ffc <close_stdout@@Base+0x25d4>
   13de8:	mov	r9, #0
   13dec:	mov	fp, r9
   13df0:	add	r9, sl, r9
   13df4:	add	r0, r9, #14
   13df8:	bl	10fc0 <malloc@plt>
   13dfc:	subs	r7, r0, #0
   13e00:	beq	1404c <close_stdout@@Base+0x2624>
   13e04:	mov	r1, r8
   13e08:	mov	r2, sl
   13e0c:	bl	10ee8 <memcpy@plt>
   13e10:	cmp	fp, #0
   13e14:	add	ip, r7, r9
   13e18:	movne	r3, #47	; 0x2f
   13e1c:	strbne	r3, [r7, sl]
   13e20:	ldr	r3, [pc, #668]	; 140c4 <close_stdout@@Base+0x269c>
   13e24:	add	r3, pc, r3
   13e28:	ldm	r3!, {r0, r1, r2}
   13e2c:	ldrh	r3, [r3]
   13e30:	str	r0, [r7, r9]
   13e34:	mov	r0, r7
   13e38:	str	r1, [ip, #4]
   13e3c:	mov	r1, #32768	; 0x8000
   13e40:	strh	r3, [ip, #12]
   13e44:	str	r2, [ip, #8]
   13e48:	bl	10fa8 <open64@plt>
   13e4c:	subs	r8, r0, #0
   13e50:	blt	14014 <close_stdout@@Base+0x25ec>
   13e54:	ldr	r1, [pc, #620]	; 140c8 <close_stdout@@Base+0x26a0>
   13e58:	add	r1, pc, r1
   13e5c:	bl	10e88 <fdopen@plt>
   13e60:	subs	fp, r0, #0
   13e64:	beq	1406c <close_stdout@@Base+0x2644>
   13e68:	ldr	r0, [pc, #604]	; 140cc <close_stdout@@Base+0x26a4>
   13e6c:	add	sl, sp, #20
   13e70:	add	r9, sp, #72	; 0x48
   13e74:	mov	r8, #0
   13e78:	add	r0, pc, r0
   13e7c:	str	r0, [sp, #12]
   13e80:	ldr	r3, [fp, #4]
   13e84:	ldr	r2, [fp, #8]
   13e88:	cmp	r3, r2
   13e8c:	bcs	13f78 <close_stdout@@Base+0x2550>
   13e90:	add	r2, r3, #1
   13e94:	str	r2, [fp, #4]
   13e98:	ldrb	r0, [r3]
   13e9c:	cmp	r0, #32
   13ea0:	beq	13e80 <close_stdout@@Base+0x2458>
   13ea4:	sub	r3, r0, #9
   13ea8:	cmp	r3, #1
   13eac:	bls	13e80 <close_stdout@@Base+0x2458>
   13eb0:	cmp	r0, #35	; 0x23
   13eb4:	beq	13f8c <close_stdout@@Base+0x2564>
   13eb8:	mov	r1, fp
   13ebc:	bl	11020 <ungetc@plt>
   13ec0:	mov	r0, fp
   13ec4:	ldr	r1, [sp, #12]
   13ec8:	mov	r2, sl
   13ecc:	mov	r3, r9
   13ed0:	bl	11050 <fscanf@plt>
   13ed4:	cmp	r0, #1
   13ed8:	ble	13fbc <close_stdout@@Base+0x2594>
   13edc:	mov	r0, sl
   13ee0:	bl	11014 <strlen@plt>
   13ee4:	str	r0, [sp, #8]
   13ee8:	mov	r0, r9
   13eec:	bl	11014 <strlen@plt>
   13ef0:	cmp	r8, #0
   13ef4:	mov	r2, r0
   13ef8:	bne	14020 <close_stdout@@Base+0x25f8>
   13efc:	ldr	r3, [sp, #8]
   13f00:	str	r2, [sp]
   13f04:	add	r8, r0, r3
   13f08:	add	r0, r8, #3
   13f0c:	add	r8, r8, #2
   13f10:	bl	10fc0 <malloc@plt>
   13f14:	ldr	r2, [sp]
   13f18:	mov	r3, r0
   13f1c:	cmp	r3, #0
   13f20:	beq	14084 <close_stdout@@Base+0x265c>
   13f24:	ldr	r0, [sp, #8]
   13f28:	movw	r1, #65534	; 0xfffe
   13f2c:	movt	r1, #65535	; 0xffff
   13f30:	rsb	r2, r2, r8
   13f34:	rsb	r1, r0, r1
   13f38:	stm	sp, {r2, r3}
   13f3c:	add	r0, r1, r2
   13f40:	mov	r1, sl
   13f44:	add	r0, r3, r0
   13f48:	mov	r4, r3
   13f4c:	bl	10f78 <strcpy@plt>
   13f50:	ldr	r2, [sp]
   13f54:	ldr	r3, [sp, #4]
   13f58:	mov	r1, r9
   13f5c:	sub	r0, r2, #1
   13f60:	add	r0, r3, r0
   13f64:	bl	10f78 <strcpy@plt>
   13f68:	ldr	r3, [fp, #4]
   13f6c:	ldr	r2, [fp, #8]
   13f70:	cmp	r3, r2
   13f74:	bcc	13e90 <close_stdout@@Base+0x2468>
   13f78:	mov	r0, fp
   13f7c:	bl	11098 <__uflow@plt>
   13f80:	cmn	r0, #1
   13f84:	beq	13fbc <close_stdout@@Base+0x2594>
   13f88:	b	13e9c <close_stdout@@Base+0x2474>
   13f8c:	ldr	r3, [fp, #4]
   13f90:	ldr	r2, [fp, #8]
   13f94:	cmp	r3, r2
   13f98:	bcs	140a0 <close_stdout@@Base+0x2678>
   13f9c:	add	r2, r3, #1
   13fa0:	str	r2, [fp, #4]
   13fa4:	ldrb	r0, [r3]
   13fa8:	cmp	r0, #10
   13fac:	cmnne	r0, #1
   13fb0:	bne	13f8c <close_stdout@@Base+0x2564>
   13fb4:	cmn	r0, #1
   13fb8:	bne	13e80 <close_stdout@@Base+0x2458>
   13fbc:	mov	r0, fp
   13fc0:	bl	140ec <close_stdout@@Base+0x26c4>
   13fc4:	cmp	r8, #0
   13fc8:	beq	14014 <close_stdout@@Base+0x25ec>
   13fcc:	mov	r3, #0
   13fd0:	strb	r3, [r4, r8]
   13fd4:	mov	r0, r7
   13fd8:	bl	10ed0 <free@plt>
   13fdc:	ldr	r3, [pc, #236]	; 140d0 <close_stdout@@Base+0x26a8>
   13fe0:	add	r3, pc, r3
   13fe4:	str	r4, [r3]
   13fe8:	b	13d0c <close_stdout@@Base+0x22e4>
   13fec:	ldr	r8, [pc, #224]	; 140d4 <close_stdout@@Base+0x26ac>
   13ff0:	mov	r3, #7
   13ff4:	mov	sl, #8
   13ff8:	add	r8, pc, r8
   13ffc:	ldrb	r3, [r8, r3]
   14000:	cmp	r3, #47	; 0x2f
   14004:	movne	r9, #1
   14008:	movne	fp, r9
   1400c:	bne	13df0 <close_stdout@@Base+0x23c8>
   14010:	b	13de8 <close_stdout@@Base+0x23c0>
   14014:	ldr	r4, [pc, #188]	; 140d8 <close_stdout@@Base+0x26b0>
   14018:	add	r4, pc, r4
   1401c:	b	13fd4 <close_stdout@@Base+0x25ac>
   14020:	ldr	r0, [sp, #8]
   14024:	str	r2, [sp]
   14028:	add	r3, r0, r2
   1402c:	mov	r0, r4
   14030:	add	r8, r3, r8
   14034:	add	r1, r8, #3
   14038:	add	r8, r8, #2
   1403c:	bl	10f30 <realloc@plt>
   14040:	ldr	r2, [sp]
   14044:	mov	r3, r0
   14048:	b	13f1c <close_stdout@@Base+0x24f4>
   1404c:	ldr	r4, [pc, #136]	; 140dc <close_stdout@@Base+0x26b4>
   14050:	add	r4, pc, r4
   14054:	b	13fdc <close_stdout@@Base+0x25b4>
   14058:	ldr	r8, [pc, #128]	; 140e0 <close_stdout@@Base+0x26b8>
   1405c:	mov	r3, #7
   14060:	mov	sl, #8
   14064:	add	r8, pc, r8
   14068:	b	13ffc <close_stdout@@Base+0x25d4>
   1406c:	ldr	r4, [pc, #112]	; 140e4 <close_stdout@@Base+0x26bc>
   14070:	mov	r0, r8
   14074:	add	r4, pc, r4
   14078:	bl	110f8 <close@plt>
   1407c:	b	13fd4 <close_stdout@@Base+0x25ac>
   14080:	bl	10f24 <__stack_chk_fail@plt>
   14084:	mov	r0, r4
   14088:	ldr	r4, [pc, #88]	; 140e8 <close_stdout@@Base+0x26c0>
   1408c:	bl	10ed0 <free@plt>
   14090:	mov	r0, fp
   14094:	add	r4, pc, r4
   14098:	bl	140ec <close_stdout@@Base+0x26c4>
   1409c:	b	13fd4 <close_stdout@@Base+0x25ac>
   140a0:	mov	r0, fp
   140a4:	bl	11098 <__uflow@plt>
   140a8:	b	13fa8 <close_stdout@@Base+0x2580>
   140ac:	andeq	r2, r1, r0, lsr #6
   140b0:	andeq	r0, r0, r4, ror #1
   140b4:			; <UNDEFINED> instruction: 0x000128b8
   140b8:	andeq	r1, r0, r0, lsr r1
   140bc:	ldrdeq	r0, [r0], -r8
   140c0:	andeq	r1, r0, r8, lsl #2
   140c4:	strheq	r1, [r0], -r0
   140c8:	andeq	r0, r0, r4, lsr #24
   140cc:	andeq	r1, r0, ip, rrx
   140d0:	ldrdeq	r2, [r1], -r8
   140d4:			; <UNDEFINED> instruction: 0x00000eb8
   140d8:	andeq	r0, r0, r0, ror r9
   140dc:	andeq	r0, r0, r8, lsr r9
   140e0:	andeq	r0, r0, ip, asr #28
   140e4:	andeq	r0, r0, r4, lsl r9
   140e8:	strdeq	r0, [r0], -r4
   140ec:	push	{r4, r5, r6, lr}
   140f0:	sub	sp, sp, #8
   140f4:	mov	r4, r0
   140f8:	bl	11068 <fileno@plt>
   140fc:	cmp	r0, #0
   14100:	mov	r0, r4
   14104:	blt	14180 <close_stdout@@Base+0x2758>
   14108:	bl	10fd8 <__freading@plt>
   1410c:	cmp	r0, #0
   14110:	bne	1414c <close_stdout@@Base+0x2724>
   14114:	mov	r0, r4
   14118:	bl	1418c <close_stdout@@Base+0x2764>
   1411c:	cmp	r0, #0
   14120:	beq	1417c <close_stdout@@Base+0x2754>
   14124:	bl	1102c <__errno_location@plt>
   14128:	ldr	r6, [r0]
   1412c:	mov	r5, r0
   14130:	mov	r0, r4
   14134:	bl	11080 <fclose@plt>
   14138:	cmp	r6, #0
   1413c:	mvnne	r0, #0
   14140:	strne	r6, [r5]
   14144:	add	sp, sp, #8
   14148:	pop	{r4, r5, r6, pc}
   1414c:	mov	r0, r4
   14150:	bl	11068 <fileno@plt>
   14154:	mov	r1, #1
   14158:	mov	r2, #0
   1415c:	mov	r3, #0
   14160:	str	r1, [sp]
   14164:	bl	10f60 <lseek64@plt>
   14168:	mvn	r2, #0
   1416c:	mvn	r3, #0
   14170:	cmp	r1, r3
   14174:	cmpeq	r0, r2
   14178:	bne	14114 <close_stdout@@Base+0x26ec>
   1417c:	mov	r0, r4
   14180:	add	sp, sp, #8
   14184:	pop	{r4, r5, r6, lr}
   14188:	b	11080 <fclose@plt>
   1418c:	push	{r4, lr}
   14190:	subs	r4, r0, #0
   14194:	sub	sp, sp, #8
   14198:	beq	141a8 <close_stdout@@Base+0x2780>
   1419c:	bl	10fd8 <__freading@plt>
   141a0:	cmp	r0, #0
   141a4:	bne	141b8 <close_stdout@@Base+0x2790>
   141a8:	mov	r0, r4
   141ac:	add	sp, sp, #8
   141b0:	pop	{r4, lr}
   141b4:	b	10ec4 <fflush@plt>
   141b8:	ldr	r3, [r4]
   141bc:	tst	r3, #256	; 0x100
   141c0:	beq	141a8 <close_stdout@@Base+0x2780>
   141c4:	mov	r3, #1
   141c8:	mov	r0, r4
   141cc:	str	r3, [sp]
   141d0:	mov	r2, #0
   141d4:	mov	r3, #0
   141d8:	bl	141ec <close_stdout@@Base+0x27c4>
   141dc:	mov	r0, r4
   141e0:	add	sp, sp, #8
   141e4:	pop	{r4, lr}
   141e8:	b	10ec4 <fflush@plt>
   141ec:	push	{r4, r5, r6, r7, lr}
   141f0:	sub	sp, sp, #20
   141f4:	ldmib	r0, {r1, ip}
   141f8:	mov	r6, r0
   141fc:	ldr	r4, [sp, #40]	; 0x28
   14200:	cmp	ip, r1
   14204:	beq	1421c <close_stdout@@Base+0x27f4>
   14208:	str	r4, [sp, #40]	; 0x28
   1420c:	mov	r0, r6
   14210:	add	sp, sp, #20
   14214:	pop	{r4, r5, r6, r7, lr}
   14218:	b	1108c <fseeko64@plt>
   1421c:	ldr	ip, [r0, #20]
   14220:	ldr	r1, [r0, #16]
   14224:	cmp	ip, r1
   14228:	bne	14208 <close_stdout@@Base+0x27e0>
   1422c:	ldr	r7, [r0, #36]	; 0x24
   14230:	cmp	r7, #0
   14234:	bne	14208 <close_stdout@@Base+0x27e0>
   14238:	str	r2, [sp, #12]
   1423c:	mvn	r5, #0
   14240:	str	r3, [sp, #8]
   14244:	bl	11068 <fileno@plt>
   14248:	str	r4, [sp]
   1424c:	mvn	r4, #0
   14250:	ldr	r2, [sp, #12]
   14254:	ldr	r3, [sp, #8]
   14258:	bl	10f60 <lseek64@plt>
   1425c:	mov	r2, r0
   14260:	mov	r3, r1
   14264:	cmp	r3, r5
   14268:	cmpeq	r2, r4
   1426c:	beq	1428c <close_stdout@@Base+0x2864>
   14270:	ldr	r1, [r6]
   14274:	mov	r0, r7
   14278:	strd	r2, [r6, #80]	; 0x50
   1427c:	bic	r3, r1, #16
   14280:	str	r3, [r6]
   14284:	add	sp, sp, #20
   14288:	pop	{r4, r5, r6, r7, pc}
   1428c:	mvn	r0, #0
   14290:	b	14284 <close_stdout@@Base+0x285c>
   14294:	subs	r2, r1, #1
   14298:	bxeq	lr
   1429c:	bcc	14474 <close_stdout@@Base+0x2a4c>
   142a0:	cmp	r0, r1
   142a4:	bls	14458 <close_stdout@@Base+0x2a30>
   142a8:	tst	r1, r2
   142ac:	beq	14464 <close_stdout@@Base+0x2a3c>
   142b0:	clz	r3, r0
   142b4:	clz	r2, r1
   142b8:	sub	r3, r2, r3
   142bc:	rsbs	r3, r3, #31
   142c0:	addne	r3, r3, r3, lsl #1
   142c4:	mov	r2, #0
   142c8:	addne	pc, pc, r3, lsl #2
   142cc:	nop	{0}
   142d0:	cmp	r0, r1, lsl #31
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #31
   142dc:	cmp	r0, r1, lsl #30
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #30
   142e8:	cmp	r0, r1, lsl #29
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #29
   142f4:	cmp	r0, r1, lsl #28
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #28
   14300:	cmp	r0, r1, lsl #27
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #27
   1430c:	cmp	r0, r1, lsl #26
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #26
   14318:	cmp	r0, r1, lsl #25
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #25
   14324:	cmp	r0, r1, lsl #24
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #24
   14330:	cmp	r0, r1, lsl #23
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #23
   1433c:	cmp	r0, r1, lsl #22
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #22
   14348:	cmp	r0, r1, lsl #21
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #21
   14354:	cmp	r0, r1, lsl #20
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #20
   14360:	cmp	r0, r1, lsl #19
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #19
   1436c:	cmp	r0, r1, lsl #18
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #18
   14378:	cmp	r0, r1, lsl #17
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #17
   14384:	cmp	r0, r1, lsl #16
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1, lsl #16
   14390:	cmp	r0, r1, lsl #15
   14394:	adc	r2, r2, r2
   14398:	subcs	r0, r0, r1, lsl #15
   1439c:	cmp	r0, r1, lsl #14
   143a0:	adc	r2, r2, r2
   143a4:	subcs	r0, r0, r1, lsl #14
   143a8:	cmp	r0, r1, lsl #13
   143ac:	adc	r2, r2, r2
   143b0:	subcs	r0, r0, r1, lsl #13
   143b4:	cmp	r0, r1, lsl #12
   143b8:	adc	r2, r2, r2
   143bc:	subcs	r0, r0, r1, lsl #12
   143c0:	cmp	r0, r1, lsl #11
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #11
   143cc:	cmp	r0, r1, lsl #10
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #10
   143d8:	cmp	r0, r1, lsl #9
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1, lsl #9
   143e4:	cmp	r0, r1, lsl #8
   143e8:	adc	r2, r2, r2
   143ec:	subcs	r0, r0, r1, lsl #8
   143f0:	cmp	r0, r1, lsl #7
   143f4:	adc	r2, r2, r2
   143f8:	subcs	r0, r0, r1, lsl #7
   143fc:	cmp	r0, r1, lsl #6
   14400:	adc	r2, r2, r2
   14404:	subcs	r0, r0, r1, lsl #6
   14408:	cmp	r0, r1, lsl #5
   1440c:	adc	r2, r2, r2
   14410:	subcs	r0, r0, r1, lsl #5
   14414:	cmp	r0, r1, lsl #4
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #4
   14420:	cmp	r0, r1, lsl #3
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1, lsl #3
   1442c:	cmp	r0, r1, lsl #2
   14430:	adc	r2, r2, r2
   14434:	subcs	r0, r0, r1, lsl #2
   14438:	cmp	r0, r1, lsl #1
   1443c:	adc	r2, r2, r2
   14440:	subcs	r0, r0, r1, lsl #1
   14444:	cmp	r0, r1
   14448:	adc	r2, r2, r2
   1444c:	subcs	r0, r0, r1
   14450:	mov	r0, r2
   14454:	bx	lr
   14458:	moveq	r0, #1
   1445c:	movne	r0, #0
   14460:	bx	lr
   14464:	clz	r2, r1
   14468:	rsb	r2, r2, #31
   1446c:	lsr	r0, r0, r2
   14470:	bx	lr
   14474:	cmp	r0, #0
   14478:	mvnne	r0, #0
   1447c:	b	144a0 <close_stdout@@Base+0x2a78>
   14480:	cmp	r1, #0
   14484:	beq	14474 <close_stdout@@Base+0x2a4c>
   14488:	push	{r0, r1, lr}
   1448c:	bl	14294 <close_stdout@@Base+0x286c>
   14490:	pop	{r1, r2, lr}
   14494:	mul	r3, r2, r0
   14498:	sub	r1, r1, r3
   1449c:	bx	lr
   144a0:	push	{r1, lr}
   144a4:	mov	r0, #8
   144a8:	bl	10eac <raise@plt>
   144ac:	pop	{r1, pc}
   144b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   144b4:	mov	r7, r0
   144b8:	ldr	r6, [pc, #76]	; 1450c <close_stdout@@Base+0x2ae4>
   144bc:	mov	r8, r1
   144c0:	ldr	r5, [pc, #72]	; 14510 <close_stdout@@Base+0x2ae8>
   144c4:	mov	r9, r2
   144c8:	add	r6, pc, r6
   144cc:	bl	10e68 <fdopen@plt-0x20>
   144d0:	add	r5, pc, r5
   144d4:	rsb	r6, r5, r6
   144d8:	asrs	r6, r6, #2
   144dc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   144e0:	sub	r5, r5, #4
   144e4:	mov	r4, #0
   144e8:	add	r4, r4, #1
   144ec:	ldr	r3, [r5, #4]!
   144f0:	mov	r0, r7
   144f4:	mov	r1, r8
   144f8:	mov	r2, r9
   144fc:	blx	r3
   14500:	cmp	r4, r6
   14504:	bne	144e8 <close_stdout@@Base+0x2ac0>
   14508:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1450c:	strdeq	r1, [r1], -ip
   14510:	strdeq	r1, [r1], -r0
   14514:	bx	lr
   14518:	ldr	r3, [pc, #28]	; 1453c <close_stdout@@Base+0x2b14>
   1451c:	mov	r1, #0
   14520:	ldr	r2, [pc, #24]	; 14540 <close_stdout@@Base+0x2b18>
   14524:	add	r3, pc, r3
   14528:	ldr	r3, [r3, r2]
   1452c:	cmp	r3, #0
   14530:	ldrne	r2, [r3]
   14534:	moveq	r2, r3
   14538:	b	11038 <__cxa_atexit@plt>
   1453c:	ldrdeq	r1, [r1], -r4
   14540:	andeq	r0, r0, r0, lsl #2

Disassembly of section .fini:

00014544 <.fini>:
   14544:	push	{r3, lr}
   14548:	pop	{r3, pc}
