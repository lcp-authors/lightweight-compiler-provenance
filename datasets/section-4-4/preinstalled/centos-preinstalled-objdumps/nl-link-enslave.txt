
centos-preinstalled/nl-link-enslave:     file format elf32-littlearm


Disassembly of section .init:

00010620 <.init>:
   10620:	push	{r3, lr}
   10624:	bl	10810 <nl_cli_connect@plt+0x158>
   10628:	pop	{r3, pc}

Disassembly of section .plt:

0001062c <abort@plt-0x14>:
   1062c:	push	{lr}		; (str lr, [sp, #-4]!)
   10630:	ldr	lr, [pc, #4]	; 1063c <abort@plt-0x4>
   10634:	add	lr, pc, lr
   10638:	ldr	pc, [lr, #8]!
   1063c:	andeq	r0, r1, r4, asr #19

00010640 <abort@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2500]!	; 0x9c4

0001064c <__libc_start_main@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2492]!	; 0x9bc

00010658 <__gmon_start__@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #16, 20	; 0x10000
   10660:	ldr	pc, [ip, #2484]!	; 0x9b4

00010664 <rtnl_link_bond_enslave@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #16, 20	; 0x10000
   1066c:	ldr	pc, [ip, #2476]!	; 0x9ac

00010670 <nl_cli_alloc_socket@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #16, 20	; 0x10000
   10678:	ldr	pc, [ip, #2468]!	; 0x9a4

0001067c <nl_cli_link_alloc_cache@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #16, 20	; 0x10000
   10684:	ldr	pc, [ip, #2460]!	; 0x99c

00010688 <fwrite@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #16, 20	; 0x10000
   10690:	ldr	pc, [ip, #2452]!	; 0x994

00010694 <__fprintf_chk@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #16, 20	; 0x10000
   1069c:	ldr	pc, [ip, #2444]!	; 0x98c

000106a0 <nl_geterror@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #16, 20	; 0x10000
   106a8:	ldr	pc, [ip, #2436]!	; 0x984

000106ac <rtnl_link_get_by_name@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #16, 20	; 0x10000
   106b4:	ldr	pc, [ip, #2428]!	; 0x97c

000106b8 <nl_cli_connect@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #16, 20	; 0x10000
   106c0:	ldr	pc, [ip, #2420]!	; 0x974

Disassembly of section .text:

000106c4 <.text>:
   106c4:	cmp	r0, #2
   106c8:	push	{r4, r5, r6, r7, lr}
   106cc:	mov	r4, r1
   106d0:	sub	sp, sp, #12
   106d4:	ble	10744 <nl_cli_connect@plt+0x8c>
   106d8:	bl	10670 <nl_cli_alloc_socket@plt>
   106dc:	mov	r1, #0
   106e0:	mov	r5, r0
   106e4:	bl	106b8 <nl_cli_connect@plt>
   106e8:	mov	r0, r5
   106ec:	bl	1067c <nl_cli_link_alloc_cache@plt>
   106f0:	ldr	r1, [r4, #4]
   106f4:	mov	r6, r0
   106f8:	bl	106ac <rtnl_link_get_by_name@plt>
   106fc:	subs	r7, r0, #0
   10700:	movweq	r1, #4160	; 0x1040
   10704:	ldreq	r3, [r4, #4]
   10708:	movteq	r1, #2
   1070c:	beq	10778 <nl_cli_connect@plt+0xc0>
   10710:	mov	r0, r6
   10714:	ldr	r1, [r4, #8]
   10718:	bl	106ac <rtnl_link_get_by_name@plt>
   1071c:	subs	r2, r0, #0
   10720:	beq	1076c <nl_cli_connect@plt+0xb4>
   10724:	mov	r0, r5
   10728:	mov	r1, r7
   1072c:	bl	10664 <rtnl_link_bond_enslave@plt>
   10730:	cmp	r0, #0
   10734:	movge	r0, #0
   10738:	blt	10794 <nl_cli_connect@plt+0xdc>
   1073c:	add	sp, sp, #12
   10740:	pop	{r4, r5, r6, r7, pc}
   10744:	movw	r3, #4160	; 0x1040
   10748:	movt	r3, #2
   1074c:	movw	r0, #2432	; 0x980
   10750:	mov	r1, #1
   10754:	ldr	r3, [r3]
   10758:	movt	r0, #1
   1075c:	mov	r2, #36	; 0x24
   10760:	bl	10688 <fwrite@plt>
   10764:	mov	r0, #1
   10768:	b	1073c <nl_cli_connect@plt+0x84>
   1076c:	ldr	r3, [r4, #8]
   10770:	movw	r1, #4160	; 0x1040
   10774:	movt	r1, #2
   10778:	ldr	r0, [r1]
   1077c:	movw	r2, #2472	; 0x9a8
   10780:	mov	r1, #1
   10784:	movt	r2, #1
   10788:	bl	10694 <__fprintf_chk@plt>
   1078c:	mov	r0, #1
   10790:	b	1073c <nl_cli_connect@plt+0x84>
   10794:	movw	r2, #4160	; 0x1040
   10798:	movt	r2, #2
   1079c:	ldr	r6, [r4, #8]
   107a0:	ldr	r5, [r2]
   107a4:	ldr	r4, [r4, #4]
   107a8:	bl	106a0 <nl_geterror@plt>
   107ac:	mov	r3, r6
   107b0:	movw	r2, #2492	; 0x9bc
   107b4:	mov	r1, #1
   107b8:	movt	r2, #1
   107bc:	str	r4, [sp]
   107c0:	str	r0, [sp, #4]
   107c4:	mov	r0, r5
   107c8:	bl	10694 <__fprintf_chk@plt>
   107cc:	mov	r0, #1
   107d0:	b	1073c <nl_cli_connect@plt+0x84>
   107d4:	mov	fp, #0
   107d8:	mov	lr, #0
   107dc:	pop	{r1}		; (ldr r1, [sp], #4)
   107e0:	mov	r2, sp
   107e4:	push	{r2}		; (str r2, [sp, #-4]!)
   107e8:	push	{r0}		; (str r0, [sp, #-4]!)
   107ec:	ldr	ip, [pc, #16]	; 10804 <nl_cli_connect@plt+0x14c>
   107f0:	push	{ip}		; (str ip, [sp, #-4]!)
   107f4:	ldr	r0, [pc, #12]	; 10808 <nl_cli_connect@plt+0x150>
   107f8:	ldr	r3, [pc, #12]	; 1080c <nl_cli_connect@plt+0x154>
   107fc:	bl	1064c <__libc_start_main@plt>
   10800:	bl	10640 <abort@plt>
   10804:	andeq	r0, r1, ip, ror #18
   10808:	andeq	r0, r1, r4, asr #13
   1080c:	andeq	r0, r1, r8, lsl #18
   10810:	ldr	r3, [pc, #20]	; 1082c <nl_cli_connect@plt+0x174>
   10814:	ldr	r2, [pc, #20]	; 10830 <nl_cli_connect@plt+0x178>
   10818:	add	r3, pc, r3
   1081c:	ldr	r2, [r3, r2]
   10820:	cmp	r2, #0
   10824:	bxeq	lr
   10828:	b	10658 <__gmon_start__@plt>
   1082c:	andeq	r0, r1, r0, ror #15
   10830:	andeq	r0, r0, r8, lsr r0
   10834:	push	{r3, lr}
   10838:	movw	r0, #4160	; 0x1040
   1083c:	ldr	r3, [pc, #36]	; 10868 <nl_cli_connect@plt+0x1b0>
   10840:	movt	r0, #2
   10844:	rsb	r3, r0, r3
   10848:	cmp	r3, #6
   1084c:	popls	{r3, pc}
   10850:	movw	r3, #0
   10854:	movt	r3, #0
   10858:	cmp	r3, #0
   1085c:	popeq	{r3, pc}
   10860:	blx	r3
   10864:	pop	{r3, pc}
   10868:	andeq	r1, r2, r3, asr #32
   1086c:	push	{r3, lr}
   10870:	movw	r0, #4160	; 0x1040
   10874:	movw	r3, #4160	; 0x1040
   10878:	movt	r0, #2
   1087c:	movt	r3, #2
   10880:	rsb	r3, r0, r3
   10884:	asr	r3, r3, #2
   10888:	add	r3, r3, r3, lsr #31
   1088c:	asrs	r1, r3, #1
   10890:	popeq	{r3, pc}
   10894:	movw	r2, #0
   10898:	movt	r2, #0
   1089c:	cmp	r2, #0
   108a0:	popeq	{r3, pc}
   108a4:	blx	r2
   108a8:	pop	{r3, pc}
   108ac:	push	{r4, lr}
   108b0:	movw	r4, #4164	; 0x1044
   108b4:	movt	r4, #2
   108b8:	ldrb	r3, [r4]
   108bc:	cmp	r3, #0
   108c0:	popne	{r4, pc}
   108c4:	bl	10834 <nl_cli_connect@plt+0x17c>
   108c8:	mov	r3, #1
   108cc:	strb	r3, [r4]
   108d0:	pop	{r4, pc}
   108d4:	movw	r0, #3780	; 0xec4
   108d8:	movt	r0, #2
   108dc:	push	{r3, lr}
   108e0:	ldr	r3, [r0]
   108e4:	cmp	r3, #0
   108e8:	beq	10900 <nl_cli_connect@plt+0x248>
   108ec:	movw	r3, #0
   108f0:	movt	r3, #0
   108f4:	cmp	r3, #0
   108f8:	beq	10900 <nl_cli_connect@plt+0x248>
   108fc:	blx	r3
   10900:	pop	{r3, lr}
   10904:	b	1086c <nl_cli_connect@plt+0x1b4>
   10908:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1090c:	mov	r7, r0
   10910:	ldr	r6, [pc, #76]	; 10964 <nl_cli_connect@plt+0x2ac>
   10914:	mov	r8, r1
   10918:	ldr	r5, [pc, #72]	; 10968 <nl_cli_connect@plt+0x2b0>
   1091c:	mov	r9, r2
   10920:	add	r6, pc, r6
   10924:	bl	10620 <abort@plt-0x20>
   10928:	add	r5, pc, r5
   1092c:	rsb	r6, r5, r6
   10930:	asrs	r6, r6, #2
   10934:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10938:	sub	r5, r5, #4
   1093c:	mov	r4, #0
   10940:	add	r4, r4, #1
   10944:	ldr	r3, [r5, #4]!
   10948:	mov	r0, r7
   1094c:	mov	r1, r8
   10950:	mov	r2, r9
   10954:	blx	r3
   10958:	cmp	r4, r6
   1095c:	bne	10940 <nl_cli_connect@plt+0x288>
   10960:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10964:	muleq	r1, r8, r5
   10968:	andeq	r0, r1, ip, lsl #11
   1096c:	bx	lr

Disassembly of section .fini:

00010970 <.fini>:
   10970:	push	{r3, lr}
   10974:	pop	{r3, pc}
