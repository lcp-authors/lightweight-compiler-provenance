
centos-preinstalled/syndaemon:     file format elf32-littlearm


Disassembly of section .init:

00010e78 <_init@@Base>:
   10e78:	push	{r3, lr}
   10e7c:	bl	11750 <__fdelt_chk@plt+0x654>
   10e80:	pop	{r3, pc}

Disassembly of section .plt:

00010e84 <XQueryExtension@plt-0x14>:
   10e84:	push	{lr}		; (str lr, [sp, #-4]!)
   10e88:	ldr	lr, [pc, #4]	; 10e94 <_init@@Base+0x1c>
   10e8c:	add	lr, pc, lr
   10e90:	ldr	pc, [lr, #8]!
   10e94:	andeq	r2, r1, ip, ror #2

00010e98 <XQueryExtension@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #364]!	; 0x16c

00010ea4 <sigemptyset@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #356]!	; 0x164

00010eb0 <XFree@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #348]!	; 0x15c

00010ebc <abort@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #340]!	; 0x154

00010ec8 <XFreeDeviceList@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #332]!	; 0x14c

00010ed4 <XListInputDevices@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #324]!	; 0x144

00010ee0 <__libc_start_main@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #316]!	; 0x13c

00010eec <XRecordProcessReplies@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #308]!	; 0x134

00010ef8 <__gmon_start__@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #300]!	; 0x12c

00010f04 <fclose@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #292]!	; 0x124

00010f10 <__printf_chk@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #284]!	; 0x11c

00010f1c <strtod@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #276]!	; 0x114

00010f28 <XFreeModifiermap@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #268]!	; 0x10c

00010f34 <fopen@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #260]!	; 0x104

00010f40 <setsid@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #252]!	; 0xfc

00010f4c <perror@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #73728	; 0x12000
   10f54:	ldr	pc, [ip, #244]!	; 0xf4

00010f58 <XQueryKeymap@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #73728	; 0x12000
   10f60:	ldr	pc, [ip, #236]!	; 0xec

00010f64 <XOpenDisplay@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #73728	; 0x12000
   10f6c:	ldr	pc, [ip, #228]!	; 0xe4

00010f70 <XRecordEnableContextAsync@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #73728	; 0x12000
   10f78:	ldr	pc, [ip, #220]!	; 0xdc

00010f7c <usleep@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #73728	; 0x12000
   10f84:	ldr	pc, [ip, #212]!	; 0xd4

00010f88 <gettimeofday@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #73728	; 0x12000
   10f90:	ldr	pc, [ip, #204]!	; 0xcc

00010f94 <XRecordCreateContext@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #73728	; 0x12000
   10f9c:	ldr	pc, [ip, #196]!	; 0xc4

00010fa0 <umask@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #73728	; 0x12000
   10fa8:	ldr	pc, [ip, #188]!	; 0xbc

00010fac <XRecordAllocRange@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #73728	; 0x12000
   10fb4:	ldr	pc, [ip, #180]!	; 0xb4

00010fb8 <unlink@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #73728	; 0x12000
   10fc0:	ldr	pc, [ip, #172]!	; 0xac

00010fc4 <getopt@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #73728	; 0x12000
   10fcc:	ldr	pc, [ip, #164]!	; 0xa4

00010fd0 <memcpy@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #73728	; 0x12000
   10fd8:	ldr	pc, [ip, #156]!	; 0x9c

00010fdc <XNextEvent@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #73728	; 0x12000
   10fe4:	ldr	pc, [ip, #148]!	; 0x94

00010fe8 <strtol@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #73728	; 0x12000
   10ff0:	ldr	pc, [ip, #140]!	; 0x8c

00010ff4 <XOpenDevice@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #73728	; 0x12000
   10ffc:	ldr	pc, [ip, #132]!	; 0x84

00011000 <XChangeDeviceProperty@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #73728	; 0x12000
   11008:	ldr	pc, [ip, #124]!	; 0x7c

0001100c <select@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #73728	; 0x12000
   11014:	ldr	pc, [ip, #116]!	; 0x74

00011018 <fwrite@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #73728	; 0x12000
   11020:	ldr	pc, [ip, #108]!	; 0x6c

00011024 <XRecordFreeData@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #73728	; 0x12000
   1102c:	ldr	pc, [ip, #100]!	; 0x64

00011030 <XFlush@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #73728	; 0x12000
   11038:	ldr	pc, [ip, #92]!	; 0x5c

0001103c <__stack_chk_fail@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #73728	; 0x12000
   11044:	ldr	pc, [ip, #84]!	; 0x54

00011048 <sigaction@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #73728	; 0x12000
   11050:	ldr	pc, [ip, #76]!	; 0x4c

00011054 <chdir@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #73728	; 0x12000
   1105c:	ldr	pc, [ip, #68]!	; 0x44

00011060 <__fprintf_chk@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #73728	; 0x12000
   11068:	ldr	pc, [ip, #60]!	; 0x3c

0001106c <XCloseDevice@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #73728	; 0x12000
   11074:	ldr	pc, [ip, #52]!	; 0x34

00011078 <XListDeviceProperties@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #73728	; 0x12000
   11080:	ldr	pc, [ip, #44]!	; 0x2c

00011084 <puts@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #73728	; 0x12000
   1108c:	ldr	pc, [ip, #36]!	; 0x24

00011090 <XGetModifierMapping@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #73728	; 0x12000
   11098:	ldr	pc, [ip, #28]!

0001109c <XInternAtom@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #73728	; 0x12000
   110a4:	ldr	pc, [ip, #20]!

000110a8 <getpid@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #73728	; 0x12000
   110b0:	ldr	pc, [ip, #12]!

000110b4 <fork@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #73728	; 0x12000
   110bc:	ldr	pc, [ip, #4]!

000110c0 <kill@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #4092]!	; 0xffc

000110cc <XRecordQueryVersion@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #4084]!	; 0xff4

000110d8 <XGetDeviceProperty@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #4076]!	; 0xfec

000110e4 <XEventsQueued@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #4068]!	; 0xfe4

000110f0 <exit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #4060]!	; 0xfdc

000110fc <__fdelt_chk@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #4052]!	; 0xfd4

Disassembly of section .text:

00011108 <.text>:
   11108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1110c:	vpush	{d8-d13}
   11110:	vmov.f64	d10, #0	; 0x40000000  2.0
   11114:	movw	r3, #12520	; 0x30e8
   11118:	movt	r3, #2
   1111c:	sub	sp, sp, #20
   11120:	mov	r4, #3392	; 0xd40
   11124:	ldr	r3, [r3]
   11128:	movw	r7, #12536	; 0x30f8
   1112c:	movw	r8, #12528	; 0x30f0
   11130:	movw	sl, #12516	; 0x30e4
   11134:	movt	r4, #3
   11138:	movt	r7, #2
   1113c:	movt	r8, #2
   11140:	movt	sl, #2
   11144:	mov	r6, r0
   11148:	mov	r5, r1
   1114c:	mov	fp, #0
   11150:	mov	r9, #1
   11154:	str	r3, [sp, #12]
   11158:	movw	r2, #9508	; 0x2524
   1115c:	mov	r0, r6
   11160:	movt	r2, #1
   11164:	mov	r1, r5
   11168:	bl	10fc4 <getopt@plt>
   1116c:	cmn	r0, #1
   11170:	beq	112a4 <__fdelt_chk@plt+0x1a8>
   11174:	sub	r0, r0, #75	; 0x4b
   11178:	cmp	r0, #43	; 0x2b
   1117c:	ldrls	pc, [pc, r0, lsl #2]
   11180:	b	112a0 <__fdelt_chk@plt+0x1a4>
   11184:	andeq	r1, r1, r4, lsr r2
   11188:	andeq	r1, r1, r0, lsr #5
   1118c:	andeq	r1, r1, r0, lsr #5
   11190:	andeq	r1, r1, r0, lsr #5
   11194:	andeq	r1, r1, r0, lsr #5
   11198:	andeq	r1, r1, r0, lsr #5
   1119c:	andeq	r1, r1, r0, lsr #5
   111a0:	andeq	r1, r1, ip, asr r2
   111a4:	andeq	r1, r1, r0, lsr #5
   111a8:	andeq	r1, r1, r0, lsr #5
   111ac:	andeq	r1, r1, r0, lsr #5
   111b0:	andeq	r1, r1, r0, lsr #5
   111b4:	andeq	r1, r1, r0, lsr #5
   111b8:	andeq	r1, r1, r0, lsr #5
   111bc:	andeq	r1, r1, r0, lsr #5
   111c0:	andeq	r1, r1, r0, lsr #5
   111c4:	andeq	r1, r1, r0, lsr #5
   111c8:	andeq	r1, r1, r0, lsr #5
   111cc:	andeq	r1, r1, r0, lsr #5
   111d0:	andeq	r1, r1, r0, lsr #5
   111d4:	andeq	r1, r1, r0, lsr #5
   111d8:	andeq	r1, r1, r0, lsr #5
   111dc:	andeq	r1, r1, r0, lsr #5
   111e0:	andeq	r1, r1, r0, lsr #5
   111e4:	andeq	r1, r1, r0, lsr #5
   111e8:	andeq	r1, r1, r4, asr r2
   111ec:	andeq	r1, r1, r0, lsr #5
   111f0:	andeq	r1, r1, r0, lsr #5
   111f4:	andeq	r1, r1, r0, lsr #5
   111f8:	andeq	r1, r1, r0, lsr #5
   111fc:	andeq	r1, r1, r0, asr #4
   11200:	andeq	r1, r1, r0, lsr #5
   11204:	andeq	r1, r1, r8, lsr r2
   11208:	andeq	r1, r1, r0, lsr #5
   1120c:	andeq	r1, r1, r4, lsl #5
   11210:	andeq	r1, r1, r0, lsr #5
   11214:	andeq	r1, r1, r0, lsr #5
   11218:	andeq	r1, r1, r8, ror r2
   1121c:	andeq	r1, r1, r0, lsr #5
   11220:	andeq	r1, r1, r0, lsr #5
   11224:	andeq	r1, r1, r0, lsr #5
   11228:	andeq	r1, r1, ip, ror #4
   1122c:	andeq	r1, r1, r0, lsr #5
   11230:	andeq	r1, r1, r4, ror #4
   11234:	str	r9, [r7, #92]	; 0x5c
   11238:	str	r9, [r7, #96]	; 0x60
   1123c:	b	11158 <__fdelt_chk@plt+0x5c>
   11240:	ldr	r0, [r8]
   11244:	mov	r1, #0
   11248:	bl	10f1c <strtod@plt>
   1124c:	vmov.f64	d10, d0
   11250:	b	11158 <__fdelt_chk@plt+0x5c>
   11254:	str	r9, [r7, #100]	; 0x64
   11258:	b	11158 <__fdelt_chk@plt+0x5c>
   1125c:	mov	fp, #1
   11260:	b	11158 <__fdelt_chk@plt+0x5c>
   11264:	str	r9, [r7, #20]
   11268:	b	11158 <__fdelt_chk@plt+0x5c>
   1126c:	mov	r3, #2
   11270:	str	r3, [sl]
   11274:	b	11158 <__fdelt_chk@plt+0x5c>
   11278:	ldr	r3, [r8]
   1127c:	str	r3, [r7, #24]
   11280:	b	11158 <__fdelt_chk@plt+0x5c>
   11284:	ldr	r0, [r8]
   11288:	mov	r1, #0
   1128c:	mov	r2, #10
   11290:	mov	r4, #1000	; 0x3e8
   11294:	bl	10fe8 <strtol@plt>
   11298:	mul	r4, r4, r0
   1129c:	b	11158 <__fdelt_chk@plt+0x5c>
   112a0:	bl	11b24 <__fdelt_chk@plt+0xa28>
   112a4:	vcmpe.f64	d10, #0.0
   112a8:	vmrs	APSR_nzcv, fpscr
   112ac:	bls	112a0 <__fdelt_chk@plt+0x1a4>
   112b0:	mov	r0, #0
   112b4:	movw	r5, #12536	; 0x30f8
   112b8:	bl	10f64 <XOpenDisplay@plt>
   112bc:	movt	r5, #2
   112c0:	cmp	r0, #0
   112c4:	mov	r6, r0
   112c8:	str	r0, [r5]
   112cc:	beq	1148c <__fdelt_chk@plt+0x390>
   112d0:	mov	r2, #1
   112d4:	movw	r1, #9548	; 0x254c
   112d8:	movt	r1, #1
   112dc:	mov	r3, #0
   112e0:	str	r3, [sp]
   112e4:	str	r3, [sp, #4]
   112e8:	bl	1109c <XInternAtom@plt>
   112ec:	mov	r2, #1
   112f0:	movw	r1, #9560	; 0x2558
   112f4:	movt	r1, #1
   112f8:	mov	r8, r0
   112fc:	mov	r0, r6
   11300:	bl	1109c <XInternAtom@plt>
   11304:	mov	r1, sp
   11308:	str	r0, [r5, #8]
   1130c:	mov	r0, r6
   11310:	bl	10ed4 <XListInputDevices@plt>
   11314:	ldr	r2, [sp]
   11318:	mov	r1, #24
   1131c:	sub	r3, r2, #1
   11320:	mov	r7, r0
   11324:	mla	r2, r1, r2, r0
   11328:	b	11340 <__fdelt_chk@plt+0x244>
   1132c:	ldr	r1, [r2, #-20]	; 0xffffffec
   11330:	sub	r3, r3, #1
   11334:	sub	r2, r2, #24
   11338:	cmp	r8, r1
   1133c:	beq	11390 <__fdelt_chk@plt+0x294>
   11340:	cmn	r3, #1
   11344:	mov	ip, r3
   11348:	bne	1132c <__fdelt_chk@plt+0x230>
   1134c:	movw	r4, #12524	; 0x30ec
   11350:	movt	r4, #2
   11354:	str	r3, [sp]
   11358:	mov	r0, #0
   1135c:	bl	10eb0 <XFree@plt>
   11360:	mov	r0, r7
   11364:	bl	10ec8 <XFreeDeviceList@plt>
   11368:	movw	r0, #9784	; 0x2638
   1136c:	ldr	r3, [r4]
   11370:	mov	r1, #1
   11374:	movt	r0, #1
   11378:	mov	r2, #35	; 0x23
   1137c:	bl	11018 <fwrite@plt>
   11380:	mov	r0, #2
   11384:	mov	r3, #0
   11388:	str	r3, [r5, #4]
   1138c:	bl	110f0 <exit@plt>
   11390:	ldr	r1, [r2]
   11394:	mov	r0, r6
   11398:	str	ip, [sp]
   1139c:	bl	10ff4 <XOpenDevice@plt>
   113a0:	subs	r8, r0, #0
   113a4:	beq	114b4 <__fdelt_chk@plt+0x3b8>
   113a8:	mov	r0, r6
   113ac:	mov	r1, r8
   113b0:	add	r2, sp, #4
   113b4:	bl	11078 <XListDeviceProperties@plt>
   113b8:	subs	r9, r0, #0
   113bc:	beq	11440 <__fdelt_chk@plt+0x344>
   113c0:	ldr	r3, [sp, #4]
   113c4:	cmp	r3, #0
   113c8:	beq	11440 <__fdelt_chk@plt+0x344>
   113cc:	sub	r3, r3, #1
   113d0:	ldr	r2, [r5, #8]
   113d4:	str	r3, [sp, #4]
   113d8:	b	113e4 <__fdelt_chk@plt+0x2e8>
   113dc:	subs	r3, r3, #1
   113e0:	bcc	114e4 <__fdelt_chk@plt+0x3e8>
   113e4:	ldr	r1, [r9, r3, lsl #2]
   113e8:	cmp	r1, r2
   113ec:	bne	113dc <__fdelt_chk@plt+0x2e0>
   113f0:	cmp	r3, #0
   113f4:	str	r3, [sp, #4]
   113f8:	blt	114e8 <__fdelt_chk@plt+0x3ec>
   113fc:	mov	r0, r9
   11400:	movw	r6, #12536	; 0x30f8
   11404:	bl	10eb0 <XFree@plt>
   11408:	mov	r0, r7
   1140c:	bl	10ec8 <XFreeDeviceList@plt>
   11410:	str	r8, [r5, #4]
   11414:	bl	11c70 <__fdelt_chk@plt+0xb74>
   11418:	ldr	r3, [r5, #100]	; 0x64
   1141c:	movt	r6, #2
   11420:	cmp	r3, #0
   11424:	beq	11574 <__fdelt_chk@plt+0x478>
   11428:	bl	110b4 <fork@plt>
   1142c:	subs	r7, r0, #0
   11430:	blt	116d4 <__fdelt_chk@plt+0x5d8>
   11434:	beq	11518 <__fdelt_chk@plt+0x41c>
   11438:	mov	r0, #0
   1143c:	bl	110f0 <exit@plt>
   11440:	ldr	r0, [sp]
   11444:	mov	ip, #24
   11448:	movw	r3, #12524	; 0x30ec
   1144c:	movt	r3, #2
   11450:	movw	r2, #9608	; 0x2588
   11454:	mov	r1, #1
   11458:	mla	ip, ip, r0, r7
   1145c:	movt	r2, #1
   11460:	ldr	r0, [r3]
   11464:	ldr	r3, [ip, #8]
   11468:	bl	11060 <__fprintf_chk@plt>
   1146c:	mov	r0, r9
   11470:	bl	10eb0 <XFree@plt>
   11474:	mov	r0, r7
   11478:	bl	10ec8 <XFreeDeviceList@plt>
   1147c:	mov	r0, r6
   11480:	mov	r1, r8
   11484:	bl	1106c <XCloseDevice@plt>
   11488:	b	11380 <__fdelt_chk@plt+0x284>
   1148c:	movw	r3, #12524	; 0x30ec
   11490:	movt	r3, #2
   11494:	movw	r0, #9524	; 0x2534
   11498:	mov	r1, #1
   1149c:	ldr	r3, [r3]
   114a0:	movt	r0, #1
   114a4:	mov	r2, #20
   114a8:	bl	11018 <fwrite@plt>
   114ac:	mov	r0, #2
   114b0:	bl	110f0 <exit@plt>
   114b4:	ldr	r3, [sp]
   114b8:	mov	r0, #24
   114bc:	movw	r4, #12524	; 0x30ec
   114c0:	movt	r4, #2
   114c4:	movw	r2, #9576	; 0x2568
   114c8:	mov	r1, #1
   114cc:	mla	r3, r0, r3, r7
   114d0:	movt	r2, #1
   114d4:	ldr	r0, [r4]
   114d8:	ldr	r3, [r3, #8]
   114dc:	bl	11060 <__fprintf_chk@plt>
   114e0:	b	11358 <__fdelt_chk@plt+0x25c>
   114e4:	str	r3, [sp, #4]
   114e8:	ldr	r0, [sp]
   114ec:	mov	ip, #24
   114f0:	movw	r3, #12524	; 0x30ec
   114f4:	movt	r3, #2
   114f8:	movw	r2, #9640	; 0x25a8
   114fc:	mov	r1, #1
   11500:	mla	ip, ip, r0, r7
   11504:	movt	r2, #1
   11508:	ldr	r0, [r3]
   1150c:	ldr	r3, [ip, #8]
   11510:	bl	11060 <__fprintf_chk@plt>
   11514:	b	1146c <__fdelt_chk@plt+0x370>
   11518:	bl	10f40 <setsid@plt>
   1151c:	movw	r0, #9692	; 0x25dc
   11520:	movt	r0, #1
   11524:	bl	11054 <chdir@plt>
   11528:	mov	r0, r7
   1152c:	bl	10fa0 <umask@plt>
   11530:	ldr	r0, [r6, #24]
   11534:	cmp	r0, #0
   11538:	beq	11574 <__fdelt_chk@plt+0x478>
   1153c:	movw	r1, #9696	; 0x25e0
   11540:	movt	r1, #1
   11544:	bl	10f34 <fopen@plt>
   11548:	subs	r6, r0, #0
   1154c:	beq	116e8 <__fdelt_chk@plt+0x5ec>
   11550:	bl	110a8 <getpid@plt>
   11554:	movw	r2, #9724	; 0x25fc
   11558:	mov	r1, #1
   1155c:	movt	r2, #1
   11560:	mov	r3, r0
   11564:	mov	r0, r6
   11568:	bl	11060 <__fprintf_chk@plt>
   1156c:	mov	r0, r6
   11570:	bl	10f04 <fclose@plt>
   11574:	mov	r3, #0
   11578:	movw	r6, #12536	; 0x30f8
   1157c:	str	r3, [r5, #16]
   11580:	movt	r6, #2
   11584:	bl	1196c <__fdelt_chk@plt+0x870>
   11588:	cmp	fp, #0
   1158c:	ldr	r0, [r6]
   11590:	beq	115d4 <__fdelt_chk@plt+0x4d8>
   11594:	bl	11e3c <__fdelt_chk@plt+0xd40>
   11598:	cmp	r0, #0
   1159c:	beq	115ac <__fdelt_chk@plt+0x4b0>
   115a0:	ldr	r0, [r6]
   115a4:	vmov.f64	d0, d10
   115a8:	bl	11ee0 <__fdelt_chk@plt+0xde4>
   115ac:	movw	r3, #12524	; 0x30ec
   115b0:	movt	r3, #2
   115b4:	movw	r0, #9728	; 0x2600
   115b8:	mov	r1, #1
   115bc:	ldr	r3, [r3]
   115c0:	movt	r0, #1
   115c4:	mov	r2, #53	; 0x35
   115c8:	bl	11018 <fwrite@plt>
   115cc:	mov	r0, #4
   115d0:	bl	110f0 <exit@plt>
   115d4:	add	r3, r6, #27
   115d8:	ldr	r1, [r6, #96]	; 0x60
   115dc:	add	r6, r6, #59	; 0x3b
   115e0:	mvn	r2, #0
   115e4:	strb	r2, [r3, #1]!
   115e8:	cmp	r3, r6
   115ec:	bne	115e4 <__fdelt_chk@plt+0x4e8>
   115f0:	cmp	r1, #0
   115f4:	bne	11688 <__fdelt_chk@plt+0x58c>
   115f8:	ldr	r5, [r5]
   115fc:	vldr	d8, [pc, #252]	; 11700 <__fdelt_chk@plt+0x604>
   11600:	vmov.f64	d13, #112	; 0x3f800000  1.0
   11604:	vldr	d11, [pc, #252]	; 11708 <__fdelt_chk@plt+0x60c>
   11608:	mov	r0, r5
   1160c:	vmov.f64	d12, d8
   11610:	bl	11d48 <__fdelt_chk@plt+0xc4c>
   11614:	mov	r1, #0
   11618:	add	r0, sp, #4
   1161c:	bl	10f88 <gettimeofday@plt>
   11620:	vldr	s13, [sp, #8]
   11624:	mov	r0, r5
   11628:	vcvt.f64.s32	d9, s13
   1162c:	vldr	s13, [sp, #4]
   11630:	vdiv.f64	d9, d9, d11
   11634:	vcvt.f64.s32	d7, s13
   11638:	vadd.f64	d9, d7, d9
   1163c:	bl	11d48 <__fdelt_chk@plt+0xc4c>
   11640:	cmp	r0, #0
   11644:	vmoveq.f64	d8, d9
   11648:	beq	11664 <__fdelt_chk@plt+0x568>
   1164c:	cmp	r0, #2
   11650:	vmoveq.f64	d8, d12
   11654:	vcmpe.f64	d8, d9
   11658:	vmrs	APSR_nzcv, fpscr
   1165c:	vsubgt.f64	d8, d9, d10
   11660:	vsubgt.f64	d8, d8, d13
   11664:	vadd.f64	d7, d10, d8
   11668:	vcmpe.f64	d7, d9
   1166c:	vmrs	APSR_nzcv, fpscr
   11670:	movmi	r0, #1
   11674:	movpl	r0, #0
   11678:	bl	11a14 <__fdelt_chk@plt+0x918>
   1167c:	mov	r0, r4
   11680:	bl	10f7c <usleep@plt>
   11684:	b	11614 <__fdelt_chk@plt+0x518>
   11688:	bl	11090 <XGetModifierMapping@plt>
   1168c:	mov	r3, #0
   11690:	ldr	r1, [pc, #120]	; 11710 <__fdelt_chk@plt+0x614>
   11694:	mov	lr, #1
   11698:	ldr	ip, [r0]
   1169c:	b	116c4 <__fdelt_chk@plt+0x5c8>
   116a0:	ldr	r2, [r0, #4]
   116a4:	ldrb	r2, [r2, r3]
   116a8:	add	r3, r3, #1
   116ac:	cmp	r2, #0
   116b0:	andne	r6, r2, #7
   116b4:	ldrbne	ip, [r1, r2, asr #3]
   116b8:	bicne	ip, ip, lr, lsl r6
   116bc:	strbne	ip, [r1, r2, asr #3]
   116c0:	ldrne	ip, [r0]
   116c4:	cmp	r3, ip, lsl #3
   116c8:	blt	116a0 <__fdelt_chk@plt+0x5a4>
   116cc:	bl	10f28 <XFreeModifiermap@plt>
   116d0:	b	115f8 <__fdelt_chk@plt+0x4fc>
   116d4:	movw	r0, #9684	; 0x25d4
   116d8:	movt	r0, #1
   116dc:	bl	10f4c <perror@plt>
   116e0:	mov	r0, #3
   116e4:	bl	110f0 <exit@plt>
   116e8:	movw	r0, #9700	; 0x25e4
   116ec:	movt	r0, #1
   116f0:	bl	10f4c <perror@plt>
   116f4:	mov	r0, #3
   116f8:	bl	110f0 <exit@plt>
   116fc:	nop	{0}
	...
   1170c:	smlawbmi	lr, r0, r4, r8
   11710:	andeq	r3, r2, r4, lsl r1
   11714:	mov	fp, #0
   11718:	mov	lr, #0
   1171c:	pop	{r1}		; (ldr r1, [sp], #4)
   11720:	mov	r2, sp
   11724:	push	{r2}		; (str r2, [sp, #-4]!)
   11728:	push	{r0}		; (str r0, [sp, #-4]!)
   1172c:	ldr	ip, [pc, #16]	; 11744 <__fdelt_chk@plt+0x648>
   11730:	push	{ip}		; (str ip, [sp, #-4]!)
   11734:	ldr	r0, [pc, #12]	; 11748 <__fdelt_chk@plt+0x64c>
   11738:	ldr	r3, [pc, #12]	; 1174c <__fdelt_chk@plt+0x650>
   1173c:	bl	10ee0 <__libc_start_main@plt>
   11740:	bl	10ebc <abort@plt>
   11744:	ldrdeq	r2, [r1], -ip
   11748:	andeq	r1, r1, r8, lsl #2
   1174c:	andeq	r2, r1, r8, ror r1
   11750:	ldr	r3, [pc, #20]	; 1176c <__fdelt_chk@plt+0x670>
   11754:	ldr	r2, [pc, #20]	; 11770 <__fdelt_chk@plt+0x674>
   11758:	add	r3, pc, r3
   1175c:	ldr	r2, [r3, r2]
   11760:	cmp	r2, #0
   11764:	bxeq	lr
   11768:	b	10ef8 <__gmon_start__@plt>
   1176c:	andeq	r1, r1, r0, lsr #17
   11770:	ldrdeq	r0, [r0], -ip
   11774:	push	{r3, lr}
   11778:	movw	r0, #12520	; 0x30e8
   1177c:	ldr	r3, [pc, #36]	; 117a8 <__fdelt_chk@plt+0x6ac>
   11780:	movt	r0, #2
   11784:	rsb	r3, r0, r3
   11788:	cmp	r3, #6
   1178c:	popls	{r3, pc}
   11790:	movw	r3, #0
   11794:	movt	r3, #0
   11798:	cmp	r3, #0
   1179c:	popeq	{r3, pc}
   117a0:	blx	r3
   117a4:	pop	{r3, pc}
   117a8:	andeq	r3, r2, fp, ror #1
   117ac:	push	{r3, lr}
   117b0:	movw	r0, #12520	; 0x30e8
   117b4:	movw	r3, #12520	; 0x30e8
   117b8:	movt	r0, #2
   117bc:	movt	r3, #2
   117c0:	rsb	r3, r0, r3
   117c4:	asr	r3, r3, #2
   117c8:	add	r3, r3, r3, lsr #31
   117cc:	asrs	r1, r3, #1
   117d0:	popeq	{r3, pc}
   117d4:	movw	r2, #0
   117d8:	movt	r2, #0
   117dc:	cmp	r2, #0
   117e0:	popeq	{r3, pc}
   117e4:	blx	r2
   117e8:	pop	{r3, pc}
   117ec:	push	{r4, lr}
   117f0:	movw	r4, #12532	; 0x30f4
   117f4:	movt	r4, #2
   117f8:	ldrb	r3, [r4]
   117fc:	cmp	r3, #0
   11800:	popne	{r4, pc}
   11804:	bl	11774 <__fdelt_chk@plt+0x678>
   11808:	mov	r3, #1
   1180c:	strb	r3, [r4]
   11810:	pop	{r4, pc}
   11814:	movw	r0, #12004	; 0x2ee4
   11818:	movt	r0, #2
   1181c:	push	{r3, lr}
   11820:	ldr	r3, [r0]
   11824:	cmp	r3, #0
   11828:	beq	11840 <__fdelt_chk@plt+0x744>
   1182c:	movw	r3, #0
   11830:	movt	r3, #0
   11834:	cmp	r3, #0
   11838:	beq	11840 <__fdelt_chk@plt+0x744>
   1183c:	blx	r3
   11840:	pop	{r3, lr}
   11844:	b	117ac <__fdelt_chk@plt+0x6b0>
   11848:	push	{r4, r5, r6, r7, r8}
   1184c:	ldr	r7, [r1, #12]
   11850:	cmp	r7, #0
   11854:	bne	118fc <__fdelt_chk@plt+0x800>
   11858:	ldr	r6, [r1, #24]
   1185c:	ldr	ip, [r1, #20]
   11860:	lsr	r6, r6, #3
   11864:	cmp	r6, #0
   11868:	sub	r6, r6, #1
   1186c:	beq	118fc <__fdelt_chk@plt+0x800>
   11870:	add	ip, ip, #32
   11874:	mov	r8, #1
   11878:	b	1188c <__fdelt_chk@plt+0x790>
   1187c:	sub	r6, r6, #1
   11880:	add	ip, ip, #32
   11884:	cmn	r6, #1
   11888:	beq	118fc <__fdelt_chk@plt+0x800>
   1188c:	ldrb	r3, [ip, #-32]	; 0xffffffe0
   11890:	sub	r3, r3, #2
   11894:	cmp	r3, #1
   11898:	bhi	1187c <__fdelt_chk@plt+0x780>
   1189c:	ldr	r3, [r0]
   118a0:	str	r8, [r0, #4]
   118a4:	ldr	r5, [r3]
   118a8:	lsl	r5, r5, #3
   118ac:	cmp	r5, #0
   118b0:	ble	118e8 <__fdelt_chk@plt+0x7ec>
   118b4:	ldr	r3, [r3, #4]
   118b8:	ldrb	r4, [ip, #-31]	; 0xffffffe1
   118bc:	ldrb	r2, [r3]
   118c0:	cmp	r2, r4
   118c4:	beq	11908 <__fdelt_chk@plt+0x80c>
   118c8:	sub	r2, r3, #1
   118cc:	add	r5, r2, r5
   118d0:	b	118e0 <__fdelt_chk@plt+0x7e4>
   118d4:	ldrb	r2, [r3, #1]!
   118d8:	cmp	r2, r4
   118dc:	beq	11908 <__fdelt_chk@plt+0x80c>
   118e0:	cmp	r3, r5
   118e4:	bne	118d4 <__fdelt_chk@plt+0x7d8>
   118e8:	sub	r6, r6, #1
   118ec:	str	r8, [r0, #8]
   118f0:	cmn	r6, #1
   118f4:	add	ip, ip, #32
   118f8:	bne	1188c <__fdelt_chk@plt+0x790>
   118fc:	mov	r0, r1
   11900:	pop	{r4, r5, r6, r7, r8}
   11904:	b	11024 <XRecordFreeData@plt>
   11908:	ldrb	r3, [ip, #-32]	; 0xffffffe0
   1190c:	mov	r2, #0
   11910:	cmp	r3, #2
   11914:	mov	r3, r0
   11918:	bne	11924 <__fdelt_chk@plt+0x828>
   1191c:	b	11950 <__fdelt_chk@plt+0x854>
   11920:	ldrb	r4, [ip, #-31]	; 0xffffffe1
   11924:	ldrb	r5, [r3, #12]
   11928:	add	r2, r2, #1
   1192c:	add	r3, r3, #1
   11930:	cmp	r5, r4
   11934:	strbeq	r7, [r3, #11]
   11938:	cmp	r2, #16
   1193c:	bne	11920 <__fdelt_chk@plt+0x824>
   11940:	b	1187c <__fdelt_chk@plt+0x780>
   11944:	add	r2, r2, #1
   11948:	cmp	r2, #16
   1194c:	beq	1187c <__fdelt_chk@plt+0x780>
   11950:	ldrb	r5, [r3, #12]
   11954:	add	r3, r3, #1
   11958:	cmp	r5, #0
   1195c:	bne	11944 <__fdelt_chk@plt+0x848>
   11960:	add	r2, r0, r2
   11964:	strb	r4, [r2, #12]
   11968:	b	1187c <__fdelt_chk@plt+0x780>
   1196c:	push	{r4, r5, r6, lr}
   11970:	movw	r5, #12520	; 0x30e8
   11974:	movt	r5, #2
   11978:	sub	sp, sp, #56	; 0x38
   1197c:	movw	r4, #12536	; 0x30f8
   11980:	movt	r4, #2
   11984:	ldr	lr, [r5]
   11988:	mov	ip, #0
   1198c:	mov	r3, ip
   11990:	mov	r6, #1
   11994:	ldr	r0, [r4]
   11998:	stm	sp, {r6, ip}
   1199c:	mov	r6, #19
   119a0:	add	ip, sp, #32
   119a4:	str	r6, [sp, #8]
   119a8:	str	ip, [sp, #12]
   119ac:	add	r6, sp, #36	; 0x24
   119b0:	add	ip, sp, #40	; 0x28
   119b4:	str	r6, [sp, #16]
   119b8:	str	ip, [sp, #20]
   119bc:	add	r6, sp, #44	; 0x2c
   119c0:	add	ip, sp, #48	; 0x30
   119c4:	ldr	r1, [r4, #4]
   119c8:	ldr	r2, [r4, #8]
   119cc:	str	r6, [sp, #24]
   119d0:	str	ip, [sp, #28]
   119d4:	str	lr, [sp, #52]	; 0x34
   119d8:	bl	110d8 <XGetDeviceProperty@plt>
   119dc:	cmp	r0, #0
   119e0:	bne	119f8 <__fdelt_chk@plt+0x8fc>
   119e4:	ldr	r3, [sp, #32]
   119e8:	cmp	r3, #0
   119ec:	ldrne	r3, [sp, #48]	; 0x30
   119f0:	ldrbne	r3, [r3]
   119f4:	strne	r3, [r4, #12]
   119f8:	ldr	r2, [sp, #52]	; 0x34
   119fc:	ldr	r3, [r5]
   11a00:	cmp	r2, r3
   11a04:	bne	11a10 <__fdelt_chk@plt+0x914>
   11a08:	add	sp, sp, #56	; 0x38
   11a0c:	pop	{r4, r5, r6, pc}
   11a10:	bl	1103c <__stack_chk_fail@plt>
   11a14:	push	{r4, r5, r6, lr}
   11a18:	movw	r4, #12536	; 0x30f8
   11a1c:	movt	r4, #2
   11a20:	movw	r5, #12520	; 0x30e8
   11a24:	movt	r5, #2
   11a28:	sub	sp, sp, #24
   11a2c:	ldr	r3, [r4, #16]
   11a30:	ldr	r2, [r5]
   11a34:	cmp	r3, #0
   11a38:	str	r2, [sp, #20]
   11a3c:	beq	11a60 <__fdelt_chk@plt+0x964>
   11a40:	cmp	r0, #0
   11a44:	bne	11af4 <__fdelt_chk@plt+0x9f8>
   11a48:	ldr	r2, [sp, #20]
   11a4c:	ldr	r3, [r5]
   11a50:	cmp	r2, r3
   11a54:	bne	11b20 <__fdelt_chk@plt+0xa24>
   11a58:	add	sp, sp, #24
   11a5c:	pop	{r4, r5, r6, pc}
   11a60:	cmp	r0, #0
   11a64:	bne	11a48 <__fdelt_chk@plt+0x94c>
   11a68:	movw	r6, #12516	; 0x30e4
   11a6c:	movt	r6, #2
   11a70:	ldr	r3, [r4, #12]
   11a74:	ldr	r2, [r6]
   11a78:	cmp	r3, r2
   11a7c:	beq	11a48 <__fdelt_chk@plt+0x94c>
   11a80:	cmp	r3, #1
   11a84:	beq	11a48 <__fdelt_chk@plt+0x94c>
   11a88:	bl	1196c <__fdelt_chk@plt+0x870>
   11a8c:	ldr	r1, [r4, #20]
   11a90:	ldr	r3, [r6]
   11a94:	mov	r2, #1
   11a98:	cmp	r1, #0
   11a9c:	str	r2, [r4, #16]
   11aa0:	strb	r3, [sp, #19]
   11aa4:	beq	11ab4 <__fdelt_chk@plt+0x9b8>
   11aa8:	movw	r0, #8756	; 0x2234
   11aac:	movt	r0, #1
   11ab0:	bl	11084 <puts@plt>
   11ab4:	ldr	r0, [r4]
   11ab8:	mov	lr, #8
   11abc:	add	r3, sp, #19
   11ac0:	ldr	r1, [r4, #4]
   11ac4:	str	r3, [sp, #8]
   11ac8:	mov	ip, #0
   11acc:	ldr	r2, [r4, #8]
   11ad0:	mov	r3, #19
   11ad4:	str	ip, [sp, #4]
   11ad8:	mov	ip, #1
   11adc:	str	lr, [sp]
   11ae0:	str	ip, [sp, #12]
   11ae4:	bl	11000 <XChangeDeviceProperty@plt>
   11ae8:	ldr	r0, [r4]
   11aec:	bl	11030 <XFlush@plt>
   11af0:	b	11a48 <__fdelt_chk@plt+0x94c>
   11af4:	ldr	r1, [r4, #20]
   11af8:	mov	r2, #0
   11afc:	ldr	r3, [r4, #12]
   11b00:	cmp	r1, r2
   11b04:	str	r2, [r4, #16]
   11b08:	strb	r3, [sp, #19]
   11b0c:	beq	11ab4 <__fdelt_chk@plt+0x9b8>
   11b10:	movw	r0, #8748	; 0x222c
   11b14:	movt	r0, #1
   11b18:	bl	11084 <puts@plt>
   11b1c:	b	11ab4 <__fdelt_chk@plt+0x9b8>
   11b20:	bl	1103c <__stack_chk_fail@plt>
   11b24:	push	{r4, lr}
   11b28:	movw	r4, #12524	; 0x30ec
   11b2c:	movt	r4, #2
   11b30:	mov	r1, #1
   11b34:	mov	r2, #63	; 0x3f
   11b38:	movw	r0, #8764	; 0x223c
   11b3c:	ldr	r3, [r4]
   11b40:	movt	r0, #1
   11b44:	bl	11018 <fwrite@plt>
   11b48:	ldr	r3, [r4]
   11b4c:	mov	r1, #1
   11b50:	mov	r2, #62	; 0x3e
   11b54:	movw	r0, #8828	; 0x227c
   11b58:	movt	r0, #1
   11b5c:	bl	11018 <fwrite@plt>
   11b60:	ldr	r3, [r4]
   11b64:	mov	r1, #1
   11b68:	mov	r2, #46	; 0x2e
   11b6c:	movw	r0, #8892	; 0x22bc
   11b70:	movt	r0, #1
   11b74:	bl	11018 <fwrite@plt>
   11b78:	ldr	r3, [r4]
   11b7c:	mov	r1, #1
   11b80:	mov	r2, #53	; 0x35
   11b84:	movw	r0, #8940	; 0x22ec
   11b88:	movt	r0, #1
   11b8c:	bl	11018 <fwrite@plt>
   11b90:	ldr	r3, [r4]
   11b94:	mov	r1, #1
   11b98:	mov	r2, #24
   11b9c:	movw	r0, #8996	; 0x2324
   11ba0:	movt	r0, #1
   11ba4:	bl	11018 <fwrite@plt>
   11ba8:	ldr	r3, [r4]
   11bac:	mov	r1, #1
   11bb0:	mov	r2, #48	; 0x30
   11bb4:	movw	r0, #9024	; 0x2340
   11bb8:	movt	r0, #1
   11bbc:	bl	11018 <fwrite@plt>
   11bc0:	ldr	r3, [r4]
   11bc4:	mov	r1, #1
   11bc8:	mov	r2, #48	; 0x30
   11bcc:	movw	r0, #9076	; 0x2374
   11bd0:	movt	r0, #1
   11bd4:	bl	11018 <fwrite@plt>
   11bd8:	ldr	r3, [r4]
   11bdc:	mov	r1, #1
   11be0:	mov	r2, #62	; 0x3e
   11be4:	movw	r0, #9128	; 0x23a8
   11be8:	movt	r0, #1
   11bec:	bl	11018 <fwrite@plt>
   11bf0:	ldr	r3, [r4]
   11bf4:	mov	r1, #1
   11bf8:	mov	r2, #61	; 0x3d
   11bfc:	movw	r0, #9192	; 0x23e8
   11c00:	movt	r0, #1
   11c04:	bl	11018 <fwrite@plt>
   11c08:	ldr	r3, [r4]
   11c0c:	mov	r1, #1
   11c10:	mov	r2, #50	; 0x32
   11c14:	movw	r0, #9256	; 0x2428
   11c18:	movt	r0, #1
   11c1c:	bl	11018 <fwrite@plt>
   11c20:	ldr	r3, [r4]
   11c24:	mov	r1, #1
   11c28:	mov	r2, #32
   11c2c:	movw	r0, #9308	; 0x245c
   11c30:	movt	r0, #1
   11c34:	bl	11018 <fwrite@plt>
   11c38:	ldr	r3, [r4]
   11c3c:	mov	r1, #1
   11c40:	mov	r2, #32
   11c44:	movw	r0, #9344	; 0x2480
   11c48:	movt	r0, #1
   11c4c:	bl	11018 <fwrite@plt>
   11c50:	ldr	r3, [r4]
   11c54:	movw	r0, #9380	; 0x24a4
   11c58:	mov	r1, #1
   11c5c:	movt	r0, #1
   11c60:	mov	r2, #29
   11c64:	bl	11018 <fwrite@plt>
   11c68:	mov	r0, #1
   11c6c:	bl	110f0 <exit@plt>
   11c70:	push	{r4, r5, r6, lr}
   11c74:	movw	r6, #12520	; 0x30e8
   11c78:	movt	r6, #2
   11c7c:	sub	sp, sp, #272	; 0x110
   11c80:	ldr	r4, [pc, #132]	; 11d0c <__fdelt_chk@plt+0xc10>
   11c84:	ldr	r3, [r6]
   11c88:	mov	r0, sp
   11c8c:	add	r5, r4, #60	; 0x3c
   11c90:	str	r3, [sp, #268]	; 0x10c
   11c94:	bl	10ea4 <sigemptyset@plt>
   11c98:	mov	r1, sp
   11c9c:	add	r0, sp, #132	; 0x84
   11ca0:	mov	r2, #128	; 0x80
   11ca4:	movw	r3, #7440	; 0x1d10
   11ca8:	movt	r3, #1
   11cac:	str	r3, [sp, #128]	; 0x80
   11cb0:	bl	10fd0 <memcpy@plt>
   11cb4:	mov	r3, #-2147483648	; 0x80000000
   11cb8:	str	r3, [sp, #260]	; 0x104
   11cbc:	ldr	r0, [r4, #4]!
   11cc0:	add	r1, sp, #128	; 0x80
   11cc4:	mov	r2, #0
   11cc8:	bl	11048 <sigaction@plt>
   11ccc:	cmn	r0, #1
   11cd0:	beq	11cf4 <__fdelt_chk@plt+0xbf8>
   11cd4:	cmp	r4, r5
   11cd8:	bne	11cbc <__fdelt_chk@plt+0xbc0>
   11cdc:	ldr	r2, [sp, #268]	; 0x10c
   11ce0:	ldr	r3, [r6]
   11ce4:	cmp	r2, r3
   11ce8:	bne	11d08 <__fdelt_chk@plt+0xc0c>
   11cec:	add	sp, sp, #272	; 0x110
   11cf0:	pop	{r4, r5, r6, pc}
   11cf4:	movw	r0, #9412	; 0x24c4
   11cf8:	movt	r0, #1
   11cfc:	bl	10f4c <perror@plt>
   11d00:	mov	r0, #2
   11d04:	bl	110f0 <exit@plt>
   11d08:	bl	1103c <__stack_chk_fail@plt>
   11d0c:	andeq	r2, r1, ip, ror #3
   11d10:	push	{r4, lr}
   11d14:	mov	r4, r0
   11d18:	mov	r0, #1
   11d1c:	bl	11a14 <__fdelt_chk@plt+0x918>
   11d20:	movw	r3, #12536	; 0x30f8
   11d24:	movt	r3, #2
   11d28:	ldr	r0, [r3, #24]
   11d2c:	cmp	r0, #0
   11d30:	beq	11d38 <__fdelt_chk@plt+0xc3c>
   11d34:	bl	10fb8 <unlink@plt>
   11d38:	bl	110a8 <getpid@plt>
   11d3c:	mov	r1, r4
   11d40:	pop	{r4, lr}
   11d44:	b	110c0 <kill@plt>
   11d48:	push	{r4, r5, r6, r7, lr}
   11d4c:	movw	r5, #12520	; 0x30e8
   11d50:	movt	r5, #2
   11d54:	sub	sp, sp, #44	; 0x2c
   11d58:	add	r4, sp, #4
   11d5c:	ldr	r6, [pc, #212]	; 11e38 <__fdelt_chk@plt+0xd3c>
   11d60:	ldr	r3, [r5]
   11d64:	mov	r1, r4
   11d68:	str	r3, [sp, #36]	; 0x24
   11d6c:	bl	10f58 <XQueryKeymap@plt>
   11d70:	mov	r3, #0
   11d74:	add	r1, r6, #32
   11d78:	b	11d88 <__fdelt_chk@plt+0xc8c>
   11d7c:	add	r3, r3, #1
   11d80:	cmp	r3, #32
   11d84:	beq	11e2c <__fdelt_chk@plt+0xd30>
   11d88:	ldrb	ip, [r6, r3]
   11d8c:	ldrb	r2, [r4, r3]
   11d90:	ldrb	r0, [r1, r3]
   11d94:	and	r2, ip, r2
   11d98:	bics	r0, r2, r0
   11d9c:	beq	11d7c <__fdelt_chk@plt+0xc80>
   11da0:	mov	r0, #0
   11da4:	movw	r3, #12536	; 0x30f8
   11da8:	movt	r3, #2
   11dac:	ldr	r3, [r3, #92]	; 0x5c
   11db0:	cmp	r3, #0
   11db4:	beq	11dfc <__fdelt_chk@plt+0xd00>
   11db8:	mov	r3, #0
   11dbc:	b	11dcc <__fdelt_chk@plt+0xcd0>
   11dc0:	add	r3, r3, #1
   11dc4:	cmp	r3, #32
   11dc8:	beq	11dfc <__fdelt_chk@plt+0xd00>
   11dcc:	ldrb	ip, [r6, r3]
   11dd0:	movw	r2, #12536	; 0x30f8
   11dd4:	ldrb	r7, [r4, r3]
   11dd8:	movt	r2, #2
   11ddc:	mvn	ip, ip
   11de0:	tst	ip, r7
   11de4:	beq	11dc0 <__fdelt_chk@plt+0xcc4>
   11de8:	add	r3, r2, r3
   11dec:	ldrb	r3, [r3, #60]	; 0x3c
   11df0:	tst	r3, ip
   11df4:	moveq	r0, #2
   11df8:	movne	r0, #1
   11dfc:	mov	r3, #0
   11e00:	ldrb	r2, [r4, r3]
   11e04:	strb	r2, [r1, r3]
   11e08:	add	r3, r3, #1
   11e0c:	cmp	r3, #32
   11e10:	bne	11e00 <__fdelt_chk@plt+0xd04>
   11e14:	ldr	r2, [sp, #36]	; 0x24
   11e18:	ldr	r3, [r5]
   11e1c:	cmp	r2, r3
   11e20:	bne	11e34 <__fdelt_chk@plt+0xd38>
   11e24:	add	sp, sp, #44	; 0x2c
   11e28:	pop	{r4, r5, r6, r7, pc}
   11e2c:	mov	r0, #1
   11e30:	b	11da4 <__fdelt_chk@plt+0xca8>
   11e34:	bl	1103c <__stack_chk_fail@plt>
   11e38:	andeq	r3, r2, r4, lsl r1
   11e3c:	push	{r4, r5, r6, lr}
   11e40:	movw	r4, #12520	; 0x30e8
   11e44:	movt	r4, #2
   11e48:	sub	sp, sp, #32
   11e4c:	add	r3, sp, #16
   11e50:	add	r2, sp, #8
   11e54:	ldr	ip, [r4]
   11e58:	movw	r1, #9424	; 0x24d0
   11e5c:	str	r3, [sp]
   11e60:	movt	r1, #1
   11e64:	add	r3, sp, #12
   11e68:	mov	r6, r0
   11e6c:	str	ip, [sp, #28]
   11e70:	bl	10e98 <XQueryExtension@plt>
   11e74:	add	r1, sp, #20
   11e78:	add	r2, sp, #24
   11e7c:	mov	r5, r0
   11e80:	mov	r0, r6
   11e84:	bl	110cc <XRecordQueryVersion@plt>
   11e88:	movw	r3, #12536	; 0x30f8
   11e8c:	movt	r3, #2
   11e90:	ldr	r3, [r3, #20]
   11e94:	cmp	r3, #0
   11e98:	beq	11ea4 <__fdelt_chk@plt+0xda8>
   11e9c:	cmp	r0, #0
   11ea0:	bne	11ec0 <__fdelt_chk@plt+0xdc4>
   11ea4:	ldr	r2, [sp, #28]
   11ea8:	mov	r0, r5
   11eac:	ldr	r3, [r4]
   11eb0:	cmp	r2, r3
   11eb4:	bne	11edc <__fdelt_chk@plt+0xde0>
   11eb8:	add	sp, sp, #32
   11ebc:	pop	{r4, r5, r6, pc}
   11ec0:	movw	r1, #9432	; 0x24d8
   11ec4:	ldr	r2, [sp, #20]
   11ec8:	movt	r1, #1
   11ecc:	ldr	r3, [sp, #24]
   11ed0:	mov	r0, #1
   11ed4:	bl	10f10 <__printf_chk@plt>
   11ed8:	b	11ea4 <__fdelt_chk@plt+0xda8>
   11edc:	bl	1103c <__stack_chk_fail@plt>
   11ee0:	movw	r3, #12520	; 0x30e8
   11ee4:	movt	r3, #2
   11ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eec:	vpush	{d8-d10}
   11ef0:	sub	sp, sp, #292	; 0x124
   11ef4:	ldr	r3, [r3]
   11ef8:	mov	r5, r0
   11efc:	mov	r0, #0
   11f00:	vmov.f64	d8, d0
   11f04:	mov	r4, #3
   11f08:	add	fp, sp, #59	; 0x3b
   11f0c:	str	r3, [sp, #284]	; 0x11c
   11f10:	str	r4, [sp, #16]
   11f14:	str	fp, [sp, #12]
   11f18:	bl	10f64 <XOpenDisplay@plt>
   11f1c:	mov	r6, r0
   11f20:	bl	10fac <XRecordAllocRange@plt>
   11f24:	mov	r2, #1
   11f28:	add	lr, sp, #20
   11f2c:	mov	r3, r2
   11f30:	mov	r1, #2
   11f34:	mov	ip, r0
   11f38:	mov	r0, r6
   11f3c:	strb	r1, [ip, #18]
   11f40:	mov	r1, #0
   11f44:	strb	r4, [ip, #19]
   11f48:	str	lr, [sp]
   11f4c:	str	r2, [sp, #4]
   11f50:	add	r2, sp, #16
   11f54:	str	ip, [sp, #20]
   11f58:	bl	10f94 <XRecordCreateContext@plt>
   11f5c:	add	r3, sp, #32
   11f60:	movw	r2, #6216	; 0x1848
   11f64:	movt	r2, #1
   11f68:	mov	r1, r0
   11f6c:	mov	r0, r6
   11f70:	bl	10f70 <XRecordEnableContextAsync@plt>
   11f74:	mov	r0, r5
   11f78:	bl	11090 <XGetModifierMapping@plt>
   11f7c:	add	r3, sp, #43	; 0x2b
   11f80:	mov	r2, #0
   11f84:	str	r0, [sp, #32]
   11f88:	ldr	fp, [sp, #12]
   11f8c:	strb	r2, [r3, #1]!
   11f90:	cmp	r3, fp
   11f94:	bne	11f88 <__fdelt_chk@plt+0xe8c>
   11f98:	vcvt.s32.f64	s20, d8
   11f9c:	movw	r9, #12536	; 0x30f8
   11fa0:	movw	r8, #12524	; 0x30ec
   11fa4:	movt	r9, #2
   11fa8:	movt	r8, #2
   11fac:	add	r5, sp, #280	; 0x118
   11fb0:	mov	r4, #0
   11fb4:	add	fp, sp, #24
   11fb8:	vldr	d9, [pc, #432]	; 12170 <__fdelt_chk@plt+0x1074>
   11fbc:	str	fp, [sp, #8]
   11fc0:	ldr	r7, [r6, #8]
   11fc4:	add	r3, sp, #152	; 0x98
   11fc8:	str	r4, [r3, #4]!
   11fcc:	cmp	r3, r5
   11fd0:	bne	11fc8 <__fdelt_chk@plt+0xecc>
   11fd4:	mov	r0, r7
   11fd8:	bl	110fc <__fdelt_chk@plt>
   11fdc:	ldr	ip, [r9, #16]
   11fe0:	asr	r1, r7, #31
   11fe4:	ldr	fp, [sp, #8]
   11fe8:	add	lr, sp, #288	; 0x120
   11fec:	mov	r2, #0
   11ff0:	lsr	r1, r1, #27
   11ff4:	cmp	ip, r2
   11ff8:	add	sl, r7, r1
   11ffc:	mov	r3, r2
   12000:	moveq	fp, r2
   12004:	and	sl, sl, #31
   12008:	str	fp, [sp]
   1200c:	rsb	sl, r1, sl
   12010:	mov	fp, #1
   12014:	add	r1, sp, #156	; 0x9c
   12018:	add	ip, lr, r0, lsl #2
   1201c:	add	r0, r7, #1
   12020:	ldr	lr, [ip, #-132]	; 0xffffff7c
   12024:	orr	lr, lr, fp, lsl sl
   12028:	str	lr, [ip, #-132]	; 0xffffff7c
   1202c:	bl	1100c <select@plt>
   12030:	mov	fp, r0
   12034:	mov	r0, r7
   12038:	bl	110fc <__fdelt_chk@plt>
   1203c:	add	lr, sp, #288	; 0x120
   12040:	add	r0, lr, r0, lsl #2
   12044:	ldr	r3, [r0, #-132]	; 0xffffff7c
   12048:	asr	sl, r3, sl
   1204c:	tst	sl, #1
   12050:	bne	12074 <__fdelt_chk@plt+0xf78>
   12054:	cmp	fp, #0
   12058:	bne	11fc0 <__fdelt_chk@plt+0xec4>
   1205c:	ldr	r3, [r9, #16]
   12060:	cmp	r3, #0
   12064:	beq	11fc0 <__fdelt_chk@plt+0xec4>
   12068:	mov	r0, #1
   1206c:	bl	11a14 <__fdelt_chk@plt+0x918>
   12070:	b	11fc0 <__fdelt_chk@plt+0xec4>
   12074:	mov	r0, r6
   12078:	str	r4, [sp, #36]	; 0x24
   1207c:	str	r4, [sp, #40]	; 0x28
   12080:	bl	10eec <XRecordProcessReplies@plt>
   12084:	b	120a4 <__fdelt_chk@plt+0xfa8>
   12088:	bl	10fdc <XNextEvent@plt>
   1208c:	movw	r2, #9468	; 0x24fc
   12090:	ldr	r0, [r8]
   12094:	movt	r2, #1
   12098:	mov	r1, #1
   1209c:	ldr	r3, [sp, #60]	; 0x3c
   120a0:	bl	11060 <__fprintf_chk@plt>
   120a4:	mov	r1, #0
   120a8:	mov	r0, r6
   120ac:	bl	110e4 <XEventsQueued@plt>
   120b0:	add	r1, sp, #60	; 0x3c
   120b4:	cmp	r0, #0
   120b8:	mov	r0, r6
   120bc:	bgt	12088 <__fdelt_chk@plt+0xf8c>
   120c0:	ldr	r3, [r9, #96]	; 0x60
   120c4:	cmp	r3, #0
   120c8:	movne	r1, #0
   120cc:	bne	120dc <__fdelt_chk@plt+0xfe0>
   120d0:	ldr	r1, [sp, #36]	; 0x24
   120d4:	adds	r1, r1, #0
   120d8:	movne	r1, #1
   120dc:	ldr	r2, [sp, #40]	; 0x28
   120e0:	cmp	r2, #0
   120e4:	beq	12154 <__fdelt_chk@plt+0x1058>
   120e8:	ldr	r7, [r9, #92]	; 0x5c
   120ec:	cmp	r7, #0
   120f0:	beq	12114 <__fdelt_chk@plt+0x1018>
   120f4:	add	r3, sp, #43	; 0x2b
   120f8:	ldrb	r2, [r3, #1]!
   120fc:	cmp	r2, #0
   12100:	bne	12168 <__fdelt_chk@plt+0x106c>
   12104:	ldr	r0, [sp, #12]
   12108:	cmp	r3, r0
   1210c:	bne	120f8 <__fdelt_chk@plt+0xffc>
   12110:	mov	r7, r2
   12114:	vcvt.f64.s32	d7, s20
   12118:	mov	r0, #0
   1211c:	vstr	s20, [sp, #24]
   12120:	vsub.f64	d7, d8, d7
   12124:	vmul.f64	d7, d7, d9
   12128:	vcvt.s32.f64	s14, d7
   1212c:	vstr	s14, [sp, #28]
   12130:	bl	11a14 <__fdelt_chk@plt+0x918>
   12134:	cmp	r7, #0
   12138:	beq	12054 <__fdelt_chk@plt+0xf58>
   1213c:	ldr	r3, [r9, #16]
   12140:	cmp	r3, #0
   12144:	beq	12054 <__fdelt_chk@plt+0xf58>
   12148:	mov	r0, #1
   1214c:	bl	11a14 <__fdelt_chk@plt+0x918>
   12150:	b	12054 <__fdelt_chk@plt+0xf58>
   12154:	adds	r7, r3, #0
   12158:	movne	r7, #1
   1215c:	cmp	r1, #0
   12160:	bne	12114 <__fdelt_chk@plt+0x1018>
   12164:	b	12134 <__fdelt_chk@plt+0x1038>
   12168:	mov	r7, #1
   1216c:	b	1215c <__fdelt_chk@plt+0x1060>
   12170:	andeq	r0, r0, r0
   12174:	smlawbmi	lr, r0, r4, r8
   12178:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1217c:	mov	r7, r0
   12180:	ldr	r6, [pc, #76]	; 121d4 <__fdelt_chk@plt+0x10d8>
   12184:	mov	r8, r1
   12188:	ldr	r5, [pc, #72]	; 121d8 <__fdelt_chk@plt+0x10dc>
   1218c:	mov	r9, r2
   12190:	add	r6, pc, r6
   12194:	bl	10e78 <_init@@Base>
   12198:	add	r5, pc, r5
   1219c:	rsb	r6, r5, r6
   121a0:	asrs	r6, r6, #2
   121a4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   121a8:	sub	r5, r5, #4
   121ac:	mov	r4, #0
   121b0:	add	r4, r4, #1
   121b4:	ldr	r3, [r5, #4]!
   121b8:	mov	r0, r7
   121bc:	mov	r1, r8
   121c0:	mov	r2, r9
   121c4:	blx	r3
   121c8:	cmp	r4, r6
   121cc:	bne	121b0 <__fdelt_chk@plt+0x10b4>
   121d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   121d4:	andeq	r0, r1, r8, asr #26
   121d8:	andeq	r0, r1, ip, lsr sp
   121dc:	bx	lr

Disassembly of section .fini:

000121e0 <_fini@@Base>:
   121e0:	push	{r3, lr}
   121e4:	pop	{r3, pc}
