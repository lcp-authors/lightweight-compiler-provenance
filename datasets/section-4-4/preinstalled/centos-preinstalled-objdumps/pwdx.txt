
centos-preinstalled/pwdx:     file format elf32-littlearm


Disassembly of section .init:

00010adc <_init@@Base>:
   10adc:	push	{r3, lr}
   10ae0:	bl	10f7c <fputs@plt+0x330>
   10ae4:	pop	{r3, pc}

Disassembly of section .plt:

00010ae8 <strerror@plt-0x14>:
   10ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   10aec:	ldr	lr, [pc, #4]	; 10af8 <_init@@Base+0x1c>
   10af0:	add	lr, pc, lr
   10af4:	ldr	pc, [lr, #8]!
   10af8:	andeq	r1, r1, r8, lsl #10

00010afc <strerror@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1288]!	; 0x508

00010b08 <abort@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1280]!	; 0x500

00010b14 <__libc_start_main@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b20 <__gmon_start__@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b2c <fclose@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b38 <__printf_chk@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b44 <__cxa_atexit@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b50 <__fpending@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b5c <bindtextdomain@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b68 <_exit@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b74 <free@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b80 <getopt_long@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b8c <dcgettext@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b98 <strlen@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1184]!	; 0x4a0

00010ba4 <setlocale@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1176]!	; 0x498

00010bb0 <strtol@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1168]!	; 0x490

00010bbc <__snprintf_chk@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1160]!	; 0x488

00010bc8 <malloc@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1152]!	; 0x480

00010bd4 <error@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1144]!	; 0x478

00010be0 <__stack_chk_fail@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1136]!	; 0x470

00010bec <__fprintf_chk@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1128]!	; 0x468

00010bf8 <textdomain@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1120]!	; 0x460

00010c04 <readlink@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1112]!	; 0x458

00010c10 <strncmp@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1104]!	; 0x450

00010c1c <ferror@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1096]!	; 0x448

00010c28 <realloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1088]!	; 0x440

00010c34 <exit@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #1080]!	; 0x438

00010c40 <__errno_location@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #1072]!	; 0x430

00010c4c <fputs@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #1064]!	; 0x428

Disassembly of section .text:

00010c58 <.text>:
   10c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c5c:	movw	r4, #8336	; 0x2090
   10c60:	movt	r4, #2
   10c64:	movw	r3, #8348	; 0x209c
   10c68:	movt	r3, #2
   10c6c:	sub	sp, sp, #36	; 0x24
   10c70:	ldr	r2, [r4]
   10c74:	mov	r5, r1
   10c78:	mov	r9, r0
   10c7c:	movw	r1, #5144	; 0x1418
   10c80:	mov	r0, #6
   10c84:	movt	r1, #1
   10c88:	str	r2, [r3]
   10c8c:	bl	10ba4 <setlocale@plt>
   10c90:	movw	r0, #5328	; 0x14d0
   10c94:	movw	r1, #5340	; 0x14dc
   10c98:	movt	r0, #1
   10c9c:	movt	r1, #1
   10ca0:	bl	10b5c <bindtextdomain@plt>
   10ca4:	movw	r0, #5328	; 0x14d0
   10ca8:	movt	r0, #1
   10cac:	mov	r7, #0
   10cb0:	bl	10bf8 <textdomain@plt>
   10cb4:	movw	r0, #4792	; 0x12b8
   10cb8:	movt	r0, #1
   10cbc:	bl	113a4 <fputs@plt+0x758>
   10cc0:	mov	r0, r9
   10cc4:	mov	r1, r5
   10cc8:	str	r7, [sp]
   10ccc:	movw	r2, #5360	; 0x14f0
   10cd0:	movw	r3, #5088	; 0x13e0
   10cd4:	movt	r2, #1
   10cd8:	movt	r3, #1
   10cdc:	bl	10b80 <getopt_long@plt>
   10ce0:	cmn	r0, #1
   10ce4:	beq	10d40 <fputs@plt+0xf4>
   10ce8:	cmp	r0, #86	; 0x56
   10cec:	beq	10d08 <fputs@plt+0xbc>
   10cf0:	cmp	r0, #104	; 0x68
   10cf4:	bne	10ee8 <fputs@plt+0x29c>
   10cf8:	movw	r3, #8360	; 0x20a8
   10cfc:	movt	r3, #2
   10d00:	ldr	r0, [r3]
   10d04:	bl	11074 <fputs@plt+0x428>
   10d08:	mov	r2, #5
   10d0c:	movw	r1, #5364	; 0x14f4
   10d10:	mov	r0, r7
   10d14:	movt	r1, #1
   10d18:	bl	10b8c <dcgettext@plt>
   10d1c:	ldr	r2, [r4]
   10d20:	movw	r3, #5376	; 0x1500
   10d24:	movt	r3, #1
   10d28:	mov	r1, r0
   10d2c:	mov	r0, #1
   10d30:	bl	10b38 <__printf_chk@plt>
   10d34:	mov	r0, r7
   10d38:	add	sp, sp, #36	; 0x24
   10d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d40:	movw	r3, #8344	; 0x2098
   10d44:	movt	r3, #2
   10d48:	ldr	r3, [r3]
   10d4c:	subs	r9, r9, r3
   10d50:	str	r9, [sp, #12]
   10d54:	add	r6, r5, r3, lsl #2
   10d58:	beq	10ee8 <fputs@plt+0x29c>
   10d5c:	mov	r0, #128	; 0x80
   10d60:	bl	10bc8 <malloc@plt>
   10d64:	ldr	r2, [sp, #12]
   10d68:	cmp	r2, #0
   10d6c:	mov	sl, r0
   10d70:	ble	10ef8 <fputs@plt+0x2ac>
   10d74:	mov	r4, #128	; 0x80
   10d78:	mov	fp, r0
   10d7c:	movw	r3, #5464	; 0x1558
   10d80:	movw	r2, #5448	; 0x1548
   10d84:	movt	r3, #1
   10d88:	movt	r2, #1
   10d8c:	str	r3, [sp, #28]
   10d90:	movw	r3, #8364	; 0x20ac
   10d94:	str	r2, [sp, #16]
   10d98:	movt	r3, #2
   10d9c:	str	r7, [sp, #24]
   10da0:	str	r3, [sp, #20]
   10da4:	mov	r8, r6
   10da8:	add	r6, r6, #4
   10dac:	ldr	r0, [r8]
   10db0:	bl	10b98 <strlen@plt>
   10db4:	add	r9, r0, #11
   10db8:	mov	r0, r9
   10dbc:	bl	10bc8 <malloc@plt>
   10dc0:	adds	sl, r9, #0
   10dc4:	movne	sl, #1
   10dc8:	cmp	r0, #0
   10dcc:	mov	r5, r0
   10dd0:	movne	sl, #0
   10dd4:	cmp	sl, #0
   10dd8:	bne	10f00 <fputs@plt+0x2b4>
   10ddc:	ldr	r0, [r6, #-4]
   10de0:	bl	11164 <fputs@plt+0x518>
   10de4:	cmp	r0, #0
   10de8:	bne	10f18 <fputs@plt+0x2cc>
   10dec:	ldr	r3, [r6, #-4]
   10df0:	mov	r1, r9
   10df4:	mov	r0, r5
   10df8:	ldrb	r2, [r3]
   10dfc:	str	r3, [sp, #4]
   10e00:	mvn	r3, #0
   10e04:	cmp	r2, #47	; 0x2f
   10e08:	ldrne	r2, [sp, #16]
   10e0c:	ldreq	r2, [sp, #28]
   10e10:	str	r2, [sp]
   10e14:	mov	r2, #1
   10e18:	bl	10bbc <__snprintf_chk@plt>
   10e1c:	b	10e34 <fputs@plt+0x1e8>
   10e20:	lsl	r4, r4, #1
   10e24:	mov	r0, fp
   10e28:	mov	r1, r4
   10e2c:	bl	10c28 <realloc@plt>
   10e30:	mov	fp, r0
   10e34:	mov	r0, r5
   10e38:	mov	r1, fp
   10e3c:	mov	r2, r4
   10e40:	bl	10c04 <readlink@plt>
   10e44:	cmp	r4, r0
   10e48:	beq	10e20 <fputs@plt+0x1d4>
   10e4c:	mov	r8, r0
   10e50:	mov	r0, r5
   10e54:	bl	10b74 <free@plt>
   10e58:	cmp	r8, #0
   10e5c:	blt	10ea4 <fputs@plt+0x258>
   10e60:	mov	r3, #0
   10e64:	movw	r1, #5472	; 0x1560
   10e68:	strb	r3, [fp, r8]
   10e6c:	movt	r1, #1
   10e70:	ldr	r2, [r6, #-4]
   10e74:	mov	r0, #1
   10e78:	mov	r3, fp
   10e7c:	bl	10b38 <__printf_chk@plt>
   10e80:	ldr	r3, [sp, #12]
   10e84:	add	r7, r7, #1
   10e88:	cmp	r7, r3
   10e8c:	bne	10da4 <fputs@plt+0x158>
   10e90:	mov	sl, fp
   10e94:	mov	r0, sl
   10e98:	bl	10b74 <free@plt>
   10e9c:	ldr	r0, [sp, #24]
   10ea0:	b	10d38 <fputs@plt+0xec>
   10ea4:	bl	10c40 <__errno_location@plt>
   10ea8:	mov	r3, #1
   10eac:	str	r3, [sp, #24]
   10eb0:	ldr	r0, [r0]
   10eb4:	cmp	r0, #2
   10eb8:	moveq	r0, #3
   10ebc:	bl	10afc <strerror@plt>
   10ec0:	ldr	r2, [sp, #20]
   10ec4:	ldr	r3, [r6, #-4]
   10ec8:	mov	r1, #1
   10ecc:	ldr	lr, [r2]
   10ed0:	movw	r2, #5472	; 0x1560
   10ed4:	movt	r2, #1
   10ed8:	str	r0, [sp]
   10edc:	mov	r0, lr
   10ee0:	bl	10bec <__fprintf_chk@plt>
   10ee4:	b	10e80 <fputs@plt+0x234>
   10ee8:	movw	r3, #8364	; 0x20ac
   10eec:	movt	r3, #2
   10ef0:	ldr	r0, [r3]
   10ef4:	bl	11074 <fputs@plt+0x428>
   10ef8:	str	r7, [sp, #24]
   10efc:	b	10e94 <fputs@plt+0x248>
   10f00:	movw	r2, #5396	; 0x1514
   10f04:	mov	r3, r9
   10f08:	mov	r0, #1
   10f0c:	movt	r2, #1
   10f10:	mov	r1, #0
   10f14:	bl	10bd4 <error@plt>
   10f18:	mov	r2, #5
   10f1c:	movw	r1, #5424	; 0x1530
   10f20:	mov	r0, sl
   10f24:	movt	r1, #1
   10f28:	bl	10b8c <dcgettext@plt>
   10f2c:	mov	r1, sl
   10f30:	ldr	r3, [r8]
   10f34:	mov	r2, r0
   10f38:	mov	r0, #1
   10f3c:	bl	10bd4 <error@plt>
   10f40:	mov	fp, #0
   10f44:	mov	lr, #0
   10f48:	pop	{r1}		; (ldr r1, [sp], #4)
   10f4c:	mov	r2, sp
   10f50:	push	{r2}		; (str r2, [sp, #-4]!)
   10f54:	push	{r0}		; (str r0, [sp, #-4]!)
   10f58:	ldr	ip, [pc, #16]	; 10f70 <fputs@plt+0x324>
   10f5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f60:	ldr	r0, [pc, #12]	; 10f74 <fputs@plt+0x328>
   10f64:	ldr	r3, [pc, #12]	; 10f78 <fputs@plt+0x32c>
   10f68:	bl	10b14 <__libc_start_main@plt>
   10f6c:	bl	10b08 <abort@plt>
   10f70:	andeq	r1, r1, r0, lsr #7
   10f74:	andeq	r0, r1, r8, asr ip
   10f78:	andeq	r1, r1, ip, lsr r3
   10f7c:	ldr	r3, [pc, #20]	; 10f98 <fputs@plt+0x34c>
   10f80:	ldr	r2, [pc, #20]	; 10f9c <fputs@plt+0x350>
   10f84:	add	r3, pc, r3
   10f88:	ldr	r2, [r3, r2]
   10f8c:	cmp	r2, #0
   10f90:	bxeq	lr
   10f94:	b	10b20 <__gmon_start__@plt>
   10f98:	andeq	r1, r1, r4, ror r0
   10f9c:	andeq	r0, r0, r0, lsl #1
   10fa0:	push	{r3, lr}
   10fa4:	movw	r0, #8332	; 0x208c
   10fa8:	ldr	r3, [pc, #36]	; 10fd4 <fputs@plt+0x388>
   10fac:	movt	r0, #2
   10fb0:	rsb	r3, r0, r3
   10fb4:	cmp	r3, #6
   10fb8:	popls	{r3, pc}
   10fbc:	movw	r3, #0
   10fc0:	movt	r3, #0
   10fc4:	cmp	r3, #0
   10fc8:	popeq	{r3, pc}
   10fcc:	blx	r3
   10fd0:	pop	{r3, pc}
   10fd4:	andeq	r2, r2, pc, lsl #1
   10fd8:	push	{r3, lr}
   10fdc:	movw	r0, #8332	; 0x208c
   10fe0:	movw	r3, #8332	; 0x208c
   10fe4:	movt	r0, #2
   10fe8:	movt	r3, #2
   10fec:	rsb	r3, r0, r3
   10ff0:	asr	r3, r3, #2
   10ff4:	add	r3, r3, r3, lsr #31
   10ff8:	asrs	r1, r3, #1
   10ffc:	popeq	{r3, pc}
   11000:	movw	r2, #0
   11004:	movt	r2, #0
   11008:	cmp	r2, #0
   1100c:	popeq	{r3, pc}
   11010:	blx	r2
   11014:	pop	{r3, pc}
   11018:	push	{r4, lr}
   1101c:	movw	r4, #8368	; 0x20b0
   11020:	movt	r4, #2
   11024:	ldrb	r3, [r4]
   11028:	cmp	r3, #0
   1102c:	popne	{r4, pc}
   11030:	bl	10fa0 <fputs@plt+0x354>
   11034:	mov	r3, #1
   11038:	strb	r3, [r4]
   1103c:	pop	{r4, pc}
   11040:	movw	r0, #7916	; 0x1eec
   11044:	movt	r0, #2
   11048:	push	{r3, lr}
   1104c:	ldr	r3, [r0]
   11050:	cmp	r3, #0
   11054:	beq	1106c <fputs@plt+0x420>
   11058:	movw	r3, #0
   1105c:	movt	r3, #0
   11060:	cmp	r3, #0
   11064:	beq	1106c <fputs@plt+0x420>
   11068:	blx	r3
   1106c:	pop	{r3, lr}
   11070:	b	10fd8 <fputs@plt+0x38c>
   11074:	push	{r4, lr}
   11078:	mov	r2, #5
   1107c:	mov	r4, r0
   11080:	movw	r1, #5136	; 0x1410
   11084:	mov	r0, #0
   11088:	movt	r1, #1
   1108c:	bl	10b8c <dcgettext@plt>
   11090:	mov	r1, r4
   11094:	bl	10c4c <fputs@plt>
   11098:	mov	r2, #5
   1109c:	movw	r1, #5148	; 0x141c
   110a0:	mov	r0, #0
   110a4:	movt	r1, #1
   110a8:	bl	10b8c <dcgettext@plt>
   110ac:	movw	r3, #8336	; 0x2090
   110b0:	movt	r3, #2
   110b4:	mov	r1, #1
   110b8:	ldr	r3, [r3]
   110bc:	mov	r2, r0
   110c0:	mov	r0, r4
   110c4:	bl	10bec <__fprintf_chk@plt>
   110c8:	mov	r2, #5
   110cc:	movw	r1, #5172	; 0x1434
   110d0:	mov	r0, #0
   110d4:	movt	r1, #1
   110d8:	bl	10b8c <dcgettext@plt>
   110dc:	mov	r1, r4
   110e0:	bl	10c4c <fputs@plt>
   110e4:	mov	r2, #5
   110e8:	movw	r1, #5184	; 0x1440
   110ec:	mov	r0, #0
   110f0:	movt	r1, #1
   110f4:	bl	10b8c <dcgettext@plt>
   110f8:	mov	r1, r4
   110fc:	bl	10c4c <fputs@plt>
   11100:	mov	r2, #5
   11104:	movw	r1, #5228	; 0x146c
   11108:	mov	r0, #0
   1110c:	movt	r1, #1
   11110:	bl	10b8c <dcgettext@plt>
   11114:	mov	r1, r4
   11118:	bl	10c4c <fputs@plt>
   1111c:	mov	r2, #5
   11120:	movw	r1, #5284	; 0x14a4
   11124:	mov	r0, #0
   11128:	movt	r1, #1
   1112c:	bl	10b8c <dcgettext@plt>
   11130:	movw	r3, #5312	; 0x14c0
   11134:	mov	r1, #1
   11138:	movt	r3, #1
   1113c:	mov	r2, r0
   11140:	mov	r0, r4
   11144:	bl	10bec <__fprintf_chk@plt>
   11148:	movw	r3, #8364	; 0x20ac
   1114c:	movt	r3, #2
   11150:	ldr	r0, [r3]
   11154:	subs	r3, r4, r0
   11158:	rsbs	r0, r3, #0
   1115c:	adcs	r0, r0, r3
   11160:	bl	10c34 <exit@plt>
   11164:	push	{r4, r5, r6, r7, r8, r9, lr}
   11168:	movw	r4, #8352	; 0x20a0
   1116c:	movt	r4, #2
   11170:	sub	sp, sp, #12
   11174:	add	r5, sp, #8
   11178:	mov	r1, r0
   1117c:	ldr	r3, [r4]
   11180:	mov	r2, #6
   11184:	mov	r8, r0
   11188:	movw	r0, #5320	; 0x14c8
   1118c:	movt	r0, #1
   11190:	mov	r7, #0
   11194:	str	r3, [sp, #4]
   11198:	str	r7, [r5, #-8]!
   1119c:	bl	10c10 <strncmp@plt>
   111a0:	cmp	r0, r7
   111a4:	moveq	r9, #6
   111a8:	movne	r9, r7
   111ac:	bl	10c40 <__errno_location@plt>
   111b0:	add	r8, r8, r9
   111b4:	mov	r1, sp
   111b8:	mov	r2, #10
   111bc:	mov	r6, r0
   111c0:	str	r7, [r0]
   111c4:	mov	r0, r8
   111c8:	bl	10bb0 <strtol@plt>
   111cc:	ldr	r3, [r6]
   111d0:	cmp	r3, r7
   111d4:	bne	11208 <fputs@plt+0x5bc>
   111d8:	ldr	r3, [sp]
   111dc:	cmp	r8, r3
   111e0:	beq	11208 <fputs@plt+0x5bc>
   111e4:	cmp	r3, r7
   111e8:	beq	111f8 <fputs@plt+0x5ac>
   111ec:	ldrb	r3, [r3]
   111f0:	cmp	r3, r7
   111f4:	bne	11208 <fputs@plt+0x5bc>
   111f8:	cmp	r0, #0
   111fc:	movgt	r0, #0
   11200:	movle	r0, #1
   11204:	b	1120c <fputs@plt+0x5c0>
   11208:	mov	r0, #1
   1120c:	ldr	r2, [sp, #4]
   11210:	ldr	r3, [r4]
   11214:	cmp	r2, r3
   11218:	bne	11224 <fputs@plt+0x5d8>
   1121c:	add	sp, sp, #12
   11220:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11224:	bl	10be0 <__stack_chk_fail@plt>
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r5, r0
   11230:	bl	10b50 <__fpending@plt>
   11234:	mov	r6, r0
   11238:	mov	r0, r5
   1123c:	bl	10c1c <ferror@plt>
   11240:	mov	r4, r0
   11244:	mov	r0, r5
   11248:	bl	10b2c <fclose@plt>
   1124c:	adds	r5, r0, #0
   11250:	movne	r5, #1
   11254:	cmp	r4, #0
   11258:	bne	11278 <fputs@plt+0x62c>
   1125c:	cmp	r5, #0
   11260:	beq	11270 <fputs@plt+0x624>
   11264:	cmp	r6, #0
   11268:	beq	112a0 <fputs@plt+0x654>
   1126c:	mvn	r4, #0
   11270:	mov	r0, r4
   11274:	pop	{r4, r5, r6, pc}
   11278:	cmp	r5, #0
   1127c:	bne	1126c <fputs@plt+0x620>
   11280:	bl	10c40 <__errno_location@plt>
   11284:	ldr	r3, [r0]
   11288:	cmp	r3, #32
   1128c:	beq	1126c <fputs@plt+0x620>
   11290:	mvn	r4, #0
   11294:	str	r5, [r0]
   11298:	mov	r0, r4
   1129c:	pop	{r4, r5, r6, pc}
   112a0:	bl	10c40 <__errno_location@plt>
   112a4:	ldr	r4, [r0]
   112a8:	subs	r4, r4, #9
   112ac:	mvnne	r4, #0
   112b0:	mov	r0, r4
   112b4:	pop	{r4, r5, r6, pc}
   112b8:	movw	r3, #8360	; 0x20a8
   112bc:	movt	r3, #2
   112c0:	push	{r4, lr}
   112c4:	ldr	r0, [r3]
   112c8:	bl	11228 <fputs@plt+0x5dc>
   112cc:	cmp	r0, #0
   112d0:	beq	112e8 <fputs@plt+0x69c>
   112d4:	bl	10c40 <__errno_location@plt>
   112d8:	ldr	r3, [r0]
   112dc:	mov	r4, r0
   112e0:	cmp	r3, #32
   112e4:	bne	11308 <fputs@plt+0x6bc>
   112e8:	movw	r3, #8364	; 0x20ac
   112ec:	movt	r3, #2
   112f0:	ldr	r0, [r3]
   112f4:	bl	11228 <fputs@plt+0x5dc>
   112f8:	cmp	r0, #0
   112fc:	popeq	{r4, pc}
   11300:	mov	r0, #1
   11304:	bl	10b68 <_exit@plt>
   11308:	mov	r2, #5
   1130c:	movw	r1, #5496	; 0x1578
   11310:	mov	r0, #0
   11314:	movt	r1, #1
   11318:	bl	10b8c <dcgettext@plt>
   1131c:	ldr	r1, [r4]
   11320:	movw	r2, #5444	; 0x1544
   11324:	movt	r2, #1
   11328:	mov	r3, r0
   1132c:	mov	r0, #0
   11330:	bl	10bd4 <error@plt>
   11334:	mov	r0, #1
   11338:	bl	10b68 <_exit@plt>
   1133c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11340:	mov	r7, r0
   11344:	ldr	r6, [pc, #76]	; 11398 <fputs@plt+0x74c>
   11348:	mov	r8, r1
   1134c:	ldr	r5, [pc, #72]	; 1139c <fputs@plt+0x750>
   11350:	mov	r9, r2
   11354:	add	r6, pc, r6
   11358:	bl	10adc <_init@@Base>
   1135c:	add	r5, pc, r5
   11360:	rsb	r6, r5, r6
   11364:	asrs	r6, r6, #2
   11368:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1136c:	sub	r5, r5, #4
   11370:	mov	r4, #0
   11374:	add	r4, r4, #1
   11378:	ldr	r3, [r5, #4]!
   1137c:	mov	r0, r7
   11380:	mov	r1, r8
   11384:	mov	r2, r9
   11388:	blx	r3
   1138c:	cmp	r4, r6
   11390:	bne	11374 <fputs@plt+0x728>
   11394:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11398:	andeq	r0, r1, ip, lsl #23
   1139c:	andeq	r0, r1, r0, lsl #23
   113a0:	bx	lr
   113a4:	ldr	r3, [pc, #28]	; 113c8 <fputs@plt+0x77c>
   113a8:	mov	r1, #0
   113ac:	ldr	r2, [pc, #24]	; 113cc <fputs@plt+0x780>
   113b0:	add	r3, pc, r3
   113b4:	ldr	r3, [r3, r2]
   113b8:	cmp	r3, #0
   113bc:	ldrne	r2, [r3]
   113c0:	moveq	r2, r3
   113c4:	b	10b44 <__cxa_atexit@plt>
   113c8:	andeq	r0, r1, r8, asr #24
   113cc:	andeq	r0, r0, r4, lsl #1

Disassembly of section .fini:

000113d0 <_fini@@Base>:
   113d0:	push	{r3, lr}
   113d4:	pop	{r3, pc}
