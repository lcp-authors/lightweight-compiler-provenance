
centos-preinstalled/plymouth:     file format elf32-littlearm


Disassembly of section .init:

00001084 <.init>:
    1084:	push	{r3, lr}
    1088:	bl	2698 <main@@Base+0x12ac>
    108c:	pop	{r3, pc}

Disassembly of section .plt:

00001090 <calloc@plt-0x14>:
    1090:	push	{lr}		; (str lr, [sp, #-4]!)
    1094:	ldr	lr, [pc, #4]	; 10a0 <calloc@plt-0x4>
    1098:	add	lr, pc, lr
    109c:	ldr	pc, [lr, #8]!
    10a0:	andeq	r6, r1, r4, lsl lr

000010a4 <calloc@plt>:
    10a4:	add	ip, pc, #0, 12
    10a8:	add	ip, ip, #90112	; 0x16000
    10ac:	ldr	pc, [ip, #3604]!	; 0xe14

000010b0 <strstr@plt>:
    10b0:	add	ip, pc, #0, 12
    10b4:	add	ip, ip, #90112	; 0x16000
    10b8:	ldr	pc, [ip, #3596]!	; 0xe0c

000010bc <raise@plt>:
    10bc:	add	ip, pc, #0, 12
    10c0:	add	ip, ip, #90112	; 0x16000
    10c4:	ldr	pc, [ip, #3588]!	; 0xe04

000010c8 <__cxa_finalize@plt>:
    10c8:	add	ip, pc, #0, 12
    10cc:	add	ip, ip, #90112	; 0x16000
    10d0:	ldr	pc, [ip, #3580]!	; 0xdfc

000010d4 <ply_command_parser_get_options@plt>:
    10d4:	add	ip, pc, #0, 12
    10d8:	add	ip, ip, #90112	; 0x16000
    10dc:	ldr	pc, [ip, #3572]!	; 0xdf4

000010e0 <read@plt>:
    10e0:	add	ip, pc, #0, 12
    10e4:	add	ip, ip, #90112	; 0x16000
    10e8:	ldr	pc, [ip, #3564]!	; 0xdec

000010ec <ply_list_get_length@plt>:
    10ec:	add	ip, pc, #0, 12
    10f0:	add	ip, ip, #90112	; 0x16000
    10f4:	ldr	pc, [ip, #3556]!	; 0xde4

000010f8 <ply_event_loop_free@plt>:
    10f8:	add	ip, pc, #0, 12
    10fc:	add	ip, ip, #90112	; 0x16000
    1100:	ldr	pc, [ip, #3548]!	; 0xddc

00001104 <ply_list_get_next_node@plt>:
    1104:	add	ip, pc, #0, 12
    1108:	add	ip, ip, #90112	; 0x16000
    110c:	ldr	pc, [ip, #3540]!	; 0xdd4

00001110 <free@plt>:
    1110:	add	ip, pc, #0, 12
    1114:	add	ip, ip, #90112	; 0x16000
    1118:	ldr	pc, [ip, #3532]!	; 0xdcc

0000111c <_exit@plt>:
    111c:	add	ip, pc, #0, 12
    1120:	add	ip, ip, #90112	; 0x16000
    1124:	ldr	pc, [ip, #3524]!	; 0xdc4

00001128 <execvp@plt>:
    1128:	add	ip, pc, #0, 12
    112c:	add	ip, ip, #90112	; 0x16000
    1130:	ldr	pc, [ip, #3516]!	; 0xdbc

00001134 <ply_logger_flush@plt>:
    1134:	add	ip, pc, #0, 12
    1138:	add	ip, ip, #90112	; 0x16000
    113c:	ldr	pc, [ip, #3508]!	; 0xdb4

00001140 <signal@plt>:
    1140:	add	ip, pc, #0, 12
    1144:	add	ip, ip, #90112	; 0x16000
    1148:	ldr	pc, [ip, #3500]!	; 0xdac

0000114c <ply_write@plt>:
    114c:	add	ip, pc, #0, 12
    1150:	add	ip, ip, #90112	; 0x16000
    1154:	ldr	pc, [ip, #3492]!	; 0xda4

00001158 <ply_array_add_pointer_element@plt>:
    1158:	add	ip, pc, #0, 12
    115c:	add	ip, ip, #90112	; 0x16000
    1160:	ldr	pc, [ip, #3484]!	; 0xd9c

00001164 <ply_event_loop_process_pending_events@plt>:
    1164:	add	ip, pc, #0, 12
    1168:	add	ip, ip, #90112	; 0x16000
    116c:	ldr	pc, [ip, #3476]!	; 0xd94

00001170 <ply_list_node_get_data@plt>:
    1170:	add	ip, pc, #0, 12
    1174:	add	ip, ip, #90112	; 0x16000
    1178:	ldr	pc, [ip, #3468]!	; 0xd8c

0000117c <ply_array_free@plt>:
    117c:	add	ip, pc, #0, 12
    1180:	add	ip, ip, #90112	; 0x16000
    1184:	ldr	pc, [ip, #3460]!	; 0xd84

00001188 <__stack_chk_fail@plt>:
    1188:	add	ip, pc, #0, 12
    118c:	add	ip, ip, #90112	; 0x16000
    1190:	ldr	pc, [ip, #3452]!	; 0xd7c

00001194 <dup2@plt>:
    1194:	add	ip, pc, #0, 12
    1198:	add	ip, ip, #90112	; 0x16000
    119c:	ldr	pc, [ip, #3444]!	; 0xd74

000011a0 <ply_command_parser_new@plt>:
    11a0:	add	ip, pc, #0, 12
    11a4:	add	ip, ip, #90112	; 0x16000
    11a8:	ldr	pc, [ip, #3436]!	; 0xd6c

000011ac <ply_logger_toggle_tracing@plt>:
    11ac:	add	ip, pc, #0, 12
    11b0:	add	ip, ip, #90112	; 0x16000
    11b4:	ldr	pc, [ip, #3428]!	; 0xd64

000011b8 <__strndup@plt>:
    11b8:	add	ip, pc, #0, 12
    11bc:	add	ip, ip, #90112	; 0x16000
    11c0:	ldr	pc, [ip, #3420]!	; 0xd5c

000011c4 <strsignal@plt>:
    11c4:	add	ip, pc, #0, 12
    11c8:	add	ip, ip, #90112	; 0x16000
    11cc:	ldr	pc, [ip, #3412]!	; 0xd54

000011d0 <ply_event_loop_stop_watching_fd@plt>:
    11d0:	add	ip, pc, #0, 12
    11d4:	add	ip, ip, #90112	; 0x16000
    11d8:	ldr	pc, [ip, #3404]!	; 0xd4c

000011dc <waitpid@plt>:
    11dc:	add	ip, pc, #0, 12
    11e0:	add	ip, ip, #90112	; 0x16000
    11e4:	ldr	pc, [ip, #3396]!	; 0xd44

000011e8 <ply_event_loop_run@plt>:
    11e8:	add	ip, pc, #0, 12
    11ec:	add	ip, ip, #90112	; 0x16000
    11f0:	ldr	pc, [ip, #3388]!	; 0xd3c

000011f4 <ply_command_parser_get_help_string@plt>:
    11f4:	add	ip, pc, #0, 12
    11f8:	add	ip, ip, #90112	; 0x16000
    11fc:	ldr	pc, [ip, #3380]!	; 0xd34

00001200 <open64@plt>:
    1200:	add	ip, pc, #0, 12
    1204:	add	ip, ip, #90112	; 0x16000
    1208:	ldr	pc, [ip, #3372]!	; 0xd2c

0000120c <__asprintf_chk@plt>:
    120c:	add	ip, pc, #0, 12
    1210:	add	ip, ip, #90112	; 0x16000
    1214:	ldr	pc, [ip, #3364]!	; 0xd24

00001218 <puts@plt>:
    1218:	add	ip, pc, #0, 12
    121c:	add	ip, ip, #90112	; 0x16000
    1220:	ldr	pc, [ip, #3356]!	; 0xd1c

00001224 <malloc@plt>:
    1224:	add	ip, pc, #0, 12
    1228:	add	ip, ip, #90112	; 0x16000
    122c:	ldr	pc, [ip, #3348]!	; 0xd14

00001230 <__libc_start_main@plt>:
    1230:	add	ip, pc, #0, 12
    1234:	add	ip, ip, #90112	; 0x16000
    1238:	ldr	pc, [ip, #3340]!	; 0xd0c

0000123c <__gmon_start__@plt>:
    123c:	add	ip, pc, #0, 12
    1240:	add	ip, ip, #90112	; 0x16000
    1244:	ldr	pc, [ip, #3332]!	; 0xd04

00001248 <ply_logger_is_tracing_enabled@plt>:
    1248:	add	ip, pc, #0, 12
    124c:	add	ip, ip, #90112	; 0x16000
    1250:	ldr	pc, [ip, #3324]!	; 0xcfc

00001254 <strlen@plt>:
    1254:	add	ip, pc, #0, 12
    1258:	add	ip, ip, #90112	; 0x16000
    125c:	ldr	pc, [ip, #3316]!	; 0xcf4

00001260 <ply_event_loop_exit@plt>:
    1260:	add	ip, pc, #0, 12
    1264:	add	ip, ip, #90112	; 0x16000
    1268:	ldr	pc, [ip, #3308]!	; 0xcec

0000126c <ply_list_append_data@plt>:
    126c:	add	ip, pc, #0, 12
    1270:	add	ip, ip, #90112	; 0x16000
    1274:	ldr	pc, [ip, #3300]!	; 0xce4

00001278 <__errno_location@plt>:
    1278:	add	ip, pc, #0, 12
    127c:	add	ip, ip, #90112	; 0x16000
    1280:	ldr	pc, [ip, #3292]!	; 0xcdc

00001284 <ply_array_new@plt>:
    1284:	add	ip, pc, #0, 12
    1288:	add	ip, ip, #90112	; 0x16000
    128c:	ldr	pc, [ip, #3284]!	; 0xcd4

00001290 <__strdup@plt>:
    1290:	add	ip, pc, #0, 12
    1294:	add	ip, ip, #90112	; 0x16000
    1298:	ldr	pc, [ip, #3276]!	; 0xccc

0000129c <ply_logger_inject_with_non_literal_format_string@plt>:
    129c:	add	ip, pc, #0, 12
    12a0:	add	ip, ip, #90112	; 0x16000
    12a4:	ldr	pc, [ip, #3268]!	; 0xcc4

000012a8 <ply_command_parser_add_options@plt>:
    12a8:	add	ip, pc, #0, 12
    12ac:	add	ip, ip, #90112	; 0x16000
    12b0:	ldr	pc, [ip, #3260]!	; 0xcbc

000012b4 <memset@plt>:
    12b4:	add	ip, pc, #0, 12
    12b8:	add	ip, ip, #90112	; 0x16000
    12bc:	ldr	pc, [ip, #3252]!	; 0xcb4

000012c0 <ply_list_remove_node@plt>:
    12c0:	add	ip, pc, #0, 12
    12c4:	add	ip, ip, #90112	; 0x16000
    12c8:	ldr	pc, [ip, #3244]!	; 0xcac

000012cc <__printf_chk@plt>:
    12cc:	add	ip, pc, #0, 12
    12d0:	add	ip, ip, #90112	; 0x16000
    12d4:	ldr	pc, [ip, #3236]!	; 0xca4

000012d8 <ply_command_parser_get_command_options@plt>:
    12d8:	add	ip, pc, #0, 12
    12dc:	add	ip, ip, #90112	; 0x16000
    12e0:	ldr	pc, [ip, #3228]!	; 0xc9c

000012e4 <ply_read@plt>:
    12e4:	add	ip, pc, #0, 12
    12e8:	add	ip, ip, #90112	; 0x16000
    12ec:	ldr	pc, [ip, #3220]!	; 0xc94

000012f0 <write@plt>:
    12f0:	add	ip, pc, #0, 12
    12f4:	add	ip, ip, #90112	; 0x16000
    12f8:	ldr	pc, [ip, #3212]!	; 0xc8c

000012fc <ply_list_get_first_node@plt>:
    12fc:	add	ip, pc, #0, 12
    1300:	add	ip, ip, #90112	; 0x16000
    1304:	ldr	pc, [ip, #3204]!	; 0xc84

00001308 <ply_list_new@plt>:
    1308:	add	ip, pc, #0, 12
    130c:	add	ip, ip, #90112	; 0x16000
    1310:	ldr	pc, [ip, #3196]!	; 0xc7c

00001314 <ply_connect_to_unix_socket@plt>:
    1314:	add	ip, pc, #0, 12
    1318:	add	ip, ip, #90112	; 0x16000
    131c:	ldr	pc, [ip, #3188]!	; 0xc74

00001320 <ply_logger_get_error_default@plt>:
    1320:	add	ip, pc, #0, 12
    1324:	add	ip, ip, #90112	; 0x16000
    1328:	ldr	pc, [ip, #3180]!	; 0xc6c

0000132c <ply_event_loop_watch_fd@plt>:
    132c:	add	ip, pc, #0, 12
    1330:	add	ip, ip, #90112	; 0x16000
    1334:	ldr	pc, [ip, #3172]!	; 0xc64

00001338 <fork@plt>:
    1338:	add	ip, pc, #0, 12
    133c:	add	ip, ip, #90112	; 0x16000
    1340:	ldr	pc, [ip, #3164]!	; 0xc5c

00001344 <ply_event_loop_watch_for_exit@plt>:
    1344:	add	ip, pc, #0, 12
    1348:	add	ip, ip, #90112	; 0x16000
    134c:	ldr	pc, [ip, #3156]!	; 0xc54

00001350 <ply_free_string_array@plt>:
    1350:	add	ip, pc, #0, 12
    1354:	add	ip, ip, #90112	; 0x16000
    1358:	ldr	pc, [ip, #3148]!	; 0xc4c

0000135c <ply_array_steal_pointer_elements@plt>:
    135c:	add	ip, pc, #0, 12
    1360:	add	ip, ip, #90112	; 0x16000
    1364:	ldr	pc, [ip, #3140]!	; 0xc44

00001368 <ply_command_parser_add_command@plt>:
    1368:	add	ip, pc, #0, 12
    136c:	add	ip, ip, #90112	; 0x16000
    1370:	ldr	pc, [ip, #3132]!	; 0xc3c

00001374 <ply_open_unidirectional_pipe@plt>:
    1374:	add	ip, pc, #0, 12
    1378:	add	ip, ip, #90112	; 0x16000
    137c:	ldr	pc, [ip, #3124]!	; 0xc34

00001380 <ply_list_free@plt>:
    1380:	add	ip, pc, #0, 12
    1384:	add	ip, ip, #90112	; 0x16000
    1388:	ldr	pc, [ip, #3116]!	; 0xc2c

0000138c <ply_command_parser_add_command_alias@plt>:
    138c:	add	ip, pc, #0, 12
    1390:	add	ip, ip, #90112	; 0x16000
    1394:	ldr	pc, [ip, #3108]!	; 0xc24

00001398 <fputs@plt>:
    1398:	add	ip, pc, #0, 12
    139c:	add	ip, ip, #90112	; 0x16000
    13a0:	ldr	pc, [ip, #3100]!	; 0xc1c

000013a4 <abort@plt>:
    13a4:	add	ip, pc, #0, 12
    13a8:	add	ip, ip, #90112	; 0x16000
    13ac:	ldr	pc, [ip, #3092]!	; 0xc14

000013b0 <ply_command_parser_parse_arguments@plt>:
    13b0:	add	ip, pc, #0, 12
    13b4:	add	ip, ip, #90112	; 0x16000
    13b8:	ldr	pc, [ip, #3084]!	; 0xc0c

000013bc <close@plt>:
    13bc:	add	ip, pc, #0, 12
    13c0:	add	ip, ip, #90112	; 0x16000
    13c4:	ldr	pc, [ip, #3076]!	; 0xc04

000013c8 <ply_read_uint32@plt>:
    13c8:	add	ip, pc, #0, 12
    13cc:	add	ip, ip, #90112	; 0x16000
    13d0:	ldr	pc, [ip, #3068]!	; 0xbfc

000013d4 <ply_event_loop_new@plt>:
    13d4:	add	ip, pc, #0, 12
    13d8:	add	ip, ip, #90112	; 0x16000
    13dc:	ldr	pc, [ip, #3060]!	; 0xbf4

000013e0 <__assert_fail@plt>:
    13e0:	add	ip, pc, #0, 12
    13e4:	add	ip, ip, #90112	; 0x16000
    13e8:	ldr	pc, [ip, #3052]!	; 0xbec

Disassembly of section .text:

000013ec <main@@Base>:
    13ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13f0:	sub	sp, sp, #844	; 0x34c
    13f4:	ldr	sl, [pc, #4008]	; 23a4 <main@@Base+0xfb8>
    13f8:	add	r5, sp, #312	; 0x138
    13fc:	ldr	r3, [pc, #4004]	; 23a8 <main@@Base+0xfbc>
    1400:	mov	r2, #524	; 0x20c
    1404:	add	sl, pc, sl
    1408:	str	r0, [sp, #256]	; 0x100
    140c:	str	sl, [sp, #220]	; 0xdc
    1410:	mov	r0, r5
    1414:	str	r1, [sp, #260]	; 0x104
    1418:	mov	r1, #0
    141c:	ldr	r3, [sl, r3]
    1420:	mov	r4, r1
    1424:	ldr	fp, [pc, #3968]	; 23ac <main@@Base+0xfc0>
    1428:	mov	r6, #2
    142c:	ldr	ip, [pc, #3964]	; 23b0 <main@@Base+0xfc4>
    1430:	mov	sl, #3
    1434:	str	r3, [sp, #224]	; 0xe0
    1438:	add	fp, pc, fp
    143c:	ldr	r3, [r3]
    1440:	add	ip, pc, ip
    1444:	str	fp, [sp, #232]	; 0xe8
    1448:	str	ip, [sp, #208]	; 0xd0
    144c:	ldr	fp, [pc, #3936]	; 23b4 <main@@Base+0xfc8>
    1450:	ldr	ip, [pc, #3936]	; 23b8 <main@@Base+0xfcc>
    1454:	str	r3, [sp, #836]	; 0x344
    1458:	add	fp, pc, fp
    145c:	add	ip, pc, ip
    1460:	str	fp, [sp, #212]	; 0xd4
    1464:	str	ip, [sp, #184]	; 0xb8
    1468:	bl	12b4 <memset@plt>
    146c:	mov	r1, #1
    1470:	mov	r0, #13
    1474:	bl	1140 <signal@plt>
    1478:	ldr	r2, [pc, #3900]	; 23bc <main@@Base+0xfd0>
    147c:	ldr	fp, [pc, #3900]	; 23c0 <main@@Base+0xfd4>
    1480:	add	r2, pc, r2
    1484:	str	r2, [sp, #180]	; 0xb4
    1488:	bl	13d4 <ply_event_loop_new@plt>
    148c:	ldr	ip, [pc, #3888]	; 23c4 <main@@Base+0xfd8>
    1490:	add	fp, pc, fp
    1494:	str	fp, [sp, #236]	; 0xec
    1498:	add	ip, pc, ip
    149c:	str	ip, [sp, #240]	; 0xf0
    14a0:	ldr	ip, [pc, #3872]	; 23c8 <main@@Base+0xfdc>
    14a4:	ldr	fp, [pc, #3872]	; 23cc <main@@Base+0xfe0>
    14a8:	add	ip, pc, ip
    14ac:	str	ip, [sp, #188]	; 0xbc
    14b0:	ldr	ip, [pc, #3864]	; 23d0 <main@@Base+0xfe4>
    14b4:	add	fp, pc, fp
    14b8:	str	fp, [sp, #244]	; 0xf4
    14bc:	add	ip, pc, ip
    14c0:	str	ip, [sp, #196]	; 0xc4
    14c4:	ldr	ip, [pc, #3848]	; 23d4 <main@@Base+0xfe8>
    14c8:	ldr	fp, [pc, #3848]	; 23d8 <main@@Base+0xfec>
    14cc:	add	ip, pc, ip
    14d0:	str	ip, [sp, #200]	; 0xc8
    14d4:	ldr	ip, [pc, #3840]	; 23dc <main@@Base+0xff0>
    14d8:	add	fp, pc, fp
    14dc:	str	fp, [sp, #192]	; 0xc0
    14e0:	add	ip, pc, ip
    14e4:	str	ip, [sp, #228]	; 0xe4
    14e8:	ldr	ip, [pc, #3824]	; 23e0 <main@@Base+0xff4>
    14ec:	ldr	fp, [pc, #3824]	; 23e4 <main@@Base+0xff8>
    14f0:	add	ip, pc, ip
    14f4:	str	ip, [sp, #216]	; 0xd8
    14f8:	ldr	ip, [pc, #3816]	; 23e8 <main@@Base+0xffc>
    14fc:	add	fp, pc, fp
    1500:	ldr	r9, [pc, #3812]	; 23ec <main@@Base+0x1000>
    1504:	add	ip, pc, ip
    1508:	str	ip, [sp, #248]	; 0xf8
    150c:	ldr	ip, [pc, #3804]	; 23f0 <main@@Base+0x1004>
    1510:	add	r9, pc, r9
    1514:	ldr	r8, [pc, #3800]	; 23f4 <main@@Base+0x1008>
    1518:	add	ip, pc, ip
    151c:	str	ip, [sp, #252]	; 0xfc
    1520:	add	r8, pc, r8
    1524:	ldr	r7, [pc, #3788]	; 23f8 <main@@Base+0x100c>
    1528:	add	r7, pc, r7
    152c:	str	r0, [sp, #312]	; 0x138
    1530:	bl	3418 <main@@Base+0x202c>
    1534:	ldr	r1, [pc, #3776]	; 23fc <main@@Base+0x1010>
    1538:	add	r1, pc, r1
    153c:	str	r0, [sp, #316]	; 0x13c
    1540:	ldr	r0, [pc, #3768]	; 2400 <main@@Base+0x1014>
    1544:	add	r0, pc, r0
    1548:	bl	11a0 <ply_command_parser_new@plt>
    154c:	ldr	ip, [pc, #3760]	; 2404 <main@@Base+0x1018>
    1550:	ldr	r2, [sp, #180]	; 0xb4
    1554:	mov	r3, r4
    1558:	add	ip, pc, ip
    155c:	str	ip, [sp, #16]
    1560:	ldr	ip, [pc, #3744]	; 2408 <main@@Base+0x101c>
    1564:	ldr	lr, [sp, #232]	; 0xe8
    1568:	add	ip, pc, ip
    156c:	str	ip, [sp, #28]
    1570:	ldr	ip, [pc, #3732]	; 240c <main@@Base+0x1020>
    1574:	str	lr, [sp]
    1578:	add	ip, pc, ip
    157c:	str	ip, [sp, #52]	; 0x34
    1580:	ldr	ip, [sp, #240]	; 0xf0
    1584:	ldr	lr, [sp, #208]	; 0xd0
    1588:	str	r2, [sp, #204]	; 0xcc
    158c:	str	ip, [sp, #60]	; 0x3c
    1590:	ldr	ip, [sp, #244]	; 0xf4
    1594:	str	r2, [sp, #40]	; 0x28
    1598:	ldr	r2, [sp, #236]	; 0xec
    159c:	str	ip, [sp, #72]	; 0x48
    15a0:	ldr	ip, [sp, #188]	; 0xbc
    15a4:	str	lr, [sp, #12]
    15a8:	str	r2, [sp, #48]	; 0x30
    15ac:	str	ip, [sp, #84]	; 0x54
    15b0:	ldr	ip, [sp, #192]	; 0xc0
    15b4:	ldr	lr, [sp, #212]	; 0xd4
    15b8:	ldr	r2, [pc, #3664]	; 2410 <main@@Base+0x1024>
    15bc:	str	ip, [sp, #96]	; 0x60
    15c0:	ldr	ip, [sp, #196]	; 0xc4
    15c4:	add	r2, pc, r2
    15c8:	str	r2, [sp, #64]	; 0x40
    15cc:	ldr	r2, [pc, #3648]	; 2414 <main@@Base+0x1028>
    15d0:	str	lr, [sp, #24]
    15d4:	str	ip, [sp, #108]	; 0x6c
    15d8:	add	r2, pc, r2
    15dc:	ldr	lr, [sp, #184]	; 0xb8
    15e0:	ldr	ip, [sp, #200]	; 0xc8
    15e4:	str	r2, [sp, #76]	; 0x4c
    15e8:	ldr	r1, [pc, #3624]	; 2418 <main@@Base+0x102c>
    15ec:	ldr	r2, [pc, #3624]	; 241c <main@@Base+0x1030>
    15f0:	str	lr, [sp, #36]	; 0x24
    15f4:	add	r1, pc, r1
    15f8:	add	r2, pc, r2
    15fc:	str	r1, [sp, #4]
    1600:	str	fp, [sp, #112]	; 0x70
    1604:	ldr	r1, [sp, #228]	; 0xe4
    1608:	str	r2, [sp, #88]	; 0x58
    160c:	str	ip, [sp, #120]	; 0x78
    1610:	ldr	ip, [sp, #216]	; 0xd8
    1614:	ldr	r2, [pc, #3588]	; 2420 <main@@Base+0x1034>
    1618:	str	r9, [sp, #124]	; 0x7c
    161c:	add	r2, pc, r2
    1620:	str	ip, [sp, #132]	; 0x84
    1624:	str	r2, [sp, #100]	; 0x64
    1628:	ldr	ip, [sp, #248]	; 0xf8
    162c:	ldr	r2, [pc, #3568]	; 2424 <main@@Base+0x1038>
    1630:	str	r4, [sp, #8]
    1634:	add	r2, pc, r2
    1638:	str	r2, [sp, #136]	; 0x88
    163c:	ldr	r2, [pc, #3556]	; 2428 <main@@Base+0x103c>
    1640:	str	ip, [sp, #144]	; 0x90
    1644:	ldr	ip, [sp, #252]	; 0xfc
    1648:	add	r2, pc, r2
    164c:	str	r2, [sp, #160]	; 0xa0
    1650:	ldr	r2, [pc, #3540]	; 242c <main@@Base+0x1040>
    1654:	str	ip, [sp, #156]	; 0x9c
    1658:	add	r2, pc, r2
    165c:	str	r4, [sp, #20]
    1660:	str	r4, [sp, #44]	; 0x2c
    1664:	str	r4, [sp, #56]	; 0x38
    1668:	str	r4, [sp, #68]	; 0x44
    166c:	str	r4, [sp, #80]	; 0x50
    1670:	str	r4, [sp, #92]	; 0x5c
    1674:	str	r4, [sp, #104]	; 0x68
    1678:	str	r4, [sp, #116]	; 0x74
    167c:	str	r6, [sp, #32]
    1680:	str	r6, [sp, #128]	; 0x80
    1684:	str	r6, [sp, #140]	; 0x8c
    1688:	str	r4, [sp, #152]	; 0x98
    168c:	str	r4, [sp, #164]	; 0xa4
    1690:	str	r4, [sp, #168]	; 0xa8
    1694:	str	r8, [sp, #148]	; 0x94
    1698:	str	r0, [sp, #320]	; 0x140
    169c:	bl	12a8 <ply_command_parser_add_options@plt>
    16a0:	ldr	r1, [pc, #3464]	; 2430 <main@@Base+0x1044>
    16a4:	ldr	r2, [pc, #3464]	; 2434 <main@@Base+0x1048>
    16a8:	ldr	r3, [pc, #3464]	; 2438 <main@@Base+0x104c>
    16ac:	add	r1, pc, r1
    16b0:	add	r2, pc, r2
    16b4:	str	r1, [sp, #4]
    16b8:	add	r3, pc, r3
    16bc:	str	r2, [sp, #8]
    16c0:	str	r3, [sp, #16]
    16c4:	ldr	r1, [pc, #3440]	; 243c <main@@Base+0x1050>
    16c8:	ldr	r2, [pc, #3440]	; 2440 <main@@Base+0x1054>
    16cc:	ldr	r3, [pc, #3440]	; 2444 <main@@Base+0x1058>
    16d0:	add	r1, pc, r1
    16d4:	add	r2, pc, r2
    16d8:	str	r1, [sp, #20]
    16dc:	add	r3, pc, r3
    16e0:	str	r2, [sp, #28]
    16e4:	str	r3, [sp, #32]
    16e8:	ldr	r1, [pc, #3416]	; 2448 <main@@Base+0x105c>
    16ec:	ldr	r2, [pc, #3416]	; 244c <main@@Base+0x1060>
    16f0:	ldr	r3, [pc, #3416]	; 2450 <main@@Base+0x1064>
    16f4:	add	r1, pc, r1
    16f8:	ldr	r0, [sp, #320]	; 0x140
    16fc:	add	r2, pc, r2
    1700:	add	r3, pc, r3
    1704:	str	r5, [sp]
    1708:	str	r4, [sp, #12]
    170c:	str	r4, [sp, #24]
    1710:	str	r4, [sp, #36]	; 0x24
    1714:	str	r4, [sp, #40]	; 0x28
    1718:	bl	1368 <ply_command_parser_add_command@plt>
    171c:	ldr	r2, [pc, #3376]	; 2454 <main@@Base+0x1068>
    1720:	ldr	r3, [pc, #3376]	; 2458 <main@@Base+0x106c>
    1724:	add	r2, pc, r2
    1728:	ldr	r1, [pc, #3372]	; 245c <main@@Base+0x1070>
    172c:	add	r3, pc, r3
    1730:	ldr	r0, [sp, #320]	; 0x140
    1734:	stmib	sp, {r2, r3, sl}
    1738:	add	r1, pc, r1
    173c:	ldr	r2, [pc, #3356]	; 2460 <main@@Base+0x1074>
    1740:	ldr	r3, [pc, #3356]	; 2464 <main@@Base+0x1078>
    1744:	add	r2, pc, r2
    1748:	str	r5, [sp]
    174c:	add	r3, pc, r3
    1750:	str	r4, [sp, #16]
    1754:	bl	1368 <ply_command_parser_add_command@plt>
    1758:	ldr	r2, [pc, #3336]	; 2468 <main@@Base+0x107c>
    175c:	ldr	r3, [pc, #3336]	; 246c <main@@Base+0x1080>
    1760:	add	r2, pc, r2
    1764:	ldr	r0, [sp, #320]	; 0x140
    1768:	add	r3, pc, r3
    176c:	stmib	sp, {r2, r3}
    1770:	ldr	r2, [pc, #3320]	; 2470 <main@@Base+0x1084>
    1774:	ldr	r3, [pc, #3320]	; 2474 <main@@Base+0x1088>
    1778:	ldr	r1, [sp, #216]	; 0xd8
    177c:	add	r2, pc, r2
    1780:	add	r3, pc, r3
    1784:	str	r5, [sp]
    1788:	str	r6, [sp, #12]
    178c:	str	r4, [sp, #16]
    1790:	bl	1368 <ply_command_parser_add_command@plt>
    1794:	ldr	r3, [pc, #3292]	; 2478 <main@@Base+0x108c>
    1798:	ldr	r1, [pc, #3292]	; 247c <main@@Base+0x1090>
    179c:	add	r3, pc, r3
    17a0:	ldr	r2, [pc, #3288]	; 2480 <main@@Base+0x1094>
    17a4:	str	r3, [sp, #4]
    17a8:	add	r1, pc, r1
    17ac:	ldr	r3, [pc, #3280]	; 2484 <main@@Base+0x1098>
    17b0:	add	r2, pc, r2
    17b4:	str	r1, [sp, #8]
    17b8:	add	r3, pc, r3
    17bc:	str	r2, [sp, #16]
    17c0:	str	r3, [sp, #20]
    17c4:	ldr	r1, [pc, #3260]	; 2488 <main@@Base+0x109c>
    17c8:	ldr	r2, [pc, #3260]	; 248c <main@@Base+0x10a0>
    17cc:	ldr	r3, [pc, #3260]	; 2490 <main@@Base+0x10a4>
    17d0:	add	r1, pc, r1
    17d4:	ldr	r0, [sp, #320]	; 0x140
    17d8:	add	r2, pc, r2
    17dc:	add	r3, pc, r3
    17e0:	str	r5, [sp]
    17e4:	str	r6, [sp, #12]
    17e8:	str	r4, [sp, #24]
    17ec:	str	r4, [sp, #28]
    17f0:	bl	1368 <ply_command_parser_add_command@plt>
    17f4:	ldr	r2, [pc, #3224]	; 2494 <main@@Base+0x10a8>
    17f8:	ldr	r3, [pc, #3224]	; 2498 <main@@Base+0x10ac>
    17fc:	ldr	r0, [sp, #320]	; 0x140
    1800:	add	r2, pc, r2
    1804:	ldr	r1, [sp, #188]	; 0xbc
    1808:	add	r3, pc, r3
    180c:	str	r5, [sp]
    1810:	str	r4, [sp, #4]
    1814:	bl	1368 <ply_command_parser_add_command@plt>
    1818:	ldr	r2, [pc, #3196]	; 249c <main@@Base+0x10b0>
    181c:	ldr	r3, [pc, #3196]	; 24a0 <main@@Base+0x10b4>
    1820:	ldr	r0, [sp, #320]	; 0x140
    1824:	add	r2, pc, r2
    1828:	ldr	r1, [sp, #192]	; 0xc0
    182c:	add	r3, pc, r3
    1830:	str	r5, [sp]
    1834:	str	r4, [sp, #4]
    1838:	bl	1368 <ply_command_parser_add_command@plt>
    183c:	ldr	r3, [pc, #3168]	; 24a4 <main@@Base+0x10b8>
    1840:	mov	r2, fp
    1844:	str	sl, [sp, #36]	; 0x24
    1848:	add	r3, pc, r3
    184c:	str	r3, [sp, #8]
    1850:	ldr	r3, [pc, #3152]	; 24a8 <main@@Base+0x10bc>
    1854:	ldr	ip, [pc, #3152]	; 24ac <main@@Base+0x10c0>
    1858:	add	r3, pc, r3
    185c:	str	r3, [sp, #20]
    1860:	ldr	r3, [pc, #3144]	; 24b0 <main@@Base+0x10c4>
    1864:	add	ip, pc, ip
    1868:	ldr	fp, [pc, #3140]	; 24b4 <main@@Base+0x10c8>
    186c:	add	r3, pc, r3
    1870:	str	r3, [sp, #28]
    1874:	ldr	r3, [pc, #3132]	; 24b8 <main@@Base+0x10cc>
    1878:	add	fp, pc, fp
    187c:	ldr	sl, [pc, #3128]	; 24bc <main@@Base+0x10d0>
    1880:	add	r3, pc, r3
    1884:	str	r3, [sp, #32]
    1888:	ldr	r3, [pc, #3120]	; 24c0 <main@@Base+0x10d4>
    188c:	add	sl, pc, sl
    1890:	ldr	r0, [sp, #320]	; 0x140
    1894:	ldr	r1, [sp, #196]	; 0xc4
    1898:	add	r3, pc, r3
    189c:	str	r7, [sp, #4]
    18a0:	str	ip, [sp, #16]
    18a4:	str	fp, [sp, #40]	; 0x28
    18a8:	str	sl, [sp, #44]	; 0x2c
    18ac:	str	r5, [sp]
    18b0:	str	r6, [sp, #12]
    18b4:	str	r6, [sp, #24]
    18b8:	str	r4, [sp, #48]	; 0x30
    18bc:	str	r4, [sp, #52]	; 0x34
    18c0:	str	ip, [sp, #180]	; 0xb4
    18c4:	bl	1368 <ply_command_parser_add_command@plt>
    18c8:	ldr	r2, [pc, #3060]	; 24c4 <main@@Base+0x10d8>
    18cc:	ldr	r3, [pc, #3060]	; 24c8 <main@@Base+0x10dc>
    18d0:	ldr	ip, [sp, #180]	; 0xb4
    18d4:	add	r2, pc, r2
    18d8:	add	r3, pc, r3
    18dc:	str	r2, [sp, #8]
    18e0:	str	r3, [sp, #20]
    18e4:	ldr	r1, [pc, #3040]	; 24cc <main@@Base+0x10e0>
    18e8:	ldr	r2, [pc, #3040]	; 24d0 <main@@Base+0x10e4>
    18ec:	ldr	r3, [pc, #3040]	; 24d4 <main@@Base+0x10e8>
    18f0:	add	r1, pc, r1
    18f4:	ldr	r0, [sp, #320]	; 0x140
    18f8:	add	r2, pc, r2
    18fc:	stm	sp, {r5, r7}
    1900:	add	r3, pc, r3
    1904:	str	ip, [sp, #16]
    1908:	str	fp, [sp, #28]
    190c:	str	sl, [sp, #32]
    1910:	str	r6, [sp, #12]
    1914:	str	r6, [sp, #24]
    1918:	str	r4, [sp, #36]	; 0x24
    191c:	str	r4, [sp, #40]	; 0x28
    1920:	bl	1368 <ply_command_parser_add_command@plt>
    1924:	ldr	ip, [pc, #2988]	; 24d8 <main@@Base+0x10ec>
    1928:	ldr	fp, [pc, #2988]	; 24dc <main@@Base+0x10f0>
    192c:	add	ip, pc, ip
    1930:	ldr	sl, [pc, #2984]	; 24e0 <main@@Base+0x10f4>
    1934:	ldr	r2, [pc, #2984]	; 24e4 <main@@Base+0x10f8>
    1938:	add	fp, pc, fp
    193c:	ldr	r3, [pc, #2980]	; 24e8 <main@@Base+0x10fc>
    1940:	mov	r1, ip
    1944:	ldr	r0, [sp, #320]	; 0x140
    1948:	add	sl, pc, sl
    194c:	add	r3, pc, r3
    1950:	add	r2, pc, r2
    1954:	str	r5, [sp]
    1958:	str	r6, [sp, #12]
    195c:	str	r4, [sp, #16]
    1960:	str	fp, [sp, #4]
    1964:	str	sl, [sp, #8]
    1968:	str	ip, [sp, #180]	; 0xb4
    196c:	bl	1368 <ply_command_parser_add_command@plt>
    1970:	ldr	ip, [sp, #180]	; 0xb4
    1974:	ldr	r2, [pc, #2928]	; 24ec <main@@Base+0x1100>
    1978:	ldr	r0, [sp, #320]	; 0x140
    197c:	mov	r1, ip
    1980:	add	r2, pc, r2
    1984:	bl	138c <ply_command_parser_add_command_alias@plt>
    1988:	ldr	r1, [pc, #2912]	; 24f0 <main@@Base+0x1104>
    198c:	ldr	r2, [pc, #2912]	; 24f4 <main@@Base+0x1108>
    1990:	ldr	r3, [pc, #2912]	; 24f8 <main@@Base+0x110c>
    1994:	add	r1, pc, r1
    1998:	ldr	r0, [sp, #320]	; 0x140
    199c:	add	r2, pc, r2
    19a0:	add	r3, pc, r3
    19a4:	stm	sp, {r5, fp}
    19a8:	str	sl, [sp, #8]
    19ac:	str	r6, [sp, #12]
    19b0:	str	r4, [sp, #16]
    19b4:	bl	1368 <ply_command_parser_add_command@plt>
    19b8:	ldr	r2, [pc, #2876]	; 24fc <main@@Base+0x1110>
    19bc:	ldr	r3, [pc, #2876]	; 2500 <main@@Base+0x1114>
    19c0:	add	r2, pc, r2
    19c4:	stm	sp, {r5, r7}
    19c8:	add	r3, pc, r3
    19cc:	str	r2, [sp, #8]
    19d0:	str	r3, [sp, #20]
    19d4:	ldr	r7, [pc, #2856]	; 2504 <main@@Base+0x1118>
    19d8:	ldr	r1, [pc, #2856]	; 2508 <main@@Base+0x111c>
    19dc:	ldr	r2, [pc, #2856]	; 250c <main@@Base+0x1120>
    19e0:	add	r7, pc, r7
    19e4:	ldr	r3, [pc, #2852]	; 2510 <main@@Base+0x1124>
    19e8:	add	r1, pc, r1
    19ec:	ldr	r0, [sp, #320]	; 0x140
    19f0:	add	r2, pc, r2
    19f4:	add	r3, pc, r3
    19f8:	str	r6, [sp, #12]
    19fc:	str	r6, [sp, #24]
    1a00:	str	r4, [sp, #28]
    1a04:	str	r7, [sp, #16]
    1a08:	bl	1368 <ply_command_parser_add_command@plt>
    1a0c:	ldr	r3, [pc, #2816]	; 2514 <main@@Base+0x1128>
    1a10:	ldr	r0, [sp, #320]	; 0x140
    1a14:	mov	r2, r9
    1a18:	add	r3, pc, r3
    1a1c:	str	r3, [sp, #8]
    1a20:	ldr	r3, [pc, #2800]	; 2518 <main@@Base+0x112c>
    1a24:	ldr	r1, [sp, #200]	; 0xc8
    1a28:	add	r3, pc, r3
    1a2c:	str	r5, [sp]
    1a30:	str	r7, [sp, #4]
    1a34:	str	r6, [sp, #12]
    1a38:	str	r4, [sp, #16]
    1a3c:	bl	1368 <ply_command_parser_add_command@plt>
    1a40:	ldr	r1, [pc, #2772]	; 251c <main@@Base+0x1130>
    1a44:	ldr	r2, [pc, #2772]	; 2520 <main@@Base+0x1134>
    1a48:	ldr	r3, [pc, #2772]	; 2524 <main@@Base+0x1138>
    1a4c:	add	r1, pc, r1
    1a50:	ldr	r0, [sp, #320]	; 0x140
    1a54:	add	r2, pc, r2
    1a58:	add	r3, pc, r3
    1a5c:	str	r5, [sp]
    1a60:	str	r4, [sp, #4]
    1a64:	bl	1368 <ply_command_parser_add_command@plt>
    1a68:	ldr	r1, [pc, #2744]	; 2528 <main@@Base+0x113c>
    1a6c:	ldr	r2, [pc, #2744]	; 252c <main@@Base+0x1140>
    1a70:	ldr	r3, [pc, #2744]	; 2530 <main@@Base+0x1144>
    1a74:	add	r1, pc, r1
    1a78:	ldr	r0, [sp, #320]	; 0x140
    1a7c:	add	r2, pc, r2
    1a80:	add	r3, pc, r3
    1a84:	str	r5, [sp]
    1a88:	str	r4, [sp, #4]
    1a8c:	bl	1368 <ply_command_parser_add_command@plt>
    1a90:	ldr	r1, [pc, #2716]	; 2534 <main@@Base+0x1148>
    1a94:	ldr	r3, [pc, #2716]	; 2538 <main@@Base+0x114c>
    1a98:	mov	r2, r8
    1a9c:	ldr	r0, [sp, #320]	; 0x140
    1aa0:	add	r1, pc, r1
    1aa4:	add	r3, pc, r3
    1aa8:	str	r5, [sp]
    1aac:	str	r4, [sp, #4]
    1ab0:	bl	1368 <ply_command_parser_add_command@plt>
    1ab4:	ldr	r1, [pc, #2688]	; 253c <main@@Base+0x1150>
    1ab8:	ldr	r2, [pc, #2688]	; 2540 <main@@Base+0x1154>
    1abc:	ldr	r3, [pc, #2688]	; 2544 <main@@Base+0x1158>
    1ac0:	add	r1, pc, r1
    1ac4:	ldr	r0, [sp, #320]	; 0x140
    1ac8:	add	r2, pc, r2
    1acc:	add	r3, pc, r3
    1ad0:	str	r5, [sp]
    1ad4:	str	r4, [sp, #4]
    1ad8:	bl	1368 <ply_command_parser_add_command@plt>
    1adc:	ldr	r1, [pc, #2660]	; 2548 <main@@Base+0x115c>
    1ae0:	ldr	r2, [pc, #2660]	; 254c <main@@Base+0x1160>
    1ae4:	ldr	r3, [pc, #2660]	; 2550 <main@@Base+0x1164>
    1ae8:	add	r1, pc, r1
    1aec:	ldr	r0, [sp, #320]	; 0x140
    1af0:	add	r2, pc, r2
    1af4:	add	r3, pc, r3
    1af8:	str	r5, [sp]
    1afc:	str	r4, [sp, #4]
    1b00:	bl	1368 <ply_command_parser_add_command@plt>
    1b04:	ldr	r3, [pc, #2632]	; 2554 <main@@Base+0x1168>
    1b08:	ldr	ip, [pc, #2632]	; 2558 <main@@Base+0x116c>
    1b0c:	add	r3, pc, r3
    1b10:	str	r3, [sp, #8]
    1b14:	ldr	r3, [pc, #2624]	; 255c <main@@Base+0x1170>
    1b18:	add	ip, pc, ip
    1b1c:	ldr	r0, [sp, #320]	; 0x140
    1b20:	ldr	r2, [sp, #204]	; 0xcc
    1b24:	add	r3, pc, r3
    1b28:	ldr	r1, [sp, #184]	; 0xb8
    1b2c:	str	ip, [sp, #4]
    1b30:	str	r5, [sp]
    1b34:	str	r4, [sp, #12]
    1b38:	str	r4, [sp, #16]
    1b3c:	bl	1368 <ply_command_parser_add_command@plt>
    1b40:	ldr	r2, [sp, #260]	; 0x104
    1b44:	ldr	r3, [sp, #256]	; 0x100
    1b48:	ldr	r0, [sp, #320]	; 0x140
    1b4c:	ldr	r1, [sp, #312]	; 0x138
    1b50:	bl	13b0 <ply_command_parser_parse_arguments@plt>
    1b54:	cmp	r0, r4
    1b58:	beq	1de4 <main@@Base+0x9f8>
    1b5c:	ldr	fp, [sp, #212]	; 0xd4
    1b60:	add	r2, sp, #280	; 0x118
    1b64:	ldr	sl, [sp, #208]	; 0xd0
    1b68:	add	r0, sp, #276	; 0x114
    1b6c:	ldr	ip, [sp, #184]	; 0xb8
    1b70:	sub	r6, r2, #3
    1b74:	str	fp, [sp, #12]
    1b78:	sub	r7, r2, #2
    1b7c:	ldr	fp, [sp, #240]	; 0xf0
    1b80:	sub	r9, r0, #2
    1b84:	str	sl, [sp, #4]
    1b88:	ldr	sl, [sp, #236]	; 0xec
    1b8c:	str	fp, [sp, #36]	; 0x24
    1b90:	ldr	fp, [sp, #192]	; 0xc0
    1b94:	str	sl, [sp, #28]
    1b98:	ldr	sl, [sp, #188]	; 0xbc
    1b9c:	str	fp, [sp, #60]	; 0x3c
    1ba0:	ldr	fp, [sp, #200]	; 0xc8
    1ba4:	str	sl, [sp, #52]	; 0x34
    1ba8:	ldr	sl, [sp, #196]	; 0xc4
    1bac:	str	fp, [sp, #76]	; 0x4c
    1bb0:	ldr	fp, [sp, #252]	; 0xfc
    1bb4:	str	ip, [sp, #20]
    1bb8:	ldr	ip, [sp, #244]	; 0xf4
    1bbc:	str	sl, [sp, #68]	; 0x44
    1bc0:	str	fp, [sp, #92]	; 0x5c
    1bc4:	ldr	sl, [sp, #216]	; 0xd8
    1bc8:	ldr	fp, [sp, #248]	; 0xf8
    1bcc:	str	ip, [sp, #44]	; 0x2c
    1bd0:	add	ip, sp, #272	; 0x110
    1bd4:	ldr	r3, [sp, #232]	; 0xe8
    1bd8:	sub	lr, ip, #3
    1bdc:	ldr	r1, [sp, #228]	; 0xe4
    1be0:	sub	r8, ip, #2
    1be4:	str	sl, [sp, #84]	; 0x54
    1be8:	sub	sl, r0, #3
    1bec:	str	r2, [sp, #88]	; 0x58
    1bf0:	add	r2, sp, #268	; 0x10c
    1bf4:	str	ip, [sp, #48]	; 0x30
    1bf8:	str	fp, [sp, #100]	; 0x64
    1bfc:	str	r4, [sp, #108]	; 0x6c
    1c00:	str	r6, [sp]
    1c04:	str	r7, [sp, #104]	; 0x68
    1c08:	str	lr, [sp, #24]
    1c0c:	str	r0, [sp, #96]	; 0x60
    1c10:	add	r0, sp, #276	; 0x114
    1c14:	add	r0, r0, #3
    1c18:	str	r0, [sp, #8]
    1c1c:	add	r0, sp, #284	; 0x11c
    1c20:	str	r0, [sp, #16]
    1c24:	add	r0, sp, #268	; 0x10c
    1c28:	str	r8, [sp, #32]
    1c2c:	add	r0, r0, #3
    1c30:	str	r0, [sp, #40]	; 0x28
    1c34:	add	r0, sp, #272	; 0x110
    1c38:	str	r9, [sp, #56]	; 0x38
    1c3c:	add	r0, r0, #3
    1c40:	str	sl, [sp, #72]	; 0x48
    1c44:	str	r0, [sp, #64]	; 0x40
    1c48:	add	r0, sp, #288	; 0x120
    1c4c:	str	r0, [sp, #80]	; 0x50
    1c50:	ldr	r0, [sp, #320]	; 0x140
    1c54:	bl	10d4 <ply_command_parser_get_options@plt>
    1c58:	ldrb	r3, [sp, #268]	; 0x10c
    1c5c:	cmp	r3, #0
    1c60:	bne	1e60 <main@@Base+0xa74>
    1c64:	ldr	ip, [sp, #256]	; 0x100
    1c68:	cmp	ip, #1
    1c6c:	ble	1e2c <main@@Base+0xa40>
    1c70:	bl	1278 <__errno_location@plt>
    1c74:	mov	r4, r0
    1c78:	ldr	r6, [r0]
    1c7c:	bl	1320 <ply_logger_get_error_default@plt>
    1c80:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1c84:	cmp	r0, #0
    1c88:	bne	1e90 <main@@Base+0xaa4>
    1c8c:	ldr	r0, [pc, #2252]	; 2560 <main@@Base+0x1174>
    1c90:	mov	r1, #0
    1c94:	add	r0, pc, r0
    1c98:	bl	1200 <open64@plt>
    1c9c:	subs	r6, r0, #0
    1ca0:	blt	1ed8 <main@@Base+0xaec>
    1ca4:	ldr	r7, [r4]
    1ca8:	bl	1320 <ply_logger_get_error_default@plt>
    1cac:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1cb0:	cmp	r0, #0
    1cb4:	bne	2080 <main@@Base+0xc94>
    1cb8:	add	r7, sp, #324	; 0x144
    1cbc:	mov	r0, r6
    1cc0:	mov	r2, #512	; 0x200
    1cc4:	mov	r1, r7
    1cc8:	bl	10e0 <read@plt>
    1ccc:	cmp	r0, #0
    1cd0:	blt	20c8 <main@@Base+0xcdc>
    1cd4:	ldr	r8, [r4]
    1cd8:	bl	1320 <ply_logger_get_error_default@plt>
    1cdc:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1ce0:	cmp	r0, #0
    1ce4:	bne	212c <main@@Base+0xd40>
    1ce8:	mov	r0, r6
    1cec:	bl	13bc <close@plt>
    1cf0:	ldr	r1, [pc, #2156]	; 2564 <main@@Base+0x1178>
    1cf4:	mov	r0, r7
    1cf8:	add	r1, pc, r1
    1cfc:	bl	10b0 <strstr@plt>
    1d00:	cmp	r0, #0
    1d04:	beq	1d18 <main@@Base+0x92c>
    1d08:	bl	1320 <ply_logger_get_error_default@plt>
    1d0c:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1d10:	cmp	r0, #0
    1d14:	beq	2198 <main@@Base+0xdac>
    1d18:	ldrb	r3, [sp, #277]	; 0x115
    1d1c:	cmp	r3, #0
    1d20:	bne	1fe0 <main@@Base+0xbf4>
    1d24:	ldrb	r3, [sp, #279]	; 0x117
    1d28:	cmp	r3, #0
    1d2c:	bne	1fcc <main@@Base+0xbe0>
    1d30:	ldr	r1, [pc, #2096]	; 2568 <main@@Base+0x117c>
    1d34:	mov	r2, r5
    1d38:	ldr	r0, [sp, #316]	; 0x13c
    1d3c:	add	r1, pc, r1
    1d40:	bl	349c <main@@Base+0x20b0>
    1d44:	cmp	r0, #0
    1d48:	bne	1f34 <main@@Base+0xb48>
    1d4c:	ldr	r6, [r4]
    1d50:	bl	1320 <ply_logger_get_error_default@plt>
    1d54:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1d58:	cmp	r0, #0
    1d5c:	bne	2018 <main@@Base+0xc2c>
    1d60:	ldrb	r3, [sp, #270]	; 0x10e
    1d64:	cmp	r3, #0
    1d68:	bne	1ffc <main@@Base+0xc10>
    1d6c:	ldrb	r6, [sp, #271]	; 0x10f
    1d70:	cmp	r6, #0
    1d74:	bne	21a4 <main@@Base+0xdb8>
    1d78:	ldrb	r3, [sp, #276]	; 0x114
    1d7c:	cmp	r3, #0
    1d80:	beq	1f34 <main@@Base+0xb48>
    1d84:	ldr	r5, [r4]
    1d88:	bl	1320 <ply_logger_get_error_default@plt>
    1d8c:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1d90:	cmp	r0, #0
    1d94:	beq	1e10 <main@@Base+0xa24>
    1d98:	bl	1320 <ply_logger_get_error_default@plt>
    1d9c:	bl	1134 <ply_logger_flush@plt>
    1da0:	str	r5, [r4]
    1da4:	bl	1320 <ply_logger_get_error_default@plt>
    1da8:	ldr	ip, [pc, #1980]	; 256c <main@@Base+0x1180>
    1dac:	ldr	r1, [pc, #1980]	; 2570 <main@@Base+0x1184>
    1db0:	movw	r3, #1209	; 0x4b9
    1db4:	ldr	r2, [pc, #1976]	; 2574 <main@@Base+0x1188>
    1db8:	add	ip, pc, ip
    1dbc:	add	ip, ip, #216	; 0xd8
    1dc0:	add	r1, pc, r1
    1dc4:	add	r2, pc, r2
    1dc8:	str	ip, [sp]
    1dcc:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    1dd0:	bl	1320 <ply_logger_get_error_default@plt>
    1dd4:	bl	1134 <ply_logger_flush@plt>
    1dd8:	str	r5, [r4]
    1ddc:	mov	r0, r6
    1de0:	b	1e10 <main@@Base+0xa24>
    1de4:	ldr	r0, [sp, #320]	; 0x140
    1de8:	bl	11f4 <ply_command_parser_get_help_string@plt>
    1dec:	mov	r4, r0
    1df0:	bl	1320 <ply_logger_get_error_default@plt>
    1df4:	ldr	r1, [pc, #1916]	; 2578 <main@@Base+0x118c>
    1df8:	mov	r2, r4
    1dfc:	add	r1, pc, r1
    1e00:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    1e04:	mov	r0, r4
    1e08:	bl	1110 <free@plt>
    1e0c:	mov	r0, #1
    1e10:	ldr	ip, [sp, #224]	; 0xe0
    1e14:	ldr	r2, [sp, #836]	; 0x344
    1e18:	ldr	r3, [ip]
    1e1c:	cmp	r2, r3
    1e20:	bne	2348 <main@@Base+0xf5c>
    1e24:	add	sp, sp, #844	; 0x34c
    1e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e2c:	ldr	r0, [sp, #320]	; 0x140
    1e30:	bl	11f4 <ply_command_parser_get_help_string@plt>
    1e34:	mov	r4, r0
    1e38:	ldr	r3, [pc, #1852]	; 257c <main@@Base+0x1190>
    1e3c:	mov	r0, r4
    1e40:	ldr	fp, [sp, #220]	; 0xdc
    1e44:	ldr	r3, [fp, r3]
    1e48:	ldr	r1, [r3]
    1e4c:	bl	1398 <fputs@plt>
    1e50:	mov	r0, r4
    1e54:	bl	1110 <free@plt>
    1e58:	mov	r0, #0
    1e5c:	b	1e10 <main@@Base+0xa24>
    1e60:	ldr	r0, [sp, #320]	; 0x140
    1e64:	bl	11f4 <ply_command_parser_get_help_string@plt>
    1e68:	ldr	sl, [sp, #256]	; 0x100
    1e6c:	cmp	sl, #1
    1e70:	mov	r4, r0
    1e74:	ble	1e38 <main@@Base+0xa4c>
    1e78:	ldr	r1, [pc, #1792]	; 2580 <main@@Base+0x1194>
    1e7c:	mov	r2, r4
    1e80:	mov	r0, #1
    1e84:	add	r1, pc, r1
    1e88:	bl	12cc <__printf_chk@plt>
    1e8c:	b	1e50 <main@@Base+0xa64>
    1e90:	bl	1320 <ply_logger_get_error_default@plt>
    1e94:	bl	1134 <ply_logger_flush@plt>
    1e98:	str	r6, [r4]
    1e9c:	bl	1320 <ply_logger_get_error_default@plt>
    1ea0:	ldr	ip, [pc, #1756]	; 2584 <main@@Base+0x1198>
    1ea4:	ldr	r1, [pc, #1756]	; 2588 <main@@Base+0x119c>
    1ea8:	movw	r3, #763	; 0x2fb
    1eac:	ldr	r2, [pc, #1752]	; 258c <main@@Base+0x11a0>
    1eb0:	add	ip, pc, ip
    1eb4:	add	ip, ip, #192	; 0xc0
    1eb8:	add	r1, pc, r1
    1ebc:	add	r2, pc, r2
    1ec0:	str	ip, [sp]
    1ec4:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    1ec8:	bl	1320 <ply_logger_get_error_default@plt>
    1ecc:	bl	1134 <ply_logger_flush@plt>
    1ed0:	str	r6, [r4]
    1ed4:	b	1c8c <main@@Base+0x8a0>
    1ed8:	ldr	r6, [r4]
    1edc:	bl	1320 <ply_logger_get_error_default@plt>
    1ee0:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1ee4:	cmp	r0, #0
    1ee8:	beq	1d18 <main@@Base+0x92c>
    1eec:	bl	1320 <ply_logger_get_error_default@plt>
    1ef0:	bl	1134 <ply_logger_flush@plt>
    1ef4:	str	r6, [r4]
    1ef8:	bl	1320 <ply_logger_get_error_default@plt>
    1efc:	ldr	ip, [pc, #1676]	; 2590 <main@@Base+0x11a4>
    1f00:	ldr	r1, [pc, #1676]	; 2594 <main@@Base+0x11a8>
    1f04:	mov	r3, #768	; 0x300
    1f08:	ldr	r2, [pc, #1672]	; 2598 <main@@Base+0x11ac>
    1f0c:	add	ip, pc, ip
    1f10:	add	ip, ip, #192	; 0xc0
    1f14:	add	r1, pc, r1
    1f18:	add	r2, pc, r2
    1f1c:	str	ip, [sp]
    1f20:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    1f24:	bl	1320 <ply_logger_get_error_default@plt>
    1f28:	bl	1134 <ply_logger_flush@plt>
    1f2c:	str	r6, [r4]
    1f30:	b	1d18 <main@@Base+0x92c>
    1f34:	ldr	r0, [sp, #316]	; 0x13c
    1f38:	ldr	r1, [sp, #312]	; 0x138
    1f3c:	bl	4160 <main@@Base+0x2d74>
    1f40:	ldrb	r3, [sp, #274]	; 0x112
    1f44:	cmp	r3, #0
    1f48:	bne	2178 <main@@Base+0xd8c>
    1f4c:	ldrb	r1, [sp, #275]	; 0x113
    1f50:	cmp	r1, #0
    1f54:	bne	2060 <main@@Base+0xc74>
    1f58:	ldrb	r3, [sp, #269]	; 0x10d
    1f5c:	cmp	r3, #0
    1f60:	bne	2200 <main@@Base+0xe14>
    1f64:	ldrb	r3, [sp, #270]	; 0x10e
    1f68:	cmp	r3, #0
    1f6c:	bne	2220 <main@@Base+0xe34>
    1f70:	ldrb	r3, [sp, #271]	; 0x10f
    1f74:	cmp	r3, #0
    1f78:	bne	2240 <main@@Base+0xe54>
    1f7c:	ldr	r4, [sp, #280]	; 0x118
    1f80:	cmp	r4, #0
    1f84:	beq	2294 <main@@Base+0xea8>
    1f88:	ldr	r2, [pc, #1548]	; 259c <main@@Base+0x11b0>
    1f8c:	mov	r1, r4
    1f90:	ldr	r3, [pc, #1544]	; 25a0 <main@@Base+0x11b4>
    1f94:	str	r5, [sp]
    1f98:	add	r2, pc, r2
    1f9c:	ldr	r0, [sp, #316]	; 0x13c
    1fa0:	add	r3, pc, r3
    1fa4:	bl	37ac <main@@Base+0x23c0>
    1fa8:	ldr	r0, [sp, #312]	; 0x138
    1fac:	bl	11e8 <ply_event_loop_run@plt>
    1fb0:	mov	r4, r0
    1fb4:	ldr	r0, [sp, #316]	; 0x13c
    1fb8:	bl	3468 <main@@Base+0x207c>
    1fbc:	ldr	r0, [sp, #312]	; 0x138
    1fc0:	bl	10f8 <ply_event_loop_free@plt>
    1fc4:	mov	r0, r4
    1fc8:	b	1e10 <main@@Base+0xa24>
    1fcc:	ldr	r0, [pc, #1488]	; 25a4 <main@@Base+0x11b8>
    1fd0:	add	r0, pc, r0
    1fd4:	bl	1218 <puts@plt>
    1fd8:	mov	r0, #0
    1fdc:	b	1e10 <main@@Base+0xa24>
    1fe0:	bl	1320 <ply_logger_get_error_default@plt>
    1fe4:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    1fe8:	cmp	r0, #0
    1fec:	bne	1d24 <main@@Base+0x938>
    1ff0:	bl	1320 <ply_logger_get_error_default@plt>
    1ff4:	bl	11ac <ply_logger_toggle_tracing@plt>
    1ff8:	b	1d24 <main@@Base+0x938>
    1ffc:	ldr	r5, [r4]
    2000:	bl	1320 <ply_logger_get_error_default@plt>
    2004:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    2008:	cmp	r0, #0
    200c:	bne	2260 <main@@Base+0xe74>
    2010:	mov	r0, #1
    2014:	b	1e10 <main@@Base+0xa24>
    2018:	bl	1320 <ply_logger_get_error_default@plt>
    201c:	bl	1134 <ply_logger_flush@plt>
    2020:	str	r6, [r4]
    2024:	bl	1320 <ply_logger_get_error_default@plt>
    2028:	ldr	ip, [pc, #1400]	; 25a8 <main@@Base+0x11bc>
    202c:	ldr	r1, [pc, #1400]	; 25ac <main@@Base+0x11c0>
    2030:	movw	r3, #1195	; 0x4ab
    2034:	ldr	r2, [pc, #1396]	; 25b0 <main@@Base+0x11c4>
    2038:	add	ip, pc, ip
    203c:	add	ip, ip, #216	; 0xd8
    2040:	add	r1, pc, r1
    2044:	add	r2, pc, r2
    2048:	str	ip, [sp]
    204c:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    2050:	bl	1320 <ply_logger_get_error_default@plt>
    2054:	bl	1134 <ply_logger_flush@plt>
    2058:	str	r6, [r4]
    205c:	b	1d60 <main@@Base+0x974>
    2060:	ldr	r1, [pc, #1356]	; 25b4 <main@@Base+0x11c8>
    2064:	mov	r3, r5
    2068:	ldr	r2, [pc, #1352]	; 25b8 <main@@Base+0x11cc>
    206c:	ldr	r0, [sp, #316]	; 0x13c
    2070:	add	r1, pc, r1
    2074:	add	r2, pc, r2
    2078:	bl	3df8 <main@@Base+0x2a0c>
    207c:	b	1fa8 <main@@Base+0xbbc>
    2080:	bl	1320 <ply_logger_get_error_default@plt>
    2084:	bl	1134 <ply_logger_flush@plt>
    2088:	str	r7, [r4]
    208c:	bl	1320 <ply_logger_get_error_default@plt>
    2090:	ldr	ip, [pc, #1316]	; 25bc <main@@Base+0x11d0>
    2094:	ldr	r1, [pc, #1316]	; 25c0 <main@@Base+0x11d4>
    2098:	mov	r3, #772	; 0x304
    209c:	ldr	r2, [pc, #1312]	; 25c4 <main@@Base+0x11d8>
    20a0:	add	ip, pc, ip
    20a4:	add	ip, ip, #192	; 0xc0
    20a8:	add	r1, pc, r1
    20ac:	add	r2, pc, r2
    20b0:	str	ip, [sp]
    20b4:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    20b8:	bl	1320 <ply_logger_get_error_default@plt>
    20bc:	bl	1134 <ply_logger_flush@plt>
    20c0:	str	r7, [r4]
    20c4:	b	1cb8 <main@@Base+0x8cc>
    20c8:	ldr	r7, [r4]
    20cc:	bl	1320 <ply_logger_get_error_default@plt>
    20d0:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    20d4:	cmp	r0, #0
    20d8:	beq	2120 <main@@Base+0xd34>
    20dc:	bl	1320 <ply_logger_get_error_default@plt>
    20e0:	bl	1134 <ply_logger_flush@plt>
    20e4:	str	r7, [r4]
    20e8:	bl	1320 <ply_logger_get_error_default@plt>
    20ec:	ldr	ip, [pc, #1236]	; 25c8 <main@@Base+0x11dc>
    20f0:	ldr	r1, [pc, #1236]	; 25cc <main@@Base+0x11e0>
    20f4:	movw	r3, #775	; 0x307
    20f8:	ldr	r2, [pc, #1232]	; 25d0 <main@@Base+0x11e4>
    20fc:	add	ip, pc, ip
    2100:	add	ip, ip, #192	; 0xc0
    2104:	add	r1, pc, r1
    2108:	add	r2, pc, r2
    210c:	str	ip, [sp]
    2110:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    2114:	bl	1320 <ply_logger_get_error_default@plt>
    2118:	bl	1134 <ply_logger_flush@plt>
    211c:	str	r7, [r4]
    2120:	mov	r0, r6
    2124:	bl	13bc <close@plt>
    2128:	b	1d18 <main@@Base+0x92c>
    212c:	bl	1320 <ply_logger_get_error_default@plt>
    2130:	bl	1134 <ply_logger_flush@plt>
    2134:	str	r8, [r4]
    2138:	bl	1320 <ply_logger_get_error_default@plt>
    213c:	ldr	r2, [pc, #1168]	; 25d4 <main@@Base+0x11e8>
    2140:	ldr	r1, [pc, #1168]	; 25d8 <main@@Base+0x11ec>
    2144:	mov	r3, #780	; 0x30c
    2148:	add	r2, pc, r2
    214c:	str	r7, [sp, #4]
    2150:	add	r2, r2, #192	; 0xc0
    2154:	str	r2, [sp]
    2158:	ldr	r2, [pc, #1148]	; 25dc <main@@Base+0x11f0>
    215c:	add	r1, pc, r1
    2160:	add	r2, pc, r2
    2164:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    2168:	bl	1320 <ply_logger_get_error_default@plt>
    216c:	bl	1134 <ply_logger_flush@plt>
    2170:	str	r8, [r4]
    2174:	b	1ce8 <main@@Base+0x8fc>
    2178:	ldr	r1, [pc, #1120]	; 25e0 <main@@Base+0x11f4>
    217c:	mov	r3, r5
    2180:	ldr	r2, [pc, #1116]	; 25e4 <main@@Base+0x11f8>
    2184:	ldr	r0, [sp, #316]	; 0x13c
    2188:	add	r1, pc, r1
    218c:	add	r2, pc, r2
    2190:	bl	3d8c <main@@Base+0x29a0>
    2194:	b	1fa8 <main@@Base+0xbbc>
    2198:	bl	1320 <ply_logger_get_error_default@plt>
    219c:	bl	11ac <ply_logger_toggle_tracing@plt>
    21a0:	b	1d18 <main@@Base+0x92c>
    21a4:	ldr	r5, [r4]
    21a8:	bl	1320 <ply_logger_get_error_default@plt>
    21ac:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    21b0:	cmp	r0, #0
    21b4:	beq	2010 <main@@Base+0xc24>
    21b8:	bl	1320 <ply_logger_get_error_default@plt>
    21bc:	bl	1134 <ply_logger_flush@plt>
    21c0:	str	r5, [r4]
    21c4:	bl	1320 <ply_logger_get_error_default@plt>
    21c8:	ldr	ip, [pc, #1048]	; 25e8 <main@@Base+0x11fc>
    21cc:	ldr	r1, [pc, #1048]	; 25ec <main@@Base+0x1200>
    21d0:	movw	r3, #1204	; 0x4b4
    21d4:	ldr	r2, [pc, #1044]	; 25f0 <main@@Base+0x1204>
    21d8:	add	ip, pc, ip
    21dc:	add	r1, pc, r1
    21e0:	add	ip, ip, #216	; 0xd8
    21e4:	add	r2, pc, r2
    21e8:	str	ip, [sp]
    21ec:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    21f0:	bl	1320 <ply_logger_get_error_default@plt>
    21f4:	bl	1134 <ply_logger_flush@plt>
    21f8:	str	r5, [r4]
    21fc:	b	2010 <main@@Base+0xc24>
    2200:	ldr	r2, [pc, #1004]	; 25f4 <main@@Base+0x1208>
    2204:	ldr	r3, [pc, #1004]	; 25f8 <main@@Base+0x120c>
    2208:	str	r5, [sp]
    220c:	add	r2, pc, r2
    2210:	ldr	r0, [sp, #316]	; 0x13c
    2214:	add	r3, pc, r3
    2218:	bl	3f40 <main@@Base+0x2b54>
    221c:	b	1fa8 <main@@Base+0xbbc>
    2220:	ldr	r1, [pc, #980]	; 25fc <main@@Base+0x1210>
    2224:	mov	r3, r5
    2228:	ldr	r2, [pc, #976]	; 2600 <main@@Base+0x1214>
    222c:	ldr	r0, [sp, #316]	; 0x13c
    2230:	add	r1, pc, r1
    2234:	add	r2, pc, r2
    2238:	bl	3740 <main@@Base+0x2354>
    223c:	b	1fa8 <main@@Base+0xbbc>
    2240:	ldr	r1, [pc, #956]	; 2604 <main@@Base+0x1218>
    2244:	mov	r3, r5
    2248:	ldr	r2, [pc, #952]	; 2608 <main@@Base+0x121c>
    224c:	ldr	r0, [sp, #316]	; 0x13c
    2250:	add	r1, pc, r1
    2254:	add	r2, pc, r2
    2258:	bl	4048 <main@@Base+0x2c5c>
    225c:	b	1fa8 <main@@Base+0xbbc>
    2260:	bl	1320 <ply_logger_get_error_default@plt>
    2264:	bl	1134 <ply_logger_flush@plt>
    2268:	str	r5, [r4]
    226c:	bl	1320 <ply_logger_get_error_default@plt>
    2270:	ldr	ip, [pc, #916]	; 260c <main@@Base+0x1220>
    2274:	ldr	r1, [pc, #916]	; 2610 <main@@Base+0x1224>
    2278:	movw	r3, #1199	; 0x4af
    227c:	ldr	r2, [pc, #912]	; 2614 <main@@Base+0x1228>
    2280:	add	ip, pc, ip
    2284:	add	r1, pc, r1
    2288:	add	ip, ip, #216	; 0xd8
    228c:	add	r2, pc, r2
    2290:	b	21e8 <main@@Base+0xdfc>
    2294:	ldrb	r3, [sp, #273]	; 0x111
    2298:	cmp	r3, #0
    229c:	bne	22cc <main@@Base+0xee0>
    22a0:	ldr	r1, [sp, #288]	; 0x120
    22a4:	cmp	r1, #0
    22a8:	beq	2310 <main@@Base+0xf24>
    22ac:	ldr	r2, [pc, #868]	; 2618 <main@@Base+0x122c>
    22b0:	ldr	r3, [pc, #868]	; 261c <main@@Base+0x1230>
    22b4:	str	r5, [sp]
    22b8:	add	r2, pc, r2
    22bc:	ldr	r0, [sp, #316]	; 0x13c
    22c0:	add	r3, pc, r3
    22c4:	bl	3d1c <main@@Base+0x2930>
    22c8:	b	1fa8 <main@@Base+0xbbc>
    22cc:	add	r6, sp, #292	; 0x124
    22d0:	mov	r1, r4
    22d4:	mov	r2, #20
    22d8:	mov	r0, r6
    22dc:	bl	12b4 <memset@plt>
    22e0:	ldr	r2, [pc, #824]	; 2620 <main@@Base+0x1234>
    22e4:	ldr	r3, [pc, #824]	; 2624 <main@@Base+0x1238>
    22e8:	mov	r1, r4
    22ec:	str	r6, [sp]
    22f0:	add	r2, pc, r2
    22f4:	ldr	r0, [sp, #316]	; 0x13c
    22f8:	add	r3, pc, r3
    22fc:	mov	ip, #1
    2300:	str	r5, [sp, #292]	; 0x124
    2304:	str	ip, [sp, #304]	; 0x130
    2308:	bl	3b60 <main@@Base+0x2774>
    230c:	b	1fa8 <main@@Base+0xbbc>
    2310:	ldrb	r3, [sp, #272]	; 0x110
    2314:	cmp	r3, #0
    2318:	bne	234c <main@@Base+0xf60>
    231c:	ldr	r1, [sp, #284]	; 0x11c
    2320:	cmp	r1, #0
    2324:	beq	236c <main@@Base+0xf80>
    2328:	ldr	r2, [pc, #760]	; 2628 <main@@Base+0x123c>
    232c:	ldr	r3, [pc, #760]	; 262c <main@@Base+0x1240>
    2330:	str	r5, [sp]
    2334:	add	r2, pc, r2
    2338:	ldr	r0, [sp, #316]	; 0x13c
    233c:	add	r3, pc, r3
    2340:	bl	38fc <main@@Base+0x2510>
    2344:	b	1fa8 <main@@Base+0xbbc>
    2348:	bl	1188 <__stack_chk_fail@plt>
    234c:	ldr	r1, [pc, #732]	; 2630 <main@@Base+0x1244>
    2350:	mov	r3, r5
    2354:	ldr	r2, [pc, #728]	; 2634 <main@@Base+0x1248>
    2358:	ldr	r0, [sp, #316]	; 0x13c
    235c:	add	r1, pc, r1
    2360:	add	r2, pc, r2
    2364:	bl	3af4 <main@@Base+0x2708>
    2368:	b	1fa8 <main@@Base+0xbbc>
    236c:	ldrb	r3, [sp, #276]	; 0x114
    2370:	cmp	r3, #0
    2374:	bne	1fa8 <main@@Base+0xbbc>
    2378:	ldrb	r3, [sp, #278]	; 0x116
    237c:	cmp	r3, #0
    2380:	beq	1fa8 <main@@Base+0xbbc>
    2384:	ldr	r1, [pc, #684]	; 2638 <main@@Base+0x124c>
    2388:	mov	r3, r5
    238c:	ldr	r2, [pc, #680]	; 263c <main@@Base+0x1250>
    2390:	ldr	r0, [sp, #316]	; 0x13c
    2394:	add	r1, pc, r1
    2398:	add	r2, pc, r2
    239c:	bl	4074 <main@@Base+0x2c88>
    23a0:	b	1fa8 <main@@Base+0xbbc>
    23a4:	andeq	r6, r1, r8, lsr #21
    23a8:	andeq	r0, r0, r0, lsr r1
    23ac:	andeq	r5, r0, r0, lsr r6
    23b0:	andeq	r5, r0, r0, asr r6
    23b4:	andeq	r5, r0, r4, lsl #13
    23b8:	ldrdeq	r5, [r0], -r4
    23bc:	muleq	r0, ip, r6
    23c0:	andeq	r5, r0, r8, lsr #13
    23c4:	andeq	r5, r0, r8, asr #13
    23c8:	andeq	r5, r0, r0, lsr r7
    23cc:	andeq	r5, r0, r4, ror #13
    23d0:	andeq	r5, r0, ip, asr r7
    23d4:	andeq	r5, r0, r8, ror r7
    23d8:	andeq	r5, r0, r0, lsr #14
    23dc:	andeq	r5, r0, ip, ror #10
    23e0:	andeq	r5, r0, ip, lsl #15
    23e4:	andeq	r5, r0, r0, lsr r7
    23e8:			; <UNDEFINED> instruction: 0x000057b0
    23ec:	andeq	r5, r0, r8, asr #14
    23f0:	andeq	r5, r0, ip, lsr r1
    23f4:	muleq	r0, ip, r7
    23f8:	andeq	r5, r0, r0, asr #3
    23fc:	strdeq	r5, [r0], -ip
    2400:	andeq	r5, r0, r4, ror #9
    2404:	andeq	r5, r0, r0, asr r5
    2408:	andeq	r5, r0, ip, ror r5
    240c:	andeq	r5, r0, r8, asr #11
    2410:	andeq	r5, r0, ip, lsr #11
    2414:	andeq	r5, r0, r8, asr #11
    2418:	andeq	r5, r0, ip, ror r4
    241c:	andeq	r5, r0, ip, ror #11
    2420:	andeq	r5, r0, r8, ror #11
    2424:	andeq	r5, r0, r0, asr r6
    2428:	andeq	r5, r0, r4, lsr #13
    242c:	strdeq	r5, [r0], -ip
    2430:	strdeq	r5, [r0], -ip
    2434:	andeq	r5, r0, r4, lsl #13
    2438:	strdeq	r5, [r0], -r8
    243c:	andeq	r5, r0, ip, ror r6
    2440:	andeq	r5, r0, r8, ror #1
    2444:	andeq	r5, r0, ip, lsl #13
    2448:	andeq	r5, r0, r8, lsl r6
    244c:	andeq	r5, r0, ip, lsl r6
    2450:	andeq	r3, r0, ip, ror r6
    2454:	andeq	r5, r0, r4, asr #20
    2458:	andeq	r5, r0, r8, lsl #13
    245c:	andeq	r5, r0, r4, asr #12
    2460:	andeq	r5, r0, r8, asr #12
    2464:	andeq	r3, r0, r4, asr #10
    2468:	andeq	r4, r0, r0, lsl #31
    246c:	muleq	r0, ip, r6
    2470:	andeq	r5, r0, r0, ror #12
    2474:	ldrdeq	r2, [r0], -r8
    2478:	andeq	r5, r0, r8, lsr #32
    247c:			; <UNDEFINED> instruction: 0x000056bc
    2480:	andeq	r5, r0, ip, lsl r4
    2484:	ldrdeq	r5, [r0], -r0
    2488:	andeq	r5, r0, r8, asr r6
    248c:	andeq	r5, r0, r0, ror #12
    2490:	strdeq	r3, [r0], -r0
    2494:			; <UNDEFINED> instruction: 0x000056b0
    2498:	andeq	r2, r0, r8, asr sl
    249c:			; <UNDEFINED> instruction: 0x000056b0
    24a0:	andeq	r2, r0, r8, asr sl
    24a4:			; <UNDEFINED> instruction: 0x000056b0
    24a8:	ldrdeq	r5, [r0], -r0
    24ac:	andeq	r4, r0, ip, lsl #29
    24b0:	andeq	r4, r0, r0, lsl #30
    24b4:	andeq	r4, r0, r0, lsl #29
    24b8:	ldrdeq	r5, [r0], -r4
    24bc:	andeq	r5, r0, r8, lsl #14
    24c0:	andeq	r3, r0, r8, lsr r2
    24c4:	andeq	r5, r0, r0, lsl r7
    24c8:	andeq	r5, r0, r0, asr #14
    24cc:	ldrdeq	r5, [r0], -r0
    24d0:	ldrdeq	r5, [r0], -r8
    24d4:			; <UNDEFINED> instruction: 0x00002fb4
    24d8:	andeq	r5, r0, r8, lsl r7
    24dc:	andeq	r5, r0, ip, lsr r7
    24e0:	andeq	r5, r0, r0, lsr #14
    24e4:	andeq	r5, r0, r4, lsl #14
    24e8:	andeq	r2, r0, r4, lsl #29
    24ec:	andeq	r5, r0, ip, asr #13
    24f0:	andeq	r5, r0, r8, ror #13
    24f4:	strdeq	r5, [r0], -r0
    24f8:	andeq	r2, r0, ip, lsl #27
    24fc:	andeq	r5, r0, ip, lsl #14
    2500:	andeq	r5, r0, r4, lsr r7
    2504:	strdeq	r4, [r0], -r8
    2508:			; <UNDEFINED> instruction: 0x000056b4
    250c:			; <UNDEFINED> instruction: 0x000056bc
    2510:	andeq	r2, r0, ip, ror #24
    2514:	andeq	r5, r0, r0, lsl #14
    2518:	muleq	r0, ip, sl
    251c:	andeq	r5, r0, ip, ror #13
    2520:	strdeq	r5, [r0], -r4
    2524:	andeq	r2, r0, r4, ror #23
    2528:	andeq	r5, r0, ip, ror #13
    252c:	strdeq	r5, [r0], -r8
    2530:	andeq	r2, r0, ip, lsl #19
    2534:	strdeq	r5, [r0], -r0
    2538:	andeq	r2, r0, r4, lsl #16
    253c:	strdeq	r5, [r0], -r4
    2540:	ldrdeq	r5, [r0], -r8
    2544:	andeq	r2, r0, ip, asr #22
    2548:	andeq	r5, r0, ip, ror #13
    254c:	ldrdeq	r5, [r0], -r0
    2550:	andeq	r2, r0, r0, lsl #22
    2554:	ldrdeq	r5, [r0], -r4
    2558:			; <UNDEFINED> instruction: 0x00004bb0
    255c:	andeq	r2, r0, ip, lsl #18
    2560:	andeq	r5, r0, r8, lsr #11
    2564:	andeq	r5, r0, r4, lsl #12
    2568:	andeq	r2, r0, r8, lsr #11
    256c:			; <UNDEFINED> instruction: 0x000047bc
    2570:	ldrdeq	r5, [r0], -r0
    2574:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    2578:	andeq	r5, r0, r0, lsl r4
    257c:	andeq	r0, r0, r4, lsr r1
    2580:	andeq	r5, r0, ip, lsl #7
    2584:	andeq	r4, r0, r4, asr #13
    2588:	andeq	r5, r0, ip, asr r3
    258c:	strdeq	r4, [r0], -ip
    2590:	andeq	r4, r0, r8, ror #12
    2594:	andeq	r5, r0, r8, lsr r3
    2598:	andeq	r4, r0, r0, lsr #15
    259c:	andeq	r2, r0, r0, asr #6
    25a0:	andeq	r2, r0, ip, lsr #6
    25a4:	andeq	r5, r0, ip, lsr r3
    25a8:	andeq	r4, r0, ip, lsr r5
    25ac:	andeq	r5, r0, r0, ror #5
    25b0:	andeq	r4, r0, r4, ror r6
    25b4:	andeq	r2, r0, r8, ror #4
    25b8:	andeq	r2, r0, r8, asr r2
    25bc:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    25c0:	andeq	r5, r0, ip, asr #3
    25c4:	andeq	r4, r0, ip, lsl #12
    25c8:	andeq	r4, r0, r8, ror r4
    25cc:	andeq	r5, r0, r0, lsr #3
    25d0:			; <UNDEFINED> instruction: 0x000045b0
    25d4:	andeq	r4, r0, ip, lsr #8
    25d8:	andeq	r5, r0, r0, ror r1
    25dc:	andeq	r4, r0, r8, asr r5
    25e0:	andeq	r2, r0, r0, asr r1
    25e4:	andeq	r2, r0, r0, asr #2
    25e8:	muleq	r0, ip, r3
    25ec:	andeq	r5, r0, ip, lsl #3
    25f0:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    25f4:	andeq	r2, r0, ip, asr #1
    25f8:	strheq	r2, [r0], -r8
    25fc:	andeq	r2, r0, r8, lsr #1
    2600:	muleq	r0, r8, r0
    2604:	andeq	r2, r0, r8, lsl #1
    2608:	andeq	r2, r0, r8, ror r0
    260c:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    2610:	andeq	r5, r0, r4, asr #1
    2614:	andeq	r4, r0, ip, lsr #8
    2618:	andeq	r2, r0, r0, lsr #32
    261c:	andeq	r2, r0, ip
    2620:	andeq	r3, r0, ip, lsl #12
    2624:	andeq	r2, r0, ip, ror #31
    2628:	andeq	r1, r0, r4, lsr #31
    262c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    2630:	andeq	r1, r0, ip, ror pc
    2634:	andeq	r1, r0, ip, ror #30
    2638:	andeq	r1, r0, r4, asr #30
    263c:	andeq	r1, r0, r4, lsr pc
    2640:	mov	fp, #0
    2644:	mov	lr, #0
    2648:	pop	{r1}		; (ldr r1, [sp], #4)
    264c:	mov	r2, sp
    2650:	push	{r2}		; (str r2, [sp, #-4]!)
    2654:	push	{r0}		; (str r0, [sp, #-4]!)
    2658:	ldr	sl, [pc, #40]	; 2688 <main@@Base+0x129c>
    265c:	add	r3, pc, #36	; 0x24
    2660:	add	sl, sl, r3
    2664:	ldr	ip, [pc, #32]	; 268c <main@@Base+0x12a0>
    2668:	ldr	ip, [sl, ip]
    266c:	push	{ip}		; (str ip, [sp, #-4]!)
    2670:	ldr	r3, [pc, #24]	; 2690 <main@@Base+0x12a4>
    2674:	ldr	r3, [sl, r3]
    2678:	ldr	r0, [pc, #20]	; 2694 <main@@Base+0x12a8>
    267c:	ldr	r0, [sl, r0]
    2680:	bl	1230 <__libc_start_main@plt>
    2684:	bl	13a4 <abort@plt>
    2688:	andeq	r5, r1, ip, lsr #16
    268c:	andeq	r0, r0, r4, lsr #2
    2690:	andeq	r0, r0, ip, lsr r1
    2694:	andeq	r0, r0, r0, asr #2
    2698:	ldr	r3, [pc, #20]	; 26b4 <main@@Base+0x12c8>
    269c:	ldr	r2, [pc, #20]	; 26b8 <main@@Base+0x12cc>
    26a0:	add	r3, pc, r3
    26a4:	ldr	r2, [r3, r2]
    26a8:	cmp	r2, #0
    26ac:	bxeq	lr
    26b0:	b	123c <__gmon_start__@plt>
    26b4:	andeq	r5, r1, ip, lsl #16
    26b8:	andeq	r0, r0, r8, lsr r1
    26bc:	ldr	r2, [pc, #60]	; 2700 <main@@Base+0x1314>
    26c0:	ldr	r0, [pc, #60]	; 2704 <main@@Base+0x1318>
    26c4:	add	r2, pc, r2
    26c8:	add	r0, pc, r0
    26cc:	add	r2, r2, #3
    26d0:	rsb	r2, r0, r2
    26d4:	push	{r3, lr}
    26d8:	cmp	r2, #6
    26dc:	ldr	r3, [pc, #36]	; 2708 <main@@Base+0x131c>
    26e0:	add	r3, pc, r3
    26e4:	popls	{r3, pc}
    26e8:	ldr	r2, [pc, #28]	; 270c <main@@Base+0x1320>
    26ec:	ldr	r3, [r3, r2]
    26f0:	cmp	r3, #0
    26f4:	popeq	{r3, pc}
    26f8:	blx	r3
    26fc:	pop	{r3, pc}
    2700:	andeq	r5, r1, r8, lsr r9
    2704:	andeq	r5, r1, r4, lsr r9
    2708:	andeq	r5, r1, ip, asr #15
    270c:	andeq	r0, r0, ip, lsr #2
    2710:	push	{r3, lr}
    2714:	ldr	r0, [pc, #64]	; 275c <main@@Base+0x1370>
    2718:	ldr	r3, [pc, #64]	; 2760 <main@@Base+0x1374>
    271c:	add	r0, pc, r0
    2720:	ldr	r2, [pc, #60]	; 2764 <main@@Base+0x1378>
    2724:	add	r3, pc, r3
    2728:	rsb	r3, r0, r3
    272c:	add	r2, pc, r2
    2730:	asr	r3, r3, #2
    2734:	add	r3, r3, r3, lsr #31
    2738:	asrs	r3, r3, #1
    273c:	popeq	{r3, pc}
    2740:	ldr	r1, [pc, #32]	; 2768 <main@@Base+0x137c>
    2744:	ldr	r2, [r2, r1]
    2748:	cmp	r2, #0
    274c:	popeq	{r3, pc}
    2750:	mov	r1, r3
    2754:	blx	r2
    2758:	pop	{r3, pc}
    275c:	andeq	r5, r1, r0, ror #17
    2760:	ldrdeq	r5, [r1], -r8
    2764:	andeq	r5, r1, r0, lsl #15
    2768:	andeq	r0, r0, r8, asr #2
    276c:	ldr	r2, [pc, #76]	; 27c0 <main@@Base+0x13d4>
    2770:	push	{r3, lr}
    2774:	add	r2, pc, r2
    2778:	ldr	r3, [pc, #68]	; 27c4 <main@@Base+0x13d8>
    277c:	ldrb	r2, [r2]
    2780:	add	r3, pc, r3
    2784:	cmp	r2, #0
    2788:	popne	{r3, pc}
    278c:	ldr	r2, [pc, #52]	; 27c8 <main@@Base+0x13dc>
    2790:	ldr	r3, [r3, r2]
    2794:	cmp	r3, #0
    2798:	beq	27a8 <main@@Base+0x13bc>
    279c:	ldr	r0, [pc, #40]	; 27cc <main@@Base+0x13e0>
    27a0:	add	r0, pc, r0
    27a4:	bl	10c8 <__cxa_finalize@plt>
    27a8:	bl	26bc <main@@Base+0x12d0>
    27ac:	ldr	r3, [pc, #28]	; 27d0 <main@@Base+0x13e4>
    27b0:	mov	r2, #1
    27b4:	add	r3, pc, r3
    27b8:	strb	r2, [r3]
    27bc:	pop	{r3, pc}
    27c0:	andeq	r5, r1, r8, lsl #17
    27c4:	andeq	r5, r1, ip, lsr #14
    27c8:	andeq	r0, r0, r8, lsr #2
    27cc:	andeq	r5, r1, r0, ror #11
    27d0:	andeq	r5, r1, r8, asr #16
    27d4:	ldr	r0, [pc, #52]	; 2810 <main@@Base+0x1424>
    27d8:	push	{r3, lr}
    27dc:	add	r0, pc, r0
    27e0:	ldr	r3, [pc, #44]	; 2814 <main@@Base+0x1428>
    27e4:	ldr	r2, [r0]
    27e8:	add	r3, pc, r3
    27ec:	cmp	r2, #0
    27f0:	beq	2808 <main@@Base+0x141c>
    27f4:	ldr	r2, [pc, #28]	; 2818 <main@@Base+0x142c>
    27f8:	ldr	r3, [r3, r2]
    27fc:	cmp	r3, #0
    2800:	beq	2808 <main@@Base+0x141c>
    2804:	blx	r3
    2808:	pop	{r3, lr}
    280c:	b	2710 <main@@Base+0x1324>
    2810:	andeq	r5, r1, r0, lsr #11
    2814:	andeq	r5, r1, r4, asr #13
    2818:	andeq	r0, r0, r4, asr #2
    281c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2820:	subs	r4, r0, #0
    2824:	sub	sp, sp, #8
    2828:	mov	r7, r1
    282c:	mov	r5, r2
    2830:	mov	sl, r3
    2834:	ldr	r6, [sp, #40]	; 0x28
    2838:	ldr	r9, [sp, #44]	; 0x2c
    283c:	beq	2938 <main@@Base+0x154c>
    2840:	ldr	r2, [r4]
    2844:	cmp	r2, #0
    2848:	beq	2978 <main@@Base+0x158c>
    284c:	cmp	r1, #0
    2850:	beq	2958 <main@@Base+0x156c>
    2854:	cmp	r5, #0
    2858:	beq	286c <main@@Base+0x1480>
    285c:	mov	r0, r5
    2860:	bl	1254 <strlen@plt>
    2864:	cmp	r0, #255	; 0xff
    2868:	bhi	2998 <main@@Base+0x15ac>
    286c:	ldr	r3, [r4, #4]
    2870:	cmp	r3, #0
    2874:	beq	28f4 <main@@Base+0x1508>
    2878:	ldrb	r3, [r4, #32]
    287c:	tst	r3, #1
    2880:	bne	28a0 <main@@Base+0x14b4>
    2884:	cmp	r6, #0
    2888:	beq	2898 <main@@Base+0x14ac>
    288c:	mov	r0, r9
    2890:	mov	r1, r4
    2894:	blx	r6
    2898:	add	sp, sp, #8
    289c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    28a0:	mov	r1, #24
    28a4:	mov	r0, #1
    28a8:	bl	10a4 <calloc@plt>
    28ac:	mov	r8, r0
    28b0:	mov	r0, r7
    28b4:	str	r4, [r8]
    28b8:	bl	1290 <__strdup@plt>
    28bc:	cmp	r5, #0
    28c0:	str	r0, [r8, #4]
    28c4:	beq	28d4 <main@@Base+0x14e8>
    28c8:	mov	r0, r5
    28cc:	bl	1290 <__strdup@plt>
    28d0:	str	r0, [r8, #8]
    28d4:	ldr	r0, [r4, #12]
    28d8:	mov	r1, r8
    28dc:	str	sl, [r8, #12]
    28e0:	str	r6, [r8, #16]
    28e4:	str	r9, [r8, #20]
    28e8:	add	sp, sp, #8
    28ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    28f0:	b	126c <ply_list_append_data@plt>
    28f4:	ldr	r3, [r4, #20]
    28f8:	cmp	r3, #0
    28fc:	blt	2878 <main@@Base+0x148c>
    2900:	ldr	r0, [r4, #12]
    2904:	bl	10ec <ply_list_get_length@plt>
    2908:	subs	ip, r0, #0
    290c:	bne	29b8 <main@@Base+0x15cc>
    2910:	ldr	r3, [pc, #192]	; 29d8 <main@@Base+0x15ec>
    2914:	mov	r2, #4
    2918:	ldr	r0, [r4]
    291c:	ldr	r1, [r4, #20]
    2920:	add	r3, pc, r3
    2924:	str	ip, [sp]
    2928:	str	r4, [sp, #4]
    292c:	bl	132c <ply_event_loop_watch_fd@plt>
    2930:	str	r0, [r4, #4]
    2934:	b	2878 <main@@Base+0x148c>
    2938:	ldr	r0, [pc, #156]	; 29dc <main@@Base+0x15f0>
    293c:	movw	r2, #490	; 0x1ea
    2940:	ldr	r1, [pc, #152]	; 29e0 <main@@Base+0x15f4>
    2944:	ldr	r3, [pc, #152]	; 29e4 <main@@Base+0x15f8>
    2948:	add	r0, pc, r0
    294c:	add	r1, pc, r1
    2950:	add	r3, pc, r3
    2954:	bl	13e0 <__assert_fail@plt>
    2958:	ldr	r0, [pc, #136]	; 29e8 <main@@Base+0x15fc>
    295c:	mov	r2, #492	; 0x1ec
    2960:	ldr	r1, [pc, #132]	; 29ec <main@@Base+0x1600>
    2964:	ldr	r3, [pc, #132]	; 29f0 <main@@Base+0x1604>
    2968:	add	r0, pc, r0
    296c:	add	r1, pc, r1
    2970:	add	r3, pc, r3
    2974:	bl	13e0 <__assert_fail@plt>
    2978:	ldr	r0, [pc, #116]	; 29f4 <main@@Base+0x1608>
    297c:	movw	r2, #491	; 0x1eb
    2980:	ldr	r1, [pc, #112]	; 29f8 <main@@Base+0x160c>
    2984:	ldr	r3, [pc, #112]	; 29fc <main@@Base+0x1610>
    2988:	add	r0, pc, r0
    298c:	add	r1, pc, r1
    2990:	add	r3, pc, r3
    2994:	bl	13e0 <__assert_fail@plt>
    2998:	ldr	r0, [pc, #96]	; 2a00 <main@@Base+0x1614>
    299c:	movw	r2, #493	; 0x1ed
    29a0:	ldr	r1, [pc, #92]	; 2a04 <main@@Base+0x1618>
    29a4:	ldr	r3, [pc, #92]	; 2a08 <main@@Base+0x161c>
    29a8:	add	r0, pc, r0
    29ac:	add	r1, pc, r1
    29b0:	add	r3, pc, r3
    29b4:	bl	13e0 <__assert_fail@plt>
    29b8:	ldr	r0, [pc, #76]	; 2a0c <main@@Base+0x1620>
    29bc:	movw	r2, #498	; 0x1f2
    29c0:	ldr	r1, [pc, #72]	; 2a10 <main@@Base+0x1624>
    29c4:	ldr	r3, [pc, #72]	; 2a14 <main@@Base+0x1628>
    29c8:	add	r0, pc, r0
    29cc:	add	r1, pc, r1
    29d0:	add	r3, pc, r3
    29d4:	bl	13e0 <__assert_fail@plt>
    29d8:	andeq	r0, r0, r4, ror r6
    29dc:	andeq	r3, r0, ip, lsl #15
    29e0:	andeq	r3, r0, r0, lsr #15
    29e4:	andeq	r3, r0, ip, lsl #5
    29e8:			; <UNDEFINED> instruction: 0x000037b4
    29ec:	andeq	r3, r0, r0, lsl #15
    29f0:	andeq	r3, r0, ip, ror #4
    29f4:	andeq	r3, r0, r8, ror r7
    29f8:	andeq	r3, r0, r0, ror #14
    29fc:	andeq	r3, r0, ip, asr #4
    2a00:	muleq	r0, r4, r7
    2a04:	andeq	r3, r0, r0, asr #14
    2a08:	andeq	r3, r0, ip, lsr #4
    2a0c:	andeq	r3, r0, r4, asr #15
    2a10:	andeq	r3, r0, r0, lsr #14
    2a14:	andeq	r3, r0, ip, lsl #4
    2a18:	ldr	r3, [pc, #880]	; 2d90 <main@@Base+0x19a4>
    2a1c:	mov	r2, #0
    2a20:	ldr	r1, [pc, #876]	; 2d94 <main@@Base+0x19a8>
    2a24:	add	r3, pc, r3
    2a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a2c:	subs	r4, r0, #0
    2a30:	ldr	r5, [r3, r1]
    2a34:	sub	sp, sp, #20
    2a38:	strh	r2, [sp, #8]
    2a3c:	ldr	r3, [r5]
    2a40:	str	r3, [sp, #12]
    2a44:	beq	2cdc <main@@Base+0x18f0>
    2a48:	ldr	r0, [r4, #16]
    2a4c:	bl	10ec <ply_list_get_length@plt>
    2a50:	cmp	r0, #0
    2a54:	beq	2b3c <main@@Base+0x1750>
    2a58:	ldr	r0, [r4, #16]
    2a5c:	bl	12fc <ply_list_get_first_node@plt>
    2a60:	subs	r7, r0, #0
    2a64:	beq	2d00 <main@@Base+0x1914>
    2a68:	bl	1170 <ply_list_node_get_data@plt>
    2a6c:	subs	r6, r0, #0
    2a70:	beq	2d24 <main@@Base+0x1938>
    2a74:	ldr	r0, [r4, #20]
    2a78:	add	r1, sp, #8
    2a7c:	mov	r2, #1
    2a80:	bl	12e4 <ply_read@plt>
    2a84:	cmp	r0, #0
    2a88:	bne	2af8 <main@@Base+0x170c>
    2a8c:	ldr	r3, [r6, #16]
    2a90:	cmp	r3, #0
    2a94:	beq	2aa4 <main@@Base+0x16b8>
    2a98:	ldr	r0, [r6, #20]
    2a9c:	mov	r1, r4
    2aa0:	blx	r3
    2aa4:	mov	r1, r7
    2aa8:	ldr	r0, [r4, #16]
    2aac:	bl	12c0 <ply_list_remove_node@plt>
    2ab0:	ldr	r0, [r4, #16]
    2ab4:	bl	10ec <ply_list_get_length@plt>
    2ab8:	subs	r6, r0, #0
    2abc:	bne	2ae0 <main@@Base+0x16f4>
    2ac0:	ldr	r1, [r4, #8]
    2ac4:	cmp	r1, #0
    2ac8:	beq	2ae0 <main@@Base+0x16f4>
    2acc:	ldr	r0, [r4]
    2ad0:	cmp	r0, #0
    2ad4:	beq	2d48 <main@@Base+0x195c>
    2ad8:	bl	11d0 <ply_event_loop_stop_watching_fd@plt>
    2adc:	str	r6, [r4, #8]
    2ae0:	ldr	r2, [sp, #12]
    2ae4:	ldr	r3, [r5]
    2ae8:	cmp	r2, r3
    2aec:	bne	2cd8 <main@@Base+0x18ec>
    2af0:	add	sp, sp, #20
    2af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2af8:	ldrb	r3, [sp, #8]
    2afc:	cmp	r3, #6
    2b00:	beq	2b50 <main@@Base+0x1764>
    2b04:	cmp	r3, #2
    2b08:	beq	2b60 <main@@Base+0x1774>
    2b0c:	cmp	r3, #9
    2b10:	beq	2bbc <main@@Base+0x17d0>
    2b14:	cmp	r3, #5
    2b18:	bne	2a8c <main@@Base+0x16a0>
    2b1c:	ldr	r3, [r6, #12]
    2b20:	cmp	r3, #0
    2b24:	beq	2aa4 <main@@Base+0x16b8>
    2b28:	ldr	r0, [r6, #20]
    2b2c:	mov	r1, #0
    2b30:	mov	r2, r4
    2b34:	blx	r3
    2b38:	b	2aa4 <main@@Base+0x16b8>
    2b3c:	bl	1320 <ply_logger_get_error_default@plt>
    2b40:	ldr	r1, [pc, #592]	; 2d98 <main@@Base+0x19ac>
    2b44:	add	r1, pc, r1
    2b48:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    2b4c:	b	2ae0 <main@@Base+0x16f4>
    2b50:	ldr	r3, [r6, #12]
    2b54:	cmp	r3, #0
    2b58:	bne	2a98 <main@@Base+0x16ac>
    2b5c:	b	2aa4 <main@@Base+0x16b8>
    2b60:	ldr	r0, [r4, #20]
    2b64:	add	r1, sp, #4
    2b68:	bl	13c8 <ply_read_uint32@plt>
    2b6c:	cmp	r0, #0
    2b70:	beq	2a8c <main@@Base+0x16a0>
    2b74:	ldr	r9, [sp, #4]
    2b78:	add	r0, r9, #1
    2b7c:	bl	1224 <malloc@plt>
    2b80:	cmp	r9, #0
    2b84:	mov	r8, r0
    2b88:	bne	2cb0 <main@@Base+0x18c4>
    2b8c:	mov	r3, #0
    2b90:	strb	r3, [r8, r9]
    2b94:	ldr	r3, [r6, #12]
    2b98:	cmp	r3, #0
    2b9c:	beq	2bb0 <main@@Base+0x17c4>
    2ba0:	ldr	r0, [r6, #20]
    2ba4:	mov	r1, r8
    2ba8:	mov	r2, r4
    2bac:	blx	r3
    2bb0:	mov	r0, r8
    2bb4:	bl	1110 <free@plt>
    2bb8:	b	2aa4 <main@@Base+0x16b8>
    2bbc:	ldr	r0, [r4, #20]
    2bc0:	add	r1, sp, #4
    2bc4:	bl	13c8 <ply_read_uint32@plt>
    2bc8:	cmp	r0, #0
    2bcc:	beq	2a8c <main@@Base+0x16a0>
    2bd0:	ldr	r8, [sp, #4]
    2bd4:	cmp	r8, #0
    2bd8:	beq	2d6c <main@@Base+0x1980>
    2bdc:	mov	r0, r8
    2be0:	bl	1224 <malloc@plt>
    2be4:	mov	r2, r8
    2be8:	mov	r1, r0
    2bec:	mov	sl, r0
    2bf0:	ldr	r0, [r4, #20]
    2bf4:	bl	12e4 <ply_read@plt>
    2bf8:	cmp	r0, #0
    2bfc:	bne	2c0c <main@@Base+0x1820>
    2c00:	mov	r0, sl
    2c04:	bl	1110 <free@plt>
    2c08:	b	2a8c <main@@Base+0x16a0>
    2c0c:	mov	r0, #0
    2c10:	bl	1284 <ply_array_new@plt>
    2c14:	ldr	r2, [sp, #4]
    2c18:	cmp	r2, #0
    2c1c:	movne	r9, sl
    2c20:	movne	r8, #0
    2c24:	mov	fp, r0
    2c28:	movne	r0, sl
    2c2c:	bne	2c44 <main@@Base+0x1858>
    2c30:	b	2c6c <main@@Base+0x1880>
    2c34:	add	r8, r8, #1
    2c38:	uxtb	r8, r8
    2c3c:	cmp	r8, r2
    2c40:	bcs	2c6c <main@@Base+0x1880>
    2c44:	ldrb	r3, [r9], #1
    2c48:	cmp	r3, #0
    2c4c:	bne	2c34 <main@@Base+0x1848>
    2c50:	bl	1290 <__strdup@plt>
    2c54:	mov	r1, r0
    2c58:	mov	r0, fp
    2c5c:	bl	1158 <ply_array_add_pointer_element@plt>
    2c60:	ldr	r2, [sp, #4]
    2c64:	mov	r0, r9
    2c68:	b	2c34 <main@@Base+0x1848>
    2c6c:	mov	r0, sl
    2c70:	bl	1110 <free@plt>
    2c74:	mov	r0, fp
    2c78:	bl	135c <ply_array_steal_pointer_elements@plt>
    2c7c:	mov	r8, r0
    2c80:	mov	r0, fp
    2c84:	bl	117c <ply_array_free@plt>
    2c88:	ldr	r3, [r6, #12]
    2c8c:	cmp	r3, #0
    2c90:	beq	2ca4 <main@@Base+0x18b8>
    2c94:	ldr	r0, [r6, #20]
    2c98:	mov	r1, r8
    2c9c:	mov	r2, r4
    2ca0:	blx	r3
    2ca4:	mov	r0, r8
    2ca8:	bl	1350 <ply_free_string_array@plt>
    2cac:	b	2aa4 <main@@Base+0x16b8>
    2cb0:	mov	r2, r9
    2cb4:	ldr	r0, [r4, #20]
    2cb8:	mov	r1, r8
    2cbc:	bl	12e4 <ply_read@plt>
    2cc0:	cmp	r0, #0
    2cc4:	ldrne	r9, [sp, #4]
    2cc8:	bne	2b8c <main@@Base+0x17a0>
    2ccc:	mov	r0, r8
    2cd0:	bl	1110 <free@plt>
    2cd4:	b	2a8c <main@@Base+0x16a0>
    2cd8:	bl	1188 <__stack_chk_fail@plt>
    2cdc:	ldr	r3, [pc, #184]	; 2d9c <main@@Base+0x19b0>
    2ce0:	movw	r2, #263	; 0x107
    2ce4:	ldr	r0, [pc, #180]	; 2da0 <main@@Base+0x19b4>
    2ce8:	ldr	r1, [pc, #180]	; 2da4 <main@@Base+0x19b8>
    2cec:	add	r3, pc, r3
    2cf0:	add	r0, pc, r0
    2cf4:	add	r3, r3, #32
    2cf8:	add	r1, pc, r1
    2cfc:	bl	13e0 <__assert_fail@plt>
    2d00:	ldr	r3, [pc, #160]	; 2da8 <main@@Base+0x19bc>
    2d04:	movw	r2, #273	; 0x111
    2d08:	ldr	r0, [pc, #156]	; 2dac <main@@Base+0x19c0>
    2d0c:	ldr	r1, [pc, #156]	; 2db0 <main@@Base+0x19c4>
    2d10:	add	r3, pc, r3
    2d14:	add	r0, pc, r0
    2d18:	add	r3, r3, #32
    2d1c:	add	r1, pc, r1
    2d20:	bl	13e0 <__assert_fail@plt>
    2d24:	ldr	r3, [pc, #136]	; 2db4 <main@@Base+0x19c8>
    2d28:	mov	r2, #276	; 0x114
    2d2c:	ldr	r0, [pc, #132]	; 2db8 <main@@Base+0x19cc>
    2d30:	ldr	r1, [pc, #132]	; 2dbc <main@@Base+0x19d0>
    2d34:	add	r3, pc, r3
    2d38:	add	r0, pc, r0
    2d3c:	add	r3, r3, #32
    2d40:	add	r1, pc, r1
    2d44:	bl	13e0 <__assert_fail@plt>
    2d48:	ldr	r3, [pc, #112]	; 2dc0 <main@@Base+0x19d4>
    2d4c:	movw	r2, #378	; 0x17a
    2d50:	ldr	r0, [pc, #108]	; 2dc4 <main@@Base+0x19d8>
    2d54:	ldr	r1, [pc, #108]	; 2dc8 <main@@Base+0x19dc>
    2d58:	add	r3, pc, r3
    2d5c:	add	r0, pc, r0
    2d60:	add	r3, r3, #32
    2d64:	add	r1, pc, r1
    2d68:	bl	13e0 <__assert_fail@plt>
    2d6c:	ldr	r3, [pc, #88]	; 2dcc <main@@Base+0x19e0>
    2d70:	movw	r2, #323	; 0x143
    2d74:	ldr	r0, [pc, #84]	; 2dd0 <main@@Base+0x19e4>
    2d78:	ldr	r1, [pc, #84]	; 2dd4 <main@@Base+0x19e8>
    2d7c:	add	r3, pc, r3
    2d80:	add	r0, pc, r0
    2d84:	add	r3, r3, #32
    2d88:	add	r1, pc, r1
    2d8c:	bl	13e0 <__assert_fail@plt>
    2d90:	andeq	r5, r1, r8, lsl #9
    2d94:	andeq	r0, r0, r0, lsr r1
    2d98:	andeq	r3, r0, ip, ror r6
    2d9c:	strdeq	r2, [r0], -r0
    2da0:	andeq	r3, r0, r4, ror #7
    2da4:	strdeq	r3, [r0], -r4
    2da8:	andeq	r2, r0, ip, asr #29
    2dac:	andeq	r3, r0, r4, ror #9
    2db0:	ldrdeq	r3, [r0], -r0
    2db4:	andeq	r2, r0, r8, lsr #29
    2db8:	ldrdeq	r3, [r0], -ip
    2dbc:	andeq	r3, r0, ip, lsr #7
    2dc0:	andeq	r2, r0, r4, lsl #29
    2dc4:	andeq	r3, r0, r4, lsr #7
    2dc8:	andeq	r3, r0, r8, lsl #7
    2dcc:	andeq	r2, r0, r0, ror #28
    2dd0:	andeq	r3, r0, ip, lsr #9
    2dd4:	andeq	r3, r0, r4, ror #6
    2dd8:	ldr	r3, [r0, #16]
    2ddc:	push	{r4, lr}
    2de0:	cmp	r3, #0
    2de4:	mov	r4, r0
    2de8:	beq	2df8 <main@@Base+0x1a0c>
    2dec:	ldr	r0, [r0, #20]
    2df0:	ldr	r1, [r4]
    2df4:	blx	r3
    2df8:	ldr	r0, [r4, #4]
    2dfc:	bl	1110 <free@plt>
    2e00:	ldr	r0, [r4, #8]
    2e04:	cmp	r0, #0
    2e08:	beq	2e10 <main@@Base+0x1a24>
    2e0c:	bl	1110 <free@plt>
    2e10:	mov	r0, r4
    2e14:	pop	{r4, lr}
    2e18:	b	1110 <free@plt>
    2e1c:	push	{r3, r4, r5, r6, r7, lr}
    2e20:	mov	r6, r0
    2e24:	ldr	r0, [r0, #12]
    2e28:	bl	10ec <ply_list_get_length@plt>
    2e2c:	cmp	r0, #0
    2e30:	popeq	{r3, r4, r5, r6, r7, pc}
    2e34:	ldr	r0, [r6, #12]
    2e38:	bl	12fc <ply_list_get_first_node@plt>
    2e3c:	subs	r4, r0, #0
    2e40:	bne	2e4c <main@@Base+0x1a60>
    2e44:	b	2e84 <main@@Base+0x1a98>
    2e48:	mov	r4, r5
    2e4c:	mov	r0, r4
    2e50:	bl	1170 <ply_list_node_get_data@plt>
    2e54:	mov	r1, r4
    2e58:	mov	r7, r0
    2e5c:	ldr	r0, [r6, #12]
    2e60:	bl	1104 <ply_list_get_next_node@plt>
    2e64:	mov	r5, r0
    2e68:	mov	r0, r7
    2e6c:	bl	2dd8 <main@@Base+0x19ec>
    2e70:	mov	r1, r4
    2e74:	ldr	r0, [r6, #12]
    2e78:	bl	12c0 <ply_list_remove_node@plt>
    2e7c:	cmp	r5, #0
    2e80:	bne	2e48 <main@@Base+0x1a5c>
    2e84:	ldr	r1, [r6, #4]
    2e88:	cmp	r1, #0
    2e8c:	popeq	{r3, r4, r5, r6, r7, pc}
    2e90:	ldr	r0, [r6]
    2e94:	cmp	r0, #0
    2e98:	beq	2eac <main@@Base+0x1ac0>
    2e9c:	bl	11d0 <ply_event_loop_stop_watching_fd@plt>
    2ea0:	mov	r3, #0
    2ea4:	str	r3, [r6, #4]
    2ea8:	pop	{r3, r4, r5, r6, r7, pc}
    2eac:	ldr	r3, [pc, #28]	; 2ed0 <main@@Base+0x1ae4>
    2eb0:	mov	r2, #110	; 0x6e
    2eb4:	ldr	r0, [pc, #24]	; 2ed4 <main@@Base+0x1ae8>
    2eb8:	ldr	r1, [pc, #24]	; 2ed8 <main@@Base+0x1aec>
    2ebc:	add	r3, pc, r3
    2ec0:	add	r0, pc, r0
    2ec4:	add	r3, r3, #76	; 0x4c
    2ec8:	add	r1, pc, r1
    2ecc:	bl	13e0 <__assert_fail@plt>
    2ed0:	andeq	r2, r0, r0, lsr #26
    2ed4:	andeq	r3, r0, r0, asr #4
    2ed8:	andeq	r3, r0, r4, lsr #4
    2edc:	push	{r3, r4, r5, r6, r7, lr}
    2ee0:	mov	r6, r0
    2ee4:	ldr	r0, [r0, #16]
    2ee8:	bl	10ec <ply_list_get_length@plt>
    2eec:	cmp	r0, #0
    2ef0:	popeq	{r3, r4, r5, r6, r7, pc}
    2ef4:	ldr	r0, [r6, #16]
    2ef8:	bl	12fc <ply_list_get_first_node@plt>
    2efc:	subs	r4, r0, #0
    2f00:	bne	2f0c <main@@Base+0x1b20>
    2f04:	b	2f44 <main@@Base+0x1b58>
    2f08:	mov	r4, r5
    2f0c:	mov	r0, r4
    2f10:	bl	1170 <ply_list_node_get_data@plt>
    2f14:	mov	r1, r4
    2f18:	mov	r7, r0
    2f1c:	ldr	r0, [r6, #16]
    2f20:	bl	1104 <ply_list_get_next_node@plt>
    2f24:	mov	r5, r0
    2f28:	mov	r0, r7
    2f2c:	bl	2dd8 <main@@Base+0x19ec>
    2f30:	mov	r1, r4
    2f34:	ldr	r0, [r6, #16]
    2f38:	bl	12c0 <ply_list_remove_node@plt>
    2f3c:	cmp	r5, #0
    2f40:	bne	2f08 <main@@Base+0x1b1c>
    2f44:	ldr	r1, [r6, #8]
    2f48:	cmp	r1, #0
    2f4c:	popeq	{r3, r4, r5, r6, r7, pc}
    2f50:	ldr	r0, [r6]
    2f54:	cmp	r0, #0
    2f58:	beq	2f6c <main@@Base+0x1b80>
    2f5c:	bl	11d0 <ply_event_loop_stop_watching_fd@plt>
    2f60:	mov	r3, #0
    2f64:	str	r3, [r6, #8]
    2f68:	pop	{r3, r4, r5, r6, r7, pc}
    2f6c:	ldr	r3, [pc, #28]	; 2f90 <main@@Base+0x1ba4>
    2f70:	mov	r2, #143	; 0x8f
    2f74:	ldr	r0, [pc, #24]	; 2f94 <main@@Base+0x1ba8>
    2f78:	ldr	r1, [pc, #24]	; 2f98 <main@@Base+0x1bac>
    2f7c:	add	r3, pc, r3
    2f80:	add	r0, pc, r0
    2f84:	add	r3, r3, #116	; 0x74
    2f88:	add	r1, pc, r1
    2f8c:	bl	13e0 <__assert_fail@plt>
    2f90:	andeq	r2, r0, r0, ror #24
    2f94:	andeq	r3, r0, r0, lsl #3
    2f98:	andeq	r3, r0, r4, ror #2
    2f9c:	ldr	r3, [pc, #732]	; 3280 <main@@Base+0x1e94>
    2fa0:	ldr	r2, [pc, #732]	; 3284 <main@@Base+0x1e98>
    2fa4:	add	r3, pc, r3
    2fa8:	push	{r4, r5, r6, r7, r8, r9, lr}
    2fac:	sub	sp, sp, #20
    2fb0:	ldr	r8, [r3, r2]
    2fb4:	mov	r4, r0
    2fb8:	ldr	r0, [r0, #12]
    2fbc:	ldr	r3, [r8]
    2fc0:	str	r3, [sp, #12]
    2fc4:	bl	10ec <ply_list_get_length@plt>
    2fc8:	cmp	r0, #0
    2fcc:	beq	31ec <main@@Base+0x1e00>
    2fd0:	ldr	r3, [r4, #4]
    2fd4:	cmp	r3, #0
    2fd8:	beq	31c8 <main@@Base+0x1ddc>
    2fdc:	ldr	r0, [r4, #12]
    2fe0:	bl	12fc <ply_list_get_first_node@plt>
    2fe4:	subs	r5, r0, #0
    2fe8:	beq	31a4 <main@@Base+0x1db8>
    2fec:	bl	1170 <ply_list_node_get_data@plt>
    2ff0:	subs	r6, r0, #0
    2ff4:	beq	3180 <main@@Base+0x1d94>
    2ff8:	mov	r1, r5
    2ffc:	ldr	r0, [r4, #12]
    3000:	bl	12c0 <ply_list_remove_node@plt>
    3004:	ldr	r9, [r6, #4]
    3008:	cmp	r9, #0
    300c:	beq	315c <main@@Base+0x1d70>
    3010:	ldr	r5, [r6, #8]
    3014:	cmp	r5, #0
    3018:	beq	3140 <main@@Base+0x1d54>
    301c:	mov	r0, r5
    3020:	bl	1254 <strlen@plt>
    3024:	cmp	r0, #255	; 0xff
    3028:	bhi	3214 <main@@Base+0x1e28>
    302c:	add	r7, sp, #16
    3030:	mov	r0, r5
    3034:	mov	r3, #0
    3038:	str	r3, [r7, #-8]!
    303c:	bl	1254 <strlen@plt>
    3040:	mov	r1, #1
    3044:	ldr	r2, [pc, #572]	; 3288 <main@@Base+0x1e9c>
    3048:	str	r5, [sp, #4]
    304c:	mov	r3, r9
    3050:	add	r2, pc, r2
    3054:	add	ip, r0, r1
    3058:	mov	r0, r7
    305c:	uxtb	ip, ip
    3060:	str	ip, [sp]
    3064:	bl	120c <__asprintf_chk@plt>
    3068:	ldr	r5, [sp, #8]
    306c:	mov	r0, r5
    3070:	bl	1254 <strlen@plt>
    3074:	add	r2, r0, #1
    3078:	ldr	r0, [r4, #20]
    307c:	mov	r1, r5
    3080:	bl	114c <ply_write@plt>
    3084:	cmp	r0, #0
    3088:	mov	r0, r5
    308c:	beq	30f8 <main@@Base+0x1d0c>
    3090:	bl	1110 <free@plt>
    3094:	ldr	r3, [r4, #8]
    3098:	cmp	r3, #0
    309c:	beq	3108 <main@@Base+0x1d1c>
    30a0:	mov	r1, r6
    30a4:	ldr	r0, [r4, #16]
    30a8:	bl	126c <ply_list_append_data@plt>
    30ac:	ldr	r0, [r4, #12]
    30b0:	bl	10ec <ply_list_get_length@plt>
    30b4:	subs	r5, r0, #0
    30b8:	bne	30e0 <main@@Base+0x1cf4>
    30bc:	ldr	r3, [r4, #8]
    30c0:	cmp	r3, #0
    30c4:	beq	30e0 <main@@Base+0x1cf4>
    30c8:	ldr	r0, [r4]
    30cc:	cmp	r0, #0
    30d0:	beq	3238 <main@@Base+0x1e4c>
    30d4:	ldr	r1, [r4, #4]
    30d8:	bl	11d0 <ply_event_loop_stop_watching_fd@plt>
    30dc:	str	r5, [r4, #4]
    30e0:	ldr	r2, [sp, #12]
    30e4:	ldr	r3, [r8]
    30e8:	cmp	r2, r3
    30ec:	bne	3210 <main@@Base+0x1e24>
    30f0:	add	sp, sp, #20
    30f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    30f8:	bl	1110 <free@plt>
    30fc:	mov	r0, r6
    3100:	bl	2dd8 <main@@Base+0x19ec>
    3104:	b	30ac <main@@Base+0x1cc0>
    3108:	ldr	r0, [r4, #16]
    310c:	bl	10ec <ply_list_get_length@plt>
    3110:	subs	ip, r0, #0
    3114:	bne	325c <main@@Base+0x1e70>
    3118:	ldr	r3, [pc, #364]	; 328c <main@@Base+0x1ea0>
    311c:	mov	r2, #1
    3120:	ldr	r0, [r4]
    3124:	ldr	r1, [r4, #20]
    3128:	add	r3, pc, r3
    312c:	str	ip, [sp]
    3130:	str	r4, [sp, #4]
    3134:	bl	132c <ply_event_loop_watch_fd@plt>
    3138:	str	r0, [r4, #8]
    313c:	b	30a0 <main@@Base+0x1cb4>
    3140:	mov	r0, r9
    3144:	bl	1290 <__strdup@plt>
    3148:	mov	r5, r0
    314c:	str	r0, [sp, #8]
    3150:	bl	1254 <strlen@plt>
    3154:	add	r2, r0, #1
    3158:	b	3078 <main@@Base+0x1c8c>
    315c:	ldr	r3, [pc, #300]	; 3290 <main@@Base+0x1ea4>
    3160:	movw	r2, #397	; 0x18d
    3164:	ldr	r0, [pc, #296]	; 3294 <main@@Base+0x1ea8>
    3168:	ldr	r1, [pc, #296]	; 3298 <main@@Base+0x1eac>
    316c:	add	r3, pc, r3
    3170:	add	r0, pc, r0
    3174:	add	r3, r3, #212	; 0xd4
    3178:	add	r1, pc, r1
    317c:	bl	13e0 <__assert_fail@plt>
    3180:	ldr	r3, [pc, #276]	; 329c <main@@Base+0x1eb0>
    3184:	movw	r2, #462	; 0x1ce
    3188:	ldr	r0, [pc, #272]	; 32a0 <main@@Base+0x1eb4>
    318c:	ldr	r1, [pc, #272]	; 32a4 <main@@Base+0x1eb8>
    3190:	add	r3, pc, r3
    3194:	add	r0, pc, r0
    3198:	add	r3, r3, #168	; 0xa8
    319c:	add	r1, pc, r1
    31a0:	bl	13e0 <__assert_fail@plt>
    31a4:	ldr	r3, [pc, #252]	; 32a8 <main@@Base+0x1ebc>
    31a8:	movw	r2, #459	; 0x1cb
    31ac:	ldr	r0, [pc, #248]	; 32ac <main@@Base+0x1ec0>
    31b0:	ldr	r1, [pc, #248]	; 32b0 <main@@Base+0x1ec4>
    31b4:	add	r3, pc, r3
    31b8:	add	r0, pc, r0
    31bc:	add	r3, r3, #168	; 0xa8
    31c0:	add	r1, pc, r1
    31c4:	bl	13e0 <__assert_fail@plt>
    31c8:	ldr	r3, [pc, #228]	; 32b4 <main@@Base+0x1ec8>
    31cc:	mov	r2, #456	; 0x1c8
    31d0:	ldr	r0, [pc, #224]	; 32b8 <main@@Base+0x1ecc>
    31d4:	ldr	r1, [pc, #224]	; 32bc <main@@Base+0x1ed0>
    31d8:	add	r3, pc, r3
    31dc:	add	r0, pc, r0
    31e0:	add	r3, r3, #168	; 0xa8
    31e4:	add	r1, pc, r1
    31e8:	bl	13e0 <__assert_fail@plt>
    31ec:	ldr	r3, [pc, #204]	; 32c0 <main@@Base+0x1ed4>
    31f0:	movw	r2, #455	; 0x1c7
    31f4:	ldr	r0, [pc, #200]	; 32c4 <main@@Base+0x1ed8>
    31f8:	ldr	r1, [pc, #200]	; 32c8 <main@@Base+0x1edc>
    31fc:	add	r3, pc, r3
    3200:	add	r0, pc, r0
    3204:	add	r3, r3, #168	; 0xa8
    3208:	add	r1, pc, r1
    320c:	bl	13e0 <__assert_fail@plt>
    3210:	bl	1188 <__stack_chk_fail@plt>
    3214:	ldr	r3, [pc, #176]	; 32cc <main@@Base+0x1ee0>
    3218:	movw	r2, #406	; 0x196
    321c:	ldr	r0, [pc, #172]	; 32d0 <main@@Base+0x1ee4>
    3220:	ldr	r1, [pc, #172]	; 32d4 <main@@Base+0x1ee8>
    3224:	add	r3, pc, r3
    3228:	add	r0, pc, r0
    322c:	add	r3, r3, #212	; 0xd4
    3230:	add	r1, pc, r1
    3234:	bl	13e0 <__assert_fail@plt>
    3238:	ldr	r3, [pc, #152]	; 32d8 <main@@Base+0x1eec>
    323c:	movw	r2, #473	; 0x1d9
    3240:	ldr	r0, [pc, #148]	; 32dc <main@@Base+0x1ef0>
    3244:	ldr	r1, [pc, #148]	; 32e0 <main@@Base+0x1ef4>
    3248:	add	r3, pc, r3
    324c:	add	r0, pc, r0
    3250:	add	r3, r3, #168	; 0xa8
    3254:	add	r1, pc, r1
    3258:	bl	13e0 <__assert_fail@plt>
    325c:	ldr	r3, [pc, #128]	; 32e4 <main@@Base+0x1ef8>
    3260:	movw	r2, #438	; 0x1b6
    3264:	ldr	r0, [pc, #124]	; 32e8 <main@@Base+0x1efc>
    3268:	ldr	r1, [pc, #124]	; 32ec <main@@Base+0x1f00>
    326c:	add	r3, pc, r3
    3270:	add	r0, pc, r0
    3274:	add	r3, r3, #248	; 0xf8
    3278:	add	r1, pc, r1
    327c:	bl	13e0 <__assert_fail@plt>
    3280:	andeq	r4, r1, r8, lsl #30
    3284:	andeq	r0, r0, r0, lsr r1
    3288:	andeq	r3, r0, r0, lsr #5
    328c:			; <UNDEFINED> instruction: 0xfffff8e8
    3290:	andeq	r2, r0, r0, ror sl
    3294:	andeq	r3, r0, r4, lsr r1
    3298:	andeq	r2, r0, r4, ror pc
    329c:	andeq	r2, r0, ip, asr #20
    32a0:	andeq	r3, r0, r0, lsl #1
    32a4:	andeq	r2, r0, r0, asr pc
    32a8:	andeq	r2, r0, r8, lsr #20
    32ac:	andeq	r3, r0, r0, asr #32
    32b0:	andeq	r2, r0, ip, lsr #30
    32b4:	andeq	r2, r0, r4, lsl #20
    32b8:	muleq	r0, r0, r0
    32bc:	andeq	r2, r0, r8, lsl #30
    32c0:	andeq	r2, r0, r0, ror #19
    32c4:	andeq	r3, r0, r8, lsr r0
    32c8:	andeq	r2, r0, r4, ror #29
    32cc:			; <UNDEFINED> instruction: 0x000029b8
    32d0:	muleq	r0, ip, r0
    32d4:			; <UNDEFINED> instruction: 0x00002ebc
    32d8:	muleq	r0, r4, r9
    32dc:			; <UNDEFINED> instruction: 0x00002eb4
    32e0:	muleq	r0, r8, lr
    32e4:	andeq	r2, r0, r0, ror r9
    32e8:	andeq	r3, r0, r8, lsl #1
    32ec:	andeq	r2, r0, r4, ror lr
    32f0:	push	{r4, lr}
    32f4:	subs	r4, r0, #0
    32f8:	beq	3324 <main@@Base+0x1f38>
    32fc:	bl	2e1c <main@@Base+0x1a30>
    3300:	mov	r0, r4
    3304:	bl	2edc <main@@Base+0x1af0>
    3308:	ldr	r3, [r4, #24]
    330c:	cmp	r3, #0
    3310:	popeq	{r4, pc}
    3314:	ldr	r0, [r4, #28]
    3318:	mov	r1, r4
    331c:	blx	r3
    3320:	pop	{r4, pc}
    3324:	ldr	r3, [pc, #28]	; 3348 <main@@Base+0x1f5c>
    3328:	movw	r2, #839	; 0x347
    332c:	ldr	r0, [pc, #24]	; 334c <main@@Base+0x1f60>
    3330:	ldr	r1, [pc, #24]	; 3350 <main@@Base+0x1f64>
    3334:	add	r3, pc, r3
    3338:	add	r0, pc, r0
    333c:	add	r3, r3, #280	; 0x118
    3340:	add	r1, pc, r1
    3344:	bl	13e0 <__assert_fail@plt>
    3348:	andeq	r2, r0, r8, lsr #17
    334c:	muleq	r0, ip, sp
    3350:	andeq	r2, r0, ip, lsr #27
    3354:	push	{r4, r5, r6, lr}
    3358:	subs	r4, r0, #0
    335c:	sub	sp, sp, #8
    3360:	beq	33dc <main@@Base+0x1ff0>
    3364:	bl	1278 <__errno_location@plt>
    3368:	mov	r5, r0
    336c:	ldr	r6, [r0]
    3370:	bl	1320 <ply_logger_get_error_default@plt>
    3374:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    3378:	cmp	r0, #0
    337c:	beq	33c4 <main@@Base+0x1fd8>
    3380:	bl	1320 <ply_logger_get_error_default@plt>
    3384:	bl	1134 <ply_logger_flush@plt>
    3388:	str	r6, [r5]
    338c:	bl	1320 <ply_logger_get_error_default@plt>
    3390:	ldr	ip, [pc, #104]	; 3400 <main@@Base+0x2014>
    3394:	ldr	r1, [pc, #104]	; 3404 <main@@Base+0x2018>
    3398:	movw	r3, #830	; 0x33e
    339c:	ldr	r2, [pc, #100]	; 3408 <main@@Base+0x201c>
    33a0:	add	ip, pc, ip
    33a4:	add	ip, ip, #348	; 0x15c
    33a8:	add	r1, pc, r1
    33ac:	add	r2, pc, r2
    33b0:	str	ip, [sp]
    33b4:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    33b8:	bl	1320 <ply_logger_get_error_default@plt>
    33bc:	bl	1134 <ply_logger_flush@plt>
    33c0:	str	r6, [r5]
    33c4:	mov	r3, #0
    33c8:	str	r3, [r4]
    33cc:	str	r3, [r4, #4]
    33d0:	str	r3, [r4, #8]
    33d4:	add	sp, sp, #8
    33d8:	pop	{r4, r5, r6, pc}
    33dc:	ldr	r3, [pc, #40]	; 340c <main@@Base+0x2020>
    33e0:	movw	r2, #829	; 0x33d
    33e4:	ldr	r0, [pc, #36]	; 3410 <main@@Base+0x2024>
    33e8:	ldr	r1, [pc, #36]	; 3414 <main@@Base+0x2028>
    33ec:	add	r3, pc, r3
    33f0:	add	r0, pc, r0
    33f4:	add	r3, r3, #308	; 0x134
    33f8:	add	r1, pc, r1
    33fc:	bl	13e0 <__assert_fail@plt>
    3400:	andeq	r2, r0, ip, lsr r8
    3404:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    3408:	andeq	r2, r0, r0, asr #26
    340c:	strdeq	r2, [r0], -r0
    3410:	andeq	r2, r0, r4, ror #25
    3414:	strdeq	r2, [r0], -r4
    3418:	push	{r3, r4, r5, lr}
    341c:	mov	r1, #36	; 0x24
    3420:	mov	r0, #1
    3424:	mov	r5, #0
    3428:	bl	10a4 <calloc@plt>
    342c:	str	r5, [r0, #4]
    3430:	mov	r4, r0
    3434:	str	r5, [r0, #8]
    3438:	bl	1308 <ply_list_new@plt>
    343c:	str	r0, [r4, #12]
    3440:	bl	1308 <ply_list_new@plt>
    3444:	ldrb	r3, [r4, #32]
    3448:	str	r5, [r4]
    344c:	bfi	r3, r5, #0, #1
    3450:	str	r5, [r4, #24]
    3454:	str	r5, [r4, #28]
    3458:	strb	r3, [r4, #32]
    345c:	str	r0, [r4, #16]
    3460:	mov	r0, r4
    3464:	pop	{r3, r4, r5, pc}
    3468:	push	{r4, lr}
    346c:	subs	r4, r0, #0
    3470:	popeq	{r4, pc}
    3474:	bl	2e1c <main@@Base+0x1a30>
    3478:	mov	r0, r4
    347c:	bl	2edc <main@@Base+0x1af0>
    3480:	ldr	r0, [r4, #12]
    3484:	bl	1380 <ply_list_free@plt>
    3488:	ldr	r0, [r4, #16]
    348c:	bl	1380 <ply_list_free@plt>
    3490:	mov	r0, r4
    3494:	pop	{r4, lr}
    3498:	b	1110 <free@plt>
    349c:	push	{r4, r5, r6, r7, r8, r9, lr}
    34a0:	subs	r4, r0, #0
    34a4:	sub	sp, sp, #12
    34a8:	mov	r6, r1
    34ac:	mov	r5, r2
    34b0:	beq	36c0 <main@@Base+0x22d4>
    34b4:	ldrb	r3, [r4, #32]
    34b8:	tst	r3, #1
    34bc:	bne	369c <main@@Base+0x22b0>
    34c0:	ldr	r3, [r4, #24]
    34c4:	cmp	r3, #0
    34c8:	bne	3678 <main@@Base+0x228c>
    34cc:	ldr	r3, [r4, #28]
    34d0:	cmp	r3, #0
    34d4:	bne	3654 <main@@Base+0x2268>
    34d8:	ldr	r0, [pc, #516]	; 36e4 <main@@Base+0x22f8>
    34dc:	mov	r1, #2
    34e0:	add	r0, pc, r0
    34e4:	bl	1314 <ply_connect_to_unix_socket@plt>
    34e8:	cmp	r0, #0
    34ec:	str	r0, [r4, #20]
    34f0:	blt	3514 <main@@Base+0x2128>
    34f4:	ldrb	r3, [r4, #32]
    34f8:	mov	r0, #1
    34fc:	str	r6, [r4, #24]
    3500:	orr	r3, r3, r0
    3504:	str	r5, [r4, #28]
    3508:	strb	r3, [r4, #32]
    350c:	add	sp, sp, #12
    3510:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3514:	bl	1278 <__errno_location@plt>
    3518:	mov	r7, r0
    351c:	ldr	r8, [r0]
    3520:	bl	1320 <ply_logger_get_error_default@plt>
    3524:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    3528:	cmp	r0, #0
    352c:	bne	3608 <main@@Base+0x221c>
    3530:	ldr	r9, [r7]
    3534:	bl	1320 <ply_logger_get_error_default@plt>
    3538:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    353c:	cmp	r0, #0
    3540:	bne	35c0 <main@@Base+0x21d4>
    3544:	ldr	r0, [pc, #412]	; 36e8 <main@@Base+0x22fc>
    3548:	mov	r1, #1
    354c:	add	r0, pc, r0
    3550:	bl	1314 <ply_connect_to_unix_socket@plt>
    3554:	cmp	r0, #0
    3558:	str	r0, [r4, #20]
    355c:	bge	34f4 <main@@Base+0x2108>
    3560:	ldr	r4, [r7]
    3564:	bl	1320 <ply_logger_get_error_default@plt>
    3568:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    356c:	cmp	r0, #0
    3570:	beq	350c <main@@Base+0x2120>
    3574:	bl	1320 <ply_logger_get_error_default@plt>
    3578:	bl	1134 <ply_logger_flush@plt>
    357c:	str	r4, [r7]
    3580:	bl	1320 <ply_logger_get_error_default@plt>
    3584:	ldr	ip, [pc, #352]	; 36ec <main@@Base+0x2300>
    3588:	ldr	r1, [pc, #352]	; 36f0 <main@@Base+0x2304>
    358c:	mov	r3, #196	; 0xc4
    3590:	ldr	r2, [pc, #348]	; 36f4 <main@@Base+0x2308>
    3594:	add	ip, pc, ip
    3598:	add	ip, ip, #412	; 0x19c
    359c:	add	r1, pc, r1
    35a0:	add	r2, pc, r2
    35a4:	str	ip, [sp]
    35a8:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    35ac:	bl	1320 <ply_logger_get_error_default@plt>
    35b0:	bl	1134 <ply_logger_flush@plt>
    35b4:	str	r4, [r7]
    35b8:	mov	r0, #0
    35bc:	b	350c <main@@Base+0x2120>
    35c0:	bl	1320 <ply_logger_get_error_default@plt>
    35c4:	bl	1134 <ply_logger_flush@plt>
    35c8:	str	r9, [r7]
    35cc:	bl	1320 <ply_logger_get_error_default@plt>
    35d0:	ldr	ip, [pc, #288]	; 36f8 <main@@Base+0x230c>
    35d4:	ldr	r1, [pc, #288]	; 36fc <main@@Base+0x2310>
    35d8:	mov	r3, #189	; 0xbd
    35dc:	ldr	r2, [pc, #284]	; 3700 <main@@Base+0x2314>
    35e0:	add	ip, pc, ip
    35e4:	add	ip, ip, #412	; 0x19c
    35e8:	add	r1, pc, r1
    35ec:	add	r2, pc, r2
    35f0:	str	ip, [sp]
    35f4:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    35f8:	bl	1320 <ply_logger_get_error_default@plt>
    35fc:	bl	1134 <ply_logger_flush@plt>
    3600:	str	r9, [r7]
    3604:	b	3544 <main@@Base+0x2158>
    3608:	bl	1320 <ply_logger_get_error_default@plt>
    360c:	mov	r9, r8
    3610:	bl	1134 <ply_logger_flush@plt>
    3614:	str	r8, [r7]
    3618:	bl	1320 <ply_logger_get_error_default@plt>
    361c:	ldr	ip, [pc, #224]	; 3704 <main@@Base+0x2318>
    3620:	ldr	r1, [pc, #224]	; 3708 <main@@Base+0x231c>
    3624:	mov	r3, #188	; 0xbc
    3628:	ldr	r2, [pc, #220]	; 370c <main@@Base+0x2320>
    362c:	add	ip, pc, ip
    3630:	add	ip, ip, #412	; 0x19c
    3634:	add	r1, pc, r1
    3638:	add	r2, pc, r2
    363c:	str	ip, [sp]
    3640:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    3644:	bl	1320 <ply_logger_get_error_default@plt>
    3648:	bl	1134 <ply_logger_flush@plt>
    364c:	str	r8, [r7]
    3650:	b	3534 <main@@Base+0x2148>
    3654:	ldr	r3, [pc, #180]	; 3710 <main@@Base+0x2324>
    3658:	mov	r2, #180	; 0xb4
    365c:	ldr	r0, [pc, #176]	; 3714 <main@@Base+0x2328>
    3660:	ldr	r1, [pc, #176]	; 3718 <main@@Base+0x232c>
    3664:	add	r3, pc, r3
    3668:	add	r0, pc, r0
    366c:	add	r3, r3, #388	; 0x184
    3670:	add	r1, pc, r1
    3674:	bl	13e0 <__assert_fail@plt>
    3678:	ldr	r3, [pc, #156]	; 371c <main@@Base+0x2330>
    367c:	mov	r2, #179	; 0xb3
    3680:	ldr	r0, [pc, #152]	; 3720 <main@@Base+0x2334>
    3684:	ldr	r1, [pc, #152]	; 3724 <main@@Base+0x2338>
    3688:	add	r3, pc, r3
    368c:	add	r0, pc, r0
    3690:	add	r3, r3, #388	; 0x184
    3694:	add	r1, pc, r1
    3698:	bl	13e0 <__assert_fail@plt>
    369c:	ldr	r3, [pc, #132]	; 3728 <main@@Base+0x233c>
    36a0:	mov	r2, #178	; 0xb2
    36a4:	ldr	r0, [pc, #128]	; 372c <main@@Base+0x2340>
    36a8:	ldr	r1, [pc, #128]	; 3730 <main@@Base+0x2344>
    36ac:	add	r3, pc, r3
    36b0:	add	r0, pc, r0
    36b4:	add	r3, r3, #388	; 0x184
    36b8:	add	r1, pc, r1
    36bc:	bl	13e0 <__assert_fail@plt>
    36c0:	ldr	r3, [pc, #108]	; 3734 <main@@Base+0x2348>
    36c4:	mov	r2, #177	; 0xb1
    36c8:	ldr	r0, [pc, #104]	; 3738 <main@@Base+0x234c>
    36cc:	ldr	r1, [pc, #104]	; 373c <main@@Base+0x2350>
    36d0:	add	r3, pc, r3
    36d4:	add	r0, pc, r0
    36d8:	add	r3, r3, #388	; 0x184
    36dc:	add	r1, pc, r1
    36e0:	bl	13e0 <__assert_fail@plt>
    36e4:	strdeq	r2, [r0], -ip
    36e8:	andeq	r2, r0, r4, lsr pc
    36ec:	andeq	r2, r0, r8, asr #12
    36f0:	strdeq	r2, [r0], -r8
    36f4:	andeq	r2, r0, ip, asr #22
    36f8:	strdeq	r2, [r0], -ip
    36fc:	andeq	r2, r0, r8, asr lr
    3700:	andeq	r2, r0, r0, lsl #22
    3704:			; <UNDEFINED> instruction: 0x000025b0
    3708:	andeq	r2, r0, r4, asr #27
    370c:			; <UNDEFINED> instruction: 0x00002ab4
    3710:	andeq	r2, r0, r8, ror r5
    3714:	andeq	r2, r0, r0, asr #26
    3718:	andeq	r2, r0, ip, ror sl
    371c:	andeq	r2, r0, r4, asr r5
    3720:	strdeq	r2, [r0], -r0
    3724:	andeq	r2, r0, r8, asr sl
    3728:	andeq	r2, r0, r0, lsr r5
    372c:			; <UNDEFINED> instruction: 0x00002cb4
    3730:	andeq	r2, r0, r4, lsr sl
    3734:	andeq	r2, r0, ip, lsl #10
    3738:	andeq	r2, r0, r0, lsl #20
    373c:	andeq	r2, r0, r0, lsl sl
    3740:	cmp	r0, #0
    3744:	mov	ip, r3
    3748:	push	{lr}		; (str lr, [sp, #-4]!)
    374c:	sub	sp, sp, #12
    3750:	beq	3778 <main@@Base+0x238c>
    3754:	mov	r3, r1
    3758:	ldr	r1, [pc, #60]	; 379c <main@@Base+0x23b0>
    375c:	str	r2, [sp]
    3760:	mov	r2, #0
    3764:	str	ip, [sp, #4]
    3768:	add	r1, pc, r1
    376c:	bl	281c <main@@Base+0x1430>
    3770:	add	sp, sp, #12
    3774:	pop	{pc}		; (ldr pc, [sp], #4)
    3778:	ldr	r3, [pc, #32]	; 37a0 <main@@Base+0x23b4>
    377c:	movw	r2, #531	; 0x213
    3780:	ldr	r0, [pc, #28]	; 37a4 <main@@Base+0x23b8>
    3784:	ldr	r1, [pc, #28]	; 37a8 <main@@Base+0x23bc>
    3788:	add	r3, pc, r3
    378c:	add	r0, pc, r0
    3790:	add	r3, r3, #436	; 0x1b4
    3794:	add	r1, pc, r1
    3798:	bl	13e0 <__assert_fail@plt>
    379c:	andeq	r2, r0, ip, ror #26
    37a0:	andeq	r2, r0, r4, asr r4
    37a4:	andeq	r2, r0, r8, asr #18
    37a8:	andeq	r2, r0, r8, asr r9
    37ac:	cmp	r0, #0
    37b0:	mov	ip, r2
    37b4:	push	{lr}		; (str lr, [sp, #-4]!)
    37b8:	sub	sp, sp, #12
    37bc:	beq	37e8 <main@@Base+0x23fc>
    37c0:	str	r3, [sp]
    37c4:	mov	r2, r1
    37c8:	ldr	r3, [sp, #16]
    37cc:	ldr	r1, [pc, #56]	; 380c <main@@Base+0x2420>
    37d0:	str	r3, [sp, #4]
    37d4:	add	r1, pc, r1
    37d8:	mov	r3, ip
    37dc:	bl	281c <main@@Base+0x1430>
    37e0:	add	sp, sp, #12
    37e4:	pop	{pc}		; (ldr pc, [sp], #4)
    37e8:	ldr	r3, [pc, #32]	; 3810 <main@@Base+0x2424>
    37ec:	mov	r2, #544	; 0x220
    37f0:	ldr	r0, [pc, #28]	; 3814 <main@@Base+0x2428>
    37f4:	ldr	r1, [pc, #28]	; 3818 <main@@Base+0x242c>
    37f8:	add	r3, pc, r3
    37fc:	add	r0, pc, r0
    3800:	add	r3, r3, #464	; 0x1d0
    3804:	add	r1, pc, r1
    3808:	bl	13e0 <__assert_fail@plt>
    380c:	andeq	r2, r0, r4, lsl #26
    3810:	andeq	r2, r0, r4, ror #7
    3814:	ldrdeq	r2, [r0], -r8
    3818:	andeq	r2, r0, r8, ror #17
    381c:	cmp	r0, #0
    3820:	mov	ip, r2
    3824:	push	{lr}		; (str lr, [sp, #-4]!)
    3828:	sub	sp, sp, #12
    382c:	beq	3858 <main@@Base+0x246c>
    3830:	str	r3, [sp]
    3834:	mov	r2, r1
    3838:	ldr	r3, [sp, #16]
    383c:	ldr	r1, [pc, #56]	; 387c <main@@Base+0x2490>
    3840:	str	r3, [sp, #4]
    3844:	add	r1, pc, r1
    3848:	mov	r3, ip
    384c:	bl	281c <main@@Base+0x1430>
    3850:	add	sp, sp, #12
    3854:	pop	{pc}		; (ldr pc, [sp], #4)
    3858:	ldr	r3, [pc, #32]	; 3880 <main@@Base+0x2494>
    385c:	movw	r2, #557	; 0x22d
    3860:	ldr	r0, [pc, #28]	; 3884 <main@@Base+0x2498>
    3864:	ldr	r1, [pc, #28]	; 3888 <main@@Base+0x249c>
    3868:	add	r3, pc, r3
    386c:	add	r0, pc, r0
    3870:	add	r3, r3, #496	; 0x1f0
    3874:	add	r1, pc, r1
    3878:	bl	13e0 <__assert_fail@plt>
    387c:	muleq	r0, r8, ip
    3880:	andeq	r2, r0, r4, ror r3
    3884:	andeq	r2, r0, r8, ror #16
    3888:	andeq	r2, r0, r8, ror r8
    388c:	cmp	r0, #0
    3890:	mov	ip, r2
    3894:	push	{lr}		; (str lr, [sp, #-4]!)
    3898:	sub	sp, sp, #12
    389c:	beq	38c8 <main@@Base+0x24dc>
    38a0:	str	r3, [sp]
    38a4:	mov	r2, r1
    38a8:	ldr	r3, [sp, #16]
    38ac:	ldr	r1, [pc, #56]	; 38ec <main@@Base+0x2500>
    38b0:	str	r3, [sp, #4]
    38b4:	add	r1, pc, r1
    38b8:	mov	r3, ip
    38bc:	bl	281c <main@@Base+0x1430>
    38c0:	add	sp, sp, #12
    38c4:	pop	{pc}		; (ldr pc, [sp], #4)
    38c8:	ldr	r3, [pc, #32]	; 38f0 <main@@Base+0x2504>
    38cc:	movw	r2, #570	; 0x23a
    38d0:	ldr	r0, [pc, #28]	; 38f4 <main@@Base+0x2508>
    38d4:	ldr	r1, [pc, #28]	; 38f8 <main@@Base+0x250c>
    38d8:	add	r3, pc, r3
    38dc:	add	r0, pc, r0
    38e0:	add	r3, r3, #524	; 0x20c
    38e4:	add	r1, pc, r1
    38e8:	bl	13e0 <__assert_fail@plt>
    38ec:	andeq	r2, r0, ip, lsr #24
    38f0:	andeq	r2, r0, r4, lsl #6
    38f4:	strdeq	r2, [r0], -r8
    38f8:	andeq	r2, r0, r8, lsl #16
    38fc:	cmp	r0, #0
    3900:	mov	ip, r2
    3904:	push	{lr}		; (str lr, [sp, #-4]!)
    3908:	sub	sp, sp, #12
    390c:	beq	3940 <main@@Base+0x2554>
    3910:	cmp	r1, #0
    3914:	beq	3964 <main@@Base+0x2578>
    3918:	str	r3, [sp]
    391c:	mov	r2, r1
    3920:	ldr	r3, [sp, #16]
    3924:	ldr	r1, [pc, #92]	; 3988 <main@@Base+0x259c>
    3928:	str	r3, [sp, #4]
    392c:	add	r1, pc, r1
    3930:	mov	r3, ip
    3934:	bl	281c <main@@Base+0x1430>
    3938:	add	sp, sp, #12
    393c:	pop	{pc}		; (ldr pc, [sp], #4)
    3940:	ldr	r3, [pc, #68]	; 398c <main@@Base+0x25a0>
    3944:	movw	r2, #583	; 0x247
    3948:	ldr	r0, [pc, #64]	; 3990 <main@@Base+0x25a4>
    394c:	ldr	r1, [pc, #64]	; 3994 <main@@Base+0x25a8>
    3950:	add	r3, pc, r3
    3954:	add	r0, pc, r0
    3958:	add	r3, r3, #556	; 0x22c
    395c:	add	r1, pc, r1
    3960:	bl	13e0 <__assert_fail@plt>
    3964:	ldr	r3, [pc, #44]	; 3998 <main@@Base+0x25ac>
    3968:	mov	r2, #584	; 0x248
    396c:	ldr	r0, [pc, #40]	; 399c <main@@Base+0x25b0>
    3970:	ldr	r1, [pc, #40]	; 39a0 <main@@Base+0x25b4>
    3974:	add	r3, pc, r3
    3978:	add	r0, pc, r0
    397c:	add	r3, r3, #556	; 0x22c
    3980:	add	r1, pc, r1
    3984:	bl	13e0 <__assert_fail@plt>
    3988:	ldrdeq	r2, [r0], -r0
    398c:	andeq	r2, r0, ip, lsl #5
    3990:	andeq	r2, r0, r0, lsl #15
    3994:	muleq	r0, r0, r7
    3998:	andeq	r2, r0, r8, ror #4
    399c:	andeq	r2, r0, ip, ror #22
    39a0:	andeq	r2, r0, ip, ror #14
    39a4:	cmp	r0, #0
    39a8:	mov	ip, r2
    39ac:	push	{lr}		; (str lr, [sp, #-4]!)
    39b0:	sub	sp, sp, #12
    39b4:	beq	39e8 <main@@Base+0x25fc>
    39b8:	cmp	r1, #0
    39bc:	beq	3a0c <main@@Base+0x2620>
    39c0:	str	r3, [sp]
    39c4:	mov	r2, r1
    39c8:	ldr	r3, [sp, #16]
    39cc:	ldr	r1, [pc, #92]	; 3a30 <main@@Base+0x2644>
    39d0:	str	r3, [sp, #4]
    39d4:	add	r1, pc, r1
    39d8:	mov	r3, ip
    39dc:	bl	281c <main@@Base+0x1430>
    39e0:	add	sp, sp, #12
    39e4:	pop	{pc}		; (ldr pc, [sp], #4)
    39e8:	ldr	r3, [pc, #68]	; 3a34 <main@@Base+0x2648>
    39ec:	movw	r2, #597	; 0x255
    39f0:	ldr	r0, [pc, #64]	; 3a38 <main@@Base+0x264c>
    39f4:	ldr	r1, [pc, #64]	; 3a3c <main@@Base+0x2650>
    39f8:	add	r3, pc, r3
    39fc:	add	r0, pc, r0
    3a00:	add	r3, r3, #600	; 0x258
    3a04:	add	r1, pc, r1
    3a08:	bl	13e0 <__assert_fail@plt>
    3a0c:	ldr	r3, [pc, #44]	; 3a40 <main@@Base+0x2654>
    3a10:	movw	r2, #598	; 0x256
    3a14:	ldr	r0, [pc, #40]	; 3a44 <main@@Base+0x2658>
    3a18:	ldr	r1, [pc, #40]	; 3a48 <main@@Base+0x265c>
    3a1c:	add	r3, pc, r3
    3a20:	add	r0, pc, r0
    3a24:	add	r3, r3, #600	; 0x258
    3a28:	add	r1, pc, r1
    3a2c:	bl	13e0 <__assert_fail@plt>
    3a30:	andeq	r2, r0, r4, asr #22
    3a34:	andeq	r2, r0, r4, ror #3
    3a38:	ldrdeq	r2, [r0], -r8
    3a3c:	andeq	r2, r0, r8, ror #13
    3a40:	andeq	r2, r0, r0, asr #3
    3a44:	andeq	r2, r0, r0, ror #21
    3a48:	andeq	r2, r0, r4, asr #13
    3a4c:	cmp	r0, #0
    3a50:	mov	ip, r2
    3a54:	push	{lr}		; (str lr, [sp, #-4]!)
    3a58:	sub	sp, sp, #12
    3a5c:	beq	3a90 <main@@Base+0x26a4>
    3a60:	cmp	r1, #0
    3a64:	beq	3ab4 <main@@Base+0x26c8>
    3a68:	str	r3, [sp]
    3a6c:	mov	r2, r1
    3a70:	ldr	r3, [sp, #16]
    3a74:	ldr	r1, [pc, #92]	; 3ad8 <main@@Base+0x26ec>
    3a78:	str	r3, [sp, #4]
    3a7c:	add	r1, pc, r1
    3a80:	mov	r3, ip
    3a84:	bl	281c <main@@Base+0x1430>
    3a88:	add	sp, sp, #12
    3a8c:	pop	{pc}		; (ldr pc, [sp], #4)
    3a90:	ldr	r3, [pc, #68]	; 3adc <main@@Base+0x26f0>
    3a94:	movw	r2, #611	; 0x263
    3a98:	ldr	r0, [pc, #64]	; 3ae0 <main@@Base+0x26f4>
    3a9c:	ldr	r1, [pc, #64]	; 3ae4 <main@@Base+0x26f8>
    3aa0:	add	r3, pc, r3
    3aa4:	add	r0, pc, r0
    3aa8:	add	r3, r3, #648	; 0x288
    3aac:	add	r1, pc, r1
    3ab0:	bl	13e0 <__assert_fail@plt>
    3ab4:	ldr	r3, [pc, #44]	; 3ae8 <main@@Base+0x26fc>
    3ab8:	mov	r2, #612	; 0x264
    3abc:	ldr	r0, [pc, #40]	; 3aec <main@@Base+0x2700>
    3ac0:	ldr	r1, [pc, #40]	; 3af0 <main@@Base+0x2704>
    3ac4:	add	r3, pc, r3
    3ac8:	add	r0, pc, r0
    3acc:	add	r3, r3, #648	; 0x288
    3ad0:	add	r1, pc, r1
    3ad4:	bl	13e0 <__assert_fail@plt>
    3ad8:	andeq	r2, r0, r0, lsr #21
    3adc:	andeq	r2, r0, ip, lsr r1
    3ae0:	andeq	r2, r0, r0, lsr r6
    3ae4:	andeq	r2, r0, r0, asr #12
    3ae8:	andeq	r2, r0, r8, lsl r1
    3aec:	andeq	r2, r0, r8, lsr sl
    3af0:	andeq	r2, r0, ip, lsl r6
    3af4:	cmp	r0, #0
    3af8:	mov	ip, r3
    3afc:	push	{lr}		; (str lr, [sp, #-4]!)
    3b00:	sub	sp, sp, #12
    3b04:	beq	3b2c <main@@Base+0x2740>
    3b08:	mov	r3, r1
    3b0c:	ldr	r1, [pc, #60]	; 3b50 <main@@Base+0x2764>
    3b10:	str	r2, [sp]
    3b14:	mov	r2, #0
    3b18:	str	ip, [sp, #4]
    3b1c:	add	r1, pc, r1
    3b20:	bl	281c <main@@Base+0x1430>
    3b24:	add	sp, sp, #12
    3b28:	pop	{pc}		; (ldr pc, [sp], #4)
    3b2c:	ldr	r3, [pc, #32]	; 3b54 <main@@Base+0x2768>
    3b30:	mov	r2, #624	; 0x270
    3b34:	ldr	r0, [pc, #28]	; 3b58 <main@@Base+0x276c>
    3b38:	ldr	r1, [pc, #28]	; 3b5c <main@@Base+0x2770>
    3b3c:	add	r3, pc, r3
    3b40:	add	r0, pc, r0
    3b44:	add	r3, r3, #692	; 0x2b4
    3b48:	add	r1, pc, r1
    3b4c:	bl	13e0 <__assert_fail@plt>
    3b50:	andeq	r2, r0, r4, lsl #20
    3b54:	andeq	r2, r0, r0, lsr #1
    3b58:	muleq	r0, r4, r5
    3b5c:	andeq	r2, r0, r4, lsr #11
    3b60:	cmp	r0, #0
    3b64:	mov	ip, r2
    3b68:	push	{lr}		; (str lr, [sp, #-4]!)
    3b6c:	sub	sp, sp, #12
    3b70:	beq	3b9c <main@@Base+0x27b0>
    3b74:	str	r3, [sp]
    3b78:	mov	r2, r1
    3b7c:	ldr	r3, [sp, #16]
    3b80:	ldr	r1, [pc, #56]	; 3bc0 <main@@Base+0x27d4>
    3b84:	str	r3, [sp, #4]
    3b88:	add	r1, pc, r1
    3b8c:	mov	r3, ip
    3b90:	bl	281c <main@@Base+0x1430>
    3b94:	add	sp, sp, #12
    3b98:	pop	{pc}		; (ldr pc, [sp], #4)
    3b9c:	ldr	r3, [pc, #32]	; 3bc4 <main@@Base+0x27d8>
    3ba0:	movw	r2, #639	; 0x27f
    3ba4:	ldr	r0, [pc, #28]	; 3bc8 <main@@Base+0x27dc>
    3ba8:	ldr	r1, [pc, #28]	; 3bcc <main@@Base+0x27e0>
    3bac:	add	r3, pc, r3
    3bb0:	add	r0, pc, r0
    3bb4:	add	r3, r3, #744	; 0x2e8
    3bb8:	add	r1, pc, r1
    3bbc:	bl	13e0 <__assert_fail@plt>
    3bc0:	muleq	r0, ip, r9
    3bc4:	andeq	r2, r0, r0, lsr r0
    3bc8:	andeq	r2, r0, r4, lsr #10
    3bcc:	andeq	r2, r0, r4, lsr r5
    3bd0:	cmp	r0, #0
    3bd4:	mov	ip, r3
    3bd8:	push	{lr}		; (str lr, [sp, #-4]!)
    3bdc:	sub	sp, sp, #12
    3be0:	beq	3c08 <main@@Base+0x281c>
    3be4:	mov	r3, r1
    3be8:	ldr	r1, [pc, #60]	; 3c2c <main@@Base+0x2840>
    3bec:	str	r2, [sp]
    3bf0:	mov	r2, #0
    3bf4:	str	ip, [sp, #4]
    3bf8:	add	r1, pc, r1
    3bfc:	bl	281c <main@@Base+0x1430>
    3c00:	add	sp, sp, #12
    3c04:	pop	{pc}		; (ldr pc, [sp], #4)
    3c08:	ldr	r3, [pc, #32]	; 3c30 <main@@Base+0x2844>
    3c0c:	mov	r2, #652	; 0x28c
    3c10:	ldr	r0, [pc, #28]	; 3c34 <main@@Base+0x2848>
    3c14:	ldr	r1, [pc, #28]	; 3c38 <main@@Base+0x284c>
    3c18:	add	r3, pc, r3
    3c1c:	add	r0, pc, r0
    3c20:	add	r3, r3, #784	; 0x310
    3c24:	add	r1, pc, r1
    3c28:	bl	13e0 <__assert_fail@plt>
    3c2c:	andeq	r2, r0, r0, lsr r9
    3c30:	andeq	r1, r0, r4, asr #31
    3c34:			; <UNDEFINED> instruction: 0x000024b8
    3c38:	andeq	r2, r0, r8, asr #9
    3c3c:	cmp	r0, #0
    3c40:	mov	ip, r2
    3c44:	push	{lr}		; (str lr, [sp, #-4]!)
    3c48:	sub	sp, sp, #12
    3c4c:	beq	3c78 <main@@Base+0x288c>
    3c50:	str	r3, [sp]
    3c54:	mov	r2, r1
    3c58:	ldr	r3, [sp, #16]
    3c5c:	ldr	r1, [pc, #56]	; 3c9c <main@@Base+0x28b0>
    3c60:	str	r3, [sp, #4]
    3c64:	add	r1, pc, r1
    3c68:	mov	r3, ip
    3c6c:	bl	281c <main@@Base+0x1430>
    3c70:	add	sp, sp, #12
    3c74:	pop	{pc}		; (ldr pc, [sp], #4)
    3c78:	ldr	r3, [pc, #32]	; 3ca0 <main@@Base+0x28b4>
    3c7c:	movw	r2, #666	; 0x29a
    3c80:	ldr	r0, [pc, #28]	; 3ca4 <main@@Base+0x28b8>
    3c84:	ldr	r1, [pc, #28]	; 3ca8 <main@@Base+0x28bc>
    3c88:	add	r3, pc, r3
    3c8c:	add	r0, pc, r0
    3c90:	add	r3, r3, #832	; 0x340
    3c94:	add	r1, pc, r1
    3c98:	bl	13e0 <__assert_fail@plt>
    3c9c:	andeq	r2, r0, r8, asr #17
    3ca0:	andeq	r1, r0, r4, asr pc
    3ca4:	andeq	r2, r0, r8, asr #8
    3ca8:	andeq	r2, r0, r8, asr r4
    3cac:	cmp	r0, #0
    3cb0:	mov	ip, r2
    3cb4:	push	{lr}		; (str lr, [sp, #-4]!)
    3cb8:	sub	sp, sp, #12
    3cbc:	beq	3ce8 <main@@Base+0x28fc>
    3cc0:	str	r3, [sp]
    3cc4:	mov	r2, r1
    3cc8:	ldr	r3, [sp, #16]
    3ccc:	ldr	r1, [pc, #56]	; 3d0c <main@@Base+0x2920>
    3cd0:	str	r3, [sp, #4]
    3cd4:	add	r1, pc, r1
    3cd8:	mov	r3, ip
    3cdc:	bl	281c <main@@Base+0x1430>
    3ce0:	add	sp, sp, #12
    3ce4:	pop	{pc}		; (ldr pc, [sp], #4)
    3ce8:	ldr	r3, [pc, #32]	; 3d10 <main@@Base+0x2924>
    3cec:	mov	r2, #680	; 0x2a8
    3cf0:	ldr	r0, [pc, #28]	; 3d14 <main@@Base+0x2928>
    3cf4:	ldr	r1, [pc, #28]	; 3d18 <main@@Base+0x292c>
    3cf8:	add	r3, pc, r3
    3cfc:	add	r0, pc, r0
    3d00:	add	r3, r3, #868	; 0x364
    3d04:	add	r1, pc, r1
    3d08:	bl	13e0 <__assert_fail@plt>
    3d0c:	andeq	r2, r0, ip, asr r8
    3d10:	andeq	r1, r0, r4, ror #29
    3d14:	ldrdeq	r2, [r0], -r8
    3d18:	andeq	r2, r0, r8, ror #7
    3d1c:	cmp	r0, #0
    3d20:	mov	ip, r2
    3d24:	push	{lr}		; (str lr, [sp, #-4]!)
    3d28:	sub	sp, sp, #12
    3d2c:	beq	3d58 <main@@Base+0x296c>
    3d30:	str	r3, [sp]
    3d34:	mov	r2, r1
    3d38:	ldr	r3, [sp, #16]
    3d3c:	ldr	r1, [pc, #56]	; 3d7c <main@@Base+0x2990>
    3d40:	str	r3, [sp, #4]
    3d44:	add	r1, pc, r1
    3d48:	mov	r3, ip
    3d4c:	bl	281c <main@@Base+0x1430>
    3d50:	add	sp, sp, #12
    3d54:	pop	{pc}		; (ldr pc, [sp], #4)
    3d58:	ldr	r3, [pc, #32]	; 3d80 <main@@Base+0x2994>
    3d5c:	movw	r2, #694	; 0x2b6
    3d60:	ldr	r0, [pc, #28]	; 3d84 <main@@Base+0x2998>
    3d64:	ldr	r1, [pc, #28]	; 3d88 <main@@Base+0x299c>
    3d68:	add	r3, pc, r3
    3d6c:	add	r0, pc, r0
    3d70:	add	r3, r3, #920	; 0x398
    3d74:	add	r1, pc, r1
    3d78:	bl	13e0 <__assert_fail@plt>
    3d7c:	strdeq	r2, [r0], -r0
    3d80:	andeq	r1, r0, r4, ror lr
    3d84:	andeq	r2, r0, r8, ror #6
    3d88:	andeq	r2, r0, r8, ror r3
    3d8c:	cmp	r0, #0
    3d90:	mov	ip, r3
    3d94:	push	{lr}		; (str lr, [sp, #-4]!)
    3d98:	sub	sp, sp, #12
    3d9c:	beq	3dc4 <main@@Base+0x29d8>
    3da0:	mov	r3, r1
    3da4:	ldr	r1, [pc, #60]	; 3de8 <main@@Base+0x29fc>
    3da8:	str	r2, [sp]
    3dac:	mov	r2, #0
    3db0:	str	ip, [sp, #4]
    3db4:	add	r1, pc, r1
    3db8:	bl	281c <main@@Base+0x1430>
    3dbc:	add	sp, sp, #12
    3dc0:	pop	{pc}		; (ldr pc, [sp], #4)
    3dc4:	ldr	r3, [pc, #32]	; 3dec <main@@Base+0x2a00>
    3dc8:	movw	r2, #707	; 0x2c3
    3dcc:	ldr	r0, [pc, #28]	; 3df0 <main@@Base+0x2a04>
    3dd0:	ldr	r1, [pc, #28]	; 3df4 <main@@Base+0x2a08>
    3dd4:	add	r3, pc, r3
    3dd8:	add	r0, pc, r0
    3ddc:	add	r3, r3, #968	; 0x3c8
    3de0:	add	r1, pc, r1
    3de4:	bl	13e0 <__assert_fail@plt>
    3de8:	andeq	r2, r0, r4, lsl #15
    3dec:	andeq	r1, r0, r8, lsl #28
    3df0:	strdeq	r2, [r0], -ip
    3df4:	andeq	r2, r0, ip, lsl #6
    3df8:	cmp	r0, #0
    3dfc:	mov	ip, r3
    3e00:	push	{lr}		; (str lr, [sp, #-4]!)
    3e04:	sub	sp, sp, #12
    3e08:	beq	3e30 <main@@Base+0x2a44>
    3e0c:	mov	r3, r1
    3e10:	ldr	r1, [pc, #60]	; 3e54 <main@@Base+0x2a68>
    3e14:	str	r2, [sp]
    3e18:	mov	r2, #0
    3e1c:	str	ip, [sp, #4]
    3e20:	add	r1, pc, r1
    3e24:	bl	281c <main@@Base+0x1430>
    3e28:	add	sp, sp, #12
    3e2c:	pop	{pc}		; (ldr pc, [sp], #4)
    3e30:	ldr	r3, [pc, #32]	; 3e58 <main@@Base+0x2a6c>
    3e34:	movw	r2, #719	; 0x2cf
    3e38:	ldr	r0, [pc, #28]	; 3e5c <main@@Base+0x2a70>
    3e3c:	ldr	r1, [pc, #28]	; 3e60 <main@@Base+0x2a74>
    3e40:	add	r3, pc, r3
    3e44:	add	r0, pc, r0
    3e48:	add	r3, r3, #1012	; 0x3f4
    3e4c:	add	r1, pc, r1
    3e50:	bl	13e0 <__assert_fail@plt>
    3e54:	andeq	r2, r0, ip, lsl r7
    3e58:	muleq	r0, ip, sp
    3e5c:	muleq	r0, r0, r2
    3e60:	andeq	r2, r0, r0, lsr #5
    3e64:	cmp	r0, #0
    3e68:	mov	ip, r3
    3e6c:	push	{lr}		; (str lr, [sp, #-4]!)
    3e70:	sub	sp, sp, #12
    3e74:	beq	3e9c <main@@Base+0x2ab0>
    3e78:	mov	r3, r1
    3e7c:	ldr	r1, [pc, #60]	; 3ec0 <main@@Base+0x2ad4>
    3e80:	str	r2, [sp]
    3e84:	mov	r2, #0
    3e88:	str	ip, [sp, #4]
    3e8c:	add	r1, pc, r1
    3e90:	bl	281c <main@@Base+0x1430>
    3e94:	add	sp, sp, #12
    3e98:	pop	{pc}		; (ldr pc, [sp], #4)
    3e9c:	ldr	r3, [pc, #32]	; 3ec4 <main@@Base+0x2ad8>
    3ea0:	movw	r2, #731	; 0x2db
    3ea4:	ldr	r0, [pc, #28]	; 3ec8 <main@@Base+0x2adc>
    3ea8:	ldr	r1, [pc, #28]	; 3ecc <main@@Base+0x2ae0>
    3eac:	add	r3, pc, r3
    3eb0:	add	r0, pc, r0
    3eb4:	add	r3, r3, #1056	; 0x420
    3eb8:	add	r1, pc, r1
    3ebc:	bl	13e0 <__assert_fail@plt>
    3ec0:			; <UNDEFINED> instruction: 0x000026b4
    3ec4:	andeq	r1, r0, r0, lsr sp
    3ec8:	andeq	r2, r0, r4, lsr #4
    3ecc:	andeq	r2, r0, r4, lsr r2
    3ed0:	cmp	r0, #0
    3ed4:	mov	ip, r3
    3ed8:	push	{lr}		; (str lr, [sp, #-4]!)
    3edc:	sub	sp, sp, #12
    3ee0:	beq	3f08 <main@@Base+0x2b1c>
    3ee4:	mov	r3, r1
    3ee8:	ldr	r1, [pc, #64]	; 3f30 <main@@Base+0x2b44>
    3eec:	str	r2, [sp]
    3ef0:	mov	r2, #0
    3ef4:	str	ip, [sp, #4]
    3ef8:	add	r1, pc, r1
    3efc:	bl	281c <main@@Base+0x1430>
    3f00:	add	sp, sp, #12
    3f04:	pop	{pc}		; (ldr pc, [sp], #4)
    3f08:	ldr	r3, [pc, #36]	; 3f34 <main@@Base+0x2b48>
    3f0c:	movw	r2, #743	; 0x2e7
    3f10:	ldr	r0, [pc, #32]	; 3f38 <main@@Base+0x2b4c>
    3f14:	add	r3, pc, r3
    3f18:	ldr	r1, [pc, #28]	; 3f3c <main@@Base+0x2b50>
    3f1c:	add	r3, r3, #1088	; 0x440
    3f20:	add	r0, pc, r0
    3f24:	add	r1, pc, r1
    3f28:	add	r3, r3, #12
    3f2c:	bl	13e0 <__assert_fail@plt>
    3f30:	muleq	r0, r4, r2
    3f34:	andeq	r1, r0, r8, asr #25
    3f38:			; <UNDEFINED> instruction: 0x000021b4
    3f3c:	andeq	r2, r0, r8, asr #3
    3f40:	ldr	ip, [pc, #144]	; 3fd8 <main@@Base+0x2bec>
    3f44:	cmp	r0, #0
    3f48:	push	{r4, r5, r6, lr}
    3f4c:	add	ip, pc, ip
    3f50:	ldr	lr, [pc, #132]	; 3fdc <main@@Base+0x2bf0>
    3f54:	sub	sp, sp, #16
    3f58:	mov	r5, #0
    3f5c:	ldr	r6, [sp, #32]
    3f60:	ldr	r4, [ip, lr]
    3f64:	strh	r5, [sp, #8]
    3f68:	ldr	ip, [r4]
    3f6c:	str	ip, [sp, #12]
    3f70:	beq	3fac <main@@Base+0x2bc0>
    3f74:	add	ip, sp, #16
    3f78:	stm	sp, {r3, r6}
    3f7c:	mov	r3, r2
    3f80:	strb	r1, [ip, #-8]!
    3f84:	mov	r2, ip
    3f88:	ldr	r1, [pc, #80]	; 3fe0 <main@@Base+0x2bf4>
    3f8c:	add	r1, pc, r1
    3f90:	bl	281c <main@@Base+0x1430>
    3f94:	ldr	r2, [sp, #12]
    3f98:	ldr	r3, [r4]
    3f9c:	cmp	r2, r3
    3fa0:	bne	3fd4 <main@@Base+0x2be8>
    3fa4:	add	sp, sp, #16
    3fa8:	pop	{r4, r5, r6, pc}
    3fac:	ldr	r3, [pc, #48]	; 3fe4 <main@@Base+0x2bf8>
    3fb0:	movw	r2, #758	; 0x2f6
    3fb4:	ldr	r0, [pc, #44]	; 3fe8 <main@@Base+0x2bfc>
    3fb8:	add	r3, pc, r3
    3fbc:	ldr	r1, [pc, #40]	; 3fec <main@@Base+0x2c00>
    3fc0:	add	r3, r3, #1136	; 0x470
    3fc4:	add	r0, pc, r0
    3fc8:	add	r1, pc, r1
    3fcc:	add	r3, r3, #8
    3fd0:	bl	13e0 <__assert_fail@plt>
    3fd4:	bl	1188 <__stack_chk_fail@plt>
    3fd8:	andeq	r3, r1, r0, ror #30
    3fdc:	andeq	r0, r0, r0, lsr r1
    3fe0:			; <UNDEFINED> instruction: 0x000025b8
    3fe4:	andeq	r1, r0, r4, lsr #24
    3fe8:	andeq	r2, r0, r0, lsl r1
    3fec:	andeq	r2, r0, r4, lsr #2
    3ff0:	push	{lr}		; (str lr, [sp, #-4]!)
    3ff4:	sub	sp, sp, #12
    3ff8:	stm	sp, {r2, r3}
    3ffc:	mov	r3, r1
    4000:	ldr	r1, [pc, #16]	; 4018 <main@@Base+0x2c2c>
    4004:	mov	r2, #0
    4008:	add	r1, pc, r1
    400c:	bl	281c <main@@Base+0x1430>
    4010:	add	sp, sp, #12
    4014:	pop	{pc}		; (ldr pc, [sp], #4)
    4018:	andeq	r2, r0, r0, asr #10
    401c:	push	{lr}		; (str lr, [sp, #-4]!)
    4020:	sub	sp, sp, #12
    4024:	stm	sp, {r2, r3}
    4028:	mov	r3, r1
    402c:	ldr	r1, [pc, #16]	; 4044 <main@@Base+0x2c58>
    4030:	mov	r2, #0
    4034:	add	r1, pc, r1
    4038:	bl	281c <main@@Base+0x1430>
    403c:	add	sp, sp, #12
    4040:	pop	{pc}		; (ldr pc, [sp], #4)
    4044:	andeq	r2, r0, r8, lsl r5
    4048:	push	{lr}		; (str lr, [sp, #-4]!)
    404c:	sub	sp, sp, #12
    4050:	stm	sp, {r2, r3}
    4054:	mov	r3, r1
    4058:	ldr	r1, [pc, #16]	; 4070 <main@@Base+0x2c84>
    405c:	mov	r2, #0
    4060:	add	r1, pc, r1
    4064:	bl	281c <main@@Base+0x1430>
    4068:	add	sp, sp, #12
    406c:	pop	{pc}		; (ldr pc, [sp], #4)
    4070:	strdeq	r2, [r0], -r0
    4074:	push	{lr}		; (str lr, [sp, #-4]!)
    4078:	sub	sp, sp, #12
    407c:	stm	sp, {r2, r3}
    4080:	mov	r3, r1
    4084:	ldr	r1, [pc, #16]	; 409c <main@@Base+0x2cb0>
    4088:	mov	r2, #0
    408c:	add	r1, pc, r1
    4090:	bl	281c <main@@Base+0x1430>
    4094:	add	sp, sp, #12
    4098:	pop	{pc}		; (ldr pc, [sp], #4)
    409c:	andeq	r2, r0, r8, asr #9
    40a0:	push	{r4, lr}
    40a4:	subs	r4, r0, #0
    40a8:	bne	40b8 <main@@Base+0x2ccc>
    40ac:	b	40cc <main@@Base+0x2ce0>
    40b0:	ldr	r0, [r4]
    40b4:	bl	1164 <ply_event_loop_process_pending_events@plt>
    40b8:	ldr	r0, [r4, #12]
    40bc:	bl	10ec <ply_list_get_length@plt>
    40c0:	cmp	r0, #0
    40c4:	bgt	40b0 <main@@Base+0x2cc4>
    40c8:	pop	{r4, pc}
    40cc:	ldr	r3, [pc, #32]	; 40f4 <main@@Base+0x2d08>
    40d0:	mov	r2, #808	; 0x328
    40d4:	ldr	r0, [pc, #28]	; 40f8 <main@@Base+0x2d0c>
    40d8:	add	r3, pc, r3
    40dc:	ldr	r1, [pc, #24]	; 40fc <main@@Base+0x2d10>
    40e0:	add	r3, r3, #1168	; 0x490
    40e4:	add	r0, pc, r0
    40e8:	add	r1, pc, r1
    40ec:	add	r3, r3, #12
    40f0:	bl	13e0 <__assert_fail@plt>
    40f4:	andeq	r1, r0, r4, lsl #22
    40f8:	strdeq	r1, [r0], -r0
    40fc:	andeq	r2, r0, r4
    4100:	push	{r4, lr}
    4104:	subs	r4, r0, #0
    4108:	beq	412c <main@@Base+0x2d40>
    410c:	ldr	r0, [r4, #20]
    4110:	bl	13bc <close@plt>
    4114:	ldrb	r3, [r4, #32]
    4118:	mvn	r2, #0
    411c:	str	r2, [r4, #20]
    4120:	bfc	r3, #0, #1
    4124:	strb	r3, [r4, #32]
    4128:	pop	{r4, pc}
    412c:	ldr	r3, [pc, #32]	; 4154 <main@@Base+0x2d68>
    4130:	movw	r2, #819	; 0x333
    4134:	ldr	r0, [pc, #28]	; 4158 <main@@Base+0x2d6c>
    4138:	add	r3, pc, r3
    413c:	ldr	r1, [pc, #24]	; 415c <main@@Base+0x2d70>
    4140:	add	r3, r3, #1200	; 0x4b0
    4144:	add	r0, pc, r0
    4148:	add	r1, pc, r1
    414c:	add	r3, r3, #4
    4150:	bl	13e0 <__assert_fail@plt>
    4154:	andeq	r1, r0, r4, lsr #21
    4158:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    415c:	andeq	r1, r0, r4, lsr #31
    4160:	push	{r4, r5, lr}
    4164:	subs	r4, r0, #0
    4168:	sub	sp, sp, #12
    416c:	mov	r5, r1
    4170:	beq	41d0 <main@@Base+0x2de4>
    4174:	cmp	r1, #0
    4178:	beq	4218 <main@@Base+0x2e2c>
    417c:	ldr	r2, [r4]
    4180:	cmp	r2, #0
    4184:	bne	41f4 <main@@Base+0x2e08>
    4188:	ldr	r1, [r4, #20]
    418c:	str	r5, [r4]
    4190:	cmp	r1, #0
    4194:	blt	41b4 <main@@Base+0x2dc8>
    4198:	ldr	ip, [pc, #156]	; 423c <main@@Base+0x2e50>
    419c:	mov	r3, r2
    41a0:	str	r4, [sp, #4]
    41a4:	mov	r0, r5
    41a8:	add	ip, pc, ip
    41ac:	str	ip, [sp]
    41b0:	bl	132c <ply_event_loop_watch_fd@plt>
    41b4:	ldr	r1, [pc, #132]	; 4240 <main@@Base+0x2e54>
    41b8:	mov	r0, r5
    41bc:	mov	r2, r4
    41c0:	add	r1, pc, r1
    41c4:	add	sp, sp, #12
    41c8:	pop	{r4, r5, lr}
    41cc:	b	1344 <ply_event_loop_watch_for_exit@plt>
    41d0:	ldr	r3, [pc, #108]	; 4244 <main@@Base+0x2e58>
    41d4:	movw	r2, #851	; 0x353
    41d8:	ldr	r0, [pc, #104]	; 4248 <main@@Base+0x2e5c>
    41dc:	ldr	r1, [pc, #104]	; 424c <main@@Base+0x2e60>
    41e0:	add	r3, pc, r3
    41e4:	add	r0, pc, r0
    41e8:	add	r3, r3, #1232	; 0x4d0
    41ec:	add	r1, pc, r1
    41f0:	bl	13e0 <__assert_fail@plt>
    41f4:	ldr	r3, [pc, #84]	; 4250 <main@@Base+0x2e64>
    41f8:	movw	r2, #853	; 0x355
    41fc:	ldr	r0, [pc, #80]	; 4254 <main@@Base+0x2e68>
    4200:	ldr	r1, [pc, #80]	; 4258 <main@@Base+0x2e6c>
    4204:	add	r3, pc, r3
    4208:	add	r0, pc, r0
    420c:	add	r3, r3, #1232	; 0x4d0
    4210:	add	r1, pc, r1
    4214:	bl	13e0 <__assert_fail@plt>
    4218:	ldr	r3, [pc, #60]	; 425c <main@@Base+0x2e70>
    421c:	mov	r2, #852	; 0x354
    4220:	ldr	r0, [pc, #56]	; 4260 <main@@Base+0x2e74>
    4224:	ldr	r1, [pc, #56]	; 4264 <main@@Base+0x2e78>
    4228:	add	r3, pc, r3
    422c:	add	r0, pc, r0
    4230:	add	r3, r3, #1232	; 0x4d0
    4234:	add	r1, pc, r1
    4238:	bl	13e0 <__assert_fail@plt>
    423c:			; <UNDEFINED> instruction: 0xfffff140
    4240:			; <UNDEFINED> instruction: 0xfffff18c
    4244:	strdeq	r1, [r0], -ip
    4248:	strdeq	r1, [r0], -r0
    424c:	andeq	r1, r0, r0, lsl #30
    4250:	ldrdeq	r1, [r0], -r8
    4254:	andeq	r2, r0, r0, asr r3
    4258:	ldrdeq	r1, [r0], -ip
    425c:			; <UNDEFINED> instruction: 0x000019b4
    4260:	ldrdeq	r1, [r0], -ip
    4264:			; <UNDEFINED> instruction: 0x00001eb8
    4268:	ldr	r1, [pc, #20]	; 4284 <main@@Base+0x2e98>
    426c:	mov	r3, r0
    4270:	ldr	r2, [pc, #16]	; 4288 <main@@Base+0x2e9c>
    4274:	add	r1, pc, r1
    4278:	ldr	r0, [r0, #4]
    427c:	add	r2, pc, r2
    4280:	b	3d8c <main@@Base+0x29a0>
    4284:	andeq	r0, r0, r4, rrx
    4288:	andeq	r0, r0, r0, asr r0
    428c:	ldr	r1, [pc, #20]	; 42a8 <main@@Base+0x2ebc>
    4290:	mov	r3, r0
    4294:	ldr	r2, [pc, #16]	; 42ac <main@@Base+0x2ec0>
    4298:	add	r1, pc, r1
    429c:	ldr	r0, [r0, #4]
    42a0:	add	r2, pc, r2
    42a4:	b	3df8 <main@@Base+0x2a0c>
    42a8:	andeq	r0, r0, r0, asr #32
    42ac:	andeq	r0, r0, ip, lsr #32
    42b0:	ldr	r1, [pc, #20]	; 42cc <main@@Base+0x2ee0>
    42b4:	mov	r3, r0
    42b8:	ldr	r2, [pc, #16]	; 42d0 <main@@Base+0x2ee4>
    42bc:	add	r1, pc, r1
    42c0:	ldr	r0, [r0, #4]
    42c4:	add	r2, pc, r2
    42c8:	b	4074 <main@@Base+0x2c88>
    42cc:	andeq	r0, r0, ip, lsl r0
    42d0:	andeq	r0, r0, r8
    42d4:	ldr	r0, [r0]
    42d8:	mov	r1, #1
    42dc:	b	1260 <ply_event_loop_exit@plt>
    42e0:	ldr	r0, [r0]
    42e4:	mov	r1, #0
    42e8:	b	1260 <ply_event_loop_exit@plt>
    42ec:	ldr	ip, [pc, #228]	; 43d8 <main@@Base+0x2fec>
    42f0:	push	{r4, r5, r6, r7, r8, lr}
    42f4:	add	ip, pc, ip
    42f8:	ldr	lr, [pc, #220]	; 43dc <main@@Base+0x2ff0>
    42fc:	sub	sp, sp, #16
    4300:	add	r2, sp, #16
    4304:	ldr	r1, [pc, #212]	; 43e0 <main@@Base+0x2ff4>
    4308:	mov	r4, #0
    430c:	mov	r6, r0
    4310:	ldr	r5, [ip, lr]
    4314:	mov	r3, r4
    4318:	ldr	r0, [r0, #8]
    431c:	add	r1, pc, r1
    4320:	strb	r4, [r2, #-5]!
    4324:	ldr	ip, [r5]
    4328:	str	ip, [sp, #12]
    432c:	bl	10d4 <ply_command_parser_get_options@plt>
    4330:	ldrb	r3, [sp, #11]
    4334:	cmp	r3, r4
    4338:	beq	43bc <main@@Base+0x2fd0>
    433c:	bl	1278 <__errno_location@plt>
    4340:	mov	r7, r0
    4344:	ldr	r8, [r0]
    4348:	bl	1320 <ply_logger_get_error_default@plt>
    434c:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    4350:	cmp	r0, #0
    4354:	beq	4398 <main@@Base+0x2fac>
    4358:	bl	1320 <ply_logger_get_error_default@plt>
    435c:	bl	1134 <ply_logger_flush@plt>
    4360:	str	r8, [r7]
    4364:	bl	1320 <ply_logger_get_error_default@plt>
    4368:	ldr	ip, [pc, #116]	; 43e4 <main@@Base+0x2ff8>
    436c:	ldr	r1, [pc, #116]	; 43e8 <main@@Base+0x2ffc>
    4370:	movw	r3, #453	; 0x1c5
    4374:	ldr	r2, [pc, #112]	; 43ec <main@@Base+0x3000>
    4378:	add	ip, pc, ip
    437c:	add	r1, pc, r1
    4380:	str	ip, [sp]
    4384:	add	r2, pc, r2
    4388:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    438c:	bl	1320 <ply_logger_get_error_default@plt>
    4390:	bl	1134 <ply_logger_flush@plt>
    4394:	str	r8, [r7]
    4398:	ldr	r0, [r6]
    439c:	mov	r1, r4
    43a0:	bl	1260 <ply_event_loop_exit@plt>
    43a4:	ldr	r2, [sp, #12]
    43a8:	ldr	r3, [r5]
    43ac:	cmp	r2, r3
    43b0:	bne	43d4 <main@@Base+0x2fe8>
    43b4:	add	sp, sp, #16
    43b8:	pop	{r4, r5, r6, r7, r8, pc}
    43bc:	bl	1320 <ply_logger_get_error_default@plt>
    43c0:	ldr	r1, [pc, #40]	; 43f0 <main@@Base+0x3004>
    43c4:	mov	r4, #2
    43c8:	add	r1, pc, r1
    43cc:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    43d0:	b	433c <main@@Base+0x2f50>
    43d4:	bl	1188 <__stack_chk_fail@plt>
    43d8:			; <UNDEFINED> instruction: 0x00013bb8
    43dc:	andeq	r0, r0, r0, lsr r1
    43e0:	andeq	r2, r0, r8, lsr r3
    43e4:	strdeq	r2, [r0], -ip
    43e8:	andeq	r2, r0, ip, lsl r3
    43ec:	andeq	r2, r0, r4, lsr r3
    43f0:	muleq	r0, r4, r2
    43f4:	ldr	r3, [r0]
    43f8:	mov	r1, #1
    43fc:	ldr	r0, [r3]
    4400:	b	1260 <ply_event_loop_exit@plt>
    4404:	ldr	r3, [r0]
    4408:	mov	r1, #1
    440c:	ldr	r0, [r3]
    4410:	b	1260 <ply_event_loop_exit@plt>
    4414:	ldr	r1, [pc, #20]	; 4430 <main@@Base+0x3044>
    4418:	mov	r3, r0
    441c:	ldr	r2, [pc, #16]	; 4434 <main@@Base+0x3048>
    4420:	add	r1, pc, r1
    4424:	ldr	r0, [r0, #4]
    4428:	add	r2, pc, r2
    442c:	b	401c <main@@Base+0x2c30>
    4430:			; <UNDEFINED> instruction: 0xfffffeb8
    4434:			; <UNDEFINED> instruction: 0xfffffea4
    4438:	push	{r4, r5, lr}
    443c:	sub	sp, sp, #20
    4440:	ldr	lr, [pc, #112]	; 44b8 <main@@Base+0x30cc>
    4444:	add	r3, sp, #16
    4448:	ldr	r5, [pc, #108]	; 44bc <main@@Base+0x30d0>
    444c:	mov	r4, r0
    4450:	add	lr, pc, lr
    4454:	ldr	r0, [r0, #8]
    4458:	mov	ip, #0
    445c:	ldr	r2, [pc, #92]	; 44c0 <main@@Base+0x30d4>
    4460:	ldr	r5, [lr, r5]
    4464:	strb	ip, [r3, #-5]!
    4468:	add	r2, pc, r2
    446c:	str	ip, [sp]
    4470:	ldr	ip, [r5]
    4474:	str	ip, [sp, #12]
    4478:	bl	12d8 <ply_command_parser_get_command_options@plt>
    447c:	ldr	r2, [pc, #64]	; 44c4 <main@@Base+0x30d8>
    4480:	ldr	r3, [pc, #64]	; 44c8 <main@@Base+0x30dc>
    4484:	ldr	r0, [r4, #4]
    4488:	add	r2, pc, r2
    448c:	add	r3, pc, r3
    4490:	ldrb	r1, [sp, #11]
    4494:	str	r4, [sp]
    4498:	bl	3f40 <main@@Base+0x2b54>
    449c:	ldr	r2, [sp, #12]
    44a0:	ldr	r3, [r5]
    44a4:	cmp	r2, r3
    44a8:	bne	44b4 <main@@Base+0x30c8>
    44ac:	add	sp, sp, #20
    44b0:	pop	{r4, r5, pc}
    44b4:	bl	1188 <__stack_chk_fail@plt>
    44b8:	andeq	r3, r1, ip, asr sl
    44bc:	andeq	r0, r0, r0, lsr r1
    44c0:	andeq	r2, r0, r0, ror #4
    44c4:			; <UNDEFINED> instruction: 0xfffffe50
    44c8:			; <UNDEFINED> instruction: 0xfffffe40
    44cc:	push	{r4, r5, lr}
    44d0:	sub	sp, sp, #20
    44d4:	ldr	lr, [pc, #112]	; 454c <main@@Base+0x3160>
    44d8:	add	r3, sp, #16
    44dc:	ldr	r5, [pc, #108]	; 4550 <main@@Base+0x3164>
    44e0:	mov	r4, r0
    44e4:	add	lr, pc, lr
    44e8:	ldr	r0, [r0, #8]
    44ec:	mov	ip, #0
    44f0:	ldr	r2, [pc, #92]	; 4554 <main@@Base+0x3168>
    44f4:	ldr	r5, [lr, r5]
    44f8:	str	ip, [r3, #-8]!
    44fc:	add	r2, pc, r2
    4500:	str	ip, [sp]
    4504:	ldr	ip, [r5]
    4508:	str	ip, [sp, #12]
    450c:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4510:	ldr	r2, [pc, #64]	; 4558 <main@@Base+0x316c>
    4514:	ldr	r3, [pc, #64]	; 455c <main@@Base+0x3170>
    4518:	ldr	r0, [r4, #4]
    451c:	add	r2, pc, r2
    4520:	add	r3, pc, r3
    4524:	ldr	r1, [sp, #8]
    4528:	str	r4, [sp]
    452c:	bl	3d1c <main@@Base+0x2930>
    4530:	ldr	r2, [sp, #12]
    4534:	ldr	r3, [r5]
    4538:	cmp	r2, r3
    453c:	bne	4548 <main@@Base+0x315c>
    4540:	add	sp, sp, #20
    4544:	pop	{r4, r5, pc}
    4548:	bl	1188 <__stack_chk_fail@plt>
    454c:	andeq	r3, r1, r8, asr #19
    4550:	andeq	r0, r0, r0, lsr r1
    4554:	ldrdeq	r2, [r0], -ip
    4558:			; <UNDEFINED> instruction: 0xfffffdbc
    455c:			; <UNDEFINED> instruction: 0xfffffdac
    4560:	push	{r4, r5, lr}
    4564:	sub	sp, sp, #20
    4568:	ldr	lr, [pc, #120]	; 45e8 <main@@Base+0x31fc>
    456c:	add	r3, sp, #16
    4570:	ldr	r5, [pc, #116]	; 45ec <main@@Base+0x3200>
    4574:	mov	ip, #0
    4578:	add	lr, pc, lr
    457c:	mov	r4, r0
    4580:	ldr	r2, [pc, #104]	; 45f0 <main@@Base+0x3204>
    4584:	ldr	r5, [lr, r5]
    4588:	ldr	r0, [r0, #8]
    458c:	add	r2, pc, r2
    4590:	str	ip, [r3, #-8]!
    4594:	str	ip, [sp]
    4598:	ldr	ip, [r5]
    459c:	str	ip, [sp, #12]
    45a0:	bl	12d8 <ply_command_parser_get_command_options@plt>
    45a4:	ldr	r1, [sp, #8]
    45a8:	cmp	r1, #0
    45ac:	beq	45cc <main@@Base+0x31e0>
    45b0:	ldr	r2, [pc, #60]	; 45f4 <main@@Base+0x3208>
    45b4:	ldr	r3, [pc, #60]	; 45f8 <main@@Base+0x320c>
    45b8:	ldr	r0, [r4, #4]
    45bc:	add	r2, pc, r2
    45c0:	str	r4, [sp]
    45c4:	add	r3, pc, r3
    45c8:	bl	37ac <main@@Base+0x23c0>
    45cc:	ldr	r2, [sp, #12]
    45d0:	ldr	r3, [r5]
    45d4:	cmp	r2, r3
    45d8:	bne	45e4 <main@@Base+0x31f8>
    45dc:	add	sp, sp, #20
    45e0:	pop	{r4, r5, pc}
    45e4:	bl	1188 <__stack_chk_fail@plt>
    45e8:	andeq	r3, r1, r4, lsr r9
    45ec:	andeq	r0, r0, r0, lsr r1
    45f0:	andeq	r2, r0, r4, asr r1
    45f4:			; <UNDEFINED> instruction: 0xfffffd1c
    45f8:			; <UNDEFINED> instruction: 0xfffffd08
    45fc:	ldr	r1, [pc, #20]	; 4618 <main@@Base+0x322c>
    4600:	mov	r3, r0
    4604:	ldr	r2, [pc, #16]	; 461c <main@@Base+0x3230>
    4608:	add	r1, pc, r1
    460c:	ldr	r0, [r0, #4]
    4610:	add	r2, pc, r2
    4614:	b	3ed0 <main@@Base+0x2ae4>
    4618:			; <UNDEFINED> instruction: 0xfffffcd0
    461c:			; <UNDEFINED> instruction: 0xfffffcbc
    4620:	ldr	r1, [pc, #20]	; 463c <main@@Base+0x3250>
    4624:	mov	r3, r0
    4628:	ldr	r2, [pc, #16]	; 4640 <main@@Base+0x3254>
    462c:	add	r1, pc, r1
    4630:	ldr	r0, [r0, #4]
    4634:	add	r2, pc, r2
    4638:	b	3e64 <main@@Base+0x2a78>
    463c:			; <UNDEFINED> instruction: 0xfffffcac
    4640:			; <UNDEFINED> instruction: 0xfffffc98
    4644:	ldr	r1, [pc, #20]	; 4660 <main@@Base+0x3274>
    4648:	mov	r3, r0
    464c:	ldr	r2, [pc, #16]	; 4664 <main@@Base+0x3278>
    4650:	add	r1, pc, r1
    4654:	ldr	r0, [r0, #4]
    4658:	add	r2, pc, r2
    465c:	b	3ff0 <main@@Base+0x2c04>
    4660:			; <UNDEFINED> instruction: 0xfffffc88
    4664:			; <UNDEFINED> instruction: 0xfffffc74
    4668:	ldr	r2, [pc, #172]	; 471c <main@@Base+0x3330>
    466c:	mov	ip, #0
    4670:	push	{r4, r5, r6, lr}
    4674:	add	r2, pc, r2
    4678:	ldr	lr, [pc, #160]	; 4720 <main@@Base+0x3334>
    467c:	sub	sp, sp, #32
    4680:	add	r3, sp, #32
    4684:	mov	r4, r0
    4688:	ldr	r6, [pc, #148]	; 4724 <main@@Base+0x3338>
    468c:	ldr	r5, [r2, lr]
    4690:	add	r2, sp, #20
    4694:	str	ip, [r3, #-8]!
    4698:	add	r6, pc, r6
    469c:	ldr	r0, [r0, #8]
    46a0:	str	ip, [sp, #8]
    46a4:	ldr	lr, [r5]
    46a8:	str	r2, [sp, #4]
    46ac:	ldr	r2, [pc, #116]	; 4728 <main@@Base+0x333c>
    46b0:	str	r6, [sp]
    46b4:	add	r2, pc, r2
    46b8:	str	lr, [sp, #28]
    46bc:	str	ip, [sp, #20]
    46c0:	bl	12d8 <ply_command_parser_get_command_options@plt>
    46c4:	mov	r1, #12
    46c8:	mov	r0, #1
    46cc:	bl	10a4 <calloc@plt>
    46d0:	ldr	lr, [sp, #20]
    46d4:	ldr	r6, [sp, #24]
    46d8:	ldr	r2, [pc, #76]	; 472c <main@@Base+0x3340>
    46dc:	ldr	r3, [pc, #76]	; 4730 <main@@Base+0x3344>
    46e0:	mov	r1, lr
    46e4:	add	r2, pc, r2
    46e8:	add	r3, pc, r3
    46ec:	mov	ip, r0
    46f0:	ldr	r0, [r4, #4]
    46f4:	str	ip, [sp]
    46f8:	stm	ip, {r4, r6, lr}
    46fc:	bl	3cac <main@@Base+0x28c0>
    4700:	ldr	r2, [sp, #28]
    4704:	ldr	r3, [r5]
    4708:	cmp	r2, r3
    470c:	bne	4718 <main@@Base+0x332c>
    4710:	add	sp, sp, #32
    4714:	pop	{r4, r5, r6, pc}
    4718:	bl	1188 <__stack_chk_fail@plt>
    471c:	andeq	r3, r1, r8, lsr r8
    4720:	andeq	r0, r0, r0, lsr r1
    4724:	andeq	r2, r0, r0, asr #32
    4728:	andeq	r2, r0, r4, lsr r0
    472c:	andeq	r0, r0, r0, asr pc
    4730:			; <UNDEFINED> instruction: 0xfffffd04
    4734:	push	{r4, r5, lr}
    4738:	sub	sp, sp, #20
    473c:	ldr	lr, [pc, #128]	; 47c4 <main@@Base+0x33d8>
    4740:	add	r3, sp, #16
    4744:	ldr	r5, [pc, #124]	; 47c8 <main@@Base+0x33dc>
    4748:	mov	ip, #0
    474c:	add	lr, pc, lr
    4750:	mov	r4, r0
    4754:	ldr	r2, [pc, #112]	; 47cc <main@@Base+0x33e0>
    4758:	ldr	r5, [lr, r5]
    475c:	ldr	r0, [r0, #8]
    4760:	add	r2, pc, r2
    4764:	str	ip, [r3, #-8]!
    4768:	str	ip, [sp]
    476c:	ldr	ip, [r5]
    4770:	str	ip, [sp, #12]
    4774:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4778:	ldr	r1, [sp, #8]
    477c:	cmp	r1, #0
    4780:	beq	47a8 <main@@Base+0x33bc>
    4784:	ldr	r2, [pc, #68]	; 47d0 <main@@Base+0x33e4>
    4788:	ldr	r3, [pc, #68]	; 47d4 <main@@Base+0x33e8>
    478c:	ldr	r0, [r4, #4]
    4790:	add	r2, pc, r2
    4794:	str	r4, [sp]
    4798:	add	r3, pc, r3
    479c:	bl	3a4c <main@@Base+0x2660>
    47a0:	ldr	r0, [sp, #8]
    47a4:	bl	1110 <free@plt>
    47a8:	ldr	r2, [sp, #12]
    47ac:	ldr	r3, [r5]
    47b0:	cmp	r2, r3
    47b4:	bne	47c0 <main@@Base+0x33d4>
    47b8:	add	sp, sp, #20
    47bc:	pop	{r4, r5, pc}
    47c0:	bl	1188 <__stack_chk_fail@plt>
    47c4:	andeq	r3, r1, r0, ror #14
    47c8:	andeq	r0, r0, r0, lsr r1
    47cc:	andeq	r2, r0, r4, lsl r9
    47d0:			; <UNDEFINED> instruction: 0xfffffb48
    47d4:			; <UNDEFINED> instruction: 0xfffffb34
    47d8:	push	{r4, r5, lr}
    47dc:	sub	sp, sp, #20
    47e0:	ldr	lr, [pc, #128]	; 4868 <main@@Base+0x347c>
    47e4:	add	r3, sp, #16
    47e8:	ldr	r5, [pc, #124]	; 486c <main@@Base+0x3480>
    47ec:	mov	ip, #0
    47f0:	add	lr, pc, lr
    47f4:	mov	r4, r0
    47f8:	ldr	r2, [pc, #112]	; 4870 <main@@Base+0x3484>
    47fc:	ldr	r5, [lr, r5]
    4800:	ldr	r0, [r0, #8]
    4804:	add	r2, pc, r2
    4808:	str	ip, [r3, #-8]!
    480c:	str	ip, [sp]
    4810:	ldr	ip, [r5]
    4814:	str	ip, [sp, #12]
    4818:	bl	12d8 <ply_command_parser_get_command_options@plt>
    481c:	ldr	r1, [sp, #8]
    4820:	cmp	r1, #0
    4824:	beq	484c <main@@Base+0x3460>
    4828:	ldr	r2, [pc, #68]	; 4874 <main@@Base+0x3488>
    482c:	ldr	r3, [pc, #68]	; 4878 <main@@Base+0x348c>
    4830:	ldr	r0, [r4, #4]
    4834:	add	r2, pc, r2
    4838:	str	r4, [sp]
    483c:	add	r3, pc, r3
    4840:	bl	39a4 <main@@Base+0x25b8>
    4844:	ldr	r0, [sp, #8]
    4848:	bl	1110 <free@plt>
    484c:	ldr	r2, [sp, #12]
    4850:	ldr	r3, [r5]
    4854:	cmp	r2, r3
    4858:	bne	4864 <main@@Base+0x3478>
    485c:	add	sp, sp, #20
    4860:	pop	{r4, r5, pc}
    4864:	bl	1188 <__stack_chk_fail@plt>
    4868:			; <UNDEFINED> instruction: 0x000136bc
    486c:	andeq	r0, r0, r0, lsr r1
    4870:	andeq	r2, r0, r0, ror r8
    4874:			; <UNDEFINED> instruction: 0xfffffaa4
    4878:			; <UNDEFINED> instruction: 0xfffffa90
    487c:	push	{lr}		; (str lr, [sp, #-4]!)
    4880:	sub	sp, sp, #12
    4884:	ldr	ip, [r0, #8]
    4888:	mov	r3, r0
    488c:	ldr	r2, [pc, #32]	; 48b4 <main@@Base+0x34c8>
    4890:	mov	r0, r1
    4894:	str	r3, [sp]
    4898:	ldr	r3, [pc, #24]	; 48b8 <main@@Base+0x34cc>
    489c:	add	r2, pc, r2
    48a0:	mov	r1, ip
    48a4:	add	r3, pc, r3
    48a8:	bl	3c3c <main@@Base+0x2850>
    48ac:	add	sp, sp, #12
    48b0:	pop	{pc}		; (ldr pc, [sp], #4)
    48b4:	andeq	r1, r0, r4, lsl #4
    48b8:			; <UNDEFINED> instruction: 0xfffffb58
    48bc:	ldr	r2, [pc, #248]	; 49bc <main@@Base+0x35d0>
    48c0:	mov	ip, #0
    48c4:	ldr	r3, [pc, #244]	; 49c0 <main@@Base+0x35d4>
    48c8:	add	r2, pc, r2
    48cc:	push	{r4, r5, r6, lr}
    48d0:	sub	sp, sp, #40	; 0x28
    48d4:	ldr	r5, [r2, r3]
    48d8:	mov	r4, r0
    48dc:	ldr	lr, [pc, #224]	; 49c4 <main@@Base+0x35d8>
    48e0:	add	r2, sp, #28
    48e4:	ldr	r0, [r0, #8]
    48e8:	add	r3, sp, #32
    48ec:	add	lr, pc, lr
    48f0:	ldr	r6, [pc, #208]	; 49c8 <main@@Base+0x35dc>
    48f4:	str	lr, [sp]
    48f8:	ldr	lr, [r5]
    48fc:	add	r6, pc, r6
    4900:	str	r2, [sp, #4]
    4904:	add	r2, sp, #27
    4908:	str	r2, [sp, #12]
    490c:	ldr	r2, [pc, #184]	; 49cc <main@@Base+0x35e0>
    4910:	str	ip, [sp, #16]
    4914:	add	r2, pc, r2
    4918:	str	r6, [sp, #8]
    491c:	str	ip, [sp, #28]
    4920:	str	ip, [sp, #32]
    4924:	strb	ip, [sp, #27]
    4928:	str	lr, [sp, #36]	; 0x24
    492c:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4930:	mov	r1, #16
    4934:	mov	r0, #1
    4938:	bl	10a4 <calloc@plt>
    493c:	ldr	ip, [sp, #32]
    4940:	ldr	r1, [sp, #28]
    4944:	mov	r3, r0
    4948:	ldrb	r0, [sp, #27]
    494c:	ldrb	r2, [r3, #12]
    4950:	eor	r0, r0, #1
    4954:	stm	r3, {r4, ip}
    4958:	cmp	r0, #0
    495c:	bfi	r2, r0, #0, #1
    4960:	str	r1, [r3, #8]
    4964:	strb	r2, [r3, #12]
    4968:	ldr	r0, [r4, #4]
    496c:	bne	49a0 <main@@Base+0x35b4>
    4970:	str	r3, [sp]
    4974:	ldr	r2, [pc, #84]	; 49d0 <main@@Base+0x35e4>
    4978:	ldr	r3, [pc, #84]	; 49d4 <main@@Base+0x35e8>
    497c:	add	r2, pc, r2
    4980:	add	r3, pc, r3
    4984:	bl	3c3c <main@@Base+0x2850>
    4988:	ldr	r2, [sp, #36]	; 0x24
    498c:	ldr	r3, [r5]
    4990:	cmp	r2, r3
    4994:	bne	49b8 <main@@Base+0x35cc>
    4998:	add	sp, sp, #40	; 0x28
    499c:	pop	{r4, r5, r6, pc}
    49a0:	ldr	r1, [pc, #48]	; 49d8 <main@@Base+0x35ec>
    49a4:	ldr	r2, [pc, #48]	; 49dc <main@@Base+0x35f0>
    49a8:	add	r1, pc, r1
    49ac:	add	r2, pc, r2
    49b0:	bl	3ff0 <main@@Base+0x2c04>
    49b4:	b	4988 <main@@Base+0x359c>
    49b8:	bl	1188 <__stack_chk_fail@plt>
    49bc:	andeq	r3, r1, r4, ror #11
    49c0:	andeq	r0, r0, r0, lsr r1
    49c4:	andeq	r1, r0, r4, lsl #28
    49c8:	strdeq	r1, [r0], -ip
    49cc:	ldrdeq	r1, [r0], -r4
    49d0:	andeq	r1, r0, r4, lsr #2
    49d4:			; <UNDEFINED> instruction: 0xfffffa7c
    49d8:			; <UNDEFINED> instruction: 0xfffffecc
    49dc:			; <UNDEFINED> instruction: 0xfffffa50
    49e0:	push	{r4, r5, r6, r7, lr}
    49e4:	sub	sp, sp, #12
    49e8:	mov	r6, r1
    49ec:	mov	r4, r0
    49f0:	bl	1278 <__errno_location@plt>
    49f4:	mov	r5, r0
    49f8:	ldr	r7, [r0]
    49fc:	bl	1320 <ply_logger_get_error_default@plt>
    4a00:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    4a04:	cmp	r0, #0
    4a08:	bne	4a3c <main@@Base+0x3650>
    4a0c:	ldr	r3, [r4, #4]
    4a10:	cmp	r3, #0
    4a14:	beq	4a94 <main@@Base+0x36a8>
    4a18:	ldr	r1, [pc, #156]	; 4abc <main@@Base+0x36d0>
    4a1c:	mov	r0, r6
    4a20:	ldr	r2, [pc, #152]	; 4ac0 <main@@Base+0x36d4>
    4a24:	mov	r3, r4
    4a28:	add	r1, pc, r1
    4a2c:	add	r2, pc, r2
    4a30:	add	sp, sp, #12
    4a34:	pop	{r4, r5, r6, r7, lr}
    4a38:	b	3bd0 <main@@Base+0x27e4>
    4a3c:	bl	1320 <ply_logger_get_error_default@plt>
    4a40:	bl	1134 <ply_logger_flush@plt>
    4a44:	str	r7, [r5]
    4a48:	bl	1320 <ply_logger_get_error_default@plt>
    4a4c:	ldr	r2, [pc, #112]	; 4ac4 <main@@Base+0x36d8>
    4a50:	ldr	r1, [pc, #112]	; 4ac8 <main@@Base+0x36dc>
    4a54:	movw	r3, #462	; 0x1ce
    4a58:	add	r2, pc, r2
    4a5c:	add	r2, r2, #16
    4a60:	str	r2, [sp]
    4a64:	ldr	ip, [r4, #4]
    4a68:	add	r1, pc, r1
    4a6c:	ldr	r2, [pc, #88]	; 4acc <main@@Base+0x36e0>
    4a70:	str	ip, [sp, #4]
    4a74:	add	r2, pc, r2
    4a78:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    4a7c:	bl	1320 <ply_logger_get_error_default@plt>
    4a80:	bl	1134 <ply_logger_flush@plt>
    4a84:	ldr	r3, [r4, #4]
    4a88:	str	r7, [r5]
    4a8c:	cmp	r3, #0
    4a90:	bne	4a18 <main@@Base+0x362c>
    4a94:	ldr	r2, [pc, #52]	; 4ad0 <main@@Base+0x36e4>
    4a98:	mov	r0, r6
    4a9c:	ldr	r3, [pc, #48]	; 4ad4 <main@@Base+0x36e8>
    4aa0:	ldr	r1, [r4, #8]
    4aa4:	add	r2, pc, r2
    4aa8:	str	r4, [sp]
    4aac:	add	r3, pc, r3
    4ab0:	bl	3b60 <main@@Base+0x2774>
    4ab4:	add	sp, sp, #12
    4ab8:	pop	{r4, r5, r6, r7, pc}
    4abc:	andeq	r0, r0, r4, ror ip
    4ac0:			; <UNDEFINED> instruction: 0x000008b8
    4ac4:	andeq	r1, r0, ip, lsl fp
    4ac8:	andeq	r1, r0, r4, lsr #25
    4acc:	andeq	r1, r0, r4, asr #24
    4ad0:	andeq	r0, r0, r8, asr lr
    4ad4:	andeq	r0, r0, r8, lsr r8
    4ad8:	ldr	r2, [pc, #396]	; 4c6c <main@@Base+0x3880>
    4adc:	mov	r3, #0
    4ae0:	push	{r4, r5, r6, r7, r8, lr}
    4ae4:	mov	r4, r0
    4ae8:	ldr	r0, [pc, #384]	; 4c70 <main@@Base+0x3884>
    4aec:	add	r2, pc, r2
    4af0:	sub	sp, sp, #56	; 0x38
    4af4:	mov	r7, r1
    4af8:	ldr	r5, [r2, r0]
    4afc:	str	r3, [sp, #40]	; 0x28
    4b00:	str	r3, [sp, #44]	; 0x2c
    4b04:	ldr	r2, [r5]
    4b08:	str	r3, [sp, #48]	; 0x30
    4b0c:	strb	r3, [sp, #39]	; 0x27
    4b10:	str	r2, [sp, #52]	; 0x34
    4b14:	bl	1278 <__errno_location@plt>
    4b18:	mov	r6, r0
    4b1c:	ldr	r8, [r0]
    4b20:	bl	1320 <ply_logger_get_error_default@plt>
    4b24:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    4b28:	cmp	r0, #0
    4b2c:	bne	4c20 <main@@Base+0x3834>
    4b30:	ldr	r2, [pc, #316]	; 4c74 <main@@Base+0x3888>
    4b34:	mov	r1, r7
    4b38:	ldr	r0, [r4, #8]
    4b3c:	add	r2, pc, r2
    4b40:	ldr	ip, [pc, #304]	; 4c78 <main@@Base+0x388c>
    4b44:	str	r2, [sp, #8]
    4b48:	mov	r2, #0
    4b4c:	ldr	r3, [pc, #296]	; 4c7c <main@@Base+0x3890>
    4b50:	add	ip, pc, ip
    4b54:	str	r2, [sp, #24]
    4b58:	ldr	r2, [pc, #288]	; 4c80 <main@@Base+0x3894>
    4b5c:	add	r3, pc, r3
    4b60:	str	ip, [sp]
    4b64:	add	ip, sp, #40	; 0x28
    4b68:	add	r2, pc, r2
    4b6c:	str	r3, [sp, #16]
    4b70:	str	ip, [sp, #4]
    4b74:	add	r3, sp, #44	; 0x2c
    4b78:	add	ip, sp, #48	; 0x30
    4b7c:	str	ip, [sp, #12]
    4b80:	add	ip, sp, #39	; 0x27
    4b84:	str	ip, [sp, #20]
    4b88:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4b8c:	ldr	r3, [sp, #48]	; 0x30
    4b90:	mov	r1, #20
    4b94:	mov	r0, #1
    4b98:	cmp	r3, #0
    4b9c:	mvnle	r3, #-2147483648	; 0x80000000
    4ba0:	strle	r3, [sp, #48]	; 0x30
    4ba4:	bl	10a4 <calloc@plt>
    4ba8:	ldrb	r1, [sp, #39]	; 0x27
    4bac:	ldr	r6, [sp, #44]	; 0x2c
    4bb0:	eor	r1, r1, #1
    4bb4:	ldr	lr, [sp, #40]	; 0x28
    4bb8:	ldr	ip, [sp, #48]	; 0x30
    4bbc:	cmp	r1, #0
    4bc0:	ldrb	r2, [r0, #16]
    4bc4:	mov	r3, r0
    4bc8:	str	r4, [r0]
    4bcc:	bfi	r2, r1, #0, #1
    4bd0:	str	r6, [r0, #4]
    4bd4:	strb	r2, [r0, #16]
    4bd8:	str	lr, [r0, #8]
    4bdc:	str	ip, [r0, #12]
    4be0:	bne	4c04 <main@@Base+0x3818>
    4be4:	ldr	r1, [r4, #4]
    4be8:	bl	49e0 <main@@Base+0x35f4>
    4bec:	ldr	r2, [sp, #52]	; 0x34
    4bf0:	ldr	r3, [r5]
    4bf4:	cmp	r2, r3
    4bf8:	bne	4c68 <main@@Base+0x387c>
    4bfc:	add	sp, sp, #56	; 0x38
    4c00:	pop	{r4, r5, r6, r7, r8, pc}
    4c04:	ldr	r1, [pc, #120]	; 4c84 <main@@Base+0x3898>
    4c08:	ldr	r2, [pc, #120]	; 4c88 <main@@Base+0x389c>
    4c0c:	ldr	r0, [r4, #4]
    4c10:	add	r1, pc, r1
    4c14:	add	r2, pc, r2
    4c18:	bl	3ff0 <main@@Base+0x2c04>
    4c1c:	b	4bec <main@@Base+0x3800>
    4c20:	bl	1320 <ply_logger_get_error_default@plt>
    4c24:	bl	1134 <ply_logger_flush@plt>
    4c28:	str	r8, [r6]
    4c2c:	bl	1320 <ply_logger_get_error_default@plt>
    4c30:	ldr	ip, [pc, #84]	; 4c8c <main@@Base+0x38a0>
    4c34:	ldr	r1, [pc, #84]	; 4c90 <main@@Base+0x38a4>
    4c38:	movw	r3, #498	; 0x1f2
    4c3c:	ldr	r2, [pc, #80]	; 4c94 <main@@Base+0x38a8>
    4c40:	add	ip, pc, ip
    4c44:	add	ip, ip, #44	; 0x2c
    4c48:	add	r1, pc, r1
    4c4c:	add	r2, pc, r2
    4c50:	str	ip, [sp]
    4c54:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    4c58:	bl	1320 <ply_logger_get_error_default@plt>
    4c5c:	bl	1134 <ply_logger_flush@plt>
    4c60:	str	r8, [r6]
    4c64:	b	4b30 <main@@Base+0x3744>
    4c68:	bl	1188 <__stack_chk_fail@plt>
    4c6c:	andeq	r3, r1, r0, asr #7
    4c70:	andeq	r0, r0, r0, lsr r1
    4c74:	andeq	r1, r0, r0, lsr ip
    4c78:	andeq	r1, r0, r0, lsr #23
    4c7c:	muleq	r0, ip, fp
    4c80:	andeq	r1, r0, r0, lsl #23
    4c84:			; <UNDEFINED> instruction: 0xfffffdc8
    4c88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4c8c:	andeq	r1, r0, r4, lsr r9
    4c90:	andeq	r1, r0, r0, lsl #22
    4c94:	andeq	r1, r0, ip, ror #20
    4c98:	ldr	ip, [pc, #200]	; 4d68 <main@@Base+0x397c>
    4c9c:	push	{r4, r5, r6, lr}
    4ca0:	add	ip, pc, ip
    4ca4:	ldr	lr, [pc, #192]	; 4d6c <main@@Base+0x3980>
    4ca8:	sub	sp, sp, #24
    4cac:	add	r3, sp, #24
    4cb0:	mov	r5, #0
    4cb4:	mov	r4, r0
    4cb8:	ldr	r2, [pc, #176]	; 4d70 <main@@Base+0x3984>
    4cbc:	ldr	r6, [ip, lr]
    4cc0:	ldr	r0, [r0, #8]
    4cc4:	add	r2, pc, r2
    4cc8:	str	r5, [r3, #-12]!
    4ccc:	str	r5, [sp]
    4cd0:	ldr	ip, [r6]
    4cd4:	str	ip, [sp, #20]
    4cd8:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4cdc:	ldr	r3, [sp, #12]
    4ce0:	cmp	r3, #100	; 0x64
    4ce4:	bls	4d20 <main@@Base+0x3934>
    4ce8:	bl	1320 <ply_logger_get_error_default@plt>
    4cec:	ldr	r1, [pc, #128]	; 4d74 <main@@Base+0x3988>
    4cf0:	ldr	r2, [sp, #12]
    4cf4:	add	r1, pc, r1
    4cf8:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    4cfc:	ldr	r0, [r4]
    4d00:	mov	r1, #1
    4d04:	bl	1260 <ply_event_loop_exit@plt>
    4d08:	ldr	r2, [sp, #20]
    4d0c:	ldr	r3, [r6]
    4d10:	cmp	r2, r3
    4d14:	bne	4d64 <main@@Base+0x3978>
    4d18:	add	sp, sp, #24
    4d1c:	pop	{r4, r5, r6, pc}
    4d20:	add	r0, sp, #24
    4d24:	ldr	r2, [pc, #76]	; 4d78 <main@@Base+0x398c>
    4d28:	mov	r1, #1
    4d2c:	str	r5, [r0, #-8]!
    4d30:	add	r2, pc, r2
    4d34:	bl	120c <__asprintf_chk@plt>
    4d38:	ldr	r2, [pc, #60]	; 4d7c <main@@Base+0x3990>
    4d3c:	ldr	r3, [pc, #60]	; 4d80 <main@@Base+0x3994>
    4d40:	ldr	r0, [r4, #4]
    4d44:	add	r2, pc, r2
    4d48:	ldr	r1, [sp, #16]
    4d4c:	add	r3, pc, r3
    4d50:	str	r4, [sp]
    4d54:	bl	388c <main@@Base+0x24a0>
    4d58:	ldr	r0, [sp, #16]
    4d5c:	bl	1110 <free@plt>
    4d60:	b	4d08 <main@@Base+0x391c>
    4d64:	bl	1188 <__stack_chk_fail@plt>
    4d68:	andeq	r3, r1, ip, lsl #4
    4d6c:	andeq	r0, r0, r0, lsr r1
    4d70:	andeq	r2, r0, r4, lsr #9
    4d74:	andeq	r1, r0, ip, lsl #21
    4d78:	andeq	r1, r0, ip, asr #20
    4d7c:			; <UNDEFINED> instruction: 0xfffff594
    4d80:			; <UNDEFINED> instruction: 0xfffff580
    4d84:	push	{r4, r5, r6, r7, r8, r9, lr}
    4d88:	sub	sp, sp, #36	; 0x24
    4d8c:	ldr	lr, [pc, #276]	; 4ea8 <main@@Base+0x3abc>
    4d90:	mov	ip, #0
    4d94:	ldr	r3, [pc, #272]	; 4eac <main@@Base+0x3ac0>
    4d98:	mov	r4, r0
    4d9c:	add	lr, pc, lr
    4da0:	ldr	r7, [pc, #264]	; 4eb0 <main@@Base+0x3ac4>
    4da4:	ldr	r8, [pc, #264]	; 4eb4 <main@@Base+0x3ac8>
    4da8:	ldr	r5, [lr, r3]
    4dac:	add	r7, pc, r7
    4db0:	ldr	r6, [pc, #256]	; 4eb8 <main@@Base+0x3acc>
    4db4:	add	r3, sp, #25
    4db8:	ldr	r0, [r0, #8]
    4dbc:	add	lr, sp, #26
    4dc0:	ldr	r9, [r5]
    4dc4:	add	r8, pc, r8
    4dc8:	str	lr, [sp, #4]
    4dcc:	add	r6, pc, r6
    4dd0:	add	lr, sp, #27
    4dd4:	mov	r2, r7
    4dd8:	str	r8, [sp]
    4ddc:	str	r6, [sp, #8]
    4de0:	str	ip, [sp, #16]
    4de4:	str	lr, [sp, #12]
    4de8:	str	r9, [sp, #28]
    4dec:	strb	ip, [sp, #25]
    4df0:	strb	ip, [sp, #26]
    4df4:	strb	ip, [sp, #27]
    4df8:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4dfc:	ldrb	r3, [sp, #25]
    4e00:	cmp	r3, #0
    4e04:	bne	4e5c <main@@Base+0x3a70>
    4e08:	ldrb	r3, [sp, #26]
    4e0c:	cmp	r3, #0
    4e10:	bne	4e80 <main@@Base+0x3a94>
    4e14:	ldrb	r3, [sp, #27]
    4e18:	cmp	r3, #0
    4e1c:	bne	4e38 <main@@Base+0x3a4c>
    4e20:	ldr	r2, [sp, #28]
    4e24:	ldr	r3, [r5]
    4e28:	cmp	r2, r3
    4e2c:	bne	4ea4 <main@@Base+0x3ab8>
    4e30:	add	sp, sp, #36	; 0x24
    4e34:	pop	{r4, r5, r6, r7, r8, r9, pc}
    4e38:	ldr	r2, [pc, #124]	; 4ebc <main@@Base+0x3ad0>
    4e3c:	mov	r1, r6
    4e40:	ldr	r3, [pc, #120]	; 4ec0 <main@@Base+0x3ad4>
    4e44:	ldr	r0, [r4, #4]
    4e48:	add	r2, pc, r2
    4e4c:	str	r4, [sp]
    4e50:	add	r3, pc, r3
    4e54:	bl	381c <main@@Base+0x2430>
    4e58:	b	4e20 <main@@Base+0x3a34>
    4e5c:	ldr	r2, [pc, #96]	; 4ec4 <main@@Base+0x3ad8>
    4e60:	mov	r1, r7
    4e64:	ldr	r3, [pc, #92]	; 4ec8 <main@@Base+0x3adc>
    4e68:	ldr	r0, [r4, #4]
    4e6c:	add	r2, pc, r2
    4e70:	str	r4, [sp]
    4e74:	add	r3, pc, r3
    4e78:	bl	381c <main@@Base+0x2430>
    4e7c:	b	4e20 <main@@Base+0x3a34>
    4e80:	ldr	r2, [pc, #68]	; 4ecc <main@@Base+0x3ae0>
    4e84:	mov	r1, r8
    4e88:	ldr	r3, [pc, #64]	; 4ed0 <main@@Base+0x3ae4>
    4e8c:	ldr	r0, [r4, #4]
    4e90:	add	r2, pc, r2
    4e94:	str	r4, [sp]
    4e98:	add	r3, pc, r3
    4e9c:	bl	381c <main@@Base+0x2430>
    4ea0:	b	4e20 <main@@Base+0x3a34>
    4ea4:	bl	1188 <__stack_chk_fail@plt>
    4ea8:	andeq	r3, r1, r0, lsl r1
    4eac:	andeq	r0, r0, r0, lsr r1
    4eb0:	strdeq	r1, [r0], -ip
    4eb4:	andeq	r1, r0, ip, ror #19
    4eb8:	strdeq	r1, [r0], -r0
    4ebc:			; <UNDEFINED> instruction: 0xfffff490
    4ec0:			; <UNDEFINED> instruction: 0xfffff47c
    4ec4:			; <UNDEFINED> instruction: 0xfffff46c
    4ec8:			; <UNDEFINED> instruction: 0xfffff458
    4ecc:			; <UNDEFINED> instruction: 0xfffff448
    4ed0:			; <UNDEFINED> instruction: 0xfffff434
    4ed4:	ldr	r2, [pc, #192]	; 4f9c <main@@Base+0x3bb0>
    4ed8:	mov	ip, #0
    4edc:	push	{r4, r5, lr}
    4ee0:	add	r2, pc, r2
    4ee4:	ldr	r5, [pc, #180]	; 4fa0 <main@@Base+0x3bb4>
    4ee8:	sub	sp, sp, #36	; 0x24
    4eec:	ldr	lr, [pc, #176]	; 4fa4 <main@@Base+0x3bb8>
    4ef0:	mov	r4, r0
    4ef4:	ldr	r0, [r0, #8]
    4ef8:	add	r3, sp, #24
    4efc:	ldr	r5, [r2, r5]
    4f00:	add	lr, pc, lr
    4f04:	str	ip, [sp, #8]
    4f08:	add	r2, sp, #23
    4f0c:	str	lr, [sp]
    4f10:	ldr	lr, [r5]
    4f14:	str	r2, [sp, #4]
    4f18:	ldr	r2, [pc, #136]	; 4fa8 <main@@Base+0x3bbc>
    4f1c:	str	lr, [sp, #28]
    4f20:	add	r2, pc, r2
    4f24:	str	ip, [sp, #24]
    4f28:	strb	ip, [sp, #23]
    4f2c:	bl	12d8 <ply_command_parser_get_command_options@plt>
    4f30:	ldr	r1, [sp, #24]
    4f34:	cmp	r1, #0
    4f38:	beq	4f58 <main@@Base+0x3b6c>
    4f3c:	ldr	r2, [pc, #104]	; 4fac <main@@Base+0x3bc0>
    4f40:	ldr	r3, [pc, #104]	; 4fb0 <main@@Base+0x3bc4>
    4f44:	ldr	r0, [r4, #4]
    4f48:	add	r2, pc, r2
    4f4c:	str	r4, [sp]
    4f50:	add	r3, pc, r3
    4f54:	bl	38fc <main@@Base+0x2510>
    4f58:	ldrb	r3, [sp, #23]
    4f5c:	cmp	r3, #0
    4f60:	beq	4f80 <main@@Base+0x3b94>
    4f64:	ldr	r1, [pc, #72]	; 4fb4 <main@@Base+0x3bc8>
    4f68:	mov	r3, r4
    4f6c:	ldr	r2, [pc, #68]	; 4fb8 <main@@Base+0x3bcc>
    4f70:	ldr	r0, [r4, #4]
    4f74:	add	r1, pc, r1
    4f78:	add	r2, pc, r2
    4f7c:	bl	3af4 <main@@Base+0x2708>
    4f80:	ldr	r2, [sp, #28]
    4f84:	ldr	r3, [r5]
    4f88:	cmp	r2, r3
    4f8c:	bne	4f98 <main@@Base+0x3bac>
    4f90:	add	sp, sp, #36	; 0x24
    4f94:	pop	{r4, r5, pc}
    4f98:	bl	1188 <__stack_chk_fail@plt>
    4f9c:	andeq	r2, r1, ip, asr #31
    4fa0:	andeq	r0, r0, r0, lsr r1
    4fa4:	andeq	r1, r0, ip, asr #25
    4fa8:	andeq	r1, r0, r4, lsr #17
    4fac:			; <UNDEFINED> instruction: 0xfffff390
    4fb0:			; <UNDEFINED> instruction: 0xfffff37c
    4fb4:			; <UNDEFINED> instruction: 0xfffff364
    4fb8:			; <UNDEFINED> instruction: 0xfffff354
    4fbc:	ldr	r3, [pc, #752]	; 52b4 <main@@Base+0x3ec8>
    4fc0:	ldr	ip, [pc, #752]	; 52b8 <main@@Base+0x3ecc>
    4fc4:	add	r3, pc, r3
    4fc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4fcc:	sub	sp, sp, #28
    4fd0:	ldr	r5, [r3, ip]
    4fd4:	mov	r4, r1
    4fd8:	mov	r7, r2
    4fdc:	mov	r8, r0
    4fe0:	ldr	r3, [r5]
    4fe4:	str	r3, [sp, #20]
    4fe8:	bl	1278 <__errno_location@plt>
    4fec:	mov	r6, r0
    4ff0:	ldr	r9, [r0]
    4ff4:	bl	1320 <ply_logger_get_error_default@plt>
    4ff8:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    4ffc:	cmp	r0, #0
    5000:	bne	50a0 <main@@Base+0x3cb4>
    5004:	cmp	r4, #0
    5008:	beq	5020 <main@@Base+0x3c34>
    500c:	add	r0, sp, #12
    5010:	add	r1, sp, #16
    5014:	bl	1374 <ply_open_unidirectional_pipe@plt>
    5018:	cmp	r0, #0
    501c:	beq	5098 <main@@Base+0x3cac>
    5020:	bl	1338 <fork@plt>
    5024:	subs	r9, r0, #0
    5028:	blt	5098 <main@@Base+0x3cac>
    502c:	beq	50f0 <main@@Base+0x3d04>
    5030:	cmp	r4, #0
    5034:	moveq	r4, #1
    5038:	beq	506c <main@@Base+0x3c80>
    503c:	ldr	r0, [sp, #16]
    5040:	bl	13bc <close@plt>
    5044:	mov	r0, r4
    5048:	bl	1254 <strlen@plt>
    504c:	mov	r1, r4
    5050:	mov	r2, r0
    5054:	ldr	r0, [sp, #12]
    5058:	bl	12f0 <write@plt>
    505c:	mvn	r4, r0
    5060:	ldr	r0, [sp, #12]
    5064:	lsr	r4, r4, #31
    5068:	bl	13bc <close@plt>
    506c:	mov	r0, r9
    5070:	mov	r1, r7
    5074:	mov	r2, #0
    5078:	bl	11dc <waitpid@plt>
    507c:	mov	r0, r4
    5080:	ldr	r2, [sp, #20]
    5084:	ldr	r3, [r5]
    5088:	cmp	r2, r3
    508c:	bne	50ec <main@@Base+0x3d00>
    5090:	add	sp, sp, #28
    5094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5098:	mov	r0, #0
    509c:	b	5080 <main@@Base+0x3c94>
    50a0:	bl	1320 <ply_logger_get_error_default@plt>
    50a4:	bl	1134 <ply_logger_flush@plt>
    50a8:	str	r9, [r6]
    50ac:	bl	1320 <ply_logger_get_error_default@plt>
    50b0:	ldr	r2, [pc, #516]	; 52bc <main@@Base+0x3ed0>
    50b4:	ldr	r1, [pc, #516]	; 52c0 <main@@Base+0x3ed4>
    50b8:	mov	r3, #132	; 0x84
    50bc:	add	r2, pc, r2
    50c0:	str	r8, [sp, #4]
    50c4:	add	r2, r2, #64	; 0x40
    50c8:	str	r2, [sp]
    50cc:	ldr	r2, [pc, #496]	; 52c4 <main@@Base+0x3ed8>
    50d0:	add	r1, pc, r1
    50d4:	add	r2, pc, r2
    50d8:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    50dc:	bl	1320 <ply_logger_get_error_default@plt>
    50e0:	bl	1134 <ply_logger_flush@plt>
    50e4:	str	r9, [r6]
    50e8:	b	5004 <main@@Base+0x3c18>
    50ec:	bl	1188 <__stack_chk_fail@plt>
    50f0:	ldrb	r7, [r8]
    50f4:	cmp	r7, #0
    50f8:	beq	51b8 <main@@Base+0x3dcc>
    50fc:	mov	r3, r8
    5100:	mov	sl, r7
    5104:	b	5114 <main@@Base+0x3d28>
    5108:	ldrb	sl, [r3, #1]!
    510c:	cmp	sl, #0
    5110:	beq	5130 <main@@Base+0x3d44>
    5114:	cmp	sl, #32
    5118:	bne	5108 <main@@Base+0x3d1c>
    511c:	ldrb	r2, [r3, #1]
    5120:	cmp	r2, #32
    5124:	beq	5264 <main@@Base+0x3e78>
    5128:	add	r9, r9, #1
    512c:	b	5108 <main@@Base+0x3d1c>
    5130:	add	r0, r9, #2
    5134:	mov	r1, #4
    5138:	bl	10a4 <calloc@plt>
    513c:	mov	fp, r0
    5140:	mov	r0, r8
    5144:	b	516c <main@@Base+0x3d80>
    5148:	ldrb	r2, [r0]
    514c:	cmp	r2, #32
    5150:	beq	5290 <main@@Base+0x3ea4>
    5154:	cmp	sl, r9
    5158:	bgt	526c <main@@Base+0x3e80>
    515c:	ldrb	r7, [r5, #1]
    5160:	add	r8, r5, #1
    5164:	cmp	r7, #0
    5168:	beq	51d0 <main@@Base+0x3de4>
    516c:	cmp	r7, #32
    5170:	mov	r5, r8
    5174:	bne	5148 <main@@Base+0x3d5c>
    5178:	rsb	r1, r0, r8
    517c:	bl	11b8 <__strndup@plt>
    5180:	add	r2, sl, #1
    5184:	str	r0, [fp, sl, lsl #2]
    5188:	ldrb	r3, [r8]
    518c:	cmp	r3, #32
    5190:	bne	51ac <main@@Base+0x3dc0>
    5194:	add	r8, r8, #1
    5198:	mov	r5, r8
    519c:	add	r8, r8, #1
    51a0:	ldrb	r3, [r5]
    51a4:	cmp	r3, #32
    51a8:	beq	5198 <main@@Base+0x3dac>
    51ac:	mov	sl, r2
    51b0:	mov	r0, r5
    51b4:	b	5154 <main@@Base+0x3d68>
    51b8:	mov	r0, #2
    51bc:	mov	r1, #4
    51c0:	bl	10a4 <calloc@plt>
    51c4:	mov	sl, r7
    51c8:	mov	fp, r0
    51cc:	mov	r0, r8
    51d0:	rsb	r1, r0, r8
    51d4:	bl	11b8 <__strndup@plt>
    51d8:	cmp	r4, #0
    51dc:	str	r0, [fp, sl, lsl #2]
    51e0:	beq	51f8 <main@@Base+0x3e0c>
    51e4:	ldr	r0, [sp, #12]
    51e8:	bl	13bc <close@plt>
    51ec:	ldr	r0, [sp, #16]
    51f0:	mov	r1, #0
    51f4:	bl	1194 <dup2@plt>
    51f8:	mov	r1, fp
    51fc:	ldr	r0, [fp]
    5200:	bl	1128 <execvp@plt>
    5204:	ldr	r4, [r6]
    5208:	bl	1320 <ply_logger_get_error_default@plt>
    520c:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5210:	cmp	r0, #0
    5214:	beq	525c <main@@Base+0x3e70>
    5218:	bl	1320 <ply_logger_get_error_default@plt>
    521c:	bl	1134 <ply_logger_flush@plt>
    5220:	str	r4, [r6]
    5224:	bl	1320 <ply_logger_get_error_default@plt>
    5228:	ldr	ip, [pc, #152]	; 52c8 <main@@Base+0x3edc>
    522c:	ldr	r1, [pc, #152]	; 52cc <main@@Base+0x3ee0>
    5230:	mov	r3, #161	; 0xa1
    5234:	ldr	r2, [pc, #148]	; 52d0 <main@@Base+0x3ee4>
    5238:	add	ip, pc, ip
    523c:	add	ip, ip, #64	; 0x40
    5240:	add	r1, pc, r1
    5244:	add	r2, pc, r2
    5248:	str	ip, [sp]
    524c:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    5250:	bl	1320 <ply_logger_get_error_default@plt>
    5254:	bl	1134 <ply_logger_flush@plt>
    5258:	str	r4, [r6]
    525c:	mov	r0, #127	; 0x7f
    5260:	bl	111c <_exit@plt>
    5264:	add	r3, r3, #1
    5268:	b	511c <main@@Base+0x3d30>
    526c:	ldr	r3, [pc, #96]	; 52d4 <main@@Base+0x3ee8>
    5270:	mov	r2, #114	; 0x72
    5274:	ldr	r0, [pc, #92]	; 52d8 <main@@Base+0x3eec>
    5278:	ldr	r1, [pc, #92]	; 52dc <main@@Base+0x3ef0>
    527c:	add	r3, pc, r3
    5280:	add	r0, pc, r0
    5284:	add	r3, r3, #84	; 0x54
    5288:	add	r1, pc, r1
    528c:	bl	13e0 <__assert_fail@plt>
    5290:	ldr	r3, [pc, #72]	; 52e0 <main@@Base+0x3ef4>
    5294:	mov	r2, #113	; 0x71
    5298:	ldr	r0, [pc, #68]	; 52e4 <main@@Base+0x3ef8>
    529c:	ldr	r1, [pc, #68]	; 52e8 <main@@Base+0x3efc>
    52a0:	add	r3, pc, r3
    52a4:	add	r0, pc, r0
    52a8:	add	r3, r3, #84	; 0x54
    52ac:	add	r1, pc, r1
    52b0:	bl	13e0 <__assert_fail@plt>
    52b4:	andeq	r2, r1, r8, ror #29
    52b8:	andeq	r0, r0, r0, lsr r1
    52bc:			; <UNDEFINED> instruction: 0x000014b8
    52c0:	andeq	r1, r0, r4, lsl #14
    52c4:	andeq	r1, r0, r4, ror #11
    52c8:	andeq	r1, r0, ip, lsr r3
    52cc:	andeq	r1, r0, r8, ror #11
    52d0:	andeq	r1, r0, r4, ror r4
    52d4:	strdeq	r1, [r0], -r8
    52d8:	andeq	r1, r0, ip, lsl #11
    52dc:	andeq	r1, r0, r0, lsr r4
    52e0:	ldrdeq	r1, [r0], -r4
    52e4:	andeq	r1, r0, r8, asr r5
    52e8:	andeq	r1, r0, ip, lsl #8
    52ec:	ldr	r3, [pc, #772]	; 55f8 <main@@Base+0x420c>
    52f0:	ldr	r2, [pc, #772]	; 55fc <main@@Base+0x4210>
    52f4:	add	r3, pc, r3
    52f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    52fc:	sub	sp, sp, #28
    5300:	ldr	r2, [r3, r2]
    5304:	mov	r4, r0
    5308:	ldr	r3, [r2]
    530c:	str	r2, [sp, #12]
    5310:	str	r3, [sp, #20]
    5314:	bl	1278 <__errno_location@plt>
    5318:	mov	r5, r0
    531c:	ldr	r6, [r0]
    5320:	bl	1320 <ply_logger_get_error_default@plt>
    5324:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5328:	cmp	r0, #0
    532c:	bne	548c <main@@Base+0x40a0>
    5330:	ldr	r3, [r4, #4]
    5334:	cmp	r3, #0
    5338:	beq	54dc <main@@Base+0x40f0>
    533c:	ldr	r6, [r5]
    5340:	bl	1320 <ply_logger_get_error_default@plt>
    5344:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5348:	cmp	r0, #0
    534c:	bne	54f0 <main@@Base+0x4104>
    5350:	ldr	r3, [r4, #12]
    5354:	mov	r2, #127	; 0x7f
    5358:	str	r2, [sp, #16]
    535c:	cmp	r3, #0
    5360:	ble	5460 <main@@Base+0x4074>
    5364:	ldr	r9, [pc, #660]	; 5600 <main@@Base+0x4214>
    5368:	add	r7, sp, #16
    536c:	ldr	fp, [pc, #656]	; 5604 <main@@Base+0x4218>
    5370:	ldr	sl, [pc, #656]	; 5608 <main@@Base+0x421c>
    5374:	add	r9, pc, r9
    5378:	add	fp, pc, fp
    537c:	add	r9, r9, #100	; 0x64
    5380:	add	sl, pc, sl
    5384:	b	539c <main@@Base+0x3fb0>
    5388:	ldr	r3, [r4, #12]
    538c:	sub	r3, r3, #1
    5390:	str	r3, [r4, #12]
    5394:	cmp	r3, #0
    5398:	ble	5414 <main@@Base+0x4028>
    539c:	ldr	r0, [r4, #4]
    53a0:	mov	r1, #0
    53a4:	mov	r2, r7
    53a8:	bl	4fbc <main@@Base+0x3bd0>
    53ac:	subs	r8, r0, #0
    53b0:	beq	53cc <main@@Base+0x3fe0>
    53b4:	ldr	r3, [sp, #16]
    53b8:	tst	r3, #127	; 0x7f
    53bc:	bne	53cc <main@@Base+0x3fe0>
    53c0:	ubfx	r3, r3, #8, #8
    53c4:	cmp	r3, #0
    53c8:	beq	5538 <main@@Base+0x414c>
    53cc:	ldr	r6, [r5]
    53d0:	bl	1320 <ply_logger_get_error_default@plt>
    53d4:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    53d8:	cmp	r0, #0
    53dc:	beq	5388 <main@@Base+0x3f9c>
    53e0:	bl	1320 <ply_logger_get_error_default@plt>
    53e4:	bl	1134 <ply_logger_flush@plt>
    53e8:	str	r6, [r5]
    53ec:	bl	1320 <ply_logger_get_error_default@plt>
    53f0:	mov	r1, fp
    53f4:	mov	r2, sl
    53f8:	mov	r3, #225	; 0xe1
    53fc:	str	r9, [sp]
    5400:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    5404:	bl	1320 <ply_logger_get_error_default@plt>
    5408:	bl	1134 <ply_logger_flush@plt>
    540c:	str	r6, [r5]
    5410:	b	5388 <main@@Base+0x3f9c>
    5414:	cmp	r8, #0
    5418:	ldrbeq	r1, [sp, #17]
    541c:	beq	5464 <main@@Base+0x4078>
    5420:	ldr	r1, [sp, #16]
    5424:	and	r3, r1, #127	; 0x7f
    5428:	add	r3, r3, #1
    542c:	sbfx	r3, r3, #1, #7
    5430:	cmp	r3, #0
    5434:	ubfxle	r1, r1, #8, #8
    5438:	ble	5464 <main@@Base+0x4078>
    543c:	ldr	r4, [r5]
    5440:	bl	1320 <ply_logger_get_error_default@plt>
    5444:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5448:	cmp	r0, #0
    544c:	bne	5594 <main@@Base+0x41a8>
    5450:	ldr	r0, [sp, #16]
    5454:	and	r0, r0, #127	; 0x7f
    5458:	bl	10bc <raise@plt>
    545c:	b	5470 <main@@Base+0x4084>
    5460:	mov	r1, #0
    5464:	ldr	r3, [r4]
    5468:	ldr	r0, [r3]
    546c:	bl	1260 <ply_event_loop_exit@plt>
    5470:	ldr	r1, [sp, #12]
    5474:	ldr	r2, [sp, #20]
    5478:	ldr	r3, [r1]
    547c:	cmp	r2, r3
    5480:	bne	55f4 <main@@Base+0x4208>
    5484:	add	sp, sp, #28
    5488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    548c:	bl	1320 <ply_logger_get_error_default@plt>
    5490:	bl	1134 <ply_logger_flush@plt>
    5494:	str	r6, [r5]
    5498:	bl	1320 <ply_logger_get_error_default@plt>
    549c:	ldr	ip, [pc, #360]	; 560c <main@@Base+0x4220>
    54a0:	ldr	r1, [pc, #360]	; 5610 <main@@Base+0x4224>
    54a4:	mov	r3, #198	; 0xc6
    54a8:	ldr	r2, [pc, #356]	; 5614 <main@@Base+0x4228>
    54ac:	add	ip, pc, ip
    54b0:	add	ip, ip, #100	; 0x64
    54b4:	add	r1, pc, r1
    54b8:	add	r2, pc, r2
    54bc:	str	ip, [sp]
    54c0:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    54c4:	bl	1320 <ply_logger_get_error_default@plt>
    54c8:	bl	1134 <ply_logger_flush@plt>
    54cc:	ldr	r3, [r4, #4]
    54d0:	str	r6, [r5]
    54d4:	cmp	r3, #0
    54d8:	bne	533c <main@@Base+0x3f50>
    54dc:	ldr	r3, [r4]
    54e0:	mov	r1, #1
    54e4:	ldr	r0, [r3]
    54e8:	bl	1260 <ply_event_loop_exit@plt>
    54ec:	b	5470 <main@@Base+0x4084>
    54f0:	bl	1320 <ply_logger_get_error_default@plt>
    54f4:	bl	1134 <ply_logger_flush@plt>
    54f8:	str	r6, [r5]
    54fc:	bl	1320 <ply_logger_get_error_default@plt>
    5500:	ldr	ip, [pc, #272]	; 5618 <main@@Base+0x422c>
    5504:	ldr	r1, [pc, #272]	; 561c <main@@Base+0x4230>
    5508:	mov	r3, #209	; 0xd1
    550c:	ldr	r2, [pc, #268]	; 5620 <main@@Base+0x4234>
    5510:	add	ip, pc, ip
    5514:	add	ip, ip, #100	; 0x64
    5518:	add	r1, pc, r1
    551c:	add	r2, pc, r2
    5520:	str	ip, [sp]
    5524:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    5528:	bl	1320 <ply_logger_get_error_default@plt>
    552c:	bl	1134 <ply_logger_flush@plt>
    5530:	str	r6, [r5]
    5534:	b	5350 <main@@Base+0x3f64>
    5538:	ldr	r6, [r5]
    553c:	bl	1320 <ply_logger_get_error_default@plt>
    5540:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5544:	cmp	r0, #0
    5548:	beq	5420 <main@@Base+0x4034>
    554c:	bl	1320 <ply_logger_get_error_default@plt>
    5550:	bl	1134 <ply_logger_flush@plt>
    5554:	str	r6, [r5]
    5558:	bl	1320 <ply_logger_get_error_default@plt>
    555c:	ldr	ip, [pc, #192]	; 5624 <main@@Base+0x4238>
    5560:	ldr	r1, [pc, #192]	; 5628 <main@@Base+0x423c>
    5564:	mov	r3, #221	; 0xdd
    5568:	ldr	r2, [pc, #188]	; 562c <main@@Base+0x4240>
    556c:	add	ip, pc, ip
    5570:	add	ip, ip, #100	; 0x64
    5574:	add	r1, pc, r1
    5578:	add	r2, pc, r2
    557c:	str	ip, [sp]
    5580:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    5584:	bl	1320 <ply_logger_get_error_default@plt>
    5588:	bl	1134 <ply_logger_flush@plt>
    558c:	str	r6, [r5]
    5590:	b	5420 <main@@Base+0x4034>
    5594:	bl	1320 <ply_logger_get_error_default@plt>
    5598:	bl	1134 <ply_logger_flush@plt>
    559c:	str	r4, [r5]
    55a0:	bl	1320 <ply_logger_get_error_default@plt>
    55a4:	mov	r6, r0
    55a8:	ldr	r0, [sp, #16]
    55ac:	and	r0, r0, #127	; 0x7f
    55b0:	bl	11c4 <strsignal@plt>
    55b4:	ldr	ip, [pc, #116]	; 5630 <main@@Base+0x4244>
    55b8:	ldr	r1, [pc, #116]	; 5634 <main@@Base+0x4248>
    55bc:	mov	r3, #231	; 0xe7
    55c0:	ldr	r2, [pc, #112]	; 5638 <main@@Base+0x424c>
    55c4:	add	ip, pc, ip
    55c8:	add	ip, ip, #100	; 0x64
    55cc:	add	r1, pc, r1
    55d0:	add	r2, pc, r2
    55d4:	str	ip, [sp]
    55d8:	str	r0, [sp, #4]
    55dc:	mov	r0, r6
    55e0:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    55e4:	bl	1320 <ply_logger_get_error_default@plt>
    55e8:	bl	1134 <ply_logger_flush@plt>
    55ec:	str	r4, [r5]
    55f0:	b	5450 <main@@Base+0x4064>
    55f4:	bl	1188 <__stack_chk_fail@plt>
    55f8:			; <UNDEFINED> instruction: 0x00012bb8
    55fc:	andeq	r0, r0, r0, lsr r1
    5600:	andeq	r1, r0, r0, lsl #4
    5604:	andeq	r1, r0, r8, ror r5
    5608:	andeq	r1, r0, r8, lsr r3
    560c:	andeq	r1, r0, r8, asr #1
    5610:	andeq	r1, r0, r0, lsr #7
    5614:	andeq	r1, r0, r0, lsl #4
    5618:	andeq	r1, r0, r4, rrx
    561c:	andeq	r1, r0, r8, ror #6
    5620:	muleq	r0, ip, r1
    5624:	andeq	r1, r0, r8
    5628:	andeq	r1, r0, r0, asr r3
    562c:	andeq	r1, r0, r0, asr #2
    5630:			; <UNDEFINED> instruction: 0x00000fb0
    5634:	andeq	r1, r0, r8, asr #6
    5638:	andeq	r1, r0, r8, ror #1
    563c:	push	{r3, r4, r5, lr}
    5640:	subs	r5, r1, #0
    5644:	mov	r4, r0
    5648:	beq	5690 <main@@Base+0x42a4>
    564c:	ldr	r0, [r0, #4]
    5650:	cmp	r0, #0
    5654:	beq	5674 <main@@Base+0x4288>
    5658:	mov	r2, #0
    565c:	bl	4fbc <main@@Base+0x3bd0>
    5660:	ldr	r3, [r4]
    5664:	mov	r1, #0
    5668:	ldr	r0, [r3]
    566c:	pop	{r3, r4, r5, lr}
    5670:	b	1260 <ply_event_loop_exit@plt>
    5674:	mov	r0, r5
    5678:	bl	1254 <strlen@plt>
    567c:	mov	r1, r5
    5680:	mov	r2, r0
    5684:	mov	r0, #1
    5688:	bl	12f0 <write@plt>
    568c:	b	5660 <main@@Base+0x4274>
    5690:	ldr	r3, [r0]
    5694:	mov	r1, #1
    5698:	ldr	r0, [r3]
    569c:	pop	{r3, r4, r5, lr}
    56a0:	b	1260 <ply_event_loop_exit@plt>
    56a4:	ldr	r3, [pc, #536]	; 58c4 <main@@Base+0x44d8>
    56a8:	ldr	r2, [pc, #536]	; 58c8 <main@@Base+0x44dc>
    56ac:	add	r3, pc, r3
    56b0:	push	{r4, r5, r6, r7, r8, r9, lr}
    56b4:	mov	r4, r1
    56b8:	ldr	r8, [r3, r2]
    56bc:	sub	sp, sp, #20
    56c0:	ldr	r1, [r0, #4]
    56c4:	mov	r5, r0
    56c8:	ldr	r3, [r8]
    56cc:	cmp	r1, #0
    56d0:	str	r3, [sp, #12]
    56d4:	beq	58a0 <main@@Base+0x44b4>
    56d8:	bl	1278 <__errno_location@plt>
    56dc:	mov	r6, r0
    56e0:	ldr	r7, [r0]
    56e4:	bl	1320 <ply_logger_get_error_default@plt>
    56e8:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    56ec:	cmp	r0, #0
    56f0:	bne	579c <main@@Base+0x43b0>
    56f4:	cmp	r4, #0
    56f8:	ldr	r9, [r6]
    56fc:	beq	57ec <main@@Base+0x4400>
    5700:	bl	1320 <ply_logger_get_error_default@plt>
    5704:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    5708:	cmp	r0, #0
    570c:	bne	5844 <main@@Base+0x4458>
    5710:	ldr	r1, [r4]
    5714:	cmp	r1, #0
    5718:	beq	5760 <main@@Base+0x4374>
    571c:	add	r7, sp, #8
    5720:	mov	r6, #127	; 0x7f
    5724:	ldr	r0, [r5, #4]
    5728:	mov	r2, r7
    572c:	str	r6, [sp, #8]
    5730:	bl	4fbc <main@@Base+0x3bd0>
    5734:	cmp	r0, #0
    5738:	beq	5754 <main@@Base+0x4368>
    573c:	ldr	r3, [sp, #8]
    5740:	tst	r3, #127	; 0x7f
    5744:	bne	5754 <main@@Base+0x4368>
    5748:	ubfx	r1, r3, #8, #8
    574c:	cmp	r1, #0
    5750:	beq	588c <main@@Base+0x44a0>
    5754:	ldr	r1, [r4, #4]!
    5758:	cmp	r1, #0
    575c:	bne	5724 <main@@Base+0x4338>
    5760:	ldr	r3, [r5]
    5764:	ldr	r2, [pc, #352]	; 58cc <main@@Base+0x44e0>
    5768:	ldr	r1, [r5, #8]
    576c:	ldr	r0, [r3, #4]
    5770:	add	r2, pc, r2
    5774:	ldr	r3, [pc, #340]	; 58d0 <main@@Base+0x44e4>
    5778:	str	r5, [sp]
    577c:	add	r3, pc, r3
    5780:	bl	3b60 <main@@Base+0x2774>
    5784:	ldr	r2, [sp, #12]
    5788:	ldr	r3, [r8]
    578c:	cmp	r2, r3
    5790:	bne	589c <main@@Base+0x44b0>
    5794:	add	sp, sp, #20
    5798:	pop	{r4, r5, r6, r7, r8, r9, pc}
    579c:	bl	1320 <ply_logger_get_error_default@plt>
    57a0:	mov	r9, r7
    57a4:	bl	1134 <ply_logger_flush@plt>
    57a8:	str	r7, [r6]
    57ac:	bl	1320 <ply_logger_get_error_default@plt>
    57b0:	ldr	ip, [pc, #284]	; 58d4 <main@@Base+0x44e8>
    57b4:	ldr	r1, [pc, #284]	; 58d8 <main@@Base+0x44ec>
    57b8:	mov	r3, #396	; 0x18c
    57bc:	ldr	r2, [pc, #280]	; 58dc <main@@Base+0x44f0>
    57c0:	add	ip, pc, ip
    57c4:	add	ip, ip, #160	; 0xa0
    57c8:	add	r1, pc, r1
    57cc:	add	r2, pc, r2
    57d0:	str	ip, [sp]
    57d4:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    57d8:	bl	1320 <ply_logger_get_error_default@plt>
    57dc:	bl	1134 <ply_logger_flush@plt>
    57e0:	cmp	r4, #0
    57e4:	str	r7, [r6]
    57e8:	bne	5700 <main@@Base+0x4314>
    57ec:	bl	1320 <ply_logger_get_error_default@plt>
    57f0:	bl	1248 <ply_logger_is_tracing_enabled@plt>
    57f4:	cmp	r0, #0
    57f8:	beq	5760 <main@@Base+0x4374>
    57fc:	bl	1320 <ply_logger_get_error_default@plt>
    5800:	bl	1134 <ply_logger_flush@plt>
    5804:	str	r9, [r6]
    5808:	bl	1320 <ply_logger_get_error_default@plt>
    580c:	ldr	ip, [pc, #204]	; 58e0 <main@@Base+0x44f4>
    5810:	ldr	r1, [pc, #204]	; 58e4 <main@@Base+0x44f8>
    5814:	movw	r3, #419	; 0x1a3
    5818:	ldr	r2, [pc, #200]	; 58e8 <main@@Base+0x44fc>
    581c:	add	ip, pc, ip
    5820:	add	ip, ip, #160	; 0xa0
    5824:	add	r1, pc, r1
    5828:	add	r2, pc, r2
    582c:	str	ip, [sp]
    5830:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    5834:	bl	1320 <ply_logger_get_error_default@plt>
    5838:	bl	1134 <ply_logger_flush@plt>
    583c:	str	r9, [r6]
    5840:	b	5760 <main@@Base+0x4374>
    5844:	bl	1320 <ply_logger_get_error_default@plt>
    5848:	bl	1134 <ply_logger_flush@plt>
    584c:	str	r9, [r6]
    5850:	bl	1320 <ply_logger_get_error_default@plt>
    5854:	ldr	ip, [pc, #144]	; 58ec <main@@Base+0x4500>
    5858:	ldr	r1, [pc, #144]	; 58f0 <main@@Base+0x4504>
    585c:	movw	r3, #402	; 0x192
    5860:	ldr	r2, [pc, #140]	; 58f4 <main@@Base+0x4508>
    5864:	add	ip, pc, ip
    5868:	add	ip, ip, #160	; 0xa0
    586c:	add	r1, pc, r1
    5870:	add	r2, pc, r2
    5874:	str	ip, [sp]
    5878:	bl	129c <ply_logger_inject_with_non_literal_format_string@plt>
    587c:	bl	1320 <ply_logger_get_error_default@plt>
    5880:	bl	1134 <ply_logger_flush@plt>
    5884:	str	r9, [r6]
    5888:	b	5710 <main@@Base+0x4324>
    588c:	ldr	r2, [r5]
    5890:	ldr	r0, [r2]
    5894:	bl	1260 <ply_event_loop_exit@plt>
    5898:	b	5784 <main@@Base+0x4398>
    589c:	bl	1188 <__stack_chk_fail@plt>
    58a0:	ldr	r3, [pc, #80]	; 58f8 <main@@Base+0x450c>
    58a4:	movw	r2, #394	; 0x18a
    58a8:	ldr	r0, [pc, #76]	; 58fc <main@@Base+0x4510>
    58ac:	ldr	r1, [pc, #76]	; 5900 <main@@Base+0x4514>
    58b0:	add	r3, pc, r3
    58b4:	add	r0, pc, r0
    58b8:	add	r3, r3, #128	; 0x80
    58bc:	add	r1, pc, r1
    58c0:	bl	13e0 <__assert_fail@plt>
    58c4:	andeq	r2, r1, r0, lsl #16
    58c8:	andeq	r0, r0, r0, lsr r1
    58cc:	andeq	r0, r0, ip, lsl #3
    58d0:			; <UNDEFINED> instruction: 0xfffffb68
    58d4:			; <UNDEFINED> instruction: 0x00000db4
    58d8:	andeq	r1, r0, r4, lsr #3
    58dc:	andeq	r0, r0, ip, ror #29
    58e0:	andeq	r0, r0, r8, asr sp
    58e4:	andeq	r1, r0, r0, asr #3
    58e8:	muleq	r0, r0, lr
    58ec:	andeq	r0, r0, r0, lsl sp
    58f0:	andeq	r1, r0, r0, lsr r1
    58f4:	andeq	r0, r0, r8, asr #28
    58f8:	andeq	r0, r0, r4, asr #25
    58fc:	muleq	r0, r0, r0
    5900:	strdeq	r0, [r0], -ip
    5904:	ldr	r3, [pc, #380]	; 5a88 <main@@Base+0x469c>
    5908:	ldr	ip, [pc, #380]	; 5a8c <main@@Base+0x46a0>
    590c:	add	r3, pc, r3
    5910:	push	{r4, r5, r6, r7, r8, lr}
    5914:	subs	r6, r1, #0
    5918:	ldr	r5, [r3, ip]
    591c:	sub	sp, sp, #16
    5920:	mov	r7, r2
    5924:	mov	r4, r0
    5928:	mov	r2, #127	; 0x7f
    592c:	str	r2, [sp, #8]
    5930:	ldr	r3, [r5]
    5934:	str	r3, [sp, #12]
    5938:	beq	59b0 <main@@Base+0x45c4>
    593c:	ldrb	r3, [r6]
    5940:	cmp	r3, #3
    5944:	beq	5a50 <main@@Base+0x4664>
    5948:	ldr	r8, [r0, #4]
    594c:	cmp	r8, #0
    5950:	beq	5a34 <main@@Base+0x4648>
    5954:	mov	r0, r8
    5958:	add	r2, sp, #8
    595c:	bl	4fbc <main@@Base+0x3bd0>
    5960:	ldr	r1, [sp, #8]
    5964:	cmp	r0, #0
    5968:	beq	59c0 <main@@Base+0x45d4>
    596c:	tst	r1, #127	; 0x7f
    5970:	beq	5a74 <main@@Base+0x4688>
    5974:	ldr	r3, [r4, #12]
    5978:	sub	r3, r3, #1
    597c:	str	r3, [r4, #12]
    5980:	cmp	r3, #0
    5984:	ble	59c0 <main@@Base+0x45d4>
    5988:	ldr	r3, [r4]
    598c:	ldr	r2, [pc, #252]	; 5a90 <main@@Base+0x46a4>
    5990:	ldr	r1, [r4, #8]
    5994:	ldr	r0, [r3, #4]
    5998:	add	r2, pc, r2
    599c:	ldr	r3, [pc, #240]	; 5a94 <main@@Base+0x46a8>
    59a0:	str	r4, [sp]
    59a4:	add	r3, pc, r3
    59a8:	bl	3b60 <main@@Base+0x2774>
    59ac:	b	5a10 <main@@Base+0x4624>
    59b0:	ldr	r3, [r0]
    59b4:	ldr	r1, [r3, #4]
    59b8:	bl	52ec <main@@Base+0x3f00>
    59bc:	ldr	r1, [sp, #8]
    59c0:	and	r0, r1, #127	; 0x7f
    59c4:	add	r3, r0, #1
    59c8:	sbfx	r3, r3, #1, #7
    59cc:	cmp	r3, #0
    59d0:	ubfxle	r1, r1, #8, #8
    59d4:	ble	59e0 <main@@Base+0x45f4>
    59d8:	bl	10bc <raise@plt>
    59dc:	ldrb	r1, [sp, #9]
    59e0:	ldrb	r3, [r4, #16]
    59e4:	tst	r3, #1
    59e8:	beq	5a64 <main@@Base+0x4678>
    59ec:	cmp	r1, #0
    59f0:	bne	5a28 <main@@Base+0x463c>
    59f4:	ldr	r1, [pc, #156]	; 5a98 <main@@Base+0x46ac>
    59f8:	add	r1, pc, r1
    59fc:	ldr	r2, [pc, #152]	; 5a9c <main@@Base+0x46b0>
    5a00:	mov	r0, r7
    5a04:	ldr	r3, [r4]
    5a08:	add	r2, pc, r2
    5a0c:	bl	401c <main@@Base+0x2c30>
    5a10:	ldr	r2, [sp, #12]
    5a14:	ldr	r3, [r5]
    5a18:	cmp	r2, r3
    5a1c:	bne	5a84 <main@@Base+0x4698>
    5a20:	add	sp, sp, #16
    5a24:	pop	{r4, r5, r6, r7, r8, pc}
    5a28:	ldr	r1, [pc, #112]	; 5aa0 <main@@Base+0x46b4>
    5a2c:	add	r1, pc, r1
    5a30:	b	59fc <main@@Base+0x4610>
    5a34:	mov	r0, r6
    5a38:	bl	1254 <strlen@plt>
    5a3c:	mov	r1, r6
    5a40:	mov	r2, r0
    5a44:	mov	r0, #1
    5a48:	bl	12f0 <write@plt>
    5a4c:	str	r8, [sp, #8]
    5a50:	ldrb	r1, [r4, #16]
    5a54:	ands	r1, r1, #1
    5a58:	ldrne	r1, [pc, #68]	; 5aa4 <main@@Base+0x46b8>
    5a5c:	addne	r1, pc, r1
    5a60:	bne	59fc <main@@Base+0x4610>
    5a64:	ldr	r3, [r4]
    5a68:	ldr	r0, [r3]
    5a6c:	bl	1260 <ply_event_loop_exit@plt>
    5a70:	b	5a10 <main@@Base+0x4624>
    5a74:	ubfx	r3, r1, #8, #8
    5a78:	cmp	r3, #0
    5a7c:	beq	59c0 <main@@Base+0x45d4>
    5a80:	b	5974 <main@@Base+0x4588>
    5a84:	bl	1188 <__stack_chk_fail@plt>
    5a88:	andeq	r2, r1, r0, lsr #11
    5a8c:	andeq	r0, r0, r0, lsr r1
    5a90:			; <UNDEFINED> instruction: 0xffffff64
    5a94:			; <UNDEFINED> instruction: 0xfffff940
    5a98:			; <UNDEFINED> instruction: 0xffffe8e0
    5a9c:			; <UNDEFINED> instruction: 0xffffe8c4
    5aa0:			; <UNDEFINED> instruction: 0xffffe8a0
    5aa4:			; <UNDEFINED> instruction: 0xffffe87c
    5aa8:	push	{r4, r5, r6, lr}
    5aac:	subs	r6, r1, #0
    5ab0:	mov	r4, r0
    5ab4:	mov	r5, r2
    5ab8:	beq	5b0c <main@@Base+0x4720>
    5abc:	ldr	r0, [r0, #4]
    5ac0:	cmp	r0, #0
    5ac4:	beq	5b2c <main@@Base+0x4740>
    5ac8:	mov	r2, #0
    5acc:	bl	4fbc <main@@Base+0x3bd0>
    5ad0:	ldrb	r1, [r4, #12]
    5ad4:	ands	r1, r1, #1
    5ad8:	beq	5afc <main@@Base+0x4710>
    5adc:	ldr	r1, [pc, #128]	; 5b64 <main@@Base+0x4778>
    5ae0:	mov	r0, r5
    5ae4:	ldr	r2, [pc, #124]	; 5b68 <main@@Base+0x477c>
    5ae8:	ldr	r3, [r4]
    5aec:	add	r1, pc, r1
    5af0:	add	r2, pc, r2
    5af4:	pop	{r4, r5, r6, lr}
    5af8:	b	401c <main@@Base+0x2c30>
    5afc:	ldr	r3, [r4]
    5b00:	pop	{r4, r5, r6, lr}
    5b04:	ldr	r0, [r3]
    5b08:	b	1260 <ply_event_loop_exit@plt>
    5b0c:	ldrb	r3, [r0, #12]
    5b10:	tst	r3, #1
    5b14:	bne	5b48 <main@@Base+0x475c>
    5b18:	ldr	r3, [r0]
    5b1c:	mov	r1, #1
    5b20:	pop	{r4, r5, r6, lr}
    5b24:	ldr	r0, [r3]
    5b28:	b	1260 <ply_event_loop_exit@plt>
    5b2c:	mov	r0, r6
    5b30:	bl	1254 <strlen@plt>
    5b34:	mov	r1, r6
    5b38:	mov	r2, r0
    5b3c:	mov	r0, #1
    5b40:	bl	12f0 <write@plt>
    5b44:	b	5ad0 <main@@Base+0x46e4>
    5b48:	ldr	r1, [pc, #28]	; 5b6c <main@@Base+0x4780>
    5b4c:	mov	r0, r2
    5b50:	ldr	r3, [r4]
    5b54:	add	r1, pc, r1
    5b58:	pop	{r4, r5, r6, lr}
    5b5c:	mov	r2, r1
    5b60:	b	401c <main@@Base+0x2c30>
    5b64:			; <UNDEFINED> instruction: 0xffffe7ec
    5b68:			; <UNDEFINED> instruction: 0xffffe7dc
    5b6c:			; <UNDEFINED> instruction: 0xffffe778

00005b70 <__libc_csu_init@@Base>:
    5b70:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    5b74:	mov	r7, r0
    5b78:	ldr	r6, [pc, #76]	; 5bcc <__libc_csu_init@@Base+0x5c>
    5b7c:	mov	r8, r1
    5b80:	ldr	r5, [pc, #72]	; 5bd0 <__libc_csu_init@@Base+0x60>
    5b84:	mov	r9, r2
    5b88:	add	r6, pc, r6
    5b8c:	bl	1084 <calloc@plt-0x20>
    5b90:	add	r5, pc, r5
    5b94:	rsb	r6, r5, r6
    5b98:	asrs	r6, r6, #2
    5b9c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    5ba0:	sub	r5, r5, #4
    5ba4:	mov	r4, #0
    5ba8:	add	r4, r4, #1
    5bac:	ldr	r3, [r5, #4]!
    5bb0:	mov	r0, r7
    5bb4:	mov	r1, r8
    5bb8:	mov	r2, r9
    5bbc:	blx	r3
    5bc0:	cmp	r4, r6
    5bc4:	bne	5ba8 <__libc_csu_init@@Base+0x38>
    5bc8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    5bcc:	strdeq	r2, [r1], -r0
    5bd0:	andeq	r2, r1, r4, ror #3

00005bd4 <__libc_csu_fini@@Base>:
    5bd4:	bx	lr

Disassembly of section .fini:

00005bd8 <.fini>:
    5bd8:	push	{r3, lr}
    5bdc:	pop	{r3, pc}
