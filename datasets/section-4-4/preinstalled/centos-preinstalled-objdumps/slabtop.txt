
centos-preinstalled/slabtop:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <_init@@Base>:
   10d98:	push	{r3, lr}
   10d9c:	bl	11a1c <fputs@plt+0xa78>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <__ctype_toupper_loc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <_init@@Base+0x1c>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r2, r1, ip, asr #4

00010db8 <__ctype_toupper_loc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <abort@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <get_slabinfo@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <free_slabinfo@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <__libc_start_main@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <wmove@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <signal@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <__gmon_start__@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <endwin@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <fclose@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <__printf_chk@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <strtod@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <__cxa_atexit@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <printw@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <resizeterm@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <memset@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <bindtextdomain@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <put_slabinfo@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <initscr@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <_exit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <read@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <getopt_long@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <dcgettext@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <tcgetattr@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <ioctl@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <wrefresh@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <setlocale@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #73728	; 0x12000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <strtol@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #73728	; 0x12000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <select@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #73728	; 0x12000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <error@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #73728	; 0x12000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <__stack_chk_fail@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #73728	; 0x12000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <__fprintf_chk@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #73728	; 0x12000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <tcsetattr@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #73728	; 0x12000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <textdomain@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #73728	; 0x12000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <wattr_off@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #73728	; 0x12000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <ferror@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #73728	; 0x12000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <strcmp@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #73728	; 0x12000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <exit@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #73728	; 0x12000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <__errno_location@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #73728	; 0x12000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <wattr_on@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #73728	; 0x12000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <fputs@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #73728	; 0x12000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

Disassembly of section .text:

00010fb0 <.text>:
   10fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fb4:	vpush	{d8-d14}
   10fb8:	movw	fp, #12504	; 0x30d8
   10fbc:	movw	r5, #12496	; 0x30d0
   10fc0:	movt	fp, #2
   10fc4:	movt	r5, #2
   10fc8:	sub	sp, sp, #364	; 0x16c
   10fcc:	ldr	ip, [fp]
   10fd0:	movw	r3, #12500	; 0x30d4
   10fd4:	ldr	r2, [r5]
   10fd8:	movt	r3, #2
   10fdc:	str	r1, [sp, #140]	; 0x8c
   10fe0:	movw	r1, #9796	; 0x2644
   10fe4:	str	r0, [sp, #136]	; 0x88
   10fe8:	movt	r1, #1
   10fec:	mov	r0, #6
   10ff0:	str	ip, [sp, #356]	; 0x164
   10ff4:	str	r2, [r3]
   10ff8:	mov	r6, #0
   10ffc:	str	r6, [sp, #168]	; 0xa8
   11000:	bl	10efc <setlocale@plt>
   11004:	movw	r0, #9928	; 0x26c8
   11008:	movw	r1, #9940	; 0x26d4
   1100c:	movt	r0, #1
   11010:	movt	r1, #1
   11014:	bl	10e84 <bindtextdomain@plt>
   11018:	movw	r0, #9928	; 0x26c8
   1101c:	movt	r0, #1
   11020:	movw	r4, #12528	; 0x30f0
   11024:	bl	10f50 <textdomain@plt>
   11028:	movw	r0, #8744	; 0x2228
   1102c:	movt	r0, #1
   11030:	movw	ip, #7180	; 0x1c0c
   11034:	movt	r4, #2
   11038:	str	ip, [sp, #144]	; 0x90
   1103c:	movw	r8, #12480	; 0x30c0
   11040:	bl	12314 <fputs@plt+0x1370>
   11044:	movw	r7, #12520	; 0x30e8
   11048:	ldr	ip, [sp, #144]	; 0x90
   1104c:	movw	r9, #9040	; 0x2350
   11050:	movt	r8, #2
   11054:	movt	r7, #2
   11058:	movt	r9, #1
   1105c:	mov	sl, r6
   11060:	movt	ip, #1
   11064:	str	ip, [sp, #144]	; 0x90
   11068:	str	ip, [r4]
   1106c:	mov	r6, #0
   11070:	movw	r2, #10040	; 0x2738
   11074:	str	r6, [sp]
   11078:	movt	r2, #1
   1107c:	ldr	r0, [sp, #136]	; 0x88
   11080:	ldr	r1, [sp, #140]	; 0x8c
   11084:	ldr	r3, [pc, #1404]	; 11608 <fputs@plt+0x664>
   11088:	bl	10ec0 <getopt_long@plt>
   1108c:	cmn	r0, #1
   11090:	beq	11228 <fputs@plt+0x284>
   11094:	sub	r0, r0, #86	; 0x56
   11098:	cmp	r0, #29
   1109c:	ldrls	pc, [pc, r0, lsl #2]
   110a0:	b	11218 <fputs@plt+0x274>
   110a4:	andeq	r1, r1, ip, asr #3
   110a8:	andeq	r1, r1, r8, lsl r2
   110ac:	andeq	r1, r1, r8, lsl r2
   110b0:	andeq	r1, r1, r8, lsl r2
   110b4:	andeq	r1, r1, r8, lsl r2
   110b8:	andeq	r1, r1, r8, lsl r2
   110bc:	andeq	r1, r1, r8, lsl r2
   110c0:	andeq	r1, r1, r8, lsl r2
   110c4:	andeq	r1, r1, r8, lsl r2
   110c8:	andeq	r1, r1, r8, lsl r2
   110cc:	andeq	r1, r1, r8, lsl r2
   110d0:	andeq	r1, r1, r8, lsl r2
   110d4:	andeq	r1, r1, r8, lsl r2
   110d8:	andeq	r1, r1, r8, lsl r2
   110dc:	andeq	r1, r1, r4, ror #2
   110e0:	andeq	r1, r1, r8, lsl r2
   110e4:	andeq	r1, r1, r8, lsl r2
   110e8:	andeq	r1, r1, r8, lsl r2
   110ec:	andeq	r1, r1, r4, asr r1
   110f0:	andeq	r1, r1, r8, lsl r2
   110f4:	andeq	r1, r1, r8, lsl r2
   110f8:	andeq	r1, r1, r8, lsl r2
   110fc:	andeq	r1, r1, r8, lsl r2
   11100:	andeq	r1, r1, r8, lsl r2
   11104:	andeq	r1, r1, r8, lsl r2
   11108:	andeq	r1, r1, r4, asr #2
   1110c:	andeq	r1, r1, r8, lsl r2
   11110:	andeq	r1, r1, r8, lsl r2
   11114:	andeq	r1, r1, r8, lsl r2
   11118:	andeq	r1, r1, ip, lsl r1
   1111c:	ldr	r3, [r7]
   11120:	ldrb	r3, [r3]
   11124:	sub	r3, r3, #97	; 0x61
   11128:	uxtb	r3, r3
   1112c:	cmp	r3, #21
   11130:	ldrls	r3, [r9, r3, lsl #2]
   11134:	movwhi	r3, #7180	; 0x1c0c
   11138:	movthi	r3, #1
   1113c:	str	r3, [r4]
   11140:	b	1106c <fputs@plt+0xc8>
   11144:	mov	r3, #0
   11148:	mov	sl, #1
   1114c:	str	r3, [r8]
   11150:	b	1106c <fputs@plt+0xc8>
   11154:	movw	r3, #12512	; 0x30e0
   11158:	movt	r3, #2
   1115c:	ldr	r0, [r3]
   11160:	bl	11d08 <fputs@plt+0xd64>
   11164:	bl	10f8c <__errno_location@plt>
   11168:	ldr	r3, [r7]
   1116c:	mov	r6, #0
   11170:	mov	r2, #5
   11174:	movw	r1, #9960	; 0x26e8
   11178:	movt	r1, #1
   1117c:	str	r6, [r0]
   11180:	mov	r0, r6
   11184:	str	r3, [sp, #132]	; 0x84
   11188:	bl	10ecc <dcgettext@plt>
   1118c:	ldr	r3, [sp, #132]	; 0x84
   11190:	mov	r1, r0
   11194:	mov	r0, r3
   11198:	bl	12024 <fputs@plt+0x1080>
   1119c:	cmp	r0, r6
   111a0:	str	r0, [r8]
   111a4:	bgt	1106c <fputs@plt+0xc8>
   111a8:	mov	r2, #5
   111ac:	movw	r1, #9976	; 0x26f8
   111b0:	mov	r0, r6
   111b4:	movt	r1, #1
   111b8:	bl	10ecc <dcgettext@plt>
   111bc:	mov	r1, r6
   111c0:	mov	r2, r0
   111c4:	mov	r0, #1
   111c8:	bl	10f20 <error@plt>
   111cc:	mov	r2, #5
   111d0:	movw	r1, #10008	; 0x2718
   111d4:	mov	r0, #0
   111d8:	movt	r1, #1
   111dc:	bl	10ecc <dcgettext@plt>
   111e0:	ldr	r2, [r5]
   111e4:	movw	r3, #10020	; 0x2724
   111e8:	movt	r3, #1
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	bl	10e30 <__printf_chk@plt>
   111f8:	mov	r0, #0
   111fc:	ldr	r2, [sp, #356]	; 0x164
   11200:	ldr	r3, [fp]
   11204:	cmp	r2, r3
   11208:	bne	119dc <fputs@plt+0xa38>
   1120c:	add	sp, sp, #364	; 0x16c
   11210:	vpop	{d8-d14}
   11214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11218:	movw	r3, #12516	; 0x30e4
   1121c:	movt	r3, #2
   11220:	ldr	r0, [r3]
   11224:	bl	11d08 <fputs@plt+0xd64>
   11228:	mov	r0, r6
   1122c:	ldr	r1, [pc, #984]	; 1160c <fputs@plt+0x668>
   11230:	bl	10ed8 <tcgetattr@plt>
   11234:	cmn	r0, #1
   11238:	beq	119ac <fputs@plt+0xa08>
   1123c:	ldrh	ip, [r4, #6]
   11240:	mov	r0, #0
   11244:	movw	r5, #12528	; 0x30f0
   11248:	movt	r5, #2
   1124c:	str	ip, [sp, #148]	; 0x94
   11250:	bl	11f9c <fputs@plt+0xff8>
   11254:	cmp	sl, #0
   11258:	beq	11988 <fputs@plt+0x9e4>
   1125c:	movw	r9, #12488	; 0x30c8
   11260:	add	r5, sp, #352	; 0x160
   11264:	movt	r9, #2
   11268:	movw	r1, #7396	; 0x1ce4
   1126c:	mov	r0, #2
   11270:	movt	r1, #1
   11274:	bl	10e00 <signal@plt>
   11278:	vldr	d9, [pc, #888]	; 115f8 <fputs@plt+0x654>
   1127c:	movw	ip, #12528	; 0x30f0
   11280:	vldr	d8, [pc, #888]	; 11600 <fputs@plt+0x65c>
   11284:	movt	ip, #2
   11288:	str	fp, [sp, #156]	; 0x9c
   1128c:	str	ip, [sp, #152]	; 0x98
   11290:	mov	r1, #0
   11294:	mov	r2, #48	; 0x30
   11298:	add	r0, sp, #180	; 0xb4
   1129c:	bl	10e78 <memset@plt>
   112a0:	add	r0, sp, #168	; 0xa8
   112a4:	add	r1, sp, #180	; 0xb4
   112a8:	bl	10dd0 <get_slabinfo@plt>
   112ac:	subs	r6, r0, #0
   112b0:	bne	1197c <fputs@plt+0x9d8>
   112b4:	cmp	sl, #0
   112b8:	bne	11610 <fputs@plt+0x66c>
   112bc:	ldrh	r0, [r4, #6]
   112c0:	ldr	ip, [sp, #148]	; 0x94
   112c4:	cmp	ip, r0
   112c8:	beq	112e4 <fputs@plt+0x340>
   112cc:	ldr	ip, [sp, #152]	; 0x98
   112d0:	ldrh	r1, [ip, #4]
   112d4:	bl	10e6c <resizeterm@plt>
   112d8:	ldr	ip, [sp, #152]	; 0x98
   112dc:	ldrh	ip, [ip, #6]
   112e0:	str	ip, [sp, #148]	; 0x94
   112e4:	mov	r1, #0
   112e8:	ldr	r0, [r9]
   112ec:	mov	r2, r1
   112f0:	movw	r7, #12488	; 0x30c8
   112f4:	bl	10df4 <wmove@plt>
   112f8:	mov	r2, #5
   112fc:	movw	r1, #10120	; 0x2788
   11300:	mov	r0, #0
   11304:	movt	r1, #1
   11308:	movt	r7, #2
   1130c:	bl	10ecc <dcgettext@plt>
   11310:	mov	r2, #5
   11314:	movw	r1, #10152	; 0x27a8
   11318:	movt	r1, #1
   1131c:	vldr	s25, [sp, #188]	; 0xbc
   11320:	vldr	s29, [sp, #192]	; 0xc0
   11324:	mov	ip, r0
   11328:	mov	r0, #0
   1132c:	str	ip, [sp, #128]	; 0x80
   11330:	bl	10ecc <dcgettext@plt>
   11334:	mov	r2, #5
   11338:	movw	r1, #10184	; 0x27c8
   1133c:	movt	r1, #1
   11340:	vldr	s28, [sp, #204]	; 0xcc
   11344:	vldr	s24, [sp, #200]	; 0xc8
   11348:	mov	fp, r0
   1134c:	mov	r0, #0
   11350:	bl	10ecc <dcgettext@plt>
   11354:	mov	r2, #5
   11358:	movw	r1, #10216	; 0x27e8
   1135c:	movt	r1, #1
   11360:	vldr	s27, [sp, #212]	; 0xd4
   11364:	vldr	s26, [sp, #208]	; 0xd0
   11368:	mov	r8, r0
   1136c:	mov	r0, #0
   11370:	bl	10ecc <dcgettext@plt>
   11374:	mov	r2, #5
   11378:	movw	r1, #10248	; 0x2808
   1137c:	movt	r1, #1
   11380:	vldr	s13, [sp, #184]	; 0xb8
   11384:	vldr	s15, [sp, #180]	; 0xb4
   11388:	vcvt.f64.u32	d11, s13
   1138c:	vcvt.f64.u32	d10, s15
   11390:	mov	r6, r0
   11394:	mov	r0, #0
   11398:	bl	10ecc <dcgettext@plt>
   1139c:	vcvt.f64.u32	d5, s27
   113a0:	vmov	r3, s25
   113a4:	vstr	s24, [sp, #16]
   113a8:	ldr	ip, [sp, #128]	; 0x80
   113ac:	vstr	s28, [sp, #12]
   113b0:	vmov	r2, s29
   113b4:	vstr	s27, [sp, #36]	; 0x24
   113b8:	str	fp, [sp, #8]
   113bc:	vstr	s26, [sp, #40]	; 0x28
   113c0:	mov	r1, ip
   113c4:	str	r8, [sp, #32]
   113c8:	str	r6, [sp, #56]	; 0x38
   113cc:	vmul.f64	d5, d5, d9
   113d0:	vmul.f64	d7, d11, d9
   113d4:	str	r0, [sp, #88]	; 0x58
   113d8:	movw	r0, #10284	; 0x282c
   113dc:	movt	r0, #1
   113e0:	vcvt.f64.u32	d6, s26
   113e4:	vdiv.f64	d7, d7, d10
   113e8:	vdiv.f64	d6, d5, d6
   113ec:	vstr	d7, [sp, #80]	; 0x50
   113f0:	vldr	s15, [sp, #216]	; 0xd8
   113f4:	vcvt.f64.u32	d2, s29
   113f8:	vstr	d6, [sp, #48]	; 0x30
   113fc:	vcvt.f64.u32	d4, s28
   11400:	vmul.f64	d2, d2, d9
   11404:	vmul.f64	d4, d4, d9
   11408:	vcvt.f64.u32	d3, s25
   1140c:	vcvt.f64.u32	d12, s24
   11410:	vdiv.f64	d3, d2, d3
   11414:	vdiv.f64	d12, d4, d12
   11418:	vldr	s9, [sp, #220]	; 0xdc
   1141c:	vstr	d3, [sp]
   11420:	vcvt.f64.u32	d5, s9
   11424:	vldr	s9, [sp, #224]	; 0xe0
   11428:	vstr	d12, [sp, #24]
   1142c:	vcvt.f64.u32	d6, s15
   11430:	vcvt.f64.u32	d7, s9
   11434:	vmul.f64	d5, d5, d8
   11438:	vmul.f64	d6, d6, d8
   1143c:	vstr	d5, [sp, #96]	; 0x60
   11440:	vmul.f64	d7, d7, d8
   11444:	vstr	d6, [sp, #104]	; 0x68
   11448:	vmul.f64	d11, d11, d8
   1144c:	vstr	d7, [sp, #112]	; 0x70
   11450:	vmul.f64	d10, d10, d8
   11454:	vstr	d11, [sp, #64]	; 0x40
   11458:	vstr	d10, [sp, #72]	; 0x48
   1145c:	bl	10e54 <printw@plt>
   11460:	ldr	r0, [sp, #168]	; 0xa8
   11464:	bl	11b14 <fputs@plt+0xb70>
   11468:	mov	r1, #262144	; 0x40000
   1146c:	mov	r2, #0
   11470:	str	r0, [sp, #168]	; 0xa8
   11474:	ldr	r0, [r9]
   11478:	bl	10f98 <wattr_on@plt>
   1147c:	movw	r1, #10424	; 0x28b8
   11480:	mov	r0, #0
   11484:	movt	r1, #1
   11488:	mov	r2, #5
   1148c:	bl	10ecc <dcgettext@plt>
   11490:	mov	r1, r0
   11494:	movw	r0, #10484	; 0x28f4
   11498:	movt	r0, #1
   1149c:	bl	10e54 <printw@plt>
   114a0:	ldr	r0, [r7]
   114a4:	mov	r1, #262144	; 0x40000
   114a8:	mov	r2, #0
   114ac:	bl	10f5c <wattr_off@plt>
   114b0:	ldrh	r3, [r4, #6]
   114b4:	ldr	r6, [sp, #168]	; 0xa8
   114b8:	cmp	r3, #8
   114bc:	ble	1159c <fputs@plt+0x5f8>
   114c0:	ldr	r3, [r6, #128]	; 0x80
   114c4:	cmp	r3, #0
   114c8:	beq	1159c <fputs@plt+0x5f8>
   114cc:	mov	r8, #0
   114d0:	b	11548 <fputs@plt+0x5a4>
   114d4:	ldr	ip, [r6, #164]	; 0xa4
   114d8:	movw	r1, #10076	; 0x275c
   114dc:	ldr	r2, [r6, #136]	; 0x88
   114e0:	movt	r1, #1
   114e4:	ldr	r3, [r6, #140]	; 0x8c
   114e8:	mov	r0, #1
   114ec:	str	ip, [sp]
   114f0:	vldr	s9, [r6, #144]	; 0x90
   114f4:	vcvt.f64.u32	d7, s9
   114f8:	vmul.f64	d7, d7, d8
   114fc:	vstr	d7, [sp, #8]
   11500:	ldr	ip, [r6, #156]	; 0x9c
   11504:	str	ip, [sp, #16]
   11508:	ldr	ip, [r6, #148]	; 0x94
   1150c:	str	ip, [sp, #20]
   11510:	ldr	ip, [r6, #132]	; 0x84
   11514:	str	r6, [sp, #28]
   11518:	lsr	ip, ip, #10
   1151c:	str	ip, [sp, #24]
   11520:	bl	10e30 <__printf_chk@plt>
   11524:	ldrh	r3, [r4, #6]
   11528:	add	r8, r8, #1
   1152c:	ldr	r6, [r6, #128]	; 0x80
   11530:	sub	r3, r3, #8
   11534:	cmp	r3, r8
   11538:	ble	1159c <fputs@plt+0x5f8>
   1153c:	ldr	r3, [r6, #128]	; 0x80
   11540:	cmp	r3, #0
   11544:	beq	1159c <fputs@plt+0x5f8>
   11548:	cmp	sl, #0
   1154c:	bne	114d4 <fputs@plt+0x530>
   11550:	vldr	s13, [r6, #144]	; 0x90
   11554:	vcvt.f64.u32	d7, s13
   11558:	ldr	r1, [r6, #136]	; 0x88
   1155c:	movw	r0, #10076	; 0x275c
   11560:	ldr	r2, [r6, #140]	; 0x8c
   11564:	movt	r0, #1
   11568:	ldr	r3, [r6, #164]	; 0xa4
   1156c:	vmul.f64	d7, d7, d8
   11570:	vstr	d7, [sp]
   11574:	ldr	ip, [r6, #156]	; 0x9c
   11578:	str	ip, [sp, #8]
   1157c:	ldr	ip, [r6, #148]	; 0x94
   11580:	str	ip, [sp, #12]
   11584:	ldr	ip, [r6, #132]	; 0x84
   11588:	str	r6, [sp, #20]
   1158c:	lsr	ip, ip, #10
   11590:	str	ip, [sp, #16]
   11594:	bl	10e54 <printw@plt>
   11598:	b	11524 <fputs@plt+0x580>
   1159c:	ldr	r0, [sp, #168]	; 0xa8
   115a0:	bl	10e90 <put_slabinfo@plt>
   115a4:	cmp	sl, #0
   115a8:	beq	117e0 <fputs@plt+0x83c>
   115ac:	movw	r7, #12480	; 0x30c0
   115b0:	movt	r7, #2
   115b4:	ldr	r6, [r7]
   115b8:	cmp	r6, #0
   115bc:	bne	11290 <fputs@plt+0x2ec>
   115c0:	ldr	fp, [sp, #156]	; 0x9c
   115c4:	mov	r1, #2
   115c8:	ldr	r2, [pc, #60]	; 1160c <fputs@plt+0x668>
   115cc:	mov	r0, #0
   115d0:	bl	10f44 <tcsetattr@plt>
   115d4:	ldr	r0, [sp, #168]	; 0xa8
   115d8:	bl	10ddc <free_slabinfo@plt>
   115dc:	cmp	sl, #0
   115e0:	movne	r0, r6
   115e4:	bne	111fc <fputs@plt+0x258>
   115e8:	bl	10e18 <endwin@plt>
   115ec:	mov	r0, r6
   115f0:	b	111fc <fputs@plt+0x258>
   115f4:	nop	{0}
   115f8:	andeq	r0, r0, r0
   115fc:	subsmi	r0, r9, r0
   11600:	andeq	r0, r0, r0
   11604:	svccc	0x00500000
   11608:	andeq	r2, r1, r8, lsr #7
   1160c:	strdeq	r3, [r2], -r8
   11610:	mov	r1, r6
   11614:	mov	r2, r6
   11618:	ldr	r0, [r9]
   1161c:	movw	r7, #12488	; 0x30c8
   11620:	bl	10df4 <wmove@plt>
   11624:	mov	r0, r6
   11628:	mov	r2, #5
   1162c:	movw	r1, #10120	; 0x2788
   11630:	movt	r1, #1
   11634:	movt	r7, #2
   11638:	bl	10ecc <dcgettext@plt>
   1163c:	mov	r2, #5
   11640:	movw	r1, #10152	; 0x27a8
   11644:	movt	r1, #1
   11648:	vldr	s29, [sp, #192]	; 0xc0
   1164c:	vldr	s26, [sp, #188]	; 0xbc
   11650:	mov	r3, r0
   11654:	mov	r0, r6
   11658:	str	r3, [sp, #132]	; 0x84
   1165c:	bl	10ecc <dcgettext@plt>
   11660:	mov	r2, #5
   11664:	movw	r1, #10184	; 0x27c8
   11668:	movt	r1, #1
   1166c:	vldr	s28, [sp, #204]	; 0xcc
   11670:	vldr	s25, [sp, #200]	; 0xc8
   11674:	mov	ip, r0
   11678:	mov	r0, r6
   1167c:	str	ip, [sp, #128]	; 0x80
   11680:	bl	10ecc <dcgettext@plt>
   11684:	mov	r2, #5
   11688:	movw	r1, #10216	; 0x27e8
   1168c:	movt	r1, #1
   11690:	vldr	s27, [sp, #212]	; 0xd4
   11694:	vldr	s24, [sp, #208]	; 0xd0
   11698:	mov	fp, r0
   1169c:	mov	r0, r6
   116a0:	bl	10ecc <dcgettext@plt>
   116a4:	mov	r2, #5
   116a8:	movw	r1, #10248	; 0x2808
   116ac:	movt	r1, #1
   116b0:	vldr	s9, [sp, #184]	; 0xb8
   116b4:	vldr	s13, [sp, #180]	; 0xb4
   116b8:	vcvt.f64.u32	d11, s9
   116bc:	vcvt.f64.u32	d10, s13
   116c0:	mov	r8, r0
   116c4:	mov	r0, r6
   116c8:	bl	10ecc <dcgettext@plt>
   116cc:	vcvt.f64.u32	d4, s28
   116d0:	vstr	s26, [sp]
   116d4:	vstr	s27, [sp, #44]	; 0x2c
   116d8:	ldr	ip, [sp, #128]	; 0x80
   116dc:	vstr	s28, [sp, #20]
   116e0:	ldr	r3, [sp, #132]	; 0x84
   116e4:	vstr	s25, [sp, #24]
   116e8:	str	fp, [sp, #40]	; 0x28
   116ec:	vstr	s24, [sp, #48]	; 0x30
   116f0:	str	ip, [sp, #16]
   116f4:	movw	r1, #10284	; 0x282c
   116f8:	mov	r2, r3
   116fc:	movt	r1, #1
   11700:	vcvt.f64.u32	d5, s27
   11704:	str	r8, [sp, #64]	; 0x40
   11708:	vmov	r3, s29
   1170c:	vmul.f64	d5, d5, d9
   11710:	vmul.f64	d7, d11, d9
   11714:	str	r0, [sp, #96]	; 0x60
   11718:	mov	r0, #1
   1171c:	vmul.f64	d4, d4, d9
   11720:	vcvt.f64.u32	d2, s25
   11724:	vcvt.f64.u32	d6, s24
   11728:	vdiv.f64	d4, d4, d2
   1172c:	vdiv.f64	d7, d7, d10
   11730:	vstr	d4, [sp, #32]
   11734:	vldr	s9, [sp, #220]	; 0xdc
   11738:	vdiv.f64	d6, d5, d6
   1173c:	vstr	d7, [sp, #88]	; 0x58
   11740:	vldr	s15, [sp, #216]	; 0xd8
   11744:	vcvt.f64.u32	d3, s29
   11748:	vstr	d6, [sp, #56]	; 0x38
   1174c:	vmul.f64	d3, d3, d9
   11750:	vcvt.f64.u32	d13, s26
   11754:	vdiv.f64	d13, d3, d13
   11758:	vcvt.f64.u32	d5, s9
   1175c:	vldr	s9, [sp, #224]	; 0xe0
   11760:	vstr	d13, [sp, #8]
   11764:	vcvt.f64.u32	d6, s15
   11768:	vcvt.f64.u32	d7, s9
   1176c:	vmul.f64	d5, d5, d8
   11770:	vmul.f64	d6, d6, d8
   11774:	vstr	d5, [sp, #104]	; 0x68
   11778:	vmul.f64	d7, d7, d8
   1177c:	vstr	d6, [sp, #112]	; 0x70
   11780:	vmul.f64	d11, d11, d8
   11784:	vstr	d7, [sp, #120]	; 0x78
   11788:	vmul.f64	d10, d10, d8
   1178c:	vstr	d11, [sp, #72]	; 0x48
   11790:	vstr	d10, [sp, #80]	; 0x50
   11794:	bl	10e30 <__printf_chk@plt>
   11798:	ldr	r0, [sp, #168]	; 0xa8
   1179c:	bl	11b14 <fputs@plt+0xb70>
   117a0:	mov	r2, r6
   117a4:	mov	r1, #262144	; 0x40000
   117a8:	str	r0, [sp, #168]	; 0xa8
   117ac:	ldr	r0, [r9]
   117b0:	bl	10f98 <wattr_on@plt>
   117b4:	mov	r0, r6
   117b8:	mov	r2, #5
   117bc:	movw	r1, #10424	; 0x28b8
   117c0:	movt	r1, #1
   117c4:	bl	10ecc <dcgettext@plt>
   117c8:	movw	r1, #10484	; 0x28f4
   117cc:	movt	r1, #1
   117d0:	mov	r2, r0
   117d4:	mov	r0, #1
   117d8:	bl	10e30 <__printf_chk@plt>
   117dc:	b	114a0 <fputs@plt+0x4fc>
   117e0:	ldr	r0, [r7]
   117e4:	bl	10ef0 <wrefresh@plt>
   117e8:	add	r3, sp, #224	; 0xe0
   117ec:	mov	r2, sl
   117f0:	str	r2, [r3, #4]!
   117f4:	cmp	r3, r5
   117f8:	mov	r6, #0
   117fc:	bne	117f0 <fputs@plt+0x84c>
   11800:	movw	r7, #12480	; 0x30c0
   11804:	movt	r7, #2
   11808:	ldr	ip, [sp, #228]	; 0xe4
   1180c:	add	r2, sp, #172	; 0xac
   11810:	ldr	r3, [r7]
   11814:	mov	r0, #1
   11818:	str	r2, [sp]
   1181c:	add	r1, sp, #228	; 0xe4
   11820:	mov	r2, r6
   11824:	orr	ip, ip, r0
   11828:	str	r3, [sp, #172]	; 0xac
   1182c:	mov	r3, r6
   11830:	str	r6, [sp, #176]	; 0xb0
   11834:	str	ip, [sp, #228]	; 0xe4
   11838:	bl	10f14 <select@plt>
   1183c:	cmp	r0, r6
   11840:	ble	115b4 <fputs@plt+0x610>
   11844:	mov	r0, r6
   11848:	add	r1, sp, #167	; 0xa7
   1184c:	mov	r2, #1
   11850:	bl	10eb4 <read@plt>
   11854:	cmp	r0, #1
   11858:	bne	115c0 <fputs@plt+0x61c>
   1185c:	bl	10db8 <__ctype_toupper_loc@plt>
   11860:	ldrb	r3, [sp, #167]	; 0xa7
   11864:	ldr	r2, [r0]
   11868:	ldrb	r3, [r2, r3, lsl #2]
   1186c:	sub	r3, r3, #65	; 0x41
   11870:	cmp	r3, #21
   11874:	ldrls	pc, [pc, r3, lsl #2]
   11878:	b	115b4 <fputs@plt+0x610>
   1187c:	andeq	r1, r1, ip, ror #18
   11880:	andeq	r1, r1, ip, asr r9
   11884:	andeq	r1, r1, ip, asr #18
   11888:			; <UNDEFINED> instruction: 0x000115b4
   1188c:			; <UNDEFINED> instruction: 0x000115b4
   11890:			; <UNDEFINED> instruction: 0x000115b4
   11894:			; <UNDEFINED> instruction: 0x000115b4
   11898:			; <UNDEFINED> instruction: 0x000115b4
   1189c:			; <UNDEFINED> instruction: 0x000115b4
   118a0:			; <UNDEFINED> instruction: 0x000115b4
   118a4:			; <UNDEFINED> instruction: 0x000115b4
   118a8:	andeq	r1, r1, ip, lsr r9
   118ac:			; <UNDEFINED> instruction: 0x000115b4
   118b0:	andeq	r1, r1, ip, lsr #18
   118b4:	andeq	r1, r1, r0, lsr #18
   118b8:	andeq	r1, r1, r0, lsl r9
   118bc:	andeq	r1, r1, r4, lsl #18
   118c0:			; <UNDEFINED> instruction: 0x000115b4
   118c4:	strdeq	r1, [r1], -r4
   118c8:			; <UNDEFINED> instruction: 0x000115b4
   118cc:	andeq	r1, r1, r4, ror #17
   118d0:	ldrdeq	r1, [r1], -r4
   118d4:	movw	r3, #7324	; 0x1c9c
   118d8:	movt	r3, #1
   118dc:	str	r3, [r4]
   118e0:	b	115b4 <fputs@plt+0x610>
   118e4:	movw	r3, #7348	; 0x1cb4
   118e8:	movt	r3, #1
   118ec:	str	r3, [r4]
   118f0:	b	115b4 <fputs@plt+0x610>
   118f4:	movw	r3, #7228	; 0x1c3c
   118f8:	movt	r3, #1
   118fc:	str	r3, [r4]
   11900:	b	115b4 <fputs@plt+0x610>
   11904:	mov	r3, #0
   11908:	str	r3, [r7]
   1190c:	b	115b4 <fputs@plt+0x610>
   11910:	movw	r3, #7276	; 0x1c6c
   11914:	movt	r3, #1
   11918:	str	r3, [r4]
   1191c:	b	115b4 <fputs@plt+0x610>
   11920:	ldr	ip, [sp, #144]	; 0x90
   11924:	str	ip, [r4]
   11928:	b	115b4 <fputs@plt+0x610>
   1192c:	movw	r3, #7416	; 0x1cf8
   11930:	movt	r3, #1
   11934:	str	r3, [r4]
   11938:	b	115b4 <fputs@plt+0x610>
   1193c:	movw	r3, #7300	; 0x1c84
   11940:	movt	r3, #1
   11944:	str	r3, [r4]
   11948:	b	115b4 <fputs@plt+0x610>
   1194c:	movw	r3, #7372	; 0x1ccc
   11950:	movt	r3, #1
   11954:	str	r3, [r4]
   11958:	b	115b4 <fputs@plt+0x610>
   1195c:	movw	r3, #7252	; 0x1c54
   11960:	movt	r3, #1
   11964:	str	r3, [r4]
   11968:	b	115b4 <fputs@plt+0x610>
   1196c:	movw	r3, #7204	; 0x1c24
   11970:	movt	r3, #1
   11974:	str	r3, [r4]
   11978:	b	115b4 <fputs@plt+0x610>
   1197c:	ldr	fp, [sp, #156]	; 0x9c
   11980:	mov	r6, #1
   11984:	b	115c4 <fputs@plt+0x620>
   11988:	bl	10e9c <initscr@plt>
   1198c:	ldrh	r1, [r5, #4]
   11990:	ldrh	r0, [r5, #6]
   11994:	bl	10e6c <resizeterm@plt>
   11998:	movw	r1, #8092	; 0x1f9c
   1199c:	mov	r0, #28
   119a0:	movt	r1, #1
   119a4:	bl	10e00 <signal@plt>
   119a8:	b	1125c <fputs@plt+0x2b8>
   119ac:	bl	10f8c <__errno_location@plt>
   119b0:	mov	r2, #5
   119b4:	movw	r1, #10048	; 0x2740
   119b8:	movt	r1, #1
   119bc:	ldr	r5, [r0]
   119c0:	mov	r0, r6
   119c4:	bl	10ecc <dcgettext@plt>
   119c8:	mov	r1, r5
   119cc:	mov	r2, r0
   119d0:	mov	r0, r6
   119d4:	bl	10f20 <error@plt>
   119d8:	b	1123c <fputs@plt+0x298>
   119dc:	bl	10f2c <__stack_chk_fail@plt>
   119e0:	mov	fp, #0
   119e4:	mov	lr, #0
   119e8:	pop	{r1}		; (ldr r1, [sp], #4)
   119ec:	mov	r2, sp
   119f0:	push	{r2}		; (str r2, [sp, #-4]!)
   119f4:	push	{r0}		; (str r0, [sp, #-4]!)
   119f8:	ldr	ip, [pc, #16]	; 11a10 <fputs@plt+0xa6c>
   119fc:	push	{ip}		; (str ip, [sp, #-4]!)
   11a00:	ldr	r0, [pc, #12]	; 11a14 <fputs@plt+0xa70>
   11a04:	ldr	r3, [pc, #12]	; 11a18 <fputs@plt+0xa74>
   11a08:	bl	10de8 <__libc_start_main@plt>
   11a0c:	bl	10dc4 <abort@plt>
   11a10:	andeq	r2, r1, r0, lsl r3
   11a14:			; <UNDEFINED> instruction: 0x00010fb0
   11a18:	andeq	r2, r1, ip, lsr #5
   11a1c:	ldr	r3, [pc, #20]	; 11a38 <fputs@plt+0xa94>
   11a20:	ldr	r2, [pc, #20]	; 11a3c <fputs@plt+0xa98>
   11a24:	add	r3, pc, r3
   11a28:	ldr	r2, [r3, r2]
   11a2c:	cmp	r2, #0
   11a30:	bxeq	lr
   11a34:	b	10e0c <__gmon_start__@plt>
   11a38:	ldrdeq	r1, [r1], -r4
   11a3c:	strheq	r0, [r0], -r4
   11a40:	push	{r3, lr}
   11a44:	movw	r0, #12484	; 0x30c4
   11a48:	ldr	r3, [pc, #36]	; 11a74 <fputs@plt+0xad0>
   11a4c:	movt	r0, #2
   11a50:	rsb	r3, r0, r3
   11a54:	cmp	r3, #6
   11a58:	popls	{r3, pc}
   11a5c:	movw	r3, #0
   11a60:	movt	r3, #0
   11a64:	cmp	r3, #0
   11a68:	popeq	{r3, pc}
   11a6c:	blx	r3
   11a70:	pop	{r3, pc}
   11a74:	andeq	r3, r2, r7, asr #1
   11a78:	push	{r3, lr}
   11a7c:	movw	r0, #12484	; 0x30c4
   11a80:	movw	r3, #12484	; 0x30c4
   11a84:	movt	r0, #2
   11a88:	movt	r3, #2
   11a8c:	rsb	r3, r0, r3
   11a90:	asr	r3, r3, #2
   11a94:	add	r3, r3, r3, lsr #31
   11a98:	asrs	r1, r3, #1
   11a9c:	popeq	{r3, pc}
   11aa0:	movw	r2, #0
   11aa4:	movt	r2, #0
   11aa8:	cmp	r2, #0
   11aac:	popeq	{r3, pc}
   11ab0:	blx	r2
   11ab4:	pop	{r3, pc}
   11ab8:	push	{r4, lr}
   11abc:	movw	r4, #12524	; 0x30ec
   11ac0:	movt	r4, #2
   11ac4:	ldrb	r3, [r4]
   11ac8:	cmp	r3, #0
   11acc:	popne	{r4, pc}
   11ad0:	bl	11a40 <fputs@plt+0xa9c>
   11ad4:	mov	r3, #1
   11ad8:	strb	r3, [r4]
   11adc:	pop	{r4, pc}
   11ae0:	movw	r0, #11996	; 0x2edc
   11ae4:	movt	r0, #2
   11ae8:	push	{r3, lr}
   11aec:	ldr	r3, [r0]
   11af0:	cmp	r3, #0
   11af4:	beq	11b0c <fputs@plt+0xb68>
   11af8:	movw	r3, #0
   11afc:	movt	r3, #0
   11b00:	cmp	r3, #0
   11b04:	beq	11b0c <fputs@plt+0xb68>
   11b08:	blx	r3
   11b0c:	pop	{r3, lr}
   11b10:	b	11a78 <fputs@plt+0xad4>
   11b14:	push	{r4, r5, r6, r7, r8, lr}
   11b18:	movw	r7, #12504	; 0x30d8
   11b1c:	movt	r7, #2
   11b20:	sub	sp, sp, #176	; 0xb0
   11b24:	cmp	r0, #0
   11b28:	ldr	r3, [r7]
   11b2c:	str	r3, [sp, #172]	; 0xac
   11b30:	beq	11be8 <fputs@plt+0xc44>
   11b34:	ldr	r3, [r0, #128]	; 0x80
   11b38:	cmp	r3, #0
   11b3c:	beq	11be8 <fputs@plt+0xc44>
   11b40:	mov	r2, r3
   11b44:	mov	r1, r0
   11b48:	b	11b54 <fputs@plt+0xbb0>
   11b4c:	mov	r1, r2
   11b50:	ldr	r2, [r2, #128]	; 0x80
   11b54:	ldr	r3, [r3, #128]	; 0x80
   11b58:	cmp	r3, #0
   11b5c:	beq	11c00 <fputs@plt+0xc5c>
   11b60:	ldr	r3, [r3, #128]	; 0x80
   11b64:	cmp	r3, #0
   11b68:	bne	11b4c <fputs@plt+0xba8>
   11b6c:	ldr	r5, [r2, #128]	; 0x80
   11b70:	mov	r1, r2
   11b74:	mov	r3, #0
   11b78:	str	r3, [r1, #128]	; 0x80
   11b7c:	bl	11b14 <fputs@plt+0xb70>
   11b80:	movw	r8, #12528	; 0x30f0
   11b84:	add	r6, sp, #4
   11b88:	movt	r8, #2
   11b8c:	mov	r4, r0
   11b90:	mov	r0, r5
   11b94:	bl	11b14 <fputs@plt+0xb70>
   11b98:	mov	r5, r0
   11b9c:	b	11bcc <fputs@plt+0xc28>
   11ba0:	mov	r0, r4
   11ba4:	mov	r1, r5
   11ba8:	ldr	r3, [r8]
   11bac:	blx	r3
   11bb0:	cmp	r0, #0
   11bb4:	strne	r4, [r6, #128]	; 0x80
   11bb8:	streq	r5, [r6, #128]	; 0x80
   11bbc:	movne	r6, r4
   11bc0:	moveq	r6, r5
   11bc4:	ldrne	r4, [r4, #128]	; 0x80
   11bc8:	ldreq	r5, [r5, #128]	; 0x80
   11bcc:	cmp	r5, #0
   11bd0:	cmpne	r4, #0
   11bd4:	bne	11ba0 <fputs@plt+0xbfc>
   11bd8:	cmp	r4, #0
   11bdc:	moveq	r4, r5
   11be0:	str	r4, [r6, #128]	; 0x80
   11be4:	ldr	r0, [sp, #132]	; 0x84
   11be8:	ldr	r2, [sp, #172]	; 0xac
   11bec:	ldr	r3, [r7]
   11bf0:	cmp	r2, r3
   11bf4:	bne	11c08 <fputs@plt+0xc64>
   11bf8:	add	sp, sp, #176	; 0xb0
   11bfc:	pop	{r4, r5, r6, r7, r8, pc}
   11c00:	mov	r5, r2
   11c04:	b	11b74 <fputs@plt+0xbd0>
   11c08:	bl	10f2c <__stack_chk_fail@plt>
   11c0c:	ldr	r3, [r0, #136]	; 0x88
   11c10:	ldr	r0, [r1, #136]	; 0x88
   11c14:	cmp	r3, r0
   11c18:	movls	r0, #0
   11c1c:	movhi	r0, #1
   11c20:	bx	lr
   11c24:	ldr	r3, [r0, #140]	; 0x8c
   11c28:	ldr	r0, [r1, #140]	; 0x8c
   11c2c:	cmp	r3, r0
   11c30:	movls	r0, #0
   11c34:	movhi	r0, #1
   11c38:	bx	lr
   11c3c:	ldr	r3, [r0, #144]	; 0x90
   11c40:	ldr	r0, [r1, #144]	; 0x90
   11c44:	cmp	r3, r0
   11c48:	movls	r0, #0
   11c4c:	movhi	r0, #1
   11c50:	bx	lr
   11c54:	ldr	r3, [r0, #148]	; 0x94
   11c58:	ldr	r0, [r1, #148]	; 0x94
   11c5c:	cmp	r3, r0
   11c60:	movls	r0, #0
   11c64:	movhi	r0, #1
   11c68:	bx	lr
   11c6c:	ldr	r3, [r0, #152]	; 0x98
   11c70:	ldr	r0, [r1, #152]	; 0x98
   11c74:	cmp	r3, r0
   11c78:	movls	r0, #0
   11c7c:	movhi	r0, #1
   11c80:	bx	lr
   11c84:	ldr	r3, [r0, #156]	; 0x9c
   11c88:	ldr	r0, [r1, #156]	; 0x9c
   11c8c:	cmp	r3, r0
   11c90:	movls	r0, #0
   11c94:	movhi	r0, #1
   11c98:	bx	lr
   11c9c:	ldr	r3, [r0, #160]	; 0xa0
   11ca0:	ldr	r0, [r1, #160]	; 0xa0
   11ca4:	cmp	r3, r0
   11ca8:	movls	r0, #0
   11cac:	movhi	r0, #1
   11cb0:	bx	lr
   11cb4:	ldr	r3, [r0, #164]	; 0xa4
   11cb8:	ldr	r0, [r1, #164]	; 0xa4
   11cbc:	cmp	r3, r0
   11cc0:	movls	r0, #0
   11cc4:	movhi	r0, #1
   11cc8:	bx	lr
   11ccc:	ldr	r3, [r0, #132]	; 0x84
   11cd0:	ldr	r0, [r1, #132]	; 0x84
   11cd4:	cmp	r3, r0
   11cd8:	movls	r0, #0
   11cdc:	movhi	r0, #1
   11ce0:	bx	lr
   11ce4:	movw	r3, #12480	; 0x30c0
   11ce8:	movt	r3, #2
   11cec:	mov	r2, #0
   11cf0:	str	r2, [r3]
   11cf4:	bx	lr
   11cf8:	push	{r3, lr}
   11cfc:	bl	10f74 <strcmp@plt>
   11d00:	lsr	r0, r0, #31
   11d04:	pop	{r3, pc}
   11d08:	push	{r4, lr}
   11d0c:	mov	r2, #5
   11d10:	mov	r4, r0
   11d14:	movw	r1, #9224	; 0x2408
   11d18:	mov	r0, #0
   11d1c:	movt	r1, #1
   11d20:	bl	10ecc <dcgettext@plt>
   11d24:	mov	r1, r4
   11d28:	bl	10fa4 <fputs@plt>
   11d2c:	mov	r2, #5
   11d30:	movw	r1, #9236	; 0x2414
   11d34:	mov	r0, #0
   11d38:	movt	r1, #1
   11d3c:	bl	10ecc <dcgettext@plt>
   11d40:	movw	r3, #12496	; 0x30d0
   11d44:	movt	r3, #2
   11d48:	mov	r1, #1
   11d4c:	ldr	r3, [r3]
   11d50:	mov	r2, r0
   11d54:	mov	r0, r4
   11d58:	bl	10f38 <__fprintf_chk@plt>
   11d5c:	mov	r2, #5
   11d60:	movw	r1, #9252	; 0x2424
   11d64:	mov	r0, #0
   11d68:	movt	r1, #1
   11d6c:	bl	10ecc <dcgettext@plt>
   11d70:	mov	r1, r4
   11d74:	bl	10fa4 <fputs@plt>
   11d78:	mov	r2, #5
   11d7c:	movw	r1, #9264	; 0x2430
   11d80:	mov	r0, #0
   11d84:	movt	r1, #1
   11d88:	bl	10ecc <dcgettext@plt>
   11d8c:	mov	r1, r4
   11d90:	bl	10fa4 <fputs@plt>
   11d94:	mov	r2, #5
   11d98:	movw	r1, #9300	; 0x2454
   11d9c:	mov	r0, #0
   11da0:	movt	r1, #1
   11da4:	bl	10ecc <dcgettext@plt>
   11da8:	mov	r1, r4
   11dac:	bl	10fa4 <fputs@plt>
   11db0:	mov	r2, #5
   11db4:	movw	r1, #9352	; 0x2488
   11db8:	mov	r0, #0
   11dbc:	movt	r1, #1
   11dc0:	bl	10ecc <dcgettext@plt>
   11dc4:	mov	r1, r4
   11dc8:	bl	10fa4 <fputs@plt>
   11dcc:	mov	r2, #5
   11dd0:	movw	r1, #10420	; 0x28b4
   11dd4:	mov	r0, #0
   11dd8:	movt	r1, #1
   11ddc:	bl	10ecc <dcgettext@plt>
   11de0:	mov	r1, r4
   11de4:	bl	10fa4 <fputs@plt>
   11de8:	mov	r2, #5
   11dec:	movw	r1, #9424	; 0x24d0
   11df0:	mov	r0, #0
   11df4:	movt	r1, #1
   11df8:	bl	10ecc <dcgettext@plt>
   11dfc:	mov	r1, r4
   11e00:	bl	10fa4 <fputs@plt>
   11e04:	mov	r2, #5
   11e08:	movw	r1, #9468	; 0x24fc
   11e0c:	mov	r0, #0
   11e10:	movt	r1, #1
   11e14:	bl	10ecc <dcgettext@plt>
   11e18:	mov	r1, r4
   11e1c:	bl	10fa4 <fputs@plt>
   11e20:	mov	r2, #5
   11e24:	movw	r1, #9524	; 0x2534
   11e28:	mov	r0, #0
   11e2c:	movt	r1, #1
   11e30:	bl	10ecc <dcgettext@plt>
   11e34:	mov	r1, r4
   11e38:	bl	10fa4 <fputs@plt>
   11e3c:	mov	r2, #5
   11e40:	movw	r1, #9568	; 0x2560
   11e44:	mov	r0, #0
   11e48:	movt	r1, #1
   11e4c:	bl	10ecc <dcgettext@plt>
   11e50:	mov	r1, r4
   11e54:	bl	10fa4 <fputs@plt>
   11e58:	mov	r2, #5
   11e5c:	movw	r1, #9608	; 0x2588
   11e60:	mov	r0, #0
   11e64:	movt	r1, #1
   11e68:	bl	10ecc <dcgettext@plt>
   11e6c:	mov	r1, r4
   11e70:	bl	10fa4 <fputs@plt>
   11e74:	mov	r2, #5
   11e78:	movw	r1, #9640	; 0x25a8
   11e7c:	mov	r0, #0
   11e80:	movt	r1, #1
   11e84:	bl	10ecc <dcgettext@plt>
   11e88:	mov	r1, r4
   11e8c:	bl	10fa4 <fputs@plt>
   11e90:	mov	r2, #5
   11e94:	movw	r1, #9664	; 0x25c0
   11e98:	mov	r0, #0
   11e9c:	movt	r1, #1
   11ea0:	bl	10ecc <dcgettext@plt>
   11ea4:	mov	r1, r4
   11ea8:	bl	10fa4 <fputs@plt>
   11eac:	mov	r2, #5
   11eb0:	movw	r1, #9696	; 0x25e0
   11eb4:	mov	r0, #0
   11eb8:	movt	r1, #1
   11ebc:	bl	10ecc <dcgettext@plt>
   11ec0:	mov	r1, r4
   11ec4:	bl	10fa4 <fputs@plt>
   11ec8:	mov	r2, #5
   11ecc:	movw	r1, #9732	; 0x2604
   11ed0:	mov	r0, #0
   11ed4:	movt	r1, #1
   11ed8:	bl	10ecc <dcgettext@plt>
   11edc:	mov	r1, r4
   11ee0:	bl	10fa4 <fputs@plt>
   11ee4:	mov	r2, #5
   11ee8:	movw	r1, #9752	; 0x2618
   11eec:	mov	r0, #0
   11ef0:	movt	r1, #1
   11ef4:	bl	10ecc <dcgettext@plt>
   11ef8:	mov	r1, r4
   11efc:	bl	10fa4 <fputs@plt>
   11f00:	mov	r2, #5
   11f04:	movw	r1, #9800	; 0x2648
   11f08:	mov	r0, #0
   11f0c:	movt	r1, #1
   11f10:	bl	10ecc <dcgettext@plt>
   11f14:	mov	r1, r4
   11f18:	bl	10fa4 <fputs@plt>
   11f1c:	mov	r2, #5
   11f20:	movw	r1, #9828	; 0x2664
   11f24:	mov	r0, #0
   11f28:	movt	r1, #1
   11f2c:	bl	10ecc <dcgettext@plt>
   11f30:	mov	r1, r4
   11f34:	bl	10fa4 <fputs@plt>
   11f38:	mov	r2, #5
   11f3c:	movw	r1, #9856	; 0x2680
   11f40:	mov	r0, #0
   11f44:	movt	r1, #1
   11f48:	bl	10ecc <dcgettext@plt>
   11f4c:	mov	r1, r4
   11f50:	bl	10fa4 <fputs@plt>
   11f54:	mov	r2, #5
   11f58:	movw	r1, #9888	; 0x26a0
   11f5c:	mov	r0, #0
   11f60:	movt	r1, #1
   11f64:	bl	10ecc <dcgettext@plt>
   11f68:	movw	r3, #9916	; 0x26bc
   11f6c:	mov	r1, #1
   11f70:	movt	r3, #1
   11f74:	mov	r2, r0
   11f78:	mov	r0, r4
   11f7c:	bl	10f38 <__fprintf_chk@plt>
   11f80:	movw	r3, #12516	; 0x30e4
   11f84:	movt	r3, #2
   11f88:	ldr	r0, [r3]
   11f8c:	subs	r3, r4, r0
   11f90:	rsbs	r0, r3, #0
   11f94:	adcs	r0, r0, r3
   11f98:	bl	10f80 <exit@plt>
   11f9c:	push	{r4, lr}
   11fa0:	movw	r4, #12504	; 0x30d8
   11fa4:	movt	r4, #2
   11fa8:	sub	sp, sp, #16
   11fac:	mov	r0, #1
   11fb0:	movw	r1, #21523	; 0x5413
   11fb4:	ldr	r3, [r4]
   11fb8:	add	r2, sp, #4
   11fbc:	str	r3, [sp, #12]
   11fc0:	bl	10ee4 <ioctl@plt>
   11fc4:	cmn	r0, #1
   11fc8:	beq	11fd8 <fputs@plt+0x1034>
   11fcc:	ldrh	r3, [sp, #4]
   11fd0:	cmp	r3, #10
   11fd4:	bhi	12008 <fputs@plt+0x1064>
   11fd8:	movw	r3, #12528	; 0x30f0
   11fdc:	movt	r3, #2
   11fe0:	mov	r1, #80	; 0x50
   11fe4:	mov	r2, #24
   11fe8:	strh	r1, [r3, #4]
   11fec:	strh	r2, [r3, #6]
   11ff0:	ldr	r2, [sp, #12]
   11ff4:	ldr	r3, [r4]
   11ff8:	cmp	r2, r3
   11ffc:	bne	12020 <fputs@plt+0x107c>
   12000:	add	sp, sp, #16
   12004:	pop	{r4, pc}
   12008:	ldrh	r1, [sp, #6]
   1200c:	movw	r2, #12528	; 0x30f0
   12010:	movt	r2, #2
   12014:	strh	r3, [r2, #6]
   12018:	strh	r1, [r2, #4]
   1201c:	b	11ff0 <fputs@plt+0x104c>
   12020:	bl	10f2c <__stack_chk_fail@plt>
   12024:	push	{r4, r5, r6, r7, r8, lr}
   12028:	movw	r4, #12504	; 0x30d8
   1202c:	movt	r4, #2
   12030:	sub	sp, sp, #16
   12034:	subs	r5, r0, #0
   12038:	mov	r6, #0
   1203c:	ldr	r2, [r4]
   12040:	mov	r8, r1
   12044:	str	r6, [sp, #8]
   12048:	str	r2, [sp, #12]
   1204c:	beq	120bc <fputs@plt+0x1118>
   12050:	ldrb	r3, [r5]
   12054:	cmp	r3, #0
   12058:	beq	120bc <fputs@plt+0x1118>
   1205c:	bl	10f8c <__errno_location@plt>
   12060:	mov	r2, #10
   12064:	add	r1, sp, #8
   12068:	mov	r7, r0
   1206c:	str	r6, [r0]
   12070:	mov	r0, r5
   12074:	bl	10f08 <strtol@plt>
   12078:	ldr	r2, [r7]
   1207c:	cmp	r2, #0
   12080:	bne	120bc <fputs@plt+0x1118>
   12084:	ldr	r2, [sp, #8]
   12088:	cmp	r5, r2
   1208c:	beq	120bc <fputs@plt+0x1118>
   12090:	cmp	r2, #0
   12094:	beq	120bc <fputs@plt+0x1118>
   12098:	ldrb	r3, [r2]
   1209c:	cmp	r3, #0
   120a0:	bne	120bc <fputs@plt+0x1118>
   120a4:	ldr	r2, [sp, #12]
   120a8:	ldr	r3, [r4]
   120ac:	cmp	r2, r3
   120b0:	bne	120dc <fputs@plt+0x1138>
   120b4:	add	sp, sp, #16
   120b8:	pop	{r4, r5, r6, r7, r8, pc}
   120bc:	bl	10f8c <__errno_location@plt>
   120c0:	movw	r2, #10524	; 0x291c
   120c4:	mov	r3, r8
   120c8:	movt	r2, #1
   120cc:	ldr	r1, [r0]
   120d0:	mov	r0, #1
   120d4:	str	r5, [sp]
   120d8:	bl	10f20 <error@plt>
   120dc:	bl	10f2c <__stack_chk_fail@plt>
   120e0:	push	{r4, r5, r6, r7, r8, lr}
   120e4:	movw	r4, #12504	; 0x30d8
   120e8:	movt	r4, #2
   120ec:	sub	sp, sp, #16
   120f0:	subs	r5, r0, #0
   120f4:	mov	r6, #0
   120f8:	ldr	r2, [r4]
   120fc:	mov	r8, r1
   12100:	str	r6, [sp, #8]
   12104:	str	r2, [sp, #12]
   12108:	beq	12174 <fputs@plt+0x11d0>
   1210c:	ldrb	r3, [r5]
   12110:	cmp	r3, #0
   12114:	beq	12174 <fputs@plt+0x11d0>
   12118:	bl	10f8c <__errno_location@plt>
   1211c:	add	r1, sp, #8
   12120:	mov	r7, r0
   12124:	str	r6, [r0]
   12128:	mov	r0, r5
   1212c:	bl	10e3c <strtod@plt>
   12130:	ldr	r2, [r7]
   12134:	cmp	r2, #0
   12138:	bne	12174 <fputs@plt+0x11d0>
   1213c:	ldr	r2, [sp, #8]
   12140:	cmp	r5, r2
   12144:	beq	12174 <fputs@plt+0x11d0>
   12148:	cmp	r2, #0
   1214c:	beq	12174 <fputs@plt+0x11d0>
   12150:	ldrb	r3, [r2]
   12154:	cmp	r3, #0
   12158:	bne	12174 <fputs@plt+0x11d0>
   1215c:	ldr	r2, [sp, #12]
   12160:	ldr	r3, [r4]
   12164:	cmp	r2, r3
   12168:	bne	12194 <fputs@plt+0x11f0>
   1216c:	add	sp, sp, #16
   12170:	pop	{r4, r5, r6, r7, r8, pc}
   12174:	bl	10f8c <__errno_location@plt>
   12178:	movw	r2, #10524	; 0x291c
   1217c:	mov	r3, r8
   12180:	movt	r2, #1
   12184:	ldr	r1, [r0]
   12188:	mov	r0, #1
   1218c:	str	r5, [sp]
   12190:	bl	10f20 <error@plt>
   12194:	bl	10f2c <__stack_chk_fail@plt>
   12198:	push	{r4, r5, r6, lr}
   1219c:	mov	r5, r0
   121a0:	bl	10e60 <__fpending@plt>
   121a4:	mov	r6, r0
   121a8:	mov	r0, r5
   121ac:	bl	10f68 <ferror@plt>
   121b0:	mov	r4, r0
   121b4:	mov	r0, r5
   121b8:	bl	10e24 <fclose@plt>
   121bc:	adds	r5, r0, #0
   121c0:	movne	r5, #1
   121c4:	cmp	r4, #0
   121c8:	bne	121e8 <fputs@plt+0x1244>
   121cc:	cmp	r5, #0
   121d0:	beq	121e0 <fputs@plt+0x123c>
   121d4:	cmp	r6, #0
   121d8:	beq	12210 <fputs@plt+0x126c>
   121dc:	mvn	r4, #0
   121e0:	mov	r0, r4
   121e4:	pop	{r4, r5, r6, pc}
   121e8:	cmp	r5, #0
   121ec:	bne	121dc <fputs@plt+0x1238>
   121f0:	bl	10f8c <__errno_location@plt>
   121f4:	ldr	r3, [r0]
   121f8:	cmp	r3, #32
   121fc:	beq	121dc <fputs@plt+0x1238>
   12200:	mvn	r4, #0
   12204:	str	r5, [r0]
   12208:	mov	r0, r4
   1220c:	pop	{r4, r5, r6, pc}
   12210:	bl	10f8c <__errno_location@plt>
   12214:	ldr	r4, [r0]
   12218:	subs	r4, r4, #9
   1221c:	mvnne	r4, #0
   12220:	mov	r0, r4
   12224:	pop	{r4, r5, r6, pc}
   12228:	movw	r3, #12512	; 0x30e0
   1222c:	movt	r3, #2
   12230:	push	{r4, lr}
   12234:	ldr	r0, [r3]
   12238:	bl	12198 <fputs@plt+0x11f4>
   1223c:	cmp	r0, #0
   12240:	beq	12258 <fputs@plt+0x12b4>
   12244:	bl	10f8c <__errno_location@plt>
   12248:	ldr	r3, [r0]
   1224c:	mov	r4, r0
   12250:	cmp	r3, #32
   12254:	bne	12278 <fputs@plt+0x12d4>
   12258:	movw	r3, #12516	; 0x30e4
   1225c:	movt	r3, #2
   12260:	ldr	r0, [r3]
   12264:	bl	12198 <fputs@plt+0x11f4>
   12268:	cmp	r0, #0
   1226c:	popeq	{r4, pc}
   12270:	mov	r0, #1
   12274:	bl	10ea8 <_exit@plt>
   12278:	mov	r2, #5
   1227c:	movw	r1, #10536	; 0x2928
   12280:	mov	r0, #0
   12284:	movt	r1, #1
   12288:	bl	10ecc <dcgettext@plt>
   1228c:	ldr	r1, [r4]
   12290:	movw	r2, #10548	; 0x2934
   12294:	movt	r2, #1
   12298:	mov	r3, r0
   1229c:	mov	r0, #0
   122a0:	bl	10f20 <error@plt>
   122a4:	mov	r0, #1
   122a8:	bl	10ea8 <_exit@plt>
   122ac:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   122b0:	mov	r7, r0
   122b4:	ldr	r6, [pc, #76]	; 12308 <fputs@plt+0x1364>
   122b8:	mov	r8, r1
   122bc:	ldr	r5, [pc, #72]	; 1230c <fputs@plt+0x1368>
   122c0:	mov	r9, r2
   122c4:	add	r6, pc, r6
   122c8:	bl	10d98 <_init@@Base>
   122cc:	add	r5, pc, r5
   122d0:	rsb	r6, r5, r6
   122d4:	asrs	r6, r6, #2
   122d8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   122dc:	sub	r5, r5, #4
   122e0:	mov	r4, #0
   122e4:	add	r4, r4, #1
   122e8:	ldr	r3, [r5, #4]!
   122ec:	mov	r0, r7
   122f0:	mov	r1, r8
   122f4:	mov	r2, r9
   122f8:	blx	r3
   122fc:	cmp	r4, r6
   12300:	bne	122e4 <fputs@plt+0x1340>
   12304:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12308:	andeq	r0, r1, ip, lsl #24
   1230c:	andeq	r0, r1, r0, lsl #24
   12310:	bx	lr
   12314:	ldr	r3, [pc, #28]	; 12338 <fputs@plt+0x1394>
   12318:	mov	r1, #0
   1231c:	ldr	r2, [pc, #24]	; 1233c <fputs@plt+0x1398>
   12320:	add	r3, pc, r3
   12324:	ldr	r3, [r3, r2]
   12328:	cmp	r3, #0
   1232c:	ldrne	r2, [r3]
   12330:	moveq	r2, r3
   12334:	b	10e48 <__cxa_atexit@plt>
   12338:	ldrdeq	r0, [r1], -r8
   1233c:	strheq	r0, [r0], -r8

Disassembly of section .fini:

00012340 <_fini@@Base>:
   12340:	push	{r3, lr}
   12344:	pop	{r3, pc}
