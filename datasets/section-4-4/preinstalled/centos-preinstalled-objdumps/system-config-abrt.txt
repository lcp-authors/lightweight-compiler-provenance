
centos-preinstalled/system-config-abrt:     file format elf32-littlearm


Disassembly of section .init:

00000dd0 <_init@@Base>:
 dd0:	push	{r3, lr}
 dd4:	bl	1070 <main@@Base+0xa0>
 dd8:	pop	{r3, pc}

Disassembly of section .plt:

00000ddc <libreport_glib_init@plt-0x14>:
 ddc:	push	{lr}		; (str lr, [sp, #-4]!)
 de0:	ldr	lr, [pc, #4]	; dec <_init@@Base+0x1c>
 de4:	add	lr, pc, lr
 de8:	ldr	pc, [lr, #8]!
 dec:	andeq	r1, r1, r4, asr #2

00000df0 <libreport_glib_init@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #69632	; 0x11000
 df8:	ldr	pc, [ip, #324]!	; 0x144

00000dfc <g_application_run@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #69632	; 0x11000
 e04:	ldr	pc, [ip, #316]!	; 0x13c

00000e08 <g_type_check_instance_cast@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #69632	; 0x11000
 e10:	ldr	pc, [ip, #308]!	; 0x134

00000e14 <gtk_widget_destroy@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #69632	; 0x11000
 e1c:	ldr	pc, [ip, #300]!	; 0x12c

00000e20 <system_config_abrt_widget_new_with_close_button@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #69632	; 0x11000
 e28:	ldr	pc, [ip, #292]!	; 0x124

00000e2c <g_intern_static_string@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #69632	; 0x11000
 e34:	ldr	pc, [ip, #284]!	; 0x11c

00000e38 <dcgettext@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #69632	; 0x11000
 e40:	ldr	pc, [ip, #276]!	; 0x114

00000e44 <g_set_application_name@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #69632	; 0x11000
 e4c:	ldr	pc, [ip, #268]!	; 0x10c

00000e50 <gtk_window_set_title@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #69632	; 0x11000
 e58:	ldr	pc, [ip, #260]!	; 0x104

00000e5c <gtk_application_add_window@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #69632	; 0x11000
 e64:	ldr	pc, [ip, #252]!	; 0xfc

00000e68 <__stack_chk_fail@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #69632	; 0x11000
 e70:	ldr	pc, [ip, #244]!	; 0xf4

00000e74 <g_action_map_add_action_entries@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #69632	; 0x11000
 e7c:	ldr	pc, [ip, #236]!	; 0xec

00000e80 <g_menu_append@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #69632	; 0x11000
 e88:	ldr	pc, [ip, #228]!	; 0xe4

00000e8c <g_once_init_enter@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #69632	; 0x11000
 e94:	ldr	pc, [ip, #220]!	; 0xdc

00000e98 <__libc_start_main@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #69632	; 0x11000
 ea0:	ldr	pc, [ip, #212]!	; 0xd4

00000ea4 <__gmon_start__@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #69632	; 0x11000
 eac:	ldr	pc, [ip, #204]!	; 0xcc

00000eb0 <g_application_get_type@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #69632	; 0x11000
 eb8:	ldr	pc, [ip, #196]!	; 0xc4

00000ebc <g_menu_model_get_type@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #69632	; 0x11000
 ec4:	ldr	pc, [ip, #188]!	; 0xbc

00000ec8 <g_application_quit@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #69632	; 0x11000
 ed0:	ldr	pc, [ip, #180]!	; 0xb4

00000ed4 <gtk_application_window_new@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #69632	; 0x11000
 edc:	ldr	pc, [ip, #172]!	; 0xac

00000ee0 <__cxa_finalize@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #69632	; 0x11000
 ee8:	ldr	pc, [ip, #164]!	; 0xa4

00000eec <gtk_application_set_app_menu@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #69632	; 0x11000
 ef4:	ldr	pc, [ip, #156]!	; 0x9c

00000ef8 <gtk_show_about_dialog@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #69632	; 0x11000
 f00:	ldr	pc, [ip, #148]!	; 0x94

00000f04 <gtk_container_get_type@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #69632	; 0x11000
 f0c:	ldr	pc, [ip, #140]!	; 0x8c

00000f10 <g_action_map_get_type@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #69632	; 0x11000
 f18:	ldr	pc, [ip, #132]!	; 0x84

00000f1c <g_menu_new@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #69632	; 0x11000
 f24:	ldr	pc, [ip, #124]!	; 0x7c

00000f28 <g_type_register_static_simple@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #69632	; 0x11000
 f30:	ldr	pc, [ip, #116]!	; 0x74

00000f34 <g_object_new@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #69632	; 0x11000
 f3c:	ldr	pc, [ip, #108]!	; 0x6c

00000f40 <gtk_widget_show_all@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #69632	; 0x11000
 f48:	ldr	pc, [ip, #100]!	; 0x64

00000f4c <g_type_check_class_cast@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #69632	; 0x11000
 f54:	ldr	pc, [ip, #92]!	; 0x5c

00000f58 <gtk_application_get_type@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #69632	; 0x11000
 f60:	ldr	pc, [ip, #84]!	; 0x54

00000f64 <g_object_unref@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #69632	; 0x11000
 f6c:	ldr	pc, [ip, #76]!	; 0x4c

00000f70 <g_type_class_adjust_private_offset@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #69632	; 0x11000
 f78:	ldr	pc, [ip, #68]!	; 0x44

00000f7c <abort@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #69632	; 0x11000
 f84:	ldr	pc, [ip, #60]!	; 0x3c

00000f88 <gtk_window_set_default_size@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #69632	; 0x11000
 f90:	ldr	pc, [ip, #52]!	; 0x34

00000f94 <g_once_init_leave@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #69632	; 0x11000
 f9c:	ldr	pc, [ip, #44]!	; 0x2c

00000fa0 <g_type_class_peek_parent@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #69632	; 0x11000
 fa8:	ldr	pc, [ip, #36]!	; 0x24

00000fac <gtk_container_add@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #69632	; 0x11000
 fb4:	ldr	pc, [ip, #28]!

00000fb8 <gtk_window_get_type@plt>:
 fb8:	add	ip, pc, #0, 12
 fbc:	add	ip, ip, #69632	; 0x11000
 fc0:	ldr	pc, [ip, #20]!

00000fc4 <gtk_widget_get_type@plt>:
 fc4:	add	ip, pc, #0, 12
 fc8:	add	ip, ip, #69632	; 0x11000
 fcc:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00000fd0 <main@@Base>:
     fd0:	push	{r4, r5, r6, lr}
     fd4:	mov	r5, r1
     fd8:	mov	r6, r0
     fdc:	bl	df0 <libreport_glib_init@plt>
     fe0:	bl	16c0 <main@@Base+0x6f0>
     fe4:	mov	r4, r0
     fe8:	bl	eb0 <g_application_get_type@plt>
     fec:	mov	r1, r0
     ff0:	mov	r0, r4
     ff4:	bl	e08 <g_type_check_instance_cast@plt>
     ff8:	mov	r2, r5
     ffc:	mov	r1, r6
    1000:	bl	dfc <g_application_run@plt>
    1004:	mov	r5, r0
    1008:	mov	r0, r4
    100c:	bl	f64 <g_object_unref@plt>
    1010:	mov	r0, r5
    1014:	pop	{r4, r5, r6, pc}
    1018:	mov	fp, #0
    101c:	mov	lr, #0
    1020:	pop	{r1}		; (ldr r1, [sp], #4)
    1024:	mov	r2, sp
    1028:	push	{r2}		; (str r2, [sp, #-4]!)
    102c:	push	{r0}		; (str r0, [sp, #-4]!)
    1030:	ldr	sl, [pc, #40]	; 1060 <main@@Base+0x90>
    1034:	add	r3, pc, #36	; 0x24
    1038:	add	sl, sl, r3
    103c:	ldr	ip, [pc, #32]	; 1064 <main@@Base+0x94>
    1040:	ldr	ip, [sl, ip]
    1044:	push	{ip}		; (str ip, [sp, #-4]!)
    1048:	ldr	r3, [pc, #24]	; 1068 <main@@Base+0x98>
    104c:	ldr	r3, [sl, r3]
    1050:	ldr	r0, [pc, #20]	; 106c <main@@Base+0x9c>
    1054:	ldr	r0, [sl, r0]
    1058:	bl	e98 <__libc_start_main@plt>
    105c:	bl	f7c <abort@plt>
    1060:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    1064:	strheq	r0, [r0], -r4
    1068:	andeq	r0, r0, r4, asr #1
    106c:	andeq	r0, r0, ip, lsr #1
    1070:	ldr	r3, [pc, #20]	; 108c <main@@Base+0xbc>
    1074:	ldr	r2, [pc, #20]	; 1090 <main@@Base+0xc0>
    1078:	add	r3, pc, r3
    107c:	ldr	r2, [r3, r2]
    1080:	cmp	r2, #0
    1084:	bxeq	lr
    1088:	b	ea4 <__gmon_start__@plt>
    108c:			; <UNDEFINED> instruction: 0x00010eb0
    1090:	strheq	r0, [r0], -r8
    1094:	ldr	r2, [pc, #60]	; 10d8 <main@@Base+0x108>
    1098:	ldr	r0, [pc, #60]	; 10dc <main@@Base+0x10c>
    109c:	add	r2, pc, r2
    10a0:	add	r0, pc, r0
    10a4:	add	r2, r2, #3
    10a8:	rsb	r2, r0, r2
    10ac:	push	{r3, lr}
    10b0:	cmp	r2, #6
    10b4:	ldr	r3, [pc, #36]	; 10e0 <main@@Base+0x110>
    10b8:	add	r3, pc, r3
    10bc:	popls	{r3, pc}
    10c0:	ldr	r2, [pc, #28]	; 10e4 <main@@Base+0x114>
    10c4:	ldr	r3, [r3, r2]
    10c8:	cmp	r3, #0
    10cc:	popeq	{r3, pc}
    10d0:	blx	r3
    10d4:	pop	{r3, pc}
    10d8:	andeq	r0, r1, r0, lsr #31
    10dc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
    10e0:	andeq	r0, r1, r0, ror lr
    10e4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    10e8:	push	{r3, lr}
    10ec:	ldr	r0, [pc, #64]	; 1134 <main@@Base+0x164>
    10f0:	ldr	r3, [pc, #64]	; 1138 <main@@Base+0x168>
    10f4:	add	r0, pc, r0
    10f8:	ldr	r2, [pc, #60]	; 113c <main@@Base+0x16c>
    10fc:	add	r3, pc, r3
    1100:	rsb	r3, r0, r3
    1104:	add	r2, pc, r2
    1108:	asr	r3, r3, #2
    110c:	add	r3, r3, r3, lsr #31
    1110:	asrs	r3, r3, #1
    1114:	popeq	{r3, pc}
    1118:	ldr	r1, [pc, #32]	; 1140 <main@@Base+0x170>
    111c:	ldr	r2, [r2, r1]
    1120:	cmp	r2, #0
    1124:	popeq	{r3, pc}
    1128:	mov	r1, r3
    112c:	blx	r2
    1130:	pop	{r3, pc}
    1134:	andeq	r0, r1, r8, asr #30
    1138:	andeq	r0, r1, r0, asr #30
    113c:	andeq	r0, r1, r4, lsr #28
    1140:	andeq	r0, r0, ip, asr #1
    1144:	ldr	r2, [pc, #76]	; 1198 <main@@Base+0x1c8>
    1148:	push	{r3, lr}
    114c:	add	r2, pc, r2
    1150:	ldr	r3, [pc, #68]	; 119c <main@@Base+0x1cc>
    1154:	ldrb	r2, [r2]
    1158:	add	r3, pc, r3
    115c:	cmp	r2, #0
    1160:	popne	{r3, pc}
    1164:	ldr	r2, [pc, #52]	; 11a0 <main@@Base+0x1d0>
    1168:	ldr	r3, [r3, r2]
    116c:	cmp	r3, #0
    1170:	beq	1180 <main@@Base+0x1b0>
    1174:	ldr	r0, [pc, #40]	; 11a4 <main@@Base+0x1d4>
    1178:	add	r0, pc, r0
    117c:	bl	ee0 <__cxa_finalize@plt>
    1180:	bl	1094 <main@@Base+0xc4>
    1184:	ldr	r3, [pc, #28]	; 11a8 <main@@Base+0x1d8>
    1188:	mov	r2, #1
    118c:	add	r3, pc, r3
    1190:	strb	r2, [r3]
    1194:	pop	{r3, pc}
    1198:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    119c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    11a0:	andeq	r0, r0, r0, asr #1
    11a4:	andeq	r0, r1, ip, lsr #24
    11a8:			; <UNDEFINED> instruction: 0x00010eb0
    11ac:	ldr	r0, [pc, #52]	; 11e8 <main@@Base+0x218>
    11b0:	push	{r3, lr}
    11b4:	add	r0, pc, r0
    11b8:	ldr	r3, [pc, #44]	; 11ec <main@@Base+0x21c>
    11bc:	ldr	r2, [r0]
    11c0:	add	r3, pc, r3
    11c4:	cmp	r2, #0
    11c8:	beq	11e0 <main@@Base+0x210>
    11cc:	ldr	r2, [pc, #28]	; 11f0 <main@@Base+0x220>
    11d0:	ldr	r3, [r3, r2]
    11d4:	cmp	r3, #0
    11d8:	beq	11e0 <main@@Base+0x210>
    11dc:	blx	r3
    11e0:	pop	{r3, lr}
    11e4:	b	10e8 <main@@Base+0x118>
    11e8:	andeq	r0, r1, ip, ror #23
    11ec:	andeq	r0, r1, r8, ror #26
    11f0:	strheq	r0, [r0], -ip
    11f4:	bx	lr
    11f8:	push	{r3, r4, r5, lr}
    11fc:	mov	r5, r0
    1200:	bl	fa0 <g_type_class_peek_parent@plt>
    1204:	ldr	r1, [pc, #112]	; 127c <main@@Base+0x2ac>
    1208:	add	r1, pc, r1
    120c:	ldr	r3, [r1, #4]
    1210:	cmp	r3, #0
    1214:	str	r0, [r1]
    1218:	beq	1228 <main@@Base+0x258>
    121c:	add	r1, r1, #4
    1220:	mov	r0, r5
    1224:	bl	f70 <g_type_class_adjust_private_offset@plt>
    1228:	bl	eb0 <g_application_get_type@plt>
    122c:	mov	r1, r0
    1230:	mov	r0, r5
    1234:	bl	f4c <g_type_check_class_cast@plt>
    1238:	mov	r1, #80	; 0x50
    123c:	mov	r4, r0
    1240:	mov	r0, r5
    1244:	bl	f4c <g_type_check_class_cast@plt>
    1248:	ldr	ip, [pc, #48]	; 1280 <main@@Base+0x2b0>
    124c:	ldr	r1, [pc, #48]	; 1284 <main@@Base+0x2b4>
    1250:	ldr	r2, [pc, #48]	; 1288 <main@@Base+0x2b8>
    1254:	add	ip, pc, ip
    1258:	ldr	r3, [pc, #44]	; 128c <main@@Base+0x2bc>
    125c:	add	r1, pc, r1
    1260:	add	r2, pc, r2
    1264:	str	ip, [r4, #68]	; 0x44
    1268:	add	r3, pc, r3
    126c:	str	r1, [r4, #108]	; 0x6c
    1270:	str	r2, [r4, #72]	; 0x48
    1274:	str	r3, [r0, #24]
    1278:	pop	{r3, r4, r5, pc}
    127c:	andeq	r0, r1, r8, lsr lr
    1280:	andeq	r0, r0, r0, lsr #3
    1284:	andeq	r0, r0, ip, asr r0
    1288:	muleq	r0, r0, r0
    128c:	andeq	r0, r0, r0, lsr #32
    1290:	ldr	r3, [pc, #36]	; 12bc <main@@Base+0x2ec>
    1294:	mov	r1, #80	; 0x50
    1298:	push	{r4, lr}
    129c:	add	r3, pc, r3
    12a0:	mov	r4, r0
    12a4:	ldr	r0, [r3]
    12a8:	bl	f4c <g_type_check_class_cast@plt>
    12ac:	ldr	r3, [r0, #24]
    12b0:	mov	r0, r4
    12b4:	blx	r3
    12b8:	pop	{r4, pc}
    12bc:	andeq	r0, r1, r4, lsr #27
    12c0:	push	{r3, r4, r5, lr}
    12c4:	mov	r4, r0
    12c8:	ldr	r3, [pc, #36]	; 12f4 <main@@Base+0x324>
    12cc:	add	r3, pc, r3
    12d0:	ldr	r5, [r3]
    12d4:	bl	eb0 <g_application_get_type@plt>
    12d8:	mov	r1, r0
    12dc:	mov	r0, r5
    12e0:	bl	f4c <g_type_check_class_cast@plt>
    12e4:	ldr	r3, [r0, #108]	; 0x6c
    12e8:	mov	r0, r4
    12ec:	blx	r3
    12f0:	pop	{r3, r4, r5, pc}
    12f4:	andeq	r0, r1, r4, ror sp
    12f8:	push	{r4, r5, r6, r7, r8, lr}
    12fc:	mov	r6, r0
    1300:	bl	f58 <gtk_application_get_type@plt>
    1304:	mov	r7, r0
    1308:	mov	r0, r6
    130c:	mov	r1, r7
    1310:	bl	e08 <g_type_check_instance_cast@plt>
    1314:	bl	ed4 <gtk_application_window_new@plt>
    1318:	mov	r4, r0
    131c:	bl	fb8 <gtk_window_get_type@plt>
    1320:	mov	r5, r0
    1324:	mov	r0, r4
    1328:	mov	r1, r5
    132c:	bl	e08 <g_type_check_instance_cast@plt>
    1330:	mov	r2, #300	; 0x12c
    1334:	mov	r1, #500	; 0x1f4
    1338:	bl	f88 <gtk_window_set_default_size@plt>
    133c:	mov	r1, r5
    1340:	mov	r0, r4
    1344:	bl	e08 <g_type_check_instance_cast@plt>
    1348:	ldr	r1, [pc, #128]	; 13d0 <main@@Base+0x400>
    134c:	mov	r2, #5
    1350:	add	r1, pc, r1
    1354:	mov	r8, r0
    1358:	ldr	r0, [pc, #116]	; 13d4 <main@@Base+0x404>
    135c:	add	r0, pc, r0
    1360:	bl	e38 <dcgettext@plt>
    1364:	mov	r1, r0
    1368:	mov	r0, r8
    136c:	bl	e50 <gtk_window_set_title@plt>
    1370:	ldr	r0, [pc, #96]	; 13d8 <main@@Base+0x408>
    1374:	mov	r1, r4
    1378:	add	r0, pc, r0
    137c:	bl	e20 <system_config_abrt_widget_new_with_close_button@plt>
    1380:	mov	r8, r0
    1384:	bl	f04 <gtk_container_get_type@plt>
    1388:	mov	r1, r0
    138c:	mov	r0, r4
    1390:	bl	e08 <g_type_check_instance_cast@plt>
    1394:	mov	r1, r8
    1398:	bl	fac <gtk_container_add@plt>
    139c:	mov	r0, r4
    13a0:	bl	f40 <gtk_widget_show_all@plt>
    13a4:	mov	r1, r7
    13a8:	mov	r0, r6
    13ac:	bl	e08 <g_type_check_instance_cast@plt>
    13b0:	mov	r1, r5
    13b4:	mov	r6, r0
    13b8:	mov	r0, r4
    13bc:	bl	e08 <g_type_check_instance_cast@plt>
    13c0:	mov	r1, r0
    13c4:	mov	r0, r6
    13c8:	pop	{r4, r5, r6, r7, r8, lr}
    13cc:	b	e5c <gtk_application_add_window@plt>
    13d0:	andeq	r0, r0, ip, lsr r4
    13d4:	andeq	r0, r0, r8, lsr #8
    13d8:	andeq	r0, r0, ip, asr r0
    13dc:	push	{r4, lr}
    13e0:	mov	r4, r0
    13e4:	bl	fc4 <gtk_widget_get_type@plt>
    13e8:	mov	r1, r0
    13ec:	mov	r0, r4
    13f0:	bl	e08 <g_type_check_instance_cast@plt>
    13f4:	pop	{r4, lr}
    13f8:	b	e14 <gtk_widget_destroy@plt>
    13fc:	ldr	r3, [pc, #224]	; 14e4 <main@@Base+0x514>
    1400:	push	{r4, r5, r6, lr}
    1404:	add	r3, pc, r3
    1408:	mov	r4, r0
    140c:	ldr	r6, [pc, #212]	; 14e8 <main@@Base+0x518>
    1410:	ldr	r5, [r3]
    1414:	bl	eb0 <g_application_get_type@plt>
    1418:	add	r6, pc, r6
    141c:	mov	r1, r0
    1420:	mov	r0, r5
    1424:	bl	f4c <g_type_check_class_cast@plt>
    1428:	ldr	r3, [r0, #68]	; 0x44
    142c:	mov	r0, r4
    1430:	blx	r3
    1434:	bl	f10 <g_action_map_get_type@plt>
    1438:	mov	r1, r0
    143c:	mov	r0, r4
    1440:	bl	e08 <g_type_check_instance_cast@plt>
    1444:	ldr	r1, [pc, #160]	; 14ec <main@@Base+0x51c>
    1448:	mov	r3, r4
    144c:	mov	r2, #2
    1450:	add	r1, pc, r1
    1454:	bl	e74 <g_action_map_add_action_entries@plt>
    1458:	bl	f1c <g_menu_new@plt>
    145c:	ldr	r1, [pc, #140]	; 14f0 <main@@Base+0x520>
    1460:	mov	r2, #5
    1464:	add	r1, pc, r1
    1468:	mov	r5, r0
    146c:	mov	r0, r6
    1470:	bl	e38 <dcgettext@plt>
    1474:	ldr	r2, [pc, #120]	; 14f4 <main@@Base+0x524>
    1478:	add	r2, pc, r2
    147c:	mov	r1, r0
    1480:	mov	r0, r5
    1484:	bl	e80 <g_menu_append@plt>
    1488:	ldr	r1, [pc, #104]	; 14f8 <main@@Base+0x528>
    148c:	mov	r0, r6
    1490:	mov	r2, #5
    1494:	add	r1, pc, r1
    1498:	bl	e38 <dcgettext@plt>
    149c:	ldr	r2, [pc, #88]	; 14fc <main@@Base+0x52c>
    14a0:	add	r2, pc, r2
    14a4:	mov	r1, r0
    14a8:	mov	r0, r5
    14ac:	bl	e80 <g_menu_append@plt>
    14b0:	bl	f58 <gtk_application_get_type@plt>
    14b4:	mov	r1, r0
    14b8:	mov	r0, r4
    14bc:	bl	e08 <g_type_check_instance_cast@plt>
    14c0:	mov	r4, r0
    14c4:	bl	ebc <g_menu_model_get_type@plt>
    14c8:	mov	r1, r0
    14cc:	mov	r0, r5
    14d0:	bl	e08 <g_type_check_instance_cast@plt>
    14d4:	mov	r1, r0
    14d8:	mov	r0, r4
    14dc:	pop	{r4, r5, r6, lr}
    14e0:	b	eec <gtk_application_set_app_menu@plt>
    14e4:	andeq	r0, r1, ip, lsr ip
    14e8:	andeq	r0, r0, ip, ror #6
    14ec:	andeq	r0, r1, ip, lsr #23
    14f0:	andeq	r0, r0, r8, asr #6
    14f4:	andeq	r0, r0, ip, lsr r3
    14f8:	andeq	r0, r0, ip, lsr #6
    14fc:	andeq	r0, r0, r8, lsr #6
    1500:	mov	r0, r2
    1504:	b	ec8 <g_application_quit@plt>
    1508:	ldr	r3, [pc, #204]	; 15dc <main@@Base+0x60c>
    150c:	mov	r2, #5
    1510:	ldr	r1, [pc, #200]	; 15e0 <main@@Base+0x610>
    1514:	add	r3, pc, r3
    1518:	ldr	r0, [pc, #196]	; 15e4 <main@@Base+0x614>
    151c:	push	{r4, r5, lr}
    1520:	sub	sp, sp, #52	; 0x34
    1524:	ldr	r5, [r3, r1]
    1528:	add	r0, pc, r0
    152c:	ldr	r1, [pc, #180]	; 15e8 <main@@Base+0x618>
    1530:	mov	r4, #0
    1534:	ldr	ip, [pc, #176]	; 15ec <main@@Base+0x61c>
    1538:	ldr	r3, [r5]
    153c:	add	r1, pc, r1
    1540:	add	ip, pc, ip
    1544:	str	r4, [sp, #40]	; 0x28
    1548:	str	ip, [sp, #36]	; 0x24
    154c:	str	r3, [sp, #44]	; 0x2c
    1550:	bl	e38 <dcgettext@plt>
    1554:	ldr	r1, [pc, #148]	; 15f0 <main@@Base+0x620>
    1558:	ldr	r2, [pc, #148]	; 15f4 <main@@Base+0x624>
    155c:	ldr	r3, [pc, #148]	; 15f8 <main@@Base+0x628>
    1560:	add	r1, pc, r1
    1564:	add	r2, pc, r2
    1568:	str	r1, [sp, #12]
    156c:	add	r3, pc, r3
    1570:	str	r2, [sp, #16]
    1574:	str	r3, [sp, #20]
    1578:	add	r3, sp, #36	; 0x24
    157c:	ldr	lr, [pc, #120]	; 15fc <main@@Base+0x62c>
    1580:	str	r3, [sp, #24]
    1584:	ldr	ip, [pc, #116]	; 1600 <main@@Base+0x630>
    1588:	add	lr, pc, lr
    158c:	ldr	r1, [pc, #112]	; 1604 <main@@Base+0x634>
    1590:	ldr	r2, [pc, #112]	; 1608 <main@@Base+0x638>
    1594:	add	ip, pc, ip
    1598:	ldr	r3, [pc, #108]	; 160c <main@@Base+0x63c>
    159c:	add	r1, pc, r1
    15a0:	add	r2, pc, r2
    15a4:	str	r4, [sp, #28]
    15a8:	add	r3, pc, r3
    15ac:	str	lr, [sp, #4]
    15b0:	str	ip, [sp, #8]
    15b4:	str	r0, [sp]
    15b8:	mov	r0, r4
    15bc:	bl	ef8 <gtk_show_about_dialog@plt>
    15c0:	ldr	r2, [sp, #44]	; 0x2c
    15c4:	ldr	r3, [r5]
    15c8:	cmp	r2, r3
    15cc:	bne	15d8 <main@@Base+0x608>
    15d0:	add	sp, sp, #52	; 0x34
    15d4:	pop	{r4, r5, pc}
    15d8:	bl	e68 <__stack_chk_fail@plt>
    15dc:	andeq	r0, r1, r4, lsl sl
    15e0:	andeq	r0, r0, r8, asr #1
    15e4:	andeq	r0, r0, ip, asr r2
    15e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    15ec:	muleq	r0, r4, r2
    15f0:	andeq	r0, r0, r4, lsl #6
    15f4:	andeq	r0, r0, r8, lsl #6
    15f8:	andeq	r0, r0, ip, lsr #6
    15fc:	andeq	r0, r0, ip, asr #5
    1600:	andeq	r0, r0, r8, asr #5
    1604:	andeq	r0, r0, ip, lsl #5
    1608:	muleq	r0, r8, r2
    160c:	andeq	r0, r0, r4, lsr #5
    1610:	ldr	r0, [pc, #148]	; 16ac <main@@Base+0x6dc>
    1614:	push	{r4, r5, r6, lr}
    1618:	add	r0, pc, r0
    161c:	dmb	sy
    1620:	sub	sp, sp, #16
    1624:	ldr	r4, [r0, #8]
    1628:	dmb	sy
    162c:	cmp	r4, #0
    1630:	beq	1648 <main@@Base+0x678>
    1634:	ldr	r3, [pc, #116]	; 16b0 <main@@Base+0x6e0>
    1638:	add	r3, pc, r3
    163c:	ldr	r0, [r3, #8]
    1640:	add	sp, sp, #16
    1644:	pop	{r4, r5, r6, pc}
    1648:	add	r5, r0, #8
    164c:	mov	r0, r5
    1650:	bl	e8c <g_once_init_enter@plt>
    1654:	cmp	r0, #0
    1658:	beq	1634 <main@@Base+0x664>
    165c:	bl	f58 <gtk_application_get_type@plt>
    1660:	mov	r6, r0
    1664:	ldr	r0, [pc, #72]	; 16b4 <main@@Base+0x6e4>
    1668:	add	r0, pc, r0
    166c:	bl	e2c <g_intern_static_string@plt>
    1670:	ldr	ip, [pc, #64]	; 16b8 <main@@Base+0x6e8>
    1674:	mov	r3, #20
    1678:	str	r4, [sp, #8]
    167c:	add	ip, pc, ip
    1680:	stm	sp, {r3, ip}
    1684:	ldr	r3, [pc, #48]	; 16bc <main@@Base+0x6ec>
    1688:	mov	r2, #212	; 0xd4
    168c:	add	r3, pc, r3
    1690:	mov	r1, r0
    1694:	mov	r0, r6
    1698:	bl	f28 <g_type_register_static_simple@plt>
    169c:	mov	r1, r0
    16a0:	mov	r0, r5
    16a4:	bl	f94 <g_once_init_leave@plt>
    16a8:	b	1634 <main@@Base+0x664>
    16ac:	andeq	r0, r1, r8, lsr #20
    16b0:	andeq	r0, r1, r8, lsl #20
    16b4:	andeq	r0, r0, r8, asr r2
    16b8:			; <UNDEFINED> instruction: 0xfffffb70
    16bc:			; <UNDEFINED> instruction: 0xfffffb64
    16c0:	ldr	r0, [pc, #64]	; 1708 <main@@Base+0x738>
    16c4:	push	{lr}		; (str lr, [sp, #-4]!)
    16c8:	sub	sp, sp, #12
    16cc:	add	r0, pc, r0
    16d0:	bl	e44 <g_set_application_name@plt>
    16d4:	bl	1610 <main@@Base+0x640>
    16d8:	mov	r2, #4
    16dc:	mov	r3, #0
    16e0:	ldr	r1, [pc, #36]	; 170c <main@@Base+0x73c>
    16e4:	stm	sp, {r2, r3}
    16e8:	ldr	r2, [pc, #32]	; 1710 <main@@Base+0x740>
    16ec:	add	r1, pc, r1
    16f0:	ldr	r3, [pc, #28]	; 1714 <main@@Base+0x744>
    16f4:	add	r2, pc, r2
    16f8:	add	r3, pc, r3
    16fc:	bl	f34 <g_object_new@plt>
    1700:	add	sp, sp, #12
    1704:	pop	{pc}		; (ldr pc, [sp], #4)
    1708:	andeq	r0, r0, ip, ror #2
    170c:			; <UNDEFINED> instruction: 0x000001b4
    1710:			; <UNDEFINED> instruction: 0x000001bc
    1714:	ldrdeq	r0, [r0], -ip

00001718 <__libc_csu_init@@Base>:
    1718:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    171c:	mov	r7, r0
    1720:	ldr	r6, [pc, #76]	; 1774 <__libc_csu_init@@Base+0x5c>
    1724:	mov	r8, r1
    1728:	ldr	r5, [pc, #72]	; 1778 <__libc_csu_init@@Base+0x60>
    172c:	mov	r9, r2
    1730:	add	r6, pc, r6
    1734:	bl	dd0 <_init@@Base>
    1738:	add	r5, pc, r5
    173c:	rsb	r6, r5, r6
    1740:	asrs	r6, r6, #2
    1744:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    1748:	sub	r5, r5, #4
    174c:	mov	r4, #0
    1750:	add	r4, r4, #1
    1754:	ldr	r3, [r5, #4]!
    1758:	mov	r0, r7
    175c:	mov	r1, r8
    1760:	mov	r2, r9
    1764:	blx	r3
    1768:	cmp	r4, r6
    176c:	bne	1750 <__libc_csu_init@@Base+0x38>
    1770:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1774:	andeq	r0, r1, ip, ror #12
    1778:	andeq	r0, r1, r0, ror #12

0000177c <__libc_csu_fini@@Base>:
    177c:	bx	lr

Disassembly of section .fini:

00001780 <_fini@@Base>:
    1780:	push	{r3, lr}
    1784:	pop	{r3, pc}
