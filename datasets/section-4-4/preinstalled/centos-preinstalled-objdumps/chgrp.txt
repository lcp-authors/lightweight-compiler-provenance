
centos-preinstalled/chgrp:     file format elf32-littlearm


Disassembly of section .init:

00011324 <.init>:
   11324:	push	{r3, lr}
   11328:	bl	11c6c <__assert_fail@plt+0x5a4>
   1132c:	pop	{r3, pc}

Disassembly of section .plt:

00011330 <fdopen@plt-0x14>:
   11330:	push	{lr}		; (str lr, [sp, #-4]!)
   11334:	ldr	lr, [pc, #4]	; 11340 <fdopen@plt-0x4>
   11338:	add	lr, pc, lr
   1133c:	ldr	pc, [lr, #8]!
   11340:	andeq	sl, r1, r0, asr #25

00011344 <fdopen@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #106496	; 0x1a000
   1134c:	ldr	pc, [ip, #3264]!	; 0xcc0

00011350 <fstatfs64@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #106496	; 0x1a000
   11358:	ldr	pc, [ip, #3256]!	; 0xcb8

0001135c <calloc@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #106496	; 0x1a000
   11364:	ldr	pc, [ip, #3248]!	; 0xcb0

00011368 <endgrent@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #106496	; 0x1a000
   11370:	ldr	pc, [ip, #3240]!	; 0xca8

00011374 <fputs_unlocked@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #106496	; 0x1a000
   1137c:	ldr	pc, [ip, #3232]!	; 0xca0

00011380 <raise@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #106496	; 0x1a000
   11388:	ldr	pc, [ip, #3224]!	; 0xc98

0001138c <strcmp@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3216]!	; 0xc90

00011398 <getpwuid@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3208]!	; 0xc88

000113a4 <fflush@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3200]!	; 0xc80

000113b0 <memmove@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3192]!	; 0xc78

000113bc <free@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3184]!	; 0xc70

000113c8 <__openat64_2@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3176]!	; 0xc68

000113d4 <_exit@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #106496	; 0x1a000
   113dc:	ldr	pc, [ip, #3168]!	; 0xc60

000113e0 <memcpy@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #106496	; 0x1a000
   113e8:	ldr	pc, [ip, #3160]!	; 0xc58

000113ec <mbsinit@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #106496	; 0x1a000
   113f4:	ldr	pc, [ip, #3152]!	; 0xc50

000113f8 <memcmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #106496	; 0x1a000
   11400:	ldr	pc, [ip, #3144]!	; 0xc48

00011404 <stpcpy@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #106496	; 0x1a000
   1140c:	ldr	pc, [ip, #3136]!	; 0xc40

00011410 <dcgettext@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #106496	; 0x1a000
   11418:	ldr	pc, [ip, #3128]!	; 0xc38

0001141c <__stack_chk_fail@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #106496	; 0x1a000
   11424:	ldr	pc, [ip, #3120]!	; 0xc30

00011428 <realloc@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #106496	; 0x1a000
   11430:	ldr	pc, [ip, #3112]!	; 0xc28

00011434 <textdomain@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #106496	; 0x1a000
   1143c:	ldr	pc, [ip, #3104]!	; 0xc20

00011440 <__fxstatat64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #106496	; 0x1a000
   11448:	ldr	pc, [ip, #3096]!	; 0xc18

0001144c <iswprint@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #106496	; 0x1a000
   11454:	ldr	pc, [ip, #3088]!	; 0xc10

00011458 <__fxstat64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #106496	; 0x1a000
   11460:	ldr	pc, [ip, #3080]!	; 0xc08

00011464 <fwrite@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #106496	; 0x1a000
   1146c:	ldr	pc, [ip, #3072]!	; 0xc00

00011470 <lseek64@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #106496	; 0x1a000
   11478:	ldr	pc, [ip, #3064]!	; 0xbf8

0001147c <__ctype_get_mb_cur_max@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #106496	; 0x1a000
   11484:	ldr	pc, [ip, #3056]!	; 0xbf0

00011488 <strcpy@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #106496	; 0x1a000
   11490:	ldr	pc, [ip, #3048]!	; 0xbe8

00011494 <__fpending@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #106496	; 0x1a000
   1149c:	ldr	pc, [ip, #3040]!	; 0xbe0

000114a0 <mbrtowc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #106496	; 0x1a000
   114a8:	ldr	pc, [ip, #3032]!	; 0xbd8

000114ac <error@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #106496	; 0x1a000
   114b4:	ldr	pc, [ip, #3024]!	; 0xbd0

000114b8 <open64@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #106496	; 0x1a000
   114c0:	ldr	pc, [ip, #3016]!	; 0xbc8

000114c4 <getenv@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #106496	; 0x1a000
   114cc:	ldr	pc, [ip, #3008]!	; 0xbc0

000114d0 <malloc@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #106496	; 0x1a000
   114d8:	ldr	pc, [ip, #3000]!	; 0xbb8

000114dc <__libc_start_main@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #106496	; 0x1a000
   114e4:	ldr	pc, [ip, #2992]!	; 0xbb0

000114e8 <__freading@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #106496	; 0x1a000
   114f0:	ldr	pc, [ip, #2984]!	; 0xba8

000114f4 <__gmon_start__@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #106496	; 0x1a000
   114fc:	ldr	pc, [ip, #2976]!	; 0xba0

00011500 <getopt_long@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #106496	; 0x1a000
   11508:	ldr	pc, [ip, #2968]!	; 0xb98

0001150c <__ctype_b_loc@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #106496	; 0x1a000
   11514:	ldr	pc, [ip, #2960]!	; 0xb90

00011518 <exit@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #106496	; 0x1a000
   11520:	ldr	pc, [ip, #2952]!	; 0xb88

00011524 <strtoul@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #106496	; 0x1a000
   1152c:	ldr	pc, [ip, #2944]!	; 0xb80

00011530 <strlen@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #106496	; 0x1a000
   11538:	ldr	pc, [ip, #2936]!	; 0xb78

0001153c <strchr@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #106496	; 0x1a000
   11544:	ldr	pc, [ip, #2928]!	; 0xb70

00011548 <openat64@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #106496	; 0x1a000
   11550:	ldr	pc, [ip, #2920]!	; 0xb68

00011554 <fchown@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #106496	; 0x1a000
   1155c:	ldr	pc, [ip, #2912]!	; 0xb60

00011560 <ungetc@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #106496	; 0x1a000
   11568:	ldr	pc, [ip, #2904]!	; 0xb58

0001156c <fcntl@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #106496	; 0x1a000
   11574:	ldr	pc, [ip, #2896]!	; 0xb50

00011578 <__errno_location@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #106496	; 0x1a000
   11580:	ldr	pc, [ip, #2888]!	; 0xb48

00011584 <__cxa_atexit@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #106496	; 0x1a000
   1158c:	ldr	pc, [ip, #2880]!	; 0xb40

00011590 <memset@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #106496	; 0x1a000
   11598:	ldr	pc, [ip, #2872]!	; 0xb38

0001159c <fscanf@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #106496	; 0x1a000
   115a4:	ldr	pc, [ip, #2864]!	; 0xb30

000115a8 <__printf_chk@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #106496	; 0x1a000
   115b0:	ldr	pc, [ip, #2856]!	; 0xb28

000115b4 <fileno@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #106496	; 0x1a000
   115bc:	ldr	pc, [ip, #2848]!	; 0xb20

000115c0 <__fprintf_chk@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #106496	; 0x1a000
   115c8:	ldr	pc, [ip, #2840]!	; 0xb18

000115cc <fclose@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #106496	; 0x1a000
   115d4:	ldr	pc, [ip, #2832]!	; 0xb10

000115d8 <fseeko64@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #106496	; 0x1a000
   115e0:	ldr	pc, [ip, #2824]!	; 0xb08

000115e4 <__uflow@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #106496	; 0x1a000
   115ec:	ldr	pc, [ip, #2816]!	; 0xb00

000115f0 <setlocale@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #106496	; 0x1a000
   115f8:	ldr	pc, [ip, #2808]!	; 0xaf8

000115fc <strrchr@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #106496	; 0x1a000
   11604:	ldr	pc, [ip, #2800]!	; 0xaf0

00011608 <nl_langinfo@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #106496	; 0x1a000
   11610:	ldr	pc, [ip, #2792]!	; 0xae8

00011614 <readdir64@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #106496	; 0x1a000
   1161c:	ldr	pc, [ip, #2784]!	; 0xae0

00011620 <fdopendir@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #106496	; 0x1a000
   11628:	ldr	pc, [ip, #2776]!	; 0xad8

0001162c <dirfd@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #106496	; 0x1a000
   11634:	ldr	pc, [ip, #2768]!	; 0xad0

00011638 <fchdir@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #106496	; 0x1a000
   11640:	ldr	pc, [ip, #2760]!	; 0xac8

00011644 <qsort@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #106496	; 0x1a000
   1164c:	ldr	pc, [ip, #2752]!	; 0xac0

00011650 <fchownat@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #106496	; 0x1a000
   11658:	ldr	pc, [ip, #2744]!	; 0xab8

0001165c <bindtextdomain@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #106496	; 0x1a000
   11664:	ldr	pc, [ip, #2736]!	; 0xab0

00011668 <__xstat64@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #106496	; 0x1a000
   11670:	ldr	pc, [ip, #2728]!	; 0xaa8

00011674 <strncmp@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #106496	; 0x1a000
   1167c:	ldr	pc, [ip, #2720]!	; 0xaa0

00011680 <abort@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #106496	; 0x1a000
   11688:	ldr	pc, [ip, #2712]!	; 0xa98

0001168c <close@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #106496	; 0x1a000
   11694:	ldr	pc, [ip, #2704]!	; 0xa90

00011698 <__lxstat64@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #106496	; 0x1a000
   116a0:	ldr	pc, [ip, #2696]!	; 0xa88

000116a4 <closedir@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #106496	; 0x1a000
   116ac:	ldr	pc, [ip, #2688]!	; 0xa80

000116b0 <getgrgid@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #106496	; 0x1a000
   116b8:	ldr	pc, [ip, #2680]!	; 0xa78

000116bc <getgrnam@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #106496	; 0x1a000
   116c4:	ldr	pc, [ip, #2672]!	; 0xa70

000116c8 <__assert_fail@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #106496	; 0x1a000
   116d0:	ldr	pc, [ip, #2664]!	; 0xa68

Disassembly of section .text:

000116d8 <close_stdout@@Base-0x1894>:
   116d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116dc:	sub	sp, sp, #172	; 0xac
   116e0:	ldr	r8, [pc, #1244]	; 11bc4 <__assert_fail@plt+0x4fc>
   116e4:	mvn	r3, #0
   116e8:	ldr	r2, [pc, #1240]	; 11bc8 <__assert_fail@plt+0x500>
   116ec:	mov	r5, r0
   116f0:	add	r8, pc, r8
   116f4:	str	r3, [sp, #20]
   116f8:	mov	r3, #0
   116fc:	ldr	r0, [r1]
   11700:	ldr	r2, [r8, r2]
   11704:	mov	r4, r1
   11708:	str	r3, [sp, #24]
   1170c:	add	r9, sp, #32
   11710:	ldr	r3, [pc, #1204]	; 11bcc <__assert_fail@plt+0x504>
   11714:	mov	sl, #16
   11718:	ldr	r2, [r2]
   1171c:	add	r3, pc, r3
   11720:	str	r3, [sp, #28]
   11724:	ldr	fp, [pc, #1188]	; 11bd0 <__assert_fail@plt+0x508>
   11728:	str	r2, [sp, #164]	; 0xa4
   1172c:	bl	1318c <close_stdout@@Base+0x220>
   11730:	ldr	r1, [pc, #1180]	; 11bd4 <__assert_fail@plt+0x50c>
   11734:	mov	r0, #6
   11738:	add	fp, pc, fp
   1173c:	ldr	r7, [pc, #1172]	; 11bd8 <__assert_fail@plt+0x510>
   11740:	add	r1, pc, r1
   11744:	ldr	r6, [pc, #1168]	; 11bdc <__assert_fail@plt+0x514>
   11748:	bl	115f0 <setlocale@plt>
   1174c:	ldr	r1, [pc, #1164]	; 11be0 <__assert_fail@plt+0x518>
   11750:	mov	r0, fp
   11754:	add	r7, pc, r7
   11758:	add	r1, pc, r1
   1175c:	add	r6, pc, r6
   11760:	bl	1165c <bindtextdomain@plt>
   11764:	mov	r0, fp
   11768:	bl	11434 <textdomain@plt>
   1176c:	ldr	r3, [pc, #1136]	; 11be4 <__assert_fail@plt+0x51c>
   11770:	ldr	r0, [r8, r3]
   11774:	bl	1a22c <fts_children@@Base+0x292c>
   11778:	mov	r0, r9
   1177c:	bl	120c4 <__assert_fail@plt+0x9fc>
   11780:	mov	fp, #0
   11784:	mov	r0, r5
   11788:	str	fp, [sp]
   1178c:	mov	r1, r4
   11790:	mov	r2, r7
   11794:	mov	r3, r6
   11798:	bl	11500 <getopt_long@plt>
   1179c:	cmn	r0, #1
   117a0:	beq	11900 <__assert_fail@plt+0x238>
   117a4:	cmp	r0, #99	; 0x63
   117a8:	beq	118f4 <__assert_fail@plt+0x22c>
   117ac:	ble	117e0 <__assert_fail@plt+0x118>
   117b0:	cmp	r0, #256	; 0x100
   117b4:	beq	118e8 <__assert_fail@plt+0x220>
   117b8:	bgt	1180c <__assert_fail@plt+0x144>
   117bc:	cmp	r0, #104	; 0x68
   117c0:	beq	118e0 <__assert_fail@plt+0x218>
   117c4:	cmp	r0, #118	; 0x76
   117c8:	beq	11858 <__assert_fail@plt+0x190>
   117cc:	cmp	r0, #102	; 0x66
   117d0:	bne	11804 <__assert_fail@plt+0x13c>
   117d4:	mov	r3, #1
   117d8:	strb	r3, [sp, #45]	; 0x2d
   117dc:	b	11780 <__assert_fail@plt+0xb8>
   117e0:	cmp	r0, #72	; 0x48
   117e4:	beq	118d8 <__assert_fail@plt+0x210>
   117e8:	ble	11840 <__assert_fail@plt+0x178>
   117ec:	cmp	r0, #80	; 0x50
   117f0:	beq	118d0 <__assert_fail@plt+0x208>
   117f4:	cmp	r0, #82	; 0x52
   117f8:	beq	118b0 <__assert_fail@plt+0x1e8>
   117fc:	cmp	r0, #76	; 0x4c
   11800:	beq	118bc <__assert_fail@plt+0x1f4>
   11804:	mov	r0, #1
   11808:	bl	11d64 <__assert_fail@plt+0x69c>
   1180c:	movw	r3, #258	; 0x102
   11810:	cmp	r0, r3
   11814:	beq	118c4 <__assert_fail@plt+0x1fc>
   11818:	blt	118a8 <__assert_fail@plt+0x1e0>
   1181c:	movw	r2, #259	; 0x103
   11820:	cmp	r0, r2
   11824:	bne	11804 <__assert_fail@plt+0x13c>
   11828:	ldr	r3, [pc, #952]	; 11be8 <__assert_fail@plt+0x520>
   1182c:	ldr	r2, [sp, #28]
   11830:	ldr	r3, [r8, r3]
   11834:	ldr	r3, [r3]
   11838:	str	r3, [r2]
   1183c:	b	11780 <__assert_fail@plt+0xb8>
   11840:	cmn	r0, #3
   11844:	beq	11860 <__assert_fail@plt+0x198>
   11848:	cmn	r0, #2
   1184c:	bne	11804 <__assert_fail@plt+0x13c>
   11850:	mov	r0, fp
   11854:	bl	11d64 <__assert_fail@plt+0x69c>
   11858:	str	fp, [sp, #32]
   1185c:	b	11780 <__assert_fail@plt+0xb8>
   11860:	ldr	r2, [pc, #900]	; 11bec <__assert_fail@plt+0x524>
   11864:	ldr	r3, [pc, #900]	; 11bf0 <__assert_fail@plt+0x528>
   11868:	ldr	r1, [pc, #900]	; 11bf4 <__assert_fail@plt+0x52c>
   1186c:	ldr	r0, [r8, r2]
   11870:	ldr	r3, [r8, r3]
   11874:	add	r1, pc, r1
   11878:	ldr	r2, [pc, #888]	; 11bf8 <__assert_fail@plt+0x530>
   1187c:	ldr	r0, [r0]
   11880:	add	r2, pc, r2
   11884:	ldr	r3, [r3]
   11888:	stm	sp, {r1, r2, fp}
   1188c:	ldr	r1, [pc, #872]	; 11bfc <__assert_fail@plt+0x534>
   11890:	ldr	r2, [pc, #872]	; 11c00 <__assert_fail@plt+0x538>
   11894:	add	r1, pc, r1
   11898:	add	r2, pc, r2
   1189c:	bl	14ef4 <close_stdout@@Base+0x1f88>
   118a0:	mov	r0, fp
   118a4:	bl	11518 <exit@plt>
   118a8:	str	fp, [sp, #24]
   118ac:	b	11780 <__assert_fail@plt+0xb8>
   118b0:	mov	r3, #1
   118b4:	strb	r3, [sp, #36]	; 0x24
   118b8:	b	11780 <__assert_fail@plt+0xb8>
   118bc:	mov	sl, #2
   118c0:	b	11780 <__assert_fail@plt+0xb8>
   118c4:	mov	r2, #1
   118c8:	str	r2, [sp, #24]
   118cc:	b	11780 <__assert_fail@plt+0xb8>
   118d0:	mov	sl, #16
   118d4:	b	11780 <__assert_fail@plt+0xb8>
   118d8:	mov	sl, #17
   118dc:	b	11780 <__assert_fail@plt+0xb8>
   118e0:	str	fp, [sp, #20]
   118e4:	b	11780 <__assert_fail@plt+0xb8>
   118e8:	mov	r3, #1
   118ec:	str	r3, [sp, #20]
   118f0:	b	11780 <__assert_fail@plt+0xb8>
   118f4:	mov	r2, #1
   118f8:	str	r2, [sp, #32]
   118fc:	b	11780 <__assert_fail@plt+0xb8>
   11900:	ldrb	r3, [sp, #36]	; 0x24
   11904:	cmp	r3, fp
   11908:	moveq	sl, #16
   1190c:	beq	11918 <__assert_fail@plt+0x250>
   11910:	cmp	sl, #16
   11914:	beq	11a2c <__assert_fail@plt+0x364>
   11918:	ldr	r3, [sp, #20]
   1191c:	ldr	r2, [pc, #736]	; 11c04 <__assert_fail@plt+0x53c>
   11920:	adds	r1, r3, #0
   11924:	ldr	r3, [pc, #732]	; 11c08 <__assert_fail@plt+0x540>
   11928:	add	r3, pc, r3
   1192c:	movne	r1, #1
   11930:	strb	r1, [sp, #44]	; 0x2c
   11934:	ldr	r6, [r8, r2]
   11938:	ldr	r7, [r3]
   1193c:	ldr	r3, [r6]
   11940:	cmp	r7, #0
   11944:	rsb	r2, r3, r5
   11948:	beq	11b0c <__assert_fail@plt+0x444>
   1194c:	cmp	r2, #0
   11950:	ble	119c4 <__assert_fail@plt+0x2fc>
   11954:	mov	r0, #3
   11958:	mov	r1, r7
   1195c:	add	r2, sp, #56	; 0x38
   11960:	bl	11668 <__xstat64@plt>
   11964:	cmp	r0, #0
   11968:	bne	11a68 <__assert_fail@plt+0x3a0>
   1196c:	ldr	r5, [sp, #84]	; 0x54
   11970:	mov	r0, r5
   11974:	bl	120f4 <__assert_fail@plt+0xa2c>
   11978:	str	r0, [sp, #52]	; 0x34
   1197c:	ldrb	r3, [sp, #36]	; 0x24
   11980:	cmp	r3, #0
   11984:	beq	11994 <__assert_fail@plt+0x2cc>
   11988:	ldr	r2, [sp, #24]
   1198c:	cmp	r2, #0
   11990:	bne	11aa8 <__assert_fail@plt+0x3e0>
   11994:	ldr	r0, [r6]
   11998:	mvn	r2, #0
   1199c:	str	r9, [sp, #8]
   119a0:	orr	r1, sl, #1024	; 0x400
   119a4:	mov	r3, r5
   119a8:	str	r2, [sp]
   119ac:	add	r0, r4, r0, lsl #2
   119b0:	str	r2, [sp, #4]
   119b4:	bl	121cc <__assert_fail@plt+0xb04>
   119b8:	rsbs	r0, r0, #1
   119bc:	movcc	r0, #0
   119c0:	bl	11518 <exit@plt>
   119c4:	cmp	r5, r3
   119c8:	mov	r0, #0
   119cc:	bgt	119f4 <__assert_fail@plt+0x32c>
   119d0:	ldr	r1, [pc, #564]	; 11c0c <__assert_fail@plt+0x544>
   119d4:	mov	r2, #5
   119d8:	add	r1, pc, r1
   119dc:	bl	11410 <dcgettext@plt>
   119e0:	mov	r2, r0
   119e4:	mov	r0, #0
   119e8:	mov	r1, r0
   119ec:	bl	114ac <error@plt>
   119f0:	b	11804 <__assert_fail@plt+0x13c>
   119f4:	ldr	r1, [pc, #532]	; 11c10 <__assert_fail@plt+0x548>
   119f8:	mov	r2, #5
   119fc:	sub	r5, r5, #-1073741823	; 0xc0000001
   11a00:	add	r1, pc, r1
   11a04:	bl	11410 <dcgettext@plt>
   11a08:	mov	r6, r0
   11a0c:	ldr	r0, [r4, r5, lsl #2]
   11a10:	bl	149dc <close_stdout@@Base+0x1a70>
   11a14:	mov	r2, r6
   11a18:	mov	r3, r0
   11a1c:	mov	r0, #0
   11a20:	mov	r1, r0
   11a24:	bl	114ac <error@plt>
   11a28:	b	11804 <__assert_fail@plt+0x13c>
   11a2c:	ldr	r2, [sp, #20]
   11a30:	cmp	r2, #1
   11a34:	strne	fp, [sp, #20]
   11a38:	bne	11918 <__assert_fail@plt+0x250>
   11a3c:	ldr	r1, [pc, #464]	; 11c14 <__assert_fail@plt+0x54c>
   11a40:	mov	r2, #5
   11a44:	mov	r0, fp
   11a48:	add	r1, pc, r1
   11a4c:	bl	11410 <dcgettext@plt>
   11a50:	mov	r1, fp
   11a54:	mov	r2, r0
   11a58:	ldr	r0, [sp, #20]
   11a5c:	bl	114ac <error@plt>
   11a60:	str	fp, [sp, #20]
   11a64:	b	11918 <__assert_fail@plt+0x250>
   11a68:	bl	11578 <__errno_location@plt>
   11a6c:	ldr	r1, [pc, #420]	; 11c18 <__assert_fail@plt+0x550>
   11a70:	mov	r2, #5
   11a74:	add	r1, pc, r1
   11a78:	ldr	r5, [r0]
   11a7c:	mov	r0, #0
   11a80:	bl	11410 <dcgettext@plt>
   11a84:	mov	r8, r0
   11a88:	mov	r0, r7
   11a8c:	bl	149dc <close_stdout@@Base+0x1a70>
   11a90:	mov	r1, r5
   11a94:	mov	r2, r8
   11a98:	mov	r3, r0
   11a9c:	mov	r0, #1
   11aa0:	bl	114ac <error@plt>
   11aa4:	b	1196c <__assert_fail@plt+0x2a4>
   11aa8:	ldr	r0, [pc, #364]	; 11c1c <__assert_fail@plt+0x554>
   11aac:	add	r0, pc, r0
   11ab0:	add	r0, r0, #8
   11ab4:	bl	149e8 <close_stdout@@Base+0x1a7c>
   11ab8:	cmp	r0, #0
   11abc:	mov	r7, r0
   11ac0:	str	r0, [sp, #40]	; 0x28
   11ac4:	bne	11994 <__assert_fail@plt+0x2cc>
   11ac8:	bl	11578 <__errno_location@plt>
   11acc:	ldr	r1, [pc, #332]	; 11c20 <__assert_fail@plt+0x558>
   11ad0:	mov	r2, #5
   11ad4:	add	r1, pc, r1
   11ad8:	ldr	r8, [r0]
   11adc:	mov	r0, r7
   11ae0:	bl	11410 <dcgettext@plt>
   11ae4:	mov	r7, r0
   11ae8:	ldr	r0, [pc, #308]	; 11c24 <__assert_fail@plt+0x55c>
   11aec:	add	r0, pc, r0
   11af0:	bl	149dc <close_stdout@@Base+0x1a70>
   11af4:	mov	r1, r8
   11af8:	mov	r2, r7
   11afc:	mov	r3, r0
   11b00:	mov	r0, #1
   11b04:	bl	114ac <error@plt>
   11b08:	b	11994 <__assert_fail@plt+0x2cc>
   11b0c:	cmp	r2, #1
   11b10:	ble	119c4 <__assert_fail@plt+0x2fc>
   11b14:	add	r2, r3, #1
   11b18:	str	r2, [r6]
   11b1c:	ldr	r5, [r4, r3, lsl #2]
   11b20:	ldrb	r3, [r5]
   11b24:	cmp	r3, #0
   11b28:	movne	r3, r5
   11b2c:	moveq	r3, #0
   11b30:	str	r3, [sp, #52]	; 0x34
   11b34:	ldrb	r3, [r5]
   11b38:	cmp	r3, #0
   11b3c:	mvneq	r5, #0
   11b40:	beq	1197c <__assert_fail@plt+0x2b4>
   11b44:	mov	r0, r5
   11b48:	bl	116bc <getgrnam@plt>
   11b4c:	subs	r7, r0, #0
   11b50:	beq	11b60 <__assert_fail@plt+0x498>
   11b54:	ldr	r5, [r7, #8]
   11b58:	bl	11368 <endgrent@plt>
   11b5c:	b	1197c <__assert_fail@plt+0x2b4>
   11b60:	ldr	ip, [pc, #192]	; 11c28 <__assert_fail@plt+0x560>
   11b64:	mov	r0, r5
   11b68:	mov	r1, r7
   11b6c:	mov	r2, #10
   11b70:	add	ip, pc, ip
   11b74:	add	r3, sp, #56	; 0x38
   11b78:	str	ip, [sp]
   11b7c:	bl	152fc <close_stdout@@Base+0x2390>
   11b80:	cmp	r0, #0
   11b84:	beq	11bbc <__assert_fail@plt+0x4f4>
   11b88:	ldr	r1, [pc, #156]	; 11c2c <__assert_fail@plt+0x564>
   11b8c:	mov	r2, #5
   11b90:	mov	r0, r7
   11b94:	add	r1, pc, r1
   11b98:	bl	11410 <dcgettext@plt>
   11b9c:	mov	r8, r0
   11ba0:	mov	r0, r5
   11ba4:	bl	149dc <close_stdout@@Base+0x1a70>
   11ba8:	mov	r2, r8
   11bac:	mov	r1, r7
   11bb0:	mov	r3, r0
   11bb4:	mov	r0, #1
   11bb8:	bl	114ac <error@plt>
   11bbc:	ldr	r5, [sp, #56]	; 0x38
   11bc0:	b	11b58 <__assert_fail@plt+0x490>
   11bc4:	andeq	sl, r1, r8, lsl #18
   11bc8:	andeq	r0, r0, r4, asr #2
   11bcc:	andeq	sl, r1, ip, lsr #21
   11bd0:	andeq	r9, r0, r4, asr r2
   11bd4:	andeq	r9, r0, ip, lsr r1
   11bd8:	andeq	r9, r0, r8, lsr r3
   11bdc:			; <UNDEFINED> instruction: 0x0001a6b0
   11be0:	strdeq	r9, [r0], -r8
   11be4:	andeq	r0, r0, r4, asr r1
   11be8:	andeq	r0, r0, r8, ror r1
   11bec:	andeq	r0, r0, r0, ror #2
   11bf0:	andeq	r0, r0, ip, asr #2
   11bf4:	strdeq	r9, [r0], -r8
   11bf8:	strdeq	r9, [r0], -ip
   11bfc:	ldrdeq	r9, [r0], -r0
   11c00:	strdeq	r9, [r0], -r0
   11c04:	andeq	r0, r0, r8, asr #2
   11c08:	andeq	sl, r1, r0, lsr #17
   11c0c:	andeq	r9, r0, ip, ror #1
   11c10:	ldrdeq	r9, [r0], -r4
   11c14:	andeq	r9, r0, r0, asr r0
   11c18:	andeq	r9, r0, ip, ror r0
   11c1c:	andeq	sl, r1, ip, lsl r7
   11c20:	andeq	r9, r0, ip, lsl r0
   11c24:	andeq	r9, r0, r8, lsr r0
   11c28:	andeq	r8, r0, ip, lsl #26
   11c2c:	andeq	r8, r0, ip, ror pc
   11c30:	mov	fp, #0
   11c34:	mov	lr, #0
   11c38:	pop	{r1}		; (ldr r1, [sp], #4)
   11c3c:	mov	r2, sp
   11c40:	push	{r2}		; (str r2, [sp, #-4]!)
   11c44:	push	{r0}		; (str r0, [sp, #-4]!)
   11c48:	ldr	ip, [pc, #16]	; 11c60 <__assert_fail@plt+0x598>
   11c4c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c50:	ldr	r0, [pc, #12]	; 11c64 <__assert_fail@plt+0x59c>
   11c54:	ldr	r3, [pc, #12]	; 11c68 <__assert_fail@plt+0x5a0>
   11c58:	bl	114dc <__libc_start_main@plt>
   11c5c:	bl	11680 <abort@plt>
   11c60:	andeq	sl, r1, r8, lsr #4
   11c64:	ldrdeq	r1, [r1], -r8
   11c68:	andeq	sl, r1, r4, asr #3
   11c6c:	ldr	r3, [pc, #20]	; 11c88 <__assert_fail@plt+0x5c0>
   11c70:	ldr	r2, [pc, #20]	; 11c8c <__assert_fail@plt+0x5c4>
   11c74:	add	r3, pc, r3
   11c78:	ldr	r2, [r3, r2]
   11c7c:	cmp	r2, #0
   11c80:	bxeq	lr
   11c84:	b	114f4 <__gmon_start__@plt>
   11c88:	andeq	sl, r1, r4, lsl #7
   11c8c:	andeq	r0, r0, r8, asr r1
   11c90:	push	{r3, lr}
   11c94:	movw	r0, #49608	; 0xc1c8
   11c98:	ldr	r3, [pc, #36]	; 11cc4 <__assert_fail@plt+0x5fc>
   11c9c:	movt	r0, #2
   11ca0:	rsb	r3, r0, r3
   11ca4:	cmp	r3, #6
   11ca8:	popls	{r3, pc}
   11cac:	movw	r3, #0
   11cb0:	movt	r3, #0
   11cb4:	cmp	r3, #0
   11cb8:	popeq	{r3, pc}
   11cbc:	blx	r3
   11cc0:	pop	{r3, pc}
   11cc4:	andeq	ip, r2, fp, asr #3
   11cc8:	push	{r3, lr}
   11ccc:	movw	r0, #49608	; 0xc1c8
   11cd0:	movw	r3, #49608	; 0xc1c8
   11cd4:	movt	r0, #2
   11cd8:	movt	r3, #2
   11cdc:	rsb	r3, r0, r3
   11ce0:	asr	r3, r3, #2
   11ce4:	add	r3, r3, r3, lsr #31
   11ce8:	asrs	r1, r3, #1
   11cec:	popeq	{r3, pc}
   11cf0:	movw	r2, #0
   11cf4:	movt	r2, #0
   11cf8:	cmp	r2, #0
   11cfc:	popeq	{r3, pc}
   11d00:	blx	r2
   11d04:	pop	{r3, pc}
   11d08:	push	{r4, lr}
   11d0c:	movw	r4, #49608	; 0xc1c8
   11d10:	movt	r4, #2
   11d14:	ldrb	r3, [r4]
   11d18:	cmp	r3, #0
   11d1c:	popne	{r4, pc}
   11d20:	bl	11c90 <__assert_fail@plt+0x5c8>
   11d24:	mov	r3, #1
   11d28:	strb	r3, [r4]
   11d2c:	pop	{r4, pc}
   11d30:	movw	r0, #48656	; 0xbe10
   11d34:	movt	r0, #2
   11d38:	push	{r3, lr}
   11d3c:	ldr	r3, [r0]
   11d40:	cmp	r3, #0
   11d44:	beq	11d5c <__assert_fail@plt+0x694>
   11d48:	movw	r3, #0
   11d4c:	movt	r3, #0
   11d50:	cmp	r3, #0
   11d54:	beq	11d5c <__assert_fail@plt+0x694>
   11d58:	blx	r3
   11d5c:	pop	{r3, lr}
   11d60:	b	11cc8 <__assert_fail@plt+0x600>
   11d64:	push	{r4, r5, r6, lr}
   11d68:	subs	r4, r0, #0
   11d6c:	ldr	r5, [pc, #640]	; 11ff4 <__assert_fail@plt+0x92c>
   11d70:	add	r5, pc, r5
   11d74:	beq	11dbc <__assert_fail@plt+0x6f4>
   11d78:	ldr	r3, [pc, #632]	; 11ff8 <__assert_fail@plt+0x930>
   11d7c:	mov	r2, #5
   11d80:	ldr	r1, [pc, #628]	; 11ffc <__assert_fail@plt+0x934>
   11d84:	mov	r0, #0
   11d88:	ldr	r3, [r5, r3]
   11d8c:	add	r1, pc, r1
   11d90:	ldr	r6, [r3]
   11d94:	bl	11410 <dcgettext@plt>
   11d98:	ldr	r3, [pc, #608]	; 12000 <__assert_fail@plt+0x938>
   11d9c:	mov	r1, #1
   11da0:	ldr	r3, [r5, r3]
   11da4:	ldr	r3, [r3]
   11da8:	mov	r2, r0
   11dac:	mov	r0, r6
   11db0:	bl	115c0 <__fprintf_chk@plt>
   11db4:	mov	r0, r4
   11db8:	bl	11518 <exit@plt>
   11dbc:	ldr	r1, [pc, #576]	; 12004 <__assert_fail@plt+0x93c>
   11dc0:	mov	r2, #5
   11dc4:	add	r1, pc, r1
   11dc8:	bl	11410 <dcgettext@plt>
   11dcc:	ldr	r3, [pc, #556]	; 12000 <__assert_fail@plt+0x938>
   11dd0:	ldr	r6, [r5, r3]
   11dd4:	ldr	r2, [r6]
   11dd8:	mov	r3, r2
   11ddc:	mov	r1, r0
   11de0:	mov	r0, #1
   11de4:	bl	115a8 <__printf_chk@plt>
   11de8:	ldr	r1, [pc, #536]	; 12008 <__assert_fail@plt+0x940>
   11dec:	mov	r2, #5
   11df0:	mov	r0, r4
   11df4:	add	r1, pc, r1
   11df8:	bl	11410 <dcgettext@plt>
   11dfc:	ldr	r3, [pc, #520]	; 1200c <__assert_fail@plt+0x944>
   11e00:	ldr	r5, [r5, r3]
   11e04:	ldr	r1, [r5]
   11e08:	bl	11374 <fputs_unlocked@plt>
   11e0c:	ldr	r1, [pc, #508]	; 12010 <__assert_fail@plt+0x948>
   11e10:	mov	r2, #5
   11e14:	mov	r0, r4
   11e18:	add	r1, pc, r1
   11e1c:	bl	11410 <dcgettext@plt>
   11e20:	ldr	r1, [r5]
   11e24:	bl	11374 <fputs_unlocked@plt>
   11e28:	ldr	r1, [pc, #484]	; 12014 <__assert_fail@plt+0x94c>
   11e2c:	mov	r2, #5
   11e30:	mov	r0, r4
   11e34:	add	r1, pc, r1
   11e38:	bl	11410 <dcgettext@plt>
   11e3c:	ldr	r1, [r5]
   11e40:	bl	11374 <fputs_unlocked@plt>
   11e44:	ldr	r1, [pc, #460]	; 12018 <__assert_fail@plt+0x950>
   11e48:	mov	r2, #5
   11e4c:	mov	r0, r4
   11e50:	add	r1, pc, r1
   11e54:	bl	11410 <dcgettext@plt>
   11e58:	ldr	r1, [r5]
   11e5c:	bl	11374 <fputs_unlocked@plt>
   11e60:	ldr	r1, [pc, #436]	; 1201c <__assert_fail@plt+0x954>
   11e64:	mov	r2, #5
   11e68:	mov	r0, r4
   11e6c:	add	r1, pc, r1
   11e70:	bl	11410 <dcgettext@plt>
   11e74:	ldr	r1, [r5]
   11e78:	bl	11374 <fputs_unlocked@plt>
   11e7c:	ldr	r1, [pc, #412]	; 12020 <__assert_fail@plt+0x958>
   11e80:	mov	r2, #5
   11e84:	mov	r0, r4
   11e88:	add	r1, pc, r1
   11e8c:	bl	11410 <dcgettext@plt>
   11e90:	ldr	r1, [r5]
   11e94:	bl	11374 <fputs_unlocked@plt>
   11e98:	ldr	r1, [pc, #388]	; 12024 <__assert_fail@plt+0x95c>
   11e9c:	mov	r2, #5
   11ea0:	mov	r0, r4
   11ea4:	add	r1, pc, r1
   11ea8:	bl	11410 <dcgettext@plt>
   11eac:	ldr	r1, [r5]
   11eb0:	bl	11374 <fputs_unlocked@plt>
   11eb4:	ldr	r1, [pc, #364]	; 12028 <__assert_fail@plt+0x960>
   11eb8:	mov	r2, #5
   11ebc:	mov	r0, r4
   11ec0:	add	r1, pc, r1
   11ec4:	bl	11410 <dcgettext@plt>
   11ec8:	ldr	r1, [r5]
   11ecc:	bl	11374 <fputs_unlocked@plt>
   11ed0:	ldr	r1, [pc, #340]	; 1202c <__assert_fail@plt+0x964>
   11ed4:	mov	r2, #5
   11ed8:	mov	r0, r4
   11edc:	add	r1, pc, r1
   11ee0:	bl	11410 <dcgettext@plt>
   11ee4:	ldr	r1, [r5]
   11ee8:	bl	11374 <fputs_unlocked@plt>
   11eec:	ldr	r1, [pc, #316]	; 12030 <__assert_fail@plt+0x968>
   11ef0:	mov	r2, #5
   11ef4:	mov	r0, r4
   11ef8:	add	r1, pc, r1
   11efc:	bl	11410 <dcgettext@plt>
   11f00:	ldr	r1, [r5]
   11f04:	bl	11374 <fputs_unlocked@plt>
   11f08:	ldr	r1, [pc, #292]	; 12034 <__assert_fail@plt+0x96c>
   11f0c:	mov	r2, #5
   11f10:	mov	r0, r4
   11f14:	add	r1, pc, r1
   11f18:	bl	11410 <dcgettext@plt>
   11f1c:	ldr	r2, [r6]
   11f20:	mov	r3, r2
   11f24:	mov	r1, r0
   11f28:	mov	r0, #1
   11f2c:	bl	115a8 <__printf_chk@plt>
   11f30:	ldr	r1, [pc, #256]	; 12038 <__assert_fail@plt+0x970>
   11f34:	mov	r2, #5
   11f38:	mov	r0, r4
   11f3c:	add	r1, pc, r1
   11f40:	bl	11410 <dcgettext@plt>
   11f44:	ldr	r2, [pc, #240]	; 1203c <__assert_fail@plt+0x974>
   11f48:	ldr	r3, [pc, #240]	; 12040 <__assert_fail@plt+0x978>
   11f4c:	add	r2, pc, r2
   11f50:	add	r3, pc, r3
   11f54:	mov	r1, r0
   11f58:	mov	r0, #1
   11f5c:	bl	115a8 <__printf_chk@plt>
   11f60:	mov	r0, #5
   11f64:	mov	r1, r4
   11f68:	bl	115f0 <setlocale@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f8c <__assert_fail@plt+0x8c4>
   11f74:	ldr	r1, [pc, #200]	; 12044 <__assert_fail@plt+0x97c>
   11f78:	mov	r2, #3
   11f7c:	add	r1, pc, r1
   11f80:	bl	11674 <strncmp@plt>
   11f84:	cmp	r0, #0
   11f88:	bne	11fc0 <__assert_fail@plt+0x8f8>
   11f8c:	ldr	r1, [pc, #180]	; 12048 <__assert_fail@plt+0x980>
   11f90:	mov	r2, #5
   11f94:	mov	r0, #0
   11f98:	add	r1, pc, r1
   11f9c:	bl	11410 <dcgettext@plt>
   11fa0:	mov	r5, r0
   11fa4:	ldr	r0, [r6]
   11fa8:	bl	13084 <close_stdout@@Base+0x118>
   11fac:	mov	r1, r5
   11fb0:	mov	r2, r0
   11fb4:	mov	r0, #1
   11fb8:	bl	115a8 <__printf_chk@plt>
   11fbc:	b	11db4 <__assert_fail@plt+0x6ec>
   11fc0:	ldr	r1, [pc, #132]	; 1204c <__assert_fail@plt+0x984>
   11fc4:	mov	r2, #5
   11fc8:	mov	r0, r4
   11fcc:	add	r1, pc, r1
   11fd0:	bl	11410 <dcgettext@plt>
   11fd4:	mov	r5, r0
   11fd8:	ldr	r0, [r6]
   11fdc:	bl	13084 <close_stdout@@Base+0x118>
   11fe0:	mov	r1, r5
   11fe4:	mov	r2, r0
   11fe8:	mov	r0, #1
   11fec:	bl	115a8 <__printf_chk@plt>
   11ff0:	b	11f8c <__assert_fail@plt+0x8c4>
   11ff4:	andeq	sl, r1, r8, lsl #5
   11ff8:	andeq	r0, r0, r0, asr r1
   11ffc:	ldrdeq	r8, [r0], -r4
   12000:	andeq	r0, r0, ip, ror #2
   12004:	andeq	r8, r0, r4, asr #9
   12008:	andeq	r8, r0, ip, ror #9
   1200c:	andeq	r0, r0, r0, ror #2
   12010:	andeq	r8, r0, r4, lsr r5
   12014:	andeq	r8, r0, r4, ror #11
   12018:			; <UNDEFINED> instruction: 0x000086b0
   1201c:	andeq	r8, r0, ip, lsl #14
   12020:	andeq	r8, r0, r0, ror r7
   12024:	andeq	r8, r0, r0, asr #15
   12028:	andeq	r8, r0, ip, ror #15
   1202c:	andeq	r8, r0, r4, lsr #19
   12030:			; <UNDEFINED> instruction: 0x000089b8
   12034:	ldrdeq	r8, [r0], -r4
   12038:	andeq	r8, r0, r4, lsr sl
   1203c:	andeq	r8, r0, ip, lsr sl
   12040:	andeq	r8, r0, r8, asr #20
   12044:	andeq	r8, r0, r4, asr #20
   12048:	andeq	r8, r0, r4, ror sl
   1204c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12050:	push	{r4, r5, r6, lr}
   12054:	subs	r5, r0, #0
   12058:	mov	r4, r1
   1205c:	beq	120a8 <__assert_fail@plt+0x9e0>
   12060:	cmp	r1, #0
   12064:	beq	120b4 <__assert_fail@plt+0x9ec>
   12068:	bl	11530 <strlen@plt>
   1206c:	mov	r6, r0
   12070:	mov	r0, r4
   12074:	bl	11530 <strlen@plt>
   12078:	add	r0, r6, r0
   1207c:	add	r0, r0, #2
   12080:	bl	15004 <close_stdout@@Base+0x2098>
   12084:	mov	r1, r5
   12088:	mov	r6, r0
   1208c:	bl	11404 <stpcpy@plt>
   12090:	mov	r3, #58	; 0x3a
   12094:	mov	r1, r4
   12098:	strb	r3, [r0], #1
   1209c:	bl	11488 <strcpy@plt>
   120a0:	mov	r0, r6
   120a4:	pop	{r4, r5, r6, pc}
   120a8:	cmp	r1, #0
   120ac:	beq	120bc <__assert_fail@plt+0x9f4>
   120b0:	mov	r0, r1
   120b4:	pop	{r4, r5, r6, lr}
   120b8:	b	151fc <close_stdout@@Base+0x2290>
   120bc:	mov	r6, r1
   120c0:	b	120a0 <__assert_fail@plt+0x9d8>
   120c4:	mov	r3, #1
   120c8:	mov	r2, #2
   120cc:	strb	r3, [r0, #12]
   120d0:	mov	r3, #0
   120d4:	str	r2, [r0]
   120d8:	str	r3, [r0, #8]
   120dc:	strb	r3, [r0, #4]
   120e0:	strb	r3, [r0, #13]
   120e4:	str	r3, [r0, #16]
   120e8:	str	r3, [r0, #20]
   120ec:	bx	lr
   120f0:	bx	lr
   120f4:	ldr	r3, [pc, #92]	; 12158 <__assert_fail@plt+0xa90>
   120f8:	ldr	r2, [pc, #92]	; 1215c <__assert_fail@plt+0xa94>
   120fc:	add	r3, pc, r3
   12100:	push	{r4, r5, lr}
   12104:	sub	sp, sp, #36	; 0x24
   12108:	ldr	r4, [r3, r2]
   1210c:	mov	r5, r0
   12110:	ldr	r3, [r4]
   12114:	str	r3, [sp, #28]
   12118:	bl	116b0 <getgrgid@plt>
   1211c:	subs	r1, r0, #0
   12120:	beq	12144 <__assert_fail@plt+0xa7c>
   12124:	ldr	r0, [r1]
   12128:	bl	151fc <close_stdout@@Base+0x2290>
   1212c:	ldr	r2, [sp, #28]
   12130:	ldr	r3, [r4]
   12134:	cmp	r2, r3
   12138:	bne	12154 <__assert_fail@plt+0xa8c>
   1213c:	add	sp, sp, #36	; 0x24
   12140:	pop	{r4, r5, pc}
   12144:	mov	r0, r5
   12148:	add	r2, sp, #4
   1214c:	bl	13128 <close_stdout@@Base+0x1bc>
   12150:	b	12128 <__assert_fail@plt+0xa60>
   12154:	bl	1141c <__stack_chk_fail@plt>
   12158:	strdeq	r9, [r1], -ip
   1215c:	andeq	r0, r0, r4, asr #2
   12160:	ldr	r3, [pc, #92]	; 121c4 <__assert_fail@plt+0xafc>
   12164:	ldr	r2, [pc, #92]	; 121c8 <__assert_fail@plt+0xb00>
   12168:	add	r3, pc, r3
   1216c:	push	{r4, r5, lr}
   12170:	sub	sp, sp, #36	; 0x24
   12174:	ldr	r4, [r3, r2]
   12178:	mov	r5, r0
   1217c:	ldr	r3, [r4]
   12180:	str	r3, [sp, #28]
   12184:	bl	11398 <getpwuid@plt>
   12188:	subs	r1, r0, #0
   1218c:	beq	121b0 <__assert_fail@plt+0xae8>
   12190:	ldr	r0, [r1]
   12194:	bl	151fc <close_stdout@@Base+0x2290>
   12198:	ldr	r2, [sp, #28]
   1219c:	ldr	r3, [r4]
   121a0:	cmp	r2, r3
   121a4:	bne	121c0 <__assert_fail@plt+0xaf8>
   121a8:	add	sp, sp, #36	; 0x24
   121ac:	pop	{r4, r5, pc}
   121b0:	mov	r0, r5
   121b4:	add	r2, sp, #4
   121b8:	bl	13128 <close_stdout@@Base+0x1bc>
   121bc:	b	12194 <__assert_fail@plt+0xacc>
   121c0:	bl	1141c <__stack_chk_fail@plt>
   121c4:	muleq	r1, r0, lr
   121c8:	andeq	r0, r0, r4, asr #2
   121cc:	ldr	ip, [pc, #3312]	; 12ec4 <__assert_fail@plt+0x17fc>
   121d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121d4:	add	ip, pc, ip
   121d8:	ldr	lr, [pc, #3304]	; 12ec8 <__assert_fail@plt+0x1800>
   121dc:	sub	sp, sp, #292	; 0x124
   121e0:	str	r2, [sp, #32]
   121e4:	str	r3, [sp, #36]	; 0x24
   121e8:	mov	r3, ip
   121ec:	ldr	lr, [ip, lr]
   121f0:	ldr	r4, [sp, #332]	; 0x14c
   121f4:	ldr	ip, [sp, #328]	; 0x148
   121f8:	ldr	r3, [lr]
   121fc:	cmn	ip, #1
   12200:	cmneq	r4, #1
   12204:	str	lr, [sp, #44]	; 0x2c
   12208:	ldr	r7, [sp, #336]	; 0x150
   1220c:	str	r3, [sp, #284]	; 0x11c
   12210:	moveq	r2, #0
   12214:	movne	r2, #1
   12218:	movne	r3, #0
   1221c:	bne	12230 <__assert_fail@plt+0xb68>
   12220:	ldrb	r3, [r7, #12]
   12224:	cmp	r3, #0
   12228:	movne	r3, r2
   1222c:	beq	1290c <__assert_fail@plt+0x1244>
   12230:	ldr	r4, [pc, #3220]	; 12ecc <__assert_fail@plt+0x1804>
   12234:	orr	r1, r3, r1
   12238:	ldr	ip, [pc, #3216]	; 12ed0 <__assert_fail@plt+0x1808>
   1223c:	mov	r2, #0
   12240:	add	r4, pc, r4
   12244:	str	r4, [sp, #52]	; 0x34
   12248:	add	ip, pc, ip
   1224c:	ldr	r4, [pc, #3200]	; 12ed4 <__assert_fail@plt+0x180c>
   12250:	str	ip, [sp, #48]	; 0x30
   12254:	ldr	ip, [pc, #3196]	; 12ed8 <__assert_fail@plt+0x1810>
   12258:	add	r4, pc, r4
   1225c:	str	r4, [sp, #56]	; 0x38
   12260:	add	ip, pc, ip
   12264:	str	ip, [sp, #60]	; 0x3c
   12268:	bl	15270 <close_stdout@@Base+0x2304>
   1226c:	ldr	r4, [pc, #3176]	; 12edc <__assert_fail@plt+0x1814>
   12270:	add	r4, pc, r4
   12274:	mov	r6, r0
   12278:	bl	11578 <__errno_location@plt>
   1227c:	str	r4, [sp, #64]	; 0x40
   12280:	mov	fp, r6
   12284:	ldr	r4, [pc, #3156]	; 12ee0 <__assert_fail@plt+0x1818>
   12288:	mov	ip, #1
   1228c:	str	ip, [sp, #24]
   12290:	add	r4, pc, r4
   12294:	str	r4, [sp, #68]	; 0x44
   12298:	str	r0, [sp, #40]	; 0x28
   1229c:	mov	r0, fp
   122a0:	bl	17070 <fts_read@@Base>
   122a4:	subs	sl, r0, #0
   122a8:	beq	123c8 <__assert_fail@plt+0xd00>
   122ac:	ldr	r4, [sl, #28]
   122b0:	ldrh	r5, [sl, #60]	; 0x3c
   122b4:	ldr	r9, [sl, #24]
   122b8:	str	r4, [sp, #28]
   122bc:	sub	r4, r5, #1
   122c0:	cmp	r4, #9
   122c4:	addls	pc, pc, r4, lsl #2
   122c8:	b	124a8 <__assert_fail@plt+0xde0>
   122cc:	b	125b4 <__assert_fail@plt+0xeec>
   122d0:	b	12494 <__assert_fail@plt+0xdcc>
   122d4:	b	124a8 <__assert_fail@plt+0xde0>
   122d8:	b	1244c <__assert_fail@plt+0xd84>
   122dc:	b	124a8 <__assert_fail@plt+0xde0>
   122e0:	b	123ac <__assert_fail@plt+0xce4>
   122e4:	b	12378 <__assert_fail@plt+0xcb0>
   122e8:	b	124a8 <__assert_fail@plt+0xde0>
   122ec:	b	124a8 <__assert_fail@plt+0xde0>
   122f0:	b	122f4 <__assert_fail@plt+0xc2c>
   122f4:	ldr	r3, [sl, #48]	; 0x30
   122f8:	cmp	r3, #0
   122fc:	bne	1230c <__assert_fail@plt+0xc44>
   12300:	ldr	r3, [sl, #16]
   12304:	cmp	r3, #0
   12308:	beq	12a78 <__assert_fail@plt+0x13b0>
   1230c:	ldrb	r4, [r7, #13]
   12310:	ldr	r1, [pc, #3020]	; 12ee4 <__assert_fail@plt+0x181c>
   12314:	cmp	r4, #0
   12318:	mov	r0, r4
   1231c:	add	r1, pc, r1
   12320:	beq	12464 <__assert_fail@plt+0xd9c>
   12324:	mov	r8, #0
   12328:	mov	r4, #1
   1232c:	mov	r6, r8
   12330:	mov	r2, r8
   12334:	str	r8, [sp, #16]
   12338:	ldr	r3, [r7]
   1233c:	cmp	r3, #2
   12340:	beq	1258c <__assert_fail@plt+0xec4>
   12344:	ldr	ip, [sp, #16]
   12348:	tst	ip, r2
   1234c:	beq	126a4 <__assert_fail@plt+0xfdc>
   12350:	cmp	r4, #0
   12354:	beq	126a4 <__assert_fail@plt+0xfdc>
   12358:	ldr	ip, [sp, #32]
   1235c:	cmn	ip, #1
   12360:	beq	1268c <__assert_fail@plt+0xfc4>
   12364:	ldr	r1, [r6, #24]
   12368:	cmp	ip, r1
   1236c:	beq	1268c <__assert_fail@plt+0xfc4>
   12370:	mov	r5, #2
   12374:	b	126c4 <__assert_fail@plt+0xffc>
   12378:	ldrb	r4, [r7, #13]
   1237c:	cmp	r4, #0
   12380:	bne	12324 <__assert_fail@plt+0xc5c>
   12384:	ldr	r0, [sp, #28]
   12388:	ldr	r5, [sl, #32]
   1238c:	bl	149dc <close_stdout@@Base+0x1a70>
   12390:	ldr	r2, [pc, #2896]	; 12ee8 <__assert_fail@plt+0x1820>
   12394:	mov	r1, r5
   12398:	add	r2, pc, r2
   1239c:	mov	r3, r0
   123a0:	mov	r0, r4
   123a4:	bl	114ac <error@plt>
   123a8:	b	12324 <__assert_fail@plt+0xc5c>
   123ac:	ldrb	r3, [r7, #4]
   123b0:	cmp	r3, #0
   123b4:	bne	124a8 <__assert_fail@plt+0xde0>
   123b8:	mov	r0, fp
   123bc:	bl	17070 <fts_read@@Base>
   123c0:	subs	sl, r0, #0
   123c4:	bne	122ac <__assert_fail@plt+0xbe4>
   123c8:	ldr	ip, [sp, #40]	; 0x28
   123cc:	mov	r6, fp
   123d0:	ldr	r4, [ip]
   123d4:	cmp	r4, #0
   123d8:	beq	123ec <__assert_fail@plt+0xd24>
   123dc:	ldrb	r5, [r7, #13]
   123e0:	cmp	r5, #0
   123e4:	strne	sl, [sp, #24]
   123e8:	beq	12a90 <__assert_fail@plt+0x13c8>
   123ec:	mov	r0, r6
   123f0:	bl	16ef8 <fts_close@@Base>
   123f4:	cmp	r0, #0
   123f8:	beq	1242c <__assert_fail@plt+0xd64>
   123fc:	ldr	ip, [sp, #40]	; 0x28
   12400:	mov	r2, #5
   12404:	ldr	r1, [pc, #2784]	; 12eec <__assert_fail@plt+0x1824>
   12408:	mov	r0, #0
   1240c:	add	r1, pc, r1
   12410:	ldr	r4, [ip]
   12414:	bl	11410 <dcgettext@plt>
   12418:	mov	r1, r4
   1241c:	mov	r2, r0
   12420:	mov	r0, #0
   12424:	str	r0, [sp, #24]
   12428:	bl	114ac <error@plt>
   1242c:	ldr	ip, [sp, #44]	; 0x2c
   12430:	ldr	r2, [sp, #284]	; 0x11c
   12434:	ldr	r0, [sp, #24]
   12438:	ldr	r3, [ip]
   1243c:	cmp	r2, r3
   12440:	bne	12eb8 <__assert_fail@plt+0x17f0>
   12444:	add	sp, sp, #292	; 0x124
   12448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1244c:	ldrb	r4, [r7, #13]
   12450:	cmp	r4, #0
   12454:	bne	12324 <__assert_fail@plt+0xc5c>
   12458:	ldr	r1, [pc, #2704]	; 12ef0 <__assert_fail@plt+0x1828>
   1245c:	mov	r0, r4
   12460:	add	r1, pc, r1
   12464:	mov	r2, #5
   12468:	ldr	r5, [sl, #32]
   1246c:	bl	11410 <dcgettext@plt>
   12470:	mov	r6, r0
   12474:	ldr	r0, [sp, #28]
   12478:	bl	149dc <close_stdout@@Base+0x1a70>
   1247c:	mov	r1, r5
   12480:	mov	r2, r6
   12484:	mov	r3, r0
   12488:	mov	r0, r4
   1248c:	bl	114ac <error@plt>
   12490:	b	12324 <__assert_fail@plt+0xc5c>
   12494:	mov	r0, fp
   12498:	mov	r1, sl
   1249c:	bl	152c4 <close_stdout@@Base+0x2358>
   124a0:	cmp	r0, #0
   124a4:	bne	12ae0 <__assert_fail@plt+0x1418>
   124a8:	ldr	r0, [sp, #328]	; 0x148
   124ac:	ldr	r1, [sp, #332]	; 0x14c
   124b0:	cmn	r0, #1
   124b4:	movne	ip, #0
   124b8:	moveq	ip, #1
   124bc:	cmn	r1, #1
   124c0:	movne	r1, #0
   124c4:	moveq	r1, #1
   124c8:	ands	r8, ip, r1
   124cc:	str	r1, [sp, #20]
   124d0:	beq	124e0 <__assert_fail@plt+0xe18>
   124d4:	ldr	r3, [r7]
   124d8:	cmp	r3, #2
   124dc:	beq	12a50 <__assert_fail@plt+0x1388>
   124e0:	ldrb	r3, [r7, #12]
   124e4:	add	r6, sl, #72	; 0x48
   124e8:	cmp	r3, #0
   124ec:	beq	12500 <__assert_fail@plt+0xe38>
   124f0:	ldr	r3, [sl, #88]	; 0x58
   124f4:	and	r3, r3, #61440	; 0xf000
   124f8:	cmp	r3, #40960	; 0xa000
   124fc:	beq	12b1c <__assert_fail@plt+0x1454>
   12500:	cmp	ip, #0
   12504:	bne	12920 <__assert_fail@plt+0x1258>
   12508:	ldr	r3, [r6, #24]
   1250c:	ldr	r0, [sp, #328]	; 0x148
   12510:	cmp	r0, r3
   12514:	strne	ip, [sp, #16]
   12518:	beq	12920 <__assert_fail@plt+0x1258>
   1251c:	uxth	r4, r4
   12520:	cmp	r4, #1
   12524:	bls	127b0 <__assert_fail@plt+0x10e8>
   12528:	movw	r3, #65533	; 0xfffd
   1252c:	and	r3, r5, r3
   12530:	cmp	r3, #4
   12534:	beq	127b0 <__assert_fail@plt+0x10e8>
   12538:	ldr	r4, [sp, #16]
   1253c:	cmp	r4, #0
   12540:	beq	12ebc <__assert_fail@plt+0x17f4>
   12544:	ldrb	r4, [r7, #12]
   12548:	cmp	r4, #0
   1254c:	bne	12834 <__assert_fail@plt+0x116c>
   12550:	ldr	r0, [fp, #32]
   12554:	mov	r3, #256	; 0x100
   12558:	mov	r1, r9
   1255c:	str	r3, [sp]
   12560:	ldr	r2, [sp, #32]
   12564:	ldr	r3, [sp, #36]	; 0x24
   12568:	bl	11650 <fchownat@plt>
   1256c:	cmp	r0, #0
   12570:	bne	128e4 <__assert_fail@plt+0x121c>
   12574:	ldr	r8, [sp, #24]
   12578:	mov	r4, #1
   1257c:	ldr	r3, [r7]
   12580:	ldr	r2, [sp, #16]
   12584:	cmp	r3, #2
   12588:	bne	12344 <__assert_fail@plt+0xc7c>
   1258c:	ldrb	r3, [r7, #4]
   12590:	cmp	r3, #0
   12594:	strne	r8, [sp, #24]
   12598:	bne	1229c <__assert_fail@plt+0xbd4>
   1259c:	mov	r1, sl
   125a0:	mov	r0, fp
   125a4:	mov	r2, #4
   125a8:	str	r8, [sp, #24]
   125ac:	bl	178d4 <fts_set@@Base>
   125b0:	b	1229c <__assert_fail@plt+0xbd4>
   125b4:	ldrb	r3, [r7, #4]
   125b8:	cmp	r3, #0
   125bc:	beq	124a8 <__assert_fail@plt+0xde0>
   125c0:	ldr	ip, [r7, #8]
   125c4:	cmp	ip, #0
   125c8:	beq	1229c <__assert_fail@plt+0xbd4>
   125cc:	ldrd	r0, [sl, #168]	; 0xa8
   125d0:	ldrd	r2, [ip]
   125d4:	cmp	r1, r3
   125d8:	cmpeq	r0, r2
   125dc:	bne	1229c <__assert_fail@plt+0xbd4>
   125e0:	ldrd	r2, [sl, #72]	; 0x48
   125e4:	ldrd	r0, [ip, #8]
   125e8:	cmp	r3, r1
   125ec:	cmpeq	r2, r0
   125f0:	bne	1229c <__assert_fail@plt+0xbd4>
   125f4:	ldr	ip, [sp, #28]
   125f8:	ldrb	r3, [ip]
   125fc:	cmp	r3, #47	; 0x2f
   12600:	bne	12d74 <__assert_fail@plt+0x16ac>
   12604:	ldrb	r4, [ip, #1]
   12608:	cmp	r4, #0
   1260c:	bne	12d74 <__assert_fail@plt+0x16ac>
   12610:	ldr	r1, [pc, #2268]	; 12ef4 <__assert_fail@plt+0x182c>
   12614:	mov	r2, #5
   12618:	mov	r0, r4
   1261c:	add	r1, pc, r1
   12620:	bl	11410 <dcgettext@plt>
   12624:	mov	r5, r0
   12628:	ldr	r0, [sp, #28]
   1262c:	bl	149dc <close_stdout@@Base+0x1a70>
   12630:	mov	r1, r4
   12634:	mov	r2, r5
   12638:	mov	r3, r0
   1263c:	mov	r0, r4
   12640:	bl	114ac <error@plt>
   12644:	ldr	r1, [pc, #2220]	; 12ef8 <__assert_fail@plt+0x1830>
   12648:	mov	r0, #0
   1264c:	mov	r2, #5
   12650:	mov	r4, r0
   12654:	add	r1, pc, r1
   12658:	str	r0, [sp, #24]
   1265c:	bl	11410 <dcgettext@plt>
   12660:	mov	r1, r4
   12664:	mov	r2, r0
   12668:	mov	r0, r4
   1266c:	bl	114ac <error@plt>
   12670:	mov	r0, fp
   12674:	mov	r1, sl
   12678:	mov	r2, #4
   1267c:	bl	178d4 <fts_set@@Base>
   12680:	mov	r0, fp
   12684:	bl	17070 <fts_read@@Base>
   12688:	b	1229c <__assert_fail@plt+0xbd4>
   1268c:	ldr	ip, [sp, #36]	; 0x24
   12690:	cmn	ip, #1
   12694:	beq	126a4 <__assert_fail@plt+0xfdc>
   12698:	ldr	r1, [r6, #28]
   1269c:	cmp	ip, r1
   126a0:	bne	12370 <__assert_fail@plt+0xca8>
   126a4:	cmp	r3, #0
   126a8:	bne	1258c <__assert_fail@plt+0xec4>
   126ac:	cmp	r2, #0
   126b0:	moveq	r5, #3
   126b4:	beq	126c4 <__assert_fail@plt+0xffc>
   126b8:	cmp	r4, #0
   126bc:	movne	r5, #4
   126c0:	moveq	r5, #1
   126c4:	cmp	r6, #0
   126c8:	streq	r6, [sp, #16]
   126cc:	beq	126e8 <__assert_fail@plt+0x1020>
   126d0:	ldr	r0, [r6, #24]
   126d4:	bl	12160 <__assert_fail@plt+0xa98>
   126d8:	str	r0, [sp, #16]
   126dc:	ldr	r0, [r6, #28]
   126e0:	bl	120f4 <__assert_fail@plt+0xa2c>
   126e4:	mov	r6, r0
   126e8:	cmp	r5, #1
   126ec:	ldr	r9, [r7, #16]
   126f0:	ldr	r4, [r7, #20]
   126f4:	beq	12978 <__assert_fail@plt+0x12b0>
   126f8:	mov	r1, r4
   126fc:	mov	r0, r9
   12700:	bl	12050 <__assert_fail@plt+0x988>
   12704:	cmp	r4, #0
   12708:	movne	r1, r6
   1270c:	moveq	r1, #0
   12710:	cmp	r9, #0
   12714:	str	r0, [sp, #24]
   12718:	ldr	r0, [sp, #16]
   1271c:	moveq	r0, #0
   12720:	bl	12050 <__assert_fail@plt+0x988>
   12724:	cmp	r5, #3
   12728:	str	r0, [sp, #20]
   1272c:	beq	12948 <__assert_fail@plt+0x1280>
   12730:	cmp	r5, #4
   12734:	beq	128c0 <__assert_fail@plt+0x11f8>
   12738:	cmp	r9, #0
   1273c:	beq	12b88 <__assert_fail@plt+0x14c0>
   12740:	ldr	r1, [pc, #1972]	; 12efc <__assert_fail@plt+0x1834>
   12744:	mov	r0, #0
   12748:	mov	r2, #5
   1274c:	add	r1, pc, r1
   12750:	bl	11410 <dcgettext@plt>
   12754:	mov	r4, r0
   12758:	ldr	r0, [sp, #28]
   1275c:	bl	149dc <close_stdout@@Base+0x1a70>
   12760:	ldr	ip, [sp, #24]
   12764:	mov	r1, r4
   12768:	ldr	r3, [sp, #20]
   1276c:	str	ip, [sp]
   12770:	mov	r2, r0
   12774:	mov	r0, #1
   12778:	bl	115a8 <__printf_chk@plt>
   1277c:	ldr	r0, [sp, #20]
   12780:	bl	113bc <free@plt>
   12784:	ldr	r0, [sp, #24]
   12788:	bl	113bc <free@plt>
   1278c:	ldr	r0, [sp, #16]
   12790:	bl	113bc <free@plt>
   12794:	mov	r0, r6
   12798:	bl	113bc <free@plt>
   1279c:	ldrb	r3, [r7, #4]
   127a0:	cmp	r3, #0
   127a4:	strne	r8, [sp, #24]
   127a8:	bne	1229c <__assert_fail@plt+0xbd4>
   127ac:	b	1259c <__assert_fail@plt+0xed4>
   127b0:	ldr	r3, [r7, #8]
   127b4:	cmp	r3, #0
   127b8:	beq	12538 <__assert_fail@plt+0xe70>
   127bc:	ldrd	r4, [r6, #96]	; 0x60
   127c0:	ldrd	r0, [r3]
   127c4:	cmp	r5, r1
   127c8:	cmpeq	r4, r0
   127cc:	bne	12538 <__assert_fail@plt+0xe70>
   127d0:	ldrd	r0, [r6]
   127d4:	ldrd	r2, [r3, #8]
   127d8:	cmp	r1, r3
   127dc:	cmpeq	r0, r2
   127e0:	bne	12538 <__assert_fail@plt+0xe70>
   127e4:	ldr	r4, [sp, #28]
   127e8:	ldrb	r3, [r4]
   127ec:	cmp	r3, #47	; 0x2f
   127f0:	bne	12c88 <__assert_fail@plt+0x15c0>
   127f4:	ldrb	r4, [r4, #1]
   127f8:	cmp	r4, #0
   127fc:	bne	12c88 <__assert_fail@plt+0x15c0>
   12800:	ldr	r1, [sp, #68]	; 0x44
   12804:	mov	r2, #5
   12808:	mov	r0, r4
   1280c:	bl	11410 <dcgettext@plt>
   12810:	mov	r5, r0
   12814:	ldr	r0, [sp, #28]
   12818:	bl	149dc <close_stdout@@Base+0x1a70>
   1281c:	mov	r1, r4
   12820:	mov	r2, r5
   12824:	mov	r3, r0
   12828:	mov	r0, r4
   1282c:	bl	114ac <error@plt>
   12830:	b	12cd0 <__assert_fail@plt+0x1608>
   12834:	cmp	r8, #0
   12838:	ldr	r4, [fp, #32]
   1283c:	beq	129ac <__assert_fail@plt+0x12e4>
   12840:	mov	r3, #0
   12844:	mov	r0, r4
   12848:	str	r3, [sp]
   1284c:	mov	r1, r9
   12850:	ldr	r2, [sp, #32]
   12854:	ldr	r3, [sp, #36]	; 0x24
   12858:	bl	11650 <fchownat@plt>
   1285c:	cmp	r0, #0
   12860:	beq	12c78 <__assert_fail@plt+0x15b0>
   12864:	ldrb	r8, [r7, #13]
   12868:	cmp	r8, #0
   1286c:	bne	128fc <__assert_fail@plt+0x1234>
   12870:	ldr	ip, [sp, #32]
   12874:	mov	r2, #5
   12878:	mov	r0, r8
   1287c:	cmn	ip, #1
   12880:	ldr	ip, [sp, #40]	; 0x28
   12884:	ldrne	r1, [sp, #48]	; 0x30
   12888:	ldreq	r1, [sp, #52]	; 0x34
   1288c:	ldr	r4, [ip]
   12890:	bl	11410 <dcgettext@plt>
   12894:	mov	r5, r0
   12898:	ldr	r0, [sp, #28]
   1289c:	bl	149dc <close_stdout@@Base+0x1a70>
   128a0:	mov	r1, r4
   128a4:	mov	r2, r5
   128a8:	mov	r4, #1
   128ac:	mov	r3, r0
   128b0:	mov	r0, #0
   128b4:	bl	114ac <error@plt>
   128b8:	mov	r2, #0
   128bc:	b	12338 <__assert_fail@plt+0xc70>
   128c0:	cmp	r9, #0
   128c4:	beq	12b64 <__assert_fail@plt+0x149c>
   128c8:	ldr	r1, [pc, #1584]	; 12f00 <__assert_fail@plt+0x1838>
   128cc:	mov	r0, #0
   128d0:	mov	r2, #5
   128d4:	add	r1, pc, r1
   128d8:	bl	11410 <dcgettext@plt>
   128dc:	mov	r4, r0
   128e0:	b	12758 <__assert_fail@plt+0x1090>
   128e4:	ldr	ip, [sp, #40]	; 0x28
   128e8:	ldr	r3, [ip]
   128ec:	cmp	r3, #95	; 0x5f
   128f0:	bne	12864 <__assert_fail@plt+0x119c>
   128f4:	ldr	r8, [sp, #24]
   128f8:	b	1257c <__assert_fail@plt+0xeb4>
   128fc:	mov	r8, #0
   12900:	mov	r4, #1
   12904:	mov	r2, r8
   12908:	b	12338 <__assert_fail@plt+0xc70>
   1290c:	ldr	r3, [r7]
   12910:	cmp	r3, #2
   12914:	moveq	r3, #8
   12918:	movne	r3, #0
   1291c:	b	12230 <__assert_fail@plt+0xb68>
   12920:	ldr	r1, [sp, #20]
   12924:	cmp	r1, #0
   12928:	bne	12b58 <__assert_fail@plt+0x1490>
   1292c:	ldr	r3, [r6, #28]
   12930:	ldr	r2, [sp, #332]	; 0x14c
   12934:	subs	r2, r2, r3
   12938:	rsbs	r3, r2, #0
   1293c:	adcs	r3, r3, r2
   12940:	str	r3, [sp, #16]
   12944:	b	1251c <__assert_fail@plt+0xe54>
   12948:	ldr	ip, [sp, #20]
   1294c:	cmp	ip, #0
   12950:	beq	12c04 <__assert_fail@plt+0x153c>
   12954:	cmp	r9, #0
   12958:	beq	12bac <__assert_fail@plt+0x14e4>
   1295c:	ldr	r1, [pc, #1440]	; 12f04 <__assert_fail@plt+0x183c>
   12960:	mov	r0, #0
   12964:	mov	r2, #5
   12968:	add	r1, pc, r1
   1296c:	bl	11410 <dcgettext@plt>
   12970:	mov	r4, r0
   12974:	b	12758 <__assert_fail@plt+0x1090>
   12978:	ldr	r1, [pc, #1416]	; 12f08 <__assert_fail@plt+0x1840>
   1297c:	mov	r2, #5
   12980:	mov	r0, #0
   12984:	add	r1, pc, r1
   12988:	bl	11410 <dcgettext@plt>
   1298c:	mov	r4, r0
   12990:	ldr	r0, [sp, #28]
   12994:	bl	149dc <close_stdout@@Base+0x1a70>
   12998:	mov	r1, r4
   1299c:	mov	r2, r0
   129a0:	mov	r0, r5
   129a4:	bl	115a8 <__printf_chk@plt>
   129a8:	b	1278c <__assert_fail@plt+0x10c4>
   129ac:	ldr	r3, [r6, #16]
   129b0:	and	r3, r3, #61440	; 0xf000
   129b4:	cmp	r3, #32768	; 0x8000
   129b8:	beq	12bd0 <__assert_fail@plt+0x1508>
   129bc:	cmp	r3, #16384	; 0x4000
   129c0:	moveq	r5, #18688	; 0x4900
   129c4:	bne	12840 <__assert_fail@plt+0x1178>
   129c8:	mov	r0, r4
   129cc:	mov	r1, r9
   129d0:	mov	r2, r5
   129d4:	str	ip, [sp, #8]
   129d8:	bl	113c8 <__openat64_2@plt>
   129dc:	ldr	ip, [sp, #8]
   129e0:	subs	r3, r0, #0
   129e4:	blt	12ab8 <__assert_fail@plt+0x13f0>
   129e8:	mov	r1, r3
   129ec:	mov	r0, #3
   129f0:	add	r2, sp, #176	; 0xb0
   129f4:	str	r3, [sp, #12]
   129f8:	str	ip, [sp, #8]
   129fc:	bl	11458 <__fxstat64@plt>
   12a00:	ldr	r3, [sp, #12]
   12a04:	ldr	ip, [sp, #8]
   12a08:	cmp	r0, #0
   12a0c:	bne	12cf8 <__assert_fail@plt+0x1630>
   12a10:	add	r2, sp, #512	; 0x200
   12a14:	ldrd	r0, [r6, #96]	; 0x60
   12a18:	ldrd	r4, [r2, #-240]	; 0xffffff10
   12a1c:	cmp	r1, r5
   12a20:	cmpeq	r0, r4
   12a24:	beq	12c34 <__assert_fail@plt+0x156c>
   12a28:	ldr	r4, [sp, #40]	; 0x28
   12a2c:	mov	r0, r3
   12a30:	ldr	r5, [r4]
   12a34:	bl	1168c <close@plt>
   12a38:	mov	ip, #0
   12a3c:	str	ip, [sp, #16]
   12a40:	ldr	ip, [sp, #40]	; 0x28
   12a44:	mov	r4, #1
   12a48:	str	r5, [ip]
   12a4c:	b	1257c <__assert_fail@plt+0xeb4>
   12a50:	ldr	r3, [r7, #8]
   12a54:	cmp	r3, #0
   12a58:	bne	124e0 <__assert_fail@plt+0xe18>
   12a5c:	ldrb	r3, [r7, #12]
   12a60:	add	r6, sl, #72	; 0x48
   12a64:	cmp	r3, #0
   12a68:	moveq	r0, #1
   12a6c:	streq	r0, [sp, #16]
   12a70:	beq	1251c <__assert_fail@plt+0xe54>
   12a74:	b	124f0 <__assert_fail@plt+0xe28>
   12a78:	mov	r2, #1
   12a7c:	mov	r1, sl
   12a80:	str	r2, [sl, #16]
   12a84:	mov	r0, fp
   12a88:	bl	178d4 <fts_set@@Base>
   12a8c:	b	1229c <__assert_fail@plt+0xbd4>
   12a90:	ldr	r1, [pc, #1140]	; 12f0c <__assert_fail@plt+0x1844>
   12a94:	mov	r2, #5
   12a98:	add	r1, pc, r1
   12a9c:	bl	11410 <dcgettext@plt>
   12aa0:	mov	r1, r4
   12aa4:	mov	r2, r0
   12aa8:	mov	r0, r5
   12aac:	bl	114ac <error@plt>
   12ab0:	str	r5, [sp, #24]
   12ab4:	b	123ec <__assert_fail@plt+0xd24>
   12ab8:	ldr	r0, [sp, #40]	; 0x28
   12abc:	ldr	r3, [r0]
   12ac0:	cmp	r3, #13
   12ac4:	bne	12864 <__assert_fail@plt+0x119c>
   12ac8:	ldr	r3, [r6, #16]
   12acc:	and	r3, r3, #61440	; 0xf000
   12ad0:	cmp	r3, #32768	; 0x8000
   12ad4:	beq	12e1c <__assert_fail@plt+0x1754>
   12ad8:	ldr	r4, [fp, #32]
   12adc:	b	12840 <__assert_fail@plt+0x1178>
   12ae0:	ldr	r1, [pc, #1064]	; 12f10 <__assert_fail@plt+0x1848>
   12ae4:	mov	r2, #5
   12ae8:	mov	r0, #0
   12aec:	str	r0, [sp, #24]
   12af0:	add	r1, pc, r1
   12af4:	bl	11410 <dcgettext@plt>
   12af8:	mov	r4, r0
   12afc:	ldr	r0, [sp, #28]
   12b00:	bl	149dc <close_stdout@@Base+0x1a70>
   12b04:	mov	r2, r4
   12b08:	mov	r3, r0
   12b0c:	mov	r0, #0
   12b10:	mov	r1, r0
   12b14:	bl	114ac <error@plt>
   12b18:	b	1229c <__assert_fail@plt+0xbd4>
   12b1c:	add	r6, sp, #72	; 0x48
   12b20:	ldr	r1, [fp, #32]
   12b24:	mov	r2, #0
   12b28:	mov	r0, #3
   12b2c:	str	r2, [sp]
   12b30:	mov	r3, r6
   12b34:	mov	r2, r9
   12b38:	str	ip, [sp, #8]
   12b3c:	bl	11440 <__fxstatat64@plt>
   12b40:	ldr	ip, [sp, #8]
   12b44:	cmp	r0, #0
   12b48:	bne	12bd8 <__assert_fail@plt+0x1510>
   12b4c:	ldrh	r5, [sl, #60]	; 0x3c
   12b50:	sub	r4, r5, #1
   12b54:	b	12500 <__assert_fail@plt+0xe38>
   12b58:	mov	r2, #1
   12b5c:	str	r2, [sp, #16]
   12b60:	b	1251c <__assert_fail@plt+0xe54>
   12b64:	cmp	r4, #0
   12b68:	beq	12de4 <__assert_fail@plt+0x171c>
   12b6c:	ldr	r1, [pc, #928]	; 12f14 <__assert_fail@plt+0x184c>
   12b70:	mov	r0, r9
   12b74:	mov	r2, #5
   12b78:	add	r1, pc, r1
   12b7c:	bl	11410 <dcgettext@plt>
   12b80:	mov	r4, r0
   12b84:	b	12758 <__assert_fail@plt+0x1090>
   12b88:	cmp	r4, #0
   12b8c:	beq	12dc8 <__assert_fail@plt+0x1700>
   12b90:	ldr	r1, [pc, #896]	; 12f18 <__assert_fail@plt+0x1850>
   12b94:	mov	r0, r9
   12b98:	mov	r2, #5
   12b9c:	add	r1, pc, r1
   12ba0:	bl	11410 <dcgettext@plt>
   12ba4:	mov	r4, r0
   12ba8:	b	12758 <__assert_fail@plt+0x1090>
   12bac:	cmp	r4, #0
   12bb0:	beq	12e00 <__assert_fail@plt+0x1738>
   12bb4:	ldr	r1, [pc, #864]	; 12f1c <__assert_fail@plt+0x1854>
   12bb8:	mov	r0, r9
   12bbc:	mov	r2, #5
   12bc0:	add	r1, pc, r1
   12bc4:	bl	11410 <dcgettext@plt>
   12bc8:	mov	r4, r0
   12bcc:	b	12758 <__assert_fail@plt+0x1090>
   12bd0:	mov	r5, #2304	; 0x900
   12bd4:	b	129c8 <__assert_fail@plt+0x1300>
   12bd8:	ldrb	r4, [r7, #13]
   12bdc:	cmp	r4, #0
   12be0:	beq	12d14 <__assert_fail@plt+0x164c>
   12be4:	mov	r2, #0
   12be8:	ldr	ip, [sp, #24]
   12bec:	mov	r4, #1
   12bf0:	and	r8, r2, ip
   12bf4:	mov	ip, #0
   12bf8:	str	ip, [sp, #16]
   12bfc:	uxtb	r8, r8
   12c00:	b	12338 <__assert_fail@plt+0xc70>
   12c04:	cmp	r9, #0
   12c08:	beq	12d54 <__assert_fail@plt+0x168c>
   12c0c:	ldr	r1, [pc, #780]	; 12f20 <__assert_fail@plt+0x1858>
   12c10:	mov	r2, #5
   12c14:	add	r1, pc, r1
   12c18:	bl	11410 <dcgettext@plt>
   12c1c:	mov	r4, r0
   12c20:	ldr	ip, [sp, #24]
   12c24:	str	ip, [sp, #20]
   12c28:	mov	ip, #0
   12c2c:	str	ip, [sp, #24]
   12c30:	b	12758 <__assert_fail@plt+0x1090>
   12c34:	ldrd	r0, [r6]
   12c38:	ldrd	r4, [sp, #176]	; 0xb0
   12c3c:	cmp	r1, r5
   12c40:	cmpeq	r0, r4
   12c44:	bne	12a28 <__assert_fail@plt+0x1360>
   12c48:	cmp	ip, #0
   12c4c:	bne	12e68 <__assert_fail@plt+0x17a0>
   12c50:	ldr	r2, [sp, #200]	; 0xc8
   12c54:	ldr	r4, [sp, #328]	; 0x148
   12c58:	cmp	r4, r2
   12c5c:	beq	12e68 <__assert_fail@plt+0x17a0>
   12c60:	ldr	ip, [sp, #40]	; 0x28
   12c64:	mov	r0, r3
   12c68:	ldr	r4, [ip]
   12c6c:	bl	1168c <close@plt>
   12c70:	ldr	ip, [sp, #40]	; 0x28
   12c74:	str	r4, [ip]
   12c78:	ldr	r8, [sp, #24]
   12c7c:	mov	r4, #1
   12c80:	ldr	r2, [sp, #16]
   12c84:	b	12338 <__assert_fail@plt+0xc70>
   12c88:	mov	r2, #5
   12c8c:	ldr	r1, [sp, #60]	; 0x3c
   12c90:	mov	r0, #0
   12c94:	bl	11410 <dcgettext@plt>
   12c98:	ldr	r1, [sp, #28]
   12c9c:	mov	r5, r0
   12ca0:	mov	r0, #0
   12ca4:	bl	149d4 <close_stdout@@Base+0x1a68>
   12ca8:	ldr	r1, [sp, #64]	; 0x40
   12cac:	mov	r4, r0
   12cb0:	mov	r0, #1
   12cb4:	bl	149d4 <close_stdout@@Base+0x1a68>
   12cb8:	mov	r2, r5
   12cbc:	mov	r3, r4
   12cc0:	str	r0, [sp]
   12cc4:	mov	r0, #0
   12cc8:	mov	r1, r0
   12ccc:	bl	114ac <error@plt>
   12cd0:	ldr	r1, [sp, #56]	; 0x38
   12cd4:	mov	r0, #0
   12cd8:	mov	r2, #5
   12cdc:	str	r0, [sp, #24]
   12ce0:	bl	11410 <dcgettext@plt>
   12ce4:	mov	r2, r0
   12ce8:	mov	r0, #0
   12cec:	mov	r1, r0
   12cf0:	bl	114ac <error@plt>
   12cf4:	b	1229c <__assert_fail@plt+0xbd4>
   12cf8:	ldr	ip, [sp, #40]	; 0x28
   12cfc:	mov	r0, r3
   12d00:	ldr	r4, [ip]
   12d04:	bl	1168c <close@plt>
   12d08:	ldr	ip, [sp, #40]	; 0x28
   12d0c:	str	r4, [ip]
   12d10:	b	12864 <__assert_fail@plt+0x119c>
   12d14:	ldr	ip, [sp, #40]	; 0x28
   12d18:	mov	r2, #5
   12d1c:	ldr	r1, [pc, #512]	; 12f24 <__assert_fail@plt+0x185c>
   12d20:	mov	r0, r4
   12d24:	add	r1, pc, r1
   12d28:	ldr	r5, [ip]
   12d2c:	bl	11410 <dcgettext@plt>
   12d30:	mov	r8, r0
   12d34:	ldr	r0, [sp, #28]
   12d38:	bl	149dc <close_stdout@@Base+0x1a70>
   12d3c:	mov	r1, r5
   12d40:	mov	r2, r8
   12d44:	mov	r3, r0
   12d48:	mov	r0, r4
   12d4c:	bl	114ac <error@plt>
   12d50:	b	12be4 <__assert_fail@plt+0x151c>
   12d54:	cmp	r4, #0
   12d58:	beq	12e50 <__assert_fail@plt+0x1788>
   12d5c:	ldr	r1, [pc, #452]	; 12f28 <__assert_fail@plt+0x1860>
   12d60:	mov	r2, #5
   12d64:	add	r1, pc, r1
   12d68:	bl	11410 <dcgettext@plt>
   12d6c:	mov	r4, r0
   12d70:	b	12c20 <__assert_fail@plt+0x1558>
   12d74:	ldr	r1, [pc, #432]	; 12f2c <__assert_fail@plt+0x1864>
   12d78:	mov	r2, #5
   12d7c:	mov	r0, #0
   12d80:	add	r1, pc, r1
   12d84:	bl	11410 <dcgettext@plt>
   12d88:	ldr	r1, [sp, #28]
   12d8c:	mov	r5, r0
   12d90:	mov	r0, #0
   12d94:	bl	149d4 <close_stdout@@Base+0x1a68>
   12d98:	ldr	r1, [pc, #400]	; 12f30 <__assert_fail@plt+0x1868>
   12d9c:	add	r1, pc, r1
   12da0:	mov	r4, r0
   12da4:	mov	r0, #1
   12da8:	bl	149d4 <close_stdout@@Base+0x1a68>
   12dac:	mov	r2, r5
   12db0:	mov	r3, r4
   12db4:	str	r0, [sp]
   12db8:	mov	r0, #0
   12dbc:	mov	r1, r0
   12dc0:	bl	114ac <error@plt>
   12dc4:	b	12644 <__assert_fail@plt+0xf7c>
   12dc8:	ldr	r1, [pc, #356]	; 12f34 <__assert_fail@plt+0x186c>
   12dcc:	mov	r0, r4
   12dd0:	mov	r2, #5
   12dd4:	add	r1, pc, r1
   12dd8:	bl	11410 <dcgettext@plt>
   12ddc:	mov	r4, r0
   12de0:	b	12758 <__assert_fail@plt+0x1090>
   12de4:	ldr	r1, [pc, #332]	; 12f38 <__assert_fail@plt+0x1870>
   12de8:	mov	r0, r4
   12dec:	mov	r2, #5
   12df0:	add	r1, pc, r1
   12df4:	bl	11410 <dcgettext@plt>
   12df8:	mov	r4, r0
   12dfc:	b	12758 <__assert_fail@plt+0x1090>
   12e00:	ldr	r1, [pc, #308]	; 12f3c <__assert_fail@plt+0x1874>
   12e04:	mov	r0, r4
   12e08:	mov	r2, #5
   12e0c:	add	r1, pc, r1
   12e10:	bl	11410 <dcgettext@plt>
   12e14:	mov	r4, r0
   12e18:	b	12758 <__assert_fail@plt+0x1090>
   12e1c:	mov	r0, r4
   12e20:	orr	r2, r5, #1
   12e24:	mov	r1, r9
   12e28:	str	ip, [sp, #8]
   12e2c:	bl	113c8 <__openat64_2@plt>
   12e30:	ldr	ip, [sp, #8]
   12e34:	subs	r3, r0, #0
   12e38:	bge	129e8 <__assert_fail@plt+0x1320>
   12e3c:	ldr	r4, [sp, #40]	; 0x28
   12e40:	ldr	r3, [r4]
   12e44:	cmp	r3, #13
   12e48:	bne	12864 <__assert_fail@plt+0x119c>
   12e4c:	b	12ad8 <__assert_fail@plt+0x1410>
   12e50:	ldr	r1, [pc, #232]	; 12f40 <__assert_fail@plt+0x1878>
   12e54:	mov	r2, #5
   12e58:	add	r1, pc, r1
   12e5c:	bl	11410 <dcgettext@plt>
   12e60:	mov	r4, r0
   12e64:	b	12c20 <__assert_fail@plt+0x1558>
   12e68:	ldr	ip, [sp, #20]
   12e6c:	cmp	ip, #0
   12e70:	bne	12e84 <__assert_fail@plt+0x17bc>
   12e74:	ldr	r2, [sp, #204]	; 0xcc
   12e78:	ldr	r4, [sp, #332]	; 0x14c
   12e7c:	cmp	r4, r2
   12e80:	bne	12c60 <__assert_fail@plt+0x1598>
   12e84:	mov	r0, r3
   12e88:	ldr	r1, [sp, #32]
   12e8c:	ldr	r2, [sp, #36]	; 0x24
   12e90:	str	r3, [sp, #12]
   12e94:	bl	11554 <fchown@plt>
   12e98:	ldr	r3, [sp, #12]
   12e9c:	cmp	r0, #0
   12ea0:	bne	12cf8 <__assert_fail@plt+0x1630>
   12ea4:	mov	r0, r3
   12ea8:	bl	1168c <close@plt>
   12eac:	cmp	r0, #0
   12eb0:	bne	12864 <__assert_fail@plt+0x119c>
   12eb4:	b	12c78 <__assert_fail@plt+0x15b0>
   12eb8:	bl	1141c <__stack_chk_fail@plt>
   12ebc:	mov	r2, #1
   12ec0:	b	12be8 <__assert_fail@plt+0x1520>
   12ec4:	andeq	r9, r1, r4, lsr #28
   12ec8:	andeq	r0, r0, r4, asr #2
   12ecc:	andeq	r8, r0, r0, asr #22
   12ed0:	andeq	r8, r0, ip, lsl fp
   12ed4:	ldrdeq	r8, [r0], -r4
   12ed8:	muleq	r0, r0, r9
   12edc:			; <UNDEFINED> instruction: 0x000088b4
   12ee0:	andeq	r8, r0, r0, lsr r9
   12ee4:	andeq	r8, r0, r4, asr #18
   12ee8:	strdeq	r8, [r0], -r4
   12eec:	andeq	r8, r0, r4, asr fp
   12ef0:	andeq	r8, r0, r4, lsl r8
   12ef4:	andeq	r8, r0, r4, lsr #11
   12ef8:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12efc:	andeq	r8, r0, r4, lsl #13
   12f00:	andeq	r8, r0, r4, lsr r6
   12f04:	ldrdeq	r8, [r0], -r4
   12f08:	andeq	r8, r0, r4, lsl r4
   12f0c:	andeq	r8, r0, r8, lsl r1
   12f10:	andeq	r8, r0, r0, lsr #3
   12f14:			; <UNDEFINED> instruction: 0x000083b0
   12f18:	andeq	r8, r0, ip, asr r2
   12f1c:	andeq	r8, r0, ip, lsr #5
   12f20:	andeq	r8, r0, r8, lsr #5
   12f24:	andeq	r8, r0, r8, lsr #32
   12f28:	andeq	r8, r0, r0, lsl #3
   12f2c:	andeq	r7, r0, r0, ror lr
   12f30:	andeq	r7, r0, r8, lsl #27
   12f34:	andeq	r8, r0, r8, asr #32
   12f38:	andeq	r8, r0, r4, asr r1
   12f3c:	andeq	r8, r0, ip, lsl #1
   12f40:	andeq	r8, r0, r0, asr #32
   12f44:	ldr	r3, [pc, #8]	; 12f54 <__assert_fail@plt+0x188c>
   12f48:	add	r3, pc, r3
   12f4c:	str	r0, [r3]
   12f50:	bx	lr
   12f54:	muleq	r1, r8, r2
   12f58:	ldr	r3, [pc, #8]	; 12f68 <__assert_fail@plt+0x18a0>
   12f5c:	add	r3, pc, r3
   12f60:	strb	r0, [r3, #4]
   12f64:	bx	lr
   12f68:	andeq	r9, r1, r4, lsl #5

00012f6c <close_stdout@@Base>:
   12f6c:	push	{r4, r5, r6, r7, lr}
   12f70:	sub	sp, sp, #12
   12f74:	ldr	r4, [pc, #228]	; 13060 <close_stdout@@Base+0xf4>
   12f78:	ldr	r3, [pc, #228]	; 13064 <close_stdout@@Base+0xf8>
   12f7c:	add	r4, pc, r4
   12f80:	ldr	r3, [r4, r3]
   12f84:	ldr	r0, [r3]
   12f88:	bl	17ad4 <fts_children@@Base+0x1d4>
   12f8c:	cmp	r0, #0
   12f90:	beq	12fb8 <close_stdout@@Base+0x4c>
   12f94:	ldr	r3, [pc, #204]	; 13068 <close_stdout@@Base+0xfc>
   12f98:	add	r3, pc, r3
   12f9c:	ldrb	r3, [r3, #4]
   12fa0:	cmp	r3, #0
   12fa4:	beq	12fd8 <close_stdout@@Base+0x6c>
   12fa8:	bl	11578 <__errno_location@plt>
   12fac:	ldr	r3, [r0]
   12fb0:	cmp	r3, #32
   12fb4:	bne	12fd8 <close_stdout@@Base+0x6c>
   12fb8:	ldr	r3, [pc, #172]	; 1306c <close_stdout@@Base+0x100>
   12fbc:	ldr	r3, [r4, r3]
   12fc0:	ldr	r0, [r3]
   12fc4:	bl	17ad4 <fts_children@@Base+0x1d4>
   12fc8:	cmp	r0, #0
   12fcc:	bne	1302c <close_stdout@@Base+0xc0>
   12fd0:	add	sp, sp, #12
   12fd4:	pop	{r4, r5, r6, r7, pc}
   12fd8:	ldr	r1, [pc, #144]	; 13070 <close_stdout@@Base+0x104>
   12fdc:	mov	r0, #0
   12fe0:	mov	r2, #5
   12fe4:	add	r1, pc, r1
   12fe8:	bl	11410 <dcgettext@plt>
   12fec:	ldr	r3, [pc, #128]	; 13074 <close_stdout@@Base+0x108>
   12ff0:	ldr	r5, [pc, r3]
   12ff4:	cmp	r5, #0
   12ff8:	mov	r6, r0
   12ffc:	beq	1303c <close_stdout@@Base+0xd0>
   13000:	bl	11578 <__errno_location@plt>
   13004:	ldr	r7, [r0]
   13008:	mov	r0, r5
   1300c:	bl	14888 <close_stdout@@Base+0x191c>
   13010:	ldr	r2, [pc, #96]	; 13078 <close_stdout@@Base+0x10c>
   13014:	str	r6, [sp]
   13018:	mov	r1, r7
   1301c:	add	r2, pc, r2
   13020:	mov	r3, r0
   13024:	mov	r0, #0
   13028:	bl	114ac <error@plt>
   1302c:	ldr	r3, [pc, #72]	; 1307c <close_stdout@@Base+0x110>
   13030:	ldr	r3, [r4, r3]
   13034:	ldr	r0, [r3]
   13038:	bl	113d4 <_exit@plt>
   1303c:	bl	11578 <__errno_location@plt>
   13040:	ldr	r2, [pc, #56]	; 13080 <close_stdout@@Base+0x114>
   13044:	add	r2, pc, r2
   13048:	mov	r3, r0
   1304c:	mov	r0, r5
   13050:	ldr	r1, [r3]
   13054:	mov	r3, r6
   13058:	bl	114ac <error@plt>
   1305c:	b	1302c <close_stdout@@Base+0xc0>
   13060:	andeq	r9, r1, ip, ror r0
   13064:	andeq	r0, r0, r0, ror #2
   13068:	andeq	r9, r1, r8, asr #4
   1306c:	andeq	r0, r0, r0, asr r1
   13070:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   13074:	strdeq	r9, [r1], -r0
   13078:	andeq	r7, r0, ip, ror #30
   1307c:	andeq	r0, r0, r4, ror #2
   13080:	andeq	r7, r0, r8, asr #30
   13084:	ldrb	r3, [r0]
   13088:	cmp	r3, #47	; 0x2f
   1308c:	bne	130a8 <close_stdout@@Base+0x13c>
   13090:	add	r2, r0, #1
   13094:	mov	r0, r2
   13098:	add	r2, r2, #1
   1309c:	ldrb	r3, [r0]
   130a0:	cmp	r3, #47	; 0x2f
   130a4:	beq	13094 <close_stdout@@Base+0x128>
   130a8:	cmp	r3, #0
   130ac:	bxeq	lr
   130b0:	mov	r2, r0
   130b4:	mov	r1, #0
   130b8:	cmp	r3, #47	; 0x2f
   130bc:	moveq	r1, #1
   130c0:	beq	130d0 <close_stdout@@Base+0x164>
   130c4:	cmp	r1, #0
   130c8:	movne	r0, r2
   130cc:	movne	r1, #0
   130d0:	ldrb	r3, [r2, #1]!
   130d4:	cmp	r3, #0
   130d8:	bne	130b8 <close_stdout@@Base+0x14c>
   130dc:	bx	lr
   130e0:	push	{r4, lr}
   130e4:	mov	r4, r0
   130e8:	bl	11530 <strlen@plt>
   130ec:	cmp	r0, #1
   130f0:	popls	{r4, pc}
   130f4:	sub	r3, r0, #1
   130f8:	ldrb	r2, [r4, r3]
   130fc:	cmp	r2, #47	; 0x2f
   13100:	popne	{r4, pc}
   13104:	mov	r0, r3
   13108:	cmp	r0, #1
   1310c:	sub	r3, r3, #1
   13110:	beq	13124 <close_stdout@@Base+0x1b8>
   13114:	ldrb	r2, [r4, r3]
   13118:	cmp	r2, #47	; 0x2f
   1311c:	popne	{r4, pc}
   13120:	b	13104 <close_stdout@@Base+0x198>
   13124:	pop	{r4, pc}
   13128:	push	{r3, r4, r5, r6, r7, lr}
   1312c:	add	r6, r2, #19
   13130:	mov	r4, r0
   13134:	mov	r5, r1
   13138:	mov	r3, #0
   1313c:	strb	r3, [r2, #20]
   13140:	mov	r0, r4
   13144:	mov	r1, r5
   13148:	mov	r2, #10
   1314c:	mov	r3, #0
   13150:	bl	19844 <fts_children@@Base+0x1f44>
   13154:	mov	r7, r6
   13158:	mov	r0, r4
   1315c:	mov	r1, r5
   13160:	mov	r3, #0
   13164:	add	ip, r2, #48	; 0x30
   13168:	mov	r2, #10
   1316c:	strb	ip, [r6], #-1
   13170:	bl	19844 <fts_children@@Base+0x1f44>
   13174:	mov	r4, r0
   13178:	mov	r5, r1
   1317c:	orrs	r3, r4, r5
   13180:	bne	13140 <close_stdout@@Base+0x1d4>
   13184:	mov	r0, r7
   13188:	pop	{r3, r4, r5, r6, r7, pc}
   1318c:	push	{r3, r4, r5, r6, r7, lr}
   13190:	subs	r4, r0, #0
   13194:	ldr	r5, [pc, #172]	; 13248 <close_stdout@@Base+0x2dc>
   13198:	add	r5, pc, r5
   1319c:	beq	13224 <close_stdout@@Base+0x2b8>
   131a0:	mov	r1, #47	; 0x2f
   131a4:	bl	115fc <strrchr@plt>
   131a8:	subs	r6, r0, #0
   131ac:	beq	13208 <close_stdout@@Base+0x29c>
   131b0:	add	r7, r6, #1
   131b4:	rsb	r3, r4, r7
   131b8:	cmp	r3, #6
   131bc:	ble	13208 <close_stdout@@Base+0x29c>
   131c0:	ldr	r1, [pc, #132]	; 1324c <close_stdout@@Base+0x2e0>
   131c4:	sub	r0, r6, #6
   131c8:	mov	r2, #7
   131cc:	add	r1, pc, r1
   131d0:	bl	11674 <strncmp@plt>
   131d4:	cmp	r0, #0
   131d8:	bne	13208 <close_stdout@@Base+0x29c>
   131dc:	ldr	r1, [pc, #108]	; 13250 <close_stdout@@Base+0x2e4>
   131e0:	mov	r0, r7
   131e4:	mov	r2, #3
   131e8:	add	r1, pc, r1
   131ec:	bl	11674 <strncmp@plt>
   131f0:	cmp	r0, #0
   131f4:	movne	r4, r7
   131f8:	ldreq	r3, [pc, #84]	; 13254 <close_stdout@@Base+0x2e8>
   131fc:	addeq	r4, r6, #4
   13200:	ldreq	r3, [r5, r3]
   13204:	streq	r4, [r3]
   13208:	ldr	r2, [pc, #72]	; 13258 <close_stdout@@Base+0x2ec>
   1320c:	ldr	r3, [pc, #72]	; 1325c <close_stdout@@Base+0x2f0>
   13210:	ldr	r2, [r5, r2]
   13214:	str	r4, [r2]
   13218:	ldr	r3, [r5, r3]
   1321c:	str	r4, [r3]
   13220:	pop	{r3, r4, r5, r6, r7, pc}
   13224:	ldr	r3, [pc, #52]	; 13260 <close_stdout@@Base+0x2f4>
   13228:	mov	r1, #1
   1322c:	ldr	r0, [pc, #48]	; 13264 <close_stdout@@Base+0x2f8>
   13230:	mov	r2, #55	; 0x37
   13234:	ldr	r3, [r5, r3]
   13238:	add	r0, pc, r0
   1323c:	ldr	r3, [r3]
   13240:	bl	11464 <fwrite@plt>
   13244:	bl	11680 <abort@plt>
   13248:	andeq	r8, r1, r0, ror #28
   1324c:	strdeq	r7, [r0], -ip
   13250:	andeq	r7, r0, r8, ror #27
   13254:	andeq	r0, r0, r4, ror r1
   13258:	andeq	r0, r0, ip, ror #2
   1325c:	andeq	r0, r0, r8, ror #2
   13260:	andeq	r0, r0, r0, asr r1
   13264:	andeq	r7, r0, r8, asr sp
   13268:	push	{r3, lr}
   1326c:	mov	r3, r0
   13270:	mov	r2, #0
   13274:	cmp	r1, #8
   13278:	str	r2, [r3], #4
   1327c:	add	r3, r3, #4
   13280:	str	r2, [r0, #4]
   13284:	str	r2, [r3], #4
   13288:	str	r2, [r3], #4
   1328c:	str	r2, [r3], #4
   13290:	str	r2, [r3], #4
   13294:	str	r2, [r3], #4
   13298:	str	r2, [r3], #4
   1329c:	str	r2, [r3], #4
   132a0:	str	r2, [r3], #4
   132a4:	str	r2, [r3], #4
   132a8:	str	r2, [r3]
   132ac:	beq	132b8 <close_stdout@@Base+0x34c>
   132b0:	str	r1, [r0]
   132b4:	pop	{r3, pc}
   132b8:	bl	11680 <abort@plt>
   132bc:	push	{r4, r5, r6, lr}
   132c0:	mov	r4, r0
   132c4:	mov	r6, r1
   132c8:	mov	r0, #0
   132cc:	mov	r1, r4
   132d0:	mov	r2, #5
   132d4:	bl	11410 <dcgettext@plt>
   132d8:	cmp	r0, r4
   132dc:	mov	r5, r0
   132e0:	beq	132e8 <close_stdout@@Base+0x37c>
   132e4:	pop	{r4, r5, r6, pc}
   132e8:	bl	18e48 <fts_children@@Base+0x1548>
   132ec:	ldrb	r3, [r0]
   132f0:	bic	r3, r3, #32
   132f4:	cmp	r3, #85	; 0x55
   132f8:	bne	1336c <close_stdout@@Base+0x400>
   132fc:	ldrb	r3, [r0, #1]
   13300:	bic	r3, r3, #32
   13304:	cmp	r3, #84	; 0x54
   13308:	bne	13358 <close_stdout@@Base+0x3ec>
   1330c:	ldrb	r3, [r0, #2]
   13310:	bic	r3, r3, #32
   13314:	cmp	r3, #70	; 0x46
   13318:	bne	13358 <close_stdout@@Base+0x3ec>
   1331c:	ldrb	r3, [r0, #3]
   13320:	cmp	r3, #45	; 0x2d
   13324:	bne	13358 <close_stdout@@Base+0x3ec>
   13328:	ldrb	r3, [r0, #4]
   1332c:	cmp	r3, #56	; 0x38
   13330:	bne	13358 <close_stdout@@Base+0x3ec>
   13334:	ldrb	r3, [r0, #5]
   13338:	cmp	r3, #0
   1333c:	bne	13358 <close_stdout@@Base+0x3ec>
   13340:	ldrb	r3, [r5]
   13344:	cmp	r3, #96	; 0x60
   13348:	beq	133e4 <close_stdout@@Base+0x478>
   1334c:	ldr	r0, [pc, #180]	; 13408 <close_stdout@@Base+0x49c>
   13350:	add	r0, pc, r0
   13354:	pop	{r4, r5, r6, pc}
   13358:	cmp	r6, #7
   1335c:	beq	133f0 <close_stdout@@Base+0x484>
   13360:	ldr	r0, [pc, #164]	; 1340c <close_stdout@@Base+0x4a0>
   13364:	add	r0, pc, r0
   13368:	pop	{r4, r5, r6, pc}
   1336c:	cmp	r3, #71	; 0x47
   13370:	bne	13358 <close_stdout@@Base+0x3ec>
   13374:	ldrb	r3, [r0, #1]
   13378:	bic	r3, r3, #32
   1337c:	cmp	r3, #66	; 0x42
   13380:	bne	13358 <close_stdout@@Base+0x3ec>
   13384:	ldrb	r3, [r0, #2]
   13388:	cmp	r3, #49	; 0x31
   1338c:	bne	13358 <close_stdout@@Base+0x3ec>
   13390:	ldrb	r3, [r0, #3]
   13394:	cmp	r3, #56	; 0x38
   13398:	bne	13358 <close_stdout@@Base+0x3ec>
   1339c:	ldrb	r3, [r0, #4]
   133a0:	cmp	r3, #48	; 0x30
   133a4:	bne	13358 <close_stdout@@Base+0x3ec>
   133a8:	ldrb	r3, [r0, #5]
   133ac:	cmp	r3, #51	; 0x33
   133b0:	bne	13358 <close_stdout@@Base+0x3ec>
   133b4:	ldrb	r3, [r0, #6]
   133b8:	cmp	r3, #48	; 0x30
   133bc:	bne	13358 <close_stdout@@Base+0x3ec>
   133c0:	ldrb	r3, [r0, #7]
   133c4:	cmp	r3, #0
   133c8:	bne	13358 <close_stdout@@Base+0x3ec>
   133cc:	ldrb	r3, [r5]
   133d0:	cmp	r3, #96	; 0x60
   133d4:	beq	133fc <close_stdout@@Base+0x490>
   133d8:	ldr	r0, [pc, #48]	; 13410 <close_stdout@@Base+0x4a4>
   133dc:	add	r0, pc, r0
   133e0:	pop	{r4, r5, r6, pc}
   133e4:	ldr	r0, [pc, #40]	; 13414 <close_stdout@@Base+0x4a8>
   133e8:	add	r0, pc, r0
   133ec:	pop	{r4, r5, r6, pc}
   133f0:	ldr	r0, [pc, #32]	; 13418 <close_stdout@@Base+0x4ac>
   133f4:	add	r0, pc, r0
   133f8:	pop	{r4, r5, r6, pc}
   133fc:	ldr	r0, [pc, #24]	; 1341c <close_stdout@@Base+0x4b0>
   13400:	add	r0, pc, r0
   13404:	pop	{r4, r5, r6, pc}
   13408:	andeq	r7, r0, r4, lsr #25
   1340c:	muleq	r0, r8, ip
   13410:	andeq	r7, r0, ip, lsl ip
   13414:	andeq	r7, r0, r0, lsr #24
   13418:	andeq	r7, r0, ip, lsl #24
   1341c:	andeq	r7, r0, r4, lsl #24
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	sub	sp, sp, #124	; 0x7c
   13428:	ldr	ip, [pc, #3304]	; 14118 <close_stdout@@Base+0x11ac>
   1342c:	mov	sl, r1
   13430:	str	r0, [sp, #40]	; 0x28
   13434:	mov	r8, r3
   13438:	ldr	r0, [pc, #3292]	; 1411c <close_stdout@@Base+0x11b0>
   1343c:	add	ip, pc, ip
   13440:	str	r2, [sp, #32]
   13444:	ldr	r1, [sp, #164]	; 0xa4
   13448:	mov	r3, ip
   1344c:	ldr	r0, [ip, r0]
   13450:	ldr	r2, [sp, #172]	; 0xac
   13454:	ubfx	r1, r1, #1, #1
   13458:	str	r1, [sp, #36]	; 0x24
   1345c:	str	r0, [sp, #56]	; 0x38
   13460:	ldr	r0, [sp, #168]	; 0xa8
   13464:	ldr	r1, [sp, #176]	; 0xb0
   13468:	str	r2, [sp, #72]	; 0x48
   1346c:	str	r0, [sp, #48]	; 0x30
   13470:	ldr	r0, [sp, #56]	; 0x38
   13474:	str	r1, [sp, #68]	; 0x44
   13478:	ldr	r3, [r0]
   1347c:	str	r3, [sp, #116]	; 0x74
   13480:	bl	1147c <__ctype_get_mb_cur_max@plt>
   13484:	ldr	r2, [sp, #160]	; 0xa0
   13488:	str	r0, [sp, #64]	; 0x40
   1348c:	cmp	r2, #8
   13490:	addls	pc, pc, r2, lsl #2
   13494:	b	13ff4 <close_stdout@@Base+0x1088>
   13498:	b	134bc <close_stdout@@Base+0x550>
   1349c:	b	13d0c <close_stdout@@Base+0xda0>
   134a0:	b	13d3c <close_stdout@@Base+0xdd0>
   134a4:	b	13bec <close_stdout@@Base+0xc80>
   134a8:	b	13c2c <close_stdout@@Base+0xcc0>
   134ac:	b	13c58 <close_stdout@@Base+0xcec>
   134b0:	b	13c78 <close_stdout@@Base+0xd0c>
   134b4:	b	13c78 <close_stdout@@Base+0xd0c>
   134b8:	b	13c78 <close_stdout@@Base+0xd0c>
   134bc:	mov	r2, #0
   134c0:	str	r2, [sp, #36]	; 0x24
   134c4:	mov	r9, r2
   134c8:	str	r2, [sp, #24]
   134cc:	str	r2, [sp, #28]
   134d0:	str	r2, [sp, #52]	; 0x34
   134d4:	ldr	r0, [sp, #36]	; 0x24
   134d8:	mov	fp, #0
   134dc:	ldr	r1, [sp, #24]
   134e0:	eor	r2, r0, #1
   134e4:	eor	r3, r1, #1
   134e8:	and	r3, r2, r3
   134ec:	and	r2, r1, r0
   134f0:	str	r3, [sp, #44]	; 0x2c
   134f4:	str	r2, [sp, #76]	; 0x4c
   134f8:	cmn	r8, #1
   134fc:	beq	1387c <close_stdout@@Base+0x910>
   13500:	subs	r3, fp, r8
   13504:	movne	r3, #1
   13508:	cmp	r3, #0
   1350c:	beq	13894 <close_stdout@@Base+0x928>
   13510:	ldr	r3, [sp, #28]
   13514:	ldr	r0, [sp, #24]
   13518:	adds	r7, r3, #0
   1351c:	movne	r7, #1
   13520:	ands	r6, r7, r0
   13524:	bne	13d80 <close_stdout@@Base+0xe14>
   13528:	ldr	r1, [sp, #32]
   1352c:	add	r5, r1, fp
   13530:	ldrb	r4, [r5]
   13534:	cmp	r4, #126	; 0x7e
   13538:	addls	pc, pc, r4, lsl #2
   1353c:	b	13b00 <close_stdout@@Base+0xb94>
   13540:	b	13a0c <close_stdout@@Base+0xaa0>
   13544:	b	13b00 <close_stdout@@Base+0xb94>
   13548:	b	13b00 <close_stdout@@Base+0xb94>
   1354c:	b	13b00 <close_stdout@@Base+0xb94>
   13550:	b	13b00 <close_stdout@@Base+0xb94>
   13554:	b	13b00 <close_stdout@@Base+0xb94>
   13558:	b	13b00 <close_stdout@@Base+0xb94>
   1355c:	b	139f4 <close_stdout@@Base+0xa88>
   13560:	b	139dc <close_stdout@@Base+0xa70>
   13564:	b	13a04 <close_stdout@@Base+0xa98>
   13568:	b	139fc <close_stdout@@Base+0xa90>
   1356c:	b	139ec <close_stdout@@Base+0xa80>
   13570:	b	139e4 <close_stdout@@Base+0xa78>
   13574:	b	139a8 <close_stdout@@Base+0xa3c>
   13578:	b	13b00 <close_stdout@@Base+0xb94>
   1357c:	b	13b00 <close_stdout@@Base+0xb94>
   13580:	b	13b00 <close_stdout@@Base+0xb94>
   13584:	b	13b00 <close_stdout@@Base+0xb94>
   13588:	b	13b00 <close_stdout@@Base+0xb94>
   1358c:	b	13b00 <close_stdout@@Base+0xb94>
   13590:	b	13b00 <close_stdout@@Base+0xb94>
   13594:	b	13b00 <close_stdout@@Base+0xb94>
   13598:	b	13b00 <close_stdout@@Base+0xb94>
   1359c:	b	13b00 <close_stdout@@Base+0xb94>
   135a0:	b	13b00 <close_stdout@@Base+0xb94>
   135a4:	b	13b00 <close_stdout@@Base+0xb94>
   135a8:	b	13b00 <close_stdout@@Base+0xb94>
   135ac:	b	13b00 <close_stdout@@Base+0xb94>
   135b0:	b	13b00 <close_stdout@@Base+0xb94>
   135b4:	b	13b00 <close_stdout@@Base+0xb94>
   135b8:	b	13b00 <close_stdout@@Base+0xb94>
   135bc:	b	13b00 <close_stdout@@Base+0xb94>
   135c0:	b	13934 <close_stdout@@Base+0x9c8>
   135c4:	b	13934 <close_stdout@@Base+0x9c8>
   135c8:	b	13934 <close_stdout@@Base+0x9c8>
   135cc:	b	1392c <close_stdout@@Base+0x9c0>
   135d0:	b	13934 <close_stdout@@Base+0x9c8>
   135d4:	b	13808 <close_stdout@@Base+0x89c>
   135d8:	b	13934 <close_stdout@@Base+0x9c8>
   135dc:	b	13aa8 <close_stdout@@Base+0xb3c>
   135e0:	b	13934 <close_stdout@@Base+0x9c8>
   135e4:	b	13934 <close_stdout@@Base+0x9c8>
   135e8:	b	13934 <close_stdout@@Base+0x9c8>
   135ec:	b	13808 <close_stdout@@Base+0x89c>
   135f0:	b	13808 <close_stdout@@Base+0x89c>
   135f4:	b	13808 <close_stdout@@Base+0x89c>
   135f8:	b	13808 <close_stdout@@Base+0x89c>
   135fc:	b	13808 <close_stdout@@Base+0x89c>
   13600:	b	13808 <close_stdout@@Base+0x89c>
   13604:	b	13808 <close_stdout@@Base+0x89c>
   13608:	b	13808 <close_stdout@@Base+0x89c>
   1360c:	b	13808 <close_stdout@@Base+0x89c>
   13610:	b	13808 <close_stdout@@Base+0x89c>
   13614:	b	13808 <close_stdout@@Base+0x89c>
   13618:	b	13808 <close_stdout@@Base+0x89c>
   1361c:	b	13808 <close_stdout@@Base+0x89c>
   13620:	b	13808 <close_stdout@@Base+0x89c>
   13624:	b	13808 <close_stdout@@Base+0x89c>
   13628:	b	13808 <close_stdout@@Base+0x89c>
   1362c:	b	13934 <close_stdout@@Base+0x9c8>
   13630:	b	13934 <close_stdout@@Base+0x9c8>
   13634:	b	13934 <close_stdout@@Base+0x9c8>
   13638:	b	13934 <close_stdout@@Base+0x9c8>
   1363c:	b	1373c <close_stdout@@Base+0x7d0>
   13640:	b	13b00 <close_stdout@@Base+0xb94>
   13644:	b	13808 <close_stdout@@Base+0x89c>
   13648:	b	13808 <close_stdout@@Base+0x89c>
   1364c:	b	13808 <close_stdout@@Base+0x89c>
   13650:	b	13808 <close_stdout@@Base+0x89c>
   13654:	b	13808 <close_stdout@@Base+0x89c>
   13658:	b	13808 <close_stdout@@Base+0x89c>
   1365c:	b	13808 <close_stdout@@Base+0x89c>
   13660:	b	13808 <close_stdout@@Base+0x89c>
   13664:	b	13808 <close_stdout@@Base+0x89c>
   13668:	b	13808 <close_stdout@@Base+0x89c>
   1366c:	b	13808 <close_stdout@@Base+0x89c>
   13670:	b	13808 <close_stdout@@Base+0x89c>
   13674:	b	13808 <close_stdout@@Base+0x89c>
   13678:	b	13808 <close_stdout@@Base+0x89c>
   1367c:	b	13808 <close_stdout@@Base+0x89c>
   13680:	b	13808 <close_stdout@@Base+0x89c>
   13684:	b	13808 <close_stdout@@Base+0x89c>
   13688:	b	13808 <close_stdout@@Base+0x89c>
   1368c:	b	13808 <close_stdout@@Base+0x89c>
   13690:	b	13808 <close_stdout@@Base+0x89c>
   13694:	b	13808 <close_stdout@@Base+0x89c>
   13698:	b	13808 <close_stdout@@Base+0x89c>
   1369c:	b	13808 <close_stdout@@Base+0x89c>
   136a0:	b	13808 <close_stdout@@Base+0x89c>
   136a4:	b	13808 <close_stdout@@Base+0x89c>
   136a8:	b	13808 <close_stdout@@Base+0x89c>
   136ac:	b	13934 <close_stdout@@Base+0x9c8>
   136b0:	b	13a8c <close_stdout@@Base+0xb20>
   136b4:	b	13808 <close_stdout@@Base+0x89c>
   136b8:	b	13934 <close_stdout@@Base+0x9c8>
   136bc:	b	13808 <close_stdout@@Base+0x89c>
   136c0:	b	13934 <close_stdout@@Base+0x9c8>
   136c4:	b	13808 <close_stdout@@Base+0x89c>
   136c8:	b	13808 <close_stdout@@Base+0x89c>
   136cc:	b	13808 <close_stdout@@Base+0x89c>
   136d0:	b	13808 <close_stdout@@Base+0x89c>
   136d4:	b	13808 <close_stdout@@Base+0x89c>
   136d8:	b	13808 <close_stdout@@Base+0x89c>
   136dc:	b	13808 <close_stdout@@Base+0x89c>
   136e0:	b	13808 <close_stdout@@Base+0x89c>
   136e4:	b	13808 <close_stdout@@Base+0x89c>
   136e8:	b	13808 <close_stdout@@Base+0x89c>
   136ec:	b	13808 <close_stdout@@Base+0x89c>
   136f0:	b	13808 <close_stdout@@Base+0x89c>
   136f4:	b	13808 <close_stdout@@Base+0x89c>
   136f8:	b	13808 <close_stdout@@Base+0x89c>
   136fc:	b	13808 <close_stdout@@Base+0x89c>
   13700:	b	13808 <close_stdout@@Base+0x89c>
   13704:	b	13808 <close_stdout@@Base+0x89c>
   13708:	b	13808 <close_stdout@@Base+0x89c>
   1370c:	b	13808 <close_stdout@@Base+0x89c>
   13710:	b	13808 <close_stdout@@Base+0x89c>
   13714:	b	13808 <close_stdout@@Base+0x89c>
   13718:	b	13808 <close_stdout@@Base+0x89c>
   1371c:	b	13808 <close_stdout@@Base+0x89c>
   13720:	b	13808 <close_stdout@@Base+0x89c>
   13724:	b	13808 <close_stdout@@Base+0x89c>
   13728:	b	13808 <close_stdout@@Base+0x89c>
   1372c:	b	13914 <close_stdout@@Base+0x9a8>
   13730:	b	13934 <close_stdout@@Base+0x9c8>
   13734:	b	13914 <close_stdout@@Base+0x9a8>
   13738:	b	1392c <close_stdout@@Base+0x9c0>
   1373c:	ldr	r3, [sp, #160]	; 0xa0
   13740:	cmp	r3, #2
   13744:	beq	13fd0 <close_stdout@@Base+0x1064>
   13748:	cmp	r3, #3
   1374c:	bne	13808 <close_stdout@@Base+0x89c>
   13750:	ldr	r1, [sp, #164]	; 0xa4
   13754:	tst	r1, #4
   13758:	beq	13808 <close_stdout@@Base+0x89c>
   1375c:	add	r3, fp, #2
   13760:	cmp	r8, r3
   13764:	bls	13808 <close_stdout@@Base+0x89c>
   13768:	ldrb	r2, [r5, #1]
   1376c:	mov	r1, #1
   13770:	cmp	r2, #63	; 0x3f
   13774:	bne	13808 <close_stdout@@Base+0x89c>
   13778:	ldr	r0, [sp, #32]
   1377c:	ldrb	ip, [r0, r3]
   13780:	sub	r0, ip, #33	; 0x21
   13784:	uxtb	r0, r0
   13788:	cmp	r0, #29
   1378c:	bhi	13808 <close_stdout@@Base+0x89c>
   13790:	lsl	r1, r1, r0
   13794:	movw	r0, #20929	; 0x51c1
   13798:	movt	r0, #14336	; 0x3800
   1379c:	and	r0, r1, r0
   137a0:	cmp	r0, #0
   137a4:	beq	13808 <close_stdout@@Base+0x89c>
   137a8:	ldr	r1, [sp, #36]	; 0x24
   137ac:	cmp	r1, #0
   137b0:	bne	13950 <close_stdout@@Base+0x9e4>
   137b4:	cmp	r9, sl
   137b8:	mov	r4, ip
   137bc:	mov	fp, r3
   137c0:	ldrcc	r0, [sp, #40]	; 0x28
   137c4:	strbcc	r2, [r0, r9]
   137c8:	add	r2, r9, #1
   137cc:	cmp	sl, r2
   137d0:	ldrhi	r0, [sp, #40]	; 0x28
   137d4:	movhi	r1, #34	; 0x22
   137d8:	strbhi	r1, [r0, r2]
   137dc:	add	r2, r9, #2
   137e0:	cmp	sl, r2
   137e4:	ldrhi	r0, [sp, #40]	; 0x28
   137e8:	movhi	r1, #34	; 0x22
   137ec:	strbhi	r1, [r0, r2]
   137f0:	add	r2, r9, #3
   137f4:	cmp	sl, r2
   137f8:	add	r9, r9, #4
   137fc:	ldrhi	r0, [sp, #40]	; 0x28
   13800:	movhi	r1, #63	; 0x3f
   13804:	strbhi	r1, [r0, r2]
   13808:	ldr	r0, [sp, #44]	; 0x2c
   1380c:	cmp	r0, #0
   13810:	bne	13838 <close_stdout@@Base+0x8cc>
   13814:	ldr	r1, [sp, #48]	; 0x30
   13818:	cmp	r1, #0
   1381c:	beq	13838 <close_stdout@@Base+0x8cc>
   13820:	ubfx	r2, r4, #5, #8
   13824:	and	r3, r4, #31
   13828:	ldr	r2, [r1, r2, lsl #2]
   1382c:	lsr	r3, r2, r3
   13830:	tst	r3, #1
   13834:	bne	13840 <close_stdout@@Base+0x8d4>
   13838:	cmp	r6, #0
   1383c:	beq	13860 <close_stdout@@Base+0x8f4>
   13840:	ldr	r2, [sp, #36]	; 0x24
   13844:	cmp	r2, #0
   13848:	bne	13950 <close_stdout@@Base+0x9e4>
   1384c:	cmp	r9, sl
   13850:	ldrcc	r0, [sp, #40]	; 0x28
   13854:	movcc	r3, #92	; 0x5c
   13858:	strbcc	r3, [r0, r9]
   1385c:	add	r9, r9, #1
   13860:	add	fp, fp, #1
   13864:	cmp	r9, sl
   13868:	ldrcc	r1, [sp, #40]	; 0x28
   1386c:	strbcc	r4, [r1, r9]
   13870:	cmn	r8, #1
   13874:	add	r9, r9, #1
   13878:	bne	13500 <close_stdout@@Base+0x594>
   1387c:	ldr	r2, [sp, #32]
   13880:	ldrb	r3, [r2, fp]
   13884:	adds	r3, r3, #0
   13888:	movne	r3, #1
   1388c:	cmp	r3, #0
   13890:	bne	13510 <close_stdout@@Base+0x5a4>
   13894:	ldr	r3, [sp, #160]	; 0xa0
   13898:	cmp	r9, #0
   1389c:	cmpeq	r3, #2
   138a0:	bne	138b0 <close_stdout@@Base+0x944>
   138a4:	ldr	r0, [sp, #36]	; 0x24
   138a8:	cmp	r0, #0
   138ac:	bne	13950 <close_stdout@@Base+0x9e4>
   138b0:	ldr	r1, [sp, #36]	; 0x24
   138b4:	ldr	r2, [sp, #52]	; 0x34
   138b8:	eor	r3, r1, #1
   138bc:	cmp	r2, #0
   138c0:	moveq	r3, #0
   138c4:	andne	r3, r3, #1
   138c8:	cmp	r3, #0
   138cc:	beq	138f8 <close_stdout@@Base+0x98c>
   138d0:	ldrb	r3, [r2]
   138d4:	cmp	r3, #0
   138d8:	beq	138f8 <close_stdout@@Base+0x98c>
   138dc:	ldr	r1, [sp, #40]	; 0x28
   138e0:	cmp	sl, r9
   138e4:	strbhi	r3, [r1, r9]
   138e8:	ldrb	r3, [r2, #1]!
   138ec:	add	r9, r9, #1
   138f0:	cmp	r3, #0
   138f4:	bne	138e0 <close_stdout@@Base+0x974>
   138f8:	cmp	r9, sl
   138fc:	movcs	r0, r9
   13900:	ldrcc	r1, [sp, #40]	; 0x28
   13904:	movcc	r3, #0
   13908:	movcc	r0, r9
   1390c:	strbcc	r3, [r1, r9]
   13910:	b	1398c <close_stdout@@Base+0xa20>
   13914:	cmn	r8, #1
   13918:	beq	13fe0 <close_stdout@@Base+0x1074>
   1391c:	subs	r3, r8, #1
   13920:	movne	r3, #1
   13924:	cmp	r3, #0
   13928:	bne	13808 <close_stdout@@Base+0x89c>
   1392c:	cmp	fp, #0
   13930:	bne	13808 <close_stdout@@Base+0x89c>
   13934:	ldr	r3, [sp, #36]	; 0x24
   13938:	ldr	r0, [sp, #160]	; 0xa0
   1393c:	cmp	r0, #2
   13940:	movne	r3, #0
   13944:	andeq	r3, r3, #1
   13948:	cmp	r3, #0
   1394c:	beq	13808 <close_stdout@@Base+0x89c>
   13950:	ldr	r2, [sp, #164]	; 0xa4
   13954:	mov	ip, #0
   13958:	ldr	r0, [sp, #160]	; 0xa0
   1395c:	bic	r3, r2, #2
   13960:	ldr	r1, [sp, #72]	; 0x48
   13964:	ldr	r2, [sp, #68]	; 0x44
   13968:	stm	sp, {r0, r3}
   1396c:	mov	r3, r8
   13970:	str	r1, [sp, #12]
   13974:	mov	r1, sl
   13978:	str	r2, [sp, #16]
   1397c:	ldr	r0, [sp, #40]	; 0x28
   13980:	ldr	r2, [sp, #32]
   13984:	str	ip, [sp, #8]
   13988:	bl	13420 <close_stdout@@Base+0x4b4>
   1398c:	ldr	r1, [sp, #56]	; 0x38
   13990:	ldr	r2, [sp, #116]	; 0x74
   13994:	ldr	r3, [r1]
   13998:	cmp	r2, r3
   1399c:	bne	140d0 <close_stdout@@Base+0x1164>
   139a0:	add	sp, sp, #124	; 0x7c
   139a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139a8:	mov	r3, #114	; 0x72
   139ac:	ldr	r2, [sp, #36]	; 0x24
   139b0:	ldr	r0, [sp, #160]	; 0xa0
   139b4:	cmp	r0, #2
   139b8:	movne	r2, #0
   139bc:	andeq	r2, r2, #1
   139c0:	cmp	r2, #0
   139c4:	bne	13950 <close_stdout@@Base+0x9e4>
   139c8:	ldr	r1, [sp, #24]
   139cc:	cmp	r1, #0
   139d0:	beq	13808 <close_stdout@@Base+0x89c>
   139d4:	mov	r4, r3
   139d8:	b	13840 <close_stdout@@Base+0x8d4>
   139dc:	mov	r3, #98	; 0x62
   139e0:	b	139c8 <close_stdout@@Base+0xa5c>
   139e4:	mov	r3, #102	; 0x66
   139e8:	b	139c8 <close_stdout@@Base+0xa5c>
   139ec:	mov	r3, #118	; 0x76
   139f0:	b	139c8 <close_stdout@@Base+0xa5c>
   139f4:	mov	r3, #97	; 0x61
   139f8:	b	139c8 <close_stdout@@Base+0xa5c>
   139fc:	mov	r3, #110	; 0x6e
   13a00:	b	139ac <close_stdout@@Base+0xa40>
   13a04:	mov	r3, #116	; 0x74
   13a08:	b	139ac <close_stdout@@Base+0xa40>
   13a0c:	ldr	r2, [sp, #24]
   13a10:	cmp	r2, #0
   13a14:	beq	13fbc <close_stdout@@Base+0x1050>
   13a18:	ldr	r3, [sp, #36]	; 0x24
   13a1c:	cmp	r3, #0
   13a20:	bne	13950 <close_stdout@@Base+0x9e4>
   13a24:	cmp	r9, sl
   13a28:	add	r2, r9, #1
   13a2c:	ldrcc	r0, [sp, #40]	; 0x28
   13a30:	movcc	r3, #92	; 0x5c
   13a34:	strbcc	r3, [r0, r9]
   13a38:	add	r3, fp, #1
   13a3c:	cmp	r8, r3
   13a40:	bls	13a80 <close_stdout@@Base+0xb14>
   13a44:	ldr	r1, [sp, #32]
   13a48:	ldrb	r3, [r1, r3]
   13a4c:	sub	r3, r3, #48	; 0x30
   13a50:	cmp	r3, #9
   13a54:	bhi	13a80 <close_stdout@@Base+0xb14>
   13a58:	cmp	sl, r2
   13a5c:	ldrhi	r0, [sp, #40]	; 0x28
   13a60:	movhi	r3, #48	; 0x30
   13a64:	strbhi	r3, [r0, r2]
   13a68:	add	r3, r9, #2
   13a6c:	cmp	sl, r3
   13a70:	ldrhi	r1, [sp, #40]	; 0x28
   13a74:	movhi	r2, #48	; 0x30
   13a78:	strbhi	r2, [r1, r3]
   13a7c:	add	r2, r9, #3
   13a80:	mov	r9, r2
   13a84:	mov	r4, #48	; 0x30
   13a88:	b	13814 <close_stdout@@Base+0x8a8>
   13a8c:	ldr	r1, [sp, #76]	; 0x4c
   13a90:	cmp	r1, #0
   13a94:	beq	13aa0 <close_stdout@@Base+0xb34>
   13a98:	cmp	r7, #0
   13a9c:	bne	13860 <close_stdout@@Base+0x8f4>
   13aa0:	mov	r3, r4
   13aa4:	b	139ac <close_stdout@@Base+0xa40>
   13aa8:	ldr	r1, [sp, #160]	; 0xa0
   13aac:	cmp	r1, #2
   13ab0:	bne	13808 <close_stdout@@Base+0x89c>
   13ab4:	ldr	r2, [sp, #36]	; 0x24
   13ab8:	cmp	r2, #0
   13abc:	bne	13950 <close_stdout@@Base+0x9e4>
   13ac0:	cmp	r9, sl
   13ac4:	ldrcc	r0, [sp, #40]	; 0x28
   13ac8:	movcc	r3, #39	; 0x27
   13acc:	strbcc	r3, [r0, r9]
   13ad0:	add	r3, r9, #1
   13ad4:	cmp	sl, r3
   13ad8:	ldrhi	r1, [sp, #40]	; 0x28
   13adc:	movhi	r2, #92	; 0x5c
   13ae0:	strbhi	r2, [r1, r3]
   13ae4:	add	r3, r9, #2
   13ae8:	cmp	sl, r3
   13aec:	add	r9, r9, #3
   13af0:	ldrhi	r0, [sp, #40]	; 0x28
   13af4:	movhi	r2, #39	; 0x27
   13af8:	strbhi	r2, [r0, r3]
   13afc:	b	13808 <close_stdout@@Base+0x89c>
   13b00:	ldr	r1, [sp, #64]	; 0x40
   13b04:	cmp	r1, #1
   13b08:	bne	13e00 <close_stdout@@Base+0xe94>
   13b0c:	bl	1150c <__ctype_b_loc@plt>
   13b10:	ldr	r2, [sp, #64]	; 0x40
   13b14:	sxth	r3, r4
   13b18:	str	r2, [sp, #60]	; 0x3c
   13b1c:	lsl	r3, r3, #1
   13b20:	ldr	r2, [r0]
   13b24:	ldrh	r2, [r2, r3]
   13b28:	eor	r2, r2, #16384	; 0x4000
   13b2c:	ubfx	r2, r2, #14, #1
   13b30:	ldr	r1, [sp, #24]
   13b34:	ands	r2, r2, r1
   13b38:	beq	13808 <close_stdout@@Base+0x89c>
   13b3c:	ldr	r3, [sp, #60]	; 0x3c
   13b40:	mov	r0, #92	; 0x5c
   13b44:	ldr	r7, [sp, #36]	; 0x24
   13b48:	add	r1, r3, fp
   13b4c:	str	r8, [sp, #60]	; 0x3c
   13b50:	ldr	r3, [sp, #40]	; 0x28
   13b54:	b	13bb8 <close_stdout@@Base+0xc4c>
   13b58:	cmp	r7, #0
   13b5c:	bne	13ff8 <close_stdout@@Base+0x108c>
   13b60:	add	ip, r9, #1
   13b64:	cmp	r9, sl
   13b68:	strbcc	r0, [r3, r9]
   13b6c:	cmp	sl, ip
   13b70:	lsrhi	r8, r4, #6
   13b74:	addhi	r8, r8, #48	; 0x30
   13b78:	strbhi	r8, [r3, ip]
   13b7c:	add	ip, r9, #2
   13b80:	add	r9, r9, #3
   13b84:	cmp	sl, ip
   13b88:	ubfxhi	r8, r4, #3, #3
   13b8c:	and	r4, r4, #7
   13b90:	add	r4, r4, #48	; 0x30
   13b94:	addhi	r8, r8, #48	; 0x30
   13b98:	strbhi	r8, [r3, ip]
   13b9c:	add	fp, fp, #1
   13ba0:	cmp	r1, fp
   13ba4:	bls	13be4 <close_stdout@@Base+0xc78>
   13ba8:	cmp	r9, sl
   13bac:	strbcc	r4, [r3, r9]
   13bb0:	ldrb	r4, [r5, #1]!
   13bb4:	add	r9, r9, #1
   13bb8:	cmp	r2, #0
   13bbc:	bne	13b58 <close_stdout@@Base+0xbec>
   13bc0:	cmp	r6, #0
   13bc4:	beq	13b9c <close_stdout@@Base+0xc30>
   13bc8:	add	fp, fp, #1
   13bcc:	cmp	r9, sl
   13bd0:	strbcc	r0, [r3, r9]
   13bd4:	cmp	r1, fp
   13bd8:	add	r9, r9, #1
   13bdc:	mov	r6, #0
   13be0:	bhi	13ba8 <close_stdout@@Base+0xc3c>
   13be4:	ldr	r8, [sp, #60]	; 0x3c
   13be8:	b	13864 <close_stdout@@Base+0x8f8>
   13bec:	ldr	r3, [sp, #36]	; 0x24
   13bf0:	cmp	r3, #0
   13bf4:	bne	140f8 <close_stdout@@Base+0x118c>
   13bf8:	cmp	sl, #0
   13bfc:	beq	14010 <close_stdout@@Base+0x10a4>
   13c00:	ldr	r1, [sp, #40]	; 0x28
   13c04:	mov	r0, #1
   13c08:	ldr	r2, [pc, #1296]	; 14120 <close_stdout@@Base+0x11b4>
   13c0c:	mov	r3, #34	; 0x22
   13c10:	str	r0, [sp, #24]
   13c14:	mov	r9, r0
   13c18:	add	r2, pc, r2
   13c1c:	str	r0, [sp, #28]
   13c20:	strb	r3, [r1]
   13c24:	str	r2, [sp, #52]	; 0x34
   13c28:	b	134d4 <close_stdout@@Base+0x568>
   13c2c:	ldr	r3, [pc, #1264]	; 14124 <close_stdout@@Base+0x11b8>
   13c30:	mov	r2, #1
   13c34:	mov	r0, #3
   13c38:	str	r2, [sp, #36]	; 0x24
   13c3c:	add	r3, pc, r3
   13c40:	str	r2, [sp, #24]
   13c44:	str	r3, [sp, #52]	; 0x34
   13c48:	mov	r9, #0
   13c4c:	str	r2, [sp, #28]
   13c50:	str	r0, [sp, #160]	; 0xa0
   13c54:	b	134d4 <close_stdout@@Base+0x568>
   13c58:	mov	r0, #0
   13c5c:	mov	r1, #1
   13c60:	str	r0, [sp, #36]	; 0x24
   13c64:	mov	r9, r0
   13c68:	str	r1, [sp, #24]
   13c6c:	str	r0, [sp, #28]
   13c70:	str	r0, [sp, #52]	; 0x34
   13c74:	b	134d4 <close_stdout@@Base+0x568>
   13c78:	ldr	r3, [sp, #160]	; 0xa0
   13c7c:	cmp	r3, #8
   13c80:	beq	13cac <close_stdout@@Base+0xd40>
   13c84:	ldr	r0, [pc, #1180]	; 14128 <close_stdout@@Base+0x11bc>
   13c88:	mov	r1, r3
   13c8c:	add	r0, pc, r0
   13c90:	bl	132bc <close_stdout@@Base+0x350>
   13c94:	ldr	r1, [sp, #160]	; 0xa0
   13c98:	str	r0, [sp, #72]	; 0x48
   13c9c:	ldr	r0, [pc, #1160]	; 1412c <close_stdout@@Base+0x11c0>
   13ca0:	add	r0, pc, r0
   13ca4:	bl	132bc <close_stdout@@Base+0x350>
   13ca8:	str	r0, [sp, #68]	; 0x44
   13cac:	ldr	r0, [sp, #36]	; 0x24
   13cb0:	cmp	r0, #0
   13cb4:	movne	r9, #0
   13cb8:	bne	13cf0 <close_stdout@@Base+0xd84>
   13cbc:	ldr	r1, [sp, #72]	; 0x48
   13cc0:	ldrb	r3, [r1]
   13cc4:	cmp	r3, #0
   13cc8:	beq	140c8 <close_stdout@@Base+0x115c>
   13ccc:	mov	r2, r1
   13cd0:	ldr	r1, [sp, #40]	; 0x28
   13cd4:	mov	r9, r0
   13cd8:	cmp	r9, sl
   13cdc:	strbcc	r3, [r1, r9]
   13ce0:	ldrb	r3, [r2, #1]!
   13ce4:	add	r9, r9, #1
   13ce8:	cmp	r3, #0
   13cec:	bne	13cd8 <close_stdout@@Base+0xd6c>
   13cf0:	ldr	r0, [sp, #68]	; 0x44
   13cf4:	str	r0, [sp, #52]	; 0x34
   13cf8:	bl	11530 <strlen@plt>
   13cfc:	mov	r2, #1
   13d00:	str	r2, [sp, #24]
   13d04:	str	r0, [sp, #28]
   13d08:	b	134d4 <close_stdout@@Base+0x568>
   13d0c:	ldr	r3, [pc, #1052]	; 14130 <close_stdout@@Base+0x11c4>
   13d10:	mov	r2, #0
   13d14:	mov	r1, #1
   13d18:	mov	r0, #2
   13d1c:	add	r3, pc, r3
   13d20:	str	r1, [sp, #36]	; 0x24
   13d24:	str	r2, [sp, #24]
   13d28:	mov	r9, r2
   13d2c:	str	r1, [sp, #28]
   13d30:	str	r3, [sp, #52]	; 0x34
   13d34:	str	r0, [sp, #160]	; 0xa0
   13d38:	b	134d4 <close_stdout@@Base+0x568>
   13d3c:	ldr	r3, [sp, #36]	; 0x24
   13d40:	cmp	r3, #0
   13d44:	bne	140d4 <close_stdout@@Base+0x1168>
   13d48:	cmp	sl, #0
   13d4c:	beq	14030 <close_stdout@@Base+0x10c4>
   13d50:	ldr	r1, [sp, #40]	; 0x28
   13d54:	mov	r3, #39	; 0x27
   13d58:	ldr	r2, [sp, #36]	; 0x24
   13d5c:	mov	r0, #1
   13d60:	mov	r9, r0
   13d64:	str	r0, [sp, #28]
   13d68:	strb	r3, [r1]
   13d6c:	ldr	r3, [pc, #960]	; 14134 <close_stdout@@Base+0x11c8>
   13d70:	str	r2, [sp, #24]
   13d74:	add	r3, pc, r3
   13d78:	str	r3, [sp, #52]	; 0x34
   13d7c:	b	134d4 <close_stdout@@Base+0x568>
   13d80:	ldr	r2, [sp, #28]
   13d84:	cmp	r2, #1
   13d88:	add	r4, fp, r2
   13d8c:	movls	r3, #0
   13d90:	movhi	r3, #1
   13d94:	cmn	r8, #1
   13d98:	movne	r3, #0
   13d9c:	cmp	r3, #0
   13da0:	beq	13db0 <close_stdout@@Base+0xe44>
   13da4:	ldr	r0, [sp, #32]
   13da8:	bl	11530 <strlen@plt>
   13dac:	mov	r8, r0
   13db0:	cmp	r8, r4
   13db4:	ldrcc	r3, [sp, #32]
   13db8:	movcc	r6, #0
   13dbc:	addcc	r5, r3, fp
   13dc0:	bcc	13530 <close_stdout@@Base+0x5c4>
   13dc4:	ldr	r0, [sp, #32]
   13dc8:	ldr	r1, [sp, #52]	; 0x34
   13dcc:	add	r5, r0, fp
   13dd0:	ldr	r2, [sp, #28]
   13dd4:	mov	r0, r5
   13dd8:	bl	113f8 <memcmp@plt>
   13ddc:	cmp	r0, #0
   13de0:	bne	13df8 <close_stdout@@Base+0xe8c>
   13de4:	ldr	r1, [sp, #36]	; 0x24
   13de8:	cmp	r1, #0
   13dec:	bne	13950 <close_stdout@@Base+0x9e4>
   13df0:	mov	r6, #1
   13df4:	b	13530 <close_stdout@@Base+0x5c4>
   13df8:	mov	r6, #0
   13dfc:	b	13530 <close_stdout@@Base+0x5c4>
   13e00:	add	r7, sp, #108	; 0x6c
   13e04:	cmn	r8, #1
   13e08:	mov	r3, #0
   13e0c:	str	r3, [sp, #108]	; 0x6c
   13e10:	str	r3, [r7, #4]
   13e14:	beq	14000 <close_stdout@@Base+0x1094>
   13e18:	mov	r1, #0
   13e1c:	ldr	r0, [sp, #32]
   13e20:	mov	ip, #1
   13e24:	str	r9, [sp, #88]	; 0x58
   13e28:	str	r6, [sp, #96]	; 0x60
   13e2c:	mov	r9, r1
   13e30:	str	r5, [sp, #100]	; 0x64
   13e34:	mov	r6, ip
   13e38:	mov	r5, r7
   13e3c:	add	r3, sp, #104	; 0x68
   13e40:	sub	r0, r0, #1
   13e44:	str	r3, [sp, #80]	; 0x50
   13e48:	str	r0, [sp, #84]	; 0x54
   13e4c:	str	r1, [sp, #60]	; 0x3c
   13e50:	str	r4, [sp, #92]	; 0x5c
   13e54:	ldr	r2, [sp, #32]
   13e58:	add	r7, r9, fp
   13e5c:	add	r0, sp, #104	; 0x68
   13e60:	mov	r3, r5
   13e64:	add	r4, r2, r7
   13e68:	rsb	r2, r7, r8
   13e6c:	mov	r1, r4
   13e70:	bl	114a0 <mbrtowc@plt>
   13e74:	subs	r2, r0, #0
   13e78:	beq	13f84 <close_stdout@@Base+0x1018>
   13e7c:	cmn	r2, #1
   13e80:	beq	140ac <close_stdout@@Base+0x1140>
   13e84:	cmn	r2, #2
   13e88:	beq	14050 <close_stdout@@Base+0x10e4>
   13e8c:	ldr	r3, [sp, #36]	; 0x24
   13e90:	ldr	r0, [sp, #160]	; 0xa0
   13e94:	cmp	r0, #2
   13e98:	movne	r3, #0
   13e9c:	andeq	r3, r3, #1
   13ea0:	cmp	r3, #0
   13ea4:	beq	13f60 <close_stdout@@Base+0xff4>
   13ea8:	cmp	r2, #1
   13eac:	beq	13f60 <close_stdout@@Base+0xff4>
   13eb0:	ldr	r1, [sp, #84]	; 0x54
   13eb4:	add	r3, r1, r2
   13eb8:	add	r7, r3, r7
   13ebc:	ldrb	r3, [r4, #1]!
   13ec0:	sub	r3, r3, #91	; 0x5b
   13ec4:	cmp	r3, #33	; 0x21
   13ec8:	addls	pc, pc, r3, lsl #2
   13ecc:	b	13f58 <close_stdout@@Base+0xfec>
   13ed0:	b	13950 <close_stdout@@Base+0x9e4>
   13ed4:	b	13950 <close_stdout@@Base+0x9e4>
   13ed8:	b	13f58 <close_stdout@@Base+0xfec>
   13edc:	b	13950 <close_stdout@@Base+0x9e4>
   13ee0:	b	13f58 <close_stdout@@Base+0xfec>
   13ee4:	b	13950 <close_stdout@@Base+0x9e4>
   13ee8:	b	13f58 <close_stdout@@Base+0xfec>
   13eec:	b	13f58 <close_stdout@@Base+0xfec>
   13ef0:	b	13f58 <close_stdout@@Base+0xfec>
   13ef4:	b	13f58 <close_stdout@@Base+0xfec>
   13ef8:	b	13f58 <close_stdout@@Base+0xfec>
   13efc:	b	13f58 <close_stdout@@Base+0xfec>
   13f00:	b	13f58 <close_stdout@@Base+0xfec>
   13f04:	b	13f58 <close_stdout@@Base+0xfec>
   13f08:	b	13f58 <close_stdout@@Base+0xfec>
   13f0c:	b	13f58 <close_stdout@@Base+0xfec>
   13f10:	b	13f58 <close_stdout@@Base+0xfec>
   13f14:	b	13f58 <close_stdout@@Base+0xfec>
   13f18:	b	13f58 <close_stdout@@Base+0xfec>
   13f1c:	b	13f58 <close_stdout@@Base+0xfec>
   13f20:	b	13f58 <close_stdout@@Base+0xfec>
   13f24:	b	13f58 <close_stdout@@Base+0xfec>
   13f28:	b	13f58 <close_stdout@@Base+0xfec>
   13f2c:	b	13f58 <close_stdout@@Base+0xfec>
   13f30:	b	13f58 <close_stdout@@Base+0xfec>
   13f34:	b	13f58 <close_stdout@@Base+0xfec>
   13f38:	b	13f58 <close_stdout@@Base+0xfec>
   13f3c:	b	13f58 <close_stdout@@Base+0xfec>
   13f40:	b	13f58 <close_stdout@@Base+0xfec>
   13f44:	b	13f58 <close_stdout@@Base+0xfec>
   13f48:	b	13f58 <close_stdout@@Base+0xfec>
   13f4c:	b	13f58 <close_stdout@@Base+0xfec>
   13f50:	b	13f58 <close_stdout@@Base+0xfec>
   13f54:	b	13950 <close_stdout@@Base+0x9e4>
   13f58:	cmp	r4, r7
   13f5c:	bne	13ebc <close_stdout@@Base+0xf50>
   13f60:	ldr	r0, [sp, #104]	; 0x68
   13f64:	add	r9, r9, r2
   13f68:	bl	1144c <iswprint@plt>
   13f6c:	cmp	r0, #0
   13f70:	mov	r0, r5
   13f74:	moveq	r6, #0
   13f78:	bl	113ec <mbsinit@plt>
   13f7c:	cmp	r0, #0
   13f80:	beq	13e54 <close_stdout@@Base+0xee8>
   13f84:	mov	ip, r6
   13f88:	eor	r2, ip, #1
   13f8c:	str	r9, [sp, #60]	; 0x3c
   13f90:	ldr	r4, [sp, #92]	; 0x5c
   13f94:	uxtb	r2, r2
   13f98:	ldr	r9, [sp, #88]	; 0x58
   13f9c:	ldr	r6, [sp, #96]	; 0x60
   13fa0:	ldr	r5, [sp, #100]	; 0x64
   13fa4:	ldr	r3, [sp, #60]	; 0x3c
   13fa8:	cmp	r3, #1
   13fac:	bls	13b30 <close_stdout@@Base+0xbc4>
   13fb0:	ldr	r0, [sp, #24]
   13fb4:	and	r2, r2, r0
   13fb8:	b	13b3c <close_stdout@@Base+0xbd0>
   13fbc:	ldr	r2, [sp, #164]	; 0xa4
   13fc0:	tst	r2, #1
   13fc4:	addne	fp, fp, #1
   13fc8:	bne	134f8 <close_stdout@@Base+0x58c>
   13fcc:	b	13808 <close_stdout@@Base+0x89c>
   13fd0:	ldr	r0, [sp, #36]	; 0x24
   13fd4:	cmp	r0, #0
   13fd8:	beq	13808 <close_stdout@@Base+0x89c>
   13fdc:	b	13950 <close_stdout@@Base+0x9e4>
   13fe0:	ldr	r2, [sp, #32]
   13fe4:	ldrb	r3, [r2, #1]
   13fe8:	adds	r3, r3, #0
   13fec:	movne	r3, #1
   13ff0:	b	13924 <close_stdout@@Base+0x9b8>
   13ff4:	bl	11680 <abort@plt>
   13ff8:	ldr	r8, [sp, #60]	; 0x3c
   13ffc:	b	13950 <close_stdout@@Base+0x9e4>
   14000:	ldr	r0, [sp, #32]
   14004:	bl	11530 <strlen@plt>
   14008:	mov	r8, r0
   1400c:	b	13e18 <close_stdout@@Base+0xeac>
   14010:	ldr	r2, [pc, #288]	; 14138 <close_stdout@@Base+0x11cc>
   14014:	mov	r1, #1
   14018:	mov	r9, r1
   1401c:	str	r1, [sp, #24]
   14020:	add	r2, pc, r2
   14024:	str	r1, [sp, #28]
   14028:	str	r2, [sp, #52]	; 0x34
   1402c:	b	134d4 <close_stdout@@Base+0x568>
   14030:	ldr	r2, [pc, #260]	; 1413c <close_stdout@@Base+0x11d0>
   14034:	mov	r3, #1
   14038:	mov	r9, r3
   1403c:	str	r3, [sp, #28]
   14040:	add	r2, pc, r2
   14044:	str	sl, [sp, #24]
   14048:	str	r2, [sp, #52]	; 0x34
   1404c:	b	134d4 <close_stdout@@Base+0x568>
   14050:	cmp	r8, r7
   14054:	str	r9, [sp, #60]	; 0x3c
   14058:	mov	ip, r4
   1405c:	ldr	r6, [sp, #96]	; 0x60
   14060:	ldr	r9, [sp, #88]	; 0x58
   14064:	ldr	r4, [sp, #92]	; 0x5c
   14068:	ldr	r5, [sp, #100]	; 0x64
   1406c:	bls	140a4 <close_stdout@@Base+0x1138>
   14070:	ldrb	r3, [ip]
   14074:	cmp	r3, #0
   14078:	beq	140a4 <close_stdout@@Base+0x1138>
   1407c:	ldr	r3, [sp, #60]	; 0x3c
   14080:	b	14090 <close_stdout@@Base+0x1124>
   14084:	ldrb	r2, [r5, r3]
   14088:	cmp	r2, #0
   1408c:	beq	140a0 <close_stdout@@Base+0x1134>
   14090:	add	r3, r3, #1
   14094:	add	r2, fp, r3
   14098:	cmp	r8, r2
   1409c:	bhi	14084 <close_stdout@@Base+0x1118>
   140a0:	str	r3, [sp, #60]	; 0x3c
   140a4:	mov	r2, #1
   140a8:	b	13fa4 <close_stdout@@Base+0x1038>
   140ac:	str	r9, [sp, #60]	; 0x3c
   140b0:	mov	r2, #1
   140b4:	ldr	r4, [sp, #92]	; 0x5c
   140b8:	ldr	r6, [sp, #96]	; 0x60
   140bc:	ldr	r9, [sp, #88]	; 0x58
   140c0:	ldr	r5, [sp, #100]	; 0x64
   140c4:	b	13fa4 <close_stdout@@Base+0x1038>
   140c8:	ldr	r9, [sp, #36]	; 0x24
   140cc:	b	13cf0 <close_stdout@@Base+0xd84>
   140d0:	bl	1141c <__stack_chk_fail@plt>
   140d4:	ldr	r1, [pc, #100]	; 14140 <close_stdout@@Base+0x11d4>
   140d8:	mov	r3, #0
   140dc:	mov	r0, #1
   140e0:	str	r3, [sp, #24]
   140e4:	add	r1, pc, r1
   140e8:	str	r0, [sp, #28]
   140ec:	mov	r9, r3
   140f0:	str	r1, [sp, #52]	; 0x34
   140f4:	b	134d4 <close_stdout@@Base+0x568>
   140f8:	ldr	r0, [pc, #68]	; 14144 <close_stdout@@Base+0x11d8>
   140fc:	mov	r3, #1
   14100:	mov	r9, #0
   14104:	str	r3, [sp, #24]
   14108:	add	r0, pc, r0
   1410c:	str	r3, [sp, #28]
   14110:	str	r0, [sp, #52]	; 0x34
   14114:	b	134d4 <close_stdout@@Base+0x568>
   14118:			; <UNDEFINED> instruction: 0x00018bbc
   1411c:	andeq	r0, r0, r4, asr #2
   14120:	andeq	r7, r0, r8, ror #7
   14124:	andeq	r7, r0, r4, asr #7
   14128:	andeq	r7, r0, r0, lsl #7
   1412c:	andeq	r7, r0, ip, asr r3
   14130:	andeq	r7, r0, r0, ror #5
   14134:	andeq	r7, r0, r8, lsl #5
   14138:	andeq	r6, r0, r0, ror #31
   1413c:			; <UNDEFINED> instruction: 0x00006fbc
   14140:	andeq	r6, r0, r8, lsl pc
   14144:	strdeq	r6, [r0], -r8
   14148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1414c:	sub	sp, sp, #44	; 0x2c
   14150:	mov	r6, r0
   14154:	mov	r9, r1
   14158:	mov	sl, r2
   1415c:	mov	r4, r3
   14160:	bl	11578 <__errno_location@plt>
   14164:	ldr	fp, [pc, #412]	; 14308 <close_stdout@@Base+0x139c>
   14168:	cmp	r6, #0
   1416c:	add	fp, pc, fp
   14170:	ldr	r5, [fp]
   14174:	ldr	r1, [r0]
   14178:	mov	r8, r0
   1417c:	str	r1, [sp, #36]	; 0x24
   14180:	blt	14300 <close_stdout@@Base+0x1394>
   14184:	ldr	r3, [pc, #384]	; 1430c <close_stdout@@Base+0x13a0>
   14188:	add	r3, pc, r3
   1418c:	ldr	r3, [r3]
   14190:	cmp	r6, r3
   14194:	bcc	141e8 <close_stdout@@Base+0x127c>
   14198:	add	r7, r6, #1
   1419c:	cmn	r7, #-536870911	; 0xe0000001
   141a0:	bhi	14304 <close_stdout@@Base+0x1398>
   141a4:	add	r3, fp, #4
   141a8:	cmp	r5, r3
   141ac:	beq	142d8 <close_stdout@@Base+0x136c>
   141b0:	mov	r0, r5
   141b4:	lsl	r1, r7, #3
   141b8:	bl	1505c <close_stdout@@Base+0x20f0>
   141bc:	mov	r5, r0
   141c0:	str	r0, [fp]
   141c4:	ldr	fp, [pc, #324]	; 14310 <close_stdout@@Base+0x13a4>
   141c8:	mov	r1, #0
   141cc:	add	fp, pc, fp
   141d0:	ldr	r0, [fp]
   141d4:	rsb	r2, r0, r7
   141d8:	add	r0, r5, r0, lsl #3
   141dc:	lsl	r2, r2, #3
   141e0:	bl	11590 <memset@plt>
   141e4:	str	r7, [fp]
   141e8:	add	r2, r4, #8
   141ec:	str	r2, [sp, #32]
   141f0:	ldr	r1, [r4]
   141f4:	add	fp, r5, r6, lsl #3
   141f8:	ldr	lr, [sp, #32]
   141fc:	mov	r2, r9
   14200:	ldr	r3, [r4, #4]
   14204:	ldr	ip, [r5, r6, lsl #3]
   14208:	ldr	r7, [fp, #4]
   1420c:	orr	r3, r3, #1
   14210:	str	r1, [sp]
   14214:	str	r3, [sp, #4]
   14218:	mov	r1, ip
   1421c:	str	lr, [sp, #8]
   14220:	mov	r0, r7
   14224:	ldr	lr, [r4, #40]	; 0x28
   14228:	str	r3, [sp, #28]
   1422c:	mov	r3, sl
   14230:	str	lr, [sp, #12]
   14234:	ldr	lr, [r4, #44]	; 0x2c
   14238:	str	ip, [sp, #24]
   1423c:	str	lr, [sp, #16]
   14240:	bl	13420 <close_stdout@@Base+0x4b4>
   14244:	ldr	ip, [sp, #24]
   14248:	cmp	ip, r0
   1424c:	bhi	142c4 <close_stdout@@Base+0x1358>
   14250:	ldr	r3, [pc, #188]	; 14314 <close_stdout@@Base+0x13a8>
   14254:	add	r1, r0, #1
   14258:	str	r1, [r5, r6, lsl #3]
   1425c:	add	r3, pc, r3
   14260:	cmp	r7, r3
   14264:	beq	14278 <close_stdout@@Base+0x130c>
   14268:	mov	r0, r7
   1426c:	str	r1, [sp, #24]
   14270:	bl	113bc <free@plt>
   14274:	ldr	r1, [sp, #24]
   14278:	mov	r0, r1
   1427c:	str	r1, [sp, #24]
   14280:	bl	15004 <close_stdout@@Base+0x2098>
   14284:	ldr	r3, [sp, #28]
   14288:	ldr	lr, [sp, #32]
   1428c:	mov	r2, r9
   14290:	str	r0, [fp, #4]
   14294:	mov	r7, r0
   14298:	ldr	ip, [r4]
   1429c:	str	r3, [sp, #4]
   142a0:	mov	r3, sl
   142a4:	str	lr, [sp, #8]
   142a8:	str	ip, [sp]
   142ac:	ldr	ip, [r4, #40]	; 0x28
   142b0:	ldr	r1, [sp, #24]
   142b4:	str	ip, [sp, #12]
   142b8:	ldr	ip, [r4, #44]	; 0x2c
   142bc:	str	ip, [sp, #16]
   142c0:	bl	13420 <close_stdout@@Base+0x4b4>
   142c4:	ldr	r1, [sp, #36]	; 0x24
   142c8:	mov	r0, r7
   142cc:	str	r1, [r8]
   142d0:	add	sp, sp, #44	; 0x2c
   142d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d8:	lsl	r1, r7, #3
   142dc:	mov	r0, #0
   142e0:	str	r3, [sp, #24]
   142e4:	bl	1505c <close_stdout@@Base+0x20f0>
   142e8:	ldr	r3, [sp, #24]
   142ec:	mov	r5, r0
   142f0:	ldm	r3, {r0, r1}
   142f4:	str	r5, [fp]
   142f8:	stm	r5, {r0, r1}
   142fc:	b	141c4 <close_stdout@@Base+0x1258>
   14300:	bl	11680 <abort@plt>
   14304:	bl	15218 <close_stdout@@Base+0x22ac>
   14308:	andeq	r8, r1, r8, asr #32
   1430c:	strdeq	r7, [r1], -r8
   14310:			; <UNDEFINED> instruction: 0x00017fb4
   14314:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14318:	push	{r4, r5, r6, lr}
   1431c:	mov	r5, r0
   14320:	bl	11578 <__errno_location@plt>
   14324:	cmp	r5, #0
   14328:	mov	r1, #48	; 0x30
   1432c:	mov	r4, r0
   14330:	ldr	r0, [pc, #24]	; 14350 <close_stdout@@Base+0x13e4>
   14334:	ldr	r6, [r4]
   14338:	add	r0, pc, r0
   1433c:	add	r0, r0, #256	; 0x100
   14340:	movne	r0, r5
   14344:	bl	151d8 <close_stdout@@Base+0x226c>
   14348:	str	r6, [r4]
   1434c:	pop	{r4, r5, r6, pc}
   14350:			; <UNDEFINED> instruction: 0x00017eb4
   14354:	cmp	r0, #0
   14358:	beq	14364 <close_stdout@@Base+0x13f8>
   1435c:	ldr	r0, [r0]
   14360:	bx	lr
   14364:	ldr	r0, [pc, #12]	; 14378 <close_stdout@@Base+0x140c>
   14368:	add	r0, pc, r0
   1436c:	add	r0, r0, #256	; 0x100
   14370:	ldr	r0, [r0]
   14374:	bx	lr
   14378:	andeq	r7, r1, r4, lsl #29
   1437c:	cmp	r0, #0
   14380:	beq	1438c <close_stdout@@Base+0x1420>
   14384:	str	r1, [r0]
   14388:	bx	lr
   1438c:	ldr	r0, [pc, #12]	; 143a0 <close_stdout@@Base+0x1434>
   14390:	add	r0, pc, r0
   14394:	add	r0, r0, #256	; 0x100
   14398:	str	r1, [r0]
   1439c:	bx	lr
   143a0:	andeq	r7, r1, ip, asr lr
   143a4:	cmp	r0, #0
   143a8:	movne	r3, r0
   143ac:	beq	143dc <close_stdout@@Base+0x1470>
   143b0:	lsr	ip, r1, #5
   143b4:	and	r1, r1, #31
   143b8:	add	r3, r3, ip, lsl #2
   143bc:	ldr	ip, [r3, #8]
   143c0:	lsr	r0, ip, r1
   143c4:	eor	r2, r0, r2
   143c8:	and	r0, r0, #1
   143cc:	and	r2, r2, #1
   143d0:	eor	ip, ip, r2, lsl r1
   143d4:	str	ip, [r3, #8]
   143d8:	bx	lr
   143dc:	ldr	r3, [pc, #8]	; 143ec <close_stdout@@Base+0x1480>
   143e0:	add	r3, pc, r3
   143e4:	add	r3, r3, #256	; 0x100
   143e8:	b	143b0 <close_stdout@@Base+0x1444>
   143ec:	andeq	r7, r1, ip, lsl #28
   143f0:	subs	r3, r0, #0
   143f4:	beq	14404 <close_stdout@@Base+0x1498>
   143f8:	ldr	r0, [r3, #4]
   143fc:	str	r1, [r3, #4]
   14400:	bx	lr
   14404:	ldr	r3, [pc, #8]	; 14414 <close_stdout@@Base+0x14a8>
   14408:	add	r3, pc, r3
   1440c:	add	r3, r3, #256	; 0x100
   14410:	b	143f8 <close_stdout@@Base+0x148c>
   14414:	andeq	r7, r1, r4, ror #27
   14418:	cmp	r0, #0
   1441c:	push	{r3, lr}
   14420:	beq	14444 <close_stdout@@Base+0x14d8>
   14424:	cmp	r2, #0
   14428:	cmpne	r1, #0
   1442c:	mov	r3, #8
   14430:	strne	r1, [r0, #40]	; 0x28
   14434:	str	r3, [r0]
   14438:	strne	r2, [r0, #44]	; 0x2c
   1443c:	popne	{r3, pc}
   14440:	bl	11680 <abort@plt>
   14444:	ldr	r0, [pc, #8]	; 14454 <close_stdout@@Base+0x14e8>
   14448:	add	r0, pc, r0
   1444c:	add	r0, r0, #256	; 0x100
   14450:	b	14424 <close_stdout@@Base+0x14b8>
   14454:	andeq	r7, r1, r4, lsr #27
   14458:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1445c:	sub	sp, sp, #24
   14460:	mov	r7, r0
   14464:	mov	sl, r1
   14468:	ldr	r4, [sp, #56]	; 0x38
   1446c:	mov	r9, r2
   14470:	mov	r8, r3
   14474:	cmp	r4, #0
   14478:	beq	144cc <close_stdout@@Base+0x1560>
   1447c:	bl	11578 <__errno_location@plt>
   14480:	ldr	r3, [r4]
   14484:	add	lr, r4, #8
   14488:	mov	r1, sl
   1448c:	mov	r2, r9
   14490:	ldr	r6, [r0]
   14494:	mov	r5, r0
   14498:	str	r3, [sp]
   1449c:	mov	r0, r7
   144a0:	ldr	ip, [r4, #4]
   144a4:	mov	r3, r8
   144a8:	stmib	sp, {ip, lr}
   144ac:	ldr	ip, [r4, #40]	; 0x28
   144b0:	str	ip, [sp, #12]
   144b4:	ldr	ip, [r4, #44]	; 0x2c
   144b8:	str	ip, [sp, #16]
   144bc:	bl	13420 <close_stdout@@Base+0x4b4>
   144c0:	str	r6, [r5]
   144c4:	add	sp, sp, #24
   144c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144cc:	ldr	r4, [pc, #8]	; 144dc <close_stdout@@Base+0x1570>
   144d0:	add	r4, pc, r4
   144d4:	add	r4, r4, #256	; 0x100
   144d8:	b	1447c <close_stdout@@Base+0x1510>
   144dc:	andeq	r7, r1, ip, lsl sp
   144e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144e4:	subs	r4, r3, #0
   144e8:	sub	sp, sp, #36	; 0x24
   144ec:	mov	r7, r0
   144f0:	mov	r6, r1
   144f4:	mov	r5, r2
   144f8:	beq	145b4 <close_stdout@@Base+0x1648>
   144fc:	bl	11578 <__errno_location@plt>
   14500:	ldr	r3, [r4]
   14504:	ldr	sl, [r4, #4]
   14508:	add	r9, r4, #8
   1450c:	mov	r8, r0
   14510:	mov	r0, #0
   14514:	ldr	r2, [r8]
   14518:	cmp	r5, r0
   1451c:	orreq	sl, sl, #1
   14520:	str	r9, [sp, #8]
   14524:	mov	r1, r0
   14528:	stm	sp, {r3, sl}
   1452c:	mov	r3, r6
   14530:	ldr	ip, [r4, #40]	; 0x28
   14534:	str	r2, [sp, #28]
   14538:	mov	r2, r7
   1453c:	str	ip, [sp, #12]
   14540:	ldr	ip, [r4, #44]	; 0x2c
   14544:	str	ip, [sp, #16]
   14548:	bl	13420 <close_stdout@@Base+0x4b4>
   1454c:	add	r1, r0, #1
   14550:	mov	fp, r0
   14554:	str	r1, [sp, #24]
   14558:	mov	r0, r1
   1455c:	bl	15004 <close_stdout@@Base+0x2098>
   14560:	ldr	lr, [r4]
   14564:	str	sl, [sp, #4]
   14568:	mov	r3, r6
   1456c:	str	r9, [sp, #8]
   14570:	mov	r2, r7
   14574:	str	lr, [sp]
   14578:	ldr	lr, [r4, #40]	; 0x28
   1457c:	ldr	r1, [sp, #24]
   14580:	str	lr, [sp, #12]
   14584:	ldr	lr, [r4, #44]	; 0x2c
   14588:	str	lr, [sp, #16]
   1458c:	str	r0, [sp, #24]
   14590:	bl	13420 <close_stdout@@Base+0x4b4>
   14594:	ldr	r3, [sp, #28]
   14598:	cmp	r5, #0
   1459c:	str	r3, [r8]
   145a0:	ldr	ip, [sp, #24]
   145a4:	strne	fp, [r5]
   145a8:	mov	r0, ip
   145ac:	add	sp, sp, #36	; 0x24
   145b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145b4:	ldr	r4, [pc, #8]	; 145c4 <close_stdout@@Base+0x1658>
   145b8:	add	r4, pc, r4
   145bc:	add	r4, r4, #256	; 0x100
   145c0:	b	144fc <close_stdout@@Base+0x1590>
   145c4:	andeq	r7, r1, r4, lsr ip
   145c8:	mov	r3, r2
   145cc:	mov	r2, #0
   145d0:	b	144e0 <close_stdout@@Base+0x1574>
   145d4:	ldr	r2, [pc, #152]	; 14674 <close_stdout@@Base+0x1708>
   145d8:	push	{r3, r4, r5, r6, r7, lr}
   145dc:	add	r2, pc, r2
   145e0:	ldr	r3, [pc, #144]	; 14678 <close_stdout@@Base+0x170c>
   145e4:	ldr	r6, [r2]
   145e8:	add	r3, pc, r3
   145ec:	cmp	r6, #1
   145f0:	ldr	r7, [r3]
   145f4:	movhi	r4, #1
   145f8:	movhi	r5, r7
   145fc:	bls	14618 <close_stdout@@Base+0x16ac>
   14600:	ldr	r0, [r5, #12]
   14604:	add	r4, r4, #1
   14608:	bl	113bc <free@plt>
   1460c:	cmp	r4, r6
   14610:	add	r5, r5, #8
   14614:	bne	14600 <close_stdout@@Base+0x1694>
   14618:	ldr	r4, [pc, #92]	; 1467c <close_stdout@@Base+0x1710>
   1461c:	ldr	r0, [r7, #4]
   14620:	add	r4, pc, r4
   14624:	cmp	r0, r4
   14628:	beq	14640 <close_stdout@@Base+0x16d4>
   1462c:	bl	113bc <free@plt>
   14630:	ldr	r3, [pc, #72]	; 14680 <close_stdout@@Base+0x1714>
   14634:	mov	r2, #256	; 0x100
   14638:	add	r3, pc, r3
   1463c:	stmib	r3, {r2, r4}
   14640:	ldr	r4, [pc, #60]	; 14684 <close_stdout@@Base+0x1718>
   14644:	add	r4, pc, r4
   14648:	add	r5, r4, #4
   1464c:	cmp	r7, r5
   14650:	beq	14660 <close_stdout@@Base+0x16f4>
   14654:	mov	r0, r7
   14658:	bl	113bc <free@plt>
   1465c:	str	r5, [r4]
   14660:	ldr	r3, [pc, #32]	; 14688 <close_stdout@@Base+0x171c>
   14664:	mov	r2, #1
   14668:	add	r3, pc, r3
   1466c:	str	r2, [r3]
   14670:	pop	{r3, r4, r5, r6, r7, pc}
   14674:	andeq	r7, r1, r4, lsr #23
   14678:	andeq	r7, r1, ip, asr #23
   1467c:	andeq	r7, r1, ip, asr #23
   14680:	andeq	r7, r1, ip, ror fp
   14684:	andeq	r7, r1, r0, ror fp
   14688:	andeq	r7, r1, r8, lsl fp
   1468c:	ldr	r3, [pc, #12]	; 146a0 <close_stdout@@Base+0x1734>
   14690:	mvn	r2, #0
   14694:	add	r3, pc, r3
   14698:	add	r3, r3, #256	; 0x100
   1469c:	b	14148 <close_stdout@@Base+0x11dc>
   146a0:	andeq	r7, r1, r8, asr fp
   146a4:	ldr	r3, [pc, #8]	; 146b4 <close_stdout@@Base+0x1748>
   146a8:	add	r3, pc, r3
   146ac:	add	r3, r3, #256	; 0x100
   146b0:	b	14148 <close_stdout@@Base+0x11dc>
   146b4:	andeq	r7, r1, r4, asr #22
   146b8:	mov	r1, r0
   146bc:	mov	r0, #0
   146c0:	b	1468c <close_stdout@@Base+0x1720>
   146c4:	mov	r2, r1
   146c8:	mov	r1, r0
   146cc:	mov	r0, #0
   146d0:	b	146a4 <close_stdout@@Base+0x1738>
   146d4:	ldr	r3, [pc, #92]	; 14738 <close_stdout@@Base+0x17cc>
   146d8:	ldr	ip, [pc, #92]	; 1473c <close_stdout@@Base+0x17d0>
   146dc:	add	r3, pc, r3
   146e0:	push	{r4, r5, r6, r7, lr}
   146e4:	sub	sp, sp, #60	; 0x3c
   146e8:	ldr	r4, [r3, ip]
   146ec:	add	r5, sp, #4
   146f0:	mov	r7, r2
   146f4:	mov	r6, r0
   146f8:	mov	r0, r5
   146fc:	ldr	r3, [r4]
   14700:	str	r3, [sp, #52]	; 0x34
   14704:	bl	13268 <close_stdout@@Base+0x2fc>
   14708:	mov	r3, r5
   1470c:	mvn	r2, #0
   14710:	mov	r0, r6
   14714:	mov	r1, r7
   14718:	bl	14148 <close_stdout@@Base+0x11dc>
   1471c:	ldr	r2, [sp, #52]	; 0x34
   14720:	ldr	r3, [r4]
   14724:	cmp	r2, r3
   14728:	bne	14734 <close_stdout@@Base+0x17c8>
   1472c:	add	sp, sp, #60	; 0x3c
   14730:	pop	{r4, r5, r6, r7, pc}
   14734:	bl	1141c <__stack_chk_fail@plt>
   14738:	andeq	r7, r1, ip, lsl r9
   1473c:	andeq	r0, r0, r4, asr #2
   14740:	ldr	ip, [pc, #96]	; 147a8 <close_stdout@@Base+0x183c>
   14744:	push	{r4, r5, r6, r7, r8, lr}
   14748:	add	ip, pc, ip
   1474c:	ldr	lr, [pc, #88]	; 147ac <close_stdout@@Base+0x1840>
   14750:	sub	sp, sp, #56	; 0x38
   14754:	mov	r8, r3
   14758:	add	r5, sp, #4
   1475c:	mov	r7, r2
   14760:	mov	r6, r0
   14764:	ldr	r4, [ip, lr]
   14768:	mov	r0, r5
   1476c:	ldr	r3, [r4]
   14770:	str	r3, [sp, #52]	; 0x34
   14774:	bl	13268 <close_stdout@@Base+0x2fc>
   14778:	mov	r2, r8
   1477c:	mov	r3, r5
   14780:	mov	r0, r6
   14784:	mov	r1, r7
   14788:	bl	14148 <close_stdout@@Base+0x11dc>
   1478c:	ldr	r2, [sp, #52]	; 0x34
   14790:	ldr	r3, [r4]
   14794:	cmp	r2, r3
   14798:	bne	147a4 <close_stdout@@Base+0x1838>
   1479c:	add	sp, sp, #56	; 0x38
   147a0:	pop	{r4, r5, r6, r7, r8, pc}
   147a4:	bl	1141c <__stack_chk_fail@plt>
   147a8:			; <UNDEFINED> instruction: 0x000178b0
   147ac:	andeq	r0, r0, r4, asr #2
   147b0:	mov	r2, r1
   147b4:	mov	r1, r0
   147b8:	mov	r0, #0
   147bc:	b	146d4 <close_stdout@@Base+0x1768>
   147c0:	mov	ip, r1
   147c4:	mov	r3, r2
   147c8:	mov	r1, r0
   147cc:	mov	r2, ip
   147d0:	mov	r0, #0
   147d4:	b	14740 <close_stdout@@Base+0x17d4>
   147d8:	push	{r4, r5, r6, r7, r8, lr}
   147dc:	mov	r5, r2
   147e0:	ldr	lr, [pc, #136]	; 14870 <close_stdout@@Base+0x1904>
   147e4:	mov	r7, r0
   147e8:	mov	r6, r1
   147ec:	ldr	r4, [pc, #128]	; 14874 <close_stdout@@Base+0x1908>
   147f0:	add	lr, pc, lr
   147f4:	sub	sp, sp, #56	; 0x38
   147f8:	add	lr, lr, #256	; 0x100
   147fc:	ldr	r8, [pc, #116]	; 14878 <close_stdout@@Base+0x190c>
   14800:	add	r4, pc, r4
   14804:	add	ip, sp, #4
   14808:	ldm	lr!, {r0, r1, r2, r3}
   1480c:	ldr	r4, [r4, r8]
   14810:	stmia	ip!, {r0, r1, r2, r3}
   14814:	ldm	lr!, {r0, r1, r2, r3}
   14818:	ldr	r8, [r4]
   1481c:	stmia	ip!, {r0, r1, r2, r3}
   14820:	ldm	lr, {r0, r1, r2, r3}
   14824:	str	r8, [sp, #52]	; 0x34
   14828:	stm	ip, {r0, r1, r2, r3}
   1482c:	mov	r1, r5
   14830:	add	r5, sp, #4
   14834:	mov	r2, #1
   14838:	mov	r0, r5
   1483c:	bl	143a4 <close_stdout@@Base+0x1438>
   14840:	mov	r2, r6
   14844:	mov	r3, r5
   14848:	mov	r1, r7
   1484c:	mov	r0, #0
   14850:	bl	14148 <close_stdout@@Base+0x11dc>
   14854:	ldr	r2, [sp, #52]	; 0x34
   14858:	ldr	r3, [r4]
   1485c:	cmp	r2, r3
   14860:	bne	1486c <close_stdout@@Base+0x1900>
   14864:	add	sp, sp, #56	; 0x38
   14868:	pop	{r4, r5, r6, r7, r8, pc}
   1486c:	bl	1141c <__stack_chk_fail@plt>
   14870:	strdeq	r7, [r1], -ip
   14874:	strdeq	r7, [r1], -r8
   14878:	andeq	r0, r0, r4, asr #2
   1487c:	mov	r2, r1
   14880:	mvn	r1, #0
   14884:	b	147d8 <close_stdout@@Base+0x186c>
   14888:	mov	r1, #58	; 0x3a
   1488c:	b	1487c <close_stdout@@Base+0x1910>
   14890:	mov	r2, #58	; 0x3a
   14894:	b	147d8 <close_stdout@@Base+0x186c>
   14898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1489c:	mov	r5, r2
   148a0:	ldr	lr, [pc, #144]	; 14938 <close_stdout@@Base+0x19cc>
   148a4:	mov	r8, r0
   148a8:	mov	r9, r1
   148ac:	mov	r7, r3
   148b0:	add	lr, pc, lr
   148b4:	ldr	r4, [pc, #128]	; 1493c <close_stdout@@Base+0x19d0>
   148b8:	add	lr, lr, #256	; 0x100
   148bc:	sub	sp, sp, #56	; 0x38
   148c0:	ldr	sl, [pc, #120]	; 14940 <close_stdout@@Base+0x19d4>
   148c4:	add	r4, pc, r4
   148c8:	ldm	lr!, {r0, r1, r2, r3}
   148cc:	add	ip, sp, #4
   148d0:	ldr	r4, [r4, sl]
   148d4:	ldr	r6, [sp, #88]	; 0x58
   148d8:	stmia	ip!, {r0, r1, r2, r3}
   148dc:	ldm	lr!, {r0, r1, r2, r3}
   148e0:	ldr	sl, [r4]
   148e4:	stmia	ip!, {r0, r1, r2, r3}
   148e8:	ldm	lr, {r0, r1, r2, r3}
   148ec:	str	sl, [sp, #52]	; 0x34
   148f0:	stm	ip, {r0, r1, r2, r3}
   148f4:	mov	r2, r5
   148f8:	add	r5, sp, #4
   148fc:	mov	r1, r9
   14900:	mov	r0, r5
   14904:	bl	14418 <close_stdout@@Base+0x14ac>
   14908:	mov	r2, r6
   1490c:	mov	r3, r5
   14910:	mov	r0, r8
   14914:	mov	r1, r7
   14918:	bl	14148 <close_stdout@@Base+0x11dc>
   1491c:	ldr	r2, [sp, #52]	; 0x34
   14920:	ldr	r3, [r4]
   14924:	cmp	r2, r3
   14928:	bne	14934 <close_stdout@@Base+0x19c8>
   1492c:	add	sp, sp, #56	; 0x38
   14930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14934:	bl	1141c <__stack_chk_fail@plt>
   14938:	andeq	r7, r1, ip, lsr r9
   1493c:	andeq	r7, r1, r4, lsr r7
   14940:	andeq	r0, r0, r4, asr #2
   14944:	push	{lr}		; (str lr, [sp, #-4]!)
   14948:	sub	sp, sp, #12
   1494c:	mvn	ip, #0
   14950:	str	ip, [sp]
   14954:	bl	14898 <close_stdout@@Base+0x192c>
   14958:	add	sp, sp, #12
   1495c:	pop	{pc}		; (ldr pc, [sp], #4)
   14960:	mov	ip, r1
   14964:	mov	r3, r2
   14968:	mov	r1, r0
   1496c:	mov	r2, ip
   14970:	mov	r0, #0
   14974:	b	14944 <close_stdout@@Base+0x19d8>
   14978:	push	{lr}		; (str lr, [sp, #-4]!)
   1497c:	sub	sp, sp, #12
   14980:	mov	lr, r1
   14984:	mov	ip, r2
   14988:	mov	r1, r0
   1498c:	str	r3, [sp]
   14990:	mov	r2, lr
   14994:	mov	r3, ip
   14998:	mov	r0, #0
   1499c:	bl	14898 <close_stdout@@Base+0x192c>
   149a0:	add	sp, sp, #12
   149a4:	pop	{pc}		; (ldr pc, [sp], #4)
   149a8:	ldr	r3, [pc, #12]	; 149bc <close_stdout@@Base+0x1a50>
   149ac:	ldr	ip, [pc, #12]	; 149c0 <close_stdout@@Base+0x1a54>
   149b0:	add	r3, pc, r3
   149b4:	ldr	r3, [r3, ip]
   149b8:	b	14148 <close_stdout@@Base+0x11dc>
   149bc:	andeq	r7, r1, r8, asr #12
   149c0:	andeq	r0, r0, ip, lsr r1
   149c4:	mov	r2, r1
   149c8:	mov	r1, r0
   149cc:	mov	r0, #0
   149d0:	b	149a8 <close_stdout@@Base+0x1a3c>
   149d4:	mvn	r2, #0
   149d8:	b	149a8 <close_stdout@@Base+0x1a3c>
   149dc:	mov	r1, r0
   149e0:	mov	r0, #0
   149e4:	b	149d4 <close_stdout@@Base+0x1a68>
   149e8:	ldr	r3, [pc, #104]	; 14a58 <close_stdout@@Base+0x1aec>
   149ec:	ldr	ip, [pc, #104]	; 14a5c <close_stdout@@Base+0x1af0>
   149f0:	add	r3, pc, r3
   149f4:	ldr	r1, [pc, #100]	; 14a60 <close_stdout@@Base+0x1af4>
   149f8:	push	{r4, r5, r6, r7, lr}
   149fc:	sub	sp, sp, #116	; 0x74
   14a00:	ldr	r7, [r3, ip]
   14a04:	mov	r6, r0
   14a08:	mov	r2, sp
   14a0c:	mov	r0, #3
   14a10:	add	r1, pc, r1
   14a14:	ldr	r3, [r7]
   14a18:	str	r3, [sp, #108]	; 0x6c
   14a1c:	bl	11698 <__lxstat64@plt>
   14a20:	cmp	r0, #0
   14a24:	ldrdeq	r2, [sp]
   14a28:	moveq	r0, r6
   14a2c:	ldrdeq	r4, [sp, #96]	; 0x60
   14a30:	movne	r0, #0
   14a34:	strdeq	r2, [r6, #8]
   14a38:	strdeq	r4, [r6]
   14a3c:	ldr	r2, [sp, #108]	; 0x6c
   14a40:	ldr	r3, [r7]
   14a44:	cmp	r2, r3
   14a48:	bne	14a54 <close_stdout@@Base+0x1ae8>
   14a4c:	add	sp, sp, #116	; 0x74
   14a50:	pop	{r4, r5, r6, r7, pc}
   14a54:	bl	1141c <__stack_chk_fail@plt>
   14a58:	andeq	r7, r1, r8, lsl #12
   14a5c:	andeq	r0, r0, r4, asr #2
   14a60:	andeq	r6, r0, r4, lsl r1
   14a64:	push	{r4, r5, r6, r7, lr}
   14a68:	cmp	r1, #0
   14a6c:	sub	sp, sp, #36	; 0x24
   14a70:	ldr	r7, [pc, #896]	; 14df8 <close_stdout@@Base+0x1e8c>
   14a74:	mov	ip, r3
   14a78:	mov	r5, r0
   14a7c:	add	r7, pc, r7
   14a80:	ldr	r4, [sp, #56]	; 0x38
   14a84:	ldr	r6, [sp, #60]	; 0x3c
   14a88:	beq	14dcc <close_stdout@@Base+0x1e60>
   14a8c:	str	r2, [sp]
   14a90:	mov	r3, r1
   14a94:	ldr	r2, [pc, #864]	; 14dfc <close_stdout@@Base+0x1e90>
   14a98:	mov	r1, #1
   14a9c:	str	ip, [sp, #4]
   14aa0:	add	r2, pc, r2
   14aa4:	bl	115c0 <__fprintf_chk@plt>
   14aa8:	ldr	r1, [pc, #848]	; 14e00 <close_stdout@@Base+0x1e94>
   14aac:	mov	r2, #5
   14ab0:	mov	r0, #0
   14ab4:	add	r1, pc, r1
   14ab8:	bl	11410 <dcgettext@plt>
   14abc:	ldr	r2, [pc, #832]	; 14e04 <close_stdout@@Base+0x1e98>
   14ac0:	movw	ip, #2013	; 0x7dd
   14ac4:	mov	r1, #1
   14ac8:	ldr	r2, [r7, r2]
   14acc:	str	ip, [sp]
   14ad0:	mov	r3, r0
   14ad4:	mov	r0, r5
   14ad8:	bl	115c0 <__fprintf_chk@plt>
   14adc:	ldr	r1, [pc, #804]	; 14e08 <close_stdout@@Base+0x1e9c>
   14ae0:	mov	r0, #0
   14ae4:	mov	r2, #5
   14ae8:	add	r1, pc, r1
   14aec:	bl	11410 <dcgettext@plt>
   14af0:	mov	r1, r5
   14af4:	bl	11374 <fputs_unlocked@plt>
   14af8:	cmp	r6, #9
   14afc:	addls	pc, pc, r6, lsl #2
   14b00:	b	14de8 <close_stdout@@Base+0x1e7c>
   14b04:	b	14b98 <close_stdout@@Base+0x1c2c>
   14b08:	b	14b9c <close_stdout@@Base+0x1c30>
   14b0c:	b	14bcc <close_stdout@@Base+0x1c60>
   14b10:	b	14c00 <close_stdout@@Base+0x1c94>
   14b14:	b	14c3c <close_stdout@@Base+0x1cd0>
   14b18:	b	14c7c <close_stdout@@Base+0x1d10>
   14b1c:	b	14cc4 <close_stdout@@Base+0x1d58>
   14b20:	b	14d14 <close_stdout@@Base+0x1da8>
   14b24:	b	14d6c <close_stdout@@Base+0x1e00>
   14b28:	b	14b2c <close_stdout@@Base+0x1bc0>
   14b2c:	ldr	r1, [pc, #728]	; 14e0c <close_stdout@@Base+0x1ea0>
   14b30:	mov	r0, #0
   14b34:	add	r1, pc, r1
   14b38:	mov	r2, #5
   14b3c:	bl	11410 <dcgettext@plt>
   14b40:	ldm	r4, {r3, ip}
   14b44:	mov	r1, #1
   14b48:	str	ip, [sp]
   14b4c:	ldr	ip, [r4, #8]
   14b50:	str	ip, [sp, #4]
   14b54:	ldr	ip, [r4, #12]
   14b58:	str	ip, [sp, #8]
   14b5c:	ldr	ip, [r4, #16]
   14b60:	str	ip, [sp, #12]
   14b64:	ldr	ip, [r4, #20]
   14b68:	str	ip, [sp, #16]
   14b6c:	ldr	ip, [r4, #24]
   14b70:	str	ip, [sp, #20]
   14b74:	ldr	ip, [r4, #28]
   14b78:	str	ip, [sp, #24]
   14b7c:	ldr	ip, [r4, #32]
   14b80:	str	ip, [sp, #28]
   14b84:	mov	r2, r0
   14b88:	mov	r0, r5
   14b8c:	bl	115c0 <__fprintf_chk@plt>
   14b90:	add	sp, sp, #36	; 0x24
   14b94:	pop	{r4, r5, r6, r7, pc}
   14b98:	bl	11680 <abort@plt>
   14b9c:	ldr	r1, [pc, #620]	; 14e10 <close_stdout@@Base+0x1ea4>
   14ba0:	mov	r2, #5
   14ba4:	mov	r0, #0
   14ba8:	add	r1, pc, r1
   14bac:	bl	11410 <dcgettext@plt>
   14bb0:	ldr	r3, [r4]
   14bb4:	mov	r1, #1
   14bb8:	mov	r2, r0
   14bbc:	mov	r0, r5
   14bc0:	add	sp, sp, #36	; 0x24
   14bc4:	pop	{r4, r5, r6, r7, lr}
   14bc8:	b	115c0 <__fprintf_chk@plt>
   14bcc:	ldr	r1, [pc, #576]	; 14e14 <close_stdout@@Base+0x1ea8>
   14bd0:	mov	r2, #5
   14bd4:	mov	r0, #0
   14bd8:	add	r1, pc, r1
   14bdc:	bl	11410 <dcgettext@plt>
   14be0:	ldm	r4, {r3, ip}
   14be4:	mov	r1, #1
   14be8:	str	ip, [sp, #56]	; 0x38
   14bec:	mov	r2, r0
   14bf0:	mov	r0, r5
   14bf4:	add	sp, sp, #36	; 0x24
   14bf8:	pop	{r4, r5, r6, r7, lr}
   14bfc:	b	115c0 <__fprintf_chk@plt>
   14c00:	ldr	r1, [pc, #528]	; 14e18 <close_stdout@@Base+0x1eac>
   14c04:	mov	r2, #5
   14c08:	mov	r0, #0
   14c0c:	add	r1, pc, r1
   14c10:	bl	11410 <dcgettext@plt>
   14c14:	ldm	r4, {r3, ip}
   14c18:	mov	r1, #1
   14c1c:	str	ip, [sp, #56]	; 0x38
   14c20:	ldr	ip, [r4, #8]
   14c24:	str	ip, [sp, #60]	; 0x3c
   14c28:	mov	r2, r0
   14c2c:	mov	r0, r5
   14c30:	add	sp, sp, #36	; 0x24
   14c34:	pop	{r4, r5, r6, r7, lr}
   14c38:	b	115c0 <__fprintf_chk@plt>
   14c3c:	ldr	r1, [pc, #472]	; 14e1c <close_stdout@@Base+0x1eb0>
   14c40:	mov	r2, #5
   14c44:	mov	r0, #0
   14c48:	add	r1, pc, r1
   14c4c:	bl	11410 <dcgettext@plt>
   14c50:	ldm	r4, {r3, ip}
   14c54:	mov	r1, #1
   14c58:	str	ip, [sp]
   14c5c:	ldr	ip, [r4, #8]
   14c60:	str	ip, [sp, #4]
   14c64:	ldr	ip, [r4, #12]
   14c68:	str	ip, [sp, #8]
   14c6c:	mov	r2, r0
   14c70:	mov	r0, r5
   14c74:	bl	115c0 <__fprintf_chk@plt>
   14c78:	b	14b90 <close_stdout@@Base+0x1c24>
   14c7c:	ldr	r1, [pc, #412]	; 14e20 <close_stdout@@Base+0x1eb4>
   14c80:	mov	r2, #5
   14c84:	mov	r0, #0
   14c88:	add	r1, pc, r1
   14c8c:	bl	11410 <dcgettext@plt>
   14c90:	ldm	r4, {r3, ip}
   14c94:	mov	r1, #1
   14c98:	str	ip, [sp]
   14c9c:	ldr	ip, [r4, #8]
   14ca0:	str	ip, [sp, #4]
   14ca4:	ldr	ip, [r4, #12]
   14ca8:	str	ip, [sp, #8]
   14cac:	ldr	ip, [r4, #16]
   14cb0:	str	ip, [sp, #12]
   14cb4:	mov	r2, r0
   14cb8:	mov	r0, r5
   14cbc:	bl	115c0 <__fprintf_chk@plt>
   14cc0:	b	14b90 <close_stdout@@Base+0x1c24>
   14cc4:	ldr	r1, [pc, #344]	; 14e24 <close_stdout@@Base+0x1eb8>
   14cc8:	mov	r2, #5
   14ccc:	mov	r0, #0
   14cd0:	add	r1, pc, r1
   14cd4:	bl	11410 <dcgettext@plt>
   14cd8:	ldm	r4, {r3, ip}
   14cdc:	mov	r1, #1
   14ce0:	str	ip, [sp]
   14ce4:	ldr	ip, [r4, #8]
   14ce8:	str	ip, [sp, #4]
   14cec:	ldr	ip, [r4, #12]
   14cf0:	str	ip, [sp, #8]
   14cf4:	ldr	ip, [r4, #16]
   14cf8:	str	ip, [sp, #12]
   14cfc:	ldr	ip, [r4, #20]
   14d00:	str	ip, [sp, #16]
   14d04:	mov	r2, r0
   14d08:	mov	r0, r5
   14d0c:	bl	115c0 <__fprintf_chk@plt>
   14d10:	b	14b90 <close_stdout@@Base+0x1c24>
   14d14:	ldr	r1, [pc, #268]	; 14e28 <close_stdout@@Base+0x1ebc>
   14d18:	mov	r2, #5
   14d1c:	mov	r0, #0
   14d20:	add	r1, pc, r1
   14d24:	bl	11410 <dcgettext@plt>
   14d28:	ldm	r4, {r3, ip}
   14d2c:	mov	r1, #1
   14d30:	str	ip, [sp]
   14d34:	ldr	ip, [r4, #8]
   14d38:	str	ip, [sp, #4]
   14d3c:	ldr	ip, [r4, #12]
   14d40:	str	ip, [sp, #8]
   14d44:	ldr	ip, [r4, #16]
   14d48:	str	ip, [sp, #12]
   14d4c:	ldr	ip, [r4, #20]
   14d50:	str	ip, [sp, #16]
   14d54:	ldr	ip, [r4, #24]
   14d58:	str	ip, [sp, #20]
   14d5c:	mov	r2, r0
   14d60:	mov	r0, r5
   14d64:	bl	115c0 <__fprintf_chk@plt>
   14d68:	b	14b90 <close_stdout@@Base+0x1c24>
   14d6c:	ldr	r1, [pc, #184]	; 14e2c <close_stdout@@Base+0x1ec0>
   14d70:	mov	r2, #5
   14d74:	mov	r0, #0
   14d78:	add	r1, pc, r1
   14d7c:	bl	11410 <dcgettext@plt>
   14d80:	ldm	r4, {r3, ip}
   14d84:	mov	r1, #1
   14d88:	str	ip, [sp]
   14d8c:	ldr	ip, [r4, #8]
   14d90:	str	ip, [sp, #4]
   14d94:	ldr	ip, [r4, #12]
   14d98:	str	ip, [sp, #8]
   14d9c:	ldr	ip, [r4, #16]
   14da0:	str	ip, [sp, #12]
   14da4:	ldr	ip, [r4, #20]
   14da8:	str	ip, [sp, #16]
   14dac:	ldr	ip, [r4, #24]
   14db0:	str	ip, [sp, #20]
   14db4:	ldr	ip, [r4, #28]
   14db8:	str	ip, [sp, #24]
   14dbc:	mov	r2, r0
   14dc0:	mov	r0, r5
   14dc4:	bl	115c0 <__fprintf_chk@plt>
   14dc8:	b	14b90 <close_stdout@@Base+0x1c24>
   14dcc:	str	r3, [sp]
   14dd0:	mov	r3, r2
   14dd4:	ldr	r2, [pc, #84]	; 14e30 <close_stdout@@Base+0x1ec4>
   14dd8:	mov	r1, #1
   14ddc:	add	r2, pc, r2
   14de0:	bl	115c0 <__fprintf_chk@plt>
   14de4:	b	14aa8 <close_stdout@@Base+0x1b3c>
   14de8:	ldr	r1, [pc, #68]	; 14e34 <close_stdout@@Base+0x1ec8>
   14dec:	mov	r0, #0
   14df0:	add	r1, pc, r1
   14df4:	b	14b38 <close_stdout@@Base+0x1bcc>
   14df8:	andeq	r7, r1, ip, ror r5
   14dfc:			; <UNDEFINED> instruction: 0x000065b0
   14e00:			; <UNDEFINED> instruction: 0x000065b0
   14e04:	andeq	r0, r0, r0, ror r1
   14e08:	andeq	r6, r0, r0, lsl #11
   14e0c:	andeq	r6, r0, ip, lsl #14
   14e10:	andeq	r6, r0, ip, lsl #11
   14e14:	andeq	r6, r0, ip, ror #10
   14e18:	andeq	r6, r0, r0, asr r5
   14e1c:	andeq	r6, r0, r0, lsr r5
   14e20:	andeq	r6, r0, r0, lsl r5
   14e24:	andeq	r6, r0, ip, ror #9
   14e28:	andeq	r6, r0, r4, asr #9
   14e2c:	muleq	r0, r8, r4
   14e30:	andeq	r6, r0, r0, lsl #5
   14e34:	andeq	r6, r0, r4, lsl #9
   14e38:	push	{r4, r5, lr}
   14e3c:	sub	sp, sp, #12
   14e40:	ldr	r5, [sp, #24]
   14e44:	ldr	ip, [r5]
   14e48:	cmp	ip, #0
   14e4c:	beq	14e68 <close_stdout@@Base+0x1efc>
   14e50:	mov	lr, r5
   14e54:	mov	ip, #0
   14e58:	ldr	r4, [lr, #4]!
   14e5c:	add	ip, ip, #1
   14e60:	cmp	r4, #0
   14e64:	bne	14e58 <close_stdout@@Base+0x1eec>
   14e68:	stm	sp, {r5, ip}
   14e6c:	bl	14a64 <close_stdout@@Base+0x1af8>
   14e70:	add	sp, sp, #12
   14e74:	pop	{r4, r5, pc}
   14e78:	push	{r4, r5, r6, r7, lr}
   14e7c:	sub	sp, sp, #60	; 0x3c
   14e80:	ldr	r4, [pc, #100]	; 14eec <close_stdout@@Base+0x1f80>
   14e84:	mov	ip, #0
   14e88:	ldr	r5, [pc, #96]	; 14ef0 <close_stdout@@Base+0x1f84>
   14e8c:	mov	lr, ip
   14e90:	add	r4, pc, r4
   14e94:	ldr	r6, [sp, #80]	; 0x50
   14e98:	ldr	r7, [r4, r5]
   14e9c:	add	r5, sp, #12
   14ea0:	ldr	r4, [r7]
   14ea4:	str	r4, [sp, #52]	; 0x34
   14ea8:	ldr	r4, [r6, ip]
   14eac:	cmp	r4, #0
   14eb0:	str	r4, [r5, ip]
   14eb4:	beq	14ec8 <close_stdout@@Base+0x1f5c>
   14eb8:	add	lr, lr, #1
   14ebc:	add	ip, ip, #4
   14ec0:	cmp	lr, #10
   14ec4:	bne	14ea8 <close_stdout@@Base+0x1f3c>
   14ec8:	stm	sp, {r5, lr}
   14ecc:	bl	14a64 <close_stdout@@Base+0x1af8>
   14ed0:	ldr	r2, [sp, #52]	; 0x34
   14ed4:	ldr	r3, [r7]
   14ed8:	cmp	r2, r3
   14edc:	bne	14ee8 <close_stdout@@Base+0x1f7c>
   14ee0:	add	sp, sp, #60	; 0x3c
   14ee4:	pop	{r4, r5, r6, r7, pc}
   14ee8:	bl	1141c <__stack_chk_fail@plt>
   14eec:	andeq	r7, r1, r8, ror #2
   14ef0:	andeq	r0, r0, r4, asr #2
   14ef4:	push	{r3}		; (str r3, [sp, #-4]!)
   14ef8:	push	{r4, lr}
   14efc:	sub	sp, sp, #20
   14f00:	ldr	lr, [pc, #72]	; 14f50 <close_stdout@@Base+0x1fe4>
   14f04:	add	ip, sp, #32
   14f08:	ldr	r4, [pc, #68]	; 14f54 <close_stdout@@Base+0x1fe8>
   14f0c:	add	lr, pc, lr
   14f10:	ldr	r3, [sp, #28]
   14f14:	ldr	r4, [lr, r4]
   14f18:	str	ip, [sp]
   14f1c:	str	ip, [sp, #8]
   14f20:	ldr	ip, [r4]
   14f24:	str	ip, [sp, #12]
   14f28:	bl	14e78 <close_stdout@@Base+0x1f0c>
   14f2c:	ldr	r2, [sp, #12]
   14f30:	ldr	r3, [r4]
   14f34:	cmp	r2, r3
   14f38:	bne	14f4c <close_stdout@@Base+0x1fe0>
   14f3c:	add	sp, sp, #20
   14f40:	pop	{r4, lr}
   14f44:	add	sp, sp, #4
   14f48:	bx	lr
   14f4c:	bl	1141c <__stack_chk_fail@plt>
   14f50:	andeq	r7, r1, ip, ror #1
   14f54:	andeq	r0, r0, r4, asr #2
   14f58:	ldr	r1, [pc, #132]	; 14fe4 <close_stdout@@Base+0x2078>
   14f5c:	mov	r2, #5
   14f60:	push	{r4, lr}
   14f64:	add	r1, pc, r1
   14f68:	mov	r0, #0
   14f6c:	ldr	r4, [pc, #116]	; 14fe8 <close_stdout@@Base+0x207c>
   14f70:	bl	11410 <dcgettext@plt>
   14f74:	ldr	r2, [pc, #112]	; 14fec <close_stdout@@Base+0x2080>
   14f78:	add	r4, pc, r4
   14f7c:	add	r2, pc, r2
   14f80:	mov	r1, r0
   14f84:	mov	r0, #1
   14f88:	bl	115a8 <__printf_chk@plt>
   14f8c:	ldr	r1, [pc, #92]	; 14ff0 <close_stdout@@Base+0x2084>
   14f90:	mov	r2, #5
   14f94:	mov	r0, #0
   14f98:	add	r1, pc, r1
   14f9c:	bl	11410 <dcgettext@plt>
   14fa0:	ldr	r2, [pc, #76]	; 14ff4 <close_stdout@@Base+0x2088>
   14fa4:	ldr	r3, [pc, #76]	; 14ff8 <close_stdout@@Base+0x208c>
   14fa8:	add	r2, pc, r2
   14fac:	add	r3, pc, r3
   14fb0:	mov	r1, r0
   14fb4:	mov	r0, #1
   14fb8:	bl	115a8 <__printf_chk@plt>
   14fbc:	ldr	r1, [pc, #56]	; 14ffc <close_stdout@@Base+0x2090>
   14fc0:	mov	r0, #0
   14fc4:	mov	r2, #5
   14fc8:	add	r1, pc, r1
   14fcc:	bl	11410 <dcgettext@plt>
   14fd0:	ldr	r3, [pc, #40]	; 15000 <close_stdout@@Base+0x2094>
   14fd4:	ldr	r3, [r4, r3]
   14fd8:	pop	{r4, lr}
   14fdc:	ldr	r1, [r3]
   14fe0:	b	11374 <fputs_unlocked@plt>
   14fe4:	andeq	r6, r0, ip, asr #6
   14fe8:	andeq	r7, r1, r0, lsl #1
   14fec:	andeq	r6, r0, ip, asr #6
   14ff0:	andeq	r6, r0, r8, asr #6
   14ff4:	andeq	r5, r0, r0, ror #19
   14ff8:	andeq	r5, r0, ip, ror #19
   14ffc:	andeq	r6, r0, ip, lsr #6
   15000:	andeq	r0, r0, r0, ror #2
   15004:	push	{r4, lr}
   15008:	mov	r4, r0
   1500c:	bl	114d0 <malloc@plt>
   15010:	rsbs	r3, r0, #1
   15014:	movcc	r3, #0
   15018:	cmp	r4, #0
   1501c:	moveq	r3, #0
   15020:	cmp	r3, #0
   15024:	popeq	{r4, pc}
   15028:	bl	15218 <close_stdout@@Base+0x22ac>
   1502c:	push	{r3, r4, r5, lr}
   15030:	mov	r4, r0
   15034:	mvn	r0, #0
   15038:	mov	r5, r1
   1503c:	bl	19638 <fts_children@@Base+0x1d38>
   15040:	cmp	r0, r4
   15044:	bcc	15054 <close_stdout@@Base+0x20e8>
   15048:	mul	r0, r4, r5
   1504c:	pop	{r3, r4, r5, lr}
   15050:	b	15004 <close_stdout@@Base+0x2098>
   15054:	bl	15218 <close_stdout@@Base+0x22ac>
   15058:	b	15004 <close_stdout@@Base+0x2098>
   1505c:	rsbs	r3, r1, #1
   15060:	push	{r4, lr}
   15064:	movcc	r3, #0
   15068:	cmp	r0, #0
   1506c:	mov	r4, r1
   15070:	moveq	r3, #0
   15074:	cmp	r3, #0
   15078:	bne	1509c <close_stdout@@Base+0x2130>
   1507c:	bl	11428 <realloc@plt>
   15080:	rsbs	r3, r0, #1
   15084:	movcc	r3, #0
   15088:	cmp	r4, #0
   1508c:	moveq	r3, #0
   15090:	cmp	r3, #0
   15094:	popeq	{r4, pc}
   15098:	bl	15218 <close_stdout@@Base+0x22ac>
   1509c:	bl	113bc <free@plt>
   150a0:	mov	r0, #0
   150a4:	pop	{r4, pc}
   150a8:	push	{r4, r5, r6, lr}
   150ac:	mov	r5, r1
   150b0:	mov	r6, r0
   150b4:	mov	r1, r2
   150b8:	mvn	r0, #0
   150bc:	mov	r4, r2
   150c0:	bl	19638 <fts_children@@Base+0x1d38>
   150c4:	cmp	r0, r5
   150c8:	bcc	150dc <close_stdout@@Base+0x2170>
   150cc:	mov	r0, r6
   150d0:	mul	r1, r5, r4
   150d4:	pop	{r4, r5, r6, lr}
   150d8:	b	1505c <close_stdout@@Base+0x20f0>
   150dc:	bl	15218 <close_stdout@@Base+0x22ac>
   150e0:	push	{r3, r4, r5, r6, r7, lr}
   150e4:	subs	r7, r0, #0
   150e8:	mov	r5, r1
   150ec:	mov	r6, r2
   150f0:	ldr	r4, [r1]
   150f4:	beq	1512c <close_stdout@@Base+0x21c0>
   150f8:	movw	r0, #43690	; 0xaaaa
   150fc:	mov	r1, r2
   15100:	bfi	r0, r0, #16, #16
   15104:	bl	19638 <fts_children@@Base+0x1d38>
   15108:	cmp	r4, r0
   1510c:	addcc	r3, r4, #1
   15110:	addcc	r4, r4, r3, lsr #1
   15114:	bcs	15150 <close_stdout@@Base+0x21e4>
   15118:	str	r4, [r5]
   1511c:	mov	r0, r7
   15120:	mul	r1, r6, r4
   15124:	pop	{r3, r4, r5, r6, r7, lr}
   15128:	b	1505c <close_stdout@@Base+0x20f0>
   1512c:	cmp	r4, #0
   15130:	bne	15118 <close_stdout@@Base+0x21ac>
   15134:	mov	r0, #64	; 0x40
   15138:	mov	r1, r2
   1513c:	bl	19638 <fts_children@@Base+0x1d38>
   15140:	cmp	r0, #0
   15144:	movne	r4, r0
   15148:	addeq	r4, r0, #1
   1514c:	b	15118 <close_stdout@@Base+0x21ac>
   15150:	bl	15218 <close_stdout@@Base+0x22ac>
   15154:	cmp	r0, #0
   15158:	push	{r3, lr}
   1515c:	ldr	r3, [r1]
   15160:	beq	1518c <close_stdout@@Base+0x2220>
   15164:	movw	r2, #43689	; 0xaaa9
   15168:	movt	r2, #43690	; 0xaaaa
   1516c:	cmp	r3, r2
   15170:	addls	r2, r3, #1
   15174:	addls	r3, r3, r2, lsr #1
   15178:	bhi	151a4 <close_stdout@@Base+0x2238>
   1517c:	str	r3, [r1]
   15180:	mov	r1, r3
   15184:	pop	{r3, lr}
   15188:	b	1505c <close_stdout@@Base+0x20f0>
   1518c:	cmp	r3, #0
   15190:	moveq	r3, #64	; 0x40
   15194:	str	r3, [r1]
   15198:	mov	r1, r3
   1519c:	pop	{r3, lr}
   151a0:	b	1505c <close_stdout@@Base+0x20f0>
   151a4:	bl	15218 <close_stdout@@Base+0x22ac>
   151a8:	push	{r4, lr}
   151ac:	mov	r4, r0
   151b0:	bl	15004 <close_stdout@@Base+0x2098>
   151b4:	mov	r2, r4
   151b8:	mov	r1, #0
   151bc:	pop	{r4, lr}
   151c0:	b	11590 <memset@plt>
   151c4:	push	{r3, lr}
   151c8:	bl	1135c <calloc@plt>
   151cc:	cmp	r0, #0
   151d0:	popne	{r3, pc}
   151d4:	bl	15218 <close_stdout@@Base+0x22ac>
   151d8:	push	{r3, r4, r5, lr}
   151dc:	mov	r4, r1
   151e0:	mov	r5, r0
   151e4:	mov	r0, r1
   151e8:	bl	15004 <close_stdout@@Base+0x2098>
   151ec:	mov	r1, r5
   151f0:	mov	r2, r4
   151f4:	pop	{r3, r4, r5, lr}
   151f8:	b	113e0 <memcpy@plt>
   151fc:	push	{r4, lr}
   15200:	mov	r4, r0
   15204:	bl	11530 <strlen@plt>
   15208:	add	r1, r0, #1
   1520c:	mov	r0, r4
   15210:	pop	{r4, lr}
   15214:	b	151d8 <close_stdout@@Base+0x226c>
   15218:	ldr	r3, [pc, #64]	; 15260 <close_stdout@@Base+0x22f4>
   1521c:	mov	r2, #5
   15220:	ldr	ip, [pc, #60]	; 15264 <close_stdout@@Base+0x22f8>
   15224:	mov	r0, #0
   15228:	add	r3, pc, r3
   1522c:	ldr	r1, [pc, #52]	; 15268 <close_stdout@@Base+0x22fc>
   15230:	push	{r4, lr}
   15234:	add	r1, pc, r1
   15238:	ldr	r3, [r3, ip]
   1523c:	ldr	r4, [r3]
   15240:	bl	11410 <dcgettext@plt>
   15244:	ldr	r2, [pc, #32]	; 1526c <close_stdout@@Base+0x2300>
   15248:	mov	r1, #0
   1524c:	add	r2, pc, r2
   15250:	mov	r3, r0
   15254:	mov	r0, r4
   15258:	bl	114ac <error@plt>
   1525c:	bl	11680 <abort@plt>
   15260:	ldrdeq	r6, [r1], -r0
   15264:	andeq	r0, r0, r4, ror #2
   15268:	andeq	r6, r0, r0, lsr r1
   1526c:	andeq	r5, r0, r0, asr #26
   15270:	push	{r3, lr}
   15274:	orr	r1, r1, #512	; 0x200
   15278:	bl	16b60 <fts_open@@Base>
   1527c:	cmp	r0, #0
   15280:	popne	{r3, pc}
   15284:	bl	11578 <__errno_location@plt>
   15288:	ldr	r3, [r0]
   1528c:	cmp	r3, #22
   15290:	beq	15298 <close_stdout@@Base+0x232c>
   15294:	bl	15218 <close_stdout@@Base+0x22ac>
   15298:	ldr	r0, [pc, #24]	; 152b8 <close_stdout@@Base+0x234c>
   1529c:	mov	r2, #41	; 0x29
   152a0:	ldr	r1, [pc, #20]	; 152bc <close_stdout@@Base+0x2350>
   152a4:	ldr	r3, [pc, #20]	; 152c0 <close_stdout@@Base+0x2354>
   152a8:	add	r0, pc, r0
   152ac:	add	r1, pc, r1
   152b0:	add	r3, pc, r3
   152b4:	bl	116c8 <__assert_fail@plt>
   152b8:	ldrdeq	r6, [r0], -ip
   152bc:	strdeq	r6, [r0], -r8
   152c0:	andeq	r6, r0, r8, asr #1
   152c4:	ldr	r3, [r0, #48]	; 0x30
   152c8:	and	r3, r3, #17
   152cc:	cmp	r3, #16
   152d0:	beq	152f4 <close_stdout@@Base+0x2388>
   152d4:	cmp	r3, #17
   152d8:	beq	152e4 <close_stdout@@Base+0x2378>
   152dc:	mov	r0, #0
   152e0:	bx	lr
   152e4:	ldr	r0, [r1, #48]	; 0x30
   152e8:	adds	r0, r0, #0
   152ec:	movne	r0, #1
   152f0:	bx	lr
   152f4:	mov	r0, #1
   152f8:	bx	lr
   152fc:	ldr	ip, [pc, #1308]	; 15820 <close_stdout@@Base+0x28b4>
   15300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15304:	mov	sl, r2
   15308:	ldr	r2, [pc, #1300]	; 15824 <close_stdout@@Base+0x28b8>
   1530c:	add	ip, pc, ip
   15310:	mov	r9, r3
   15314:	sub	sp, sp, #20
   15318:	mov	r3, ip
   1531c:	cmp	sl, #36	; 0x24
   15320:	ldr	r6, [ip, r2]
   15324:	mov	r5, r0
   15328:	mov	r7, r1
   1532c:	ldr	r8, [sp, #56]	; 0x38
   15330:	ldr	r3, [r6]
   15334:	str	r3, [sp, #12]
   15338:	bhi	15800 <close_stdout@@Base+0x2894>
   1533c:	cmp	r1, #0
   15340:	addeq	r7, sp, #8
   15344:	bl	1150c <__ctype_b_loc@plt>
   15348:	ldrb	ip, [r5]
   1534c:	mov	r2, r5
   15350:	ldr	r1, [r0]
   15354:	b	1535c <close_stdout@@Base+0x23f0>
   15358:	ldrb	ip, [r2, #1]!
   1535c:	lsl	r3, ip, #1
   15360:	ldrh	r4, [r1, r3]
   15364:	and	r4, r4, #8192	; 0x2000
   15368:	uxth	r4, r4
   1536c:	cmp	r4, #0
   15370:	bne	15358 <close_stdout@@Base+0x23ec>
   15374:	cmp	ip, #45	; 0x2d
   15378:	bne	15398 <close_stdout@@Base+0x242c>
   1537c:	mov	r0, #4
   15380:	ldr	r2, [sp, #12]
   15384:	ldr	r3, [r6]
   15388:	cmp	r2, r3
   1538c:	bne	157fc <close_stdout@@Base+0x2890>
   15390:	add	sp, sp, #20
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15398:	bl	11578 <__errno_location@plt>
   1539c:	mov	r2, sl
   153a0:	mov	r1, r7
   153a4:	str	r4, [r0]
   153a8:	mov	fp, r0
   153ac:	mov	r0, r5
   153b0:	bl	11524 <strtoul@plt>
   153b4:	ldr	r3, [r7]
   153b8:	cmp	r3, r5
   153bc:	mov	sl, r0
   153c0:	beq	15550 <close_stdout@@Base+0x25e4>
   153c4:	ldr	r0, [fp]
   153c8:	cmp	r0, #0
   153cc:	bne	153fc <close_stdout@@Base+0x2490>
   153d0:	mov	r4, r0
   153d4:	cmp	r8, #0
   153d8:	streq	sl, [r9]
   153dc:	moveq	r0, r4
   153e0:	beq	15380 <close_stdout@@Base+0x2414>
   153e4:	ldrb	r5, [r3]
   153e8:	cmp	r5, #0
   153ec:	bne	1540c <close_stdout@@Base+0x24a0>
   153f0:	mov	r0, r4
   153f4:	str	sl, [r9]
   153f8:	b	15380 <close_stdout@@Base+0x2414>
   153fc:	cmp	r0, #34	; 0x22
   15400:	moveq	r4, #1
   15404:	bne	1537c <close_stdout@@Base+0x2410>
   15408:	b	153d4 <close_stdout@@Base+0x2468>
   1540c:	mov	r0, r8
   15410:	mov	r1, r5
   15414:	str	r3, [sp, #4]
   15418:	bl	1153c <strchr@plt>
   1541c:	ldr	r3, [sp, #4]
   15420:	cmp	r0, #0
   15424:	beq	15588 <close_stdout@@Base+0x261c>
   15428:	mov	r0, r8
   1542c:	mov	r1, #48	; 0x30
   15430:	str	r3, [sp, #4]
   15434:	bl	1153c <strchr@plt>
   15438:	ldr	r3, [sp, #4]
   1543c:	cmp	r0, #0
   15440:	beq	15460 <close_stdout@@Base+0x24f4>
   15444:	ldrb	r2, [r3, #1]
   15448:	cmp	r2, #68	; 0x44
   1544c:	beq	157e4 <close_stdout@@Base+0x2878>
   15450:	cmp	r2, #105	; 0x69
   15454:	beq	157cc <close_stdout@@Base+0x2860>
   15458:	cmp	r2, #66	; 0x42
   1545c:	beq	157e4 <close_stdout@@Base+0x2878>
   15460:	mov	r8, #1
   15464:	mov	fp, #1024	; 0x400
   15468:	sub	r5, r5, #66	; 0x42
   1546c:	cmp	r5, #53	; 0x35
   15470:	addls	pc, pc, r5, lsl #2
   15474:	b	15588 <close_stdout@@Base+0x261c>
   15478:	b	15778 <close_stdout@@Base+0x280c>
   1547c:	b	15588 <close_stdout@@Base+0x261c>
   15480:	b	15588 <close_stdout@@Base+0x261c>
   15484:	b	15738 <close_stdout@@Base+0x27cc>
   15488:	b	15588 <close_stdout@@Base+0x261c>
   1548c:	b	1578c <close_stdout@@Base+0x2820>
   15490:	b	15588 <close_stdout@@Base+0x261c>
   15494:	b	15588 <close_stdout@@Base+0x261c>
   15498:	b	15588 <close_stdout@@Base+0x261c>
   1549c:	b	15718 <close_stdout@@Base+0x27ac>
   154a0:	b	15588 <close_stdout@@Base+0x261c>
   154a4:	b	156e4 <close_stdout@@Base+0x2778>
   154a8:	b	15588 <close_stdout@@Base+0x261c>
   154ac:	b	15588 <close_stdout@@Base+0x261c>
   154b0:	b	156a4 <close_stdout@@Base+0x2738>
   154b4:	b	15588 <close_stdout@@Base+0x261c>
   154b8:	b	15588 <close_stdout@@Base+0x261c>
   154bc:	b	15588 <close_stdout@@Base+0x261c>
   154c0:	b	15664 <close_stdout@@Base+0x26f8>
   154c4:	b	15588 <close_stdout@@Base+0x261c>
   154c8:	b	15588 <close_stdout@@Base+0x261c>
   154cc:	b	15588 <close_stdout@@Base+0x261c>
   154d0:	b	15588 <close_stdout@@Base+0x261c>
   154d4:	b	15624 <close_stdout@@Base+0x26b8>
   154d8:	b	155e4 <close_stdout@@Base+0x2678>
   154dc:	b	15588 <close_stdout@@Base+0x261c>
   154e0:	b	15588 <close_stdout@@Base+0x261c>
   154e4:	b	15588 <close_stdout@@Base+0x261c>
   154e8:	b	15588 <close_stdout@@Base+0x261c>
   154ec:	b	15588 <close_stdout@@Base+0x261c>
   154f0:	b	15588 <close_stdout@@Base+0x261c>
   154f4:	b	15588 <close_stdout@@Base+0x261c>
   154f8:	b	155d0 <close_stdout@@Base+0x2664>
   154fc:	b	15594 <close_stdout@@Base+0x2628>
   15500:	b	15588 <close_stdout@@Base+0x261c>
   15504:	b	15588 <close_stdout@@Base+0x261c>
   15508:	b	15588 <close_stdout@@Base+0x261c>
   1550c:	b	1578c <close_stdout@@Base+0x2820>
   15510:	b	15588 <close_stdout@@Base+0x261c>
   15514:	b	15588 <close_stdout@@Base+0x261c>
   15518:	b	15588 <close_stdout@@Base+0x261c>
   1551c:	b	15718 <close_stdout@@Base+0x27ac>
   15520:	b	15588 <close_stdout@@Base+0x261c>
   15524:	b	156e4 <close_stdout@@Base+0x2778>
   15528:	b	15588 <close_stdout@@Base+0x261c>
   1552c:	b	15588 <close_stdout@@Base+0x261c>
   15530:	b	15588 <close_stdout@@Base+0x261c>
   15534:	b	15588 <close_stdout@@Base+0x261c>
   15538:	b	15588 <close_stdout@@Base+0x261c>
   1553c:	b	15588 <close_stdout@@Base+0x261c>
   15540:	b	15664 <close_stdout@@Base+0x26f8>
   15544:	b	15588 <close_stdout@@Base+0x261c>
   15548:	b	15588 <close_stdout@@Base+0x261c>
   1554c:	b	155b4 <close_stdout@@Base+0x2648>
   15550:	cmp	r8, #0
   15554:	beq	1537c <close_stdout@@Base+0x2410>
   15558:	ldrb	r5, [r5]
   1555c:	cmp	r5, #0
   15560:	beq	1537c <close_stdout@@Base+0x2410>
   15564:	mov	r0, r8
   15568:	mov	r1, r5
   1556c:	str	r3, [sp, #4]
   15570:	bl	1153c <strchr@plt>
   15574:	ldr	r3, [sp, #4]
   15578:	cmp	r0, #0
   1557c:	movne	sl, #1
   15580:	bne	15428 <close_stdout@@Base+0x24bc>
   15584:	b	1537c <close_stdout@@Base+0x2410>
   15588:	str	sl, [r9]
   1558c:	orr	r0, r4, #2
   15590:	b	15380 <close_stdout@@Base+0x2414>
   15594:	mov	r2, #0
   15598:	add	r1, r3, r8
   1559c:	str	r1, [r7]
   155a0:	ldrb	r3, [r3, r8]
   155a4:	orr	r4, r4, r2
   155a8:	cmp	r3, #0
   155ac:	orrne	r4, r4, #2
   155b0:	b	153f0 <close_stdout@@Base+0x2484>
   155b4:	cmn	sl, #-2147483647	; 0x80000001
   155b8:	lslls	sl, sl, #1
   155bc:	movls	r2, #0
   155c0:	bls	15598 <close_stdout@@Base+0x262c>
   155c4:	mvn	sl, #0
   155c8:	mov	r2, #1
   155cc:	b	15598 <close_stdout@@Base+0x262c>
   155d0:	cmp	sl, #8388608	; 0x800000
   155d4:	lslcc	sl, sl, #9
   155d8:	movcc	r2, #0
   155dc:	bcc	15598 <close_stdout@@Base+0x262c>
   155e0:	b	155c4 <close_stdout@@Base+0x2658>
   155e4:	mov	r1, fp
   155e8:	mvn	r0, #0
   155ec:	str	r3, [sp, #4]
   155f0:	bl	19638 <fts_children@@Base+0x1d38>
   155f4:	ldr	r3, [sp, #4]
   155f8:	mov	r1, #7
   155fc:	mov	r2, #0
   15600:	cmp	r0, sl
   15604:	movcs	ip, #0
   15608:	movcc	ip, #1
   1560c:	mulcs	sl, fp, sl
   15610:	mvncc	sl, #0
   15614:	subs	r1, r1, #1
   15618:	orr	r2, r2, ip
   1561c:	bne	15600 <close_stdout@@Base+0x2694>
   15620:	b	15598 <close_stdout@@Base+0x262c>
   15624:	mov	r1, fp
   15628:	mvn	r0, #0
   1562c:	str	r3, [sp, #4]
   15630:	bl	19638 <fts_children@@Base+0x1d38>
   15634:	ldr	r3, [sp, #4]
   15638:	mov	r1, #8
   1563c:	mov	r2, #0
   15640:	cmp	r0, sl
   15644:	movcs	ip, #0
   15648:	movcc	ip, #1
   1564c:	mulcs	sl, fp, sl
   15650:	mvncc	sl, #0
   15654:	subs	r1, r1, #1
   15658:	orr	r2, r2, ip
   1565c:	bne	15640 <close_stdout@@Base+0x26d4>
   15660:	b	15598 <close_stdout@@Base+0x262c>
   15664:	mov	r1, fp
   15668:	mvn	r0, #0
   1566c:	str	r3, [sp, #4]
   15670:	bl	19638 <fts_children@@Base+0x1d38>
   15674:	ldr	r3, [sp, #4]
   15678:	mov	r1, #4
   1567c:	mov	r2, #0
   15680:	cmp	r0, sl
   15684:	movcs	ip, #0
   15688:	movcc	ip, #1
   1568c:	mulcs	sl, fp, sl
   15690:	mvncc	sl, #0
   15694:	subs	r1, r1, #1
   15698:	orr	r2, r2, ip
   1569c:	bne	15680 <close_stdout@@Base+0x2714>
   156a0:	b	15598 <close_stdout@@Base+0x262c>
   156a4:	mov	r1, fp
   156a8:	mvn	r0, #0
   156ac:	str	r3, [sp, #4]
   156b0:	bl	19638 <fts_children@@Base+0x1d38>
   156b4:	ldr	r3, [sp, #4]
   156b8:	mov	r1, #5
   156bc:	mov	r2, #0
   156c0:	cmp	r0, sl
   156c4:	movcs	ip, #0
   156c8:	movcc	ip, #1
   156cc:	mulcs	sl, fp, sl
   156d0:	mvncc	sl, #0
   156d4:	subs	r1, r1, #1
   156d8:	orr	r2, r2, ip
   156dc:	bne	156c0 <close_stdout@@Base+0x2754>
   156e0:	b	15598 <close_stdout@@Base+0x262c>
   156e4:	mvn	r0, #0
   156e8:	mov	r1, fp
   156ec:	str	r3, [sp, #4]
   156f0:	bl	19638 <fts_children@@Base+0x1d38>
   156f4:	ldr	r3, [sp, #4]
   156f8:	cmp	sl, r0
   156fc:	bhi	157f0 <close_stdout@@Base+0x2884>
   15700:	mul	sl, sl, fp
   15704:	cmp	r0, sl
   15708:	bcc	157f0 <close_stdout@@Base+0x2884>
   1570c:	mul	sl, fp, sl
   15710:	mov	r2, #0
   15714:	b	15598 <close_stdout@@Base+0x262c>
   15718:	mvn	r0, #0
   1571c:	mov	r1, fp
   15720:	str	r3, [sp, #4]
   15724:	bl	19638 <fts_children@@Base+0x1d38>
   15728:	ldr	r3, [sp, #4]
   1572c:	cmp	sl, r0
   15730:	bhi	155c4 <close_stdout@@Base+0x2658>
   15734:	b	1570c <close_stdout@@Base+0x27a0>
   15738:	mov	r1, fp
   1573c:	mvn	r0, #0
   15740:	str	r3, [sp, #4]
   15744:	bl	19638 <fts_children@@Base+0x1d38>
   15748:	ldr	r3, [sp, #4]
   1574c:	mov	r1, #6
   15750:	mov	r2, #0
   15754:	cmp	r0, sl
   15758:	movcs	ip, #0
   1575c:	movcc	ip, #1
   15760:	mulcs	sl, fp, sl
   15764:	mvncc	sl, #0
   15768:	subs	r1, r1, #1
   1576c:	orr	r2, r2, ip
   15770:	bne	15754 <close_stdout@@Base+0x27e8>
   15774:	b	15598 <close_stdout@@Base+0x262c>
   15778:	cmp	sl, #4194304	; 0x400000
   1577c:	lslcc	sl, sl, #10
   15780:	movcc	r2, #0
   15784:	bcc	15598 <close_stdout@@Base+0x262c>
   15788:	b	155c4 <close_stdout@@Base+0x2658>
   1578c:	mov	r1, fp
   15790:	mvn	r0, #0
   15794:	str	r3, [sp, #4]
   15798:	bl	19638 <fts_children@@Base+0x1d38>
   1579c:	ldr	r3, [sp, #4]
   157a0:	mov	r1, #3
   157a4:	mov	r2, #0
   157a8:	cmp	r0, sl
   157ac:	movcs	ip, #0
   157b0:	movcc	ip, #1
   157b4:	mulcs	sl, fp, sl
   157b8:	mvncc	sl, #0
   157bc:	subs	r1, r1, #1
   157c0:	orr	r2, r2, ip
   157c4:	bne	157a8 <close_stdout@@Base+0x283c>
   157c8:	b	15598 <close_stdout@@Base+0x262c>
   157cc:	ldrb	r8, [r3, #2]
   157d0:	mov	fp, #1024	; 0x400
   157d4:	cmp	r8, #66	; 0x42
   157d8:	moveq	r8, #3
   157dc:	movne	r8, #1
   157e0:	b	15468 <close_stdout@@Base+0x24fc>
   157e4:	mov	r8, #2
   157e8:	mov	fp, #1000	; 0x3e8
   157ec:	b	15468 <close_stdout@@Base+0x24fc>
   157f0:	mov	r2, #1
   157f4:	mvn	sl, #0
   157f8:	b	15598 <close_stdout@@Base+0x262c>
   157fc:	bl	1141c <__stack_chk_fail@plt>
   15800:	ldr	r0, [pc, #32]	; 15828 <close_stdout@@Base+0x28bc>
   15804:	mov	r2, #96	; 0x60
   15808:	ldr	r1, [pc, #28]	; 1582c <close_stdout@@Base+0x28c0>
   1580c:	ldr	r3, [pc, #28]	; 15830 <close_stdout@@Base+0x28c4>
   15810:	add	r0, pc, r0
   15814:	add	r1, pc, r1
   15818:	add	r3, pc, r3
   1581c:	bl	116c8 <__assert_fail@plt>
   15820:	andeq	r6, r1, ip, ror #25
   15824:	andeq	r0, r0, r4, asr #2
   15828:	andeq	r5, r0, ip, lsr #23
   1582c:	ldrdeq	r5, [r0], -r0
   15830:	muleq	r0, r8, fp
   15834:	push	{r4, r5}
   15838:	mov	ip, r1
   1583c:	ldrd	r4, [r0, #8]
   15840:	ldrd	r2, [r1, #8]
   15844:	cmp	r5, r3
   15848:	cmpeq	r4, r2
   1584c:	movne	r0, #0
   15850:	beq	1585c <close_stdout@@Base+0x28f0>
   15854:	pop	{r4, r5}
   15858:	bx	lr
   1585c:	ldrd	r0, [r0]
   15860:	ldrd	r2, [ip]
   15864:	pop	{r4, r5}
   15868:	cmp	r1, r3
   1586c:	cmpeq	r0, r2
   15870:	movne	r0, #0
   15874:	moveq	r0, #1
   15878:	bx	lr
   1587c:	push	{r3, lr}
   15880:	mov	r2, r1
   15884:	mov	r3, #0
   15888:	ldrd	r0, [r0, #8]
   1588c:	bl	19844 <fts_children@@Base+0x1f44>
   15890:	mov	r0, r2
   15894:	pop	{r3, pc}
   15898:	push	{r3, lr}
   1589c:	mov	r2, r1
   158a0:	mov	r3, #0
   158a4:	ldrd	r0, [r0]
   158a8:	bl	19844 <fts_children@@Base+0x1f44>
   158ac:	mov	r0, r2
   158b0:	pop	{r3, pc}
   158b4:	ldrd	r2, [r0]
   158b8:	ldrd	r0, [r1]
   158bc:	cmp	r3, r1
   158c0:	cmpeq	r2, r0
   158c4:	movne	r0, #0
   158c8:	moveq	r0, #1
   158cc:	bx	lr
   158d0:	ldr	r3, [r0]
   158d4:	ldr	r2, [r1]
   158d8:	ldrd	r0, [r3, #168]	; 0xa8
   158dc:	ldrd	r2, [r2, #168]	; 0xa8
   158e0:	cmp	r1, r3
   158e4:	cmpeq	r0, r2
   158e8:	bcc	158f8 <close_stdout@@Base+0x298c>
   158ec:	movls	r0, #0
   158f0:	movhi	r0, #1
   158f4:	bx	lr
   158f8:	mvn	r0, #0
   158fc:	bx	lr
   15900:	push	{r3, r4, r5, r6, r7, lr}
   15904:	mov	r7, r2
   15908:	ldr	r2, [r0, #40]	; 0x28
   1590c:	mov	r5, r0
   15910:	mov	r4, r1
   15914:	ldr	r6, [r0, #44]	; 0x2c
   15918:	cmp	r2, r7
   1591c:	bcc	15998 <close_stdout@@Base+0x2a2c>
   15920:	ldr	ip, [r0, #8]
   15924:	cmp	r4, #0
   15928:	beq	159e8 <close_stdout@@Base+0x2a7c>
   1592c:	str	r4, [ip], #4
   15930:	ldr	r4, [r4, #8]
   15934:	cmp	r4, #0
   15938:	bne	1592c <close_stdout@@Base+0x29c0>
   1593c:	ldr	r0, [r5, #8]
   15940:	mov	r3, r6
   15944:	mov	r2, #4
   15948:	mov	r1, r7
   1594c:	bl	11644 <qsort@plt>
   15950:	ldr	r2, [r5, #8]
   15954:	subs	r3, r7, #1
   15958:	ldr	r4, [r2]
   1595c:	beq	159e0 <close_stdout@@Base+0x2a74>
   15960:	add	ip, r2, #4
   15964:	mov	r6, r4
   15968:	b	15970 <close_stdout@@Base+0x2a04>
   1596c:	ldr	r6, [ip, #-4]
   15970:	ldr	r5, [ip], #4
   15974:	subs	r3, r3, #1
   15978:	str	r5, [r6, #8]
   1597c:	bne	1596c <close_stdout@@Base+0x2a00>
   15980:	add	r7, r2, r7, lsl #2
   15984:	ldr	r2, [r7, #-4]
   15988:	mov	r3, #0
   1598c:	mov	r0, r4
   15990:	str	r3, [r2, #8]
   15994:	pop	{r3, r4, r5, r6, r7, pc}
   15998:	add	r1, r7, #40	; 0x28
   1599c:	str	r1, [r0, #40]	; 0x28
   159a0:	cmn	r1, #-1073741823	; 0xc0000001
   159a4:	bhi	159c4 <close_stdout@@Base+0x2a58>
   159a8:	lsl	r1, r1, #2
   159ac:	ldr	r0, [r0, #8]
   159b0:	bl	11428 <realloc@plt>
   159b4:	cmp	r0, #0
   159b8:	movne	ip, r0
   159bc:	strne	r0, [r5, #8]
   159c0:	bne	15924 <close_stdout@@Base+0x29b8>
   159c4:	ldr	r0, [r5, #8]
   159c8:	bl	113bc <free@plt>
   159cc:	mov	r3, #0
   159d0:	mov	r0, r4
   159d4:	str	r3, [r5, #8]
   159d8:	str	r3, [r5, #40]	; 0x28
   159dc:	pop	{r3, r4, r5, r6, r7, pc}
   159e0:	mov	r2, r4
   159e4:	b	15988 <close_stdout@@Base+0x2a1c>
   159e8:	mov	r0, ip
   159ec:	b	15940 <close_stdout@@Base+0x29d4>
   159f0:	push	{r3, r4, r5, r6, r7, lr}
   159f4:	mov	r6, r0
   159f8:	add	r0, r2, #184	; 0xb8
   159fc:	mov	r5, r2
   15a00:	mov	r7, r1
   15a04:	bl	114d0 <malloc@plt>
   15a08:	subs	r4, r0, #0
   15a0c:	beq	15a58 <close_stdout@@Base+0x2aec>
   15a10:	mov	r1, r7
   15a14:	mov	r2, r5
   15a18:	add	r0, r4, #176	; 0xb0
   15a1c:	bl	113e0 <memcpy@plt>
   15a20:	add	r1, r4, r5
   15a24:	mov	r3, #0
   15a28:	mov	r2, #3
   15a2c:	strb	r3, [r1, #176]	; 0xb0
   15a30:	str	r5, [r4, #52]	; 0x34
   15a34:	str	r6, [r4, #44]	; 0x2c
   15a38:	ldr	r1, [r6, #24]
   15a3c:	str	r3, [r4, #32]
   15a40:	str	r3, [r4, #12]
   15a44:	str	r1, [r4, #28]
   15a48:	strh	r3, [r4, #62]	; 0x3e
   15a4c:	str	r3, [r4, #16]
   15a50:	str	r3, [r4, #20]
   15a54:	strh	r2, [r4, #64]	; 0x40
   15a58:	mov	r0, r4
   15a5c:	pop	{r3, r4, r5, r6, r7, pc}
   15a60:	push	{r3, r4, r5, lr}
   15a64:	subs	r4, r0, #0
   15a68:	popeq	{r3, r4, r5, pc}
   15a6c:	ldr	r0, [r4, #12]
   15a70:	ldr	r5, [r4, #8]
   15a74:	cmp	r0, #0
   15a78:	beq	15a80 <close_stdout@@Base+0x2b14>
   15a7c:	bl	116a4 <closedir@plt>
   15a80:	mov	r0, r4
   15a84:	mov	r4, r5
   15a88:	bl	113bc <free@plt>
   15a8c:	cmp	r5, #0
   15a90:	bne	15a6c <close_stdout@@Base+0x2b00>
   15a94:	pop	{r3, r4, r5, pc}
   15a98:	push	{r4, lr}
   15a9c:	mov	r4, r0
   15aa0:	b	15ab0 <close_stdout@@Base+0x2b44>
   15aa4:	bl	18e00 <fts_children@@Base+0x1500>
   15aa8:	cmp	r0, #0
   15aac:	bge	15ac8 <close_stdout@@Base+0x2b5c>
   15ab0:	mov	r0, r4
   15ab4:	bl	18db4 <fts_children@@Base+0x14b4>
   15ab8:	cmp	r0, #0
   15abc:	mov	r0, r4
   15ac0:	beq	15aa4 <close_stdout@@Base+0x2b38>
   15ac4:	pop	{r4, pc}
   15ac8:	bl	1168c <close@plt>
   15acc:	b	15ab0 <close_stdout@@Base+0x2b44>
   15ad0:	push	{r3, r4, r5, lr}
   15ad4:	mov	r5, r1
   15ad8:	ldr	r1, [r0, #32]
   15adc:	mov	r4, r0
   15ae0:	subs	r0, r1, r5
   15ae4:	rsbs	r3, r0, #0
   15ae8:	adcs	r3, r3, r0
   15aec:	cmn	r1, #100	; 0x64
   15af0:	moveq	r3, #0
   15af4:	cmp	r3, #0
   15af8:	bne	15b40 <close_stdout@@Base+0x2bd4>
   15afc:	cmp	r2, #0
   15b00:	bne	15b28 <close_stdout@@Base+0x2bbc>
   15b04:	ldr	r3, [r4, #48]	; 0x30
   15b08:	tst	r3, #4
   15b0c:	bne	15b20 <close_stdout@@Base+0x2bb4>
   15b10:	cmp	r1, #0
   15b14:	blt	15b20 <close_stdout@@Base+0x2bb4>
   15b18:	mov	r0, r1
   15b1c:	bl	1168c <close@plt>
   15b20:	str	r5, [r4, #32]
   15b24:	pop	{r3, r4, r5, pc}
   15b28:	add	r0, r4, #60	; 0x3c
   15b2c:	bl	18dbc <fts_children@@Base+0x14bc>
   15b30:	cmp	r0, #0
   15b34:	bge	15b1c <close_stdout@@Base+0x2bb0>
   15b38:	str	r5, [r4, #32]
   15b3c:	pop	{r3, r4, r5, pc}
   15b40:	bl	11680 <abort@plt>
   15b44:	push	{r3, r4, r5, lr}
   15b48:	mov	r4, r0
   15b4c:	ldr	r3, [r0, #48]	; 0x30
   15b50:	ands	r5, r3, #4
   15b54:	movne	r5, #0
   15b58:	bne	15b70 <close_stdout@@Base+0x2c04>
   15b5c:	tst	r3, #512	; 0x200
   15b60:	beq	15b80 <close_stdout@@Base+0x2c14>
   15b64:	mvn	r1, #99	; 0x63
   15b68:	mov	r2, #1
   15b6c:	bl	15ad0 <close_stdout@@Base+0x2b64>
   15b70:	add	r0, r4, #60	; 0x3c
   15b74:	bl	15a98 <close_stdout@@Base+0x2b2c>
   15b78:	mov	r0, r5
   15b7c:	pop	{r3, r4, r5, pc}
   15b80:	ldr	r0, [r0, #28]
   15b84:	bl	11638 <fchdir@plt>
   15b88:	adds	r5, r0, #0
   15b8c:	movne	r5, #1
   15b90:	b	15b70 <close_stdout@@Base+0x2c04>
   15b94:	push	{r4, r5, r6, r7, lr}
   15b98:	mov	r4, r2
   15b9c:	ldr	r2, [r2, #48]	; 0x30
   15ba0:	sub	sp, sp, #12
   15ba4:	mov	r6, r1
   15ba8:	add	r5, r4, #72	; 0x48
   15bac:	cmp	r2, #0
   15bb0:	ldr	r2, [r1]
   15bb4:	bne	15bc0 <close_stdout@@Base+0x2c54>
   15bb8:	tst	r2, #1
   15bbc:	bne	15bd0 <close_stdout@@Base+0x2c64>
   15bc0:	tst	r2, #2
   15bc4:	bne	15bd0 <close_stdout@@Base+0x2c64>
   15bc8:	cmp	r3, #0
   15bcc:	beq	15c1c <close_stdout@@Base+0x2cb0>
   15bd0:	mov	r0, #3
   15bd4:	ldr	r1, [r4, #24]
   15bd8:	mov	r2, r5
   15bdc:	bl	11668 <__xstat64@plt>
   15be0:	cmp	r0, #0
   15be4:	beq	15c40 <close_stdout@@Base+0x2cd4>
   15be8:	bl	11578 <__errno_location@plt>
   15bec:	ldr	r6, [r0]
   15bf0:	mov	r7, r0
   15bf4:	cmp	r6, #2
   15bf8:	beq	15ce4 <close_stdout@@Base+0x2d78>
   15bfc:	str	r6, [r4, #32]
   15c00:	mov	r0, r5
   15c04:	mov	r1, #0
   15c08:	mov	r2, #104	; 0x68
   15c0c:	bl	11590 <memset@plt>
   15c10:	mov	r0, #10
   15c14:	add	sp, sp, #12
   15c18:	pop	{r4, r5, r6, r7, pc}
   15c1c:	ldr	r2, [r4, #24]
   15c20:	mov	r1, r0
   15c24:	mov	r3, #256	; 0x100
   15c28:	mov	r0, #3
   15c2c:	str	r3, [sp]
   15c30:	mov	r3, r5
   15c34:	bl	11440 <__fxstatat64@plt>
   15c38:	cmp	r0, #0
   15c3c:	bne	15c70 <close_stdout@@Base+0x2d04>
   15c40:	ldr	r0, [r4, #88]	; 0x58
   15c44:	and	r0, r0, #61440	; 0xf000
   15c48:	cmp	r0, #16384	; 0x4000
   15c4c:	beq	15c80 <close_stdout@@Base+0x2d14>
   15c50:	cmp	r0, #40960	; 0xa000
   15c54:	moveq	r0, #12
   15c58:	beq	15c14 <close_stdout@@Base+0x2ca8>
   15c5c:	cmp	r0, #32768	; 0x8000
   15c60:	movne	r0, #3
   15c64:	moveq	r0, #8
   15c68:	add	sp, sp, #12
   15c6c:	pop	{r4, r5, r6, r7, pc}
   15c70:	bl	11578 <__errno_location@plt>
   15c74:	ldr	r3, [r0]
   15c78:	str	r3, [r4, #32]
   15c7c:	b	15c00 <close_stdout@@Base+0x2c94>
   15c80:	ldr	r3, [r6]
   15c84:	ldrb	r1, [r4, #176]	; 0xb0
   15c88:	tst	r3, #32
   15c8c:	ldr	r2, [r4, #92]	; 0x5c
   15c90:	moveq	r3, #2
   15c94:	movne	r3, #0
   15c98:	cmp	r1, #46	; 0x2e
   15c9c:	rsb	r3, r3, r2
   15ca0:	str	r3, [r4, #56]	; 0x38
   15ca4:	beq	15cb0 <close_stdout@@Base+0x2d44>
   15ca8:	mov	r0, #1
   15cac:	b	15c14 <close_stdout@@Base+0x2ca8>
   15cb0:	ldrb	r3, [r4, #177]	; 0xb1
   15cb4:	cmp	r3, #0
   15cb8:	beq	15cd0 <close_stdout@@Base+0x2d64>
   15cbc:	ldr	r3, [r4, #176]	; 0xb0
   15cc0:	bic	r3, r3, #-16777216	; 0xff000000
   15cc4:	bic	r3, r3, #255	; 0xff
   15cc8:	cmp	r3, #11776	; 0x2e00
   15ccc:	bne	15ca8 <close_stdout@@Base+0x2d3c>
   15cd0:	ldr	r0, [r4, #48]	; 0x30
   15cd4:	cmp	r0, #0
   15cd8:	movne	r0, #5
   15cdc:	moveq	r0, #1
   15ce0:	b	15c14 <close_stdout@@Base+0x2ca8>
   15ce4:	mov	r0, #3
   15ce8:	ldr	r1, [r4, #24]
   15cec:	mov	r2, r5
   15cf0:	bl	11698 <__lxstat64@plt>
   15cf4:	cmp	r0, #0
   15cf8:	streq	r0, [r7]
   15cfc:	moveq	r0, #13
   15d00:	beq	15c14 <close_stdout@@Base+0x2ca8>
   15d04:	b	15bfc <close_stdout@@Base+0x2c90>
   15d08:	push	{r3, r4, r5, lr}
   15d0c:	mov	r4, r0
   15d10:	ldr	r3, [r1]
   15d14:	add	r0, r3, #256	; 0x100
   15d18:	add	r2, r0, r2
   15d1c:	cmp	r3, r2
   15d20:	bhi	15d4c <close_stdout@@Base+0x2de0>
   15d24:	str	r2, [r1]
   15d28:	mov	r1, r2
   15d2c:	ldr	r0, [r4]
   15d30:	bl	11428 <realloc@plt>
   15d34:	subs	r5, r0, #0
   15d38:	strne	r5, [r4]
   15d3c:	movne	r3, #1
   15d40:	beq	15d74 <close_stdout@@Base+0x2e08>
   15d44:	mov	r0, r3
   15d48:	pop	{r3, r4, r5, pc}
   15d4c:	ldr	r0, [r4]
   15d50:	mov	r5, #0
   15d54:	bl	113bc <free@plt>
   15d58:	str	r5, [r4]
   15d5c:	bl	11578 <__errno_location@plt>
   15d60:	mov	r3, r5
   15d64:	mov	r2, #36	; 0x24
   15d68:	str	r2, [r0]
   15d6c:	mov	r0, r3
   15d70:	pop	{r3, r4, r5, pc}
   15d74:	ldr	r0, [r4]
   15d78:	bl	113bc <free@plt>
   15d7c:	str	r5, [r4]
   15d80:	mov	r3, r5
   15d84:	b	15d44 <close_stdout@@Base+0x2dd8>
   15d88:	movw	r3, #258	; 0x102
   15d8c:	and	r3, r0, r3
   15d90:	cmp	r3, #0
   15d94:	ldr	ip, [pc, #116]	; 15e10 <close_stdout@@Base+0x2ea4>
   15d98:	push	{r4, lr}
   15d9c:	add	ip, pc, ip
   15da0:	sub	sp, sp, #8
   15da4:	mov	r4, r1
   15da8:	beq	15de8 <close_stdout@@Base+0x2e7c>
   15dac:	ldr	lr, [pc, #96]	; 15e14 <close_stdout@@Base+0x2ea8>
   15db0:	mov	r0, #31
   15db4:	ldr	r2, [pc, #92]	; 15e18 <close_stdout@@Base+0x2eac>
   15db8:	mov	r1, #0
   15dbc:	ldr	r3, [pc, #88]	; 15e1c <close_stdout@@Base+0x2eb0>
   15dc0:	ldr	ip, [ip, lr]
   15dc4:	add	r2, pc, r2
   15dc8:	add	r3, pc, r3
   15dcc:	str	ip, [sp]
   15dd0:	bl	185ac <fts_children@@Base+0xcac>
   15dd4:	str	r0, [r4]
   15dd8:	adds	r0, r0, #0
   15ddc:	movne	r0, #1
   15de0:	add	sp, sp, #8
   15de4:	pop	{r4, pc}
   15de8:	mov	r0, #32
   15dec:	bl	114d0 <malloc@plt>
   15df0:	cmp	r0, #0
   15df4:	str	r0, [r4]
   15df8:	moveq	r0, r0
   15dfc:	beq	15de0 <close_stdout@@Base+0x2e74>
   15e00:	bl	17b54 <fts_children@@Base+0x254>
   15e04:	mov	r0, #1
   15e08:	add	sp, sp, #8
   15e0c:	pop	{r4, pc}
   15e10:	andeq	r6, r1, ip, asr r2
   15e14:	andeq	r0, r0, r0, asr #2
   15e18:			; <UNDEFINED> instruction: 0xfffffab0
   15e1c:			; <UNDEFINED> instruction: 0xfffffa64
   15e20:	tst	r1, #16
   15e24:	push	{r4, lr}
   15e28:	moveq	r3, #18688	; 0x4900
   15e2c:	movne	r3, #51456	; 0xc900
   15e30:	tst	r1, #2048	; 0x800
   15e34:	moveq	ip, #0
   15e38:	movne	ip, #262144	; 0x40000
   15e3c:	tst	r1, #512	; 0x200
   15e40:	orr	r3, ip, r3
   15e44:	beq	15e74 <close_stdout@@Base+0x2f08>
   15e48:	mov	r1, r2
   15e4c:	mov	r2, r3
   15e50:	bl	19268 <fts_children@@Base+0x1968>
   15e54:	mov	r4, r0
   15e58:	cmp	r4, #0
   15e5c:	blt	15e6c <close_stdout@@Base+0x2f00>
   15e60:	mov	r0, r4
   15e64:	mov	r1, #1
   15e68:	bl	17a64 <fts_children@@Base+0x164>
   15e6c:	mov	r0, r4
   15e70:	pop	{r4, pc}
   15e74:	mov	r0, r2
   15e78:	mov	r1, r3
   15e7c:	bl	17c48 <fts_children@@Base+0x348>
   15e80:	mov	r4, r0
   15e84:	b	15e58 <close_stdout@@Base+0x2eec>
   15e88:	movw	r3, #258	; 0x102
   15e8c:	and	r3, r0, r3
   15e90:	cmp	r3, #0
   15e94:	push	{r4, r5, r6, r7, r8, lr}
   15e98:	mov	r8, r1
   15e9c:	mov	r6, r2
   15ea0:	beq	15f08 <close_stdout@@Base+0x2f9c>
   15ea4:	mov	r0, #24
   15ea8:	bl	114d0 <malloc@plt>
   15eac:	subs	r7, r0, #0
   15eb0:	beq	15f34 <close_stdout@@Base+0x2fc8>
   15eb4:	ldrd	r4, [r6, #72]	; 0x48
   15eb8:	mov	r1, r7
   15ebc:	strd	r4, [r7]
   15ec0:	ldrd	r4, [r6, #168]	; 0xa8
   15ec4:	str	r6, [r7, #16]
   15ec8:	strd	r4, [r7, #8]
   15ecc:	ldr	r0, [r8]
   15ed0:	bl	18bd4 <fts_children@@Base+0x12d4>
   15ed4:	cmp	r7, r0
   15ed8:	mov	r4, r0
   15edc:	beq	15f2c <close_stdout@@Base+0x2fc0>
   15ee0:	mov	r0, r7
   15ee4:	bl	113bc <free@plt>
   15ee8:	cmp	r4, #0
   15eec:	beq	15f34 <close_stdout@@Base+0x2fc8>
   15ef0:	ldr	r3, [r4, #16]
   15ef4:	mov	r2, #2
   15ef8:	mov	r0, #1
   15efc:	strh	r2, [r6, #60]	; 0x3c
   15f00:	str	r3, [r6]
   15f04:	pop	{r4, r5, r6, r7, r8, pc}
   15f08:	ldr	r0, [r1]
   15f0c:	add	r1, r2, #72	; 0x48
   15f10:	bl	17b70 <fts_children@@Base+0x270>
   15f14:	cmp	r0, #0
   15f18:	beq	15f2c <close_stdout@@Base+0x2fc0>
   15f1c:	mov	r3, #2
   15f20:	str	r6, [r6]
   15f24:	strh	r3, [r6, #60]	; 0x3c
   15f28:	pop	{r4, r5, r6, r7, r8, pc}
   15f2c:	mov	r0, #1
   15f30:	pop	{r4, r5, r6, r7, r8, pc}
   15f34:	mov	r0, #0
   15f38:	pop	{r4, r5, r6, r7, r8, pc}
   15f3c:	ldr	ip, [pc, #568]	; 1617c <close_stdout@@Base+0x3210>
   15f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f44:	mov	sl, r0
   15f48:	ldr	r0, [pc, #560]	; 16180 <close_stdout@@Base+0x3214>
   15f4c:	add	ip, pc, ip
   15f50:	sub	sp, sp, #124	; 0x7c
   15f54:	mov	r9, r3
   15f58:	mov	r3, ip
   15f5c:	mov	r5, r1
   15f60:	ldr	r0, [ip, r0]
   15f64:	mov	fp, r2
   15f68:	ldr	r4, [sp, #160]	; 0xa0
   15f6c:	ldr	r3, [r0]
   15f70:	cmp	r4, #0
   15f74:	str	r0, [sp]
   15f78:	moveq	r7, r4
   15f7c:	str	r3, [sp, #116]	; 0x74
   15f80:	beq	15f94 <close_stdout@@Base+0x3028>
   15f84:	ldrb	r3, [r4]
   15f88:	cmp	r3, #46	; 0x2e
   15f8c:	beq	1606c <close_stdout@@Base+0x3100>
   15f90:	mov	r7, #0
   15f94:	ldr	r6, [sl, #48]	; 0x30
   15f98:	ands	r8, r6, #4
   15f9c:	beq	15fe0 <close_stdout@@Base+0x3074>
   15fa0:	ands	r8, r6, #512	; 0x200
   15fa4:	beq	15fc0 <close_stdout@@Base+0x3054>
   15fa8:	cmp	r9, #0
   15fac:	movlt	r8, #0
   15fb0:	blt	15fc0 <close_stdout@@Base+0x3054>
   15fb4:	mov	r0, r9
   15fb8:	mov	r8, #0
   15fbc:	bl	1168c <close@plt>
   15fc0:	ldr	r1, [sp]
   15fc4:	mov	r0, r8
   15fc8:	ldr	r2, [sp, #116]	; 0x74
   15fcc:	ldr	r3, [r1]
   15fd0:	cmp	r2, r3
   15fd4:	bne	16170 <close_stdout@@Base+0x3204>
   15fd8:	add	sp, sp, #124	; 0x7c
   15fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe0:	lsr	r2, r9, #31
   15fe4:	tst	r7, r2
   15fe8:	bne	16088 <close_stdout@@Base+0x311c>
   15fec:	cmp	r2, #0
   15ff0:	streq	r9, [sp, #4]
   15ff4:	bne	16174 <close_stdout@@Base+0x3208>
   15ff8:	tst	r6, #2
   15ffc:	bne	1602c <close_stdout@@Base+0x30c0>
   16000:	cmp	r4, #0
   16004:	beq	160d0 <close_stdout@@Base+0x3164>
   16008:	ldrb	r2, [r4]
   1600c:	cmp	r2, #46	; 0x2e
   16010:	bne	160d0 <close_stdout@@Base+0x3164>
   16014:	ldrb	r2, [r4, #1]
   16018:	cmp	r2, #46	; 0x2e
   1601c:	bne	160d0 <close_stdout@@Base+0x3164>
   16020:	ldrb	r2, [r4, #2]
   16024:	cmp	r2, #0
   16028:	bne	160d0 <close_stdout@@Base+0x3164>
   1602c:	mov	r0, #3
   16030:	ldr	r1, [sp, #4]
   16034:	add	r2, sp, #8
   16038:	bl	11458 <__fxstat64@plt>
   1603c:	cmp	r0, #0
   16040:	beq	160e8 <close_stdout@@Base+0x317c>
   16044:	mvn	r8, #0
   16048:	cmp	r9, #0
   1604c:	bge	15fc0 <close_stdout@@Base+0x3054>
   16050:	bl	11578 <__errno_location@plt>
   16054:	ldr	r5, [r0]
   16058:	mov	r4, r0
   1605c:	ldr	r0, [sp, #4]
   16060:	bl	1168c <close@plt>
   16064:	str	r5, [r4]
   16068:	b	15fc0 <close_stdout@@Base+0x3054>
   1606c:	ldrb	r3, [r4, #1]
   16070:	cmp	r3, #46	; 0x2e
   16074:	bne	15f90 <close_stdout@@Base+0x3024>
   16078:	ldrb	r3, [r4, #2]
   1607c:	rsbs	r7, r3, #1
   16080:	movcc	r7, #0
   16084:	b	15f94 <close_stdout@@Base+0x3028>
   16088:	tst	r6, #512	; 0x200
   1608c:	bne	1610c <close_stdout@@Base+0x31a0>
   16090:	mov	r1, r6
   16094:	mov	r7, #1
   16098:	ldr	r0, [sl, #32]
   1609c:	mov	r2, r4
   160a0:	bl	15e20 <close_stdout@@Base+0x2eb4>
   160a4:	cmp	r0, #0
   160a8:	str	r0, [sp, #4]
   160ac:	blt	16168 <close_stdout@@Base+0x31fc>
   160b0:	ldr	r6, [sl, #48]	; 0x30
   160b4:	b	15ff8 <close_stdout@@Base+0x308c>
   160b8:	ldrd	r4, [fp]
   160bc:	ldrd	r0, [sp, #104]	; 0x68
   160c0:	cmp	r5, r1
   160c4:	cmpeq	r4, r0
   160c8:	bne	160fc <close_stdout@@Base+0x3190>
   160cc:	ldr	r6, [sl, #48]	; 0x30
   160d0:	tst	r6, #512	; 0x200
   160d4:	bne	16150 <close_stdout@@Base+0x31e4>
   160d8:	ldr	r0, [sp, #4]
   160dc:	bl	11638 <fchdir@plt>
   160e0:	mov	r8, r0
   160e4:	b	16048 <close_stdout@@Base+0x30dc>
   160e8:	ldrd	r2, [r5]
   160ec:	ldrd	r4, [sp, #8]
   160f0:	cmp	r3, r5
   160f4:	cmpeq	r2, r4
   160f8:	beq	160b8 <close_stdout@@Base+0x314c>
   160fc:	bl	11578 <__errno_location@plt>
   16100:	mov	r3, #2
   16104:	str	r3, [r0]
   16108:	b	16044 <close_stdout@@Base+0x30d8>
   1610c:	add	r7, sl, #60	; 0x3c
   16110:	mov	r0, r7
   16114:	bl	18db4 <fts_children@@Base+0x14b4>
   16118:	cmp	r0, #0
   1611c:	bne	16090 <close_stdout@@Base+0x3124>
   16120:	mov	r0, r7
   16124:	bl	18e00 <fts_children@@Base+0x1500>
   16128:	cmp	r0, #0
   1612c:	str	r0, [sp, #4]
   16130:	ldrlt	r1, [sl, #48]	; 0x30
   16134:	blt	16094 <close_stdout@@Base+0x3128>
   16138:	ldr	r6, [sl, #48]	; 0x30
   1613c:	mov	r7, #1
   16140:	ldr	r9, [sp, #4]
   16144:	tst	r6, #2
   16148:	beq	160d0 <close_stdout@@Base+0x3164>
   1614c:	b	1602c <close_stdout@@Base+0x30c0>
   16150:	eor	r2, r7, #1
   16154:	mov	r0, sl
   16158:	ldr	r1, [sp, #4]
   1615c:	uxtb	r2, r2
   16160:	bl	15ad0 <close_stdout@@Base+0x2b64>
   16164:	b	15fc0 <close_stdout@@Base+0x3054>
   16168:	mvn	r8, #0
   1616c:	b	15fc0 <close_stdout@@Base+0x3054>
   16170:	bl	1141c <__stack_chk_fail@plt>
   16174:	mov	r1, r6
   16178:	b	16098 <close_stdout@@Base+0x312c>
   1617c:	andeq	r6, r1, ip, lsr #1
   16180:	andeq	r0, r0, r4, asr #2
   16184:	push	{r4, r5, r6, r7, lr}
   16188:	movw	r3, #258	; 0x102
   1618c:	ldr	r5, [pc, #216]	; 1626c <close_stdout@@Base+0x3300>
   16190:	and	r3, r0, r3
   16194:	ldr	r4, [pc, #212]	; 16270 <close_stdout@@Base+0x3304>
   16198:	cmp	r3, #0
   1619c:	add	r5, pc, r5
   161a0:	sub	sp, sp, #36	; 0x24
   161a4:	mov	ip, r1
   161a8:	ldr	r6, [r5, r4]
   161ac:	mov	r3, r5
   161b0:	ldr	r3, [r6]
   161b4:	str	r3, [sp, #28]
   161b8:	bne	16210 <close_stdout@@Base+0x32a4>
   161bc:	ldr	r3, [r2, #4]
   161c0:	cmp	r3, #0
   161c4:	beq	161f8 <close_stdout@@Base+0x328c>
   161c8:	ldr	r1, [r3, #48]	; 0x30
   161cc:	cmp	r1, #0
   161d0:	blt	161f8 <close_stdout@@Base+0x328c>
   161d4:	ldr	r7, [ip]
   161d8:	ldrd	r0, [r7, #16]
   161dc:	orrs	r4, r0, r1
   161e0:	beq	16268 <close_stdout@@Base+0x32fc>
   161e4:	ldrd	r4, [r7]
   161e8:	ldrd	r0, [r2, #168]	; 0xa8
   161ec:	cmp	r5, r1
   161f0:	cmpeq	r4, r0
   161f4:	beq	1623c <close_stdout@@Base+0x32d0>
   161f8:	ldr	r2, [sp, #28]
   161fc:	ldr	r3, [r6]
   16200:	cmp	r2, r3
   16204:	bne	16264 <close_stdout@@Base+0x32f8>
   16208:	add	sp, sp, #36	; 0x24
   1620c:	pop	{r4, r5, r6, r7, pc}
   16210:	ldrd	r4, [r2, #72]	; 0x48
   16214:	mov	r1, sp
   16218:	ldrd	r2, [r2, #168]	; 0xa8
   1621c:	ldr	r0, [ip]
   16220:	strd	r4, [sp]
   16224:	strd	r2, [sp, #8]
   16228:	bl	18c48 <fts_children@@Base+0x1348>
   1622c:	cmp	r0, #0
   16230:	beq	16268 <close_stdout@@Base+0x32fc>
   16234:	bl	113bc <free@plt>
   16238:	b	161f8 <close_stdout@@Base+0x328c>
   1623c:	ldrd	r0, [r7, #8]
   16240:	ldrd	r4, [r2, #72]	; 0x48
   16244:	cmp	r1, r5
   16248:	cmpeq	r0, r4
   1624c:	ldrdeq	r0, [r3, #72]	; 0x48
   16250:	strdeq	r0, [r7, #8]
   16254:	ldreq	r1, [ip]
   16258:	ldrdeq	r2, [r3, #168]	; 0xa8
   1625c:	strdeq	r2, [r1]
   16260:	b	161f8 <close_stdout@@Base+0x328c>
   16264:	bl	1141c <__stack_chk_fail@plt>
   16268:	bl	11680 <abort@plt>
   1626c:	andeq	r5, r1, ip, asr lr
   16270:	andeq	r0, r0, r4, asr #2
   16274:	ldr	r3, [pc, #2256]	; 16b4c <close_stdout@@Base+0x3be0>
   16278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1627c:	add	r3, pc, r3
   16280:	ldr	r2, [pc, #2248]	; 16b50 <close_stdout@@Base+0x3be4>
   16284:	sub	sp, sp, #164	; 0xa4
   16288:	ldr	r9, [r0]
   1628c:	mov	r5, r0
   16290:	str	r1, [sp, #52]	; 0x34
   16294:	ldr	r2, [r3, r2]
   16298:	ldr	r0, [r9, #12]
   1629c:	adds	r1, r0, #0
   162a0:	ldr	r3, [r2]
   162a4:	str	r2, [sp, #48]	; 0x30
   162a8:	movne	r1, #1
   162ac:	cmp	r1, #0
   162b0:	str	r1, [sp, #44]	; 0x2c
   162b4:	str	r3, [sp, #156]	; 0x9c
   162b8:	bne	167ec <close_stdout@@Base+0x3880>
   162bc:	ldr	r3, [r5, #48]	; 0x30
   162c0:	ldr	r1, [r9, #24]
   162c4:	and	r3, r3, #516	; 0x204
   162c8:	cmp	r3, #512	; 0x200
   162cc:	ldr	r3, [r5, #48]	; 0x30
   162d0:	ldreq	r0, [r5, #32]
   162d4:	mvnne	r0, #99	; 0x63
   162d8:	tst	r3, #16
   162dc:	moveq	r2, #18688	; 0x4900
   162e0:	bne	16778 <close_stdout@@Base+0x380c>
   162e4:	tst	r3, #2048	; 0x800
   162e8:	moveq	r3, #0
   162ec:	movne	r3, #262144	; 0x40000
   162f0:	orr	r2, r3, r2
   162f4:	bl	19268 <fts_children@@Base+0x1968>
   162f8:	subs	r4, r0, #0
   162fc:	blt	16a18 <close_stdout@@Base+0x3aac>
   16300:	mov	r1, #1
   16304:	bl	17a64 <fts_children@@Base+0x164>
   16308:	mov	r0, r4
   1630c:	bl	11620 <fdopendir@plt>
   16310:	cmp	r0, #0
   16314:	beq	16a00 <close_stdout@@Base+0x3a94>
   16318:	ldrh	r3, [r9, #60]	; 0x3c
   1631c:	str	r0, [r9, #12]
   16320:	cmp	r3, #11
   16324:	beq	16a34 <close_stdout@@Base+0x3ac8>
   16328:	ldr	r0, [r5, #48]	; 0x30
   1632c:	tst	r0, #256	; 0x100
   16330:	bne	1685c <close_stdout@@Base+0x38f0>
   16334:	ldr	r2, [r5, #44]	; 0x2c
   16338:	movw	r3, #34464	; 0x86a0
   1633c:	movt	r3, #1
   16340:	cmp	r2, #0
   16344:	mvnne	r3, #0
   16348:	str	r3, [sp, #20]
   1634c:	ldr	r3, [sp, #52]	; 0x34
   16350:	cmp	r3, #2
   16354:	moveq	r6, #0
   16358:	beq	16370 <close_stdout@@Base+0x3404>
   1635c:	ldr	r3, [r5, #48]	; 0x30
   16360:	and	r3, r3, #24
   16364:	cmp	r3, #24
   16368:	mvnne	r6, #0
   1636c:	beq	16844 <close_stdout@@Base+0x38d8>
   16370:	ldr	r1, [sp, #44]	; 0x2c
   16374:	cmp	r1, #0
   16378:	movne	r1, #1
   1637c:	strne	r1, [sp, #60]	; 0x3c
   16380:	beq	1671c <close_stdout@@Base+0x37b0>
   16384:	ldr	r3, [r9, #40]	; 0x28
   16388:	ldr	r2, [r9, #28]
   1638c:	str	r3, [sp, #28]
   16390:	sub	r3, r3, #1
   16394:	ldr	r1, [sp, #28]
   16398:	ldrb	r2, [r2, r3]
   1639c:	cmp	r2, #47	; 0x2f
   163a0:	moveq	r1, r3
   163a4:	ands	r0, r0, #4
   163a8:	str	r1, [sp, #28]
   163ac:	ldrne	r3, [r5, #24]
   163b0:	movne	r1, #47	; 0x2f
   163b4:	ldrne	r0, [sp, #28]
   163b8:	streq	r0, [sp, #36]	; 0x24
   163bc:	addne	r2, r3, r0
   163c0:	strbne	r1, [r3, r0]
   163c4:	addne	r2, r2, #1
   163c8:	ldr	r3, [r9, #48]	; 0x30
   163cc:	add	r0, r5, #48	; 0x30
   163d0:	ldr	r1, [sp, #28]
   163d4:	add	r3, r3, #1
   163d8:	ldr	fp, [r5, #36]	; 0x24
   163dc:	str	r3, [sp, #24]
   163e0:	add	r1, r1, #1
   163e4:	ldr	r3, [pc, #1896]	; 16b54 <close_stdout@@Base+0x3be8>
   163e8:	rsb	fp, r1, fp
   163ec:	strne	r2, [sp, #36]	; 0x24
   163f0:	mov	r2, #0
   163f4:	add	r3, pc, r3
   163f8:	str	r1, [sp, #12]
   163fc:	str	r2, [sp, #32]
   16400:	mov	sl, r2
   16404:	mov	r7, r2
   16408:	str	r2, [sp, #16]
   1640c:	str	r3, [sp, #40]	; 0x28
   16410:	str	r0, [sp, #56]	; 0x38
   16414:	b	164e4 <close_stdout@@Base+0x3578>
   16418:	ldr	r2, [sp, #12]
   1641c:	adds	r0, r0, r2
   16420:	bcs	165c0 <close_stdout@@Base+0x3654>
   16424:	ldr	r3, [sp, #24]
   16428:	str	r3, [r4, #48]	; 0x30
   1642c:	ldr	r3, [r5]
   16430:	str	r0, [r4, #40]	; 0x28
   16434:	str	r3, [r4, #4]
   16438:	ldrd	r2, [r8]
   1643c:	strd	r2, [r4, #168]	; 0xa8
   16440:	ldr	r3, [r5, #48]	; 0x30
   16444:	tst	r3, #4
   16448:	addeq	r3, r4, #176	; 0xb0
   1644c:	streq	r3, [r4, #24]
   16450:	bne	16608 <close_stdout@@Base+0x369c>
   16454:	ldr	r3, [r5, #44]	; 0x2c
   16458:	cmp	r3, #0
   1645c:	beq	1646c <close_stdout@@Base+0x3500>
   16460:	ldr	r3, [r5, #48]	; 0x30
   16464:	ands	r3, r3, #1024	; 0x400
   16468:	beq	16628 <close_stdout@@Base+0x36bc>
   1646c:	ldr	r3, [r5, #48]	; 0x30
   16470:	and	r3, r3, #24
   16474:	cmp	r3, #24
   16478:	movne	r2, #0
   1647c:	beq	16660 <close_stdout@@Base+0x36f4>
   16480:	mov	r0, #11
   16484:	strh	r0, [r4, #60]	; 0x3c
   16488:	ldrb	r3, [r8, #18]
   1648c:	sub	r3, r3, #1
   16490:	cmp	r3, #11
   16494:	ldrls	r1, [sp, #40]	; 0x28
   16498:	movhi	r3, #0
   1649c:	ldrls	r3, [r1, r3, lsl #2]
   164a0:	cmp	r2, #0
   164a4:	moveq	r2, #2
   164a8:	movne	r2, #1
   164ac:	str	r3, [r4, #88]	; 0x58
   164b0:	mov	r3, #0
   164b4:	strd	r2, [r4, #120]	; 0x78
   164b8:	ldr	r2, [sp, #16]
   164bc:	add	r7, r7, #1
   164c0:	ldr	r0, [sp, #20]
   164c4:	mov	r3, #0
   164c8:	cmp	r2, #0
   164cc:	str	r3, [r4, #8]
   164d0:	streq	r4, [sp, #16]
   164d4:	strne	r4, [sl, #8]
   164d8:	cmp	r0, r7
   164dc:	bls	16688 <close_stdout@@Base+0x371c>
   164e0:	mov	sl, r4
   164e4:	ldr	r0, [r9, #12]
   164e8:	cmp	r0, #0
   164ec:	beq	16688 <close_stdout@@Base+0x371c>
   164f0:	bl	11614 <readdir64@plt>
   164f4:	subs	r8, r0, #0
   164f8:	beq	16674 <close_stdout@@Base+0x3708>
   164fc:	ldr	r3, [r5, #48]	; 0x30
   16500:	tst	r3, #32
   16504:	bne	16514 <close_stdout@@Base+0x35a8>
   16508:	ldrb	r3, [r8, #19]
   1650c:	cmp	r3, #46	; 0x2e
   16510:	beq	16640 <close_stdout@@Base+0x36d4>
   16514:	add	r6, r8, #19
   16518:	mov	r0, r6
   1651c:	bl	11530 <strlen@plt>
   16520:	mov	r1, r6
   16524:	mov	r2, r0
   16528:	mov	r0, r5
   1652c:	bl	159f0 <close_stdout@@Base+0x2a84>
   16530:	subs	r4, r0, #0
   16534:	beq	169b8 <close_stdout@@Base+0x3a4c>
   16538:	mov	r0, r6
   1653c:	bl	11530 <strlen@plt>
   16540:	cmp	fp, r0
   16544:	bhi	16418 <close_stdout@@Base+0x34ac>
   16548:	mov	r3, r5
   1654c:	ldr	r1, [sp, #28]
   16550:	ldr	fp, [r3, #24]!
   16554:	add	r2, r1, #2
   16558:	add	r1, r5, #36	; 0x24
   1655c:	add	r2, r2, r0
   16560:	mov	r0, r3
   16564:	bl	15d08 <close_stdout@@Base+0x2d9c>
   16568:	cmp	r0, #0
   1656c:	beq	169b8 <close_stdout@@Base+0x3a4c>
   16570:	ldr	r3, [r5, #24]
   16574:	cmp	r3, fp
   16578:	beq	165a0 <close_stdout@@Base+0x3634>
   1657c:	ldr	r2, [r5, #48]	; 0x30
   16580:	tst	r2, #4
   16584:	ldrne	r2, [sp, #12]
   16588:	moveq	r0, #1
   1658c:	streq	r0, [sp, #32]
   16590:	addne	r3, r3, r2
   16594:	strne	r3, [sp, #36]	; 0x24
   16598:	movne	r3, #1
   1659c:	strne	r3, [sp, #32]
   165a0:	ldr	r1, [sp, #12]
   165a4:	mov	r0, r6
   165a8:	ldr	fp, [r5, #36]	; 0x24
   165ac:	rsb	fp, r1, fp
   165b0:	bl	11530 <strlen@plt>
   165b4:	ldr	r2, [sp, #12]
   165b8:	adds	r0, r0, r2
   165bc:	bcc	16424 <close_stdout@@Base+0x34b8>
   165c0:	mov	r0, r4
   165c4:	mov	r4, #0
   165c8:	bl	113bc <free@plt>
   165cc:	ldr	r0, [sp, #16]
   165d0:	bl	15a60 <close_stdout@@Base+0x2af4>
   165d4:	ldr	r0, [r9, #12]
   165d8:	bl	116a4 <closedir@plt>
   165dc:	str	r4, [r9, #12]
   165e0:	mov	r3, #7
   165e4:	strh	r3, [r9, #60]	; 0x3c
   165e8:	ldr	r3, [r5, #48]	; 0x30
   165ec:	orr	r3, r3, #16384	; 0x4000
   165f0:	str	r3, [r5, #48]	; 0x30
   165f4:	bl	11578 <__errno_location@plt>
   165f8:	mov	r2, #36	; 0x24
   165fc:	mov	r3, r4
   16600:	str	r2, [r0]
   16604:	b	16818 <close_stdout@@Base+0x38ac>
   16608:	ldr	r3, [r4, #28]
   1660c:	add	r1, r4, #176	; 0xb0
   16610:	ldr	r2, [r4, #52]	; 0x34
   16614:	ldr	r0, [sp, #36]	; 0x24
   16618:	str	r3, [r4, #24]
   1661c:	add	r2, r2, #1
   16620:	bl	113b0 <memmove@plt>
   16624:	b	16454 <close_stdout@@Base+0x34e8>
   16628:	ldr	r0, [r5, #32]
   1662c:	mov	r2, r4
   16630:	ldr	r1, [sp, #56]	; 0x38
   16634:	bl	15b94 <close_stdout@@Base+0x2c28>
   16638:	strh	r0, [r4, #60]	; 0x3c
   1663c:	b	164b8 <close_stdout@@Base+0x354c>
   16640:	ldrb	r3, [r8, #20]
   16644:	cmp	r3, #0
   16648:	beq	16658 <close_stdout@@Base+0x36ec>
   1664c:	ldrh	r3, [r8, #20]
   16650:	cmp	r3, #46	; 0x2e
   16654:	bne	16514 <close_stdout@@Base+0x35a8>
   16658:	mov	r4, sl
   1665c:	b	164e0 <close_stdout@@Base+0x3574>
   16660:	ldrb	r3, [r8, #18]
   16664:	tst	r3, #251	; 0xfb
   16668:	moveq	r2, #0
   1666c:	movne	r2, #1
   16670:	b	16480 <close_stdout@@Base+0x3514>
   16674:	ldr	r0, [r9, #12]
   16678:	cmp	r0, #0
   1667c:	beq	16688 <close_stdout@@Base+0x371c>
   16680:	bl	116a4 <closedir@plt>
   16684:	str	r8, [r9, #12]
   16688:	ldr	r1, [sp, #32]
   1668c:	cmp	r1, #0
   16690:	bne	168ac <close_stdout@@Base+0x3940>
   16694:	ldr	r3, [r5, #48]	; 0x30
   16698:	tst	r3, #4
   1669c:	beq	166d0 <close_stdout@@Base+0x3764>
   166a0:	ldr	r3, [r5, #36]	; 0x24
   166a4:	ldr	r2, [sp, #12]
   166a8:	cmp	r3, r2
   166ac:	beq	166b8 <close_stdout@@Base+0x374c>
   166b0:	cmp	r7, #0
   166b4:	bne	166c4 <close_stdout@@Base+0x3758>
   166b8:	ldr	r3, [sp, #36]	; 0x24
   166bc:	sub	r3, r3, #1
   166c0:	str	r3, [sp, #36]	; 0x24
   166c4:	ldr	r0, [sp, #36]	; 0x24
   166c8:	mov	r3, #0
   166cc:	strb	r3, [r0]
   166d0:	ldr	r1, [sp, #44]	; 0x2c
   166d4:	ldr	r2, [sp, #60]	; 0x3c
   166d8:	eor	r3, r1, #1
   166dc:	tst	r2, r3
   166e0:	bne	16798 <close_stdout@@Base+0x382c>
   166e4:	cmp	r7, #0
   166e8:	beq	16a84 <close_stdout@@Base+0x3b18>
   166ec:	movw	r3, #10000	; 0x2710
   166f0:	cmp	r7, r3
   166f4:	bls	16800 <close_stdout@@Base+0x3894>
   166f8:	ldr	r3, [r5, #44]	; 0x2c
   166fc:	cmp	r3, #0
   16700:	beq	16aa4 <close_stdout@@Base+0x3b38>
   16704:	mov	r0, r5
   16708:	ldr	r1, [sp, #16]
   1670c:	mov	r2, r7
   16710:	bl	15900 <close_stdout@@Base+0x2994>
   16714:	mov	r3, r0
   16718:	b	16818 <close_stdout@@Base+0x38ac>
   1671c:	adds	r6, r6, #0
   16720:	ldr	r2, [sp, #52]	; 0x34
   16724:	movne	r6, #1
   16728:	subs	r3, r2, #3
   1672c:	rsbs	r7, r3, #0
   16730:	adcs	r7, r7, r3
   16734:	orrs	r3, r6, r7
   16738:	beq	16838 <close_stdout@@Base+0x38cc>
   1673c:	tst	r0, #512	; 0x200
   16740:	bne	1693c <close_stdout@@Base+0x39d0>
   16744:	mov	r3, #0
   16748:	mov	r0, r5
   1674c:	str	r3, [sp]
   16750:	add	r1, r9, #72	; 0x48
   16754:	add	r2, r9, #168	; 0xa8
   16758:	mov	r3, r4
   1675c:	bl	15f3c <close_stdout@@Base+0x2fd0>
   16760:	cmp	r0, #0
   16764:	bne	16958 <close_stdout@@Base+0x39ec>
   16768:	mov	r3, #1
   1676c:	ldr	r0, [r5, #48]	; 0x30
   16770:	str	r3, [sp, #60]	; 0x3c
   16774:	b	16384 <close_stdout@@Base+0x3418>
   16778:	tst	r3, #1
   1677c:	moveq	r2, #51456	; 0xc900
   16780:	beq	162e4 <close_stdout@@Base+0x3378>
   16784:	ldr	r2, [r9, #48]	; 0x30
   16788:	cmp	r2, #0
   1678c:	movne	r2, #51456	; 0xc900
   16790:	moveq	r2, #18688	; 0x4900
   16794:	b	162e4 <close_stdout@@Base+0x3378>
   16798:	ldr	r3, [sp, #52]	; 0x34
   1679c:	cmp	r3, #1
   167a0:	cmpne	r7, #0
   167a4:	bne	166ec <close_stdout@@Base+0x3780>
   167a8:	ldr	r3, [r9, #48]	; 0x30
   167ac:	cmp	r3, #0
   167b0:	bne	16a54 <close_stdout@@Base+0x3ae8>
   167b4:	mov	r0, r5
   167b8:	bl	15b44 <close_stdout@@Base+0x2bd8>
   167bc:	adds	r0, r0, #0
   167c0:	movne	r0, #1
   167c4:	cmp	r0, #0
   167c8:	beq	166e4 <close_stdout@@Base+0x3778>
   167cc:	mov	r3, #7
   167d0:	strh	r3, [r9, #60]	; 0x3c
   167d4:	ldr	r3, [r5, #48]	; 0x30
   167d8:	ldr	r0, [sp, #16]
   167dc:	orr	r3, r3, #16384	; 0x4000
   167e0:	str	r3, [r5, #48]	; 0x30
   167e4:	bl	15a60 <close_stdout@@Base+0x2af4>
   167e8:	b	16a2c <close_stdout@@Base+0x3ac0>
   167ec:	bl	1162c <dirfd@plt>
   167f0:	subs	r4, r0, #0
   167f4:	blt	16b10 <close_stdout@@Base+0x3ba4>
   167f8:	ldr	r0, [r5, #48]	; 0x30
   167fc:	b	16334 <close_stdout@@Base+0x33c8>
   16800:	ldr	r3, [r5, #44]	; 0x2c
   16804:	cmp	r3, #0
   16808:	beq	16814 <close_stdout@@Base+0x38a8>
   1680c:	cmp	r7, #1
   16810:	bhi	16704 <close_stdout@@Base+0x3798>
   16814:	ldr	r3, [sp, #16]
   16818:	ldr	r1, [sp, #48]	; 0x30
   1681c:	mov	r0, r3
   16820:	ldr	r2, [sp, #156]	; 0x9c
   16824:	ldr	r3, [r1]
   16828:	cmp	r2, r3
   1682c:	bne	16b48 <close_stdout@@Base+0x3bdc>
   16830:	add	sp, sp, #164	; 0xa4
   16834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16838:	ldr	r2, [sp, #44]	; 0x2c
   1683c:	str	r2, [sp, #60]	; 0x3c
   16840:	b	16384 <close_stdout@@Base+0x3418>
   16844:	tst	r0, #32
   16848:	ldr	r6, [r9, #92]	; 0x5c
   1684c:	movne	r3, #0
   16850:	moveq	r3, #2
   16854:	rsb	r6, r3, r6
   16858:	b	16370 <close_stdout@@Base+0x3404>
   1685c:	add	r6, r5, #56	; 0x38
   16860:	mov	r2, r9
   16864:	mov	r1, r6
   16868:	bl	16184 <close_stdout@@Base+0x3218>
   1686c:	add	r1, r5, #48	; 0x30
   16870:	mov	r2, r9
   16874:	mov	r3, #0
   16878:	ldr	r0, [r5, #32]
   1687c:	bl	15b94 <close_stdout@@Base+0x2c28>
   16880:	mov	r1, r6
   16884:	ldr	r0, [r5, #48]	; 0x30
   16888:	mov	r2, r9
   1688c:	bl	15e88 <close_stdout@@Base+0x2f1c>
   16890:	subs	r6, r0, #0
   16894:	bne	167f8 <close_stdout@@Base+0x388c>
   16898:	bl	11578 <__errno_location@plt>
   1689c:	mov	r2, #12
   168a0:	mov	r3, r6
   168a4:	str	r2, [r0]
   168a8:	b	16818 <close_stdout@@Base+0x38ac>
   168ac:	ldr	r3, [r5, #4]
   168b0:	ldr	r2, [r5, #24]
   168b4:	cmp	r3, #0
   168b8:	beq	168e8 <close_stdout@@Base+0x397c>
   168bc:	ldr	r1, [r3, #24]
   168c0:	add	r0, r3, #176	; 0xb0
   168c4:	cmp	r1, r0
   168c8:	ldrne	r0, [r3, #28]
   168cc:	str	r2, [r3, #28]
   168d0:	rsbne	r1, r0, r1
   168d4:	addne	r1, r2, r1
   168d8:	strne	r1, [r3, #24]
   168dc:	ldr	r3, [r3, #8]
   168e0:	cmp	r3, #0
   168e4:	bne	168bc <close_stdout@@Base+0x3950>
   168e8:	ldr	r3, [sp, #16]
   168ec:	b	16920 <close_stdout@@Base+0x39b4>
   168f0:	ldr	r1, [r3, #24]
   168f4:	add	r0, r3, #176	; 0xb0
   168f8:	cmp	r1, r0
   168fc:	ldrne	r0, [r3, #28]
   16900:	str	r2, [r3, #28]
   16904:	rsbne	r1, r0, r1
   16908:	addne	r1, r2, r1
   1690c:	strne	r1, [r3, #24]
   16910:	ldr	r1, [r3, #8]
   16914:	cmp	r1, #0
   16918:	ldreq	r1, [r3, #4]
   1691c:	mov	r3, r1
   16920:	ldr	r1, [r3, #48]	; 0x30
   16924:	cmp	r1, #0
   16928:	bge	168f0 <close_stdout@@Base+0x3984>
   1692c:	ldr	r3, [r5, #48]	; 0x30
   16930:	tst	r3, #4
   16934:	bne	166a0 <close_stdout@@Base+0x3734>
   16938:	b	166d0 <close_stdout@@Base+0x3764>
   1693c:	mov	r0, r4
   16940:	bl	192d4 <fts_children@@Base+0x19d4>
   16944:	subs	r4, r0, #0
   16948:	blt	16958 <close_stdout@@Base+0x39ec>
   1694c:	mov	r1, #1
   16950:	bl	17a64 <fts_children@@Base+0x164>
   16954:	b	16744 <close_stdout@@Base+0x37d8>
   16958:	tst	r6, r7
   1695c:	beq	1696c <close_stdout@@Base+0x3a00>
   16960:	bl	11578 <__errno_location@plt>
   16964:	ldr	r3, [r0]
   16968:	str	r3, [r9, #32]
   1696c:	ldrh	r3, [r9, #62]	; 0x3e
   16970:	ldr	r0, [r9, #12]
   16974:	orr	r3, r3, #1
   16978:	strh	r3, [r9, #62]	; 0x3e
   1697c:	bl	116a4 <closedir@plt>
   16980:	mov	r3, #0
   16984:	str	r3, [r9, #12]
   16988:	ldr	r3, [r5, #48]	; 0x30
   1698c:	tst	r3, #512	; 0x200
   16990:	beq	169a4 <close_stdout@@Base+0x3a38>
   16994:	cmp	r4, #0
   16998:	blt	169a4 <close_stdout@@Base+0x3a38>
   1699c:	mov	r0, r4
   169a0:	bl	1168c <close@plt>
   169a4:	mov	r3, #0
   169a8:	str	r3, [r9, #12]
   169ac:	str	r3, [sp, #60]	; 0x3c
   169b0:	ldr	r0, [r5, #48]	; 0x30
   169b4:	b	16384 <close_stdout@@Base+0x3418>
   169b8:	bl	11578 <__errno_location@plt>
   169bc:	mov	r6, r0
   169c0:	mov	r0, r4
   169c4:	ldr	r4, [r6]
   169c8:	bl	113bc <free@plt>
   169cc:	ldr	r0, [sp, #16]
   169d0:	bl	15a60 <close_stdout@@Base+0x2af4>
   169d4:	ldr	r0, [r9, #12]
   169d8:	bl	116a4 <closedir@plt>
   169dc:	mov	r2, #7
   169e0:	mov	r3, #0
   169e4:	strh	r2, [r9, #60]	; 0x3c
   169e8:	str	r3, [r9, #12]
   169ec:	ldr	r2, [r5, #48]	; 0x30
   169f0:	orr	r2, r2, #16384	; 0x4000
   169f4:	str	r2, [r5, #48]	; 0x30
   169f8:	str	r4, [r6]
   169fc:	b	16818 <close_stdout@@Base+0x38ac>
   16a00:	bl	11578 <__errno_location@plt>
   16a04:	ldr	r6, [r0]
   16a08:	mov	r5, r0
   16a0c:	mov	r0, r4
   16a10:	bl	1168c <close@plt>
   16a14:	str	r6, [r5]
   16a18:	ldr	r2, [sp, #52]	; 0x34
   16a1c:	mov	r4, #0
   16a20:	str	r4, [r9, #12]
   16a24:	cmp	r2, #3
   16a28:	beq	16b2c <close_stdout@@Base+0x3bc0>
   16a2c:	mov	r3, #0
   16a30:	b	16818 <close_stdout@@Base+0x38ac>
   16a34:	ldr	r0, [r5, #32]
   16a38:	add	r1, r5, #48	; 0x30
   16a3c:	mov	r2, r9
   16a40:	mov	r3, #0
   16a44:	bl	15b94 <close_stdout@@Base+0x2c28>
   16a48:	strh	r0, [r9, #60]	; 0x3c
   16a4c:	ldr	r0, [r5, #48]	; 0x30
   16a50:	b	16334 <close_stdout@@Base+0x33c8>
   16a54:	ldr	r2, [r9, #4]
   16a58:	mov	r0, r5
   16a5c:	ldr	r1, [pc, #244]	; 16b58 <close_stdout@@Base+0x3bec>
   16a60:	mvn	r3, #0
   16a64:	add	r1, pc, r1
   16a68:	str	r1, [sp]
   16a6c:	add	r1, r2, #72	; 0x48
   16a70:	add	r2, r2, #168	; 0xa8
   16a74:	bl	15f3c <close_stdout@@Base+0x2fd0>
   16a78:	adds	r0, r0, #0
   16a7c:	movne	r0, #1
   16a80:	b	167c4 <close_stdout@@Base+0x3858>
   16a84:	ldr	r0, [sp, #52]	; 0x34
   16a88:	cmp	r0, #3
   16a8c:	ldr	r0, [sp, #16]
   16a90:	moveq	r3, #6
   16a94:	strheq	r3, [r9, #60]	; 0x3c
   16a98:	bl	15a60 <close_stdout@@Base+0x2af4>
   16a9c:	mov	r3, #0
   16aa0:	b	16818 <close_stdout@@Base+0x38ac>
   16aa4:	ldr	r3, [r5, #48]	; 0x30
   16aa8:	tst	r3, #512	; 0x200
   16aac:	beq	16814 <close_stdout@@Base+0x38a8>
   16ab0:	ldr	r0, [r5, #32]
   16ab4:	add	r1, sp, #64	; 0x40
   16ab8:	bl	11350 <fstatfs64@plt>
   16abc:	cmp	r0, #0
   16ac0:	bne	16ae4 <close_stdout@@Base+0x3b78>
   16ac4:	ldr	r2, [sp, #64]	; 0x40
   16ac8:	movw	r3, #26985	; 0x6969
   16acc:	cmp	r2, r3
   16ad0:	beq	16800 <close_stdout@@Base+0x3894>
   16ad4:	movw	r3, #6548	; 0x1994
   16ad8:	movt	r3, #258	; 0x102
   16adc:	cmp	r2, r3
   16ae0:	beq	16800 <close_stdout@@Base+0x3894>
   16ae4:	ldr	r3, [pc, #112]	; 16b5c <close_stdout@@Base+0x3bf0>
   16ae8:	mov	r2, r7
   16aec:	ldr	r1, [sp, #16]
   16af0:	mov	r0, r5
   16af4:	add	r3, pc, r3
   16af8:	str	r3, [r5, #44]	; 0x2c
   16afc:	bl	15900 <close_stdout@@Base+0x2994>
   16b00:	mov	r3, #0
   16b04:	str	r3, [r5, #44]	; 0x2c
   16b08:	str	r0, [sp, #16]
   16b0c:	b	16814 <close_stdout@@Base+0x38a8>
   16b10:	ldr	r0, [r9, #12]
   16b14:	mov	r4, #0
   16b18:	bl	116a4 <closedir@plt>
   16b1c:	ldr	r2, [sp, #52]	; 0x34
   16b20:	str	r4, [r9, #12]
   16b24:	cmp	r2, #3
   16b28:	bne	16a2c <close_stdout@@Base+0x3ac0>
   16b2c:	mov	r3, #4
   16b30:	strh	r3, [r9, #60]	; 0x3c
   16b34:	bl	11578 <__errno_location@plt>
   16b38:	mov	r3, r4
   16b3c:	ldr	r2, [r0]
   16b40:	str	r2, [r9, #32]
   16b44:	b	16818 <close_stdout@@Base+0x38ac>
   16b48:	bl	1141c <__stack_chk_fail@plt>
   16b4c:	andeq	r5, r1, ip, ror sp
   16b50:	andeq	r0, r0, r4, asr #2
   16b54:	andeq	r5, r0, r0
   16b58:	andeq	r4, r0, r0, asr #19
   16b5c:			; <UNDEFINED> instruction: 0xffffedd4

00016b60 <fts_open@@Base>:
   16b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b64:	mov	fp, r1
   16b68:	bic	r1, r1, #8128	; 0x1fc0
   16b6c:	sub	sp, sp, #20
   16b70:	bics	r4, r1, #63	; 0x3f
   16b74:	mov	r7, r0
   16b78:	mov	r8, r2
   16b7c:	bne	16eac <fts_open@@Base+0x34c>
   16b80:	and	r3, fp, #516	; 0x204
   16b84:	cmp	r3, #516	; 0x204
   16b88:	beq	16ed0 <fts_open@@Base+0x370>
   16b8c:	ands	r5, fp, #18
   16b90:	beq	16e94 <fts_open@@Base+0x334>
   16b94:	mov	r0, #96	; 0x60
   16b98:	bl	114d0 <malloc@plt>
   16b9c:	subs	r5, r0, #0
   16ba0:	beq	16de4 <fts_open@@Base+0x284>
   16ba4:	mov	r1, r4
   16ba8:	mov	r2, #96	; 0x60
   16bac:	bl	11590 <memset@plt>
   16bb0:	tst	fp, #2
   16bb4:	bicne	r3, fp, #512	; 0x200
   16bb8:	streq	fp, [r5, #48]	; 0x30
   16bbc:	str	r8, [r5, #44]	; 0x2c
   16bc0:	orrne	r3, r3, #4
   16bc4:	strne	r3, [r5, #48]	; 0x30
   16bc8:	mvn	r3, #99	; 0x63
   16bcc:	str	r3, [r5, #32]
   16bd0:	ldr	r3, [r7]
   16bd4:	cmp	r3, #0
   16bd8:	beq	16ec8 <fts_open@@Base+0x368>
   16bdc:	mov	r6, r7
   16be0:	mov	r4, #0
   16be4:	mov	r0, r3
   16be8:	bl	11530 <strlen@plt>
   16bec:	ldr	r3, [r6, #4]!
   16bf0:	cmp	r4, r0
   16bf4:	movcc	r4, r0
   16bf8:	cmp	r3, #0
   16bfc:	bne	16be4 <fts_open@@Base+0x84>
   16c00:	add	r2, r4, #1
   16c04:	cmp	r2, #4096	; 0x1000
   16c08:	movcc	r2, #4096	; 0x1000
   16c0c:	add	r0, r5, #24
   16c10:	add	r1, r5, #36	; 0x24
   16c14:	bl	15d08 <close_stdout@@Base+0x2d9c>
   16c18:	subs	sl, r0, #0
   16c1c:	beq	16e28 <fts_open@@Base+0x2c8>
   16c20:	ldr	r1, [r7]
   16c24:	cmp	r1, #0
   16c28:	beq	16e40 <fts_open@@Base+0x2e0>
   16c2c:	ldr	r1, [pc, #696]	; 16eec <fts_open@@Base+0x38c>
   16c30:	mov	r0, r5
   16c34:	mov	r2, #0
   16c38:	add	r1, pc, r1
   16c3c:	bl	159f0 <close_stdout@@Base+0x2a84>
   16c40:	subs	r9, r0, #0
   16c44:	beq	16e20 <fts_open@@Base+0x2c0>
   16c48:	mvn	r3, #0
   16c4c:	str	r3, [r9, #48]	; 0x30
   16c50:	ldr	r1, [r7]
   16c54:	cmp	r8, #0
   16c58:	ldrne	sl, [r5, #48]	; 0x30
   16c5c:	ubfxne	sl, sl, #10, #1
   16c60:	cmp	r1, #0
   16c64:	beq	16ee4 <fts_open@@Base+0x384>
   16c68:	mov	r2, #0
   16c6c:	and	fp, fp, #4096	; 0x1000
   16c70:	add	r3, r5, #48	; 0x30
   16c74:	str	fp, [sp, #4]
   16c78:	str	r2, [sp, #8]
   16c7c:	mov	fp, sl
   16c80:	str	r3, [sp, #12]
   16c84:	mov	r6, r2
   16c88:	mov	r4, r2
   16c8c:	mov	sl, r1
   16c90:	b	16cc8 <fts_open@@Base+0x168>
   16c94:	cmp	r8, #0
   16c98:	mov	r3, #11
   16c9c:	mov	r2, #2
   16ca0:	strh	r3, [sl, #60]	; 0x3c
   16ca4:	mov	r3, #0
   16ca8:	strd	r2, [sl, #120]	; 0x78
   16cac:	beq	16d50 <fts_open@@Base+0x1f0>
   16cb0:	str	r4, [sl, #8]
   16cb4:	mov	r4, sl
   16cb8:	ldr	sl, [r7, #4]!
   16cbc:	add	r6, r6, #1
   16cc0:	cmp	sl, #0
   16cc4:	beq	16d7c <fts_open@@Base+0x21c>
   16cc8:	mov	r0, sl
   16ccc:	bl	11530 <strlen@plt>
   16cd0:	ldr	r3, [sp, #4]
   16cd4:	cmp	r3, #0
   16cd8:	mov	r2, r0
   16cdc:	bne	16cf8 <fts_open@@Base+0x198>
   16ce0:	cmp	r0, #2
   16ce4:	bls	16cf8 <fts_open@@Base+0x198>
   16ce8:	add	r3, sl, r0
   16cec:	ldrb	r0, [r3, #-1]
   16cf0:	cmp	r0, #47	; 0x2f
   16cf4:	beq	16df0 <fts_open@@Base+0x290>
   16cf8:	mov	r1, sl
   16cfc:	mov	r0, r5
   16d00:	bl	159f0 <close_stdout@@Base+0x2a84>
   16d04:	subs	sl, r0, #0
   16d08:	beq	16e10 <fts_open@@Base+0x2b0>
   16d0c:	cmp	r4, #0
   16d10:	moveq	r3, #0
   16d14:	andne	r3, fp, #1
   16d18:	mov	r2, #0
   16d1c:	cmp	r3, r2
   16d20:	str	r2, [sl, #48]	; 0x30
   16d24:	str	r9, [sl, #4]
   16d28:	add	r2, sl, #176	; 0xb0
   16d2c:	str	r2, [sl, #24]
   16d30:	bne	16c94 <fts_open@@Base+0x134>
   16d34:	ldr	r0, [r5, #32]
   16d38:	mov	r2, sl
   16d3c:	ldr	r1, [sp, #12]
   16d40:	bl	15b94 <close_stdout@@Base+0x2c28>
   16d44:	cmp	r8, #0
   16d48:	strh	r0, [sl, #60]	; 0x3c
   16d4c:	bne	16cb0 <fts_open@@Base+0x150>
   16d50:	cmp	r4, #0
   16d54:	str	r8, [sl, #8]
   16d58:	streq	sl, [sp, #8]
   16d5c:	add	r6, r6, #1
   16d60:	ldrne	r3, [sp, #8]
   16d64:	moveq	r4, sl
   16d68:	strne	sl, [sp, #8]
   16d6c:	strne	sl, [r3, #8]
   16d70:	ldr	sl, [r7, #4]!
   16d74:	cmp	sl, #0
   16d78:	bne	16cc8 <fts_open@@Base+0x168>
   16d7c:	cmp	r8, #0
   16d80:	cmpne	r6, #1
   16d84:	bhi	16e7c <fts_open@@Base+0x31c>
   16d88:	ldr	r1, [pc, #352]	; 16ef0 <fts_open@@Base+0x390>
   16d8c:	mov	r0, r5
   16d90:	mov	r2, #0
   16d94:	add	r1, pc, r1
   16d98:	bl	159f0 <close_stdout@@Base+0x2a84>
   16d9c:	cmp	r0, #0
   16da0:	str	r0, [r5]
   16da4:	beq	16e10 <fts_open@@Base+0x2b0>
   16da8:	str	r4, [r0, #8]
   16dac:	mov	r2, #9
   16db0:	ldr	r3, [r5]
   16db4:	add	r1, r5, #56	; 0x38
   16db8:	strh	r2, [r3, #60]	; 0x3c
   16dbc:	ldr	r0, [r5, #48]	; 0x30
   16dc0:	bl	15d88 <close_stdout@@Base+0x2e1c>
   16dc4:	cmp	r0, #0
   16dc8:	beq	16e10 <fts_open@@Base+0x2b0>
   16dcc:	ldr	r1, [r5, #48]	; 0x30
   16dd0:	tst	r1, #516	; 0x204
   16dd4:	beq	16e48 <fts_open@@Base+0x2e8>
   16dd8:	add	r0, r5, #60	; 0x3c
   16ddc:	mvn	r1, #0
   16de0:	bl	18d88 <fts_children@@Base+0x1488>
   16de4:	mov	r0, r5
   16de8:	add	sp, sp, #20
   16dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df0:	ldrb	r1, [r3, #-2]
   16df4:	sub	r3, r3, #1
   16df8:	cmp	r1, #47	; 0x2f
   16dfc:	bne	16cf8 <fts_open@@Base+0x198>
   16e00:	sub	r2, r2, #1
   16e04:	cmp	r2, #1
   16e08:	bne	16df0 <fts_open@@Base+0x290>
   16e0c:	b	16cf8 <fts_open@@Base+0x198>
   16e10:	mov	r0, r4
   16e14:	bl	15a60 <close_stdout@@Base+0x2af4>
   16e18:	mov	r0, r9
   16e1c:	bl	113bc <free@plt>
   16e20:	ldr	r0, [r5, #24]
   16e24:	bl	113bc <free@plt>
   16e28:	mov	r0, r5
   16e2c:	mov	r5, #0
   16e30:	bl	113bc <free@plt>
   16e34:	mov	r0, r5
   16e38:	add	sp, sp, #20
   16e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e40:	mov	r9, r1
   16e44:	b	16c54 <fts_open@@Base+0xf4>
   16e48:	ldr	r2, [pc, #164]	; 16ef4 <fts_open@@Base+0x394>
   16e4c:	ldr	r0, [r5, #32]
   16e50:	add	r2, pc, r2
   16e54:	bl	15e20 <close_stdout@@Base+0x2eb4>
   16e58:	mvn	r1, #0
   16e5c:	cmp	r0, #0
   16e60:	str	r0, [r5, #28]
   16e64:	add	r0, r5, #60	; 0x3c
   16e68:	ldrlt	r3, [r5, #48]	; 0x30
   16e6c:	orrlt	r3, r3, #4
   16e70:	strlt	r3, [r5, #48]	; 0x30
   16e74:	bl	18d88 <fts_children@@Base+0x1488>
   16e78:	b	16de4 <fts_open@@Base+0x284>
   16e7c:	mov	r1, r4
   16e80:	mov	r2, r6
   16e84:	mov	r0, r5
   16e88:	bl	15900 <close_stdout@@Base+0x2994>
   16e8c:	mov	r4, r0
   16e90:	b	16d88 <fts_open@@Base+0x228>
   16e94:	bl	11578 <__errno_location@plt>
   16e98:	mov	r3, #22
   16e9c:	str	r3, [r0]
   16ea0:	mov	r0, r5
   16ea4:	add	sp, sp, #20
   16ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eac:	bl	11578 <__errno_location@plt>
   16eb0:	mov	r5, #0
   16eb4:	mov	r3, #22
   16eb8:	str	r3, [r0]
   16ebc:	mov	r0, r5
   16ec0:	add	sp, sp, #20
   16ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ec8:	mov	r2, #4096	; 0x1000
   16ecc:	b	16c0c <fts_open@@Base+0xac>
   16ed0:	bl	11578 <__errno_location@plt>
   16ed4:	mov	r5, r4
   16ed8:	mov	r3, #22
   16edc:	str	r3, [r0]
   16ee0:	b	16de4 <fts_open@@Base+0x284>
   16ee4:	mov	r4, r1
   16ee8:	b	16d88 <fts_open@@Base+0x228>
   16eec:	andeq	r3, r0, r4, asr #24
   16ef0:	andeq	r3, r0, r8, ror #21
   16ef4:	ldrdeq	r4, [r0], -r8

00016ef8 <fts_close@@Base>:
   16ef8:	push	{r4, r5, r6, lr}
   16efc:	mov	r5, r0
   16f00:	ldr	r3, [r0]
   16f04:	cmp	r3, #0
   16f08:	beq	16f44 <fts_close@@Base+0x4c>
   16f0c:	ldr	r2, [r3, #48]	; 0x30
   16f10:	cmp	r2, #0
   16f14:	blt	17030 <fts_close@@Base+0x138>
   16f18:	ldr	r4, [r3, #8]
   16f1c:	mov	r0, r3
   16f20:	cmp	r4, #0
   16f24:	ldreq	r4, [r3, #4]
   16f28:	bl	113bc <free@plt>
   16f2c:	ldr	r2, [r4, #48]	; 0x30
   16f30:	mov	r3, r4
   16f34:	cmp	r2, #0
   16f38:	bge	16f18 <fts_close@@Base+0x20>
   16f3c:	mov	r0, r4
   16f40:	bl	113bc <free@plt>
   16f44:	ldr	r0, [r5, #4]
   16f48:	cmp	r0, #0
   16f4c:	beq	16f54 <fts_close@@Base+0x5c>
   16f50:	bl	15a60 <close_stdout@@Base+0x2af4>
   16f54:	ldr	r0, [r5, #8]
   16f58:	bl	113bc <free@plt>
   16f5c:	ldr	r0, [r5, #24]
   16f60:	bl	113bc <free@plt>
   16f64:	ldr	r3, [r5, #48]	; 0x30
   16f68:	tst	r3, #512	; 0x200
   16f6c:	beq	16fe4 <fts_close@@Base+0xec>
   16f70:	ldr	r0, [r5, #32]
   16f74:	cmp	r0, #0
   16f78:	blt	16f88 <fts_close@@Base+0x90>
   16f7c:	bl	1168c <close@plt>
   16f80:	cmp	r0, #0
   16f84:	bne	17024 <fts_close@@Base+0x12c>
   16f88:	mov	r4, #0
   16f8c:	add	r0, r5, #60	; 0x3c
   16f90:	bl	15a98 <close_stdout@@Base+0x2b2c>
   16f94:	ldr	r0, [r5, #52]	; 0x34
   16f98:	cmp	r0, #0
   16f9c:	beq	16fa4 <fts_close@@Base+0xac>
   16fa0:	bl	18790 <fts_children@@Base+0xe90>
   16fa4:	ldr	r2, [r5, #48]	; 0x30
   16fa8:	movw	r3, #258	; 0x102
   16fac:	ldr	r0, [r5, #56]	; 0x38
   16fb0:	and	r3, r2, r3
   16fb4:	cmp	r3, #0
   16fb8:	beq	1701c <fts_close@@Base+0x124>
   16fbc:	cmp	r0, #0
   16fc0:	beq	16fc8 <fts_close@@Base+0xd0>
   16fc4:	bl	18790 <fts_children@@Base+0xe90>
   16fc8:	mov	r0, r5
   16fcc:	bl	113bc <free@plt>
   16fd0:	cmp	r4, #0
   16fd4:	moveq	r3, r4
   16fd8:	bne	17060 <fts_close@@Base+0x168>
   16fdc:	mov	r0, r3
   16fe0:	pop	{r4, r5, r6, pc}
   16fe4:	tst	r3, #4
   16fe8:	bne	16f88 <fts_close@@Base+0x90>
   16fec:	ldr	r0, [r5, #28]
   16ff0:	bl	11638 <fchdir@plt>
   16ff4:	cmp	r0, #0
   16ff8:	bne	17038 <fts_close@@Base+0x140>
   16ffc:	ldr	r0, [r5, #28]
   17000:	bl	1168c <close@plt>
   17004:	cmp	r0, #0
   17008:	beq	16f88 <fts_close@@Base+0x90>
   1700c:	bl	11578 <__errno_location@plt>
   17010:	mov	r6, r0
   17014:	ldr	r4, [r6]
   17018:	b	16f8c <fts_close@@Base+0x94>
   1701c:	bl	113bc <free@plt>
   17020:	b	16fc8 <fts_close@@Base+0xd0>
   17024:	bl	11578 <__errno_location@plt>
   17028:	ldr	r4, [r0]
   1702c:	b	16f8c <fts_close@@Base+0x94>
   17030:	mov	r4, r3
   17034:	b	16f3c <fts_close@@Base+0x44>
   17038:	bl	11578 <__errno_location@plt>
   1703c:	mov	r6, r0
   17040:	ldr	r0, [r5, #28]
   17044:	ldr	r4, [r6]
   17048:	bl	1168c <close@plt>
   1704c:	cmp	r0, #0
   17050:	beq	16f8c <fts_close@@Base+0x94>
   17054:	cmp	r4, #0
   17058:	bne	16f8c <fts_close@@Base+0x94>
   1705c:	b	17014 <fts_close@@Base+0x11c>
   17060:	bl	11578 <__errno_location@plt>
   17064:	mvn	r3, #0
   17068:	str	r4, [r0]
   1706c:	b	16fdc <fts_close@@Base+0xe4>

00017070 <fts_read@@Base>:
   17070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17074:	sub	sp, sp, #124	; 0x7c
   17078:	ldr	r9, [pc, #2100]	; 178b4 <fts_read@@Base+0x844>
   1707c:	mov	r8, r0
   17080:	ldr	r3, [pc, #2096]	; 178b8 <fts_read@@Base+0x848>
   17084:	add	r9, pc, r9
   17088:	ldr	fp, [r0]
   1708c:	ldr	sl, [r9, r3]
   17090:	cmp	fp, #0
   17094:	ldr	r3, [sl]
   17098:	str	r3, [sp, #116]	; 0x74
   1709c:	beq	17240 <fts_read@@Base+0x1d0>
   170a0:	ldr	r3, [r0, #48]	; 0x30
   170a4:	ands	r3, r3, #16384	; 0x4000
   170a8:	bne	17240 <fts_read@@Base+0x1d0>
   170ac:	ldrh	r2, [fp, #64]	; 0x40
   170b0:	mov	r1, #3
   170b4:	strh	r1, [fp, #64]	; 0x40
   170b8:	cmp	r2, #1
   170bc:	beq	17458 <fts_read@@Base+0x3e8>
   170c0:	cmp	r2, #2
   170c4:	ldrh	r3, [fp, #60]	; 0x3c
   170c8:	beq	171bc <fts_read@@Base+0x14c>
   170cc:	cmp	r3, #1
   170d0:	bne	17100 <fts_read@@Base+0x90>
   170d4:	b	17234 <fts_read@@Base+0x1c4>
   170d8:	str	r6, [r8]
   170dc:	mov	r0, fp
   170e0:	bl	113bc <free@plt>
   170e4:	ldr	r4, [r6, #48]	; 0x30
   170e8:	cmp	r4, #0
   170ec:	beq	17260 <fts_read@@Base+0x1f0>
   170f0:	ldrh	r3, [r6, #64]	; 0x40
   170f4:	cmp	r3, #4
   170f8:	bne	1735c <fts_read@@Base+0x2ec>
   170fc:	mov	fp, r6
   17100:	ldr	r6, [fp, #8]
   17104:	cmp	r6, #0
   17108:	bne	170d8 <fts_read@@Base+0x68>
   1710c:	ldr	r4, [fp, #4]
   17110:	ldr	r3, [r4, #12]
   17114:	cmp	r3, #0
   17118:	bne	17660 <fts_read@@Base+0x5f0>
   1711c:	str	r4, [r8]
   17120:	mov	r0, fp
   17124:	bl	113bc <free@plt>
   17128:	ldr	r3, [r4, #48]	; 0x30
   1712c:	cmn	r3, #1
   17130:	beq	1751c <fts_read@@Base+0x4ac>
   17134:	ldrh	r3, [r4, #60]	; 0x3c
   17138:	cmp	r3, #11
   1713c:	beq	173d0 <fts_read@@Base+0x360>
   17140:	ldr	r3, [r4, #40]	; 0x28
   17144:	mov	r1, #0
   17148:	ldr	r2, [r8, #24]
   1714c:	strb	r1, [r2, r3]
   17150:	ldr	r3, [r4, #48]	; 0x30
   17154:	cmp	r3, r1
   17158:	beq	174c4 <fts_read@@Base+0x454>
   1715c:	ldrh	r3, [r4, #62]	; 0x3e
   17160:	tst	r3, #2
   17164:	beq	17474 <fts_read@@Base+0x404>
   17168:	ldr	r3, [r8, #48]	; 0x30
   1716c:	tst	r3, #4
   17170:	beq	174d8 <fts_read@@Base+0x468>
   17174:	ldr	r0, [r4, #36]	; 0x24
   17178:	bl	1168c <close@plt>
   1717c:	ldr	r3, [r4, #32]
   17180:	cmp	r3, #0
   17184:	movne	r3, #7
   17188:	strhne	r3, [r4, #60]	; 0x3c
   1718c:	bne	171a8 <fts_read@@Base+0x138>
   17190:	mov	r3, #6
   17194:	add	r1, r8, #56	; 0x38
   17198:	strh	r3, [r4, #60]	; 0x3c
   1719c:	mov	r2, r4
   171a0:	ldr	r0, [r8, #48]	; 0x30
   171a4:	bl	16184 <close_stdout@@Base+0x3218>
   171a8:	ldr	r3, [r8, #48]	; 0x30
   171ac:	tst	r3, #16384	; 0x4000
   171b0:	bne	17240 <fts_read@@Base+0x1d0>
   171b4:	mov	r6, r4
   171b8:	b	17244 <fts_read@@Base+0x1d4>
   171bc:	sub	r2, r3, #12
   171c0:	cmp	r2, #1
   171c4:	bls	174f4 <fts_read@@Base+0x484>
   171c8:	cmp	r3, #1
   171cc:	bne	17100 <fts_read@@Base+0x90>
   171d0:	ldr	r3, [r8, #48]	; 0x30
   171d4:	tst	r3, #64	; 0x40
   171d8:	beq	173d4 <fts_read@@Base+0x364>
   171dc:	ldrd	r6, [fp, #72]	; 0x48
   171e0:	ldrd	r4, [r8, #16]
   171e4:	cmp	r7, r5
   171e8:	cmpeq	r6, r4
   171ec:	beq	173d4 <fts_read@@Base+0x364>
   171f0:	ldrh	r3, [fp, #62]	; 0x3e
   171f4:	tst	r3, #2
   171f8:	bne	17654 <fts_read@@Base+0x5e4>
   171fc:	ldr	r0, [r8, #4]
   17200:	cmp	r0, #0
   17204:	beq	17214 <fts_read@@Base+0x1a4>
   17208:	bl	15a60 <close_stdout@@Base+0x2af4>
   1720c:	mov	r3, #0
   17210:	str	r3, [r8, #4]
   17214:	mov	r3, #6
   17218:	add	r1, r8, #56	; 0x38
   1721c:	strh	r3, [fp, #60]	; 0x3c
   17220:	mov	r2, fp
   17224:	ldr	r0, [r8, #48]	; 0x30
   17228:	mov	r6, fp
   1722c:	bl	16184 <close_stdout@@Base+0x3218>
   17230:	b	17244 <fts_read@@Base+0x1d4>
   17234:	cmp	r2, #4
   17238:	bne	171d0 <fts_read@@Base+0x160>
   1723c:	b	171f0 <fts_read@@Base+0x180>
   17240:	mov	r6, #0
   17244:	ldr	r2, [sp, #116]	; 0x74
   17248:	mov	r0, r6
   1724c:	ldr	r3, [sl]
   17250:	cmp	r2, r3
   17254:	bne	177c8 <fts_read@@Base+0x758>
   17258:	add	sp, sp, #124	; 0x7c
   1725c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17260:	mov	r0, r8
   17264:	bl	15b44 <close_stdout@@Base+0x2bd8>
   17268:	cmp	r0, #0
   1726c:	bne	175c4 <fts_read@@Base+0x554>
   17270:	ldr	r2, [r8, #48]	; 0x30
   17274:	movw	r3, #258	; 0x102
   17278:	ldr	r0, [r8, #56]	; 0x38
   1727c:	and	r3, r2, r3
   17280:	cmp	r3, #0
   17284:	beq	175ac <fts_read@@Base+0x53c>
   17288:	cmp	r0, #0
   1728c:	beq	17294 <fts_read@@Base+0x224>
   17290:	bl	18790 <fts_children@@Base+0xe90>
   17294:	ldr	r3, [r6, #52]	; 0x34
   17298:	add	r4, r6, #176	; 0xb0
   1729c:	add	r2, r3, #1
   172a0:	mov	r1, r4
   172a4:	str	r3, [r6, #40]	; 0x28
   172a8:	ldr	r0, [r8, #24]
   172ac:	bl	113b0 <memmove@plt>
   172b0:	mov	r0, r4
   172b4:	mov	r1, #47	; 0x2f
   172b8:	bl	115fc <strrchr@plt>
   172bc:	cmp	r0, #0
   172c0:	beq	172f0 <fts_read@@Base+0x280>
   172c4:	cmp	r4, r0
   172c8:	beq	175b4 <fts_read@@Base+0x544>
   172cc:	add	r7, r0, #1
   172d0:	mov	r0, r7
   172d4:	bl	11530 <strlen@plt>
   172d8:	mov	r1, r7
   172dc:	mov	r5, r0
   172e0:	mov	r0, r4
   172e4:	add	r2, r5, #1
   172e8:	bl	113b0 <memmove@plt>
   172ec:	str	r5, [r6, #52]	; 0x34
   172f0:	ldr	r3, [r8, #24]
   172f4:	add	r1, r8, #56	; 0x38
   172f8:	str	r3, [r6, #28]
   172fc:	str	r3, [r6, #24]
   17300:	ldr	r0, [r8, #48]	; 0x30
   17304:	bl	15d88 <close_stdout@@Base+0x2e1c>
   17308:	str	r6, [r8]
   1730c:	ldrh	r0, [r6, #60]	; 0x3c
   17310:	cmp	r0, #11
   17314:	beq	173b4 <fts_read@@Base+0x344>
   17318:	cmp	r0, #1
   1731c:	bne	17244 <fts_read@@Base+0x1d4>
   17320:	ldr	r3, [r6, #48]	; 0x30
   17324:	add	r1, r8, #56	; 0x38
   17328:	ldr	r0, [r8, #48]	; 0x30
   1732c:	mov	r2, r6
   17330:	cmp	r3, #0
   17334:	ldrdeq	r4, [r6, #72]	; 0x48
   17338:	strdeq	r4, [r8, #16]
   1733c:	bl	15e88 <close_stdout@@Base+0x2f1c>
   17340:	subs	r4, r0, #0
   17344:	bne	17244 <fts_read@@Base+0x1d4>
   17348:	bl	11578 <__errno_location@plt>
   1734c:	mov	r6, r4
   17350:	mov	r3, #12
   17354:	str	r3, [r0]
   17358:	b	17244 <fts_read@@Base+0x1d4>
   1735c:	cmp	r3, #2
   17360:	beq	17690 <fts_read@@Base+0x620>
   17364:	ldr	r0, [r6, #4]
   17368:	mov	ip, #47	; 0x2f
   1736c:	ldr	r2, [r8, #24]
   17370:	add	r1, r6, #176	; 0xb0
   17374:	ldr	r3, [r0, #40]	; 0x28
   17378:	ldr	lr, [r0, #28]
   1737c:	sub	r0, r3, #1
   17380:	ldrb	lr, [lr, r0]
   17384:	cmp	lr, ip
   17388:	moveq	r3, r0
   1738c:	add	r0, r2, r3
   17390:	strb	ip, [r2, r3]
   17394:	add	r0, r0, #1
   17398:	ldr	r2, [r6, #52]	; 0x34
   1739c:	add	r2, r2, #1
   173a0:	bl	113b0 <memmove@plt>
   173a4:	str	r6, [r8]
   173a8:	ldrh	r0, [r6, #60]	; 0x3c
   173ac:	cmp	r0, #11
   173b0:	bne	17318 <fts_read@@Base+0x2a8>
   173b4:	ldrd	r4, [r6, #120]	; 0x78
   173b8:	cmp	r5, #0
   173bc:	cmpeq	r4, #2
   173c0:	beq	175d8 <fts_read@@Base+0x568>
   173c4:	cmp	r5, #0
   173c8:	cmpeq	r4, #1
   173cc:	beq	17244 <fts_read@@Base+0x1d4>
   173d0:	bl	11680 <abort@plt>
   173d4:	ldr	r0, [r8, #4]
   173d8:	cmp	r0, #0
   173dc:	beq	17550 <fts_read@@Base+0x4e0>
   173e0:	tst	r3, #8192	; 0x2000
   173e4:	bne	1753c <fts_read@@Base+0x4cc>
   173e8:	ldr	ip, [fp, #24]
   173ec:	mov	r0, r8
   173f0:	add	r1, fp, #72	; 0x48
   173f4:	add	r2, fp, #168	; 0xa8
   173f8:	mvn	r3, #0
   173fc:	str	ip, [sp]
   17400:	bl	15f3c <close_stdout@@Base+0x2fd0>
   17404:	cmp	r0, #0
   17408:	beq	17448 <fts_read@@Base+0x3d8>
   1740c:	bl	11578 <__errno_location@plt>
   17410:	ldrh	r3, [fp, #62]	; 0x3e
   17414:	orr	r3, r3, #1
   17418:	ldr	r2, [r0]
   1741c:	strh	r3, [fp, #62]	; 0x3e
   17420:	str	r2, [fp, #32]
   17424:	ldr	r6, [r8, #4]
   17428:	cmp	r6, #0
   1742c:	beq	1744c <fts_read@@Base+0x3dc>
   17430:	ldr	r3, [r6, #4]
   17434:	ldr	r3, [r3, #24]
   17438:	str	r3, [r6, #24]
   1743c:	ldr	r6, [r6, #8]
   17440:	cmp	r6, #0
   17444:	bne	17430 <fts_read@@Base+0x3c0>
   17448:	ldr	r6, [r8, #4]
   1744c:	mov	r3, #0
   17450:	str	r3, [r8, #4]
   17454:	b	17364 <fts_read@@Base+0x2f4>
   17458:	ldr	r0, [r0, #32]
   1745c:	add	r1, r8, #48	; 0x30
   17460:	mov	r2, fp
   17464:	mov	r6, fp
   17468:	bl	15b94 <close_stdout@@Base+0x2c28>
   1746c:	strh	r0, [fp, #60]	; 0x3c
   17470:	b	17244 <fts_read@@Base+0x1d4>
   17474:	tst	r3, #1
   17478:	bne	1717c <fts_read@@Base+0x10c>
   1747c:	ldr	r2, [r4, #4]
   17480:	mov	r0, r8
   17484:	ldr	r1, [pc, #1072]	; 178bc <fts_read@@Base+0x84c>
   17488:	mvn	r3, #0
   1748c:	add	r1, pc, r1
   17490:	str	r1, [sp]
   17494:	add	r1, r2, #72	; 0x48
   17498:	add	r2, r2, #168	; 0xa8
   1749c:	bl	15f3c <close_stdout@@Base+0x2fd0>
   174a0:	cmp	r0, #0
   174a4:	beq	1717c <fts_read@@Base+0x10c>
   174a8:	bl	11578 <__errno_location@plt>
   174ac:	ldr	r3, [r0]
   174b0:	str	r3, [r4, #32]
   174b4:	ldr	r3, [r8, #48]	; 0x30
   174b8:	orr	r3, r3, #16384	; 0x4000
   174bc:	str	r3, [r8, #48]	; 0x30
   174c0:	b	1717c <fts_read@@Base+0x10c>
   174c4:	mov	r0, r8
   174c8:	bl	15b44 <close_stdout@@Base+0x2bd8>
   174cc:	cmp	r0, #0
   174d0:	beq	1717c <fts_read@@Base+0x10c>
   174d4:	b	174a8 <fts_read@@Base+0x438>
   174d8:	tst	r3, #512	; 0x200
   174dc:	beq	176bc <fts_read@@Base+0x64c>
   174e0:	mov	r0, r8
   174e4:	ldr	r1, [r4, #36]	; 0x24
   174e8:	mov	r2, #1
   174ec:	bl	15ad0 <close_stdout@@Base+0x2b64>
   174f0:	b	17174 <fts_read@@Base+0x104>
   174f4:	ldr	r0, [r0, #32]
   174f8:	add	r1, r8, #48	; 0x30
   174fc:	mov	r2, fp
   17500:	mov	r3, #1
   17504:	bl	15b94 <close_stdout@@Base+0x2c28>
   17508:	cmp	r0, #1
   1750c:	strh	r0, [fp, #60]	; 0x3c
   17510:	beq	176f8 <fts_read@@Base+0x688>
   17514:	mov	r6, fp
   17518:	b	17308 <fts_read@@Base+0x298>
   1751c:	mov	r0, r4
   17520:	bl	113bc <free@plt>
   17524:	bl	11578 <__errno_location@plt>
   17528:	mov	r3, #0
   1752c:	mov	r6, r3
   17530:	str	r3, [r0]
   17534:	str	r3, [r8]
   17538:	b	17244 <fts_read@@Base+0x1d4>
   1753c:	bic	r3, r3, #8192	; 0x2000
   17540:	str	r3, [r8, #48]	; 0x30
   17544:	bl	15a60 <close_stdout@@Base+0x2af4>
   17548:	mov	r3, #0
   1754c:	str	r3, [r8, #4]
   17550:	mov	r0, r8
   17554:	mov	r1, #3
   17558:	bl	16274 <close_stdout@@Base+0x3308>
   1755c:	cmp	r0, #0
   17560:	str	r0, [r8, #4]
   17564:	movne	r6, r0
   17568:	bne	1744c <fts_read@@Base+0x3dc>
   1756c:	ldr	r0, [r8, #48]	; 0x30
   17570:	tst	r0, #16384	; 0x4000
   17574:	bne	17240 <fts_read@@Base+0x1d0>
   17578:	ldr	r3, [fp, #32]
   1757c:	cmp	r3, #0
   17580:	beq	17598 <fts_read@@Base+0x528>
   17584:	ldrh	r3, [fp, #60]	; 0x3c
   17588:	cmp	r3, #4
   1758c:	movne	r3, #7
   17590:	strhne	r3, [fp, #60]	; 0x3c
   17594:	ldrne	r0, [r8, #48]	; 0x30
   17598:	add	r1, r8, #56	; 0x38
   1759c:	mov	r2, fp
   175a0:	bl	16184 <close_stdout@@Base+0x3218>
   175a4:	mov	r6, fp
   175a8:	b	17244 <fts_read@@Base+0x1d4>
   175ac:	bl	113bc <free@plt>
   175b0:	b	17294 <fts_read@@Base+0x224>
   175b4:	ldrb	r3, [r6, #177]	; 0xb1
   175b8:	cmp	r3, #0
   175bc:	bne	172cc <fts_read@@Base+0x25c>
   175c0:	b	172f0 <fts_read@@Base+0x280>
   175c4:	ldr	r3, [r8, #48]	; 0x30
   175c8:	mov	r6, r4
   175cc:	orr	r3, r3, #16384	; 0x4000
   175d0:	str	r3, [r8, #48]	; 0x30
   175d4:	b	17244 <fts_read@@Base+0x1d4>
   175d8:	ldr	r3, [r6, #48]	; 0x30
   175dc:	ldr	r4, [r6, #4]
   175e0:	cmp	r3, #0
   175e4:	ble	17604 <fts_read@@Base+0x594>
   175e8:	ldr	r3, [r4, #56]	; 0x38
   175ec:	cmp	r3, #0
   175f0:	bne	17604 <fts_read@@Base+0x594>
   175f4:	ldr	r3, [r8, #48]	; 0x30
   175f8:	and	r3, r3, #24
   175fc:	cmp	r3, #24
   17600:	beq	17780 <fts_read@@Base+0x710>
   17604:	mov	r3, #0
   17608:	ldr	r0, [r8, #32]
   1760c:	add	r1, r8, #48	; 0x30
   17610:	mov	r2, r6
   17614:	bl	15b94 <close_stdout@@Base+0x2c28>
   17618:	ldr	r3, [r6, #88]	; 0x58
   1761c:	and	r3, r3, #61440	; 0xf000
   17620:	cmp	r3, #16384	; 0x4000
   17624:	strh	r0, [r6, #60]	; 0x3c
   17628:	bne	17318 <fts_read@@Base+0x2a8>
   1762c:	ldr	r3, [r6, #48]	; 0x30
   17630:	cmp	r3, #0
   17634:	beq	17318 <fts_read@@Base+0x2a8>
   17638:	ldr	r3, [r4, #56]	; 0x38
   1763c:	cmp	r3, #0
   17640:	beq	17318 <fts_read@@Base+0x2a8>
   17644:	sub	r3, r3, #1
   17648:	str	r3, [r4, #56]	; 0x38
   1764c:	ldrh	r0, [r6, #60]	; 0x3c
   17650:	b	17318 <fts_read@@Base+0x2a8>
   17654:	ldr	r0, [fp, #36]	; 0x24
   17658:	bl	1168c <close@plt>
   1765c:	b	171fc <fts_read@@Base+0x18c>
   17660:	str	r4, [r8]
   17664:	mov	r0, r8
   17668:	ldr	r3, [r4, #40]	; 0x28
   1766c:	mov	r1, #3
   17670:	ldr	r2, [r8, #24]
   17674:	strb	r6, [r2, r3]
   17678:	bl	16274 <close_stdout@@Base+0x3308>
   1767c:	subs	r6, r0, #0
   17680:	beq	17734 <fts_read@@Base+0x6c4>
   17684:	mov	r0, fp
   17688:	bl	113bc <free@plt>
   1768c:	b	17364 <fts_read@@Base+0x2f4>
   17690:	ldr	r0, [r8, #32]
   17694:	add	r1, r8, #48	; 0x30
   17698:	mov	r2, r6
   1769c:	mov	r3, #1
   176a0:	bl	15b94 <close_stdout@@Base+0x2c28>
   176a4:	cmp	r0, #1
   176a8:	strh	r0, [r6, #60]	; 0x3c
   176ac:	beq	17748 <fts_read@@Base+0x6d8>
   176b0:	mov	r3, #3
   176b4:	strh	r3, [r6, #64]	; 0x40
   176b8:	b	17364 <fts_read@@Base+0x2f4>
   176bc:	ldr	r0, [r4, #36]	; 0x24
   176c0:	bl	11638 <fchdir@plt>
   176c4:	cmp	r0, #0
   176c8:	beq	17174 <fts_read@@Base+0x104>
   176cc:	bl	11578 <__errno_location@plt>
   176d0:	ldr	r5, [r0]
   176d4:	mov	r6, r0
   176d8:	ldr	r0, [r4, #36]	; 0x24
   176dc:	bl	1168c <close@plt>
   176e0:	str	r5, [r6]
   176e4:	str	r5, [r4, #32]
   176e8:	ldr	r3, [r8, #48]	; 0x30
   176ec:	orr	r3, r3, #16384	; 0x4000
   176f0:	str	r3, [r8, #48]	; 0x30
   176f4:	b	17174 <fts_read@@Base+0x104>
   176f8:	ldr	r1, [r8, #48]	; 0x30
   176fc:	tst	r1, #4
   17700:	bne	17514 <fts_read@@Base+0x4a4>
   17704:	ldr	r2, [pc, #436]	; 178c0 <fts_read@@Base+0x850>
   17708:	ldr	r0, [r8, #32]
   1770c:	add	r2, pc, r2
   17710:	bl	15e20 <close_stdout@@Base+0x2eb4>
   17714:	cmp	r0, #0
   17718:	str	r0, [fp, #36]	; 0x24
   1771c:	blt	177cc <fts_read@@Base+0x75c>
   17720:	ldrh	r3, [fp, #62]	; 0x3e
   17724:	mov	r6, fp
   17728:	orr	r3, r3, #2
   1772c:	strh	r3, [fp, #62]	; 0x3e
   17730:	b	17308 <fts_read@@Base+0x298>
   17734:	ldr	r3, [r8, #48]	; 0x30
   17738:	tst	r3, #16384	; 0x4000
   1773c:	bne	17240 <fts_read@@Base+0x1d0>
   17740:	ldr	r4, [fp, #4]
   17744:	b	1711c <fts_read@@Base+0xac>
   17748:	ldr	r1, [r8, #48]	; 0x30
   1774c:	tst	r1, #4
   17750:	bne	176b0 <fts_read@@Base+0x640>
   17754:	ldr	r2, [pc, #360]	; 178c4 <fts_read@@Base+0x854>
   17758:	ldr	r0, [r8, #32]
   1775c:	add	r2, pc, r2
   17760:	bl	15e20 <close_stdout@@Base+0x2eb4>
   17764:	cmp	r0, #0
   17768:	str	r0, [r6, #36]	; 0x24
   1776c:	blt	177e8 <fts_read@@Base+0x778>
   17770:	ldrh	r3, [r6, #62]	; 0x3e
   17774:	orr	r3, r3, #2
   17778:	strh	r3, [r6, #62]	; 0x3e
   1777c:	b	176b0 <fts_read@@Base+0x640>
   17780:	ldr	r7, [r4, #44]	; 0x2c
   17784:	ldr	r3, [r7, #48]	; 0x30
   17788:	ldr	r5, [r7, #52]	; 0x34
   1778c:	tst	r3, #512	; 0x200
   17790:	beq	17604 <fts_read@@Base+0x594>
   17794:	cmp	r5, #0
   17798:	beq	1786c <fts_read@@Base+0x7fc>
   1779c:	ldrd	r2, [r4, #72]	; 0x48
   177a0:	add	r1, sp, #120	; 0x78
   177a4:	mov	r0, r5
   177a8:	strd	r2, [r1, #-112]!	; 0xffffff90
   177ac:	bl	182f8 <fts_children@@Base+0x9f8>
   177b0:	subs	fp, r0, #0
   177b4:	beq	17800 <fts_read@@Base+0x790>
   177b8:	ldrb	r7, [fp, #8]
   177bc:	cmp	r7, #0
   177c0:	bne	1764c <fts_read@@Base+0x5dc>
   177c4:	b	17604 <fts_read@@Base+0x594>
   177c8:	bl	1141c <__stack_chk_fail@plt>
   177cc:	bl	11578 <__errno_location@plt>
   177d0:	mov	r6, fp
   177d4:	mov	r3, #7
   177d8:	ldr	r2, [r0]
   177dc:	strh	r3, [fp, #60]	; 0x3c
   177e0:	str	r2, [fp, #32]
   177e4:	b	17308 <fts_read@@Base+0x298>
   177e8:	bl	11578 <__errno_location@plt>
   177ec:	mov	r3, #7
   177f0:	ldr	r2, [r0]
   177f4:	strh	r3, [r6, #60]	; 0x3c
   177f8:	str	r2, [r6, #32]
   177fc:	b	176b0 <fts_read@@Base+0x640>
   17800:	mov	r0, #16
   17804:	bl	114d0 <malloc@plt>
   17808:	subs	r9, r0, #0
   1780c:	beq	17604 <fts_read@@Base+0x594>
   17810:	ldr	r0, [r7, #32]
   17814:	add	r1, sp, #24
   17818:	bl	11350 <fstatfs64@plt>
   1781c:	cmp	r0, #0
   17820:	movne	r7, fp
   17824:	bne	17840 <fts_read@@Base+0x7d0>
   17828:	ldr	r7, [sp, #24]
   1782c:	movw	r3, #18803	; 0x4973
   17830:	movt	r3, #21093	; 0x5265
   17834:	subs	r3, r7, r3
   17838:	rsbs	r7, r3, #0
   1783c:	adcs	r7, r7, r3
   17840:	strb	r7, [r9, #8]
   17844:	mov	r0, r5
   17848:	ldrd	r2, [r4, #72]	; 0x48
   1784c:	mov	r1, r9
   17850:	strd	r2, [r9]
   17854:	bl	18bd4 <fts_children@@Base+0x12d4>
   17858:	cmp	r0, #0
   1785c:	beq	178a8 <fts_read@@Base+0x838>
   17860:	cmp	r9, r0
   17864:	beq	177bc <fts_read@@Base+0x74c>
   17868:	b	173d0 <fts_read@@Base+0x360>
   1786c:	ldr	ip, [pc, #84]	; 178c8 <fts_read@@Base+0x858>
   17870:	mov	r1, r5
   17874:	ldr	r2, [pc, #80]	; 178cc <fts_read@@Base+0x85c>
   17878:	mov	r0, #13
   1787c:	ldr	r3, [pc, #76]	; 178d0 <fts_read@@Base+0x860>
   17880:	ldr	ip, [r9, ip]
   17884:	add	r2, pc, r2
   17888:	add	r3, pc, r3
   1788c:	str	ip, [sp]
   17890:	bl	185ac <fts_children@@Base+0xcac>
   17894:	cmp	r0, #0
   17898:	mov	r5, r0
   1789c:	str	r0, [r7, #52]	; 0x34
   178a0:	bne	1779c <fts_read@@Base+0x72c>
   178a4:	b	17604 <fts_read@@Base+0x594>
   178a8:	mov	r0, r9
   178ac:	bl	113bc <free@plt>
   178b0:	b	17604 <fts_read@@Base+0x594>
   178b4:	andeq	r4, r1, r4, ror pc
   178b8:	andeq	r0, r0, r4, asr #2
   178bc:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   178c0:	andeq	r3, r0, ip, lsl sp
   178c4:	andeq	r3, r0, ip, asr #25
   178c8:	andeq	r0, r0, r0, asr #2
   178cc:			; <UNDEFINED> instruction: 0xffffe00c
   178d0:			; <UNDEFINED> instruction: 0xffffe024

000178d4 <fts_set@@Base>:
   178d4:	cmp	r2, #4
   178d8:	push	{r3, lr}
   178dc:	movls	r3, #0
   178e0:	strhls	r2, [r1, #64]	; 0x40
   178e4:	bls	178f8 <fts_set@@Base+0x24>
   178e8:	bl	11578 <__errno_location@plt>
   178ec:	mov	r3, #1
   178f0:	mov	r2, #22
   178f4:	str	r2, [r0]
   178f8:	mov	r0, r3
   178fc:	pop	{r3, pc}

00017900 <fts_children@@Base>:
   17900:	push	{r4, r5, r6, r7, r8, lr}
   17904:	bics	r7, r1, #8192	; 0x2000
   17908:	mov	r5, r1
   1790c:	mov	r4, r0
   17910:	bne	17a0c <fts_children@@Base+0x10c>
   17914:	bl	11578 <__errno_location@plt>
   17918:	ldr	r6, [r4]
   1791c:	str	r7, [r0]
   17920:	mov	r8, r0
   17924:	ldr	r3, [r4, #48]	; 0x30
   17928:	ands	r3, r3, #16384	; 0x4000
   1792c:	bne	17a24 <fts_children@@Base+0x124>
   17930:	ldrh	r2, [r6, #60]	; 0x3c
   17934:	cmp	r2, #9
   17938:	ldreq	r3, [r6, #8]
   1793c:	beq	179ac <fts_children@@Base+0xac>
   17940:	cmp	r2, #1
   17944:	bne	179ac <fts_children@@Base+0xac>
   17948:	ldr	r0, [r4, #4]
   1794c:	cmp	r0, #0
   17950:	beq	17958 <fts_children@@Base+0x58>
   17954:	bl	15a60 <close_stdout@@Base+0x2af4>
   17958:	cmp	r5, #8192	; 0x2000
   1795c:	ldreq	r3, [r4, #48]	; 0x30
   17960:	moveq	r5, #2
   17964:	movne	r5, #1
   17968:	orreq	r3, r3, #8192	; 0x2000
   1796c:	streq	r3, [r4, #48]	; 0x30
   17970:	ldr	r3, [r6, #48]	; 0x30
   17974:	cmp	r3, #0
   17978:	bne	17998 <fts_children@@Base+0x98>
   1797c:	ldr	r3, [r6, #24]
   17980:	ldrb	r3, [r3]
   17984:	cmp	r3, #47	; 0x2f
   17988:	beq	17998 <fts_children@@Base+0x98>
   1798c:	ldr	r1, [r4, #48]	; 0x30
   17990:	ands	r6, r1, #4
   17994:	beq	179b4 <fts_children@@Base+0xb4>
   17998:	mov	r1, r5
   1799c:	mov	r0, r4
   179a0:	bl	16274 <close_stdout@@Base+0x3308>
   179a4:	mov	r3, r0
   179a8:	str	r0, [r4, #4]
   179ac:	mov	r0, r3
   179b0:	pop	{r4, r5, r6, r7, r8, pc}
   179b4:	ldr	r2, [pc, #164]	; 17a60 <fts_children@@Base+0x160>
   179b8:	ldr	r0, [r4, #32]
   179bc:	add	r2, pc, r2
   179c0:	bl	15e20 <close_stdout@@Base+0x2eb4>
   179c4:	subs	r7, r0, #0
   179c8:	strlt	r6, [r4, #4]
   179cc:	movlt	r3, r6
   179d0:	blt	179ac <fts_children@@Base+0xac>
   179d4:	mov	r1, r5
   179d8:	mov	r0, r4
   179dc:	bl	16274 <close_stdout@@Base+0x3308>
   179e0:	ldr	r3, [r4, #48]	; 0x30
   179e4:	ands	r5, r3, #512	; 0x200
   179e8:	str	r0, [r4, #4]
   179ec:	beq	17a2c <fts_children@@Base+0x12c>
   179f0:	mov	r1, r7
   179f4:	mov	r0, r4
   179f8:	mov	r2, #1
   179fc:	bl	15ad0 <close_stdout@@Base+0x2b64>
   17a00:	ldr	r3, [r4, #4]
   17a04:	mov	r0, r3
   17a08:	pop	{r4, r5, r6, r7, r8, pc}
   17a0c:	bl	11578 <__errno_location@plt>
   17a10:	mov	r3, #0
   17a14:	mov	r2, #22
   17a18:	str	r2, [r0]
   17a1c:	mov	r0, r3
   17a20:	pop	{r4, r5, r6, r7, r8, pc}
   17a24:	mov	r3, r7
   17a28:	b	179ac <fts_children@@Base+0xac>
   17a2c:	mov	r0, r7
   17a30:	bl	11638 <fchdir@plt>
   17a34:	cmp	r0, #0
   17a38:	bne	17a48 <fts_children@@Base+0x148>
   17a3c:	mov	r0, r7
   17a40:	bl	1168c <close@plt>
   17a44:	b	17a00 <fts_children@@Base+0x100>
   17a48:	ldr	r4, [r8]
   17a4c:	mov	r0, r7
   17a50:	bl	1168c <close@plt>
   17a54:	mov	r3, r5
   17a58:	str	r4, [r8]
   17a5c:	b	179ac <fts_children@@Base+0xac>
   17a60:	andeq	r3, r0, ip, ror #20
   17a64:	push	{r3, r4, r5, lr}
   17a68:	mov	r2, #0
   17a6c:	mov	r4, r1
   17a70:	mov	r1, #1
   17a74:	mov	r5, r0
   17a78:	bl	193bc <fts_children@@Base+0x1abc>
   17a7c:	cmp	r0, #0
   17a80:	blt	17ac0 <fts_children@@Base+0x1c0>
   17a84:	cmp	r4, #0
   17a88:	orrne	r2, r0, #1
   17a8c:	biceq	r2, r0, #1
   17a90:	cmp	r2, r0
   17a94:	beq	17ab8 <fts_children@@Base+0x1b8>
   17a98:	mov	r0, r5
   17a9c:	mov	r1, #2
   17aa0:	bl	193bc <fts_children@@Base+0x1abc>
   17aa4:	cmn	r0, #1
   17aa8:	movne	r0, #0
   17aac:	moveq	r0, #1
   17ab0:	rsb	r0, r0, #0
   17ab4:	pop	{r3, r4, r5, pc}
   17ab8:	mov	r0, #0
   17abc:	pop	{r3, r4, r5, pc}
   17ac0:	mvn	r0, #0
   17ac4:	pop	{r3, r4, r5, pc}
   17ac8:	movw	r1, #1030	; 0x406
   17acc:	mov	r2, #0
   17ad0:	b	193bc <fts_children@@Base+0x1abc>
   17ad4:	push	{r4, r5, r6, lr}
   17ad8:	mov	r4, r0
   17adc:	bl	11494 <__fpending@plt>
   17ae0:	mov	r6, r0
   17ae4:	mov	r0, r4
   17ae8:	ldr	r4, [r4]
   17aec:	bl	1931c <fts_children@@Base+0x1a1c>
   17af0:	and	r4, r4, #32
   17af4:	adds	r5, r0, #0
   17af8:	movne	r5, #1
   17afc:	cmp	r4, #0
   17b00:	bne	17b20 <fts_children@@Base+0x220>
   17b04:	cmp	r5, #0
   17b08:	beq	17b18 <fts_children@@Base+0x218>
   17b0c:	cmp	r6, #0
   17b10:	beq	17b3c <fts_children@@Base+0x23c>
   17b14:	mvn	r4, #0
   17b18:	mov	r0, r4
   17b1c:	pop	{r4, r5, r6, pc}
   17b20:	cmp	r5, #0
   17b24:	bne	17b14 <fts_children@@Base+0x214>
   17b28:	bl	11578 <__errno_location@plt>
   17b2c:	mvn	r4, #0
   17b30:	str	r5, [r0]
   17b34:	mov	r0, r4
   17b38:	pop	{r4, r5, r6, pc}
   17b3c:	bl	11578 <__errno_location@plt>
   17b40:	ldr	r4, [r0]
   17b44:	subs	r4, r4, #9
   17b48:	mvnne	r4, #0
   17b4c:	mov	r0, r4
   17b50:	pop	{r4, r5, r6, pc}
   17b54:	mov	r2, #0
   17b58:	mov	r3, #0
   17b5c:	movw	r1, #62998	; 0xf616
   17b60:	strd	r2, [r0, #16]
   17b64:	movt	r1, #149	; 0x95
   17b68:	str	r1, [r0, #24]
   17b6c:	bx	lr
   17b70:	push	{r3, r4, r5, r6, r7, lr}
   17b74:	movw	r3, #62998	; 0xf616
   17b78:	ldr	r2, [r0, #24]
   17b7c:	movt	r3, #149	; 0x95
   17b80:	mov	ip, r0
   17b84:	cmp	r2, r3
   17b88:	bne	17c1c <fts_children@@Base+0x31c>
   17b8c:	ldrd	r6, [r0, #16]
   17b90:	orrs	r0, r6, r7
   17b94:	beq	17bd8 <fts_children@@Base+0x2d8>
   17b98:	ldrd	r4, [r1, #96]	; 0x60
   17b9c:	ldrd	r2, [ip]
   17ba0:	cmp	r5, r3
   17ba4:	cmpeq	r4, r2
   17ba8:	beq	17c04 <fts_children@@Base+0x304>
   17bac:	adds	r2, r6, #1
   17bb0:	adc	r3, r7, #0
   17bb4:	and	r6, r6, r2
   17bb8:	and	r7, r7, r3
   17bbc:	strd	r2, [ip, #16]
   17bc0:	orrs	r0, r6, r7
   17bc4:	bne	17bfc <fts_children@@Base+0x2fc>
   17bc8:	orrs	r0, r2, r3
   17bcc:	bne	17be4 <fts_children@@Base+0x2e4>
   17bd0:	mov	r0, #1
   17bd4:	pop	{r3, r4, r5, r6, r7, pc}
   17bd8:	mov	r2, #1
   17bdc:	mov	r3, #0
   17be0:	strd	r2, [ip, #16]
   17be4:	ldrd	r2, [r1]
   17be8:	mov	r0, #0
   17bec:	strd	r2, [ip, #8]
   17bf0:	ldrd	r2, [r1, #96]	; 0x60
   17bf4:	strd	r2, [ip]
   17bf8:	pop	{r3, r4, r5, r6, r7, pc}
   17bfc:	mov	r0, #0
   17c00:	pop	{r3, r4, r5, r6, r7, pc}
   17c04:	ldrd	r4, [r1]
   17c08:	ldrd	r2, [ip, #8]
   17c0c:	cmp	r5, r3
   17c10:	cmpeq	r4, r2
   17c14:	bne	17bac <fts_children@@Base+0x2ac>
   17c18:	b	17bd0 <fts_children@@Base+0x2d0>
   17c1c:	ldr	r0, [pc, #24]	; 17c3c <fts_children@@Base+0x33c>
   17c20:	mov	r2, #60	; 0x3c
   17c24:	ldr	r1, [pc, #20]	; 17c40 <fts_children@@Base+0x340>
   17c28:	ldr	r3, [pc, #20]	; 17c44 <fts_children@@Base+0x344>
   17c2c:	add	r0, pc, r0
   17c30:	add	r1, pc, r1
   17c34:	add	r3, pc, r3
   17c38:	bl	116c8 <__assert_fail@plt>
   17c3c:	andeq	r3, r0, ip, lsl #16
   17c40:	andeq	r3, r0, r0, lsr #16
   17c44:	strdeq	r3, [r0], -r8
   17c48:	push	{r1, r2, r3}
   17c4c:	ldr	r3, [pc, #88]	; 17cac <fts_children@@Base+0x3ac>
   17c50:	ldr	r2, [pc, #88]	; 17cb0 <fts_children@@Base+0x3b0>
   17c54:	add	r3, pc, r3
   17c58:	push	{r4, lr}
   17c5c:	sub	sp, sp, #12
   17c60:	ldr	r4, [r3, r2]
   17c64:	ldr	r1, [sp, #20]
   17c68:	ldr	r3, [r4]
   17c6c:	ands	r2, r1, #64	; 0x40
   17c70:	ldrne	r2, [sp, #24]
   17c74:	str	r3, [sp, #4]
   17c78:	addne	r3, sp, #24
   17c7c:	strne	r3, [sp]
   17c80:	bl	114b8 <open64@plt>
   17c84:	bl	192e0 <fts_children@@Base+0x19e0>
   17c88:	ldr	r2, [sp, #4]
   17c8c:	ldr	r3, [r4]
   17c90:	cmp	r2, r3
   17c94:	bne	17ca8 <fts_children@@Base+0x3a8>
   17c98:	add	sp, sp, #12
   17c9c:	pop	{r4, lr}
   17ca0:	add	sp, sp, #12
   17ca4:	bx	lr
   17ca8:	bl	1141c <__stack_chk_fail@plt>
   17cac:	andeq	r4, r1, r4, lsr #7
   17cb0:	andeq	r0, r0, r4, asr #2
   17cb4:	andeq	r0, r0, r0
   17cb8:	cmp	r0, #9
   17cbc:	push	{r4, r5, r6, r7, r8, lr}
   17cc0:	bhi	17d54 <fts_children@@Base+0x454>
   17cc4:	mov	r7, #11
   17cc8:	movw	r8, #43691	; 0xaaab
   17ccc:	movt	r8, #43690	; 0xaaaa
   17cd0:	cmp	r7, #9
   17cd4:	bls	17d4c <fts_children@@Base+0x44c>
   17cd8:	umull	r2, r3, r8, r7
   17cdc:	lsr	r3, r3, #1
   17ce0:	add	r3, r3, r3, lsl #1
   17ce4:	cmp	r7, r3
   17ce8:	beq	17d38 <fts_children@@Base+0x438>
   17cec:	mov	r6, #16
   17cf0:	mov	r5, #9
   17cf4:	mov	r4, #3
   17cf8:	b	17d08 <fts_children@@Base+0x408>
   17cfc:	bl	19824 <fts_children@@Base+0x1f24>
   17d00:	cmp	r1, #0
   17d04:	beq	17d38 <fts_children@@Base+0x438>
   17d08:	add	r5, r5, r6
   17d0c:	add	r4, r4, #2
   17d10:	cmp	r5, r7
   17d14:	mov	r0, r7
   17d18:	add	r6, r6, #8
   17d1c:	mov	r1, r4
   17d20:	bcc	17cfc <fts_children@@Base+0x3fc>
   17d24:	mov	r1, r4
   17d28:	mov	r0, r7
   17d2c:	bl	19824 <fts_children@@Base+0x1f24>
   17d30:	cmp	r1, #0
   17d34:	bne	17d44 <fts_children@@Base+0x444>
   17d38:	add	r7, r7, #2
   17d3c:	cmn	r7, #1
   17d40:	bne	17cd0 <fts_children@@Base+0x3d0>
   17d44:	mov	r0, r7
   17d48:	pop	{r4, r5, r6, r7, r8, pc}
   17d4c:	mov	r4, #3
   17d50:	b	17d24 <fts_children@@Base+0x424>
   17d54:	orr	r7, r0, #1
   17d58:	cmn	r7, #1
   17d5c:	bne	17cc8 <fts_children@@Base+0x3c8>
   17d60:	b	17d44 <fts_children@@Base+0x444>
   17d64:	push	{r3, lr}
   17d68:	ror	r0, r0, #3
   17d6c:	bl	19824 <fts_children@@Base+0x1f24>
   17d70:	mov	r0, r1
   17d74:	pop	{r3, pc}
   17d78:	subs	r3, r1, r0
   17d7c:	rsbs	r0, r3, #0
   17d80:	adcs	r0, r0, r3
   17d84:	bx	lr
   17d88:	push	{r4, lr}
   17d8c:	mov	r4, r0
   17d90:	ldr	r3, [r4, #24]
   17d94:	mov	r0, r1
   17d98:	ldr	r1, [r4, #8]
   17d9c:	blx	r3
   17da0:	ldr	r3, [r4, #8]
   17da4:	cmp	r0, r3
   17da8:	bcs	17db8 <fts_children@@Base+0x4b8>
   17dac:	ldr	r3, [r4]
   17db0:	add	r0, r3, r0, lsl #3
   17db4:	pop	{r4, pc}
   17db8:	bl	11680 <abort@plt>
   17dbc:	push	{r4, r5, r6, r7, r8, lr}
   17dc0:	mov	r7, r2
   17dc4:	mov	r8, r3
   17dc8:	mov	r6, r0
   17dcc:	mov	r5, r1
   17dd0:	bl	17d88 <fts_children@@Base+0x488>
   17dd4:	str	r0, [r7]
   17dd8:	mov	r4, r0
   17ddc:	ldr	r2, [r0]
   17de0:	cmp	r2, #0
   17de4:	beq	17e78 <fts_children@@Base+0x578>
   17de8:	cmp	r5, r2
   17dec:	beq	17e0c <fts_children@@Base+0x50c>
   17df0:	mov	r1, r2
   17df4:	ldr	r3, [r6, #28]
   17df8:	mov	r0, r5
   17dfc:	blx	r3
   17e00:	cmp	r0, #0
   17e04:	beq	17e6c <fts_children@@Base+0x56c>
   17e08:	ldr	r2, [r4]
   17e0c:	cmp	r8, #0
   17e10:	beq	17e3c <fts_children@@Base+0x53c>
   17e14:	ldr	r3, [r4, #4]
   17e18:	cmp	r3, #0
   17e1c:	streq	r3, [r4]
   17e20:	ldmne	r3, {r0, r1}
   17e24:	movne	ip, #0
   17e28:	stmne	r4, {r0, r1}
   17e2c:	strne	ip, [r3]
   17e30:	ldrne	r1, [r6, #36]	; 0x24
   17e34:	strne	r1, [r3, #4]
   17e38:	strne	r3, [r6, #36]	; 0x24
   17e3c:	mov	r0, r2
   17e40:	pop	{r4, r5, r6, r7, r8, pc}
   17e44:	ldr	r2, [ip]
   17e48:	cmp	r2, r5
   17e4c:	beq	17e8c <fts_children@@Base+0x58c>
   17e50:	mov	r1, r2
   17e54:	mov	r0, r5
   17e58:	ldr	r2, [r6, #28]
   17e5c:	blx	r2
   17e60:	cmp	r0, #0
   17e64:	bne	17e84 <fts_children@@Base+0x584>
   17e68:	ldr	r4, [r4, #4]
   17e6c:	ldr	ip, [r4, #4]
   17e70:	cmp	ip, #0
   17e74:	bne	17e44 <fts_children@@Base+0x544>
   17e78:	mov	r2, #0
   17e7c:	mov	r0, r2
   17e80:	pop	{r4, r5, r6, r7, r8, pc}
   17e84:	ldr	ip, [r4, #4]
   17e88:	ldr	r2, [ip]
   17e8c:	cmp	r8, #0
   17e90:	beq	17e3c <fts_children@@Base+0x53c>
   17e94:	ldr	r1, [ip, #4]
   17e98:	mov	r3, #0
   17e9c:	mov	r0, r2
   17ea0:	str	r1, [r4, #4]
   17ea4:	str	r3, [ip]
   17ea8:	ldr	r3, [r6, #36]	; 0x24
   17eac:	str	r3, [ip, #4]
   17eb0:	str	ip, [r6, #36]	; 0x24
   17eb4:	pop	{r4, r5, r6, r7, r8, pc}
   17eb8:	ldr	r1, [pc, #176]	; 17f70 <fts_children@@Base+0x670>
   17ebc:	mov	r2, r0
   17ec0:	ldr	r3, [r0]
   17ec4:	add	r1, pc, r1
   17ec8:	cmp	r3, r1
   17ecc:	beq	17f5c <fts_children@@Base+0x65c>
   17ed0:	vldr	s15, [r3, #8]
   17ed4:	vldr	s14, [pc, #136]	; 17f64 <fts_children@@Base+0x664>
   17ed8:	vcmpe.f32	s15, s14
   17edc:	vmrs	APSR_nzcv, fpscr
   17ee0:	ble	17f48 <fts_children@@Base+0x648>
   17ee4:	vldr	s13, [pc, #124]	; 17f68 <fts_children@@Base+0x668>
   17ee8:	vcmpe.f32	s15, s13
   17eec:	vmrs	APSR_nzcv, fpscr
   17ef0:	bpl	17f48 <fts_children@@Base+0x648>
   17ef4:	vldr	s13, [pc, #112]	; 17f6c <fts_children@@Base+0x66c>
   17ef8:	vldr	s12, [r3, #12]
   17efc:	vcmpe.f32	s12, s13
   17f00:	vmrs	APSR_nzcv, fpscr
   17f04:	ble	17f48 <fts_children@@Base+0x648>
   17f08:	vldr	s13, [r3]
   17f0c:	vcmpe.f32	s13, #0.0
   17f10:	vmrs	APSR_nzcv, fpscr
   17f14:	blt	17f48 <fts_children@@Base+0x648>
   17f18:	vadd.f32	s14, s13, s14
   17f1c:	vldr	s12, [r3, #4]
   17f20:	vcmpe.f32	s14, s12
   17f24:	vmrs	APSR_nzcv, fpscr
   17f28:	bpl	17f48 <fts_children@@Base+0x648>
   17f2c:	vmov.f32	s13, #112	; 0x3f800000  1.0
   17f30:	vcmpe.f32	s12, s13
   17f34:	vmrs	APSR_nzcv, fpscr
   17f38:	bhi	17f48 <fts_children@@Base+0x648>
   17f3c:	vcmpe.f32	s15, s14
   17f40:	vmrs	APSR_nzcv, fpscr
   17f44:	bgt	17f5c <fts_children@@Base+0x65c>
   17f48:	ldr	r3, [pc, #36]	; 17f74 <fts_children@@Base+0x674>
   17f4c:	mov	r0, #0
   17f50:	add	r3, pc, r3
   17f54:	str	r3, [r2]
   17f58:	bx	lr
   17f5c:	mov	r0, #1
   17f60:	bx	lr
   17f64:	stclcc	12, cr12, [ip, #820]	; 0x334
   17f68:	svccc	0x00666666
   17f6c:	svccc	0x008ccccd
   17f70:	andeq	r3, r0, r0, lsr #11
   17f74:	andeq	r3, r0, r4, lsl r5
   17f78:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f7c:	mov	r8, r1
   17f80:	ldr	r6, [r1]
   17f84:	mov	r5, r0
   17f88:	ldr	r3, [r1, #4]
   17f8c:	mov	sl, r2
   17f90:	cmp	r6, r3
   17f94:	addcc	r6, r6, #8
   17f98:	movcc	r9, #0
   17f9c:	bcs	18044 <fts_children@@Base+0x744>
   17fa0:	ldr	fp, [r6, #-8]
   17fa4:	mov	r7, r6
   17fa8:	cmp	fp, #0
   17fac:	beq	18038 <fts_children@@Base+0x738>
   17fb0:	ldr	r4, [r6, #-4]
   17fb4:	cmp	r4, #0
   17fb8:	bne	17fd8 <fts_children@@Base+0x6d8>
   17fbc:	b	18028 <fts_children@@Base+0x728>
   17fc0:	ldr	r2, [r0, #4]
   17fc4:	cmp	r3, #0
   17fc8:	str	r2, [r4, #4]
   17fcc:	str	r4, [r0, #4]
   17fd0:	mov	r4, r3
   17fd4:	beq	18024 <fts_children@@Base+0x724>
   17fd8:	ldr	fp, [r4]
   17fdc:	mov	r0, r5
   17fe0:	mov	r1, fp
   17fe4:	bl	17d88 <fts_children@@Base+0x488>
   17fe8:	ldr	r3, [r4, #4]
   17fec:	ldr	r2, [r0]
   17ff0:	cmp	r2, #0
   17ff4:	bne	17fc0 <fts_children@@Base+0x6c0>
   17ff8:	str	fp, [r0]
   17ffc:	cmp	r3, #0
   18000:	ldr	r1, [r5, #12]
   18004:	add	r1, r1, #1
   18008:	str	r1, [r5, #12]
   1800c:	str	r2, [r4]
   18010:	ldr	r2, [r5, #36]	; 0x24
   18014:	str	r2, [r4, #4]
   18018:	str	r4, [r5, #36]	; 0x24
   1801c:	mov	r4, r3
   18020:	bne	17fd8 <fts_children@@Base+0x6d8>
   18024:	ldr	fp, [r6, #-8]
   18028:	cmp	sl, #0
   1802c:	str	r9, [r6, #-4]
   18030:	beq	1804c <fts_children@@Base+0x74c>
   18034:	ldr	r3, [r8, #4]
   18038:	cmp	r3, r7
   1803c:	add	r6, r6, #8
   18040:	bhi	17fa0 <fts_children@@Base+0x6a0>
   18044:	mov	r0, #1
   18048:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1804c:	mov	r0, r5
   18050:	mov	r1, fp
   18054:	bl	17d88 <fts_children@@Base+0x488>
   18058:	ldr	r3, [r0]
   1805c:	mov	r4, r0
   18060:	cmp	r3, #0
   18064:	beq	180b0 <fts_children@@Base+0x7b0>
   18068:	ldr	r0, [r5, #36]	; 0x24
   1806c:	cmp	r0, #0
   18070:	beq	180c4 <fts_children@@Base+0x7c4>
   18074:	ldr	r2, [r0, #4]
   18078:	str	r2, [r5, #36]	; 0x24
   1807c:	str	fp, [r0]
   18080:	ldr	r2, [r4, #4]
   18084:	str	r2, [r0, #4]
   18088:	str	r0, [r4, #4]
   1808c:	str	r9, [r6, #-8]
   18090:	add	r6, r6, #8
   18094:	ldr	r3, [r8, #4]
   18098:	ldr	r2, [r8, #12]
   1809c:	cmp	r3, r7
   180a0:	sub	r2, r2, #1
   180a4:	str	r2, [r8, #12]
   180a8:	bhi	17fa0 <fts_children@@Base+0x6a0>
   180ac:	b	18044 <fts_children@@Base+0x744>
   180b0:	str	fp, [r0]
   180b4:	ldr	r3, [r5, #12]
   180b8:	add	r3, r3, #1
   180bc:	str	r3, [r5, #12]
   180c0:	b	1808c <fts_children@@Base+0x78c>
   180c4:	mov	r0, #8
   180c8:	bl	114d0 <malloc@plt>
   180cc:	cmp	r0, #0
   180d0:	bne	1807c <fts_children@@Base+0x77c>
   180d4:	mov	r0, sl
   180d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180dc:	ldr	r0, [r0, #8]
   180e0:	bx	lr
   180e4:	ldr	r0, [r0, #12]
   180e8:	bx	lr
   180ec:	ldr	r0, [r0, #16]
   180f0:	bx	lr
   180f4:	ldr	r3, [r0]
   180f8:	ldr	r2, [r0, #4]
   180fc:	cmp	r3, r2
   18100:	bcs	18164 <fts_children@@Base+0x864>
   18104:	add	r1, r3, #8
   18108:	add	r2, r2, #7
   1810c:	rsb	r2, r1, r2
   18110:	add	r3, r3, #16
   18114:	bic	r2, r2, #7
   18118:	mov	r0, #0
   1811c:	add	ip, r3, r2
   18120:	ldr	r3, [r1, #-8]
   18124:	cmp	r3, #0
   18128:	beq	18154 <fts_children@@Base+0x854>
   1812c:	ldr	r3, [r1, #-4]
   18130:	mov	r2, #1
   18134:	cmp	r3, #0
   18138:	beq	1814c <fts_children@@Base+0x84c>
   1813c:	ldr	r3, [r3, #4]
   18140:	add	r2, r2, #1
   18144:	cmp	r3, #0
   18148:	bne	1813c <fts_children@@Base+0x83c>
   1814c:	cmp	r0, r2
   18150:	movcc	r0, r2
   18154:	add	r1, r1, #8
   18158:	cmp	r1, ip
   1815c:	bne	18120 <fts_children@@Base+0x820>
   18160:	bx	lr
   18164:	mov	r0, #0
   18168:	bx	lr
   1816c:	push	{r4}		; (str r4, [sp, #-4]!)
   18170:	ldr	r3, [r0]
   18174:	ldr	r2, [r0, #4]
   18178:	cmp	r3, r2
   1817c:	bcs	1820c <fts_children@@Base+0x90c>
   18180:	add	r2, r2, #7
   18184:	add	r1, r3, #8
   18188:	rsb	ip, r1, r2
   1818c:	add	r3, r3, #16
   18190:	bic	ip, ip, #7
   18194:	mov	r2, #0
   18198:	add	r4, r3, ip
   1819c:	mov	ip, r2
   181a0:	ldr	r3, [r1, #-8]
   181a4:	cmp	r3, #0
   181a8:	beq	181d0 <fts_children@@Base+0x8d0>
   181ac:	ldr	r3, [r1, #-4]
   181b0:	add	ip, ip, #1
   181b4:	add	r2, r2, #1
   181b8:	cmp	r3, #0
   181bc:	beq	181d0 <fts_children@@Base+0x8d0>
   181c0:	ldr	r3, [r3, #4]
   181c4:	add	r2, r2, #1
   181c8:	cmp	r3, #0
   181cc:	bne	181c0 <fts_children@@Base+0x8c0>
   181d0:	add	r1, r1, #8
   181d4:	cmp	r1, r4
   181d8:	bne	181a0 <fts_children@@Base+0x8a0>
   181dc:	ldr	r3, [r0, #12]
   181e0:	cmp	r3, ip
   181e4:	movne	r0, #0
   181e8:	beq	181f4 <fts_children@@Base+0x8f4>
   181ec:	pop	{r4}		; (ldr r4, [sp], #4)
   181f0:	bx	lr
   181f4:	ldr	r0, [r0, #16]
   181f8:	pop	{r4}		; (ldr r4, [sp], #4)
   181fc:	subs	r3, r0, r2
   18200:	rsbs	r0, r3, #0
   18204:	adcs	r0, r0, r3
   18208:	bx	lr
   1820c:	mov	r2, #0
   18210:	mov	ip, r2
   18214:	b	181dc <fts_children@@Base+0x8dc>
   18218:	push	{r4, r5, r6, r7, r8, lr}
   1821c:	sub	sp, sp, #8
   18220:	mov	r4, r1
   18224:	mov	r5, r0
   18228:	bl	180ec <fts_children@@Base+0x7ec>
   1822c:	mov	r8, r0
   18230:	mov	r0, r5
   18234:	bl	180dc <fts_children@@Base+0x7dc>
   18238:	mov	r6, r0
   1823c:	mov	r0, r5
   18240:	bl	180e4 <fts_children@@Base+0x7e4>
   18244:	mov	r7, r0
   18248:	mov	r0, r5
   1824c:	bl	180f4 <fts_children@@Base+0x7f4>
   18250:	ldr	r2, [pc, #144]	; 182e8 <fts_children@@Base+0x9e8>
   18254:	mov	r3, r8
   18258:	mov	r1, #1
   1825c:	add	r2, pc, r2
   18260:	mov	r5, r0
   18264:	mov	r0, r4
   18268:	bl	115c0 <__fprintf_chk@plt>
   1826c:	ldr	r2, [pc, #120]	; 182ec <fts_children@@Base+0x9ec>
   18270:	mov	r3, r6
   18274:	mov	r0, r4
   18278:	mov	r1, #1
   1827c:	add	r2, pc, r2
   18280:	bl	115c0 <__fprintf_chk@plt>
   18284:	vmov	s15, r7
   18288:	vldr	d5, [pc, #80]	; 182e0 <fts_children@@Base+0x9e0>
   1828c:	ldr	r2, [pc, #92]	; 182f0 <fts_children@@Base+0x9f0>
   18290:	vcvt.f64.u32	d4, s15
   18294:	mov	r3, r7
   18298:	vmov	s15, r6
   1829c:	mov	r0, r4
   182a0:	mov	r1, #1
   182a4:	add	r2, pc, r2
   182a8:	vmul.f64	d5, d4, d5
   182ac:	vcvt.f64.u32	d6, s15
   182b0:	vdiv.f64	d7, d5, d6
   182b4:	vstr	d7, [sp]
   182b8:	bl	115c0 <__fprintf_chk@plt>
   182bc:	ldr	r2, [pc, #48]	; 182f4 <fts_children@@Base+0x9f4>
   182c0:	mov	r0, r4
   182c4:	mov	r3, r5
   182c8:	mov	r1, #1
   182cc:	add	r2, pc, r2
   182d0:	add	sp, sp, #8
   182d4:	pop	{r4, r5, r6, r7, r8, lr}
   182d8:	b	115c0 <__fprintf_chk@plt>
   182dc:	nop	{0}
   182e0:	andeq	r0, r0, r0
   182e4:	subsmi	r0, r9, r0
   182e8:	andeq	r3, r0, ip, lsl r2
   182ec:	andeq	r3, r0, r4, lsl r2
   182f0:	andeq	r3, r0, r4, lsl #4
   182f4:	andeq	r3, r0, r0, lsl #4
   182f8:	push	{r4, r5, r6, lr}
   182fc:	mov	r6, r0
   18300:	mov	r5, r1
   18304:	bl	17d88 <fts_children@@Base+0x488>
   18308:	ldr	r3, [r0]
   1830c:	mov	r4, r0
   18310:	cmp	r3, #0
   18314:	bne	18320 <fts_children@@Base+0xa20>
   18318:	b	1834c <fts_children@@Base+0xa4c>
   1831c:	ldr	r3, [r4]
   18320:	cmp	r5, r3
   18324:	mov	r1, r3
   18328:	mov	r0, r5
   1832c:	beq	18358 <fts_children@@Base+0xa58>
   18330:	ldr	r3, [r6, #28]
   18334:	blx	r3
   18338:	cmp	r0, #0
   1833c:	bne	18354 <fts_children@@Base+0xa54>
   18340:	ldr	r4, [r4, #4]
   18344:	cmp	r4, #0
   18348:	bne	1831c <fts_children@@Base+0xa1c>
   1834c:	mov	r0, #0
   18350:	pop	{r4, r5, r6, pc}
   18354:	ldr	r3, [r4]
   18358:	mov	r0, r3
   1835c:	pop	{r4, r5, r6, pc}
   18360:	push	{r3, lr}
   18364:	ldr	r3, [r0, #16]
   18368:	cmp	r3, #0
   1836c:	beq	183ac <fts_children@@Base+0xaac>
   18370:	ldr	r3, [r0]
   18374:	ldr	r2, [r0, #4]
   18378:	cmp	r3, r2
   1837c:	bcs	183a8 <fts_children@@Base+0xaa8>
   18380:	ldr	r0, [r3]
   18384:	cmp	r0, #0
   18388:	beq	1839c <fts_children@@Base+0xa9c>
   1838c:	b	183b4 <fts_children@@Base+0xab4>
   18390:	ldr	r0, [r3]
   18394:	cmp	r0, #0
   18398:	popne	{r3, pc}
   1839c:	add	r3, r3, #8
   183a0:	cmp	r3, r2
   183a4:	bcc	18390 <fts_children@@Base+0xa90>
   183a8:	bl	11680 <abort@plt>
   183ac:	mov	r0, r3
   183b0:	pop	{r3, pc}
   183b4:	pop	{r3, pc}
   183b8:	push	{r3, r4, r5, lr}
   183bc:	mov	r5, r0
   183c0:	mov	r4, r1
   183c4:	bl	17d88 <fts_children@@Base+0x488>
   183c8:	mov	r2, r0
   183cc:	mov	r3, r0
   183d0:	b	183dc <fts_children@@Base+0xadc>
   183d4:	cmp	r3, #0
   183d8:	beq	183f4 <fts_children@@Base+0xaf4>
   183dc:	ldr	ip, [r3]
   183e0:	ldr	r3, [r3, #4]
   183e4:	cmp	ip, r4
   183e8:	bne	183d4 <fts_children@@Base+0xad4>
   183ec:	cmp	r3, #0
   183f0:	bne	1841c <fts_children@@Base+0xb1c>
   183f4:	ldr	r3, [r5, #4]
   183f8:	b	18408 <fts_children@@Base+0xb08>
   183fc:	ldr	r0, [r2]
   18400:	cmp	r0, #0
   18404:	popne	{r3, r4, r5, pc}
   18408:	add	r2, r2, #8
   1840c:	cmp	r2, r3
   18410:	bcc	183fc <fts_children@@Base+0xafc>
   18414:	mov	r0, #0
   18418:	pop	{r3, r4, r5, pc}
   1841c:	ldr	r0, [r3]
   18420:	pop	{r3, r4, r5, pc}
   18424:	push	{r4, r5, r6, r7}
   18428:	mov	r6, r0
   1842c:	ldm	r0, {r5, ip}
   18430:	cmp	ip, r5
   18434:	bls	184b8 <fts_children@@Base+0xbb8>
   18438:	add	r5, r5, #8
   1843c:	mov	r0, #0
   18440:	ldr	r3, [r5, #-8]
   18444:	mov	r7, r5
   18448:	cmp	r3, #0
   1844c:	beq	18498 <fts_children@@Base+0xb98>
   18450:	cmp	r2, r0
   18454:	bls	184a4 <fts_children@@Base+0xba4>
   18458:	str	r3, [r1, r0, lsl #2]
   1845c:	add	r4, r0, #1
   18460:	ldr	r3, [r5, #-4]
   18464:	add	ip, r1, r0, lsl #2
   18468:	cmp	r3, #0
   1846c:	beq	184ac <fts_children@@Base+0xbac>
   18470:	mov	r0, r4
   18474:	cmp	r0, r2
   18478:	beq	184a4 <fts_children@@Base+0xba4>
   1847c:	ldr	r4, [r3]
   18480:	add	r0, r0, #1
   18484:	str	r4, [ip, #4]!
   18488:	ldr	r3, [r3, #4]
   1848c:	cmp	r3, #0
   18490:	bne	18474 <fts_children@@Base+0xb74>
   18494:	ldr	ip, [r6, #4]
   18498:	cmp	ip, r7
   1849c:	add	r5, r5, #8
   184a0:	bhi	18440 <fts_children@@Base+0xb40>
   184a4:	pop	{r4, r5, r6, r7}
   184a8:	bx	lr
   184ac:	ldr	ip, [r6, #4]
   184b0:	mov	r0, r4
   184b4:	b	18498 <fts_children@@Base+0xb98>
   184b8:	mov	r0, #0
   184bc:	b	184a4 <fts_children@@Base+0xba4>
   184c0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   184c4:	mov	r7, r2
   184c8:	ldr	r8, [r0]
   184cc:	mov	r9, r0
   184d0:	ldr	r2, [r0, #4]
   184d4:	mov	r6, r1
   184d8:	mov	r5, #0
   184dc:	cmp	r2, r8
   184e0:	bls	18530 <fts_children@@Base+0xc30>
   184e4:	ldr	r3, [r8]
   184e8:	cmp	r3, #0
   184ec:	beq	18524 <fts_children@@Base+0xc24>
   184f0:	mov	r0, r3
   184f4:	mov	r4, r8
   184f8:	b	18500 <fts_children@@Base+0xc00>
   184fc:	ldr	r0, [r4]
   18500:	mov	r1, r7
   18504:	blx	r6
   18508:	cmp	r0, #0
   1850c:	beq	18530 <fts_children@@Base+0xc30>
   18510:	ldr	r4, [r4, #4]
   18514:	add	r5, r5, #1
   18518:	cmp	r4, #0
   1851c:	bne	184fc <fts_children@@Base+0xbfc>
   18520:	ldr	r2, [r9, #4]
   18524:	add	r8, r8, #8
   18528:	cmp	r2, r8
   1852c:	bhi	184e4 <fts_children@@Base+0xbe4>
   18530:	mov	r0, r5
   18534:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18538:	push	{r3, r4, r5, lr}
   1853c:	mov	r5, r1
   18540:	ldrb	r3, [r0]
   18544:	cmp	r3, #0
   18548:	beq	18578 <fts_children@@Base+0xc78>
   1854c:	mov	r4, r0
   18550:	mov	r1, #0
   18554:	rsb	r0, r1, r1, lsl #5
   18558:	mov	r1, r5
   1855c:	add	r0, r3, r0
   18560:	bl	19824 <fts_children@@Base+0x1f24>
   18564:	ldrb	r3, [r4, #1]!
   18568:	cmp	r3, #0
   1856c:	bne	18554 <fts_children@@Base+0xc54>
   18570:	mov	r0, r1
   18574:	pop	{r3, r4, r5, pc}
   18578:	mov	r1, r3
   1857c:	b	18570 <fts_children@@Base+0xc70>
   18580:	push	{r4}		; (str r4, [sp, #-4]!)
   18584:	mov	ip, r0
   18588:	ldr	r4, [pc, #24]	; 185a8 <fts_children@@Base+0xca8>
   1858c:	add	r4, pc, r4
   18590:	ldm	r4!, {r0, r1, r2, r3}
   18594:	ldr	r4, [r4]
   18598:	stmia	ip!, {r0, r1, r2, r3}
   1859c:	str	r4, [ip]
   185a0:	pop	{r4}		; (ldr r4, [sp], #4)
   185a4:	bx	lr
   185a8:	ldrdeq	r2, [r0], -r8
   185ac:	push	{r4, r5, r6, r7, r8, lr}
   185b0:	subs	r8, r2, #0
   185b4:	mov	r7, r0
   185b8:	mov	r5, r1
   185bc:	mov	r6, r3
   185c0:	beq	186b4 <fts_children@@Base+0xdb4>
   185c4:	cmp	r6, #0
   185c8:	beq	186a8 <fts_children@@Base+0xda8>
   185cc:	mov	r0, #40	; 0x28
   185d0:	bl	114d0 <malloc@plt>
   185d4:	subs	r4, r0, #0
   185d8:	beq	186cc <fts_children@@Base+0xdcc>
   185dc:	cmp	r5, #0
   185e0:	beq	186c0 <fts_children@@Base+0xdc0>
   185e4:	mov	r0, r4
   185e8:	str	r5, [r0, #20]!
   185ec:	bl	17eb8 <fts_children@@Base+0x5b8>
   185f0:	cmp	r0, #0
   185f4:	beq	18698 <fts_children@@Base+0xd98>
   185f8:	ldrb	r3, [r5, #16]
   185fc:	vldr	s15, [r5, #8]
   18600:	cmp	r3, #0
   18604:	bne	1862c <fts_children@@Base+0xd2c>
   18608:	vmov	s14, r7
   1860c:	vcvt.f32.u32	s13, s14
   18610:	vldr	s14, [pc, #188]	; 186d4 <fts_children@@Base+0xdd4>
   18614:	vdiv.f32	s15, s13, s15
   18618:	vcmpe.f32	s15, s14
   1861c:	vmrs	APSR_nzcv, fpscr
   18620:	bge	18690 <fts_children@@Base+0xd90>
   18624:	vcvt.u32.f32	s15, s15
   18628:	vmov	r7, s15
   1862c:	mov	r0, r7
   18630:	bl	17cb8 <fts_children@@Base+0x3b8>
   18634:	cmn	r0, #-1073741823	; 0xc0000001
   18638:	mov	r5, r0
   1863c:	bhi	18690 <fts_children@@Base+0xd90>
   18640:	cmp	r0, #0
   18644:	str	r0, [r4, #8]
   18648:	beq	18698 <fts_children@@Base+0xd98>
   1864c:	mov	r1, #8
   18650:	bl	1135c <calloc@plt>
   18654:	cmp	r0, #0
   18658:	str	r0, [r4]
   1865c:	beq	18698 <fts_children@@Base+0xd98>
   18660:	ldr	r3, [sp, #24]
   18664:	mov	r2, #0
   18668:	add	r5, r0, r5, lsl #3
   1866c:	str	r8, [r4, #24]
   18670:	str	r5, [r4, #4]
   18674:	mov	r0, r4
   18678:	str	r6, [r4, #28]
   1867c:	str	r3, [r4, #32]
   18680:	str	r2, [r4, #12]
   18684:	str	r2, [r4, #16]
   18688:	str	r2, [r4, #36]	; 0x24
   1868c:	pop	{r4, r5, r6, r7, r8, pc}
   18690:	mov	r3, #0
   18694:	str	r3, [r4, #8]
   18698:	mov	r0, r4
   1869c:	bl	113bc <free@plt>
   186a0:	mov	r0, #0
   186a4:	pop	{r4, r5, r6, r7, r8, pc}
   186a8:	ldr	r6, [pc, #40]	; 186d8 <fts_children@@Base+0xdd8>
   186ac:	add	r6, pc, r6
   186b0:	b	185cc <fts_children@@Base+0xccc>
   186b4:	ldr	r8, [pc, #32]	; 186dc <fts_children@@Base+0xddc>
   186b8:	add	r8, pc, r8
   186bc:	b	185c4 <fts_children@@Base+0xcc4>
   186c0:	ldr	r5, [pc, #24]	; 186e0 <fts_children@@Base+0xde0>
   186c4:	add	r5, pc, r5
   186c8:	b	185e4 <fts_children@@Base+0xce4>
   186cc:	mov	r0, r4
   186d0:	pop	{r4, r5, r6, r7, r8, pc}
   186d4:	svcmi	0x00800000
   186d8:			; <UNDEFINED> instruction: 0xfffff6c4
   186dc:			; <UNDEFINED> instruction: 0xfffff6a4
   186e0:	andeq	r2, r0, r0, lsr #27
   186e4:	push	{r4, r5, r6, r7, r8, lr}
   186e8:	mov	r5, r0
   186ec:	ldr	r7, [r0]
   186f0:	ldr	r3, [r0, #4]
   186f4:	cmp	r7, r3
   186f8:	addcc	r7, r7, #8
   186fc:	movcc	r6, #0
   18700:	bcs	18780 <fts_children@@Base+0xe80>
   18704:	ldr	r2, [r7, #-8]
   18708:	mov	r8, r7
   1870c:	cmp	r2, #0
   18710:	beq	18774 <fts_children@@Base+0xe74>
   18714:	ldr	r4, [r7, #-4]
   18718:	cmp	r4, #0
   1871c:	beq	18754 <fts_children@@Base+0xe54>
   18720:	ldr	r3, [r5, #32]
   18724:	cmp	r3, #0
   18728:	beq	18734 <fts_children@@Base+0xe34>
   1872c:	ldr	r0, [r4]
   18730:	blx	r3
   18734:	ldr	r3, [r4, #4]
   18738:	str	r6, [r4]
   1873c:	ldr	r2, [r5, #36]	; 0x24
   18740:	cmp	r3, #0
   18744:	str	r2, [r4, #4]
   18748:	str	r4, [r5, #36]	; 0x24
   1874c:	mov	r4, r3
   18750:	bne	18720 <fts_children@@Base+0xe20>
   18754:	ldr	r3, [r5, #32]
   18758:	cmp	r3, #0
   1875c:	beq	18768 <fts_children@@Base+0xe68>
   18760:	ldr	r0, [r7, #-8]
   18764:	blx	r3
   18768:	str	r6, [r7, #-8]
   1876c:	str	r6, [r7, #-4]
   18770:	ldr	r3, [r5, #4]
   18774:	cmp	r3, r8
   18778:	add	r7, r7, #8
   1877c:	bhi	18704 <fts_children@@Base+0xe04>
   18780:	mov	r3, #0
   18784:	str	r3, [r5, #12]
   18788:	str	r3, [r5, #16]
   1878c:	pop	{r4, r5, r6, r7, r8, pc}
   18790:	push	{r3, r4, r5, r6, r7, lr}
   18794:	mov	r5, r0
   18798:	ldr	r3, [r0, #32]
   1879c:	cmp	r3, #0
   187a0:	beq	187b0 <fts_children@@Base+0xeb0>
   187a4:	ldr	r3, [r0, #16]
   187a8:	cmp	r3, #0
   187ac:	bne	1882c <fts_children@@Base+0xf2c>
   187b0:	ldr	r3, [r5, #4]
   187b4:	ldr	r6, [r5]
   187b8:	cmp	r6, r3
   187bc:	bcs	187f8 <fts_children@@Base+0xef8>
   187c0:	add	r6, r6, #8
   187c4:	ldr	r0, [r6, #-4]
   187c8:	mov	r7, r6
   187cc:	cmp	r0, #0
   187d0:	beq	187ec <fts_children@@Base+0xeec>
   187d4:	ldr	r4, [r0, #4]
   187d8:	bl	113bc <free@plt>
   187dc:	cmp	r4, #0
   187e0:	mov	r0, r4
   187e4:	bne	187d4 <fts_children@@Base+0xed4>
   187e8:	ldr	r3, [r5, #4]
   187ec:	cmp	r7, r3
   187f0:	add	r6, r6, #8
   187f4:	bcc	187c4 <fts_children@@Base+0xec4>
   187f8:	ldr	r0, [r5, #36]	; 0x24
   187fc:	cmp	r0, #0
   18800:	beq	18818 <fts_children@@Base+0xf18>
   18804:	ldr	r4, [r0, #4]
   18808:	bl	113bc <free@plt>
   1880c:	cmp	r4, #0
   18810:	mov	r0, r4
   18814:	bne	18804 <fts_children@@Base+0xf04>
   18818:	ldr	r0, [r5]
   1881c:	bl	113bc <free@plt>
   18820:	mov	r0, r5
   18824:	pop	{r3, r4, r5, r6, r7, lr}
   18828:	b	113bc <free@plt>
   1882c:	ldr	r6, [r0]
   18830:	ldr	r3, [r0, #4]
   18834:	cmp	r6, r3
   18838:	bcs	187f8 <fts_children@@Base+0xef8>
   1883c:	ldr	r0, [r6]
   18840:	cmp	r0, #0
   18844:	movne	r4, r6
   18848:	bne	18854 <fts_children@@Base+0xf54>
   1884c:	b	1886c <fts_children@@Base+0xf6c>
   18850:	ldr	r0, [r4]
   18854:	ldr	r3, [r5, #32]
   18858:	blx	r3
   1885c:	ldr	r4, [r4, #4]
   18860:	cmp	r4, #0
   18864:	bne	18850 <fts_children@@Base+0xf50>
   18868:	ldr	r3, [r5, #4]
   1886c:	add	r6, r6, #8
   18870:	cmp	r3, r6
   18874:	bhi	1883c <fts_children@@Base+0xf3c>
   18878:	b	187b4 <fts_children@@Base+0xeb4>
   1887c:	ldr	r3, [pc, #392]	; 18a0c <fts_children@@Base+0x110c>
   18880:	ldr	r2, [pc, #392]	; 18a10 <fts_children@@Base+0x1110>
   18884:	add	r3, pc, r3
   18888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1888c:	sub	sp, sp, #52	; 0x34
   18890:	ldr	r5, [r0, #20]
   18894:	mov	r4, r0
   18898:	ldr	r6, [r3, r2]
   1889c:	vldr	s15, [r5, #8]
   188a0:	ldrb	r2, [r5, #16]
   188a4:	ldr	r3, [r6]
   188a8:	cmp	r2, #0
   188ac:	str	r3, [sp, #44]	; 0x2c
   188b0:	bne	188d8 <fts_children@@Base+0xfd8>
   188b4:	vmov	s14, r1
   188b8:	vcvt.f32.u32	s13, s14
   188bc:	vldr	s14, [pc, #324]	; 18a08 <fts_children@@Base+0x1108>
   188c0:	vdiv.f32	s15, s13, s15
   188c4:	vcmpe.f32	s15, s14
   188c8:	vmrs	APSR_nzcv, fpscr
   188cc:	bge	189d0 <fts_children@@Base+0x10d0>
   188d0:	vcvt.u32.f32	s15, s15
   188d4:	vmov	r1, s15
   188d8:	mov	r0, r1
   188dc:	bl	17cb8 <fts_children@@Base+0x3b8>
   188e0:	sub	r3, r0, #1
   188e4:	mov	r7, r0
   188e8:	cmn	r3, #-1073741822	; 0xc0000002
   188ec:	bhi	189d0 <fts_children@@Base+0x10d0>
   188f0:	ldr	r3, [r4, #8]
   188f4:	cmp	r3, r0
   188f8:	beq	189b0 <fts_children@@Base+0x10b0>
   188fc:	mov	r1, #8
   18900:	bl	1135c <calloc@plt>
   18904:	cmp	r0, #0
   18908:	mov	r3, r0
   1890c:	str	r0, [sp, #4]
   18910:	beq	189d0 <fts_children@@Base+0x10d0>
   18914:	ldr	fp, [r4, #24]
   18918:	add	r8, sp, #4
   1891c:	ldr	sl, [r4, #28]
   18920:	mov	ip, #0
   18924:	ldr	r9, [r4, #32]
   18928:	mov	r0, r8
   1892c:	ldr	lr, [r4, #36]	; 0x24
   18930:	mov	r2, ip
   18934:	mov	r1, r4
   18938:	add	r3, r3, r7, lsl #3
   1893c:	str	r5, [sp, #24]
   18940:	str	r7, [sp, #12]
   18944:	str	r3, [sp, #8]
   18948:	str	fp, [sp, #28]
   1894c:	str	sl, [sp, #32]
   18950:	str	r9, [sp, #36]	; 0x24
   18954:	str	lr, [sp, #40]	; 0x28
   18958:	str	ip, [sp, #16]
   1895c:	str	ip, [sp, #20]
   18960:	bl	17f78 <fts_children@@Base+0x678>
   18964:	subs	r5, r0, #0
   18968:	bne	189d8 <fts_children@@Base+0x10d8>
   1896c:	ldr	r3, [sp, #40]	; 0x28
   18970:	mov	r0, r4
   18974:	mov	r1, r8
   18978:	mov	r2, #1
   1897c:	str	r3, [r4, #36]	; 0x24
   18980:	bl	17f78 <fts_children@@Base+0x678>
   18984:	cmp	r0, #0
   18988:	beq	18a04 <fts_children@@Base+0x1104>
   1898c:	mov	r0, r4
   18990:	mov	r1, r8
   18994:	mov	r2, r5
   18998:	bl	17f78 <fts_children@@Base+0x678>
   1899c:	cmp	r0, #0
   189a0:	beq	18a04 <fts_children@@Base+0x1104>
   189a4:	ldr	r0, [sp, #4]
   189a8:	bl	113bc <free@plt>
   189ac:	b	189b4 <fts_children@@Base+0x10b4>
   189b0:	mov	r5, #1
   189b4:	ldr	r1, [sp, #44]	; 0x2c
   189b8:	mov	r0, r5
   189bc:	ldr	r3, [r6]
   189c0:	cmp	r1, r3
   189c4:	bne	18a00 <fts_children@@Base+0x1100>
   189c8:	add	sp, sp, #52	; 0x34
   189cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189d0:	mov	r5, #0
   189d4:	b	189b4 <fts_children@@Base+0x10b4>
   189d8:	ldr	r0, [r4]
   189dc:	bl	113bc <free@plt>
   189e0:	add	r0, sp, #8
   189e4:	ldr	ip, [sp, #4]
   189e8:	ldm	r0, {r0, r1, r2}
   189ec:	ldr	r3, [sp, #40]	; 0x28
   189f0:	str	ip, [r4]
   189f4:	stmib	r4, {r0, r1, r2}
   189f8:	str	r3, [r4, #36]	; 0x24
   189fc:	b	189b4 <fts_children@@Base+0x10b4>
   18a00:	bl	1141c <__stack_chk_fail@plt>
   18a04:	bl	11680 <abort@plt>
   18a08:	svcmi	0x00800000
   18a0c:	andeq	r3, r1, r4, ror r7
   18a10:	andeq	r0, r0, r4, asr #2
   18a14:	ldr	r3, [pc, #428]	; 18bc8 <fts_children@@Base+0x12c8>
   18a18:	ldr	ip, [pc, #428]	; 18bcc <fts_children@@Base+0x12cc>
   18a1c:	add	r3, pc, r3
   18a20:	push	{r4, r5, r6, r7, r8, lr}
   18a24:	subs	r8, r1, #0
   18a28:	ldr	r4, [r3, ip]
   18a2c:	sub	sp, sp, #8
   18a30:	mov	r5, r2
   18a34:	mov	r6, r0
   18a38:	ldr	r3, [r4]
   18a3c:	str	r3, [sp, #4]
   18a40:	beq	18b80 <fts_children@@Base+0x1280>
   18a44:	mov	r3, #0
   18a48:	mov	r2, sp
   18a4c:	bl	17dbc <fts_children@@Base+0x4bc>
   18a50:	cmp	r0, #0
   18a54:	beq	18a80 <fts_children@@Base+0x1180>
   18a58:	cmp	r5, #0
   18a5c:	moveq	r0, r5
   18a60:	strne	r0, [r5]
   18a64:	movne	r0, #0
   18a68:	ldr	r2, [sp, #4]
   18a6c:	ldr	r3, [r4]
   18a70:	cmp	r2, r3
   18a74:	bne	18bc0 <fts_children@@Base+0x12c0>
   18a78:	add	sp, sp, #8
   18a7c:	pop	{r4, r5, r6, r7, r8, pc}
   18a80:	vldr	s11, [r6, #8]
   18a84:	vcvt.f32.u32	s14, s11
   18a88:	ldr	r3, [r6, #20]
   18a8c:	vldr	s15, [r3, #8]
   18a90:	vldr	s13, [r6, #12]
   18a94:	vmul.f32	s15, s14, s15
   18a98:	vcvt.f32.u32	s14, s13
   18a9c:	vcmpe.f32	s14, s15
   18aa0:	vmrs	APSR_nzcv, fpscr
   18aa4:	bgt	18af4 <fts_children@@Base+0x11f4>
   18aa8:	ldr	r3, [sp]
   18aac:	ldr	r2, [r3]
   18ab0:	cmp	r2, #0
   18ab4:	beq	18b84 <fts_children@@Base+0x1284>
   18ab8:	ldr	r3, [r6, #36]	; 0x24
   18abc:	cmp	r3, #0
   18ac0:	beq	18ba8 <fts_children@@Base+0x12a8>
   18ac4:	ldr	r2, [r3, #4]
   18ac8:	str	r2, [r6, #36]	; 0x24
   18acc:	str	r8, [r3]
   18ad0:	mov	r0, #1
   18ad4:	ldr	r2, [sp]
   18ad8:	ldr	r1, [r2, #4]
   18adc:	str	r1, [r3, #4]
   18ae0:	str	r3, [r2, #4]
   18ae4:	ldr	r3, [r6, #16]
   18ae8:	add	r3, r3, r0
   18aec:	str	r3, [r6, #16]
   18af0:	b	18a68 <fts_children@@Base+0x1168>
   18af4:	add	r0, r6, #20
   18af8:	bl	17eb8 <fts_children@@Base+0x5b8>
   18afc:	vldr	s11, [r6, #8]
   18b00:	vcvt.f32.u32	s15, s11
   18b04:	ldr	r3, [r6, #20]
   18b08:	vldr	s14, [r3, #8]
   18b0c:	vldr	s11, [r6, #12]
   18b10:	vmul.f32	s13, s14, s15
   18b14:	vcvt.f32.u32	s12, s11
   18b18:	vcmpe.f32	s12, s13
   18b1c:	vmrs	APSR_nzcv, fpscr
   18b20:	ble	18aa8 <fts_children@@Base+0x11a8>
   18b24:	ldrb	r2, [r3, #16]
   18b28:	cmp	r2, #0
   18b2c:	vldreq	s13, [r3, #12]
   18b30:	vldrne	s14, [r3, #12]
   18b34:	vmuleq.f32	s15, s15, s13
   18b38:	vmul.f32	s15, s14, s15
   18b3c:	vldr	s14, [pc, #128]	; 18bc4 <fts_children@@Base+0x12c4>
   18b40:	vcmpe.f32	s15, s14
   18b44:	vmrs	APSR_nzcv, fpscr
   18b48:	bge	18bb8 <fts_children@@Base+0x12b8>
   18b4c:	vcvt.u32.f32	s15, s15
   18b50:	mov	r0, r6
   18b54:	vmov	r1, s15
   18b58:	bl	1887c <fts_children@@Base+0xf7c>
   18b5c:	cmp	r0, #0
   18b60:	beq	18bb8 <fts_children@@Base+0x12b8>
   18b64:	mov	r2, sp
   18b68:	mov	r0, r6
   18b6c:	mov	r1, r8
   18b70:	mov	r3, #0
   18b74:	bl	17dbc <fts_children@@Base+0x4bc>
   18b78:	cmp	r0, #0
   18b7c:	beq	18aa8 <fts_children@@Base+0x11a8>
   18b80:	bl	11680 <abort@plt>
   18b84:	str	r8, [r3]
   18b88:	mov	r0, #1
   18b8c:	ldr	r2, [r6, #16]
   18b90:	ldr	r3, [r6, #12]
   18b94:	add	r2, r2, r0
   18b98:	str	r2, [r6, #16]
   18b9c:	add	r3, r3, r0
   18ba0:	str	r3, [r6, #12]
   18ba4:	b	18a68 <fts_children@@Base+0x1168>
   18ba8:	mov	r0, #8
   18bac:	bl	114d0 <malloc@plt>
   18bb0:	subs	r3, r0, #0
   18bb4:	bne	18acc <fts_children@@Base+0x11cc>
   18bb8:	mvn	r0, #0
   18bbc:	b	18a68 <fts_children@@Base+0x1168>
   18bc0:	bl	1141c <__stack_chk_fail@plt>
   18bc4:	svcmi	0x00800000
   18bc8:	ldrdeq	r3, [r1], -ip
   18bcc:	andeq	r0, r0, r4, asr #2
   18bd0:	b	18a14 <fts_children@@Base+0x1114>
   18bd4:	ldr	r3, [pc, #100]	; 18c40 <fts_children@@Base+0x1340>
   18bd8:	ldr	ip, [pc, #100]	; 18c44 <fts_children@@Base+0x1344>
   18bdc:	add	r3, pc, r3
   18be0:	push	{r4, r5, lr}
   18be4:	sub	sp, sp, #12
   18be8:	ldr	r4, [r3, ip]
   18bec:	mov	r5, r1
   18bf0:	mov	r2, sp
   18bf4:	ldr	r3, [r4]
   18bf8:	str	r3, [sp, #4]
   18bfc:	bl	18a14 <fts_children@@Base+0x1114>
   18c00:	cmn	r0, #1
   18c04:	beq	18c34 <fts_children@@Base+0x1334>
   18c08:	cmp	r0, #0
   18c0c:	movne	r0, r5
   18c10:	beq	18c2c <fts_children@@Base+0x132c>
   18c14:	ldr	r2, [sp, #4]
   18c18:	ldr	r3, [r4]
   18c1c:	cmp	r2, r3
   18c20:	bne	18c3c <fts_children@@Base+0x133c>
   18c24:	add	sp, sp, #12
   18c28:	pop	{r4, r5, pc}
   18c2c:	ldr	r0, [sp]
   18c30:	b	18c14 <fts_children@@Base+0x1314>
   18c34:	mov	r0, #0
   18c38:	b	18c14 <fts_children@@Base+0x1314>
   18c3c:	bl	1141c <__stack_chk_fail@plt>
   18c40:	andeq	r3, r1, ip, lsl r4
   18c44:	andeq	r0, r0, r4, asr #2
   18c48:	ldr	ip, [pc, #304]	; 18d80 <fts_children@@Base+0x1480>
   18c4c:	mov	r3, #1
   18c50:	push	{r4, r5, r6, r7, lr}
   18c54:	add	ip, pc, ip
   18c58:	ldr	lr, [pc, #292]	; 18d84 <fts_children@@Base+0x1484>
   18c5c:	sub	sp, sp, #12
   18c60:	mov	r4, r0
   18c64:	mov	r2, sp
   18c68:	ldr	r5, [ip, lr]
   18c6c:	ldr	ip, [r5]
   18c70:	str	ip, [sp, #4]
   18c74:	bl	17dbc <fts_children@@Base+0x4bc>
   18c78:	subs	r6, r0, #0
   18c7c:	beq	18c9c <fts_children@@Base+0x139c>
   18c80:	ldr	r3, [sp]
   18c84:	ldr	r2, [r4, #16]
   18c88:	sub	r2, r2, #1
   18c8c:	str	r2, [r4, #16]
   18c90:	ldr	r3, [r3]
   18c94:	cmp	r3, #0
   18c98:	beq	18cb8 <fts_children@@Base+0x13b8>
   18c9c:	ldr	r2, [sp, #4]
   18ca0:	mov	r0, r6
   18ca4:	ldr	r3, [r5]
   18ca8:	cmp	r2, r3
   18cac:	bne	18d7c <fts_children@@Base+0x147c>
   18cb0:	add	sp, sp, #12
   18cb4:	pop	{r4, r5, r6, r7, pc}
   18cb8:	vldr	s12, [r4, #8]
   18cbc:	vcvt.f32.u32	s14, s12
   18cc0:	ldr	r3, [r4, #12]
   18cc4:	ldr	r2, [r4, #20]
   18cc8:	sub	r3, r3, #1
   18ccc:	str	r3, [r4, #12]
   18cd0:	vldr	s15, [r2]
   18cd4:	vmov	s13, r3
   18cd8:	vmul.f32	s15, s14, s15
   18cdc:	vcvt.f32.u32	s14, s13
   18ce0:	vcmpe.f32	s14, s15
   18ce4:	vmrs	APSR_nzcv, fpscr
   18ce8:	bpl	18c9c <fts_children@@Base+0x139c>
   18cec:	add	r0, r4, #20
   18cf0:	bl	17eb8 <fts_children@@Base+0x5b8>
   18cf4:	vldr	s12, [r4, #8]
   18cf8:	vcvt.f32.u32	s15, s12
   18cfc:	ldr	r3, [r4, #20]
   18d00:	vldr	s14, [r3]
   18d04:	vldr	s12, [r4, #12]
   18d08:	vmul.f32	s14, s15, s14
   18d0c:	vcvt.f32.u32	s13, s12
   18d10:	vcmpe.f32	s13, s14
   18d14:	vmrs	APSR_nzcv, fpscr
   18d18:	bpl	18c9c <fts_children@@Base+0x139c>
   18d1c:	vldr	s14, [r3, #4]
   18d20:	vmul.f32	s15, s15, s14
   18d24:	ldrb	r2, [r3, #16]
   18d28:	mov	r0, r4
   18d2c:	cmp	r2, #0
   18d30:	vldreq	s14, [r3, #8]
   18d34:	vmuleq.f32	s15, s15, s14
   18d38:	vcvt.u32.f32	s15, s15
   18d3c:	vmov	r1, s15
   18d40:	bl	1887c <fts_children@@Base+0xf7c>
   18d44:	cmp	r0, #0
   18d48:	bne	18c9c <fts_children@@Base+0x139c>
   18d4c:	ldr	r0, [r4, #36]	; 0x24
   18d50:	cmp	r0, #0
   18d54:	bne	18d60 <fts_children@@Base+0x1460>
   18d58:	b	18d70 <fts_children@@Base+0x1470>
   18d5c:	mov	r0, r7
   18d60:	ldr	r7, [r0, #4]
   18d64:	bl	113bc <free@plt>
   18d68:	cmp	r7, #0
   18d6c:	bne	18d5c <fts_children@@Base+0x145c>
   18d70:	mov	r3, #0
   18d74:	str	r3, [r4, #36]	; 0x24
   18d78:	b	18c9c <fts_children@@Base+0x139c>
   18d7c:	bl	1141c <__stack_chk_fail@plt>
   18d80:	andeq	r3, r1, r4, lsr #7
   18d84:	andeq	r0, r0, r4, asr #2
   18d88:	mov	r3, #0
   18d8c:	mov	r2, #1
   18d90:	str	r1, [r0]
   18d94:	str	r1, [r0, #4]
   18d98:	str	r1, [r0, #8]
   18d9c:	str	r1, [r0, #12]
   18da0:	str	r1, [r0, #16]
   18da4:	strb	r2, [r0, #28]
   18da8:	str	r3, [r0, #20]
   18dac:	str	r3, [r0, #24]
   18db0:	bx	lr
   18db4:	ldrb	r0, [r0, #28]
   18db8:	bx	lr
   18dbc:	ldrb	ip, [r0, #28]
   18dc0:	mov	r3, r0
   18dc4:	ldr	r2, [r0, #20]
   18dc8:	eor	ip, ip, #1
   18dcc:	add	r2, ip, r2
   18dd0:	and	r2, r2, #3
   18dd4:	ldr	r0, [r0, r2, lsl #2]
   18dd8:	str	r1, [r3, r2, lsl #2]
   18ddc:	ldr	r1, [r3, #24]
   18de0:	str	r2, [r3, #20]
   18de4:	cmp	r1, r2
   18de8:	mov	r2, #0
   18dec:	addeq	r1, ip, r1
   18df0:	strb	r2, [r3, #28]
   18df4:	andeq	r1, r1, #3
   18df8:	streq	r1, [r3, #24]
   18dfc:	bx	lr
   18e00:	push	{r4, lr}
   18e04:	mov	r4, r0
   18e08:	bl	18db4 <fts_children@@Base+0x14b4>
   18e0c:	cmp	r0, #0
   18e10:	bne	18e44 <fts_children@@Base+0x1544>
   18e14:	ldr	r3, [r4, #20]
   18e18:	ldr	r2, [r4, #16]
   18e1c:	ldr	r0, [r4, r3, lsl #2]
   18e20:	str	r2, [r4, r3, lsl #2]
   18e24:	ldr	r2, [r4, #24]
   18e28:	cmp	r3, r2
   18e2c:	addne	r3, r3, #3
   18e30:	moveq	r3, #1
   18e34:	andne	r3, r3, #3
   18e38:	strbeq	r3, [r4, #28]
   18e3c:	strne	r3, [r4, #20]
   18e40:	pop	{r4, pc}
   18e44:	bl	11680 <abort@plt>
   18e48:	ldr	r3, [pc, #984]	; 19228 <fts_children@@Base+0x1928>
   18e4c:	mov	r0, #14
   18e50:	ldr	r2, [pc, #980]	; 1922c <fts_children@@Base+0x192c>
   18e54:	add	r3, pc, r3
   18e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e5c:	sub	sp, sp, #132	; 0x84
   18e60:	ldr	r6, [r3, r2]
   18e64:	ldr	r3, [r6]
   18e68:	str	r3, [sp, #124]	; 0x7c
   18e6c:	bl	11608 <nl_langinfo@plt>
   18e70:	subs	r5, r0, #0
   18e74:	beq	18f28 <fts_children@@Base+0x1628>
   18e78:	ldr	r3, [pc, #944]	; 19230 <fts_children@@Base+0x1930>
   18e7c:	ldr	r4, [pc, r3]
   18e80:	cmp	r4, #0
   18e84:	beq	18f34 <fts_children@@Base+0x1634>
   18e88:	ldrb	r7, [r4]
   18e8c:	cmp	r7, #0
   18e90:	bne	18ec4 <fts_children@@Base+0x15c4>
   18e94:	b	18efc <fts_children@@Base+0x15fc>
   18e98:	mov	r0, r4
   18e9c:	bl	11530 <strlen@plt>
   18ea0:	add	r0, r0, #1
   18ea4:	add	r7, r4, r0
   18ea8:	mov	r0, r7
   18eac:	bl	11530 <strlen@plt>
   18eb0:	add	r0, r0, #1
   18eb4:	add	r4, r7, r0
   18eb8:	ldrb	r7, [r7, r0]
   18ebc:	cmp	r7, #0
   18ec0:	beq	18efc <fts_children@@Base+0x15fc>
   18ec4:	mov	r0, r5
   18ec8:	mov	r1, r4
   18ecc:	bl	1138c <strcmp@plt>
   18ed0:	cmp	r0, #0
   18ed4:	beq	18eec <fts_children@@Base+0x15ec>
   18ed8:	cmp	r7, #42	; 0x2a
   18edc:	bne	18e98 <fts_children@@Base+0x1598>
   18ee0:	ldrb	r3, [r4, #1]
   18ee4:	cmp	r3, #0
   18ee8:	bne	18e98 <fts_children@@Base+0x1598>
   18eec:	mov	r0, r4
   18ef0:	bl	11530 <strlen@plt>
   18ef4:	add	r0, r0, #1
   18ef8:	add	r5, r4, r0
   18efc:	ldrb	r3, [r5]
   18f00:	cmp	r3, #0
   18f04:	ldreq	r5, [pc, #808]	; 19234 <fts_children@@Base+0x1934>
   18f08:	addeq	r5, pc, r5
   18f0c:	ldr	r2, [sp, #124]	; 0x7c
   18f10:	mov	r0, r5
   18f14:	ldr	r3, [r6]
   18f18:	cmp	r2, r3
   18f1c:	bne	191fc <fts_children@@Base+0x18fc>
   18f20:	add	sp, sp, #132	; 0x84
   18f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f28:	ldr	r5, [pc, #776]	; 19238 <fts_children@@Base+0x1938>
   18f2c:	add	r5, pc, r5
   18f30:	b	18e78 <fts_children@@Base+0x1578>
   18f34:	ldr	r0, [pc, #768]	; 1923c <fts_children@@Base+0x193c>
   18f38:	add	r0, pc, r0
   18f3c:	bl	114c4 <getenv@plt>
   18f40:	subs	r8, r0, #0
   18f44:	beq	191d4 <fts_children@@Base+0x18d4>
   18f48:	ldrb	r3, [r8]
   18f4c:	cmp	r3, #0
   18f50:	beq	19168 <fts_children@@Base+0x1868>
   18f54:	bl	11530 <strlen@plt>
   18f58:	subs	sl, r0, #0
   18f5c:	subne	r3, sl, #1
   18f60:	bne	19178 <fts_children@@Base+0x1878>
   18f64:	mov	r9, #0
   18f68:	mov	fp, r9
   18f6c:	add	r9, sl, r9
   18f70:	add	r0, r9, #14
   18f74:	bl	114d0 <malloc@plt>
   18f78:	subs	r7, r0, #0
   18f7c:	beq	191c8 <fts_children@@Base+0x18c8>
   18f80:	mov	r1, r8
   18f84:	mov	r2, sl
   18f88:	bl	113e0 <memcpy@plt>
   18f8c:	cmp	fp, #0
   18f90:	add	ip, r7, r9
   18f94:	movne	r3, #47	; 0x2f
   18f98:	strbne	r3, [r7, sl]
   18f9c:	ldr	r3, [pc, #668]	; 19240 <fts_children@@Base+0x1940>
   18fa0:	add	r3, pc, r3
   18fa4:	ldm	r3!, {r0, r1, r2}
   18fa8:	ldrh	r3, [r3]
   18fac:	str	r0, [r7, r9]
   18fb0:	mov	r0, r7
   18fb4:	str	r1, [ip, #4]
   18fb8:	mov	r1, #32768	; 0x8000
   18fbc:	strh	r3, [ip, #12]
   18fc0:	str	r2, [ip, #8]
   18fc4:	bl	114b8 <open64@plt>
   18fc8:	subs	r8, r0, #0
   18fcc:	blt	19190 <fts_children@@Base+0x1890>
   18fd0:	ldr	r1, [pc, #620]	; 19244 <fts_children@@Base+0x1944>
   18fd4:	add	r1, pc, r1
   18fd8:	bl	11344 <fdopen@plt>
   18fdc:	subs	fp, r0, #0
   18fe0:	beq	191e8 <fts_children@@Base+0x18e8>
   18fe4:	ldr	r0, [pc, #604]	; 19248 <fts_children@@Base+0x1948>
   18fe8:	add	sl, sp, #20
   18fec:	add	r9, sp, #72	; 0x48
   18ff0:	mov	r8, #0
   18ff4:	add	r0, pc, r0
   18ff8:	str	r0, [sp, #12]
   18ffc:	ldr	r3, [fp, #4]
   19000:	ldr	r2, [fp, #8]
   19004:	cmp	r3, r2
   19008:	bcs	190f4 <fts_children@@Base+0x17f4>
   1900c:	add	r2, r3, #1
   19010:	str	r2, [fp, #4]
   19014:	ldrb	r0, [r3]
   19018:	cmp	r0, #32
   1901c:	beq	18ffc <fts_children@@Base+0x16fc>
   19020:	sub	r3, r0, #9
   19024:	cmp	r3, #1
   19028:	bls	18ffc <fts_children@@Base+0x16fc>
   1902c:	cmp	r0, #35	; 0x23
   19030:	beq	19108 <fts_children@@Base+0x1808>
   19034:	mov	r1, fp
   19038:	bl	11560 <ungetc@plt>
   1903c:	mov	r0, fp
   19040:	ldr	r1, [sp, #12]
   19044:	mov	r2, sl
   19048:	mov	r3, r9
   1904c:	bl	1159c <fscanf@plt>
   19050:	cmp	r0, #1
   19054:	ble	19138 <fts_children@@Base+0x1838>
   19058:	mov	r0, sl
   1905c:	bl	11530 <strlen@plt>
   19060:	str	r0, [sp, #8]
   19064:	mov	r0, r9
   19068:	bl	11530 <strlen@plt>
   1906c:	cmp	r8, #0
   19070:	mov	r2, r0
   19074:	bne	1919c <fts_children@@Base+0x189c>
   19078:	ldr	r3, [sp, #8]
   1907c:	str	r2, [sp]
   19080:	add	r8, r0, r3
   19084:	add	r0, r8, #3
   19088:	add	r8, r8, #2
   1908c:	bl	114d0 <malloc@plt>
   19090:	ldr	r2, [sp]
   19094:	mov	r3, r0
   19098:	cmp	r3, #0
   1909c:	beq	19200 <fts_children@@Base+0x1900>
   190a0:	ldr	r0, [sp, #8]
   190a4:	movw	r1, #65534	; 0xfffe
   190a8:	movt	r1, #65535	; 0xffff
   190ac:	rsb	r2, r2, r8
   190b0:	rsb	r1, r0, r1
   190b4:	stm	sp, {r2, r3}
   190b8:	add	r0, r1, r2
   190bc:	mov	r1, sl
   190c0:	add	r0, r3, r0
   190c4:	mov	r4, r3
   190c8:	bl	11488 <strcpy@plt>
   190cc:	ldr	r2, [sp]
   190d0:	ldr	r3, [sp, #4]
   190d4:	mov	r1, r9
   190d8:	sub	r0, r2, #1
   190dc:	add	r0, r3, r0
   190e0:	bl	11488 <strcpy@plt>
   190e4:	ldr	r3, [fp, #4]
   190e8:	ldr	r2, [fp, #8]
   190ec:	cmp	r3, r2
   190f0:	bcc	1900c <fts_children@@Base+0x170c>
   190f4:	mov	r0, fp
   190f8:	bl	115e4 <__uflow@plt>
   190fc:	cmn	r0, #1
   19100:	beq	19138 <fts_children@@Base+0x1838>
   19104:	b	19018 <fts_children@@Base+0x1718>
   19108:	ldr	r3, [fp, #4]
   1910c:	ldr	r2, [fp, #8]
   19110:	cmp	r3, r2
   19114:	bcs	1921c <fts_children@@Base+0x191c>
   19118:	add	r2, r3, #1
   1911c:	str	r2, [fp, #4]
   19120:	ldrb	r0, [r3]
   19124:	cmp	r0, #10
   19128:	cmnne	r0, #1
   1912c:	bne	19108 <fts_children@@Base+0x1808>
   19130:	cmn	r0, #1
   19134:	bne	18ffc <fts_children@@Base+0x16fc>
   19138:	mov	r0, fp
   1913c:	bl	1931c <fts_children@@Base+0x1a1c>
   19140:	cmp	r8, #0
   19144:	beq	19190 <fts_children@@Base+0x1890>
   19148:	mov	r3, #0
   1914c:	strb	r3, [r4, r8]
   19150:	mov	r0, r7
   19154:	bl	113bc <free@plt>
   19158:	ldr	r3, [pc, #236]	; 1924c <fts_children@@Base+0x194c>
   1915c:	add	r3, pc, r3
   19160:	str	r4, [r3]
   19164:	b	18e88 <fts_children@@Base+0x1588>
   19168:	ldr	r8, [pc, #224]	; 19250 <fts_children@@Base+0x1950>
   1916c:	mov	r3, #7
   19170:	mov	sl, #8
   19174:	add	r8, pc, r8
   19178:	ldrb	r3, [r8, r3]
   1917c:	cmp	r3, #47	; 0x2f
   19180:	movne	r9, #1
   19184:	movne	fp, r9
   19188:	bne	18f6c <fts_children@@Base+0x166c>
   1918c:	b	18f64 <fts_children@@Base+0x1664>
   19190:	ldr	r4, [pc, #188]	; 19254 <fts_children@@Base+0x1954>
   19194:	add	r4, pc, r4
   19198:	b	19150 <fts_children@@Base+0x1850>
   1919c:	ldr	r0, [sp, #8]
   191a0:	str	r2, [sp]
   191a4:	add	r3, r0, r2
   191a8:	mov	r0, r4
   191ac:	add	r8, r3, r8
   191b0:	add	r1, r8, #3
   191b4:	add	r8, r8, #2
   191b8:	bl	11428 <realloc@plt>
   191bc:	ldr	r2, [sp]
   191c0:	mov	r3, r0
   191c4:	b	19098 <fts_children@@Base+0x1798>
   191c8:	ldr	r4, [pc, #136]	; 19258 <fts_children@@Base+0x1958>
   191cc:	add	r4, pc, r4
   191d0:	b	19158 <fts_children@@Base+0x1858>
   191d4:	ldr	r8, [pc, #128]	; 1925c <fts_children@@Base+0x195c>
   191d8:	mov	r3, #7
   191dc:	mov	sl, #8
   191e0:	add	r8, pc, r8
   191e4:	b	19178 <fts_children@@Base+0x1878>
   191e8:	ldr	r4, [pc, #112]	; 19260 <fts_children@@Base+0x1960>
   191ec:	mov	r0, r8
   191f0:	add	r4, pc, r4
   191f4:	bl	1168c <close@plt>
   191f8:	b	19150 <fts_children@@Base+0x1850>
   191fc:	bl	1141c <__stack_chk_fail@plt>
   19200:	mov	r0, r4
   19204:	ldr	r4, [pc, #88]	; 19264 <fts_children@@Base+0x1964>
   19208:	bl	113bc <free@plt>
   1920c:	mov	r0, fp
   19210:	add	r4, pc, r4
   19214:	bl	1931c <fts_children@@Base+0x1a1c>
   19218:	b	19150 <fts_children@@Base+0x1850>
   1921c:	mov	r0, fp
   19220:	bl	115e4 <__uflow@plt>
   19224:	b	19124 <fts_children@@Base+0x1824>
   19228:	andeq	r3, r1, r4, lsr #3
   1922c:	andeq	r0, r0, r4, asr #2
   19230:	andeq	r3, r1, r0, lsr #9
   19234:	andeq	r2, r0, r8, ror #11
   19238:	andeq	r1, r0, r0, asr r9
   1923c:	andeq	r2, r0, r0, asr #11
   19240:	andeq	r2, r0, r8, ror #10
   19244:	andeq	r2, r0, r4, asr #10
   19248:	andeq	r2, r0, r8, lsr #10
   1924c:	andeq	r3, r1, r0, asr #3
   19250:	andeq	r2, r0, r0, ror r3
   19254:	andeq	r1, r0, r8, ror #13
   19258:			; <UNDEFINED> instruction: 0x000016b0
   1925c:	andeq	r2, r0, r4, lsl #6
   19260:	andeq	r1, r0, ip, lsl #13
   19264:	andeq	r1, r0, ip, ror #12
   19268:	push	{r2, r3}
   1926c:	ldr	r3, [pc, #88]	; 192cc <fts_children@@Base+0x19cc>
   19270:	ldr	ip, [pc, #88]	; 192d0 <fts_children@@Base+0x19d0>
   19274:	add	r3, pc, r3
   19278:	push	{r4, lr}
   1927c:	sub	sp, sp, #8
   19280:	ldr	r4, [r3, ip]
   19284:	ldr	r2, [sp, #16]
   19288:	ldr	ip, [r4]
   1928c:	ands	r3, r2, #64	; 0x40
   19290:	ldrne	r3, [sp, #20]
   19294:	str	ip, [sp, #4]
   19298:	addne	ip, sp, #20
   1929c:	strne	ip, [sp]
   192a0:	bl	11548 <openat64@plt>
   192a4:	bl	192e0 <fts_children@@Base+0x19e0>
   192a8:	ldr	r2, [sp, #4]
   192ac:	ldr	r3, [r4]
   192b0:	cmp	r2, r3
   192b4:	bne	192c8 <fts_children@@Base+0x19c8>
   192b8:	add	sp, sp, #8
   192bc:	pop	{r4, lr}
   192c0:	add	sp, sp, #8
   192c4:	bx	lr
   192c8:	bl	1141c <__stack_chk_fail@plt>
   192cc:	andeq	r2, r1, r4, lsl #27
   192d0:	andeq	r0, r0, r4, asr #2
   192d4:	mov	r1, #0
   192d8:	mov	r2, #3
   192dc:	b	193bc <fts_children@@Base+0x1abc>
   192e0:	cmp	r0, #2
   192e4:	push	{r3, r4, r5, r6, r7, lr}
   192e8:	mov	r4, r0
   192ec:	bhi	19314 <fts_children@@Base+0x1a14>
   192f0:	bl	192d4 <fts_children@@Base+0x19d4>
   192f4:	mov	r7, r0
   192f8:	bl	11578 <__errno_location@plt>
   192fc:	ldr	r6, [r0]
   19300:	mov	r5, r0
   19304:	mov	r0, r4
   19308:	mov	r4, r7
   1930c:	bl	1168c <close@plt>
   19310:	str	r6, [r5]
   19314:	mov	r0, r4
   19318:	pop	{r3, r4, r5, r6, r7, pc}
   1931c:	push	{r4, r5, r6, lr}
   19320:	sub	sp, sp, #8
   19324:	mov	r4, r0
   19328:	bl	115b4 <fileno@plt>
   1932c:	cmp	r0, #0
   19330:	mov	r0, r4
   19334:	blt	193b0 <fts_children@@Base+0x1ab0>
   19338:	bl	114e8 <__freading@plt>
   1933c:	cmp	r0, #0
   19340:	bne	1937c <fts_children@@Base+0x1a7c>
   19344:	mov	r0, r4
   19348:	bl	19530 <fts_children@@Base+0x1c30>
   1934c:	cmp	r0, #0
   19350:	beq	193ac <fts_children@@Base+0x1aac>
   19354:	bl	11578 <__errno_location@plt>
   19358:	ldr	r6, [r0]
   1935c:	mov	r5, r0
   19360:	mov	r0, r4
   19364:	bl	115cc <fclose@plt>
   19368:	cmp	r6, #0
   1936c:	mvnne	r0, #0
   19370:	strne	r6, [r5]
   19374:	add	sp, sp, #8
   19378:	pop	{r4, r5, r6, pc}
   1937c:	mov	r0, r4
   19380:	bl	115b4 <fileno@plt>
   19384:	mov	r1, #1
   19388:	mov	r2, #0
   1938c:	mov	r3, #0
   19390:	str	r1, [sp]
   19394:	bl	11470 <lseek64@plt>
   19398:	mvn	r2, #0
   1939c:	mvn	r3, #0
   193a0:	cmp	r1, r3
   193a4:	cmpeq	r0, r2
   193a8:	bne	19344 <fts_children@@Base+0x1a44>
   193ac:	mov	r0, r4
   193b0:	add	sp, sp, #8
   193b4:	pop	{r4, r5, r6, lr}
   193b8:	b	115cc <fclose@plt>
   193bc:	push	{r1, r2, r3}
   193c0:	movw	ip, #1030	; 0x406
   193c4:	ldr	r3, [pc, #336]	; 1951c <fts_children@@Base+0x1c1c>
   193c8:	push	{r4, r5, r6, r7, r8, lr}
   193cc:	add	r3, pc, r3
   193d0:	ldr	lr, [pc, #328]	; 19520 <fts_children@@Base+0x1c20>
   193d4:	sub	sp, sp, #12
   193d8:	add	r2, sp, #40	; 0x28
   193dc:	mov	r6, r0
   193e0:	ldr	r1, [sp, #36]	; 0x24
   193e4:	ldr	r4, [r3, lr]
   193e8:	cmp	r1, ip
   193ec:	str	r2, [sp]
   193f0:	ldr	r3, [r4]
   193f4:	str	r3, [sp, #4]
   193f8:	bne	1947c <fts_children@@Base+0x1b7c>
   193fc:	ldr	r8, [pc, #288]	; 19524 <fts_children@@Base+0x1c24>
   19400:	add	r3, sp, #44	; 0x2c
   19404:	str	r3, [sp]
   19408:	add	r8, pc, r8
   1940c:	ldr	r7, [sp, #40]	; 0x28
   19410:	ldr	r3, [r8]
   19414:	mov	r2, r7
   19418:	cmp	r3, #0
   1941c:	blt	19508 <fts_children@@Base+0x1c08>
   19420:	bl	1156c <fcntl@plt>
   19424:	subs	r5, r0, #0
   19428:	blt	1948c <fts_children@@Base+0x1b8c>
   1942c:	ldr	r3, [pc, #244]	; 19528 <fts_children@@Base+0x1c28>
   19430:	mov	r2, #1
   19434:	add	r3, pc, r3
   19438:	str	r2, [r3]
   1943c:	cmp	r5, #0
   19440:	blt	19458 <fts_children@@Base+0x1b58>
   19444:	ldr	r3, [pc, #224]	; 1952c <fts_children@@Base+0x1c2c>
   19448:	add	r3, pc, r3
   1944c:	ldr	r3, [r3]
   19450:	cmn	r3, #1
   19454:	beq	194bc <fts_children@@Base+0x1bbc>
   19458:	ldr	r2, [sp, #4]
   1945c:	mov	r0, r5
   19460:	ldr	r3, [r4]
   19464:	cmp	r2, r3
   19468:	bne	19518 <fts_children@@Base+0x1c18>
   1946c:	add	sp, sp, #12
   19470:	pop	{r4, r5, r6, r7, r8, lr}
   19474:	add	sp, sp, #12
   19478:	bx	lr
   1947c:	ldr	r2, [sp, #40]	; 0x28
   19480:	bl	1156c <fcntl@plt>
   19484:	mov	r5, r0
   19488:	b	19458 <fts_children@@Base+0x1b58>
   1948c:	bl	11578 <__errno_location@plt>
   19490:	ldr	r3, [r0]
   19494:	cmp	r3, #22
   19498:	bne	1942c <fts_children@@Base+0x1b2c>
   1949c:	mov	r0, r6
   194a0:	mov	r2, r7
   194a4:	mov	r1, #0
   194a8:	bl	193bc <fts_children@@Base+0x1abc>
   194ac:	subs	r5, r0, #0
   194b0:	blt	19458 <fts_children@@Base+0x1b58>
   194b4:	mvn	r3, #0
   194b8:	str	r3, [r8]
   194bc:	mov	r0, r5
   194c0:	mov	r1, #1
   194c4:	bl	1156c <fcntl@plt>
   194c8:	subs	r2, r0, #0
   194cc:	blt	194e8 <fts_children@@Base+0x1be8>
   194d0:	orr	r2, r2, #1
   194d4:	mov	r0, r5
   194d8:	mov	r1, #2
   194dc:	bl	1156c <fcntl@plt>
   194e0:	cmn	r0, #1
   194e4:	bne	19458 <fts_children@@Base+0x1b58>
   194e8:	bl	11578 <__errno_location@plt>
   194ec:	ldr	r7, [r0]
   194f0:	mov	r6, r0
   194f4:	mov	r0, r5
   194f8:	mvn	r5, #0
   194fc:	bl	1168c <close@plt>
   19500:	str	r7, [r6]
   19504:	b	19458 <fts_children@@Base+0x1b58>
   19508:	mov	r1, #0
   1950c:	bl	193bc <fts_children@@Base+0x1abc>
   19510:	mov	r5, r0
   19514:	b	1943c <fts_children@@Base+0x1b3c>
   19518:	bl	1141c <__stack_chk_fail@plt>
   1951c:	andeq	r2, r1, ip, lsr #24
   19520:	andeq	r0, r0, r4, asr #2
   19524:	andeq	r2, r1, r8, lsl pc
   19528:	andeq	r2, r1, ip, ror #29
   1952c:	ldrdeq	r2, [r1], -r8
   19530:	push	{r4, lr}
   19534:	subs	r4, r0, #0
   19538:	sub	sp, sp, #8
   1953c:	beq	1954c <fts_children@@Base+0x1c4c>
   19540:	bl	114e8 <__freading@plt>
   19544:	cmp	r0, #0
   19548:	bne	1955c <fts_children@@Base+0x1c5c>
   1954c:	mov	r0, r4
   19550:	add	sp, sp, #8
   19554:	pop	{r4, lr}
   19558:	b	113a4 <fflush@plt>
   1955c:	ldr	r3, [r4]
   19560:	tst	r3, #256	; 0x100
   19564:	beq	1954c <fts_children@@Base+0x1c4c>
   19568:	mov	r3, #1
   1956c:	mov	r0, r4
   19570:	str	r3, [sp]
   19574:	mov	r2, #0
   19578:	mov	r3, #0
   1957c:	bl	19590 <fts_children@@Base+0x1c90>
   19580:	mov	r0, r4
   19584:	add	sp, sp, #8
   19588:	pop	{r4, lr}
   1958c:	b	113a4 <fflush@plt>
   19590:	push	{r4, r5, r6, r7, lr}
   19594:	sub	sp, sp, #20
   19598:	ldmib	r0, {r1, ip}
   1959c:	mov	r6, r0
   195a0:	ldr	r4, [sp, #40]	; 0x28
   195a4:	cmp	ip, r1
   195a8:	beq	195c0 <fts_children@@Base+0x1cc0>
   195ac:	str	r4, [sp, #40]	; 0x28
   195b0:	mov	r0, r6
   195b4:	add	sp, sp, #20
   195b8:	pop	{r4, r5, r6, r7, lr}
   195bc:	b	115d8 <fseeko64@plt>
   195c0:	ldr	ip, [r0, #20]
   195c4:	ldr	r1, [r0, #16]
   195c8:	cmp	ip, r1
   195cc:	bne	195ac <fts_children@@Base+0x1cac>
   195d0:	ldr	r7, [r0, #36]	; 0x24
   195d4:	cmp	r7, #0
   195d8:	bne	195ac <fts_children@@Base+0x1cac>
   195dc:	str	r2, [sp, #12]
   195e0:	mvn	r5, #0
   195e4:	str	r3, [sp, #8]
   195e8:	bl	115b4 <fileno@plt>
   195ec:	str	r4, [sp]
   195f0:	mvn	r4, #0
   195f4:	ldr	r2, [sp, #12]
   195f8:	ldr	r3, [sp, #8]
   195fc:	bl	11470 <lseek64@plt>
   19600:	mov	r2, r0
   19604:	mov	r3, r1
   19608:	cmp	r3, r5
   1960c:	cmpeq	r2, r4
   19610:	beq	19630 <fts_children@@Base+0x1d30>
   19614:	ldr	r1, [r6]
   19618:	mov	r0, r7
   1961c:	strd	r2, [r6, #80]	; 0x50
   19620:	bic	r3, r1, #16
   19624:	str	r3, [r6]
   19628:	add	sp, sp, #20
   1962c:	pop	{r4, r5, r6, r7, pc}
   19630:	mvn	r0, #0
   19634:	b	19628 <fts_children@@Base+0x1d28>
   19638:	subs	r2, r1, #1
   1963c:	bxeq	lr
   19640:	bcc	19818 <fts_children@@Base+0x1f18>
   19644:	cmp	r0, r1
   19648:	bls	197fc <fts_children@@Base+0x1efc>
   1964c:	tst	r1, r2
   19650:	beq	19808 <fts_children@@Base+0x1f08>
   19654:	clz	r3, r0
   19658:	clz	r2, r1
   1965c:	sub	r3, r2, r3
   19660:	rsbs	r3, r3, #31
   19664:	addne	r3, r3, r3, lsl #1
   19668:	mov	r2, #0
   1966c:	addne	pc, pc, r3, lsl #2
   19670:	nop	{0}
   19674:	cmp	r0, r1, lsl #31
   19678:	adc	r2, r2, r2
   1967c:	subcs	r0, r0, r1, lsl #31
   19680:	cmp	r0, r1, lsl #30
   19684:	adc	r2, r2, r2
   19688:	subcs	r0, r0, r1, lsl #30
   1968c:	cmp	r0, r1, lsl #29
   19690:	adc	r2, r2, r2
   19694:	subcs	r0, r0, r1, lsl #29
   19698:	cmp	r0, r1, lsl #28
   1969c:	adc	r2, r2, r2
   196a0:	subcs	r0, r0, r1, lsl #28
   196a4:	cmp	r0, r1, lsl #27
   196a8:	adc	r2, r2, r2
   196ac:	subcs	r0, r0, r1, lsl #27
   196b0:	cmp	r0, r1, lsl #26
   196b4:	adc	r2, r2, r2
   196b8:	subcs	r0, r0, r1, lsl #26
   196bc:	cmp	r0, r1, lsl #25
   196c0:	adc	r2, r2, r2
   196c4:	subcs	r0, r0, r1, lsl #25
   196c8:	cmp	r0, r1, lsl #24
   196cc:	adc	r2, r2, r2
   196d0:	subcs	r0, r0, r1, lsl #24
   196d4:	cmp	r0, r1, lsl #23
   196d8:	adc	r2, r2, r2
   196dc:	subcs	r0, r0, r1, lsl #23
   196e0:	cmp	r0, r1, lsl #22
   196e4:	adc	r2, r2, r2
   196e8:	subcs	r0, r0, r1, lsl #22
   196ec:	cmp	r0, r1, lsl #21
   196f0:	adc	r2, r2, r2
   196f4:	subcs	r0, r0, r1, lsl #21
   196f8:	cmp	r0, r1, lsl #20
   196fc:	adc	r2, r2, r2
   19700:	subcs	r0, r0, r1, lsl #20
   19704:	cmp	r0, r1, lsl #19
   19708:	adc	r2, r2, r2
   1970c:	subcs	r0, r0, r1, lsl #19
   19710:	cmp	r0, r1, lsl #18
   19714:	adc	r2, r2, r2
   19718:	subcs	r0, r0, r1, lsl #18
   1971c:	cmp	r0, r1, lsl #17
   19720:	adc	r2, r2, r2
   19724:	subcs	r0, r0, r1, lsl #17
   19728:	cmp	r0, r1, lsl #16
   1972c:	adc	r2, r2, r2
   19730:	subcs	r0, r0, r1, lsl #16
   19734:	cmp	r0, r1, lsl #15
   19738:	adc	r2, r2, r2
   1973c:	subcs	r0, r0, r1, lsl #15
   19740:	cmp	r0, r1, lsl #14
   19744:	adc	r2, r2, r2
   19748:	subcs	r0, r0, r1, lsl #14
   1974c:	cmp	r0, r1, lsl #13
   19750:	adc	r2, r2, r2
   19754:	subcs	r0, r0, r1, lsl #13
   19758:	cmp	r0, r1, lsl #12
   1975c:	adc	r2, r2, r2
   19760:	subcs	r0, r0, r1, lsl #12
   19764:	cmp	r0, r1, lsl #11
   19768:	adc	r2, r2, r2
   1976c:	subcs	r0, r0, r1, lsl #11
   19770:	cmp	r0, r1, lsl #10
   19774:	adc	r2, r2, r2
   19778:	subcs	r0, r0, r1, lsl #10
   1977c:	cmp	r0, r1, lsl #9
   19780:	adc	r2, r2, r2
   19784:	subcs	r0, r0, r1, lsl #9
   19788:	cmp	r0, r1, lsl #8
   1978c:	adc	r2, r2, r2
   19790:	subcs	r0, r0, r1, lsl #8
   19794:	cmp	r0, r1, lsl #7
   19798:	adc	r2, r2, r2
   1979c:	subcs	r0, r0, r1, lsl #7
   197a0:	cmp	r0, r1, lsl #6
   197a4:	adc	r2, r2, r2
   197a8:	subcs	r0, r0, r1, lsl #6
   197ac:	cmp	r0, r1, lsl #5
   197b0:	adc	r2, r2, r2
   197b4:	subcs	r0, r0, r1, lsl #5
   197b8:	cmp	r0, r1, lsl #4
   197bc:	adc	r2, r2, r2
   197c0:	subcs	r0, r0, r1, lsl #4
   197c4:	cmp	r0, r1, lsl #3
   197c8:	adc	r2, r2, r2
   197cc:	subcs	r0, r0, r1, lsl #3
   197d0:	cmp	r0, r1, lsl #2
   197d4:	adc	r2, r2, r2
   197d8:	subcs	r0, r0, r1, lsl #2
   197dc:	cmp	r0, r1, lsl #1
   197e0:	adc	r2, r2, r2
   197e4:	subcs	r0, r0, r1, lsl #1
   197e8:	cmp	r0, r1
   197ec:	adc	r2, r2, r2
   197f0:	subcs	r0, r0, r1
   197f4:	mov	r0, r2
   197f8:	bx	lr
   197fc:	moveq	r0, #1
   19800:	movne	r0, #0
   19804:	bx	lr
   19808:	clz	r2, r1
   1980c:	rsb	r2, r2, #31
   19810:	lsr	r0, r0, r2
   19814:	bx	lr
   19818:	cmp	r0, #0
   1981c:	mvnne	r0, #0
   19820:	b	19880 <fts_children@@Base+0x1f80>
   19824:	cmp	r1, #0
   19828:	beq	19818 <fts_children@@Base+0x1f18>
   1982c:	push	{r0, r1, lr}
   19830:	bl	19638 <fts_children@@Base+0x1d38>
   19834:	pop	{r1, r2, lr}
   19838:	mul	r3, r2, r0
   1983c:	sub	r1, r1, r3
   19840:	bx	lr
   19844:	cmp	r3, #0
   19848:	cmpeq	r2, #0
   1984c:	bne	19864 <fts_children@@Base+0x1f64>
   19850:	cmp	r1, #0
   19854:	cmpeq	r0, #0
   19858:	mvnne	r1, #0
   1985c:	mvnne	r0, #0
   19860:	b	19880 <fts_children@@Base+0x1f80>
   19864:	sub	sp, sp, #8
   19868:	push	{sp, lr}
   1986c:	bl	198cc <fts_children@@Base+0x1fcc>
   19870:	ldr	lr, [sp, #4]
   19874:	add	sp, sp, #8
   19878:	pop	{r2, r3}
   1987c:	bx	lr
   19880:	push	{r1, lr}
   19884:	mov	r0, #8
   19888:	bl	11380 <raise@plt>
   1988c:	pop	{r1, pc}
   19890:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19894:	mov	r8, r2
   19898:	mov	r6, r0
   1989c:	mov	r7, r1
   198a0:	mov	sl, r3
   198a4:	ldr	r9, [sp, #32]
   198a8:	bl	19908 <fts_children@@Base+0x2008>
   198ac:	umull	r4, r5, r8, r0
   198b0:	mul	r8, r8, r1
   198b4:	mla	r2, r0, sl, r8
   198b8:	add	r5, r2, r5
   198bc:	subs	r4, r6, r4
   198c0:	sbc	r5, r7, r5
   198c4:	strd	r4, [r9]
   198c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   198cc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   198d0:	mov	r8, r2
   198d4:	mov	r6, r0
   198d8:	mov	r7, r1
   198dc:	mov	r5, r3
   198e0:	ldr	r9, [sp, #32]
   198e4:	bl	19d94 <fts_children@@Base+0x2494>
   198e8:	mul	r3, r0, r5
   198ec:	umull	r4, r5, r0, r8
   198f0:	mla	r8, r8, r1, r3
   198f4:	add	r5, r8, r5
   198f8:	subs	r4, r6, r4
   198fc:	sbc	r5, r7, r5
   19900:	strd	r4, [r9]
   19904:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1990c:	rsbs	r4, r0, #0
   19910:	rsc	r5, r1, #0
   19914:	cmp	r1, #0
   19918:	mvn	r6, #0
   1991c:	sub	sp, sp, #12
   19920:	movge	r4, r0
   19924:	movge	r5, r1
   19928:	movge	r6, #0
   1992c:	cmp	r3, #0
   19930:	blt	19b68 <fts_children@@Base+0x2268>
   19934:	cmp	r3, #0
   19938:	mov	sl, r4
   1993c:	mov	ip, r5
   19940:	mov	r0, r2
   19944:	mov	r1, r3
   19948:	mov	r8, r2
   1994c:	mov	r7, r4
   19950:	mov	r9, r5
   19954:	bne	19a4c <fts_children@@Base+0x214c>
   19958:	cmp	r2, r5
   1995c:	bls	19a88 <fts_children@@Base+0x2188>
   19960:	clz	r3, r2
   19964:	cmp	r3, #0
   19968:	rsbne	r2, r3, #32
   1996c:	lslne	r8, r0, r3
   19970:	lsrne	r2, r4, r2
   19974:	lslne	r7, r4, r3
   19978:	orrne	r9, r2, r5, lsl r3
   1997c:	lsr	r4, r8, #16
   19980:	uxth	sl, r8
   19984:	mov	r1, r4
   19988:	mov	r0, r9
   1998c:	bl	19638 <fts_children@@Base+0x1d38>
   19990:	mov	r1, r4
   19994:	mov	fp, r0
   19998:	mov	r0, r9
   1999c:	bl	19824 <fts_children@@Base+0x1f24>
   199a0:	mul	r0, sl, fp
   199a4:	lsr	r2, r7, #16
   199a8:	orr	r1, r2, r1, lsl #16
   199ac:	cmp	r0, r1
   199b0:	bls	199d4 <fts_children@@Base+0x20d4>
   199b4:	adds	r1, r1, r8
   199b8:	sub	r3, fp, #1
   199bc:	bcs	199d0 <fts_children@@Base+0x20d0>
   199c0:	cmp	r0, r1
   199c4:	subhi	fp, fp, #2
   199c8:	addhi	r1, r1, r8
   199cc:	bhi	199d4 <fts_children@@Base+0x20d4>
   199d0:	mov	fp, r3
   199d4:	rsb	r9, r0, r1
   199d8:	mov	r1, r4
   199dc:	uxth	r7, r7
   199e0:	mov	r0, r9
   199e4:	bl	19638 <fts_children@@Base+0x1d38>
   199e8:	mov	r1, r4
   199ec:	mov	r5, r0
   199f0:	mov	r0, r9
   199f4:	bl	19824 <fts_children@@Base+0x1f24>
   199f8:	mul	sl, sl, r5
   199fc:	orr	r1, r7, r1, lsl #16
   19a00:	cmp	sl, r1
   19a04:	bls	19a24 <fts_children@@Base+0x2124>
   19a08:	adds	r8, r1, r8
   19a0c:	sub	r3, r5, #1
   19a10:	bcs	19a20 <fts_children@@Base+0x2120>
   19a14:	cmp	sl, r8
   19a18:	subhi	r5, r5, #2
   19a1c:	bhi	19a24 <fts_children@@Base+0x2124>
   19a20:	mov	r5, r3
   19a24:	orr	r3, r5, fp, lsl #16
   19a28:	mov	r4, #0
   19a2c:	cmp	r6, #0
   19a30:	mov	r0, r3
   19a34:	mov	r1, r4
   19a38:	beq	19a44 <fts_children@@Base+0x2144>
   19a3c:	rsbs	r0, r0, #0
   19a40:	rsc	r1, r1, #0
   19a44:	add	sp, sp, #12
   19a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a4c:	cmp	r3, r5
   19a50:	movhi	r4, #0
   19a54:	movhi	r3, r4
   19a58:	bhi	19a2c <fts_children@@Base+0x212c>
   19a5c:	clz	r5, r1
   19a60:	cmp	r5, #0
   19a64:	bne	19c54 <fts_children@@Base+0x2354>
   19a68:	cmp	r1, ip
   19a6c:	cmpcs	r2, sl
   19a70:	movhi	r4, #0
   19a74:	movls	r4, #1
   19a78:	movls	r3, #1
   19a7c:	movls	r4, r5
   19a80:	movhi	r3, r4
   19a84:	b	19a2c <fts_children@@Base+0x212c>
   19a88:	cmp	r2, #0
   19a8c:	bne	19aa0 <fts_children@@Base+0x21a0>
   19a90:	mov	r1, r2
   19a94:	mov	r0, #1
   19a98:	bl	19638 <fts_children@@Base+0x1d38>
   19a9c:	mov	r8, r0
   19aa0:	clz	r3, r8
   19aa4:	cmp	r3, #0
   19aa8:	bne	19b78 <fts_children@@Base+0x2278>
   19aac:	rsb	r9, r8, r9
   19ab0:	lsr	r5, r8, #16
   19ab4:	uxth	sl, r8
   19ab8:	mov	r4, #1
   19abc:	mov	r1, r5
   19ac0:	mov	r0, r9
   19ac4:	bl	19638 <fts_children@@Base+0x1d38>
   19ac8:	mov	r1, r5
   19acc:	mov	fp, r0
   19ad0:	mov	r0, r9
   19ad4:	bl	19824 <fts_children@@Base+0x1f24>
   19ad8:	mul	r0, sl, fp
   19adc:	lsr	r2, r7, #16
   19ae0:	orr	r1, r2, r1, lsl #16
   19ae4:	cmp	r0, r1
   19ae8:	bls	19b08 <fts_children@@Base+0x2208>
   19aec:	adds	r1, r1, r8
   19af0:	sub	r3, fp, #1
   19af4:	bcs	19d74 <fts_children@@Base+0x2474>
   19af8:	cmp	r0, r1
   19afc:	subhi	fp, fp, #2
   19b00:	addhi	r1, r1, r8
   19b04:	bls	19d74 <fts_children@@Base+0x2474>
   19b08:	rsb	r2, r0, r1
   19b0c:	mov	r1, r5
   19b10:	str	r2, [sp]
   19b14:	uxth	r7, r7
   19b18:	mov	r0, r2
   19b1c:	bl	19638 <fts_children@@Base+0x1d38>
   19b20:	ldr	r2, [sp]
   19b24:	mov	r1, r5
   19b28:	mov	r9, r0
   19b2c:	mov	r0, r2
   19b30:	bl	19824 <fts_children@@Base+0x1f24>
   19b34:	mul	sl, sl, r9
   19b38:	orr	r1, r7, r1, lsl #16
   19b3c:	cmp	sl, r1
   19b40:	bls	19b60 <fts_children@@Base+0x2260>
   19b44:	adds	r8, r1, r8
   19b48:	sub	r3, r9, #1
   19b4c:	bcs	19b5c <fts_children@@Base+0x225c>
   19b50:	cmp	sl, r8
   19b54:	subhi	r9, r9, #2
   19b58:	bhi	19b60 <fts_children@@Base+0x2260>
   19b5c:	mov	r9, r3
   19b60:	orr	r3, r9, fp, lsl #16
   19b64:	b	19a2c <fts_children@@Base+0x212c>
   19b68:	mvn	r6, r6
   19b6c:	rsbs	r2, r2, #0
   19b70:	rsc	r3, r3, #0
   19b74:	b	19934 <fts_children@@Base+0x2034>
   19b78:	lsl	r8, r8, r3
   19b7c:	rsb	fp, r3, #32
   19b80:	lsr	r4, r9, fp
   19b84:	lsr	fp, r7, fp
   19b88:	lsr	r5, r8, #16
   19b8c:	orr	fp, fp, r9, lsl r3
   19b90:	mov	r0, r4
   19b94:	lsl	r7, r7, r3
   19b98:	mov	r1, r5
   19b9c:	uxth	sl, r8
   19ba0:	bl	19638 <fts_children@@Base+0x1d38>
   19ba4:	mov	r1, r5
   19ba8:	mov	r3, r0
   19bac:	mov	r0, r4
   19bb0:	str	r3, [sp]
   19bb4:	bl	19824 <fts_children@@Base+0x1f24>
   19bb8:	ldr	r3, [sp]
   19bbc:	lsr	r2, fp, #16
   19bc0:	mul	r0, sl, r3
   19bc4:	orr	r1, r2, r1, lsl #16
   19bc8:	cmp	r0, r1
   19bcc:	bls	19bec <fts_children@@Base+0x22ec>
   19bd0:	adds	r1, r1, r8
   19bd4:	sub	r2, r3, #1
   19bd8:	bcs	19d8c <fts_children@@Base+0x248c>
   19bdc:	cmp	r0, r1
   19be0:	subhi	r3, r3, #2
   19be4:	addhi	r1, r1, r8
   19be8:	bls	19d8c <fts_children@@Base+0x248c>
   19bec:	rsb	r9, r0, r1
   19bf0:	mov	r1, r5
   19bf4:	str	r3, [sp]
   19bf8:	uxth	fp, fp
   19bfc:	mov	r0, r9
   19c00:	bl	19638 <fts_children@@Base+0x1d38>
   19c04:	mov	r1, r5
   19c08:	mov	r4, r0
   19c0c:	mov	r0, r9
   19c10:	bl	19824 <fts_children@@Base+0x1f24>
   19c14:	mul	r9, sl, r4
   19c18:	ldr	r3, [sp]
   19c1c:	orr	r1, fp, r1, lsl #16
   19c20:	cmp	r9, r1
   19c24:	bls	19c48 <fts_children@@Base+0x2348>
   19c28:	adds	r1, r1, r8
   19c2c:	sub	r2, r4, #1
   19c30:	bcs	19c44 <fts_children@@Base+0x2344>
   19c34:	cmp	r9, r1
   19c38:	subhi	r4, r4, #2
   19c3c:	addhi	r1, r1, r8
   19c40:	bhi	19c48 <fts_children@@Base+0x2348>
   19c44:	mov	r4, r2
   19c48:	rsb	r9, r9, r1
   19c4c:	orr	r4, r4, r3, lsl #16
   19c50:	b	19abc <fts_children@@Base+0x21bc>
   19c54:	rsb	sl, r5, #32
   19c58:	lsl	r3, r2, r5
   19c5c:	lsr	r0, r2, sl
   19c60:	lsr	r2, ip, sl
   19c64:	orr	r4, r0, r1, lsl r5
   19c68:	lsr	sl, r7, sl
   19c6c:	mov	r0, r2
   19c70:	orr	sl, sl, ip, lsl r5
   19c74:	lsr	r9, r4, #16
   19c78:	str	r3, [sp, #4]
   19c7c:	str	r2, [sp]
   19c80:	uxth	fp, r4
   19c84:	mov	r1, r9
   19c88:	bl	19638 <fts_children@@Base+0x1d38>
   19c8c:	ldr	r2, [sp]
   19c90:	mov	r1, r9
   19c94:	mov	r8, r0
   19c98:	mov	r0, r2
   19c9c:	bl	19824 <fts_children@@Base+0x1f24>
   19ca0:	mul	r0, fp, r8
   19ca4:	lsr	r2, sl, #16
   19ca8:	orr	r1, r2, r1, lsl #16
   19cac:	cmp	r0, r1
   19cb0:	bls	19cd0 <fts_children@@Base+0x23d0>
   19cb4:	adds	r1, r1, r4
   19cb8:	sub	r2, r8, #1
   19cbc:	bcs	19d84 <fts_children@@Base+0x2484>
   19cc0:	cmp	r0, r1
   19cc4:	subhi	r8, r8, #2
   19cc8:	addhi	r1, r1, r4
   19ccc:	bls	19d84 <fts_children@@Base+0x2484>
   19cd0:	rsb	ip, r0, r1
   19cd4:	mov	r1, r9
   19cd8:	str	ip, [sp]
   19cdc:	mov	r0, ip
   19ce0:	bl	19638 <fts_children@@Base+0x1d38>
   19ce4:	ldr	ip, [sp]
   19ce8:	mov	r1, r9
   19cec:	mov	r2, r0
   19cf0:	mov	r0, ip
   19cf4:	str	r2, [sp]
   19cf8:	bl	19824 <fts_children@@Base+0x1f24>
   19cfc:	ldr	r2, [sp]
   19d00:	uxth	ip, sl
   19d04:	mul	fp, fp, r2
   19d08:	orr	ip, ip, r1, lsl #16
   19d0c:	cmp	fp, ip
   19d10:	bls	19d30 <fts_children@@Base+0x2430>
   19d14:	adds	ip, ip, r4
   19d18:	sub	r1, r2, #1
   19d1c:	bcs	19d7c <fts_children@@Base+0x247c>
   19d20:	cmp	fp, ip
   19d24:	subhi	r2, r2, #2
   19d28:	addhi	ip, ip, r4
   19d2c:	bls	19d7c <fts_children@@Base+0x247c>
   19d30:	ldr	r0, [sp, #4]
   19d34:	orr	r1, r2, r8, lsl #16
   19d38:	rsb	fp, fp, ip
   19d3c:	umull	r2, r3, r1, r0
   19d40:	cmp	fp, r3
   19d44:	bcc	19d68 <fts_children@@Base+0x2468>
   19d48:	movne	r4, #0
   19d4c:	moveq	r4, #1
   19d50:	cmp	r2, r7, lsl r5
   19d54:	movls	r4, #0
   19d58:	andhi	r4, r4, #1
   19d5c:	cmp	r4, #0
   19d60:	moveq	r3, r1
   19d64:	beq	19a2c <fts_children@@Base+0x212c>
   19d68:	sub	r3, r1, #1
   19d6c:	mov	r4, #0
   19d70:	b	19a2c <fts_children@@Base+0x212c>
   19d74:	mov	fp, r3
   19d78:	b	19b08 <fts_children@@Base+0x2208>
   19d7c:	mov	r2, r1
   19d80:	b	19d30 <fts_children@@Base+0x2430>
   19d84:	mov	r8, r2
   19d88:	b	19cd0 <fts_children@@Base+0x23d0>
   19d8c:	mov	r3, r2
   19d90:	b	19bec <fts_children@@Base+0x22ec>
   19d94:	cmp	r3, #0
   19d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d9c:	mov	r6, r0
   19da0:	sub	sp, sp, #12
   19da4:	mov	r5, r1
   19da8:	mov	r7, r0
   19dac:	mov	r4, r2
   19db0:	mov	r8, r1
   19db4:	bne	19e94 <fts_children@@Base+0x2594>
   19db8:	cmp	r2, r1
   19dbc:	bls	19ed0 <fts_children@@Base+0x25d0>
   19dc0:	clz	r3, r2
   19dc4:	cmp	r3, #0
   19dc8:	rsbne	r8, r3, #32
   19dcc:	lslne	r4, r2, r3
   19dd0:	lsrne	r8, r0, r8
   19dd4:	lslne	r7, r0, r3
   19dd8:	orrne	r8, r8, r1, lsl r3
   19ddc:	lsr	r5, r4, #16
   19de0:	uxth	sl, r4
   19de4:	mov	r1, r5
   19de8:	mov	r0, r8
   19dec:	bl	19638 <fts_children@@Base+0x1d38>
   19df0:	mov	r1, r5
   19df4:	mov	r9, r0
   19df8:	mov	r0, r8
   19dfc:	bl	19824 <fts_children@@Base+0x1f24>
   19e00:	mul	r0, sl, r9
   19e04:	lsr	r3, r7, #16
   19e08:	orr	r1, r3, r1, lsl #16
   19e0c:	cmp	r0, r1
   19e10:	bls	19e34 <fts_children@@Base+0x2534>
   19e14:	adds	r1, r1, r4
   19e18:	sub	r2, r9, #1
   19e1c:	bcs	19e30 <fts_children@@Base+0x2530>
   19e20:	cmp	r0, r1
   19e24:	subhi	r9, r9, #2
   19e28:	addhi	r1, r1, r4
   19e2c:	bhi	19e34 <fts_children@@Base+0x2534>
   19e30:	mov	r9, r2
   19e34:	rsb	r8, r0, r1
   19e38:	mov	r1, r5
   19e3c:	uxth	r7, r7
   19e40:	mov	r0, r8
   19e44:	bl	19638 <fts_children@@Base+0x1d38>
   19e48:	mov	r1, r5
   19e4c:	mov	r6, r0
   19e50:	mov	r0, r8
   19e54:	bl	19824 <fts_children@@Base+0x1f24>
   19e58:	mul	sl, sl, r6
   19e5c:	orr	r1, r7, r1, lsl #16
   19e60:	cmp	sl, r1
   19e64:	bls	19e80 <fts_children@@Base+0x2580>
   19e68:	adds	r4, r1, r4
   19e6c:	sub	r3, r6, #1
   19e70:	bcs	1a17c <fts_children@@Base+0x287c>
   19e74:	cmp	sl, r4
   19e78:	subhi	r6, r6, #2
   19e7c:	bls	1a17c <fts_children@@Base+0x287c>
   19e80:	orr	r0, r6, r9, lsl #16
   19e84:	mov	r6, #0
   19e88:	mov	r1, r6
   19e8c:	add	sp, sp, #12
   19e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e94:	cmp	r3, r1
   19e98:	movhi	r6, #0
   19e9c:	movhi	r0, r6
   19ea0:	bhi	19e88 <fts_children@@Base+0x2588>
   19ea4:	clz	r7, r3
   19ea8:	cmp	r7, #0
   19eac:	bne	19fac <fts_children@@Base+0x26ac>
   19eb0:	cmp	r3, r1
   19eb4:	cmpcs	r2, r6
   19eb8:	movhi	r6, #0
   19ebc:	movls	r6, #1
   19ec0:	movls	r0, #1
   19ec4:	movls	r6, r7
   19ec8:	movhi	r0, r6
   19ecc:	b	19e88 <fts_children@@Base+0x2588>
   19ed0:	cmp	r2, #0
   19ed4:	bne	19ee8 <fts_children@@Base+0x25e8>
   19ed8:	mov	r1, r2
   19edc:	mov	r0, #1
   19ee0:	bl	19638 <fts_children@@Base+0x1d38>
   19ee4:	mov	r4, r0
   19ee8:	clz	r3, r4
   19eec:	cmp	r3, #0
   19ef0:	bne	1a0a8 <fts_children@@Base+0x27a8>
   19ef4:	rsb	r5, r4, r5
   19ef8:	lsr	r8, r4, #16
   19efc:	uxth	sl, r4
   19f00:	mov	r6, #1
   19f04:	mov	r1, r8
   19f08:	mov	r0, r5
   19f0c:	bl	19638 <fts_children@@Base+0x1d38>
   19f10:	mov	r1, r8
   19f14:	mov	r9, r0
   19f18:	mov	r0, r5
   19f1c:	bl	19824 <fts_children@@Base+0x1f24>
   19f20:	mul	r0, sl, r9
   19f24:	lsr	r3, r7, #16
   19f28:	orr	r1, r3, r1, lsl #16
   19f2c:	cmp	r0, r1
   19f30:	bls	19f50 <fts_children@@Base+0x2650>
   19f34:	adds	r1, r1, r4
   19f38:	sub	r2, r9, #1
   19f3c:	bcs	1a184 <fts_children@@Base+0x2884>
   19f40:	cmp	r0, r1
   19f44:	subhi	r9, r9, #2
   19f48:	addhi	r1, r1, r4
   19f4c:	bls	1a184 <fts_children@@Base+0x2884>
   19f50:	rsb	fp, r0, r1
   19f54:	mov	r1, r8
   19f58:	uxth	r7, r7
   19f5c:	mov	r0, fp
   19f60:	bl	19638 <fts_children@@Base+0x1d38>
   19f64:	mov	r1, r8
   19f68:	mov	r5, r0
   19f6c:	mov	r0, fp
   19f70:	bl	19824 <fts_children@@Base+0x1f24>
   19f74:	mul	sl, sl, r5
   19f78:	orr	r1, r7, r1, lsl #16
   19f7c:	cmp	sl, r1
   19f80:	bls	19f9c <fts_children@@Base+0x269c>
   19f84:	adds	r4, r1, r4
   19f88:	sub	r3, r5, #1
   19f8c:	bcs	1a18c <fts_children@@Base+0x288c>
   19f90:	cmp	sl, r4
   19f94:	subhi	r5, r5, #2
   19f98:	bls	1a18c <fts_children@@Base+0x288c>
   19f9c:	orr	r0, r5, r9, lsl #16
   19fa0:	mov	r1, r6
   19fa4:	add	sp, sp, #12
   19fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fac:	rsb	r1, r7, #32
   19fb0:	lsl	r0, r2, r7
   19fb4:	lsr	r2, r2, r1
   19fb8:	lsr	fp, r5, r1
   19fbc:	orr	r8, r2, r3, lsl r7
   19fc0:	lsr	r1, r6, r1
   19fc4:	str	r0, [sp, #4]
   19fc8:	orr	r5, r1, r5, lsl r7
   19fcc:	lsr	r9, r8, #16
   19fd0:	mov	r0, fp
   19fd4:	uxth	sl, r8
   19fd8:	mov	r1, r9
   19fdc:	bl	19638 <fts_children@@Base+0x1d38>
   19fe0:	mov	r1, r9
   19fe4:	mov	r4, r0
   19fe8:	mov	r0, fp
   19fec:	bl	19824 <fts_children@@Base+0x1f24>
   19ff0:	mul	r0, sl, r4
   19ff4:	lsr	ip, r5, #16
   19ff8:	orr	r1, ip, r1, lsl #16
   19ffc:	cmp	r0, r1
   1a000:	bls	1a014 <fts_children@@Base+0x2714>
   1a004:	adds	r1, r1, r8
   1a008:	sub	r2, r4, #1
   1a00c:	bcc	1a1a8 <fts_children@@Base+0x28a8>
   1a010:	mov	r4, r2
   1a014:	rsb	ip, r0, r1
   1a018:	mov	r1, r9
   1a01c:	str	ip, [sp]
   1a020:	uxth	r5, r5
   1a024:	mov	r0, ip
   1a028:	bl	19638 <fts_children@@Base+0x1d38>
   1a02c:	ldr	ip, [sp]
   1a030:	mov	r1, r9
   1a034:	mov	fp, r0
   1a038:	mov	r0, ip
   1a03c:	bl	19824 <fts_children@@Base+0x1f24>
   1a040:	mul	sl, sl, fp
   1a044:	orr	r1, r5, r1, lsl #16
   1a048:	cmp	sl, r1
   1a04c:	bls	1a060 <fts_children@@Base+0x2760>
   1a050:	adds	r1, r1, r8
   1a054:	sub	r2, fp, #1
   1a058:	bcc	1a194 <fts_children@@Base+0x2894>
   1a05c:	mov	fp, r2
   1a060:	ldr	r3, [sp, #4]
   1a064:	orr	r0, fp, r4, lsl #16
   1a068:	rsb	sl, sl, r1
   1a06c:	umull	r4, r5, r0, r3
   1a070:	cmp	sl, r5
   1a074:	bcc	1a094 <fts_children@@Base+0x2794>
   1a078:	movne	r3, #0
   1a07c:	moveq	r3, #1
   1a080:	cmp	r4, r6, lsl r7
   1a084:	movls	r6, #0
   1a088:	andhi	r6, r3, #1
   1a08c:	cmp	r6, #0
   1a090:	beq	19e88 <fts_children@@Base+0x2588>
   1a094:	mov	r6, #0
   1a098:	sub	r0, r0, #1
   1a09c:	mov	r1, r6
   1a0a0:	add	sp, sp, #12
   1a0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0a8:	lsl	r4, r4, r3
   1a0ac:	rsb	r9, r3, #32
   1a0b0:	lsr	r2, r5, r9
   1a0b4:	lsr	r9, r6, r9
   1a0b8:	lsr	r8, r4, #16
   1a0bc:	orr	r9, r9, r5, lsl r3
   1a0c0:	mov	r0, r2
   1a0c4:	lsl	r7, r6, r3
   1a0c8:	mov	r1, r8
   1a0cc:	str	r2, [sp]
   1a0d0:	bl	19638 <fts_children@@Base+0x1d38>
   1a0d4:	ldr	r2, [sp]
   1a0d8:	mov	r1, r8
   1a0dc:	uxth	sl, r4
   1a0e0:	mov	fp, r0
   1a0e4:	mov	r0, r2
   1a0e8:	bl	19824 <fts_children@@Base+0x1f24>
   1a0ec:	mul	r0, sl, fp
   1a0f0:	lsr	r3, r9, #16
   1a0f4:	orr	r1, r3, r1, lsl #16
   1a0f8:	cmp	r0, r1
   1a0fc:	bls	1a11c <fts_children@@Base+0x281c>
   1a100:	adds	r1, r1, r4
   1a104:	sub	r3, fp, #1
   1a108:	bcs	1a1bc <fts_children@@Base+0x28bc>
   1a10c:	cmp	r0, r1
   1a110:	subhi	fp, fp, #2
   1a114:	addhi	r1, r1, r4
   1a118:	bls	1a1bc <fts_children@@Base+0x28bc>
   1a11c:	rsb	r5, r0, r1
   1a120:	mov	r1, r8
   1a124:	uxth	r9, r9
   1a128:	mov	r0, r5
   1a12c:	bl	19638 <fts_children@@Base+0x1d38>
   1a130:	mov	r1, r8
   1a134:	mov	r6, r0
   1a138:	mov	r0, r5
   1a13c:	bl	19824 <fts_children@@Base+0x1f24>
   1a140:	mul	r5, sl, r6
   1a144:	orr	r1, r9, r1, lsl #16
   1a148:	cmp	r5, r1
   1a14c:	bls	1a170 <fts_children@@Base+0x2870>
   1a150:	adds	r1, r1, r4
   1a154:	sub	r3, r6, #1
   1a158:	bcs	1a16c <fts_children@@Base+0x286c>
   1a15c:	cmp	r5, r1
   1a160:	subhi	r6, r6, #2
   1a164:	addhi	r1, r1, r4
   1a168:	bhi	1a170 <fts_children@@Base+0x2870>
   1a16c:	mov	r6, r3
   1a170:	rsb	r5, r5, r1
   1a174:	orr	r6, r6, fp, lsl #16
   1a178:	b	19f04 <fts_children@@Base+0x2604>
   1a17c:	mov	r6, r3
   1a180:	b	19e80 <fts_children@@Base+0x2580>
   1a184:	mov	r9, r2
   1a188:	b	19f50 <fts_children@@Base+0x2650>
   1a18c:	mov	r5, r3
   1a190:	b	19f9c <fts_children@@Base+0x269c>
   1a194:	cmp	sl, r1
   1a198:	subhi	fp, fp, #2
   1a19c:	addhi	r1, r1, r8
   1a1a0:	bhi	1a060 <fts_children@@Base+0x2760>
   1a1a4:	b	1a05c <fts_children@@Base+0x275c>
   1a1a8:	cmp	r0, r1
   1a1ac:	subhi	r4, r4, #2
   1a1b0:	addhi	r1, r1, r8
   1a1b4:	bhi	1a014 <fts_children@@Base+0x2714>
   1a1b8:	b	1a010 <fts_children@@Base+0x2710>
   1a1bc:	mov	fp, r3
   1a1c0:	b	1a11c <fts_children@@Base+0x281c>
   1a1c4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a1c8:	mov	r7, r0
   1a1cc:	ldr	r6, [pc, #76]	; 1a220 <fts_children@@Base+0x2920>
   1a1d0:	mov	r8, r1
   1a1d4:	ldr	r5, [pc, #72]	; 1a224 <fts_children@@Base+0x2924>
   1a1d8:	mov	r9, r2
   1a1dc:	add	r6, pc, r6
   1a1e0:	bl	11324 <fdopen@plt-0x20>
   1a1e4:	add	r5, pc, r5
   1a1e8:	rsb	r6, r5, r6
   1a1ec:	asrs	r6, r6, #2
   1a1f0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a1f4:	sub	r5, r5, #4
   1a1f8:	mov	r4, #0
   1a1fc:	add	r4, r4, #1
   1a200:	ldr	r3, [r5, #4]!
   1a204:	mov	r0, r7
   1a208:	mov	r1, r8
   1a20c:	mov	r2, r9
   1a210:	blx	r3
   1a214:	cmp	r4, r6
   1a218:	bne	1a1fc <fts_children@@Base+0x28fc>
   1a21c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a220:	andeq	r1, r1, r8, lsr #24
   1a224:	andeq	r1, r1, ip, lsl ip
   1a228:	bx	lr
   1a22c:	ldr	r3, [pc, #28]	; 1a250 <fts_children@@Base+0x2950>
   1a230:	mov	r1, #0
   1a234:	ldr	r2, [pc, #24]	; 1a254 <fts_children@@Base+0x2954>
   1a238:	add	r3, pc, r3
   1a23c:	ldr	r3, [r3, r2]
   1a240:	cmp	r3, #0
   1a244:	ldrne	r2, [r3]
   1a248:	moveq	r2, r3
   1a24c:	b	11584 <__cxa_atexit@plt>
   1a250:	andeq	r1, r1, r0, asr #27
   1a254:	andeq	r0, r0, ip, asr r1

Disassembly of section .fini:

0001a258 <.fini>:
   1a258:	push	{r3, lr}
   1a25c:	pop	{r3, pc}
