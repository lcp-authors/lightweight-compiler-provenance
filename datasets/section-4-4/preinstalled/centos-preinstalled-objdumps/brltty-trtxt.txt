
centos-preinstalled/brltty-trtxt:     file format elf32-littlearm


Disassembly of section .init:

00014728 <_init@@Base>:
   14728:	push	{r3, lr}
   1472c:	bl	15048 <_start@@Base+0x3c>
   14730:	pop	{r3, pc}

Disassembly of section .plt:

00014734 <chdir@plt-0x14>:
   14734:	push	{lr}		; (str lr, [sp, #-4]!)
   14738:	ldr	lr, [pc, #4]	; 14744 <_init@@Base+0x1c>
   1473c:	add	lr, pc, lr
   14740:	ldr	pc, [lr, #8]!
   14744:			; <UNDEFINED> instruction: 0x0001f8bc

00014748 <chdir@plt>:
   14748:	add	ip, pc, #0, 12
   1474c:	add	ip, ip, #126976	; 0x1f000
   14750:	ldr	pc, [ip, #2236]!	; 0x8bc

00014754 <pthread_mutex_lock@plt>:
   14754:	add	ip, pc, #0, 12
   14758:	add	ip, ip, #126976	; 0x1f000
   1475c:	ldr	pc, [ip, #2228]!	; 0x8b4

00014760 <localtime_r@plt>:
   14760:	add	ip, pc, #0, 12
   14764:	add	ip, ip, #126976	; 0x1f000
   14768:	ldr	pc, [ip, #2220]!	; 0x8ac

0001476c <wcslen@plt>:
   1476c:	add	ip, pc, #0, 12
   14770:	add	ip, ip, #126976	; 0x1f000
   14774:	ldr	pc, [ip, #2212]!	; 0x8a4

00014778 <towlower@plt>:
   14778:	add	ip, pc, #0, 12
   1477c:	add	ip, ip, #126976	; 0x1f000
   14780:	ldr	pc, [ip, #2204]!	; 0x89c

00014784 <ftruncate@plt>:
   14784:	add	ip, pc, #0, 12
   14788:	add	ip, ip, #126976	; 0x1f000
   1478c:	ldr	pc, [ip, #2196]!	; 0x894

00014790 <iswspace@plt>:
   14790:	add	ip, pc, #0, 12
   14794:	add	ip, ip, #126976	; 0x1f000
   14798:	ldr	pc, [ip, #2188]!	; 0x88c

0001479c <getpid@plt>:
   1479c:	add	ip, pc, #0, 12
   147a0:	add	ip, ip, #126976	; 0x1f000
   147a4:	ldr	pc, [ip, #2180]!	; 0x884

000147a8 <__memcpy_chk@plt>:
   147a8:	add	ip, pc, #0, 12
   147ac:	add	ip, ip, #126976	; 0x1f000
   147b0:	ldr	pc, [ip, #2172]!	; 0x87c

000147b4 <mbrtowc@plt>:
   147b4:	add	ip, pc, #0, 12
   147b8:	add	ip, ip, #126976	; 0x1f000
   147bc:	ldr	pc, [ip, #2164]!	; 0x874

000147c0 <pthread_rwlock_destroy@plt>:
   147c0:	add	ip, pc, #0, 12
   147c4:	add	ip, ip, #126976	; 0x1f000
   147c8:	ldr	pc, [ip, #2156]!	; 0x86c

000147cc <dlerror@plt>:
   147cc:	add	ip, pc, #0, 12
   147d0:	add	ip, ip, #126976	; 0x1f000
   147d4:	ldr	pc, [ip, #2148]!	; 0x864

000147d8 <gettimeofday@plt>:
   147d8:	add	ip, pc, #0, 12
   147dc:	add	ip, ip, #126976	; 0x1f000
   147e0:	ldr	pc, [ip, #2140]!	; 0x85c

000147e4 <strcasecmp@plt>:
   147e4:	add	ip, pc, #0, 12
   147e8:	add	ip, ip, #126976	; 0x1f000
   147ec:	ldr	pc, [ip, #2132]!	; 0x854

000147f0 <strtol@plt>:
   147f0:	add	ip, pc, #0, 12
   147f4:	add	ip, ip, #126976	; 0x1f000
   147f8:	ldr	pc, [ip, #2124]!	; 0x84c

000147fc <free@plt>:
   147fc:	add	ip, pc, #0, 12
   14800:	add	ip, ip, #126976	; 0x1f000
   14804:	ldr	pc, [ip, #2116]!	; 0x844

00014808 <__gcc_personality_v0@plt>:
   14808:	add	ip, pc, #0, 12
   1480c:	add	ip, ip, #126976	; 0x1f000
   14810:	ldr	pc, [ip, #2108]!	; 0x83c

00014814 <strncmp@plt>:
   14814:	add	ip, pc, #0, 12
   14818:	add	ip, ip, #126976	; 0x1f000
   1481c:	ldr	pc, [ip, #2100]!	; 0x834

00014820 <mbstowcs@plt>:
   14820:	add	ip, pc, #0, 12
   14824:	add	ip, ip, #126976	; 0x1f000
   14828:	ldr	pc, [ip, #2092]!	; 0x82c

0001482c <__open_2@plt>:
   1482c:	add	ip, pc, #0, 12
   14830:	add	ip, ip, #126976	; 0x1f000
   14834:	ldr	pc, [ip, #2084]!	; 0x824

00014838 <strerror@plt>:
   14838:	add	ip, pc, #0, 12
   1483c:	add	ip, ip, #126976	; 0x1f000
   14840:	ldr	pc, [ip, #2076]!	; 0x81c

00014844 <__xmknod@plt>:
   14844:	add	ip, pc, #0, 12
   14848:	add	ip, ip, #126976	; 0x1f000
   1484c:	ldr	pc, [ip, #2068]!	; 0x814

00014850 <__vsnprintf_chk@plt>:
   14850:	add	ip, pc, #0, 12
   14854:	add	ip, ip, #126976	; 0x1f000
   14858:	ldr	pc, [ip, #2060]!	; 0x80c

0001485c <dlclose@plt>:
   1485c:	add	ip, pc, #0, 12
   14860:	add	ip, ip, #126976	; 0x1f000
   14864:	ldr	pc, [ip, #2052]!	; 0x804

00014868 <feof@plt>:
   14868:	add	ip, pc, #0, 12
   1486c:	add	ip, ip, #126976	; 0x1f000
   14870:	ldr	pc, [ip, #2044]!	; 0x7fc

00014874 <strtok@plt>:
   14874:	add	ip, pc, #0, 12
   14878:	add	ip, ip, #126976	; 0x1f000
   1487c:	ldr	pc, [ip, #2036]!	; 0x7f4

00014880 <nl_langinfo@plt>:
   14880:	add	ip, pc, #0, 12
   14884:	add	ip, ip, #126976	; 0x1f000
   14888:	ldr	pc, [ip, #2028]!	; 0x7ec

0001488c <wmemcpy@plt>:
   1488c:	add	ip, pc, #0, 12
   14890:	add	ip, ip, #126976	; 0x1f000
   14894:	ldr	pc, [ip, #2020]!	; 0x7e4

00014898 <textdomain@plt>:
   14898:	add	ip, pc, #0, 12
   1489c:	add	ip, ip, #126976	; 0x1f000
   148a0:	ldr	pc, [ip, #2012]!	; 0x7dc

000148a4 <readlink@plt>:
   148a4:	add	ip, pc, #0, 12
   148a8:	add	ip, ip, #126976	; 0x1f000
   148ac:	ldr	pc, [ip, #2004]!	; 0x7d4

000148b0 <__fprintf_chk@plt>:
   148b0:	add	ip, pc, #0, 12
   148b4:	add	ip, ip, #126976	; 0x1f000
   148b8:	ldr	pc, [ip, #1996]!	; 0x7cc

000148bc <strtoul@plt>:
   148bc:	add	ip, pc, #0, 12
   148c0:	add	ip, ip, #126976	; 0x1f000
   148c4:	ldr	pc, [ip, #1988]!	; 0x7c4

000148c8 <nanosleep@plt>:
   148c8:	add	ip, pc, #0, 12
   148cc:	add	ip, ip, #126976	; 0x1f000
   148d0:	ldr	pc, [ip, #1980]!	; 0x7bc

000148d4 <strftime@plt>:
   148d4:	add	ip, pc, #0, 12
   148d8:	add	ip, ip, #126976	; 0x1f000
   148dc:	ldr	pc, [ip, #1972]!	; 0x7b4

000148e0 <memset@plt>:
   148e0:	add	ip, pc, #0, 12
   148e4:	add	ip, ip, #126976	; 0x1f000
   148e8:	ldr	pc, [ip, #1964]!	; 0x7ac

000148ec <closelog@plt>:
   148ec:	add	ip, pc, #0, 12
   148f0:	add	ip, ip, #126976	; 0x1f000
   148f4:	ldr	pc, [ip, #1956]!	; 0x7a4

000148f8 <fcntl@plt>:
   148f8:	add	ip, pc, #0, 12
   148fc:	add	ip, ip, #126976	; 0x1f000
   14900:	ldr	pc, [ip, #1948]!	; 0x79c

00014904 <pthread_rwlock_rdlock@plt>:
   14904:	add	ip, pc, #0, 12
   14908:	add	ip, ip, #126976	; 0x1f000
   1490c:	ldr	pc, [ip, #1940]!	; 0x794

00014910 <wcschr@plt>:
   14910:	add	ip, pc, #0, 12
   14914:	add	ip, ip, #126976	; 0x1f000
   14918:	ldr	pc, [ip, #1932]!	; 0x78c

0001491c <snprintf@plt>:
   1491c:	add	ip, pc, #0, 12
   14920:	add	ip, ip, #126976	; 0x1f000
   14924:	ldr	pc, [ip, #1924]!	; 0x784

00014928 <__strdup@plt>:
   14928:	add	ip, pc, #0, 12
   1492c:	add	ip, ip, #126976	; 0x1f000
   14930:	ldr	pc, [ip, #1916]!	; 0x77c

00014934 <sigaddset@plt>:
   14934:	add	ip, pc, #0, 12
   14938:	add	ip, ip, #126976	; 0x1f000
   1493c:	ldr	pc, [ip, #1908]!	; 0x774

00014940 <close@plt>:
   14940:	add	ip, pc, #0, 12
   14944:	add	ip, ip, #126976	; 0x1f000
   14948:	ldr	pc, [ip, #1900]!	; 0x76c

0001494c <wmemcmp@plt>:
   1494c:	add	ip, pc, #0, 12
   14950:	add	ip, ip, #126976	; 0x1f000
   14954:	ldr	pc, [ip, #1892]!	; 0x764

00014958 <fopen@plt>:
   14958:	add	ip, pc, #0, 12
   1495c:	add	ip, ip, #126976	; 0x1f000
   14960:	ldr	pc, [ip, #1884]!	; 0x75c

00014964 <read@plt>:
   14964:	add	ip, pc, #0, 12
   14968:	add	ip, ip, #126976	; 0x1f000
   1496c:	ldr	pc, [ip, #1876]!	; 0x754

00014970 <wmemchr@plt>:
   14970:	add	ip, pc, #0, 12
   14974:	add	ip, ip, #126976	; 0x1f000
   14978:	ldr	pc, [ip, #1868]!	; 0x74c

0001497c <abort@plt>:
   1497c:	add	ip, pc, #0, 12
   14980:	add	ip, ip, #126976	; 0x1f000
   14984:	ldr	pc, [ip, #1860]!	; 0x744

00014988 <poll@plt>:
   14988:	add	ip, pc, #0, 12
   1498c:	add	ip, ip, #126976	; 0x1f000
   14990:	ldr	pc, [ip, #1852]!	; 0x73c

00014994 <__ctype_toupper_loc@plt>:
   14994:	add	ip, pc, #0, 12
   14998:	add	ip, ip, #126976	; 0x1f000
   1499c:	ldr	pc, [ip, #1844]!	; 0x734

000149a0 <dlopen@plt>:
   149a0:	add	ip, pc, #0, 12
   149a4:	add	ip, ip, #126976	; 0x1f000
   149a8:	ldr	pc, [ip, #1836]!	; 0x72c

000149ac <kill@plt>:
   149ac:	add	ip, pc, #0, 12
   149b0:	add	ip, ip, #126976	; 0x1f000
   149b4:	ldr	pc, [ip, #1828]!	; 0x724

000149b8 <u_getIntPropertyValue_50@plt>:
   149b8:	add	ip, pc, #0, 12
   149bc:	add	ip, ip, #126976	; 0x1f000
   149c0:	ldr	pc, [ip, #1820]!	; 0x71c

000149c4 <ioctl@plt>:
   149c4:	add	ip, pc, #0, 12
   149c8:	add	ip, ip, #126976	; 0x1f000
   149cc:	ldr	pc, [ip, #1812]!	; 0x714

000149d0 <clock_gettime@plt>:
   149d0:	add	ip, pc, #0, 12
   149d4:	add	ip, ip, #126976	; 0x1f000
   149d8:	ldr	pc, [ip, #1804]!	; 0x70c

000149dc <realloc@plt>:
   149dc:	add	ip, pc, #0, 12
   149e0:	add	ip, ip, #126976	; 0x1f000
   149e4:	ldr	pc, [ip, #1796]!	; 0x704

000149e8 <u_charFromName_50@plt>:
   149e8:	add	ip, pc, #0, 12
   149ec:	add	ip, ip, #126976	; 0x1f000
   149f0:	ldr	pc, [ip, #1788]!	; 0x6fc

000149f4 <unorm_normalize_50@plt>:
   149f4:	add	ip, pc, #0, 12
   149f8:	add	ip, ip, #126976	; 0x1f000
   149fc:	ldr	pc, [ip, #1780]!	; 0x6f4

00014a00 <strtod@plt>:
   14a00:	add	ip, pc, #0, 12
   14a04:	add	ip, ip, #126976	; 0x1f000
   14a08:	ldr	pc, [ip, #1772]!	; 0x6ec

00014a0c <open@plt>:
   14a0c:	add	ip, pc, #0, 12
   14a10:	add	ip, ip, #126976	; 0x1f000
   14a14:	ldr	pc, [ip, #1764]!	; 0x6e4

00014a18 <waitpid@plt>:
   14a18:	add	ip, pc, #0, 12
   14a1c:	add	ip, ip, #126976	; 0x1f000
   14a20:	ldr	pc, [ip, #1756]!	; 0x6dc

00014a24 <fread@plt>:
   14a24:	add	ip, pc, #0, 12
   14a28:	add	ip, ip, #126976	; 0x1f000
   14a2c:	ldr	pc, [ip, #1748]!	; 0x6d4

00014a30 <fileno@plt>:
   14a30:	add	ip, pc, #0, 12
   14a34:	add	ip, ip, #126976	; 0x1f000
   14a38:	ldr	pc, [ip, #1740]!	; 0x6cc

00014a3c <pthread_rwlock_unlock@plt>:
   14a3c:	add	ip, pc, #0, 12
   14a40:	add	ip, ip, #126976	; 0x1f000
   14a44:	ldr	pc, [ip, #1732]!	; 0x6c4

00014a48 <__syslog_chk@plt>:
   14a48:	add	ip, pc, #0, 12
   14a4c:	add	ip, ip, #126976	; 0x1f000
   14a50:	ldr	pc, [ip, #1724]!	; 0x6bc

00014a54 <pthread_rwlock_wrlock@plt>:
   14a54:	add	ip, pc, #0, 12
   14a58:	add	ip, ip, #126976	; 0x1f000
   14a5c:	ldr	pc, [ip, #1716]!	; 0x6b4

00014a60 <__stack_chk_fail@plt>:
   14a60:	add	ip, pc, #0, 12
   14a64:	add	ip, ip, #126976	; 0x1f000
   14a68:	ldr	pc, [ip, #1708]!	; 0x6ac

00014a6c <pthread_rwlock_tryrdlock@plt>:
   14a6c:	add	ip, pc, #0, 12
   14a70:	add	ip, ip, #126976	; 0x1f000
   14a74:	ldr	pc, [ip, #1700]!	; 0x6a4

00014a78 <fork@plt>:
   14a78:	add	ip, pc, #0, 12
   14a7c:	add	ip, ip, #126976	; 0x1f000
   14a80:	ldr	pc, [ip, #1692]!	; 0x69c

00014a84 <access@plt>:
   14a84:	add	ip, pc, #0, 12
   14a88:	add	ip, ip, #126976	; 0x1f000
   14a8c:	ldr	pc, [ip, #1684]!	; 0x694

00014a90 <dcgettext@plt>:
   14a90:	add	ip, pc, #0, 12
   14a94:	add	ip, ip, #126976	; 0x1f000
   14a98:	ldr	pc, [ip, #1676]!	; 0x68c

00014a9c <mkdir@plt>:
   14a9c:	add	ip, pc, #0, 12
   14aa0:	add	ip, ip, #126976	; 0x1f000
   14aa4:	ldr	pc, [ip, #1668]!	; 0x684

00014aa8 <__cxa_atexit@plt>:
   14aa8:	add	ip, pc, #0, 12
   14aac:	add	ip, ip, #126976	; 0x1f000
   14ab0:	ldr	pc, [ip, #1660]!	; 0x67c

00014ab4 <strncasecmp@plt>:
   14ab4:	add	ip, pc, #0, 12
   14ab8:	add	ip, ip, #126976	; 0x1f000
   14abc:	ldr	pc, [ip, #1652]!	; 0x674

00014ac0 <getopt_long@plt>:
   14ac0:	add	ip, pc, #0, 12
   14ac4:	add	ip, ip, #126976	; 0x1f000
   14ac8:	ldr	pc, [ip, #1644]!	; 0x66c

00014acc <lseek@plt>:
   14acc:	add	ip, pc, #0, 12
   14ad0:	add	ip, ip, #126976	; 0x1f000
   14ad4:	ldr	pc, [ip, #1636]!	; 0x664

00014ad8 <raise@plt>:
   14ad8:	add	ip, pc, #0, 12
   14adc:	add	ip, ip, #126976	; 0x1f000
   14ae0:	ldr	pc, [ip, #1628]!	; 0x65c

00014ae4 <__ctype_b_loc@plt>:
   14ae4:	add	ip, pc, #0, 12
   14ae8:	add	ip, ip, #126976	; 0x1f000
   14aec:	ldr	pc, [ip, #1620]!	; 0x654

00014af0 <bindtextdomain@plt>:
   14af0:	add	ip, pc, #0, 12
   14af4:	add	ip, ip, #126976	; 0x1f000
   14af8:	ldr	pc, [ip, #1612]!	; 0x64c

00014afc <sysconf@plt>:
   14afc:	add	ip, pc, #0, 12
   14b00:	add	ip, ip, #126976	; 0x1f000
   14b04:	ldr	pc, [ip, #1604]!	; 0x644

00014b08 <calloc@plt>:
   14b08:	add	ip, pc, #0, 12
   14b0c:	add	ip, ip, #126976	; 0x1f000
   14b10:	ldr	pc, [ip, #1596]!	; 0x63c

00014b14 <setlocale@plt>:
   14b14:	add	ip, pc, #0, 12
   14b18:	add	ip, ip, #126976	; 0x1f000
   14b1c:	ldr	pc, [ip, #1588]!	; 0x634

00014b20 <ferror@plt>:
   14b20:	add	ip, pc, #0, 12
   14b24:	add	ip, ip, #126976	; 0x1f000
   14b28:	ldr	pc, [ip, #1580]!	; 0x62c

00014b2c <iconv_close@plt>:
   14b2c:	add	ip, pc, #0, 12
   14b30:	add	ip, ip, #126976	; 0x1f000
   14b34:	ldr	pc, [ip, #1572]!	; 0x624

00014b38 <fgets@plt>:
   14b38:	add	ip, pc, #0, 12
   14b3c:	add	ip, ip, #126976	; 0x1f000
   14b40:	ldr	pc, [ip, #1564]!	; 0x61c

00014b44 <__fxstat@plt>:
   14b44:	add	ip, pc, #0, 12
   14b48:	add	ip, ip, #126976	; 0x1f000
   14b4c:	ldr	pc, [ip, #1556]!	; 0x614

00014b50 <fputc@plt>:
   14b50:	add	ip, pc, #0, 12
   14b54:	add	ip, ip, #126976	; 0x1f000
   14b58:	ldr	pc, [ip, #1548]!	; 0x60c

00014b5c <fwrite@plt>:
   14b5c:	add	ip, pc, #0, 12
   14b60:	add	ip, ip, #126976	; 0x1f000
   14b64:	ldr	pc, [ip, #1540]!	; 0x604

00014b68 <memcpy@plt>:
   14b68:	add	ip, pc, #0, 12
   14b6c:	add	ip, ip, #126976	; 0x1f000
   14b70:	ldr	pc, [ip, #1532]!	; 0x5fc

00014b74 <malloc@plt>:
   14b74:	add	ip, pc, #0, 12
   14b78:	add	ip, ip, #126976	; 0x1f000
   14b7c:	ldr	pc, [ip, #1524]!	; 0x5f4

00014b80 <strlen@plt>:
   14b80:	add	ip, pc, #0, 12
   14b84:	add	ip, ip, #126976	; 0x1f000
   14b88:	ldr	pc, [ip, #1516]!	; 0x5ec

00014b8c <__snprintf_chk@plt>:
   14b8c:	add	ip, pc, #0, 12
   14b90:	add	ip, ip, #126976	; 0x1f000
   14b94:	ldr	pc, [ip, #1508]!	; 0x5e4

00014b98 <ioperm@plt>:
   14b98:	add	ip, pc, #0, 12
   14b9c:	add	ip, ip, #126976	; 0x1f000
   14ba0:	ldr	pc, [ip, #1500]!	; 0x5dc

00014ba4 <outb@plt>:
   14ba4:	add	ip, pc, #0, 12
   14ba8:	add	ip, ip, #126976	; 0x1f000
   14bac:	ldr	pc, [ip, #1492]!	; 0x5d4

00014bb0 <getcwd@plt>:
   14bb0:	add	ip, pc, #0, 12
   14bb4:	add	ip, ip, #126976	; 0x1f000
   14bb8:	ldr	pc, [ip, #1484]!	; 0x5cc

00014bbc <fclose@plt>:
   14bbc:	add	ip, pc, #0, 12
   14bc0:	add	ip, ip, #126976	; 0x1f000
   14bc4:	ldr	pc, [ip, #1476]!	; 0x5c4

00014bc8 <write@plt>:
   14bc8:	add	ip, pc, #0, 12
   14bcc:	add	ip, ip, #126976	; 0x1f000
   14bd0:	ldr	pc, [ip, #1468]!	; 0x5bc

00014bd4 <inb@plt>:
   14bd4:	add	ip, pc, #0, 12
   14bd8:	add	ip, ip, #126976	; 0x1f000
   14bdc:	ldr	pc, [ip, #1460]!	; 0x5b4

00014be0 <mempcpy@plt>:
   14be0:	add	ip, pc, #0, 12
   14be4:	add	ip, ip, #126976	; 0x1f000
   14be8:	ldr	pc, [ip, #1452]!	; 0x5ac

00014bec <__xstat@plt>:
   14bec:	add	ip, pc, #0, 12
   14bf0:	add	ip, ip, #126976	; 0x1f000
   14bf4:	ldr	pc, [ip, #1444]!	; 0x5a4

00014bf8 <pthread_rwlock_trywrlock@plt>:
   14bf8:	add	ip, pc, #0, 12
   14bfc:	add	ip, ip, #126976	; 0x1f000
   14c00:	ldr	pc, [ip, #1436]!	; 0x59c

00014c04 <__realpath_chk@plt>:
   14c04:	add	ip, pc, #0, 12
   14c08:	add	ip, ip, #126976	; 0x1f000
   14c0c:	ldr	pc, [ip, #1428]!	; 0x594

00014c10 <iconv_open@plt>:
   14c10:	add	ip, pc, #0, 12
   14c14:	add	ip, ip, #126976	; 0x1f000
   14c18:	ldr	pc, [ip, #1420]!	; 0x58c

00014c1c <pthread_rwlock_init@plt>:
   14c1c:	add	ip, pc, #0, 12
   14c20:	add	ip, ip, #126976	; 0x1f000
   14c24:	ldr	pc, [ip, #1412]!	; 0x584

00014c28 <_exit@plt>:
   14c28:	add	ip, pc, #0, 12
   14c2c:	add	ip, ip, #126976	; 0x1f000
   14c30:	ldr	pc, [ip, #1404]!	; 0x57c

00014c34 <strcmp@plt>:
   14c34:	add	ip, pc, #0, 12
   14c38:	add	ip, ip, #126976	; 0x1f000
   14c3c:	ldr	pc, [ip, #1396]!	; 0x574

00014c40 <iconv@plt>:
   14c40:	add	ip, pc, #0, 12
   14c44:	add	ip, ip, #126976	; 0x1f000
   14c48:	ldr	pc, [ip, #1388]!	; 0x56c

00014c4c <__errno_location@plt>:
   14c4c:	add	ip, pc, #0, 12
   14c50:	add	ip, ip, #126976	; 0x1f000
   14c54:	ldr	pc, [ip, #1380]!	; 0x564

00014c58 <mount@plt>:
   14c58:	add	ip, pc, #0, 12
   14c5c:	add	ip, ip, #126976	; 0x1f000
   14c60:	ldr	pc, [ip, #1372]!	; 0x55c

00014c64 <memchr@plt>:
   14c64:	add	ip, pc, #0, 12
   14c68:	add	ip, ip, #126976	; 0x1f000
   14c6c:	ldr	pc, [ip, #1364]!	; 0x554

00014c70 <sscanf@plt>:
   14c70:	add	ip, pc, #0, 12
   14c74:	add	ip, ip, #126976	; 0x1f000
   14c78:	ldr	pc, [ip, #1356]!	; 0x54c

00014c7c <strncpy@plt>:
   14c7c:	add	ip, pc, #0, 12
   14c80:	add	ip, ip, #126976	; 0x1f000
   14c84:	ldr	pc, [ip, #1348]!	; 0x544

00014c88 <fflush@plt>:
   14c88:	add	ip, pc, #0, 12
   14c8c:	add	ip, ip, #126976	; 0x1f000
   14c90:	ldr	pc, [ip, #1340]!	; 0x53c

00014c94 <_Unwind_Resume@plt>:
   14c94:	add	ip, pc, #0, 12
   14c98:	add	ip, ip, #126976	; 0x1f000
   14c9c:	ldr	pc, [ip, #1332]!	; 0x534

00014ca0 <memcmp@plt>:
   14ca0:	add	ip, pc, #0, 12
   14ca4:	add	ip, ip, #126976	; 0x1f000
   14ca8:	ldr	pc, [ip, #1324]!	; 0x52c

00014cac <sigemptyset@plt>:
   14cac:	add	ip, pc, #0, 12
   14cb0:	add	ip, ip, #126976	; 0x1f000
   14cb4:	ldr	pc, [ip, #1316]!	; 0x524

00014cb8 <strrchr@plt>:
   14cb8:	add	ip, pc, #0, 12
   14cbc:	add	ip, ip, #126976	; 0x1f000
   14cc0:	ldr	pc, [ip, #1308]!	; 0x51c

00014cc4 <mktime@plt>:
   14cc4:	add	ip, pc, #0, 12
   14cc8:	add	ip, ip, #126976	; 0x1f000
   14ccc:	ldr	pc, [ip, #1300]!	; 0x514

00014cd0 <openlog@plt>:
   14cd0:	add	ip, pc, #0, 12
   14cd4:	add	ip, ip, #126976	; 0x1f000
   14cd8:	ldr	pc, [ip, #1292]!	; 0x50c

00014cdc <fputs@plt>:
   14cdc:	add	ip, pc, #0, 12
   14ce0:	add	ip, ip, #126976	; 0x1f000
   14ce4:	ldr	pc, [ip, #1284]!	; 0x504

00014ce8 <getenv@plt>:
   14ce8:	add	ip, pc, #0, 12
   14cec:	add	ip, ip, #126976	; 0x1f000
   14cf0:	ldr	pc, [ip, #1276]!	; 0x4fc

00014cf4 <__libc_start_main@plt>:
   14cf4:	add	ip, pc, #0, 12
   14cf8:	add	ip, ip, #126976	; 0x1f000
   14cfc:	ldr	pc, [ip, #1268]!	; 0x4f4

00014d00 <dlsym@plt>:
   14d00:	add	ip, pc, #0, 12
   14d04:	add	ip, ip, #126976	; 0x1f000
   14d08:	ldr	pc, [ip, #1260]!	; 0x4ec

00014d0c <execvp@plt>:
   14d0c:	add	ip, pc, #0, 12
   14d10:	add	ip, ip, #126976	; 0x1f000
   14d14:	ldr	pc, [ip, #1252]!	; 0x4e4

00014d18 <__gmon_start__@plt>:
   14d18:	add	ip, pc, #0, 12
   14d1c:	add	ip, ip, #126976	; 0x1f000
   14d20:	ldr	pc, [ip, #1244]!	; 0x4dc

00014d24 <sigprocmask@plt>:
   14d24:	add	ip, pc, #0, 12
   14d28:	add	ip, ip, #126976	; 0x1f000
   14d2c:	ldr	pc, [ip, #1236]!	; 0x4d4

00014d30 <mbsinit@plt>:
   14d30:	add	ip, pc, #0, 12
   14d34:	add	ip, ip, #126976	; 0x1f000
   14d38:	ldr	pc, [ip, #1228]!	; 0x4cc

00014d3c <strchr@plt>:
   14d3c:	add	ip, pc, #0, 12
   14d40:	add	ip, ip, #126976	; 0x1f000
   14d44:	ldr	pc, [ip, #1220]!	; 0x4c4

00014d48 <pthread_mutex_unlock@plt>:
   14d48:	add	ip, pc, #0, 12
   14d4c:	add	ip, ip, #126976	; 0x1f000
   14d50:	ldr	pc, [ip, #1212]!	; 0x4bc

00014d54 <wcrtomb@plt>:
   14d54:	add	ip, pc, #0, 12
   14d58:	add	ip, ip, #126976	; 0x1f000
   14d5c:	ldr	pc, [ip, #1204]!	; 0x4b4

00014d60 <iswcntrl@plt>:
   14d60:	add	ip, pc, #0, 12
   14d64:	add	ip, ip, #126976	; 0x1f000
   14d68:	ldr	pc, [ip, #1196]!	; 0x4ac

Disassembly of section .text:

00014d6c <main@@Base>:
   14d6c:	push	{r4, r5, r6, r7, r8, lr}
   14d70:	movw	r4, #17064	; 0x42a8
   14d74:	movt	r4, #3
   14d78:	sub	sp, sp, #24
   14d7c:	ldr	r3, [r4]
   14d80:	mov	r2, sp
   14d84:	str	r0, [sp, #4]
   14d88:	str	r1, [sp]
   14d8c:	add	r1, sp, #4
   14d90:	ldr	r0, [pc, #620]	; 15004 <main@@Base+0x298>
   14d94:	str	r3, [sp, #20]
   14d98:	bl	164ec <processOptions@@Base>
   14d9c:	cmp	r0, #1
   14da0:	mov	r5, r0
   14da4:	moveq	r0, #0
   14da8:	beq	14db8 <main@@Base+0x4c>
   14dac:	cmp	r5, #0
   14db0:	beq	14dd0 <main@@Base+0x64>
   14db4:	mov	r0, r5
   14db8:	ldr	r2, [sp, #20]
   14dbc:	ldr	r3, [r4]
   14dc0:	cmp	r2, r3
   14dc4:	bne	15000 <main@@Base+0x294>
   14dc8:	add	sp, sp, #24
   14dcc:	pop	{r4, r5, r6, r7, r8, pc}
   14dd0:	movw	r6, #17076	; 0x42b4
   14dd4:	movt	r6, #3
   14dd8:	add	r0, sp, #12
   14ddc:	add	r3, r6, #28
   14de0:	str	r5, [sp, #16]
   14de4:	str	r3, [sp, #12]
   14de8:	bl	1584c <fixInstallPaths@@Base>
   14dec:	ldr	r7, [r6, #32]
   14df0:	ldr	r1, [pc, #528]	; 15008 <main@@Base+0x29c>
   14df4:	str	r5, [r6, #4]
   14df8:	mov	r0, r7
   14dfc:	ldr	r5, [r6, #28]
   14e00:	bl	14c34 <strcmp@plt>
   14e04:	cmp	r0, #0
   14e08:	beq	14e28 <main@@Base+0xbc>
   14e0c:	mov	r1, r5
   14e10:	mov	r2, r7
   14e14:	add	r0, r6, #4
   14e18:	bl	1523c <_start@@Base+0x230>
   14e1c:	cmp	r0, #0
   14e20:	moveq	r5, #4
   14e24:	beq	14db4 <main@@Base+0x48>
   14e28:	ldr	r5, [r6, #36]	; 0x24
   14e2c:	mov	r3, #0
   14e30:	ldr	r1, [pc, #464]	; 15008 <main@@Base+0x29c>
   14e34:	str	r3, [r6]
   14e38:	mov	r0, r5
   14e3c:	ldr	r7, [r6, #28]
   14e40:	bl	14c34 <strcmp@plt>
   14e44:	cmp	r0, #0
   14e48:	beq	14e80 <main@@Base+0x114>
   14e4c:	mov	r2, r5
   14e50:	mov	r1, r7
   14e54:	movw	r0, #17076	; 0x42b4
   14e58:	movt	r0, #3
   14e5c:	bl	1523c <_start@@Base+0x230>
   14e60:	cmp	r0, #0
   14e64:	moveq	r5, #4
   14e68:	bne	14e80 <main@@Base+0x114>
   14e6c:	ldr	r0, [r6, #4]
   14e70:	cmp	r0, #0
   14e74:	beq	14db4 <main@@Base+0x48>
   14e78:	bl	1cb28 <destroyTextTable@@Base>
   14e7c:	b	14db4 <main@@Base+0x48>
   14e80:	ldr	r7, [r6, #4]
   14e84:	movw	r0, #20848	; 0x5170
   14e88:	ldr	r5, [r6]
   14e8c:	movt	r0, #1
   14e90:	cmp	r7, #0
   14e94:	movw	ip, #17068	; 0x42ac
   14e98:	movt	ip, #3
   14e9c:	ldr	lr, [sp, #4]
   14ea0:	movw	r1, #20800	; 0x5140
   14ea4:	movw	r3, #20828	; 0x515c
   14ea8:	movt	r1, #1
   14eac:	movt	r3, #1
   14eb0:	movne	r1, r0
   14eb4:	cmp	r5, #0
   14eb8:	ldr	ip, [ip]
   14ebc:	movw	r2, #20820	; 0x5154
   14ec0:	movt	r2, #1
   14ec4:	movne	r2, r3
   14ec8:	cmp	lr, #0
   14ecc:	movw	r3, #1200	; 0x4b0
   14ed0:	str	ip, [r6, #8]
   14ed4:	movt	r3, #2
   14ed8:	str	r1, [r6, #12]
   14edc:	str	r2, [r6, #20]
   14ee0:	str	r3, [r6, #24]
   14ee4:	beq	14fac <main@@Base+0x240>
   14ee8:	movw	r8, #17056	; 0x42a0
   14eec:	ldr	r3, [sp]
   14ef0:	movt	r8, #3
   14ef4:	b	14f30 <main@@Base+0x1c4>
   14ef8:	movw	r1, #1220	; 0x4c4
   14efc:	ldr	r0, [r8]
   14f00:	movt	r1, #2
   14f04:	bl	152dc <_start@@Base+0x2d0>
   14f08:	cmp	r0, #0
   14f0c:	beq	14f80 <main@@Base+0x214>
   14f10:	ldr	r2, [sp, #4]
   14f14:	ldr	r3, [sp]
   14f18:	sub	r2, r2, #1
   14f1c:	str	r2, [sp, #4]
   14f20:	cmp	r2, #0
   14f24:	add	r3, r3, #4
   14f28:	str	r3, [sp]
   14f2c:	beq	14fa4 <main@@Base+0x238>
   14f30:	ldr	r7, [r3]
   14f34:	movw	r1, #1240	; 0x4d8
   14f38:	movt	r1, #2
   14f3c:	mov	r0, r7
   14f40:	bl	14c34 <strcmp@plt>
   14f44:	cmp	r0, #0
   14f48:	beq	14ef8 <main@@Base+0x18c>
   14f4c:	movw	r1, #9152	; 0x23c0
   14f50:	mov	r0, r7
   14f54:	movt	r1, #2
   14f58:	bl	14958 <fopen@plt>
   14f5c:	subs	r5, r0, #0
   14f60:	beq	14fd4 <main@@Base+0x268>
   14f64:	mov	r1, r7
   14f68:	bl	152dc <_start@@Base+0x2d0>
   14f6c:	mov	r7, r0
   14f70:	mov	r0, r5
   14f74:	bl	14bbc <fclose@plt>
   14f78:	cmp	r7, #0
   14f7c:	bne	14f10 <main@@Base+0x1a4>
   14f80:	mov	r5, #4
   14f84:	ldr	r3, [sp, #4]
   14f88:	cmp	r3, #0
   14f8c:	beq	14fa4 <main@@Base+0x238>
   14f90:	ldr	r0, [r6]
   14f94:	cmp	r0, #0
   14f98:	beq	14e6c <main@@Base+0x100>
   14f9c:	bl	1cb28 <destroyTextTable@@Base>
   14fa0:	b	14e6c <main@@Base+0x100>
   14fa4:	mov	r5, #0
   14fa8:	b	14f90 <main@@Base+0x224>
   14fac:	movw	r3, #17056	; 0x42a0
   14fb0:	movt	r3, #3
   14fb4:	movw	r1, #1220	; 0x4c4
   14fb8:	movt	r1, #2
   14fbc:	ldr	r0, [r3]
   14fc0:	bl	152dc <_start@@Base+0x2d0>
   14fc4:	cmp	r0, #0
   14fc8:	bne	14fa4 <main@@Base+0x238>
   14fcc:	mov	r5, #4
   14fd0:	b	14f90 <main@@Base+0x224>
   14fd4:	bl	14c4c <__errno_location@plt>
   14fd8:	mov	r5, #3
   14fdc:	ldr	r0, [r0]
   14fe0:	bl	14838 <strerror@plt>
   14fe4:	mov	r2, r7
   14fe8:	movw	r1, #768	; 0x300
   14fec:	movt	r1, #2
   14ff0:	mov	r3, r0
   14ff4:	mov	r0, r5
   14ff8:	bl	17b84 <logMessage@@Base>
   14ffc:	b	14f84 <main@@Base+0x218>
   15000:	bl	14a60 <__stack_chk_fail@plt>
   15004:	ldrdeq	r0, [r2], -ip
   15008:	strdeq	r0, [r2], -r8

0001500c <_start@@Base>:
   1500c:	mov	fp, #0
   15010:	mov	lr, #0
   15014:	pop	{r1}		; (ldr r1, [sp], #4)
   15018:	mov	r2, sp
   1501c:	push	{r2}		; (str r2, [sp, #-4]!)
   15020:	push	{r0}		; (str r0, [sp, #-4]!)
   15024:	ldr	ip, [pc, #16]	; 1503c <_start@@Base+0x30>
   15028:	push	{ip}		; (str ip, [sp, #-4]!)
   1502c:	ldr	r0, [pc, #12]	; 15040 <_start@@Base+0x34>
   15030:	ldr	r3, [pc, #12]	; 15044 <_start@@Base+0x38>
   15034:	bl	14cf4 <__libc_start_main@plt>
   15038:	bl	1497c <abort@plt>
   1503c:	muleq	r2, r4, r1
   15040:	andeq	r4, r1, ip, ror #26
   15044:	andeq	r0, r2, r0, lsr r1
   15048:	ldr	r3, [pc, #20]	; 15064 <_start@@Base+0x58>
   1504c:	ldr	r2, [pc, #20]	; 15068 <_start@@Base+0x5c>
   15050:	add	r3, pc, r3
   15054:	ldr	r2, [r3, r2]
   15058:	cmp	r2, #0
   1505c:	bxeq	lr
   15060:	b	14d18 <__gmon_start__@plt>
   15064:	andeq	lr, r1, r8, lsr #31
   15068:	andeq	r0, r0, r8, ror r2
   1506c:	push	{r3, lr}
   15070:	movw	r0, #17056	; 0x42a0
   15074:	ldr	r3, [pc, #36]	; 150a0 <_start@@Base+0x94>
   15078:	movt	r0, #3
   1507c:	rsb	r3, r0, r3
   15080:	cmp	r3, #6
   15084:	popls	{r3, pc}
   15088:	movw	r3, #0
   1508c:	movt	r3, #0
   15090:	cmp	r3, #0
   15094:	popeq	{r3, pc}
   15098:	blx	r3
   1509c:	pop	{r3, pc}
   150a0:	andeq	r4, r3, r3, lsr #5
   150a4:	push	{r3, lr}
   150a8:	movw	r0, #17056	; 0x42a0
   150ac:	movw	r3, #17056	; 0x42a0
   150b0:	movt	r0, #3
   150b4:	movt	r3, #3
   150b8:	rsb	r3, r0, r3
   150bc:	asr	r3, r3, #2
   150c0:	add	r3, r3, r3, lsr #31
   150c4:	asrs	r1, r3, #1
   150c8:	popeq	{r3, pc}
   150cc:	movw	r2, #0
   150d0:	movt	r2, #0
   150d4:	cmp	r2, #0
   150d8:	popeq	{r3, pc}
   150dc:	blx	r2
   150e0:	pop	{r3, pc}
   150e4:	push	{r4, lr}
   150e8:	movw	r4, #17072	; 0x42b0
   150ec:	movt	r4, #3
   150f0:	ldrb	r3, [r4]
   150f4:	cmp	r3, #0
   150f8:	popne	{r4, pc}
   150fc:	bl	1506c <_start@@Base+0x60>
   15100:	mov	r3, #1
   15104:	strb	r3, [r4]
   15108:	pop	{r4, pc}
   1510c:	movw	r0, #15920	; 0x3e30
   15110:	movt	r0, #3
   15114:	push	{r3, lr}
   15118:	ldr	r3, [r0]
   1511c:	cmp	r3, #0
   15120:	beq	15138 <_start@@Base+0x12c>
   15124:	movw	r3, #0
   15128:	movt	r3, #0
   1512c:	cmp	r3, #0
   15130:	beq	15138 <_start@@Base+0x12c>
   15134:	blx	r3
   15138:	pop	{r3, lr}
   1513c:	b	150a4 <_start@@Base+0x98>
   15140:	and	r3, r0, #65280	; 0xff00
   15144:	cmp	r3, #10240	; 0x2800
   15148:	uxtbeq	r0, r0
   1514c:	movne	r0, #255	; 0xff
   15150:	bx	lr
   15154:	orr	r0, r0, #10240	; 0x2800
   15158:	bx	lr
   1515c:	movw	r3, #17076	; 0x42b4
   15160:	movt	r3, #3
   15164:	mov	r1, r0
   15168:	ldr	r0, [r3]
   1516c:	b	1c480 <convertDotsToCharacter@@Base>
   15170:	movw	r3, #17076	; 0x42b4
   15174:	movt	r3, #3
   15178:	mov	r1, r0
   1517c:	ldr	r0, [r3, #4]
   15180:	b	1c32c <convertCharacterToDots@@Base>
   15184:	push	{r4, r5, r6, lr}
   15188:	movw	r4, #17064	; 0x42a8
   1518c:	movt	r4, #3
   15190:	sub	sp, sp, #4096	; 0x1000
   15194:	sub	sp, sp, #8
   15198:	mov	r2, r1
   1519c:	ldr	r3, [r4]
   151a0:	add	r1, sp, #8192	; 0x2000
   151a4:	cmp	r0, #0
   151a8:	str	r3, [r1, #-4092]	; 0xfffff004
   151ac:	beq	15214 <_start@@Base+0x208>
   151b0:	add	r6, sp, #4
   151b4:	ldr	r1, [r0]
   151b8:	mov	r0, r6
   151bc:	bl	14d54 <wcrtomb@plt>
   151c0:	cmn	r0, #1
   151c4:	mov	r2, r0
   151c8:	beq	15230 <_start@@Base+0x224>
   151cc:	movw	r5, #17076	; 0x42b4
   151d0:	movt	r5, #3
   151d4:	mov	r1, #1
   151d8:	mov	r0, r6
   151dc:	ldr	r3, [r5, #8]
   151e0:	bl	14b5c <fwrite@plt>
   151e4:	ldr	r0, [r5, #8]
   151e8:	bl	14b20 <ferror@plt>
   151ec:	rsbs	r0, r0, #1
   151f0:	movcc	r0, #0
   151f4:	add	r1, sp, #8192	; 0x2000
   151f8:	ldr	r2, [r1, #-4092]	; 0xfffff004
   151fc:	ldr	r3, [r4]
   15200:	cmp	r2, r3
   15204:	bne	15238 <_start@@Base+0x22c>
   15208:	add	sp, sp, #4096	; 0x1000
   1520c:	add	sp, sp, #8
   15210:	pop	{r4, r5, r6, pc}
   15214:	add	r6, sp, #4
   15218:	mov	r1, r0
   1521c:	mov	r0, r6
   15220:	bl	14d54 <wcrtomb@plt>
   15224:	cmn	r0, #1
   15228:	subne	r2, r0, #1
   1522c:	bne	151cc <_start@@Base+0x1c0>
   15230:	mov	r0, #0
   15234:	b	151f4 <_start@@Base+0x1e8>
   15238:	bl	14a60 <__stack_chk_fail@plt>
   1523c:	push	{r3, r4, r5, r6, r7, lr}
   15240:	mov	r7, r1
   15244:	mov	r5, r0
   15248:	movw	r1, #468	; 0x1d4
   1524c:	mov	r0, r2
   15250:	movt	r1, #2
   15254:	mov	r4, r2
   15258:	bl	14c34 <strcmp@plt>
   1525c:	cmp	r0, #0
   15260:	beq	152b4 <_start@@Base+0x2a8>
   15264:	cmp	r4, #0
   15268:	movne	r6, #0
   1526c:	beq	152a4 <_start@@Base+0x298>
   15270:	mov	r1, r4
   15274:	mov	r0, r7
   15278:	bl	1cb60 <makeTextTablePath@@Base>
   1527c:	subs	r4, r0, #0
   15280:	beq	15294 <_start@@Base+0x288>
   15284:	bl	1d274 <compileTextTable@@Base>
   15288:	str	r0, [r5]
   1528c:	mov	r0, r4
   15290:	bl	147fc <free@plt>
   15294:	cmp	r6, #0
   15298:	beq	152a4 <_start@@Base+0x298>
   1529c:	mov	r0, r6
   152a0:	bl	147fc <free@plt>
   152a4:	ldr	r0, [r5]
   152a8:	adds	r0, r0, #0
   152ac:	movne	r0, #1
   152b0:	pop	{r3, r4, r5, r6, r7, pc}
   152b4:	mov	r0, r7
   152b8:	bl	1cbbc <selectTextTable@@Base>
   152bc:	subs	r4, r0, #0
   152c0:	movne	r6, r4
   152c4:	bne	15270 <_start@@Base+0x264>
   152c8:	movw	r1, #680	; 0x2a8
   152cc:	mov	r0, #3
   152d0:	movt	r1, #2
   152d4:	bl	17b84 <logMessage@@Base>
   152d8:	b	152a4 <_start@@Base+0x298>
   152dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e0:	movw	r9, #17064	; 0x42a8
   152e4:	sub	sp, sp, #4096	; 0x1000
   152e8:	movt	r9, #3
   152ec:	sub	sp, sp, #36	; 0x24
   152f0:	movw	r6, #61416	; 0xefe8
   152f4:	ldr	r2, [r9]
   152f8:	movw	r7, #17076	; 0x42b4
   152fc:	str	r1, [sp, #4]
   15300:	add	sl, sp, #28
   15304:	add	r1, sp, #8192	; 0x2000
   15308:	movt	r6, #65535	; 0xffff
   1530c:	movt	r7, #3
   15310:	mov	r8, r0
   15314:	mov	r3, #0
   15318:	str	r2, [r1, #-4068]	; 0xfffff01c
   1531c:	str	r3, [sp, #16]
   15320:	str	r3, [sp, #12]
   15324:	str	r3, [sp, #20]
   15328:	str	r3, [sp, #24]
   1532c:	mov	r0, r8
   15330:	bl	14868 <feof@plt>
   15334:	cmp	r0, #0
   15338:	bne	15494 <_start@@Base+0x488>
   1533c:	mov	r1, #1
   15340:	mov	r2, #4096	; 0x1000
   15344:	mov	r3, r8
   15348:	mov	r0, sl
   1534c:	bl	14a24 <fread@plt>
   15350:	mov	r4, r0
   15354:	mov	r0, r8
   15358:	bl	14b20 <ferror@plt>
   1535c:	cmp	r0, #0
   15360:	bne	15410 <_start@@Base+0x404>
   15364:	cmp	r4, #0
   15368:	beq	15494 <_start@@Base+0x488>
   1536c:	mov	r5, sl
   15370:	b	15390 <_start@@Base+0x384>
   15374:	add	r0, sp, #8
   15378:	add	r1, sp, #20
   1537c:	bl	15184 <_start@@Base+0x178>
   15380:	cmp	r0, #0
   15384:	beq	1545c <_start@@Base+0x450>
   15388:	cmp	r4, #0
   1538c:	beq	1532c <_start@@Base+0x320>
   15390:	add	r0, sp, #8
   15394:	mov	r1, r5
   15398:	mov	r2, r4
   1539c:	add	r3, sp, #12
   153a0:	bl	147b4 <mbrtowc@plt>
   153a4:	cmn	r0, #2
   153a8:	beq	1532c <_start@@Base+0x320>
   153ac:	cmn	r0, #1
   153b0:	beq	15410 <_start@@Base+0x404>
   153b4:	add	r3, sp, #4096	; 0x1000
   153b8:	cmp	r0, #0
   153bc:	add	r3, r3, #32
   153c0:	moveq	r0, #1
   153c4:	add	r5, r5, r0
   153c8:	ldr	fp, [r3, r6]
   153cc:	rsb	r4, r0, r4
   153d0:	mov	r0, fp
   153d4:	bl	14d60 <iswcntrl@plt>
   153d8:	cmp	r0, #0
   153dc:	bne	15374 <_start@@Base+0x368>
   153e0:	ldr	r3, [r7, #12]
   153e4:	mov	r0, fp
   153e8:	blx	r3
   153ec:	ldr	r3, [r7, #16]
   153f0:	cmp	r3, #0
   153f4:	ldr	r3, [r7, #20]
   153f8:	andne	r0, r0, #63	; 0x3f
   153fc:	blx	r3
   15400:	add	r1, sp, #4096	; 0x1000
   15404:	add	r1, r1, #32
   15408:	str	r0, [r1, r6]
   1540c:	b	15374 <_start@@Base+0x368>
   15410:	bl	14c4c <__errno_location@plt>
   15414:	ldr	r3, [r0]
   15418:	mov	r0, r3
   1541c:	bl	14838 <strerror@plt>
   15420:	ldr	r2, [sp, #4]
   15424:	movw	r1, #724	; 0x2d4
   15428:	movt	r1, #2
   1542c:	mov	r3, r0
   15430:	mov	r0, #3
   15434:	bl	17b84 <logMessage@@Base>
   15438:	mov	r0, #0
   1543c:	add	r3, sp, #8192	; 0x2000
   15440:	ldr	r2, [r3, #-4068]	; 0xfffff01c
   15444:	ldr	r3, [r9]
   15448:	cmp	r2, r3
   1544c:	bne	154f0 <_start@@Base+0x4e4>
   15450:	add	sp, sp, #4096	; 0x1000
   15454:	add	sp, sp, #36	; 0x24
   15458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1545c:	movw	r4, #17076	; 0x42b4
   15460:	movt	r4, #3
   15464:	bl	14c4c <__errno_location@plt>
   15468:	ldr	r4, [r4, #24]
   1546c:	ldr	r0, [r0]
   15470:	bl	14838 <strerror@plt>
   15474:	mov	r2, r4
   15478:	movw	r1, #744	; 0x2e8
   1547c:	movt	r1, #2
   15480:	mov	r3, r0
   15484:	mov	r0, #3
   15488:	bl	17b84 <logMessage@@Base>
   1548c:	mov	r0, #0
   15490:	b	1543c <_start@@Base+0x430>
   15494:	add	r1, sp, #20
   15498:	mov	r0, #0
   1549c:	bl	15184 <_start@@Base+0x178>
   154a0:	movw	r4, #17076	; 0x42b4
   154a4:	movt	r4, #3
   154a8:	cmp	r0, #0
   154ac:	beq	15464 <_start@@Base+0x458>
   154b0:	ldr	r0, [r4, #8]
   154b4:	bl	14c88 <fflush@plt>
   154b8:	ldr	r0, [r4, #8]
   154bc:	bl	14b20 <ferror@plt>
   154c0:	cmp	r0, #0
   154c4:	bne	15464 <_start@@Base+0x458>
   154c8:	add	r0, sp, #12
   154cc:	bl	14d30 <mbsinit@plt>
   154d0:	cmp	r0, #0
   154d4:	movne	r0, #1
   154d8:	bne	1543c <_start@@Base+0x430>
   154dc:	bl	14c4c <__errno_location@plt>
   154e0:	mov	r2, #84	; 0x54
   154e4:	mov	r3, r2
   154e8:	str	r2, [r0]
   154ec:	b	15418 <_start@@Base+0x40c>
   154f0:	bl	14a60 <__stack_chk_fail@plt>

000154f4 <endProgram@@Base>:
   154f4:	push	{r3, r4, r5, lr}
   154f8:	ldr	r5, [pc, #48]	; 15530 <endProgram@@Base+0x3c>
   154fc:	add	r5, pc, r5
   15500:	ldr	r4, [r5]
   15504:	cmp	r4, #0
   15508:	popeq	{r3, r4, r5, pc}
   1550c:	ldm	r4, {r2, r3}
   15510:	str	r2, [r5]
   15514:	blx	r3
   15518:	mov	r0, r4
   1551c:	bl	147fc <free@plt>
   15520:	ldr	r4, [r5]
   15524:	cmp	r4, #0
   15528:	bne	1550c <endProgram@@Base+0x18>
   1552c:	pop	{r3, r4, r5, pc}
   15530:	ldrdeq	lr, [r1], -r8
   15534:	push	{r3, r4, r5, lr}
   15538:	bl	17f18 <makePath@@Base>
   1553c:	subs	r4, r0, #0
   15540:	beq	15558 <endProgram@@Base+0x64>
   15544:	bl	18170 <testProgramPath@@Base>
   15548:	subs	r5, r0, #0
   1554c:	mov	r0, r4
   15550:	beq	15560 <endProgram@@Base+0x6c>
   15554:	pop	{r3, r4, r5, pc}
   15558:	mov	r0, r4
   1555c:	pop	{r3, r4, r5, pc}
   15560:	bl	147fc <free@plt>
   15564:	mov	r0, r5
   15568:	pop	{r3, r4, r5, pc}

0001556c <beginProgram@@Base>:
   1556c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15570:	sub	sp, sp, #4096	; 0x1000
   15574:	ldr	r4, [pc, #564]	; 157b0 <beginProgram@@Base+0x244>
   15578:	sub	sp, sp, #20
   1557c:	ldr	r2, [pc, #560]	; 157b4 <beginProgram@@Base+0x248>
   15580:	mov	r7, r1
   15584:	add	r4, pc, r4
   15588:	ldr	r3, [pc, #552]	; 157b8 <beginProgram@@Base+0x24c>
   1558c:	add	r1, sp, #8192	; 0x2000
   15590:	ldr	r5, [pc, #548]	; 157bc <beginProgram@@Base+0x250>
   15594:	ldr	r6, [r4, r2]
   15598:	add	r5, pc, r5
   1559c:	ldr	r2, [r6]
   155a0:	str	r2, [r1, #-4084]	; 0xfffff00c
   155a4:	ldr	r0, [r4, r3]
   155a8:	bl	20198 <__libc_csu_fini@@Base+0x4>
   155ac:	ldr	r1, [pc, #524]	; 157c0 <beginProgram@@Base+0x254>
   155b0:	mov	r0, #6
   155b4:	add	r1, pc, r1
   155b8:	bl	14b14 <setlocale@plt>
   155bc:	ldr	r1, [pc, #512]	; 157c4 <beginProgram@@Base+0x258>
   155c0:	mov	r0, r5
   155c4:	add	r1, pc, r1
   155c8:	bl	14af0 <bindtextdomain@plt>
   155cc:	mov	r0, r5
   155d0:	bl	14898 <textdomain@plt>
   155d4:	bl	1a7a8 <getProgramPath@@Base>
   155d8:	ldr	r3, [pc, #488]	; 157c8 <beginProgram@@Base+0x25c>
   155dc:	ldr	r5, [r4, r3]
   155e0:	cmp	r0, #0
   155e4:	str	r0, [r5]
   155e8:	ldreq	r0, [r7]
   155ec:	streq	r0, [r5]
   155f0:	bl	17f00 <isExplicitPath@@Base>
   155f4:	subs	fp, r0, #0
   155f8:	beq	1568c <beginProgram@@Base+0x120>
   155fc:	ldr	r0, [r5]
   15600:	bl	17f00 <isExplicitPath@@Base>
   15604:	cmp	r0, #0
   15608:	bne	15644 <beginProgram@@Base+0xd8>
   1560c:	ldr	r0, [r5]
   15610:	bl	17e98 <locatePathName@@Base>
   15614:	ldr	r3, [pc, #432]	; 157cc <beginProgram@@Base+0x260>
   15618:	ldr	r3, [r4, r3]
   1561c:	str	r0, [r3]
   15620:	bl	1775c <setLogPrefix@@Base>
   15624:	add	r3, sp, #8192	; 0x2000
   15628:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   1562c:	ldr	r3, [r6]
   15630:	cmp	r2, r3
   15634:	bne	157ac <beginProgram@@Base+0x240>
   15638:	add	sp, sp, #4096	; 0x1000
   1563c:	add	sp, sp, #20
   15640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15644:	ldr	r0, [r5]
   15648:	bl	17d88 <isAbsolutePath@@Base>
   1564c:	cmp	r0, #0
   15650:	ldr	r0, [r5]
   15654:	beq	15764 <beginProgram@@Base+0x1f8>
   15658:	bl	17d88 <isAbsolutePath@@Base>
   1565c:	cmp	r0, #0
   15660:	bne	1560c <beginProgram@@Base+0xa0>
   15664:	bl	183c8 <getWorkingDirectory@@Base>
   15668:	subs	r7, r0, #0
   1566c:	beq	1560c <beginProgram@@Base+0xa0>
   15670:	ldr	r1, [r5]
   15674:	bl	17f18 <makePath@@Base>
   15678:	cmp	r0, #0
   1567c:	strne	r0, [r5]
   15680:	mov	r0, r7
   15684:	bl	147fc <free@plt>
   15688:	b	1560c <beginProgram@@Base+0xa0>
   1568c:	ldr	r0, [pc, #316]	; 157d0 <beginProgram@@Base+0x264>
   15690:	ldr	r7, [r5]
   15694:	add	r0, pc, r0
   15698:	bl	14ce8 <getenv@plt>
   1569c:	cmp	r0, #0
   156a0:	beq	15748 <beginProgram@@Base+0x1dc>
   156a4:	mov	r1, #58	; 0x3a
   156a8:	add	r2, sp, #8
   156ac:	bl	1910c <splitString@@Base>
   156b0:	cmp	r0, #0
   156b4:	str	r0, [sp, #4]
   156b8:	beq	15748 <beginProgram@@Base+0x1dc>
   156bc:	add	r2, sp, #4096	; 0x1000
   156c0:	movw	r9, #61432	; 0xeff8
   156c4:	add	r2, r2, #16
   156c8:	movt	r9, #65535	; 0xffff
   156cc:	ldr	r3, [r2, r9]
   156d0:	cmp	r3, #0
   156d4:	ble	15740 <beginProgram@@Base+0x1d4>
   156d8:	ldr	r8, [pc, #244]	; 157d4 <beginProgram@@Base+0x268>
   156dc:	ldr	r3, [sp, #4]
   156e0:	add	r8, pc, r8
   156e4:	sub	sl, r3, #4
   156e8:	b	15704 <beginProgram@@Base+0x198>
   156ec:	add	r1, sp, #4096	; 0x1000
   156f0:	add	fp, fp, #1
   156f4:	add	r1, r1, #16
   156f8:	ldr	r2, [r1, r9]
   156fc:	cmp	fp, r2
   15700:	bge	15740 <beginProgram@@Base+0x1d4>
   15704:	ldr	r0, [sl, #4]!
   15708:	mov	r1, r7
   1570c:	ldrb	r2, [r0]
   15710:	cmp	r2, #0
   15714:	moveq	r0, r8
   15718:	bl	15534 <endProgram@@Base+0x40>
   1571c:	subs	r2, r0, #0
   15720:	beq	156ec <beginProgram@@Base+0x180>
   15724:	ldr	r0, [sp, #4]
   15728:	str	r2, [sp]
   1572c:	bl	190d8 <deallocateStrings@@Base>
   15730:	ldr	r2, [sp]
   15734:	mov	r0, r2
   15738:	str	r2, [r5]
   1573c:	b	15600 <beginProgram@@Base+0x94>
   15740:	ldr	r0, [sp, #4]
   15744:	bl	190d8 <deallocateStrings@@Base>
   15748:	ldr	r0, [pc, #136]	; 157d8 <beginProgram@@Base+0x26c>
   1574c:	ldr	r1, [r5]
   15750:	add	r0, pc, r0
   15754:	bl	15534 <endProgram@@Base+0x40>
   15758:	subs	r2, r0, #0
   1575c:	beq	155fc <beginProgram@@Base+0x90>
   15760:	b	15734 <beginProgram@@Base+0x1c8>
   15764:	add	r1, sp, #12
   15768:	mov	r2, #4096	; 0x1000
   1576c:	bl	14c04 <__realpath_chk@plt>
   15770:	cmp	r0, #0
   15774:	beq	1578c <beginProgram@@Base+0x220>
   15778:	bl	14928 <__strdup@plt>
   1577c:	cmp	r0, #0
   15780:	beq	157a0 <beginProgram@@Base+0x234>
   15784:	str	r0, [r5]
   15788:	b	15658 <beginProgram@@Base+0xec>
   1578c:	ldr	r0, [pc, #72]	; 157dc <beginProgram@@Base+0x270>
   15790:	add	r0, pc, r0
   15794:	bl	17c4c <logSystemError@@Base>
   15798:	ldr	r0, [r5]
   1579c:	b	15658 <beginProgram@@Base+0xec>
   157a0:	bl	17c90 <logMallocError@@Base>
   157a4:	ldr	r0, [r5]
   157a8:	b	15658 <beginProgram@@Base+0xec>
   157ac:	bl	14a60 <__stack_chk_fail@plt>
   157b0:	andeq	lr, r1, r4, ror sl
   157b4:	andeq	r0, r0, ip, lsr #4
   157b8:	andeq	r0, r0, r4, asr r2
   157bc:	andeq	sl, r0, ip, lsr pc
   157c0:	andeq	fp, r0, ip, lsl r2
   157c4:	andeq	sl, r0, r8, lsl pc
   157c8:	andeq	r0, r0, r8, ror #4
   157cc:	andeq	r0, r0, ip, asr r2
   157d0:	andeq	sl, r0, ip, asr lr
   157d4:	andeq	sl, r0, ip, asr #25
   157d8:	andeq	sl, r0, ip, asr ip
   157dc:	andeq	sl, r0, r8, ror #26

000157e0 <makeProgramBanner@@Base>:
   157e0:	push	{r4, r5, r6, lr}
   157e4:	sub	sp, sp, #24
   157e8:	ldr	r6, [pc, #72]	; 15838 <makeProgramBanner@@Base+0x58>
   157ec:	mov	r2, #1
   157f0:	ldr	r5, [pc, #68]	; 1583c <makeProgramBanner@@Base+0x5c>
   157f4:	mvn	r3, #0
   157f8:	ldr	r4, [pc, #64]	; 15840 <makeProgramBanner@@Base+0x60>
   157fc:	add	r6, pc, r6
   15800:	ldr	lr, [pc, #60]	; 15844 <makeProgramBanner@@Base+0x64>
   15804:	add	r5, pc, r5
   15808:	ldr	ip, [pc, #56]	; 15848 <makeProgramBanner@@Base+0x68>
   1580c:	add	r4, pc, r4
   15810:	add	lr, pc, lr
   15814:	str	r6, [sp]
   15818:	add	ip, pc, ip
   1581c:	str	r5, [sp, #4]
   15820:	str	r4, [sp, #8]
   15824:	str	lr, [sp, #12]
   15828:	str	ip, [sp, #16]
   1582c:	bl	14b8c <__snprintf_chk@plt>
   15830:	add	sp, sp, #24
   15834:	pop	{r4, r5, r6, pc}
   15838:	andeq	sl, r0, r8, lsl #26
   1583c:	andeq	sl, r0, ip, lsl #26
   15840:	andeq	sl, r0, ip, lsl #26
   15844:	andeq	sl, r0, ip, lsl #26
   15848:	andeq	sl, r0, ip, lsl #26

0001584c <fixInstallPaths@@Base>:
   1584c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15850:	mov	r4, r0
   15854:	ldr	r5, [pc, #340]	; 159b0 <fixInstallPaths@@Base+0x164>
   15858:	ldr	r3, [pc, #340]	; 159b4 <fixInstallPaths@@Base+0x168>
   1585c:	add	r5, pc, r5
   15860:	add	r3, pc, r3
   15864:	ldr	r2, [r5, #4]
   15868:	cmp	r2, #0
   1586c:	beq	15950 <fixInstallPaths@@Base+0x104>
   15870:	ldr	r3, [r4]
   15874:	cmp	r3, #0
   15878:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1587c:	ldr	r5, [pc, #308]	; 159b8 <fixInstallPaths@@Base+0x16c>
   15880:	add	r4, r4, #4
   15884:	ldr	r7, [pc, #304]	; 159bc <fixInstallPaths@@Base+0x170>
   15888:	ldr	r6, [pc, #304]	; 159c0 <fixInstallPaths@@Base+0x174>
   1588c:	add	r5, pc, r5
   15890:	ldr	r9, [pc, #300]	; 159c4 <fixInstallPaths@@Base+0x178>
   15894:	add	r7, pc, r7
   15898:	ldr	r8, [pc, #296]	; 159c8 <fixInstallPaths@@Base+0x17c>
   1589c:	add	r6, pc, r6
   158a0:	add	r9, pc, r9
   158a4:	add	r8, pc, r8
   158a8:	b	158b8 <fixInstallPaths@@Base+0x6c>
   158ac:	ldr	r3, [r4], #4
   158b0:	cmp	r3, #0
   158b4:	beq	15924 <fixInstallPaths@@Base+0xd8>
   158b8:	ldr	r1, [r3]
   158bc:	cmp	r1, #0
   158c0:	beq	158ac <fixInstallPaths@@Base+0x60>
   158c4:	ldrb	r3, [r1]
   158c8:	cmp	r3, #0
   158cc:	beq	158ac <fixInstallPaths@@Base+0x60>
   158d0:	ldr	r0, [r5, #4]
   158d4:	bl	17f18 <makePath@@Base>
   158d8:	subs	r3, r0, #0
   158dc:	beq	15928 <fixInstallPaths@@Base+0xdc>
   158e0:	ldr	r2, [r4, #-4]
   158e4:	str	r3, [r2]
   158e8:	bl	17d88 <isAbsolutePath@@Base>
   158ec:	cmp	r0, #0
   158f0:	bne	158ac <fixInstallPaths@@Base+0x60>
   158f4:	mov	r1, r7
   158f8:	mov	r2, #5
   158fc:	bl	14a90 <dcgettext@plt>
   15900:	ldr	r3, [r4, #-4]
   15904:	mov	r1, r6
   15908:	ldr	r3, [r3]
   1590c:	mov	r2, r0
   15910:	mov	r0, #4
   15914:	bl	17b84 <logMessage@@Base>
   15918:	ldr	r3, [r4], #4
   1591c:	cmp	r3, #0
   15920:	bne	158b8 <fixInstallPaths@@Base+0x6c>
   15924:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15928:	mov	r1, r9
   1592c:	mov	r2, #5
   15930:	bl	14a90 <dcgettext@plt>
   15934:	ldr	r3, [r4, #-4]
   15938:	mov	r1, r8
   1593c:	ldr	r3, [r3]
   15940:	mov	r2, r0
   15944:	mov	r0, #4
   15948:	bl	17b84 <logMessage@@Base>
   1594c:	b	158ac <fixInstallPaths@@Base+0x60>
   15950:	ldr	r2, [pc, #116]	; 159cc <fixInstallPaths@@Base+0x180>
   15954:	ldr	r3, [r3, r2]
   15958:	ldr	r0, [r3]
   1595c:	bl	17da0 <getPathDirectory@@Base>
   15960:	cmp	r0, #0
   15964:	mov	r2, r0
   15968:	str	r0, [r5, #4]
   1596c:	beq	15984 <fixInstallPaths@@Base+0x138>
   15970:	ldr	r1, [pc, #88]	; 159d0 <fixInstallPaths@@Base+0x184>
   15974:	mov	r0, #7
   15978:	add	r1, pc, r1
   1597c:	bl	17b84 <logMessage@@Base>
   15980:	b	15870 <fixInstallPaths@@Base+0x24>
   15984:	ldr	r1, [pc, #72]	; 159d4 <fixInstallPaths@@Base+0x188>
   15988:	mov	r2, #5
   1598c:	add	r1, pc, r1
   15990:	bl	14a90 <dcgettext@plt>
   15994:	mov	r1, r0
   15998:	mov	r0, #4
   1599c:	bl	17b84 <logMessage@@Base>
   159a0:	ldr	r2, [pc, #48]	; 159d8 <fixInstallPaths@@Base+0x18c>
   159a4:	add	r2, pc, r2
   159a8:	str	r2, [r5, #4]
   159ac:	b	15970 <fixInstallPaths@@Base+0x124>
   159b0:	andeq	lr, r1, r8, ror sl
   159b4:	muleq	r1, r8, r7
   159b8:	andeq	lr, r1, r8, asr #20
   159bc:	andeq	sl, r0, ip, ror #25
   159c0:	andeq	fp, r0, r8, asr r5
   159c4:	andeq	sl, r0, r8, asr #25
   159c8:	andeq	fp, r0, r0, asr r5
   159cc:	andeq	r0, r0, r8, ror #4
   159d0:	ldrdeq	sl, [r0], -r8
   159d4:	andeq	sl, r0, r0, lsr #23
   159d8:	andeq	sl, r0, r8, lsl #20

000159dc <fixInstallPath@@Base>:
   159dc:	ldr	r3, [pc, #72]	; 15a2c <fixInstallPath@@Base+0x50>
   159e0:	mov	r2, #0
   159e4:	ldr	r1, [pc, #68]	; 15a30 <fixInstallPath@@Base+0x54>
   159e8:	add	r3, pc, r3
   159ec:	push	{r4, lr}
   159f0:	sub	sp, sp, #16
   159f4:	ldr	r4, [r3, r1]
   159f8:	str	r0, [sp, #4]
   159fc:	add	r0, sp, #4
   15a00:	str	r2, [sp, #8]
   15a04:	ldr	r3, [r4]
   15a08:	str	r3, [sp, #12]
   15a0c:	bl	1584c <fixInstallPaths@@Base>
   15a10:	ldr	r2, [sp, #12]
   15a14:	ldr	r3, [r4]
   15a18:	cmp	r2, r3
   15a1c:	bne	15a28 <fixInstallPath@@Base+0x4c>
   15a20:	add	sp, sp, #16
   15a24:	pop	{r4, pc}
   15a28:	bl	14a60 <__stack_chk_fail@plt>
   15a2c:	andeq	lr, r1, r0, lsl r6
   15a30:	andeq	r0, r0, ip, lsr #4

00015a34 <createPidFile@@Base>:
   15a34:	ldr	r3, [pc, #700]	; 15cf8 <createPidFile@@Base+0x2c4>
   15a38:	ldr	r2, [pc, #700]	; 15cfc <createPidFile@@Base+0x2c8>
   15a3c:	add	r3, pc, r3
   15a40:	push	{r4, r5, r6, r7, r8, lr}
   15a44:	subs	r6, r1, #0
   15a48:	ldr	r5, [r3, r2]
   15a4c:	sub	sp, sp, #56	; 0x38
   15a50:	mov	r4, r0
   15a54:	ldr	r3, [r5]
   15a58:	str	r3, [sp, #52]	; 0x34
   15a5c:	beq	15adc <createPidFile@@Base+0xa8>
   15a60:	cmp	r4, #0
   15a64:	beq	15ad4 <createPidFile@@Base+0xa0>
   15a68:	ldrb	r3, [r4]
   15a6c:	cmp	r3, #0
   15a70:	bne	15a90 <createPidFile@@Base+0x5c>
   15a74:	ldr	r2, [sp, #52]	; 0x34
   15a78:	mov	r0, r3
   15a7c:	ldr	r3, [r5]
   15a80:	cmp	r2, r3
   15a84:	bne	15cf4 <createPidFile@@Base+0x2c0>
   15a88:	add	sp, sp, #56	; 0x38
   15a8c:	pop	{r4, r5, r6, r7, r8, pc}
   15a90:	mov	r0, r4
   15a94:	mov	r1, #66	; 0x42
   15a98:	mov	r2, #420	; 0x1a4
   15a9c:	bl	14a0c <open@plt>
   15aa0:	cmn	r0, #1
   15aa4:	mov	r7, r0
   15aa8:	beq	15bfc <createPidFile@@Base+0x1c8>
   15aac:	mov	r1, #1
   15ab0:	bl	18840 <acquireFileLock@@Base>
   15ab4:	subs	r8, r0, #0
   15ab8:	bne	15ae8 <createPidFile@@Base+0xb4>
   15abc:	bl	14c4c <__errno_location@plt>
   15ac0:	ldr	r3, [r0]
   15ac4:	cmp	r3, #38	; 0x26
   15ac8:	beq	15ae8 <createPidFile@@Base+0xb4>
   15acc:	mov	r0, r7
   15ad0:	bl	14940 <close@plt>
   15ad4:	mov	r3, #0
   15ad8:	b	15a74 <createPidFile@@Base+0x40>
   15adc:	bl	15e88 <getProcessIdentifier@@Base>
   15ae0:	mov	r6, r0
   15ae4:	b	15a60 <createPidFile@@Base+0x2c>
   15ae8:	add	r4, sp, #20
   15aec:	mov	r0, r7
   15af0:	mov	r2, #32
   15af4:	mov	r1, r4
   15af8:	bl	14964 <read@plt>
   15afc:	cmn	r0, #1
   15b00:	mov	r3, r0
   15b04:	beq	15cb8 <createPidFile@@Base+0x284>
   15b08:	cmp	r0, #32
   15b0c:	add	r2, sp, #56	; 0x38
   15b10:	ldr	r1, [pc, #488]	; 15d00 <createPidFile@@Base+0x2cc>
   15b14:	mov	r0, r4
   15b18:	moveq	r3, #31
   15b1c:	add	ip, r2, r3
   15b20:	add	r1, pc, r1
   15b24:	add	r2, sp, #16
   15b28:	add	r3, sp, #15
   15b2c:	mov	lr, #0
   15b30:	strb	lr, [ip, #-36]	; 0xffffffdc
   15b34:	bl	14c70 <sscanf@plt>
   15b38:	cmp	r0, #1
   15b3c:	beq	15c78 <createPidFile@@Base+0x244>
   15b40:	cmp	r0, #2
   15b44:	beq	15c68 <createPidFile@@Base+0x234>
   15b48:	mov	r1, #0
   15b4c:	mov	r0, r7
   15b50:	mov	r2, r1
   15b54:	bl	14acc <lseek@plt>
   15b58:	cmn	r0, #1
   15b5c:	beq	15ccc <createPidFile@@Base+0x298>
   15b60:	mov	r0, r7
   15b64:	mov	r1, #0
   15b68:	bl	14784 <ftruncate@plt>
   15b6c:	cmn	r0, #1
   15b70:	beq	15c40 <createPidFile@@Base+0x20c>
   15b74:	ldr	ip, [pc, #392]	; 15d04 <createPidFile@@Base+0x2d0>
   15b78:	mov	r1, #32
   15b7c:	mov	r3, r1
   15b80:	mov	r2, #1
   15b84:	add	ip, pc, ip
   15b88:	str	r6, [sp, #4]
   15b8c:	str	ip, [sp]
   15b90:	mov	r0, r4
   15b94:	bl	14b8c <__snprintf_chk@plt>
   15b98:	mov	r1, r4
   15b9c:	mov	r2, r0
   15ba0:	mov	r0, r7
   15ba4:	bl	14bc8 <write@plt>
   15ba8:	cmn	r0, #1
   15bac:	beq	15ce0 <createPidFile@@Base+0x2ac>
   15bb0:	mov	r4, #0
   15bb4:	cmp	r8, #0
   15bb8:	bne	15cac <createPidFile@@Base+0x278>
   15bbc:	mov	r0, r7
   15bc0:	bl	14940 <close@plt>
   15bc4:	cmp	r4, #2
   15bc8:	beq	15c54 <createPidFile@@Base+0x220>
   15bcc:	cmp	r4, #3
   15bd0:	beq	15ad4 <createPidFile@@Base+0xa0>
   15bd4:	cmp	r4, #0
   15bd8:	moveq	r3, #1
   15bdc:	beq	15a74 <createPidFile@@Base+0x40>
   15be0:	ldr	r1, [pc, #288]	; 15d08 <createPidFile@@Base+0x2d4>
   15be4:	mov	r2, r4
   15be8:	mov	r0, #4
   15bec:	add	r1, pc, r1
   15bf0:	bl	17b84 <logMessage@@Base>
   15bf4:	mov	r3, #0
   15bf8:	b	15a74 <createPidFile@@Base+0x40>
   15bfc:	ldr	r1, [pc, #264]	; 15d0c <createPidFile@@Base+0x2d8>
   15c00:	mov	r2, #5
   15c04:	mov	r0, #0
   15c08:	add	r1, pc, r1
   15c0c:	bl	14a90 <dcgettext@plt>
   15c10:	mov	r6, r0
   15c14:	bl	14c4c <__errno_location@plt>
   15c18:	ldr	r0, [r0]
   15c1c:	bl	14838 <strerror@plt>
   15c20:	ldr	r1, [pc, #232]	; 15d10 <createPidFile@@Base+0x2dc>
   15c24:	mov	r2, r6
   15c28:	mov	r3, r4
   15c2c:	add	r1, pc, r1
   15c30:	str	r0, [sp]
   15c34:	mov	r0, #4
   15c38:	bl	17b84 <logMessage@@Base>
   15c3c:	b	15ad4 <createPidFile@@Base+0xa0>
   15c40:	ldr	r0, [pc, #204]	; 15d14 <createPidFile@@Base+0x2e0>
   15c44:	mov	r4, #3
   15c48:	add	r0, pc, r0
   15c4c:	bl	17c4c <logSystemError@@Base>
   15c50:	b	15bb4 <createPidFile@@Base+0x180>
   15c54:	bl	14c4c <__errno_location@plt>
   15c58:	mov	r2, #17
   15c5c:	mov	r3, #0
   15c60:	str	r2, [r0]
   15c64:	b	15a74 <createPidFile@@Base+0x40>
   15c68:	ldrb	r3, [sp, #15]
   15c6c:	cmp	r3, #10
   15c70:	cmpne	r3, #13
   15c74:	bne	15b48 <createPidFile@@Base+0x114>
   15c78:	ldr	r0, [sp, #16]
   15c7c:	cmp	r0, r6
   15c80:	beq	15bb0 <createPidFile@@Base+0x17c>
   15c84:	bl	15e8c <testProcessIdentifier@@Base>
   15c88:	cmp	r0, #0
   15c8c:	beq	15b48 <createPidFile@@Base+0x114>
   15c90:	ldr	r1, [pc, #128]	; 15d18 <createPidFile@@Base+0x2e4>
   15c94:	mov	r0, #3
   15c98:	ldr	r2, [sp, #16]
   15c9c:	mov	r4, #2
   15ca0:	add	r1, pc, r1
   15ca4:	bl	17b84 <logMessage@@Base>
   15ca8:	b	15bb4 <createPidFile@@Base+0x180>
   15cac:	mov	r0, r7
   15cb0:	bl	18860 <releaseFileLock@@Base>
   15cb4:	b	15bbc <createPidFile@@Base+0x188>
   15cb8:	ldr	r0, [pc, #92]	; 15d1c <createPidFile@@Base+0x2e8>
   15cbc:	mov	r4, #3
   15cc0:	add	r0, pc, r0
   15cc4:	bl	17c4c <logSystemError@@Base>
   15cc8:	b	15bb4 <createPidFile@@Base+0x180>
   15ccc:	ldr	r0, [pc, #76]	; 15d20 <createPidFile@@Base+0x2ec>
   15cd0:	mov	r4, #3
   15cd4:	add	r0, pc, r0
   15cd8:	bl	17c4c <logSystemError@@Base>
   15cdc:	b	15bb4 <createPidFile@@Base+0x180>
   15ce0:	ldr	r0, [pc, #60]	; 15d24 <createPidFile@@Base+0x2f0>
   15ce4:	mov	r4, #3
   15ce8:	add	r0, pc, r0
   15cec:	bl	17c4c <logSystemError@@Base>
   15cf0:	b	15bb4 <createPidFile@@Base+0x180>
   15cf4:	bl	14a60 <__stack_chk_fail@plt>
   15cf8:			; <UNDEFINED> instruction: 0x0001e5bc
   15cfc:	andeq	r0, r0, ip, lsr #4
   15d00:	andeq	sl, r0, ip, ror sl
   15d04:	andeq	sl, r0, ip, asr #20
   15d08:	andeq	sl, r0, ip, lsr #20
   15d0c:	andeq	sl, r0, r0, ror #19
   15d10:	andeq	sl, r0, r0, ror #19
   15d14:	andeq	sl, r0, ip, lsl #19
   15d18:	andeq	sl, r0, r4, lsl #18
   15d1c:	andeq	sl, r0, r8, lsl #18
   15d20:	andeq	sl, r0, ip, lsl #18
   15d24:	andeq	sl, r0, ip, lsl #27

00015d28 <cancelProgram@@Base>:
   15d28:	ldr	r2, [pc, #260]	; 15e34 <cancelProgram@@Base+0x10c>
   15d2c:	ldr	ip, [pc, #260]	; 15e38 <cancelProgram@@Base+0x110>
   15d30:	add	r2, pc, r2
   15d34:	ldr	r1, [pc, #256]	; 15e3c <cancelProgram@@Base+0x114>
   15d38:	push	{r4, r5, r6, r7, r8, lr}
   15d3c:	sub	sp, sp, #272	; 0x110
   15d40:	ldr	r4, [r2, ip]
   15d44:	add	r1, pc, r1
   15d48:	mov	r6, r0
   15d4c:	ldr	r2, [r4]
   15d50:	str	r2, [sp, #268]	; 0x10c
   15d54:	bl	14958 <fopen@plt>
   15d58:	subs	r5, r0, #0
   15d5c:	beq	15dec <cancelProgram@@Base+0xc4>
   15d60:	add	r0, sp, #12
   15d64:	mov	r1, #256	; 0x100
   15d68:	mov	r2, r5
   15d6c:	bl	14b38 <fgets@plt>
   15d70:	subs	r7, r0, #0
   15d74:	beq	15dc8 <cancelProgram@@Base+0xa0>
   15d78:	add	r1, sp, #8
   15d7c:	mov	r2, #10
   15d80:	bl	147f0 <strtol@plt>
   15d84:	ldr	r3, [sp, #8]
   15d88:	ldrb	r6, [r3]
   15d8c:	cmp	r6, #0
   15d90:	mov	r8, r0
   15d94:	beq	15db8 <cancelProgram@@Base+0x90>
   15d98:	bl	14ae4 <__ctype_b_loc@plt>
   15d9c:	lsl	r6, r6, #1
   15da0:	ldr	r3, [r0]
   15da4:	ldrh	r7, [r3, r6]
   15da8:	and	r7, r7, #8192	; 0x2000
   15dac:	uxth	r7, r7
   15db0:	cmp	r7, #0
   15db4:	beq	15dc8 <cancelProgram@@Base+0xa0>
   15db8:	mov	r0, r8
   15dbc:	bl	15ea4 <cancelProcess@@Base>
   15dc0:	adds	r7, r0, #0
   15dc4:	movne	r7, #1
   15dc8:	mov	r0, r5
   15dcc:	bl	14bbc <fclose@plt>
   15dd0:	ldr	r2, [sp, #268]	; 0x10c
   15dd4:	mov	r0, r7
   15dd8:	ldr	r3, [r4]
   15ddc:	cmp	r2, r3
   15de0:	bne	15e30 <cancelProgram@@Base+0x108>
   15de4:	add	sp, sp, #272	; 0x110
   15de8:	pop	{r4, r5, r6, r7, r8, pc}
   15dec:	ldr	r1, [pc, #76]	; 15e40 <cancelProgram@@Base+0x118>
   15df0:	mov	r2, #5
   15df4:	mov	r7, r5
   15df8:	add	r1, pc, r1
   15dfc:	bl	14a90 <dcgettext@plt>
   15e00:	mov	r8, r0
   15e04:	bl	14c4c <__errno_location@plt>
   15e08:	ldr	r0, [r0]
   15e0c:	bl	14838 <strerror@plt>
   15e10:	ldr	r1, [pc, #44]	; 15e44 <cancelProgram@@Base+0x11c>
   15e14:	mov	r2, r8
   15e18:	mov	r3, r6
   15e1c:	add	r1, pc, r1
   15e20:	str	r0, [sp]
   15e24:	mov	r0, #3
   15e28:	bl	17b84 <logMessage@@Base>
   15e2c:	b	15dd0 <cancelProgram@@Base+0xa8>
   15e30:	bl	14a60 <__stack_chk_fail@plt>
   15e34:	andeq	lr, r1, r8, asr #5
   15e38:	andeq	r0, r0, ip, lsr #4
   15e3c:	andeq	ip, r0, r4, ror r6
   15e40:	andeq	sl, r0, r0, asr #16
   15e44:	strdeq	sl, [r0], -r0

00015e48 <onProgramExit@@Base>:
   15e48:	push	{r4, lr}
   15e4c:	mov	r4, r0
   15e50:	mov	r0, #8
   15e54:	bl	14b74 <malloc@plt>
   15e58:	cmp	r0, #0
   15e5c:	beq	15e7c <onProgramExit@@Base+0x34>
   15e60:	ldr	r2, [pc, #28]	; 15e84 <onProgramExit@@Base+0x3c>
   15e64:	str	r4, [r0, #4]
   15e68:	add	r2, pc, r2
   15e6c:	ldr	r1, [r2]
   15e70:	str	r0, [r2]
   15e74:	str	r1, [r0]
   15e78:	pop	{r4, pc}
   15e7c:	pop	{r4, lr}
   15e80:	b	17c90 <logMallocError@@Base>
   15e84:	andeq	lr, r1, ip, ror #8

00015e88 <getProcessIdentifier@@Base>:
   15e88:	b	1479c <getpid@plt>

00015e8c <testProcessIdentifier@@Base>:
   15e8c:	push	{r3, lr}
   15e90:	mov	r1, #0
   15e94:	bl	149ac <kill@plt>
   15e98:	adds	r0, r0, #1
   15e9c:	movne	r0, #1
   15ea0:	pop	{r3, pc}

00015ea4 <cancelProcess@@Base>:
   15ea4:	push	{r3, lr}
   15ea8:	mov	r1, #15
   15eac:	bl	149ac <kill@plt>
   15eb0:	adds	r0, r0, #1
   15eb4:	movne	r0, #1
   15eb8:	pop	{r3, pc}
   15ebc:	push	{r4, r5, r6, r7, r8, r9, lr}
   15ec0:	mov	r4, r0
   15ec4:	ldr	r5, [r0]
   15ec8:	sub	sp, sp, #20
   15ecc:	mov	r6, r1
   15ed0:	mov	r8, r2
   15ed4:	cmp	r5, #0
   15ed8:	beq	15f74 <cancelProcess@@Base+0xd0>
   15edc:	mov	r0, r5
   15ee0:	bl	14b80 <strlen@plt>
   15ee4:	mov	r7, r0
   15ee8:	mov	r0, r6
   15eec:	bl	14b80 <strlen@plt>
   15ef0:	add	r0, r7, r0
   15ef4:	add	r7, r0, #2
   15ef8:	mov	r0, r7
   15efc:	bl	14b74 <malloc@plt>
   15f00:	subs	r9, r0, #0
   15f04:	beq	15f8c <cancelProcess@@Base+0xe8>
   15f08:	cmp	r8, #0
   15f0c:	bne	15f4c <cancelProcess@@Base+0xa8>
   15f10:	ldr	ip, [pc, #128]	; 15f98 <cancelProcess@@Base+0xf4>
   15f14:	mov	r1, r7
   15f18:	str	r5, [sp, #4]
   15f1c:	mov	r2, #1
   15f20:	add	ip, pc, ip
   15f24:	str	r6, [sp, #8]
   15f28:	mvn	r3, #0
   15f2c:	str	ip, [sp]
   15f30:	bl	14b8c <__snprintf_chk@plt>
   15f34:	ldr	r0, [r4]
   15f38:	bl	147fc <free@plt>
   15f3c:	mov	r0, #1
   15f40:	str	r9, [r4]
   15f44:	add	sp, sp, #20
   15f48:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15f4c:	ldr	ip, [pc, #72]	; 15f9c <cancelProcess@@Base+0xf8>
   15f50:	mov	r1, r7
   15f54:	str	r6, [sp, #4]
   15f58:	mov	r2, #1
   15f5c:	add	ip, pc, ip
   15f60:	str	r5, [sp, #8]
   15f64:	mvn	r3, #0
   15f68:	str	ip, [sp]
   15f6c:	bl	14b8c <__snprintf_chk@plt>
   15f70:	b	15f34 <cancelProcess@@Base+0x90>
   15f74:	mov	r0, r1
   15f78:	bl	14928 <__strdup@plt>
   15f7c:	cmp	r0, #0
   15f80:	str	r0, [r4]
   15f84:	movne	r0, #1
   15f88:	bne	15f44 <cancelProcess@@Base+0xa0>
   15f8c:	bl	17c90 <logMallocError@@Base>
   15f90:	mov	r0, #0
   15f94:	b	15f44 <cancelProcess@@Base+0xa0>
   15f98:	andeq	sl, r0, ip, lsr #14
   15f9c:	strdeq	sl, [r0], -r0
   15fa0:	ldr	ip, [pc, #468]	; 1617c <cancelProcess@@Base+0x2d8>
   15fa4:	push	{r4, r5, r6, r7, r8, r9, lr}
   15fa8:	add	ip, pc, ip
   15fac:	ldr	r5, [pc, #460]	; 16180 <cancelProcess@@Base+0x2dc>
   15fb0:	sub	sp, sp, #20
   15fb4:	ldrb	r6, [r1, #8]
   15fb8:	mov	r4, r1
   15fbc:	mov	r7, r0
   15fc0:	mov	r8, r2
   15fc4:	ldr	r5, [ip, r5]
   15fc8:	add	r6, r0, r6
   15fcc:	ldrb	r3, [r6, #8]
   15fd0:	ldr	ip, [r5]
   15fd4:	cmp	r3, #0
   15fd8:	str	ip, [sp, #12]
   15fdc:	bne	16020 <cancelProcess@@Base+0x17c>
   15fe0:	mov	r9, #1
   15fe4:	strb	r9, [r6, #8]
   15fe8:	ldr	r3, [r1, #4]
   15fec:	ldr	r6, [r1, #12]
   15ff0:	cmp	r3, #0
   15ff4:	beq	1607c <cancelProcess@@Base+0x1d8>
   15ff8:	cmp	r6, #0
   15ffc:	beq	16020 <cancelProcess@@Base+0x17c>
   16000:	ldrb	r3, [r1, #10]
   16004:	tst	r3, #2
   16008:	beq	16058 <cancelProcess@@Base+0x1b4>
   1600c:	cmp	r2, #0
   16010:	beq	16020 <cancelProcess@@Base+0x17c>
   16014:	ldrb	r3, [r2]
   16018:	cmp	r3, #0
   1601c:	bne	1603c <cancelProcess@@Base+0x198>
   16020:	mov	r0, #1
   16024:	ldr	r1, [sp, #12]
   16028:	ldr	r3, [r5]
   1602c:	cmp	r1, r3
   16030:	bne	16178 <cancelProcess@@Base+0x2d4>
   16034:	add	sp, sp, #20
   16038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1603c:	mov	r1, r2
   16040:	mov	r0, r6
   16044:	mov	r2, r9
   16048:	bl	15ebc <cancelProcess@@Base+0x18>
   1604c:	cmp	r0, #0
   16050:	beq	16024 <cancelProcess@@Base+0x180>
   16054:	b	16020 <cancelProcess@@Base+0x17c>
   16058:	mov	r0, r2
   1605c:	bl	14928 <__strdup@plt>
   16060:	cmp	r0, #0
   16064:	str	r0, [r6]
   16068:	bne	16020 <cancelProcess@@Base+0x17c>
   1606c:	str	r0, [sp, #4]
   16070:	bl	17c90 <logMallocError@@Base>
   16074:	ldr	r0, [sp, #4]
   16078:	b	16024 <cancelProcess@@Base+0x180>
   1607c:	cmp	r6, #0
   16080:	beq	16020 <cancelProcess@@Base+0x17c>
   16084:	ldr	r1, [pc, #248]	; 16184 <cancelProcess@@Base+0x2e0>
   16088:	mov	r0, r2
   1608c:	add	r1, pc, r1
   16090:	bl	147e4 <strcasecmp@plt>
   16094:	cmp	r0, #0
   16098:	streq	r9, [r6]
   1609c:	moveq	r0, r9
   160a0:	beq	16024 <cancelProcess@@Base+0x180>
   160a4:	ldr	r1, [pc, #220]	; 16188 <cancelProcess@@Base+0x2e4>
   160a8:	mov	r0, r8
   160ac:	add	r1, pc, r1
   160b0:	bl	147e4 <strcasecmp@plt>
   160b4:	cmp	r0, #0
   160b8:	streq	r0, [r6]
   160bc:	moveq	r0, r9
   160c0:	beq	16024 <cancelProcess@@Base+0x180>
   160c4:	ldrb	r3, [r4, #10]
   160c8:	and	r3, r3, #2
   160cc:	ands	r0, r3, #255	; 0xff
   160d0:	beq	16100 <cancelProcess@@Base+0x25c>
   160d4:	add	r0, sp, #8
   160d8:	mov	r1, r8
   160dc:	bl	1934c <isInteger@@Base>
   160e0:	cmp	r0, #0
   160e4:	beq	1613c <cancelProcess@@Base+0x298>
   160e8:	ldr	r3, [sp, #8]
   160ec:	cmp	r3, #0
   160f0:	blt	1613c <cancelProcess@@Base+0x298>
   160f4:	ldr	r2, [r4, #12]
   160f8:	str	r3, [r2]
   160fc:	b	16020 <cancelProcess@@Base+0x17c>
   16100:	ldr	r1, [pc, #132]	; 1618c <cancelProcess@@Base+0x2e8>
   16104:	mov	r2, #5
   16108:	add	r1, pc, r1
   1610c:	bl	14a90 <dcgettext@plt>
   16110:	ldr	r1, [pc, #120]	; 16190 <cancelProcess@@Base+0x2ec>
   16114:	mov	r3, r8
   16118:	add	r1, pc, r1
   1611c:	mov	r2, r0
   16120:	mov	r0, #3
   16124:	bl	17b84 <logMessage@@Base>
   16128:	ldrb	r3, [r7, #264]	; 0x108
   1612c:	mov	r0, r9
   16130:	orr	r3, r3, #2
   16134:	strb	r3, [r7, #264]	; 0x108
   16138:	b	16024 <cancelProcess@@Base+0x180>
   1613c:	ldr	r1, [pc, #80]	; 16194 <cancelProcess@@Base+0x2f0>
   16140:	mov	r2, #5
   16144:	mov	r0, #0
   16148:	add	r1, pc, r1
   1614c:	bl	14a90 <dcgettext@plt>
   16150:	ldr	r1, [pc, #64]	; 16198 <cancelProcess@@Base+0x2f4>
   16154:	mov	r3, r8
   16158:	add	r1, pc, r1
   1615c:	mov	r2, r0
   16160:	mov	r0, #3
   16164:	bl	17b84 <logMessage@@Base>
   16168:	ldrb	r3, [r7, #264]	; 0x108
   1616c:	orr	r3, r3, #2
   16170:	strb	r3, [r7, #264]	; 0x108
   16174:	b	16020 <cancelProcess@@Base+0x17c>
   16178:	bl	14a60 <__stack_chk_fail@plt>
   1617c:	andeq	lr, r1, r0, asr r0
   16180:	andeq	r0, r0, ip, lsr #4
   16184:			; <UNDEFINED> instruction: 0x0000c4b0
   16188:	andeq	sl, r0, r8, lsr #11
   1618c:	andeq	sl, r0, r0, asr r5
   16190:	ldrdeq	sl, [r0], -ip
   16194:	andeq	sl, r0, r8, lsr #10
   16198:	muleq	r0, ip, ip
   1619c:	push	{r4, r5, r6, r7, r8, lr}
   161a0:	mov	r5, r0
   161a4:	ldr	ip, [r0, #4]
   161a8:	cmp	ip, #0
   161ac:	popeq	{r4, r5, r6, r7, r8, pc}
   161b0:	ldr	r7, [pc, #120]	; 16230 <cancelProcess@@Base+0x38c>
   161b4:	rsbs	r8, r1, #1
   161b8:	ldr	r6, [pc, #116]	; 16234 <cancelProcess@@Base+0x390>
   161bc:	mov	r3, #0
   161c0:	add	r7, pc, r7
   161c4:	movcc	r8, #0
   161c8:	add	r6, pc, r6
   161cc:	mov	r4, r3
   161d0:	ldr	r2, [r5]
   161d4:	rsb	r3, r3, r3, lsl #3
   161d8:	mov	r0, r5
   161dc:	add	r4, r4, #1
   161e0:	add	r3, r2, r3, lsl #2
   161e4:	ldrb	r2, [r3, #10]
   161e8:	mov	r1, r3
   161ec:	ubfx	r2, r2, #2, #1
   161f0:	cmp	r8, r2
   161f4:	beq	1620c <cancelProcess@@Base+0x368>
   161f8:	ldr	r2, [r3, #16]
   161fc:	cmp	r2, #0
   16200:	beq	1621c <cancelProcess@@Base+0x378>
   16204:	bl	15fa0 <cancelProcess@@Base+0xfc>
   16208:	ldr	ip, [r5, #4]
   1620c:	cmp	r4, ip
   16210:	mov	r3, r4
   16214:	bcc	161d0 <cancelProcess@@Base+0x32c>
   16218:	pop	{r4, r5, r6, r7, r8, pc}
   1621c:	ldr	r3, [r3, #4]
   16220:	cmp	r3, #0
   16224:	moveq	r2, r7
   16228:	movne	r2, r6
   1622c:	b	16204 <cancelProcess@@Base+0x360>
   16230:	muleq	r0, r4, r4
   16234:	andeq	sl, r0, r8, lsl #12
   16238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1623c:	mov	r9, r1
   16240:	sub	sp, sp, #12
   16244:	mov	r1, #35	; 0x23
   16248:	mov	r8, r0
   1624c:	bl	14d3c <strchr@plt>
   16250:	ldr	r1, [pc, #620]	; 164c4 <cancelProcess@@Base+0x620>
   16254:	add	r1, pc, r1
   16258:	cmp	r0, #0
   1625c:	movne	r3, #0
   16260:	strbne	r3, [r0]
   16264:	mov	r0, r8
   16268:	bl	14874 <strtok@plt>
   1626c:	subs	fp, r0, #0
   16270:	beq	163dc <cancelProcess@@Base+0x538>
   16274:	ldr	r3, [r9]
   16278:	ldr	sl, [r3, #4]
   1627c:	cmp	sl, #0
   16280:	beq	162d0 <cancelProcess@@Base+0x42c>
   16284:	ldr	r7, [r3]
   16288:	mov	r5, #0
   1628c:	mov	r4, r5
   16290:	rsb	r2, r5, r5, lsl #3
   16294:	mov	r0, fp
   16298:	add	r4, r4, #1
   1629c:	add	r6, r7, r2, lsl #2
   162a0:	ldrb	ip, [r6, #10]
   162a4:	tst	ip, #4
   162a8:	beq	162c4 <cancelProcess@@Base+0x420>
   162ac:	ldr	r1, [r7, r2, lsl #2]
   162b0:	cmp	r1, #0
   162b4:	beq	162c4 <cancelProcess@@Base+0x420>
   162b8:	bl	147e4 <strcasecmp@plt>
   162bc:	subs	ip, r0, #0
   162c0:	beq	16324 <cancelProcess@@Base+0x480>
   162c4:	cmp	r4, sl
   162c8:	mov	r5, r4
   162cc:	bne	16290 <cancelProcess@@Base+0x3ec>
   162d0:	ldr	r1, [pc, #496]	; 164c8 <cancelProcess@@Base+0x624>
   162d4:	mov	r2, #5
   162d8:	mov	r0, #0
   162dc:	mov	ip, #1
   162e0:	add	r1, pc, r1
   162e4:	str	ip, [sp, #4]
   162e8:	bl	14a90 <dcgettext@plt>
   162ec:	ldr	r1, [pc, #472]	; 164cc <cancelProcess@@Base+0x628>
   162f0:	mov	r3, r8
   162f4:	add	r1, pc, r1
   162f8:	mov	r2, r0
   162fc:	mov	r0, #3
   16300:	bl	17b84 <logMessage@@Base>
   16304:	ldr	r3, [r9]
   16308:	ldrb	r2, [r3, #264]	; 0x108
   1630c:	orr	r2, r2, #2
   16310:	strb	r2, [r3, #264]	; 0x108
   16314:	ldr	ip, [sp, #4]
   16318:	mov	r0, ip
   1631c:	add	sp, sp, #12
   16320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16324:	ldr	r4, [pc, #420]	; 164d0 <cancelProcess@@Base+0x62c>
   16328:	str	ip, [sp, #4]
   1632c:	add	r4, pc, r4
   16330:	mov	r1, r4
   16334:	bl	14874 <strtok@plt>
   16338:	ldr	ip, [sp, #4]
   1633c:	subs	r7, r0, #0
   16340:	beq	1649c <cancelProcess@@Base+0x5f8>
   16344:	mov	r0, ip
   16348:	mov	r1, r4
   1634c:	str	ip, [sp, #4]
   16350:	bl	14874 <strtok@plt>
   16354:	ldr	ip, [sp, #4]
   16358:	cmp	r0, #0
   1635c:	beq	163ec <cancelProcess@@Base+0x548>
   16360:	mov	r0, #0
   16364:	mov	r1, r4
   16368:	bl	14874 <strtok@plt>
   1636c:	cmp	r0, #0
   16370:	bne	16360 <cancelProcess@@Base+0x4bc>
   16374:	ldr	r1, [pc, #344]	; 164d4 <cancelProcess@@Base+0x630>
   16378:	mov	r2, #5
   1637c:	add	r1, pc, r1
   16380:	bl	14a90 <dcgettext@plt>
   16384:	ldr	r1, [pc, #332]	; 164d8 <cancelProcess@@Base+0x634>
   16388:	mov	r3, r8
   1638c:	add	r1, pc, r1
   16390:	mov	r2, r0
   16394:	mov	r0, #3
   16398:	bl	17b84 <logMessage@@Base>
   1639c:	ldr	r3, [r9]
   163a0:	mov	ip, #1
   163a4:	mov	r0, ip
   163a8:	ldrb	r2, [r3, #264]	; 0x108
   163ac:	orr	r2, r2, #2
   163b0:	strb	r2, [r3, #264]	; 0x108
   163b4:	add	sp, sp, #12
   163b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163bc:	ldrb	r3, [r7]
   163c0:	cmp	r3, #0
   163c4:	beq	163dc <cancelProcess@@Base+0x538>
   163c8:	mov	r2, ip
   163cc:	mov	r1, r7
   163d0:	bl	15ebc <cancelProcess@@Base+0x18>
   163d4:	subs	ip, r0, #0
   163d8:	beq	16318 <cancelProcess@@Base+0x474>
   163dc:	mov	ip, #1
   163e0:	mov	r0, ip
   163e4:	add	sp, sp, #12
   163e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163ec:	ldr	r4, [r9, #4]
   163f0:	lsl	sl, r5, #2
   163f4:	add	r0, r4, sl
   163f8:	ldr	r3, [r4, r5, lsl #2]
   163fc:	cmp	r3, #0
   16400:	beq	16470 <cancelProcess@@Base+0x5cc>
   16404:	ldr	r3, [r6, #4]
   16408:	cmp	r3, #0
   1640c:	beq	1641c <cancelProcess@@Base+0x578>
   16410:	ldrb	r3, [r6, #10]
   16414:	tst	r3, #2
   16418:	bne	163bc <cancelProcess@@Base+0x518>
   1641c:	ldr	r1, [pc, #184]	; 164dc <cancelProcess@@Base+0x638>
   16420:	mov	r2, #5
   16424:	mov	r0, #0
   16428:	str	ip, [sp, #4]
   1642c:	add	r1, pc, r1
   16430:	bl	14a90 <dcgettext@plt>
   16434:	ldr	r1, [pc, #164]	; 164e0 <cancelProcess@@Base+0x63c>
   16438:	mov	r3, r8
   1643c:	add	r1, pc, r1
   16440:	mov	r2, r0
   16444:	mov	r0, #3
   16448:	bl	17b84 <logMessage@@Base>
   1644c:	ldr	r3, [r9]
   16450:	ldrb	r2, [r3, #264]	; 0x108
   16454:	orr	r2, r2, #2
   16458:	strb	r2, [r3, #264]	; 0x108
   1645c:	ldr	r0, [r4, sl]
   16460:	bl	147fc <free@plt>
   16464:	mov	r3, #0
   16468:	str	r3, [r4, sl]
   1646c:	ldr	ip, [sp, #4]
   16470:	mov	r0, r7
   16474:	str	ip, [sp, #4]
   16478:	bl	14928 <__strdup@plt>
   1647c:	cmp	r0, #0
   16480:	str	r0, [r4, sl]
   16484:	ldr	ip, [sp, #4]
   16488:	bne	163dc <cancelProcess@@Base+0x538>
   1648c:	str	ip, [sp, #4]
   16490:	bl	17c90 <logMallocError@@Base>
   16494:	ldr	ip, [sp, #4]
   16498:	b	16318 <cancelProcess@@Base+0x474>
   1649c:	ldr	r1, [pc, #64]	; 164e4 <cancelProcess@@Base+0x640>
   164a0:	mov	r2, #5
   164a4:	add	r1, pc, r1
   164a8:	bl	14a90 <dcgettext@plt>
   164ac:	ldr	r1, [pc, #52]	; 164e8 <cancelProcess@@Base+0x644>
   164b0:	mov	r3, r8
   164b4:	add	r1, pc, r1
   164b8:	mov	r2, r0
   164bc:	mov	r0, #3
   164c0:	b	16398 <cancelProcess@@Base+0x4f4>
   164c4:	andeq	sl, r0, r4, lsr r4
   164c8:	andeq	sl, r0, r4, asr #8
   164cc:	andeq	sl, r0, r0, lsl #22
   164d0:	andeq	sl, r0, ip, asr r3
   164d4:	andeq	sl, r0, r4, asr #6
   164d8:	andeq	sl, r0, r8, ror #20
   164dc:	andeq	sl, r0, r4, asr #5
   164e0:			; <UNDEFINED> instruction: 0x0000a9b8
   164e4:	andeq	sl, r0, r8, ror #3
   164e8:	andeq	sl, r0, r0, asr #18

000164ec <processOptions@@Base>:
   164ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164f0:	add	fp, sp, #32
   164f4:	ldr	r8, [pc, #4068]	; 174e0 <processOptions@@Base+0xff4>
   164f8:	sub	sp, sp, #1680	; 0x690
   164fc:	sub	sp, sp, #4
   16500:	ldr	r3, [pc, #4060]	; 174e4 <processOptions@@Base+0xff8>
   16504:	add	r8, pc, r8
   16508:	sub	r5, fp, #1584	; 0x630
   1650c:	str	r0, [fp, #-1648]	; 0xfffff990
   16510:	sub	r5, r5, #4
   16514:	str	r5, [fp, #-1652]	; 0xfffff98c
   16518:	ldr	r3, [r8, r3]
   1651c:	mov	r9, r1
   16520:	mov	r0, r5
   16524:	mov	r1, #0
   16528:	mov	sl, r2
   1652c:	mov	r2, #268	; 0x10c
   16530:	str	r3, [fp, #-1668]	; 0xfffff97c
   16534:	ldr	r3, [r3]
   16538:	str	r3, [fp, #-40]	; 0xffffffd8
   1653c:	bl	148e0 <memset@plt>
   16540:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16544:	sub	r2, fp, #1328	; 0x530
   16548:	sub	r1, fp, #1584	; 0x630
   1654c:	add	r2, r2, #3
   16550:	sub	r1, r1, #4
   16554:	ldr	ip, [r5]
   16558:	add	r3, r1, #7
   1655c:	ldr	r0, [r5, #4]
   16560:	mov	r1, #0
   16564:	str	ip, [fp, #-1588]	; 0xfffff9cc
   16568:	str	r0, [fp, #-1584]	; 0xfffff9d0
   1656c:	strb	r1, [r3, #1]!
   16570:	cmp	r3, r2
   16574:	bne	1656c <processOptions@@Base+0x80>
   16578:	ldr	r1, [sl]
   1657c:	ldr	r0, [r9]
   16580:	str	sp, [fp, #-1672]	; 0xfffff978
   16584:	bl	1556c <beginProgram@@Base>
   16588:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1658c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16590:	add	r2, r3, #1
   16594:	cmp	r3, #0
   16598:	lsl	r2, r2, #1
   1659c:	ldr	r5, [r5, #24]
   165a0:	add	r1, r2, #7
   165a4:	bic	r1, r1, #7
   165a8:	lsl	r2, r2, #4
   165ac:	sub	sp, sp, r1
   165b0:	sub	r2, r2, #8
   165b4:	add	ip, sp, #24
   165b8:	sub	sp, sp, r2
   165bc:	str	r5, [fp, #-1660]	; 0xfffff984
   165c0:	add	r5, sp, #24
   165c4:	str	ip, [fp, #-1632]	; 0xfffff9a0
   165c8:	str	r5, [fp, #-1664]	; 0xfffff980
   165cc:	beq	17598 <processOptions@@Base+0x10ac>
   165d0:	ldr	r5, [pc, #3856]	; 174e8 <processOptions@@Base+0xffc>
   165d4:	sub	r2, fp, #1600	; 0x640
   165d8:	ldr	ip, [pc, #3852]	; 174ec <processOptions@@Base+0x1000>
   165dc:	sub	r2, r2, #4
   165e0:	add	r5, pc, r5
   165e4:	str	r5, [fp, #-1644]	; 0xfffff994
   165e8:	mov	r5, #0
   165ec:	add	ip, pc, ip
   165f0:	sub	r2, r2, #8
   165f4:	str	ip, [fp, #-1624]	; 0xfffff9a8
   165f8:	str	r2, [fp, #-1628]	; 0xfffff9a4
   165fc:	mov	r1, r5
   16600:	ldr	r4, [fp, #-1664]	; 0xfffff980
   16604:	mov	ip, r5
   16608:	str	r9, [fp, #-1636]	; 0xfffff99c
   1660c:	str	r8, [fp, #-1640]	; 0xfffff998
   16610:	b	1662c <processOptions@@Base+0x140>
   16614:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16618:	add	r5, r5, #1
   1661c:	cmp	r5, r3
   16620:	mov	r1, r5
   16624:	bcs	166ec <processOptions@@Base+0x200>
   16628:	mov	r4, r7
   1662c:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   16630:	rsb	r1, r1, r1, lsl #3
   16634:	add	r6, r2, r1, lsl #2
   16638:	ldr	r0, [r2, r1, lsl #2]
   1663c:	cmp	r0, #0
   16640:	moveq	r7, r4
   16644:	beq	16618 <processOptions@@Base+0x12c>
   16648:	str	r0, [r4]
   1664c:	add	r7, r4, #16
   16650:	ldr	r3, [r6, #4]
   16654:	str	ip, [r4, #8]
   16658:	adds	r3, r3, #0
   1665c:	movne	r3, #1
   16660:	str	r3, [r4, #4]
   16664:	ldrb	r3, [r6, #8]
   16668:	str	r3, [r4, #12]
   1666c:	ldr	r3, [r6, #4]
   16670:	cmp	r3, #0
   16674:	bne	16614 <processOptions@@Base+0x128>
   16678:	ldr	r3, [r6, #12]
   1667c:	cmp	r3, #0
   16680:	beq	16614 <processOptions@@Base+0x128>
   16684:	ldr	r8, [r2, r1, lsl #2]
   16688:	mov	r2, #3
   1668c:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   16690:	str	ip, [fp, #-1688]	; 0xfffff968
   16694:	mov	r1, r8
   16698:	bl	14ab4 <strncasecmp@plt>
   1669c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   166a0:	cmp	r0, #0
   166a4:	bne	16ce4 <processOptions@@Base+0x7f8>
   166a8:	add	r0, r8, #3
   166ac:	bl	14928 <__strdup@plt>
   166b0:	ldr	ip, [fp, #-1688]	; 0xfffff968
   166b4:	subs	r9, r0, #0
   166b8:	beq	1744c <processOptions@@Base+0xf60>
   166bc:	ldr	r0, [fp, #-1628]	; 0xfffff9a4
   166c0:	add	r5, r5, #1
   166c4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   166c8:	add	r7, r4, #32
   166cc:	str	r9, [r4, #16]
   166d0:	mov	r1, r5
   166d4:	str	ip, [r4, #20]
   166d8:	cmp	r5, r3
   166dc:	str	r0, [r4, #24]
   166e0:	ldrb	r2, [r6, #8]
   166e4:	str	r2, [r4, #28]
   166e8:	bcc	16628 <processOptions@@Base+0x13c>
   166ec:	ldr	r9, [fp, #-1636]	; 0xfffff99c
   166f0:	ldr	r8, [fp, #-1640]	; 0xfffff998
   166f4:	mov	r1, #0
   166f8:	mov	r2, #16
   166fc:	mov	r0, r7
   16700:	bl	148e0 <memset@plt>
   16704:	sub	r3, fp, #1312	; 0x520
   16708:	sub	r3, r3, #4
   1670c:	sub	r1, fp, #300	; 0x12c
   16710:	sub	r3, r3, #8
   16714:	mov	r2, #0
   16718:	str	r2, [r3, #4]!
   1671c:	cmp	r3, r1
   16720:	bne	16718 <processOptions@@Base+0x22c>
   16724:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16728:	mov	r2, #43	; 0x2b
   1672c:	ldr	r5, [fp, #-1632]	; 0xfffff9a0
   16730:	cmp	r3, #0
   16734:	add	r1, r5, #1
   16738:	strb	r2, [r5]
   1673c:	beq	167a4 <processOptions@@Base+0x2b8>
   16740:	mov	r2, #0
   16744:	mov	lr, #58	; 0x3a
   16748:	mov	r3, r2
   1674c:	mov	r4, r2
   16750:	ldr	r0, [fp, #-1588]	; 0xfffff9cc
   16754:	rsb	r3, r3, r3, lsl #3
   16758:	sub	r5, fp, #36	; 0x24
   1675c:	add	r2, r2, #1
   16760:	add	r3, r0, r3, lsl #2
   16764:	ldrb	r0, [r3, #8]
   16768:	add	ip, r5, r0, lsl #2
   1676c:	str	r3, [ip, #-1284]	; 0xfffffafc
   16770:	strb	r0, [r1]
   16774:	ldr	r0, [r3, #4]
   16778:	cmp	r0, #0
   1677c:	strbne	lr, [r1, #1]
   16780:	ldr	r3, [r3, #12]
   16784:	addne	r1, r1, #2
   16788:	addeq	r1, r1, #1
   1678c:	cmp	r3, #0
   16790:	strne	r4, [r3]
   16794:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16798:	cmp	r2, r3
   1679c:	mov	r3, r2
   167a0:	bcc	16750 <processOptions@@Base+0x264>
   167a4:	mov	r3, #0
   167a8:	strb	r3, [r1]
   167ac:	ldr	r2, [r9]
   167b0:	cmp	r2, #1
   167b4:	ldrgt	r2, [pc, #3380]	; 174f0 <processOptions@@Base+0x1004>
   167b8:	ldrgt	r2, [r8, r2]
   167bc:	strgt	r3, [r2]
   167c0:	mov	ip, #0
   167c4:	ldr	r2, [pc, #3368]	; 174f4 <processOptions@@Base+0x1008>
   167c8:	str	ip, [fp, #-1640]	; 0xfffff998
   167cc:	mov	r5, ip
   167d0:	str	ip, [fp, #-1624]	; 0xfffff9a8
   167d4:	mov	r3, #1
   167d8:	ldr	ip, [pc, #3352]	; 174f8 <processOptions@@Base+0x100c>
   167dc:	mov	r4, r3
   167e0:	ldr	r6, [r8, r2]
   167e4:	mvn	r7, #0
   167e8:	add	ip, pc, ip
   167ec:	str	ip, [fp, #-1628]	; 0xfffff9a4
   167f0:	ldr	ip, [pc, #3332]	; 174fc <processOptions@@Base+0x1010>
   167f4:	str	r3, [r6]
   167f8:	add	ip, pc, ip
   167fc:	str	ip, [fp, #-1636]	; 0xfffff99c
   16800:	ldr	ip, [pc, #3320]	; 17500 <processOptions@@Base+0x1014>
   16804:	ldr	r0, [r9]
   16808:	ldr	r1, [sl]
   1680c:	add	ip, pc, ip
   16810:	str	ip, [fp, #-1644]	; 0xfffff994
   16814:	ldr	ip, [pc, #3304]	; 17504 <processOptions@@Base+0x1018>
   16818:	add	ip, pc, ip
   1681c:	str	ip, [fp, #-1656]	; 0xfffff988
   16820:	cmp	r4, r0
   16824:	beq	1685c <processOptions@@Base+0x370>
   16828:	cmp	r5, #0
   1682c:	ldr	r3, [r1, r4, lsl #2]
   16830:	beq	16b88 <processOptions@@Base+0x69c>
   16834:	ldrb	r3, [r5]
   16838:	cmp	r3, #0
   1683c:	bne	16abc <processOptions@@Base+0x5d0>
   16840:	add	r4, r4, #1
   16844:	str	r4, [r6]
   16848:	ldr	r0, [r9]
   1684c:	mov	r5, r3
   16850:	ldr	r1, [sl]
   16854:	cmp	r4, r0
   16858:	bne	16828 <processOptions@@Base+0x33c>
   1685c:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   16860:	add	r1, r1, r4, lsl #2
   16864:	str	r1, [sl]
   16868:	cmp	r5, #0
   1686c:	ldr	r3, [r6]
   16870:	ldr	r2, [r9]
   16874:	rsb	r3, r3, r2
   16878:	str	r3, [r9]
   1687c:	bne	16d68 <processOptions@@Base+0x87c>
   16880:	ldr	r5, [fp, #-1664]	; 0xfffff980
   16884:	ldr	r0, [r5]
   16888:	cmp	r0, #0
   1688c:	ldrne	r4, [fp, #-1664]	; 0xfffff980
   16890:	beq	168b0 <processOptions@@Base+0x3c4>
   16894:	ldr	r3, [r4, #8]
   16898:	cmp	r3, #0
   1689c:	beq	168a4 <processOptions@@Base+0x3b8>
   168a0:	bl	147fc <free@plt>
   168a4:	ldr	r0, [r4, #16]!
   168a8:	cmp	r0, #0
   168ac:	bne	16894 <processOptions@@Base+0x3a8>
   168b0:	ldr	ip, [fp, #-1648]	; 0xfffff990
   168b4:	ldr	sp, [fp, #-1672]	; 0xfffff978
   168b8:	ldr	sl, [ip, #16]
   168bc:	cmp	sl, #0
   168c0:	beq	168d0 <processOptions@@Base+0x3e4>
   168c4:	ldr	sl, [sl]
   168c8:	adds	sl, sl, #0
   168cc:	movne	sl, #1
   168d0:	ldr	r5, [fp, #-1648]	; 0xfffff990
   168d4:	str	sl, [fp, #-1624]	; 0xfffff9a8
   168d8:	ldr	r3, [r5, #8]
   168dc:	cmp	r3, #0
   168e0:	beq	168f0 <processOptions@@Base+0x404>
   168e4:	ldr	r3, [r3]
   168e8:	cmp	r3, #0
   168ec:	bne	17358 <processOptions@@Base+0xe6c>
   168f0:	ldr	ip, [fp, #-1648]	; 0xfffff990
   168f4:	ldr	r3, [ip, #12]
   168f8:	cmp	r3, #0
   168fc:	beq	1690c <processOptions@@Base+0x420>
   16900:	ldr	r3, [r3]
   16904:	cmp	r3, #0
   16908:	bne	17224 <processOptions@@Base+0xd38>
   1690c:	sub	r0, fp, #1584	; 0x630
   16910:	mov	r1, #0
   16914:	sub	r0, r0, #4
   16918:	bl	1619c <cancelProcess@@Base+0x2f8>
   1691c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16920:	ldr	r3, [r5, #16]
   16924:	cmp	r3, #0
   16928:	beq	16a74 <processOptions@@Base+0x588>
   1692c:	ldr	r3, [r3]
   16930:	cmp	r3, #0
   16934:	beq	16a74 <processOptions@@Base+0x588>
   16938:	sub	r4, fp, #1600	; 0x640
   1693c:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   16940:	sub	r4, r4, #4
   16944:	str	r3, [fp, #-1616]	; 0xfffff9b0
   16948:	sub	r0, r4, #12
   1694c:	eor	sl, r5, #1
   16950:	bl	159dc <fixInstallPath@@Base>
   16954:	ldr	r5, [fp, #-1616]	; 0xfffff9b0
   16958:	ldr	r1, [pc, #2984]	; 17508 <processOptions@@Base+0x101c>
   1695c:	mov	r2, sl
   16960:	add	r1, pc, r1
   16964:	mov	r0, r5
   16968:	bl	18710 <openDataFile@@Base>
   1696c:	subs	r6, r0, #0
   16970:	beq	16d3c <processOptions@@Base+0x850>
   16974:	ldr	r7, [fp, #-1584]	; 0xfffff9d0
   16978:	sub	ip, fp, #1584	; 0x630
   1697c:	sub	ip, ip, #4
   16980:	str	ip, [fp, #-1612]	; 0xfffff9b4
   16984:	lsl	r0, r7, #2
   16988:	bl	14b74 <malloc@plt>
   1698c:	cmp	r0, #0
   16990:	str	r0, [fp, #-1608]	; 0xfffff9b8
   16994:	beq	175a0 <processOptions@@Base+0x10b4>
   16998:	cmp	r7, #0
   1699c:	movne	r3, #0
   169a0:	movne	r2, r0
   169a4:	movne	r1, r3
   169a8:	bne	169b4 <processOptions@@Base+0x4c8>
   169ac:	b	169c8 <processOptions@@Base+0x4dc>
   169b0:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   169b4:	str	r1, [r2, r3, lsl #2]
   169b8:	add	r3, r3, #1
   169bc:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   169c0:	cmp	r3, r2
   169c4:	bcc	169b0 <processOptions@@Base+0x4c4>
   169c8:	ldr	r1, [pc, #2876]	; 1750c <processOptions@@Base+0x1020>
   169cc:	sub	r2, r4, #8
   169d0:	mov	r0, r6
   169d4:	add	r1, pc, r1
   169d8:	bl	189ec <processLines@@Base>
   169dc:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   169e0:	cmp	r3, #0
   169e4:	subne	sl, fp, #1584	; 0x630
   169e8:	movne	r4, #0
   169ec:	subne	sl, sl, #4
   169f0:	movne	r9, r4
   169f4:	mov	r7, r0
   169f8:	beq	16a40 <processOptions@@Base+0x554>
   169fc:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   16a00:	ldr	r8, [r2, r4]
   16a04:	cmp	r8, #0
   16a08:	beq	16a30 <processOptions@@Base+0x544>
   16a0c:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   16a10:	rsb	r3, r4, r4, lsl #3
   16a14:	mov	r2, r8
   16a18:	mov	r0, sl
   16a1c:	add	r1, r1, r3
   16a20:	bl	15fa0 <cancelProcess@@Base+0xfc>
   16a24:	mov	r0, r8
   16a28:	bl	147fc <free@plt>
   16a2c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16a30:	add	r9, r9, #1
   16a34:	add	r4, r4, #4
   16a38:	cmp	r9, r3
   16a3c:	bcc	169fc <processOptions@@Base+0x510>
   16a40:	cmp	r7, #0
   16a44:	beq	174ac <processOptions@@Base+0xfc0>
   16a48:	ldr	r0, [fp, #-1608]	; 0xfffff9b8
   16a4c:	bl	147fc <free@plt>
   16a50:	mov	r0, r6
   16a54:	bl	14bbc <fclose@plt>
   16a58:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16a5c:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   16a60:	ldr	r3, [r5, #16]
   16a64:	ldr	r3, [r3]
   16a68:	cmp	r3, r0
   16a6c:	beq	16a74 <processOptions@@Base+0x588>
   16a70:	bl	147fc <free@plt>
   16a74:	sub	r0, fp, #1584	; 0x630
   16a78:	mov	r1, #1
   16a7c:	sub	r0, r0, #4
   16a80:	bl	1619c <cancelProcess@@Base+0x2f8>
   16a84:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   16a88:	tst	r3, #1
   16a8c:	movne	r0, #1
   16a90:	bne	16aa0 <processOptions@@Base+0x5b4>
   16a94:	tst	r3, #4
   16a98:	moveq	r0, #0
   16a9c:	movne	r0, #2
   16aa0:	ldr	ip, [fp, #-1668]	; 0xfffff97c
   16aa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16aa8:	ldr	r3, [ip]
   16aac:	cmp	r2, r3
   16ab0:	bne	175d4 <processOptions@@Base+0x10e8>
   16ab4:	sub	sp, fp, #32
   16ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16abc:	sub	r0, fp, #36	; 0x24
   16ac0:	add	r2, r0, r3, lsl #2
   16ac4:	ldr	r2, [r2, #-1284]	; 0xfffffafc
   16ac8:	cmp	r2, #0
   16acc:	beq	16adc <processOptions@@Base+0x5f0>
   16ad0:	ldr	ip, [r2, #4]
   16ad4:	cmp	ip, #0
   16ad8:	beq	16cd0 <processOptions@@Base+0x7e4>
   16adc:	ldr	r2, [pc, #2604]	; 17510 <processOptions@@Base+0x1024>
   16ae0:	mov	ip, #63	; 0x3f
   16ae4:	ldr	r2, [r8, r2]
   16ae8:	str	r3, [r2]
   16aec:	cmp	ip, #63	; 0x3f
   16af0:	add	r5, r5, #1
   16af4:	mov	r4, #43	; 0x2b
   16af8:	beq	16bcc <processOptions@@Base+0x6e0>
   16afc:	bgt	16b60 <processOptions@@Base+0x674>
   16b00:	cmp	ip, #0
   16b04:	beq	16c3c <processOptions@@Base+0x750>
   16b08:	cmp	ip, #58	; 0x3a
   16b0c:	bne	16bf4 <processOptions@@Base+0x708>
   16b10:	ldr	r1, [fp, #-1644]	; 0xfffff994
   16b14:	mov	r2, #5
   16b18:	mov	r0, #0
   16b1c:	bl	14a90 <dcgettext@plt>
   16b20:	ldr	ip, [pc, #2536]	; 17510 <processOptions@@Base+0x1024>
   16b24:	ldr	r1, [fp, #-1656]	; 0xfffff988
   16b28:	mov	r3, r4
   16b2c:	mov	r2, r0
   16b30:	mov	r0, #3
   16b34:	ldr	ip, [r8, ip]
   16b38:	ldr	ip, [ip]
   16b3c:	str	ip, [sp]
   16b40:	bl	17b84 <logMessage@@Base>
   16b44:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   16b48:	ldr	r0, [r9]
   16b4c:	orr	r3, r3, #4
   16b50:	ldr	r4, [r6]
   16b54:	strb	r3, [fp, #-1324]	; 0xfffffad4
   16b58:	ldr	r1, [sl]
   16b5c:	b	16820 <processOptions@@Base+0x334>
   16b60:	cmp	ip, #72	; 0x48
   16b64:	beq	16c78 <processOptions@@Base+0x78c>
   16b68:	cmp	ip, #104	; 0x68
   16b6c:	bne	16bf4 <processOptions@@Base+0x708>
   16b70:	mov	ip, #1
   16b74:	ldr	r0, [r9]
   16b78:	str	ip, [fp, #-1624]	; 0xfffff9a8
   16b7c:	ldr	r4, [r6]
   16b80:	ldr	r1, [sl]
   16b84:	b	16820 <processOptions@@Base+0x334>
   16b88:	cmp	r7, r4
   16b8c:	beq	16b9c <processOptions@@Base+0x6b0>
   16b90:	ldrb	r2, [r3]
   16b94:	cmp	r2, #43	; 0x2b
   16b98:	beq	16d54 <processOptions@@Base+0x868>
   16b9c:	mov	r2, #0
   16ba0:	str	r2, [sp]
   16ba4:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   16ba8:	ldr	r3, [fp, #-1664]	; 0xfffff980
   16bac:	bl	14ac0 <getopt_long@plt>
   16bb0:	cmn	r0, #1
   16bb4:	mov	ip, r0
   16bb8:	beq	175c8 <processOptions@@Base+0x10dc>
   16bbc:	cmp	ip, #63	; 0x3f
   16bc0:	mov	r7, r4
   16bc4:	mov	r4, #45	; 0x2d
   16bc8:	bne	16afc <processOptions@@Base+0x610>
   16bcc:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   16bd0:	mov	r2, #5
   16bd4:	mov	r0, #0
   16bd8:	bl	14a90 <dcgettext@plt>
   16bdc:	ldr	ip, [pc, #2348]	; 17510 <processOptions@@Base+0x1024>
   16be0:	mov	r3, r4
   16be4:	ldr	r1, [fp, #-1636]	; 0xfffff99c
   16be8:	mov	r2, r0
   16bec:	mov	r0, #3
   16bf0:	b	16b34 <processOptions@@Base+0x648>
   16bf4:	sub	r0, fp, #36	; 0x24
   16bf8:	add	r3, r0, ip, lsl #2
   16bfc:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   16c00:	ldr	r2, [r3, #4]
   16c04:	cmp	r2, #0
   16c08:	beq	171fc <processOptions@@Base+0xd10>
   16c0c:	ldr	r2, [pc, #2304]	; 17514 <processOptions@@Base+0x1028>
   16c10:	ldr	r2, [r8, r2]
   16c14:	ldr	r1, [r2]
   16c18:	ldrb	r2, [r1]
   16c1c:	cmp	r2, #0
   16c20:	bne	16c94 <processOptions@@Base+0x7a8>
   16c24:	add	ip, r0, ip
   16c28:	ldr	r4, [r6]
   16c2c:	ldr	r0, [r9]
   16c30:	strb	r2, [ip, #-1544]	; 0xfffff9f8
   16c34:	ldr	r1, [sl]
   16c38:	b	16820 <processOptions@@Base+0x334>
   16c3c:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   16c40:	sub	r0, fp, #36	; 0x24
   16c44:	sub	r1, fp, #36	; 0x24
   16c48:	mov	r2, #1
   16c4c:	add	r3, r0, r3, lsl #2
   16c50:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   16c54:	ldr	r3, [r3, #12]
   16c58:	str	ip, [r3]
   16c5c:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   16c60:	ldr	r0, [r9]
   16c64:	add	r3, r1, r3
   16c68:	ldr	r4, [r6]
   16c6c:	ldr	r1, [sl]
   16c70:	strb	r2, [r3, #-1544]	; 0xfffff9f8
   16c74:	b	16820 <processOptions@@Base+0x334>
   16c78:	mov	ip, #1
   16c7c:	ldr	r0, [r9]
   16c80:	str	ip, [fp, #-1640]	; 0xfffff998
   16c84:	str	ip, [fp, #-1624]	; 0xfffff9a8
   16c88:	ldr	r4, [r6]
   16c8c:	ldr	r1, [sl]
   16c90:	b	16820 <processOptions@@Base+0x334>
   16c94:	ldr	r0, [r3, #12]
   16c98:	cmp	r0, #0
   16c9c:	beq	16cb0 <processOptions@@Base+0x7c4>
   16ca0:	ldrb	r3, [r3, #10]
   16ca4:	tst	r3, #2
   16ca8:	streq	r1, [r0]
   16cac:	bne	17460 <processOptions@@Base+0xf74>
   16cb0:	sub	r2, fp, #36	; 0x24
   16cb4:	mov	r3, #1
   16cb8:	add	ip, r2, ip
   16cbc:	ldr	r0, [r9]
   16cc0:	ldr	r4, [r6]
   16cc4:	strb	r3, [ip, #-1544]	; 0xfffff9f8
   16cc8:	ldr	r1, [sl]
   16ccc:	b	16820 <processOptions@@Base+0x334>
   16cd0:	ldr	r2, [r2, #12]
   16cd4:	cmp	r2, #0
   16cd8:	strne	r3, [fp, #-1612]	; 0xfffff9b4
   16cdc:	bne	16aec <processOptions@@Base+0x600>
   16ce0:	b	16adc <processOptions@@Base+0x5f0>
   16ce4:	mov	r0, r8
   16ce8:	str	ip, [fp, #-1688]	; 0xfffff968
   16cec:	bl	14b80 <strlen@plt>
   16cf0:	add	r1, r0, #4
   16cf4:	str	r1, [fp, #-1684]	; 0xfffff96c
   16cf8:	mov	r0, r1
   16cfc:	bl	14b74 <malloc@plt>
   16d00:	ldr	r1, [fp, #-1684]	; 0xfffff96c
   16d04:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16d08:	subs	r9, r0, #0
   16d0c:	beq	1744c <processOptions@@Base+0xf60>
   16d10:	ldr	r2, [fp, #-1644]	; 0xfffff994
   16d14:	str	r2, [sp]
   16d18:	mov	r2, #1
   16d1c:	ldr	r3, [fp, #-1624]	; 0xfffff9a8
   16d20:	str	r8, [sp, #8]
   16d24:	str	r3, [sp, #4]
   16d28:	mvn	r3, #0
   16d2c:	str	ip, [fp, #-1688]	; 0xfffff968
   16d30:	bl	14b8c <__snprintf_chk@plt>
   16d34:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16d38:	b	166bc <processOptions@@Base+0x1d0>
   16d3c:	cmp	sl, #0
   16d40:	bne	17474 <processOptions@@Base+0xf88>
   16d44:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   16d48:	orr	r3, r3, #2
   16d4c:	strb	r3, [fp, #-1324]	; 0xfffffad4
   16d50:	b	16a58 <processOptions@@Base+0x56c>
   16d54:	adds	r3, r3, #1
   16d58:	movne	r5, r3
   16d5c:	movne	r7, r4
   16d60:	bne	16820 <processOptions@@Base+0x334>
   16d64:	b	16b9c <processOptions@@Base+0x6b0>
   16d68:	ldr	r3, [pc, #1960]	; 17518 <processOptions@@Base+0x102c>
   16d6c:	str	sp, [fp, #-1680]	; 0xfffff970
   16d70:	sub	sp, sp, #80	; 0x50
   16d74:	ldr	r6, [fp, #-1584]	; 0xfffff9d0
   16d78:	add	sl, sp, #24
   16d7c:	ldr	r3, [r8, r3]
   16d80:	cmp	r6, #0
   16d84:	ldr	r3, [r3]
   16d88:	str	r3, [fp, #-1632]	; 0xfffff9a0
   16d8c:	beq	175a8 <processOptions@@Base+0x10bc>
   16d90:	ldr	r5, [fp, #-1588]	; 0xfffff9cc
   16d94:	mov	r7, #0
   16d98:	mov	r4, r7
   16d9c:	mov	r3, r7
   16da0:	mov	r9, r7
   16da4:	str	r7, [fp, #-1656]	; 0xfffff988
   16da8:	str	r8, [fp, #-1624]	; 0xfffff9a8
   16dac:	rsb	r3, r3, r3, lsl #3
   16db0:	ldr	r0, [r5, r3, lsl #2]
   16db4:	add	r8, r5, r3, lsl #2
   16db8:	cmp	r0, #0
   16dbc:	beq	16dcc <processOptions@@Base+0x8e0>
   16dc0:	bl	14b80 <strlen@plt>
   16dc4:	cmp	r4, r0
   16dc8:	movcc	r4, r0
   16dcc:	ldr	r0, [r8, #4]
   16dd0:	cmp	r0, #0
   16dd4:	beq	16de4 <processOptions@@Base+0x8f8>
   16dd8:	bl	14b80 <strlen@plt>
   16ddc:	cmp	r9, r0
   16de0:	movcc	r9, r0
   16de4:	add	r7, r7, #1
   16de8:	cmp	r7, r6
   16dec:	mov	r3, r7
   16df0:	bne	16dac <processOptions@@Base+0x8c0>
   16df4:	ldr	r8, [fp, #-1624]	; 0xfffff9a8
   16df8:	str	r9, [fp, #-1656]	; 0xfffff988
   16dfc:	ldr	r1, [pc, #1816]	; 1751c <processOptions@@Base+0x1030>
   16e00:	mov	r2, #5
   16e04:	mov	r0, #0
   16e08:	add	r1, pc, r1
   16e0c:	bl	14a90 <dcgettext@plt>
   16e10:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   16e14:	bl	14cdc <fputs@plt>
   16e18:	ldr	r3, [pc, #1792]	; 17520 <processOptions@@Base+0x1034>
   16e1c:	ldr	r2, [pc, #1792]	; 17524 <processOptions@@Base+0x1038>
   16e20:	mov	r1, #1
   16e24:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   16e28:	ldr	r3, [r8, r3]
   16e2c:	add	r2, pc, r2
   16e30:	ldr	r3, [r3]
   16e34:	bl	148b0 <__fprintf_chk@plt>
   16e38:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16e3c:	cmp	r3, #0
   16e40:	bne	17548 <processOptions@@Base+0x105c>
   16e44:	ldr	ip, [fp, #-1660]	; 0xfffff984
   16e48:	cmp	ip, #0
   16e4c:	beq	16e5c <processOptions@@Base+0x970>
   16e50:	ldrb	r3, [ip]
   16e54:	cmp	r3, #0
   16e58:	bne	17488 <processOptions@@Base+0xf9c>
   16e5c:	mov	r0, #10
   16e60:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   16e64:	bl	14b50 <fputc@plt>
   16e68:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16e6c:	cmp	r3, #0
   16e70:	beq	171c4 <processOptions@@Base+0xcd8>
   16e74:	ldr	r5, [pc, #1708]	; 17528 <processOptions@@Base+0x103c>
   16e78:	add	r4, r4, #3
   16e7c:	ldr	ip, [pc, #1704]	; 1752c <processOptions@@Base+0x1040>
   16e80:	add	r5, pc, r5
   16e84:	str	r5, [fp, #-1628]	; 0xfffff9a4
   16e88:	add	ip, pc, ip
   16e8c:	mov	r5, #0
   16e90:	str	ip, [fp, #-1676]	; 0xfffff974
   16e94:	mov	r7, r5
   16e98:	ldr	ip, [fp, #-1656]	; 0xfffff988
   16e9c:	str	r5, [fp, #-1636]	; 0xfffff99c
   16ea0:	mov	r5, #32
   16ea4:	add	ip, ip, #3
   16ea8:	str	r4, [fp, #-1660]	; 0xfffff984
   16eac:	str	ip, [fp, #-1644]	; 0xfffff994
   16eb0:	ldr	ip, [fp, #-1640]	; 0xfffff998
   16eb4:	rsb	r7, r7, r7, lsl #3
   16eb8:	ldr	r6, [fp, #-1588]	; 0xfffff9cc
   16ebc:	cmp	ip, #0
   16ec0:	add	r8, r6, r7, lsl #2
   16ec4:	bne	16ed4 <processOptions@@Base+0x9e8>
   16ec8:	ldrb	r2, [r8, #10]
   16ecc:	tst	r2, #1
   16ed0:	bne	171ac <processOptions@@Base+0xcc0>
   16ed4:	mov	r0, #45	; 0x2d
   16ed8:	strb	r0, [sl]
   16edc:	ldrb	r3, [r8, #8]
   16ee0:	strb	r5, [sl, #2]
   16ee4:	ldr	ip, [fp, #-1644]	; 0xfffff994
   16ee8:	strb	r3, [sl, #1]
   16eec:	ldr	r9, [r8, #4]
   16ef0:	cmp	r9, #0
   16ef4:	beq	171e0 <processOptions@@Base+0xcf4>
   16ef8:	mov	r0, r9
   16efc:	str	ip, [fp, #-1688]	; 0xfffff968
   16f00:	bl	14b80 <strlen@plt>
   16f04:	mov	r1, r9
   16f08:	mov	r3, #77	; 0x4d
   16f0c:	mov	r4, r0
   16f10:	mov	r2, r0
   16f14:	add	r0, sl, #3
   16f18:	bl	147a8 <__memcpy_chk@plt>
   16f1c:	ldr	r1, [fp, #-1644]	; 0xfffff994
   16f20:	add	r3, r4, #3
   16f24:	add	r2, r4, #4
   16f28:	cmp	r1, r3
   16f2c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16f30:	bls	171f4 <processOptions@@Base+0xd08>
   16f34:	mov	r2, r1
   16f38:	strb	r5, [sl, r3]
   16f3c:	add	r3, r3, #1
   16f40:	cmp	r2, r3
   16f44:	bne	16f38 <processOptions@@Base+0xa4c>
   16f48:	ldr	r3, [fp, #-1656]	; 0xfffff988
   16f4c:	add	r2, r3, #4
   16f50:	ldr	r0, [fp, #-1660]	; 0xfffff984
   16f54:	strb	r5, [sl, ip]
   16f58:	add	r4, r0, r2
   16f5c:	ldr	r0, [r6, r7, lsl #2]
   16f60:	cmp	r0, #0
   16f64:	beq	16fc4 <processOptions@@Base+0xad8>
   16f68:	add	r9, ip, #3
   16f6c:	str	r2, [fp, #-1684]	; 0xfffff96c
   16f70:	str	ip, [fp, #-1688]	; 0xfffff968
   16f74:	bl	14b80 <strlen@plt>
   16f78:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16f7c:	mov	r1, #45	; 0x2d
   16f80:	ldr	r2, [fp, #-1684]	; 0xfffff96c
   16f84:	add	ip, sl, ip
   16f88:	strb	r1, [sl, r2]
   16f8c:	strb	r1, [ip, #2]
   16f90:	ldr	r1, [r6, r7, lsl #2]
   16f94:	mov	r3, r0
   16f98:	add	r0, sl, r9
   16f9c:	mov	r2, r3
   16fa0:	str	r3, [fp, #-1684]	; 0xfffff96c
   16fa4:	bl	14b68 <memcpy@plt>
   16fa8:	ldr	r3, [fp, #-1684]	; 0xfffff96c
   16fac:	ldr	r1, [r8, #4]
   16fb0:	add	r2, r3, r9
   16fb4:	cmp	r1, #0
   16fb8:	movne	r3, #61	; 0x3d
   16fbc:	strbne	r3, [sl, r2]
   16fc0:	addne	r2, r2, #1
   16fc4:	cmp	r4, r2
   16fc8:	bls	17444 <processOptions@@Base+0xf58>
   16fcc:	mov	r3, r2
   16fd0:	strb	r5, [sl, r3]
   16fd4:	add	r3, r3, #1
   16fd8:	cmp	r3, r4
   16fdc:	bne	16fd0 <processOptions@@Base+0xae4>
   16fe0:	mov	r3, sl
   16fe4:	add	r6, r4, #2
   16fe8:	strb	r5, [r3, r4]!
   16fec:	rsb	r9, r4, #77	; 0x4d
   16ff0:	strb	r5, [r3, #1]
   16ff4:	ldr	r1, [r8, #20]
   16ff8:	cmp	r1, #0
   16ffc:	beq	171d8 <processOptions@@Base+0xcec>
   17000:	mov	r0, #0
   17004:	mov	r2, #5
   17008:	bl	14a90 <dcgettext@plt>
   1700c:	mov	r7, r0
   17010:	ldr	r0, [r8, #24]
   17014:	cmp	r0, #0
   17018:	beq	170b4 <processOptions@@Base+0xbc8>
   1701c:	ldr	r2, [r0]
   17020:	sub	lr, fp, #1600	; 0x640
   17024:	sub	lr, lr, #4
   17028:	mov	r4, sp
   1702c:	cmp	r2, #0
   17030:	subne	r1, lr, #4
   17034:	movne	r3, #0
   17038:	beq	174a4 <processOptions@@Base+0xfb8>
   1703c:	str	r2, [r1, #4]!
   17040:	add	r3, r3, #1
   17044:	ldr	r2, [r0, #4]!
   17048:	cmp	r2, #0
   1704c:	bne	1703c <processOptions@@Base+0xb50>
   17050:	cmp	r3, #3
   17054:	bgt	17074 <processOptions@@Base+0xb88>
   17058:	sub	r2, r3, #1
   1705c:	mov	r1, #0
   17060:	add	r2, lr, r2, lsl #2
   17064:	add	r3, r3, #1
   17068:	str	r1, [r2, #4]!
   1706c:	cmp	r3, #3
   17070:	ble	17064 <processOptions@@Base+0xb78>
   17074:	str	r7, [sp]
   17078:	sub	r7, fp, #296	; 0x128
   1707c:	ldr	lr, [fp, #-1604]	; 0xfffff9bc
   17080:	mov	r1, #256	; 0x100
   17084:	mov	r0, r7
   17088:	mov	r3, r1
   1708c:	mov	r2, #1
   17090:	str	lr, [sp, #4]
   17094:	ldr	lr, [fp, #-1600]	; 0xfffff9c0
   17098:	str	lr, [sp, #8]
   1709c:	ldr	lr, [fp, #-1596]	; 0xfffff9c4
   170a0:	str	lr, [sp, #12]
   170a4:	ldr	lr, [fp, #-1592]	; 0xfffff9c8
   170a8:	str	lr, [sp, #16]
   170ac:	bl	14b8c <__snprintf_chk@plt>
   170b0:	mov	sp, r4
   170b4:	mov	r0, r7
   170b8:	add	ip, sl, r6
   170bc:	str	ip, [fp, #-1624]	; 0xfffff9a8
   170c0:	bl	14b80 <strlen@plt>
   170c4:	mov	r8, r0
   170c8:	cmp	r9, r8
   170cc:	movcs	r4, r8
   170d0:	bcs	17114 <processOptions@@Base+0xc28>
   170d4:	ldrb	r2, [r7, r9]
   170d8:	add	r3, r7, r9
   170dc:	mov	r4, r9
   170e0:	cmp	r2, #32
   170e4:	beq	170f8 <processOptions@@Base+0xc0c>
   170e8:	ldrb	r2, [r3, #-1]!
   170ec:	sub	r4, r4, #1
   170f0:	cmp	r2, #32
   170f4:	bne	170e8 <processOptions@@Base+0xbfc>
   170f8:	add	r3, r7, r4
   170fc:	b	17104 <processOptions@@Base+0xc18>
   17100:	mov	r4, r1
   17104:	ldrb	r2, [r3, #-1]!
   17108:	sub	r1, r4, #1
   1710c:	cmp	r2, #32
   17110:	beq	17100 <processOptions@@Base+0xc14>
   17114:	mov	r1, r7
   17118:	mov	r2, r4
   1711c:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   17120:	bl	14b68 <memcpy@plt>
   17124:	ldr	ip, [fp, #-1624]	; 0xfffff9a8
   17128:	mov	r0, #0
   1712c:	ldr	r2, [fp, #-1628]	; 0xfffff9a4
   17130:	mov	r3, sl
   17134:	mov	r1, #1
   17138:	strb	r0, [ip, r4]
   1713c:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17140:	bl	148b0 <__fprintf_chk@plt>
   17144:	ldrb	r3, [r7, r4]
   17148:	add	r2, r7, r4
   1714c:	cmp	r3, #32
   17150:	bne	1717c <processOptions@@Base+0xc90>
   17154:	rsb	r7, r7, #1
   17158:	mov	r4, r2
   1715c:	b	17164 <processOptions@@Base+0xc78>
   17160:	mov	r4, r3
   17164:	ldrb	r2, [r4, #1]
   17168:	add	r3, r4, #1
   1716c:	add	r4, r7, r4
   17170:	cmp	r2, #32
   17174:	mov	r2, r3
   17178:	beq	17160 <processOptions@@Base+0xc74>
   1717c:	subs	r8, r8, r4
   17180:	beq	171a8 <processOptions@@Base+0xcbc>
   17184:	cmp	r6, #0
   17188:	beq	171a0 <processOptions@@Base+0xcb4>
   1718c:	mov	r3, #0
   17190:	strb	r5, [sl, r3]
   17194:	add	r3, r3, #1
   17198:	cmp	r3, r6
   1719c:	bne	17190 <processOptions@@Base+0xca4>
   171a0:	mov	r7, r2
   171a4:	b	170c8 <processOptions@@Base+0xbdc>
   171a8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   171ac:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   171b0:	add	ip, ip, #1
   171b4:	str	ip, [fp, #-1636]	; 0xfffff99c
   171b8:	cmp	ip, r3
   171bc:	mov	r7, ip
   171c0:	bcc	16eb0 <processOptions@@Base+0x9c4>
   171c4:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   171c8:	ldr	sp, [fp, #-1680]	; 0xfffff970
   171cc:	orr	r3, r3, #1
   171d0:	strb	r3, [fp, #-1324]	; 0xfffffad4
   171d4:	b	16880 <processOptions@@Base+0x394>
   171d8:	ldr	r7, [fp, #-1676]	; 0xfffff974
   171dc:	b	17010 <processOptions@@Base+0xb24>
   171e0:	ldr	r1, [fp, #-1644]	; 0xfffff994
   171e4:	mov	r3, #3
   171e8:	mov	r2, #4
   171ec:	cmp	r1, r3
   171f0:	bhi	16f34 <processOptions@@Base+0xa48>
   171f4:	mov	ip, r3
   171f8:	b	16f50 <processOptions@@Base+0xa64>
   171fc:	ldr	r2, [r3, #12]
   17200:	cmp	r2, #0
   17204:	beq	16cb0 <processOptions@@Base+0x7c4>
   17208:	ldrb	r3, [r3, #10]
   1720c:	tst	r3, #2
   17210:	ldrne	r3, [r2]
   17214:	moveq	r3, #1
   17218:	addne	r3, r3, #1
   1721c:	str	r3, [r2]
   17220:	b	16cb0 <processOptions@@Base+0x7c4>
   17224:	ldr	ip, [fp, #-1648]	; 0xfffff990
   17228:	ldr	ip, [ip, #20]
   1722c:	mov	r0, ip
   17230:	str	ip, [fp, #-1628]	; 0xfffff9a4
   17234:	bl	14b80 <strlen@plt>
   17238:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1723c:	cmp	r3, #0
   17240:	beq	1690c <processOptions@@Base+0x420>
   17244:	ldr	r5, [pc, #740]	; 17530 <processOptions@@Base+0x1044>
   17248:	mov	r4, #0
   1724c:	mov	r7, #95	; 0x5f
   17250:	add	r0, r0, #2
   17254:	add	r5, pc, r5
   17258:	str	r5, [fp, #-1640]	; 0xfffff998
   1725c:	mov	r5, r4
   17260:	str	r0, [fp, #-1636]	; 0xfffff99c
   17264:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   17268:	add	r6, r2, r4
   1726c:	ldrb	r1, [r6, #10]
   17270:	tst	r1, #8
   17274:	beq	17344 <processOptions@@Base+0xe58>
   17278:	ldr	r9, [r2, r4]
   1727c:	cmp	r9, #0
   17280:	beq	17344 <processOptions@@Base+0xe58>
   17284:	mov	r0, r9
   17288:	str	sp, [fp, #-1632]	; 0xfffff9a0
   1728c:	bl	14b80 <strlen@plt>
   17290:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   17294:	mov	r2, #1
   17298:	mvn	r3, #0
   1729c:	add	r1, ip, r0
   172a0:	ldr	ip, [fp, #-1640]	; 0xfffff998
   172a4:	add	r0, r1, #7
   172a8:	bic	r0, r0, #7
   172ac:	sub	sp, sp, r0
   172b0:	add	r8, sp, #24
   172b4:	str	ip, [sp]
   172b8:	ldr	ip, [fp, #-1628]	; 0xfffff9a4
   172bc:	mov	r0, r8
   172c0:	str	r9, [sp, #8]
   172c4:	str	ip, [sp, #4]
   172c8:	bl	14b8c <__snprintf_chk@plt>
   172cc:	ldrb	r9, [sp, #24]
   172d0:	cmp	r9, #0
   172d4:	addne	sl, sp, #25
   172d8:	beq	17320 <processOptions@@Base+0xe34>
   172dc:	cmp	r9, #45	; 0x2d
   172e0:	strbeq	r7, [sl, #-1]
   172e4:	beq	17314 <processOptions@@Base+0xe28>
   172e8:	bl	14ae4 <__ctype_b_loc@plt>
   172ec:	sxth	r9, r9
   172f0:	lsl	r3, r9, #1
   172f4:	ldr	r2, [r0]
   172f8:	ldrh	r3, [r2, r3]
   172fc:	tst	r3, #512	; 0x200
   17300:	beq	17314 <processOptions@@Base+0xe28>
   17304:	bl	14994 <__ctype_toupper_loc@plt>
   17308:	ldr	r3, [r0]
   1730c:	ldr	r3, [r3, r9, lsl #2]
   17310:	strb	r3, [sl, #-1]
   17314:	ldrb	r9, [sl], #1
   17318:	cmp	r9, #0
   1731c:	bne	172dc <processOptions@@Base+0xdf0>
   17320:	mov	r0, r8
   17324:	bl	14ce8 <getenv@plt>
   17328:	subs	r2, r0, #0
   1732c:	beq	1733c <processOptions@@Base+0xe50>
   17330:	ldrb	r3, [r2]
   17334:	cmp	r3, #0
   17338:	bne	17430 <processOptions@@Base+0xf44>
   1733c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17340:	ldr	sp, [fp, #-1632]	; 0xfffff9a0
   17344:	add	r5, r5, #1
   17348:	add	r4, r4, #28
   1734c:	cmp	r5, r3
   17350:	bcc	17264 <processOptions@@Base+0xd78>
   17354:	b	1690c <processOptions@@Base+0x420>
   17358:	ldr	r4, [r5, #20]
   1735c:	mov	r0, r4
   17360:	bl	1a878 <getBootParameters@@Base>
   17364:	subs	r5, r0, #0
   17368:	movne	r0, r5
   1736c:	beq	175b4 <processOptions@@Base+0x10c8>
   17370:	sub	r2, fp, #1600	; 0x640
   17374:	mov	r1, #44	; 0x2c
   17378:	sub	r2, r2, #4
   1737c:	mov	r4, #0
   17380:	sub	r2, r2, #8
   17384:	str	r4, [fp, #-1612]	; 0xfffff9b4
   17388:	bl	1910c <splitString@@Base>
   1738c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17390:	cmp	r3, r4
   17394:	movne	r7, #44	; 0x2c
   17398:	movne	r2, r4
   1739c:	mov	r6, r0
   173a0:	beq	17414 <processOptions@@Base+0xf28>
   173a4:	rsb	r2, r2, r2, lsl #3
   173a8:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   173ac:	add	r1, r1, r2, lsl #2
   173b0:	ldrb	r2, [r1, #9]
   173b4:	cmp	r2, #0
   173b8:	beq	17404 <processOptions@@Base+0xf18>
   173bc:	ldr	r0, [fp, #-1612]	; 0xfffff9b4
   173c0:	cmp	r2, r0
   173c4:	bgt	17404 <processOptions@@Base+0xf18>
   173c8:	sub	r2, r2, #-1073741823	; 0xc0000001
   173cc:	ldr	r2, [r6, r2, lsl #2]
   173d0:	ldrb	r0, [r2]
   173d4:	cmp	r0, #0
   173d8:	beq	17404 <processOptions@@Base+0xf18>
   173dc:	add	r3, r2, #1
   173e0:	cmp	r0, #43	; 0x2b
   173e4:	strbeq	r7, [r3, #-1]
   173e8:	ldrb	r0, [r3], #1
   173ec:	cmp	r0, #0
   173f0:	bne	173e0 <processOptions@@Base+0xef4>
   173f4:	sub	r0, fp, #1584	; 0x630
   173f8:	sub	r0, r0, #4
   173fc:	bl	15fa0 <cancelProcess@@Base+0xfc>
   17400:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17404:	add	r4, r4, #1
   17408:	cmp	r4, r3
   1740c:	mov	r2, r4
   17410:	bcc	173a4 <processOptions@@Base+0xeb8>
   17414:	mov	r0, r6
   17418:	bl	190d8 <deallocateStrings@@Base>
   1741c:	cmp	r5, #0
   17420:	beq	168f0 <processOptions@@Base+0x404>
   17424:	mov	r0, r5
   17428:	bl	147fc <free@plt>
   1742c:	b	168f0 <processOptions@@Base+0x404>
   17430:	sub	r0, fp, #1584	; 0x630
   17434:	mov	r1, r6
   17438:	sub	r0, r0, #4
   1743c:	bl	15fa0 <cancelProcess@@Base+0xfc>
   17440:	b	1733c <processOptions@@Base+0xe50>
   17444:	mov	r4, r2
   17448:	b	16fe0 <processOptions@@Base+0xaf4>
   1744c:	str	ip, [fp, #-1688]	; 0xfffff968
   17450:	bl	17c90 <logMallocError@@Base>
   17454:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17458:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1745c:	b	16618 <processOptions@@Base+0x12c>
   17460:	mov	r2, #0
   17464:	str	ip, [fp, #-1688]	; 0xfffff968
   17468:	bl	15ebc <cancelProcess@@Base+0x18>
   1746c:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17470:	b	16cb0 <processOptions@@Base+0x7c4>
   17474:	bl	14c4c <__errno_location@plt>
   17478:	ldr	r3, [r0]
   1747c:	cmp	r3, #2
   17480:	bne	16d44 <processOptions@@Base+0x858>
   17484:	b	16a58 <processOptions@@Base+0x56c>
   17488:	ldr	r2, [pc, #164]	; 17534 <processOptions@@Base+0x1048>
   1748c:	mov	r3, ip
   17490:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17494:	mov	r1, #1
   17498:	add	r2, pc, r2
   1749c:	bl	148b0 <__fprintf_chk@plt>
   174a0:	b	16e5c <processOptions@@Base+0x970>
   174a4:	mov	r3, r2
   174a8:	b	17058 <processOptions@@Base+0xb6c>
   174ac:	ldr	r1, [pc, #132]	; 17538 <processOptions@@Base+0x104c>
   174b0:	mov	r2, #5
   174b4:	mov	r0, r7
   174b8:	add	r1, pc, r1
   174bc:	bl	14a90 <dcgettext@plt>
   174c0:	mov	r2, r5
   174c4:	mov	r1, r0
   174c8:	mov	r0, #3
   174cc:	bl	17b84 <logMessage@@Base>
   174d0:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   174d4:	orr	r3, r3, #2
   174d8:	strb	r3, [fp, #-1324]	; 0xfffffad4
   174dc:	b	16a48 <processOptions@@Base+0x55c>
   174e0:	strdeq	sp, [r1], -r4
   174e4:	andeq	r0, r0, ip, lsr #4
   174e8:	andeq	sl, r0, r8, ror #2
   174ec:	andeq	sl, r0, r8, asr r1
   174f0:	andeq	r0, r0, r8, lsr #4
   174f4:	andeq	r0, r0, r0, lsr r2
   174f8:	andeq	r9, r0, r8, ror #30
   174fc:	andeq	r9, r0, r8, ror #30
   17500:	andeq	r9, r0, r0, ror #30
   17504:	andeq	r9, r0, r8, asr #30
   17508:	andeq	fp, r0, r8, asr sl
   1750c:			; <UNDEFINED> instruction: 0xfffff85c
   17510:	andeq	r0, r0, r0, asr r2
   17514:	andeq	r0, r0, r0, asr #4
   17518:	andeq	r0, r0, ip, ror #4
   1751c:	andeq	r9, r0, r4, ror r9
   17520:	andeq	r0, r0, ip, asr r2
   17524:	muleq	r0, r8, r2
   17528:	andeq	r9, r0, r0, lsl r9
   1752c:	andeq	r9, r0, r8, asr #18
   17530:	andeq	r9, r0, r0, asr #10
   17534:	andeq	r9, r0, r8, lsl r6
   17538:	andeq	r9, r0, r4, ror #5
   1753c:	andeq	r9, r0, ip, lsr #4
   17540:	andeq	r9, r0, ip, ror #3
   17544:	strdeq	r9, [r0], -ip
   17548:	ldr	r0, [pc, #-20]	; 1753c <processOptions@@Base+0x1050>
   1754c:	mov	r1, #1
   17550:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   17554:	mov	r2, #2
   17558:	add	r0, pc, r0
   1755c:	bl	14b5c <fwrite@plt>
   17560:	ldr	r1, [pc, #-40]	; 17540 <processOptions@@Base+0x1054>
   17564:	mov	r2, #5
   17568:	mov	r0, #0
   1756c:	add	r1, pc, r1
   17570:	bl	14a90 <dcgettext@plt>
   17574:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   17578:	bl	14cdc <fputs@plt>
   1757c:	ldr	r0, [pc, #-64]	; 17544 <processOptions@@Base+0x1058>
   17580:	mov	r1, #1
   17584:	mov	r2, #5
   17588:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   1758c:	add	r0, pc, r0
   17590:	bl	14b5c <fwrite@plt>
   17594:	b	16e44 <processOptions@@Base+0x958>
   17598:	ldr	r7, [fp, #-1664]	; 0xfffff980
   1759c:	b	166f4 <processOptions@@Base+0x208>
   175a0:	bl	17c90 <logMallocError@@Base>
   175a4:	b	16a50 <processOptions@@Base+0x564>
   175a8:	str	r6, [fp, #-1656]	; 0xfffff988
   175ac:	mov	r4, r6
   175b0:	b	16dfc <processOptions@@Base+0x910>
   175b4:	mov	r0, r4
   175b8:	bl	14ce8 <getenv@plt>
   175bc:	cmp	r0, #0
   175c0:	bne	17370 <processOptions@@Base+0xe84>
   175c4:	b	168f0 <processOptions@@Base+0x404>
   175c8:	ldr	r4, [r6]
   175cc:	ldr	r1, [sl]
   175d0:	b	1685c <processOptions@@Base+0x370>
   175d4:	bl	14a60 <__stack_chk_fail@plt>
   175d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   175dc:	sub	sp, sp, #12
   175e0:	ldr	ip, [r2]
   175e4:	add	r6, r0, r1
   175e8:	ldr	r3, [pc, #140]	; 1767c <processOptions@@Base+0x1190>
   175ec:	rsb	r1, r0, r6
   175f0:	ldr	r5, [r2, #4]
   175f4:	mov	r9, r0
   175f8:	ldr	r7, [r2, #8]
   175fc:	add	r3, pc, r3
   17600:	str	ip, [sp, #4]
   17604:	mov	r2, #1
   17608:	str	r3, [sp]
   1760c:	mvn	r3, #0
   17610:	bl	14b8c <__snprintf_chk@plt>
   17614:	add	r7, r5, r7
   17618:	add	r0, r9, r0
   1761c:	cmp	r0, r6
   17620:	movcc	r4, r0
   17624:	movcs	r4, r6
   17628:	cmp	r5, r7
   1762c:	bcs	17670 <processOptions@@Base+0x1184>
   17630:	ldr	r8, [pc, #72]	; 17680 <processOptions@@Base+0x1194>
   17634:	add	r8, pc, r8
   17638:	str	r8, [sp]
   1763c:	mov	r0, r4
   17640:	ldrb	ip, [r5], #1
   17644:	rsb	r1, r4, r6
   17648:	mov	r2, #1
   1764c:	mvn	r3, #0
   17650:	str	ip, [sp, #4]
   17654:	bl	14b8c <__snprintf_chk@plt>
   17658:	add	r0, r4, r0
   1765c:	cmp	r0, r6
   17660:	movcc	r4, r0
   17664:	movcs	r4, r6
   17668:	cmp	r5, r7
   1766c:	bne	17638 <processOptions@@Base+0x114c>
   17670:	rsb	r0, r9, r4
   17674:	add	sp, sp, #12
   17678:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1767c:	andeq	r9, r0, r0, asr #3
   17680:	andeq	r9, r0, ip, lsl #3
   17684:	push	{r4, r5, lr}
   17688:	mov	ip, r2
   1768c:	ldr	r4, [r2, #4]
   17690:	sub	sp, sp, #12
   17694:	ldr	lr, [ip]
   17698:	mvn	r3, #0
   1769c:	mov	r2, #1
   176a0:	mov	r5, r1
   176a4:	ldr	ip, [r4]
   176a8:	str	lr, [sp]
   176ac:	str	ip, [sp, #4]
   176b0:	bl	14850 <__vsnprintf_chk@plt>
   176b4:	cmp	r0, #0
   176b8:	movlt	r0, #0
   176bc:	blt	176c8 <processOptions@@Base+0x11dc>
   176c0:	cmp	r0, r5
   176c4:	movcs	r0, r5
   176c8:	add	sp, sp, #12
   176cc:	pop	{r4, r5, pc}

000176d0 <enableLogCategory@@Base>:
   176d0:	push	{r3, r4, r5, r6, r7, lr}
   176d4:	mov	r5, r0
   176d8:	ldr	r6, [pc, #104]	; 17748 <enableLogCategory@@Base+0x78>
   176dc:	ldr	r4, [pc, #104]	; 1774c <enableLogCategory@@Base+0x7c>
   176e0:	ldr	r7, [pc, #104]	; 17750 <enableLogCategory@@Base+0x80>
   176e4:	add	r6, pc, r6
   176e8:	add	r4, pc, r4
   176ec:	add	r6, r6, #56	; 0x38
   176f0:	add	r7, pc, r7
   176f4:	ldr	r1, [r4]
   176f8:	mov	r0, r5
   176fc:	cmp	r1, #0
   17700:	beq	17710 <enableLogCategory@@Base+0x40>
   17704:	bl	147e4 <strcasecmp@plt>
   17708:	cmp	r0, #0
   1770c:	beq	17724 <enableLogCategory@@Base+0x54>
   17710:	add	r4, r4, #8
   17714:	cmp	r4, r6
   17718:	bcc	176f4 <enableLogCategory@@Base+0x24>
   1771c:	mov	r0, #0
   17720:	pop	{r3, r4, r5, r6, r7, pc}
   17724:	ldr	r2, [pc, #40]	; 17754 <enableLogCategory@@Base+0x84>
   17728:	mov	r3, #1
   1772c:	ldr	r1, [pc, #36]	; 17758 <enableLogCategory@@Base+0x88>
   17730:	mov	r0, r3
   17734:	add	r1, pc, r1
   17738:	ldr	r2, [r7, r2]
   1773c:	rsb	r4, r1, r4
   17740:	strb	r3, [r2, r4, asr #3]
   17744:	pop	{r3, r4, r5, r6, r7, pc}
   17748:	andeq	ip, r1, r8, asr #14
   1774c:	andeq	ip, r1, r4, asr #14
   17750:	andeq	ip, r1, r8, lsl #18
   17754:	andeq	r0, r0, r8, lsl r2
   17758:	strdeq	ip, [r1], -r8

0001775c <setLogPrefix@@Base>:
   1775c:	ldr	r3, [pc, #16]	; 17774 <setLogPrefix@@Base+0x18>
   17760:	add	r3, pc, r3
   17764:	ldr	r2, [r3]
   17768:	str	r0, [r3]
   1776c:	mov	r0, r2
   17770:	bx	lr
   17774:	andeq	ip, r1, ip, ror fp

00017778 <closeLogFile@@Base>:
   17778:	push	{r4, lr}
   1777c:	ldr	r4, [pc, #28]	; 177a0 <closeLogFile@@Base+0x28>
   17780:	add	r4, pc, r4
   17784:	ldr	r0, [r4, #4]
   17788:	cmp	r0, #0
   1778c:	popeq	{r4, pc}
   17790:	bl	14bbc <fclose@plt>
   17794:	mov	r3, #0
   17798:	str	r3, [r4, #4]
   1779c:	pop	{r4, pc}
   177a0:	andeq	ip, r1, ip, asr fp

000177a4 <openLogFile@@Base>:
   177a4:	push	{r4, lr}
   177a8:	mov	r4, r0
   177ac:	bl	17778 <closeLogFile@@Base>
   177b0:	ldr	r1, [pc, #24]	; 177d0 <openLogFile@@Base+0x2c>
   177b4:	mov	r0, r4
   177b8:	add	r1, pc, r1
   177bc:	bl	14958 <fopen@plt>
   177c0:	ldr	r3, [pc, #12]	; 177d4 <openLogFile@@Base+0x30>
   177c4:	add	r3, pc, r3
   177c8:	str	r0, [r3, #4]
   177cc:	pop	{r4, pc}
   177d0:	andeq	r9, r0, r0, lsl r0
   177d4:	andeq	ip, r1, r8, lsl fp

000177d8 <openSystemLog@@Base>:
   177d8:	push	{r4, lr}
   177dc:	ldr	r4, [pc, #44]	; 17810 <openSystemLog@@Base+0x38>
   177e0:	add	r4, pc, r4
   177e4:	ldr	r3, [r4, #8]
   177e8:	cmp	r3, #0
   177ec:	popne	{r4, pc}
   177f0:	ldr	r0, [pc, #28]	; 17814 <openSystemLog@@Base+0x3c>
   177f4:	mov	r1, #1
   177f8:	mov	r2, #24
   177fc:	add	r0, pc, r0
   17800:	bl	14cd0 <openlog@plt>
   17804:	mov	r3, #1
   17808:	str	r3, [r4, #8]
   1780c:	pop	{r4, pc}
   17810:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   17814:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>

00017818 <closeSystemLog@@Base>:
   17818:	push	{r4, lr}
   1781c:	ldr	r4, [pc, #28]	; 17840 <closeSystemLog@@Base+0x28>
   17820:	add	r4, pc, r4
   17824:	ldr	r3, [r4, #8]
   17828:	cmp	r3, #0
   1782c:	popeq	{r4, pc}
   17830:	bl	148ec <closelog@plt>
   17834:	mov	r3, #0
   17838:	str	r3, [r4, #8]
   1783c:	pop	{r4, pc}
   17840:			; <UNDEFINED> instruction: 0x0001cabc

00017844 <logData@@Base>:
   17844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17848:	sub	sp, sp, #4160	; 0x1040
   1784c:	ldr	r4, [pc, #660]	; 17ae8 <logData@@Base+0x2a4>
   17850:	sub	sp, sp, #12
   17854:	ldr	r3, [pc, #656]	; 17aec <logData@@Base+0x2a8>
   17858:	mov	r5, r0
   1785c:	add	r4, pc, r4
   17860:	mov	r8, r1
   17864:	ands	r0, r0, #128	; 0x80
   17868:	add	r1, sp, #8192	; 0x2000
   1786c:	ldr	r3, [r4, r3]
   17870:	mov	r9, r2
   17874:	str	r3, [sp, #12]
   17878:	ldr	r3, [r3]
   1787c:	str	r3, [r1, #-4028]	; 0xfffff044
   17880:	beq	178bc <logData@@Base+0x78>
   17884:	ldr	r3, [pc, #612]	; 17af0 <logData@@Base+0x2ac>
   17888:	and	r5, r5, #127	; 0x7f
   1788c:	ldr	r3, [r4, r3]
   17890:	ldrb	r3, [r3, r5]
   17894:	cmp	r3, #0
   17898:	beq	179e0 <logData@@Base+0x19c>
   1789c:	ldr	r2, [pc, #592]	; 17af4 <logData@@Base+0x2b0>
   178a0:	ldr	r3, [pc, #592]	; 17af8 <logData@@Base+0x2b4>
   178a4:	ldr	r2, [r4, r2]
   178a8:	add	r3, pc, r3
   178ac:	add	r5, r3, r5, lsl #3
   178b0:	ldr	r3, [r5, #4]
   178b4:	ldrb	r5, [r2]
   178b8:	b	178c0 <logData@@Base+0x7c>
   178bc:	mov	r3, r0
   178c0:	ldr	r1, [pc, #564]	; 17afc <logData@@Base+0x2b8>
   178c4:	ldr	r2, [pc, #564]	; 17b00 <logData@@Base+0x2bc>
   178c8:	ldr	r1, [r4, r1]
   178cc:	ldr	r2, [r4, r2]
   178d0:	ldrb	r7, [r1]
   178d4:	ldrb	r6, [r2]
   178d8:	cmp	r7, r5
   178dc:	movlt	r7, #0
   178e0:	movge	r7, #1
   178e4:	cmp	r6, r5
   178e8:	movlt	r6, #0
   178ec:	movge	r6, #1
   178f0:	orrs	r2, r6, r7
   178f4:	beq	179e0 <logData@@Base+0x19c>
   178f8:	str	r3, [sp, #8]
   178fc:	bl	14c4c <__errno_location@plt>
   17900:	ldr	r3, [sp, #8]
   17904:	add	fp, sp, #72	; 0x48
   17908:	cmp	r3, #0
   1790c:	ldr	ip, [r0]
   17910:	str	r0, [sp, #16]
   17914:	str	ip, [sp, #20]
   17918:	beq	17a04 <logData@@Base+0x1c0>
   1791c:	sub	sl, fp, #4
   17920:	ldr	r2, [pc, #476]	; 17b04 <logData@@Base+0x2c0>
   17924:	mov	r1, #4096	; 0x1000
   17928:	str	r3, [sp, #4]
   1792c:	add	r2, pc, r2
   17930:	mov	r3, r1
   17934:	str	r2, [sp]
   17938:	mov	r0, sl
   1793c:	mov	r2, #1
   17940:	bl	14b8c <__snprintf_chk@plt>
   17944:	add	r3, sl, #4096	; 0x1000
   17948:	add	r0, sl, r0
   1794c:	cmp	r0, r3
   17950:	movcs	r0, r3
   17954:	add	r1, sl, #4096	; 0x1000
   17958:	mov	r2, r9
   1795c:	rsb	r1, r0, r1
   17960:	blx	r8
   17964:	cmp	r7, #0
   17968:	bne	17a10 <logData@@Base+0x1cc>
   1796c:	cmp	r6, #0
   17970:	beq	179d4 <logData@@Base+0x190>
   17974:	ldr	r2, [pc, #396]	; 17b08 <logData@@Base+0x2c4>
   17978:	ldr	r3, [pc, #396]	; 17b0c <logData@@Base+0x2c8>
   1797c:	add	r2, pc, r2
   17980:	ldr	r0, [r2]
   17984:	ldr	r3, [r4, r3]
   17988:	cmp	r0, #0
   1798c:	ldr	r4, [r3]
   17990:	beq	179b4 <logData@@Base+0x170>
   17994:	mov	r1, r4
   17998:	bl	14cdc <fputs@plt>
   1799c:	ldr	r0, [pc, #364]	; 17b10 <logData@@Base+0x2cc>
   179a0:	mov	r1, #1
   179a4:	mov	r2, #2
   179a8:	add	r0, pc, r0
   179ac:	mov	r3, r4
   179b0:	bl	14b5c <fwrite@plt>
   179b4:	mov	r1, r4
   179b8:	mov	r0, sl
   179bc:	bl	14cdc <fputs@plt>
   179c0:	mov	r0, #10
   179c4:	mov	r1, r4
   179c8:	bl	14b50 <fputc@plt>
   179cc:	mov	r0, r4
   179d0:	bl	14c88 <fflush@plt>
   179d4:	ldr	ip, [sp, #20]
   179d8:	ldr	r1, [sp, #16]
   179dc:	str	ip, [r1]
   179e0:	ldr	ip, [sp, #12]
   179e4:	add	r3, sp, #8192	; 0x2000
   179e8:	ldr	r2, [r3, #-4028]	; 0xfffff044
   179ec:	ldr	r3, [ip]
   179f0:	cmp	r2, r3
   179f4:	bne	17ae4 <logData@@Base+0x2a0>
   179f8:	add	sp, sp, #4160	; 0x1040
   179fc:	add	sp, sp, #12
   17a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a04:	add	sl, sp, #68	; 0x44
   17a08:	mov	r0, sl
   17a0c:	b	17954 <logData@@Base+0x110>
   17a10:	ldr	r7, [pc, #252]	; 17b14 <logData@@Base+0x2d0>
   17a14:	add	r7, pc, r7
   17a18:	ldr	r3, [r7, #4]
   17a1c:	cmp	r3, #0
   17a20:	beq	17ab4 <logData@@Base+0x270>
   17a24:	sub	r8, fp, #44	; 0x2c
   17a28:	sub	fp, fp, #36	; 0x24
   17a2c:	mov	r0, r8
   17a30:	bl	19c4c <getCurrentTime@@Base>
   17a34:	add	ip, sp, #4160	; 0x1040
   17a38:	add	ip, ip, #8
   17a3c:	movw	r3, #61396	; 0xefd4
   17a40:	ldr	r2, [pc, #208]	; 17b18 <logData@@Base+0x2d4>
   17a44:	movt	r3, #65535	; 0xffff
   17a48:	mov	r1, #32
   17a4c:	mov	r0, fp
   17a50:	ldr	r3, [ip, r3]
   17a54:	add	r2, pc, r2
   17a58:	bl	19e08 <formatSeconds@@Base>
   17a5c:	ldr	r2, [r8, #4]
   17a60:	movw	lr, #56963	; 0xde83
   17a64:	movt	lr, #17179	; 0x431b
   17a68:	smull	r1, lr, lr, r2
   17a6c:	asr	r8, r2, #31
   17a70:	ldr	r2, [pc, #164]	; 17b1c <logData@@Base+0x2d8>
   17a74:	mov	r1, #1
   17a78:	add	r2, pc, r2
   17a7c:	rsb	lr, r8, lr, asr #18
   17a80:	mov	r3, r0
   17a84:	ldr	r0, [r7, #4]
   17a88:	str	lr, [sp, #4]
   17a8c:	str	fp, [sp]
   17a90:	bl	148b0 <__fprintf_chk@plt>
   17a94:	ldr	r1, [r7, #4]
   17a98:	mov	r0, sl
   17a9c:	bl	14cdc <fputs@plt>
   17aa0:	mov	r0, #10
   17aa4:	ldr	r1, [r7, #4]
   17aa8:	bl	14b50 <fputc@plt>
   17aac:	ldr	r0, [r7, #4]
   17ab0:	bl	14c88 <fflush@plt>
   17ab4:	ldr	r3, [pc, #100]	; 17b20 <logData@@Base+0x2dc>
   17ab8:	add	r3, pc, r3
   17abc:	ldr	r3, [r3, #8]
   17ac0:	cmp	r3, #0
   17ac4:	beq	1796c <logData@@Base+0x128>
   17ac8:	ldr	r2, [pc, #84]	; 17b24 <logData@@Base+0x2e0>
   17acc:	mov	r0, r5
   17ad0:	mov	r1, #1
   17ad4:	mov	r3, sl
   17ad8:	add	r2, pc, r2
   17adc:	bl	14a48 <__syslog_chk@plt>
   17ae0:	b	1796c <logData@@Base+0x128>
   17ae4:	bl	14a60 <__stack_chk_fail@plt>
   17ae8:	muleq	r1, ip, r7
   17aec:	andeq	r0, r0, ip, lsr #4
   17af0:	andeq	r0, r0, r8, lsl r2
   17af4:	andeq	r0, r0, r0, lsr #4
   17af8:	andeq	ip, r1, r4, lsl #11
   17afc:	andeq	r0, r0, r8, asr r2
   17b00:	andeq	r0, r0, r4, lsr #4
   17b04:	andeq	r8, r0, r0, lsr #29
   17b08:	andeq	ip, r1, r0, ror #18
   17b0c:	andeq	r0, r0, ip, asr #4
   17b10:	andeq	r8, r0, ip, asr #28
   17b14:	andeq	ip, r1, r8, asr #17
   17b18:	andeq	r8, r0, r0, lsl #27
   17b1c:	andeq	r8, r0, r0, ror sp
   17b20:	andeq	ip, r1, r4, lsr #16
   17b24:	andeq	r9, r0, r4, lsr #32

00017b28 <vlogMessage@@Base>:
   17b28:	ldr	r3, [pc, #72]	; 17b78 <vlogMessage@@Base+0x50>
   17b2c:	ldr	ip, [pc, #72]	; 17b7c <vlogMessage@@Base+0x54>
   17b30:	add	r3, pc, r3
   17b34:	push	{r4, lr}
   17b38:	sub	sp, sp, #16
   17b3c:	ldr	r4, [r3, ip]
   17b40:	stmib	sp, {r1, r2}
   17b44:	add	r2, sp, #4
   17b48:	ldr	r1, [pc, #48]	; 17b80 <vlogMessage@@Base+0x58>
   17b4c:	ldr	r3, [r4]
   17b50:	add	r1, pc, r1
   17b54:	str	r3, [sp, #12]
   17b58:	bl	17844 <logData@@Base>
   17b5c:	ldr	r2, [sp, #12]
   17b60:	ldr	r3, [r4]
   17b64:	cmp	r2, r3
   17b68:	bne	17b74 <vlogMessage@@Base+0x4c>
   17b6c:	add	sp, sp, #16
   17b70:	pop	{r4, pc}
   17b74:	bl	14a60 <__stack_chk_fail@plt>
   17b78:	andeq	ip, r1, r8, asr #9
   17b7c:	andeq	r0, r0, ip, lsr #4
   17b80:			; <UNDEFINED> instruction: 0xfffffb2c

00017b84 <logMessage@@Base>:
   17b84:	push	{r1, r2, r3}
   17b88:	ldr	r3, [pc, #84]	; 17be4 <logMessage@@Base+0x60>
   17b8c:	push	{r4, lr}
   17b90:	add	r3, pc, r3
   17b94:	ldr	lr, [pc, #76]	; 17be8 <logMessage@@Base+0x64>
   17b98:	sub	sp, sp, #12
   17b9c:	add	r2, sp, #8
   17ba0:	add	ip, sp, #24
   17ba4:	ldr	r1, [sp, #20]
   17ba8:	ldr	r4, [r3, lr]
   17bac:	str	ip, [r2, #-8]!
   17bb0:	mov	r2, sp
   17bb4:	ldr	r3, [r4]
   17bb8:	str	r3, [sp, #4]
   17bbc:	bl	17b28 <vlogMessage@@Base>
   17bc0:	ldr	r2, [sp, #4]
   17bc4:	ldr	r3, [r4]
   17bc8:	cmp	r2, r3
   17bcc:	bne	17be0 <logMessage@@Base+0x5c>
   17bd0:	add	sp, sp, #12
   17bd4:	pop	{r4, lr}
   17bd8:	add	sp, sp, #12
   17bdc:	bx	lr
   17be0:	bl	14a60 <__stack_chk_fail@plt>
   17be4:	andeq	ip, r1, r8, ror #8
   17be8:	andeq	r0, r0, ip, lsr #4

00017bec <logBytes@@Base>:
   17bec:	ldr	ip, [pc, #76]	; 17c40 <logBytes@@Base+0x54>
   17bf0:	push	{r4, lr}
   17bf4:	add	ip, pc, ip
   17bf8:	ldr	lr, [pc, #68]	; 17c44 <logBytes@@Base+0x58>
   17bfc:	sub	sp, sp, #16
   17c00:	ldr	r4, [ip, lr]
   17c04:	stm	sp, {r1, r2}
   17c08:	mov	r2, sp
   17c0c:	ldr	r1, [pc, #52]	; 17c48 <logBytes@@Base+0x5c>
   17c10:	ldr	ip, [r4]
   17c14:	add	r1, pc, r1
   17c18:	str	r3, [sp, #8]
   17c1c:	str	ip, [sp, #12]
   17c20:	bl	17844 <logData@@Base>
   17c24:	ldr	r2, [sp, #12]
   17c28:	ldr	r3, [r4]
   17c2c:	cmp	r2, r3
   17c30:	bne	17c3c <logBytes@@Base+0x50>
   17c34:	add	sp, sp, #16
   17c38:	pop	{r4, pc}
   17c3c:	bl	14a60 <__stack_chk_fail@plt>
   17c40:	andeq	ip, r1, r4, lsl #8
   17c44:	andeq	r0, r0, ip, lsr #4
   17c48:			; <UNDEFINED> instruction: 0xfffff9bc

00017c4c <logSystemError@@Base>:
   17c4c:	push	{r4, r5, lr}
   17c50:	sub	sp, sp, #12
   17c54:	mov	r5, r0
   17c58:	bl	14c4c <__errno_location@plt>
   17c5c:	ldr	r4, [r0]
   17c60:	mov	r0, r4
   17c64:	bl	14838 <strerror@plt>
   17c68:	ldr	r1, [pc, #28]	; 17c8c <logSystemError@@Base+0x40>
   17c6c:	mov	r3, r4
   17c70:	mov	r2, r5
   17c74:	add	r1, pc, r1
   17c78:	str	r0, [sp]
   17c7c:	mov	r0, #3
   17c80:	bl	17b84 <logMessage@@Base>
   17c84:	add	sp, sp, #12
   17c88:	pop	{r4, r5, pc}
   17c8c:	andeq	r8, r0, r4, lsl #23

00017c90 <logMallocError@@Base>:
   17c90:	ldr	r0, [pc, #4]	; 17c9c <logMallocError@@Base+0xc>
   17c94:	add	r0, pc, r0
   17c98:	b	17c4c <logSystemError@@Base>
   17c9c:	andeq	r8, r0, r8, ror fp
   17ca0:	ldr	r3, [pc, #196]	; 17d6c <logMallocError@@Base+0xdc>
   17ca4:	push	{r4, r5, r6, r7, lr}
   17ca8:	add	r3, pc, r3
   17cac:	mov	r6, r0
   17cb0:	ldr	r0, [pc, #184]	; 17d70 <logMallocError@@Base+0xe0>
   17cb4:	mov	r5, r1
   17cb8:	mov	r1, r3
   17cbc:	sub	sp, sp, #28
   17cc0:	mov	r3, #0
   17cc4:	ldr	r7, [r1, r0]
   17cc8:	add	r4, sp, #24
   17ccc:	str	r3, [sp, #4]
   17cd0:	str	r3, [sp, #8]
   17cd4:	ldr	r1, [r7]
   17cd8:	str	r3, [sp, #12]
   17cdc:	str	r3, [sp, #16]
   17ce0:	str	r1, [sp, #20]
   17ce4:	strh	r2, [r4, #-20]!	; 0xffffffec
   17ce8:	b	17cfc <logMallocError@@Base+0x6c>
   17cec:	bl	14c4c <__errno_location@plt>
   17cf0:	ldr	r3, [r0]
   17cf4:	cmp	r3, #4
   17cf8:	bne	17d34 <logMallocError@@Base+0xa4>
   17cfc:	mov	r0, r6
   17d00:	mov	r1, r5
   17d04:	mov	r2, r4
   17d08:	bl	148f8 <fcntl@plt>
   17d0c:	cmn	r0, #1
   17d10:	beq	17cec <logMallocError@@Base+0x5c>
   17d14:	mov	r3, #1
   17d18:	ldr	r2, [sp, #20]
   17d1c:	mov	r0, r3
   17d20:	ldr	r3, [r7]
   17d24:	cmp	r2, r3
   17d28:	bne	17d68 <logMallocError@@Base+0xd8>
   17d2c:	add	sp, sp, #28
   17d30:	pop	{r4, r5, r6, r7, pc}
   17d34:	cmp	r3, #13
   17d38:	moveq	r2, #11
   17d3c:	moveq	r3, #0
   17d40:	streq	r2, [r0]
   17d44:	beq	17d18 <logMallocError@@Base+0x88>
   17d48:	cmp	r3, #11
   17d4c:	moveq	r3, #0
   17d50:	beq	17d18 <logMallocError@@Base+0x88>
   17d54:	ldr	r0, [pc, #24]	; 17d74 <logMallocError@@Base+0xe4>
   17d58:	add	r0, pc, r0
   17d5c:	bl	17c4c <logSystemError@@Base>
   17d60:	mov	r3, #0
   17d64:	b	17d18 <logMallocError@@Base+0x88>
   17d68:	bl	14a60 <__stack_chk_fail@plt>
   17d6c:	andeq	ip, r1, r0, asr r3
   17d70:	andeq	r0, r0, ip, lsr #4
   17d74:			; <UNDEFINED> instruction: 0x00008bb8

00017d78 <isPathDelimiter@@Base>:
   17d78:	subs	r3, r0, #47	; 0x2f
   17d7c:	rsbs	r0, r3, #0
   17d80:	adcs	r0, r0, r3
   17d84:	bx	lr

00017d88 <isAbsolutePath@@Base>:
   17d88:	push	{r3, lr}
   17d8c:	ldrb	r0, [r0]
   17d90:	bl	17d78 <isPathDelimiter@@Base>
   17d94:	adds	r0, r0, #0
   17d98:	movne	r0, #1
   17d9c:	pop	{r3, pc}

00017da0 <getPathDirectory@@Base>:
   17da0:	push	{r4, r5, r6, r7, r8, lr}
   17da4:	mov	r8, r0
   17da8:	bl	14b80 <strlen@plt>
   17dac:	subs	r7, r0, #0
   17db0:	addne	r6, r8, r7
   17db4:	movne	r5, r7
   17db8:	bne	17dcc <getPathDirectory@@Base+0x2c>
   17dbc:	b	17e0c <getPathDirectory@@Base+0x6c>
   17dc0:	cmp	r4, #0
   17dc4:	mov	r5, r4
   17dc8:	beq	17e3c <getPathDirectory@@Base+0x9c>
   17dcc:	ldrb	r0, [r6, #-1]!
   17dd0:	sub	r4, r5, #1
   17dd4:	bl	17d78 <isPathDelimiter@@Base>
   17dd8:	cmp	r0, #0
   17ddc:	bne	17dc0 <getPathDirectory@@Base+0x20>
   17de0:	add	r6, r8, r5
   17de4:	b	17dfc <getPathDirectory@@Base+0x5c>
   17de8:	ldrb	r0, [r6, #-2]
   17dec:	sub	r6, r6, #1
   17df0:	bl	17d78 <isPathDelimiter@@Base>
   17df4:	cmp	r0, #0
   17df8:	bne	17e68 <getPathDirectory@@Base+0xc8>
   17dfc:	cmp	r4, #0
   17e00:	mov	r5, r4
   17e04:	sub	r4, r4, #1
   17e08:	bne	17de8 <getPathDirectory@@Base+0x48>
   17e0c:	mov	r0, #2
   17e10:	ldr	r8, [pc, #124]	; 17e94 <getPathDirectory@@Base+0xf4>
   17e14:	bl	14b74 <malloc@plt>
   17e18:	mov	r7, #1
   17e1c:	add	r8, pc, r8
   17e20:	subs	r4, r0, #0
   17e24:	bne	17e4c <getPathDirectory@@Base+0xac>
   17e28:	bl	17c90 <logMallocError@@Base>
   17e2c:	mov	r0, r4
   17e30:	pop	{r4, r5, r6, r7, r8, pc}
   17e34:	mov	r5, r6
   17e38:	mov	r7, r5
   17e3c:	add	r0, r7, #1
   17e40:	bl	14b74 <malloc@plt>
   17e44:	subs	r4, r0, #0
   17e48:	beq	17e28 <getPathDirectory@@Base+0x88>
   17e4c:	mov	r1, r8
   17e50:	mov	r2, r7
   17e54:	bl	14b68 <memcpy@plt>
   17e58:	mov	r3, #0
   17e5c:	mov	r0, r4
   17e60:	strb	r3, [r4, r7]
   17e64:	pop	{r4, r5, r6, r7, r8, pc}
   17e68:	add	r7, r8, r5
   17e6c:	mov	r6, r5
   17e70:	ldrb	r0, [r7, #-1]!
   17e74:	sub	r4, r6, #1
   17e78:	bl	17d78 <isPathDelimiter@@Base>
   17e7c:	cmp	r0, #0
   17e80:	beq	17e34 <getPathDirectory@@Base+0x94>
   17e84:	cmp	r4, #0
   17e88:	mov	r6, r4
   17e8c:	bne	17e70 <getPathDirectory@@Base+0xd0>
   17e90:	b	17e38 <getPathDirectory@@Base+0x98>
   17e94:	muleq	r0, r0, r5

00017e98 <locatePathName@@Base>:
   17e98:	push	{r4, r5, r6, lr}
   17e9c:	mov	r6, r0
   17ea0:	bl	14b80 <strlen@plt>
   17ea4:	add	r4, r6, r0
   17ea8:	cmp	r6, r4
   17eac:	beq	17ed8 <locatePathName@@Base+0x40>
   17eb0:	mov	r5, r4
   17eb4:	b	17ec0 <locatePathName@@Base+0x28>
   17eb8:	cmp	r6, r5
   17ebc:	beq	17ee0 <locatePathName@@Base+0x48>
   17ec0:	mov	r4, r5
   17ec4:	sub	r5, r5, #1
   17ec8:	ldrb	r0, [r4, #-1]
   17ecc:	bl	17d78 <isPathDelimiter@@Base>
   17ed0:	cmp	r0, #0
   17ed4:	beq	17eb8 <locatePathName@@Base+0x20>
   17ed8:	mov	r0, r4
   17edc:	pop	{r4, r5, r6, pc}
   17ee0:	mov	r4, r6
   17ee4:	mov	r0, r4
   17ee8:	pop	{r4, r5, r6, pc}

00017eec <locatePathExtension@@Base>:
   17eec:	push	{r3, lr}
   17ef0:	bl	17e98 <locatePathName@@Base>
   17ef4:	mov	r1, #46	; 0x2e
   17ef8:	pop	{r3, lr}
   17efc:	b	14cb8 <strrchr@plt>

00017f00 <isExplicitPath@@Base>:
   17f00:	push	{r4, lr}
   17f04:	mov	r4, r0
   17f08:	bl	17e98 <locatePathName@@Base>
   17f0c:	subs	r0, r4, r0
   17f10:	movne	r0, #1
   17f14:	pop	{r4, pc}

00017f18 <makePath@@Base>:
   17f18:	ldr	r3, [pc, #192]	; 17fe0 <makePath@@Base+0xc8>
   17f1c:	ldr	r2, [pc, #192]	; 17fe4 <makePath@@Base+0xcc>
   17f20:	add	r3, pc, r3
   17f24:	push	{r4, r5, lr}
   17f28:	sub	sp, sp, #20
   17f2c:	ldr	r4, [r3, r2]
   17f30:	mov	r5, r0
   17f34:	mov	r0, r1
   17f38:	str	r1, [sp, #8]
   17f3c:	ldr	r3, [r4]
   17f40:	str	r3, [sp, #12]
   17f44:	bl	17d88 <isAbsolutePath@@Base>
   17f48:	cmp	r0, #0
   17f4c:	bne	17f64 <makePath@@Base+0x4c>
   17f50:	cmp	r5, #0
   17f54:	beq	17f64 <makePath@@Base+0x4c>
   17f58:	ldrb	r3, [r5]
   17f5c:	cmp	r3, #0
   17f60:	bne	17f8c <makePath@@Base+0x74>
   17f64:	mov	r1, #1
   17f68:	mov	r3, #8
   17f6c:	add	r0, sp, r3
   17f70:	bl	19220 <joinStrings@@Base>
   17f74:	ldr	r2, [sp, #12]
   17f78:	ldr	r3, [r4]
   17f7c:	cmp	r2, r3
   17f80:	bne	17fd8 <makePath@@Base+0xc0>
   17f84:	add	sp, sp, #20
   17f88:	pop	{r4, r5, pc}
   17f8c:	mov	r0, r5
   17f90:	bl	14b80 <strlen@plt>
   17f94:	add	r0, r5, r0
   17f98:	ldrb	r0, [r0, #-1]
   17f9c:	bl	17d78 <isPathDelimiter@@Base>
   17fa0:	cmp	r0, #0
   17fa4:	movne	r1, #2
   17fa8:	movne	r3, #1
   17fac:	bne	17fc4 <makePath@@Base+0xac>
   17fb0:	ldr	r2, [pc, #48]	; 17fe8 <makePath@@Base+0xd0>
   17fb4:	mov	r3, r0
   17fb8:	mov	r1, #3
   17fbc:	add	r2, pc, r2
   17fc0:	str	r2, [sp, #4]
   17fc4:	lsl	r3, r3, #2
   17fc8:	add	r0, sp, #16
   17fcc:	add	r2, r0, r3
   17fd0:	str	r5, [r2, #-16]
   17fd4:	b	17f6c <makePath@@Base+0x54>
   17fd8:	bl	14a60 <__stack_chk_fail@plt>
   17fdc:	bl	14c94 <_Unwind_Resume@plt>
   17fe0:	ldrdeq	ip, [r1], -r8
   17fe4:	andeq	r0, r0, ip, lsr #4
   17fe8:	andeq	r8, r0, ip, ror #18

00017fec <ensureFileExtension@@Base>:
   17fec:	ldr	r3, [pc, #144]	; 18084 <ensureFileExtension@@Base+0x98>
   17ff0:	ldr	r2, [pc, #144]	; 18088 <ensureFileExtension@@Base+0x9c>
   17ff4:	add	r3, pc, r3
   17ff8:	push	{r4, r5, r6, r7, lr}
   17ffc:	sub	sp, sp, #20
   18000:	ldr	r4, [r3, r2]
   18004:	mov	r5, r1
   18008:	mov	r6, r0
   1800c:	ldr	r3, [r4]
   18010:	str	r3, [sp, #12]
   18014:	bl	14b80 <strlen@plt>
   18018:	mov	r7, r0
   1801c:	mov	r0, r5
   18020:	bl	14b80 <strlen@plt>
   18024:	str	r6, [sp, #4]
   18028:	cmp	r0, #0
   1802c:	beq	1805c <ensureFileExtension@@Base+0x70>
   18030:	cmp	r7, r0
   18034:	bcs	18044 <ensureFileExtension@@Base+0x58>
   18038:	str	r5, [sp, #8]
   1803c:	mov	r1, #2
   18040:	b	18060 <ensureFileExtension@@Base+0x74>
   18044:	rsb	r0, r0, r7
   18048:	mov	r1, r5
   1804c:	add	r0, r6, r0
   18050:	bl	14c34 <strcmp@plt>
   18054:	cmp	r0, #0
   18058:	bne	18038 <ensureFileExtension@@Base+0x4c>
   1805c:	mov	r1, #1
   18060:	add	r0, sp, #4
   18064:	bl	19220 <joinStrings@@Base>
   18068:	ldr	r2, [sp, #12]
   1806c:	ldr	r3, [r4]
   18070:	cmp	r2, r3
   18074:	bne	18080 <ensureFileExtension@@Base+0x94>
   18078:	add	sp, sp, #20
   1807c:	pop	{r4, r5, r6, r7, pc}
   18080:	bl	14a60 <__stack_chk_fail@plt>
   18084:	andeq	ip, r1, r4
   18088:	andeq	r0, r0, ip, lsr #4

0001808c <makeFilePath@@Base>:
   1808c:	push	{r3, r4, r5, lr}
   18090:	mov	r5, r0
   18094:	mov	r0, r1
   18098:	mov	r1, r2
   1809c:	bl	17fec <ensureFileExtension@@Base>
   180a0:	subs	r4, r0, #0
   180a4:	beq	180c8 <makeFilePath@@Base+0x3c>
   180a8:	mov	r0, r5
   180ac:	mov	r1, r4
   180b0:	bl	17f18 <makePath@@Base>
   180b4:	mov	r5, r0
   180b8:	mov	r0, r4
   180bc:	bl	147fc <free@plt>
   180c0:	mov	r0, r5
   180c4:	pop	{r3, r4, r5, pc}
   180c8:	mov	r5, r4
   180cc:	b	180c0 <makeFilePath@@Base+0x34>

000180d0 <testPath@@Base>:
   180d0:	push	{r3, lr}
   180d4:	mov	r1, #0
   180d8:	bl	14a84 <access@plt>
   180dc:	adds	r0, r0, #1
   180e0:	movne	r0, #1
   180e4:	pop	{r3, pc}

000180e8 <testFilePath@@Base>:
   180e8:	ldr	r3, [pc, #120]	; 18168 <testFilePath@@Base+0x80>
   180ec:	mov	r1, r0
   180f0:	ldr	ip, [pc, #116]	; 1816c <testFilePath@@Base+0x84>
   180f4:	mov	r0, #3
   180f8:	add	r3, pc, r3
   180fc:	push	{r4, lr}
   18100:	sub	sp, sp, #96	; 0x60
   18104:	ldr	r4, [r3, ip]
   18108:	mov	r2, sp
   1810c:	ldr	r3, [r4]
   18110:	str	r3, [sp, #92]	; 0x5c
   18114:	bl	14bec <__xstat@plt>
   18118:	cmn	r0, #1
   1811c:	moveq	r3, #0
   18120:	beq	18148 <testFilePath@@Base+0x60>
   18124:	ldr	r3, [sp, #16]
   18128:	and	r3, r3, #61440	; 0xf000
   1812c:	cmp	r3, #32768	; 0x8000
   18130:	moveq	r3, #1
   18134:	beq	18148 <testFilePath@@Base+0x60>
   18138:	bl	14c4c <__errno_location@plt>
   1813c:	mov	r3, #0
   18140:	mov	r2, #17
   18144:	str	r2, [r0]
   18148:	ldr	r2, [sp, #92]	; 0x5c
   1814c:	mov	r0, r3
   18150:	ldr	r3, [r4]
   18154:	cmp	r2, r3
   18158:	bne	18164 <testFilePath@@Base+0x7c>
   1815c:	add	sp, sp, #96	; 0x60
   18160:	pop	{r4, pc}
   18164:	bl	14a60 <__stack_chk_fail@plt>
   18168:	andeq	fp, r1, r0, lsl #30
   1816c:	andeq	r0, r0, ip, lsr #4

00018170 <testProgramPath@@Base>:
   18170:	push	{r3, lr}
   18174:	mov	r1, #1
   18178:	bl	14a84 <access@plt>
   1817c:	adds	r0, r0, #1
   18180:	movne	r0, #1
   18184:	pop	{r3, pc}

00018188 <testDirectoryPath@@Base>:
   18188:	ldr	r3, [pc, #120]	; 18208 <testDirectoryPath@@Base+0x80>
   1818c:	mov	r1, r0
   18190:	ldr	ip, [pc, #116]	; 1820c <testDirectoryPath@@Base+0x84>
   18194:	mov	r0, #3
   18198:	add	r3, pc, r3
   1819c:	push	{r4, lr}
   181a0:	sub	sp, sp, #96	; 0x60
   181a4:	ldr	r4, [r3, ip]
   181a8:	mov	r2, sp
   181ac:	ldr	r3, [r4]
   181b0:	str	r3, [sp, #92]	; 0x5c
   181b4:	bl	14bec <__xstat@plt>
   181b8:	cmn	r0, #1
   181bc:	moveq	r3, #0
   181c0:	beq	181e8 <testDirectoryPath@@Base+0x60>
   181c4:	ldr	r3, [sp, #16]
   181c8:	and	r3, r3, #61440	; 0xf000
   181cc:	cmp	r3, #16384	; 0x4000
   181d0:	moveq	r3, #1
   181d4:	beq	181e8 <testDirectoryPath@@Base+0x60>
   181d8:	bl	14c4c <__errno_location@plt>
   181dc:	mov	r3, #0
   181e0:	mov	r2, #17
   181e4:	str	r2, [r0]
   181e8:	ldr	r2, [sp, #92]	; 0x5c
   181ec:	mov	r0, r3
   181f0:	ldr	r3, [r4]
   181f4:	cmp	r2, r3
   181f8:	bne	18204 <testDirectoryPath@@Base+0x7c>
   181fc:	add	sp, sp, #96	; 0x60
   18200:	pop	{r4, pc}
   18204:	bl	14a60 <__stack_chk_fail@plt>
   18208:	andeq	fp, r1, r0, ror #28
   1820c:	andeq	r0, r0, ip, lsr #4

00018210 <createDirectory@@Base>:
   18210:	push	{r4, r5, lr}
   18214:	movw	r1, #493	; 0x1ed
   18218:	sub	sp, sp, #12
   1821c:	mov	r4, r0
   18220:	bl	14a9c <mkdir@plt>
   18224:	cmn	r0, #1
   18228:	movne	r0, #1
   1822c:	beq	18238 <createDirectory@@Base+0x28>
   18230:	add	sp, sp, #12
   18234:	pop	{r4, r5, pc}
   18238:	ldr	r1, [pc, #68]	; 18284 <createDirectory@@Base+0x74>
   1823c:	mov	r2, #5
   18240:	mov	r0, #0
   18244:	add	r1, pc, r1
   18248:	bl	14a90 <dcgettext@plt>
   1824c:	mov	r5, r0
   18250:	bl	14c4c <__errno_location@plt>
   18254:	ldr	r0, [r0]
   18258:	bl	14838 <strerror@plt>
   1825c:	ldr	r1, [pc, #36]	; 18288 <createDirectory@@Base+0x78>
   18260:	mov	r2, r5
   18264:	mov	r3, r4
   18268:	add	r1, pc, r1
   1826c:	str	r0, [sp]
   18270:	mov	r0, #4
   18274:	bl	17b84 <logMessage@@Base>
   18278:	mov	r0, #0
   1827c:	add	sp, sp, #12
   18280:	pop	{r4, r5, pc}
   18284:	andeq	r8, r0, r8, ror #13
   18288:	andeq	r8, r0, r4, lsr #7

0001828c <ensureDirectory@@Base>:
   1828c:	push	{r3, r4, r5, r6, r7, lr}
   18290:	mov	r5, r0
   18294:	bl	18188 <testDirectoryPath@@Base>
   18298:	subs	r4, r0, #0
   1829c:	movne	r4, #1
   182a0:	bne	182d8 <ensureDirectory@@Base+0x4c>
   182a4:	bl	14c4c <__errno_location@plt>
   182a8:	ldr	r0, [r0]
   182ac:	cmp	r0, #17
   182b0:	beq	18334 <ensureDirectory@@Base+0xa8>
   182b4:	cmp	r0, #2
   182b8:	beq	182e0 <ensureDirectory@@Base+0x54>
   182bc:	bl	14838 <strerror@plt>
   182c0:	ldr	r1, [pc, #132]	; 1834c <ensureDirectory@@Base+0xc0>
   182c4:	mov	r2, r5
   182c8:	add	r1, pc, r1
   182cc:	mov	r3, r0
   182d0:	mov	r0, #3
   182d4:	bl	17b84 <logMessage@@Base>
   182d8:	mov	r0, r4
   182dc:	pop	{r3, r4, r5, r6, r7, pc}
   182e0:	mov	r0, r5
   182e4:	bl	17da0 <getPathDirectory@@Base>
   182e8:	subs	r6, r0, #0
   182ec:	beq	182d8 <ensureDirectory@@Base+0x4c>
   182f0:	bl	1828c <ensureDirectory@@Base>
   182f4:	mov	r7, r0
   182f8:	mov	r0, r6
   182fc:	bl	147fc <free@plt>
   18300:	cmp	r7, #0
   18304:	beq	182d8 <ensureDirectory@@Base+0x4c>
   18308:	mov	r0, r5
   1830c:	bl	18210 <createDirectory@@Base>
   18310:	cmp	r0, #0
   18314:	beq	182d8 <ensureDirectory@@Base+0x4c>
   18318:	ldr	r1, [pc, #48]	; 18350 <ensureDirectory@@Base+0xc4>
   1831c:	mov	r2, r5
   18320:	mov	r0, #5
   18324:	mov	r4, #1
   18328:	add	r1, pc, r1
   1832c:	bl	17b84 <logMessage@@Base>
   18330:	b	182d8 <ensureDirectory@@Base+0x4c>
   18334:	ldr	r1, [pc, #24]	; 18354 <ensureDirectory@@Base+0xc8>
   18338:	mov	r2, r5
   1833c:	mov	r0, #3
   18340:	add	r1, pc, r1
   18344:	bl	17b84 <logMessage@@Base>
   18348:	b	182d8 <ensureDirectory@@Base+0x4c>
   1834c:	muleq	r0, r0, r6
   18350:	andeq	r8, r0, r0, asr r6
   18354:	andeq	r8, r0, r4, lsl #12

00018358 <getWritableDirectory@@Base>:
   18358:	ldr	r3, [pc, #64]	; 183a0 <getWritableDirectory@@Base+0x48>
   1835c:	ldr	r2, [pc, #64]	; 183a4 <getWritableDirectory@@Base+0x4c>
   18360:	add	r3, pc, r3
   18364:	push	{r4, lr}
   18368:	ldr	r4, [r3, r2]
   1836c:	ldr	r0, [r4]
   18370:	cmp	r0, #0
   18374:	beq	18398 <getWritableDirectory@@Base+0x40>
   18378:	ldrb	r3, [r0]
   1837c:	cmp	r3, #0
   18380:	beq	18398 <getWritableDirectory@@Base+0x40>
   18384:	bl	1828c <ensureDirectory@@Base>
   18388:	cmp	r0, #0
   1838c:	beq	18398 <getWritableDirectory@@Base+0x40>
   18390:	ldr	r0, [r4]
   18394:	pop	{r4, pc}
   18398:	mov	r0, #0
   1839c:	pop	{r4, pc}
   183a0:	muleq	r1, r8, ip
   183a4:	andeq	r0, r0, r4, ror r2

000183a8 <makeWritablePath@@Base>:
   183a8:	push	{r4, lr}
   183ac:	mov	r4, r0
   183b0:	bl	18358 <getWritableDirectory@@Base>
   183b4:	cmp	r0, #0
   183b8:	popeq	{r4, pc}
   183bc:	mov	r1, r4
   183c0:	pop	{r4, lr}
   183c4:	b	17f18 <makePath@@Base>

000183c8 <getWorkingDirectory@@Base>:
   183c8:	push	{r3, r4, r5, r6, r7, lr}
   183cc:	mov	r5, #0
   183d0:	mov	r4, #128	; 0x80
   183d4:	b	183fc <getWorkingDirectory@@Base+0x34>
   183d8:	bl	14bb0 <getcwd@plt>
   183dc:	mov	r5, r6
   183e0:	cmp	r0, #0
   183e4:	bne	1846c <getWorkingDirectory@@Base+0xa4>
   183e8:	bl	14c4c <__errno_location@plt>
   183ec:	ldr	r3, [r0]
   183f0:	mov	r7, r0
   183f4:	cmp	r3, #34	; 0x22
   183f8:	bne	18474 <getWorkingDirectory@@Base+0xac>
   183fc:	lsl	r4, r4, #1
   18400:	mov	r0, r5
   18404:	mov	r1, r4
   18408:	bl	149dc <realloc@plt>
   1840c:	mov	r1, r4
   18410:	subs	r6, r0, #0
   18414:	bne	183d8 <getWorkingDirectory@@Base+0x10>
   18418:	bl	17c90 <logMallocError@@Base>
   1841c:	cmp	r5, #0
   18420:	bne	1848c <getWorkingDirectory@@Base+0xc4>
   18424:	bl	14c4c <__errno_location@plt>
   18428:	mov	r7, r0
   1842c:	ldr	r1, [pc, #104]	; 1849c <getWorkingDirectory@@Base+0xd4>
   18430:	mov	r2, #5
   18434:	mov	r0, #0
   18438:	add	r1, pc, r1
   1843c:	bl	14a90 <dcgettext@plt>
   18440:	mov	r4, r0
   18444:	ldr	r0, [r7]
   18448:	bl	14838 <strerror@plt>
   1844c:	ldr	r1, [pc, #76]	; 184a0 <getWorkingDirectory@@Base+0xd8>
   18450:	mov	r2, r4
   18454:	add	r1, pc, r1
   18458:	mov	r3, r0
   1845c:	mov	r0, #4
   18460:	bl	17b84 <logMessage@@Base>
   18464:	mov	r0, #0
   18468:	pop	{r3, r4, r5, r6, r7, pc}
   1846c:	mov	r0, r6
   18470:	pop	{r3, r4, r5, r6, r7, pc}
   18474:	ldr	r0, [pc, #40]	; 184a4 <getWorkingDirectory@@Base+0xdc>
   18478:	add	r0, pc, r0
   1847c:	bl	17c4c <logSystemError@@Base>
   18480:	mov	r0, r6
   18484:	bl	147fc <free@plt>
   18488:	b	1842c <getWorkingDirectory@@Base+0x64>
   1848c:	bl	14c4c <__errno_location@plt>
   18490:	mov	r6, r5
   18494:	mov	r7, r0
   18498:	b	18480 <getWorkingDirectory@@Base+0xb8>
   1849c:	andeq	r8, r0, r0, ror #10
   184a0:	andeq	r8, r0, r0, lsr #19
   184a4:	andeq	r8, r0, r8, lsl r5

000184a8 <setWorkingDirectory@@Base>:
   184a8:	push	{r4, r5, lr}
   184ac:	sub	sp, sp, #12
   184b0:	mov	r4, r0
   184b4:	bl	14748 <chdir@plt>
   184b8:	cmn	r0, #1
   184bc:	movne	r0, #1
   184c0:	beq	184cc <setWorkingDirectory@@Base+0x24>
   184c4:	add	sp, sp, #12
   184c8:	pop	{r4, r5, pc}
   184cc:	ldr	r1, [pc, #68]	; 18518 <setWorkingDirectory@@Base+0x70>
   184d0:	mov	r2, #5
   184d4:	mov	r0, #0
   184d8:	add	r1, pc, r1
   184dc:	bl	14a90 <dcgettext@plt>
   184e0:	mov	r5, r0
   184e4:	bl	14c4c <__errno_location@plt>
   184e8:	ldr	r0, [r0]
   184ec:	bl	14838 <strerror@plt>
   184f0:	ldr	r1, [pc, #36]	; 1851c <setWorkingDirectory@@Base+0x74>
   184f4:	mov	r2, r5
   184f8:	mov	r3, r4
   184fc:	add	r1, pc, r1
   18500:	str	r0, [sp]
   18504:	mov	r0, #4
   18508:	bl	17b84 <logMessage@@Base>
   1850c:	mov	r0, #0
   18510:	add	sp, sp, #12
   18514:	pop	{r4, r5, pc}
   18518:	andeq	r8, r0, r0, ror #9
   1851c:	andeq	r8, r0, r0, lsl r1

00018520 <getHomeDirectory@@Base>:
   18520:	ldr	r0, [pc, #80]	; 18578 <getHomeDirectory@@Base+0x58>
   18524:	push	{lr}		; (str lr, [sp, #-4]!)
   18528:	add	r0, pc, r0
   1852c:	sub	sp, sp, #12
   18530:	bl	14ce8 <getenv@plt>
   18534:	subs	r3, r0, #0
   18538:	beq	1855c <getHomeDirectory@@Base+0x3c>
   1853c:	ldrb	r3, [r3]
   18540:	cmp	r3, #0
   18544:	beq	1855c <getHomeDirectory@@Base+0x3c>
   18548:	bl	14928 <__strdup@plt>
   1854c:	cmp	r0, #0
   18550:	beq	18568 <getHomeDirectory@@Base+0x48>
   18554:	add	sp, sp, #12
   18558:	pop	{pc}		; (ldr pc, [sp], #4)
   1855c:	mov	r0, r3
   18560:	add	sp, sp, #12
   18564:	pop	{pc}		; (ldr pc, [sp], #4)
   18568:	str	r0, [sp, #4]
   1856c:	bl	17c90 <logMallocError@@Base>
   18570:	ldr	r0, [sp, #4]
   18574:	b	18554 <getHomeDirectory@@Base+0x34>
   18578:			; <UNDEFINED> instruction: 0x000084b0

0001857c <getOverrideDirectory@@Base>:
   1857c:	push	{r4, r5, r6, lr}
   18580:	ldr	r4, [pc, #208]	; 18658 <getOverrideDirectory@@Base+0xdc>
   18584:	add	r4, pc, r4
   18588:	ldr	r0, [r4]
   1858c:	cmp	r0, #0
   18590:	beq	185a4 <getOverrideDirectory@@Base+0x28>
   18594:	ldrb	r3, [r0]
   18598:	cmp	r3, #0
   1859c:	moveq	r0, #0
   185a0:	pop	{r4, r5, r6, pc}
   185a4:	bl	18520 <getHomeDirectory@@Base>
   185a8:	subs	r6, r0, #0
   185ac:	beq	185f4 <getOverrideDirectory@@Base+0x78>
   185b0:	ldr	r1, [pc, #164]	; 1865c <getOverrideDirectory@@Base+0xe0>
   185b4:	add	r1, pc, r1
   185b8:	bl	17f18 <makePath@@Base>
   185bc:	mov	r5, r0
   185c0:	mov	r0, r6
   185c4:	str	r5, [r4]
   185c8:	bl	147fc <free@plt>
   185cc:	cmp	r5, #0
   185d0:	beq	185f4 <getOverrideDirectory@@Base+0x78>
   185d4:	ldr	r1, [pc, #132]	; 18660 <getOverrideDirectory@@Base+0xe4>
   185d8:	mov	r0, #6
   185dc:	mov	r2, r5
   185e0:	add	r1, pc, r1
   185e4:	bl	17b84 <logMessage@@Base>
   185e8:	ldr	r3, [pc, #116]	; 18664 <getOverrideDirectory@@Base+0xe8>
   185ec:	ldr	r0, [pc, r3]
   185f0:	b	18594 <getOverrideDirectory@@Base+0x18>
   185f4:	bl	183c8 <getWorkingDirectory@@Base>
   185f8:	subs	r4, r0, #0
   185fc:	beq	1862c <getOverrideDirectory@@Base+0xb0>
   18600:	ldr	r1, [pc, #96]	; 18668 <getOverrideDirectory@@Base+0xec>
   18604:	add	r1, pc, r1
   18608:	bl	17f18 <makePath@@Base>
   1860c:	ldr	r3, [pc, #88]	; 1866c <getOverrideDirectory@@Base+0xf0>
   18610:	add	r3, pc, r3
   18614:	mov	r5, r0
   18618:	mov	r0, r4
   1861c:	str	r5, [r3]
   18620:	bl	147fc <free@plt>
   18624:	cmp	r5, #0
   18628:	bne	185d4 <getOverrideDirectory@@Base+0x58>
   1862c:	ldr	r4, [pc, #60]	; 18670 <getOverrideDirectory@@Base+0xf4>
   18630:	mov	r0, #4
   18634:	ldr	r1, [pc, #56]	; 18674 <getOverrideDirectory@@Base+0xf8>
   18638:	add	r4, pc, r4
   1863c:	ldr	r3, [pc, #52]	; 18678 <getOverrideDirectory@@Base+0xfc>
   18640:	add	r1, pc, r1
   18644:	add	r3, pc, r3
   18648:	str	r3, [r4]
   1864c:	bl	17b84 <logMessage@@Base>
   18650:	ldr	r0, [r4]
   18654:	b	18594 <getOverrideDirectory@@Base+0x18>
   18658:	andeq	fp, r1, r4, ror #26
   1865c:	andeq	r8, r0, r0, asr r3
   18660:	andeq	r8, r0, r8, lsl r4
   18664:	strdeq	fp, [r1], -ip
   18668:	andeq	r8, r0, r0, lsl #6
   1866c:	ldrdeq	fp, [r1], -r8
   18670:			; <UNDEFINED> instruction: 0x0001bcb0
   18674:	andeq	r8, r0, r0, lsr #7
   18678:	andeq	r8, r0, ip, lsl #3

0001867c <openFile@@Base>:
   1867c:	push	{r4, r5, r6, lr}
   18680:	mov	r6, r2
   18684:	mov	r5, r0
   18688:	bl	14958 <fopen@plt>
   1868c:	subs	r4, r0, #0
   18690:	beq	186b8 <openFile@@Base+0x3c>
   18694:	bl	14a30 <fileno@plt>
   18698:	ldr	r1, [pc, #104]	; 18708 <openFile@@Base+0x8c>
   1869c:	mov	r2, r5
   186a0:	add	r1, pc, r1
   186a4:	mov	r3, r0
   186a8:	mov	r0, #7
   186ac:	bl	17b84 <logMessage@@Base>
   186b0:	mov	r0, r4
   186b4:	pop	{r4, r5, r6, pc}
   186b8:	cmp	r6, #0
   186bc:	bne	186f0 <openFile@@Base+0x74>
   186c0:	bl	14c4c <__errno_location@plt>
   186c4:	ldr	r0, [r0]
   186c8:	mov	r6, #3
   186cc:	bl	14838 <strerror@plt>
   186d0:	ldr	r1, [pc, #52]	; 1870c <openFile@@Base+0x90>
   186d4:	mov	r2, r5
   186d8:	add	r1, pc, r1
   186dc:	mov	r3, r0
   186e0:	mov	r0, r6
   186e4:	bl	17b84 <logMessage@@Base>
   186e8:	mov	r0, r4
   186ec:	pop	{r4, r5, r6, pc}
   186f0:	bl	14c4c <__errno_location@plt>
   186f4:	ldr	r0, [r0]
   186f8:	cmp	r0, #2
   186fc:	moveq	r6, #7
   18700:	bne	186c8 <openFile@@Base+0x4c>
   18704:	b	186cc <openFile@@Base+0x50>
   18708:	andeq	r8, r0, r0, ror r3
   1870c:	andeq	r7, r0, r0, lsr #24

00018710 <openDataFile@@Base>:
   18710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18714:	sub	sp, sp, #12
   18718:	mov	r5, r1
   1871c:	mov	r6, r2
   18720:	mov	r8, r0
   18724:	bl	17e98 <locatePathName@@Base>
   18728:	mov	r4, r0
   1872c:	bl	1857c <getOverrideDirectory@@Base>
   18730:	subs	r9, r0, #0
   18734:	beq	18788 <openDataFile@@Base+0x78>
   18738:	mov	r1, r4
   1873c:	bl	17f18 <makePath@@Base>
   18740:	subs	r4, r0, #0
   18744:	beq	18788 <openDataFile@@Base+0x78>
   18748:	bl	180e8 <testFilePath@@Base>
   1874c:	cmp	r0, #0
   18750:	bne	187d8 <openDataFile@@Base+0xc8>
   18754:	mov	r0, r8
   18758:	mov	r1, r5
   1875c:	mov	r2, r6
   18760:	bl	1867c <openFile@@Base>
   18764:	subs	r7, r0, #0
   18768:	beq	18790 <openDataFile@@Base+0x80>
   1876c:	cmp	r4, #0
   18770:	beq	1877c <openDataFile@@Base+0x6c>
   18774:	mov	r0, r4
   18778:	bl	147fc <free@plt>
   1877c:	mov	r0, r7
   18780:	add	sp, sp, #12
   18784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18788:	mov	r4, #0
   1878c:	b	18754 <openDataFile@@Base+0x44>
   18790:	ldrb	r3, [r5]
   18794:	cmp	r3, #119	; 0x77
   18798:	cmpne	r3, #97	; 0x61
   1879c:	bne	1876c <openDataFile@@Base+0x5c>
   187a0:	bl	14c4c <__errno_location@plt>
   187a4:	ldr	r3, [r0]
   187a8:	mov	sl, r0
   187ac:	cmp	r3, #2
   187b0:	beq	187f0 <openDataFile@@Base+0xe0>
   187b4:	cmp	r3, #13
   187b8:	cmpne	r3, #30
   187bc:	bne	1876c <openDataFile@@Base+0x5c>
   187c0:	cmp	r4, #0
   187c4:	beq	1877c <openDataFile@@Base+0x6c>
   187c8:	mov	r0, r9
   187cc:	bl	1828c <ensureDirectory@@Base>
   187d0:	cmp	r0, #0
   187d4:	beq	18774 <openDataFile@@Base+0x64>
   187d8:	mov	r1, r5
   187dc:	mov	r2, r6
   187e0:	mov	r0, r4
   187e4:	bl	1867c <openFile@@Base>
   187e8:	mov	r7, r0
   187ec:	b	18774 <openDataFile@@Base+0x64>
   187f0:	mov	r0, r8
   187f4:	bl	17da0 <getPathDirectory@@Base>
   187f8:	subs	fp, r0, #0
   187fc:	beq	18820 <openDataFile@@Base+0x110>
   18800:	bl	1828c <ensureDirectory@@Base>
   18804:	mov	r3, r0
   18808:	mov	r0, fp
   1880c:	str	r3, [sp, #4]
   18810:	bl	147fc <free@plt>
   18814:	ldr	r3, [sp, #4]
   18818:	cmp	r3, #0
   1881c:	bne	18828 <openDataFile@@Base+0x118>
   18820:	ldr	r3, [sl]
   18824:	b	187b4 <openDataFile@@Base+0xa4>
   18828:	mov	r0, r8
   1882c:	mov	r1, r5
   18830:	mov	r2, r6
   18834:	bl	1867c <openFile@@Base>
   18838:	mov	r7, r0
   1883c:	b	1876c <openDataFile@@Base+0x5c>

00018840 <acquireFileLock@@Base>:
   18840:	adds	r2, r1, #0
   18844:	mov	r1, #7
   18848:	movne	r2, #1
   1884c:	b	17ca0 <logMallocError@@Base+0x10>

00018850 <attemptFileLock@@Base>:
   18850:	adds	r2, r1, #0
   18854:	mov	r1, #6
   18858:	movne	r2, #1
   1885c:	b	17ca0 <logMallocError@@Base+0x10>

00018860 <releaseFileLock@@Base>:
   18860:	mov	r1, #6
   18864:	mov	r2, #2
   18868:	b	17ca0 <logMallocError@@Base+0x10>

0001886c <readLine@@Base>:
   1886c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18870:	mov	r6, r1
   18874:	mov	r7, r2
   18878:	mov	r8, r0
   1887c:	bl	14b20 <ferror@plt>
   18880:	cmp	r0, #0
   18884:	beq	18894 <readLine@@Base+0x28>
   18888:	mov	r9, #0
   1888c:	mov	r0, r9
   18890:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18894:	mov	r0, r8
   18898:	bl	14868 <feof@plt>
   1889c:	subs	r9, r0, #0
   188a0:	bne	18888 <readLine@@Base+0x1c>
   188a4:	ldr	r1, [r7]
   188a8:	cmp	r1, #0
   188ac:	ldrne	r0, [r6]
   188b0:	beq	18954 <readLine@@Base+0xe8>
   188b4:	mov	r2, r8
   188b8:	bl	14b38 <fgets@plt>
   188bc:	subs	r5, r0, #0
   188c0:	beq	189d4 <readLine@@Base+0x168>
   188c4:	bl	14b80 <strlen@plt>
   188c8:	sub	r2, r0, #1
   188cc:	mov	r4, r0
   188d0:	ldrb	r3, [r5, r2]
   188d4:	cmp	r3, #10
   188d8:	beq	18974 <readLine@@Base+0x108>
   188dc:	ldr	r3, [r6]
   188e0:	b	18918 <readLine@@Base+0xac>
   188e4:	mov	r2, r8
   188e8:	add	r0, r3, r4
   188ec:	bl	14b38 <fgets@plt>
   188f0:	cmp	r0, #0
   188f4:	beq	189a8 <readLine@@Base+0x13c>
   188f8:	bl	14b80 <strlen@plt>
   188fc:	ldr	r5, [r6]
   18900:	mov	r3, r5
   18904:	add	r4, r4, r0
   18908:	sub	r2, r4, #1
   1890c:	ldrb	r1, [r5, r2]
   18910:	cmp	r1, #10
   18914:	beq	18974 <readLine@@Base+0x108>
   18918:	ldr	r2, [r7]
   1891c:	rsb	r1, r4, r2
   18920:	cmp	r1, #1
   18924:	bne	188e4 <readLine@@Base+0x78>
   18928:	lsl	r5, r2, #1
   1892c:	mov	r0, r3
   18930:	mov	r1, r5
   18934:	bl	149dc <realloc@plt>
   18938:	rsb	r1, r4, r5
   1893c:	cmp	r0, #0
   18940:	beq	189cc <readLine@@Base+0x160>
   18944:	str	r0, [r6]
   18948:	str	r5, [r7]
   1894c:	ldr	r3, [r6]
   18950:	b	188e4 <readLine@@Base+0x78>
   18954:	mov	r0, #128	; 0x80
   18958:	str	r0, [r7]
   1895c:	bl	14b74 <malloc@plt>
   18960:	cmp	r0, #0
   18964:	str	r0, [r6]
   18968:	beq	189cc <readLine@@Base+0x160>
   1896c:	ldr	r1, [r7]
   18970:	b	188b4 <readLine@@Base+0x48>
   18974:	cmp	r2, #0
   18978:	moveq	r3, r5
   1897c:	beq	18994 <readLine@@Base+0x128>
   18980:	sub	r4, r4, #2
   18984:	add	r3, r5, r4
   18988:	ldrb	r1, [r5, r4]
   1898c:	cmp	r1, #13
   18990:	addne	r3, r5, r2
   18994:	mov	r9, #1
   18998:	mov	r2, #0
   1899c:	mov	r0, r9
   189a0:	strb	r2, [r3]
   189a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   189a8:	mov	r0, r8
   189ac:	bl	14b20 <ferror@plt>
   189b0:	cmp	r0, #0
   189b4:	moveq	r9, #1
   189b8:	beq	1888c <readLine@@Base+0x20>
   189bc:	ldr	r0, [pc, #36]	; 189e8 <readLine@@Base+0x17c>
   189c0:	add	r0, pc, r0
   189c4:	bl	17c4c <logSystemError@@Base>
   189c8:	b	1888c <readLine@@Base+0x20>
   189cc:	bl	17c90 <logMallocError@@Base>
   189d0:	b	1888c <readLine@@Base+0x20>
   189d4:	mov	r0, r8
   189d8:	bl	14b20 <ferror@plt>
   189dc:	cmp	r0, #0
   189e0:	beq	18888 <readLine@@Base+0x1c>
   189e4:	b	189bc <readLine@@Base+0x150>
   189e8:	andeq	r7, r0, r8, lsl #24

000189ec <processLines@@Base>:
   189ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f0:	sub	sp, sp, #28
   189f4:	ldr	lr, [pc, #224]	; 18adc <processLines@@Base+0xf0>
   189f8:	mov	r3, #0
   189fc:	ldr	ip, [pc, #220]	; 18ae0 <processLines@@Base+0xf4>
   18a00:	mov	r4, r3
   18a04:	add	lr, pc, lr
   18a08:	ldr	sl, [pc, #212]	; 18ae4 <processLines@@Base+0xf8>
   18a0c:	mov	r8, r2
   18a10:	mov	r5, r0
   18a14:	ldr	ip, [lr, ip]
   18a18:	add	sl, pc, sl
   18a1c:	str	r3, [sp, #12]
   18a20:	mov	r2, lr
   18a24:	str	r3, [sp, #16]
   18a28:	mov	r9, r1
   18a2c:	ldr	r3, [ip]
   18a30:	add	sl, sl, #8
   18a34:	str	ip, [sp, #4]
   18a38:	add	r7, sp, #12
   18a3c:	add	r6, sp, #16
   18a40:	str	r3, [sp, #20]
   18a44:	b	18a84 <processLines@@Base+0x98>
   18a48:	cmp	r4, #0
   18a4c:	ldr	fp, [sp, #12]
   18a50:	bne	18a6c <processLines@@Base+0x80>
   18a54:	mov	r0, fp
   18a58:	mov	r1, sl
   18a5c:	mov	r2, #3
   18a60:	bl	14814 <strncmp@plt>
   18a64:	cmp	r0, #0
   18a68:	addeq	fp, fp, #3
   18a6c:	mov	r0, fp
   18a70:	mov	r1, r8
   18a74:	blx	r9
   18a78:	add	r4, r4, #1
   18a7c:	cmp	r0, #0
   18a80:	beq	18a9c <processLines@@Base+0xb0>
   18a84:	mov	r0, r5
   18a88:	mov	r1, r7
   18a8c:	mov	r2, r6
   18a90:	bl	1886c <readLine@@Base>
   18a94:	cmp	r0, #0
   18a98:	bne	18a48 <processLines@@Base+0x5c>
   18a9c:	ldr	r0, [sp, #12]
   18aa0:	cmp	r0, #0
   18aa4:	beq	18aac <processLines@@Base+0xc0>
   18aa8:	bl	147fc <free@plt>
   18aac:	mov	r0, r5
   18ab0:	bl	14b20 <ferror@plt>
   18ab4:	ldr	r1, [sp, #4]
   18ab8:	ldr	r2, [sp, #20]
   18abc:	ldr	r3, [r1]
   18ac0:	rsbs	r0, r0, #1
   18ac4:	movcc	r0, #0
   18ac8:	cmp	r2, r3
   18acc:	bne	18ad8 <processLines@@Base+0xec>
   18ad0:	add	sp, sp, #28
   18ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ad8:	bl	14a60 <__stack_chk_fail@plt>
   18adc:	strdeq	fp, [r1], -r4
   18ae0:	andeq	r0, r0, ip, lsr #4
   18ae4:	andeq	r7, r0, ip, ror #29

00018ae8 <formatInputError@@Base>:
   18ae8:	push	{r4, r5, r6, r7, r8, r9, lr}
   18aec:	cmp	r2, #0
   18af0:	sub	sp, sp, #12
   18af4:	mov	r7, r3
   18af8:	mov	r4, r0
   18afc:	add	r5, r0, r1
   18b00:	ldr	r9, [sp, #40]	; 0x28
   18b04:	moveq	r6, r0
   18b08:	ldr	r8, [sp, #44]	; 0x2c
   18b0c:	beq	18b38 <formatInputError@@Base+0x50>
   18b10:	mov	r3, r2
   18b14:	ldr	r2, [pc, #184]	; 18bd4 <formatInputError@@Base+0xec>
   18b18:	rsb	r1, r0, r5
   18b1c:	mov	r6, r4
   18b20:	add	r2, pc, r2
   18b24:	bl	1491c <snprintf@plt>
   18b28:	add	r0, r4, r0
   18b2c:	cmp	r0, r5
   18b30:	movcc	r4, r0
   18b34:	movcs	r4, r5
   18b38:	cmp	r7, #0
   18b3c:	beq	18b74 <formatInputError@@Base+0x8c>
   18b40:	ldr	lr, [r7]
   18b44:	mov	r0, r4
   18b48:	ldr	ip, [pc, #136]	; 18bd8 <formatInputError@@Base+0xf0>
   18b4c:	rsb	r1, r4, r5
   18b50:	mov	r2, #1
   18b54:	mvn	r3, #0
   18b58:	add	ip, pc, ip
   18b5c:	stm	sp, {ip, lr}
   18b60:	bl	14b8c <__snprintf_chk@plt>
   18b64:	add	r0, r4, r0
   18b68:	cmp	r0, r5
   18b6c:	movcc	r4, r0
   18b70:	movcs	r4, r5
   18b74:	cmp	r6, r4
   18b78:	beq	18ba0 <formatInputError@@Base+0xb8>
   18b7c:	ldr	r2, [pc, #88]	; 18bdc <formatInputError@@Base+0xf4>
   18b80:	mov	r0, r4
   18b84:	rsb	r1, r4, r5
   18b88:	add	r2, pc, r2
   18b8c:	bl	1491c <snprintf@plt>
   18b90:	add	r0, r4, r0
   18b94:	cmp	r0, r5
   18b98:	movcc	r4, r0
   18b9c:	movcs	r4, r5
   18ba0:	str	r9, [sp]
   18ba4:	mov	r0, r4
   18ba8:	str	r8, [sp, #4]
   18bac:	rsb	r1, r4, r5
   18bb0:	mov	r2, #1
   18bb4:	mvn	r3, #0
   18bb8:	bl	14850 <__vsnprintf_chk@plt>
   18bbc:	add	r0, r4, r0
   18bc0:	cmp	r0, r5
   18bc4:	rsbls	r0, r6, r0
   18bc8:	rsbhi	r0, r6, r5
   18bcc:	add	sp, sp, #12
   18bd0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18bd4:	ldrdeq	r7, [r0], -ip
   18bd8:	ldrdeq	r7, [r0], -r0
   18bdc:	andeq	r7, r0, ip, ror #24

00018be0 <getConsole@@Base>:
   18be0:	push	{r4, lr}
   18be4:	ldr	r4, [pc, #96]	; 18c4c <getConsole@@Base+0x6c>
   18be8:	add	r4, pc, r4
   18bec:	ldr	r0, [r4]
   18bf0:	cmp	r0, #0
   18bf4:	popne	{r4, pc}
   18bf8:	ldr	r0, [pc, #80]	; 18c50 <getConsole@@Base+0x70>
   18bfc:	ldr	r1, [pc, #80]	; 18c54 <getConsole@@Base+0x74>
   18c00:	add	r0, pc, r0
   18c04:	add	r1, pc, r1
   18c08:	bl	14958 <fopen@plt>
   18c0c:	cmp	r0, #0
   18c10:	str	r0, [r4]
   18c14:	beq	18c38 <getConsole@@Base+0x58>
   18c18:	bl	14a30 <fileno@plt>
   18c1c:	ldr	r1, [pc, #52]	; 18c58 <getConsole@@Base+0x78>
   18c20:	add	r1, pc, r1
   18c24:	mov	r2, r0
   18c28:	mov	r0, #7
   18c2c:	bl	17b84 <logMessage@@Base>
   18c30:	ldr	r0, [r4]
   18c34:	pop	{r4, pc}
   18c38:	ldr	r0, [pc, #28]	; 18c5c <getConsole@@Base+0x7c>
   18c3c:	add	r0, pc, r0
   18c40:	bl	17c4c <logSystemError@@Base>
   18c44:	ldr	r0, [r4]
   18c48:	pop	{r4, pc}
   18c4c:	andeq	fp, r1, r8, lsl #14
   18c50:	andeq	r7, r0, r0, lsr lr
   18c54:	andeq	r7, r0, ip, lsr lr
   18c58:	andeq	r7, r0, r4, lsr #28
   18c5c:	andeq	r7, r0, r0, lsr #28

00018c60 <writeConsole@@Base>:
   18c60:	push	{r3, r4, r5, r6, r7, lr}
   18c64:	mov	r7, r0
   18c68:	mov	r4, r1
   18c6c:	bl	18be0 <getConsole@@Base>
   18c70:	subs	r6, r0, #0
   18c74:	beq	18cec <writeConsole@@Base+0x8c>
   18c78:	cmp	r4, #0
   18c7c:	bne	18c9c <writeConsole@@Base+0x3c>
   18c80:	b	18cf4 <writeConsole@@Base+0x94>
   18c84:	mov	r0, r6
   18c88:	bl	14b20 <ferror@plt>
   18c8c:	cmp	r0, #0
   18c90:	bne	18ce0 <writeConsole@@Base+0x80>
   18c94:	subs	r4, r4, r5
   18c98:	beq	18cf4 <writeConsole@@Base+0x94>
   18c9c:	mov	r0, r7
   18ca0:	mov	r1, #1
   18ca4:	mov	r2, r4
   18ca8:	mov	r3, r6
   18cac:	bl	14b5c <fwrite@plt>
   18cb0:	mov	r5, r0
   18cb4:	mov	r0, r6
   18cb8:	bl	14b20 <ferror@plt>
   18cbc:	add	r7, r7, r5
   18cc0:	cmp	r0, #0
   18cc4:	bne	18c84 <writeConsole@@Base+0x24>
   18cc8:	mov	r0, r6
   18ccc:	bl	14c88 <fflush@plt>
   18cd0:	mov	r0, r6
   18cd4:	bl	14b20 <ferror@plt>
   18cd8:	cmp	r0, #0
   18cdc:	beq	18c94 <writeConsole@@Base+0x34>
   18ce0:	ldr	r0, [pc, #20]	; 18cfc <writeConsole@@Base+0x9c>
   18ce4:	add	r0, pc, r0
   18ce8:	bl	17c4c <logSystemError@@Base>
   18cec:	mov	r0, #0
   18cf0:	pop	{r3, r4, r5, r6, r7, pc}
   18cf4:	mov	r0, #1
   18cf8:	pop	{r3, r4, r5, r6, r7, pc}
   18cfc:	andeq	r7, r0, r8, lsl #27

00018d00 <ringBell@@Base>:
   18d00:	ldr	r0, [pc, #8]	; 18d10 <ringBell@@Base+0x10>
   18d04:	mov	r1, #1
   18d08:	add	r0, pc, r0
   18d0c:	b	18c60 <writeConsole@@Base>
   18d10:	andeq	fp, r1, r4, ror r5

00018d14 <getDeviceDirectory@@Base>:
   18d14:	ldr	r3, [pc, #408]	; 18eb4 <getDeviceDirectory@@Base+0x1a0>
   18d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d1c:	add	fp, sp, #32
   18d20:	ldr	r1, [pc, #400]	; 18eb8 <getDeviceDirectory@@Base+0x1a4>
   18d24:	sub	sp, sp, #36	; 0x24
   18d28:	add	r3, pc, r3
   18d2c:	ldr	r2, [pc, #392]	; 18ebc <getDeviceDirectory@@Base+0x1a8>
   18d30:	ldr	r6, [r3, r1]
   18d34:	add	r2, pc, r2
   18d38:	ldr	r0, [r2, #4]
   18d3c:	ldr	r3, [r6]
   18d40:	cmp	r0, #0
   18d44:	str	r3, [fp, #-40]	; 0xffffffd8
   18d48:	beq	18d64 <getDeviceDirectory@@Base+0x50>
   18d4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d50:	ldr	r3, [r6]
   18d54:	cmp	r2, r3
   18d58:	bne	18eb0 <getDeviceDirectory@@Base+0x19c>
   18d5c:	sub	sp, fp, #32
   18d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d64:	ldr	r3, [pc, #340]	; 18ec0 <getDeviceDirectory@@Base+0x1ac>
   18d68:	ldr	r4, [pc, #340]	; 18ec4 <getDeviceDirectory@@Base+0x1b0>
   18d6c:	add	r3, pc, r3
   18d70:	ldr	r0, [pc, #336]	; 18ec8 <getDeviceDirectory@@Base+0x1b4>
   18d74:	ldr	r9, [pc, #336]	; 18ecc <getDeviceDirectory@@Base+0x1b8>
   18d78:	add	r4, pc, r4
   18d7c:	ldr	r8, [pc, #332]	; 18ed0 <getDeviceDirectory@@Base+0x1bc>
   18d80:	add	r0, pc, r0
   18d84:	str	r3, [fp, #-48]	; 0xffffffd0
   18d88:	add	r9, pc, r9
   18d8c:	ldr	r3, [pc, #320]	; 18ed4 <getDeviceDirectory@@Base+0x1c0>
   18d90:	add	r4, r4, #4
   18d94:	add	r8, pc, r8
   18d98:	add	r3, pc, r3
   18d9c:	str	r3, [fp, #-52]	; 0xffffffcc
   18da0:	b	18db0 <getDeviceDirectory@@Base+0x9c>
   18da4:	ldr	r0, [r4], #4
   18da8:	cmp	r0, #0
   18dac:	beq	18e4c <getDeviceDirectory@@Base+0x138>
   18db0:	bl	14ce8 <getenv@plt>
   18db4:	subs	sl, r0, #0
   18db8:	beq	18da4 <getDeviceDirectory@@Base+0x90>
   18dbc:	ldrb	r3, [sl]
   18dc0:	cmp	r3, #0
   18dc4:	beq	18da4 <getDeviceDirectory@@Base+0x90>
   18dc8:	bl	14b80 <strlen@plt>
   18dcc:	mov	r7, sp
   18dd0:	mov	r2, #1
   18dd4:	add	r3, r0, #12
   18dd8:	add	r1, r0, #5
   18ddc:	bic	r3, r3, #7
   18de0:	sub	sp, sp, r3
   18de4:	mvn	r3, #0
   18de8:	add	r5, sp, #16
   18dec:	stm	sp, {r9, sl}
   18df0:	mov	r0, r5
   18df4:	str	r8, [sp, #8]
   18df8:	bl	14b8c <__snprintf_chk@plt>
   18dfc:	mov	r0, r5
   18e00:	bl	18188 <testDirectoryPath@@Base>
   18e04:	cmp	r0, #0
   18e08:	bne	18e84 <getDeviceDirectory@@Base+0x170>
   18e0c:	bl	14c4c <__errno_location@plt>
   18e10:	ldr	r0, [r0]
   18e14:	cmp	r0, #2
   18e18:	beq	18e3c <getDeviceDirectory@@Base+0x128>
   18e1c:	ldr	sl, [r4, #-4]
   18e20:	bl	14838 <strerror@plt>
   18e24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18e28:	mov	r2, r5
   18e2c:	mov	r3, sl
   18e30:	str	r0, [sp]
   18e34:	mov	r0, #3
   18e38:	bl	17b84 <logMessage@@Base>
   18e3c:	ldr	r0, [r4], #4
   18e40:	mov	sp, r7
   18e44:	cmp	r0, #0
   18e48:	bne	18db0 <getDeviceDirectory@@Base+0x9c>
   18e4c:	ldr	r3, [pc, #132]	; 18ed8 <getDeviceDirectory@@Base+0x1c4>
   18e50:	ldr	r1, [pc, #132]	; 18edc <getDeviceDirectory@@Base+0x1c8>
   18e54:	add	r3, pc, r3
   18e58:	add	r1, pc, r1
   18e5c:	mov	r2, r3
   18e60:	str	r3, [r1, #4]
   18e64:	ldr	r1, [pc, #116]	; 18ee0 <getDeviceDirectory@@Base+0x1cc>
   18e68:	mov	r0, #7
   18e6c:	add	r1, pc, r1
   18e70:	bl	17b84 <logMessage@@Base>
   18e74:	ldr	r3, [pc, #104]	; 18ee4 <getDeviceDirectory@@Base+0x1d0>
   18e78:	add	r3, pc, r3
   18e7c:	ldr	r0, [r3, #4]
   18e80:	b	18d4c <getDeviceDirectory@@Base+0x38>
   18e84:	mov	r0, r5
   18e88:	bl	14928 <__strdup@plt>
   18e8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e90:	cmp	r0, #0
   18e94:	str	r0, [r3, #4]
   18e98:	bne	18ea4 <getDeviceDirectory@@Base+0x190>
   18e9c:	bl	17c90 <logMallocError@@Base>
   18ea0:	b	18e3c <getDeviceDirectory@@Base+0x128>
   18ea4:	mov	r2, r0
   18ea8:	mov	sp, r7
   18eac:	b	18e64 <getDeviceDirectory@@Base+0x150>
   18eb0:	bl	14a60 <__stack_chk_fail@plt>
   18eb4:	ldrdeq	fp, [r1], -r0
   18eb8:	andeq	r0, r0, ip, lsr #4
   18ebc:			; <UNDEFINED> instruction: 0x0001b5bc
   18ec0:	andeq	r7, r0, r4, lsr #26
   18ec4:	andeq	fp, r1, ip, lsl #2
   18ec8:	strdeq	r7, [r0], -ip
   18ecc:	andeq	r7, r0, r0, asr #19
   18ed0:	strdeq	r7, [r0], -r4
   18ed4:	andeq	fp, r1, r8, asr r5
   18ed8:	andeq	r7, r0, r4, lsr ip
   18edc:	muleq	r1, r8, r4
   18ee0:	andeq	r7, r0, r8, asr #24
   18ee4:	andeq	fp, r1, r8, ror r4

00018ee8 <getDevicePath@@Base>:
   18ee8:	push	{r4, lr}
   18eec:	mov	r4, r0
   18ef0:	bl	18d14 <getDeviceDirectory@@Base>
   18ef4:	mov	r1, r4
   18ef8:	pop	{r4, lr}
   18efc:	b	17f18 <makePath@@Base>

00018f00 <resolveDeviceName@@Base>:
   18f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f04:	sub	sp, sp, #20
   18f08:	ldr	r3, [r0]
   18f0c:	mov	r7, r1
   18f10:	cmp	r3, #0
   18f14:	str	r3, [sp, #12]
   18f18:	beq	19000 <resolveDeviceName@@Base+0x100>
   18f1c:	ldr	r9, [pc, #248]	; 1901c <resolveDeviceName@@Base+0x11c>
   18f20:	mov	r8, r0
   18f24:	ldr	sl, [pc, #244]	; 19020 <resolveDeviceName@@Base+0x120>
   18f28:	mov	r6, #0
   18f2c:	add	r9, pc, r9
   18f30:	ldr	r5, [sp, #12]
   18f34:	add	sl, pc, sl
   18f38:	b	18fa0 <resolveDeviceName@@Base+0xa0>
   18f3c:	bl	17b84 <logMessage@@Base>
   18f40:	mov	r0, r4
   18f44:	bl	180d0 <testPath@@Base>
   18f48:	cmp	r0, #0
   18f4c:	bne	18ff0 <resolveDeviceName@@Base+0xf0>
   18f50:	bl	14c4c <__errno_location@plt>
   18f54:	mov	fp, r0
   18f58:	ldr	r0, [r0]
   18f5c:	bl	14838 <strerror@plt>
   18f60:	mov	r3, r4
   18f64:	mov	r1, sl
   18f68:	mov	r2, r7
   18f6c:	str	r0, [sp]
   18f70:	mov	r0, #7
   18f74:	bl	17b84 <logMessage@@Base>
   18f78:	ldr	r3, [fp]
   18f7c:	mov	r0, r4
   18f80:	cmp	r3, #2
   18f84:	beq	18f90 <resolveDeviceName@@Base+0x90>
   18f88:	cmp	r6, #0
   18f8c:	moveq	r6, r5
   18f90:	bl	147fc <free@plt>
   18f94:	ldr	r5, [r8, #4]!
   18f98:	cmp	r5, #0
   18f9c:	beq	18fc0 <resolveDeviceName@@Base+0xc0>
   18fa0:	mov	r0, r5
   18fa4:	bl	18ee8 <getDevicePath@@Base>
   18fa8:	mov	r1, r9
   18fac:	mov	r2, r7
   18fb0:	subs	r4, r0, #0
   18fb4:	mov	r0, #7
   18fb8:	mov	r3, r4
   18fbc:	bne	18f3c <resolveDeviceName@@Base+0x3c>
   18fc0:	ldr	r3, [sp, #12]
   18fc4:	cmp	r6, #0
   18fc8:	moveq	r6, r3
   18fcc:	ldr	r1, [pc, #80]	; 19024 <resolveDeviceName@@Base+0x124>
   18fd0:	mov	r2, r7
   18fd4:	mov	r0, #6
   18fd8:	mov	r3, r6
   18fdc:	add	r1, pc, r1
   18fe0:	bl	17b84 <logMessage@@Base>
   18fe4:	mov	r0, r6
   18fe8:	add	sp, sp, #20
   18fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ff0:	mov	r0, r4
   18ff4:	mov	r6, r5
   18ff8:	bl	147fc <free@plt>
   18ffc:	b	18fcc <resolveDeviceName@@Base+0xcc>
   19000:	mov	r2, r1
   19004:	ldr	r1, [pc, #28]	; 19028 <resolveDeviceName@@Base+0x128>
   19008:	mov	r0, #3
   1900c:	mov	r6, r3
   19010:	add	r1, pc, r1
   19014:	bl	17b84 <logMessage@@Base>
   19018:	b	18fe4 <resolveDeviceName@@Base+0xe4>
   1901c:			; <UNDEFINED> instruction: 0x00007bbc
   19020:	andeq	r7, r0, ip, asr #23
   19024:	andeq	r7, r0, r4, asr #22
   19028:			; <UNDEFINED> instruction: 0x00007abc

0001902c <isQualifiedDevice@@Base>:
   1902c:	push	{r3, r4, r5, r6, r7, lr}
   19030:	mov	r7, r0
   19034:	ldr	r5, [r0]
   19038:	mov	r6, r1
   1903c:	ldrb	r4, [r5]
   19040:	cmp	r4, #0
   19044:	beq	19074 <isQualifiedDevice@@Base+0x48>
   19048:	cmp	r4, #58	; 0x3a
   1904c:	beq	190d0 <isQualifiedDevice@@Base+0xa4>
   19050:	mov	r2, r5
   19054:	mov	r4, #0
   19058:	b	19064 <isQualifiedDevice@@Base+0x38>
   1905c:	cmp	r3, #58	; 0x3a
   19060:	beq	19074 <isQualifiedDevice@@Base+0x48>
   19064:	ldrb	r3, [r2, #1]!
   19068:	add	r4, r4, #1
   1906c:	cmp	r3, #0
   19070:	bne	1905c <isQualifiedDevice@@Base+0x30>
   19074:	mov	r0, r5
   19078:	bl	14b80 <strlen@plt>
   1907c:	cmp	r0, r4
   19080:	beq	190c0 <isQualifiedDevice@@Base+0x94>
   19084:	cmp	r6, #0
   19088:	beq	190c8 <isQualifiedDevice@@Base+0x9c>
   1908c:	cmp	r4, #0
   19090:	beq	190c0 <isQualifiedDevice@@Base+0x94>
   19094:	mov	r1, r6
   19098:	mov	r0, r5
   1909c:	mov	r2, r4
   190a0:	bl	14ab4 <strncasecmp@plt>
   190a4:	cmp	r0, #0
   190a8:	bne	190c0 <isQualifiedDevice@@Base+0x94>
   190ac:	add	r4, r4, #1
   190b0:	mov	r0, #1
   190b4:	add	r5, r5, r4
   190b8:	str	r5, [r7]
   190bc:	pop	{r3, r4, r5, r6, r7, pc}
   190c0:	mov	r0, #0
   190c4:	pop	{r3, r4, r5, r6, r7, pc}
   190c8:	mov	r0, #1
   190cc:	pop	{r3, r4, r5, r6, r7, pc}
   190d0:	mov	r4, #0
   190d4:	b	19074 <isQualifiedDevice@@Base+0x48>

000190d8 <deallocateStrings@@Base>:
   190d8:	push	{r3, r4, r5, lr}
   190dc:	mov	r5, r0
   190e0:	ldr	r0, [r0]
   190e4:	cmp	r0, #0
   190e8:	movne	r4, r5
   190ec:	beq	19100 <deallocateStrings@@Base+0x28>
   190f0:	bl	147fc <free@plt>
   190f4:	ldr	r0, [r4, #4]!
   190f8:	cmp	r0, #0
   190fc:	bne	190f0 <deallocateStrings@@Base+0x18>
   19100:	mov	r0, r5
   19104:	pop	{r3, r4, r5, lr}
   19108:	b	147fc <free@plt>

0001910c <splitString@@Base>:
   1910c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19110:	cmp	r0, #0
   19114:	sub	sp, sp, #12
   19118:	mov	r8, r1
   1911c:	str	r0, [sp]
   19120:	str	r2, [sp, #4]
   19124:	beq	191d4 <splitString@@Base+0xc8>
   19128:	mov	r7, #0
   1912c:	mov	r9, r7
   19130:	ldr	r3, [sp]
   19134:	ldrb	r6, [r3]
   19138:	cmp	r6, #0
   1913c:	beq	191b4 <splitString@@Base+0xa8>
   19140:	mov	r5, r3
   19144:	mov	r6, #0
   19148:	b	1918c <splitString@@Base+0x80>
   1914c:	cmp	r7, #0
   19150:	add	r0, fp, #1
   19154:	beq	1917c <splitString@@Base+0x70>
   19158:	bl	14b74 <malloc@plt>
   1915c:	mov	r1, r5
   19160:	mov	r2, fp
   19164:	cmp	r0, #0
   19168:	mov	sl, r0
   1916c:	str	r0, [r7, r6, lsl #2]
   19170:	beq	191f4 <splitString@@Base+0xe8>
   19174:	bl	14b68 <memcpy@plt>
   19178:	strb	r9, [sl, fp]
   1917c:	cmp	r4, #0
   19180:	add	r5, r4, #1
   19184:	add	r6, r6, #1
   19188:	beq	191b4 <splitString@@Base+0xa8>
   1918c:	mov	r0, r5
   19190:	mov	r1, r8
   19194:	bl	14d3c <strchr@plt>
   19198:	subs	r4, r0, #0
   1919c:	rsb	fp, r5, r4
   191a0:	bne	1914c <splitString@@Base+0x40>
   191a4:	mov	r0, r5
   191a8:	bl	14b80 <strlen@plt>
   191ac:	mov	fp, r0
   191b0:	b	1914c <splitString@@Base+0x40>
   191b4:	cmp	r7, #0
   191b8:	bne	19204 <splitString@@Base+0xf8>
   191bc:	add	r0, r6, #1
   191c0:	lsl	r0, r0, #2
   191c4:	bl	14b74 <malloc@plt>
   191c8:	subs	r7, r0, #0
   191cc:	bne	19130 <splitString@@Base+0x24>
   191d0:	bl	17c90 <logMallocError@@Base>
   191d4:	ldr	r3, [sp, #4]
   191d8:	cmp	r3, #0
   191dc:	ldreq	r7, [sp, #4]
   191e0:	movne	r7, #0
   191e4:	strne	r7, [r3]
   191e8:	mov	r0, r7
   191ec:	add	sp, sp, #12
   191f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191f4:	bl	17c90 <logMallocError@@Base>
   191f8:	mov	r0, r7
   191fc:	bl	190d8 <deallocateStrings@@Base>
   19200:	b	191d4 <splitString@@Base+0xc8>
   19204:	ldr	r3, [sp, #4]
   19208:	cmp	r3, #0
   1920c:	mov	r3, #0
   19210:	str	r3, [r7, r6, lsl #2]
   19214:	ldrne	r3, [sp, #4]
   19218:	strne	r6, [r3]
   1921c:	b	191e8 <splitString@@Base+0xdc>

00019220 <joinStrings@@Base>:
   19220:	ldr	r3, [pc, #236]	; 19314 <joinStrings@@Base+0xf4>
   19224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19228:	mov	r7, r1
   1922c:	add	fp, sp, #32
   19230:	ldr	r1, [pc, #224]	; 19318 <joinStrings@@Base+0xf8>
   19234:	sub	sp, sp, #20
   19238:	add	r3, pc, r3
   1923c:	lsl	r9, r7, #2
   19240:	add	r2, r9, #10
   19244:	cmp	r7, #0
   19248:	ldr	r1, [r3, r1]
   1924c:	bic	r2, r2, #7
   19250:	sub	sp, sp, r2
   19254:	mov	r6, r0
   19258:	ldr	r3, [r1]
   1925c:	mov	r5, sp
   19260:	str	r1, [fp, #-48]	; 0xffffffd0
   19264:	str	r3, [fp, #-40]	; 0xffffffd8
   19268:	ble	192fc <joinStrings@@Base+0xdc>
   1926c:	mov	r4, #0
   19270:	mov	sl, r4
   19274:	ldr	r0, [r6, r4]
   19278:	bl	14b80 <strlen@plt>
   1927c:	str	r0, [r5, r4]
   19280:	add	r4, r4, #4
   19284:	cmp	r9, r4
   19288:	add	sl, sl, r0
   1928c:	bne	19274 <joinStrings@@Base+0x54>
   19290:	add	r0, sl, #1
   19294:	bl	14b74 <malloc@plt>
   19298:	subs	sl, r0, #0
   1929c:	beq	192d8 <joinStrings@@Base+0xb8>
   192a0:	mov	r4, #0
   192a4:	mov	r9, sl
   192a8:	mov	r8, r4
   192ac:	ldr	r2, [r5, r4]
   192b0:	mov	r0, r9
   192b4:	ldr	r1, [r6, r4]
   192b8:	add	r8, r8, #1
   192bc:	add	r9, r9, r2
   192c0:	bl	14b68 <memcpy@plt>
   192c4:	cmp	r8, r7
   192c8:	add	r4, r4, #4
   192cc:	bne	192ac <joinStrings@@Base+0x8c>
   192d0:	mov	r3, #0
   192d4:	strb	r3, [r9]
   192d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   192dc:	mov	r0, sl
   192e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   192e4:	ldr	r3, [r1]
   192e8:	cmp	r2, r3
   192ec:	bne	192f8 <joinStrings@@Base+0xd8>
   192f0:	sub	sp, fp, #32
   192f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192f8:	bl	14a60 <__stack_chk_fail@plt>
   192fc:	mov	r0, #1
   19300:	bl	14b74 <malloc@plt>
   19304:	subs	r9, r0, #0
   19308:	mov	sl, r9
   1930c:	bne	192d0 <joinStrings@@Base+0xb0>
   19310:	b	192d8 <joinStrings@@Base+0xb8>
   19314:	andeq	sl, r1, r0, asr #27
   19318:	andeq	r0, r0, ip, lsr #4

0001931c <rescaleInteger@@Base>:
   1931c:	push	{r4, r5, r6, lr}
   19320:	mov	r4, r1
   19324:	mov	r6, r0
   19328:	lsl	r1, r2, #1
   1932c:	mov	r0, r4
   19330:	mov	r5, r2
   19334:	bl	1fee0 <saveDataItem@@Base+0x254>
   19338:	mov	r1, r4
   1933c:	add	r0, r0, r6
   19340:	mul	r0, r5, r0
   19344:	bl	1fee0 <saveDataItem@@Base+0x254>
   19348:	pop	{r4, r5, r6, pc}

0001934c <isInteger@@Base>:
   1934c:	ldr	r3, [pc, #112]	; 193c4 <isInteger@@Base+0x78>
   19350:	ldr	ip, [pc, #112]	; 193c8 <isInteger@@Base+0x7c>
   19354:	add	r3, pc, r3
   19358:	push	{r4, r5, lr}
   1935c:	sub	sp, sp, #12
   19360:	ldr	r4, [r3, ip]
   19364:	mov	r5, r0
   19368:	ldrb	r2, [r1]
   1936c:	ldr	r3, [r4]
   19370:	cmp	r2, #0
   19374:	moveq	r0, r2
   19378:	str	r3, [sp, #4]
   1937c:	beq	193a8 <isInteger@@Base+0x5c>
   19380:	mov	r0, r1
   19384:	mov	r2, #0
   19388:	mov	r1, sp
   1938c:	bl	147f0 <strtol@plt>
   19390:	ldr	r3, [sp]
   19394:	ldrb	r3, [r3]
   19398:	cmp	r3, #0
   1939c:	movne	r0, #0
   193a0:	streq	r0, [r5]
   193a4:	moveq	r0, #1
   193a8:	ldr	r1, [sp, #4]
   193ac:	ldr	r3, [r4]
   193b0:	cmp	r1, r3
   193b4:	bne	193c0 <isInteger@@Base+0x74>
   193b8:	add	sp, sp, #12
   193bc:	pop	{r4, r5, pc}
   193c0:	bl	14a60 <__stack_chk_fail@plt>
   193c4:	andeq	sl, r1, r4, lsr #25
   193c8:	andeq	r0, r0, ip, lsr #4

000193cc <isUnsignedInteger@@Base>:
   193cc:	ldr	r3, [pc, #112]	; 19444 <isUnsignedInteger@@Base+0x78>
   193d0:	ldr	ip, [pc, #112]	; 19448 <isUnsignedInteger@@Base+0x7c>
   193d4:	add	r3, pc, r3
   193d8:	push	{r4, r5, lr}
   193dc:	sub	sp, sp, #12
   193e0:	ldr	r4, [r3, ip]
   193e4:	mov	r5, r0
   193e8:	ldrb	r2, [r1]
   193ec:	ldr	r3, [r4]
   193f0:	cmp	r2, #0
   193f4:	moveq	r0, r2
   193f8:	str	r3, [sp, #4]
   193fc:	beq	19428 <isUnsignedInteger@@Base+0x5c>
   19400:	mov	r0, r1
   19404:	mov	r2, #0
   19408:	mov	r1, sp
   1940c:	bl	148bc <strtoul@plt>
   19410:	ldr	r3, [sp]
   19414:	ldrb	r3, [r3]
   19418:	cmp	r3, #0
   1941c:	movne	r0, #0
   19420:	streq	r0, [r5]
   19424:	moveq	r0, #1
   19428:	ldr	r1, [sp, #4]
   1942c:	ldr	r3, [r4]
   19430:	cmp	r1, r3
   19434:	bne	19440 <isUnsignedInteger@@Base+0x74>
   19438:	add	sp, sp, #12
   1943c:	pop	{r4, r5, pc}
   19440:	bl	14a60 <__stack_chk_fail@plt>
   19444:	andeq	sl, r1, r4, lsr #24
   19448:	andeq	r0, r0, ip, lsr #4

0001944c <isLogLevel@@Base>:
   1944c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19450:	sub	sp, sp, #8
   19454:	ldr	r5, [pc, #220]	; 19538 <isLogLevel@@Base+0xec>
   19458:	mov	sl, r0
   1945c:	ldr	r3, [pc, #216]	; 1953c <isLogLevel@@Base+0xf0>
   19460:	mov	r6, r1
   19464:	add	r5, pc, r5
   19468:	ldrb	r2, [r1]
   1946c:	ldr	r9, [r5, r3]
   19470:	cmp	r2, #0
   19474:	moveq	r0, #1
   19478:	ldr	r3, [r9]
   1947c:	str	r3, [sp, #4]
   19480:	beq	194e4 <isLogLevel@@Base+0x98>
   19484:	mov	r0, r1
   19488:	bl	14b80 <strlen@plt>
   1948c:	ldr	r3, [pc, #172]	; 19540 <isLogLevel@@Base+0xf4>
   19490:	ldr	r3, [r5, r3]
   19494:	ldr	r7, [r3]
   19498:	cmp	r7, #0
   1949c:	mov	r8, r0
   194a0:	beq	194fc <isLogLevel@@Base+0xb0>
   194a4:	ldr	r3, [pc, #152]	; 19544 <isLogLevel@@Base+0xf8>
   194a8:	mov	r4, #0
   194ac:	ldr	r5, [r5, r3]
   194b0:	sub	r5, r5, #4
   194b4:	b	194c4 <isLogLevel@@Base+0x78>
   194b8:	add	r4, r4, #1
   194bc:	cmp	r4, r7
   194c0:	beq	194fc <isLogLevel@@Base+0xb0>
   194c4:	mov	r0, r6
   194c8:	ldr	r1, [r5, #4]!
   194cc:	mov	r2, r8
   194d0:	bl	14ab4 <strncasecmp@plt>
   194d4:	cmp	r0, #0
   194d8:	bne	194b8 <isLogLevel@@Base+0x6c>
   194dc:	mov	r0, #1
   194e0:	str	r4, [sl]
   194e4:	ldr	r2, [sp, #4]
   194e8:	ldr	r3, [r9]
   194ec:	cmp	r2, r3
   194f0:	bne	19534 <isLogLevel@@Base+0xe8>
   194f4:	add	sp, sp, #8
   194f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   194fc:	mov	r1, r6
   19500:	mov	r0, sp
   19504:	bl	1934c <isInteger@@Base>
   19508:	cmp	r0, #0
   1950c:	beq	1952c <isLogLevel@@Base+0xe0>
   19510:	ldr	r3, [sp]
   19514:	cmp	r3, #0
   19518:	blt	1952c <isLogLevel@@Base+0xe0>
   1951c:	cmp	r3, r7
   19520:	strcc	r3, [sl]
   19524:	movcc	r0, #1
   19528:	bcc	194e4 <isLogLevel@@Base+0x98>
   1952c:	mov	r0, #0
   19530:	b	194e4 <isLogLevel@@Base+0x98>
   19534:	bl	14a60 <__stack_chk_fail@plt>
   19538:	muleq	r1, r4, fp
   1953c:	andeq	r0, r0, ip, lsr #4
   19540:	andeq	r0, r0, ip, lsl r2
   19544:	andeq	r0, r0, r4, asr #4

00019548 <validateInteger@@Base>:
   19548:	ldr	ip, [pc, #164]	; 195f4 <validateInteger@@Base+0xac>
   1954c:	push	{r4, r5, r6, r7, r8, lr}
   19550:	add	ip, pc, ip
   19554:	ldr	r4, [pc, #156]	; 195f8 <validateInteger@@Base+0xb0>
   19558:	sub	sp, sp, #8
   1955c:	ldrb	r5, [r1]
   19560:	mov	r7, r0
   19564:	mov	r6, r2
   19568:	mov	r8, r3
   1956c:	ldr	r4, [ip, r4]
   19570:	cmp	r5, #0
   19574:	moveq	r0, #1
   19578:	ldr	ip, [r4]
   1957c:	str	ip, [sp, #4]
   19580:	bne	1959c <validateInteger@@Base+0x54>
   19584:	ldr	r2, [sp, #4]
   19588:	ldr	r3, [r4]
   1958c:	cmp	r2, r3
   19590:	bne	195f0 <validateInteger@@Base+0xa8>
   19594:	add	sp, sp, #8
   19598:	pop	{r4, r5, r6, r7, r8, pc}
   1959c:	mov	r0, sp
   195a0:	bl	1934c <isInteger@@Base>
   195a4:	cmp	r0, #0
   195a8:	beq	195dc <validateInteger@@Base+0x94>
   195ac:	cmp	r6, #0
   195b0:	ldreq	r3, [sp]
   195b4:	beq	195c8 <validateInteger@@Base+0x80>
   195b8:	ldr	r2, [r6]
   195bc:	ldr	r3, [sp]
   195c0:	cmp	r2, r3
   195c4:	bgt	195dc <validateInteger@@Base+0x94>
   195c8:	cmp	r8, #0
   195cc:	beq	195e4 <validateInteger@@Base+0x9c>
   195d0:	ldr	r2, [r8]
   195d4:	cmp	r2, r3
   195d8:	bge	195e4 <validateInteger@@Base+0x9c>
   195dc:	mov	r0, #0
   195e0:	b	19584 <validateInteger@@Base+0x3c>
   195e4:	str	r3, [r7]
   195e8:	mov	r0, #1
   195ec:	b	19584 <validateInteger@@Base+0x3c>
   195f0:	bl	14a60 <__stack_chk_fail@plt>
   195f4:	andeq	sl, r1, r8, lsr #21
   195f8:	andeq	r0, r0, ip, lsr #4

000195fc <validateChoice@@Base>:
   195fc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19600:	mov	r9, r0
   19604:	mov	r0, r1
   19608:	mov	r6, r1
   1960c:	mov	r5, r2
   19610:	bl	14b80 <strlen@plt>
   19614:	mov	r7, #0
   19618:	str	r7, [r9]
   1961c:	subs	r8, r0, #0
   19620:	beq	1966c <validateChoice@@Base+0x70>
   19624:	ldr	r1, [r5]
   19628:	cmp	r1, r7
   1962c:	beq	19674 <validateChoice@@Base+0x78>
   19630:	mov	r4, r7
   19634:	b	19648 <validateChoice@@Base+0x4c>
   19638:	ldr	r1, [r5, #4]!
   1963c:	mov	r7, r4
   19640:	cmp	r1, #0
   19644:	beq	19674 <validateChoice@@Base+0x78>
   19648:	mov	r0, r6
   1964c:	mov	r2, r8
   19650:	bl	14ab4 <strncasecmp@plt>
   19654:	add	r4, r4, #1
   19658:	cmp	r0, #0
   1965c:	bne	19638 <validateChoice@@Base+0x3c>
   19660:	str	r7, [r9]
   19664:	mov	r0, #1
   19668:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1966c:	mov	r0, #1
   19670:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19674:	mov	r0, r1
   19678:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001967c <validateFlag@@Base>:
   1967c:	ldr	ip, [pc, #76]	; 196d0 <validateFlag@@Base+0x54>
   19680:	push	{r4, lr}
   19684:	add	ip, pc, ip
   19688:	ldr	r4, [pc, #68]	; 196d4 <validateFlag@@Base+0x58>
   1968c:	sub	sp, sp, #16
   19690:	mov	lr, #0
   19694:	ldr	r4, [ip, r4]
   19698:	str	r3, [sp]
   1969c:	str	r2, [sp, #4]
   196a0:	mov	r2, sp
   196a4:	ldr	r3, [r4]
   196a8:	str	lr, [sp, #8]
   196ac:	str	r3, [sp, #12]
   196b0:	bl	195fc <validateChoice@@Base>
   196b4:	ldr	r2, [sp, #12]
   196b8:	ldr	r3, [r4]
   196bc:	cmp	r2, r3
   196c0:	bne	196cc <validateFlag@@Base+0x50>
   196c4:	add	sp, sp, #16
   196c8:	pop	{r4, pc}
   196cc:	bl	14a60 <__stack_chk_fail@plt>
   196d0:	andeq	sl, r1, r4, ror r9
   196d4:	andeq	r0, r0, ip, lsr #4

000196d8 <validateOnOff@@Base>:
   196d8:	ldr	r2, [pc, #12]	; 196ec <validateOnOff@@Base+0x14>
   196dc:	ldr	r3, [pc, #12]	; 196f0 <validateOnOff@@Base+0x18>
   196e0:	add	r2, pc, r2
   196e4:	add	r3, pc, r3
   196e8:	b	1967c <validateFlag@@Base>
   196ec:	andeq	r8, r0, ip, asr lr
   196f0:	andeq	r6, r0, r0, ror pc

000196f4 <validateYesNo@@Base>:
   196f4:	ldr	r2, [pc, #12]	; 19708 <validateYesNo@@Base+0x14>
   196f8:	ldr	r3, [pc, #12]	; 1970c <validateYesNo@@Base+0x18>
   196fc:	add	r2, pc, r2
   19700:	add	r3, pc, r3
   19704:	b	1967c <validateFlag@@Base>
   19708:	andeq	r7, r0, r4, asr #8
   1970c:	andeq	r7, r0, r4, asr #8

00019710 <isFloat@@Base>:
   19710:	ldr	r3, [pc, #112]	; 19788 <isFloat@@Base+0x78>
   19714:	ldr	ip, [pc, #112]	; 1978c <isFloat@@Base+0x7c>
   19718:	add	r3, pc, r3
   1971c:	push	{r4, r5, lr}
   19720:	sub	sp, sp, #12
   19724:	ldr	r4, [r3, ip]
   19728:	mov	r5, r0
   1972c:	ldrb	r2, [r1]
   19730:	ldr	r3, [r4]
   19734:	cmp	r2, #0
   19738:	moveq	r0, r2
   1973c:	str	r3, [sp, #4]
   19740:	beq	1976c <isFloat@@Base+0x5c>
   19744:	mov	r0, r1
   19748:	mov	r1, sp
   1974c:	bl	14a00 <strtod@plt>
   19750:	ldr	r3, [sp]
   19754:	ldrb	r3, [r3]
   19758:	cmp	r3, #0
   1975c:	moveq	r0, #1
   19760:	movne	r0, #0
   19764:	vcvteq.f32.f64	s0, d0
   19768:	vstreq	s0, [r5]
   1976c:	ldr	r1, [sp, #4]
   19770:	ldr	r3, [r4]
   19774:	cmp	r1, r3
   19778:	bne	19784 <isFloat@@Base+0x74>
   1977c:	add	sp, sp, #12
   19780:	pop	{r4, r5, pc}
   19784:	bl	14a60 <__stack_chk_fail@plt>
   19788:	andeq	sl, r1, r0, ror #17
   1978c:	andeq	r0, r0, ip, lsr #4

00019790 <validateFloat@@Base>:
   19790:	ldr	ip, [pc, #168]	; 19840 <validateFloat@@Base+0xb0>
   19794:	push	{r4, r5, r6, r7, r8, lr}
   19798:	add	ip, pc, ip
   1979c:	ldr	r4, [pc, #160]	; 19844 <validateFloat@@Base+0xb4>
   197a0:	sub	sp, sp, #8
   197a4:	ldrb	r5, [r1]
   197a8:	mov	r7, r0
   197ac:	mov	r6, r2
   197b0:	mov	r8, r3
   197b4:	ldr	r4, [ip, r4]
   197b8:	cmp	r5, #0
   197bc:	moveq	r0, #1
   197c0:	ldr	ip, [r4]
   197c4:	str	ip, [sp, #4]
   197c8:	bne	197e4 <validateFloat@@Base+0x54>
   197cc:	ldr	r2, [sp, #4]
   197d0:	ldr	r3, [r4]
   197d4:	cmp	r2, r3
   197d8:	bne	1983c <validateFloat@@Base+0xac>
   197dc:	add	sp, sp, #8
   197e0:	pop	{r4, r5, r6, r7, r8, pc}
   197e4:	mov	r0, sp
   197e8:	bl	19710 <isFloat@@Base>
   197ec:	cmp	r0, #0
   197f0:	beq	19828 <validateFloat@@Base+0x98>
   197f4:	cmp	r6, #0
   197f8:	vldr	s15, [sp]
   197fc:	beq	19810 <validateFloat@@Base+0x80>
   19800:	vldr	s14, [r6]
   19804:	vcmpe.f32	s14, s15
   19808:	vmrs	APSR_nzcv, fpscr
   1980c:	bgt	19828 <validateFloat@@Base+0x98>
   19810:	cmp	r8, #0
   19814:	beq	19830 <validateFloat@@Base+0xa0>
   19818:	vldr	s14, [r8]
   1981c:	vcmpe.f32	s14, s15
   19820:	vmrs	APSR_nzcv, fpscr
   19824:	bpl	19830 <validateFloat@@Base+0xa0>
   19828:	mov	r0, #0
   1982c:	b	197cc <validateFloat@@Base+0x3c>
   19830:	vstr	s15, [r7]
   19834:	mov	r0, #1
   19838:	b	197cc <validateFloat@@Base+0x3c>
   1983c:	bl	14a60 <__stack_chk_fail@plt>
   19840:	andeq	sl, r1, r0, ror #16
   19844:	andeq	r0, r0, ip, lsr #4

00019848 <getParameters@@Base>:
   19848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1984c:	subs	r8, r0, #0
   19850:	sub	sp, sp, #44	; 0x2c
   19854:	mov	r7, r2
   19858:	str	r1, [sp, #8]
   1985c:	beq	19b78 <getParameters@@Base+0x330>
   19860:	ldr	r4, [r8]
   19864:	cmp	r4, #0
   19868:	beq	19b84 <getParameters@@Base+0x33c>
   1986c:	mov	r3, r8
   19870:	mov	r4, #0
   19874:	ldr	r5, [r3, #4]!
   19878:	add	r4, r4, #1
   1987c:	cmp	r5, #0
   19880:	bne	19874 <getParameters@@Base+0x2c>
   19884:	add	r0, r4, #1
   19888:	lsl	r0, r0, #2
   1988c:	bl	14b74 <malloc@plt>
   19890:	cmp	r0, #0
   19894:	str	r0, [sp, #4]
   19898:	beq	19bb8 <getParameters@@Base+0x370>
   1989c:	cmp	r4, #0
   198a0:	beq	19b98 <getParameters@@Base+0x350>
   198a4:	sub	r6, r0, #4
   198a8:	b	198b8 <getParameters@@Base+0x70>
   198ac:	add	r5, r5, #1
   198b0:	cmp	r4, r5
   198b4:	beq	198f0 <getParameters@@Base+0xa8>
   198b8:	mov	r0, #1
   198bc:	mov	r1, r0
   198c0:	bl	14b08 <calloc@plt>
   198c4:	cmp	r0, #0
   198c8:	str	r0, [r6, #4]!
   198cc:	bne	198ac <getParameters@@Base+0x64>
   198d0:	bl	17c90 <logMallocError@@Base>
   198d4:	cmp	r4, r5
   198d8:	beq	198f0 <getParameters@@Base+0xa8>
   198dc:	ldr	r0, [sp, #4]
   198e0:	bl	190d8 <deallocateStrings@@Base>
   198e4:	mov	r0, #0
   198e8:	add	sp, sp, #44	; 0x2c
   198ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198f0:	lsl	r5, r5, #2
   198f4:	ldr	r2, [sp, #4]
   198f8:	cmp	r7, #0
   198fc:	mov	r3, #0
   19900:	str	r3, [r2, r5]
   19904:	beq	19914 <getParameters@@Base+0xcc>
   19908:	ldrb	r3, [r7]
   1990c:	cmp	r3, #0
   19910:	bne	19920 <getParameters@@Base+0xd8>
   19914:	ldr	r0, [sp, #4]
   19918:	add	sp, sp, #44	; 0x2c
   1991c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19920:	mov	r0, r7
   19924:	bl	14928 <__strdup@plt>
   19928:	cmp	r0, #0
   1992c:	str	r0, [sp, #20]
   19930:	beq	19bb0 <getParameters@@Base+0x368>
   19934:	ldr	r3, [pc, #648]	; 19bc4 <getParameters@@Base+0x37c>
   19938:	mov	r4, r0
   1993c:	ldr	r2, [pc, #644]	; 19bc8 <getParameters@@Base+0x380>
   19940:	add	r3, pc, r3
   19944:	str	r3, [sp, #32]
   19948:	add	r2, pc, r2
   1994c:	ldr	r3, [pc, #632]	; 19bcc <getParameters@@Base+0x384>
   19950:	str	r2, [sp, #36]	; 0x24
   19954:	ldr	r2, [pc, #628]	; 19bd0 <getParameters@@Base+0x388>
   19958:	add	r3, pc, r3
   1995c:	str	r3, [sp, #24]
   19960:	add	r2, pc, r2
   19964:	ldr	r3, [pc, #616]	; 19bd4 <getParameters@@Base+0x38c>
   19968:	str	r2, [sp, #28]
   1996c:	ldr	r2, [pc, #612]	; 19bd8 <getParameters@@Base+0x390>
   19970:	add	r3, pc, r3
   19974:	str	r3, [sp, #12]
   19978:	add	r2, pc, r2
   1997c:	str	r2, [sp, #16]
   19980:	b	199a0 <getParameters@@Base+0x158>
   19984:	ldr	r0, [sp, #8]
   19988:	bl	14b80 <strlen@plt>
   1998c:	cmp	r9, r0
   19990:	beq	19a68 <getParameters@@Base+0x220>
   19994:	cmp	r5, #0
   19998:	bne	19a5c <getParameters@@Base+0x214>
   1999c:	add	r4, r6, #1
   199a0:	mov	r0, r4
   199a4:	mov	r1, #44	; 0x2c
   199a8:	bl	14d3c <strchr@plt>
   199ac:	rsbs	r5, r0, #1
   199b0:	mov	r6, r0
   199b4:	movcc	r5, #0
   199b8:	cmp	r5, #0
   199bc:	strbeq	r5, [r0]
   199c0:	ldrb	r3, [r4]
   199c4:	cmp	r3, #0
   199c8:	beq	19994 <getParameters@@Base+0x14c>
   199cc:	mov	r0, r4
   199d0:	mov	r1, #61	; 0x3d
   199d4:	bl	14d3c <strchr@plt>
   199d8:	subs	r3, r0, #0
   199dc:	str	r3, [sp]
   199e0:	beq	19b4c <getParameters@@Base+0x304>
   199e4:	ldr	r3, [sp]
   199e8:	cmp	r4, r3
   199ec:	beq	19a30 <getParameters@@Base+0x1e8>
   199f0:	ldr	r2, [sp, #8]
   199f4:	ldr	r3, [sp]
   199f8:	cmp	r2, #0
   199fc:	rsb	r7, r4, r3
   19a00:	beq	19a84 <getParameters@@Base+0x23c>
   19a04:	mov	r0, r4
   19a08:	mov	r1, #58	; 0x3a
   19a0c:	mov	r2, r7
   19a10:	bl	14c64 <memchr@plt>
   19a14:	cmp	r0, #0
   19a18:	beq	19a84 <getParameters@@Base+0x23c>
   19a1c:	subs	r9, r0, r4
   19a20:	beq	19b24 <getParameters@@Base+0x2dc>
   19a24:	add	sl, r9, #1
   19a28:	subs	r7, r7, sl
   19a2c:	bne	19984 <getParameters@@Base+0x13c>
   19a30:	ldr	r1, [sp, #12]
   19a34:	mov	r2, #5
   19a38:	mov	r0, #0
   19a3c:	bl	14a90 <dcgettext@plt>
   19a40:	mov	r3, r4
   19a44:	ldr	r1, [sp, #16]
   19a48:	mov	r2, r0
   19a4c:	mov	r0, #3
   19a50:	bl	17b84 <logMessage@@Base>
   19a54:	cmp	r5, #0
   19a58:	beq	1999c <getParameters@@Base+0x154>
   19a5c:	ldr	r0, [sp, #20]
   19a60:	bl	147fc <free@plt>
   19a64:	b	19914 <getParameters@@Base+0xcc>
   19a68:	mov	r0, r4
   19a6c:	mov	r2, r9
   19a70:	ldr	r1, [sp, #8]
   19a74:	bl	14ca0 <memcmp@plt>
   19a78:	cmp	r0, #0
   19a7c:	addeq	r4, r4, sl
   19a80:	bne	19994 <getParameters@@Base+0x14c>
   19a84:	ldr	r1, [r8]
   19a88:	cmp	r1, #0
   19a8c:	beq	19afc <getParameters@@Base+0x2b4>
   19a90:	add	fp, r8, #4
   19a94:	mov	sl, r8
   19a98:	mov	r9, #0
   19a9c:	b	19ab4 <getParameters@@Base+0x26c>
   19aa0:	rsb	r9, r8, fp
   19aa4:	mov	sl, fp
   19aa8:	ldr	r1, [fp], #4
   19aac:	cmp	r1, #0
   19ab0:	beq	19afc <getParameters@@Base+0x2b4>
   19ab4:	mov	r0, r4
   19ab8:	mov	r2, r7
   19abc:	bl	14ab4 <strncasecmp@plt>
   19ac0:	cmp	r0, #0
   19ac4:	bne	19aa0 <getParameters@@Base+0x258>
   19ac8:	ldr	r3, [sp]
   19acc:	add	r0, r3, #1
   19ad0:	bl	14928 <__strdup@plt>
   19ad4:	subs	r7, r0, #0
   19ad8:	beq	19ba0 <getParameters@@Base+0x358>
   19adc:	ldr	r2, [sp, #4]
   19ae0:	ldr	r0, [r2, r9]
   19ae4:	bl	147fc <free@plt>
   19ae8:	ldr	r3, [sp, #4]
   19aec:	str	r7, [r3, r9]
   19af0:	ldr	r3, [sl]
   19af4:	cmp	r3, #0
   19af8:	bne	19994 <getParameters@@Base+0x14c>
   19afc:	ldr	r1, [sp, #32]
   19b00:	mov	r2, #5
   19b04:	mov	r0, #0
   19b08:	bl	14a90 <dcgettext@plt>
   19b0c:	mov	r3, r4
   19b10:	ldr	r1, [sp, #36]	; 0x24
   19b14:	mov	r2, r0
   19b18:	mov	r0, #3
   19b1c:	bl	17b84 <logMessage@@Base>
   19b20:	b	19994 <getParameters@@Base+0x14c>
   19b24:	ldr	r1, [sp, #24]
   19b28:	mov	r0, r9
   19b2c:	mov	r2, #5
   19b30:	bl	14a90 <dcgettext@plt>
   19b34:	mov	r3, r4
   19b38:	ldr	r1, [sp, #28]
   19b3c:	mov	r2, r0
   19b40:	mov	r0, #3
   19b44:	bl	17b84 <logMessage@@Base>
   19b48:	b	19994 <getParameters@@Base+0x14c>
   19b4c:	ldr	r1, [pc, #136]	; 19bdc <getParameters@@Base+0x394>
   19b50:	mov	r2, #5
   19b54:	add	r1, pc, r1
   19b58:	bl	14a90 <dcgettext@plt>
   19b5c:	ldr	r1, [pc, #124]	; 19be0 <getParameters@@Base+0x398>
   19b60:	mov	r3, r4
   19b64:	add	r1, pc, r1
   19b68:	mov	r2, r0
   19b6c:	mov	r0, #3
   19b70:	bl	17b84 <logMessage@@Base>
   19b74:	b	19994 <getParameters@@Base+0x14c>
   19b78:	ldr	r8, [pc, #100]	; 19be4 <getParameters@@Base+0x39c>
   19b7c:	add	r8, pc, r8
   19b80:	b	19860 <getParameters@@Base+0x18>
   19b84:	mov	r0, #4
   19b88:	bl	14b74 <malloc@plt>
   19b8c:	cmp	r0, #0
   19b90:	str	r0, [sp, #4]
   19b94:	beq	19bb8 <getParameters@@Base+0x370>
   19b98:	mov	r5, r4
   19b9c:	b	198f4 <getParameters@@Base+0xac>
   19ba0:	bl	17c90 <logMallocError@@Base>
   19ba4:	ldr	r0, [sp, #20]
   19ba8:	bl	147fc <free@plt>
   19bac:	b	198dc <getParameters@@Base+0x94>
   19bb0:	bl	17c90 <logMallocError@@Base>
   19bb4:	b	198dc <getParameters@@Base+0x94>
   19bb8:	bl	17c90 <logMallocError@@Base>
   19bbc:	mov	r0, #0
   19bc0:	b	19918 <getParameters@@Base+0xd0>
   19bc4:	andeq	r7, r0, r4, asr r2
   19bc8:	andeq	r7, r0, ip, lsr #9
   19bcc:	andeq	r7, r0, r0, lsr #4
   19bd0:	muleq	r0, r4, r4
   19bd4:	strdeq	r7, [r0], -r0
   19bd8:	andeq	r7, r0, ip, ror r4
   19bdc:	strdeq	r6, [r0], -r4
   19be0:	muleq	r0, r0, r2
   19be4:	andeq	r6, r0, r0, asr #31

00019be8 <logParameters@@Base>:
   19be8:	cmp	r0, #0
   19bec:	cmpne	r1, #0
   19bf0:	push	{r4, r5, r6, r7, lr}
   19bf4:	mov	r4, r1
   19bf8:	sub	sp, sp, #12
   19bfc:	mov	r6, r2
   19c00:	beq	19c40 <logParameters@@Base+0x58>
   19c04:	ldr	r3, [r0]
   19c08:	cmp	r3, #0
   19c0c:	beq	19c40 <logParameters@@Base+0x58>
   19c10:	ldr	r7, [pc, #48]	; 19c48 <logParameters@@Base+0x60>
   19c14:	mov	r5, r0
   19c18:	add	r7, pc, r7
   19c1c:	ldr	ip, [r4], #4
   19c20:	mov	r0, #6
   19c24:	mov	r1, r7
   19c28:	mov	r2, r6
   19c2c:	str	ip, [sp]
   19c30:	bl	17b84 <logMessage@@Base>
   19c34:	ldr	r3, [r5, #4]!
   19c38:	cmp	r3, #0
   19c3c:	bne	19c1c <logParameters@@Base+0x34>
   19c40:	add	sp, sp, #12
   19c44:	pop	{r4, r5, r6, r7, pc}
   19c48:	muleq	r0, r4, pc	; <UNPREDICTABLE>

00019c4c <getCurrentTime@@Base>:
   19c4c:	ldr	r3, [pc, #84]	; 19ca8 <getCurrentTime@@Base+0x5c>
   19c50:	ldr	r2, [pc, #84]	; 19cac <getCurrentTime@@Base+0x60>
   19c54:	add	r3, pc, r3
   19c58:	push	{r4, r5, lr}
   19c5c:	sub	sp, sp, #20
   19c60:	ldr	r4, [r3, r2]
   19c64:	mov	r5, r0
   19c68:	add	r1, sp, #4
   19c6c:	mov	r0, #0
   19c70:	ldr	r3, [r4]
   19c74:	str	r3, [sp, #12]
   19c78:	bl	149d0 <clock_gettime@plt>
   19c7c:	ldr	r3, [sp, #4]
   19c80:	ldr	r2, [sp, #12]
   19c84:	ldr	r1, [sp, #8]
   19c88:	str	r3, [r5]
   19c8c:	ldr	r3, [r4]
   19c90:	str	r1, [r5, #4]
   19c94:	cmp	r2, r3
   19c98:	bne	19ca4 <getCurrentTime@@Base+0x58>
   19c9c:	add	sp, sp, #20
   19ca0:	pop	{r4, r5, pc}
   19ca4:	bl	14a60 <__stack_chk_fail@plt>
   19ca8:	andeq	sl, r1, r4, lsr #7
   19cac:	andeq	r0, r0, ip, lsr #4

00019cb0 <makeTimeValue@@Base>:
   19cb0:	ldr	r2, [pc, #164]	; 19d5c <makeTimeValue@@Base+0xac>
   19cb4:	mov	r3, #0
   19cb8:	push	{r4, r5, r6, r7, r8, r9, lr}
   19cbc:	add	r2, pc, r2
   19cc0:	ldr	r4, [pc, #152]	; 19d60 <makeTimeValue@@Base+0xb0>
   19cc4:	mov	r5, r0
   19cc8:	ldr	lr, [r1, #8]
   19ccc:	sub	sp, sp, #52	; 0x34
   19cd0:	mvn	ip, #0
   19cd4:	ldr	r4, [r2, r4]
   19cd8:	mov	r0, sp
   19cdc:	str	lr, [r5, #4]
   19ce0:	ldrh	r9, [r1]
   19ce4:	ldrb	r8, [r1, #6]
   19ce8:	ldrb	r7, [r1, #5]
   19cec:	sub	r9, r9, #1888	; 0x760
   19cf0:	ldrb	r6, [r1, #4]
   19cf4:	sub	r9, r9, #12
   19cf8:	ldrb	lr, [r1, #2]
   19cfc:	ldr	r2, [r4]
   19d00:	ldrb	r1, [r1, #3]
   19d04:	str	r3, [sp, #24]
   19d08:	add	r1, r1, #1
   19d0c:	str	r2, [sp, #44]	; 0x2c
   19d10:	str	r3, [sp, #28]
   19d14:	str	r3, [sp, #36]	; 0x24
   19d18:	str	r3, [sp, #40]	; 0x28
   19d1c:	str	r9, [sp, #20]
   19d20:	str	r8, [sp]
   19d24:	str	r1, [sp, #12]
   19d28:	str	r7, [sp, #4]
   19d2c:	str	r6, [sp, #8]
   19d30:	str	lr, [sp, #16]
   19d34:	str	ip, [sp, #32]
   19d38:	bl	14cc4 <mktime@plt>
   19d3c:	ldr	r3, [sp, #44]	; 0x2c
   19d40:	str	r0, [r5]
   19d44:	ldr	r2, [r4]
   19d48:	cmp	r3, r2
   19d4c:	bne	19d58 <makeTimeValue@@Base+0xa8>
   19d50:	add	sp, sp, #52	; 0x34
   19d54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19d58:	bl	14a60 <__stack_chk_fail@plt>
   19d5c:	andeq	sl, r1, ip, lsr r3
   19d60:	andeq	r0, r0, ip, lsr #4

00019d64 <expandTimeValue@@Base>:
   19d64:	ldr	r2, [pc, #148]	; 19e00 <expandTimeValue@@Base+0x9c>
   19d68:	ldr	ip, [pc, #148]	; 19e04 <expandTimeValue@@Base+0xa0>
   19d6c:	add	r2, pc, r2
   19d70:	push	{r4, r5, r6, lr}
   19d74:	mov	r6, r0
   19d78:	sub	sp, sp, #56	; 0x38
   19d7c:	ldr	r5, [r2, ip]
   19d80:	ldr	r3, [r6]
   19d84:	add	r0, sp, #56	; 0x38
   19d88:	mov	r4, r1
   19d8c:	add	r1, sp, #8
   19d90:	str	r3, [r0, #-52]!	; 0xffffffcc
   19d94:	ldr	r3, [r5]
   19d98:	str	r3, [sp, #52]	; 0x34
   19d9c:	bl	14760 <localtime_r@plt>
   19da0:	ldr	r1, [sp, #24]
   19da4:	ldr	r3, [sp, #28]
   19da8:	ldr	r2, [sp, #20]
   19dac:	add	r3, r3, #1888	; 0x760
   19db0:	ldr	r0, [r6, #4]
   19db4:	add	r3, r3, #12
   19db8:	strb	r1, [r4, #2]
   19dbc:	sub	r2, r2, #1
   19dc0:	ldr	ip, [sp, #52]	; 0x34
   19dc4:	strb	r2, [r4, #3]
   19dc8:	strh	r3, [r4]
   19dcc:	ldr	r3, [r5]
   19dd0:	ldr	r1, [sp, #16]
   19dd4:	ldr	r2, [sp, #12]
   19dd8:	cmp	ip, r3
   19ddc:	ldr	r3, [sp, #8]
   19de0:	str	r0, [r4, #8]
   19de4:	strb	r1, [r4, #4]
   19de8:	strb	r2, [r4, #5]
   19dec:	strb	r3, [r4, #6]
   19df0:	bne	19dfc <expandTimeValue@@Base+0x98>
   19df4:	add	sp, sp, #56	; 0x38
   19df8:	pop	{r4, r5, r6, pc}
   19dfc:	bl	14a60 <__stack_chk_fail@plt>
   19e00:	andeq	sl, r1, ip, lsl #5
   19e04:	andeq	r0, r0, ip, lsr #4

00019e08 <formatSeconds@@Base>:
   19e08:	push	{r4, r5, r6, r7, r8, lr}
   19e0c:	sub	sp, sp, #56	; 0x38
   19e10:	ldr	lr, [pc, #100]	; 19e7c <formatSeconds@@Base+0x74>
   19e14:	add	ip, sp, #56	; 0x38
   19e18:	ldr	r4, [pc, #96]	; 19e80 <formatSeconds@@Base+0x78>
   19e1c:	add	r5, sp, #8
   19e20:	add	lr, pc, lr
   19e24:	mov	r7, r0
   19e28:	mov	r6, r1
   19e2c:	mov	r8, r2
   19e30:	ldr	r4, [lr, r4]
   19e34:	mov	r1, r5
   19e38:	str	r3, [ip, #-52]!	; 0xffffffcc
   19e3c:	mov	r0, ip
   19e40:	ldr	r3, [r4]
   19e44:	str	r3, [sp, #52]	; 0x34
   19e48:	bl	14760 <localtime_r@plt>
   19e4c:	mov	r2, r8
   19e50:	mov	r3, r5
   19e54:	mov	r0, r7
   19e58:	mov	r1, r6
   19e5c:	bl	148d4 <strftime@plt>
   19e60:	ldr	r2, [sp, #52]	; 0x34
   19e64:	ldr	r3, [r4]
   19e68:	cmp	r2, r3
   19e6c:	bne	19e78 <formatSeconds@@Base+0x70>
   19e70:	add	sp, sp, #56	; 0x38
   19e74:	pop	{r4, r5, r6, r7, r8, pc}
   19e78:	bl	14a60 <__stack_chk_fail@plt>
   19e7c:	ldrdeq	sl, [r1], -r8
   19e80:	andeq	r0, r0, ip, lsr #4

00019e84 <normalizeTimeValue@@Base>:
   19e84:	ldr	r3, [r0, #4]
   19e88:	cmp	r3, #0
   19e8c:	bge	19eb8 <normalizeTimeValue@@Base+0x34>
   19e90:	ldr	r2, [r0]
   19e94:	sub	r2, r2, #1
   19e98:	add	r3, r3, #998244352	; 0x3b800000
   19e9c:	mov	r1, r2
   19ea0:	add	r3, r3, #1753088	; 0x1ac000
   19ea4:	sub	r2, r2, #1
   19ea8:	add	r3, r3, #2560	; 0xa00
   19eac:	cmp	r3, #0
   19eb0:	blt	19e98 <normalizeTimeValue@@Base+0x14>
   19eb4:	stm	r0, {r1, r3}
   19eb8:	movw	r1, #51711	; 0xc9ff
   19ebc:	movt	r1, #15258	; 0x3b9a
   19ec0:	cmp	r3, r1
   19ec4:	bxle	lr
   19ec8:	mov	r2, #13824	; 0x3600
   19ecc:	movt	r2, #50277	; 0xc465
   19ed0:	add	r2, r3, r2
   19ed4:	ldr	ip, [r0]
   19ed8:	cmp	r2, r1
   19edc:	add	r1, ip, #1
   19ee0:	addgt	ip, ip, #2
   19ee4:	movgt	r2, #27648	; 0x6c00
   19ee8:	movtgt	r2, #35018	; 0x88ca
   19eec:	addgt	r2, r3, r2
   19ef0:	movle	ip, r1
   19ef4:	str	r2, [r0, #4]
   19ef8:	str	ip, [r0]
   19efc:	bx	lr

00019f00 <adjustTimeValue@@Base>:
   19f00:	movw	r3, #19923	; 0x4dd3
   19f04:	movt	r3, #4194	; 0x1062
   19f08:	ldr	ip, [pc, #148]	; 19fa4 <adjustTimeValue@@Base+0xa4>
   19f0c:	smull	r2, r3, r3, r1
   19f10:	add	ip, pc, ip
   19f14:	push	{r4, r5, r6, lr}
   19f18:	asr	r6, r1, #31
   19f1c:	ldr	r5, [pc, #132]	; 19fa8 <adjustTimeValue@@Base+0xa8>
   19f20:	sub	sp, sp, #16
   19f24:	mov	lr, #1000	; 0x3e8
   19f28:	movw	r2, #16960	; 0x4240
   19f2c:	rsb	r3, r6, r3, asr #6
   19f30:	movt	r2, #15
   19f34:	ldr	r5, [ip, r5]
   19f38:	mov	r4, r0
   19f3c:	str	r3, [sp, #4]
   19f40:	mls	r3, lr, r3, r1
   19f44:	ldr	r1, [r5]
   19f48:	str	r1, [sp, #12]
   19f4c:	mul	r2, r2, r3
   19f50:	str	r2, [sp, #8]
   19f54:	bl	19e84 <normalizeTimeValue@@Base>
   19f58:	add	r0, sp, #4
   19f5c:	bl	19e84 <normalizeTimeValue@@Base>
   19f60:	ldr	r2, [r4, #4]
   19f64:	ldr	ip, [r4]
   19f68:	mov	r0, r4
   19f6c:	ldr	r1, [sp, #4]
   19f70:	ldr	r3, [sp, #8]
   19f74:	add	r1, ip, r1
   19f78:	str	r1, [r4]
   19f7c:	add	r3, r2, r3
   19f80:	str	r3, [r4, #4]
   19f84:	bl	19e84 <normalizeTimeValue@@Base>
   19f88:	ldr	r2, [sp, #12]
   19f8c:	ldr	r3, [r5]
   19f90:	cmp	r2, r3
   19f94:	bne	19fa0 <adjustTimeValue@@Base+0xa0>
   19f98:	add	sp, sp, #16
   19f9c:	pop	{r4, r5, r6, pc}
   19fa0:	bl	14a60 <__stack_chk_fail@plt>
   19fa4:	andeq	sl, r1, r8, ror #1
   19fa8:	andeq	r0, r0, ip, lsr #4

00019fac <compareTimeValues@@Base>:
   19fac:	ldr	r2, [r0]
   19fb0:	ldr	r3, [r1]
   19fb4:	cmp	r2, r3
   19fb8:	blt	19fe4 <compareTimeValues@@Base+0x38>
   19fbc:	bgt	19fdc <compareTimeValues@@Base+0x30>
   19fc0:	ldr	r2, [r0, #4]
   19fc4:	ldr	r3, [r1, #4]
   19fc8:	cmp	r2, r3
   19fcc:	blt	19fe4 <compareTimeValues@@Base+0x38>
   19fd0:	movle	r0, #0
   19fd4:	movgt	r0, #1
   19fd8:	bx	lr
   19fdc:	mov	r0, #1
   19fe0:	bx	lr
   19fe4:	mvn	r0, #0
   19fe8:	bx	lr

00019fec <millisecondsBetween@@Base>:
   19fec:	ldr	r2, [pc, #124]	; 1a070 <millisecondsBetween@@Base+0x84>
   19ff0:	mov	r3, r0
   19ff4:	ldr	ip, [pc, #120]	; 1a074 <millisecondsBetween@@Base+0x88>
   19ff8:	add	r2, pc, r2
   19ffc:	push	{r4, r5, lr}
   1a000:	sub	sp, sp, #20
   1a004:	ldr	r4, [r2, ip]
   1a008:	add	r0, sp, #4
   1a00c:	ldr	r5, [r1]
   1a010:	ldr	lr, [r1, #4]
   1a014:	ldm	r3, {r1, r2}
   1a018:	ldr	r3, [r4]
   1a01c:	rsb	r1, r1, r5
   1a020:	rsb	r2, r2, lr
   1a024:	stmib	sp, {r1, r2}
   1a028:	str	r3, [sp, #12]
   1a02c:	bl	19e84 <normalizeTimeValue@@Base>
   1a030:	ldr	r3, [sp, #8]
   1a034:	movw	r2, #56963	; 0xde83
   1a038:	movt	r2, #17179	; 0x431b
   1a03c:	ldr	r5, [sp, #12]
   1a040:	ldr	ip, [r4]
   1a044:	mov	r0, #1000	; 0x3e8
   1a048:	smull	r1, r2, r2, r3
   1a04c:	asr	r3, r3, #31
   1a050:	ldr	r1, [sp, #4]
   1a054:	cmp	r5, ip
   1a058:	rsb	r3, r3, r2, asr #18
   1a05c:	mla	r0, r0, r1, r3
   1a060:	bne	1a06c <millisecondsBetween@@Base+0x80>
   1a064:	add	sp, sp, #20
   1a068:	pop	{r4, r5, pc}
   1a06c:	bl	14a60 <__stack_chk_fail@plt>
   1a070:	andeq	sl, r1, r0
   1a074:	andeq	r0, r0, ip, lsr #4

0001a078 <getMonotonicTime@@Base>:
   1a078:	ldr	r3, [pc, #84]	; 1a0d4 <getMonotonicTime@@Base+0x5c>
   1a07c:	ldr	r2, [pc, #84]	; 1a0d8 <getMonotonicTime@@Base+0x60>
   1a080:	add	r3, pc, r3
   1a084:	push	{r4, r5, lr}
   1a088:	sub	sp, sp, #20
   1a08c:	ldr	r4, [r3, r2]
   1a090:	mov	r5, r0
   1a094:	add	r1, sp, #4
   1a098:	mov	r0, #1
   1a09c:	ldr	r3, [r4]
   1a0a0:	str	r3, [sp, #12]
   1a0a4:	bl	149d0 <clock_gettime@plt>
   1a0a8:	ldr	r3, [sp, #4]
   1a0ac:	ldr	r2, [sp, #12]
   1a0b0:	ldr	r1, [sp, #8]
   1a0b4:	str	r3, [r5]
   1a0b8:	ldr	r3, [r4]
   1a0bc:	str	r1, [r5, #4]
   1a0c0:	cmp	r2, r3
   1a0c4:	bne	1a0d0 <getMonotonicTime@@Base+0x58>
   1a0c8:	add	sp, sp, #20
   1a0cc:	pop	{r4, r5, pc}
   1a0d0:	bl	14a60 <__stack_chk_fail@plt>
   1a0d4:	andeq	r9, r1, r8, ror pc
   1a0d8:	andeq	r0, r0, ip, lsr #4

0001a0dc <getMonotonicElapsed@@Base>:
   1a0dc:	ldr	r3, [pc, #80]	; 1a134 <getMonotonicElapsed@@Base+0x58>
   1a0e0:	ldr	r2, [pc, #80]	; 1a138 <getMonotonicElapsed@@Base+0x5c>
   1a0e4:	add	r3, pc, r3
   1a0e8:	push	{r4, r5, r6, lr}
   1a0ec:	sub	sp, sp, #16
   1a0f0:	ldr	r4, [r3, r2]
   1a0f4:	add	r5, sp, #4
   1a0f8:	mov	r6, r0
   1a0fc:	mov	r0, r5
   1a100:	ldr	r3, [r4]
   1a104:	str	r3, [sp, #12]
   1a108:	bl	1a078 <getMonotonicTime@@Base>
   1a10c:	mov	r0, r6
   1a110:	mov	r1, r5
   1a114:	bl	19fec <millisecondsBetween@@Base>
   1a118:	ldr	r2, [sp, #12]
   1a11c:	ldr	r3, [r4]
   1a120:	cmp	r2, r3
   1a124:	bne	1a130 <getMonotonicElapsed@@Base+0x54>
   1a128:	add	sp, sp, #16
   1a12c:	pop	{r4, r5, r6, pc}
   1a130:	bl	14a60 <__stack_chk_fail@plt>
   1a134:	andeq	r9, r1, r4, lsl pc
   1a138:	andeq	r0, r0, ip, lsr #4

0001a13c <restartTimePeriod@@Base>:
   1a13c:	b	1a078 <getMonotonicTime@@Base>

0001a140 <startTimePeriod@@Base>:
   1a140:	str	r1, [r0, #8]
   1a144:	b	1a13c <restartTimePeriod@@Base>

0001a148 <afterTimePeriod@@Base>:
   1a148:	push	{r3, r4, r5, lr}
   1a14c:	mov	r4, r1
   1a150:	mov	r5, r0
   1a154:	bl	1a0dc <getMonotonicElapsed@@Base>
   1a158:	cmp	r4, #0
   1a15c:	strne	r0, [r4]
   1a160:	ldr	r3, [r5, #8]
   1a164:	cmp	r0, r3
   1a168:	movlt	r0, #0
   1a16c:	movge	r0, #1
   1a170:	pop	{r3, r4, r5, pc}

0001a174 <approximateDelay@@Base>:
   1a174:	ldr	r3, [pc, #160]	; 1a21c <approximateDelay@@Base+0xa8>
   1a178:	subs	r2, r0, #0
   1a17c:	ldr	r1, [pc, #156]	; 1a220 <approximateDelay@@Base+0xac>
   1a180:	add	r3, pc, r3
   1a184:	push	{r4, r5, lr}
   1a188:	sub	sp, sp, #20
   1a18c:	ldr	r4, [r3, r1]
   1a190:	ldr	r3, [r4]
   1a194:	str	r3, [sp, #12]
   1a198:	ble	1a1e0 <approximateDelay@@Base+0x6c>
   1a19c:	movw	r1, #19923	; 0x4dd3
   1a1a0:	movt	r1, #4194	; 0x1062
   1a1a4:	asr	r5, r2, #31
   1a1a8:	mov	lr, #1000	; 0x3e8
   1a1ac:	smull	r3, ip, r1, r2
   1a1b0:	movw	r3, #16960	; 0x4240
   1a1b4:	movt	r3, #15
   1a1b8:	add	r0, sp, #4
   1a1bc:	mov	r1, #0
   1a1c0:	rsb	ip, r5, ip, asr #6
   1a1c4:	str	ip, [sp, #4]
   1a1c8:	mls	r2, lr, ip, r2
   1a1cc:	mul	r3, r3, r2
   1a1d0:	str	r3, [sp, #8]
   1a1d4:	bl	148c8 <nanosleep@plt>
   1a1d8:	cmn	r0, #1
   1a1dc:	beq	1a1f8 <approximateDelay@@Base+0x84>
   1a1e0:	ldr	r2, [sp, #12]
   1a1e4:	ldr	r3, [r4]
   1a1e8:	cmp	r2, r3
   1a1ec:	bne	1a218 <approximateDelay@@Base+0xa4>
   1a1f0:	add	sp, sp, #20
   1a1f4:	pop	{r4, r5, pc}
   1a1f8:	bl	14c4c <__errno_location@plt>
   1a1fc:	ldr	r3, [r0]
   1a200:	cmp	r3, #4
   1a204:	beq	1a1e0 <approximateDelay@@Base+0x6c>
   1a208:	ldr	r0, [pc, #20]	; 1a224 <approximateDelay@@Base+0xb0>
   1a20c:	add	r0, pc, r0
   1a210:	bl	17c4c <logSystemError@@Base>
   1a214:	b	1a1e0 <approximateDelay@@Base+0x6c>
   1a218:	bl	14a60 <__stack_chk_fail@plt>
   1a21c:	andeq	r9, r1, r8, ror lr
   1a220:	andeq	r0, r0, ip, lsr #4
   1a224:	andeq	r6, r0, ip, lsr #19

0001a228 <accurateDelay@@Base>:
   1a228:	ldr	r3, [pc, #184]	; 1a2e8 <accurateDelay@@Base+0xc0>
   1a22c:	ldr	r2, [pc, #184]	; 1a2ec <accurateDelay@@Base+0xc4>
   1a230:	push	{r4, r5, r6, r7, lr}
   1a234:	add	r3, pc, r3
   1a238:	ldr	r4, [pc, #176]	; 1a2f0 <accurateDelay@@Base+0xc8>
   1a23c:	sub	sp, sp, #20
   1a240:	ldr	r6, [r3, r2]
   1a244:	mov	r5, r0
   1a248:	add	r4, pc, r4
   1a24c:	ldr	r1, [r4]
   1a250:	ldr	r3, [r6]
   1a254:	cmp	r1, #0
   1a258:	str	r3, [sp, #12]
   1a25c:	movne	r7, r1
   1a260:	bne	1a28c <accurateDelay@@Base+0x64>
   1a264:	mov	r0, #2
   1a268:	bl	14afc <sysconf@plt>
   1a26c:	mov	r1, r0
   1a270:	mov	r0, #1000	; 0x3e8
   1a274:	bl	1fee0 <saveDataItem@@Base+0x254>
   1a278:	cmp	r0, #0
   1a27c:	strne	r0, [r4]
   1a280:	movne	r7, r0
   1a284:	moveq	r7, #1
   1a288:	streq	r7, [r4]
   1a28c:	mov	r1, r5
   1a290:	mov	r0, sp
   1a294:	bl	1a140 <startTimePeriod@@Base>
   1a298:	cmp	r7, r5
   1a29c:	ble	1a2cc <accurateDelay@@Base+0xa4>
   1a2a0:	mov	r0, sp
   1a2a4:	mov	r1, #0
   1a2a8:	bl	1a148 <afterTimePeriod@@Base>
   1a2ac:	cmp	r0, #0
   1a2b0:	beq	1a2a0 <accurateDelay@@Base+0x78>
   1a2b4:	ldr	r2, [sp, #12]
   1a2b8:	ldr	r3, [r6]
   1a2bc:	cmp	r2, r3
   1a2c0:	bne	1a2e4 <accurateDelay@@Base+0xbc>
   1a2c4:	add	sp, sp, #20
   1a2c8:	pop	{r4, r5, r6, r7, pc}
   1a2cc:	mov	r0, r5
   1a2d0:	mov	r1, r7
   1a2d4:	bl	1fee0 <saveDataItem@@Base+0x254>
   1a2d8:	mul	r0, r0, r7
   1a2dc:	bl	1a174 <approximateDelay@@Base>
   1a2e0:	b	1a2a0 <accurateDelay@@Base+0x78>
   1a2e4:	bl	14a60 <__stack_chk_fail@plt>
   1a2e8:	andeq	r9, r1, r4, asr #27
   1a2ec:	andeq	r0, r0, ip, lsr #4
   1a2f0:	strheq	sl, [r1], -r0
   1a2f4:	ldr	r3, [pc, #236]	; 1a3e8 <accurateDelay@@Base+0x1c0>
   1a2f8:	ldr	ip, [pc, #236]	; 1a3ec <accurateDelay@@Base+0x1c4>
   1a2fc:	add	r3, pc, r3
   1a300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a304:	sub	sp, sp, #16
   1a308:	ldr	r5, [r3, ip]
   1a30c:	add	sl, sp, #4
   1a310:	mov	r9, r0
   1a314:	mov	r6, r1
   1a318:	mov	r8, r2
   1a31c:	mov	r7, #0
   1a320:	ldr	r3, [r5]
   1a324:	str	r3, [sp, #12]
   1a328:	cmp	r8, #0
   1a32c:	mov	r1, #1
   1a330:	mov	r0, sl
   1a334:	mov	r2, r6
   1a338:	moveq	r3, r1
   1a33c:	movne	r3, #4
   1a340:	str	r7, [sp, #8]
   1a344:	str	r9, [sp, #4]
   1a348:	strh	r3, [sp, #8]
   1a34c:	bl	14988 <poll@plt>
   1a350:	cmn	r0, #1
   1a354:	mov	r4, r0
   1a358:	bne	1a398 <accurateDelay@@Base+0x170>
   1a35c:	bl	14c4c <__errno_location@plt>
   1a360:	ldr	r3, [r0]
   1a364:	cmp	r3, #4
   1a368:	beq	1a328 <accurateDelay@@Base+0x100>
   1a36c:	ldr	r0, [pc, #124]	; 1a3f0 <accurateDelay@@Base+0x1c8>
   1a370:	mov	r4, #0
   1a374:	add	r0, pc, r0
   1a378:	bl	17c4c <logSystemError@@Base>
   1a37c:	ldr	r2, [sp, #12]
   1a380:	mov	r0, r4
   1a384:	ldr	r3, [r5]
   1a388:	cmp	r2, r3
   1a38c:	bne	1a3e4 <accurateDelay@@Base+0x1bc>
   1a390:	add	sp, sp, #16
   1a394:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a398:	cmp	r0, #0
   1a39c:	movne	r4, #1
   1a3a0:	bne	1a37c <accurateDelay@@Base+0x154>
   1a3a4:	cmp	r6, #0
   1a3a8:	ble	1a3d4 <accurateDelay@@Base+0x1ac>
   1a3ac:	ldr	r3, [pc, #64]	; 1a3f4 <accurateDelay@@Base+0x1cc>
   1a3b0:	cmp	r6, #1
   1a3b4:	add	r3, pc, r3
   1a3b8:	ldrne	r3, [pc, #56]	; 1a3f8 <accurateDelay@@Base+0x1d0>
   1a3bc:	addne	r3, pc, r3
   1a3c0:	ldr	r1, [pc, #52]	; 1a3fc <accurateDelay@@Base+0x1d4>
   1a3c4:	mov	r2, r6
   1a3c8:	mov	r0, #7
   1a3cc:	add	r1, pc, r1
   1a3d0:	bl	17b84 <logMessage@@Base>
   1a3d4:	bl	14c4c <__errno_location@plt>
   1a3d8:	mov	r3, #11
   1a3dc:	str	r3, [r0]
   1a3e0:	b	1a37c <accurateDelay@@Base+0x154>
   1a3e4:	bl	14a60 <__stack_chk_fail@plt>
   1a3e8:	strdeq	r9, [r1], -ip
   1a3ec:	andeq	r0, r0, ip, lsr #4
   1a3f0:	andeq	r6, r0, ip, ror #16
   1a3f4:	andeq	r6, r0, r0, lsl r8
   1a3f8:	andeq	r6, r0, r4, lsl r8
   1a3fc:	andeq	r6, r0, ip, lsl r8

0001a400 <awaitInput@@Base>:
   1a400:	mov	r2, #0
   1a404:	b	1a2f4 <accurateDelay@@Base+0xcc>

0001a408 <readChunk@@Base>:
   1a408:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a40c:	subs	r4, r3, #0
   1a410:	mov	r6, r0
   1a414:	mov	r7, r1
   1a418:	mov	r5, r2
   1a41c:	ldr	r9, [sp, #32]
   1a420:	ldr	r8, [sp, #36]	; 0x24
   1a424:	bne	1a444 <readChunk@@Base+0x3c>
   1a428:	b	1a4dc <readChunk@@Base+0xd4>
   1a42c:	ldr	r3, [r5]
   1a430:	rsb	r4, r0, r4
   1a434:	add	r0, r3, r0
   1a438:	str	r0, [r5]
   1a43c:	cmp	r4, #0
   1a440:	beq	1a4dc <readChunk@@Base+0xd4>
   1a444:	ldr	r1, [r5]
   1a448:	mov	r0, r6
   1a44c:	mov	r2, r4
   1a450:	add	r1, r7, r1
   1a454:	bl	14964 <read@plt>
   1a458:	cmn	r0, #1
   1a45c:	beq	1a4b0 <readChunk@@Base+0xa8>
   1a460:	cmp	r0, #0
   1a464:	bne	1a42c <readChunk@@Base+0x24>
   1a468:	ldr	sl, [r5]
   1a46c:	mov	r0, r6
   1a470:	cmp	sl, #0
   1a474:	moveq	sl, r9
   1a478:	movne	sl, r8
   1a47c:	cmp	sl, #0
   1a480:	mov	r1, sl
   1a484:	beq	1a4e8 <readChunk@@Base+0xe0>
   1a488:	bl	1a400 <awaitInput@@Base>
   1a48c:	subs	sl, r0, #0
   1a490:	bne	1a43c <readChunk@@Base+0x34>
   1a494:	ldr	r1, [pc, #92]	; 1a4f8 <readChunk@@Base+0xf0>
   1a498:	mov	r0, #4
   1a49c:	ldr	r2, [r5]
   1a4a0:	add	r1, pc, r1
   1a4a4:	bl	17b84 <logMessage@@Base>
   1a4a8:	mov	r0, sl
   1a4ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a4b0:	bl	14c4c <__errno_location@plt>
   1a4b4:	ldr	r3, [r0]
   1a4b8:	cmp	r3, #4
   1a4bc:	beq	1a43c <readChunk@@Base+0x34>
   1a4c0:	cmp	r3, #11
   1a4c4:	beq	1a468 <readChunk@@Base+0x60>
   1a4c8:	ldr	r0, [pc, #44]	; 1a4fc <readChunk@@Base+0xf4>
   1a4cc:	mov	sl, #0
   1a4d0:	add	r0, pc, r0
   1a4d4:	bl	17c4c <logSystemError@@Base>
   1a4d8:	b	1a4a8 <readChunk@@Base+0xa0>
   1a4dc:	mov	sl, #1
   1a4e0:	mov	r0, sl
   1a4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a4e8:	bl	14c4c <__errno_location@plt>
   1a4ec:	mov	r3, #11
   1a4f0:	str	r3, [r0]
   1a4f4:	b	1a4a8 <readChunk@@Base+0xa0>
   1a4f8:	andeq	r6, r0, ip, asr r7
   1a4fc:	strdeq	r6, [r0], -r8

0001a500 <readData@@Base>:
   1a500:	push	{r4, r5, r6, lr}
   1a504:	sub	sp, sp, #16
   1a508:	ldr	lr, [pc, #116]	; 1a584 <readData@@Base+0x84>
   1a50c:	add	ip, sp, #16
   1a510:	ldr	r4, [pc, #112]	; 1a588 <readData@@Base+0x88>
   1a514:	mov	r5, r2
   1a518:	add	lr, pc, lr
   1a51c:	ldr	r6, [sp, #32]
   1a520:	mov	r2, #0
   1a524:	ldr	r4, [lr, r4]
   1a528:	str	r3, [sp]
   1a52c:	mov	r3, r5
   1a530:	str	r2, [ip, #-8]!
   1a534:	mov	r2, ip
   1a538:	ldr	ip, [r4]
   1a53c:	str	r6, [sp, #4]
   1a540:	str	ip, [sp, #12]
   1a544:	bl	1a408 <readChunk@@Base>
   1a548:	cmp	r0, #0
   1a54c:	movne	r0, r5
   1a550:	bne	1a568 <readData@@Base+0x68>
   1a554:	bl	14c4c <__errno_location@plt>
   1a558:	ldr	r3, [r0]
   1a55c:	cmp	r3, #11
   1a560:	ldreq	r0, [sp, #8]
   1a564:	mvnne	r0, #0
   1a568:	ldr	r2, [sp, #12]
   1a56c:	ldr	r3, [r4]
   1a570:	cmp	r2, r3
   1a574:	bne	1a580 <readData@@Base+0x80>
   1a578:	add	sp, sp, #16
   1a57c:	pop	{r4, r5, r6, pc}
   1a580:	bl	14a60 <__stack_chk_fail@plt>
   1a584:	andeq	r9, r1, r0, ror #21
   1a588:	andeq	r0, r0, ip, lsr #4

0001a58c <awaitOutput@@Base>:
   1a58c:	mov	r2, #1
   1a590:	b	1a2f4 <accurateDelay@@Base+0xcc>

0001a594 <writeData@@Base>:
   1a594:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a598:	subs	r6, r2, #0
   1a59c:	mov	r4, r0
   1a5a0:	mov	r9, r1
   1a5a4:	beq	1a65c <writeData@@Base+0xc8>
   1a5a8:	mov	r7, r1
   1a5ac:	mov	r8, #11
   1a5b0:	mov	r0, r4
   1a5b4:	mov	r1, r7
   1a5b8:	mov	r2, r6
   1a5bc:	bl	14bc8 <write@plt>
   1a5c0:	cmn	r0, #1
   1a5c4:	mov	r5, r0
   1a5c8:	beq	1a628 <writeData@@Base+0x94>
   1a5cc:	cmp	r0, #0
   1a5d0:	bne	1a614 <writeData@@Base+0x80>
   1a5d4:	bl	14c4c <__errno_location@plt>
   1a5d8:	str	r8, [r0]
   1a5dc:	b	1a5f0 <writeData@@Base+0x5c>
   1a5e0:	bl	14c4c <__errno_location@plt>
   1a5e4:	ldr	r3, [r0]
   1a5e8:	cmp	r3, #11
   1a5ec:	bne	1a654 <writeData@@Base+0xc0>
   1a5f0:	mov	r0, r4
   1a5f4:	movw	r1, #15000	; 0x3a98
   1a5f8:	bl	1a58c <awaitOutput@@Base>
   1a5fc:	cmp	r0, #0
   1a600:	beq	1a5e0 <writeData@@Base+0x4c>
   1a604:	cmp	r6, #0
   1a608:	bne	1a5b0 <writeData@@Base+0x1c>
   1a60c:	rsb	r0, r9, r7
   1a610:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a614:	rsb	r6, r0, r6
   1a618:	add	r7, r7, r0
   1a61c:	cmp	r6, #0
   1a620:	bne	1a5b0 <writeData@@Base+0x1c>
   1a624:	b	1a60c <writeData@@Base+0x78>
   1a628:	bl	14c4c <__errno_location@plt>
   1a62c:	ldr	r3, [r0]
   1a630:	cmp	r3, #4
   1a634:	beq	1a604 <writeData@@Base+0x70>
   1a638:	cmp	r3, #11
   1a63c:	beq	1a5f0 <writeData@@Base+0x5c>
   1a640:	ldr	r0, [pc, #28]	; 1a664 <writeData@@Base+0xd0>
   1a644:	add	r0, pc, r0
   1a648:	bl	17c4c <logSystemError@@Base>
   1a64c:	mov	r0, r5
   1a650:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a654:	mvn	r0, #0
   1a658:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a65c:	mov	r0, r6
   1a660:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a664:	ldrdeq	r6, [r0], -r8

0001a668 <changeOpenFlags@@Base>:
   1a668:	push	{r4, r5, r6, lr}
   1a66c:	mov	r5, r1
   1a670:	mov	r1, #3
   1a674:	mov	r6, r2
   1a678:	mov	r4, r0
   1a67c:	bl	148f8 <fcntl@plt>
   1a680:	cmn	r0, #1
   1a684:	beq	1a6ac <changeOpenFlags@@Base+0x44>
   1a688:	bic	r2, r0, r5
   1a68c:	mov	r1, #4
   1a690:	mov	r0, r4
   1a694:	orr	r2, r2, r6
   1a698:	bl	148f8 <fcntl@plt>
   1a69c:	cmn	r0, #1
   1a6a0:	beq	1a6c0 <changeOpenFlags@@Base+0x58>
   1a6a4:	mov	r0, #1
   1a6a8:	pop	{r4, r5, r6, pc}
   1a6ac:	ldr	r0, [pc, #32]	; 1a6d4 <changeOpenFlags@@Base+0x6c>
   1a6b0:	add	r0, pc, r0
   1a6b4:	bl	17c4c <logSystemError@@Base>
   1a6b8:	mov	r0, #0
   1a6bc:	pop	{r4, r5, r6, pc}
   1a6c0:	ldr	r0, [pc, #16]	; 1a6d8 <changeOpenFlags@@Base+0x70>
   1a6c4:	add	r0, pc, r0
   1a6c8:	bl	17c4c <logSystemError@@Base>
   1a6cc:	mov	r0, #0
   1a6d0:	pop	{r4, r5, r6, pc}
   1a6d4:	andeq	r6, r0, ip, ror r5
   1a6d8:	andeq	r6, r0, r0, ror #10

0001a6dc <setOpenFlags@@Base>:
   1a6dc:	subs	r3, r1, #0
   1a6e0:	mov	r1, r2
   1a6e4:	bne	1a6f0 <setOpenFlags@@Base+0x14>
   1a6e8:	mov	r2, r3
   1a6ec:	b	1a668 <changeOpenFlags@@Base>
   1a6f0:	mov	r1, #0
   1a6f4:	b	1a668 <changeOpenFlags@@Base>

0001a6f8 <setBlockingIo@@Base>:
   1a6f8:	rsbs	r1, r1, #1
   1a6fc:	mov	r2, #2048	; 0x800
   1a700:	push	{r3, lr}
   1a704:	movcc	r1, #0
   1a708:	bl	1a6dc <setOpenFlags@@Base>
   1a70c:	adds	r0, r0, #0
   1a710:	movne	r0, #1
   1a714:	pop	{r3, pc}

0001a718 <setCloseOnExec@@Base>:
   1a718:	adds	r2, r1, #0
   1a71c:	mov	r1, #2
   1a720:	push	{r3, lr}
   1a724:	movne	r2, #1
   1a728:	bl	148f8 <fcntl@plt>
   1a72c:	adds	r0, r0, #1
   1a730:	movne	r0, #1
   1a734:	pop	{r3, pc}
   1a738:	push	{lr}		; (str lr, [sp, #-4]!)
   1a73c:	sub	sp, sp, #12
   1a740:	add	r2, sp, #8
   1a744:	str	r1, [r2, #-4]!
   1a748:	movw	r1, #20485	; 0x5005
   1a74c:	movt	r1, #49156	; 0xc004
   1a750:	bl	149c4 <ioctl@plt>
   1a754:	cmn	r0, #1
   1a758:	moveq	r0, #8
   1a75c:	beq	1a794 <setCloseOnExec@@Base+0x7c>
   1a760:	ldr	r1, [sp, #4]
   1a764:	cmp	r1, #8
   1a768:	beq	1a79c <setCloseOnExec@@Base+0x84>
   1a76c:	ldr	r3, [pc, #48]	; 1a7a4 <setCloseOnExec@@Base+0x8c>
   1a770:	add	r3, pc, r3
   1a774:	b	1a784 <setCloseOnExec@@Base+0x6c>
   1a778:	ldr	r2, [r3, #4]
   1a77c:	cmp	r2, r1
   1a780:	beq	1a794 <setCloseOnExec@@Base+0x7c>
   1a784:	ldr	r0, [r3, #8]
   1a788:	add	r3, r3, #8
   1a78c:	cmp	r0, #8
   1a790:	bne	1a778 <setCloseOnExec@@Base+0x60>
   1a794:	add	sp, sp, #12
   1a798:	pop	{pc}		; (ldr pc, [sp], #4)
   1a79c:	mov	r0, #0
   1a7a0:	b	1a794 <setCloseOnExec@@Base+0x7c>
   1a7a4:	andeq	r6, r0, r4, asr #9

0001a7a8 <getProgramPath@@Base>:
   1a7a8:	push	{r3, r4, r5, r6, r7, lr}
   1a7ac:	mov	r6, #0
   1a7b0:	ldr	r7, [pc, #184]	; 1a870 <getProgramPath@@Base+0xc8>
   1a7b4:	mov	r4, #128	; 0x80
   1a7b8:	add	r7, pc, r7
   1a7bc:	b	1a7dc <getProgramPath@@Base+0x34>
   1a7c0:	bl	148a4 <readlink@plt>
   1a7c4:	mov	r6, r5
   1a7c8:	cmn	r0, #1
   1a7cc:	mov	r3, r0
   1a7d0:	beq	1a814 <getProgramPath@@Base+0x6c>
   1a7d4:	cmp	r4, r0
   1a7d8:	bhi	1a850 <getProgramPath@@Base+0xa8>
   1a7dc:	lsl	r4, r4, #1
   1a7e0:	mov	r0, r6
   1a7e4:	mov	r1, r4
   1a7e8:	bl	149dc <realloc@plt>
   1a7ec:	mov	r2, r4
   1a7f0:	subs	r5, r0, #0
   1a7f4:	mov	r0, r7
   1a7f8:	mov	r1, r5
   1a7fc:	bne	1a7c0 <getProgramPath@@Base+0x18>
   1a800:	bl	17c90 <logMallocError@@Base>
   1a804:	cmp	r6, #0
   1a808:	bne	1a838 <getProgramPath@@Base+0x90>
   1a80c:	mov	r0, r6
   1a810:	pop	{r3, r4, r5, r6, r7, pc}
   1a814:	bl	14c4c <__errno_location@plt>
   1a818:	ldr	r3, [r0]
   1a81c:	cmp	r3, #2
   1a820:	beq	1a83c <getProgramPath@@Base+0x94>
   1a824:	ldr	r0, [pc, #72]	; 1a874 <getProgramPath@@Base+0xcc>
   1a828:	mov	r6, #0
   1a82c:	add	r0, pc, r0
   1a830:	bl	17c4c <logSystemError@@Base>
   1a834:	b	1a840 <getProgramPath@@Base+0x98>
   1a838:	mov	r5, r6
   1a83c:	mov	r6, #0
   1a840:	mov	r0, r5
   1a844:	bl	147fc <free@plt>
   1a848:	mov	r0, r6
   1a84c:	pop	{r3, r4, r5, r6, r7, pc}
   1a850:	mov	r2, #0
   1a854:	mov	r0, r5
   1a858:	strb	r2, [r5, r3]
   1a85c:	bl	14928 <__strdup@plt>
   1a860:	subs	r6, r0, #0
   1a864:	bne	1a840 <getProgramPath@@Base+0x98>
   1a868:	bl	17c90 <logMallocError@@Base>
   1a86c:	b	1a840 <getProgramPath@@Base+0x98>
   1a870:	andeq	r6, r0, r4, asr #9
   1a874:	andeq	r6, r0, r0, ror #8

0001a878 <getBootParameters@@Base>:
   1a878:	ldr	r3, [pc, #280]	; 1a998 <getBootParameters@@Base+0x120>
   1a87c:	ldr	r2, [pc, #280]	; 1a99c <getBootParameters@@Base+0x124>
   1a880:	add	r3, pc, r3
   1a884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a888:	sub	sp, sp, #4096	; 0x1000
   1a88c:	ldr	r7, [r3, r2]
   1a890:	sub	sp, sp, #12
   1a894:	add	r2, sp, #8192	; 0x2000
   1a898:	mov	r6, r0
   1a89c:	ldr	r3, [r7]
   1a8a0:	str	r3, [r2, #-4092]	; 0xfffff004
   1a8a4:	bl	14b80 <strlen@plt>
   1a8a8:	mov	r4, r0
   1a8ac:	mov	r0, #1
   1a8b0:	mov	r1, r0
   1a8b4:	bl	14b08 <calloc@plt>
   1a8b8:	subs	r8, r0, #0
   1a8bc:	beq	1a984 <getBootParameters@@Base+0x10c>
   1a8c0:	ldr	r0, [pc, #216]	; 1a9a0 <getBootParameters@@Base+0x128>
   1a8c4:	ldr	r1, [pc, #216]	; 1a9a4 <getBootParameters@@Base+0x12c>
   1a8c8:	add	r0, pc, r0
   1a8cc:	add	r1, pc, r1
   1a8d0:	bl	14958 <fopen@plt>
   1a8d4:	subs	r9, r0, #0
   1a8d8:	beq	1a940 <getBootParameters@@Base+0xc8>
   1a8dc:	mov	r1, #4096	; 0x1000
   1a8e0:	add	r0, sp, #4
   1a8e4:	mov	r2, r9
   1a8e8:	bl	14b38 <fgets@plt>
   1a8ec:	cmp	r0, #0
   1a8f0:	beq	1a938 <getBootParameters@@Base+0xc0>
   1a8f4:	ldr	r5, [pc, #172]	; 1a9a8 <getBootParameters@@Base+0x130>
   1a8f8:	add	sl, r4, #1
   1a8fc:	add	r5, pc, r5
   1a900:	b	1a928 <getBootParameters@@Base+0xb0>
   1a904:	mov	r1, r6
   1a908:	mov	r2, r4
   1a90c:	bl	14814 <strncmp@plt>
   1a910:	cmp	r0, #0
   1a914:	bne	1a924 <getBootParameters@@Base+0xac>
   1a918:	ldrb	r3, [fp, r4]
   1a91c:	cmp	r3, #61	; 0x3d
   1a920:	beq	1a964 <getBootParameters@@Base+0xec>
   1a924:	mov	r0, #0
   1a928:	mov	r1, r5
   1a92c:	bl	14874 <strtok@plt>
   1a930:	subs	fp, r0, #0
   1a934:	bne	1a904 <getBootParameters@@Base+0x8c>
   1a938:	mov	r0, r9
   1a93c:	bl	14bbc <fclose@plt>
   1a940:	add	r3, sp, #8192	; 0x2000
   1a944:	mov	r0, r8
   1a948:	ldr	r2, [r3, #-4092]	; 0xfffff004
   1a94c:	ldr	r3, [r7]
   1a950:	cmp	r2, r3
   1a954:	bne	1a994 <getBootParameters@@Base+0x11c>
   1a958:	add	sp, sp, #4096	; 0x1000
   1a95c:	add	sp, sp, #12
   1a960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a964:	add	r0, fp, sl
   1a968:	bl	14928 <__strdup@plt>
   1a96c:	subs	r3, r0, #0
   1a970:	beq	1a98c <getBootParameters@@Base+0x114>
   1a974:	mov	r0, r8
   1a978:	mov	r8, r3
   1a97c:	bl	147fc <free@plt>
   1a980:	b	1a924 <getBootParameters@@Base+0xac>
   1a984:	bl	17c90 <logMallocError@@Base>
   1a988:	b	1a940 <getBootParameters@@Base+0xc8>
   1a98c:	bl	17c90 <logMallocError@@Base>
   1a990:	b	1a924 <getBootParameters@@Base+0xac>
   1a994:	bl	14a60 <__stack_chk_fail@plt>
   1a998:	andeq	r9, r1, r8, ror r7
   1a99c:	andeq	r0, r0, ip, lsr #4
   1a9a0:	ldrdeq	r6, [r0], -r0
   1a9a4:	andeq	r7, r0, ip, ror #21
   1a9a8:	andeq	r6, r0, ip, lsr #7

0001a9ac <executeHostCommand@@Base>:
   1a9ac:	ldr	r3, [pc, #392]	; 1ab3c <executeHostCommand@@Base+0x190>
   1a9b0:	ldr	r2, [pc, #392]	; 1ab40 <executeHostCommand@@Base+0x194>
   1a9b4:	add	r3, pc, r3
   1a9b8:	push	{r4, r5, r6, r7, lr}
   1a9bc:	sub	sp, sp, #268	; 0x10c
   1a9c0:	ldr	r6, [r3, r2]
   1a9c4:	add	r4, sp, #4
   1a9c8:	mov	r7, r0
   1a9cc:	add	r5, sp, #132	; 0x84
   1a9d0:	mov	r0, r4
   1a9d4:	ldr	r3, [r6]
   1a9d8:	str	r3, [sp, #260]	; 0x104
   1a9dc:	bl	14cac <sigemptyset@plt>
   1a9e0:	mov	r1, #17
   1a9e4:	mov	r0, r4
   1a9e8:	bl	14934 <sigaddset@plt>
   1a9ec:	mov	r2, r5
   1a9f0:	mov	r1, r4
   1a9f4:	mov	r0, #0
   1a9f8:	bl	14d24 <sigprocmask@plt>
   1a9fc:	bl	14a78 <fork@plt>
   1aa00:	cmn	r0, #1
   1aa04:	mov	r2, r0
   1aa08:	beq	1aa8c <executeHostCommand@@Base+0xe0>
   1aa0c:	cmp	r0, #0
   1aa10:	beq	1aa60 <executeHostCommand@@Base+0xb4>
   1aa14:	mov	r1, sp
   1aa18:	mov	r2, #0
   1aa1c:	bl	14a18 <waitpid@plt>
   1aa20:	cmn	r0, #1
   1aa24:	beq	1ab08 <executeHostCommand@@Base+0x15c>
   1aa28:	ldr	r2, [sp]
   1aa2c:	ands	r4, r2, #127	; 0x7f
   1aa30:	beq	1aaec <executeHostCommand@@Base+0x140>
   1aa34:	add	r3, r4, #1
   1aa38:	sbfx	r3, r3, #1, #7
   1aa3c:	cmp	r3, #0
   1aa40:	ble	1aac8 <executeHostCommand@@Base+0x11c>
   1aa44:	ldr	r1, [pc, #248]	; 1ab44 <executeHostCommand@@Base+0x198>
   1aa48:	mov	r2, r4
   1aa4c:	mov	r0, #7
   1aa50:	add	r4, r4, #128	; 0x80
   1aa54:	add	r1, pc, r1
   1aa58:	bl	17b84 <logMessage@@Base>
   1aa5c:	b	1aa9c <executeHostCommand@@Base+0xf0>
   1aa60:	mov	r1, r5
   1aa64:	mov	r0, #2
   1aa68:	bl	14d24 <sigprocmask@plt>
   1aa6c:	mov	r1, r7
   1aa70:	ldr	r0, [r7]
   1aa74:	bl	14d0c <execvp@plt>
   1aa78:	ldr	r0, [pc, #200]	; 1ab48 <executeHostCommand@@Base+0x19c>
   1aa7c:	add	r0, pc, r0
   1aa80:	bl	17c4c <logSystemError@@Base>
   1aa84:	mov	r0, #1
   1aa88:	bl	14c28 <_exit@plt>
   1aa8c:	ldr	r0, [pc, #184]	; 1ab4c <executeHostCommand@@Base+0x1a0>
   1aa90:	mov	r4, #255	; 0xff
   1aa94:	add	r0, pc, r0
   1aa98:	bl	17c4c <logSystemError@@Base>
   1aa9c:	mov	r2, #0
   1aaa0:	mov	r1, r5
   1aaa4:	mov	r0, #2
   1aaa8:	bl	14d24 <sigprocmask@plt>
   1aaac:	ldr	r2, [sp, #260]	; 0x104
   1aab0:	ldr	r3, [r6]
   1aab4:	mov	r0, r4
   1aab8:	cmp	r2, r3
   1aabc:	bne	1ab38 <executeHostCommand@@Base+0x18c>
   1aac0:	add	sp, sp, #268	; 0x10c
   1aac4:	pop	{r4, r5, r6, r7, pc}
   1aac8:	uxtb	r3, r2
   1aacc:	cmp	r3, #127	; 0x7f
   1aad0:	beq	1ab1c <executeHostCommand@@Base+0x170>
   1aad4:	ldr	r1, [pc, #116]	; 1ab50 <executeHostCommand@@Base+0x1a4>
   1aad8:	mov	r0, #7
   1aadc:	mov	r4, #255	; 0xff
   1aae0:	add	r1, pc, r1
   1aae4:	bl	17b84 <logMessage@@Base>
   1aae8:	b	1aa9c <executeHostCommand@@Base+0xf0>
   1aaec:	ubfx	r4, r2, #8, #8
   1aaf0:	ldr	r1, [pc, #92]	; 1ab54 <executeHostCommand@@Base+0x1a8>
   1aaf4:	mov	r0, #7
   1aaf8:	add	r1, pc, r1
   1aafc:	mov	r2, r4
   1ab00:	bl	17b84 <logMessage@@Base>
   1ab04:	b	1aa9c <executeHostCommand@@Base+0xf0>
   1ab08:	ldr	r0, [pc, #72]	; 1ab58 <executeHostCommand@@Base+0x1ac>
   1ab0c:	mov	r4, #255	; 0xff
   1ab10:	add	r0, pc, r0
   1ab14:	bl	17c4c <logSystemError@@Base>
   1ab18:	b	1aa9c <executeHostCommand@@Base+0xf0>
   1ab1c:	ldr	r1, [pc, #56]	; 1ab5c <executeHostCommand@@Base+0x1b0>
   1ab20:	ubfx	r2, r2, #8, #8
   1ab24:	mov	r0, #7
   1ab28:	add	r4, r2, #128	; 0x80
   1ab2c:	add	r1, pc, r1
   1ab30:	bl	17b84 <logMessage@@Base>
   1ab34:	b	1aa9c <executeHostCommand@@Base+0xf0>
   1ab38:	bl	14a60 <__stack_chk_fail@plt>
   1ab3c:	andeq	r9, r1, r4, asr #12
   1ab40:	andeq	r0, r0, ip, lsr #4
   1ab44:	andeq	r6, r0, r0, lsl #5
   1ab48:	andeq	r6, r0, r8, lsr r2
   1ab4c:	andeq	r6, r0, r8, lsl r2
   1ab50:	andeq	r6, r0, ip, lsl r2
   1ab54:	andeq	r6, r0, ip, asr #3
   1ab58:	andeq	r6, r0, ip, lsr #3
   1ab5c:	andeq	r6, r0, r0, asr #3
   1ab60:	ldr	r3, [pc, #332]	; 1acb4 <executeHostCommand@@Base+0x308>
   1ab64:	ldr	r2, [pc, #332]	; 1acb8 <executeHostCommand@@Base+0x30c>
   1ab68:	add	r3, pc, r3
   1ab6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ab70:	subs	r4, r1, #0
   1ab74:	ldr	r5, [r3, r2]
   1ab78:	sub	sp, sp, #284	; 0x11c
   1ab7c:	ldr	r9, [pc, #312]	; 1acbc <executeHostCommand@@Base+0x310>
   1ab80:	mov	r8, r0
   1ab84:	ldr	r1, [pc, #308]	; 1acc0 <executeHostCommand@@Base+0x314>
   1ab88:	ldr	r3, [r5]
   1ab8c:	add	r9, pc, r9
   1ab90:	add	r1, pc, r1
   1ab94:	mov	r0, r9
   1ab98:	str	r3, [sp, #276]	; 0x114
   1ab9c:	ldrne	r3, [r4]
   1aba0:	addne	r3, r3, #1
   1aba4:	strne	r3, [r4]
   1aba8:	bl	14958 <fopen@plt>
   1abac:	subs	r7, r0, #0
   1abb0:	beq	1ac80 <executeHostCommand@@Base+0x2d4>
   1abb4:	add	r0, sp, #20
   1abb8:	mov	r1, #256	; 0x100
   1abbc:	mov	r2, r7
   1abc0:	bl	14b38 <fgets@plt>
   1abc4:	subs	r6, r0, #0
   1abc8:	beq	1abd8 <executeHostCommand@@Base+0x22c>
   1abcc:	bl	14b80 <strlen@plt>
   1abd0:	cmp	r0, #0
   1abd4:	bne	1ac40 <executeHostCommand@@Base+0x294>
   1abd8:	ldr	r6, [pc, #228]	; 1acc4 <executeHostCommand@@Base+0x318>
   1abdc:	add	r6, pc, r6
   1abe0:	mov	r0, r7
   1abe4:	bl	14bbc <fclose@plt>
   1abe8:	ldr	r3, [pc, #216]	; 1acc8 <executeHostCommand@@Base+0x31c>
   1abec:	add	r0, sp, #4
   1abf0:	str	r6, [sp, #4]
   1abf4:	mov	r6, #0
   1abf8:	add	r3, pc, r3
   1abfc:	str	r8, [sp, #12]
   1ac00:	str	r3, [sp, #8]
   1ac04:	str	r6, [sp, #16]
   1ac08:	bl	1a9ac <executeHostCommand@@Base>
   1ac0c:	cmp	r0, r6
   1ac10:	bne	1ac64 <executeHostCommand@@Base+0x2b8>
   1ac14:	cmp	r4, #0
   1ac18:	mov	r0, #1
   1ac1c:	ldrne	r3, [r4]
   1ac20:	addne	r3, r3, #1
   1ac24:	strne	r3, [r4]
   1ac28:	ldr	r2, [sp, #276]	; 0x114
   1ac2c:	ldr	r3, [r5]
   1ac30:	cmp	r2, r3
   1ac34:	bne	1acb0 <executeHostCommand@@Base+0x304>
   1ac38:	add	sp, sp, #284	; 0x11c
   1ac3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ac40:	sub	r0, r0, #1
   1ac44:	ldrb	r3, [r6, r0]
   1ac48:	cmp	r3, #10
   1ac4c:	bne	1abe0 <executeHostCommand@@Base+0x234>
   1ac50:	cmp	r0, #0
   1ac54:	mov	r3, #0
   1ac58:	strb	r3, [r6, r0]
   1ac5c:	bne	1abe0 <executeHostCommand@@Base+0x234>
   1ac60:	b	1abd8 <executeHostCommand@@Base+0x22c>
   1ac64:	ldr	r1, [pc, #96]	; 1accc <executeHostCommand@@Base+0x320>
   1ac68:	mov	r0, #4
   1ac6c:	mov	r2, r8
   1ac70:	add	r1, pc, r1
   1ac74:	bl	17b84 <logMessage@@Base>
   1ac78:	mov	r0, r6
   1ac7c:	b	1ac28 <executeHostCommand@@Base+0x27c>
   1ac80:	bl	14c4c <__errno_location@plt>
   1ac84:	ldr	r6, [pc, #68]	; 1acd0 <executeHostCommand@@Base+0x324>
   1ac88:	add	r6, pc, r6
   1ac8c:	ldr	r0, [r0]
   1ac90:	bl	14838 <strerror@plt>
   1ac94:	ldr	r1, [pc, #56]	; 1acd4 <executeHostCommand@@Base+0x328>
   1ac98:	mov	r2, r9
   1ac9c:	add	r1, pc, r1
   1aca0:	mov	r3, r0
   1aca4:	mov	r0, #4
   1aca8:	bl	17b84 <logMessage@@Base>
   1acac:	b	1abe8 <executeHostCommand@@Base+0x23c>
   1acb0:	bl	14a60 <__stack_chk_fail@plt>
   1acb4:	muleq	r1, r0, r4
   1acb8:	andeq	r0, r0, ip, lsr #4
   1acbc:	muleq	r0, r4, r1
   1acc0:	andeq	r7, r0, r8, lsr #16
   1acc4:	andeq	r6, r0, r8, lsr r1
   1acc8:	andeq	r6, r0, r8, asr r1
   1accc:	andeq	r6, r0, r4, ror #1
   1acd0:	andeq	r6, r0, ip, lsl #1
   1acd4:	andeq	r6, r0, r0, lsr #1

0001acd8 <mountFileSystem@@Base>:
   1acd8:	push	{lr}		; (str lr, [sp, #-4]!)
   1acdc:	sub	sp, sp, #12
   1ace0:	mov	ip, r0
   1ace4:	mov	r3, #0
   1ace8:	mov	r0, r1
   1acec:	str	r3, [sp]
   1acf0:	mov	r1, ip
   1acf4:	bl	14c58 <mount@plt>
   1acf8:	adds	r0, r0, #1
   1acfc:	movne	r0, #1
   1ad00:	add	sp, sp, #12
   1ad04:	pop	{pc}		; (ldr pc, [sp], #4)

0001ad08 <loadSharedObject@@Base>:
   1ad08:	push	{r4, lr}
   1ad0c:	movw	r1, #258	; 0x102
   1ad10:	bl	149a0 <dlopen@plt>
   1ad14:	subs	r4, r0, #0
   1ad18:	beq	1ad24 <loadSharedObject@@Base+0x1c>
   1ad1c:	mov	r0, r4
   1ad20:	pop	{r4, pc}
   1ad24:	bl	147cc <dlerror@plt>
   1ad28:	ldr	r1, [pc, #16]	; 1ad40 <loadSharedObject@@Base+0x38>
   1ad2c:	add	r1, pc, r1
   1ad30:	mov	r2, r0
   1ad34:	mov	r0, #3
   1ad38:	bl	17b84 <logMessage@@Base>
   1ad3c:	b	1ad1c <loadSharedObject@@Base+0x14>
   1ad40:	ldrdeq	r5, [r0], -r0

0001ad44 <unloadSharedObject@@Base>:
   1ad44:	b	1485c <dlclose@plt>

0001ad48 <findSharedSymbol@@Base>:
   1ad48:	push	{r4, r5, r6, lr}
   1ad4c:	mov	r4, r0
   1ad50:	mov	r6, r1
   1ad54:	mov	r5, r2
   1ad58:	bl	147cc <dlerror@plt>
   1ad5c:	mov	r1, r6
   1ad60:	mov	r0, r4
   1ad64:	bl	14d00 <dlsym@plt>
   1ad68:	str	r0, [r5]
   1ad6c:	bl	147cc <dlerror@plt>
   1ad70:	subs	r2, r0, #0
   1ad74:	beq	1ad90 <findSharedSymbol@@Base+0x48>
   1ad78:	ldr	r1, [pc, #24]	; 1ad98 <findSharedSymbol@@Base+0x50>
   1ad7c:	mov	r0, #3
   1ad80:	add	r1, pc, r1
   1ad84:	bl	17b84 <logMessage@@Base>
   1ad88:	mov	r0, #0
   1ad8c:	pop	{r4, r5, r6, pc}
   1ad90:	mov	r0, #1
   1ad94:	pop	{r4, r5, r6, pc}
   1ad98:	andeq	r5, r0, ip, ror sp

0001ad9c <synchronousBeep@@Base>:
   1ad9c:	mov	r0, #0
   1ada0:	bx	lr

0001ada4 <asynchronousBeep@@Base>:
   1ada4:	push	{r4, r5, r6, lr}
   1ada8:	mov	r5, r0
   1adac:	mov	r4, r1
   1adb0:	bl	18be0 <getConsole@@Base>
   1adb4:	subs	r3, r0, #0
   1adb8:	beq	1ae04 <asynchronousBeep@@Base+0x60>
   1adbc:	bl	14a30 <fileno@plt>
   1adc0:	mov	r1, r5
   1adc4:	lsl	r4, r4, #16
   1adc8:	mov	r6, r0
   1adcc:	movw	r0, #13532	; 0x34dc
   1add0:	movt	r0, #18
   1add4:	bl	1fee0 <saveDataItem@@Base+0x254>
   1add8:	movw	r1, #19248	; 0x4b30
   1addc:	orr	r2, r4, r0
   1ade0:	mov	r0, r6
   1ade4:	bl	149c4 <ioctl@plt>
   1ade8:	cmn	r0, #1
   1adec:	beq	1adf8 <asynchronousBeep@@Base+0x54>
   1adf0:	mov	r0, #1
   1adf4:	pop	{r4, r5, r6, pc}
   1adf8:	ldr	r0, [pc, #12]	; 1ae0c <asynchronousBeep@@Base+0x68>
   1adfc:	add	r0, pc, r0
   1ae00:	bl	17c4c <logSystemError@@Base>
   1ae04:	mov	r0, #0
   1ae08:	pop	{r4, r5, r6, pc}
   1ae0c:	andeq	r5, r0, r8, ror pc

0001ae10 <startBeep@@Base>:
   1ae10:	push	{r3, r4, r5, lr}
   1ae14:	mov	r4, r0
   1ae18:	bl	18be0 <getConsole@@Base>
   1ae1c:	subs	r3, r0, #0
   1ae20:	beq	1ae68 <startBeep@@Base+0x58>
   1ae24:	bl	14a30 <fileno@plt>
   1ae28:	mov	r1, r4
   1ae2c:	mov	r5, r0
   1ae30:	movw	r0, #13532	; 0x34dc
   1ae34:	movt	r0, #18
   1ae38:	bl	1fee0 <saveDataItem@@Base+0x254>
   1ae3c:	movw	r1, #19247	; 0x4b2f
   1ae40:	mov	r2, r0
   1ae44:	mov	r0, r5
   1ae48:	bl	149c4 <ioctl@plt>
   1ae4c:	cmn	r0, #1
   1ae50:	beq	1ae5c <startBeep@@Base+0x4c>
   1ae54:	mov	r0, #1
   1ae58:	pop	{r3, r4, r5, pc}
   1ae5c:	ldr	r0, [pc, #12]	; 1ae70 <startBeep@@Base+0x60>
   1ae60:	add	r0, pc, r0
   1ae64:	bl	17c4c <logSystemError@@Base>
   1ae68:	mov	r0, #0
   1ae6c:	pop	{r3, r4, r5, pc}
   1ae70:	andeq	r5, r0, r4, lsr #30

0001ae74 <stopBeep@@Base>:
   1ae74:	push	{r3, lr}
   1ae78:	bl	18be0 <getConsole@@Base>
   1ae7c:	subs	r3, r0, #0
   1ae80:	beq	1aeb0 <stopBeep@@Base+0x3c>
   1ae84:	bl	14a30 <fileno@plt>
   1ae88:	movw	r1, #19247	; 0x4b2f
   1ae8c:	mov	r2, #0
   1ae90:	bl	149c4 <ioctl@plt>
   1ae94:	cmn	r0, #1
   1ae98:	beq	1aea4 <stopBeep@@Base+0x30>
   1ae9c:	mov	r0, #1
   1aea0:	pop	{r3, pc}
   1aea4:	ldr	r0, [pc, #12]	; 1aeb8 <stopBeep@@Base+0x44>
   1aea8:	add	r0, pc, r0
   1aeac:	bl	17c4c <logSystemError@@Base>
   1aeb0:	mov	r0, #0
   1aeb4:	pop	{r3, pc}
   1aeb8:	ldrdeq	r5, [r0], -ip

0001aebc <endBeep@@Base>:
   1aebc:	bx	lr

0001aec0 <closePcmDevice@@Base>:
   1aec0:	push	{r4, lr}
   1aec4:	mov	r4, r0
   1aec8:	ldr	r0, [r0]
   1aecc:	bl	14940 <close@plt>
   1aed0:	mov	r0, r4
   1aed4:	pop	{r4, lr}
   1aed8:	b	147fc <free@plt>

0001aedc <writePcmData@@Base>:
   1aedc:	push	{r3, lr}
   1aee0:	ldr	r0, [r0]
   1aee4:	bl	1a594 <writeData@@Base>
   1aee8:	adds	r0, r0, #1
   1aeec:	movne	r0, #1
   1aef0:	pop	{r3, pc}

0001aef4 <getPcmBlockSize@@Base>:
   1aef4:	ldr	r3, [pc, #120]	; 1af74 <getPcmBlockSize@@Base+0x80>
   1aef8:	mov	ip, #7
   1aefc:	push	{r4, r5, lr}
   1af00:	add	r3, pc, r3
   1af04:	ldr	lr, [pc, #108]	; 1af78 <getPcmBlockSize@@Base+0x84>
   1af08:	sub	sp, sp, #20
   1af0c:	add	r2, sp, #16
   1af10:	movt	ip, #65535	; 0xffff
   1af14:	mov	r5, r0
   1af18:	movw	r1, #20490	; 0x500a
   1af1c:	ldr	r4, [r3, lr]
   1af20:	movt	r1, #49156	; 0xc004
   1af24:	str	ip, [r2, #-12]!
   1af28:	ldr	r0, [r0]
   1af2c:	ldr	r3, [r4]
   1af30:	str	r3, [sp, #12]
   1af34:	bl	149c4 <ioctl@plt>
   1af38:	add	r2, sp, #8
   1af3c:	ldr	r0, [r5]
   1af40:	movw	r1, #20484	; 0x5004
   1af44:	movt	r1, #49156	; 0xc004
   1af48:	bl	149c4 <ioctl@plt>
   1af4c:	ldr	r2, [sp, #12]
   1af50:	ldr	r3, [r4]
   1af54:	cmn	r0, #1
   1af58:	ldrne	r0, [sp, #8]
   1af5c:	moveq	r0, #128	; 0x80
   1af60:	cmp	r2, r3
   1af64:	bne	1af70 <getPcmBlockSize@@Base+0x7c>
   1af68:	add	sp, sp, #20
   1af6c:	pop	{r4, r5, pc}
   1af70:	bl	14a60 <__stack_chk_fail@plt>
   1af74:	strdeq	r9, [r1], -r8
   1af78:	andeq	r0, r0, ip, lsr #4

0001af7c <getPcmSampleRate@@Base>:
   1af7c:	ldr	r0, [r0, #8]
   1af80:	bx	lr

0001af84 <setPcmSampleRate@@Base>:
   1af84:	push	{r4, lr}
   1af88:	sub	sp, sp, #8
   1af8c:	add	r2, sp, #8
   1af90:	mov	r4, r0
   1af94:	ldr	r0, [r0]
   1af98:	str	r1, [r2, #-4]!
   1af9c:	movw	r1, #20482	; 0x5002
   1afa0:	movt	r1, #49156	; 0xc004
   1afa4:	bl	149c4 <ioctl@plt>
   1afa8:	cmn	r0, #1
   1afac:	mov	r0, r4
   1afb0:	ldrne	r3, [sp, #4]
   1afb4:	strne	r3, [r4, #8]
   1afb8:	bl	1af7c <getPcmSampleRate@@Base>
   1afbc:	add	sp, sp, #8
   1afc0:	pop	{r4, pc}

0001afc4 <getPcmChannelCount@@Base>:
   1afc4:	ldr	r0, [r0, #12]
   1afc8:	bx	lr

0001afcc <setPcmChannelCount@@Base>:
   1afcc:	push	{r4, lr}
   1afd0:	sub	sp, sp, #8
   1afd4:	add	r2, sp, #8
   1afd8:	mov	r4, r0
   1afdc:	ldr	r0, [r0]
   1afe0:	str	r1, [r2, #-4]!
   1afe4:	movw	r1, #20486	; 0x5006
   1afe8:	movt	r1, #49156	; 0xc004
   1afec:	bl	149c4 <ioctl@plt>
   1aff0:	cmn	r0, #1
   1aff4:	mov	r0, r4
   1aff8:	ldrne	r3, [sp, #4]
   1affc:	strne	r3, [r4, #12]
   1b000:	bl	1afc4 <getPcmChannelCount@@Base>
   1b004:	add	sp, sp, #8
   1b008:	pop	{r4, pc}

0001b00c <openPcmDevice@@Base>:
   1b00c:	push	{r4, r5, r6, lr}
   1b010:	mov	r6, r0
   1b014:	mov	r0, #16
   1b018:	mov	r5, r1
   1b01c:	bl	14b74 <malloc@plt>
   1b020:	subs	r4, r0, #0
   1b024:	beq	1b100 <openPcmDevice@@Base+0xf4>
   1b028:	ldrb	r3, [r5]
   1b02c:	cmp	r3, #0
   1b030:	beq	1b0ac <openPcmDevice@@Base+0xa0>
   1b034:	mov	r0, r5
   1b038:	movw	r1, #2049	; 0x801
   1b03c:	bl	14a0c <open@plt>
   1b040:	cmn	r0, #1
   1b044:	str	r0, [r4]
   1b048:	beq	1b0cc <openPcmDevice@@Base+0xc0>
   1b04c:	mov	r1, #1
   1b050:	bl	1a6f8 <setBlockingIo@@Base>
   1b054:	mov	r2, r4
   1b058:	mov	r3, #196608	; 0x30000
   1b05c:	movw	r1, #19830	; 0x4d76
   1b060:	str	r3, [r4, #4]
   1b064:	movt	r1, #32772	; 0x8004
   1b068:	ldr	r0, [r2], #4
   1b06c:	bl	149c4 <ioctl@plt>
   1b070:	cmn	r0, #1
   1b074:	beq	1b0b8 <openPcmDevice@@Base+0xac>
   1b078:	ldr	r1, [pc, #148]	; 1b114 <openPcmDevice@@Base+0x108>
   1b07c:	mov	r0, #7
   1b080:	ldr	r2, [r4, #4]
   1b084:	add	r1, pc, r1
   1b088:	bl	17b84 <logMessage@@Base>
   1b08c:	mov	r0, r4
   1b090:	mov	r1, #8000	; 0x1f40
   1b094:	bl	1af84 <setPcmSampleRate@@Base>
   1b098:	mov	r0, r4
   1b09c:	mov	r1, #1
   1b0a0:	bl	1afcc <setPcmChannelCount@@Base>
   1b0a4:	mov	r0, r4
   1b0a8:	pop	{r4, r5, r6, pc}
   1b0ac:	ldr	r5, [pc, #100]	; 1b118 <openPcmDevice@@Base+0x10c>
   1b0b0:	add	r5, pc, r5
   1b0b4:	b	1b034 <openPcmDevice@@Base+0x28>
   1b0b8:	ldr	r1, [pc, #92]	; 1b11c <openPcmDevice@@Base+0x110>
   1b0bc:	mov	r0, r6
   1b0c0:	add	r1, pc, r1
   1b0c4:	bl	17b84 <logMessage@@Base>
   1b0c8:	b	1b078 <openPcmDevice@@Base+0x6c>
   1b0cc:	bl	14c4c <__errno_location@plt>
   1b0d0:	ldr	r0, [r0]
   1b0d4:	bl	14838 <strerror@plt>
   1b0d8:	ldr	r1, [pc, #64]	; 1b120 <openPcmDevice@@Base+0x114>
   1b0dc:	mov	r2, r5
   1b0e0:	add	r1, pc, r1
   1b0e4:	mov	r3, r0
   1b0e8:	mov	r0, r6
   1b0ec:	bl	17b84 <logMessage@@Base>
   1b0f0:	mov	r0, r4
   1b0f4:	bl	147fc <free@plt>
   1b0f8:	mov	r0, #0
   1b0fc:	pop	{r4, r5, r6, pc}
   1b100:	ldr	r0, [pc, #28]	; 1b124 <openPcmDevice@@Base+0x118>
   1b104:	add	r0, pc, r0
   1b108:	bl	17c4c <logSystemError@@Base>
   1b10c:	mov	r0, r4
   1b110:	pop	{r4, r5, r6, pc}
   1b114:	andeq	r5, r0, ip, lsr sp
   1b118:	andeq	r5, r0, r4, ror #25
   1b11c:	andeq	r5, r0, r0, ror #25
   1b120:	strdeq	r5, [r0], -ip
   1b124:	strdeq	r5, [r0], -r8

0001b128 <getPcmAmplitudeFormat@@Base>:
   1b128:	ldr	r0, [r0]
   1b12c:	mov	r1, #0
   1b130:	b	1a738 <setCloseOnExec@@Base+0x20>

0001b134 <setPcmAmplitudeFormat@@Base>:
   1b134:	cmp	r1, #0
   1b138:	beq	1b174 <setPcmAmplitudeFormat@@Base+0x40>
   1b13c:	ldr	r3, [pc, #60]	; 1b180 <setPcmAmplitudeFormat@@Base+0x4c>
   1b140:	add	r3, pc, r3
   1b144:	add	r3, r3, #8
   1b148:	b	1b154 <setPcmAmplitudeFormat@@Base+0x20>
   1b14c:	cmp	r2, r1
   1b150:	beq	1b168 <setPcmAmplitudeFormat@@Base+0x34>
   1b154:	ldr	r2, [r3]
   1b158:	mov	ip, r3
   1b15c:	add	r3, r3, #8
   1b160:	cmp	r2, #8
   1b164:	bne	1b14c <setPcmAmplitudeFormat@@Base+0x18>
   1b168:	ldr	r0, [r0]
   1b16c:	ldr	r1, [ip, #4]
   1b170:	b	1a738 <setCloseOnExec@@Base+0x20>
   1b174:	ldr	ip, [pc, #8]	; 1b184 <setPcmAmplitudeFormat@@Base+0x50>
   1b178:	add	ip, pc, ip
   1b17c:	b	1b168 <setPcmAmplitudeFormat@@Base+0x34>
   1b180:	strdeq	r5, [r0], -r4
   1b184:			; <UNDEFINED> instruction: 0x00005abc

0001b188 <forcePcmOutput@@Base>:
   1b188:	ldr	r0, [r0]
   1b18c:	movw	r1, #20488	; 0x5008
   1b190:	mov	r2, #0
   1b194:	b	149c4 <ioctl@plt>

0001b198 <awaitPcmOutput@@Base>:
   1b198:	ldr	r0, [r0]
   1b19c:	movw	r1, #20481	; 0x5001
   1b1a0:	mov	r2, #0
   1b1a4:	b	149c4 <ioctl@plt>

0001b1a8 <cancelPcmOutput@@Base>:
   1b1a8:	ldr	r0, [r0]
   1b1ac:	mov	r1, #20480	; 0x5000
   1b1b0:	mov	r2, #0
   1b1b4:	b	149c4 <ioctl@plt>

0001b1b8 <seqbuf_dump@@Base>:
   1b1b8:	push	{r4, lr}
   1b1bc:	ldr	r4, [pc, #68]	; 1b208 <seqbuf_dump@@Base+0x50>
   1b1c0:	add	r4, pc, r4
   1b1c4:	ldr	r1, [r4]
   1b1c8:	ldr	r2, [r1, #140]	; 0x8c
   1b1cc:	cmp	r2, #0
   1b1d0:	bne	1b1e0 <seqbuf_dump@@Base+0x28>
   1b1d4:	mov	r3, #0
   1b1d8:	str	r3, [r1, #140]	; 0x8c
   1b1dc:	pop	{r4, pc}
   1b1e0:	ldr	r0, [r1], #8
   1b1e4:	bl	1a594 <writeData@@Base>
   1b1e8:	cmn	r0, #1
   1b1ec:	beq	1b1f8 <seqbuf_dump@@Base+0x40>
   1b1f0:	ldr	r1, [r4]
   1b1f4:	b	1b1d4 <seqbuf_dump@@Base+0x1c>
   1b1f8:	ldr	r0, [pc, #12]	; 1b20c <seqbuf_dump@@Base+0x54>
   1b1fc:	add	r0, pc, r0
   1b200:	bl	17c4c <logSystemError@@Base>
   1b204:	b	1b1f0 <seqbuf_dump@@Base+0x38>
   1b208:	andeq	r9, r1, ip, lsr r1
   1b20c:	andeq	r5, r0, r8, lsl ip

0001b210 <openMidiDevice@@Base>:
   1b210:	ldr	r3, [pc, #744]	; 1b500 <openMidiDevice@@Base+0x2f0>
   1b214:	ldr	r2, [pc, #744]	; 1b504 <openMidiDevice@@Base+0x2f4>
   1b218:	add	r3, pc, r3
   1b21c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b220:	sub	sp, sp, #172	; 0xac
   1b224:	ldr	r2, [r3, r2]
   1b228:	mov	sl, r0
   1b22c:	mov	r0, #144	; 0x90
   1b230:	mov	r5, r1
   1b234:	ldr	r3, [r2]
   1b238:	str	r2, [sp, #8]
   1b23c:	str	r3, [sp, #164]	; 0xa4
   1b240:	bl	14b74 <malloc@plt>
   1b244:	subs	r4, r0, #0
   1b248:	beq	1b4e8 <openMidiDevice@@Base+0x2d8>
   1b24c:	ldrb	r3, [r5]
   1b250:	cmp	r3, #0
   1b254:	beq	1b400 <openMidiDevice@@Base+0x1f0>
   1b258:	mov	r0, r5
   1b25c:	mov	r1, #1
   1b260:	bl	14a0c <open@plt>
   1b264:	cmn	r0, #1
   1b268:	str	r0, [r4]
   1b26c:	beq	1b4b4 <openMidiDevice@@Base+0x2a4>
   1b270:	add	r9, sp, #16
   1b274:	movw	r1, #20746	; 0x510a
   1b278:	movt	r1, #32772	; 0x8004
   1b27c:	mvn	r6, #0
   1b280:	mov	r2, r9
   1b284:	str	r6, [sp, #20]
   1b288:	bl	149c4 <ioctl@plt>
   1b28c:	cmp	r0, r6
   1b290:	mov	r5, r0
   1b294:	beq	1b45c <openMidiDevice@@Base+0x24c>
   1b298:	ldr	r3, [sp, #16]
   1b29c:	cmp	r3, #0
   1b2a0:	ble	1b4ac <openMidiDevice@@Base+0x29c>
   1b2a4:	ldr	r1, [pc, #604]	; 1b508 <openMidiDevice@@Base+0x2f8>
   1b2a8:	add	r5, sp, #24
   1b2ac:	ldr	r7, [pc, #600]	; 1b50c <openMidiDevice@@Base+0x2fc>
   1b2b0:	mov	r8, r6
   1b2b4:	add	r1, pc, r1
   1b2b8:	mov	fp, #0
   1b2bc:	str	r1, [sp, #12]
   1b2c0:	add	r7, pc, r7
   1b2c4:	b	1b31c <openMidiDevice@@Base+0x10c>
   1b2c8:	ldr	r2, [sp, #60]	; 0x3c
   1b2cc:	cmp	r2, #0
   1b2d0:	moveq	r6, fp
   1b2d4:	beq	1b30c <openMidiDevice@@Base+0xfc>
   1b2d8:	cmp	r2, #1
   1b2dc:	ldr	r3, [sp, #64]	; 0x40
   1b2e0:	bne	1b2fc <openMidiDevice@@Base+0xec>
   1b2e4:	cmp	r3, #16
   1b2e8:	streq	fp, [sp, #20]
   1b2ec:	beq	1b30c <openMidiDevice@@Base+0xfc>
   1b2f0:	cmp	r3, #32
   1b2f4:	moveq	r8, fp
   1b2f8:	beq	1b30c <openMidiDevice@@Base+0xfc>
   1b2fc:	str	r5, [sp]
   1b300:	mov	r0, #7
   1b304:	mov	r1, r7
   1b308:	bl	17b84 <logMessage@@Base>
   1b30c:	ldr	r3, [sp, #16]
   1b310:	add	fp, fp, #1
   1b314:	cmp	r3, fp
   1b318:	ble	1b36c <openMidiDevice@@Base+0x15c>
   1b31c:	movw	r1, #20738	; 0x5102
   1b320:	ldr	r0, [r4]
   1b324:	movt	r1, #49292	; 0xc08c
   1b328:	mov	r2, r5
   1b32c:	str	fp, [sp, #56]	; 0x38
   1b330:	bl	149c4 <ioctl@plt>
   1b334:	cmn	r0, #1
   1b338:	bne	1b2c8 <openMidiDevice@@Base+0xb8>
   1b33c:	bl	14c4c <__errno_location@plt>
   1b340:	ldr	r0, [r0]
   1b344:	bl	14838 <strerror@plt>
   1b348:	mov	r2, fp
   1b34c:	ldr	r1, [sp, #12]
   1b350:	add	fp, fp, #1
   1b354:	mov	r3, r0
   1b358:	mov	r0, sl
   1b35c:	bl	17b84 <logMessage@@Base>
   1b360:	ldr	r3, [sp, #16]
   1b364:	cmp	r3, fp
   1b368:	bgt	1b31c <openMidiDevice@@Base+0x10c>
   1b36c:	ldr	r3, [sp, #20]
   1b370:	cmp	r3, #0
   1b374:	blt	1b394 <openMidiDevice@@Base+0x184>
   1b378:	movw	r1, #20745	; 0x5109
   1b37c:	ldr	r0, [r4]
   1b380:	movt	r1, #16388	; 0x4004
   1b384:	add	r2, sp, #20
   1b388:	bl	149c4 <ioctl@plt>
   1b38c:	cmn	r0, #1
   1b390:	beq	1b430 <openMidiDevice@@Base+0x220>
   1b394:	mov	r2, r9
   1b398:	movw	r1, #20747	; 0x510b
   1b39c:	ldr	r0, [r4]
   1b3a0:	movt	r1, #32772	; 0x8004
   1b3a4:	bl	149c4 <ioctl@plt>
   1b3a8:	cmn	r0, #1
   1b3ac:	mov	r5, r0
   1b3b0:	beq	1b488 <openMidiDevice@@Base+0x278>
   1b3b4:	ldr	r0, [sp, #16]
   1b3b8:	cmp	r0, #0
   1b3bc:	subgt	r5, r0, #1
   1b3c0:	ble	1b428 <openMidiDevice@@Base+0x218>
   1b3c4:	cmn	r8, #1
   1b3c8:	beq	1b40c <openMidiDevice@@Base+0x1fc>
   1b3cc:	mov	r0, r4
   1b3d0:	mov	r2, #128	; 0x80
   1b3d4:	mov	r3, #0
   1b3d8:	str	r8, [r4, #4]
   1b3dc:	str	r2, [r4, #136]	; 0x88
   1b3e0:	str	r3, [r4, #140]	; 0x8c
   1b3e4:	ldr	r1, [sp, #8]
   1b3e8:	ldr	r2, [sp, #164]	; 0xa4
   1b3ec:	ldr	r3, [r1]
   1b3f0:	cmp	r2, r3
   1b3f4:	bne	1b4fc <openMidiDevice@@Base+0x2ec>
   1b3f8:	add	sp, sp, #172	; 0xac
   1b3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b400:	ldr	r5, [pc, #264]	; 1b510 <openMidiDevice@@Base+0x300>
   1b404:	add	r5, pc, r5
   1b408:	b	1b258 <openMidiDevice@@Base+0x48>
   1b40c:	ldr	r8, [sp, #20]
   1b410:	cmp	r8, #0
   1b414:	bge	1b3cc <openMidiDevice@@Base+0x1bc>
   1b418:	cmn	r6, #1
   1b41c:	biceq	r8, r5, r5, asr #31
   1b420:	movne	r8, r6
   1b424:	b	1b3cc <openMidiDevice@@Base+0x1bc>
   1b428:	mvn	r5, #0
   1b42c:	b	1b3c4 <openMidiDevice@@Base+0x1b4>
   1b430:	bl	14c4c <__errno_location@plt>
   1b434:	ldr	r5, [sp, #20]
   1b438:	ldr	r0, [r0]
   1b43c:	bl	14838 <strerror@plt>
   1b440:	ldr	r1, [pc, #204]	; 1b514 <openMidiDevice@@Base+0x304>
   1b444:	mov	r2, r5
   1b448:	add	r1, pc, r1
   1b44c:	mov	r3, r0
   1b450:	mov	r0, sl
   1b454:	bl	17b84 <logMessage@@Base>
   1b458:	b	1b394 <openMidiDevice@@Base+0x184>
   1b45c:	bl	14c4c <__errno_location@plt>
   1b460:	mov	r6, r5
   1b464:	mov	r8, r5
   1b468:	ldr	r0, [r0]
   1b46c:	bl	14838 <strerror@plt>
   1b470:	ldr	r1, [pc, #160]	; 1b518 <openMidiDevice@@Base+0x308>
   1b474:	add	r1, pc, r1
   1b478:	mov	r2, r0
   1b47c:	mov	r0, sl
   1b480:	bl	17b84 <logMessage@@Base>
   1b484:	b	1b394 <openMidiDevice@@Base+0x184>
   1b488:	bl	14c4c <__errno_location@plt>
   1b48c:	ldr	r0, [r0]
   1b490:	bl	14838 <strerror@plt>
   1b494:	ldr	r1, [pc, #128]	; 1b51c <openMidiDevice@@Base+0x30c>
   1b498:	add	r1, pc, r1
   1b49c:	mov	r2, r0
   1b4a0:	mov	r0, sl
   1b4a4:	bl	17b84 <logMessage@@Base>
   1b4a8:	b	1b3c4 <openMidiDevice@@Base+0x1b4>
   1b4ac:	mov	r8, r6
   1b4b0:	b	1b36c <openMidiDevice@@Base+0x15c>
   1b4b4:	bl	14c4c <__errno_location@plt>
   1b4b8:	ldr	r0, [r0]
   1b4bc:	bl	14838 <strerror@plt>
   1b4c0:	ldr	r1, [pc, #88]	; 1b520 <openMidiDevice@@Base+0x310>
   1b4c4:	mov	r2, r5
   1b4c8:	add	r1, pc, r1
   1b4cc:	mov	r3, r0
   1b4d0:	mov	r0, sl
   1b4d4:	bl	17b84 <logMessage@@Base>
   1b4d8:	mov	r0, r4
   1b4dc:	bl	147fc <free@plt>
   1b4e0:	mov	r0, #0
   1b4e4:	b	1b3e4 <openMidiDevice@@Base+0x1d4>
   1b4e8:	ldr	r0, [pc, #52]	; 1b524 <openMidiDevice@@Base+0x314>
   1b4ec:	add	r0, pc, r0
   1b4f0:	bl	17c4c <logSystemError@@Base>
   1b4f4:	mov	r0, r4
   1b4f8:	b	1b3e4 <openMidiDevice@@Base+0x1d4>
   1b4fc:	bl	14a60 <__stack_chk_fail@plt>
   1b500:	andeq	r8, r1, r0, ror #27
   1b504:	andeq	r0, r0, ip, lsr #4
   1b508:	muleq	r0, ip, fp
   1b50c:	andeq	r5, r0, r0, ror fp
   1b510:	andeq	r5, r0, ip, lsl sl
   1b514:	andeq	r5, r0, r8, lsr sl
   1b518:	andeq	r5, r0, ip, lsr sl
   1b51c:	andeq	r5, r0, r0, asr #20
   1b520:	andeq	r5, r0, r4, lsr sl
   1b524:	andeq	r5, r0, r0, lsr sl

0001b528 <closeMidiDevice@@Base>:
   1b528:	push	{r4, lr}
   1b52c:	mov	r4, r0
   1b530:	ldr	r0, [r0]
   1b534:	bl	14940 <close@plt>
   1b538:	mov	r0, r4
   1b53c:	pop	{r4, lr}
   1b540:	b	147fc <free@plt>

0001b544 <flushMidiDevice@@Base>:
   1b544:	push	{r4, lr}
   1b548:	ldr	r4, [pc, #24]	; 1b568 <flushMidiDevice@@Base+0x24>
   1b54c:	add	r4, pc, r4
   1b550:	str	r0, [r4]
   1b554:	bl	1b1b8 <seqbuf_dump@@Base>
   1b558:	mov	r3, #0
   1b55c:	mov	r0, #1
   1b560:	str	r3, [r4]
   1b564:	pop	{r4, pc}
   1b568:			; <UNDEFINED> instruction: 0x00018db0

0001b56c <setMidiInstrument@@Base>:
   1b56c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b570:	mov	r4, r0
   1b574:	ldr	r0, [r0, #140]	; 0x8c
   1b578:	mov	r9, r2
   1b57c:	ldr	r5, [pc, #124]	; 1b600 <setMidiInstrument@@Base+0x94>
   1b580:	mov	sl, r1
   1b584:	ldr	r3, [r4, #136]	; 0x88
   1b588:	add	r2, r0, #7
   1b58c:	add	r5, pc, r5
   1b590:	cmp	r2, r3
   1b594:	str	r4, [r5]
   1b598:	movlt	ip, r4
   1b59c:	blt	1b5ac <setMidiInstrument@@Base+0x40>
   1b5a0:	bl	1b1b8 <seqbuf_dump@@Base>
   1b5a4:	ldr	ip, [r5]
   1b5a8:	ldr	r0, [ip, #140]	; 0x8c
   1b5ac:	add	r3, ip, r0
   1b5b0:	mvn	r2, #109	; 0x6d
   1b5b4:	add	r6, r0, #14
   1b5b8:	ldr	r5, [pc, #68]	; 1b604 <setMidiInstrument@@Base+0x98>
   1b5bc:	strb	r2, [r3, #8]
   1b5c0:	mvn	r7, #63	; 0x3f
   1b5c4:	ldr	r8, [r4, #4]
   1b5c8:	add	r5, pc, r5
   1b5cc:	mov	r4, #0
   1b5d0:	strb	sl, [r3, #11]
   1b5d4:	strb	r9, [r3, #12]
   1b5d8:	mov	r0, #1
   1b5dc:	strb	r8, [r3, #9]
   1b5e0:	strb	r7, [r3, #10]
   1b5e4:	strb	r4, [r3, #13]
   1b5e8:	strh	r4, [ip, r6]
   1b5ec:	ldr	r3, [ip, #140]	; 0x8c
   1b5f0:	str	r4, [r5]
   1b5f4:	add	r3, r3, #8
   1b5f8:	str	r3, [ip, #140]	; 0x8c
   1b5fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b600:	andeq	r8, r1, r0, ror sp
   1b604:	andeq	r8, r1, r4, lsr sp

0001b608 <beginMidiBlock@@Base>:
   1b608:	push	{r4, lr}
   1b60c:	ldr	r2, [r0, #140]	; 0x8c
   1b610:	ldr	r3, [r0, #136]	; 0x88
   1b614:	ldr	r4, [pc, #104]	; 1b684 <beginMidiBlock@@Base+0x7c>
   1b618:	add	r1, r2, #7
   1b61c:	cmp	r1, r3
   1b620:	add	r4, pc, r4
   1b624:	movlt	r3, r0
   1b628:	str	r0, [r4]
   1b62c:	blt	1b63c <beginMidiBlock@@Base+0x34>
   1b630:	bl	1b1b8 <seqbuf_dump@@Base>
   1b634:	ldr	r3, [r4]
   1b638:	ldr	r2, [r3, #140]	; 0x8c
   1b63c:	add	r1, r3, r2
   1b640:	add	r4, r2, #12
   1b644:	ldr	ip, [pc, #60]	; 1b688 <beginMidiBlock@@Base+0x80>
   1b648:	mvn	r0, #126	; 0x7e
   1b64c:	mov	r2, #4
   1b650:	strb	r0, [r1, #8]
   1b654:	strb	r2, [r1, #9]
   1b658:	add	ip, pc, ip
   1b65c:	mov	r2, #0
   1b660:	strb	r2, [r1, #10]
   1b664:	strb	r2, [r1, #11]
   1b668:	mov	r0, #1
   1b66c:	str	r2, [r3, r4]
   1b670:	ldr	r1, [r3, #140]	; 0x8c
   1b674:	str	r2, [ip]
   1b678:	add	r2, r1, #8
   1b67c:	str	r2, [r3, #140]	; 0x8c
   1b680:	pop	{r4, pc}
   1b684:	ldrdeq	r8, [r1], -ip
   1b688:	andeq	r8, r1, r4, lsr #25

0001b68c <endMidiBlock@@Base>:
   1b68c:	push	{r3, r4, r5, lr}
   1b690:	mov	r4, r0
   1b694:	ldr	r1, [r0, #140]	; 0x8c
   1b698:	ldr	r3, [r0, #136]	; 0x88
   1b69c:	ldr	r5, [pc, #120]	; 1b71c <endMidiBlock@@Base+0x90>
   1b6a0:	add	r2, r1, #7
   1b6a4:	cmp	r2, r3
   1b6a8:	add	r5, pc, r5
   1b6ac:	movlt	r3, r0
   1b6b0:	str	r0, [r5]
   1b6b4:	blt	1b6c4 <endMidiBlock@@Base+0x38>
   1b6b8:	bl	1b1b8 <seqbuf_dump@@Base>
   1b6bc:	ldr	r3, [r5]
   1b6c0:	ldr	r1, [r3, #140]	; 0x8c
   1b6c4:	add	r2, r3, r1
   1b6c8:	add	r1, r1, #12
   1b6cc:	mov	r5, #0
   1b6d0:	mvn	ip, #126	; 0x7e
   1b6d4:	strb	r5, [r2, #10]
   1b6d8:	mov	r0, #3
   1b6dc:	strb	ip, [r2, #8]
   1b6e0:	strb	r0, [r2, #9]
   1b6e4:	strb	r5, [r2, #11]
   1b6e8:	str	r5, [r3, r1]
   1b6ec:	ldr	r2, [r3, #140]	; 0x8c
   1b6f0:	add	r2, r2, #8
   1b6f4:	str	r2, [r3, #140]	; 0x8c
   1b6f8:	bl	1b1b8 <seqbuf_dump@@Base>
   1b6fc:	ldr	r0, [r4]
   1b700:	movw	r1, #20737	; 0x5101
   1b704:	bl	149c4 <ioctl@plt>
   1b708:	ldr	r3, [pc, #16]	; 1b720 <endMidiBlock@@Base+0x94>
   1b70c:	mov	r0, #1
   1b710:	add	r3, pc, r3
   1b714:	str	r5, [r3]
   1b718:	pop	{r3, r4, r5, pc}
   1b71c:	andeq	r8, r1, r4, asr ip
   1b720:	andeq	r8, r1, ip, ror #23

0001b724 <startMidiNote@@Base>:
   1b724:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b728:	mov	r4, r0
   1b72c:	ldr	r0, [r0, #140]	; 0x8c
   1b730:	mov	r8, r1
   1b734:	ldr	r5, [pc, #156]	; 1b7d8 <startMidiNote@@Base+0xb4>
   1b738:	mov	r9, r2
   1b73c:	ldr	r1, [r4, #136]	; 0x88
   1b740:	add	r6, r0, #7
   1b744:	add	r5, pc, r5
   1b748:	mov	r7, r3
   1b74c:	cmp	r6, r1
   1b750:	str	r4, [r5]
   1b754:	movlt	r5, r4
   1b758:	blt	1b76c <startMidiNote@@Base+0x48>
   1b75c:	bl	1b1b8 <seqbuf_dump@@Base>
   1b760:	ldr	r5, [r5]
   1b764:	ldr	r0, [r5, #140]	; 0x8c
   1b768:	add	r6, r0, #7
   1b76c:	rsb	r3, r7, r7, lsl #7
   1b770:	movw	r7, #34079	; 0x851f
   1b774:	movt	r7, #20971	; 0x51eb
   1b778:	add	ip, r5, r0
   1b77c:	ldr	sl, [pc, #88]	; 1b7dc <startMidiNote@@Base+0xb8>
   1b780:	mvn	r2, #108	; 0x6c
   1b784:	smull	r1, r7, r7, r3
   1b788:	strb	r2, [ip, #8]
   1b78c:	ldr	r1, [r4, #4]
   1b790:	add	sl, pc, sl
   1b794:	add	r6, r5, r6
   1b798:	asr	r3, r3, #31
   1b79c:	add	r2, r0, #8
   1b7a0:	strb	r8, [ip, #11]
   1b7a4:	strb	r1, [ip, #9]
   1b7a8:	mvn	r4, #111	; 0x6f
   1b7ac:	mov	r1, #0
   1b7b0:	strb	r9, [ip, #12]
   1b7b4:	strb	r4, [ip, #10]
   1b7b8:	rsb	r7, r3, r7, asr #5
   1b7bc:	strb	r1, [ip, #14]
   1b7c0:	mov	r0, #1
   1b7c4:	strb	r7, [ip, #13]
   1b7c8:	str	r1, [sl]
   1b7cc:	strb	r1, [r6, #8]
   1b7d0:	str	r2, [r5, #140]	; 0x8c
   1b7d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b7d8:			; <UNDEFINED> instruction: 0x00018bb8
   1b7dc:	andeq	r8, r1, ip, ror #22

0001b7e0 <stopMidiNote@@Base>:
   1b7e0:	push	{r4, r5, r6, r7, r8, lr}
   1b7e4:	mov	r4, r0
   1b7e8:	ldr	r2, [r0, #140]	; 0x8c
   1b7ec:	mov	r8, r1
   1b7f0:	ldr	r3, [r0, #136]	; 0x88
   1b7f4:	ldr	r5, [pc, #120]	; 1b874 <stopMidiNote@@Base+0x94>
   1b7f8:	add	r0, r2, #7
   1b7fc:	cmp	r0, r3
   1b800:	add	r5, pc, r5
   1b804:	movlt	ip, r4
   1b808:	str	r4, [r5]
   1b80c:	blt	1b820 <stopMidiNote@@Base+0x40>
   1b810:	bl	1b1b8 <seqbuf_dump@@Base>
   1b814:	ldr	ip, [r5]
   1b818:	ldr	r2, [ip, #140]	; 0x8c
   1b81c:	add	r0, r2, #7
   1b820:	add	r3, ip, r2
   1b824:	ldr	r7, [pc, #76]	; 1b878 <stopMidiNote@@Base+0x98>
   1b828:	mvn	r1, #108	; 0x6c
   1b82c:	add	r6, ip, r0
   1b830:	strb	r1, [r3, #8]
   1b834:	add	r7, pc, r7
   1b838:	ldr	r4, [r4, #4]
   1b83c:	add	r5, r2, #8
   1b840:	strb	r8, [r3, #11]
   1b844:	mov	r2, #0
   1b848:	mvn	r0, #127	; 0x7f
   1b84c:	strb	r2, [r3, #12]
   1b850:	strb	r0, [r3, #10]
   1b854:	mov	r0, #1
   1b858:	strb	r4, [r3, #9]
   1b85c:	strb	r2, [r3, #13]
   1b860:	strb	r2, [r3, #14]
   1b864:	str	r2, [r7]
   1b868:	strb	r2, [r6, #8]
   1b86c:	str	r5, [ip, #140]	; 0x8c
   1b870:	pop	{r4, r5, r6, r7, r8, pc}
   1b874:	strdeq	r8, [r1], -ip
   1b878:	andeq	r8, r1, r8, asr #21

0001b87c <insertMidiWait@@Base>:
   1b87c:	push	{r4, r5, r6, lr}
   1b880:	mov	r5, r1
   1b884:	ldr	ip, [r0, #140]	; 0x8c
   1b888:	ldr	r3, [r0, #136]	; 0x88
   1b88c:	ldr	r4, [pc, #124]	; 1b910 <insertMidiWait@@Base+0x94>
   1b890:	add	r2, ip, #7
   1b894:	cmp	r2, r3
   1b898:	add	r4, pc, r4
   1b89c:	movlt	r3, r0
   1b8a0:	str	r0, [r4]
   1b8a4:	blt	1b8b4 <insertMidiWait@@Base+0x38>
   1b8a8:	bl	1b1b8 <seqbuf_dump@@Base>
   1b8ac:	ldr	r3, [r4]
   1b8b0:	ldr	ip, [r3, #140]	; 0x8c
   1b8b4:	add	r1, r5, #9
   1b8b8:	movw	r0, #26215	; 0x6667
   1b8bc:	movt	r0, #26214	; 0x6666
   1b8c0:	add	r2, r3, ip
   1b8c4:	asr	r5, r1, #31
   1b8c8:	add	ip, ip, #12
   1b8cc:	smull	r4, r6, r0, r1
   1b8d0:	ldr	r1, [pc, #60]	; 1b914 <insertMidiWait@@Base+0x98>
   1b8d4:	mvn	r4, #126	; 0x7e
   1b8d8:	mov	r0, #1
   1b8dc:	strb	r4, [r2, #8]
   1b8e0:	add	r1, pc, r1
   1b8e4:	mov	r4, #0
   1b8e8:	strb	r0, [r2, #9]
   1b8ec:	strb	r4, [r2, #10]
   1b8f0:	strb	r4, [r2, #11]
   1b8f4:	rsb	r5, r5, r6, asr #2
   1b8f8:	str	r5, [r3, ip]
   1b8fc:	ldr	r2, [r3, #140]	; 0x8c
   1b900:	str	r4, [r1]
   1b904:	add	r2, r2, #8
   1b908:	str	r2, [r3, #140]	; 0x8c
   1b90c:	pop	{r4, r5, r6, pc}
   1b910:	andeq	r8, r1, r4, ror #20
   1b914:	andeq	r8, r1, ip, lsl sl

0001b918 <enablePorts@@Base>:
   1b918:	push	{r4, r5, r6, lr}
   1b91c:	mov	r5, r1
   1b920:	sub	sp, sp, #8
   1b924:	mov	r1, r2
   1b928:	mov	r4, r2
   1b92c:	mov	r6, r0
   1b930:	mov	r2, #1
   1b934:	mov	r0, r5
   1b938:	bl	14b98 <ioperm@plt>
   1b93c:	cmn	r0, #1
   1b940:	movne	r0, #1
   1b944:	beq	1b950 <enablePorts@@Base+0x38>
   1b948:	add	sp, sp, #8
   1b94c:	pop	{r4, r5, r6, pc}
   1b950:	bl	14c4c <__errno_location@plt>
   1b954:	ldr	r0, [r0]
   1b958:	bl	14838 <strerror@plt>
   1b95c:	ldr	r1, [pc, #32]	; 1b984 <enablePorts@@Base+0x6c>
   1b960:	mov	r2, r5
   1b964:	mov	r3, r4
   1b968:	add	r1, pc, r1
   1b96c:	str	r0, [sp]
   1b970:	mov	r0, r6
   1b974:	bl	17b84 <logMessage@@Base>
   1b978:	mov	r0, #0
   1b97c:	add	sp, sp, #8
   1b980:	pop	{r4, r5, r6, pc}
   1b984:	andeq	r5, r0, ip, asr #11

0001b988 <disablePorts@@Base>:
   1b988:	push	{r4, r5, lr}
   1b98c:	mov	r2, #0
   1b990:	sub	sp, sp, #12
   1b994:	mov	r5, r0
   1b998:	mov	r4, r1
   1b99c:	bl	14b98 <ioperm@plt>
   1b9a0:	cmn	r0, #1
   1b9a4:	movne	r0, #1
   1b9a8:	beq	1b9b4 <disablePorts@@Base+0x2c>
   1b9ac:	add	sp, sp, #12
   1b9b0:	pop	{r4, r5, pc}
   1b9b4:	bl	14c4c <__errno_location@plt>
   1b9b8:	ldr	r0, [r0]
   1b9bc:	bl	14838 <strerror@plt>
   1b9c0:	ldr	r1, [pc, #32]	; 1b9e8 <disablePorts@@Base+0x60>
   1b9c4:	mov	r2, r5
   1b9c8:	mov	r3, r4
   1b9cc:	add	r1, pc, r1
   1b9d0:	str	r0, [sp]
   1b9d4:	mov	r0, #3
   1b9d8:	bl	17b84 <logMessage@@Base>
   1b9dc:	mov	r0, #0
   1b9e0:	add	sp, sp, #12
   1b9e4:	pop	{r4, r5, pc}
   1b9e8:	andeq	r5, r0, r8, lsl #11

0001b9ec <readPort1@@Base>:
   1b9ec:	b	14bd4 <inb@plt>

0001b9f0 <writePort1@@Base>:
   1b9f0:	mov	r3, r0
   1b9f4:	mov	r0, r1
   1b9f8:	mov	r1, r3
   1b9fc:	b	14ba4 <outb@plt>

0001ba00 <installKernelModule@@Base>:
   1ba00:	cmp	r1, #0
   1ba04:	beq	1ba14 <installKernelModule@@Base+0x14>
   1ba08:	ldr	r3, [r1]
   1ba0c:	cmp	r3, #0
   1ba10:	bne	1ba18 <installKernelModule@@Base+0x18>
   1ba14:	b	1ab60 <executeHostCommand@@Base+0x1b4>
   1ba18:	subs	r3, r3, #2
   1ba1c:	rsbs	r0, r3, #0
   1ba20:	adcs	r0, r0, r3
   1ba24:	bx	lr

0001ba28 <canBeep@@Base>:
   1ba28:	ldr	r1, [pc, #36]	; 1ba54 <canBeep@@Base+0x2c>
   1ba2c:	ldr	r0, [pc, #36]	; 1ba58 <canBeep@@Base+0x30>
   1ba30:	add	r1, pc, r1
   1ba34:	push	{r3, lr}
   1ba38:	add	r1, r1, #4
   1ba3c:	add	r0, pc, r0
   1ba40:	bl	1ba00 <installKernelModule@@Base>
   1ba44:	bl	18be0 <getConsole@@Base>
   1ba48:	adds	r0, r0, #0
   1ba4c:	movne	r0, #1
   1ba50:	pop	{r3, pc}
   1ba54:	andeq	r8, r1, ip, asr #17
   1ba58:	andeq	r5, r0, r8, lsr r5

0001ba5c <openCharacterDevice@@Base>:
   1ba5c:	ldr	ip, [pc, #716]	; 1bd30 <openCharacterDevice@@Base+0x2d4>
   1ba60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba64:	mov	r7, r1
   1ba68:	ldr	r1, [pc, #708]	; 1bd34 <openCharacterDevice@@Base+0x2d8>
   1ba6c:	add	ip, pc, ip
   1ba70:	mov	r9, r3
   1ba74:	sub	sp, sp, #124	; 0x7c
   1ba78:	mov	r3, ip
   1ba7c:	mov	sl, r2
   1ba80:	ldr	r6, [ip, r1]
   1ba84:	mov	r8, r0
   1ba88:	ldr	r3, [r6]
   1ba8c:	str	r3, [sp, #116]	; 0x74
   1ba90:	bl	18ee8 <getDevicePath@@Base>
   1ba94:	subs	r5, r0, #0
   1ba98:	beq	1bb98 <openCharacterDevice@@Base+0x13c>
   1ba9c:	mov	r1, r7
   1baa0:	bl	1482c <__open_2@plt>
   1baa4:	cmn	r0, #1
   1baa8:	mov	r4, r0
   1baac:	beq	1bb50 <openCharacterDevice@@Base+0xf4>
   1bab0:	ldr	r1, [pc, #640]	; 1bd38 <openCharacterDevice@@Base+0x2dc>
   1bab4:	mov	r0, #7
   1bab8:	mov	r2, r5
   1babc:	mov	r3, r4
   1bac0:	add	r1, pc, r1
   1bac4:	bl	17b84 <logMessage@@Base>
   1bac8:	mov	r0, #3
   1bacc:	mov	r1, r4
   1bad0:	add	r2, sp, #24
   1bad4:	bl	14b44 <__fxstat@plt>
   1bad8:	cmn	r0, #1
   1badc:	beq	1bba0 <openCharacterDevice@@Base+0x144>
   1bae0:	ldr	r3, [sp, #40]	; 0x28
   1bae4:	and	r3, r3, #61440	; 0xf000
   1bae8:	cmp	r3, #8192	; 0x2000
   1baec:	beq	1bb2c <openCharacterDevice@@Base+0xd0>
   1baf0:	ldr	r1, [pc, #580]	; 1bd3c <openCharacterDevice@@Base+0x2e0>
   1baf4:	mov	r0, #7
   1baf8:	mov	r2, r5
   1bafc:	mov	r3, r4
   1bb00:	add	r1, pc, r1
   1bb04:	bl	17b84 <logMessage@@Base>
   1bb08:	mov	r0, r4
   1bb0c:	bl	14940 <close@plt>
   1bb10:	ldr	r1, [pc, #552]	; 1bd40 <openCharacterDevice@@Base+0x2e4>
   1bb14:	mov	r3, r4
   1bb18:	mov	r0, #7
   1bb1c:	add	r1, pc, r1
   1bb20:	mov	r2, r5
   1bb24:	mvn	r4, #0
   1bb28:	bl	17b84 <logMessage@@Base>
   1bb2c:	mov	r0, r5
   1bb30:	bl	147fc <free@plt>
   1bb34:	ldr	r2, [sp, #116]	; 0x74
   1bb38:	mov	r0, r4
   1bb3c:	ldr	r3, [r6]
   1bb40:	cmp	r2, r3
   1bb44:	bne	1bce8 <openCharacterDevice@@Base+0x28c>
   1bb48:	add	sp, sp, #124	; 0x7c
   1bb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb50:	bl	14c4c <__errno_location@plt>
   1bb54:	ldr	r3, [pc, #488]	; 1bd44 <openCharacterDevice@@Base+0x2e8>
   1bb58:	add	r3, pc, r3
   1bb5c:	str	r3, [sp, #12]
   1bb60:	mov	fp, r0
   1bb64:	ldr	r0, [r0]
   1bb68:	bl	14838 <strerror@plt>
   1bb6c:	ldr	r1, [sp, #12]
   1bb70:	mov	r2, r5
   1bb74:	mov	r3, r0
   1bb78:	mov	r0, #7
   1bb7c:	bl	17b84 <logMessage@@Base>
   1bb80:	ldr	r3, [fp]
   1bb84:	cmp	r3, #2
   1bb88:	beq	1bbcc <openCharacterDevice@@Base+0x170>
   1bb8c:	cmp	r5, #0
   1bb90:	mvnne	r4, #0
   1bb94:	bne	1bb2c <openCharacterDevice@@Base+0xd0>
   1bb98:	mvn	r4, #0
   1bb9c:	b	1bb34 <openCharacterDevice@@Base+0xd8>
   1bba0:	bl	14c4c <__errno_location@plt>
   1bba4:	ldr	r0, [r0]
   1bba8:	bl	14838 <strerror@plt>
   1bbac:	ldr	r1, [pc, #404]	; 1bd48 <openCharacterDevice@@Base+0x2ec>
   1bbb0:	mov	r2, r4
   1bbb4:	mov	r3, r5
   1bbb8:	add	r1, pc, r1
   1bbbc:	str	r0, [sp]
   1bbc0:	mov	r0, #7
   1bbc4:	bl	17b84 <logMessage@@Base>
   1bbc8:	b	1bb08 <openCharacterDevice@@Base+0xac>
   1bbcc:	mov	r0, r5
   1bbd0:	bl	147fc <free@plt>
   1bbd4:	mov	r0, r8
   1bbd8:	bl	17e98 <locatePathName@@Base>
   1bbdc:	bl	183a8 <makeWritablePath@@Base>
   1bbe0:	subs	r5, r0, #0
   1bbe4:	beq	1bb98 <openCharacterDevice@@Base+0x13c>
   1bbe8:	mov	r1, r7
   1bbec:	bl	1482c <__open_2@plt>
   1bbf0:	cmn	r0, #1
   1bbf4:	mov	r4, r0
   1bbf8:	beq	1bc18 <openCharacterDevice@@Base+0x1bc>
   1bbfc:	ldr	r1, [pc, #328]	; 1bd4c <openCharacterDevice@@Base+0x2f0>
   1bc00:	mov	r0, #7
   1bc04:	mov	r2, r5
   1bc08:	mov	r3, r4
   1bc0c:	add	r1, pc, r1
   1bc10:	bl	17b84 <logMessage@@Base>
   1bc14:	b	1bac8 <openCharacterDevice@@Base+0x6c>
   1bc18:	ldr	r0, [fp]
   1bc1c:	bl	14838 <strerror@plt>
   1bc20:	ldr	r1, [sp, #12]
   1bc24:	mov	r2, r5
   1bc28:	mov	r3, r0
   1bc2c:	mov	r0, #7
   1bc30:	bl	17b84 <logMessage@@Base>
   1bc34:	ldr	r3, [fp]
   1bc38:	cmp	r3, #2
   1bc3c:	bne	1bb8c <openCharacterDevice@@Base+0x130>
   1bc40:	bic	lr, r9, #255	; 0xff
   1bc44:	ubfx	r8, sl, #0, #12
   1bc48:	bic	r3, sl, #4080	; 0xff0
   1bc4c:	uxtb	r4, r9
   1bc50:	lsr	r1, lr, #20
   1bc54:	lsl	r0, lr, #12
   1bc58:	add	lr, sp, #120	; 0x78
   1bc5c:	bic	r3, r3, #15
   1bc60:	mov	r2, #0
   1bc64:	orr	r4, r4, r8, lsl #8
   1bc68:	orr	r2, r2, r0
   1bc6c:	orr	r3, r3, r1
   1bc70:	orr	r2, r2, r4
   1bc74:	mov	r0, #1
   1bc78:	strd	r2, [lr, #-104]!	; 0xffffff98
   1bc7c:	mov	r1, r5
   1bc80:	mov	r2, #8576	; 0x2180
   1bc84:	mov	r3, lr
   1bc88:	bl	14844 <__xmknod@plt>
   1bc8c:	cmn	r0, #1
   1bc90:	beq	1bcec <openCharacterDevice@@Base+0x290>
   1bc94:	ldr	r1, [pc, #180]	; 1bd50 <openCharacterDevice@@Base+0x2f4>
   1bc98:	mov	r0, #7
   1bc9c:	mov	r2, r5
   1bca0:	mov	r3, #8576	; 0x2180
   1bca4:	add	r1, pc, r1
   1bca8:	str	sl, [sp]
   1bcac:	str	r9, [sp, #4]
   1bcb0:	bl	17b84 <logMessage@@Base>
   1bcb4:	mov	r0, r5
   1bcb8:	mov	r1, r7
   1bcbc:	bl	1482c <__open_2@plt>
   1bcc0:	cmn	r0, #1
   1bcc4:	mov	r4, r0
   1bcc8:	beq	1bd10 <openCharacterDevice@@Base+0x2b4>
   1bccc:	ldr	r1, [pc, #128]	; 1bd54 <openCharacterDevice@@Base+0x2f8>
   1bcd0:	mov	r0, #7
   1bcd4:	mov	r2, r5
   1bcd8:	mov	r3, r4
   1bcdc:	add	r1, pc, r1
   1bce0:	bl	17b84 <logMessage@@Base>
   1bce4:	b	1bac8 <openCharacterDevice@@Base+0x6c>
   1bce8:	bl	14a60 <__stack_chk_fail@plt>
   1bcec:	ldr	r0, [fp]
   1bcf0:	bl	14838 <strerror@plt>
   1bcf4:	ldr	r1, [pc, #92]	; 1bd58 <openCharacterDevice@@Base+0x2fc>
   1bcf8:	mov	r2, r5
   1bcfc:	add	r1, pc, r1
   1bd00:	mov	r3, r0
   1bd04:	mov	r0, #7
   1bd08:	bl	17b84 <logMessage@@Base>
   1bd0c:	b	1bb8c <openCharacterDevice@@Base+0x130>
   1bd10:	ldr	r0, [fp]
   1bd14:	bl	14838 <strerror@plt>
   1bd18:	ldr	r1, [sp, #12]
   1bd1c:	mov	r2, r5
   1bd20:	mov	r3, r0
   1bd24:	mov	r0, #7
   1bd28:	bl	17b84 <logMessage@@Base>
   1bd2c:	b	1bb8c <openCharacterDevice@@Base+0x130>
   1bd30:	andeq	r8, r1, ip, lsl #11
   1bd34:	andeq	r0, r0, ip, lsr #4
   1bd38:			; <UNDEFINED> instruction: 0x000054bc
   1bd3c:	andeq	r5, r0, r8, lsr #10
   1bd40:	andeq	r5, r0, r0, lsr r5
   1bd44:	andeq	r5, r0, r0, asr #8
   1bd48:	andeq	r5, r0, ip, asr #8
   1bd4c:	andeq	r5, r0, r0, ror r3
   1bd50:	andeq	r5, r0, r0, lsr r3
   1bd54:	andeq	r5, r0, r0, lsr #5
   1bd58:			; <UNDEFINED> instruction: 0x000052b8

0001bd5c <getUinputDevice@@Base>:
   1bd5c:	ldr	r3, [pc, #616]	; 1bfcc <getUinputDevice@@Base+0x270>
   1bd60:	ldr	r1, [pc, #616]	; 1bfd0 <getUinputDevice@@Base+0x274>
   1bd64:	add	r3, pc, r3
   1bd68:	ldr	r2, [pc, #612]	; 1bfd4 <getUinputDevice@@Base+0x278>
   1bd6c:	push	{r4, r5, r6, r7, lr}
   1bd70:	add	r2, pc, r2
   1bd74:	ldr	r6, [r3, r1]
   1bd78:	sub	sp, sp, #1120	; 0x460
   1bd7c:	ldr	r0, [r2]
   1bd80:	sub	sp, sp, #4
   1bd84:	ldr	r3, [r6]
   1bd88:	cmn	r0, #1
   1bd8c:	str	r3, [sp, #1116]	; 0x45c
   1bd90:	beq	1bdb0 <getUinputDevice@@Base+0x54>
   1bd94:	ldr	r2, [sp, #1116]	; 0x45c
   1bd98:	ldr	r3, [r6]
   1bd9c:	cmp	r2, r3
   1bda0:	bne	1bfc8 <getUinputDevice@@Base+0x26c>
   1bda4:	add	sp, sp, #1120	; 0x460
   1bda8:	add	sp, sp, #4
   1bdac:	pop	{r4, r5, r6, r7, pc}
   1bdb0:	ldr	r1, [pc, #544]	; 1bfd8 <getUinputDevice@@Base+0x27c>
   1bdb4:	ldr	r0, [pc, #544]	; 1bfdc <getUinputDevice@@Base+0x280>
   1bdb8:	add	r1, pc, r1
   1bdbc:	add	r0, pc, r0
   1bdc0:	ldr	r4, [r1, #8]!
   1bdc4:	bl	1ba00 <installKernelModule@@Base>
   1bdc8:	cmp	r0, #0
   1bdcc:	beq	1bde0 <getUinputDevice@@Base+0x84>
   1bdd0:	cmp	r4, #0
   1bdd4:	bne	1bde0 <getUinputDevice@@Base+0x84>
   1bdd8:	mov	r0, #500	; 0x1f4
   1bddc:	bl	1a174 <approximateDelay@@Base>
   1bde0:	ldr	r0, [pc, #504]	; 1bfe0 <getUinputDevice@@Base+0x284>
   1bde4:	ldr	r1, [pc, #504]	; 1bfe4 <getUinputDevice@@Base+0x288>
   1bde8:	add	r0, pc, r0
   1bdec:	add	r1, pc, r1
   1bdf0:	bl	18f00 <resolveDeviceName@@Base>
   1bdf4:	subs	r4, r0, #0
   1bdf8:	beq	1bf8c <getUinputDevice@@Base+0x230>
   1bdfc:	mov	r1, #1
   1be00:	mov	r2, #10
   1be04:	mov	r3, #223	; 0xdf
   1be08:	bl	1ba5c <openCharacterDevice@@Base>
   1be0c:	cmn	r0, #1
   1be10:	mov	r5, r0
   1be14:	beq	1bf70 <getUinputDevice@@Base+0x214>
   1be18:	ldr	r1, [pc, #456]	; 1bfe8 <getUinputDevice@@Base+0x28c>
   1be1c:	mov	r3, r5
   1be20:	mov	r2, r4
   1be24:	mov	r0, #7
   1be28:	add	r1, pc, r1
   1be2c:	bl	17b84 <logMessage@@Base>
   1be30:	mov	r1, #0
   1be34:	movw	r2, #1116	; 0x45c
   1be38:	mov	r0, sp
   1be3c:	bl	148e0 <memset@plt>
   1be40:	ldr	r3, [pc, #420]	; 1bfec <getUinputDevice@@Base+0x290>
   1be44:	movw	r2, #1116	; 0x45c
   1be48:	add	r3, pc, r3
   1be4c:	ldm	r3, {r0, r1}
   1be50:	lsr	r3, r1, #16
   1be54:	strb	r3, [sp, #6]
   1be58:	str	r0, [sp]
   1be5c:	mov	r0, r5
   1be60:	strh	r1, [sp, #4]
   1be64:	mov	r1, sp
   1be68:	bl	14bc8 <write@plt>
   1be6c:	cmn	r0, #1
   1be70:	beq	1bf98 <getUinputDevice@@Base+0x23c>
   1be74:	movw	r1, #21860	; 0x5564
   1be78:	mov	r0, r5
   1be7c:	movt	r1, #16388	; 0x4004
   1be80:	mov	r2, #1
   1be84:	bl	149c4 <ioctl@plt>
   1be88:	ldr	r7, [pc, #352]	; 1bff0 <getUinputDevice@@Base+0x294>
   1be8c:	mov	r4, #0
   1be90:	add	r7, pc, r7
   1be94:	cmn	r0, #1
   1be98:	bne	1beac <getUinputDevice@@Base+0x150>
   1be9c:	b	1bfa8 <getUinputDevice@@Base+0x24c>
   1bea0:	add	r4, r4, #1
   1bea4:	cmp	r4, #768	; 0x300
   1bea8:	beq	1beec <getUinputDevice@@Base+0x190>
   1beac:	movw	r1, #21861	; 0x5565
   1beb0:	mov	r0, r5
   1beb4:	movt	r1, #16388	; 0x4004
   1beb8:	mov	r2, r4
   1bebc:	bl	149c4 <ioctl@plt>
   1bec0:	cmn	r0, #1
   1bec4:	bne	1bea0 <getUinputDevice@@Base+0x144>
   1bec8:	bl	14c4c <__errno_location@plt>
   1becc:	ldr	r0, [r0]
   1bed0:	bl	14838 <strerror@plt>
   1bed4:	mov	r1, r7
   1bed8:	mov	r2, r4
   1bedc:	mov	r3, r0
   1bee0:	mov	r0, #4
   1bee4:	bl	17b84 <logMessage@@Base>
   1bee8:	b	1bea0 <getUinputDevice@@Base+0x144>
   1beec:	movw	r1, #21860	; 0x5564
   1bef0:	mov	r0, r5
   1bef4:	movt	r1, #16388	; 0x4004
   1bef8:	mov	r2, #20
   1befc:	bl	149c4 <ioctl@plt>
   1bf00:	cmn	r0, #1
   1bf04:	beq	1bfb8 <getUinputDevice@@Base+0x25c>
   1bf08:	mov	r0, r5
   1bf0c:	movw	r1, #21761	; 0x5501
   1bf10:	bl	149c4 <ioctl@plt>
   1bf14:	cmn	r0, #1
   1bf18:	beq	1bf30 <getUinputDevice@@Base+0x1d4>
   1bf1c:	ldr	r3, [pc, #208]	; 1bff4 <getUinputDevice@@Base+0x298>
   1bf20:	mov	r0, r5
   1bf24:	add	r3, pc, r3
   1bf28:	str	r5, [r3]
   1bf2c:	b	1bd94 <getUinputDevice@@Base+0x38>
   1bf30:	ldr	r0, [pc, #192]	; 1bff8 <getUinputDevice@@Base+0x29c>
   1bf34:	add	r0, pc, r0
   1bf38:	bl	17c4c <logSystemError@@Base>
   1bf3c:	ldr	r4, [pc, #184]	; 1bffc <getUinputDevice@@Base+0x2a0>
   1bf40:	mov	r0, r5
   1bf44:	add	r4, pc, r4
   1bf48:	ldr	r3, [r4]
   1bf4c:	cmp	r5, r3
   1bf50:	beq	1bd94 <getUinputDevice@@Base+0x38>
   1bf54:	bl	14940 <close@plt>
   1bf58:	ldr	r1, [pc, #160]	; 1c000 <getUinputDevice@@Base+0x2a4>
   1bf5c:	mov	r0, #7
   1bf60:	add	r1, pc, r1
   1bf64:	bl	17b84 <logMessage@@Base>
   1bf68:	ldr	r0, [r4]
   1bf6c:	b	1bd94 <getUinputDevice@@Base+0x38>
   1bf70:	ldr	r1, [pc, #140]	; 1c004 <getUinputDevice@@Base+0x2a8>
   1bf74:	mov	r0, #7
   1bf78:	add	r1, pc, r1
   1bf7c:	bl	17b84 <logMessage@@Base>
   1bf80:	ldr	r3, [pc, #128]	; 1c008 <getUinputDevice@@Base+0x2ac>
   1bf84:	ldr	r0, [pc, r3]
   1bf88:	b	1bd94 <getUinputDevice@@Base+0x38>
   1bf8c:	ldr	r3, [pc, #120]	; 1c00c <getUinputDevice@@Base+0x2b0>
   1bf90:	ldr	r0, [pc, r3]
   1bf94:	b	1bd94 <getUinputDevice@@Base+0x38>
   1bf98:	ldr	r0, [pc, #112]	; 1c010 <getUinputDevice@@Base+0x2b4>
   1bf9c:	add	r0, pc, r0
   1bfa0:	bl	17c4c <logSystemError@@Base>
   1bfa4:	b	1bf3c <getUinputDevice@@Base+0x1e0>
   1bfa8:	ldr	r0, [pc, #100]	; 1c014 <getUinputDevice@@Base+0x2b8>
   1bfac:	add	r0, pc, r0
   1bfb0:	bl	17c4c <logSystemError@@Base>
   1bfb4:	b	1bf3c <getUinputDevice@@Base+0x1e0>
   1bfb8:	ldr	r0, [pc, #88]	; 1c018 <getUinputDevice@@Base+0x2bc>
   1bfbc:	add	r0, pc, r0
   1bfc0:	bl	17c4c <logSystemError@@Base>
   1bfc4:	b	1bf3c <getUinputDevice@@Base+0x1e0>
   1bfc8:	bl	14a60 <__stack_chk_fail@plt>
   1bfcc:	muleq	r1, r4, r2
   1bfd0:	andeq	r0, r0, ip, lsr #4
   1bfd4:	andeq	r8, r1, r0, lsl r5
   1bfd8:	andeq	r8, r1, r4, asr #10
   1bfdc:	andeq	r5, r0, r0, lsl #7
   1bfe0:	andeq	r8, r1, r8, lsr #1
   1bfe4:	andeq	r5, r0, r0, asr r3
   1bfe8:	andeq	r5, r0, r0, asr #4
   1bfec:	andeq	r4, r0, ip, lsl #13
   1bff0:	andeq	r5, r0, ip, lsl #4
   1bff4:	andeq	r8, r1, ip, asr r3
   1bff8:			; <UNDEFINED> instruction: 0x000051b4
   1bffc:	andeq	r8, r1, ip, lsr r3
   1c000:	andeq	r5, r0, r0, asr #3
   1c004:			; <UNDEFINED> instruction: 0x000051b8
   1c008:	strdeq	r8, [r1], -ip
   1c00c:	strdeq	r8, [r1], -r0
   1c010:	andeq	r5, r0, r4, ror #2
   1c014:	ldrdeq	r5, [r0], -r4
   1c018:	andeq	r5, r0, r0, lsl r1

0001c01c <hasInputEvent@@Base>:
   1c01c:	push	{r4, r5, r6, fp, lr}
   1c020:	lsr	r3, r3, #5
   1c024:	ldr	lr, [pc, #132]	; 1c0b0 <hasInputEvent@@Base+0x94>
   1c028:	add	fp, sp, #16
   1c02c:	ldr	r4, [pc, #128]	; 1c0b4 <hasInputEvent@@Base+0x98>
   1c030:	sub	sp, sp, #12
   1c034:	add	lr, pc, lr
   1c038:	add	r3, r3, #1
   1c03c:	add	r1, r1, #32
   1c040:	ldr	r4, [lr, r4]
   1c044:	orr	r1, r1, #-2147483648	; 0x80000000
   1c048:	lsl	r5, r3, #2
   1c04c:	movw	ip, #32760	; 0x7ff8
   1c050:	add	r5, r5, #10
   1c054:	orr	r1, r1, #17664	; 0x4500
   1c058:	and	ip, r5, ip
   1c05c:	orr	r1, r1, r3, lsl #18
   1c060:	sub	sp, sp, ip
   1c064:	ldr	r3, [r4]
   1c068:	mov	r6, r2
   1c06c:	mov	r2, sp
   1c070:	str	r3, [fp, #-24]	; 0xffffffe8
   1c074:	bl	149c4 <ioctl@plt>
   1c078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c07c:	cmn	r0, #1
   1c080:	lsrne	r3, r6, #5
   1c084:	andne	r6, r6, #31
   1c088:	moveq	r0, #0
   1c08c:	ldrne	r0, [sp, r3, lsl #2]
   1c090:	ldr	r3, [r4]
   1c094:	lsrne	r0, r0, r6
   1c098:	andne	r0, r0, #1
   1c09c:	cmp	r2, r3
   1c0a0:	bne	1c0ac <hasInputEvent@@Base+0x90>
   1c0a4:	sub	sp, fp, #16
   1c0a8:	pop	{r4, r5, r6, fp, pc}
   1c0ac:	bl	14a60 <__stack_chk_fail@plt>
   1c0b0:	andeq	r7, r1, r4, asr #31
   1c0b4:	andeq	r0, r0, ip, lsr #4

0001c0b8 <writeInputEvent@@Base>:
   1c0b8:	ldr	r3, [pc, #180]	; 1c174 <writeInputEvent@@Base+0xbc>
   1c0bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c0c0:	mov	r9, r0
   1c0c4:	ldr	r0, [pc, #172]	; 1c178 <writeInputEvent@@Base+0xc0>
   1c0c8:	add	r3, pc, r3
   1c0cc:	sub	sp, sp, #24
   1c0d0:	mov	r8, r1
   1c0d4:	mov	r7, r2
   1c0d8:	ldr	r5, [r3, r0]
   1c0dc:	ldr	r3, [r5]
   1c0e0:	str	r3, [sp, #20]
   1c0e4:	bl	1bd5c <getUinputDevice@@Base>
   1c0e8:	cmn	r0, #1
   1c0ec:	mov	r6, r0
   1c0f0:	moveq	r0, #0
   1c0f4:	beq	1c144 <writeInputEvent@@Base+0x8c>
   1c0f8:	add	sl, sp, #4
   1c0fc:	mov	r4, #0
   1c100:	mov	r1, r4
   1c104:	str	r4, [sp, #4]
   1c108:	mov	r0, sl
   1c10c:	str	r4, [sp, #8]
   1c110:	str	r4, [sp, #12]
   1c114:	str	r4, [sp, #16]
   1c118:	bl	147d8 <gettimeofday@plt>
   1c11c:	mov	r1, sl
   1c120:	mov	r0, r6
   1c124:	mov	r2, #16
   1c128:	strh	r9, [sp, #12]
   1c12c:	strh	r8, [sp, #14]
   1c130:	str	r7, [sp, #16]
   1c134:	bl	14bc8 <write@plt>
   1c138:	cmn	r0, #1
   1c13c:	movne	r0, #1
   1c140:	beq	1c15c <writeInputEvent@@Base+0xa4>
   1c144:	ldr	r2, [sp, #20]
   1c148:	ldr	r3, [r5]
   1c14c:	cmp	r2, r3
   1c150:	bne	1c170 <writeInputEvent@@Base+0xb8>
   1c154:	add	sp, sp, #24
   1c158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c15c:	ldr	r0, [pc, #24]	; 1c17c <writeInputEvent@@Base+0xc4>
   1c160:	add	r0, pc, r0
   1c164:	bl	17c4c <logSystemError@@Base>
   1c168:	mov	r0, r4
   1c16c:	b	1c144 <writeInputEvent@@Base+0x8c>
   1c170:	bl	14a60 <__stack_chk_fail@plt>
   1c174:	andeq	r7, r1, r0, lsr pc
   1c178:	andeq	r0, r0, ip, lsr #4
   1c17c:	andeq	r4, r0, r4, ror #31

0001c180 <writeKeyEvent@@Base>:
   1c180:	push	{r3, r4, r5, lr}
   1c184:	mov	r2, r1
   1c188:	mov	r4, r0
   1c18c:	mov	r5, r1
   1c190:	uxth	r1, r0
   1c194:	mov	r0, #1
   1c198:	bl	1c0b8 <writeInputEvent@@Base>
   1c19c:	cmp	r0, #0
   1c1a0:	popeq	{r3, r4, r5, pc}
   1c1a4:	cmp	r5, #0
   1c1a8:	bne	1c1e4 <writeKeyEvent@@Base+0x64>
   1c1ac:	ldr	r2, [pc, #84]	; 1c208 <writeKeyEvent@@Base+0x88>
   1c1b0:	and	r3, r4, #7
   1c1b4:	mov	r1, #1
   1c1b8:	add	r2, pc, r2
   1c1bc:	add	r4, r2, r4, lsr #3
   1c1c0:	ldrb	r2, [r4, #12]
   1c1c4:	bic	r3, r2, r1, lsl r3
   1c1c8:	strb	r3, [r4, #12]
   1c1cc:	mov	r0, #0
   1c1d0:	mov	r1, r0
   1c1d4:	mov	r2, r0
   1c1d8:	bl	1c0b8 <writeInputEvent@@Base>
   1c1dc:	mov	r0, #1
   1c1e0:	pop	{r3, r4, r5, pc}
   1c1e4:	ldr	r2, [pc, #32]	; 1c20c <writeKeyEvent@@Base+0x8c>
   1c1e8:	and	r3, r4, #7
   1c1ec:	mov	r1, #1
   1c1f0:	add	r2, pc, r2
   1c1f4:	add	r4, r2, r4, lsr #3
   1c1f8:	ldrb	r2, [r4, #12]
   1c1fc:	orr	r3, r2, r1, lsl r3
   1c200:	strb	r3, [r4, #12]
   1c204:	b	1c1cc <writeKeyEvent@@Base+0x4c>
   1c208:	andeq	r8, r1, r4, asr #2
   1c20c:	andeq	r8, r1, ip, lsl #2

0001c210 <releaseAllKeys@@Base>:
   1c210:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c214:	mov	r6, #1
   1c218:	ldr	r9, [pc, #88]	; 1c278 <releaseAllKeys@@Base+0x68>
   1c21c:	mov	r7, #0
   1c220:	mov	r8, #0
   1c224:	add	r9, pc, r9
   1c228:	b	1c238 <releaseAllKeys@@Base+0x28>
   1c22c:	add	r8, r8, #1
   1c230:	cmp	r8, #768	; 0x300
   1c234:	beq	1c274 <releaseAllKeys@@Base+0x64>
   1c238:	add	r3, r9, r8, lsr #3
   1c23c:	and	r1, r8, #7
   1c240:	mov	r5, #0
   1c244:	ldrb	r2, [r3, #12]
   1c248:	and	r3, r5, r7
   1c24c:	lsr	r4, r2, r1
   1c250:	and	r2, r4, r6
   1c254:	orrs	r1, r2, r3
   1c258:	beq	1c22c <releaseAllKeys@@Base+0x1c>
   1c25c:	mov	r0, r8
   1c260:	mov	r1, r5
   1c264:	bl	1c180 <writeKeyEvent@@Base>
   1c268:	cmp	r0, #0
   1c26c:	bne	1c22c <releaseAllKeys@@Base+0x1c>
   1c270:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c274:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c278:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1c27c:	ldr	r3, [r1]
   1c280:	ubfx	r2, r0, #24, #7
   1c284:	push	{r4, r5, r6, r7, r8}
   1c288:	ldr	r3, [r3]
   1c28c:	ldr	r2, [r3, r2, lsl #2]
   1c290:	cmp	r2, #0
   1c294:	beq	1c318 <releaseAllKeys@@Base+0x108>
   1c298:	adds	r2, r3, r2
   1c29c:	beq	1c318 <releaseAllKeys@@Base+0x108>
   1c2a0:	ubfx	ip, r0, #16, #8
   1c2a4:	ldr	r2, [r2, ip, lsl #2]
   1c2a8:	cmp	r2, #0
   1c2ac:	beq	1c318 <releaseAllKeys@@Base+0x108>
   1c2b0:	adds	r2, r3, r2
   1c2b4:	beq	1c318 <releaseAllKeys@@Base+0x108>
   1c2b8:	ubfx	ip, r0, #8, #8
   1c2bc:	ldr	r2, [r2, ip, lsl #2]
   1c2c0:	cmp	r2, #0
   1c2c4:	beq	1c318 <releaseAllKeys@@Base+0x108>
   1c2c8:	adds	ip, r3, r2
   1c2cc:	moveq	r0, ip
   1c2d0:	beq	1c31c <releaseAllKeys@@Base+0x10c>
   1c2d4:	uxtb	r0, r0
   1c2d8:	mov	r4, #1
   1c2dc:	and	r8, r0, #7
   1c2e0:	mov	r5, #0
   1c2e4:	add	r6, ip, r0, lsr #3
   1c2e8:	mov	r3, #0
   1c2ec:	and	r5, r5, r3
   1c2f0:	ldrb	r6, [r6, #256]	; 0x100
   1c2f4:	lsr	r2, r6, r8
   1c2f8:	and	r4, r4, r2
   1c2fc:	orrs	r6, r4, r5
   1c300:	beq	1c324 <releaseAllKeys@@Base+0x114>
   1c304:	ldrb	r3, [ip, r0]
   1c308:	mov	r0, #1
   1c30c:	strb	r3, [r1, #4]
   1c310:	pop	{r4, r5, r6, r7, r8}
   1c314:	bx	lr
   1c318:	mov	r0, r2
   1c31c:	pop	{r4, r5, r6, r7, r8}
   1c320:	bx	lr
   1c324:	mov	r0, r3
   1c328:	b	1c31c <releaseAllKeys@@Base+0x10c>

0001c32c <convertCharacterToDots@@Base>:
   1c32c:	ldr	r3, [pc, #320]	; 1c474 <convertCharacterToDots@@Base+0x148>
   1c330:	bic	r2, r1, #255	; 0xff
   1c334:	ldr	ip, [pc, #316]	; 1c478 <convertCharacterToDots@@Base+0x14c>
   1c338:	cmp	r2, #10240	; 0x2800
   1c33c:	add	r3, pc, r3
   1c340:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c344:	sub	sp, sp, #20
   1c348:	ldr	r4, [r3, ip]
   1c34c:	mov	r5, r0
   1c350:	uxtbeq	r0, r1
   1c354:	ldr	r3, [r4]
   1c358:	str	r3, [sp, #12]
   1c35c:	beq	1c410 <convertCharacterToDots@@Base+0xe4>
   1c360:	cmp	r2, #61440	; 0xf000
   1c364:	bne	1c37c <convertCharacterToDots@@Base+0x50>
   1c368:	uxtb	r0, r1
   1c36c:	bl	1dcb0 <convertCharToWchar@@Base>
   1c370:	cmn	r0, #1
   1c374:	mov	r1, r0
   1c378:	beq	1c3a4 <convertCharacterToDots@@Base+0x78>
   1c37c:	mov	r0, r1
   1c380:	ldr	r1, [pc, #244]	; 1c47c <convertCharacterToDots@@Base+0x150>
   1c384:	add	r2, sp, #4
   1c388:	mov	r3, #0
   1c38c:	add	r1, pc, r1
   1c390:	str	r5, [sp, #4]
   1c394:	strb	r3, [sp, #8]
   1c398:	bl	1d544 <handleBestCharacter@@Base>
   1c39c:	cmp	r0, #0
   1c3a0:	bne	1c428 <convertCharacterToDots@@Base+0xfc>
   1c3a4:	ldr	ip, [r5]
   1c3a8:	ldr	r3, [ip]
   1c3ac:	cmp	r3, #0
   1c3b0:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c3b4:	add	r2, ip, r3
   1c3b8:	cmp	r2, #0
   1c3bc:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c3c0:	ldr	r5, [ip, r3]
   1c3c4:	cmp	r5, #0
   1c3c8:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c3cc:	adds	r8, ip, r5
   1c3d0:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c3d4:	ldr	r3, [r8, #1020]	; 0x3fc
   1c3d8:	cmp	r3, #0
   1c3dc:	beq	1c438 <convertCharacterToDots@@Base+0x10c>
   1c3e0:	adds	r9, ip, r3
   1c3e4:	beq	1c438 <convertCharacterToDots@@Base+0x10c>
   1c3e8:	ldrb	r6, [r9, #287]	; 0x11f
   1c3ec:	mov	r1, #0
   1c3f0:	mov	r0, #1
   1c3f4:	mov	r3, #0
   1c3f8:	and	r3, r3, r1
   1c3fc:	lsr	r2, r6, #5
   1c400:	and	r2, r2, r0
   1c404:	orrs	r1, r2, r3
   1c408:	beq	1c438 <convertCharacterToDots@@Base+0x10c>
   1c40c:	ldrb	r0, [r9, #253]	; 0xfd
   1c410:	ldr	r2, [sp, #12]
   1c414:	ldr	r3, [r4]
   1c418:	cmp	r2, r3
   1c41c:	bne	1c470 <convertCharacterToDots@@Base+0x144>
   1c420:	add	sp, sp, #20
   1c424:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c428:	ldrb	r0, [sp, #8]
   1c42c:	b	1c410 <convertCharacterToDots@@Base+0xe4>
   1c430:	mov	r0, #255	; 0xff
   1c434:	b	1c410 <convertCharacterToDots@@Base+0xe4>
   1c438:	cmp	r8, #0
   1c43c:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c440:	ldr	r3, [ip, r5]
   1c444:	cmp	r3, #0
   1c448:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c44c:	adds	ip, ip, r3
   1c450:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c454:	ldrb	r0, [ip, #263]	; 0x107
   1c458:	mov	r3, #0
   1c45c:	lsr	r2, r0, #7
   1c460:	orrs	r1, r2, r3
   1c464:	beq	1c430 <convertCharacterToDots@@Base+0x104>
   1c468:	ldrb	r0, [ip, #63]	; 0x3f
   1c46c:	b	1c410 <convertCharacterToDots@@Base+0xe4>
   1c470:	bl	14a60 <__stack_chk_fail@plt>
   1c474:			; <UNDEFINED> instruction: 0x00017cbc
   1c478:	andeq	r0, r0, ip, lsr #4
   1c47c:			; <UNDEFINED> instruction: 0xfffffee8

0001c480 <convertDotsToCharacter@@Base>:
   1c480:	push	{r4, r5, r6, r7}
   1c484:	and	r7, r1, #7
   1c488:	ldr	r6, [r0]
   1c48c:	mov	ip, r1
   1c490:	mov	r0, #1
   1c494:	mov	r3, #0
   1c498:	add	r4, r6, r1, lsr #3
   1c49c:	mov	r1, #0
   1c4a0:	and	r3, r3, r1
   1c4a4:	ldrb	r4, [r4, #1536]	; 0x600
   1c4a8:	lsr	r2, r4, r7
   1c4ac:	and	r2, r2, r0
   1c4b0:	orrs	r1, r2, r3
   1c4b4:	addne	ip, ip, #128	; 0x80
   1c4b8:	movweq	r0, #65533	; 0xfffd
   1c4bc:	ldrne	r0, [r6, ip, lsl #2]
   1c4c0:	pop	{r4, r5, r6, r7}
   1c4c4:	bx	lr

0001c4c8 <replaceTextTable@@Base>:
   1c4c8:	push	{r4, r5, r6, lr}
   1c4cc:	mov	r6, r1
   1c4d0:	bl	1cb60 <makeTextTablePath@@Base>
   1c4d4:	ldr	r5, [pc, #180]	; 1c590 <replaceTextTable@@Base+0xc8>
   1c4d8:	add	r5, pc, r5
   1c4dc:	subs	r4, r0, #0
   1c4e0:	beq	1c55c <replaceTextTable@@Base+0x94>
   1c4e4:	ldr	r1, [pc, #168]	; 1c594 <replaceTextTable@@Base+0xcc>
   1c4e8:	mov	r2, r4
   1c4ec:	mov	r0, #7
   1c4f0:	add	r1, pc, r1
   1c4f4:	bl	17b84 <logMessage@@Base>
   1c4f8:	mov	r0, r4
   1c4fc:	bl	1d274 <compileTextTable@@Base>
   1c500:	subs	r2, r0, #0
   1c504:	beq	1c52c <replaceTextTable@@Base+0x64>
   1c508:	ldr	r3, [pc, #136]	; 1c598 <replaceTextTable@@Base+0xd0>
   1c50c:	ldr	r3, [r5, r3]
   1c510:	ldr	r0, [r3]
   1c514:	str	r2, [r3]
   1c518:	bl	1cb28 <destroyTextTable@@Base>
   1c51c:	mov	r0, r4
   1c520:	bl	147fc <free@plt>
   1c524:	mov	r0, #1
   1c528:	pop	{r4, r5, r6, pc}
   1c52c:	ldr	r1, [pc, #104]	; 1c59c <replaceTextTable@@Base+0xd4>
   1c530:	mov	r2, #5
   1c534:	add	r1, pc, r1
   1c538:	bl	14a90 <dcgettext@plt>
   1c53c:	ldr	r1, [pc, #92]	; 1c5a0 <replaceTextTable@@Base+0xd8>
   1c540:	mov	r3, r4
   1c544:	add	r1, pc, r1
   1c548:	mov	r2, r0
   1c54c:	mov	r0, #3
   1c550:	bl	17b84 <logMessage@@Base>
   1c554:	mov	r0, r4
   1c558:	bl	147fc <free@plt>
   1c55c:	ldr	r1, [pc, #64]	; 1c5a4 <replaceTextTable@@Base+0xdc>
   1c560:	mov	r2, #5
   1c564:	mov	r0, #0
   1c568:	add	r1, pc, r1
   1c56c:	bl	14a90 <dcgettext@plt>
   1c570:	ldr	r1, [pc, #48]	; 1c5a8 <replaceTextTable@@Base+0xe0>
   1c574:	mov	r3, r6
   1c578:	add	r1, pc, r1
   1c57c:	mov	r2, r0
   1c580:	mov	r0, #3
   1c584:	bl	17b84 <logMessage@@Base>
   1c588:	mov	r0, #0
   1c58c:	pop	{r4, r5, r6, pc}
   1c590:	andeq	r7, r1, r0, lsr #22
   1c594:	andeq	r5, r0, r0, lsl #28
   1c598:	andeq	r0, r0, r8, lsr r2
   1c59c:	ldrdeq	r5, [r0], -r8
   1c5a0:			; <UNDEFINED> instruction: 0x000048b0
   1c5a4:	andeq	r5, r0, r0, asr #27
   1c5a8:	andeq	r4, r0, ip, ror r8

0001c5ac <getTextTableItem@@Base>:
   1c5ac:	ldr	r0, [r0]
   1c5b0:	b	1fc78 <getDataItem@@Base>

0001c5b4 <getTextTableHeader@@Base>:
   1c5b4:	mov	r1, #0
   1c5b8:	b	1c5ac <getTextTableItem@@Base>
   1c5bc:	ldr	r3, [pc, #412]	; 1c760 <getTextTableHeader@@Base+0x1ac>
   1c5c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c5c4:	mov	r7, r1
   1c5c8:	ldr	r1, [pc, #404]	; 1c764 <getTextTableHeader@@Base+0x1b0>
   1c5cc:	add	r3, pc, r3
   1c5d0:	adds	r6, r2, #0
   1c5d4:	sub	sp, sp, #12
   1c5d8:	mov	r4, r0
   1c5dc:	ubfx	r8, r7, #24, #7
   1c5e0:	ldr	r5, [r3, r1]
   1c5e4:	movne	r6, #1
   1c5e8:	ldr	r3, [r5]
   1c5ec:	str	r3, [sp, #4]
   1c5f0:	bl	1c5b4 <getTextTableHeader@@Base>
   1c5f4:	ldr	r3, [r0, r8, lsl #2]
   1c5f8:	cmp	r3, #0
   1c5fc:	movne	r2, #0
   1c600:	andeq	r2, r6, #1
   1c604:	cmp	r2, #0
   1c608:	str	r3, [sp]
   1c60c:	moveq	r8, r3
   1c610:	bne	1c6b8 <getTextTableHeader@@Base+0x104>
   1c614:	cmp	r8, #0
   1c618:	bne	1c638 <getTextTableHeader@@Base+0x84>
   1c61c:	mov	r0, #0
   1c620:	ldr	r2, [sp, #4]
   1c624:	ldr	r3, [r5]
   1c628:	cmp	r2, r3
   1c62c:	bne	1c75c <getTextTableHeader@@Base+0x1a8>
   1c630:	add	sp, sp, #12
   1c634:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c638:	mov	r1, r8
   1c63c:	ldr	r0, [r4]
   1c640:	bl	1fc78 <getDataItem@@Base>
   1c644:	ubfx	r9, r7, #16, #8
   1c648:	ldr	r1, [r0, r9, lsl #2]
   1c64c:	cmp	r1, #0
   1c650:	movne	r3, #0
   1c654:	andeq	r3, r6, #1
   1c658:	cmp	r3, #0
   1c65c:	str	r1, [sp]
   1c660:	moveq	r8, r1
   1c664:	bne	1c724 <getTextTableHeader@@Base+0x170>
   1c668:	cmp	r8, #0
   1c66c:	beq	1c61c <getTextTableHeader@@Base+0x68>
   1c670:	mov	r1, r8
   1c674:	ldr	r0, [r4]
   1c678:	bl	1fc78 <getDataItem@@Base>
   1c67c:	ubfx	r7, r7, #8, #8
   1c680:	ldr	r0, [r0, r7, lsl #2]
   1c684:	cmp	r0, #0
   1c688:	movne	r6, #0
   1c68c:	andeq	r6, r6, #1
   1c690:	cmp	r6, #0
   1c694:	str	r0, [sp]
   1c698:	moveq	r1, r0
   1c69c:	bne	1c6ec <getTextTableHeader@@Base+0x138>
   1c6a0:	cmp	r1, #0
   1c6a4:	moveq	r0, r1
   1c6a8:	beq	1c620 <getTextTableHeader@@Base+0x6c>
   1c6ac:	ldr	r0, [r4]
   1c6b0:	bl	1fc78 <getDataItem@@Base>
   1c6b4:	b	1c620 <getTextTableHeader@@Base+0x6c>
   1c6b8:	ldr	r0, [r4]
   1c6bc:	mov	r1, sp
   1c6c0:	mov	r2, #1024	; 0x400
   1c6c4:	mov	r3, #4
   1c6c8:	bl	1fbc8 <allocateDataItem@@Base>
   1c6cc:	cmp	r0, #0
   1c6d0:	beq	1c61c <getTextTableHeader@@Base+0x68>
   1c6d4:	mov	r0, r4
   1c6d8:	bl	1c5b4 <getTextTableHeader@@Base>
   1c6dc:	ldr	r3, [sp]
   1c6e0:	str	r3, [r0, r8, lsl #2]
   1c6e4:	ldr	r8, [sp]
   1c6e8:	b	1c614 <getTextTableHeader@@Base+0x60>
   1c6ec:	ldr	r0, [r4]
   1c6f0:	mov	r1, sp
   1c6f4:	mov	r2, #288	; 0x120
   1c6f8:	mov	r3, #1
   1c6fc:	bl	1fbc8 <allocateDataItem@@Base>
   1c700:	cmp	r0, #0
   1c704:	beq	1c620 <getTextTableHeader@@Base+0x6c>
   1c708:	mov	r1, r8
   1c70c:	ldr	r0, [r4]
   1c710:	bl	1fc78 <getDataItem@@Base>
   1c714:	ldr	r3, [sp]
   1c718:	str	r3, [r0, r7, lsl #2]
   1c71c:	ldr	r1, [sp]
   1c720:	b	1c6a0 <getTextTableHeader@@Base+0xec>
   1c724:	ldr	r0, [r4]
   1c728:	mov	r1, sp
   1c72c:	mov	r2, #1024	; 0x400
   1c730:	mov	r3, #4
   1c734:	bl	1fbc8 <allocateDataItem@@Base>
   1c738:	cmp	r0, #0
   1c73c:	beq	1c61c <getTextTableHeader@@Base+0x68>
   1c740:	mov	r1, r8
   1c744:	ldr	r0, [r4]
   1c748:	bl	1fc78 <getDataItem@@Base>
   1c74c:	ldr	r3, [sp]
   1c750:	str	r3, [r0, r9, lsl #2]
   1c754:	ldr	r8, [sp]
   1c758:	b	1c668 <getTextTableHeader@@Base+0xb4>
   1c75c:	bl	14a60 <__stack_chk_fail@plt>
   1c760:	andeq	r7, r1, ip, lsr #20
   1c764:	andeq	r0, r0, ip, lsr #4
   1c768:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c76c:	mov	r8, r1
   1c770:	mov	r9, r2
   1c774:	bl	1c5b4 <getTextTableHeader@@Base>
   1c778:	and	r1, r8, #7
   1c77c:	mov	r6, #1
   1c780:	mov	r7, #0
   1c784:	mov	r5, #0
   1c788:	and	r7, r7, r5
   1c78c:	add	r3, r0, r8, lsr #3
   1c790:	ldrb	r2, [r3, #1536]	; 0x600
   1c794:	lsr	r4, r2, r1
   1c798:	and	r6, r6, r4
   1c79c:	orrs	ip, r6, r7
   1c7a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c7a4:	add	r8, r0, r8, lsl #2
   1c7a8:	ldr	r0, [r8, #512]	; 0x200
   1c7ac:	cmp	r0, r9
   1c7b0:	streq	r5, [r8, #512]	; 0x200
   1c7b4:	moveq	r0, #1
   1c7b8:	biceq	r2, r2, r0, lsl r1
   1c7bc:	strbeq	r2, [r3, #1536]	; 0x600
   1c7c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001c7c4 <getUnicodeCellEntry@@Base>:
   1c7c4:	push	{r3, r4, r5, r6, r7, lr}
   1c7c8:	mov	r2, #0
   1c7cc:	mov	r4, r1
   1c7d0:	bl	1c5bc <getTextTableHeader@@Base+0x8>
   1c7d4:	cmp	r0, #0
   1c7d8:	popeq	{r3, r4, r5, r6, r7, pc}
   1c7dc:	uxtb	r1, r4
   1c7e0:	mov	r3, #0
   1c7e4:	and	ip, r1, #7
   1c7e8:	mov	r4, #1
   1c7ec:	add	r6, r0, r1, lsr #3
   1c7f0:	mov	r5, #0
   1c7f4:	and	r5, r5, r3
   1c7f8:	mov	r7, #0
   1c7fc:	ldrb	r6, [r6, #256]	; 0x100
   1c800:	lsr	r2, r6, ip
   1c804:	and	r4, r4, r2
   1c808:	orrs	ip, r4, r5
   1c80c:	addne	r0, r0, r1
   1c810:	moveq	r0, r3
   1c814:	pop	{r3, r4, r5, r6, r7, pc}

0001c818 <setTextTableGlyph@@Base>:
   1c818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c81c:	sub	sp, sp, #12
   1c820:	mov	r9, r2
   1c824:	mov	r2, #1
   1c828:	str	r0, [sp, #4]
   1c82c:	mov	fp, r1
   1c830:	bl	1c5bc <getTextTableHeader@@Base+0x8>
   1c834:	subs	sl, r0, #0
   1c838:	beq	1c8a4 <setTextTableGlyph@@Base+0x8c>
   1c83c:	uxtb	r8, fp
   1c840:	mov	r6, #1
   1c844:	and	r1, r8, #7
   1c848:	mov	r7, #0
   1c84c:	add	r3, sl, r8, lsr #3
   1c850:	mov	r5, #0
   1c854:	and	r5, r5, r7
   1c858:	ldrb	r2, [r3, #256]	; 0x100
   1c85c:	lsr	r4, r2, r1
   1c860:	and	r4, r4, r6
   1c864:	orrs	r0, r4, r5
   1c868:	beq	1c894 <setTextTableGlyph@@Base+0x7c>
   1c86c:	ldrb	r1, [sl, r8]
   1c870:	cmp	r1, r9
   1c874:	beq	1c884 <setTextTableGlyph@@Base+0x6c>
   1c878:	ldr	r0, [sp, #4]
   1c87c:	mov	r2, fp
   1c880:	bl	1c768 <getTextTableHeader@@Base+0x1b4>
   1c884:	mov	r0, #1
   1c888:	strb	r9, [sl, r8]
   1c88c:	add	sp, sp, #12
   1c890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c894:	mov	r0, #1
   1c898:	orr	r2, r2, r0, lsl r1
   1c89c:	strb	r2, [r3, #256]	; 0x100
   1c8a0:	b	1c884 <setTextTableGlyph@@Base+0x6c>
   1c8a4:	mov	r0, sl
   1c8a8:	add	sp, sp, #12
   1c8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c8b0 <setTextTableCharacter@@Base>:
   1c8b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c8b4:	mov	r4, r0
   1c8b8:	mov	r9, r1
   1c8bc:	mov	r8, r2
   1c8c0:	bl	1c818 <setTextTableGlyph@@Base>
   1c8c4:	subs	r3, r0, #0
   1c8c8:	beq	1c914 <setTextTableCharacter@@Base+0x64>
   1c8cc:	mov	r0, r4
   1c8d0:	mov	r6, #1
   1c8d4:	bl	1c5b4 <getTextTableHeader@@Base>
   1c8d8:	and	ip, r8, #7
   1c8dc:	mov	r7, #0
   1c8e0:	mov	r5, #0
   1c8e4:	and	r5, r5, r7
   1c8e8:	add	r2, r0, r8, lsr #3
   1c8ec:	ldrb	r1, [r2, #1536]	; 0x600
   1c8f0:	lsr	r4, r1, ip
   1c8f4:	and	r4, r4, r6
   1c8f8:	orrs	r3, r4, r5
   1c8fc:	addeq	r8, r8, #128	; 0x80
   1c900:	moveq	r3, #1
   1c904:	movne	r3, #1
   1c908:	orreq	r1, r1, r3, lsl ip
   1c90c:	streq	r9, [r0, r8, lsl #2]
   1c910:	strbeq	r1, [r2, #1536]	; 0x600
   1c914:	mov	r0, r3
   1c918:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001c91c <unsetTextTableCharacter@@Base>:
   1c91c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c920:	sub	sp, sp, #12
   1c924:	mov	r2, #0
   1c928:	mov	fp, r1
   1c92c:	str	r0, [sp, #4]
   1c930:	bl	1c5bc <getTextTableHeader@@Base+0x8>
   1c934:	subs	r9, r0, #0
   1c938:	beq	1c998 <unsetTextTableCharacter@@Base+0x7c>
   1c93c:	uxtb	r8, fp
   1c940:	mov	r0, #1
   1c944:	and	r3, r8, #7
   1c948:	mov	r1, #0
   1c94c:	add	sl, r9, r8, lsr #3
   1c950:	mov	r5, #0
   1c954:	and	r1, r1, r5
   1c958:	ldrb	r6, [sl, #256]	; 0x100
   1c95c:	lsr	r4, r6, r3
   1c960:	and	r0, r0, r4
   1c964:	orrs	r2, r0, r1
   1c968:	beq	1c998 <unsetTextTableCharacter@@Base+0x7c>
   1c96c:	ldrb	r1, [r9, r8]
   1c970:	mov	r2, fp
   1c974:	ldr	r0, [sp, #4]
   1c978:	str	r3, [sp]
   1c97c:	bl	1c768 <getTextTableHeader@@Base+0x1b4>
   1c980:	strb	r5, [r9, r8]
   1c984:	mov	r1, #1
   1c988:	ldr	r3, [sp]
   1c98c:	ldrb	r2, [sl, #256]	; 0x100
   1c990:	bic	r3, r2, r1, lsl r3
   1c994:	strb	r3, [sl, #256]	; 0x100
   1c998:	add	sp, sp, #12
   1c99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c9a0 <setTextTableByte@@Base>:
   1c9a0:	push	{r3, r4, r5, lr}
   1c9a4:	mov	r4, r0
   1c9a8:	mov	r0, r1
   1c9ac:	mov	r5, r2
   1c9b0:	bl	1dcb0 <convertCharToWchar@@Base>
   1c9b4:	cmn	r0, #1
   1c9b8:	mov	r1, r0
   1c9bc:	beq	1c9d8 <setTextTableByte@@Base+0x38>
   1c9c0:	mov	r0, r4
   1c9c4:	mov	r2, r5
   1c9c8:	bl	1c8b0 <setTextTableCharacter@@Base>
   1c9cc:	adds	r0, r0, #0
   1c9d0:	movne	r0, #1
   1c9d4:	pop	{r3, r4, r5, pc}
   1c9d8:	mov	r0, #1
   1c9dc:	pop	{r3, r4, r5, pc}

0001c9e0 <newTextTableData@@Base>:
   1c9e0:	push	{r3, r4, r5, lr}
   1c9e4:	mov	r0, #4
   1c9e8:	bl	14b74 <malloc@plt>
   1c9ec:	subs	r4, r0, #0
   1c9f0:	beq	1ca3c <newTextTableData@@Base+0x5c>
   1c9f4:	mov	r5, #0
   1c9f8:	str	r5, [r4]
   1c9fc:	bl	1fb84 <newDataArea@@Base>
   1ca00:	cmp	r0, r5
   1ca04:	str	r0, [r4]
   1ca08:	beq	1ca34 <newTextTableData@@Base+0x54>
   1ca0c:	mov	r1, r5
   1ca10:	mov	r2, #1568	; 0x620
   1ca14:	mov	r3, #4
   1ca18:	bl	1fbc8 <allocateDataItem@@Base>
   1ca1c:	cmp	r0, r5
   1ca20:	beq	1ca2c <newTextTableData@@Base+0x4c>
   1ca24:	mov	r0, r4
   1ca28:	pop	{r3, r4, r5, pc}
   1ca2c:	ldr	r0, [r4]
   1ca30:	bl	1fba4 <destroyDataArea@@Base>
   1ca34:	mov	r0, r4
   1ca38:	bl	147fc <free@plt>
   1ca3c:	mov	r0, #0
   1ca40:	pop	{r3, r4, r5, pc}

0001ca44 <destroyTextTableData@@Base>:
   1ca44:	push	{r4, lr}
   1ca48:	mov	r4, r0
   1ca4c:	ldr	r0, [r0]
   1ca50:	bl	1fba4 <destroyDataArea@@Base>
   1ca54:	mov	r0, r4
   1ca58:	pop	{r4, lr}
   1ca5c:	b	147fc <free@plt>

0001ca60 <processTextTableLines@@Base>:
   1ca60:	push	{r4, r5, r6, r7, lr}
   1ca64:	mov	r7, r0
   1ca68:	mov	r6, r1
   1ca6c:	ldr	r0, [pc, #108]	; 1cae0 <processTextTableLines@@Base+0x80>
   1ca70:	ldr	r1, [pc, #108]	; 1cae4 <processTextTableLines@@Base+0x84>
   1ca74:	sub	sp, sp, #12
   1ca78:	add	r0, pc, r0
   1ca7c:	mov	r5, r2
   1ca80:	add	r1, pc, r1
   1ca84:	bl	1e69c <setGlobalTableVariables@@Base>
   1ca88:	cmp	r0, #0
   1ca8c:	beq	1cac8 <processTextTableLines@@Base+0x68>
   1ca90:	bl	1c9e0 <newTextTableData@@Base>
   1ca94:	subs	r4, r0, #0
   1ca98:	beq	1cac8 <processTextTableLines@@Base+0x68>
   1ca9c:	mov	r3, r5
   1caa0:	str	r4, [sp]
   1caa4:	mov	r1, r7
   1caa8:	mov	r2, r6
   1caac:	mov	r0, #0
   1cab0:	bl	1f28c <processDataStream@@Base>
   1cab4:	subs	r5, r0, #0
   1cab8:	mov	r0, r4
   1cabc:	beq	1cad4 <processTextTableLines@@Base+0x74>
   1cac0:	add	sp, sp, #12
   1cac4:	pop	{r4, r5, r6, r7, pc}
   1cac8:	mov	r0, #0
   1cacc:	add	sp, sp, #12
   1cad0:	pop	{r4, r5, r6, r7, pc}
   1cad4:	bl	1ca44 <destroyTextTableData@@Base>
   1cad8:	mov	r0, r5
   1cadc:	b	1cac0 <processTextTableLines@@Base+0x60>
   1cae0:	andeq	r5, r0, r8, asr #17
   1cae4:	andeq	r5, r0, r8, asr #17

0001cae8 <makeTextTable@@Base>:
   1cae8:	push	{r3, r4, r5, lr}
   1caec:	mov	r5, r0
   1caf0:	mov	r0, #8
   1caf4:	bl	14b74 <malloc@plt>
   1caf8:	subs	r4, r0, #0
   1cafc:	beq	1cb20 <makeTextTable@@Base+0x38>
   1cb00:	mov	r0, r5
   1cb04:	bl	1c5b4 <getTextTableHeader@@Base>
   1cb08:	str	r0, [r4]
   1cb0c:	ldr	r0, [r5]
   1cb10:	bl	1fc84 <getDataSize@@Base>
   1cb14:	str	r0, [r4, #4]
   1cb18:	ldr	r0, [r5]
   1cb1c:	bl	1fb70 <resetDataArea@@Base>
   1cb20:	mov	r0, r4
   1cb24:	pop	{r3, r4, r5, pc}

0001cb28 <destroyTextTable@@Base>:
   1cb28:	push	{r4, lr}
   1cb2c:	mov	r4, r0
   1cb30:	ldr	r3, [r0, #4]
   1cb34:	cmp	r3, #0
   1cb38:	popeq	{r4, pc}
   1cb3c:	ldr	r0, [r0]
   1cb40:	bl	147fc <free@plt>
   1cb44:	mov	r0, r4
   1cb48:	pop	{r4, lr}
   1cb4c:	b	147fc <free@plt>

0001cb50 <ensureTextTableExtension@@Base>:
   1cb50:	ldr	r1, [pc, #4]	; 1cb5c <ensureTextTableExtension@@Base+0xc>
   1cb54:	add	r1, pc, r1
   1cb58:	b	17fec <ensureFileExtension@@Base>
   1cb5c:	andeq	r5, r0, ip, ror #15

0001cb60 <makeTextTablePath@@Base>:
   1cb60:	ldr	r2, [pc, #4]	; 1cb6c <makeTextTablePath@@Base+0xc>
   1cb64:	add	r2, pc, r2
   1cb68:	b	1808c <makeFilePath@@Base>
   1cb6c:	ldrdeq	r5, [r0], -ip
   1cb70:	push	{r3, r4, r5, lr}
   1cb74:	bl	1cb60 <makeTextTablePath@@Base>
   1cb78:	subs	r4, r0, #0
   1cb7c:	moveq	r5, r4
   1cb80:	beq	1cbb0 <makeTextTablePath@@Base+0x50>
   1cb84:	ldr	r1, [pc, #44]	; 1cbb8 <makeTextTablePath@@Base+0x58>
   1cb88:	mov	r0, #7
   1cb8c:	mov	r2, r4
   1cb90:	add	r1, pc, r1
   1cb94:	bl	17b84 <logMessage@@Base>
   1cb98:	mov	r0, r4
   1cb9c:	bl	180e8 <testFilePath@@Base>
   1cba0:	adds	r5, r0, #0
   1cba4:	mov	r0, r4
   1cba8:	movne	r5, #1
   1cbac:	bl	147fc <free@plt>
   1cbb0:	mov	r0, r5
   1cbb4:	pop	{r3, r4, r5, pc}
   1cbb8:	andeq	r5, r0, r0, asr #15

0001cbbc <selectTextTable@@Base>:
   1cbbc:	ldr	r3, [pc, #368]	; 1cd34 <selectTextTable@@Base+0x178>
   1cbc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cbc4:	add	fp, sp, #28
   1cbc8:	ldr	r2, [pc, #360]	; 1cd38 <selectTextTable@@Base+0x17c>
   1cbcc:	sub	sp, sp, #8
   1cbd0:	add	r3, pc, r3
   1cbd4:	mov	r8, r0
   1cbd8:	mov	r0, #0
   1cbdc:	ldr	r6, [r3, r2]
   1cbe0:	mov	r1, r0
   1cbe4:	ldr	r3, [r6]
   1cbe8:	str	r3, [fp, #-32]	; 0xffffffe0
   1cbec:	bl	14b14 <setlocale@plt>
   1cbf0:	subs	r9, r0, #0
   1cbf4:	beq	1cd20 <selectTextTable@@Base+0x164>
   1cbf8:	bl	14b80 <strlen@plt>
   1cbfc:	ldrb	r4, [r9]
   1cc00:	mov	r7, sp
   1cc04:	cmp	r4, #0
   1cc08:	add	r0, r0, #8
   1cc0c:	bic	r3, r0, #7
   1cc10:	sub	sp, sp, r3
   1cc14:	mov	r5, sp
   1cc18:	beq	1cc58 <selectTextTable@@Base+0x9c>
   1cc1c:	cmp	r4, #46	; 0x2e
   1cc20:	beq	1cd18 <selectTextTable@@Base+0x15c>
   1cc24:	cmp	r4, #64	; 0x40
   1cc28:	beq	1cd18 <selectTextTable@@Base+0x15c>
   1cc2c:	mov	r2, r9
   1cc30:	mov	r4, #0
   1cc34:	b	1cc48 <selectTextTable@@Base+0x8c>
   1cc38:	cmp	r3, #46	; 0x2e
   1cc3c:	beq	1cc58 <selectTextTable@@Base+0x9c>
   1cc40:	cmp	r3, #64	; 0x40
   1cc44:	beq	1cc58 <selectTextTable@@Base+0x9c>
   1cc48:	ldrb	r3, [r2, #1]!
   1cc4c:	add	r4, r4, #1
   1cc50:	cmp	r3, #0
   1cc54:	bne	1cc38 <selectTextTable@@Base+0x7c>
   1cc58:	mov	r1, r9
   1cc5c:	mov	r0, r5
   1cc60:	mov	r2, r4
   1cc64:	bl	14c7c <strncpy@plt>
   1cc68:	mov	r3, #0
   1cc6c:	strb	r3, [r5, r4]
   1cc70:	ldrb	r3, [r5]
   1cc74:	cmp	r3, #67	; 0x43
   1cc78:	bne	1cc98 <selectTextTable@@Base+0xdc>
   1cc7c:	ldrb	r3, [r5, #1]
   1cc80:	cmp	r3, #0
   1cc84:	bne	1cc98 <selectTextTable@@Base+0xdc>
   1cc88:	strb	r3, [r5]
   1cc8c:	mov	r0, #0
   1cc90:	mov	sp, r7
   1cc94:	b	1cccc <selectTextTable@@Base+0x110>
   1cc98:	mov	r0, r8
   1cc9c:	mov	r1, r5
   1cca0:	bl	1cb70 <makeTextTablePath@@Base+0x10>
   1cca4:	subs	r4, r0, #0
   1cca8:	beq	1cce4 <selectTextTable@@Base+0x128>
   1ccac:	ldrb	r3, [r5]
   1ccb0:	cmp	r3, #0
   1ccb4:	beq	1cc8c <selectTextTable@@Base+0xd0>
   1ccb8:	mov	r0, r5
   1ccbc:	bl	14928 <__strdup@plt>
   1ccc0:	cmp	r0, #0
   1ccc4:	beq	1cd28 <selectTextTable@@Base+0x16c>
   1ccc8:	mov	sp, r7
   1cccc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ccd0:	ldr	r3, [r6]
   1ccd4:	cmp	r2, r3
   1ccd8:	bne	1cd30 <selectTextTable@@Base+0x174>
   1ccdc:	sub	sp, fp, #28
   1cce0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cce4:	mov	r0, r5
   1cce8:	mov	r1, #95	; 0x5f
   1ccec:	bl	14d3c <strchr@plt>
   1ccf0:	cmp	r0, #0
   1ccf4:	beq	1ccac <selectTextTable@@Base+0xf0>
   1ccf8:	strb	r4, [r0]
   1ccfc:	mov	r1, r5
   1cd00:	mov	r0, r8
   1cd04:	bl	1cb70 <makeTextTablePath@@Base+0x10>
   1cd08:	cmp	r0, #0
   1cd0c:	strbeq	r0, [r5]
   1cd10:	beq	1cc8c <selectTextTable@@Base+0xd0>
   1cd14:	b	1ccac <selectTextTable@@Base+0xf0>
   1cd18:	mov	r4, #0
   1cd1c:	b	1cc58 <selectTextTable@@Base+0x9c>
   1cd20:	mov	r0, r9
   1cd24:	b	1cccc <selectTextTable@@Base+0x110>
   1cd28:	bl	17c90 <logMallocError@@Base>
   1cd2c:	b	1cc8c <selectTextTable@@Base+0xd0>
   1cd30:	bl	14a60 <__stack_chk_fail@plt>
   1cd34:	andeq	r7, r1, r8, lsr #8
   1cd38:	andeq	r0, r0, ip, lsr #4
   1cd3c:	mov	r3, r1
   1cd40:	ldr	r2, [pc, #12]	; 1cd54 <selectTextTable@@Base+0x198>
   1cd44:	ldr	r1, [pc, #12]	; 1cd58 <selectTextTable@@Base+0x19c>
   1cd48:	add	r2, pc, r2
   1cd4c:	add	r1, pc, r1
   1cd50:	b	1f19c <processPropertyOperand@@Base>
   1cd54:	andeq	r5, r0, r4, lsr #12
   1cd58:	andeq	r7, r1, r0, asr r1
   1cd5c:	ldr	ip, [pc, #168]	; 1ce0c <selectTextTable@@Base+0x250>
   1cd60:	mov	r2, #1
   1cd64:	push	{r4, r5, r6, r7, lr}
   1cd68:	add	ip, pc, ip
   1cd6c:	ldr	lr, [pc, #156]	; 1ce10 <selectTextTable@@Base+0x254>
   1cd70:	sub	sp, sp, #1040	; 0x410
   1cd74:	sub	sp, sp, #4
   1cd78:	ldr	r3, [pc, #148]	; 1ce14 <selectTextTable@@Base+0x258>
   1cd7c:	add	r5, sp, #16
   1cd80:	mov	r7, r1
   1cd84:	ldr	r4, [ip, lr]
   1cd88:	sub	r1, r5, #4
   1cd8c:	add	r3, pc, r3
   1cd90:	mov	r6, r0
   1cd94:	ldr	ip, [r4]
   1cd98:	str	ip, [sp, #1036]	; 0x40c
   1cd9c:	bl	1ef7c <getDataString@@Base>
   1cda0:	cmp	r0, #0
   1cda4:	beq	1cdd4 <selectTextTable@@Base+0x218>
   1cda8:	ldrb	r3, [sp, #12]
   1cdac:	cmp	r3, #1
   1cdb0:	beq	1cdf0 <selectTextTable@@Base+0x234>
   1cdb4:	ldr	r1, [pc, #92]	; 1ce18 <selectTextTable@@Base+0x25c>
   1cdb8:	mov	r0, r6
   1cdbc:	ldr	r2, [pc, #88]	; 1ce1c <selectTextTable@@Base+0x260>
   1cdc0:	str	r5, [sp]
   1cdc4:	add	r1, pc, r1
   1cdc8:	add	r2, pc, r2
   1cdcc:	bl	1e370 <reportDataError@@Base>
   1cdd0:	mov	r0, #0
   1cdd4:	ldr	r2, [sp, #1036]	; 0x40c
   1cdd8:	ldr	r3, [r4]
   1cddc:	cmp	r2, r3
   1cde0:	bne	1ce08 <selectTextTable@@Base+0x24c>
   1cde4:	add	sp, sp, #1040	; 0x410
   1cde8:	add	sp, sp, #4
   1cdec:	pop	{r4, r5, r6, r7, pc}
   1cdf0:	ldr	r2, [sp, #16]
   1cdf4:	cmp	r2, #255	; 0xff
   1cdf8:	strbls	r2, [r7]
   1cdfc:	movls	r0, r3
   1ce00:	bhi	1cdb4 <selectTextTable@@Base+0x1f8>
   1ce04:	b	1cdd4 <selectTextTable@@Base+0x218>
   1ce08:	bl	14a60 <__stack_chk_fail@plt>
   1ce0c:	muleq	r1, r0, r2
   1ce10:	andeq	r0, r0, ip, lsr #4
   1ce14:	strdeq	r5, [r0], -r8
   1ce18:	ldrdeq	r5, [r0], -r0
   1ce1c:			; <UNDEFINED> instruction: 0x000055bc
   1ce20:	ldr	ip, [pc, #152]	; 1cec0 <selectTextTable@@Base+0x304>
   1ce24:	mov	r2, #0
   1ce28:	ldr	r3, [pc, #148]	; 1cec4 <selectTextTable@@Base+0x308>
   1ce2c:	add	ip, pc, ip
   1ce30:	push	{r4, r5, r6, r7, r8, lr}
   1ce34:	sub	sp, sp, #1040	; 0x410
   1ce38:	ldr	r4, [ip, r3]
   1ce3c:	add	r6, sp, #16
   1ce40:	ldr	r5, [pc, #128]	; 1cec8 <selectTextTable@@Base+0x30c>
   1ce44:	mov	r7, r1
   1ce48:	sub	r1, r6, #4
   1ce4c:	mov	r8, r0
   1ce50:	ldr	ip, [r4]
   1ce54:	add	r5, pc, r5
   1ce58:	mov	r3, r5
   1ce5c:	str	ip, [sp, #1036]	; 0x40c
   1ce60:	bl	1ef7c <getDataString@@Base>
   1ce64:	cmp	r0, #0
   1ce68:	beq	1ce80 <selectTextTable@@Base+0x2c4>
   1ce6c:	ldr	r3, [sp, #16]
   1ce70:	cmp	r3, #0
   1ce74:	blt	1ce98 <selectTextTable@@Base+0x2dc>
   1ce78:	mov	r0, #1
   1ce7c:	str	r3, [r7]
   1ce80:	ldr	r2, [sp, #1036]	; 0x40c
   1ce84:	ldr	r3, [r4]
   1ce88:	cmp	r2, r3
   1ce8c:	bne	1cebc <selectTextTable@@Base+0x300>
   1ce90:	add	sp, sp, #1040	; 0x410
   1ce94:	pop	{r4, r5, r6, r7, r8, pc}
   1ce98:	ldr	r1, [pc, #44]	; 1cecc <selectTextTable@@Base+0x310>
   1ce9c:	mov	r0, r8
   1cea0:	ldrb	r3, [sp, #12]
   1cea4:	mov	r2, r5
   1cea8:	str	r6, [sp]
   1ceac:	add	r1, pc, r1
   1ceb0:	bl	1e370 <reportDataError@@Base>
   1ceb4:	mov	r0, #0
   1ceb8:	b	1ce80 <selectTextTable@@Base+0x2c4>
   1cebc:	bl	14a60 <__stack_chk_fail@plt>
   1cec0:	andeq	r7, r1, ip, asr #3
   1cec4:	andeq	r0, r0, ip, lsr #4
   1cec8:	andeq	r5, r0, r4, asr r5
   1cecc:	andeq	r5, r0, r8, ror #9
   1ced0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ced4:	sub	sp, sp, #28
   1ced8:	ldr	r5, [pc, #436]	; 1d094 <selectTextTable@@Base+0x4d8>
   1cedc:	mov	r4, r1
   1cee0:	ldr	r3, [pc, #432]	; 1d098 <selectTextTable@@Base+0x4dc>
   1cee4:	mov	r7, r0
   1cee8:	add	r5, pc, r5
   1ceec:	ldr	r1, [pc, #424]	; 1d09c <selectTextTable@@Base+0x4e0>
   1cef0:	ldr	r3, [r5, r3]
   1cef4:	add	r1, pc, r1
   1cef8:	str	r3, [sp, #4]
   1cefc:	ldr	r3, [r3]
   1cf00:	str	r3, [sp, #20]
   1cf04:	bl	1e6e4 <findDataOperand@@Base>
   1cf08:	subs	r3, r0, #0
   1cf0c:	bne	1cf30 <selectTextTable@@Base+0x374>
   1cf10:	ldr	r1, [sp, #4]
   1cf14:	mov	r0, r3
   1cf18:	ldr	r2, [sp, #20]
   1cf1c:	ldr	r3, [r1]
   1cf20:	cmp	r2, r3
   1cf24:	bne	1d090 <selectTextTable@@Base+0x4d4>
   1cf28:	add	sp, sp, #28
   1cf2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cf30:	add	r8, sp, #12
   1cf34:	mov	r0, r7
   1cf38:	mov	r1, r8
   1cf3c:	bl	1e84c <getDataCharacter@@Base>
   1cf40:	subs	r3, r0, #0
   1cf44:	beq	1cf10 <selectTextTable@@Base+0x354>
   1cf48:	ldr	r1, [sp, #12]
   1cf4c:	cmp	r1, #40	; 0x28
   1cf50:	beq	1cff4 <selectTextTable@@Base+0x438>
   1cf54:	ldr	r0, [pc, #324]	; 1d0a0 <selectTextTable@@Base+0x4e4>
   1cf58:	mov	r6, #0
   1cf5c:	strb	r6, [r4]
   1cf60:	add	r0, pc, r0
   1cf64:	bl	14910 <wcschr@plt>
   1cf68:	cmp	r0, #0
   1cf6c:	movne	sl, #1
   1cf70:	beq	1d078 <selectTextTable@@Base+0x4bc>
   1cf74:	add	fp, sp, #16
   1cf78:	mov	r0, r7
   1cf7c:	mov	r1, r8
   1cf80:	bl	1e84c <getDataCharacter@@Base>
   1cf84:	subs	r3, r0, #0
   1cf88:	beq	1d03c <selectTextTable@@Base+0x480>
   1cf8c:	ldr	r9, [sp, #12]
   1cf90:	mov	r0, r9
   1cf94:	bl	14790 <iswspace@plt>
   1cf98:	cmp	r6, #0
   1cf9c:	beq	1d004 <selectTextTable@@Base+0x448>
   1cfa0:	cmp	r6, r9
   1cfa4:	beq	1d018 <selectTextTable@@Base+0x45c>
   1cfa8:	cmp	r0, #0
   1cfac:	bne	1cf78 <selectTextTable@@Base+0x3bc>
   1cfb0:	cmp	sl, #0
   1cfb4:	bne	1d020 <selectTextTable@@Base+0x464>
   1cfb8:	mov	r0, r9
   1cfbc:	mov	r1, fp
   1cfc0:	bl	1e2e4 <brlDotNumberToIndex@@Base>
   1cfc4:	cmp	r0, #0
   1cfc8:	beq	1d020 <selectTextTable@@Base+0x464>
   1cfcc:	ldr	r1, [pc, #208]	; 1d0a4 <selectTextTable@@Base+0x4e8>
   1cfd0:	ldr	r3, [sp, #16]
   1cfd4:	ldrb	r2, [r4]
   1cfd8:	ldr	r1, [r5, r1]
   1cfdc:	ldrb	r3, [r1, r3]
   1cfe0:	tst	r2, r3
   1cfe4:	bne	1d060 <selectTextTable@@Base+0x4a4>
   1cfe8:	orr	r3, r2, r3
   1cfec:	strb	r3, [r4]
   1cff0:	b	1cf78 <selectTextTable@@Base+0x3bc>
   1cff4:	mov	sl, #0
   1cff8:	mov	r6, #41	; 0x29
   1cffc:	strb	sl, [r4]
   1d000:	b	1cf74 <selectTextTable@@Base+0x3b8>
   1d004:	cmp	r0, #0
   1d008:	beq	1cfb0 <selectTextTable@@Base+0x3f4>
   1d00c:	mov	r0, r7
   1d010:	mov	r1, #1
   1d014:	bl	1e874 <ungetDataCharacters@@Base>
   1d018:	mov	r3, #1
   1d01c:	b	1cf10 <selectTextTable@@Base+0x354>
   1d020:	ldr	r1, [pc, #128]	; 1d0a8 <selectTextTable@@Base+0x4ec>
   1d024:	mov	r0, r7
   1d028:	mov	r2, r8
   1d02c:	add	r1, pc, r1
   1d030:	bl	1e370 <reportDataError@@Base>
   1d034:	mov	r3, #0
   1d038:	b	1cf10 <selectTextTable@@Base+0x354>
   1d03c:	cmp	r6, #0
   1d040:	beq	1d018 <selectTextTable@@Base+0x45c>
   1d044:	ldr	r1, [pc, #96]	; 1d0ac <selectTextTable@@Base+0x4f0>
   1d048:	mov	r0, r7
   1d04c:	str	r3, [sp]
   1d050:	add	r1, pc, r1
   1d054:	bl	1e370 <reportDataError@@Base>
   1d058:	ldr	r3, [sp]
   1d05c:	b	1cf10 <selectTextTable@@Base+0x354>
   1d060:	ldr	r1, [pc, #72]	; 1d0b0 <selectTextTable@@Base+0x4f4>
   1d064:	mov	r0, r7
   1d068:	mov	r2, r8
   1d06c:	add	r1, pc, r1
   1d070:	bl	1e370 <reportDataError@@Base>
   1d074:	b	1d034 <selectTextTable@@Base+0x478>
   1d078:	mov	r6, r0
   1d07c:	mov	r1, #1
   1d080:	mov	r0, r7
   1d084:	mov	sl, r6
   1d088:	bl	1e874 <ungetDataCharacters@@Base>
   1d08c:	b	1cf74 <selectTextTable@@Base+0x3b8>
   1d090:	bl	14a60 <__stack_chk_fail@plt>
   1d094:	andeq	r7, r1, r0, lsl r1
   1d098:	andeq	r0, r0, ip, lsr #4
   1d09c:	andeq	r5, r0, r8, asr #9
   1d0a0:	andeq	r5, r0, ip, lsr #9
   1d0a4:	andeq	r0, r0, r8, asr #4
   1d0a8:	muleq	r0, r8, r3
   1d0ac:	andeq	r5, r0, ip, lsr #7
   1d0b0:	andeq	r5, r0, r4, ror r3
   1d0b4:	ldr	r3, [pc, #128]	; 1d13c <selectTextTable@@Base+0x580>
   1d0b8:	ldr	r2, [pc, #128]	; 1d140 <selectTextTable@@Base+0x584>
   1d0bc:	add	r3, pc, r3
   1d0c0:	push	{r4, r5, r6, lr}
   1d0c4:	sub	sp, sp, #8
   1d0c8:	ldr	r4, [r3, r2]
   1d0cc:	mov	r6, r1
   1d0d0:	add	r1, sp, #2
   1d0d4:	mov	r5, r0
   1d0d8:	ldr	r3, [r4]
   1d0dc:	str	r3, [sp, #4]
   1d0e0:	bl	1cd5c <selectTextTable@@Base+0x1a0>
   1d0e4:	cmp	r0, #0
   1d0e8:	bne	1d108 <selectTextTable@@Base+0x54c>
   1d0ec:	mov	r0, #1
   1d0f0:	ldr	r2, [sp, #4]
   1d0f4:	ldr	r3, [r4]
   1d0f8:	cmp	r2, r3
   1d0fc:	bne	1d138 <selectTextTable@@Base+0x57c>
   1d100:	add	sp, sp, #8
   1d104:	pop	{r4, r5, r6, pc}
   1d108:	mov	r0, r5
   1d10c:	add	r1, sp, #3
   1d110:	bl	1ced0 <selectTextTable@@Base+0x314>
   1d114:	cmp	r0, #0
   1d118:	beq	1d0ec <selectTextTable@@Base+0x530>
   1d11c:	mov	r0, r6
   1d120:	ldrb	r1, [sp, #2]
   1d124:	ldrb	r2, [sp, #3]
   1d128:	bl	1c9a0 <setTextTableByte@@Base>
   1d12c:	cmp	r0, #0
   1d130:	bne	1d0ec <selectTextTable@@Base+0x530>
   1d134:	b	1d0f0 <selectTextTable@@Base+0x534>
   1d138:	bl	14a60 <__stack_chk_fail@plt>
   1d13c:	andeq	r6, r1, ip, lsr pc
   1d140:	andeq	r0, r0, ip, lsr #4
   1d144:	ldr	r3, [pc, #128]	; 1d1cc <selectTextTable@@Base+0x610>
   1d148:	ldr	r2, [pc, #128]	; 1d1d0 <selectTextTable@@Base+0x614>
   1d14c:	add	r3, pc, r3
   1d150:	push	{r4, r5, r6, lr}
   1d154:	sub	sp, sp, #16
   1d158:	ldr	r4, [r3, r2]
   1d15c:	mov	r6, r1
   1d160:	add	r1, sp, #8
   1d164:	mov	r5, r0
   1d168:	ldr	r3, [r4]
   1d16c:	str	r3, [sp, #12]
   1d170:	bl	1ce20 <selectTextTable@@Base+0x264>
   1d174:	cmp	r0, #0
   1d178:	bne	1d198 <selectTextTable@@Base+0x5dc>
   1d17c:	mov	r0, #1
   1d180:	ldr	r2, [sp, #12]
   1d184:	ldr	r3, [r4]
   1d188:	cmp	r2, r3
   1d18c:	bne	1d1c8 <selectTextTable@@Base+0x60c>
   1d190:	add	sp, sp, #16
   1d194:	pop	{r4, r5, r6, pc}
   1d198:	mov	r0, r5
   1d19c:	add	r1, sp, #7
   1d1a0:	bl	1ced0 <selectTextTable@@Base+0x314>
   1d1a4:	cmp	r0, #0
   1d1a8:	beq	1d17c <selectTextTable@@Base+0x5c0>
   1d1ac:	mov	r0, r6
   1d1b0:	ldr	r1, [sp, #8]
   1d1b4:	ldrb	r2, [sp, #7]
   1d1b8:	bl	1c818 <setTextTableGlyph@@Base>
   1d1bc:	cmp	r0, #0
   1d1c0:	bne	1d17c <selectTextTable@@Base+0x5c0>
   1d1c4:	b	1d180 <selectTextTable@@Base+0x5c4>
   1d1c8:	bl	14a60 <__stack_chk_fail@plt>
   1d1cc:	andeq	r6, r1, ip, lsr #29
   1d1d0:	andeq	r0, r0, ip, lsr #4
   1d1d4:	ldr	r3, [pc, #128]	; 1d25c <selectTextTable@@Base+0x6a0>
   1d1d8:	ldr	r2, [pc, #128]	; 1d260 <selectTextTable@@Base+0x6a4>
   1d1dc:	add	r3, pc, r3
   1d1e0:	push	{r4, r5, r6, lr}
   1d1e4:	sub	sp, sp, #16
   1d1e8:	ldr	r4, [r3, r2]
   1d1ec:	mov	r6, r1
   1d1f0:	add	r1, sp, #8
   1d1f4:	mov	r5, r0
   1d1f8:	ldr	r3, [r4]
   1d1fc:	str	r3, [sp, #12]
   1d200:	bl	1ce20 <selectTextTable@@Base+0x264>
   1d204:	cmp	r0, #0
   1d208:	bne	1d228 <selectTextTable@@Base+0x66c>
   1d20c:	mov	r0, #1
   1d210:	ldr	r2, [sp, #12]
   1d214:	ldr	r3, [r4]
   1d218:	cmp	r2, r3
   1d21c:	bne	1d258 <selectTextTable@@Base+0x69c>
   1d220:	add	sp, sp, #16
   1d224:	pop	{r4, r5, r6, pc}
   1d228:	mov	r0, r5
   1d22c:	add	r1, sp, #7
   1d230:	bl	1ced0 <selectTextTable@@Base+0x314>
   1d234:	cmp	r0, #0
   1d238:	beq	1d20c <selectTextTable@@Base+0x650>
   1d23c:	mov	r0, r6
   1d240:	ldr	r1, [sp, #8]
   1d244:	ldrb	r2, [sp, #7]
   1d248:	bl	1c8b0 <setTextTableCharacter@@Base>
   1d24c:	cmp	r0, #0
   1d250:	bne	1d20c <selectTextTable@@Base+0x650>
   1d254:	b	1d210 <selectTextTable@@Base+0x654>
   1d258:	bl	14a60 <__stack_chk_fail@plt>
   1d25c:	andeq	r6, r1, ip, lsl lr
   1d260:	andeq	r0, r0, ip, lsr #4

0001d264 <processTextTableStream@@Base>:
   1d264:	ldr	r2, [pc, #4]	; 1d270 <processTextTableStream@@Base+0xc>
   1d268:	add	r2, pc, r2
   1d26c:	b	1ca60 <processTextTableLines@@Base>
   1d270:			; <UNDEFINED> instruction: 0xfffffacc

0001d274 <compileTextTable@@Base>:
   1d274:	ldr	r1, [pc, #84]	; 1d2d0 <compileTextTable@@Base+0x5c>
   1d278:	mov	r2, #0
   1d27c:	push	{r4, r5, r6, lr}
   1d280:	add	r1, pc, r1
   1d284:	mov	r5, r0
   1d288:	bl	18710 <openDataFile@@Base>
   1d28c:	subs	r4, r0, #0
   1d290:	beq	1d2c8 <compileTextTable@@Base+0x54>
   1d294:	mov	r1, r5
   1d298:	bl	1d264 <processTextTableStream@@Base>
   1d29c:	subs	r6, r0, #0
   1d2a0:	moveq	r5, r6
   1d2a4:	beq	1d2b8 <compileTextTable@@Base+0x44>
   1d2a8:	bl	1cae8 <makeTextTable@@Base>
   1d2ac:	mov	r5, r0
   1d2b0:	mov	r0, r6
   1d2b4:	bl	1ca44 <destroyTextTableData@@Base>
   1d2b8:	mov	r0, r4
   1d2bc:	bl	14bbc <fclose@plt>
   1d2c0:	mov	r0, r5
   1d2c4:	pop	{r4, r5, r6, pc}
   1d2c8:	mov	r5, r4
   1d2cc:	b	1d2c0 <compileTextTable@@Base+0x4c>
   1d2d0:	andeq	r5, r0, r8, lsr r1

0001d2d4 <getBaseCharacter@@Base>:
   1d2d4:	ldr	ip, [pc, #124]	; 1d358 <getBaseCharacter@@Base+0x84>
   1d2d8:	mov	r1, #1
   1d2dc:	ldr	r2, [pc, #120]	; 1d35c <getBaseCharacter@@Base+0x88>
   1d2e0:	add	ip, pc, ip
   1d2e4:	push	{r4, r5, r6, lr}
   1d2e8:	sub	sp, sp, #64	; 0x40
   1d2ec:	ldr	r5, [ip, r2]
   1d2f0:	add	r6, sp, #28
   1d2f4:	str	r6, [sp]
   1d2f8:	mov	r4, #0
   1d2fc:	mov	r3, r4
   1d300:	mov	lr, #16
   1d304:	ldr	ip, [r5]
   1d308:	mov	r2, #2
   1d30c:	strh	r0, [sp, #20]
   1d310:	add	r0, sp, #20
   1d314:	str	lr, [sp, #4]
   1d318:	add	lr, sp, #24
   1d31c:	str	lr, [sp, #8]
   1d320:	str	ip, [sp, #60]	; 0x3c
   1d324:	str	r4, [sp, #24]
   1d328:	bl	149f4 <unorm_normalize_50@plt>
   1d32c:	ldr	r3, [sp, #24]
   1d330:	ldr	r2, [sp, #60]	; 0x3c
   1d334:	cmp	r3, r4
   1d338:	ldr	r3, [r5]
   1d33c:	ldrhle	r0, [sp, #28]
   1d340:	movgt	r0, r4
   1d344:	cmp	r2, r3
   1d348:	bne	1d354 <getBaseCharacter@@Base+0x80>
   1d34c:	add	sp, sp, #64	; 0x40
   1d350:	pop	{r4, r5, r6, pc}
   1d354:	bl	14a60 <__stack_chk_fail@plt>
   1d358:	andeq	r6, r1, r8, lsl sp
   1d35c:	andeq	r0, r0, ip, lsr #4

0001d360 <getTransliteratedCharacter@@Base>:
   1d360:	ldr	r3, [pc, #224]	; 1d448 <getTransliteratedCharacter@@Base+0xe8>
   1d364:	push	{r4, r5, fp, lr}
   1d368:	add	fp, sp, #12
   1d36c:	ldr	r2, [pc, #216]	; 1d44c <getTransliteratedCharacter@@Base+0xec>
   1d370:	sub	sp, sp, #56	; 0x38
   1d374:	add	r3, pc, r3
   1d378:	ldr	r5, [pc, #208]	; 1d450 <getTransliteratedCharacter@@Base+0xf0>
   1d37c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d380:	add	r5, pc, r5
   1d384:	ldr	r4, [r3, r2]
   1d388:	ldr	r0, [r5]
   1d38c:	ldr	r3, [r4]
   1d390:	cmp	r0, #0
   1d394:	str	r3, [fp, #-16]
   1d398:	beq	1d41c <getTransliteratedCharacter@@Base+0xbc>
   1d39c:	cmn	r0, #1
   1d3a0:	moveq	r0, #0
   1d3a4:	beq	1d404 <getTransliteratedCharacter@@Base+0xa4>
   1d3a8:	sub	r3, fp, #56	; 0x38
   1d3ac:	mov	r2, #4
   1d3b0:	str	r3, [fp, #-48]	; 0xffffffd0
   1d3b4:	sub	r5, fp, #32
   1d3b8:	str	r2, [fp, #-44]	; 0xffffffd4
   1d3bc:	mov	r3, #16
   1d3c0:	str	r5, [fp, #-36]	; 0xffffffdc
   1d3c4:	sub	r1, fp, #48	; 0x30
   1d3c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1d3cc:	sub	r2, fp, #44	; 0x2c
   1d3d0:	sub	r3, fp, #40	; 0x28
   1d3d4:	str	r3, [sp]
   1d3d8:	sub	r3, fp, #36	; 0x24
   1d3dc:	bl	14c40 <iconv@plt>
   1d3e0:	mov	r3, sp
   1d3e4:	cmn	r0, #1
   1d3e8:	beq	1d3fc <getTransliteratedCharacter@@Base+0x9c>
   1d3ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d3f0:	rsb	r5, r5, r2
   1d3f4:	cmp	r5, #1
   1d3f8:	beq	1d43c <getTransliteratedCharacter@@Base+0xdc>
   1d3fc:	mov	r0, #0
   1d400:	mov	sp, r3
   1d404:	ldr	r2, [fp, #-16]
   1d408:	ldr	r3, [r4]
   1d40c:	cmp	r2, r3
   1d410:	bne	1d444 <getTransliteratedCharacter@@Base+0xe4>
   1d414:	sub	sp, fp, #12
   1d418:	pop	{r4, r5, fp, pc}
   1d41c:	ldr	r0, [pc, #48]	; 1d454 <getTransliteratedCharacter@@Base+0xf4>
   1d420:	ldr	r1, [pc, #48]	; 1d458 <getTransliteratedCharacter@@Base+0xf8>
   1d424:	add	r0, pc, r0
   1d428:	add	r1, pc, r1
   1d42c:	bl	14c10 <iconv_open@plt>
   1d430:	mov	r3, r0
   1d434:	str	r3, [r5]
   1d438:	b	1d39c <getTransliteratedCharacter@@Base+0x3c>
   1d43c:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   1d440:	b	1d404 <getTransliteratedCharacter@@Base+0xa4>
   1d444:	bl	14a60 <__stack_chk_fail@plt>
   1d448:	andeq	r6, r1, r4, lsl #25
   1d44c:	andeq	r0, r0, ip, lsr #4
   1d450:	andeq	r6, r1, r8, ror #31
   1d454:	andeq	r5, r0, r0, asr r0
   1d458:	andeq	r5, r0, ip, asr r0

0001d45c <getCharacterWidth@@Base>:
   1d45c:	push	{r3, r4, r5, lr}
   1d460:	movw	r1, #4101	; 0x1005
   1d464:	mov	r4, r0
   1d468:	bl	149b8 <u_getIntPropertyValue_50@plt>
   1d46c:	movw	r1, #4100	; 0x1004
   1d470:	mov	r5, r0
   1d474:	mov	r0, r4
   1d478:	bl	149b8 <u_getIntPropertyValue_50@plt>
   1d47c:	cmp	r4, #0
   1d480:	beq	1d500 <getCharacterWidth@@Base+0xa4>
   1d484:	cmp	r5, #15
   1d488:	beq	1d53c <getCharacterWidth@@Base+0xe0>
   1d48c:	sub	r3, r5, #6
   1d490:	cmp	r3, #1
   1d494:	bls	1d4f8 <getCharacterWidth@@Base+0x9c>
   1d498:	sub	r3, r4, #4416	; 0x1140
   1d49c:	sub	r3, r3, #32
   1d4a0:	cmp	r3, #159	; 0x9f
   1d4a4:	bls	1d4f0 <getCharacterWidth@@Base+0x94>
   1d4a8:	cmp	r4, #173	; 0xad
   1d4ac:	beq	1d508 <getCharacterWidth@@Base+0xac>
   1d4b0:	cmp	r5, #16
   1d4b4:	beq	1d4f8 <getCharacterWidth@@Base+0x9c>
   1d4b8:	cmp	r0, #3
   1d4bc:	beq	1d534 <getCharacterWidth@@Base+0xd8>
   1d4c0:	cmp	r0, #2
   1d4c4:	beq	1d508 <getCharacterWidth@@Base+0xac>
   1d4c8:	cmp	r0, #5
   1d4cc:	beq	1d534 <getCharacterWidth@@Base+0xd8>
   1d4d0:	cmp	r0, #4
   1d4d4:	beq	1d508 <getCharacterWidth@@Base+0xac>
   1d4d8:	cmp	r0, #1
   1d4dc:	beq	1d510 <getCharacterWidth@@Base+0xb4>
   1d4e0:	cmp	r5, #0
   1d4e4:	movne	r0, #1
   1d4e8:	mvneq	r0, #0
   1d4ec:	pop	{r3, r4, r5, pc}
   1d4f0:	cmp	r5, #5
   1d4f4:	bne	1d4b0 <getCharacterWidth@@Base+0x54>
   1d4f8:	mov	r0, #0
   1d4fc:	pop	{r3, r4, r5, pc}
   1d500:	mov	r0, r4
   1d504:	pop	{r3, r4, r5, pc}
   1d508:	mov	r0, #1
   1d50c:	pop	{r3, r4, r5, pc}
   1d510:	sub	r3, r4, #19968	; 0x4e00
   1d514:	cmp	r3, #20992	; 0x5200
   1d518:	bcc	1d534 <getCharacterWidth@@Base+0xd8>
   1d51c:	sub	r3, r4, #13312	; 0x3400
   1d520:	cmp	r3, #6592	; 0x19c0
   1d524:	bcc	1d534 <getCharacterWidth@@Base+0xd8>
   1d528:	sub	r4, r4, #63744	; 0xf900
   1d52c:	cmp	r4, #512	; 0x200
   1d530:	bcs	1d4e0 <getCharacterWidth@@Base+0x84>
   1d534:	mov	r0, #2
   1d538:	pop	{r3, r4, r5, pc}
   1d53c:	mvn	r0, #0
   1d540:	pop	{r3, r4, r5, pc}

0001d544 <handleBestCharacter@@Base>:
   1d544:	push	{r3, r4, r5, r6, r7, lr}
   1d548:	mov	r4, r0
   1d54c:	ldr	r5, [pc, #76]	; 1d5a0 <handleBestCharacter@@Base+0x5c>
   1d550:	mov	r7, r1
   1d554:	mov	r6, r2
   1d558:	add	r5, pc, r5
   1d55c:	sub	r5, r5, #4
   1d560:	b	1d57c <handleBestCharacter@@Base+0x38>
   1d564:	ldr	r3, [r5, #4]!
   1d568:	cmp	r3, #0
   1d56c:	beq	1d598 <handleBestCharacter@@Base+0x54>
   1d570:	blx	r3
   1d574:	cmp	r0, #0
   1d578:	movne	r4, r0
   1d57c:	mov	r0, r4
   1d580:	mov	r1, r6
   1d584:	blx	r7
   1d588:	subs	ip, r0, #0
   1d58c:	mov	r0, r4
   1d590:	beq	1d564 <handleBestCharacter@@Base+0x20>
   1d594:	mov	ip, #1
   1d598:	mov	r0, ip
   1d59c:	pop	{r3, r4, r5, r6, r7, pc}
   1d5a0:	andeq	r6, r1, ip, ror #18

0001d5a4 <getTextLength@@Base>:
   1d5a4:	mov	r1, r0
   1d5a8:	mov	r0, #0
   1d5ac:	mov	r2, r0
   1d5b0:	b	14820 <mbstowcs@plt>

0001d5b4 <convertWcharToUtf8@@Base>:
   1d5b4:	ldr	r2, [pc, #196]	; 1d680 <convertWcharToUtf8@@Base+0xcc>
   1d5b8:	mov	r3, r0
   1d5bc:	ldr	r0, [pc, #192]	; 1d684 <convertWcharToUtf8@@Base+0xd0>
   1d5c0:	bics	ip, r3, #127	; 0x7f
   1d5c4:	add	r2, pc, r2
   1d5c8:	push	{r4, r5, r6, r7, r8, lr}
   1d5cc:	sub	sp, sp, #16
   1d5d0:	ldr	r7, [r2, r0]
   1d5d4:	mov	r8, r1
   1d5d8:	moveq	r6, #1
   1d5dc:	ldr	r2, [r7]
   1d5e0:	strbeq	r3, [r1]
   1d5e4:	str	r2, [sp, #12]
   1d5e8:	beq	1d658 <convertWcharToUtf8@@Base+0xa4>
   1d5ec:	add	lr, sp, #11
   1d5f0:	and	r4, r3, #63	; 0x3f
   1d5f4:	lsrs	r3, r3, #6
   1d5f8:	mov	ip, lr
   1d5fc:	orr	r5, r4, #128	; 0x80
   1d600:	sub	lr, lr, #1
   1d604:	strb	r5, [ip]
   1d608:	bne	1d5f0 <convertWcharToUtf8@@Base+0x3c>
   1d60c:	add	r6, sp, #12
   1d610:	mov	r1, #1
   1d614:	rsb	r6, ip, r6
   1d618:	mov	r0, ip
   1d61c:	rsb	r2, r6, #7
   1d620:	cmp	r4, r1, lsl r2
   1d624:	strbge	r3, [r0, #-1]
   1d628:	addge	r6, r6, #1
   1d62c:	uxtblt	r2, r5
   1d630:	movge	r2, r3
   1d634:	movge	ip, lr
   1d638:	rsb	r5, r6, #8
   1d63c:	mvn	r3, #0
   1d640:	orr	r5, r2, r3, lsl r5
   1d644:	mov	r1, ip
   1d648:	strb	r5, [ip]
   1d64c:	mov	r0, r8
   1d650:	mov	r2, r6
   1d654:	bl	14b68 <memcpy@plt>
   1d658:	mov	r3, #0
   1d65c:	ldr	r2, [sp, #12]
   1d660:	strb	r3, [r8, r6]
   1d664:	mov	r0, r6
   1d668:	ldr	r3, [r7]
   1d66c:	cmp	r2, r3
   1d670:	bne	1d67c <convertWcharToUtf8@@Base+0xc8>
   1d674:	add	sp, sp, #16
   1d678:	pop	{r4, r5, r6, r7, r8, pc}
   1d67c:	bl	14a60 <__stack_chk_fail@plt>
   1d680:	andeq	r6, r1, r4, lsr sl
   1d684:	andeq	r0, r0, ip, lsr #4

0001d688 <convertUtf8ToWchar@@Base>:
   1d688:	ldr	ip, [r1]
   1d68c:	mov	r2, r0
   1d690:	push	{r4, r5}
   1d694:	mvn	r0, #0
   1d698:	mov	r4, #0
   1d69c:	mov	r5, #1
   1d6a0:	cmp	ip, #0
   1d6a4:	beq	1d740 <convertUtf8ToWchar@@Base+0xb8>
   1d6a8:	ldr	r3, [r2]
   1d6ac:	add	ip, r3, #1
   1d6b0:	str	ip, [r2]
   1d6b4:	ldrb	r3, [r3]
   1d6b8:	ldr	ip, [r1]
   1d6bc:	tst	r3, #128	; 0x80
   1d6c0:	sub	ip, ip, #1
   1d6c4:	str	ip, [r1]
   1d6c8:	beq	1d7a0 <convertUtf8ToWchar@@Base+0x118>
   1d6cc:	tst	r3, #64	; 0x40
   1d6d0:	bne	1d748 <convertUtf8ToWchar@@Base+0xc0>
   1d6d4:	cmn	r0, #1
   1d6d8:	beq	1d6ec <convertUtf8ToWchar@@Base+0x64>
   1d6dc:	subs	r4, r4, #1
   1d6e0:	and	r3, r3, #63	; 0x3f
   1d6e4:	orr	r0, r3, r0, lsl #6
   1d6e8:	bne	1d6a0 <convertUtf8ToWchar@@Base+0x18>
   1d6ec:	cmp	ip, #0
   1d6f0:	beq	1d740 <convertUtf8ToWchar@@Base+0xb8>
   1d6f4:	ldr	r3, [r2]
   1d6f8:	ldrb	ip, [r3]
   1d6fc:	and	ip, ip, #192	; 0xc0
   1d700:	cmp	ip, #128	; 0x80
   1d704:	beq	1d720 <convertUtf8ToWchar@@Base+0x98>
   1d708:	b	1d740 <convertUtf8ToWchar@@Base+0xb8>
   1d70c:	ldr	r3, [r2]
   1d710:	ldrb	r0, [r3]
   1d714:	and	r0, r0, #192	; 0xc0
   1d718:	cmp	r0, #128	; 0x80
   1d71c:	bne	1d73c <convertUtf8ToWchar@@Base+0xb4>
   1d720:	add	r3, r3, #1
   1d724:	str	r3, [r2]
   1d728:	ldr	r3, [r1]
   1d72c:	sub	r3, r3, #1
   1d730:	str	r3, [r1]
   1d734:	cmp	r3, #0
   1d738:	bne	1d70c <convertUtf8ToWchar@@Base+0x84>
   1d73c:	mvn	r0, #0
   1d740:	pop	{r4, r5}
   1d744:	bx	lr
   1d748:	tst	r3, #32
   1d74c:	beq	1d788 <convertUtf8ToWchar@@Base+0x100>
   1d750:	tst	r3, #16
   1d754:	beq	1d790 <convertUtf8ToWchar@@Base+0x108>
   1d758:	tst	r3, #8
   1d75c:	beq	1d798 <convertUtf8ToWchar@@Base+0x110>
   1d760:	tst	r3, #4
   1d764:	moveq	r4, #4
   1d768:	bne	1d7cc <convertUtf8ToWchar@@Base+0x144>
   1d76c:	cmn	r0, #1
   1d770:	bne	1d7a8 <convertUtf8ToWchar@@Base+0x120>
   1d774:	rsb	r0, r4, #6
   1d778:	lsl	r0, r5, r0
   1d77c:	sub	r0, r0, #1
   1d780:	and	r0, r0, r3
   1d784:	b	1d6a0 <convertUtf8ToWchar@@Base+0x18>
   1d788:	mov	r4, #1
   1d78c:	b	1d76c <convertUtf8ToWchar@@Base+0xe4>
   1d790:	mov	r4, #2
   1d794:	b	1d76c <convertUtf8ToWchar@@Base+0xe4>
   1d798:	mov	r4, #3
   1d79c:	b	1d76c <convertUtf8ToWchar@@Base+0xe4>
   1d7a0:	cmn	r0, #1
   1d7a4:	beq	1d7dc <convertUtf8ToWchar@@Base+0x154>
   1d7a8:	ldr	r3, [r2]
   1d7ac:	mvn	r0, #0
   1d7b0:	add	r3, r3, r0
   1d7b4:	str	r3, [r2]
   1d7b8:	ldr	r3, [r1]
   1d7bc:	pop	{r4, r5}
   1d7c0:	add	r3, r3, #1
   1d7c4:	str	r3, [r1]
   1d7c8:	bx	lr
   1d7cc:	tst	r3, #2
   1d7d0:	bne	1d7e4 <convertUtf8ToWchar@@Base+0x15c>
   1d7d4:	mov	r4, #5
   1d7d8:	b	1d76c <convertUtf8ToWchar@@Base+0xe4>
   1d7dc:	mov	r0, r3
   1d7e0:	b	1d6ec <convertUtf8ToWchar@@Base+0x64>
   1d7e4:	cmn	r0, #1
   1d7e8:	beq	1d6ec <convertUtf8ToWchar@@Base+0x64>
   1d7ec:	b	1d7a8 <convertUtf8ToWchar@@Base+0x120>

0001d7f0 <getUtf8Length@@Base>:
   1d7f0:	ldr	r3, [pc, #136]	; 1d880 <getUtf8Length@@Base+0x90>
   1d7f4:	ldr	r2, [pc, #136]	; 1d884 <getUtf8Length@@Base+0x94>
   1d7f8:	push	{r4, r5, r6, r7, r8, lr}
   1d7fc:	add	r3, pc, r3
   1d800:	sub	sp, sp, #16
   1d804:	str	r0, [sp, #4]
   1d808:	ldr	r8, [r3, r2]
   1d80c:	ldrb	r4, [r0]
   1d810:	ldr	r3, [r8]
   1d814:	cmp	r4, #0
   1d818:	str	r3, [sp, #12]
   1d81c:	beq	1d860 <getUtf8Length@@Base+0x70>
   1d820:	add	r7, sp, #4
   1d824:	add	r6, sp, #8
   1d828:	mov	r4, #0
   1d82c:	mov	r5, #7
   1d830:	b	1d848 <getUtf8Length@@Base+0x58>
   1d834:	ldr	r3, [sp, #4]
   1d838:	add	r4, r4, #1
   1d83c:	ldrb	r3, [r3]
   1d840:	cmp	r3, #0
   1d844:	beq	1d860 <getUtf8Length@@Base+0x70>
   1d848:	mov	r0, r7
   1d84c:	mov	r1, r6
   1d850:	str	r5, [sp, #8]
   1d854:	bl	1d688 <convertUtf8ToWchar@@Base>
   1d858:	cmn	r0, #1
   1d85c:	bne	1d834 <getUtf8Length@@Base+0x44>
   1d860:	ldr	r2, [sp, #12]
   1d864:	mov	r0, r4
   1d868:	ldr	r3, [r8]
   1d86c:	cmp	r2, r3
   1d870:	bne	1d87c <getUtf8Length@@Base+0x8c>
   1d874:	add	sp, sp, #16
   1d878:	pop	{r4, r5, r6, r7, r8, pc}
   1d87c:	bl	14a60 <__stack_chk_fail@plt>
   1d880:	strdeq	r6, [r1], -ip
   1d884:	andeq	r0, r0, ip, lsr #4

0001d888 <convertUtf8ToWchars@@Base>:
   1d888:	ldr	r3, [pc, #188]	; 1d94c <convertUtf8ToWchars@@Base+0xc4>
   1d88c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d890:	mov	r5, r0
   1d894:	ldr	r0, [pc, #180]	; 1d950 <convertUtf8ToWchars@@Base+0xc8>
   1d898:	add	r3, pc, r3
   1d89c:	mov	r6, r1
   1d8a0:	ldr	r1, [r5]
   1d8a4:	mov	r4, r2
   1d8a8:	sub	sp, sp, #12
   1d8ac:	ldr	r9, [r3, r0]
   1d8b0:	ldrb	r2, [r1]
   1d8b4:	ldr	r3, [r9]
   1d8b8:	cmp	r2, #0
   1d8bc:	str	r3, [sp, #4]
   1d8c0:	beq	1d93c <convertUtf8ToWchars@@Base+0xb4>
   1d8c4:	cmp	r4, #1
   1d8c8:	movhi	r7, #7
   1d8cc:	bhi	1d900 <convertUtf8ToWchars@@Base+0x78>
   1d8d0:	b	1d93c <convertUtf8ToWchars@@Base+0xb4>
   1d8d4:	ldr	r3, [r6]
   1d8d8:	sub	r4, r4, #1
   1d8dc:	add	r2, r3, #4
   1d8e0:	str	r2, [r6]
   1d8e4:	str	r0, [r3]
   1d8e8:	ldr	r3, [r5]
   1d8ec:	ldrb	r3, [r3]
   1d8f0:	cmp	r3, #0
   1d8f4:	beq	1d93c <convertUtf8ToWchars@@Base+0xb4>
   1d8f8:	cmp	r4, #1
   1d8fc:	beq	1d918 <convertUtf8ToWchars@@Base+0x90>
   1d900:	mov	r0, r5
   1d904:	mov	r1, sp
   1d908:	str	r7, [sp]
   1d90c:	bl	1d688 <convertUtf8ToWchar@@Base>
   1d910:	cmn	r0, #1
   1d914:	bne	1d8d4 <convertUtf8ToWchars@@Base+0x4c>
   1d918:	ldr	r3, [r6]
   1d91c:	mov	r2, #0
   1d920:	str	r2, [r3]
   1d924:	ldr	r2, [sp, #4]
   1d928:	ldr	r3, [r9]
   1d92c:	cmp	r2, r3
   1d930:	bne	1d948 <convertUtf8ToWchars@@Base+0xc0>
   1d934:	add	sp, sp, #12
   1d938:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d93c:	cmp	r4, #0
   1d940:	beq	1d924 <convertUtf8ToWchars@@Base+0x9c>
   1d944:	b	1d918 <convertUtf8ToWchars@@Base+0x90>
   1d948:	bl	14a60 <__stack_chk_fail@plt>
   1d94c:	andeq	r6, r1, r0, ror #14
   1d950:	andeq	r0, r0, ip, lsr #4

0001d954 <makeUtf8FromWchars@@Base>:
   1d954:	ldr	r3, [pc, #232]	; 1da44 <makeUtf8FromWchars@@Base+0xf0>
   1d958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d95c:	mov	r6, r1
   1d960:	ldr	r1, [pc, #224]	; 1da48 <makeUtf8FromWchars@@Base+0xf4>
   1d964:	add	r3, pc, r3
   1d968:	sub	sp, sp, #28
   1d96c:	rsb	ip, r6, r6, lsl #3
   1d970:	mov	r5, r0
   1d974:	add	r0, ip, #1
   1d978:	ldr	r1, [r3, r1]
   1d97c:	mov	fp, r2
   1d980:	ldr	r3, [r1]
   1d984:	str	r1, [sp, #4]
   1d988:	str	r3, [sp, #20]
   1d98c:	bl	14b74 <malloc@plt>
   1d990:	subs	r9, r0, #0
   1d994:	beq	1da38 <makeUtf8FromWchars@@Base+0xe4>
   1d998:	cmp	r6, #0
   1d99c:	beq	1da30 <makeUtf8FromWchars@@Base+0xdc>
   1d9a0:	sub	r5, r5, #4
   1d9a4:	add	r7, sp, #12
   1d9a8:	mov	sl, r9
   1d9ac:	mov	r4, #0
   1d9b0:	mov	r8, #32
   1d9b4:	b	1d9c4 <makeUtf8FromWchars@@Base+0x70>
   1d9b8:	add	r4, r4, #1
   1d9bc:	cmp	r4, r6
   1d9c0:	beq	1d9fc <makeUtf8FromWchars@@Base+0xa8>
   1d9c4:	ldr	r0, [r5, #4]!
   1d9c8:	mov	r1, r7
   1d9cc:	bl	1d5b4 <convertWcharToUtf8@@Base>
   1d9d0:	subs	r2, r0, #0
   1d9d4:	strbeq	r8, [sl]
   1d9d8:	addeq	sl, sl, #1
   1d9dc:	beq	1d9b8 <makeUtf8FromWchars@@Base+0x64>
   1d9e0:	mov	r0, sl
   1d9e4:	mov	r1, r7
   1d9e8:	bl	14be0 <mempcpy@plt>
   1d9ec:	add	r4, r4, #1
   1d9f0:	cmp	r4, r6
   1d9f4:	mov	sl, r0
   1d9f8:	bne	1d9c4 <makeUtf8FromWchars@@Base+0x70>
   1d9fc:	cmp	fp, #0
   1da00:	mov	r2, #0
   1da04:	strb	r2, [sl]
   1da08:	rsbne	r3, r9, sl
   1da0c:	strne	r3, [fp]
   1da10:	ldr	r1, [sp, #4]
   1da14:	mov	r0, r9
   1da18:	ldr	r2, [sp, #20]
   1da1c:	ldr	r3, [r1]
   1da20:	cmp	r2, r3
   1da24:	bne	1da40 <makeUtf8FromWchars@@Base+0xec>
   1da28:	add	sp, sp, #28
   1da2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da30:	mov	sl, r9
   1da34:	b	1d9fc <makeUtf8FromWchars@@Base+0xa8>
   1da38:	bl	17c90 <logMallocError@@Base>
   1da3c:	b	1da10 <makeUtf8FromWchars@@Base+0xbc>
   1da40:	bl	14a60 <__stack_chk_fail@plt>
   1da44:	muleq	r1, r4, r6
   1da48:	andeq	r0, r0, ip, lsr #4

0001da4c <convertCharToUtf8@@Base>:
   1da4c:	push	{r4, lr}
   1da50:	mov	r4, r1
   1da54:	bl	1dcb0 <convertCharToWchar@@Base>
   1da58:	cmn	r0, #1
   1da5c:	beq	1da6c <convertCharToUtf8@@Base+0x20>
   1da60:	mov	r1, r4
   1da64:	pop	{r4, lr}
   1da68:	b	1d5b4 <convertWcharToUtf8@@Base>
   1da6c:	mov	r0, #0
   1da70:	pop	{r4, pc}

0001da74 <convertUtf8ToChar@@Base>:
   1da74:	push	{r3, lr}
   1da78:	bl	1d688 <convertUtf8ToWchar@@Base>
   1da7c:	cmn	r0, #1
   1da80:	popeq	{r3, pc}
   1da84:	pop	{r3, lr}
   1da88:	b	1dd8c <convertWcharToChar@@Base>

0001da8c <getWcharCharset@@Base>:
   1da8c:	ldr	r3, [pc, #156]	; 1db30 <getWcharCharset@@Base+0xa4>
   1da90:	ldr	r2, [pc, #156]	; 1db34 <getWcharCharset@@Base+0xa8>
   1da94:	push	{r4, r5, r6, lr}
   1da98:	add	r3, pc, r3
   1da9c:	ldr	r5, [pc, #148]	; 1db38 <getWcharCharset@@Base+0xac>
   1daa0:	sub	sp, sp, #40	; 0x28
   1daa4:	ldr	r4, [r3, r2]
   1daa8:	add	r5, pc, r5
   1daac:	ldr	r0, [r5]
   1dab0:	ldr	r3, [r4]
   1dab4:	cmp	r0, #0
   1dab8:	str	r3, [sp, #36]	; 0x24
   1dabc:	beq	1dad8 <getWcharCharset@@Base+0x4c>
   1dac0:	ldr	r2, [sp, #36]	; 0x24
   1dac4:	ldr	r3, [r4]
   1dac8:	cmp	r2, r3
   1dacc:	bne	1db2c <getWcharCharset@@Base+0xa0>
   1dad0:	add	sp, sp, #40	; 0x28
   1dad4:	pop	{r4, r5, r6, pc}
   1dad8:	add	r6, sp, #20
   1dadc:	ldr	ip, [pc, #88]	; 1db3c <getWcharCharset@@Base+0xb0>
   1dae0:	mov	r1, #16
   1dae4:	mov	r2, #4
   1dae8:	add	ip, pc, ip
   1daec:	mov	r3, r1
   1daf0:	str	ip, [sp]
   1daf4:	mov	r0, r6
   1daf8:	mov	ip, #76	; 0x4c
   1dafc:	str	r2, [sp, #4]
   1db00:	str	ip, [sp, #8]
   1db04:	mov	r2, #1
   1db08:	bl	14b8c <__snprintf_chk@plt>
   1db0c:	mov	r0, r6
   1db10:	bl	14928 <__strdup@plt>
   1db14:	cmp	r0, #0
   1db18:	str	r0, [r5]
   1db1c:	bne	1dac0 <getWcharCharset@@Base+0x34>
   1db20:	bl	17c90 <logMallocError@@Base>
   1db24:	ldr	r0, [r5]
   1db28:	b	1dac0 <getWcharCharset@@Base+0x34>
   1db2c:	bl	14a60 <__stack_chk_fail@plt>
   1db30:	andeq	r6, r1, r0, ror #10
   1db34:	andeq	r0, r0, ip, lsr #4
   1db38:	andeq	r6, r1, r4, asr #17
   1db3c:			; <UNDEFINED> instruction: 0x000049b0

0001db40 <setCharset@@Base>:
   1db40:	push	{r3, r4, r5, lr}
   1db44:	subs	r5, r0, #0
   1db48:	beq	1dbc4 <setCharset@@Base+0x84>
   1db4c:	ldr	r3, [pc, #172]	; 1dc00 <setCharset@@Base+0xc0>
   1db50:	add	r3, pc, r3
   1db54:	ldr	r4, [r3, #4]
   1db58:	cmp	r4, #0
   1db5c:	beq	1db74 <setCharset@@Base+0x34>
   1db60:	mov	r0, r4
   1db64:	mov	r1, r5
   1db68:	bl	14c34 <strcmp@plt>
   1db6c:	cmp	r0, #0
   1db70:	beq	1dbbc <setCharset@@Base+0x7c>
   1db74:	mov	r0, r5
   1db78:	bl	14928 <__strdup@plt>
   1db7c:	subs	r5, r0, #0
   1db80:	beq	1dbf4 <setCharset@@Base+0xb4>
   1db84:	bl	1dec0 <registerCharacterSet@@Base>
   1db88:	subs	r4, r0, #0
   1db8c:	beq	1dbe4 <setCharset@@Base+0xa4>
   1db90:	ldr	r3, [pc, #108]	; 1dc04 <setCharset@@Base+0xc4>
   1db94:	add	r3, pc, r3
   1db98:	ldr	r0, [r3, #4]
   1db9c:	cmp	r0, #0
   1dba0:	beq	1dba8 <setCharset@@Base+0x68>
   1dba4:	bl	147fc <free@plt>
   1dba8:	ldr	r3, [pc, #88]	; 1dc08 <setCharset@@Base+0xc8>
   1dbac:	mov	r0, r5
   1dbb0:	add	r3, pc, r3
   1dbb4:	str	r5, [r3, #4]
   1dbb8:	pop	{r3, r4, r5, pc}
   1dbbc:	mov	r0, r4
   1dbc0:	pop	{r3, r4, r5, pc}
   1dbc4:	ldr	r3, [pc, #64]	; 1dc0c <setCharset@@Base+0xcc>
   1dbc8:	add	r3, pc, r3
   1dbcc:	ldr	r0, [r3, #4]
   1dbd0:	cmp	r0, #0
   1dbd4:	popne	{r3, r4, r5, pc}
   1dbd8:	bl	1de6c <getLocaleCharset@@Base>
   1dbdc:	mov	r5, r0
   1dbe0:	b	1db74 <setCharset@@Base+0x34>
   1dbe4:	mov	r0, r5
   1dbe8:	bl	147fc <free@plt>
   1dbec:	mov	r0, r4
   1dbf0:	pop	{r3, r4, r5, pc}
   1dbf4:	bl	17c90 <logMallocError@@Base>
   1dbf8:	mov	r0, r5
   1dbfc:	pop	{r3, r4, r5, pc}
   1dc00:	andeq	r6, r1, ip, lsl r8
   1dc04:	ldrdeq	r6, [r1], -r8
   1dc08:			; <UNDEFINED> instruction: 0x000167bc
   1dc0c:	andeq	r6, r1, r4, lsr #15

0001dc10 <getCharset@@Base>:
   1dc10:	mov	r0, #0
   1dc14:	b	1db40 <setCharset@@Base>

0001dc18 <lockCharset@@Base>:
   1dc18:	ldr	r3, [pc, #36]	; 1dc44 <lockCharset@@Base+0x2c>
   1dc1c:	push	{r4, lr}
   1dc20:	add	r3, pc, r3
   1dc24:	mov	r4, r0
   1dc28:	add	r0, r3, #8
   1dc2c:	bl	1f66c <getLockDescriptor@@Base>
   1dc30:	cmp	r0, #0
   1dc34:	popeq	{r4, pc}
   1dc38:	mov	r1, r4
   1dc3c:	pop	{r4, lr}
   1dc40:	b	1f614 <obtainLock@@Base>
   1dc44:	andeq	r6, r1, ip, asr #14

0001dc48 <unlockCharset@@Base>:
   1dc48:	ldr	r0, [pc, #28]	; 1dc6c <unlockCharset@@Base+0x24>
   1dc4c:	push	{r3, lr}
   1dc50:	add	r0, pc, r0
   1dc54:	add	r0, r0, #8
   1dc58:	bl	1f66c <getLockDescriptor@@Base>
   1dc5c:	cmp	r0, #0
   1dc60:	popeq	{r3, pc}
   1dc64:	pop	{r3, lr}
   1dc68:	b	1f668 <releaseLock@@Base>
   1dc6c:	andeq	r6, r1, ip, lsl r7

0001dc70 <isPosixLocale@@Base>:
   1dc70:	push	{r3, lr}
   1dc74:	ldrb	r3, [r0]
   1dc78:	cmp	r3, #67	; 0x43
   1dc7c:	bne	1dc94 <isPosixLocale@@Base+0x24>
   1dc80:	ldrb	r3, [r0, #1]
   1dc84:	cmp	r3, #0
   1dc88:	bne	1dc94 <isPosixLocale@@Base+0x24>
   1dc8c:	mov	r0, #1
   1dc90:	pop	{r3, pc}
   1dc94:	ldr	r1, [pc, #16]	; 1dcac <isPosixLocale@@Base+0x3c>
   1dc98:	add	r1, pc, r1
   1dc9c:	bl	14c34 <strcmp@plt>
   1dca0:	rsbs	r0, r0, #1
   1dca4:	movcc	r0, #0
   1dca8:	pop	{r3, pc}
   1dcac:	andeq	r4, r0, ip, lsl #16

0001dcb0 <convertCharToWchar@@Base>:
   1dcb0:	ldr	r3, [pc, #196]	; 1dd7c <convertCharToWchar@@Base+0xcc>
   1dcb4:	ldr	r2, [pc, #196]	; 1dd80 <convertCharToWchar@@Base+0xd0>
   1dcb8:	push	{r4, r5, lr}
   1dcbc:	add	r3, pc, r3
   1dcc0:	sub	sp, sp, #44	; 0x2c
   1dcc4:	strb	r0, [sp, #15]
   1dcc8:	ldr	r4, [r3, r2]
   1dccc:	ldr	r3, [r4]
   1dcd0:	str	r3, [sp, #36]	; 0x24
   1dcd4:	bl	1dc10 <getCharset@@Base>
   1dcd8:	cmp	r0, #0
   1dcdc:	mvneq	r0, #0
   1dce0:	beq	1dd38 <convertCharToWchar@@Base+0x88>
   1dce4:	ldr	r0, [pc, #152]	; 1dd84 <convertCharToWchar@@Base+0xd4>
   1dce8:	add	r3, sp, #32
   1dcec:	add	r1, sp, #16
   1dcf0:	str	r3, [sp]
   1dcf4:	add	r0, pc, r0
   1dcf8:	add	r2, sp, #20
   1dcfc:	add	r3, sp, #28
   1dd00:	mov	ip, #1
   1dd04:	ldr	r0, [r0]
   1dd08:	add	lr, sp, #15
   1dd0c:	str	ip, [sp, #20]
   1dd10:	add	ip, sp, #24
   1dd14:	str	lr, [sp, #16]
   1dd18:	str	ip, [sp, #28]
   1dd1c:	mov	ip, #4
   1dd20:	str	ip, [sp, #32]
   1dd24:	bl	14c40 <iconv@plt>
   1dd28:	cmn	r0, #1
   1dd2c:	mov	r5, r0
   1dd30:	beq	1dd50 <convertCharToWchar@@Base+0xa0>
   1dd34:	ldr	r0, [sp, #24]
   1dd38:	ldr	r2, [sp, #36]	; 0x24
   1dd3c:	ldr	r3, [r4]
   1dd40:	cmp	r2, r3
   1dd44:	bne	1dd78 <convertCharToWchar@@Base+0xc8>
   1dd48:	add	sp, sp, #44	; 0x2c
   1dd4c:	pop	{r4, r5, pc}
   1dd50:	bl	14c4c <__errno_location@plt>
   1dd54:	ldr	r0, [r0]
   1dd58:	bl	14838 <strerror@plt>
   1dd5c:	ldr	r1, [pc, #36]	; 1dd88 <convertCharToWchar@@Base+0xd8>
   1dd60:	add	r1, pc, r1
   1dd64:	mov	r2, r0
   1dd68:	mov	r0, #7
   1dd6c:	bl	17b84 <logMessage@@Base>
   1dd70:	mov	r0, r5
   1dd74:	b	1dd38 <convertCharToWchar@@Base+0x88>
   1dd78:	bl	14a60 <__stack_chk_fail@plt>
   1dd7c:	andeq	r6, r1, ip, lsr r3
   1dd80:	andeq	r0, r0, ip, lsr #4
   1dd84:	muleq	r1, ip, r5
   1dd88:	andeq	r4, r0, ip, asr #14

0001dd8c <convertWcharToChar@@Base>:
   1dd8c:	ldr	r3, [pc, #200]	; 1de5c <convertWcharToChar@@Base+0xd0>
   1dd90:	ldr	r2, [pc, #200]	; 1de60 <convertWcharToChar@@Base+0xd4>
   1dd94:	push	{r4, r5, lr}
   1dd98:	add	r3, pc, r3
   1dd9c:	sub	sp, sp, #44	; 0x2c
   1dda0:	str	r0, [sp, #12]
   1dda4:	ldr	r4, [r3, r2]
   1dda8:	ldr	r3, [r4]
   1ddac:	str	r3, [sp, #36]	; 0x24
   1ddb0:	bl	1dc10 <getCharset@@Base>
   1ddb4:	cmp	r0, #0
   1ddb8:	beq	1de28 <convertWcharToChar@@Base+0x9c>
   1ddbc:	ldr	r0, [pc, #160]	; 1de64 <convertWcharToChar@@Base+0xd8>
   1ddc0:	add	r3, sp, #32
   1ddc4:	add	r1, sp, #20
   1ddc8:	str	r3, [sp]
   1ddcc:	add	r0, pc, r0
   1ddd0:	add	r2, sp, #24
   1ddd4:	add	r3, sp, #28
   1ddd8:	mov	ip, #4
   1dddc:	ldr	r0, [r0, #4]
   1dde0:	add	lr, sp, #12
   1dde4:	str	ip, [sp, #24]
   1dde8:	add	ip, sp, #19
   1ddec:	str	lr, [sp, #20]
   1ddf0:	str	ip, [sp, #28]
   1ddf4:	mov	ip, #1
   1ddf8:	str	ip, [sp, #32]
   1ddfc:	bl	14c40 <iconv@plt>
   1de00:	cmn	r0, #1
   1de04:	mov	r5, r0
   1de08:	beq	1de30 <convertWcharToChar@@Base+0xa4>
   1de0c:	ldrb	r0, [sp, #19]
   1de10:	ldr	r2, [sp, #36]	; 0x24
   1de14:	ldr	r3, [r4]
   1de18:	cmp	r2, r3
   1de1c:	bne	1de58 <convertWcharToChar@@Base+0xcc>
   1de20:	add	sp, sp, #44	; 0x2c
   1de24:	pop	{r4, r5, pc}
   1de28:	mvn	r0, #0
   1de2c:	b	1de10 <convertWcharToChar@@Base+0x84>
   1de30:	bl	14c4c <__errno_location@plt>
   1de34:	ldr	r0, [r0]
   1de38:	bl	14838 <strerror@plt>
   1de3c:	ldr	r1, [pc, #36]	; 1de68 <convertWcharToChar@@Base+0xdc>
   1de40:	add	r1, pc, r1
   1de44:	mov	r2, r0
   1de48:	mov	r0, #7
   1de4c:	bl	17b84 <logMessage@@Base>
   1de50:	mov	r0, r5
   1de54:	b	1de10 <convertWcharToChar@@Base+0x84>
   1de58:	bl	14a60 <__stack_chk_fail@plt>
   1de5c:	andeq	r6, r1, r0, ror #4
   1de60:	andeq	r0, r0, ip, lsr #4
   1de64:	andeq	r6, r1, r4, asr #9
   1de68:	muleq	r0, r0, r6

0001de6c <getLocaleCharset@@Base>:
   1de6c:	ldr	r1, [pc, #64]	; 1deb4 <getLocaleCharset@@Base+0x48>
   1de70:	mov	r0, #6
   1de74:	push	{r4, lr}
   1de78:	add	r1, pc, r1
   1de7c:	bl	14b14 <setlocale@plt>
   1de80:	ldr	r4, [pc, #48]	; 1deb8 <getLocaleCharset@@Base+0x4c>
   1de84:	add	r4, pc, r4
   1de88:	cmp	r0, #0
   1de8c:	beq	1de9c <getLocaleCharset@@Base+0x30>
   1de90:	bl	1dc70 <isPosixLocale@@Base>
   1de94:	cmp	r0, #0
   1de98:	beq	1dea8 <getLocaleCharset@@Base+0x3c>
   1de9c:	ldr	r3, [pc, #24]	; 1debc <getLocaleCharset@@Base+0x50>
   1dea0:	ldr	r0, [r4, r3]
   1dea4:	pop	{r4, pc}
   1dea8:	mov	r0, #14
   1deac:	pop	{r4, lr}
   1deb0:	b	14880 <nl_langinfo@plt>
   1deb4:	andeq	r2, r0, r8, asr r9
   1deb8:	andeq	r6, r1, r4, ror r1
   1debc:	andeq	r0, r0, r0, ror r2

0001dec0 <registerCharacterSet@@Base>:
   1dec0:	ldr	r3, [pc, #444]	; 1e084 <registerCharacterSet@@Base+0x1c4>
   1dec4:	ldr	r2, [pc, #444]	; 1e088 <registerCharacterSet@@Base+0x1c8>
   1dec8:	add	r3, pc, r3
   1decc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ded0:	sub	sp, sp, #64	; 0x40
   1ded4:	ldr	r8, [r3, r2]
   1ded8:	mov	r6, r0
   1dedc:	add	r4, sp, #20
   1dee0:	ldr	r3, [r8]
   1dee4:	str	r3, [sp, #60]	; 0x3c
   1dee8:	bl	1da8c <getWcharCharset@@Base>
   1deec:	ldr	r3, [pc, #408]	; 1e08c <registerCharacterSet@@Base+0x1cc>
   1def0:	mvn	r1, #0
   1def4:	ldrb	r9, [sp, #52]	; 0x34
   1def8:	mov	r2, #0
   1defc:	add	r3, pc, r3
   1df00:	ldrb	r7, [sp, #12]
   1df04:	ldrb	ip, [sp, #32]
   1df08:	add	sl, r3, #4
   1df0c:	mov	r5, r3
   1df10:	bfc	r7, #0, #1
   1df14:	bfc	ip, #0, #1
   1df18:	str	r3, [sp]
   1df1c:	str	r6, [sp, #4]
   1df20:	mov	r3, r2
   1df24:	str	r6, [sp, #28]
   1df28:	str	sl, [sp, #20]
   1df2c:	strb	r7, [sp, #12]
   1df30:	strb	ip, [sp, #32]
   1df34:	str	r1, [sp, #16]
   1df38:	str	r1, [sp, #36]	; 0x24
   1df3c:	str	r1, [sp, #56]	; 0x38
   1df40:	str	r2, [sp, #40]	; 0x28
   1df44:	str	r2, [sp, #44]	; 0x2c
   1df48:	str	r2, [sp, #48]	; 0x30
   1df4c:	str	r0, [sp, #8]
   1df50:	str	r0, [sp, #24]
   1df54:	orr	r0, r9, #1
   1df58:	mov	r9, r1
   1df5c:	strb	r0, [sp, #52]	; 0x34
   1df60:	b	1df8c <registerCharacterSet@@Base+0xcc>
   1df64:	ldr	r6, [r5]
   1df68:	cmn	r6, #1
   1df6c:	strne	r9, [r4, #-4]
   1df70:	beq	1e060 <registerCharacterSet@@Base+0x1a0>
   1df74:	mov	r6, r4
   1df78:	ldr	r5, [r4], #20
   1df7c:	cmp	r5, #0
   1df80:	beq	1dffc <registerCharacterSet@@Base+0x13c>
   1df84:	ldrb	r3, [r7, #32]
   1df88:	and	r3, r3, #1
   1df8c:	cmp	r3, #0
   1df90:	sub	r7, r4, #20
   1df94:	bne	1df64 <registerCharacterSet@@Base+0xa4>
   1df98:	ldr	r0, [r4, #-12]
   1df9c:	ldr	r1, [r4, #-16]
   1dfa0:	bl	14c10 <iconv_open@plt>
   1dfa4:	cmn	r0, #1
   1dfa8:	str	r0, [r4, #-4]
   1dfac:	bne	1df74 <registerCharacterSet@@Base+0xb4>
   1dfb0:	ldr	r0, [pc, #216]	; 1e090 <registerCharacterSet@@Base+0x1d0>
   1dfb4:	mov	r9, sp
   1dfb8:	add	r0, pc, r0
   1dfbc:	bl	17c4c <logSystemError@@Base>
   1dfc0:	cmp	r7, r9
   1dfc4:	subne	r5, r7, #20
   1dfc8:	movne	r4, r5
   1dfcc:	beq	1dff4 <registerCharacterSet@@Base+0x134>
   1dfd0:	rsb	r3, r7, r4
   1dfd4:	add	r3, r3, r5
   1dfd8:	ldr	r0, [r3, #36]	; 0x24
   1dfdc:	cmn	r0, #1
   1dfe0:	beq	1dfe8 <registerCharacterSet@@Base+0x128>
   1dfe4:	bl	14b2c <iconv_close@plt>
   1dfe8:	cmp	r9, r4
   1dfec:	sub	r4, r4, #20
   1dff0:	bne	1dfd0 <registerCharacterSet@@Base+0x110>
   1dff4:	mov	r0, #0
   1dff8:	b	1e044 <registerCharacterSet@@Base+0x184>
   1dffc:	mov	r9, sp
   1e000:	cmp	r6, r9
   1e004:	beq	1e040 <registerCharacterSet@@Base+0x180>
   1e008:	sub	r4, r6, #4
   1e00c:	ldr	r5, [r4]
   1e010:	sub	r6, r6, #20
   1e014:	cmn	r5, #1
   1e018:	beq	1e034 <registerCharacterSet@@Base+0x174>
   1e01c:	ldr	r7, [r4, #-16]
   1e020:	ldr	r0, [r7]
   1e024:	cmn	r0, #1
   1e028:	beq	1e030 <registerCharacterSet@@Base+0x170>
   1e02c:	bl	14b2c <iconv_close@plt>
   1e030:	str	r5, [r7]
   1e034:	cmp	r6, r9
   1e038:	sub	r4, r4, #20
   1e03c:	bne	1e00c <registerCharacterSet@@Base+0x14c>
   1e040:	mov	r0, #1
   1e044:	ldr	r2, [sp, #60]	; 0x3c
   1e048:	ldr	r3, [r8]
   1e04c:	cmp	r2, r3
   1e050:	bne	1e05c <registerCharacterSet@@Base+0x19c>
   1e054:	add	sp, sp, #64	; 0x40
   1e058:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e05c:	bl	14a60 <__stack_chk_fail@plt>
   1e060:	ldr	r0, [r4, #-12]
   1e064:	ldr	r1, [r4, #-16]
   1e068:	bl	14c10 <iconv_open@plt>
   1e06c:	cmn	r0, #1
   1e070:	str	r0, [r4, #-4]
   1e074:	beq	1dfb0 <registerCharacterSet@@Base+0xf0>
   1e078:	str	r0, [r5]
   1e07c:	str	r6, [r4, #-4]
   1e080:	b	1df74 <registerCharacterSet@@Base+0xb4>
   1e084:	andeq	r6, r1, r0, lsr r1
   1e088:	andeq	r0, r0, ip, lsr #4
   1e08c:	muleq	r1, r4, r3
   1e090:	andeq	r4, r0, r4, asr #10

0001e094 <isHexadecimalDigit@@Base>:
   1e094:	sub	r3, r0, #48	; 0x30
   1e098:	cmp	r3, #9
   1e09c:	strls	r3, [r1]
   1e0a0:	bls	1e0cc <isHexadecimalDigit@@Base+0x38>
   1e0a4:	sub	r3, r0, #97	; 0x61
   1e0a8:	cmp	r3, #5
   1e0ac:	subls	r0, r0, #87	; 0x57
   1e0b0:	strls	r0, [r1]
   1e0b4:	bls	1e0cc <isHexadecimalDigit@@Base+0x38>
   1e0b8:	sub	r3, r0, #65	; 0x41
   1e0bc:	cmp	r3, #5
   1e0c0:	bhi	1e0dc <isHexadecimalDigit@@Base+0x48>
   1e0c4:	sub	r0, r0, #55	; 0x37
   1e0c8:	str	r0, [r1]
   1e0cc:	mov	r3, #4
   1e0d0:	mov	r0, #1
   1e0d4:	str	r3, [r2]
   1e0d8:	bx	lr
   1e0dc:	mov	r0, #0
   1e0e0:	bx	lr

0001e0e4 <isOctalDigit@@Base>:
   1e0e4:	sub	r0, r0, #48	; 0x30
   1e0e8:	cmp	r0, #7
   1e0ec:	strls	r0, [r1]
   1e0f0:	movls	r3, #3
   1e0f4:	movls	r0, #1
   1e0f8:	strls	r3, [r2]
   1e0fc:	movhi	r0, #0
   1e100:	bx	lr
   1e104:	push	{r4, lr}
   1e108:	mov	r4, r0
   1e10c:	ldr	r0, [r0]
   1e110:	cmp	r0, #0
   1e114:	beq	1e11c <isOctalDigit@@Base+0x38>
   1e118:	bl	147fc <free@plt>
   1e11c:	ldr	r0, [r4, #8]
   1e120:	cmp	r0, #0
   1e124:	beq	1e12c <isOctalDigit@@Base+0x48>
   1e128:	bl	147fc <free@plt>
   1e12c:	mov	r0, r4
   1e130:	pop	{r4, lr}
   1e134:	b	147fc <free@plt>
   1e138:	push	{r3, lr}
   1e13c:	ldr	r2, [r0, #4]
   1e140:	ldr	r3, [r1, #4]
   1e144:	cmp	r2, r3
   1e148:	beq	1e154 <isOctalDigit@@Base+0x70>
   1e14c:	mov	r0, #0
   1e150:	pop	{r3, pc}
   1e154:	ldr	r0, [r0]
   1e158:	ldr	r1, [r1]
   1e15c:	bl	1494c <wmemcmp@plt>
   1e160:	rsbs	r0, r0, #1
   1e164:	movcc	r0, #0
   1e168:	pop	{r3, pc}
   1e16c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1e170:	mov	r8, r0
   1e174:	mov	r0, #16
   1e178:	mov	r6, r1
   1e17c:	bl	14b74 <malloc@plt>
   1e180:	subs	r4, r0, #0
   1e184:	beq	1e1f4 <isOctalDigit@@Base+0x110>
   1e188:	mov	r3, r4
   1e18c:	mov	r5, #0
   1e190:	str	r5, [r3], #4
   1e194:	add	r3, r3, #4
   1e198:	str	r5, [r4, #4]
   1e19c:	str	r5, [r3], #4
   1e1a0:	str	r5, [r3]
   1e1a4:	ldr	r7, [r6, #4]
   1e1a8:	lsl	r0, r7, #2
   1e1ac:	bl	14b74 <malloc@plt>
   1e1b0:	subs	r9, r0, #0
   1e1b4:	beq	1e218 <isOctalDigit@@Base+0x134>
   1e1b8:	mov	r2, r7
   1e1bc:	ldr	r1, [r6]
   1e1c0:	bl	1488c <wmemcpy@plt>
   1e1c4:	mov	r1, r4
   1e1c8:	str	r0, [r4]
   1e1cc:	mov	r0, r8
   1e1d0:	ldr	r3, [r6, #4]
   1e1d4:	str	r5, [r4, #8]
   1e1d8:	str	r5, [r4, #12]
   1e1dc:	str	r3, [r4, #4]
   1e1e0:	bl	1f9d0 <enqueueItem@@Base>
   1e1e4:	cmp	r0, r5
   1e1e8:	beq	1e200 <isOctalDigit@@Base+0x11c>
   1e1ec:	mov	r0, r4
   1e1f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1e1f4:	bl	17c90 <logMallocError@@Base>
   1e1f8:	mov	r0, r4
   1e1fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1e200:	mov	r0, r9
   1e204:	bl	147fc <free@plt>
   1e208:	mov	r0, r4
   1e20c:	bl	147fc <free@plt>
   1e210:	mov	r0, #0
   1e214:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1e218:	bl	17c90 <logMallocError@@Base>
   1e21c:	b	1e208 <isOctalDigit@@Base+0x124>
   1e220:	push	{r4, r5, r6, r7, r8, lr}
   1e224:	subs	r4, r3, #0
   1e228:	mov	r5, r0
   1e22c:	mov	r7, r1
   1e230:	mov	r8, r2
   1e234:	moveq	r6, r4
   1e238:	bne	1e25c <isOctalDigit@@Base+0x178>
   1e23c:	ldr	r0, [r5]
   1e240:	cmp	r0, #0
   1e244:	beq	1e24c <isOctalDigit@@Base+0x168>
   1e248:	bl	147fc <free@plt>
   1e24c:	str	r6, [r5]
   1e250:	mov	r0, #1
   1e254:	str	r4, [r7]
   1e258:	pop	{r4, r5, r6, r7, r8, pc}
   1e25c:	lsl	r0, r4, #2
   1e260:	bl	14b74 <malloc@plt>
   1e264:	subs	r6, r0, #0
   1e268:	beq	1e27c <isOctalDigit@@Base+0x198>
   1e26c:	mov	r1, r8
   1e270:	mov	r2, r4
   1e274:	bl	1488c <wmemcpy@plt>
   1e278:	b	1e23c <isOctalDigit@@Base+0x158>
   1e27c:	bl	17c90 <logMallocError@@Base>
   1e280:	mov	r0, r6
   1e284:	pop	{r4, r5, r6, r7, r8, pc}
   1e288:	push	{r3, r4, r5, lr}
   1e28c:	ldr	r3, [pc, #68]	; 1e2d8 <isOctalDigit@@Base+0x1f4>
   1e290:	ldr	r4, [pc, r3]
   1e294:	cmp	r4, #0
   1e298:	beq	1e2a4 <isOctalDigit@@Base+0x1c0>
   1e29c:	mov	r0, r4
   1e2a0:	pop	{r3, r4, r5, pc}
   1e2a4:	ldr	r0, [pc, #48]	; 1e2dc <isOctalDigit@@Base+0x1f8>
   1e2a8:	mov	r1, r4
   1e2ac:	add	r0, pc, r0
   1e2b0:	bl	1f7e0 <newQueue@@Base>
   1e2b4:	subs	r5, r0, #0
   1e2b8:	beq	1e2c4 <isOctalDigit@@Base+0x1e0>
   1e2bc:	mov	r1, r4
   1e2c0:	bl	1f888 <setQueueData@@Base>
   1e2c4:	ldr	r3, [pc, #20]	; 1e2e0 <isOctalDigit@@Base+0x1fc>
   1e2c8:	mov	r0, r5
   1e2cc:	add	r3, pc, r3
   1e2d0:	str	r5, [r3]
   1e2d4:	pop	{r3, r4, r5, pc}
   1e2d8:	andeq	r6, r1, r8, ror #1
   1e2dc:			; <UNDEFINED> instruction: 0xfffffe50
   1e2e0:	andeq	r6, r1, ip, lsr #1

0001e2e4 <brlDotNumberToIndex@@Base>:
   1e2e4:	push	{r3, r4, r5, lr}
   1e2e8:	mov	r2, #8
   1e2ec:	ldr	r3, [pc, #48]	; 1e324 <brlDotNumberToIndex@@Base+0x40>
   1e2f0:	mov	r5, r1
   1e2f4:	ldr	ip, [pc, #44]	; 1e328 <brlDotNumberToIndex@@Base+0x44>
   1e2f8:	mov	r1, r0
   1e2fc:	add	r3, pc, r3
   1e300:	ldr	r4, [r3, ip]
   1e304:	mov	r0, r4
   1e308:	bl	14970 <wmemchr@plt>
   1e30c:	cmp	r0, #0
   1e310:	rsbne	r4, r4, r0
   1e314:	movne	r0, #1
   1e318:	asrne	r4, r4, #2
   1e31c:	strne	r4, [r5]
   1e320:	pop	{r3, r4, r5, pc}
   1e324:	strdeq	r5, [r1], -ip
   1e328:	andeq	r0, r0, r0, ror #4

0001e32c <brlDotBitToIndex@@Base>:
   1e32c:	push	{r3, r4, r5, lr}
   1e330:	mov	r2, #8
   1e334:	ldr	r3, [pc, #44]	; 1e368 <brlDotBitToIndex@@Base+0x3c>
   1e338:	mov	r5, r1
   1e33c:	ldr	ip, [pc, #40]	; 1e36c <brlDotBitToIndex@@Base+0x40>
   1e340:	mov	r1, r0
   1e344:	add	r3, pc, r3
   1e348:	ldr	r4, [r3, ip]
   1e34c:	mov	r0, r4
   1e350:	bl	14c64 <memchr@plt>
   1e354:	cmp	r0, #0
   1e358:	rsbne	r4, r4, r0
   1e35c:	strne	r4, [r5]
   1e360:	movne	r0, #1
   1e364:	pop	{r3, r4, r5, pc}
   1e368:			; <UNDEFINED> instruction: 0x00015cb4
   1e36c:	andeq	r0, r0, r8, asr #4

0001e370 <reportDataError@@Base>:
   1e370:	push	{r1, r2, r3}
   1e374:	cmp	r0, #0
   1e378:	ldr	r3, [pc, #144]	; 1e410 <reportDataError@@Base+0xa0>
   1e37c:	ldr	r2, [pc, #144]	; 1e414 <reportDataError@@Base+0xa4>
   1e380:	add	r3, pc, r3
   1e384:	push	{r4, r5, lr}
   1e388:	sub	sp, sp, #272	; 0x110
   1e38c:	ldr	r4, [r3, r2]
   1e390:	ldr	r1, [sp, #284]	; 0x11c
   1e394:	ldr	r3, [r4]
   1e398:	str	r3, [sp, #268]	; 0x10c
   1e39c:	beq	1e400 <reportDataError@@Base+0x90>
   1e3a0:	ldm	r0, {r2, r3}
   1e3a4:	cmp	r3, #0
   1e3a8:	addne	r3, r0, #4
   1e3ac:	add	r5, sp, #12
   1e3b0:	add	ip, sp, #288	; 0x120
   1e3b4:	str	r1, [sp]
   1e3b8:	mov	r1, #256	; 0x100
   1e3bc:	str	ip, [sp, #4]
   1e3c0:	mov	r0, r5
   1e3c4:	str	ip, [sp, #8]
   1e3c8:	bl	18ae8 <formatInputError@@Base>
   1e3cc:	ldr	r1, [pc, #68]	; 1e418 <reportDataError@@Base+0xa8>
   1e3d0:	mov	r2, r5
   1e3d4:	mov	r0, #4
   1e3d8:	add	r1, pc, r1
   1e3dc:	bl	17b84 <logMessage@@Base>
   1e3e0:	ldr	r2, [sp, #268]	; 0x10c
   1e3e4:	ldr	r3, [r4]
   1e3e8:	cmp	r2, r3
   1e3ec:	bne	1e40c <reportDataError@@Base+0x9c>
   1e3f0:	add	sp, sp, #272	; 0x110
   1e3f4:	pop	{r4, r5, lr}
   1e3f8:	add	sp, sp, #12
   1e3fc:	bx	lr
   1e400:	mov	r3, r0
   1e404:	mov	r2, r0
   1e408:	b	1e3ac <reportDataError@@Base+0x3c>
   1e40c:	bl	14a60 <__stack_chk_fail@plt>
   1e410:	andeq	r5, r1, r8, ror ip
   1e414:	andeq	r0, r0, ip, lsr #4
   1e418:	andeq	r2, r0, r4, lsr #14

0001e41c <isKeyword@@Base>:
   1e41c:	push	{r3, r4, r5, r6, r7, lr}
   1e420:	mov	r7, r2
   1e424:	mov	r6, r1
   1e428:	mov	r5, r0
   1e42c:	bl	1476c <wcslen@plt>
   1e430:	cmp	r0, r7
   1e434:	mov	r4, r0
   1e438:	beq	1e444 <isKeyword@@Base+0x28>
   1e43c:	mov	r0, #0
   1e440:	pop	{r3, r4, r5, r6, r7, pc}
   1e444:	cmp	r0, #0
   1e448:	beq	1e470 <isKeyword@@Base+0x54>
   1e44c:	ldr	r0, [r6], #4
   1e450:	bl	14778 <towlower@plt>
   1e454:	mov	r7, r0
   1e458:	ldr	r0, [r5], #4
   1e45c:	bl	14778 <towlower@plt>
   1e460:	cmp	r7, r0
   1e464:	bne	1e43c <isKeyword@@Base+0x20>
   1e468:	subs	r4, r4, #1
   1e46c:	bne	1e44c <isKeyword@@Base+0x30>
   1e470:	mov	r0, #1
   1e474:	pop	{r3, r4, r5, r6, r7, pc}

0001e478 <isNumber@@Base>:
   1e478:	ldr	r3, [pc, #196]	; 1e544 <isNumber@@Base+0xcc>
   1e47c:	cmp	r2, #0
   1e480:	push	{r4, r5, r6, r7, fp, lr}
   1e484:	add	fp, sp, #20
   1e488:	ldr	ip, [pc, #184]	; 1e548 <isNumber@@Base+0xd0>
   1e48c:	sub	sp, sp, #8
   1e490:	add	r3, pc, r3
   1e494:	mov	r5, r0
   1e498:	movle	r0, #0
   1e49c:	ldr	r4, [r3, ip]
   1e4a0:	ldr	r3, [r4]
   1e4a4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e4a8:	ble	1e514 <isNumber@@Base+0x9c>
   1e4ac:	add	r3, r2, #8
   1e4b0:	mov	r6, sp
   1e4b4:	bic	r3, r3, #7
   1e4b8:	sub	r1, r1, #4
   1e4bc:	sub	sp, sp, r3
   1e4c0:	mov	r7, #0
   1e4c4:	add	ip, sp, r2
   1e4c8:	mov	r0, sp
   1e4cc:	mov	r3, sp
   1e4d0:	strb	r7, [sp, r2]
   1e4d4:	ldr	r2, [r1, #4]!
   1e4d8:	cmp	r2, #255	; 0xff
   1e4dc:	bhi	1e52c <isNumber@@Base+0xb4>
   1e4e0:	strb	r2, [r3], #1
   1e4e4:	cmp	r3, ip
   1e4e8:	bne	1e4d4 <isNumber@@Base+0x5c>
   1e4ec:	sub	r1, fp, #28
   1e4f0:	mov	r2, #0
   1e4f4:	bl	147f0 <strtol@plt>
   1e4f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4fc:	ldrb	r3, [r3]
   1e500:	cmp	r3, #0
   1e504:	bne	1e534 <isNumber@@Base+0xbc>
   1e508:	str	r0, [r5]
   1e50c:	mov	r0, #1
   1e510:	mov	sp, r6
   1e514:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e518:	ldr	r3, [r4]
   1e51c:	cmp	r2, r3
   1e520:	bne	1e540 <isNumber@@Base+0xc8>
   1e524:	sub	sp, fp, #20
   1e528:	pop	{r4, r5, r6, r7, fp, pc}
   1e52c:	mov	r0, #0
   1e530:	b	1e510 <isNumber@@Base+0x98>
   1e534:	mov	r0, #0
   1e538:	mov	sp, r6
   1e53c:	b	1e514 <isNumber@@Base+0x9c>
   1e540:	bl	14a60 <__stack_chk_fail@plt>
   1e544:	andeq	r5, r1, r8, ror #22
   1e548:	andeq	r0, r0, ip, lsr #4

0001e54c <setGlobalDataVariable@@Base>:
   1e54c:	ldr	r3, [pc, #316]	; 1e690 <setGlobalDataVariable@@Base+0x144>
   1e550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e554:	add	fp, sp, #32
   1e558:	ldr	r2, [pc, #308]	; 1e694 <setGlobalDataVariable@@Base+0x148>
   1e55c:	sub	sp, sp, #28
   1e560:	add	r3, pc, r3
   1e564:	mov	r6, r1
   1e568:	mov	sl, r0
   1e56c:	ldr	r2, [r3, r2]
   1e570:	sub	r4, fp, #48	; 0x30
   1e574:	ldr	r3, [r2]
   1e578:	str	r2, [fp, #-56]	; 0xffffffc8
   1e57c:	str	r3, [fp, #-40]	; 0xffffffd8
   1e580:	bl	1d7f0 <getUtf8Length@@Base>
   1e584:	add	r7, r0, #1
   1e588:	mov	r5, r0
   1e58c:	mov	r0, r6
   1e590:	lsl	r7, r7, #2
   1e594:	add	r2, r7, #10
   1e598:	bic	r2, r2, #7
   1e59c:	sub	sp, sp, r2
   1e5a0:	bl	1d7f0 <getUtf8Length@@Base>
   1e5a4:	lsr	r2, r7, #2
   1e5a8:	sub	r7, fp, #52	; 0x34
   1e5ac:	mov	ip, sp
   1e5b0:	mov	r1, r4
   1e5b4:	str	sp, [fp, #-48]	; 0xffffffd0
   1e5b8:	str	ip, [fp, #-60]	; 0xffffffc4
   1e5bc:	str	sl, [fp, #-52]	; 0xffffffcc
   1e5c0:	add	r8, r0, #1
   1e5c4:	mov	r9, r0
   1e5c8:	mov	r0, r7
   1e5cc:	lsl	r8, r8, #2
   1e5d0:	add	lr, r8, #10
   1e5d4:	bic	lr, lr, #7
   1e5d8:	sub	sp, sp, lr
   1e5dc:	bl	1d888 <convertUtf8ToWchars@@Base>
   1e5e0:	mov	r0, r7
   1e5e4:	lsr	r2, r8, #2
   1e5e8:	mov	r1, r4
   1e5ec:	str	r6, [fp, #-52]	; 0xffffffcc
   1e5f0:	mov	r6, sp
   1e5f4:	str	sp, [fp, #-48]	; 0xffffffd0
   1e5f8:	bl	1d888 <convertUtf8ToWchars@@Base>
   1e5fc:	bl	1e288 <isOctalDigit@@Base+0x1a4>
   1e600:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1e604:	subs	r7, r0, #0
   1e608:	moveq	r0, r7
   1e60c:	beq	1e658 <setGlobalDataVariable@@Base+0x10c>
   1e610:	ldr	r1, [pc, #128]	; 1e698 <setGlobalDataVariable@@Base+0x14c>
   1e614:	mov	r2, r4
   1e618:	str	ip, [fp, #-48]	; 0xffffffd0
   1e61c:	add	r1, pc, r1
   1e620:	str	r5, [fp, #-44]	; 0xffffffd4
   1e624:	bl	1faa8 <findItem@@Base>
   1e628:	cmp	r0, #0
   1e62c:	movne	r1, r0
   1e630:	beq	1e674 <setGlobalDataVariable@@Base+0x128>
   1e634:	add	r0, r1, #8
   1e638:	mov	r2, r6
   1e63c:	mov	r3, r9
   1e640:	add	r1, r1, #12
   1e644:	bl	1e220 <isOctalDigit@@Base+0x13c>
   1e648:	cmp	r0, #0
   1e64c:	movne	r0, #1
   1e650:	bne	1e658 <setGlobalDataVariable@@Base+0x10c>
   1e654:	mov	r0, #0
   1e658:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e65c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e660:	ldr	r3, [r1]
   1e664:	cmp	r2, r3
   1e668:	bne	1e68c <setGlobalDataVariable@@Base+0x140>
   1e66c:	sub	sp, fp, #32
   1e670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e674:	mov	r1, r4
   1e678:	mov	r0, r7
   1e67c:	bl	1e16c <isOctalDigit@@Base+0x88>
   1e680:	subs	r1, r0, #0
   1e684:	beq	1e654 <setGlobalDataVariable@@Base+0x108>
   1e688:	b	1e634 <setGlobalDataVariable@@Base+0xe8>
   1e68c:	bl	14a60 <__stack_chk_fail@plt>
   1e690:	muleq	r1, r8, sl
   1e694:	andeq	r0, r0, ip, lsr #4
   1e698:			; <UNDEFINED> instruction: 0xfffffb14

0001e69c <setGlobalTableVariables@@Base>:
   1e69c:	mov	r3, r0
   1e6a0:	ldr	r0, [pc, #52]	; 1e6dc <setGlobalTableVariables@@Base+0x40>
   1e6a4:	push	{r4, lr}
   1e6a8:	add	r0, pc, r0
   1e6ac:	mov	r4, r1
   1e6b0:	mov	r1, r3
   1e6b4:	bl	1e54c <setGlobalDataVariable@@Base>
   1e6b8:	cmp	r0, #0
   1e6bc:	popeq	{r4, pc}
   1e6c0:	ldr	r0, [pc, #24]	; 1e6e0 <setGlobalTableVariables@@Base+0x44>
   1e6c4:	mov	r1, r4
   1e6c8:	add	r0, pc, r0
   1e6cc:	bl	1e54c <setGlobalDataVariable@@Base>
   1e6d0:	adds	r0, r0, #0
   1e6d4:	movne	r0, #1
   1e6d8:	pop	{r4, pc}
   1e6dc:	andeq	r3, r0, r8, lsl #29
   1e6e0:	andeq	r3, r0, r8, ror lr

0001e6e4 <findDataOperand@@Base>:
   1e6e4:	push	{r4, r5, r6, r7, r8, lr}
   1e6e8:	mov	r6, r0
   1e6ec:	ldr	r4, [r0, #24]
   1e6f0:	mov	r8, r1
   1e6f4:	str	r4, [r0, #20]
   1e6f8:	b	1e700 <findDataOperand@@Base+0x1c>
   1e6fc:	str	r4, [r6, #20]
   1e700:	mov	r5, r4
   1e704:	add	r4, r4, #4
   1e708:	ldr	r0, [r5]
   1e70c:	bl	14790 <iswspace@plt>
   1e710:	subs	r7, r0, #0
   1e714:	bne	1e6fc <findDataOperand@@Base+0x18>
   1e718:	str	r5, [r6, #24]
   1e71c:	ldr	r3, [r5]
   1e720:	cmp	r3, #0
   1e724:	movne	r7, #1
   1e728:	bne	1e748 <findDataOperand@@Base+0x64>
   1e72c:	cmp	r8, #0
   1e730:	beq	1e748 <findDataOperand@@Base+0x64>
   1e734:	ldr	r1, [pc, #20]	; 1e750 <findDataOperand@@Base+0x6c>
   1e738:	mov	r0, r6
   1e73c:	mov	r2, r8
   1e740:	add	r1, pc, r1
   1e744:	bl	1e370 <reportDataError@@Base>
   1e748:	mov	r0, r7
   1e74c:	pop	{r4, r5, r6, r7, r8, pc}
   1e750:	andeq	r3, r0, r4, lsl lr
   1e754:	ldr	r3, [pc, #228]	; 1e840 <findDataOperand@@Base+0x15c>
   1e758:	push	{r4, r5, r6, r7, fp, lr}
   1e75c:	add	fp, sp, #20
   1e760:	ldr	r2, [pc, #220]	; 1e844 <findDataOperand@@Base+0x160>
   1e764:	sub	sp, sp, #16
   1e768:	add	r3, pc, r3
   1e76c:	mov	r4, r1
   1e770:	mov	r7, r0
   1e774:	ldr	r6, [r3, r2]
   1e778:	ldr	r3, [r6]
   1e77c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e780:	bl	14b80 <strlen@plt>
   1e784:	ldr	r3, [r4, #4]
   1e788:	sub	r1, fp, #28
   1e78c:	str	r7, [fp, #-32]	; 0xffffffe0
   1e790:	add	r3, r3, #1
   1e794:	str	r3, [r4, #4]
   1e798:	add	r2, r0, #1
   1e79c:	sub	r0, fp, #32
   1e7a0:	lsl	r3, r2, #2
   1e7a4:	add	r3, r3, #10
   1e7a8:	bic	r3, r3, #7
   1e7ac:	sub	sp, sp, r3
   1e7b0:	str	sp, [fp, #-28]	; 0xffffffe4
   1e7b4:	bl	1d888 <convertUtf8ToWchars@@Base>
   1e7b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e7bc:	ldrb	r1, [r2]
   1e7c0:	cmp	r1, #0
   1e7c4:	bne	1e820 <findDataOperand@@Base+0x13c>
   1e7c8:	str	sp, [r4, #20]
   1e7cc:	mov	r0, r4
   1e7d0:	str	sp, [r4, #24]
   1e7d4:	bl	1e6e4 <findDataOperand@@Base>
   1e7d8:	cmp	r0, #0
   1e7dc:	beq	1e818 <findDataOperand@@Base+0x134>
   1e7e0:	ldr	r3, [r4, #20]
   1e7e4:	ldr	r3, [r3]
   1e7e8:	cmp	r3, #35	; 0x23
   1e7ec:	beq	1e818 <findDataOperand@@Base+0x134>
   1e7f0:	mov	r0, r4
   1e7f4:	ldr	r3, [r4, #8]
   1e7f8:	ldr	r1, [r4, #12]
   1e7fc:	blx	r3
   1e800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e804:	ldr	r3, [r6]
   1e808:	cmp	r2, r3
   1e80c:	bne	1e83c <findDataOperand@@Base+0x158>
   1e810:	sub	sp, fp, #20
   1e814:	pop	{r4, r5, r6, r7, fp, pc}
   1e818:	mov	r0, #1
   1e81c:	b	1e800 <findDataOperand@@Base+0x11c>
   1e820:	ldr	r1, [pc, #32]	; 1e848 <findDataOperand@@Base+0x164>
   1e824:	mov	r0, r4
   1e828:	rsb	r2, r7, r2
   1e82c:	add	r1, pc, r1
   1e830:	bl	1e370 <reportDataError@@Base>
   1e834:	mov	r0, #1
   1e838:	b	1e800 <findDataOperand@@Base+0x11c>
   1e83c:	bl	14a60 <__stack_chk_fail@plt>
   1e840:	muleq	r1, r0, r8
   1e844:	andeq	r0, r0, ip, lsr #4
   1e848:	andeq	r3, r0, ip, lsr sp

0001e84c <getDataCharacter@@Base>:
   1e84c:	ldr	r3, [r0, #24]
   1e850:	ldr	r2, [r3]
   1e854:	cmp	r2, #0
   1e858:	addne	r2, r3, #4
   1e85c:	strne	r2, [r0, #24]
   1e860:	ldrne	r3, [r3]
   1e864:	movne	r0, #1
   1e868:	moveq	r0, r2
   1e86c:	strne	r3, [r1]
   1e870:	bx	lr

0001e874 <ungetDataCharacters@@Base>:
   1e874:	push	{r3, lr}
   1e878:	mov	ip, r0
   1e87c:	ldr	r2, [r0, #24]
   1e880:	ldr	r3, [r0, #20]
   1e884:	rsb	r3, r3, r2
   1e888:	asr	r3, r3, #2
   1e88c:	cmp	r3, r1
   1e890:	bcc	1e8a4 <ungetDataCharacters@@Base+0x30>
   1e894:	sub	r1, r2, r1, lsl #2
   1e898:	mov	r0, #1
   1e89c:	str	r1, [ip, #24]
   1e8a0:	pop	{r3, pc}
   1e8a4:	mov	r2, r1
   1e8a8:	ldr	r1, [pc, #12]	; 1e8bc <ungetDataCharacters@@Base+0x48>
   1e8ac:	add	r1, pc, r1
   1e8b0:	bl	1e370 <reportDataError@@Base>
   1e8b4:	mov	r0, #0
   1e8b8:	pop	{r3, pc}
   1e8bc:	andeq	r3, r0, r4, ror #25

0001e8c0 <getDataOperand@@Base>:
   1e8c0:	push	{r4, r5, r6, lr}
   1e8c4:	mov	r6, r1
   1e8c8:	mov	r1, r2
   1e8cc:	mov	r5, r0
   1e8d0:	bl	1e6e4 <findDataOperand@@Base>
   1e8d4:	cmp	r0, #0
   1e8d8:	popeq	{r4, r5, r6, pc}
   1e8dc:	ldr	r3, [r5, #24]
   1e8e0:	b	1e8f4 <getDataOperand@@Base+0x34>
   1e8e4:	bl	14790 <iswspace@plt>
   1e8e8:	mov	r3, r4
   1e8ec:	cmp	r0, #0
   1e8f0:	bne	1e908 <getDataOperand@@Base+0x48>
   1e8f4:	add	r4, r3, #4
   1e8f8:	str	r4, [r5, #24]
   1e8fc:	ldr	r0, [r3, #4]
   1e900:	cmp	r0, #0
   1e904:	bne	1e8e4 <getDataOperand@@Base+0x24>
   1e908:	ldr	r3, [r5, #20]
   1e90c:	mov	r0, #1
   1e910:	str	r3, [r6]
   1e914:	ldr	r2, [r5, #24]
   1e918:	ldr	r3, [r5, #20]
   1e91c:	rsb	r3, r3, r2
   1e920:	asr	r3, r3, #2
   1e924:	str	r3, [r6, #4]
   1e928:	pop	{r4, r5, r6, pc}

0001e92c <getDataText@@Base>:
   1e92c:	push	{r4, r5, r6, lr}
   1e930:	mov	r6, r1
   1e934:	mov	r1, r2
   1e938:	mov	r4, r0
   1e93c:	bl	1e6e4 <findDataOperand@@Base>
   1e940:	cmp	r0, #0
   1e944:	popeq	{r4, r5, r6, pc}
   1e948:	ldr	r5, [r4, #20]
   1e94c:	mov	r0, r5
   1e950:	bl	1476c <wcslen@plt>
   1e954:	add	r0, r5, r0, lsl #2
   1e958:	str	r0, [r4, #24]
   1e95c:	str	r5, [r6]
   1e960:	ldr	r2, [r4, #24]
   1e964:	ldr	r3, [r4, #20]
   1e968:	rsb	r3, r3, r2
   1e96c:	asr	r3, r3, #2
   1e970:	str	r3, [r6, #4]
   1e974:	cmp	r3, #0
   1e978:	addne	r5, r5, r3, lsl #2
   1e97c:	bne	1e990 <getDataText@@Base+0x64>
   1e980:	b	1e9a8 <getDataText@@Base+0x7c>
   1e984:	cmp	r4, #0
   1e988:	str	r4, [r6, #4]
   1e98c:	beq	1e9a8 <getDataText@@Base+0x7c>
   1e990:	ldr	r0, [r5, #-4]!
   1e994:	sub	r4, r3, #1
   1e998:	bl	14790 <iswspace@plt>
   1e99c:	mov	r3, r4
   1e9a0:	cmp	r0, #0
   1e9a4:	bne	1e984 <getDataText@@Base+0x58>
   1e9a8:	mov	r0, #1
   1e9ac:	pop	{r4, r5, r6, pc}

0001e9b0 <parseDataString@@Base>:
   1e9b0:	ldr	ip, [pc, #1444]	; 1ef5c <parseDataString@@Base+0x5ac>
   1e9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9b8:	subs	sl, r3, #0
   1e9bc:	add	fp, sp, #32
   1e9c0:	ldr	r3, [pc, #1432]	; 1ef60 <parseDataString@@Base+0x5b0>
   1e9c4:	sub	sp, sp, #76	; 0x4c
   1e9c8:	add	ip, pc, ip
   1e9cc:	str	ip, [fp, #-80]	; 0xffffffb0
   1e9d0:	str	r0, [fp, #-92]	; 0xffffffa4
   1e9d4:	mov	r4, #0
   1e9d8:	ldr	r3, [ip, r3]
   1e9dc:	mov	r6, r1
   1e9e0:	mov	r7, r2
   1e9e4:	str	r3, [fp, #-84]	; 0xffffffac
   1e9e8:	ldr	r3, [r3]
   1e9ec:	strb	r4, [r1]
   1e9f0:	str	r3, [fp, #-40]	; 0xffffffd8
   1e9f4:	ble	1eee8 <parseDataString@@Base+0x538>
   1e9f8:	ldr	r1, [pc, #1380]	; 1ef64 <parseDataString@@Base+0x5b4>
   1e9fc:	sub	r2, fp, #48	; 0x30
   1ea00:	str	r2, [fp, #-68]	; 0xffffffbc
   1ea04:	add	r1, pc, r1
   1ea08:	str	r1, [fp, #-76]	; 0xffffffb4
   1ea0c:	b	1ea48 <parseDataString@@Base+0x98>
   1ea10:	sub	r1, fp, #56	; 0x38
   1ea14:	mov	r2, #1
   1ea18:	ldrb	r0, [r6]
   1ea1c:	add	r4, r4, #1
   1ea20:	add	r5, r2, r0
   1ea24:	cmp	r5, #254	; 0xfe
   1ea28:	bhi	1ef18 <parseDataString@@Base+0x568>
   1ea2c:	add	r0, r6, r0, lsl #2
   1ea30:	uxtb	r5, r5
   1ea34:	add	r0, r0, #4
   1ea38:	bl	1488c <wmemcpy@plt>
   1ea3c:	cmp	sl, r4
   1ea40:	strb	r5, [r6]
   1ea44:	ble	1eeec <parseDataString@@Base+0x53c>
   1ea48:	ldr	r3, [r7, r4, lsl #2]
   1ea4c:	lsl	r2, r4, #2
   1ea50:	add	ip, r7, r2
   1ea54:	str	ip, [fp, #-64]	; 0xffffffc0
   1ea58:	cmp	r3, #92	; 0x5c
   1ea5c:	str	r3, [fp, #-56]	; 0xffffffc8
   1ea60:	bne	1ea10 <parseDataString@@Base+0x60>
   1ea64:	add	r5, r4, #1
   1ea68:	cmp	sl, r5
   1ea6c:	ble	1ec74 <parseDataString@@Base+0x2c4>
   1ea70:	add	r1, r2, #4
   1ea74:	add	r3, r7, r1
   1ea78:	ldr	r0, [r7, r1]
   1ea7c:	sub	r1, r0, #35	; 0x23
   1ea80:	str	r0, [fp, #-56]	; 0xffffffc8
   1ea84:	cmp	r1, #88	; 0x58
   1ea88:	addls	pc, pc, r1, lsl #2
   1ea8c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ea90:	b	1ecac <parseDataString@@Base+0x2fc>
   1ea94:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ea98:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ea9c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaa0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaa4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaa8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaac:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eab0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eab4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eab8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eabc:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eac0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eac4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eac8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eacc:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ead0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ead4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ead8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eadc:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eae0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eae4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eae8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaec:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaf0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eaf4:	b	1ecd8 <parseDataString@@Base+0x328>
   1eaf8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eafc:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb00:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb04:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb08:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb0c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb10:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb14:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb18:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb1c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb20:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb24:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb28:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb2c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb30:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb34:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb38:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb3c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb40:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb44:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb48:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb4c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb50:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb54:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb58:	b	1ecb4 <parseDataString@@Base+0x304>
   1eb5c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb60:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb64:	b	1ebf4 <parseDataString@@Base+0x244>
   1eb68:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb6c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb70:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb74:	b	1ecac <parseDataString@@Base+0x2fc>
   1eb78:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb7c:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb80:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb84:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb88:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb8c:	b	1eebc <parseDataString@@Base+0x50c>
   1eb90:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb94:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb98:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eb9c:	b	1eeac <parseDataString@@Base+0x4fc>
   1eba0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eba4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eba8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebac:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebb0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebb4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebb8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebbc:	b	1ee9c <parseDataString@@Base+0x4ec>
   1ebc0:	b	1ee84 <parseDataString@@Base+0x4d4>
   1ebc4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebc8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebcc:	b	1ee74 <parseDataString@@Base+0x4c4>
   1ebd0:	b	1ee64 <parseDataString@@Base+0x4b4>
   1ebd4:	b	1ee54 <parseDataString@@Base+0x4a4>
   1ebd8:	b	1ee30 <parseDataString@@Base+0x480>
   1ebdc:	b	1ee20 <parseDataString@@Base+0x470>
   1ebe0:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebe4:	b	1ebf4 <parseDataString@@Base+0x244>
   1ebe8:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebec:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ebf0:	b	1edb0 <parseDataString@@Base+0x400>
   1ebf4:	ldr	r2, [pc, #876]	; 1ef68 <parseDataString@@Base+0x5b8>
   1ebf8:	mov	r8, #2
   1ebfc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ec00:	ldr	r2, [r1, r2]
   1ec04:	str	r2, [fp, #-72]	; 0xffffffb8
   1ec08:	sub	ip, fp, #52	; 0x34
   1ec0c:	mov	r9, #0
   1ec10:	str	r4, [fp, #-88]	; 0xffffffa8
   1ec14:	mov	r4, r9
   1ec18:	str	r6, [fp, #-96]	; 0xffffffa0
   1ec1c:	mov	r9, r3
   1ec20:	ldr	r6, [fp, #-72]	; 0xffffffb8
   1ec24:	str	r7, [fp, #-72]	; 0xffffffb8
   1ec28:	mov	r7, ip
   1ec2c:	b	1ec5c <parseDataString@@Base+0x2ac>
   1ec30:	ldr	r0, [r9, #4]!
   1ec34:	mov	r1, r7
   1ec38:	sub	r2, fp, #48	; 0x30
   1ec3c:	blx	r6
   1ec40:	cmp	r0, #0
   1ec44:	beq	1ec68 <parseDataString@@Base+0x2b8>
   1ec48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ec4c:	subs	r8, r8, #1
   1ec50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ec54:	orr	r4, r2, r4, lsl r1
   1ec58:	beq	1ef30 <parseDataString@@Base+0x580>
   1ec5c:	add	r5, r5, #1
   1ec60:	cmp	r5, sl
   1ec64:	bne	1ec30 <parseDataString@@Base+0x280>
   1ec68:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1ec6c:	cmp	sl, r5
   1ec70:	addgt	r5, r5, #1
   1ec74:	ldr	r1, [pc, #752]	; 1ef6c <parseDataString@@Base+0x5bc>
   1ec78:	mov	r2, #5
   1ec7c:	mov	r0, #0
   1ec80:	add	r1, pc, r1
   1ec84:	bl	14a90 <dcgettext@plt>
   1ec88:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1ec8c:	ldr	r1, [pc, #732]	; 1ef70 <parseDataString@@Base+0x5c0>
   1ec90:	rsb	r3, r4, r5
   1ec94:	str	ip, [sp]
   1ec98:	add	r1, pc, r1
   1ec9c:	mov	r2, r0
   1eca0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1eca4:	bl	1e370 <reportDataError@@Base>
   1eca8:	b	1ef28 <parseDataString@@Base+0x578>
   1ecac:	mov	r4, r5
   1ecb0:	b	1ea10 <parseDataString@@Base+0x60>
   1ecb4:	ldr	ip, [fp, #4]
   1ecb8:	cmp	ip, #0
   1ecbc:	bne	1ec6c <parseDataString@@Base+0x2bc>
   1ecc0:	ldr	r2, [pc, #672]	; 1ef68 <parseDataString@@Base+0x5b8>
   1ecc4:	mov	r8, #8
   1ecc8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1eccc:	ldr	r2, [r1, r2]
   1ecd0:	str	r2, [fp, #-72]	; 0xffffffb8
   1ecd4:	b	1ec08 <parseDataString@@Base+0x258>
   1ecd8:	add	r2, r2, #8
   1ecdc:	add	r5, r4, #2
   1ece0:	add	r9, r7, r2
   1ece4:	mov	r1, #62	; 0x3e
   1ece8:	rsb	r2, r5, sl
   1ecec:	mov	r0, r9
   1ecf0:	bl	14970 <wmemchr@plt>
   1ecf4:	ldr	r3, [fp, #4]
   1ecf8:	cmp	r3, #0
   1ecfc:	bne	1ec6c <parseDataString@@Base+0x2bc>
   1ed00:	cmp	r0, #0
   1ed04:	beq	1ef4c <parseDataString@@Base+0x59c>
   1ed08:	rsb	ip, r9, r0
   1ed0c:	mov	r8, sp
   1ed10:	asr	lr, ip, #2
   1ed14:	add	r3, lr, #8
   1ed18:	cmp	lr, #0
   1ed1c:	bic	r3, r3, #7
   1ed20:	add	r5, r5, lr
   1ed24:	sub	sp, sp, r3
   1ed28:	subgt	r0, r9, #4
   1ed2c:	add	r1, sp, #8
   1ed30:	addgt	lr, r1, lr
   1ed34:	movgt	r2, r1
   1ed38:	bgt	1ed58 <parseDataString@@Base+0x3a8>
   1ed3c:	b	1ed74 <parseDataString@@Base+0x3c4>
   1ed40:	cmp	r3, #255	; 0xff
   1ed44:	bhi	1ef44 <parseDataString@@Base+0x594>
   1ed48:	uxtb	r3, r3
   1ed4c:	strb	r3, [r2], #1
   1ed50:	cmp	r2, lr
   1ed54:	beq	1ed74 <parseDataString@@Base+0x3c4>
   1ed58:	ldr	r3, [r0, #4]!
   1ed5c:	cmp	r3, #95	; 0x5f
   1ed60:	bne	1ed40 <parseDataString@@Base+0x390>
   1ed64:	mov	r3, #32
   1ed68:	strb	r3, [r2], #1
   1ed6c:	cmp	r2, lr
   1ed70:	bne	1ed58 <parseDataString@@Base+0x3a8>
   1ed74:	mov	r2, #0
   1ed78:	mov	r0, #2
   1ed7c:	strb	r2, [r1, ip, asr #2]
   1ed80:	sub	r2, fp, #48	; 0x30
   1ed84:	mov	r3, #0
   1ed88:	str	r3, [fp, #-48]	; 0xffffffd0
   1ed8c:	bl	149e8 <u_charFromName_50@plt>
   1ed90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ed94:	mov	r2, #1
   1ed98:	str	r0, [fp, #-56]	; 0xffffffc8
   1ed9c:	sub	r1, fp, #56	; 0x38
   1eda0:	cmp	r3, #0
   1eda4:	mov	sp, r8
   1eda8:	ble	1ee18 <parseDataString@@Base+0x468>
   1edac:	b	1ec6c <parseDataString@@Base+0x2bc>
   1edb0:	add	r2, r2, #8
   1edb4:	add	r9, r4, #2
   1edb8:	add	r5, r7, r2
   1edbc:	mov	r1, #125	; 0x7d
   1edc0:	rsb	r2, r9, sl
   1edc4:	mov	r0, r5
   1edc8:	bl	14970 <wmemchr@plt>
   1edcc:	cmp	r0, #0
   1edd0:	beq	1ef4c <parseDataString@@Base+0x59c>
   1edd4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1edd8:	rsb	r0, r5, r0
   1eddc:	str	r4, [fp, #-72]	; 0xffffffb8
   1ede0:	sub	r4, fp, #48	; 0x30
   1ede4:	str	r5, [fp, #-48]	; 0xffffffd0
   1ede8:	asr	r5, r0, #2
   1edec:	ldr	r8, [r2, #16]
   1edf0:	str	r5, [fp, #-44]	; 0xffffffd4
   1edf4:	mov	r0, r8
   1edf8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1edfc:	mov	r2, r4
   1ee00:	bl	1faa8 <findItem@@Base>
   1ee04:	cmp	r0, #0
   1ee08:	beq	1eecc <parseDataString@@Base+0x51c>
   1ee0c:	ldr	r1, [r0, #8]
   1ee10:	add	r5, r9, r5
   1ee14:	ldr	r2, [r0, #12]
   1ee18:	mov	r4, r5
   1ee1c:	b	1ea18 <parseDataString@@Base+0x68>
   1ee20:	mov	r3, #11
   1ee24:	mov	r4, r5
   1ee28:	str	r3, [fp, #-56]	; 0xffffffc8
   1ee2c:	b	1ea10 <parseDataString@@Base+0x60>
   1ee30:	ldr	r2, [fp, #4]
   1ee34:	cmp	r2, #0
   1ee38:	bne	1ec6c <parseDataString@@Base+0x2bc>
   1ee3c:	ldr	r2, [pc, #292]	; 1ef68 <parseDataString@@Base+0x5b8>
   1ee40:	mov	r8, #4
   1ee44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1ee48:	ldr	r2, [ip, r2]
   1ee4c:	str	r2, [fp, #-72]	; 0xffffffb8
   1ee50:	b	1ec08 <parseDataString@@Base+0x258>
   1ee54:	mov	r3, #9
   1ee58:	mov	r4, r5
   1ee5c:	str	r3, [fp, #-56]	; 0xffffffc8
   1ee60:	b	1ea10 <parseDataString@@Base+0x60>
   1ee64:	mov	r2, #32
   1ee68:	mov	r4, r5
   1ee6c:	str	r2, [fp, #-56]	; 0xffffffc8
   1ee70:	b	1ea10 <parseDataString@@Base+0x60>
   1ee74:	mov	r3, #13
   1ee78:	mov	r4, r5
   1ee7c:	str	r3, [fp, #-56]	; 0xffffffc8
   1ee80:	b	1ea10 <parseDataString@@Base+0x60>
   1ee84:	ldr	r2, [pc, #232]	; 1ef74 <parseDataString@@Base+0x5c4>
   1ee88:	mov	r8, #3
   1ee8c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ee90:	ldr	r2, [r1, r2]
   1ee94:	str	r2, [fp, #-72]	; 0xffffffb8
   1ee98:	b	1ec08 <parseDataString@@Base+0x258>
   1ee9c:	mov	r3, #10
   1eea0:	mov	r4, r5
   1eea4:	str	r3, [fp, #-56]	; 0xffffffc8
   1eea8:	b	1ea10 <parseDataString@@Base+0x60>
   1eeac:	mov	r3, #12
   1eeb0:	mov	r4, r5
   1eeb4:	str	r3, [fp, #-56]	; 0xffffffc8
   1eeb8:	b	1ea10 <parseDataString@@Base+0x60>
   1eebc:	mov	r3, #8
   1eec0:	mov	r4, r5
   1eec4:	str	r3, [fp, #-56]	; 0xffffffc8
   1eec8:	b	1ea10 <parseDataString@@Base+0x60>
   1eecc:	mov	r0, r8
   1eed0:	bl	1f880 <getQueueData@@Base>
   1eed4:	subs	r8, r0, #0
   1eed8:	bne	1edf4 <parseDataString@@Base+0x444>
   1eedc:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1eee0:	add	r5, r9, r5
   1eee4:	b	1ec6c <parseDataString@@Base+0x2bc>
   1eee8:	mov	r5, r4
   1eeec:	add	r6, r6, r5, lsl #2
   1eef0:	mov	r0, #1
   1eef4:	mov	r3, #0
   1eef8:	str	r3, [r6, #4]
   1eefc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ef00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ef04:	ldr	r3, [r1]
   1ef08:	cmp	r2, r3
   1ef0c:	bne	1ef54 <parseDataString@@Base+0x5a4>
   1ef10:	sub	sp, fp, #32
   1ef14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef18:	ldr	r1, [pc, #88]	; 1ef78 <parseDataString@@Base+0x5c8>
   1ef1c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1ef20:	add	r1, pc, r1
   1ef24:	bl	1e370 <reportDataError@@Base>
   1ef28:	mov	r0, #0
   1ef2c:	b	1eefc <parseDataString@@Base+0x54c>
   1ef30:	str	r4, [fp, #-56]	; 0xffffffc8
   1ef34:	mov	r4, r5
   1ef38:	ldr	r6, [fp, #-96]	; 0xffffffa0
   1ef3c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   1ef40:	b	1ea10 <parseDataString@@Base+0x60>
   1ef44:	mov	sp, r8
   1ef48:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ef4c:	sub	r5, sl, #1
   1ef50:	b	1ec6c <parseDataString@@Base+0x2bc>
   1ef54:	bl	14a60 <__stack_chk_fail@plt>
   1ef58:	bl	14c94 <_Unwind_Resume@plt>
   1ef5c:	andeq	r5, r1, r0, lsr r6
   1ef60:	andeq	r0, r0, ip, lsr #4
   1ef64:			; <UNDEFINED> instruction: 0xfffff72c
   1ef68:	andeq	r0, r0, ip, lsr r2
   1ef6c:	andeq	r3, r0, ip, lsr r9
   1ef70:	andeq	r3, r0, r4, lsl #14
   1ef74:	andeq	r0, r0, r4, ror #4
   1ef78:			; <UNDEFINED> instruction: 0x000036b4

0001ef7c <getDataString@@Base>:
   1ef7c:	push	{r4, r5, r6, r7, lr}
   1ef80:	mov	r5, r2
   1ef84:	ldr	lr, [pc, #112]	; 1effc <getDataString@@Base+0x80>
   1ef88:	mov	r2, r3
   1ef8c:	ldr	ip, [pc, #108]	; 1f000 <getDataString@@Base+0x84>
   1ef90:	sub	sp, sp, #28
   1ef94:	add	lr, pc, lr
   1ef98:	mov	r6, r1
   1ef9c:	add	r1, sp, #12
   1efa0:	mov	r7, r0
   1efa4:	ldr	r4, [lr, ip]
   1efa8:	mov	r3, lr
   1efac:	ldr	r3, [r4]
   1efb0:	str	r3, [sp, #20]
   1efb4:	bl	1e8c0 <getDataOperand@@Base>
   1efb8:	cmp	r0, #0
   1efbc:	beq	1efe0 <getDataString@@Base+0x64>
   1efc0:	ldr	r2, [sp, #12]
   1efc4:	mov	r0, r7
   1efc8:	ldr	r3, [sp, #16]
   1efcc:	mov	r1, r6
   1efd0:	str	r5, [sp]
   1efd4:	bl	1e9b0 <parseDataString@@Base>
   1efd8:	adds	r0, r0, #0
   1efdc:	movne	r0, #1
   1efe0:	ldr	r2, [sp, #20]
   1efe4:	ldr	r3, [r4]
   1efe8:	cmp	r2, r3
   1efec:	bne	1eff8 <getDataString@@Base+0x7c>
   1eff0:	add	sp, sp, #28
   1eff4:	pop	{r4, r5, r6, r7, pc}
   1eff8:	bl	14a60 <__stack_chk_fail@plt>
   1effc:	andeq	r5, r1, r4, rrx
   1f000:	andeq	r0, r0, ip, lsr #4

0001f004 <getDotOperand@@Base>:
   1f004:	ldr	r3, [pc, #160]	; 1f0ac <getDotOperand@@Base+0xa8>
   1f008:	ldr	ip, [pc, #160]	; 1f0b0 <getDotOperand@@Base+0xac>
   1f00c:	add	r3, pc, r3
   1f010:	ldr	r2, [pc, #156]	; 1f0b4 <getDotOperand@@Base+0xb0>
   1f014:	push	{r4, r5, r6, r7, r8, lr}
   1f018:	sub	sp, sp, #16
   1f01c:	ldr	r5, [r3, ip]
   1f020:	mov	r6, r1
   1f024:	add	r2, pc, r2
   1f028:	add	r1, sp, #4
   1f02c:	mov	r7, r0
   1f030:	ldr	r3, [r5]
   1f034:	str	r3, [sp, #12]
   1f038:	bl	1e8c0 <getDataOperand@@Base>
   1f03c:	subs	r4, r0, #0
   1f040:	bne	1f060 <getDotOperand@@Base+0x5c>
   1f044:	ldr	r2, [sp, #12]
   1f048:	mov	r0, r4
   1f04c:	ldr	r3, [r5]
   1f050:	cmp	r2, r3
   1f054:	bne	1f0a8 <getDotOperand@@Base+0xa4>
   1f058:	add	sp, sp, #16
   1f05c:	pop	{r4, r5, r6, r7, r8, pc}
   1f060:	ldr	r4, [sp, #8]
   1f064:	ldr	r8, [sp, #4]
   1f068:	cmp	r4, #1
   1f06c:	beq	1f090 <getDotOperand@@Base+0x8c>
   1f070:	ldr	r1, [pc, #64]	; 1f0b8 <getDotOperand@@Base+0xb4>
   1f074:	mov	r2, r4
   1f078:	mov	r0, r7
   1f07c:	mov	r3, r8
   1f080:	add	r1, pc, r1
   1f084:	mov	r4, #0
   1f088:	bl	1e370 <reportDataError@@Base>
   1f08c:	b	1f044 <getDotOperand@@Base+0x40>
   1f090:	mov	r1, r6
   1f094:	ldr	r0, [r8]
   1f098:	bl	1e2e4 <brlDotNumberToIndex@@Base>
   1f09c:	cmp	r0, #0
   1f0a0:	beq	1f070 <getDotOperand@@Base+0x6c>
   1f0a4:	b	1f044 <getDotOperand@@Base+0x40>
   1f0a8:	bl	14a60 <__stack_chk_fail@plt>
   1f0ac:	andeq	r4, r1, ip, ror #31
   1f0b0:	andeq	r0, r0, ip, lsr #4
   1f0b4:	andeq	r3, r0, r8, asr #11
   1f0b8:	andeq	r3, r0, r8, ror r5

0001f0bc <processAssignOperands@@Base>:
   1f0bc:	ldr	r3, [pc, #200]	; 1f18c <processAssignOperands@@Base+0xd0>
   1f0c0:	ldr	ip, [pc, #200]	; 1f190 <processAssignOperands@@Base+0xd4>
   1f0c4:	add	r3, pc, r3
   1f0c8:	ldr	r2, [pc, #196]	; 1f194 <processAssignOperands@@Base+0xd8>
   1f0cc:	push	{r4, r5, r6, lr}
   1f0d0:	sub	sp, sp, #24
   1f0d4:	ldr	r4, [r3, ip]
   1f0d8:	add	r5, sp, #4
   1f0dc:	add	r2, pc, r2
   1f0e0:	mov	r6, r0
   1f0e4:	mov	r1, r5
   1f0e8:	ldr	r3, [r4]
   1f0ec:	str	r3, [sp, #20]
   1f0f0:	bl	1e8c0 <getDataOperand@@Base>
   1f0f4:	cmp	r0, #0
   1f0f8:	bne	1f118 <processAssignOperands@@Base+0x5c>
   1f0fc:	ldr	r2, [sp, #20]
   1f100:	mov	r0, #1
   1f104:	ldr	r3, [r4]
   1f108:	cmp	r2, r3
   1f10c:	bne	1f188 <processAssignOperands@@Base+0xcc>
   1f110:	add	sp, sp, #24
   1f114:	pop	{r4, r5, r6, pc}
   1f118:	mov	r0, r6
   1f11c:	add	r1, sp, #12
   1f120:	mov	r2, #0
   1f124:	bl	1e8c0 <getDataOperand@@Base>
   1f128:	ldr	r6, [r6, #16]
   1f12c:	ldr	r1, [pc, #100]	; 1f198 <processAssignOperands@@Base+0xdc>
   1f130:	mov	r2, r5
   1f134:	add	r1, pc, r1
   1f138:	cmp	r0, #0
   1f13c:	streq	r0, [sp, #12]
   1f140:	streq	r0, [sp, #16]
   1f144:	mov	r0, r6
   1f148:	bl	1faa8 <findItem@@Base>
   1f14c:	cmp	r0, #0
   1f150:	movne	r1, r0
   1f154:	beq	1f170 <processAssignOperands@@Base+0xb4>
   1f158:	add	r0, r1, #8
   1f15c:	ldr	r2, [sp, #12]
   1f160:	add	r1, r1, #12
   1f164:	ldr	r3, [sp, #16]
   1f168:	bl	1e220 <isOctalDigit@@Base+0x13c>
   1f16c:	b	1f0fc <processAssignOperands@@Base+0x40>
   1f170:	mov	r1, r5
   1f174:	mov	r0, r6
   1f178:	bl	1e16c <isOctalDigit@@Base+0x88>
   1f17c:	subs	r1, r0, #0
   1f180:	beq	1f0fc <processAssignOperands@@Base+0x40>
   1f184:	b	1f158 <processAssignOperands@@Base+0x9c>
   1f188:	bl	14a60 <__stack_chk_fail@plt>
   1f18c:	andeq	r4, r1, r4, lsr pc
   1f190:	andeq	r0, r0, ip, lsr #4
   1f194:	andeq	r3, r0, r0, asr #10
   1f198:			; <UNDEFINED> instruction: 0xffffeffc

0001f19c <processPropertyOperand@@Base>:
   1f19c:	ldr	ip, [pc, #220]	; 1f280 <processPropertyOperand@@Base+0xe4>
   1f1a0:	push	{r4, r5, r6, r7, r8, lr}
   1f1a4:	add	ip, pc, ip
   1f1a8:	ldr	lr, [pc, #212]	; 1f284 <processPropertyOperand@@Base+0xe8>
   1f1ac:	mov	r7, r3
   1f1b0:	sub	sp, sp, #24
   1f1b4:	mov	r4, r1
   1f1b8:	add	r1, sp, #12
   1f1bc:	mov	r6, r0
   1f1c0:	ldr	r5, [ip, lr]
   1f1c4:	mov	r8, r2
   1f1c8:	ldr	r3, [r5]
   1f1cc:	str	r3, [sp, #20]
   1f1d0:	bl	1e8c0 <getDataOperand@@Base>
   1f1d4:	cmp	r0, #0
   1f1d8:	moveq	r0, #1
   1f1dc:	beq	1f220 <processPropertyOperand@@Base+0x84>
   1f1e0:	ldr	r0, [r4]
   1f1e4:	cmp	r0, #0
   1f1e8:	bne	1f1fc <processPropertyOperand@@Base+0x60>
   1f1ec:	b	1f238 <processPropertyOperand@@Base+0x9c>
   1f1f0:	ldr	r0, [r4, #8]!
   1f1f4:	cmp	r0, #0
   1f1f8:	beq	1f238 <processPropertyOperand@@Base+0x9c>
   1f1fc:	ldr	r1, [sp, #12]
   1f200:	ldr	r2, [sp, #16]
   1f204:	bl	1e41c <isKeyword@@Base>
   1f208:	cmp	r0, #0
   1f20c:	beq	1f1f0 <processPropertyOperand@@Base+0x54>
   1f210:	ldr	r3, [r4, #4]
   1f214:	mov	r0, r6
   1f218:	mov	r1, r7
   1f21c:	blx	r3
   1f220:	ldr	r2, [sp, #20]
   1f224:	ldr	r3, [r5]
   1f228:	cmp	r2, r3
   1f22c:	bne	1f27c <processPropertyOperand@@Base+0xe0>
   1f230:	add	sp, sp, #24
   1f234:	pop	{r4, r5, r6, r7, r8, pc}
   1f238:	ldr	r3, [r4, #4]
   1f23c:	cmp	r3, #0
   1f240:	beq	1f254 <processPropertyOperand@@Base+0xb8>
   1f244:	mov	r0, r6
   1f248:	ldr	r1, [sp, #16]
   1f24c:	bl	1e874 <ungetDataCharacters@@Base>
   1f250:	b	1f210 <processPropertyOperand@@Base+0x74>
   1f254:	ldr	ip, [sp, #12]
   1f258:	mov	r0, r6
   1f25c:	ldr	r1, [pc, #36]	; 1f288 <processPropertyOperand@@Base+0xec>
   1f260:	mov	r2, r8
   1f264:	ldr	r3, [sp, #16]
   1f268:	add	r1, pc, r1
   1f26c:	str	ip, [sp]
   1f270:	bl	1e370 <reportDataError@@Base>
   1f274:	mov	r0, #1
   1f278:	b	1f220 <processPropertyOperand@@Base+0x84>
   1f27c:	bl	14a60 <__stack_chk_fail@plt>
   1f280:	andeq	r4, r1, r4, asr lr
   1f284:	andeq	r0, r0, ip, lsr #4
   1f288:	andeq	r3, r0, r4, asr #7

0001f28c <processDataStream@@Base>:
   1f28c:	ldr	ip, [pc, #204]	; 1f360 <processDataStream@@Base+0xd4>
   1f290:	push	{r4, r5, r6, r7, lr}
   1f294:	add	ip, pc, ip
   1f298:	ldr	lr, [pc, #196]	; 1f364 <processDataStream@@Base+0xd8>
   1f29c:	sub	sp, sp, #36	; 0x24
   1f2a0:	subs	r6, r0, #0
   1f2a4:	mov	r7, r1
   1f2a8:	ldr	r5, [sp, #56]	; 0x38
   1f2ac:	mov	r1, #0
   1f2b0:	ldr	r4, [ip, lr]
   1f2b4:	str	r3, [sp, #8]
   1f2b8:	str	r2, [sp]
   1f2bc:	ldr	r3, [r4]
   1f2c0:	str	r5, [sp, #12]
   1f2c4:	str	r1, [sp, #4]
   1f2c8:	str	r3, [sp, #28]
   1f2cc:	beq	1f344 <processDataStream@@Base+0xb8>
   1f2d0:	ldr	r1, [pc, #144]	; 1f368 <processDataStream@@Base+0xdc>
   1f2d4:	mov	r0, #7
   1f2d8:	add	r1, pc, r1
   1f2dc:	bl	17b84 <logMessage@@Base>
   1f2e0:	ldr	r0, [pc, #132]	; 1f36c <processDataStream@@Base+0xe0>
   1f2e4:	mov	r1, #0
   1f2e8:	add	r0, pc, r0
   1f2ec:	bl	1f7e0 <newQueue@@Base>
   1f2f0:	subs	r5, r0, #0
   1f2f4:	beq	1f354 <processDataStream@@Base+0xc8>
   1f2f8:	mov	r1, r6
   1f2fc:	bl	1f888 <setQueueData@@Base>
   1f300:	ldr	r1, [pc, #104]	; 1f370 <processDataStream@@Base+0xe4>
   1f304:	mov	r0, r7
   1f308:	mov	r2, sp
   1f30c:	add	r1, pc, r1
   1f310:	str	r5, [sp, #16]
   1f314:	bl	189ec <processLines@@Base>
   1f318:	adds	r5, r0, #0
   1f31c:	ldr	r0, [sp, #16]
   1f320:	movne	r5, #1
   1f324:	bl	1f858 <deallocateQueue@@Base>
   1f328:	ldr	r2, [sp, #28]
   1f32c:	mov	r0, r5
   1f330:	ldr	r3, [r4]
   1f334:	cmp	r2, r3
   1f338:	bne	1f35c <processDataStream@@Base+0xd0>
   1f33c:	add	sp, sp, #36	; 0x24
   1f340:	pop	{r4, r5, r6, r7, pc}
   1f344:	bl	1e288 <isOctalDigit@@Base+0x1a4>
   1f348:	subs	r6, r0, #0
   1f34c:	ldrne	r2, [sp]
   1f350:	bne	1f2d0 <processDataStream@@Base+0x44>
   1f354:	mov	r5, #0
   1f358:	b	1f328 <processDataStream@@Base+0x9c>
   1f35c:	bl	14a60 <__stack_chk_fail@plt>
   1f360:	andeq	r4, r1, r4, ror #26
   1f364:	andeq	r0, r0, ip, lsr #4
   1f368:	andeq	r3, r0, r8, ror #6
   1f36c:			; <UNDEFINED> instruction: 0xffffee14
   1f370:			; <UNDEFINED> instruction: 0xfffff440

0001f374 <includeDataFile@@Base>:
   1f374:	ldr	r3, [pc, #320]	; 1f4bc <includeDataFile@@Base+0x148>
   1f378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f37c:	add	fp, sp, #32
   1f380:	ldr	ip, [pc, #312]	; 1f4c0 <includeDataFile@@Base+0x14c>
   1f384:	sub	sp, sp, #36	; 0x24
   1f388:	add	r3, pc, r3
   1f38c:	mov	r4, r0
   1f390:	mov	r0, r1
   1f394:	ldr	r7, [r3, ip]
   1f398:	mov	r1, r2
   1f39c:	sub	r2, fp, #44	; 0x2c
   1f3a0:	ldr	r9, [r4]
   1f3a4:	ldr	r3, [r7]
   1f3a8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f3ac:	bl	1d954 <makeUtf8FromWchars@@Base>
   1f3b0:	subs	r8, r0, #0
   1f3b4:	beq	1f4ac <includeDataFile@@Base+0x138>
   1f3b8:	bl	17d88 <isAbsolutePath@@Base>
   1f3bc:	subs	r5, r0, #0
   1f3c0:	movne	r5, #0
   1f3c4:	movne	lr, r5
   1f3c8:	beq	1f48c <includeDataFile@@Base+0x118>
   1f3cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f3d0:	mov	r2, #1
   1f3d4:	mov	sl, sp
   1f3d8:	ldr	ip, [pc, #228]	; 1f4c4 <includeDataFile@@Base+0x150>
   1f3dc:	add	r1, r0, r2
   1f3e0:	mvn	r3, #0
   1f3e4:	add	r1, r1, lr
   1f3e8:	add	ip, pc, ip
   1f3ec:	add	lr, r1, #7
   1f3f0:	bic	lr, lr, #7
   1f3f4:	sub	sp, sp, lr
   1f3f8:	add	r6, sp, #24
   1f3fc:	str	r0, [sp, #12]
   1f400:	str	r5, [sp, #4]
   1f404:	mov	r0, r6
   1f408:	str	ip, [sp]
   1f40c:	str	r9, [sp, #8]
   1f410:	str	r8, [sp, #16]
   1f414:	bl	14b8c <__snprintf_chk@plt>
   1f418:	ldr	r1, [pc, #168]	; 1f4c8 <includeDataFile@@Base+0x154>
   1f41c:	mov	r0, r6
   1f420:	mov	r2, #0
   1f424:	add	r1, pc, r1
   1f428:	bl	18710 <openDataFile@@Base>
   1f42c:	subs	r5, r0, #0
   1f430:	moveq	r4, r5
   1f434:	beq	1f464 <includeDataFile@@Base+0xf0>
   1f438:	ldr	ip, [r4, #12]
   1f43c:	mov	r2, r6
   1f440:	ldr	r0, [r4, #16]
   1f444:	mov	r1, r5
   1f448:	ldr	r3, [r4, #8]
   1f44c:	str	ip, [sp]
   1f450:	bl	1f28c <processDataStream@@Base>
   1f454:	adds	r4, r0, #0
   1f458:	mov	r0, r5
   1f45c:	movne	r4, #1
   1f460:	bl	14bbc <fclose@plt>
   1f464:	mov	r0, r8
   1f468:	mov	sp, sl
   1f46c:	bl	147fc <free@plt>
   1f470:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f474:	mov	r0, r4
   1f478:	ldr	r3, [r7]
   1f47c:	cmp	r2, r3
   1f480:	bne	1f4b8 <includeDataFile@@Base+0x144>
   1f484:	sub	sp, fp, #32
   1f488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f48c:	mov	r0, r9
   1f490:	mov	r1, #47	; 0x2f
   1f494:	bl	14cb8 <strrchr@plt>
   1f498:	cmp	r0, #0
   1f49c:	rsbne	r5, r9, r0
   1f4a0:	addne	r5, r5, #1
   1f4a4:	mov	lr, r5
   1f4a8:	b	1f3cc <includeDataFile@@Base+0x58>
   1f4ac:	bl	17c90 <logMallocError@@Base>
   1f4b0:	mov	r4, r8
   1f4b4:	b	1f470 <includeDataFile@@Base+0xfc>
   1f4b8:	bl	14a60 <__stack_chk_fail@plt>
   1f4bc:	andeq	r4, r1, r0, ror ip
   1f4c0:	andeq	r0, r0, ip, lsr #4
   1f4c4:	andeq	r3, r0, r0, ror r2
   1f4c8:	muleq	r0, r4, pc	; <UNPREDICTABLE>

0001f4cc <processIncludeOperands@@Base>:
   1f4cc:	ldr	ip, [pc, #124]	; 1f550 <processIncludeOperands@@Base+0x84>
   1f4d0:	mov	r2, #0
   1f4d4:	push	{r4, r5, r6, lr}
   1f4d8:	add	ip, pc, ip
   1f4dc:	ldr	lr, [pc, #112]	; 1f554 <processIncludeOperands@@Base+0x88>
   1f4e0:	sub	sp, sp, #1024	; 0x400
   1f4e4:	ldr	r3, [pc, #108]	; 1f558 <processIncludeOperands@@Base+0x8c>
   1f4e8:	sub	sp, sp, #8
   1f4ec:	add	r1, sp, #4
   1f4f0:	mov	r6, r0
   1f4f4:	ldr	r4, [ip, lr]
   1f4f8:	add	r3, pc, r3
   1f4fc:	add	r5, sp, #8
   1f500:	ldr	ip, [r4]
   1f504:	str	ip, [sp, #1028]	; 0x404
   1f508:	bl	1ef7c <getDataString@@Base>
   1f50c:	cmp	r0, #0
   1f510:	moveq	r0, #1
   1f514:	beq	1f530 <processIncludeOperands@@Base+0x64>
   1f518:	mov	r0, r6
   1f51c:	mov	r1, r5
   1f520:	ldrb	r2, [sp, #4]
   1f524:	bl	1f374 <includeDataFile@@Base>
   1f528:	adds	r0, r0, #0
   1f52c:	movne	r0, #1
   1f530:	ldr	r2, [sp, #1028]	; 0x404
   1f534:	ldr	r3, [r4]
   1f538:	cmp	r2, r3
   1f53c:	bne	1f54c <processIncludeOperands@@Base+0x80>
   1f540:	add	sp, sp, #1024	; 0x400
   1f544:	add	sp, sp, #8
   1f548:	pop	{r4, r5, r6, pc}
   1f54c:	bl	14a60 <__stack_chk_fail@plt>
   1f550:	andeq	r4, r1, r0, lsr #22
   1f554:	andeq	r0, r0, ip, lsr #4
   1f558:	andeq	r3, r0, ip, ror #2

0001f55c <processDataFile@@Base>:
   1f55c:	push	{r4, r5, r6, r7, lr}
   1f560:	mov	r7, r1
   1f564:	ldr	r1, [pc, #84]	; 1f5c0 <processDataFile@@Base+0x64>
   1f568:	sub	sp, sp, #12
   1f56c:	mov	r6, r2
   1f570:	mov	r2, #0
   1f574:	add	r1, pc, r1
   1f578:	mov	r5, r0
   1f57c:	bl	18710 <openDataFile@@Base>
   1f580:	subs	r4, r0, #0
   1f584:	moveq	r5, r4
   1f588:	beq	1f5b4 <processDataFile@@Base+0x58>
   1f58c:	mov	r2, r5
   1f590:	str	r6, [sp]
   1f594:	mov	r3, r7
   1f598:	mov	r0, #0
   1f59c:	mov	r1, r4
   1f5a0:	bl	1f28c <processDataStream@@Base>
   1f5a4:	adds	r5, r0, #0
   1f5a8:	mov	r0, r4
   1f5ac:	movne	r5, #1
   1f5b0:	bl	14bbc <fclose@plt>
   1f5b4:	mov	r0, r5
   1f5b8:	add	sp, sp, #12
   1f5bc:	pop	{r4, r5, r6, r7, pc}
   1f5c0:	andeq	r2, r0, r4, asr #28

0001f5c4 <newLockDescriptor@@Base>:
   1f5c4:	push	{r4, lr}
   1f5c8:	mov	r0, #32
   1f5cc:	bl	14b74 <malloc@plt>
   1f5d0:	subs	r4, r0, #0
   1f5d4:	beq	1f5f4 <newLockDescriptor@@Base+0x30>
   1f5d8:	mov	r1, #0
   1f5dc:	bl	14c1c <pthread_rwlock_init@plt>
   1f5e0:	cmp	r0, #0
   1f5e4:	mov	r0, r4
   1f5e8:	bne	1f5f0 <newLockDescriptor@@Base+0x2c>
   1f5ec:	pop	{r4, pc}
   1f5f0:	bl	147fc <free@plt>
   1f5f4:	mov	r0, #0
   1f5f8:	pop	{r4, pc}

0001f5fc <freeLockDescriptor@@Base>:
   1f5fc:	push	{r4, lr}
   1f600:	mov	r4, r0
   1f604:	bl	147c0 <pthread_rwlock_destroy@plt>
   1f608:	mov	r0, r4
   1f60c:	pop	{r4, lr}
   1f610:	b	147fc <free@plt>

0001f614 <obtainLock@@Base>:
   1f614:	tst	r1, #1
   1f618:	push	{r3, lr}
   1f61c:	beq	1f638 <obtainLock@@Base+0x24>
   1f620:	tst	r1, #2
   1f624:	beq	1f64c <obtainLock@@Base+0x38>
   1f628:	bl	14bf8 <pthread_rwlock_trywrlock@plt>
   1f62c:	rsbs	r0, r0, #1
   1f630:	movcc	r0, #0
   1f634:	pop	{r3, pc}
   1f638:	tst	r1, #2
   1f63c:	bne	1f658 <obtainLock@@Base+0x44>
   1f640:	bl	14904 <pthread_rwlock_rdlock@plt>
   1f644:	mov	r0, #1
   1f648:	pop	{r3, pc}
   1f64c:	bl	14a54 <pthread_rwlock_wrlock@plt>
   1f650:	mov	r0, #1
   1f654:	pop	{r3, pc}
   1f658:	bl	14a6c <pthread_rwlock_tryrdlock@plt>
   1f65c:	rsbs	r0, r0, #1
   1f660:	movcc	r0, #0
   1f664:	pop	{r3, pc}

0001f668 <releaseLock@@Base>:
   1f668:	b	14a3c <pthread_rwlock_unlock@plt>

0001f66c <getLockDescriptor@@Base>:
   1f66c:	push	{r4, lr}
   1f670:	mov	r4, r0
   1f674:	ldr	r0, [r0]
   1f678:	cmp	r0, #0
   1f67c:	popne	{r4, pc}
   1f680:	ldr	r0, [pc, #48]	; 1f6b8 <getLockDescriptor@@Base+0x4c>
   1f684:	add	r0, pc, r0
   1f688:	bl	14754 <pthread_mutex_lock@plt>
   1f68c:	ldr	r3, [r4]
   1f690:	cmp	r3, #0
   1f694:	beq	1f6ac <getLockDescriptor@@Base+0x40>
   1f698:	ldr	r0, [pc, #28]	; 1f6bc <getLockDescriptor@@Base+0x50>
   1f69c:	add	r0, pc, r0
   1f6a0:	bl	14d48 <pthread_mutex_unlock@plt>
   1f6a4:	ldr	r0, [r4]
   1f6a8:	pop	{r4, pc}
   1f6ac:	bl	1f5c4 <newLockDescriptor@@Base>
   1f6b0:	str	r0, [r4]
   1f6b4:	b	1f698 <getLockDescriptor@@Base+0x2c>
   1f6b8:	strdeq	r4, [r1], -r8
   1f6bc:	andeq	r4, r1, r0, ror #25
   1f6c0:	mov	r2, r1
   1f6c4:	mov	r1, r0
   1f6c8:	push	{r3, lr}
   1f6cc:	ldr	r3, [r2]
   1f6d0:	ldr	r0, [r2, #4]
   1f6d4:	ldr	ip, [r3, #16]
   1f6d8:	ldr	r2, [r3, #8]
   1f6dc:	blx	ip
   1f6e0:	pop	{r3, pc}
   1f6e4:	subs	r3, r1, r0
   1f6e8:	rsbs	r0, r3, #0
   1f6ec:	adcs	r0, r0, r3
   1f6f0:	bx	lr

0001f6f4 <deleteElement@@Base>:
   1f6f4:	push	{r3, r4, r5, lr}
   1f6f8:	mov	r4, r0
   1f6fc:	ldr	r3, [r0]
   1f700:	ldr	r2, [r0, #8]
   1f704:	cmp	r0, r3
   1f708:	moveq	r3, #0
   1f70c:	streq	r3, [r2]
   1f710:	beq	1f734 <deleteElement@@Base+0x40>
   1f714:	ldr	r1, [r2]
   1f718:	cmp	r0, r1
   1f71c:	streq	r3, [r2]
   1f720:	ldr	r2, [r0, #4]
   1f724:	ldreq	r3, [r0]
   1f728:	str	r2, [r3, #4]
   1f72c:	ldm	r0, {r2, r3}
   1f730:	str	r2, [r3]
   1f734:	ldr	r0, [r4, #12]
   1f738:	mov	r3, #0
   1f73c:	ldr	r5, [r4, #8]
   1f740:	cmp	r0, r3
   1f744:	str	r3, [r4]
   1f748:	str	r3, [r4, #4]
   1f74c:	beq	1f76c <deleteElement@@Base+0x78>
   1f750:	ldr	r3, [r5, #12]
   1f754:	cmp	r3, #0
   1f758:	beq	1f764 <deleteElement@@Base+0x70>
   1f75c:	ldr	r1, [r5, #8]
   1f760:	blx	r3
   1f764:	mov	r3, #0
   1f768:	str	r3, [r4, #12]
   1f76c:	ldr	r3, [pc, #36]	; 1f798 <deleteElement@@Base+0xa4>
   1f770:	mov	r2, #0
   1f774:	str	r2, [r4, #8]
   1f778:	add	r3, pc, r3
   1f77c:	ldr	r1, [r5, #4]
   1f780:	ldr	r2, [r3]
   1f784:	sub	r1, r1, #1
   1f788:	str	r4, [r3]
   1f78c:	str	r1, [r5, #4]
   1f790:	str	r2, [r4]
   1f794:	pop	{r3, r4, r5, pc}
   1f798:	andeq	r4, r1, ip, lsl ip

0001f79c <dequeueItem@@Base>:
   1f79c:	push	{r4, lr}
   1f7a0:	ldr	r3, [r0]
   1f7a4:	cmp	r3, #0
   1f7a8:	beq	1f7c8 <dequeueItem@@Base+0x2c>
   1f7ac:	ldr	r4, [r3, #12]
   1f7b0:	mov	r2, #0
   1f7b4:	mov	r0, r3
   1f7b8:	str	r2, [r3, #12]
   1f7bc:	bl	1f6f4 <deleteElement@@Base>
   1f7c0:	mov	r0, r4
   1f7c4:	pop	{r4, pc}
   1f7c8:	mov	r0, r3
   1f7cc:	pop	{r4, pc}

0001f7d0 <getElementQueue@@Base>:
   1f7d0:	ldr	r0, [r0, #8]
   1f7d4:	bx	lr

0001f7d8 <getElementItem@@Base>:
   1f7d8:	ldr	r0, [r0, #12]
   1f7dc:	bx	lr

0001f7e0 <newQueue@@Base>:
   1f7e0:	push	{r4, r5, lr}
   1f7e4:	mov	r4, r0
   1f7e8:	sub	sp, sp, #12
   1f7ec:	mov	r0, #20
   1f7f0:	mov	r5, r1
   1f7f4:	bl	14b74 <malloc@plt>
   1f7f8:	cmp	r0, #0
   1f7fc:	beq	1f820 <newQueue@@Base+0x40>
   1f800:	mov	r3, #0
   1f804:	str	r4, [r0, #12]
   1f808:	str	r5, [r0, #16]
   1f80c:	str	r3, [r0]
   1f810:	str	r3, [r0, #4]
   1f814:	str	r3, [r0, #8]
   1f818:	add	sp, sp, #12
   1f81c:	pop	{r4, r5, pc}
   1f820:	str	r0, [sp, #4]
   1f824:	bl	17c90 <logMallocError@@Base>
   1f828:	ldr	r0, [sp, #4]
   1f82c:	b	1f818 <newQueue@@Base+0x38>

0001f830 <deleteElements@@Base>:
   1f830:	push	{r4, lr}
   1f834:	mov	r4, r0
   1f838:	ldr	r0, [r0]
   1f83c:	cmp	r0, #0
   1f840:	popeq	{r4, pc}
   1f844:	bl	1f6f4 <deleteElement@@Base>
   1f848:	ldr	r0, [r4]
   1f84c:	cmp	r0, #0
   1f850:	bne	1f844 <deleteElements@@Base+0x14>
   1f854:	pop	{r4, pc}

0001f858 <deallocateQueue@@Base>:
   1f858:	push	{r4, lr}
   1f85c:	mov	r4, r0
   1f860:	bl	1f830 <deleteElements@@Base>
   1f864:	mov	r0, r4
   1f868:	pop	{r4, lr}
   1f86c:	b	147fc <free@plt>

0001f870 <getQueueHead@@Base>:
   1f870:	ldr	r0, [r0]
   1f874:	bx	lr

0001f878 <getQueueSize@@Base>:
   1f878:	ldr	r0, [r0, #4]
   1f87c:	bx	lr

0001f880 <getQueueData@@Base>:
   1f880:	ldr	r0, [r0, #8]
   1f884:	bx	lr

0001f888 <setQueueData@@Base>:
   1f888:	mov	r3, r0
   1f88c:	ldr	r0, [r0, #8]
   1f890:	str	r1, [r3, #8]
   1f894:	bx	lr

0001f898 <findElement@@Base>:
   1f898:	push	{r3, r4, r5, r6, r7, lr}
   1f89c:	mov	r5, r0
   1f8a0:	ldr	r4, [r0]
   1f8a4:	mov	r7, r1
   1f8a8:	mov	r6, r2
   1f8ac:	cmp	r4, #0
   1f8b0:	bne	1f8c8 <findElement@@Base+0x30>
   1f8b4:	b	1f8e4 <findElement@@Base+0x4c>
   1f8b8:	ldr	r4, [r4]
   1f8bc:	ldr	r3, [r5]
   1f8c0:	cmp	r4, r3
   1f8c4:	beq	1f8e4 <findElement@@Base+0x4c>
   1f8c8:	ldr	r0, [r4, #12]
   1f8cc:	mov	r1, r6
   1f8d0:	blx	r7
   1f8d4:	cmp	r0, #0
   1f8d8:	beq	1f8b8 <findElement@@Base+0x20>
   1f8dc:	mov	r0, r4
   1f8e0:	pop	{r3, r4, r5, r6, r7, pc}
   1f8e4:	mov	r0, #0
   1f8e8:	pop	{r3, r4, r5, r6, r7, pc}
   1f8ec:	ldr	r3, [pc, #208]	; 1f9c4 <findElement@@Base+0x12c>
   1f8f0:	ldr	r2, [pc, #208]	; 1f9c8 <findElement@@Base+0x130>
   1f8f4:	add	r3, pc, r3
   1f8f8:	push	{r4, r5, r6, lr}
   1f8fc:	sub	sp, sp, #16
   1f900:	ldr	r5, [r0, #8]
   1f904:	mov	r4, r0
   1f908:	ldr	r6, [r3, r2]
   1f90c:	ldr	r3, [r5]
   1f910:	ldr	r2, [r6]
   1f914:	cmp	r3, #0
   1f918:	str	r2, [sp, #12]
   1f91c:	beq	1f9b4 <findElement@@Base+0x11c>
   1f920:	ldr	r2, [r5, #16]
   1f924:	cmp	r2, #0
   1f928:	beq	1f998 <findElement@@Base+0x100>
   1f92c:	ldr	r3, [r0, #12]
   1f930:	add	r2, sp, #4
   1f934:	ldr	r1, [pc, #144]	; 1f9cc <findElement@@Base+0x134>
   1f938:	mov	r0, r5
   1f93c:	str	r5, [sp, #4]
   1f940:	add	r1, pc, r1
   1f944:	str	r3, [sp, #8]
   1f948:	bl	1f898 <findElement@@Base>
   1f94c:	cmp	r0, #0
   1f950:	ldreq	r3, [r5]
   1f954:	beq	1f998 <findElement@@Base+0x100>
   1f958:	ldr	r2, [r5]
   1f95c:	str	r0, [r4]
   1f960:	ldr	r3, [r0, #4]
   1f964:	cmp	r0, r2
   1f968:	str	r3, [r4, #4]
   1f96c:	str	r4, [r0, #4]
   1f970:	ldr	r3, [r4, #4]
   1f974:	str	r4, [r3]
   1f978:	bne	1f980 <findElement@@Base+0xe8>
   1f97c:	str	r4, [r5]
   1f980:	ldr	r2, [sp, #12]
   1f984:	ldr	r3, [r6]
   1f988:	cmp	r2, r3
   1f98c:	bne	1f9c0 <findElement@@Base+0x128>
   1f990:	add	sp, sp, #16
   1f994:	pop	{r4, r5, r6, pc}
   1f998:	str	r3, [r4]
   1f99c:	ldr	r2, [r3, #4]
   1f9a0:	str	r2, [r4, #4]
   1f9a4:	str	r4, [r3, #4]
   1f9a8:	ldr	r3, [r4, #4]
   1f9ac:	str	r4, [r3]
   1f9b0:	b	1f980 <findElement@@Base+0xe8>
   1f9b4:	str	r0, [r4]
   1f9b8:	str	r0, [r4, #4]
   1f9bc:	b	1f97c <findElement@@Base+0xe4>
   1f9c0:	bl	14a60 <__stack_chk_fail@plt>
   1f9c4:	andeq	r4, r1, r4, lsl #14
   1f9c8:	andeq	r0, r0, ip, lsr #4
   1f9cc:			; <UNDEFINED> instruction: 0xfffffd78

0001f9d0 <enqueueItem@@Base>:
   1f9d0:	ldr	r3, [pc, #124]	; 1fa54 <enqueueItem@@Base+0x84>
   1f9d4:	push	{r4, r5, lr}
   1f9d8:	add	r3, pc, r3
   1f9dc:	sub	sp, sp, #12
   1f9e0:	mov	r5, r0
   1f9e4:	ldr	r4, [r3]
   1f9e8:	cmp	r4, #0
   1f9ec:	beq	1fa28 <enqueueItem@@Base+0x58>
   1f9f0:	ldr	r2, [r4]
   1f9f4:	mov	r0, #0
   1f9f8:	str	r0, [r4]
   1f9fc:	str	r2, [r3]
   1fa00:	str	r5, [r4, #8]
   1fa04:	mov	r0, r4
   1fa08:	ldr	r3, [r5, #4]
   1fa0c:	add	r3, r3, #1
   1fa10:	str	r3, [r5, #4]
   1fa14:	str	r1, [r4, #12]
   1fa18:	bl	1f8ec <findElement@@Base+0x54>
   1fa1c:	mov	r0, r4
   1fa20:	add	sp, sp, #12
   1fa24:	pop	{r4, r5, pc}
   1fa28:	mov	r0, #16
   1fa2c:	str	r1, [sp, #4]
   1fa30:	bl	14b74 <malloc@plt>
   1fa34:	ldr	r1, [sp, #4]
   1fa38:	subs	r4, r0, #0
   1fa3c:	movne	r3, #0
   1fa40:	strne	r3, [r4]
   1fa44:	strne	r3, [r4, #4]
   1fa48:	bne	1fa00 <enqueueItem@@Base+0x30>
   1fa4c:	bl	17c90 <logMallocError@@Base>
   1fa50:	b	1fa1c <enqueueItem@@Base+0x4c>
   1fa54:			; <UNDEFINED> instruction: 0x000149bc

0001fa58 <requeueElement@@Base>:
   1fa58:	ldr	r2, [r0]
   1fa5c:	mov	r3, r0
   1fa60:	ldr	r1, [r0, #8]
   1fa64:	cmp	r0, r2
   1fa68:	moveq	r2, #0
   1fa6c:	streq	r2, [r1]
   1fa70:	beq	1fa94 <requeueElement@@Base+0x3c>
   1fa74:	ldr	r0, [r1]
   1fa78:	cmp	r3, r0
   1fa7c:	streq	r2, [r1]
   1fa80:	ldr	r1, [r3, #4]
   1fa84:	ldreq	r2, [r3]
   1fa88:	str	r1, [r2, #4]
   1fa8c:	ldm	r3, {r1, r2}
   1fa90:	str	r1, [r2]
   1fa94:	mov	r2, #0
   1fa98:	mov	r0, r3
   1fa9c:	str	r2, [r3]
   1faa0:	str	r2, [r3, #4]
   1faa4:	b	1f8ec <findElement@@Base+0x54>

0001faa8 <findItem@@Base>:
   1faa8:	push	{r3, lr}
   1faac:	bl	1f898 <findElement@@Base>
   1fab0:	cmp	r0, #0
   1fab4:	ldrne	r0, [r0, #12]
   1fab8:	pop	{r3, pc}

0001fabc <processQueue@@Base>:
   1fabc:	push	{r4, r5, r6, r7, r8, lr}
   1fac0:	mov	r6, r0
   1fac4:	ldr	r5, [r0]
   1fac8:	mov	r7, r1
   1facc:	mov	r8, r2
   1fad0:	cmp	r5, #0
   1fad4:	movne	r3, r5
   1fad8:	bne	1fb00 <processQueue@@Base+0x44>
   1fadc:	b	1fb24 <processQueue@@Base+0x68>
   1fae0:	ldr	r0, [r5, #12]
   1fae4:	blx	r7
   1fae8:	cmp	r0, #0
   1faec:	bne	1fb2c <processQueue@@Base+0x70>
   1faf0:	cmp	r4, #0
   1faf4:	mov	r5, r4
   1faf8:	beq	1fb24 <processQueue@@Base+0x68>
   1fafc:	ldr	r3, [r6]
   1fb00:	ldr	r4, [r5]
   1fb04:	mov	r1, r8
   1fb08:	cmp	r3, r4
   1fb0c:	bne	1fae0 <processQueue@@Base+0x24>
   1fb10:	mov	r1, r8
   1fb14:	ldr	r0, [r5, #12]
   1fb18:	blx	r7
   1fb1c:	cmp	r0, #0
   1fb20:	bne	1fb2c <processQueue@@Base+0x70>
   1fb24:	mov	r0, #0
   1fb28:	pop	{r4, r5, r6, r7, r8, pc}
   1fb2c:	mov	r0, r5
   1fb30:	pop	{r4, r5, r6, r7, r8, pc}

0001fb34 <deleteItem@@Base>:
   1fb34:	mov	r2, r1
   1fb38:	ldr	r1, [pc, #44]	; 1fb6c <deleteItem@@Base+0x38>
   1fb3c:	push	{r3, lr}
   1fb40:	add	r1, pc, r1
   1fb44:	bl	1f898 <findElement@@Base>
   1fb48:	subs	r3, r0, #0
   1fb4c:	beq	1fb64 <deleteItem@@Base+0x30>
   1fb50:	mov	r2, #0
   1fb54:	str	r2, [r3, #12]
   1fb58:	bl	1f6f4 <deleteElement@@Base>
   1fb5c:	mov	r0, #1
   1fb60:	pop	{r3, pc}
   1fb64:	mov	r0, r3
   1fb68:	pop	{r3, pc}
   1fb6c:			; <UNDEFINED> instruction: 0xfffffb9c

0001fb70 <resetDataArea@@Base>:
   1fb70:	mov	r3, #0
   1fb74:	str	r3, [r0]
   1fb78:	str	r3, [r0, #4]
   1fb7c:	str	r3, [r0, #8]
   1fb80:	bx	lr

0001fb84 <newDataArea@@Base>:
   1fb84:	push	{r4, lr}
   1fb88:	mov	r0, #12
   1fb8c:	bl	14b74 <malloc@plt>
   1fb90:	subs	r4, r0, #0
   1fb94:	beq	1fb9c <newDataArea@@Base+0x18>
   1fb98:	bl	1fb70 <resetDataArea@@Base>
   1fb9c:	mov	r0, r4
   1fba0:	pop	{r4, pc}

0001fba4 <destroyDataArea@@Base>:
   1fba4:	push	{r4, lr}
   1fba8:	mov	r4, r0
   1fbac:	ldr	r0, [r0]
   1fbb0:	cmp	r0, #0
   1fbb4:	beq	1fbbc <destroyDataArea@@Base+0x18>
   1fbb8:	bl	147fc <free@plt>
   1fbbc:	mov	r0, r4
   1fbc0:	pop	{r4, lr}
   1fbc4:	b	147fc <free@plt>

0001fbc8 <allocateDataItem@@Base>:
   1fbc8:	push	{r4, r5, r6, r7, r8, lr}
   1fbcc:	mov	r4, r0
   1fbd0:	ldr	r0, [r0, #8]
   1fbd4:	mov	r7, r1
   1fbd8:	mov	r1, r3
   1fbdc:	mov	r5, r3
   1fbe0:	sub	r0, r0, #1
   1fbe4:	mov	r6, r2
   1fbe8:	add	r0, r0, r3
   1fbec:	bl	1fcd4 <saveDataItem@@Base+0x48>
   1fbf0:	ldr	r3, [r4, #4]
   1fbf4:	mul	r0, r5, r0
   1fbf8:	add	r6, r0, r6
   1fbfc:	cmp	r6, r3
   1fc00:	str	r0, [r4, #8]
   1fc04:	bhi	1fc20 <allocateDataItem@@Base+0x58>
   1fc08:	cmp	r7, #0
   1fc0c:	mov	r0, #1
   1fc10:	ldrne	r3, [r4, #8]
   1fc14:	strne	r3, [r7]
   1fc18:	str	r6, [r4, #8]
   1fc1c:	pop	{r4, r5, r6, r7, r8, pc}
   1fc20:	mvn	r5, r6, lsr #12
   1fc24:	ldr	r0, [r4]
   1fc28:	mvn	r5, r5, lsl #12
   1fc2c:	mov	r1, r5
   1fc30:	bl	149dc <realloc@plt>
   1fc34:	subs	r8, r0, #0
   1fc38:	beq	1fc5c <allocateDataItem@@Base+0x94>
   1fc3c:	ldr	r2, [r4, #4]
   1fc40:	mov	r1, #0
   1fc44:	add	r0, r8, r2
   1fc48:	rsb	r2, r2, r5
   1fc4c:	bl	148e0 <memset@plt>
   1fc50:	str	r8, [r4]
   1fc54:	str	r5, [r4, #4]
   1fc58:	b	1fc08 <allocateDataItem@@Base+0x40>
   1fc5c:	ldr	r1, [pc, #16]	; 1fc74 <allocateDataItem@@Base+0xac>
   1fc60:	mov	r0, #3
   1fc64:	add	r1, pc, r1
   1fc68:	bl	17b84 <logMessage@@Base>
   1fc6c:	mov	r0, r8
   1fc70:	pop	{r4, r5, r6, r7, r8, pc}
   1fc74:	andeq	r2, r0, r4, lsl sl

0001fc78 <getDataItem@@Base>:
   1fc78:	ldr	r0, [r0]
   1fc7c:	add	r0, r0, r1
   1fc80:	bx	lr

0001fc84 <getDataSize@@Base>:
   1fc84:	ldr	r0, [r0, #8]
   1fc88:	bx	lr

0001fc8c <saveDataItem@@Base>:
   1fc8c:	push	{r3, r4, r5, r6, r7, lr}
   1fc90:	mov	r4, r3
   1fc94:	mov	r5, r2
   1fc98:	ldr	r3, [sp, #24]
   1fc9c:	mov	r2, r4
   1fca0:	mov	r7, r0
   1fca4:	mov	r6, r1
   1fca8:	bl	1fbc8 <allocateDataItem@@Base>
   1fcac:	cmp	r0, #0
   1fcb0:	popeq	{r3, r4, r5, r6, r7, pc}
   1fcb4:	ldr	r1, [r6]
   1fcb8:	mov	r0, r7
   1fcbc:	bl	1fc78 <getDataItem@@Base>
   1fcc0:	mov	r1, r5
   1fcc4:	mov	r2, r4
   1fcc8:	bl	14b68 <memcpy@plt>
   1fccc:	mov	r0, #1
   1fcd0:	pop	{r3, r4, r5, r6, r7, pc}
   1fcd4:	subs	r2, r1, #1
   1fcd8:	bxeq	lr
   1fcdc:	bcc	1feb4 <saveDataItem@@Base+0x228>
   1fce0:	cmp	r0, r1
   1fce4:	bls	1fe98 <saveDataItem@@Base+0x20c>
   1fce8:	tst	r1, r2
   1fcec:	beq	1fea4 <saveDataItem@@Base+0x218>
   1fcf0:	clz	r3, r0
   1fcf4:	clz	r2, r1
   1fcf8:	sub	r3, r2, r3
   1fcfc:	rsbs	r3, r3, #31
   1fd00:	addne	r3, r3, r3, lsl #1
   1fd04:	mov	r2, #0
   1fd08:	addne	pc, pc, r3, lsl #2
   1fd0c:	nop	{0}
   1fd10:	cmp	r0, r1, lsl #31
   1fd14:	adc	r2, r2, r2
   1fd18:	subcs	r0, r0, r1, lsl #31
   1fd1c:	cmp	r0, r1, lsl #30
   1fd20:	adc	r2, r2, r2
   1fd24:	subcs	r0, r0, r1, lsl #30
   1fd28:	cmp	r0, r1, lsl #29
   1fd2c:	adc	r2, r2, r2
   1fd30:	subcs	r0, r0, r1, lsl #29
   1fd34:	cmp	r0, r1, lsl #28
   1fd38:	adc	r2, r2, r2
   1fd3c:	subcs	r0, r0, r1, lsl #28
   1fd40:	cmp	r0, r1, lsl #27
   1fd44:	adc	r2, r2, r2
   1fd48:	subcs	r0, r0, r1, lsl #27
   1fd4c:	cmp	r0, r1, lsl #26
   1fd50:	adc	r2, r2, r2
   1fd54:	subcs	r0, r0, r1, lsl #26
   1fd58:	cmp	r0, r1, lsl #25
   1fd5c:	adc	r2, r2, r2
   1fd60:	subcs	r0, r0, r1, lsl #25
   1fd64:	cmp	r0, r1, lsl #24
   1fd68:	adc	r2, r2, r2
   1fd6c:	subcs	r0, r0, r1, lsl #24
   1fd70:	cmp	r0, r1, lsl #23
   1fd74:	adc	r2, r2, r2
   1fd78:	subcs	r0, r0, r1, lsl #23
   1fd7c:	cmp	r0, r1, lsl #22
   1fd80:	adc	r2, r2, r2
   1fd84:	subcs	r0, r0, r1, lsl #22
   1fd88:	cmp	r0, r1, lsl #21
   1fd8c:	adc	r2, r2, r2
   1fd90:	subcs	r0, r0, r1, lsl #21
   1fd94:	cmp	r0, r1, lsl #20
   1fd98:	adc	r2, r2, r2
   1fd9c:	subcs	r0, r0, r1, lsl #20
   1fda0:	cmp	r0, r1, lsl #19
   1fda4:	adc	r2, r2, r2
   1fda8:	subcs	r0, r0, r1, lsl #19
   1fdac:	cmp	r0, r1, lsl #18
   1fdb0:	adc	r2, r2, r2
   1fdb4:	subcs	r0, r0, r1, lsl #18
   1fdb8:	cmp	r0, r1, lsl #17
   1fdbc:	adc	r2, r2, r2
   1fdc0:	subcs	r0, r0, r1, lsl #17
   1fdc4:	cmp	r0, r1, lsl #16
   1fdc8:	adc	r2, r2, r2
   1fdcc:	subcs	r0, r0, r1, lsl #16
   1fdd0:	cmp	r0, r1, lsl #15
   1fdd4:	adc	r2, r2, r2
   1fdd8:	subcs	r0, r0, r1, lsl #15
   1fddc:	cmp	r0, r1, lsl #14
   1fde0:	adc	r2, r2, r2
   1fde4:	subcs	r0, r0, r1, lsl #14
   1fde8:	cmp	r0, r1, lsl #13
   1fdec:	adc	r2, r2, r2
   1fdf0:	subcs	r0, r0, r1, lsl #13
   1fdf4:	cmp	r0, r1, lsl #12
   1fdf8:	adc	r2, r2, r2
   1fdfc:	subcs	r0, r0, r1, lsl #12
   1fe00:	cmp	r0, r1, lsl #11
   1fe04:	adc	r2, r2, r2
   1fe08:	subcs	r0, r0, r1, lsl #11
   1fe0c:	cmp	r0, r1, lsl #10
   1fe10:	adc	r2, r2, r2
   1fe14:	subcs	r0, r0, r1, lsl #10
   1fe18:	cmp	r0, r1, lsl #9
   1fe1c:	adc	r2, r2, r2
   1fe20:	subcs	r0, r0, r1, lsl #9
   1fe24:	cmp	r0, r1, lsl #8
   1fe28:	adc	r2, r2, r2
   1fe2c:	subcs	r0, r0, r1, lsl #8
   1fe30:	cmp	r0, r1, lsl #7
   1fe34:	adc	r2, r2, r2
   1fe38:	subcs	r0, r0, r1, lsl #7
   1fe3c:	cmp	r0, r1, lsl #6
   1fe40:	adc	r2, r2, r2
   1fe44:	subcs	r0, r0, r1, lsl #6
   1fe48:	cmp	r0, r1, lsl #5
   1fe4c:	adc	r2, r2, r2
   1fe50:	subcs	r0, r0, r1, lsl #5
   1fe54:	cmp	r0, r1, lsl #4
   1fe58:	adc	r2, r2, r2
   1fe5c:	subcs	r0, r0, r1, lsl #4
   1fe60:	cmp	r0, r1, lsl #3
   1fe64:	adc	r2, r2, r2
   1fe68:	subcs	r0, r0, r1, lsl #3
   1fe6c:	cmp	r0, r1, lsl #2
   1fe70:	adc	r2, r2, r2
   1fe74:	subcs	r0, r0, r1, lsl #2
   1fe78:	cmp	r0, r1, lsl #1
   1fe7c:	adc	r2, r2, r2
   1fe80:	subcs	r0, r0, r1, lsl #1
   1fe84:	cmp	r0, r1
   1fe88:	adc	r2, r2, r2
   1fe8c:	subcs	r0, r0, r1
   1fe90:	mov	r0, r2
   1fe94:	bx	lr
   1fe98:	moveq	r0, #1
   1fe9c:	movne	r0, #0
   1fea0:	bx	lr
   1fea4:	clz	r2, r1
   1fea8:	rsb	r2, r2, #31
   1feac:	lsr	r0, r0, r2
   1feb0:	bx	lr
   1feb4:	cmp	r0, #0
   1feb8:	mvnne	r0, #0
   1febc:	b	20120 <saveDataItem@@Base+0x494>
   1fec0:	cmp	r1, #0
   1fec4:	beq	1feb4 <saveDataItem@@Base+0x228>
   1fec8:	push	{r0, r1, lr}
   1fecc:	bl	1fcd4 <saveDataItem@@Base+0x48>
   1fed0:	pop	{r1, r2, lr}
   1fed4:	mul	r3, r2, r0
   1fed8:	sub	r1, r1, r3
   1fedc:	bx	lr
   1fee0:	cmp	r1, #0
   1fee4:	beq	200f0 <saveDataItem@@Base+0x464>
   1fee8:	eor	ip, r0, r1
   1feec:	rsbmi	r1, r1, #0
   1fef0:	subs	r2, r1, #1
   1fef4:	beq	200bc <saveDataItem@@Base+0x430>
   1fef8:	movs	r3, r0
   1fefc:	rsbmi	r3, r0, #0
   1ff00:	cmp	r3, r1
   1ff04:	bls	200c8 <saveDataItem@@Base+0x43c>
   1ff08:	tst	r1, r2
   1ff0c:	beq	200d8 <saveDataItem@@Base+0x44c>
   1ff10:	clz	r2, r3
   1ff14:	clz	r0, r1
   1ff18:	sub	r2, r0, r2
   1ff1c:	rsbs	r2, r2, #31
   1ff20:	addne	r2, r2, r2, lsl #1
   1ff24:	mov	r0, #0
   1ff28:	addne	pc, pc, r2, lsl #2
   1ff2c:	nop	{0}
   1ff30:	cmp	r3, r1, lsl #31
   1ff34:	adc	r0, r0, r0
   1ff38:	subcs	r3, r3, r1, lsl #31
   1ff3c:	cmp	r3, r1, lsl #30
   1ff40:	adc	r0, r0, r0
   1ff44:	subcs	r3, r3, r1, lsl #30
   1ff48:	cmp	r3, r1, lsl #29
   1ff4c:	adc	r0, r0, r0
   1ff50:	subcs	r3, r3, r1, lsl #29
   1ff54:	cmp	r3, r1, lsl #28
   1ff58:	adc	r0, r0, r0
   1ff5c:	subcs	r3, r3, r1, lsl #28
   1ff60:	cmp	r3, r1, lsl #27
   1ff64:	adc	r0, r0, r0
   1ff68:	subcs	r3, r3, r1, lsl #27
   1ff6c:	cmp	r3, r1, lsl #26
   1ff70:	adc	r0, r0, r0
   1ff74:	subcs	r3, r3, r1, lsl #26
   1ff78:	cmp	r3, r1, lsl #25
   1ff7c:	adc	r0, r0, r0
   1ff80:	subcs	r3, r3, r1, lsl #25
   1ff84:	cmp	r3, r1, lsl #24
   1ff88:	adc	r0, r0, r0
   1ff8c:	subcs	r3, r3, r1, lsl #24
   1ff90:	cmp	r3, r1, lsl #23
   1ff94:	adc	r0, r0, r0
   1ff98:	subcs	r3, r3, r1, lsl #23
   1ff9c:	cmp	r3, r1, lsl #22
   1ffa0:	adc	r0, r0, r0
   1ffa4:	subcs	r3, r3, r1, lsl #22
   1ffa8:	cmp	r3, r1, lsl #21
   1ffac:	adc	r0, r0, r0
   1ffb0:	subcs	r3, r3, r1, lsl #21
   1ffb4:	cmp	r3, r1, lsl #20
   1ffb8:	adc	r0, r0, r0
   1ffbc:	subcs	r3, r3, r1, lsl #20
   1ffc0:	cmp	r3, r1, lsl #19
   1ffc4:	adc	r0, r0, r0
   1ffc8:	subcs	r3, r3, r1, lsl #19
   1ffcc:	cmp	r3, r1, lsl #18
   1ffd0:	adc	r0, r0, r0
   1ffd4:	subcs	r3, r3, r1, lsl #18
   1ffd8:	cmp	r3, r1, lsl #17
   1ffdc:	adc	r0, r0, r0
   1ffe0:	subcs	r3, r3, r1, lsl #17
   1ffe4:	cmp	r3, r1, lsl #16
   1ffe8:	adc	r0, r0, r0
   1ffec:	subcs	r3, r3, r1, lsl #16
   1fff0:	cmp	r3, r1, lsl #15
   1fff4:	adc	r0, r0, r0
   1fff8:	subcs	r3, r3, r1, lsl #15
   1fffc:	cmp	r3, r1, lsl #14
   20000:	adc	r0, r0, r0
   20004:	subcs	r3, r3, r1, lsl #14
   20008:	cmp	r3, r1, lsl #13
   2000c:	adc	r0, r0, r0
   20010:	subcs	r3, r3, r1, lsl #13
   20014:	cmp	r3, r1, lsl #12
   20018:	adc	r0, r0, r0
   2001c:	subcs	r3, r3, r1, lsl #12
   20020:	cmp	r3, r1, lsl #11
   20024:	adc	r0, r0, r0
   20028:	subcs	r3, r3, r1, lsl #11
   2002c:	cmp	r3, r1, lsl #10
   20030:	adc	r0, r0, r0
   20034:	subcs	r3, r3, r1, lsl #10
   20038:	cmp	r3, r1, lsl #9
   2003c:	adc	r0, r0, r0
   20040:	subcs	r3, r3, r1, lsl #9
   20044:	cmp	r3, r1, lsl #8
   20048:	adc	r0, r0, r0
   2004c:	subcs	r3, r3, r1, lsl #8
   20050:	cmp	r3, r1, lsl #7
   20054:	adc	r0, r0, r0
   20058:	subcs	r3, r3, r1, lsl #7
   2005c:	cmp	r3, r1, lsl #6
   20060:	adc	r0, r0, r0
   20064:	subcs	r3, r3, r1, lsl #6
   20068:	cmp	r3, r1, lsl #5
   2006c:	adc	r0, r0, r0
   20070:	subcs	r3, r3, r1, lsl #5
   20074:	cmp	r3, r1, lsl #4
   20078:	adc	r0, r0, r0
   2007c:	subcs	r3, r3, r1, lsl #4
   20080:	cmp	r3, r1, lsl #3
   20084:	adc	r0, r0, r0
   20088:	subcs	r3, r3, r1, lsl #3
   2008c:	cmp	r3, r1, lsl #2
   20090:	adc	r0, r0, r0
   20094:	subcs	r3, r3, r1, lsl #2
   20098:	cmp	r3, r1, lsl #1
   2009c:	adc	r0, r0, r0
   200a0:	subcs	r3, r3, r1, lsl #1
   200a4:	cmp	r3, r1
   200a8:	adc	r0, r0, r0
   200ac:	subcs	r3, r3, r1
   200b0:	cmp	ip, #0
   200b4:	rsbmi	r0, r0, #0
   200b8:	bx	lr
   200bc:	teq	ip, r0
   200c0:	rsbmi	r0, r0, #0
   200c4:	bx	lr
   200c8:	movcc	r0, #0
   200cc:	asreq	r0, ip, #31
   200d0:	orreq	r0, r0, #1
   200d4:	bx	lr
   200d8:	clz	r2, r1
   200dc:	rsb	r2, r2, #31
   200e0:	cmp	ip, #0
   200e4:	lsr	r0, r3, r2
   200e8:	rsbmi	r0, r0, #0
   200ec:	bx	lr
   200f0:	cmp	r0, #0
   200f4:	mvngt	r0, #-2147483648	; 0x80000000
   200f8:	movlt	r0, #-2147483648	; 0x80000000
   200fc:	b	20120 <saveDataItem@@Base+0x494>
   20100:	cmp	r1, #0
   20104:	beq	200f0 <saveDataItem@@Base+0x464>
   20108:	push	{r0, r1, lr}
   2010c:	bl	1fee8 <saveDataItem@@Base+0x25c>
   20110:	pop	{r1, r2, lr}
   20114:	mul	r3, r2, r0
   20118:	sub	r1, r1, r3
   2011c:	bx	lr
   20120:	push	{r1, lr}
   20124:	mov	r0, #8
   20128:	bl	14ad8 <raise@plt>
   2012c:	pop	{r1, pc}

00020130 <__libc_csu_init@@Base>:
   20130:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   20134:	mov	r7, r0
   20138:	ldr	r6, [pc, #76]	; 2018c <__libc_csu_init@@Base+0x5c>
   2013c:	mov	r8, r1
   20140:	ldr	r5, [pc, #72]	; 20190 <__libc_csu_init@@Base+0x60>
   20144:	mov	r9, r2
   20148:	add	r6, pc, r6
   2014c:	bl	14728 <_init@@Base>
   20150:	add	r5, pc, r5
   20154:	rsb	r6, r5, r6
   20158:	asrs	r6, r6, #2
   2015c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   20160:	sub	r5, r5, #4
   20164:	mov	r4, #0
   20168:	add	r4, r4, #1
   2016c:	ldr	r3, [r5, #4]!
   20170:	mov	r0, r7
   20174:	mov	r1, r8
   20178:	mov	r2, r9
   2017c:	blx	r3
   20180:	cmp	r4, r6
   20184:	bne	20168 <__libc_csu_init@@Base+0x38>
   20188:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2018c:	ldrdeq	r3, [r1], -ip
   20190:	ldrdeq	r3, [r1], -r0

00020194 <__libc_csu_fini@@Base>:
   20194:	bx	lr
   20198:	ldr	r3, [pc, #28]	; 201bc <__libc_csu_fini@@Base+0x28>
   2019c:	mov	r1, #0
   201a0:	ldr	r2, [pc, #24]	; 201c0 <__libc_csu_fini@@Base+0x2c>
   201a4:	add	r3, pc, r3
   201a8:	ldr	r3, [r3, r2]
   201ac:	cmp	r3, #0
   201b0:	ldrne	r2, [r3]
   201b4:	moveq	r2, r3
   201b8:	b	14aa8 <__cxa_atexit@plt>
   201bc:	andeq	r3, r1, r4, asr lr
   201c0:	andeq	r0, r0, r4, lsr r2

Disassembly of section .fini:

000201c4 <_fini@@Base>:
   201c4:	push	{r3, lr}
   201c8:	pop	{r3, pc}
