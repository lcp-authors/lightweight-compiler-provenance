
centos-preinstalled/nl-classid-lookup:     file format elf32-littlearm


Disassembly of section .init:

000106f0 <.init>:
   106f0:	push	{r3, lr}
   106f4:	bl	10954 <exit@plt+0x1b4>
   106f8:	pop	{r3, pc}

Disassembly of section .plt:

000106fc <abort@plt-0x14>:
   106fc:	push	{lr}		; (str lr, [sp, #-4]!)
   10700:	ldr	lr, [pc, #4]	; 1070c <abort@plt-0x4>
   10704:	add	lr, pc, lr
   10708:	ldr	pc, [lr, #8]!
   1070c:	strdeq	r0, [r1], -r4

00010710 <abort@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2292]!	; 0x8f4

0001071c <nl_cli_fatal@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2284]!	; 0x8ec

00010728 <__libc_start_main@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2276]!	; 0x8e4

00010734 <__gmon_start__@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010740 <__printf_chk@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2260]!	; 0x8d4

0001074c <nl_cli_print_version@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2252]!	; 0x8cc

00010758 <rtnl_tc_handle2str@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2244]!	; 0x8c4

00010764 <getopt_long@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010770 <rtnl_tc_str2handle@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2228]!	; 0x8b4

0001077c <__stack_chk_fail@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2220]!	; 0x8ac

00010788 <puts@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2212]!	; 0x8a4

00010794 <nl_geterror@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2204]!	; 0x89c

000107a0 <exit@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2196]!	; 0x894

Disassembly of section .text:

000107ac <.text>:
   107ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107b0:	movw	r9, #4256	; 0x10a0
   107b4:	movt	r9, #2
   107b8:	sub	sp, sp, #84	; 0x54
   107bc:	mov	r4, #0
   107c0:	add	r5, sp, #8
   107c4:	ldr	r3, [r9]
   107c8:	mov	r7, r0
   107cc:	mov	r6, r1
   107d0:	mov	fp, r4
   107d4:	mov	r8, r4
   107d8:	movw	sl, #257	; 0x101
   107dc:	str	r3, [sp, #76]	; 0x4c
   107e0:	str	r5, [sp]
   107e4:	movw	r2, #3152	; 0xc50
   107e8:	movw	r3, #4168	; 0x1048
   107ec:	movt	r2, #1
   107f0:	movt	r3, #2
   107f4:	mov	r0, r7
   107f8:	mov	r1, r6
   107fc:	str	r8, [sp, #8]
   10800:	bl	10764 <getopt_long@plt>
   10804:	cmn	r0, #1
   10808:	beq	10848 <exit@plt+0xa8>
   1080c:	cmp	r0, #114	; 0x72
   10810:	beq	10838 <exit@plt+0x98>
   10814:	ble	1082c <exit@plt+0x8c>
   10818:	cmp	r0, #118	; 0x76
   1081c:	beq	10840 <exit@plt+0xa0>
   10820:	cmp	r0, sl
   10824:	moveq	r4, #1
   10828:	b	107e0 <exit@plt+0x40>
   1082c:	cmp	r0, #104	; 0x68
   10830:	bne	107e0 <exit@plt+0x40>
   10834:	bl	10a4c <exit@plt+0x2ac>
   10838:	mov	fp, #1
   1083c:	b	107e0 <exit@plt+0x40>
   10840:	bl	1074c <nl_cli_print_version@plt>
   10844:	b	107e0 <exit@plt+0x40>
   10848:	movw	r3, #4248	; 0x1098
   1084c:	movt	r3, #2
   10850:	ldr	ip, [r3]
   10854:	cmp	r7, ip
   10858:	ble	10834 <exit@plt+0x94>
   1085c:	ldr	r6, [r6, ip, lsl #2]
   10860:	mov	r1, r5
   10864:	add	ip, ip, #1
   10868:	str	ip, [r3]
   1086c:	mov	r0, r6
   10870:	bl	10770 <rtnl_tc_str2handle@plt>
   10874:	subs	r5, r0, #0
   10878:	blt	108f4 <exit@plt+0x154>
   1087c:	cmp	fp, #0
   10880:	bne	108dc <exit@plt+0x13c>
   10884:	cmp	r4, #0
   10888:	bne	108c4 <exit@plt+0x124>
   1088c:	ldr	r3, [sp, #8]
   10890:	movw	r1, #3200	; 0xc80
   10894:	mov	r0, #1
   10898:	movt	r1, #1
   1089c:	lsr	r2, r3, #16
   108a0:	uxth	r3, r3
   108a4:	bl	10740 <__printf_chk@plt>
   108a8:	ldr	r2, [sp, #76]	; 0x4c
   108ac:	mov	r0, #0
   108b0:	ldr	r3, [r9]
   108b4:	cmp	r2, r3
   108b8:	bne	10914 <exit@plt+0x174>
   108bc:	add	sp, sp, #84	; 0x54
   108c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108c4:	movw	r1, #3192	; 0xc78
   108c8:	ldr	r2, [sp, #8]
   108cc:	movt	r1, #1
   108d0:	mov	r0, #1
   108d4:	bl	10740 <__printf_chk@plt>
   108d8:	b	108a8 <exit@plt+0x108>
   108dc:	add	r1, sp, #12
   108e0:	mov	r2, #64	; 0x40
   108e4:	ldr	r0, [sp, #8]
   108e8:	bl	10758 <rtnl_tc_handle2str@plt>
   108ec:	bl	10788 <puts@plt>
   108f0:	b	108a8 <exit@plt+0x108>
   108f4:	bl	10794 <nl_geterror@plt>
   108f8:	mov	r2, r6
   108fc:	movw	r1, #3156	; 0xc54
   10900:	movt	r1, #1
   10904:	mov	r3, r0
   10908:	mov	r0, r5
   1090c:	bl	1071c <nl_cli_fatal@plt>
   10910:	b	1087c <exit@plt+0xdc>
   10914:	bl	1077c <__stack_chk_fail@plt>
   10918:	mov	fp, #0
   1091c:	mov	lr, #0
   10920:	pop	{r1}		; (ldr r1, [sp], #4)
   10924:	mov	r2, sp
   10928:	push	{r2}		; (str r2, [sp, #-4]!)
   1092c:	push	{r0}		; (str r0, [sp, #-4]!)
   10930:	ldr	ip, [pc, #16]	; 10948 <exit@plt+0x1a8>
   10934:	push	{ip}		; (str ip, [sp, #-4]!)
   10938:	ldr	r0, [pc, #12]	; 1094c <exit@plt+0x1ac>
   1093c:	ldr	r3, [pc, #12]	; 10950 <exit@plt+0x1b0>
   10940:	bl	10728 <__libc_start_main@plt>
   10944:	bl	10710 <abort@plt>
   10948:	andeq	r0, r1, r8, asr #21
   1094c:	andeq	r0, r1, ip, lsr #15
   10950:	andeq	r0, r1, r4, ror #20
   10954:	ldr	r3, [pc, #20]	; 10970 <exit@plt+0x1d0>
   10958:	ldr	r2, [pc, #20]	; 10974 <exit@plt+0x1d4>
   1095c:	add	r3, pc, r3
   10960:	ldr	r2, [r3, r2]
   10964:	cmp	r2, #0
   10968:	bxeq	lr
   1096c:	b	10734 <__gmon_start__@plt>
   10970:	muleq	r1, ip, r6
   10974:	andeq	r0, r0, r0, asr #32
   10978:	push	{r3, lr}
   1097c:	movw	r0, #4248	; 0x1098
   10980:	ldr	r3, [pc, #36]	; 109ac <exit@plt+0x20c>
   10984:	movt	r0, #2
   10988:	rsb	r3, r0, r3
   1098c:	cmp	r3, #6
   10990:	popls	{r3, pc}
   10994:	movw	r3, #0
   10998:	movt	r3, #0
   1099c:	cmp	r3, #0
   109a0:	popeq	{r3, pc}
   109a4:	blx	r3
   109a8:	pop	{r3, pc}
   109ac:	muleq	r2, fp, r0
   109b0:	push	{r3, lr}
   109b4:	movw	r0, #4248	; 0x1098
   109b8:	movw	r3, #4248	; 0x1098
   109bc:	movt	r0, #2
   109c0:	movt	r3, #2
   109c4:	rsb	r3, r0, r3
   109c8:	asr	r3, r3, #2
   109cc:	add	r3, r3, r3, lsr #31
   109d0:	asrs	r1, r3, #1
   109d4:	popeq	{r3, pc}
   109d8:	movw	r2, #0
   109dc:	movt	r2, #0
   109e0:	cmp	r2, #0
   109e4:	popeq	{r3, pc}
   109e8:	blx	r2
   109ec:	pop	{r3, pc}
   109f0:	push	{r4, lr}
   109f4:	movw	r4, #4260	; 0x10a4
   109f8:	movt	r4, #2
   109fc:	ldrb	r3, [r4]
   10a00:	cmp	r3, #0
   10a04:	popne	{r4, pc}
   10a08:	bl	10978 <exit@plt+0x1d8>
   10a0c:	mov	r3, #1
   10a10:	strb	r3, [r4]
   10a14:	pop	{r4, pc}
   10a18:	movw	r0, #3772	; 0xebc
   10a1c:	movt	r0, #2
   10a20:	push	{r3, lr}
   10a24:	ldr	r3, [r0]
   10a28:	cmp	r3, #0
   10a2c:	beq	10a44 <exit@plt+0x2a4>
   10a30:	movw	r3, #0
   10a34:	movt	r3, #0
   10a38:	cmp	r3, #0
   10a3c:	beq	10a44 <exit@plt+0x2a4>
   10a40:	blx	r3
   10a44:	pop	{r3, lr}
   10a48:	b	109b0 <exit@plt+0x210>
   10a4c:	push	{r3, lr}
   10a50:	movw	r0, #2780	; 0xadc
   10a54:	movt	r0, #1
   10a58:	bl	10788 <puts@plt>
   10a5c:	mov	r0, #0
   10a60:	bl	107a0 <exit@plt>
   10a64:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10a68:	mov	r7, r0
   10a6c:	ldr	r6, [pc, #76]	; 10ac0 <exit@plt+0x320>
   10a70:	mov	r8, r1
   10a74:	ldr	r5, [pc, #72]	; 10ac4 <exit@plt+0x324>
   10a78:	mov	r9, r2
   10a7c:	add	r6, pc, r6
   10a80:	bl	106f0 <abort@plt-0x20>
   10a84:	add	r5, pc, r5
   10a88:	rsb	r6, r5, r6
   10a8c:	asrs	r6, r6, #2
   10a90:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10a94:	sub	r5, r5, #4
   10a98:	mov	r4, #0
   10a9c:	add	r4, r4, #1
   10aa0:	ldr	r3, [r5, #4]!
   10aa4:	mov	r0, r7
   10aa8:	mov	r1, r8
   10aac:	mov	r2, r9
   10ab0:	blx	r3
   10ab4:	cmp	r4, r6
   10ab8:	bne	10a9c <exit@plt+0x2fc>
   10abc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10ac0:	andeq	r0, r1, r4, lsr r4
   10ac4:	andeq	r0, r1, r8, lsr #8
   10ac8:	bx	lr

Disassembly of section .fini:

00010acc <.fini>:
   10acc:	push	{r3, lr}
   10ad0:	pop	{r3, pc}
