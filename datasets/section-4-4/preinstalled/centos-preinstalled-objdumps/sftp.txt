
centos-preinstalled/sftp:     file format elf32-littlearm


Disassembly of section .init:

00001e58 <_init@@Base>:
    1e58:	push	{r3, lr}
    1e5c:	bl	2fac <el_line@plt+0xaf8>
    1e60:	pop	{r3, pc}

Disassembly of section .plt:

00001e64 <chdir@plt-0x14>:
    1e64:	push	{lr}		; (str lr, [sp, #-4]!)
    1e68:	ldr	lr, [pc, #4]	; 1e74 <_init@@Base+0x1c>
    1e6c:	add	lr, pc, lr
    1e70:	ldr	pc, [lr, #8]!
    1e74:	strdeq	ip, [r2], -r8

00001e78 <chdir@plt>:
    1e78:	add	ip, pc, #0, 12
    1e7c:	add	ip, ip, #44, 20	; 0x2c000
    1e80:	ldr	pc, [ip, #3832]!	; 0xef8

00001e84 <getpwnam@plt>:
    1e84:	add	ip, pc, #0, 12
    1e88:	add	ip, ip, #44, 20	; 0x2c000
    1e8c:	ldr	pc, [ip, #3824]!	; 0xef0

00001e90 <fsync@plt>:
    1e90:	add	ip, pc, #0, 12
    1e94:	add	ip, ip, #44, 20	; 0x2c000
    1e98:	ldr	pc, [ip, #3816]!	; 0xee8

00001e9c <getpid@plt>:
    1e9c:	add	ip, pc, #0, 12
    1ea0:	add	ip, ip, #44, 20	; 0x2c000
    1ea4:	ldr	pc, [ip, #3808]!	; 0xee0

00001ea8 <__memcpy_chk@plt>:
    1ea8:	add	ip, pc, #0, 12
    1eac:	add	ip, ip, #44, 20	; 0x2c000
    1eb0:	ldr	pc, [ip, #3800]!	; 0xed8

00001eb4 <ftruncate64@plt>:
    1eb4:	add	ip, pc, #0, 12
    1eb8:	add	ip, ip, #44, 20	; 0x2c000
    1ebc:	ldr	pc, [ip, #3792]!	; 0xed0

00001ec0 <gettimeofday@plt>:
    1ec0:	add	ip, pc, #0, 12
    1ec4:	add	ip, ip, #44, 20	; 0x2c000
    1ec8:	ldr	pc, [ip, #3784]!	; 0xec8

00001ecc <socketpair@plt>:
    1ecc:	add	ip, pc, #0, 12
    1ed0:	add	ip, ip, #44, 20	; 0x2c000
    1ed4:	ldr	pc, [ip, #3776]!	; 0xec0

00001ed8 <getsockopt@plt>:
    1ed8:	add	ip, pc, #0, 12
    1edc:	add	ip, ip, #44, 20	; 0x2c000
    1ee0:	ldr	pc, [ip, #3768]!	; 0xeb8

00001ee4 <strcasecmp@plt>:
    1ee4:	add	ip, pc, #0, 12
    1ee8:	add	ip, ip, #44, 20	; 0x2c000
    1eec:	ldr	pc, [ip, #3760]!	; 0xeb0

00001ef0 <strnlen@plt>:
    1ef0:	add	ip, pc, #0, 12
    1ef4:	add	ip, ip, #44, 20	; 0x2c000
    1ef8:	ldr	pc, [ip, #3752]!	; 0xea8

00001efc <history_init@plt>:
    1efc:	add	ip, pc, #0, 12
    1f00:	add	ip, ip, #44, 20	; 0x2c000
    1f04:	ldr	pc, [ip, #3744]!	; 0xea0

00001f08 <getsid@plt>:
    1f08:	add	ip, pc, #0, 12
    1f0c:	add	ip, ip, #44, 20	; 0x2c000
    1f10:	ldr	pc, [ip, #3736]!	; 0xe98

00001f14 <strtol@plt>:
    1f14:	add	ip, pc, #0, 12
    1f18:	add	ip, ip, #44, 20	; 0x2c000
    1f1c:	ldr	pc, [ip, #3728]!	; 0xe90

00001f20 <free@plt>:
    1f20:	add	ip, pc, #0, 12
    1f24:	add	ip, ip, #44, 20	; 0x2c000
    1f28:	ldr	pc, [ip, #3720]!	; 0xe88

00001f2c <__xstat64@plt>:
    1f2c:	add	ip, pc, #0, 12
    1f30:	add	ip, ip, #44, 20	; 0x2c000
    1f34:	ldr	pc, [ip, #3712]!	; 0xe80

00001f38 <qsort@plt>:
    1f38:	add	ip, pc, #0, 12
    1f3c:	add	ip, ip, #44, 20	; 0x2c000
    1f40:	ldr	pc, [ip, #3704]!	; 0xe78

00001f44 <strncmp@plt>:
    1f44:	add	ip, pc, #0, 12
    1f48:	add	ip, ip, #44, 20	; 0x2c000
    1f4c:	ldr	pc, [ip, #3696]!	; 0xe70

00001f50 <mbtowc@plt>:
    1f50:	add	ip, pc, #0, 12
    1f54:	add	ip, ip, #44, 20	; 0x2c000
    1f58:	ldr	pc, [ip, #3688]!	; 0xe68

00001f5c <getppid@plt>:
    1f5c:	add	ip, pc, #0, 12
    1f60:	add	ip, ip, #44, 20	; 0x2c000
    1f64:	ldr	pc, [ip, #3680]!	; 0xe60

00001f68 <fgetc@plt>:
    1f68:	add	ip, pc, #0, 12
    1f6c:	add	ip, ip, #44, 20	; 0x2c000
    1f70:	ldr	pc, [ip, #3672]!	; 0xe58

00001f74 <el_get@plt>:
    1f74:	add	ip, pc, #0, 12
    1f78:	add	ip, ip, #44, 20	; 0x2c000
    1f7c:	ldr	pc, [ip, #3664]!	; 0xe50

00001f80 <closedir@plt>:
    1f80:	add	ip, pc, #0, 12
    1f84:	add	ip, ip, #44, 20	; 0x2c000
    1f88:	ldr	pc, [ip, #3656]!	; 0xe48

00001f8c <exit@plt>:
    1f8c:	add	ip, pc, #0, 12
    1f90:	add	ip, ip, #44, 20	; 0x2c000
    1f94:	ldr	pc, [ip, #3648]!	; 0xe40

00001f98 <mblen@plt>:
    1f98:	add	ip, pc, #0, 12
    1f9c:	add	ip, ip, #44, 20	; 0x2c000
    1fa0:	ldr	pc, [ip, #3640]!	; 0xe38

00001fa4 <strerror@plt>:
    1fa4:	add	ip, pc, #0, 12
    1fa8:	add	ip, ip, #44, 20	; 0x2c000
    1fac:	ldr	pc, [ip, #3632]!	; 0xe30

00001fb0 <__vsnprintf_chk@plt>:
    1fb0:	add	ip, pc, #0, 12
    1fb4:	add	ip, ip, #44, 20	; 0x2c000
    1fb8:	ldr	pc, [ip, #3624]!	; 0xe28

00001fbc <feof@plt>:
    1fbc:	add	ip, pc, #0, 12
    1fc0:	add	ip, ip, #44, 20	; 0x2c000
    1fc4:	ldr	pc, [ip, #3616]!	; 0xe20

00001fc8 <puts@plt>:
    1fc8:	add	ip, pc, #0, 12
    1fcc:	add	ip, ip, #44, 20	; 0x2c000
    1fd0:	ldr	pc, [ip, #3608]!	; 0xe18

00001fd4 <perror@plt>:
    1fd4:	add	ip, pc, #0, 12
    1fd8:	add	ip, ip, #44, 20	; 0x2c000
    1fdc:	ldr	pc, [ip, #3600]!	; 0xe10

00001fe0 <getgrgid@plt>:
    1fe0:	add	ip, pc, #0, 12
    1fe4:	add	ip, ip, #44, 20	; 0x2c000
    1fe8:	ldr	pc, [ip, #3592]!	; 0xe08

00001fec <strtoll@plt>:
    1fec:	add	ip, pc, #0, 12
    1ff0:	add	ip, ip, #44, 20	; 0x2c000
    1ff4:	ldr	pc, [ip, #3584]!	; 0xe00

00001ff8 <nl_langinfo@plt>:
    1ff8:	add	ip, pc, #0, 12
    1ffc:	add	ip, ip, #44, 20	; 0x2c000
    2000:	ldr	pc, [ip, #3576]!	; 0xdf8

00002004 <getpwuid@plt>:
    2004:	add	ip, pc, #0, 12
    2008:	add	ip, ip, #44, 20	; 0x2c000
    200c:	ldr	pc, [ip, #3568]!	; 0xdf0

00002010 <el_insertstr@plt>:
    2010:	add	ip, pc, #0, 12
    2014:	add	ip, ip, #44, 20	; 0x2c000
    2018:	ldr	pc, [ip, #3560]!	; 0xde8

0000201c <readdir64@plt>:
    201c:	add	ip, pc, #0, 12
    2020:	add	ip, ip, #44, 20	; 0x2c000
    2024:	ldr	pc, [ip, #3552]!	; 0xde0

00002028 <__fprintf_chk@plt>:
    2028:	add	ip, pc, #0, 12
    202c:	add	ip, ip, #44, 20	; 0x2c000
    2030:	ldr	pc, [ip, #3544]!	; 0xdd8

00002034 <execl@plt>:
    2034:	add	ip, pc, #0, 12
    2038:	add	ip, ip, #44, 20	; 0x2c000
    203c:	ldr	pc, [ip, #3536]!	; 0xdd0

00002040 <nanosleep@plt>:
    2040:	add	ip, pc, #0, 12
    2044:	add	ip, ip, #44, 20	; 0x2c000
    2048:	ldr	pc, [ip, #3528]!	; 0xdc8

0000204c <strftime@plt>:
    204c:	add	ip, pc, #0, 12
    2050:	add	ip, ip, #44, 20	; 0x2c000
    2054:	ldr	pc, [ip, #3520]!	; 0xdc0

00002058 <putchar@plt>:
    2058:	add	ip, pc, #0, 12
    205c:	add	ip, ip, #44, 20	; 0x2c000
    2060:	ldr	pc, [ip, #3512]!	; 0xdb8

00002064 <memset@plt>:
    2064:	add	ip, pc, #0, 12
    2068:	add	ip, ip, #44, 20	; 0x2c000
    206c:	ldr	pc, [ip, #3504]!	; 0xdb0

00002070 <__fxstat64@plt>:
    2070:	add	ip, pc, #0, 12
    2074:	add	ip, ip, #44, 20	; 0x2c000
    2078:	ldr	pc, [ip, #3496]!	; 0xda8

0000207c <closelog@plt>:
    207c:	add	ip, pc, #0, 12
    2080:	add	ip, ip, #44, 20	; 0x2c000
    2084:	ldr	pc, [ip, #3488]!	; 0xda0

00002088 <strspn@plt>:
    2088:	add	ip, pc, #0, 12
    208c:	add	ip, ip, #44, 20	; 0x2c000
    2090:	ldr	pc, [ip, #3480]!	; 0xd98

00002094 <opendir@plt>:
    2094:	add	ip, pc, #0, 12
    2098:	add	ip, ip, #44, 20	; 0x2c000
    209c:	ldr	pc, [ip, #3472]!	; 0xd90

000020a0 <fcntl@plt>:
    20a0:	add	ip, pc, #0, 12
    20a4:	add	ip, ip, #44, 20	; 0x2c000
    20a8:	ldr	pc, [ip, #3464]!	; 0xd88

000020ac <el_gets@plt>:
    20ac:	add	ip, pc, #0, 12
    20b0:	add	ip, ip, #44, 20	; 0x2c000
    20b4:	ldr	pc, [ip, #3456]!	; 0xd80

000020b8 <listen@plt>:
    20b8:	add	ip, pc, #0, 12
    20bc:	add	ip, ip, #44, 20	; 0x2c000
    20c0:	ldr	pc, [ip, #3448]!	; 0xd78

000020c4 <snprintf@plt>:
    20c4:	add	ip, pc, #0, 12
    20c8:	add	ip, ip, #44, 20	; 0x2c000
    20cc:	ldr	pc, [ip, #3440]!	; 0xd70

000020d0 <__strdup@plt>:
    20d0:	add	ip, pc, #0, 12
    20d4:	add	ip, ip, #44, 20	; 0x2c000
    20d8:	ldr	pc, [ip, #3432]!	; 0xd68

000020dc <close@plt>:
    20dc:	add	ip, pc, #0, 12
    20e0:	add	ip, ip, #44, 20	; 0x2c000
    20e4:	ldr	pc, [ip, #3424]!	; 0xd60

000020e8 <read@plt>:
    20e8:	add	ip, pc, #0, 12
    20ec:	add	ip, ip, #44, 20	; 0x2c000
    20f0:	ldr	pc, [ip, #3416]!	; 0xd58

000020f4 <abort@plt>:
    20f4:	add	ip, pc, #0, 12
    20f8:	add	ip, ip, #44, 20	; 0x2c000
    20fc:	ldr	pc, [ip, #3408]!	; 0xd50

00002100 <poll@plt>:
    2100:	add	ip, pc, #0, 12
    2104:	add	ip, ip, #44, 20	; 0x2c000
    2108:	ldr	pc, [ip, #3400]!	; 0xd48

0000210c <memmove@plt>:
    210c:	add	ip, pc, #0, 12
    2110:	add	ip, ip, #44, 20	; 0x2c000
    2114:	ldr	pc, [ip, #3392]!	; 0xd40

00002118 <wcwidth@plt>:
    2118:	add	ip, pc, #0, 12
    211c:	add	ip, ip, #44, 20	; 0x2c000
    2120:	ldr	pc, [ip, #3384]!	; 0xd38

00002124 <strpbrk@plt>:
    2124:	add	ip, pc, #0, 12
    2128:	add	ip, ip, #44, 20	; 0x2c000
    212c:	ldr	pc, [ip, #3376]!	; 0xd30

00002130 <unlink@plt>:
    2130:	add	ip, pc, #0, 12
    2134:	add	ip, ip, #44, 20	; 0x2c000
    2138:	ldr	pc, [ip, #3368]!	; 0xd28

0000213c <kill@plt>:
    213c:	add	ip, pc, #0, 12
    2140:	add	ip, ip, #44, 20	; 0x2c000
    2144:	ldr	pc, [ip, #3360]!	; 0xd20

00002148 <ioctl@plt>:
    2148:	add	ip, pc, #0, 12
    214c:	add	ip, ip, #44, 20	; 0x2c000
    2150:	ldr	pc, [ip, #3352]!	; 0xd18

00002154 <dup2@plt>:
    2154:	add	ip, pc, #0, 12
    2158:	add	ip, ip, #44, 20	; 0x2c000
    215c:	ldr	pc, [ip, #3344]!	; 0xd10

00002160 <localtime@plt>:
    2160:	add	ip, pc, #0, 12
    2164:	add	ip, ip, #44, 20	; 0x2c000
    2168:	ldr	pc, [ip, #3336]!	; 0xd08

0000216c <clock_gettime@plt>:
    216c:	add	ip, pc, #0, 12
    2170:	add	ip, ip, #44, 20	; 0x2c000
    2174:	ldr	pc, [ip, #3328]!	; 0xd00

00002178 <realloc@plt>:
    2178:	add	ip, pc, #0, 12
    217c:	add	ip, ip, #44, 20	; 0x2c000
    2180:	ldr	pc, [ip, #3320]!	; 0xcf8

00002184 <open64@plt>:
    2184:	add	ip, pc, #0, 12
    2188:	add	ip, ip, #44, 20	; 0x2c000
    218c:	ldr	pc, [ip, #3312]!	; 0xcf0

00002190 <bind@plt>:
    2190:	add	ip, pc, #0, 12
    2194:	add	ip, ip, #44, 20	; 0x2c000
    2198:	ldr	pc, [ip, #3304]!	; 0xce8

0000219c <fchmod@plt>:
    219c:	add	ip, pc, #0, 12
    21a0:	add	ip, ip, #44, 20	; 0x2c000
    21a4:	ldr	pc, [ip, #3296]!	; 0xce0

000021a8 <waitpid@plt>:
    21a8:	add	ip, pc, #0, 12
    21ac:	add	ip, ip, #44, 20	; 0x2c000
    21b0:	ldr	pc, [ip, #3288]!	; 0xcd8

000021b4 <strcasestr@plt>:
    21b4:	add	ip, pc, #0, 12
    21b8:	add	ip, ip, #44, 20	; 0x2c000
    21bc:	ldr	pc, [ip, #3280]!	; 0xcd0

000021c0 <tcgetpgrp@plt>:
    21c0:	add	ip, pc, #0, 12
    21c4:	add	ip, ip, #44, 20	; 0x2c000
    21c8:	ldr	pc, [ip, #3272]!	; 0xcc8

000021cc <fileno@plt>:
    21cc:	add	ip, pc, #0, 12
    21d0:	add	ip, ip, #44, 20	; 0x2c000
    21d4:	ldr	pc, [ip, #3264]!	; 0xcc0

000021d8 <__syslog_chk@plt>:
    21d8:	add	ip, pc, #0, 12
    21dc:	add	ip, ip, #44, 20	; 0x2c000
    21e0:	ldr	pc, [ip, #3256]!	; 0xcb8

000021e4 <__stack_chk_fail@plt>:
    21e4:	add	ip, pc, #0, 12
    21e8:	add	ip, ip, #44, 20	; 0x2c000
    21ec:	ldr	pc, [ip, #3248]!	; 0xcb0

000021f0 <fork@plt>:
    21f0:	add	ip, pc, #0, 12
    21f4:	add	ip, ip, #44, 20	; 0x2c000
    21f8:	ldr	pc, [ip, #3240]!	; 0xca8

000021fc <socket@plt>:
    21fc:	add	ip, pc, #0, 12
    2200:	add	ip, ip, #44, 20	; 0x2c000
    2204:	ldr	pc, [ip, #3232]!	; 0xca0

00002208 <isatty@plt>:
    2208:	add	ip, pc, #0, 12
    220c:	add	ip, ip, #44, 20	; 0x2c000
    2210:	ldr	pc, [ip, #3224]!	; 0xc98

00002214 <mkdir@plt>:
    2214:	add	ip, pc, #0, 12
    2218:	add	ip, ip, #44, 20	; 0x2c000
    221c:	ldr	pc, [ip, #3216]!	; 0xc90

00002220 <strncasecmp@plt>:
    2220:	add	ip, pc, #0, 12
    2224:	add	ip, ip, #44, 20	; 0x2c000
    2228:	ldr	pc, [ip, #3208]!	; 0xc88

0000222c <__asprintf_chk@plt>:
    222c:	add	ip, pc, #0, 12
    2230:	add	ip, ip, #44, 20	; 0x2c000
    2234:	ldr	pc, [ip, #3200]!	; 0xc80

00002238 <history@plt>:
    2238:	add	ip, pc, #0, 12
    223c:	add	ip, ip, #44, 20	; 0x2c000
    2240:	ldr	pc, [ip, #3192]!	; 0xc78

00002244 <setsockopt@plt>:
    2244:	add	ip, pc, #0, 12
    2248:	add	ip, ip, #44, 20	; 0x2c000
    224c:	ldr	pc, [ip, #3184]!	; 0xc70

00002250 <shutdown@plt>:
    2250:	add	ip, pc, #0, 12
    2254:	add	ip, ip, #44, 20	; 0x2c000
    2258:	ldr	pc, [ip, #3176]!	; 0xc68

0000225c <el_source@plt>:
    225c:	add	ip, pc, #0, 12
    2260:	add	ip, ip, #44, 20	; 0x2c000
    2264:	ldr	pc, [ip, #3168]!	; 0xc60

00002268 <raise@plt>:
    2268:	add	ip, pc, #0, 12
    226c:	add	ip, ip, #44, 20	; 0x2c000
    2270:	ldr	pc, [ip, #3160]!	; 0xc58

00002274 <__ctype_b_loc@plt>:
    2274:	add	ip, pc, #0, 12
    2278:	add	ip, ip, #44, 20	; 0x2c000
    227c:	ldr	pc, [ip, #3152]!	; 0xc50

00002280 <getuid@plt>:
    2280:	add	ip, pc, #0, 12
    2284:	add	ip, ip, #44, 20	; 0x2c000
    2288:	ldr	pc, [ip, #3144]!	; 0xc48

0000228c <sigaction@plt>:
    228c:	add	ip, pc, #0, 12
    2290:	add	ip, ip, #44, 20	; 0x2c000
    2294:	ldr	pc, [ip, #3136]!	; 0xc40

00002298 <calloc@plt>:
    2298:	add	ip, pc, #0, 12
    229c:	add	ip, ip, #44, 20	; 0x2c000
    22a0:	ldr	pc, [ip, #3128]!	; 0xc38

000022a4 <setlocale@plt>:
    22a4:	add	ip, pc, #0, 12
    22a8:	add	ip, ip, #44, 20	; 0x2c000
    22ac:	ldr	pc, [ip, #3120]!	; 0xc30

000022b0 <fgets@plt>:
    22b0:	add	ip, pc, #0, 12
    22b4:	add	ip, ip, #44, 20	; 0x2c000
    22b8:	ldr	pc, [ip, #3112]!	; 0xc28

000022bc <setvbuf@plt>:
    22bc:	add	ip, pc, #0, 12
    22c0:	add	ip, ip, #44, 20	; 0x2c000
    22c4:	ldr	pc, [ip, #3104]!	; 0xc20

000022c8 <fwrite@plt>:
    22c8:	add	ip, pc, #0, 12
    22cc:	add	ip, ip, #44, 20	; 0x2c000
    22d0:	ldr	pc, [ip, #3096]!	; 0xc18

000022d4 <memcpy@plt>:
    22d4:	add	ip, pc, #0, 12
    22d8:	add	ip, ip, #44, 20	; 0x2c000
    22dc:	ldr	pc, [ip, #3088]!	; 0xc10

000022e0 <umask@plt>:
    22e0:	add	ip, pc, #0, 12
    22e4:	add	ip, ip, #44, 20	; 0x2c000
    22e8:	ldr	pc, [ip, #3080]!	; 0xc08

000022ec <getpgrp@plt>:
    22ec:	add	ip, pc, #0, 12
    22f0:	add	ip, ip, #44, 20	; 0x2c000
    22f4:	ldr	pc, [ip, #3072]!	; 0xc00

000022f8 <geteuid@plt>:
    22f8:	add	ip, pc, #0, 12
    22fc:	add	ip, ip, #44, 20	; 0x2c000
    2300:	ldr	pc, [ip, #3064]!	; 0xbf8

00002304 <malloc@plt>:
    2304:	add	ip, pc, #0, 12
    2308:	add	ip, ip, #44, 20	; 0x2c000
    230c:	ldr	pc, [ip, #3056]!	; 0xbf0

00002310 <strlen@plt>:
    2310:	add	ip, pc, #0, 12
    2314:	add	ip, ip, #44, 20	; 0x2c000
    2318:	ldr	pc, [ip, #3048]!	; 0xbe8

0000231c <__snprintf_chk@plt>:
    231c:	add	ip, pc, #0, 12
    2320:	add	ip, ip, #44, 20	; 0x2c000
    2324:	ldr	pc, [ip, #3040]!	; 0xbe0

00002328 <__memmove_chk@plt>:
    2328:	add	ip, pc, #0, 12
    232c:	add	ip, ip, #44, 20	; 0x2c000
    2330:	ldr	pc, [ip, #3032]!	; 0xbd8

00002334 <getcwd@plt>:
    2334:	add	ip, pc, #0, 12
    2338:	add	ip, ip, #44, 20	; 0x2c000
    233c:	ldr	pc, [ip, #3024]!	; 0xbd0

00002340 <fclose@plt>:
    2340:	add	ip, pc, #0, 12
    2344:	add	ip, ip, #44, 20	; 0x2c000
    2348:	ldr	pc, [ip, #3016]!	; 0xbc8

0000234c <write@plt>:
    234c:	add	ip, pc, #0, 12
    2350:	add	ip, ip, #44, 20	; 0x2c000
    2354:	ldr	pc, [ip, #3008]!	; 0xbc0

00002358 <lseek64@plt>:
    2358:	add	ip, pc, #0, 12
    235c:	add	ip, ip, #44, 20	; 0x2c000
    2360:	ldr	pc, [ip, #3000]!	; 0xbb8

00002364 <el_init@plt>:
    2364:	add	ip, pc, #0, 12
    2368:	add	ip, ip, #44, 20	; 0x2c000
    236c:	ldr	pc, [ip, #2992]!	; 0xbb0

00002370 <__ctype_get_mb_cur_max@plt>:
    2370:	add	ip, pc, #0, 12
    2374:	add	ip, ip, #44, 20	; 0x2c000
    2378:	ldr	pc, [ip, #2984]!	; 0xba8

0000237c <_exit@plt>:
    237c:	add	ip, pc, #0, 12
    2380:	add	ip, ip, #44, 20	; 0x2c000
    2384:	ldr	pc, [ip, #2976]!	; 0xba0

00002388 <strcmp@plt>:
    2388:	add	ip, pc, #0, 12
    238c:	add	ip, ip, #44, 20	; 0x2c000
    2390:	ldr	pc, [ip, #2968]!	; 0xb98

00002394 <time@plt>:
    2394:	add	ip, pc, #0, 12
    2398:	add	ip, ip, #44, 20	; 0x2c000
    239c:	ldr	pc, [ip, #2960]!	; 0xb90

000023a0 <utimes@plt>:
    23a0:	add	ip, pc, #0, 12
    23a4:	add	ip, ip, #44, 20	; 0x2c000
    23a8:	ldr	pc, [ip, #2952]!	; 0xb88

000023ac <__errno_location@plt>:
    23ac:	add	ip, pc, #0, 12
    23b0:	add	ip, ip, #44, 20	; 0x2c000
    23b4:	ldr	pc, [ip, #2944]!	; 0xb80

000023b8 <memchr@plt>:
    23b8:	add	ip, pc, #0, 12
    23bc:	add	ip, ip, #44, 20	; 0x2c000
    23c0:	ldr	pc, [ip, #2936]!	; 0xb78

000023c4 <__lxstat64@plt>:
    23c4:	add	ip, pc, #0, 12
    23c8:	add	ip, ip, #44, 20	; 0x2c000
    23cc:	ldr	pc, [ip, #2928]!	; 0xb70

000023d0 <el_set@plt>:
    23d0:	add	ip, pc, #0, 12
    23d4:	add	ip, ip, #44, 20	; 0x2c000
    23d8:	ldr	pc, [ip, #2920]!	; 0xb68

000023dc <fopen64@plt>:
    23dc:	add	ip, pc, #0, 12
    23e0:	add	ip, ip, #44, 20	; 0x2c000
    23e4:	ldr	pc, [ip, #2912]!	; 0xb60

000023e8 <gai_strerror@plt>:
    23e8:	add	ip, pc, #0, 12
    23ec:	add	ip, ip, #44, 20	; 0x2c000
    23f0:	ldr	pc, [ip, #2904]!	; 0xb58

000023f4 <__xpg_basename@plt>:
    23f4:	add	ip, pc, #0, 12
    23f8:	add	ip, ip, #44, 20	; 0x2c000
    23fc:	ldr	pc, [ip, #2896]!	; 0xb50

00002400 <sigemptyset@plt>:
    2400:	add	ip, pc, #0, 12
    2404:	add	ip, ip, #44, 20	; 0x2c000
    2408:	ldr	pc, [ip, #2888]!	; 0xb48

0000240c <strrchr@plt>:
    240c:	add	ip, pc, #0, 12
    2410:	add	ip, ip, #44, 20	; 0x2c000
    2414:	ldr	pc, [ip, #2880]!	; 0xb40

00002418 <__vasprintf_chk@plt>:
    2418:	add	ip, pc, #0, 12
    241c:	add	ip, ip, #44, 20	; 0x2c000
    2420:	ldr	pc, [ip, #2872]!	; 0xb38

00002424 <__ctype_tolower_loc@plt>:
    2424:	add	ip, pc, #0, 12
    2428:	add	ip, ip, #44, 20	; 0x2c000
    242c:	ldr	pc, [ip, #2864]!	; 0xb30

00002430 <alarm@plt>:
    2430:	add	ip, pc, #0, 12
    2434:	add	ip, ip, #44, 20	; 0x2c000
    2438:	ldr	pc, [ip, #2856]!	; 0xb28

0000243c <openlog@plt>:
    243c:	add	ip, pc, #0, 12
    2440:	add	ip, ip, #44, 20	; 0x2c000
    2444:	ldr	pc, [ip, #2848]!	; 0xb20

00002448 <el_end@plt>:
    2448:	add	ip, pc, #0, 12
    244c:	add	ip, ip, #44, 20	; 0x2c000
    2450:	ldr	pc, [ip, #2840]!	; 0xb18

00002454 <fputs@plt>:
    2454:	add	ip, pc, #0, 12
    2458:	add	ip, ip, #44, 20	; 0x2c000
    245c:	ldr	pc, [ip, #2832]!	; 0xb10

00002460 <getenv@plt>:
    2460:	add	ip, pc, #0, 12
    2464:	add	ip, ip, #44, 20	; 0x2c000
    2468:	ldr	pc, [ip, #2824]!	; 0xb08

0000246c <__libc_start_main@plt>:
    246c:	add	ip, pc, #0, 12
    2470:	add	ip, ip, #44, 20	; 0x2c000
    2474:	ldr	pc, [ip, #2816]!	; 0xb00

00002478 <execvp@plt>:
    2478:	add	ip, pc, #0, 12
    247c:	add	ip, ip, #44, 20	; 0x2c000
    2480:	ldr	pc, [ip, #2808]!	; 0xaf8

00002484 <__gmon_start__@plt>:
    2484:	add	ip, pc, #0, 12
    2488:	add	ip, ip, #44, 20	; 0x2c000
    248c:	ldr	pc, [ip, #2800]!	; 0xaf0

00002490 <strchr@plt>:
    2490:	add	ip, pc, #0, 12
    2494:	add	ip, ip, #44, 20	; 0x2c000
    2498:	ldr	pc, [ip, #2792]!	; 0xae8

0000249c <__cxa_finalize@plt>:
    249c:	add	ip, pc, #0, 12
    24a0:	add	ip, ip, #44, 20	; 0x2c000
    24a4:	ldr	pc, [ip, #2784]!	; 0xae0

000024a8 <__printf_chk@plt>:
    24a8:	add	ip, pc, #0, 12
    24ac:	add	ip, ip, #44, 20	; 0x2c000
    24b0:	ldr	pc, [ip, #2776]!	; 0xad8

000024b4 <el_line@plt>:
    24b4:	add	ip, pc, #0, 12
    24b8:	add	ip, ip, #44, 20	; 0x2c000
    24bc:	ldr	pc, [ip, #2768]!	; 0xad0

Disassembly of section .text:

000024c0 <__libc_csu_init@@Base-0x17a24>:
    24c0:	push	{r3, lr}
    24c4:	mov	r1, #0
    24c8:	mov	r0, #11
    24cc:	bl	146b8 <el_line@plt+0x12204>
    24d0:	mov	r0, #11
    24d4:	bl	2268 <raise@plt>
    24d8:	mvn	r0, #0
    24dc:	pop	{r3, pc}
    24e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    24e4:	sub	sp, sp, #116	; 0x74
    24e8:	ldr	r7, [pc, #2404]	; 2e54 <el_line@plt+0x9a0>
    24ec:	mov	r4, r1
    24f0:	ldr	r3, [pc, #2400]	; 2e58 <el_line@plt+0x9a4>
    24f4:	mov	r1, #0
    24f8:	add	r7, pc, r7
    24fc:	mov	r5, r0
    2500:	mov	r0, #0
    2504:	strd	r0, [sp, #24]
    2508:	ldr	r3, [r7, r3]
    250c:	mov	ip, #64	; 0x40
    2510:	ldr	r2, [pc, #2372]	; 2e5c <el_line@plt+0x9a8>
    2514:	add	r6, sp, #96	; 0x60
    2518:	str	ip, [sp, #52]	; 0x34
    251c:	mov	ip, #32768	; 0x8000
    2520:	ldr	r3, [r3]
    2524:	add	r2, pc, r2
    2528:	str	ip, [sp, #48]	; 0x30
    252c:	mov	ip, #3
    2530:	str	ip, [sp, #44]	; 0x2c
    2534:	mov	ip, #2
    2538:	str	ip, [sp, #36]	; 0x24
    253c:	mov	fp, #0
    2540:	ldr	ip, [pc, #2328]	; 2e60 <el_line@plt+0x9ac>
    2544:	mov	r8, fp
    2548:	str	r2, [sp, #40]	; 0x28
    254c:	mov	sl, fp
    2550:	str	r3, [sp, #108]	; 0x6c
    2554:	add	ip, pc, ip
    2558:	str	r2, [sp, #20]
    255c:	mov	r9, fp
    2560:	str	ip, [sp, #56]	; 0x38
    2564:	bl	11558 <el_line@plt+0xf0a4>
    2568:	bl	12e38 <el_line@plt+0x10984>
    256c:	ldr	ip, [pc, #2288]	; 2e64 <el_line@plt+0x9b0>
    2570:	add	ip, pc, ip
    2574:	str	ip, [sp, #60]	; 0x3c
    2578:	bl	1450c <el_line@plt+0x12058>
    257c:	ldr	r0, [r4]
    2580:	bl	1466c <el_line@plt+0x121b8>
    2584:	ldr	r3, [pc, #2268]	; 2e68 <el_line@plt+0x9b4>
    2588:	ldr	ip, [pc, #2268]	; 2e6c <el_line@plt+0x9b8>
    258c:	ldr	r1, [pc, #2268]	; 2e70 <el_line@plt+0x9bc>
    2590:	ldr	r3, [r7, r3]
    2594:	add	ip, pc, ip
    2598:	str	ip, [sp, #64]	; 0x40
    259c:	add	r1, pc, r1
    25a0:	ldr	ip, [pc, #2252]	; 2e74 <el_line@plt+0x9c0>
    25a4:	ldr	r2, [sp, #20]
    25a8:	add	ip, pc, ip
    25ac:	str	ip, [sp, #68]	; 0x44
    25b0:	ldr	ip, [pc, #2240]	; 2e78 <el_line@plt+0x9c4>
    25b4:	str	fp, [sp, #96]	; 0x60
    25b8:	add	ip, pc, ip
    25bc:	str	ip, [sp, #72]	; 0x48
    25c0:	ldr	ip, [pc, #2228]	; 2e7c <el_line@plt+0x9c8>
    25c4:	str	fp, [sp, #100]	; 0x64
    25c8:	add	ip, pc, ip
    25cc:	str	fp, [sp, #104]	; 0x68
    25d0:	str	ip, [sp, #76]	; 0x4c
    25d4:	str	r0, [r3]
    25d8:	mov	r0, r6
    25dc:	bl	1271c <el_line@plt+0x10268>
    25e0:	ldr	r1, [pc, #2200]	; 2e80 <el_line@plt+0x9cc>
    25e4:	mov	r0, r6
    25e8:	add	r1, pc, r1
    25ec:	bl	1271c <el_line@plt+0x10268>
    25f0:	ldr	r1, [pc, #2188]	; 2e84 <el_line@plt+0x9d0>
    25f4:	mov	r0, r6
    25f8:	add	r1, pc, r1
    25fc:	bl	1271c <el_line@plt+0x10268>
    2600:	ldr	r1, [pc, #2176]	; 2e88 <el_line@plt+0x9d4>
    2604:	mov	r0, r6
    2608:	add	r1, pc, r1
    260c:	bl	1271c <el_line@plt+0x10268>
    2610:	ldr	r1, [pc, #2164]	; 2e8c <el_line@plt+0x9d8>
    2614:	mov	r0, r6
    2618:	add	r1, pc, r1
    261c:	bl	1271c <el_line@plt+0x10268>
    2620:	ldr	r2, [pc, #2152]	; 2e90 <el_line@plt+0x9dc>
    2624:	ldr	r3, [pc, #2152]	; 2e94 <el_line@plt+0x9e0>
    2628:	ldr	r2, [r7, r2]
    262c:	add	r3, pc, r3
    2630:	ldr	r2, [r2]
    2634:	str	r2, [r3]
    2638:	ldr	r2, [pc, #2136]	; 2e98 <el_line@plt+0x9e4>
    263c:	mov	r0, r5
    2640:	mov	r1, r4
    2644:	add	r2, pc, r2
    2648:	bl	1531c <el_line@plt+0x12e68>
    264c:	cmn	r0, #1
    2650:	beq	2a3c <el_line@plt+0x588>
    2654:	sub	r3, r0, #49	; 0x31
    2658:	cmp	r3, #69	; 0x45
    265c:	addls	pc, pc, r3, lsl #2
    2660:	b	2af0 <el_line@plt+0x63c>
    2664:	b	2788 <el_line@plt+0x2d4>
    2668:	b	277c <el_line@plt+0x2c8>
    266c:	b	2af0 <el_line@plt+0x63c>
    2670:	b	28ec <el_line@plt+0x438>
    2674:	b	2af0 <el_line@plt+0x63c>
    2678:	b	28ec <el_line@plt+0x438>
    267c:	b	2af0 <el_line@plt+0x63c>
    2680:	b	2af0 <el_line@plt+0x63c>
    2684:	b	2af0 <el_line@plt+0x63c>
    2688:	b	2af0 <el_line@plt+0x63c>
    268c:	b	2af0 <el_line@plt+0x63c>
    2690:	b	2af0 <el_line@plt+0x63c>
    2694:	b	2af0 <el_line@plt+0x63c>
    2698:	b	2af0 <el_line@plt+0x63c>
    269c:	b	2af0 <el_line@plt+0x63c>
    26a0:	b	2af0 <el_line@plt+0x63c>
    26a4:	b	2af0 <el_line@plt+0x63c>
    26a8:	b	28a8 <el_line@plt+0x3f4>
    26ac:	b	28ec <el_line@plt+0x438>
    26b0:	b	2898 <el_line@plt+0x3e4>
    26b4:	b	2af0 <el_line@plt+0x63c>
    26b8:	b	2864 <el_line@plt+0x3b0>
    26bc:	b	2af0 <el_line@plt+0x63c>
    26c0:	b	2af0 <el_line@plt+0x63c>
    26c4:	b	2af0 <el_line@plt+0x63c>
    26c8:	b	2af0 <el_line@plt+0x63c>
    26cc:	b	2af0 <el_line@plt+0x63c>
    26d0:	b	2af0 <el_line@plt+0x63c>
    26d4:	b	2af0 <el_line@plt+0x63c>
    26d8:	b	2af0 <el_line@plt+0x63c>
    26dc:	b	2af0 <el_line@plt+0x63c>
    26e0:	b	2844 <el_line@plt+0x390>
    26e4:	b	2af0 <el_line@plt+0x63c>
    26e8:	b	2800 <el_line@plt+0x34c>
    26ec:	b	27dc <el_line@plt+0x328>
    26f0:	b	2af0 <el_line@plt+0x63c>
    26f4:	b	2af0 <el_line@plt+0x63c>
    26f8:	b	2af0 <el_line@plt+0x63c>
    26fc:	b	2af0 <el_line@plt+0x63c>
    2700:	b	2af0 <el_line@plt+0x63c>
    2704:	b	2af0 <el_line@plt+0x63c>
    2708:	b	2af0 <el_line@plt+0x63c>
    270c:	b	2af0 <el_line@plt+0x63c>
    2710:	b	2af0 <el_line@plt+0x63c>
    2714:	b	2af0 <el_line@plt+0x63c>
    2718:	b	2af0 <el_line@plt+0x63c>
    271c:	b	2af0 <el_line@plt+0x63c>
    2720:	b	2af0 <el_line@plt+0x63c>
    2724:	b	27c8 <el_line@plt+0x314>
    2728:	b	2974 <el_line@plt+0x4c0>
    272c:	b	2864 <el_line@plt+0x3b0>
    2730:	b	2af0 <el_line@plt+0x63c>
    2734:	b	2af0 <el_line@plt+0x63c>
    2738:	b	2964 <el_line@plt+0x4b0>
    273c:	b	2af0 <el_line@plt+0x63c>
    2740:	b	2af0 <el_line@plt+0x63c>
    2744:	b	2864 <el_line@plt+0x3b0>
    2748:	b	2af0 <el_line@plt+0x63c>
    274c:	b	2af0 <el_line@plt+0x63c>
    2750:	b	2918 <el_line@plt+0x464>
    2754:	b	2af0 <el_line@plt+0x63c>
    2758:	b	2af0 <el_line@plt+0x63c>
    275c:	b	2864 <el_line@plt+0x3b0>
    2760:	b	2904 <el_line@plt+0x450>
    2764:	b	29fc <el_line@plt+0x548>
    2768:	b	29ec <el_line@plt+0x538>
    276c:	b	27b8 <el_line@plt+0x304>
    2770:	b	2af0 <el_line@plt+0x63c>
    2774:	b	2af0 <el_line@plt+0x63c>
    2778:	b	279c <el_line@plt+0x2e8>
    277c:	mov	ip, #2
    2780:	str	ip, [sp, #36]	; 0x24
    2784:	b	2638 <el_line@plt+0x184>
    2788:	cmp	sl, #0
    278c:	beq	2c54 <el_line@plt+0x7a0>
    2790:	mov	ip, #1
    2794:	str	ip, [sp, #36]	; 0x24
    2798:	b	2638 <el_line@plt+0x184>
    279c:	cmp	r9, #2
    27a0:	ble	2b04 <el_line@plt+0x650>
    27a4:	mov	r0, r9
    27a8:	mov	r1, #1
    27ac:	bl	192bc <el_line@plt+0x16e08>
    27b0:	mov	r9, r0
    27b4:	b	2638 <el_line@plt+0x184>
    27b8:	ldr	r3, [pc, #1756]	; 2e9c <el_line@plt+0x9e8>
    27bc:	ldr	r3, [r7, r3]
    27c0:	ldr	sl, [r3]
    27c4:	b	2638 <el_line@plt+0x184>
    27c8:	ldr	r3, [pc, #1744]	; 2ea0 <el_line@plt+0x9ec>
    27cc:	mov	r2, #1
    27d0:	add	r3, pc, r3
    27d4:	str	r2, [r3, #528]	; 0x210
    27d8:	b	2638 <el_line@plt+0x184>
    27dc:	ldr	r3, [pc, #1720]	; 2e9c <el_line@plt+0x9e8>
    27e0:	mov	r0, r6
    27e4:	mov	r1, #0
    27e8:	ldr	r2, [sp, #56]	; 0x38
    27ec:	ldr	r3, [r7, r3]
    27f0:	ldr	r3, [r3]
    27f4:	str	r3, [sp, #40]	; 0x28
    27f8:	bl	12800 <el_line@plt+0x1034c>
    27fc:	b	2638 <el_line@plt+0x184>
    2800:	ldr	r3, [pc, #1684]	; 2e9c <el_line@plt+0x9e8>
    2804:	add	r1, sp, #88	; 0x58
    2808:	mov	r2, #10
    280c:	ldr	fp, [r7, r3]
    2810:	ldr	r0, [fp]
    2814:	bl	1f14 <strtol@plt>
    2818:	cmp	r0, #0
    281c:	str	r0, [sp, #52]	; 0x34
    2820:	beq	2834 <el_line@plt+0x380>
    2824:	ldr	r3, [sp, #88]	; 0x58
    2828:	ldrb	r3, [r3]
    282c:	cmp	r3, #0
    2830:	beq	2638 <el_line@plt+0x184>
    2834:	ldr	r0, [pc, #1640]	; 2ea4 <el_line@plt+0x9f0>
    2838:	ldr	r1, [fp]
    283c:	add	r0, pc, r0
    2840:	bl	10980 <el_line@plt+0xe4cc>
    2844:	ldr	r3, [pc, #1616]	; 2e9c <el_line@plt+0x9e8>
    2848:	mov	r0, r6
    284c:	ldr	r1, [pc, #1620]	; 2ea8 <el_line@plt+0x9f4>
    2850:	ldr	r3, [r7, r3]
    2854:	add	r1, pc, r1
    2858:	ldr	r2, [r3]
    285c:	bl	1271c <el_line@plt+0x10268>
    2860:	b	2638 <el_line@plt+0x184>
    2864:	ldr	r1, [pc, #1600]	; 2eac <el_line@plt+0x9f8>
    2868:	mov	r2, r0
    286c:	mov	r0, r6
    2870:	add	r1, pc, r1
    2874:	bl	1271c <el_line@plt+0x10268>
    2878:	ldr	r3, [pc, #1564]	; 2e9c <el_line@plt+0x9e8>
    287c:	ldr	r1, [pc, #1580]	; 2eb0 <el_line@plt+0x9fc>
    2880:	mov	r0, r6
    2884:	ldr	r3, [r7, r3]
    2888:	add	r1, pc, r1
    288c:	ldr	r2, [r3]
    2890:	bl	1271c <el_line@plt+0x10268>
    2894:	b	2638 <el_line@plt+0x184>
    2898:	ldr	r3, [pc, #1532]	; 2e9c <el_line@plt+0x9e8>
    289c:	ldr	r3, [r7, r3]
    28a0:	ldr	r8, [r3]
    28a4:	b	2638 <el_line@plt+0x184>
    28a8:	ldr	r3, [pc, #1516]	; 2e9c <el_line@plt+0x9e8>
    28ac:	add	r1, sp, #88	; 0x58
    28b0:	mov	r2, #10
    28b4:	ldr	fp, [r7, r3]
    28b8:	ldr	r0, [fp]
    28bc:	bl	1f14 <strtol@plt>
    28c0:	cmp	r0, #0
    28c4:	str	r0, [sp, #48]	; 0x30
    28c8:	beq	28dc <el_line@plt+0x428>
    28cc:	ldr	r3, [sp, #88]	; 0x58
    28d0:	ldrb	r3, [r3]
    28d4:	cmp	r3, #0
    28d8:	beq	2638 <el_line@plt+0x184>
    28dc:	ldr	r0, [pc, #1488]	; 2eb4 <el_line@plt+0xa00>
    28e0:	ldr	r1, [fp]
    28e4:	add	r0, pc, r0
    28e8:	bl	10980 <el_line@plt+0xe4cc>
    28ec:	ldr	r1, [pc, #1476]	; 2eb8 <el_line@plt+0xa04>
    28f0:	mov	r2, r0
    28f4:	mov	r0, r6
    28f8:	add	r1, pc, r1
    28fc:	bl	1271c <el_line@plt+0x10268>
    2900:	b	2638 <el_line@plt+0x184>
    2904:	ldr	r3, [pc, #1456]	; 2ebc <el_line@plt+0xa08>
    2908:	mov	r2, #1
    290c:	add	r3, pc, r3
    2910:	str	r2, [r3, #540]	; 0x21c
    2914:	b	2638 <el_line@plt+0x184>
    2918:	ldr	r1, [pc, #1404]	; 2e9c <el_line@plt+0x9e8>
    291c:	mov	r2, #104857600	; 0x6400000
    2920:	mov	r3, #0
    2924:	add	r0, sp, #92	; 0x5c
    2928:	ldr	r1, [r7, r1]
    292c:	strd	r2, [sp]
    2930:	mov	r3, #0
    2934:	str	r0, [sp, #8]
    2938:	mov	r2, #1
    293c:	ldr	r0, [r1]
    2940:	bl	17acc <el_line@plt+0x15618>
    2944:	ldr	r3, [sp, #92]	; 0x5c
    2948:	cmp	r3, #0
    294c:	bne	2af0 <el_line@plt+0x63c>
    2950:	mov	r2, #1024	; 0x400
    2954:	mov	r3, #0
    2958:	bl	19400 <el_line@plt+0x16f4c>
    295c:	strd	r0, [sp, #24]
    2960:	b	2638 <el_line@plt+0x184>
    2964:	ldr	ip, [sp, #64]	; 0x40
    2968:	mov	r3, #1
    296c:	str	r3, [ip, #544]	; 0x220
    2970:	b	2638 <el_line@plt+0x184>
    2974:	ldr	ip, [sp, #68]	; 0x44
    2978:	ldr	r3, [ip, #548]	; 0x224
    297c:	cmp	r3, #0
    2980:	bne	2cb0 <el_line@plt+0x7fc>
    2984:	ldr	r3, [pc, #1296]	; 2e9c <el_line@plt+0x9e8>
    2988:	ldr	fp, [r7, r3]
    298c:	ldr	r0, [fp]
    2990:	ldrb	r3, [r0]
    2994:	cmp	r3, #45	; 0x2d
    2998:	beq	2af4 <el_line@plt+0x640>
    299c:	ldr	r1, [pc, #1308]	; 2ec0 <el_line@plt+0xa0c>
    29a0:	add	r1, pc, r1
    29a4:	bl	23dc <fopen64@plt>
    29a8:	ldr	r3, [pc, #1300]	; 2ec4 <el_line@plt+0xa10>
    29ac:	add	r3, pc, r3
    29b0:	cmp	r0, #0
    29b4:	str	r0, [r3]
    29b8:	beq	2d3c <el_line@plt+0x888>
    29bc:	ldr	r3, [pc, #1284]	; 2ec8 <el_line@plt+0xa14>
    29c0:	mov	r0, r6
    29c4:	ldr	ip, [sp, #72]	; 0x48
    29c8:	mov	r2, #1
    29cc:	add	r3, pc, r3
    29d0:	ldr	r1, [sp, #76]	; 0x4c
    29d4:	str	r2, [r3, #548]	; 0x224
    29d8:	str	r2, [r3, #532]	; 0x214
    29dc:	mov	r3, #0
    29e0:	str	r3, [ip, #4]
    29e4:	bl	1271c <el_line@plt+0x10268>
    29e8:	b	2638 <el_line@plt+0x184>
    29ec:	ldr	ip, [sp, #60]	; 0x3c
    29f0:	mov	r3, #1
    29f4:	str	r3, [ip, #536]	; 0x218
    29f8:	b	2638 <el_line@plt+0x184>
    29fc:	ldr	r2, [pc, #1224]	; 2ecc <el_line@plt+0xa18>
    2a00:	mov	ip, #1
    2a04:	ldr	r3, [pc, #1220]	; 2ed0 <el_line@plt+0xa1c>
    2a08:	mov	r0, r6
    2a0c:	add	r2, pc, r2
    2a10:	ldr	r1, [pc, #1212]	; 2ed4 <el_line@plt+0xa20>
    2a14:	add	r3, pc, r3
    2a18:	str	ip, [r2, #532]	; 0x214
    2a1c:	add	r1, pc, r1
    2a20:	mov	r2, #0
    2a24:	str	r2, [r3, #4]
    2a28:	mov	r2, #113	; 0x71
    2a2c:	bl	1271c <el_line@plt+0x10268>
    2a30:	mov	ip, #2
    2a34:	str	ip, [sp, #44]	; 0x2c
    2a38:	b	2638 <el_line@plt+0x184>
    2a3c:	mov	r0, #2
    2a40:	bl	2208 <isatty@plt>
    2a44:	cmp	r0, #0
    2a48:	ldreq	r3, [pc, #1160]	; 2ed8 <el_line@plt+0xa24>
    2a4c:	addeq	r3, pc, r3
    2a50:	streq	r0, [r3, #4]
    2a54:	mov	r2, #1
    2a58:	ldr	r1, [sp, #44]	; 0x2c
    2a5c:	mov	r3, r2
    2a60:	ldr	r0, [r4]
    2a64:	bl	10dd4 <el_line@plt+0xe920>
    2a68:	cmp	r8, #0
    2a6c:	bne	2b28 <el_line@plt+0x674>
    2a70:	ldr	r3, [pc, #1124]	; 2edc <el_line@plt+0xa28>
    2a74:	ldr	r9, [r7, r3]
    2a78:	ldr	fp, [r9]
    2a7c:	cmp	fp, r5
    2a80:	beq	2af0 <el_line@plt+0x63c>
    2a84:	mov	r0, fp
    2a88:	mov	r1, #2
    2a8c:	bl	192bc <el_line@plt+0x16e08>
    2a90:	cmp	r5, r0
    2a94:	bgt	2af0 <el_line@plt+0x63c>
    2a98:	ldr	r0, [r4, fp, lsl #2]
    2a9c:	bl	1163c <el_line@plt+0xf188>
    2aa0:	ldr	r3, [r9]
    2aa4:	mov	r1, #64	; 0x40
    2aa8:	add	r3, r3, #1
    2aac:	ldr	r5, [r4, r3, lsl #2]
    2ab0:	mov	fp, r0
    2ab4:	bl	240c <strrchr@plt>
    2ab8:	subs	r4, r0, #0
    2abc:	beq	2ce8 <el_line@plt+0x834>
    2ac0:	strb	r8, [r4]
    2ac4:	ldrb	r3, [fp]
    2ac8:	cmp	r3, #0
    2acc:	bne	2cbc <el_line@plt+0x808>
    2ad0:	ldr	r0, [pc, #1032]	; 2ee0 <el_line@plt+0xa2c>
    2ad4:	mov	r1, #1
    2ad8:	ldr	r3, [pc, #1028]	; 2ee4 <el_line@plt+0xa30>
    2adc:	add	r0, pc, r0
    2ae0:	ldr	r3, [r7, r3]
    2ae4:	mov	r2, #17
    2ae8:	ldr	r3, [r3]
    2aec:	bl	22c8 <fwrite@plt>
    2af0:	bl	4b64 <el_line@plt+0x26b0>
    2af4:	ldrb	r3, [r0, #1]
    2af8:	cmp	r3, #0
    2afc:	beq	29bc <el_line@plt+0x508>
    2b00:	b	299c <el_line@plt+0x4e8>
    2b04:	ldr	r1, [pc, #988]	; 2ee8 <el_line@plt+0xa34>
    2b08:	mov	r0, r6
    2b0c:	add	r1, pc, r1
    2b10:	bl	1271c <el_line@plt+0x10268>
    2b14:	mov	r0, r9
    2b18:	mov	r1, #5
    2b1c:	bl	192bc <el_line@plt+0x16e08>
    2b20:	str	r0, [sp, #44]	; 0x2c
    2b24:	b	27a4 <el_line@plt+0x2f0>
    2b28:	ldr	r1, [pc, #956]	; 2eec <el_line@plt+0xa38>
    2b2c:	mov	r0, r6
    2b30:	mov	r4, #0
    2b34:	str	r4, [sp, #96]	; 0x60
    2b38:	add	r1, pc, r1
    2b3c:	mov	r5, r4
    2b40:	bl	1271c <el_line@plt+0x10268>
    2b44:	mov	r0, r8
    2b48:	ldr	r1, [sp, #96]	; 0x60
    2b4c:	add	r2, sp, #80	; 0x50
    2b50:	add	r3, sp, #84	; 0x54
    2b54:	mov	r9, r4
    2b58:	bl	4bc4 <el_line@plt+0x2710>
    2b5c:	mov	r0, r6
    2b60:	bl	128c4 <el_line@plt+0x10410>
    2b64:	ldrd	r0, [sp, #24]
    2b68:	ldr	r2, [sp, #48]	; 0x30
    2b6c:	ldr	r3, [sp, #52]	; 0x34
    2b70:	strd	r0, [sp]
    2b74:	ldr	r0, [sp, #80]	; 0x50
    2b78:	ldr	r1, [sp, #84]	; 0x54
    2b7c:	bl	9ef4 <el_line@plt+0x7a40>
    2b80:	subs	r6, r0, #0
    2b84:	beq	2ca4 <el_line@plt+0x7f0>
    2b88:	ldr	r3, [pc, #864]	; 2ef0 <el_line@plt+0xa3c>
    2b8c:	add	r3, pc, r3
    2b90:	ldr	r3, [r3, #532]	; 0x214
    2b94:	cmp	r3, #0
    2b98:	bne	2bc4 <el_line@plt+0x710>
    2b9c:	cmp	r8, #0
    2ba0:	ldr	r0, [pc, #828]	; 2ee4 <el_line@plt+0xa30>
    2ba4:	beq	2c84 <el_line@plt+0x7d0>
    2ba8:	ldr	r0, [r7, r0]
    2bac:	mov	r3, r8
    2bb0:	ldr	r2, [pc, #828]	; 2ef4 <el_line@plt+0xa40>
    2bb4:	mov	r1, #1
    2bb8:	add	r2, pc, r2
    2bbc:	ldr	r0, [r0]
    2bc0:	bl	2028 <__fprintf_chk@plt>
    2bc4:	mov	r2, r5
    2bc8:	mov	r1, r4
    2bcc:	mov	r0, r6
    2bd0:	bl	8b3c <el_line@plt+0x6688>
    2bd4:	mov	r1, #2
    2bd8:	mov	r5, r0
    2bdc:	ldr	r0, [sp, #80]	; 0x50
    2be0:	bl	2250 <shutdown@plt>
    2be4:	mov	r1, #2
    2be8:	ldr	r0, [sp, #84]	; 0x54
    2bec:	bl	2250 <shutdown@plt>
    2bf0:	ldr	r0, [sp, #80]	; 0x50
    2bf4:	bl	20dc <close@plt>
    2bf8:	ldr	r0, [sp, #84]	; 0x54
    2bfc:	bl	20dc <close@plt>
    2c00:	ldr	r3, [pc, #752]	; 2ef8 <el_line@plt+0xa44>
    2c04:	add	r3, pc, r3
    2c08:	ldr	r3, [r3, #548]	; 0x224
    2c0c:	cmp	r3, #0
    2c10:	bne	2c74 <el_line@plt+0x7c0>
    2c14:	ldr	r4, [pc, #736]	; 2efc <el_line@plt+0xa48>
    2c18:	add	r4, pc, r4
    2c1c:	b	2c30 <el_line@plt+0x77c>
    2c20:	bl	23ac <__errno_location@plt>
    2c24:	ldr	r0, [r0]
    2c28:	cmp	r0, #4
    2c2c:	bne	2c60 <el_line@plt+0x7ac>
    2c30:	mov	r1, #0
    2c34:	ldr	r0, [r4]
    2c38:	mov	r2, r1
    2c3c:	bl	21a8 <waitpid@plt>
    2c40:	cmn	r0, #1
    2c44:	beq	2c20 <el_line@plt+0x76c>
    2c48:	adds	r0, r5, #0
    2c4c:	movne	r0, #1
    2c50:	bl	1f8c <exit@plt>
    2c54:	ldr	sl, [pc, #676]	; 2f00 <el_line@plt+0xa4c>
    2c58:	add	sl, pc, sl
    2c5c:	b	2790 <el_line@plt+0x2dc>
    2c60:	bl	1fa4 <strerror@plt>
    2c64:	mov	r1, r0
    2c68:	ldr	r0, [pc, #660]	; 2f04 <el_line@plt+0xa50>
    2c6c:	add	r0, pc, r0
    2c70:	bl	10980 <el_line@plt+0xe4cc>
    2c74:	ldr	r3, [pc, #652]	; 2f08 <el_line@plt+0xa54>
    2c78:	ldr	r0, [pc, r3]
    2c7c:	bl	2340 <fclose@plt>
    2c80:	b	2c14 <el_line@plt+0x760>
    2c84:	ldr	r0, [r7, r0]
    2c88:	mov	r3, r9
    2c8c:	ldr	r2, [pc, #632]	; 2f0c <el_line@plt+0xa58>
    2c90:	mov	r1, #1
    2c94:	add	r2, pc, r2
    2c98:	ldr	r0, [r0]
    2c9c:	bl	2028 <__fprintf_chk@plt>
    2ca0:	b	2bc4 <el_line@plt+0x710>
    2ca4:	ldr	r0, [pc, #612]	; 2f10 <el_line@plt+0xa5c>
    2ca8:	add	r0, pc, r0
    2cac:	bl	10980 <el_line@plt+0xe4cc>
    2cb0:	ldr	r0, [pc, #604]	; 2f14 <el_line@plt+0xa60>
    2cb4:	add	r0, pc, r0
    2cb8:	bl	10980 <el_line@plt+0xe4cc>
    2cbc:	ldr	r1, [pc, #596]	; 2f18 <el_line@plt+0xa64>
    2cc0:	mov	r0, r6
    2cc4:	add	r4, r4, #1
    2cc8:	add	r1, pc, r1
    2ccc:	bl	1271c <el_line@plt+0x10268>
    2cd0:	ldr	r1, [pc, #580]	; 2f1c <el_line@plt+0xa68>
    2cd4:	mov	r2, fp
    2cd8:	mov	r0, r6
    2cdc:	add	r1, pc, r1
    2ce0:	mov	fp, r4
    2ce4:	bl	1271c <el_line@plt+0x10268>
    2ce8:	mov	r0, fp
    2cec:	bl	124f4 <el_line@plt+0x10040>
    2cf0:	cmp	r0, #0
    2cf4:	streq	r0, [sp, #88]	; 0x58
    2cf8:	addne	r3, r0, #1
    2cfc:	strne	r3, [sp, #88]	; 0x58
    2d00:	moveq	r4, r0
    2d04:	movne	r3, #0
    2d08:	strbne	r3, [r0]
    2d0c:	mov	r0, fp
    2d10:	ldrne	r4, [sp, #88]	; 0x58
    2d14:	bl	124b4 <el_line@plt+0x10000>
    2d18:	ldrb	r3, [r0]
    2d1c:	mov	r9, r0
    2d20:	cmp	r3, #0
    2d24:	bne	2d5c <el_line@plt+0x8a8>
    2d28:	ldr	r0, [pc, #496]	; 2f20 <el_line@plt+0xa6c>
    2d2c:	mov	r1, #1
    2d30:	ldr	r3, [pc, #428]	; 2ee4 <el_line@plt+0xa30>
    2d34:	add	r0, pc, r0
    2d38:	b	2ae0 <el_line@plt+0x62c>
    2d3c:	bl	23ac <__errno_location@plt>
    2d40:	ldr	r0, [r0]
    2d44:	bl	1fa4 <strerror@plt>
    2d48:	ldr	r2, [fp]
    2d4c:	mov	r1, r0
    2d50:	ldr	r0, [pc, #460]	; 2f24 <el_line@plt+0xa70>
    2d54:	add	r0, pc, r0
    2d58:	bl	10980 <el_line@plt+0xe4cc>
    2d5c:	ldr	r1, [pc, #452]	; 2f28 <el_line@plt+0xa74>
    2d60:	mov	r0, r6
    2d64:	ldr	r2, [sp, #36]	; 0x24
    2d68:	add	r1, pc, r1
    2d6c:	bl	1271c <el_line@plt+0x10268>
    2d70:	cmp	sl, #0
    2d74:	beq	2e14 <el_line@plt+0x960>
    2d78:	mov	r0, sl
    2d7c:	mov	r1, #47	; 0x2f
    2d80:	bl	2490 <strchr@plt>
    2d84:	cmp	r0, #0
    2d88:	mov	r0, r6
    2d8c:	beq	2ddc <el_line@plt+0x928>
    2d90:	ldr	r1, [pc, #404]	; 2f2c <el_line@plt+0xa78>
    2d94:	add	r1, pc, r1
    2d98:	bl	1271c <el_line@plt+0x10268>
    2d9c:	ldr	r1, [pc, #396]	; 2f30 <el_line@plt+0xa7c>
    2da0:	mov	r2, r9
    2da4:	mov	r0, r6
    2da8:	add	r1, pc, r1
    2dac:	bl	1271c <el_line@plt+0x10268>
    2db0:	mov	r2, sl
    2db4:	ldr	r1, [pc, #376]	; 2f34 <el_line@plt+0xa80>
    2db8:	mov	r0, r6
    2dbc:	add	r1, pc, r1
    2dc0:	bl	1271c <el_line@plt+0x10268>
    2dc4:	ldr	r0, [sp, #40]	; 0x28
    2dc8:	ldr	r1, [sp, #96]	; 0x60
    2dcc:	add	r2, sp, #80	; 0x50
    2dd0:	add	r3, sp, #84	; 0x54
    2dd4:	bl	4bc4 <el_line@plt+0x2710>
    2dd8:	b	2b5c <el_line@plt+0x6a8>
    2ddc:	ldr	r1, [pc, #340]	; 2f38 <el_line@plt+0xa84>
    2de0:	add	r1, pc, r1
    2de4:	bl	1271c <el_line@plt+0x10268>
    2de8:	ldr	r1, [pc, #332]	; 2f3c <el_line@plt+0xa88>
    2dec:	mov	r0, r6
    2df0:	add	r1, pc, r1
    2df4:	bl	1271c <el_line@plt+0x10268>
    2df8:	ldr	r1, [pc, #320]	; 2f40 <el_line@plt+0xa8c>
    2dfc:	mov	r2, r9
    2e00:	mov	r0, r6
    2e04:	add	r1, pc, r1
    2e08:	bl	1271c <el_line@plt+0x10268>
    2e0c:	mov	r2, sl
    2e10:	b	2db4 <el_line@plt+0x900>
    2e14:	ldr	r1, [pc, #296]	; 2f44 <el_line@plt+0xa90>
    2e18:	mov	r0, r6
    2e1c:	add	r1, pc, r1
    2e20:	bl	1271c <el_line@plt+0x10268>
    2e24:	ldr	r1, [pc, #284]	; 2f48 <el_line@plt+0xa94>
    2e28:	mov	r0, r6
    2e2c:	add	r1, pc, r1
    2e30:	bl	1271c <el_line@plt+0x10268>
    2e34:	ldr	r1, [pc, #272]	; 2f4c <el_line@plt+0xa98>
    2e38:	mov	r2, r9
    2e3c:	mov	r0, r6
    2e40:	add	r1, pc, r1
    2e44:	bl	1271c <el_line@plt+0x10268>
    2e48:	ldr	r2, [pc, #256]	; 2f50 <el_line@plt+0xa9c>
    2e4c:	add	r2, pc, r2
    2e50:	b	2db4 <el_line@plt+0x900>
    2e54:	andeq	ip, r2, ip, ror #16
    2e58:	andeq	r0, r0, ip, lsr #4
    2e5c:	andeq	r8, r1, r8, lsr #26
    2e60:			; <UNDEFINED> instruction: 0x00019db8
    2e64:	andeq	lr, r2, r8, lsr #23
    2e68:	andeq	r0, r0, r4, lsr r2
    2e6c:	andeq	lr, r2, r4, lsl #23
    2e70:	andeq	r9, r1, r0, ror sp
    2e74:	andeq	lr, r2, r0, ror fp
    2e78:	andeq	ip, r2, r4, asr #20
    2e7c:	andeq	r8, r1, r0, asr sp
    2e80:	andeq	r8, r1, ip, ror ip
    2e84:	andeq	r8, r1, ip, ror ip
    2e88:	andeq	r8, r1, r0, lsl #25
    2e8c:	andeq	r8, r1, r8, lsl #25
    2e90:	andeq	r0, r0, r4, lsr #4
    2e94:	andeq	r0, r3, r0, lsr #5
    2e98:	andeq	r8, r1, r4, lsl #26
    2e9c:	andeq	r0, r0, r8, lsl #5
    2ea0:	andeq	lr, r2, r8, asr #18
    2ea4:	andeq	r8, r1, ip, ror #21
    2ea8:	andeq	r8, r1, ip, ror #20
    2eac:	andeq	r8, r1, ip, asr #20
    2eb0:	andeq	r9, r1, r4, lsl #21
    2eb4:	andeq	r8, r1, ip, ror #19
    2eb8:	andeq	r8, r1, r4, asr #19
    2ebc:	andeq	lr, r2, ip, lsl #16
    2ec0:	andeq	sl, r1, r0, lsr #5
    2ec4:	andeq	pc, r2, r0, lsr #30
    2ec8:	andeq	lr, r2, ip, asr #14
    2ecc:	andeq	lr, r2, ip, lsl #14
    2ed0:	andeq	ip, r2, r8, ror #11
    2ed4:	andeq	r8, r1, r0, lsr #17
    2ed8:			; <UNDEFINED> instruction: 0x0002c5b0
    2edc:	andeq	r0, r0, r0, lsr r2
    2ee0:	muleq	r1, r4, r8
    2ee4:	andeq	r0, r0, r0, asr r2
    2ee8:	andeq	r8, r1, r0, asr #15
    2eec:	andeq	r8, r1, ip, ror r8
    2ef0:	andeq	lr, r2, ip, lsl #11
    2ef4:	andeq	r8, r1, r8, asr #16
    2ef8:	andeq	lr, r2, r4, lsl r5
    2efc:	andeq	ip, r2, r4, ror #7
    2f00:	ldrdeq	r8, [r1], -r0
    2f04:	andeq	r8, r1, r8, lsr #15
    2f08:	andeq	pc, r2, r4, asr ip	; <UNPREDICTABLE>
    2f0c:	andeq	r8, r1, r8, asr r7
    2f10:	andeq	r8, r1, r8, lsl r7
    2f14:	andeq	r8, r1, r8, lsr r6
    2f18:			; <UNDEFINED> instruction: 0x000186bc
    2f1c:	andeq	r9, r1, r0, lsr r6
    2f20:	andeq	r8, r1, r4, asr r6
    2f24:			; <UNDEFINED> instruction: 0x000185b8
    2f28:	andeq	r8, r1, r4, lsr r6
    2f2c:	andeq	r8, r1, ip, lsl r6
    2f30:	andeq	r9, r1, r4, ror #10
    2f34:	andeq	r9, r1, r0, asr r5
    2f38:	andeq	r8, r1, ip, asr #11
    2f3c:	andeq	r8, r1, r0, asr #11
    2f40:	andeq	r9, r1, r8, lsl #10
    2f44:	muleq	r1, r0, r5
    2f48:	andeq	r8, r1, r4, lsl #11
    2f4c:	andeq	r9, r1, ip, asr #9
    2f50:	andeq	r8, r1, r0, lsl r4
    2f54:	mov	fp, #0
    2f58:	mov	lr, #0
    2f5c:	pop	{r1}		; (ldr r1, [sp], #4)
    2f60:	mov	r2, sp
    2f64:	push	{r2}		; (str r2, [sp, #-4]!)
    2f68:	push	{r0}		; (str r0, [sp, #-4]!)
    2f6c:	ldr	sl, [pc, #40]	; 2f9c <el_line@plt+0xae8>
    2f70:	add	r3, pc, #36	; 0x24
    2f74:	add	sl, sl, r3
    2f78:	ldr	ip, [pc, #32]	; 2fa0 <el_line@plt+0xaec>
    2f7c:	ldr	ip, [sl, ip]
    2f80:	push	{ip}		; (str ip, [sp, #-4]!)
    2f84:	ldr	r3, [pc, #24]	; 2fa4 <el_line@plt+0xaf0>
    2f88:	ldr	r3, [sl, r3]
    2f8c:	ldr	r0, [pc, #20]	; 2fa8 <el_line@plt+0xaf4>
    2f90:	ldr	r0, [sl, r0]
    2f94:	bl	246c <__libc_start_main@plt>
    2f98:	bl	20f4 <abort@plt>
    2f9c:	ldrdeq	fp, [r2], -r0
    2fa0:	andeq	r0, r0, r8, ror r2
    2fa4:	andeq	r0, r0, r8, ror #4
    2fa8:	andeq	r0, r0, r8, lsr r2
    2fac:	ldr	r3, [pc, #20]	; 2fc8 <el_line@plt+0xb14>
    2fb0:	ldr	r2, [pc, #20]	; 2fcc <el_line@plt+0xb18>
    2fb4:	add	r3, pc, r3
    2fb8:	ldr	r2, [r3, r2]
    2fbc:	cmp	r2, #0
    2fc0:	bxeq	lr
    2fc4:	b	2484 <__gmon_start__@plt>
    2fc8:			; <UNDEFINED> instruction: 0x0002bdb0
    2fcc:	andeq	r0, r0, r4, lsl #5
    2fd0:	ldr	r2, [pc, #60]	; 3014 <el_line@plt+0xb60>
    2fd4:	ldr	r0, [pc, #60]	; 3018 <el_line@plt+0xb64>
    2fd8:	add	r2, pc, r2
    2fdc:	add	r0, pc, r0
    2fe0:	add	r2, r2, #3
    2fe4:	rsb	r2, r0, r2
    2fe8:	push	{r3, lr}
    2fec:	cmp	r2, #6
    2ff0:	ldr	r3, [pc, #36]	; 301c <el_line@plt+0xb68>
    2ff4:	add	r3, pc, r3
    2ff8:	popls	{r3, pc}
    2ffc:	ldr	r2, [pc, #28]	; 3020 <el_line@plt+0xb6c>
    3000:	ldr	r3, [r3, r2]
    3004:	cmp	r3, #0
    3008:	popeq	{r3, pc}
    300c:	blx	r3
    3010:	pop	{r3, pc}
    3014:	strdeq	ip, [r2], -r8
    3018:	strdeq	ip, [r2], -r4
    301c:	andeq	fp, r2, r0, ror sp
    3020:	andeq	r0, r0, r4, ror r2
    3024:	push	{r3, lr}
    3028:	ldr	r0, [pc, #64]	; 3070 <el_line@plt+0xbbc>
    302c:	ldr	r3, [pc, #64]	; 3074 <el_line@plt+0xbc0>
    3030:	add	r0, pc, r0
    3034:	ldr	r2, [pc, #60]	; 3078 <el_line@plt+0xbc4>
    3038:	add	r3, pc, r3
    303c:	rsb	r3, r0, r3
    3040:	add	r2, pc, r2
    3044:	asr	r3, r3, #2
    3048:	add	r3, r3, r3, lsr #31
    304c:	asrs	r3, r3, #1
    3050:	popeq	{r3, pc}
    3054:	ldr	r1, [pc, #32]	; 307c <el_line@plt+0xbc8>
    3058:	ldr	r2, [r2, r1]
    305c:	cmp	r2, #0
    3060:	popeq	{r3, pc}
    3064:	mov	r1, r3
    3068:	blx	r2
    306c:	pop	{r3, pc}
    3070:	andeq	ip, r2, r0, lsr #1
    3074:	muleq	r2, r8, r0
    3078:	andeq	fp, r2, r4, lsr #26
    307c:	andeq	r0, r0, ip, lsl #5
    3080:	ldr	r2, [pc, #76]	; 30d4 <el_line@plt+0xc20>
    3084:	push	{r3, lr}
    3088:	add	r2, pc, r2
    308c:	ldr	r3, [pc, #68]	; 30d8 <el_line@plt+0xc24>
    3090:	ldrb	r2, [r2]
    3094:	add	r3, pc, r3
    3098:	cmp	r2, #0
    309c:	popne	{r3, pc}
    30a0:	ldr	r2, [pc, #52]	; 30dc <el_line@plt+0xc28>
    30a4:	ldr	r3, [r3, r2]
    30a8:	cmp	r3, #0
    30ac:	beq	30bc <el_line@plt+0xc08>
    30b0:	ldr	r0, [pc, #40]	; 30e0 <el_line@plt+0xc2c>
    30b4:	add	r0, pc, r0
    30b8:	bl	249c <__cxa_finalize@plt>
    30bc:	bl	2fd0 <el_line@plt+0xb1c>
    30c0:	ldr	r3, [pc, #28]	; 30e4 <el_line@plt+0xc30>
    30c4:	mov	r2, #1
    30c8:	add	r3, pc, r3
    30cc:	strb	r2, [r3]
    30d0:	pop	{r3, pc}
    30d4:	andeq	ip, r2, r8, asr #32
    30d8:	ldrdeq	fp, [r2], -r0
    30dc:	muleq	r0, r0, r2
    30e0:	andeq	fp, r2, r4, asr fp
    30e4:	andeq	ip, r2, r8
    30e8:	ldr	r0, [pc, #52]	; 3124 <el_line@plt+0xc70>
    30ec:	push	{r3, lr}
    30f0:	add	r0, pc, r0
    30f4:	ldr	r3, [pc, #44]	; 3128 <el_line@plt+0xc74>
    30f8:	ldr	r2, [r0]
    30fc:	add	r3, pc, r3
    3100:	cmp	r2, #0
    3104:	beq	311c <el_line@plt+0xc68>
    3108:	ldr	r2, [pc, #28]	; 312c <el_line@plt+0xc78>
    310c:	ldr	r3, [r3, r2]
    3110:	cmp	r3, #0
    3114:	beq	311c <el_line@plt+0xc68>
    3118:	blx	r3
    311c:	pop	{r3, lr}
    3120:	b	3024 <el_line@plt+0xb70>
    3124:	andeq	fp, r2, r4, ror #15
    3128:	andeq	fp, r2, r8, ror #24
    312c:	andeq	r0, r0, r4, asr r2
    3130:	ldr	r3, [pc, #12]	; 3144 <el_line@plt+0xc90>
    3134:	mov	r2, #1
    3138:	add	r3, pc, r3
    313c:	str	r2, [r3]
    3140:	bx	lr
    3144:	andeq	fp, r2, r0, lsr #31
    3148:	ldr	r3, [pc, #128]	; 31d0 <el_line@plt+0xd1c>
    314c:	mov	r0, #1
    3150:	ldr	ip, [pc, #124]	; 31d4 <el_line@plt+0xd20>
    3154:	movw	r1, #21523	; 0x5413
    3158:	add	r3, pc, r3
    315c:	push	{r4, lr}
    3160:	sub	sp, sp, #16
    3164:	ldr	r4, [r3, ip]
    3168:	add	r2, sp, #4
    316c:	ldr	r3, [r4]
    3170:	str	r3, [sp, #12]
    3174:	bl	2148 <ioctl@plt>
    3178:	cmn	r0, #1
    317c:	beq	318c <el_line@plt+0xcd8>
    3180:	ldrh	r0, [sp, #6]
    3184:	cmp	r0, #0
    3188:	bne	31b4 <el_line@plt+0xd00>
    318c:	mov	r0, #81	; 0x51
    3190:	ldr	r1, [sp, #12]
    3194:	ldr	r3, [pc, #60]	; 31d8 <el_line@plt+0xd24>
    3198:	ldr	r2, [r4]
    319c:	add	r3, pc, r3
    31a0:	cmp	r1, r2
    31a4:	str	r0, [r3, #4]
    31a8:	bne	31cc <el_line@plt+0xd18>
    31ac:	add	sp, sp, #16
    31b0:	pop	{r4, pc}
    31b4:	cmp	r0, #512	; 0x200
    31b8:	movwhi	r0, #513	; 0x201
    31bc:	bhi	3190 <el_line@plt+0xcdc>
    31c0:	mov	r1, #1
    31c4:	bl	192bc <el_line@plt+0x16e08>
    31c8:	b	3190 <el_line@plt+0xcdc>
    31cc:	bl	21e4 <__stack_chk_fail@plt>
    31d0:	andeq	fp, r2, ip, lsl #24
    31d4:	andeq	r0, r0, ip, lsr #4
    31d8:	andeq	fp, r2, ip, lsr pc
    31dc:	push	{r4, lr}
    31e0:	bl	22ec <getpgrp@plt>
    31e4:	mov	r4, r0
    31e8:	mov	r0, #1
    31ec:	bl	21c0 <tcgetpgrp@plt>
    31f0:	subs	r3, r4, r0
    31f4:	rsbs	r0, r3, #0
    31f8:	adcs	r0, r0, r3
    31fc:	pop	{r4, pc}
    3200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3204:	vpush	{d8-d10}
    3208:	sub	sp, sp, #596	; 0x254
    320c:	ldr	r6, [pc, #920]	; 35ac <el_line@plt+0x10f8>
    3210:	ldr	r3, [pc, #920]	; 35b0 <el_line@plt+0x10fc>
    3214:	add	r6, pc, r6
    3218:	str	r6, [sp, #64]	; 0x40
    321c:	ldr	r1, [pc, #912]	; 35b4 <el_line@plt+0x1100>
    3220:	ldr	r3, [r6, r3]
    3224:	add	r1, pc, r1
    3228:	ldr	r6, [pc, #904]	; 35b8 <el_line@plt+0x1104>
    322c:	str	r3, [sp, #68]	; 0x44
    3230:	add	r6, pc, r6
    3234:	ldr	r7, [sp, #68]	; 0x44
    3238:	ldrd	r2, [r1, #16]
    323c:	ldr	r0, [r1, #8]
    3240:	ldr	ip, [r7]
    3244:	orrs	lr, r2, r3
    3248:	movne	sl, r2
    324c:	movne	r9, r3
    3250:	str	ip, [sp, #588]	; 0x24c
    3254:	ldrd	r4, [r0]
    3258:	ldrd	r2, [r0]
    325c:	ldreq	sl, [r1, #24]
    3260:	ldreq	r9, [r1, #28]
    3264:	strd	r2, [r6, #16]
    3268:	bl	1339c <el_line@plt+0x10ee8>
    326c:	ldr	r8, [r6, #32]
    3270:	ldr	r7, [r6, #36]	; 0x24
    3274:	ldrd	r2, [r6, #16]
    3278:	mov	r0, r8
    327c:	mov	r1, r7
    3280:	vmov.f64	d9, d0
    3284:	bl	19390 <el_line@plt+0x16edc>
    3288:	strd	r0, [sp, #48]	; 0x30
    328c:	cmp	r0, #1
    3290:	sbcs	r0, r1, #0
    3294:	blt	3a04 <el_line@plt+0x1550>
    3298:	mov	r0, r4
    329c:	mov	r1, r5
    32a0:	mov	r2, sl
    32a4:	mov	r3, r9
    32a8:	bl	19390 <el_line@plt+0x16edc>
    32ac:	vldr	d8, [r6, #40]	; 0x28
    32b0:	vsub.f64	d8, d9, d8
    32b4:	ldr	r4, [r6, #48]	; 0x30
    32b8:	strd	r0, [sp, #56]	; 0x38
    32bc:	vcmp.f64	d8, #0.0
    32c0:	vmrs	APSR_nzcv, fpscr
    32c4:	beq	3928 <el_line@plt+0x1474>
    32c8:	ldrd	r0, [sp, #56]	; 0x38
    32cc:	bl	18f78 <el_line@plt+0x16ac4>
    32d0:	vmov	d6, r0, r1
    32d4:	vdiv.f64	d7, d6, d8
    32d8:	vcvt.s32.f64	s14, d7
    32dc:	cmp	r4, #0
    32e0:	beq	3918 <el_line@plt+0x1464>
    32e4:	vmov	s9, r4
    32e8:	vldr	d6, [pc, #680]	; 3598 <el_line@plt+0x10e4>
    32ec:	ldr	r3, [pc, #712]	; 35bc <el_line@plt+0x1108>
    32f0:	vcvt.f64.s32	d5, s14
    32f4:	vldr	d7, [pc, #676]	; 35a0 <el_line@plt+0x10ec>
    32f8:	add	r3, pc, r3
    32fc:	vmul.f64	d7, d5, d7
    3300:	vcvt.f64.s32	d5, s9
    3304:	vmla.f64	d7, d5, d6
    3308:	vcvt.s32.f64	s14, d7
    330c:	vstr	s14, [r3, #48]	; 0x30
    3310:	ldr	r9, [pc, #680]	; 35c0 <el_line@plt+0x110c>
    3314:	mvn	r1, #34	; 0x22
    3318:	mov	r3, #0
    331c:	strb	r3, [sp, #72]	; 0x48
    3320:	add	r9, pc, r9
    3324:	ldr	r4, [r9, #4]
    3328:	mov	r0, r4
    332c:	bl	192bc <el_line@plt+0x16e08>
    3330:	subs	r5, r0, #0
    3334:	ble	3988 <el_line@plt+0x14d4>
    3338:	mvn	r1, #33	; 0x21
    333c:	mov	r0, r4
    3340:	bl	192bc <el_line@plt+0x16e08>
    3344:	ldr	r3, [r9, #64]	; 0x40
    3348:	add	sl, sp, #72	; 0x48
    334c:	ldr	ip, [pc, #624]	; 35c4 <el_line@plt+0x1110>
    3350:	mov	r2, #1
    3354:	add	ip, pc, ip
    3358:	str	r3, [sp, #4]
    335c:	str	ip, [sp]
    3360:	movw	r3, #513	; 0x201
    3364:	mov	r6, r0
    3368:	mov	r1, r0
    336c:	mov	r0, sl
    3370:	bl	231c <__snprintf_chk@plt>
    3374:	bic	r0, r0, r0, asr #31
    3378:	cmp	r6, r0
    337c:	bgt	3944 <el_line@plt+0x1490>
    3380:	ldr	r1, [pc, #576]	; 35c8 <el_line@plt+0x1114>
    3384:	add	r0, sp, #592	; 0x250
    3388:	add	r5, r0, r5
    338c:	mov	r3, #0
    3390:	add	r1, pc, r1
    3394:	strb	r3, [r5, #-520]	; 0xfffffdf8
    3398:	ldr	r4, [r1, #4]
    339c:	ldrd	r2, [r1, #32]
    33a0:	orrs	r1, r2, r3
    33a4:	beq	3400 <el_line@plt+0xf4c>
    33a8:	ldr	r1, [pc, #540]	; 35cc <el_line@plt+0x1118>
    33ac:	add	r1, pc, r1
    33b0:	ldrd	r0, [r1, #16]
    33b4:	cmp	r1, r3
    33b8:	cmpeq	r0, r2
    33bc:	beq	3400 <el_line@plt+0xf4c>
    33c0:	str	r2, [sp, #40]	; 0x28
    33c4:	str	r3, [sp, #36]	; 0x24
    33c8:	bl	191ac <el_line@plt+0x16cf8>
    33cc:	ldr	r2, [sp, #40]	; 0x28
    33d0:	ldr	r3, [sp, #36]	; 0x24
    33d4:	mov	r1, r3
    33d8:	vmov	s20, r0
    33dc:	mov	r0, r2
    33e0:	bl	191ac <el_line@plt+0x16cf8>
    33e4:	vldr	s15, [pc, #444]	; 35a8 <el_line@plt+0x10f4>
    33e8:	vmov	s9, r0
    33ec:	vdiv.f32	s20, s20, s9
    33f0:	vmul.f32	s15, s20, s15
    33f4:	vcvt.s32.f32	s15, s15
    33f8:	vmov	r5, s15
    33fc:	b	3404 <el_line@plt+0xf50>
    3400:	mov	r5, #100	; 0x64
    3404:	mov	r0, sl
    3408:	movw	r8, #9999	; 0x270f
    340c:	bl	2310 <strlen@plt>
    3410:	ldr	ip, [pc, #440]	; 35d0 <el_line@plt+0x111c>
    3414:	mvn	r3, #0
    3418:	str	r5, [sp, #4]
    341c:	add	ip, pc, ip
    3420:	mov	r2, #1
    3424:	str	ip, [sp]
    3428:	mov	r9, #0
    342c:	rsb	r1, r0, r4
    3430:	add	r0, sl, r0
    3434:	bl	231c <__snprintf_chk@plt>
    3438:	mov	r0, sl
    343c:	bl	2310 <strlen@plt>
    3440:	ldr	r3, [pc, #396]	; 35d4 <el_line@plt+0x1120>
    3444:	add	r3, pc, r3
    3448:	ldrd	r4, [r3, #16]
    344c:	ldr	r3, [r3, #4]
    3450:	cmp	r8, r4
    3454:	sbcs	r7, r9, r5
    3458:	add	r6, sl, r0
    345c:	rsb	r3, r0, r3
    3460:	str	r6, [sp, #32]
    3464:	str	r3, [sp, #44]	; 0x2c
    3468:	bge	3a40 <el_line@plt+0x158c>
    346c:	ldr	fp, [pc, #356]	; 35d8 <el_line@plt+0x1124>
    3470:	mov	r6, #0
    3474:	add	fp, pc, fp
    3478:	b	3488 <el_line@plt+0xfd4>
    347c:	ldrb	r3, [r0, fp]
    3480:	cmp	r3, #84	; 0x54
    3484:	beq	34f8 <el_line@plt+0x1044>
    3488:	mov	r0, r4
    348c:	mov	r1, r5
    3490:	mov	r2, #512	; 0x200
    3494:	mov	r3, #0
    3498:	bl	192fc <el_line@plt+0x16e48>
    349c:	mov	r7, #0
    34a0:	mov	r5, r1
    34a4:	mov	r4, r0
    34a8:	asr	r2, r5, #31
    34ac:	mov	r0, r6
    34b0:	movw	r6, #1023	; 0x3ff
    34b4:	mov	r1, #1
    34b8:	asr	r3, r2, #31
    34bc:	and	r2, r2, r6
    34c0:	adds	r2, r2, r4
    34c4:	and	r3, r3, r7
    34c8:	adc	r3, r3, r5
    34cc:	lsr	r2, r2, #10
    34d0:	orr	r4, r2, r3, lsl #22
    34d4:	asr	r5, r3, #10
    34d8:	bl	192bc <el_line@plt+0x16e08>
    34dc:	cmp	r8, r4
    34e0:	sbcs	r7, r9, r5
    34e4:	mov	r6, r0
    34e8:	blt	347c <el_line@plt+0xfc8>
    34ec:	ldr	r3, [pc, #232]	; 35dc <el_line@plt+0x1128>
    34f0:	add	r3, pc, r3
    34f4:	ldrb	r3, [r3, r0]
    34f8:	ldr	lr, [pc, #224]	; 35e0 <el_line@plt+0x112c>
    34fc:	add	lr, pc, lr
    3500:	ldr	ip, [pc, #220]	; 35e4 <el_line@plt+0x1130>
    3504:	mov	r2, #1
    3508:	ldr	r6, [pc, #216]	; 35e8 <el_line@plt+0x1134>
    350c:	add	ip, pc, ip
    3510:	str	lr, [sp, #20]
    3514:	str	ip, [sp]
    3518:	add	r6, pc, r6
    351c:	strd	r4, [sp, #8]
    3520:	movw	r4, #34463	; 0x869f
    3524:	ldr	r1, [sp, #44]	; 0x2c
    3528:	movt	r4, #1
    352c:	str	r3, [sp, #16]
    3530:	mvn	r3, #0
    3534:	ldr	r0, [sp, #32]
    3538:	mov	r5, #0
    353c:	bl	231c <__snprintf_chk@plt>
    3540:	ldr	r1, [pc, #164]	; 35ec <el_line@plt+0x1138>
    3544:	ldr	r2, [r6, #4]
    3548:	mov	r0, sl
    354c:	add	r1, pc, r1
    3550:	bl	17704 <el_line@plt+0x15250>
    3554:	mov	r0, sl
    3558:	bl	2310 <strlen@plt>
    355c:	ldr	ip, [r6, #48]	; 0x30
    3560:	mov	r1, #100	; 0x64
    3564:	ldr	r3, [r6, #4]
    3568:	smull	r6, r7, ip, r1
    356c:	cmp	r4, r6
    3570:	sbcs	lr, r5, r7
    3574:	rsb	r3, r0, r3
    3578:	add	fp, sl, r0
    357c:	str	r3, [sp, #44]	; 0x2c
    3580:	bge	38d8 <el_line@plt+0x1424>
    3584:	ldr	r9, [pc, #100]	; 35f0 <el_line@plt+0x113c>
    3588:	mov	r8, #0
    358c:	add	r9, pc, r9
    3590:	b	3650 <el_line@plt+0x119c>
    3594:	nop	{0}
    3598:	stclgt	12, cr12, [ip], {205}	; 0xcd
    359c:	svccc	0x00eccccc
    35a0:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
    35a4:	svccc	0x00b99999
    35a8:	sbcmi	r0, r8, #0
    35ac:	andeq	fp, r2, r0, asr fp
    35b0:	andeq	r0, r0, ip, lsr #4
    35b4:			; <UNDEFINED> instruction: 0x0002beb4
    35b8:	andeq	fp, r2, r8, lsr #29
    35bc:	andeq	fp, r2, r0, ror #27
    35c0:			; <UNDEFINED> instruction: 0x0002bdb8
    35c4:	andeq	r6, r1, r0, lsl ip
    35c8:	andeq	fp, r2, r8, asr #26
    35cc:	andeq	fp, r2, ip, lsr #26
    35d0:	andeq	r6, r1, ip, asr #22
    35d4:	muleq	r2, r4, ip
    35d8:	andeq	r6, r1, r0, ror #21
    35dc:	andeq	r6, r1, r4, ror #20
    35e0:	andeq	r6, r1, r0, ror #20
    35e4:	andeq	r6, r1, r4, ror #20
    35e8:	andeq	fp, r2, r0, asr #23
    35ec:	andeq	r6, r1, r4, lsl sl
    35f0:	andeq	r6, r1, r8, asr #19
    35f4:	andeq	r6, r1, ip, asr #17
    35f8:	andeq	fp, r2, ip, lsl sl
    35fc:	andeq	r6, r1, r8, asr r8
    3600:	andeq	r6, r1, r8, asr r8
    3604:	andeq	r6, r1, ip, asr r8
    3608:	andeq	fp, r2, ip, ror #18
    360c:	andeq	fp, r2, r0, asr #17
    3610:	andeq	r6, r1, r0, lsl #15
    3614:	andeq	fp, r2, r4, ror r8
    3618:	andeq	r6, r1, ip, asr r7
    361c:	andeq	fp, r2, r8, asr r8
    3620:	andeq	r0, r0, ip, ror #4
    3624:			; <UNDEFINED> instruction: 0x0002b7bc
    3628:	andeq	r6, r1, r4, lsl r6
    362c:	andeq	fp, r2, r0, lsr r7
    3630:	andeq	r6, r1, r0, lsl #12
    3634:	andeq	fp, r2, r8, ror #13
    3638:	ldrdeq	r6, [r1], -r8
    363c:	andeq	r6, r1, r8, ror #10
    3640:	andeq	r6, r1, r8, lsl r5
    3644:	ldrb	r3, [r8, r9]
    3648:	cmp	r3, #84	; 0x54
    364c:	beq	3690 <el_line@plt+0x11dc>
    3650:	mov	r0, r6
    3654:	mov	r1, r7
    3658:	mov	r2, #512	; 0x200
    365c:	mov	r3, #0
    3660:	bl	192fc <el_line@plt+0x16e48>
    3664:	mov	r3, r1
    3668:	lsr	r6, r0, #10
    366c:	mov	r1, #1
    3670:	mov	r0, r8
    3674:	orr	r6, r6, r3, lsl #22
    3678:	asr	r7, r3, #10
    367c:	bl	192bc <el_line@plt+0x16e08>
    3680:	mov	r8, r0
    3684:	cmp	r4, r6
    3688:	sbcs	r0, r5, r7
    368c:	blt	3644 <el_line@plt+0x1190>
    3690:	mov	r0, r6
    3694:	mov	r2, #5
    3698:	mov	r3, #0
    369c:	mov	r1, r7
    36a0:	bl	192fc <el_line@plt+0x16e48>
    36a4:	ldr	ip, [pc, #-184]	; 35f4 <el_line@plt+0x1140>
    36a8:	mov	r2, #100	; 0x64
    36ac:	mov	r3, #0
    36b0:	add	ip, pc, ip
    36b4:	str	ip, [sp]
    36b8:	ldr	r6, [pc, #-200]	; 35f8 <el_line@plt+0x1144>
    36bc:	add	r6, pc, r6
    36c0:	mov	r4, r0
    36c4:	mov	r5, r1
    36c8:	bl	19228 <el_line@plt+0x16d74>
    36cc:	mov	r2, #10
    36d0:	mov	r3, #0
    36d4:	strd	r0, [sp, #8]
    36d8:	mov	r0, r4
    36dc:	mov	r1, r5
    36e0:	bl	19228 <el_line@plt+0x16d74>
    36e4:	mov	r2, #10
    36e8:	mov	r3, #0
    36ec:	bl	19228 <el_line@plt+0x16d74>
    36f0:	ldr	lr, [pc, #-252]	; 35fc <el_line@plt+0x1148>
    36f4:	ldr	ip, [pc, #-252]	; 3600 <el_line@plt+0x114c>
    36f8:	mov	r0, fp
    36fc:	add	lr, pc, lr
    3700:	ldr	r1, [sp, #44]	; 0x2c
    3704:	add	ip, pc, ip
    3708:	str	ip, [sp, #28]
    370c:	ldrb	lr, [lr, r8]
    3710:	str	lr, [sp, #24]
    3714:	strd	r2, [sp, #16]
    3718:	mvn	r3, #0
    371c:	mov	r2, #1
    3720:	bl	231c <__snprintf_chk@plt>
    3724:	ldr	r1, [pc, #-296]	; 3604 <el_line@plt+0x1150>
    3728:	ldr	r2, [r6, #4]
    372c:	mov	r0, sl
    3730:	add	r1, pc, r1
    3734:	bl	17704 <el_line@plt+0x15250>
    3738:	ldrd	r2, [sp, #56]	; 0x38
    373c:	orrs	r3, r2, r3
    3740:	bne	38cc <el_line@plt+0x1418>
    3744:	vldr	s9, [r6, #68]	; 0x44
    3748:	vcvt.f64.s32	d7, s9
    374c:	vadd.f64	d7, d7, d8
    3750:	vcvt.s32.f64	s12, d7
    3754:	vmov	r3, s12
    3758:	vstr	s12, [r6, #68]	; 0x44
    375c:	cmp	r3, #4
    3760:	bgt	3970 <el_line@plt+0x14bc>
    3764:	ldr	r3, [pc, #-356]	; 3608 <el_line@plt+0x1154>
    3768:	ldrd	r6, [sp, #48]	; 0x30
    376c:	add	r3, pc, r3
    3770:	ldr	r2, [r3, #48]	; 0x30
    3774:	cmp	r2, #0
    3778:	beq	3930 <el_line@plt+0x147c>
    377c:	cmp	r6, #1
    3780:	sbcs	r7, r7, #0
    3784:	blt	3938 <el_line@plt+0x1484>
    3788:	ldrd	r0, [sp, #48]	; 0x30
    378c:	asr	r3, r2, #31
    3790:	bl	19228 <el_line@plt+0x16d74>
    3794:	mov	r4, r0
    3798:	movw	r3, #46021	; 0xb3c5
    379c:	movt	r3, #37282	; 0x91a2
    37a0:	asr	r2, r4, #31
    37a4:	movw	r1, #61936	; 0xf1f0
    37a8:	smull	r0, r3, r3, r4
    37ac:	movt	r1, #65535	; 0xffff
    37b0:	add	r5, r3, r4
    37b4:	rsb	r5, r2, r5, asr #11
    37b8:	mov	r0, r5
    37bc:	bl	193ec <el_line@plt+0x16f38>
    37c0:	mov	r1, r4
    37c4:	bl	192bc <el_line@plt+0x16e08>
    37c8:	movw	r3, #34953	; 0x8889
    37cc:	movt	r3, #34952	; 0x8888
    37d0:	mvn	r1, #59	; 0x3b
    37d4:	smull	r6, r3, r3, r0
    37d8:	asr	r2, r0, #31
    37dc:	mov	r4, r0
    37e0:	add	r6, r3, r0
    37e4:	rsb	r6, r2, r6, asr #5
    37e8:	mov	r0, r6
    37ec:	bl	193ec <el_line@plt+0x16f38>
    37f0:	mov	r1, r4
    37f4:	bl	192bc <el_line@plt+0x16e08>
    37f8:	cmp	r5, #0
    37fc:	mov	r4, r0
    3800:	mov	r0, sl
    3804:	beq	3998 <el_line@plt+0x14e4>
    3808:	bl	2310 <strlen@plt>
    380c:	ldr	lr, [pc, #-520]	; 360c <el_line@plt+0x1158>
    3810:	str	r5, [sp, #4]
    3814:	mov	r2, #1
    3818:	add	lr, pc, lr
    381c:	ldr	ip, [pc, #-532]	; 3610 <el_line@plt+0x115c>
    3820:	mvn	r3, #0
    3824:	ldr	lr, [lr, #4]
    3828:	add	ip, pc, ip
    382c:	str	r6, [sp, #8]
    3830:	str	r4, [sp, #12]
    3834:	str	ip, [sp]
    3838:	mov	r1, r0
    383c:	add	r0, sl, r0
    3840:	rsb	r1, r1, lr
    3844:	bl	231c <__snprintf_chk@plt>
    3848:	ldrd	r6, [sp, #48]	; 0x30
    384c:	cmp	r6, #1
    3850:	sbcs	r7, r7, #0
    3854:	blt	39e4 <el_line@plt+0x1530>
    3858:	ldr	r3, [pc, #-588]	; 3614 <el_line@plt+0x1160>
    385c:	mov	r0, sl
    3860:	ldr	r1, [pc, #-592]	; 3618 <el_line@plt+0x1164>
    3864:	add	r3, pc, r3
    3868:	add	r1, pc, r1
    386c:	ldr	r2, [r3, #4]
    3870:	bl	17704 <el_line@plt+0x15250>
    3874:	ldr	r4, [pc, #-608]	; 361c <el_line@plt+0x1168>
    3878:	mvn	r1, #0
    387c:	ldr	r3, [pc, #-612]	; 3620 <el_line@plt+0x116c>
    3880:	add	r4, pc, r4
    3884:	ldr	r6, [sp, #64]	; 0x40
    3888:	ldr	r0, [r4, #4]
    388c:	ldr	r5, [r6, r3]
    3890:	bl	192bc <el_line@plt+0x16e08>
    3894:	mov	r2, sl
    3898:	mov	r1, #1
    389c:	mov	r3, r0
    38a0:	mov	r0, r5
    38a4:	bl	11840 <el_line@plt+0xf38c>
    38a8:	ldr	r7, [sp, #68]	; 0x44
    38ac:	ldr	r2, [sp, #588]	; 0x24c
    38b0:	vstr	d9, [r4, #40]	; 0x28
    38b4:	ldr	r3, [r7]
    38b8:	cmp	r2, r3
    38bc:	bne	3a50 <el_line@plt+0x159c>
    38c0:	add	sp, sp, #596	; 0x254
    38c4:	vpop	{d8-d10}
    38c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    38cc:	mov	r3, #0
    38d0:	str	r3, [r6, #68]	; 0x44
    38d4:	b	3764 <el_line@plt+0x12b0>
    38d8:	mov	r2, #512	; 0x200
    38dc:	mov	r3, #0
    38e0:	smlal	r2, r3, r1, ip
    38e4:	movw	r4, #1023	; 0x3ff
    38e8:	mov	r5, #0
    38ec:	mov	r8, #1
    38f0:	asr	r0, r3, #31
    38f4:	asr	r1, r0, #31
    38f8:	and	r0, r0, r4
    38fc:	adds	r2, r2, r0
    3900:	and	r1, r1, r5
    3904:	adc	r3, r3, r1
    3908:	lsr	r2, r2, #10
    390c:	orr	r6, r2, r3, lsl #22
    3910:	asr	r7, r3, #10
    3914:	b	3690 <el_line@plt+0x11dc>
    3918:	ldr	r3, [pc, #-764]	; 3624 <el_line@plt+0x1170>
    391c:	add	r3, pc, r3
    3920:	vstr	s14, [r3, #48]	; 0x30
    3924:	b	3310 <el_line@plt+0xe5c>
    3928:	vldr	s14, [sp, #56]	; 0x38
    392c:	b	32dc <el_line@plt+0xe28>
    3930:	orrs	r7, r6, r7
    3934:	bne	3a28 <el_line@plt+0x1574>
    3938:	vcvt.s32.f64	s9, d8
    393c:	vmov	r4, s9
    3940:	b	3798 <el_line@plt+0x12e4>
    3944:	cmp	r5, r0
    3948:	ble	3380 <el_line@plt+0xecc>
    394c:	sub	r3, r0, #1
    3950:	add	r2, sp, #36	; 0x24
    3954:	add	r3, sl, r3
    3958:	add	r4, r2, r4
    395c:	mov	r2, #32
    3960:	strb	r2, [r3, #1]!
    3964:	cmp	r3, r4
    3968:	bne	3960 <el_line@plt+0x14ac>
    396c:	b	3380 <el_line@plt+0xecc>
    3970:	ldr	r1, [pc, #-848]	; 3628 <el_line@plt+0x1174>
    3974:	mov	r0, sl
    3978:	ldr	r2, [r6, #4]
    397c:	add	r1, pc, r1
    3980:	bl	17704 <el_line@plt+0x15250>
    3984:	b	3874 <el_line@plt+0x13c0>
    3988:	add	sl, sp, #72	; 0x48
    398c:	mov	r2, r8
    3990:	mov	r3, r7
    3994:	b	33a0 <el_line@plt+0xeec>
    3998:	bl	2310 <strlen@plt>
    399c:	ldr	lr, [pc, #-888]	; 362c <el_line@plt+0x1178>
    39a0:	str	r6, [sp, #4]
    39a4:	mov	r2, #1
    39a8:	add	lr, pc, lr
    39ac:	ldr	ip, [pc, #-900]	; 3630 <el_line@plt+0x117c>
    39b0:	mvn	r3, #0
    39b4:	ldr	lr, [lr, #4]
    39b8:	add	ip, pc, ip
    39bc:	str	r4, [sp, #8]
    39c0:	str	ip, [sp]
    39c4:	mov	r1, r0
    39c8:	add	r0, sl, r0
    39cc:	rsb	r1, r1, lr
    39d0:	bl	231c <__snprintf_chk@plt>
    39d4:	ldrd	r6, [sp, #48]	; 0x30
    39d8:	cmp	r6, #1
    39dc:	sbcs	r7, r7, #0
    39e0:	bge	3858 <el_line@plt+0x13a4>
    39e4:	ldr	r3, [pc, #-952]	; 3634 <el_line@plt+0x1180>
    39e8:	mov	r0, sl
    39ec:	ldr	r1, [pc, #-956]	; 3638 <el_line@plt+0x1184>
    39f0:	add	r3, pc, r3
    39f4:	add	r1, pc, r1
    39f8:	ldr	r2, [r3, #4]
    39fc:	bl	17704 <el_line@plt+0x15250>
    3a00:	b	3874 <el_line@plt+0x13c0>
    3a04:	mov	r0, r8
    3a08:	mov	r1, r7
    3a0c:	ldrd	r2, [r6, #24]
    3a10:	vldr	d8, [r6, #56]	; 0x38
    3a14:	bl	19390 <el_line@plt+0x16edc>
    3a18:	vsub.f64	d8, d9, d8
    3a1c:	mov	r4, #0
    3a20:	strd	r0, [sp, #56]	; 0x38
    3a24:	b	32bc <el_line@plt+0xe08>
    3a28:	ldr	r1, [pc, #-1012]	; 363c <el_line@plt+0x1188>
    3a2c:	mov	r0, sl
    3a30:	ldr	r2, [r3, #4]
    3a34:	add	r1, pc, r1
    3a38:	bl	17704 <el_line@plt+0x15250>
    3a3c:	b	3874 <el_line@plt+0x13c0>
    3a40:	ldr	lr, [pc, #-1032]	; 3640 <el_line@plt+0x118c>
    3a44:	mov	r3, #32
    3a48:	add	lr, pc, lr
    3a4c:	b	3500 <el_line@plt+0x104c>
    3a50:	bl	21e4 <__stack_chk_fail@plt>
    3a54:	push	{r4, r5, r6, lr}
    3a58:	bl	23ac <__errno_location@plt>
    3a5c:	ldr	r5, [pc, #84]	; 3ab8 <el_line@plt+0x1604>
    3a60:	add	r5, pc, r5
    3a64:	ldr	r3, [r5]
    3a68:	cmp	r3, #0
    3a6c:	mov	r4, r0
    3a70:	ldr	r6, [r0]
    3a74:	bne	3aa8 <el_line@plt+0x15f4>
    3a78:	bl	31dc <el_line@plt+0xd28>
    3a7c:	cmp	r0, #0
    3a80:	beq	3a88 <el_line@plt+0x15d4>
    3a84:	bl	3200 <el_line@plt+0xd4c>
    3a88:	ldr	r1, [pc, #44]	; 3abc <el_line@plt+0x1608>
    3a8c:	mov	r0, #14
    3a90:	add	r1, pc, r1
    3a94:	bl	146b8 <el_line@plt+0x12204>
    3a98:	mov	r0, #1
    3a9c:	bl	2430 <alarm@plt>
    3aa0:	str	r6, [r4]
    3aa4:	pop	{r4, r5, r6, pc}
    3aa8:	bl	3148 <el_line@plt+0xc94>
    3aac:	mov	r3, #0
    3ab0:	str	r3, [r5]
    3ab4:	b	3a78 <el_line@plt+0x15c4>
    3ab8:	andeq	fp, r2, r8, ror r6
    3abc:			; <UNDEFINED> instruction: 0xffffffbc
    3ac0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    3ac4:	mov	r9, r0
    3ac8:	mov	r6, r2
    3acc:	mov	r7, r3
    3ad0:	ldr	r8, [sp, #32]
    3ad4:	bl	1339c <el_line@plt+0x10ee8>
    3ad8:	ldr	r1, [pc, #116]	; 3b54 <el_line@plt+0x16a0>
    3adc:	mov	ip, #0
    3ae0:	mov	r2, #0
    3ae4:	mov	r3, #0
    3ae8:	ldrd	r4, [r8]
    3aec:	add	r1, pc, r1
    3af0:	str	r9, [r1, #64]	; 0x40
    3af4:	strd	r6, [r1, #32]
    3af8:	str	r8, [r1, #8]
    3afc:	strd	r4, [r1, #24]
    3b00:	strd	r2, [r1, #16]
    3b04:	str	ip, [r1, #68]	; 0x44
    3b08:	str	ip, [r1, #48]	; 0x30
    3b0c:	vstr	d0, [r1, #40]	; 0x28
    3b10:	vstr	d0, [r1, #56]	; 0x38
    3b14:	bl	3148 <el_line@plt+0xc94>
    3b18:	bl	31dc <el_line@plt+0xd28>
    3b1c:	cmp	r0, #0
    3b20:	beq	3b28 <el_line@plt+0x1674>
    3b24:	bl	3200 <el_line@plt+0xd4c>
    3b28:	ldr	r1, [pc, #40]	; 3b58 <el_line@plt+0x16a4>
    3b2c:	mov	r0, #14
    3b30:	add	r1, pc, r1
    3b34:	bl	146b8 <el_line@plt+0x12204>
    3b38:	ldr	r1, [pc, #28]	; 3b5c <el_line@plt+0x16a8>
    3b3c:	mov	r0, #28
    3b40:	add	r1, pc, r1
    3b44:	bl	146b8 <el_line@plt+0x12204>
    3b48:	mov	r0, #1
    3b4c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
    3b50:	b	2430 <alarm@plt>
    3b54:	andeq	fp, r2, ip, ror #11
    3b58:			; <UNDEFINED> instruction: 0xffffff1c
    3b5c:			; <UNDEFINED> instruction: 0xfffff5e8
    3b60:	push	{r4, lr}
    3b64:	mov	r0, #0
    3b68:	bl	2430 <alarm@plt>
    3b6c:	ldr	r4, [pc, #76]	; 3bc0 <el_line@plt+0x170c>
    3b70:	bl	31dc <el_line@plt+0xd28>
    3b74:	add	r4, pc, r4
    3b78:	cmp	r0, #0
    3b7c:	popeq	{r4, pc}
    3b80:	ldr	r3, [pc, #60]	; 3bc4 <el_line@plt+0x1710>
    3b84:	add	r3, pc, r3
    3b88:	ldrd	r0, [r3, #16]
    3b8c:	ldrd	r2, [r3, #32]
    3b90:	cmp	r1, r3
    3b94:	cmpeq	r0, r2
    3b98:	beq	3ba0 <el_line@plt+0x16ec>
    3b9c:	bl	3200 <el_line@plt+0xd4c>
    3ba0:	ldr	r0, [pc, #32]	; 3bc8 <el_line@plt+0x1714>
    3ba4:	mov	r1, #1
    3ba8:	ldr	r2, [pc, #28]	; 3bcc <el_line@plt+0x1718>
    3bac:	mov	r3, r1
    3bb0:	ldr	r0, [r4, r0]
    3bb4:	add	r2, pc, r2
    3bb8:	pop	{r4, lr}
    3bbc:	b	11840 <el_line@plt+0xf38c>
    3bc0:	strdeq	fp, [r2], -r0
    3bc4:	andeq	fp, r2, r4, asr r5
    3bc8:	andeq	r0, r0, ip, ror #4
    3bcc:	andeq	r6, r1, r0, asr #8
    3bd0:	mov	r1, #0
    3bd4:	push	{r4, r5}
    3bd8:	mov	r2, r1
    3bdc:	mov	r5, #92	; 0x5c
    3be0:	ldrb	r3, [r0, r2]
    3be4:	cmp	r3, #0
    3be8:	beq	3c0c <el_line@plt+0x1758>
    3bec:	cmp	r3, #92	; 0x5c
    3bf0:	beq	3c18 <el_line@plt+0x1764>
    3bf4:	add	r2, r2, #1
    3bf8:	strb	r3, [r0, r1]
    3bfc:	add	r1, r1, #1
    3c00:	ldrb	r3, [r0, r2]
    3c04:	cmp	r3, #0
    3c08:	bne	3bec <el_line@plt+0x1738>
    3c0c:	strb	r3, [r0, r1]
    3c10:	pop	{r4, r5}
    3c14:	bx	lr
    3c18:	add	r4, r2, #1
    3c1c:	ldrb	ip, [r0, r4]
    3c20:	cmp	ip, #63	; 0x3f
    3c24:	beq	3c50 <el_line@plt+0x179c>
    3c28:	bhi	3c44 <el_line@plt+0x1790>
    3c2c:	cmp	ip, #0
    3c30:	bne	3c60 <el_line@plt+0x17ac>
    3c34:	strb	r3, [r0, r1]!
    3c38:	strb	ip, [r0, #1]
    3c3c:	pop	{r4, r5}
    3c40:	bx	lr
    3c44:	sub	r3, ip, #91	; 0x5b
    3c48:	cmp	r3, #1
    3c4c:	bhi	3c68 <el_line@plt+0x17b4>
    3c50:	strb	ip, [r0, r1]
    3c54:	add	r2, r2, #2
    3c58:	add	r1, r1, #1
    3c5c:	b	3be0 <el_line@plt+0x172c>
    3c60:	cmp	ip, #42	; 0x2a
    3c64:	beq	3c50 <el_line@plt+0x179c>
    3c68:	strb	r5, [r0, r1]
    3c6c:	add	r3, r1, #1
    3c70:	ldrb	ip, [r0, r4]
    3c74:	add	r2, r2, #2
    3c78:	add	r1, r1, #2
    3c7c:	strb	ip, [r0, r3]
    3c80:	b	3be0 <el_line@plt+0x172c>
    3c84:	ldr	r0, [pc, #4]	; 3c90 <el_line@plt+0x17dc>
    3c88:	add	r0, pc, r0
    3c8c:	bx	lr
    3c90:	andeq	r6, r1, r8, asr r3
    3c94:	push	{r3, r4, r5, r6, r7, lr}
    3c98:	subs	r5, r0, #0
    3c9c:	mov	r6, r1
    3ca0:	beq	3d74 <el_line@plt+0x18c0>
    3ca4:	cmp	r2, #0
    3ca8:	beq	3d40 <el_line@plt+0x188c>
    3cac:	ldr	r7, [r1]
    3cb0:	mov	r0, r7
    3cb4:	bl	2310 <strlen@plt>
    3cb8:	ldr	r2, [r6, #4]
    3cbc:	cmp	r2, #0
    3cc0:	beq	3d6c <el_line@plt+0x18b8>
    3cc4:	cmp	r0, #0
    3cc8:	add	r6, r6, #4
    3ccc:	beq	3d20 <el_line@plt+0x186c>
    3cd0:	ldrb	r1, [r7]
    3cd4:	ldrb	r3, [r2]
    3cd8:	cmp	r1, r3
    3cdc:	bne	3d4c <el_line@plt+0x1898>
    3ce0:	mov	r3, r7
    3ce4:	mov	r4, #0
    3ce8:	b	3cfc <el_line@plt+0x1848>
    3cec:	ldrb	ip, [r3, #1]!
    3cf0:	ldrb	r1, [r2, #1]!
    3cf4:	cmp	ip, r1
    3cf8:	bne	3d08 <el_line@plt+0x1854>
    3cfc:	add	r4, r4, #1
    3d00:	cmp	r4, r0
    3d04:	bne	3cec <el_line@plt+0x1838>
    3d08:	ldr	r2, [r6, #4]!
    3d0c:	cmp	r2, #0
    3d10:	beq	3d30 <el_line@plt+0x187c>
    3d14:	mov	r0, r4
    3d18:	cmp	r0, #0
    3d1c:	bne	3cd0 <el_line@plt+0x181c>
    3d20:	ldr	r2, [r6, #4]!
    3d24:	mov	r4, r0
    3d28:	cmp	r2, #0
    3d2c:	bne	3d14 <el_line@plt+0x1860>
    3d30:	mov	r0, r5
    3d34:	bl	2310 <strlen@plt>
    3d38:	cmp	r0, r4
    3d3c:	bcc	3d54 <el_line@plt+0x18a0>
    3d40:	mov	r0, r5
    3d44:	pop	{r3, r4, r5, r6, r7, lr}
    3d48:	b	1163c <el_line@plt+0xf188>
    3d4c:	mov	r4, #0
    3d50:	b	3d08 <el_line@plt+0x1854>
    3d54:	mov	r0, r7
    3d58:	bl	1163c <el_line@plt+0xf188>
    3d5c:	mov	r2, #0
    3d60:	mov	r3, r0
    3d64:	strb	r2, [r3, r4]
    3d68:	pop	{r3, r4, r5, r6, r7, pc}
    3d6c:	mov	r4, r0
    3d70:	b	3d30 <el_line@plt+0x187c>
    3d74:	mov	r0, r5
    3d78:	pop	{r3, r4, r5, r6, r7, pc}
    3d7c:	push	{r4, lr}
    3d80:	mov	r4, r0
    3d84:	bl	2310 <strlen@plt>
    3d88:	cmp	r0, #0
    3d8c:	popeq	{r4, pc}
    3d90:	add	r3, r4, r0
    3d94:	ldrb	r0, [r3, #-1]
    3d98:	subs	r3, r0, #47	; 0x2f
    3d9c:	rsbs	r0, r3, #0
    3da0:	adcs	r0, r0, r3
    3da4:	pop	{r4, pc}
    3da8:	ldr	r2, [pc, #124]	; 3e2c <el_line@plt+0x1978>
    3dac:	ldr	r1, [pc, #124]	; 3e30 <el_line@plt+0x197c>
    3db0:	ldr	r3, [pc, #124]	; 3e34 <el_line@plt+0x1980>
    3db4:	add	r2, pc, r2
    3db8:	push	{r4, r5, r6, lr}
    3dbc:	add	r3, pc, r3
    3dc0:	ldr	r4, [r2, r1]
    3dc4:	sub	sp, sp, #24
    3dc8:	ldm	r3, {r0, r1, r2, r3}
    3dcc:	add	ip, sp, #4
    3dd0:	ldr	lr, [r4]
    3dd4:	stmia	ip!, {r0, r1, r2}
    3dd8:	str	lr, [sp, #20]
    3ddc:	strh	r3, [ip]
    3de0:	bl	23ac <__errno_location@plt>
    3de4:	mov	r2, #13
    3de8:	add	r1, sp, #4
    3dec:	mov	r5, r0
    3df0:	mov	r0, #2
    3df4:	ldr	r6, [r5]
    3df8:	bl	234c <write@plt>
    3dfc:	ldr	r3, [pc, #52]	; 3e38 <el_line@plt+0x1984>
    3e00:	mov	r2, #1
    3e04:	add	r3, pc, r3
    3e08:	str	r2, [r3]
    3e0c:	ldr	r2, [sp, #20]
    3e10:	str	r6, [r5]
    3e14:	ldr	r3, [r4]
    3e18:	cmp	r2, r3
    3e1c:	bne	3e28 <el_line@plt+0x1974>
    3e20:	add	sp, sp, #24
    3e24:	pop	{r4, r5, r6, pc}
    3e28:	bl	21e4 <__stack_chk_fail@plt>
    3e2c:			; <UNDEFINED> instruction: 0x0002afb0
    3e30:	andeq	r0, r0, ip, lsr #4
    3e34:	andeq	r6, r1, ip, lsr #4
    3e38:	andeq	fp, r2, ip, lsl r3
    3e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e40:	sub	sp, sp, #60	; 0x3c
    3e44:	mov	r9, r3
    3e48:	mov	r5, r0
    3e4c:	str	r1, [sp, #32]
    3e50:	mov	r1, #0
    3e54:	ldr	r6, [sp, #32]
    3e58:	str	r2, [sp, #52]	; 0x34
    3e5c:	str	r1, [r6]
    3e60:	bl	2310 <strlen@plt>
    3e64:	cmp	r0, #8192	; 0x2000
    3e68:	bcs	42b4 <el_line@plt+0x1e00>
    3e6c:	ldr	r7, [sp, #96]	; 0x60
    3e70:	cmp	r7, #0
    3e74:	movne	r3, #1
    3e78:	strne	r3, [r7]
    3e7c:	cmp	r9, #0
    3e80:	movne	r3, #0
    3e84:	strbne	r3, [r9]
    3e88:	ldr	r2, [pc, #1156]	; 4314 <el_line@plt+0x1e60>
    3e8c:	ldr	r7, [pc, #1156]	; 4318 <el_line@plt+0x1e64>
    3e90:	add	r2, pc, r2
    3e94:	str	r2, [sp, #8]
    3e98:	bl	2274 <__ctype_b_loc@plt>
    3e9c:	ldr	r3, [pc, #1144]	; 431c <el_line@plt+0x1e68>
    3ea0:	ldr	r6, [sp, #8]
    3ea4:	add	r7, pc, r7
    3ea8:	add	r3, pc, r3
    3eac:	ldr	r2, [pc, #1132]	; 4320 <el_line@plt+0x1e6c>
    3eb0:	add	ip, r3, #520	; 0x208
    3eb4:	add	r6, r6, #520	; 0x208
    3eb8:	str	r3, [sp, #20]
    3ebc:	add	r2, pc, r2
    3ec0:	str	r6, [sp, #16]
    3ec4:	mov	r1, #0
    3ec8:	ldr	r3, [pc, #1108]	; 4324 <el_line@plt+0x1e70>
    3ecc:	add	fp, r7, #520	; 0x208
    3ed0:	ldr	r6, [pc, #1104]	; 4328 <el_line@plt+0x1e74>
    3ed4:	mov	r4, r1
    3ed8:	add	r3, pc, r3
    3edc:	str	r2, [sp, #4]
    3ee0:	add	r6, pc, r6
    3ee4:	str	r3, [sp, #28]
    3ee8:	str	r6, [sp, #24]
    3eec:	mov	sl, r7
    3ef0:	ldr	r2, [pc, #1076]	; 432c <el_line@plt+0x1e78>
    3ef4:	ldr	r3, [pc, #1076]	; 4330 <el_line@plt+0x1e7c>
    3ef8:	ldr	r6, [pc, #1076]	; 4334 <el_line@plt+0x1e80>
    3efc:	add	r2, pc, r2
    3f00:	str	ip, [sp, #36]	; 0x24
    3f04:	add	r3, pc, r3
    3f08:	add	r6, pc, r6
    3f0c:	mov	ip, r1
    3f10:	str	r2, [sp, #12]
    3f14:	str	r3, [sp, #44]	; 0x2c
    3f18:	str	r6, [sp, #40]	; 0x28
    3f1c:	mov	r8, r0
    3f20:	mov	r0, r1
    3f24:	b	3f58 <el_line@plt+0x1aa4>
    3f28:	cmp	r1, #3
    3f2c:	beq	403c <el_line@plt+0x1b88>
    3f30:	cmp	r1, #0
    3f34:	beq	3f4c <el_line@plt+0x1a98>
    3f38:	ldr	r3, [pc, #1016]	; 4338 <el_line@plt+0x1e84>
    3f3c:	add	r3, pc, r3
    3f40:	add	r3, r3, ip
    3f44:	add	ip, ip, #1
    3f48:	strb	r2, [r3, #520]	; 0x208
    3f4c:	cmp	r0, #128	; 0x80
    3f50:	add	r4, r4, #1
    3f54:	bhi	3fcc <el_line@plt+0x1b18>
    3f58:	ldrb	r2, [r5, r4]
    3f5c:	add	r3, r5, r4
    3f60:	ldr	r7, [r8]
    3f64:	lsl	r6, r2, #1
    3f68:	ldrh	r6, [r7, r6]
    3f6c:	tst	r6, #8192	; 0x2000
    3f70:	bne	3f28 <el_line@plt+0x1a74>
    3f74:	cmp	r2, #34	; 0x22
    3f78:	movne	r6, #0
    3f7c:	moveq	r6, #1
    3f80:	cmp	r2, #34	; 0x22
    3f84:	cmpne	r2, #39	; 0x27
    3f88:	bne	3fe4 <el_line@plt+0x1b30>
    3f8c:	cmp	r6, #0
    3f90:	movne	r6, #2
    3f94:	moveq	r6, #1
    3f98:	cmp	r1, #0
    3f9c:	bne	4068 <el_line@plt+0x1bb4>
    3fa0:	add	r2, sl, r0, lsl #2
    3fa4:	cmp	r9, #0
    3fa8:	add	r1, fp, ip
    3fac:	str	r1, [r2, #4]
    3fb0:	beq	4158 <el_line@plt+0x1ca4>
    3fb4:	ldrb	r3, [r3]
    3fb8:	cmp	r0, #128	; 0x80
    3fbc:	mov	r1, r6
    3fc0:	add	r4, r4, #1
    3fc4:	strb	r3, [r9]
    3fc8:	bls	3f58 <el_line@plt+0x1aa4>
    3fcc:	ldr	r0, [pc, #872]	; 433c <el_line@plt+0x1e88>
    3fd0:	add	r0, pc, r0
    3fd4:	bl	11238 <el_line@plt+0xed84>
    3fd8:	mov	r0, #0
    3fdc:	add	sp, sp, #60	; 0x3c
    3fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3fe4:	cmp	r2, #92	; 0x5c
    3fe8:	beq	4094 <el_line@plt+0x1be0>
    3fec:	cmp	r2, #35	; 0x23
    3ff0:	beq	4160 <el_line@plt+0x1cac>
    3ff4:	cmp	r2, #0
    3ff8:	beq	4284 <el_line@plt+0x1dd0>
    3ffc:	cmp	r1, #0
    4000:	bne	4100 <el_line@plt+0x1c4c>
    4004:	ldr	r6, [sp, #8]
    4008:	cmp	r9, #0
    400c:	ldr	r7, [sp, #16]
    4010:	add	r2, r6, r0, lsl #2
    4014:	add	r6, r7, ip
    4018:	str	r6, [r2, #4]
    401c:	strbne	r1, [r9]
    4020:	mov	r1, #3
    4024:	ldrb	r2, [r3]
    4028:	ldr	r7, [sp, #4]
    402c:	add	r3, r7, ip
    4030:	add	ip, ip, #1
    4034:	strb	r2, [r3, #520]	; 0x208
    4038:	b	3f4c <el_line@plt+0x1a98>
    403c:	ldr	r3, [pc, #764]	; 4340 <el_line@plt+0x1e8c>
    4040:	add	r7, ip, #1
    4044:	mov	r6, #0
    4048:	mov	r1, #1
    404c:	add	r3, pc, r3
    4050:	add	ip, r3, ip
    4054:	strb	r6, [ip, #520]	; 0x208
    4058:	bl	192bc <el_line@plt+0x16e08>
    405c:	mov	ip, r7
    4060:	mov	r1, r6
    4064:	b	3f4c <el_line@plt+0x1a98>
    4068:	cmp	r1, #3
    406c:	beq	4158 <el_line@plt+0x1ca4>
    4070:	cmp	r1, r6
    4074:	moveq	r1, #3
    4078:	beq	3f4c <el_line@plt+0x1a98>
    407c:	ldr	r3, [pc, #704]	; 4344 <el_line@plt+0x1e90>
    4080:	add	r3, pc, r3
    4084:	add	r3, r3, ip
    4088:	add	ip, ip, #1
    408c:	strb	r2, [r3, #520]	; 0x208
    4090:	b	3f4c <el_line@plt+0x1a98>
    4094:	sub	r6, r1, #1
    4098:	cmp	r6, #1
    409c:	bls	41b4 <el_line@plt+0x1d00>
    40a0:	cmp	r1, #0
    40a4:	bne	40c8 <el_line@plt+0x1c14>
    40a8:	ldr	r6, [sp, #20]
    40ac:	cmp	r9, #0
    40b0:	ldr	r7, [sp, #36]	; 0x24
    40b4:	add	r2, r6, r0, lsl #2
    40b8:	add	r6, r7, ip
    40bc:	str	r6, [r2, #4]
    40c0:	strbne	r1, [r9]
    40c4:	mov	r1, #3
    40c8:	add	r4, r4, #1
    40cc:	add	r7, r5, r4
    40d0:	ldrb	r2, [r5, r4]
    40d4:	sub	r6, r2, #91	; 0x5b
    40d8:	cmp	r2, #63	; 0x3f
    40dc:	cmpne	r6, #1
    40e0:	bls	4180 <el_line@plt+0x1ccc>
    40e4:	cmp	r2, #42	; 0x2a
    40e8:	beq	4180 <el_line@plt+0x1ccc>
    40ec:	ldr	r7, [sp, #44]	; 0x2c
    40f0:	add	r3, r7, ip
    40f4:	add	ip, ip, #1
    40f8:	strb	r2, [r3, #520]	; 0x208
    40fc:	b	3f4c <el_line@plt+0x1a98>
    4100:	sub	r6, r1, #1
    4104:	cmp	r6, #1
    4108:	bhi	4028 <el_line@plt+0x1b74>
    410c:	cmp	r2, #91	; 0x5b
    4110:	cmpne	r2, #63	; 0x3f
    4114:	beq	4120 <el_line@plt+0x1c6c>
    4118:	cmp	r2, #42	; 0x2a
    411c:	bne	4028 <el_line@plt+0x1b74>
    4120:	movw	r2, #8188	; 0x1ffc
    4124:	cmp	ip, r2
    4128:	bhi	42b4 <el_line@plt+0x1e00>
    412c:	ldr	r2, [sp, #28]
    4130:	mov	r7, #92	; 0x5c
    4134:	add	r6, r2, ip
    4138:	add	r2, ip, #1
    413c:	add	ip, ip, #2
    4140:	strb	r7, [r6, #520]	; 0x208
    4144:	ldr	r6, [sp, #28]
    4148:	ldrb	r3, [r3]
    414c:	add	r2, r6, r2
    4150:	strb	r3, [r2, #520]	; 0x208
    4154:	b	3f4c <el_line@plt+0x1a98>
    4158:	mov	r1, r6
    415c:	b	3f4c <el_line@plt+0x1a98>
    4160:	sub	r3, r1, #1
    4164:	cmp	r3, #1
    4168:	bhi	4290 <el_line@plt+0x1ddc>
    416c:	ldr	r6, [sp, #24]
    4170:	add	r3, r6, ip
    4174:	add	ip, ip, #1
    4178:	strb	r2, [r3, #520]	; 0x208
    417c:	b	3f4c <el_line@plt+0x1a98>
    4180:	ldrb	r3, [r3]
    4184:	ldr	r6, [sp, #12]
    4188:	str	r3, [sp, #48]	; 0x30
    418c:	ldr	r3, [sp, #12]
    4190:	add	r2, r3, ip
    4194:	add	r3, ip, #1
    4198:	add	r3, r6, r3
    419c:	ldr	r6, [sp, #48]	; 0x30
    41a0:	add	ip, ip, #2
    41a4:	strb	r6, [r2, #520]	; 0x208
    41a8:	ldrb	r2, [r7]
    41ac:	strb	r2, [r3, #520]	; 0x208
    41b0:	b	3f4c <el_line@plt+0x1a98>
    41b4:	add	r4, r4, #1
    41b8:	cmp	r1, #1
    41bc:	add	r6, r5, r4
    41c0:	str	r6, [sp, #48]	; 0x30
    41c4:	ldrb	r6, [r5, r4]
    41c8:	movne	r7, #34	; 0x22
    41cc:	moveq	r7, #39	; 0x27
    41d0:	cmp	r7, r6
    41d4:	beq	426c <el_line@plt+0x1db8>
    41d8:	cmp	r6, #91	; 0x5b
    41dc:	cmpne	r6, #63	; 0x3f
    41e0:	bne	4238 <el_line@plt+0x1d84>
    41e4:	movw	r2, #8186	; 0x1ffa
    41e8:	cmp	ip, r2
    41ec:	bhi	42b4 <el_line@plt+0x1e00>
    41f0:	ldr	r7, [sp, #40]	; 0x28
    41f4:	mov	r6, #92	; 0x5c
    41f8:	add	r2, r7, ip
    41fc:	add	r7, ip, #3
    4200:	add	ip, ip, #4
    4204:	strb	r6, [r2, #520]	; 0x208
    4208:	ldrb	r3, [r3]
    420c:	ldr	r6, [sp, #40]	; 0x28
    4210:	strb	r3, [r2, #521]	; 0x209
    4214:	add	r7, r6, r7
    4218:	str	r7, [sp]
    421c:	mov	r7, #92	; 0x5c
    4220:	strb	r7, [r2, #522]	; 0x20a
    4224:	ldr	r2, [sp, #48]	; 0x30
    4228:	ldr	r6, [sp]
    422c:	ldrb	r3, [r2]
    4230:	strb	r3, [r6, #520]	; 0x208
    4234:	b	3f4c <el_line@plt+0x1a98>
    4238:	cmp	r6, #42	; 0x2a
    423c:	beq	41e4 <el_line@plt+0x1d30>
    4240:	ldr	r3, [pc, #256]	; 4348 <el_line@plt+0x1e94>
    4244:	add	r7, ip, #1
    4248:	add	r3, pc, r3
    424c:	add	r6, r3, ip
    4250:	add	r3, r3, r7
    4254:	ldr	r7, [sp, #48]	; 0x30
    4258:	add	ip, ip, #2
    425c:	strb	r2, [r6, #520]	; 0x208
    4260:	ldrb	r2, [r7]
    4264:	strb	r2, [r3, #520]	; 0x208
    4268:	b	3f4c <el_line@plt+0x1a98>
    426c:	ldr	r3, [pc, #216]	; 434c <el_line@plt+0x1e98>
    4270:	add	r3, pc, r3
    4274:	add	r3, r3, ip
    4278:	add	ip, ip, #1
    427c:	strb	r7, [r3, #520]	; 0x208
    4280:	b	3f4c <el_line@plt+0x1a98>
    4284:	sub	r3, r1, #1
    4288:	cmp	r3, #1
    428c:	bls	42c8 <el_line@plt+0x1e14>
    4290:	cmp	r1, #3
    4294:	beq	42e0 <el_line@plt+0x1e2c>
    4298:	ldr	ip, [sp, #32]
    429c:	ldr	r3, [pc, #172]	; 4350 <el_line@plt+0x1e9c>
    42a0:	add	r3, pc, r3
    42a4:	str	r0, [ip]
    42a8:	add	r0, r3, #4
    42ac:	add	sp, sp, #60	; 0x3c
    42b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    42b4:	ldr	r0, [pc, #152]	; 4354 <el_line@plt+0x1ea0>
    42b8:	add	r0, pc, r0
    42bc:	bl	11238 <el_line@plt+0xed84>
    42c0:	mov	r0, #0
    42c4:	b	3fdc <el_line@plt+0x1b28>
    42c8:	ldr	r7, [sp, #52]	; 0x34
    42cc:	cmp	r7, #0
    42d0:	beq	4300 <el_line@plt+0x1e4c>
    42d4:	ldr	r3, [sp, #96]	; 0x60
    42d8:	cmp	r3, #0
    42dc:	strne	r2, [r3]
    42e0:	ldr	r2, [pc, #112]	; 4358 <el_line@plt+0x1ea4>
    42e4:	mov	r3, #0
    42e8:	mov	r1, #1
    42ec:	add	r2, pc, r2
    42f0:	add	ip, r2, ip
    42f4:	strb	r3, [ip, #520]	; 0x208
    42f8:	bl	192bc <el_line@plt+0x16e08>
    42fc:	b	4298 <el_line@plt+0x1de4>
    4300:	ldr	r0, [pc, #84]	; 435c <el_line@plt+0x1ea8>
    4304:	add	r0, pc, r0
    4308:	bl	11238 <el_line@plt+0xed84>
    430c:	ldr	r0, [sp, #52]	; 0x34
    4310:	b	3fdc <el_line@plt+0x1b28>
    4314:	muleq	r2, r0, r2
    4318:	andeq	fp, r2, ip, ror r2
    431c:	andeq	fp, r2, r8, ror r2
    4320:	andeq	fp, r2, r4, ror #4
    4324:	andeq	fp, r2, r8, asr #4
    4328:	andeq	fp, r2, r0, asr #4
    432c:	andeq	fp, r2, r4, lsr #4
    4330:	andeq	fp, r2, ip, lsl r2
    4334:	andeq	fp, r2, r8, lsl r2
    4338:	andeq	fp, r2, r4, ror #3
    433c:	andeq	r6, r1, r8, lsr #32
    4340:	ldrdeq	fp, [r2], -r4
    4344:	andeq	fp, r2, r0, lsr #1
    4348:	ldrdeq	sl, [r2], -r8
    434c:			; <UNDEFINED> instruction: 0x0002aeb0
    4350:	andeq	sl, r2, r0, lsl #29
    4354:	andeq	r8, r1, r0, lsl #31
    4358:	andeq	sl, r2, r4, lsr lr
    435c:	andeq	r5, r1, r8, lsl #26
    4360:	push	{r4, r5, r6, lr}
    4364:	subs	r6, r1, #0
    4368:	mov	r5, r0
    436c:	beq	43cc <el_line@plt+0x1f18>
    4370:	mov	r0, r6
    4374:	bl	2310 <strlen@plt>
    4378:	mov	r1, r6
    437c:	mov	r4, r0
    4380:	mov	r0, r5
    4384:	mov	r2, r4
    4388:	bl	1f44 <strncmp@plt>
    438c:	cmp	r0, #0
    4390:	bne	43cc <el_line@plt+0x1f18>
    4394:	add	r6, r6, r4
    4398:	ldrb	r3, [r6, #-1]
    439c:	cmp	r3, #47	; 0x2f
    43a0:	beq	43c0 <el_line@plt+0x1f0c>
    43a4:	ldrb	r3, [r5, r4]
    43a8:	add	r0, r5, r4
    43ac:	cmp	r3, #47	; 0x2f
    43b0:	beq	43bc <el_line@plt+0x1f08>
    43b4:	pop	{r4, r5, r6, lr}
    43b8:	b	1163c <el_line@plt+0xf188>
    43bc:	add	r4, r4, #1
    43c0:	add	r0, r5, r4
    43c4:	pop	{r4, r5, r6, lr}
    43c8:	b	1163c <el_line@plt+0xf188>
    43cc:	mov	r0, r5
    43d0:	pop	{r4, r5, r6, lr}
    43d4:	b	1163c <el_line@plt+0xf188>
    43d8:	push	{r3, lr}
    43dc:	mov	r2, #1
    43e0:	bl	ad34 <el_line@plt+0x8880>
    43e4:	cmp	r0, #0
    43e8:	popeq	{r3, pc}
    43ec:	ldr	r3, [r0]
    43f0:	ands	r3, r3, #4
    43f4:	beq	4410 <el_line@plt+0x1f5c>
    43f8:	ldr	r0, [r0, #24]
    43fc:	and	r0, r0, #61440	; 0xf000
    4400:	subs	r3, r0, #16384	; 0x4000
    4404:	rsbs	r0, r3, #0
    4408:	adcs	r0, r0, r3
    440c:	pop	{r3, pc}
    4410:	mov	r0, r3
    4414:	pop	{r3, pc}
    4418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    441c:	sub	sp, sp, #28
    4420:	ldr	r8, [pc, #344]	; 4580 <el_line@plt+0x20cc>
    4424:	mov	r5, r0
    4428:	ldr	r2, [pc, #340]	; 4584 <el_line@plt+0x20d0>
    442c:	mov	r6, r1
    4430:	add	r8, pc, r8
    4434:	ldr	r3, [r0]
    4438:	ldr	r2, [r8, r2]
    443c:	cmp	r3, #0
    4440:	str	r2, [sp, #4]
    4444:	ldr	r2, [r2]
    4448:	str	r2, [sp, #20]
    444c:	beq	4574 <el_line@plt+0x20c0>
    4450:	mov	r7, r0
    4454:	mov	r4, #0
    4458:	mov	r0, r3
    445c:	bl	2310 <strlen@plt>
    4460:	ldr	r3, [r7, #4]!
    4464:	cmp	r4, r0
    4468:	movcc	r4, r0
    446c:	cmp	r3, #0
    4470:	bne	4458 <el_line@plt+0x1fa4>
    4474:	ldr	r3, [pc, #268]	; 4588 <el_line@plt+0x20d4>
    4478:	ldr	r3, [r8, r3]
    447c:	ldr	r0, [r3]
    4480:	bl	21cc <fileno@plt>
    4484:	movw	r1, #21523	; 0x5413
    4488:	add	r2, sp, #12
    448c:	bl	2148 <ioctl@plt>
    4490:	cmn	r0, #1
    4494:	ldrhne	r8, [sp, #14]
    4498:	moveq	r8, #80	; 0x50
    449c:	cmp	r6, r4
    44a0:	rsbcc	r1, r6, #2
    44a4:	addcc	r1, r1, r4
    44a8:	movcs	r1, #2
    44ac:	mov	r0, r8
    44b0:	bl	187d4 <el_line@plt+0x16320>
    44b4:	cmp	r0, #1
    44b8:	movcs	r7, r0
    44bc:	movcc	r7, #1
    44c0:	mov	r0, r8
    44c4:	mov	r1, r7
    44c8:	bl	187d4 <el_line@plt+0x16320>
    44cc:	cmp	r0, r8
    44d0:	movcc	r8, r0
    44d4:	mov	r0, #10
    44d8:	bl	2058 <putchar@plt>
    44dc:	ldr	fp, [r5]
    44e0:	cmp	fp, #0
    44e4:	beq	4550 <el_line@plt+0x209c>
    44e8:	ldr	sl, [pc, #156]	; 458c <el_line@plt+0x20d8>
    44ec:	mov	r4, #1
    44f0:	ldr	r9, [pc, #152]	; 4590 <el_line@plt+0x20dc>
    44f4:	add	sl, pc, sl
    44f8:	add	r9, pc, r9
    44fc:	b	450c <el_line@plt+0x2058>
    4500:	ldr	fp, [r5, #4]!
    4504:	cmp	fp, #0
    4508:	beq	4550 <el_line@plt+0x209c>
    450c:	mov	r0, fp
    4510:	bl	2310 <strlen@plt>
    4514:	mov	r1, r8
    4518:	cmp	r6, r0
    451c:	mov	r0, r9
    4520:	addcc	r2, fp, r6
    4524:	movcs	r2, sl
    4528:	bl	14498 <el_line@plt+0x11fe4>
    452c:	cmp	r7, r4
    4530:	addhi	r4, r4, #1
    4534:	bhi	4500 <el_line@plt+0x204c>
    4538:	mov	r0, #10
    453c:	mov	r4, #1
    4540:	bl	2058 <putchar@plt>
    4544:	ldr	fp, [r5, #4]!
    4548:	cmp	fp, #0
    454c:	bne	450c <el_line@plt+0x2058>
    4550:	mov	r0, #10
    4554:	bl	2058 <putchar@plt>
    4558:	ldr	r1, [sp, #4]
    455c:	ldr	r2, [sp, #20]
    4560:	ldr	r3, [r1]
    4564:	cmp	r2, r3
    4568:	bne	457c <el_line@plt+0x20c8>
    456c:	add	sp, sp, #28
    4570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4574:	mov	r4, r3
    4578:	b	4474 <el_line@plt+0x1fc0>
    457c:	bl	21e4 <__stack_chk_fail@plt>
    4580:	andeq	sl, r2, r4, lsr r9
    4584:	andeq	r0, r0, ip, lsr #4
    4588:	andeq	r0, r0, r4, lsr #4
    458c:	andeq	r5, r1, r4, lsr #28
    4590:	andeq	r5, r1, r4, lsr fp
    4594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4598:	sub	sp, sp, #20
    459c:	ldr	lr, [pc, #628]	; 4818 <el_line@plt+0x2364>
    45a0:	mov	r5, r1
    45a4:	ldr	ip, [pc, #624]	; 481c <el_line@plt+0x2368>
    45a8:	mov	r9, r0
    45ac:	add	lr, pc, lr
    45b0:	str	r3, [sp, #4]
    45b4:	mov	r0, #37	; 0x25
    45b8:	mov	r1, #4
    45bc:	ldr	ip, [lr, ip]
    45c0:	mov	r3, lr
    45c4:	mov	sl, r2
    45c8:	ldr	r3, [ip]
    45cc:	str	ip, [sp]
    45d0:	str	r3, [sp, #12]
    45d4:	bl	11598 <el_line@plt+0xf0e4>
    45d8:	cmp	r5, #0
    45dc:	mov	r8, r0
    45e0:	beq	479c <el_line@plt+0x22e8>
    45e4:	mov	r0, r5
    45e8:	ldr	r4, [pc, #560]	; 4820 <el_line@plt+0x236c>
    45ec:	bl	2310 <strlen@plt>
    45f0:	ldr	fp, [pc, #556]	; 4824 <el_line@plt+0x2370>
    45f4:	add	r4, pc, r4
    45f8:	mov	r6, #0
    45fc:	add	fp, pc, fp
    4600:	mov	r7, r0
    4604:	b	4614 <el_line@plt+0x2160>
    4608:	ldr	fp, [r4, #12]!
    460c:	cmp	fp, #0
    4610:	beq	464c <el_line@plt+0x2198>
    4614:	mov	r0, r5
    4618:	mov	r1, fp
    461c:	mov	r2, r7
    4620:	bl	2220 <strncasecmp@plt>
    4624:	cmp	r0, #0
    4628:	bne	4608 <el_line@plt+0x2154>
    462c:	mov	r0, fp
    4630:	add	fp, r6, #1
    4634:	bl	1163c <el_line@plt+0xf188>
    4638:	str	r0, [r8, r6, lsl #2]
    463c:	mov	r6, fp
    4640:	ldr	fp, [r4, #12]!
    4644:	cmp	fp, #0
    4648:	bne	4614 <el_line@plt+0x2160>
    464c:	cmp	r6, #0
    4650:	str	fp, [r8, r6, lsl #2]
    4654:	beq	4764 <el_line@plt+0x22b0>
    4658:	mov	r0, r5
    465c:	mov	r1, r8
    4660:	mov	r2, r6
    4664:	bl	3c94 <el_line@plt+0x17e0>
    4668:	cmp	r6, #1
    466c:	mov	r4, r0
    4670:	bls	4680 <el_line@plt+0x21cc>
    4674:	mov	r1, fp
    4678:	mov	r0, r8
    467c:	bl	4418 <el_line@plt+0x1f64>
    4680:	ldr	r0, [r8]
    4684:	cmp	r0, #0
    4688:	movne	r7, r8
    468c:	beq	46a0 <el_line@plt+0x21ec>
    4690:	bl	1f20 <free@plt>
    4694:	ldr	r0, [r7, #4]!
    4698:	cmp	r0, #0
    469c:	bne	4690 <el_line@plt+0x21dc>
    46a0:	mov	r0, r8
    46a4:	bl	1f20 <free@plt>
    46a8:	cmp	r4, #0
    46ac:	beq	4744 <el_line@plt+0x2290>
    46b0:	mov	r0, r4
    46b4:	bl	2310 <strlen@plt>
    46b8:	mov	r7, r0
    46bc:	mov	r0, r5
    46c0:	bl	2310 <strlen@plt>
    46c4:	cmp	r7, r0
    46c8:	bls	46e0 <el_line@plt+0x222c>
    46cc:	add	r1, r4, r0
    46d0:	mov	r0, r9
    46d4:	bl	2010 <el_insertstr@plt>
    46d8:	cmn	r0, #1
    46dc:	beq	480c <el_line@plt+0x2358>
    46e0:	mov	r0, r9
    46e4:	bl	24b4 <el_line@plt>
    46e8:	cmp	r6, #1
    46ec:	bne	473c <el_line@plt+0x2288>
    46f0:	ldr	r1, [sp, #56]	; 0x38
    46f4:	cmp	r1, #0
    46f8:	ldreq	r3, [sp, #4]
    46fc:	movne	r3, #0
    4700:	strbeq	r3, [sp, #8]
    4704:	moveq	r3, r6
    4708:	cmp	sl, #0
    470c:	beq	4774 <el_line@plt+0x22c0>
    4710:	add	r1, sp, #16
    4714:	mov	r2, #0
    4718:	add	r3, r1, r3
    471c:	mov	r1, #32
    4720:	strb	r2, [r3, #-7]
    4724:	strb	r1, [r3, #-8]
    4728:	mov	r0, r9
    472c:	add	r1, sp, #8
    4730:	bl	2010 <el_insertstr@plt>
    4734:	cmn	r0, #1
    4738:	beq	480c <el_line@plt+0x2358>
    473c:	mov	r0, r4
    4740:	bl	1f20 <free@plt>
    4744:	mov	r0, r6
    4748:	ldr	r1, [sp]
    474c:	ldr	r2, [sp, #12]
    4750:	ldr	r3, [r1]
    4754:	cmp	r2, r3
    4758:	bne	4808 <el_line@plt+0x2354>
    475c:	add	sp, sp, #20
    4760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4764:	mov	r0, r8
    4768:	bl	1f20 <free@plt>
    476c:	mov	r0, r6
    4770:	b	4748 <el_line@plt+0x2294>
    4774:	ldr	r2, [r0, #4]
    4778:	ldrb	r2, [r2]
    477c:	cmp	r2, #32
    4780:	bne	4710 <el_line@plt+0x225c>
    4784:	add	r2, sp, #16
    4788:	cmp	r3, #0
    478c:	add	r3, r2, r3
    4790:	strb	sl, [r3, #-8]
    4794:	beq	473c <el_line@plt+0x2288>
    4798:	b	4728 <el_line@plt+0x2274>
    479c:	ldr	r6, [pc, #132]	; 4828 <el_line@plt+0x2374>
    47a0:	sub	r4, r0, #4
    47a4:	ldr	r0, [pc, #128]	; 482c <el_line@plt+0x2378>
    47a8:	add	r6, pc, r6
    47ac:	add	r0, pc, r0
    47b0:	bl	1163c <el_line@plt+0xf188>
    47b4:	add	r5, r5, #1
    47b8:	str	r0, [r4, #4]!
    47bc:	ldr	r0, [r6, #12]!
    47c0:	cmp	r0, #0
    47c4:	bne	47b0 <el_line@plt+0x22fc>
    47c8:	str	r0, [r8, r5, lsl #2]
    47cc:	mov	r1, r0
    47d0:	mov	r0, r8
    47d4:	bl	4418 <el_line@plt+0x1f64>
    47d8:	ldr	r0, [r8]
    47dc:	cmp	r0, #0
    47e0:	movne	r4, r8
    47e4:	beq	47f8 <el_line@plt+0x2344>
    47e8:	bl	1f20 <free@plt>
    47ec:	ldr	r0, [r4, #4]!
    47f0:	cmp	r0, #0
    47f4:	bne	47e8 <el_line@plt+0x2334>
    47f8:	mov	r0, r8
    47fc:	bl	1f20 <free@plt>
    4800:	mov	r0, r5
    4804:	b	4748 <el_line@plt+0x2294>
    4808:	bl	21e4 <__stack_chk_fail@plt>
    480c:	ldr	r0, [pc, #28]	; 4830 <el_line@plt+0x237c>
    4810:	add	r0, pc, r0
    4814:	bl	10980 <el_line@plt+0xe4cc>
    4818:			; <UNDEFINED> instruction: 0x0002a7b8
    481c:	andeq	r0, r0, ip, lsr #4
    4820:	andeq	sl, r2, r4, ror #5
    4824:	andeq	r5, r1, r8, lsr sl
    4828:	andeq	sl, r2, r0, lsr r1
    482c:	andeq	r5, r1, r8, lsl #17
    4830:	andeq	r5, r1, r8, lsr #16
    4834:	ldr	r3, [pc, #100]	; 48a0 <el_line@plt+0x23ec>
    4838:	mov	r1, r0
    483c:	ldr	ip, [pc, #96]	; 48a4 <el_line@plt+0x23f0>
    4840:	mov	r0, #3
    4844:	add	r3, pc, r3
    4848:	push	{r4, lr}
    484c:	sub	sp, sp, #112	; 0x70
    4850:	ldr	r4, [r3, ip]
    4854:	mov	r2, sp
    4858:	ldr	r3, [r4]
    485c:	str	r3, [sp, #108]	; 0x6c
    4860:	bl	1f2c <__xstat64@plt>
    4864:	cmn	r0, #1
    4868:	moveq	r0, #0
    486c:	beq	4884 <el_line@plt+0x23d0>
    4870:	ldr	r0, [sp, #16]
    4874:	and	r0, r0, #61440	; 0xf000
    4878:	subs	r3, r0, #16384	; 0x4000
    487c:	rsbs	r0, r3, #0
    4880:	adcs	r0, r0, r3
    4884:	ldr	r2, [sp, #108]	; 0x6c
    4888:	ldr	r3, [r4]
    488c:	cmp	r2, r3
    4890:	bne	489c <el_line@plt+0x23e8>
    4894:	add	sp, sp, #112	; 0x70
    4898:	pop	{r4, pc}
    489c:	bl	21e4 <__stack_chk_fail@plt>
    48a0:	andeq	sl, r2, r0, lsr #10
    48a4:	andeq	r0, r0, ip, lsr #4
    48a8:	ldr	r3, [pc, #168]	; 4958 <el_line@plt+0x24a4>
    48ac:	push	{r4, r5, r6, lr}
    48b0:	add	r3, pc, r3
    48b4:	ldr	r2, [r1]
    48b8:	ldr	r3, [r3]
    48bc:	ldr	ip, [r0]
    48c0:	tst	r3, #64	; 0x40
    48c4:	moveq	r6, #1
    48c8:	mvnne	r6, #0
    48cc:	ands	r1, r3, #8
    48d0:	bne	4928 <el_line@plt+0x2474>
    48d4:	ands	r0, r3, #16
    48d8:	bne	4904 <el_line@plt+0x2450>
    48dc:	tst	r3, #32
    48e0:	beq	494c <el_line@plt+0x2498>
    48e4:	ldrd	r4, [ip, #16]
    48e8:	ldrd	r2, [r2, #16]
    48ec:	cmp	r5, r3
    48f0:	cmpeq	r4, r2
    48f4:	popeq	{r4, r5, r6, pc}
    48f8:	mov	r0, r6
    48fc:	bcs	4920 <el_line@plt+0x246c>
    4900:	pop	{r4, r5, r6, pc}
    4904:	ldr	r0, [ip, #40]	; 0x28
    4908:	ldr	r3, [r2, #40]	; 0x28
    490c:	cmp	r0, r3
    4910:	beq	4944 <el_line@plt+0x2490>
    4914:	mov	r0, r6
    4918:	bcs	4920 <el_line@plt+0x246c>
    491c:	pop	{r4, r5, r6, pc}
    4920:	bl	1953c <el_line@plt+0x17088>
    4924:	pop	{r4, r5, r6, pc}
    4928:	ldr	r1, [r2]
    492c:	ldr	r0, [ip]
    4930:	bl	2388 <strcmp@plt>
    4934:	mov	r1, r0
    4938:	mov	r0, r6
    493c:	bl	193ec <el_line@plt+0x16f38>
    4940:	pop	{r4, r5, r6, pc}
    4944:	mov	r0, r1
    4948:	pop	{r4, r5, r6, pc}
    494c:	ldr	r0, [pc, #8]	; 495c <el_line@plt+0x24a8>
    4950:	add	r0, pc, r0
    4954:	bl	10980 <el_line@plt+0xe4cc>
    4958:	andeq	lr, r2, r8, lsl r0
    495c:	andeq	r5, r1, r0, lsl #14
    4960:	push	{r4, r5, r6, r7, r8, lr}
    4964:	sub	sp, sp, #16
    4968:	ldr	r5, [pc, #444]	; 4b2c <el_line@plt+0x2678>
    496c:	ldr	r2, [pc, #444]	; 4b30 <el_line@plt+0x267c>
    4970:	add	r5, pc, r5
    4974:	ldrb	r3, [r0]
    4978:	ldr	r6, [r5, r2]
    497c:	cmp	r3, #0
    4980:	movne	r8, r0
    4984:	ldr	r0, [pc, #424]	; 4b34 <el_line@plt+0x2680>
    4988:	ldr	r1, [r6]
    498c:	moveq	r8, #0
    4990:	add	r0, pc, r0
    4994:	str	r1, [sp, #12]
    4998:	bl	2460 <getenv@plt>
    499c:	subs	r7, r0, #0
    49a0:	beq	4a54 <el_line@plt+0x25a0>
    49a4:	ldrb	r1, [r7]
    49a8:	cmp	r1, #0
    49ac:	beq	4a28 <el_line@plt+0x2574>
    49b0:	bl	21f0 <fork@plt>
    49b4:	cmn	r0, #1
    49b8:	mov	r4, r0
    49bc:	beq	4ae8 <el_line@plt+0x2634>
    49c0:	cmp	r0, #0
    49c4:	addne	r5, sp, #8
    49c8:	bne	49e0 <el_line@plt+0x252c>
    49cc:	b	4a74 <el_line@plt+0x25c0>
    49d0:	bl	23ac <__errno_location@plt>
    49d4:	ldr	r0, [r0]
    49d8:	cmp	r0, #4
    49dc:	bne	4a60 <el_line@plt+0x25ac>
    49e0:	mov	r0, r4
    49e4:	mov	r1, r5
    49e8:	mov	r2, #0
    49ec:	bl	21a8 <waitpid@plt>
    49f0:	cmn	r0, #1
    49f4:	beq	49d0 <el_line@plt+0x251c>
    49f8:	ldr	r3, [sp, #8]
    49fc:	tst	r3, #127	; 0x7f
    4a00:	bne	4a44 <el_line@plt+0x2590>
    4a04:	ubfx	r1, r3, #8, #8
    4a08:	cmp	r1, #0
    4a0c:	bne	4a34 <el_line@plt+0x2580>
    4a10:	ldr	r2, [sp, #12]
    4a14:	ldr	r3, [r6]
    4a18:	cmp	r2, r3
    4a1c:	bne	4b04 <el_line@plt+0x2650>
    4a20:	add	sp, sp, #16
    4a24:	pop	{r4, r5, r6, r7, r8, pc}
    4a28:	ldr	r7, [pc, #264]	; 4b38 <el_line@plt+0x2684>
    4a2c:	add	r7, pc, r7
    4a30:	b	49b0 <el_line@plt+0x24fc>
    4a34:	ldr	r0, [pc, #256]	; 4b3c <el_line@plt+0x2688>
    4a38:	add	r0, pc, r0
    4a3c:	bl	11238 <el_line@plt+0xed84>
    4a40:	b	4a10 <el_line@plt+0x255c>
    4a44:	ldr	r0, [pc, #244]	; 4b40 <el_line@plt+0x268c>
    4a48:	add	r0, pc, r0
    4a4c:	bl	11238 <el_line@plt+0xed84>
    4a50:	b	4a10 <el_line@plt+0x255c>
    4a54:	ldr	r7, [pc, #232]	; 4b44 <el_line@plt+0x2690>
    4a58:	add	r7, pc, r7
    4a5c:	b	49b0 <el_line@plt+0x24fc>
    4a60:	bl	1fa4 <strerror@plt>
    4a64:	mov	r1, r0
    4a68:	ldr	r0, [pc, #216]	; 4b48 <el_line@plt+0x2694>
    4a6c:	add	r0, pc, r0
    4a70:	bl	10980 <el_line@plt+0xe4cc>
    4a74:	cmp	r8, #0
    4a78:	beq	4b08 <el_line@plt+0x2654>
    4a7c:	ldr	r0, [pc, #200]	; 4b4c <el_line@plt+0x2698>
    4a80:	mov	r1, r7
    4a84:	mov	r2, r8
    4a88:	add	r0, pc, r0
    4a8c:	bl	1148c <el_line@plt+0xefd8>
    4a90:	ldr	r2, [pc, #184]	; 4b50 <el_line@plt+0x269c>
    4a94:	str	r4, [sp]
    4a98:	mov	r3, r8
    4a9c:	mov	r0, r7
    4aa0:	mov	r1, r7
    4aa4:	add	r2, pc, r2
    4aa8:	bl	2034 <execl@plt>
    4aac:	ldr	r3, [pc, #160]	; 4b54 <el_line@plt+0x26a0>
    4ab0:	ldr	r3, [r5, r3]
    4ab4:	ldr	r4, [r3]
    4ab8:	bl	23ac <__errno_location@plt>
    4abc:	ldr	r0, [r0]
    4ac0:	bl	1fa4 <strerror@plt>
    4ac4:	ldr	r2, [pc, #140]	; 4b58 <el_line@plt+0x26a4>
    4ac8:	mov	r3, r7
    4acc:	mov	r1, #1
    4ad0:	add	r2, pc, r2
    4ad4:	str	r0, [sp]
    4ad8:	mov	r0, r4
    4adc:	bl	2028 <__fprintf_chk@plt>
    4ae0:	mov	r0, #1
    4ae4:	bl	237c <_exit@plt>
    4ae8:	bl	23ac <__errno_location@plt>
    4aec:	ldr	r0, [r0]
    4af0:	bl	1fa4 <strerror@plt>
    4af4:	mov	r1, r0
    4af8:	ldr	r0, [pc, #92]	; 4b5c <el_line@plt+0x26a8>
    4afc:	add	r0, pc, r0
    4b00:	bl	10980 <el_line@plt+0xe4cc>
    4b04:	bl	21e4 <__stack_chk_fail@plt>
    4b08:	ldr	r0, [pc, #80]	; 4b60 <el_line@plt+0x26ac>
    4b0c:	mov	r1, r7
    4b10:	add	r0, pc, r0
    4b14:	bl	1148c <el_line@plt+0xefd8>
    4b18:	mov	r0, r7
    4b1c:	mov	r1, r7
    4b20:	mov	r2, r8
    4b24:	bl	2034 <execl@plt>
    4b28:	b	4aac <el_line@plt+0x25f8>
    4b2c:	strdeq	sl, [r2], -r4
    4b30:	andeq	r0, r0, ip, lsr #4
    4b34:	andeq	r5, r1, r0, ror #13
    4b38:	andeq	r5, r1, ip, lsr r6
    4b3c:	ldrdeq	r5, [r1], -r0
    4b40:	andeq	r5, r1, r8, lsr #13
    4b44:	andeq	r5, r1, r0, lsl r6
    4b48:	andeq	r5, r1, r8, ror #12
    4b4c:	andeq	r5, r1, r4, lsl #12
    4b50:	andeq	r5, r1, r0, lsl #12
    4b54:	andeq	r0, r0, r0, asr r2
    4b58:	andeq	r5, r1, r8, ror #11
    4b5c:	andeq	r5, r1, ip, ror r5
    4b60:	muleq	r1, r8, r5
    4b64:	ldr	r3, [pc, #72]	; 4bb4 <el_line@plt+0x2700>
    4b68:	mov	r1, #1
    4b6c:	ldr	r0, [pc, #68]	; 4bb8 <el_line@plt+0x2704>
    4b70:	add	r3, pc, r3
    4b74:	ldr	ip, [pc, #64]	; 4bbc <el_line@plt+0x2708>
    4b78:	push	{lr}		; (str lr, [sp, #-4]!)
    4b7c:	sub	sp, sp, #20
    4b80:	ldr	r0, [r3, r0]
    4b84:	ldr	r3, [r3, ip]
    4b88:	ldr	r2, [pc, #48]	; 4bc0 <el_line@plt+0x270c>
    4b8c:	ldr	ip, [r0]
    4b90:	add	r2, pc, r2
    4b94:	ldr	r0, [r3]
    4b98:	str	ip, [sp]
    4b9c:	mov	r3, ip
    4ba0:	str	ip, [sp, #4]
    4ba4:	str	ip, [sp, #8]
    4ba8:	bl	2028 <__fprintf_chk@plt>
    4bac:	mov	r0, #1
    4bb0:	bl	1f8c <exit@plt>
    4bb4:	strdeq	sl, [r2], -r4
    4bb8:	andeq	r0, r0, r4, lsr r2
    4bbc:	andeq	r0, r0, r0, asr r2
    4bc0:	muleq	r1, r4, r5
    4bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4bc8:	mov	sl, r0
    4bcc:	ldr	r5, [pc, #524]	; 4de0 <el_line@plt+0x292c>
    4bd0:	sub	sp, sp, #28
    4bd4:	ldr	ip, [pc, #520]	; 4de4 <el_line@plt+0x2930>
    4bd8:	mov	r0, #1
    4bdc:	add	r5, pc, r5
    4be0:	mov	fp, r1
    4be4:	mov	r9, r2
    4be8:	mov	r8, r3
    4bec:	ldr	r7, [r5, ip]
    4bf0:	mov	r1, r0
    4bf4:	mov	r2, #0
    4bf8:	add	r3, sp, #12
    4bfc:	ldr	ip, [r7]
    4c00:	str	ip, [sp, #20]
    4c04:	bl	1ecc <socketpair@plt>
    4c08:	cmn	r0, #1
    4c0c:	beq	4da4 <el_line@plt+0x28f0>
    4c10:	ldr	r3, [sp, #12]
    4c14:	ldr	r6, [sp, #16]
    4c18:	str	r3, [r8]
    4c1c:	str	r3, [r9]
    4c20:	bl	21f0 <fork@plt>
    4c24:	ldr	r3, [pc, #444]	; 4de8 <el_line@plt+0x2934>
    4c28:	add	r3, pc, r3
    4c2c:	cmn	r0, #1
    4c30:	mov	r4, r0
    4c34:	str	r0, [r3]
    4c38:	beq	4dc0 <el_line@plt+0x290c>
    4c3c:	cmp	r0, #0
    4c40:	bne	4d24 <el_line@plt+0x2870>
    4c44:	mov	r0, r6
    4c48:	mov	r1, r4
    4c4c:	bl	2154 <dup2@plt>
    4c50:	cmn	r0, #1
    4c54:	beq	4c6c <el_line@plt+0x27b8>
    4c58:	mov	r0, r6
    4c5c:	mov	r1, #1
    4c60:	bl	2154 <dup2@plt>
    4c64:	cmn	r0, #1
    4c68:	bne	4ca4 <el_line@plt+0x27f0>
    4c6c:	ldr	r3, [pc, #376]	; 4dec <el_line@plt+0x2938>
    4c70:	ldr	r3, [r5, r3]
    4c74:	ldr	r4, [r3]
    4c78:	bl	23ac <__errno_location@plt>
    4c7c:	ldr	r0, [r0]
    4c80:	bl	1fa4 <strerror@plt>
    4c84:	ldr	r2, [pc, #356]	; 4df0 <el_line@plt+0x293c>
    4c88:	mov	r1, #1
    4c8c:	add	r2, pc, r2
    4c90:	mov	r3, r0
    4c94:	mov	r0, r4
    4c98:	bl	2028 <__fprintf_chk@plt>
    4c9c:	mov	r0, #1
    4ca0:	bl	237c <_exit@plt>
    4ca4:	ldr	r0, [r9]
    4ca8:	bl	20dc <close@plt>
    4cac:	ldr	r0, [r8]
    4cb0:	bl	20dc <close@plt>
    4cb4:	mov	r0, r6
    4cb8:	bl	20dc <close@plt>
    4cbc:	mov	r0, r6
    4cc0:	bl	20dc <close@plt>
    4cc4:	mov	r1, #1
    4cc8:	mov	r0, #2
    4ccc:	bl	146b8 <el_line@plt+0x12204>
    4cd0:	mov	r1, r4
    4cd4:	mov	r0, #15
    4cd8:	bl	146b8 <el_line@plt+0x12204>
    4cdc:	mov	r1, fp
    4ce0:	mov	r0, sl
    4ce4:	bl	2478 <execvp@plt>
    4ce8:	ldr	r3, [pc, #252]	; 4dec <el_line@plt+0x2938>
    4cec:	ldr	r3, [r5, r3]
    4cf0:	ldr	r4, [r3]
    4cf4:	bl	23ac <__errno_location@plt>
    4cf8:	ldr	r0, [r0]
    4cfc:	bl	1fa4 <strerror@plt>
    4d00:	ldr	r2, [pc, #236]	; 4df4 <el_line@plt+0x2940>
    4d04:	mov	r3, sl
    4d08:	mov	r1, #1
    4d0c:	add	r2, pc, r2
    4d10:	str	r0, [sp]
    4d14:	mov	r0, r4
    4d18:	bl	2028 <__fprintf_chk@plt>
    4d1c:	mov	r0, #1
    4d20:	bl	237c <_exit@plt>
    4d24:	ldr	r5, [pc, #204]	; 4df8 <el_line@plt+0x2944>
    4d28:	mov	r0, #15
    4d2c:	ldr	r4, [pc, #200]	; 4dfc <el_line@plt+0x2948>
    4d30:	add	r5, pc, r5
    4d34:	add	r4, pc, r4
    4d38:	mov	r1, r5
    4d3c:	bl	146b8 <el_line@plt+0x12204>
    4d40:	mov	r1, r5
    4d44:	mov	r0, #2
    4d48:	bl	146b8 <el_line@plt+0x12204>
    4d4c:	mov	r1, r5
    4d50:	mov	r0, #1
    4d54:	bl	146b8 <el_line@plt+0x12204>
    4d58:	mov	r1, r4
    4d5c:	mov	r0, #20
    4d60:	bl	146b8 <el_line@plt+0x12204>
    4d64:	mov	r1, r4
    4d68:	mov	r0, #21
    4d6c:	bl	146b8 <el_line@plt+0x12204>
    4d70:	mov	r1, r4
    4d74:	mov	r0, #22
    4d78:	bl	146b8 <el_line@plt+0x12204>
    4d7c:	mov	r0, r6
    4d80:	bl	20dc <close@plt>
    4d84:	mov	r0, r6
    4d88:	bl	20dc <close@plt>
    4d8c:	ldr	r2, [sp, #20]
    4d90:	ldr	r3, [r7]
    4d94:	cmp	r2, r3
    4d98:	bne	4ddc <el_line@plt+0x2928>
    4d9c:	add	sp, sp, #28
    4da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4da4:	bl	23ac <__errno_location@plt>
    4da8:	ldr	r0, [r0]
    4dac:	bl	1fa4 <strerror@plt>
    4db0:	mov	r1, r0
    4db4:	ldr	r0, [pc, #68]	; 4e00 <el_line@plt+0x294c>
    4db8:	add	r0, pc, r0
    4dbc:	bl	10980 <el_line@plt+0xe4cc>
    4dc0:	bl	23ac <__errno_location@plt>
    4dc4:	ldr	r0, [r0]
    4dc8:	bl	1fa4 <strerror@plt>
    4dcc:	mov	r1, r0
    4dd0:	ldr	r0, [pc, #44]	; 4e04 <el_line@plt+0x2950>
    4dd4:	add	r0, pc, r0
    4dd8:	bl	10980 <el_line@plt+0xe4cc>
    4ddc:	bl	21e4 <__stack_chk_fail@plt>
    4de0:	andeq	sl, r2, r8, lsl #3
    4de4:	andeq	r0, r0, ip, lsr #4
    4de8:	ldrdeq	sl, [r2], -r4
    4dec:	andeq	r0, r0, r0, asr r2
    4df0:	andeq	r5, r1, ip, lsl r6
    4df4:	andeq	r5, r1, r8, lsr #11
    4df8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4dfc:	andeq	r0, r0, r8, lsl #2
    4e00:	ldrdeq	r5, [r1], -r4
    4e04:	andeq	r5, r1, r8, asr #9
    4e08:	ldr	r3, [pc, #48]	; 4e40 <el_line@plt+0x298c>
    4e0c:	push	{r4, lr}
    4e10:	ldr	r4, [pc, r3]
    4e14:	cmp	r4, #1
    4e18:	ble	4e38 <el_line@plt+0x2984>
    4e1c:	mov	r1, #15
    4e20:	mov	r0, r4
    4e24:	bl	213c <kill@plt>
    4e28:	mov	r1, #0
    4e2c:	mov	r0, r4
    4e30:	mov	r2, r1
    4e34:	bl	21a8 <waitpid@plt>
    4e38:	mov	r0, #1
    4e3c:	bl	237c <_exit@plt>
    4e40:	andeq	sl, r2, ip, ror #3
    4e44:	push	{r3, r4, r5, lr}
    4e48:	ldr	r3, [pc, #92]	; 4eac <el_line@plt+0x29f8>
    4e4c:	ldr	r4, [pc, r3]
    4e50:	cmp	r4, #1
    4e54:	ble	4e94 <el_line@plt+0x29e0>
    4e58:	ldr	r5, [pc, #80]	; 4eb0 <el_line@plt+0x29fc>
    4e5c:	mov	r1, r0
    4e60:	mov	r0, r4
    4e64:	add	r5, pc, r5
    4e68:	bl	213c <kill@plt>
    4e6c:	mov	r0, r4
    4e70:	mov	r1, #0
    4e74:	mov	r2, #2
    4e78:	bl	21a8 <waitpid@plt>
    4e7c:	cmn	r0, #1
    4e80:	bne	4e94 <el_line@plt+0x29e0>
    4e84:	bl	23ac <__errno_location@plt>
    4e88:	ldr	r3, [r0]
    4e8c:	cmp	r3, #4
    4e90:	beq	4ea4 <el_line@plt+0x29f0>
    4e94:	bl	1e9c <getpid@plt>
    4e98:	mov	r1, #19
    4e9c:	pop	{r3, r4, r5, lr}
    4ea0:	b	213c <kill@plt>
    4ea4:	ldr	r0, [r5]
    4ea8:	b	4e70 <el_line@plt+0x29bc>
    4eac:			; <UNDEFINED> instruction: 0x0002a1b0
    4eb0:	muleq	r2, r8, r1
    4eb4:	push	{r3, r4, r5, lr}
    4eb8:	mov	r4, r0
    4ebc:	mov	r0, r1
    4ec0:	mov	r1, r4
    4ec4:	bl	d130 <el_line@plt+0xac7c>
    4ec8:	mov	r5, r0
    4ecc:	mov	r0, r4
    4ed0:	bl	1f20 <free@plt>
    4ed4:	mov	r0, r5
    4ed8:	pop	{r3, r4, r5, pc}
    4edc:	ldr	r3, [pc, #1816]	; 55fc <el_line@plt+0x3148>
    4ee0:	ldr	r2, [pc, #1816]	; 5600 <el_line@plt+0x314c>
    4ee4:	add	r3, pc, r3
    4ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4eec:	sub	sp, sp, #140	; 0x8c
    4ef0:	ldr	r2, [r3, r2]
    4ef4:	mov	r7, r0
    4ef8:	ldr	r3, [r2]
    4efc:	str	r2, [sp, #20]
    4f00:	str	r3, [sp, #132]	; 0x84
    4f04:	bl	24b4 <el_line@plt>
    4f08:	mov	r1, #14
    4f0c:	add	r2, sp, #68	; 0x44
    4f10:	mov	r5, r0
    4f14:	mov	r0, r7
    4f18:	bl	1f74 <el_get@plt>
    4f1c:	subs	r6, r0, #0
    4f20:	bne	55e8 <el_line@plt+0x3134>
    4f24:	ldr	r1, [r5]
    4f28:	ldr	r0, [r5, #4]
    4f2c:	bl	19350 <el_line@plt+0x16e9c>
    4f30:	mov	r9, r0
    4f34:	add	r0, r0, #1
    4f38:	bl	1155c <el_line@plt+0xf0a8>
    4f3c:	mov	r2, r9
    4f40:	ldr	r1, [r5]
    4f44:	mov	r4, r0
    4f48:	bl	22d4 <memcpy@plt>
    4f4c:	mov	r2, #1
    4f50:	strb	r6, [r4, r9]
    4f54:	add	r1, sp, #60	; 0x3c
    4f58:	mov	r0, r4
    4f5c:	add	r3, sp, #64	; 0x40
    4f60:	str	r3, [sp]
    4f64:	add	r3, sp, #55	; 0x37
    4f68:	bl	3e3c <el_line@plt+0x1988>
    4f6c:	mov	r0, r4
    4f70:	bl	1f20 <free@plt>
    4f74:	ldr	r1, [r5]
    4f78:	ldr	r0, [r5, #8]
    4f7c:	bl	19350 <el_line@plt+0x16e9c>
    4f80:	mov	r8, r0
    4f84:	add	r0, r0, #1
    4f88:	bl	1155c <el_line@plt+0xf0a8>
    4f8c:	ldr	r1, [r5]
    4f90:	mov	r2, r8
    4f94:	mov	r4, r0
    4f98:	bl	22d4 <memcpy@plt>
    4f9c:	strb	r6, [r4, r8]
    4fa0:	mov	r3, r6
    4fa4:	str	r6, [sp]
    4fa8:	mov	r0, r4
    4fac:	add	r1, sp, #56	; 0x38
    4fb0:	mov	r2, #1
    4fb4:	bl	3e3c <el_line@plt+0x1988>
    4fb8:	ldrb	r3, [r4, r9]
    4fbc:	tst	r3, #223	; 0xdf
    4fc0:	str	r0, [sp, #16]
    4fc4:	beq	4ffc <el_line@plt+0x2b48>
    4fc8:	cmp	r3, #10
    4fcc:	beq	4ffc <el_line@plt+0x2b48>
    4fd0:	mov	r0, r4
    4fd4:	mov	r5, #6
    4fd8:	bl	1f20 <free@plt>
    4fdc:	ldr	ip, [sp, #20]
    4fe0:	mov	r0, r5
    4fe4:	ldr	r2, [sp, #132]	; 0x84
    4fe8:	ldr	r3, [ip]
    4fec:	cmp	r2, r3
    4ff0:	bne	55d8 <el_line@plt+0x3124>
    4ff4:	add	sp, sp, #140	; 0x8c
    4ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ffc:	ldr	r8, [sp, #60]	; 0x3c
    5000:	cmp	r8, #0
    5004:	beq	5248 <el_line@plt+0x2d94>
    5008:	cmp	r8, #1
    500c:	beq	51ec <el_line@plt+0x2d38>
    5010:	cmp	r8, #0
    5014:	ble	5238 <el_line@plt+0x2d84>
    5018:	ldr	ip, [sp, #16]
    501c:	ldr	sl, [ip]
    5020:	cmp	sl, #0
    5024:	beq	527c <el_line@plt+0x2dc8>
    5028:	ldr	r6, [pc, #1492]	; 5604 <el_line@plt+0x3150>
    502c:	mov	r2, #3
    5030:	ldr	fp, [pc, #1488]	; 5608 <el_line@plt+0x3154>
    5034:	mov	r5, #0
    5038:	add	r6, pc, r6
    503c:	add	fp, pc, fp
    5040:	b	506c <el_line@plt+0x2bb8>
    5044:	mov	r0, r5
    5048:	mov	r1, #1
    504c:	bl	192bc <el_line@plt+0x16e08>
    5050:	ldr	fp, [r6, #12]!
    5054:	cmp	fp, #0
    5058:	mov	r5, r0
    505c:	beq	527c <el_line@plt+0x2dc8>
    5060:	mov	r0, fp
    5064:	bl	2310 <strlen@plt>
    5068:	mov	r2, r0
    506c:	mov	r1, fp
    5070:	mov	r0, sl
    5074:	bl	2220 <strncasecmp@plt>
    5078:	cmp	r0, #0
    507c:	bne	5044 <el_line@plt+0x2b90>
    5080:	ldr	r3, [pc, #1412]	; 560c <el_line@plt+0x3158>
    5084:	add	r5, r5, r5, lsl #1
    5088:	add	r3, pc, r3
    508c:	add	r5, r3, r5, lsl #2
    5090:	ldr	sl, [r5, #8]
    5094:	cmp	r8, #1
    5098:	beq	5274 <el_line@plt+0x2dc0>
    509c:	add	r9, r4, r9
    50a0:	ldrb	r2, [r9, #-1]
    50a4:	cmp	r2, #32
    50a8:	beq	5274 <el_line@plt+0x2dc0>
    50ac:	ldr	r3, [sp, #16]
    50b0:	sub	r2, r8, #-1073741823	; 0xc0000001
    50b4:	ldr	r5, [r3, r2, lsl #2]
    50b8:	cmp	sl, #0
    50bc:	beq	5238 <el_line@plt+0x2d84>
    50c0:	ldr	ip, [sp, #56]	; 0x38
    50c4:	cmp	r5, #0
    50c8:	ldr	r2, [sp, #68]	; 0x44
    50cc:	str	ip, [sp, #36]	; 0x24
    50d0:	ldrb	ip, [sp, #55]	; 0x37
    50d4:	ldr	r1, [r2, #4]
    50d8:	ldr	r6, [r2]
    50dc:	str	ip, [sp, #28]
    50e0:	ldr	ip, [sp, #64]	; 0x40
    50e4:	ldr	r9, [r1]
    50e8:	str	ip, [sp, #32]
    50ec:	beq	5584 <el_line@plt+0x30d0>
    50f0:	ldr	r1, [pc, #1304]	; 5610 <el_line@plt+0x315c>
    50f4:	add	r0, sp, #72	; 0x48
    50f8:	mov	r2, r5
    50fc:	add	r1, pc, r1
    5100:	bl	1166c <el_line@plt+0xf1b8>
    5104:	ldr	fp, [sp, #72]	; 0x48
    5108:	add	ip, sp, #76	; 0x4c
    510c:	str	ip, [sp, #24]
    5110:	ldrb	ip, [fp]
    5114:	mov	r1, #0
    5118:	mov	r2, #48	; 0x30
    511c:	add	r0, sp, #76	; 0x4c
    5120:	str	ip, [sp, #16]
    5124:	bl	2064 <memset@plt>
    5128:	cmp	sl, #2
    512c:	beq	559c <el_line@plt+0x30e8>
    5130:	ldrb	r3, [fp]
    5134:	cmp	r3, #47	; 0x2f
    5138:	beq	514c <el_line@plt+0x2c98>
    513c:	mov	r0, fp
    5140:	mov	r1, r9
    5144:	bl	4eb4 <el_line@plt+0x2a00>
    5148:	mov	fp, r0
    514c:	add	r1, sp, #76	; 0x4c
    5150:	mov	r0, r6
    5154:	str	r1, [sp]
    5158:	mov	r2, #10
    515c:	mov	r1, fp
    5160:	mov	r3, #0
    5164:	str	fp, [sp, #72]	; 0x48
    5168:	bl	e448 <el_line@plt+0xbf94>
    516c:	ldr	r0, [sp, #72]	; 0x48
    5170:	ldrb	r6, [r0]
    5174:	cmp	r6, #0
    5178:	beq	55b4 <el_line@plt+0x3100>
    517c:	cmp	r6, #63	; 0x3f
    5180:	cmpne	r6, #42	; 0x2a
    5184:	movne	fp, #0
    5188:	moveq	fp, #1
    518c:	movne	r3, fp
    5190:	bne	51c0 <el_line@plt+0x2d0c>
    5194:	b	5284 <el_line@plt+0x2dd0>
    5198:	ldrb	r6, [r0, r2]
    519c:	ldrb	r1, [r0, r3]
    51a0:	mov	r3, r2
    51a4:	cmp	r1, #47	; 0x2f
    51a8:	moveq	fp, r3
    51ac:	cmp	r6, #0
    51b0:	beq	52a8 <el_line@plt+0x2df4>
    51b4:	cmp	r6, #42	; 0x2a
    51b8:	cmpne	r6, #63	; 0x3f
    51bc:	beq	528c <el_line@plt+0x2dd8>
    51c0:	cmp	r6, #92	; 0x5c
    51c4:	add	r2, r3, #1
    51c8:	bne	5198 <el_line@plt+0x2ce4>
    51cc:	ldrb	r6, [r0, r2]
    51d0:	cmp	r6, #0
    51d4:	addne	r3, r3, #2
    51d8:	ldrbeq	r1, [r0, r3]
    51dc:	movne	r1, r6
    51e0:	moveq	r3, r2
    51e4:	ldrbne	r6, [r0, r3]
    51e8:	b	51a4 <el_line@plt+0x2cf0>
    51ec:	cmp	r9, #0
    51f0:	beq	5018 <el_line@plt+0x2b64>
    51f4:	add	r3, r4, r9
    51f8:	ldrb	r3, [r3, #-1]
    51fc:	cmp	r3, #32
    5200:	beq	5018 <el_line@plt+0x2b64>
    5204:	ldr	r3, [sp, #16]
    5208:	mov	r0, r7
    520c:	ldr	ip, [sp, #64]	; 0x40
    5210:	ldr	r2, [sp, #56]	; 0x38
    5214:	ldr	r1, [r3]
    5218:	str	ip, [sp]
    521c:	subs	ip, r2, #1
    5220:	rsbs	r2, ip, #0
    5224:	ldrb	r3, [sp, #55]	; 0x37
    5228:	adcs	r2, r2, ip
    522c:	bl	4594 <el_line@plt+0x20e0>
    5230:	cmp	r0, #0
    5234:	bne	52fc <el_line@plt+0x2e48>
    5238:	mov	r5, #6
    523c:	mov	r0, r4
    5240:	bl	1f20 <free@plt>
    5244:	b	4fdc <el_line@plt+0x2b28>
    5248:	ldr	r2, [sp, #56]	; 0x38
    524c:	mov	ip, #1
    5250:	mov	r1, r8
    5254:	mov	r0, r7
    5258:	rsbs	r2, r2, #1
    525c:	mov	r3, r8
    5260:	str	ip, [sp]
    5264:	mov	r5, #8
    5268:	movcc	r2, #0
    526c:	bl	4594 <el_line@plt+0x20e0>
    5270:	b	523c <el_line@plt+0x2d88>
    5274:	mov	r5, #0
    5278:	b	50b8 <el_line@plt+0x2c04>
    527c:	mvn	sl, #0
    5280:	b	5094 <el_line@plt+0x2be0>
    5284:	mov	fp, #0
    5288:	mov	r3, fp
    528c:	cmp	r6, #42	; 0x2a
    5290:	movne	r6, #1
    5294:	bne	52a8 <el_line@plt+0x2df4>
    5298:	add	r3, r0, r3
    529c:	ldrb	r6, [r3, #1]
    52a0:	adds	r6, r6, #0
    52a4:	movne	r6, #1
    52a8:	bl	1f20 <free@plt>
    52ac:	ldr	r3, [sp, #80]	; 0x50
    52b0:	mov	r2, #0
    52b4:	str	r2, [sp, #72]	; 0x48
    52b8:	cmp	r3, r2
    52bc:	beq	52e8 <el_line@plt+0x2e34>
    52c0:	cmp	r3, #1
    52c4:	ble	52d4 <el_line@plt+0x2e20>
    52c8:	mov	r1, fp
    52cc:	ldr	r0, [sp, #92]	; 0x5c
    52d0:	bl	4418 <el_line@plt+0x1f64>
    52d4:	and	r6, r6, #1
    52d8:	cmp	r5, #0
    52dc:	orreq	r6, r6, #1
    52e0:	cmp	r6, #0
    52e4:	beq	5304 <el_line@plt+0x2e50>
    52e8:	add	r0, sp, #76	; 0x4c
    52ec:	bl	17408 <el_line@plt+0x14f54>
    52f0:	ldr	r3, [sp, #80]	; 0x50
    52f4:	cmp	r3, #0
    52f8:	beq	5238 <el_line@plt+0x2d84>
    52fc:	mov	r5, #8
    5300:	b	523c <el_line@plt+0x2d88>
    5304:	ldr	r1, [sp, #92]	; 0x5c
    5308:	mov	r0, r5
    530c:	ldr	r2, [sp, #80]	; 0x50
    5310:	bl	3c94 <el_line@plt+0x17e0>
    5314:	ldr	ip, [sp, #16]
    5318:	cmp	ip, #47	; 0x2f
    531c:	movne	r1, r9
    5320:	moveq	r1, #0
    5324:	mov	fp, r0
    5328:	bl	4360 <el_line@plt+0x1eac>
    532c:	str	r0, [sp, #72]	; 0x48
    5330:	mov	r0, fp
    5334:	bl	1f20 <free@plt>
    5338:	ldr	r9, [sp, #72]	; 0x48
    533c:	cmp	r9, #0
    5340:	beq	52e8 <el_line@plt+0x2e34>
    5344:	mov	r0, r9
    5348:	bl	2310 <strlen@plt>
    534c:	mov	sl, r0
    5350:	mov	r0, r5
    5354:	bl	2310 <strlen@plt>
    5358:	cmp	r0, #0
    535c:	beq	53b0 <el_line@plt+0x2efc>
    5360:	mov	r2, r6
    5364:	mov	r3, #1
    5368:	mov	ip, r6
    536c:	mov	r1, r6
    5370:	b	5388 <el_line@plt+0x2ed4>
    5374:	cmp	r0, r3
    5378:	bls	53b4 <el_line@plt+0x2f00>
    537c:	mov	r1, #0
    5380:	add	r2, r2, #1
    5384:	add	r3, r3, #1
    5388:	cmp	r1, #0
    538c:	bne	5374 <el_line@plt+0x2ec0>
    5390:	ldrb	r1, [r5, r2]
    5394:	cmp	r1, #92	; 0x5c
    5398:	bne	5374 <el_line@plt+0x2ec0>
    539c:	cmp	r0, r3
    53a0:	bls	53b4 <el_line@plt+0x2f00>
    53a4:	add	ip, ip, #1
    53a8:	mov	r1, #1
    53ac:	b	5380 <el_line@plt+0x2ecc>
    53b0:	mov	ip, r0
    53b4:	rsb	r0, ip, r0
    53b8:	cmp	sl, r0
    53bc:	bls	54ec <el_line@plt+0x3038>
    53c0:	add	ip, r9, r0
    53c4:	str	ip, [sp, #12]
    53c8:	mov	r0, ip
    53cc:	bl	2310 <strlen@plt>
    53d0:	ldr	ip, [sp, #12]
    53d4:	subs	r9, r0, #0
    53d8:	beq	54ec <el_line@plt+0x3038>
    53dc:	add	r1, sp, #124	; 0x7c
    53e0:	str	r8, [sp, #44]	; 0x2c
    53e4:	mov	r5, #0
    53e8:	add	sl, sp, #125	; 0x7d
    53ec:	str	r1, [sp, #16]
    53f0:	mov	r8, ip
    53f4:	str	r4, [sp, #40]	; 0x28
    53f8:	ldr	r6, [sp, #28]
    53fc:	b	5438 <el_line@plt+0x2f84>
    5400:	cmp	r3, #34	; 0x22
    5404:	bcs	54a4 <el_line@plt+0x2ff0>
    5408:	cmp	r3, #9
    540c:	beq	54a4 <el_line@plt+0x2ff0>
    5410:	cmp	r3, #32
    5414:	beq	54a4 <el_line@plt+0x2ff0>
    5418:	mov	r0, r7
    541c:	mov	r1, sl
    5420:	bl	2010 <el_insertstr@plt>
    5424:	cmn	r0, #1
    5428:	beq	54c8 <el_line@plt+0x3014>
    542c:	add	r5, r5, r4
    5430:	cmp	r9, r5
    5434:	bls	54e4 <el_line@plt+0x3030>
    5438:	add	fp, r8, r5
    543c:	rsb	r1, r5, r9
    5440:	mov	r0, fp
    5444:	bl	1f98 <mblen@plt>
    5448:	subs	r4, r0, #0
    544c:	blt	55dc <el_line@plt+0x3128>
    5450:	cmp	r4, #6
    5454:	bhi	55dc <el_line@plt+0x3128>
    5458:	mov	r1, fp
    545c:	mov	r2, r4
    5460:	mov	r3, #7
    5464:	mov	r0, sl
    5468:	mov	ip, #92	; 0x5c
    546c:	strb	ip, [sp, #124]	; 0x7c
    5470:	bl	1ea8 <__memcpy_chk@plt>
    5474:	add	r1, sp, #136	; 0x88
    5478:	add	r3, r1, r4
    547c:	mov	r2, #0
    5480:	strb	r2, [r3, #-11]
    5484:	ldrb	r3, [fp]
    5488:	cmp	r3, #35	; 0x23
    548c:	bls	5400 <el_line@plt+0x2f4c>
    5490:	cmp	r3, #42	; 0x2a
    5494:	beq	54a4 <el_line@plt+0x2ff0>
    5498:	bhi	54d4 <el_line@plt+0x3020>
    549c:	cmp	r3, #39	; 0x27
    54a0:	bne	5418 <el_line@plt+0x2f64>
    54a4:	cmp	r6, #0
    54a8:	beq	54b4 <el_line@plt+0x3000>
    54ac:	cmp	r6, r3
    54b0:	bne	5418 <el_line@plt+0x2f64>
    54b4:	mov	r0, r7
    54b8:	add	r1, sp, #124	; 0x7c
    54bc:	bl	2010 <el_insertstr@plt>
    54c0:	cmn	r0, #1
    54c4:	bne	542c <el_line@plt+0x2f78>
    54c8:	ldr	r0, [pc, #324]	; 5614 <el_line@plt+0x3160>
    54cc:	add	r0, pc, r0
    54d0:	bl	10980 <el_line@plt+0xe4cc>
    54d4:	sub	r2, r3, #91	; 0x5b
    54d8:	cmp	r2, #1
    54dc:	bls	54a4 <el_line@plt+0x2ff0>
    54e0:	b	5418 <el_line@plt+0x2f64>
    54e4:	ldr	r4, [sp, #40]	; 0x28
    54e8:	ldr	r8, [sp, #44]	; 0x2c
    54ec:	mov	r0, r7
    54f0:	bl	24b4 <el_line@plt>
    54f4:	ldr	r3, [sp, #80]	; 0x50
    54f8:	cmp	r3, #1
    54fc:	bne	5578 <el_line@plt+0x30c4>
    5500:	ldr	ip, [sp, #28]
    5504:	ldr	r1, [sp, #32]
    5508:	adds	r2, ip, #0
    550c:	movne	r2, #1
    5510:	cmp	r1, #0
    5514:	movne	r2, #0
    5518:	cmp	r2, #0
    551c:	strbne	ip, [sp, #124]	; 0x7c
    5520:	moveq	r3, r2
    5524:	ldr	r2, [r0, #4]
    5528:	ldrb	r1, [r2, #-1]
    552c:	cmp	r1, #47	; 0x2f
    5530:	beq	55bc <el_line@plt+0x3108>
    5534:	ldr	ip, [sp, #36]	; 0x24
    5538:	cmp	r8, ip
    553c:	beq	554c <el_line@plt+0x3098>
    5540:	ldrb	r2, [r2]
    5544:	cmp	r2, #32
    5548:	beq	55bc <el_line@plt+0x3108>
    554c:	add	r1, sp, #136	; 0x88
    5550:	mov	r2, #0
    5554:	add	r3, r1, r3
    5558:	mov	r1, #32
    555c:	strb	r2, [r3, #-11]
    5560:	strb	r1, [r3, #-12]
    5564:	mov	r0, r7
    5568:	add	r1, sp, #124	; 0x7c
    556c:	bl	2010 <el_insertstr@plt>
    5570:	cmn	r0, #1
    5574:	beq	54c8 <el_line@plt+0x3014>
    5578:	ldr	r0, [sp, #72]	; 0x48
    557c:	bl	1f20 <free@plt>
    5580:	b	52e8 <el_line@plt+0x2e34>
    5584:	ldr	r0, [pc, #140]	; 5618 <el_line@plt+0x3164>
    5588:	add	r0, pc, r0
    558c:	bl	1163c <el_line@plt+0xf188>
    5590:	mov	fp, r0
    5594:	str	r0, [sp, #72]	; 0x48
    5598:	b	5108 <el_line@plt+0x2c54>
    559c:	mov	r0, fp
    55a0:	mov	r1, #10
    55a4:	mov	r2, #0
    55a8:	add	r3, sp, #76	; 0x4c
    55ac:	bl	171fc <el_line@plt+0x14d48>
    55b0:	b	516c <el_line@plt+0x2cb8>
    55b4:	mov	fp, r6
    55b8:	b	52a8 <el_line@plt+0x2df4>
    55bc:	add	r2, sp, #136	; 0x88
    55c0:	cmp	r3, #0
    55c4:	add	r3, r2, r3
    55c8:	mov	r2, #0
    55cc:	strb	r2, [r3, #-12]
    55d0:	beq	5578 <el_line@plt+0x30c4>
    55d4:	b	5564 <el_line@plt+0x30b0>
    55d8:	bl	21e4 <__stack_chk_fail@plt>
    55dc:	ldr	r0, [pc, #56]	; 561c <el_line@plt+0x3168>
    55e0:	add	r0, pc, r0
    55e4:	bl	10980 <el_line@plt+0xe4cc>
    55e8:	ldr	r0, [pc, #48]	; 5620 <el_line@plt+0x316c>
    55ec:	ldr	r1, [pc, #48]	; 5624 <el_line@plt+0x3170>
    55f0:	add	r0, pc, r0
    55f4:	add	r1, pc, r1
    55f8:	bl	10980 <el_line@plt+0xe4cc>
    55fc:	andeq	r9, r2, r0, lsl #29
    5600:	andeq	r0, r0, ip, lsr #4
    5604:	andeq	r9, r2, r0, lsr #17
    5608:	strdeq	r4, [r1], -r8
    560c:	andeq	r9, r2, r0, asr r8
    5610:	andeq	r5, r1, r0, ror #3
    5614:	andeq	r4, r1, ip, ror #22
    5618:	andeq	r4, r1, r0, asr sp
    561c:	andeq	r4, r1, r0, lsl #26
    5620:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    5624:	andeq	r4, r1, r0, ror #19
    5628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    562c:	mov	r6, r3
    5630:	ldr	r5, [pc, #856]	; 5990 <el_line@plt+0x34dc>
    5634:	sub	sp, sp, #156	; 0x9c
    5638:	ldr	ip, [pc, #852]	; 5994 <el_line@plt+0x34e0>
    563c:	mov	sl, r2
    5640:	add	r5, pc, r5
    5644:	add	r2, sp, #36	; 0x24
    5648:	mov	r9, r1
    564c:	ldr	ip, [r5, ip]
    5650:	ldr	r3, [ip]
    5654:	str	ip, [sp, #8]
    5658:	str	r3, [sp, #148]	; 0x94
    565c:	bl	ab8c <el_line@plt+0x86d8>
    5660:	subs	r4, r0, #0
    5664:	movne	r0, r4
    5668:	bne	5774 <el_line@plt+0x32c0>
    566c:	tst	r6, #2
    5670:	bne	5790 <el_line@plt+0x32dc>
    5674:	ldr	r8, [sp, #36]	; 0x24
    5678:	ldr	r3, [r8]
    567c:	cmp	r3, #0
    5680:	beq	5984 <el_line@plt+0x34d0>
    5684:	and	r7, r6, #128	; 0x80
    5688:	mov	fp, r4
    568c:	b	56a8 <el_line@plt+0x31f4>
    5690:	bl	2310 <strlen@plt>
    5694:	ldr	r3, [r8, #4]!
    5698:	cmp	fp, r0
    569c:	movcc	fp, r0
    56a0:	cmp	r3, #0
    56a4:	beq	56cc <el_line@plt+0x3218>
    56a8:	ldr	r0, [r3]
    56ac:	ldrb	r3, [r0]
    56b0:	cmp	r3, #46	; 0x2e
    56b4:	bne	5690 <el_line@plt+0x31dc>
    56b8:	cmp	r7, #0
    56bc:	bne	5690 <el_line@plt+0x31dc>
    56c0:	ldr	r3, [r8, #4]!
    56c4:	cmp	r3, #0
    56c8:	bne	56a8 <el_line@plt+0x31f4>
    56cc:	mov	r1, sl
    56d0:	mov	r0, r9
    56d4:	bl	4360 <el_line@plt+0x1eac>
    56d8:	mov	r7, r0
    56dc:	bl	2310 <strlen@plt>
    56e0:	add	fp, r0, fp
    56e4:	mov	r0, r7
    56e8:	bl	1f20 <free@plt>
    56ec:	ldr	r3, [pc, #676]	; 5998 <el_line@plt+0x34e4>
    56f0:	ldr	r3, [r5, r3]
    56f4:	ldr	r0, [r3]
    56f8:	bl	21cc <fileno@plt>
    56fc:	add	r2, sp, #40	; 0x28
    5700:	movw	r1, #21523	; 0x5413
    5704:	bl	2148 <ioctl@plt>
    5708:	add	r1, fp, #2
    570c:	cmn	r0, #1
    5710:	ldrhne	r5, [sp, #42]	; 0x2a
    5714:	moveq	r5, #80	; 0x50
    5718:	mov	r0, r5
    571c:	bl	187d4 <el_line@plt+0x16320>
    5720:	cmp	r0, #1
    5724:	movcc	r0, #1
    5728:	str	r0, [sp, #12]
    572c:	ldr	r1, [sp, #12]
    5730:	mov	r0, r5
    5734:	bl	187d4 <el_line@plt+0x16320>
    5738:	cmp	r0, r5
    573c:	movcs	r0, r5
    5740:	str	r0, [sp, #24]
    5744:	b	579c <el_line@plt+0x32e8>
    5748:	ldr	ip, [sp]
    574c:	cmp	ip, #0
    5750:	bne	576c <el_line@plt+0x32b8>
    5754:	ldr	ip, [sp, #4]
    5758:	cmp	ip, #1
    575c:	beq	576c <el_line@plt+0x32b8>
    5760:	mov	r0, #10
    5764:	bl	2058 <putchar@plt>
    5768:	ldr	r0, [sp, #36]	; 0x24
    576c:	bl	a48c <el_line@plt+0x7fd8>
    5770:	mov	r0, #0
    5774:	ldr	ip, [sp, #8]
    5778:	ldr	r2, [sp, #148]	; 0x94
    577c:	ldr	r3, [ip]
    5780:	cmp	r2, r3
    5784:	bne	598c <el_line@plt+0x34d8>
    5788:	add	sp, sp, #156	; 0x9c
    578c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5790:	mov	ip, #1
    5794:	str	r4, [sp, #24]
    5798:	str	ip, [sp, #12]
    579c:	tst	r6, #56	; 0x38
    57a0:	beq	57f8 <el_line@plt+0x3344>
    57a4:	ldr	r5, [sp, #36]	; 0x24
    57a8:	ldr	r1, [r5]
    57ac:	cmp	r1, #0
    57b0:	beq	57d4 <el_line@plt+0x3320>
    57b4:	mov	r7, r5
    57b8:	mov	r0, r4
    57bc:	mov	r1, #1
    57c0:	bl	192bc <el_line@plt+0x16e08>
    57c4:	ldr	r3, [r7, #4]!
    57c8:	cmp	r3, #0
    57cc:	mov	r1, r0
    57d0:	bne	57bc <el_line@plt+0x3308>
    57d4:	ldr	ip, [pc, #448]	; 599c <el_line@plt+0x34e8>
    57d8:	mov	r0, r5
    57dc:	ldr	r3, [pc, #444]	; 59a0 <el_line@plt+0x34ec>
    57e0:	mov	r2, #4
    57e4:	add	ip, pc, ip
    57e8:	and	lr, r6, #120	; 0x78
    57ec:	add	r3, pc, r3
    57f0:	str	lr, [ip]
    57f4:	bl	1f38 <qsort@plt>
    57f8:	ldr	r0, [sp, #36]	; 0x24
    57fc:	ldr	r3, [r0]
    5800:	cmp	r3, #0
    5804:	beq	576c <el_line@plt+0x32b8>
    5808:	ldr	r2, [pc, #404]	; 59a4 <el_line@plt+0x34f0>
    580c:	ldr	r7, [pc, r2]
    5810:	cmp	r7, #0
    5814:	bne	576c <el_line@plt+0x32b8>
    5818:	ldr	ip, [pc, #392]	; 59a8 <el_line@plt+0x34f4>
    581c:	mov	r4, #4
    5820:	ldr	r8, [pc, #388]	; 59ac <el_line@plt+0x34f8>
    5824:	add	ip, pc, ip
    5828:	str	ip, [sp, #28]
    582c:	and	ip, r6, #1
    5830:	str	ip, [sp]
    5834:	ldr	ip, [pc, #372]	; 59b0 <el_line@plt+0x34fc>
    5838:	add	r8, pc, r8
    583c:	add	ip, pc, ip
    5840:	str	ip, [sp, #16]
    5844:	ldr	ip, [pc, #360]	; 59b4 <el_line@plt+0x3500>
    5848:	add	ip, pc, ip
    584c:	str	ip, [sp, #20]
    5850:	mov	ip, #1
    5854:	str	ip, [sp, #4]
    5858:	b	58e0 <el_line@plt+0x342c>
    585c:	add	fp, sp, #40	; 0x28
    5860:	mov	r1, #0
    5864:	mov	r2, #104	; 0x68
    5868:	mov	r0, fp
    586c:	bl	2064 <memset@plt>
    5870:	ldr	r2, [sp, #36]	; 0x24
    5874:	mov	r1, fp
    5878:	ldr	r0, [r2, r7]
    587c:	add	r0, r0, #8
    5880:	bl	dbdc <el_line@plt+0xb728>
    5884:	mov	r1, fp
    5888:	mov	r2, #1
    588c:	and	r3, r6, #256	; 0x100
    5890:	mov	r0, r5
    5894:	bl	dffc <el_line@plt+0xbb48>
    5898:	mov	r7, r0
    589c:	ldr	r0, [sp, #20]
    58a0:	mov	r1, r7
    58a4:	bl	14498 <el_line@plt+0x11fe4>
    58a8:	mov	r0, r7
    58ac:	bl	1f20 <free@plt>
    58b0:	mov	r0, r5
    58b4:	bl	1f20 <free@plt>
    58b8:	ldr	r0, [sp, #36]	; 0x24
    58bc:	ldr	r3, [r0, r4]
    58c0:	cmp	r3, #0
    58c4:	beq	5748 <el_line@plt+0x3294>
    58c8:	ldr	r2, [r8]
    58cc:	add	r1, r4, #4
    58d0:	cmp	r2, #0
    58d4:	bne	5748 <el_line@plt+0x3294>
    58d8:	mov	r7, r4
    58dc:	mov	r4, r1
    58e0:	ldr	r1, [r3]
    58e4:	ldrb	r3, [r1]
    58e8:	cmp	r3, #46	; 0x2e
    58ec:	bne	58f8 <el_line@plt+0x3444>
    58f0:	tst	r6, #128	; 0x80
    58f4:	beq	58bc <el_line@plt+0x3408>
    58f8:	mov	r0, r9
    58fc:	bl	d130 <el_line@plt+0xac7c>
    5900:	mov	r1, sl
    5904:	mov	fp, r0
    5908:	bl	4360 <el_line@plt+0x1eac>
    590c:	mov	r5, r0
    5910:	mov	r0, fp
    5914:	bl	1f20 <free@plt>
    5918:	ldr	ip, [sp]
    591c:	cmp	ip, #0
    5920:	beq	5944 <el_line@plt+0x3490>
    5924:	tst	r6, #260	; 0x104
    5928:	bne	585c <el_line@plt+0x33a8>
    592c:	ldr	r3, [sp, #36]	; 0x24
    5930:	ldr	r0, [sp, #16]
    5934:	ldr	r3, [r3, r7]
    5938:	ldr	r1, [r3, #4]
    593c:	bl	14498 <el_line@plt+0x11fe4>
    5940:	b	58b0 <el_line@plt+0x33fc>
    5944:	ldr	r1, [sp, #24]
    5948:	mov	r2, r5
    594c:	ldr	r0, [sp, #28]
    5950:	bl	14498 <el_line@plt+0x11fe4>
    5954:	ldr	ip, [sp, #12]
    5958:	ldr	r1, [sp, #4]
    595c:	cmp	ip, r1
    5960:	ldrhi	ip, [sp, #4]
    5964:	addhi	ip, ip, #1
    5968:	strhi	ip, [sp, #4]
    596c:	bhi	58b0 <el_line@plt+0x33fc>
    5970:	mov	r0, #10
    5974:	mov	ip, #1
    5978:	str	ip, [sp, #4]
    597c:	bl	2058 <putchar@plt>
    5980:	b	58b0 <el_line@plt+0x33fc>
    5984:	mov	fp, r4
    5988:	b	56cc <el_line@plt+0x3218>
    598c:	bl	21e4 <__stack_chk_fail@plt>
    5990:	andeq	r9, r2, r4, lsr #14
    5994:	andeq	r0, r0, ip, lsr #4
    5998:	andeq	r0, r0, r4, lsr #4
    599c:	andeq	sp, r2, r4, ror #1
    59a0:			; <UNDEFINED> instruction: 0xfffff0b4
    59a4:	andeq	r9, r2, r4, lsl r9
    59a8:	andeq	r4, r1, r8, lsl #16
    59ac:	andeq	r9, r2, r8, ror #17
    59b0:	andeq	r4, r1, r0, asr #26
    59b4:	andeq	r4, r1, r4, lsr sp
    59b8:	push	{r3, r4, r5, r6, r7, lr}
    59bc:	mov	r3, #1
    59c0:	ldr	r4, [pc, #112]	; 5a38 <el_line@plt+0x3584>
    59c4:	mov	r6, r0
    59c8:	ldr	r7, [pc, #108]	; 5a3c <el_line@plt+0x3588>
    59cc:	mov	r0, r2
    59d0:	add	r4, pc, r4
    59d4:	ldr	r5, [pc, #100]	; 5a40 <el_line@plt+0x358c>
    59d8:	ldr	lr, [pc, #100]	; 5a44 <el_line@plt+0x3590>
    59dc:	mov	ip, #0
    59e0:	ldr	r7, [r4, r7]
    59e4:	ldr	r2, [pc, #92]	; 5a48 <el_line@plt+0x3594>
    59e8:	str	r3, [r7]
    59ec:	add	r2, pc, r2
    59f0:	ldr	r5, [r4, r5]
    59f4:	str	r3, [r5]
    59f8:	ldr	r3, [r4, lr]
    59fc:	str	ip, [r3]
    5a00:	bl	1531c <el_line@plt+0x12e68>
    5a04:	cmn	r0, #1
    5a08:	bne	5a14 <el_line@plt+0x3560>
    5a0c:	ldr	r0, [r5]
    5a10:	pop	{r3, r4, r5, r6, r7, pc}
    5a14:	ldr	r3, [pc, #48]	; 5a4c <el_line@plt+0x3598>
    5a18:	mov	r1, r6
    5a1c:	ldr	r0, [pc, #44]	; 5a50 <el_line@plt+0x359c>
    5a20:	ldr	r3, [r4, r3]
    5a24:	add	r0, pc, r0
    5a28:	ldr	r2, [r3]
    5a2c:	bl	11238 <el_line@plt+0xed84>
    5a30:	mvn	r0, #0
    5a34:	pop	{r3, r4, r5, r6, r7, pc}
    5a38:	muleq	r2, r4, r3
    5a3c:	andeq	r0, r0, r8, lsr #4
    5a40:	andeq	r0, r0, r0, lsr r2
    5a44:	andeq	r0, r0, r0, ror #4
    5a48:	andeq	r4, r1, ip, lsr #18
    5a4c:	andeq	r0, r0, r8, asr #4
    5a50:	ldrdeq	r4, [r1], -r8
    5a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5a58:	mov	r5, r1
    5a5c:	ldr	r6, [pc, #4036]	; 6a28 <el_line@plt+0x4574>
    5a60:	sub	sp, sp, #4416	; 0x1140
    5a64:	ldr	r1, [pc, #4032]	; 6a2c <el_line@plt+0x4578>
    5a68:	sub	sp, sp, #44	; 0x2c
    5a6c:	add	r6, pc, r6
    5a70:	ldr	r7, [pc, #4024]	; 6a30 <el_line@plt+0x457c>
    5a74:	str	r0, [sp, #72]	; 0x48
    5a78:	add	sl, sp, #8192	; 0x2000
    5a7c:	str	r3, [sp, #48]	; 0x30
    5a80:	add	r7, pc, r7
    5a84:	str	r2, [sp, #92]	; 0x5c
    5a88:	mov	r0, r5
    5a8c:	ldr	r1, [r6, r1]
    5a90:	str	r1, [sp, #68]	; 0x44
    5a94:	mov	r1, r7
    5a98:	ldr	r9, [sp, #68]	; 0x44
    5a9c:	ldr	r3, [r9]
    5aa0:	str	r3, [sl, #-3740]	; 0xfffff164
    5aa4:	bl	2088 <strspn@plt>
    5aa8:	ldrb	r3, [r5, r0]
    5aac:	add	r4, r5, r0
    5ab0:	cmp	r3, #45	; 0x2d
    5ab4:	movne	ip, #0
    5ab8:	strne	ip, [sp, #60]	; 0x3c
    5abc:	beq	5d00 <el_line@plt+0x384c>
    5ac0:	cmp	r3, #0
    5ac4:	cmpne	r3, #35	; 0x23
    5ac8:	movne	r9, #0
    5acc:	moveq	r9, #1
    5ad0:	bne	5bd8 <el_line@plt+0x3724>
    5ad4:	mov	sl, #0
    5ad8:	str	sl, [sp, #100]	; 0x64
    5adc:	mov	r7, sl
    5ae0:	mov	ip, sl
    5ae4:	mov	r9, sl
    5ae8:	str	sl, [sp, #88]	; 0x58
    5aec:	str	sl, [sp, #104]	; 0x68
    5af0:	str	sl, [sp, #40]	; 0x28
    5af4:	str	sl, [sp, #84]	; 0x54
    5af8:	str	sl, [sp, #80]	; 0x50
    5afc:	str	sl, [sp, #56]	; 0x38
    5b00:	str	sl, [sp, #64]	; 0x40
    5b04:	ldr	fp, [sp, #64]	; 0x40
    5b08:	add	r4, sp, #168	; 0xa8
    5b0c:	ldr	lr, [sp, #60]	; 0x3c
    5b10:	mov	r3, #0
    5b14:	add	r2, fp, #1
    5b18:	ldr	fp, [sp, #48]	; 0x30
    5b1c:	cmp	lr, #0
    5b20:	str	r3, [r4, #-40]	; 0xffffffd8
    5b24:	str	r3, [r4, #-36]	; 0xffffffdc
    5b28:	movne	fp, #0
    5b2c:	str	r3, [r4, #-32]	; 0xffffffe0
    5b30:	str	fp, [sp, #48]	; 0x30
    5b34:	str	r3, [r4, #-28]	; 0xffffffe4
    5b38:	str	r3, [r4, #-24]	; 0xffffffe8
    5b3c:	str	r3, [r4, #-20]	; 0xffffffec
    5b40:	str	r3, [r4, #-16]
    5b44:	str	r3, [r4, #-12]
    5b48:	str	r3, [r4, #-8]
    5b4c:	str	r3, [r4, #-4]
    5b50:	str	r3, [r4]
    5b54:	str	r3, [r4, #4]
    5b58:	cmp	r2, #28
    5b5c:	addls	pc, pc, r2, lsl #2
    5b60:	b	77f4 <el_line@plt+0x5340>
    5b64:	b	6a18 <el_line@plt+0x4564>
    5b68:	b	60f8 <el_line@plt+0x3c44>
    5b6c:	b	63bc <el_line@plt+0x3f08>
    5b70:	b	6ba0 <el_line@plt+0x46ec>
    5b74:	b	626c <el_line@plt+0x3db8>
    5b78:	b	6ba0 <el_line@plt+0x46ec>
    5b7c:	b	6148 <el_line@plt+0x3c94>
    5b80:	b	5fd0 <el_line@plt+0x3b1c>
    5b84:	b	6a04 <el_line@plt+0x4550>
    5b88:	b	6b54 <el_line@plt+0x46a0>
    5b8c:	b	67cc <el_line@plt+0x4318>
    5b90:	b	6d34 <el_line@plt+0x4880>
    5b94:	b	679c <el_line@plt+0x42e8>
    5b98:	b	6758 <el_line@plt+0x42a4>
    5b9c:	b	664c <el_line@plt+0x4198>
    5ba0:	b	6614 <el_line@plt+0x4160>
    5ba4:	b	6968 <el_line@plt+0x44b4>
    5ba8:	b	5d28 <el_line@plt+0x3874>
    5bac:	b	68cc <el_line@plt+0x4418>
    5bb0:	b	60f8 <el_line@plt+0x3c44>
    5bb4:	b	5fcc <el_line@plt+0x3b18>
    5bb8:	b	68fc <el_line@plt+0x4448>
    5bbc:	b	5d24 <el_line@plt+0x3870>
    5bc0:	b	64f4 <el_line@plt+0x4040>
    5bc4:	b	6490 <el_line@plt+0x3fdc>
    5bc8:	b	646c <el_line@plt+0x3fb8>
    5bcc:	b	6d24 <el_line@plt+0x4870>
    5bd0:	b	684c <el_line@plt+0x4398>
    5bd4:	b	6884 <el_line@plt+0x43d0>
    5bd8:	str	r9, [sp]
    5bdc:	add	r1, sp, #224	; 0xe0
    5be0:	mov	r0, r4
    5be4:	mov	r2, r9
    5be8:	mov	r3, r9
    5bec:	add	r7, sp, #232	; 0xe8
    5bf0:	str	r7, [sp, #40]	; 0x28
    5bf4:	bl	3e3c <el_line@plt+0x1988>
    5bf8:	subs	r8, r0, #0
    5bfc:	beq	8598 <el_line@plt+0x60e4>
    5c00:	mov	r7, r9
    5c04:	ldr	fp, [pc, #3624]	; 6a34 <el_line@plt+0x4580>
    5c08:	ldr	r9, [pc, #3624]	; 6a38 <el_line@plt+0x4584>
    5c0c:	ldr	sl, [r8]
    5c10:	add	fp, pc, fp
    5c14:	add	r9, pc, r9
    5c18:	cmp	sl, #0
    5c1c:	beq	5c34 <el_line@plt+0x3780>
    5c20:	mov	r0, fp
    5c24:	mov	r1, sl
    5c28:	bl	1ee4 <strcasecmp@plt>
    5c2c:	cmp	r0, #0
    5c30:	beq	5c50 <el_line@plt+0x379c>
    5c34:	mov	r0, r7
    5c38:	mov	r1, #1
    5c3c:	bl	192bc <el_line@plt+0x16e08>
    5c40:	ldr	fp, [r9, #12]!
    5c44:	cmp	fp, #0
    5c48:	mov	r7, r0
    5c4c:	bne	5c18 <el_line@plt+0x3764>
    5c50:	ldr	r1, [pc, #3556]	; 6a3c <el_line@plt+0x4588>
    5c54:	add	r3, r7, r7, lsl #1
    5c58:	ldrb	r2, [r4]
    5c5c:	add	r1, pc, r1
    5c60:	add	r3, r1, r3, lsl #2
    5c64:	cmp	r2, #33	; 0x21
    5c68:	ldr	r3, [r3, #4]
    5c6c:	str	r3, [sp, #96]	; 0x60
    5c70:	beq	60b0 <el_line@plt+0x3bfc>
    5c74:	ldr	ip, [sp, #96]	; 0x60
    5c78:	cmn	ip, #1
    5c7c:	beq	87e0 <el_line@plt+0x632c>
    5c80:	ldr	r7, [sp, #96]	; 0x60
    5c84:	sub	r3, r7, #1
    5c88:	cmp	r3, #26
    5c8c:	addls	pc, pc, r3, lsl #2
    5c90:	b	7b18 <el_line@plt+0x5664>
    5c94:	b	6d64 <el_line@plt+0x48b0>
    5c98:	b	7548 <el_line@plt+0x5094>
    5c9c:	b	7414 <el_line@plt+0x4f60>
    5ca0:	b	7548 <el_line@plt+0x5094>
    5ca4:	b	6e9c <el_line@plt+0x49e8>
    5ca8:	b	6f70 <el_line@plt+0x4abc>
    5cac:	b	7194 <el_line@plt+0x4ce0>
    5cb0:	b	6d64 <el_line@plt+0x48b0>
    5cb4:	b	70ac <el_line@plt+0x4bf8>
    5cb8:	b	7140 <el_line@plt+0x4c8c>
    5cbc:	b	6d64 <el_line@plt+0x48b0>
    5cc0:	b	7194 <el_line@plt+0x4ce0>
    5cc4:	b	71ec <el_line@plt+0x4d38>
    5cc8:	b	7414 <el_line@plt+0x4f60>
    5ccc:	b	6d64 <el_line@plt+0x48b0>
    5cd0:	b	6f70 <el_line@plt+0x4abc>
    5cd4:	b	7194 <el_line@plt+0x4ce0>
    5cd8:	b	7194 <el_line@plt+0x4ce0>
    5cdc:	b	6f70 <el_line@plt+0x4abc>
    5ce0:	b	737c <el_line@plt+0x4ec8>
    5ce4:	b	6f70 <el_line@plt+0x4abc>
    5ce8:	b	6d64 <el_line@plt+0x48b0>
    5cec:	b	6d64 <el_line@plt+0x48b0>
    5cf0:	b	71bc <el_line@plt+0x4d08>
    5cf4:	b	6df4 <el_line@plt+0x4940>
    5cf8:	b	7194 <el_line@plt+0x4ce0>
    5cfc:	b	7194 <el_line@plt+0x4ce0>
    5d00:	add	r4, r4, #1
    5d04:	mov	r1, r7
    5d08:	mov	fp, #1
    5d0c:	str	fp, [sp, #60]	; 0x3c
    5d10:	mov	r0, r4
    5d14:	bl	2088 <strspn@plt>
    5d18:	ldrb	r3, [r4, r0]
    5d1c:	add	r4, r4, r0
    5d20:	b	5ac0 <el_line@plt+0x360c>
    5d24:	mov	r9, #1
    5d28:	ldr	r5, [sp, #92]	; 0x5c
    5d2c:	ldr	ip, [sp, #80]	; 0x50
    5d30:	ldr	r5, [r5]
    5d34:	cmp	ip, #0
    5d38:	str	r5, [sp, #124]	; 0x7c
    5d3c:	beq	75b0 <el_line@plt+0x50fc>
    5d40:	mov	r0, ip
    5d44:	bl	1163c <el_line@plt+0xf188>
    5d48:	subs	r6, r0, #0
    5d4c:	str	r6, [sp, #60]	; 0x3c
    5d50:	beq	75b0 <el_line@plt+0x50fc>
    5d54:	ldrb	r3, [r6]
    5d58:	cmp	r3, #47	; 0x2f
    5d5c:	bne	7b94 <el_line@plt+0x56e0>
    5d60:	add	r5, sp, #176	; 0xb0
    5d64:	mov	r2, #48	; 0x30
    5d68:	mov	r1, #0
    5d6c:	mov	r0, r5
    5d70:	bl	2064 <memset@plt>
    5d74:	ldr	r0, [pc, #3268]	; 6a40 <el_line@plt+0x458c>
    5d78:	ldr	r1, [sp, #56]	; 0x38
    5d7c:	add	r0, pc, r0
    5d80:	bl	1148c <el_line@plt+0xefd8>
    5d84:	ldr	r0, [sp, #56]	; 0x38
    5d88:	mov	r3, r5
    5d8c:	mov	r1, #24
    5d90:	mov	r2, #0
    5d94:	bl	171fc <el_line@plt+0x14d48>
    5d98:	cmp	r0, #0
    5d9c:	bne	88d8 <el_line@plt+0x6424>
    5da0:	ldr	r0, [sp, #72]	; 0x48
    5da4:	ldr	r1, [sp, #60]	; 0x3c
    5da8:	bl	43d8 <el_line@plt+0x1f24>
    5dac:	str	r0, [sp, #92]	; 0x5c
    5db0:	ldr	r3, [r5, #4]
    5db4:	cmp	r3, #1
    5db8:	ble	5ddc <el_line@plt+0x3928>
    5dbc:	ldr	ip, [sp, #60]	; 0x3c
    5dc0:	ldr	r6, [sp, #92]	; 0x5c
    5dc4:	adds	r3, ip, #0
    5dc8:	movne	r3, #1
    5dcc:	cmp	r6, #0
    5dd0:	movne	r3, #0
    5dd4:	cmp	r3, #0
    5dd8:	bne	88b0 <el_line@plt+0x63fc>
    5ddc:	ldr	r3, [r5, #16]
    5de0:	ldr	r1, [r3]
    5de4:	cmp	r1, #0
    5de8:	beq	8844 <el_line@plt+0x6390>
    5dec:	ldr	r3, [pc, #3152]	; 6a44 <el_line@plt+0x4590>
    5df0:	ldr	r8, [pc, r3]
    5df4:	cmp	r8, #0
    5df8:	movne	r8, #0
    5dfc:	movne	ip, r8
    5e00:	bne	7790 <el_line@plt+0x52dc>
    5e04:	ldr	r6, [pc, #3132]	; 6a48 <el_line@plt+0x4594>
    5e08:	mov	r7, r8
    5e0c:	ldr	sl, [pc, #3128]	; 6a4c <el_line@plt+0x4598>
    5e10:	add	r6, pc, r6
    5e14:	ldr	fp, [pc, #3124]	; 6a50 <el_line@plt+0x459c>
    5e18:	ldr	ip, [pc, #3124]	; 6a54 <el_line@plt+0x45a0>
    5e1c:	add	sl, pc, sl
    5e20:	str	r6, [sp, #112]	; 0x70
    5e24:	add	fp, pc, fp
    5e28:	ldr	r6, [pc, #3112]	; 6a58 <el_line@plt+0x45a4>
    5e2c:	add	ip, pc, ip
    5e30:	ldr	lr, [pc, #3108]	; 6a5c <el_line@plt+0x45a8>
    5e34:	add	r6, pc, r6
    5e38:	str	fp, [sp, #96]	; 0x60
    5e3c:	str	r6, [sp, #116]	; 0x74
    5e40:	add	fp, sp, #224	; 0xe0
    5e44:	add	lr, pc, lr
    5e48:	str	r4, [sp, #120]	; 0x78
    5e4c:	str	ip, [sp, #104]	; 0x68
    5e50:	mov	r6, #4
    5e54:	str	lr, [sp, #108]	; 0x6c
    5e58:	mov	r4, r8
    5e5c:	str	fp, [sp, #40]	; 0x28
    5e60:	b	5f50 <el_line@plt+0x3a9c>
    5e64:	cmp	r9, #0
    5e68:	bne	7758 <el_line@plt+0x52a4>
    5e6c:	ldr	r3, [r5, #16]
    5e70:	mov	r2, r4
    5e74:	ldr	r0, [pc, #3044]	; 6a60 <el_line@plt+0x45ac>
    5e78:	ldr	r1, [r3, r7]
    5e7c:	add	r0, pc, r0
    5e80:	bl	14498 <el_line@plt+0x11fe4>
    5e84:	ldr	r3, [r5, #16]
    5e88:	ldr	r7, [r3, r7]
    5e8c:	mov	r0, r7
    5e90:	bl	3d7c <el_line@plt+0x18c8>
    5e94:	cmp	r0, #0
    5e98:	beq	76a4 <el_line@plt+0x51f0>
    5e9c:	ldr	fp, [sp, #100]	; 0x64
    5ea0:	cmp	fp, #0
    5ea4:	bne	5eb8 <el_line@plt+0x3a04>
    5ea8:	ldr	ip, [sp, #108]	; 0x6c
    5eac:	ldr	r3, [ip, #536]	; 0x218
    5eb0:	cmp	r3, #0
    5eb4:	beq	76a4 <el_line@plt+0x51f0>
    5eb8:	ldr	fp, [sp, #88]	; 0x58
    5ebc:	cmp	fp, #0
    5ec0:	movne	r3, #1
    5ec4:	bne	5ed8 <el_line@plt+0x3a24>
    5ec8:	ldr	ip, [sp, #116]	; 0x74
    5ecc:	ldr	r3, [ip, #540]	; 0x21c
    5ed0:	adds	r3, r3, #0
    5ed4:	movne	r3, #1
    5ed8:	ldr	fp, [sp, #84]	; 0x54
    5edc:	cmp	fp, #0
    5ee0:	movne	r2, #1
    5ee4:	bne	5ef8 <el_line@plt+0x3a44>
    5ee8:	ldr	ip, [sp, #112]	; 0x70
    5eec:	ldr	r2, [ip, #544]	; 0x220
    5ef0:	adds	r2, r2, #0
    5ef4:	movne	r2, #1
    5ef8:	str	r2, [sp, #8]
    5efc:	mov	r1, r7
    5f00:	mov	r2, #1
    5f04:	str	r9, [sp, #4]
    5f08:	str	r2, [sp]
    5f0c:	mov	r2, r4
    5f10:	ldr	r0, [sp, #72]	; 0x48
    5f14:	bl	daa4 <el_line@plt+0xb5f0>
    5f18:	cmn	r0, #1
    5f1c:	mvneq	r8, #0
    5f20:	ldr	r3, [r5, #16]
    5f24:	ldr	r1, [r3, r6]
    5f28:	cmp	r1, #0
    5f2c:	beq	7774 <el_line@plt+0x52c0>
    5f30:	ldr	r3, [pc, #2860]	; 6a64 <el_line@plt+0x45b0>
    5f34:	add	r2, r6, #4
    5f38:	add	r3, pc, r3
    5f3c:	ldr	r3, [r3]
    5f40:	cmp	r3, #0
    5f44:	bne	7b50 <el_line@plt+0x569c>
    5f48:	mov	r7, r6
    5f4c:	mov	r6, r2
    5f50:	mov	r0, #3
    5f54:	ldr	r2, [sp, #40]	; 0x28
    5f58:	bl	1f2c <__xstat64@plt>
    5f5c:	ldr	r3, [r5, #16]
    5f60:	cmn	r0, #1
    5f64:	beq	7708 <el_line@plt+0x5254>
    5f68:	ldr	r0, [r3, r7]
    5f6c:	bl	1163c <el_line@plt+0xf188>
    5f70:	mov	fp, r0
    5f74:	bl	23f4 <__xpg_basename@plt>
    5f78:	subs	r1, r0, #0
    5f7c:	beq	7da8 <el_line@plt+0x58f4>
    5f80:	ldr	r3, [r5, #4]
    5f84:	ldr	ip, [sp, #60]	; 0x3c
    5f88:	cmp	r3, #1
    5f8c:	beq	7734 <el_line@plt+0x5280>
    5f90:	cmp	ip, #0
    5f94:	beq	77c0 <el_line@plt+0x530c>
    5f98:	mov	r0, ip
    5f9c:	bl	d130 <el_line@plt+0xac7c>
    5fa0:	mov	r4, r0
    5fa4:	mov	r0, fp
    5fa8:	bl	1f20 <free@plt>
    5fac:	ldr	r3, [sl, #532]	; 0x214
    5fb0:	ldr	r2, [sl, #528]	; 0x210
    5fb4:	cmp	r3, #0
    5fb8:	orr	r9, r9, r2
    5fbc:	beq	5e64 <el_line@plt+0x39b0>
    5fc0:	orrs	r3, r9, r3
    5fc4:	bne	5e84 <el_line@plt+0x39d0>
    5fc8:	b	5e6c <el_line@plt+0x39b8>
    5fcc:	mov	r9, #1
    5fd0:	ldr	r7, [sp, #92]	; 0x5c
    5fd4:	ldr	r0, [sp, #56]	; 0x38
    5fd8:	ldr	r5, [r7]
    5fdc:	bl	1163c <el_line@plt+0xf188>
    5fe0:	subs	fp, r0, #0
    5fe4:	beq	6d5c <el_line@plt+0x48a8>
    5fe8:	ldrb	r3, [fp]
    5fec:	cmp	r3, #47	; 0x2f
    5ff0:	beq	6d5c <el_line@plt+0x48a8>
    5ff4:	mov	r1, r5
    5ff8:	bl	4eb4 <el_line@plt+0x2a00>
    5ffc:	str	r0, [sp, #60]	; 0x3c
    6000:	add	sl, sp, #232	; 0xe8
    6004:	mov	r5, #0
    6008:	ldr	r0, [pc, #2648]	; 6a68 <el_line@plt+0x45b4>
    600c:	add	fp, sp, #224	; 0xe0
    6010:	mov	r2, sl
    6014:	str	r5, [sp, #224]	; 0xe0
    6018:	str	r5, [sp, #228]	; 0xe4
    601c:	add	r0, pc, r0
    6020:	str	r5, [r2], #4
    6024:	add	r2, r2, #4
    6028:	str	r5, [sp, #236]	; 0xec
    602c:	ldr	r1, [sp, #60]	; 0x3c
    6030:	str	r5, [r2], #4
    6034:	str	r5, [r2], #4
    6038:	str	r5, [r2], #4
    603c:	str	r5, [r2], #4
    6040:	str	r5, [r2], #4
    6044:	str	r5, [r2], #4
    6048:	str	r5, [r2], #4
    604c:	str	r5, [r2]
    6050:	str	sl, [sp, #40]	; 0x28
    6054:	bl	1148c <el_line@plt+0xefd8>
    6058:	str	fp, [sp]
    605c:	mov	r3, r5
    6060:	ldr	r0, [sp, #72]	; 0x48
    6064:	mov	r2, #8
    6068:	ldr	r1, [sp, #60]	; 0x3c
    606c:	bl	e448 <el_line@plt+0xbf94>
    6070:	cmp	r0, #0
    6074:	beq	7804 <el_line@plt+0x5350>
    6078:	cmn	r0, #1
    607c:	beq	81fc <el_line@plt+0x5d48>
    6080:	ldr	r5, [sp, #48]	; 0x30
    6084:	ldr	r0, [pc, #2528]	; 6a6c <el_line@plt+0x45b8>
    6088:	adds	r8, r5, #0
    608c:	ldr	r1, [sp, #60]	; 0x3c
    6090:	add	r0, pc, r0
    6094:	movne	r8, #1
    6098:	bl	11238 <el_line@plt+0xed84>
    609c:	ldr	r0, [sp, #60]	; 0x3c
    60a0:	bl	1f20 <free@plt>
    60a4:	mov	r0, fp
    60a8:	bl	17408 <el_line@plt+0x14f54>
    60ac:	b	6478 <el_line@plt+0x3fc4>
    60b0:	mov	sl, #0
    60b4:	add	r4, r4, #1
    60b8:	mov	r7, sl
    60bc:	mov	ip, sl
    60c0:	mov	r9, sl
    60c4:	mov	fp, #24
    60c8:	str	sl, [sp, #100]	; 0x64
    60cc:	str	sl, [sp, #88]	; 0x58
    60d0:	str	sl, [sp, #104]	; 0x68
    60d4:	str	sl, [sp, #40]	; 0x28
    60d8:	str	sl, [sp, #84]	; 0x54
    60dc:	str	sl, [sp, #80]	; 0x50
    60e0:	str	sl, [sp, #56]	; 0x38
    60e4:	str	fp, [sp, #96]	; 0x60
    60e8:	ldr	r3, [sp, #96]	; 0x60
    60ec:	mov	r5, r4
    60f0:	str	r3, [sp, #64]	; 0x40
    60f4:	b	5b04 <el_line@plt+0x3650>
    60f8:	mov	r8, #0
    60fc:	ldr	r0, [sp, #56]	; 0x38
    6100:	bl	1f20 <free@plt>
    6104:	ldr	r0, [sp, #80]	; 0x50
    6108:	bl	1f20 <free@plt>
    610c:	cmp	r8, #0
    6110:	bne	77ec <el_line@plt+0x5338>
    6114:	ldr	r5, [sp, #64]	; 0x40
    6118:	subs	r3, r5, #18
    611c:	rsbs	r0, r3, #0
    6120:	adcs	r0, r0, r3
    6124:	ldr	r7, [sp, #68]	; 0x44
    6128:	add	r6, sp, #8192	; 0x2000
    612c:	ldr	r2, [r6, #-3740]	; 0xfffff164
    6130:	ldr	r3, [r7]
    6134:	cmp	r2, r3
    6138:	bne	88fc <el_line@plt+0x6448>
    613c:	add	sp, sp, #4416	; 0x1140
    6140:	add	sp, sp, #44	; 0x2c
    6144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6148:	ldr	r5, [sp, #56]	; 0x38
    614c:	cmp	r5, #0
    6150:	beq	8798 <el_line@plt+0x62e4>
    6154:	ldr	r5, [sp, #92]	; 0x5c
    6158:	ldr	r1, [r5]
    615c:	ldr	r7, [sp, #56]	; 0x38
    6160:	ldrb	r3, [r7]
    6164:	cmp	r3, #47	; 0x2f
    6168:	beq	6180 <el_line@plt+0x3ccc>
    616c:	mov	r0, r7
    6170:	str	ip, [sp, #36]	; 0x24
    6174:	bl	4eb4 <el_line@plt+0x2a00>
    6178:	ldr	ip, [sp, #36]	; 0x24
    617c:	str	r0, [sp, #56]	; 0x38
    6180:	add	r5, sp, #232	; 0xe8
    6184:	ldr	r0, [sp, #72]	; 0x48
    6188:	sub	fp, r5, #8
    618c:	ldr	r1, [sp, #56]	; 0x38
    6190:	mov	r3, #1
    6194:	str	ip, [sp, #36]	; 0x24
    6198:	mov	r2, fp
    619c:	bl	b7d8 <el_line@plt+0x9324>
    61a0:	ldr	ip, [sp, #36]	; 0x24
    61a4:	cmn	r0, #1
    61a8:	beq	8958 <el_line@plt+0x64a4>
    61ac:	ldr	sl, [sp, #40]	; 0x28
    61b0:	cmp	sl, #0
    61b4:	beq	7c34 <el_line@plt+0x5780>
    61b8:	ldrd	r6, [fp, #40]	; 0x28
    61bc:	orrs	ip, r6, r7
    61c0:	moveq	r5, r7
    61c4:	beq	61f4 <el_line@plt+0x3d40>
    61c8:	ldrd	r0, [fp, #48]	; 0x30
    61cc:	mov	r2, r6
    61d0:	mov	r3, r7
    61d4:	mov	ip, #100	; 0x64
    61d8:	subs	r6, r6, r0
    61dc:	sbc	r7, r7, r1
    61e0:	umull	r0, r1, r6, ip
    61e4:	mla	r1, ip, r7, r1
    61e8:	bl	19270 <el_line@plt+0x16dbc>
    61ec:	mov	r6, r0
    61f0:	mov	r5, r1
    61f4:	ldr	r1, [pc, #2164]	; 6a70 <el_line@plt+0x45bc>
    61f8:	mov	r0, #1
    61fc:	mov	r8, #0
    6200:	add	r1, pc, r1
    6204:	bl	24a8 <__printf_chk@plt>
    6208:	ldrd	r2, [fp, #48]	; 0x30
    620c:	strd	r2, [sp, #16]
    6210:	ldrd	r0, [fp, #56]	; 0x38
    6214:	strd	r0, [sp, #8]
    6218:	mov	r0, #1
    621c:	ldrd	r2, [fp, #40]	; 0x28
    6220:	ldr	r1, [pc, #2124]	; 6a74 <el_line@plt+0x45c0>
    6224:	str	r6, [sp, #24]
    6228:	ldrd	r6, [sp, #16]
    622c:	add	r1, pc, r1
    6230:	str	r5, [sp, #28]
    6234:	subs	r6, r2, r6
    6238:	sbc	r7, r3, r7
    623c:	strd	r6, [sp]
    6240:	bl	24a8 <__printf_chk@plt>
    6244:	add	r7, sp, #4416	; 0x1140
    6248:	movw	r3, #61208	; 0xef18
    624c:	add	r7, r7, #40	; 0x28
    6250:	movt	r3, #65535	; 0xffff
    6254:	ldr	r3, [r7, r3]
    6258:	cmp	r3, #0
    625c:	beq	60fc <el_line@plt+0x3c48>
    6260:	sub	r0, r4, #40	; 0x28
    6264:	bl	17408 <el_line@plt+0x14f54>
    6268:	b	60fc <el_line@plt+0x3c48>
    626c:	ldr	ip, [sp, #56]	; 0x38
    6270:	ldr	r5, [sp, #92]	; 0x5c
    6274:	cmp	ip, #0
    6278:	ldr	r1, [r5]
    627c:	beq	6298 <el_line@plt+0x3de4>
    6280:	ldrb	r3, [ip]
    6284:	cmp	r3, #47	; 0x2f
    6288:	beq	6298 <el_line@plt+0x3de4>
    628c:	mov	r0, ip
    6290:	bl	4eb4 <el_line@plt+0x2a00>
    6294:	str	r0, [sp, #56]	; 0x38
    6298:	add	r7, sp, #224	; 0xe0
    629c:	add	r9, sp, #4416	; 0x1140
    62a0:	add	r9, r9, #40	; 0x28
    62a4:	sub	r5, r4, #40	; 0x28
    62a8:	mov	r0, r7
    62ac:	bl	db30 <el_line@plt+0xb67c>
    62b0:	movw	ip, #61304	; 0xef78
    62b4:	movt	ip, #65535	; 0xffff
    62b8:	str	r5, [sp]
    62bc:	ldr	r1, [sp, #56]	; 0x38
    62c0:	mov	r2, #16
    62c4:	ldr	lr, [r9, ip]
    62c8:	mov	r3, #0
    62cc:	ldr	r0, [sp, #72]	; 0x48
    62d0:	orr	lr, lr, #4
    62d4:	str	sl, [r7, #24]
    62d8:	str	lr, [r9, ip]
    62dc:	bl	e448 <el_line@plt+0xbf94>
    62e0:	ldr	r2, [r5, #16]
    62e4:	movw	r3, #61208	; 0xef18
    62e8:	movt	r3, #65535	; 0xffff
    62ec:	ldr	r1, [r2]
    62f0:	cmp	r1, #0
    62f4:	beq	8914 <el_line@plt+0x6460>
    62f8:	ldr	r2, [pc, #1912]	; 6a78 <el_line@plt+0x45c4>
    62fc:	ldr	r8, [pc, r2]
    6300:	cmp	r8, #0
    6304:	bne	8900 <el_line@plt+0x644c>
    6308:	ldr	ip, [sp, #48]	; 0x30
    630c:	mov	fp, #4
    6310:	ldr	r9, [pc, #1892]	; 6a7c <el_line@plt+0x45c8>
    6314:	adds	r6, ip, #0
    6318:	ldr	r3, [pc, #1888]	; 6a80 <el_line@plt+0x45cc>
    631c:	ldr	sl, [pc, #1888]	; 6a84 <el_line@plt+0x45d0>
    6320:	add	r9, pc, r9
    6324:	add	r3, pc, r3
    6328:	str	r4, [sp, #84]	; 0x54
    632c:	add	sl, pc, sl
    6330:	mov	r4, r5
    6334:	movne	r6, #1
    6338:	str	r3, [sp, #40]	; 0x28
    633c:	str	sl, [sp, #48]	; 0x30
    6340:	ldr	r5, [sp, #72]	; 0x48
    6344:	b	63a4 <el_line@plt+0x3ef0>
    6348:	ldr	r1, [r4, #16]
    634c:	mov	r0, r5
    6350:	mov	r2, r7
    6354:	movw	sl, #61208	; 0xef18
    6358:	movt	sl, #65535	; 0xffff
    635c:	ldr	r1, [r1, r8]
    6360:	bl	ae44 <el_line@plt+0x8990>
    6364:	cmp	r0, #0
    6368:	moveq	r0, #0
    636c:	andne	r0, r6, #1
    6370:	cmp	r0, #0
    6374:	bne	80fc <el_line@plt+0x5c48>
    6378:	ldr	r2, [r4, #16]
    637c:	ldr	r1, [r2, fp]
    6380:	cmp	r1, #0
    6384:	beq	8130 <el_line@plt+0x5c7c>
    6388:	ldr	r3, [sp, #48]	; 0x30
    638c:	add	lr, fp, #4
    6390:	ldr	r2, [r3]
    6394:	cmp	r2, #0
    6398:	bne	81e4 <el_line@plt+0x5d30>
    639c:	mov	r8, fp
    63a0:	mov	fp, lr
    63a4:	ldr	r2, [r9, #532]	; 0x214
    63a8:	cmp	r2, #0
    63ac:	bne	6348 <el_line@plt+0x3e94>
    63b0:	ldr	r0, [sp, #40]	; 0x28
    63b4:	bl	14498 <el_line@plt+0x11fe4>
    63b8:	b	6348 <el_line@plt+0x3e94>
    63bc:	ldr	r6, [sp, #56]	; 0x38
    63c0:	ldr	r7, [sp, #92]	; 0x5c
    63c4:	cmp	r6, #0
    63c8:	ldr	r1, [r7]
    63cc:	beq	63e8 <el_line@plt+0x3f34>
    63d0:	ldrb	r3, [r6]
    63d4:	cmp	r3, #47	; 0x2f
    63d8:	beq	63e8 <el_line@plt+0x3f34>
    63dc:	mov	r0, r6
    63e0:	bl	4eb4 <el_line@plt+0x2a00>
    63e4:	str	r0, [sp, #56]	; 0x38
    63e8:	ldr	r0, [sp, #72]	; 0x48
    63ec:	ldr	r1, [sp, #56]	; 0x38
    63f0:	bl	af44 <el_line@plt+0x8a90>
    63f4:	subs	r5, r0, #0
    63f8:	beq	6448 <el_line@plt+0x3f94>
    63fc:	ldr	r0, [sp, #72]	; 0x48
    6400:	mov	r1, r5
    6404:	mov	r2, #0
    6408:	bl	ad34 <el_line@plt+0x8880>
    640c:	cmp	r0, #0
    6410:	beq	8898 <el_line@plt+0x63e4>
    6414:	ldr	r3, [r0]
    6418:	tst	r3, #4
    641c:	beq	8424 <el_line@plt+0x5f70>
    6420:	ldr	r3, [r0, #24]
    6424:	and	r3, r3, #61440	; 0xf000
    6428:	cmp	r3, #16384	; 0x4000
    642c:	beq	8634 <el_line@plt+0x6180>
    6430:	ldr	r0, [pc, #1616]	; 6a88 <el_line@plt+0x45d4>
    6434:	mov	r1, r5
    6438:	add	r0, pc, r0
    643c:	bl	11238 <el_line@plt+0xed84>
    6440:	mov	r0, r5
    6444:	bl	1f20 <free@plt>
    6448:	ldr	r9, [sp, #48]	; 0x30
    644c:	add	sl, sp, #4416	; 0x1140
    6450:	movw	r3, #61208	; 0xef18
    6454:	add	sl, sl, #40	; 0x28
    6458:	movt	r3, #65535	; 0xffff
    645c:	adds	r8, r9, #0
    6460:	ldr	r3, [sl, r3]
    6464:	movne	r8, #1
    6468:	b	6258 <el_line@plt+0x3da4>
    646c:	mov	r0, r5
    6470:	mov	r8, #0
    6474:	bl	4960 <el_line@plt+0x24ac>
    6478:	add	sl, sp, #4416	; 0x1140
    647c:	movw	r3, #61208	; 0xef18
    6480:	add	sl, sl, #40	; 0x28
    6484:	movt	r3, #65535	; 0xffff
    6488:	ldr	r3, [sl, r3]
    648c:	b	6258 <el_line@plt+0x3da4>
    6490:	ldr	fp, [sp, #56]	; 0x38
    6494:	ldr	ip, [sp, #92]	; 0x5c
    6498:	cmp	fp, #0
    649c:	ldr	r1, [ip]
    64a0:	beq	64bc <el_line@plt+0x4008>
    64a4:	ldrb	r3, [fp]
    64a8:	cmp	r3, #47	; 0x2f
    64ac:	beq	64bc <el_line@plt+0x4008>
    64b0:	mov	r0, fp
    64b4:	bl	4eb4 <el_line@plt+0x2a00>
    64b8:	str	r0, [sp, #56]	; 0x38
    64bc:	ldr	r0, [sp, #72]	; 0x48
    64c0:	ldr	r1, [sp, #56]	; 0x38
    64c4:	bl	acb4 <el_line@plt+0x8800>
    64c8:	ldr	r5, [sp, #48]	; 0x30
    64cc:	add	lr, sp, #4416	; 0x1140
    64d0:	movw	r3, #61208	; 0xef18
    64d4:	add	lr, lr, #40	; 0x28
    64d8:	movt	r3, #65535	; 0xffff
    64dc:	cmp	r0, #0
    64e0:	cmpne	r5, #0
    64e4:	ldr	r3, [lr, r3]
    64e8:	moveq	r8, #0
    64ec:	movne	r8, #1
    64f0:	b	6258 <el_line@plt+0x3da4>
    64f4:	ldr	r6, [sp, #56]	; 0x38
    64f8:	ldr	r7, [sp, #92]	; 0x5c
    64fc:	cmp	r6, #0
    6500:	ldr	r1, [r7]
    6504:	beq	6520 <el_line@plt+0x406c>
    6508:	ldrb	r3, [r6]
    650c:	cmp	r3, #47	; 0x2f
    6510:	beq	6520 <el_line@plt+0x406c>
    6514:	mov	r0, r6
    6518:	bl	4eb4 <el_line@plt+0x2a00>
    651c:	str	r0, [sp, #56]	; 0x38
    6520:	sub	sl, r4, #40	; 0x28
    6524:	ldr	r1, [sp, #56]	; 0x38
    6528:	mov	r2, #16
    652c:	mov	r3, #0
    6530:	ldr	r0, [sp, #72]	; 0x48
    6534:	str	sl, [sp]
    6538:	bl	e448 <el_line@plt+0xbf94>
    653c:	ldr	r2, [sl, #16]
    6540:	movw	r3, #61208	; 0xef18
    6544:	movt	r3, #65535	; 0xffff
    6548:	ldr	r1, [r2]
    654c:	cmp	r1, #0
    6550:	beq	8884 <el_line@plt+0x63d0>
    6554:	ldr	r2, [pc, #1328]	; 6a8c <el_line@plt+0x45d8>
    6558:	ldr	r8, [pc, r2]
    655c:	cmp	r8, #0
    6560:	bne	8870 <el_line@plt+0x63bc>
    6564:	ldr	fp, [sp, #48]	; 0x30
    6568:	ldr	r6, [pc, #1312]	; 6a90 <el_line@plt+0x45dc>
    656c:	ldr	r7, [pc, #1312]	; 6a94 <el_line@plt+0x45e0>
    6570:	adds	r5, fp, #0
    6574:	add	r6, pc, r6
    6578:	ldr	ip, [pc, #1304]	; 6a98 <el_line@plt+0x45e4>
    657c:	add	r7, pc, r7
    6580:	str	r4, [sp, #40]	; 0x28
    6584:	add	ip, pc, ip
    6588:	movne	r5, #1
    658c:	mov	r9, r7
    6590:	str	ip, [sp, #48]	; 0x30
    6594:	mov	r7, r6
    6598:	mov	fp, #4
    659c:	mov	r4, r8
    65a0:	ldr	r6, [sp, #72]	; 0x48
    65a4:	b	65fc <el_line@plt+0x4148>
    65a8:	ldr	r1, [sl, #16]
    65ac:	mov	r0, r6
    65b0:	movw	r8, #61208	; 0xef18
    65b4:	movt	r8, #65535	; 0xffff
    65b8:	ldr	r1, [r1, r4]
    65bc:	bl	ab90 <el_line@plt+0x86dc>
    65c0:	cmp	r0, #0
    65c4:	moveq	r0, #0
    65c8:	andne	r0, r5, #1
    65cc:	cmp	r0, #0
    65d0:	bne	80e0 <el_line@plt+0x5c2c>
    65d4:	ldr	r2, [sl, #16]
    65d8:	ldr	r1, [r2, fp]
    65dc:	cmp	r1, #0
    65e0:	beq	8114 <el_line@plt+0x5c60>
    65e4:	ldr	r2, [r9]
    65e8:	add	ip, fp, #4
    65ec:	cmp	r2, #0
    65f0:	bne	81c8 <el_line@plt+0x5d14>
    65f4:	mov	r4, fp
    65f8:	mov	fp, ip
    65fc:	ldr	r0, [r7, #532]	; 0x214
    6600:	cmp	r0, #0
    6604:	bne	65a8 <el_line@plt+0x40f4>
    6608:	ldr	r0, [sp, #48]	; 0x30
    660c:	bl	14498 <el_line@plt+0x11fe4>
    6610:	b	65a8 <el_line@plt+0x40f4>
    6614:	mov	r0, sl
    6618:	mov	r8, #0
    661c:	bl	22e0 <umask@plt>
    6620:	ldr	r1, [pc, #1140]	; 6a9c <el_line@plt+0x45e8>
    6624:	mov	r2, sl
    6628:	mov	r0, #1
    662c:	add	r1, pc, r1
    6630:	bl	24a8 <__printf_chk@plt>
    6634:	add	fp, sp, #4416	; 0x1140
    6638:	movw	r3, #61208	; 0xef18
    663c:	add	fp, fp, #40	; 0x28
    6640:	movt	r3, #65535	; 0xffff
    6644:	ldr	r3, [fp, r3]
    6648:	b	6258 <el_line@plt+0x3da4>
    664c:	ldr	r5, [sp, #56]	; 0x38
    6650:	cmp	r5, #0
    6654:	beq	8778 <el_line@plt+0x62c4>
    6658:	ldr	r9, [sp, #56]	; 0x38
    665c:	ldrb	r3, [r9]
    6660:	cmp	r3, #47	; 0x2f
    6664:	moveq	sl, #0
    6668:	beq	6684 <el_line@plt+0x41d0>
    666c:	ldr	fp, [sp, #92]	; 0x5c
    6670:	mov	r0, r9
    6674:	ldr	sl, [fp]
    6678:	mov	r1, sl
    667c:	bl	4eb4 <el_line@plt+0x2a00>
    6680:	str	r0, [sp, #56]	; 0x38
    6684:	add	ip, sp, #232	; 0xe8
    6688:	mov	lr, #0
    668c:	str	ip, [sp, #40]	; 0x28
    6690:	mov	r3, lr
    6694:	str	lr, [ip, #-8]
    6698:	mov	r5, ip
    669c:	str	lr, [ip, #-4]
    66a0:	add	fp, sp, #224	; 0xe0
    66a4:	str	lr, [ip], #4
    66a8:	add	ip, ip, #4
    66ac:	str	fp, [sp]
    66b0:	movw	r2, #16568	; 0x40b8
    66b4:	str	lr, [r5, #4]
    66b8:	ldr	r0, [sp, #72]	; 0x48
    66bc:	str	lr, [ip], #4
    66c0:	ldr	r1, [sp, #56]	; 0x38
    66c4:	str	lr, [ip], #4
    66c8:	str	lr, [ip], #4
    66cc:	str	lr, [ip], #4
    66d0:	str	lr, [ip], #4
    66d4:	str	lr, [ip], #4
    66d8:	str	lr, [ip], #4
    66dc:	str	lr, [ip]
    66e0:	bl	e448 <el_line@plt+0xbf94>
    66e4:	movw	r3, #61304	; 0xef78
    66e8:	movt	r3, #65535	; 0xffff
    66ec:	subs	r5, r0, #0
    66f0:	bne	7df0 <el_line@plt+0x593c>
    66f4:	add	r7, sp, #4416	; 0x1140
    66f8:	add	r7, r7, #40	; 0x28
    66fc:	ldr	r8, [r7, r3]
    6700:	cmp	r8, #0
    6704:	beq	7ef0 <el_line@plt+0x5a3c>
    6708:	ldr	r3, [fp, #4]
    670c:	cmp	r3, #0
    6710:	bne	7ef0 <el_line@plt+0x5a3c>
    6714:	mov	r0, fp
    6718:	bl	17408 <el_line@plt+0x14f54>
    671c:	cmn	r5, #1
    6720:	beq	8504 <el_line@plt+0x6050>
    6724:	ldr	fp, [sp, #48]	; 0x30
    6728:	ldr	r0, [pc, #880]	; 6aa0 <el_line@plt+0x45ec>
    672c:	adds	r8, fp, #0
    6730:	ldr	r1, [sp, #56]	; 0x38
    6734:	add	r0, pc, r0
    6738:	movne	r8, #1
    673c:	bl	11238 <el_line@plt+0xed84>
    6740:	add	r1, sp, #4416	; 0x1140
    6744:	movw	r3, #61208	; 0xef18
    6748:	add	r1, r1, #40	; 0x28
    674c:	movt	r3, #65535	; 0xffff
    6750:	ldr	r3, [r1, r3]
    6754:	b	6258 <el_line@plt+0x3da4>
    6758:	add	r5, sp, #356	; 0x164
    675c:	mov	r1, #4096	; 0x1000
    6760:	mov	r0, r5
    6764:	bl	2334 <getcwd@plt>
    6768:	cmp	r0, #0
    676c:	beq	8524 <el_line@plt+0x6070>
    6770:	ldr	r0, [pc, #812]	; 6aa4 <el_line@plt+0x45f0>
    6774:	mov	r1, r5
    6778:	add	sl, sp, #4416	; 0x1140
    677c:	mov	r8, #0
    6780:	add	r0, pc, r0
    6784:	add	sl, sl, #40	; 0x28
    6788:	bl	14498 <el_line@plt+0x11fe4>
    678c:	movw	r3, #61208	; 0xef18
    6790:	movt	r3, #65535	; 0xffff
    6794:	ldr	r3, [sl, r3]
    6798:	b	6258 <el_line@plt+0x3da4>
    679c:	ldr	r0, [sp, #56]	; 0x38
    67a0:	movw	r1, #511	; 0x1ff
    67a4:	bl	2214 <mkdir@plt>
    67a8:	cmn	r0, #1
    67ac:	beq	8604 <el_line@plt+0x6150>
    67b0:	add	ip, sp, #4416	; 0x1140
    67b4:	movw	r3, #61208	; 0xef18
    67b8:	add	ip, ip, #40	; 0x28
    67bc:	movt	r3, #65535	; 0xffff
    67c0:	mov	r8, #0
    67c4:	ldr	r3, [ip, r3]
    67c8:	b	6258 <el_line@plt+0x3da4>
    67cc:	cmp	r7, #0
    67d0:	bne	8a18 <el_line@plt+0x6564>
    67d4:	ldr	r9, [sp, #56]	; 0x38
    67d8:	ldr	sl, [sp, #92]	; 0x5c
    67dc:	cmp	r9, #0
    67e0:	ldr	r1, [sl]
    67e4:	beq	6804 <el_line@plt+0x4350>
    67e8:	ldrb	r3, [r9]
    67ec:	cmp	r3, #47	; 0x2f
    67f0:	beq	6804 <el_line@plt+0x4350>
    67f4:	mov	r0, r9
    67f8:	bl	4eb4 <el_line@plt+0x2a00>
    67fc:	ldr	r1, [sl]
    6800:	str	r0, [sp, #56]	; 0x38
    6804:	ldr	ip, [sp, #80]	; 0x50
    6808:	cmp	ip, #0
    680c:	beq	6828 <el_line@plt+0x4374>
    6810:	ldrb	r3, [ip]
    6814:	cmp	r3, #47	; 0x2f
    6818:	beq	6828 <el_line@plt+0x4374>
    681c:	mov	r0, ip
    6820:	bl	4eb4 <el_line@plt+0x2a00>
    6824:	str	r0, [sp, #80]	; 0x50
    6828:	cmp	r7, #0
    682c:	beq	7ad4 <el_line@plt+0x5620>
    6830:	ldr	r3, [pc, #624]	; 6aa8 <el_line@plt+0x45f4>
    6834:	ldr	r3, [r6, r3]
    6838:	ldr	r0, [sp, #72]	; 0x48
    683c:	ldr	r1, [sp, #56]	; 0x38
    6840:	ldr	r2, [sp, #80]	; 0x50
    6844:	blx	r3
    6848:	b	64c8 <el_line@plt+0x4014>
    684c:	ldr	r0, [sp, #72]	; 0x48
    6850:	mov	r8, #0
    6854:	bl	a36c <el_line@plt+0x7eb8>
    6858:	ldr	r1, [pc, #588]	; 6aac <el_line@plt+0x45f8>
    685c:	add	r1, pc, r1
    6860:	mov	r2, r0
    6864:	mov	r0, #1
    6868:	bl	24a8 <__printf_chk@plt>
    686c:	add	ip, sp, #4416	; 0x1140
    6870:	movw	r3, #61208	; 0xef18
    6874:	add	ip, ip, #40	; 0x28
    6878:	movt	r3, #65535	; 0xffff
    687c:	ldr	r3, [ip, r3]
    6880:	b	6258 <el_line@plt+0x3da4>
    6884:	ldr	r3, [pc, #548]	; 6ab0 <el_line@plt+0x45fc>
    6888:	add	r3, pc, r3
    688c:	ldr	r8, [r3, #4]
    6890:	rsbs	r8, r8, #1
    6894:	movcc	r8, #0
    6898:	cmp	r8, #0
    689c:	str	r8, [r3, #4]
    68a0:	beq	7d84 <el_line@plt+0x58d0>
    68a4:	ldr	r0, [pc, #520]	; 6ab4 <el_line@plt+0x4600>
    68a8:	mov	r8, #0
    68ac:	add	r0, pc, r0
    68b0:	bl	1fc8 <puts@plt>
    68b4:	add	lr, sp, #4416	; 0x1140
    68b8:	movw	r3, #61208	; 0xef18
    68bc:	add	lr, lr, #40	; 0x28
    68c0:	movt	r3, #65535	; 0xffff
    68c4:	ldr	r3, [lr, r3]
    68c8:	b	6258 <el_line@plt+0x3da4>
    68cc:	ldr	r5, [sp, #92]	; 0x5c
    68d0:	mov	r8, #0
    68d4:	ldr	r0, [pc, #476]	; 6ab8 <el_line@plt+0x4604>
    68d8:	ldr	r1, [r5]
    68dc:	add	r0, pc, r0
    68e0:	bl	14498 <el_line@plt+0x11fe4>
    68e4:	add	r6, sp, #4416	; 0x1140
    68e8:	movw	r3, #61208	; 0xef18
    68ec:	add	r6, r6, #40	; 0x28
    68f0:	movt	r3, #65535	; 0xffff
    68f4:	ldr	r3, [r6, r3]
    68f8:	b	6258 <el_line@plt+0x3da4>
    68fc:	ldr	sl, [sp, #56]	; 0x38
    6900:	ldr	fp, [sp, #92]	; 0x5c
    6904:	cmp	sl, #0
    6908:	ldr	r1, [fp]
    690c:	beq	692c <el_line@plt+0x4478>
    6910:	ldrb	r3, [sl]
    6914:	cmp	r3, #47	; 0x2f
    6918:	beq	692c <el_line@plt+0x4478>
    691c:	mov	r0, sl
    6920:	bl	4eb4 <el_line@plt+0x2a00>
    6924:	ldr	r1, [fp]
    6928:	str	r0, [sp, #56]	; 0x38
    692c:	ldr	ip, [sp, #80]	; 0x50
    6930:	cmp	ip, #0
    6934:	beq	6950 <el_line@plt+0x449c>
    6938:	ldrb	r3, [ip]
    693c:	cmp	r3, #47	; 0x2f
    6940:	beq	6950 <el_line@plt+0x449c>
    6944:	mov	r0, ip
    6948:	bl	4eb4 <el_line@plt+0x2a00>
    694c:	str	r0, [sp, #80]	; 0x50
    6950:	ldr	r0, [sp, #72]	; 0x48
    6954:	ldr	r3, [sp, #104]	; 0x68
    6958:	ldr	r1, [sp, #56]	; 0x38
    695c:	ldr	r2, [sp, #80]	; 0x50
    6960:	bl	b1e8 <el_line@plt+0x8d34>
    6964:	b	64c8 <el_line@plt+0x4014>
    6968:	ldr	r5, [sp, #56]	; 0x38
    696c:	ldr	r6, [sp, #92]	; 0x5c
    6970:	cmp	r5, #0
    6974:	ldr	r1, [r6]
    6978:	beq	6994 <el_line@plt+0x44e0>
    697c:	ldrb	r3, [r5]
    6980:	cmp	r3, #47	; 0x2f
    6984:	beq	6994 <el_line@plt+0x44e0>
    6988:	mov	r0, r5
    698c:	bl	4eb4 <el_line@plt+0x2a00>
    6990:	str	r0, [sp, #56]	; 0x38
    6994:	add	r5, sp, #224	; 0xe0
    6998:	add	r7, sp, #4416	; 0x1140
    699c:	add	r7, r7, #40	; 0x28
    69a0:	movw	r6, #511	; 0x1ff
    69a4:	mov	r0, r5
    69a8:	add	r9, sp, #4416	; 0x1140
    69ac:	bl	db30 <el_line@plt+0xb67c>
    69b0:	movw	ip, #61304	; 0xef78
    69b4:	movt	ip, #65535	; 0xffff
    69b8:	mov	r3, #1
    69bc:	ldr	r0, [sp, #72]	; 0x48
    69c0:	mov	r2, r5
    69c4:	ldr	lr, [r7, ip]
    69c8:	add	r9, r9, #40	; 0x28
    69cc:	ldr	r1, [sp, #56]	; 0x38
    69d0:	orr	lr, lr, #4
    69d4:	str	r6, [r5, #24]
    69d8:	str	lr, [r7, ip]
    69dc:	bl	ac20 <el_line@plt+0x876c>
    69e0:	ldr	sl, [sp, #48]	; 0x30
    69e4:	movw	r3, #61208	; 0xef18
    69e8:	movt	r3, #65535	; 0xffff
    69ec:	ldr	r3, [r9, r3]
    69f0:	cmp	r0, #0
    69f4:	cmpne	sl, #0
    69f8:	moveq	r8, #0
    69fc:	movne	r8, #1
    6a00:	b	6258 <el_line@plt+0x3da4>
    6a04:	ldr	r0, [pc, #176]	; 6abc <el_line@plt+0x4608>
    6a08:	mov	r8, #0
    6a0c:	add	r0, pc, r0
    6a10:	bl	1fc8 <puts@plt>
    6a14:	b	6634 <el_line@plt+0x4180>
    6a18:	ldr	r6, [sp, #48]	; 0x30
    6a1c:	adds	r8, r6, #0
    6a20:	movne	r8, #1
    6a24:	b	60fc <el_line@plt+0x3c48>
    6a28:	strdeq	r9, [r2], -r8
    6a2c:	andeq	r0, r0, ip, lsr #4
    6a30:	muleq	r1, r4, r8
    6a34:	andeq	r4, r1, r4, lsr #8
    6a38:	andeq	r8, r2, r4, asr #25
    6a3c:	andeq	r8, r2, ip, ror ip
    6a40:	andeq	r4, r1, r8, asr #13
    6a44:	andeq	r9, r2, r0, lsr r3
    6a48:	andeq	fp, r2, r8, lsl #6
    6a4c:	strdeq	fp, [r2], -ip
    6a50:	strdeq	fp, [r2], -r4
    6a54:	andeq	fp, r2, ip, ror #5
    6a58:	andeq	fp, r2, r4, ror #5
    6a5c:	ldrdeq	fp, [r2], -r4
    6a60:	strdeq	r4, [r1], -r0
    6a64:	andeq	r9, r2, r8, ror #3
    6a68:	andeq	r4, r1, r8, lsr #8
    6a6c:	andeq	r4, r1, r0, ror #7
    6a70:	andeq	r4, r1, r8, asr #8
    6a74:	andeq	r4, r1, ip, asr r4
    6a78:	andeq	r8, r2, r4, lsr #28
    6a7c:	strdeq	sl, [r2], -r8
    6a80:	ldrdeq	r4, [r1], -ip
    6a84:	strdeq	r8, [r2], -r4
    6a88:	andeq	r4, r1, r4, lsl #3
    6a8c:	andeq	r8, r2, r8, asr #23
    6a90:	andeq	sl, r2, r4, lsr #23
    6a94:	andeq	r8, r2, r4, lsr #23
    6a98:	strdeq	r3, [r1], -ip
    6a9c:	andeq	r4, r1, r0, asr #3
    6aa0:	ldrdeq	r3, [r1], -ip
    6aa4:	andeq	r4, r1, r4, lsr r1
    6aa8:	andeq	r0, r0, r0, lsl #5
    6aac:	andeq	r4, r1, r0, lsr #16
    6ab0:	andeq	r8, r2, r4, ror r7
    6ab4:	andeq	r4, r1, ip, ror #15
    6ab8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
    6abc:	andeq	r3, r1, r8, asr #29
    6ac0:	andeq	r8, r2, ip, lsl r5
    6ac4:	strdeq	sl, [r2], -r4
    6ac8:	andeq	r3, r1, r8, lsr ip
    6acc:	andeq	sl, r2, r4, ror #9
    6ad0:	strdeq	r3, [r1], -ip
    6ad4:			; <UNDEFINED> instruction: 0x00013bbc
    6ad8:	andeq	r8, r2, r0, asr #9
    6adc:	muleq	r1, r0, sl
    6ae0:	andeq	r3, r1, r8, ror #9
    6ae4:	ldrdeq	r3, [r1], -r4
    6ae8:	andeq	r3, r1, ip, ror r3
    6aec:	andeq	r5, r1, r0, rrx
    6af0:			; <UNDEFINED> instruction: 0x000131bc
    6af4:	andeq	r3, r1, r8, asr #3
    6af8:	andeq	r0, r0, r8, lsr #4
    6afc:	andeq	r0, r0, r0, lsr r2
    6b00:	andeq	r0, r0, r0, ror #4
    6b04:			; <UNDEFINED> instruction: 0x000159b4
    6b08:	andeq	r2, r1, r4, lsl #29
    6b0c:			; <UNDEFINED> instruction: 0x00012cbc
    6b10:	andeq	r0, r0, r8, asr #4
    6b14:	andeq	r2, r1, r0, asr sp
    6b18:	andeq	r2, r1, r8, lsl lr
    6b1c:	andeq	r2, r1, r4, ror #27
    6b20:	andeq	r3, r1, ip, asr #17
    6b24:	ldrdeq	r7, [r2], -ip
    6b28:	andeq	r2, r1, ip, lsl #25
    6b2c:	andeq	r9, r2, ip, lsr #17
    6b30:	andeq	r2, r1, ip, asr ip
    6b34:	muleq	r2, r4, r8
    6b38:	muleq	r2, r0, r8
    6b3c:	andeq	r9, r2, r4, lsl #17
    6b40:	andeq	r9, r2, r4, lsr #16
    6b44:	andeq	r9, r2, r0, lsl #16
    6b48:	andeq	r7, r2, r8, lsl #15
    6b4c:	andeq	r0, r0, ip, asr #4
    6b50:	andeq	r2, r1, r0, lsl r9
    6b54:	bl	2280 <getuid@plt>
    6b58:	mov	r1, r0
    6b5c:	ldr	r0, [sp, #56]	; 0x38
    6b60:	bl	12918 <el_line@plt+0x10464>
    6b64:	mov	r5, r0
    6b68:	ldr	r0, [sp, #56]	; 0x38
    6b6c:	bl	1f20 <free@plt>
    6b70:	mov	r0, r5
    6b74:	bl	1e78 <chdir@plt>
    6b78:	cmn	r0, #1
    6b7c:	beq	85d0 <el_line@plt+0x611c>
    6b80:	add	r9, sp, #4416	; 0x1140
    6b84:	movw	r3, #61208	; 0xef18
    6b88:	add	r9, r9, #40	; 0x28
    6b8c:	movt	r3, #65535	; 0xffff
    6b90:	str	r5, [sp, #56]	; 0x38
    6b94:	mov	r8, #0
    6b98:	ldr	r3, [r9, r3]
    6b9c:	b	6258 <el_line@plt+0x3da4>
    6ba0:	ldr	r6, [sp, #56]	; 0x38
    6ba4:	ldr	r7, [sp, #92]	; 0x5c
    6ba8:	cmp	r6, #0
    6bac:	ldr	r1, [r7]
    6bb0:	beq	6bcc <el_line@plt+0x4718>
    6bb4:	ldrb	r3, [r6]
    6bb8:	cmp	r3, #47	; 0x2f
    6bbc:	beq	6bcc <el_line@plt+0x4718>
    6bc0:	mov	r0, r6
    6bc4:	bl	4eb4 <el_line@plt+0x2a00>
    6bc8:	str	r0, [sp, #56]	; 0x38
    6bcc:	sub	r7, r4, #40	; 0x28
    6bd0:	ldr	r1, [sp, #56]	; 0x38
    6bd4:	mov	r2, #16
    6bd8:	mov	r3, #0
    6bdc:	ldr	r0, [sp, #72]	; 0x48
    6be0:	str	r7, [sp]
    6be4:	bl	e448 <el_line@plt+0xbf94>
    6be8:	ldr	r2, [r7, #16]
    6bec:	movw	r3, #61208	; 0xef18
    6bf0:	movt	r3, #65535	; 0xffff
    6bf4:	ldr	r1, [r2]
    6bf8:	cmp	r1, #0
    6bfc:	beq	8884 <el_line@plt+0x63d0>
    6c00:	ldr	r2, [pc, #-328]	; 6ac0 <el_line@plt+0x460c>
    6c04:	ldr	r6, [pc, r2]
    6c08:	cmp	r6, #0
    6c0c:	bne	8870 <el_line@plt+0x63bc>
    6c10:	ldr	r5, [sp, #48]	; 0x30
    6c14:	ldr	fp, [pc, #-344]	; 6ac4 <el_line@plt+0x4610>
    6c18:	ldr	ip, [pc, #-344]	; 6ac8 <el_line@plt+0x4614>
    6c1c:	adds	r8, r5, #0
    6c20:	ldr	r9, [pc, #-348]	; 6acc <el_line@plt+0x4618>
    6c24:	add	fp, pc, fp
    6c28:	add	ip, pc, ip
    6c2c:	str	fp, [sp, #40]	; 0x28
    6c30:	str	ip, [sp, #60]	; 0x3c
    6c34:	add	r9, pc, r9
    6c38:	ldr	fp, [pc, #-368]	; 6ad0 <el_line@plt+0x461c>
    6c3c:	movne	r8, #1
    6c40:	ldr	ip, [pc, #-372]	; 6ad4 <el_line@plt+0x4620>
    6c44:	mov	r5, #4
    6c48:	ldr	r3, [pc, #-376]	; 6ad8 <el_line@plt+0x4624>
    6c4c:	add	fp, pc, fp
    6c50:	str	r9, [sp, #88]	; 0x58
    6c54:	mov	r9, r6
    6c58:	str	fp, [sp, #100]	; 0x64
    6c5c:	add	ip, pc, ip
    6c60:	add	r3, pc, r3
    6c64:	ldr	fp, [sp, #72]	; 0x48
    6c68:	str	ip, [sp, #84]	; 0x54
    6c6c:	str	r3, [sp, #48]	; 0x30
    6c70:	str	r4, [sp, #72]	; 0x48
    6c74:	mov	r0, fp
    6c78:	mov	r2, #0
    6c7c:	bl	ad34 <el_line@plt+0x8880>
    6c80:	subs	r4, r0, #0
    6c84:	beq	7b70 <el_line@plt+0x56bc>
    6c88:	ldr	r3, [r4]
    6c8c:	ands	r3, r3, #2
    6c90:	beq	7ae0 <el_line@plt+0x562c>
    6c94:	ldr	r9, [sp, #64]	; 0x40
    6c98:	str	r3, [r4]
    6c9c:	cmp	r9, #4
    6ca0:	beq	7b38 <el_line@plt+0x5684>
    6ca4:	ldr	r9, [sp, #40]	; 0x28
    6ca8:	ldr	r3, [r9, #532]	; 0x214
    6cac:	cmp	r3, #0
    6cb0:	beq	7c20 <el_line@plt+0x576c>
    6cb4:	str	sl, [r4, #20]
    6cb8:	ldr	r1, [r7, #16]
    6cbc:	mov	r2, r4
    6cc0:	mov	r0, fp
    6cc4:	movw	r4, #61208	; 0xef18
    6cc8:	movt	r4, #65535	; 0xffff
    6ccc:	ldr	r1, [r1, r6]
    6cd0:	bl	ae44 <el_line@plt+0x8990>
    6cd4:	cmp	r0, #0
    6cd8:	moveq	r2, #0
    6cdc:	andne	r2, r8, #1
    6ce0:	mov	r9, r0
    6ce4:	cmp	r2, #0
    6ce8:	bne	8808 <el_line@plt+0x6354>
    6cec:	ldr	r2, [r7, #16]
    6cf0:	movw	r3, #61208	; 0xef18
    6cf4:	movt	r3, #65535	; 0xffff
    6cf8:	ldr	r1, [r2, r5]
    6cfc:	cmp	r1, #0
    6d00:	beq	87c0 <el_line@plt+0x630c>
    6d04:	ldr	ip, [sp, #48]	; 0x30
    6d08:	add	r2, r5, #4
    6d0c:	ldr	r0, [ip]
    6d10:	cmp	r0, #0
    6d14:	bne	8824 <el_line@plt+0x6370>
    6d18:	mov	r6, r5
    6d1c:	mov	r5, r2
    6d20:	b	6c74 <el_line@plt+0x47c0>
    6d24:	ldr	r5, [sp, #92]	; 0x5c
    6d28:	mov	r7, #1
    6d2c:	ldr	r1, [r5]
    6d30:	b	6804 <el_line@plt+0x4350>
    6d34:	cmp	r5, #0
    6d38:	beq	6d48 <el_line@plt+0x4894>
    6d3c:	ldrb	r3, [r5]
    6d40:	cmp	r3, #0
    6d44:	bne	7ea0 <el_line@plt+0x59ec>
    6d48:	ldr	r0, [pc, #-628]	; 6adc <el_line@plt+0x4628>
    6d4c:	mov	r8, #0
    6d50:	add	r0, pc, r0
    6d54:	bl	4960 <el_line@plt+0x24ac>
    6d58:	b	6244 <el_line@plt+0x3d90>
    6d5c:	str	fp, [sp, #60]	; 0x3c
    6d60:	b	6000 <el_line@plt+0x3b4c>
    6d64:	add	ip, sp, #4416	; 0x1140
    6d68:	movw	r7, #61304	; 0xef78
    6d6c:	add	ip, ip, #40	; 0x28
    6d70:	movt	r7, #65535	; 0xffff
    6d74:	mov	r0, fp
    6d78:	mov	r1, r8
    6d7c:	ldr	r2, [ip, r7]
    6d80:	bl	59b8 <el_line@plt+0x3504>
    6d84:	cmn	r0, #1
    6d88:	mov	r9, r0
    6d8c:	beq	8598 <el_line@plt+0x60e4>
    6d90:	add	lr, sp, #4416	; 0x1140
    6d94:	mov	r1, r9
    6d98:	add	lr, lr, #40	; 0x28
    6d9c:	ldr	r0, [lr, r7]
    6da0:	bl	19350 <el_line@plt+0x16e9c>
    6da4:	cmp	r0, #0
    6da8:	ble	8948 <el_line@plt+0x6494>
    6dac:	ldr	r0, [r8, r9, lsl #2]
    6db0:	mov	sl, #0
    6db4:	bl	1163c <el_line@plt+0xf188>
    6db8:	ldr	ip, [sp, #96]	; 0x60
    6dbc:	cmp	ip, #22
    6dc0:	str	r0, [sp, #56]	; 0x38
    6dc4:	beq	6dcc <el_line@plt+0x4918>
    6dc8:	bl	3bd0 <el_line@plt+0x171c>
    6dcc:	mov	r7, sl
    6dd0:	str	sl, [sp, #100]	; 0x64
    6dd4:	str	sl, [sp, #88]	; 0x58
    6dd8:	str	sl, [sp, #104]	; 0x68
    6ddc:	str	sl, [sp, #40]	; 0x28
    6de0:	mov	ip, sl
    6de4:	str	sl, [sp, #84]	; 0x54
    6de8:	mov	r9, sl
    6dec:	str	sl, [sp, #80]	; 0x50
    6df0:	b	60e8 <el_line@plt+0x3c34>
    6df4:	add	lr, sp, #4416	; 0x1140
    6df8:	movw	r3, #61304	; 0xef78
    6dfc:	add	lr, lr, #40	; 0x28
    6e00:	movt	r3, #65535	; 0xffff
    6e04:	mov	r0, fp
    6e08:	mov	r1, r8
    6e0c:	ldr	r2, [lr, r3]
    6e10:	bl	59b8 <el_line@plt+0x3504>
    6e14:	cmn	r0, #1
    6e18:	mov	r9, r0
    6e1c:	beq	8598 <el_line@plt+0x60e4>
    6e20:	mov	r7, #0
    6e24:	str	r7, [sp, #104]	; 0x68
    6e28:	add	r3, sp, #4416	; 0x1140
    6e2c:	movw	r2, #61304	; 0xef78
    6e30:	add	r3, r3, #40	; 0x28
    6e34:	movt	r2, #65535	; 0xffff
    6e38:	mov	r1, r9
    6e3c:	ldr	r0, [r3, r2]
    6e40:	bl	19350 <el_line@plt+0x16e9c>
    6e44:	cmp	r0, #1
    6e48:	ble	8850 <el_line@plt+0x639c>
    6e4c:	ldr	r0, [r8, r9, lsl #2]
    6e50:	lsl	r5, r9, #2
    6e54:	bl	1163c <el_line@plt+0xf188>
    6e58:	add	r5, r8, r5
    6e5c:	mov	sl, #0
    6e60:	str	sl, [sp, #100]	; 0x64
    6e64:	str	sl, [sp, #88]	; 0x58
    6e68:	mov	r9, sl
    6e6c:	str	sl, [sp, #40]	; 0x28
    6e70:	str	r0, [sp, #56]	; 0x38
    6e74:	ldr	r0, [r5, #4]
    6e78:	bl	1163c <el_line@plt+0xf188>
    6e7c:	str	r0, [sp, #80]	; 0x50
    6e80:	ldr	r0, [sp, #56]	; 0x38
    6e84:	bl	3bd0 <el_line@plt+0x171c>
    6e88:	ldr	r0, [sp, #80]	; 0x50
    6e8c:	bl	3bd0 <el_line@plt+0x171c>
    6e90:	mov	ip, sl
    6e94:	str	sl, [sp, #84]	; 0x54
    6e98:	b	60e8 <el_line@plt+0x3c34>
    6e9c:	ldr	ip, [pc, #-940]	; 6af8 <el_line@plt+0x4644>
    6ea0:	add	r7, sp, #4416	; 0x1140
    6ea4:	ldr	r0, [pc, #-944]	; 6afc <el_line@plt+0x4648>
    6ea8:	mov	r2, #1
    6eac:	mov	r3, #0
    6eb0:	add	r7, r7, #40	; 0x28
    6eb4:	ldr	ip, [r6, ip]
    6eb8:	movw	r1, #61304	; 0xef78
    6ebc:	str	r3, [sp, #40]	; 0x28
    6ec0:	movt	r1, #65535	; 0xffff
    6ec4:	ldr	lr, [pc, #-972]	; 6b00 <el_line@plt+0x464c>
    6ec8:	mov	sl, r3
    6ecc:	str	r2, [ip]
    6ed0:	ldr	r0, [r6, r0]
    6ed4:	ldr	r9, [r7, r1]
    6ed8:	ldr	r7, [pc, #-1024]	; 6ae0 <el_line@plt+0x462c>
    6edc:	str	r0, [sp, #56]	; 0x38
    6ee0:	str	r2, [r0]
    6ee4:	add	r7, pc, r7
    6ee8:	ldr	r2, [r6, lr]
    6eec:	str	r3, [r2]
    6ef0:	mov	r0, r9
    6ef4:	mov	r1, r8
    6ef8:	mov	r2, r7
    6efc:	bl	1531c <el_line@plt+0x12e68>
    6f00:	cmn	r0, #1
    6f04:	beq	8678 <el_line@plt+0x61c4>
    6f08:	cmp	r0, #104	; 0x68
    6f0c:	beq	7b24 <el_line@plt+0x5670>
    6f10:	cmp	r0, #105	; 0x69
    6f14:	beq	7b2c <el_line@plt+0x5678>
    6f18:	ldr	r0, [pc, #-1084]	; 6ae4 <el_line@plt+0x4630>
    6f1c:	mov	ip, sl
    6f20:	ldr	r3, [pc, #-1048]	; 6b10 <el_line@plt+0x465c>
    6f24:	mov	sl, #0
    6f28:	add	r0, pc, r0
    6f2c:	mov	r1, fp
    6f30:	mov	r7, sl
    6f34:	mov	r9, sl
    6f38:	str	sl, [sp, #100]	; 0x64
    6f3c:	ldr	r3, [r6, r3]
    6f40:	str	sl, [sp, #88]	; 0x58
    6f44:	str	sl, [sp, #104]	; 0x68
    6f48:	str	sl, [sp, #84]	; 0x54
    6f4c:	ldr	r2, [r3]
    6f50:	str	sl, [sp, #80]	; 0x50
    6f54:	str	ip, [sp, #36]	; 0x24
    6f58:	mvn	fp, #0
    6f5c:	bl	11238 <el_line@plt+0xed84>
    6f60:	str	sl, [sp, #56]	; 0x38
    6f64:	str	fp, [sp, #64]	; 0x40
    6f68:	ldr	ip, [sp, #36]	; 0x24
    6f6c:	b	5b04 <el_line@plt+0x3650>
    6f70:	ldr	ip, [pc, #-1152]	; 6af8 <el_line@plt+0x4644>
    6f74:	mov	r3, #0
    6f78:	ldr	r0, [pc, #-1156]	; 6afc <el_line@plt+0x4648>
    6f7c:	mov	r2, #1
    6f80:	ldr	lr, [pc, #-1160]	; 6b00 <el_line@plt+0x464c>
    6f84:	add	r9, sp, #4416	; 0x1140
    6f88:	ldr	ip, [r6, ip]
    6f8c:	add	r9, r9, #40	; 0x28
    6f90:	str	r3, [sp, #100]	; 0x64
    6f94:	movw	r1, #61304	; 0xef78
    6f98:	str	r3, [sp, #88]	; 0x58
    6f9c:	movt	r1, #65535	; 0xffff
    6fa0:	str	r2, [ip]
    6fa4:	ldr	r0, [r6, r0]
    6fa8:	ldr	sl, [pc, #-1224]	; 6ae8 <el_line@plt+0x4634>
    6fac:	str	r3, [sp, #84]	; 0x54
    6fb0:	str	r0, [sp, #56]	; 0x38
    6fb4:	add	sl, pc, sl
    6fb8:	str	r2, [r0]
    6fbc:	ldr	r2, [r6, lr]
    6fc0:	ldr	r7, [r9, r1]
    6fc4:	mov	r9, r3
    6fc8:	str	r3, [r2]
    6fcc:	mov	r0, r7
    6fd0:	mov	r1, r8
    6fd4:	mov	r2, sl
    6fd8:	bl	1531c <el_line@plt+0x12e68>
    6fdc:	cmn	r0, #1
    6fe0:	beq	8448 <el_line@plt+0x5f94>
    6fe4:	sub	r3, r0, #80	; 0x50
    6fe8:	cmp	r3, #34	; 0x22
    6fec:	addls	pc, pc, r3, lsl #2
    6ff0:	b	7624 <el_line@plt+0x5170>
    6ff4:	b	70a0 <el_line@plt+0x4bec>
    6ff8:	b	7624 <el_line@plt+0x5170>
    6ffc:	b	7094 <el_line@plt+0x4be0>
    7000:	b	7624 <el_line@plt+0x5170>
    7004:	b	7624 <el_line@plt+0x5170>
    7008:	b	7624 <el_line@plt+0x5170>
    700c:	b	7624 <el_line@plt+0x5170>
    7010:	b	7624 <el_line@plt+0x5170>
    7014:	b	7624 <el_line@plt+0x5170>
    7018:	b	7624 <el_line@plt+0x5170>
    701c:	b	7624 <el_line@plt+0x5170>
    7020:	b	7624 <el_line@plt+0x5170>
    7024:	b	7624 <el_line@plt+0x5170>
    7028:	b	7624 <el_line@plt+0x5170>
    702c:	b	7624 <el_line@plt+0x5170>
    7030:	b	7624 <el_line@plt+0x5170>
    7034:	b	7624 <el_line@plt+0x5170>
    7038:	b	708c <el_line@plt+0x4bd8>
    703c:	b	7624 <el_line@plt+0x5170>
    7040:	b	7624 <el_line@plt+0x5170>
    7044:	b	7624 <el_line@plt+0x5170>
    7048:	b	7624 <el_line@plt+0x5170>
    704c:	b	7080 <el_line@plt+0x4bcc>
    7050:	b	7624 <el_line@plt+0x5170>
    7054:	b	7624 <el_line@plt+0x5170>
    7058:	b	7624 <el_line@plt+0x5170>
    705c:	b	7624 <el_line@plt+0x5170>
    7060:	b	7624 <el_line@plt+0x5170>
    7064:	b	7624 <el_line@plt+0x5170>
    7068:	b	7624 <el_line@plt+0x5170>
    706c:	b	7624 <el_line@plt+0x5170>
    7070:	b	7624 <el_line@plt+0x5170>
    7074:	b	70a0 <el_line@plt+0x4bec>
    7078:	b	7624 <el_line@plt+0x5170>
    707c:	b	7094 <el_line@plt+0x4be0>
    7080:	mov	ip, #1
    7084:	str	ip, [sp, #84]	; 0x54
    7088:	b	6fcc <el_line@plt+0x4b18>
    708c:	mov	r9, #1
    7090:	b	6fcc <el_line@plt+0x4b18>
    7094:	mov	ip, #1
    7098:	str	ip, [sp, #100]	; 0x64
    709c:	b	6fcc <el_line@plt+0x4b18>
    70a0:	mov	ip, #1
    70a4:	str	ip, [sp, #88]	; 0x58
    70a8:	b	6fcc <el_line@plt+0x4b18>
    70ac:	ldr	ip, [pc, #-1468]	; 6af8 <el_line@plt+0x4644>
    70b0:	mov	r2, #1
    70b4:	ldr	r0, [pc, #-1472]	; 6afc <el_line@plt+0x4648>
    70b8:	add	lr, sp, #4416	; 0x1140
    70bc:	ldr	r1, [pc, #-1476]	; 6b00 <el_line@plt+0x464c>
    70c0:	movw	r3, #61304	; 0xef78
    70c4:	ldr	ip, [r6, ip]
    70c8:	movt	r3, #65535	; 0xffff
    70cc:	add	lr, lr, #40	; 0x28
    70d0:	ldr	r9, [pc, #-1516]	; 6aec <el_line@plt+0x4638>
    70d4:	str	r2, [ip]
    70d8:	add	r9, pc, r9
    70dc:	ldr	r0, [r6, r0]
    70e0:	ldr	sl, [lr, r3]
    70e4:	mov	r3, #0
    70e8:	mov	r7, r3
    70ec:	str	r0, [sp, #56]	; 0x38
    70f0:	str	r2, [r0]
    70f4:	ldr	r2, [r6, r1]
    70f8:	str	r3, [r2]
    70fc:	b	710c <el_line@plt+0x4c58>
    7100:	cmp	r0, #115	; 0x73
    7104:	bne	7e78 <el_line@plt+0x59c4>
    7108:	mov	r7, #1
    710c:	mov	r0, sl
    7110:	mov	r1, r8
    7114:	mov	r2, r9
    7118:	bl	1531c <el_line@plt+0x12e68>
    711c:	cmn	r0, #1
    7120:	bne	7100 <el_line@plt+0x4c4c>
    7124:	ldr	ip, [sp, #56]	; 0x38
    7128:	mov	sl, #0
    712c:	ldr	r9, [ip]
    7130:	cmn	r9, #1
    7134:	beq	8a58 <el_line@plt+0x65a4>
    7138:	str	sl, [sp, #104]	; 0x68
    713c:	b	6e28 <el_line@plt+0x4974>
    7140:	mov	r0, fp
    7144:	mov	sl, #0
    7148:	bl	2310 <strlen@plt>
    714c:	ldr	r1, [pc, #-1636]	; 6af0 <el_line@plt+0x463c>
    7150:	mov	r7, sl
    7154:	mov	r9, sl
    7158:	add	r1, pc, r1
    715c:	mov	r5, r0
    7160:	mov	r0, r4
    7164:	bl	2088 <strspn@plt>
    7168:	str	sl, [sp, #100]	; 0x64
    716c:	str	sl, [sp, #88]	; 0x58
    7170:	mov	ip, sl
    7174:	str	sl, [sp, #104]	; 0x68
    7178:	str	sl, [sp, #40]	; 0x28
    717c:	str	sl, [sp, #84]	; 0x54
    7180:	str	sl, [sp, #80]	; 0x50
    7184:	str	sl, [sp, #56]	; 0x38
    7188:	add	r0, r0, r5
    718c:	add	r4, r4, r0
    7190:	b	60e8 <el_line@plt+0x3c34>
    7194:	add	ip, sp, #4416	; 0x1140
    7198:	movw	r3, #61304	; 0xef78
    719c:	add	ip, ip, #40	; 0x28
    71a0:	movt	r3, #65535	; 0xffff
    71a4:	mov	r0, fp
    71a8:	mov	r1, r8
    71ac:	ldr	r2, [ip, r3]
    71b0:	bl	59b8 <el_line@plt+0x3504>
    71b4:	cmn	r0, #1
    71b8:	beq	8598 <el_line@plt+0x60e4>
    71bc:	mov	sl, #0
    71c0:	str	sl, [sp, #100]	; 0x64
    71c4:	mov	r7, sl
    71c8:	str	sl, [sp, #88]	; 0x58
    71cc:	str	sl, [sp, #104]	; 0x68
    71d0:	str	sl, [sp, #40]	; 0x28
    71d4:	mov	ip, sl
    71d8:	str	sl, [sp, #84]	; 0x54
    71dc:	mov	r9, sl
    71e0:	str	sl, [sp, #80]	; 0x50
    71e4:	str	sl, [sp, #56]	; 0x38
    71e8:	b	60e8 <el_line@plt+0x3c34>
    71ec:	ldr	ip, [pc, #-1788]	; 6af8 <el_line@plt+0x4644>
    71f0:	mov	r3, #1
    71f4:	ldr	r0, [pc, #-1792]	; 6afc <el_line@plt+0x4648>
    71f8:	add	fp, sp, #4416	; 0x1140
    71fc:	ldr	r1, [pc, #-1796]	; 6b00 <el_line@plt+0x464c>
    7200:	movw	r2, #61304	; 0xef78
    7204:	ldr	ip, [r6, ip]
    7208:	movt	r2, #65535	; 0xffff
    720c:	ldr	r7, [pc, #-1824]	; 6af4 <el_line@plt+0x4640>
    7210:	add	fp, fp, #40	; 0x28
    7214:	str	r3, [ip]
    7218:	mov	ip, #8
    721c:	ldr	r0, [r6, r0]
    7220:	add	r7, pc, r7
    7224:	str	ip, [sp, #104]	; 0x68
    7228:	mov	r9, ip
    722c:	ldr	sl, [fp, r2]
    7230:	mov	r2, #0
    7234:	str	r0, [sp, #56]	; 0x38
    7238:	str	r3, [r0]
    723c:	ldr	r3, [r6, r1]
    7240:	str	r2, [r3]
    7244:	mov	r0, sl
    7248:	mov	r1, r8
    724c:	mov	r2, r7
    7250:	bl	1531c <el_line@plt+0x12e68>
    7254:	cmn	r0, #1
    7258:	beq	821c <el_line@plt+0x5d68>
    725c:	sub	r3, r0, #49	; 0x31
    7260:	cmp	r3, #67	; 0x43
    7264:	addls	pc, pc, r3, lsl #2
    7268:	b	7650 <el_line@plt+0x519c>
    726c:	b	7594 <el_line@plt+0x50e0>
    7270:	b	7650 <el_line@plt+0x519c>
    7274:	b	7650 <el_line@plt+0x519c>
    7278:	b	7650 <el_line@plt+0x519c>
    727c:	b	7650 <el_line@plt+0x519c>
    7280:	b	7650 <el_line@plt+0x519c>
    7284:	b	7650 <el_line@plt+0x519c>
    7288:	b	7650 <el_line@plt+0x519c>
    728c:	b	7650 <el_line@plt+0x519c>
    7290:	b	7650 <el_line@plt+0x519c>
    7294:	b	7650 <el_line@plt+0x519c>
    7298:	b	7650 <el_line@plt+0x519c>
    729c:	b	7650 <el_line@plt+0x519c>
    72a0:	b	7650 <el_line@plt+0x519c>
    72a4:	b	7650 <el_line@plt+0x519c>
    72a8:	b	7650 <el_line@plt+0x519c>
    72ac:	b	7650 <el_line@plt+0x519c>
    72b0:	b	7650 <el_line@plt+0x519c>
    72b4:	b	7650 <el_line@plt+0x519c>
    72b8:	b	7650 <el_line@plt+0x519c>
    72bc:	b	7650 <el_line@plt+0x519c>
    72c0:	b	7650 <el_line@plt+0x519c>
    72c4:	b	7650 <el_line@plt+0x519c>
    72c8:	b	7650 <el_line@plt+0x519c>
    72cc:	b	7650 <el_line@plt+0x519c>
    72d0:	b	7650 <el_line@plt+0x519c>
    72d4:	b	7650 <el_line@plt+0x519c>
    72d8:	b	7650 <el_line@plt+0x519c>
    72dc:	b	7650 <el_line@plt+0x519c>
    72e0:	b	7650 <el_line@plt+0x519c>
    72e4:	b	7650 <el_line@plt+0x519c>
    72e8:	b	7650 <el_line@plt+0x519c>
    72ec:	b	7650 <el_line@plt+0x519c>
    72f0:	b	7650 <el_line@plt+0x519c>
    72f4:	b	7588 <el_line@plt+0x50d4>
    72f8:	b	7650 <el_line@plt+0x519c>
    72fc:	b	7650 <el_line@plt+0x519c>
    7300:	b	7650 <el_line@plt+0x519c>
    7304:	b	7650 <el_line@plt+0x519c>
    7308:	b	7650 <el_line@plt+0x519c>
    730c:	b	7650 <el_line@plt+0x519c>
    7310:	b	7650 <el_line@plt+0x519c>
    7314:	b	7650 <el_line@plt+0x519c>
    7318:	b	7650 <el_line@plt+0x519c>
    731c:	b	7650 <el_line@plt+0x519c>
    7320:	b	7650 <el_line@plt+0x519c>
    7324:	b	7650 <el_line@plt+0x519c>
    7328:	b	7650 <el_line@plt+0x519c>
    732c:	b	7580 <el_line@plt+0x50cc>
    7330:	b	7650 <el_line@plt+0x519c>
    7334:	b	7650 <el_line@plt+0x519c>
    7338:	b	7650 <el_line@plt+0x519c>
    733c:	b	7650 <el_line@plt+0x519c>
    7340:	b	7578 <el_line@plt+0x50c4>
    7344:	b	7650 <el_line@plt+0x519c>
    7348:	b	7570 <el_line@plt+0x50bc>
    734c:	b	7650 <el_line@plt+0x519c>
    7350:	b	7650 <el_line@plt+0x519c>
    7354:	b	7650 <el_line@plt+0x519c>
    7358:	b	7564 <el_line@plt+0x50b0>
    735c:	b	7650 <el_line@plt+0x519c>
    7360:	b	7558 <el_line@plt+0x50a4>
    7364:	b	7650 <el_line@plt+0x519c>
    7368:	b	7650 <el_line@plt+0x519c>
    736c:	b	7650 <el_line@plt+0x519c>
    7370:	b	7550 <el_line@plt+0x509c>
    7374:	b	7650 <el_line@plt+0x519c>
    7378:	b	75a4 <el_line@plt+0x50f0>
    737c:	ldr	ip, [pc, #-2188]	; 6af8 <el_line@plt+0x4644>
    7380:	mov	r2, #1
    7384:	ldr	r0, [pc, #-2192]	; 6afc <el_line@plt+0x4648>
    7388:	add	lr, sp, #4416	; 0x1140
    738c:	ldr	r1, [pc, #-2196]	; 6b00 <el_line@plt+0x464c>
    7390:	movw	r3, #61304	; 0xef78
    7394:	ldr	ip, [r6, ip]
    7398:	movt	r3, #65535	; 0xffff
    739c:	add	lr, lr, #40	; 0x28
    73a0:	ldr	r7, [pc, #-2212]	; 6b04 <el_line@plt+0x4650>
    73a4:	str	r2, [ip]
    73a8:	add	r7, pc, r7
    73ac:	ldr	r0, [r6, r0]
    73b0:	ldr	sl, [lr, r3]
    73b4:	mov	r3, #0
    73b8:	str	r3, [sp, #104]	; 0x68
    73bc:	mov	r9, r3
    73c0:	str	r0, [sp, #56]	; 0x38
    73c4:	str	r2, [r0]
    73c8:	ldr	r2, [r6, r1]
    73cc:	str	r3, [r2]
    73d0:	b	73e0 <el_line@plt+0x4f2c>
    73d4:	cmp	r0, #108	; 0x6c
    73d8:	bne	7e34 <el_line@plt+0x5980>
    73dc:	mov	r9, #1
    73e0:	mov	r0, sl
    73e4:	mov	r1, r8
    73e8:	mov	r2, r7
    73ec:	bl	1531c <el_line@plt+0x12e68>
    73f0:	cmn	r0, #1
    73f4:	bne	73d4 <el_line@plt+0x4f20>
    73f8:	ldr	ip, [sp, #56]	; 0x38
    73fc:	str	r9, [sp, #104]	; 0x68
    7400:	ldr	r9, [ip]
    7404:	cmn	r9, #1
    7408:	beq	8a00 <el_line@plt+0x654c>
    740c:	mov	r7, #0
    7410:	b	6e28 <el_line@plt+0x4974>
    7414:	mov	r7, #8
    7418:	add	r9, sp, #4416	; 0x1140
    741c:	movw	sl, #61304	; 0xef78
    7420:	add	r9, r9, #40	; 0x28
    7424:	movt	sl, #65535	; 0xffff
    7428:	mov	r0, fp
    742c:	mov	r1, r8
    7430:	ldr	r2, [r9, sl]
    7434:	bl	59b8 <el_line@plt+0x3504>
    7438:	cmn	r0, #1
    743c:	mov	r9, r0
    7440:	beq	8598 <el_line@plt+0x60e4>
    7444:	add	ip, sp, #4416	; 0x1140
    7448:	mov	r1, r9
    744c:	add	ip, ip, #40	; 0x28
    7450:	ldr	r0, [ip, sl]
    7454:	bl	19350 <el_line@plt+0x16e9c>
    7458:	cmp	r0, #0
    745c:	ble	8550 <el_line@plt+0x609c>
    7460:	bl	23ac <__errno_location@plt>
    7464:	ldr	ip, [sp, #40]	; 0x28
    7468:	mov	r2, r7
    746c:	lsl	r7, r9, #2
    7470:	sub	r1, ip, #56	; 0x38
    7474:	mov	r3, r0
    7478:	mov	r0, #0
    747c:	str	r0, [r3]
    7480:	ldr	r0, [r8, r9, lsl #2]
    7484:	str	r3, [sp, #36]	; 0x24
    7488:	bl	1f14 <strtol@plt>
    748c:	add	lr, sp, #4416	; 0x1140
    7490:	movw	r2, #61256	; 0xef48
    7494:	add	lr, lr, #40	; 0x28
    7498:	movt	r2, #65535	; 0xffff
    749c:	ldr	r1, [r8, r9, lsl #2]
    74a0:	ldr	r2, [lr, r2]
    74a4:	ldr	r3, [sp, #36]	; 0x24
    74a8:	cmp	r1, r2
    74ac:	beq	8550 <el_line@plt+0x609c>
    74b0:	ldrb	r2, [r2]
    74b4:	cmp	r2, #0
    74b8:	bne	8550 <el_line@plt+0x609c>
    74bc:	sub	r2, r0, #-2147483647	; 0x80000001
    74c0:	mov	sl, r0
    74c4:	cmn	r2, #3
    74c8:	bls	74d8 <el_line@plt+0x5024>
    74cc:	ldr	r3, [r3]
    74d0:	cmp	r3, #34	; 0x22
    74d4:	beq	8550 <el_line@plt+0x609c>
    74d8:	cmp	r0, #0
    74dc:	blt	8550 <el_line@plt+0x609c>
    74e0:	ldr	r3, [sp, #96]	; 0x60
    74e4:	cmp	r3, #14
    74e8:	beq	7e08 <el_line@plt+0x5954>
    74ec:	mov	r1, r9
    74f0:	add	r9, sp, #4416	; 0x1140
    74f4:	movw	r3, #61304	; 0xef78
    74f8:	add	r9, r9, #40	; 0x28
    74fc:	movt	r3, #65535	; 0xffff
    7500:	ldr	r0, [r9, r3]
    7504:	bl	19350 <el_line@plt+0x16e9c>
    7508:	cmp	r0, #1
    750c:	ble	8980 <el_line@plt+0x64cc>
    7510:	add	r8, r8, r7
    7514:	mov	r7, #0
    7518:	str	r7, [sp, #100]	; 0x64
    751c:	mov	r9, r7
    7520:	ldr	r0, [r8, #4]
    7524:	str	r7, [sp, #88]	; 0x58
    7528:	str	r7, [sp, #104]	; 0x68
    752c:	bl	1163c <el_line@plt+0xf188>
    7530:	str	r7, [sp, #40]	; 0x28
    7534:	mov	ip, r7
    7538:	str	r7, [sp, #84]	; 0x54
    753c:	str	r7, [sp, #80]	; 0x50
    7540:	str	r0, [sp, #56]	; 0x38
    7544:	b	60e8 <el_line@plt+0x3c34>
    7548:	mov	r7, #0
    754c:	b	7418 <el_line@plt+0x4f64>
    7550:	orr	r9, r9, #64	; 0x40
    7554:	b	7244 <el_line@plt+0x4d90>
    7558:	bic	r9, r9, #2
    755c:	orr	r9, r9, #5
    7560:	b	7244 <el_line@plt+0x4d90>
    7564:	bic	r9, r9, #2
    7568:	orr	r9, r9, #1
    756c:	b	7244 <el_line@plt+0x4d90>
    7570:	orr	r9, r9, #256	; 0x100
    7574:	b	7244 <el_line@plt+0x4d90>
    7578:	bic	r9, r9, #56	; 0x38
    757c:	b	7244 <el_line@plt+0x4d90>
    7580:	orr	r9, r9, #128	; 0x80
    7584:	b	7244 <el_line@plt+0x4d90>
    7588:	bic	r9, r9, #56	; 0x38
    758c:	orr	r9, r9, #32
    7590:	b	7244 <el_line@plt+0x4d90>
    7594:	bic	r9, r9, #260	; 0x104
    7598:	bic	r9, r9, #3
    759c:	orr	r9, r9, #2
    75a0:	b	7244 <el_line@plt+0x4d90>
    75a4:	bic	r9, r9, #56	; 0x38
    75a8:	orr	r9, r9, #16
    75ac:	b	7244 <el_line@plt+0x4d90>
    75b0:	ldr	r0, [pc, #-2736]	; 6b08 <el_line@plt+0x4654>
    75b4:	add	r5, sp, #176	; 0xb0
    75b8:	mov	r6, #0
    75bc:	ldr	r1, [sp, #56]	; 0x38
    75c0:	add	r0, pc, r0
    75c4:	str	r6, [sp, #176]	; 0xb0
    75c8:	str	r6, [sp, #180]	; 0xb4
    75cc:	str	r6, [sp, #184]	; 0xb8
    75d0:	str	r6, [sp, #188]	; 0xbc
    75d4:	str	r6, [sp, #192]	; 0xc0
    75d8:	str	r6, [sp, #196]	; 0xc4
    75dc:	str	r6, [sp, #200]	; 0xc8
    75e0:	str	r6, [sp, #204]	; 0xcc
    75e4:	str	r6, [sp, #208]	; 0xd0
    75e8:	str	r6, [sp, #212]	; 0xd4
    75ec:	str	r6, [sp, #216]	; 0xd8
    75f0:	str	r6, [sp, #220]	; 0xdc
    75f4:	bl	1148c <el_line@plt+0xefd8>
    75f8:	ldr	r0, [sp, #56]	; 0x38
    75fc:	mov	r3, r5
    7600:	mov	r2, r6
    7604:	mov	r1, #24
    7608:	bl	171fc <el_line@plt+0x14d48>
    760c:	cmp	r0, #0
    7610:	bne	88d4 <el_line@plt+0x6420>
    7614:	mov	fp, #1
    7618:	str	r0, [sp, #60]	; 0x3c
    761c:	str	fp, [sp, #92]	; 0x5c
    7620:	b	5db0 <el_line@plt+0x38fc>
    7624:	ldr	r3, [pc, #-2844]	; 6b10 <el_line@plt+0x465c>
    7628:	mov	sl, #0
    762c:	ldr	r0, [pc, #-2856]	; 6b0c <el_line@plt+0x4658>
    7630:	mov	r1, fp
    7634:	str	sl, [sp, #104]	; 0x68
    7638:	mov	r7, sl
    763c:	ldr	r3, [r6, r3]
    7640:	add	r0, pc, r0
    7644:	str	sl, [sp, #40]	; 0x28
    7648:	mov	ip, sl
    764c:	b	6f4c <el_line@plt+0x4a98>
    7650:	ldr	r3, [pc, #-2888]	; 6b10 <el_line@plt+0x465c>
    7654:	mov	sl, #0
    7658:	str	r9, [sp, #104]	; 0x68
    765c:	mvn	fp, #0
    7660:	str	sl, [sp, #100]	; 0x64
    7664:	mov	r7, sl
    7668:	str	sl, [sp, #88]	; 0x58
    766c:	mov	r9, sl
    7670:	ldr	r3, [r6, r3]
    7674:	ldr	r0, [pc, #-2920]	; 6b14 <el_line@plt+0x4660>
    7678:	str	sl, [sp, #40]	; 0x28
    767c:	ldr	r1, [r3]
    7680:	add	r0, pc, r0
    7684:	str	sl, [sp, #84]	; 0x54
    7688:	str	sl, [sp, #80]	; 0x50
    768c:	str	sl, [sp, #56]	; 0x38
    7690:	str	sl, [sp, #36]	; 0x24
    7694:	bl	11238 <el_line@plt+0xed84>
    7698:	str	fp, [sp, #64]	; 0x40
    769c:	ldr	ip, [sp, #36]	; 0x24
    76a0:	b	5b04 <el_line@plt+0x3650>
    76a4:	ldr	fp, [sp, #88]	; 0x58
    76a8:	cmp	fp, #0
    76ac:	movne	r3, #1
    76b0:	bne	76c4 <el_line@plt+0x5210>
    76b4:	ldr	ip, [sp, #104]	; 0x68
    76b8:	ldr	r3, [ip, #540]	; 0x21c
    76bc:	adds	r3, r3, #0
    76c0:	movne	r3, #1
    76c4:	ldr	fp, [sp, #84]	; 0x54
    76c8:	cmp	fp, #0
    76cc:	movne	r2, #1
    76d0:	bne	76e4 <el_line@plt+0x5230>
    76d4:	ldr	ip, [sp, #96]	; 0x60
    76d8:	ldr	r2, [ip, #544]	; 0x220
    76dc:	adds	r2, r2, #0
    76e0:	movne	r2, #1
    76e4:	str	r2, [sp, #4]
    76e8:	mov	r1, r7
    76ec:	str	r9, [sp]
    76f0:	mov	r2, r4
    76f4:	ldr	r0, [sp, #72]	; 0x48
    76f8:	bl	c858 <el_line@plt+0xa3a4>
    76fc:	cmn	r0, #1
    7700:	mvneq	r8, #0
    7704:	b	5f20 <el_line@plt+0x3a6c>
    7708:	ldr	r7, [r3, r7]
    770c:	mov	r8, r0
    7710:	bl	23ac <__errno_location@plt>
    7714:	ldr	r0, [r0]
    7718:	bl	1fa4 <strerror@plt>
    771c:	mov	r1, r7
    7720:	mov	r2, r0
    7724:	ldr	r0, [pc, #-3092]	; 6b18 <el_line@plt+0x4664>
    7728:	add	r0, pc, r0
    772c:	bl	11238 <el_line@plt+0xed84>
    7730:	b	5f20 <el_line@plt+0x3a6c>
    7734:	cmp	ip, #0
    7738:	beq	77c0 <el_line@plt+0x530c>
    773c:	ldr	ip, [sp, #92]	; 0x5c
    7740:	ldr	r0, [sp, #60]	; 0x3c
    7744:	cmp	ip, #0
    7748:	bne	5f9c <el_line@plt+0x3ae8>
    774c:	bl	1163c <el_line@plt+0xf188>
    7750:	mov	r4, r0
    7754:	b	5fa4 <el_line@plt+0x3af0>
    7758:	ldr	r3, [r5, #16]
    775c:	mov	r2, r4
    7760:	ldr	r0, [pc, #-3148]	; 6b1c <el_line@plt+0x4668>
    7764:	ldr	r1, [r3, r7]
    7768:	add	r0, pc, r0
    776c:	bl	14498 <el_line@plt+0x11fe4>
    7770:	b	5e84 <el_line@plt+0x39d0>
    7774:	ldr	r6, [sp, #48]	; 0x30
    7778:	mov	ip, r4
    777c:	ldr	r4, [sp, #120]	; 0x78
    7780:	cmp	r8, #0
    7784:	cmpne	r6, #0
    7788:	moveq	r8, #0
    778c:	movne	r8, #1
    7790:	mov	r0, ip
    7794:	bl	1f20 <free@plt>
    7798:	ldr	r0, [sp, #60]	; 0x3c
    779c:	bl	1f20 <free@plt>
    77a0:	mov	r0, r5
    77a4:	bl	17408 <el_line@plt+0x14f54>
    77a8:	add	r9, sp, #4416	; 0x1140
    77ac:	movw	r3, #61208	; 0xef18
    77b0:	add	r9, r9, #40	; 0x28
    77b4:	movt	r3, #65535	; 0xffff
    77b8:	ldr	r3, [r9, r3]
    77bc:	b	6258 <el_line@plt+0x3da4>
    77c0:	mov	r0, r1
    77c4:	bl	1163c <el_line@plt+0xf188>
    77c8:	subs	r4, r0, #0
    77cc:	beq	5fa4 <el_line@plt+0x3af0>
    77d0:	ldrb	r3, [r4]
    77d4:	cmp	r3, #47	; 0x2f
    77d8:	beq	5fa4 <el_line@plt+0x3af0>
    77dc:	ldr	r1, [sp, #124]	; 0x7c
    77e0:	bl	4eb4 <el_line@plt+0x2a00>
    77e4:	mov	r4, r0
    77e8:	b	5fa4 <el_line@plt+0x3af0>
    77ec:	mvn	r0, #0
    77f0:	b	6124 <el_line@plt+0x3c70>
    77f4:	ldr	r0, [pc, #-3292]	; 6b20 <el_line@plt+0x466c>
    77f8:	ldr	r1, [sp, #64]	; 0x40
    77fc:	add	r0, pc, r0
    7800:	bl	10980 <el_line@plt+0xe4cc>
    7804:	ldr	r3, [fp, #4]
    7808:	cmp	r3, #1
    780c:	ble	782c <el_line@plt+0x5378>
    7810:	ldr	r6, [sp, #80]	; 0x50
    7814:	cmp	r6, #0
    7818:	beq	782c <el_line@plt+0x5378>
    781c:	ldr	r0, [sp, #80]	; 0x50
    7820:	bl	4834 <el_line@plt+0x2380>
    7824:	cmp	r0, #0
    7828:	beq	8928 <el_line@plt+0x6474>
    782c:	ldr	r3, [fp, #16]
    7830:	ldr	r0, [r3]
    7834:	cmp	r0, #0
    7838:	moveq	r8, r0
    783c:	beq	609c <el_line@plt+0x3be8>
    7840:	ldr	r3, [pc, #-3364]	; 6b24 <el_line@plt+0x4670>
    7844:	ldr	r8, [pc, r3]
    7848:	cmp	r8, #0
    784c:	movne	r8, #0
    7850:	bne	609c <el_line@plt+0x3be8>
    7854:	ldr	ip, [pc, #-3380]	; 6b28 <el_line@plt+0x4674>
    7858:	mov	r7, r8
    785c:	ldr	sl, [pc, #-3384]	; 6b2c <el_line@plt+0x4678>
    7860:	add	ip, pc, ip
    7864:	str	r8, [sp, #40]	; 0x28
    7868:	str	ip, [sp, #104]	; 0x68
    786c:	add	sl, pc, sl
    7870:	ldr	r5, [pc, #-3400]	; 6b30 <el_line@plt+0x467c>
    7874:	ldr	r8, [pc, #-3400]	; 6b34 <el_line@plt+0x4680>
    7878:	ldr	r6, [pc, #-3400]	; 6b38 <el_line@plt+0x4684>
    787c:	add	r5, pc, r5
    7880:	ldr	ip, [pc, #-3404]	; 6b3c <el_line@plt+0x4688>
    7884:	add	r8, pc, r8
    7888:	add	r6, pc, r6
    788c:	str	r5, [sp, #112]	; 0x70
    7890:	str	r6, [sp, #92]	; 0x5c
    7894:	add	ip, pc, ip
    7898:	mov	r5, #4
    789c:	str	ip, [sp, #108]	; 0x6c
    78a0:	ldr	r6, [sp, #80]	; 0x50
    78a4:	str	r4, [sp, #116]	; 0x74
    78a8:	str	r8, [sp, #96]	; 0x60
    78ac:	b	79b0 <el_line@plt+0x54fc>
    78b0:	cmp	r9, #0
    78b4:	bne	7aac <el_line@plt+0x55f8>
    78b8:	ldr	r3, [fp, #16]
    78bc:	mov	r2, r4
    78c0:	ldr	r0, [sp, #104]	; 0x68
    78c4:	ldr	r1, [r3, r7]
    78c8:	bl	14498 <el_line@plt+0x11fe4>
    78cc:	ldr	r3, [fp, #16]
    78d0:	ldr	r7, [r3, r7]
    78d4:	mov	r0, r7
    78d8:	bl	3d7c <el_line@plt+0x18c8>
    78dc:	cmp	r0, #0
    78e0:	beq	7a10 <el_line@plt+0x555c>
    78e4:	ldr	ip, [sp, #100]	; 0x64
    78e8:	cmp	ip, #0
    78ec:	bne	7904 <el_line@plt+0x5450>
    78f0:	ldr	r3, [pc, #-3512]	; 6b40 <el_line@plt+0x468c>
    78f4:	add	r3, pc, r3
    78f8:	ldr	r3, [r3, #536]	; 0x218
    78fc:	cmp	r3, #0
    7900:	beq	7a10 <el_line@plt+0x555c>
    7904:	ldr	ip, [sp, #88]	; 0x58
    7908:	cmp	ip, #0
    790c:	movne	r3, #1
    7910:	bne	7928 <el_line@plt+0x5474>
    7914:	ldr	r3, [pc, #-3544]	; 6b44 <el_line@plt+0x4690>
    7918:	add	r3, pc, r3
    791c:	ldr	r3, [r3, #540]	; 0x21c
    7920:	adds	r3, r3, #0
    7924:	movne	r3, #1
    7928:	ldr	ip, [sp, #84]	; 0x54
    792c:	cmp	ip, #0
    7930:	movne	r2, #1
    7934:	bne	7948 <el_line@plt+0x5494>
    7938:	ldr	ip, [sp, #108]	; 0x6c
    793c:	ldr	r2, [ip, #544]	; 0x220
    7940:	adds	r2, r2, #0
    7944:	movne	r2, #1
    7948:	str	r3, [sp]
    794c:	mov	r1, r7
    7950:	mov	r3, #1
    7954:	str	r2, [sp, #12]
    7958:	str	r3, [sp, #4]
    795c:	mov	r2, r4
    7960:	str	r9, [sp, #8]
    7964:	mov	r3, #0
    7968:	ldr	r0, [sp, #72]	; 0x48
    796c:	bl	d614 <el_line@plt+0xb160>
    7970:	cmn	r0, #1
    7974:	beq	7a78 <el_line@plt+0x55c4>
    7978:	mov	r0, r4
    797c:	bl	1f20 <free@plt>
    7980:	ldr	r3, [fp, #16]
    7984:	ldr	r0, [r3, r5]
    7988:	cmp	r0, #0
    798c:	beq	8188 <el_line@plt+0x5cd4>
    7990:	ldr	r3, [pc, #-3664]	; 6b48 <el_line@plt+0x4694>
    7994:	add	r2, r5, #4
    7998:	add	r3, pc, r3
    799c:	ldr	r3, [r3]
    79a0:	cmp	r3, #0
    79a4:	bne	81a8 <el_line@plt+0x5cf4>
    79a8:	mov	r7, r5
    79ac:	mov	r5, r2
    79b0:	bl	1163c <el_line@plt+0xf188>
    79b4:	mov	r8, r0
    79b8:	bl	23f4 <__xpg_basename@plt>
    79bc:	subs	r4, r0, #0
    79c0:	beq	8148 <el_line@plt+0x5c94>
    79c4:	ldr	r3, [fp, #4]
    79c8:	cmp	r3, #1
    79cc:	beq	7a84 <el_line@plt+0x55d0>
    79d0:	cmp	r6, #0
    79d4:	beq	7ac4 <el_line@plt+0x5610>
    79d8:	mov	r1, r4
    79dc:	mov	r0, r6
    79e0:	bl	d130 <el_line@plt+0xac7c>
    79e4:	mov	r4, r0
    79e8:	mov	r0, r8
    79ec:	bl	1f20 <free@plt>
    79f0:	ldr	r3, [sl, #532]	; 0x214
    79f4:	ldr	r2, [sl, #528]	; 0x210
    79f8:	cmp	r3, #0
    79fc:	orr	r9, r9, r2
    7a00:	beq	78b0 <el_line@plt+0x53fc>
    7a04:	orrs	r3, r9, r3
    7a08:	bne	78cc <el_line@plt+0x5418>
    7a0c:	b	78b8 <el_line@plt+0x5404>
    7a10:	ldr	ip, [sp, #88]	; 0x58
    7a14:	cmp	ip, #0
    7a18:	movne	r2, #1
    7a1c:	bne	7a30 <el_line@plt+0x557c>
    7a20:	ldr	ip, [sp, #92]	; 0x5c
    7a24:	ldr	r2, [ip, #540]	; 0x21c
    7a28:	adds	r2, r2, #0
    7a2c:	movne	r2, #1
    7a30:	ldr	ip, [sp, #84]	; 0x54
    7a34:	cmp	ip, #0
    7a38:	movne	r3, #1
    7a3c:	bne	7a50 <el_line@plt+0x559c>
    7a40:	ldr	ip, [sp, #96]	; 0x60
    7a44:	ldr	r3, [ip, #544]	; 0x220
    7a48:	adds	r3, r3, #0
    7a4c:	movne	r3, #1
    7a50:	str	r2, [sp]
    7a54:	mov	r1, r7
    7a58:	str	r3, [sp, #8]
    7a5c:	mov	r2, r4
    7a60:	str	r9, [sp, #4]
    7a64:	mov	r3, #0
    7a68:	ldr	r0, [sp, #72]	; 0x48
    7a6c:	bl	bbd4 <el_line@plt+0x9720>
    7a70:	cmn	r0, #1
    7a74:	bne	7978 <el_line@plt+0x54c4>
    7a78:	mvn	r7, #0
    7a7c:	str	r7, [sp, #40]	; 0x28
    7a80:	b	7978 <el_line@plt+0x54c4>
    7a84:	cmp	r6, #0
    7a88:	beq	7ac4 <el_line@plt+0x5610>
    7a8c:	mov	r0, r6
    7a90:	bl	4834 <el_line@plt+0x2380>
    7a94:	cmp	r0, #0
    7a98:	bne	79d8 <el_line@plt+0x5524>
    7a9c:	mov	r0, r6
    7aa0:	bl	1163c <el_line@plt+0xf188>
    7aa4:	mov	r4, r0
    7aa8:	b	79e8 <el_line@plt+0x5534>
    7aac:	ldr	r3, [fp, #16]
    7ab0:	mov	r2, r4
    7ab4:	ldr	r0, [sp, #112]	; 0x70
    7ab8:	ldr	r1, [r3, r7]
    7abc:	bl	14498 <el_line@plt+0x11fe4>
    7ac0:	b	78cc <el_line@plt+0x5418>
    7ac4:	mov	r0, r4
    7ac8:	bl	1163c <el_line@plt+0xf188>
    7acc:	mov	r4, r0
    7ad0:	b	79e8 <el_line@plt+0x5534>
    7ad4:	ldr	r3, [pc, #-3984]	; 6b4c <el_line@plt+0x4698>
    7ad8:	ldr	r3, [r6, r3]
    7adc:	b	6838 <el_line@plt+0x4384>
    7ae0:	ldr	r2, [r7, #16]
    7ae4:	movw	r4, #61208	; 0xef18
    7ae8:	ldr	r0, [sp, #84]	; 0x54
    7aec:	movt	r4, #65535	; 0xffff
    7af0:	ldr	r1, [r2, r6]
    7af4:	bl	11238 <el_line@plt+0xed84>
    7af8:	cmp	r8, #0
    7afc:	beq	6cec <el_line@plt+0x4838>
    7b00:	add	r6, sp, #4416	; 0x1140
    7b04:	mov	fp, r4
    7b08:	add	r6, r6, #40	; 0x28
    7b0c:	ldr	r4, [sp, #72]	; 0x48
    7b10:	ldr	r3, [r6, fp]
    7b14:	b	6258 <el_line@plt+0x3da4>
    7b18:	ldr	r0, [pc, #-4048]	; 6b50 <el_line@plt+0x469c>
    7b1c:	add	r0, pc, r0
    7b20:	bl	10980 <el_line@plt+0xe4cc>
    7b24:	mov	sl, #1
    7b28:	b	6ef0 <el_line@plt+0x4a3c>
    7b2c:	mov	ip, #1
    7b30:	str	ip, [sp, #40]	; 0x28
    7b34:	b	6ef0 <el_line@plt+0x4a3c>
    7b38:	ldr	ip, [sp, #88]	; 0x58
    7b3c:	ldr	r3, [ip, #532]	; 0x214
    7b40:	cmp	r3, #0
    7b44:	beq	8400 <el_line@plt+0x5f4c>
    7b48:	str	sl, [r4, #16]
    7b4c:	b	6cb8 <el_line@plt+0x4804>
    7b50:	ldr	r7, [sp, #48]	; 0x30
    7b54:	mov	ip, r4
    7b58:	ldr	r4, [sp, #120]	; 0x78
    7b5c:	cmp	r8, #0
    7b60:	cmpne	r7, #0
    7b64:	moveq	r8, #0
    7b68:	movne	r8, #1
    7b6c:	b	7790 <el_line@plt+0x52dc>
    7b70:	cmp	r8, #0
    7b74:	beq	6cec <el_line@plt+0x4838>
    7b78:	add	r5, sp, #4416	; 0x1140
    7b7c:	movw	r3, #61208	; 0xef18
    7b80:	add	r5, r5, #40	; 0x28
    7b84:	movt	r3, #65535	; 0xffff
    7b88:	ldr	r4, [sp, #72]	; 0x48
    7b8c:	ldr	r3, [r5, r3]
    7b90:	b	6258 <el_line@plt+0x3da4>
    7b94:	ldr	r1, [sp, #124]	; 0x7c
    7b98:	add	r7, sp, #232	; 0xe8
    7b9c:	bl	4eb4 <el_line@plt+0x2a00>
    7ba0:	add	r5, sp, #176	; 0xb0
    7ba4:	mov	r6, #0
    7ba8:	ldr	r1, [sp, #56]	; 0x38
    7bac:	str	r6, [r7, #-56]	; 0xffffffc8
    7bb0:	str	r6, [r7, #-52]	; 0xffffffcc
    7bb4:	str	r6, [r7, #-48]	; 0xffffffd0
    7bb8:	str	r6, [r7, #-44]	; 0xffffffd4
    7bbc:	str	r6, [r7, #-40]	; 0xffffffd8
    7bc0:	str	r6, [r7, #-36]	; 0xffffffdc
    7bc4:	str	r6, [r7, #-32]	; 0xffffffe0
    7bc8:	str	r6, [r7, #-28]	; 0xffffffe4
    7bcc:	str	r6, [r7, #-24]	; 0xffffffe8
    7bd0:	str	r6, [r7, #-20]	; 0xffffffec
    7bd4:	str	r6, [r7, #-16]
    7bd8:	str	r6, [r7, #-12]
    7bdc:	str	r0, [sp, #60]	; 0x3c
    7be0:	ldr	r0, [pc, #3784]	; 8ab0 <el_line@plt+0x65fc>
    7be4:	add	r0, pc, r0
    7be8:	bl	1148c <el_line@plt+0xefd8>
    7bec:	ldr	r0, [sp, #56]	; 0x38
    7bf0:	mov	r2, r6
    7bf4:	mov	r3, r5
    7bf8:	mov	r1, #24
    7bfc:	bl	171fc <el_line@plt+0x14d48>
    7c00:	cmp	r0, r6
    7c04:	bne	88d8 <el_line@plt+0x6424>
    7c08:	ldr	sl, [sp, #60]	; 0x3c
    7c0c:	cmp	sl, #0
    7c10:	bne	5da0 <el_line@plt+0x38ec>
    7c14:	mov	fp, #1
    7c18:	str	fp, [sp, #92]	; 0x5c
    7c1c:	b	5db0 <el_line@plt+0x38fc>
    7c20:	ldr	r3, [r7, #16]
    7c24:	ldr	r0, [sp, #60]	; 0x3c
    7c28:	ldr	r1, [r3, r6]
    7c2c:	bl	14498 <el_line@plt+0x11fe4>
    7c30:	b	6cb4 <el_line@plt+0x4800>
    7c34:	cmp	ip, #0
    7c38:	bne	8290 <el_line@plt+0x5ddc>
    7c3c:	ldr	r1, [pc, #3696]	; 8ab4 <el_line@plt+0x6600>
    7c40:	mov	r0, #1
    7c44:	str	ip, [sp, #36]	; 0x24
    7c48:	add	r1, pc, r1
    7c4c:	bl	24a8 <__printf_chk@plt>
    7c50:	ldrd	r2, [fp, #16]
    7c54:	ldrd	r6, [fp, #24]
    7c58:	mov	r0, #100	; 0x64
    7c5c:	ldr	ip, [sp, #36]	; 0x24
    7c60:	ldr	r1, [r5, #4]
    7c64:	strd	r2, [sp, #48]	; 0x30
    7c68:	subs	r2, r2, r6
    7c6c:	sbc	r3, r3, r7
    7c70:	mov	r8, ip
    7c74:	ldr	ip, [r5]
    7c78:	ldr	lr, [fp, #32]
    7c7c:	umull	sl, fp, r2, r0
    7c80:	strd	r6, [sp, #40]	; 0x28
    7c84:	mul	r6, r2, r1
    7c88:	ldr	r5, [r5, #28]
    7c8c:	mla	r9, ip, r3, r6
    7c90:	umull	r6, r7, r2, ip
    7c94:	mla	fp, r0, r3, fp
    7c98:	add	r9, r9, r7
    7c9c:	mul	r5, ip, r5
    7ca0:	mov	r0, sl
    7ca4:	strd	r6, [sp, #72]	; 0x48
    7ca8:	ldr	r7, [sp, #40]	; 0x28
    7cac:	str	r9, [sp, #76]	; 0x4c
    7cb0:	ldr	r9, [sp, #48]	; 0x30
    7cb4:	mla	r5, r1, lr, r5
    7cb8:	ldr	sl, [sp, #44]	; 0x2c
    7cbc:	mul	r3, r7, r1
    7cc0:	umull	r6, r7, lr, ip
    7cc4:	mul	r2, r9, r1
    7cc8:	mov	r1, fp
    7ccc:	ldr	fp, [sp, #52]	; 0x34
    7cd0:	add	r7, r5, r7
    7cd4:	mla	r3, ip, sl, r3
    7cd8:	mla	r5, ip, fp, r2
    7cdc:	ldr	fp, [sp, #40]	; 0x28
    7ce0:	ldr	r2, [sp, #72]	; 0x48
    7ce4:	umull	sl, fp, fp, ip
    7ce8:	lsr	lr, r2, #10
    7cec:	ldr	r2, [sp, #76]	; 0x4c
    7cf0:	orr	lr, lr, r2, lsl #22
    7cf4:	str	lr, [sp]
    7cf8:	strd	sl, [sp, #40]	; 0x28
    7cfc:	lsr	lr, r6, #10
    7d00:	umull	sl, fp, r9, ip
    7d04:	ldr	ip, [sp, #44]	; 0x2c
    7d08:	orr	lr, lr, r7, lsl #22
    7d0c:	ldr	r9, [sp, #76]	; 0x4c
    7d10:	add	fp, r5, fp
    7d14:	add	r3, r3, ip
    7d18:	ldr	r5, [sp, #40]	; 0x28
    7d1c:	str	r3, [sp, #44]	; 0x2c
    7d20:	lsr	r6, r9, #10
    7d24:	str	lr, [sp, #8]
    7d28:	ldr	lr, [sp, #44]	; 0x2c
    7d2c:	lsr	ip, r5, #10
    7d30:	ldrd	r2, [sp, #48]	; 0x30
    7d34:	lsr	r5, sl, #10
    7d38:	str	r6, [sp, #4]
    7d3c:	lsr	r6, r7, #10
    7d40:	orr	ip, ip, lr, lsl #22
    7d44:	str	r6, [sp, #12]
    7d48:	lsr	lr, lr, #10
    7d4c:	str	ip, [sp, #16]
    7d50:	str	lr, [sp, #20]
    7d54:	bl	19270 <el_line@plt+0x16dbc>
    7d58:	ldr	ip, [pc, #3416]	; 8ab8 <el_line@plt+0x6604>
    7d5c:	orr	r5, r5, fp, lsl #22
    7d60:	lsr	r6, fp, #10
    7d64:	add	ip, pc, ip
    7d68:	mov	r2, r5
    7d6c:	mov	r3, r6
    7d70:	strd	r0, [sp, #24]
    7d74:	mov	r1, ip
    7d78:	mov	r0, #1
    7d7c:	bl	24a8 <__printf_chk@plt>
    7d80:	b	6244 <el_line@plt+0x3d90>
    7d84:	ldr	r0, [pc, #3376]	; 8abc <el_line@plt+0x6608>
    7d88:	add	r0, pc, r0
    7d8c:	bl	1fc8 <puts@plt>
    7d90:	add	r0, sp, #4416	; 0x1140
    7d94:	movw	r3, #61208	; 0xef18
    7d98:	add	r0, r0, #40	; 0x28
    7d9c:	movt	r3, #65535	; 0xffff
    7da0:	ldr	r3, [r0, r3]
    7da4:	b	6258 <el_line@plt+0x3da4>
    7da8:	mov	ip, r4
    7dac:	str	ip, [sp, #36]	; 0x24
    7db0:	bl	23ac <__errno_location@plt>
    7db4:	ldr	r7, [sp, #48]	; 0x30
    7db8:	ldr	r4, [sp, #120]	; 0x78
    7dbc:	adds	r8, r7, #0
    7dc0:	movne	r8, #1
    7dc4:	ldr	r0, [r0]
    7dc8:	bl	1fa4 <strerror@plt>
    7dcc:	mov	r1, fp
    7dd0:	mov	r2, r0
    7dd4:	ldr	r0, [pc, #3300]	; 8ac0 <el_line@plt+0x660c>
    7dd8:	add	r0, pc, r0
    7ddc:	bl	11238 <el_line@plt+0xed84>
    7de0:	mov	r0, fp
    7de4:	bl	1f20 <free@plt>
    7de8:	ldr	ip, [sp, #36]	; 0x24
    7dec:	b	7790 <el_line@plt+0x52dc>
    7df0:	add	r9, sp, #4416	; 0x1140
    7df4:	add	r9, r9, #40	; 0x28
    7df8:	ldr	r3, [r9, r3]
    7dfc:	cmp	r3, #0
    7e00:	beq	671c <el_line@plt+0x4268>
    7e04:	b	6714 <el_line@plt+0x4260>
    7e08:	mov	r7, #0
    7e0c:	str	r7, [sp, #100]	; 0x64
    7e10:	str	r7, [sp, #88]	; 0x58
    7e14:	mov	ip, r7
    7e18:	str	r7, [sp, #104]	; 0x68
    7e1c:	mov	r9, r7
    7e20:	str	r7, [sp, #40]	; 0x28
    7e24:	str	r7, [sp, #84]	; 0x54
    7e28:	str	r7, [sp, #80]	; 0x50
    7e2c:	str	r7, [sp, #56]	; 0x38
    7e30:	b	60e8 <el_line@plt+0x3c34>
    7e34:	ldr	r0, [pc, #3208]	; 8ac4 <el_line@plt+0x6610>
    7e38:	mov	sl, #0
    7e3c:	ldr	r3, [pc, #3204]	; 8ac8 <el_line@plt+0x6614>
    7e40:	mov	r1, fp
    7e44:	add	r0, pc, r0
    7e48:	mov	r7, sl
    7e4c:	str	r9, [sp, #104]	; 0x68
    7e50:	str	sl, [sp, #100]	; 0x64
    7e54:	ldr	r3, [r6, r3]
    7e58:	str	sl, [sp, #88]	; 0x58
    7e5c:	str	sl, [sp, #40]	; 0x28
    7e60:	mov	ip, sl
    7e64:	str	sl, [sp, #84]	; 0x54
    7e68:	mov	r9, sl
    7e6c:	ldr	r2, [r3]
    7e70:	str	sl, [sp, #80]	; 0x50
    7e74:	b	6f54 <el_line@plt+0x4aa0>
    7e78:	ldr	r3, [pc, #3144]	; 8ac8 <el_line@plt+0x6614>
    7e7c:	mov	sl, #0
    7e80:	ldr	r0, [pc, #3140]	; 8acc <el_line@plt+0x6618>
    7e84:	mov	r1, fp
    7e88:	str	sl, [sp, #100]	; 0x64
    7e8c:	str	sl, [sp, #88]	; 0x58
    7e90:	add	r0, pc, r0
    7e94:	ldr	r3, [r6, r3]
    7e98:	str	sl, [sp, #104]	; 0x68
    7e9c:	b	7e5c <el_line@plt+0x59a8>
    7ea0:	mov	r0, r5
    7ea4:	mov	r8, #0
    7ea8:	bl	2310 <strlen@plt>
    7eac:	add	r7, r0, #4
    7eb0:	mov	r0, r7
    7eb4:	bl	1155c <el_line@plt+0xf0a8>
    7eb8:	ldr	ip, [pc, #3088]	; 8ad0 <el_line@plt+0x661c>
    7ebc:	mov	r1, r7
    7ec0:	mov	r2, #1
    7ec4:	add	ip, pc, ip
    7ec8:	mvn	r3, #0
    7ecc:	str	ip, [sp]
    7ed0:	str	r5, [sp, #4]
    7ed4:	mov	r6, r0
    7ed8:	bl	231c <__snprintf_chk@plt>
    7edc:	mov	r0, r6
    7ee0:	bl	4960 <el_line@plt+0x24ac>
    7ee4:	mov	r0, r6
    7ee8:	bl	1f20 <free@plt>
    7eec:	b	77a8 <el_line@plt+0x52f4>
    7ef0:	ldr	r3, [pc, #3036]	; 8ad4 <el_line@plt+0x6620>
    7ef4:	add	r3, pc, r3
    7ef8:	ldr	r3, [r3]
    7efc:	cmp	r3, #0
    7f00:	bne	80c8 <el_line@plt+0x5c14>
    7f04:	ldr	r3, [fp, #4]
    7f08:	cmp	r3, #1
    7f0c:	bne	7f30 <el_line@plt+0x5a7c>
    7f10:	ldr	r3, [fp, #20]
    7f14:	ldr	r3, [r3]
    7f18:	cmp	r3, #0
    7f1c:	beq	7f30 <el_line@plt+0x5a7c>
    7f20:	ldr	r3, [r3, #16]
    7f24:	and	r3, r3, #61440	; 0xf000
    7f28:	cmp	r3, #16384	; 0x4000
    7f2c:	beq	8a74 <el_line@plt+0x65c0>
    7f30:	ldr	r3, [pc, #2976]	; 8ad8 <el_line@plt+0x6624>
    7f34:	ldr	r7, [sp, #40]	; 0x28
    7f38:	ldr	r3, [r6, r3]
    7f3c:	sub	r5, r7, #56	; 0x38
    7f40:	ldr	r0, [r3]
    7f44:	bl	21cc <fileno@plt>
    7f48:	mov	r2, r5
    7f4c:	movw	r1, #21523	; 0x5413
    7f50:	bl	2148 <ioctl@plt>
    7f54:	ldr	r9, [sp, #104]	; 0x68
    7f58:	cmn	r0, #1
    7f5c:	ldrhne	r5, [r7, #-54]	; 0xffffffca
    7f60:	moveq	r5, #80	; 0x50
    7f64:	ands	r6, r9, #2
    7f68:	beq	871c <el_line@plt+0x6268>
    7f6c:	ldr	r3, [fp, #16]
    7f70:	mov	ip, #1
    7f74:	mov	r5, #0
    7f78:	str	ip, [sp, #72]	; 0x48
    7f7c:	str	r5, [sp, #40]	; 0x28
    7f80:	ldr	r9, [r3]
    7f84:	cmp	r9, #0
    7f88:	beq	8968 <el_line@plt+0x64b4>
    7f8c:	ldr	r2, [pc, #2888]	; 8adc <el_line@plt+0x6628>
    7f90:	ldr	r6, [pc, r2]
    7f94:	cmp	r6, #0
    7f98:	bne	8968 <el_line@plt+0x64b4>
    7f9c:	ldr	ip, [sp, #104]	; 0x68
    7fa0:	mov	r0, r9
    7fa4:	ldr	r7, [pc, #2868]	; 8ae0 <el_line@plt+0x662c>
    7fa8:	ldr	r5, [pc, #2868]	; 8ae4 <el_line@plt+0x6630>
    7fac:	add	r7, pc, r7
    7fb0:	str	r7, [sp, #84]	; 0x54
    7fb4:	and	r7, ip, #1
    7fb8:	ldr	ip, [pc, #2856]	; 8ae8 <el_line@plt+0x6634>
    7fbc:	ldr	r8, [pc, #2856]	; 8aec <el_line@plt+0x6638>
    7fc0:	add	r5, pc, r5
    7fc4:	add	ip, pc, ip
    7fc8:	str	ip, [sp, #88]	; 0x58
    7fcc:	mov	ip, #1
    7fd0:	str	r5, [sp, #48]	; 0x30
    7fd4:	str	r4, [sp, #60]	; 0x3c
    7fd8:	mov	r5, #4
    7fdc:	add	r8, pc, r8
    7fe0:	mov	r4, ip
    7fe4:	b	8050 <el_line@plt+0x5b9c>
    7fe8:	ldr	r3, [fp, #20]
    7fec:	ldr	r1, [r3, r6]
    7ff0:	cmp	r1, #0
    7ff4:	beq	8414 <el_line@plt+0x5f60>
    7ff8:	ldr	r6, [sp, #104]	; 0x68
    7ffc:	mov	r2, #1
    8000:	and	r3, r6, #256	; 0x100
    8004:	bl	dffc <el_line@plt+0xbb48>
    8008:	mov	r6, r0
    800c:	ldr	r0, [sp, #48]	; 0x30
    8010:	mov	r1, r6
    8014:	bl	14498 <el_line@plt+0x11fe4>
    8018:	mov	r0, r6
    801c:	bl	1f20 <free@plt>
    8020:	mov	r0, r9
    8024:	bl	1f20 <free@plt>
    8028:	ldr	r3, [fp, #16]
    802c:	ldr	r0, [r3, r5]
    8030:	cmp	r0, #0
    8034:	beq	8094 <el_line@plt+0x5be0>
    8038:	ldr	r3, [r8]
    803c:	add	r2, r5, #4
    8040:	cmp	r3, #0
    8044:	bne	8094 <el_line@plt+0x5be0>
    8048:	mov	r6, r5
    804c:	mov	r5, r2
    8050:	mov	r1, sl
    8054:	bl	4360 <el_line@plt+0x1eac>
    8058:	cmp	r7, #0
    805c:	mov	r9, r0
    8060:	bne	7fe8 <el_line@plt+0x5b34>
    8064:	ldr	r0, [sp, #84]	; 0x54
    8068:	mov	r2, r9
    806c:	ldr	r1, [sp, #40]	; 0x28
    8070:	bl	14498 <el_line@plt+0x11fe4>
    8074:	ldr	ip, [sp, #72]	; 0x48
    8078:	cmp	ip, r4
    807c:	addhi	r4, r4, #1
    8080:	bhi	8020 <el_line@plt+0x5b6c>
    8084:	mov	r0, #10
    8088:	mov	r4, #1
    808c:	bl	2058 <putchar@plt>
    8090:	b	8020 <el_line@plt+0x5b6c>
    8094:	cmp	r7, #0
    8098:	mov	ip, r4
    809c:	ldr	r4, [sp, #60]	; 0x3c
    80a0:	bne	8660 <el_line@plt+0x61ac>
    80a4:	cmp	ip, #1
    80a8:	beq	8660 <el_line@plt+0x61ac>
    80ac:	mov	r0, #10
    80b0:	bl	2058 <putchar@plt>
    80b4:	add	r0, sp, #4416	; 0x1140
    80b8:	movw	r3, #61304	; 0xef78
    80bc:	add	r0, r0, #40	; 0x28
    80c0:	movt	r3, #65535	; 0xffff
    80c4:	ldr	r8, [r0, r3]
    80c8:	cmp	r8, #0
    80cc:	beq	6740 <el_line@plt+0x428c>
    80d0:	mov	r0, fp
    80d4:	mov	r8, #0
    80d8:	bl	17408 <el_line@plt+0x14f54>
    80dc:	b	6740 <el_line@plt+0x428c>
    80e0:	add	lr, sp, #4416	; 0x1140
    80e4:	mov	r9, r8
    80e8:	add	lr, lr, #40	; 0x28
    80ec:	mov	r8, r0
    80f0:	ldr	r4, [sp, #40]	; 0x28
    80f4:	ldr	r3, [lr, r9]
    80f8:	b	6258 <el_line@plt+0x3da4>
    80fc:	add	fp, sp, #4416	; 0x1140
    8100:	mov	r8, r0
    8104:	add	fp, fp, #40	; 0x28
    8108:	ldr	r4, [sp, #84]	; 0x54
    810c:	ldr	r3, [fp, sl]
    8110:	b	6258 <el_line@plt+0x3da4>
    8114:	mov	r9, r8
    8118:	mov	r8, r0
    811c:	add	r0, sp, #4416	; 0x1140
    8120:	ldr	r4, [sp, #40]	; 0x28
    8124:	add	r0, r0, #40	; 0x28
    8128:	ldr	r3, [r0, r9]
    812c:	b	6258 <el_line@plt+0x3da4>
    8130:	add	ip, sp, #4416	; 0x1140
    8134:	mov	r8, r0
    8138:	add	ip, ip, #40	; 0x28
    813c:	ldr	r4, [sp, #84]	; 0x54
    8140:	ldr	r3, [ip, sl]
    8144:	b	6258 <el_line@plt+0x3da4>
    8148:	bl	23ac <__errno_location@plt>
    814c:	ldr	r6, [sp, #48]	; 0x30
    8150:	mov	r5, r8
    8154:	ldr	r4, [sp, #116]	; 0x74
    8158:	adds	r8, r6, #0
    815c:	movne	r8, #1
    8160:	ldr	r0, [r0]
    8164:	bl	1fa4 <strerror@plt>
    8168:	mov	r1, r5
    816c:	mov	r2, r0
    8170:	ldr	r0, [pc, #2424]	; 8af0 <el_line@plt+0x663c>
    8174:	add	r0, pc, r0
    8178:	bl	11238 <el_line@plt+0xed84>
    817c:	mov	r0, r5
    8180:	bl	1f20 <free@plt>
    8184:	b	609c <el_line@plt+0x3be8>
    8188:	ldr	r5, [sp, #40]	; 0x28
    818c:	ldr	r6, [sp, #48]	; 0x30
    8190:	ldr	r4, [sp, #116]	; 0x74
    8194:	cmp	r5, #0
    8198:	cmpne	r6, #0
    819c:	moveq	r8, #0
    81a0:	movne	r8, #1
    81a4:	b	609c <el_line@plt+0x3be8>
    81a8:	ldr	r7, [sp, #40]	; 0x28
    81ac:	ldr	r9, [sp, #48]	; 0x30
    81b0:	ldr	r4, [sp, #116]	; 0x74
    81b4:	cmp	r7, #0
    81b8:	cmpne	r9, #0
    81bc:	moveq	r8, #0
    81c0:	movne	r8, #1
    81c4:	b	609c <el_line@plt+0x3be8>
    81c8:	add	r1, sp, #4416	; 0x1140
    81cc:	mov	r9, r8
    81d0:	add	r1, r1, #40	; 0x28
    81d4:	mov	r8, r0
    81d8:	ldr	r4, [sp, #40]	; 0x28
    81dc:	ldr	r3, [r1, r9]
    81e0:	b	6258 <el_line@plt+0x3da4>
    81e4:	add	r5, sp, #4416	; 0x1140
    81e8:	mov	r8, r0
    81ec:	add	r5, r5, #40	; 0x28
    81f0:	ldr	r4, [sp, #84]	; 0x54
    81f4:	ldr	r3, [r5, sl]
    81f8:	b	6258 <el_line@plt+0x3da4>
    81fc:	ldr	ip, [sp, #48]	; 0x30
    8200:	ldr	r0, [pc, #2284]	; 8af4 <el_line@plt+0x6640>
    8204:	subs	r8, ip, r5
    8208:	ldr	r1, [sp, #60]	; 0x3c
    820c:	add	r0, pc, r0
    8210:	movne	r8, #1
    8214:	bl	11238 <el_line@plt+0xed84>
    8218:	b	609c <el_line@plt+0x3be8>
    821c:	ldr	ip, [sp, #56]	; 0x38
    8220:	str	r9, [sp, #104]	; 0x68
    8224:	ldr	ip, [ip]
    8228:	cmn	ip, #1
    822c:	str	ip, [sp, #64]	; 0x40
    8230:	beq	8a6c <el_line@plt+0x65b8>
    8234:	add	lr, sp, #4416	; 0x1140
    8238:	movw	r3, #61304	; 0xef78
    823c:	add	lr, lr, #40	; 0x28
    8240:	movt	r3, #65535	; 0xffff
    8244:	mov	r1, ip
    8248:	ldr	r0, [lr, r3]
    824c:	bl	19350 <el_line@plt+0x16e9c>
    8250:	cmp	r0, #0
    8254:	ble	827c <el_line@plt+0x5dc8>
    8258:	ldr	r5, [sp, #64]	; 0x40
    825c:	mov	sl, #0
    8260:	mov	r7, sl
    8264:	ldr	r0, [r8, r5, lsl #2]
    8268:	bl	1163c <el_line@plt+0xf188>
    826c:	str	sl, [sp, #100]	; 0x64
    8270:	str	sl, [sp, #88]	; 0x58
    8274:	str	r0, [sp, #56]	; 0x38
    8278:	b	6ddc <el_line@plt+0x4928>
    827c:	mov	sl, #0
    8280:	str	sl, [sp, #100]	; 0x64
    8284:	mov	r7, sl
    8288:	str	sl, [sp, #88]	; 0x58
    828c:	b	71d0 <el_line@plt+0x4d1c>
    8290:	ldr	r6, [pc, #2144]	; 8af8 <el_line@plt+0x6644>
    8294:	add	sl, sp, #332	; 0x14c
    8298:	add	r9, sp, #360	; 0x168
    829c:	mov	r2, #7
    82a0:	add	r6, pc, r6
    82a4:	mov	r0, sl
    82a8:	add	r3, sp, #340	; 0x154
    82ac:	sub	r9, r9, #4
    82b0:	mov	r1, r6
    82b4:	str	r3, [sp, #48]	; 0x30
    82b8:	add	r7, sp, #348	; 0x15c
    82bc:	str	r7, [sp, #72]	; 0x48
    82c0:	bl	177d8 <el_line@plt+0x15324>
    82c4:	mov	r1, r6
    82c8:	add	r0, sp, #340	; 0x154
    82cc:	mov	r2, #7
    82d0:	ldr	r8, [sp, #40]	; 0x28
    82d4:	bl	177d8 <el_line@plt+0x15324>
    82d8:	mov	r1, r6
    82dc:	add	r0, sp, #348	; 0x15c
    82e0:	mov	r2, #7
    82e4:	bl	177d8 <el_line@plt+0x15324>
    82e8:	mov	r1, r6
    82ec:	mov	r0, r9
    82f0:	mov	r2, #7
    82f4:	bl	177d8 <el_line@plt+0x15324>
    82f8:	ldrd	r0, [fp, #24]
    82fc:	ldrd	r6, [fp, #16]
    8300:	mov	r2, sl
    8304:	ldr	r3, [r5, #4]
    8308:	subs	r6, r6, r0
    830c:	sbc	r7, r7, r1
    8310:	ldr	r0, [r5]
    8314:	mul	r3, r6, r3
    8318:	mla	r3, r0, r7, r3
    831c:	umull	r0, r1, r0, r6
    8320:	add	r1, r3, r1
    8324:	bl	14b3c <el_line@plt+0x12688>
    8328:	ldm	r5, {r0, r2}
    832c:	ldr	r3, [r5, #28]
    8330:	ldr	r1, [fp, #32]
    8334:	mul	r3, r0, r3
    8338:	mla	r3, r1, r2, r3
    833c:	add	r2, sp, #340	; 0x154
    8340:	umull	r0, r1, r0, r1
    8344:	add	r1, r3, r1
    8348:	bl	14b3c <el_line@plt+0x12688>
    834c:	ldm	r5, {r0, r2}
    8350:	ldr	r3, [r5, #20]
    8354:	ldr	r1, [fp, #24]
    8358:	mul	r3, r0, r3
    835c:	mla	r3, r1, r2, r3
    8360:	add	r2, sp, #348	; 0x15c
    8364:	umull	r0, r1, r0, r1
    8368:	add	r1, r3, r1
    836c:	bl	14b3c <el_line@plt+0x12688>
    8370:	ldr	r0, [r5]
    8374:	ldr	r1, [r5, #12]
    8378:	mov	r2, r9
    837c:	ldr	r3, [fp, #16]
    8380:	ldr	ip, [r5, #4]
    8384:	mul	r1, r0, r1
    8388:	mla	ip, r3, ip, r1
    838c:	umull	r0, r1, r0, r3
    8390:	add	r1, ip, r1
    8394:	bl	14b3c <el_line@plt+0x12688>
    8398:	ldr	r1, [pc, #1884]	; 8afc <el_line@plt+0x6648>
    839c:	mov	r0, #1
    83a0:	add	r1, pc, r1
    83a4:	bl	24a8 <__printf_chk@plt>
    83a8:	ldrd	r0, [fp, #16]
    83ac:	ldrd	r6, [fp, #24]
    83b0:	mov	ip, #100	; 0x64
    83b4:	add	lr, sp, #348	; 0x15c
    83b8:	add	fp, sp, #340	; 0x154
    83bc:	subs	r6, r0, r6
    83c0:	sbc	r7, r1, r7
    83c4:	mov	r2, r0
    83c8:	mov	r3, r1
    83cc:	str	fp, [sp]
    83d0:	umull	r0, r1, r6, ip
    83d4:	str	lr, [sp, #4]
    83d8:	mla	r1, ip, r7, r1
    83dc:	bl	19270 <el_line@plt+0x16dbc>
    83e0:	mov	r2, r9
    83e4:	mov	r3, sl
    83e8:	strd	r0, [sp, #8]
    83ec:	mov	r0, #1
    83f0:	ldr	r1, [pc, #1800]	; 8b00 <el_line@plt+0x664c>
    83f4:	add	r1, pc, r1
    83f8:	bl	24a8 <__printf_chk@plt>
    83fc:	b	6244 <el_line@plt+0x3d90>
    8400:	ldr	r3, [r7, #16]
    8404:	ldr	r0, [sp, #100]	; 0x64
    8408:	ldr	r1, [r3, r6]
    840c:	bl	14498 <el_line@plt+0x11fe4>
    8410:	b	7b48 <el_line@plt+0x5694>
    8414:	mov	r1, r0
    8418:	ldr	r0, [sp, #88]	; 0x58
    841c:	bl	11238 <el_line@plt+0xed84>
    8420:	b	8028 <el_line@plt+0x5b74>
    8424:	ldr	r6, [sp, #48]	; 0x30
    8428:	ldr	r0, [pc, #1748]	; 8b04 <el_line@plt+0x6650>
    842c:	adds	r8, r6, #0
    8430:	add	r0, pc, r0
    8434:	movne	r8, #1
    8438:	bl	11238 <el_line@plt+0xed84>
    843c:	mov	r0, r5
    8440:	bl	1f20 <free@plt>
    8444:	b	6244 <el_line@plt+0x3d90>
    8448:	ldr	r7, [sp, #56]	; 0x38
    844c:	mov	r3, r0
    8450:	ldr	r7, [r7]
    8454:	cmn	r7, #1
    8458:	str	r7, [sp, #64]	; 0x40
    845c:	beq	8a28 <el_line@plt+0x6574>
    8460:	add	sl, sp, #4416	; 0x1140
    8464:	movw	r7, #61304	; 0xef78
    8468:	add	sl, sl, #40	; 0x28
    846c:	movt	r7, #65535	; 0xffff
    8470:	ldr	r1, [sp, #64]	; 0x40
    8474:	ldr	r0, [sl, r7]
    8478:	str	r3, [sp, #36]	; 0x24
    847c:	bl	19350 <el_line@plt+0x16e9c>
    8480:	ldr	r3, [sp, #36]	; 0x24
    8484:	cmp	r0, #0
    8488:	ble	89cc <el_line@plt+0x6518>
    848c:	ldr	fp, [sp, #64]	; 0x40
    8490:	ldr	r0, [r8, fp, lsl #2]
    8494:	lsl	r5, fp, #2
    8498:	bl	1163c <el_line@plt+0xf188>
    849c:	add	ip, sp, #4416	; 0x1140
    84a0:	add	ip, ip, #40	; 0x28
    84a4:	ldr	r1, [sp, #64]	; 0x40
    84a8:	str	r0, [sp, #56]	; 0x38
    84ac:	ldr	r0, [ip, r7]
    84b0:	bl	19350 <el_line@plt+0x16e9c>
    84b4:	cmp	r0, #1
    84b8:	ble	84e8 <el_line@plt+0x6034>
    84bc:	add	r5, r8, r5
    84c0:	mov	sl, #0
    84c4:	str	sl, [sp, #104]	; 0x68
    84c8:	mov	r7, sl
    84cc:	ldr	r0, [r5, #4]
    84d0:	str	sl, [sp, #40]	; 0x28
    84d4:	bl	1163c <el_line@plt+0xf188>
    84d8:	str	r0, [sp, #80]	; 0x50
    84dc:	bl	3bd0 <el_line@plt+0x171c>
    84e0:	mov	ip, sl
    84e4:	b	60e8 <el_line@plt+0x3c34>
    84e8:	mov	sl, #0
    84ec:	str	sl, [sp, #104]	; 0x68
    84f0:	mov	r7, sl
    84f4:	str	sl, [sp, #40]	; 0x28
    84f8:	mov	ip, sl
    84fc:	str	sl, [sp, #80]	; 0x50
    8500:	b	60e8 <el_line@plt+0x3c34>
    8504:	ldr	sl, [sp, #48]	; 0x30
    8508:	ldr	r0, [pc, #1528]	; 8b08 <el_line@plt+0x6654>
    850c:	adds	r8, sl, #0
    8510:	ldr	r1, [sp, #56]	; 0x38
    8514:	add	r0, pc, r0
    8518:	movne	r8, #1
    851c:	bl	11238 <el_line@plt+0xed84>
    8520:	b	6740 <el_line@plt+0x428c>
    8524:	bl	23ac <__errno_location@plt>
    8528:	ldr	r7, [sp, #48]	; 0x30
    852c:	adds	r8, r7, #0
    8530:	movne	r8, #1
    8534:	ldr	r0, [r0]
    8538:	bl	1fa4 <strerror@plt>
    853c:	mov	r1, r0
    8540:	ldr	r0, [pc, #1476]	; 8b0c <el_line@plt+0x6658>
    8544:	add	r0, pc, r0
    8548:	bl	11238 <el_line@plt+0xed84>
    854c:	b	77a8 <el_line@plt+0x52f4>
    8550:	ldr	r0, [pc, #1464]	; 8b10 <el_line@plt+0x665c>
    8554:	mov	r1, fp
    8558:	add	r0, pc, r0
    855c:	mov	sl, #0
    8560:	bl	11238 <el_line@plt+0xed84>
    8564:	mov	r7, sl
    8568:	str	sl, [sp, #100]	; 0x64
    856c:	str	sl, [sp, #88]	; 0x58
    8570:	str	sl, [sp, #104]	; 0x68
    8574:	mvn	fp, #0
    8578:	str	sl, [sp, #40]	; 0x28
    857c:	mov	ip, sl
    8580:	str	sl, [sp, #84]	; 0x54
    8584:	mov	r9, sl
    8588:	str	sl, [sp, #80]	; 0x50
    858c:	str	sl, [sp, #56]	; 0x38
    8590:	str	fp, [sp, #64]	; 0x40
    8594:	b	5b04 <el_line@plt+0x3650>
    8598:	mov	sl, #0
    859c:	mvn	r9, #0
    85a0:	mov	r7, sl
    85a4:	str	r9, [sp, #64]	; 0x40
    85a8:	str	sl, [sp, #100]	; 0x64
    85ac:	str	sl, [sp, #88]	; 0x58
    85b0:	str	sl, [sp, #104]	; 0x68
    85b4:	str	sl, [sp, #40]	; 0x28
    85b8:	mov	ip, sl
    85bc:	str	sl, [sp, #84]	; 0x54
    85c0:	mov	r9, sl
    85c4:	str	sl, [sp, #80]	; 0x50
    85c8:	str	sl, [sp, #56]	; 0x38
    85cc:	b	5b04 <el_line@plt+0x3650>
    85d0:	bl	23ac <__errno_location@plt>
    85d4:	ldr	sl, [sp, #48]	; 0x30
    85d8:	str	r5, [sp, #56]	; 0x38
    85dc:	adds	r8, sl, #0
    85e0:	movne	r8, #1
    85e4:	ldr	r0, [r0]
    85e8:	bl	1fa4 <strerror@plt>
    85ec:	mov	r1, r5
    85f0:	mov	r2, r0
    85f4:	ldr	r0, [pc, #1304]	; 8b14 <el_line@plt+0x6660>
    85f8:	add	r0, pc, r0
    85fc:	bl	11238 <el_line@plt+0xed84>
    8600:	b	6634 <el_line@plt+0x4180>
    8604:	bl	23ac <__errno_location@plt>
    8608:	ldr	r5, [sp, #48]	; 0x30
    860c:	adds	r8, r5, #0
    8610:	movne	r8, #1
    8614:	ldr	r0, [r0]
    8618:	bl	1fa4 <strerror@plt>
    861c:	ldr	r1, [sp, #56]	; 0x38
    8620:	mov	r2, r0
    8624:	ldr	r0, [pc, #1260]	; 8b18 <el_line@plt+0x6664>
    8628:	add	r0, pc, r0
    862c:	bl	11238 <el_line@plt+0xed84>
    8630:	b	68e4 <el_line@plt+0x4430>
    8634:	ldr	fp, [sp, #92]	; 0x5c
    8638:	mov	r8, #0
    863c:	ldr	r0, [fp]
    8640:	bl	1f20 <free@plt>
    8644:	add	ip, sp, #4416	; 0x1140
    8648:	movw	r3, #61208	; 0xef18
    864c:	add	ip, ip, #40	; 0x28
    8650:	movt	r3, #65535	; 0xffff
    8654:	str	r5, [fp]
    8658:	ldr	r3, [ip, r3]
    865c:	b	6258 <el_line@plt+0x3da4>
    8660:	add	lr, sp, #4416	; 0x1140
    8664:	movw	r3, #61304	; 0xef78
    8668:	add	lr, lr, #40	; 0x28
    866c:	movt	r3, #65535	; 0xffff
    8670:	ldr	r8, [lr, r3]
    8674:	b	80c8 <el_line@plt+0x5c14>
    8678:	ldr	r7, [sp, #56]	; 0x38
    867c:	mov	ip, sl
    8680:	ldr	r7, [r7]
    8684:	cmn	r7, #1
    8688:	str	r7, [sp, #64]	; 0x40
    868c:	beq	8a30 <el_line@plt+0x657c>
    8690:	add	r9, sp, #4416	; 0x1140
    8694:	movw	r3, #61304	; 0xef78
    8698:	add	r9, r9, #40	; 0x28
    869c:	movt	r3, #65535	; 0xffff
    86a0:	mov	r1, r7
    86a4:	ldr	r0, [r9, r3]
    86a8:	str	sl, [sp, #36]	; 0x24
    86ac:	bl	19350 <el_line@plt+0x16e9c>
    86b0:	ldr	ip, [sp, #36]	; 0x24
    86b4:	cmp	r0, #0
    86b8:	ble	86f4 <el_line@plt+0x6240>
    86bc:	ldr	r0, [r8, r7, lsl #2]
    86c0:	mov	sl, #0
    86c4:	bl	1163c <el_line@plt+0xf188>
    86c8:	mov	r7, sl
    86cc:	mov	r9, sl
    86d0:	str	r0, [sp, #56]	; 0x38
    86d4:	bl	3bd0 <el_line@plt+0x171c>
    86d8:	str	sl, [sp, #100]	; 0x64
    86dc:	str	sl, [sp, #88]	; 0x58
    86e0:	str	sl, [sp, #104]	; 0x68
    86e4:	str	sl, [sp, #84]	; 0x54
    86e8:	str	sl, [sp, #80]	; 0x50
    86ec:	ldr	ip, [sp, #36]	; 0x24
    86f0:	b	60e8 <el_line@plt+0x3c34>
    86f4:	mov	sl, #0
    86f8:	str	sl, [sp, #100]	; 0x64
    86fc:	mov	r7, sl
    8700:	str	sl, [sp, #88]	; 0x58
    8704:	str	sl, [sp, #104]	; 0x68
    8708:	mov	r9, sl
    870c:	str	sl, [sp, #84]	; 0x54
    8710:	str	sl, [sp, #80]	; 0x50
    8714:	str	sl, [sp, #56]	; 0x38
    8718:	b	60e8 <el_line@plt+0x3c34>
    871c:	ldr	r7, [fp, #16]
    8720:	ldr	r9, [r7]
    8724:	cmp	r9, #0
    8728:	beq	89c4 <el_line@plt+0x6510>
    872c:	mov	r2, r9
    8730:	mov	r0, r2
    8734:	bl	2310 <strlen@plt>
    8738:	ldr	r2, [r7, #4]!
    873c:	cmp	r6, r0
    8740:	movcc	r6, r0
    8744:	cmp	r2, #0
    8748:	bne	8730 <el_line@plt+0x627c>
    874c:	add	r1, r6, #2
    8750:	mov	r0, r5
    8754:	bl	187d4 <el_line@plt+0x16320>
    8758:	cmp	r0, #1
    875c:	movcc	r0, #1
    8760:	str	r0, [sp, #72]	; 0x48
    8764:	ldr	r1, [sp, #72]	; 0x48
    8768:	mov	r0, r5
    876c:	bl	187d4 <el_line@plt+0x16320>
    8770:	str	r0, [sp, #40]	; 0x28
    8774:	b	7f84 <el_line@plt+0x5ad0>
    8778:	ldr	r6, [sp, #92]	; 0x5c
    877c:	mov	r8, r5
    8780:	ldr	r0, [sp, #72]	; 0x48
    8784:	ldr	r3, [sp, #104]	; 0x68
    8788:	ldr	r1, [r6]
    878c:	mov	r2, r1
    8790:	bl	5628 <el_line@plt+0x3174>
    8794:	b	6244 <el_line@plt+0x3d90>
    8798:	ldr	r6, [sp, #92]	; 0x5c
    879c:	ldr	r0, [r6]
    87a0:	str	ip, [sp, #36]	; 0x24
    87a4:	bl	1163c <el_line@plt+0xf188>
    87a8:	ldr	r1, [r6]
    87ac:	ldr	ip, [sp, #36]	; 0x24
    87b0:	cmp	r0, #0
    87b4:	str	r0, [sp, #56]	; 0x38
    87b8:	beq	6180 <el_line@plt+0x3ccc>
    87bc:	b	615c <el_line@plt+0x3ca8>
    87c0:	add	fp, sp, #4416	; 0x1140
    87c4:	ldr	r4, [sp, #72]	; 0x48
    87c8:	add	fp, fp, #40	; 0x28
    87cc:	cmp	r9, #0
    87d0:	moveq	r8, #0
    87d4:	andne	r8, r8, #1
    87d8:	ldr	r3, [fp, r3]
    87dc:	b	6258 <el_line@plt+0x3da4>
    87e0:	ldr	r0, [pc, #820]	; 8b1c <el_line@plt+0x6668>
    87e4:	mov	sl, #0
    87e8:	str	ip, [sp, #64]	; 0x40
    87ec:	mov	r7, sl
    87f0:	add	r0, pc, r0
    87f4:	bl	11238 <el_line@plt+0xed84>
    87f8:	str	sl, [sp, #100]	; 0x64
    87fc:	str	sl, [sp, #88]	; 0x58
    8800:	str	sl, [sp, #104]	; 0x68
    8804:	b	85b4 <el_line@plt+0x6100>
    8808:	add	sl, sp, #4416	; 0x1140
    880c:	mov	fp, r4
    8810:	add	sl, sl, #40	; 0x28
    8814:	ldr	r4, [sp, #72]	; 0x48
    8818:	mov	r8, r2
    881c:	ldr	r3, [sl, fp]
    8820:	b	6258 <el_line@plt+0x3da4>
    8824:	add	lr, sp, #4416	; 0x1140
    8828:	ldr	r4, [sp, #72]	; 0x48
    882c:	add	lr, lr, #40	; 0x28
    8830:	cmp	r9, #0
    8834:	moveq	r8, #0
    8838:	andne	r8, r8, #1
    883c:	ldr	r3, [lr, r3]
    8840:	b	6258 <el_line@plt+0x3da4>
    8844:	mov	r8, r1
    8848:	mov	ip, r1
    884c:	b	7790 <el_line@plt+0x52dc>
    8850:	ldr	r0, [pc, #712]	; 8b20 <el_line@plt+0x666c>
    8854:	mov	r1, fp
    8858:	mov	sl, #0
    885c:	add	r0, pc, r0
    8860:	bl	11238 <el_line@plt+0xed84>
    8864:	str	sl, [sp, #100]	; 0x64
    8868:	str	sl, [sp, #88]	; 0x58
    886c:	b	8574 <el_line@plt+0x60c0>
    8870:	add	sl, sp, #4416	; 0x1140
    8874:	mov	r8, #0
    8878:	add	sl, sl, #40	; 0x28
    887c:	ldr	r3, [sl, r3]
    8880:	b	6258 <el_line@plt+0x3da4>
    8884:	add	r9, sp, #4416	; 0x1140
    8888:	mov	r8, r1
    888c:	add	r9, r9, #40	; 0x28
    8890:	ldr	r3, [r9, r3]
    8894:	b	6258 <el_line@plt+0x3da4>
    8898:	ldr	fp, [sp, #48]	; 0x30
    889c:	mov	r0, r5
    88a0:	adds	r8, fp, #0
    88a4:	movne	r8, #1
    88a8:	bl	1f20 <free@plt>
    88ac:	b	686c <el_line@plt+0x43b8>
    88b0:	ldr	r7, [sp, #48]	; 0x30
    88b4:	ldr	r0, [pc, #616]	; 8b24 <el_line@plt+0x6670>
    88b8:	adds	r8, r7, #0
    88bc:	ldr	r1, [sp, #60]	; 0x3c
    88c0:	add	r0, pc, r0
    88c4:	movne	r8, #1
    88c8:	bl	11238 <el_line@plt+0xed84>
    88cc:	mov	ip, #0
    88d0:	b	7790 <el_line@plt+0x52dc>
    88d4:	str	r6, [sp, #60]	; 0x3c
    88d8:	ldr	r9, [sp, #48]	; 0x30
    88dc:	ldr	r0, [pc, #580]	; 8b28 <el_line@plt+0x6674>
    88e0:	adds	r8, r9, #0
    88e4:	ldr	r1, [sp, #56]	; 0x38
    88e8:	add	r0, pc, r0
    88ec:	movne	r8, #1
    88f0:	bl	11238 <el_line@plt+0xed84>
    88f4:	mov	ip, #0
    88f8:	b	7790 <el_line@plt+0x52dc>
    88fc:	bl	21e4 <__stack_chk_fail@plt>
    8900:	add	fp, sp, #4416	; 0x1140
    8904:	mov	r8, #0
    8908:	add	fp, fp, #40	; 0x28
    890c:	ldr	r3, [fp, r3]
    8910:	b	6258 <el_line@plt+0x3da4>
    8914:	add	sl, sp, #4416	; 0x1140
    8918:	mov	r8, r1
    891c:	add	sl, sl, #40	; 0x28
    8920:	ldr	r3, [sl, r3]
    8924:	b	6258 <el_line@plt+0x3da4>
    8928:	ldr	r7, [sp, #48]	; 0x30
    892c:	ldr	r0, [pc, #504]	; 8b2c <el_line@plt+0x6678>
    8930:	adds	r8, r7, #0
    8934:	ldr	r1, [sp, #80]	; 0x50
    8938:	add	r0, pc, r0
    893c:	movne	r8, #1
    8940:	bl	11238 <el_line@plt+0xed84>
    8944:	b	609c <el_line@plt+0x3be8>
    8948:	ldr	r0, [pc, #480]	; 8b30 <el_line@plt+0x667c>
    894c:	mov	r1, fp
    8950:	add	r0, pc, r0
    8954:	b	855c <el_line@plt+0x60a8>
    8958:	ldr	r9, [sp, #48]	; 0x30
    895c:	adds	r8, r9, #0
    8960:	movne	r8, #1
    8964:	b	6244 <el_line@plt+0x3d90>
    8968:	add	r6, sp, #4416	; 0x1140
    896c:	movw	r3, #61304	; 0xef78
    8970:	add	r6, r6, #40	; 0x28
    8974:	movt	r3, #65535	; 0xffff
    8978:	ldr	r8, [r6, r3]
    897c:	b	80c8 <el_line@plt+0x5c14>
    8980:	ldr	r0, [pc, #428]	; 8b34 <el_line@plt+0x6680>
    8984:	mov	r7, #0
    8988:	mov	r1, fp
    898c:	mov	r9, r7
    8990:	add	r0, pc, r0
    8994:	mvn	fp, #0
    8998:	bl	11238 <el_line@plt+0xed84>
    899c:	str	r7, [sp, #100]	; 0x64
    89a0:	str	r7, [sp, #88]	; 0x58
    89a4:	mov	ip, r7
    89a8:	str	r7, [sp, #104]	; 0x68
    89ac:	str	r7, [sp, #40]	; 0x28
    89b0:	str	r7, [sp, #84]	; 0x54
    89b4:	str	r7, [sp, #80]	; 0x50
    89b8:	str	r7, [sp, #56]	; 0x38
    89bc:	str	fp, [sp, #64]	; 0x40
    89c0:	b	5b04 <el_line@plt+0x3650>
    89c4:	mov	r6, r9
    89c8:	b	874c <el_line@plt+0x6298>
    89cc:	ldr	r0, [pc, #356]	; 8b38 <el_line@plt+0x6684>
    89d0:	mov	r1, fp
    89d4:	mov	sl, #0
    89d8:	str	r3, [sp, #64]	; 0x40
    89dc:	add	r0, pc, r0
    89e0:	bl	11238 <el_line@plt+0xed84>
    89e4:	mov	r7, sl
    89e8:	str	sl, [sp, #104]	; 0x68
    89ec:	str	sl, [sp, #40]	; 0x28
    89f0:	mov	ip, sl
    89f4:	str	sl, [sp, #80]	; 0x50
    89f8:	str	sl, [sp, #56]	; 0x38
    89fc:	b	5b04 <el_line@plt+0x3650>
    8a00:	mov	sl, #0
    8a04:	str	r9, [sp, #64]	; 0x40
    8a08:	mov	r7, sl
    8a0c:	str	sl, [sp, #100]	; 0x64
    8a10:	str	sl, [sp, #88]	; 0x58
    8a14:	b	85b4 <el_line@plt+0x6100>
    8a18:	ldr	r7, [sp, #92]	; 0x5c
    8a1c:	ldr	r1, [r7]
    8a20:	mov	r7, #1
    8a24:	b	6804 <el_line@plt+0x4350>
    8a28:	mov	sl, #0
    8a2c:	b	89e4 <el_line@plt+0x6530>
    8a30:	mov	sl, #0
    8a34:	str	sl, [sp, #100]	; 0x64
    8a38:	mov	r7, sl
    8a3c:	str	sl, [sp, #88]	; 0x58
    8a40:	str	sl, [sp, #104]	; 0x68
    8a44:	mov	r9, sl
    8a48:	str	sl, [sp, #84]	; 0x54
    8a4c:	str	sl, [sp, #80]	; 0x50
    8a50:	str	sl, [sp, #56]	; 0x38
    8a54:	b	5b04 <el_line@plt+0x3650>
    8a58:	str	r9, [sp, #64]	; 0x40
    8a5c:	str	sl, [sp, #100]	; 0x64
    8a60:	str	sl, [sp, #88]	; 0x58
    8a64:	str	sl, [sp, #104]	; 0x68
    8a68:	b	85b4 <el_line@plt+0x6100>
    8a6c:	mov	sl, #0
    8a70:	b	8a08 <el_line@plt+0x6554>
    8a74:	ldr	r1, [fp, #16]
    8a78:	mov	r2, sl
    8a7c:	ldr	r0, [sp, #72]	; 0x48
    8a80:	ldr	r3, [sp, #104]	; 0x68
    8a84:	ldr	r1, [r1]
    8a88:	bl	5628 <el_line@plt+0x3174>
    8a8c:	ldr	ip, [sp, #48]	; 0x30
    8a90:	mov	r8, r0
    8a94:	cmp	r8, #0
    8a98:	cmpne	ip, #0
    8a9c:	mov	r0, fp
    8aa0:	moveq	r8, #0
    8aa4:	movne	r8, #1
    8aa8:	bl	17408 <el_line@plt+0x14f54>
    8aac:	b	6740 <el_line@plt+0x428c>
    8ab0:	andeq	r2, r1, r0, ror #16
    8ab4:	andeq	r2, r1, ip, asr #21
    8ab8:	strdeq	r2, [r1], -r4
    8abc:	andeq	r3, r1, r8, lsr #6
    8ac0:	strdeq	r2, [r1], -r0
    8ac4:			; <UNDEFINED> instruction: 0x000124b8
    8ac8:	andeq	r0, r0, r8, asr #4
    8acc:	andeq	r2, r1, ip, ror #8
    8ad0:	andeq	r2, r1, r0, lsr #18
    8ad4:	andeq	r7, r2, ip, lsr #4
    8ad8:	andeq	r0, r0, r4, lsr #4
    8adc:	muleq	r2, r0, r1
    8ae0:	andeq	r2, r1, r0, lsl #1
    8ae4:			; <UNDEFINED> instruction: 0x000125bc
    8ae8:	andeq	r2, r1, r8, ror #12
    8aec:	andeq	r7, r2, r4, asr #2
    8af0:	andeq	r2, r1, r4, asr r3
    8af4:	andeq	r2, r1, r8, asr #4
    8af8:	andeq	r4, r1, ip, lsr #8
    8afc:	andeq	r2, r1, r8, lsl r3
    8b00:	strdeq	r2, [r1], -r8
    8b04:	andeq	r2, r1, r0, ror #2
    8b08:	ldrdeq	r2, [r1], -r8
    8b0c:	andeq	r2, r1, r4, asr r3
    8b10:	muleq	r1, ip, lr
    8b14:	muleq	r1, r0, r1
    8b18:	andeq	r2, r1, ip, lsl #3
    8b1c:	andeq	r1, r1, ip, lsr #22
    8b20:	andeq	r1, r1, r4, lsl fp
    8b24:	andeq	r1, r1, r0, asr #24
    8b28:	andeq	r1, r1, r8, lsl #23
    8b2c:	andeq	r1, r1, r0, asr fp
    8b30:	andeq	r1, r1, r0, asr sl
    8b34:	andeq	r1, r1, r0, lsl sl
    8b38:	andeq	r1, r1, ip, asr r9
    8b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b40:	mov	sl, r1
    8b44:	ldr	r8, [pc, #1760]	; 922c <el_line@plt+0x6d78>
    8b48:	sub	sp, sp, #2128	; 0x850
    8b4c:	ldr	r3, [pc, #1756]	; 9230 <el_line@plt+0x6d7c>
    8b50:	sub	sp, sp, #12
    8b54:	add	r8, pc, r8
    8b58:	ldr	r1, [pc, #1748]	; 9234 <el_line@plt+0x6d80>
    8b5c:	mov	r7, r0
    8b60:	mov	r5, r2
    8b64:	ldr	r3, [r8, r3]
    8b68:	add	r1, pc, r1
    8b6c:	ldr	r4, [r1, #548]	; 0x224
    8b70:	str	r3, [sp, #36]	; 0x24
    8b74:	ldr	r3, [r3]
    8b78:	cmp	r4, #0
    8b7c:	str	r3, [sp, #2132]	; 0x854
    8b80:	bne	8b94 <el_line@plt+0x66e0>
    8b84:	mov	r0, r4
    8b88:	bl	2208 <isatty@plt>
    8b8c:	cmp	r0, #0
    8b90:	bne	8f98 <el_line@plt+0x6ae4>
    8b94:	mov	r9, #0
    8b98:	mov	r6, r9
    8b9c:	ldr	r1, [pc, #1684]	; 9238 <el_line@plt+0x6d84>
    8ba0:	mov	r0, r7
    8ba4:	add	r1, pc, r1
    8ba8:	bl	af44 <el_line@plt+0x8a90>
    8bac:	cmp	r0, #0
    8bb0:	str	r0, [sp, #60]	; 0x3c
    8bb4:	beq	9208 <el_line@plt+0x6d54>
    8bb8:	cmp	sl, #0
    8bbc:	beq	8d4c <el_line@plt+0x6898>
    8bc0:	mov	r0, sl
    8bc4:	bl	1163c <el_line@plt+0xf188>
    8bc8:	ldr	r1, [sp, #60]	; 0x3c
    8bcc:	subs	r4, r0, #0
    8bd0:	beq	8be8 <el_line@plt+0x6734>
    8bd4:	ldrb	r3, [r4]
    8bd8:	cmp	r3, #47	; 0x2f
    8bdc:	beq	8be8 <el_line@plt+0x6734>
    8be0:	bl	4eb4 <el_line@plt+0x2a00>
    8be4:	mov	r4, r0
    8be8:	mov	r0, r7
    8bec:	mov	r1, r4
    8bf0:	bl	43d8 <el_line@plt+0x1f24>
    8bf4:	cmp	r0, #0
    8bf8:	beq	8c04 <el_line@plt+0x6750>
    8bfc:	cmp	r5, #0
    8c00:	beq	8cd8 <el_line@plt+0x6824>
    8c04:	ldr	r3, [pc, #1584]	; 923c <el_line@plt+0x6d88>
    8c08:	add	r3, pc, r3
    8c0c:	ldr	r3, [r3, #528]	; 0x210
    8c10:	cmp	r3, #0
    8c14:	bne	8cb8 <el_line@plt+0x6804>
    8c18:	ldr	r3, [pc, #1568]	; 9240 <el_line@plt+0x6d8c>
    8c1c:	cmp	r5, #0
    8c20:	add	r3, pc, r3
    8c24:	beq	8cc8 <el_line@plt+0x6814>
    8c28:	ldr	r2, [pc, #1556]	; 9244 <el_line@plt+0x6d90>
    8c2c:	add	r2, pc, r2
    8c30:	add	r6, sp, #84	; 0x54
    8c34:	ldr	ip, [pc, #1548]	; 9248 <el_line@plt+0x6d94>
    8c38:	mov	r1, #2048	; 0x800
    8c3c:	str	r3, [sp, #4]
    8c40:	add	ip, pc, ip
    8c44:	mov	r3, r1
    8c48:	str	ip, [sp]
    8c4c:	mov	r0, r6
    8c50:	str	r2, [sp, #12]
    8c54:	mov	r2, #1
    8c58:	str	r5, [sp, #16]
    8c5c:	str	r4, [sp, #8]
    8c60:	bl	231c <__snprintf_chk@plt>
    8c64:	mov	r1, r6
    8c68:	add	r2, sp, #60	; 0x3c
    8c6c:	mov	r3, #1
    8c70:	mov	r0, r7
    8c74:	bl	5a54 <el_line@plt+0x35a0>
    8c78:	mov	r5, r0
    8c7c:	mov	r0, r4
    8c80:	bl	1f20 <free@plt>
    8c84:	ldr	r0, [sp, #60]	; 0x3c
    8c88:	bl	1f20 <free@plt>
    8c8c:	mov	r0, r7
    8c90:	bl	1f20 <free@plt>
    8c94:	mov	r0, r5
    8c98:	ldr	ip, [sp, #36]	; 0x24
    8c9c:	ldr	r2, [sp, #2132]	; 0x854
    8ca0:	ldr	r3, [ip]
    8ca4:	cmp	r2, r3
    8ca8:	bne	9204 <el_line@plt+0x6d50>
    8cac:	add	sp, sp, #2128	; 0x850
    8cb0:	add	sp, sp, #12
    8cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8cb8:	ldr	r3, [pc, #1420]	; 924c <el_line@plt+0x6d98>
    8cbc:	cmp	r5, #0
    8cc0:	add	r3, pc, r3
    8cc4:	bne	8c28 <el_line@plt+0x6774>
    8cc8:	ldr	r2, [pc, #1408]	; 9250 <el_line@plt+0x6d9c>
    8ccc:	add	r2, pc, r2
    8cd0:	mov	r5, r2
    8cd4:	b	8c30 <el_line@plt+0x677c>
    8cd8:	ldr	r3, [pc, #1396]	; 9254 <el_line@plt+0x6da0>
    8cdc:	add	r3, pc, r3
    8ce0:	ldr	r3, [r3, #532]	; 0x214
    8ce4:	cmp	r3, #0
    8ce8:	bne	8cfc <el_line@plt+0x6848>
    8cec:	ldr	r0, [pc, #1380]	; 9258 <el_line@plt+0x6da4>
    8cf0:	mov	r1, r4
    8cf4:	add	r0, pc, r0
    8cf8:	bl	14498 <el_line@plt+0x11fe4>
    8cfc:	add	r5, sp, #84	; 0x54
    8d00:	ldr	r2, [pc, #1364]	; 925c <el_line@plt+0x6da8>
    8d04:	mov	r1, #2048	; 0x800
    8d08:	str	r4, [sp, #4]
    8d0c:	mov	r3, r1
    8d10:	add	r2, pc, r2
    8d14:	mov	r0, r5
    8d18:	str	r2, [sp]
    8d1c:	add	fp, sp, #72	; 0x48
    8d20:	mov	r2, #1
    8d24:	bl	231c <__snprintf_chk@plt>
    8d28:	mov	r1, r5
    8d2c:	sub	r2, fp, #12
    8d30:	mov	r0, r7
    8d34:	mov	r3, #1
    8d38:	bl	5a54 <el_line@plt+0x35a0>
    8d3c:	cmp	r0, #0
    8d40:	mov	r0, r4
    8d44:	bne	91e8 <el_line@plt+0x6d34>
    8d48:	bl	1f20 <free@plt>
    8d4c:	ldr	r0, [pc, #1292]	; 9260 <el_line@plt+0x6dac>
    8d50:	mov	r1, #0
    8d54:	mov	r3, r1
    8d58:	mov	r2, #1
    8d5c:	ldr	r0, [r8, r0]
    8d60:	ldr	r0, [r0]
    8d64:	bl	22bc <setvbuf@plt>
    8d68:	ldr	r0, [pc, #1268]	; 9264 <el_line@plt+0x6db0>
    8d6c:	mov	r1, #0
    8d70:	mov	r2, #1
    8d74:	add	r0, pc, r0
    8d78:	mov	r3, r1
    8d7c:	ldr	r0, [r0]
    8d80:	bl	22bc <setvbuf@plt>
    8d84:	ldr	r3, [pc, #1244]	; 9268 <el_line@plt+0x6db4>
    8d88:	add	r3, pc, r3
    8d8c:	ldr	r0, [r3, #548]	; 0x224
    8d90:	cmp	r0, #0
    8d94:	movne	ip, #0
    8d98:	strne	ip, [sp, #40]	; 0x28
    8d9c:	beq	917c <el_line@plt+0x6cc8>
    8da0:	ldr	ip, [pc, #1220]	; 926c <el_line@plt+0x6db8>
    8da4:	ldr	fp, [pc, #1220]	; 9270 <el_line@plt+0x6dbc>
    8da8:	add	ip, pc, ip
    8dac:	str	ip, [sp, #28]
    8db0:	ldr	ip, [pc, #1212]	; 9274 <el_line@plt+0x6dc0>
    8db4:	add	fp, pc, fp
    8db8:	add	ip, pc, ip
    8dbc:	str	ip, [sp, #32]
    8dc0:	ldr	ip, [pc, #1200]	; 9278 <el_line@plt+0x6dc4>
    8dc4:	add	ip, pc, ip
    8dc8:	str	ip, [sp, #44]	; 0x2c
    8dcc:	ldr	ip, [pc, #1192]	; 927c <el_line@plt+0x6dc8>
    8dd0:	add	ip, pc, ip
    8dd4:	str	ip, [sp, #52]	; 0x34
    8dd8:	ldr	ip, [pc, #1184]	; 9280 <el_line@plt+0x6dcc>
    8ddc:	add	ip, pc, ip
    8de0:	str	ip, [sp, #48]	; 0x30
    8de4:	mov	r0, #2
    8de8:	mov	r1, #1
    8dec:	bl	146b8 <el_line@plt+0x12204>
    8df0:	cmp	r6, #0
    8df4:	beq	8ec8 <el_line@plt+0x6a14>
    8df8:	add	r5, sp, #72	; 0x48
    8dfc:	mov	r0, r6
    8e00:	sub	r1, r5, #8
    8e04:	mov	r3, #0
    8e08:	str	r3, [sp, #64]	; 0x40
    8e0c:	bl	20ac <el_gets@plt>
    8e10:	subs	sl, r0, #0
    8e14:	beq	9190 <el_line@plt+0x6cdc>
    8e18:	ldr	r3, [sp, #64]	; 0x40
    8e1c:	cmp	r3, #0
    8e20:	ble	9190 <el_line@plt+0x6cdc>
    8e24:	add	r4, sp, #84	; 0x54
    8e28:	sub	r1, r5, #4
    8e2c:	mov	r2, #10
    8e30:	mov	r3, sl
    8e34:	mov	r0, r9
    8e38:	bl	2238 <history@plt>
    8e3c:	mov	r1, sl
    8e40:	mov	r2, #2048	; 0x800
    8e44:	mov	r0, r4
    8e48:	bl	177d8 <el_line@plt+0x15324>
    8e4c:	cmp	r0, #2048	; 0x800
    8e50:	bcs	8f3c <el_line@plt+0x6a88>
    8e54:	mov	r1, #10
    8e58:	mov	r0, r4
    8e5c:	bl	240c <strrchr@plt>
    8e60:	ldr	r1, [sp, #28]
    8e64:	cmp	r0, #0
    8e68:	movne	r3, #0
    8e6c:	strbne	r3, [r0]
    8e70:	mov	r0, #2
    8e74:	mov	r3, #0
    8e78:	str	r3, [fp]
    8e7c:	bl	146b8 <el_line@plt+0x12204>
    8e80:	ldr	ip, [sp, #32]
    8e84:	mov	r0, r7
    8e88:	mov	r1, r4
    8e8c:	sub	r2, r5, #12
    8e90:	ldr	r3, [ip, #548]	; 0x224
    8e94:	bl	5a54 <el_line@plt+0x35a0>
    8e98:	cmp	r0, #0
    8e9c:	beq	8de4 <el_line@plt+0x6930>
    8ea0:	mov	r4, r0
    8ea4:	ldr	r0, [sp, #60]	; 0x3c
    8ea8:	bl	1f20 <free@plt>
    8eac:	mov	r0, r7
    8eb0:	bl	1f20 <free@plt>
    8eb4:	cmp	r6, #0
    8eb8:	bne	91c0 <el_line@plt+0x6d0c>
    8ebc:	lsr	r0, r4, #31
    8ec0:	bl	1953c <el_line@plt+0x17088>
    8ec4:	b	8c98 <el_line@plt+0x67e4>
    8ec8:	ldr	ip, [sp, #40]	; 0x28
    8ecc:	cmp	ip, #0
    8ed0:	bne	8f5c <el_line@plt+0x6aa8>
    8ed4:	ldr	ip, [sp, #52]	; 0x34
    8ed8:	add	r4, sp, #84	; 0x54
    8edc:	mov	r1, #2048	; 0x800
    8ee0:	mov	r0, r4
    8ee4:	ldr	r2, [ip]
    8ee8:	bl	22b0 <fgets@plt>
    8eec:	cmp	r0, #0
    8ef0:	beq	91d0 <el_line@plt+0x6d1c>
    8ef4:	ldr	r0, [sp, #48]	; 0x30
    8ef8:	mov	r1, r4
    8efc:	bl	14498 <el_line@plt+0x11fe4>
    8f00:	ldrb	r3, [sp, #84]	; 0x54
    8f04:	cmp	r3, #0
    8f08:	beq	8f90 <el_line@plt+0x6adc>
    8f0c:	mov	r0, r4
    8f10:	bl	2310 <strlen@plt>
    8f14:	add	r1, sp, #2128	; 0x850
    8f18:	add	r1, r1, #8
    8f1c:	add	r0, r1, r0
    8f20:	ldrb	r3, [r0, #-2053]	; 0xfffff7fb
    8f24:	cmp	r3, #10
    8f28:	beq	8f90 <el_line@plt+0x6adc>
    8f2c:	mov	r0, #10
    8f30:	add	r5, sp, #72	; 0x48
    8f34:	bl	2058 <putchar@plt>
    8f38:	b	8e54 <el_line@plt+0x69a0>
    8f3c:	ldr	r3, [pc, #832]	; 9284 <el_line@plt+0x6dd0>
    8f40:	mov	r1, #1
    8f44:	ldr	r0, [sp, #44]	; 0x2c
    8f48:	mov	r2, #27
    8f4c:	ldr	r3, [r8, r3]
    8f50:	ldr	r3, [r3]
    8f54:	bl	22c8 <fwrite@plt>
    8f58:	b	8de4 <el_line@plt+0x6930>
    8f5c:	ldr	r1, [pc, #804]	; 9288 <el_line@plt+0x6dd4>
    8f60:	mov	r0, #1
    8f64:	add	r4, sp, #84	; 0x54
    8f68:	add	r1, pc, r1
    8f6c:	bl	24a8 <__printf_chk@plt>
    8f70:	ldr	r3, [pc, #788]	; 928c <el_line@plt+0x6dd8>
    8f74:	mov	r1, #2048	; 0x800
    8f78:	mov	r0, r4
    8f7c:	add	r3, pc, r3
    8f80:	ldr	r2, [r3]
    8f84:	bl	22b0 <fgets@plt>
    8f88:	cmp	r0, #0
    8f8c:	beq	91c8 <el_line@plt+0x6d14>
    8f90:	add	r5, sp, #72	; 0x48
    8f94:	b	8e54 <el_line@plt+0x69a0>
    8f98:	ldr	r0, [pc, #752]	; 9290 <el_line@plt+0x6ddc>
    8f9c:	ldr	r1, [pc, #752]	; 9294 <el_line@plt+0x6de0>
    8fa0:	ldr	r2, [pc, #696]	; 9260 <el_line@plt+0x6dac>
    8fa4:	ldr	r3, [pc, #728]	; 9284 <el_line@plt+0x6dd0>
    8fa8:	ldr	r0, [r8, r0]
    8fac:	ldr	r1, [r8, r1]
    8fb0:	ldr	r2, [r8, r2]
    8fb4:	ldr	r3, [r8, r3]
    8fb8:	ldr	r0, [r0]
    8fbc:	ldr	r1, [r1]
    8fc0:	ldr	r2, [r2]
    8fc4:	ldr	r3, [r3]
    8fc8:	bl	2364 <el_init@plt>
    8fcc:	subs	r6, r0, #0
    8fd0:	beq	9220 <el_line@plt+0x6d6c>
    8fd4:	bl	1efc <history_init@plt>
    8fd8:	subs	r9, r0, #0
    8fdc:	beq	9214 <el_line@plt+0x6d60>
    8fe0:	add	r1, sp, #68	; 0x44
    8fe4:	mov	r2, #1
    8fe8:	mov	r3, #100	; 0x64
    8fec:	add	fp, sp, #72	; 0x48
    8ff0:	bl	2238 <history@plt>
    8ff4:	ldr	r2, [pc, #668]	; 9298 <el_line@plt+0x6de4>
    8ff8:	ldr	ip, [pc, #668]	; 929c <el_line@plt+0x6de8>
    8ffc:	mov	r3, r9
    9000:	mov	r0, r6
    9004:	mov	r1, #10
    9008:	ldr	r2, [r8, r2]
    900c:	add	ip, pc, ip
    9010:	str	ip, [sp, #24]
    9014:	bl	23d0 <el_set@plt>
    9018:	ldr	r2, [pc, #640]	; 92a0 <el_line@plt+0x6dec>
    901c:	mov	r1, r4
    9020:	mov	r0, r6
    9024:	sub	fp, fp, #12
    9028:	add	r2, pc, r2
    902c:	bl	23d0 <el_set@plt>
    9030:	ldr	r2, [pc, #620]	; 92a4 <el_line@plt+0x6df0>
    9034:	mov	r0, r6
    9038:	mov	r1, #2
    903c:	add	r2, pc, r2
    9040:	bl	23d0 <el_set@plt>
    9044:	mov	r2, r4
    9048:	mov	r0, r6
    904c:	mov	r1, #1
    9050:	bl	23d0 <el_set@plt>
    9054:	mov	r2, #1
    9058:	mov	r0, r6
    905c:	mov	r1, #3
    9060:	bl	23d0 <el_set@plt>
    9064:	mov	r1, r4
    9068:	mov	r0, r6
    906c:	bl	225c <el_source@plt>
    9070:	ldr	r3, [pc, #560]	; 92a8 <el_line@plt+0x6df4>
    9074:	ldr	ip, [sp, #24]
    9078:	mov	r0, r6
    907c:	add	r3, pc, r3
    9080:	str	r3, [sp]
    9084:	ldr	r3, [pc, #544]	; 92ac <el_line@plt+0x6df8>
    9088:	mov	r1, #9
    908c:	mov	r2, ip
    9090:	add	r3, pc, r3
    9094:	bl	23d0 <el_set@plt>
    9098:	add	r2, sp, #76	; 0x4c
    909c:	mov	r0, r6
    90a0:	mov	r1, #14
    90a4:	str	fp, [sp, #80]	; 0x50
    90a8:	str	r7, [sp, #76]	; 0x4c
    90ac:	bl	23d0 <el_set@plt>
    90b0:	ldr	ip, [sp, #24]
    90b4:	mov	r0, r6
    90b8:	ldr	r2, [pc, #496]	; 92b0 <el_line@plt+0x6dfc>
    90bc:	mov	r1, #4
    90c0:	str	r4, [sp]
    90c4:	mov	r3, ip
    90c8:	add	r2, pc, r2
    90cc:	bl	23d0 <el_set@plt>
    90d0:	ldr	ip, [pc, #476]	; 92b4 <el_line@plt+0x6e00>
    90d4:	ldr	r2, [pc, #476]	; 92b8 <el_line@plt+0x6e04>
    90d8:	mov	r0, r6
    90dc:	add	ip, pc, ip
    90e0:	str	r4, [sp]
    90e4:	mov	r1, #4
    90e8:	add	r2, pc, r2
    90ec:	mov	r3, ip
    90f0:	str	ip, [sp, #24]
    90f4:	bl	23d0 <el_set@plt>
    90f8:	ldr	ip, [sp, #24]
    90fc:	ldr	r2, [pc, #440]	; 92bc <el_line@plt+0x6e08>
    9100:	mov	r0, r6
    9104:	ldr	fp, [pc, #436]	; 92c0 <el_line@plt+0x6e0c>
    9108:	mov	r1, #4
    910c:	mov	r3, ip
    9110:	str	r4, [sp]
    9114:	add	r2, pc, r2
    9118:	add	fp, pc, fp
    911c:	bl	23d0 <el_set@plt>
    9120:	ldr	r2, [pc, #412]	; 92c4 <el_line@plt+0x6e10>
    9124:	mov	r3, fp
    9128:	str	r4, [sp]
    912c:	mov	r0, r6
    9130:	mov	r1, #4
    9134:	add	r2, pc, r2
    9138:	bl	23d0 <el_set@plt>
    913c:	ldr	r2, [pc, #388]	; 92c8 <el_line@plt+0x6e14>
    9140:	mov	r3, fp
    9144:	str	r4, [sp]
    9148:	mov	r0, r6
    914c:	mov	r1, #4
    9150:	add	r2, pc, r2
    9154:	bl	23d0 <el_set@plt>
    9158:	ldr	r2, [pc, #364]	; 92cc <el_line@plt+0x6e18>
    915c:	ldr	r3, [pc, #364]	; 92d0 <el_line@plt+0x6e1c>
    9160:	mov	r0, r6
    9164:	str	r4, [sp]
    9168:	mov	r1, #4
    916c:	add	r2, pc, r2
    9170:	add	r3, pc, r3
    9174:	bl	23d0 <el_set@plt>
    9178:	b	8b9c <el_line@plt+0x66e8>
    917c:	bl	2208 <isatty@plt>
    9180:	adds	r0, r0, #0
    9184:	movne	r0, #1
    9188:	str	r0, [sp, #40]	; 0x28
    918c:	b	8da0 <el_line@plt+0x68ec>
    9190:	mov	r0, #10
    9194:	mov	r4, #0
    9198:	bl	2058 <putchar@plt>
    919c:	ldr	r0, [sp, #60]	; 0x3c
    91a0:	bl	1f20 <free@plt>
    91a4:	mov	r0, r7
    91a8:	bl	1f20 <free@plt>
    91ac:	mov	r0, r6
    91b0:	bl	2448 <el_end@plt>
    91b4:	mov	r0, r4
    91b8:	bl	1953c <el_line@plt+0x17088>
    91bc:	b	8c98 <el_line@plt+0x67e4>
    91c0:	lsr	r4, r4, #31
    91c4:	b	91ac <el_line@plt+0x6cf8>
    91c8:	mov	r0, #10
    91cc:	bl	2058 <putchar@plt>
    91d0:	ldr	r0, [sp, #60]	; 0x3c
    91d4:	bl	1f20 <free@plt>
    91d8:	mov	r0, r7
    91dc:	bl	1f20 <free@plt>
    91e0:	mov	r0, #0
    91e4:	b	8c98 <el_line@plt+0x67e4>
    91e8:	bl	1f20 <free@plt>
    91ec:	ldr	r0, [sp, #60]	; 0x3c
    91f0:	bl	1f20 <free@plt>
    91f4:	mov	r0, r7
    91f8:	bl	1f20 <free@plt>
    91fc:	mvn	r0, #0
    9200:	b	8c98 <el_line@plt+0x67e4>
    9204:	bl	21e4 <__stack_chk_fail@plt>
    9208:	ldr	r0, [pc, #196]	; 92d4 <el_line@plt+0x6e20>
    920c:	add	r0, pc, r0
    9210:	bl	10980 <el_line@plt+0xe4cc>
    9214:	ldr	r0, [pc, #188]	; 92d8 <el_line@plt+0x6e24>
    9218:	add	r0, pc, r0
    921c:	bl	10980 <el_line@plt+0xe4cc>
    9220:	ldr	r0, [pc, #180]	; 92dc <el_line@plt+0x6e28>
    9224:	add	r0, pc, r0
    9228:	bl	10980 <el_line@plt+0xe4cc>
    922c:	andeq	r6, r2, r0, lsl r2
    9230:	andeq	r0, r0, ip, lsr #4
    9234:			; <UNDEFINED> instruction: 0x000285b0
    9238:	andeq	r2, r1, r4, ror #14
    923c:	andeq	r8, r2, r0, lsl r5
    9240:	strdeq	r1, [r1], -r8
    9244:	andeq	r1, r1, r4, lsr r3
    9248:			; <UNDEFINED> instruction: 0x000125b0
    924c:	andeq	r2, r1, r0, lsr #8
    9250:	andeq	r1, r1, ip, asr #12
    9254:	andeq	r8, r2, ip, lsr r4
    9258:	andeq	r2, r1, r0, ror #9
    925c:	ldrdeq	r2, [r1], -r8
    9260:	andeq	r0, r0, r0, ror r2
    9264:	andeq	r9, r2, r8, asr fp
    9268:	muleq	r2, r0, r3
    926c:			; <UNDEFINED> instruction: 0xffffaff8
    9270:	andeq	r6, r2, ip, ror #6
    9274:	andeq	r8, r2, r0, ror #6
    9278:	andeq	r2, r1, r8, asr #8
    927c:	strdeq	r9, [r2], -ip
    9280:	andeq	r2, r1, r4, lsr #8
    9284:	andeq	r0, r0, r0, asr r2
    9288:	andeq	r1, r1, r8, ror r0
    928c:	andeq	r9, r2, r0, asr r9
    9290:	andeq	r0, r0, r4, lsr r2
    9294:	andeq	r0, r0, r4, lsr #4
    9298:	andeq	r0, r0, ip, asr r2
    929c:	andeq	r2, r1, r8, lsr #2
    92a0:			; <UNDEFINED> instruction: 0xffffac54
    92a4:	strdeq	r2, [r1], -r0
    92a8:			; <UNDEFINED> instruction: 0xffffbe58
    92ac:	strheq	r2, [r1], -r4
    92b0:	andeq	r2, r1, r4, lsr #1
    92b4:	muleq	r1, ip, r0
    92b8:	andeq	r2, r1, r8, lsl #1
    92bc:	andeq	r2, r1, r4, ror r0
    92c0:	andeq	r2, r1, r0, lsl #1
    92c4:	andeq	r2, r1, ip, asr r0
    92c8:	andeq	r2, r1, r8, asr r0
    92cc:	andeq	r2, r1, r4, asr #32
    92d0:	andeq	r2, r1, r4, asr #32
    92d4:			; <UNDEFINED> instruction: 0x00011fbc
    92d8:	andeq	r1, r1, ip, ror #29
    92dc:	andeq	r1, r1, r0, asr #29
    92e0:	push	{r4, r5, r6, r7, r8, lr}
    92e4:	sub	sp, sp, #32
    92e8:	ldr	r5, [pc, #272]	; 9400 <el_line@plt+0x6f4c>
    92ec:	mov	r6, r0
    92f0:	ldr	r3, [pc, #268]	; 9404 <el_line@plt+0x6f50>
    92f4:	mov	r0, r1
    92f8:	add	r5, pc, r5
    92fc:	mov	r4, r1
    9300:	ldr	r7, [r5, r3]
    9304:	ldr	r3, [r7]
    9308:	str	r3, [sp, #28]
    930c:	bl	f24c <el_line@plt+0xcd98>
    9310:	cmp	r0, #262144	; 0x40000
    9314:	mov	r0, r4
    9318:	bhi	93cc <el_line@plt+0x6f18>
    931c:	bl	f24c <el_line@plt+0xcd98>
    9320:	add	r8, sp, #24
    9324:	mov	r1, r0
    9328:	mov	r0, r8
    932c:	bl	13174 <el_line@plt+0x10cc0>
    9330:	mov	r0, r4
    9334:	mov	r3, #4
    9338:	str	r8, [sp, #8]
    933c:	str	r3, [sp, #12]
    9340:	bl	f3ec <el_line@plt+0xcf38>
    9344:	str	r0, [sp, #16]
    9348:	mov	r0, r4
    934c:	bl	f24c <el_line@plt+0xcd98>
    9350:	ldrd	r2, [r6, #32]
    9354:	ldr	r1, [r6, #4]
    9358:	orrs	ip, r2, r3
    935c:	moveq	ip, #0
    9360:	str	r0, [sp, #20]
    9364:	bne	93c0 <el_line@plt+0x6f0c>
    9368:	ldr	r0, [pc, #152]	; 9408 <el_line@plt+0x6f54>
    936c:	add	r2, sp, #8
    9370:	mov	r3, #2
    9374:	add	r6, r6, #88	; 0x58
    9378:	ldr	r0, [r5, r0]
    937c:	str	ip, [sp]
    9380:	str	r6, [sp, #4]
    9384:	bl	11860 <el_line@plt+0xf3ac>
    9388:	mov	r5, r0
    938c:	mov	r0, r4
    9390:	bl	f24c <el_line@plt+0xcd98>
    9394:	add	r0, r0, #4
    9398:	cmp	r5, r0
    939c:	bne	93e4 <el_line@plt+0x6f30>
    93a0:	mov	r0, r4
    93a4:	bl	efc0 <el_line@plt+0xcb0c>
    93a8:	ldr	r2, [sp, #28]
    93ac:	ldr	r3, [r7]
    93b0:	cmp	r2, r3
    93b4:	bne	93e0 <el_line@plt+0x6f2c>
    93b8:	add	sp, sp, #32
    93bc:	pop	{r4, r5, r6, r7, r8, pc}
    93c0:	ldr	ip, [pc, #68]	; 940c <el_line@plt+0x6f58>
    93c4:	add	ip, pc, ip
    93c8:	b	9368 <el_line@plt+0x6eb4>
    93cc:	bl	f24c <el_line@plt+0xcd98>
    93d0:	mov	r1, r0
    93d4:	ldr	r0, [pc, #52]	; 9410 <el_line@plt+0x6f5c>
    93d8:	add	r0, pc, r0
    93dc:	bl	10980 <el_line@plt+0xe4cc>
    93e0:	bl	21e4 <__stack_chk_fail@plt>
    93e4:	bl	23ac <__errno_location@plt>
    93e8:	ldr	r0, [r0]
    93ec:	bl	1fa4 <strerror@plt>
    93f0:	mov	r1, r0
    93f4:	ldr	r0, [pc, #24]	; 9414 <el_line@plt+0x6f60>
    93f8:	add	r0, pc, r0
    93fc:	bl	10980 <el_line@plt+0xe4cc>
    9400:	andeq	r5, r2, ip, ror #20
    9404:	andeq	r0, r0, ip, lsr #4
    9408:	andeq	r0, r0, ip, ror r2
    940c:	andeq	r0, r0, ip, asr #32
    9410:	andeq	r2, r1, r0, asr #4
    9414:	andeq	r2, r1, r0, asr #4
    9418:	push	{r3, lr}
    941c:	bl	134c4 <el_line@plt+0x11010>
    9420:	mov	r0, #0
    9424:	pop	{r3, pc}
    9428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    942c:	sub	sp, sp, #24
    9430:	ldr	r7, [pc, #444]	; 95f4 <el_line@plt+0x7140>
    9434:	add	sl, sp, #16
    9438:	ldr	r3, [pc, #440]	; 95f8 <el_line@plt+0x7144>
    943c:	mov	r8, r1
    9440:	add	r7, pc, r7
    9444:	mov	r6, r0
    9448:	mov	r2, sl
    944c:	mov	r0, r1
    9450:	ldr	r9, [r7, r3]
    9454:	mov	r1, #4
    9458:	ldr	r3, [r9]
    945c:	str	r3, [sp, #20]
    9460:	bl	f728 <el_line@plt+0xd274>
    9464:	subs	ip, r0, #0
    9468:	bne	9590 <el_line@plt+0x70dc>
    946c:	ldrd	r4, [r6, #32]
    9470:	ldr	r1, [r6]
    9474:	orrs	r0, r4, r5
    9478:	ldr	r2, [sp, #16]
    947c:	bne	94cc <el_line@plt+0x7018>
    9480:	ldr	r0, [pc, #372]	; 95fc <el_line@plt+0x7148>
    9484:	add	r4, r6, #40	; 0x28
    9488:	mov	r3, #4
    948c:	ldr	r5, [r7, r0]
    9490:	str	ip, [sp]
    9494:	str	r4, [sp, #4]
    9498:	mov	r0, r5
    949c:	bl	116fc <el_line@plt+0xf248>
    94a0:	cmp	r0, #4
    94a4:	beq	94e4 <el_line@plt+0x7030>
    94a8:	bl	23ac <__errno_location@plt>
    94ac:	ldr	r0, [r0]
    94b0:	cmp	r0, #32
    94b4:	beq	94d8 <el_line@plt+0x7024>
    94b8:	bl	1fa4 <strerror@plt>
    94bc:	mov	r1, r0
    94c0:	ldr	r0, [pc, #312]	; 9600 <el_line@plt+0x714c>
    94c4:	add	r0, pc, r0
    94c8:	bl	10980 <el_line@plt+0xe4cc>
    94cc:	ldr	ip, [pc, #304]	; 9604 <el_line@plt+0x7150>
    94d0:	add	ip, pc, ip
    94d4:	b	9480 <el_line@plt+0x6fcc>
    94d8:	ldr	r0, [pc, #296]	; 9608 <el_line@plt+0x7154>
    94dc:	add	r0, pc, r0
    94e0:	bl	10980 <el_line@plt+0xe4cc>
    94e4:	mov	r0, r8
    94e8:	add	r1, sp, #12
    94ec:	bl	fbf4 <el_line@plt+0xd740>
    94f0:	cmp	r0, #0
    94f4:	bne	95d4 <el_line@plt+0x7120>
    94f8:	ldr	r1, [sp, #12]
    94fc:	cmp	r1, #262144	; 0x40000
    9500:	bhi	95c8 <el_line@plt+0x7114>
    9504:	mov	r0, r8
    9508:	mov	r2, sl
    950c:	bl	f728 <el_line@plt+0xd274>
    9510:	subs	ip, r0, #0
    9514:	bne	95ac <el_line@plt+0x70f8>
    9518:	ldrd	r2, [r6, #32]
    951c:	ldr	r1, [r6]
    9520:	orrs	r0, r2, r3
    9524:	ldr	r2, [sp, #16]
    9528:	ldr	r3, [sp, #12]
    952c:	moveq	r0, ip
    9530:	ldrne	r0, [pc, #212]	; 960c <el_line@plt+0x7158>
    9534:	addne	r0, pc, r0
    9538:	str	r0, [sp]
    953c:	mov	r0, r5
    9540:	str	r4, [sp, #4]
    9544:	bl	116fc <el_line@plt+0xf248>
    9548:	ldr	r3, [sp, #12]
    954c:	cmp	r0, r3
    9550:	beq	9578 <el_line@plt+0x70c4>
    9554:	bl	23ac <__errno_location@plt>
    9558:	ldr	r0, [r0]
    955c:	cmp	r0, #32
    9560:	beq	94d8 <el_line@plt+0x7024>
    9564:	bl	1fa4 <strerror@plt>
    9568:	mov	r1, r0
    956c:	ldr	r0, [pc, #156]	; 9610 <el_line@plt+0x715c>
    9570:	add	r0, pc, r0
    9574:	bl	10980 <el_line@plt+0xe4cc>
    9578:	ldr	r2, [sp, #20]
    957c:	ldr	r3, [r9]
    9580:	cmp	r2, r3
    9584:	bne	95f0 <el_line@plt+0x713c>
    9588:	add	sp, sp, #24
    958c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    9590:	bl	e4c8 <el_line@plt+0xc014>
    9594:	ldr	r1, [pc, #120]	; 9614 <el_line@plt+0x7160>
    9598:	add	r1, pc, r1
    959c:	mov	r2, r0
    95a0:	ldr	r0, [pc, #112]	; 9618 <el_line@plt+0x7164>
    95a4:	add	r0, pc, r0
    95a8:	bl	10980 <el_line@plt+0xe4cc>
    95ac:	bl	e4c8 <el_line@plt+0xc014>
    95b0:	ldr	r1, [pc, #100]	; 961c <el_line@plt+0x7168>
    95b4:	add	r1, pc, r1
    95b8:	mov	r2, r0
    95bc:	ldr	r0, [pc, #92]	; 9620 <el_line@plt+0x716c>
    95c0:	add	r0, pc, r0
    95c4:	bl	10980 <el_line@plt+0xe4cc>
    95c8:	ldr	r0, [pc, #84]	; 9624 <el_line@plt+0x7170>
    95cc:	add	r0, pc, r0
    95d0:	bl	10980 <el_line@plt+0xe4cc>
    95d4:	bl	e4c8 <el_line@plt+0xc014>
    95d8:	ldr	r1, [pc, #72]	; 9628 <el_line@plt+0x7174>
    95dc:	add	r1, pc, r1
    95e0:	mov	r2, r0
    95e4:	ldr	r0, [pc, #64]	; 962c <el_line@plt+0x7178>
    95e8:	add	r0, pc, r0
    95ec:	bl	10980 <el_line@plt+0xe4cc>
    95f0:	bl	21e4 <__stack_chk_fail@plt>
    95f4:	andeq	r5, r2, r4, lsr #18
    95f8:	andeq	r0, r0, ip, lsr #4
    95fc:	andeq	r0, r0, r4, asr #4
    9600:			; <UNDEFINED> instruction: 0x000121bc
    9604:			; <UNDEFINED> instruction: 0xffffff40
    9608:	muleq	r1, r0, r1
    960c:			; <UNDEFINED> instruction: 0xfffffedc
    9610:	andeq	r2, r1, ip, asr #2
    9614:	andeq	r1, r1, r4, ror pc
    9618:	strheq	r2, [r1], -r0
    961c:	andeq	r1, r1, r8, asr pc
    9620:	muleq	r1, r4, r0
    9624:	ldrdeq	r2, [r1], -r0
    9628:	andeq	r1, r1, r0, lsr pc
    962c:	andeq	r2, r1, ip, rrx
    9630:	ldr	r3, [pc, #316]	; 9774 <el_line@plt+0x72c0>
    9634:	ldr	ip, [pc, #316]	; 9778 <el_line@plt+0x72c4>
    9638:	add	r3, pc, r3
    963c:	push	{r4, r5, r6, r7, lr}
    9640:	sub	sp, sp, #20
    9644:	ldr	r5, [r3, ip]
    9648:	mov	r7, r0
    964c:	mov	r6, r1
    9650:	ldr	r3, [r5]
    9654:	str	r3, [sp, #12]
    9658:	bl	e9c4 <el_line@plt+0xc510>
    965c:	subs	r4, r0, #0
    9660:	beq	975c <el_line@plt+0x72a8>
    9664:	mov	r0, r7
    9668:	mov	r1, r4
    966c:	bl	9428 <el_line@plt+0x6f74>
    9670:	mov	r0, r4
    9674:	add	r1, sp, #3
    9678:	bl	fca0 <el_line@plt+0xd7ec>
    967c:	cmp	r0, #0
    9680:	bne	96f8 <el_line@plt+0x7244>
    9684:	mov	r0, r4
    9688:	add	r1, sp, #4
    968c:	bl	fbf4 <el_line@plt+0xd740>
    9690:	cmp	r0, #0
    9694:	bne	96f8 <el_line@plt+0x7244>
    9698:	ldr	r1, [sp, #4]
    969c:	cmp	r1, r6
    96a0:	bne	973c <el_line@plt+0x7288>
    96a4:	ldrb	r2, [sp, #3]
    96a8:	cmp	r2, #101	; 0x65
    96ac:	bne	974c <el_line@plt+0x7298>
    96b0:	mov	r0, r4
    96b4:	add	r1, sp, #8
    96b8:	bl	fbf4 <el_line@plt+0xd740>
    96bc:	cmp	r0, #0
    96c0:	bne	971c <el_line@plt+0x7268>
    96c4:	mov	r0, r4
    96c8:	bl	ec5c <el_line@plt+0xc7a8>
    96cc:	ldr	r0, [pc, #168]	; 977c <el_line@plt+0x72c8>
    96d0:	ldr	r1, [sp, #8]
    96d4:	add	r0, pc, r0
    96d8:	bl	1148c <el_line@plt+0xefd8>
    96dc:	ldr	r2, [sp, #12]
    96e0:	ldr	r3, [r5]
    96e4:	ldr	r0, [sp, #8]
    96e8:	cmp	r2, r3
    96ec:	bne	9718 <el_line@plt+0x7264>
    96f0:	add	sp, sp, #20
    96f4:	pop	{r4, r5, r6, r7, pc}
    96f8:	bl	e4c8 <el_line@plt+0xc014>
    96fc:	ldr	r1, [pc, #124]	; 9780 <el_line@plt+0x72cc>
    9700:	add	r1, pc, r1
    9704:	add	r1, r1, #8
    9708:	mov	r2, r0
    970c:	ldr	r0, [pc, #112]	; 9784 <el_line@plt+0x72d0>
    9710:	add	r0, pc, r0
    9714:	bl	10980 <el_line@plt+0xe4cc>
    9718:	bl	21e4 <__stack_chk_fail@plt>
    971c:	bl	e4c8 <el_line@plt+0xc014>
    9720:	ldr	r1, [pc, #96]	; 9788 <el_line@plt+0x72d4>
    9724:	add	r1, pc, r1
    9728:	add	r1, r1, #8
    972c:	mov	r2, r0
    9730:	ldr	r0, [pc, #84]	; 978c <el_line@plt+0x72d8>
    9734:	add	r0, pc, r0
    9738:	bl	10980 <el_line@plt+0xe4cc>
    973c:	ldr	r0, [pc, #76]	; 9790 <el_line@plt+0x72dc>
    9740:	mov	r2, r6
    9744:	add	r0, pc, r0
    9748:	bl	10980 <el_line@plt+0xe4cc>
    974c:	ldr	r0, [pc, #64]	; 9794 <el_line@plt+0x72e0>
    9750:	mov	r1, #101	; 0x65
    9754:	add	r0, pc, r0
    9758:	bl	10980 <el_line@plt+0xe4cc>
    975c:	ldr	r1, [pc, #52]	; 9798 <el_line@plt+0x72e4>
    9760:	ldr	r0, [pc, #52]	; 979c <el_line@plt+0x72e8>
    9764:	add	r1, pc, r1
    9768:	add	r0, pc, r0
    976c:	add	r1, r1, #8
    9770:	bl	10980 <el_line@plt+0xe4cc>
    9774:	andeq	r5, r2, ip, lsr #14
    9778:	andeq	r0, r0, ip, lsr #4
    977c:	andeq	r2, r1, ip, lsr r0
    9780:	andeq	r1, r1, ip, lsl #28
    9784:	andeq	r1, r1, r4, asr #30
    9788:	andeq	r1, r1, r8, ror #27
    978c:	andeq	r1, r1, r0, lsr #30
    9790:	andeq	r2, r1, r4
    9794:	muleq	r1, r0, pc	; <UNPREDICTABLE>
    9798:	andeq	r1, r1, r8, lsr #27
    979c:	andeq	r1, r1, r4, ror #30
    97a0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    97a4:	mov	r7, r0
    97a8:	mov	r5, r1
    97ac:	mov	r6, r2
    97b0:	mov	r9, r3
    97b4:	ldr	r8, [sp, #32]
    97b8:	bl	e9c4 <el_line@plt+0xc510>
    97bc:	subs	r4, r0, #0
    97c0:	beq	9850 <el_line@plt+0x739c>
    97c4:	uxtb	r1, r6
    97c8:	bl	104b0 <el_line@plt+0xdffc>
    97cc:	cmp	r0, #0
    97d0:	bne	9830 <el_line@plt+0x737c>
    97d4:	mov	r0, r4
    97d8:	mov	r1, r5
    97dc:	bl	103b0 <el_line@plt+0xdefc>
    97e0:	cmp	r0, #0
    97e4:	bne	9830 <el_line@plt+0x737c>
    97e8:	mov	r1, r9
    97ec:	mov	r2, r8
    97f0:	mov	r0, r4
    97f4:	bl	10514 <el_line@plt+0xe060>
    97f8:	cmp	r0, #0
    97fc:	bne	9830 <el_line@plt+0x737c>
    9800:	mov	r0, r7
    9804:	mov	r1, r4
    9808:	bl	92e0 <el_line@plt+0x6e2c>
    980c:	ldr	r0, [pc, #84]	; 9868 <el_line@plt+0x73b4>
    9810:	ldr	r1, [r7, #4]
    9814:	mov	r2, r6
    9818:	mov	r3, r5
    981c:	add	r0, pc, r0
    9820:	bl	1148c <el_line@plt+0xefd8>
    9824:	mov	r0, r4
    9828:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
    982c:	b	ec5c <el_line@plt+0xc7a8>
    9830:	bl	e4c8 <el_line@plt+0xc014>
    9834:	ldr	r1, [pc, #48]	; 986c <el_line@plt+0x73b8>
    9838:	add	r1, pc, r1
    983c:	add	r1, r1, #20
    9840:	mov	r2, r0
    9844:	ldr	r0, [pc, #36]	; 9870 <el_line@plt+0x73bc>
    9848:	add	r0, pc, r0
    984c:	bl	10980 <el_line@plt+0xe4cc>
    9850:	ldr	r1, [pc, #28]	; 9874 <el_line@plt+0x73c0>
    9854:	ldr	r0, [pc, #28]	; 9878 <el_line@plt+0x73c4>
    9858:	add	r1, pc, r1
    985c:	add	r0, pc, r0
    9860:	add	r1, r1, #20
    9864:	bl	10980 <el_line@plt+0xe4cc>
    9868:	andeq	r1, r1, r8, lsl #30
    986c:	ldrdeq	r1, [r1], -r4
    9870:	andeq	r1, r1, ip, lsl #28
    9874:			; <UNDEFINED> instruction: 0x00011cb4
    9878:	andeq	r1, r1, r0, ror lr
    987c:	ldr	ip, [pc, #536]	; 9a9c <el_line@plt+0x75e8>
    9880:	push	{r3}		; (str r3, [sp, #-4]!)
    9884:	add	ip, pc, ip
    9888:	ldr	r3, [pc, #528]	; 9aa0 <el_line@plt+0x75ec>
    988c:	push	{r4, r5, r6, r7, r8, r9, lr}
    9890:	sub	sp, sp, #288	; 0x120
    9894:	ldr	r5, [ip, r3]
    9898:	add	lr, sp, #320	; 0x140
    989c:	ldr	r7, [sp, #316]	; 0x13c
    98a0:	mov	r6, r0
    98a4:	mov	r9, r1
    98a8:	mov	r8, r2
    98ac:	ldr	r3, [r5]
    98b0:	cmp	r7, #0
    98b4:	str	lr, [sp, #24]
    98b8:	str	r3, [sp, #284]	; 0x11c
    98bc:	beq	98d8 <el_line@plt+0x7424>
    98c0:	mov	r1, #256	; 0x100
    98c4:	stm	sp, {r7, lr}
    98c8:	mov	r3, r1
    98cc:	add	r0, sp, #28
    98d0:	mov	r2, #1
    98d4:	bl	1fb0 <__vsnprintf_chk@plt>
    98d8:	bl	e9c4 <el_line@plt+0xc510>
    98dc:	subs	r4, r0, #0
    98e0:	beq	99ec <el_line@plt+0x7538>
    98e4:	mov	r0, r6
    98e8:	mov	r1, r4
    98ec:	add	r6, sp, #16
    98f0:	bl	9428 <el_line@plt+0x6f74>
    98f4:	sub	r1, r6, #1
    98f8:	mov	r0, r4
    98fc:	bl	fca0 <el_line@plt+0xd7ec>
    9900:	cmp	r0, #0
    9904:	bne	99cc <el_line@plt+0x7518>
    9908:	mov	r1, r6
    990c:	mov	r0, r4
    9910:	bl	fbf4 <el_line@plt+0xd740>
    9914:	cmp	r0, #0
    9918:	bne	99cc <el_line@plt+0x7518>
    991c:	ldr	r2, [sp, #16]
    9920:	cmp	r2, r9
    9924:	bne	9a04 <el_line@plt+0x7550>
    9928:	ldrb	r3, [sp, #15]
    992c:	cmp	r3, #101	; 0x65
    9930:	beq	9980 <el_line@plt+0x74cc>
    9934:	cmp	r3, #102	; 0x66
    9938:	bne	9a20 <el_line@plt+0x756c>
    993c:	mov	r2, r8
    9940:	mov	r0, r4
    9944:	add	r1, sp, #20
    9948:	bl	fe38 <el_line@plt+0xd984>
    994c:	cmp	r0, #0
    9950:	bne	9a3c <el_line@plt+0x7588>
    9954:	mov	r0, r4
    9958:	bl	ec5c <el_line@plt+0xc7a8>
    995c:	ldr	r0, [sp, #20]
    9960:	ldr	r2, [sp, #284]	; 0x11c
    9964:	ldr	r3, [r5]
    9968:	cmp	r2, r3
    996c:	bne	99c8 <el_line@plt+0x7514>
    9970:	add	sp, sp, #288	; 0x120
    9974:	pop	{r4, r5, r6, r7, r8, r9, lr}
    9978:	add	sp, sp, #4
    997c:	bx	lr
    9980:	mov	r0, r4
    9984:	add	r1, sp, #20
    9988:	bl	fbf4 <el_line@plt+0xd740>
    998c:	cmp	r0, #0
    9990:	bne	9a6c <el_line@plt+0x75b8>
    9994:	cmp	r7, #0
    9998:	beq	99b8 <el_line@plt+0x7504>
    999c:	ldr	r0, [sp, #20]
    99a0:	bl	df2c <el_line@plt+0xba78>
    99a4:	add	r1, sp, #28
    99a8:	mov	r2, r0
    99ac:	ldr	r0, [pc, #240]	; 9aa4 <el_line@plt+0x75f0>
    99b0:	add	r0, pc, r0
    99b4:	bl	11238 <el_line@plt+0xed84>
    99b8:	mov	r0, r4
    99bc:	bl	ec5c <el_line@plt+0xc7a8>
    99c0:	mov	r0, #0
    99c4:	b	9960 <el_line@plt+0x74ac>
    99c8:	bl	21e4 <__stack_chk_fail@plt>
    99cc:	bl	e4c8 <el_line@plt+0xc014>
    99d0:	ldr	r1, [pc, #208]	; 9aa8 <el_line@plt+0x75f4>
    99d4:	add	r1, pc, r1
    99d8:	add	r1, r1, #40	; 0x28
    99dc:	mov	r2, r0
    99e0:	ldr	r0, [pc, #196]	; 9aac <el_line@plt+0x75f8>
    99e4:	add	r0, pc, r0
    99e8:	bl	10980 <el_line@plt+0xe4cc>
    99ec:	ldr	r1, [pc, #188]	; 9ab0 <el_line@plt+0x75fc>
    99f0:	ldr	r0, [pc, #188]	; 9ab4 <el_line@plt+0x7600>
    99f4:	add	r1, pc, r1
    99f8:	add	r0, pc, r0
    99fc:	add	r1, r1, #40	; 0x28
    9a00:	bl	10980 <el_line@plt+0xe4cc>
    9a04:	cmp	r7, #0
    9a08:	addne	r1, sp, #28
    9a0c:	beq	9a5c <el_line@plt+0x75a8>
    9a10:	ldr	r0, [pc, #160]	; 9ab8 <el_line@plt+0x7604>
    9a14:	mov	r3, r9
    9a18:	add	r0, pc, r0
    9a1c:	bl	10980 <el_line@plt+0xe4cc>
    9a20:	cmp	r7, #0
    9a24:	addne	r1, sp, #28
    9a28:	beq	9a8c <el_line@plt+0x75d8>
    9a2c:	ldr	r0, [pc, #136]	; 9abc <el_line@plt+0x7608>
    9a30:	mov	r2, #102	; 0x66
    9a34:	add	r0, pc, r0
    9a38:	bl	10980 <el_line@plt+0xe4cc>
    9a3c:	bl	e4c8 <el_line@plt+0xc014>
    9a40:	ldr	r1, [pc, #120]	; 9ac0 <el_line@plt+0x760c>
    9a44:	add	r1, pc, r1
    9a48:	add	r1, r1, #40	; 0x28
    9a4c:	mov	r2, r0
    9a50:	ldr	r0, [pc, #108]	; 9ac4 <el_line@plt+0x7610>
    9a54:	add	r0, pc, r0
    9a58:	bl	10980 <el_line@plt+0xe4cc>
    9a5c:	ldr	r1, [pc, #100]	; 9ac8 <el_line@plt+0x7614>
    9a60:	add	r1, pc, r1
    9a64:	add	r1, r1, #40	; 0x28
    9a68:	b	9a10 <el_line@plt+0x755c>
    9a6c:	bl	e4c8 <el_line@plt+0xc014>
    9a70:	ldr	r1, [pc, #84]	; 9acc <el_line@plt+0x7618>
    9a74:	add	r1, pc, r1
    9a78:	add	r1, r1, #40	; 0x28
    9a7c:	mov	r2, r0
    9a80:	ldr	r0, [pc, #72]	; 9ad0 <el_line@plt+0x761c>
    9a84:	add	r0, pc, r0
    9a88:	bl	10980 <el_line@plt+0xe4cc>
    9a8c:	ldr	r1, [pc, #64]	; 9ad4 <el_line@plt+0x7620>
    9a90:	add	r1, pc, r1
    9a94:	add	r1, r1, #40	; 0x28
    9a98:	b	9a2c <el_line@plt+0x7578>
    9a9c:	andeq	r5, r2, r0, ror #9
    9aa0:	andeq	r0, r0, ip, lsr #4
    9aa4:			; <UNDEFINED> instruction: 0x00011db0
    9aa8:	andeq	r1, r1, r8, lsr fp
    9aac:	andeq	r1, r1, r0, ror ip
    9ab0:	andeq	r1, r1, r8, lsl fp
    9ab4:	ldrdeq	r1, [r1], -r4
    9ab8:	andeq	r1, r1, ip, lsr #26
    9abc:	andeq	r1, r1, r4, lsr sp
    9ac0:	andeq	r1, r1, r8, asr #21
    9ac4:	andeq	r1, r1, r0, lsl #24
    9ac8:	andeq	r1, r1, ip, lsr #21
    9acc:	muleq	r1, r8, sl
    9ad0:	ldrdeq	r1, [r1], -r0
    9ad4:	andeq	r1, r1, ip, ror sl
    9ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9adc:	mov	r7, r0
    9ae0:	mov	r5, r1
    9ae4:	mov	r6, r2
    9ae8:	mov	sl, r3
    9aec:	ldr	r9, [sp, #32]
    9af0:	ldr	r8, [sp, #36]	; 0x24
    9af4:	bl	e9c4 <el_line@plt+0xc510>
    9af8:	subs	r4, r0, #0
    9afc:	beq	9ba0 <el_line@plt+0x76ec>
    9b00:	uxtb	r1, r6
    9b04:	bl	104b0 <el_line@plt+0xdffc>
    9b08:	cmp	r0, #0
    9b0c:	bne	9b80 <el_line@plt+0x76cc>
    9b10:	mov	r0, r4
    9b14:	mov	r1, r5
    9b18:	bl	103b0 <el_line@plt+0xdefc>
    9b1c:	cmp	r0, #0
    9b20:	bne	9b80 <el_line@plt+0x76cc>
    9b24:	mov	r1, sl
    9b28:	mov	r2, r9
    9b2c:	mov	r0, r4
    9b30:	bl	10514 <el_line@plt+0xe060>
    9b34:	cmp	r0, #0
    9b38:	bne	9b80 <el_line@plt+0x76cc>
    9b3c:	mov	r1, r8
    9b40:	mov	r0, r4
    9b44:	bl	de5c <el_line@plt+0xb9a8>
    9b48:	cmp	r0, #0
    9b4c:	bne	9b80 <el_line@plt+0x76cc>
    9b50:	mov	r0, r7
    9b54:	mov	r1, r4
    9b58:	bl	92e0 <el_line@plt+0x6e2c>
    9b5c:	ldr	r0, [pc, #84]	; 9bb8 <el_line@plt+0x7704>
    9b60:	ldr	r1, [r7, #4]
    9b64:	mov	r2, r6
    9b68:	mov	r3, r5
    9b6c:	add	r0, pc, r0
    9b70:	bl	1148c <el_line@plt+0xefd8>
    9b74:	mov	r0, r4
    9b78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9b7c:	b	ec5c <el_line@plt+0xc7a8>
    9b80:	bl	e4c8 <el_line@plt+0xc014>
    9b84:	ldr	r1, [pc, #48]	; 9bbc <el_line@plt+0x7708>
    9b88:	add	r1, pc, r1
    9b8c:	add	r1, r1, #52	; 0x34
    9b90:	mov	r2, r0
    9b94:	ldr	r0, [pc, #36]	; 9bc0 <el_line@plt+0x770c>
    9b98:	add	r0, pc, r0
    9b9c:	bl	10980 <el_line@plt+0xe4cc>
    9ba0:	ldr	r1, [pc, #28]	; 9bc4 <el_line@plt+0x7710>
    9ba4:	ldr	r0, [pc, #28]	; 9bc8 <el_line@plt+0x7714>
    9ba8:	add	r1, pc, r1
    9bac:	add	r0, pc, r0
    9bb0:	add	r1, r1, #52	; 0x34
    9bb4:	bl	10980 <el_line@plt+0xe4cc>
    9bb8:			; <UNDEFINED> instruction: 0x00011bb8
    9bbc:	andeq	r1, r1, r4, lsl #19
    9bc0:			; <UNDEFINED> instruction: 0x00011abc
    9bc4:	andeq	r1, r1, r4, ror #18
    9bc8:	andeq	r1, r1, r0, lsr #22
    9bcc:	ldr	r3, [pc, #484]	; 9db8 <el_line@plt+0x7904>
    9bd0:	ldr	ip, [pc, #484]	; 9dbc <el_line@plt+0x7908>
    9bd4:	add	r3, pc, r3
    9bd8:	push	{r4, r5, r6, r7, r8, lr}
    9bdc:	sub	sp, sp, #16
    9be0:	ldr	r5, [r3, ip]
    9be4:	mov	r7, r0
    9be8:	mov	r8, r1
    9bec:	mov	r6, r2
    9bf0:	ldr	r3, [r5]
    9bf4:	str	r3, [sp, #12]
    9bf8:	bl	e9c4 <el_line@plt+0xc510>
    9bfc:	subs	r4, r0, #0
    9c00:	beq	9d60 <el_line@plt+0x78ac>
    9c04:	mov	r0, r7
    9c08:	mov	r1, r4
    9c0c:	bl	9428 <el_line@plt+0x6f74>
    9c10:	mov	r0, r4
    9c14:	add	r1, sp, #3
    9c18:	bl	fca0 <el_line@plt+0xd7ec>
    9c1c:	subs	r7, r0, #0
    9c20:	bne	9d38 <el_line@plt+0x7884>
    9c24:	mov	r0, r4
    9c28:	add	r1, sp, #4
    9c2c:	bl	fbf4 <el_line@plt+0xd740>
    9c30:	subs	r7, r0, #0
    9c34:	bne	9d38 <el_line@plt+0x7884>
    9c38:	ldr	r0, [pc, #384]	; 9dc0 <el_line@plt+0x790c>
    9c3c:	ldrb	r1, [sp, #3]
    9c40:	add	r0, pc, r0
    9c44:	ldr	r2, [sp, #4]
    9c48:	bl	1148c <el_line@plt+0xefd8>
    9c4c:	ldr	r1, [sp, #4]
    9c50:	cmp	r1, r8
    9c54:	bne	9d78 <el_line@plt+0x78c4>
    9c58:	ldrb	r2, [sp, #3]
    9c5c:	cmp	r2, #101	; 0x65
    9c60:	beq	9cac <el_line@plt+0x77f8>
    9c64:	cmp	r2, #105	; 0x69
    9c68:	bne	9d88 <el_line@plt+0x78d4>
    9c6c:	ldr	r6, [pc, #336]	; 9dc4 <el_line@plt+0x7910>
    9c70:	mov	r0, r4
    9c74:	add	r6, pc, r6
    9c78:	mov	r1, r6
    9c7c:	bl	dc4c <el_line@plt+0xb798>
    9c80:	cmp	r0, #0
    9c84:	bne	9cf0 <el_line@plt+0x783c>
    9c88:	mov	r0, r4
    9c8c:	bl	ec5c <el_line@plt+0xc7a8>
    9c90:	mov	r0, r6
    9c94:	ldr	r2, [sp, #12]
    9c98:	ldr	r3, [r5]
    9c9c:	cmp	r2, r3
    9ca0:	bne	9d5c <el_line@plt+0x78a8>
    9ca4:	add	sp, sp, #16
    9ca8:	pop	{r4, r5, r6, r7, r8, pc}
    9cac:	mov	r0, r4
    9cb0:	add	r1, sp, #8
    9cb4:	bl	fbf4 <el_line@plt+0xd740>
    9cb8:	cmp	r0, #0
    9cbc:	bne	9d98 <el_line@plt+0x78e4>
    9cc0:	cmp	r6, #0
    9cc4:	ldr	r0, [sp, #8]
    9cc8:	beq	9d20 <el_line@plt+0x786c>
    9ccc:	bl	df2c <el_line@plt+0xba78>
    9cd0:	mov	r1, r0
    9cd4:	ldr	r0, [pc, #236]	; 9dc8 <el_line@plt+0x7914>
    9cd8:	add	r0, pc, r0
    9cdc:	bl	113bc <el_line@plt+0xef08>
    9ce0:	mov	r0, r4
    9ce4:	bl	ec5c <el_line@plt+0xc7a8>
    9ce8:	mov	r0, #0
    9cec:	b	9c94 <el_line@plt+0x77e0>
    9cf0:	bl	e4c8 <el_line@plt+0xc014>
    9cf4:	ldr	r1, [pc, #208]	; 9dcc <el_line@plt+0x7918>
    9cf8:	add	r1, pc, r1
    9cfc:	add	r1, r1, #80	; 0x50
    9d00:	mov	r2, r0
    9d04:	ldr	r0, [pc, #196]	; 9dd0 <el_line@plt+0x791c>
    9d08:	add	r0, pc, r0
    9d0c:	bl	11238 <el_line@plt+0xed84>
    9d10:	mov	r0, r4
    9d14:	bl	ec5c <el_line@plt+0xc7a8>
    9d18:	mov	r0, r7
    9d1c:	b	9c94 <el_line@plt+0x77e0>
    9d20:	bl	df2c <el_line@plt+0xba78>
    9d24:	mov	r1, r0
    9d28:	ldr	r0, [pc, #164]	; 9dd4 <el_line@plt+0x7920>
    9d2c:	add	r0, pc, r0
    9d30:	bl	11238 <el_line@plt+0xed84>
    9d34:	b	9ce0 <el_line@plt+0x782c>
    9d38:	mov	r0, r7
    9d3c:	bl	e4c8 <el_line@plt+0xc014>
    9d40:	ldr	r1, [pc, #144]	; 9dd8 <el_line@plt+0x7924>
    9d44:	add	r1, pc, r1
    9d48:	add	r1, r1, #80	; 0x50
    9d4c:	mov	r2, r0
    9d50:	ldr	r0, [pc, #132]	; 9ddc <el_line@plt+0x7928>
    9d54:	add	r0, pc, r0
    9d58:	bl	10980 <el_line@plt+0xe4cc>
    9d5c:	bl	21e4 <__stack_chk_fail@plt>
    9d60:	ldr	r1, [pc, #120]	; 9de0 <el_line@plt+0x792c>
    9d64:	ldr	r0, [pc, #120]	; 9de4 <el_line@plt+0x7930>
    9d68:	add	r1, pc, r1
    9d6c:	add	r0, pc, r0
    9d70:	add	r1, r1, #80	; 0x50
    9d74:	bl	10980 <el_line@plt+0xe4cc>
    9d78:	ldr	r0, [pc, #104]	; 9de8 <el_line@plt+0x7934>
    9d7c:	mov	r2, r8
    9d80:	add	r0, pc, r0
    9d84:	bl	10980 <el_line@plt+0xe4cc>
    9d88:	ldr	r0, [pc, #92]	; 9dec <el_line@plt+0x7938>
    9d8c:	mov	r1, #105	; 0x69
    9d90:	add	r0, pc, r0
    9d94:	bl	10980 <el_line@plt+0xe4cc>
    9d98:	bl	e4c8 <el_line@plt+0xc014>
    9d9c:	ldr	r1, [pc, #76]	; 9df0 <el_line@plt+0x793c>
    9da0:	add	r1, pc, r1
    9da4:	add	r1, r1, #80	; 0x50
    9da8:	mov	r2, r0
    9dac:	ldr	r0, [pc, #64]	; 9df4 <el_line@plt+0x7940>
    9db0:	add	r0, pc, r0
    9db4:	bl	10980 <el_line@plt+0xe4cc>
    9db8:	muleq	r2, r0, r1
    9dbc:	andeq	r0, r0, ip, lsr #4
    9dc0:	andeq	r1, r1, r8, asr fp
    9dc4:	andeq	r7, r2, ip, asr #13
    9dc8:	andeq	r1, r1, r0, ror #21
    9dcc:	andeq	r1, r1, r4, lsl r8
    9dd0:	strdeq	r1, [r1], -ip
    9dd4:	andeq	r1, r1, ip, lsl #21
    9dd8:	andeq	r1, r1, r8, asr #15
    9ddc:	andeq	r1, r1, r0, lsl #18
    9de0:	andeq	r1, r1, r4, lsr #15
    9de4:	andeq	r1, r1, r0, ror #18
    9de8:	andeq	r1, r1, r8, asr #19
    9dec:	andeq	r1, r1, r8, asr #20
    9df0:	andeq	r1, r1, ip, ror #14
    9df4:	andeq	r1, r1, r4, lsr #17
    9df8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9dfc:	mov	fp, r0
    9e00:	mov	r7, r1
    9e04:	mov	r4, r2
    9e08:	mov	r5, r3
    9e0c:	ldr	r8, [sp, #40]	; 0x28
    9e10:	ldr	sl, [sp, #44]	; 0x2c
    9e14:	ldr	r9, [sp, #48]	; 0x30
    9e18:	bl	e9c4 <el_line@plt+0xc510>
    9e1c:	subs	r6, r0, #0
    9e20:	beq	9ecc <el_line@plt+0x7a18>
    9e24:	bl	efc0 <el_line@plt+0xcb0c>
    9e28:	mov	r0, r6
    9e2c:	mov	r1, #5
    9e30:	bl	104b0 <el_line@plt+0xdffc>
    9e34:	cmp	r0, #0
    9e38:	bne	9eac <el_line@plt+0x79f8>
    9e3c:	mov	r1, r7
    9e40:	mov	r0, r6
    9e44:	bl	103b0 <el_line@plt+0xdefc>
    9e48:	cmp	r0, #0
    9e4c:	bne	9eac <el_line@plt+0x79f8>
    9e50:	mov	r1, sl
    9e54:	mov	r2, r9
    9e58:	mov	r0, r6
    9e5c:	bl	10514 <el_line@plt+0xe060>
    9e60:	cmp	r0, #0
    9e64:	bne	9eac <el_line@plt+0x79f8>
    9e68:	mov	r2, r4
    9e6c:	mov	r3, r5
    9e70:	mov	r0, r6
    9e74:	bl	102fc <el_line@plt+0xde48>
    9e78:	cmp	r0, #0
    9e7c:	bne	9eac <el_line@plt+0x79f8>
    9e80:	mov	r1, r8
    9e84:	mov	r0, r6
    9e88:	bl	103b0 <el_line@plt+0xdefc>
    9e8c:	cmp	r0, #0
    9e90:	bne	9eac <el_line@plt+0x79f8>
    9e94:	mov	r0, fp
    9e98:	mov	r1, r6
    9e9c:	bl	92e0 <el_line@plt+0x6e2c>
    9ea0:	mov	r0, r6
    9ea4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ea8:	b	ec5c <el_line@plt+0xc7a8>
    9eac:	bl	e4c8 <el_line@plt+0xc014>
    9eb0:	ldr	r1, [pc, #44]	; 9ee4 <el_line@plt+0x7a30>
    9eb4:	add	r1, pc, r1
    9eb8:	add	r1, r1, #96	; 0x60
    9ebc:	mov	r2, r0
    9ec0:	ldr	r0, [pc, #32]	; 9ee8 <el_line@plt+0x7a34>
    9ec4:	add	r0, pc, r0
    9ec8:	bl	10980 <el_line@plt+0xe4cc>
    9ecc:	ldr	r1, [pc, #24]	; 9eec <el_line@plt+0x7a38>
    9ed0:	ldr	r0, [pc, #24]	; 9ef0 <el_line@plt+0x7a3c>
    9ed4:	add	r1, pc, r1
    9ed8:	add	r0, pc, r0
    9edc:	add	r1, r1, #96	; 0x60
    9ee0:	bl	10980 <el_line@plt+0xe4cc>
    9ee4:	andeq	r1, r1, r8, asr r6
    9ee8:	muleq	r1, r0, r7
    9eec:	andeq	r1, r1, r8, lsr r6
    9ef0:	strdeq	r1, [r1], -r4
    9ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ef8:	mov	r9, r3
    9efc:	ldr	lr, [pc, #1044]	; a318 <el_line@plt+0x7e64>
    9f00:	sub	sp, sp, #44	; 0x2c
    9f04:	ldr	ip, [pc, #1040]	; a31c <el_line@plt+0x7e68>
    9f08:	mov	r5, r1
    9f0c:	add	lr, pc, lr
    9f10:	mov	r7, r0
    9f14:	mov	r1, #136	; 0x88
    9f18:	mov	r0, #1
    9f1c:	ldr	ip, [lr, ip]
    9f20:	mov	r3, lr
    9f24:	mov	r8, r2
    9f28:	mov	r4, r0
    9f2c:	ldr	r3, [ip]
    9f30:	str	ip, [sp, #12]
    9f34:	str	r3, [sp, #36]	; 0x24
    9f38:	bl	11598 <el_line@plt+0xf0e4>
    9f3c:	mov	r3, #0
    9f40:	mov	r1, #0
    9f44:	mov	r6, r0
    9f48:	str	r5, [r0, #4]
    9f4c:	str	r7, [r0]
    9f50:	mov	r0, #0
    9f54:	str	r8, [r6, #8]
    9f58:	str	r9, [r6, #12]
    9f5c:	str	r3, [r6, #24]
    9f60:	strd	r0, [r6, #32]
    9f64:	str	r4, [r6, #20]
    9f68:	bl	e9c4 <el_line@plt+0xc510>
    9f6c:	subs	r5, r0, #0
    9f70:	beq	a300 <el_line@plt+0x7e4c>
    9f74:	mov	r1, r4
    9f78:	bl	104b0 <el_line@plt+0xdffc>
    9f7c:	cmp	r0, #0
    9f80:	bne	a2e0 <el_line@plt+0x7e2c>
    9f84:	mov	r0, r5
    9f88:	mov	r1, #3
    9f8c:	bl	103b0 <el_line@plt+0xdefc>
    9f90:	cmp	r0, #0
    9f94:	bne	a2e0 <el_line@plt+0x7e2c>
    9f98:	mov	r1, r5
    9f9c:	mov	r0, r6
    9fa0:	bl	92e0 <el_line@plt+0x6e2c>
    9fa4:	mov	r0, r5
    9fa8:	bl	efc0 <el_line@plt+0xcb0c>
    9fac:	mov	r0, r6
    9fb0:	mov	r1, r5
    9fb4:	bl	9428 <el_line@plt+0x6f74>
    9fb8:	mov	r0, r5
    9fbc:	add	r1, sp, #23
    9fc0:	bl	fca0 <el_line@plt+0xd7ec>
    9fc4:	subs	r4, r0, #0
    9fc8:	bne	a2bc <el_line@plt+0x7e08>
    9fcc:	ldrb	r1, [sp, #23]
    9fd0:	cmp	r1, #2
    9fd4:	bne	a22c <el_line@plt+0x7d78>
    9fd8:	mov	r0, r5
    9fdc:	add	r1, r6, #16
    9fe0:	bl	fbf4 <el_line@plt+0xd740>
    9fe4:	cmp	r0, #0
    9fe8:	bne	a29c <el_line@plt+0x7de8>
    9fec:	ldr	r0, [pc, #812]	; a320 <el_line@plt+0x7e6c>
    9ff0:	ldr	r1, [r6, #16]
    9ff4:	add	r0, pc, r0
    9ff8:	ldr	r7, [pc, #804]	; a324 <el_line@plt+0x7e70>
    9ffc:	bl	11424 <el_line@plt+0xef70>
    a000:	ldr	r8, [pc, #800]	; a328 <el_line@plt+0x7e74>
    a004:	ldr	r9, [pc, #800]	; a32c <el_line@plt+0x7e78>
    a008:	add	r7, pc, r7
    a00c:	ldr	sl, [pc, #796]	; a330 <el_line@plt+0x7e7c>
    a010:	add	r8, pc, r8
    a014:	ldr	fp, [pc, #792]	; a334 <el_line@plt+0x7e80>
    a018:	add	r9, pc, r9
    a01c:	ldr	r3, [pc, #788]	; a338 <el_line@plt+0x7e84>
    a020:	add	sl, pc, sl
    a024:	add	fp, pc, fp
    a028:	add	r3, pc, r3
    a02c:	str	r3, [sp, #8]
    a030:	b	a078 <el_line@plt+0x7bc4>
    a034:	ldr	r2, [sp, #28]
    a038:	ldrb	r3, [r2]
    a03c:	cmp	r3, #49	; 0x31
    a040:	bne	a0d0 <el_line@plt+0x7c1c>
    a044:	ldrb	r3, [r2, #1]
    a048:	cmp	r3, #0
    a04c:	bne	a0d0 <el_line@plt+0x7c1c>
    a050:	ldr	r3, [r6, #24]
    a054:	orr	r3, r3, #1
    a058:	str	r3, [r6, #24]
    a05c:	mov	r1, r4
    a060:	mov	r0, r8
    a064:	bl	11424 <el_line@plt+0xef70>
    a068:	ldr	r0, [sp, #24]
    a06c:	bl	1f20 <free@plt>
    a070:	ldr	r0, [sp, #28]
    a074:	bl	1f20 <free@plt>
    a078:	mov	r0, r5
    a07c:	bl	f24c <el_line@plt+0xcd98>
    a080:	cmp	r0, #0
    a084:	mov	r0, r5
    a088:	beq	a1d4 <el_line@plt+0x7d20>
    a08c:	add	r1, sp, #24
    a090:	mov	r2, #0
    a094:	bl	ff18 <el_line@plt+0xda64>
    a098:	cmp	r0, #0
    a09c:	bne	a27c <el_line@plt+0x7dc8>
    a0a0:	mov	r0, r5
    a0a4:	add	r1, sp, #28
    a0a8:	add	r2, sp, #32
    a0ac:	bl	fe38 <el_line@plt+0xd984>
    a0b0:	cmp	r0, #0
    a0b4:	bne	a27c <el_line@plt+0x7dc8>
    a0b8:	ldr	r4, [sp, #24]
    a0bc:	mov	r1, r7
    a0c0:	mov	r0, r4
    a0c4:	bl	2388 <strcmp@plt>
    a0c8:	cmp	r0, #0
    a0cc:	beq	a034 <el_line@plt+0x7b80>
    a0d0:	mov	r0, r4
    a0d4:	mov	r1, r9
    a0d8:	bl	2388 <strcmp@plt>
    a0dc:	cmp	r0, #0
    a0e0:	bne	a10c <el_line@plt+0x7c58>
    a0e4:	ldr	r2, [sp, #28]
    a0e8:	ldrb	r3, [r2]
    a0ec:	cmp	r3, #50	; 0x32
    a0f0:	bne	a10c <el_line@plt+0x7c58>
    a0f4:	ldrb	r3, [r2, #1]
    a0f8:	cmp	r3, #0
    a0fc:	ldreq	r3, [r6, #24]
    a100:	orreq	r3, r3, #2
    a104:	streq	r3, [r6, #24]
    a108:	beq	a05c <el_line@plt+0x7ba8>
    a10c:	mov	r0, r4
    a110:	mov	r1, sl
    a114:	bl	2388 <strcmp@plt>
    a118:	cmp	r0, #0
    a11c:	bne	a148 <el_line@plt+0x7c94>
    a120:	ldr	r2, [sp, #28]
    a124:	ldrb	r3, [r2]
    a128:	cmp	r3, #50	; 0x32
    a12c:	bne	a148 <el_line@plt+0x7c94>
    a130:	ldrb	r3, [r2, #1]
    a134:	cmp	r3, #0
    a138:	ldreq	r3, [r6, #24]
    a13c:	orreq	r3, r3, #4
    a140:	streq	r3, [r6, #24]
    a144:	beq	a05c <el_line@plt+0x7ba8>
    a148:	mov	r0, r4
    a14c:	mov	r1, fp
    a150:	bl	2388 <strcmp@plt>
    a154:	cmp	r0, #0
    a158:	bne	a184 <el_line@plt+0x7cd0>
    a15c:	ldr	r2, [sp, #28]
    a160:	ldrb	r3, [r2]
    a164:	cmp	r3, #49	; 0x31
    a168:	bne	a184 <el_line@plt+0x7cd0>
    a16c:	ldrb	r3, [r2, #1]
    a170:	cmp	r3, #0
    a174:	ldreq	r3, [r6, #24]
    a178:	orreq	r3, r3, #8
    a17c:	streq	r3, [r6, #24]
    a180:	beq	a05c <el_line@plt+0x7ba8>
    a184:	mov	r0, r4
    a188:	ldr	r1, [sp, #8]
    a18c:	bl	2388 <strcmp@plt>
    a190:	cmp	r0, #0
    a194:	bne	a1c0 <el_line@plt+0x7d0c>
    a198:	ldr	r2, [sp, #28]
    a19c:	ldrb	r3, [r2]
    a1a0:	cmp	r3, #49	; 0x31
    a1a4:	bne	a1c0 <el_line@plt+0x7d0c>
    a1a8:	ldrb	r3, [r2, #1]
    a1ac:	cmp	r3, #0
    a1b0:	ldreq	r3, [r6, #24]
    a1b4:	orreq	r3, r3, #16
    a1b8:	streq	r3, [r6, #24]
    a1bc:	beq	a05c <el_line@plt+0x7ba8>
    a1c0:	ldr	r0, [pc, #372]	; a33c <el_line@plt+0x7e88>
    a1c4:	mov	r1, r4
    a1c8:	add	r0, pc, r0
    a1cc:	bl	11424 <el_line@plt+0xef70>
    a1d0:	b	a068 <el_line@plt+0x7bb4>
    a1d4:	bl	ec5c <el_line@plt+0xc7a8>
    a1d8:	ldr	r3, [r6, #16]
    a1dc:	cmp	r3, #0
    a1e0:	beq	a218 <el_line@plt+0x7d64>
    a1e4:	ldrd	r2, [sp, #80]	; 0x50
    a1e8:	orrs	r3, r2, r3
    a1ec:	ldrd	r2, [sp, #80]	; 0x50
    a1f0:	moveq	r0, r6
    a1f4:	strd	r2, [r6, #32]
    a1f8:	bne	a250 <el_line@plt+0x7d9c>
    a1fc:	ldr	r1, [sp, #12]
    a200:	ldr	r2, [sp, #36]	; 0x24
    a204:	ldr	r3, [r1]
    a208:	cmp	r2, r3
    a20c:	bne	a2dc <el_line@plt+0x7e28>
    a210:	add	sp, sp, #44	; 0x2c
    a214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a218:	ldr	r3, [r6, #8]
    a21c:	cmp	r3, #20480	; 0x5000
    a220:	movcs	r3, #20480	; 0x5000
    a224:	str	r3, [r6, #8]
    a228:	b	a1e4 <el_line@plt+0x7d30>
    a22c:	ldr	r0, [pc, #268]	; a340 <el_line@plt+0x7e8c>
    a230:	add	r0, pc, r0
    a234:	bl	11238 <el_line@plt+0xed84>
    a238:	mov	r0, r5
    a23c:	bl	ec5c <el_line@plt+0xc7a8>
    a240:	mov	r0, r6
    a244:	bl	1f20 <free@plt>
    a248:	mov	r0, r4
    a24c:	b	a1fc <el_line@plt+0x7d48>
    a250:	ldr	r1, [r6, #8]
    a254:	add	r0, r6, #40	; 0x28
    a258:	str	r1, [sp]
    a25c:	bl	13488 <el_line@plt+0x10fd4>
    a260:	ldr	r1, [r6, #8]
    a264:	ldrd	r2, [r6, #32]
    a268:	add	r0, r6, #88	; 0x58
    a26c:	str	r1, [sp]
    a270:	bl	13488 <el_line@plt+0x10fd4>
    a274:	mov	r0, r6
    a278:	b	a1fc <el_line@plt+0x7d48>
    a27c:	bl	e4c8 <el_line@plt+0xc014>
    a280:	ldr	r1, [pc, #188]	; a344 <el_line@plt+0x7e90>
    a284:	add	r1, pc, r1
    a288:	add	r1, r1, #116	; 0x74
    a28c:	mov	r2, r0
    a290:	ldr	r0, [pc, #176]	; a348 <el_line@plt+0x7e94>
    a294:	add	r0, pc, r0
    a298:	bl	10980 <el_line@plt+0xe4cc>
    a29c:	bl	e4c8 <el_line@plt+0xc014>
    a2a0:	ldr	r1, [pc, #164]	; a34c <el_line@plt+0x7e98>
    a2a4:	add	r1, pc, r1
    a2a8:	add	r1, r1, #116	; 0x74
    a2ac:	mov	r2, r0
    a2b0:	ldr	r0, [pc, #152]	; a350 <el_line@plt+0x7e9c>
    a2b4:	add	r0, pc, r0
    a2b8:	bl	10980 <el_line@plt+0xe4cc>
    a2bc:	bl	e4c8 <el_line@plt+0xc014>
    a2c0:	ldr	r1, [pc, #140]	; a354 <el_line@plt+0x7ea0>
    a2c4:	add	r1, pc, r1
    a2c8:	add	r1, r1, #116	; 0x74
    a2cc:	mov	r2, r0
    a2d0:	ldr	r0, [pc, #128]	; a358 <el_line@plt+0x7ea4>
    a2d4:	add	r0, pc, r0
    a2d8:	bl	10980 <el_line@plt+0xe4cc>
    a2dc:	bl	21e4 <__stack_chk_fail@plt>
    a2e0:	bl	e4c8 <el_line@plt+0xc014>
    a2e4:	ldr	r1, [pc, #112]	; a35c <el_line@plt+0x7ea8>
    a2e8:	add	r1, pc, r1
    a2ec:	add	r1, r1, #116	; 0x74
    a2f0:	mov	r2, r0
    a2f4:	ldr	r0, [pc, #100]	; a360 <el_line@plt+0x7eac>
    a2f8:	add	r0, pc, r0
    a2fc:	bl	10980 <el_line@plt+0xe4cc>
    a300:	ldr	r1, [pc, #92]	; a364 <el_line@plt+0x7eb0>
    a304:	ldr	r0, [pc, #92]	; a368 <el_line@plt+0x7eb4>
    a308:	add	r1, pc, r1
    a30c:	add	r0, pc, r0
    a310:	add	r1, r1, #116	; 0x74
    a314:	bl	10980 <el_line@plt+0xe4cc>
    a318:	andeq	r4, r2, r8, asr lr
    a31c:	andeq	r0, r0, ip, lsr #4
    a320:	andeq	r1, r1, r4, ror #16
    a324:	andeq	r1, r1, r4, ror #16
    a328:	ldrdeq	r1, [r1], -r0
    a32c:	andeq	r1, r1, r0, ror r8
    a330:	andeq	r1, r1, ip, ror r8
    a334:	muleq	r1, r0, r8
    a338:	andeq	r1, r1, r4, lsr #17
    a33c:	andeq	r1, r1, r4, asr #14
    a340:	strdeq	r1, [r1], -r4
    a344:	andeq	r1, r1, r8, lsl #5
    a348:	andeq	r1, r1, r0, asr #7
    a34c:	andeq	r1, r1, r8, ror #4
    a350:	andeq	r1, r1, r0, lsr #7
    a354:	andeq	r1, r1, r8, asr #4
    a358:	andeq	r1, r1, r0, lsl #7
    a35c:	andeq	r1, r1, r4, lsr #4
    a360:	andeq	r1, r1, ip, asr r3
    a364:	andeq	r1, r1, r4, lsl #4
    a368:	andeq	r1, r1, r0, asr #7
    a36c:	ldr	r0, [r0, #16]
    a370:	bx	lr
    a374:	push	{r4, r5, r6, r7, r8, lr}
    a378:	mov	r4, r0
    a37c:	mov	r8, r1
    a380:	mov	r7, r2
    a384:	bl	e9c4 <el_line@plt+0xc510>
    a388:	subs	r6, r0, #0
    a38c:	beq	a45c <el_line@plt+0x7fa8>
    a390:	ldr	r5, [r4, #20]
    a394:	mov	r1, #4
    a398:	add	r3, r5, #1
    a39c:	str	r3, [r4, #20]
    a3a0:	bl	104b0 <el_line@plt+0xdffc>
    a3a4:	cmp	r0, #0
    a3a8:	bne	a43c <el_line@plt+0x7f88>
    a3ac:	mov	r0, r6
    a3b0:	mov	r1, r5
    a3b4:	bl	103b0 <el_line@plt+0xdefc>
    a3b8:	cmp	r0, #0
    a3bc:	bne	a43c <el_line@plt+0x7f88>
    a3c0:	mov	r1, r8
    a3c4:	mov	r2, r7
    a3c8:	mov	r0, r6
    a3cc:	bl	10514 <el_line@plt+0xe060>
    a3d0:	cmp	r0, #0
    a3d4:	bne	a43c <el_line@plt+0x7f88>
    a3d8:	mov	r0, r4
    a3dc:	mov	r1, r6
    a3e0:	bl	92e0 <el_line@plt+0x6e2c>
    a3e4:	ldr	r0, [pc, #136]	; a474 <el_line@plt+0x7fc0>
    a3e8:	mov	r1, r5
    a3ec:	add	r0, pc, r0
    a3f0:	bl	1148c <el_line@plt+0xefd8>
    a3f4:	mov	r0, r4
    a3f8:	mov	r1, r5
    a3fc:	bl	9630 <el_line@plt+0x717c>
    a400:	subs	r4, r0, #0
    a404:	bne	a418 <el_line@plt+0x7f64>
    a408:	mov	r0, r6
    a40c:	bl	ec5c <el_line@plt+0xc7a8>
    a410:	mov	r0, r4
    a414:	pop	{r4, r5, r6, r7, r8, pc}
    a418:	bl	df2c <el_line@plt+0xba78>
    a41c:	mov	r1, r0
    a420:	ldr	r0, [pc, #80]	; a478 <el_line@plt+0x7fc4>
    a424:	add	r0, pc, r0
    a428:	bl	11238 <el_line@plt+0xed84>
    a42c:	mov	r0, r6
    a430:	bl	ec5c <el_line@plt+0xc7a8>
    a434:	mvn	r0, #0
    a438:	pop	{r4, r5, r6, r7, r8, pc}
    a43c:	bl	e4c8 <el_line@plt+0xc014>
    a440:	ldr	r1, [pc, #52]	; a47c <el_line@plt+0x7fc8>
    a444:	add	r1, pc, r1
    a448:	add	r1, r1, #124	; 0x7c
    a44c:	mov	r2, r0
    a450:	ldr	r0, [pc, #40]	; a480 <el_line@plt+0x7fcc>
    a454:	add	r0, pc, r0
    a458:	bl	10980 <el_line@plt+0xe4cc>
    a45c:	ldr	r1, [pc, #32]	; a484 <el_line@plt+0x7fd0>
    a460:	ldr	r0, [pc, #32]	; a488 <el_line@plt+0x7fd4>
    a464:	add	r1, pc, r1
    a468:	add	r0, pc, r0
    a46c:	add	r1, r1, #124	; 0x7c
    a470:	bl	10980 <el_line@plt+0xe4cc>
    a474:	andeq	r1, r1, r4, asr #10
    a478:	andeq	r1, r1, r0, lsr r5
    a47c:	andeq	r1, r1, r8, asr #1
    a480:	andeq	r1, r1, r0, lsl #4
    a484:	andeq	r1, r1, r8, lsr #1
    a488:	andeq	r1, r1, r4, ror #4
    a48c:	push	{r4, r5, r6, lr}
    a490:	subs	r6, r0, #0
    a494:	popeq	{r4, r5, r6, pc}
    a498:	ldr	r3, [r6]
    a49c:	cmp	r3, #0
    a4a0:	addne	r5, r6, #4
    a4a4:	movne	r4, r6
    a4a8:	beq	a4d8 <el_line@plt+0x8024>
    a4ac:	ldr	r0, [r3]
    a4b0:	bl	1f20 <free@plt>
    a4b4:	ldr	r3, [r4]
    a4b8:	ldr	r0, [r3, #4]
    a4bc:	bl	1f20 <free@plt>
    a4c0:	ldr	r0, [r4]
    a4c4:	bl	1f20 <free@plt>
    a4c8:	mov	r4, r5
    a4cc:	ldr	r3, [r5], #4
    a4d0:	cmp	r3, #0
    a4d4:	bne	a4ac <el_line@plt+0x7ff8>
    a4d8:	mov	r0, r6
    a4dc:	pop	{r4, r5, r6, lr}
    a4e0:	b	1f20 <free@plt>
    a4e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a4e8:	sub	sp, sp, #140	; 0x8c
    a4ec:	ldr	r4, [pc, #1576]	; ab1c <el_line@plt+0x8668>
    a4f0:	subs	fp, r2, #0
    a4f4:	ldr	r3, [pc, #1572]	; ab20 <el_line@plt+0x866c>
    a4f8:	add	r4, pc, r4
    a4fc:	str	r0, [sp, #28]
    a500:	str	r1, [sp, #16]
    a504:	ldr	r3, [r4, r3]
    a508:	ldr	r1, [sp, #28]
    a50c:	str	r3, [sp, #44]	; 0x2c
    a510:	ldr	r3, [r3]
    a514:	str	r3, [sp, #132]	; 0x84
    a518:	movne	r3, #0
    a51c:	strne	r3, [fp]
    a520:	ldr	r3, [r1, #20]
    a524:	add	r2, r3, #1
    a528:	str	r2, [r1, #20]
    a52c:	str	r3, [sp, #72]	; 0x48
    a530:	bl	e9c4 <el_line@plt+0xc510>
    a534:	subs	r9, r0, #0
    a538:	beq	aac0 <el_line@plt+0x860c>
    a53c:	mov	r1, #11
    a540:	bl	104b0 <el_line@plt+0xdffc>
    a544:	subs	r5, r0, #0
    a548:	bne	aa9c <el_line@plt+0x85e8>
    a54c:	mov	r0, r9
    a550:	ldr	r1, [sp, #72]	; 0x48
    a554:	bl	103b0 <el_line@plt+0xdefc>
    a558:	subs	r5, r0, #0
    a55c:	bne	aa9c <el_line@plt+0x85e8>
    a560:	mov	r0, r9
    a564:	ldr	r1, [sp, #16]
    a568:	bl	105d8 <el_line@plt+0xe124>
    a56c:	subs	r5, r0, #0
    a570:	bne	aa9c <el_line@plt+0x85e8>
    a574:	ldr	r0, [sp, #28]
    a578:	mov	r1, r9
    a57c:	bl	92e0 <el_line@plt+0x6e2c>
    a580:	ldr	r2, [sp, #16]
    a584:	ldr	r3, [pc, #1432]	; ab24 <el_line@plt+0x8670>
    a588:	ldr	r1, [sp, #72]	; 0x48
    a58c:	str	r2, [sp]
    a590:	add	r3, pc, r3
    a594:	ldr	r0, [sp, #28]
    a598:	add	r2, sp, #76	; 0x4c
    a59c:	bl	987c <el_line@plt+0x73c8>
    a5a0:	cmp	r0, #0
    a5a4:	str	r0, [sp, #36]	; 0x24
    a5a8:	beq	a8ec <el_line@plt+0x8438>
    a5ac:	cmp	fp, #0
    a5b0:	beq	a5c8 <el_line@plt+0x8114>
    a5b4:	mov	r0, #1
    a5b8:	mov	r1, #4
    a5bc:	bl	11598 <el_line@plt+0xf0e4>
    a5c0:	str	r0, [fp]
    a5c4:	str	r5, [r0]
    a5c8:	ldr	r3, [pc, #1368]	; ab28 <el_line@plt+0x8674>
    a5cc:	add	r1, sp, #67	; 0x43
    a5d0:	ldr	r2, [pc, #1364]	; ab2c <el_line@plt+0x8678>
    a5d4:	mov	r6, #0
    a5d8:	str	r1, [sp, #52]	; 0x34
    a5dc:	mov	sl, r6
    a5e0:	ldr	r1, [pc, #1352]	; ab30 <el_line@plt+0x867c>
    a5e4:	add	r2, pc, r2
    a5e8:	str	r2, [sp, #48]	; 0x30
    a5ec:	add	r1, pc, r1
    a5f0:	str	r1, [sp, #56]	; 0x38
    a5f4:	ldr	r3, [r4, r3]
    a5f8:	ldr	r4, [pc, #1332]	; ab34 <el_line@plt+0x8680>
    a5fc:	add	r4, pc, r4
    a600:	str	r4, [sp, #60]	; 0x3c
    a604:	ldr	r4, [pc, #1324]	; ab38 <el_line@plt+0x8684>
    a608:	str	r3, [sp, #40]	; 0x28
    a60c:	add	r4, pc, r4
    a610:	str	r4, [sp, #20]
    a614:	ldr	r4, [sp, #40]	; 0x28
    a618:	ldr	r3, [r4]
    a61c:	cmp	r3, #0
    a620:	bne	a914 <el_line@plt+0x8460>
    a624:	ldr	r3, [sp, #28]
    a628:	ldr	r1, [sp, #28]
    a62c:	ldr	r0, [sp, #48]	; 0x30
    a630:	ldr	r4, [r3, #20]
    a634:	add	r3, r4, #1
    a638:	str	r3, [r1, #20]
    a63c:	mov	r1, r4
    a640:	str	r4, [sp, #72]	; 0x48
    a644:	bl	1148c <el_line@plt+0xefd8>
    a648:	mov	r0, r9
    a64c:	bl	efc0 <el_line@plt+0xcb0c>
    a650:	mov	r0, r9
    a654:	mov	r1, #12
    a658:	bl	104b0 <el_line@plt+0xdffc>
    a65c:	cmp	r0, #0
    a660:	bne	aa2c <el_line@plt+0x8578>
    a664:	mov	r0, r9
    a668:	ldr	r1, [sp, #72]	; 0x48
    a66c:	bl	103b0 <el_line@plt+0xdefc>
    a670:	cmp	r0, #0
    a674:	bne	aa2c <el_line@plt+0x8578>
    a678:	mov	r0, r9
    a67c:	ldr	r1, [sp, #36]	; 0x24
    a680:	ldr	r2, [sp, #76]	; 0x4c
    a684:	bl	10514 <el_line@plt+0xe060>
    a688:	cmp	r0, #0
    a68c:	bne	aa2c <el_line@plt+0x8578>
    a690:	mov	r1, r9
    a694:	ldr	r0, [sp, #28]
    a698:	bl	92e0 <el_line@plt+0x6e2c>
    a69c:	mov	r0, r9
    a6a0:	bl	efc0 <el_line@plt+0xcb0c>
    a6a4:	ldr	r0, [sp, #28]
    a6a8:	mov	r1, r9
    a6ac:	bl	9428 <el_line@plt+0x6f74>
    a6b0:	mov	r0, r9
    a6b4:	add	r1, sp, #67	; 0x43
    a6b8:	bl	fca0 <el_line@plt+0xd7ec>
    a6bc:	cmp	r0, #0
    a6c0:	bne	aa4c <el_line@plt+0x8598>
    a6c4:	mov	r0, r9
    a6c8:	add	r1, sp, #72	; 0x48
    a6cc:	bl	fbf4 <el_line@plt+0xd740>
    a6d0:	cmp	r0, #0
    a6d4:	bne	aa4c <el_line@plt+0x8598>
    a6d8:	ldrb	r1, [sp, #67]	; 0x43
    a6dc:	ldr	r0, [sp, #56]	; 0x38
    a6e0:	ldr	r2, [sp, #72]	; 0x48
    a6e4:	bl	1148c <el_line@plt+0xefd8>
    a6e8:	ldr	r1, [sp, #72]	; 0x48
    a6ec:	cmp	r4, r1
    a6f0:	bne	aad8 <el_line@plt+0x8624>
    a6f4:	ldrb	r2, [sp, #67]	; 0x43
    a6f8:	cmp	r2, #101	; 0x65
    a6fc:	beq	a984 <el_line@plt+0x84d0>
    a700:	cmp	r2, #104	; 0x68
    a704:	bne	ab0c <el_line@plt+0x8658>
    a708:	mov	r0, r9
    a70c:	add	r1, sp, #68	; 0x44
    a710:	bl	fbf4 <el_line@plt+0xd740>
    a714:	cmp	r0, #0
    a718:	bne	aaec <el_line@plt+0x8638>
    a71c:	ldr	r1, [sp, #68]	; 0x44
    a720:	cmp	r1, #0
    a724:	beq	a914 <el_line@plt+0x8460>
    a728:	ldr	r0, [sp, #60]	; 0x3c
    a72c:	bl	1148c <el_line@plt+0xefd8>
    a730:	ldr	r3, [sp, #68]	; 0x44
    a734:	cmp	r3, #0
    a738:	beq	a614 <el_line@plt+0x8160>
    a73c:	mov	r4, #0
    a740:	add	r8, sp, #80	; 0x50
    a744:	add	r6, sp, #84	; 0x54
    a748:	add	r5, sp, #88	; 0x58
    a74c:	b	a780 <el_line@plt+0x82cc>
    a750:	ldr	r0, [sp, #20]
    a754:	mov	r1, r7
    a758:	ldr	r2, [sp, #16]
    a75c:	bl	11238 <el_line@plt+0xed84>
    a760:	ldr	r0, [sp, #80]	; 0x50
    a764:	bl	1f20 <free@plt>
    a768:	ldr	r0, [sp, #84]	; 0x54
    a76c:	bl	1f20 <free@plt>
    a770:	ldr	r3, [sp, #68]	; 0x44
    a774:	add	r4, r4, #1
    a778:	cmp	r4, r3
    a77c:	bcs	a614 <el_line@plt+0x8160>
    a780:	mov	r2, #0
    a784:	mov	r0, r9
    a788:	mov	r1, r8
    a78c:	bl	ff18 <el_line@plt+0xda64>
    a790:	subs	r2, r0, #0
    a794:	bne	aa08 <el_line@plt+0x8554>
    a798:	mov	r0, r9
    a79c:	mov	r1, r6
    a7a0:	bl	ff18 <el_line@plt+0xda64>
    a7a4:	subs	r2, r0, #0
    a7a8:	bne	aa08 <el_line@plt+0x8554>
    a7ac:	mov	r0, r9
    a7b0:	mov	r1, r5
    a7b4:	bl	dc4c <el_line@plt+0xb798>
    a7b8:	cmp	r0, #0
    a7bc:	bne	a8bc <el_line@plt+0x8408>
    a7c0:	ldr	r7, [sp, #80]	; 0x50
    a7c4:	mov	r1, #47	; 0x2f
    a7c8:	mov	r0, r7
    a7cc:	bl	2490 <strchr@plt>
    a7d0:	cmp	r0, #0
    a7d4:	bne	a750 <el_line@plt+0x829c>
    a7d8:	cmp	fp, #0
    a7dc:	moveq	r0, r7
    a7e0:	beq	a764 <el_line@plt+0x82b0>
    a7e4:	mov	r2, #4
    a7e8:	add	r1, sl, #2
    a7ec:	ldr	r0, [fp]
    a7f0:	lsl	r3, sl, #2
    a7f4:	str	r3, [sp, #32]
    a7f8:	bl	1160c <el_line@plt+0xf158>
    a7fc:	mov	r1, #48	; 0x30
    a800:	mov	r7, r0
    a804:	str	r0, [fp]
    a808:	mov	r0, #1
    a80c:	bl	11598 <el_line@plt+0xf0e4>
    a810:	str	r0, [r7, sl, lsl #2]
    a814:	ldr	r3, [fp]
    a818:	ldr	r0, [sp, #80]	; 0x50
    a81c:	ldr	r7, [r3, sl, lsl #2]
    a820:	bl	1163c <el_line@plt+0xf188>
    a824:	str	r0, [r7]
    a828:	mov	r7, r5
    a82c:	ldr	r3, [fp]
    a830:	ldr	r0, [sp, #84]	; 0x54
    a834:	ldr	r3, [r3, sl, lsl #2]
    a838:	str	r3, [sp, #12]
    a83c:	bl	1163c <el_line@plt+0xf188>
    a840:	ldr	r3, [sp, #12]
    a844:	add	r1, sp, #120	; 0x78
    a848:	str	r4, [sp, #8]
    a84c:	str	r1, [sp, #24]
    a850:	str	r0, [r3, #4]
    a854:	ldr	r3, [fp]
    a858:	ldr	lr, [r3, sl, lsl #2]
    a85c:	add	lr, lr, #8
    a860:	mov	ip, r7
    a864:	ldr	r4, [sp, #24]
    a868:	ldm	ip!, {r0, r1, r2, r3}
    a86c:	add	r7, r7, #16
    a870:	add	lr, lr, #16
    a874:	cmp	ip, r4
    a878:	str	r0, [lr, #-16]
    a87c:	str	r1, [lr, #-12]
    a880:	str	r2, [lr, #-8]
    a884:	str	r3, [lr, #-4]
    a888:	bne	a860 <el_line@plt+0x83ac>
    a88c:	ldm	r7!, {r0, r1}
    a890:	mov	r2, #0
    a894:	ldr	r4, [sp, #8]
    a898:	add	sl, sl, #1
    a89c:	str	r0, [lr]
    a8a0:	str	r1, [lr, #4]
    a8a4:	ldr	r3, [fp]
    a8a8:	ldr	r1, [sp, #32]
    a8ac:	add	r3, r3, r1
    a8b0:	str	r2, [r3, #4]
    a8b4:	ldr	r0, [sp, #80]	; 0x50
    a8b8:	b	a764 <el_line@plt+0x82b0>
    a8bc:	bl	e4c8 <el_line@plt+0xc014>
    a8c0:	ldr	r1, [pc, #628]	; ab3c <el_line@plt+0x8688>
    a8c4:	add	r1, pc, r1
    a8c8:	add	r1, r1, #136	; 0x88
    a8cc:	mov	r2, r0
    a8d0:	ldr	r0, [pc, #616]	; ab40 <el_line@plt+0x868c>
    a8d4:	add	r0, pc, r0
    a8d8:	bl	11238 <el_line@plt+0xed84>
    a8dc:	ldr	r0, [sp, #80]	; 0x50
    a8e0:	bl	1f20 <free@plt>
    a8e4:	ldr	r0, [sp, #84]	; 0x54
    a8e8:	bl	1f20 <free@plt>
    a8ec:	mov	r0, r9
    a8f0:	bl	ec5c <el_line@plt+0xc7a8>
    a8f4:	mvn	r0, #0
    a8f8:	ldr	r4, [sp, #44]	; 0x2c
    a8fc:	ldr	r2, [sp, #132]	; 0x84
    a900:	ldr	r3, [r4]
    a904:	cmp	r2, r3
    a908:	bne	aae8 <el_line@plt+0x8634>
    a90c:	add	sp, sp, #140	; 0x8c
    a910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a914:	mov	r0, r9
    a918:	bl	ec5c <el_line@plt+0xc7a8>
    a91c:	ldr	r1, [sp, #36]	; 0x24
    a920:	ldr	r2, [sp, #76]	; 0x4c
    a924:	ldr	r0, [sp, #28]
    a928:	bl	a374 <el_line@plt+0x7ec0>
    a92c:	ldr	r0, [sp, #36]	; 0x24
    a930:	bl	1f20 <free@plt>
    a934:	ldr	r4, [sp, #40]	; 0x28
    a938:	ldr	r0, [r4]
    a93c:	cmp	r0, #0
    a940:	beq	a8f8 <el_line@plt+0x8444>
    a944:	cmp	fp, #0
    a948:	moveq	r0, fp
    a94c:	beq	a8f8 <el_line@plt+0x8444>
    a950:	ldr	r0, [fp]
    a954:	cmp	r0, #0
    a958:	beq	a8f8 <el_line@plt+0x8444>
    a95c:	bl	a48c <el_line@plt+0x7fd8>
    a960:	mov	r0, #1
    a964:	mov	r1, #4
    a968:	bl	11598 <el_line@plt+0xf0e4>
    a96c:	mov	r2, #0
    a970:	mov	r3, r0
    a974:	str	r0, [fp]
    a978:	mov	r0, r2
    a97c:	str	r2, [r3]
    a980:	b	a8f8 <el_line@plt+0x8444>
    a984:	mov	r0, r9
    a988:	add	r1, sp, #88	; 0x58
    a98c:	bl	fbf4 <el_line@plt+0xd740>
    a990:	cmp	r0, #0
    a994:	bne	aa7c <el_line@plt+0x85c8>
    a998:	ldr	r0, [pc, #420]	; ab44 <el_line@plt+0x8690>
    a99c:	ldr	r1, [sp, #88]	; 0x58
    a9a0:	add	r0, pc, r0
    a9a4:	bl	1148c <el_line@plt+0xefd8>
    a9a8:	ldr	r0, [sp, #88]	; 0x58
    a9ac:	cmp	r0, #1
    a9b0:	beq	a914 <el_line@plt+0x8460>
    a9b4:	bl	df2c <el_line@plt+0xba78>
    a9b8:	mov	r1, r0
    a9bc:	ldr	r0, [pc, #388]	; ab48 <el_line@plt+0x8694>
    a9c0:	add	r0, pc, r0
    a9c4:	bl	11238 <el_line@plt+0xed84>
    a9c8:	mov	r0, r9
    a9cc:	bl	ec5c <el_line@plt+0xc7a8>
    a9d0:	ldr	r1, [sp, #36]	; 0x24
    a9d4:	ldr	r2, [sp, #76]	; 0x4c
    a9d8:	ldr	r0, [sp, #28]
    a9dc:	bl	a374 <el_line@plt+0x7ec0>
    a9e0:	ldr	r0, [sp, #36]	; 0x24
    a9e4:	bl	1f20 <free@plt>
    a9e8:	cmp	fp, #0
    a9ec:	beq	aa6c <el_line@plt+0x85b8>
    a9f0:	ldr	r0, [fp]
    a9f4:	bl	a48c <el_line@plt+0x7fd8>
    a9f8:	mov	r3, #0
    a9fc:	mov	r0, #4
    aa00:	str	r3, [fp]
    aa04:	b	a8f8 <el_line@plt+0x8444>
    aa08:	mov	r0, r2
    aa0c:	bl	e4c8 <el_line@plt+0xc014>
    aa10:	ldr	r1, [pc, #308]	; ab4c <el_line@plt+0x8698>
    aa14:	add	r1, pc, r1
    aa18:	add	r1, r1, #136	; 0x88
    aa1c:	mov	r2, r0
    aa20:	ldr	r0, [pc, #296]	; ab50 <el_line@plt+0x869c>
    aa24:	add	r0, pc, r0
    aa28:	bl	10980 <el_line@plt+0xe4cc>
    aa2c:	bl	e4c8 <el_line@plt+0xc014>
    aa30:	ldr	r1, [pc, #284]	; ab54 <el_line@plt+0x86a0>
    aa34:	add	r1, pc, r1
    aa38:	add	r1, r1, #136	; 0x88
    aa3c:	mov	r2, r0
    aa40:	ldr	r0, [pc, #272]	; ab58 <el_line@plt+0x86a4>
    aa44:	add	r0, pc, r0
    aa48:	bl	10980 <el_line@plt+0xe4cc>
    aa4c:	bl	e4c8 <el_line@plt+0xc014>
    aa50:	ldr	r1, [pc, #260]	; ab5c <el_line@plt+0x86a8>
    aa54:	add	r1, pc, r1
    aa58:	add	r1, r1, #136	; 0x88
    aa5c:	mov	r2, r0
    aa60:	ldr	r0, [pc, #248]	; ab60 <el_line@plt+0x86ac>
    aa64:	add	r0, pc, r0
    aa68:	bl	10980 <el_line@plt+0xe4cc>
    aa6c:	ldr	r4, [sp, #40]	; 0x28
    aa70:	mov	r0, #4
    aa74:	ldr	r3, [r4]
    aa78:	b	a8f8 <el_line@plt+0x8444>
    aa7c:	bl	e4c8 <el_line@plt+0xc014>
    aa80:	ldr	r1, [pc, #220]	; ab64 <el_line@plt+0x86b0>
    aa84:	add	r1, pc, r1
    aa88:	add	r1, r1, #136	; 0x88
    aa8c:	mov	r2, r0
    aa90:	ldr	r0, [pc, #208]	; ab68 <el_line@plt+0x86b4>
    aa94:	add	r0, pc, r0
    aa98:	bl	10980 <el_line@plt+0xe4cc>
    aa9c:	mov	r0, r5
    aaa0:	bl	e4c8 <el_line@plt+0xc014>
    aaa4:	ldr	r1, [pc, #192]	; ab6c <el_line@plt+0x86b8>
    aaa8:	add	r1, pc, r1
    aaac:	add	r1, r1, #136	; 0x88
    aab0:	mov	r2, r0
    aab4:	ldr	r0, [pc, #180]	; ab70 <el_line@plt+0x86bc>
    aab8:	add	r0, pc, r0
    aabc:	bl	10980 <el_line@plt+0xe4cc>
    aac0:	ldr	r1, [pc, #172]	; ab74 <el_line@plt+0x86c0>
    aac4:	ldr	r0, [pc, #172]	; ab78 <el_line@plt+0x86c4>
    aac8:	add	r1, pc, r1
    aacc:	add	r0, pc, r0
    aad0:	add	r1, r1, #136	; 0x88
    aad4:	bl	10980 <el_line@plt+0xe4cc>
    aad8:	ldr	r0, [pc, #156]	; ab7c <el_line@plt+0x86c8>
    aadc:	mov	r2, r4
    aae0:	add	r0, pc, r0
    aae4:	bl	10980 <el_line@plt+0xe4cc>
    aae8:	bl	21e4 <__stack_chk_fail@plt>
    aaec:	bl	e4c8 <el_line@plt+0xc014>
    aaf0:	ldr	r1, [pc, #136]	; ab80 <el_line@plt+0x86cc>
    aaf4:	add	r1, pc, r1
    aaf8:	add	r1, r1, #136	; 0x88
    aafc:	mov	r2, r0
    ab00:	ldr	r0, [pc, #124]	; ab84 <el_line@plt+0x86d0>
    ab04:	add	r0, pc, r0
    ab08:	bl	10980 <el_line@plt+0xe4cc>
    ab0c:	ldr	r0, [pc, #116]	; ab88 <el_line@plt+0x86d4>
    ab10:	mov	r1, #104	; 0x68
    ab14:	add	r0, pc, r0
    ab18:	bl	10980 <el_line@plt+0xe4cc>
    ab1c:	andeq	r4, r2, ip, ror #16
    ab20:	andeq	r0, r0, ip, lsr #4
    ab24:	ldrdeq	r1, [r1], -ip
    ab28:	andeq	r0, r0, r8, asr r2
    ab2c:	andeq	r1, r1, r0, lsr #7
    ab30:			; <UNDEFINED> instruction: 0x000113b8
    ab34:	andeq	r1, r1, r8, lsr #8
    ab38:	andeq	r1, r1, ip, lsr r4
    ab3c:	andeq	r0, r1, r8, asr #24
    ab40:	andeq	r0, r1, r0, lsr pc
    ab44:	andeq	r1, r1, r0, lsr #32
    ab48:	andeq	r1, r1, ip, lsl r0
    ab4c:	strdeq	r0, [r1], -r8
    ab50:	andeq	r0, r1, r0, lsr ip
    ab54:	ldrdeq	r0, [r1], -r8
    ab58:	andeq	r0, r1, r0, lsl ip
    ab5c:			; <UNDEFINED> instruction: 0x00010ab8
    ab60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    ab64:	andeq	r0, r1, r8, lsl #21
    ab68:	andeq	r0, r1, r0, asr #23
    ab6c:	andeq	r0, r1, r4, ror #20
    ab70:	muleq	r1, ip, fp
    ab74:	andeq	r0, r1, r4, asr #20
    ab78:	andeq	r0, r1, r0, lsl #24
    ab7c:	andeq	r0, r1, r8, ror #24
    ab80:	andeq	r0, r1, r8, lsl sl
    ab84:	andeq	r0, r1, r0, asr fp
    ab88:	andeq	r0, r1, r4, ror #29
    ab8c:	b	a4e4 <el_line@plt+0x8030>
    ab90:	push	{r4, r5, r6, lr}
    ab94:	mov	r4, r0
    ab98:	ldr	r0, [pc, #120]	; ac18 <el_line@plt+0x8764>
    ab9c:	sub	sp, sp, #8
    aba0:	mov	r6, r1
    aba4:	add	r0, pc, r0
    aba8:	bl	11424 <el_line@plt+0xef70>
    abac:	ldr	r5, [r4, #20]
    abb0:	mov	r0, r6
    abb4:	add	r3, r5, #1
    abb8:	str	r3, [r4, #20]
    abbc:	bl	2310 <strlen@plt>
    abc0:	mov	r3, r6
    abc4:	mov	r1, r5
    abc8:	mov	r2, #13
    abcc:	str	r0, [sp]
    abd0:	mov	r0, r4
    abd4:	bl	97a0 <el_line@plt+0x72ec>
    abd8:	mov	r0, r4
    abdc:	mov	r1, r5
    abe0:	bl	9630 <el_line@plt+0x717c>
    abe4:	subs	r3, r0, #0
    abe8:	moveq	r0, r3
    abec:	bne	abf8 <el_line@plt+0x8744>
    abf0:	add	sp, sp, #8
    abf4:	pop	{r4, r5, r6, pc}
    abf8:	bl	df2c <el_line@plt+0xba78>
    abfc:	mov	r1, r0
    ac00:	ldr	r0, [pc, #20]	; ac1c <el_line@plt+0x8768>
    ac04:	add	r0, pc, r0
    ac08:	bl	11238 <el_line@plt+0xed84>
    ac0c:	mvn	r0, #0
    ac10:	add	sp, sp, #8
    ac14:	pop	{r4, r5, r6, pc}
    ac18:	ldrdeq	r0, [r1], -ip
    ac1c:	muleq	r1, ip, lr
    ac20:	push	{r4, r5, r6, r7, r8, lr}
    ac24:	mov	r4, r0
    ac28:	ldr	r5, [r0, #20]
    ac2c:	sub	sp, sp, #8
    ac30:	mov	r0, r1
    ac34:	mov	r7, r3
    ac38:	add	r3, r5, #1
    ac3c:	str	r3, [r4, #20]
    ac40:	mov	r6, r1
    ac44:	mov	r8, r2
    ac48:	bl	2310 <strlen@plt>
    ac4c:	mov	r3, r6
    ac50:	mov	r1, r5
    ac54:	mov	r2, #14
    ac58:	str	r8, [sp, #4]
    ac5c:	str	r0, [sp]
    ac60:	mov	r0, r4
    ac64:	bl	9ad8 <el_line@plt+0x7624>
    ac68:	mov	r0, r4
    ac6c:	mov	r1, r5
    ac70:	bl	9630 <el_line@plt+0x717c>
    ac74:	cmp	r0, #0
    ac78:	cmpne	r7, #0
    ac7c:	bne	ac94 <el_line@plt+0x87e0>
    ac80:	cmp	r0, #0
    ac84:	moveq	r0, r0
    ac88:	bne	aca8 <el_line@plt+0x87f4>
    ac8c:	add	sp, sp, #8
    ac90:	pop	{r4, r5, r6, r7, r8, pc}
    ac94:	bl	df2c <el_line@plt+0xba78>
    ac98:	mov	r1, r0
    ac9c:	ldr	r0, [pc, #12]	; acb0 <el_line@plt+0x87fc>
    aca0:	add	r0, pc, r0
    aca4:	bl	11238 <el_line@plt+0xed84>
    aca8:	mvn	r0, #0
    acac:	b	ac8c <el_line@plt+0x87d8>
    acb0:	andeq	r0, r1, ip, lsl lr
    acb4:	push	{r4, r5, r6, lr}
    acb8:	mov	r4, r0
    acbc:	ldr	r5, [r0, #20]
    acc0:	sub	sp, sp, #8
    acc4:	mov	r0, r1
    acc8:	mov	r6, r1
    accc:	add	r3, r5, #1
    acd0:	str	r3, [r4, #20]
    acd4:	bl	2310 <strlen@plt>
    acd8:	mov	r3, r6
    acdc:	mov	r1, r5
    ace0:	mov	r2, #15
    ace4:	str	r0, [sp]
    ace8:	mov	r0, r4
    acec:	bl	97a0 <el_line@plt+0x72ec>
    acf0:	mov	r0, r4
    acf4:	mov	r1, r5
    acf8:	bl	9630 <el_line@plt+0x717c>
    acfc:	subs	r3, r0, #0
    ad00:	moveq	r0, r3
    ad04:	bne	ad10 <el_line@plt+0x885c>
    ad08:	add	sp, sp, #8
    ad0c:	pop	{r4, r5, r6, pc}
    ad10:	bl	df2c <el_line@plt+0xba78>
    ad14:	mov	r1, r0
    ad18:	ldr	r0, [pc, #16]	; ad30 <el_line@plt+0x887c>
    ad1c:	add	r0, pc, r0
    ad20:	bl	11238 <el_line@plt+0xed84>
    ad24:	mvn	r0, #0
    ad28:	add	sp, sp, #8
    ad2c:	pop	{r4, r5, r6, pc}
    ad30:	andeq	r0, r1, r0, asr #27
    ad34:	push	{r4, r5, r6, r7, r8, lr}
    ad38:	mov	r4, r0
    ad3c:	ldr	r8, [r4, #16]
    ad40:	sub	sp, sp, #8
    ad44:	ldr	r5, [r0, #20]
    ad48:	mov	r0, r1
    ad4c:	cmp	r8, #0
    ad50:	mov	r6, r1
    ad54:	add	r3, r5, #1
    ad58:	str	r3, [r4, #20]
    ad5c:	mov	r7, r2
    ad60:	movne	r8, #17
    ad64:	moveq	r8, #7
    ad68:	bl	2310 <strlen@plt>
    ad6c:	mov	r1, r5
    ad70:	mov	r2, r8
    ad74:	mov	r3, r6
    ad78:	str	r0, [sp]
    ad7c:	mov	r0, r4
    ad80:	bl	97a0 <el_line@plt+0x72ec>
    ad84:	mov	r0, r4
    ad88:	mov	r1, r5
    ad8c:	mov	r2, r7
    ad90:	add	sp, sp, #8
    ad94:	pop	{r4, r5, r6, r7, r8, lr}
    ad98:	b	9bcc <el_line@plt+0x7718>
    ad9c:	push	{r4, r5, r6, r7, lr}
    ada0:	mov	r4, r0
    ada4:	ldr	r3, [r0, #16]
    ada8:	sub	sp, sp, #12
    adac:	mov	r6, r1
    adb0:	mov	r5, r2
    adb4:	cmp	r3, #0
    adb8:	bne	adf8 <el_line@plt+0x8944>
    adbc:	cmp	r2, #0
    adc0:	bne	ade8 <el_line@plt+0x8934>
    adc4:	ldr	r0, [pc, #112]	; ae3c <el_line@plt+0x8988>
    adc8:	add	r0, pc, r0
    adcc:	bl	112ec <el_line@plt+0xee38>
    add0:	mov	r0, r4
    add4:	mov	r1, r6
    add8:	mov	r2, r5
    addc:	add	sp, sp, #12
    ade0:	pop	{r4, r5, r6, r7, lr}
    ade4:	b	ad34 <el_line@plt+0x8880>
    ade8:	ldr	r0, [pc, #80]	; ae40 <el_line@plt+0x898c>
    adec:	add	r0, pc, r0
    adf0:	bl	113bc <el_line@plt+0xef08>
    adf4:	b	add0 <el_line@plt+0x891c>
    adf8:	ldr	r7, [r0, #20]
    adfc:	mov	r0, r1
    ae00:	add	r3, r7, #1
    ae04:	str	r3, [r4, #20]
    ae08:	bl	2310 <strlen@plt>
    ae0c:	mov	r1, r7
    ae10:	mov	r3, r6
    ae14:	mov	r2, #7
    ae18:	str	r0, [sp]
    ae1c:	mov	r0, r4
    ae20:	bl	97a0 <el_line@plt+0x72ec>
    ae24:	mov	r0, r4
    ae28:	mov	r1, r7
    ae2c:	mov	r2, r5
    ae30:	add	sp, sp, #12
    ae34:	pop	{r4, r5, r6, r7, lr}
    ae38:	b	9bcc <el_line@plt+0x7718>
    ae3c:	andeq	r0, r1, r4, lsr sp
    ae40:	andeq	r0, r1, r0, lsl sp
    ae44:	push	{r4, r5, r6, r7, lr}
    ae48:	mov	r4, r0
    ae4c:	ldr	r5, [r0, #20]
    ae50:	sub	sp, sp, #12
    ae54:	mov	r0, r1
    ae58:	mov	r6, r1
    ae5c:	add	r3, r5, #1
    ae60:	str	r3, [r4, #20]
    ae64:	mov	r7, r2
    ae68:	bl	2310 <strlen@plt>
    ae6c:	mov	r3, r6
    ae70:	mov	r1, r5
    ae74:	mov	r2, #9
    ae78:	str	r7, [sp, #4]
    ae7c:	str	r0, [sp]
    ae80:	mov	r0, r4
    ae84:	bl	9ad8 <el_line@plt+0x7624>
    ae88:	mov	r0, r4
    ae8c:	mov	r1, r5
    ae90:	bl	9630 <el_line@plt+0x717c>
    ae94:	subs	r3, r0, #0
    ae98:	moveq	r0, r3
    ae9c:	bne	aea8 <el_line@plt+0x89f4>
    aea0:	add	sp, sp, #12
    aea4:	pop	{r4, r5, r6, r7, pc}
    aea8:	bl	df2c <el_line@plt+0xba78>
    aeac:	mov	r1, r6
    aeb0:	mov	r2, r0
    aeb4:	ldr	r0, [pc, #16]	; aecc <el_line@plt+0x8a18>
    aeb8:	add	r0, pc, r0
    aebc:	bl	11238 <el_line@plt+0xed84>
    aec0:	mvn	r0, #0
    aec4:	add	sp, sp, #12
    aec8:	pop	{r4, r5, r6, r7, pc}
    aecc:	andeq	r0, r1, r4, ror ip
    aed0:	push	{r4, r5, lr}
    aed4:	sub	sp, sp, #12
    aed8:	ldr	r4, [r0, #20]
    aedc:	mov	ip, r1
    aee0:	mov	r5, r0
    aee4:	add	r1, r4, #1
    aee8:	str	r1, [r0, #20]
    aeec:	stm	sp, {r2, r3}
    aef0:	mov	r1, r4
    aef4:	mov	r3, ip
    aef8:	mov	r2, #10
    aefc:	bl	9ad8 <el_line@plt+0x7624>
    af00:	mov	r0, r5
    af04:	mov	r1, r4
    af08:	bl	9630 <el_line@plt+0x717c>
    af0c:	subs	r3, r0, #0
    af10:	moveq	r0, r3
    af14:	bne	af20 <el_line@plt+0x8a6c>
    af18:	add	sp, sp, #12
    af1c:	pop	{r4, r5, pc}
    af20:	bl	df2c <el_line@plt+0xba78>
    af24:	mov	r1, r0
    af28:	ldr	r0, [pc, #16]	; af40 <el_line@plt+0x8a8c>
    af2c:	add	r0, pc, r0
    af30:	bl	11238 <el_line@plt+0xed84>
    af34:	mvn	r0, #0
    af38:	add	sp, sp, #12
    af3c:	pop	{r4, r5, pc}
    af40:	andeq	r0, r1, r0, lsr #24
    af44:	ldr	r3, [pc, #600]	; b1a4 <el_line@plt+0x8cf0>
    af48:	ldr	r2, [pc, #600]	; b1a8 <el_line@plt+0x8cf4>
    af4c:	add	r3, pc, r3
    af50:	push	{r4, r5, r6, r7, r8, lr}
    af54:	mov	r6, r0
    af58:	ldr	r8, [r3, r2]
    af5c:	sub	sp, sp, #80	; 0x50
    af60:	ldr	r5, [r0, #20]
    af64:	mov	r0, r1
    af68:	mov	r7, r1
    af6c:	add	r3, r5, #1
    af70:	str	r3, [r6, #20]
    af74:	ldr	r3, [r8]
    af78:	str	r5, [sp, #20]
    af7c:	str	r3, [sp, #76]	; 0x4c
    af80:	bl	2310 <strlen@plt>
    af84:	mov	r1, r5
    af88:	mov	r3, r7
    af8c:	mov	r2, #16
    af90:	str	r0, [sp]
    af94:	mov	r0, r6
    af98:	bl	97a0 <el_line@plt+0x72ec>
    af9c:	bl	e9c4 <el_line@plt+0xc510>
    afa0:	subs	r4, r0, #0
    afa4:	beq	b130 <el_line@plt+0x8c7c>
    afa8:	mov	r0, r6
    afac:	mov	r1, r4
    afb0:	bl	9428 <el_line@plt+0x6f74>
    afb4:	mov	r0, r4
    afb8:	add	r1, sp, #15
    afbc:	bl	fca0 <el_line@plt+0xd7ec>
    afc0:	cmp	r0, #0
    afc4:	bne	b100 <el_line@plt+0x8c4c>
    afc8:	mov	r0, r4
    afcc:	add	r1, sp, #20
    afd0:	bl	fbf4 <el_line@plt+0xd740>
    afd4:	cmp	r0, #0
    afd8:	bne	b100 <el_line@plt+0x8c4c>
    afdc:	ldr	r1, [sp, #20]
    afe0:	cmp	r5, r1
    afe4:	bne	b120 <el_line@plt+0x8c6c>
    afe8:	ldrb	r2, [sp, #15]
    afec:	cmp	r2, #101	; 0x65
    aff0:	beq	b09c <el_line@plt+0x8be8>
    aff4:	cmp	r2, #104	; 0x68
    aff8:	bne	b168 <el_line@plt+0x8cb4>
    affc:	mov	r0, r4
    b000:	add	r1, sp, #16
    b004:	bl	fbf4 <el_line@plt+0xd740>
    b008:	subs	r2, r0, #0
    b00c:	bne	b148 <el_line@plt+0x8c94>
    b010:	ldr	r1, [sp, #16]
    b014:	cmp	r1, #1
    b018:	bne	b178 <el_line@plt+0x8cc4>
    b01c:	mov	r0, r4
    b020:	add	r1, sp, #24
    b024:	bl	ff18 <el_line@plt+0xda64>
    b028:	subs	r2, r0, #0
    b02c:	bne	b0d8 <el_line@plt+0x8c24>
    b030:	mov	r0, r4
    b034:	add	r1, sp, #28
    b038:	bl	ff18 <el_line@plt+0xda64>
    b03c:	subs	r2, r0, #0
    b040:	bne	b0d8 <el_line@plt+0x8c24>
    b044:	mov	r0, r4
    b048:	add	r1, sp, #32
    b04c:	bl	dc4c <el_line@plt+0xb798>
    b050:	subs	r2, r0, #0
    b054:	bne	b0d8 <el_line@plt+0x8c24>
    b058:	ldr	r0, [pc, #332]	; b1ac <el_line@plt+0x8cf8>
    b05c:	mov	r1, r7
    b060:	ldr	r2, [sp, #24]
    b064:	ldr	r3, [sp, #40]	; 0x28
    b068:	add	r0, pc, r0
    b06c:	bl	1148c <el_line@plt+0xefd8>
    b070:	ldr	r0, [sp, #28]
    b074:	bl	1f20 <free@plt>
    b078:	mov	r0, r4
    b07c:	bl	ec5c <el_line@plt+0xc7a8>
    b080:	ldr	r0, [sp, #24]
    b084:	ldr	r2, [sp, #76]	; 0x4c
    b088:	ldr	r3, [r8]
    b08c:	cmp	r2, r3
    b090:	bne	b0fc <el_line@plt+0x8c48>
    b094:	add	sp, sp, #80	; 0x50
    b098:	pop	{r4, r5, r6, r7, r8, pc}
    b09c:	mov	r0, r4
    b0a0:	add	r1, sp, #32
    b0a4:	bl	fbf4 <el_line@plt+0xd740>
    b0a8:	subs	r5, r0, #0
    b0ac:	bne	b184 <el_line@plt+0x8cd0>
    b0b0:	ldr	r0, [sp, #32]
    b0b4:	bl	df2c <el_line@plt+0xba78>
    b0b8:	mov	r1, r0
    b0bc:	ldr	r0, [pc, #236]	; b1b0 <el_line@plt+0x8cfc>
    b0c0:	add	r0, pc, r0
    b0c4:	bl	11238 <el_line@plt+0xed84>
    b0c8:	mov	r0, r4
    b0cc:	bl	ec5c <el_line@plt+0xc7a8>
    b0d0:	mov	r0, r5
    b0d4:	b	b084 <el_line@plt+0x8bd0>
    b0d8:	mov	r0, r2
    b0dc:	bl	e4c8 <el_line@plt+0xc014>
    b0e0:	ldr	r1, [pc, #204]	; b1b4 <el_line@plt+0x8d00>
    b0e4:	add	r1, pc, r1
    b0e8:	add	r1, r1, #152	; 0x98
    b0ec:	mov	r2, r0
    b0f0:	ldr	r0, [pc, #192]	; b1b8 <el_line@plt+0x8d04>
    b0f4:	add	r0, pc, r0
    b0f8:	bl	10980 <el_line@plt+0xe4cc>
    b0fc:	bl	21e4 <__stack_chk_fail@plt>
    b100:	bl	e4c8 <el_line@plt+0xc014>
    b104:	ldr	r1, [pc, #176]	; b1bc <el_line@plt+0x8d08>
    b108:	add	r1, pc, r1
    b10c:	add	r1, r1, #152	; 0x98
    b110:	mov	r2, r0
    b114:	ldr	r0, [pc, #164]	; b1c0 <el_line@plt+0x8d0c>
    b118:	add	r0, pc, r0
    b11c:	bl	10980 <el_line@plt+0xe4cc>
    b120:	ldr	r0, [pc, #156]	; b1c4 <el_line@plt+0x8d10>
    b124:	mov	r2, r5
    b128:	add	r0, pc, r0
    b12c:	bl	10980 <el_line@plt+0xe4cc>
    b130:	ldr	r1, [pc, #144]	; b1c8 <el_line@plt+0x8d14>
    b134:	ldr	r0, [pc, #144]	; b1cc <el_line@plt+0x8d18>
    b138:	add	r1, pc, r1
    b13c:	add	r0, pc, r0
    b140:	add	r1, r1, #152	; 0x98
    b144:	bl	10980 <el_line@plt+0xe4cc>
    b148:	bl	e4c8 <el_line@plt+0xc014>
    b14c:	ldr	r1, [pc, #124]	; b1d0 <el_line@plt+0x8d1c>
    b150:	add	r1, pc, r1
    b154:	add	r1, r1, #152	; 0x98
    b158:	mov	r2, r0
    b15c:	ldr	r0, [pc, #112]	; b1d4 <el_line@plt+0x8d20>
    b160:	add	r0, pc, r0
    b164:	bl	10980 <el_line@plt+0xe4cc>
    b168:	ldr	r0, [pc, #104]	; b1d8 <el_line@plt+0x8d24>
    b16c:	mov	r1, #104	; 0x68
    b170:	add	r0, pc, r0
    b174:	bl	10980 <el_line@plt+0xe4cc>
    b178:	ldr	r0, [pc, #92]	; b1dc <el_line@plt+0x8d28>
    b17c:	add	r0, pc, r0
    b180:	bl	10980 <el_line@plt+0xe4cc>
    b184:	bl	e4c8 <el_line@plt+0xc014>
    b188:	ldr	r1, [pc, #80]	; b1e0 <el_line@plt+0x8d2c>
    b18c:	add	r1, pc, r1
    b190:	add	r1, r1, #152	; 0x98
    b194:	mov	r2, r0
    b198:	ldr	r0, [pc, #68]	; b1e4 <el_line@plt+0x8d30>
    b19c:	add	r0, pc, r0
    b1a0:	bl	10980 <el_line@plt+0xe4cc>
    b1a4:	andeq	r3, r2, r8, lsl lr
    b1a8:	andeq	r0, r0, ip, lsr #4
    b1ac:	andeq	r0, r1, r8, asr #22
    b1b0:	andeq	r0, r1, r4, lsr #21
    b1b4:	andeq	r0, r1, r8, lsr #8
    b1b8:	andeq	r0, r1, r0, ror #10
    b1bc:	andeq	r0, r1, r4, lsl #8
    b1c0:	andeq	r0, r1, ip, lsr r5
    b1c4:	andeq	r0, r1, r0, lsr #12
    b1c8:	ldrdeq	r0, [r1], -r4
    b1cc:	muleq	r1, r0, r5
    b1d0:			; <UNDEFINED> instruction: 0x000103bc
    b1d4:	strdeq	r0, [r1], -r4
    b1d8:	andeq	r0, r1, r8, lsl #17
    b1dc:	andeq	r0, r1, r4, lsl #20
    b1e0:	andeq	r0, r1, r0, lsl #7
    b1e4:			; <UNDEFINED> instruction: 0x000104b8
    b1e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    b1ec:	mov	r8, r1
    b1f0:	ldr	r1, [r0, #24]
    b1f4:	mov	r5, r0
    b1f8:	mov	r7, r2
    b1fc:	ands	r9, r1, #1
    b200:	beq	b20c <el_line@plt+0x8d58>
    b204:	rsbs	r9, r3, #1
    b208:	movcc	r9, #0
    b20c:	bl	e9c4 <el_line@plt+0xc510>
    b210:	subs	r4, r0, #0
    b214:	beq	b370 <el_line@plt+0x8ebc>
    b218:	ldr	r6, [r5, #20]
    b21c:	cmp	r9, #0
    b220:	add	r3, r6, #1
    b224:	str	r3, [r5, #20]
    b228:	bne	b2d0 <el_line@plt+0x8e1c>
    b22c:	mov	r1, #18
    b230:	bl	104b0 <el_line@plt+0xdffc>
    b234:	cmp	r0, #0
    b238:	bne	b388 <el_line@plt+0x8ed4>
    b23c:	mov	r0, r4
    b240:	mov	r1, r6
    b244:	bl	103b0 <el_line@plt+0xdefc>
    b248:	cmp	r0, #0
    b24c:	bne	b388 <el_line@plt+0x8ed4>
    b250:	mov	r0, r4
    b254:	mov	r1, r8
    b258:	bl	105d8 <el_line@plt+0xe124>
    b25c:	cmp	r0, #0
    b260:	bne	b350 <el_line@plt+0x8e9c>
    b264:	mov	r0, r4
    b268:	mov	r1, r7
    b26c:	bl	105d8 <el_line@plt+0xe124>
    b270:	cmp	r0, #0
    b274:	bne	b350 <el_line@plt+0x8e9c>
    b278:	mov	r1, r4
    b27c:	mov	r0, r5
    b280:	bl	92e0 <el_line@plt+0x6e2c>
    b284:	ldr	r1, [pc, #284]	; b3a8 <el_line@plt+0x8ef4>
    b288:	cmp	r9, #0
    b28c:	add	r1, pc, r1
    b290:	ldreq	r1, [pc, #276]	; b3ac <el_line@plt+0x8ef8>
    b294:	addeq	r1, pc, r1
    b298:	ldr	r0, [pc, #272]	; b3b0 <el_line@plt+0x8efc>
    b29c:	mov	r3, r7
    b2a0:	mov	r2, r8
    b2a4:	add	r0, pc, r0
    b2a8:	bl	1148c <el_line@plt+0xefd8>
    b2ac:	mov	r0, r4
    b2b0:	bl	ec5c <el_line@plt+0xc7a8>
    b2b4:	mov	r0, r5
    b2b8:	mov	r1, r6
    b2bc:	bl	9630 <el_line@plt+0x717c>
    b2c0:	subs	r3, r0, #0
    b2c4:	bne	b32c <el_line@plt+0x8e78>
    b2c8:	mov	r0, r3
    b2cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    b2d0:	mov	r1, #200	; 0xc8
    b2d4:	bl	104b0 <el_line@plt+0xdffc>
    b2d8:	cmp	r0, #0
    b2dc:	bne	b30c <el_line@plt+0x8e58>
    b2e0:	mov	r0, r4
    b2e4:	mov	r1, r6
    b2e8:	bl	103b0 <el_line@plt+0xdefc>
    b2ec:	cmp	r0, #0
    b2f0:	bne	b30c <el_line@plt+0x8e58>
    b2f4:	ldr	r1, [pc, #184]	; b3b4 <el_line@plt+0x8f00>
    b2f8:	mov	r0, r4
    b2fc:	add	r1, pc, r1
    b300:	bl	105d8 <el_line@plt+0xe124>
    b304:	cmp	r0, #0
    b308:	beq	b250 <el_line@plt+0x8d9c>
    b30c:	bl	e4c8 <el_line@plt+0xc014>
    b310:	ldr	r1, [pc, #160]	; b3b8 <el_line@plt+0x8f04>
    b314:	add	r1, pc, r1
    b318:	add	r1, r1, #164	; 0xa4
    b31c:	mov	r2, r0
    b320:	ldr	r0, [pc, #148]	; b3bc <el_line@plt+0x8f08>
    b324:	add	r0, pc, r0
    b328:	bl	10980 <el_line@plt+0xe4cc>
    b32c:	bl	df2c <el_line@plt+0xba78>
    b330:	mov	r1, r8
    b334:	mov	r2, r7
    b338:	mov	r3, r0
    b33c:	ldr	r0, [pc, #124]	; b3c0 <el_line@plt+0x8f0c>
    b340:	add	r0, pc, r0
    b344:	bl	11238 <el_line@plt+0xed84>
    b348:	mvn	r0, #0
    b34c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    b350:	bl	e4c8 <el_line@plt+0xc014>
    b354:	ldr	r1, [pc, #104]	; b3c4 <el_line@plt+0x8f10>
    b358:	add	r1, pc, r1
    b35c:	add	r1, r1, #164	; 0xa4
    b360:	mov	r2, r0
    b364:	ldr	r0, [pc, #92]	; b3c8 <el_line@plt+0x8f14>
    b368:	add	r0, pc, r0
    b36c:	bl	10980 <el_line@plt+0xe4cc>
    b370:	ldr	r1, [pc, #84]	; b3cc <el_line@plt+0x8f18>
    b374:	ldr	r0, [pc, #84]	; b3d0 <el_line@plt+0x8f1c>
    b378:	add	r1, pc, r1
    b37c:	add	r0, pc, r0
    b380:	add	r1, r1, #164	; 0xa4
    b384:	bl	10980 <el_line@plt+0xe4cc>
    b388:	bl	e4c8 <el_line@plt+0xc014>
    b38c:	ldr	r1, [pc, #64]	; b3d4 <el_line@plt+0x8f20>
    b390:	add	r1, pc, r1
    b394:	add	r1, r1, #164	; 0xa4
    b398:	mov	r2, r0
    b39c:	ldr	r0, [pc, #52]	; b3d8 <el_line@plt+0x8f24>
    b3a0:	add	r0, pc, r0
    b3a4:	bl	10980 <el_line@plt+0xe4cc>
    b3a8:	andeq	r0, r1, r0, ror #11
    b3ac:	andeq	r0, r1, r0, asr #18
    b3b0:	andeq	r0, r1, r0, asr #18
    b3b4:	andeq	r0, r1, r0, ror r5
    b3b8:	strdeq	r0, [r1], -r8
    b3bc:	andeq	r0, r1, r0, lsr r3
    b3c0:	andeq	r0, r1, r4, asr #17
    b3c4:			; <UNDEFINED> instruction: 0x000101b4
    b3c8:	andeq	r0, r1, ip, ror #5
    b3cc:	muleq	r1, r4, r1
    b3d0:	andeq	r0, r1, r0, asr r3
    b3d4:	andeq	r0, r1, ip, ror r1
    b3d8:			; <UNDEFINED> instruction: 0x000102b4
    b3dc:	push	{r4, r5, r6, r7, r8, lr}
    b3e0:	mov	r5, r0
    b3e4:	ldr	r3, [r0, #24]
    b3e8:	mov	r8, r1
    b3ec:	mov	r7, r2
    b3f0:	tst	r3, #8
    b3f4:	beq	b4dc <el_line@plt+0x9028>
    b3f8:	bl	e9c4 <el_line@plt+0xc510>
    b3fc:	subs	r4, r0, #0
    b400:	beq	b510 <el_line@plt+0x905c>
    b404:	ldr	r6, [r5, #20]
    b408:	mov	r1, #200	; 0xc8
    b40c:	add	r3, r6, #1
    b410:	str	r3, [r5, #20]
    b414:	bl	104b0 <el_line@plt+0xdffc>
    b418:	cmp	r0, #0
    b41c:	bne	b4f0 <el_line@plt+0x903c>
    b420:	mov	r0, r4
    b424:	mov	r1, r6
    b428:	bl	103b0 <el_line@plt+0xdefc>
    b42c:	cmp	r0, #0
    b430:	bne	b4f0 <el_line@plt+0x903c>
    b434:	ldr	r1, [pc, #236]	; b528 <el_line@plt+0x9074>
    b438:	mov	r0, r4
    b43c:	add	r1, pc, r1
    b440:	bl	105d8 <el_line@plt+0xe124>
    b444:	cmp	r0, #0
    b448:	bne	b4f0 <el_line@plt+0x903c>
    b44c:	mov	r0, r4
    b450:	mov	r1, r8
    b454:	bl	105d8 <el_line@plt+0xe124>
    b458:	cmp	r0, #0
    b45c:	bne	b4f0 <el_line@plt+0x903c>
    b460:	mov	r0, r4
    b464:	mov	r1, r7
    b468:	bl	105d8 <el_line@plt+0xe124>
    b46c:	cmp	r0, #0
    b470:	bne	b4f0 <el_line@plt+0x903c>
    b474:	mov	r0, r5
    b478:	mov	r1, r4
    b47c:	bl	92e0 <el_line@plt+0x6e2c>
    b480:	ldr	r0, [pc, #164]	; b52c <el_line@plt+0x9078>
    b484:	mov	r1, r8
    b488:	mov	r2, r7
    b48c:	add	r0, pc, r0
    b490:	bl	1148c <el_line@plt+0xefd8>
    b494:	mov	r0, r4
    b498:	bl	ec5c <el_line@plt+0xc7a8>
    b49c:	mov	r0, r5
    b4a0:	mov	r1, r6
    b4a4:	bl	9630 <el_line@plt+0x717c>
    b4a8:	subs	r3, r0, #0
    b4ac:	bne	b4b8 <el_line@plt+0x9004>
    b4b0:	mov	r0, r3
    b4b4:	pop	{r4, r5, r6, r7, r8, pc}
    b4b8:	bl	df2c <el_line@plt+0xba78>
    b4bc:	mov	r1, r8
    b4c0:	mov	r2, r7
    b4c4:	mov	r3, r0
    b4c8:	ldr	r0, [pc, #96]	; b530 <el_line@plt+0x907c>
    b4cc:	add	r0, pc, r0
    b4d0:	bl	11238 <el_line@plt+0xed84>
    b4d4:	mvn	r0, #0
    b4d8:	pop	{r4, r5, r6, r7, r8, pc}
    b4dc:	ldr	r0, [pc, #80]	; b534 <el_line@plt+0x9080>
    b4e0:	add	r0, pc, r0
    b4e4:	bl	11238 <el_line@plt+0xed84>
    b4e8:	mvn	r0, #0
    b4ec:	pop	{r4, r5, r6, r7, r8, pc}
    b4f0:	bl	e4c8 <el_line@plt+0xc014>
    b4f4:	ldr	r1, [pc, #60]	; b538 <el_line@plt+0x9084>
    b4f8:	add	r1, pc, r1
    b4fc:	add	r1, r1, #176	; 0xb0
    b500:	mov	r2, r0
    b504:	ldr	r0, [pc, #48]	; b53c <el_line@plt+0x9088>
    b508:	add	r0, pc, r0
    b50c:	bl	10980 <el_line@plt+0xe4cc>
    b510:	ldr	r1, [pc, #40]	; b540 <el_line@plt+0x908c>
    b514:	ldr	r0, [pc, #40]	; b544 <el_line@plt+0x9090>
    b518:	add	r1, pc, r1
    b51c:	add	r0, pc, r0
    b520:	add	r1, r1, #176	; 0xb0
    b524:	bl	10980 <el_line@plt+0xe4cc>
    b528:	andeq	r0, r1, r8, ror r4
    b52c:	ldrdeq	r0, [r1], -r8
    b530:	andeq	r0, r1, r8, asr #15
    b534:	andeq	r0, r1, ip, asr #14
    b538:	andeq	r0, r1, r4, lsl r0
    b53c:	andeq	r0, r1, ip, asr #2
    b540:	strdeq	pc, [r0], -r4
    b544:			; <UNDEFINED> instruction: 0x000101b0
    b548:	push	{r4, r5, r6, r7, r8, lr}
    b54c:	mov	r4, r0
    b550:	ldr	r3, [r0, #16]
    b554:	mov	r7, r1
    b558:	mov	r6, r2
    b55c:	cmp	r3, #2
    b560:	bhi	b578 <el_line@plt+0x90c4>
    b564:	ldr	r0, [pc, #272]	; b67c <el_line@plt+0x91c8>
    b568:	add	r0, pc, r0
    b56c:	bl	11238 <el_line@plt+0xed84>
    b570:	mov	r0, #8
    b574:	pop	{r4, r5, r6, r7, r8, pc}
    b578:	bl	e9c4 <el_line@plt+0xc510>
    b57c:	subs	r5, r0, #0
    b580:	beq	b664 <el_line@plt+0x91b0>
    b584:	ldr	r8, [r4, #20]
    b588:	mov	r1, #20
    b58c:	add	r3, r8, #1
    b590:	str	r3, [r4, #20]
    b594:	bl	104b0 <el_line@plt+0xdffc>
    b598:	cmp	r0, #0
    b59c:	bne	b644 <el_line@plt+0x9190>
    b5a0:	mov	r0, r5
    b5a4:	mov	r1, r8
    b5a8:	bl	103b0 <el_line@plt+0xdefc>
    b5ac:	cmp	r0, #0
    b5b0:	bne	b644 <el_line@plt+0x9190>
    b5b4:	mov	r0, r5
    b5b8:	mov	r1, r7
    b5bc:	bl	105d8 <el_line@plt+0xe124>
    b5c0:	cmp	r0, #0
    b5c4:	bne	b644 <el_line@plt+0x9190>
    b5c8:	mov	r0, r5
    b5cc:	mov	r1, r6
    b5d0:	bl	105d8 <el_line@plt+0xe124>
    b5d4:	cmp	r0, #0
    b5d8:	bne	b644 <el_line@plt+0x9190>
    b5dc:	mov	r0, r4
    b5e0:	mov	r1, r5
    b5e4:	bl	92e0 <el_line@plt+0x6e2c>
    b5e8:	ldr	r0, [pc, #144]	; b680 <el_line@plt+0x91cc>
    b5ec:	mov	r1, r7
    b5f0:	mov	r2, r6
    b5f4:	add	r0, pc, r0
    b5f8:	bl	1148c <el_line@plt+0xefd8>
    b5fc:	mov	r0, r5
    b600:	bl	ec5c <el_line@plt+0xc7a8>
    b604:	mov	r0, r4
    b608:	mov	r1, r8
    b60c:	bl	9630 <el_line@plt+0x717c>
    b610:	subs	r3, r0, #0
    b614:	bne	b620 <el_line@plt+0x916c>
    b618:	mov	r0, r3
    b61c:	pop	{r4, r5, r6, r7, r8, pc}
    b620:	bl	df2c <el_line@plt+0xba78>
    b624:	mov	r1, r7
    b628:	mov	r2, r6
    b62c:	mov	r3, r0
    b630:	ldr	r0, [pc, #76]	; b684 <el_line@plt+0x91d0>
    b634:	add	r0, pc, r0
    b638:	bl	11238 <el_line@plt+0xed84>
    b63c:	mvn	r0, #0
    b640:	pop	{r4, r5, r6, r7, r8, pc}
    b644:	bl	e4c8 <el_line@plt+0xc014>
    b648:	ldr	r1, [pc, #56]	; b688 <el_line@plt+0x91d4>
    b64c:	add	r1, pc, r1
    b650:	add	r1, r1, #188	; 0xbc
    b654:	mov	r2, r0
    b658:	ldr	r0, [pc, #44]	; b68c <el_line@plt+0x91d8>
    b65c:	add	r0, pc, r0
    b660:	bl	10980 <el_line@plt+0xe4cc>
    b664:	ldr	r1, [pc, #36]	; b690 <el_line@plt+0x91dc>
    b668:	ldr	r0, [pc, #36]	; b694 <el_line@plt+0x91e0>
    b66c:	add	r1, pc, r1
    b670:	add	r0, pc, r0
    b674:	add	r1, r1, #188	; 0xbc
    b678:	bl	10980 <el_line@plt+0xe4cc>
    b67c:	andeq	r0, r1, r0, asr r7
    b680:	strdeq	r0, [r1], -r8
    b684:	andeq	r0, r1, r4, ror #13
    b688:	andeq	pc, r0, r0, asr #29
    b68c:	strdeq	pc, [r0], -r8
    b690:	andeq	pc, r0, r0, lsr #29
    b694:	andeq	r0, r1, ip, asr r0
    b698:	push	{r4, r5, r6, r7, r8, lr}
    b69c:	mov	r4, r0
    b6a0:	ldr	r3, [r0, #24]
    b6a4:	mov	r8, r1
    b6a8:	mov	r7, r2
    b6ac:	tst	r3, #16
    b6b0:	beq	b77c <el_line@plt+0x92c8>
    b6b4:	bl	e9c4 <el_line@plt+0xc510>
    b6b8:	subs	r5, r0, #0
    b6bc:	beq	b7a4 <el_line@plt+0x92f0>
    b6c0:	ldr	r6, [r4, #20]
    b6c4:	mov	r1, #200	; 0xc8
    b6c8:	add	r3, r6, #1
    b6cc:	str	r3, [r4, #20]
    b6d0:	bl	104b0 <el_line@plt+0xdffc>
    b6d4:	cmp	r0, #0
    b6d8:	bne	b784 <el_line@plt+0x92d0>
    b6dc:	mov	r0, r5
    b6e0:	mov	r1, r6
    b6e4:	bl	103b0 <el_line@plt+0xdefc>
    b6e8:	cmp	r0, #0
    b6ec:	bne	b784 <el_line@plt+0x92d0>
    b6f0:	ldr	r1, [pc, #196]	; b7bc <el_line@plt+0x9308>
    b6f4:	mov	r0, r5
    b6f8:	add	r1, pc, r1
    b6fc:	bl	105d8 <el_line@plt+0xe124>
    b700:	cmp	r0, #0
    b704:	bne	b784 <el_line@plt+0x92d0>
    b708:	mov	r1, r8
    b70c:	mov	r2, r7
    b710:	mov	r0, r5
    b714:	bl	10514 <el_line@plt+0xe060>
    b718:	cmp	r0, #0
    b71c:	bne	b784 <el_line@plt+0x92d0>
    b720:	mov	r0, r4
    b724:	mov	r1, r5
    b728:	bl	92e0 <el_line@plt+0x6e2c>
    b72c:	ldr	r0, [pc, #140]	; b7c0 <el_line@plt+0x930c>
    b730:	mov	r1, r6
    b734:	add	r0, pc, r0
    b738:	bl	1148c <el_line@plt+0xefd8>
    b73c:	mov	r0, r5
    b740:	bl	ec5c <el_line@plt+0xc7a8>
    b744:	mov	r0, r4
    b748:	mov	r1, r6
    b74c:	bl	9630 <el_line@plt+0x717c>
    b750:	subs	r4, r0, #0
    b754:	bne	b760 <el_line@plt+0x92ac>
    b758:	mov	r0, r4
    b75c:	pop	{r4, r5, r6, r7, r8, pc}
    b760:	bl	df2c <el_line@plt+0xba78>
    b764:	mov	r1, r0
    b768:	ldr	r0, [pc, #84]	; b7c4 <el_line@plt+0x9310>
    b76c:	add	r0, pc, r0
    b770:	bl	11238 <el_line@plt+0xed84>
    b774:	mov	r0, r4
    b778:	pop	{r4, r5, r6, r7, r8, pc}
    b77c:	mvn	r0, #0
    b780:	pop	{r4, r5, r6, r7, r8, pc}
    b784:	bl	e4c8 <el_line@plt+0xc014>
    b788:	ldr	r1, [pc, #56]	; b7c8 <el_line@plt+0x9314>
    b78c:	add	r1, pc, r1
    b790:	add	r1, r1, #200	; 0xc8
    b794:	mov	r2, r0
    b798:	ldr	r0, [pc, #44]	; b7cc <el_line@plt+0x9318>
    b79c:	add	r0, pc, r0
    b7a0:	bl	10980 <el_line@plt+0xe4cc>
    b7a4:	ldr	r1, [pc, #36]	; b7d0 <el_line@plt+0x931c>
    b7a8:	ldr	r0, [pc, #36]	; b7d4 <el_line@plt+0x9320>
    b7ac:	add	r1, pc, r1
    b7b0:	add	r0, pc, r0
    b7b4:	add	r1, r1, #200	; 0xc8
    b7b8:	bl	10980 <el_line@plt+0xe4cc>
    b7bc:	ldrdeq	r0, [r1], -r4
    b7c0:	andeq	r0, r1, ip, lsl #12
    b7c4:	strdeq	r0, [r1], -r8
    b7c8:	andeq	pc, r0, r0, lsl #27
    b7cc:			; <UNDEFINED> instruction: 0x0000feb8
    b7d0:	andeq	pc, r0, r0, ror #26
    b7d4:	andeq	pc, r0, ip, lsl pc	; <UNPREDICTABLE>
    b7d8:	ldr	ip, [pc, #928]	; bb80 <el_line@plt+0x96cc>
    b7dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b7e0:	mov	r5, r0
    b7e4:	ldr	r0, [pc, #920]	; bb84 <el_line@plt+0x96d0>
    b7e8:	add	ip, pc, ip
    b7ec:	mov	sl, r1
    b7f0:	ldr	r1, [r5, #24]
    b7f4:	mov	r7, r3
    b7f8:	mov	r3, ip
    b7fc:	ldr	r9, [ip, r0]
    b800:	sub	sp, sp, #28
    b804:	tst	r1, #2
    b808:	mov	r8, r2
    b80c:	ldr	r3, [r9]
    b810:	str	r3, [sp, #20]
    b814:	beq	ba94 <el_line@plt+0x95e0>
    b818:	ldr	r6, [r5, #20]
    b81c:	add	r3, r6, #1
    b820:	str	r3, [r5, #20]
    b824:	bl	e9c4 <el_line@plt+0xc510>
    b828:	subs	r4, r0, #0
    b82c:	beq	bb28 <el_line@plt+0x9674>
    b830:	bl	efc0 <el_line@plt+0xcb0c>
    b834:	mov	r0, r4
    b838:	mov	r1, #200	; 0xc8
    b83c:	bl	104b0 <el_line@plt+0xdffc>
    b840:	cmp	r0, #0
    b844:	bne	bacc <el_line@plt+0x9618>
    b848:	mov	r0, r4
    b84c:	mov	r1, r6
    b850:	bl	103b0 <el_line@plt+0xdefc>
    b854:	cmp	r0, #0
    b858:	bne	bacc <el_line@plt+0x9618>
    b85c:	ldr	r1, [pc, #804]	; bb88 <el_line@plt+0x96d4>
    b860:	mov	r0, r4
    b864:	add	r1, pc, r1
    b868:	bl	105d8 <el_line@plt+0xe124>
    b86c:	cmp	r0, #0
    b870:	bne	bacc <el_line@plt+0x9618>
    b874:	mov	r1, sl
    b878:	mov	r0, r4
    b87c:	bl	105d8 <el_line@plt+0xe124>
    b880:	cmp	r0, #0
    b884:	bne	bacc <el_line@plt+0x9618>
    b888:	mov	r1, r4
    b88c:	mov	r0, r5
    b890:	bl	92e0 <el_line@plt+0x6e2c>
    b894:	mov	r0, r4
    b898:	bl	ec5c <el_line@plt+0xc7a8>
    b89c:	bl	e9c4 <el_line@plt+0xc510>
    b8a0:	subs	sl, r0, #0
    b8a4:	beq	bb10 <el_line@plt+0x965c>
    b8a8:	mov	r0, r5
    b8ac:	mov	r1, sl
    b8b0:	bl	9428 <el_line@plt+0x6f74>
    b8b4:	mov	r0, sl
    b8b8:	add	r1, sp, #3
    b8bc:	bl	fca0 <el_line@plt+0xd7ec>
    b8c0:	cmp	r0, #0
    b8c4:	bne	baec <el_line@plt+0x9638>
    b8c8:	mov	r0, sl
    b8cc:	add	r1, sp, #4
    b8d0:	bl	fbf4 <el_line@plt+0xd740>
    b8d4:	cmp	r0, #0
    b8d8:	bne	baec <el_line@plt+0x9638>
    b8dc:	ldr	r0, [pc, #680]	; bb8c <el_line@plt+0x96d8>
    b8e0:	ldrb	r1, [sp, #3]
    b8e4:	add	r0, pc, r0
    b8e8:	ldr	r2, [sp, #4]
    b8ec:	bl	1148c <el_line@plt+0xefd8>
    b8f0:	ldr	r1, [sp, #4]
    b8f4:	cmp	r6, r1
    b8f8:	bne	bb40 <el_line@plt+0x968c>
    b8fc:	ldrb	r2, [sp, #3]
    b900:	cmp	r2, #101	; 0x65
    b904:	beq	ba38 <el_line@plt+0x9584>
    b908:	cmp	r2, #201	; 0xc9
    b90c:	bne	bb50 <el_line@plt+0x969c>
    b910:	mov	r1, #0
    b914:	mov	r2, #88	; 0x58
    b918:	mov	r0, r8
    b91c:	bl	2064 <memset@plt>
    b920:	mov	r0, sl
    b924:	mov	r1, r8
    b928:	bl	faf8 <el_line@plt+0xd644>
    b92c:	subs	fp, r0, #0
    b930:	bne	baa8 <el_line@plt+0x95f4>
    b934:	mov	r0, sl
    b938:	add	r1, r8, #8
    b93c:	bl	faf8 <el_line@plt+0xd644>
    b940:	subs	fp, r0, #0
    b944:	bne	baa8 <el_line@plt+0x95f4>
    b948:	mov	r0, sl
    b94c:	add	r1, r8, #16
    b950:	bl	faf8 <el_line@plt+0xd644>
    b954:	subs	fp, r0, #0
    b958:	bne	baa8 <el_line@plt+0x95f4>
    b95c:	mov	r0, sl
    b960:	add	r1, r8, #24
    b964:	bl	faf8 <el_line@plt+0xd644>
    b968:	subs	fp, r0, #0
    b96c:	bne	baa8 <el_line@plt+0x95f4>
    b970:	mov	r0, sl
    b974:	add	r1, r8, #32
    b978:	bl	faf8 <el_line@plt+0xd644>
    b97c:	subs	fp, r0, #0
    b980:	bne	baa8 <el_line@plt+0x95f4>
    b984:	mov	r0, sl
    b988:	add	r1, r8, #40	; 0x28
    b98c:	bl	faf8 <el_line@plt+0xd644>
    b990:	subs	fp, r0, #0
    b994:	bne	baa8 <el_line@plt+0x95f4>
    b998:	mov	r0, sl
    b99c:	add	r1, r8, #48	; 0x30
    b9a0:	bl	faf8 <el_line@plt+0xd644>
    b9a4:	subs	fp, r0, #0
    b9a8:	bne	baa8 <el_line@plt+0x95f4>
    b9ac:	mov	r0, sl
    b9b0:	add	r1, r8, #56	; 0x38
    b9b4:	bl	faf8 <el_line@plt+0xd644>
    b9b8:	subs	fp, r0, #0
    b9bc:	bne	baa8 <el_line@plt+0x95f4>
    b9c0:	mov	r0, sl
    b9c4:	add	r1, r8, #64	; 0x40
    b9c8:	bl	faf8 <el_line@plt+0xd644>
    b9cc:	subs	fp, r0, #0
    b9d0:	bne	baa8 <el_line@plt+0x95f4>
    b9d4:	mov	r0, sl
    b9d8:	add	r1, sp, #8
    b9dc:	bl	faf8 <el_line@plt+0xd644>
    b9e0:	subs	fp, r0, #0
    b9e4:	bne	baa8 <el_line@plt+0x95f4>
    b9e8:	mov	r0, sl
    b9ec:	add	r1, r8, #80	; 0x50
    b9f0:	bl	faf8 <el_line@plt+0xd644>
    b9f4:	subs	fp, r0, #0
    b9f8:	bne	baa8 <el_line@plt+0x95f4>
    b9fc:	ldrd	r4, [sp, #8]
    ba00:	mov	r0, sl
    ba04:	mov	r6, #3
    ba08:	mov	r7, #0
    ba0c:	and	r4, r4, r6
    ba10:	and	r5, r5, r7
    ba14:	strd	r4, [r8, #72]	; 0x48
    ba18:	bl	ec5c <el_line@plt+0xc7a8>
    ba1c:	mov	r0, fp
    ba20:	ldr	r2, [sp, #20]
    ba24:	ldr	r3, [r9]
    ba28:	cmp	r2, r3
    ba2c:	bne	bb0c <el_line@plt+0x9658>
    ba30:	add	sp, sp, #28
    ba34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba38:	mov	r0, sl
    ba3c:	add	r1, sp, #8
    ba40:	bl	fbf4 <el_line@plt+0xd740>
    ba44:	cmp	r0, #0
    ba48:	bne	bb60 <el_line@plt+0x96ac>
    ba4c:	cmp	r7, #0
    ba50:	ldr	r0, [sp, #8]
    ba54:	beq	ba7c <el_line@plt+0x95c8>
    ba58:	bl	df2c <el_line@plt+0xba78>
    ba5c:	mov	r1, r0
    ba60:	ldr	r0, [pc, #296]	; bb90 <el_line@plt+0x96dc>
    ba64:	add	r0, pc, r0
    ba68:	bl	113bc <el_line@plt+0xef08>
    ba6c:	mov	r0, sl
    ba70:	bl	ec5c <el_line@plt+0xc7a8>
    ba74:	mvn	r0, #0
    ba78:	b	ba20 <el_line@plt+0x956c>
    ba7c:	bl	df2c <el_line@plt+0xba78>
    ba80:	mov	r1, r0
    ba84:	ldr	r0, [pc, #264]	; bb94 <el_line@plt+0x96e0>
    ba88:	add	r0, pc, r0
    ba8c:	bl	11238 <el_line@plt+0xed84>
    ba90:	b	ba6c <el_line@plt+0x95b8>
    ba94:	ldr	r0, [pc, #252]	; bb98 <el_line@plt+0x96e4>
    ba98:	add	r0, pc, r0
    ba9c:	bl	11238 <el_line@plt+0xed84>
    baa0:	mvn	r0, #0
    baa4:	b	ba20 <el_line@plt+0x956c>
    baa8:	mov	r0, fp
    baac:	bl	e4c8 <el_line@plt+0xc014>
    bab0:	ldr	r1, [pc, #228]	; bb9c <el_line@plt+0x96e8>
    bab4:	add	r1, pc, r1
    bab8:	add	r1, r1, #224	; 0xe0
    babc:	mov	r2, r0
    bac0:	ldr	r0, [pc, #216]	; bba0 <el_line@plt+0x96ec>
    bac4:	add	r0, pc, r0
    bac8:	bl	10980 <el_line@plt+0xe4cc>
    bacc:	bl	e4c8 <el_line@plt+0xc014>
    bad0:	ldr	r1, [pc, #204]	; bba4 <el_line@plt+0x96f0>
    bad4:	add	r1, pc, r1
    bad8:	add	r1, r1, #212	; 0xd4
    badc:	mov	r2, r0
    bae0:	ldr	r0, [pc, #192]	; bba8 <el_line@plt+0x96f4>
    bae4:	add	r0, pc, r0
    bae8:	bl	10980 <el_line@plt+0xe4cc>
    baec:	bl	e4c8 <el_line@plt+0xc014>
    baf0:	ldr	r1, [pc, #180]	; bbac <el_line@plt+0x96f8>
    baf4:	add	r1, pc, r1
    baf8:	add	r1, r1, #224	; 0xe0
    bafc:	mov	r2, r0
    bb00:	ldr	r0, [pc, #168]	; bbb0 <el_line@plt+0x96fc>
    bb04:	add	r0, pc, r0
    bb08:	bl	10980 <el_line@plt+0xe4cc>
    bb0c:	bl	21e4 <__stack_chk_fail@plt>
    bb10:	ldr	r1, [pc, #156]	; bbb4 <el_line@plt+0x9700>
    bb14:	ldr	r0, [pc, #156]	; bbb8 <el_line@plt+0x9704>
    bb18:	add	r1, pc, r1
    bb1c:	add	r0, pc, r0
    bb20:	add	r1, r1, #224	; 0xe0
    bb24:	bl	10980 <el_line@plt+0xe4cc>
    bb28:	ldr	r1, [pc, #140]	; bbbc <el_line@plt+0x9708>
    bb2c:	ldr	r0, [pc, #140]	; bbc0 <el_line@plt+0x970c>
    bb30:	add	r1, pc, r1
    bb34:	add	r0, pc, r0
    bb38:	add	r1, r1, #212	; 0xd4
    bb3c:	bl	10980 <el_line@plt+0xe4cc>
    bb40:	ldr	r0, [pc, #124]	; bbc4 <el_line@plt+0x9710>
    bb44:	mov	r2, r6
    bb48:	add	r0, pc, r0
    bb4c:	bl	10980 <el_line@plt+0xe4cc>
    bb50:	ldr	r0, [pc, #112]	; bbc8 <el_line@plt+0x9714>
    bb54:	mov	r1, #201	; 0xc9
    bb58:	add	r0, pc, r0
    bb5c:	bl	10980 <el_line@plt+0xe4cc>
    bb60:	bl	e4c8 <el_line@plt+0xc014>
    bb64:	ldr	r1, [pc, #96]	; bbcc <el_line@plt+0x9718>
    bb68:	add	r1, pc, r1
    bb6c:	add	r1, r1, #224	; 0xe0
    bb70:	mov	r2, r0
    bb74:	ldr	r0, [pc, #84]	; bbd0 <el_line@plt+0x971c>
    bb78:	add	r0, pc, r0
    bb7c:	bl	10980 <el_line@plt+0xe4cc>
    bb80:	andeq	r3, r2, ip, ror r5
    bb84:	andeq	r0, r0, ip, lsr #4
    bb88:	andeq	r0, r1, r4, lsr #32
    bb8c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    bb90:	andeq	r0, r1, r4, ror r3
    bb94:	andeq	r0, r1, r0, asr r3
    bb98:	andeq	r0, r1, r4, ror #5
    bb9c:	andeq	pc, r0, r8, asr sl	; <UNPREDICTABLE>
    bba0:	muleq	r0, r0, fp
    bba4:	andeq	pc, r0, r8, lsr sl	; <UNPREDICTABLE>
    bba8:	andeq	pc, r0, r0, ror fp	; <UNPREDICTABLE>
    bbac:	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
    bbb0:	andeq	pc, r0, r0, asr fp	; <UNPREDICTABLE>
    bbb4:	strdeq	pc, [r0], -r4
    bbb8:			; <UNDEFINED> instruction: 0x0000fbb0
    bbbc:	ldrdeq	pc, [r0], -ip
    bbc0:	muleq	r0, r8, fp
    bbc4:	andeq	pc, r0, r0, lsl #24
    bbc8:	muleq	r1, r8, r2
    bbcc:	andeq	pc, r0, r4, lsr #19
    bbd0:	ldrdeq	pc, [r0], -ip
    bbd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bbd8:	sub	sp, sp, #364	; 0x16c
    bbdc:	ldr	r4, [pc, #3028]	; c7b8 <el_line@plt+0xa304>
    bbe0:	cmp	r3, #0
    bbe4:	ldr	ip, [pc, #3024]	; c7bc <el_line@plt+0xa308>
    bbe8:	mov	fp, r0
    bbec:	add	r4, pc, r4
    bbf0:	str	r3, [sp, #80]	; 0x50
    bbf4:	str	r4, [sp, #68]	; 0x44
    bbf8:	add	r3, sp, #360	; 0x168
    bbfc:	str	r2, [sp, #100]	; 0x64
    bc00:	mov	r2, #0
    bc04:	ldr	ip, [r4, ip]
    bc08:	str	r2, [r3, #-176]!	; 0xffffff50
    bc0c:	str	r3, [sp, #188]	; 0xbc
    bc10:	ldr	r3, [ip]
    bc14:	str	ip, [sp, #104]	; 0x68
    bc18:	str	r1, [sp, #72]	; 0x48
    bc1c:	str	r2, [sp, #160]	; 0xa0
    bc20:	str	r3, [sp, #356]	; 0x164
    bc24:	beq	c4cc <el_line@plt+0xa018>
    bc28:	ldr	r5, [sp, #80]	; 0x50
    bc2c:	ldr	r3, [r5]
    bc30:	tst	r3, #4
    bc34:	beq	c0f0 <el_line@plt+0x9c3c>
    bc38:	ldr	r2, [r5, #24]
    bc3c:	and	r1, r2, #61440	; 0xf000
    bc40:	ubfx	r2, r2, #0, #9
    bc44:	cmp	r1, #32768	; 0x8000
    bc48:	str	r2, [sp, #112]	; 0x70
    bc4c:	bne	c5a8 <el_line@plt+0xa0f4>
    bc50:	tst	r3, #1
    bc54:	ldr	r8, [fp, #8]
    bc58:	ldrne	r5, [sp, #80]	; 0x50
    bc5c:	moveq	r6, #0
    bc60:	moveq	r7, #0
    bc64:	strdeq	r6, [sp, #88]	; 0x58
    bc68:	ldrdne	r4, [r5, #8]
    bc6c:	strdne	r4, [sp, #88]	; 0x58
    bc70:	bl	e9c4 <el_line@plt+0xc510>
    bc74:	cmp	r0, #0
    bc78:	str	r0, [sp, #52]	; 0x34
    bc7c:	beq	c7a0 <el_line@plt+0xa2ec>
    bc80:	add	r4, sp, #208	; 0xd0
    bc84:	mov	r0, r4
    bc88:	bl	db30 <el_line@plt+0xb67c>
    bc8c:	ldr	r3, [fp, #20]
    bc90:	ldr	r0, [sp, #52]	; 0x34
    bc94:	mov	r1, #3
    bc98:	add	r2, r3, #1
    bc9c:	str	r2, [fp, #20]
    bca0:	str	r3, [sp, #156]	; 0x9c
    bca4:	bl	104b0 <el_line@plt+0xdffc>
    bca8:	cmp	r0, #0
    bcac:	bne	c700 <el_line@plt+0xa24c>
    bcb0:	ldr	r0, [sp, #52]	; 0x34
    bcb4:	ldr	r1, [sp, #156]	; 0x9c
    bcb8:	bl	103b0 <el_line@plt+0xdefc>
    bcbc:	cmp	r0, #0
    bcc0:	bne	c700 <el_line@plt+0xa24c>
    bcc4:	ldr	r0, [sp, #52]	; 0x34
    bcc8:	ldr	r1, [sp, #72]	; 0x48
    bccc:	bl	105d8 <el_line@plt+0xe124>
    bcd0:	cmp	r0, #0
    bcd4:	bne	c700 <el_line@plt+0xa24c>
    bcd8:	ldr	r0, [sp, #52]	; 0x34
    bcdc:	mov	r1, #1
    bce0:	bl	103b0 <el_line@plt+0xdefc>
    bce4:	cmp	r0, #0
    bce8:	bne	c700 <el_line@plt+0xa24c>
    bcec:	mov	r1, r4
    bcf0:	ldr	r0, [sp, #52]	; 0x34
    bcf4:	bl	de5c <el_line@plt+0xb9a8>
    bcf8:	cmp	r0, #0
    bcfc:	bne	c700 <el_line@plt+0xa24c>
    bd00:	mov	r0, fp
    bd04:	ldr	r1, [sp, #52]	; 0x34
    bd08:	bl	92e0 <el_line@plt+0x6e2c>
    bd0c:	ldr	r0, [pc, #2732]	; c7c0 <el_line@plt+0xa30c>
    bd10:	ldr	r1, [sp, #156]	; 0x9c
    bd14:	add	r0, pc, r0
    bd18:	ldr	r2, [sp, #72]	; 0x48
    bd1c:	bl	1148c <el_line@plt+0xefd8>
    bd20:	ldr	r7, [sp, #72]	; 0x48
    bd24:	ldr	r3, [pc, #2712]	; c7c4 <el_line@plt+0xa310>
    bd28:	mov	r0, fp
    bd2c:	ldr	r1, [sp, #156]	; 0x9c
    bd30:	add	r2, sp, #164	; 0xa4
    bd34:	str	r7, [sp]
    bd38:	add	r3, pc, r3
    bd3c:	bl	987c <el_line@plt+0x73c8>
    bd40:	cmp	r0, #0
    bd44:	str	r0, [sp, #44]	; 0x2c
    bd48:	beq	c6d0 <el_line@plt+0xa21c>
    bd4c:	ldr	ip, [sp, #404]	; 0x194
    bd50:	ldr	r0, [sp, #100]	; 0x64
    bd54:	cmp	ip, #0
    bd58:	bne	c0fc <el_line@plt+0x9c48>
    bd5c:	ldr	r5, [sp, #112]	; 0x70
    bd60:	movw	r1, #577	; 0x241
    bd64:	orr	r2, r5, #128	; 0x80
    bd68:	bl	2184 <open64@plt>
    bd6c:	cmn	r0, #1
    bd70:	str	r0, [sp, #76]	; 0x4c
    bd74:	beq	c44c <el_line@plt+0x9f98>
    bd78:	mov	r2, #0
    bd7c:	mov	r3, #0
    bd80:	strd	r2, [sp, #120]	; 0x78
    bd84:	ldr	r1, [pc, #2620]	; c7c8 <el_line@plt+0xa314>
    bd88:	ldr	r5, [sp, #68]	; 0x44
    bd8c:	strd	r2, [sp, #176]	; 0xb0
    bd90:	ldr	r3, [r5, r1]
    bd94:	str	r3, [sp, #128]	; 0x80
    bd98:	ldr	r3, [r3]
    bd9c:	cmp	r3, #0
    bda0:	beq	bdb0 <el_line@plt+0x98fc>
    bda4:	ldrd	r6, [sp, #88]	; 0x58
    bda8:	orrs	r7, r6, r7
    bdac:	bne	c494 <el_line@plt+0x9fe0>
    bdb0:	ldr	r7, [sp, #68]	; 0x44
    bdb4:	mov	r6, #0
    bdb8:	ldr	r3, [pc, #2572]	; c7cc <el_line@plt+0xa318>
    bdbc:	mov	sl, #1
    bdc0:	ldrd	r4, [sp, #120]	; 0x78
    bdc4:	str	r6, [sp, #64]	; 0x40
    bdc8:	str	r6, [sp, #136]	; 0x88
    bdcc:	str	r6, [sp, #144]	; 0x90
    bdd0:	str	r6, [sp, #108]	; 0x6c
    bdd4:	str	r6, [sp, #116]	; 0x74
    bdd8:	ldr	r3, [r7, r3]
    bddc:	ldr	r6, [pc, #2540]	; c7d0 <el_line@plt+0xa31c>
    bde0:	strd	r4, [sp, #56]	; 0x38
    bde4:	ldr	r7, [pc, #2536]	; c7d4 <el_line@plt+0xa320>
    bde8:	add	r6, pc, r6
    bdec:	ldr	r5, [pc, #2532]	; c7d8 <el_line@plt+0xa324>
    bdf0:	ldr	ip, [pc, #2532]	; c7dc <el_line@plt+0xa328>
    bdf4:	add	r7, pc, r7
    bdf8:	ldr	r4, [pc, #2528]	; c7e0 <el_line@plt+0xa32c>
    bdfc:	add	r5, pc, r5
    be00:	add	ip, pc, ip
    be04:	str	r3, [sp, #84]	; 0x54
    be08:	add	r4, pc, r4
    be0c:	str	r5, [sp, #48]	; 0x30
    be10:	str	r6, [sp, #96]	; 0x60
    be14:	str	r7, [sp, #132]	; 0x84
    be18:	str	ip, [sp, #148]	; 0x94
    be1c:	str	r4, [sp, #140]	; 0x8c
    be20:	ldr	ip, [sp, #84]	; 0x54
    be24:	ldr	r9, [ip]
    be28:	cmp	r9, #0
    be2c:	beq	c1bc <el_line@plt+0x9d08>
    be30:	ldr	r4, [sp, #64]	; 0x40
    be34:	cmp	r4, #0
    be38:	beq	c014 <el_line@plt+0x9b60>
    be3c:	mov	sl, #0
    be40:	ldr	r0, [sp, #52]	; 0x34
    be44:	bl	efc0 <el_line@plt+0xcb0c>
    be48:	mov	r0, fp
    be4c:	ldr	r1, [sp, #52]	; 0x34
    be50:	bl	9428 <el_line@plt+0x6f74>
    be54:	ldr	r0, [sp, #52]	; 0x34
    be58:	add	r1, sp, #155	; 0x9b
    be5c:	bl	fca0 <el_line@plt+0xd7ec>
    be60:	cmp	r0, #0
    be64:	bne	c6e0 <el_line@plt+0xa22c>
    be68:	ldr	r0, [sp, #52]	; 0x34
    be6c:	add	r1, sp, #156	; 0x9c
    be70:	bl	fbf4 <el_line@plt+0xd740>
    be74:	cmp	r0, #0
    be78:	bne	c6e0 <el_line@plt+0xa22c>
    be7c:	ldrb	r1, [sp, #155]	; 0x9b
    be80:	mov	r3, sl
    be84:	ldr	r0, [sp, #96]	; 0x60
    be88:	ldr	r2, [sp, #156]	; 0x9c
    be8c:	bl	1148c <el_line@plt+0xefd8>
    be90:	ldr	r6, [sp, #184]	; 0xb8
    be94:	ldr	r1, [sp, #156]	; 0x9c
    be98:	cmp	r6, #0
    be9c:	bne	beb0 <el_line@plt+0x99fc>
    bea0:	b	c1b0 <el_line@plt+0x9cfc>
    bea4:	ldr	r6, [r6, #16]
    bea8:	cmp	r6, #0
    beac:	beq	c1b0 <el_line@plt+0x9cfc>
    beb0:	ldr	r3, [r6]
    beb4:	cmp	r3, r1
    beb8:	bne	bea4 <el_line@plt+0x99f0>
    bebc:	ldrb	r2, [sp, #155]	; 0x9b
    bec0:	cmp	r2, #101	; 0x65
    bec4:	beq	c2ec <el_line@plt+0x9e38>
    bec8:	cmp	r2, #103	; 0x67
    becc:	bne	c2dc <el_line@plt+0x9e28>
    bed0:	ldr	r0, [sp, #52]	; 0x34
    bed4:	add	r1, sp, #168	; 0xa8
    bed8:	add	r2, sp, #172	; 0xac
    bedc:	bl	fe38 <el_line@plt+0xd984>
    bee0:	subs	r7, r0, #0
    bee4:	bne	c754 <el_line@plt+0xa2a0>
    bee8:	ldrd	r2, [r6, #8]
    beec:	ldr	r1, [sp, #172]	; 0xac
    bef0:	subs	r4, r2, #1
    bef4:	ldr	r0, [sp, #132]	; 0x84
    bef8:	sbc	r5, r3, #0
    befc:	adds	r4, r4, r1
    bf00:	adc	r5, r5, #0
    bf04:	strd	r4, [sp]
    bf08:	bl	1148c <el_line@plt+0xefd8>
    bf0c:	ldr	r2, [r6, #4]
    bf10:	ldr	r1, [sp, #172]	; 0xac
    bf14:	cmp	r2, r1
    bf18:	bcc	c774 <el_line@plt+0xa2c0>
    bf1c:	ldrd	r2, [r6, #8]
    bf20:	ldr	r0, [sp, #76]	; 0x4c
    bf24:	str	r7, [sp]
    bf28:	bl	2358 <lseek64@plt>
    bf2c:	mvn	r2, #0
    bf30:	mvn	r3, #0
    bf34:	cmp	r1, r3
    bf38:	cmpeq	r0, r2
    bf3c:	bne	c350 <el_line@plt+0x9e9c>
    bf40:	ldr	r7, [sp, #172]	; 0xac
    bf44:	ldr	ip, [sp, #116]	; 0x74
    bf48:	cmp	ip, #0
    bf4c:	bne	c37c <el_line@plt+0x9ec8>
    bf50:	bl	23ac <__errno_location@plt>
    bf54:	mov	r4, #1
    bf58:	ldr	sl, [sp, #116]	; 0x74
    bf5c:	str	r4, [sp, #116]	; 0x74
    bf60:	ldr	r0, [r0]
    bf64:	str	r0, [sp, #144]	; 0x90
    bf68:	ldrd	r0, [sp, #176]	; 0xb0
    bf6c:	mov	r2, r7
    bf70:	mov	r3, #0
    bf74:	bl	192fc <el_line@plt+0x16e48>
    bf78:	strd	r0, [sp, #176]	; 0xb0
    bf7c:	ldr	r0, [sp, #168]	; 0xa8
    bf80:	bl	1f20 <free@plt>
    bf84:	ldr	r1, [r6, #4]
    bf88:	ldr	ip, [sp, #172]	; 0xac
    bf8c:	cmp	r1, ip
    bf90:	bne	c3b4 <el_line@plt+0x9f00>
    bf94:	ldr	r3, [r6, #16]
    bf98:	mov	r0, r6
    bf9c:	ldr	r2, [r6, #20]
    bfa0:	cmp	r3, #0
    bfa4:	strne	r2, [r3, #20]
    bfa8:	ldrne	r2, [r6, #20]
    bfac:	ldrne	r3, [r6, #16]
    bfb0:	streq	r2, [sp, #188]	; 0xbc
    bfb4:	str	r3, [r2]
    bfb8:	bl	1f20 <free@plt>
    bfbc:	ldr	r5, [sp, #64]	; 0x40
    bfc0:	sub	r5, r5, #1
    bfc4:	str	r5, [sp, #64]	; 0x40
    bfc8:	cmp	sl, #0
    bfcc:	beq	c008 <el_line@plt+0x9b54>
    bfd0:	ldrd	r6, [sp, #88]	; 0x58
    bfd4:	ldrd	r4, [sp, #56]	; 0x38
    bfd8:	cmp	r5, r7
    bfdc:	cmpeq	r4, r6
    bfe0:	movls	r3, #0
    bfe4:	movhi	r3, #1
    bfe8:	orrs	r7, r6, r7
    bfec:	moveq	r3, #0
    bff0:	andne	r3, r3, #1
    bff4:	cmp	r3, #0
    bff8:	bne	c4ac <el_line@plt+0x9ff8>
    bffc:	ldr	r3, [fp, #12]
    c000:	cmp	sl, r3
    c004:	addls	sl, sl, #1
    c008:	ldr	r4, [sp, #64]	; 0x40
    c00c:	orrs	r4, sl, r4
    c010:	bne	be20 <el_line@plt+0x996c>
    c014:	ldr	r5, [sp, #128]	; 0x80
    c018:	ldr	r3, [r5]
    c01c:	cmp	r3, #0
    c020:	beq	c034 <el_line@plt+0x9b80>
    c024:	ldrd	r6, [sp, #88]	; 0x58
    c028:	orrs	r7, r6, r7
    c02c:	beq	c034 <el_line@plt+0x9b80>
    c030:	bl	3b60 <el_line@plt+0x16ac>
    c034:	ldr	r3, [sp, #184]	; 0xb8
    c038:	cmp	r3, #0
    c03c:	bne	c720 <el_line@plt+0xa26c>
    c040:	ldr	ip, [sp, #108]	; 0x6c
    c044:	ldr	r4, [sp, #116]	; 0x74
    c048:	orrs	ip, ip, r4
    c04c:	bne	c4e8 <el_line@plt+0xa034>
    c050:	ldr	r5, [sp, #84]	; 0x54
    c054:	ldr	r3, [r5]
    c058:	cmp	r3, #0
    c05c:	bne	c4e8 <el_line@plt+0xa034>
    c060:	mov	r0, fp
    c064:	ldr	r1, [sp, #44]	; 0x2c
    c068:	ldr	r2, [sp, #164]	; 0xa4
    c06c:	bl	a374 <el_line@plt+0x7ec0>
    c070:	cmp	r0, #0
    c074:	bne	c08c <el_line@plt+0x9bd8>
    c078:	ldr	r4, [sp, #84]	; 0x54
    c07c:	ldr	r3, [r4]
    c080:	cmp	r3, #0
    c084:	streq	r3, [sp, #160]	; 0xa0
    c088:	beq	c094 <el_line@plt+0x9be0>
    c08c:	mov	r3, #4
    c090:	str	r3, [sp, #160]	; 0xa0
    c094:	ldr	r5, [sp, #400]	; 0x190
    c098:	cmp	r5, #0
    c09c:	bne	c630 <el_line@plt+0xa17c>
    c0a0:	ldr	r7, [sp, #408]	; 0x198
    c0a4:	cmp	r7, #0
    c0a8:	beq	c574 <el_line@plt+0xa0c0>
    c0ac:	ldr	r0, [pc, #1840]	; c7e4 <el_line@plt+0xa330>
    c0b0:	ldr	r1, [sp, #100]	; 0x64
    c0b4:	add	r0, pc, r0
    c0b8:	bl	113bc <el_line@plt+0xef08>
    c0bc:	ldr	r0, [sp, #76]	; 0x4c
    c0c0:	bl	1e90 <fsync@plt>
    c0c4:	cmn	r0, #1
    c0c8:	bne	c574 <el_line@plt+0xa0c0>
    c0cc:	bl	23ac <__errno_location@plt>
    c0d0:	ldr	r0, [r0]
    c0d4:	bl	1fa4 <strerror@plt>
    c0d8:	ldr	r1, [sp, #100]	; 0x64
    c0dc:	mov	r2, r0
    c0e0:	ldr	r0, [pc, #1792]	; c7e8 <el_line@plt+0xa334>
    c0e4:	add	r0, pc, r0
    c0e8:	bl	11238 <el_line@plt+0xed84>
    c0ec:	b	c574 <el_line@plt+0xa0c0>
    c0f0:	movw	r6, #438	; 0x1b6
    c0f4:	str	r6, [sp, #112]	; 0x70
    c0f8:	b	bc50 <el_line@plt+0x979c>
    c0fc:	ldr	r4, [sp, #112]	; 0x70
    c100:	mov	r1, #65	; 0x41
    c104:	orr	r2, r4, #128	; 0x80
    c108:	bl	2184 <open64@plt>
    c10c:	cmn	r0, #1
    c110:	str	r0, [sp, #76]	; 0x4c
    c114:	beq	c44c <el_line@plt+0x9f98>
    c118:	mov	r0, #3
    c11c:	ldr	r1, [sp, #76]	; 0x4c
    c120:	add	r2, sp, #248	; 0xf8
    c124:	bl	2070 <__fxstat64@plt>
    c128:	cmn	r0, #1
    c12c:	beq	c5c0 <el_line@plt+0xa10c>
    c130:	add	r5, sp, #512	; 0x200
    c134:	ldrd	r2, [r5, #-216]	; 0xffffff28
    c138:	cmp	r2, #0
    c13c:	sbcs	r6, r3, #0
    c140:	blt	c594 <el_line@plt+0xa0e0>
    c144:	ldrd	r4, [sp, #88]	; 0x58
    c148:	strd	r2, [sp, #120]	; 0x78
    c14c:	cmp	r5, r3
    c150:	cmpeq	r4, r2
    c154:	bcs	bd84 <el_line@plt+0x98d0>
    c158:	ldr	r0, [pc, #1676]	; c7ec <el_line@plt+0xa338>
    c15c:	ldr	r1, [sp, #100]	; 0x64
    c160:	add	r0, pc, r0
    c164:	bl	11238 <el_line@plt+0xed84>
    c168:	ldr	r1, [sp, #44]	; 0x2c
    c16c:	mov	r0, fp
    c170:	ldr	r2, [sp, #164]	; 0xa4
    c174:	bl	a374 <el_line@plt+0x7ec0>
    c178:	ldr	r0, [sp, #52]	; 0x34
    c17c:	bl	ec5c <el_line@plt+0xc7a8>
    c180:	ldr	r0, [sp, #44]	; 0x2c
    c184:	bl	1f20 <free@plt>
    c188:	ldr	r0, [sp, #76]	; 0x4c
    c18c:	bl	20dc <close@plt>
    c190:	mvn	r0, #0
    c194:	ldr	ip, [sp, #104]	; 0x68
    c198:	ldr	r2, [sp, #356]	; 0x164
    c19c:	ldr	r3, [ip]
    c1a0:	cmp	r2, r3
    c1a4:	bne	c72c <el_line@plt+0xa278>
    c1a8:	add	sp, sp, #364	; 0x16c
    c1ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1b0:	ldr	r0, [pc, #1592]	; c7f0 <el_line@plt+0xa33c>
    c1b4:	add	r0, pc, r0
    c1b8:	bl	10980 <el_line@plt+0xe4cc>
    c1bc:	ldr	r5, [sp, #64]	; 0x40
    c1c0:	cmp	sl, r5
    c1c4:	bls	be40 <el_line@plt+0x998c>
    c1c8:	ldrd	r2, [sp, #56]	; 0x38
    c1cc:	mov	r6, r8
    c1d0:	mov	r7, #0
    c1d4:	strd	r6, [sp, #24]
    c1d8:	subs	r2, r2, #1
    c1dc:	ldrd	r4, [sp, #56]	; 0x38
    c1e0:	sbc	r3, r3, #0
    c1e4:	adds	r6, r8, r2
    c1e8:	adc	r7, r7, r3
    c1ec:	ldr	r9, [sp, #64]	; 0x40
    c1f0:	strd	r6, [sp, #16]
    c1f4:	b	c1fc <el_line@plt+0x9d48>
    c1f8:	ldrd	r4, [sp, #32]
    c1fc:	ldrd	r6, [sp, #16]
    c200:	mov	r2, r4
    c204:	ldr	r0, [sp, #48]	; 0x30
    c208:	mov	r3, r5
    c20c:	str	r9, [sp, #8]
    c210:	add	r9, r9, #1
    c214:	strd	r6, [sp]
    c218:	str	sl, [sp, #12]
    c21c:	bl	1148c <el_line@plt+0xefd8>
    c220:	ldrd	r2, [sp, #24]
    c224:	mov	r1, #24
    c228:	mov	r0, #1
    c22c:	adds	r6, r6, r2
    c230:	adc	r7, r7, r3
    c234:	strd	r6, [sp, #16]
    c238:	bl	11598 <el_line@plt+0xf0e4>
    c23c:	ldr	r2, [fp, #20]
    c240:	ldrd	r6, [sp, #24]
    c244:	add	lr, r2, #1
    c248:	str	lr, [fp, #20]
    c24c:	adds	r6, r6, r4
    c250:	ldr	ip, [sp, #44]	; 0x2c
    c254:	adc	r7, r7, r5
    c258:	strd	r6, [sp, #32]
    c25c:	mov	r7, #0
    c260:	mov	r3, r0
    c264:	add	r1, r0, #16
    c268:	str	r2, [r3]
    c26c:	mov	r0, fp
    c270:	str	r8, [r3, #4]
    c274:	ldr	r2, [sp, #188]	; 0xbc
    c278:	strd	r4, [r3, #8]
    c27c:	str	r7, [r3, #16]
    c280:	str	r2, [r3, #20]
    c284:	str	r3, [r2]
    c288:	ldr	r4, [sp, #164]	; 0xa4
    c28c:	str	r1, [sp, #188]	; 0xbc
    c290:	ldm	r3, {r1, lr}
    c294:	ldrd	r2, [r3, #8]
    c298:	str	ip, [sp, #4]
    c29c:	str	lr, [sp]
    c2a0:	str	r4, [sp, #8]
    c2a4:	bl	9df8 <el_line@plt+0x7944>
    c2a8:	cmp	r9, sl
    c2ac:	bcc	c1f8 <el_line@plt+0x9d44>
    c2b0:	ldrd	r6, [sp, #56]	; 0x38
    c2b4:	sub	r3, sl, #1
    c2b8:	ldrd	r4, [sp, #24]
    c2bc:	adds	r4, r4, r6
    c2c0:	adc	r5, r5, r7
    c2c4:	ldr	r7, [sp, #64]	; 0x40
    c2c8:	str	sl, [sp, #64]	; 0x40
    c2cc:	rsb	r3, r7, r3
    c2d0:	umlal	r4, r5, r8, r3
    c2d4:	strd	r4, [sp, #56]	; 0x38
    c2d8:	b	be40 <el_line@plt+0x998c>
    c2dc:	ldr	r0, [pc, #1296]	; c7f4 <el_line@plt+0xa340>
    c2e0:	mov	r1, #103	; 0x67
    c2e4:	add	r0, pc, r0
    c2e8:	bl	10980 <el_line@plt+0xe4cc>
    c2ec:	ldr	r0, [sp, #52]	; 0x34
    c2f0:	add	r1, sp, #160	; 0xa0
    c2f4:	bl	fbf4 <el_line@plt+0xd740>
    c2f8:	cmp	r0, #0
    c2fc:	bne	c780 <el_line@plt+0xa2cc>
    c300:	ldr	r2, [sp, #160]	; 0xa0
    c304:	mov	r0, r6
    c308:	ldr	r3, [r6, #16]
    c30c:	mov	sl, #0
    c310:	cmp	r2, #1
    c314:	ldr	r2, [r6, #20]
    c318:	ldr	ip, [sp, #108]	; 0x6c
    c31c:	movne	ip, #1
    c320:	cmp	r3, #0
    c324:	strne	r2, [r3, #20]
    c328:	ldrne	r2, [r6, #20]
    c32c:	ldrne	r3, [r6, #16]
    c330:	streq	r2, [sp, #188]	; 0xbc
    c334:	str	ip, [sp, #108]	; 0x6c
    c338:	str	r3, [r2]
    c33c:	bl	1f20 <free@plt>
    c340:	ldr	r4, [sp, #64]	; 0x40
    c344:	sub	r4, r4, #1
    c348:	str	r4, [sp, #64]	; 0x40
    c34c:	b	c008 <el_line@plt+0x9b54>
    c350:	ldr	r5, [sp, #68]	; 0x44
    c354:	ldr	r0, [pc, #1180]	; c7f8 <el_line@plt+0xa344>
    c358:	ldr	r1, [sp, #76]	; 0x4c
    c35c:	ldr	r2, [sp, #168]	; 0xa8
    c360:	ldr	r3, [sp, #172]	; 0xac
    c364:	ldr	r0, [r5, r0]
    c368:	bl	11840 <el_line@plt+0xf38c>
    c36c:	ldr	r7, [sp, #172]	; 0xac
    c370:	cmp	r0, r7
    c374:	bne	bf44 <el_line@plt+0x9a90>
    c378:	mov	r7, r0
    c37c:	ldr	r5, [sp, #136]	; 0x88
    c380:	cmp	r5, #0
    c384:	bne	bf68 <el_line@plt+0x9ab4>
    c388:	ldrd	r4, [r6, #8]
    c38c:	ldrd	r0, [sp, #120]	; 0x78
    c390:	cmp	r5, r1
    c394:	cmpeq	r4, r0
    c398:	movhi	r4, #1
    c39c:	strhi	r4, [sp, #136]	; 0x88
    c3a0:	bhi	bf68 <el_line@plt+0x9ab4>
    c3a4:	adds	r2, r4, r7
    c3a8:	adc	r3, r5, #0
    c3ac:	strd	r2, [sp, #120]	; 0x78
    c3b0:	b	bf68 <el_line@plt+0x9ab4>
    c3b4:	ldrd	r2, [r6, #8]
    c3b8:	ldr	r7, [sp, #64]	; 0x40
    c3bc:	subs	r4, r2, #1
    c3c0:	ldr	r0, [sp, #140]	; 0x8c
    c3c4:	sbc	r5, r3, #0
    c3c8:	adds	r2, r2, ip
    c3cc:	adc	r3, r3, #0
    c3d0:	adds	r4, r4, r1
    c3d4:	adc	r5, r5, #0
    c3d8:	str	r7, [sp, #8]
    c3dc:	strd	r4, [sp]
    c3e0:	bl	1148c <el_line@plt+0xefd8>
    c3e4:	ldr	r1, [fp, #20]
    c3e8:	mov	r0, fp
    c3ec:	add	r3, r1, #1
    c3f0:	str	r3, [fp, #20]
    c3f4:	str	r1, [r6]
    c3f8:	ldrd	r2, [r6, #8]
    c3fc:	ldr	ip, [sp, #172]	; 0xac
    c400:	ldr	lr, [r6, #4]
    c404:	adds	r2, r2, ip
    c408:	ldr	r4, [sp, #164]	; 0xa4
    c40c:	adc	r3, r3, #0
    c410:	rsb	ip, ip, lr
    c414:	strd	r2, [r6, #8]
    c418:	str	ip, [r6, #4]
    c41c:	str	ip, [sp]
    c420:	ldr	ip, [sp, #44]	; 0x2c
    c424:	str	r4, [sp, #8]
    c428:	str	ip, [sp, #4]
    c42c:	bl	9df8 <el_line@plt+0x7944>
    c430:	ldr	r3, [sp, #172]	; 0xac
    c434:	cmp	r3, r8
    c438:	bcs	bfc8 <el_line@plt+0x9b14>
    c43c:	cmp	r3, #512	; 0x200
    c440:	movcs	r8, r3
    c444:	movcc	r8, #512	; 0x200
    c448:	b	bfc8 <el_line@plt+0x9b14>
    c44c:	bl	23ac <__errno_location@plt>
    c450:	ldr	r0, [r0]
    c454:	bl	1fa4 <strerror@plt>
    c458:	ldr	r1, [sp, #100]	; 0x64
    c45c:	mov	r2, r0
    c460:	ldr	r0, [pc, #916]	; c7fc <el_line@plt+0xa348>
    c464:	add	r0, pc, r0
    c468:	bl	11238 <el_line@plt+0xed84>
    c46c:	ldr	r1, [sp, #44]	; 0x2c
    c470:	ldr	r2, [sp, #164]	; 0xa4
    c474:	mov	r0, fp
    c478:	bl	a374 <el_line@plt+0x7ec0>
    c47c:	ldr	r0, [sp, #52]	; 0x34
    c480:	bl	ec5c <el_line@plt+0xc7a8>
    c484:	ldr	r0, [sp, #44]	; 0x2c
    c488:	bl	1f20 <free@plt>
    c48c:	mvn	r0, #0
    c490:	b	c194 <el_line@plt+0x9ce0>
    c494:	add	r3, sp, #176	; 0xb0
    c498:	ldr	r0, [sp, #72]	; 0x48
    c49c:	str	r3, [sp]
    c4a0:	ldrd	r2, [sp, #88]	; 0x58
    c4a4:	bl	3ac0 <el_line@plt+0x160c>
    c4a8:	b	bdb0 <el_line@plt+0x98fc>
    c4ac:	ldr	ip, [sp, #64]	; 0x40
    c4b0:	mov	r2, r4
    c4b4:	ldr	r0, [sp, #148]	; 0x94
    c4b8:	mov	r3, r5
    c4bc:	mov	sl, #1
    c4c0:	str	ip, [sp]
    c4c4:	bl	1148c <el_line@plt+0xefd8>
    c4c8:	b	c008 <el_line@plt+0x9b54>
    c4cc:	ldr	r2, [sp, #80]	; 0x50
    c4d0:	bl	ad34 <el_line@plt+0x8880>
    c4d4:	cmp	r0, #0
    c4d8:	str	r0, [sp, #80]	; 0x50
    c4dc:	bne	bc28 <el_line@plt+0x9774>
    c4e0:	mvn	r0, #0
    c4e4:	b	c194 <el_line@plt+0x9ce0>
    c4e8:	ldr	r3, [sp, #136]	; 0x88
    c4ec:	ldr	r6, [sp, #404]	; 0x194
    c4f0:	cmp	r6, #0
    c4f4:	moveq	r3, #0
    c4f8:	andne	r3, r3, #1
    c4fc:	cmp	r3, #0
    c500:	bne	c61c <el_line@plt+0xa168>
    c504:	ldr	r0, [pc, #756]	; c800 <el_line@plt+0xa34c>
    c508:	ldrd	r2, [sp, #120]	; 0x78
    c50c:	add	r0, pc, r0
    c510:	bl	113bc <el_line@plt+0xef08>
    c514:	ldr	r0, [sp, #76]	; 0x4c
    c518:	ldrd	r2, [sp, #120]	; 0x78
    c51c:	bl	1eb4 <ftruncate64@plt>
    c520:	cmn	r0, #1
    c524:	beq	c6ac <el_line@plt+0xa1f8>
    c528:	ldr	r7, [sp, #108]	; 0x6c
    c52c:	cmp	r7, #0
    c530:	bne	c5e4 <el_line@plt+0xa130>
    c534:	ldr	ip, [sp, #116]	; 0x74
    c538:	cmp	ip, #0
    c53c:	beq	c060 <el_line@plt+0x9bac>
    c540:	ldr	r0, [sp, #144]	; 0x90
    c544:	bl	1fa4 <strerror@plt>
    c548:	ldr	r1, [sp, #100]	; 0x64
    c54c:	mov	r2, r0
    c550:	ldr	r0, [pc, #684]	; c804 <el_line@plt+0xa350>
    c554:	add	r0, pc, r0
    c558:	bl	11238 <el_line@plt+0xed84>
    c55c:	mov	r0, fp
    c560:	ldr	r1, [sp, #44]	; 0x2c
    c564:	mov	r3, #4
    c568:	ldr	r2, [sp, #164]	; 0xa4
    c56c:	str	r3, [sp, #160]	; 0xa0
    c570:	bl	a374 <el_line@plt+0x7ec0>
    c574:	ldr	r0, [sp, #76]	; 0x4c
    c578:	bl	20dc <close@plt>
    c57c:	ldr	r0, [sp, #52]	; 0x34
    c580:	bl	ec5c <el_line@plt+0xc7a8>
    c584:	ldr	r0, [sp, #44]	; 0x2c
    c588:	bl	1f20 <free@plt>
    c58c:	ldr	r0, [sp, #160]	; 0xa0
    c590:	b	c194 <el_line@plt+0x9ce0>
    c594:	ldr	r0, [pc, #620]	; c808 <el_line@plt+0xa354>
    c598:	ldr	r1, [sp, #100]	; 0x64
    c59c:	add	r0, pc, r0
    c5a0:	bl	11238 <el_line@plt+0xed84>
    c5a4:	b	c168 <el_line@plt+0x9cb4>
    c5a8:	ldr	r0, [pc, #604]	; c80c <el_line@plt+0xa358>
    c5ac:	ldr	r1, [sp, #72]	; 0x48
    c5b0:	add	r0, pc, r0
    c5b4:	bl	11238 <el_line@plt+0xed84>
    c5b8:	mvn	r0, #0
    c5bc:	b	c194 <el_line@plt+0x9ce0>
    c5c0:	bl	23ac <__errno_location@plt>
    c5c4:	ldr	r0, [r0]
    c5c8:	bl	1fa4 <strerror@plt>
    c5cc:	ldr	r1, [sp, #100]	; 0x64
    c5d0:	mov	r2, r0
    c5d4:	ldr	r0, [pc, #564]	; c810 <el_line@plt+0xa35c>
    c5d8:	add	r0, pc, r0
    c5dc:	bl	11238 <el_line@plt+0xed84>
    c5e0:	b	c168 <el_line@plt+0x9cb4>
    c5e4:	ldr	r0, [sp, #160]	; 0xa0
    c5e8:	bl	df2c <el_line@plt+0xba78>
    c5ec:	ldr	r1, [sp, #72]	; 0x48
    c5f0:	mov	r2, r0
    c5f4:	ldr	r0, [pc, #536]	; c814 <el_line@plt+0xa360>
    c5f8:	add	r0, pc, r0
    c5fc:	bl	11238 <el_line@plt+0xed84>
    c600:	mov	r0, fp
    c604:	ldr	r1, [sp, #44]	; 0x2c
    c608:	mvn	r3, #0
    c60c:	ldr	r2, [sp, #164]	; 0xa4
    c610:	str	r3, [sp, #160]	; 0xa0
    c614:	bl	a374 <el_line@plt+0x7ec0>
    c618:	b	c574 <el_line@plt+0xa0c0>
    c61c:	ldr	r0, [pc, #500]	; c818 <el_line@plt+0xa364>
    c620:	ldr	r1, [sp, #100]	; 0x64
    c624:	add	r0, pc, r0
    c628:	bl	11238 <el_line@plt+0xed84>
    c62c:	b	c504 <el_line@plt+0xa050>
    c630:	ldr	r1, [sp, #112]	; 0x70
    c634:	ldr	r0, [sp, #76]	; 0x4c
    c638:	bl	219c <fchmod@plt>
    c63c:	cmn	r0, #1
    c640:	beq	c730 <el_line@plt+0xa27c>
    c644:	ldr	r4, [sp, #80]	; 0x50
    c648:	ldr	r3, [r4]
    c64c:	tst	r3, #8
    c650:	beq	c0a0 <el_line@plt+0x9bec>
    c654:	ldr	r6, [sp, #80]	; 0x50
    c658:	add	r1, sp, #192	; 0xc0
    c65c:	ldr	r0, [sp, #100]	; 0x64
    c660:	mov	r3, #0
    c664:	str	r3, [sp, #204]	; 0xcc
    c668:	ldr	ip, [r6, #28]
    c66c:	ldr	r2, [r6, #32]
    c670:	str	r3, [sp, #196]	; 0xc4
    c674:	str	ip, [sp, #192]	; 0xc0
    c678:	str	r2, [sp, #200]	; 0xc8
    c67c:	bl	23a0 <utimes@plt>
    c680:	cmn	r0, #1
    c684:	bne	c0a0 <el_line@plt+0x9bec>
    c688:	bl	23ac <__errno_location@plt>
    c68c:	ldr	r0, [r0]
    c690:	bl	1fa4 <strerror@plt>
    c694:	ldr	r1, [sp, #100]	; 0x64
    c698:	mov	r2, r0
    c69c:	ldr	r0, [pc, #376]	; c81c <el_line@plt+0xa368>
    c6a0:	add	r0, pc, r0
    c6a4:	bl	11238 <el_line@plt+0xed84>
    c6a8:	b	c0a0 <el_line@plt+0x9bec>
    c6ac:	bl	23ac <__errno_location@plt>
    c6b0:	ldr	r0, [r0]
    c6b4:	bl	1fa4 <strerror@plt>
    c6b8:	ldr	r1, [sp, #100]	; 0x64
    c6bc:	mov	r2, r0
    c6c0:	ldr	r0, [pc, #344]	; c820 <el_line@plt+0xa36c>
    c6c4:	add	r0, pc, r0
    c6c8:	bl	11238 <el_line@plt+0xed84>
    c6cc:	b	c528 <el_line@plt+0xa074>
    c6d0:	ldr	r0, [sp, #52]	; 0x34
    c6d4:	bl	ec5c <el_line@plt+0xc7a8>
    c6d8:	mvn	r0, #0
    c6dc:	b	c194 <el_line@plt+0x9ce0>
    c6e0:	bl	e4c8 <el_line@plt+0xc014>
    c6e4:	ldr	r1, [pc, #312]	; c824 <el_line@plt+0xa370>
    c6e8:	add	r1, pc, r1
    c6ec:	add	r1, r1, #244	; 0xf4
    c6f0:	mov	r2, r0
    c6f4:	ldr	r0, [pc, #300]	; c828 <el_line@plt+0xa374>
    c6f8:	add	r0, pc, r0
    c6fc:	bl	10980 <el_line@plt+0xe4cc>
    c700:	bl	e4c8 <el_line@plt+0xc014>
    c704:	ldr	r1, [pc, #288]	; c82c <el_line@plt+0xa378>
    c708:	add	r1, pc, r1
    c70c:	add	r1, r1, #244	; 0xf4
    c710:	mov	r2, r0
    c714:	ldr	r0, [pc, #276]	; c830 <el_line@plt+0xa37c>
    c718:	add	r0, pc, r0
    c71c:	bl	10980 <el_line@plt+0xe4cc>
    c720:	ldr	r0, [pc, #268]	; c834 <el_line@plt+0xa380>
    c724:	add	r0, pc, r0
    c728:	bl	10980 <el_line@plt+0xe4cc>
    c72c:	bl	21e4 <__stack_chk_fail@plt>
    c730:	bl	23ac <__errno_location@plt>
    c734:	ldr	r0, [r0]
    c738:	bl	1fa4 <strerror@plt>
    c73c:	ldr	r1, [sp, #100]	; 0x64
    c740:	mov	r2, r0
    c744:	ldr	r0, [pc, #236]	; c838 <el_line@plt+0xa384>
    c748:	add	r0, pc, r0
    c74c:	bl	11238 <el_line@plt+0xed84>
    c750:	b	c644 <el_line@plt+0xa190>
    c754:	bl	e4c8 <el_line@plt+0xc014>
    c758:	ldr	r1, [pc, #220]	; c83c <el_line@plt+0xa388>
    c75c:	add	r1, pc, r1
    c760:	add	r1, r1, #244	; 0xf4
    c764:	mov	r2, r0
    c768:	ldr	r0, [pc, #208]	; c840 <el_line@plt+0xa38c>
    c76c:	add	r0, pc, r0
    c770:	bl	10980 <el_line@plt+0xe4cc>
    c774:	ldr	r0, [pc, #200]	; c844 <el_line@plt+0xa390>
    c778:	add	r0, pc, r0
    c77c:	bl	10980 <el_line@plt+0xe4cc>
    c780:	bl	e4c8 <el_line@plt+0xc014>
    c784:	ldr	r1, [pc, #188]	; c848 <el_line@plt+0xa394>
    c788:	add	r1, pc, r1
    c78c:	add	r1, r1, #244	; 0xf4
    c790:	mov	r2, r0
    c794:	ldr	r0, [pc, #176]	; c84c <el_line@plt+0xa398>
    c798:	add	r0, pc, r0
    c79c:	bl	10980 <el_line@plt+0xe4cc>
    c7a0:	ldr	r1, [pc, #168]	; c850 <el_line@plt+0xa39c>
    c7a4:	ldr	r0, [pc, #168]	; c854 <el_line@plt+0xa3a0>
    c7a8:	add	r1, pc, r1
    c7ac:	add	r0, pc, r0
    c7b0:	add	r1, r1, #244	; 0xf4
    c7b4:	bl	10980 <el_line@plt+0xe4cc>
    c7b8:	andeq	r3, r2, r8, ror r1
    c7bc:	andeq	r0, r0, ip, lsr #4
    c7c0:	andeq	r0, r1, r8, lsr r1
    c7c4:	andeq	r0, r1, ip, lsr r1
    c7c8:	andeq	r0, r0, r4, ror #4
    c7cc:	andeq	r0, r0, r8, asr r2
    c7d0:	andeq	r0, r1, r4, ror r1
    c7d4:	andeq	r0, r1, r8, lsl #3
    c7d8:	andeq	r0, r1, ip, lsr r1
    c7dc:	strdeq	r0, [r1], -r8
    c7e0:			; <UNDEFINED> instruction: 0x000101bc
    c7e4:	andeq	r0, r1, r4, lsr #1
    c7e8:	andeq	r0, r1, r4, lsl #1
    c7ec:	muleq	r0, r4, sp
    c7f0:	ldrdeq	pc, [r0], -r0
    c7f4:	andeq	pc, r0, ip, lsr #26
    c7f8:	andeq	r0, r0, ip, ror #4
    c7fc:	andeq	pc, r0, r4, lsr #20
    c800:	andeq	pc, r0, r0, lsr #23
    c804:	andeq	pc, r0, ip, lsr #23
    c808:	andeq	pc, r0, r0, asr #18
    c80c:	andeq	pc, r0, r4, ror r8	; <UNPREDICTABLE>
    c810:	andeq	pc, r0, r0, ror #17
    c814:	ldrdeq	pc, [r0], -ip
    c818:	andeq	pc, r0, r8, asr #20
    c81c:	muleq	r0, ip, sl
    c820:	strdeq	pc, [r0], -ip
    c824:	andeq	lr, r0, r4, lsr #28
    c828:	andeq	lr, r0, ip, asr pc
    c82c:	andeq	lr, r0, r4, lsl #28
    c830:	andeq	lr, r0, ip, lsr pc
    c834:	andeq	pc, r0, r8, lsl r9	; <UNPREDICTABLE>
    c838:	ldrdeq	pc, [r0], -r4
    c83c:			; <UNDEFINED> instruction: 0x0000edb0
    c840:	andeq	lr, r0, r8, ror #29
    c844:	andeq	pc, r0, r0, lsr #16
    c848:	andeq	lr, r0, r4, lsl #27
    c84c:			; <UNDEFINED> instruction: 0x0000eebc
    c850:	andeq	lr, r0, r4, ror #26
    c854:	andeq	lr, r0, r0, lsr #30
    c858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c85c:	sub	sp, sp, #276	; 0x114
    c860:	ldr	r4, [pc, #2124]	; d0b4 <el_line@plt+0xac00>
    c864:	mov	lr, #0
    c868:	ldr	r5, [pc, #2120]	; d0b8 <el_line@plt+0xac04>
    c86c:	add	ip, sp, #272	; 0x110
    c870:	add	r4, pc, r4
    c874:	str	r1, [sp, #64]	; 0x40
    c878:	str	r2, [sp, #68]	; 0x44
    c87c:	mov	r1, lr
    c880:	ldr	r5, [r4, r5]
    c884:	mov	r7, r0
    c888:	str	r3, [sp, #76]	; 0x4c
    c88c:	mov	r2, lr
    c890:	ldr	r0, [sp, #64]	; 0x40
    c894:	ldr	r3, [r5]
    c898:	str	r5, [sp, #80]	; 0x50
    c89c:	str	lr, [ip, #-160]!	; 0xffffff60
    c8a0:	str	lr, [sp, #92]	; 0x5c
    c8a4:	ldr	r5, [sp, #312]	; 0x138
    c8a8:	str	r3, [sp, #268]	; 0x10c
    c8ac:	str	ip, [sp, #116]	; 0x74
    c8b0:	bl	2184 <open64@plt>
    c8b4:	cmn	r0, #1
    c8b8:	mov	r9, r0
    c8bc:	beq	cff0 <el_line@plt+0xab3c>
    c8c0:	add	r6, sp, #160	; 0xa0
    c8c4:	mov	r0, #3
    c8c8:	mov	r1, r9
    c8cc:	mov	r2, r6
    c8d0:	bl	2070 <__fxstat64@plt>
    c8d4:	cmn	r0, #1
    c8d8:	mov	r8, r0
    c8dc:	beq	cfc0 <el_line@plt+0xab0c>
    c8e0:	ldr	r3, [sp, #176]	; 0xb0
    c8e4:	and	r3, r3, #61440	; 0xf000
    c8e8:	cmp	r3, #32768	; 0x8000
    c8ec:	bne	cf50 <el_line@plt+0xaa9c>
    c8f0:	add	r8, sp, #120	; 0x78
    c8f4:	mov	r0, r6
    c8f8:	str	r8, [sp, #72]	; 0x48
    c8fc:	mov	r1, r8
    c900:	bl	db5c <el_line@plt+0xb6a8>
    c904:	ldr	r3, [sp, #120]	; 0x78
    c908:	ldr	ip, [sp, #76]	; 0x4c
    c90c:	ldr	r2, [sp, #144]	; 0x90
    c910:	bic	r1, r3, #3
    c914:	cmp	ip, #0
    c918:	str	r1, [sp, #120]	; 0x78
    c91c:	biceq	r3, r3, #11
    c920:	streq	r3, [sp, #120]	; 0x78
    c924:	cmp	r5, #0
    c928:	ubfx	r2, r2, #0, #9
    c92c:	str	r2, [sp, #144]	; 0x90
    c930:	bne	cb18 <el_line@plt+0xa664>
    c934:	mov	fp, r5
    c938:	bl	e9c4 <el_line@plt+0xc510>
    c93c:	subs	r6, r0, #0
    c940:	beq	d014 <el_line@plt+0xab60>
    c944:	ldr	sl, [r7, #20]
    c948:	mov	r1, #3
    c94c:	add	ip, sl, #1
    c950:	str	ip, [r7, #20]
    c954:	str	ip, [sp, #56]	; 0x38
    c958:	bl	104b0 <el_line@plt+0xdffc>
    c95c:	cmp	r0, #0
    c960:	bne	d02c <el_line@plt+0xab78>
    c964:	mov	r0, r6
    c968:	mov	r1, sl
    c96c:	bl	103b0 <el_line@plt+0xdefc>
    c970:	cmp	r0, #0
    c974:	bne	d02c <el_line@plt+0xab78>
    c978:	mov	r0, r6
    c97c:	ldr	r1, [sp, #68]	; 0x44
    c980:	bl	105d8 <el_line@plt+0xe124>
    c984:	cmp	r0, #0
    c988:	bne	d02c <el_line@plt+0xab78>
    c98c:	cmp	r5, #0
    c990:	mov	r0, r6
    c994:	moveq	r1, #26
    c998:	movne	r1, #14
    c99c:	bl	103b0 <el_line@plt+0xdefc>
    c9a0:	cmp	r0, #0
    c9a4:	bne	d02c <el_line@plt+0xab78>
    c9a8:	mov	r0, r6
    c9ac:	add	r1, sp, #120	; 0x78
    c9b0:	bl	de5c <el_line@plt+0xb9a8>
    c9b4:	cmp	r0, #0
    c9b8:	bne	d02c <el_line@plt+0xab78>
    c9bc:	mov	r0, r7
    c9c0:	mov	r1, r6
    c9c4:	bl	92e0 <el_line@plt+0x6e2c>
    c9c8:	ldr	r0, [pc, #1772]	; d0bc <el_line@plt+0xac08>
    c9cc:	mov	r1, sl
    c9d0:	ldr	r2, [sp, #68]	; 0x44
    c9d4:	add	r0, pc, r0
    c9d8:	bl	1148c <el_line@plt+0xefd8>
    c9dc:	mov	r0, r6
    c9e0:	bl	efc0 <el_line@plt+0xcb0c>
    c9e4:	ldr	r8, [sp, #68]	; 0x44
    c9e8:	ldr	r3, [pc, #1744]	; d0c0 <el_line@plt+0xac0c>
    c9ec:	mov	r0, r7
    c9f0:	mov	r1, sl
    c9f4:	add	r2, sp, #96	; 0x60
    c9f8:	str	r8, [sp]
    c9fc:	add	r3, pc, r3
    ca00:	bl	987c <el_line@plt+0x73c8>
    ca04:	cmp	r0, #0
    ca08:	str	r0, [sp, #52]	; 0x34
    ca0c:	beq	d09c <el_line@plt+0xabe8>
    ca10:	ldr	r0, [r7, #8]
    ca14:	bl	1155c <el_line@plt+0xf0a8>
    ca18:	cmp	r5, #0
    ca1c:	moveq	r3, #0
    ca20:	moveq	r2, #0
    ca24:	mov	r8, r0
    ca28:	ldrdne	r0, [fp, #8]
    ca2c:	strdeq	r2, [sp, #16]
    ca30:	ldr	r3, [pc, #1676]	; d0c4 <el_line@plt+0xac10>
    ca34:	strdne	r0, [sp, #16]
    ca38:	ldrd	r0, [sp, #16]
    ca3c:	strd	r0, [sp, #104]	; 0x68
    ca40:	ldr	r3, [r4, r3]
    ca44:	str	r3, [sp, #84]	; 0x54
    ca48:	ldr	r3, [r3]
    ca4c:	cmp	r3, #0
    ca50:	bne	cea8 <el_line@plt+0xa9f4>
    ca54:	ldr	ip, [pc, #1644]	; d0c8 <el_line@plt+0xac14>
    ca58:	add	r5, sp, #91	; 0x5b
    ca5c:	ldr	r3, [pc, #1640]	; d0cc <el_line@plt+0xac18>
    ca60:	add	ip, pc, ip
    ca64:	str	ip, [sp, #44]	; 0x2c
    ca68:	ldr	ip, [pc, #1632]	; d0d0 <el_line@plt+0xac1c>
    ca6c:	str	r5, [sp, #32]
    ca70:	add	r5, sp, #100	; 0x64
    ca74:	add	ip, pc, ip
    ca78:	str	r5, [sp, #36]	; 0x24
    ca7c:	str	ip, [sp, #48]	; 0x30
    ca80:	add	r5, sp, #92	; 0x5c
    ca84:	ldr	fp, [sp, #56]	; 0x38
    ca88:	str	r5, [sp, #40]	; 0x28
    ca8c:	ldr	r3, [r4, r3]
    ca90:	mov	r4, #0
    ca94:	ldr	ip, [pc, #1592]	; d0d4 <el_line@plt+0xac20>
    ca98:	str	r9, [sp, #24]
    ca9c:	add	ip, pc, ip
    caa0:	str	r3, [sp, #28]
    caa4:	str	ip, [sp, #60]	; 0x3c
    caa8:	str	r8, [sp, #12]
    caac:	ldr	r5, [sp, #28]
    cab0:	ldr	r3, [r5]
    cab4:	cmp	r3, #0
    cab8:	bne	cb78 <el_line@plt+0xa6c4>
    cabc:	ldr	r3, [sp, #92]	; 0x5c
    cac0:	cmp	r3, #0
    cac4:	bne	cb78 <el_line@plt+0xa6c4>
    cac8:	ldr	r9, [sp, #24]
    cacc:	ldr	r8, [sp, #12]
    cad0:	mov	r0, r9
    cad4:	mov	r1, r8
    cad8:	ldr	r2, [r7, #8]
    cadc:	bl	20e8 <read@plt>
    cae0:	cmn	r0, #1
    cae4:	bne	cce0 <el_line@plt+0xa82c>
    cae8:	bl	23ac <__errno_location@plt>
    caec:	ldr	r3, [r0]
    caf0:	cmp	r3, #4
    caf4:	cmpne	r3, #11
    caf8:	beq	cad0 <el_line@plt+0xa61c>
    cafc:	mov	r0, r3
    cb00:	bl	1fa4 <strerror@plt>
    cb04:	ldr	r1, [sp, #64]	; 0x40
    cb08:	mov	r2, r0
    cb0c:	ldr	r0, [pc, #1476]	; d0d8 <el_line@plt+0xac24>
    cb10:	add	r0, pc, r0
    cb14:	bl	10980 <el_line@plt+0xe4cc>
    cb18:	mov	r0, r7
    cb1c:	ldr	r1, [sp, #68]	; 0x44
    cb20:	mov	r2, #0
    cb24:	bl	ad34 <el_line@plt+0x8880>
    cb28:	subs	fp, r0, #0
    cb2c:	beq	cb68 <el_line@plt+0xa6b4>
    cb30:	ldrd	r2, [fp, #8]
    cb34:	ldrd	r0, [sp, #208]	; 0xd0
    cb38:	cmp	r2, r0
    cb3c:	sbcs	r8, r3, r1
    cb40:	bge	d080 <el_line@plt+0xabcc>
    cb44:	mov	r1, #0
    cb48:	mov	r0, r9
    cb4c:	str	r1, [sp]
    cb50:	bl	2358 <lseek64@plt>
    cb54:	mvn	r2, #0
    cb58:	mvn	r3, #0
    cb5c:	cmp	r1, r3
    cb60:	cmpeq	r0, r2
    cb64:	bne	c938 <el_line@plt+0xa484>
    cb68:	mov	r0, r9
    cb6c:	mvn	r9, #0
    cb70:	bl	20dc <close@plt>
    cb74:	b	ce88 <el_line@plt+0xa9d4>
    cb78:	ldr	r3, [sp, #112]	; 0x70
    cb7c:	cmp	r3, #0
    cb80:	beq	cdf4 <el_line@plt+0xa940>
    cb84:	cmp	r4, #0
    cb88:	beq	cf90 <el_line@plt+0xaadc>
    cb8c:	mov	r5, #0
    cb90:	mov	r0, r6
    cb94:	bl	efc0 <el_line@plt+0xcb0c>
    cb98:	mov	r0, r7
    cb9c:	mov	r1, r6
    cba0:	bl	9428 <el_line@plt+0x6f74>
    cba4:	mov	r0, r6
    cba8:	add	r1, sp, #91	; 0x5b
    cbac:	bl	fca0 <el_line@plt+0xd7ec>
    cbb0:	cmp	r0, #0
    cbb4:	bne	cfa0 <el_line@plt+0xaaec>
    cbb8:	mov	r0, r6
    cbbc:	add	r1, sp, #100	; 0x64
    cbc0:	bl	fbf4 <el_line@plt+0xd740>
    cbc4:	cmp	r0, #0
    cbc8:	bne	cfa0 <el_line@plt+0xaaec>
    cbcc:	ldrb	r2, [sp, #91]	; 0x5b
    cbd0:	cmp	r2, #101	; 0x65
    cbd4:	bne	d070 <el_line@plt+0xabbc>
    cbd8:	mov	r0, r6
    cbdc:	add	r1, sp, #92	; 0x5c
    cbe0:	bl	fbf4 <el_line@plt+0xd740>
    cbe4:	cmp	r0, #0
    cbe8:	bne	d050 <el_line@plt+0xab9c>
    cbec:	ldr	r1, [sp, #92]	; 0x5c
    cbf0:	ldr	r0, [sp, #44]	; 0x2c
    cbf4:	bl	1148c <el_line@plt+0xefd8>
    cbf8:	ldr	r4, [sp, #112]	; 0x70
    cbfc:	ldr	r1, [sp, #100]	; 0x64
    cc00:	cmp	r4, #0
    cc04:	beq	cc38 <el_line@plt+0xa784>
    cc08:	ldr	r3, [r4]
    cc0c:	cmp	r3, r1
    cc10:	beq	cc4c <el_line@plt+0xa798>
    cc14:	ldr	r9, [sp, #24]
    cc18:	ldr	r8, [sp, #12]
    cc1c:	b	cc2c <el_line@plt+0xa778>
    cc20:	ldr	r3, [r4]
    cc24:	cmp	r1, r3
    cc28:	beq	cc44 <el_line@plt+0xa790>
    cc2c:	ldr	r4, [r4, #16]
    cc30:	cmp	r4, #0
    cc34:	bne	cc20 <el_line@plt+0xa76c>
    cc38:	ldr	r0, [pc, #1180]	; d0dc <el_line@plt+0xac28>
    cc3c:	add	r0, pc, r0
    cc40:	bl	10980 <el_line@plt+0xe4cc>
    cc44:	str	r9, [sp, #24]
    cc48:	str	r8, [sp, #12]
    cc4c:	ldr	r3, [r4, #16]
    cc50:	cmp	r3, #0
    cc54:	beq	cde8 <el_line@plt+0xa934>
    cc58:	ldr	r2, [r4, #20]
    cc5c:	str	r2, [r3, #20]
    cc60:	ldr	r2, [r4, #20]
    cc64:	ldr	r3, [r4, #16]
    cc68:	str	r3, [r2]
    cc6c:	add	fp, fp, #1
    cc70:	ldr	ip, [r4, #4]
    cc74:	ldrd	r8, [r4, #8]
    cc78:	ldr	r1, [r4]
    cc7c:	mov	r2, ip
    cc80:	ldr	r0, [sp, #48]	; 0x30
    cc84:	strd	r8, [sp]
    cc88:	bl	1148c <el_line@plt+0xefd8>
    cc8c:	ldrd	r0, [sp, #104]	; 0x68
    cc90:	ldr	r2, [r4, #4]
    cc94:	mov	r3, #0
    cc98:	bl	192fc <el_line@plt+0x16e48>
    cc9c:	strd	r0, [sp, #104]	; 0x68
    cca0:	mov	r0, r4
    cca4:	bl	1f20 <free@plt>
    cca8:	ldrd	r0, [sp, #16]
    ccac:	mov	r2, r5
    ccb0:	asr	r3, r5, #31
    ccb4:	bl	192fc <el_line@plt+0x16e48>
    ccb8:	cmp	r0, #0
    ccbc:	sbcs	r9, r1, #0
    ccc0:	strd	r0, [sp, #16]
    ccc4:	bge	caac <el_line@plt+0xa5f8>
    ccc8:	ldr	r1, [pc, #1040]	; d0e0 <el_line@plt+0xac2c>
    cccc:	ldr	r0, [pc, #1040]	; d0e4 <el_line@plt+0xac30>
    ccd0:	add	r1, pc, r1
    ccd4:	add	r0, pc, r0
    ccd8:	add	r1, r1, #256	; 0x100
    ccdc:	bl	10980 <el_line@plt+0xe4cc>
    cce0:	cmp	r0, #0
    cce4:	str	r9, [sp, #24]
    cce8:	str	r8, [sp, #12]
    ccec:	mov	r5, r0
    ccf0:	beq	cb78 <el_line@plt+0xa6c4>
    ccf4:	mov	r1, #24
    ccf8:	mov	r0, #1
    ccfc:	bl	11598 <el_line@plt+0xf0e4>
    cd00:	add	sl, sl, #1
    cd04:	ldrd	r8, [sp, #16]
    cd08:	mov	ip, #0
    cd0c:	str	r5, [r0, #4]
    cd10:	mov	r4, r0
    cd14:	str	sl, [r0]
    cd18:	mov	r0, r6
    cd1c:	ldr	r1, [sp, #116]	; 0x74
    cd20:	add	r2, r4, #16
    cd24:	str	ip, [r4, #16]
    cd28:	strd	r8, [r4, #8]
    cd2c:	str	r1, [r4, #20]
    cd30:	str	r4, [r1]
    cd34:	str	r2, [sp, #116]	; 0x74
    cd38:	bl	efc0 <el_line@plt+0xcb0c>
    cd3c:	mov	r0, r6
    cd40:	mov	r1, #6
    cd44:	bl	104b0 <el_line@plt+0xdffc>
    cd48:	cmp	r0, #0
    cd4c:	bne	cf70 <el_line@plt+0xaabc>
    cd50:	mov	r0, r6
    cd54:	ldr	r1, [r4]
    cd58:	bl	103b0 <el_line@plt+0xdefc>
    cd5c:	cmp	r0, #0
    cd60:	bne	cf70 <el_line@plt+0xaabc>
    cd64:	mov	r0, r6
    cd68:	ldr	r1, [sp, #52]	; 0x34
    cd6c:	ldr	r2, [sp, #96]	; 0x60
    cd70:	bl	10514 <el_line@plt+0xe060>
    cd74:	cmp	r0, #0
    cd78:	bne	cf70 <el_line@plt+0xaabc>
    cd7c:	mov	r0, r6
    cd80:	ldrd	r2, [sp, #16]
    cd84:	bl	102fc <el_line@plt+0xde48>
    cd88:	cmp	r0, #0
    cd8c:	bne	cf70 <el_line@plt+0xaabc>
    cd90:	mov	r0, r6
    cd94:	ldr	r1, [sp, #12]
    cd98:	mov	r2, r5
    cd9c:	bl	10514 <el_line@plt+0xe060>
    cda0:	cmp	r0, #0
    cda4:	bne	cf70 <el_line@plt+0xaabc>
    cda8:	mov	r0, r7
    cdac:	mov	r1, r6
    cdb0:	bl	92e0 <el_line@plt+0x6e2c>
    cdb4:	str	r5, [sp]
    cdb8:	ldr	r0, [sp, #60]	; 0x3c
    cdbc:	mov	r1, sl
    cdc0:	ldrd	r2, [sp, #16]
    cdc4:	bl	1148c <el_line@plt+0xefd8>
    cdc8:	ldr	r9, [sp, #56]	; 0x38
    cdcc:	cmp	r9, sl
    cdd0:	beq	cb90 <el_line@plt+0xa6dc>
    cdd4:	ldr	r3, [r7, #12]
    cdd8:	rsb	r2, fp, sl
    cddc:	cmp	r2, r3
    cde0:	bcc	cca8 <el_line@plt+0xa7f4>
    cde4:	b	cb90 <el_line@plt+0xa6dc>
    cde8:	ldr	r2, [r4, #20]
    cdec:	str	r2, [sp, #116]	; 0x74
    cdf0:	b	cc68 <el_line@plt+0xa7b4>
    cdf4:	mov	r0, r6
    cdf8:	ldr	r9, [sp, #24]
    cdfc:	ldr	r8, [sp, #12]
    ce00:	bl	ec5c <el_line@plt+0xc7a8>
    ce04:	ldr	ip, [sp, #84]	; 0x54
    ce08:	ldr	r3, [ip]
    ce0c:	cmp	r3, #0
    ce10:	bne	cf48 <el_line@plt+0xaa94>
    ce14:	mov	r0, r8
    ce18:	bl	1f20 <free@plt>
    ce1c:	ldr	r0, [sp, #92]	; 0x5c
    ce20:	cmp	r0, #0
    ce24:	bne	ceec <el_line@plt+0xaa38>
    ce28:	mov	r0, r9
    ce2c:	bl	20dc <close@plt>
    ce30:	cmn	r0, #1
    ce34:	beq	cf1c <el_line@plt+0xaa68>
    ce38:	ldr	r5, [sp, #76]	; 0x4c
    ce3c:	cmp	r5, #0
    ce40:	bne	ced4 <el_line@plt+0xaa20>
    ce44:	ldr	r8, [sp, #316]	; 0x13c
    ce48:	cmp	r8, #0
    ce4c:	bne	cec0 <el_line@plt+0xaa0c>
    ce50:	ldr	r1, [sp, #52]	; 0x34
    ce54:	mov	r0, r7
    ce58:	ldr	r2, [sp, #96]	; 0x60
    ce5c:	bl	a374 <el_line@plt+0x7ec0>
    ce60:	cmp	r0, #0
    ce64:	ldr	r0, [sp, #52]	; 0x34
    ce68:	movne	r3, #4
    ce6c:	strne	r3, [sp, #92]	; 0x5c
    ce70:	bl	1f20 <free@plt>
    ce74:	ldr	r0, [sp, #92]	; 0x5c
    ce78:	adds	r0, r0, #0
    ce7c:	movne	r0, #1
    ce80:	bl	1953c <el_line@plt+0x17088>
    ce84:	mov	r9, r0
    ce88:	mov	r0, r9
    ce8c:	ldr	r9, [sp, #80]	; 0x50
    ce90:	ldr	r2, [sp, #268]	; 0x10c
    ce94:	ldr	r3, [r9]
    ce98:	cmp	r2, r3
    ce9c:	bne	d04c <el_line@plt+0xab98>
    cea0:	add	sp, sp, #276	; 0x114
    cea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cea8:	add	r1, sp, #104	; 0x68
    ceac:	ldrd	r2, [sp, #208]	; 0xd0
    ceb0:	str	r1, [sp]
    ceb4:	ldr	r0, [sp, #64]	; 0x40
    ceb8:	bl	3ac0 <el_line@plt+0x160c>
    cebc:	b	ca54 <el_line@plt+0xa5a0>
    cec0:	mov	r0, r7
    cec4:	ldr	r1, [sp, #52]	; 0x34
    cec8:	ldr	r2, [sp, #96]	; 0x60
    cecc:	bl	b698 <el_line@plt+0x91e4>
    ced0:	b	ce50 <el_line@plt+0xa99c>
    ced4:	add	r3, sp, #120	; 0x78
    ced8:	mov	r0, r7
    cedc:	ldr	r1, [sp, #52]	; 0x34
    cee0:	ldr	r2, [sp, #96]	; 0x60
    cee4:	bl	aed0 <el_line@plt+0x8a1c>
    cee8:	b	ce44 <el_line@plt+0xa990>
    ceec:	bl	df2c <el_line@plt+0xba78>
    cef0:	ldr	r1, [sp, #68]	; 0x44
    cef4:	mov	r2, r0
    cef8:	ldr	r0, [pc, #488]	; d0e8 <el_line@plt+0xac34>
    cefc:	add	r0, pc, r0
    cf00:	bl	11238 <el_line@plt+0xed84>
    cf04:	mov	r0, r9
    cf08:	mov	r3, #4
    cf0c:	str	r3, [sp, #92]	; 0x5c
    cf10:	bl	20dc <close@plt>
    cf14:	cmn	r0, #1
    cf18:	bne	ce38 <el_line@plt+0xa984>
    cf1c:	bl	23ac <__errno_location@plt>
    cf20:	ldr	r0, [r0]
    cf24:	bl	1fa4 <strerror@plt>
    cf28:	ldr	r1, [sp, #64]	; 0x40
    cf2c:	mov	r2, r0
    cf30:	ldr	r0, [pc, #436]	; d0ec <el_line@plt+0xac38>
    cf34:	add	r0, pc, r0
    cf38:	bl	11238 <el_line@plt+0xed84>
    cf3c:	mov	r3, #4
    cf40:	str	r3, [sp, #92]	; 0x5c
    cf44:	b	ce38 <el_line@plt+0xa984>
    cf48:	bl	3b60 <el_line@plt+0x16ac>
    cf4c:	b	ce14 <el_line@plt+0xa960>
    cf50:	ldr	r0, [pc, #408]	; d0f0 <el_line@plt+0xac3c>
    cf54:	ldr	r1, [sp, #64]	; 0x40
    cf58:	add	r0, pc, r0
    cf5c:	bl	11238 <el_line@plt+0xed84>
    cf60:	mov	r0, r9
    cf64:	bl	20dc <close@plt>
    cf68:	mvn	r9, #0
    cf6c:	b	ce88 <el_line@plt+0xa9d4>
    cf70:	bl	e4c8 <el_line@plt+0xc014>
    cf74:	ldr	r1, [pc, #376]	; d0f4 <el_line@plt+0xac40>
    cf78:	add	r1, pc, r1
    cf7c:	add	r1, r1, #256	; 0x100
    cf80:	mov	r2, r0
    cf84:	ldr	r0, [pc, #364]	; d0f8 <el_line@plt+0xac44>
    cf88:	add	r0, pc, r0
    cf8c:	bl	10980 <el_line@plt+0xe4cc>
    cf90:	ldr	r0, [pc, #356]	; d0fc <el_line@plt+0xac48>
    cf94:	mov	r1, sl
    cf98:	add	r0, pc, r0
    cf9c:	bl	10980 <el_line@plt+0xe4cc>
    cfa0:	bl	e4c8 <el_line@plt+0xc014>
    cfa4:	ldr	r1, [pc, #340]	; d100 <el_line@plt+0xac4c>
    cfa8:	add	r1, pc, r1
    cfac:	add	r1, r1, #256	; 0x100
    cfb0:	mov	r2, r0
    cfb4:	ldr	r0, [pc, #328]	; d104 <el_line@plt+0xac50>
    cfb8:	add	r0, pc, r0
    cfbc:	bl	10980 <el_line@plt+0xe4cc>
    cfc0:	bl	23ac <__errno_location@plt>
    cfc4:	ldr	r0, [r0]
    cfc8:	bl	1fa4 <strerror@plt>
    cfcc:	ldr	r1, [sp, #64]	; 0x40
    cfd0:	mov	r2, r0
    cfd4:	ldr	r0, [pc, #300]	; d108 <el_line@plt+0xac54>
    cfd8:	add	r0, pc, r0
    cfdc:	bl	11238 <el_line@plt+0xed84>
    cfe0:	mov	r0, r9
    cfe4:	bl	20dc <close@plt>
    cfe8:	mov	r9, r8
    cfec:	b	ce88 <el_line@plt+0xa9d4>
    cff0:	bl	23ac <__errno_location@plt>
    cff4:	ldr	r0, [r0]
    cff8:	bl	1fa4 <strerror@plt>
    cffc:	ldr	r1, [sp, #64]	; 0x40
    d000:	mov	r2, r0
    d004:	ldr	r0, [pc, #256]	; d10c <el_line@plt+0xac58>
    d008:	add	r0, pc, r0
    d00c:	bl	11238 <el_line@plt+0xed84>
    d010:	b	ce88 <el_line@plt+0xa9d4>
    d014:	ldr	r1, [pc, #244]	; d110 <el_line@plt+0xac5c>
    d018:	ldr	r0, [pc, #244]	; d114 <el_line@plt+0xac60>
    d01c:	add	r1, pc, r1
    d020:	add	r0, pc, r0
    d024:	add	r1, r1, #256	; 0x100
    d028:	bl	10980 <el_line@plt+0xe4cc>
    d02c:	bl	e4c8 <el_line@plt+0xc014>
    d030:	ldr	r1, [pc, #224]	; d118 <el_line@plt+0xac64>
    d034:	add	r1, pc, r1
    d038:	add	r1, r1, #256	; 0x100
    d03c:	mov	r2, r0
    d040:	ldr	r0, [pc, #212]	; d11c <el_line@plt+0xac68>
    d044:	add	r0, pc, r0
    d048:	bl	10980 <el_line@plt+0xe4cc>
    d04c:	bl	21e4 <__stack_chk_fail@plt>
    d050:	bl	e4c8 <el_line@plt+0xc014>
    d054:	ldr	r1, [pc, #196]	; d120 <el_line@plt+0xac6c>
    d058:	add	r1, pc, r1
    d05c:	add	r1, r1, #256	; 0x100
    d060:	mov	r2, r0
    d064:	ldr	r0, [pc, #184]	; d124 <el_line@plt+0xac70>
    d068:	add	r0, pc, r0
    d06c:	bl	10980 <el_line@plt+0xe4cc>
    d070:	ldr	r0, [pc, #176]	; d128 <el_line@plt+0xac74>
    d074:	mov	r1, #101	; 0x65
    d078:	add	r0, pc, r0
    d07c:	bl	10980 <el_line@plt+0xe4cc>
    d080:	ldr	r0, [pc, #164]	; d12c <el_line@plt+0xac78>
    d084:	add	r0, pc, r0
    d088:	bl	11238 <el_line@plt+0xed84>
    d08c:	mov	r0, r9
    d090:	bl	20dc <close@plt>
    d094:	mvn	r9, #0
    d098:	b	ce88 <el_line@plt+0xa9d4>
    d09c:	mov	r0, r9
    d0a0:	mvn	r9, #0
    d0a4:	bl	20dc <close@plt>
    d0a8:	mov	r0, r6
    d0ac:	bl	ec5c <el_line@plt+0xc7a8>
    d0b0:	b	ce88 <el_line@plt+0xa9d4>
    d0b4:	strdeq	r2, [r2], -r4
    d0b8:	andeq	r0, r0, ip, lsr #4
    d0bc:	andeq	pc, r0, r8, ror r4	; <UNPREDICTABLE>
    d0c0:	andeq	pc, r0, r8, ror r4	; <UNPREDICTABLE>
    d0c4:	andeq	r0, r0, r4, ror #4
    d0c8:			; <UNDEFINED> instruction: 0x0000ecb0
    d0cc:	andeq	r0, r0, r8, asr r2
    d0d0:	andeq	pc, r0, r8, lsr r8	; <UNPREDICTABLE>
    d0d4:	andeq	pc, r0, r0, lsr #15
    d0d8:	andeq	pc, r0, r4, lsr #16
    d0dc:	andeq	pc, r0, r4, lsl r7	; <UNPREDICTABLE>
    d0e0:	andeq	lr, r0, ip, lsr r8
    d0e4:	andeq	pc, r0, r4, lsl #12
    d0e8:	andeq	pc, r0, ip, ror #7
    d0ec:	ldrdeq	pc, [r0], -ip
    d0f0:	muleq	r0, r4, r2
    d0f4:	muleq	r0, r4, r5
    d0f8:	andeq	lr, r0, ip, asr #13
    d0fc:	ldrdeq	pc, [r0], -r4
    d100:	andeq	lr, r0, r4, ror #10
    d104:	muleq	r0, ip, r6
    d108:	strdeq	pc, [r0], -r0
    d10c:	muleq	r0, r0, r1
    d110:	strdeq	lr, [r0], -r0
    d114:	andeq	lr, r0, ip, lsr #13
    d118:	ldrdeq	lr, [r0], -r8
    d11c:	andeq	lr, r0, r0, lsl r6
    d120:			; <UNDEFINED> instruction: 0x0000e4b4
    d124:	andeq	lr, r0, ip, ror #11
    d128:	andeq	pc, r0, r8, lsl #4
    d12c:	andeq	pc, r0, r4, lsl #3
    d130:	push	{r3, r4, r5, r6, r7, lr}
    d134:	mov	r7, r1
    d138:	mov	r5, r0
    d13c:	bl	2310 <strlen@plt>
    d140:	mov	r4, r0
    d144:	mov	r0, r7
    d148:	bl	2310 <strlen@plt>
    d14c:	add	r0, r4, r0
    d150:	add	r4, r0, #2
    d154:	mov	r0, r4
    d158:	bl	1155c <el_line@plt+0xf0a8>
    d15c:	mov	r1, r5
    d160:	mov	r2, r4
    d164:	mov	r6, r0
    d168:	bl	177d8 <el_line@plt+0x15324>
    d16c:	ldrb	r3, [r5]
    d170:	cmp	r3, #0
    d174:	beq	d1a4 <el_line@plt+0xacf0>
    d178:	mov	r0, r5
    d17c:	bl	2310 <strlen@plt>
    d180:	add	r0, r5, r0
    d184:	ldrb	r3, [r0, #-1]
    d188:	cmp	r3, #47	; 0x2f
    d18c:	beq	d1a4 <el_line@plt+0xacf0>
    d190:	ldr	r1, [pc, #36]	; d1bc <el_line@plt+0xad08>
    d194:	mov	r0, r6
    d198:	mov	r2, r4
    d19c:	add	r1, pc, r1
    d1a0:	bl	17704 <el_line@plt+0x15250>
    d1a4:	mov	r1, r7
    d1a8:	mov	r2, r4
    d1ac:	mov	r0, r6
    d1b0:	bl	17704 <el_line@plt+0x15250>
    d1b4:	mov	r0, r6
    d1b8:	pop	{r3, r4, r5, r6, r7, pc}
    d1bc:	ldrdeq	pc, [r0], -r4
    d1c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d1c4:	sub	sp, sp, #84	; 0x54
    d1c8:	ldr	r4, [pc, #1036]	; d5dc <el_line@plt+0xb128>
    d1cc:	mov	r8, r2
    d1d0:	str	r3, [sp, #48]	; 0x30
    d1d4:	mov	r9, r1
    d1d8:	ldr	ip, [sp, #48]	; 0x30
    d1dc:	add	r4, pc, r4
    d1e0:	ldr	r3, [pc, #1016]	; d5e0 <el_line@plt+0xb12c>
    d1e4:	cmp	ip, #63	; 0x3f
    d1e8:	ldr	ip, [sp, #120]	; 0x78
    d1ec:	str	r0, [sp, #36]	; 0x24
    d1f0:	str	ip, [sp, #32]
    d1f4:	ldr	r3, [r4, r3]
    d1f8:	str	r3, [sp, #40]	; 0x28
    d1fc:	ldr	r3, [r3]
    d200:	str	r3, [sp, #76]	; 0x4c
    d204:	bgt	d5ac <el_line@plt+0xb0f8>
    d208:	ldr	ip, [sp, #32]
    d20c:	cmp	ip, #0
    d210:	beq	d538 <el_line@plt+0xb084>
    d214:	ldr	ip, [sp, #32]
    d218:	ldr	r3, [ip, #24]
    d21c:	and	r3, r3, #61440	; 0xf000
    d220:	cmp	r3, #16384	; 0x4000
    d224:	bne	d594 <el_line@plt+0xb0e0>
    d228:	ldr	ip, [sp, #128]	; 0x80
    d22c:	cmp	ip, #0
    d230:	bne	d4e8 <el_line@plt+0xb034>
    d234:	ldr	ip, [sp, #32]
    d238:	ldr	r3, [ip]
    d23c:	tst	r3, #4
    d240:	beq	d508 <el_line@plt+0xb054>
    d244:	ldr	r1, [ip, #24]
    d248:	ubfx	r1, r1, #0, #10
    d24c:	mov	r0, r8
    d250:	bl	2214 <mkdir@plt>
    d254:	cmn	r0, #1
    d258:	mov	r5, r0
    d25c:	beq	d470 <el_line@plt+0xafbc>
    d260:	ldr	r0, [sp, #36]	; 0x24
    d264:	mov	r1, r9
    d268:	add	r2, sp, #56	; 0x38
    d26c:	bl	a4e4 <el_line@plt+0x8030>
    d270:	cmn	r0, #1
    d274:	mov	r5, r0
    d278:	beq	d5c4 <el_line@plt+0xb110>
    d27c:	ldr	r0, [sp, #56]	; 0x38
    d280:	ldr	r3, [r0]
    d284:	cmp	r3, #0
    d288:	beq	d58c <el_line@plt+0xb0d8>
    d28c:	ldr	r2, [pc, #848]	; d5e4 <el_line@plt+0xb130>
    d290:	ldr	sl, [r4, r2]
    d294:	ldr	r2, [sl]
    d298:	cmp	r2, #0
    d29c:	movne	ip, #0
    d2a0:	strne	ip, [sp, #44]	; 0x2c
    d2a4:	bne	d43c <el_line@plt+0xaf88>
    d2a8:	ldr	ip, [pc, #824]	; d5e8 <el_line@plt+0xb134>
    d2ac:	mov	fp, r2
    d2b0:	str	r2, [sp, #44]	; 0x2c
    d2b4:	mov	r4, #4
    d2b8:	add	ip, pc, ip
    d2bc:	str	ip, [sp, #28]
    d2c0:	ldr	ip, [pc, #804]	; d5ec <el_line@plt+0xb138>
    d2c4:	add	ip, pc, ip
    d2c8:	str	ip, [sp, #52]	; 0x34
    d2cc:	b	d31c <el_line@plt+0xae68>
    d2d0:	cmp	r3, #32768	; 0x8000
    d2d4:	beq	d3c0 <el_line@plt+0xaf0c>
    d2d8:	ldr	r0, [sp, #28]
    d2dc:	mov	r1, r6
    d2e0:	bl	112ec <el_line@plt+0xee38>
    d2e4:	mov	r0, r7
    d2e8:	bl	1f20 <free@plt>
    d2ec:	mov	r0, r6
    d2f0:	bl	1f20 <free@plt>
    d2f4:	ldr	r0, [sp, #56]	; 0x38
    d2f8:	ldr	r3, [r0, r4]
    d2fc:	cmp	r3, #0
    d300:	beq	d43c <el_line@plt+0xaf88>
    d304:	ldr	r2, [sl]
    d308:	add	r1, r4, #4
    d30c:	cmp	r2, #0
    d310:	bne	d43c <el_line@plt+0xaf88>
    d314:	mov	fp, r4
    d318:	mov	r4, r1
    d31c:	ldr	r5, [r3]
    d320:	mov	r0, r8
    d324:	mov	r1, r5
    d328:	bl	d130 <el_line@plt+0xac7c>
    d32c:	mov	r1, r5
    d330:	mov	r7, r0
    d334:	mov	r0, r9
    d338:	bl	d130 <el_line@plt+0xac7c>
    d33c:	mov	r6, r0
    d340:	ldr	r0, [sp, #56]	; 0x38
    d344:	ldr	fp, [r0, fp]
    d348:	ldr	r3, [fp, #32]
    d34c:	and	r3, r3, #61440	; 0xf000
    d350:	cmp	r3, #16384	; 0x4000
    d354:	bne	d2d0 <el_line@plt+0xae1c>
    d358:	ldrb	r3, [r5]
    d35c:	cmp	r3, #46	; 0x2e
    d360:	beq	d410 <el_line@plt+0xaf5c>
    d364:	ldr	r0, [sp, #48]	; 0x30
    d368:	mov	r1, #1
    d36c:	bl	192bc <el_line@plt+0x16e08>
    d370:	ldr	ip, [sp, #124]	; 0x7c
    d374:	add	r2, fp, #8
    d378:	mov	r1, r6
    d37c:	str	r2, [sp]
    d380:	mov	r2, r7
    d384:	str	ip, [sp, #4]
    d388:	ldr	ip, [sp, #128]	; 0x80
    d38c:	str	ip, [sp, #8]
    d390:	ldr	ip, [sp, #132]	; 0x84
    d394:	str	ip, [sp, #12]
    d398:	ldr	ip, [sp, #136]	; 0x88
    d39c:	str	ip, [sp, #16]
    d3a0:	mov	r3, r0
    d3a4:	ldr	r0, [sp, #36]	; 0x24
    d3a8:	bl	d1c0 <el_line@plt+0xad0c>
    d3ac:	ldr	ip, [sp, #44]	; 0x2c
    d3b0:	cmn	r0, #1
    d3b4:	mvneq	ip, #0
    d3b8:	str	ip, [sp, #44]	; 0x2c
    d3bc:	b	d2e4 <el_line@plt+0xae30>
    d3c0:	ldr	ip, [sp, #124]	; 0x7c
    d3c4:	add	r3, fp, #8
    d3c8:	ldr	r0, [sp, #36]	; 0x24
    d3cc:	mov	r1, r6
    d3d0:	mov	r2, r7
    d3d4:	str	ip, [sp]
    d3d8:	ldr	ip, [sp, #132]	; 0x84
    d3dc:	str	ip, [sp, #4]
    d3e0:	ldr	ip, [sp, #136]	; 0x88
    d3e4:	str	ip, [sp, #8]
    d3e8:	bl	bbd4 <el_line@plt+0x9720>
    d3ec:	cmn	r0, #1
    d3f0:	mov	r3, r0
    d3f4:	bne	d2e4 <el_line@plt+0xae30>
    d3f8:	ldr	r0, [sp, #52]	; 0x34
    d3fc:	mov	r1, r6
    d400:	mov	r2, r7
    d404:	str	r3, [sp, #44]	; 0x2c
    d408:	bl	11238 <el_line@plt+0xed84>
    d40c:	b	d2e4 <el_line@plt+0xae30>
    d410:	ldrb	r3, [r5, #1]
    d414:	cmp	r3, #0
    d418:	beq	d2f8 <el_line@plt+0xae44>
    d41c:	cmp	r3, #46	; 0x2e
    d420:	bne	d364 <el_line@plt+0xaeb0>
    d424:	ldrb	r3, [r5, #2]
    d428:	cmp	r3, #0
    d42c:	bne	d364 <el_line@plt+0xaeb0>
    d430:	ldr	r3, [r0, r4]
    d434:	cmp	r3, #0
    d438:	bne	d304 <el_line@plt+0xae50>
    d43c:	ldr	ip, [sp, #124]	; 0x7c
    d440:	cmp	ip, #0
    d444:	bne	d49c <el_line@plt+0xafe8>
    d448:	ldr	r5, [sp, #44]	; 0x2c
    d44c:	bl	a48c <el_line@plt+0x7fd8>
    d450:	ldr	ip, [sp, #40]	; 0x28
    d454:	mov	r0, r5
    d458:	ldr	r2, [sp, #76]	; 0x4c
    d45c:	ldr	r3, [ip]
    d460:	cmp	r2, r3
    d464:	bne	d5d8 <el_line@plt+0xb124>
    d468:	add	sp, sp, #84	; 0x54
    d46c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d470:	bl	23ac <__errno_location@plt>
    d474:	ldr	r0, [r0]
    d478:	cmp	r0, #17
    d47c:	beq	d260 <el_line@plt+0xadac>
    d480:	bl	1fa4 <strerror@plt>
    d484:	mov	r1, r8
    d488:	mov	r2, r0
    d48c:	ldr	r0, [pc, #348]	; d5f0 <el_line@plt+0xb13c>
    d490:	add	r0, pc, r0
    d494:	bl	11238 <el_line@plt+0xed84>
    d498:	b	d450 <el_line@plt+0xaf9c>
    d49c:	ldr	ip, [sp, #32]
    d4a0:	ldr	r3, [ip]
    d4a4:	tst	r3, #8
    d4a8:	beq	d520 <el_line@plt+0xb06c>
    d4ac:	ldr	r1, [sp, #32]
    d4b0:	mov	r0, r8
    d4b4:	ldr	ip, [ip, #28]
    d4b8:	mov	r3, #0
    d4bc:	str	r3, [sp, #72]	; 0x48
    d4c0:	ldr	r2, [r1, #32]
    d4c4:	add	r1, sp, #60	; 0x3c
    d4c8:	str	ip, [sp, #60]	; 0x3c
    d4cc:	str	r3, [sp, #64]	; 0x40
    d4d0:	str	r2, [sp, #68]	; 0x44
    d4d4:	bl	23a0 <utimes@plt>
    d4d8:	cmn	r0, #1
    d4dc:	beq	d564 <el_line@plt+0xb0b0>
    d4e0:	ldr	r0, [sp, #56]	; 0x38
    d4e4:	b	d448 <el_line@plt+0xaf94>
    d4e8:	ldr	r0, [pc, #260]	; d5f4 <el_line@plt+0xb140>
    d4ec:	mov	r1, r9
    d4f0:	add	r0, pc, r0
    d4f4:	bl	14498 <el_line@plt+0x11fe4>
    d4f8:	ldr	ip, [sp, #32]
    d4fc:	ldr	r3, [ip]
    d500:	tst	r3, #4
    d504:	bne	d244 <el_line@plt+0xad90>
    d508:	ldr	r0, [pc, #232]	; d5f8 <el_line@plt+0xb144>
    d50c:	mov	r1, r8
    d510:	add	r0, pc, r0
    d514:	bl	113bc <el_line@plt+0xef08>
    d518:	movw	r1, #511	; 0x1ff
    d51c:	b	d24c <el_line@plt+0xad98>
    d520:	ldr	r0, [pc, #212]	; d5fc <el_line@plt+0xb148>
    d524:	mov	r1, r8
    d528:	add	r0, pc, r0
    d52c:	bl	113bc <el_line@plt+0xef08>
    d530:	ldr	r0, [sp, #56]	; 0x38
    d534:	b	d448 <el_line@plt+0xaf94>
    d538:	mov	r2, #1
    d53c:	bl	ad34 <el_line@plt+0x8880>
    d540:	cmp	r0, #0
    d544:	str	r0, [sp, #32]
    d548:	bne	d214 <el_line@plt+0xad60>
    d54c:	ldr	r0, [pc, #172]	; d600 <el_line@plt+0xb14c>
    d550:	mov	r1, r9
    d554:	mvn	r5, #0
    d558:	add	r0, pc, r0
    d55c:	bl	11238 <el_line@plt+0xed84>
    d560:	b	d450 <el_line@plt+0xaf9c>
    d564:	bl	23ac <__errno_location@plt>
    d568:	ldr	r0, [r0]
    d56c:	bl	1fa4 <strerror@plt>
    d570:	mov	r1, r8
    d574:	mov	r2, r0
    d578:	ldr	r0, [pc, #132]	; d604 <el_line@plt+0xb150>
    d57c:	add	r0, pc, r0
    d580:	bl	11238 <el_line@plt+0xed84>
    d584:	ldr	r0, [sp, #56]	; 0x38
    d588:	b	d448 <el_line@plt+0xaf94>
    d58c:	str	r3, [sp, #44]	; 0x2c
    d590:	b	d43c <el_line@plt+0xaf88>
    d594:	ldr	r0, [pc, #108]	; d608 <el_line@plt+0xb154>
    d598:	mov	r1, r9
    d59c:	mvn	r5, #0
    d5a0:	add	r0, pc, r0
    d5a4:	bl	11238 <el_line@plt+0xed84>
    d5a8:	b	d450 <el_line@plt+0xaf9c>
    d5ac:	ldr	r0, [pc, #88]	; d60c <el_line@plt+0xb158>
    d5b0:	mvn	r5, #0
    d5b4:	ldr	r1, [sp, #48]	; 0x30
    d5b8:	add	r0, pc, r0
    d5bc:	bl	11238 <el_line@plt+0xed84>
    d5c0:	b	d450 <el_line@plt+0xaf9c>
    d5c4:	ldr	r0, [pc, #68]	; d610 <el_line@plt+0xb15c>
    d5c8:	mov	r1, r9
    d5cc:	add	r0, pc, r0
    d5d0:	bl	11238 <el_line@plt+0xed84>
    d5d4:	b	d450 <el_line@plt+0xaf9c>
    d5d8:	bl	21e4 <__stack_chk_fail@plt>
    d5dc:	andeq	r1, r2, r8, lsl #23
    d5e0:	andeq	r0, r0, ip, lsr #4
    d5e4:	andeq	r0, r0, r8, asr r2
    d5e8:			; <UNDEFINED> instruction: 0x0000f1b0
    d5ec:	andeq	pc, r0, r0, lsl #3
    d5f0:	andeq	lr, r0, ip, ror pc
    d5f4:	ldrdeq	lr, [r0], -r8
    d5f8:	andeq	lr, r0, r8, asr #29
    d5fc:	andeq	lr, r0, r8, asr pc
    d600:	andeq	lr, r0, r8, asr #28
    d604:	andeq	lr, r0, r0, asr #23
    d608:	andeq	sp, r0, r4, lsr r0
    d60c:			; <UNDEFINED> instruction: 0x0000edbc
    d610:	andeq	lr, r0, r0, asr lr
    d614:	push	{r4, r5, r6, r7, r8, lr}
    d618:	sub	sp, sp, #24
    d61c:	mov	r6, r2
    d620:	mov	r7, r3
    d624:	mov	r5, r0
    d628:	mov	r8, r1
    d62c:	bl	af44 <el_line@plt+0x8a90>
    d630:	subs	r4, r0, #0
    d634:	beq	d688 <el_line@plt+0xb1d4>
    d638:	ldr	r3, [sp, #48]	; 0x30
    d63c:	mov	r0, r5
    d640:	ldr	ip, [sp, #52]	; 0x34
    d644:	mov	r2, r6
    d648:	mov	r1, r4
    d64c:	str	r7, [sp]
    d650:	str	r3, [sp, #4]
    d654:	str	ip, [sp, #8]
    d658:	ldr	r3, [sp, #56]	; 0x38
    d65c:	ldr	ip, [sp, #60]	; 0x3c
    d660:	str	r3, [sp, #12]
    d664:	mov	r3, #0
    d668:	str	ip, [sp, #16]
    d66c:	bl	d1c0 <el_line@plt+0xad0c>
    d670:	mov	r5, r0
    d674:	mov	r0, r4
    d678:	bl	1f20 <free@plt>
    d67c:	mov	r0, r5
    d680:	add	sp, sp, #24
    d684:	pop	{r4, r5, r6, r7, r8, pc}
    d688:	ldr	r0, [pc, #16]	; d6a0 <el_line@plt+0xb1ec>
    d68c:	mov	r1, r8
    d690:	add	r0, pc, r0
    d694:	bl	11238 <el_line@plt+0xed84>
    d698:	mvn	r0, #0
    d69c:	b	d680 <el_line@plt+0xb1cc>
    d6a0:	andeq	lr, r0, r0, lsr #28
    d6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6a8:	sub	sp, sp, #212	; 0xd4
    d6ac:	ldr	r4, [pc, #960]	; da74 <el_line@plt+0xb5c0>
    d6b0:	mov	r8, r2
    d6b4:	str	r3, [sp, #40]	; 0x28
    d6b8:	ldr	r3, [pc, #952]	; da78 <el_line@plt+0xb5c4>
    d6bc:	add	r4, pc, r4
    d6c0:	str	r0, [sp, #28]
    d6c4:	str	r1, [sp, #20]
    d6c8:	ldr	r3, [r4, r3]
    d6cc:	ldr	ip, [sp, #40]	; 0x28
    d6d0:	str	r3, [sp, #32]
    d6d4:	cmp	ip, #63	; 0x3f
    d6d8:	ldr	r3, [r3]
    d6dc:	str	r3, [sp, #204]	; 0xcc
    d6e0:	bgt	da04 <el_line@plt+0xb550>
    d6e4:	add	r9, sp, #96	; 0x60
    d6e8:	mov	r0, #3
    d6ec:	mov	r2, r9
    d6f0:	bl	1f2c <__xstat64@plt>
    d6f4:	cmn	r0, #1
    d6f8:	mov	r6, r0
    d6fc:	beq	da1c <el_line@plt+0xb568>
    d700:	ldr	r3, [sp, #112]	; 0x70
    d704:	and	r3, r3, #61440	; 0xf000
    d708:	cmp	r3, #16384	; 0x4000
    d70c:	bne	d9ec <el_line@plt+0xb538>
    d710:	ldr	ip, [sp, #252]	; 0xfc
    d714:	cmp	ip, #0
    d718:	bne	d9d8 <el_line@plt+0xb524>
    d71c:	add	ip, sp, #56	; 0x38
    d720:	str	ip, [sp, #24]
    d724:	mov	r0, ip
    d728:	bl	db30 <el_line@plt+0xb67c>
    d72c:	mov	r0, r9
    d730:	add	r1, sp, #56	; 0x38
    d734:	bl	db5c <el_line@plt+0xb6a8>
    d738:	ldr	r3, [sp, #56]	; 0x38
    d73c:	ldr	ip, [sp, #248]	; 0xf8
    d740:	ldr	r2, [sp, #80]	; 0x50
    d744:	bic	r1, r3, #3
    d748:	cmp	ip, #0
    d74c:	str	r1, [sp, #56]	; 0x38
    d750:	biceq	r3, r3, #11
    d754:	ubfx	r2, r2, #0, #10
    d758:	streq	r3, [sp, #56]	; 0x38
    d75c:	mov	r1, r8
    d760:	str	r2, [sp, #80]	; 0x50
    d764:	mov	r3, #0
    d768:	ldr	r0, [sp, #28]
    d76c:	add	r2, sp, #56	; 0x38
    d770:	bl	ac20 <el_line@plt+0x876c>
    d774:	cmp	r0, #0
    d778:	bne	d924 <el_line@plt+0xb470>
    d77c:	ldr	r0, [sp, #20]
    d780:	bl	2094 <opendir@plt>
    d784:	subs	r5, r0, #0
    d788:	beq	da48 <el_line@plt+0xb594>
    d78c:	mov	ip, #0
    d790:	str	ip, [sp, #36]	; 0x24
    d794:	ldr	ip, [pc, #736]	; da7c <el_line@plt+0xb5c8>
    d798:	add	ip, pc, ip
    d79c:	str	ip, [sp, #44]	; 0x2c
    d7a0:	ldr	ip, [pc, #728]	; da80 <el_line@plt+0xb5cc>
    d7a4:	add	ip, pc, ip
    d7a8:	str	ip, [sp, #52]	; 0x34
    d7ac:	ldr	ip, [pc, #720]	; da84 <el_line@plt+0xb5d0>
    d7b0:	add	ip, pc, ip
    d7b4:	str	ip, [sp, #48]	; 0x30
    d7b8:	mov	r0, r5
    d7bc:	bl	201c <readdir64@plt>
    d7c0:	subs	sl, r0, #0
    d7c4:	beq	d868 <el_line@plt+0xb3b4>
    d7c8:	ldr	r3, [pc, #696]	; da88 <el_line@plt+0xb5d4>
    d7cc:	ldr	r3, [r4, r3]
    d7d0:	ldr	r3, [r3]
    d7d4:	cmp	r3, #0
    d7d8:	bne	d868 <el_line@plt+0xb3b4>
    d7dc:	ldrd	r6, [sl]
    d7e0:	orrs	r1, r6, r7
    d7e4:	beq	d7b8 <el_line@plt+0xb304>
    d7e8:	add	r6, sl, #19
    d7ec:	mov	r0, r8
    d7f0:	mov	r1, r6
    d7f4:	bl	d130 <el_line@plt+0xac7c>
    d7f8:	mov	r1, r6
    d7fc:	mov	fp, r0
    d800:	ldr	r0, [sp, #20]
    d804:	bl	d130 <el_line@plt+0xac7c>
    d808:	mov	r2, r9
    d80c:	mov	r1, r0
    d810:	mov	r7, r0
    d814:	mov	r0, #3
    d818:	bl	23c4 <__lxstat64@plt>
    d81c:	cmn	r0, #1
    d820:	beq	d9ac <el_line@plt+0xb4f8>
    d824:	ldr	r3, [sp, #112]	; 0x70
    d828:	and	r3, r3, #61440	; 0xf000
    d82c:	cmp	r3, #16384	; 0x4000
    d830:	beq	d8a4 <el_line@plt+0xb3f0>
    d834:	cmp	r3, #32768	; 0x8000
    d838:	beq	d964 <el_line@plt+0xb4b0>
    d83c:	mov	r1, r6
    d840:	ldr	r0, [sp, #44]	; 0x2c
    d844:	bl	112ec <el_line@plt+0xee38>
    d848:	mov	r0, fp
    d84c:	bl	1f20 <free@plt>
    d850:	mov	r0, r7
    d854:	bl	1f20 <free@plt>
    d858:	mov	r0, r5
    d85c:	bl	201c <readdir64@plt>
    d860:	subs	sl, r0, #0
    d864:	bne	d7c8 <el_line@plt+0xb314>
    d868:	ldr	r0, [sp, #28]
    d86c:	mov	r1, r8
    d870:	add	r2, sp, #56	; 0x38
    d874:	ldr	r6, [sp, #36]	; 0x24
    d878:	bl	ae44 <el_line@plt+0x8990>
    d87c:	mov	r0, r5
    d880:	bl	1f80 <closedir@plt>
    d884:	ldr	ip, [sp, #32]
    d888:	mov	r0, r6
    d88c:	ldr	r2, [sp, #204]	; 0xcc
    d890:	ldr	r3, [ip]
    d894:	cmp	r2, r3
    d898:	bne	da70 <el_line@plt+0xb5bc>
    d89c:	add	sp, sp, #212	; 0xd4
    d8a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8a4:	ldrb	r3, [sl, #19]
    d8a8:	cmp	r3, #46	; 0x2e
    d8ac:	bne	d8d0 <el_line@plt+0xb41c>
    d8b0:	ldrb	r3, [sl, #20]
    d8b4:	cmp	r3, #0
    d8b8:	beq	d7b8 <el_line@plt+0xb304>
    d8bc:	cmp	r3, #46	; 0x2e
    d8c0:	bne	d8d0 <el_line@plt+0xb41c>
    d8c4:	ldrb	r3, [sl, #21]
    d8c8:	cmp	r3, #0
    d8cc:	beq	d7b8 <el_line@plt+0xb304>
    d8d0:	ldr	r0, [sp, #40]	; 0x28
    d8d4:	mov	r1, #1
    d8d8:	bl	192bc <el_line@plt+0x16e08>
    d8dc:	ldr	ip, [sp, #248]	; 0xf8
    d8e0:	ldr	r1, [sp, #256]	; 0x100
    d8e4:	ldr	r2, [sp, #260]	; 0x104
    d8e8:	str	ip, [sp]
    d8ec:	ldr	ip, [sp, #252]	; 0xfc
    d8f0:	str	r1, [sp, #8]
    d8f4:	mov	r1, r7
    d8f8:	str	r2, [sp, #12]
    d8fc:	mov	r2, fp
    d900:	str	ip, [sp, #4]
    d904:	mov	r3, r0
    d908:	ldr	r0, [sp, #28]
    d90c:	bl	d6a4 <el_line@plt+0xb1f0>
    d910:	ldr	ip, [sp, #36]	; 0x24
    d914:	cmn	r0, #1
    d918:	mvneq	ip, #0
    d91c:	str	ip, [sp, #36]	; 0x24
    d920:	b	d848 <el_line@plt+0xb394>
    d924:	ldr	r0, [sp, #28]
    d928:	mov	r1, r8
    d92c:	mov	r2, #0
    d930:	bl	ad34 <el_line@plt+0x8880>
    d934:	cmp	r0, #0
    d938:	beq	da40 <el_line@plt+0xb58c>
    d93c:	ldr	r3, [r0, #24]
    d940:	and	r3, r3, #61440	; 0xf000
    d944:	cmp	r3, #16384	; 0x4000
    d948:	beq	d77c <el_line@plt+0xb2c8>
    d94c:	ldr	r0, [pc, #312]	; da8c <el_line@plt+0xb5d8>
    d950:	mov	r1, r8
    d954:	mvn	r6, #0
    d958:	add	r0, pc, r0
    d95c:	bl	11238 <el_line@plt+0xed84>
    d960:	b	d884 <el_line@plt+0xb3d0>
    d964:	ldr	r1, [sp, #256]	; 0x100
    d968:	ldr	r2, [sp, #260]	; 0x104
    d96c:	ldr	r3, [sp, #248]	; 0xf8
    d970:	str	r1, [sp]
    d974:	mov	r1, r7
    d978:	str	r2, [sp, #4]
    d97c:	mov	r2, fp
    d980:	ldr	r0, [sp, #28]
    d984:	bl	c858 <el_line@plt+0xa3a4>
    d988:	cmn	r0, #1
    d98c:	mov	r3, r0
    d990:	bne	d848 <el_line@plt+0xb394>
    d994:	ldr	r0, [sp, #52]	; 0x34
    d998:	mov	r1, r7
    d99c:	mov	r2, fp
    d9a0:	str	r3, [sp, #36]	; 0x24
    d9a4:	bl	11238 <el_line@plt+0xed84>
    d9a8:	b	d848 <el_line@plt+0xb394>
    d9ac:	str	r0, [sp, #16]
    d9b0:	bl	23ac <__errno_location@plt>
    d9b4:	ldr	r3, [sp, #16]
    d9b8:	str	r3, [sp, #36]	; 0x24
    d9bc:	ldr	r0, [r0]
    d9c0:	bl	1fa4 <strerror@plt>
    d9c4:	mov	r1, r6
    d9c8:	mov	r2, r0
    d9cc:	ldr	r0, [sp, #48]	; 0x30
    d9d0:	bl	112ec <el_line@plt+0xee38>
    d9d4:	b	d848 <el_line@plt+0xb394>
    d9d8:	ldr	r0, [pc, #176]	; da90 <el_line@plt+0xb5dc>
    d9dc:	ldr	r1, [sp, #20]
    d9e0:	add	r0, pc, r0
    d9e4:	bl	14498 <el_line@plt+0x11fe4>
    d9e8:	b	d71c <el_line@plt+0xb268>
    d9ec:	ldr	r0, [pc, #160]	; da94 <el_line@plt+0xb5e0>
    d9f0:	mvn	r6, #0
    d9f4:	ldr	r1, [sp, #20]
    d9f8:	add	r0, pc, r0
    d9fc:	bl	11238 <el_line@plt+0xed84>
    da00:	b	d884 <el_line@plt+0xb3d0>
    da04:	ldr	r0, [pc, #140]	; da98 <el_line@plt+0xb5e4>
    da08:	mov	r1, ip
    da0c:	mvn	r6, #0
    da10:	add	r0, pc, r0
    da14:	bl	11238 <el_line@plt+0xed84>
    da18:	b	d884 <el_line@plt+0xb3d0>
    da1c:	bl	23ac <__errno_location@plt>
    da20:	ldr	r0, [r0]
    da24:	bl	1fa4 <strerror@plt>
    da28:	ldr	r1, [sp, #20]
    da2c:	mov	r2, r0
    da30:	ldr	r0, [pc, #100]	; da9c <el_line@plt+0xb5e8>
    da34:	add	r0, pc, r0
    da38:	bl	11238 <el_line@plt+0xed84>
    da3c:	b	d884 <el_line@plt+0xb3d0>
    da40:	mvn	r6, #0
    da44:	b	d884 <el_line@plt+0xb3d0>
    da48:	bl	23ac <__errno_location@plt>
    da4c:	mvn	r6, #0
    da50:	ldr	r0, [r0]
    da54:	bl	1fa4 <strerror@plt>
    da58:	ldr	r1, [sp, #20]
    da5c:	mov	r2, r0
    da60:	ldr	r0, [pc, #56]	; daa0 <el_line@plt+0xb5ec>
    da64:	add	r0, pc, r0
    da68:	bl	11238 <el_line@plt+0xed84>
    da6c:	b	d884 <el_line@plt+0xb3d0>
    da70:	bl	21e4 <__stack_chk_fail@plt>
    da74:	andeq	r1, r2, r8, lsr #13
    da78:	andeq	r0, r0, ip, lsr #4
    da7c:	ldrdeq	lr, [r0], -r0
    da80:			; <UNDEFINED> instruction: 0x0000edbc
    da84:	muleq	r0, r8, sp
    da88:	andeq	r0, r0, r8, asr r2
    da8c:			; <UNDEFINED> instruction: 0x0000ebb0
    da90:	andeq	lr, r0, r8, lsl fp
    da94:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    da98:	andeq	lr, r0, r4, ror #18
    da9c:	andeq	lr, r0, r0, lsr #21
    daa0:	andeq	lr, r0, r8, asr #21
    daa4:	push	{r4, r5, r6, r7, r8, lr}
    daa8:	mov	r6, r1
    daac:	sub	sp, sp, #16
    dab0:	mov	r1, r2
    dab4:	mov	r5, r2
    dab8:	mov	r8, r3
    dabc:	mov	r7, r0
    dac0:	bl	af44 <el_line@plt+0x8a90>
    dac4:	subs	r4, r0, #0
    dac8:	beq	db14 <el_line@plt+0xb660>
    dacc:	ldr	r3, [sp, #40]	; 0x28
    dad0:	mov	r1, r6
    dad4:	mov	r2, r4
    dad8:	str	r8, [sp]
    dadc:	mov	r0, r7
    dae0:	str	r3, [sp, #4]
    dae4:	ldr	r3, [sp, #44]	; 0x2c
    dae8:	str	r3, [sp, #8]
    daec:	ldr	r3, [sp, #48]	; 0x30
    daf0:	str	r3, [sp, #12]
    daf4:	mov	r3, #0
    daf8:	bl	d6a4 <el_line@plt+0xb1f0>
    dafc:	mov	r5, r0
    db00:	mov	r0, r4
    db04:	bl	1f20 <free@plt>
    db08:	mov	r0, r5
    db0c:	add	sp, sp, #16
    db10:	pop	{r4, r5, r6, r7, r8, pc}
    db14:	ldr	r0, [pc, #16]	; db2c <el_line@plt+0xb678>
    db18:	mov	r1, r5
    db1c:	add	r0, pc, r0
    db20:	bl	11238 <el_line@plt+0xed84>
    db24:	mvn	r0, #0
    db28:	b	db0c <el_line@plt+0xb658>
    db2c:	muleq	r0, r4, r9
    db30:	mov	r1, #0
    db34:	mov	r2, #0
    db38:	mov	r3, #0
    db3c:	str	r1, [r0]
    db40:	strd	r2, [r0, #8]
    db44:	str	r1, [r0, #16]
    db48:	str	r1, [r0, #20]
    db4c:	str	r1, [r0, #24]
    db50:	str	r1, [r0, #28]
    db54:	str	r1, [r0, #32]
    db58:	bx	lr
    db5c:	push	{r4, r5}
    db60:	mov	r2, #0
    db64:	mov	r3, #0
    db68:	mov	ip, #1
    db6c:	strd	r2, [r1, #8]
    db70:	mov	r3, #0
    db74:	str	ip, [r1]
    db78:	mov	r5, #3
    db7c:	str	r3, [r1, #16]
    db80:	mov	r4, #7
    db84:	str	r3, [r1, #20]
    db88:	mov	ip, #15
    db8c:	str	r3, [r1, #24]
    db90:	str	r3, [r1, #28]
    db94:	str	r3, [r1, #32]
    db98:	ldrd	r2, [r0, #48]	; 0x30
    db9c:	str	r5, [r1]
    dba0:	strd	r2, [r1, #8]
    dba4:	ldr	r3, [r0, #24]
    dba8:	str	r3, [r1, #16]
    dbac:	ldr	r3, [r0, #28]
    dbb0:	str	r4, [r1]
    dbb4:	str	r3, [r1, #20]
    dbb8:	ldr	r3, [r0, #16]
    dbbc:	str	ip, [r1]
    dbc0:	str	r3, [r1, #24]
    dbc4:	ldr	r3, [r0, #72]	; 0x48
    dbc8:	str	r3, [r1, #28]
    dbcc:	ldr	r3, [r0, #80]	; 0x50
    dbd0:	str	r3, [r1, #32]
    dbd4:	pop	{r4, r5}
    dbd8:	bx	lr
    dbdc:	push	{r3, r4, r5, lr}
    dbe0:	mov	r5, r1
    dbe4:	mov	r4, r0
    dbe8:	mov	r2, #104	; 0x68
    dbec:	mov	r1, #0
    dbf0:	mov	r0, r5
    dbf4:	bl	2064 <memset@plt>
    dbf8:	ldr	r3, [r4]
    dbfc:	tst	r3, #1
    dc00:	ldrdne	r2, [r4, #8]
    dc04:	strdne	r2, [r5, #48]	; 0x30
    dc08:	ldrne	r3, [r4]
    dc0c:	tst	r3, #2
    dc10:	ldrne	r3, [r4, #16]
    dc14:	strne	r3, [r5, #24]
    dc18:	ldrne	r3, [r4, #20]
    dc1c:	strne	r3, [r5, #28]
    dc20:	ldrne	r3, [r4]
    dc24:	tst	r3, #4
    dc28:	ldrne	r3, [r4, #24]
    dc2c:	strne	r3, [r5, #16]
    dc30:	ldrne	r3, [r4]
    dc34:	tst	r3, #8
    dc38:	ldrne	r3, [r4, #28]
    dc3c:	strne	r3, [r5, #72]	; 0x48
    dc40:	ldrne	r3, [r4, #32]
    dc44:	strne	r3, [r5, #80]	; 0x50
    dc48:	pop	{r3, r4, r5, pc}
    dc4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    dc50:	mov	r2, #0
    dc54:	ldr	lr, [pc, #492]	; de48 <el_line@plt+0xb994>
    dc58:	mov	r3, #0
    dc5c:	ldr	r5, [pc, #488]	; de4c <el_line@plt+0xb998>
    dc60:	sub	sp, sp, #24
    dc64:	add	lr, pc, lr
    dc68:	mov	ip, #0
    dc6c:	mov	r4, r1
    dc70:	mov	r6, r0
    dc74:	ldr	r5, [lr, r5]
    dc78:	strd	r2, [r1, #8]
    dc7c:	str	ip, [r1, #16]
    dc80:	ldr	r3, [r5]
    dc84:	str	ip, [r1, #20]
    dc88:	str	ip, [r1]
    dc8c:	str	ip, [r1, #24]
    dc90:	str	ip, [r1, #28]
    dc94:	str	ip, [r1, #32]
    dc98:	str	r3, [sp, #20]
    dc9c:	bl	fbf4 <el_line@plt+0xd740>
    dca0:	cmp	r0, #0
    dca4:	bne	dcd8 <el_line@plt+0xb824>
    dca8:	ldr	r3, [r4]
    dcac:	tst	r3, #1
    dcb0:	bne	dcf0 <el_line@plt+0xb83c>
    dcb4:	tst	r3, #2
    dcb8:	bne	dd10 <el_line@plt+0xb85c>
    dcbc:	tst	r3, #4
    dcc0:	bne	dd40 <el_line@plt+0xb88c>
    dcc4:	tst	r3, #8
    dcc8:	bne	dd5c <el_line@plt+0xb8a8>
    dccc:	cmp	r3, #0
    dcd0:	blt	dd8c <el_line@plt+0xb8d8>
    dcd4:	mov	r0, #0
    dcd8:	ldr	r2, [sp, #20]
    dcdc:	ldr	r3, [r5]
    dce0:	cmp	r2, r3
    dce4:	bne	de28 <el_line@plt+0xb974>
    dce8:	add	sp, sp, #24
    dcec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    dcf0:	mov	r0, r6
    dcf4:	add	r1, r4, #8
    dcf8:	bl	faf8 <el_line@plt+0xd644>
    dcfc:	cmp	r0, #0
    dd00:	bne	dcd8 <el_line@plt+0xb824>
    dd04:	ldr	r3, [r4]
    dd08:	tst	r3, #2
    dd0c:	beq	dcbc <el_line@plt+0xb808>
    dd10:	mov	r0, r6
    dd14:	add	r1, r4, #16
    dd18:	bl	fbf4 <el_line@plt+0xd740>
    dd1c:	cmp	r0, #0
    dd20:	bne	dcd8 <el_line@plt+0xb824>
    dd24:	mov	r0, r6
    dd28:	add	r1, r4, #20
    dd2c:	bl	fbf4 <el_line@plt+0xd740>
    dd30:	cmp	r0, #0
    dd34:	bne	dcd8 <el_line@plt+0xb824>
    dd38:	ldr	r3, [r4]
    dd3c:	b	dcbc <el_line@plt+0xb808>
    dd40:	mov	r0, r6
    dd44:	add	r1, r4, #24
    dd48:	bl	fbf4 <el_line@plt+0xd740>
    dd4c:	cmp	r0, #0
    dd50:	bne	dcd8 <el_line@plt+0xb824>
    dd54:	ldr	r3, [r4]
    dd58:	b	dcc4 <el_line@plt+0xb810>
    dd5c:	mov	r0, r6
    dd60:	add	r1, r4, #28
    dd64:	bl	fbf4 <el_line@plt+0xd740>
    dd68:	cmp	r0, #0
    dd6c:	bne	dcd8 <el_line@plt+0xb824>
    dd70:	mov	r0, r6
    dd74:	add	r1, r4, #32
    dd78:	bl	fbf4 <el_line@plt+0xd740>
    dd7c:	cmp	r0, #0
    dd80:	bne	dcd8 <el_line@plt+0xb824>
    dd84:	ldr	r3, [r4]
    dd88:	b	dccc <el_line@plt+0xb818>
    dd8c:	mov	r0, r6
    dd90:	add	r1, sp, #16
    dd94:	bl	fbf4 <el_line@plt+0xd740>
    dd98:	subs	r4, r0, #0
    dd9c:	bne	de2c <el_line@plt+0xb978>
    dda0:	ldr	r3, [sp, #16]
    dda4:	cmp	r3, #0
    dda8:	beq	dcd4 <el_line@plt+0xb820>
    ddac:	ldr	sl, [pc, #156]	; de50 <el_line@plt+0xb99c>
    ddb0:	add	r7, sp, #4
    ddb4:	add	r9, sp, #8
    ddb8:	add	r8, sp, #12
    ddbc:	add	sl, pc, sl
    ddc0:	b	de0c <el_line@plt+0xb958>
    ddc4:	mov	r0, r6
    ddc8:	mov	r1, r9
    ddcc:	mov	r2, r8
    ddd0:	bl	fe38 <el_line@plt+0xd984>
    ddd4:	cmp	r0, #0
    ddd8:	bne	dcd8 <el_line@plt+0xb824>
    dddc:	ldr	r1, [sp, #4]
    dde0:	mov	r0, sl
    dde4:	ldr	r2, [sp, #12]
    dde8:	add	r4, r4, #1
    ddec:	bl	1148c <el_line@plt+0xefd8>
    ddf0:	ldr	r0, [sp, #4]
    ddf4:	bl	1f20 <free@plt>
    ddf8:	ldr	r0, [sp, #8]
    ddfc:	bl	1f20 <free@plt>
    de00:	ldr	r3, [sp, #16]
    de04:	cmp	r3, r4
    de08:	bls	dcd4 <el_line@plt+0xb820>
    de0c:	mov	r0, r6
    de10:	mov	r1, r7
    de14:	mov	r2, #0
    de18:	bl	ff18 <el_line@plt+0xda64>
    de1c:	cmp	r0, #0
    de20:	beq	ddc4 <el_line@plt+0xb910>
    de24:	b	dcd8 <el_line@plt+0xb824>
    de28:	bl	21e4 <__stack_chk_fail@plt>
    de2c:	bl	e4c8 <el_line@plt+0xc014>
    de30:	ldr	r1, [pc, #28]	; de54 <el_line@plt+0xb9a0>
    de34:	add	r1, pc, r1
    de38:	mov	r2, r0
    de3c:	ldr	r0, [pc, #20]	; de58 <el_line@plt+0xb9a4>
    de40:	add	r0, pc, r0
    de44:	bl	10980 <el_line@plt+0xe4cc>
    de48:	andeq	r1, r2, r0, lsl #2
    de4c:	andeq	r0, r0, ip, lsr #4
    de50:	ldrdeq	lr, [r0], -r8
    de54:	andeq	lr, r0, r0, asr r7
    de58:	andeq	sp, r0, r4, lsl r8
    de5c:	push	{r3, r4, r5, lr}
    de60:	mov	r4, r1
    de64:	ldr	r1, [r1]
    de68:	mov	r5, r0
    de6c:	bl	103b0 <el_line@plt+0xdefc>
    de70:	cmp	r0, #0
    de74:	popne	{r3, r4, r5, pc}
    de78:	ldr	r3, [r4]
    de7c:	tst	r3, #1
    de80:	bne	dec0 <el_line@plt+0xba0c>
    de84:	tst	r3, #2
    de88:	bne	dee0 <el_line@plt+0xba2c>
    de8c:	tst	r3, #4
    de90:	bne	df10 <el_line@plt+0xba5c>
    de94:	ands	r0, r3, #8
    de98:	popeq	{r3, r4, r5, pc}
    de9c:	mov	r0, r5
    dea0:	ldr	r1, [r4, #28]
    dea4:	bl	103b0 <el_line@plt+0xdefc>
    dea8:	cmp	r0, #0
    deac:	popne	{r3, r4, r5, pc}
    deb0:	mov	r0, r5
    deb4:	ldr	r1, [r4, #32]
    deb8:	pop	{r3, r4, r5, lr}
    debc:	b	103b0 <el_line@plt+0xdefc>
    dec0:	mov	r0, r5
    dec4:	ldrd	r2, [r4, #8]
    dec8:	bl	102fc <el_line@plt+0xde48>
    decc:	cmp	r0, #0
    ded0:	popne	{r3, r4, r5, pc}
    ded4:	ldr	r3, [r4]
    ded8:	tst	r3, #2
    dedc:	beq	de8c <el_line@plt+0xb9d8>
    dee0:	mov	r0, r5
    dee4:	ldr	r1, [r4, #16]
    dee8:	bl	103b0 <el_line@plt+0xdefc>
    deec:	cmp	r0, #0
    def0:	popne	{r3, r4, r5, pc}
    def4:	mov	r0, r5
    def8:	ldr	r1, [r4, #20]
    defc:	bl	103b0 <el_line@plt+0xdefc>
    df00:	cmp	r0, #0
    df04:	popne	{r3, r4, r5, pc}
    df08:	ldr	r3, [r4]
    df0c:	b	de8c <el_line@plt+0xb9d8>
    df10:	mov	r0, r5
    df14:	ldr	r1, [r4, #24]
    df18:	bl	103b0 <el_line@plt+0xdefc>
    df1c:	cmp	r0, #0
    df20:	popne	{r3, r4, r5, pc}
    df24:	ldr	r3, [r4]
    df28:	b	de94 <el_line@plt+0xb9e0>
    df2c:	cmp	r0, #8
    df30:	addls	pc, pc, r0, lsl #2
    df34:	b	dfc8 <el_line@plt+0xbb14>
    df38:	b	dfbc <el_line@plt+0xbb08>
    df3c:	b	df5c <el_line@plt+0xbaa8>
    df40:	b	df68 <el_line@plt+0xbab4>
    df44:	b	df74 <el_line@plt+0xbac0>
    df48:	b	df80 <el_line@plt+0xbacc>
    df4c:	b	df8c <el_line@plt+0xbad8>
    df50:	b	df98 <el_line@plt+0xbae4>
    df54:	b	dfa4 <el_line@plt+0xbaf0>
    df58:	b	dfb0 <el_line@plt+0xbafc>
    df5c:	ldr	r0, [pc, #112]	; dfd4 <el_line@plt+0xbb20>
    df60:	add	r0, pc, r0
    df64:	bx	lr
    df68:	ldr	r0, [pc, #104]	; dfd8 <el_line@plt+0xbb24>
    df6c:	add	r0, pc, r0
    df70:	bx	lr
    df74:	ldr	r0, [pc, #96]	; dfdc <el_line@plt+0xbb28>
    df78:	add	r0, pc, r0
    df7c:	bx	lr
    df80:	ldr	r0, [pc, #88]	; dfe0 <el_line@plt+0xbb2c>
    df84:	add	r0, pc, r0
    df88:	bx	lr
    df8c:	ldr	r0, [pc, #80]	; dfe4 <el_line@plt+0xbb30>
    df90:	add	r0, pc, r0
    df94:	bx	lr
    df98:	ldr	r0, [pc, #72]	; dfe8 <el_line@plt+0xbb34>
    df9c:	add	r0, pc, r0
    dfa0:	bx	lr
    dfa4:	ldr	r0, [pc, #64]	; dfec <el_line@plt+0xbb38>
    dfa8:	add	r0, pc, r0
    dfac:	bx	lr
    dfb0:	ldr	r0, [pc, #56]	; dff0 <el_line@plt+0xbb3c>
    dfb4:	add	r0, pc, r0
    dfb8:	bx	lr
    dfbc:	ldr	r0, [pc, #48]	; dff4 <el_line@plt+0xbb40>
    dfc0:	add	r0, pc, r0
    dfc4:	bx	lr
    dfc8:	ldr	r0, [pc, #40]	; dff8 <el_line@plt+0xbb44>
    dfcc:	add	r0, pc, r0
    dfd0:	bx	lr
    dfd4:	andeq	lr, r0, r4, ror #12
    dfd8:	andeq	lr, r0, r4, ror #12
    dfdc:	andeq	lr, r0, r4, ror r6
    dfe0:	andeq	lr, r0, ip, ror r6
    dfe4:	andeq	lr, r0, r8, ror r6
    dfe8:	andeq	lr, r0, r8, ror r6
    dfec:	andeq	lr, r0, ip, ror r6
    dff0:	andeq	lr, r0, r0, lsl #13
    dff4:	strdeq	lr, [r0], -r8
    dff8:	andeq	lr, r0, r0, lsl #13
    dffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e000:	mov	fp, r3
    e004:	ldr	lr, [pc, #624]	; e27c <el_line@plt+0xbdc8>
    e008:	sub	sp, sp, #1136	; 0x470
    e00c:	ldr	ip, [pc, #620]	; e280 <el_line@plt+0xbdcc>
    e010:	sub	sp, sp, #12
    e014:	add	lr, pc, lr
    e018:	mov	r9, r0
    e01c:	add	r0, r1, #80	; 0x50
    e020:	mov	r4, r1
    e024:	ldr	ip, [lr, ip]
    e028:	mov	r3, lr
    e02c:	mov	r5, r2
    e030:	add	r7, sp, #64	; 0x40
    e034:	ldr	r3, [ip]
    e038:	str	ip, [sp, #52]	; 0x34
    e03c:	str	r3, [sp, #1140]	; 0x474
    e040:	bl	2160 <localtime@plt>
    e044:	mov	r1, r7
    e048:	mov	sl, r0
    e04c:	ldr	r0, [r4, #16]
    e050:	bl	17848 <el_line@plt+0x15394>
    e054:	cmp	r5, #0
    e058:	bne	e17c <el_line@plt+0xbcc8>
    e05c:	mov	r1, r5
    e060:	ldr	r0, [r4, #24]
    e064:	bl	174bc <el_line@plt+0x15008>
    e068:	mov	r1, r5
    e06c:	mov	r6, r0
    e070:	ldr	r0, [r4, #28]
    e074:	bl	175b0 <el_line@plt+0x150fc>
    e078:	cmp	sl, #0
    e07c:	mov	r5, r0
    e080:	beq	e1e0 <el_line@plt+0xbd2c>
    e084:	mov	r0, #0
    e088:	bl	2394 <time@plt>
    e08c:	movw	r1, #26176	; 0x6640
    e090:	movt	r1, #65295	; 0xff0f
    e094:	mov	r8, r0
    e098:	bl	192bc <el_line@plt+0x16e08>
    e09c:	ldr	r3, [r4, #80]	; 0x50
    e0a0:	cmp	r0, r3
    e0a4:	bge	e0b0 <el_line@plt+0xbbfc>
    e0a8:	cmp	r8, r3
    e0ac:	bge	e258 <el_line@plt+0xbda4>
    e0b0:	add	r8, sp, #100	; 0x64
    e0b4:	ldr	r2, [pc, #456]	; e284 <el_line@plt+0xbdd0>
    e0b8:	mov	r3, sl
    e0bc:	mov	r1, #13
    e0c0:	add	r2, pc, r2
    e0c4:	mov	r0, r8
    e0c8:	bl	204c <strftime@plt>
    e0cc:	cmp	r0, #0
    e0d0:	beq	e1e4 <el_line@plt+0xbd30>
    e0d4:	mov	r0, r6
    e0d8:	bl	2310 <strlen@plt>
    e0dc:	cmp	r0, #8
    e0e0:	movcs	sl, r0
    e0e4:	movcc	sl, #8
    e0e8:	mov	r0, r5
    e0ec:	bl	2310 <strlen@plt>
    e0f0:	cmp	r0, #8
    e0f4:	movcs	ip, r0
    e0f8:	movcc	ip, #8
    e0fc:	cmp	fp, #0
    e100:	bne	e1f0 <el_line@plt+0xbd3c>
    e104:	ldr	r0, [pc, #380]	; e288 <el_line@plt+0xbdd4>
    e108:	mov	r1, #1024	; 0x400
    e10c:	str	r7, [sp, #4]
    e110:	add	r7, sp, #116	; 0x74
    e114:	add	r0, pc, r0
    e118:	str	r0, [sp]
    e11c:	ldr	lr, [r4, #20]
    e120:	mov	r2, #1
    e124:	str	sl, [sp, #12]
    e128:	mov	r0, r7
    e12c:	str	r6, [sp, #16]
    e130:	mov	r3, r1
    e134:	str	lr, [sp, #8]
    e138:	str	ip, [sp, #20]
    e13c:	str	r5, [sp, #24]
    e140:	ldrd	r4, [r4, #48]	; 0x30
    e144:	str	r8, [sp, #40]	; 0x28
    e148:	str	r9, [sp, #44]	; 0x2c
    e14c:	strd	r4, [sp, #32]
    e150:	bl	231c <__snprintf_chk@plt>
    e154:	mov	r0, r7
    e158:	bl	1163c <el_line@plt+0xf188>
    e15c:	ldr	r1, [sp, #52]	; 0x34
    e160:	ldr	r2, [sp, #1140]	; 0x474
    e164:	ldr	r3, [r1]
    e168:	cmp	r2, r3
    e16c:	bne	e278 <el_line@plt+0xbdc4>
    e170:	add	sp, sp, #1136	; 0x470
    e174:	add	sp, sp, #12
    e178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e17c:	ldr	ip, [pc, #264]	; e28c <el_line@plt+0xbdd8>
    e180:	add	r6, sp, #76	; 0x4c
    e184:	mov	r1, #12
    e188:	mov	r2, #1
    e18c:	add	ip, pc, ip
    e190:	str	ip, [sp]
    e194:	ldr	lr, [r4, #24]
    e198:	mov	r3, r1
    e19c:	mov	r0, r6
    e1a0:	str	ip, [sp, #48]	; 0x30
    e1a4:	add	r8, sp, #88	; 0x58
    e1a8:	str	lr, [sp, #4]
    e1ac:	bl	231c <__snprintf_chk@plt>
    e1b0:	ldr	ip, [sp, #48]	; 0x30
    e1b4:	mov	r1, #12
    e1b8:	mov	r0, r8
    e1bc:	mov	r3, r1
    e1c0:	mov	r2, #1
    e1c4:	str	ip, [sp]
    e1c8:	mov	r5, r8
    e1cc:	ldr	ip, [r4, #28]
    e1d0:	str	ip, [sp, #4]
    e1d4:	bl	231c <__snprintf_chk@plt>
    e1d8:	cmp	sl, #0
    e1dc:	bne	e084 <el_line@plt+0xbbd0>
    e1e0:	add	r8, sp, #100	; 0x64
    e1e4:	mov	r3, #0
    e1e8:	strb	r3, [sp, #100]	; 0x64
    e1ec:	b	e0d4 <el_line@plt+0xbc20>
    e1f0:	add	fp, sp, #56	; 0x38
    e1f4:	ldrd	r0, [r4, #48]	; 0x30
    e1f8:	str	ip, [sp, #48]	; 0x30
    e1fc:	mov	r2, fp
    e200:	bl	14b3c <el_line@plt+0x12688>
    e204:	ldr	r2, [pc, #132]	; e290 <el_line@plt+0xbddc>
    e208:	str	r7, [sp, #4]
    e20c:	add	r7, sp, #116	; 0x74
    e210:	add	r2, pc, r2
    e214:	ldr	ip, [sp, #48]	; 0x30
    e218:	str	r2, [sp]
    e21c:	mov	r1, #1024	; 0x400
    e220:	ldr	lr, [r4, #20]
    e224:	mov	r3, r1
    e228:	mov	r0, r7
    e22c:	str	fp, [sp, #28]
    e230:	mov	r2, #1
    e234:	str	sl, [sp, #12]
    e238:	str	lr, [sp, #8]
    e23c:	str	r6, [sp, #16]
    e240:	str	ip, [sp, #20]
    e244:	str	r5, [sp, #24]
    e248:	str	r8, [sp, #32]
    e24c:	str	r9, [sp, #36]	; 0x24
    e250:	bl	231c <__snprintf_chk@plt>
    e254:	b	e154 <el_line@plt+0xbca0>
    e258:	add	r8, sp, #100	; 0x64
    e25c:	ldr	r2, [pc, #48]	; e294 <el_line@plt+0xbde0>
    e260:	mov	r3, sl
    e264:	mov	r1, #13
    e268:	add	r2, pc, r2
    e26c:	mov	r0, r8
    e270:	bl	204c <strftime@plt>
    e274:	b	e0cc <el_line@plt+0xbc18>
    e278:	bl	21e4 <__stack_chk_fail@plt>
    e27c:	andeq	r0, r2, r0, asr sp
    e280:	andeq	r0, r0, ip, lsr #4
    e284:	andeq	lr, r0, r8, lsr #11
    e288:	andeq	lr, r0, ip, ror r5
    e28c:	ldrdeq	sp, [r0], -ip
    e290:	andeq	lr, r0, r4, ror #8
    e294:	strdeq	lr, [r0], -r4
    e298:	ldr	r3, [pc, #56]	; e2d8 <el_line@plt+0xbe24>
    e29c:	mov	r2, #1
    e2a0:	push	{r4, lr}
    e2a4:	add	r3, pc, r3
    e2a8:	mov	r4, r1
    e2ac:	mov	r1, r0
    e2b0:	ldr	r0, [r3]
    e2b4:	bl	ad34 <el_line@plt+0x8880>
    e2b8:	cmp	r0, #0
    e2bc:	beq	e2d0 <el_line@plt+0xbe1c>
    e2c0:	mov	r1, r4
    e2c4:	bl	dbdc <el_line@plt+0xb728>
    e2c8:	mov	r0, #0
    e2cc:	pop	{r4, pc}
    e2d0:	mvn	r0, #0
    e2d4:	pop	{r4, pc}
    e2d8:	andeq	r3, r2, r4, asr #1
    e2dc:	ldr	r3, [pc, #56]	; e31c <el_line@plt+0xbe68>
    e2e0:	mov	r2, #1
    e2e4:	push	{r4, lr}
    e2e8:	add	r3, pc, r3
    e2ec:	mov	r4, r1
    e2f0:	mov	r1, r0
    e2f4:	ldr	r0, [r3]
    e2f8:	bl	ad9c <el_line@plt+0x88e8>
    e2fc:	cmp	r0, #0
    e300:	beq	e314 <el_line@plt+0xbe60>
    e304:	mov	r1, r4
    e308:	bl	dbdc <el_line@plt+0xb728>
    e30c:	mov	r0, #0
    e310:	pop	{r4, pc}
    e314:	mvn	r0, #0
    e318:	pop	{r4, pc}
    e31c:	andeq	r3, r2, r0, lsl #1
    e320:	push	{r4, lr}
    e324:	mov	r4, r0
    e328:	ldr	r0, [r0]
    e32c:	bl	a48c <el_line@plt+0x7fd8>
    e330:	mov	r0, r4
    e334:	pop	{r4, lr}
    e338:	b	1f20 <free@plt>
    e33c:	push	{r3, r4, r5, lr}
    e340:	mov	r1, #8
    e344:	mov	r5, r0
    e348:	mov	r0, #1
    e34c:	bl	11598 <el_line@plt+0xf0e4>
    e350:	ldr	r3, [pc, #52]	; e38c <el_line@plt+0xbed8>
    e354:	mov	r1, r5
    e358:	add	r3, pc, r3
    e35c:	mov	r4, r0
    e360:	mov	r2, r0
    e364:	ldr	r0, [r3]
    e368:	bl	ab8c <el_line@plt+0x86d8>
    e36c:	subs	r3, r0, #0
    e370:	mov	r0, r4
    e374:	bne	e380 <el_line@plt+0xbecc>
    e378:	str	r3, [r4, #4]
    e37c:	pop	{r3, r4, r5, pc}
    e380:	bl	1f20 <free@plt>
    e384:	mov	r0, #0
    e388:	pop	{r3, r4, r5, pc}
    e38c:	andeq	r3, r2, r0, lsl r0
    e390:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    e394:	mov	r4, r0
    e398:	ldr	r2, [r0, #4]
    e39c:	ldr	r3, [r0]
    e3a0:	ldr	r7, [r3, r2, lsl #2]
    e3a4:	cmp	r7, #0
    e3a8:	beq	e438 <el_line@plt+0xbf84>
    e3ac:	ldr	r5, [pc, #140]	; e440 <el_line@plt+0xbf8c>
    e3b0:	movw	r2, #4376	; 0x1118
    e3b4:	mov	r1, #0
    e3b8:	ldr	r6, [pc, #132]	; e444 <el_line@plt+0xbf90>
    e3bc:	add	r5, pc, r5
    e3c0:	add	r7, r5, #4
    e3c4:	add	r6, pc, r6
    e3c8:	mov	r0, r7
    e3cc:	bl	2064 <memset@plt>
    e3d0:	ldr	r8, [r4, #4]
    e3d4:	mov	r1, #1
    e3d8:	ldr	r9, [r4]
    e3dc:	mov	r0, r8
    e3e0:	bl	192bc <el_line@plt+0x16e08>
    e3e4:	mov	r2, #256	; 0x100
    e3e8:	str	r0, [r4, #4]
    e3ec:	add	r0, r5, #23
    e3f0:	ldr	r3, [r9, r8, lsl #2]
    e3f4:	ldr	r1, [r3]
    e3f8:	bl	177d8 <el_line@plt+0x15324>
    e3fc:	ldr	r4, [r6]
    e400:	mov	r1, #1
    e404:	mov	r0, r4
    e408:	bl	192bc <el_line@plt+0x16e08>
    e40c:	asr	r3, r4, #31
    e410:	str	r4, [r5, #4]
    e414:	str	r3, [r5, #8]
    e418:	cmp	r0, #0
    e41c:	str	r0, [r6]
    e420:	mov	r0, r7
    e424:	bne	e434 <el_line@plt+0xbf80>
    e428:	mov	r3, #1
    e42c:	str	r3, [r6]
    e430:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    e434:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    e438:	mov	r0, r7
    e43c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    e440:	andeq	r2, r2, ip, lsr #31
    e444:	andeq	r0, r2, r0, asr #24
    e448:	push	{r4, r5, r6, r7, r8, r9}
    e44c:	ldr	r9, [pc, #92]	; e4b0 <el_line@plt+0xbffc>
    e450:	ldr	ip, [sp, #24]
    e454:	add	r9, pc, r9
    e458:	ldr	r8, [pc, #84]	; e4b4 <el_line@plt+0xc000>
    e45c:	ldr	r7, [pc, #84]	; e4b8 <el_line@plt+0xc004>
    e460:	ldr	r6, [pc, #84]	; e4bc <el_line@plt+0xc008>
    e464:	add	r8, pc, r8
    e468:	ldr	r5, [pc, #80]	; e4c0 <el_line@plt+0xc00c>
    e46c:	add	r7, pc, r7
    e470:	ldr	r4, [pc, #76]	; e4c4 <el_line@plt+0xc010>
    e474:	add	r6, pc, r6
    e478:	add	r5, pc, r5
    e47c:	str	r0, [r9]
    e480:	add	r4, pc, r4
    e484:	mov	r0, r1
    e488:	str	r8, [ip, #36]	; 0x24
    e48c:	orr	r1, r2, #64	; 0x40
    e490:	str	r7, [ip, #32]
    e494:	mov	r2, r3
    e498:	str	r6, [ip, #28]
    e49c:	mov	r3, ip
    e4a0:	str	r5, [ip, #40]	; 0x28
    e4a4:	str	r4, [ip, #44]	; 0x2c
    e4a8:	pop	{r4, r5, r6, r7, r8, r9}
    e4ac:	b	171fc <el_line@plt+0x14d48>
    e4b0:	andeq	r2, r2, r4, lsl pc
    e4b4:			; <UNDEFINED> instruction: 0xfffffed0
    e4b8:			; <UNDEFINED> instruction: 0xffffff1c
    e4bc:			; <UNDEFINED> instruction: 0xfffffea4
    e4c0:			; <UNDEFINED> instruction: 0xfffffe5c
    e4c4:			; <UNDEFINED> instruction: 0xfffffe10
    e4c8:	add	r0, r0, #55	; 0x37
    e4cc:	push	{r3, lr}
    e4d0:	cmp	r0, #55	; 0x37
    e4d4:	addls	pc, pc, r0, lsl #2
    e4d8:	b	e860 <el_line@plt+0xc3ac>
    e4dc:	b	e848 <el_line@plt+0xc394>
    e4e0:	b	e83c <el_line@plt+0xc388>
    e4e4:	b	e830 <el_line@plt+0xc37c>
    e4e8:	b	e824 <el_line@plt+0xc370>
    e4ec:	b	e818 <el_line@plt+0xc364>
    e4f0:	b	e80c <el_line@plt+0xc358>
    e4f4:	b	e800 <el_line@plt+0xc34c>
    e4f8:	b	e7f4 <el_line@plt+0xc340>
    e4fc:	b	e7e8 <el_line@plt+0xc334>
    e500:	b	e7dc <el_line@plt+0xc328>
    e504:	b	e7d0 <el_line@plt+0xc31c>
    e508:	b	e7c4 <el_line@plt+0xc310>
    e50c:	b	e7b8 <el_line@plt+0xc304>
    e510:	b	e7ac <el_line@plt+0xc2f8>
    e514:	b	e7a0 <el_line@plt+0xc2ec>
    e518:	b	e794 <el_line@plt+0xc2e0>
    e51c:	b	e788 <el_line@plt+0xc2d4>
    e520:	b	e77c <el_line@plt+0xc2c8>
    e524:	b	e770 <el_line@plt+0xc2bc>
    e528:	b	e764 <el_line@plt+0xc2b0>
    e52c:	b	e758 <el_line@plt+0xc2a4>
    e530:	b	e74c <el_line@plt+0xc298>
    e534:	b	e740 <el_line@plt+0xc28c>
    e538:	b	e734 <el_line@plt+0xc280>
    e53c:	b	e728 <el_line@plt+0xc274>
    e540:	b	e71c <el_line@plt+0xc268>
    e544:	b	e710 <el_line@plt+0xc25c>
    e548:	b	e704 <el_line@plt+0xc250>
    e54c:	b	e6f8 <el_line@plt+0xc244>
    e550:	b	e6ec <el_line@plt+0xc238>
    e554:	b	e6e0 <el_line@plt+0xc22c>
    e558:	b	e6d0 <el_line@plt+0xc21c>
    e55c:	b	e6c4 <el_line@plt+0xc210>
    e560:	b	e6b8 <el_line@plt+0xc204>
    e564:	b	e6ac <el_line@plt+0xc1f8>
    e568:	b	e6a0 <el_line@plt+0xc1ec>
    e56c:	b	e694 <el_line@plt+0xc1e0>
    e570:	b	e688 <el_line@plt+0xc1d4>
    e574:	b	e67c <el_line@plt+0xc1c8>
    e578:	b	e670 <el_line@plt+0xc1bc>
    e57c:	b	e664 <el_line@plt+0xc1b0>
    e580:	b	e658 <el_line@plt+0xc1a4>
    e584:	b	e64c <el_line@plt+0xc198>
    e588:	b	e640 <el_line@plt+0xc18c>
    e58c:	b	e634 <el_line@plt+0xc180>
    e590:	b	e628 <el_line@plt+0xc174>
    e594:	b	e61c <el_line@plt+0xc168>
    e598:	b	e610 <el_line@plt+0xc15c>
    e59c:	b	e604 <el_line@plt+0xc150>
    e5a0:	b	e5f8 <el_line@plt+0xc144>
    e5a4:	b	e5ec <el_line@plt+0xc138>
    e5a8:	b	e5e0 <el_line@plt+0xc12c>
    e5ac:	b	e5d4 <el_line@plt+0xc120>
    e5b0:	b	e5c8 <el_line@plt+0xc114>
    e5b4:	b	e5bc <el_line@plt+0xc108>
    e5b8:	b	e854 <el_line@plt+0xc3a0>
    e5bc:	ldr	r0, [pc, #680]	; e86c <el_line@plt+0xc3b8>
    e5c0:	add	r0, pc, r0
    e5c4:	pop	{r3, pc}
    e5c8:	ldr	r0, [pc, #672]	; e870 <el_line@plt+0xc3bc>
    e5cc:	add	r0, pc, r0
    e5d0:	pop	{r3, pc}
    e5d4:	ldr	r0, [pc, #664]	; e874 <el_line@plt+0xc3c0>
    e5d8:	add	r0, pc, r0
    e5dc:	pop	{r3, pc}
    e5e0:	ldr	r0, [pc, #656]	; e878 <el_line@plt+0xc3c4>
    e5e4:	add	r0, pc, r0
    e5e8:	pop	{r3, pc}
    e5ec:	ldr	r0, [pc, #648]	; e87c <el_line@plt+0xc3c8>
    e5f0:	add	r0, pc, r0
    e5f4:	pop	{r3, pc}
    e5f8:	ldr	r0, [pc, #640]	; e880 <el_line@plt+0xc3cc>
    e5fc:	add	r0, pc, r0
    e600:	pop	{r3, pc}
    e604:	ldr	r0, [pc, #632]	; e884 <el_line@plt+0xc3d0>
    e608:	add	r0, pc, r0
    e60c:	pop	{r3, pc}
    e610:	ldr	r0, [pc, #624]	; e888 <el_line@plt+0xc3d4>
    e614:	add	r0, pc, r0
    e618:	pop	{r3, pc}
    e61c:	ldr	r0, [pc, #616]	; e88c <el_line@plt+0xc3d8>
    e620:	add	r0, pc, r0
    e624:	pop	{r3, pc}
    e628:	ldr	r0, [pc, #608]	; e890 <el_line@plt+0xc3dc>
    e62c:	add	r0, pc, r0
    e630:	pop	{r3, pc}
    e634:	ldr	r0, [pc, #600]	; e894 <el_line@plt+0xc3e0>
    e638:	add	r0, pc, r0
    e63c:	pop	{r3, pc}
    e640:	ldr	r0, [pc, #592]	; e898 <el_line@plt+0xc3e4>
    e644:	add	r0, pc, r0
    e648:	pop	{r3, pc}
    e64c:	ldr	r0, [pc, #584]	; e89c <el_line@plt+0xc3e8>
    e650:	add	r0, pc, r0
    e654:	pop	{r3, pc}
    e658:	ldr	r0, [pc, #576]	; e8a0 <el_line@plt+0xc3ec>
    e65c:	add	r0, pc, r0
    e660:	pop	{r3, pc}
    e664:	ldr	r0, [pc, #568]	; e8a4 <el_line@plt+0xc3f0>
    e668:	add	r0, pc, r0
    e66c:	pop	{r3, pc}
    e670:	ldr	r0, [pc, #560]	; e8a8 <el_line@plt+0xc3f4>
    e674:	add	r0, pc, r0
    e678:	pop	{r3, pc}
    e67c:	ldr	r0, [pc, #552]	; e8ac <el_line@plt+0xc3f8>
    e680:	add	r0, pc, r0
    e684:	pop	{r3, pc}
    e688:	ldr	r0, [pc, #544]	; e8b0 <el_line@plt+0xc3fc>
    e68c:	add	r0, pc, r0
    e690:	pop	{r3, pc}
    e694:	ldr	r0, [pc, #536]	; e8b4 <el_line@plt+0xc400>
    e698:	add	r0, pc, r0
    e69c:	pop	{r3, pc}
    e6a0:	ldr	r0, [pc, #528]	; e8b8 <el_line@plt+0xc404>
    e6a4:	add	r0, pc, r0
    e6a8:	pop	{r3, pc}
    e6ac:	ldr	r0, [pc, #520]	; e8bc <el_line@plt+0xc408>
    e6b0:	add	r0, pc, r0
    e6b4:	pop	{r3, pc}
    e6b8:	ldr	r0, [pc, #512]	; e8c0 <el_line@plt+0xc40c>
    e6bc:	add	r0, pc, r0
    e6c0:	pop	{r3, pc}
    e6c4:	ldr	r0, [pc, #504]	; e8c4 <el_line@plt+0xc410>
    e6c8:	add	r0, pc, r0
    e6cc:	pop	{r3, pc}
    e6d0:	bl	23ac <__errno_location@plt>
    e6d4:	pop	{r3, lr}
    e6d8:	ldr	r0, [r0]
    e6dc:	b	1fa4 <strerror@plt>
    e6e0:	ldr	r0, [pc, #480]	; e8c8 <el_line@plt+0xc414>
    e6e4:	add	r0, pc, r0
    e6e8:	pop	{r3, pc}
    e6ec:	ldr	r0, [pc, #472]	; e8cc <el_line@plt+0xc418>
    e6f0:	add	r0, pc, r0
    e6f4:	pop	{r3, pc}
    e6f8:	ldr	r0, [pc, #464]	; e8d0 <el_line@plt+0xc41c>
    e6fc:	add	r0, pc, r0
    e700:	pop	{r3, pc}
    e704:	ldr	r0, [pc, #456]	; e8d4 <el_line@plt+0xc420>
    e708:	add	r0, pc, r0
    e70c:	pop	{r3, pc}
    e710:	ldr	r0, [pc, #448]	; e8d8 <el_line@plt+0xc424>
    e714:	add	r0, pc, r0
    e718:	pop	{r3, pc}
    e71c:	ldr	r0, [pc, #440]	; e8dc <el_line@plt+0xc428>
    e720:	add	r0, pc, r0
    e724:	pop	{r3, pc}
    e728:	ldr	r0, [pc, #432]	; e8e0 <el_line@plt+0xc42c>
    e72c:	add	r0, pc, r0
    e730:	pop	{r3, pc}
    e734:	ldr	r0, [pc, #424]	; e8e4 <el_line@plt+0xc430>
    e738:	add	r0, pc, r0
    e73c:	pop	{r3, pc}
    e740:	ldr	r0, [pc, #416]	; e8e8 <el_line@plt+0xc434>
    e744:	add	r0, pc, r0
    e748:	pop	{r3, pc}
    e74c:	ldr	r0, [pc, #408]	; e8ec <el_line@plt+0xc438>
    e750:	add	r0, pc, r0
    e754:	pop	{r3, pc}
    e758:	ldr	r0, [pc, #400]	; e8f0 <el_line@plt+0xc43c>
    e75c:	add	r0, pc, r0
    e760:	pop	{r3, pc}
    e764:	ldr	r0, [pc, #392]	; e8f4 <el_line@plt+0xc440>
    e768:	add	r0, pc, r0
    e76c:	pop	{r3, pc}
    e770:	ldr	r0, [pc, #384]	; e8f8 <el_line@plt+0xc444>
    e774:	add	r0, pc, r0
    e778:	pop	{r3, pc}
    e77c:	ldr	r0, [pc, #376]	; e8fc <el_line@plt+0xc448>
    e780:	add	r0, pc, r0
    e784:	pop	{r3, pc}
    e788:	ldr	r0, [pc, #368]	; e900 <el_line@plt+0xc44c>
    e78c:	add	r0, pc, r0
    e790:	pop	{r3, pc}
    e794:	ldr	r0, [pc, #360]	; e904 <el_line@plt+0xc450>
    e798:	add	r0, pc, r0
    e79c:	pop	{r3, pc}
    e7a0:	ldr	r0, [pc, #352]	; e908 <el_line@plt+0xc454>
    e7a4:	add	r0, pc, r0
    e7a8:	pop	{r3, pc}
    e7ac:	ldr	r0, [pc, #344]	; e90c <el_line@plt+0xc458>
    e7b0:	add	r0, pc, r0
    e7b4:	pop	{r3, pc}
    e7b8:	ldr	r0, [pc, #336]	; e910 <el_line@plt+0xc45c>
    e7bc:	add	r0, pc, r0
    e7c0:	pop	{r3, pc}
    e7c4:	ldr	r0, [pc, #328]	; e914 <el_line@plt+0xc460>
    e7c8:	add	r0, pc, r0
    e7cc:	pop	{r3, pc}
    e7d0:	ldr	r0, [pc, #320]	; e918 <el_line@plt+0xc464>
    e7d4:	add	r0, pc, r0
    e7d8:	pop	{r3, pc}
    e7dc:	ldr	r0, [pc, #312]	; e91c <el_line@plt+0xc468>
    e7e0:	add	r0, pc, r0
    e7e4:	pop	{r3, pc}
    e7e8:	ldr	r0, [pc, #304]	; e920 <el_line@plt+0xc46c>
    e7ec:	add	r0, pc, r0
    e7f0:	pop	{r3, pc}
    e7f4:	ldr	r0, [pc, #296]	; e924 <el_line@plt+0xc470>
    e7f8:	add	r0, pc, r0
    e7fc:	pop	{r3, pc}
    e800:	ldr	r0, [pc, #288]	; e928 <el_line@plt+0xc474>
    e804:	add	r0, pc, r0
    e808:	pop	{r3, pc}
    e80c:	ldr	r0, [pc, #280]	; e92c <el_line@plt+0xc478>
    e810:	add	r0, pc, r0
    e814:	pop	{r3, pc}
    e818:	ldr	r0, [pc, #272]	; e930 <el_line@plt+0xc47c>
    e81c:	add	r0, pc, r0
    e820:	pop	{r3, pc}
    e824:	ldr	r0, [pc, #264]	; e934 <el_line@plt+0xc480>
    e828:	add	r0, pc, r0
    e82c:	pop	{r3, pc}
    e830:	ldr	r0, [pc, #256]	; e938 <el_line@plt+0xc484>
    e834:	add	r0, pc, r0
    e838:	pop	{r3, pc}
    e83c:	ldr	r0, [pc, #248]	; e93c <el_line@plt+0xc488>
    e840:	add	r0, pc, r0
    e844:	pop	{r3, pc}
    e848:	ldr	r0, [pc, #240]	; e940 <el_line@plt+0xc48c>
    e84c:	add	r0, pc, r0
    e850:	pop	{r3, pc}
    e854:	ldr	r0, [pc, #232]	; e944 <el_line@plt+0xc490>
    e858:	add	r0, pc, r0
    e85c:	pop	{r3, pc}
    e860:	ldr	r0, [pc, #224]	; e948 <el_line@plt+0xc494>
    e864:	add	r0, pc, r0
    e868:	pop	{r3, pc}
    e86c:	strdeq	lr, [r0], -r8
    e870:	andeq	lr, r0, r8, lsl #2
    e874:	andeq	lr, r0, r8, lsl r1
    e878:	andeq	lr, r0, r8, ror #24
    e87c:	andeq	lr, r0, r4, lsl r1
    e880:	andeq	lr, r0, ip, lsl r1
    e884:	andeq	lr, r0, r4, lsr #2
    e888:	andeq	lr, r0, ip, lsr #2
    e88c:	andeq	lr, r0, r4, asr #2
    e890:	andeq	lr, r0, r4, asr r1
    e894:	andeq	lr, r0, ip, asr r1
    e898:	andeq	lr, r0, r8, ror #2
    e89c:	andeq	lr, r0, r4, ror r1
    e8a0:	andeq	lr, r0, r0, lsl #3
    e8a4:	muleq	r0, r4, r1
    e8a8:	andeq	lr, r0, r8, lsr #3
    e8ac:	andeq	lr, r0, ip, asr #3
    e8b0:	ldrdeq	lr, [r0], -ip
    e8b4:	strdeq	lr, [r0], -r8
    e8b8:	andeq	lr, r0, ip, lsl #4
    e8bc:	andeq	lr, r0, r0, lsr #4
    e8c0:	andeq	lr, r0, r8, lsr #4
    e8c4:	andeq	lr, r0, r0, lsr r2
    e8c8:	andeq	lr, r0, ip, lsr r2
    e8cc:	andeq	lr, r0, r4, asr #4
    e8d0:	andeq	lr, r0, r8, asr r2
    e8d4:	andeq	lr, r0, r4, ror #4
    e8d8:	andeq	lr, r0, r4, ror r2
    e8dc:	andeq	lr, r0, r8, ror r2
    e8e0:	muleq	r0, r4, r2
    e8e4:	andeq	lr, r0, r4, lsr #5
    e8e8:			; <UNDEFINED> instruction: 0x0000e2b0
    e8ec:	andeq	lr, r0, ip, asr #5
    e8f0:	andeq	lr, r0, r8, ror #5
    e8f4:	andeq	lr, r0, r8, lsr r3
    e8f8:	strdeq	lr, [r0], -r0
    e8fc:	andeq	lr, r0, r0, lsl #6
    e900:	andeq	lr, r0, ip, lsr #6
    e904:	andeq	lr, r0, r0, asr #6
    e908:	andeq	lr, r0, r8, ror #6
    e90c:	andeq	lr, r0, r8, ror r3
    e910:	muleq	r0, r4, r3
    e914:	andeq	lr, r0, r0, asr #7
    e918:	andeq	lr, r0, r4, asr #7
    e91c:	ldrdeq	lr, [r0], -r8
    e920:	ldrdeq	lr, [r0], -ip
    e924:	andeq	lr, r0, r4, ror #7
    e928:	strdeq	lr, [r0], -r8
    e92c:	andeq	lr, r0, r0, lsl r4
    e930:	andeq	lr, r0, r8, lsr #8
    e934:	andeq	ip, r0, r4, asr #28
    e938:	andeq	lr, r0, r0, lsr #8
    e93c:	andeq	lr, r0, ip, lsr #8
    e940:	andeq	lr, r0, r8, lsr r4
    e944:	andeq	sp, r0, r8, asr lr
    e948:	andeq	lr, r0, r0, lsr r4
    e94c:	push	{r4, lr}
    e950:	mov	r4, r0
    e954:	ldr	r3, [r0, #8]
    e958:	cmp	r3, #0
    e95c:	popeq	{r4, pc}
    e960:	ldr	r2, [r0, #24]
    e964:	cmp	r2, #0
    e968:	popne	{r4, pc}
    e96c:	ldr	r2, [r0, #32]
    e970:	cmp	r2, #1
    e974:	pophi	{r4, pc}
    e978:	cmp	r1, #0
    e97c:	ldrne	r2, [r0, #12]
    e980:	bne	e998 <el_line@plt+0xc4e4>
    e984:	cmp	r3, #8192	; 0x2000
    e988:	popcc	{r4, pc}
    e98c:	ldr	r2, [r0, #12]
    e990:	cmp	r3, r2, lsr #1
    e994:	popcc	{r4, pc}
    e998:	ldr	r0, [r4]
    e99c:	rsb	r2, r3, r2
    e9a0:	add	r1, r0, r3
    e9a4:	bl	210c <memmove@plt>
    e9a8:	ldr	r2, [r4, #12]
    e9ac:	ldr	r3, [r4, #8]
    e9b0:	mov	r1, #0
    e9b4:	str	r1, [r4, #8]
    e9b8:	rsb	r3, r3, r2
    e9bc:	str	r3, [r4, #12]
    e9c0:	pop	{r4, pc}
    e9c4:	push	{r3, r4, r5, lr}
    e9c8:	mov	r0, #40	; 0x28
    e9cc:	mov	r1, #1
    e9d0:	bl	2298 <calloc@plt>
    e9d4:	subs	r4, r0, #0
    e9d8:	beq	ea20 <el_line@plt+0xc56c>
    e9dc:	mov	r3, #0
    e9e0:	mov	r1, #256	; 0x100
    e9e4:	mov	r0, #1
    e9e8:	mov	r2, #134217728	; 0x8000000
    e9ec:	str	r1, [r4, #20]
    e9f0:	str	r0, [r4, #32]
    e9f4:	str	r2, [r4, #16]
    e9f8:	str	r3, [r4, #24]
    e9fc:	str	r3, [r4, #36]	; 0x24
    ea00:	bl	2298 <calloc@plt>
    ea04:	mov	r5, r0
    ea08:	cmp	r5, #0
    ea0c:	mov	r0, r4
    ea10:	str	r5, [r4]
    ea14:	str	r5, [r4, #4]
    ea18:	beq	ea28 <el_line@plt+0xc574>
    ea1c:	pop	{r3, r4, r5, pc}
    ea20:	mov	r0, r4
    ea24:	pop	{r3, r4, r5, pc}
    ea28:	bl	1f20 <free@plt>
    ea2c:	mov	r0, r5
    ea30:	pop	{r3, r4, r5, pc}
    ea34:	cmp	r1, #134217728	; 0x8000000
    ea38:	push	{r4, r5, r6, lr}
    ea3c:	movls	r5, #0
    ea40:	movhi	r5, #1
    ea44:	cmp	r0, #0
    ea48:	orreq	r5, r5, #1
    ea4c:	cmp	r5, #0
    ea50:	mov	r4, r1
    ea54:	mov	r6, r0
    ea58:	bne	ea98 <el_line@plt+0xc5e4>
    ea5c:	mov	r0, #40	; 0x28
    ea60:	mov	r1, #1
    ea64:	bl	2298 <calloc@plt>
    ea68:	subs	r3, r0, #0
    ea6c:	beq	eaa0 <el_line@plt+0xc5ec>
    ea70:	mov	r2, #1
    ea74:	str	r4, [r3, #16]
    ea78:	str	r4, [r3, #12]
    ea7c:	mov	r0, r3
    ea80:	str	r4, [r3, #20]
    ea84:	str	r5, [r3, #36]	; 0x24
    ea88:	stm	r3, {r5, r6}
    ea8c:	str	r2, [r3, #24]
    ea90:	str	r2, [r3, #32]
    ea94:	pop	{r4, r5, r6, pc}
    ea98:	mov	r0, #0
    ea9c:	pop	{r4, r5, r6, pc}
    eaa0:	mov	r0, r3
    eaa4:	pop	{r4, r5, r6, pc}
    eaa8:	push	{r3, r4, r5, lr}
    eaac:	subs	r4, r0, #0
    eab0:	mov	r5, r1
    eab4:	beq	eaf4 <el_line@plt+0xc640>
    eab8:	ldr	r3, [r4, #24]
    eabc:	cmp	r3, #0
    eac0:	beq	eba4 <el_line@plt+0xc6f0>
    eac4:	ldr	r2, [r4, #32]
    eac8:	sub	r2, r2, #1
    eacc:	cmp	r2, #1048576	; 0x100000
    ead0:	bcs	eaf4 <el_line@plt+0xc640>
    ead4:	ldr	r2, [r4, #4]
    ead8:	cmp	r2, #0
    eadc:	beq	eaf4 <el_line@plt+0xc640>
    eae0:	ldr	r2, [r4, #28]
    eae4:	cmp	r2, #0
    eae8:	beq	ebd4 <el_line@plt+0xc720>
    eaec:	cmp	r3, #0
    eaf0:	beq	ebc8 <el_line@plt+0xc714>
    eaf4:	bl	24c0 <el_line@plt+0xc>
    eaf8:	cmp	r0, #0
    eafc:	popne	{r3, r4, r5, pc}
    eb00:	cmp	r5, #0
    eb04:	beq	eb80 <el_line@plt+0xc6cc>
    eb08:	ldr	r3, [r5, #24]
    eb0c:	cmp	r3, #0
    eb10:	beq	ebb8 <el_line@plt+0xc704>
    eb14:	ldr	r2, [r5, #32]
    eb18:	sub	r2, r2, #1
    eb1c:	cmp	r2, #1048576	; 0x100000
    eb20:	bcs	eb80 <el_line@plt+0xc6cc>
    eb24:	ldr	r2, [r5, #4]
    eb28:	cmp	r2, #0
    eb2c:	beq	eb80 <el_line@plt+0xc6cc>
    eb30:	ldr	r2, [r5, #28]
    eb34:	cmp	r2, #0
    eb38:	beq	eb50 <el_line@plt+0xc69c>
    eb3c:	cmp	r3, #0
    eb40:	bne	eb80 <el_line@plt+0xc6cc>
    eb44:	ldr	r3, [r5, #36]	; 0x24
    eb48:	cmp	r3, #0
    eb4c:	bne	eb80 <el_line@plt+0xc6cc>
    eb50:	ldr	r3, [r5, #16]
    eb54:	cmp	r3, #134217728	; 0x8000000
    eb58:	bhi	eb80 <el_line@plt+0xc6cc>
    eb5c:	ldr	r2, [r5, #20]
    eb60:	cmp	r3, r2
    eb64:	bcc	eb80 <el_line@plt+0xc6cc>
    eb68:	ldr	r3, [r5, #12]
    eb6c:	cmp	r2, r3
    eb70:	bcc	eb80 <el_line@plt+0xc6cc>
    eb74:	ldr	r2, [r5, #8]
    eb78:	cmp	r3, r2
    eb7c:	bcs	eb8c <el_line@plt+0xc6d8>
    eb80:	bl	24c0 <el_line@plt+0xc>
    eb84:	cmp	r0, #0
    eb88:	bne	ebb4 <el_line@plt+0xc700>
    eb8c:	str	r5, [r4, #36]	; 0x24
    eb90:	mov	r0, #0
    eb94:	ldr	r3, [r5, #32]
    eb98:	add	r3, r3, #1
    eb9c:	str	r3, [r5, #32]
    eba0:	pop	{r3, r4, r5, pc}
    eba4:	ldm	r4, {r1, r2}
    eba8:	cmp	r1, r2
    ebac:	bne	eaf4 <el_line@plt+0xc640>
    ebb0:	b	eac4 <el_line@plt+0xc610>
    ebb4:	pop	{r3, r4, r5, pc}
    ebb8:	ldm	r5, {r1, r2}
    ebbc:	cmp	r1, r2
    ebc0:	bne	eb80 <el_line@plt+0xc6cc>
    ebc4:	b	eb14 <el_line@plt+0xc660>
    ebc8:	ldr	r3, [r4, #36]	; 0x24
    ebcc:	cmp	r3, #0
    ebd0:	bne	eaf4 <el_line@plt+0xc640>
    ebd4:	ldr	r3, [r4, #16]
    ebd8:	cmp	r3, #134217728	; 0x8000000
    ebdc:	bhi	eaf4 <el_line@plt+0xc640>
    ebe0:	ldr	r2, [r4, #20]
    ebe4:	cmp	r3, r2
    ebe8:	bcc	eaf4 <el_line@plt+0xc640>
    ebec:	ldr	r3, [r4, #12]
    ebf0:	cmp	r2, r3
    ebf4:	bcc	eaf4 <el_line@plt+0xc640>
    ebf8:	ldr	r2, [r4, #8]
    ebfc:	cmp	r3, r2
    ec00:	bcc	eaf4 <el_line@plt+0xc640>
    ec04:	b	eb00 <el_line@plt+0xc64c>
    ec08:	push	{r4, lr}
    ec0c:	mov	r1, #40	; 0x28
    ec10:	mov	r4, r0
    ec14:	bl	183fc <el_line@plt+0x15f48>
    ec18:	mov	r3, #1
    ec1c:	mov	r2, #256	; 0x100
    ec20:	mov	r0, #134217728	; 0x8000000
    ec24:	mov	r1, #0
    ec28:	str	r0, [r4, #16]
    ec2c:	mov	r0, r3
    ec30:	str	r1, [r4, #24]
    ec34:	mov	r1, r2
    ec38:	str	r2, [r4, #20]
    ec3c:	str	r3, [r4, #28]
    ec40:	str	r3, [r4, #32]
    ec44:	bl	2298 <calloc@plt>
    ec48:	cmp	r0, #0
    ec4c:	str	r0, [r4]
    ec50:	str	r0, [r4, #4]
    ec54:	streq	r0, [r4, #20]
    ec58:	pop	{r4, pc}
    ec5c:	push	{r3, r4, r5, lr}
    ec60:	subs	r4, r0, #0
    ec64:	popeq	{r3, r4, r5, pc}
    ec68:	ldr	r3, [r4, #24]
    ec6c:	cmp	r3, #0
    ec70:	bne	ece0 <el_line@plt+0xc82c>
    ec74:	ldm	r4, {r1, r2}
    ec78:	cmp	r1, r2
    ec7c:	beq	ece0 <el_line@plt+0xc82c>
    ec80:	bl	24c0 <el_line@plt+0xc>
    ec84:	cmp	r0, #0
    ec88:	popne	{r3, r4, r5, pc}
    ec8c:	ldr	r0, [r4, #36]	; 0x24
    ec90:	bl	ec5c <el_line@plt+0xc7a8>
    ec94:	ldr	r3, [r4, #32]
    ec98:	mov	r2, #0
    ec9c:	str	r2, [r4, #36]	; 0x24
    eca0:	sub	r3, r3, #1
    eca4:	str	r3, [r4, #32]
    eca8:	cmp	r3, r2
    ecac:	popne	{r3, r4, r5, pc}
    ecb0:	ldr	r3, [r4, #24]
    ecb4:	ldr	r5, [r4, #28]
    ecb8:	cmp	r3, r2
    ecbc:	beq	ed3c <el_line@plt+0xc888>
    ecc0:	mov	r0, r4
    ecc4:	mov	r1, #40	; 0x28
    ecc8:	bl	183fc <el_line@plt+0x15f48>
    eccc:	cmp	r5, #0
    ecd0:	popne	{r3, r4, r5, pc}
    ecd4:	mov	r0, r4
    ecd8:	pop	{r3, r4, r5, lr}
    ecdc:	b	1f20 <free@plt>
    ece0:	ldr	r2, [r4, #32]
    ece4:	sub	r2, r2, #1
    ece8:	cmp	r2, #1048576	; 0x100000
    ecec:	bcs	ec80 <el_line@plt+0xc7cc>
    ecf0:	ldr	r2, [r4, #4]
    ecf4:	cmp	r2, #0
    ecf8:	beq	ec80 <el_line@plt+0xc7cc>
    ecfc:	ldr	r2, [r4, #28]
    ed00:	cmp	r2, #0
    ed04:	bne	ed54 <el_line@plt+0xc8a0>
    ed08:	ldr	r3, [r4, #16]
    ed0c:	cmp	r3, #134217728	; 0x8000000
    ed10:	bhi	ec80 <el_line@plt+0xc7cc>
    ed14:	ldr	r2, [r4, #20]
    ed18:	cmp	r3, r2
    ed1c:	bcc	ec80 <el_line@plt+0xc7cc>
    ed20:	ldr	r3, [r4, #12]
    ed24:	cmp	r2, r3
    ed28:	bcc	ec80 <el_line@plt+0xc7cc>
    ed2c:	ldr	r2, [r4, #8]
    ed30:	cmp	r3, r2
    ed34:	bcc	ec80 <el_line@plt+0xc7cc>
    ed38:	b	ec8c <el_line@plt+0xc7d8>
    ed3c:	ldr	r0, [r4]
    ed40:	ldr	r1, [r4, #20]
    ed44:	bl	183fc <el_line@plt+0x15f48>
    ed48:	ldr	r0, [r4]
    ed4c:	bl	1f20 <free@plt>
    ed50:	b	ecc0 <el_line@plt+0xc80c>
    ed54:	cmp	r3, #0
    ed58:	bne	ec80 <el_line@plt+0xc7cc>
    ed5c:	ldr	r3, [r4, #36]	; 0x24
    ed60:	cmp	r3, #0
    ed64:	bne	ec80 <el_line@plt+0xc7cc>
    ed68:	b	ed08 <el_line@plt+0xc854>
    ed6c:	push	{r3, r4, r5, lr}
    ed70:	subs	r4, r0, #0
    ed74:	beq	efb0 <el_line@plt+0xcafc>
    ed78:	ldr	r3, [r4, #24]
    ed7c:	cmp	r3, #0
    ed80:	beq	ee2c <el_line@plt+0xc978>
    ed84:	ldr	r2, [r4, #32]
    ed88:	sub	r2, r2, #1
    ed8c:	cmp	r2, #1048576	; 0x100000
    ed90:	bcc	ef18 <el_line@plt+0xca64>
    ed94:	bl	24c0 <el_line@plt+0xc>
    ed98:	cmp	r0, #0
    ed9c:	ldreq	r3, [r4, #24]
    eda0:	bne	ef10 <el_line@plt+0xca5c>
    eda4:	cmp	r3, #0
    eda8:	bne	eeb0 <el_line@plt+0xc9fc>
    edac:	ldm	r4, {r1, r2}
    edb0:	cmp	r1, r2
    edb4:	beq	eeb0 <el_line@plt+0xc9fc>
    edb8:	bl	24c0 <el_line@plt+0xc>
    edbc:	cmp	r0, #0
    edc0:	bne	ee3c <el_line@plt+0xc988>
    edc4:	ldr	r5, [r4, #4]
    edc8:	ldr	r2, [r4, #8]
    edcc:	ldr	r3, [r4, #24]
    edd0:	cmp	r3, #0
    edd4:	add	r5, r5, r2
    edd8:	bne	ee54 <el_line@plt+0xc9a0>
    eddc:	ldm	r4, {r1, r2}
    ede0:	cmp	r1, r2
    ede4:	beq	ee54 <el_line@plt+0xc9a0>
    ede8:	bl	24c0 <el_line@plt+0xc>
    edec:	cmp	r0, #0
    edf0:	movne	r1, #0
    edf4:	bne	ee04 <el_line@plt+0xc950>
    edf8:	ldr	r1, [r4, #12]
    edfc:	ldr	r3, [r4, #8]
    ee00:	rsb	r1, r3, r1
    ee04:	mov	r0, r5
    ee08:	bl	ea34 <el_line@plt+0xc580>
    ee0c:	subs	r5, r0, #0
    ee10:	beq	ef10 <el_line@plt+0xca5c>
    ee14:	mov	r1, r4
    ee18:	bl	eaa8 <el_line@plt+0xc5f4>
    ee1c:	cmp	r0, #0
    ee20:	mov	r0, r5
    ee24:	bne	ef0c <el_line@plt+0xca58>
    ee28:	pop	{r3, r4, r5, pc}
    ee2c:	ldm	r4, {r1, r2}
    ee30:	cmp	r1, r2
    ee34:	bne	ed94 <el_line@plt+0xc8e0>
    ee38:	b	ed84 <el_line@plt+0xc8d0>
    ee3c:	cmp	r4, #0
    ee40:	beq	ef78 <el_line@plt+0xcac4>
    ee44:	ldr	r3, [r4, #24]
    ee48:	mov	r5, #0
    ee4c:	cmp	r3, #0
    ee50:	beq	eddc <el_line@plt+0xc928>
    ee54:	ldr	r2, [r4, #32]
    ee58:	sub	r2, r2, #1
    ee5c:	cmp	r2, #1048576	; 0x100000
    ee60:	bcs	ede8 <el_line@plt+0xc934>
    ee64:	ldr	r2, [r4, #4]
    ee68:	cmp	r2, #0
    ee6c:	beq	ede8 <el_line@plt+0xc934>
    ee70:	ldr	r2, [r4, #28]
    ee74:	cmp	r2, #0
    ee78:	bne	ef80 <el_line@plt+0xcacc>
    ee7c:	ldr	r3, [r4, #16]
    ee80:	cmp	r3, #134217728	; 0x8000000
    ee84:	bhi	ede8 <el_line@plt+0xc934>
    ee88:	ldr	r2, [r4, #20]
    ee8c:	cmp	r3, r2
    ee90:	bcc	ede8 <el_line@plt+0xc934>
    ee94:	ldr	r1, [r4, #12]
    ee98:	cmp	r2, r1
    ee9c:	bcc	ede8 <el_line@plt+0xc934>
    eea0:	ldr	r3, [r4, #8]
    eea4:	cmp	r1, r3
    eea8:	bcc	ede8 <el_line@plt+0xc934>
    eeac:	b	ee00 <el_line@plt+0xc94c>
    eeb0:	ldr	r2, [r4, #32]
    eeb4:	sub	r2, r2, #1
    eeb8:	cmp	r2, #1048576	; 0x100000
    eebc:	bcs	edb8 <el_line@plt+0xc904>
    eec0:	ldr	r5, [r4, #4]
    eec4:	cmp	r5, #0
    eec8:	beq	edb8 <el_line@plt+0xc904>
    eecc:	ldr	r2, [r4, #28]
    eed0:	cmp	r2, #0
    eed4:	bne	ef98 <el_line@plt+0xcae4>
    eed8:	ldr	r2, [r4, #16]
    eedc:	cmp	r2, #134217728	; 0x8000000
    eee0:	bhi	edb8 <el_line@plt+0xc904>
    eee4:	ldr	r1, [r4, #20]
    eee8:	cmp	r2, r1
    eeec:	bcc	edb8 <el_line@plt+0xc904>
    eef0:	ldr	r0, [r4, #12]
    eef4:	cmp	r1, r0
    eef8:	bcc	edb8 <el_line@plt+0xc904>
    eefc:	ldr	r2, [r4, #8]
    ef00:	cmp	r0, r2
    ef04:	bcc	edb8 <el_line@plt+0xc904>
    ef08:	b	edd0 <el_line@plt+0xc91c>
    ef0c:	bl	ec5c <el_line@plt+0xc7a8>
    ef10:	mov	r0, #0
    ef14:	pop	{r3, r4, r5, pc}
    ef18:	ldr	r2, [r4, #4]
    ef1c:	cmp	r2, #0
    ef20:	beq	ed94 <el_line@plt+0xc8e0>
    ef24:	ldr	r2, [r4, #28]
    ef28:	cmp	r2, #0
    ef2c:	beq	ef44 <el_line@plt+0xca90>
    ef30:	cmp	r3, #0
    ef34:	bne	ed94 <el_line@plt+0xc8e0>
    ef38:	ldr	r2, [r4, #36]	; 0x24
    ef3c:	cmp	r2, #0
    ef40:	bne	ed94 <el_line@plt+0xc8e0>
    ef44:	ldr	r2, [r4, #16]
    ef48:	cmp	r2, #134217728	; 0x8000000
    ef4c:	bhi	ed94 <el_line@plt+0xc8e0>
    ef50:	ldr	r1, [r4, #20]
    ef54:	cmp	r2, r1
    ef58:	bcc	ed94 <el_line@plt+0xc8e0>
    ef5c:	ldr	r2, [r4, #12]
    ef60:	cmp	r1, r2
    ef64:	bcc	ed94 <el_line@plt+0xc8e0>
    ef68:	ldr	r1, [r4, #8]
    ef6c:	cmp	r2, r1
    ef70:	bcc	ed94 <el_line@plt+0xc8e0>
    ef74:	b	eda4 <el_line@plt+0xc8f0>
    ef78:	mov	r5, r4
    ef7c:	b	ede8 <el_line@plt+0xc934>
    ef80:	cmp	r3, #0
    ef84:	bne	ede8 <el_line@plt+0xc934>
    ef88:	ldr	r3, [r4, #36]	; 0x24
    ef8c:	cmp	r3, #0
    ef90:	bne	ede8 <el_line@plt+0xc934>
    ef94:	b	ee7c <el_line@plt+0xc9c8>
    ef98:	cmp	r3, #0
    ef9c:	bne	edb8 <el_line@plt+0xc904>
    efa0:	ldr	r2, [r4, #36]	; 0x24
    efa4:	cmp	r2, #0
    efa8:	bne	edb8 <el_line@plt+0xc904>
    efac:	b	eed8 <el_line@plt+0xca24>
    efb0:	bl	24c0 <el_line@plt+0xc>
    efb4:	cmp	r0, #0
    efb8:	beq	edb8 <el_line@plt+0xc904>
    efbc:	b	ef10 <el_line@plt+0xca5c>
    efc0:	push	{r4, lr}
    efc4:	mov	r4, r0
    efc8:	ldr	r3, [r0, #24]
    efcc:	cmp	r3, #0
    efd0:	bne	efe0 <el_line@plt+0xcb2c>
    efd4:	ldr	r3, [r0, #32]
    efd8:	cmp	r3, #1
    efdc:	bls	efec <el_line@plt+0xcb38>
    efe0:	ldr	r3, [r4, #12]
    efe4:	str	r3, [r4, #8]
    efe8:	pop	{r4, pc}
    efec:	ldr	r2, [r0]
    eff0:	ldr	r1, [r0, #4]
    eff4:	cmp	r2, r1
    eff8:	beq	f044 <el_line@plt+0xcb90>
    effc:	bl	24c0 <el_line@plt+0xc>
    f000:	cmp	r0, #0
    f004:	beq	f09c <el_line@plt+0xcbe8>
    f008:	ldr	r2, [r4, #20]
    f00c:	mov	r3, #0
    f010:	str	r3, [r4, #12]
    f014:	cmp	r2, #256	; 0x100
    f018:	str	r3, [r4, #8]
    f01c:	popeq	{r4, pc}
    f020:	ldr	r0, [r4]
    f024:	mov	r1, #256	; 0x100
    f028:	bl	2178 <realloc@plt>
    f02c:	cmp	r0, #0
    f030:	strne	r0, [r4]
    f034:	strne	r0, [r4, #4]
    f038:	movne	r3, #256	; 0x100
    f03c:	strne	r3, [r4, #20]
    f040:	pop	{r4, pc}
    f044:	cmp	r3, #0
    f048:	beq	effc <el_line@plt+0xcb48>
    f04c:	cmp	r2, #0
    f050:	beq	effc <el_line@plt+0xcb48>
    f054:	ldr	r3, [r0, #28]
    f058:	cmp	r3, #0
    f05c:	beq	f06c <el_line@plt+0xcbb8>
    f060:	ldr	r3, [r0, #36]	; 0x24
    f064:	cmp	r3, #0
    f068:	bne	effc <el_line@plt+0xcb48>
    f06c:	ldr	r3, [r4, #16]
    f070:	cmp	r3, #134217728	; 0x8000000
    f074:	bhi	effc <el_line@plt+0xcb48>
    f078:	ldr	r2, [r4, #20]
    f07c:	cmp	r3, r2
    f080:	bcc	effc <el_line@plt+0xcb48>
    f084:	ldr	r3, [r4, #12]
    f088:	cmp	r2, r3
    f08c:	bcc	effc <el_line@plt+0xcb48>
    f090:	ldr	r2, [r4, #8]
    f094:	cmp	r3, r2
    f098:	bcc	effc <el_line@plt+0xcb48>
    f09c:	ldr	r0, [r4]
    f0a0:	ldr	r1, [r4, #20]
    f0a4:	bl	183fc <el_line@plt+0x15f48>
    f0a8:	b	f008 <el_line@plt+0xcb54>
    f0ac:	ldr	r0, [r0, #16]
    f0b0:	bx	lr
    f0b4:	ldr	r0, [r0, #20]
    f0b8:	bx	lr
    f0bc:	ldr	r0, [r0, #36]	; 0x24
    f0c0:	bx	lr
    f0c4:	ldr	r0, [r0, #32]
    f0c8:	bx	lr
    f0cc:	push	{r3, r4, r5, r6, r7, lr}
    f0d0:	subs	r4, r0, #0
    f0d4:	mov	r6, r1
    f0d8:	beq	f118 <el_line@plt+0xcc64>
    f0dc:	ldr	r3, [r4, #24]
    f0e0:	cmp	r3, #0
    f0e4:	beq	f1e0 <el_line@plt+0xcd2c>
    f0e8:	ldr	r2, [r4, #32]
    f0ec:	sub	r2, r2, #1
    f0f0:	cmp	r2, #1048576	; 0x100000
    f0f4:	bcs	f118 <el_line@plt+0xcc64>
    f0f8:	ldr	r2, [r4, #4]
    f0fc:	cmp	r2, #0
    f100:	beq	f118 <el_line@plt+0xcc64>
    f104:	ldr	r2, [r4, #28]
    f108:	cmp	r2, #0
    f10c:	beq	f210 <el_line@plt+0xcd5c>
    f110:	cmp	r3, #0
    f114:	beq	f204 <el_line@plt+0xcd50>
    f118:	bl	24c0 <el_line@plt+0xc>
    f11c:	subs	r5, r0, #0
    f120:	bne	f1d8 <el_line@plt+0xcd24>
    f124:	ldr	r3, [r4, #16]
    f128:	cmp	r6, r3
    f12c:	moveq	r5, #0
    f130:	beq	f1d8 <el_line@plt+0xcd24>
    f134:	ldr	r5, [r4, #24]
    f138:	cmp	r5, #0
    f13c:	bne	f1fc <el_line@plt+0xcd48>
    f140:	ldr	r3, [r4, #32]
    f144:	cmp	r3, #1
    f148:	bhi	f1fc <el_line@plt+0xcd48>
    f14c:	cmp	r6, #134217728	; 0x8000000
    f150:	bhi	f1f0 <el_line@plt+0xcd3c>
    f154:	ldr	r1, [r4, #12]
    f158:	mov	r0, r4
    f15c:	cmp	r1, r6
    f160:	movls	r1, #0
    f164:	movhi	r1, #1
    f168:	bl	e94c <el_line@plt+0xc498>
    f16c:	ldr	r1, [r4, #20]
    f170:	cmp	r6, r1
    f174:	bcs	f1d4 <el_line@plt+0xcd20>
    f178:	ldr	r2, [r4, #12]
    f17c:	cmp	r6, r2
    f180:	bls	f1f0 <el_line@plt+0xcd3c>
    f184:	cmp	r2, #255	; 0xff
    f188:	ldr	r0, [r4]
    f18c:	addhi	r7, r2, #255	; 0xff
    f190:	rsb	r1, r2, r1
    f194:	bichi	r7, r7, #255	; 0xff
    f198:	movls	r7, #256	; 0x100
    f19c:	cmp	r7, r6
    f1a0:	movcs	r7, r6
    f1a4:	add	r0, r0, r2
    f1a8:	bl	183fc <el_line@plt+0x15f48>
    f1ac:	ldr	r0, [r4]
    f1b0:	mov	r1, r7
    f1b4:	bl	2178 <realloc@plt>
    f1b8:	cmp	r0, #0
    f1bc:	beq	f244 <el_line@plt+0xcd90>
    f1c0:	cmp	r6, r7
    f1c4:	str	r0, [r4]
    f1c8:	str	r0, [r4, #4]
    f1cc:	str	r7, [r4, #20]
    f1d0:	bcc	f1f0 <el_line@plt+0xcd3c>
    f1d4:	str	r6, [r4, #16]
    f1d8:	mov	r0, r5
    f1dc:	pop	{r3, r4, r5, r6, r7, pc}
    f1e0:	ldm	r4, {r1, r2}
    f1e4:	cmp	r1, r2
    f1e8:	bne	f118 <el_line@plt+0xcc64>
    f1ec:	b	f0e8 <el_line@plt+0xcc34>
    f1f0:	mvn	r5, #8
    f1f4:	mov	r0, r5
    f1f8:	pop	{r3, r4, r5, r6, r7, pc}
    f1fc:	mvn	r5, #48	; 0x30
    f200:	b	f1d8 <el_line@plt+0xcd24>
    f204:	ldr	r3, [r4, #36]	; 0x24
    f208:	cmp	r3, #0
    f20c:	bne	f118 <el_line@plt+0xcc64>
    f210:	ldr	r3, [r4, #16]
    f214:	cmp	r3, #134217728	; 0x8000000
    f218:	bhi	f118 <el_line@plt+0xcc64>
    f21c:	ldr	r2, [r4, #20]
    f220:	cmp	r3, r2
    f224:	bcc	f118 <el_line@plt+0xcc64>
    f228:	ldr	r1, [r4, #12]
    f22c:	cmp	r2, r1
    f230:	bcc	f118 <el_line@plt+0xcc64>
    f234:	ldr	r2, [r4, #8]
    f238:	cmp	r1, r2
    f23c:	bcc	f118 <el_line@plt+0xcc64>
    f240:	b	f128 <el_line@plt+0xcc74>
    f244:	mvn	r5, #1
    f248:	b	f1d8 <el_line@plt+0xcd24>
    f24c:	push	{r4, lr}
    f250:	subs	r4, r0, #0
    f254:	beq	f294 <el_line@plt+0xcde0>
    f258:	ldr	r3, [r4, #24]
    f25c:	cmp	r3, #0
    f260:	beq	f2b0 <el_line@plt+0xcdfc>
    f264:	ldr	r2, [r4, #32]
    f268:	sub	r2, r2, #1
    f26c:	cmp	r2, #1048576	; 0x100000
    f270:	bcs	f294 <el_line@plt+0xcde0>
    f274:	ldr	r2, [r4, #4]
    f278:	cmp	r2, #0
    f27c:	beq	f294 <el_line@plt+0xcde0>
    f280:	ldr	r2, [r4, #28]
    f284:	cmp	r2, #0
    f288:	beq	f2dc <el_line@plt+0xce28>
    f28c:	cmp	r3, #0
    f290:	beq	f2d0 <el_line@plt+0xce1c>
    f294:	bl	24c0 <el_line@plt+0xc>
    f298:	cmp	r0, #0
    f29c:	bne	f2c8 <el_line@plt+0xce14>
    f2a0:	ldr	r0, [r4, #12]
    f2a4:	ldr	r3, [r4, #8]
    f2a8:	rsb	r0, r3, r0
    f2ac:	pop	{r4, pc}
    f2b0:	ldm	r4, {r1, r2}
    f2b4:	cmp	r1, r2
    f2b8:	beq	f264 <el_line@plt+0xcdb0>
    f2bc:	bl	24c0 <el_line@plt+0xc>
    f2c0:	cmp	r0, #0
    f2c4:	beq	f2a0 <el_line@plt+0xcdec>
    f2c8:	mov	r0, #0
    f2cc:	pop	{r4, pc}
    f2d0:	ldr	r3, [r4, #36]	; 0x24
    f2d4:	cmp	r3, #0
    f2d8:	bne	f294 <el_line@plt+0xcde0>
    f2dc:	ldr	r3, [r4, #16]
    f2e0:	cmp	r3, #134217728	; 0x8000000
    f2e4:	bhi	f294 <el_line@plt+0xcde0>
    f2e8:	ldr	r2, [r4, #20]
    f2ec:	cmp	r3, r2
    f2f0:	bcc	f294 <el_line@plt+0xcde0>
    f2f4:	ldr	r0, [r4, #12]
    f2f8:	cmp	r2, r0
    f2fc:	bcc	f294 <el_line@plt+0xcde0>
    f300:	ldr	r3, [r4, #8]
    f304:	cmp	r0, r3
    f308:	bcc	f294 <el_line@plt+0xcde0>
    f30c:	b	f2a8 <el_line@plt+0xcdf4>
    f310:	push	{r4, lr}
    f314:	subs	r4, r0, #0
    f318:	beq	f358 <el_line@plt+0xcea4>
    f31c:	ldr	r3, [r4, #24]
    f320:	cmp	r3, #0
    f324:	beq	f384 <el_line@plt+0xced0>
    f328:	ldr	r2, [r4, #32]
    f32c:	sub	r2, r2, #1
    f330:	cmp	r2, #1048576	; 0x100000
    f334:	bcs	f358 <el_line@plt+0xcea4>
    f338:	ldr	r2, [r4, #4]
    f33c:	cmp	r2, #0
    f340:	beq	f358 <el_line@plt+0xcea4>
    f344:	ldr	r2, [r4, #28]
    f348:	cmp	r2, #0
    f34c:	beq	f3b8 <el_line@plt+0xcf04>
    f350:	cmp	r3, #0
    f354:	beq	f3ac <el_line@plt+0xcef8>
    f358:	bl	24c0 <el_line@plt+0xc>
    f35c:	cmp	r0, #0
    f360:	bne	f37c <el_line@plt+0xcec8>
    f364:	ldr	r3, [r4, #24]
    f368:	cmp	r3, #0
    f36c:	bne	f37c <el_line@plt+0xcec8>
    f370:	ldr	r3, [r4, #32]
    f374:	cmp	r3, #1
    f378:	bls	f394 <el_line@plt+0xcee0>
    f37c:	mov	r0, #0
    f380:	pop	{r4, pc}
    f384:	ldm	r4, {r1, r2}
    f388:	cmp	r1, r2
    f38c:	bne	f358 <el_line@plt+0xcea4>
    f390:	b	f328 <el_line@plt+0xce74>
    f394:	ldr	r0, [r4, #8]
    f398:	ldr	r2, [r4, #16]
    f39c:	ldr	r3, [r4, #12]
    f3a0:	add	r0, r0, r2
    f3a4:	rsb	r0, r3, r0
    f3a8:	pop	{r4, pc}
    f3ac:	ldr	r2, [r4, #36]	; 0x24
    f3b0:	cmp	r2, #0
    f3b4:	bne	f358 <el_line@plt+0xcea4>
    f3b8:	ldr	r2, [r4, #16]
    f3bc:	cmp	r2, #134217728	; 0x8000000
    f3c0:	bhi	f358 <el_line@plt+0xcea4>
    f3c4:	ldr	r1, [r4, #20]
    f3c8:	cmp	r2, r1
    f3cc:	bcc	f358 <el_line@plt+0xcea4>
    f3d0:	ldr	r2, [r4, #12]
    f3d4:	cmp	r1, r2
    f3d8:	bcc	f358 <el_line@plt+0xcea4>
    f3dc:	ldr	r1, [r4, #8]
    f3e0:	cmp	r2, r1
    f3e4:	bcc	f358 <el_line@plt+0xcea4>
    f3e8:	b	f368 <el_line@plt+0xceb4>
    f3ec:	push	{r4, lr}
    f3f0:	subs	r4, r0, #0
    f3f4:	beq	f434 <el_line@plt+0xcf80>
    f3f8:	ldr	r3, [r4, #24]
    f3fc:	cmp	r3, #0
    f400:	beq	f44c <el_line@plt+0xcf98>
    f404:	ldr	r2, [r4, #32]
    f408:	sub	r2, r2, #1
    f40c:	cmp	r2, #1048576	; 0x100000
    f410:	bcs	f434 <el_line@plt+0xcf80>
    f414:	ldr	r0, [r4, #4]
    f418:	cmp	r0, #0
    f41c:	beq	f434 <el_line@plt+0xcf80>
    f420:	ldr	r2, [r4, #28]
    f424:	cmp	r2, #0
    f428:	beq	f478 <el_line@plt+0xcfc4>
    f42c:	cmp	r3, #0
    f430:	beq	f46c <el_line@plt+0xcfb8>
    f434:	bl	24c0 <el_line@plt+0xc>
    f438:	cmp	r0, #0
    f43c:	bne	f464 <el_line@plt+0xcfb0>
    f440:	ldmib	r4, {r0, r3}
    f444:	add	r0, r0, r3
    f448:	pop	{r4, pc}
    f44c:	ldm	r4, {r1, r2}
    f450:	cmp	r1, r2
    f454:	beq	f404 <el_line@plt+0xcf50>
    f458:	bl	24c0 <el_line@plt+0xc>
    f45c:	cmp	r0, #0
    f460:	beq	f440 <el_line@plt+0xcf8c>
    f464:	mov	r0, #0
    f468:	pop	{r4, pc}
    f46c:	ldr	r3, [r4, #36]	; 0x24
    f470:	cmp	r3, #0
    f474:	bne	f434 <el_line@plt+0xcf80>
    f478:	ldr	r3, [r4, #16]
    f47c:	cmp	r3, #134217728	; 0x8000000
    f480:	bhi	f434 <el_line@plt+0xcf80>
    f484:	ldr	r2, [r4, #20]
    f488:	cmp	r3, r2
    f48c:	bcc	f434 <el_line@plt+0xcf80>
    f490:	ldr	r1, [r4, #12]
    f494:	cmp	r2, r1
    f498:	bcc	f434 <el_line@plt+0xcf80>
    f49c:	ldr	r3, [r4, #8]
    f4a0:	cmp	r1, r3
    f4a4:	bcc	f434 <el_line@plt+0xcf80>
    f4a8:	b	f444 <el_line@plt+0xcf90>
    f4ac:	push	{r4, lr}
    f4b0:	subs	r4, r0, #0
    f4b4:	beq	f4f4 <el_line@plt+0xd040>
    f4b8:	ldr	r3, [r4, #24]
    f4bc:	cmp	r3, #0
    f4c0:	beq	f528 <el_line@plt+0xd074>
    f4c4:	ldr	r2, [r4, #32]
    f4c8:	sub	r2, r2, #1
    f4cc:	cmp	r2, #1048576	; 0x100000
    f4d0:	bcs	f4f4 <el_line@plt+0xd040>
    f4d4:	ldr	r2, [r4, #4]
    f4d8:	cmp	r2, #0
    f4dc:	beq	f4f4 <el_line@plt+0xd040>
    f4e0:	ldr	r2, [r4, #28]
    f4e4:	cmp	r2, #0
    f4e8:	beq	f554 <el_line@plt+0xd0a0>
    f4ec:	cmp	r3, #0
    f4f0:	beq	f548 <el_line@plt+0xd094>
    f4f4:	bl	24c0 <el_line@plt+0xc>
    f4f8:	cmp	r0, #0
    f4fc:	bne	f540 <el_line@plt+0xd08c>
    f500:	ldr	r3, [r4, #24]
    f504:	cmp	r3, #0
    f508:	bne	f540 <el_line@plt+0xd08c>
    f50c:	ldr	r3, [r4, #32]
    f510:	cmp	r3, #1
    f514:	bhi	f540 <el_line@plt+0xd08c>
    f518:	ldr	r0, [r4]
    f51c:	ldr	r3, [r4, #8]
    f520:	add	r0, r0, r3
    f524:	pop	{r4, pc}
    f528:	ldm	r4, {r1, r2}
    f52c:	cmp	r1, r2
    f530:	beq	f4c4 <el_line@plt+0xd010>
    f534:	bl	24c0 <el_line@plt+0xc>
    f538:	cmp	r0, #0
    f53c:	beq	f500 <el_line@plt+0xd04c>
    f540:	mov	r0, #0
    f544:	pop	{r4, pc}
    f548:	ldr	r2, [r4, #36]	; 0x24
    f54c:	cmp	r2, #0
    f550:	bne	f4f4 <el_line@plt+0xd040>
    f554:	ldr	r2, [r4, #16]
    f558:	cmp	r2, #134217728	; 0x8000000
    f55c:	bhi	f4f4 <el_line@plt+0xd040>
    f560:	ldr	r1, [r4, #20]
    f564:	cmp	r2, r1
    f568:	bcc	f4f4 <el_line@plt+0xd040>
    f56c:	ldr	r2, [r4, #12]
    f570:	cmp	r1, r2
    f574:	bcc	f4f4 <el_line@plt+0xd040>
    f578:	ldr	r1, [r4, #8]
    f57c:	cmp	r2, r1
    f580:	bcc	f4f4 <el_line@plt+0xd040>
    f584:	b	f504 <el_line@plt+0xd050>
    f588:	push	{r3, r4, r5, lr}
    f58c:	subs	r4, r0, #0
    f590:	mov	r5, r1
    f594:	beq	f5d4 <el_line@plt+0xd120>
    f598:	ldr	r3, [r4, #24]
    f59c:	cmp	r3, #0
    f5a0:	beq	f624 <el_line@plt+0xd170>
    f5a4:	ldr	r2, [r4, #32]
    f5a8:	sub	r2, r2, #1
    f5ac:	cmp	r2, #1048576	; 0x100000
    f5b0:	bcs	f5d4 <el_line@plt+0xd120>
    f5b4:	ldr	r2, [r4, #4]
    f5b8:	cmp	r2, #0
    f5bc:	beq	f5d4 <el_line@plt+0xd120>
    f5c0:	ldr	r2, [r4, #28]
    f5c4:	cmp	r2, #0
    f5c8:	beq	f648 <el_line@plt+0xd194>
    f5cc:	cmp	r3, #0
    f5d0:	beq	f63c <el_line@plt+0xd188>
    f5d4:	bl	24c0 <el_line@plt+0xc>
    f5d8:	cmp	r0, #0
    f5dc:	popne	{r3, r4, r5, pc}
    f5e0:	ldr	r3, [r4, #24]
    f5e4:	cmp	r3, #0
    f5e8:	bne	f634 <el_line@plt+0xd180>
    f5ec:	ldr	r3, [r4, #32]
    f5f0:	cmp	r3, #1
    f5f4:	bhi	f634 <el_line@plt+0xd180>
    f5f8:	ldr	r3, [r4, #16]
    f5fc:	cmp	r5, r3
    f600:	bhi	f67c <el_line@plt+0xd1c8>
    f604:	rsb	r5, r5, r3
    f608:	ldr	r2, [r4, #12]
    f60c:	ldr	r3, [r4, #8]
    f610:	rsb	r2, r3, r2
    f614:	cmp	r5, r2
    f618:	movcs	r0, #0
    f61c:	mvncc	r0, #8
    f620:	pop	{r3, r4, r5, pc}
    f624:	ldm	r4, {r1, r2}
    f628:	cmp	r1, r2
    f62c:	bne	f5d4 <el_line@plt+0xd120>
    f630:	b	f5a4 <el_line@plt+0xd0f0>
    f634:	mvn	r0, #48	; 0x30
    f638:	pop	{r3, r4, r5, pc}
    f63c:	ldr	r2, [r4, #36]	; 0x24
    f640:	cmp	r2, #0
    f644:	bne	f5d4 <el_line@plt+0xd120>
    f648:	ldr	r2, [r4, #16]
    f64c:	cmp	r2, #134217728	; 0x8000000
    f650:	bhi	f5d4 <el_line@plt+0xd120>
    f654:	ldr	r1, [r4, #20]
    f658:	cmp	r2, r1
    f65c:	bcc	f5d4 <el_line@plt+0xd120>
    f660:	ldr	r2, [r4, #12]
    f664:	cmp	r1, r2
    f668:	bcc	f5d4 <el_line@plt+0xd120>
    f66c:	ldr	r1, [r4, #8]
    f670:	cmp	r2, r1
    f674:	bcc	f5d4 <el_line@plt+0xd120>
    f678:	b	f5e4 <el_line@plt+0xd130>
    f67c:	mvn	r0, #8
    f680:	pop	{r3, r4, r5, pc}
    f684:	push	{r3, r4, r5, r6, r7, lr}
    f688:	mov	r4, r0
    f68c:	mov	r5, r1
    f690:	bl	f588 <el_line@plt+0xd0d4>
    f694:	subs	r7, r0, #0
    f698:	beq	f6a4 <el_line@plt+0xd1f0>
    f69c:	mov	r0, r7
    f6a0:	pop	{r3, r4, r5, r6, r7, pc}
    f6a4:	ldr	r1, [r4, #12]
    f6a8:	mov	r0, r4
    f6ac:	ldr	r3, [r4, #16]
    f6b0:	add	r1, r5, r1
    f6b4:	cmp	r1, r3
    f6b8:	movls	r1, #0
    f6bc:	movhi	r1, #1
    f6c0:	bl	e94c <el_line@plt+0xc498>
    f6c4:	ldr	r6, [r4, #12]
    f6c8:	ldr	r3, [r4, #20]
    f6cc:	add	r6, r5, r6
    f6d0:	cmp	r6, r3
    f6d4:	bls	f69c <el_line@plt+0xd1e8>
    f6d8:	add	r3, r6, #255	; 0xff
    f6dc:	ldr	r2, [r4, #16]
    f6e0:	bic	r3, r3, #255	; 0xff
    f6e4:	ldr	r0, [r4]
    f6e8:	cmp	r3, r2
    f6ec:	movls	r6, r3
    f6f0:	mov	r1, r6
    f6f4:	bl	2178 <realloc@plt>
    f6f8:	subs	r3, r0, #0
    f6fc:	beq	f720 <el_line@plt+0xd26c>
    f700:	str	r6, [r4, #20]
    f704:	mov	r0, r4
    f708:	str	r3, [r4]
    f70c:	mov	r1, r5
    f710:	str	r3, [r4, #4]
    f714:	bl	f588 <el_line@plt+0xd0d4>
    f718:	and	r0, r0, r0, asr #31
    f71c:	pop	{r3, r4, r5, r6, r7, pc}
    f720:	mvn	r0, #1
    f724:	pop	{r3, r4, r5, r6, r7, pc}
    f728:	push	{r4, r5, r6, lr}
    f72c:	subs	r5, r2, #0
    f730:	mov	r4, r0
    f734:	mov	r6, r1
    f738:	movne	r3, #0
    f73c:	strne	r3, [r5]
    f740:	bl	f684 <el_line@plt+0xd1d0>
    f744:	cmp	r0, #0
    f748:	popne	{r4, r5, r6, pc}
    f74c:	ldr	r3, [r4, #12]
    f750:	cmp	r5, #0
    f754:	ldr	r2, [r4]
    f758:	add	r6, r6, r3
    f75c:	moveq	r0, r5
    f760:	str	r6, [r4, #12]
    f764:	add	r3, r2, r3
    f768:	strne	r3, [r5]
    f76c:	pop	{r4, r5, r6, pc}
    f770:	push	{r3, r4, r5, lr}
    f774:	subs	r4, r0, #0
    f778:	mov	r5, r1
    f77c:	beq	f7bc <el_line@plt+0xd308>
    f780:	ldr	r3, [r4, #24]
    f784:	cmp	r3, #0
    f788:	beq	f7d8 <el_line@plt+0xd324>
    f78c:	ldr	r2, [r4, #32]
    f790:	sub	r2, r2, #1
    f794:	cmp	r2, #1048576	; 0x100000
    f798:	bcs	f7bc <el_line@plt+0xd308>
    f79c:	ldr	r2, [r4, #4]
    f7a0:	cmp	r2, #0
    f7a4:	beq	f7bc <el_line@plt+0xd308>
    f7a8:	ldr	r2, [r4, #28]
    f7ac:	cmp	r2, #0
    f7b0:	beq	f8cc <el_line@plt+0xd418>
    f7b4:	cmp	r3, #0
    f7b8:	beq	f8c0 <el_line@plt+0xd40c>
    f7bc:	bl	24c0 <el_line@plt+0xc>
    f7c0:	cmp	r0, #0
    f7c4:	bne	f7f0 <el_line@plt+0xd33c>
    f7c8:	cmp	r5, #0
    f7cc:	bne	f7f4 <el_line@plt+0xd340>
    f7d0:	mov	r0, #0
    f7d4:	pop	{r3, r4, r5, pc}
    f7d8:	ldm	r4, {r1, r2}
    f7dc:	cmp	r1, r2
    f7e0:	beq	f78c <el_line@plt+0xd2d8>
    f7e4:	bl	24c0 <el_line@plt+0xc>
    f7e8:	cmp	r0, #0
    f7ec:	beq	f7c8 <el_line@plt+0xd314>
    f7f0:	pop	{r3, r4, r5, pc}
    f7f4:	cmp	r4, #0
    f7f8:	beq	f874 <el_line@plt+0xd3c0>
    f7fc:	ldr	r3, [r4, #24]
    f800:	cmp	r3, #0
    f804:	beq	f8b0 <el_line@plt+0xd3fc>
    f808:	ldr	r2, [r4, #32]
    f80c:	sub	r2, r2, #1
    f810:	cmp	r2, #1048576	; 0x100000
    f814:	bcs	f874 <el_line@plt+0xd3c0>
    f818:	ldr	r2, [r4, #4]
    f81c:	cmp	r2, #0
    f820:	beq	f874 <el_line@plt+0xd3c0>
    f824:	ldr	r2, [r4, #28]
    f828:	cmp	r2, #0
    f82c:	beq	f844 <el_line@plt+0xd390>
    f830:	cmp	r3, #0
    f834:	bne	f874 <el_line@plt+0xd3c0>
    f838:	ldr	r3, [r4, #36]	; 0x24
    f83c:	cmp	r3, #0
    f840:	bne	f874 <el_line@plt+0xd3c0>
    f844:	ldr	r3, [r4, #16]
    f848:	cmp	r3, #134217728	; 0x8000000
    f84c:	bhi	f874 <el_line@plt+0xd3c0>
    f850:	ldr	r2, [r4, #20]
    f854:	cmp	r3, r2
    f858:	bcc	f874 <el_line@plt+0xd3c0>
    f85c:	ldr	r3, [r4, #12]
    f860:	cmp	r2, r3
    f864:	bcc	f874 <el_line@plt+0xd3c0>
    f868:	ldr	r2, [r4, #8]
    f86c:	cmp	r3, r2
    f870:	bcs	f8a8 <el_line@plt+0xd3f4>
    f874:	bl	24c0 <el_line@plt+0xc>
    f878:	cmp	r0, #0
    f87c:	movne	r3, #0
    f880:	beq	f8a0 <el_line@plt+0xd3ec>
    f884:	cmp	r5, r3
    f888:	ldrls	r3, [r4, #8]
    f88c:	movls	r0, #0
    f890:	mvnhi	r0, #2
    f894:	addls	r5, r3, r5
    f898:	strls	r5, [r4, #8]
    f89c:	pop	{r3, r4, r5, pc}
    f8a0:	ldr	r3, [r4, #12]
    f8a4:	ldr	r2, [r4, #8]
    f8a8:	rsb	r3, r2, r3
    f8ac:	b	f884 <el_line@plt+0xd3d0>
    f8b0:	ldm	r4, {r1, r2}
    f8b4:	cmp	r1, r2
    f8b8:	bne	f874 <el_line@plt+0xd3c0>
    f8bc:	b	f808 <el_line@plt+0xd354>
    f8c0:	ldr	r2, [r4, #36]	; 0x24
    f8c4:	cmp	r2, #0
    f8c8:	bne	f7bc <el_line@plt+0xd308>
    f8cc:	ldr	r2, [r4, #16]
    f8d0:	cmp	r2, #134217728	; 0x8000000
    f8d4:	bhi	f7bc <el_line@plt+0xd308>
    f8d8:	ldr	r1, [r4, #20]
    f8dc:	cmp	r2, r1
    f8e0:	bcc	f7bc <el_line@plt+0xd308>
    f8e4:	ldr	r2, [r4, #12]
    f8e8:	cmp	r1, r2
    f8ec:	bcc	f7bc <el_line@plt+0xd308>
    f8f0:	ldr	r1, [r4, #8]
    f8f4:	cmp	r2, r1
    f8f8:	bcc	f7bc <el_line@plt+0xd308>
    f8fc:	cmp	r5, #0
    f900:	beq	f7d0 <el_line@plt+0xd31c>
    f904:	b	f800 <el_line@plt+0xd34c>
    f908:	push	{r3, r4, r5, lr}
    f90c:	subs	r4, r0, #0
    f910:	mov	r5, r1
    f914:	beq	f954 <el_line@plt+0xd4a0>
    f918:	ldr	r3, [r4, #24]
    f91c:	cmp	r3, #0
    f920:	beq	f970 <el_line@plt+0xd4bc>
    f924:	ldr	r2, [r4, #32]
    f928:	sub	r2, r2, #1
    f92c:	cmp	r2, #1048576	; 0x100000
    f930:	bcs	f954 <el_line@plt+0xd4a0>
    f934:	ldr	r2, [r4, #4]
    f938:	cmp	r2, #0
    f93c:	beq	f954 <el_line@plt+0xd4a0>
    f940:	ldr	r2, [r4, #28]
    f944:	cmp	r2, #0
    f948:	beq	fa64 <el_line@plt+0xd5b0>
    f94c:	cmp	r3, #0
    f950:	beq	fa58 <el_line@plt+0xd5a4>
    f954:	bl	24c0 <el_line@plt+0xc>
    f958:	cmp	r0, #0
    f95c:	bne	f988 <el_line@plt+0xd4d4>
    f960:	cmp	r5, #0
    f964:	bne	f98c <el_line@plt+0xd4d8>
    f968:	mov	r0, #0
    f96c:	pop	{r3, r4, r5, pc}
    f970:	ldm	r4, {r1, r2}
    f974:	cmp	r1, r2
    f978:	beq	f924 <el_line@plt+0xd470>
    f97c:	bl	24c0 <el_line@plt+0xc>
    f980:	cmp	r0, #0
    f984:	beq	f960 <el_line@plt+0xd4ac>
    f988:	pop	{r3, r4, r5, pc}
    f98c:	cmp	r4, #0
    f990:	beq	fa0c <el_line@plt+0xd558>
    f994:	ldr	r3, [r4, #24]
    f998:	cmp	r3, #0
    f99c:	beq	fa48 <el_line@plt+0xd594>
    f9a0:	ldr	r2, [r4, #32]
    f9a4:	sub	r2, r2, #1
    f9a8:	cmp	r2, #1048576	; 0x100000
    f9ac:	bcs	fa0c <el_line@plt+0xd558>
    f9b0:	ldr	r2, [r4, #4]
    f9b4:	cmp	r2, #0
    f9b8:	beq	fa0c <el_line@plt+0xd558>
    f9bc:	ldr	r2, [r4, #28]
    f9c0:	cmp	r2, #0
    f9c4:	beq	f9dc <el_line@plt+0xd528>
    f9c8:	cmp	r3, #0
    f9cc:	bne	fa0c <el_line@plt+0xd558>
    f9d0:	ldr	r3, [r4, #36]	; 0x24
    f9d4:	cmp	r3, #0
    f9d8:	bne	fa0c <el_line@plt+0xd558>
    f9dc:	ldr	r3, [r4, #16]
    f9e0:	cmp	r3, #134217728	; 0x8000000
    f9e4:	bhi	fa0c <el_line@plt+0xd558>
    f9e8:	ldr	r2, [r4, #20]
    f9ec:	cmp	r3, r2
    f9f0:	bcc	fa0c <el_line@plt+0xd558>
    f9f4:	ldr	r3, [r4, #12]
    f9f8:	cmp	r2, r3
    f9fc:	bcc	fa0c <el_line@plt+0xd558>
    fa00:	ldr	r2, [r4, #8]
    fa04:	cmp	r3, r2
    fa08:	bcs	fa40 <el_line@plt+0xd58c>
    fa0c:	bl	24c0 <el_line@plt+0xc>
    fa10:	cmp	r0, #0
    fa14:	movne	r3, #0
    fa18:	beq	fa38 <el_line@plt+0xd584>
    fa1c:	cmp	r5, r3
    fa20:	ldrls	r3, [r4, #12]
    fa24:	movls	r0, #0
    fa28:	mvnhi	r0, #2
    fa2c:	rsbls	r5, r5, r3
    fa30:	strls	r5, [r4, #12]
    fa34:	pop	{r3, r4, r5, pc}
    fa38:	ldr	r3, [r4, #12]
    fa3c:	ldr	r2, [r4, #8]
    fa40:	rsb	r3, r2, r3
    fa44:	b	fa1c <el_line@plt+0xd568>
    fa48:	ldm	r4, {r1, r2}
    fa4c:	cmp	r1, r2
    fa50:	bne	fa0c <el_line@plt+0xd558>
    fa54:	b	f9a0 <el_line@plt+0xd4ec>
    fa58:	ldr	r2, [r4, #36]	; 0x24
    fa5c:	cmp	r2, #0
    fa60:	bne	f954 <el_line@plt+0xd4a0>
    fa64:	ldr	r2, [r4, #16]
    fa68:	cmp	r2, #134217728	; 0x8000000
    fa6c:	bhi	f954 <el_line@plt+0xd4a0>
    fa70:	ldr	r1, [r4, #20]
    fa74:	cmp	r2, r1
    fa78:	bcc	f954 <el_line@plt+0xd4a0>
    fa7c:	ldr	r2, [r4, #12]
    fa80:	cmp	r1, r2
    fa84:	bcc	f954 <el_line@plt+0xd4a0>
    fa88:	ldr	r1, [r4, #8]
    fa8c:	cmp	r2, r1
    fa90:	bcc	f954 <el_line@plt+0xd4a0>
    fa94:	cmp	r5, #0
    fa98:	beq	f968 <el_line@plt+0xd4b4>
    fa9c:	b	f998 <el_line@plt+0xd4e4>
    faa0:	push	{r3, r4, r5, r6, r7, lr}
    faa4:	mov	r4, r2
    faa8:	mov	r6, r0
    faac:	mov	r5, r1
    fab0:	bl	f3ec <el_line@plt+0xcf38>
    fab4:	mov	r1, r4
    fab8:	mov	r7, r0
    fabc:	mov	r0, r6
    fac0:	bl	f770 <el_line@plt+0xd2bc>
    fac4:	cmp	r0, #0
    fac8:	poplt	{r3, r4, r5, r6, r7, pc}
    facc:	cmp	r4, #0
    fad0:	cmpne	r5, #0
    fad4:	moveq	r0, #0
    fad8:	movne	r0, #1
    fadc:	popeq	{r3, r4, r5, r6, r7, pc}
    fae0:	mov	r0, r5
    fae4:	mov	r1, r7
    fae8:	mov	r2, r4
    faec:	bl	22d4 <memcpy@plt>
    faf0:	mov	r0, #0
    faf4:	pop	{r3, r4, r5, r6, r7, pc}
    faf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fafc:	sub	sp, sp, #20
    fb00:	mov	r4, r0
    fb04:	mov	r9, r1
    fb08:	bl	f3ec <el_line@plt+0xcf38>
    fb0c:	mov	r1, #8
    fb10:	mov	r8, r0
    fb14:	mov	r0, r4
    fb18:	bl	f770 <el_line@plt+0xd2bc>
    fb1c:	cmp	r0, #0
    fb20:	blt	fbe4 <el_line@plt+0xd730>
    fb24:	cmp	r9, #0
    fb28:	beq	fbec <el_line@plt+0xd738>
    fb2c:	ldrb	r4, [r8, #1]
    fb30:	mov	r5, #0
    fb34:	ldrb	r6, [r8]
    fb38:	mov	r2, #0
    fb3c:	orr	r0, r2, r2
    fb40:	ldrb	sl, [r8, #6]
    fb44:	lsl	r1, r4, #16
    fb48:	ldrb	r4, [r8, #7]
    fb4c:	lsl	r3, r6, #24
    fb50:	ldrb	r6, [r8, #2]
    fb54:	orr	r1, r1, r3
    fb58:	ldrb	fp, [r8, #3]
    fb5c:	strd	r4, [sp]
    fb60:	lsl	r5, r6, #8
    fb64:	ldrd	r6, [sp]
    fb68:	orr	r6, r6, r0
    fb6c:	orr	r7, r7, r1
    fb70:	strd	r6, [sp]
    fb74:	ldrd	r6, [sp]
    fb78:	ldrb	r0, [r8, #4]
    fb7c:	orr	r7, r7, r5
    fb80:	orr	r6, r6, r2
    fb84:	strd	r6, [sp]
    fb88:	ldrd	r4, [sp]
    fb8c:	lsr	r7, r0, #8
    fb90:	lsl	r6, r0, #24
    fb94:	ldrb	r0, [r8, #5]
    fb98:	orr	r5, r5, fp
    fb9c:	orr	r4, r4, r2
    fba0:	mov	fp, #0
    fba4:	strd	r4, [sp, #8]
    fba8:	strd	sl, [sp]
    fbac:	lsr	r5, r0, #16
    fbb0:	ldrd	sl, [sp, #8]
    fbb4:	lsl	r4, r0, #16
    fbb8:	ldr	r3, [sp]
    fbbc:	mov	r0, r2
    fbc0:	orr	r6, r6, sl
    fbc4:	orr	r7, r7, fp
    fbc8:	orr	r6, r6, r4
    fbcc:	orr	r7, r7, r5
    fbd0:	lsr	fp, r3, #24
    fbd4:	lsl	sl, r3, #8
    fbd8:	orr	sl, sl, r6
    fbdc:	orr	fp, fp, r7
    fbe0:	strd	sl, [r9]
    fbe4:	add	sp, sp, #20
    fbe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fbec:	mov	r0, r9
    fbf0:	b	fbe4 <el_line@plt+0xd730>
    fbf4:	push	{r4, r5, r6, lr}
    fbf8:	mov	r6, r0
    fbfc:	mov	r5, r1
    fc00:	bl	f3ec <el_line@plt+0xcf38>
    fc04:	mov	r1, #4
    fc08:	mov	r4, r0
    fc0c:	mov	r0, r6
    fc10:	bl	f770 <el_line@plt+0xd2bc>
    fc14:	cmp	r0, #0
    fc18:	poplt	{r4, r5, r6, pc}
    fc1c:	cmp	r5, #0
    fc20:	beq	fc50 <el_line@plt+0xd79c>
    fc24:	ldrb	r3, [r4, #1]
    fc28:	mov	r0, #0
    fc2c:	ldrb	ip, [r4]
    fc30:	ldrb	r1, [r4, #3]
    fc34:	ldrb	r2, [r4, #2]
    fc38:	lsl	r3, r3, #16
    fc3c:	orr	r3, r3, ip, lsl #24
    fc40:	orr	r3, r3, r1
    fc44:	orr	r3, r3, r2, lsl #8
    fc48:	str	r3, [r5]
    fc4c:	pop	{r4, r5, r6, pc}
    fc50:	mov	r0, r5
    fc54:	pop	{r4, r5, r6, pc}
    fc58:	push	{r4, r5, r6, lr}
    fc5c:	mov	r6, r0
    fc60:	mov	r4, r1
    fc64:	bl	f3ec <el_line@plt+0xcf38>
    fc68:	mov	r1, #2
    fc6c:	mov	r5, r0
    fc70:	mov	r0, r6
    fc74:	bl	f770 <el_line@plt+0xd2bc>
    fc78:	cmp	r0, #0
    fc7c:	poplt	{r4, r5, r6, pc}
    fc80:	cmp	r4, #0
    fc84:	ldrbne	r2, [r5]
    fc88:	movne	r0, #0
    fc8c:	ldrbne	r3, [r5, #1]
    fc90:	moveq	r0, r4
    fc94:	orrne	r3, r3, r2, lsl #8
    fc98:	strhne	r3, [r4]
    fc9c:	pop	{r4, r5, r6, pc}
    fca0:	push	{r4, r5, r6, lr}
    fca4:	mov	r5, r0
    fca8:	mov	r4, r1
    fcac:	bl	f3ec <el_line@plt+0xcf38>
    fcb0:	mov	r1, #1
    fcb4:	mov	r6, r0
    fcb8:	mov	r0, r5
    fcbc:	bl	f770 <el_line@plt+0xd2bc>
    fcc0:	cmp	r0, #0
    fcc4:	poplt	{r4, r5, r6, pc}
    fcc8:	cmp	r4, #0
    fccc:	ldrbne	r3, [r6]
    fcd0:	movne	r0, #0
    fcd4:	moveq	r0, r4
    fcd8:	strbne	r3, [r4]
    fcdc:	pop	{r4, r5, r6, pc}
    fce0:	push	{r4, r5, r6, r7, r8, lr}
    fce4:	mov	r6, r1
    fce8:	mov	r5, r2
    fcec:	mov	r8, r0
    fcf0:	bl	f3ec <el_line@plt+0xcf38>
    fcf4:	cmp	r6, #0
    fcf8:	movne	r3, #0
    fcfc:	strne	r3, [r6]
    fd00:	cmp	r5, #0
    fd04:	mov	r4, r0
    fd08:	mov	r0, r8
    fd0c:	movne	r3, #0
    fd10:	strne	r3, [r5]
    fd14:	bl	f24c <el_line@plt+0xcd98>
    fd18:	cmp	r0, #3
    fd1c:	bls	fd80 <el_line@plt+0xd8cc>
    fd20:	ldrb	r7, [r4, #1]
    fd24:	ldrb	r1, [r4]
    fd28:	ldrb	r2, [r4, #3]
    fd2c:	lsl	r7, r7, #16
    fd30:	ldrb	r3, [r4, #2]
    fd34:	orr	r7, r7, r1, lsl #24
    fd38:	orr	r7, r7, r2
    fd3c:	orr	r7, r7, r3, lsl #8
    fd40:	cmn	r7, #-134217725	; 0xf8000003
    fd44:	bcs	fd78 <el_line@plt+0xd8c4>
    fd48:	mov	r0, r8
    fd4c:	bl	f24c <el_line@plt+0xcd98>
    fd50:	sub	r0, r0, #4
    fd54:	cmp	r7, r0
    fd58:	bhi	fd80 <el_line@plt+0xd8cc>
    fd5c:	cmp	r6, #0
    fd60:	mov	r0, #0
    fd64:	addne	r4, r4, #4
    fd68:	strne	r4, [r6]
    fd6c:	cmp	r5, #0
    fd70:	strne	r7, [r5]
    fd74:	pop	{r4, r5, r6, r7, r8, pc}
    fd78:	mvn	r0, #5
    fd7c:	pop	{r4, r5, r6, r7, r8, pc}
    fd80:	mvn	r0, #2
    fd84:	pop	{r4, r5, r6, r7, r8, pc}
    fd88:	ldr	r3, [pc, #160]	; fe30 <el_line@plt+0xd97c>
    fd8c:	push	{r4, r5, r6, r7, lr}
    fd90:	subs	r5, r1, #0
    fd94:	ldr	r1, [pc, #152]	; fe34 <el_line@plt+0xd980>
    fd98:	add	r3, pc, r3
    fd9c:	sub	sp, sp, #20
    fda0:	mov	r4, r2
    fda4:	mov	r7, r0
    fda8:	ldr	r6, [r3, r1]
    fdac:	add	r1, sp, #8
    fdb0:	ldr	r3, [r6]
    fdb4:	str	r3, [sp, #12]
    fdb8:	movne	r3, #0
    fdbc:	strne	r3, [r5]
    fdc0:	cmp	r2, #0
    fdc4:	movne	r3, #0
    fdc8:	strne	r3, [r2]
    fdcc:	add	r2, sp, #4
    fdd0:	bl	fce0 <el_line@plt+0xd82c>
    fdd4:	cmp	r0, #0
    fdd8:	blt	fe14 <el_line@plt+0xd960>
    fddc:	cmp	r5, #0
    fde0:	mov	r0, r7
    fde4:	ldrne	r3, [sp, #8]
    fde8:	strne	r3, [r5]
    fdec:	cmp	r4, #0
    fdf0:	ldrne	r3, [sp, #4]
    fdf4:	ldreq	r1, [sp, #4]
    fdf8:	movne	r1, r3
    fdfc:	strne	r3, [r4]
    fe00:	add	r1, r1, #4
    fe04:	bl	f770 <el_line@plt+0xd2bc>
    fe08:	adds	r0, r0, #0
    fe0c:	movne	r0, #1
    fe10:	bl	1953c <el_line@plt+0x17088>
    fe14:	ldr	r2, [sp, #12]
    fe18:	ldr	r3, [r6]
    fe1c:	cmp	r2, r3
    fe20:	bne	fe2c <el_line@plt+0xd978>
    fe24:	add	sp, sp, #20
    fe28:	pop	{r4, r5, r6, r7, pc}
    fe2c:	bl	21e4 <__stack_chk_fail@plt>
    fe30:	andeq	lr, r1, ip, asr #31
    fe34:	andeq	r0, r0, ip, lsr #4
    fe38:	ldr	r3, [pc, #208]	; ff10 <el_line@plt+0xda5c>
    fe3c:	push	{r4, r5, r6, r7, lr}
    fe40:	subs	r5, r1, #0
    fe44:	ldr	r1, [pc, #200]	; ff14 <el_line@plt+0xda60>
    fe48:	add	r3, pc, r3
    fe4c:	sub	sp, sp, #20
    fe50:	mov	r4, r2
    fe54:	ldr	r6, [r3, r1]
    fe58:	add	r1, sp, #4
    fe5c:	ldr	r3, [r6]
    fe60:	str	r3, [sp, #12]
    fe64:	movne	r3, #0
    fe68:	strne	r3, [r5]
    fe6c:	cmp	r2, #0
    fe70:	movne	r3, #0
    fe74:	strne	r3, [r2]
    fe78:	add	r2, sp, #8
    fe7c:	bl	fd88 <el_line@plt+0xd8d4>
    fe80:	cmp	r0, #0
    fe84:	blt	fed0 <el_line@plt+0xda1c>
    fe88:	cmp	r5, #0
    fe8c:	beq	febc <el_line@plt+0xda08>
    fe90:	ldr	r7, [sp, #8]
    fe94:	add	r0, r7, #1
    fe98:	bl	2304 <malloc@plt>
    fe9c:	cmp	r0, #0
    fea0:	mov	r3, r0
    fea4:	str	r0, [r5]
    fea8:	beq	ff04 <el_line@plt+0xda50>
    feac:	cmp	r7, #0
    feb0:	bne	fee8 <el_line@plt+0xda34>
    feb4:	mov	r2, #0
    feb8:	strb	r2, [r3, r7]
    febc:	cmp	r4, #0
    fec0:	beq	fefc <el_line@plt+0xda48>
    fec4:	ldr	r3, [sp, #8]
    fec8:	mov	r0, #0
    fecc:	str	r3, [r4]
    fed0:	ldr	r2, [sp, #12]
    fed4:	ldr	r3, [r6]
    fed8:	cmp	r2, r3
    fedc:	bne	ff0c <el_line@plt+0xda58>
    fee0:	add	sp, sp, #20
    fee4:	pop	{r4, r5, r6, r7, pc}
    fee8:	ldr	r1, [sp, #4]
    feec:	mov	r2, r7
    fef0:	bl	22d4 <memcpy@plt>
    fef4:	ldr	r3, [r5]
    fef8:	b	feb4 <el_line@plt+0xda00>
    fefc:	mov	r0, r4
    ff00:	b	fed0 <el_line@plt+0xda1c>
    ff04:	mvn	r0, #1
    ff08:	b	fed0 <el_line@plt+0xda1c>
    ff0c:	bl	21e4 <__stack_chk_fail@plt>
    ff10:	andeq	lr, r1, ip, lsl pc
    ff14:	andeq	r0, r0, ip, lsr #4
    ff18:	ldr	r3, [pc, #308]	; 10054 <el_line@plt+0xdba0>
    ff1c:	push	{r4, r5, r6, r7, r8, r9, lr}
    ff20:	subs	r6, r1, #0
    ff24:	ldr	r1, [pc, #300]	; 10058 <el_line@plt+0xdba4>
    ff28:	add	r3, pc, r3
    ff2c:	sub	sp, sp, #20
    ff30:	mov	r4, r2
    ff34:	mov	r7, r0
    ff38:	ldr	r5, [r3, r1]
    ff3c:	add	r1, sp, #8
    ff40:	ldr	r3, [r5]
    ff44:	str	r3, [sp, #12]
    ff48:	movne	r3, #0
    ff4c:	strne	r3, [r6]
    ff50:	cmp	r2, #0
    ff54:	movne	r3, #0
    ff58:	strne	r3, [r2]
    ff5c:	add	r2, sp, #4
    ff60:	bl	fce0 <el_line@plt+0xd82c>
    ff64:	subs	r1, r0, #0
    ff68:	movne	r0, r1
    ff6c:	bne	10004 <el_line@plt+0xdb50>
    ff70:	ldr	r8, [sp, #4]
    ff74:	cmp	r8, #0
    ff78:	beq	ffa4 <el_line@plt+0xdaf0>
    ff7c:	ldr	r9, [sp, #8]
    ff80:	mov	r2, r8
    ff84:	mov	r0, r9
    ff88:	bl	23b8 <memchr@plt>
    ff8c:	cmp	r0, #0
    ff90:	beq	ffa4 <el_line@plt+0xdaf0>
    ff94:	sub	r8, r8, #1
    ff98:	add	r9, r9, r8
    ff9c:	cmp	r0, r9
    ffa0:	bcc	10038 <el_line@plt+0xdb84>
    ffa4:	mov	r1, #0
    ffa8:	mov	r0, r7
    ffac:	mov	r2, r1
    ffb0:	bl	fd88 <el_line@plt+0xd8d4>
    ffb4:	cmp	r0, #0
    ffb8:	bne	10040 <el_line@plt+0xdb8c>
    ffbc:	cmp	r6, #0
    ffc0:	beq	fff0 <el_line@plt+0xdb3c>
    ffc4:	ldr	r7, [sp, #4]
    ffc8:	add	r0, r7, #1
    ffcc:	bl	2304 <malloc@plt>
    ffd0:	cmp	r0, #0
    ffd4:	mov	r3, r0
    ffd8:	str	r0, [r6]
    ffdc:	beq	10048 <el_line@plt+0xdb94>
    ffe0:	cmp	r7, #0
    ffe4:	bne	1001c <el_line@plt+0xdb68>
    ffe8:	mov	r2, #0
    ffec:	strb	r2, [r3, r7]
    fff0:	cmp	r4, #0
    fff4:	beq	10030 <el_line@plt+0xdb7c>
    fff8:	ldr	r3, [sp, #4]
    fffc:	mov	r0, #0
   10000:	str	r3, [r4]
   10004:	ldr	r2, [sp, #12]
   10008:	ldr	r3, [r5]
   1000c:	cmp	r2, r3
   10010:	bne	10050 <el_line@plt+0xdb9c>
   10014:	add	sp, sp, #20
   10018:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1001c:	ldr	r1, [sp, #8]
   10020:	mov	r2, r7
   10024:	bl	22d4 <memcpy@plt>
   10028:	ldr	r3, [r6]
   1002c:	b	ffe8 <el_line@plt+0xdb34>
   10030:	mov	r0, r4
   10034:	b	10004 <el_line@plt+0xdb50>
   10038:	mvn	r0, #3
   1003c:	b	10004 <el_line@plt+0xdb50>
   10040:	mvn	r0, #0
   10044:	b	10004 <el_line@plt+0xdb50>
   10048:	mvn	r0, #1
   1004c:	b	10004 <el_line@plt+0xdb50>
   10050:	bl	21e4 <__stack_chk_fail@plt>
   10054:	andeq	lr, r1, ip, lsr lr
   10058:	andeq	r0, r0, ip, lsr #4
   1005c:	ldr	r3, [pc, #144]	; 100f4 <el_line@plt+0xdc40>
   10060:	ldr	ip, [pc, #144]	; 100f8 <el_line@plt+0xdc44>
   10064:	add	r3, pc, r3
   10068:	push	{r4, r5, r6, lr}
   1006c:	mov	r5, r1
   10070:	ldr	r4, [r3, ip]
   10074:	sub	sp, sp, #16
   10078:	mov	r1, #0
   1007c:	mov	r6, r0
   10080:	mov	r2, r1
   10084:	ldr	r3, [r4]
   10088:	str	r3, [sp, #12]
   1008c:	bl	fce0 <el_line@plt+0xd82c>
   10090:	cmp	r0, #0
   10094:	beq	100b0 <el_line@plt+0xdbfc>
   10098:	ldr	r2, [sp, #12]
   1009c:	ldr	r3, [r4]
   100a0:	cmp	r2, r3
   100a4:	bne	100f0 <el_line@plt+0xdc3c>
   100a8:	add	sp, sp, #16
   100ac:	pop	{r4, r5, r6, pc}
   100b0:	mov	r0, r6
   100b4:	add	r1, sp, #4
   100b8:	bl	fbf4 <el_line@plt+0xd740>
   100bc:	cmp	r0, #0
   100c0:	bne	10098 <el_line@plt+0xdbe4>
   100c4:	mov	r0, r5
   100c8:	ldr	r1, [sp, #4]
   100cc:	add	r2, sp, #8
   100d0:	bl	f728 <el_line@plt+0xd274>
   100d4:	cmp	r0, #0
   100d8:	bne	10098 <el_line@plt+0xdbe4>
   100dc:	mov	r0, r6
   100e0:	ldr	r1, [sp, #8]
   100e4:	ldr	r2, [sp, #4]
   100e8:	bl	faa0 <el_line@plt+0xd5ec>
   100ec:	b	10098 <el_line@plt+0xdbe4>
   100f0:	bl	21e4 <__stack_chk_fail@plt>
   100f4:	andeq	lr, r1, r0, lsl #26
   100f8:	andeq	r0, r0, ip, lsr #4
   100fc:	ldr	r3, [pc, #116]	; 10178 <el_line@plt+0xdcc4>
   10100:	ldr	ip, [pc, #116]	; 1017c <el_line@plt+0xdcc8>
   10104:	add	r3, pc, r3
   10108:	push	{r4, r5, r6, lr}
   1010c:	sub	sp, sp, #8
   10110:	ldr	r5, [r3, ip]
   10114:	mov	r4, r2
   10118:	mov	r6, r1
   1011c:	mov	r2, sp
   10120:	mov	r1, r4
   10124:	ldr	r3, [r5]
   10128:	str	r3, [sp, #4]
   1012c:	bl	f728 <el_line@plt+0xd274>
   10130:	cmp	r0, #0
   10134:	blt	10144 <el_line@plt+0xdc90>
   10138:	cmp	r4, #0
   1013c:	moveq	r0, r4
   10140:	bne	1015c <el_line@plt+0xdca8>
   10144:	ldr	r2, [sp, #4]
   10148:	ldr	r3, [r5]
   1014c:	cmp	r2, r3
   10150:	bne	10174 <el_line@plt+0xdcc0>
   10154:	add	sp, sp, #8
   10158:	pop	{r4, r5, r6, pc}
   1015c:	mov	r1, r6
   10160:	mov	r2, r4
   10164:	ldr	r0, [sp]
   10168:	bl	22d4 <memcpy@plt>
   1016c:	mov	r0, #0
   10170:	b	10144 <el_line@plt+0xdc90>
   10174:	bl	21e4 <__stack_chk_fail@plt>
   10178:	andeq	lr, r1, r0, ror #24
   1017c:	andeq	r0, r0, ip, lsr #4
   10180:	push	{r4, r5, r6, lr}
   10184:	mov	r6, r0
   10188:	mov	r0, r1
   1018c:	mov	r4, r1
   10190:	bl	f3ec <el_line@plt+0xcf38>
   10194:	mov	r5, r0
   10198:	mov	r0, r4
   1019c:	bl	f24c <el_line@plt+0xcd98>
   101a0:	mov	r1, r5
   101a4:	mov	r2, r0
   101a8:	mov	r0, r6
   101ac:	pop	{r4, r5, r6, lr}
   101b0:	b	100fc <el_line@plt+0xdc48>
   101b4:	ldr	ip, [pc, #212]	; 10290 <el_line@plt+0xdddc>
   101b8:	ldr	r3, [pc, #212]	; 10294 <el_line@plt+0xdde0>
   101bc:	add	ip, pc, ip
   101c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   101c4:	sub	sp, sp, #28
   101c8:	ldr	r5, [ip, r3]
   101cc:	mov	r4, r2
   101d0:	mov	r6, r1
   101d4:	str	r4, [sp, #4]
   101d8:	str	r6, [sp]
   101dc:	mov	r8, r0
   101e0:	ldr	ip, [r5]
   101e4:	mov	r0, #0
   101e8:	mov	r1, r0
   101ec:	mov	r2, #1
   101f0:	mvn	r3, #0
   101f4:	str	r4, [sp, #12]
   101f8:	str	ip, [sp, #20]
   101fc:	bl	1fb0 <__vsnprintf_chk@plt>
   10200:	subs	r7, r0, #0
   10204:	blt	10284 <el_line@plt+0xddd0>
   10208:	moveq	r0, r7
   1020c:	bne	10228 <el_line@plt+0xdd74>
   10210:	ldr	r2, [sp, #20]
   10214:	ldr	r3, [r5]
   10218:	cmp	r2, r3
   1021c:	bne	1028c <el_line@plt+0xddd8>
   10220:	add	sp, sp, #28
   10224:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10228:	add	r9, r7, #1
   1022c:	mov	r0, r8
   10230:	add	r2, sp, #16
   10234:	str	r4, [sp, #12]
   10238:	mov	r1, r9
   1023c:	bl	f728 <el_line@plt+0xd274>
   10240:	cmp	r0, #0
   10244:	blt	10210 <el_line@plt+0xdd5c>
   10248:	ldr	ip, [sp, #12]
   1024c:	mov	r1, r9
   10250:	ldr	r0, [sp, #16]
   10254:	mov	r2, #1
   10258:	str	r6, [sp]
   1025c:	mvn	r3, #0
   10260:	str	ip, [sp, #4]
   10264:	bl	1fb0 <__vsnprintf_chk@plt>
   10268:	cmp	r7, r0
   1026c:	mvnne	r0, #0
   10270:	bne	10210 <el_line@plt+0xdd5c>
   10274:	mov	r0, r8
   10278:	mov	r1, #1
   1027c:	bl	f908 <el_line@plt+0xd454>
   10280:	b	10210 <el_line@plt+0xdd5c>
   10284:	mvn	r0, #9
   10288:	b	10210 <el_line@plt+0xdd5c>
   1028c:	bl	21e4 <__stack_chk_fail@plt>
   10290:	andeq	lr, r1, r8, lsr #23
   10294:	andeq	r0, r0, ip, lsr #4
   10298:	ldr	ip, [pc, #84]	; 102f4 <el_line@plt+0xde40>
   1029c:	push	{r1, r2, r3}
   102a0:	add	ip, pc, ip
   102a4:	push	{r4, lr}
   102a8:	sub	sp, sp, #12
   102ac:	ldr	lr, [pc, #68]	; 102f8 <el_line@plt+0xde44>
   102b0:	add	r3, sp, #24
   102b4:	ldr	r1, [sp, #20]
   102b8:	mov	r2, r3
   102bc:	ldr	r4, [ip, lr]
   102c0:	str	r3, [sp]
   102c4:	ldr	r3, [r4]
   102c8:	str	r3, [sp, #4]
   102cc:	bl	101b4 <el_line@plt+0xdd00>
   102d0:	ldr	r2, [sp, #4]
   102d4:	ldr	r3, [r4]
   102d8:	cmp	r2, r3
   102dc:	bne	102f0 <el_line@plt+0xde3c>
   102e0:	add	sp, sp, #12
   102e4:	pop	{r4, lr}
   102e8:	add	sp, sp, #12
   102ec:	bx	lr
   102f0:	bl	21e4 <__stack_chk_fail@plt>
   102f4:	andeq	lr, r1, r4, asr #21
   102f8:	andeq	r0, r0, ip, lsr #4
   102fc:	push	{r4, r5, r6, r7, r8, lr}
   10300:	mov	r5, r3
   10304:	ldr	lr, [pc, #156]	; 103a8 <el_line@plt+0xdef4>
   10308:	sub	sp, sp, #8
   1030c:	ldr	ip, [pc, #152]	; 103ac <el_line@plt+0xdef8>
   10310:	mov	r4, r2
   10314:	add	lr, pc, lr
   10318:	mov	r1, #8
   1031c:	mov	r2, sp
   10320:	ldr	r6, [lr, ip]
   10324:	mov	r3, lr
   10328:	ldr	r3, [r6]
   1032c:	str	r3, [sp, #4]
   10330:	bl	f728 <el_line@plt+0xd274>
   10334:	cmp	r0, #0
   10338:	blt	1038c <el_line@plt+0xded8>
   1033c:	ldr	r3, [sp]
   10340:	lsr	r2, r5, #24
   10344:	lsr	r8, r5, #16
   10348:	lsr	r7, r5, #8
   1034c:	mov	r0, #0
   10350:	lsr	ip, r4, #24
   10354:	strb	r2, [r3]
   10358:	lsr	r1, r4, #16
   1035c:	ldr	r3, [sp]
   10360:	lsr	r2, r4, #8
   10364:	strb	r8, [r3, #1]
   10368:	ldr	r3, [sp]
   1036c:	strb	r7, [r3, #2]
   10370:	ldr	r3, [sp]
   10374:	strb	r5, [r3, #3]
   10378:	ldr	r3, [sp]
   1037c:	strb	r4, [r3, #7]
   10380:	strb	ip, [r3, #4]
   10384:	strb	r1, [r3, #5]
   10388:	strb	r2, [r3, #6]
   1038c:	ldr	r2, [sp, #4]
   10390:	ldr	r3, [r6]
   10394:	cmp	r2, r3
   10398:	bne	103a4 <el_line@plt+0xdef0>
   1039c:	add	sp, sp, #8
   103a0:	pop	{r4, r5, r6, r7, r8, pc}
   103a4:	bl	21e4 <__stack_chk_fail@plt>
   103a8:	andeq	lr, r1, r0, asr sl
   103ac:	andeq	r0, r0, ip, lsr #4
   103b0:	ldr	r3, [pc, #124]	; 10434 <el_line@plt+0xdf80>
   103b4:	ldr	ip, [pc, #124]	; 10438 <el_line@plt+0xdf84>
   103b8:	add	r3, pc, r3
   103bc:	push	{r4, r5, lr}
   103c0:	sub	sp, sp, #12
   103c4:	ldr	r5, [r3, ip]
   103c8:	mov	r4, r1
   103cc:	mov	r2, sp
   103d0:	mov	r1, #4
   103d4:	ldr	r3, [r5]
   103d8:	str	r3, [sp, #4]
   103dc:	bl	f728 <el_line@plt+0xd274>
   103e0:	cmp	r0, #0
   103e4:	blt	10418 <el_line@plt+0xdf64>
   103e8:	ldr	r3, [sp]
   103ec:	lsr	ip, r4, #24
   103f0:	lsr	r1, r4, #16
   103f4:	lsr	r2, r4, #8
   103f8:	mov	r0, #0
   103fc:	strb	ip, [r3]
   10400:	ldr	r3, [sp]
   10404:	strb	r1, [r3, #1]
   10408:	ldr	r3, [sp]
   1040c:	strb	r2, [r3, #2]
   10410:	ldr	r3, [sp]
   10414:	strb	r4, [r3, #3]
   10418:	ldr	r2, [sp, #4]
   1041c:	ldr	r3, [r5]
   10420:	cmp	r2, r3
   10424:	bne	10430 <el_line@plt+0xdf7c>
   10428:	add	sp, sp, #12
   1042c:	pop	{r4, r5, pc}
   10430:	bl	21e4 <__stack_chk_fail@plt>
   10434:	andeq	lr, r1, ip, lsr #19
   10438:	andeq	r0, r0, ip, lsr #4
   1043c:	ldr	r3, [pc, #100]	; 104a8 <el_line@plt+0xdff4>
   10440:	ldr	ip, [pc, #100]	; 104ac <el_line@plt+0xdff8>
   10444:	add	r3, pc, r3
   10448:	push	{r4, r5, lr}
   1044c:	sub	sp, sp, #12
   10450:	ldr	r4, [r3, ip]
   10454:	mov	r5, r1
   10458:	mov	r2, sp
   1045c:	mov	r1, #2
   10460:	ldr	r3, [r4]
   10464:	str	r3, [sp, #4]
   10468:	bl	f728 <el_line@plt+0xd274>
   1046c:	cmp	r0, #0
   10470:	blt	1048c <el_line@plt+0xdfd8>
   10474:	ldr	r3, [sp]
   10478:	lsr	r2, r5, #8
   1047c:	mov	r0, #0
   10480:	strb	r2, [r3]
   10484:	ldr	r3, [sp]
   10488:	strb	r5, [r3, #1]
   1048c:	ldr	r2, [sp, #4]
   10490:	ldr	r3, [r4]
   10494:	cmp	r2, r3
   10498:	bne	104a4 <el_line@plt+0xdff0>
   1049c:	add	sp, sp, #12
   104a0:	pop	{r4, r5, pc}
   104a4:	bl	21e4 <__stack_chk_fail@plt>
   104a8:	andeq	lr, r1, r0, lsr #18
   104ac:	andeq	r0, r0, ip, lsr #4
   104b0:	ldr	r3, [pc, #84]	; 1050c <el_line@plt+0xe058>
   104b4:	ldr	ip, [pc, #84]	; 10510 <el_line@plt+0xe05c>
   104b8:	add	r3, pc, r3
   104bc:	push	{r4, r5, lr}
   104c0:	sub	sp, sp, #12
   104c4:	ldr	r4, [r3, ip]
   104c8:	mov	r5, r1
   104cc:	mov	r2, sp
   104d0:	mov	r1, #1
   104d4:	ldr	r3, [r4]
   104d8:	str	r3, [sp, #4]
   104dc:	bl	f728 <el_line@plt+0xd274>
   104e0:	ldr	r2, [sp, #4]
   104e4:	cmp	r0, #0
   104e8:	ldrge	r3, [sp]
   104ec:	movge	r0, #0
   104f0:	strbge	r5, [r3]
   104f4:	ldr	r3, [r4]
   104f8:	cmp	r2, r3
   104fc:	bne	10508 <el_line@plt+0xe054>
   10500:	add	sp, sp, #12
   10504:	pop	{r4, r5, pc}
   10508:	bl	21e4 <__stack_chk_fail@plt>
   1050c:	andeq	lr, r1, ip, lsr #17
   10510:	andeq	r0, r0, ip, lsr #4
   10514:	ldr	r3, [pc, #180]	; 105d0 <el_line@plt+0xe11c>
   10518:	push	{r4, r5, r6, lr}
   1051c:	mov	r4, r2
   10520:	ldr	r2, [pc, #172]	; 105d4 <el_line@plt+0xe120>
   10524:	add	r3, pc, r3
   10528:	sub	sp, sp, #8
   1052c:	cmn	r4, #-134217725	; 0xf8000003
   10530:	mov	r6, r1
   10534:	ldr	r5, [r3, r2]
   10538:	ldr	r3, [r5]
   1053c:	str	r3, [sp, #4]
   10540:	bcs	105c4 <el_line@plt+0xe110>
   10544:	add	r1, r4, #4
   10548:	mov	r2, sp
   1054c:	bl	f728 <el_line@plt+0xd274>
   10550:	cmp	r0, #0
   10554:	blt	10590 <el_line@plt+0xe0dc>
   10558:	ldr	r3, [sp]
   1055c:	lsr	r0, r4, #24
   10560:	lsr	r1, r4, #16
   10564:	lsr	r2, r4, #8
   10568:	cmp	r4, #0
   1056c:	strb	r0, [r3]
   10570:	ldr	r3, [sp]
   10574:	moveq	r0, r4
   10578:	strb	r1, [r3, #1]
   1057c:	ldr	r3, [sp]
   10580:	strb	r2, [r3, #2]
   10584:	ldr	r3, [sp]
   10588:	strb	r4, [r3, #3]
   1058c:	bne	105a8 <el_line@plt+0xe0f4>
   10590:	ldr	r2, [sp, #4]
   10594:	ldr	r3, [r5]
   10598:	cmp	r2, r3
   1059c:	bne	105cc <el_line@plt+0xe118>
   105a0:	add	sp, sp, #8
   105a4:	pop	{r4, r5, r6, pc}
   105a8:	ldr	r0, [sp]
   105ac:	mov	r1, r6
   105b0:	mov	r2, r4
   105b4:	add	r0, r0, #4
   105b8:	bl	22d4 <memcpy@plt>
   105bc:	mov	r0, #0
   105c0:	b	10590 <el_line@plt+0xe0dc>
   105c4:	mvn	r0, #8
   105c8:	b	10590 <el_line@plt+0xe0dc>
   105cc:	bl	21e4 <__stack_chk_fail@plt>
   105d0:	andeq	lr, r1, r0, asr #16
   105d4:	andeq	r0, r0, ip, lsr #4
   105d8:	push	{r3, r4, r5, lr}
   105dc:	subs	r4, r1, #0
   105e0:	mov	r5, r0
   105e4:	beq	10604 <el_line@plt+0xe150>
   105e8:	mov	r0, r4
   105ec:	bl	2310 <strlen@plt>
   105f0:	mov	r1, r4
   105f4:	mov	r2, r0
   105f8:	mov	r0, r5
   105fc:	pop	{r3, r4, r5, lr}
   10600:	b	10514 <el_line@plt+0xe060>
   10604:	mov	r2, r4
   10608:	mov	r0, r5
   1060c:	mov	r1, r4
   10610:	pop	{r3, r4, r5, lr}
   10614:	b	10514 <el_line@plt+0xe060>
   10618:	push	{r4, r5, r6, lr}
   1061c:	mov	r6, r0
   10620:	mov	r0, r1
   10624:	mov	r4, r1
   10628:	bl	f3ec <el_line@plt+0xcf38>
   1062c:	mov	r5, r0
   10630:	mov	r0, r4
   10634:	bl	f24c <el_line@plt+0xcd98>
   10638:	mov	r1, r5
   1063c:	mov	r2, r0
   10640:	mov	r0, r6
   10644:	pop	{r4, r5, r6, lr}
   10648:	b	10514 <el_line@plt+0xe060>
   1064c:	ldr	r3, [pc, #204]	; 10720 <el_line@plt+0xe26c>
   10650:	cmp	r1, #0
   10654:	cmpne	r0, #0
   10658:	ldr	r2, [pc, #196]	; 10724 <el_line@plt+0xe270>
   1065c:	add	r3, pc, r3
   10660:	movne	ip, #0
   10664:	moveq	ip, #1
   10668:	push	{r4, r5, r6, r7, r8, lr}
   1066c:	sub	sp, sp, #16
   10670:	ldr	r5, [r3, r2]
   10674:	mov	r4, r1
   10678:	mov	r6, r0
   1067c:	ldr	r3, [r5]
   10680:	str	r3, [sp, #12]
   10684:	beq	1070c <el_line@plt+0xe258>
   10688:	str	ip, [r1]
   1068c:	add	r2, sp, #8
   10690:	add	r1, sp, #4
   10694:	bl	fce0 <el_line@plt+0xd82c>
   10698:	cmp	r0, #0
   1069c:	beq	106b8 <el_line@plt+0xe204>
   106a0:	ldr	r2, [sp, #12]
   106a4:	ldr	r3, [r5]
   106a8:	cmp	r2, r3
   106ac:	bne	1071c <el_line@plt+0xe268>
   106b0:	add	sp, sp, #16
   106b4:	pop	{r4, r5, r6, r7, r8, pc}
   106b8:	ldmib	sp, {r0, r1}
   106bc:	bl	ea34 <el_line@plt+0xc580>
   106c0:	subs	r7, r0, #0
   106c4:	beq	10714 <el_line@plt+0xe260>
   106c8:	ldr	r1, [sp, #8]
   106cc:	mov	r0, r6
   106d0:	add	r1, r1, #4
   106d4:	bl	f770 <el_line@plt+0xd2bc>
   106d8:	subs	r8, r0, #0
   106dc:	bne	106fc <el_line@plt+0xe248>
   106e0:	mov	r1, r6
   106e4:	mov	r0, r7
   106e8:	bl	eaa8 <el_line@plt+0xc5f4>
   106ec:	subs	r8, r0, #0
   106f0:	streq	r7, [r4]
   106f4:	moveq	r0, r8
   106f8:	beq	106a0 <el_line@plt+0xe1ec>
   106fc:	mov	r0, r7
   10700:	bl	ec5c <el_line@plt+0xc7a8>
   10704:	mov	r0, r8
   10708:	b	106a0 <el_line@plt+0xe1ec>
   1070c:	mvn	r0, #9
   10710:	b	106a0 <el_line@plt+0xe1ec>
   10714:	mvn	r0, #1
   10718:	b	106a0 <el_line@plt+0xe1ec>
   1071c:	bl	21e4 <__stack_chk_fail@plt>
   10720:	andeq	lr, r1, r8, lsl #14
   10724:	andeq	r0, r0, ip, lsr #4
   10728:	push	{r4, r5, r6, r7, r8, r9, lr}
   1072c:	movw	r3, #65531	; 0xfffb
   10730:	ldr	r6, [pc, #304]	; 10868 <el_line@plt+0xe3b4>
   10734:	movt	r3, #2047	; 0x7ff
   10738:	ldr	ip, [pc, #300]	; 1086c <el_line@plt+0xe3b8>
   1073c:	cmp	r2, r3
   10740:	add	r6, pc, r6
   10744:	sub	sp, sp, #12
   10748:	mov	r4, r2
   1074c:	mov	r5, r1
   10750:	ldr	r7, [r6, ip]
   10754:	mov	r3, r6
   10758:	ldr	r3, [r7]
   1075c:	str	r3, [sp, #4]
   10760:	bhi	1085c <el_line@plt+0xe3a8>
   10764:	cmp	r2, #0
   10768:	beq	1079c <el_line@plt+0xe2e8>
   1076c:	ldrb	r2, [r1]
   10770:	cmp	r2, #0
   10774:	bne	1083c <el_line@plt+0xe388>
   10778:	add	r3, r1, #1
   1077c:	b	10790 <el_line@plt+0xe2dc>
   10780:	ldrb	r2, [r3]
   10784:	add	r3, r3, #1
   10788:	cmp	r2, #0
   1078c:	bne	1083c <el_line@plt+0xe388>
   10790:	subs	r4, r4, #1
   10794:	mov	r5, r3
   10798:	bne	10780 <el_line@plt+0xe2cc>
   1079c:	mov	r1, #4
   107a0:	mov	r4, #0
   107a4:	mov	r8, #0
   107a8:	mov	r6, r4
   107ac:	mov	r9, r8
   107b0:	mov	r2, sp
   107b4:	bl	f728 <el_line@plt+0xd274>
   107b8:	cmp	r0, #0
   107bc:	blt	10824 <el_line@plt+0xe370>
   107c0:	ldr	r3, [sp]
   107c4:	lsr	r0, r6, #24
   107c8:	lsr	r1, r6, #16
   107cc:	lsr	r2, r6, #8
   107d0:	cmp	r9, #0
   107d4:	strb	r0, [r3]
   107d8:	ldr	r3, [sp]
   107dc:	strb	r1, [r3, #1]
   107e0:	ldr	r3, [sp]
   107e4:	strb	r2, [r3, #2]
   107e8:	movne	r2, #0
   107ec:	ldr	r3, [sp]
   107f0:	strb	r6, [r3, #3]
   107f4:	ldrne	r3, [sp]
   107f8:	strbne	r2, [r3, #4]
   107fc:	cmp	r4, #0
   10800:	moveq	r0, r4
   10804:	beq	10824 <el_line@plt+0xe370>
   10808:	ldr	r0, [sp]
   1080c:	add	r8, r8, #4
   10810:	mov	r1, r5
   10814:	mov	r2, r4
   10818:	add	r0, r0, r8
   1081c:	bl	22d4 <memcpy@plt>
   10820:	mov	r0, #0
   10824:	ldr	r2, [sp, #4]
   10828:	ldr	r3, [r7]
   1082c:	cmp	r2, r3
   10830:	bne	10864 <el_line@plt+0xe3b0>
   10834:	add	sp, sp, #12
   10838:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1083c:	tst	r2, #128	; 0x80
   10840:	addeq	r1, r4, #4
   10844:	beq	107a4 <el_line@plt+0xe2f0>
   10848:	mov	r8, #1
   1084c:	add	r1, r4, #5
   10850:	add	r6, r4, r8
   10854:	mov	r9, r8
   10858:	b	107b0 <el_line@plt+0xe2fc>
   1085c:	mvn	r0, #8
   10860:	b	10824 <el_line@plt+0xe370>
   10864:	bl	21e4 <__stack_chk_fail@plt>
   10868:	andeq	lr, r1, r4, lsr #12
   1086c:	andeq	r0, r0, ip, lsr #4
   10870:	ldr	r3, [pc, #256]	; 10978 <el_line@plt+0xe4c4>
   10874:	ldr	ip, [pc, #256]	; 1097c <el_line@plt+0xe4c8>
   10878:	add	r3, pc, r3
   1087c:	push	{r4, r5, r6, r7, r8, lr}
   10880:	sub	sp, sp, #16
   10884:	ldr	r5, [r3, ip]
   10888:	mov	r8, r1
   1088c:	mov	r7, r2
   10890:	add	r1, sp, #4
   10894:	add	r2, sp, #8
   10898:	mov	r6, r0
   1089c:	ldr	r3, [r5]
   108a0:	str	r3, [sp, #12]
   108a4:	bl	fce0 <el_line@plt+0xd82c>
   108a8:	cmp	r0, #0
   108ac:	blt	1093c <el_line@plt+0xe488>
   108b0:	ldr	r4, [sp, #8]
   108b4:	cmp	r4, #0
   108b8:	beq	1090c <el_line@plt+0xe458>
   108bc:	ldr	r3, [sp, #4]
   108c0:	ldrb	r2, [r3]
   108c4:	tst	r2, #128	; 0x80
   108c8:	bne	1096c <el_line@plt+0xe4b8>
   108cc:	movw	r1, #2049	; 0x801
   108d0:	cmp	r4, r1
   108d4:	bhi	10964 <el_line@plt+0xe4b0>
   108d8:	bne	10954 <el_line@plt+0xe4a0>
   108dc:	cmp	r2, #0
   108e0:	bne	10964 <el_line@plt+0xe4b0>
   108e4:	mov	ip, r4
   108e8:	add	r3, r3, #1
   108ec:	b	10900 <el_line@plt+0xe44c>
   108f0:	ldrb	lr, [r3]
   108f4:	add	r3, r3, #1
   108f8:	cmp	lr, #0
   108fc:	bne	10910 <el_line@plt+0xe45c>
   10900:	subs	ip, ip, #1
   10904:	str	r3, [sp, #4]
   10908:	bne	108f0 <el_line@plt+0xe43c>
   1090c:	mov	ip, #0
   10910:	cmp	r8, #0
   10914:	mov	r0, r6
   10918:	add	r1, r4, #4
   1091c:	ldrne	r3, [sp, #4]
   10920:	strne	r3, [r8]
   10924:	cmp	r7, #0
   10928:	strne	ip, [r7]
   1092c:	bl	f770 <el_line@plt+0xd2bc>
   10930:	adds	r0, r0, #0
   10934:	movne	r0, #1
   10938:	bl	1953c <el_line@plt+0x17088>
   1093c:	ldr	r2, [sp, #12]
   10940:	ldr	r3, [r5]
   10944:	cmp	r2, r3
   10948:	bne	10974 <el_line@plt+0xe4c0>
   1094c:	add	sp, sp, #16
   10950:	pop	{r4, r5, r6, r7, r8, pc}
   10954:	cmp	r2, #0
   10958:	mov	ip, r4
   1095c:	beq	108e8 <el_line@plt+0xe434>
   10960:	b	10910 <el_line@plt+0xe45c>
   10964:	mvn	r0, #6
   10968:	b	1093c <el_line@plt+0xe488>
   1096c:	mvn	r0, #4
   10970:	b	1093c <el_line@plt+0xe488>
   10974:	bl	21e4 <__stack_chk_fail@plt>
   10978:	andeq	lr, r1, ip, ror #9
   1097c:	andeq	r0, r0, ip, lsr #4
   10980:	ldr	ip, [pc, #60]	; 109c4 <el_line@plt+0xe510>
   10984:	push	{r0, r1, r2, r3}
   10988:	add	ip, pc, ip
   1098c:	push	{lr}		; (str lr, [sp, #-4]!)
   10990:	sub	sp, sp, #12
   10994:	ldr	lr, [pc, #44]	; 109c8 <el_line@plt+0xe514>
   10998:	add	r3, sp, #20
   1099c:	mov	r0, #1
   109a0:	ldr	r1, [sp, #16]
   109a4:	mov	r2, r3
   109a8:	ldr	ip, [ip, lr]
   109ac:	str	r3, [sp]
   109b0:	ldr	r3, [ip]
   109b4:	str	r3, [sp, #4]
   109b8:	bl	10f08 <el_line@plt+0xea54>
   109bc:	mov	r0, #255	; 0xff
   109c0:	bl	14664 <el_line@plt+0x121b0>
   109c4:	ldrdeq	lr, [r1], -ip
   109c8:	andeq	r0, r0, ip, lsr #4
   109cc:	push	{r4, r5, r6, lr}
   109d0:	subs	r5, r0, #0
   109d4:	beq	10a30 <el_line@plt+0xe57c>
   109d8:	ldr	r0, [pc, #88]	; 10a38 <el_line@plt+0xe584>
   109dc:	mov	r4, #0
   109e0:	ldr	r6, [pc, #84]	; 10a3c <el_line@plt+0xe588>
   109e4:	add	r0, pc, r0
   109e8:	add	r6, pc, r6
   109ec:	b	10a04 <el_line@plt+0xe550>
   109f0:	bl	192bc <el_line@plt+0x16e08>
   109f4:	mov	r4, r0
   109f8:	ldr	r0, [r6, r0, lsl #3]
   109fc:	cmp	r0, #0
   10a00:	beq	10a30 <el_line@plt+0xe57c>
   10a04:	mov	r1, r5
   10a08:	bl	1ee4 <strcasecmp@plt>
   10a0c:	mov	r1, #1
   10a10:	cmp	r0, #0
   10a14:	mov	r0, r4
   10a18:	bne	109f0 <el_line@plt+0xe53c>
   10a1c:	ldr	r3, [pc, #28]	; 10a40 <el_line@plt+0xe58c>
   10a20:	add	r3, pc, r3
   10a24:	add	r4, r3, r4, lsl #3
   10a28:	ldr	r0, [r4, #4]
   10a2c:	pop	{r4, r5, r6, pc}
   10a30:	mvn	r0, #0
   10a34:	pop	{r4, r5, r6, pc}
   10a38:	andeq	ip, r0, r0, asr #5
   10a3c:	andeq	lr, r1, r0, lsr #1
   10a40:	andeq	lr, r1, r8, rrx
   10a44:	subs	r1, r0, #0
   10a48:	beq	10a78 <el_line@plt+0xe5c4>
   10a4c:	ldr	r3, [pc, #48]	; 10a84 <el_line@plt+0xe5d0>
   10a50:	add	r3, pc, r3
   10a54:	b	10a64 <el_line@plt+0xe5b0>
   10a58:	ldr	r2, [r3, #4]
   10a5c:	cmp	r2, r1
   10a60:	bxeq	lr
   10a64:	ldr	r0, [r3, #8]
   10a68:	add	r3, r3, #8
   10a6c:	cmp	r0, #0
   10a70:	bne	10a58 <el_line@plt+0xe5a4>
   10a74:	bx	lr
   10a78:	ldr	r0, [pc, #8]	; 10a88 <el_line@plt+0xe5d4>
   10a7c:	add	r0, pc, r0
   10a80:	bx	lr
   10a84:	andeq	lr, r1, r8, lsr r0
   10a88:	andeq	ip, r0, r8, lsr #4
   10a8c:	push	{r4, r5, r6, lr}
   10a90:	subs	r5, r0, #0
   10a94:	beq	10af4 <el_line@plt+0xe640>
   10a98:	ldr	r0, [pc, #92]	; 10afc <el_line@plt+0xe648>
   10a9c:	mov	r4, #0
   10aa0:	ldr	r6, [pc, #88]	; 10b00 <el_line@plt+0xe64c>
   10aa4:	add	r0, pc, r0
   10aa8:	add	r6, pc, r6
   10aac:	b	10ac8 <el_line@plt+0xe614>
   10ab0:	bl	192bc <el_line@plt+0x16e08>
   10ab4:	add	r3, r6, #104	; 0x68
   10ab8:	mov	r4, r0
   10abc:	ldr	r0, [r3, r0, lsl #3]
   10ac0:	cmp	r0, #0
   10ac4:	beq	10af4 <el_line@plt+0xe640>
   10ac8:	mov	r1, r5
   10acc:	bl	1ee4 <strcasecmp@plt>
   10ad0:	mov	r1, #1
   10ad4:	cmp	r0, #0
   10ad8:	mov	r0, r4
   10adc:	bne	10ab0 <el_line@plt+0xe5fc>
   10ae0:	ldr	r3, [pc, #28]	; 10b04 <el_line@plt+0xe650>
   10ae4:	add	r3, pc, r3
   10ae8:	add	r4, r3, r4, lsl #3
   10aec:	ldr	r0, [r4, #108]	; 0x6c
   10af0:	pop	{r4, r5, r6, pc}
   10af4:	mvn	r0, #0
   10af8:	pop	{r4, r5, r6, pc}
   10afc:	andeq	ip, r0, r8, lsl #4
   10b00:	andeq	sp, r1, r0, ror #31
   10b04:	andeq	sp, r1, r4, lsr #31
   10b08:	subs	r1, r0, #0
   10b0c:	beq	10b40 <el_line@plt+0xe68c>
   10b10:	ldr	r3, [pc, #52]	; 10b4c <el_line@plt+0xe698>
   10b14:	add	r3, pc, r3
   10b18:	add	r3, r3, #104	; 0x68
   10b1c:	b	10b2c <el_line@plt+0xe678>
   10b20:	ldr	r2, [r3, #4]
   10b24:	cmp	r2, r1
   10b28:	bxeq	lr
   10b2c:	ldr	r0, [r3, #8]
   10b30:	add	r3, r3, #8
   10b34:	cmp	r0, #0
   10b38:	bne	10b20 <el_line@plt+0xe66c>
   10b3c:	bx	lr
   10b40:	ldr	r0, [pc, #8]	; 10b50 <el_line@plt+0xe69c>
   10b44:	add	r0, pc, r0
   10b48:	bx	lr
   10b4c:	andeq	sp, r1, r4, ror pc
   10b50:	andeq	ip, r0, r8, ror #2
   10b54:	push	{r0, r1, r2, r3}
   10b58:	mov	r0, #1
   10b5c:	push	{r3, lr}
   10b60:	bl	237c <_exit@plt>
   10b64:	ldr	ip, [pc, #536]	; 10d84 <el_line@plt+0xe8d0>
   10b68:	cmp	r1, #7
   10b6c:	push	{r4, r5, r6, lr}
   10b70:	add	ip, pc, ip
   10b74:	ldr	r4, [pc, #524]	; 10d88 <el_line@plt+0xe8d4>
   10b78:	str	r0, [ip]
   10b7c:	add	r4, pc, r4
   10b80:	ldr	r5, [sp, #16]
   10b84:	bhi	10d6c <el_line@plt+0xe8b8>
   10b88:	ldr	r6, [pc, #508]	; 10d8c <el_line@plt+0xe8d8>
   10b8c:	cmp	r5, #0
   10b90:	add	r6, pc, r6
   10b94:	mov	r5, r6
   10b98:	str	r1, [r6]
   10b9c:	bne	10bf0 <el_line@plt+0xe73c>
   10ba0:	ldr	r1, [pc, #488]	; 10d90 <el_line@plt+0xe8dc>
   10ba4:	cmp	r3, #0
   10ba8:	add	r1, pc, r1
   10bac:	str	r3, [r1, #4]
   10bb0:	popne	{r4, r5, r6, pc}
   10bb4:	cmp	r2, #11
   10bb8:	addls	pc, pc, r2, lsl #2
   10bbc:	b	10d44 <el_line@plt+0xe890>
   10bc0:	b	10d1c <el_line@plt+0xe868>
   10bc4:	b	10d04 <el_line@plt+0xe850>
   10bc8:	b	10cec <el_line@plt+0xe838>
   10bcc:	b	10cd4 <el_line@plt+0xe820>
   10bd0:	b	10cbc <el_line@plt+0xe808>
   10bd4:	b	10ca4 <el_line@plt+0xe7f0>
   10bd8:	b	10c8c <el_line@plt+0xe7d8>
   10bdc:	b	10c74 <el_line@plt+0xe7c0>
   10be0:	b	10c5c <el_line@plt+0xe7a8>
   10be4:	b	10c44 <el_line@plt+0xe790>
   10be8:	b	10c2c <el_line@plt+0xe778>
   10bec:	b	10c00 <el_line@plt+0xe74c>
   10bf0:	mov	r1, #0
   10bf4:	str	r1, [ip, #4]
   10bf8:	str	r1, [ip, #8]
   10bfc:	b	10ba0 <el_line@plt+0xe6ec>
   10c00:	ldr	r1, [pc, #396]	; 10d94 <el_line@plt+0xe8e0>
   10c04:	mov	r3, #184	; 0xb8
   10c08:	mov	r2, r3
   10c0c:	add	r1, pc, r1
   10c10:	str	r3, [r1, #8]
   10c14:	cmp	r0, #0
   10c18:	beq	10d34 <el_line@plt+0xe880>
   10c1c:	mov	r1, #1
   10c20:	bl	243c <openlog@plt>
   10c24:	pop	{r4, r5, r6, lr}
   10c28:	b	207c <closelog@plt>
   10c2c:	ldr	r1, [pc, #356]	; 10d98 <el_line@plt+0xe8e4>
   10c30:	mov	r3, #176	; 0xb0
   10c34:	mov	r2, r3
   10c38:	add	r1, pc, r1
   10c3c:	str	r3, [r1, #8]
   10c40:	b	10c14 <el_line@plt+0xe760>
   10c44:	ldr	r1, [pc, #336]	; 10d9c <el_line@plt+0xe8e8>
   10c48:	mov	r3, #168	; 0xa8
   10c4c:	mov	r2, r3
   10c50:	add	r1, pc, r1
   10c54:	str	r3, [r1, #8]
   10c58:	b	10c14 <el_line@plt+0xe760>
   10c5c:	ldr	r1, [pc, #316]	; 10da0 <el_line@plt+0xe8ec>
   10c60:	mov	r3, #160	; 0xa0
   10c64:	mov	r2, r3
   10c68:	add	r1, pc, r1
   10c6c:	str	r3, [r1, #8]
   10c70:	b	10c14 <el_line@plt+0xe760>
   10c74:	ldr	r1, [pc, #296]	; 10da4 <el_line@plt+0xe8f0>
   10c78:	mov	r3, #152	; 0x98
   10c7c:	mov	r2, r3
   10c80:	add	r1, pc, r1
   10c84:	str	r3, [r1, #8]
   10c88:	b	10c14 <el_line@plt+0xe760>
   10c8c:	ldr	r1, [pc, #276]	; 10da8 <el_line@plt+0xe8f4>
   10c90:	mov	r3, #144	; 0x90
   10c94:	mov	r2, r3
   10c98:	add	r1, pc, r1
   10c9c:	str	r3, [r1, #8]
   10ca0:	b	10c14 <el_line@plt+0xe760>
   10ca4:	ldr	r1, [pc, #256]	; 10dac <el_line@plt+0xe8f8>
   10ca8:	mov	r3, #136	; 0x88
   10cac:	mov	r2, r3
   10cb0:	add	r1, pc, r1
   10cb4:	str	r3, [r1, #8]
   10cb8:	b	10c14 <el_line@plt+0xe760>
   10cbc:	ldr	r1, [pc, #236]	; 10db0 <el_line@plt+0xe8fc>
   10cc0:	mov	r3, #128	; 0x80
   10cc4:	mov	r2, r3
   10cc8:	add	r1, pc, r1
   10ccc:	str	r3, [r1, #8]
   10cd0:	b	10c14 <el_line@plt+0xe760>
   10cd4:	ldr	r1, [pc, #216]	; 10db4 <el_line@plt+0xe900>
   10cd8:	mov	r3, #80	; 0x50
   10cdc:	mov	r2, r3
   10ce0:	add	r1, pc, r1
   10ce4:	str	r3, [r1, #8]
   10ce8:	b	10c14 <el_line@plt+0xe760>
   10cec:	ldr	r1, [pc, #196]	; 10db8 <el_line@plt+0xe904>
   10cf0:	mov	r3, #32
   10cf4:	mov	r2, r3
   10cf8:	add	r1, pc, r1
   10cfc:	str	r3, [r1, #8]
   10d00:	b	10c14 <el_line@plt+0xe760>
   10d04:	ldr	r1, [pc, #176]	; 10dbc <el_line@plt+0xe908>
   10d08:	mov	r3, #8
   10d0c:	mov	r2, r3
   10d10:	add	r1, pc, r1
   10d14:	str	r3, [r1, #8]
   10d18:	b	10c14 <el_line@plt+0xe760>
   10d1c:	ldr	r1, [pc, #156]	; 10dc0 <el_line@plt+0xe90c>
   10d20:	mov	r3, #24
   10d24:	mov	r2, r3
   10d28:	add	r1, pc, r1
   10d2c:	str	r3, [r1, #8]
   10d30:	b	10c14 <el_line@plt+0xe760>
   10d34:	ldr	r3, [pc, #136]	; 10dc4 <el_line@plt+0xe910>
   10d38:	ldr	r3, [r4, r3]
   10d3c:	ldr	r0, [r3]
   10d40:	b	10c1c <el_line@plt+0xe768>
   10d44:	mov	r3, r2
   10d48:	ldr	r2, [pc, #120]	; 10dc8 <el_line@plt+0xe914>
   10d4c:	ldr	r0, [pc, #120]	; 10dcc <el_line@plt+0xe918>
   10d50:	mov	r1, #1
   10d54:	add	r2, pc, r2
   10d58:	ldr	r0, [r4, r0]
   10d5c:	ldr	r0, [r0]
   10d60:	bl	2028 <__fprintf_chk@plt>
   10d64:	mov	r0, #1
   10d68:	bl	1f8c <exit@plt>
   10d6c:	ldr	r2, [pc, #92]	; 10dd0 <el_line@plt+0xe91c>
   10d70:	mov	r3, r1
   10d74:	ldr	r0, [pc, #80]	; 10dcc <el_line@plt+0xe918>
   10d78:	mov	r1, #1
   10d7c:	add	r2, pc, r2
   10d80:	b	10d58 <el_line@plt+0xe8a4>
   10d84:	andeq	r1, r2, r4, lsl r9
   10d88:	andeq	lr, r1, r8, ror #3
   10d8c:	andeq	lr, r1, r8, ror r4
   10d90:	andeq	lr, r1, r0, ror #8
   10d94:	strdeq	lr, [r1], -ip
   10d98:	ldrdeq	lr, [r1], -r0
   10d9c:			; <UNDEFINED> instruction: 0x0001e3b8
   10da0:	andeq	lr, r1, r0, lsr #7
   10da4:	andeq	lr, r1, r8, lsl #7
   10da8:	andeq	lr, r1, r0, ror r3
   10dac:	andeq	lr, r1, r8, asr r3
   10db0:	andeq	lr, r1, r0, asr #6
   10db4:	andeq	lr, r1, r8, lsr #6
   10db8:	andeq	lr, r1, r0, lsl r3
   10dbc:	strdeq	lr, [r1], -r8
   10dc0:	andeq	lr, r1, r0, ror #5
   10dc4:	andeq	r0, r0, r4, lsr r2
   10dc8:	andeq	fp, r0, ip, lsl #31
   10dcc:	andeq	r0, r0, r0, asr r2
   10dd0:	andeq	fp, r0, r8, lsr pc
   10dd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10dd8:	sub	sp, sp, #12
   10ddc:	mov	ip, #1
   10de0:	str	ip, [sp]
   10de4:	bl	10b64 <el_line@plt+0xe6b0>
   10de8:	add	sp, sp, #12
   10dec:	pop	{pc}		; (ldr pc, [sp], #4)
   10df0:	ldr	r3, [pc, #64]	; 10e38 <el_line@plt+0xe984>
   10df4:	mov	r1, r0
   10df8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dfc:	add	r3, pc, r3
   10e00:	sub	sp, sp, #12
   10e04:	ldr	r0, [r3]
   10e08:	cmp	r0, #0
   10e0c:	beq	10e30 <el_line@plt+0xe97c>
   10e10:	ldr	r2, [pc, #36]	; 10e3c <el_line@plt+0xe988>
   10e14:	mov	r3, #1
   10e18:	str	r3, [sp]
   10e1c:	add	r2, pc, r2
   10e20:	mov	r3, r2
   10e24:	ldr	r2, [r2, #8]
   10e28:	ldr	r3, [r3, #4]
   10e2c:	bl	10b64 <el_line@plt+0xe6b0>
   10e30:	add	sp, sp, #12
   10e34:	pop	{pc}		; (ldr pc, [sp], #4)
   10e38:	andeq	r1, r2, r8, lsl #13
   10e3c:	andeq	lr, r1, ip, ror #3
   10e40:	ldr	r3, [pc, #32]	; 10e68 <el_line@plt+0xe9b4>
   10e44:	add	r3, pc, r3
   10e48:	ldr	r0, [r3, #4]
   10e4c:	cmp	r0, #0
   10e50:	bxeq	lr
   10e54:	ldr	r0, [r3, #12]
   10e58:	subs	r3, r0, #2
   10e5c:	rsbs	r0, r3, #0
   10e60:	adcs	r0, r0, r3
   10e64:	bx	lr
   10e68:	andeq	lr, r1, r4, asr #3
   10e6c:	push	{r4, r5, lr}
   10e70:	mov	r2, #384	; 0x180
   10e74:	sub	sp, sp, #12
   10e78:	movw	r1, #1089	; 0x441
   10e7c:	mov	r4, r0
   10e80:	bl	2184 <open64@plt>
   10e84:	ldr	r2, [pc, #88]	; 10ee4 <el_line@plt+0xea30>
   10e88:	add	r2, pc, r2
   10e8c:	cmn	r0, #1
   10e90:	beq	10ea8 <el_line@plt+0xe9f4>
   10e94:	ldr	r3, [pc, #76]	; 10ee8 <el_line@plt+0xea34>
   10e98:	add	r3, pc, r3
   10e9c:	str	r0, [r3, #12]
   10ea0:	add	sp, sp, #12
   10ea4:	pop	{r4, r5, pc}
   10ea8:	ldr	r3, [pc, #60]	; 10eec <el_line@plt+0xea38>
   10eac:	ldr	r3, [r2, r3]
   10eb0:	ldr	r5, [r3]
   10eb4:	bl	23ac <__errno_location@plt>
   10eb8:	ldr	r0, [r0]
   10ebc:	bl	1fa4 <strerror@plt>
   10ec0:	ldr	r2, [pc, #40]	; 10ef0 <el_line@plt+0xea3c>
   10ec4:	mov	r3, r4
   10ec8:	mov	r1, #1
   10ecc:	add	r2, pc, r2
   10ed0:	str	r0, [sp]
   10ed4:	mov	r0, r5
   10ed8:	bl	2028 <__fprintf_chk@plt>
   10edc:	mov	r0, #1
   10ee0:	bl	1f8c <exit@plt>
   10ee4:	ldrdeq	sp, [r1], -ip
   10ee8:	andeq	lr, r1, r0, ror r1
   10eec:	andeq	r0, r0, r0, asr r2
   10ef0:	andeq	fp, r0, r4, asr #28
   10ef4:	ldr	r3, [pc, #8]	; 10f04 <el_line@plt+0xea50>
   10ef8:	add	r3, pc, r3
   10efc:	stmib	r3, {r0, r1}
   10f00:	bx	lr
   10f04:	andeq	r1, r2, ip, lsl #11
   10f08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f0c:	sub	sp, sp, #2080	; 0x820
   10f10:	ldr	r4, [pc, #724]	; 111ec <el_line@plt+0xed38>
   10f14:	sub	sp, sp, #12
   10f18:	ldr	r3, [pc, #720]	; 111f0 <el_line@plt+0xed3c>
   10f1c:	mov	r6, r0
   10f20:	add	r4, pc, r4
   10f24:	mov	sl, r1
   10f28:	mov	fp, r2
   10f2c:	ldr	r3, [r4, r3]
   10f30:	str	r3, [sp, #24]
   10f34:	ldr	r3, [r3]
   10f38:	str	r3, [sp, #2084]	; 0x824
   10f3c:	bl	23ac <__errno_location@plt>
   10f40:	ldr	r3, [pc, #684]	; 111f4 <el_line@plt+0xed40>
   10f44:	add	r3, pc, r3
   10f48:	ldr	r3, [r3]
   10f4c:	cmp	r3, r6
   10f50:	mov	r7, r0
   10f54:	ldr	r9, [r0]
   10f58:	blt	11034 <el_line@plt+0xeb80>
   10f5c:	sub	r3, r6, #1
   10f60:	cmp	r3, #6
   10f64:	addls	pc, pc, r3, lsl #2
   10f68:	b	1112c <el_line@plt+0xec78>
   10f6c:	b	11088 <el_line@plt+0xebd4>
   10f70:	b	110b0 <el_line@plt+0xebfc>
   10f74:	b	11054 <el_line@plt+0xeba0>
   10f78:	b	11054 <el_line@plt+0xeba0>
   10f7c:	b	11060 <el_line@plt+0xebac>
   10f80:	b	11074 <el_line@plt+0xebc0>
   10f84:	b	10f88 <el_line@plt+0xead4>
   10f88:	ldr	r2, [pc, #616]	; 111f8 <el_line@plt+0xed44>
   10f8c:	mov	r1, #7
   10f90:	str	r1, [sp, #28]
   10f94:	add	r2, pc, r2
   10f98:	ldr	r3, [pc, #604]	; 111fc <el_line@plt+0xed48>
   10f9c:	add	r3, pc, r3
   10fa0:	ldr	r3, [r3, #4]
   10fa4:	cmp	r3, #0
   10fa8:	beq	11180 <el_line@plt+0xeccc>
   10fac:	add	r8, sp, #36	; 0x24
   10fb0:	mov	r1, #1024	; 0x400
   10fb4:	stm	sp, {sl, fp}
   10fb8:	mov	r3, r1
   10fbc:	mov	r0, r8
   10fc0:	mov	r2, #1
   10fc4:	bl	1fb0 <__vsnprintf_chk@plt>
   10fc8:	add	r5, sp, #1056	; 0x420
   10fcc:	add	r5, r5, #4
   10fd0:	ldr	fp, [pc, #552]	; 11200 <el_line@plt+0xed4c>
   10fd4:	mov	r0, r5
   10fd8:	ldr	sl, [pc, #548]	; 11204 <el_line@plt+0xed50>
   10fdc:	mov	r1, r8
   10fe0:	add	fp, pc, fp
   10fe4:	mov	r2, #1024	; 0x400
   10fe8:	add	sl, pc, sl
   10fec:	ldr	r3, [fp, #4]
   10ff0:	cmp	r3, #0
   10ff4:	moveq	r3, #27
   10ff8:	movne	r3, #33	; 0x21
   10ffc:	bl	18060 <el_line@plt+0x15bac>
   11000:	ldr	r3, [sl, #4]
   11004:	cmp	r3, #0
   11008:	beq	110e0 <el_line@plt+0xec2c>
   1100c:	ldr	r2, [sl, #8]
   11010:	mov	ip, #0
   11014:	mov	r0, r6
   11018:	str	ip, [sl, #4]
   1101c:	mov	r1, r5
   11020:	str	r3, [sp, #20]
   11024:	blx	r3
   11028:	ldr	r3, [sp, #20]
   1102c:	str	r3, [sl, #4]
   11030:	str	r9, [r7]
   11034:	ldr	r1, [sp, #24]
   11038:	ldr	r2, [sp, #2084]	; 0x824
   1103c:	ldr	r3, [r1]
   11040:	cmp	r2, r3
   11044:	bne	111e8 <el_line@plt+0xed34>
   11048:	add	sp, sp, #2080	; 0x820
   1104c:	add	sp, sp, #12
   11050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11054:	mov	r2, #6
   11058:	str	r2, [sp, #28]
   1105c:	b	10fac <el_line@plt+0xeaf8>
   11060:	ldr	r2, [pc, #416]	; 11208 <el_line@plt+0xed54>
   11064:	mov	r3, #7
   11068:	str	r3, [sp, #28]
   1106c:	add	r2, pc, r2
   11070:	b	10f98 <el_line@plt+0xeae4>
   11074:	ldr	r2, [pc, #400]	; 1120c <el_line@plt+0xed58>
   11078:	mov	r1, #7
   1107c:	str	r1, [sp, #28]
   11080:	add	r2, pc, r2
   11084:	b	10f98 <el_line@plt+0xeae4>
   11088:	ldr	r3, [pc, #384]	; 11210 <el_line@plt+0xed5c>
   1108c:	mov	r2, #2
   11090:	str	r2, [sp, #28]
   11094:	add	r3, pc, r3
   11098:	ldr	r3, [r3, #4]
   1109c:	cmp	r3, #0
   110a0:	bne	10fac <el_line@plt+0xeaf8>
   110a4:	ldr	r2, [pc, #360]	; 11214 <el_line@plt+0xed60>
   110a8:	add	r2, pc, r2
   110ac:	b	10f98 <el_line@plt+0xeae4>
   110b0:	ldr	r3, [pc, #352]	; 11218 <el_line@plt+0xed64>
   110b4:	add	r3, pc, r3
   110b8:	ldr	r3, [r3, #4]
   110bc:	cmp	r3, #0
   110c0:	movne	r3, #3
   110c4:	strne	r3, [sp, #28]
   110c8:	bne	10fac <el_line@plt+0xeaf8>
   110cc:	ldr	r2, [pc, #328]	; 1121c <el_line@plt+0xed68>
   110d0:	mov	r3, #3
   110d4:	str	r3, [sp, #28]
   110d8:	add	r2, pc, r2
   110dc:	b	10f98 <el_line@plt+0xeae4>
   110e0:	ldr	r3, [fp, #4]
   110e4:	cmp	r3, #0
   110e8:	bne	11140 <el_line@plt+0xec8c>
   110ec:	ldr	r0, [sl]
   110f0:	cmp	r0, #0
   110f4:	beq	111d8 <el_line@plt+0xed24>
   110f8:	ldr	r3, [pc, #288]	; 11220 <el_line@plt+0xed6c>
   110fc:	mov	r1, #1
   11100:	add	r3, pc, r3
   11104:	ldr	r2, [r3, #8]
   11108:	bl	243c <openlog@plt>
   1110c:	ldr	r2, [pc, #272]	; 11224 <el_line@plt+0xed70>
   11110:	ldr	r0, [sp, #28]
   11114:	mov	r3, r5
   11118:	mov	r1, #1
   1111c:	add	r2, pc, r2
   11120:	bl	21d8 <__syslog_chk@plt>
   11124:	bl	207c <closelog@plt>
   11128:	b	11030 <el_line@plt+0xeb7c>
   1112c:	ldr	r2, [pc, #244]	; 11228 <el_line@plt+0xed74>
   11130:	mov	r1, #3
   11134:	str	r1, [sp, #28]
   11138:	add	r2, pc, r2
   1113c:	b	10f98 <el_line@plt+0xeae4>
   11140:	ldr	lr, [pc, #228]	; 1122c <el_line@plt+0xed78>
   11144:	mov	r1, #1024	; 0x400
   11148:	mov	r3, r1
   1114c:	mov	r2, #1
   11150:	add	lr, pc, lr
   11154:	str	r5, [sp, #4]
   11158:	str	lr, [sp]
   1115c:	mov	r0, r8
   11160:	bl	231c <__snprintf_chk@plt>
   11164:	mov	r0, r8
   11168:	bl	2310 <strlen@plt>
   1116c:	mov	r1, r8
   11170:	mov	r2, r0
   11174:	ldr	r0, [fp, #12]
   11178:	bl	234c <write@plt>
   1117c:	b	11030 <el_line@plt+0xeb7c>
   11180:	add	ip, sp, #1056	; 0x420
   11184:	ldr	lr, [pc, #164]	; 11230 <el_line@plt+0xed7c>
   11188:	add	ip, ip, #8
   1118c:	mov	r1, #1024	; 0x400
   11190:	sub	r5, ip, #4
   11194:	add	lr, pc, lr
   11198:	str	r2, [sp, #4]
   1119c:	mov	r3, r1
   111a0:	str	sl, [sp, #8]
   111a4:	mov	r0, r5
   111a8:	str	lr, [sp]
   111ac:	mov	r2, #1
   111b0:	add	r8, sp, #36	; 0x24
   111b4:	bl	231c <__snprintf_chk@plt>
   111b8:	mov	r1, #1024	; 0x400
   111bc:	str	r5, [sp]
   111c0:	mov	r3, r1
   111c4:	str	fp, [sp, #4]
   111c8:	mov	r0, r8
   111cc:	mov	r2, #1
   111d0:	bl	1fb0 <__vsnprintf_chk@plt>
   111d4:	b	10fd0 <el_line@plt+0xeb1c>
   111d8:	ldr	r3, [pc, #84]	; 11234 <el_line@plt+0xed80>
   111dc:	ldr	r3, [r4, r3]
   111e0:	ldr	r0, [r3]
   111e4:	b	110f8 <el_line@plt+0xec44>
   111e8:	bl	21e4 <__stack_chk_fail@plt>
   111ec:	andeq	sp, r1, r4, asr #28
   111f0:	andeq	r0, r0, ip, lsr #4
   111f4:	andeq	lr, r1, r4, asr #1
   111f8:	muleq	r0, ip, sp
   111fc:	andeq	r1, r2, r8, ror #9
   11200:	andeq	lr, r1, r8, lsr #32
   11204:	muleq	r2, ip, r4
   11208:	ldrdeq	fp, [r0], -r4
   1120c:			; <UNDEFINED> instruction: 0x0000bcb8
   11210:	andeq	sp, r1, r4, ror pc
   11214:			; <UNDEFINED> instruction: 0x0000bcb0
   11218:	andeq	sp, r1, r4, asr pc
   1121c:	strdeq	fp, [r0], -r4
   11220:	andeq	sp, r1, r8, lsl #30
   11224:	andeq	fp, r0, ip, asr #24
   11228:	andeq	fp, r0, r0, lsl ip
   1122c:	andeq	fp, r0, r0, lsl ip
   11230:	andeq	sl, r0, ip, asr #11
   11234:	andeq	r0, r0, r4, lsr r2
   11238:	ldr	ip, [pc, #88]	; 11298 <el_line@plt+0xede4>
   1123c:	push	{r0, r1, r2, r3}
   11240:	add	ip, pc, ip
   11244:	push	{r4, lr}
   11248:	sub	sp, sp, #8
   1124c:	ldr	lr, [pc, #72]	; 1129c <el_line@plt+0xede8>
   11250:	add	r3, sp, #20
   11254:	mov	r0, #2
   11258:	ldr	r1, [sp, #16]
   1125c:	mov	r2, r3
   11260:	ldr	r4, [ip, lr]
   11264:	str	r3, [sp]
   11268:	ldr	r3, [r4]
   1126c:	str	r3, [sp, #4]
   11270:	bl	10f08 <el_line@plt+0xea54>
   11274:	ldr	r2, [sp, #4]
   11278:	ldr	r3, [r4]
   1127c:	cmp	r2, r3
   11280:	bne	11294 <el_line@plt+0xede0>
   11284:	add	sp, sp, #8
   11288:	pop	{r4, lr}
   1128c:	add	sp, sp, #16
   11290:	bx	lr
   11294:	bl	21e4 <__stack_chk_fail@plt>
   11298:	andeq	sp, r1, r4, lsr #22
   1129c:	andeq	r0, r0, ip, lsr #4
   112a0:	ldr	ip, [pc, #60]	; 112e4 <el_line@plt+0xee30>
   112a4:	push	{r0, r1, r2, r3}
   112a8:	add	ip, pc, ip
   112ac:	push	{lr}		; (str lr, [sp, #-4]!)
   112b0:	sub	sp, sp, #12
   112b4:	ldr	lr, [pc, #44]	; 112e8 <el_line@plt+0xee34>
   112b8:	add	r3, sp, #20
   112bc:	mov	r0, #3
   112c0:	ldr	r1, [sp, #16]
   112c4:	mov	r2, r3
   112c8:	ldr	ip, [ip, lr]
   112cc:	str	r3, [sp]
   112d0:	ldr	r3, [ip]
   112d4:	str	r3, [sp, #4]
   112d8:	bl	10f08 <el_line@plt+0xea54>
   112dc:	mov	r0, #255	; 0xff
   112e0:	bl	14664 <el_line@plt+0x121b0>
   112e4:			; <UNDEFINED> instruction: 0x0001dabc
   112e8:	andeq	r0, r0, ip, lsr #4
   112ec:	ldr	ip, [pc, #88]	; 1134c <el_line@plt+0xee98>
   112f0:	push	{r0, r1, r2, r3}
   112f4:	add	ip, pc, ip
   112f8:	push	{r4, lr}
   112fc:	sub	sp, sp, #8
   11300:	ldr	lr, [pc, #72]	; 11350 <el_line@plt+0xee9c>
   11304:	add	r3, sp, #20
   11308:	mov	r0, #3
   1130c:	ldr	r1, [sp, #16]
   11310:	mov	r2, r3
   11314:	ldr	r4, [ip, lr]
   11318:	str	r3, [sp]
   1131c:	ldr	r3, [r4]
   11320:	str	r3, [sp, #4]
   11324:	bl	10f08 <el_line@plt+0xea54>
   11328:	ldr	r2, [sp, #4]
   1132c:	ldr	r3, [r4]
   11330:	cmp	r2, r3
   11334:	bne	11348 <el_line@plt+0xee94>
   11338:	add	sp, sp, #8
   1133c:	pop	{r4, lr}
   11340:	add	sp, sp, #16
   11344:	bx	lr
   11348:	bl	21e4 <__stack_chk_fail@plt>
   1134c:	andeq	sp, r1, r0, ror sl
   11350:	andeq	r0, r0, ip, lsr #4
   11354:	ldr	ip, [pc, #88]	; 113b4 <el_line@plt+0xef00>
   11358:	push	{r0, r1, r2, r3}
   1135c:	add	ip, pc, ip
   11360:	push	{r4, lr}
   11364:	sub	sp, sp, #8
   11368:	ldr	lr, [pc, #72]	; 113b8 <el_line@plt+0xef04>
   1136c:	add	r3, sp, #20
   11370:	mov	r0, #4
   11374:	ldr	r1, [sp, #16]
   11378:	mov	r2, r3
   1137c:	ldr	r4, [ip, lr]
   11380:	str	r3, [sp]
   11384:	ldr	r3, [r4]
   11388:	str	r3, [sp, #4]
   1138c:	bl	10f08 <el_line@plt+0xea54>
   11390:	ldr	r2, [sp, #4]
   11394:	ldr	r3, [r4]
   11398:	cmp	r2, r3
   1139c:	bne	113b0 <el_line@plt+0xeefc>
   113a0:	add	sp, sp, #8
   113a4:	pop	{r4, lr}
   113a8:	add	sp, sp, #16
   113ac:	bx	lr
   113b0:	bl	21e4 <__stack_chk_fail@plt>
   113b4:	andeq	sp, r1, r8, lsl #20
   113b8:	andeq	r0, r0, ip, lsr #4
   113bc:	ldr	ip, [pc, #88]	; 1141c <el_line@plt+0xef68>
   113c0:	push	{r0, r1, r2, r3}
   113c4:	add	ip, pc, ip
   113c8:	push	{r4, lr}
   113cc:	sub	sp, sp, #8
   113d0:	ldr	lr, [pc, #72]	; 11420 <el_line@plt+0xef6c>
   113d4:	add	r3, sp, #20
   113d8:	mov	r0, #5
   113dc:	ldr	r1, [sp, #16]
   113e0:	mov	r2, r3
   113e4:	ldr	r4, [ip, lr]
   113e8:	str	r3, [sp]
   113ec:	ldr	r3, [r4]
   113f0:	str	r3, [sp, #4]
   113f4:	bl	10f08 <el_line@plt+0xea54>
   113f8:	ldr	r2, [sp, #4]
   113fc:	ldr	r3, [r4]
   11400:	cmp	r2, r3
   11404:	bne	11418 <el_line@plt+0xef64>
   11408:	add	sp, sp, #8
   1140c:	pop	{r4, lr}
   11410:	add	sp, sp, #16
   11414:	bx	lr
   11418:	bl	21e4 <__stack_chk_fail@plt>
   1141c:	andeq	sp, r1, r0, lsr #19
   11420:	andeq	r0, r0, ip, lsr #4
   11424:	ldr	ip, [pc, #88]	; 11484 <el_line@plt+0xefd0>
   11428:	push	{r0, r1, r2, r3}
   1142c:	add	ip, pc, ip
   11430:	push	{r4, lr}
   11434:	sub	sp, sp, #8
   11438:	ldr	lr, [pc, #72]	; 11488 <el_line@plt+0xefd4>
   1143c:	add	r3, sp, #20
   11440:	mov	r0, #6
   11444:	ldr	r1, [sp, #16]
   11448:	mov	r2, r3
   1144c:	ldr	r4, [ip, lr]
   11450:	str	r3, [sp]
   11454:	ldr	r3, [r4]
   11458:	str	r3, [sp, #4]
   1145c:	bl	10f08 <el_line@plt+0xea54>
   11460:	ldr	r2, [sp, #4]
   11464:	ldr	r3, [r4]
   11468:	cmp	r2, r3
   1146c:	bne	11480 <el_line@plt+0xefcc>
   11470:	add	sp, sp, #8
   11474:	pop	{r4, lr}
   11478:	add	sp, sp, #16
   1147c:	bx	lr
   11480:	bl	21e4 <__stack_chk_fail@plt>
   11484:	andeq	sp, r1, r8, lsr r9
   11488:	andeq	r0, r0, ip, lsr #4
   1148c:	ldr	ip, [pc, #88]	; 114ec <el_line@plt+0xf038>
   11490:	push	{r0, r1, r2, r3}
   11494:	add	ip, pc, ip
   11498:	push	{r4, lr}
   1149c:	sub	sp, sp, #8
   114a0:	ldr	lr, [pc, #72]	; 114f0 <el_line@plt+0xf03c>
   114a4:	add	r3, sp, #20
   114a8:	mov	r0, #7
   114ac:	ldr	r1, [sp, #16]
   114b0:	mov	r2, r3
   114b4:	ldr	r4, [ip, lr]
   114b8:	str	r3, [sp]
   114bc:	ldr	r3, [r4]
   114c0:	str	r3, [sp, #4]
   114c4:	bl	10f08 <el_line@plt+0xea54>
   114c8:	ldr	r2, [sp, #4]
   114cc:	ldr	r3, [r4]
   114d0:	cmp	r2, r3
   114d4:	bne	114e8 <el_line@plt+0xf034>
   114d8:	add	sp, sp, #8
   114dc:	pop	{r4, lr}
   114e0:	add	sp, sp, #16
   114e4:	bx	lr
   114e8:	bl	21e4 <__stack_chk_fail@plt>
   114ec:	ldrdeq	sp, [r1], -r0
   114f0:	andeq	r0, r0, ip, lsr #4
   114f4:	ldr	ip, [pc, #84]	; 11550 <el_line@plt+0xf09c>
   114f8:	push	{r1, r2, r3}
   114fc:	add	ip, pc, ip
   11500:	push	{r4, lr}
   11504:	sub	sp, sp, #12
   11508:	ldr	lr, [pc, #68]	; 11554 <el_line@plt+0xf0a0>
   1150c:	add	r3, sp, #24
   11510:	ldr	r1, [sp, #20]
   11514:	mov	r2, r3
   11518:	ldr	r4, [ip, lr]
   1151c:	str	r3, [sp]
   11520:	ldr	r3, [r4]
   11524:	str	r3, [sp, #4]
   11528:	bl	10f08 <el_line@plt+0xea54>
   1152c:	ldr	r2, [sp, #4]
   11530:	ldr	r3, [r4]
   11534:	cmp	r2, r3
   11538:	bne	1154c <el_line@plt+0xf098>
   1153c:	add	sp, sp, #12
   11540:	pop	{r4, lr}
   11544:	add	sp, sp, #12
   11548:	bx	lr
   1154c:	bl	21e4 <__stack_chk_fail@plt>
   11550:	andeq	sp, r1, r8, ror #16
   11554:	andeq	r0, r0, ip, lsr #4
   11558:	bx	lr
   1155c:	push	{r4, lr}
   11560:	subs	r4, r0, #0
   11564:	beq	11584 <el_line@plt+0xf0d0>
   11568:	bl	2304 <malloc@plt>
   1156c:	cmp	r0, #0
   11570:	popne	{r4, pc}
   11574:	ldr	r0, [pc, #20]	; 11590 <el_line@plt+0xf0dc>
   11578:	mov	r1, r4
   1157c:	add	r0, pc, r0
   11580:	bl	10980 <el_line@plt+0xe4cc>
   11584:	ldr	r0, [pc, #8]	; 11594 <el_line@plt+0xf0e0>
   11588:	add	r0, pc, r0
   1158c:	bl	10980 <el_line@plt+0xe4cc>
   11590:	andeq	fp, r0, r4, lsr #17
   11594:	andeq	fp, r0, r4, lsl #17
   11598:	cmp	r0, #0
   1159c:	cmpne	r1, #0
   115a0:	push	{r3, r4, r5, lr}
   115a4:	mov	r4, r1
   115a8:	mov	r5, r0
   115ac:	beq	115f4 <el_line@plt+0xf140>
   115b0:	mvn	r0, #0
   115b4:	mov	r1, r5
   115b8:	bl	187d4 <el_line@plt+0x16320>
   115bc:	cmp	r4, r0
   115c0:	bhi	115e8 <el_line@plt+0xf134>
   115c4:	mov	r0, r5
   115c8:	mov	r1, r4
   115cc:	bl	2298 <calloc@plt>
   115d0:	cmp	r0, #0
   115d4:	popne	{r3, r4, r5, pc}
   115d8:	ldr	r0, [pc, #32]	; 11600 <el_line@plt+0xf14c>
   115dc:	mul	r1, r5, r4
   115e0:	add	r0, pc, r0
   115e4:	bl	10980 <el_line@plt+0xe4cc>
   115e8:	ldr	r0, [pc, #20]	; 11604 <el_line@plt+0xf150>
   115ec:	add	r0, pc, r0
   115f0:	bl	10980 <el_line@plt+0xe4cc>
   115f4:	ldr	r0, [pc, #12]	; 11608 <el_line@plt+0xf154>
   115f8:	add	r0, pc, r0
   115fc:	bl	10980 <el_line@plt+0xe4cc>
   11600:	andeq	fp, r0, r8, lsr #17
   11604:	andeq	fp, r0, r8, ror r8
   11608:	andeq	fp, r0, r8, asr r8
   1160c:	push	{r3, r4, r5, lr}
   11610:	mov	r5, r1
   11614:	mov	r4, r2
   11618:	bl	176ac <el_line@plt+0x151f8>
   1161c:	cmp	r0, #0
   11620:	popne	{r3, r4, r5, pc}
   11624:	ldr	r0, [pc, #12]	; 11638 <el_line@plt+0xf184>
   11628:	mov	r1, r5
   1162c:	mov	r2, r4
   11630:	add	r0, pc, r0
   11634:	bl	10980 <el_line@plt+0xe4cc>
   11638:	andeq	fp, r0, r8, lsl #17
   1163c:	push	{r4, r5, r6, lr}
   11640:	mov	r6, r0
   11644:	bl	2310 <strlen@plt>
   11648:	add	r4, r0, #1
   1164c:	mov	r0, r4
   11650:	bl	1155c <el_line@plt+0xf0a8>
   11654:	mov	r1, r6
   11658:	mov	r2, r4
   1165c:	mov	r5, r0
   11660:	bl	177d8 <el_line@plt+0x15324>
   11664:	mov	r0, r5
   11668:	pop	{r4, r5, r6, pc}
   1166c:	push	{r1, r2, r3}
   11670:	mov	r1, #1
   11674:	push	{r4, r5, lr}
   11678:	sub	sp, sp, #8
   1167c:	ldr	lr, [pc, #108]	; 116f0 <el_line@plt+0xf23c>
   11680:	add	ip, sp, #24
   11684:	ldr	r4, [pc, #104]	; 116f4 <el_line@plt+0xf240>
   11688:	mov	r5, r0
   1168c:	add	lr, pc, lr
   11690:	mov	r3, ip
   11694:	ldr	r2, [sp, #20]
   11698:	ldr	r4, [lr, r4]
   1169c:	str	ip, [sp]
   116a0:	ldr	ip, [r4]
   116a4:	str	ip, [sp, #4]
   116a8:	bl	2418 <__vasprintf_chk@plt>
   116ac:	cmp	r0, #0
   116b0:	blt	116e0 <el_line@plt+0xf22c>
   116b4:	ldr	r3, [r5]
   116b8:	cmp	r3, #0
   116bc:	beq	116e0 <el_line@plt+0xf22c>
   116c0:	ldr	r2, [sp, #4]
   116c4:	ldr	r3, [r4]
   116c8:	cmp	r2, r3
   116cc:	bne	116ec <el_line@plt+0xf238>
   116d0:	add	sp, sp, #8
   116d4:	pop	{r4, r5, lr}
   116d8:	add	sp, sp, #12
   116dc:	bx	lr
   116e0:	ldr	r0, [pc, #16]	; 116f8 <el_line@plt+0xf244>
   116e4:	add	r0, pc, r0
   116e8:	bl	10980 <el_line@plt+0xe4cc>
   116ec:	bl	21e4 <__stack_chk_fail@plt>
   116f0:	ldrdeq	sp, [r1], -r8
   116f4:	andeq	r0, r0, ip, lsr #4
   116f8:	andeq	fp, r0, r0, lsl r8
   116fc:	ldr	ip, [pc, #304]	; 11834 <el_line@plt+0xf380>
   11700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11704:	mov	r5, r1
   11708:	ldr	r1, [pc, #296]	; 11838 <el_line@plt+0xf384>
   1170c:	add	ip, pc, ip
   11710:	sub	sp, sp, #28
   11714:	mov	r4, r0
   11718:	ldr	r0, [pc, #284]	; 1183c <el_line@plt+0xf388>
   1171c:	mov	r8, r2
   11720:	ldr	r1, [ip, r1]
   11724:	mov	r2, ip
   11728:	str	r5, [sp, #12]
   1172c:	ldr	r9, [sp, #64]	; 0x40
   11730:	str	r1, [sp, #4]
   11734:	ldr	r1, [r1]
   11738:	ldr	sl, [sp, #68]	; 0x44
   1173c:	str	r1, [sp, #20]
   11740:	ldr	r2, [r2, r0]
   11744:	cmp	r4, r2
   11748:	movne	r2, #4
   1174c:	moveq	r2, #1
   11750:	subs	r6, r3, #0
   11754:	strh	r2, [sp, #16]
   11758:	addne	fp, sp, #12
   1175c:	movne	r7, #0
   11760:	beq	117d8 <el_line@plt+0xf324>
   11764:	add	r1, r8, r7
   11768:	mov	r0, r5
   1176c:	rsb	r2, r7, r6
   11770:	blx	r4
   11774:	cmn	r0, #1
   11778:	mov	r1, r0
   1177c:	beq	117b8 <el_line@plt+0xf304>
   11780:	cmp	r0, #0
   11784:	bne	11800 <el_line@plt+0xf34c>
   11788:	bl	23ac <__errno_location@plt>
   1178c:	mov	r3, r7
   11790:	mov	r2, #32
   11794:	str	r2, [r0]
   11798:	ldr	ip, [sp, #4]
   1179c:	mov	r0, r3
   117a0:	ldr	r2, [sp, #20]
   117a4:	ldr	r3, [ip]
   117a8:	cmp	r2, r3
   117ac:	bne	11830 <el_line@plt+0xf37c>
   117b0:	add	sp, sp, #28
   117b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117b8:	str	r0, [sp]
   117bc:	bl	23ac <__errno_location@plt>
   117c0:	ldr	r1, [sp]
   117c4:	ldr	r2, [r0]
   117c8:	cmp	r2, #4
   117cc:	beq	117f0 <el_line@plt+0xf33c>
   117d0:	cmp	r2, #11
   117d4:	beq	117e0 <el_line@plt+0xf32c>
   117d8:	mov	r3, #0
   117dc:	b	11798 <el_line@plt+0xf2e4>
   117e0:	mov	r2, r1
   117e4:	mov	r0, fp
   117e8:	mov	r1, #1
   117ec:	bl	2100 <poll@plt>
   117f0:	cmp	r6, r7
   117f4:	bhi	11764 <el_line@plt+0xf2b0>
   117f8:	mov	r3, r7
   117fc:	b	11798 <el_line@plt+0xf2e4>
   11800:	cmp	r9, #0
   11804:	add	r7, r7, r0
   11808:	beq	117f0 <el_line@plt+0xf33c>
   1180c:	mov	r0, sl
   11810:	blx	r9
   11814:	cmn	r0, #1
   11818:	bne	117f0 <el_line@plt+0xf33c>
   1181c:	bl	23ac <__errno_location@plt>
   11820:	mov	r2, #4
   11824:	mov	r3, r7
   11828:	str	r2, [r0]
   1182c:	b	11798 <el_line@plt+0xf2e4>
   11830:	bl	21e4 <__stack_chk_fail@plt>
   11834:	andeq	sp, r1, r8, asr r6
   11838:	andeq	r0, r0, ip, lsr #4
   1183c:	andeq	r0, r0, r4, asr #4
   11840:	push	{lr}		; (str lr, [sp, #-4]!)
   11844:	sub	sp, sp, #12
   11848:	mov	ip, #0
   1184c:	str	ip, [sp]
   11850:	str	ip, [sp, #4]
   11854:	bl	116fc <el_line@plt+0xf248>
   11858:	add	sp, sp, #12
   1185c:	pop	{pc}		; (ldr pc, [sp], #4)
   11860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11864:	mov	r5, r3
   11868:	ldr	r6, [pc, #544]	; 11a90 <el_line@plt+0xf5dc>
   1186c:	sub	sp, sp, #8192	; 0x2000
   11870:	ldr	r3, [pc, #540]	; 11a94 <el_line@plt+0xf5e0>
   11874:	sub	sp, sp, #36	; 0x24
   11878:	add	r6, pc, r6
   1187c:	mov	r7, r0
   11880:	cmp	r5, #1024	; 0x400
   11884:	add	r0, sp, #8192	; 0x2000
   11888:	ldr	r3, [r6, r3]
   1188c:	mov	r8, r1
   11890:	ldr	r9, [r0, #72]	; 0x48
   11894:	ldr	sl, [r0, #76]	; 0x4c
   11898:	str	r3, [sp, #4]
   1189c:	ldr	r3, [r3]
   118a0:	str	r3, [r0, #28]
   118a4:	bls	118e0 <el_line@plt+0xf42c>
   118a8:	bl	23ac <__errno_location@plt>
   118ac:	mov	fp, #0
   118b0:	mov	r3, #22
   118b4:	str	r3, [r0]
   118b8:	ldr	r1, [sp, #4]
   118bc:	add	r0, sp, #8192	; 0x2000
   118c0:	ldr	r2, [r0, #28]
   118c4:	mov	r0, fp
   118c8:	ldr	r3, [r1]
   118cc:	cmp	r2, r3
   118d0:	bne	11a8c <el_line@plt+0xf5d8>
   118d4:	add	sp, sp, #8192	; 0x2000
   118d8:	add	sp, sp, #36	; 0x24
   118dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118e0:	add	fp, sp, #32
   118e4:	mov	r1, r2
   118e8:	sub	r4, fp, #4
   118ec:	lsl	r2, r5, #3
   118f0:	mov	r3, #8192	; 0x2000
   118f4:	add	r0, sp, #20
   118f8:	str	r0, [sp, #12]
   118fc:	mov	r0, r4
   11900:	bl	1ea8 <__memcpy_chk@plt>
   11904:	ldr	r2, [pc, #396]	; 11a98 <el_line@plt+0xf5e4>
   11908:	add	r1, sp, #8192	; 0x2000
   1190c:	movw	r3, #57332	; 0xdff4
   11910:	add	r1, r1, #32
   11914:	movt	r3, #65535	; 0xffff
   11918:	str	r8, [r1, r3]
   1191c:	ldr	r3, [r6, r2]
   11920:	cmp	r7, r3
   11924:	movne	r3, #4
   11928:	moveq	r3, #1
   1192c:	cmp	r5, #0
   11930:	strh	r3, [sp, #24]
   11934:	beq	1199c <el_line@plt+0xf4e8>
   11938:	ldr	r3, [fp]
   1193c:	cmp	r3, #0
   11940:	beq	1199c <el_line@plt+0xf4e8>
   11944:	mov	r3, #0
   11948:	str	r3, [sp, #8]
   1194c:	mov	r0, r8
   11950:	mov	r1, r4
   11954:	mov	r2, r5
   11958:	blx	r7
   1195c:	cmn	r0, #1
   11960:	mov	fp, r0
   11964:	beq	11984 <el_line@plt+0xf4d0>
   11968:	cmp	r0, #0
   1196c:	bne	119d0 <el_line@plt+0xf51c>
   11970:	bl	23ac <__errno_location@plt>
   11974:	ldr	fp, [sp, #8]
   11978:	mov	r3, #32
   1197c:	str	r3, [r0]
   11980:	b	118b8 <el_line@plt+0xf404>
   11984:	bl	23ac <__errno_location@plt>
   11988:	ldr	r3, [r0]
   1198c:	cmp	r3, #4
   11990:	beq	119b4 <el_line@plt+0xf500>
   11994:	cmp	r3, #11
   11998:	beq	119a4 <el_line@plt+0xf4f0>
   1199c:	mov	fp, #0
   119a0:	b	118b8 <el_line@plt+0xf404>
   119a4:	mov	r2, fp
   119a8:	add	r0, sp, #20
   119ac:	mov	r1, #1
   119b0:	bl	2100 <poll@plt>
   119b4:	cmp	r5, #0
   119b8:	beq	119c8 <el_line@plt+0xf514>
   119bc:	ldr	r3, [r4, #4]
   119c0:	cmp	r3, #0
   119c4:	bne	1194c <el_line@plt+0xf498>
   119c8:	ldr	fp, [sp, #8]
   119cc:	b	118b8 <el_line@plt+0xf404>
   119d0:	ldr	r3, [sp, #8]
   119d4:	mov	r6, r0
   119d8:	add	r3, r3, r0
   119dc:	str	r3, [sp, #8]
   119e0:	ldr	r3, [r4, #4]
   119e4:	cmp	r3, r6
   119e8:	bhi	11a24 <el_line@plt+0xf570>
   119ec:	mov	r0, r5
   119f0:	mvn	r1, #0
   119f4:	rsb	r6, r3, r6
   119f8:	bl	192bc <el_line@plt+0x16e08>
   119fc:	add	r4, r4, #8
   11a00:	subs	r5, r0, #0
   11a04:	bne	119e0 <el_line@plt+0xf52c>
   11a08:	cmp	r6, #0
   11a0c:	beq	11a5c <el_line@plt+0xf5a8>
   11a10:	bl	23ac <__errno_location@plt>
   11a14:	mov	fp, #0
   11a18:	mov	r3, #14
   11a1c:	str	r3, [r0]
   11a20:	b	118b8 <el_line@plt+0xf404>
   11a24:	cmp	r6, #0
   11a28:	beq	11a54 <el_line@plt+0xf5a0>
   11a2c:	cmp	r5, #0
   11a30:	beq	11a10 <el_line@plt+0xf55c>
   11a34:	cmp	r6, r3
   11a38:	bhi	11a10 <el_line@plt+0xf55c>
   11a3c:	ldr	r2, [r4]
   11a40:	rsb	r3, r6, r3
   11a44:	str	r3, [r4, #4]
   11a48:	add	r6, r2, r6
   11a4c:	str	r6, [r4]
   11a50:	b	11a5c <el_line@plt+0xf5a8>
   11a54:	cmp	r5, #0
   11a58:	bne	11a3c <el_line@plt+0xf588>
   11a5c:	cmp	r9, #0
   11a60:	beq	119b4 <el_line@plt+0xf500>
   11a64:	mov	r1, fp
   11a68:	mov	r0, sl
   11a6c:	blx	r9
   11a70:	cmn	r0, #1
   11a74:	bne	119b4 <el_line@plt+0xf500>
   11a78:	bl	23ac <__errno_location@plt>
   11a7c:	ldr	fp, [sp, #8]
   11a80:	mov	r3, #4
   11a84:	str	r3, [r0]
   11a88:	b	118b8 <el_line@plt+0xf404>
   11a8c:	bl	21e4 <__stack_chk_fail@plt>
   11a90:	andeq	sp, r1, ip, ror #9
   11a94:	andeq	r0, r0, ip, lsr #4
   11a98:	andeq	r0, r0, r0, asr #4
   11a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   11aa0:	sub	sp, sp, #12
   11aa4:	mov	ip, #0
   11aa8:	str	ip, [sp]
   11aac:	str	ip, [sp, #4]
   11ab0:	bl	11860 <el_line@plt+0xf3ac>
   11ab4:	add	sp, sp, #12
   11ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   11abc:	andeq	r0, r0, r0
   11ac0:	push	{r3, lr}
   11ac4:	rsbs	r3, r0, #1
   11ac8:	movcc	r3, #0
   11acc:	cmp	r1, #0
   11ad0:	moveq	r3, #0
   11ad4:	cmp	r3, #0
   11ad8:	bne	11b18 <el_line@plt+0xf664>
   11adc:	adds	ip, r0, #0
   11ae0:	movne	ip, #1
   11ae4:	cmp	r1, #0
   11ae8:	movne	r2, #0
   11aec:	andeq	r2, ip, #1
   11af0:	cmp	r2, #0
   11af4:	bne	11b10 <el_line@plt+0xf65c>
   11af8:	cmp	ip, #0
   11afc:	beq	11b20 <el_line@plt+0xf66c>
   11b00:	bl	2388 <strcmp@plt>
   11b04:	rsbs	r0, r0, #1
   11b08:	movcc	r0, #0
   11b0c:	pop	{r3, pc}
   11b10:	mov	r0, r3
   11b14:	pop	{r3, pc}
   11b18:	mov	r0, #0
   11b1c:	pop	{r3, pc}
   11b20:	mov	r0, #1
   11b24:	pop	{r3, pc}
   11b28:	ldrb	r3, [r0]
   11b2c:	cmp	r3, #0
   11b30:	bxeq	lr
   11b34:	cmp	r3, #10
   11b38:	cmpne	r3, #13
   11b3c:	addne	r2, r0, #1
   11b40:	bne	11b54 <el_line@plt+0xf6a0>
   11b44:	b	11b68 <el_line@plt+0xf6b4>
   11b48:	cmp	r3, #10
   11b4c:	cmpne	r3, #13
   11b50:	beq	11b6c <el_line@plt+0xf6b8>
   11b54:	mov	r1, r2
   11b58:	ldrb	r3, [r2], #1
   11b5c:	cmp	r3, #0
   11b60:	bne	11b48 <el_line@plt+0xf694>
   11b64:	bx	lr
   11b68:	mov	r1, r0
   11b6c:	mov	r3, #0
   11b70:	strb	r3, [r1]
   11b74:	bx	lr
   11b78:	push	{r4, r5, r6, lr}
   11b7c:	mov	r1, #3
   11b80:	mov	r5, r0
   11b84:	bl	20a0 <fcntl@plt>
   11b88:	subs	r4, r0, #0
   11b8c:	blt	11be8 <el_line@plt+0xf734>
   11b90:	ands	r6, r4, #2048	; 0x800
   11b94:	bne	11bcc <el_line@plt+0xf718>
   11b98:	ldr	r0, [pc, #152]	; 11c38 <el_line@plt+0xf784>
   11b9c:	mov	r1, r5
   11ba0:	add	r0, pc, r0
   11ba4:	bl	11424 <el_line@plt+0xef70>
   11ba8:	orr	r2, r4, #2048	; 0x800
   11bac:	mov	r0, r5
   11bb0:	mov	r1, #4
   11bb4:	bl	20a0 <fcntl@plt>
   11bb8:	cmn	r0, #1
   11bbc:	mov	r4, r0
   11bc0:	beq	11c10 <el_line@plt+0xf75c>
   11bc4:	mov	r0, r6
   11bc8:	pop	{r4, r5, r6, pc}
   11bcc:	ldr	r0, [pc, #104]	; 11c3c <el_line@plt+0xf788>
   11bd0:	mov	r1, r5
   11bd4:	mov	r6, #0
   11bd8:	add	r0, pc, r0
   11bdc:	bl	1148c <el_line@plt+0xefd8>
   11be0:	mov	r0, r6
   11be4:	pop	{r4, r5, r6, pc}
   11be8:	bl	23ac <__errno_location@plt>
   11bec:	mvn	r6, #0
   11bf0:	ldr	r0, [r0]
   11bf4:	bl	1fa4 <strerror@plt>
   11bf8:	mov	r1, r5
   11bfc:	mov	r2, r0
   11c00:	ldr	r0, [pc, #56]	; 11c40 <el_line@plt+0xf78c>
   11c04:	add	r0, pc, r0
   11c08:	bl	11238 <el_line@plt+0xed84>
   11c0c:	b	11bc4 <el_line@plt+0xf710>
   11c10:	bl	23ac <__errno_location@plt>
   11c14:	mov	r6, r4
   11c18:	ldr	r0, [r0]
   11c1c:	bl	1fa4 <strerror@plt>
   11c20:	mov	r1, r5
   11c24:	mov	r2, r0
   11c28:	ldr	r0, [pc, #20]	; 11c44 <el_line@plt+0xf790>
   11c2c:	add	r0, pc, r0
   11c30:	bl	113bc <el_line@plt+0xef08>
   11c34:	b	11bc4 <el_line@plt+0xf710>
   11c38:	strdeq	fp, [r0], -ip
   11c3c:			; <UNDEFINED> instruction: 0x0000b3b0
   11c40:	andeq	fp, r0, ip, ror #6
   11c44:	andeq	fp, r0, ip, lsl #7
   11c48:	push	{r4, r5, r6, lr}
   11c4c:	mov	r1, #3
   11c50:	mov	r6, r0
   11c54:	bl	20a0 <fcntl@plt>
   11c58:	subs	r5, r0, #0
   11c5c:	blt	11cb8 <el_line@plt+0xf804>
   11c60:	ands	r4, r5, #2048	; 0x800
   11c64:	beq	11ca0 <el_line@plt+0xf7ec>
   11c68:	ldr	r0, [pc, #148]	; 11d04 <el_line@plt+0xf850>
   11c6c:	mov	r1, r6
   11c70:	add	r0, pc, r0
   11c74:	bl	113bc <el_line@plt+0xef08>
   11c78:	mov	r0, r6
   11c7c:	bic	r2, r5, #2048	; 0x800
   11c80:	mov	r1, #4
   11c84:	bl	20a0 <fcntl@plt>
   11c88:	cmn	r0, #1
   11c8c:	mov	r4, r0
   11c90:	movne	r4, #0
   11c94:	beq	11ce0 <el_line@plt+0xf82c>
   11c98:	mov	r0, r4
   11c9c:	pop	{r4, r5, r6, pc}
   11ca0:	ldr	r0, [pc, #96]	; 11d08 <el_line@plt+0xf854>
   11ca4:	mov	r1, r6
   11ca8:	add	r0, pc, r0
   11cac:	bl	1148c <el_line@plt+0xefd8>
   11cb0:	mov	r0, r4
   11cb4:	pop	{r4, r5, r6, pc}
   11cb8:	bl	23ac <__errno_location@plt>
   11cbc:	mvn	r4, #0
   11cc0:	ldr	r0, [r0]
   11cc4:	bl	1fa4 <strerror@plt>
   11cc8:	mov	r1, r6
   11ccc:	mov	r2, r0
   11cd0:	ldr	r0, [pc, #52]	; 11d0c <el_line@plt+0xf858>
   11cd4:	add	r0, pc, r0
   11cd8:	bl	11238 <el_line@plt+0xed84>
   11cdc:	b	11c98 <el_line@plt+0xf7e4>
   11ce0:	bl	23ac <__errno_location@plt>
   11ce4:	ldr	r0, [r0]
   11ce8:	bl	1fa4 <strerror@plt>
   11cec:	mov	r1, r6
   11cf0:	mov	r2, r0
   11cf4:	ldr	r0, [pc, #20]	; 11d10 <el_line@plt+0xf85c>
   11cf8:	add	r0, pc, r0
   11cfc:	bl	113bc <el_line@plt+0xef08>
   11d00:	b	11c98 <el_line@plt+0xf7e4>
   11d04:	andeq	fp, r0, r4, lsl #7
   11d08:	andeq	fp, r0, r4, lsr r3
   11d0c:	muleq	r0, ip, r2
   11d10:	andeq	fp, r0, r8, lsl r3
   11d14:	cmn	r0, #11
   11d18:	push	{r4, lr}
   11d1c:	mov	r4, r0
   11d20:	beq	11d30 <el_line@plt+0xf87c>
   11d24:	mov	r0, r4
   11d28:	pop	{r4, lr}
   11d2c:	b	23e8 <gai_strerror@plt>
   11d30:	bl	23ac <__errno_location@plt>
   11d34:	ldr	r0, [r0]
   11d38:	cmp	r0, #0
   11d3c:	beq	11d24 <el_line@plt+0xf870>
   11d40:	pop	{r4, lr}
   11d44:	b	1fa4 <strerror@plt>
   11d48:	ldr	ip, [pc, #252]	; 11e4c <el_line@plt+0xf998>
   11d4c:	mov	r1, #6
   11d50:	push	{r4, r5, r6, r7, r8, lr}
   11d54:	add	ip, pc, ip
   11d58:	ldr	lr, [pc, #240]	; 11e50 <el_line@plt+0xf99c>
   11d5c:	sub	sp, sp, #24
   11d60:	add	r5, sp, #12
   11d64:	mov	r2, #1
   11d68:	mov	r6, #4
   11d6c:	mov	r7, r0
   11d70:	ldr	r4, [ip, lr]
   11d74:	add	ip, sp, #16
   11d78:	str	ip, [sp]
   11d7c:	mov	r3, r5
   11d80:	str	r6, [sp, #16]
   11d84:	ldr	ip, [r4]
   11d88:	str	ip, [sp, #20]
   11d8c:	bl	1ed8 <getsockopt@plt>
   11d90:	cmn	r0, #1
   11d94:	beq	11e28 <el_line@plt+0xf974>
   11d98:	ldr	r3, [sp, #12]
   11d9c:	cmp	r3, #1
   11da0:	beq	11df4 <el_line@plt+0xf940>
   11da4:	ldr	r0, [pc, #168]	; 11e54 <el_line@plt+0xf9a0>
   11da8:	mov	r8, #1
   11dac:	mov	r1, r7
   11db0:	str	r8, [sp, #12]
   11db4:	add	r0, pc, r0
   11db8:	bl	11424 <el_line@plt+0xef70>
   11dbc:	mov	r2, r8
   11dc0:	str	r6, [sp]
   11dc4:	mov	r0, r7
   11dc8:	mov	r3, r5
   11dcc:	mov	r1, #6
   11dd0:	bl	2244 <setsockopt@plt>
   11dd4:	cmn	r0, #1
   11dd8:	beq	11e08 <el_line@plt+0xf954>
   11ddc:	ldr	r2, [sp, #20]
   11de0:	ldr	r3, [r4]
   11de4:	cmp	r2, r3
   11de8:	bne	11e48 <el_line@plt+0xf994>
   11dec:	add	sp, sp, #24
   11df0:	pop	{r4, r5, r6, r7, r8, pc}
   11df4:	ldr	r0, [pc, #92]	; 11e58 <el_line@plt+0xf9a4>
   11df8:	mov	r1, r7
   11dfc:	add	r0, pc, r0
   11e00:	bl	11424 <el_line@plt+0xef70>
   11e04:	b	11ddc <el_line@plt+0xf928>
   11e08:	bl	23ac <__errno_location@plt>
   11e0c:	ldr	r0, [r0]
   11e10:	bl	1fa4 <strerror@plt>
   11e14:	mov	r1, r0
   11e18:	ldr	r0, [pc, #60]	; 11e5c <el_line@plt+0xf9a8>
   11e1c:	add	r0, pc, r0
   11e20:	bl	11238 <el_line@plt+0xed84>
   11e24:	b	11ddc <el_line@plt+0xf928>
   11e28:	bl	23ac <__errno_location@plt>
   11e2c:	ldr	r0, [r0]
   11e30:	bl	1fa4 <strerror@plt>
   11e34:	mov	r1, r0
   11e38:	ldr	r0, [pc, #32]	; 11e60 <el_line@plt+0xf9ac>
   11e3c:	add	r0, pc, r0
   11e40:	bl	113bc <el_line@plt+0xef08>
   11e44:	b	11ddc <el_line@plt+0xf928>
   11e48:	bl	21e4 <__stack_chk_fail@plt>
   11e4c:	andeq	sp, r1, r0, lsl r0
   11e50:	andeq	r0, r0, ip, lsr #4
   11e54:			; <UNDEFINED> instruction: 0x0000b2b8
   11e58:	andeq	fp, r0, r8, asr r2
   11e5c:	andeq	fp, r0, ip, ror #4
   11e60:	strdeq	fp, [r0], -r8
   11e64:	push	{r4, r5, r6, r7, r8, lr}
   11e68:	mov	r6, r0
   11e6c:	ldr	r4, [r0]
   11e70:	cmp	r4, #0
   11e74:	beq	11f50 <el_line@plt+0xfa9c>
   11e78:	ldr	r1, [pc, #240]	; 11f70 <el_line@plt+0xfabc>
   11e7c:	mov	r0, r4
   11e80:	add	r1, pc, r1
   11e84:	bl	2124 <strpbrk@plt>
   11e88:	cmp	r0, #0
   11e8c:	mov	r5, r0
   11e90:	str	r0, [r6]
   11e94:	beq	11ee4 <el_line@plt+0xfa30>
   11e98:	ldrb	r7, [r0]
   11e9c:	cmp	r7, #34	; 0x22
   11ea0:	beq	11eec <el_line@plt+0xfa38>
   11ea4:	cmp	r7, #61	; 0x3d
   11ea8:	beq	11f58 <el_line@plt+0xfaa4>
   11eac:	ldr	r7, [pc, #192]	; 11f74 <el_line@plt+0xfac0>
   11eb0:	mov	r3, #0
   11eb4:	strb	r3, [r0]
   11eb8:	add	r7, pc, r7
   11ebc:	ldr	r8, [r6]
   11ec0:	mov	r1, r7
   11ec4:	add	r0, r8, #1
   11ec8:	bl	2088 <strspn@plt>
   11ecc:	add	r0, r0, #1
   11ed0:	add	r5, r8, r0
   11ed4:	str	r5, [r6]
   11ed8:	ldrb	r3, [r8, r0]
   11edc:	cmp	r3, #61	; 0x3d
   11ee0:	beq	11f48 <el_line@plt+0xfa94>
   11ee4:	mov	r0, r4
   11ee8:	pop	{r4, r5, r6, r7, r8, pc}
   11eec:	bl	2310 <strlen@plt>
   11ef0:	add	r1, r5, #1
   11ef4:	mov	r2, r0
   11ef8:	mov	r0, r5
   11efc:	bl	210c <memmove@plt>
   11f00:	ldr	r0, [r6]
   11f04:	mov	r1, r7
   11f08:	bl	2490 <strchr@plt>
   11f0c:	cmp	r0, #0
   11f10:	str	r0, [r6]
   11f14:	beq	11f50 <el_line@plt+0xfa9c>
   11f18:	ldr	r1, [pc, #88]	; 11f78 <el_line@plt+0xfac4>
   11f1c:	mov	r3, #0
   11f20:	strb	r3, [r0]
   11f24:	ldr	r5, [r6]
   11f28:	add	r1, pc, r1
   11f2c:	add	r0, r5, #1
   11f30:	bl	2088 <strspn@plt>
   11f34:	add	r0, r0, #1
   11f38:	add	r5, r5, r0
   11f3c:	mov	r0, r4
   11f40:	str	r5, [r6]
   11f44:	pop	{r4, r5, r6, r7, r8, pc}
   11f48:	mov	r1, r7
   11f4c:	b	11f2c <el_line@plt+0xfa78>
   11f50:	mov	r4, #0
   11f54:	b	11ee4 <el_line@plt+0xfa30>
   11f58:	ldr	r1, [pc, #28]	; 11f7c <el_line@plt+0xfac8>
   11f5c:	mov	r3, #0
   11f60:	strb	r3, [r0]
   11f64:	add	r1, pc, r1
   11f68:	ldr	r5, [r6]
   11f6c:	b	11f2c <el_line@plt+0xfa78>
   11f70:	andeq	fp, r0, r8, lsr #4
   11f74:	andeq	r8, r0, ip, asr r4
   11f78:	andeq	r8, r0, ip, ror #7
   11f7c:			; <UNDEFINED> instruction: 0x000083b0
   11f80:	push	{r3, r4, r5, lr}
   11f84:	mov	r1, #28
   11f88:	mov	r5, r0
   11f8c:	mov	r0, #1
   11f90:	bl	11598 <el_line@plt+0xf0e4>
   11f94:	mov	r4, r0
   11f98:	ldr	r0, [r5]
   11f9c:	bl	1163c <el_line@plt+0xf188>
   11fa0:	str	r0, [r4]
   11fa4:	ldr	r0, [r5, #4]
   11fa8:	bl	1163c <el_line@plt+0xf188>
   11fac:	str	r0, [r4, #4]
   11fb0:	ldr	r0, [r5, #16]
   11fb4:	bl	1163c <el_line@plt+0xf188>
   11fb8:	str	r0, [r4, #16]
   11fbc:	ldr	r3, [r5, #8]
   11fc0:	str	r3, [r4, #8]
   11fc4:	ldr	r3, [r5, #12]
   11fc8:	str	r3, [r4, #12]
   11fcc:	ldr	r0, [r5, #20]
   11fd0:	bl	1163c <el_line@plt+0xf188>
   11fd4:	str	r0, [r4, #20]
   11fd8:	ldr	r0, [r5, #24]
   11fdc:	bl	1163c <el_line@plt+0xf188>
   11fe0:	str	r0, [r4, #24]
   11fe4:	mov	r0, r4
   11fe8:	pop	{r3, r4, r5, pc}
   11fec:	ldr	r1, [pc, #96]	; 12054 <el_line@plt+0xfba0>
   11ff0:	mov	r2, #0
   11ff4:	ldr	ip, [pc, #92]	; 12058 <el_line@plt+0xfba4>
   11ff8:	mov	r3, #0
   11ffc:	add	r1, pc, r1
   12000:	push	{r4, r5, r6, lr}
   12004:	sub	sp, sp, #24
   12008:	ldr	r6, [r1, ip]
   1200c:	movw	r4, #65535	; 0xffff
   12010:	add	r1, sp, #16
   12014:	mov	r5, #0
   12018:	str	r1, [sp, #8]
   1201c:	strd	r4, [sp]
   12020:	ldr	r1, [r6]
   12024:	str	r1, [sp, #20]
   12028:	bl	17acc <el_line@plt+0x15618>
   1202c:	ldr	r3, [sp, #16]
   12030:	ldr	r2, [sp, #20]
   12034:	cmp	r3, #0
   12038:	ldr	r3, [r6]
   1203c:	mvnne	r0, #0
   12040:	cmp	r2, r3
   12044:	bne	12050 <el_line@plt+0xfb9c>
   12048:	add	sp, sp, #24
   1204c:	pop	{r4, r5, r6, pc}
   12050:	bl	21e4 <__stack_chk_fail@plt>
   12054:	andeq	ip, r1, r8, ror #26
   12058:	andeq	r0, r0, ip, lsr #4
   1205c:	ldr	r3, [pc, #260]	; 12168 <el_line@plt+0xfcb4>
   12060:	ldr	r2, [pc, #260]	; 1216c <el_line@plt+0xfcb8>
   12064:	add	r3, pc, r3
   12068:	push	{r4, r5, r6, r7, r8, r9, lr}
   1206c:	subs	r6, r1, #0
   12070:	ldr	r5, [r3, r2]
   12074:	sub	sp, sp, #28
   12078:	mov	r4, #0
   1207c:	mov	r8, r0
   12080:	str	r4, [sp, #16]
   12084:	ldr	r3, [r5]
   12088:	str	r3, [sp, #20]
   1208c:	beq	12100 <el_line@plt+0xfc4c>
   12090:	mvn	r3, #-2147483648	; 0x80000000
   12094:	str	r3, [r6]
   12098:	bl	1163c <el_line@plt+0xf188>
   1209c:	mov	r1, #58	; 0x3a
   120a0:	mov	r7, r0
   120a4:	bl	2490 <strchr@plt>
   120a8:	subs	r9, r0, #0
   120ac:	beq	1214c <el_line@plt+0xfc98>
   120b0:	mov	r0, r9
   120b4:	mov	r1, r4
   120b8:	strb	r4, [r0], #1
   120bc:	bl	1205c <el_line@plt+0xfba8>
   120c0:	mov	r1, r4
   120c4:	str	r0, [r6]
   120c8:	mov	r0, r7
   120cc:	bl	1205c <el_line@plt+0xfba8>
   120d0:	mov	r4, r0
   120d4:	mov	r0, r7
   120d8:	bl	1f20 <free@plt>
   120dc:	ldr	r0, [r6]
   120e0:	cmn	r0, #-2147483646	; 0x80000002
   120e4:	movne	r0, r4
   120e8:	ldr	r2, [sp, #20]
   120ec:	ldr	r3, [r5]
   120f0:	cmp	r2, r3
   120f4:	bne	12164 <el_line@plt+0xfcb0>
   120f8:	add	sp, sp, #28
   120fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12100:	ldr	r1, [pc, #104]	; 12170 <el_line@plt+0xfcbc>
   12104:	add	r1, pc, r1
   12108:	bl	1ee4 <strcasecmp@plt>
   1210c:	cmp	r0, #0
   12110:	mvneq	r0, #-2147483648	; 0x80000000
   12114:	beq	120e8 <el_line@plt+0xfc34>
   12118:	mvn	r2, #-2147483646	; 0x80000002
   1211c:	mov	r3, #0
   12120:	mov	r0, r8
   12124:	strd	r2, [sp]
   12128:	add	r3, sp, #16
   1212c:	mov	r2, #0
   12130:	str	r3, [sp, #8]
   12134:	mov	r3, #0
   12138:	bl	17acc <el_line@plt+0x15618>
   1213c:	ldr	r3, [sp, #16]
   12140:	cmp	r3, #0
   12144:	mvnne	r0, #-2147483647	; 0x80000001
   12148:	b	120e8 <el_line@plt+0xfc34>
   1214c:	mov	r0, r7
   12150:	bl	1f20 <free@plt>
   12154:	mov	r0, r8
   12158:	mov	r1, r9
   1215c:	bl	1205c <el_line@plt+0xfba8>
   12160:	b	120e8 <el_line@plt+0xfc34>
   12164:	bl	21e4 <__stack_chk_fail@plt>
   12168:	andeq	ip, r1, r0, lsl #26
   1216c:	andeq	r0, r0, ip, lsr #4
   12170:	andeq	sl, r0, ip, lsr #31
   12174:	ldr	r3, [pc, #400]	; 1230c <el_line@plt+0xfe58>
   12178:	ldr	r2, [pc, #400]	; 12310 <el_line@plt+0xfe5c>
   1217c:	add	r3, pc, r3
   12180:	push	{r4, r5, r6, r7, r8, lr}
   12184:	sub	sp, sp, #8
   12188:	ldr	r8, [r3, r2]
   1218c:	mov	r4, r0
   12190:	mov	r5, #0
   12194:	ldr	r3, [r8]
   12198:	str	r3, [sp, #4]
   1219c:	bl	23ac <__errno_location@plt>
   121a0:	cmp	r4, #0
   121a4:	mov	r6, r0
   121a8:	str	r5, [r0]
   121ac:	beq	1229c <el_line@plt+0xfde8>
   121b0:	ldrb	r3, [r4]
   121b4:	cmp	r3, #0
   121b8:	bne	121f4 <el_line@plt+0xfd40>
   121bc:	b	1229c <el_line@plt+0xfde8>
   121c0:	cmp	r2, #72	; 0x48
   121c4:	beq	1225c <el_line@plt+0xfda8>
   121c8:	bhi	122b8 <el_line@plt+0xfe04>
   121cc:	cmp	r2, #0
   121d0:	streq	r3, [sp]
   121d4:	moveq	r4, r3
   121d8:	bne	12270 <el_line@plt+0xfdbc>
   121dc:	mov	r0, r5
   121e0:	bl	192bc <el_line@plt+0x16e08>
   121e4:	ldrb	r3, [r4]
   121e8:	cmp	r3, #0
   121ec:	mov	r5, r0
   121f0:	beq	122a0 <el_line@plt+0xfdec>
   121f4:	mov	r1, sp
   121f8:	mov	r0, r4
   121fc:	mov	r2, #10
   12200:	bl	1f14 <strtol@plt>
   12204:	ldr	r3, [sp]
   12208:	cmp	r4, r3
   1220c:	mov	r1, r0
   12210:	beq	1229c <el_line@plt+0xfde8>
   12214:	ldr	r2, [r6]
   12218:	cmp	r2, #34	; 0x22
   1221c:	beq	12290 <el_line@plt+0xfddc>
   12220:	cmp	r1, #0
   12224:	blt	1229c <el_line@plt+0xfde8>
   12228:	add	r4, r3, #1
   1222c:	str	r4, [sp]
   12230:	ldrb	r2, [r3]
   12234:	cmp	r2, #87	; 0x57
   12238:	beq	122f0 <el_line@plt+0xfe3c>
   1223c:	bls	121c0 <el_line@plt+0xfd0c>
   12240:	cmp	r2, #109	; 0x6d
   12244:	beq	122cc <el_line@plt+0xfe18>
   12248:	bhi	122e0 <el_line@plt+0xfe2c>
   1224c:	cmp	r2, #100	; 0x64
   12250:	beq	12278 <el_line@plt+0xfdc4>
   12254:	cmp	r2, #104	; 0x68
   12258:	bne	1229c <el_line@plt+0xfde8>
   1225c:	mov	r0, r1
   12260:	mov	r1, #3600	; 0xe10
   12264:	bl	193ec <el_line@plt+0x16f38>
   12268:	mov	r1, r0
   1226c:	b	121dc <el_line@plt+0xfd28>
   12270:	cmp	r2, #68	; 0x44
   12274:	bne	1229c <el_line@plt+0xfde8>
   12278:	mov	r0, r1
   1227c:	movw	r1, #20864	; 0x5180
   12280:	movt	r1, #1
   12284:	bl	193ec <el_line@plt+0x16f38>
   12288:	mov	r1, r0
   1228c:	b	121dc <el_line@plt+0xfd28>
   12290:	sub	r2, r0, #-2147483647	; 0x80000001
   12294:	cmn	r2, #3
   12298:	bls	12220 <el_line@plt+0xfd6c>
   1229c:	mvn	r0, #0
   122a0:	ldr	r2, [sp, #4]
   122a4:	ldr	r3, [r8]
   122a8:	cmp	r2, r3
   122ac:	bne	12308 <el_line@plt+0xfe54>
   122b0:	add	sp, sp, #8
   122b4:	pop	{r4, r5, r6, r7, r8, pc}
   122b8:	cmp	r2, #77	; 0x4d
   122bc:	beq	122cc <el_line@plt+0xfe18>
   122c0:	cmp	r2, #83	; 0x53
   122c4:	beq	121dc <el_line@plt+0xfd28>
   122c8:	b	1229c <el_line@plt+0xfde8>
   122cc:	mov	r0, r1
   122d0:	mov	r1, #60	; 0x3c
   122d4:	bl	193ec <el_line@plt+0x16f38>
   122d8:	mov	r1, r0
   122dc:	b	121dc <el_line@plt+0xfd28>
   122e0:	cmp	r2, #115	; 0x73
   122e4:	beq	121dc <el_line@plt+0xfd28>
   122e8:	cmp	r2, #119	; 0x77
   122ec:	bne	1229c <el_line@plt+0xfde8>
   122f0:	mov	r0, r1
   122f4:	mov	r1, #14976	; 0x3a80
   122f8:	movt	r1, #9
   122fc:	bl	193ec <el_line@plt+0x16f38>
   12300:	mov	r1, r0
   12304:	b	121dc <el_line@plt+0xfd28>
   12308:	bl	21e4 <__stack_chk_fail@plt>
   1230c:	andeq	ip, r1, r8, ror #23
   12310:	andeq	r0, r0, ip, lsr #4
   12314:	ldr	r2, [pc, #156]	; 123b8 <el_line@plt+0xff04>
   12318:	cmp	r1, #0
   1231c:	cmpne	r1, #22
   12320:	ldr	ip, [pc, #148]	; 123bc <el_line@plt+0xff08>
   12324:	mov	r3, r0
   12328:	add	r2, pc, r2
   1232c:	push	{r4, lr}
   12330:	sub	sp, sp, #16
   12334:	ldr	r4, [r2, ip]
   12338:	ldr	r2, [r4]
   1233c:	str	r2, [sp, #12]
   12340:	beq	12390 <el_line@plt+0xfedc>
   12344:	ldr	r2, [pc, #116]	; 123c0 <el_line@plt+0xff0c>
   12348:	add	r0, sp, #8
   1234c:	str	r1, [sp]
   12350:	mov	r1, #1
   12354:	add	r2, pc, r2
   12358:	bl	222c <__asprintf_chk@plt>
   1235c:	cmp	r0, #0
   12360:	blt	1239c <el_line@plt+0xfee8>
   12364:	ldr	r0, [pc, #88]	; 123c4 <el_line@plt+0xff10>
   12368:	ldr	r1, [sp, #8]
   1236c:	add	r0, pc, r0
   12370:	bl	1148c <el_line@plt+0xefd8>
   12374:	ldr	r0, [sp, #8]
   12378:	ldr	r2, [sp, #12]
   1237c:	ldr	r3, [r4]
   12380:	cmp	r2, r3
   12384:	bne	12398 <el_line@plt+0xfee4>
   12388:	add	sp, sp, #16
   1238c:	pop	{r4, pc}
   12390:	bl	1163c <el_line@plt+0xf188>
   12394:	b	12378 <el_line@plt+0xfec4>
   12398:	bl	21e4 <__stack_chk_fail@plt>
   1239c:	bl	23ac <__errno_location@plt>
   123a0:	ldr	r0, [r0]
   123a4:	bl	1fa4 <strerror@plt>
   123a8:	mov	r1, r0
   123ac:	ldr	r0, [pc, #20]	; 123c8 <el_line@plt+0xff14>
   123b0:	add	r0, pc, r0
   123b4:	bl	10980 <el_line@plt+0xe4cc>
   123b8:	andeq	ip, r1, ip, lsr sl
   123bc:	andeq	r0, r0, ip, lsr #4
   123c0:	andeq	sl, r0, r0, ror #26
   123c4:	andeq	sl, r0, ip, ror #26
   123c8:	andeq	sl, r0, ip, lsl #26
   123cc:	push	{r3, r4, r5, lr}
   123d0:	subs	r5, r0, #0
   123d4:	beq	124ac <el_line@plt+0xfff8>
   123d8:	ldr	r4, [r5]
   123dc:	cmp	r4, #0
   123e0:	beq	124a4 <el_line@plt+0xfff0>
   123e4:	ldrb	r3, [r4]
   123e8:	cmp	r3, #91	; 0x5b
   123ec:	beq	12484 <el_line@plt+0xffd0>
   123f0:	cmp	r3, #0
   123f4:	beq	12430 <el_line@plt+0xff7c>
   123f8:	cmp	r3, #58	; 0x3a
   123fc:	beq	12460 <el_line@plt+0xffac>
   12400:	cmp	r3, #47	; 0x2f
   12404:	addne	r2, r4, #1
   12408:	bne	12420 <el_line@plt+0xff6c>
   1240c:	b	12460 <el_line@plt+0xffac>
   12410:	cmp	r3, #58	; 0x3a
   12414:	beq	12464 <el_line@plt+0xffb0>
   12418:	cmp	r3, #47	; 0x2f
   1241c:	beq	12464 <el_line@plt+0xffb0>
   12420:	mov	r1, r2
   12424:	ldrb	r3, [r2], #1
   12428:	cmp	r3, #0
   1242c:	bne	12410 <el_line@plt+0xff5c>
   12430:	mov	r0, r4
   12434:	bl	2310 <strlen@plt>
   12438:	ldrb	r3, [r4, r0]
   1243c:	add	r1, r4, r0
   12440:	cmp	r3, #47	; 0x2f
   12444:	beq	12464 <el_line@plt+0xffb0>
   12448:	cmp	r3, #58	; 0x3a
   1244c:	beq	12464 <el_line@plt+0xffb0>
   12450:	cmp	r3, #0
   12454:	beq	12478 <el_line@plt+0xffc4>
   12458:	mov	r0, #0
   1245c:	pop	{r3, r4, r5, pc}
   12460:	mov	r1, r4
   12464:	mov	r3, #0
   12468:	mov	r0, r4
   1246c:	strb	r3, [r1], #1
   12470:	str	r1, [r5]
   12474:	pop	{r3, r4, r5, pc}
   12478:	str	r3, [r5]
   1247c:	mov	r0, r4
   12480:	pop	{r3, r4, r5, pc}
   12484:	mov	r0, r4
   12488:	mov	r1, #93	; 0x5d
   1248c:	bl	2490 <strchr@plt>
   12490:	cmp	r0, #0
   12494:	popeq	{r3, r4, r5, pc}
   12498:	add	r1, r0, #1
   1249c:	ldrb	r3, [r0, #1]
   124a0:	b	12440 <el_line@plt+0xff8c>
   124a4:	mov	r0, r4
   124a8:	pop	{r3, r4, r5, pc}
   124ac:	mov	r0, r5
   124b0:	pop	{r3, r4, r5, pc}
   124b4:	push	{r4, lr}
   124b8:	mov	r4, r0
   124bc:	ldrb	r3, [r0]
   124c0:	cmp	r3, #91	; 0x5b
   124c4:	beq	124d0 <el_line@plt+0x1001c>
   124c8:	mov	r0, r4
   124cc:	pop	{r4, pc}
   124d0:	bl	2310 <strlen@plt>
   124d4:	sub	r3, r0, #1
   124d8:	ldrb	r2, [r4, r3]
   124dc:	cmp	r2, #93	; 0x5d
   124e0:	bne	124c8 <el_line@plt+0x10014>
   124e4:	mov	r2, #0
   124e8:	add	r0, r4, #1
   124ec:	strb	r2, [r4, r3]
   124f0:	pop	{r4, pc}
   124f4:	ldrb	r3, [r0]
   124f8:	cmp	r3, #58	; 0x3a
   124fc:	beq	12598 <el_line@plt+0x100e4>
   12500:	subs	r1, r3, #91	; 0x5b
   12504:	rsbs	r2, r1, #0
   12508:	adcs	r2, r2, r1
   1250c:	cmp	r3, #0
   12510:	bne	12538 <el_line@plt+0x10084>
   12514:	b	12580 <el_line@plt+0x100cc>
   12518:	cmp	r3, #58	; 0x3a
   1251c:	beq	12564 <el_line@plt+0x100b0>
   12520:	cmp	r3, #47	; 0x2f
   12524:	beq	12598 <el_line@plt+0x100e4>
   12528:	ldrb	r3, [r0, #1]
   1252c:	cmp	r3, #0
   12530:	add	r0, r0, #1
   12534:	beq	12580 <el_line@plt+0x100cc>
   12538:	cmp	r3, #64	; 0x40
   1253c:	beq	12588 <el_line@plt+0x100d4>
   12540:	cmp	r3, #93	; 0x5d
   12544:	bne	12518 <el_line@plt+0x10064>
   12548:	ldrb	r3, [r0, #1]
   1254c:	cmp	r3, #58	; 0x3a
   12550:	bne	1252c <el_line@plt+0x10078>
   12554:	cmp	r2, #0
   12558:	beq	1252c <el_line@plt+0x10078>
   1255c:	add	r0, r0, #1
   12560:	bx	lr
   12564:	cmp	r2, #0
   12568:	bxeq	lr
   1256c:	ldrb	r3, [r0, #1]
   12570:	mov	r2, #1
   12574:	add	r0, r0, #1
   12578:	cmp	r3, #0
   1257c:	bne	12538 <el_line@plt+0x10084>
   12580:	mov	r0, r3
   12584:	bx	lr
   12588:	ldrb	r3, [r0, #1]
   1258c:	cmp	r3, #91	; 0x5b
   12590:	moveq	r2, #1
   12594:	b	1252c <el_line@plt+0x10078>
   12598:	mov	r0, #0
   1259c:	bx	lr
   125a0:	ldr	ip, [pc, #364]	; 12714 <el_line@plt+0x10260>
   125a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125a8:	subs	r9, r1, #0
   125ac:	ldr	r1, [pc, #356]	; 12718 <el_line@plt+0x10264>
   125b0:	add	ip, pc, ip
   125b4:	mov	r6, r3
   125b8:	sub	sp, sp, #8
   125bc:	mov	r7, r2
   125c0:	ldr	r5, [ip, r1]
   125c4:	ldr	r3, [r5]
   125c8:	str	r3, [sp, #4]
   125cc:	movne	r3, #0
   125d0:	strne	r3, [r9]
   125d4:	cmp	r2, #0
   125d8:	movne	r3, #0
   125dc:	strne	r3, [r2]
   125e0:	cmp	r6, #0
   125e4:	mvnne	r3, #0
   125e8:	strne	r3, [r6]
   125ec:	bl	20d0 <__strdup@plt>
   125f0:	cmp	r0, #0
   125f4:	mov	r4, r0
   125f8:	str	r0, [sp]
   125fc:	beq	12708 <el_line@plt+0x10254>
   12600:	mov	r1, #64	; 0x40
   12604:	bl	2490 <strchr@plt>
   12608:	subs	r8, r0, #0
   1260c:	beq	126f0 <el_line@plt+0x1023c>
   12610:	mov	r3, #0
   12614:	strb	r3, [r8]
   12618:	ldr	r0, [sp]
   1261c:	ldrb	r3, [r0]
   12620:	cmp	r3, #0
   12624:	bne	12668 <el_line@plt+0x101b4>
   12628:	mov	r8, #0
   1262c:	mvn	r6, #0
   12630:	mov	sl, r8
   12634:	mov	r0, r4
   12638:	bl	1f20 <free@plt>
   1263c:	mov	r0, sl
   12640:	bl	1f20 <free@plt>
   12644:	mov	r0, r8
   12648:	bl	1f20 <free@plt>
   1264c:	mov	r0, r6
   12650:	ldr	r2, [sp, #4]
   12654:	ldr	r3, [r5]
   12658:	cmp	r2, r3
   1265c:	bne	12710 <el_line@plt+0x1025c>
   12660:	add	sp, sp, #8
   12664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12668:	bl	20d0 <__strdup@plt>
   1266c:	subs	sl, r0, #0
   12670:	beq	12628 <el_line@plt+0x10174>
   12674:	add	r8, r8, #1
   12678:	str	r8, [sp]
   1267c:	mov	r0, sp
   12680:	bl	123cc <el_line@plt+0xff18>
   12684:	subs	r8, r0, #0
   12688:	beq	12698 <el_line@plt+0x101e4>
   1268c:	ldrb	r8, [r8]
   12690:	cmp	r8, #0
   12694:	bne	126a0 <el_line@plt+0x101ec>
   12698:	mvn	r6, #0
   1269c:	b	12634 <el_line@plt+0x10180>
   126a0:	bl	124b4 <el_line@plt+0x10000>
   126a4:	bl	1163c <el_line@plt+0xf188>
   126a8:	mov	r8, r0
   126ac:	ldr	r0, [sp]
   126b0:	cmp	r0, #0
   126b4:	beq	126c4 <el_line@plt+0x10210>
   126b8:	ldrb	r3, [r0]
   126bc:	cmp	r3, #0
   126c0:	bne	126f8 <el_line@plt+0x10244>
   126c4:	mvn	r0, #0
   126c8:	cmp	r9, #0
   126cc:	strne	sl, [r9]
   126d0:	movne	sl, #0
   126d4:	cmp	r7, #0
   126d8:	strne	r8, [r7]
   126dc:	movne	r8, #0
   126e0:	cmp	r6, #0
   126e4:	strne	r0, [r6]
   126e8:	movne	r6, #0
   126ec:	b	12634 <el_line@plt+0x10180>
   126f0:	mov	sl, r8
   126f4:	b	1267c <el_line@plt+0x101c8>
   126f8:	bl	11fec <el_line@plt+0xfb38>
   126fc:	cmp	r0, #0
   12700:	bgt	126c8 <el_line@plt+0x10214>
   12704:	b	12698 <el_line@plt+0x101e4>
   12708:	mvn	r0, #0
   1270c:	b	12650 <el_line@plt+0x1019c>
   12710:	bl	21e4 <__stack_chk_fail@plt>
   12714:			; <UNDEFINED> instruction: 0x0001c7b4
   12718:	andeq	r0, r0, ip, lsr #4
   1271c:	push	{r1, r2, r3}
   12720:	mov	r1, #1
   12724:	push	{r4, r5, r6, lr}
   12728:	sub	sp, sp, #20
   1272c:	ldr	lr, [pc, #192]	; 127f4 <el_line@plt+0x10340>
   12730:	add	ip, sp, #40	; 0x28
   12734:	ldr	r5, [pc, #188]	; 127f8 <el_line@plt+0x10344>
   12738:	mov	r4, r0
   1273c:	add	lr, pc, lr
   12740:	mov	r3, ip
   12744:	ldr	r2, [sp, #36]	; 0x24
   12748:	add	r0, sp, #8
   1274c:	ldr	r6, [lr, r5]
   12750:	str	ip, [sp, #4]
   12754:	ldr	ip, [r6]
   12758:	str	ip, [sp, #12]
   1275c:	bl	2418 <__vasprintf_chk@plt>
   12760:	cmn	r0, #1
   12764:	beq	127e4 <el_line@plt+0x10330>
   12768:	ldr	r0, [r4]
   1276c:	ldr	r5, [r4, #8]
   12770:	cmp	r0, #0
   12774:	streq	r0, [r4, #4]
   12778:	moveq	r5, #32
   1277c:	beq	12790 <el_line@plt+0x102dc>
   12780:	ldr	r3, [r4, #4]
   12784:	add	r3, r3, #2
   12788:	cmp	r5, r3
   1278c:	lslls	r5, r5, #1
   12790:	mov	r1, r5
   12794:	mov	r2, #4
   12798:	bl	1160c <el_line@plt+0xf158>
   1279c:	ldr	r3, [r4, #4]
   127a0:	ldr	r2, [sp, #8]
   127a4:	mov	ip, #0
   127a8:	add	r1, r3, #1
   127ac:	stmib	r4, {r1, r5}
   127b0:	str	r0, [r4]
   127b4:	str	r2, [r0, r3, lsl #2]
   127b8:	ldr	r3, [r4]
   127bc:	ldr	r1, [r4, #4]
   127c0:	ldr	r2, [sp, #12]
   127c4:	str	ip, [r3, r1, lsl #2]
   127c8:	ldr	r3, [r6]
   127cc:	cmp	r2, r3
   127d0:	bne	127f0 <el_line@plt+0x1033c>
   127d4:	add	sp, sp, #20
   127d8:	pop	{r4, r5, r6, lr}
   127dc:	add	sp, sp, #12
   127e0:	bx	lr
   127e4:	ldr	r0, [pc, #16]	; 127fc <el_line@plt+0x10348>
   127e8:	add	r0, pc, r0
   127ec:	bl	10980 <el_line@plt+0xe4cc>
   127f0:	bl	21e4 <__stack_chk_fail@plt>
   127f4:	andeq	ip, r1, r8, lsr #12
   127f8:	andeq	r0, r0, ip, lsr #4
   127fc:	andeq	sl, r0, r4, lsl #18
   12800:	push	{r2, r3}
   12804:	push	{r4, r5, r6, lr}
   12808:	sub	sp, sp, #16
   1280c:	ldr	lr, [pc, #160]	; 128b4 <el_line@plt+0x10400>
   12810:	add	ip, sp, #36	; 0x24
   12814:	ldr	r6, [pc, #156]	; 128b8 <el_line@plt+0x10404>
   12818:	mov	r5, r0
   1281c:	add	lr, pc, lr
   12820:	mov	r3, ip
   12824:	ldr	r2, [sp, #32]
   12828:	mov	r4, r1
   1282c:	ldr	r6, [lr, r6]
   12830:	add	r0, sp, #8
   12834:	str	ip, [sp, #4]
   12838:	mov	r1, #1
   1283c:	ldr	ip, [r6]
   12840:	str	ip, [sp, #12]
   12844:	bl	2418 <__vasprintf_chk@plt>
   12848:	cmn	r0, #1
   1284c:	beq	12894 <el_line@plt+0x103e0>
   12850:	ldr	r2, [r5, #4]
   12854:	cmp	r2, r4
   12858:	bls	128a4 <el_line@plt+0x103f0>
   1285c:	ldr	r3, [r5]
   12860:	ldr	r0, [r3, r4, lsl #2]
   12864:	bl	1f20 <free@plt>
   12868:	ldr	r3, [r5]
   1286c:	ldr	r1, [sp, #8]
   12870:	ldr	r2, [sp, #12]
   12874:	str	r1, [r3, r4, lsl #2]
   12878:	ldr	r3, [r6]
   1287c:	cmp	r2, r3
   12880:	bne	128a0 <el_line@plt+0x103ec>
   12884:	add	sp, sp, #16
   12888:	pop	{r4, r5, r6, lr}
   1288c:	add	sp, sp, #8
   12890:	bx	lr
   12894:	ldr	r0, [pc, #32]	; 128bc <el_line@plt+0x10408>
   12898:	add	r0, pc, r0
   1289c:	bl	10980 <el_line@plt+0xe4cc>
   128a0:	bl	21e4 <__stack_chk_fail@plt>
   128a4:	ldr	r0, [pc, #20]	; 128c0 <el_line@plt+0x1040c>
   128a8:	mov	r1, r4
   128ac:	add	r0, pc, r0
   128b0:	bl	10980 <el_line@plt+0xe4cc>
   128b4:	andeq	ip, r1, r8, asr #10
   128b8:	andeq	r0, r0, ip, lsr #4
   128bc:	andeq	sl, r0, r0, ror r8
   128c0:	andeq	sl, r0, ip, ror r8
   128c4:	push	{r3, r4, r5, lr}
   128c8:	mov	r5, r0
   128cc:	ldr	r0, [r0]
   128d0:	cmp	r0, #0
   128d4:	popeq	{r3, r4, r5, pc}
   128d8:	ldr	r3, [r5, #4]
   128dc:	cmp	r3, #0
   128e0:	beq	12900 <el_line@plt+0x1044c>
   128e4:	mov	r4, #0
   128e8:	ldr	r0, [r0, r4, lsl #2]
   128ec:	add	r4, r4, #1
   128f0:	bl	1f20 <free@plt>
   128f4:	ldm	r5, {r0, r3}
   128f8:	cmp	r3, r4
   128fc:	bhi	128e8 <el_line@plt+0x10434>
   12900:	bl	1f20 <free@plt>
   12904:	mov	r3, #0
   12908:	str	r3, [r5, #4]
   1290c:	str	r3, [r5, #8]
   12910:	str	r3, [r5]
   12914:	pop	{r3, r4, r5, pc}
   12918:	ldr	r3, [pc, #376]	; 12a98 <el_line@plt+0x105e4>
   1291c:	ldr	r2, [pc, #376]	; 12a9c <el_line@plt+0x105e8>
   12920:	add	r3, pc, r3
   12924:	push	{r4, r5, r6, r7, r8, r9, lr}
   12928:	mov	r6, r1
   1292c:	ldr	r5, [r3, r2]
   12930:	sub	sp, sp, #148	; 0x94
   12934:	ldrb	r1, [r0]
   12938:	ldr	r3, [r5]
   1293c:	cmp	r1, #126	; 0x7e
   12940:	str	r3, [sp, #140]	; 0x8c
   12944:	bne	12a2c <el_line@plt+0x10578>
   12948:	add	r4, r0, #1
   1294c:	mov	r1, #47	; 0x2f
   12950:	mov	r0, r4
   12954:	bl	2490 <strchr@plt>
   12958:	adds	r9, r0, #0
   1295c:	mov	r7, r0
   12960:	movne	r9, #1
   12964:	cmp	r0, #0
   12968:	cmpne	r0, r4
   1296c:	bls	12a40 <el_line@plt+0x1058c>
   12970:	mov	r1, r4
   12974:	bl	19350 <el_line@plt+0x16e9c>
   12978:	cmp	r0, #127	; 0x7f
   1297c:	mov	r6, r0
   12980:	bhi	12a7c <el_line@plt+0x105c8>
   12984:	add	r8, sp, #12
   12988:	mov	r2, r0
   1298c:	mov	r1, r4
   12990:	mov	r3, #128	; 0x80
   12994:	mov	r0, r8
   12998:	bl	1ea8 <__memcpy_chk@plt>
   1299c:	add	r3, sp, #144	; 0x90
   129a0:	add	r6, r3, r6
   129a4:	mov	r0, r8
   129a8:	mov	r3, #0
   129ac:	strb	r3, [r6, #-132]	; 0xffffff7c
   129b0:	bl	1e84 <getpwnam@plt>
   129b4:	cmp	r0, #0
   129b8:	beq	12a88 <el_line@plt+0x105d4>
   129bc:	ldr	r6, [r0, #20]
   129c0:	mov	r0, r6
   129c4:	bl	2310 <strlen@plt>
   129c8:	cmp	r0, #0
   129cc:	beq	12a34 <el_line@plt+0x10580>
   129d0:	add	r0, r6, r0
   129d4:	ldrb	r3, [r0, #-1]
   129d8:	cmp	r3, #47	; 0x2f
   129dc:	beq	12a60 <el_line@plt+0x105ac>
   129e0:	ldr	r3, [pc, #184]	; 12aa0 <el_line@plt+0x105ec>
   129e4:	add	r3, pc, r3
   129e8:	ldr	r1, [pc, #180]	; 12aa4 <el_line@plt+0x105f0>
   129ec:	cmp	r9, #0
   129f0:	addne	r4, r7, #1
   129f4:	mov	r2, r6
   129f8:	str	r4, [sp]
   129fc:	add	r0, sp, #8
   12a00:	add	r1, pc, r1
   12a04:	bl	1166c <el_line@plt+0xf1b8>
   12a08:	cmp	r0, #4096	; 0x1000
   12a0c:	ldrlt	r0, [sp, #8]
   12a10:	bge	12a70 <el_line@plt+0x105bc>
   12a14:	ldr	r2, [sp, #140]	; 0x8c
   12a18:	ldr	r3, [r5]
   12a1c:	cmp	r2, r3
   12a20:	bne	12a6c <el_line@plt+0x105b8>
   12a24:	add	sp, sp, #148	; 0x94
   12a28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12a2c:	bl	1163c <el_line@plt+0xf188>
   12a30:	b	12a14 <el_line@plt+0x10560>
   12a34:	ldr	r3, [pc, #108]	; 12aa8 <el_line@plt+0x105f4>
   12a38:	add	r3, pc, r3
   12a3c:	b	129e8 <el_line@plt+0x10534>
   12a40:	mov	r0, r6
   12a44:	bl	2004 <getpwuid@plt>
   12a48:	cmp	r0, #0
   12a4c:	bne	129bc <el_line@plt+0x10508>
   12a50:	ldr	r0, [pc, #84]	; 12aac <el_line@plt+0x105f8>
   12a54:	mov	r1, r6
   12a58:	add	r0, pc, r0
   12a5c:	bl	10980 <el_line@plt+0xe4cc>
   12a60:	ldr	r3, [pc, #72]	; 12ab0 <el_line@plt+0x105fc>
   12a64:	add	r3, pc, r3
   12a68:	b	129e8 <el_line@plt+0x10534>
   12a6c:	bl	21e4 <__stack_chk_fail@plt>
   12a70:	ldr	r0, [pc, #60]	; 12ab4 <el_line@plt+0x10600>
   12a74:	add	r0, pc, r0
   12a78:	bl	10980 <el_line@plt+0xe4cc>
   12a7c:	ldr	r0, [pc, #52]	; 12ab8 <el_line@plt+0x10604>
   12a80:	add	r0, pc, r0
   12a84:	bl	10980 <el_line@plt+0xe4cc>
   12a88:	ldr	r0, [pc, #44]	; 12abc <el_line@plt+0x10608>
   12a8c:	mov	r1, r8
   12a90:	add	r0, pc, r0
   12a94:	bl	10980 <el_line@plt+0xe4cc>
   12a98:	andeq	ip, r1, r4, asr #8
   12a9c:	andeq	r0, r0, ip, lsr #4
   12aa0:	andeq	r9, r0, ip, lsl #19
   12aa4:	ldrdeq	sl, [r0], -r8
   12aa8:	andeq	r9, r0, r8, lsr r9
   12aac:	andeq	sl, r0, r8, asr r7
   12ab0:			; <UNDEFINED> instruction: 0x000078b4
   12ab4:	andeq	sl, r0, ip, ror #14
   12ab8:	ldrdeq	sl, [r0], -ip
   12abc:	strdeq	sl, [r0], -r8
   12ac0:	push	{r0, r1, r2, r3}
   12ac4:	movw	r1, #61304	; 0xef78
   12ac8:	ldr	r0, [pc, #608]	; 12d30 <el_line@plt+0x1087c>
   12acc:	movt	r1, #65535	; 0xffff
   12ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ad4:	add	r0, pc, r0
   12ad8:	ldr	lr, [pc, #596]	; 12d34 <el_line@plt+0x10880>
   12adc:	sub	sp, sp, #4224	; 0x1080
   12ae0:	sub	sp, sp, #28
   12ae4:	mov	r3, #0
   12ae8:	add	r2, sp, #8192	; 0x2000
   12aec:	add	ip, sp, #4288	; 0x10c0
   12af0:	ldr	lr, [r0, lr]
   12af4:	add	r0, sp, #4224	; 0x1080
   12af8:	add	r0, r0, #24
   12afc:	add	ip, ip, #4
   12b00:	ldr	r6, [r2, #-3904]	; 0xfffff0c0
   12b04:	add	r8, sp, #20
   12b08:	str	lr, [sp, #12]
   12b0c:	add	lr, sp, #24
   12b10:	str	lr, [sp, #8]
   12b14:	add	r2, ip, #8
   12b18:	ldr	lr, [sp, #12]
   12b1c:	mov	r5, r3
   12b20:	str	ip, [r0, r1]
   12b24:	add	r0, sp, #8192	; 0x2000
   12b28:	ldr	r1, [lr]
   12b2c:	str	r1, [r0, #-3948]	; 0xfffff094
   12b30:	ldr	r1, [r2, #-8]
   12b34:	mov	lr, r2
   12b38:	cmp	r1, #0
   12b3c:	str	r1, [r8, r3]
   12b40:	beq	12b94 <el_line@plt+0x106e0>
   12b44:	add	r1, ip, r3
   12b48:	add	r0, r8, r3
   12b4c:	ldr	r1, [r1, #4]
   12b50:	cmp	r1, #0
   12b54:	str	r1, [r0, #4]
   12b58:	beq	12d04 <el_line@plt+0x10850>
   12b5c:	add	r5, r5, #1
   12b60:	add	r2, r2, #8
   12b64:	cmp	r5, #16
   12b68:	add	r3, r3, #8
   12b6c:	bne	12b30 <el_line@plt+0x1067c>
   12b70:	ldr	r2, [lr]
   12b74:	add	r0, sp, #4224	; 0x1080
   12b78:	movw	r3, #61304	; 0xef78
   12b7c:	add	r0, r0, #24
   12b80:	movt	r3, #65535	; 0xffff
   12b84:	cmp	r2, #0
   12b88:	add	lr, lr, #4
   12b8c:	str	lr, [r0, r3]
   12b90:	bne	12cf0 <el_line@plt+0x1083c>
   12b94:	ldrb	r3, [r6]
   12b98:	add	r1, sp, #4224	; 0x1080
   12b9c:	movw	r2, #61436	; 0xeffc
   12ba0:	add	r1, r1, #24
   12ba4:	movt	r2, #65535	; 0xffff
   12ba8:	mov	r0, #0
   12bac:	cmp	r3, r0
   12bb0:	strb	r0, [r1, r2]
   12bb4:	addne	r2, sp, #148	; 0x94
   12bb8:	movne	sl, r0
   12bbc:	strne	r2, [sp]
   12bc0:	movne	r9, r2
   12bc4:	bne	12c00 <el_line@plt+0x1074c>
   12bc8:	b	12ca4 <el_line@plt+0x107f0>
   12bcc:	ldrb	r2, [r6]
   12bd0:	mov	r7, r6
   12bd4:	add	r3, r0, #1
   12bd8:	strb	r2, [r9, r0]
   12bdc:	cmp	r3, #4096	; 0x1000
   12be0:	mov	r4, r9
   12be4:	bcs	12cdc <el_line@plt+0x10828>
   12be8:	mov	r0, r3
   12bec:	strb	sl, [r9, r3]
   12bf0:	ldrb	r3, [r7, #1]
   12bf4:	add	r6, r7, #1
   12bf8:	cmp	r3, #0
   12bfc:	beq	12ca8 <el_line@plt+0x107f4>
   12c00:	cmp	r3, #37	; 0x25
   12c04:	bne	12bcc <el_line@plt+0x10718>
   12c08:	ldrb	r4, [r6, #1]
   12c0c:	add	r7, r6, #1
   12c10:	cmp	r4, #37	; 0x25
   12c14:	beq	12c9c <el_line@plt+0x107e8>
   12c18:	cmp	r4, #0
   12c1c:	beq	12d1c <el_line@plt+0x10868>
   12c20:	cmp	r5, #0
   12c24:	str	r4, [sp, #4]
   12c28:	beq	12c84 <el_line@plt+0x107d0>
   12c2c:	mov	fp, #0
   12c30:	b	12c40 <el_line@plt+0x1078c>
   12c34:	add	fp, fp, #1
   12c38:	cmp	fp, r5
   12c3c:	beq	12c84 <el_line@plt+0x107d0>
   12c40:	ldr	r0, [r8, fp, lsl #3]
   12c44:	mov	r1, r4
   12c48:	bl	2490 <strchr@plt>
   12c4c:	cmp	r0, #0
   12c50:	beq	12c34 <el_line@plt+0x10780>
   12c54:	ldr	r0, [sp]
   12c58:	add	r2, sp, #24
   12c5c:	ldr	r1, [r2, fp, lsl #3]
   12c60:	mov	r2, #4096	; 0x1000
   12c64:	mov	r4, r0
   12c68:	bl	17704 <el_line@plt+0x15250>
   12c6c:	cmp	r0, #4096	; 0x1000
   12c70:	bcs	12cdc <el_line@plt+0x10828>
   12c74:	cmp	fp, r5
   12c78:	bcc	12bf0 <el_line@plt+0x1073c>
   12c7c:	ldrb	r6, [r6, #1]
   12c80:	str	r6, [sp, #4]
   12c84:	ldr	r0, [pc, #172]	; 12d38 <el_line@plt+0x10884>
   12c88:	ldr	r1, [pc, #172]	; 12d3c <el_line@plt+0x10888>
   12c8c:	ldr	r2, [sp, #4]
   12c90:	add	r0, pc, r0
   12c94:	add	r1, pc, r1
   12c98:	bl	10980 <el_line@plt+0xe4cc>
   12c9c:	mov	r2, r3
   12ca0:	b	12bd4 <el_line@plt+0x10720>
   12ca4:	add	r4, sp, #148	; 0x94
   12ca8:	mov	r0, r4
   12cac:	bl	1163c <el_line@plt+0xf188>
   12cb0:	ldr	r1, [sp, #12]
   12cb4:	add	r3, sp, #8192	; 0x2000
   12cb8:	ldr	r2, [r3, #-3948]	; 0xfffff094
   12cbc:	ldr	r3, [r1]
   12cc0:	cmp	r2, r3
   12cc4:	bne	12d18 <el_line@plt+0x10864>
   12cc8:	add	sp, sp, #4224	; 0x1080
   12ccc:	add	sp, sp, #28
   12cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cd4:	add	sp, sp, #16
   12cd8:	bx	lr
   12cdc:	ldr	r0, [pc, #92]	; 12d40 <el_line@plt+0x1088c>
   12ce0:	ldr	r1, [pc, #92]	; 12d44 <el_line@plt+0x10890>
   12ce4:	add	r0, pc, r0
   12ce8:	add	r1, pc, r1
   12cec:	bl	10980 <el_line@plt+0xe4cc>
   12cf0:	ldr	r0, [pc, #80]	; 12d48 <el_line@plt+0x10894>
   12cf4:	ldr	r1, [pc, #80]	; 12d4c <el_line@plt+0x10898>
   12cf8:	add	r0, pc, r0
   12cfc:	add	r1, pc, r1
   12d00:	bl	10980 <el_line@plt+0xe4cc>
   12d04:	ldr	r0, [pc, #68]	; 12d50 <el_line@plt+0x1089c>
   12d08:	ldr	r1, [pc, #68]	; 12d54 <el_line@plt+0x108a0>
   12d0c:	add	r0, pc, r0
   12d10:	add	r1, pc, r1
   12d14:	bl	10980 <el_line@plt+0xe4cc>
   12d18:	bl	21e4 <__stack_chk_fail@plt>
   12d1c:	ldr	r0, [pc, #52]	; 12d58 <el_line@plt+0x108a4>
   12d20:	ldr	r1, [pc, #52]	; 12d5c <el_line@plt+0x108a8>
   12d24:	add	r0, pc, r0
   12d28:	add	r1, pc, r1
   12d2c:	bl	10980 <el_line@plt+0xe4cc>
   12d30:	muleq	r1, r0, r2
   12d34:	andeq	r0, r0, ip, lsr #4
   12d38:	andeq	sl, r0, ip, asr #11
   12d3c:	andeq	sl, r0, r8, lsl #5
   12d40:	andeq	sl, r0, r0, asr r5
   12d44:	andeq	sl, r0, r4, lsr r2
   12d48:	andeq	sl, r0, r8, lsr #10
   12d4c:	andeq	sl, r0, r0, lsr #4
   12d50:	strdeq	sl, [r0], -ip
   12d54:	andeq	sl, r0, ip, lsl #4
   12d58:	andeq	sl, r0, r4, lsr #10
   12d5c:	strdeq	sl, [r0], -r4
   12d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d64:	mov	r4, r0
   12d68:	ldr	r9, [pc, #188]	; 12e2c <el_line@plt+0x10978>
   12d6c:	mov	sl, r1
   12d70:	ldr	r8, [pc, #184]	; 12e30 <el_line@plt+0x1097c>
   12d74:	mov	r5, r2
   12d78:	add	r9, pc, r9
   12d7c:	ldr	r6, [sp, #32]
   12d80:	add	r9, r9, #16
   12d84:	add	r8, pc, r8
   12d88:	mov	r7, r3
   12d8c:	mov	r0, r5
   12d90:	mov	r1, r7
   12d94:	mov	r2, r4
   12d98:	bl	22b0 <fgets@plt>
   12d9c:	cmp	r0, #0
   12da0:	beq	12e1c <el_line@plt+0x10968>
   12da4:	ldrb	ip, [r5]
   12da8:	cmp	ip, #0
   12dac:	beq	12d8c <el_line@plt+0x108d8>
   12db0:	ldr	r3, [r6]
   12db4:	mov	r0, r5
   12db8:	add	r3, r3, #1
   12dbc:	str	r3, [r6]
   12dc0:	bl	2310 <strlen@plt>
   12dc4:	add	r0, r5, r0
   12dc8:	ldrb	r3, [r0, #-1]
   12dcc:	cmp	r3, #10
   12dd0:	beq	12e24 <el_line@plt+0x10970>
   12dd4:	mov	r0, r4
   12dd8:	bl	1fbc <feof@plt>
   12ddc:	cmp	r0, #0
   12de0:	bne	12e24 <el_line@plt+0x10970>
   12de4:	mov	r0, r8
   12de8:	mov	r1, r9
   12dec:	mov	r2, sl
   12df0:	ldr	r3, [r6]
   12df4:	bl	113bc <el_line@plt+0xef08>
   12df8:	mov	r0, r4
   12dfc:	bl	1f68 <fgetc@plt>
   12e00:	cmp	r0, #10
   12e04:	mov	r0, r4
   12e08:	beq	12d8c <el_line@plt+0x108d8>
   12e0c:	bl	1fbc <feof@plt>
   12e10:	cmp	r0, #0
   12e14:	beq	12df8 <el_line@plt+0x10944>
   12e18:	b	12d8c <el_line@plt+0x108d8>
   12e1c:	mvn	r0, #0
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e24:	mov	r0, #0
   12e28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e2c:	andeq	sl, r0, r4, lsr #3
   12e30:	strdeq	sl, [r0], -r0
   12e34:	b	18418 <el_line@plt+0x15f64>
   12e38:	ldr	r0, [pc, #244]	; 12f34 <el_line@plt+0x10a80>
   12e3c:	mov	r1, #2
   12e40:	push	{r3, r4, r5, r6, r7, lr}
   12e44:	add	r0, pc, r0
   12e48:	bl	2184 <open64@plt>
   12e4c:	ldr	r7, [pc, #228]	; 12f38 <el_line@plt+0x10a84>
   12e50:	add	r7, pc, r7
   12e54:	cmn	r0, #1
   12e58:	mov	r6, r0
   12e5c:	beq	12efc <el_line@plt+0x10a48>
   12e60:	mov	r4, r0
   12e64:	mov	r0, r4
   12e68:	mov	r1, #1
   12e6c:	bl	192bc <el_line@plt+0x16e08>
   12e70:	cmp	r0, #2
   12e74:	mov	r4, r0
   12e78:	bgt	12ee8 <el_line@plt+0x10a34>
   12e7c:	mov	r1, #3
   12e80:	bl	20a0 <fcntl@plt>
   12e84:	cmn	r0, #1
   12e88:	bne	12e64 <el_line@plt+0x109b0>
   12e8c:	bl	23ac <__errno_location@plt>
   12e90:	ldr	r3, [r0]
   12e94:	mov	r5, r0
   12e98:	cmp	r3, #9
   12e9c:	bne	12e64 <el_line@plt+0x109b0>
   12ea0:	mov	r0, r6
   12ea4:	mov	r1, r4
   12ea8:	bl	2154 <dup2@plt>
   12eac:	cmn	r0, #1
   12eb0:	bne	12e64 <el_line@plt+0x109b0>
   12eb4:	ldr	r3, [pc, #128]	; 12f3c <el_line@plt+0x10a88>
   12eb8:	ldr	r0, [r5]
   12ebc:	ldr	r3, [r7, r3]
   12ec0:	ldr	r4, [r3]
   12ec4:	bl	1fa4 <strerror@plt>
   12ec8:	ldr	r2, [pc, #112]	; 12f40 <el_line@plt+0x10a8c>
   12ecc:	mov	r1, #1
   12ed0:	add	r2, pc, r2
   12ed4:	mov	r3, r0
   12ed8:	mov	r0, r4
   12edc:	bl	2028 <__fprintf_chk@plt>
   12ee0:	mov	r0, #1
   12ee4:	bl	1f8c <exit@plt>
   12ee8:	cmp	r6, #2
   12eec:	pople	{r3, r4, r5, r6, r7, pc}
   12ef0:	mov	r0, r6
   12ef4:	pop	{r3, r4, r5, r6, r7, lr}
   12ef8:	b	20dc <close@plt>
   12efc:	ldr	r3, [pc, #56]	; 12f3c <el_line@plt+0x10a88>
   12f00:	ldr	r3, [r7, r3]
   12f04:	ldr	r4, [r3]
   12f08:	bl	23ac <__errno_location@plt>
   12f0c:	ldr	r0, [r0]
   12f10:	bl	1fa4 <strerror@plt>
   12f14:	ldr	r2, [pc, #40]	; 12f44 <el_line@plt+0x10a90>
   12f18:	mov	r1, #1
   12f1c:	add	r2, pc, r2
   12f20:	mov	r3, r0
   12f24:	mov	r0, r4
   12f28:	bl	2028 <__fprintf_chk@plt>
   12f2c:	mov	r0, #1
   12f30:	bl	1f8c <exit@plt>
   12f34:	andeq	sl, r0, r4, asr r4
   12f38:	andeq	fp, r1, r4, lsl pc
   12f3c:	andeq	r0, r0, r0, asr r2
   12f40:	ldrdeq	r7, [r0], -r8
   12f44:	andeq	sl, r0, r8, lsl #7
   12f48:	ldr	r3, [pc, #192]	; 13010 <el_line@plt+0x10b5c>
   12f4c:	cmp	r1, #65536	; 0x10000
   12f50:	ldr	r2, [pc, #188]	; 13014 <el_line@plt+0x10b60>
   12f54:	add	r3, pc, r3
   12f58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f5c:	sub	sp, sp, #16
   12f60:	ldr	sl, [r3, r2]
   12f64:	mov	r8, r1
   12f68:	mov	r4, r0
   12f6c:	ldr	r3, [sl]
   12f70:	str	r3, [sp, #12]
   12f74:	bhi	12ffc <el_line@plt+0x10b48>
   12f78:	lsl	r6, r1, #1
   12f7c:	mov	r0, #1
   12f80:	add	r6, r6, r0
   12f84:	mov	r1, r6
   12f88:	bl	11598 <el_line@plt+0xf0e4>
   12f8c:	cmp	r8, #0
   12f90:	mov	r7, r0
   12f94:	beq	12fe0 <el_line@plt+0x10b2c>
   12f98:	ldr	r9, [pc, #120]	; 13018 <el_line@plt+0x10b64>
   12f9c:	add	r5, sp, #8
   12fa0:	add	r8, r4, r8
   12fa4:	add	r9, pc, r9
   12fa8:	ldrb	ip, [r4], #1
   12fac:	mov	r1, #3
   12fb0:	mov	r3, r1
   12fb4:	mov	r2, #1
   12fb8:	str	r9, [sp]
   12fbc:	mov	r0, r5
   12fc0:	str	ip, [sp, #4]
   12fc4:	bl	231c <__snprintf_chk@plt>
   12fc8:	mov	r0, r7
   12fcc:	mov	r1, r5
   12fd0:	mov	r2, r6
   12fd4:	bl	17704 <el_line@plt+0x15250>
   12fd8:	cmp	r4, r8
   12fdc:	bne	12fa8 <el_line@plt+0x10af4>
   12fe0:	mov	r0, r7
   12fe4:	ldr	r2, [sp, #12]
   12fe8:	ldr	r3, [sl]
   12fec:	cmp	r2, r3
   12ff0:	bne	1300c <el_line@plt+0x10b58>
   12ff4:	add	sp, sp, #16
   12ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ffc:	ldr	r0, [pc, #24]	; 1301c <el_line@plt+0x10b68>
   13000:	add	r0, pc, r0
   13004:	bl	1163c <el_line@plt+0xf188>
   13008:	b	12fe4 <el_line@plt+0x10b30>
   1300c:	bl	21e4 <__stack_chk_fail@plt>
   13010:	andeq	fp, r1, r0, lsl lr
   13014:	andeq	r0, r0, ip, lsr #4
   13018:	andeq	sl, r0, r8, lsr r3
   1301c:	andeq	sl, r0, r4, asr #5
   13020:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   13024:	sub	sp, sp, #16
   13028:	ldrb	r6, [r0, #1]
   1302c:	mov	r2, #0
   13030:	ldrb	r4, [r0]
   13034:	orr	r8, r2, r2
   13038:	ldrb	sl, [r0, #2]
   1303c:	mov	r7, #0
   13040:	lsl	r5, r6, #16
   13044:	ldrb	r6, [r0, #7]
   13048:	lsl	r3, r4, #24
   1304c:	orr	r9, r3, r5
   13050:	strd	r8, [sp]
   13054:	strd	r6, [sp, #8]
   13058:	lsl	r9, sl, #8
   1305c:	ldrd	r4, [sp, #8]
   13060:	ldrd	sl, [sp]
   13064:	ldrb	r7, [r0, #3]
   13068:	orr	sl, sl, r4
   1306c:	orr	fp, fp, r5
   13070:	strd	sl, [sp]
   13074:	ldrd	r4, [sp]
   13078:	ldrb	sl, [r0, #4]
   1307c:	orr	r4, r4, r2
   13080:	orr	r5, r5, r9
   13084:	strd	r4, [sp]
   13088:	ldrd	r8, [sp]
   1308c:	lsr	r5, sl, #8
   13090:	lsl	r4, sl, #24
   13094:	ldrb	sl, [r0, #5]
   13098:	orr	r8, r8, r2
   1309c:	orr	r9, r9, r7
   130a0:	strd	r8, [sp]
   130a4:	ldrb	r6, [r0, #6]
   130a8:	lsr	r9, sl, #16
   130ac:	ldrd	r0, [sp]
   130b0:	lsl	r8, sl, #16
   130b4:	orr	r4, r4, r0
   130b8:	orr	r5, r5, r1
   130bc:	orr	r4, r4, r8
   130c0:	lsr	r1, r6, #24
   130c4:	orr	r5, r5, r9
   130c8:	lsl	r0, r6, #8
   130cc:	orr	r0, r0, r4
   130d0:	orr	r1, r1, r5
   130d4:	add	sp, sp, #16
   130d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   130dc:	bx	lr
   130e0:	ldrb	r3, [r0, #1]
   130e4:	ldrb	r1, [r0]
   130e8:	ldrb	r2, [r0, #3]
   130ec:	lsl	r3, r3, #16
   130f0:	ldrb	r0, [r0, #2]
   130f4:	orr	r3, r3, r1, lsl #24
   130f8:	orr	r3, r3, r2
   130fc:	orr	r0, r3, r0, lsl #8
   13100:	bx	lr
   13104:	ldrb	r3, [r0, #2]
   13108:	ldrb	r1, [r0, #1]
   1310c:	ldrb	r2, [r0]
   13110:	lsl	r3, r3, #16
   13114:	ldrb	r0, [r0, #3]
   13118:	orr	r3, r3, r1, lsl #8
   1311c:	orr	r3, r3, r2
   13120:	orr	r0, r3, r0, lsl #24
   13124:	bx	lr
   13128:	ldrb	r2, [r0]
   1312c:	ldrb	r0, [r0, #1]
   13130:	orr	r0, r0, r2, lsl #8
   13134:	bx	lr
   13138:	lsr	ip, r3, #24
   1313c:	lsr	r1, r3, #16
   13140:	strb	r3, [r0, #3]
   13144:	lsr	r3, r3, #8
   13148:	strb	r2, [r0, #7]
   1314c:	strb	ip, [r0]
   13150:	lsr	ip, r2, #24
   13154:	strb	r1, [r0, #1]
   13158:	lsr	r1, r2, #16
   1315c:	strb	r3, [r0, #2]
   13160:	lsr	r2, r2, #8
   13164:	strb	ip, [r0, #4]
   13168:	strb	r1, [r0, #5]
   1316c:	strb	r2, [r0, #6]
   13170:	bx	lr
   13174:	lsr	r2, r1, #24
   13178:	lsr	r3, r1, #16
   1317c:	strb	r1, [r0, #3]
   13180:	lsr	r1, r1, #8
   13184:	strb	r2, [r0]
   13188:	strb	r3, [r0, #1]
   1318c:	strb	r1, [r0, #2]
   13190:	bx	lr
   13194:	lsr	r2, r1, #8
   13198:	lsr	r3, r1, #16
   1319c:	strb	r1, [r0]
   131a0:	lsr	r1, r1, #24
   131a4:	strb	r2, [r0, #1]
   131a8:	strb	r3, [r0, #2]
   131ac:	strb	r1, [r0, #3]
   131b0:	bx	lr
   131b4:	strb	r1, [r0, #1]
   131b8:	lsr	r1, r1, #8
   131bc:	strb	r1, [r0]
   131c0:	bx	lr
   131c4:	ldr	r3, [pc, #200]	; 13294 <el_line@plt+0x10de0>
   131c8:	ldr	r2, [pc, #200]	; 13298 <el_line@plt+0x10de4>
   131cc:	add	r3, pc, r3
   131d0:	push	{r4, r5, r6, r7, lr}
   131d4:	sub	sp, sp, #20
   131d8:	ldr	r5, [r3, r2]
   131dc:	mov	r4, r0
   131e0:	mov	r6, r1
   131e4:	add	r0, sp, #4
   131e8:	mov	r1, #0
   131ec:	ldr	r3, [r5]
   131f0:	str	r3, [sp, #12]
   131f4:	bl	1ec0 <gettimeofday@plt>
   131f8:	ldr	r1, [r4]
   131fc:	ldr	r0, [sp, #4]
   13200:	bl	19350 <el_line@plt+0x16e9c>
   13204:	ldr	r1, [r4, #4]
   13208:	mov	r7, r0
   1320c:	ldr	r0, [sp, #8]
   13210:	bl	19350 <el_line@plt+0x16e9c>
   13214:	subs	r4, r0, #0
   13218:	bge	13240 <el_line@plt+0x10d8c>
   1321c:	mov	r0, r7
   13220:	mvn	r1, #0
   13224:	bl	192bc <el_line@plt+0x16e08>
   13228:	movw	r1, #16960	; 0x4240
   1322c:	movt	r1, #15
   13230:	mov	r7, r0
   13234:	mov	r0, r4
   13238:	bl	192bc <el_line@plt+0x16e08>
   1323c:	mov	r4, r0
   13240:	mov	r0, r7
   13244:	movw	r1, #64536	; 0xfc18
   13248:	movt	r1, #65535	; 0xffff
   1324c:	bl	193ec <el_line@plt+0x16f38>
   13250:	movw	r3, #19923	; 0x4dd3
   13254:	movt	r3, #4194	; 0x1062
   13258:	asr	r1, r4, #31
   1325c:	smull	r2, r4, r3, r4
   13260:	rsb	r1, r1, r4, asr #6
   13264:	bl	19350 <el_line@plt+0x16e9c>
   13268:	mov	r1, r0
   1326c:	ldr	r0, [r6]
   13270:	bl	192bc <el_line@plt+0x16e08>
   13274:	ldr	r3, [sp, #12]
   13278:	str	r0, [r6]
   1327c:	ldr	r2, [r5]
   13280:	cmp	r3, r2
   13284:	bne	13290 <el_line@plt+0x10ddc>
   13288:	add	sp, sp, #20
   1328c:	pop	{r4, r5, r6, r7, pc}
   13290:	bl	21e4 <__stack_chk_fail@plt>
   13294:	muleq	r1, r8, fp
   13298:	andeq	r0, r0, ip, lsr #4
   1329c:	push	{r3, r4, r5, lr}
   132a0:	bic	r4, r1, r1, asr #31
   132a4:	movw	r3, #19923	; 0x4dd3
   132a8:	movt	r3, #4194	; 0x1062
   132ac:	mov	r5, r0
   132b0:	asr	r2, r4, #31
   132b4:	smull	r0, r3, r3, r4
   132b8:	mov	r1, #1000	; 0x3e8
   132bc:	rsb	r0, r2, r3, asr #6
   132c0:	str	r0, [r5]
   132c4:	bl	193ec <el_line@plt+0x16f38>
   132c8:	mov	r1, #1000	; 0x3e8
   132cc:	rsb	r0, r0, r4
   132d0:	bl	193ec <el_line@plt+0x16f38>
   132d4:	str	r0, [r5, #4]
   132d8:	pop	{r3, r4, r5, pc}
   132dc:	ldr	r3, [pc, #168]	; 1338c <el_line@plt+0x10ed8>
   132e0:	ldr	r2, [pc, #168]	; 13390 <el_line@plt+0x10edc>
   132e4:	push	{r4, r5, r6, lr}
   132e8:	add	r3, pc, r3
   132ec:	ldr	r5, [pc, #160]	; 13394 <el_line@plt+0x10ee0>
   132f0:	sub	sp, sp, #16
   132f4:	ldr	r4, [r3, r2]
   132f8:	add	r5, pc, r5
   132fc:	ldr	r2, [r5]
   13300:	ldr	r3, [r4]
   13304:	cmp	r2, #0
   13308:	str	r3, [sp, #12]
   1330c:	bne	13368 <el_line@plt+0x10eb4>
   13310:	add	r6, sp, #4
   13314:	mov	r0, #7
   13318:	mov	r1, r6
   1331c:	bl	216c <clock_gettime@plt>
   13320:	cmp	r0, #0
   13324:	bne	13330 <el_line@plt+0x10e7c>
   13328:	ldr	r0, [sp, #4]
   1332c:	b	13370 <el_line@plt+0x10ebc>
   13330:	mov	r1, r6
   13334:	mov	r0, #1
   13338:	bl	216c <clock_gettime@plt>
   1333c:	cmp	r0, #0
   13340:	beq	13328 <el_line@plt+0x10e74>
   13344:	bl	23ac <__errno_location@plt>
   13348:	ldr	r0, [r0]
   1334c:	bl	1fa4 <strerror@plt>
   13350:	mov	r1, r0
   13354:	ldr	r0, [pc, #60]	; 13398 <el_line@plt+0x10ee4>
   13358:	add	r0, pc, r0
   1335c:	bl	1148c <el_line@plt+0xefd8>
   13360:	mov	r3, #1
   13364:	str	r3, [r5]
   13368:	mov	r0, #0
   1336c:	bl	2394 <time@plt>
   13370:	ldr	r2, [sp, #12]
   13374:	ldr	r3, [r4]
   13378:	cmp	r2, r3
   1337c:	bne	13388 <el_line@plt+0x10ed4>
   13380:	add	sp, sp, #16
   13384:	pop	{r4, r5, r6, pc}
   13388:	bl	21e4 <__stack_chk_fail@plt>
   1338c:	andeq	fp, r1, ip, ror sl
   13390:	andeq	r0, r0, ip, lsr #4
   13394:	muleq	r1, r8, r1
   13398:	andeq	r9, r0, ip, lsl #31
   1339c:	ldr	r3, [pc, #212]	; 13478 <el_line@plt+0x10fc4>
   133a0:	ldr	r2, [pc, #212]	; 1347c <el_line@plt+0x10fc8>
   133a4:	push	{r4, r5, r6, lr}
   133a8:	add	r3, pc, r3
   133ac:	ldr	r5, [pc, #204]	; 13480 <el_line@plt+0x10fcc>
   133b0:	sub	sp, sp, #16
   133b4:	ldr	r4, [r3, r2]
   133b8:	add	r5, pc, r5
   133bc:	ldr	r2, [r5, #4]
   133c0:	ldr	r3, [r4]
   133c4:	cmp	r2, #0
   133c8:	str	r3, [sp, #12]
   133cc:	bne	13440 <el_line@plt+0x10f8c>
   133d0:	add	r6, sp, #4
   133d4:	mov	r0, #7
   133d8:	mov	r1, r6
   133dc:	bl	216c <clock_gettime@plt>
   133e0:	cmp	r0, #0
   133e4:	bne	13408 <el_line@plt+0x10f54>
   133e8:	vldr	s13, [sp, #8]
   133ec:	vcvt.f64.s32	d0, s13
   133f0:	vldr	d7, [pc, #120]	; 13470 <el_line@plt+0x10fbc>
   133f4:	vldr	s13, [sp, #4]
   133f8:	vdiv.f64	d0, d0, d7
   133fc:	vcvt.f64.s32	d7, s13
   13400:	vadd.f64	d0, d7, d0
   13404:	b	13450 <el_line@plt+0x10f9c>
   13408:	mov	r1, r6
   1340c:	mov	r0, #1
   13410:	bl	216c <clock_gettime@plt>
   13414:	cmp	r0, #0
   13418:	beq	133e8 <el_line@plt+0x10f34>
   1341c:	bl	23ac <__errno_location@plt>
   13420:	ldr	r0, [r0]
   13424:	bl	1fa4 <strerror@plt>
   13428:	mov	r1, r0
   1342c:	ldr	r0, [pc, #80]	; 13484 <el_line@plt+0x10fd0>
   13430:	add	r0, pc, r0
   13434:	bl	1148c <el_line@plt+0xefd8>
   13438:	mov	r3, #1
   1343c:	str	r3, [r5, #4]
   13440:	mov	r0, #0
   13444:	bl	2394 <time@plt>
   13448:	vmov	s15, r0
   1344c:	vcvt.f64.s32	d0, s15
   13450:	ldr	r2, [sp, #12]
   13454:	ldr	r3, [r4]
   13458:	cmp	r2, r3
   1345c:	bne	13468 <el_line@plt+0x10fb4>
   13460:	add	sp, sp, #16
   13464:	pop	{r4, r5, r6, pc}
   13468:	bl	21e4 <__stack_chk_fail@plt>
   1346c:	nop	{0}
   13470:	andeq	r0, r0, r0
   13474:	bicmi	ip, sp, r5, ror #26
   13478:			; <UNDEFINED> instruction: 0x0001b9bc
   1347c:	andeq	r0, r0, ip, lsr #4
   13480:	ldrdeq	pc, [r1], -r8
   13484:			; <UNDEFINED> instruction: 0x00009eb4
   13488:	push	{r4, r5}
   1348c:	mov	r1, #0
   13490:	ldr	ip, [sp, #8]
   13494:	mov	r4, #0
   13498:	mov	r5, #0
   1349c:	strd	r2, [r0, #8]
   134a0:	strd	r2, [r0, #16]
   134a4:	strd	r4, [r0, #24]
   134a8:	str	r1, [r0, #36]	; 0x24
   134ac:	str	r1, [r0, #32]
   134b0:	str	r1, [r0, #44]	; 0x2c
   134b4:	str	r1, [r0, #40]	; 0x28
   134b8:	str	ip, [r0]
   134bc:	pop	{r4, r5}
   134c0:	bx	lr
   134c4:	ldr	r3, [pc, #764]	; 137c8 <el_line@plt+0x11314>
   134c8:	ldr	r2, [pc, #764]	; 137cc <el_line@plt+0x11318>
   134cc:	add	r3, pc, r3
   134d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   134d4:	vpush	{d8}
   134d8:	mov	r6, r0
   134dc:	ldr	r7, [r3, r2]
   134e0:	sub	sp, sp, #28
   134e4:	ldr	r0, [r0, #32]
   134e8:	ldr	r3, [r7]
   134ec:	cmp	r0, #0
   134f0:	str	r3, [sp, #20]
   134f4:	bne	13504 <el_line@plt+0x11050>
   134f8:	ldr	r3, [r6, #36]	; 0x24
   134fc:	cmp	r3, #0
   13500:	beq	136ec <el_line@plt+0x11238>
   13504:	ldrd	r2, [r6, #24]
   13508:	ldrd	r4, [r6, #16]
   1350c:	adds	r2, r2, r1
   13510:	adc	r3, r3, #0
   13514:	strd	r2, [r6, #24]
   13518:	cmp	r3, r5
   1351c:	cmpeq	r2, r4
   13520:	bcs	13540 <el_line@plt+0x1108c>
   13524:	ldr	r2, [sp, #20]
   13528:	ldr	r3, [r7]
   1352c:	cmp	r2, r3
   13530:	bne	137b8 <el_line@plt+0x11304>
   13534:	add	sp, sp, #28
   13538:	vpop	{d8}
   1353c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13540:	mov	r1, #0
   13544:	add	r0, r6, #40	; 0x28
   13548:	bl	1ec0 <gettimeofday@plt>
   1354c:	ldr	r0, [r6, #40]	; 0x28
   13550:	ldr	r1, [r6, #32]
   13554:	bl	19350 <el_line@plt+0x16e9c>
   13558:	ldr	r1, [r6, #36]	; 0x24
   1355c:	str	r0, [r6, #40]	; 0x28
   13560:	mov	r8, r0
   13564:	ldr	r0, [r6, #44]	; 0x2c
   13568:	bl	19350 <el_line@plt+0x16e9c>
   1356c:	cmp	r0, #0
   13570:	mov	r4, r0
   13574:	str	r0, [r6, #44]	; 0x2c
   13578:	blt	1370c <el_line@plt+0x11258>
   1357c:	cmp	r8, #0
   13580:	beq	136fc <el_line@plt+0x11248>
   13584:	ldr	r1, [r6, #28]
   13588:	vldr	d8, [pc, #560]	; 137c0 <el_line@plt+0x1130c>
   1358c:	ldr	r0, [r6, #24]
   13590:	lsl	r1, r1, #3
   13594:	orr	r1, r1, r0, lsr #29
   13598:	lsl	r0, r0, #3
   1359c:	str	r1, [r6, #28]
   135a0:	str	r0, [r6, #24]
   135a4:	bl	18f64 <el_line@plt+0x16ab0>
   135a8:	vmov	d7, r0, r1
   135ac:	ldrd	r0, [r6, #8]
   135b0:	vmul.f64	d8, d7, d8
   135b4:	bl	18f64 <el_line@plt+0x16ab0>
   135b8:	vmov	d7, r0, r1
   135bc:	vdiv.f64	d7, d8, d7
   135c0:	vmov	r0, r1, d7
   135c4:	bl	19568 <el_line@plt+0x170b4>
   135c8:	mov	r3, #0
   135cc:	movw	r2, #16960	; 0x4240
   135d0:	movt	r2, #15
   135d4:	mov	r4, r0
   135d8:	mov	r5, r1
   135dc:	bl	19270 <el_line@plt+0x16dbc>
   135e0:	movw	r2, #16960	; 0x4240
   135e4:	mov	r3, #0
   135e8:	movt	r2, #15
   135ec:	mov	r1, r5
   135f0:	mov	r9, r0
   135f4:	str	r0, [r6, #32]
   135f8:	mov	r0, r4
   135fc:	bl	19270 <el_line@plt+0x16dbc>
   13600:	cmp	r9, r8
   13604:	mov	r4, r2
   13608:	str	r2, [r6, #36]	; 0x24
   1360c:	beq	13774 <el_line@plt+0x112c0>
   13610:	movle	r3, #0
   13614:	movgt	r3, #1
   13618:	cmp	r3, #0
   1361c:	beq	136d0 <el_line@plt+0x1121c>
   13620:	mov	r1, r8
   13624:	mov	r0, r9
   13628:	bl	19350 <el_line@plt+0x16e9c>
   1362c:	ldr	r1, [r6, #44]	; 0x2c
   13630:	mov	r5, r0
   13634:	mov	r0, r4
   13638:	str	r5, [r6, #40]	; 0x28
   1363c:	bl	19350 <el_line@plt+0x16e9c>
   13640:	cmp	r0, #0
   13644:	mov	r4, r0
   13648:	str	r0, [r6, #44]	; 0x2c
   1364c:	movge	ip, r5
   13650:	movge	r0, r0
   13654:	blt	13788 <el_line@plt+0x112d4>
   13658:	cmp	ip, #0
   1365c:	beq	13738 <el_line@plt+0x11284>
   13660:	ldr	r4, [r6]
   13664:	mov	r5, #0
   13668:	ldrd	r2, [r6, #16]
   1366c:	lsr	r4, r4, #2
   13670:	lsrs	r3, r3, #1
   13674:	rrx	r2, r2
   13678:	cmp	r3, r5
   1367c:	cmpeq	r2, r4
   13680:	strd	r2, [r6, #16]
   13684:	bcc	1376c <el_line@plt+0x112b8>
   13688:	mov	r1, #1000	; 0x3e8
   1368c:	str	ip, [sp, #4]
   13690:	bl	193ec <el_line@plt+0x16f38>
   13694:	add	r5, sp, #4
   13698:	add	r4, sp, #12
   1369c:	str	r0, [sp, #8]
   136a0:	b	136bc <el_line@plt+0x11208>
   136a4:	bl	23ac <__errno_location@plt>
   136a8:	ldr	r3, [r0]
   136ac:	cmp	r3, #4
   136b0:	bne	136d0 <el_line@plt+0x1121c>
   136b4:	ldm	r4, {r0, r1}
   136b8:	stm	r5, {r0, r1}
   136bc:	mov	r0, r5
   136c0:	mov	r1, r4
   136c4:	bl	2040 <nanosleep@plt>
   136c8:	cmn	r0, #1
   136cc:	beq	136a4 <el_line@plt+0x111f0>
   136d0:	mov	r2, #0
   136d4:	mov	r3, #0
   136d8:	add	r0, r6, #32
   136dc:	strd	r2, [r6, #24]
   136e0:	mov	r1, #0
   136e4:	bl	1ec0 <gettimeofday@plt>
   136e8:	b	13524 <el_line@plt+0x11070>
   136ec:	add	r0, r6, #32
   136f0:	mov	r1, r3
   136f4:	bl	1ec0 <gettimeofday@plt>
   136f8:	b	13524 <el_line@plt+0x11070>
   136fc:	ldr	r3, [r6, #44]	; 0x2c
   13700:	cmp	r3, #0
   13704:	beq	13524 <el_line@plt+0x11070>
   13708:	b	13584 <el_line@plt+0x110d0>
   1370c:	mov	r0, r8
   13710:	mvn	r1, #0
   13714:	bl	192bc <el_line@plt+0x16e08>
   13718:	movw	r1, #16960	; 0x4240
   1371c:	movt	r1, #15
   13720:	str	r0, [r6, #40]	; 0x28
   13724:	mov	r8, r0
   13728:	mov	r0, r4
   1372c:	bl	192bc <el_line@plt+0x16e08>
   13730:	str	r0, [r6, #44]	; 0x2c
   13734:	b	1357c <el_line@plt+0x110c8>
   13738:	movw	r3, #9999	; 0x270f
   1373c:	cmp	r0, r3
   13740:	bgt	13688 <el_line@plt+0x111d4>
   13744:	ldrd	r2, [r6, #16]
   13748:	mov	r5, #0
   1374c:	ldr	r4, [r6]
   13750:	adds	r2, r2, r2
   13754:	adc	r3, r3, r3
   13758:	strd	r2, [r6, #16]
   1375c:	lsl	r4, r4, #3
   13760:	cmp	r3, r5
   13764:	cmpeq	r2, r4
   13768:	bls	13688 <el_line@plt+0x111d4>
   1376c:	strd	r4, [r6, #16]
   13770:	b	13688 <el_line@plt+0x111d4>
   13774:	ldr	r3, [r6, #44]	; 0x2c
   13778:	cmp	r4, r3
   1377c:	movle	r3, #0
   13780:	movgt	r3, #1
   13784:	b	13618 <el_line@plt+0x11164>
   13788:	mov	r0, r5
   1378c:	mvn	r1, #0
   13790:	bl	192bc <el_line@plt+0x16e08>
   13794:	movw	r1, #16960	; 0x4240
   13798:	movt	r1, #15
   1379c:	mov	r5, r0
   137a0:	str	r0, [r6, #40]	; 0x28
   137a4:	mov	r0, r4
   137a8:	bl	192bc <el_line@plt+0x16e08>
   137ac:	mov	ip, r5
   137b0:	str	r0, [r6, #44]	; 0x2c
   137b4:	b	13658 <el_line@plt+0x111a4>
   137b8:	bl	21e4 <__stack_chk_fail@plt>
   137bc:	nop	{0}
   137c0:	andeq	r0, r0, r0
   137c4:	smlawbmi	lr, r0, r4, r8
   137c8:	muleq	r1, r8, r8
   137cc:	andeq	r0, r0, ip, lsr #4
   137d0:	push	{r4, r5, lr}
   137d4:	mov	r5, r0
   137d8:	ldr	r0, [pc, #156]	; 1387c <el_line@plt+0x113c8>
   137dc:	sub	sp, sp, #12
   137e0:	mov	r4, r1
   137e4:	add	r0, pc, r0
   137e8:	bl	2460 <getenv@plt>
   137ec:	subs	r3, r0, #0
   137f0:	beq	13834 <el_line@plt+0x11380>
   137f4:	ldr	ip, [pc, #132]	; 13880 <el_line@plt+0x113cc>
   137f8:	mov	r0, r5
   137fc:	str	r3, [sp, #4]
   13800:	mov	r1, r4
   13804:	mvn	r3, #0
   13808:	add	ip, pc, ip
   1380c:	mov	r2, #1
   13810:	str	ip, [sp]
   13814:	bl	231c <__snprintf_chk@plt>
   13818:	cmp	r0, r4
   1381c:	movcs	r3, #0
   13820:	movcc	r3, #1
   13824:	cmp	r0, #0
   13828:	movle	r3, #0
   1382c:	cmp	r3, #0
   13830:	bne	1385c <el_line@plt+0x113a8>
   13834:	ldr	r2, [pc, #72]	; 13884 <el_line@plt+0x113d0>
   13838:	mov	r1, r4
   1383c:	mov	r0, r5
   13840:	add	r2, pc, r2
   13844:	bl	20c4 <snprintf@plt>
   13848:	cmp	r0, r4
   1384c:	movcc	r4, #0
   13850:	movcs	r4, #1
   13854:	orrs	r4, r4, r0, lsr #31
   13858:	bne	13864 <el_line@plt+0x113b0>
   1385c:	add	sp, sp, #12
   13860:	pop	{r4, r5, pc}
   13864:	ldr	r1, [pc, #28]	; 13888 <el_line@plt+0x113d4>
   13868:	ldr	r0, [pc, #28]	; 1388c <el_line@plt+0x113d8>
   1386c:	add	r1, pc, r1
   13870:	add	r0, pc, r0
   13874:	add	r1, r1, #36	; 0x24
   13878:	bl	10980 <el_line@plt+0xe4cc>
   1387c:	andeq	r9, r0, r4, lsl fp
   13880:	andeq	r9, r0, r0, lsl fp
   13884:	andeq	r9, r0, r0, asr #21
   13888:			; <UNDEFINED> instruction: 0x000096b0
   1388c:			; <UNDEFINED> instruction: 0x00009abc
   13890:	ldr	r3, [pc, #196]	; 1395c <el_line@plt+0x114a8>
   13894:	ldr	r2, [pc, #196]	; 13960 <el_line@plt+0x114ac>
   13898:	add	r3, pc, r3
   1389c:	push	{r4, r5, r6, r7, lr}
   138a0:	subs	r6, r0, #0
   138a4:	ldr	r7, [r3, r2]
   138a8:	sub	sp, sp, #12
   138ac:	ldr	r3, [r7]
   138b0:	str	r3, [sp, #4]
   138b4:	beq	13950 <el_line@plt+0x1149c>
   138b8:	ldr	r5, [pc, #164]	; 13964 <el_line@plt+0x114b0>
   138bc:	mov	r4, #0
   138c0:	ldr	r1, [pc, #160]	; 13968 <el_line@plt+0x114b4>
   138c4:	add	r5, pc, r5
   138c8:	add	r1, pc, r1
   138cc:	b	138e0 <el_line@plt+0x1142c>
   138d0:	ldr	r1, [r5, #8]!
   138d4:	add	r4, r4, #1
   138d8:	cmp	r1, #0
   138dc:	beq	13904 <el_line@plt+0x11450>
   138e0:	mov	r0, r6
   138e4:	bl	1ee4 <strcasecmp@plt>
   138e8:	cmp	r0, #0
   138ec:	bne	138d0 <el_line@plt+0x1141c>
   138f0:	ldr	r3, [pc, #116]	; 1396c <el_line@plt+0x114b8>
   138f4:	add	r3, pc, r3
   138f8:	add	r4, r3, r4, lsl #3
   138fc:	ldr	r0, [r4, #4]
   13900:	b	13938 <el_line@plt+0x11484>
   13904:	mov	r2, r1
   13908:	mov	r0, r6
   1390c:	mov	r1, sp
   13910:	bl	1f14 <strtol@plt>
   13914:	ldrb	r3, [r6]
   13918:	cmp	r3, #0
   1391c:	beq	13950 <el_line@plt+0x1149c>
   13920:	ldr	r3, [sp]
   13924:	ldrb	r3, [r3]
   13928:	cmp	r3, #0
   1392c:	bne	13950 <el_line@plt+0x1149c>
   13930:	cmp	r0, #256	; 0x100
   13934:	mvncs	r0, #0
   13938:	ldr	r2, [sp, #4]
   1393c:	ldr	r3, [r7]
   13940:	cmp	r2, r3
   13944:	bne	13958 <el_line@plt+0x114a4>
   13948:	add	sp, sp, #12
   1394c:	pop	{r4, r5, r6, r7, pc}
   13950:	mvn	r0, #0
   13954:	b	13938 <el_line@plt+0x11484>
   13958:	bl	21e4 <__stack_chk_fail@plt>
   1395c:	andeq	fp, r1, ip, asr #9
   13960:	andeq	r0, r0, ip, lsr #4
   13964:	andeq	fp, r1, ip, ror r2
   13968:	andeq	r9, r0, r4, lsl #21
   1396c:	andeq	fp, r1, ip, asr #4
   13970:	cmp	r0, #40	; 0x28
   13974:	mov	ip, r0
   13978:	push	{r4, lr}
   1397c:	sub	sp, sp, #8
   13980:	beq	139e8 <el_line@plt+0x11534>
   13984:	ldr	r3, [pc, #104]	; 139f4 <el_line@plt+0x11540>
   13988:	add	r3, pc, r3
   1398c:	b	1399c <el_line@plt+0x114e8>
   13990:	ldr	r2, [r3, #4]
   13994:	cmp	r2, ip
   13998:	beq	139e0 <el_line@plt+0x1152c>
   1399c:	ldr	r0, [r3, #8]
   139a0:	add	r3, r3, #8
   139a4:	cmp	r0, #0
   139a8:	bne	13990 <el_line@plt+0x114dc>
   139ac:	ldr	r4, [pc, #68]	; 139f8 <el_line@plt+0x11544>
   139b0:	mov	r1, #5
   139b4:	ldr	lr, [pc, #64]	; 139fc <el_line@plt+0x11548>
   139b8:	mov	r3, r1
   139bc:	add	r4, pc, r4
   139c0:	str	ip, [sp, #4]
   139c4:	add	r4, r4, #8
   139c8:	add	lr, pc, lr
   139cc:	mov	r2, #1
   139d0:	str	lr, [sp]
   139d4:	mov	r0, r4
   139d8:	bl	231c <__snprintf_chk@plt>
   139dc:	mov	r0, r4
   139e0:	add	sp, sp, #8
   139e4:	pop	{r4, pc}
   139e8:	ldr	r0, [pc, #16]	; 13a00 <el_line@plt+0x1154c>
   139ec:	add	r0, pc, r0
   139f0:	b	139e0 <el_line@plt+0x1152c>
   139f4:			; <UNDEFINED> instruction: 0x0001b1b8
   139f8:	ldrdeq	lr, [r1], -r4
   139fc:	andeq	r9, r0, ip, lsl #19
   13a00:	andeq	r9, r0, r0, ror #18
   13a04:	push	{r3, r4, r5, lr}
   13a08:	mov	r5, r0
   13a0c:	ldrb	r4, [r0]
   13a10:	cmp	r4, #0
   13a14:	popeq	{r3, r4, r5, pc}
   13a18:	bl	2424 <__ctype_tolower_loc@plt>
   13a1c:	sub	r3, r5, #1
   13a20:	ldr	r2, [r0]
   13a24:	ldr	r2, [r2, r4, lsl #2]
   13a28:	strb	r2, [r3, #1]!
   13a2c:	ldrb	r4, [r3, #1]
   13a30:	cmp	r4, #0
   13a34:	bne	13a20 <el_line@plt+0x1156c>
   13a38:	pop	{r3, r4, r5, pc}
   13a3c:	ldr	r3, [pc, #528]	; 13c54 <el_line@plt+0x117a0>
   13a40:	ldr	ip, [pc, #528]	; 13c58 <el_line@plt+0x117a4>
   13a44:	add	r3, pc, r3
   13a48:	push	{r4, r5, r6, r7, r8, r9, lr}
   13a4c:	sub	sp, sp, #124	; 0x7c
   13a50:	ldr	r5, [r3, ip]
   13a54:	add	r6, sp, #4
   13a58:	mov	r7, r0
   13a5c:	mov	r9, r1
   13a60:	mov	r8, r2
   13a64:	mov	r1, #0
   13a68:	ldr	r3, [r5]
   13a6c:	mov	r2, #110	; 0x6e
   13a70:	mov	r0, r6
   13a74:	mov	r4, #1
   13a78:	str	r3, [sp, #116]	; 0x74
   13a7c:	bl	2064 <memset@plt>
   13a80:	mov	r1, r7
   13a84:	add	r0, sp, #6
   13a88:	mov	r2, #108	; 0x6c
   13a8c:	strh	r4, [sp, #4]
   13a90:	bl	177d8 <el_line@plt+0x15324>
   13a94:	cmp	r0, #107	; 0x6b
   13a98:	bhi	13b40 <el_line@plt+0x1168c>
   13a9c:	mov	r0, r4
   13aa0:	mov	r1, r4
   13aa4:	mov	r2, #0
   13aa8:	bl	21fc <socket@plt>
   13aac:	subs	r4, r0, #0
   13ab0:	blt	13bc4 <el_line@plt+0x11710>
   13ab4:	cmp	r8, #1
   13ab8:	beq	13b04 <el_line@plt+0x11650>
   13abc:	mov	r1, r6
   13ac0:	mov	r0, r4
   13ac4:	mov	r2, #110	; 0x6e
   13ac8:	bl	2190 <bind@plt>
   13acc:	cmp	r0, #0
   13ad0:	blt	13b70 <el_line@plt+0x116bc>
   13ad4:	mov	r1, r9
   13ad8:	mov	r0, r4
   13adc:	bl	20b8 <listen@plt>
   13ae0:	cmp	r0, #0
   13ae4:	blt	13bf4 <el_line@plt+0x11740>
   13ae8:	ldr	r2, [sp, #116]	; 0x74
   13aec:	mov	r0, r4
   13af0:	ldr	r3, [r5]
   13af4:	cmp	r2, r3
   13af8:	bne	13c50 <el_line@plt+0x1179c>
   13afc:	add	sp, sp, #124	; 0x7c
   13b00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13b04:	mov	r0, r7
   13b08:	bl	2130 <unlink@plt>
   13b0c:	cmp	r0, #0
   13b10:	beq	13abc <el_line@plt+0x11608>
   13b14:	bl	23ac <__errno_location@plt>
   13b18:	ldr	r0, [r0]
   13b1c:	cmp	r0, #2
   13b20:	beq	13abc <el_line@plt+0x11608>
   13b24:	bl	1fa4 <strerror@plt>
   13b28:	mov	r1, r7
   13b2c:	mov	r2, r0
   13b30:	ldr	r0, [pc, #292]	; 13c5c <el_line@plt+0x117a8>
   13b34:	add	r0, pc, r0
   13b38:	bl	11238 <el_line@plt+0xed84>
   13b3c:	b	13abc <el_line@plt+0x11608>
   13b40:	ldr	r1, [pc, #280]	; 13c60 <el_line@plt+0x117ac>
   13b44:	mov	r2, r7
   13b48:	ldr	r0, [pc, #276]	; 13c64 <el_line@plt+0x117b0>
   13b4c:	mvn	r4, #0
   13b50:	add	r1, pc, r1
   13b54:	add	r0, pc, r0
   13b58:	add	r1, r1, #52	; 0x34
   13b5c:	bl	11238 <el_line@plt+0xed84>
   13b60:	bl	23ac <__errno_location@plt>
   13b64:	mov	r3, #36	; 0x24
   13b68:	str	r3, [r0]
   13b6c:	b	13ae8 <el_line@plt+0x11634>
   13b70:	bl	23ac <__errno_location@plt>
   13b74:	ldr	r8, [r0]
   13b78:	mov	r6, r0
   13b7c:	mov	r0, r8
   13b80:	bl	1fa4 <strerror@plt>
   13b84:	mov	r1, r0
   13b88:	ldr	r0, [pc, #216]	; 13c68 <el_line@plt+0x117b4>
   13b8c:	add	r0, pc, r0
   13b90:	bl	11238 <el_line@plt+0xed84>
   13b94:	mov	r0, r4
   13b98:	bl	20dc <close@plt>
   13b9c:	ldr	r1, [pc, #200]	; 13c6c <el_line@plt+0x117b8>
   13ba0:	ldr	r0, [pc, #200]	; 13c70 <el_line@plt+0x117bc>
   13ba4:	mov	r2, r7
   13ba8:	add	r1, pc, r1
   13bac:	mvn	r4, #0
   13bb0:	add	r0, pc, r0
   13bb4:	add	r1, r1, #52	; 0x34
   13bb8:	bl	11238 <el_line@plt+0xed84>
   13bbc:	str	r8, [r6]
   13bc0:	b	13ae8 <el_line@plt+0x11634>
   13bc4:	bl	23ac <__errno_location@plt>
   13bc8:	ldr	r6, [r0]
   13bcc:	mov	r4, r0
   13bd0:	mov	r0, r6
   13bd4:	bl	1fa4 <strerror@plt>
   13bd8:	mov	r1, r0
   13bdc:	ldr	r0, [pc, #144]	; 13c74 <el_line@plt+0x117c0>
   13be0:	add	r0, pc, r0
   13be4:	bl	11238 <el_line@plt+0xed84>
   13be8:	str	r6, [r4]
   13bec:	mvn	r4, #0
   13bf0:	b	13ae8 <el_line@plt+0x11634>
   13bf4:	bl	23ac <__errno_location@plt>
   13bf8:	ldr	r8, [r0]
   13bfc:	mov	r6, r0
   13c00:	mov	r0, r8
   13c04:	bl	1fa4 <strerror@plt>
   13c08:	mov	r1, r0
   13c0c:	ldr	r0, [pc, #100]	; 13c78 <el_line@plt+0x117c4>
   13c10:	add	r0, pc, r0
   13c14:	bl	11238 <el_line@plt+0xed84>
   13c18:	mov	r0, r4
   13c1c:	bl	20dc <close@plt>
   13c20:	mov	r0, r7
   13c24:	bl	2130 <unlink@plt>
   13c28:	ldr	r1, [pc, #76]	; 13c7c <el_line@plt+0x117c8>
   13c2c:	ldr	r0, [pc, #76]	; 13c80 <el_line@plt+0x117cc>
   13c30:	mov	r2, r7
   13c34:	add	r1, pc, r1
   13c38:	mvn	r4, #0
   13c3c:	add	r0, pc, r0
   13c40:	add	r1, r1, #52	; 0x34
   13c44:	bl	11238 <el_line@plt+0xed84>
   13c48:	str	r8, [r6]
   13c4c:	b	13ae8 <el_line@plt+0x11634>
   13c50:	bl	21e4 <__stack_chk_fail@plt>
   13c54:	andeq	fp, r1, r0, lsr #6
   13c58:	andeq	r0, r0, ip, lsr #4
   13c5c:	andeq	r9, r0, r4, ror #16
   13c60:	andeq	r9, r0, ip, asr #7
   13c64:	andeq	r9, r0, r8, lsl #16
   13c68:	andeq	r9, r0, r0, lsr #16
   13c6c:	andeq	r9, r0, r4, ror r3
   13c70:	andeq	r9, r0, ip, lsl #16
   13c74:	andeq	r9, r0, r8, lsr #15
   13c78:	andeq	r9, r0, r8, asr #15
   13c7c:	andeq	r9, r0, r8, ror #5
   13c80:	andeq	r9, r0, ip, lsr #15
   13c84:	ldr	r3, [pc, #164]	; 13d30 <el_line@plt+0x1187c>
   13c88:	mov	r2, r0
   13c8c:	push	{r4, r5, r6, lr}
   13c90:	add	r3, pc, r3
   13c94:	ldr	lr, [pc, #152]	; 13d34 <el_line@plt+0x11880>
   13c98:	sub	sp, sp, #16
   13c9c:	ldr	r1, [pc, #148]	; 13d38 <el_line@plt+0x11884>
   13ca0:	mov	r6, r0
   13ca4:	ldr	r0, [pc, #144]	; 13d3c <el_line@plt+0x11888>
   13ca8:	add	r4, sp, #16
   13cac:	ldr	r5, [r3, lr]
   13cb0:	add	r1, pc, r1
   13cb4:	add	r0, pc, r0
   13cb8:	add	r1, r1, #68	; 0x44
   13cbc:	mov	ip, #1
   13cc0:	str	ip, [r4, #-8]!
   13cc4:	ldr	r3, [r5]
   13cc8:	str	r3, [sp, #12]
   13ccc:	bl	1148c <el_line@plt+0xefd8>
   13cd0:	mov	r2, #4
   13cd4:	mov	r3, r4
   13cd8:	str	r2, [sp]
   13cdc:	mov	r0, r6
   13ce0:	mov	r1, #41	; 0x29
   13ce4:	mov	r2, #26
   13ce8:	bl	2244 <setsockopt@plt>
   13cec:	cmn	r0, #1
   13cf0:	beq	13d0c <el_line@plt+0x11858>
   13cf4:	ldr	r2, [sp, #12]
   13cf8:	ldr	r3, [r5]
   13cfc:	cmp	r2, r3
   13d00:	bne	13d2c <el_line@plt+0x11878>
   13d04:	add	sp, sp, #16
   13d08:	pop	{r4, r5, r6, pc}
   13d0c:	bl	23ac <__errno_location@plt>
   13d10:	ldr	r0, [r0]
   13d14:	bl	1fa4 <strerror@plt>
   13d18:	mov	r1, r0
   13d1c:	ldr	r0, [pc, #28]	; 13d40 <el_line@plt+0x1188c>
   13d20:	add	r0, pc, r0
   13d24:	bl	11238 <el_line@plt+0xed84>
   13d28:	b	13cf4 <el_line@plt+0x11840>
   13d2c:	bl	21e4 <__stack_chk_fail@plt>
   13d30:	ldrdeq	fp, [r1], -r4
   13d34:	andeq	r0, r0, ip, lsr #4
   13d38:	andeq	r9, r0, ip, ror #4
   13d3c:	andeq	r9, r0, r4, asr r7
   13d40:	andeq	r9, r0, r8, lsl #14
   13d44:	push	{r3, r4, r5, lr}
   13d48:	mov	r5, r0
   13d4c:	mov	r4, r1
   13d50:	ldr	r0, [r0]
   13d54:	ldr	r1, [r1]
   13d58:	bl	11ac0 <el_line@plt+0xf60c>
   13d5c:	cmp	r0, #0
   13d60:	popeq	{r3, r4, r5, pc}
   13d64:	ldr	r2, [r5, #4]
   13d68:	ldr	r3, [r4, #4]
   13d6c:	cmp	r2, r3
   13d70:	beq	13d7c <el_line@plt+0x118c8>
   13d74:	mov	r0, #0
   13d78:	pop	{r3, r4, r5, pc}
   13d7c:	ldr	r0, [r5, #8]
   13d80:	ldr	r1, [r4, #8]
   13d84:	bl	11ac0 <el_line@plt+0xf60c>
   13d88:	cmp	r0, #0
   13d8c:	popeq	{r3, r4, r5, pc}
   13d90:	ldr	r0, [r5, #12]
   13d94:	ldr	r1, [r4, #12]
   13d98:	bl	11ac0 <el_line@plt+0xf60c>
   13d9c:	cmp	r0, #0
   13da0:	popeq	{r3, r4, r5, pc}
   13da4:	ldr	r2, [r5, #16]
   13da8:	ldr	r3, [r4, #16]
   13dac:	cmp	r2, r3
   13db0:	bne	13d74 <el_line@plt+0x118c0>
   13db4:	ldr	r0, [r5, #20]
   13db8:	ldr	r1, [r4, #20]
   13dbc:	bl	11ac0 <el_line@plt+0xf60c>
   13dc0:	adds	r0, r0, #0
   13dc4:	movne	r0, #1
   13dc8:	pop	{r3, r4, r5, pc}
   13dcc:	cmp	r1, #0
   13dd0:	cmpne	r0, #1024	; 0x400
   13dd4:	movge	r0, #0
   13dd8:	movlt	r0, #1
   13ddc:	eor	r0, r0, #1
   13de0:	bx	lr
   13de4:	ldr	r0, [pc, #104]	; 13e54 <el_line@plt+0x119a0>
   13de8:	mov	r1, #256	; 0x100
   13dec:	push	{r3, r4, r5, lr}
   13df0:	add	r0, pc, r0
   13df4:	bl	2184 <open64@plt>
   13df8:	cmp	r0, #0
   13dfc:	blt	13e10 <el_line@plt+0x1195c>
   13e00:	bl	20dc <close@plt>
   13e04:	mov	r4, #0
   13e08:	mov	r0, r4
   13e0c:	pop	{r3, r4, r5, pc}
   13e10:	bl	1f5c <getppid@plt>
   13e14:	cmp	r0, #1
   13e18:	mov	r4, r0
   13e1c:	beq	13e2c <el_line@plt+0x11978>
   13e20:	mov	r4, #0
   13e24:	mov	r0, r4
   13e28:	pop	{r3, r4, r5, pc}
   13e2c:	mov	r0, #0
   13e30:	bl	1f08 <getsid@plt>
   13e34:	mov	r5, r0
   13e38:	bl	1e9c <getpid@plt>
   13e3c:	cmp	r5, r0
   13e40:	bne	13e20 <el_line@plt+0x1196c>
   13e44:	ldr	r0, [pc, #12]	; 13e58 <el_line@plt+0x119a4>
   13e48:	add	r0, pc, r0
   13e4c:	bl	1148c <el_line@plt+0xefd8>
   13e50:	b	13e08 <el_line@plt+0x11954>
   13e54:	andeq	r9, r0, r4, asr r6
   13e58:	andeq	r9, r0, r8, lsl #12
   13e5c:	push	{r4, lr}
   13e60:	mov	r0, #14
   13e64:	bl	1ff8 <nl_langinfo@plt>
   13e68:	ldr	r1, [pc, #44]	; 13e9c <el_line@plt+0x119e8>
   13e6c:	add	r1, pc, r1
   13e70:	mov	r4, r0
   13e74:	bl	2388 <strcmp@plt>
   13e78:	cmp	r0, #0
   13e7c:	popeq	{r4, pc}
   13e80:	ldr	r1, [pc, #24]	; 13ea0 <el_line@plt+0x119ec>
   13e84:	mov	r0, r4
   13e88:	add	r1, pc, r1
   13e8c:	bl	2388 <strcmp@plt>
   13e90:	adds	r0, r0, #0
   13e94:	movne	r0, #1
   13e98:	pop	{r4, pc}
   13e9c:	muleq	r0, r8, r6
   13ea0:	andeq	r9, r0, r8, lsl #13
   13ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ea8:	sub	sp, sp, #60	; 0x3c
   13eac:	ldr	lr, [pc, #1100]	; 14300 <el_line@plt+0x11e4c>
   13eb0:	add	ip, sp, #56	; 0x38
   13eb4:	ldr	r4, [pc, #1096]	; 14304 <el_line@plt+0x11e50>
   13eb8:	add	lr, pc, lr
   13ebc:	str	r2, [sp, #16]
   13ec0:	str	r0, [sp, #36]	; 0x24
   13ec4:	mov	r2, r3
   13ec8:	str	r1, [sp, #20]
   13ecc:	mov	r3, #0
   13ed0:	ldr	r4, [lr, r4]
   13ed4:	mov	r1, #1
   13ed8:	str	r3, [ip, #-12]!
   13edc:	mov	r0, ip
   13ee0:	ldr	r3, [sp, #96]	; 0x60
   13ee4:	ldr	ip, [r4]
   13ee8:	str	r4, [sp, #32]
   13eec:	str	ip, [sp, #52]	; 0x34
   13ef0:	bl	2418 <__vasprintf_chk@plt>
   13ef4:	subs	r4, r0, #0
   13ef8:	ble	140f4 <el_line@plt+0x11c40>
   13efc:	ldr	r6, [sp, #44]	; 0x2c
   13f00:	mov	r0, r6
   13f04:	bl	2310 <strlen@plt>
   13f08:	add	fp, r0, #1
   13f0c:	mov	r0, fp
   13f10:	bl	2304 <malloc@plt>
   13f14:	subs	r8, r0, #0
   13f18:	beq	140ec <el_line@plt+0x11c38>
   13f1c:	ldr	r1, [sp, #20]
   13f20:	mov	r7, r8
   13f24:	ldr	r3, [sp, #16]
   13f28:	mov	r5, #1
   13f2c:	cmp	r1, #0
   13f30:	strge	r1, [sp, #12]
   13f34:	mvnlt	r2, #-2147483648	; 0x80000000
   13f38:	strlt	r2, [sp, #12]
   13f3c:	strlt	r2, [sp, #20]
   13f40:	cmp	r3, #0
   13f44:	mov	r2, #0
   13f48:	str	r2, [sp, #8]
   13f4c:	ldrne	lr, [r3]
   13f50:	mov	r4, r2
   13f54:	mvneq	r1, #-2147483648	; 0x80000000
   13f58:	add	r3, sp, #48	; 0x30
   13f5c:	streq	r1, [sp, #24]
   13f60:	strne	lr, [sp, #24]
   13f64:	str	r3, [sp, #28]
   13f68:	ldrb	r3, [r6]
   13f6c:	cmp	r3, #0
   13f70:	beq	140a4 <el_line@plt+0x11bf0>
   13f74:	bl	2370 <__ctype_get_mb_cur_max@plt>
   13f78:	mov	r1, r6
   13f7c:	mov	r2, r0
   13f80:	add	r0, sp, #48	; 0x30
   13f84:	bl	1f50 <mbtowc@plt>
   13f88:	cmn	r0, #1
   13f8c:	mov	r9, r0
   13f90:	beq	142ac <el_line@plt+0x11df8>
   13f94:	ldr	lr, [sp, #16]
   13f98:	ldr	r0, [sp, #48]	; 0x30
   13f9c:	cmp	lr, #0
   13fa0:	beq	14278 <el_line@plt+0x11dc4>
   13fa4:	bl	2118 <wcwidth@plt>
   13fa8:	cmn	r0, #1
   13fac:	mov	r3, r0
   13fb0:	beq	1414c <el_line@plt+0x11c98>
   13fb4:	cmp	r0, #0
   13fb8:	blt	14160 <el_line@plt+0x11cac>
   13fbc:	cmp	r5, #0
   13fc0:	beq	1407c <el_line@plt+0x11bc8>
   13fc4:	mov	r1, r8
   13fc8:	mov	r0, r7
   13fcc:	str	r3, [sp, #4]
   13fd0:	bl	19350 <el_line@plt+0x16e9c>
   13fd4:	mov	r1, r9
   13fd8:	mov	r5, r0
   13fdc:	ldr	r0, [sp, #12]
   13fe0:	bl	19350 <el_line@plt+0x16e9c>
   13fe4:	ldr	r3, [sp, #4]
   13fe8:	cmp	r5, r0
   13fec:	bge	14144 <el_line@plt+0x11c90>
   13ff0:	mov	r1, r3
   13ff4:	ldr	r0, [sp, #24]
   13ff8:	str	r3, [sp, #4]
   13ffc:	bl	19350 <el_line@plt+0x16e9c>
   14000:	ldr	r1, [sp, #8]
   14004:	ldr	r3, [sp, #4]
   14008:	cmp	r1, r0
   1400c:	bgt	14144 <el_line@plt+0x11c90>
   14010:	add	r2, r7, r9
   14014:	add	r1, r8, fp
   14018:	cmp	r2, r1
   1401c:	bcc	142d4 <el_line@plt+0x11e20>
   14020:	ldr	r2, [sp, #20]
   14024:	add	fp, fp, #128	; 0x80
   14028:	mov	r0, r8
   1402c:	str	r3, [sp, #4]
   14030:	cmp	fp, r2
   14034:	movcs	fp, r2
   14038:	mov	r1, fp
   1403c:	bl	2178 <realloc@plt>
   14040:	ldr	r3, [sp, #4]
   14044:	cmp	r0, #0
   14048:	beq	142e8 <el_line@plt+0x11e34>
   1404c:	add	r5, r0, r5
   14050:	mov	r8, r0
   14054:	add	r7, r5, r9
   14058:	ldr	r0, [sp, #8]
   1405c:	mov	r1, r3
   14060:	bl	192bc <el_line@plt+0x16e08>
   14064:	mov	r1, r6
   14068:	mov	r2, r9
   1406c:	str	r0, [sp, #8]
   14070:	mov	r0, r5
   14074:	bl	22d4 <memcpy@plt>
   14078:	mov	r5, #1
   1407c:	cmp	r4, #0
   14080:	add	r6, r6, r9
   14084:	blt	13f68 <el_line@plt+0x11ab4>
   14088:	mov	r0, r4
   1408c:	mov	r1, r9
   14090:	bl	192bc <el_line@plt+0x16e08>
   14094:	ldrb	r3, [r6]
   14098:	cmp	r3, #0
   1409c:	mov	r4, r0
   140a0:	bne	13f74 <el_line@plt+0x11ac0>
   140a4:	ldr	r0, [sp, #44]	; 0x2c
   140a8:	eor	r5, r5, #1
   140ac:	bl	1f20 <free@plt>
   140b0:	ldr	r1, [sp, #16]
   140b4:	mov	r3, #0
   140b8:	ldr	r2, [sp, #36]	; 0x24
   140bc:	cmp	r1, #0
   140c0:	strb	r3, [r7]
   140c4:	ldrne	r3, [sp, #8]
   140c8:	str	r8, [r2]
   140cc:	strne	r3, [r1]
   140d0:	ldr	r1, [sp, #12]
   140d4:	cmp	r4, r1
   140d8:	movge	r5, #0
   140dc:	andlt	r5, r5, #1
   140e0:	cmp	r5, #0
   140e4:	mvnne	r4, #0
   140e8:	b	14124 <el_line@plt+0x11c70>
   140ec:	mov	r0, r6
   140f0:	bl	1f20 <free@plt>
   140f4:	ldr	r2, [sp, #16]
   140f8:	cmp	r2, #0
   140fc:	movne	r3, #0
   14100:	strne	r3, [r2]
   14104:	cmp	r4, #0
   14108:	ldreq	r3, [sp, #44]	; 0x2c
   1410c:	mvnne	r4, #0
   14110:	ldreq	r1, [sp, #36]	; 0x24
   14114:	movne	r3, #0
   14118:	ldrne	r2, [sp, #36]	; 0x24
   1411c:	streq	r3, [r1]
   14120:	strne	r3, [r2]
   14124:	ldr	r1, [sp, #32]
   14128:	mov	r0, r4
   1412c:	ldr	r2, [sp, #52]	; 0x34
   14130:	ldr	r3, [r1]
   14134:	cmp	r2, r3
   14138:	bne	142fc <el_line@plt+0x11e48>
   1413c:	add	sp, sp, #60	; 0x3c
   14140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14144:	mov	r5, #0
   14148:	b	1407c <el_line@plt+0x11bc8>
   1414c:	str	r0, [sp, #4]
   14150:	bl	13e5c <el_line@plt+0x119a8>
   14154:	ldr	r3, [sp, #4]
   14158:	cmp	r0, #0
   1415c:	bne	142e0 <el_line@plt+0x11e2c>
   14160:	cmp	r9, #0
   14164:	ble	13f68 <el_line@plt+0x11ab4>
   14168:	add	sl, r6, #1
   1416c:	mov	r6, r5
   14170:	add	r9, sl, r9
   14174:	b	1425c <el_line@plt+0x11da8>
   14178:	mov	r1, r8
   1417c:	mov	r0, r7
   14180:	bl	19350 <el_line@plt+0x16e9c>
   14184:	mvn	r1, #3
   14188:	mov	r5, r0
   1418c:	ldr	r0, [sp, #12]
   14190:	bl	192bc <el_line@plt+0x16e08>
   14194:	cmp	r5, r0
   14198:	bge	1426c <el_line@plt+0x11db8>
   1419c:	ldr	r0, [sp, #24]
   141a0:	mvn	r1, #3
   141a4:	bl	192bc <el_line@plt+0x16e08>
   141a8:	ldr	r3, [sp, #8]
   141ac:	cmp	r3, r0
   141b0:	bgt	1426c <el_line@plt+0x11db8>
   141b4:	add	r2, r7, #4
   141b8:	add	r3, r8, fp
   141bc:	cmp	r2, r3
   141c0:	bcc	14294 <el_line@plt+0x11de0>
   141c4:	ldr	lr, [sp, #20]
   141c8:	add	fp, fp, #128	; 0x80
   141cc:	mov	r0, r8
   141d0:	cmp	fp, lr
   141d4:	movcs	fp, lr
   141d8:	mov	r1, fp
   141dc:	bl	2178 <realloc@plt>
   141e0:	cmp	r0, #0
   141e4:	beq	142e8 <el_line@plt+0x11e34>
   141e8:	add	r7, r0, r5
   141ec:	mov	r8, r0
   141f0:	mov	r5, r7
   141f4:	movw	r2, #1025	; 0x401
   141f8:	mov	r3, #0
   141fc:	mov	r0, r7
   14200:	ldrb	r1, [sl, #-1]
   14204:	bl	17c50 <el_line@plt+0x1579c>
   14208:	mov	r1, r5
   1420c:	mov	r6, #1
   14210:	mov	r7, r0
   14214:	bl	19350 <el_line@plt+0x16e9c>
   14218:	mov	r3, r0
   1421c:	ldr	r0, [sp, #8]
   14220:	mov	r1, r3
   14224:	str	r3, [sp, #4]
   14228:	bl	192bc <el_line@plt+0x16e08>
   1422c:	ldr	r3, [sp, #4]
   14230:	str	r0, [sp, #8]
   14234:	cmp	r4, #0
   14238:	mov	r5, sl
   1423c:	blt	14250 <el_line@plt+0x11d9c>
   14240:	mov	r0, r4
   14244:	mov	r1, r3
   14248:	bl	192bc <el_line@plt+0x16e08>
   1424c:	mov	r4, r0
   14250:	add	sl, sl, #1
   14254:	cmp	sl, r9
   14258:	beq	1429c <el_line@plt+0x11de8>
   1425c:	cmp	r6, #0
   14260:	bne	14178 <el_line@plt+0x11cc4>
   14264:	mov	r3, #4
   14268:	b	14234 <el_line@plt+0x11d80>
   1426c:	mov	r6, #0
   14270:	mov	r3, #4
   14274:	b	14234 <el_line@plt+0x11d80>
   14278:	cmp	r0, #13
   1427c:	beq	1428c <el_line@plt+0x11dd8>
   14280:	sub	r3, r0, #9
   14284:	cmp	r3, #1
   14288:	bhi	13fa4 <el_line@plt+0x11af0>
   1428c:	ldr	r3, [sp, #16]
   14290:	b	13fbc <el_line@plt+0x11b08>
   14294:	mov	r5, r7
   14298:	b	141f4 <el_line@plt+0x11d40>
   1429c:	mov	r3, r6
   142a0:	mov	r6, r5
   142a4:	mov	r5, r3
   142a8:	b	13f68 <el_line@plt+0x11ab4>
   142ac:	bl	2370 <__ctype_get_mb_cur_max@plt>
   142b0:	mov	r2, r0
   142b4:	mov	r0, #0
   142b8:	mov	r1, r0
   142bc:	bl	1f50 <mbtowc@plt>
   142c0:	bl	13e5c <el_line@plt+0x119a8>
   142c4:	cmp	r0, #0
   142c8:	bne	142f4 <el_line@plt+0x11e40>
   142cc:	mov	r9, #1
   142d0:	b	14168 <el_line@plt+0x11cb4>
   142d4:	mov	r5, r7
   142d8:	mov	r7, r2
   142dc:	b	14058 <el_line@plt+0x11ba4>
   142e0:	mov	r4, r3
   142e4:	b	140a4 <el_line@plt+0x11bf0>
   142e8:	mov	r5, #1
   142ec:	mvn	r4, #0
   142f0:	b	140a4 <el_line@plt+0x11bf0>
   142f4:	mov	r4, r9
   142f8:	b	140a4 <el_line@plt+0x11bf0>
   142fc:	bl	21e4 <__stack_chk_fail@plt>
   14300:	andeq	sl, r1, ip, lsr #29
   14304:	andeq	r0, r0, ip, lsr #4
   14308:	push	{r3}		; (str r3, [sp, #-4]!)
   1430c:	push	{r4, r5, r6, r7, lr}
   14310:	sub	sp, sp, #24
   14314:	ldr	lr, [pc, #128]	; 1439c <el_line@plt+0x11ee8>
   14318:	add	ip, sp, #48	; 0x30
   1431c:	ldr	r4, [pc, #124]	; 143a0 <el_line@plt+0x11eec>
   14320:	mov	r6, r0
   14324:	add	lr, pc, lr
   14328:	ldr	r3, [sp, #44]	; 0x2c
   1432c:	add	r0, sp, #16
   14330:	mov	r7, r1
   14334:	ldr	r4, [lr, r4]
   14338:	str	ip, [sp]
   1433c:	str	ip, [sp, #12]
   14340:	ldr	ip, [r4]
   14344:	str	ip, [sp, #20]
   14348:	bl	13ea4 <el_line@plt+0x119f0>
   1434c:	ldr	r1, [sp, #16]
   14350:	cmp	r1, #0
   14354:	strbeq	r1, [r6]
   14358:	mov	r5, r0
   1435c:	beq	14374 <el_line@plt+0x11ec0>
   14360:	mov	r0, r6
   14364:	mov	r2, r7
   14368:	bl	177d8 <el_line@plt+0x15324>
   1436c:	ldr	r0, [sp, #16]
   14370:	bl	1f20 <free@plt>
   14374:	ldr	r2, [sp, #20]
   14378:	mov	r0, r5
   1437c:	ldr	r3, [r4]
   14380:	cmp	r2, r3
   14384:	bne	14398 <el_line@plt+0x11ee4>
   14388:	add	sp, sp, #24
   1438c:	pop	{r4, r5, r6, r7, lr}
   14390:	add	sp, sp, #4
   14394:	bx	lr
   14398:	bl	21e4 <__stack_chk_fail@plt>
   1439c:	andeq	sl, r1, r0, asr #20
   143a0:	andeq	r0, r0, ip, lsr #4
   143a4:	ldr	ip, [pc, #128]	; 1442c <el_line@plt+0x11f78>
   143a8:	mov	r3, r1
   143ac:	push	{r4, r5, r6, lr}
   143b0:	add	ip, pc, ip
   143b4:	ldr	lr, [pc, #116]	; 14430 <el_line@plt+0x11f7c>
   143b8:	sub	sp, sp, #16
   143bc:	mov	r6, r0
   143c0:	mvn	r1, #-2147483648	; 0x80000000
   143c4:	add	r0, sp, #8
   143c8:	ldr	r5, [ip, lr]
   143cc:	str	r2, [sp]
   143d0:	mov	r2, #0
   143d4:	ldr	ip, [r5]
   143d8:	str	ip, [sp, #12]
   143dc:	bl	13ea4 <el_line@plt+0x119f0>
   143e0:	subs	r4, r0, #0
   143e4:	blt	14420 <el_line@plt+0x11f6c>
   143e8:	mov	r1, r6
   143ec:	ldr	r0, [sp, #8]
   143f0:	bl	2454 <fputs@plt>
   143f4:	cmn	r0, #1
   143f8:	ldr	r0, [sp, #8]
   143fc:	mvneq	r4, #0
   14400:	bl	1f20 <free@plt>
   14404:	mov	r0, r4
   14408:	ldr	r2, [sp, #12]
   1440c:	ldr	r3, [r5]
   14410:	cmp	r2, r3
   14414:	bne	14428 <el_line@plt+0x11f74>
   14418:	add	sp, sp, #16
   1441c:	pop	{r4, r5, r6, pc}
   14420:	mvn	r0, #0
   14424:	b	14408 <el_line@plt+0x11f54>
   14428:	bl	21e4 <__stack_chk_fail@plt>
   1442c:			; <UNDEFINED> instruction: 0x0001a9b4
   14430:	andeq	r0, r0, ip, lsr #4
   14434:	ldr	ip, [pc, #84]	; 14490 <el_line@plt+0x11fdc>
   14438:	push	{r1, r2, r3}
   1443c:	add	ip, pc, ip
   14440:	push	{r4, lr}
   14444:	sub	sp, sp, #12
   14448:	ldr	lr, [pc, #68]	; 14494 <el_line@plt+0x11fe0>
   1444c:	add	r3, sp, #24
   14450:	ldr	r1, [sp, #20]
   14454:	mov	r2, r3
   14458:	ldr	r4, [ip, lr]
   1445c:	str	r3, [sp]
   14460:	ldr	r3, [r4]
   14464:	str	r3, [sp, #4]
   14468:	bl	143a4 <el_line@plt+0x11ef0>
   1446c:	ldr	r2, [sp, #4]
   14470:	ldr	r3, [r4]
   14474:	cmp	r2, r3
   14478:	bne	1448c <el_line@plt+0x11fd8>
   1447c:	add	sp, sp, #12
   14480:	pop	{r4, lr}
   14484:	add	sp, sp, #12
   14488:	bx	lr
   1448c:	bl	21e4 <__stack_chk_fail@plt>
   14490:	andeq	sl, r1, r8, lsr #18
   14494:	andeq	r0, r0, ip, lsr #4
   14498:	push	{r0, r1, r2, r3}
   1449c:	ldr	r3, [pc, #92]	; 14500 <el_line@plt+0x1204c>
   144a0:	push	{r4, lr}
   144a4:	add	r3, pc, r3
   144a8:	ldr	lr, [pc, #84]	; 14504 <el_line@plt+0x12050>
   144ac:	sub	sp, sp, #8
   144b0:	add	r0, sp, #20
   144b4:	ldr	ip, [pc, #76]	; 14508 <el_line@plt+0x12054>
   144b8:	ldr	r1, [sp, #16]
   144bc:	ldr	r4, [r3, lr]
   144c0:	mov	r2, r0
   144c4:	str	r0, [sp]
   144c8:	ldr	r0, [r4]
   144cc:	str	r0, [sp, #4]
   144d0:	ldr	r3, [r3, ip]
   144d4:	ldr	r0, [r3]
   144d8:	bl	143a4 <el_line@plt+0x11ef0>
   144dc:	ldr	r2, [sp, #4]
   144e0:	ldr	r3, [r4]
   144e4:	cmp	r2, r3
   144e8:	bne	144fc <el_line@plt+0x12048>
   144ec:	add	sp, sp, #8
   144f0:	pop	{r4, lr}
   144f4:	add	sp, sp, #16
   144f8:	bx	lr
   144fc:	bl	21e4 <__stack_chk_fail@plt>
   14500:	andeq	sl, r1, r0, asr #17
   14504:	andeq	r0, r0, ip, lsr #4
   14508:	andeq	r0, r0, r0, ror r2
   1450c:	ldr	r3, [pc, #296]	; 1463c <el_line@plt+0x12188>
   14510:	push	{r4, r5, r6, lr}
   14514:	add	r3, pc, r3
   14518:	ldr	r4, [pc, #288]	; 14640 <el_line@plt+0x1218c>
   1451c:	sub	sp, sp, #24
   14520:	ldr	r5, [pc, #284]	; 14644 <el_line@plt+0x12190>
   14524:	add	ip, sp, #4
   14528:	ldm	r3, {r0, r1, r2, r3}
   1452c:	add	r4, pc, r4
   14530:	ldr	r4, [r4, r5]
   14534:	cmp	r0, #0
   14538:	stm	ip, {r0, r1, r2, r3}
   1453c:	ldr	r3, [r4]
   14540:	str	r3, [sp, #20]
   14544:	beq	145c4 <el_line@plt+0x12110>
   14548:	mov	r6, ip
   1454c:	bl	2460 <getenv@plt>
   14550:	subs	r5, r0, #0
   14554:	beq	145b8 <el_line@plt+0x12104>
   14558:	ldr	r1, [pc, #232]	; 14648 <el_line@plt+0x12194>
   1455c:	mov	r2, #2
   14560:	add	r1, pc, r1
   14564:	bl	2220 <strncasecmp@plt>
   14568:	cmp	r0, #0
   1456c:	bne	145c4 <el_line@plt+0x12110>
   14570:	ldr	r1, [pc, #212]	; 1464c <el_line@plt+0x12198>
   14574:	mov	r0, r5
   14578:	add	r1, pc, r1
   1457c:	bl	21b4 <strcasestr@plt>
   14580:	cmp	r0, #0
   14584:	beq	145ec <el_line@plt+0x12138>
   14588:	ldr	r1, [pc, #192]	; 14650 <el_line@plt+0x1219c>
   1458c:	mov	r0, #0
   14590:	add	r1, pc, r1
   14594:	bl	22a4 <setlocale@plt>
   14598:	cmp	r0, #0
   1459c:	beq	14624 <el_line@plt+0x12170>
   145a0:	ldr	r2, [sp, #20]
   145a4:	ldr	r3, [r4]
   145a8:	cmp	r2, r3
   145ac:	bne	14620 <el_line@plt+0x1216c>
   145b0:	add	sp, sp, #24
   145b4:	pop	{r4, r5, r6, pc}
   145b8:	ldr	r0, [r6, #4]!
   145bc:	cmp	r0, #0
   145c0:	bne	1454c <el_line@plt+0x12098>
   145c4:	ldr	r2, [sp, #20]
   145c8:	mov	r0, #0
   145cc:	ldr	r3, [r4]
   145d0:	ldr	r1, [pc, #124]	; 14654 <el_line@plt+0x121a0>
   145d4:	cmp	r2, r3
   145d8:	add	r1, pc, r1
   145dc:	bne	14620 <el_line@plt+0x1216c>
   145e0:	add	sp, sp, #24
   145e4:	pop	{r4, r5, r6, lr}
   145e8:	b	22a4 <setlocale@plt>
   145ec:	ldr	r1, [pc, #100]	; 14658 <el_line@plt+0x121a4>
   145f0:	mov	r0, r5
   145f4:	add	r1, pc, r1
   145f8:	bl	21b4 <strcasestr@plt>
   145fc:	cmp	r0, #0
   14600:	bne	14588 <el_line@plt+0x120d4>
   14604:	ldr	r2, [sp, #20]
   14608:	mov	r0, #0
   1460c:	ldr	r3, [r4]
   14610:	ldr	r1, [pc, #68]	; 1465c <el_line@plt+0x121a8>
   14614:	cmp	r2, r3
   14618:	add	r1, pc, r1
   1461c:	beq	145e0 <el_line@plt+0x1212c>
   14620:	bl	21e4 <__stack_chk_fail@plt>
   14624:	ldr	r1, [pc, #52]	; 14660 <el_line@plt+0x121ac>
   14628:	add	r1, pc, r1
   1462c:	bl	22a4 <setlocale@plt>
   14630:	cmp	r0, #0
   14634:	bne	145a0 <el_line@plt+0x120ec>
   14638:	b	14604 <el_line@plt+0x12150>
   1463c:	andeq	sl, r1, r4, lsl #22
   14640:	andeq	sl, r1, r8, lsr r8
   14644:	andeq	r0, r0, ip, lsr #4
   14648:			; <UNDEFINED> instruction: 0x00008fb8
   1464c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   14650:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   14654:	andeq	r5, r0, r0, asr #26
   14658:	andeq	r8, r0, r8, lsr #30
   1465c:	andeq	r6, r0, r4, ror fp
   14660:	andeq	r8, r0, r4, lsl #30
   14664:	push	{r3, lr}
   14668:	bl	237c <_exit@plt>
   1466c:	push	{r3, lr}
   14670:	ldr	r3, [pc, #44]	; 146a4 <el_line@plt+0x121f0>
   14674:	ldr	r2, [pc, #44]	; 146a8 <el_line@plt+0x121f4>
   14678:	add	r3, pc, r3
   1467c:	ldr	r3, [r3, r2]
   14680:	ldr	r0, [r3]
   14684:	bl	20d0 <__strdup@plt>
   14688:	cmp	r0, #0
   1468c:	popne	{r3, pc}
   14690:	ldr	r0, [pc, #20]	; 146ac <el_line@plt+0x121f8>
   14694:	add	r0, pc, r0
   14698:	bl	1fd4 <perror@plt>
   1469c:	mov	r0, #1
   146a0:	bl	1f8c <exit@plt>
   146a4:	andeq	sl, r1, ip, ror #13
   146a8:	andeq	r0, r0, r4, lsr r2
   146ac:	andeq	r8, r0, r0, asr #29
   146b0:	mov	r0, #0
   146b4:	bx	lr
   146b8:	ldr	r3, [pc, #176]	; 14770 <el_line@plt+0x122bc>
   146bc:	ldr	ip, [pc, #176]	; 14774 <el_line@plt+0x122c0>
   146c0:	add	r3, pc, r3
   146c4:	push	{r4, r5, r6, r7, lr}
   146c8:	sub	sp, sp, #292	; 0x124
   146cc:	ldr	r4, [r3, ip]
   146d0:	mov	r5, r1
   146d4:	add	r2, sp, #144	; 0x90
   146d8:	mov	r1, #0
   146dc:	mov	r6, r0
   146e0:	ldr	r3, [r4]
   146e4:	str	r3, [sp, #284]	; 0x11c
   146e8:	bl	228c <sigaction@plt>
   146ec:	cmn	r0, #1
   146f0:	beq	14764 <el_line@plt+0x122b0>
   146f4:	ldr	r0, [sp, #144]	; 0x90
   146f8:	cmp	r0, r5
   146fc:	beq	1474c <el_line@plt+0x12298>
   14700:	add	r7, sp, #4
   14704:	mov	r1, #0
   14708:	mov	r2, #140	; 0x8c
   1470c:	mov	r0, r7
   14710:	bl	2064 <memset@plt>
   14714:	add	r0, sp, #8
   14718:	bl	2400 <sigemptyset@plt>
   1471c:	cmp	r6, #14
   14720:	mov	r0, r6
   14724:	mov	r1, r7
   14728:	mov	r2, #0
   1472c:	movne	r3, #0
   14730:	moveq	r3, #536870912	; 0x20000000
   14734:	str	r5, [sp, #4]
   14738:	str	r3, [sp, #136]	; 0x88
   1473c:	bl	228c <sigaction@plt>
   14740:	cmn	r0, #1
   14744:	beq	14764 <el_line@plt+0x122b0>
   14748:	ldr	r0, [sp, #144]	; 0x90
   1474c:	ldr	r2, [sp, #284]	; 0x11c
   14750:	ldr	r3, [r4]
   14754:	cmp	r2, r3
   14758:	bne	1476c <el_line@plt+0x122b8>
   1475c:	add	sp, sp, #292	; 0x124
   14760:	pop	{r4, r5, r6, r7, pc}
   14764:	mvn	r0, #0
   14768:	b	1474c <el_line@plt+0x12298>
   1476c:	bl	21e4 <__stack_chk_fail@plt>
   14770:	andeq	sl, r1, r4, lsr #13
   14774:	andeq	r0, r0, ip, lsr #4
   14778:	mov	r0, #0
   1477c:	bx	lr
   14780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14784:	sub	sp, sp, #20
   14788:	ldrb	r6, [r0]
   1478c:	mov	r7, r0
   14790:	str	r1, [sp, #12]
   14794:	tst	r6, #128	; 0x80
   14798:	bne	147dc <el_line@plt+0x12328>
   1479c:	bl	2274 <__ctype_b_loc@plt>
   147a0:	mov	r3, r7
   147a4:	ldr	r0, [r0]
   147a8:	b	147bc <el_line@plt+0x12308>
   147ac:	ldrb	r6, [r3, #1]
   147b0:	mov	r3, r2
   147b4:	tst	r6, #128	; 0x80
   147b8:	bne	147dc <el_line@plt+0x12328>
   147bc:	lsl	r6, r6, #1
   147c0:	add	r2, r3, #1
   147c4:	ldrh	r1, [r0, r6]
   147c8:	mov	r7, r2
   147cc:	tst	r1, #8192	; 0x2000
   147d0:	bne	147ac <el_line@plt+0x122f8>
   147d4:	ldrb	r6, [r3]
   147d8:	mov	r7, r3
   147dc:	mov	r4, #0
   147e0:	subs	r1, r6, #45	; 0x2d
   147e4:	rsbs	r3, r1, #0
   147e8:	adcs	r3, r3, r1
   147ec:	subs	r0, r6, #43	; 0x2b
   147f0:	rsbs	r2, r0, #0
   147f4:	adcs	r2, r2, r0
   147f8:	orrs	r1, r2, r3
   147fc:	beq	14850 <el_line@plt+0x1239c>
   14800:	cmp	r3, #0
   14804:	bne	14828 <el_line@plt+0x12374>
   14808:	cmp	r2, #0
   1480c:	beq	147e0 <el_line@plt+0x1232c>
   14810:	cmp	r4, #0
   14814:	mov	r4, #1
   14818:	bne	14834 <el_line@plt+0x12380>
   1481c:	ldrb	r6, [r7, #1]
   14820:	add	r7, r7, #1
   14824:	b	147e0 <el_line@plt+0x1232c>
   14828:	cmp	r4, #0
   1482c:	mvn	r4, #0
   14830:	beq	1481c <el_line@plt+0x12368>
   14834:	bl	23ac <__errno_location@plt>
   14838:	mvn	r6, #0
   1483c:	mov	r3, #22
   14840:	str	r3, [r0]
   14844:	mov	r0, r6
   14848:	add	sp, sp, #20
   1484c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14850:	bics	r8, r6, #127	; 0x7f
   14854:	bne	1494c <el_line@plt+0x12498>
   14858:	bl	2274 <__ctype_b_loc@plt>
   1485c:	mov	r2, #0
   14860:	mov	r3, #0
   14864:	strd	r2, [sp]
   14868:	mov	r5, r8
   1486c:	ldr	sl, [sp]
   14870:	ldr	r9, [sp, #4]
   14874:	ldr	fp, [r0]
   14878:	b	148a4 <el_line@plt+0x123f0>
   1487c:	cmp	r6, #46	; 0x2e
   14880:	bne	14964 <el_line@plt+0x124b0>
   14884:	cmp	r8, #0
   14888:	bne	14834 <el_line@plt+0x12380>
   1488c:	mov	r8, #1
   14890:	ldrb	r6, [r7, #1]
   14894:	add	r3, r7, #1
   14898:	tst	r6, #128	; 0x80
   1489c:	mov	r7, r3
   148a0:	bne	14964 <el_line@plt+0x124b0>
   148a4:	lsl	r3, r6, #1
   148a8:	ldrh	r3, [fp, r3]
   148ac:	tst	r3, #2048	; 0x800
   148b0:	beq	1487c <el_line@plt+0x123c8>
   148b4:	cmp	r6, #46	; 0x2e
   148b8:	beq	14884 <el_line@plt+0x123d0>
   148bc:	mov	r0, r6
   148c0:	mvn	r1, #47	; 0x2f
   148c4:	bl	192bc <el_line@plt+0x16e08>
   148c8:	cmp	r8, #0
   148cc:	mov	r6, r0
   148d0:	beq	1490c <el_line@plt+0x12458>
   148d4:	cmp	r8, #19
   148d8:	bhi	14890 <el_line@plt+0x123dc>
   148dc:	ldrd	r0, [sp]
   148e0:	mov	r2, #10
   148e4:	mov	r3, #0
   148e8:	add	r8, r8, #1
   148ec:	bl	19400 <el_line@plt+0x16f4c>
   148f0:	mov	r2, r0
   148f4:	mov	r3, r1
   148f8:	mov	r0, r6
   148fc:	mov	r1, #0
   14900:	bl	192fc <el_line@plt+0x16e48>
   14904:	strd	r0, [sp]
   14908:	b	14890 <el_line@plt+0x123dc>
   1490c:	add	r5, r5, #1
   14910:	cmp	r5, #20
   14914:	bhi	14a14 <el_line@plt+0x12560>
   14918:	mov	r0, sl
   1491c:	mov	r1, r9
   14920:	mov	r2, #10
   14924:	mov	r3, #0
   14928:	bl	19400 <el_line@plt+0x16f4c>
   1492c:	mov	r2, r0
   14930:	mov	r3, r1
   14934:	mov	r0, r6
   14938:	mov	r1, r8
   1493c:	bl	192fc <el_line@plt+0x16e48>
   14940:	mov	sl, r0
   14944:	mov	r9, r1
   14948:	b	14890 <el_line@plt+0x123dc>
   1494c:	mov	r2, #0
   14950:	mov	r3, #0
   14954:	strd	r2, [sp]
   14958:	mov	r8, r1
   1495c:	ldr	sl, [sp]
   14960:	ldr	r9, [sp, #4]
   14964:	cmp	r4, #0
   14968:	beq	149a0 <el_line@plt+0x124ec>
   1496c:	asr	r5, r4, #31
   14970:	mov	r0, sl
   14974:	mov	r1, r9
   14978:	mov	r2, r4
   1497c:	mov	r3, r5
   14980:	bl	19400 <el_line@plt+0x16f4c>
   14984:	mov	r2, r4
   14988:	mov	r3, r5
   1498c:	mov	sl, r0
   14990:	mov	r9, r1
   14994:	ldrd	r0, [sp]
   14998:	bl	19400 <el_line@plt+0x16f4c>
   1499c:	strd	r0, [sp]
   149a0:	cmp	r6, #0
   149a4:	beq	149fc <el_line@plt+0x12548>
   149a8:	ldr	r4, [pc, #388]	; 14b34 <el_line@plt+0x12680>
   149ac:	mov	r5, #0
   149b0:	add	r4, pc, r4
   149b4:	ldrb	fp, [r5, r4]
   149b8:	cmp	r6, fp
   149bc:	beq	14a30 <el_line@plt+0x1257c>
   149c0:	bl	2424 <__ctype_tolower_loc@plt>
   149c4:	ldr	r3, [r0]
   149c8:	ldr	r3, [r3, fp, lsl #2]
   149cc:	cmp	r6, r3
   149d0:	beq	14a30 <el_line@plt+0x1257c>
   149d4:	add	r5, r5, #1
   149d8:	cmp	r5, #7
   149dc:	bne	149b4 <el_line@plt+0x12500>
   149e0:	bl	23ac <__errno_location@plt>
   149e4:	mvn	r6, #0
   149e8:	mov	r3, #34	; 0x22
   149ec:	str	r3, [r0]
   149f0:	mov	r0, r6
   149f4:	add	sp, sp, #20
   149f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149fc:	ldr	r3, [sp, #12]
   14a00:	mov	r0, r6
   14a04:	str	sl, [r3]
   14a08:	str	r9, [r3, #4]
   14a0c:	add	sp, sp, #20
   14a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a14:	bl	23ac <__errno_location@plt>
   14a18:	mvn	r6, #0
   14a1c:	mov	r3, #34	; 0x22
   14a20:	str	r3, [r0]
   14a24:	mov	r0, r6
   14a28:	add	sp, sp, #20
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	bl	2274 <__ctype_b_loc@plt>
   14a34:	ldrb	r3, [r7, #1]
   14a38:	lsl	r3, r3, #1
   14a3c:	ldr	r2, [r0]
   14a40:	ldrh	r3, [r2, r3]
   14a44:	tst	r3, #8
   14a48:	bne	14834 <el_line@plt+0x12380>
   14a4c:	ldr	r3, [pc, #228]	; 14b38 <el_line@plt+0x12684>
   14a50:	mov	r0, sl
   14a54:	mov	r1, r9
   14a58:	add	r3, pc, r3
   14a5c:	add	r5, r3, r5, lsl #3
   14a60:	ldrd	r6, [r5, #8]
   14a64:	mov	r2, r6
   14a68:	mov	r3, r7
   14a6c:	bl	19400 <el_line@plt+0x16f4c>
   14a70:	mov	r2, r6
   14a74:	mov	r3, r7
   14a78:	mov	sl, r0
   14a7c:	mov	fp, r1
   14a80:	mvn	r0, #0
   14a84:	mvn	r1, #-2147483648	; 0x80000000
   14a88:	bl	19228 <el_line@plt+0x16d74>
   14a8c:	ldrd	r2, [sp]
   14a90:	mov	r4, r0
   14a94:	mov	r5, r1
   14a98:	cmp	r2, r4
   14a9c:	sbcs	r3, r3, r5
   14aa0:	blt	14ac8 <el_line@plt+0x12614>
   14aa4:	ldrd	r0, [sp]
   14aa8:	mov	r2, #10
   14aac:	mov	r3, #0
   14ab0:	sub	r8, r8, #1
   14ab4:	bl	19228 <el_line@plt+0x16d74>
   14ab8:	cmp	r0, r4
   14abc:	sbcs	r2, r1, r5
   14ac0:	strd	r0, [sp]
   14ac4:	bge	14aa4 <el_line@plt+0x125f0>
   14ac8:	mov	r2, r6
   14acc:	mov	r3, r7
   14ad0:	ldrd	r0, [sp]
   14ad4:	bl	19400 <el_line@plt+0x16f4c>
   14ad8:	cmp	r8, #1
   14adc:	mov	r2, r0
   14ae0:	mov	r3, r1
   14ae4:	bls	14b18 <el_line@plt+0x12664>
   14ae8:	sub	r8, r8, #1
   14aec:	mov	r4, #0
   14af0:	mov	r0, r2
   14af4:	mov	r1, r3
   14af8:	mov	r2, #10
   14afc:	mov	r3, #0
   14b00:	bl	19228 <el_line@plt+0x16d74>
   14b04:	add	r4, r4, #1
   14b08:	cmp	r8, r4
   14b0c:	mov	r2, r0
   14b10:	mov	r3, r1
   14b14:	bne	14af0 <el_line@plt+0x1263c>
   14b18:	mov	r0, sl
   14b1c:	mov	r1, fp
   14b20:	bl	192fc <el_line@plt+0x16e48>
   14b24:	ldr	r3, [sp, #12]
   14b28:	mov	r6, #0
   14b2c:	strd	r0, [r3]
   14b30:	b	14844 <el_line@plt+0x12390>
   14b34:			; <UNDEFINED> instruction: 0x00008bb0
   14b38:	andeq	r8, r0, r8, lsl #22
   14b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b40:	asr	r4, r1, #31
   14b44:	sub	sp, sp, #44	; 0x2c
   14b48:	mov	r6, r0
   14b4c:	mov	r3, r4
   14b50:	mov	r7, r1
   14b54:	mov	sl, r2
   14b58:	eor	r0, r4, r0
   14b5c:	eor	r1, r4, r1
   14b60:	mov	r2, r4
   14b64:	bl	19390 <el_line@plt+0x16edc>
   14b68:	cmp	r0, #0
   14b6c:	sbcs	r3, r1, #0
   14b70:	blt	14dd4 <el_line@plt+0x12920>
   14b74:	ldr	ip, [pc, #620]	; 14de8 <el_line@plt+0x12934>
   14b78:	lsr	r2, r0, #10
   14b7c:	orr	r2, r2, r1, lsl #22
   14b80:	asr	r3, r1, #10
   14b84:	add	ip, pc, ip
   14b88:	mov	r8, #0
   14b8c:	ldrd	r4, [ip, #8]!
   14b90:	cmp	r2, r4
   14b94:	sbcs	lr, r3, r5
   14b98:	blt	14c60 <el_line@plt+0x127ac>
   14b9c:	add	r8, r8, #1
   14ba0:	cmp	r8, #7
   14ba4:	bne	14b8c <el_line@plt+0x126d8>
   14ba8:	mov	r9, #0
   14bac:	mov	r4, #0
   14bb0:	mov	r5, #0
   14bb4:	orrs	lr, r6, r7
   14bb8:	beq	14d40 <el_line@plt+0x1288c>
   14bbc:	adds	r2, r6, #99	; 0x63
   14bc0:	adc	r3, r7, #0
   14bc4:	cmp	r3, #0
   14bc8:	cmpeq	r2, #198	; 0xc6
   14bcc:	movls	r8, #0
   14bd0:	movhi	r8, #1
   14bd4:	cmp	r9, #0
   14bd8:	orreq	r8, r8, #1
   14bdc:	cmp	r8, #0
   14be0:	beq	14d64 <el_line@plt+0x128b0>
   14be4:	cmp	r4, #5
   14be8:	sbcs	r3, r5, #0
   14bec:	blt	14c1c <el_line@plt+0x12768>
   14bf0:	cmp	r6, #0
   14bf4:	sbcs	lr, r7, #0
   14bf8:	mov	r0, r6
   14bfc:	mov	r1, r7
   14c00:	movge	r2, #1
   14c04:	movge	r3, #0
   14c08:	mvnlt	r2, #0
   14c0c:	mvnlt	r3, #0
   14c10:	bl	192fc <el_line@plt+0x16e48>
   14c14:	mov	r6, r0
   14c18:	mov	r7, r1
   14c1c:	ldr	r3, [pc, #456]	; 14dec <el_line@plt+0x12938>
   14c20:	mov	r0, sl
   14c24:	ldr	lr, [pc, #452]	; 14df0 <el_line@plt+0x1293c>
   14c28:	mov	r1, #7
   14c2c:	add	r3, pc, r3
   14c30:	strd	r6, [sp, #8]
   14c34:	add	lr, pc, lr
   14c38:	mov	r2, #1
   14c3c:	ldrb	ip, [r3, r9]
   14c40:	mvn	r3, #0
   14c44:	str	lr, [sp]
   14c48:	str	ip, [sp, #16]
   14c4c:	bl	231c <__snprintf_chk@plt>
   14c50:	mov	r3, #0
   14c54:	mov	r0, r3
   14c58:	add	sp, sp, #44	; 0x2c
   14c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c60:	ldr	fp, [pc, #396]	; 14df4 <el_line@plt+0x12940>
   14c64:	cmp	r8, #0
   14c68:	add	fp, pc, fp
   14c6c:	add	r3, fp, r8, lsl #2
   14c70:	ldr	r9, [r3, #64]	; 0x40
   14c74:	beq	14dac <el_line@plt+0x128f8>
   14c78:	mov	r2, r4
   14c7c:	mov	r3, r5
   14c80:	bl	19228 <el_line@plt+0x16d74>
   14c84:	mov	r0, r6
   14c88:	mov	r1, r7
   14c8c:	lsl	r8, r8, #3
   14c90:	strd	r2, [sp, #32]
   14c94:	mov	r2, r4
   14c98:	mov	r3, r5
   14c9c:	movw	r4, #1023	; 0x3ff
   14ca0:	bl	19228 <el_line@plt+0x16d74>
   14ca4:	ldrd	r2, [r8, fp]
   14ca8:	mov	r5, #0
   14cac:	mov	r6, r0
   14cb0:	mov	r7, r1
   14cb4:	ldrd	r0, [sp, #32]
   14cb8:	bl	19228 <el_line@plt+0x16d74>
   14cbc:	mov	r2, #10
   14cc0:	mov	r3, #0
   14cc4:	bl	19400 <el_line@plt+0x16f4c>
   14cc8:	mov	r2, #512	; 0x200
   14ccc:	mov	r3, #0
   14cd0:	bl	192fc <el_line@plt+0x16e48>
   14cd4:	asr	r2, r1, #31
   14cd8:	asr	r3, r2, #31
   14cdc:	and	r2, r2, r4
   14ce0:	and	r3, r3, r5
   14ce4:	adds	r0, r0, r2
   14ce8:	adc	r1, r1, r3
   14cec:	lsr	r3, r0, #10
   14cf0:	orr	r4, r3, r1, lsl #22
   14cf4:	asr	r5, r1, #10
   14cf8:	cmp	r5, #0
   14cfc:	cmpeq	r4, #10
   14d00:	bne	14bb4 <el_line@plt+0x12700>
   14d04:	cmp	r6, #0
   14d08:	sbcs	r3, r7, #0
   14d0c:	mov	r0, r6
   14d10:	mov	r1, r7
   14d14:	mov	r4, #0
   14d18:	movge	r2, #1
   14d1c:	movge	r3, #0
   14d20:	mvnlt	r2, #0
   14d24:	mvnlt	r3, #0
   14d28:	bl	192fc <el_line@plt+0x16e48>
   14d2c:	mov	r5, #0
   14d30:	mov	r6, r0
   14d34:	mov	r7, r1
   14d38:	orrs	lr, r6, r7
   14d3c:	bne	14bbc <el_line@plt+0x12708>
   14d40:	ldr	r1, [pc, #176]	; 14df8 <el_line@plt+0x12944>
   14d44:	mov	r0, sl
   14d48:	mov	r2, #7
   14d4c:	add	r1, pc, r1
   14d50:	bl	177d8 <el_line@plt+0x15324>
   14d54:	mov	r3, #0
   14d58:	mov	r0, r3
   14d5c:	add	sp, sp, #44	; 0x2c
   14d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d64:	ldr	r3, [pc, #144]	; 14dfc <el_line@plt+0x12948>
   14d68:	mov	r0, sl
   14d6c:	ldr	lr, [pc, #140]	; 14e00 <el_line@plt+0x1294c>
   14d70:	mov	r1, #7
   14d74:	add	r3, pc, r3
   14d78:	strd	r6, [sp, #8]
   14d7c:	add	lr, pc, lr
   14d80:	mov	r2, #1
   14d84:	ldrb	ip, [r3, r9]
   14d88:	mvn	r3, #0
   14d8c:	strd	r4, [sp, #16]
   14d90:	str	lr, [sp]
   14d94:	str	ip, [sp, #24]
   14d98:	bl	231c <__snprintf_chk@plt>
   14d9c:	mov	r3, r8
   14da0:	mov	r0, r3
   14da4:	add	sp, sp, #44	; 0x2c
   14da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dac:	mov	r0, r6
   14db0:	mov	r1, r7
   14db4:	mov	r2, r4
   14db8:	mov	r3, r5
   14dbc:	bl	19228 <el_line@plt+0x16d74>
   14dc0:	mov	r4, #0
   14dc4:	mov	r5, #0
   14dc8:	mov	r6, r0
   14dcc:	mov	r7, r1
   14dd0:	b	14bb4 <el_line@plt+0x12700>
   14dd4:	bl	23ac <__errno_location@plt>
   14dd8:	mov	r2, #34	; 0x22
   14ddc:	mvn	r3, #0
   14de0:	str	r2, [r0]
   14de4:	b	14c54 <el_line@plt+0x127a0>
   14de8:	ldrdeq	r8, [r0], -ip
   14dec:	andeq	r8, r0, r4, lsr r9
   14df0:	andeq	r8, r0, ip, lsl #19
   14df4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   14df8:	andeq	r8, r0, r0, ror r8
   14dfc:	andeq	r8, r0, ip, ror #15
   14e00:	andeq	r8, r0, ip, asr #16
   14e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e08:	mov	r6, r0
   14e0c:	sub	sp, sp, #20
   14e10:	mov	r9, r1
   14e14:	mov	r0, r1
   14e18:	mov	r1, r6
   14e1c:	mov	r7, r2
   14e20:	mov	r5, r3
   14e24:	bl	19350 <el_line@plt+0x16e9c>
   14e28:	mov	r1, r9
   14e2c:	str	r0, [sp]
   14e30:	mov	r0, r7
   14e34:	bl	19350 <el_line@plt+0x16e9c>
   14e38:	str	r0, [sp, #4]
   14e3c:	ldm	sp, {r0, r1}
   14e40:	bl	18c00 <el_line@plt+0x1674c>
   14e44:	subs	r4, r1, #0
   14e48:	beq	14f30 <el_line@plt+0x12a7c>
   14e4c:	ldr	r0, [sp, #4]
   14e50:	b	14e58 <el_line@plt+0x129a4>
   14e54:	mov	r4, r1
   14e58:	mov	r1, r4
   14e5c:	bl	18c00 <el_line@plt+0x1674c>
   14e60:	mov	r0, r4
   14e64:	cmp	r1, #0
   14e68:	bne	14e54 <el_line@plt+0x129a0>
   14e6c:	mov	r0, r7
   14e70:	mov	r1, r6
   14e74:	bl	19350 <el_line@plt+0x16e9c>
   14e78:	mov	r1, r4
   14e7c:	bl	189e0 <el_line@plt+0x1652c>
   14e80:	cmp	r4, #0
   14e84:	mov	r7, r0
   14e88:	ble	14f28 <el_line@plt+0x12a74>
   14e8c:	add	r8, r5, r9, lsl #2
   14e90:	mov	r6, #0
   14e94:	add	r4, r4, r9
   14e98:	str	r9, [sp, #8]
   14e9c:	str	r4, [sp, #12]
   14ea0:	cmp	r7, #0
   14ea4:	ldr	sl, [sp, #8]
   14ea8:	ldrgt	r4, [r8, r6]
   14eac:	movgt	fp, #0
   14eb0:	bgt	14ee8 <el_line@plt+0x12a34>
   14eb4:	b	14f0c <el_line@plt+0x12a58>
   14eb8:	bl	19350 <el_line@plt+0x16e9c>
   14ebc:	mov	sl, r0
   14ec0:	ldr	ip, [r5, sl, lsl #2]
   14ec4:	mov	r0, fp
   14ec8:	str	r4, [r5, sl, lsl #2]
   14ecc:	mov	r1, #1
   14ed0:	str	ip, [r8, r6]
   14ed4:	mov	r4, ip
   14ed8:	bl	192bc <el_line@plt+0x16e08>
   14edc:	cmp	r0, r7
   14ee0:	mov	fp, r0
   14ee4:	beq	14f0c <el_line@plt+0x12a58>
   14ee8:	cmp	r9, sl
   14eec:	mov	r0, sl
   14ef0:	ldr	r1, [sp]
   14ef4:	ble	14eb8 <el_line@plt+0x12a04>
   14ef8:	mov	r0, sl
   14efc:	ldr	r1, [sp, #4]
   14f00:	bl	192bc <el_line@plt+0x16e08>
   14f04:	mov	sl, r0
   14f08:	b	14ec0 <el_line@plt+0x12a0c>
   14f0c:	ldr	r2, [sp, #8]
   14f10:	add	r6, r6, #4
   14f14:	ldr	r3, [sp, #12]
   14f18:	add	r2, r2, #1
   14f1c:	str	r2, [sp, #8]
   14f20:	cmp	r2, r3
   14f24:	bne	14ea0 <el_line@plt+0x129ec>
   14f28:	add	sp, sp, #20
   14f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f30:	ldr	r4, [sp, #4]
   14f34:	b	14e6c <el_line@plt+0x129b8>
   14f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f3c:	sub	sp, sp, #28
   14f40:	ldr	r4, [pc, #904]	; 152d0 <el_line@plt+0x12e1c>
   14f44:	mov	sl, r2
   14f48:	str	r0, [sp, #20]
   14f4c:	mov	r9, r3
   14f50:	add	r4, pc, r4
   14f54:	ldr	r0, [pc, #888]	; 152d4 <el_line@plt+0x12e20>
   14f58:	str	r1, [sp, #16]
   14f5c:	mov	r1, #1
   14f60:	ldr	ip, [r4]
   14f64:	add	r0, pc, r0
   14f68:	ldr	r7, [r0]
   14f6c:	mov	r0, ip
   14f70:	str	ip, [sp, #8]
   14f74:	bl	192bc <el_line@plt+0x16e08>
   14f78:	mov	r1, #61	; 0x3d
   14f7c:	str	r0, [sp, #12]
   14f80:	mov	r0, r7
   14f84:	ldr	r3, [sp, #12]
   14f88:	str	r3, [r4]
   14f8c:	bl	2490 <strchr@plt>
   14f90:	subs	ip, r0, #0
   14f94:	str	ip, [sp, #4]
   14f98:	beq	15170 <el_line@plt+0x12cbc>
   14f9c:	mov	r1, r7
   14fa0:	add	ip, ip, #1
   14fa4:	str	ip, [sp, #4]
   14fa8:	bl	19350 <el_line@plt+0x16e9c>
   14fac:	mov	r5, r0
   14fb0:	ldr	fp, [sl]
   14fb4:	cmp	fp, #0
   14fb8:	beq	150d0 <el_line@plt+0x12c1c>
   14fbc:	mov	r6, sl
   14fc0:	mov	r4, #0
   14fc4:	mvn	r8, #0
   14fc8:	mov	r0, r7
   14fcc:	mov	r1, fp
   14fd0:	mov	r2, r5
   14fd4:	bl	1f44 <strncmp@plt>
   14fd8:	cmp	r0, #0
   14fdc:	mov	r0, fp
   14fe0:	bne	15018 <el_line@plt+0x12b64>
   14fe4:	bl	2310 <strlen@plt>
   14fe8:	cmp	r5, r0
   14fec:	beq	1512c <el_line@plt+0x12c78>
   14ff0:	subs	r2, r5, #1
   14ff4:	rsbs	r3, r2, #0
   14ff8:	adcs	r3, r3, r2
   14ffc:	cmp	r9, #0
   15000:	moveq	r3, #0
   15004:	cmp	r3, #0
   15008:	bne	15018 <el_line@plt+0x12b64>
   1500c:	cmn	r8, #1
   15010:	mov	r8, r4
   15014:	bne	15180 <el_line@plt+0x12ccc>
   15018:	mov	r0, r4
   1501c:	mov	r1, #1
   15020:	bl	192bc <el_line@plt+0x16e08>
   15024:	ldr	fp, [r6, #16]!
   15028:	cmp	fp, #0
   1502c:	mov	r4, r0
   15030:	bne	14fc8 <el_line@plt+0x12b14>
   15034:	cmn	r8, #1
   15038:	beq	150d0 <el_line@plt+0x12c1c>
   1503c:	add	r8, sl, r8, lsl #4
   15040:	ldr	r3, [r8, #4]
   15044:	cmp	r3, #0
   15048:	beq	15078 <el_line@plt+0x12bc4>
   1504c:	sub	r2, r3, #1
   15050:	cmp	r2, #1
   15054:	bls	151bc <el_line@plt+0x12d08>
   15058:	ldr	r3, [r8, #8]
   1505c:	cmp	r3, #0
   15060:	ldrne	r2, [r8, #12]
   15064:	movne	r0, #0
   15068:	ldreq	r0, [r8, #12]
   1506c:	strne	r2, [r3]
   15070:	add	sp, sp, #28
   15074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15078:	ldr	r3, [sp, #4]
   1507c:	cmp	r3, #0
   15080:	beq	15058 <el_line@plt+0x12ba4>
   15084:	ldr	r3, [pc, #588]	; 152d8 <el_line@plt+0x12e24>
   15088:	add	r3, pc, r3
   1508c:	ldr	r3, [r3, #4]
   15090:	cmp	r3, #0
   15094:	bne	15144 <el_line@plt+0x12c90>
   15098:	ldr	r3, [r8, #8]
   1509c:	cmp	r3, #0
   150a0:	beq	15290 <el_line@plt+0x12ddc>
   150a4:	ldr	r3, [pc, #560]	; 152dc <el_line@plt+0x12e28>
   150a8:	mov	r2, #0
   150ac:	add	r3, pc, r3
   150b0:	str	r2, [r3, #8]
   150b4:	ldr	ip, [sp, #16]
   150b8:	ldrb	r3, [ip]
   150bc:	cmp	r3, #58	; 0x3a
   150c0:	beq	15288 <el_line@plt+0x12dd4>
   150c4:	mov	r0, #63	; 0x3f
   150c8:	add	sp, sp, #28
   150cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150d0:	cmp	r9, #0
   150d4:	bne	152a4 <el_line@plt+0x12df0>
   150d8:	ldr	r3, [pc, #512]	; 152e0 <el_line@plt+0x12e2c>
   150dc:	add	r3, pc, r3
   150e0:	ldr	r3, [r3, #4]
   150e4:	cmp	r3, #0
   150e8:	beq	15110 <el_line@plt+0x12c5c>
   150ec:	ldr	ip, [sp, #16]
   150f0:	ldrb	r3, [ip]
   150f4:	cmp	r3, #58	; 0x3a
   150f8:	beq	15110 <el_line@plt+0x12c5c>
   150fc:	ldr	r0, [pc, #480]	; 152e4 <el_line@plt+0x12e30>
   15100:	mov	r1, r7
   15104:	add	r0, pc, r0
   15108:	add	r0, r0, #104	; 0x68
   1510c:	bl	112ec <el_line@plt+0xee38>
   15110:	ldr	r3, [pc, #464]	; 152e8 <el_line@plt+0x12e34>
   15114:	mov	r2, #0
   15118:	mov	r0, #63	; 0x3f
   1511c:	add	r3, pc, r3
   15120:	str	r2, [r3, #8]
   15124:	add	sp, sp, #28
   15128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1512c:	mov	r8, r4
   15130:	add	r8, sl, r8, lsl #4
   15134:	ldr	r3, [r8, #4]
   15138:	cmp	r3, #0
   1513c:	bne	1504c <el_line@plt+0x12b98>
   15140:	b	15078 <el_line@plt+0x12bc4>
   15144:	ldr	ip, [sp, #16]
   15148:	ldrb	r3, [ip]
   1514c:	cmp	r3, #58	; 0x3a
   15150:	beq	15098 <el_line@plt+0x12be4>
   15154:	ldr	r0, [pc, #400]	; 152ec <el_line@plt+0x12e38>
   15158:	mov	r1, r5
   1515c:	mov	r2, r7
   15160:	add	r0, pc, r0
   15164:	add	r0, r0, #28
   15168:	bl	112ec <el_line@plt+0xee38>
   1516c:	b	15098 <el_line@plt+0x12be4>
   15170:	mov	r0, r7
   15174:	bl	2310 <strlen@plt>
   15178:	mov	r5, r0
   1517c:	b	14fb0 <el_line@plt+0x12afc>
   15180:	ldr	r3, [pc, #360]	; 152f0 <el_line@plt+0x12e3c>
   15184:	add	r3, pc, r3
   15188:	ldr	r3, [r3, #4]
   1518c:	cmp	r3, #0
   15190:	beq	15110 <el_line@plt+0x12c5c>
   15194:	ldr	ip, [sp, #16]
   15198:	ldrb	r3, [ip]
   1519c:	cmp	r3, #58	; 0x3a
   151a0:	beq	15110 <el_line@plt+0x12c5c>
   151a4:	ldr	r0, [pc, #328]	; 152f4 <el_line@plt+0x12e40>
   151a8:	mov	r1, r5
   151ac:	mov	r2, r7
   151b0:	add	r0, pc, r0
   151b4:	bl	112ec <el_line@plt+0xee38>
   151b8:	b	15110 <el_line@plt+0x12c5c>
   151bc:	ldr	ip, [sp, #4]
   151c0:	cmp	ip, #0
   151c4:	ldrne	r3, [pc, #300]	; 152f8 <el_line@plt+0x12e44>
   151c8:	addne	r3, pc, r3
   151cc:	strne	ip, [r3]
   151d0:	bne	15058 <el_line@plt+0x12ba4>
   151d4:	cmp	r3, #1
   151d8:	bne	15058 <el_line@plt+0x12ba4>
   151dc:	mov	r1, #2
   151e0:	ldr	r0, [sp, #8]
   151e4:	bl	192bc <el_line@plt+0x16e08>
   151e8:	ldr	r3, [pc, #268]	; 152fc <el_line@plt+0x12e48>
   151ec:	ldr	ip, [sp, #12]
   151f0:	add	r3, pc, r3
   151f4:	ldr	r1, [pc, #260]	; 15300 <el_line@plt+0x12e4c>
   151f8:	add	r1, pc, r1
   151fc:	str	r0, [r3]
   15200:	ldr	r0, [sp, #20]
   15204:	ldr	r2, [r0, ip, lsl #2]
   15208:	cmp	r2, #0
   1520c:	str	r2, [r1]
   15210:	bne	15058 <el_line@plt+0x12ba4>
   15214:	ldr	r3, [r3, #4]
   15218:	cmp	r3, #0
   1521c:	beq	15244 <el_line@plt+0x12d90>
   15220:	ldr	ip, [sp, #16]
   15224:	ldrb	r3, [ip]
   15228:	cmp	r3, #58	; 0x3a
   1522c:	beq	15244 <el_line@plt+0x12d90>
   15230:	ldr	r0, [pc, #204]	; 15304 <el_line@plt+0x12e50>
   15234:	mov	r1, r7
   15238:	add	r0, pc, r0
   1523c:	add	r0, r0, #68	; 0x44
   15240:	bl	112ec <el_line@plt+0xee38>
   15244:	ldr	r3, [r8, #8]
   15248:	cmp	r3, #0
   1524c:	beq	152bc <el_line@plt+0x12e08>
   15250:	ldr	r3, [pc, #176]	; 15308 <el_line@plt+0x12e54>
   15254:	mov	r2, #0
   15258:	add	r3, pc, r3
   1525c:	str	r2, [r3, #8]
   15260:	ldr	r4, [pc, #164]	; 1530c <el_line@plt+0x12e58>
   15264:	mvn	r1, #0
   15268:	add	r4, pc, r4
   1526c:	ldr	r0, [r4]
   15270:	bl	192bc <el_line@plt+0x16e08>
   15274:	ldr	ip, [sp, #16]
   15278:	str	r0, [r4]
   1527c:	ldrb	r3, [ip]
   15280:	cmp	r3, #58	; 0x3a
   15284:	bne	150c4 <el_line@plt+0x12c10>
   15288:	mov	r0, #58	; 0x3a
   1528c:	b	15070 <el_line@plt+0x12bbc>
   15290:	ldr	r3, [pc, #120]	; 15310 <el_line@plt+0x12e5c>
   15294:	ldr	r2, [r8, #12]
   15298:	add	r3, pc, r3
   1529c:	str	r2, [r3, #8]
   152a0:	b	150b4 <el_line@plt+0x12c00>
   152a4:	ldr	r3, [pc, #104]	; 15314 <el_line@plt+0x12e60>
   152a8:	mvn	r0, #0
   152ac:	ldr	ip, [sp, #8]
   152b0:	add	r3, pc, r3
   152b4:	str	ip, [r3]
   152b8:	b	15070 <el_line@plt+0x12bbc>
   152bc:	ldr	r3, [pc, #84]	; 15318 <el_line@plt+0x12e64>
   152c0:	ldr	r2, [r8, #12]
   152c4:	add	r3, pc, r3
   152c8:	str	r2, [r3, #8]
   152cc:	b	15260 <el_line@plt+0x12dac>
   152d0:	ldrdeq	sl, [r1], -r8
   152d4:	ldrdeq	sl, [r1], -ip
   152d8:	andeq	r9, r1, r0, lsr #31
   152dc:	andeq	r9, r1, ip, ror pc
   152e0:	andeq	r9, r1, ip, asr #30
   152e4:	ldrdeq	r8, [r0], -r4
   152e8:	andeq	r9, r1, ip, lsl #30
   152ec:	andeq	r8, r0, r8, ror r4
   152f0:	andeq	r9, r1, r4, lsr #29
   152f4:	andeq	r8, r0, r8, lsr #8
   152f8:	andeq	sp, r1, ip, lsl #14
   152fc:	andeq	r9, r1, r8, lsr lr
   15300:	ldrdeq	sp, [r1], -ip
   15304:	andeq	r8, r0, r0, lsr #7
   15308:	ldrdeq	r9, [r1], -r0
   1530c:	andeq	r9, r1, r0, asr #27
   15310:	muleq	r1, r0, sp
   15314:	andeq	r9, r1, r8, ror sp
   15318:	andeq	r9, r1, r4, ror #26
   1531c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15320:	subs	r7, r2, #0
   15324:	mov	r9, r0
   15328:	mov	r8, r1
   1532c:	beq	15414 <el_line@plt+0x12f60>
   15330:	ldr	r3, [pc, #1284]	; 1583c <el_line@plt+0x13388>
   15334:	add	r3, pc, r3
   15338:	ldr	r2, [r3]
   1533c:	cmp	r2, #0
   15340:	beq	1547c <el_line@plt+0x12fc8>
   15344:	ldr	r3, [pc, #1268]	; 15840 <el_line@plt+0x1338c>
   15348:	add	r3, pc, r3
   1534c:	ldr	r3, [r3, #12]
   15350:	cmn	r3, #1
   15354:	beq	15420 <el_line@plt+0x12f6c>
   15358:	ldr	r3, [pc, #1252]	; 15844 <el_line@plt+0x13390>
   1535c:	add	r3, pc, r3
   15360:	ldr	r3, [r3]
   15364:	cmp	r3, #0
   15368:	moveq	r2, r3
   1536c:	bne	15420 <el_line@plt+0x12f6c>
   15370:	ldrb	r3, [r7]
   15374:	cmp	r3, #45	; 0x2d
   15378:	beq	15458 <el_line@plt+0x12fa4>
   1537c:	cmp	r3, #43	; 0x2b
   15380:	mov	sl, #0
   15384:	beq	1545c <el_line@plt+0x12fa8>
   15388:	ldr	r3, [pc, #1208]	; 15848 <el_line@plt+0x13394>
   1538c:	cmp	r2, #0
   15390:	mov	r2, #0
   15394:	add	r3, pc, r3
   15398:	str	r2, [r3]
   1539c:	bne	15464 <el_line@plt+0x12fb0>
   153a0:	ldr	r3, [pc, #1188]	; 1584c <el_line@plt+0x13398>
   153a4:	add	r3, pc, r3
   153a8:	ldr	r3, [r3]
   153ac:	ldrb	r6, [r3]
   153b0:	cmp	r6, #0
   153b4:	bne	15524 <el_line@plt+0x13070>
   153b8:	ldr	r4, [pc, #1168]	; 15850 <el_line@plt+0x1339c>
   153bc:	mov	r6, #0
   153c0:	ldr	ip, [pc, #1164]	; 15854 <el_line@plt+0x133a0>
   153c4:	add	r4, pc, r4
   153c8:	add	ip, pc, ip
   153cc:	ldr	r5, [r4]
   153d0:	str	r6, [ip]
   153d4:	cmp	r9, r5
   153d8:	ble	15598 <el_line@plt+0x130e4>
   153dc:	ldr	r4, [r8, r5, lsl #2]
   153e0:	ldr	r3, [pc, #1136]	; 15858 <el_line@plt+0x133a4>
   153e4:	ldrb	r1, [r4]
   153e8:	add	r3, pc, r3
   153ec:	cmp	r1, #45	; 0x2d
   153f0:	str	r4, [r3]
   153f4:	beq	154c8 <el_line@plt+0x13014>
   153f8:	ldr	r3, [pc, #1116]	; 1585c <el_line@plt+0x133a8>
   153fc:	cmp	sl, #0
   15400:	ldr	r2, [pc, #1112]	; 15860 <el_line@plt+0x133ac>
   15404:	add	r3, pc, r3
   15408:	add	r2, pc, r2
   1540c:	str	r2, [r3]
   15410:	bne	15494 <el_line@plt+0x12fe0>
   15414:	mvn	r3, #0
   15418:	mov	r0, r3
   1541c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15420:	ldr	r0, [pc, #1084]	; 15864 <el_line@plt+0x133b0>
   15424:	add	r0, pc, r0
   15428:	bl	2460 <getenv@plt>
   1542c:	ldr	r3, [pc, #1076]	; 15868 <el_line@plt+0x133b4>
   15430:	ldr	r2, [pc, #1076]	; 1586c <el_line@plt+0x133b8>
   15434:	add	r3, pc, r3
   15438:	add	r2, pc, r2
   1543c:	ldr	r2, [r2]
   15440:	adds	r0, r0, #0
   15444:	movne	r0, #1
   15448:	str	r0, [r3, #12]
   1544c:	ldrb	r3, [r7]
   15450:	cmp	r3, #45	; 0x2d
   15454:	bne	1537c <el_line@plt+0x12ec8>
   15458:	mov	sl, #2
   1545c:	add	r7, r7, #1
   15460:	b	15388 <el_line@plt+0x12ed4>
   15464:	ldr	r3, [pc, #1028]	; 15870 <el_line@plt+0x133bc>
   15468:	mvn	r2, #0
   1546c:	add	r3, pc, r3
   15470:	str	r2, [r3, #16]
   15474:	str	r2, [r3, #20]
   15478:	b	153b8 <el_line@plt+0x12f04>
   1547c:	ldr	r1, [pc, #1008]	; 15874 <el_line@plt+0x133c0>
   15480:	mov	r2, #1
   15484:	str	r2, [r3]
   15488:	add	r1, pc, r1
   1548c:	str	r2, [r1]
   15490:	b	15344 <el_line@plt+0x12e90>
   15494:	mov	r0, r5
   15498:	mov	r1, #1
   1549c:	bl	192bc <el_line@plt+0x16e08>
   154a0:	ldr	r1, [pc, #976]	; 15878 <el_line@plt+0x133c4>
   154a4:	ldr	r2, [pc, #976]	; 1587c <el_line@plt+0x133c8>
   154a8:	mov	r3, #1
   154ac:	add	r1, pc, r1
   154b0:	add	r2, pc, r2
   154b4:	str	r0, [r1]
   154b8:	mov	r0, r3
   154bc:	ldr	r1, [r8, r5, lsl #2]
   154c0:	str	r1, [r2]
   154c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c8:	ldrb	r6, [r4, #1]
   154cc:	cmp	r6, #0
   154d0:	bne	154e4 <el_line@plt+0x13030>
   154d4:	mov	r0, r7
   154d8:	bl	2490 <strchr@plt>
   154dc:	cmp	r0, #0
   154e0:	beq	153f8 <el_line@plt+0x12f44>
   154e4:	ldr	r3, [pc, #916]	; 15880 <el_line@plt+0x133cc>
   154e8:	add	r3, pc, r3
   154ec:	ldr	sl, [r3, #20]
   154f0:	cmn	sl, #1
   154f4:	beq	15504 <el_line@plt+0x13050>
   154f8:	ldr	r2, [r3, #16]
   154fc:	cmn	r2, #1
   15500:	streq	r5, [r3, #16]
   15504:	cmp	r6, #0
   15508:	beq	15688 <el_line@plt+0x131d4>
   1550c:	ldr	fp, [pc, #880]	; 15884 <el_line@plt+0x133d0>
   15510:	cmp	r6, #45	; 0x2d
   15514:	add	r3, r4, #1
   15518:	add	fp, pc, fp
   1551c:	str	r3, [fp]
   15520:	beq	15720 <el_line@plt+0x1326c>
   15524:	mov	r4, r3
   15528:	ldr	r3, [pc, #856]	; 15888 <el_line@plt+0x133d4>
   1552c:	cmp	r6, #58	; 0x3a
   15530:	add	r5, r4, #1
   15534:	add	r3, pc, r3
   15538:	str	r5, [r3]
   1553c:	beq	15618 <el_line@plt+0x13164>
   15540:	cmp	r6, #45	; 0x2d
   15544:	beq	1569c <el_line@plt+0x131e8>
   15548:	mov	r0, r7
   1554c:	mov	r1, r6
   15550:	bl	2490 <strchr@plt>
   15554:	cmp	r0, #0
   15558:	beq	15618 <el_line@plt+0x13164>
   1555c:	ldrb	r3, [r0, #1]
   15560:	cmp	r3, #58	; 0x3a
   15564:	ldrb	r3, [r5]
   15568:	beq	156d0 <el_line@plt+0x1321c>
   1556c:	cmp	r3, #0
   15570:	movne	r3, r6
   15574:	bne	15418 <el_line@plt+0x12f64>
   15578:	ldr	r4, [pc, #780]	; 1588c <el_line@plt+0x133d8>
   1557c:	mov	r1, #1
   15580:	add	r4, pc, r4
   15584:	ldr	r0, [r4]
   15588:	bl	192bc <el_line@plt+0x16e08>
   1558c:	mov	r3, r6
   15590:	str	r0, [r4]
   15594:	b	15418 <el_line@plt+0x12f64>
   15598:	ldr	r6, [r4, #16]
   1559c:	ldr	r3, [pc, #748]	; 15890 <el_line@plt+0x133dc>
   155a0:	ldr	r2, [pc, #748]	; 15894 <el_line@plt+0x133e0>
   155a4:	cmn	r6, #1
   155a8:	add	r3, pc, r3
   155ac:	add	r2, pc, r2
   155b0:	str	r2, [r3]
   155b4:	beq	15608 <el_line@plt+0x13154>
   155b8:	ldr	r7, [r4, #20]
   155bc:	mov	r2, r5
   155c0:	mov	r3, r8
   155c4:	mov	r1, r6
   155c8:	mov	r0, r7
   155cc:	bl	14e04 <el_line@plt+0x12950>
   155d0:	mov	r1, r6
   155d4:	mov	r0, r7
   155d8:	bl	19350 <el_line@plt+0x16e9c>
   155dc:	ldr	r1, [r4]
   155e0:	bl	192bc <el_line@plt+0x16e08>
   155e4:	str	r0, [r4]
   155e8:	ldr	r1, [pc, #680]	; 15898 <el_line@plt+0x133e4>
   155ec:	mvn	r2, #0
   155f0:	mov	r3, r2
   155f4:	add	r1, pc, r1
   155f8:	mov	r0, r3
   155fc:	str	r2, [r1, #16]
   15600:	str	r2, [r1, #20]
   15604:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15608:	ldr	r3, [r4, #20]
   1560c:	cmn	r3, #1
   15610:	strne	r3, [r4]
   15614:	b	155e8 <el_line@plt+0x13134>
   15618:	ldrb	r3, [r4, #1]
   1561c:	cmp	r3, #0
   15620:	bne	1563c <el_line@plt+0x13188>
   15624:	ldr	r4, [pc, #624]	; 1589c <el_line@plt+0x133e8>
   15628:	mov	r1, #1
   1562c:	add	r4, pc, r4
   15630:	ldr	r0, [r4]
   15634:	bl	192bc <el_line@plt+0x16e08>
   15638:	str	r0, [r4]
   1563c:	ldr	r3, [pc, #604]	; 158a0 <el_line@plt+0x133ec>
   15640:	add	r3, pc, r3
   15644:	ldr	r3, [r3, #4]
   15648:	cmp	r3, #0
   1564c:	beq	15670 <el_line@plt+0x131bc>
   15650:	ldrb	r3, [r7]
   15654:	cmp	r3, #58	; 0x3a
   15658:	beq	15670 <el_line@plt+0x131bc>
   1565c:	ldr	r0, [pc, #576]	; 158a4 <el_line@plt+0x133f0>
   15660:	mov	r1, r6
   15664:	add	r0, pc, r0
   15668:	add	r0, r0, #128	; 0x80
   1566c:	bl	112ec <el_line@plt+0xee38>
   15670:	ldr	r2, [pc, #560]	; 158a8 <el_line@plt+0x133f4>
   15674:	mov	r3, #63	; 0x3f
   15678:	mov	r0, r3
   1567c:	add	r2, pc, r2
   15680:	str	r6, [r2, #8]
   15684:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15688:	ldr	r3, [pc, #540]	; 158ac <el_line@plt+0x133f8>
   1568c:	mov	r6, #45	; 0x2d
   15690:	add	r5, r4, #1
   15694:	add	r3, pc, r3
   15698:	str	r5, [r3]
   1569c:	ldrb	r3, [r4, #1]
   156a0:	cmp	r3, #0
   156a4:	beq	156b8 <el_line@plt+0x13204>
   156a8:	ldrb	r3, [r5]
   156ac:	cmp	r3, #0
   156b0:	bne	1563c <el_line@plt+0x13188>
   156b4:	b	15414 <el_line@plt+0x12f60>
   156b8:	mov	r0, r7
   156bc:	mov	r1, r6
   156c0:	bl	2490 <strchr@plt>
   156c4:	cmp	r0, #0
   156c8:	bne	1555c <el_line@plt+0x130a8>
   156cc:	b	156a8 <el_line@plt+0x131f4>
   156d0:	cmp	r3, #0
   156d4:	beq	15790 <el_line@plt+0x132dc>
   156d8:	ldr	r3, [pc, #464]	; 158b0 <el_line@plt+0x133fc>
   156dc:	ldr	r2, [pc, #464]	; 158b4 <el_line@plt+0x13400>
   156e0:	add	r3, pc, r3
   156e4:	add	r2, pc, r2
   156e8:	ldr	r0, [r3]
   156ec:	str	r5, [r2]
   156f0:	ldr	r3, [pc, #448]	; 158b8 <el_line@plt+0x13404>
   156f4:	mov	r1, #1
   156f8:	ldr	r2, [pc, #444]	; 158bc <el_line@plt+0x13408>
   156fc:	add	r3, pc, r3
   15700:	ldr	r4, [pc, #440]	; 158c0 <el_line@plt+0x1340c>
   15704:	add	r2, pc, r2
   15708:	str	r2, [r3]
   1570c:	add	r4, pc, r4
   15710:	bl	192bc <el_line@plt+0x16e08>
   15714:	mov	r3, r6
   15718:	str	r0, [r4]
   1571c:	b	15418 <el_line@plt+0x12f64>
   15720:	ldrb	r2, [r4, #2]
   15724:	cmp	r2, #0
   15728:	movne	r4, r3
   1572c:	bne	15688 <el_line@plt+0x131d4>
   15730:	mov	r0, r5
   15734:	mov	r1, #1
   15738:	bl	192bc <el_line@plt+0x16e08>
   1573c:	ldr	r4, [pc, #384]	; 158c4 <el_line@plt+0x13410>
   15740:	ldr	r3, [pc, #384]	; 158c8 <el_line@plt+0x13414>
   15744:	add	r4, pc, r4
   15748:	add	r3, pc, r3
   1574c:	str	r3, [fp]
   15750:	ldr	r5, [r4, #16]
   15754:	cmn	r5, #1
   15758:	mov	r2, r0
   1575c:	str	r0, [r4]
   15760:	beq	155e8 <el_line@plt+0x13134>
   15764:	mov	r3, r8
   15768:	mov	r0, sl
   1576c:	mov	r1, r5
   15770:	bl	14e04 <el_line@plt+0x12950>
   15774:	mov	r1, r5
   15778:	mov	r0, sl
   1577c:	bl	19350 <el_line@plt+0x16e9c>
   15780:	ldr	r1, [r4]
   15784:	bl	192bc <el_line@plt+0x16e08>
   15788:	str	r0, [r4]
   1578c:	b	155e8 <el_line@plt+0x13134>
   15790:	ldrb	r3, [r0, #2]
   15794:	cmp	r3, #58	; 0x3a
   15798:	beq	15830 <el_line@plt+0x1337c>
   1579c:	ldr	r4, [pc, #296]	; 158cc <el_line@plt+0x13418>
   157a0:	mov	r1, #1
   157a4:	add	r4, pc, r4
   157a8:	ldr	r0, [r4]
   157ac:	bl	192bc <el_line@plt+0x16e08>
   157b0:	cmp	r9, r0
   157b4:	str	r0, [r4]
   157b8:	bgt	1581c <el_line@plt+0x13368>
   157bc:	ldr	r1, [r4, #4]
   157c0:	ldr	r3, [pc, #264]	; 158d0 <el_line@plt+0x1341c>
   157c4:	ldr	r2, [pc, #264]	; 158d4 <el_line@plt+0x13420>
   157c8:	cmp	r1, #0
   157cc:	add	r3, pc, r3
   157d0:	add	r2, pc, r2
   157d4:	str	r2, [r3]
   157d8:	beq	157fc <el_line@plt+0x13348>
   157dc:	ldrb	r3, [r7]
   157e0:	cmp	r3, #58	; 0x3a
   157e4:	beq	157fc <el_line@plt+0x13348>
   157e8:	ldr	r0, [pc, #232]	; 158d8 <el_line@plt+0x13424>
   157ec:	mov	r1, r6
   157f0:	add	r0, pc, r0
   157f4:	add	r0, r0, #152	; 0x98
   157f8:	bl	112ec <el_line@plt+0xee38>
   157fc:	ldr	r3, [pc, #216]	; 158dc <el_line@plt+0x13428>
   15800:	add	r3, pc, r3
   15804:	str	r6, [r3, #8]
   15808:	ldrb	r3, [r7]
   1580c:	cmp	r3, #58	; 0x3a
   15810:	movne	r3, #63	; 0x3f
   15814:	moveq	r3, #58	; 0x3a
   15818:	b	15418 <el_line@plt+0x12f64>
   1581c:	ldr	r3, [pc, #188]	; 158e0 <el_line@plt+0x1342c>
   15820:	ldr	r2, [r8, r0, lsl #2]
   15824:	add	r3, pc, r3
   15828:	str	r2, [r3]
   1582c:	b	156f0 <el_line@plt+0x1323c>
   15830:	ldr	r3, [pc, #172]	; 158e4 <el_line@plt+0x13430>
   15834:	ldr	r0, [pc, r3]
   15838:	b	156f0 <el_line@plt+0x1323c>
   1583c:	strdeq	r9, [r1], -r4
   15840:	andeq	r9, r1, r0, ror #25
   15844:	andeq	sp, r1, r4, ror r5
   15848:	andeq	sp, r1, r0, asr #10
   1584c:	muleq	r1, ip, ip
   15850:	andeq	r9, r1, r4, ror #24
   15854:	andeq	sp, r1, r8, lsl #10
   15858:	andeq	r9, r1, r8, asr ip
   1585c:	andeq	r9, r1, ip, lsr ip
   15860:	andeq	r4, r0, r0, lsl pc
   15864:	andeq	r8, r0, r0, ror r2
   15868:	strdeq	r9, [r1], -r4
   1586c:	muleq	r1, r8, r4
   15870:			; <UNDEFINED> instruction: 0x00019bbc
   15874:	andeq	sp, r1, r8, asr #8
   15878:	andeq	r9, r1, ip, ror fp
   1587c:	andeq	sp, r1, r4, lsr #8
   15880:	andeq	r9, r1, r0, asr #22
   15884:	andeq	r9, r1, r8, lsr #22
   15888:	andeq	r9, r1, ip, lsl #22
   1588c:	andeq	r9, r1, r8, lsr #21
   15890:	muleq	r1, r8, sl
   15894:	andeq	r4, r0, ip, ror #26
   15898:	andeq	r9, r1, r4, lsr sl
   1589c:	strdeq	r9, [r1], -ip
   158a0:	andeq	r9, r1, r8, ror #19
   158a4:	andeq	r7, r0, r4, ror pc
   158a8:	andeq	r9, r1, ip, lsr #19
   158ac:	andeq	r9, r1, ip, lsr #19
   158b0:	andeq	r9, r1, r8, asr #18
   158b4:	strdeq	sp, [r1], -r0
   158b8:	andeq	r9, r1, r4, asr #18
   158bc:	andeq	r4, r0, r4, lsl ip
   158c0:	andeq	r9, r1, ip, lsl r9
   158c4:	andeq	r9, r1, r4, ror #17
   158c8:	ldrdeq	r4, [r0], -r0
   158cc:	andeq	r9, r1, r4, lsl #17
   158d0:	andeq	r9, r1, r4, ror r8
   158d4:	andeq	r4, r0, r8, asr #22
   158d8:	andeq	r7, r0, r8, ror #27
   158dc:	andeq	r9, r1, r8, lsr #16
   158e0:	strheq	sp, [r1], -r0
   158e4:	strdeq	r9, [r1], -r4
   158e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158ec:	subs	fp, r3, #0
   158f0:	sub	sp, sp, #28
   158f4:	mov	ip, r0
   158f8:	beq	15b20 <el_line@plt+0x1366c>
   158fc:	cmp	r1, r2
   15900:	bcs	15b10 <el_line@plt+0x1365c>
   15904:	ldr	r3, [pc, #540]	; 15b28 <el_line@plt+0x13674>
   15908:	add	r8, r0, #2
   1590c:	movw	sl, #32861	; 0x805d
   15910:	mov	r4, r1
   15914:	add	r3, pc, r3
   15918:	str	fp, [sp, #16]
   1591c:	str	r3, [sp, #20]
   15920:	ldrh	r3, [r4]
   15924:	movw	r1, #32831	; 0x803f
   15928:	sub	r5, r8, #2
   1592c:	add	r0, r4, #2
   15930:	cmp	r3, r1
   15934:	beq	15974 <el_line@plt+0x134c0>
   15938:	add	r1, r1, #28
   1593c:	cmp	r3, r1
   15940:	beq	15a24 <el_line@plt+0x13570>
   15944:	movw	r1, #32810	; 0x802a
   15948:	cmp	r3, r1
   1594c:	beq	15990 <el_line@plt+0x134dc>
   15950:	ldrh	r1, [r8, #-2]
   15954:	mov	ip, r8
   15958:	cmp	r1, r3
   1595c:	bne	15984 <el_line@plt+0x134d0>
   15960:	cmp	r2, r0
   15964:	add	r8, r8, #2
   15968:	bls	15b10 <el_line@plt+0x1365c>
   1596c:	mov	r4, r0
   15970:	b	15920 <el_line@plt+0x1346c>
   15974:	ldrh	r3, [r8, #-2]
   15978:	mov	ip, r8
   1597c:	cmp	r3, #0
   15980:	bne	15960 <el_line@plt+0x134ac>
   15984:	mov	r0, #0
   15988:	add	sp, sp, #28
   1598c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15990:	cmp	r2, r0
   15994:	mov	r1, r4
   15998:	mov	r6, r2
   1599c:	mov	r4, r0
   159a0:	ldr	fp, [sp, #16]
   159a4:	bls	159d8 <el_line@plt+0x13524>
   159a8:	ldrh	r1, [r1, #2]
   159ac:	cmp	r1, r3
   159b0:	bne	159d8 <el_line@plt+0x13524>
   159b4:	add	r3, r0, #2
   159b8:	b	159c8 <el_line@plt+0x13514>
   159bc:	ldrh	r2, [r4]
   159c0:	cmp	r2, r1
   159c4:	bne	159d8 <el_line@plt+0x13524>
   159c8:	cmp	r6, r3
   159cc:	mov	r4, r3
   159d0:	add	r3, r3, #2
   159d4:	bhi	159bc <el_line@plt+0x13508>
   159d8:	cmp	r4, r6
   159dc:	bne	159f0 <el_line@plt+0x1353c>
   159e0:	b	15a18 <el_line@plt+0x13564>
   159e4:	ldrh	r3, [r5], #2
   159e8:	cmp	r3, #0
   159ec:	beq	15984 <el_line@plt+0x134d0>
   159f0:	mvn	r1, #0
   159f4:	mov	r0, fp
   159f8:	bl	192bc <el_line@plt+0x16e08>
   159fc:	mov	r1, r4
   15a00:	mov	r2, r6
   15a04:	mov	r3, r0
   15a08:	mov	r0, r5
   15a0c:	bl	158e8 <el_line@plt+0x13434>
   15a10:	cmp	r0, #0
   15a14:	beq	159e4 <el_line@plt+0x13530>
   15a18:	mov	r0, #1
   15a1c:	add	sp, sp, #28
   15a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a24:	ldrh	r9, [r8, #-2]
   15a28:	mov	ip, r8
   15a2c:	cmp	r9, #0
   15a30:	beq	15984 <el_line@plt+0x134d0>
   15a34:	ldrh	r5, [r4, #2]
   15a38:	movw	r3, #32801	; 0x8021
   15a3c:	mov	fp, #0
   15a40:	movw	r6, #32826	; 0x803a
   15a44:	subs	r3, r5, r3
   15a48:	rsbs	r1, r3, #0
   15a4c:	adcs	r1, r1, r3
   15a50:	cmp	r1, #0
   15a54:	addne	r7, r4, #4
   15a58:	ldrhne	r5, [r4, #4]
   15a5c:	moveq	r7, r0
   15a60:	movw	r4, #32813	; 0x802d
   15a64:	cmp	r5, sl
   15a68:	add	r0, r7, #2
   15a6c:	beq	15aa0 <el_line@plt+0x135ec>
   15a70:	cmp	r5, r6
   15a74:	beq	15acc <el_line@plt+0x13618>
   15a78:	ldrh	r3, [r0]
   15a7c:	cmp	r3, r4
   15a80:	beq	15aac <el_line@plt+0x135f8>
   15a84:	cmp	r5, r9
   15a88:	mov	r5, r3
   15a8c:	mov	r7, r0
   15a90:	add	r0, r7, #2
   15a94:	moveq	fp, #1
   15a98:	cmp	r5, sl
   15a9c:	bne	15a70 <el_line@plt+0x135bc>
   15aa0:	cmp	fp, r1
   15aa4:	bne	15960 <el_line@plt+0x134ac>
   15aa8:	b	15984 <el_line@plt+0x134d0>
   15aac:	cmp	r5, r9
   15ab0:	bhi	15ac0 <el_line@plt+0x1360c>
   15ab4:	ldrh	r3, [r0, #2]
   15ab8:	cmp	r3, r9
   15abc:	movcs	fp, #1
   15ac0:	add	r7, r0, #4
   15ac4:	ldrh	r5, [r0, #4]
   15ac8:	b	15a64 <el_line@plt+0x135b0>
   15acc:	ldrh	r3, [r7, #2]
   15ad0:	cmp	r3, #11
   15ad4:	bls	15ae0 <el_line@plt+0x1362c>
   15ad8:	add	r0, r7, #4
   15adc:	b	15a78 <el_line@plt+0x135c4>
   15ae0:	ldr	r0, [sp, #20]
   15ae4:	add	r3, r0, r3, lsl #3
   15ae8:	mov	r0, r9
   15aec:	ldr	r3, [r3, #4]
   15af0:	str	r1, [sp, #12]
   15af4:	stmib	sp, {r2, ip}
   15af8:	blx	r3
   15afc:	ldmib	sp, {r2, ip}
   15b00:	ldr	r1, [sp, #12]
   15b04:	cmp	r0, #0
   15b08:	movne	fp, #1
   15b0c:	b	15ad8 <el_line@plt+0x13624>
   15b10:	ldrh	r0, [ip]
   15b14:	rsbs	r0, r0, #1
   15b18:	movcc	r0, #0
   15b1c:	b	15a1c <el_line@plt+0x13568>
   15b20:	mvn	r0, #0
   15b24:	b	15a1c <el_line@plt+0x13568>
   15b28:	andeq	r9, r1, r0, lsr r7
   15b2c:	ldr	r0, [r0]
   15b30:	ldr	r1, [r1]
   15b34:	b	2388 <strcmp@plt>
   15b38:	ldr	r0, [r0]
   15b3c:	ldr	r1, [r1]
   15b40:	b	2388 <strcmp@plt>
   15b44:	push	{r4, r6, r7, r8, r9, lr}
   15b48:	sub	sp, sp, #4096	; 0x1000
   15b4c:	ldr	r4, [pc, #172]	; 15c00 <el_line@plt+0x1374c>
   15b50:	sub	sp, sp, #8
   15b54:	ldr	r7, [pc, #168]	; 15c04 <el_line@plt+0x13750>
   15b58:	mov	r9, r1
   15b5c:	add	r4, pc, r4
   15b60:	add	r8, sp, #4
   15b64:	add	r6, r8, #4080	; 0xff0
   15b68:	sub	r0, r0, #2
   15b6c:	ldr	r7, [r4, r7]
   15b70:	add	r4, sp, #8192	; 0x2000
   15b74:	add	ip, sp, #3
   15b78:	add	r6, r6, #15
   15b7c:	ldr	r1, [r7]
   15b80:	str	r1, [r4, #-4092]	; 0xfffff004
   15b84:	b	15b90 <el_line@plt+0x136dc>
   15b88:	cmp	ip, r6
   15b8c:	beq	15bf4 <el_line@plt+0x13740>
   15b90:	ldrh	r4, [r0, #2]!
   15b94:	uxtb	r4, r4
   15b98:	strb	r4, [ip, #1]!
   15b9c:	cmp	r4, #0
   15ba0:	bne	15b88 <el_line@plt+0x136d4>
   15ba4:	ldr	r2, [r2]
   15ba8:	tst	r2, #64	; 0x40
   15bac:	bne	15be0 <el_line@plt+0x1372c>
   15bb0:	mov	r1, r8
   15bb4:	mov	r2, r9
   15bb8:	mov	r0, #3
   15bbc:	bl	23c4 <__lxstat64@plt>
   15bc0:	add	r3, sp, #8192	; 0x2000
   15bc4:	ldr	r2, [r3, #-4092]	; 0xfffff004
   15bc8:	ldr	r3, [r7]
   15bcc:	cmp	r2, r3
   15bd0:	bne	15bfc <el_line@plt+0x13748>
   15bd4:	add	sp, sp, #4096	; 0x1000
   15bd8:	add	sp, sp, #8
   15bdc:	pop	{r4, r6, r7, r8, r9, pc}
   15be0:	ldr	r3, [r3]
   15be4:	mov	r0, r8
   15be8:	mov	r1, r9
   15bec:	blx	r3
   15bf0:	b	15bc0 <el_line@plt+0x1370c>
   15bf4:	mvn	r0, #0
   15bf8:	b	15bc0 <el_line@plt+0x1370c>
   15bfc:	bl	21e4 <__stack_chk_fail@plt>
   15c00:	andeq	r9, r1, r8, lsl #4
   15c04:	andeq	r0, r0, ip, lsr #4
   15c08:	push	{r4, r6, r7, r8, r9, lr}
   15c0c:	sub	sp, sp, #4096	; 0x1000
   15c10:	ldr	r4, [pc, #172]	; 15cc4 <el_line@plt+0x13810>
   15c14:	sub	sp, sp, #8
   15c18:	ldr	r7, [pc, #168]	; 15cc8 <el_line@plt+0x13814>
   15c1c:	mov	r9, r1
   15c20:	add	r4, pc, r4
   15c24:	add	r8, sp, #4
   15c28:	add	r6, r8, #4080	; 0xff0
   15c2c:	sub	r0, r0, #2
   15c30:	ldr	r7, [r4, r7]
   15c34:	add	r4, sp, #8192	; 0x2000
   15c38:	add	ip, sp, #3
   15c3c:	add	r6, r6, #15
   15c40:	ldr	r1, [r7]
   15c44:	str	r1, [r4, #-4092]	; 0xfffff004
   15c48:	b	15c54 <el_line@plt+0x137a0>
   15c4c:	cmp	ip, r6
   15c50:	beq	15cb8 <el_line@plt+0x13804>
   15c54:	ldrh	r4, [r0, #2]!
   15c58:	uxtb	r4, r4
   15c5c:	strb	r4, [ip, #1]!
   15c60:	cmp	r4, #0
   15c64:	bne	15c4c <el_line@plt+0x13798>
   15c68:	ldr	r2, [r2]
   15c6c:	tst	r2, #64	; 0x40
   15c70:	bne	15ca4 <el_line@plt+0x137f0>
   15c74:	mov	r1, r8
   15c78:	mov	r2, r9
   15c7c:	mov	r0, #3
   15c80:	bl	1f2c <__xstat64@plt>
   15c84:	add	r3, sp, #8192	; 0x2000
   15c88:	ldr	r2, [r3, #-4092]	; 0xfffff004
   15c8c:	ldr	r3, [r7]
   15c90:	cmp	r2, r3
   15c94:	bne	15cc0 <el_line@plt+0x1380c>
   15c98:	add	sp, sp, #4096	; 0x1000
   15c9c:	add	sp, sp, #8
   15ca0:	pop	{r4, r6, r7, r8, r9, pc}
   15ca4:	ldr	r3, [r3]
   15ca8:	mov	r0, r8
   15cac:	mov	r1, r9
   15cb0:	blx	r3
   15cb4:	b	15c84 <el_line@plt+0x137d0>
   15cb8:	mvn	r0, #0
   15cbc:	b	15c84 <el_line@plt+0x137d0>
   15cc0:	bl	21e4 <__stack_chk_fail@plt>
   15cc4:	andeq	r9, r1, r4, asr #2
   15cc8:	andeq	r0, r0, ip, lsr #4
   15ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cd0:	mov	r4, r2
   15cd4:	ldr	r6, [r1, #8]
   15cd8:	sub	sp, sp, #20
   15cdc:	mov	r7, r1
   15ce0:	mov	fp, r0
   15ce4:	cmn	r6, #-2147483647	; 0x80000001
   15ce8:	mov	r5, r3
   15cec:	ldr	r9, [r1]
   15cf0:	ldreq	r4, [r1, #16]
   15cf4:	beq	15db4 <el_line@plt+0x13900>
   15cf8:	mov	r1, #2
   15cfc:	mov	r0, r9
   15d00:	bl	192bc <el_line@plt+0x16e08>
   15d04:	mov	r1, r6
   15d08:	bl	192bc <el_line@plt+0x16e08>
   15d0c:	cmn	r9, #-2147483647	; 0x80000001
   15d10:	mov	r8, r0
   15d14:	beq	15d20 <el_line@plt+0x1386c>
   15d18:	cmn	r0, #-1073741822	; 0xc0000002
   15d1c:	bls	15e04 <el_line@plt+0x13950>
   15d20:	sub	r8, r8, #2
   15d24:	ldr	r4, [r7, #16]
   15d28:	cmp	r8, r6
   15d2c:	lslgt	r5, r6, #2
   15d30:	bgt	15d98 <el_line@plt+0x138e4>
   15d34:	b	15db4 <el_line@plt+0x13900>
   15d38:	ldr	r0, [r4, r5]
   15d3c:	cmp	r0, #0
   15d40:	beq	15d7c <el_line@plt+0x138c8>
   15d44:	bl	1f20 <free@plt>
   15d48:	ldr	r3, [r7, #12]
   15d4c:	ldr	r4, [r7, #16]
   15d50:	tst	r3, #16384	; 0x4000
   15d54:	beq	15d7c <el_line@plt+0x138c8>
   15d58:	cmp	r4, #0
   15d5c:	beq	15dac <el_line@plt+0x138f8>
   15d60:	ldr	r3, [r4, r5]
   15d64:	cmp	r3, #0
   15d68:	beq	15d7c <el_line@plt+0x138c8>
   15d6c:	ldr	r3, [r7, #20]
   15d70:	ldr	r0, [r3, r5]
   15d74:	bl	1f20 <free@plt>
   15d78:	ldr	r4, [r7, #16]
   15d7c:	mov	r0, r6
   15d80:	mov	r1, #1
   15d84:	bl	192bc <el_line@plt+0x16e08>
   15d88:	add	r5, r5, #4
   15d8c:	cmp	r0, r8
   15d90:	mov	r6, r0
   15d94:	bge	15db4 <el_line@plt+0x13900>
   15d98:	cmp	r4, #0
   15d9c:	bne	15d38 <el_line@plt+0x13884>
   15da0:	ldr	r3, [r7, #12]
   15da4:	tst	r3, #16384	; 0x4000
   15da8:	beq	15d7c <el_line@plt+0x138c8>
   15dac:	mov	r4, #0
   15db0:	b	15d7c <el_line@plt+0x138c8>
   15db4:	cmp	r4, #0
   15db8:	beq	15dcc <el_line@plt+0x13918>
   15dbc:	mov	r0, r4
   15dc0:	bl	1f20 <free@plt>
   15dc4:	mov	r3, #0
   15dc8:	str	r3, [r7, #16]
   15dcc:	ldr	r0, [r7, #20]
   15dd0:	cmp	r0, #0
   15dd4:	beq	15df8 <el_line@plt+0x13944>
   15dd8:	bl	1f20 <free@plt>
   15ddc:	mvn	r0, #0
   15de0:	mov	r3, #0
   15de4:	str	r3, [r7, #20]
   15de8:	add	sp, sp, #20
   15dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15df0:	bl	23ac <__errno_location@plt>
   15df4:	str	r8, [r0]
   15df8:	mvn	r0, #0
   15dfc:	add	sp, sp, #20
   15e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e04:	lsl	r9, r0, #2
   15e08:	ldr	r0, [r7, #16]
   15e0c:	mov	r1, r9
   15e10:	bl	2178 <realloc@plt>
   15e14:	subs	r6, r0, #0
   15e18:	beq	15fc4 <el_line@plt+0x13b10>
   15e1c:	ldr	sl, [r7, #16]
   15e20:	cmp	sl, #0
   15e24:	beq	15fcc <el_line@plt+0x13b18>
   15e28:	ldr	r3, [r7, #12]
   15e2c:	str	r6, [r7, #16]
   15e30:	tst	r3, #16384	; 0x4000
   15e34:	bne	15f0c <el_line@plt+0x13a58>
   15e38:	mov	r0, fp
   15e3c:	ldrh	r3, [r0], #2
   15e40:	cmp	r3, #0
   15e44:	bne	15e3c <el_line@plt+0x13988>
   15e48:	mov	r1, fp
   15e4c:	bl	19350 <el_line@plt+0x16e9c>
   15e50:	ldr	r3, [r4]
   15e54:	asr	r8, r0, #1
   15e58:	add	r3, r3, r8
   15e5c:	str	r3, [r4]
   15e60:	mov	r0, r8
   15e64:	bl	2304 <malloc@plt>
   15e68:	subs	r5, r0, #0
   15e6c:	beq	15ec8 <el_line@plt+0x13a14>
   15e70:	add	r1, r5, r8
   15e74:	mov	r3, r5
   15e78:	b	15e90 <el_line@plt+0x139dc>
   15e7c:	ldrh	r2, [fp], #2
   15e80:	uxtb	r2, r2
   15e84:	strb	r2, [r3], #1
   15e88:	cmp	r2, #0
   15e8c:	beq	15ea8 <el_line@plt+0x139f4>
   15e90:	cmp	r3, r1
   15e94:	bne	15e7c <el_line@plt+0x139c8>
   15e98:	mov	r0, r5
   15e9c:	bl	1f20 <free@plt>
   15ea0:	mvn	r0, #0
   15ea4:	b	15de8 <el_line@plt+0x13934>
   15ea8:	ldr	r8, [r7]
   15eac:	mov	r1, #1
   15eb0:	ldr	sl, [r7, #8]
   15eb4:	mov	r0, r8
   15eb8:	add	r8, sl, r8
   15ebc:	bl	192bc <el_line@plt+0x16e08>
   15ec0:	str	r0, [r7]
   15ec4:	str	r5, [r6, r8, lsl #2]
   15ec8:	ldr	r2, [r7, #8]
   15ecc:	mov	r8, #0
   15ed0:	ldr	r3, [r7]
   15ed4:	add	r3, r2, r3
   15ed8:	str	r8, [r6, r3, lsl #2]
   15edc:	ldr	r3, [r7, #12]
   15ee0:	tst	r3, #8192	; 0x2000
   15ee4:	beq	15ef8 <el_line@plt+0x13a44>
   15ee8:	ldr	r3, [r4]
   15eec:	add	r9, r9, r3
   15ef0:	cmp	r9, #65536	; 0x10000
   15ef4:	bhi	15df0 <el_line@plt+0x1393c>
   15ef8:	rsbs	r0, r5, #1
   15efc:	movcc	r0, #0
   15f00:	bl	1953c <el_line@plt+0x17088>
   15f04:	add	sp, sp, #20
   15f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f0c:	ldr	r0, [r7, #20]
   15f10:	mov	r1, r9
   15f14:	bl	2178 <realloc@plt>
   15f18:	subs	ip, r0, #0
   15f1c:	beq	15fc4 <el_line@plt+0x13b10>
   15f20:	ldr	sl, [r7, #20]
   15f24:	cmp	sl, #0
   15f28:	beq	1602c <el_line@plt+0x13b78>
   15f2c:	cmp	r5, #0
   15f30:	str	ip, [r7, #20]
   15f34:	beq	16018 <el_line@plt+0x13b64>
   15f38:	ldr	r3, [r4]
   15f3c:	add	r3, r3, #104	; 0x68
   15f40:	str	r3, [r4]
   15f44:	ldr	r2, [r7, #12]
   15f48:	tst	r2, #8192	; 0x2000
   15f4c:	beq	15f58 <el_line@plt+0x13aa4>
   15f50:	cmp	r3, #65536	; 0x10000
   15f54:	bcs	16074 <el_line@plt+0x13bc0>
   15f58:	ldr	r0, [r7, #8]
   15f5c:	ldr	r1, [r7]
   15f60:	str	ip, [sp, #4]
   15f64:	bl	192bc <el_line@plt+0x16e08>
   15f68:	mov	r8, r0
   15f6c:	mov	r0, #104	; 0x68
   15f70:	bl	2304 <malloc@plt>
   15f74:	ldr	ip, [sp, #4]
   15f78:	cmp	r0, #0
   15f7c:	str	r0, [ip, r8, lsl #2]
   15f80:	beq	15df8 <el_line@plt+0x13944>
   15f84:	ldr	r0, [r7, #8]
   15f88:	mov	r1, r5
   15f8c:	ldr	r3, [r7]
   15f90:	mov	r2, #104	; 0x68
   15f94:	add	r3, r0, r3
   15f98:	ldr	r0, [ip, r3, lsl #2]
   15f9c:	str	ip, [sp, #4]
   15fa0:	bl	22d4 <memcpy@plt>
   15fa4:	ldr	ip, [sp, #4]
   15fa8:	ldr	r1, [r7, #8]
   15fac:	mov	r2, #0
   15fb0:	ldr	r3, [r7]
   15fb4:	add	r3, r1, r3
   15fb8:	add	r3, r3, #1
   15fbc:	str	r2, [ip, r3, lsl #2]
   15fc0:	b	15e38 <el_line@plt+0x13984>
   15fc4:	ldr	r6, [r7, #8]
   15fc8:	b	15d20 <el_line@plt+0x1386c>
   15fcc:	ldr	r2, [r7, #8]
   15fd0:	cmp	r2, #0
   15fd4:	str	r2, [sp, #8]
   15fd8:	ble	15e28 <el_line@plt+0x13974>
   15fdc:	mov	r0, r2
   15fe0:	mvn	r1, #0
   15fe4:	add	r6, r6, r2, lsl #2
   15fe8:	str	r6, [sp, #12]
   15fec:	bl	192bc <el_line@plt+0x16e08>
   15ff0:	ldr	r6, [sp, #12]
   15ff4:	str	sl, [r6, #-4]!
   15ff8:	mvn	r1, #0
   15ffc:	bl	192bc <el_line@plt+0x16e08>
   16000:	cmn	r0, #1
   16004:	bne	15ff4 <el_line@plt+0x13b40>
   16008:	ldr	r3, [sp, #12]
   1600c:	ldr	r2, [sp, #8]
   16010:	sub	r6, r3, r2, lsl #2
   16014:	b	15e28 <el_line@plt+0x13974>
   16018:	ldr	r2, [r7, #8]
   1601c:	ldr	r3, [r7]
   16020:	add	r3, r2, r3
   16024:	str	r5, [ip, r3, lsl #2]
   16028:	b	15fa8 <el_line@plt+0x13af4>
   1602c:	ldr	r8, [r7, #8]
   16030:	cmp	r8, #0
   16034:	ble	15f2c <el_line@plt+0x13a78>
   16038:	mov	r0, r8
   1603c:	mvn	r1, #0
   16040:	add	ip, ip, r8, lsl #2
   16044:	str	ip, [sp, #8]
   16048:	bl	192bc <el_line@plt+0x16e08>
   1604c:	ldr	sl, [sp, #8]
   16050:	mov	r3, #0
   16054:	mvn	r1, #0
   16058:	str	r3, [sl, #-4]!
   1605c:	bl	192bc <el_line@plt+0x16e08>
   16060:	cmn	r0, #1
   16064:	bne	16050 <el_line@plt+0x13b9c>
   16068:	ldr	r2, [sp, #8]
   1606c:	sub	ip, r2, r8, lsl #2
   16070:	b	15f2c <el_line@plt+0x13a78>
   16074:	bl	23ac <__errno_location@plt>
   16078:	mov	r2, #0
   1607c:	mov	r3, r0
   16080:	mvn	r0, #0
   16084:	str	r2, [r3]
   16088:	b	15de8 <el_line@plt+0x13934>
   1608c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16090:	sub	sp, sp, #148	; 0x94
   16094:	ldr	ip, [pc, #612]	; 16300 <el_line@plt+0x13e4c>
   16098:	mov	r6, r2
   1609c:	ldr	r4, [pc, #608]	; 16304 <el_line@plt+0x13e50>
   160a0:	mov	r9, r0
   160a4:	ldr	r2, [sp, #188]	; 0xbc
   160a8:	add	ip, pc, ip
   160ac:	ldr	r0, [sp, #184]	; 0xb8
   160b0:	mov	r7, r3
   160b4:	mov	r3, ip
   160b8:	ldr	r8, [sp, #192]	; 0xc0
   160bc:	str	r2, [sp, #28]
   160c0:	mov	r2, #47	; 0x2f
   160c4:	ldr	r4, [ip, r4]
   160c8:	ldr	sl, [sp, #196]	; 0xc4
   160cc:	str	r4, [sp, #24]
   160d0:	ldr	ip, [sp, #24]
   160d4:	ldrh	r4, [r0]
   160d8:	ldr	r3, [ip]
   160dc:	str	r3, [sp, #140]	; 0x8c
   160e0:	cmp	r4, #0
   160e4:	beq	161ec <el_line@plt+0x13d38>
   160e8:	cmp	r4, #47	; 0x2f
   160ec:	moveq	ip, r6
   160f0:	moveq	r3, r0
   160f4:	beq	16160 <el_line@plt+0x13cac>
   160f8:	add	r5, r0, #2
   160fc:	mov	ip, r6
   16100:	mov	fp, #0
   16104:	b	16120 <el_line@plt+0x13c6c>
   16108:	strh	r4, [ip, #-2]
   1610c:	mov	r3, r5
   16110:	ldrh	r4, [r5], #2
   16114:	cmp	r4, #47	; 0x2f
   16118:	cmpne	r4, #0
   1611c:	beq	16158 <el_line@plt+0x13ca4>
   16120:	tst	r4, #32768	; 0x8000
   16124:	add	ip, ip, #2
   16128:	movne	fp, #1
   1612c:	cmp	r7, ip
   16130:	bcs	16108 <el_line@plt+0x13c54>
   16134:	mov	r3, #1
   16138:	ldr	ip, [sp, #24]
   1613c:	mov	r0, r3
   16140:	ldr	r2, [sp, #140]	; 0x8c
   16144:	ldr	r3, [ip]
   16148:	cmp	r2, r3
   1614c:	bne	162e0 <el_line@plt+0x13e2c>
   16150:	add	sp, sp, #148	; 0x94
   16154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16158:	cmp	fp, #0
   1615c:	bne	161b0 <el_line@plt+0x13cfc>
   16160:	ldrh	r4, [r3]
   16164:	cmp	r4, #47	; 0x2f
   16168:	bne	161e0 <el_line@plt+0x13d2c>
   1616c:	add	r6, ip, #2
   16170:	cmp	r7, r6
   16174:	bcc	16134 <el_line@plt+0x13c80>
   16178:	add	r5, r3, #2
   1617c:	b	16188 <el_line@plt+0x13cd4>
   16180:	mov	ip, r6
   16184:	mov	r6, r3
   16188:	strh	r2, [ip]
   1618c:	mov	r0, r5
   16190:	ldrh	r4, [r5]
   16194:	add	r5, r5, #2
   16198:	cmp	r4, #47	; 0x2f
   1619c:	bne	160e0 <el_line@plt+0x13c2c>
   161a0:	add	r3, r6, #2
   161a4:	cmp	r7, r3
   161a8:	bcs	16180 <el_line@plt+0x13ccc>
   161ac:	b	16134 <el_line@plt+0x13c80>
   161b0:	ldr	r2, [sp, #28]
   161b4:	str	r0, [sp]
   161b8:	mov	r0, r9
   161bc:	str	r3, [sp, #4]
   161c0:	mov	r3, r7
   161c4:	str	r2, [sp, #8]
   161c8:	mov	r2, r6
   161cc:	str	r8, [sp, #12]
   161d0:	str	sl, [sp, #16]
   161d4:	bl	16308 <el_line@plt+0x13e54>
   161d8:	mov	r3, r0
   161dc:	b	16138 <el_line@plt+0x13c84>
   161e0:	mov	r0, r3
   161e4:	mov	r6, ip
   161e8:	b	160e0 <el_line@plt+0x13c2c>
   161ec:	add	fp, r8, #12
   161f0:	add	r5, sp, #32
   161f4:	add	r3, r8, #40	; 0x28
   161f8:	strh	r4, [r6]
   161fc:	mov	r0, r9
   16200:	mov	r2, fp
   16204:	mov	r1, r5
   16208:	bl	15b44 <el_line@plt+0x13690>
   1620c:	cmp	r0, #0
   16210:	movne	r3, r4
   16214:	bne	16138 <el_line@plt+0x13c84>
   16218:	ldr	r3, [r8, #12]
   1621c:	tst	r3, #8192	; 0x2000
   16220:	beq	1623c <el_line@plt+0x13d88>
   16224:	ldr	r3, [sl, #4]
   16228:	cmp	r3, #127	; 0x7f
   1622c:	add	r3, r3, #1
   16230:	str	r3, [sl, #4]
   16234:	bhi	162e4 <el_line@plt+0x13e30>
   16238:	ldr	r3, [r8, #12]
   1623c:	tst	r3, #8
   16240:	beq	16268 <el_line@plt+0x13db4>
   16244:	ldrh	r3, [r6, #-2]
   16248:	cmp	r3, #47	; 0x2f
   1624c:	beq	16268 <el_line@plt+0x13db4>
   16250:	ldr	r3, [sp, #48]	; 0x30
   16254:	and	r3, r3, #61440	; 0xf000
   16258:	cmp	r3, #16384	; 0x4000
   1625c:	beq	162c0 <el_line@plt+0x13e0c>
   16260:	cmp	r3, #40960	; 0xa000
   16264:	beq	16294 <el_line@plt+0x13de0>
   16268:	ldr	r0, [r8, #4]
   1626c:	mov	r1, #1
   16270:	bl	192bc <el_line@plt+0x16e08>
   16274:	mov	r3, r5
   16278:	mov	r1, r8
   1627c:	mov	r2, sl
   16280:	str	r0, [r8, #4]
   16284:	mov	r0, r9
   16288:	bl	15ccc <el_line@plt+0x13818>
   1628c:	mov	r3, r0
   16290:	b	16138 <el_line@plt+0x13c84>
   16294:	mov	r2, fp
   16298:	mov	r0, r9
   1629c:	mov	r1, r5
   162a0:	add	r3, r8, #44	; 0x2c
   162a4:	bl	15c08 <el_line@plt+0x13754>
   162a8:	cmp	r0, #0
   162ac:	bne	16268 <el_line@plt+0x13db4>
   162b0:	ldr	r3, [sp, #48]	; 0x30
   162b4:	and	r3, r3, #61440	; 0xf000
   162b8:	cmp	r3, #16384	; 0x4000
   162bc:	bne	16268 <el_line@plt+0x13db4>
   162c0:	add	r3, r6, #2
   162c4:	cmp	r7, r3
   162c8:	bcc	16134 <el_line@plt+0x13c80>
   162cc:	mov	r2, #47	; 0x2f
   162d0:	mov	r3, #0
   162d4:	strh	r2, [r6]
   162d8:	strh	r3, [r6, #2]
   162dc:	b	16268 <el_line@plt+0x13db4>
   162e0:	bl	21e4 <__stack_chk_fail@plt>
   162e4:	bl	23ac <__errno_location@plt>
   162e8:	mov	r2, #47	; 0x2f
   162ec:	mvn	r3, #0
   162f0:	str	r4, [r0]
   162f4:	strh	r4, [r6, #2]
   162f8:	strh	r2, [r6]
   162fc:	b	16138 <el_line@plt+0x13c84>
   16300:			; <UNDEFINED> instruction: 0x00018cbc
   16304:	andeq	r0, r0, ip, lsr #4
   16308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1630c:	mov	r5, r2
   16310:	ldr	r4, [pc, #824]	; 16650 <el_line@plt+0x1419c>
   16314:	sub	sp, sp, #4096	; 0x1000
   16318:	ldr	r2, [pc, #820]	; 16654 <el_line@plt+0x141a0>
   1631c:	sub	sp, sp, #60	; 0x3c
   16320:	add	r4, pc, r4
   16324:	cmp	r5, r3
   16328:	str	r0, [sp, #28]
   1632c:	mov	sl, r3
   16330:	str	r1, [sp, #36]	; 0x24
   16334:	add	r1, sp, #8192	; 0x2000
   16338:	ldr	r2, [r4, r2]
   1633c:	movhi	r0, #1
   16340:	ldr	r3, [r1, #-3992]	; 0xfffff068
   16344:	ldr	r8, [r1, #-4000]	; 0xfffff060
   16348:	str	r2, [sp, #32]
   1634c:	ldr	r2, [r1, #-3996]	; 0xfffff064
   16350:	ldr	r1, [sp, #32]
   16354:	str	r3, [sp, #40]	; 0x28
   16358:	str	r2, [sp, #24]
   1635c:	add	r2, sp, #8192	; 0x2000
   16360:	ldr	r3, [r1]
   16364:	ldr	r6, [r2, #-3988]	; 0xfffff06c
   16368:	ldr	r7, [r2, #-3984]	; 0xfffff070
   1636c:	str	r3, [r2, #-4044]	; 0xfffff034
   16370:	bls	16398 <el_line@plt+0x13ee4>
   16374:	ldr	r1, [sp, #32]
   16378:	add	r3, sp, #8192	; 0x2000
   1637c:	ldr	r2, [r3, #-4044]	; 0xfffff034
   16380:	ldr	r3, [r1]
   16384:	cmp	r2, r3
   16388:	bne	1664c <el_line@plt+0x14198>
   1638c:	add	sp, sp, #4096	; 0x1000
   16390:	add	sp, sp, #60	; 0x3c
   16394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16398:	mov	r9, #0
   1639c:	strh	r9, [r5]
   163a0:	bl	23ac <__errno_location@plt>
   163a4:	ldr	r1, [sp, #28]
   163a8:	add	fp, sp, #56	; 0x38
   163ac:	str	r9, [r0]
   163b0:	ldrh	r3, [r1]
   163b4:	str	r0, [sp, #44]	; 0x2c
   163b8:	cmp	r3, r9
   163bc:	beq	16598 <el_line@plt+0x140e4>
   163c0:	ldr	r2, [sp, #28]
   163c4:	sub	r1, fp, #5
   163c8:	add	r0, r2, #8128	; 0x1fc0
   163cc:	add	r0, r0, #62	; 0x3e
   163d0:	b	163e0 <el_line@plt+0x13f2c>
   163d4:	cmp	r2, r0
   163d8:	beq	165d4 <el_line@plt+0x14120>
   163dc:	ldrh	r3, [r2, #2]!
   163e0:	uxtb	r3, r3
   163e4:	strb	r3, [r1, #1]!
   163e8:	cmp	r3, #0
   163ec:	bne	163d4 <el_line@plt+0x13f20>
   163f0:	add	r9, sp, #52	; 0x34
   163f4:	ldr	r3, [r6, #12]
   163f8:	mov	r0, r9
   163fc:	tst	r3, #64	; 0x40
   16400:	bne	16588 <el_line@plt+0x140d4>
   16404:	bl	2094 <opendir@plt>
   16408:	mov	r9, r0
   1640c:	cmp	r9, #0
   16410:	beq	165d4 <el_line@plt+0x14120>
   16414:	ldr	r3, [r6, #12]
   16418:	tst	r3, #64	; 0x40
   1641c:	bne	164d0 <el_line@plt+0x1401c>
   16420:	ldr	r3, [pc, #560]	; 16658 <el_line@plt+0x141a4>
   16424:	ldr	fp, [r4, r3]
   16428:	mov	r0, r9
   1642c:	blx	fp
   16430:	cmp	r0, #0
   16434:	beq	164e4 <el_line@plt+0x14030>
   16438:	ldr	r3, [r6, #12]
   1643c:	tst	r3, #8192	; 0x2000
   16440:	beq	16458 <el_line@plt+0x13fa4>
   16444:	ldr	r3, [r7, #8]
   16448:	cmp	r3, #16384	; 0x4000
   1644c:	add	r3, r3, #1
   16450:	str	r3, [r7, #8]
   16454:	bcs	165b4 <el_line@plt+0x14100>
   16458:	ldrb	r2, [r0, #19]
   1645c:	cmp	r2, #46	; 0x2e
   16460:	beq	1656c <el_line@plt+0x140b8>
   16464:	cmp	r5, sl
   16468:	bcs	16580 <el_line@plt+0x140cc>
   1646c:	cmp	r2, #0
   16470:	add	r3, r0, #20
   16474:	strh	r2, [r5]
   16478:	add	r4, r5, #2
   1647c:	bne	16494 <el_line@plt+0x13fe0>
   16480:	b	1650c <el_line@plt+0x14058>
   16484:	ldrb	r2, [r3], #1
   16488:	cmp	r2, #0
   1648c:	strh	r2, [r4], #2
   16490:	beq	1650c <el_line@plt+0x14058>
   16494:	cmp	sl, r4
   16498:	bhi	16484 <el_line@plt+0x13fd0>
   1649c:	mov	r2, #1
   164a0:	mov	r3, #0
   164a4:	strh	r3, [r4]
   164a8:	ldr	r3, [r6, #12]
   164ac:	tst	r3, #64	; 0x40
   164b0:	beq	164f4 <el_line@plt+0x14040>
   164b4:	ldr	r3, [r6, #28]
   164b8:	mov	r0, r9
   164bc:	str	r2, [sp, #20]
   164c0:	blx	r3
   164c4:	ldr	r2, [sp, #20]
   164c8:	mov	r0, r2
   164cc:	b	16374 <el_line@plt+0x13ec0>
   164d0:	ldr	fp, [r6, #32]
   164d4:	mov	r0, r9
   164d8:	blx	fp
   164dc:	cmp	r0, #0
   164e0:	bne	16438 <el_line@plt+0x13f84>
   164e4:	ldr	r3, [r6, #12]
   164e8:	mov	r2, r0
   164ec:	tst	r3, #64	; 0x40
   164f0:	bne	164b4 <el_line@plt+0x14000>
   164f4:	mov	r0, r9
   164f8:	str	r2, [sp, #20]
   164fc:	bl	1f80 <closedir@plt>
   16500:	ldr	r2, [sp, #20]
   16504:	mov	r0, r2
   16508:	b	16374 <el_line@plt+0x13ec0>
   1650c:	cmp	r4, sl
   16510:	bcs	1649c <el_line@plt+0x13fe8>
   16514:	mov	r0, r5
   16518:	mov	r1, r8
   1651c:	ldr	r2, [sp, #24]
   16520:	mov	r3, #64	; 0x40
   16524:	bl	158e8 <el_line@plt+0x13434>
   16528:	cmp	r0, #0
   1652c:	strheq	r0, [r5]
   16530:	beq	16428 <el_line@plt+0x13f74>
   16534:	ldr	r3, [sp, #24]
   16538:	sub	r2, r4, #2
   1653c:	ldr	r1, [sp, #40]	; 0x28
   16540:	ldr	r0, [sp, #28]
   16544:	str	r3, [sp]
   16548:	mov	r3, sl
   1654c:	str	r1, [sp, #4]
   16550:	str	r6, [sp, #8]
   16554:	ldr	r1, [sp, #36]	; 0x24
   16558:	str	r7, [sp, #12]
   1655c:	bl	1608c <el_line@plt+0x13bd8>
   16560:	cmp	r0, #0
   16564:	beq	16428 <el_line@plt+0x13f74>
   16568:	b	164e4 <el_line@plt+0x14030>
   1656c:	ldrh	r3, [r8]
   16570:	cmp	r3, #46	; 0x2e
   16574:	bne	16428 <el_line@plt+0x13f74>
   16578:	cmp	r5, sl
   1657c:	bcc	1646c <el_line@plt+0x13fb8>
   16580:	mov	r4, r5
   16584:	b	1649c <el_line@plt+0x13fe8>
   16588:	ldr	r3, [r6, #36]	; 0x24
   1658c:	blx	r3
   16590:	mov	r9, r0
   16594:	b	1640c <el_line@plt+0x13f58>
   16598:	sub	r9, fp, #4
   1659c:	ldr	r1, [pc, #184]	; 1665c <el_line@plt+0x141a8>
   165a0:	mov	r2, #4096	; 0x1000
   165a4:	add	r1, pc, r1
   165a8:	mov	r0, r9
   165ac:	bl	177d8 <el_line@plt+0x15324>
   165b0:	b	163f4 <el_line@plt+0x13f40>
   165b4:	ldr	r2, [sp, #44]	; 0x2c
   165b8:	mov	r3, #0
   165bc:	mov	r1, #47	; 0x2f
   165c0:	str	r3, [r2]
   165c4:	mvn	r2, #0
   165c8:	strh	r3, [r5, #2]
   165cc:	strh	r1, [r5]
   165d0:	b	164a8 <el_line@plt+0x13ff4>
   165d4:	ldr	ip, [r6, #24]
   165d8:	cmp	ip, #0
   165dc:	beq	16644 <el_line@plt+0x14190>
   165e0:	sub	r9, fp, #4
   165e4:	ldr	r3, [sp, #28]
   165e8:	add	r1, r9, #4080	; 0xff0
   165ec:	sub	fp, fp, #5
   165f0:	sub	r2, r3, #2
   165f4:	add	r1, r1, #15
   165f8:	b	16604 <el_line@plt+0x14150>
   165fc:	cmp	fp, r1
   16600:	beq	1663c <el_line@plt+0x14188>
   16604:	ldrh	r3, [r2, #2]!
   16608:	uxtb	r3, r3
   1660c:	strb	r3, [fp, #1]!
   16610:	cmp	r3, #0
   16614:	bne	165fc <el_line@plt+0x14148>
   16618:	ldr	r2, [sp, #44]	; 0x2c
   1661c:	mov	r0, r9
   16620:	ldr	r1, [r2]
   16624:	blx	ip
   16628:	cmp	r0, #0
   1662c:	bne	1663c <el_line@plt+0x14188>
   16630:	ldr	r0, [r6, #12]
   16634:	ands	r0, r0, #4
   16638:	beq	16374 <el_line@plt+0x13ec0>
   1663c:	mvn	r0, #1
   16640:	b	16374 <el_line@plt+0x13ec0>
   16644:	mov	r0, ip
   16648:	b	16374 <el_line@plt+0x13ec0>
   1664c:	bl	21e4 <__stack_chk_fail@plt>
   16650:	andeq	r8, r1, r4, asr #20
   16654:	andeq	r0, r0, ip, lsr #4
   16658:	andeq	r0, r0, ip, lsr r2
   1665c:	andeq	r4, r0, r4, ror #26
   16660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16664:	sub	sp, sp, #16384	; 0x4000
   16668:	sub	sp, sp, #108	; 0x6c
   1666c:	ldr	ip, [pc, #2040]	; 16e6c <el_line@plt+0x149b8>
   16670:	str	r0, [sp, #32]
   16674:	add	ip, pc, ip
   16678:	ldr	r0, [pc, #2032]	; 16e70 <el_line@plt+0x149bc>
   1667c:	str	r1, [sp, #20]
   16680:	ldr	r1, [sp, #32]
   16684:	str	r2, [sp, #64]	; 0x40
   16688:	mov	r2, ip
   1668c:	ldr	r0, [ip, r0]
   16690:	ldrh	r3, [r1]
   16694:	add	r1, sp, #16384	; 0x4000
   16698:	ldr	r2, [r0]
   1669c:	cmp	r3, #126	; 0x7e
   166a0:	str	r0, [sp, #68]	; 0x44
   166a4:	str	r2, [r1, #100]	; 0x64
   166a8:	beq	16b70 <el_line@plt+0x146bc>
   166ac:	ldr	r5, [sp, #32]
   166b0:	add	r2, sp, #100	; 0x64
   166b4:	str	r2, [sp, #24]
   166b8:	ldr	r2, [sp, #20]
   166bc:	movw	r1, #32831	; 0x803f
   166c0:	movt	r1, #65535	; 0xffff
   166c4:	str	r1, [sp, #72]	; 0x48
   166c8:	ldr	r2, [r2]
   166cc:	str	r2, [sp, #36]	; 0x24
   166d0:	ldr	r1, [sp, #36]	; 0x24
   166d4:	ldr	r2, [pc, #1944]	; 16e74 <el_line@plt+0x149c0>
   166d8:	add	r2, pc, r2
   166dc:	str	r1, [sp, #40]	; 0x28
   166e0:	movw	r1, #32859	; 0x805b
   166e4:	movt	r1, #65535	; 0xffff
   166e8:	str	r1, [sp, #76]	; 0x4c
   166ec:	ldr	r1, [pc, #1924]	; 16e78 <el_line@plt+0x149c4>
   166f0:	ldr	r2, [r2]
   166f4:	add	r1, pc, r1
   166f8:	str	r1, [sp, #44]	; 0x2c
   166fc:	ldr	r1, [pc, #1912]	; 16e7c <el_line@plt+0x149c8>
   16700:	str	r2, [sp, #28]
   16704:	movw	r2, #32826	; 0x803a
   16708:	add	r1, pc, r1
   1670c:	movt	r2, #65535	; 0xffff
   16710:	str	r1, [sp, #80]	; 0x50
   16714:	str	r2, [sp, #56]	; 0x38
   16718:	movw	r2, #32813	; 0x802d
   1671c:	movt	r2, #65535	; 0xffff
   16720:	str	r2, [sp, #48]	; 0x30
   16724:	movw	r2, #32861	; 0x805d
   16728:	movt	r2, #65535	; 0xffff
   1672c:	str	r2, [sp, #84]	; 0x54
   16730:	movw	r2, #32801	; 0x8021
   16734:	movt	r2, #65535	; 0xffff
   16738:	str	r2, [sp, #88]	; 0x58
   1673c:	movw	r2, #32810	; 0x802a
   16740:	movt	r2, #65535	; 0xffff
   16744:	str	r2, [sp, #92]	; 0x5c
   16748:	ldr	r2, [sp, #24]
   1674c:	b	16774 <el_line@plt+0x142c0>
   16750:	cmp	r3, #91	; 0x5b
   16754:	beq	167f0 <el_line@plt+0x1433c>
   16758:	cmp	r3, #42	; 0x2a
   1675c:	beq	167b0 <el_line@plt+0x142fc>
   16760:	uxtb	r3, r3
   16764:	add	r2, r2, #2
   16768:	strh	r3, [r2, #-2]
   1676c:	mov	r5, r0
   16770:	ldrh	r3, [r5]
   16774:	cmp	r3, #0
   16778:	add	r0, r5, #2
   1677c:	beq	16a3c <el_line@plt+0x14588>
   16780:	cmp	r3, #63	; 0x3f
   16784:	bne	16750 <el_line@plt+0x1429c>
   16788:	ldr	r1, [sp, #20]
   1678c:	mov	r5, r0
   16790:	add	r2, r2, #2
   16794:	ldr	r3, [r1, #12]
   16798:	ldr	r1, [sp, #72]	; 0x48
   1679c:	orr	r3, r3, #256	; 0x100
   167a0:	strh	r1, [r2, #-2]
   167a4:	ldr	r1, [sp, #20]
   167a8:	str	r3, [r1, #12]
   167ac:	b	16770 <el_line@plt+0x142bc>
   167b0:	ldr	r1, [sp, #20]
   167b4:	ldr	r3, [sp, #24]
   167b8:	cmp	r2, r3
   167bc:	ldr	r3, [r1, #12]
   167c0:	orr	r3, r3, #256	; 0x100
   167c4:	str	r3, [r1, #12]
   167c8:	beq	167dc <el_line@plt+0x14328>
   167cc:	ldrh	r3, [r2, #-2]
   167d0:	movw	r1, #32810	; 0x802a
   167d4:	cmp	r3, r1
   167d8:	beq	16a34 <el_line@plt+0x14580>
   167dc:	ldr	r3, [sp, #92]	; 0x5c
   167e0:	mov	r5, r0
   167e4:	add	r2, r2, #2
   167e8:	strh	r3, [r2, #-2]
   167ec:	b	16770 <el_line@plt+0x142bc>
   167f0:	ldrh	ip, [r5, #2]
   167f4:	cmp	ip, #33	; 0x21
   167f8:	addeq	r0, r5, #4
   167fc:	ldrheq	r3, [r5, #4]
   16800:	movne	r3, ip
   16804:	cmp	r3, #0
   16808:	beq	16a1c <el_line@plt+0x14568>
   1680c:	mov	r1, r0
   16810:	b	1681c <el_line@plt+0x14368>
   16814:	cmp	r3, #0
   16818:	beq	16a1c <el_line@plt+0x14568>
   1681c:	ldrh	r3, [r1, #2]!
   16820:	cmp	r3, #93	; 0x5d
   16824:	bne	16814 <el_line@plt+0x14360>
   16828:	ldr	r3, [sp, #76]	; 0x4c
   1682c:	cmp	ip, #33	; 0x21
   16830:	add	r8, r2, #2
   16834:	strh	r3, [r2]
   16838:	ldreq	r3, [sp, #88]	; 0x58
   1683c:	addeq	r8, r2, #4
   16840:	strheq	r3, [r2, #2]
   16844:	ldr	r2, [sp, #20]
   16848:	add	r5, r0, #2
   1684c:	ldrh	r3, [r0]
   16850:	ldr	r2, [r2, #12]
   16854:	str	r2, [sp, #60]	; 0x3c
   16858:	and	r2, r2, #16
   1685c:	str	r2, [sp, #52]	; 0x34
   16860:	b	1688c <el_line@plt+0x143d8>
   16864:	uxtb	r3, r3
   16868:	strh	r3, [r8]
   1686c:	add	r2, r8, #2
   16870:	ldrh	r3, [r5]
   16874:	cmp	r3, #45	; 0x2d
   16878:	beq	16978 <el_line@plt+0x144c4>
   1687c:	cmp	r3, #93	; 0x5d
   16880:	add	r5, r5, #2
   16884:	beq	169ac <el_line@plt+0x144f8>
   16888:	mov	r8, r2
   1688c:	cmp	r3, #91	; 0x5b
   16890:	bne	16864 <el_line@plt+0x143b0>
   16894:	ldrh	r2, [r5]
   16898:	cmp	r2, #58	; 0x3a
   1689c:	bne	16868 <el_line@plt+0x143b4>
   168a0:	add	r1, r5, #2
   168a4:	mov	r3, r1
   168a8:	b	168b4 <el_line@plt+0x14400>
   168ac:	cmp	r2, #0
   168b0:	beq	168d0 <el_line@plt+0x1441c>
   168b4:	mov	r0, r3
   168b8:	ldrh	r2, [r3], #2
   168bc:	cmp	r2, #58	; 0x3a
   168c0:	bne	168ac <el_line@plt+0x143f8>
   168c4:	ldrh	r3, [r0, #2]
   168c8:	cmp	r3, #93	; 0x5d
   168cc:	beq	168d8 <el_line@plt+0x14424>
   168d0:	mov	r3, #91	; 0x5b
   168d4:	b	16868 <el_line@plt+0x143b4>
   168d8:	bl	19350 <el_line@plt+0x16e9c>
   168dc:	ldr	r3, [sp, #28]
   168e0:	cmp	r3, #0
   168e4:	asr	fp, r0, #1
   168e8:	beq	16940 <el_line@plt+0x1448c>
   168ec:	ldr	sl, [sp, #44]	; 0x2c
   168f0:	ldr	r4, [sp, #28]
   168f4:	add	r9, r4, fp
   168f8:	mov	r7, r5
   168fc:	b	16920 <el_line@plt+0x1446c>
   16900:	ldrh	r6, [r7, #2]!
   16904:	ldrb	r1, [r4], #1
   16908:	mov	r0, r6
   1690c:	bl	19350 <el_line@plt+0x16e9c>
   16910:	cmp	r0, #0
   16914:	bne	16934 <el_line@plt+0x14480>
   16918:	cmp	r6, #0
   1691c:	beq	16928 <el_line@plt+0x14474>
   16920:	cmp	r4, r9
   16924:	bne	16900 <el_line@plt+0x1444c>
   16928:	ldrb	r3, [r9]
   1692c:	cmp	r3, #0
   16930:	beq	169cc <el_line@plt+0x14518>
   16934:	ldr	r4, [sl, #8]!
   16938:	cmp	r4, #0
   1693c:	bne	168f4 <el_line@plt+0x14440>
   16940:	ldr	r2, [sp, #52]	; 0x34
   16944:	cmp	r2, #0
   16948:	bne	168d0 <el_line@plt+0x1441c>
   1694c:	mvn	r4, #2
   16950:	add	r1, sp, #16384	; 0x4000
   16954:	mov	r0, r4
   16958:	ldr	r2, [r1, #100]	; 0x64
   1695c:	ldr	r1, [sp, #68]	; 0x44
   16960:	ldr	r3, [r1]
   16964:	cmp	r2, r3
   16968:	bne	16ce4 <el_line@plt+0x14830>
   1696c:	add	sp, sp, #16384	; 0x4000
   16970:	add	sp, sp, #108	; 0x6c
   16974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16978:	ldrh	r1, [r5, #2]
   1697c:	cmp	r1, #93	; 0x5d
   16980:	beq	16a14 <el_line@plt+0x14560>
   16984:	ldr	r2, [sp, #48]	; 0x30
   16988:	uxtb	r1, r1
   1698c:	strh	r1, [r8, #4]
   16990:	add	r5, r5, #4
   16994:	strh	r2, [r8, #2]
   16998:	add	r2, r8, #6
   1699c:	ldrh	r3, [r5]
   169a0:	add	r5, r5, #2
   169a4:	cmp	r3, #93	; 0x5d
   169a8:	bne	16888 <el_line@plt+0x143d4>
   169ac:	ldr	r1, [sp, #60]	; 0x3c
   169b0:	add	r2, r2, #2
   169b4:	orr	r3, r1, #256	; 0x100
   169b8:	ldr	r1, [sp, #84]	; 0x54
   169bc:	strh	r1, [r2, #-2]
   169c0:	ldr	r1, [sp, #20]
   169c4:	str	r3, [r1, #12]
   169c8:	b	16770 <el_line@plt+0x142bc>
   169cc:	ldr	r2, [sp, #56]	; 0x38
   169d0:	mov	r0, sl
   169d4:	ldr	r1, [sp, #80]	; 0x50
   169d8:	add	r8, r8, #4
   169dc:	strh	r2, [r8, #-4]
   169e0:	bl	19350 <el_line@plt+0x16e9c>
   169e4:	add	r2, fp, #3
   169e8:	add	r2, r5, r2, lsl #1
   169ec:	add	r5, r2, #2
   169f0:	asr	r0, r0, #3
   169f4:	strh	r0, [r8, #-2]
   169f8:	ldrh	r3, [r2]
   169fc:	cmp	r3, #91	; 0x5b
   16a00:	bne	16b60 <el_line@plt+0x146ac>
   16a04:	ldrh	r2, [r2, #2]
   16a08:	cmp	r2, #58	; 0x3a
   16a0c:	beq	168a0 <el_line@plt+0x143ec>
   16a10:	b	16864 <el_line@plt+0x143b0>
   16a14:	add	r5, r5, #2
   16a18:	b	16888 <el_line@plt+0x143d4>
   16a1c:	cmp	ip, #33	; 0x21
   16a20:	mov	r3, #91	; 0x5b
   16a24:	add	r2, r2, #2
   16a28:	strh	r3, [r2, #-2]
   16a2c:	subeq	r5, r0, #2
   16a30:	beq	16770 <el_line@plt+0x142bc>
   16a34:	mov	r5, r0
   16a38:	b	16770 <el_line@plt+0x142bc>
   16a3c:	strh	r3, [r2]
   16a40:	add	r2, sp, #16384	; 0x4000
   16a44:	movw	r1, #49148	; 0xbffc
   16a48:	add	r2, r2, #104	; 0x68
   16a4c:	movt	r1, #65535	; 0xffff
   16a50:	ldrh	r1, [r2, r1]
   16a54:	uxth	r3, r1
   16a58:	cmp	r3, #0
   16a5c:	bne	16c48 <el_line@plt+0x14794>
   16a60:	ldr	r3, [sp, #36]	; 0x24
   16a64:	ldr	r1, [sp, #40]	; 0x28
   16a68:	cmp	r3, r1
   16a6c:	beq	16cac <el_line@plt+0x147f8>
   16a70:	ldr	r1, [sp, #20]
   16a74:	ldr	r3, [r1, #12]
   16a78:	ands	r4, r3, #32
   16a7c:	movne	r4, #0
   16a80:	bne	16950 <el_line@plt+0x1449c>
   16a84:	tst	r3, #16384	; 0x4000
   16a88:	beq	16dc0 <el_line@plt+0x1490c>
   16a8c:	ldr	r1, [sp, #40]	; 0x28
   16a90:	ldr	r0, [sp, #36]	; 0x24
   16a94:	bl	19350 <el_line@plt+0x16e9c>
   16a98:	ldr	r2, [sp, #20]
   16a9c:	ldr	r1, [r2, #8]
   16aa0:	mov	r5, r0
   16aa4:	ldr	r0, [sp, #40]	; 0x28
   16aa8:	bl	192bc <el_line@plt+0x16e08>
   16aac:	mov	r1, #8
   16ab0:	mov	r8, r0
   16ab4:	mov	r0, r5
   16ab8:	bl	2298 <calloc@plt>
   16abc:	subs	r6, r0, #0
   16ac0:	beq	16e44 <el_line@plt+0x14990>
   16ac4:	cmp	r5, #0
   16ac8:	ble	16e4c <el_line@plt+0x14998>
   16acc:	lsl	r8, r8, #2
   16ad0:	ldr	r0, [sp, #20]
   16ad4:	lsl	r7, r5, #3
   16ad8:	mov	r1, r4
   16adc:	mov	r2, r8
   16ae0:	ldr	ip, [r0, #16]
   16ae4:	mov	r3, r6
   16ae8:	ldr	ip, [ip, r2]
   16aec:	str	ip, [r3, r1]!
   16af0:	add	r1, r1, #8
   16af4:	ldr	ip, [r0, #20]
   16af8:	cmp	r1, r7
   16afc:	ldr	ip, [ip, r2]
   16b00:	add	r2, r2, #4
   16b04:	str	ip, [r3, #4]
   16b08:	bne	16ae0 <el_line@plt+0x1462c>
   16b0c:	ldr	r3, [pc, #876]	; 16e80 <el_line@plt+0x149cc>
   16b10:	mov	r0, r6
   16b14:	mov	r2, #8
   16b18:	mov	r1, r5
   16b1c:	add	r3, pc, r3
   16b20:	bl	1f38 <qsort@plt>
   16b24:	ldr	r0, [sp, #20]
   16b28:	mov	r3, r8
   16b2c:	mov	r2, #0
   16b30:	mov	r1, r6
   16b34:	ldr	ip, [r0, #16]
   16b38:	ldr	lr, [r1, r2]!
   16b3c:	add	r2, r2, #8
   16b40:	cmp	r2, r7
   16b44:	str	lr, [ip, r3]
   16b48:	ldr	ip, [r1, #4]
   16b4c:	ldr	r1, [r0, #20]
   16b50:	str	ip, [r1, r3]
   16b54:	add	r3, r3, #4
   16b58:	bne	16b30 <el_line@plt+0x1467c>
   16b5c:	b	16e60 <el_line@plt+0x149ac>
   16b60:	cmp	r3, #93	; 0x5d
   16b64:	bne	16864 <el_line@plt+0x143b0>
   16b68:	mov	r2, r8
   16b6c:	b	169ac <el_line@plt+0x144f8>
   16b70:	ldr	r1, [sp, #20]
   16b74:	ldr	r2, [r1, #12]
   16b78:	tst	r2, #2048	; 0x800
   16b7c:	beq	16e34 <el_line@plt+0x14980>
   16b80:	ldr	r2, [sp, #32]
   16b84:	add	r4, sp, #104	; 0x68
   16b88:	add	r5, r2, #2
   16b8c:	ldrh	r3, [r2, #2]
   16b90:	cmp	r3, #0
   16b94:	beq	16e24 <el_line@plt+0x14970>
   16b98:	cmp	r3, #47	; 0x2f
   16b9c:	beq	16e14 <el_line@plt+0x14960>
   16ba0:	add	ip, r2, #4
   16ba4:	sub	r2, r4, #4
   16ba8:	str	r2, [sp, #24]
   16bac:	sub	r2, r4, #3
   16bb0:	ldr	r1, [sp, #24]
   16bb4:	add	r0, r1, #8128	; 0x1fc0
   16bb8:	add	r0, r0, #62	; 0x3e
   16bbc:	b	16bd8 <el_line@plt+0x14724>
   16bc0:	ldrh	r3, [ip], #2
   16bc4:	cmp	r3, #0
   16bc8:	beq	16bec <el_line@plt+0x14738>
   16bcc:	cmp	r3, #47	; 0x2f
   16bd0:	add	r2, r2, #1
   16bd4:	beq	16bec <el_line@plt+0x14738>
   16bd8:	cmp	r2, r0
   16bdc:	strb	r3, [r2, #-1]
   16be0:	mov	r1, r2
   16be4:	mov	r5, ip
   16be8:	bne	16bc0 <el_line@plt+0x1470c>
   16bec:	mov	r2, #0
   16bf0:	strb	r2, [r1]
   16bf4:	add	r1, sp, #16384	; 0x4000
   16bf8:	movw	r3, #49148	; 0xbffc
   16bfc:	add	r1, r1, #104	; 0x68
   16c00:	movt	r3, #65535	; 0xffff
   16c04:	ldrb	r3, [r1, r3]
   16c08:	uxtb	r3, r3
   16c0c:	cmp	r3, r2
   16c10:	bne	16ce8 <el_line@plt+0x14834>
   16c14:	bl	2280 <getuid@plt>
   16c18:	mov	r6, r0
   16c1c:	bl	22f8 <geteuid@plt>
   16c20:	cmp	r6, r0
   16c24:	beq	16dfc <el_line@plt+0x14948>
   16c28:	bl	2280 <getuid@plt>
   16c2c:	bl	2004 <getpwuid@plt>
   16c30:	cmp	r0, #0
   16c34:	bne	16cf8 <el_line@plt+0x14844>
   16c38:	ldr	r2, [sp, #32]
   16c3c:	ldrh	r3, [r2]
   16c40:	mov	r5, r2
   16c44:	b	166b8 <el_line@plt+0x14204>
   16c48:	ldr	r2, [sp, #24]
   16c4c:	add	r0, sp, #8256	; 0x2040
   16c50:	add	r1, sp, #16384	; 0x4000
   16c54:	add	r0, r0, #36	; 0x24
   16c58:	add	r3, r2, #8128	; 0x1fc0
   16c5c:	add	r1, r1, #98	; 0x62
   16c60:	str	r2, [sp]
   16c64:	add	r3, r3, #62	; 0x3e
   16c68:	ldr	r2, [sp, #20]
   16c6c:	str	r3, [sp, #4]
   16c70:	ldr	r3, [sp, #64]	; 0x40
   16c74:	str	r2, [sp, #8]
   16c78:	mov	r2, r0
   16c7c:	str	r3, [sp, #12]
   16c80:	mov	r3, r1
   16c84:	bl	1608c <el_line@plt+0x13bd8>
   16c88:	subs	r4, r0, #0
   16c8c:	bne	16950 <el_line@plt+0x1449c>
   16c90:	ldr	r2, [sp, #20]
   16c94:	ldr	r1, [sp, #40]	; 0x28
   16c98:	ldr	r2, [r2]
   16c9c:	str	r2, [sp, #36]	; 0x24
   16ca0:	ldr	r3, [sp, #36]	; 0x24
   16ca4:	cmp	r3, r1
   16ca8:	bne	16a70 <el_line@plt+0x145bc>
   16cac:	ldr	r2, [sp, #20]
   16cb0:	ldr	r3, [r2, #12]
   16cb4:	tst	r3, #16
   16cb8:	bne	16cc8 <el_line@plt+0x14814>
   16cbc:	and	r3, r3, #768	; 0x300
   16cc0:	cmp	r3, #512	; 0x200
   16cc4:	bne	1694c <el_line@plt+0x14498>
   16cc8:	ldr	r0, [sp, #32]
   16ccc:	mov	r3, #0
   16cd0:	ldr	r1, [sp, #20]
   16cd4:	ldr	r2, [sp, #64]	; 0x40
   16cd8:	bl	15ccc <el_line@plt+0x13818>
   16cdc:	mov	r4, r0
   16ce0:	b	16950 <el_line@plt+0x1449c>
   16ce4:	bl	21e4 <__stack_chk_fail@plt>
   16ce8:	ldr	r0, [sp, #24]
   16cec:	bl	1e84 <getpwnam@plt>
   16cf0:	cmp	r0, #0
   16cf4:	beq	16da8 <el_line@plt+0x148f4>
   16cf8:	ldr	r0, [r0, #20]
   16cfc:	ldrb	r2, [r0]
   16d00:	ldr	r3, [sp, #24]
   16d04:	cmp	r2, #0
   16d08:	beq	16d64 <el_line@plt+0x148b0>
   16d0c:	add	r1, r3, #8128	; 0x1fc0
   16d10:	sub	r4, r4, #2
   16d14:	add	r1, r1, #62	; 0x3e
   16d18:	b	16d2c <el_line@plt+0x14878>
   16d1c:	ldrb	r2, [r0, #1]!
   16d20:	add	r4, r4, #2
   16d24:	cmp	r2, #0
   16d28:	beq	16d64 <el_line@plt+0x148b0>
   16d2c:	cmp	r4, r1
   16d30:	strh	r2, [r4, #-2]
   16d34:	mov	r3, r4
   16d38:	bcc	16d1c <el_line@plt+0x14868>
   16d3c:	mov	r1, #0
   16d40:	strh	r1, [r3]
   16d44:	add	r1, sp, #16384	; 0x4000
   16d48:	movw	r2, #49148	; 0xbffc
   16d4c:	add	r1, r1, #104	; 0x68
   16d50:	movt	r2, #65535	; 0xffff
   16d54:	ldr	r5, [sp, #24]
   16d58:	ldrh	r2, [r1, r2]
   16d5c:	uxth	r3, r2
   16d60:	b	166b8 <el_line@plt+0x14204>
   16d64:	ldrh	r2, [r5]
   16d68:	add	r1, r3, #2
   16d6c:	cmp	r2, #0
   16d70:	strh	r2, [r3]
   16d74:	beq	16db8 <el_line@plt+0x14904>
   16d78:	ldr	r3, [sp, #24]
   16d7c:	add	r2, r3, #8128	; 0x1fc0
   16d80:	mov	r3, r1
   16d84:	add	r2, r2, #62	; 0x3e
   16d88:	b	16d9c <el_line@plt+0x148e8>
   16d8c:	ldrh	r1, [r5, #2]!
   16d90:	cmp	r1, #0
   16d94:	strh	r1, [r3], #2
   16d98:	beq	16d3c <el_line@plt+0x14888>
   16d9c:	cmp	r3, r2
   16da0:	bcc	16d8c <el_line@plt+0x148d8>
   16da4:	b	16d3c <el_line@plt+0x14888>
   16da8:	ldr	r1, [sp, #32]
   16dac:	ldrh	r3, [r1]
   16db0:	mov	r5, r1
   16db4:	b	166b8 <el_line@plt+0x14204>
   16db8:	mov	r3, r1
   16dbc:	b	16d3c <el_line@plt+0x14888>
   16dc0:	ldr	r3, [sp, #20]
   16dc4:	ldr	r1, [sp, #40]	; 0x28
   16dc8:	ldr	r0, [sp, #36]	; 0x24
   16dcc:	ldr	r5, [r3, #8]
   16dd0:	ldr	r3, [r3, #16]
   16dd4:	add	r5, r1, r5
   16dd8:	add	r5, r3, r5, lsl #2
   16ddc:	bl	19350 <el_line@plt+0x16e9c>
   16de0:	ldr	r3, [pc, #156]	; 16e84 <el_line@plt+0x149d0>
   16de4:	mov	r2, #4
   16de8:	add	r3, pc, r3
   16dec:	mov	r1, r0
   16df0:	mov	r0, r5
   16df4:	bl	1f38 <qsort@plt>
   16df8:	b	16950 <el_line@plt+0x1449c>
   16dfc:	ldr	r0, [pc, #132]	; 16e88 <el_line@plt+0x149d4>
   16e00:	add	r0, pc, r0
   16e04:	bl	2460 <getenv@plt>
   16e08:	cmp	r0, #0
   16e0c:	bne	16cfc <el_line@plt+0x14848>
   16e10:	b	16c28 <el_line@plt+0x14774>
   16e14:	sub	r3, r4, #4
   16e18:	str	r3, [sp, #24]
   16e1c:	mov	r1, r3
   16e20:	b	16bec <el_line@plt+0x14738>
   16e24:	sub	r2, r4, #4
   16e28:	str	r2, [sp, #24]
   16e2c:	mov	r1, r2
   16e30:	b	16bec <el_line@plt+0x14738>
   16e34:	add	r2, sp, #100	; 0x64
   16e38:	ldr	r5, [sp, #32]
   16e3c:	str	r2, [sp, #24]
   16e40:	b	166b8 <el_line@plt+0x14204>
   16e44:	mvn	r4, #0
   16e48:	b	16950 <el_line@plt+0x1449c>
   16e4c:	ldr	r3, [pc, #56]	; 16e8c <el_line@plt+0x149d8>
   16e50:	mov	r1, r5
   16e54:	mov	r2, #8
   16e58:	add	r3, pc, r3
   16e5c:	bl	1f38 <qsort@plt>
   16e60:	mov	r0, r6
   16e64:	bl	1f20 <free@plt>
   16e68:	b	16950 <el_line@plt+0x1449c>
   16e6c:	strdeq	r8, [r1], -r0
   16e70:	andeq	r0, r0, ip, lsr #4
   16e74:	andeq	r8, r1, ip, ror #18
   16e78:	andeq	r8, r1, r0, asr r9
   16e7c:	andeq	r8, r1, ip, lsr r9
   16e80:			; <UNDEFINED> instruction: 0xfffff014
   16e84:			; <UNDEFINED> instruction: 0xffffed3c
   16e88:	andeq	r6, r0, r4, lsr #17
   16e8c:			; <UNDEFINED> instruction: 0xffffecd8
   16e90:	push	{r5, r6}
   16e94:	mov	r3, r2
   16e98:	ldrh	ip, [r0]
   16e9c:	mov	r5, r0
   16ea0:	mov	r6, r1
   16ea4:	cmp	ip, #123	; 0x7b
   16ea8:	beq	16ed8 <el_line@plt+0x14a24>
   16eac:	mov	r0, r5
   16eb0:	b	16ec0 <el_line@plt+0x14a0c>
   16eb4:	cmp	ip, #0
   16eb8:	beq	16ef0 <el_line@plt+0x14a3c>
   16ebc:	ldrh	ip, [r0, #2]!
   16ec0:	cmp	ip, #123	; 0x7b
   16ec4:	bne	16eb4 <el_line@plt+0x14a00>
   16ec8:	mov	r1, r5
   16ecc:	mov	r2, r6
   16ed0:	pop	{r5, r6}
   16ed4:	b	16f04 <el_line@plt+0x14a50>
   16ed8:	ldrh	r2, [r0, #2]
   16edc:	cmp	r2, #125	; 0x7d
   16ee0:	bne	16eac <el_line@plt+0x149f8>
   16ee4:	ldrh	r2, [r0, #4]
   16ee8:	cmp	r2, #0
   16eec:	bne	16eac <el_line@plt+0x149f8>
   16ef0:	mov	r0, r5
   16ef4:	mov	r1, r6
   16ef8:	mov	r2, r3
   16efc:	pop	{r5, r6}
   16f00:	b	16660 <el_line@plt+0x141ac>
   16f04:	ldr	ip, [pc, #744]	; 171f4 <el_line@plt+0x14d40>
   16f08:	cmp	r1, r0
   16f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f10:	add	ip, pc, ip
   16f14:	ldr	r4, [pc, #732]	; 171f8 <el_line@plt+0x14d44>
   16f18:	sub	sp, sp, #8192	; 0x2000
   16f1c:	sub	sp, sp, #20
   16f20:	mov	r7, r3
   16f24:	mov	r3, ip
   16f28:	mov	r8, r2
   16f2c:	ldr	r4, [ip, r4]
   16f30:	add	r2, sp, #8192	; 0x2000
   16f34:	add	r6, sp, #16
   16f38:	ldr	r3, [r4]
   16f3c:	str	r4, [sp, #4]
   16f40:	str	r3, [r2, #12]
   16f44:	beq	171e4 <el_line@plt+0x14d30>
   16f48:	sub	r2, r6, #6
   16f4c:	mov	r3, r1
   16f50:	ldrh	ip, [r3], #2
   16f54:	cmp	r0, r3
   16f58:	strh	ip, [r2, #2]!
   16f5c:	bne	16f50 <el_line@plt+0x14a9c>
   16f60:	add	r1, r1, #2
   16f64:	sub	r6, r6, #4
   16f68:	rsb	r5, r1, r0
   16f6c:	bic	r5, r5, #1
   16f70:	add	r5, r5, #2
   16f74:	add	r5, r6, r5
   16f78:	ldrh	r9, [r0, #2]
   16f7c:	mov	r3, #0
   16f80:	add	fp, r0, #2
   16f84:	strh	r3, [r5]
   16f88:	cmp	r9, r3
   16f8c:	beq	1700c <el_line@plt+0x14b58>
   16f90:	mov	sl, r3
   16f94:	mov	r2, r9
   16f98:	mov	r4, fp
   16f9c:	b	16fbc <el_line@plt+0x14b08>
   16fa0:	cmp	r2, #123	; 0x7b
   16fa4:	beq	17040 <el_line@plt+0x14b8c>
   16fa8:	cmp	r2, #125	; 0x7d
   16fac:	beq	17058 <el_line@plt+0x14ba4>
   16fb0:	ldrh	r2, [r4, #2]!
   16fb4:	cmp	r2, #0
   16fb8:	beq	1700c <el_line@plt+0x14b58>
   16fbc:	cmp	r2, #91	; 0x5b
   16fc0:	bne	16fa0 <el_line@plt+0x14aec>
   16fc4:	ldrh	r2, [r4, #2]
   16fc8:	add	r1, r4, #2
   16fcc:	cmp	r2, #0
   16fd0:	cmpne	r2, #93	; 0x5d
   16fd4:	beq	17074 <el_line@plt+0x14bc0>
   16fd8:	add	r4, r4, #4
   16fdc:	mov	r0, r4
   16fe0:	ldrh	ip, [r4], #2
   16fe4:	cmp	ip, #0
   16fe8:	cmpne	ip, #93	; 0x5d
   16fec:	bne	16fdc <el_line@plt+0x14b28>
   16ff0:	cmp	ip, #0
   16ff4:	moveq	r4, r1
   16ff8:	beq	16fb4 <el_line@plt+0x14b00>
   16ffc:	mov	r4, r0
   17000:	ldrh	r2, [r4, #2]!
   17004:	cmp	r2, #0
   17008:	bne	16fbc <el_line@plt+0x14b08>
   1700c:	mov	r0, r6
   17010:	mov	r1, r8
   17014:	mov	r2, r7
   17018:	bl	16660 <el_line@plt+0x141ac>
   1701c:	ldr	r1, [sp, #4]
   17020:	add	r3, sp, #8192	; 0x2000
   17024:	ldr	r2, [r3, #12]
   17028:	ldr	r3, [r1]
   1702c:	cmp	r2, r3
   17030:	bne	171f0 <el_line@plt+0x14d3c>
   17034:	add	sp, sp, #8192	; 0x2000
   17038:	add	sp, sp, #20
   1703c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17040:	mov	r0, sl
   17044:	mov	r1, #1
   17048:	bl	192bc <el_line@plt+0x16e08>
   1704c:	ldrh	r2, [r4, #2]!
   17050:	mov	sl, r0
   17054:	b	16fb4 <el_line@plt+0x14b00>
   17058:	cmp	sl, #0
   1705c:	beq	17080 <el_line@plt+0x14bcc>
   17060:	mov	r0, sl
   17064:	mvn	r1, #0
   17068:	bl	192bc <el_line@plt+0x16e08>
   1706c:	mov	sl, r0
   17070:	b	16fb0 <el_line@plt+0x14afc>
   17074:	mov	ip, r2
   17078:	mov	r0, r1
   1707c:	b	16ff0 <el_line@plt+0x14b3c>
   17080:	cmp	r4, fp
   17084:	bcc	170f8 <el_line@plt+0x14c44>
   17088:	mov	r2, r9
   1708c:	mov	r9, fp
   17090:	b	170d0 <el_line@plt+0x14c1c>
   17094:	cmp	r2, #123	; 0x7b
   17098:	beq	171b0 <el_line@plt+0x14cfc>
   1709c:	cmp	r2, #125	; 0x7d
   170a0:	bne	170ec <el_line@plt+0x14c38>
   170a4:	cmp	sl, #0
   170a8:	beq	17100 <el_line@plt+0x14c4c>
   170ac:	mov	r0, sl
   170b0:	mvn	r1, #0
   170b4:	bl	192bc <el_line@plt+0x16e08>
   170b8:	mov	sl, r0
   170bc:	add	r0, fp, #2
   170c0:	cmp	r4, r0
   170c4:	bcc	170f8 <el_line@plt+0x14c44>
   170c8:	ldrh	r2, [fp, #2]
   170cc:	mov	fp, r0
   170d0:	cmp	r2, #91	; 0x5b
   170d4:	beq	17170 <el_line@plt+0x14cbc>
   170d8:	bhi	17094 <el_line@plt+0x14be0>
   170dc:	cmp	r2, #44	; 0x2c
   170e0:	bne	170ec <el_line@plt+0x14c38>
   170e4:	cmp	sl, #0
   170e8:	beq	17100 <el_line@plt+0x14c4c>
   170ec:	add	r0, fp, #2
   170f0:	cmp	r4, r0
   170f4:	bcs	170c8 <el_line@plt+0x14c14>
   170f8:	mov	r0, #0
   170fc:	b	1701c <el_line@plt+0x14b68>
   17100:	cmp	fp, r9
   17104:	bls	171c4 <el_line@plt+0x14d10>
   17108:	mov	r2, r9
   1710c:	mov	r1, r5
   17110:	ldrh	r0, [r2], #2
   17114:	cmp	r2, fp
   17118:	strh	r0, [r1], #2
   1711c:	bcc	17110 <el_line@plt+0x14c5c>
   17120:	mvn	r0, r9
   17124:	add	r0, r0, fp
   17128:	bic	r0, r0, #1
   1712c:	add	r0, r0, #2
   17130:	add	r0, r5, r0
   17134:	mov	r1, r4
   17138:	ldrh	r2, [r1, #2]!
   1713c:	cmp	r2, #0
   17140:	strh	r2, [r0], #2
   17144:	bne	17138 <el_line@plt+0x14c84>
   17148:	mov	r0, r6
   1714c:	mov	r1, r8
   17150:	mov	r2, r7
   17154:	bl	16e90 <el_line@plt+0x149dc>
   17158:	cmp	r0, #0
   1715c:	cmnne	r0, #3
   17160:	bne	1701c <el_line@plt+0x14b68>
   17164:	add	r9, fp, #2
   17168:	mov	r0, r9
   1716c:	b	170c0 <el_line@plt+0x14c0c>
   17170:	ldrh	r2, [fp, #2]
   17174:	add	r0, fp, #2
   17178:	cmp	r2, #93	; 0x5d
   1717c:	cmpne	r2, #0
   17180:	beq	171cc <el_line@plt+0x14d18>
   17184:	add	r1, fp, #4
   17188:	mov	ip, r1
   1718c:	ldrh	r2, [r1], #2
   17190:	cmp	r2, #0
   17194:	cmpne	r2, #93	; 0x5d
   17198:	bne	17188 <el_line@plt+0x14cd4>
   1719c:	cmp	r2, #0
   171a0:	mov	r9, fp
   171a4:	addne	r0, ip, #2
   171a8:	movne	fp, ip
   171ac:	b	170c0 <el_line@plt+0x14c0c>
   171b0:	mov	r0, sl
   171b4:	mov	r1, #1
   171b8:	bl	192bc <el_line@plt+0x16e08>
   171bc:	mov	sl, r0
   171c0:	b	170ec <el_line@plt+0x14c38>
   171c4:	mov	r0, r5
   171c8:	b	17134 <el_line@plt+0x14c80>
   171cc:	cmp	r2, #0
   171d0:	mov	ip, r0
   171d4:	mov	r9, fp
   171d8:	addne	r0, ip, #2
   171dc:	movne	fp, ip
   171e0:	b	170c0 <el_line@plt+0x14c0c>
   171e4:	add	r6, sp, #12
   171e8:	mov	r5, r6
   171ec:	b	16f78 <el_line@plt+0x14ac4>
   171f0:	bl	21e4 <__stack_chk_fail@plt>
   171f4:	andeq	r7, r1, r4, asr lr
   171f8:	andeq	r0, r0, ip, lsr #4
   171fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17200:	sub	sp, sp, #8192	; 0x2000
   17204:	ldr	r5, [pc, #500]	; 17400 <el_line@plt+0x14f4c>
   17208:	sub	sp, sp, #16
   1720c:	ldr	lr, [pc, #496]	; 17404 <el_line@plt+0x14f50>
   17210:	mov	r4, r2
   17214:	add	r5, pc, r5
   17218:	movw	ip, #57328	; 0xdff0
   1721c:	movt	ip, #65535	; 0xffff
   17220:	mov	sl, r3
   17224:	ldr	r8, [r5, lr]
   17228:	mov	r2, r5
   1722c:	add	r2, sp, #8192	; 0x2000
   17230:	mov	r3, #0
   17234:	add	r2, r2, #16
   17238:	str	r3, [sp, #4]
   1723c:	str	r3, [sp, #8]
   17240:	mov	r7, r1
   17244:	str	r3, [r2, ip]
   17248:	add	r3, sp, #8192	; 0x2000
   1724c:	ldr	r2, [r8]
   17250:	mov	r1, #4096	; 0x1000
   17254:	mov	r5, r0
   17258:	str	r2, [r3, #12]
   1725c:	bl	1ef0 <strnlen@plt>
   17260:	cmp	r0, #4096	; 0x1000
   17264:	beq	173f4 <el_line@plt+0x14f40>
   17268:	ands	r3, r7, #1
   1726c:	beq	1733c <el_line@plt+0x14e88>
   17270:	ldr	r1, [sl, #8]
   17274:	bic	r2, r7, #256	; 0x100
   17278:	mov	r3, #0
   1727c:	str	r4, [sl, #24]
   17280:	cmp	r1, #0
   17284:	str	r2, [sl, #12]
   17288:	str	r3, [sl, #4]
   1728c:	blt	173e4 <el_line@plt+0x14f30>
   17290:	ldr	r4, [sl]
   17294:	cmp	r4, r3
   17298:	blt	173e4 <el_line@plt+0x14f30>
   1729c:	cmn	r1, #-2147483647	; 0x80000001
   172a0:	beq	173e4 <el_line@plt+0x14f30>
   172a4:	cmn	r4, #-2147483647	; 0x80000001
   172a8:	beq	173e4 <el_line@plt+0x14f30>
   172ac:	mvn	r0, #-2147483647	; 0x80000001
   172b0:	bl	19350 <el_line@plt+0x16e9c>
   172b4:	cmp	r4, r0
   172b8:	bge	173e4 <el_line@plt+0x14f30>
   172bc:	tst	r7, #4096	; 0x1000
   172c0:	ldrb	r4, [r5]
   172c4:	beq	1736c <el_line@plt+0x14eb8>
   172c8:	cmp	r4, #0
   172cc:	add	r0, sp, #12
   172d0:	beq	173ec <el_line@plt+0x14f38>
   172d4:	add	r3, sp, #8192	; 0x2000
   172d8:	add	ip, sp, #14
   172dc:	add	r3, r3, #10
   172e0:	cmp	ip, r3
   172e4:	strh	r4, [ip, #-2]
   172e8:	mov	lr, ip
   172ec:	bcs	17300 <el_line@plt+0x14e4c>
   172f0:	ldrb	r4, [r5, #1]!
   172f4:	add	ip, ip, #2
   172f8:	cmp	r4, #0
   172fc:	bne	172e0 <el_line@plt+0x14e2c>
   17300:	tst	r7, #128	; 0x80
   17304:	mov	r3, #0
   17308:	mov	r1, sl
   1730c:	mov	r2, sp
   17310:	strh	r3, [lr]
   17314:	bne	173dc <el_line@plt+0x14f28>
   17318:	bl	16660 <el_line@plt+0x141ac>
   1731c:	add	r3, sp, #8192	; 0x2000
   17320:	ldr	r2, [r3, #12]
   17324:	ldr	r3, [r8]
   17328:	cmp	r2, r3
   1732c:	bne	173fc <el_line@plt+0x14f48>
   17330:	add	sp, sp, #8192	; 0x2000
   17334:	add	sp, sp, #16
   17338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1733c:	ands	r1, r7, #2
   17340:	str	r3, [sl]
   17344:	str	r3, [sl, #16]
   17348:	str	r3, [sl, #20]
   1734c:	bne	17270 <el_line@plt+0x14dbc>
   17350:	bic	r3, r7, #256	; 0x100
   17354:	str	r4, [sl, #24]
   17358:	str	r1, [sl, #8]
   1735c:	mov	r4, r1
   17360:	str	r1, [sl, #4]
   17364:	str	r3, [sl, #12]
   17368:	b	172ac <el_line@plt+0x14df8>
   1736c:	cmp	r4, #0
   17370:	add	r0, sp, #12
   17374:	addne	r3, r0, #8128	; 0x1fc0
   17378:	add	r6, r5, #1
   1737c:	addne	r3, r3, #62	; 0x3e
   17380:	movne	lr, r0
   17384:	bne	173a4 <el_line@plt+0x14ef0>
   17388:	b	173ec <el_line@plt+0x14f38>
   1738c:	cmp	lr, r3
   17390:	bcs	17300 <el_line@plt+0x14e4c>
   17394:	ldrb	r4, [r5]
   17398:	add	r6, r6, #1
   1739c:	cmp	r4, #0
   173a0:	beq	17300 <el_line@plt+0x14e4c>
   173a4:	cmp	r4, #92	; 0x5c
   173a8:	strhne	r4, [lr]
   173ac:	addne	lr, lr, #2
   173b0:	movne	r5, r6
   173b4:	bne	1738c <el_line@plt+0x14ed8>
   173b8:	ldrb	r2, [r5, #1]
   173bc:	add	lr, lr, #2
   173c0:	cmp	r2, #0
   173c4:	addne	r6, r5, #2
   173c8:	orrne	r2, r2, #16384	; 0x4000
   173cc:	movweq	r2, #16476	; 0x405c
   173d0:	strh	r2, [lr, #-2]
   173d4:	mov	r5, r6
   173d8:	b	1738c <el_line@plt+0x14ed8>
   173dc:	bl	16e90 <el_line@plt+0x149dc>
   173e0:	b	1731c <el_line@plt+0x14e68>
   173e4:	mvn	r0, #0
   173e8:	b	1731c <el_line@plt+0x14e68>
   173ec:	mov	lr, r0
   173f0:	b	17300 <el_line@plt+0x14e4c>
   173f4:	mvn	r0, #2
   173f8:	b	1731c <el_line@plt+0x14e68>
   173fc:	bl	21e4 <__stack_chk_fail@plt>
   17400:	andeq	r7, r1, r0, asr fp
   17404:	andeq	r0, r0, ip, lsr #4
   17408:	push	{r3, r4, r5, r6, r7, lr}
   1740c:	mov	r5, r0
   17410:	ldr	r0, [r0, #16]
   17414:	cmp	r0, #0
   17418:	beq	1745c <el_line@plt+0x14fa8>
   1741c:	ldr	r4, [r5]
   17420:	ldr	r6, [r5, #8]
   17424:	cmp	r4, #0
   17428:	add	r6, r0, r6, lsl #2
   1742c:	beq	17450 <el_line@plt+0x14f9c>
   17430:	sub	r6, r6, #4
   17434:	ldr	r0, [r6, #4]!
   17438:	cmp	r0, #0
   1743c:	beq	17444 <el_line@plt+0x14f90>
   17440:	bl	1f20 <free@plt>
   17444:	subs	r4, r4, #1
   17448:	bne	17434 <el_line@plt+0x14f80>
   1744c:	ldr	r0, [r5, #16]
   17450:	bl	1f20 <free@plt>
   17454:	mov	r3, #0
   17458:	str	r3, [r5, #16]
   1745c:	ldr	r6, [r5, #20]
   17460:	cmp	r6, #0
   17464:	popeq	{r3, r4, r5, r6, r7, pc}
   17468:	ldr	r7, [r5]
   1746c:	cmp	r7, #0
   17470:	ble	174a8 <el_line@plt+0x14ff4>
   17474:	mov	r4, #0
   17478:	ldr	r0, [r6, r4, lsl #2]
   1747c:	cmp	r0, #0
   17480:	beq	17490 <el_line@plt+0x14fdc>
   17484:	bl	1f20 <free@plt>
   17488:	ldr	r6, [r5, #20]
   1748c:	ldr	r7, [r5]
   17490:	mov	r0, r4
   17494:	mov	r1, #1
   17498:	bl	192bc <el_line@plt+0x16e08>
   1749c:	cmp	r7, r0
   174a0:	mov	r4, r0
   174a4:	bgt	17478 <el_line@plt+0x14fc4>
   174a8:	mov	r0, r6
   174ac:	bl	1f20 <free@plt>
   174b0:	mov	r3, #0
   174b4:	str	r3, [r5, #20]
   174b8:	pop	{r3, r4, r5, r6, r7, pc}
   174bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   174c0:	and	r6, r0, #63	; 0x3f
   174c4:	ldr	r5, [pc, #208]	; 1759c <el_line@plt+0x150e8>
   174c8:	sub	sp, sp, #12
   174cc:	mov	r4, r0
   174d0:	mov	r9, r1
   174d4:	add	r5, pc, r5
   174d8:	add	r5, r5, #16
   174dc:	add	r7, r5, r6, lsl #3
   174e0:	ldr	r3, [r5, r6, lsl #3]
   174e4:	cmp	r3, r0
   174e8:	beq	17544 <el_line@plt+0x15090>
   174ec:	ldr	r3, [pc, #172]	; 175a0 <el_line@plt+0x150ec>
   174f0:	mov	r0, r4
   174f4:	add	r3, pc, r3
   174f8:	ldr	r2, [r3, #528]	; 0x210
   174fc:	cmp	r2, #0
   17500:	moveq	r2, #1
   17504:	streq	r2, [r3, #528]	; 0x210
   17508:	bl	2004 <getpwuid@plt>
   1750c:	subs	r8, r0, #0
   17510:	beq	17558 <el_line@plt+0x150a4>
   17514:	str	r4, [r5, r6, lsl #3]
   17518:	ldr	r0, [r7, #4]
   1751c:	cmp	r0, #0
   17520:	beq	17528 <el_line@plt+0x15074>
   17524:	bl	1f20 <free@plt>
   17528:	cmp	r8, #0
   1752c:	beq	17590 <el_line@plt+0x150dc>
   17530:	ldr	r0, [r8]
   17534:	bl	20d0 <__strdup@plt>
   17538:	str	r0, [r7, #4]
   1753c:	add	sp, sp, #12
   17540:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17544:	ldr	r0, [r7, #4]
   17548:	cmp	r0, #0
   1754c:	beq	174ec <el_line@plt+0x15038>
   17550:	add	sp, sp, #12
   17554:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17558:	cmp	r9, #0
   1755c:	movne	r0, r8
   17560:	bne	1753c <el_line@plt+0x15088>
   17564:	ldr	ip, [pc, #56]	; 175a4 <el_line@plt+0x150f0>
   17568:	mov	r1, #15
   1756c:	ldr	r0, [pc, #52]	; 175a8 <el_line@plt+0x150f4>
   17570:	mov	r3, r1
   17574:	add	ip, pc, ip
   17578:	str	r4, [sp, #4]
   1757c:	mov	r2, #1
   17580:	str	ip, [sp]
   17584:	add	r0, pc, r0
   17588:	bl	231c <__snprintf_chk@plt>
   1758c:	b	17514 <el_line@plt+0x15060>
   17590:	ldr	r0, [pc, #20]	; 175ac <el_line@plt+0x150f8>
   17594:	add	r0, pc, r0
   17598:	b	17534 <el_line@plt+0x15080>
   1759c:	andeq	sl, r1, ip, asr #31
   175a0:	andeq	sl, r1, ip, lsr #31
   175a4:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   175a8:	andeq	sl, r1, ip, lsl pc
   175ac:	andeq	sl, r1, ip, lsl #30
   175b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   175b4:	and	r6, r0, #63	; 0x3f
   175b8:	ldr	r5, [pc, #216]	; 17698 <el_line@plt+0x151e4>
   175bc:	sub	sp, sp, #12
   175c0:	mov	r4, r0
   175c4:	mov	r9, r1
   175c8:	add	r5, pc, r5
   175cc:	add	r5, r5, #548	; 0x224
   175d0:	add	r7, r5, r6, lsl #3
   175d4:	ldr	r3, [r5, r6, lsl #3]
   175d8:	cmp	r3, r0
   175dc:	beq	17638 <el_line@plt+0x15184>
   175e0:	ldr	r3, [pc, #180]	; 1769c <el_line@plt+0x151e8>
   175e4:	mov	r0, r4
   175e8:	add	r3, pc, r3
   175ec:	ldr	r2, [r3, #1060]	; 0x424
   175f0:	cmp	r2, #0
   175f4:	moveq	r2, #1
   175f8:	streq	r2, [r3, #1060]	; 0x424
   175fc:	bl	1fe0 <getgrgid@plt>
   17600:	subs	r8, r0, #0
   17604:	beq	1764c <el_line@plt+0x15198>
   17608:	str	r4, [r5, r6, lsl #3]
   1760c:	ldr	r0, [r7, #4]
   17610:	cmp	r0, #0
   17614:	beq	1761c <el_line@plt+0x15168>
   17618:	bl	1f20 <free@plt>
   1761c:	cmp	r8, #0
   17620:	beq	17688 <el_line@plt+0x151d4>
   17624:	ldr	r0, [r8]
   17628:	bl	20d0 <__strdup@plt>
   1762c:	str	r0, [r7, #4]
   17630:	add	sp, sp, #12
   17634:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17638:	ldr	r0, [r7, #4]
   1763c:	cmp	r0, #0
   17640:	beq	175e0 <el_line@plt+0x1512c>
   17644:	add	sp, sp, #12
   17648:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1764c:	cmp	r9, #0
   17650:	movne	r0, r8
   17654:	bne	17630 <el_line@plt+0x1517c>
   17658:	ldr	r0, [pc, #64]	; 176a0 <el_line@plt+0x151ec>
   1765c:	mov	r1, #15
   17660:	ldr	ip, [pc, #60]	; 176a4 <el_line@plt+0x151f0>
   17664:	mov	r3, r1
   17668:	add	r0, pc, r0
   1766c:	str	r4, [sp, #4]
   17670:	add	ip, pc, ip
   17674:	mov	r2, #1
   17678:	str	ip, [sp]
   1767c:	add	r0, r0, #532	; 0x214
   17680:	bl	231c <__snprintf_chk@plt>
   17684:	b	17608 <el_line@plt+0x15154>
   17688:	ldr	r0, [pc, #24]	; 176a8 <el_line@plt+0x151f4>
   1768c:	add	r0, pc, r0
   17690:	add	r0, r0, #532	; 0x214
   17694:	b	17628 <el_line@plt+0x15174>
   17698:	ldrdeq	sl, [r1], -r8
   1769c:			; <UNDEFINED> instruction: 0x0001aeb8
   176a0:	andeq	sl, r1, r8, lsr lr
   176a4:	strdeq	r4, [r0], -r8
   176a8:	andeq	sl, r1, r4, lsl lr
   176ac:	cmp	r2, #65536	; 0x10000
   176b0:	cmpcc	r1, #65536	; 0x10000
   176b4:	push	{r4, r5, r6, lr}
   176b8:	mov	r5, r2
   176bc:	mov	r4, r1
   176c0:	mov	r6, r0
   176c4:	bcc	176e0 <el_line@plt+0x1522c>
   176c8:	cmp	r1, #0
   176cc:	beq	176e0 <el_line@plt+0x1522c>
   176d0:	mvn	r0, #0
   176d4:	bl	187d4 <el_line@plt+0x16320>
   176d8:	cmp	r5, r0
   176dc:	bhi	176f0 <el_line@plt+0x1523c>
   176e0:	mov	r0, r6
   176e4:	mul	r1, r5, r4
   176e8:	pop	{r4, r5, r6, lr}
   176ec:	b	2178 <realloc@plt>
   176f0:	bl	23ac <__errno_location@plt>
   176f4:	mov	r3, #12
   176f8:	str	r3, [r0]
   176fc:	mov	r0, #0
   17700:	pop	{r4, r5, r6, pc}
   17704:	cmp	r2, #0
   17708:	push	{r3, r4, r5, r6, r7, lr}
   1770c:	mov	r5, r2
   17710:	mov	r7, r1
   17714:	sub	r6, r2, #1
   17718:	beq	177b8 <el_line@plt+0x15304>
   1771c:	ldrb	r3, [r0]
   17720:	cmp	r3, #0
   17724:	beq	177cc <el_line@plt+0x15318>
   17728:	add	ip, r0, #1
   1772c:	mov	r3, #0
   17730:	b	17740 <el_line@plt+0x1528c>
   17734:	ldrb	r2, [r4]
   17738:	cmp	r2, #0
   1773c:	beq	17754 <el_line@plt+0x152a0>
   17740:	cmp	r6, r3
   17744:	mov	r4, ip
   17748:	add	r3, r3, #1
   1774c:	add	ip, ip, #1
   17750:	bne	17734 <el_line@plt+0x15280>
   17754:	mov	r1, r0
   17758:	mov	r0, r4
   1775c:	bl	19350 <el_line@plt+0x16e9c>
   17760:	subs	r5, r5, r0
   17764:	mov	r6, r0
   17768:	beq	177bc <el_line@plt+0x15308>
   1776c:	ldrb	r2, [r7]
   17770:	cmp	r2, #0
   17774:	moveq	r0, r2
   17778:	beq	177a8 <el_line@plt+0x152f4>
   1777c:	add	r3, r7, #1
   17780:	cmp	r5, #1
   17784:	mov	r0, r3
   17788:	strbne	r2, [r4]
   1778c:	subne	r5, r5, #1
   17790:	ldrb	r2, [r3], #1
   17794:	addne	r4, r4, #1
   17798:	cmp	r2, #0
   1779c:	bne	17780 <el_line@plt+0x152cc>
   177a0:	mov	r1, r7
   177a4:	bl	19350 <el_line@plt+0x16e9c>
   177a8:	mov	r3, #0
   177ac:	add	r0, r0, r6
   177b0:	strb	r3, [r4]
   177b4:	pop	{r3, r4, r5, r6, r7, pc}
   177b8:	mov	r6, r2
   177bc:	mov	r0, r7
   177c0:	bl	2310 <strlen@plt>
   177c4:	add	r0, r0, r6
   177c8:	pop	{r3, r4, r5, r6, r7, pc}
   177cc:	mov	r4, r0
   177d0:	mov	r6, r3
   177d4:	b	1776c <el_line@plt+0x152b8>
   177d8:	cmp	r2, #0
   177dc:	push	{r3, lr}
   177e0:	beq	17834 <el_line@plt+0x15380>
   177e4:	sub	ip, r2, #1
   177e8:	mov	r3, r1
   177ec:	add	ip, r0, ip
   177f0:	b	17804 <el_line@plt+0x15350>
   177f4:	ldrb	r2, [r3], #1
   177f8:	cmp	r2, #0
   177fc:	strb	r2, [r0], #1
   17800:	beq	17820 <el_line@plt+0x1536c>
   17804:	cmp	r0, ip
   17808:	bne	177f4 <el_line@plt+0x15340>
   1780c:	mov	r2, #0
   17810:	strb	r2, [r0]
   17814:	ldrb	r2, [r3], #1
   17818:	cmp	r2, #0
   1781c:	bne	17838 <el_line@plt+0x15384>
   17820:	mov	r0, r3
   17824:	bl	19350 <el_line@plt+0x16e9c>
   17828:	mvn	r1, #0
   1782c:	bl	192bc <el_line@plt+0x16e08>
   17830:	pop	{r3, pc}
   17834:	mov	r3, r1
   17838:	ldrb	r2, [r3], #1
   1783c:	cmp	r2, #0
   17840:	bne	17838 <el_line@plt+0x15384>
   17844:	b	17820 <el_line@plt+0x1536c>
   17848:	and	r3, r0, #61440	; 0xf000
   1784c:	cmp	r3, #24576	; 0x6000
   17850:	beq	17abc <el_line@plt+0x15608>
   17854:	ble	179a8 <el_line@plt+0x154f4>
   17858:	cmp	r3, #40960	; 0xa000
   1785c:	beq	17a9c <el_line@plt+0x155e8>
   17860:	cmp	r3, #49152	; 0xc000
   17864:	beq	179e0 <el_line@plt+0x1552c>
   17868:	cmp	r3, #32768	; 0x8000
   1786c:	beq	17a8c <el_line@plt+0x155d8>
   17870:	add	r3, r1, #1
   17874:	mov	r2, #63	; 0x3f
   17878:	strb	r2, [r1]
   1787c:	tst	r0, #256	; 0x100
   17880:	addne	r2, r3, #1
   17884:	addeq	r2, r3, #1
   17888:	movne	r1, #114	; 0x72
   1788c:	moveq	r1, #45	; 0x2d
   17890:	tst	r0, #128	; 0x80
   17894:	strb	r1, [r3]
   17898:	addne	r3, r2, #1
   1789c:	addeq	r3, r2, #1
   178a0:	movne	r1, #119	; 0x77
   178a4:	moveq	r1, #45	; 0x2d
   178a8:	strb	r1, [r2]
   178ac:	and	r2, r0, #2112	; 0x840
   178b0:	cmp	r2, #64	; 0x40
   178b4:	beq	17a6c <el_line@plt+0x155b8>
   178b8:	ble	17a18 <el_line@plt+0x15564>
   178bc:	cmp	r2, #2048	; 0x800
   178c0:	beq	17a5c <el_line@plt+0x155a8>
   178c4:	cmp	r2, #2112	; 0x840
   178c8:	moveq	r2, #115	; 0x73
   178cc:	strbeq	r2, [r3]
   178d0:	addeq	r3, r3, #1
   178d4:	tst	r0, #32
   178d8:	addne	r2, r3, #1
   178dc:	addeq	r2, r3, #1
   178e0:	movne	r1, #114	; 0x72
   178e4:	moveq	r1, #45	; 0x2d
   178e8:	tst	r0, #16
   178ec:	strb	r1, [r3]
   178f0:	addne	r3, r2, #1
   178f4:	addeq	r3, r2, #1
   178f8:	movne	r1, #119	; 0x77
   178fc:	moveq	r1, #45	; 0x2d
   17900:	strb	r1, [r2]
   17904:	movw	r2, #1032	; 0x408
   17908:	and	r2, r0, r2
   1790c:	movw	r1, #1032	; 0x408
   17910:	cmp	r2, #8
   17914:	beq	17a4c <el_line@plt+0x15598>
   17918:	ble	17a04 <el_line@plt+0x15550>
   1791c:	cmp	r2, #1024	; 0x400
   17920:	beq	17a3c <el_line@plt+0x15588>
   17924:	cmp	r2, r1
   17928:	moveq	r2, #115	; 0x73
   1792c:	strbeq	r2, [r3]
   17930:	addeq	r3, r3, #1
   17934:	tst	r0, #4
   17938:	addne	r2, r3, #1
   1793c:	addeq	r2, r3, #1
   17940:	movne	r1, #114	; 0x72
   17944:	moveq	r1, #45	; 0x2d
   17948:	tst	r0, #2
   1794c:	strb	r1, [r3]
   17950:	addne	r3, r2, #1
   17954:	addeq	r3, r2, #1
   17958:	movne	r1, #119	; 0x77
   1795c:	moveq	r1, #45	; 0x2d
   17960:	strb	r1, [r2]
   17964:	movw	r2, #513	; 0x201
   17968:	and	r2, r0, r2
   1796c:	movw	r1, #513	; 0x201
   17970:	cmp	r2, #1
   17974:	beq	17a2c <el_line@plt+0x15578>
   17978:	ble	179f0 <el_line@plt+0x1553c>
   1797c:	cmp	r2, #512	; 0x200
   17980:	beq	17a7c <el_line@plt+0x155c8>
   17984:	cmp	r2, r1
   17988:	moveq	r2, #116	; 0x74
   1798c:	strbeq	r2, [r3]
   17990:	addeq	r3, r3, #1
   17994:	mov	r1, #32
   17998:	mov	r2, #0
   1799c:	strb	r1, [r3]
   179a0:	strb	r2, [r3, #1]
   179a4:	bx	lr
   179a8:	cmp	r3, #8192	; 0x2000
   179ac:	beq	17aac <el_line@plt+0x155f8>
   179b0:	cmp	r3, #16384	; 0x4000
   179b4:	beq	179d0 <el_line@plt+0x1551c>
   179b8:	cmp	r3, #4096	; 0x1000
   179bc:	bne	17870 <el_line@plt+0x153bc>
   179c0:	mov	r2, #112	; 0x70
   179c4:	add	r3, r1, #1
   179c8:	strb	r2, [r1]
   179cc:	b	1787c <el_line@plt+0x153c8>
   179d0:	mov	r2, #100	; 0x64
   179d4:	add	r3, r1, #1
   179d8:	strb	r2, [r1]
   179dc:	b	1787c <el_line@plt+0x153c8>
   179e0:	mov	r2, #115	; 0x73
   179e4:	add	r3, r1, #1
   179e8:	strb	r2, [r1]
   179ec:	b	1787c <el_line@plt+0x153c8>
   179f0:	cmp	r2, #0
   179f4:	moveq	r2, #45	; 0x2d
   179f8:	strbeq	r2, [r3]
   179fc:	addeq	r3, r3, #1
   17a00:	b	17994 <el_line@plt+0x154e0>
   17a04:	cmp	r2, #0
   17a08:	moveq	r2, #45	; 0x2d
   17a0c:	strbeq	r2, [r3]
   17a10:	addeq	r3, r3, #1
   17a14:	b	17934 <el_line@plt+0x15480>
   17a18:	cmp	r2, #0
   17a1c:	moveq	r2, #45	; 0x2d
   17a20:	strbeq	r2, [r3]
   17a24:	addeq	r3, r3, #1
   17a28:	b	178d4 <el_line@plt+0x15420>
   17a2c:	mov	r2, #120	; 0x78
   17a30:	add	r3, r3, #1
   17a34:	strb	r2, [r3, #-1]
   17a38:	b	17994 <el_line@plt+0x154e0>
   17a3c:	mov	r2, #83	; 0x53
   17a40:	add	r3, r3, #1
   17a44:	strb	r2, [r3, #-1]
   17a48:	b	17934 <el_line@plt+0x15480>
   17a4c:	mov	r2, #120	; 0x78
   17a50:	add	r3, r3, #1
   17a54:	strb	r2, [r3, #-1]
   17a58:	b	17934 <el_line@plt+0x15480>
   17a5c:	mov	r2, #83	; 0x53
   17a60:	add	r3, r3, #1
   17a64:	strb	r2, [r3, #-1]
   17a68:	b	178d4 <el_line@plt+0x15420>
   17a6c:	mov	r2, #120	; 0x78
   17a70:	add	r3, r3, #1
   17a74:	strb	r2, [r3, #-1]
   17a78:	b	178d4 <el_line@plt+0x15420>
   17a7c:	mov	r2, #84	; 0x54
   17a80:	add	r3, r3, #1
   17a84:	strb	r2, [r3, #-1]
   17a88:	b	17994 <el_line@plt+0x154e0>
   17a8c:	mov	r2, #45	; 0x2d
   17a90:	add	r3, r1, #1
   17a94:	strb	r2, [r1]
   17a98:	b	1787c <el_line@plt+0x153c8>
   17a9c:	mov	r2, #108	; 0x6c
   17aa0:	add	r3, r1, #1
   17aa4:	strb	r2, [r1]
   17aa8:	b	1787c <el_line@plt+0x153c8>
   17aac:	mov	r2, #99	; 0x63
   17ab0:	add	r3, r1, #1
   17ab4:	strb	r2, [r1]
   17ab8:	b	1787c <el_line@plt+0x153c8>
   17abc:	mov	r2, #98	; 0x62
   17ac0:	add	r3, r1, #1
   17ac4:	strb	r2, [r1]
   17ac8:	b	1787c <el_line@plt+0x153c8>
   17acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad0:	mov	r6, r2
   17ad4:	ldr	r4, [pc, #360]	; 17c44 <el_line@plt+0x15790>
   17ad8:	mov	r7, r3
   17adc:	mov	fp, r0
   17ae0:	ldr	ip, [pc, #352]	; 17c48 <el_line@plt+0x15794>
   17ae4:	add	r4, pc, r4
   17ae8:	ldr	r5, [pc, #348]	; 17c4c <el_line@plt+0x15798>
   17aec:	sub	sp, sp, #44	; 0x2c
   17af0:	add	ip, pc, ip
   17af4:	ldm	r4!, {r0, r1, r2, r3}
   17af8:	add	lr, sp, #4
   17afc:	ldr	sl, [ip, r5]
   17b00:	ldr	r5, [sp, #88]	; 0x58
   17b04:	stmia	lr!, {r0, r1, r2, r3}
   17b08:	ldm	r4, {r0, r1, r2, r3}
   17b0c:	ldr	r4, [sl]
   17b10:	stm	lr, {r0, r1, r2, r3}
   17b14:	str	r4, [sp, #36]	; 0x24
   17b18:	bl	23ac <__errno_location@plt>
   17b1c:	ldrd	r2, [sp, #80]	; 0x50
   17b20:	cmp	r2, r6
   17b24:	sbcs	r3, r3, r7
   17b28:	mov	r3, #0
   17b2c:	ldr	r9, [r0]
   17b30:	mov	r8, r0
   17b34:	str	r3, [r0]
   17b38:	str	r9, [sp, #8]
   17b3c:	bge	17b8c <el_line@plt+0x156d8>
   17b40:	ldr	r9, [sp, #16]
   17b44:	mov	r3, #1
   17b48:	mov	r0, #0
   17b4c:	mov	r1, #0
   17b50:	cmp	r5, #0
   17b54:	addne	ip, sp, #40	; 0x28
   17b58:	addne	r2, ip, r3, lsl #3
   17b5c:	ldrne	r2, [r2, #-36]	; 0xffffffdc
   17b60:	strne	r2, [r5]
   17b64:	cmp	r3, #0
   17b68:	ldr	r2, [sp, #36]	; 0x24
   17b6c:	str	r9, [r8]
   17b70:	movne	r0, #0
   17b74:	ldr	r3, [sl]
   17b78:	movne	r1, #0
   17b7c:	cmp	r2, r3
   17b80:	bne	17c40 <el_line@plt+0x1578c>
   17b84:	add	sp, sp, #44	; 0x2c
   17b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b8c:	mov	r0, fp
   17b90:	mov	r1, sp
   17b94:	mov	r2, #10
   17b98:	bl	1fec <strtoll@plt>
   17b9c:	ldr	r3, [sp]
   17ba0:	cmp	fp, r3
   17ba4:	beq	17c00 <el_line@plt+0x1574c>
   17ba8:	ldrb	r3, [r3]
   17bac:	cmp	r3, #0
   17bb0:	bne	17c00 <el_line@plt+0x1574c>
   17bb4:	cmp	r1, #-2147483648	; 0x80000000
   17bb8:	cmpeq	r0, #0
   17bbc:	beq	17c0c <el_line@plt+0x15758>
   17bc0:	cmp	r0, r6
   17bc4:	sbcs	ip, r1, r7
   17bc8:	blt	17c24 <el_line@plt+0x15770>
   17bcc:	mvn	r2, #0
   17bd0:	mvn	r3, #-2147483648	; 0x80000000
   17bd4:	cmp	r1, r3
   17bd8:	cmpeq	r0, r2
   17bdc:	beq	17c30 <el_line@plt+0x1577c>
   17be0:	ldrd	r2, [sp, #80]	; 0x50
   17be4:	cmp	r2, r0
   17be8:	sbcs	r3, r3, r1
   17bec:	movge	r3, #0
   17bf0:	bge	17b50 <el_line@plt+0x1569c>
   17bf4:	ldr	r9, [sp, #32]
   17bf8:	mov	r3, #3
   17bfc:	b	17b50 <el_line@plt+0x1569c>
   17c00:	ldr	r9, [sp, #16]
   17c04:	mov	r3, #1
   17c08:	b	17b50 <el_line@plt+0x1569c>
   17c0c:	ldr	r2, [r8]
   17c10:	cmp	r2, #34	; 0x22
   17c14:	beq	17c24 <el_line@plt+0x15770>
   17c18:	cmp	r7, #-2147483648	; 0x80000000
   17c1c:	cmpeq	r6, #0
   17c20:	beq	17b50 <el_line@plt+0x1569c>
   17c24:	ldr	r9, [sp, #24]
   17c28:	mov	r3, #2
   17c2c:	b	17b50 <el_line@plt+0x1569c>
   17c30:	ldr	r3, [r8]
   17c34:	cmp	r3, #34	; 0x22
   17c38:	bne	17be0 <el_line@plt+0x1572c>
   17c3c:	b	17bf4 <el_line@plt+0x15740>
   17c40:	bl	21e4 <__stack_chk_fail@plt>
   17c44:	andeq	r7, r1, r8, asr #11
   17c48:	andeq	r7, r1, r4, ror r2
   17c4c:	andeq	r0, r0, ip, lsr #4
   17c50:	cmp	r1, #92	; 0x5c
   17c54:	push	{r4, r5, lr}
   17c58:	mov	r4, r1
   17c5c:	sub	sp, sp, #12
   17c60:	mov	r5, r0
   17c64:	beq	17de8 <el_line@plt+0x15934>
   17c68:	tst	r2, #1024	; 0x400
   17c6c:	bne	17cec <el_line@plt+0x15838>
   17c70:	cmp	r1, #255	; 0xff
   17c74:	bls	17de0 <el_line@plt+0x1592c>
   17c78:	tst	r2, #4
   17c7c:	bne	17c88 <el_line@plt+0x157d4>
   17c80:	cmp	r4, #32
   17c84:	beq	17e4c <el_line@plt+0x15998>
   17c88:	tst	r2, #8
   17c8c:	bne	17c98 <el_line@plt+0x157e4>
   17c90:	cmp	r4, #9
   17c94:	beq	17e4c <el_line@plt+0x15998>
   17c98:	tst	r2, #16
   17c9c:	bne	17ca8 <el_line@plt+0x157f4>
   17ca0:	cmp	r4, #10
   17ca4:	beq	17e4c <el_line@plt+0x15998>
   17ca8:	tst	r2, #32
   17cac:	beq	17cec <el_line@plt+0x15838>
   17cb0:	sub	r1, r4, #7
   17cb4:	cmp	r4, #13
   17cb8:	cmpne	r1, #1
   17cbc:	bls	17e30 <el_line@plt+0x1597c>
   17cc0:	str	r2, [sp, #4]
   17cc4:	str	r3, [sp]
   17cc8:	bl	2274 <__ctype_b_loc@plt>
   17ccc:	uxtb	r1, r4
   17cd0:	ldr	r2, [sp, #4]
   17cd4:	ldr	r3, [sp]
   17cd8:	lsl	r1, r1, #1
   17cdc:	ldr	r0, [r0]
   17ce0:	ldrsh	r1, [r0, r1]
   17ce4:	cmp	r1, #0
   17ce8:	blt	17e30 <el_line@plt+0x1597c>
   17cec:	tst	r2, #2
   17cf0:	bne	17d50 <el_line@plt+0x1589c>
   17cf4:	and	r3, r4, #127	; 0x7f
   17cf8:	cmp	r3, #32
   17cfc:	beq	17d08 <el_line@plt+0x15854>
   17d00:	tst	r2, #1
   17d04:	beq	17e64 <el_line@plt+0x159b0>
   17d08:	uxtb	r3, r4
   17d0c:	and	r4, r4, #7
   17d10:	ubfx	r1, r3, #3, #3
   17d14:	add	r4, r4, #48	; 0x30
   17d18:	lsr	r3, r3, #6
   17d1c:	add	r1, r1, #48	; 0x30
   17d20:	add	r3, r3, #48	; 0x30
   17d24:	strb	r3, [r5, #1]
   17d28:	add	r3, r5, #4
   17d2c:	mov	r2, #92	; 0x5c
   17d30:	strb	r4, [r5, #3]
   17d34:	strb	r1, [r5, #2]
   17d38:	strb	r2, [r5]
   17d3c:	mov	r0, r3
   17d40:	mov	r2, #0
   17d44:	strb	r2, [r3]
   17d48:	add	sp, sp, #12
   17d4c:	pop	{r4, r5, pc}
   17d50:	cmp	r4, #32
   17d54:	addls	pc, pc, r4, lsl #2
   17d58:	b	17cf4 <el_line@plt+0x15840>
   17d5c:	b	17f00 <el_line@plt+0x15a4c>
   17d60:	b	17cf4 <el_line@plt+0x15840>
   17d64:	b	17cf4 <el_line@plt+0x15840>
   17d68:	b	17cf4 <el_line@plt+0x15840>
   17d6c:	b	17cf4 <el_line@plt+0x15840>
   17d70:	b	17cf4 <el_line@plt+0x15840>
   17d74:	b	17cf4 <el_line@plt+0x15840>
   17d78:	b	17f30 <el_line@plt+0x15a7c>
   17d7c:	b	17f48 <el_line@plt+0x15a94>
   17d80:	b	17f60 <el_line@plt+0x15aac>
   17d84:	b	17f78 <el_line@plt+0x15ac4>
   17d88:	b	17fa8 <el_line@plt+0x15af4>
   17d8c:	b	17fc0 <el_line@plt+0x15b0c>
   17d90:	b	17f90 <el_line@plt+0x15adc>
   17d94:	b	17cf4 <el_line@plt+0x15840>
   17d98:	b	17cf4 <el_line@plt+0x15840>
   17d9c:	b	17cf4 <el_line@plt+0x15840>
   17da0:	b	17cf4 <el_line@plt+0x15840>
   17da4:	b	17cf4 <el_line@plt+0x15840>
   17da8:	b	17cf4 <el_line@plt+0x15840>
   17dac:	b	17cf4 <el_line@plt+0x15840>
   17db0:	b	17cf4 <el_line@plt+0x15840>
   17db4:	b	17cf4 <el_line@plt+0x15840>
   17db8:	b	17cf4 <el_line@plt+0x15840>
   17dbc:	b	17cf4 <el_line@plt+0x15840>
   17dc0:	b	17cf4 <el_line@plt+0x15840>
   17dc4:	b	17cf4 <el_line@plt+0x15840>
   17dc8:	b	17cf4 <el_line@plt+0x15840>
   17dcc:	b	17cf4 <el_line@plt+0x15840>
   17dd0:	b	17cf4 <el_line@plt+0x15840>
   17dd4:	b	17cf4 <el_line@plt+0x15840>
   17dd8:	b	17cf4 <el_line@plt+0x15840>
   17ddc:	b	17fd8 <el_line@plt+0x15b24>
   17de0:	tst	r1, #128	; 0x80
   17de4:	bne	17c78 <el_line@plt+0x157c4>
   17de8:	cmp	r4, #42	; 0x2a
   17dec:	cmpne	r4, #63	; 0x3f
   17df0:	beq	17e00 <el_line@plt+0x1594c>
   17df4:	cmp	r4, #91	; 0x5b
   17df8:	cmpne	r4, #35	; 0x23
   17dfc:	bne	17e08 <el_line@plt+0x15954>
   17e00:	tst	r2, #256	; 0x100
   17e04:	bne	17c78 <el_line@plt+0x157c4>
   17e08:	str	r2, [sp, #4]
   17e0c:	str	r3, [sp]
   17e10:	bl	2274 <__ctype_b_loc@plt>
   17e14:	lsl	r1, r4, #1
   17e18:	ldr	r2, [sp, #4]
   17e1c:	ldr	r3, [sp]
   17e20:	ldr	r0, [r0]
   17e24:	ldrsh	r1, [r0, r1]
   17e28:	cmp	r1, #0
   17e2c:	bge	17c78 <el_line@plt+0x157c4>
   17e30:	cmp	r4, #34	; 0x22
   17e34:	bne	17ff0 <el_line@plt+0x15b3c>
   17e38:	tst	r2, #512	; 0x200
   17e3c:	beq	17e4c <el_line@plt+0x15998>
   17e40:	mov	r3, #92	; 0x5c
   17e44:	add	r5, r5, #1
   17e48:	strb	r3, [r5, #-1]
   17e4c:	mov	r3, #0
   17e50:	add	r0, r5, #1
   17e54:	strb	r4, [r5]
   17e58:	strb	r3, [r5, #1]
   17e5c:	add	sp, sp, #12
   17e60:	pop	{r4, r5, pc}
   17e64:	tst	r2, #256	; 0x100
   17e68:	beq	17e84 <el_line@plt+0x159d0>
   17e6c:	cmp	r4, #63	; 0x3f
   17e70:	cmpne	r4, #42	; 0x2a
   17e74:	beq	17d08 <el_line@plt+0x15854>
   17e78:	cmp	r4, #35	; 0x23
   17e7c:	cmpne	r4, #91	; 0x5b
   17e80:	beq	17d08 <el_line@plt+0x15854>
   17e84:	tst	r2, #64	; 0x40
   17e88:	moveq	r2, #92	; 0x5c
   17e8c:	strbeq	r2, [r5]
   17e90:	addeq	r5, r5, #1
   17e94:	tst	r4, #128	; 0x80
   17e98:	movne	r2, #77	; 0x4d
   17e9c:	strbne	r2, [r5]
   17ea0:	movne	r4, r3
   17ea4:	addne	r5, r5, #1
   17ea8:	bl	2274 <__ctype_b_loc@plt>
   17eac:	uxtb	r3, r4
   17eb0:	lsl	r3, r3, #1
   17eb4:	ldr	r2, [r0]
   17eb8:	ldrh	r3, [r2, r3]
   17ebc:	tst	r3, #2
   17ec0:	beq	17eec <el_line@plt+0x15a38>
   17ec4:	cmp	r4, #127	; 0x7f
   17ec8:	mov	r3, #94	; 0x5e
   17ecc:	addne	r4, r4, #64	; 0x40
   17ed0:	strb	r3, [r5]
   17ed4:	moveq	r2, #63	; 0x3f
   17ed8:	addeq	r3, r5, #2
   17edc:	strbeq	r2, [r5, #1]
   17ee0:	addne	r3, r5, #2
   17ee4:	strbne	r4, [r5, #1]
   17ee8:	b	17d3c <el_line@plt+0x15888>
   17eec:	mov	r3, r5
   17ef0:	mov	r2, #45	; 0x2d
   17ef4:	strb	r2, [r3], #2
   17ef8:	strb	r4, [r5, #1]
   17efc:	b	17d3c <el_line@plt+0x15888>
   17f00:	sub	r3, r3, #48	; 0x30
   17f04:	mov	r2, #48	; 0x30
   17f08:	mov	r1, #92	; 0x5c
   17f0c:	strb	r2, [r5, #1]
   17f10:	uxtb	r3, r3
   17f14:	strb	r1, [r5]
   17f18:	cmp	r3, #7
   17f1c:	strbls	r2, [r5, #2]
   17f20:	addhi	r3, r5, #2
   17f24:	addls	r3, r5, #4
   17f28:	strbls	r2, [r5, #3]
   17f2c:	b	17d3c <el_line@plt+0x15888>
   17f30:	mov	r3, r5
   17f34:	mov	r1, #92	; 0x5c
   17f38:	mov	r2, #97	; 0x61
   17f3c:	strb	r1, [r3], #2
   17f40:	strb	r2, [r5, #1]
   17f44:	b	17d3c <el_line@plt+0x15888>
   17f48:	mov	r3, r5
   17f4c:	mov	r1, #92	; 0x5c
   17f50:	mov	r2, #98	; 0x62
   17f54:	strb	r1, [r3], #2
   17f58:	strb	r2, [r5, #1]
   17f5c:	b	17d3c <el_line@plt+0x15888>
   17f60:	mov	r3, r5
   17f64:	mov	r1, #92	; 0x5c
   17f68:	mov	r2, #116	; 0x74
   17f6c:	strb	r1, [r3], #2
   17f70:	strb	r2, [r5, #1]
   17f74:	b	17d3c <el_line@plt+0x15888>
   17f78:	mov	r3, r5
   17f7c:	mov	r1, #92	; 0x5c
   17f80:	mov	r2, #110	; 0x6e
   17f84:	strb	r1, [r3], #2
   17f88:	strb	r2, [r5, #1]
   17f8c:	b	17d3c <el_line@plt+0x15888>
   17f90:	mov	r3, r5
   17f94:	mov	r1, #92	; 0x5c
   17f98:	mov	r2, #114	; 0x72
   17f9c:	strb	r1, [r3], #2
   17fa0:	strb	r2, [r5, #1]
   17fa4:	b	17d3c <el_line@plt+0x15888>
   17fa8:	mov	r3, r5
   17fac:	mov	r1, #92	; 0x5c
   17fb0:	mov	r2, #118	; 0x76
   17fb4:	strb	r1, [r3], #2
   17fb8:	strb	r2, [r5, #1]
   17fbc:	b	17d3c <el_line@plt+0x15888>
   17fc0:	mov	r3, r5
   17fc4:	mov	r1, #92	; 0x5c
   17fc8:	mov	r2, #102	; 0x66
   17fcc:	strb	r1, [r3], #2
   17fd0:	strb	r2, [r5, #1]
   17fd4:	b	17d3c <el_line@plt+0x15888>
   17fd8:	mov	r3, r5
   17fdc:	mov	r1, #92	; 0x5c
   17fe0:	mov	r2, #115	; 0x73
   17fe4:	strb	r1, [r3], #2
   17fe8:	strb	r2, [r5, #1]
   17fec:	b	17d3c <el_line@plt+0x15888>
   17ff0:	cmp	r4, #92	; 0x5c
   17ff4:	bne	17e4c <el_line@plt+0x15998>
   17ff8:	tst	r2, #64	; 0x40
   17ffc:	beq	17e40 <el_line@plt+0x1598c>
   18000:	b	17e4c <el_line@plt+0x15998>
   18004:	push	{r3, r4, r5, r6, r7, lr}
   18008:	mov	r4, r1
   1800c:	ldrb	r1, [r1]
   18010:	mov	r7, r0
   18014:	mov	r6, r2
   18018:	mov	r5, r0
   1801c:	cmp	r1, #0
   18020:	beq	18058 <el_line@plt+0x15ba4>
   18024:	mov	r0, r5
   18028:	ldrb	r3, [r4, #1]
   1802c:	mov	r2, r6
   18030:	bl	17c50 <el_line@plt+0x1579c>
   18034:	ldrb	r1, [r4, #1]!
   18038:	cmp	r1, #0
   1803c:	mov	r5, r0
   18040:	bne	18024 <el_line@plt+0x15b70>
   18044:	mov	r1, r7
   18048:	bl	19350 <el_line@plt+0x16e9c>
   1804c:	mov	r3, #0
   18050:	strb	r3, [r5]
   18054:	pop	{r3, r4, r5, r6, r7, pc}
   18058:	mov	r0, r1
   1805c:	b	1804c <el_line@plt+0x15b98>
   18060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18064:	sub	sp, sp, #52	; 0x34
   18068:	ldr	ip, [pc, #620]	; 182dc <el_line@plt+0x15e28>
   1806c:	mov	r5, r3
   18070:	str	r2, [sp, #16]
   18074:	mov	r6, r1
   18078:	ldr	r2, [pc, #608]	; 182e0 <el_line@plt+0x15e2c>
   1807c:	add	ip, pc, ip
   18080:	str	r0, [sp, #12]
   18084:	mov	r7, r6
   18088:	mov	r3, ip
   1808c:	and	r3, r5, #512	; 0x200
   18090:	ldr	r2, [ip, r2]
   18094:	mov	r4, r0
   18098:	str	r3, [sp, #24]
   1809c:	mov	sl, #0
   180a0:	ldr	r1, [sp, #16]
   180a4:	add	r8, sp, #36	; 0x24
   180a8:	str	r2, [sp, #20]
   180ac:	and	r2, r5, #64	; 0x40
   180b0:	ldr	r3, [sp, #20]
   180b4:	sub	r9, r1, #1
   180b8:	str	r2, [sp, #28]
   180bc:	and	r1, r5, #4
   180c0:	add	r9, r0, r9
   180c4:	str	r1, [sp, #8]
   180c8:	ldr	r2, [r3]
   180cc:	str	r2, [sp, #44]	; 0x2c
   180d0:	b	18190 <el_line@plt+0x15cdc>
   180d4:	tst	r5, #1024	; 0x400
   180d8:	bne	18150 <el_line@plt+0x15c9c>
   180dc:	tst	r1, #128	; 0x80
   180e0:	beq	1821c <el_line@plt+0x15d68>
   180e4:	ldr	r2, [sp, #8]
   180e8:	cmp	r2, #0
   180ec:	bne	180f8 <el_line@plt+0x15c44>
   180f0:	cmp	r1, #32
   180f4:	beq	1820c <el_line@plt+0x15d58>
   180f8:	tst	r5, #8
   180fc:	bne	18108 <el_line@plt+0x15c54>
   18100:	cmp	r1, #9
   18104:	beq	1820c <el_line@plt+0x15d58>
   18108:	tst	r5, #16
   1810c:	bne	18118 <el_line@plt+0x15c64>
   18110:	cmp	r1, #10
   18114:	beq	1820c <el_line@plt+0x15d58>
   18118:	tst	r5, #32
   1811c:	beq	18150 <el_line@plt+0x15c9c>
   18120:	sub	r3, r1, #7
   18124:	cmp	r1, #13
   18128:	cmpne	r3, #1
   1812c:	bls	181e0 <el_line@plt+0x15d2c>
   18130:	str	r1, [sp, #4]
   18134:	bl	2274 <__ctype_b_loc@plt>
   18138:	ldr	r1, [sp, #4]
   1813c:	lsl	r3, r1, #1
   18140:	ldr	r2, [r0]
   18144:	ldrsh	r3, [r2, r3]
   18148:	cmp	r3, #0
   1814c:	blt	181e0 <el_line@plt+0x15d2c>
   18150:	mov	r2, r5
   18154:	ldrb	r3, [r6, #1]
   18158:	mov	r0, r8
   1815c:	bl	17c50 <el_line@plt+0x1579c>
   18160:	mov	r1, r8
   18164:	bl	19350 <el_line@plt+0x16e9c>
   18168:	add	lr, r4, r0
   1816c:	mov	sl, r0
   18170:	cmp	r9, lr
   18174:	bcc	18250 <el_line@plt+0x15d9c>
   18178:	mov	r0, r4
   1817c:	mov	r1, r8
   18180:	mov	r2, sl
   18184:	mov	r4, lr
   18188:	bl	22d4 <memcpy@plt>
   1818c:	add	r6, r6, #1
   18190:	mov	fp, r7
   18194:	add	r7, r7, #1
   18198:	ldrb	r1, [fp]
   1819c:	cmp	r1, #0
   181a0:	beq	1824c <el_line@plt+0x15d98>
   181a4:	cmp	r4, r9
   181a8:	bcs	1824c <el_line@plt+0x15d98>
   181ac:	cmp	r1, #92	; 0x5c
   181b0:	bne	180d4 <el_line@plt+0x15c20>
   181b4:	cmp	r1, #91	; 0x5b
   181b8:	cmpne	r1, #35	; 0x23
   181bc:	beq	18228 <el_line@plt+0x15d74>
   181c0:	str	r1, [sp, #4]
   181c4:	bl	2274 <__ctype_b_loc@plt>
   181c8:	ldr	r1, [sp, #4]
   181cc:	lsl	r3, r1, #1
   181d0:	ldr	r2, [r0]
   181d4:	ldrsh	r3, [r2, r3]
   181d8:	cmp	r3, #0
   181dc:	bge	180e4 <el_line@plt+0x15c30>
   181e0:	cmp	r1, #34	; 0x22
   181e4:	bne	18234 <el_line@plt+0x15d80>
   181e8:	ldr	r3, [sp, #24]
   181ec:	cmp	r3, #0
   181f0:	beq	1820c <el_line@plt+0x15d58>
   181f4:	add	r3, r4, #1
   181f8:	cmp	r9, r3
   181fc:	bls	182d0 <el_line@plt+0x15e1c>
   18200:	mov	r2, #92	; 0x5c
   18204:	strb	r2, [r4]
   18208:	mov	r4, r3
   1820c:	strb	r1, [r4]
   18210:	mov	sl, #1
   18214:	add	r4, r4, sl
   18218:	b	1818c <el_line@plt+0x15cd8>
   1821c:	cmp	r1, #42	; 0x2a
   18220:	cmpne	r1, #63	; 0x3f
   18224:	bne	181b4 <el_line@plt+0x15d00>
   18228:	tst	r5, #256	; 0x100
   1822c:	bne	180e4 <el_line@plt+0x15c30>
   18230:	b	181c0 <el_line@plt+0x15d0c>
   18234:	cmp	r1, #92	; 0x5c
   18238:	bne	1820c <el_line@plt+0x15d58>
   1823c:	ldr	r2, [sp, #28]
   18240:	cmp	r2, #0
   18244:	bne	1820c <el_line@plt+0x15d58>
   18248:	b	181f4 <el_line@plt+0x15d40>
   1824c:	add	lr, r4, sl
   18250:	ldr	r3, [sp, #16]
   18254:	cmp	r3, #0
   18258:	movne	r3, #0
   1825c:	strbne	r3, [r4]
   18260:	cmp	r9, lr
   18264:	bcs	182a8 <el_line@plt+0x15df4>
   18268:	ldrb	r1, [fp]
   1826c:	cmp	r1, #0
   18270:	beq	182a8 <el_line@plt+0x15df4>
   18274:	add	r7, sp, #36	; 0x24
   18278:	mov	r6, fp
   1827c:	mov	r8, r6
   18280:	mov	r2, r5
   18284:	ldrb	r3, [r6, #1]!
   18288:	mov	r0, r7
   1828c:	bl	17c50 <el_line@plt+0x1579c>
   18290:	mov	r1, r7
   18294:	bl	19350 <el_line@plt+0x16e9c>
   18298:	ldrb	r1, [r8, #1]
   1829c:	cmp	r1, #0
   182a0:	add	r4, r4, r0
   182a4:	bne	1827c <el_line@plt+0x15dc8>
   182a8:	ldr	r1, [sp, #12]
   182ac:	mov	r0, r4
   182b0:	bl	19350 <el_line@plt+0x16e9c>
   182b4:	ldr	r1, [sp, #20]
   182b8:	ldr	r2, [sp, #44]	; 0x2c
   182bc:	ldr	r3, [r1]
   182c0:	cmp	r2, r3
   182c4:	bne	182d8 <el_line@plt+0x15e24>
   182c8:	add	sp, sp, #52	; 0x34
   182cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182d0:	add	lr, r4, #2
   182d4:	b	18250 <el_line@plt+0x15d9c>
   182d8:	bl	21e4 <__stack_chk_fail@plt>
   182dc:	andeq	r6, r1, r8, ror #25
   182e0:	andeq	r0, r0, ip, lsr #4
   182e4:	push	{r4, r5, r6, r7, r8, lr}
   182e8:	mov	r5, r0
   182ec:	mov	r0, r1
   182f0:	mov	r4, r1
   182f4:	mov	r7, r2
   182f8:	bl	2310 <strlen@plt>
   182fc:	mov	r1, #4
   18300:	add	r2, r0, #1
   18304:	mov	r0, #0
   18308:	bl	176ac <el_line@plt+0x151f8>
   1830c:	subs	r6, r0, #0
   18310:	beq	1836c <el_line@plt+0x15eb8>
   18314:	mov	r2, r7
   18318:	mov	r1, r4
   1831c:	bl	18004 <el_line@plt+0x15b50>
   18320:	mov	r4, r0
   18324:	bl	23ac <__errno_location@plt>
   18328:	mov	r1, #1
   1832c:	mov	r7, r0
   18330:	mov	r0, r4
   18334:	bl	192bc <el_line@plt+0x16e08>
   18338:	ldr	r8, [r7]
   1833c:	mov	r1, r0
   18340:	mov	r0, r6
   18344:	bl	2178 <realloc@plt>
   18348:	cmp	r0, #0
   1834c:	str	r0, [r5]
   18350:	beq	1835c <el_line@plt+0x15ea8>
   18354:	mov	r0, r4
   18358:	pop	{r4, r5, r6, r7, r8, pc}
   1835c:	str	r6, [r5]
   18360:	mov	r0, r4
   18364:	str	r8, [r7]
   18368:	pop	{r4, r5, r6, r7, r8, pc}
   1836c:	mvn	r0, #0
   18370:	pop	{r4, r5, r6, r7, r8, pc}
   18374:	cmp	r2, #1
   18378:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1837c:	mov	r8, r2
   18380:	mov	r9, r0
   18384:	mov	r7, r1
   18388:	mov	r5, r3
   1838c:	bls	183ec <el_line@plt+0x15f38>
   18390:	add	r4, r1, #1
   18394:	add	r6, r1, r2
   18398:	mov	ip, r4
   1839c:	mov	r2, r5
   183a0:	add	r4, r4, #1
   183a4:	ldrb	r1, [ip, #-1]
   183a8:	ldrb	r3, [ip]
   183ac:	bl	17c50 <el_line@plt+0x1579c>
   183b0:	cmp	r4, r6
   183b4:	bne	18398 <el_line@plt+0x15ee4>
   183b8:	sub	r8, r8, #1
   183bc:	add	r7, r7, r8
   183c0:	mov	r3, #0
   183c4:	ldrb	r1, [r7]
   183c8:	mov	r2, r5
   183cc:	bl	17c50 <el_line@plt+0x1579c>
   183d0:	mov	r3, r0
   183d4:	mov	r2, #0
   183d8:	mov	r1, r9
   183dc:	mov	r0, r3
   183e0:	strb	r2, [r3]
   183e4:	bl	19350 <el_line@plt+0x16e9c>
   183e8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   183ec:	cmp	r2, #0
   183f0:	moveq	r3, r0
   183f4:	beq	183d4 <el_line@plt+0x15f20>
   183f8:	b	183c0 <el_line@plt+0x15f0c>
   183fc:	push	{r3, lr}
   18400:	ldr	r3, [pc, #12]	; 18414 <el_line@plt+0x15f60>
   18404:	add	r3, pc, r3
   18408:	ldr	r3, [r3]
   1840c:	blx	r3
   18410:	pop	{r3, pc}
   18414:	andeq	r6, r1, r8, asr #25
   18418:	ldr	ip, [pc, #484]	; 18604 <el_line@plt+0x16150>
   1841c:	ldr	r3, [pc, #484]	; 18608 <el_line@plt+0x16154>
   18420:	add	ip, pc, ip
   18424:	push	{r4, r5, r6, r7, r8, lr}
   18428:	mov	r5, r0
   1842c:	ldr	r7, [ip, r3]
   18430:	sub	sp, sp, #48	; 0x30
   18434:	ldr	r0, [pc, #464]	; 1860c <el_line@plt+0x16158>
   18438:	mov	r8, r1
   1843c:	mov	r1, #2
   18440:	ldr	r3, [r7]
   18444:	add	r0, pc, r0
   18448:	str	r3, [sp, #44]	; 0x2c
   1844c:	bl	2184 <open64@plt>
   18450:	cmn	r0, #1
   18454:	mov	r4, r0
   18458:	beq	185ac <el_line@plt+0x160f8>
   1845c:	cmp	r8, #2
   18460:	mov	ip, #0
   18464:	str	ip, [sp, #12]
   18468:	str	ip, [sp, #16]
   1846c:	str	ip, [sp, #20]
   18470:	str	ip, [sp, #24]
   18474:	str	ip, [sp, #28]
   18478:	str	ip, [sp, #32]
   1847c:	str	ip, [sp, #36]	; 0x24
   18480:	str	ip, [sp, #40]	; 0x28
   18484:	beq	18520 <el_line@plt+0x1606c>
   18488:	ldr	r2, [pc, #384]	; 18610 <el_line@plt+0x1615c>
   1848c:	cmn	r5, #-2147483647	; 0x80000001
   18490:	movw	r3, #4097	; 0x1001
   18494:	strh	r3, [sp, #28]
   18498:	add	r2, pc, r2
   1849c:	beq	18538 <el_line@plt+0x16084>
   184a0:	cmn	r5, #-2147483646	; 0x80000002
   184a4:	beq	18574 <el_line@plt+0x160c0>
   184a8:	add	r6, sp, #12
   184ac:	mov	r1, #16
   184b0:	mov	r3, r1
   184b4:	str	r2, [sp]
   184b8:	str	r5, [sp, #4]
   184bc:	mov	r2, #1
   184c0:	mov	r0, r6
   184c4:	bl	231c <__snprintf_chk@plt>
   184c8:	mov	r0, r4
   184cc:	mov	r2, r6
   184d0:	movw	r1, #21706	; 0x54ca
   184d4:	movt	r1, #16388	; 0x4004
   184d8:	bl	2148 <ioctl@plt>
   184dc:	cmn	r0, #1
   184e0:	beq	185d4 <el_line@plt+0x16120>
   184e4:	ldr	r0, [pc, #296]	; 18614 <el_line@plt+0x16160>
   184e8:	mov	r2, r6
   184ec:	ldr	r1, [pc, #292]	; 18618 <el_line@plt+0x16164>
   184f0:	mov	r3, r8
   184f4:	str	r4, [sp]
   184f8:	add	r0, pc, r0
   184fc:	add	r1, pc, r1
   18500:	bl	113bc <el_line@plt+0xef08>
   18504:	ldr	r2, [sp, #44]	; 0x2c
   18508:	mov	r0, r4
   1850c:	ldr	r3, [r7]
   18510:	cmp	r2, r3
   18514:	bne	18600 <el_line@plt+0x1614c>
   18518:	add	sp, sp, #48	; 0x30
   1851c:	pop	{r4, r5, r6, r7, r8, pc}
   18520:	ldr	r2, [pc, #244]	; 1861c <el_line@plt+0x16168>
   18524:	cmn	r5, #-2147483647	; 0x80000001
   18528:	movw	r3, #4098	; 0x1002
   1852c:	strh	r3, [sp, #28]
   18530:	add	r2, pc, r2
   18534:	bne	184a0 <el_line@plt+0x15fec>
   18538:	movw	r1, #21706	; 0x54ca
   1853c:	mov	r0, r4
   18540:	movt	r1, #16388	; 0x4004
   18544:	add	r2, sp, #12
   18548:	bl	2148 <ioctl@plt>
   1854c:	cmn	r0, #1
   18550:	beq	185d4 <el_line@plt+0x16120>
   18554:	ldr	r0, [pc, #196]	; 18620 <el_line@plt+0x1616c>
   18558:	mov	r2, r8
   1855c:	ldr	r1, [pc, #192]	; 18624 <el_line@plt+0x16170>
   18560:	mov	r3, r4
   18564:	add	r0, pc, r0
   18568:	add	r1, pc, r1
   1856c:	bl	113bc <el_line@plt+0xef08>
   18570:	b	18504 <el_line@plt+0x16050>
   18574:	bl	23ac <__errno_location@plt>
   18578:	ldr	r0, [r0]
   1857c:	bl	1fa4 <strerror@plt>
   18580:	ldr	r1, [pc, #160]	; 18628 <el_line@plt+0x16174>
   18584:	mov	r2, r5
   18588:	add	r1, pc, r1
   1858c:	mov	r3, r0
   18590:	ldr	r0, [pc, #148]	; 1862c <el_line@plt+0x16178>
   18594:	add	r0, pc, r0
   18598:	bl	113bc <el_line@plt+0xef08>
   1859c:	mov	r0, r4
   185a0:	mvn	r4, #0
   185a4:	bl	20dc <close@plt>
   185a8:	b	18504 <el_line@plt+0x16050>
   185ac:	bl	23ac <__errno_location@plt>
   185b0:	ldr	r0, [r0]
   185b4:	bl	1fa4 <strerror@plt>
   185b8:	ldr	r1, [pc, #112]	; 18630 <el_line@plt+0x1617c>
   185bc:	add	r1, pc, r1
   185c0:	mov	r2, r0
   185c4:	ldr	r0, [pc, #104]	; 18634 <el_line@plt+0x16180>
   185c8:	add	r0, pc, r0
   185cc:	bl	113bc <el_line@plt+0xef08>
   185d0:	b	18504 <el_line@plt+0x16050>
   185d4:	bl	23ac <__errno_location@plt>
   185d8:	ldr	r0, [r0]
   185dc:	bl	1fa4 <strerror@plt>
   185e0:	ldr	r1, [pc, #80]	; 18638 <el_line@plt+0x16184>
   185e4:	mov	r2, r8
   185e8:	add	r1, pc, r1
   185ec:	mov	r3, r0
   185f0:	ldr	r0, [pc, #68]	; 1863c <el_line@plt+0x16188>
   185f4:	add	r0, pc, r0
   185f8:	bl	113bc <el_line@plt+0xef08>
   185fc:	b	1859c <el_line@plt+0x160e8>
   18600:	bl	21e4 <__stack_chk_fail@plt>
   18604:	andeq	r6, r1, r4, asr #18
   18608:	andeq	r0, r0, ip, lsr #4
   1860c:	andeq	r5, r0, ip, lsl r3
   18610:	andeq	r5, r0, r0, asr #5
   18614:	andeq	r5, r0, r4, lsl r3
   18618:	andeq	r5, r0, ip, lsl r2
   1861c:	andeq	r5, r0, r0, lsr #4
   18620:	andeq	r5, r0, ip, lsl #5
   18624:			; <UNDEFINED> instruction: 0x000051b0
   18628:	muleq	r0, r0, r1
   1862c:	andeq	r5, r0, ip, lsl #4
   18630:	andeq	r5, r0, ip, asr r1
   18634:	andeq	r5, r0, r8, lsr #3
   18638:	andeq	r5, r0, r0, lsr r1
   1863c:	andeq	r5, r0, ip, asr #3
   18640:	ldr	r3, [pc, #200]	; 18710 <el_line@plt+0x1625c>
   18644:	ldr	ip, [pc, #200]	; 18714 <el_line@plt+0x16260>
   18648:	add	r3, pc, r3
   1864c:	push	{r4, r5, r6, r7, lr}
   18650:	sub	r6, r2, #1
   18654:	movw	r4, #16379	; 0x3ffb
   18658:	cmp	r6, r4
   1865c:	ldr	r4, [r3, ip]
   18660:	sub	sp, sp, #16384	; 0x4000
   18664:	sub	sp, sp, #12
   18668:	mov	r6, r0
   1866c:	add	r0, sp, #16384	; 0x4000
   18670:	mov	r5, r2
   18674:	ldr	r3, [r4]
   18678:	str	r3, [r0, #4]
   1867c:	bhi	186e4 <el_line@plt+0x16230>
   18680:	movw	r3, #16380	; 0x3ffc
   18684:	add	r0, sp, #8
   18688:	sub	r7, r0, #4
   1868c:	bl	2328 <__memmove_chk@plt>
   18690:	add	lr, sp, #16384	; 0x4000
   18694:	movw	r3, #49148	; 0xbffc
   18698:	add	lr, lr, #8
   1869c:	movt	r3, #65535	; 0xffff
   186a0:	mov	ip, #33554432	; 0x2000000
   186a4:	mov	r1, r7
   186a8:	str	ip, [lr, r3]
   186ac:	add	r0, r6, #64	; 0x40
   186b0:	add	r2, r5, #4
   186b4:	bl	10514 <el_line@plt+0xe060>
   186b8:	subs	r3, r0, #0
   186bc:	moveq	r0, r3
   186c0:	bne	186f0 <el_line@plt+0x1623c>
   186c4:	add	r3, sp, #16384	; 0x4000
   186c8:	ldr	r2, [r3, #4]
   186cc:	ldr	r3, [r4]
   186d0:	cmp	r2, r3
   186d4:	bne	186ec <el_line@plt+0x16238>
   186d8:	add	sp, sp, #16384	; 0x4000
   186dc:	add	sp, sp, #12
   186e0:	pop	{r4, r5, r6, r7, pc}
   186e4:	mvn	r0, #0
   186e8:	b	186c4 <el_line@plt+0x16210>
   186ec:	bl	21e4 <__stack_chk_fail@plt>
   186f0:	bl	e4c8 <el_line@plt+0xc014>
   186f4:	ldr	r1, [pc, #28]	; 18718 <el_line@plt+0x16264>
   186f8:	add	r1, pc, r1
   186fc:	add	r1, r1, #16
   18700:	mov	r2, r0
   18704:	ldr	r0, [pc, #16]	; 1871c <el_line@plt+0x16268>
   18708:	add	r0, pc, r0
   1870c:	bl	10980 <el_line@plt+0xe4cc>
   18710:	andeq	r6, r1, ip, lsl r7
   18714:	andeq	r0, r0, ip, lsr #4
   18718:	andeq	r5, r0, r0, lsr #32
   1871c:	andeq	r2, r0, ip, asr #30
   18720:	ldr	r3, [pc, #156]	; 187c4 <el_line@plt+0x16310>
   18724:	add	r0, r0, #104	; 0x68
   18728:	ldr	ip, [pc, #152]	; 187c8 <el_line@plt+0x16314>
   1872c:	add	r3, pc, r3
   18730:	push	{r4, r5, r6, lr}
   18734:	sub	sp, sp, #8
   18738:	ldr	r5, [r3, ip]
   1873c:	mov	r4, r2
   18740:	mov	r2, sp
   18744:	mov	r6, r1
   18748:	ldr	r3, [r5]
   1874c:	str	r3, [sp, #4]
   18750:	bl	fe38 <el_line@plt+0xd984>
   18754:	cmp	r0, #0
   18758:	bne	187a4 <el_line@plt+0x162f0>
   1875c:	cmp	r4, #0
   18760:	ldrne	r2, [sp]
   18764:	ldreq	r3, [r4]
   18768:	movne	r3, r2
   1876c:	strne	r2, [r4]
   18770:	cmp	r3, #3
   18774:	ldr	r2, [sp, #4]
   18778:	subhi	r3, r3, #4
   1877c:	strhi	r3, [r4]
   18780:	ldrhi	r0, [r6]
   18784:	movls	r0, #0
   18788:	ldr	r3, [r5]
   1878c:	addhi	r0, r0, #4
   18790:	cmp	r2, r3
   18794:	bne	187a0 <el_line@plt+0x162ec>
   18798:	add	sp, sp, #8
   1879c:	pop	{r4, r5, r6, pc}
   187a0:	bl	21e4 <__stack_chk_fail@plt>
   187a4:	bl	e4c8 <el_line@plt+0xc014>
   187a8:	ldr	r1, [pc, #28]	; 187cc <el_line@plt+0x16318>
   187ac:	add	r1, pc, r1
   187b0:	add	r1, r1, #36	; 0x24
   187b4:	mov	r2, r0
   187b8:	ldr	r0, [pc, #16]	; 187d0 <el_line@plt+0x1631c>
   187bc:	add	r0, pc, r0
   187c0:	bl	10980 <el_line@plt+0xe4cc>
   187c4:	andeq	r6, r1, r8, lsr r6
   187c8:	andeq	r0, r0, ip, lsr #4
   187cc:	andeq	r4, r0, ip, ror #30
   187d0:	muleq	r0, r8, lr
   187d4:	subs	r2, r1, #1
   187d8:	bxeq	lr
   187dc:	bcc	189b4 <el_line@plt+0x16500>
   187e0:	cmp	r0, r1
   187e4:	bls	18998 <el_line@plt+0x164e4>
   187e8:	tst	r1, r2
   187ec:	beq	189a4 <el_line@plt+0x164f0>
   187f0:	clz	r3, r0
   187f4:	clz	r2, r1
   187f8:	sub	r3, r2, r3
   187fc:	rsbs	r3, r3, #31
   18800:	addne	r3, r3, r3, lsl #1
   18804:	mov	r2, #0
   18808:	addne	pc, pc, r3, lsl #2
   1880c:	nop	{0}
   18810:	cmp	r0, r1, lsl #31
   18814:	adc	r2, r2, r2
   18818:	subcs	r0, r0, r1, lsl #31
   1881c:	cmp	r0, r1, lsl #30
   18820:	adc	r2, r2, r2
   18824:	subcs	r0, r0, r1, lsl #30
   18828:	cmp	r0, r1, lsl #29
   1882c:	adc	r2, r2, r2
   18830:	subcs	r0, r0, r1, lsl #29
   18834:	cmp	r0, r1, lsl #28
   18838:	adc	r2, r2, r2
   1883c:	subcs	r0, r0, r1, lsl #28
   18840:	cmp	r0, r1, lsl #27
   18844:	adc	r2, r2, r2
   18848:	subcs	r0, r0, r1, lsl #27
   1884c:	cmp	r0, r1, lsl #26
   18850:	adc	r2, r2, r2
   18854:	subcs	r0, r0, r1, lsl #26
   18858:	cmp	r0, r1, lsl #25
   1885c:	adc	r2, r2, r2
   18860:	subcs	r0, r0, r1, lsl #25
   18864:	cmp	r0, r1, lsl #24
   18868:	adc	r2, r2, r2
   1886c:	subcs	r0, r0, r1, lsl #24
   18870:	cmp	r0, r1, lsl #23
   18874:	adc	r2, r2, r2
   18878:	subcs	r0, r0, r1, lsl #23
   1887c:	cmp	r0, r1, lsl #22
   18880:	adc	r2, r2, r2
   18884:	subcs	r0, r0, r1, lsl #22
   18888:	cmp	r0, r1, lsl #21
   1888c:	adc	r2, r2, r2
   18890:	subcs	r0, r0, r1, lsl #21
   18894:	cmp	r0, r1, lsl #20
   18898:	adc	r2, r2, r2
   1889c:	subcs	r0, r0, r1, lsl #20
   188a0:	cmp	r0, r1, lsl #19
   188a4:	adc	r2, r2, r2
   188a8:	subcs	r0, r0, r1, lsl #19
   188ac:	cmp	r0, r1, lsl #18
   188b0:	adc	r2, r2, r2
   188b4:	subcs	r0, r0, r1, lsl #18
   188b8:	cmp	r0, r1, lsl #17
   188bc:	adc	r2, r2, r2
   188c0:	subcs	r0, r0, r1, lsl #17
   188c4:	cmp	r0, r1, lsl #16
   188c8:	adc	r2, r2, r2
   188cc:	subcs	r0, r0, r1, lsl #16
   188d0:	cmp	r0, r1, lsl #15
   188d4:	adc	r2, r2, r2
   188d8:	subcs	r0, r0, r1, lsl #15
   188dc:	cmp	r0, r1, lsl #14
   188e0:	adc	r2, r2, r2
   188e4:	subcs	r0, r0, r1, lsl #14
   188e8:	cmp	r0, r1, lsl #13
   188ec:	adc	r2, r2, r2
   188f0:	subcs	r0, r0, r1, lsl #13
   188f4:	cmp	r0, r1, lsl #12
   188f8:	adc	r2, r2, r2
   188fc:	subcs	r0, r0, r1, lsl #12
   18900:	cmp	r0, r1, lsl #11
   18904:	adc	r2, r2, r2
   18908:	subcs	r0, r0, r1, lsl #11
   1890c:	cmp	r0, r1, lsl #10
   18910:	adc	r2, r2, r2
   18914:	subcs	r0, r0, r1, lsl #10
   18918:	cmp	r0, r1, lsl #9
   1891c:	adc	r2, r2, r2
   18920:	subcs	r0, r0, r1, lsl #9
   18924:	cmp	r0, r1, lsl #8
   18928:	adc	r2, r2, r2
   1892c:	subcs	r0, r0, r1, lsl #8
   18930:	cmp	r0, r1, lsl #7
   18934:	adc	r2, r2, r2
   18938:	subcs	r0, r0, r1, lsl #7
   1893c:	cmp	r0, r1, lsl #6
   18940:	adc	r2, r2, r2
   18944:	subcs	r0, r0, r1, lsl #6
   18948:	cmp	r0, r1, lsl #5
   1894c:	adc	r2, r2, r2
   18950:	subcs	r0, r0, r1, lsl #5
   18954:	cmp	r0, r1, lsl #4
   18958:	adc	r2, r2, r2
   1895c:	subcs	r0, r0, r1, lsl #4
   18960:	cmp	r0, r1, lsl #3
   18964:	adc	r2, r2, r2
   18968:	subcs	r0, r0, r1, lsl #3
   1896c:	cmp	r0, r1, lsl #2
   18970:	adc	r2, r2, r2
   18974:	subcs	r0, r0, r1, lsl #2
   18978:	cmp	r0, r1, lsl #1
   1897c:	adc	r2, r2, r2
   18980:	subcs	r0, r0, r1, lsl #1
   18984:	cmp	r0, r1
   18988:	adc	r2, r2, r2
   1898c:	subcs	r0, r0, r1
   18990:	mov	r0, r2
   18994:	bx	lr
   18998:	moveq	r0, #1
   1899c:	movne	r0, #0
   189a0:	bx	lr
   189a4:	clz	r2, r1
   189a8:	rsb	r2, r2, #31
   189ac:	lsr	r0, r0, r2
   189b0:	bx	lr
   189b4:	cmp	r0, #0
   189b8:	mvnne	r0, #0
   189bc:	b	192ac <el_line@plt+0x16df8>
   189c0:	cmp	r1, #0
   189c4:	beq	189b4 <el_line@plt+0x16500>
   189c8:	push	{r0, r1, lr}
   189cc:	bl	187d4 <el_line@plt+0x16320>
   189d0:	pop	{r1, r2, lr}
   189d4:	mul	r3, r2, r0
   189d8:	sub	r1, r1, r3
   189dc:	bx	lr
   189e0:	cmp	r1, #0
   189e4:	beq	18bf0 <el_line@plt+0x1673c>
   189e8:	eor	ip, r0, r1
   189ec:	rsbmi	r1, r1, #0
   189f0:	subs	r2, r1, #1
   189f4:	beq	18bbc <el_line@plt+0x16708>
   189f8:	movs	r3, r0
   189fc:	rsbmi	r3, r0, #0
   18a00:	cmp	r3, r1
   18a04:	bls	18bc8 <el_line@plt+0x16714>
   18a08:	tst	r1, r2
   18a0c:	beq	18bd8 <el_line@plt+0x16724>
   18a10:	clz	r2, r3
   18a14:	clz	r0, r1
   18a18:	sub	r2, r0, r2
   18a1c:	rsbs	r2, r2, #31
   18a20:	addne	r2, r2, r2, lsl #1
   18a24:	mov	r0, #0
   18a28:	addne	pc, pc, r2, lsl #2
   18a2c:	nop	{0}
   18a30:	cmp	r3, r1, lsl #31
   18a34:	adc	r0, r0, r0
   18a38:	subcs	r3, r3, r1, lsl #31
   18a3c:	cmp	r3, r1, lsl #30
   18a40:	adc	r0, r0, r0
   18a44:	subcs	r3, r3, r1, lsl #30
   18a48:	cmp	r3, r1, lsl #29
   18a4c:	adc	r0, r0, r0
   18a50:	subcs	r3, r3, r1, lsl #29
   18a54:	cmp	r3, r1, lsl #28
   18a58:	adc	r0, r0, r0
   18a5c:	subcs	r3, r3, r1, lsl #28
   18a60:	cmp	r3, r1, lsl #27
   18a64:	adc	r0, r0, r0
   18a68:	subcs	r3, r3, r1, lsl #27
   18a6c:	cmp	r3, r1, lsl #26
   18a70:	adc	r0, r0, r0
   18a74:	subcs	r3, r3, r1, lsl #26
   18a78:	cmp	r3, r1, lsl #25
   18a7c:	adc	r0, r0, r0
   18a80:	subcs	r3, r3, r1, lsl #25
   18a84:	cmp	r3, r1, lsl #24
   18a88:	adc	r0, r0, r0
   18a8c:	subcs	r3, r3, r1, lsl #24
   18a90:	cmp	r3, r1, lsl #23
   18a94:	adc	r0, r0, r0
   18a98:	subcs	r3, r3, r1, lsl #23
   18a9c:	cmp	r3, r1, lsl #22
   18aa0:	adc	r0, r0, r0
   18aa4:	subcs	r3, r3, r1, lsl #22
   18aa8:	cmp	r3, r1, lsl #21
   18aac:	adc	r0, r0, r0
   18ab0:	subcs	r3, r3, r1, lsl #21
   18ab4:	cmp	r3, r1, lsl #20
   18ab8:	adc	r0, r0, r0
   18abc:	subcs	r3, r3, r1, lsl #20
   18ac0:	cmp	r3, r1, lsl #19
   18ac4:	adc	r0, r0, r0
   18ac8:	subcs	r3, r3, r1, lsl #19
   18acc:	cmp	r3, r1, lsl #18
   18ad0:	adc	r0, r0, r0
   18ad4:	subcs	r3, r3, r1, lsl #18
   18ad8:	cmp	r3, r1, lsl #17
   18adc:	adc	r0, r0, r0
   18ae0:	subcs	r3, r3, r1, lsl #17
   18ae4:	cmp	r3, r1, lsl #16
   18ae8:	adc	r0, r0, r0
   18aec:	subcs	r3, r3, r1, lsl #16
   18af0:	cmp	r3, r1, lsl #15
   18af4:	adc	r0, r0, r0
   18af8:	subcs	r3, r3, r1, lsl #15
   18afc:	cmp	r3, r1, lsl #14
   18b00:	adc	r0, r0, r0
   18b04:	subcs	r3, r3, r1, lsl #14
   18b08:	cmp	r3, r1, lsl #13
   18b0c:	adc	r0, r0, r0
   18b10:	subcs	r3, r3, r1, lsl #13
   18b14:	cmp	r3, r1, lsl #12
   18b18:	adc	r0, r0, r0
   18b1c:	subcs	r3, r3, r1, lsl #12
   18b20:	cmp	r3, r1, lsl #11
   18b24:	adc	r0, r0, r0
   18b28:	subcs	r3, r3, r1, lsl #11
   18b2c:	cmp	r3, r1, lsl #10
   18b30:	adc	r0, r0, r0
   18b34:	subcs	r3, r3, r1, lsl #10
   18b38:	cmp	r3, r1, lsl #9
   18b3c:	adc	r0, r0, r0
   18b40:	subcs	r3, r3, r1, lsl #9
   18b44:	cmp	r3, r1, lsl #8
   18b48:	adc	r0, r0, r0
   18b4c:	subcs	r3, r3, r1, lsl #8
   18b50:	cmp	r3, r1, lsl #7
   18b54:	adc	r0, r0, r0
   18b58:	subcs	r3, r3, r1, lsl #7
   18b5c:	cmp	r3, r1, lsl #6
   18b60:	adc	r0, r0, r0
   18b64:	subcs	r3, r3, r1, lsl #6
   18b68:	cmp	r3, r1, lsl #5
   18b6c:	adc	r0, r0, r0
   18b70:	subcs	r3, r3, r1, lsl #5
   18b74:	cmp	r3, r1, lsl #4
   18b78:	adc	r0, r0, r0
   18b7c:	subcs	r3, r3, r1, lsl #4
   18b80:	cmp	r3, r1, lsl #3
   18b84:	adc	r0, r0, r0
   18b88:	subcs	r3, r3, r1, lsl #3
   18b8c:	cmp	r3, r1, lsl #2
   18b90:	adc	r0, r0, r0
   18b94:	subcs	r3, r3, r1, lsl #2
   18b98:	cmp	r3, r1, lsl #1
   18b9c:	adc	r0, r0, r0
   18ba0:	subcs	r3, r3, r1, lsl #1
   18ba4:	cmp	r3, r1
   18ba8:	adc	r0, r0, r0
   18bac:	subcs	r3, r3, r1
   18bb0:	cmp	ip, #0
   18bb4:	rsbmi	r0, r0, #0
   18bb8:	bx	lr
   18bbc:	teq	ip, r0
   18bc0:	rsbmi	r0, r0, #0
   18bc4:	bx	lr
   18bc8:	movcc	r0, #0
   18bcc:	asreq	r0, ip, #31
   18bd0:	orreq	r0, r0, #1
   18bd4:	bx	lr
   18bd8:	clz	r2, r1
   18bdc:	rsb	r2, r2, #31
   18be0:	cmp	ip, #0
   18be4:	lsr	r0, r3, r2
   18be8:	rsbmi	r0, r0, #0
   18bec:	bx	lr
   18bf0:	cmp	r0, #0
   18bf4:	mvngt	r0, #-2147483648	; 0x80000000
   18bf8:	movlt	r0, #-2147483648	; 0x80000000
   18bfc:	b	192ac <el_line@plt+0x16df8>
   18c00:	cmp	r1, #0
   18c04:	beq	18bf0 <el_line@plt+0x1673c>
   18c08:	push	{r0, r1, lr}
   18c0c:	bl	189e8 <el_line@plt+0x16534>
   18c10:	pop	{r1, r2, lr}
   18c14:	mul	r3, r2, r0
   18c18:	sub	r1, r1, r3
   18c1c:	bx	lr
   18c20:	eor	r1, r1, #-2147483648	; 0x80000000
   18c24:	b	18c2c <el_line@plt+0x16778>
   18c28:	eor	r3, r3, #-2147483648	; 0x80000000
   18c2c:	push	{r4, r5, lr}
   18c30:	lsl	r4, r1, #1
   18c34:	lsl	r5, r3, #1
   18c38:	teq	r4, r5
   18c3c:	teqeq	r0, r2
   18c40:	orrsne	ip, r4, r0
   18c44:	orrsne	ip, r5, r2
   18c48:	mvnsne	ip, r4, asr #21
   18c4c:	mvnsne	ip, r5, asr #21
   18c50:	beq	18e3c <el_line@plt+0x16988>
   18c54:	lsr	r4, r4, #21
   18c58:	rsbs	r5, r4, r5, lsr #21
   18c5c:	rsblt	r5, r5, #0
   18c60:	ble	18c80 <el_line@plt+0x167cc>
   18c64:	add	r4, r4, r5
   18c68:	eor	r2, r0, r2
   18c6c:	eor	r3, r1, r3
   18c70:	eor	r0, r2, r0
   18c74:	eor	r1, r3, r1
   18c78:	eor	r2, r0, r2
   18c7c:	eor	r3, r1, r3
   18c80:	cmp	r5, #54	; 0x36
   18c84:	pophi	{r4, r5, pc}
   18c88:	tst	r1, #-2147483648	; 0x80000000
   18c8c:	lsl	r1, r1, #12
   18c90:	mov	ip, #1048576	; 0x100000
   18c94:	orr	r1, ip, r1, lsr #12
   18c98:	beq	18ca4 <el_line@plt+0x167f0>
   18c9c:	rsbs	r0, r0, #0
   18ca0:	rsc	r1, r1, #0
   18ca4:	tst	r3, #-2147483648	; 0x80000000
   18ca8:	lsl	r3, r3, #12
   18cac:	orr	r3, ip, r3, lsr #12
   18cb0:	beq	18cbc <el_line@plt+0x16808>
   18cb4:	rsbs	r2, r2, #0
   18cb8:	rsc	r3, r3, #0
   18cbc:	teq	r4, r5
   18cc0:	beq	18e24 <el_line@plt+0x16970>
   18cc4:	sub	r4, r4, #1
   18cc8:	rsbs	lr, r5, #32
   18ccc:	blt	18ce8 <el_line@plt+0x16834>
   18cd0:	lsl	ip, r2, lr
   18cd4:	adds	r0, r0, r2, lsr r5
   18cd8:	adc	r1, r1, #0
   18cdc:	adds	r0, r0, r3, lsl lr
   18ce0:	adcs	r1, r1, r3, asr r5
   18ce4:	b	18d04 <el_line@plt+0x16850>
   18ce8:	sub	r5, r5, #32
   18cec:	add	lr, lr, #32
   18cf0:	cmp	r2, #1
   18cf4:	lsl	ip, r3, lr
   18cf8:	orrcs	ip, ip, #2
   18cfc:	adds	r0, r0, r3, asr r5
   18d00:	adcs	r1, r1, r3, asr #31
   18d04:	and	r5, r1, #-2147483648	; 0x80000000
   18d08:	bpl	18d18 <el_line@plt+0x16864>
   18d0c:	rsbs	ip, ip, #0
   18d10:	rscs	r0, r0, #0
   18d14:	rsc	r1, r1, #0
   18d18:	cmp	r1, #1048576	; 0x100000
   18d1c:	bcc	18d5c <el_line@plt+0x168a8>
   18d20:	cmp	r1, #2097152	; 0x200000
   18d24:	bcc	18d44 <el_line@plt+0x16890>
   18d28:	lsrs	r1, r1, #1
   18d2c:	rrxs	r0, r0
   18d30:	rrx	ip, ip
   18d34:	add	r4, r4, #1
   18d38:	lsl	r2, r4, #21
   18d3c:	cmn	r2, #4194304	; 0x400000
   18d40:	bcs	18e9c <el_line@plt+0x169e8>
   18d44:	cmp	ip, #-2147483648	; 0x80000000
   18d48:	lsrseq	ip, r0, #1
   18d4c:	adcs	r0, r0, #0
   18d50:	adc	r1, r1, r4, lsl #20
   18d54:	orr	r1, r1, r5
   18d58:	pop	{r4, r5, pc}
   18d5c:	lsls	ip, ip, #1
   18d60:	adcs	r0, r0, r0
   18d64:	adc	r1, r1, r1
   18d68:	tst	r1, #1048576	; 0x100000
   18d6c:	sub	r4, r4, #1
   18d70:	bne	18d44 <el_line@plt+0x16890>
   18d74:	teq	r1, #0
   18d78:	moveq	r1, r0
   18d7c:	moveq	r0, #0
   18d80:	clz	r3, r1
   18d84:	addeq	r3, r3, #32
   18d88:	sub	r3, r3, #11
   18d8c:	subs	r2, r3, #32
   18d90:	bge	18db4 <el_line@plt+0x16900>
   18d94:	adds	r2, r2, #12
   18d98:	ble	18db0 <el_line@plt+0x168fc>
   18d9c:	add	ip, r2, #20
   18da0:	rsb	r2, r2, #12
   18da4:	lsl	r0, r1, ip
   18da8:	lsr	r1, r1, r2
   18dac:	b	18dc4 <el_line@plt+0x16910>
   18db0:	add	r2, r2, #20
   18db4:	rsble	ip, r2, #32
   18db8:	lsl	r1, r1, r2
   18dbc:	orrle	r1, r1, r0, lsr ip
   18dc0:	lslle	r0, r0, r2
   18dc4:	subs	r4, r4, r3
   18dc8:	addge	r1, r1, r4, lsl #20
   18dcc:	orrge	r1, r1, r5
   18dd0:	popge	{r4, r5, pc}
   18dd4:	mvn	r4, r4
   18dd8:	subs	r4, r4, #31
   18ddc:	bge	18e18 <el_line@plt+0x16964>
   18de0:	adds	r4, r4, #12
   18de4:	bgt	18e00 <el_line@plt+0x1694c>
   18de8:	add	r4, r4, #20
   18dec:	rsb	r2, r4, #32
   18df0:	lsr	r0, r0, r4
   18df4:	orr	r0, r0, r1, lsl r2
   18df8:	orr	r1, r5, r1, lsr r4
   18dfc:	pop	{r4, r5, pc}
   18e00:	rsb	r4, r4, #12
   18e04:	rsb	r2, r4, #32
   18e08:	lsr	r0, r0, r2
   18e0c:	orr	r0, r0, r1, lsl r4
   18e10:	mov	r1, r5
   18e14:	pop	{r4, r5, pc}
   18e18:	lsr	r0, r1, r4
   18e1c:	mov	r1, r5
   18e20:	pop	{r4, r5, pc}
   18e24:	teq	r4, #0
   18e28:	eor	r3, r3, #1048576	; 0x100000
   18e2c:	eoreq	r1, r1, #1048576	; 0x100000
   18e30:	addeq	r4, r4, #1
   18e34:	subne	r5, r5, #1
   18e38:	b	18cc4 <el_line@plt+0x16810>
   18e3c:	mvns	ip, r4, asr #21
   18e40:	mvnsne	ip, r5, asr #21
   18e44:	beq	18eac <el_line@plt+0x169f8>
   18e48:	teq	r4, r5
   18e4c:	teqeq	r0, r2
   18e50:	beq	18e64 <el_line@plt+0x169b0>
   18e54:	orrs	ip, r4, r0
   18e58:	moveq	r1, r3
   18e5c:	moveq	r0, r2
   18e60:	pop	{r4, r5, pc}
   18e64:	teq	r1, r3
   18e68:	movne	r1, #0
   18e6c:	movne	r0, #0
   18e70:	popne	{r4, r5, pc}
   18e74:	lsrs	ip, r4, #21
   18e78:	bne	18e8c <el_line@plt+0x169d8>
   18e7c:	lsls	r0, r0, #1
   18e80:	adcs	r1, r1, r1
   18e84:	orrcs	r1, r1, #-2147483648	; 0x80000000
   18e88:	pop	{r4, r5, pc}
   18e8c:	adds	r4, r4, #4194304	; 0x400000
   18e90:	addcc	r1, r1, #1048576	; 0x100000
   18e94:	popcc	{r4, r5, pc}
   18e98:	and	r5, r1, #-2147483648	; 0x80000000
   18e9c:	orr	r1, r5, #2130706432	; 0x7f000000
   18ea0:	orr	r1, r1, #15728640	; 0xf00000
   18ea4:	mov	r0, #0
   18ea8:	pop	{r4, r5, pc}
   18eac:	mvns	ip, r4, asr #21
   18eb0:	movne	r1, r3
   18eb4:	movne	r0, r2
   18eb8:	mvnseq	ip, r5, asr #21
   18ebc:	movne	r3, r1
   18ec0:	movne	r2, r0
   18ec4:	orrs	r4, r0, r1, lsl #12
   18ec8:	orrseq	r5, r2, r3, lsl #12
   18ecc:	teqeq	r1, r3
   18ed0:	orrne	r1, r1, #524288	; 0x80000
   18ed4:	pop	{r4, r5, pc}
   18ed8:	teq	r0, #0
   18edc:	moveq	r1, #0
   18ee0:	bxeq	lr
   18ee4:	push	{r4, r5, lr}
   18ee8:	mov	r4, #1024	; 0x400
   18eec:	add	r4, r4, #50	; 0x32
   18ef0:	mov	r5, #0
   18ef4:	mov	r1, #0
   18ef8:	b	18d74 <el_line@plt+0x168c0>
   18efc:	teq	r0, #0
   18f00:	moveq	r1, #0
   18f04:	bxeq	lr
   18f08:	push	{r4, r5, lr}
   18f0c:	mov	r4, #1024	; 0x400
   18f10:	add	r4, r4, #50	; 0x32
   18f14:	ands	r5, r0, #-2147483648	; 0x80000000
   18f18:	rsbmi	r0, r0, #0
   18f1c:	mov	r1, #0
   18f20:	b	18d74 <el_line@plt+0x168c0>
   18f24:	lsls	r2, r0, #1
   18f28:	asr	r1, r2, #3
   18f2c:	rrx	r1, r1
   18f30:	lsl	r0, r2, #28
   18f34:	andsne	r3, r2, #-16777216	; 0xff000000
   18f38:	teqne	r3, #-16777216	; 0xff000000
   18f3c:	eorne	r1, r1, #939524096	; 0x38000000
   18f40:	bxne	lr
   18f44:	teq	r2, #0
   18f48:	teqne	r3, #-16777216	; 0xff000000
   18f4c:	bxeq	lr
   18f50:	push	{r4, r5, lr}
   18f54:	mov	r4, #896	; 0x380
   18f58:	and	r5, r1, #-2147483648	; 0x80000000
   18f5c:	bic	r1, r1, #-2147483648	; 0x80000000
   18f60:	b	18d74 <el_line@plt+0x168c0>
   18f64:	orrs	r2, r0, r1
   18f68:	bxeq	lr
   18f6c:	push	{r4, r5, lr}
   18f70:	mov	r5, #0
   18f74:	b	18f94 <el_line@plt+0x16ae0>
   18f78:	orrs	r2, r0, r1
   18f7c:	bxeq	lr
   18f80:	push	{r4, r5, lr}
   18f84:	ands	r5, r1, #-2147483648	; 0x80000000
   18f88:	bpl	18f94 <el_line@plt+0x16ae0>
   18f8c:	rsbs	r0, r0, #0
   18f90:	rsc	r1, r1, #0
   18f94:	mov	r4, #1024	; 0x400
   18f98:	add	r4, r4, #50	; 0x32
   18f9c:	lsrs	ip, r1, #22
   18fa0:	beq	18d18 <el_line@plt+0x16864>
   18fa4:	mov	r2, #3
   18fa8:	lsrs	ip, ip, #3
   18fac:	addne	r2, r2, #3
   18fb0:	lsrs	ip, ip, #3
   18fb4:	addne	r2, r2, #3
   18fb8:	add	r2, r2, ip, lsr #3
   18fbc:	rsb	r3, r2, #32
   18fc0:	lsl	ip, r0, r3
   18fc4:	lsr	r0, r0, r2
   18fc8:	orr	r0, r0, r1, lsl r3
   18fcc:	lsr	r1, r1, r2
   18fd0:	add	r4, r4, r2
   18fd4:	b	18d18 <el_line@plt+0x16864>
   18fd8:	eor	r0, r0, #-2147483648	; 0x80000000
   18fdc:	b	18fe4 <el_line@plt+0x16b30>
   18fe0:	eor	r1, r1, #-2147483648	; 0x80000000
   18fe4:	lsls	r2, r0, #1
   18fe8:	lslsne	r3, r1, #1
   18fec:	teqne	r2, r3
   18ff0:	mvnsne	ip, r2, asr #24
   18ff4:	mvnsne	ip, r3, asr #24
   18ff8:	beq	190f0 <el_line@plt+0x16c3c>
   18ffc:	lsr	r2, r2, #24
   19000:	rsbs	r3, r2, r3, lsr #24
   19004:	addgt	r2, r2, r3
   19008:	eorgt	r1, r0, r1
   1900c:	eorgt	r0, r1, r0
   19010:	eorgt	r1, r0, r1
   19014:	rsblt	r3, r3, #0
   19018:	cmp	r3, #25
   1901c:	bxhi	lr
   19020:	tst	r0, #-2147483648	; 0x80000000
   19024:	orr	r0, r0, #8388608	; 0x800000
   19028:	bic	r0, r0, #-16777216	; 0xff000000
   1902c:	rsbne	r0, r0, #0
   19030:	tst	r1, #-2147483648	; 0x80000000
   19034:	orr	r1, r1, #8388608	; 0x800000
   19038:	bic	r1, r1, #-16777216	; 0xff000000
   1903c:	rsbne	r1, r1, #0
   19040:	teq	r2, r3
   19044:	beq	190d8 <el_line@plt+0x16c24>
   19048:	sub	r2, r2, #1
   1904c:	adds	r0, r0, r1, asr r3
   19050:	rsb	r3, r3, #32
   19054:	lsl	r1, r1, r3
   19058:	and	r3, r0, #-2147483648	; 0x80000000
   1905c:	bpl	19068 <el_line@plt+0x16bb4>
   19060:	rsbs	r1, r1, #0
   19064:	rsc	r0, r0, #0
   19068:	cmp	r0, #8388608	; 0x800000
   1906c:	bcc	190a0 <el_line@plt+0x16bec>
   19070:	cmp	r0, #16777216	; 0x1000000
   19074:	bcc	1908c <el_line@plt+0x16bd8>
   19078:	lsrs	r0, r0, #1
   1907c:	rrx	r1, r1
   19080:	add	r2, r2, #1
   19084:	cmp	r2, #254	; 0xfe
   19088:	bcs	19144 <el_line@plt+0x16c90>
   1908c:	cmp	r1, #-2147483648	; 0x80000000
   19090:	adc	r0, r0, r2, lsl #23
   19094:	biceq	r0, r0, #1
   19098:	orr	r0, r0, r3
   1909c:	bx	lr
   190a0:	lsls	r1, r1, #1
   190a4:	adc	r0, r0, r0
   190a8:	tst	r0, #8388608	; 0x800000
   190ac:	sub	r2, r2, #1
   190b0:	bne	1908c <el_line@plt+0x16bd8>
   190b4:	clz	ip, r0
   190b8:	sub	ip, ip, #8
   190bc:	subs	r2, r2, ip
   190c0:	lsl	r0, r0, ip
   190c4:	addge	r0, r0, r2, lsl #23
   190c8:	rsblt	r2, r2, #0
   190cc:	orrge	r0, r0, r3
   190d0:	orrlt	r0, r3, r0, lsr r2
   190d4:	bx	lr
   190d8:	teq	r2, #0
   190dc:	eor	r1, r1, #8388608	; 0x800000
   190e0:	eoreq	r0, r0, #8388608	; 0x800000
   190e4:	addeq	r2, r2, #1
   190e8:	subne	r3, r3, #1
   190ec:	b	19048 <el_line@plt+0x16b94>
   190f0:	lsl	r3, r1, #1
   190f4:	mvns	ip, r2, asr #24
   190f8:	mvnsne	ip, r3, asr #24
   190fc:	beq	19150 <el_line@plt+0x16c9c>
   19100:	teq	r2, r3
   19104:	beq	19114 <el_line@plt+0x16c60>
   19108:	teq	r2, #0
   1910c:	moveq	r0, r1
   19110:	bx	lr
   19114:	teq	r0, r1
   19118:	movne	r0, #0
   1911c:	bxne	lr
   19120:	tst	r2, #-16777216	; 0xff000000
   19124:	bne	19134 <el_line@plt+0x16c80>
   19128:	lsls	r0, r0, #1
   1912c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   19130:	bx	lr
   19134:	adds	r2, r2, #33554432	; 0x2000000
   19138:	addcc	r0, r0, #8388608	; 0x800000
   1913c:	bxcc	lr
   19140:	and	r3, r0, #-2147483648	; 0x80000000
   19144:	orr	r0, r3, #2130706432	; 0x7f000000
   19148:	orr	r0, r0, #8388608	; 0x800000
   1914c:	bx	lr
   19150:	mvns	r2, r2, asr #24
   19154:	movne	r0, r1
   19158:	mvnseq	r3, r3, asr #24
   1915c:	movne	r1, r0
   19160:	lsls	r2, r0, #9
   19164:	lslseq	r3, r1, #9
   19168:	teqeq	r0, r1
   1916c:	orrne	r0, r0, #4194304	; 0x400000
   19170:	bx	lr
   19174:	mov	r3, #0
   19178:	b	19184 <el_line@plt+0x16cd0>
   1917c:	ands	r3, r0, #-2147483648	; 0x80000000
   19180:	rsbmi	r0, r0, #0
   19184:	movs	ip, r0
   19188:	bxeq	lr
   1918c:	orr	r3, r3, #1258291200	; 0x4b000000
   19190:	mov	r1, r0
   19194:	mov	r0, #0
   19198:	b	191dc <el_line@plt+0x16d28>
   1919c:	orrs	r2, r0, r1
   191a0:	bxeq	lr
   191a4:	mov	r3, #0
   191a8:	b	191c4 <el_line@plt+0x16d10>
   191ac:	orrs	r2, r0, r1
   191b0:	bxeq	lr
   191b4:	ands	r3, r1, #-2147483648	; 0x80000000
   191b8:	bpl	191c4 <el_line@plt+0x16d10>
   191bc:	rsbs	r0, r0, #0
   191c0:	rsc	r1, r1, #0
   191c4:	movs	ip, r1
   191c8:	moveq	ip, r0
   191cc:	moveq	r1, r0
   191d0:	moveq	r0, #0
   191d4:	orr	r3, r3, #1526726656	; 0x5b000000
   191d8:	subeq	r3, r3, #268435456	; 0x10000000
   191dc:	sub	r3, r3, #8388608	; 0x800000
   191e0:	clz	r2, ip
   191e4:	subs	r2, r2, #8
   191e8:	sub	r3, r3, r2, lsl #23
   191ec:	blt	1920c <el_line@plt+0x16d58>
   191f0:	add	r3, r3, r1, lsl r2
   191f4:	lsl	ip, r0, r2
   191f8:	rsb	r2, r2, #32
   191fc:	cmp	ip, #-2147483648	; 0x80000000
   19200:	adc	r0, r3, r0, lsr r2
   19204:	biceq	r0, r0, #1
   19208:	bx	lr
   1920c:	add	r2, r2, #32
   19210:	lsl	ip, r1, r2
   19214:	rsb	r2, r2, #32
   19218:	orrs	r0, r0, ip, lsl #1
   1921c:	adc	r0, r3, r1, lsr r2
   19220:	biceq	r0, r0, ip, lsr #31
   19224:	bx	lr
   19228:	cmp	r3, #0
   1922c:	cmpeq	r2, #0
   19230:	bne	19254 <el_line@plt+0x16da0>
   19234:	cmp	r1, #0
   19238:	movlt	r1, #-2147483648	; 0x80000000
   1923c:	movlt	r0, #0
   19240:	blt	19250 <el_line@plt+0x16d9c>
   19244:	cmpeq	r0, #0
   19248:	mvnne	r1, #-2147483648	; 0x80000000
   1924c:	mvnne	r0, #0
   19250:	b	192ac <el_line@plt+0x16df8>
   19254:	sub	sp, sp, #8
   19258:	push	{sp, lr}
   1925c:	bl	195b0 <el_line@plt+0x170fc>
   19260:	ldr	lr, [sp, #4]
   19264:	add	sp, sp, #8
   19268:	pop	{r2, r3}
   1926c:	bx	lr
   19270:	cmp	r3, #0
   19274:	cmpeq	r2, #0
   19278:	bne	19290 <el_line@plt+0x16ddc>
   1927c:	cmp	r1, #0
   19280:	cmpeq	r0, #0
   19284:	mvnne	r1, #0
   19288:	mvnne	r0, #0
   1928c:	b	192ac <el_line@plt+0x16df8>
   19290:	sub	sp, sp, #8
   19294:	push	{sp, lr}
   19298:	bl	195ec <el_line@plt+0x17138>
   1929c:	ldr	lr, [sp, #4]
   192a0:	add	sp, sp, #8
   192a4:	pop	{r2, r3}
   192a8:	bx	lr
   192ac:	push	{r1, lr}
   192b0:	mov	r0, #8
   192b4:	bl	2268 <raise@plt>
   192b8:	pop	{r1, pc}
   192bc:	cmp	r1, #0
   192c0:	add	r1, r0, r1
   192c4:	push	{r3, lr}
   192c8:	blt	192e8 <el_line@plt+0x16e34>
   192cc:	cmp	r1, r0
   192d0:	movge	r0, #0
   192d4:	movlt	r0, #1
   192d8:	cmp	r0, #0
   192dc:	bne	192f8 <el_line@plt+0x16e44>
   192e0:	mov	r0, r1
   192e4:	pop	{r3, pc}
   192e8:	cmp	r1, r0
   192ec:	movle	r0, #0
   192f0:	movgt	r0, #1
   192f4:	b	192d8 <el_line@plt+0x16e24>
   192f8:	bl	20f4 <abort@plt>
   192fc:	push	{r3, r4, r5, lr}
   19300:	adds	r4, r0, r2
   19304:	adc	r5, r1, r3
   19308:	cmp	r2, #0
   1930c:	sbcs	ip, r3, #0
   19310:	blt	19338 <el_line@plt+0x16e84>
   19314:	cmp	r4, r0
   19318:	sbcs	r3, r5, r1
   1931c:	movge	r3, #0
   19320:	movlt	r3, #1
   19324:	cmp	r3, #0
   19328:	bne	1934c <el_line@plt+0x16e98>
   1932c:	mov	r0, r4
   19330:	mov	r1, r5
   19334:	pop	{r3, r4, r5, pc}
   19338:	cmp	r0, r4
   1933c:	sbcs	ip, r1, r5
   19340:	movge	r3, #0
   19344:	movlt	r3, #1
   19348:	b	19324 <el_line@plt+0x16e70>
   1934c:	bl	20f4 <abort@plt>
   19350:	cmp	r1, #0
   19354:	rsb	r1, r1, r0
   19358:	push	{r3, lr}
   1935c:	blt	1937c <el_line@plt+0x16ec8>
   19360:	cmp	r1, r0
   19364:	movle	r0, #0
   19368:	movgt	r0, #1
   1936c:	cmp	r0, #0
   19370:	bne	1938c <el_line@plt+0x16ed8>
   19374:	mov	r0, r1
   19378:	pop	{r3, pc}
   1937c:	cmp	r1, r0
   19380:	movge	r0, #0
   19384:	movlt	r0, #1
   19388:	b	1936c <el_line@plt+0x16eb8>
   1938c:	bl	20f4 <abort@plt>
   19390:	push	{r3, r4, r5, lr}
   19394:	mov	r4, r0
   19398:	mov	r5, r1
   1939c:	subs	r4, r4, r2
   193a0:	sbc	r5, r5, r3
   193a4:	cmp	r2, #0
   193a8:	sbcs	ip, r3, #0
   193ac:	blt	193d4 <el_line@plt+0x16f20>
   193b0:	cmp	r0, r4
   193b4:	sbcs	r3, r1, r5
   193b8:	movge	r3, #0
   193bc:	movlt	r3, #1
   193c0:	cmp	r3, #0
   193c4:	bne	193e8 <el_line@plt+0x16f34>
   193c8:	mov	r0, r4
   193cc:	mov	r1, r5
   193d0:	pop	{r3, r4, r5, pc}
   193d4:	cmp	r4, r0
   193d8:	sbcs	ip, r5, r1
   193dc:	movge	r3, #0
   193e0:	movlt	r3, #1
   193e4:	b	193c0 <el_line@plt+0x16f0c>
   193e8:	bl	20f4 <abort@plt>
   193ec:	smull	r0, r1, r0, r1
   193f0:	push	{r3, lr}
   193f4:	cmp	r1, r0, asr #31
   193f8:	popeq	{r3, pc}
   193fc:	bl	20f4 <abort@plt>
   19400:	cmp	r1, r0, asr #31
   19404:	push	{r3, r4, r5, r6, r7, lr}
   19408:	bne	1941c <el_line@plt+0x16f68>
   1940c:	cmp	r3, r2, asr #31
   19410:	bne	19458 <el_line@plt+0x16fa4>
   19414:	smull	r0, r1, r0, r2
   19418:	pop	{r3, r4, r5, r6, r7, pc}
   1941c:	cmp	r3, r2, asr #31
   19420:	bne	19488 <el_line@plt+0x16fd4>
   19424:	umull	r4, r5, r1, r2
   19428:	cmp	r1, #0
   1942c:	umull	r6, r7, r2, r0
   19430:	rsblt	r5, r2, r5
   19434:	cmp	r2, #0
   19438:	blt	1947c <el_line@plt+0x16fc8>
   1943c:	adds	r4, r4, r7
   19440:	adc	r5, r5, #0
   19444:	cmp	r5, r4, asr #31
   19448:	bne	194b8 <el_line@plt+0x17004>
   1944c:	mov	r0, r6
   19450:	mov	r1, r4
   19454:	pop	{r3, r4, r5, r6, r7, pc}
   19458:	umull	r4, r5, r3, r0
   1945c:	cmp	r3, #0
   19460:	umull	r6, r7, r2, r0
   19464:	rsblt	r5, r0, r5
   19468:	cmp	r0, #0
   1946c:	bge	1943c <el_line@plt+0x16f88>
   19470:	subs	r4, r4, r2
   19474:	sbc	r5, r5, r3
   19478:	b	1943c <el_line@plt+0x16f88>
   1947c:	subs	r4, r4, r0
   19480:	sbc	r5, r5, r1
   19484:	b	1943c <el_line@plt+0x16f88>
   19488:	cmp	r1, #0
   1948c:	blt	194bc <el_line@plt+0x17008>
   19490:	cmp	r3, #0
   19494:	blt	194ec <el_line@plt+0x17038>
   19498:	cmp	r1, #0
   1949c:	bne	194b8 <el_line@plt+0x17004>
   194a0:	cmp	r3, #0
   194a4:	bne	194b8 <el_line@plt+0x17004>
   194a8:	umull	r0, r1, r2, r0
   194ac:	cmp	r0, #0
   194b0:	sbcs	r3, r1, #0
   194b4:	popge	{r3, r4, r5, r6, r7, pc}
   194b8:	bl	20f4 <abort@plt>
   194bc:	cmp	r3, #0
   194c0:	blt	19514 <el_line@plt+0x17060>
   194c4:	cmn	r1, #1
   194c8:	bne	194b8 <el_line@plt+0x17004>
   194cc:	cmp	r3, #0
   194d0:	bne	194b8 <el_line@plt+0x17004>
   194d4:	umull	r4, r5, r2, r0
   194d8:	subs	r2, r5, r2
   194dc:	bpl	194b8 <el_line@plt+0x17004>
   194e0:	mov	r0, r4
   194e4:	mov	r1, r2
   194e8:	pop	{r3, r4, r5, r6, r7, pc}
   194ec:	cmp	r1, #0
   194f0:	bne	194b8 <el_line@plt+0x17004>
   194f4:	cmn	r3, #1
   194f8:	bne	194b8 <el_line@plt+0x17004>
   194fc:	umull	r2, r3, r2, r0
   19500:	subs	ip, r3, r0
   19504:	bpl	194b8 <el_line@plt+0x17004>
   19508:	mov	r0, r2
   1950c:	mov	r1, ip
   19510:	pop	{r3, r4, r5, r6, r7, pc}
   19514:	and	ip, r3, r1
   19518:	cmn	ip, #1
   1951c:	bne	194b8 <el_line@plt+0x17004>
   19520:	orrs	ip, r2, r0
   19524:	beq	194b8 <el_line@plt+0x17004>
   19528:	umull	r4, r5, r2, r0
   1952c:	rsb	r0, r0, r5
   19530:	subs	r2, r0, r2
   19534:	bpl	194e0 <el_line@plt+0x1702c>
   19538:	b	194b8 <el_line@plt+0x17004>
   1953c:	cmp	r0, #0
   19540:	rsb	r0, r0, #0
   19544:	push	{r3, lr}
   19548:	lsrlt	r3, r0, #31
   1954c:	blt	1955c <el_line@plt+0x170a8>
   19550:	cmp	r0, #0
   19554:	movle	r3, #0
   19558:	movgt	r3, #1
   1955c:	cmp	r3, #0
   19560:	popeq	{r3, pc}
   19564:	bl	20f4 <abort@plt>
   19568:	vmov	d7, r0, r1
   1956c:	vldr	d5, [pc, #44]	; 195a0 <el_line@plt+0x170ec>
   19570:	vldr	d6, [pc, #48]	; 195a8 <el_line@plt+0x170f4>
   19574:	mov	r0, #0
   19578:	vmul.f64	d5, d7, d5
   1957c:	vcvt.u32.f64	s9, d5
   19580:	vcvt.f64.u32	d5, s9
   19584:	vmov	r1, s9
   19588:	vmls.f64	d7, d5, d6
   1958c:	vcvt.u32.f64	s14, d7
   19590:	vmov	r3, s14
   19594:	orr	r0, r0, r3
   19598:	bx	lr
   1959c:	nop	{0}
   195a0:	andeq	r0, r0, r0
   195a4:	ldclcc	0, cr0, [r0]
   195a8:	andeq	r0, r0, r0
   195ac:	mvnsmi	r0, r0
   195b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195b4:	mov	r8, r2
   195b8:	mov	r6, r0
   195bc:	mov	r7, r1
   195c0:	mov	sl, r3
   195c4:	ldr	r9, [sp, #32]
   195c8:	bl	19628 <el_line@plt+0x17174>
   195cc:	umull	r4, r5, r8, r0
   195d0:	mul	r8, r8, r1
   195d4:	mla	r2, r0, sl, r8
   195d8:	add	r5, r2, r5
   195dc:	subs	r4, r6, r4
   195e0:	sbc	r5, r7, r5
   195e4:	strd	r4, [r9]
   195e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   195ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   195f0:	mov	r8, r2
   195f4:	mov	r6, r0
   195f8:	mov	r7, r1
   195fc:	mov	r5, r3
   19600:	ldr	r9, [sp, #32]
   19604:	bl	19ab4 <el_line@plt+0x17600>
   19608:	mul	r3, r0, r5
   1960c:	umull	r4, r5, r0, r8
   19610:	mla	r8, r8, r1, r3
   19614:	add	r5, r8, r5
   19618:	subs	r4, r6, r4
   1961c:	sbc	r5, r7, r5
   19620:	strd	r4, [r9]
   19624:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1962c:	rsbs	r4, r0, #0
   19630:	rsc	r5, r1, #0
   19634:	cmp	r1, #0
   19638:	mvn	r6, #0
   1963c:	sub	sp, sp, #12
   19640:	movge	r4, r0
   19644:	movge	r5, r1
   19648:	movge	r6, #0
   1964c:	cmp	r3, #0
   19650:	blt	19888 <el_line@plt+0x173d4>
   19654:	cmp	r3, #0
   19658:	mov	sl, r4
   1965c:	mov	ip, r5
   19660:	mov	r0, r2
   19664:	mov	r1, r3
   19668:	mov	r8, r2
   1966c:	mov	r7, r4
   19670:	mov	r9, r5
   19674:	bne	1976c <el_line@plt+0x172b8>
   19678:	cmp	r2, r5
   1967c:	bls	197a8 <el_line@plt+0x172f4>
   19680:	clz	r3, r2
   19684:	cmp	r3, #0
   19688:	rsbne	r2, r3, #32
   1968c:	lslne	r8, r0, r3
   19690:	lsrne	r2, r4, r2
   19694:	lslne	r7, r4, r3
   19698:	orrne	r9, r2, r5, lsl r3
   1969c:	lsr	r4, r8, #16
   196a0:	uxth	sl, r8
   196a4:	mov	r1, r4
   196a8:	mov	r0, r9
   196ac:	bl	187d4 <el_line@plt+0x16320>
   196b0:	mov	r1, r4
   196b4:	mov	fp, r0
   196b8:	mov	r0, r9
   196bc:	bl	189c0 <el_line@plt+0x1650c>
   196c0:	mul	r0, sl, fp
   196c4:	lsr	r2, r7, #16
   196c8:	orr	r1, r2, r1, lsl #16
   196cc:	cmp	r0, r1
   196d0:	bls	196f4 <el_line@plt+0x17240>
   196d4:	adds	r1, r1, r8
   196d8:	sub	r3, fp, #1
   196dc:	bcs	196f0 <el_line@plt+0x1723c>
   196e0:	cmp	r0, r1
   196e4:	subhi	fp, fp, #2
   196e8:	addhi	r1, r1, r8
   196ec:	bhi	196f4 <el_line@plt+0x17240>
   196f0:	mov	fp, r3
   196f4:	rsb	r9, r0, r1
   196f8:	mov	r1, r4
   196fc:	uxth	r7, r7
   19700:	mov	r0, r9
   19704:	bl	187d4 <el_line@plt+0x16320>
   19708:	mov	r1, r4
   1970c:	mov	r5, r0
   19710:	mov	r0, r9
   19714:	bl	189c0 <el_line@plt+0x1650c>
   19718:	mul	sl, sl, r5
   1971c:	orr	r1, r7, r1, lsl #16
   19720:	cmp	sl, r1
   19724:	bls	19744 <el_line@plt+0x17290>
   19728:	adds	r8, r1, r8
   1972c:	sub	r3, r5, #1
   19730:	bcs	19740 <el_line@plt+0x1728c>
   19734:	cmp	sl, r8
   19738:	subhi	r5, r5, #2
   1973c:	bhi	19744 <el_line@plt+0x17290>
   19740:	mov	r5, r3
   19744:	orr	r3, r5, fp, lsl #16
   19748:	mov	r4, #0
   1974c:	cmp	r6, #0
   19750:	mov	r0, r3
   19754:	mov	r1, r4
   19758:	beq	19764 <el_line@plt+0x172b0>
   1975c:	rsbs	r0, r0, #0
   19760:	rsc	r1, r1, #0
   19764:	add	sp, sp, #12
   19768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1976c:	cmp	r3, r5
   19770:	movhi	r4, #0
   19774:	movhi	r3, r4
   19778:	bhi	1974c <el_line@plt+0x17298>
   1977c:	clz	r5, r1
   19780:	cmp	r5, #0
   19784:	bne	19974 <el_line@plt+0x174c0>
   19788:	cmp	r1, ip
   1978c:	cmpcs	r2, sl
   19790:	movhi	r4, #0
   19794:	movls	r4, #1
   19798:	movls	r3, #1
   1979c:	movls	r4, r5
   197a0:	movhi	r3, r4
   197a4:	b	1974c <el_line@plt+0x17298>
   197a8:	cmp	r2, #0
   197ac:	bne	197c0 <el_line@plt+0x1730c>
   197b0:	mov	r1, r2
   197b4:	mov	r0, #1
   197b8:	bl	187d4 <el_line@plt+0x16320>
   197bc:	mov	r8, r0
   197c0:	clz	r3, r8
   197c4:	cmp	r3, #0
   197c8:	bne	19898 <el_line@plt+0x173e4>
   197cc:	rsb	r9, r8, r9
   197d0:	lsr	r5, r8, #16
   197d4:	uxth	sl, r8
   197d8:	mov	r4, #1
   197dc:	mov	r1, r5
   197e0:	mov	r0, r9
   197e4:	bl	187d4 <el_line@plt+0x16320>
   197e8:	mov	r1, r5
   197ec:	mov	fp, r0
   197f0:	mov	r0, r9
   197f4:	bl	189c0 <el_line@plt+0x1650c>
   197f8:	mul	r0, sl, fp
   197fc:	lsr	r2, r7, #16
   19800:	orr	r1, r2, r1, lsl #16
   19804:	cmp	r0, r1
   19808:	bls	19828 <el_line@plt+0x17374>
   1980c:	adds	r1, r1, r8
   19810:	sub	r3, fp, #1
   19814:	bcs	19a94 <el_line@plt+0x175e0>
   19818:	cmp	r0, r1
   1981c:	subhi	fp, fp, #2
   19820:	addhi	r1, r1, r8
   19824:	bls	19a94 <el_line@plt+0x175e0>
   19828:	rsb	r2, r0, r1
   1982c:	mov	r1, r5
   19830:	str	r2, [sp]
   19834:	uxth	r7, r7
   19838:	mov	r0, r2
   1983c:	bl	187d4 <el_line@plt+0x16320>
   19840:	ldr	r2, [sp]
   19844:	mov	r1, r5
   19848:	mov	r9, r0
   1984c:	mov	r0, r2
   19850:	bl	189c0 <el_line@plt+0x1650c>
   19854:	mul	sl, sl, r9
   19858:	orr	r1, r7, r1, lsl #16
   1985c:	cmp	sl, r1
   19860:	bls	19880 <el_line@plt+0x173cc>
   19864:	adds	r8, r1, r8
   19868:	sub	r3, r9, #1
   1986c:	bcs	1987c <el_line@plt+0x173c8>
   19870:	cmp	sl, r8
   19874:	subhi	r9, r9, #2
   19878:	bhi	19880 <el_line@plt+0x173cc>
   1987c:	mov	r9, r3
   19880:	orr	r3, r9, fp, lsl #16
   19884:	b	1974c <el_line@plt+0x17298>
   19888:	mvn	r6, r6
   1988c:	rsbs	r2, r2, #0
   19890:	rsc	r3, r3, #0
   19894:	b	19654 <el_line@plt+0x171a0>
   19898:	lsl	r8, r8, r3
   1989c:	rsb	fp, r3, #32
   198a0:	lsr	r4, r9, fp
   198a4:	lsr	fp, r7, fp
   198a8:	lsr	r5, r8, #16
   198ac:	orr	fp, fp, r9, lsl r3
   198b0:	mov	r0, r4
   198b4:	lsl	r7, r7, r3
   198b8:	mov	r1, r5
   198bc:	uxth	sl, r8
   198c0:	bl	187d4 <el_line@plt+0x16320>
   198c4:	mov	r1, r5
   198c8:	mov	r3, r0
   198cc:	mov	r0, r4
   198d0:	str	r3, [sp]
   198d4:	bl	189c0 <el_line@plt+0x1650c>
   198d8:	ldr	r3, [sp]
   198dc:	lsr	r2, fp, #16
   198e0:	mul	r0, sl, r3
   198e4:	orr	r1, r2, r1, lsl #16
   198e8:	cmp	r0, r1
   198ec:	bls	1990c <el_line@plt+0x17458>
   198f0:	adds	r1, r1, r8
   198f4:	sub	r2, r3, #1
   198f8:	bcs	19aac <el_line@plt+0x175f8>
   198fc:	cmp	r0, r1
   19900:	subhi	r3, r3, #2
   19904:	addhi	r1, r1, r8
   19908:	bls	19aac <el_line@plt+0x175f8>
   1990c:	rsb	r9, r0, r1
   19910:	mov	r1, r5
   19914:	str	r3, [sp]
   19918:	uxth	fp, fp
   1991c:	mov	r0, r9
   19920:	bl	187d4 <el_line@plt+0x16320>
   19924:	mov	r1, r5
   19928:	mov	r4, r0
   1992c:	mov	r0, r9
   19930:	bl	189c0 <el_line@plt+0x1650c>
   19934:	mul	r9, sl, r4
   19938:	ldr	r3, [sp]
   1993c:	orr	r1, fp, r1, lsl #16
   19940:	cmp	r9, r1
   19944:	bls	19968 <el_line@plt+0x174b4>
   19948:	adds	r1, r1, r8
   1994c:	sub	r2, r4, #1
   19950:	bcs	19964 <el_line@plt+0x174b0>
   19954:	cmp	r9, r1
   19958:	subhi	r4, r4, #2
   1995c:	addhi	r1, r1, r8
   19960:	bhi	19968 <el_line@plt+0x174b4>
   19964:	mov	r4, r2
   19968:	rsb	r9, r9, r1
   1996c:	orr	r4, r4, r3, lsl #16
   19970:	b	197dc <el_line@plt+0x17328>
   19974:	rsb	sl, r5, #32
   19978:	lsl	r3, r2, r5
   1997c:	lsr	r0, r2, sl
   19980:	lsr	r2, ip, sl
   19984:	orr	r4, r0, r1, lsl r5
   19988:	lsr	sl, r7, sl
   1998c:	mov	r0, r2
   19990:	orr	sl, sl, ip, lsl r5
   19994:	lsr	r9, r4, #16
   19998:	str	r3, [sp, #4]
   1999c:	str	r2, [sp]
   199a0:	uxth	fp, r4
   199a4:	mov	r1, r9
   199a8:	bl	187d4 <el_line@plt+0x16320>
   199ac:	ldr	r2, [sp]
   199b0:	mov	r1, r9
   199b4:	mov	r8, r0
   199b8:	mov	r0, r2
   199bc:	bl	189c0 <el_line@plt+0x1650c>
   199c0:	mul	r0, fp, r8
   199c4:	lsr	r2, sl, #16
   199c8:	orr	r1, r2, r1, lsl #16
   199cc:	cmp	r0, r1
   199d0:	bls	199f0 <el_line@plt+0x1753c>
   199d4:	adds	r1, r1, r4
   199d8:	sub	r2, r8, #1
   199dc:	bcs	19aa4 <el_line@plt+0x175f0>
   199e0:	cmp	r0, r1
   199e4:	subhi	r8, r8, #2
   199e8:	addhi	r1, r1, r4
   199ec:	bls	19aa4 <el_line@plt+0x175f0>
   199f0:	rsb	ip, r0, r1
   199f4:	mov	r1, r9
   199f8:	str	ip, [sp]
   199fc:	mov	r0, ip
   19a00:	bl	187d4 <el_line@plt+0x16320>
   19a04:	ldr	ip, [sp]
   19a08:	mov	r1, r9
   19a0c:	mov	r2, r0
   19a10:	mov	r0, ip
   19a14:	str	r2, [sp]
   19a18:	bl	189c0 <el_line@plt+0x1650c>
   19a1c:	ldr	r2, [sp]
   19a20:	uxth	ip, sl
   19a24:	mul	fp, fp, r2
   19a28:	orr	ip, ip, r1, lsl #16
   19a2c:	cmp	fp, ip
   19a30:	bls	19a50 <el_line@plt+0x1759c>
   19a34:	adds	ip, ip, r4
   19a38:	sub	r1, r2, #1
   19a3c:	bcs	19a9c <el_line@plt+0x175e8>
   19a40:	cmp	fp, ip
   19a44:	subhi	r2, r2, #2
   19a48:	addhi	ip, ip, r4
   19a4c:	bls	19a9c <el_line@plt+0x175e8>
   19a50:	ldr	r0, [sp, #4]
   19a54:	orr	r1, r2, r8, lsl #16
   19a58:	rsb	fp, fp, ip
   19a5c:	umull	r2, r3, r1, r0
   19a60:	cmp	fp, r3
   19a64:	bcc	19a88 <el_line@plt+0x175d4>
   19a68:	movne	r4, #0
   19a6c:	moveq	r4, #1
   19a70:	cmp	r2, r7, lsl r5
   19a74:	movls	r4, #0
   19a78:	andhi	r4, r4, #1
   19a7c:	cmp	r4, #0
   19a80:	moveq	r3, r1
   19a84:	beq	1974c <el_line@plt+0x17298>
   19a88:	sub	r3, r1, #1
   19a8c:	mov	r4, #0
   19a90:	b	1974c <el_line@plt+0x17298>
   19a94:	mov	fp, r3
   19a98:	b	19828 <el_line@plt+0x17374>
   19a9c:	mov	r2, r1
   19aa0:	b	19a50 <el_line@plt+0x1759c>
   19aa4:	mov	r8, r2
   19aa8:	b	199f0 <el_line@plt+0x1753c>
   19aac:	mov	r3, r2
   19ab0:	b	1990c <el_line@plt+0x17458>
   19ab4:	cmp	r3, #0
   19ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19abc:	mov	r6, r0
   19ac0:	sub	sp, sp, #12
   19ac4:	mov	r5, r1
   19ac8:	mov	r7, r0
   19acc:	mov	r4, r2
   19ad0:	mov	r8, r1
   19ad4:	bne	19bb4 <el_line@plt+0x17700>
   19ad8:	cmp	r2, r1
   19adc:	bls	19bf0 <el_line@plt+0x1773c>
   19ae0:	clz	r3, r2
   19ae4:	cmp	r3, #0
   19ae8:	rsbne	r8, r3, #32
   19aec:	lslne	r4, r2, r3
   19af0:	lsrne	r8, r0, r8
   19af4:	lslne	r7, r0, r3
   19af8:	orrne	r8, r8, r1, lsl r3
   19afc:	lsr	r5, r4, #16
   19b00:	uxth	sl, r4
   19b04:	mov	r1, r5
   19b08:	mov	r0, r8
   19b0c:	bl	187d4 <el_line@plt+0x16320>
   19b10:	mov	r1, r5
   19b14:	mov	r9, r0
   19b18:	mov	r0, r8
   19b1c:	bl	189c0 <el_line@plt+0x1650c>
   19b20:	mul	r0, sl, r9
   19b24:	lsr	r3, r7, #16
   19b28:	orr	r1, r3, r1, lsl #16
   19b2c:	cmp	r0, r1
   19b30:	bls	19b54 <el_line@plt+0x176a0>
   19b34:	adds	r1, r1, r4
   19b38:	sub	r2, r9, #1
   19b3c:	bcs	19b50 <el_line@plt+0x1769c>
   19b40:	cmp	r0, r1
   19b44:	subhi	r9, r9, #2
   19b48:	addhi	r1, r1, r4
   19b4c:	bhi	19b54 <el_line@plt+0x176a0>
   19b50:	mov	r9, r2
   19b54:	rsb	r8, r0, r1
   19b58:	mov	r1, r5
   19b5c:	uxth	r7, r7
   19b60:	mov	r0, r8
   19b64:	bl	187d4 <el_line@plt+0x16320>
   19b68:	mov	r1, r5
   19b6c:	mov	r6, r0
   19b70:	mov	r0, r8
   19b74:	bl	189c0 <el_line@plt+0x1650c>
   19b78:	mul	sl, sl, r6
   19b7c:	orr	r1, r7, r1, lsl #16
   19b80:	cmp	sl, r1
   19b84:	bls	19ba0 <el_line@plt+0x176ec>
   19b88:	adds	r4, r1, r4
   19b8c:	sub	r3, r6, #1
   19b90:	bcs	19e9c <el_line@plt+0x179e8>
   19b94:	cmp	sl, r4
   19b98:	subhi	r6, r6, #2
   19b9c:	bls	19e9c <el_line@plt+0x179e8>
   19ba0:	orr	r0, r6, r9, lsl #16
   19ba4:	mov	r6, #0
   19ba8:	mov	r1, r6
   19bac:	add	sp, sp, #12
   19bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bb4:	cmp	r3, r1
   19bb8:	movhi	r6, #0
   19bbc:	movhi	r0, r6
   19bc0:	bhi	19ba8 <el_line@plt+0x176f4>
   19bc4:	clz	r7, r3
   19bc8:	cmp	r7, #0
   19bcc:	bne	19ccc <el_line@plt+0x17818>
   19bd0:	cmp	r3, r1
   19bd4:	cmpcs	r2, r6
   19bd8:	movhi	r6, #0
   19bdc:	movls	r6, #1
   19be0:	movls	r0, #1
   19be4:	movls	r6, r7
   19be8:	movhi	r0, r6
   19bec:	b	19ba8 <el_line@plt+0x176f4>
   19bf0:	cmp	r2, #0
   19bf4:	bne	19c08 <el_line@plt+0x17754>
   19bf8:	mov	r1, r2
   19bfc:	mov	r0, #1
   19c00:	bl	187d4 <el_line@plt+0x16320>
   19c04:	mov	r4, r0
   19c08:	clz	r3, r4
   19c0c:	cmp	r3, #0
   19c10:	bne	19dc8 <el_line@plt+0x17914>
   19c14:	rsb	r5, r4, r5
   19c18:	lsr	r8, r4, #16
   19c1c:	uxth	sl, r4
   19c20:	mov	r6, #1
   19c24:	mov	r1, r8
   19c28:	mov	r0, r5
   19c2c:	bl	187d4 <el_line@plt+0x16320>
   19c30:	mov	r1, r8
   19c34:	mov	r9, r0
   19c38:	mov	r0, r5
   19c3c:	bl	189c0 <el_line@plt+0x1650c>
   19c40:	mul	r0, sl, r9
   19c44:	lsr	r3, r7, #16
   19c48:	orr	r1, r3, r1, lsl #16
   19c4c:	cmp	r0, r1
   19c50:	bls	19c70 <el_line@plt+0x177bc>
   19c54:	adds	r1, r1, r4
   19c58:	sub	r2, r9, #1
   19c5c:	bcs	19ea4 <el_line@plt+0x179f0>
   19c60:	cmp	r0, r1
   19c64:	subhi	r9, r9, #2
   19c68:	addhi	r1, r1, r4
   19c6c:	bls	19ea4 <el_line@plt+0x179f0>
   19c70:	rsb	fp, r0, r1
   19c74:	mov	r1, r8
   19c78:	uxth	r7, r7
   19c7c:	mov	r0, fp
   19c80:	bl	187d4 <el_line@plt+0x16320>
   19c84:	mov	r1, r8
   19c88:	mov	r5, r0
   19c8c:	mov	r0, fp
   19c90:	bl	189c0 <el_line@plt+0x1650c>
   19c94:	mul	sl, sl, r5
   19c98:	orr	r1, r7, r1, lsl #16
   19c9c:	cmp	sl, r1
   19ca0:	bls	19cbc <el_line@plt+0x17808>
   19ca4:	adds	r4, r1, r4
   19ca8:	sub	r3, r5, #1
   19cac:	bcs	19eac <el_line@plt+0x179f8>
   19cb0:	cmp	sl, r4
   19cb4:	subhi	r5, r5, #2
   19cb8:	bls	19eac <el_line@plt+0x179f8>
   19cbc:	orr	r0, r5, r9, lsl #16
   19cc0:	mov	r1, r6
   19cc4:	add	sp, sp, #12
   19cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ccc:	rsb	r1, r7, #32
   19cd0:	lsl	r0, r2, r7
   19cd4:	lsr	r2, r2, r1
   19cd8:	lsr	fp, r5, r1
   19cdc:	orr	r8, r2, r3, lsl r7
   19ce0:	lsr	r1, r6, r1
   19ce4:	str	r0, [sp, #4]
   19ce8:	orr	r5, r1, r5, lsl r7
   19cec:	lsr	r9, r8, #16
   19cf0:	mov	r0, fp
   19cf4:	uxth	sl, r8
   19cf8:	mov	r1, r9
   19cfc:	bl	187d4 <el_line@plt+0x16320>
   19d00:	mov	r1, r9
   19d04:	mov	r4, r0
   19d08:	mov	r0, fp
   19d0c:	bl	189c0 <el_line@plt+0x1650c>
   19d10:	mul	r0, sl, r4
   19d14:	lsr	ip, r5, #16
   19d18:	orr	r1, ip, r1, lsl #16
   19d1c:	cmp	r0, r1
   19d20:	bls	19d34 <el_line@plt+0x17880>
   19d24:	adds	r1, r1, r8
   19d28:	sub	r2, r4, #1
   19d2c:	bcc	19ec8 <el_line@plt+0x17a14>
   19d30:	mov	r4, r2
   19d34:	rsb	ip, r0, r1
   19d38:	mov	r1, r9
   19d3c:	str	ip, [sp]
   19d40:	uxth	r5, r5
   19d44:	mov	r0, ip
   19d48:	bl	187d4 <el_line@plt+0x16320>
   19d4c:	ldr	ip, [sp]
   19d50:	mov	r1, r9
   19d54:	mov	fp, r0
   19d58:	mov	r0, ip
   19d5c:	bl	189c0 <el_line@plt+0x1650c>
   19d60:	mul	sl, sl, fp
   19d64:	orr	r1, r5, r1, lsl #16
   19d68:	cmp	sl, r1
   19d6c:	bls	19d80 <el_line@plt+0x178cc>
   19d70:	adds	r1, r1, r8
   19d74:	sub	r2, fp, #1
   19d78:	bcc	19eb4 <el_line@plt+0x17a00>
   19d7c:	mov	fp, r2
   19d80:	ldr	r3, [sp, #4]
   19d84:	orr	r0, fp, r4, lsl #16
   19d88:	rsb	sl, sl, r1
   19d8c:	umull	r4, r5, r0, r3
   19d90:	cmp	sl, r5
   19d94:	bcc	19db4 <el_line@plt+0x17900>
   19d98:	movne	r3, #0
   19d9c:	moveq	r3, #1
   19da0:	cmp	r4, r6, lsl r7
   19da4:	movls	r6, #0
   19da8:	andhi	r6, r3, #1
   19dac:	cmp	r6, #0
   19db0:	beq	19ba8 <el_line@plt+0x176f4>
   19db4:	mov	r6, #0
   19db8:	sub	r0, r0, #1
   19dbc:	mov	r1, r6
   19dc0:	add	sp, sp, #12
   19dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19dc8:	lsl	r4, r4, r3
   19dcc:	rsb	r9, r3, #32
   19dd0:	lsr	r2, r5, r9
   19dd4:	lsr	r9, r6, r9
   19dd8:	lsr	r8, r4, #16
   19ddc:	orr	r9, r9, r5, lsl r3
   19de0:	mov	r0, r2
   19de4:	lsl	r7, r6, r3
   19de8:	mov	r1, r8
   19dec:	str	r2, [sp]
   19df0:	bl	187d4 <el_line@plt+0x16320>
   19df4:	ldr	r2, [sp]
   19df8:	mov	r1, r8
   19dfc:	uxth	sl, r4
   19e00:	mov	fp, r0
   19e04:	mov	r0, r2
   19e08:	bl	189c0 <el_line@plt+0x1650c>
   19e0c:	mul	r0, sl, fp
   19e10:	lsr	r3, r9, #16
   19e14:	orr	r1, r3, r1, lsl #16
   19e18:	cmp	r0, r1
   19e1c:	bls	19e3c <el_line@plt+0x17988>
   19e20:	adds	r1, r1, r4
   19e24:	sub	r3, fp, #1
   19e28:	bcs	19edc <el_line@plt+0x17a28>
   19e2c:	cmp	r0, r1
   19e30:	subhi	fp, fp, #2
   19e34:	addhi	r1, r1, r4
   19e38:	bls	19edc <el_line@plt+0x17a28>
   19e3c:	rsb	r5, r0, r1
   19e40:	mov	r1, r8
   19e44:	uxth	r9, r9
   19e48:	mov	r0, r5
   19e4c:	bl	187d4 <el_line@plt+0x16320>
   19e50:	mov	r1, r8
   19e54:	mov	r6, r0
   19e58:	mov	r0, r5
   19e5c:	bl	189c0 <el_line@plt+0x1650c>
   19e60:	mul	r5, sl, r6
   19e64:	orr	r1, r9, r1, lsl #16
   19e68:	cmp	r5, r1
   19e6c:	bls	19e90 <el_line@plt+0x179dc>
   19e70:	adds	r1, r1, r4
   19e74:	sub	r3, r6, #1
   19e78:	bcs	19e8c <el_line@plt+0x179d8>
   19e7c:	cmp	r5, r1
   19e80:	subhi	r6, r6, #2
   19e84:	addhi	r1, r1, r4
   19e88:	bhi	19e90 <el_line@plt+0x179dc>
   19e8c:	mov	r6, r3
   19e90:	rsb	r5, r5, r1
   19e94:	orr	r6, r6, fp, lsl #16
   19e98:	b	19c24 <el_line@plt+0x17770>
   19e9c:	mov	r6, r3
   19ea0:	b	19ba0 <el_line@plt+0x176ec>
   19ea4:	mov	r9, r2
   19ea8:	b	19c70 <el_line@plt+0x177bc>
   19eac:	mov	r5, r3
   19eb0:	b	19cbc <el_line@plt+0x17808>
   19eb4:	cmp	sl, r1
   19eb8:	subhi	fp, fp, #2
   19ebc:	addhi	r1, r1, r8
   19ec0:	bhi	19d80 <el_line@plt+0x178cc>
   19ec4:	b	19d7c <el_line@plt+0x178c8>
   19ec8:	cmp	r0, r1
   19ecc:	subhi	r4, r4, #2
   19ed0:	addhi	r1, r1, r8
   19ed4:	bhi	19d34 <el_line@plt+0x17880>
   19ed8:	b	19d30 <el_line@plt+0x1787c>
   19edc:	mov	fp, r3
   19ee0:	b	19e3c <el_line@plt+0x17988>

00019ee4 <__libc_csu_init@@Base>:
   19ee4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19ee8:	mov	r7, r0
   19eec:	ldr	r6, [pc, #76]	; 19f40 <__libc_csu_init@@Base+0x5c>
   19ef0:	mov	r8, r1
   19ef4:	ldr	r5, [pc, #72]	; 19f44 <__libc_csu_init@@Base+0x60>
   19ef8:	mov	r9, r2
   19efc:	add	r6, pc, r6
   19f00:	bl	1e58 <_init@@Base>
   19f04:	add	r5, pc, r5
   19f08:	rsb	r6, r5, r6
   19f0c:	asrs	r6, r6, #2
   19f10:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19f14:	sub	r5, r5, #4
   19f18:	mov	r4, #0
   19f1c:	add	r4, r4, #1
   19f20:	ldr	r3, [r5, #4]!
   19f24:	mov	r0, r7
   19f28:	mov	r1, r8
   19f2c:	mov	r2, r9
   19f30:	blx	r3
   19f34:	cmp	r4, r6
   19f38:	bne	19f1c <__libc_csu_init@@Base+0x38>
   19f3c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19f40:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   19f44:	andeq	r4, r1, r8, asr #19

00019f48 <__libc_csu_fini@@Base>:
   19f48:	bx	lr

Disassembly of section .fini:

00019f4c <_fini@@Base>:
   19f4c:	push	{r3, lr}
   19f50:	pop	{r3, pc}
