
centos-preinstalled/stdbuf:     file format elf32-littlearm


Disassembly of section .init:

000112a0 <.init>:
   112a0:	push	{r3, lr}
   112a4:	bl	11f54 <__assert_fail@plt+0x91c>
   112a8:	pop	{r3, pc}

Disassembly of section .plt:

000112ac <fdopen@plt-0x14>:
   112ac:	push	{lr}		; (str lr, [sp, #-4]!)
   112b0:	ldr	lr, [pc, #4]	; 112bc <fdopen@plt-0x4>
   112b4:	add	lr, pc, lr
   112b8:	ldr	pc, [lr, #8]!
   112bc:	andeq	fp, r1, r4, asr #26

000112c0 <fdopen@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #110592	; 0x1b000
   112c8:	ldr	pc, [ip, #3396]!	; 0xd44

000112cc <calloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #110592	; 0x1b000
   112d4:	ldr	pc, [ip, #3388]!	; 0xd3c

000112d8 <fputs_unlocked@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #110592	; 0x1b000
   112e0:	ldr	pc, [ip, #3380]!	; 0xd34

000112e4 <raise@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #110592	; 0x1b000
   112ec:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f0 <iconv_close@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #110592	; 0x1b000
   112f8:	ldr	pc, [ip, #3364]!	; 0xd24

000112fc <iconv@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #110592	; 0x1b000
   11304:	ldr	pc, [ip, #3356]!	; 0xd1c

00011308 <strcmp@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #110592	; 0x1b000
   11310:	ldr	pc, [ip, #3348]!	; 0xd14

00011314 <fflush@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #110592	; 0x1b000
   1131c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011320 <wcwidth@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #110592	; 0x1b000
   11328:	ldr	pc, [ip, #3332]!	; 0xd04

0001132c <memmove@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #110592	; 0x1b000
   11334:	ldr	pc, [ip, #3324]!	; 0xcfc

00011338 <free@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #110592	; 0x1b000
   11340:	ldr	pc, [ip, #3316]!	; 0xcf4

00011344 <_exit@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #110592	; 0x1b000
   1134c:	ldr	pc, [ip, #3308]!	; 0xcec

00011350 <memcpy@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #110592	; 0x1b000
   11358:	ldr	pc, [ip, #3300]!	; 0xce4

0001135c <execvp@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #110592	; 0x1b000
   11364:	ldr	pc, [ip, #3292]!	; 0xcdc

00011368 <__strtoull_internal@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #110592	; 0x1b000
   11370:	ldr	pc, [ip, #3284]!	; 0xcd4

00011374 <mbsinit@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #110592	; 0x1b000
   1137c:	ldr	pc, [ip, #3276]!	; 0xccc

00011380 <memcmp@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #110592	; 0x1b000
   11388:	ldr	pc, [ip, #3268]!	; 0xcc4

0001138c <dcgettext@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #110592	; 0x1b000
   11394:	ldr	pc, [ip, #3260]!	; 0xcbc

00011398 <__stack_chk_fail@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #110592	; 0x1b000
   113a0:	ldr	pc, [ip, #3252]!	; 0xcb4

000113a4 <realloc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #110592	; 0x1b000
   113ac:	ldr	pc, [ip, #3244]!	; 0xcac

000113b0 <textdomain@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #110592	; 0x1b000
   113b8:	ldr	pc, [ip, #3236]!	; 0xca4

000113bc <iswcntrl@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #110592	; 0x1b000
   113c4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113c8 <iswprint@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #110592	; 0x1b000
   113d0:	ldr	pc, [ip, #3220]!	; 0xc94

000113d4 <readlink@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #110592	; 0x1b000
   113dc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e0 <fwrite@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #110592	; 0x1b000
   113e8:	ldr	pc, [ip, #3204]!	; 0xc84

000113ec <lseek64@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #110592	; 0x1b000
   113f4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113f8 <__ctype_get_mb_cur_max@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #110592	; 0x1b000
   11400:	ldr	pc, [ip, #3188]!	; 0xc74

00011404 <strcpy@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #110592	; 0x1b000
   1140c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011410 <__fpending@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #110592	; 0x1b000
   11418:	ldr	pc, [ip, #3172]!	; 0xc64

0001141c <mbrtowc@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #110592	; 0x1b000
   11424:	ldr	pc, [ip, #3164]!	; 0xc5c

00011428 <error@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #110592	; 0x1b000
   11430:	ldr	pc, [ip, #3156]!	; 0xc54

00011434 <open64@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #110592	; 0x1b000
   1143c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011440 <getenv@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #110592	; 0x1b000
   11448:	ldr	pc, [ip, #3140]!	; 0xc44

0001144c <malloc@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #110592	; 0x1b000
   11454:	ldr	pc, [ip, #3132]!	; 0xc3c

00011458 <iconv_open@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #110592	; 0x1b000
   11460:	ldr	pc, [ip, #3124]!	; 0xc34

00011464 <__libc_start_main@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #110592	; 0x1b000
   1146c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011470 <__freading@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #110592	; 0x1b000
   11478:	ldr	pc, [ip, #3108]!	; 0xc24

0001147c <__ctype_toupper_loc@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #110592	; 0x1b000
   11484:	ldr	pc, [ip, #3100]!	; 0xc1c

00011488 <__gmon_start__@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #110592	; 0x1b000
   11490:	ldr	pc, [ip, #3092]!	; 0xc14

00011494 <mempcpy@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #110592	; 0x1b000
   1149c:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a0 <getopt_long@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #110592	; 0x1b000
   114a8:	ldr	pc, [ip, #3076]!	; 0xc04

000114ac <__ctype_b_loc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #110592	; 0x1b000
   114b4:	ldr	pc, [ip, #3068]!	; 0xbfc

000114b8 <exit@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #110592	; 0x1b000
   114c0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114c4 <iswspace@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #110592	; 0x1b000
   114cc:	ldr	pc, [ip, #3052]!	; 0xbec

000114d0 <strlen@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #110592	; 0x1b000
   114d8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114dc <strchr@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #110592	; 0x1b000
   114e4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114e8 <ungetc@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #110592	; 0x1b000
   114f0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114f4 <__errno_location@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #110592	; 0x1b000
   114fc:	ldr	pc, [ip, #3020]!	; 0xbcc

00011500 <iswalnum@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #110592	; 0x1b000
   11508:	ldr	pc, [ip, #3012]!	; 0xbc4

0001150c <__sprintf_chk@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #110592	; 0x1b000
   11514:	ldr	pc, [ip, #3004]!	; 0xbbc

00011518 <__cxa_atexit@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #110592	; 0x1b000
   11520:	ldr	pc, [ip, #2996]!	; 0xbb4

00011524 <__strdup@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #110592	; 0x1b000
   1152c:	ldr	pc, [ip, #2988]!	; 0xbac

00011530 <memset@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #110592	; 0x1b000
   11538:	ldr	pc, [ip, #2980]!	; 0xba4

0001153c <fscanf@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #110592	; 0x1b000
   11544:	ldr	pc, [ip, #2972]!	; 0xb9c

00011548 <__printf_chk@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #110592	; 0x1b000
   11550:	ldr	pc, [ip, #2964]!	; 0xb94

00011554 <fileno@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #110592	; 0x1b000
   1155c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011560 <__fprintf_chk@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #110592	; 0x1b000
   11568:	ldr	pc, [ip, #2948]!	; 0xb84

0001156c <memchr@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #110592	; 0x1b000
   11574:	ldr	pc, [ip, #2940]!	; 0xb7c

00011578 <access@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #110592	; 0x1b000
   11580:	ldr	pc, [ip, #2932]!	; 0xb74

00011584 <fclose@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #110592	; 0x1b000
   1158c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011590 <strnlen@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #110592	; 0x1b000
   11598:	ldr	pc, [ip, #2916]!	; 0xb64

0001159c <fseeko64@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #110592	; 0x1b000
   115a4:	ldr	pc, [ip, #2908]!	; 0xb5c

000115a8 <strtok@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #110592	; 0x1b000
   115b0:	ldr	pc, [ip, #2900]!	; 0xb54

000115b4 <__uflow@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #110592	; 0x1b000
   115bc:	ldr	pc, [ip, #2892]!	; 0xb4c

000115c0 <setlocale@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #110592	; 0x1b000
   115c8:	ldr	pc, [ip, #2884]!	; 0xb44

000115cc <putenv@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #110592	; 0x1b000
   115d4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115d8 <strrchr@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #110592	; 0x1b000
   115e0:	ldr	pc, [ip, #2868]!	; 0xb34

000115e4 <nl_langinfo@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #110592	; 0x1b000
   115ec:	ldr	pc, [ip, #2860]!	; 0xb2c

000115f0 <bindtextdomain@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #110592	; 0x1b000
   115f8:	ldr	pc, [ip, #2852]!	; 0xb24

000115fc <__xstat64@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #110592	; 0x1b000
   11604:	ldr	pc, [ip, #2844]!	; 0xb1c

00011608 <strncmp@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #110592	; 0x1b000
   11610:	ldr	pc, [ip, #2836]!	; 0xb14

00011614 <abort@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #110592	; 0x1b000
   1161c:	ldr	pc, [ip, #2828]!	; 0xb0c

00011620 <close@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #110592	; 0x1b000
   11628:	ldr	pc, [ip, #2820]!	; 0xb04

0001162c <__snprintf_chk@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #110592	; 0x1b000
   11634:	ldr	pc, [ip, #2812]!	; 0xafc

00011638 <__assert_fail@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #110592	; 0x1b000
   11640:	ldr	pc, [ip, #2804]!	; 0xaf4

Disassembly of section .text:

00011644 <close_stdout@@Base-0xccc>:
   11644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11648:	sub	sp, sp, #172	; 0xac
   1164c:	ldr	r4, [pc, #2020]	; 11e38 <__assert_fail@plt+0x800>
   11650:	mov	fp, r0
   11654:	ldr	r3, [pc, #2016]	; 11e3c <__assert_fail@plt+0x804>
   11658:	mov	r7, r1
   1165c:	add	r4, pc, r4
   11660:	ldr	r2, [pc, #2008]	; 11e40 <__assert_fail@plt+0x808>
   11664:	ldr	r0, [r1]
   11668:	ldr	r3, [r4, r3]
   1166c:	add	r2, pc, r2
   11670:	str	r2, [sp, #16]
   11674:	ldr	r2, [pc, #1992]	; 11e44 <__assert_fail@plt+0x80c>
   11678:	ldr	r3, [r3]
   1167c:	add	r2, pc, r2
   11680:	str	r2, [sp, #20]
   11684:	ldr	r2, [pc, #1980]	; 11e48 <__assert_fail@plt+0x810>
   11688:	str	r3, [sp, #164]	; 0xa4
   1168c:	add	r2, pc, r2
   11690:	str	r2, [sp, #24]
   11694:	bl	1268c <close_stdout@@Base+0x37c>
   11698:	ldr	r1, [pc, #1964]	; 11e4c <__assert_fail@plt+0x814>
   1169c:	ldr	r5, [pc, #1964]	; 11e50 <__assert_fail@plt+0x818>
   116a0:	mov	r0, #6
   116a4:	add	r1, pc, r1
   116a8:	bl	115c0 <setlocale@plt>
   116ac:	add	r5, pc, r5
   116b0:	ldr	r1, [pc, #1948]	; 11e54 <__assert_fail@plt+0x81c>
   116b4:	mov	r0, r5
   116b8:	add	r1, pc, r1
   116bc:	bl	115f0 <bindtextdomain@plt>
   116c0:	mov	r0, r5
   116c4:	bl	113b0 <textdomain@plt>
   116c8:	ldr	r2, [pc, #1928]	; 11e58 <__assert_fail@plt+0x820>
   116cc:	ldr	r3, [pc, #1928]	; 11e5c <__assert_fail@plt+0x824>
   116d0:	mov	r1, #125	; 0x7d
   116d4:	ldr	r2, [r4, r2]
   116d8:	str	r1, [r2]
   116dc:	ldr	r0, [r4, r3]
   116e0:	bl	1b440 <close_stdout@@Base+0x9130>
   116e4:	ldr	r2, [pc, #1908]	; 11e60 <__assert_fail@plt+0x828>
   116e8:	add	r2, pc, r2
   116ec:	str	r2, [sp, #28]
   116f0:	ldr	r8, [pc, #1900]	; 11e64 <__assert_fail@plt+0x82c>
   116f4:	mov	r9, #12
   116f8:	ldr	r6, [pc, #1896]	; 11e68 <__assert_fail@plt+0x830>
   116fc:	ldr	sl, [pc, #1896]	; 11e6c <__assert_fail@plt+0x834>
   11700:	add	r8, pc, r8
   11704:	add	r6, pc, r6
   11708:	add	sl, pc, sl
   1170c:	mov	r5, #0
   11710:	mov	r0, fp
   11714:	str	r5, [sp]
   11718:	mov	r1, r7
   1171c:	mov	r2, r8
   11720:	mov	r3, r6
   11724:	bl	114a0 <getopt_long@plt>
   11728:	cmn	r0, #1
   1172c:	beq	11910 <__assert_fail@plt+0x2d8>
   11730:	cmp	r0, #101	; 0x65
   11734:	beq	117c4 <__assert_fail@plt+0x18c>
   11738:	bgt	117ac <__assert_fail@plt+0x174>
   1173c:	cmn	r0, #3
   11740:	beq	11754 <__assert_fail@plt+0x11c>
   11744:	cmn	r0, #2
   11748:	bne	117bc <__assert_fail@plt+0x184>
   1174c:	mov	r0, r5
   11750:	bl	1204c <__assert_fail@plt+0xa14>
   11754:	ldr	r2, [pc, #1812]	; 11e70 <__assert_fail@plt+0x838>
   11758:	ldr	r3, [pc, #1812]	; 11e74 <__assert_fail@plt+0x83c>
   1175c:	ldr	r0, [pc, #1812]	; 11e78 <__assert_fail@plt+0x840>
   11760:	ldr	r2, [r4, r2]
   11764:	ldr	r3, [r4, r3]
   11768:	add	r0, pc, r0
   1176c:	ldr	r1, [pc, #1800]	; 11e7c <__assert_fail@plt+0x844>
   11770:	ldr	r4, [r2]
   11774:	add	r1, pc, r1
   11778:	ldr	r6, [r3]
   1177c:	bl	13080 <close_stdout@@Base+0xd70>
   11780:	ldr	r1, [pc, #1784]	; 11e80 <__assert_fail@plt+0x848>
   11784:	ldr	r2, [pc, #1784]	; 11e84 <__assert_fail@plt+0x84c>
   11788:	str	r5, [sp, #4]
   1178c:	add	r1, pc, r1
   11790:	mov	r3, r6
   11794:	add	r2, pc, r2
   11798:	str	r0, [sp]
   1179c:	mov	r0, r4
   117a0:	bl	15520 <close_stdout@@Base+0x3210>
   117a4:	mov	r0, r5
   117a8:	bl	114b8 <exit@plt>
   117ac:	cmp	r0, #105	; 0x69
   117b0:	beq	117c4 <__assert_fail@plt+0x18c>
   117b4:	cmp	r0, #111	; 0x6f
   117b8:	beq	117c4 <__assert_fail@plt+0x18c>
   117bc:	mov	r0, #125	; 0x7d
   117c0:	bl	1204c <__assert_fail@plt+0xa14>
   117c4:	ldr	r2, [sp, #16]
   117c8:	sub	r3, r0, #101	; 0x65
   117cc:	ldr	r5, [r2, r3, lsl #2]
   117d0:	cmp	r5, #2
   117d4:	bhi	11cec <__assert_fail@plt+0x6b4>
   117d8:	ldr	r3, [sp, #20]
   117dc:	mla	r2, r9, r5, r3
   117e0:	ldr	r3, [pc, #1696]	; 11e88 <__assert_fail@plt+0x850>
   117e4:	str	r0, [r2, #4]
   117e8:	ldr	ip, [r4, r3]
   117ec:	ldr	lr, [ip]
   117f0:	mov	r1, lr
   117f4:	ldrb	r3, [lr], #1
   117f8:	sub	r2, r3, #9
   117fc:	cmp	r3, #32
   11800:	cmpne	r2, #4
   11804:	movhi	r3, #0
   11808:	movls	r3, #1
   1180c:	bls	118b8 <__assert_fail@plt+0x280>
   11810:	add	r2, r5, r5, lsl #1
   11814:	cmp	r0, #105	; 0x69
   11818:	add	r2, sl, r2, lsl #2
   1181c:	str	r1, [r2, #8]
   11820:	beq	118d0 <__assert_fail@plt+0x298>
   11824:	ldrb	r3, [r1]
   11828:	cmp	r3, #76	; 0x4c
   1182c:	beq	118c0 <__assert_fail@plt+0x288>
   11830:	ldr	r0, [sp, #24]
   11834:	mov	r1, #0
   11838:	mov	r2, #10
   1183c:	add	r3, sp, #56	; 0x38
   11840:	str	r0, [sp]
   11844:	ldr	r0, [ip]
   11848:	str	ip, [sp, #12]
   1184c:	bl	1595c <close_stdout@@Base+0x364c>
   11850:	ldr	ip, [sp, #12]
   11854:	subs	r6, r0, #0
   11858:	beq	11d08 <__assert_fail@plt+0x6d0>
   1185c:	cmp	r6, #1
   11860:	str	ip, [sp, #12]
   11864:	moveq	r6, #75	; 0x4b
   11868:	movne	r6, #0
   1186c:	bl	114f4 <__errno_location@plt>
   11870:	ldr	ip, [sp, #12]
   11874:	ldr	r1, [pc, #1552]	; 11e8c <__assert_fail@plt+0x854>
   11878:	mov	r2, #5
   1187c:	str	r6, [r0]
   11880:	mov	r0, #0
   11884:	add	r1, pc, r1
   11888:	str	ip, [sp, #12]
   1188c:	bl	1138c <dcgettext@plt>
   11890:	ldr	ip, [sp, #12]
   11894:	mov	r5, r0
   11898:	ldr	r0, [ip]
   1189c:	bl	14aa4 <close_stdout@@Base+0x2794>
   118a0:	mov	r2, r5
   118a4:	mov	r1, r6
   118a8:	mov	r3, r0
   118ac:	mov	r0, #125	; 0x7d
   118b0:	bl	11428 <error@plt>
   118b4:	b	116e4 <__assert_fail@plt+0xac>
   118b8:	str	lr, [ip]
   118bc:	b	117f0 <__assert_fail@plt+0x1b8>
   118c0:	ldrb	r3, [r1, #1]
   118c4:	cmp	r3, #0
   118c8:	beq	1170c <__assert_fail@plt+0xd4>
   118cc:	b	11830 <__assert_fail@plt+0x1f8>
   118d0:	ldrb	r2, [r1]
   118d4:	cmp	r2, #76	; 0x4c
   118d8:	bne	11824 <__assert_fail@plt+0x1ec>
   118dc:	ldr	r1, [pc, #1452]	; 11e90 <__assert_fail@plt+0x858>
   118e0:	mov	r0, r3
   118e4:	add	r1, pc, r1
   118e8:	mov	r2, #5
   118ec:	str	r3, [sp, #12]
   118f0:	bl	1138c <dcgettext@plt>
   118f4:	ldr	r3, [sp, #12]
   118f8:	mov	r1, r3
   118fc:	mov	r2, r0
   11900:	mov	r0, r3
   11904:	bl	11428 <error@plt>
   11908:	mov	r0, #125	; 0x7d
   1190c:	bl	1204c <__assert_fail@plt+0xa14>
   11910:	ldr	r3, [pc, #1404]	; 11e94 <__assert_fail@plt+0x85c>
   11914:	ldr	r3, [r4, r3]
   11918:	ldr	r3, [r3]
   1191c:	str	r3, [sp, #16]
   11920:	rsb	r3, r3, fp
   11924:	cmp	r3, r5
   11928:	ble	11cc4 <__assert_fail@plt+0x68c>
   1192c:	ldr	r6, [pc, #1380]	; 11e98 <__assert_fail@plt+0x860>
   11930:	mov	r3, r5
   11934:	ldr	r0, [pc, #1376]	; 11e9c <__assert_fail@plt+0x864>
   11938:	movw	r8, #383	; 0x17f
   1193c:	ldr	sl, [pc, #1372]	; 11ea0 <__assert_fail@plt+0x868>
   11940:	add	r6, pc, r6
   11944:	ldr	r9, [pc, #1368]	; 11ea4 <__assert_fail@plt+0x86c>
   11948:	add	r0, pc, r0
   1194c:	add	r5, r6, #8
   11950:	str	r0, [sp, #20]
   11954:	ldr	r2, [pc, #1356]	; 11ea8 <__assert_fail@plt+0x870>
   11958:	add	sl, pc, sl
   1195c:	ldr	r0, [pc, #1352]	; 11eac <__assert_fail@plt+0x874>
   11960:	add	r9, pc, r9
   11964:	add	r6, r6, #44	; 0x2c
   11968:	add	r2, pc, r2
   1196c:	add	r0, pc, r0
   11970:	str	r2, [sp, #24]
   11974:	str	r0, [sp, #28]
   11978:	ldr	r0, [r5]
   1197c:	cmp	r0, #0
   11980:	beq	119f0 <__assert_fail@plt+0x3b8>
   11984:	ldrb	r3, [r0]
   11988:	cmp	r3, #76	; 0x4c
   1198c:	beq	11a54 <__assert_fail@plt+0x41c>
   11990:	ldr	r3, [r5, #-4]
   11994:	add	r2, r3, #128	; 0x80
   11998:	cmp	r2, r8
   1199c:	bhi	119b4 <__assert_fail@plt+0x37c>
   119a0:	str	r3, [sp, #12]
   119a4:	bl	1147c <__ctype_toupper_loc@plt>
   119a8:	ldr	r3, [sp, #12]
   119ac:	ldr	r2, [r0]
   119b0:	ldr	r3, [r2, r3, lsl #2]
   119b4:	ldr	r2, [r5, #-8]
   119b8:	mov	r1, #0
   119bc:	add	r0, sp, #36	; 0x24
   119c0:	str	r1, [sp, #4]
   119c4:	mov	r1, sl
   119c8:	str	r2, [sp]
   119cc:	mov	r2, r9
   119d0:	bl	160b4 <close_stdout@@Base+0x3da4>
   119d4:	cmp	r0, #0
   119d8:	blt	11e34 <__assert_fail@plt+0x7fc>
   119dc:	ldr	r0, [sp, #36]	; 0x24
   119e0:	bl	115cc <putenv@plt>
   119e4:	cmp	r0, #0
   119e8:	bne	11a14 <__assert_fail@plt+0x3dc>
   119ec:	mov	r3, #1
   119f0:	add	r5, r5, #12
   119f4:	cmp	r5, r6
   119f8:	bne	11978 <__assert_fail@plt+0x340>
   119fc:	cmp	r3, #0
   11a00:	bne	11a88 <__assert_fail@plt+0x450>
   11a04:	ldr	r1, [pc, #1188]	; 11eb0 <__assert_fail@plt+0x878>
   11a08:	mov	r0, r3
   11a0c:	add	r1, pc, r1
   11a10:	b	118e8 <__assert_fail@plt+0x2b0>
   11a14:	bl	114f4 <__errno_location@plt>
   11a18:	ldr	r1, [sp, #20]
   11a1c:	mov	r2, #5
   11a20:	ldr	fp, [r0]
   11a24:	mov	r0, #0
   11a28:	bl	1138c <dcgettext@plt>
   11a2c:	mov	r2, r0
   11a30:	ldr	r0, [sp, #36]	; 0x24
   11a34:	str	r2, [sp, #12]
   11a38:	bl	14aa4 <close_stdout@@Base+0x2794>
   11a3c:	mov	r1, fp
   11a40:	ldr	r2, [sp, #12]
   11a44:	mov	r3, r0
   11a48:	mov	r0, #125	; 0x7d
   11a4c:	bl	11428 <error@plt>
   11a50:	b	119ec <__assert_fail@plt+0x3b4>
   11a54:	ldr	fp, [r5, #-4]
   11a58:	add	r3, fp, #128	; 0x80
   11a5c:	cmp	r3, r8
   11a60:	bhi	11a70 <__assert_fail@plt+0x438>
   11a64:	bl	1147c <__ctype_toupper_loc@plt>
   11a68:	ldr	r3, [r0]
   11a6c:	ldr	fp, [r3, fp, lsl #2]
   11a70:	mov	r3, fp
   11a74:	add	r0, sp, #36	; 0x24
   11a78:	ldr	r1, [sp, #24]
   11a7c:	ldr	r2, [sp, #28]
   11a80:	bl	160b4 <close_stdout@@Base+0x3da4>
   11a84:	b	119d4 <__assert_fail@plt+0x39c>
   11a88:	ldr	r3, [pc, #1060]	; 11eb4 <__assert_fail@plt+0x87c>
   11a8c:	mov	r1, #47	; 0x2f
   11a90:	ldr	r3, [r4, r3]
   11a94:	ldr	r4, [r3]
   11a98:	mov	r0, r4
   11a9c:	bl	114dc <strchr@plt>
   11aa0:	cmp	r0, #0
   11aa4:	beq	11d34 <__assert_fail@plt+0x6fc>
   11aa8:	mov	r0, r4
   11aac:	bl	12428 <close_stdout@@Base+0x118>
   11ab0:	ldr	r3, [pc, #1024]	; 11eb8 <__assert_fail@plt+0x880>
   11ab4:	add	r3, pc, r3
   11ab8:	str	r0, [r3, #36]	; 0x24
   11abc:	ldr	r4, [pc, #1016]	; 11ebc <__assert_fail@plt+0x884>
   11ac0:	add	r4, pc, r4
   11ac4:	ldr	r3, [r4, #36]	; 0x24
   11ac8:	cmp	r3, #0
   11acc:	beq	11d94 <__assert_fail@plt+0x75c>
   11ad0:	ldr	r0, [pc, #1000]	; 11ec0 <__assert_fail@plt+0x888>
   11ad4:	add	r9, sp, #40	; 0x28
   11ad8:	ldr	sl, [pc, #996]	; 11ec4 <__assert_fail@plt+0x88c>
   11adc:	add	r5, sp, #56	; 0x38
   11ae0:	add	r0, pc, r0
   11ae4:	ldr	r8, [pc, #988]	; 11ec8 <__assert_fail@plt+0x890>
   11ae8:	bl	11440 <getenv@plt>
   11aec:	ldr	r1, [pc, #984]	; 11ecc <__assert_fail@plt+0x894>
   11af0:	ldr	r2, [pc, #984]	; 11ed0 <__assert_fail@plt+0x898>
   11af4:	add	sl, pc, sl
   11af8:	add	r1, pc, r1
   11afc:	add	r8, pc, r8
   11b00:	mov	r4, r9
   11b04:	add	r2, pc, r2
   11b08:	ldr	r1, [r1, #36]	; 0x24
   11b0c:	mov	r3, #0
   11b10:	str	r2, [sp, #48]	; 0x30
   11b14:	str	r3, [sp, #52]	; 0x34
   11b18:	str	r1, [sp, #44]	; 0x2c
   11b1c:	str	r0, [sp, #20]
   11b20:	ldr	r0, [pc, #940]	; 11ed4 <__assert_fail@plt+0x89c>
   11b24:	add	r0, pc, r0
   11b28:	str	r0, [sp, #24]
   11b2c:	ldr	r2, [r4, #4]!
   11b30:	ldrb	ip, [r2]
   11b34:	cmp	ip, #0
   11b38:	beq	11bb8 <__assert_fail@plt+0x580>
   11b3c:	mov	r0, r9
   11b40:	mov	r1, sl
   11b44:	mov	r3, r8
   11b48:	bl	160b4 <close_stdout@@Base+0x3da4>
   11b4c:	cmp	r0, #0
   11b50:	blt	11e34 <__assert_fail@plt+0x7fc>
   11b54:	mov	r0, #3
   11b58:	ldr	r1, [sp, #40]	; 0x28
   11b5c:	mov	r2, r5
   11b60:	mov	r6, r5
   11b64:	bl	115fc <__xstat64@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	11bcc <__assert_fail@plt+0x594>
   11b70:	ldr	r0, [sp, #40]	; 0x28
   11b74:	bl	11338 <free@plt>
   11b78:	ldr	r6, [r4, #4]
   11b7c:	cmp	r6, #0
   11b80:	bne	11b2c <__assert_fail@plt+0x4f4>
   11b84:	ldr	r1, [sp, #24]
   11b88:	mov	r2, #5
   11b8c:	mov	r0, r6
   11b90:	bl	1138c <dcgettext@plt>
   11b94:	mov	fp, r0
   11b98:	mov	r0, r8
   11b9c:	bl	14aa4 <close_stdout@@Base+0x2794>
   11ba0:	mov	r2, fp
   11ba4:	mov	r1, r6
   11ba8:	mov	r3, r0
   11bac:	mov	r0, #125	; 0x7d
   11bb0:	bl	11428 <error@plt>
   11bb4:	b	11b2c <__assert_fail@plt+0x4f4>
   11bb8:	ldr	r0, [pc, #792]	; 11ed8 <__assert_fail@plt+0x8a0>
   11bbc:	add	r6, sp, #56	; 0x38
   11bc0:	add	r0, pc, r0
   11bc4:	bl	15828 <close_stdout@@Base+0x3518>
   11bc8:	str	r0, [sp, #40]	; 0x28
   11bcc:	ldr	r2, [sp, #20]
   11bd0:	mov	r0, r6
   11bd4:	cmp	r2, #0
   11bd8:	beq	11d80 <__assert_fail@plt+0x748>
   11bdc:	ldr	r1, [pc, #760]	; 11edc <__assert_fail@plt+0x8a4>
   11be0:	ldr	r3, [sp, #40]	; 0x28
   11be4:	add	r1, pc, r1
   11be8:	bl	160b4 <close_stdout@@Base+0x3da4>
   11bec:	cmp	r0, #0
   11bf0:	blt	11e34 <__assert_fail@plt+0x7fc>
   11bf4:	ldr	r0, [sp, #40]	; 0x28
   11bf8:	bl	11338 <free@plt>
   11bfc:	ldr	r0, [sp, #56]	; 0x38
   11c00:	bl	115cc <putenv@plt>
   11c04:	cmp	r0, #0
   11c08:	beq	11c48 <__assert_fail@plt+0x610>
   11c0c:	bl	114f4 <__errno_location@plt>
   11c10:	ldr	r1, [pc, #712]	; 11ee0 <__assert_fail@plt+0x8a8>
   11c14:	mov	r2, #5
   11c18:	add	r1, pc, r1
   11c1c:	ldr	r4, [r0]
   11c20:	mov	r0, #0
   11c24:	bl	1138c <dcgettext@plt>
   11c28:	mov	r5, r0
   11c2c:	ldr	r0, [sp, #56]	; 0x38
   11c30:	bl	14aa4 <close_stdout@@Base+0x2794>
   11c34:	mov	r1, r4
   11c38:	mov	r2, r5
   11c3c:	mov	r3, r0
   11c40:	mov	r0, #125	; 0x7d
   11c44:	bl	11428 <error@plt>
   11c48:	ldr	r3, [pc, #660]	; 11ee4 <__assert_fail@plt+0x8ac>
   11c4c:	ldr	r0, [sp, #16]
   11c50:	add	r3, pc, r3
   11c54:	add	r4, r7, r0, lsl #2
   11c58:	ldr	r0, [r3, #36]	; 0x24
   11c5c:	bl	11338 <free@plt>
   11c60:	ldr	r2, [sp, #16]
   11c64:	mov	r1, r4
   11c68:	ldr	r0, [r7, r2, lsl #2]
   11c6c:	bl	1135c <execvp@plt>
   11c70:	bl	114f4 <__errno_location@plt>
   11c74:	ldr	r1, [pc, #620]	; 11ee8 <__assert_fail@plt+0x8b0>
   11c78:	mov	r2, #5
   11c7c:	add	r1, pc, r1
   11c80:	ldr	r4, [r0]
   11c84:	mov	r0, #0
   11c88:	bl	1138c <dcgettext@plt>
   11c8c:	ldr	r3, [sp, #16]
   11c90:	cmp	r4, #2
   11c94:	movne	r5, #126	; 0x7e
   11c98:	moveq	r5, #127	; 0x7f
   11c9c:	mov	r6, r0
   11ca0:	ldr	r0, [r7, r3, lsl #2]
   11ca4:	bl	14aa4 <close_stdout@@Base+0x2794>
   11ca8:	mov	r2, r6
   11cac:	mov	r1, r4
   11cb0:	mov	r3, r0
   11cb4:	mov	r0, #0
   11cb8:	bl	11428 <error@plt>
   11cbc:	mov	r0, r5
   11cc0:	bl	114b8 <exit@plt>
   11cc4:	ldr	r1, [pc, #544]	; 11eec <__assert_fail@plt+0x8b4>
   11cc8:	mov	r0, r5
   11ccc:	mov	r2, #5
   11cd0:	add	r1, pc, r1
   11cd4:	bl	1138c <dcgettext@plt>
   11cd8:	mov	r1, r5
   11cdc:	mov	r2, r0
   11ce0:	mov	r0, r5
   11ce4:	bl	11428 <error@plt>
   11ce8:	b	117bc <__assert_fail@plt+0x184>
   11cec:	ldr	r0, [pc, #508]	; 11ef0 <__assert_fail@plt+0x8b8>
   11cf0:	add	r3, r2, #44	; 0x2c
   11cf4:	ldr	r1, [pc, #504]	; 11ef4 <__assert_fail@plt+0x8bc>
   11cf8:	mov	r2, #316	; 0x13c
   11cfc:	add	r0, pc, r0
   11d00:	add	r1, pc, r1
   11d04:	bl	11638 <__assert_fail@plt>
   11d08:	ldrd	r8, [sp, #56]	; 0x38
   11d0c:	mvn	r2, #0
   11d10:	mov	r3, #0
   11d14:	cmp	r9, r3
   11d18:	cmpeq	r8, r2
   11d1c:	bls	11d64 <__assert_fail@plt+0x72c>
   11d20:	str	ip, [sp, #12]
   11d24:	mov	r6, #75	; 0x4b
   11d28:	bl	114f4 <__errno_location@plt>
   11d2c:	ldr	ip, [sp, #12]
   11d30:	b	11874 <__assert_fail@plt+0x23c>
   11d34:	ldr	r0, [pc, #444]	; 11ef8 <__assert_fail@plt+0x8c0>
   11d38:	add	r0, pc, r0
   11d3c:	bl	1589c <close_stdout@@Base+0x358c>
   11d40:	subs	r5, r0, #0
   11d44:	beq	11da8 <__assert_fail@plt+0x770>
   11d48:	bl	12428 <close_stdout@@Base+0x118>
   11d4c:	ldr	r3, [pc, #424]	; 11efc <__assert_fail@plt+0x8c4>
   11d50:	add	r3, pc, r3
   11d54:	str	r0, [r3, #36]	; 0x24
   11d58:	mov	r0, r5
   11d5c:	bl	11338 <free@plt>
   11d60:	b	11abc <__assert_fail@plt+0x484>
   11d64:	bl	114f4 <__errno_location@plt>
   11d68:	mov	r3, #12
   11d6c:	mul	r5, r3, r5
   11d70:	str	r6, [r0]
   11d74:	ldr	r0, [sp, #28]
   11d78:	str	r8, [r0, r5]
   11d7c:	b	116f0 <__assert_fail@plt+0xb8>
   11d80:	ldr	r1, [pc, #376]	; 11f00 <__assert_fail@plt+0x8c8>
   11d84:	ldr	r2, [sp, #40]	; 0x28
   11d88:	add	r1, pc, r1
   11d8c:	bl	160b4 <close_stdout@@Base+0x3da4>
   11d90:	b	11bec <__assert_fail@plt+0x5b4>
   11d94:	ldr	r0, [pc, #360]	; 11f04 <__assert_fail@plt+0x8cc>
   11d98:	add	r0, pc, r0
   11d9c:	bl	15828 <close_stdout@@Base+0x3518>
   11da0:	str	r0, [r4, #36]	; 0x24
   11da4:	b	11ad0 <__assert_fail@plt+0x498>
   11da8:	ldr	r0, [pc, #344]	; 11f08 <__assert_fail@plt+0x8d0>
   11dac:	add	r0, pc, r0
   11db0:	bl	11440 <getenv@plt>
   11db4:	subs	r5, r0, #0
   11db8:	beq	11d58 <__assert_fail@plt+0x720>
   11dbc:	bl	15828 <close_stdout@@Base+0x3518>
   11dc0:	ldr	r1, [pc, #324]	; 11f0c <__assert_fail@plt+0x8d4>
   11dc4:	ldr	r8, [pc, #324]	; 11f10 <__assert_fail@plt+0x8d8>
   11dc8:	add	r1, pc, r1
   11dcc:	add	r8, pc, r8
   11dd0:	mov	r5, r0
   11dd4:	bl	115a8 <strtok@plt>
   11dd8:	b	11dec <__assert_fail@plt+0x7b4>
   11ddc:	bl	11338 <free@plt>
   11de0:	mov	r0, #0
   11de4:	mov	r1, r8
   11de8:	bl	115a8 <strtok@plt>
   11dec:	cmp	r0, #0
   11df0:	beq	11d58 <__assert_fail@plt+0x720>
   11df4:	mov	r1, r4
   11df8:	mov	r2, #0
   11dfc:	bl	1259c <close_stdout@@Base+0x28c>
   11e00:	mov	r1, #1
   11e04:	mov	r6, r0
   11e08:	bl	11578 <access@plt>
   11e0c:	cmp	r0, #0
   11e10:	mov	r0, r6
   11e14:	bne	11ddc <__assert_fail@plt+0x7a4>
   11e18:	bl	12428 <close_stdout@@Base+0x118>
   11e1c:	ldr	r3, [pc, #240]	; 11f14 <__assert_fail@plt+0x8dc>
   11e20:	add	r3, pc, r3
   11e24:	str	r0, [r3, #36]	; 0x24
   11e28:	mov	r0, r6
   11e2c:	bl	11338 <free@plt>
   11e30:	b	11d58 <__assert_fail@plt+0x720>
   11e34:	bl	15844 <close_stdout@@Base+0x3534>
   11e38:	muleq	r1, ip, r9
   11e3c:	andeq	r0, r0, r0, asr #2
   11e40:	andeq	r9, r0, r8, lsl #28
   11e44:	andeq	fp, r1, r8, asr #22
   11e48:	andeq	sl, r0, r0, asr r4
   11e4c:	andeq	sl, r0, r4, lsr #7
   11e50:	ldrdeq	sl, [r0], -ip
   11e54:	muleq	r0, r4, r3
   11e58:	andeq	r0, r0, r4, ror #2
   11e5c:	andeq	r0, r0, r4, asr r1
   11e60:	ldrdeq	fp, [r1], -ip
   11e64:	andeq	sl, r0, r0, lsr #8
   11e68:	andeq	fp, r1, r8, ror #14
   11e6c:			; <UNDEFINED> instruction: 0x0001babc
   11e70:	andeq	r0, r0, r0, ror #2
   11e74:	andeq	r0, r0, ip, asr #2
   11e78:	muleq	r0, r0, r3
   11e7c:	muleq	r0, r4, r3
   11e80:	andeq	sl, r0, ip, lsl #7
   11e84:	strdeq	sl, [r0], -r0
   11e88:	andeq	r0, r0, r8, ror r1
   11e8c:	andeq	sl, r0, r4, ror #4
   11e90:	ldrdeq	sl, [r0], -r4
   11e94:	andeq	r0, r0, r8, asr #2
   11e98:	andeq	fp, r1, r4, lsl #17
   11e9c:	andeq	sl, r0, r0, lsl r2
   11ea0:	strdeq	sl, [r0], -r4
   11ea4:	andeq	sl, r0, r0, ror #3
   11ea8:	ldrdeq	sl, [r0], -r0
   11eac:	ldrdeq	sl, [r0], -r4
   11eb0:	andeq	sl, r0, r8, ror r1
   11eb4:	andeq	r0, r0, ip, ror #2
   11eb8:	andeq	fp, r1, r0, lsl r7
   11ebc:	andeq	fp, r1, r4, lsl #14
   11ec0:	andeq	sl, r0, r0, lsl #2
   11ec4:	andeq	sl, r0, r0, lsr #2
   11ec8:	andeq	sl, r0, r8, lsl #2
   11ecc:	andeq	fp, r1, ip, asr #13
   11ed0:	andeq	sl, r0, r8, ror #1
   11ed4:	strdeq	sl, [r0], -r8
   11ed8:	andeq	sl, r0, r4, asr #32
   11edc:	andeq	sl, r0, ip, asr #32
   11ee0:	andeq	r9, r0, r0, asr #30
   11ee4:	andeq	fp, r1, r4, ror r5
   11ee8:	ldrdeq	r9, [r0], -r8
   11eec:	andeq	r9, r0, r8, asr lr
   11ef0:	andeq	r9, r0, r4, ror #26
   11ef4:	andeq	r9, r0, r8, lsr #27
   11ef8:	andeq	r9, r0, r8, ror lr
   11efc:	andeq	fp, r1, r4, ror r4
   11f00:			; <UNDEFINED> instruction: 0x00009ebc
   11f04:	andeq	r9, r0, r4, lsr lr
   11f08:	andeq	r9, r0, r4, lsl lr
   11f0c:	andeq	r9, r0, r0, lsl #28
   11f10:	strdeq	r9, [r0], -ip
   11f14:	andeq	fp, r1, r4, lsr #7
   11f18:	mov	fp, #0
   11f1c:	mov	lr, #0
   11f20:	pop	{r1}		; (ldr r1, [sp], #4)
   11f24:	mov	r2, sp
   11f28:	push	{r2}		; (str r2, [sp, #-4]!)
   11f2c:	push	{r0}		; (str r0, [sp, #-4]!)
   11f30:	ldr	ip, [pc, #16]	; 11f48 <__assert_fail@plt+0x910>
   11f34:	push	{ip}		; (str ip, [sp, #-4]!)
   11f38:	ldr	r0, [pc, #12]	; 11f4c <__assert_fail@plt+0x914>
   11f3c:	ldr	r3, [pc, #12]	; 11f50 <__assert_fail@plt+0x918>
   11f40:	bl	11464 <__libc_start_main@plt>
   11f44:	bl	11614 <abort@plt>
   11f48:	andeq	fp, r1, ip, lsr r4
   11f4c:	andeq	r1, r1, r4, asr #12
   11f50:	ldrdeq	fp, [r1], -r8
   11f54:	ldr	r3, [pc, #20]	; 11f70 <__assert_fail@plt+0x938>
   11f58:	ldr	r2, [pc, #20]	; 11f74 <__assert_fail@plt+0x93c>
   11f5c:	add	r3, pc, r3
   11f60:	ldr	r2, [r3, r2]
   11f64:	cmp	r2, #0
   11f68:	bxeq	lr
   11f6c:	b	11488 <__gmon_start__@plt>
   11f70:	muleq	r1, ip, r0
   11f74:	andeq	r0, r0, r8, asr r1
   11f78:	push	{r3, lr}
   11f7c:	movw	r0, #53704	; 0xd1c8
   11f80:	ldr	r3, [pc, #36]	; 11fac <__assert_fail@plt+0x974>
   11f84:	movt	r0, #2
   11f88:	rsb	r3, r0, r3
   11f8c:	cmp	r3, #6
   11f90:	popls	{r3, pc}
   11f94:	movw	r3, #0
   11f98:	movt	r3, #0
   11f9c:	cmp	r3, #0
   11fa0:	popeq	{r3, pc}
   11fa4:	blx	r3
   11fa8:	pop	{r3, pc}
   11fac:	andeq	sp, r2, fp, asr #3
   11fb0:	push	{r3, lr}
   11fb4:	movw	r0, #53704	; 0xd1c8
   11fb8:	movw	r3, #53704	; 0xd1c8
   11fbc:	movt	r0, #2
   11fc0:	movt	r3, #2
   11fc4:	rsb	r3, r0, r3
   11fc8:	asr	r3, r3, #2
   11fcc:	add	r3, r3, r3, lsr #31
   11fd0:	asrs	r1, r3, #1
   11fd4:	popeq	{r3, pc}
   11fd8:	movw	r2, #0
   11fdc:	movt	r2, #0
   11fe0:	cmp	r2, #0
   11fe4:	popeq	{r3, pc}
   11fe8:	blx	r2
   11fec:	pop	{r3, pc}
   11ff0:	push	{r4, lr}
   11ff4:	movw	r4, #53704	; 0xd1c8
   11ff8:	movt	r4, #2
   11ffc:	ldrb	r3, [r4]
   12000:	cmp	r3, #0
   12004:	popne	{r4, pc}
   12008:	bl	11f78 <__assert_fail@plt+0x940>
   1200c:	mov	r3, #1
   12010:	strb	r3, [r4]
   12014:	pop	{r4, pc}
   12018:	movw	r0, #52848	; 0xce70
   1201c:	movt	r0, #2
   12020:	push	{r3, lr}
   12024:	ldr	r3, [r0]
   12028:	cmp	r3, #0
   1202c:	beq	12044 <__assert_fail@plt+0xa0c>
   12030:	movw	r3, #0
   12034:	movt	r3, #0
   12038:	cmp	r3, #0
   1203c:	beq	12044 <__assert_fail@plt+0xa0c>
   12040:	blx	r3
   12044:	pop	{r3, lr}
   12048:	b	11fb0 <__assert_fail@plt+0x978>
   1204c:	push	{r4, r5, r6, lr}
   12050:	subs	r4, r0, #0
   12054:	ldr	r5, [pc, #568]	; 12294 <__assert_fail@plt+0xc5c>
   12058:	add	r5, pc, r5
   1205c:	beq	120a4 <__assert_fail@plt+0xa6c>
   12060:	ldr	r3, [pc, #560]	; 12298 <__assert_fail@plt+0xc60>
   12064:	mov	r2, #5
   12068:	ldr	r1, [pc, #556]	; 1229c <__assert_fail@plt+0xc64>
   1206c:	mov	r0, #0
   12070:	ldr	r3, [r5, r3]
   12074:	add	r1, pc, r1
   12078:	ldr	r6, [r3]
   1207c:	bl	1138c <dcgettext@plt>
   12080:	ldr	r3, [pc, #536]	; 122a0 <__assert_fail@plt+0xc68>
   12084:	mov	r1, #1
   12088:	ldr	r3, [r5, r3]
   1208c:	ldr	r3, [r3]
   12090:	mov	r2, r0
   12094:	mov	r0, r6
   12098:	bl	11560 <__fprintf_chk@plt>
   1209c:	mov	r0, r4
   120a0:	bl	114b8 <exit@plt>
   120a4:	ldr	r1, [pc, #504]	; 122a4 <__assert_fail@plt+0xc6c>
   120a8:	mov	r2, #5
   120ac:	add	r1, pc, r1
   120b0:	bl	1138c <dcgettext@plt>
   120b4:	ldr	r3, [pc, #484]	; 122a0 <__assert_fail@plt+0xc68>
   120b8:	ldr	r6, [r5, r3]
   120bc:	ldr	r2, [r6]
   120c0:	mov	r1, r0
   120c4:	mov	r0, #1
   120c8:	bl	11548 <__printf_chk@plt>
   120cc:	ldr	r1, [pc, #468]	; 122a8 <__assert_fail@plt+0xc70>
   120d0:	mov	r2, #5
   120d4:	mov	r0, r4
   120d8:	add	r1, pc, r1
   120dc:	bl	1138c <dcgettext@plt>
   120e0:	ldr	r3, [pc, #452]	; 122ac <__assert_fail@plt+0xc74>
   120e4:	ldr	r5, [r5, r3]
   120e8:	ldr	r1, [r5]
   120ec:	bl	112d8 <fputs_unlocked@plt>
   120f0:	ldr	r1, [pc, #440]	; 122b0 <__assert_fail@plt+0xc78>
   120f4:	mov	r2, #5
   120f8:	mov	r0, r4
   120fc:	add	r1, pc, r1
   12100:	bl	1138c <dcgettext@plt>
   12104:	ldr	r1, [r5]
   12108:	bl	112d8 <fputs_unlocked@plt>
   1210c:	ldr	r1, [pc, #416]	; 122b4 <__assert_fail@plt+0xc7c>
   12110:	mov	r2, #5
   12114:	mov	r0, r4
   12118:	add	r1, pc, r1
   1211c:	bl	1138c <dcgettext@plt>
   12120:	ldr	r1, [r5]
   12124:	bl	112d8 <fputs_unlocked@plt>
   12128:	ldr	r1, [pc, #392]	; 122b8 <__assert_fail@plt+0xc80>
   1212c:	mov	r2, #5
   12130:	mov	r0, r4
   12134:	add	r1, pc, r1
   12138:	bl	1138c <dcgettext@plt>
   1213c:	ldr	r1, [r5]
   12140:	bl	112d8 <fputs_unlocked@plt>
   12144:	ldr	r1, [pc, #368]	; 122bc <__assert_fail@plt+0xc84>
   12148:	mov	r2, #5
   1214c:	mov	r0, r4
   12150:	add	r1, pc, r1
   12154:	bl	1138c <dcgettext@plt>
   12158:	ldr	r1, [r5]
   1215c:	bl	112d8 <fputs_unlocked@plt>
   12160:	ldr	r1, [pc, #344]	; 122c0 <__assert_fail@plt+0xc88>
   12164:	mov	r2, #5
   12168:	mov	r0, r4
   1216c:	add	r1, pc, r1
   12170:	bl	1138c <dcgettext@plt>
   12174:	ldr	r1, [r5]
   12178:	bl	112d8 <fputs_unlocked@plt>
   1217c:	ldr	r1, [pc, #320]	; 122c4 <__assert_fail@plt+0xc8c>
   12180:	mov	r2, #5
   12184:	mov	r0, r4
   12188:	add	r1, pc, r1
   1218c:	bl	1138c <dcgettext@plt>
   12190:	ldr	r1, [r5]
   12194:	bl	112d8 <fputs_unlocked@plt>
   12198:	ldr	r1, [pc, #296]	; 122c8 <__assert_fail@plt+0xc90>
   1219c:	mov	r2, #5
   121a0:	mov	r0, r4
   121a4:	add	r1, pc, r1
   121a8:	bl	1138c <dcgettext@plt>
   121ac:	ldr	r1, [r5]
   121b0:	bl	112d8 <fputs_unlocked@plt>
   121b4:	ldr	r1, [pc, #272]	; 122cc <__assert_fail@plt+0xc94>
   121b8:	mov	r2, #5
   121bc:	mov	r0, r4
   121c0:	add	r1, pc, r1
   121c4:	bl	1138c <dcgettext@plt>
   121c8:	ldr	r1, [r5]
   121cc:	bl	112d8 <fputs_unlocked@plt>
   121d0:	ldr	r1, [pc, #248]	; 122d0 <__assert_fail@plt+0xc98>
   121d4:	mov	r2, #5
   121d8:	mov	r0, r4
   121dc:	add	r1, pc, r1
   121e0:	bl	1138c <dcgettext@plt>
   121e4:	ldr	r2, [pc, #232]	; 122d4 <__assert_fail@plt+0xc9c>
   121e8:	ldr	r3, [pc, #232]	; 122d8 <__assert_fail@plt+0xca0>
   121ec:	add	r2, pc, r2
   121f0:	add	r3, pc, r3
   121f4:	mov	r1, r0
   121f8:	mov	r0, #1
   121fc:	bl	11548 <__printf_chk@plt>
   12200:	mov	r0, #5
   12204:	mov	r1, r4
   12208:	bl	115c0 <setlocale@plt>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <__assert_fail@plt+0xbf4>
   12214:	ldr	r1, [pc, #192]	; 122dc <__assert_fail@plt+0xca4>
   12218:	mov	r2, #3
   1221c:	add	r1, pc, r1
   12220:	bl	11608 <strncmp@plt>
   12224:	cmp	r0, #0
   12228:	bne	12260 <__assert_fail@plt+0xc28>
   1222c:	ldr	r1, [pc, #172]	; 122e0 <__assert_fail@plt+0xca8>
   12230:	mov	r2, #5
   12234:	mov	r0, #0
   12238:	add	r1, pc, r1
   1223c:	bl	1138c <dcgettext@plt>
   12240:	mov	r5, r0
   12244:	ldr	r0, [r6]
   12248:	bl	124f8 <close_stdout@@Base+0x1e8>
   1224c:	mov	r1, r5
   12250:	mov	r2, r0
   12254:	mov	r0, #1
   12258:	bl	11548 <__printf_chk@plt>
   1225c:	b	1209c <__assert_fail@plt+0xa64>
   12260:	ldr	r1, [pc, #124]	; 122e4 <__assert_fail@plt+0xcac>
   12264:	mov	r2, #5
   12268:	mov	r0, r4
   1226c:	add	r1, pc, r1
   12270:	bl	1138c <dcgettext@plt>
   12274:	mov	r5, r0
   12278:	ldr	r0, [r6]
   1227c:	bl	124f8 <close_stdout@@Base+0x1e8>
   12280:	mov	r1, r5
   12284:	mov	r2, r0
   12288:	mov	r0, #1
   1228c:	bl	11548 <__printf_chk@plt>
   12290:	b	1222c <__assert_fail@plt+0xbf4>
   12294:	andeq	sl, r1, r0, lsr #31
   12298:	andeq	r0, r0, r0, asr r1
   1229c:	andeq	r9, r0, r4, lsr r4
   122a0:	andeq	r0, r0, ip, ror #2
   122a4:	andeq	r9, r0, r4, lsr #8
   122a8:	andeq	r9, r0, r8, lsl r4
   122ac:	andeq	r0, r0, r0, ror #2
   122b0:	andeq	r9, r0, r0, asr #8
   122b4:	andeq	r9, r0, r0, ror r4
   122b8:	andeq	r9, r0, ip, lsl #10
   122bc:	andeq	r9, r0, r0, lsr #10
   122c0:	andeq	r9, r0, ip, lsr r5
   122c4:	muleq	r0, r0, r5
   122c8:			; <UNDEFINED> instruction: 0x000095b4
   122cc:	muleq	r0, r8, r6
   122d0:	muleq	r0, r0, r7
   122d4:	muleq	r0, r8, r7
   122d8:	andeq	r9, r0, r4, lsr #15
   122dc:	andeq	r9, r0, r0, lsr #15
   122e0:	ldrdeq	r9, [r0], -r0
   122e4:	andeq	r9, r0, r4, asr r7
   122e8:	ldr	r3, [pc, #8]	; 122f8 <__assert_fail@plt+0xcc0>
   122ec:	add	r3, pc, r3
   122f0:	str	r0, [r3]
   122f4:	bx	lr
   122f8:	andeq	sl, r1, r0, lsl #30
   122fc:	ldr	r3, [pc, #8]	; 1230c <__assert_fail@plt+0xcd4>
   12300:	add	r3, pc, r3
   12304:	strb	r0, [r3, #4]
   12308:	bx	lr
   1230c:	andeq	sl, r1, ip, ror #29

00012310 <close_stdout@@Base>:
   12310:	push	{r4, r5, r6, r7, lr}
   12314:	sub	sp, sp, #12
   12318:	ldr	r4, [pc, #228]	; 12404 <close_stdout@@Base+0xf4>
   1231c:	ldr	r3, [pc, #228]	; 12408 <close_stdout@@Base+0xf8>
   12320:	add	r4, pc, r4
   12324:	ldr	r3, [r4, r3]
   12328:	ldr	r0, [r3]
   1232c:	bl	1646c <close_stdout@@Base+0x415c>
   12330:	cmp	r0, #0
   12334:	beq	1235c <close_stdout@@Base+0x4c>
   12338:	ldr	r3, [pc, #204]	; 1240c <close_stdout@@Base+0xfc>
   1233c:	add	r3, pc, r3
   12340:	ldrb	r3, [r3, #4]
   12344:	cmp	r3, #0
   12348:	beq	1237c <close_stdout@@Base+0x6c>
   1234c:	bl	114f4 <__errno_location@plt>
   12350:	ldr	r3, [r0]
   12354:	cmp	r3, #32
   12358:	bne	1237c <close_stdout@@Base+0x6c>
   1235c:	ldr	r3, [pc, #172]	; 12410 <close_stdout@@Base+0x100>
   12360:	ldr	r3, [r4, r3]
   12364:	ldr	r0, [r3]
   12368:	bl	1646c <close_stdout@@Base+0x415c>
   1236c:	cmp	r0, #0
   12370:	bne	123d0 <close_stdout@@Base+0xc0>
   12374:	add	sp, sp, #12
   12378:	pop	{r4, r5, r6, r7, pc}
   1237c:	ldr	r1, [pc, #144]	; 12414 <close_stdout@@Base+0x104>
   12380:	mov	r0, #0
   12384:	mov	r2, #5
   12388:	add	r1, pc, r1
   1238c:	bl	1138c <dcgettext@plt>
   12390:	ldr	r3, [pc, #128]	; 12418 <close_stdout@@Base+0x108>
   12394:	ldr	r5, [pc, r3]
   12398:	cmp	r5, #0
   1239c:	mov	r6, r0
   123a0:	beq	123e0 <close_stdout@@Base+0xd0>
   123a4:	bl	114f4 <__errno_location@plt>
   123a8:	ldr	r7, [r0]
   123ac:	mov	r0, r5
   123b0:	bl	14950 <close_stdout@@Base+0x2640>
   123b4:	ldr	r2, [pc, #96]	; 1241c <close_stdout@@Base+0x10c>
   123b8:	str	r6, [sp]
   123bc:	mov	r1, r7
   123c0:	add	r2, pc, r2
   123c4:	mov	r3, r0
   123c8:	mov	r0, #0
   123cc:	bl	11428 <error@plt>
   123d0:	ldr	r3, [pc, #72]	; 12420 <close_stdout@@Base+0x110>
   123d4:	ldr	r3, [r4, r3]
   123d8:	ldr	r0, [r3]
   123dc:	bl	11344 <_exit@plt>
   123e0:	bl	114f4 <__errno_location@plt>
   123e4:	ldr	r2, [pc, #56]	; 12424 <close_stdout@@Base+0x114>
   123e8:	add	r2, pc, r2
   123ec:	mov	r3, r0
   123f0:	mov	r0, r5
   123f4:	ldr	r1, [r3]
   123f8:	mov	r3, r6
   123fc:	bl	11428 <error@plt>
   12400:	b	123d0 <close_stdout@@Base+0xc0>
   12404:	ldrdeq	sl, [r1], -r8
   12408:	andeq	r0, r0, r0, ror #2
   1240c:			; <UNDEFINED> instruction: 0x0001aeb0
   12410:	andeq	r0, r0, r0, asr r1
   12414:	andeq	r9, r0, r8, lsl r9
   12418:	andeq	sl, r1, r8, asr lr
   1241c:	andeq	r9, r0, ip, ror #17
   12420:	andeq	r0, r0, r4, ror #2
   12424:	andeq	r9, r0, r8, asr #17
   12428:	push	{r3, lr}
   1242c:	bl	124a0 <close_stdout@@Base+0x190>
   12430:	cmp	r0, #0
   12434:	popne	{r3, pc}
   12438:	bl	15844 <close_stdout@@Base+0x3534>
   1243c:	push	{r3, r4, r5, lr}
   12440:	mov	r4, r0
   12444:	ldrb	r5, [r0]
   12448:	subs	r3, r5, #47	; 0x2f
   1244c:	rsbs	r5, r3, #0
   12450:	adcs	r5, r5, r3
   12454:	bl	124f8 <close_stdout@@Base+0x1e8>
   12458:	rsb	r3, r4, r0
   1245c:	cmp	r3, r5
   12460:	bls	12498 <close_stdout@@Base+0x188>
   12464:	sub	r0, r3, #1
   12468:	ldrb	r2, [r4, r0]
   1246c:	cmp	r2, #47	; 0x2f
   12470:	beq	12488 <close_stdout@@Base+0x178>
   12474:	b	12498 <close_stdout@@Base+0x188>
   12478:	ldrb	r2, [r4, r3]
   1247c:	cmp	r2, #47	; 0x2f
   12480:	popne	{r3, r4, r5, pc}
   12484:	mov	r0, r3
   12488:	cmp	r5, r0
   1248c:	sub	r3, r0, #1
   12490:	bcc	12478 <close_stdout@@Base+0x168>
   12494:	pop	{r3, r4, r5, pc}
   12498:	mov	r0, r3
   1249c:	pop	{r3, r4, r5, pc}
   124a0:	push	{r4, r5, r6, r7, r8, lr}
   124a4:	mov	r8, r0
   124a8:	bl	1243c <close_stdout@@Base+0x12c>
   124ac:	rsbs	r6, r0, #1
   124b0:	add	r7, r0, #1
   124b4:	mov	r4, r0
   124b8:	movcc	r6, #0
   124bc:	add	r0, r6, r7
   124c0:	bl	1144c <malloc@plt>
   124c4:	subs	r5, r0, #0
   124c8:	beq	124f0 <close_stdout@@Base+0x1e0>
   124cc:	mov	r2, r4
   124d0:	mov	r1, r8
   124d4:	bl	11350 <memcpy@plt>
   124d8:	cmp	r6, #0
   124dc:	movne	r3, #46	; 0x2e
   124e0:	strbne	r3, [r5, r4]
   124e4:	movne	r4, r7
   124e8:	mov	r3, #0
   124ec:	strb	r3, [r5, r4]
   124f0:	mov	r0, r5
   124f4:	pop	{r4, r5, r6, r7, r8, pc}
   124f8:	ldrb	r3, [r0]
   124fc:	cmp	r3, #47	; 0x2f
   12500:	bne	1251c <close_stdout@@Base+0x20c>
   12504:	add	r2, r0, #1
   12508:	mov	r0, r2
   1250c:	add	r2, r2, #1
   12510:	ldrb	r3, [r0]
   12514:	cmp	r3, #47	; 0x2f
   12518:	beq	12508 <close_stdout@@Base+0x1f8>
   1251c:	cmp	r3, #0
   12520:	bxeq	lr
   12524:	mov	r2, r0
   12528:	mov	r1, #0
   1252c:	cmp	r3, #47	; 0x2f
   12530:	moveq	r1, #1
   12534:	beq	12544 <close_stdout@@Base+0x234>
   12538:	cmp	r1, #0
   1253c:	movne	r0, r2
   12540:	movne	r1, #0
   12544:	ldrb	r3, [r2, #1]!
   12548:	cmp	r3, #0
   1254c:	bne	1252c <close_stdout@@Base+0x21c>
   12550:	bx	lr
   12554:	push	{r4, lr}
   12558:	mov	r4, r0
   1255c:	bl	114d0 <strlen@plt>
   12560:	cmp	r0, #1
   12564:	popls	{r4, pc}
   12568:	sub	r3, r0, #1
   1256c:	ldrb	r2, [r4, r3]
   12570:	cmp	r2, #47	; 0x2f
   12574:	popne	{r4, pc}
   12578:	mov	r0, r3
   1257c:	cmp	r0, #1
   12580:	sub	r3, r3, #1
   12584:	beq	12598 <close_stdout@@Base+0x288>
   12588:	ldrb	r2, [r4, r3]
   1258c:	cmp	r2, #47	; 0x2f
   12590:	popne	{r4, pc}
   12594:	b	12578 <close_stdout@@Base+0x268>
   12598:	pop	{r4, pc}
   1259c:	push	{r3, lr}
   125a0:	bl	125b0 <close_stdout@@Base+0x2a0>
   125a4:	cmp	r0, #0
   125a8:	popne	{r3, pc}
   125ac:	bl	15844 <close_stdout@@Base+0x3534>
   125b0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125b4:	mov	r4, r1
   125b8:	mov	r8, r2
   125bc:	mov	fp, r0
   125c0:	bl	124f8 <close_stdout@@Base+0x1e8>
   125c4:	mov	sl, r0
   125c8:	bl	12554 <close_stdout@@Base+0x244>
   125cc:	rsb	r7, fp, sl
   125d0:	cmp	r0, #0
   125d4:	add	r7, r7, r0
   125d8:	moveq	sl, r0
   125dc:	beq	125f0 <close_stdout@@Base+0x2e0>
   125e0:	add	sl, sl, r0
   125e4:	ldrb	sl, [sl, #-1]
   125e8:	subs	sl, sl, #47	; 0x2f
   125ec:	movne	sl, #1
   125f0:	ldrb	r3, [r4]
   125f4:	cmp	r3, #47	; 0x2f
   125f8:	movne	r5, r4
   125fc:	beq	12670 <close_stdout@@Base+0x360>
   12600:	mov	r0, r5
   12604:	bl	114d0 <strlen@plt>
   12608:	mov	r6, r0
   1260c:	add	r0, r7, #1
   12610:	add	r0, r0, sl
   12614:	add	r0, r0, r6
   12618:	bl	1144c <malloc@plt>
   1261c:	subs	r9, r0, #0
   12620:	beq	12668 <close_stdout@@Base+0x358>
   12624:	mov	r2, r7
   12628:	mov	r1, fp
   1262c:	bl	11494 <mempcpy@plt>
   12630:	cmp	r8, #0
   12634:	mov	r2, #47	; 0x2f
   12638:	strb	r2, [r0], sl
   1263c:	beq	12654 <close_stdout@@Base+0x344>
   12640:	ldrb	r2, [r4]
   12644:	cmp	r2, #47	; 0x2f
   12648:	movne	r2, r0
   1264c:	subeq	r2, r0, #1
   12650:	str	r2, [r8]
   12654:	mov	r1, r5
   12658:	mov	r2, r6
   1265c:	bl	11494 <mempcpy@plt>
   12660:	mov	r3, #0
   12664:	strb	r3, [r0]
   12668:	mov	r0, r9
   1266c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12670:	add	r3, r4, #1
   12674:	mov	r5, r3
   12678:	add	r3, r3, #1
   1267c:	ldrb	r2, [r5]
   12680:	cmp	r2, #47	; 0x2f
   12684:	bne	12600 <close_stdout@@Base+0x2f0>
   12688:	b	12674 <close_stdout@@Base+0x364>
   1268c:	push	{r3, r4, r5, r6, r7, lr}
   12690:	subs	r4, r0, #0
   12694:	ldr	r5, [pc, #172]	; 12748 <close_stdout@@Base+0x438>
   12698:	add	r5, pc, r5
   1269c:	beq	12724 <close_stdout@@Base+0x414>
   126a0:	mov	r1, #47	; 0x2f
   126a4:	bl	115d8 <strrchr@plt>
   126a8:	subs	r6, r0, #0
   126ac:	beq	12708 <close_stdout@@Base+0x3f8>
   126b0:	add	r7, r6, #1
   126b4:	rsb	r3, r4, r7
   126b8:	cmp	r3, #6
   126bc:	ble	12708 <close_stdout@@Base+0x3f8>
   126c0:	ldr	r1, [pc, #132]	; 1274c <close_stdout@@Base+0x43c>
   126c4:	sub	r0, r6, #6
   126c8:	mov	r2, #7
   126cc:	add	r1, pc, r1
   126d0:	bl	11608 <strncmp@plt>
   126d4:	cmp	r0, #0
   126d8:	bne	12708 <close_stdout@@Base+0x3f8>
   126dc:	ldr	r1, [pc, #108]	; 12750 <close_stdout@@Base+0x440>
   126e0:	mov	r0, r7
   126e4:	mov	r2, #3
   126e8:	add	r1, pc, r1
   126ec:	bl	11608 <strncmp@plt>
   126f0:	cmp	r0, #0
   126f4:	movne	r4, r7
   126f8:	ldreq	r3, [pc, #84]	; 12754 <close_stdout@@Base+0x444>
   126fc:	addeq	r4, r6, #4
   12700:	ldreq	r3, [r5, r3]
   12704:	streq	r4, [r3]
   12708:	ldr	r2, [pc, #72]	; 12758 <close_stdout@@Base+0x448>
   1270c:	ldr	r3, [pc, #72]	; 1275c <close_stdout@@Base+0x44c>
   12710:	ldr	r2, [r5, r2]
   12714:	str	r4, [r2]
   12718:	ldr	r3, [r5, r3]
   1271c:	str	r4, [r3]
   12720:	pop	{r3, r4, r5, r6, r7, pc}
   12724:	ldr	r3, [pc, #52]	; 12760 <close_stdout@@Base+0x450>
   12728:	mov	r1, #1
   1272c:	ldr	r0, [pc, #48]	; 12764 <close_stdout@@Base+0x454>
   12730:	mov	r2, #55	; 0x37
   12734:	ldr	r3, [r5, r3]
   12738:	add	r0, pc, r0
   1273c:	ldr	r3, [r3]
   12740:	bl	113e0 <fwrite@plt>
   12744:	bl	11614 <abort@plt>
   12748:	andeq	sl, r1, r0, ror #18
   1274c:	andeq	r9, r0, r0, lsr #12
   12750:	andeq	r9, r0, ip, lsl #12
   12754:	andeq	r0, r0, r4, ror r1
   12758:	andeq	r0, r0, ip, ror #2
   1275c:	andeq	r0, r0, r8, ror #2
   12760:	andeq	r0, r0, r0, asr r1
   12764:	andeq	r9, r0, ip, ror r5
   12768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1276c:	sub	sp, sp, #156	; 0x9c
   12770:	ldr	r7, [pc, #2116]	; 12fbc <close_stdout@@Base+0xcac>
   12774:	add	r2, sp, #120	; 0x78
   12778:	ldr	r3, [pc, #2112]	; 12fc0 <close_stdout@@Base+0xcb0>
   1277c:	mov	fp, r0
   12780:	add	r7, pc, r7
   12784:	mov	r0, r1
   12788:	mov	r1, #2
   1278c:	add	r6, sp, #40	; 0x28
   12790:	ldr	r3, [r7, r3]
   12794:	add	r9, sp, #96	; 0x60
   12798:	str	r2, [sp, #16]
   1279c:	mov	r4, #1
   127a0:	mov	r5, #0
   127a4:	str	r3, [sp, #28]
   127a8:	add	r3, sp, #64	; 0x40
   127ac:	ldr	r2, [sp, #28]
   127b0:	str	r3, [sp, #12]
   127b4:	ldr	r3, [r2]
   127b8:	str	r3, [sp, #148]	; 0x94
   127bc:	bl	14adc <close_stdout@@Base+0x27cc>
   127c0:	str	r0, [sp, #20]
   127c4:	ldrb	r3, [fp]
   127c8:	cmp	r3, #0
   127cc:	beq	12dc4 <close_stdout@@Base+0xab4>
   127d0:	mov	r0, fp
   127d4:	ldr	r1, [sp, #20]
   127d8:	bl	17464 <close_stdout@@Base+0x5154>
   127dc:	subs	r8, r0, #0
   127e0:	beq	12dc4 <close_stdout@@Base+0xab4>
   127e4:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   127e8:	cmp	r0, #1
   127ec:	bls	12d44 <close_stdout@@Base+0xa34>
   127f0:	cmp	fp, r8
   127f4:	str	r5, [r6, #4]
   127f8:	str	fp, [sp, #52]	; 0x34
   127fc:	addcc	sl, sp, #64	; 0x40
   12800:	strb	r5, [sp, #36]	; 0x24
   12804:	str	r5, [r6]
   12808:	strb	r5, [sp, #48]	; 0x30
   1280c:	strcc	r9, [sp, #24]
   12810:	bcs	12de4 <close_stdout@@Base+0xad4>
   12814:	ldrb	r3, [sp, #36]	; 0x24
   12818:	cmp	r3, #0
   1281c:	bne	1287c <close_stdout@@Base+0x56c>
   12820:	ldr	r2, [pc, #1948]	; 12fc4 <close_stdout@@Base+0xcb4>
   12824:	ldrb	r3, [fp]
   12828:	ldr	r1, [r7, r2]
   1282c:	and	r2, r3, #31
   12830:	lsr	r3, r3, #5
   12834:	ldr	r3, [r1, r3, lsl #2]
   12838:	lsr	r3, r3, r2
   1283c:	tst	r3, #1
   12840:	beq	12868 <close_stdout@@Base+0x558>
   12844:	str	r4, [sp, #56]	; 0x38
   12848:	ldrb	r2, [fp]
   1284c:	strb	r4, [sp, #60]	; 0x3c
   12850:	strb	r4, [sp, #48]	; 0x30
   12854:	mov	r9, r2
   12858:	cmp	r9, #0
   1285c:	str	r2, [sp, #64]	; 0x40
   12860:	bne	12900 <close_stdout@@Base+0x5f0>
   12864:	bl	11614 <abort@plt>
   12868:	mov	r0, r6
   1286c:	bl	11374 <mbsinit@plt>
   12870:	cmp	r0, #0
   12874:	beq	12f78 <close_stdout@@Base+0xc68>
   12878:	strb	r4, [sp, #36]	; 0x24
   1287c:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   12880:	mov	r1, r0
   12884:	mov	r0, fp
   12888:	bl	14ab0 <close_stdout@@Base+0x27a0>
   1288c:	mov	r1, fp
   12890:	mov	r3, r6
   12894:	mov	r2, r0
   12898:	mov	r0, sl
   1289c:	bl	1141c <mbrtowc@plt>
   128a0:	cmn	r0, #1
   128a4:	str	r0, [sp, #56]	; 0x38
   128a8:	beq	12cec <close_stdout@@Base+0x9dc>
   128ac:	cmn	r0, #2
   128b0:	beq	12d1c <close_stdout@@Base+0xa0c>
   128b4:	cmp	r0, #0
   128b8:	bne	12d14 <close_stdout@@Base+0xa04>
   128bc:	ldr	fp, [sp, #52]	; 0x34
   128c0:	str	r4, [sp, #56]	; 0x38
   128c4:	ldrb	r3, [fp]
   128c8:	cmp	r3, #0
   128cc:	bne	12f9c <close_stdout@@Base+0xc8c>
   128d0:	ldr	r2, [sp, #64]	; 0x40
   128d4:	cmp	r2, #0
   128d8:	bne	12ccc <close_stdout@@Base+0x9bc>
   128dc:	mov	r9, r2
   128e0:	mov	r0, r6
   128e4:	strb	r4, [sp, #60]	; 0x3c
   128e8:	bl	11374 <mbsinit@plt>
   128ec:	strb	r4, [sp, #48]	; 0x30
   128f0:	cmp	r0, #0
   128f4:	strbne	r5, [sp, #36]	; 0x24
   128f8:	cmp	r9, #0
   128fc:	beq	12864 <close_stdout@@Base+0x554>
   12900:	ldr	fp, [sp, #52]	; 0x34
   12904:	ldr	r3, [sp, #56]	; 0x38
   12908:	strb	r5, [sp, #48]	; 0x30
   1290c:	add	fp, fp, r3
   12910:	ldrb	r3, [sp, #60]	; 0x3c
   12914:	cmp	r8, fp
   12918:	str	fp, [sp, #52]	; 0x34
   1291c:	bhi	12814 <close_stdout@@Base+0x504>
   12920:	cmp	r3, #0
   12924:	mov	r2, r9
   12928:	ldr	r9, [sp, #24]
   1292c:	beq	12de4 <close_stdout@@Base+0xad4>
   12930:	mov	r0, r2
   12934:	bl	11500 <iswalnum@plt>
   12938:	rsbs	r0, r0, #1
   1293c:	movcc	r0, #0
   12940:	str	r0, [sp, #24]
   12944:	strb	r5, [sp, #92]	; 0x5c
   12948:	ldrb	r2, [sp, #92]	; 0x5c
   1294c:	ldr	fp, [sp, #20]
   12950:	cmp	r2, #0
   12954:	str	r5, [r6, #4]
   12958:	str	r5, [r9, #4]
   1295c:	str	r8, [sp, #52]	; 0x34
   12960:	strb	r5, [sp, #36]	; 0x24
   12964:	str	r5, [r6]
   12968:	strb	r5, [sp, #48]	; 0x30
   1296c:	str	fp, [sp, #108]	; 0x6c
   12970:	str	r5, [r9]
   12974:	strb	r5, [sp, #104]	; 0x68
   12978:	bne	12b34 <close_stdout@@Base+0x824>
   1297c:	ldr	r1, [pc, #1600]	; 12fc4 <close_stdout@@Base+0xcb4>
   12980:	ldrb	r2, [fp]
   12984:	ldr	r0, [r7, r1]
   12988:	and	r1, r2, #31
   1298c:	lsr	r2, r2, #5
   12990:	ldr	r2, [r0, r2, lsl #2]
   12994:	lsr	r2, r2, r1
   12998:	tst	r2, #1
   1299c:	beq	12c94 <close_stdout@@Base+0x984>
   129a0:	str	r4, [sp, #112]	; 0x70
   129a4:	ldrb	r3, [fp]
   129a8:	strb	r4, [sp, #116]	; 0x74
   129ac:	mov	fp, r3
   129b0:	str	r3, [sp, #120]	; 0x78
   129b4:	cmp	fp, #0
   129b8:	strb	r4, [sp, #104]	; 0x68
   129bc:	mov	r3, #1
   129c0:	bne	12ae8 <close_stdout@@Base+0x7d8>
   129c4:	ldrb	ip, [sp, #48]	; 0x30
   129c8:	cmp	ip, #0
   129cc:	bne	12d38 <close_stdout@@Base+0xa28>
   129d0:	ldrb	r2, [sp, #36]	; 0x24
   129d4:	ldr	sl, [sp, #52]	; 0x34
   129d8:	cmp	r2, #0
   129dc:	bne	12e88 <close_stdout@@Base+0xb78>
   129e0:	ldr	r1, [pc, #1500]	; 12fc4 <close_stdout@@Base+0xcb4>
   129e4:	ldrb	r2, [sl]
   129e8:	ldr	r0, [r7, r1]
   129ec:	and	r1, r2, #31
   129f0:	lsr	r2, r2, #5
   129f4:	ldr	r2, [r0, r2, lsl #2]
   129f8:	lsr	r2, r2, r1
   129fc:	tst	r2, #1
   12a00:	beq	12e64 <close_stdout@@Base+0xb54>
   12a04:	str	r3, [sp, #56]	; 0x38
   12a08:	mov	ip, r3
   12a0c:	ldrb	r2, [sl]
   12a10:	strb	r3, [sp, #60]	; 0x3c
   12a14:	mov	r3, r2
   12a18:	str	r2, [sp, #64]	; 0x40
   12a1c:	strb	r4, [sp, #48]	; 0x30
   12a20:	cmp	ip, #0
   12a24:	beq	12a30 <close_stdout@@Base+0x720>
   12a28:	cmp	r3, #0
   12a2c:	beq	12a4c <close_stdout@@Base+0x73c>
   12a30:	ldrb	r2, [sp, #60]	; 0x3c
   12a34:	cmp	r2, #0
   12a38:	beq	12a4c <close_stdout@@Base+0x73c>
   12a3c:	mov	r0, r3
   12a40:	bl	11500 <iswalnum@plt>
   12a44:	cmp	r0, #0
   12a48:	bne	12a58 <close_stdout@@Base+0x748>
   12a4c:	ldr	r2, [sp, #24]
   12a50:	cmp	r2, #0
   12a54:	bne	12f70 <close_stdout@@Base+0xc60>
   12a58:	ldr	r2, [pc, #1380]	; 12fc4 <close_stdout@@Base+0xcb4>
   12a5c:	str	r5, [r6, #4]
   12a60:	str	r8, [sp, #52]	; 0x34
   12a64:	strb	r5, [sp, #36]	; 0x24
   12a68:	str	r5, [r6]
   12a6c:	strb	r5, [sp, #48]	; 0x30
   12a70:	ldrb	r3, [r8]
   12a74:	ldr	r1, [r7, r2]
   12a78:	and	r2, r3, #31
   12a7c:	lsr	r3, r3, #5
   12a80:	ldr	r3, [r1, r3, lsl #2]
   12a84:	lsr	r3, r3, r2
   12a88:	tst	r3, #1
   12a8c:	beq	12df0 <close_stdout@@Base+0xae0>
   12a90:	str	r4, [sp, #56]	; 0x38
   12a94:	ldrb	fp, [r8]
   12a98:	strb	r4, [sp, #60]	; 0x3c
   12a9c:	str	fp, [sp, #64]	; 0x40
   12aa0:	cmp	fp, #0
   12aa4:	strb	r4, [sp, #48]	; 0x30
   12aa8:	bne	12dd8 <close_stdout@@Base+0xac8>
   12aac:	ldr	r0, [sp, #20]
   12ab0:	bl	11338 <free@plt>
   12ab4:	ldr	r1, [sp, #28]
   12ab8:	ldr	r2, [sp, #148]	; 0x94
   12abc:	mov	r0, fp
   12ac0:	ldr	r3, [r1]
   12ac4:	cmp	r2, r3
   12ac8:	bne	12f98 <close_stdout@@Base+0xc88>
   12acc:	add	sp, sp, #156	; 0x9c
   12ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad4:	ldr	r0, [sp, #108]	; 0x6c
   12ad8:	bl	114d0 <strlen@plt>
   12adc:	strb	r5, [sp, #116]	; 0x74
   12ae0:	str	r0, [sp, #112]	; 0x70
   12ae4:	strb	r4, [sp, #104]	; 0x68
   12ae8:	ldrb	fp, [sp, #48]	; 0x30
   12aec:	cmp	fp, #0
   12af0:	beq	12b98 <close_stdout@@Base+0x888>
   12af4:	ldrb	fp, [sp, #60]	; 0x3c
   12af8:	cmp	fp, #0
   12afc:	bne	12bec <close_stdout@@Base+0x8dc>
   12b00:	ldr	r1, [sp, #52]	; 0x34
   12b04:	ldr	r2, [sp, #56]	; 0x38
   12b08:	ldr	fp, [sp, #108]	; 0x6c
   12b0c:	add	r1, r1, r2
   12b10:	ldr	r2, [sp, #112]	; 0x70
   12b14:	strb	r5, [sp, #48]	; 0x30
   12b18:	add	fp, fp, r2
   12b1c:	ldrb	r2, [sp, #92]	; 0x5c
   12b20:	strb	r5, [sp, #104]	; 0x68
   12b24:	cmp	r2, #0
   12b28:	str	r1, [sp, #52]	; 0x34
   12b2c:	str	fp, [sp, #108]	; 0x6c
   12b30:	beq	1297c <close_stdout@@Base+0x66c>
   12b34:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   12b38:	mov	r1, r0
   12b3c:	mov	r0, fp
   12b40:	bl	14ab0 <close_stdout@@Base+0x27a0>
   12b44:	mov	r1, fp
   12b48:	mov	r3, r9
   12b4c:	mov	r2, r0
   12b50:	add	r0, sp, #120	; 0x78
   12b54:	bl	1141c <mbrtowc@plt>
   12b58:	cmn	r0, #1
   12b5c:	str	r0, [sp, #112]	; 0x70
   12b60:	strbeq	r5, [sp, #116]	; 0x74
   12b64:	streq	r4, [sp, #112]	; 0x70
   12b68:	beq	12ae4 <close_stdout@@Base+0x7d4>
   12b6c:	cmn	r0, #2
   12b70:	beq	12ad4 <close_stdout@@Base+0x7c4>
   12b74:	cmp	r0, #0
   12b78:	beq	12cac <close_stdout@@Base+0x99c>
   12b7c:	ldr	fp, [sp, #120]	; 0x78
   12b80:	mov	r0, r9
   12b84:	strb	r4, [sp, #116]	; 0x74
   12b88:	bl	11374 <mbsinit@plt>
   12b8c:	cmp	r0, #0
   12b90:	strbne	r5, [sp, #92]	; 0x5c
   12b94:	b	129b4 <close_stdout@@Base+0x6a4>
   12b98:	ldrb	r3, [sp, #36]	; 0x24
   12b9c:	ldr	sl, [sp, #52]	; 0x34
   12ba0:	cmp	r3, #0
   12ba4:	bne	12c10 <close_stdout@@Base+0x900>
   12ba8:	ldr	r1, [pc, #1044]	; 12fc4 <close_stdout@@Base+0xcb4>
   12bac:	ldrb	r2, [sl]
   12bb0:	ldr	r0, [r7, r1]
   12bb4:	and	r1, r2, #31
   12bb8:	lsr	r2, r2, #5
   12bbc:	ldr	r2, [r0, r2, lsl #2]
   12bc0:	lsr	r2, r2, r1
   12bc4:	tst	r2, #1
   12bc8:	beq	12bfc <close_stdout@@Base+0x8ec>
   12bcc:	str	r4, [sp, #56]	; 0x38
   12bd0:	mov	fp, #1
   12bd4:	ldrb	r3, [sl]
   12bd8:	strb	r4, [sp, #60]	; 0x3c
   12bdc:	str	r3, [sp, #64]	; 0x40
   12be0:	cmp	fp, #0
   12be4:	strb	r4, [sp, #48]	; 0x30
   12be8:	beq	12b00 <close_stdout@@Base+0x7f0>
   12bec:	ldr	r3, [sp, #64]	; 0x40
   12bf0:	cmp	r3, #0
   12bf4:	bne	12b00 <close_stdout@@Base+0x7f0>
   12bf8:	b	12864 <close_stdout@@Base+0x554>
   12bfc:	mov	r0, r6
   12c00:	bl	11374 <mbsinit@plt>
   12c04:	cmp	r0, #0
   12c08:	beq	12f78 <close_stdout@@Base+0xc68>
   12c0c:	strb	r4, [sp, #36]	; 0x24
   12c10:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   12c14:	mov	r1, r0
   12c18:	mov	r0, sl
   12c1c:	bl	14ab0 <close_stdout@@Base+0x27a0>
   12c20:	mov	r1, sl
   12c24:	mov	r3, r6
   12c28:	mov	r2, r0
   12c2c:	add	r0, sp, #64	; 0x40
   12c30:	bl	1141c <mbrtowc@plt>
   12c34:	cmn	r0, #1
   12c38:	str	r0, [sp, #56]	; 0x38
   12c3c:	strbeq	r5, [sp, #60]	; 0x3c
   12c40:	streq	r4, [sp, #56]	; 0x38
   12c44:	beq	12be0 <close_stdout@@Base+0x8d0>
   12c48:	cmn	r0, #2
   12c4c:	beq	12d00 <close_stdout@@Base+0x9f0>
   12c50:	cmp	r0, #0
   12c54:	bne	12c78 <close_stdout@@Base+0x968>
   12c58:	ldr	r3, [sp, #52]	; 0x34
   12c5c:	str	r4, [sp, #56]	; 0x38
   12c60:	ldrb	r3, [r3]
   12c64:	cmp	r3, #0
   12c68:	bne	12f9c <close_stdout@@Base+0xc8c>
   12c6c:	ldr	r3, [sp, #64]	; 0x40
   12c70:	cmp	r3, #0
   12c74:	bne	12ccc <close_stdout@@Base+0x9bc>
   12c78:	mov	r0, r6
   12c7c:	strb	r4, [sp, #60]	; 0x3c
   12c80:	bl	11374 <mbsinit@plt>
   12c84:	mov	fp, #1
   12c88:	cmp	r0, #0
   12c8c:	strbne	r5, [sp, #36]	; 0x24
   12c90:	b	12be0 <close_stdout@@Base+0x8d0>
   12c94:	mov	r0, r9
   12c98:	bl	11374 <mbsinit@plt>
   12c9c:	cmp	r0, #0
   12ca0:	beq	12f78 <close_stdout@@Base+0xc68>
   12ca4:	strb	r4, [sp, #92]	; 0x5c
   12ca8:	b	12b34 <close_stdout@@Base+0x824>
   12cac:	ldr	r3, [sp, #108]	; 0x6c
   12cb0:	str	r4, [sp, #112]	; 0x70
   12cb4:	ldrb	r3, [r3]
   12cb8:	cmp	r3, #0
   12cbc:	bne	12f9c <close_stdout@@Base+0xc8c>
   12cc0:	ldr	fp, [sp, #120]	; 0x78
   12cc4:	cmp	fp, #0
   12cc8:	beq	12b80 <close_stdout@@Base+0x870>
   12ccc:	ldr	r0, [pc, #756]	; 12fc8 <close_stdout@@Base+0xcb8>
   12cd0:	mov	r2, #179	; 0xb3
   12cd4:	ldr	r1, [pc, #752]	; 12fcc <close_stdout@@Base+0xcbc>
   12cd8:	ldr	r3, [pc, #752]	; 12fd0 <close_stdout@@Base+0xcc0>
   12cdc:	add	r0, pc, r0
   12ce0:	add	r1, pc, r1
   12ce4:	add	r3, pc, r3
   12ce8:	bl	11638 <__assert_fail@plt>
   12cec:	str	r4, [sp, #56]	; 0x38
   12cf0:	strb	r5, [sp, #60]	; 0x3c
   12cf4:	ldr	r9, [sp, #64]	; 0x40
   12cf8:	ldr	fp, [sp, #52]	; 0x34
   12cfc:	b	12904 <close_stdout@@Base+0x5f4>
   12d00:	ldr	r0, [sp, #52]	; 0x34
   12d04:	bl	114d0 <strlen@plt>
   12d08:	strb	r5, [sp, #60]	; 0x3c
   12d0c:	str	r0, [sp, #56]	; 0x38
   12d10:	b	12be0 <close_stdout@@Base+0x8d0>
   12d14:	ldr	r9, [sp, #64]	; 0x40
   12d18:	b	128e0 <close_stdout@@Base+0x5d0>
   12d1c:	ldr	fp, [sp, #52]	; 0x34
   12d20:	mov	r0, fp
   12d24:	bl	114d0 <strlen@plt>
   12d28:	strb	r5, [sp, #60]	; 0x3c
   12d2c:	ldr	r9, [sp, #64]	; 0x40
   12d30:	str	r0, [sp, #56]	; 0x38
   12d34:	b	12904 <close_stdout@@Base+0x5f4>
   12d38:	ldr	r3, [sp, #64]	; 0x40
   12d3c:	ldrb	ip, [sp, #60]	; 0x3c
   12d40:	b	12a20 <close_stdout@@Base+0x710>
   12d44:	cmp	fp, r8
   12d48:	movcs	fp, #1
   12d4c:	bcs	12d6c <close_stdout@@Base+0xa5c>
   12d50:	bl	114ac <__ctype_b_loc@plt>
   12d54:	ldrb	r3, [r8, #-1]
   12d58:	lsl	r3, r3, #1
   12d5c:	ldr	r2, [r0]
   12d60:	ldrh	fp, [r2, r3]
   12d64:	eor	fp, fp, #8
   12d68:	ubfx	fp, fp, #3, #1
   12d6c:	ldr	r0, [sp, #20]
   12d70:	bl	114d0 <strlen@plt>
   12d74:	ldrb	r3, [r8, r0]
   12d78:	cmp	r3, #0
   12d7c:	beq	12da0 <close_stdout@@Base+0xa90>
   12d80:	str	r3, [sp, #8]
   12d84:	bl	114ac <__ctype_b_loc@plt>
   12d88:	ldr	r3, [sp, #8]
   12d8c:	lsl	r3, r3, #1
   12d90:	ldr	r2, [r0]
   12d94:	ldrh	r3, [r2, r3]
   12d98:	tst	r3, #8
   12d9c:	bne	12da8 <close_stdout@@Base+0xa98>
   12da0:	cmp	fp, #0
   12da4:	bne	12f70 <close_stdout@@Base+0xc60>
   12da8:	ldrb	r3, [r8]
   12dac:	cmp	r3, #0
   12db0:	beq	12dc4 <close_stdout@@Base+0xab4>
   12db4:	add	fp, r8, #1
   12db8:	ldrb	r3, [fp]
   12dbc:	cmp	r3, #0
   12dc0:	bne	127d0 <close_stdout@@Base+0x4c0>
   12dc4:	mov	fp, #0
   12dc8:	b	12aac <close_stdout@@Base+0x79c>
   12dcc:	ldr	r0, [sp, #52]	; 0x34
   12dd0:	bl	114d0 <strlen@plt>
   12dd4:	str	r0, [sp, #56]	; 0x38
   12dd8:	ldr	fp, [sp, #56]	; 0x38
   12ddc:	add	fp, r8, fp
   12de0:	b	127c4 <close_stdout@@Base+0x4b4>
   12de4:	mov	r3, #1
   12de8:	str	r3, [sp, #24]
   12dec:	b	12944 <close_stdout@@Base+0x634>
   12df0:	mov	r0, r6
   12df4:	bl	11374 <mbsinit@plt>
   12df8:	cmp	r0, #0
   12dfc:	beq	12f78 <close_stdout@@Base+0xc68>
   12e00:	strb	r4, [sp, #36]	; 0x24
   12e04:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   12e08:	mov	r1, r0
   12e0c:	mov	r0, r8
   12e10:	bl	14ab0 <close_stdout@@Base+0x27a0>
   12e14:	mov	r1, r8
   12e18:	mov	r3, r6
   12e1c:	mov	r2, r0
   12e20:	add	r0, sp, #64	; 0x40
   12e24:	bl	1141c <mbrtowc@plt>
   12e28:	cmn	r0, #1
   12e2c:	str	r0, [sp, #56]	; 0x38
   12e30:	streq	r4, [sp, #56]	; 0x38
   12e34:	beq	12dd8 <close_stdout@@Base+0xac8>
   12e38:	cmn	r0, #2
   12e3c:	beq	12dcc <close_stdout@@Base+0xabc>
   12e40:	cmp	r0, #0
   12e44:	beq	12ef4 <close_stdout@@Base+0xbe4>
   12e48:	ldr	fp, [sp, #64]	; 0x40
   12e4c:	mov	r0, r6
   12e50:	strb	r4, [sp, #60]	; 0x3c
   12e54:	bl	11374 <mbsinit@plt>
   12e58:	cmp	r0, #0
   12e5c:	strbne	r5, [sp, #36]	; 0x24
   12e60:	b	12aa0 <close_stdout@@Base+0x790>
   12e64:	mov	r0, r6
   12e68:	str	r3, [sp, #8]
   12e6c:	str	ip, [sp, #4]
   12e70:	bl	11374 <mbsinit@plt>
   12e74:	ldr	r3, [sp, #8]
   12e78:	ldr	ip, [sp, #4]
   12e7c:	cmp	r0, #0
   12e80:	beq	12f78 <close_stdout@@Base+0xc68>
   12e84:	strb	r3, [sp, #36]	; 0x24
   12e88:	str	ip, [sp, #4]
   12e8c:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   12e90:	mov	r1, r0
   12e94:	mov	r0, sl
   12e98:	bl	14ab0 <close_stdout@@Base+0x27a0>
   12e9c:	mov	r1, sl
   12ea0:	mov	r3, r6
   12ea4:	mov	r2, r0
   12ea8:	add	r0, sp, #64	; 0x40
   12eac:	bl	1141c <mbrtowc@plt>
   12eb0:	ldr	ip, [sp, #4]
   12eb4:	cmn	r0, #1
   12eb8:	str	r0, [sp, #56]	; 0x38
   12ebc:	beq	12f40 <close_stdout@@Base+0xc30>
   12ec0:	cmn	r0, #2
   12ec4:	beq	12f50 <close_stdout@@Base+0xc40>
   12ec8:	cmp	r0, #0
   12ecc:	bne	12f18 <close_stdout@@Base+0xc08>
   12ed0:	ldr	r3, [sp, #52]	; 0x34
   12ed4:	str	r4, [sp, #56]	; 0x38
   12ed8:	ldrb	r3, [r3]
   12edc:	cmp	r3, #0
   12ee0:	bne	12f9c <close_stdout@@Base+0xc8c>
   12ee4:	ldr	r3, [sp, #64]	; 0x40
   12ee8:	cmp	r3, #0
   12eec:	beq	12f1c <close_stdout@@Base+0xc0c>
   12ef0:	b	12ccc <close_stdout@@Base+0x9bc>
   12ef4:	ldr	r3, [sp, #52]	; 0x34
   12ef8:	str	r4, [sp, #56]	; 0x38
   12efc:	ldrb	r3, [r3]
   12f00:	cmp	r3, #0
   12f04:	bne	12f9c <close_stdout@@Base+0xc8c>
   12f08:	ldr	fp, [sp, #64]	; 0x40
   12f0c:	cmp	fp, #0
   12f10:	beq	12e4c <close_stdout@@Base+0xb3c>
   12f14:	b	12ccc <close_stdout@@Base+0x9bc>
   12f18:	ldr	r3, [sp, #64]	; 0x40
   12f1c:	mov	r0, r6
   12f20:	str	r3, [sp, #8]
   12f24:	strb	r4, [sp, #60]	; 0x3c
   12f28:	bl	11374 <mbsinit@plt>
   12f2c:	ldr	r3, [sp, #8]
   12f30:	mov	ip, #1
   12f34:	cmp	r0, #0
   12f38:	strbne	r5, [sp, #36]	; 0x24
   12f3c:	b	12a1c <close_stdout@@Base+0x70c>
   12f40:	str	r4, [sp, #56]	; 0x38
   12f44:	strb	r5, [sp, #60]	; 0x3c
   12f48:	ldr	r3, [sp, #64]	; 0x40
   12f4c:	b	12a1c <close_stdout@@Base+0x70c>
   12f50:	ldr	r0, [sp, #52]	; 0x34
   12f54:	str	ip, [sp, #4]
   12f58:	bl	114d0 <strlen@plt>
   12f5c:	strb	r5, [sp, #60]	; 0x3c
   12f60:	ldr	r3, [sp, #64]	; 0x40
   12f64:	ldr	ip, [sp, #4]
   12f68:	str	r0, [sp, #56]	; 0x38
   12f6c:	b	12a1c <close_stdout@@Base+0x70c>
   12f70:	mov	fp, #1
   12f74:	b	12aac <close_stdout@@Base+0x79c>
   12f78:	ldr	r0, [pc, #84]	; 12fd4 <close_stdout@@Base+0xcc4>
   12f7c:	mov	r2, #150	; 0x96
   12f80:	ldr	r1, [pc, #80]	; 12fd8 <close_stdout@@Base+0xcc8>
   12f84:	ldr	r3, [pc, #80]	; 12fdc <close_stdout@@Base+0xccc>
   12f88:	add	r0, pc, r0
   12f8c:	add	r1, pc, r1
   12f90:	add	r3, pc, r3
   12f94:	bl	11638 <__assert_fail@plt>
   12f98:	bl	11398 <__stack_chk_fail@plt>
   12f9c:	ldr	r0, [pc, #60]	; 12fe0 <close_stdout@@Base+0xcd0>
   12fa0:	mov	r2, #178	; 0xb2
   12fa4:	ldr	r1, [pc, #56]	; 12fe4 <close_stdout@@Base+0xcd4>
   12fa8:	ldr	r3, [pc, #56]	; 12fe8 <close_stdout@@Base+0xcd8>
   12fac:	add	r0, pc, r0
   12fb0:	add	r1, pc, r1
   12fb4:	add	r3, pc, r3
   12fb8:	bl	11638 <__assert_fail@plt>
   12fbc:	andeq	sl, r1, r8, ror r8
   12fc0:	andeq	r0, r0, r0, asr #2
   12fc4:	andeq	r0, r0, ip, lsr r1
   12fc8:	andeq	r9, r0, r0, ror r0
   12fcc:	andeq	r9, r0, r4, asr #32
   12fd0:	andeq	r9, r0, r4, lsl r0
   12fd4:	andeq	r8, r0, r4, lsl #27
   12fd8:	muleq	r0, r8, sp
   12fdc:	andeq	r8, r0, r8, ror #26
   12fe0:	andeq	r8, r0, r8, lsl #27
   12fe4:	andeq	r8, r0, r4, ror sp
   12fe8:	andeq	r8, r0, r4, asr #26
   12fec:	push	{r4, r5, r6, lr}
   12ff0:	mov	r1, r0
   12ff4:	mov	r4, r0
   12ff8:	sub	sp, sp, #8
   12ffc:	mov	r2, #5
   13000:	mov	r0, #0
   13004:	bl	1138c <dcgettext@plt>
   13008:	cmp	r0, r4
   1300c:	mov	r5, r0
   13010:	moveq	r0, r0
   13014:	beq	1302c <close_stdout@@Base+0xd1c>
   13018:	mov	r1, r4
   1301c:	bl	12768 <close_stdout@@Base+0x458>
   13020:	cmp	r0, #0
   13024:	mov	r0, r5
   13028:	beq	13034 <close_stdout@@Base+0xd24>
   1302c:	add	sp, sp, #8
   13030:	pop	{r4, r5, r6, pc}
   13034:	bl	114d0 <strlen@plt>
   13038:	mov	r6, r0
   1303c:	mov	r0, r4
   13040:	bl	114d0 <strlen@plt>
   13044:	add	r0, r6, r0
   13048:	add	r0, r0, #4
   1304c:	bl	15630 <close_stdout@@Base+0x3320>
   13050:	ldr	r3, [pc, #36]	; 1307c <close_stdout@@Base+0xd6c>
   13054:	str	r5, [sp]
   13058:	mov	r1, #1
   1305c:	str	r4, [sp, #4]
   13060:	mvn	r2, #0
   13064:	add	r3, pc, r3
   13068:	mov	r6, r0
   1306c:	bl	1150c <__sprintf_chk@plt>
   13070:	mov	r0, r6
   13074:	add	sp, sp, #8
   13078:	pop	{r4, r5, r6, pc}
   1307c:	strdeq	r8, [r0], -ip
   13080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13084:	mov	r6, r0
   13088:	sub	sp, sp, #12
   1308c:	mov	r2, #5
   13090:	mov	r4, r1
   13094:	mov	r0, #0
   13098:	mov	r1, r6
   1309c:	ldr	r7, [pc, #640]	; 13324 <close_stdout@@Base+0x1014>
   130a0:	bl	1138c <dcgettext@plt>
   130a4:	add	r7, pc, r7
   130a8:	mov	r8, r0
   130ac:	bl	164ec <close_stdout@@Base+0x41dc>
   130b0:	mov	r1, r7
   130b4:	mov	r9, r0
   130b8:	bl	16208 <close_stdout@@Base+0x3ef8>
   130bc:	cmp	r0, #0
   130c0:	moveq	r5, r0
   130c4:	moveq	r9, r4
   130c8:	bne	13114 <close_stdout@@Base+0xe04>
   130cc:	cmp	r4, #0
   130d0:	movne	sl, r4
   130d4:	movne	r7, #0
   130d8:	beq	131cc <close_stdout@@Base+0xebc>
   130dc:	mov	r0, r8
   130e0:	mov	r1, r6
   130e4:	bl	11308 <strcmp@plt>
   130e8:	cmp	r0, #0
   130ec:	bne	131e4 <close_stdout@@Base+0xed4>
   130f0:	cmp	r5, r4
   130f4:	cmpne	r5, #0
   130f8:	bne	13274 <close_stdout@@Base+0xf64>
   130fc:	cmp	r7, r4
   13100:	cmpne	r7, #0
   13104:	moveq	r0, r4
   13108:	bne	13260 <close_stdout@@Base+0xf50>
   1310c:	add	sp, sp, #12
   13110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13114:	mov	r2, r9
   13118:	mov	r1, r7
   1311c:	mov	r0, r4
   13120:	bl	15930 <close_stdout@@Base+0x3620>
   13124:	mov	r5, r0
   13128:	mov	r0, r9
   1312c:	bl	114d0 <strlen@plt>
   13130:	mov	fp, r0
   13134:	add	r0, r0, #11
   13138:	bl	15630 <close_stdout@@Base+0x3320>
   1313c:	mov	r1, r9
   13140:	mov	r2, fp
   13144:	mov	sl, r0
   13148:	bl	11350 <memcpy@plt>
   1314c:	ldr	r3, [pc, #468]	; 13328 <close_stdout@@Base+0x1018>
   13150:	add	ip, sl, fp
   13154:	mov	r2, sl
   13158:	add	r3, pc, r3
   1315c:	ldm	r3!, {r0, r1}
   13160:	ldrh	lr, [r3]
   13164:	ldrb	r3, [r3, #2]
   13168:	str	r0, [sl, fp]
   1316c:	mov	r0, r4
   13170:	str	r1, [ip, #4]
   13174:	mov	r1, r7
   13178:	strh	lr, [ip, #8]
   1317c:	strb	r3, [ip, #10]
   13180:	bl	15930 <close_stdout@@Base+0x3620>
   13184:	mov	r9, r0
   13188:	mov	r0, sl
   1318c:	bl	11338 <free@plt>
   13190:	cmp	r9, #0
   13194:	beq	13304 <close_stdout@@Base+0xff4>
   13198:	mov	r0, r9
   1319c:	mov	r1, #63	; 0x3f
   131a0:	bl	114dc <strchr@plt>
   131a4:	cmp	r0, #0
   131a8:	beq	132ec <close_stdout@@Base+0xfdc>
   131ac:	mov	r0, r9
   131b0:	mov	r4, r5
   131b4:	bl	11338 <free@plt>
   131b8:	cmp	r4, #0
   131bc:	mov	r9, #0
   131c0:	movne	sl, r4
   131c4:	movne	r7, #0
   131c8:	bne	130dc <close_stdout@@Base+0xdcc>
   131cc:	cmp	r9, #0
   131d0:	beq	1330c <close_stdout@@Base+0xffc>
   131d4:	mov	r7, r4
   131d8:	mov	sl, #0
   131dc:	mov	r4, r9
   131e0:	b	130dc <close_stdout@@Base+0xdcc>
   131e4:	mov	r1, r6
   131e8:	mov	r0, r8
   131ec:	bl	12768 <close_stdout@@Base+0x458>
   131f0:	cmp	r0, #0
   131f4:	bne	13230 <close_stdout@@Base+0xf20>
   131f8:	cmp	sl, #0
   131fc:	beq	13214 <close_stdout@@Base+0xf04>
   13200:	mov	r1, sl
   13204:	mov	r0, r8
   13208:	bl	12768 <close_stdout@@Base+0x458>
   1320c:	cmp	r0, #0
   13210:	bne	13230 <close_stdout@@Base+0xf20>
   13214:	cmp	r9, #0
   13218:	beq	13280 <close_stdout@@Base+0xf70>
   1321c:	mov	r1, r9
   13220:	mov	r0, r8
   13224:	bl	12768 <close_stdout@@Base+0x458>
   13228:	cmp	r0, #0
   1322c:	beq	13280 <close_stdout@@Base+0xf70>
   13230:	cmp	r5, #0
   13234:	beq	13240 <close_stdout@@Base+0xf30>
   13238:	mov	r0, r5
   1323c:	bl	11338 <free@plt>
   13240:	cmp	r7, #0
   13244:	moveq	r0, r8
   13248:	beq	1310c <close_stdout@@Base+0xdfc>
   1324c:	mov	r0, r7
   13250:	bl	11338 <free@plt>
   13254:	mov	r0, r8
   13258:	add	sp, sp, #12
   1325c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13260:	mov	r0, r7
   13264:	bl	11338 <free@plt>
   13268:	mov	r0, r4
   1326c:	add	sp, sp, #12
   13270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13274:	mov	r0, r5
   13278:	bl	11338 <free@plt>
   1327c:	b	130fc <close_stdout@@Base+0xdec>
   13280:	mov	r0, r8
   13284:	bl	114d0 <strlen@plt>
   13288:	mov	r6, r0
   1328c:	mov	r0, r4
   13290:	bl	114d0 <strlen@plt>
   13294:	add	r0, r6, r0
   13298:	add	r0, r0, #4
   1329c:	bl	15630 <close_stdout@@Base+0x3320>
   132a0:	ldr	r3, [pc, #132]	; 1332c <close_stdout@@Base+0x101c>
   132a4:	str	r8, [sp]
   132a8:	mov	r1, #1
   132ac:	str	r4, [sp, #4]
   132b0:	mvn	r2, #0
   132b4:	add	r3, pc, r3
   132b8:	mov	r6, r0
   132bc:	bl	1150c <__sprintf_chk@plt>
   132c0:	cmp	r5, #0
   132c4:	beq	132d0 <close_stdout@@Base+0xfc0>
   132c8:	mov	r0, r5
   132cc:	bl	11338 <free@plt>
   132d0:	cmp	r7, #0
   132d4:	moveq	r0, r6
   132d8:	beq	1310c <close_stdout@@Base+0xdfc>
   132dc:	mov	r0, r7
   132e0:	bl	11338 <free@plt>
   132e4:	mov	r0, r6
   132e8:	b	1310c <close_stdout@@Base+0xdfc>
   132ec:	cmp	r5, #0
   132f0:	beq	1331c <close_stdout@@Base+0x100c>
   132f4:	mov	sl, r5
   132f8:	mov	r7, r9
   132fc:	mov	r4, r5
   13300:	b	130dc <close_stdout@@Base+0xdcc>
   13304:	mov	r4, r5
   13308:	b	130cc <close_stdout@@Base+0xdbc>
   1330c:	mov	sl, r9
   13310:	mov	r7, r9
   13314:	mov	r4, r6
   13318:	b	130dc <close_stdout@@Base+0xdcc>
   1331c:	mov	r4, r9
   13320:	b	131d4 <close_stdout@@Base+0xec4>
   13324:	andeq	r8, r0, r4, asr #25
   13328:	andeq	r8, r0, r8, lsl ip
   1332c:	andeq	r8, r0, ip, lsr #21
   13330:	push	{r3, lr}
   13334:	mov	r3, r0
   13338:	mov	r2, #0
   1333c:	cmp	r1, #8
   13340:	str	r2, [r3], #4
   13344:	add	r3, r3, #4
   13348:	str	r2, [r0, #4]
   1334c:	str	r2, [r3], #4
   13350:	str	r2, [r3], #4
   13354:	str	r2, [r3], #4
   13358:	str	r2, [r3], #4
   1335c:	str	r2, [r3], #4
   13360:	str	r2, [r3], #4
   13364:	str	r2, [r3], #4
   13368:	str	r2, [r3], #4
   1336c:	str	r2, [r3], #4
   13370:	str	r2, [r3]
   13374:	beq	13380 <close_stdout@@Base+0x1070>
   13378:	str	r1, [r0]
   1337c:	pop	{r3, pc}
   13380:	bl	11614 <abort@plt>
   13384:	push	{r4, r5, r6, lr}
   13388:	mov	r4, r0
   1338c:	mov	r6, r1
   13390:	mov	r0, #0
   13394:	mov	r1, r4
   13398:	mov	r2, #5
   1339c:	bl	1138c <dcgettext@plt>
   133a0:	cmp	r0, r4
   133a4:	mov	r5, r0
   133a8:	beq	133b0 <close_stdout@@Base+0x10a0>
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	bl	164ec <close_stdout@@Base+0x41dc>
   133b4:	ldrb	r3, [r0]
   133b8:	bic	r3, r3, #32
   133bc:	cmp	r3, #85	; 0x55
   133c0:	bne	13434 <close_stdout@@Base+0x1124>
   133c4:	ldrb	r3, [r0, #1]
   133c8:	bic	r3, r3, #32
   133cc:	cmp	r3, #84	; 0x54
   133d0:	bne	13420 <close_stdout@@Base+0x1110>
   133d4:	ldrb	r3, [r0, #2]
   133d8:	bic	r3, r3, #32
   133dc:	cmp	r3, #70	; 0x46
   133e0:	bne	13420 <close_stdout@@Base+0x1110>
   133e4:	ldrb	r3, [r0, #3]
   133e8:	cmp	r3, #45	; 0x2d
   133ec:	bne	13420 <close_stdout@@Base+0x1110>
   133f0:	ldrb	r3, [r0, #4]
   133f4:	cmp	r3, #56	; 0x38
   133f8:	bne	13420 <close_stdout@@Base+0x1110>
   133fc:	ldrb	r3, [r0, #5]
   13400:	cmp	r3, #0
   13404:	bne	13420 <close_stdout@@Base+0x1110>
   13408:	ldrb	r3, [r5]
   1340c:	cmp	r3, #96	; 0x60
   13410:	beq	134ac <close_stdout@@Base+0x119c>
   13414:	ldr	r0, [pc, #180]	; 134d0 <close_stdout@@Base+0x11c0>
   13418:	add	r0, pc, r0
   1341c:	pop	{r4, r5, r6, pc}
   13420:	cmp	r6, #7
   13424:	beq	134b8 <close_stdout@@Base+0x11a8>
   13428:	ldr	r0, [pc, #164]	; 134d4 <close_stdout@@Base+0x11c4>
   1342c:	add	r0, pc, r0
   13430:	pop	{r4, r5, r6, pc}
   13434:	cmp	r3, #71	; 0x47
   13438:	bne	13420 <close_stdout@@Base+0x1110>
   1343c:	ldrb	r3, [r0, #1]
   13440:	bic	r3, r3, #32
   13444:	cmp	r3, #66	; 0x42
   13448:	bne	13420 <close_stdout@@Base+0x1110>
   1344c:	ldrb	r3, [r0, #2]
   13450:	cmp	r3, #49	; 0x31
   13454:	bne	13420 <close_stdout@@Base+0x1110>
   13458:	ldrb	r3, [r0, #3]
   1345c:	cmp	r3, #56	; 0x38
   13460:	bne	13420 <close_stdout@@Base+0x1110>
   13464:	ldrb	r3, [r0, #4]
   13468:	cmp	r3, #48	; 0x30
   1346c:	bne	13420 <close_stdout@@Base+0x1110>
   13470:	ldrb	r3, [r0, #5]
   13474:	cmp	r3, #51	; 0x33
   13478:	bne	13420 <close_stdout@@Base+0x1110>
   1347c:	ldrb	r3, [r0, #6]
   13480:	cmp	r3, #48	; 0x30
   13484:	bne	13420 <close_stdout@@Base+0x1110>
   13488:	ldrb	r3, [r0, #7]
   1348c:	cmp	r3, #0
   13490:	bne	13420 <close_stdout@@Base+0x1110>
   13494:	ldrb	r3, [r5]
   13498:	cmp	r3, #96	; 0x60
   1349c:	beq	134c4 <close_stdout@@Base+0x11b4>
   134a0:	ldr	r0, [pc, #48]	; 134d8 <close_stdout@@Base+0x11c8>
   134a4:	add	r0, pc, r0
   134a8:	pop	{r4, r5, r6, pc}
   134ac:	ldr	r0, [pc, #40]	; 134dc <close_stdout@@Base+0x11cc>
   134b0:	add	r0, pc, r0
   134b4:	pop	{r4, r5, r6, pc}
   134b8:	ldr	r0, [pc, #32]	; 134e0 <close_stdout@@Base+0x11d0>
   134bc:	add	r0, pc, r0
   134c0:	pop	{r4, r5, r6, pc}
   134c4:	ldr	r0, [pc, #24]	; 134e4 <close_stdout@@Base+0x11d4>
   134c8:	add	r0, pc, r0
   134cc:	pop	{r4, r5, r6, pc}
   134d0:	andeq	r8, r0, r4, lsl #19
   134d4:	andeq	r8, r0, r8, ror r9
   134d8:	strdeq	r8, [r0], -ip
   134dc:	andeq	r8, r0, r0, lsl #18
   134e0:	andeq	r8, r0, ip, ror #17
   134e4:	andeq	r8, r0, r4, ror #17
   134e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134ec:	sub	sp, sp, #124	; 0x7c
   134f0:	ldr	ip, [pc, #3304]	; 141e0 <close_stdout@@Base+0x1ed0>
   134f4:	mov	sl, r1
   134f8:	str	r0, [sp, #40]	; 0x28
   134fc:	mov	r8, r3
   13500:	ldr	r0, [pc, #3292]	; 141e4 <close_stdout@@Base+0x1ed4>
   13504:	add	ip, pc, ip
   13508:	str	r2, [sp, #32]
   1350c:	ldr	r1, [sp, #164]	; 0xa4
   13510:	mov	r3, ip
   13514:	ldr	r0, [ip, r0]
   13518:	ldr	r2, [sp, #172]	; 0xac
   1351c:	ubfx	r1, r1, #1, #1
   13520:	str	r1, [sp, #36]	; 0x24
   13524:	str	r0, [sp, #56]	; 0x38
   13528:	ldr	r0, [sp, #168]	; 0xa8
   1352c:	ldr	r1, [sp, #176]	; 0xb0
   13530:	str	r2, [sp, #72]	; 0x48
   13534:	str	r0, [sp, #48]	; 0x30
   13538:	ldr	r0, [sp, #56]	; 0x38
   1353c:	str	r1, [sp, #68]	; 0x44
   13540:	ldr	r3, [r0]
   13544:	str	r3, [sp, #116]	; 0x74
   13548:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   1354c:	ldr	r2, [sp, #160]	; 0xa0
   13550:	str	r0, [sp, #64]	; 0x40
   13554:	cmp	r2, #8
   13558:	addls	pc, pc, r2, lsl #2
   1355c:	b	140bc <close_stdout@@Base+0x1dac>
   13560:	b	13584 <close_stdout@@Base+0x1274>
   13564:	b	13dd4 <close_stdout@@Base+0x1ac4>
   13568:	b	13e04 <close_stdout@@Base+0x1af4>
   1356c:	b	13cb4 <close_stdout@@Base+0x19a4>
   13570:	b	13cf4 <close_stdout@@Base+0x19e4>
   13574:	b	13d20 <close_stdout@@Base+0x1a10>
   13578:	b	13d40 <close_stdout@@Base+0x1a30>
   1357c:	b	13d40 <close_stdout@@Base+0x1a30>
   13580:	b	13d40 <close_stdout@@Base+0x1a30>
   13584:	mov	r2, #0
   13588:	str	r2, [sp, #36]	; 0x24
   1358c:	mov	r9, r2
   13590:	str	r2, [sp, #24]
   13594:	str	r2, [sp, #28]
   13598:	str	r2, [sp, #52]	; 0x34
   1359c:	ldr	r0, [sp, #36]	; 0x24
   135a0:	mov	fp, #0
   135a4:	ldr	r1, [sp, #24]
   135a8:	eor	r2, r0, #1
   135ac:	eor	r3, r1, #1
   135b0:	and	r3, r2, r3
   135b4:	and	r2, r1, r0
   135b8:	str	r3, [sp, #44]	; 0x2c
   135bc:	str	r2, [sp, #76]	; 0x4c
   135c0:	cmn	r8, #1
   135c4:	beq	13944 <close_stdout@@Base+0x1634>
   135c8:	subs	r3, fp, r8
   135cc:	movne	r3, #1
   135d0:	cmp	r3, #0
   135d4:	beq	1395c <close_stdout@@Base+0x164c>
   135d8:	ldr	r3, [sp, #28]
   135dc:	ldr	r0, [sp, #24]
   135e0:	adds	r7, r3, #0
   135e4:	movne	r7, #1
   135e8:	ands	r6, r7, r0
   135ec:	bne	13e48 <close_stdout@@Base+0x1b38>
   135f0:	ldr	r1, [sp, #32]
   135f4:	add	r5, r1, fp
   135f8:	ldrb	r4, [r5]
   135fc:	cmp	r4, #126	; 0x7e
   13600:	addls	pc, pc, r4, lsl #2
   13604:	b	13bc8 <close_stdout@@Base+0x18b8>
   13608:	b	13ad4 <close_stdout@@Base+0x17c4>
   1360c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13610:	b	13bc8 <close_stdout@@Base+0x18b8>
   13614:	b	13bc8 <close_stdout@@Base+0x18b8>
   13618:	b	13bc8 <close_stdout@@Base+0x18b8>
   1361c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13620:	b	13bc8 <close_stdout@@Base+0x18b8>
   13624:	b	13abc <close_stdout@@Base+0x17ac>
   13628:	b	13aa4 <close_stdout@@Base+0x1794>
   1362c:	b	13acc <close_stdout@@Base+0x17bc>
   13630:	b	13ac4 <close_stdout@@Base+0x17b4>
   13634:	b	13ab4 <close_stdout@@Base+0x17a4>
   13638:	b	13aac <close_stdout@@Base+0x179c>
   1363c:	b	13a70 <close_stdout@@Base+0x1760>
   13640:	b	13bc8 <close_stdout@@Base+0x18b8>
   13644:	b	13bc8 <close_stdout@@Base+0x18b8>
   13648:	b	13bc8 <close_stdout@@Base+0x18b8>
   1364c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13650:	b	13bc8 <close_stdout@@Base+0x18b8>
   13654:	b	13bc8 <close_stdout@@Base+0x18b8>
   13658:	b	13bc8 <close_stdout@@Base+0x18b8>
   1365c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13660:	b	13bc8 <close_stdout@@Base+0x18b8>
   13664:	b	13bc8 <close_stdout@@Base+0x18b8>
   13668:	b	13bc8 <close_stdout@@Base+0x18b8>
   1366c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13670:	b	13bc8 <close_stdout@@Base+0x18b8>
   13674:	b	13bc8 <close_stdout@@Base+0x18b8>
   13678:	b	13bc8 <close_stdout@@Base+0x18b8>
   1367c:	b	13bc8 <close_stdout@@Base+0x18b8>
   13680:	b	13bc8 <close_stdout@@Base+0x18b8>
   13684:	b	13bc8 <close_stdout@@Base+0x18b8>
   13688:	b	139fc <close_stdout@@Base+0x16ec>
   1368c:	b	139fc <close_stdout@@Base+0x16ec>
   13690:	b	139fc <close_stdout@@Base+0x16ec>
   13694:	b	139f4 <close_stdout@@Base+0x16e4>
   13698:	b	139fc <close_stdout@@Base+0x16ec>
   1369c:	b	138d0 <close_stdout@@Base+0x15c0>
   136a0:	b	139fc <close_stdout@@Base+0x16ec>
   136a4:	b	13b70 <close_stdout@@Base+0x1860>
   136a8:	b	139fc <close_stdout@@Base+0x16ec>
   136ac:	b	139fc <close_stdout@@Base+0x16ec>
   136b0:	b	139fc <close_stdout@@Base+0x16ec>
   136b4:	b	138d0 <close_stdout@@Base+0x15c0>
   136b8:	b	138d0 <close_stdout@@Base+0x15c0>
   136bc:	b	138d0 <close_stdout@@Base+0x15c0>
   136c0:	b	138d0 <close_stdout@@Base+0x15c0>
   136c4:	b	138d0 <close_stdout@@Base+0x15c0>
   136c8:	b	138d0 <close_stdout@@Base+0x15c0>
   136cc:	b	138d0 <close_stdout@@Base+0x15c0>
   136d0:	b	138d0 <close_stdout@@Base+0x15c0>
   136d4:	b	138d0 <close_stdout@@Base+0x15c0>
   136d8:	b	138d0 <close_stdout@@Base+0x15c0>
   136dc:	b	138d0 <close_stdout@@Base+0x15c0>
   136e0:	b	138d0 <close_stdout@@Base+0x15c0>
   136e4:	b	138d0 <close_stdout@@Base+0x15c0>
   136e8:	b	138d0 <close_stdout@@Base+0x15c0>
   136ec:	b	138d0 <close_stdout@@Base+0x15c0>
   136f0:	b	138d0 <close_stdout@@Base+0x15c0>
   136f4:	b	139fc <close_stdout@@Base+0x16ec>
   136f8:	b	139fc <close_stdout@@Base+0x16ec>
   136fc:	b	139fc <close_stdout@@Base+0x16ec>
   13700:	b	139fc <close_stdout@@Base+0x16ec>
   13704:	b	13804 <close_stdout@@Base+0x14f4>
   13708:	b	13bc8 <close_stdout@@Base+0x18b8>
   1370c:	b	138d0 <close_stdout@@Base+0x15c0>
   13710:	b	138d0 <close_stdout@@Base+0x15c0>
   13714:	b	138d0 <close_stdout@@Base+0x15c0>
   13718:	b	138d0 <close_stdout@@Base+0x15c0>
   1371c:	b	138d0 <close_stdout@@Base+0x15c0>
   13720:	b	138d0 <close_stdout@@Base+0x15c0>
   13724:	b	138d0 <close_stdout@@Base+0x15c0>
   13728:	b	138d0 <close_stdout@@Base+0x15c0>
   1372c:	b	138d0 <close_stdout@@Base+0x15c0>
   13730:	b	138d0 <close_stdout@@Base+0x15c0>
   13734:	b	138d0 <close_stdout@@Base+0x15c0>
   13738:	b	138d0 <close_stdout@@Base+0x15c0>
   1373c:	b	138d0 <close_stdout@@Base+0x15c0>
   13740:	b	138d0 <close_stdout@@Base+0x15c0>
   13744:	b	138d0 <close_stdout@@Base+0x15c0>
   13748:	b	138d0 <close_stdout@@Base+0x15c0>
   1374c:	b	138d0 <close_stdout@@Base+0x15c0>
   13750:	b	138d0 <close_stdout@@Base+0x15c0>
   13754:	b	138d0 <close_stdout@@Base+0x15c0>
   13758:	b	138d0 <close_stdout@@Base+0x15c0>
   1375c:	b	138d0 <close_stdout@@Base+0x15c0>
   13760:	b	138d0 <close_stdout@@Base+0x15c0>
   13764:	b	138d0 <close_stdout@@Base+0x15c0>
   13768:	b	138d0 <close_stdout@@Base+0x15c0>
   1376c:	b	138d0 <close_stdout@@Base+0x15c0>
   13770:	b	138d0 <close_stdout@@Base+0x15c0>
   13774:	b	139fc <close_stdout@@Base+0x16ec>
   13778:	b	13b54 <close_stdout@@Base+0x1844>
   1377c:	b	138d0 <close_stdout@@Base+0x15c0>
   13780:	b	139fc <close_stdout@@Base+0x16ec>
   13784:	b	138d0 <close_stdout@@Base+0x15c0>
   13788:	b	139fc <close_stdout@@Base+0x16ec>
   1378c:	b	138d0 <close_stdout@@Base+0x15c0>
   13790:	b	138d0 <close_stdout@@Base+0x15c0>
   13794:	b	138d0 <close_stdout@@Base+0x15c0>
   13798:	b	138d0 <close_stdout@@Base+0x15c0>
   1379c:	b	138d0 <close_stdout@@Base+0x15c0>
   137a0:	b	138d0 <close_stdout@@Base+0x15c0>
   137a4:	b	138d0 <close_stdout@@Base+0x15c0>
   137a8:	b	138d0 <close_stdout@@Base+0x15c0>
   137ac:	b	138d0 <close_stdout@@Base+0x15c0>
   137b0:	b	138d0 <close_stdout@@Base+0x15c0>
   137b4:	b	138d0 <close_stdout@@Base+0x15c0>
   137b8:	b	138d0 <close_stdout@@Base+0x15c0>
   137bc:	b	138d0 <close_stdout@@Base+0x15c0>
   137c0:	b	138d0 <close_stdout@@Base+0x15c0>
   137c4:	b	138d0 <close_stdout@@Base+0x15c0>
   137c8:	b	138d0 <close_stdout@@Base+0x15c0>
   137cc:	b	138d0 <close_stdout@@Base+0x15c0>
   137d0:	b	138d0 <close_stdout@@Base+0x15c0>
   137d4:	b	138d0 <close_stdout@@Base+0x15c0>
   137d8:	b	138d0 <close_stdout@@Base+0x15c0>
   137dc:	b	138d0 <close_stdout@@Base+0x15c0>
   137e0:	b	138d0 <close_stdout@@Base+0x15c0>
   137e4:	b	138d0 <close_stdout@@Base+0x15c0>
   137e8:	b	138d0 <close_stdout@@Base+0x15c0>
   137ec:	b	138d0 <close_stdout@@Base+0x15c0>
   137f0:	b	138d0 <close_stdout@@Base+0x15c0>
   137f4:	b	139dc <close_stdout@@Base+0x16cc>
   137f8:	b	139fc <close_stdout@@Base+0x16ec>
   137fc:	b	139dc <close_stdout@@Base+0x16cc>
   13800:	b	139f4 <close_stdout@@Base+0x16e4>
   13804:	ldr	r3, [sp, #160]	; 0xa0
   13808:	cmp	r3, #2
   1380c:	beq	14098 <close_stdout@@Base+0x1d88>
   13810:	cmp	r3, #3
   13814:	bne	138d0 <close_stdout@@Base+0x15c0>
   13818:	ldr	r1, [sp, #164]	; 0xa4
   1381c:	tst	r1, #4
   13820:	beq	138d0 <close_stdout@@Base+0x15c0>
   13824:	add	r3, fp, #2
   13828:	cmp	r8, r3
   1382c:	bls	138d0 <close_stdout@@Base+0x15c0>
   13830:	ldrb	r2, [r5, #1]
   13834:	mov	r1, #1
   13838:	cmp	r2, #63	; 0x3f
   1383c:	bne	138d0 <close_stdout@@Base+0x15c0>
   13840:	ldr	r0, [sp, #32]
   13844:	ldrb	ip, [r0, r3]
   13848:	sub	r0, ip, #33	; 0x21
   1384c:	uxtb	r0, r0
   13850:	cmp	r0, #29
   13854:	bhi	138d0 <close_stdout@@Base+0x15c0>
   13858:	lsl	r1, r1, r0
   1385c:	movw	r0, #20929	; 0x51c1
   13860:	movt	r0, #14336	; 0x3800
   13864:	and	r0, r1, r0
   13868:	cmp	r0, #0
   1386c:	beq	138d0 <close_stdout@@Base+0x15c0>
   13870:	ldr	r1, [sp, #36]	; 0x24
   13874:	cmp	r1, #0
   13878:	bne	13a18 <close_stdout@@Base+0x1708>
   1387c:	cmp	r9, sl
   13880:	mov	r4, ip
   13884:	mov	fp, r3
   13888:	ldrcc	r0, [sp, #40]	; 0x28
   1388c:	strbcc	r2, [r0, r9]
   13890:	add	r2, r9, #1
   13894:	cmp	sl, r2
   13898:	ldrhi	r0, [sp, #40]	; 0x28
   1389c:	movhi	r1, #34	; 0x22
   138a0:	strbhi	r1, [r0, r2]
   138a4:	add	r2, r9, #2
   138a8:	cmp	sl, r2
   138ac:	ldrhi	r0, [sp, #40]	; 0x28
   138b0:	movhi	r1, #34	; 0x22
   138b4:	strbhi	r1, [r0, r2]
   138b8:	add	r2, r9, #3
   138bc:	cmp	sl, r2
   138c0:	add	r9, r9, #4
   138c4:	ldrhi	r0, [sp, #40]	; 0x28
   138c8:	movhi	r1, #63	; 0x3f
   138cc:	strbhi	r1, [r0, r2]
   138d0:	ldr	r0, [sp, #44]	; 0x2c
   138d4:	cmp	r0, #0
   138d8:	bne	13900 <close_stdout@@Base+0x15f0>
   138dc:	ldr	r1, [sp, #48]	; 0x30
   138e0:	cmp	r1, #0
   138e4:	beq	13900 <close_stdout@@Base+0x15f0>
   138e8:	ubfx	r2, r4, #5, #8
   138ec:	and	r3, r4, #31
   138f0:	ldr	r2, [r1, r2, lsl #2]
   138f4:	lsr	r3, r2, r3
   138f8:	tst	r3, #1
   138fc:	bne	13908 <close_stdout@@Base+0x15f8>
   13900:	cmp	r6, #0
   13904:	beq	13928 <close_stdout@@Base+0x1618>
   13908:	ldr	r2, [sp, #36]	; 0x24
   1390c:	cmp	r2, #0
   13910:	bne	13a18 <close_stdout@@Base+0x1708>
   13914:	cmp	r9, sl
   13918:	ldrcc	r0, [sp, #40]	; 0x28
   1391c:	movcc	r3, #92	; 0x5c
   13920:	strbcc	r3, [r0, r9]
   13924:	add	r9, r9, #1
   13928:	add	fp, fp, #1
   1392c:	cmp	r9, sl
   13930:	ldrcc	r1, [sp, #40]	; 0x28
   13934:	strbcc	r4, [r1, r9]
   13938:	cmn	r8, #1
   1393c:	add	r9, r9, #1
   13940:	bne	135c8 <close_stdout@@Base+0x12b8>
   13944:	ldr	r2, [sp, #32]
   13948:	ldrb	r3, [r2, fp]
   1394c:	adds	r3, r3, #0
   13950:	movne	r3, #1
   13954:	cmp	r3, #0
   13958:	bne	135d8 <close_stdout@@Base+0x12c8>
   1395c:	ldr	r3, [sp, #160]	; 0xa0
   13960:	cmp	r9, #0
   13964:	cmpeq	r3, #2
   13968:	bne	13978 <close_stdout@@Base+0x1668>
   1396c:	ldr	r0, [sp, #36]	; 0x24
   13970:	cmp	r0, #0
   13974:	bne	13a18 <close_stdout@@Base+0x1708>
   13978:	ldr	r1, [sp, #36]	; 0x24
   1397c:	ldr	r2, [sp, #52]	; 0x34
   13980:	eor	r3, r1, #1
   13984:	cmp	r2, #0
   13988:	moveq	r3, #0
   1398c:	andne	r3, r3, #1
   13990:	cmp	r3, #0
   13994:	beq	139c0 <close_stdout@@Base+0x16b0>
   13998:	ldrb	r3, [r2]
   1399c:	cmp	r3, #0
   139a0:	beq	139c0 <close_stdout@@Base+0x16b0>
   139a4:	ldr	r1, [sp, #40]	; 0x28
   139a8:	cmp	sl, r9
   139ac:	strbhi	r3, [r1, r9]
   139b0:	ldrb	r3, [r2, #1]!
   139b4:	add	r9, r9, #1
   139b8:	cmp	r3, #0
   139bc:	bne	139a8 <close_stdout@@Base+0x1698>
   139c0:	cmp	r9, sl
   139c4:	movcs	r0, r9
   139c8:	ldrcc	r1, [sp, #40]	; 0x28
   139cc:	movcc	r3, #0
   139d0:	movcc	r0, r9
   139d4:	strbcc	r3, [r1, r9]
   139d8:	b	13a54 <close_stdout@@Base+0x1744>
   139dc:	cmn	r8, #1
   139e0:	beq	140a8 <close_stdout@@Base+0x1d98>
   139e4:	subs	r3, r8, #1
   139e8:	movne	r3, #1
   139ec:	cmp	r3, #0
   139f0:	bne	138d0 <close_stdout@@Base+0x15c0>
   139f4:	cmp	fp, #0
   139f8:	bne	138d0 <close_stdout@@Base+0x15c0>
   139fc:	ldr	r3, [sp, #36]	; 0x24
   13a00:	ldr	r0, [sp, #160]	; 0xa0
   13a04:	cmp	r0, #2
   13a08:	movne	r3, #0
   13a0c:	andeq	r3, r3, #1
   13a10:	cmp	r3, #0
   13a14:	beq	138d0 <close_stdout@@Base+0x15c0>
   13a18:	ldr	r2, [sp, #164]	; 0xa4
   13a1c:	mov	ip, #0
   13a20:	ldr	r0, [sp, #160]	; 0xa0
   13a24:	bic	r3, r2, #2
   13a28:	ldr	r1, [sp, #72]	; 0x48
   13a2c:	ldr	r2, [sp, #68]	; 0x44
   13a30:	stm	sp, {r0, r3}
   13a34:	mov	r3, r8
   13a38:	str	r1, [sp, #12]
   13a3c:	mov	r1, sl
   13a40:	str	r2, [sp, #16]
   13a44:	ldr	r0, [sp, #40]	; 0x28
   13a48:	ldr	r2, [sp, #32]
   13a4c:	str	ip, [sp, #8]
   13a50:	bl	134e8 <close_stdout@@Base+0x11d8>
   13a54:	ldr	r1, [sp, #56]	; 0x38
   13a58:	ldr	r2, [sp, #116]	; 0x74
   13a5c:	ldr	r3, [r1]
   13a60:	cmp	r2, r3
   13a64:	bne	14198 <close_stdout@@Base+0x1e88>
   13a68:	add	sp, sp, #124	; 0x7c
   13a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a70:	mov	r3, #114	; 0x72
   13a74:	ldr	r2, [sp, #36]	; 0x24
   13a78:	ldr	r0, [sp, #160]	; 0xa0
   13a7c:	cmp	r0, #2
   13a80:	movne	r2, #0
   13a84:	andeq	r2, r2, #1
   13a88:	cmp	r2, #0
   13a8c:	bne	13a18 <close_stdout@@Base+0x1708>
   13a90:	ldr	r1, [sp, #24]
   13a94:	cmp	r1, #0
   13a98:	beq	138d0 <close_stdout@@Base+0x15c0>
   13a9c:	mov	r4, r3
   13aa0:	b	13908 <close_stdout@@Base+0x15f8>
   13aa4:	mov	r3, #98	; 0x62
   13aa8:	b	13a90 <close_stdout@@Base+0x1780>
   13aac:	mov	r3, #102	; 0x66
   13ab0:	b	13a90 <close_stdout@@Base+0x1780>
   13ab4:	mov	r3, #118	; 0x76
   13ab8:	b	13a90 <close_stdout@@Base+0x1780>
   13abc:	mov	r3, #97	; 0x61
   13ac0:	b	13a90 <close_stdout@@Base+0x1780>
   13ac4:	mov	r3, #110	; 0x6e
   13ac8:	b	13a74 <close_stdout@@Base+0x1764>
   13acc:	mov	r3, #116	; 0x74
   13ad0:	b	13a74 <close_stdout@@Base+0x1764>
   13ad4:	ldr	r2, [sp, #24]
   13ad8:	cmp	r2, #0
   13adc:	beq	14084 <close_stdout@@Base+0x1d74>
   13ae0:	ldr	r3, [sp, #36]	; 0x24
   13ae4:	cmp	r3, #0
   13ae8:	bne	13a18 <close_stdout@@Base+0x1708>
   13aec:	cmp	r9, sl
   13af0:	add	r2, r9, #1
   13af4:	ldrcc	r0, [sp, #40]	; 0x28
   13af8:	movcc	r3, #92	; 0x5c
   13afc:	strbcc	r3, [r0, r9]
   13b00:	add	r3, fp, #1
   13b04:	cmp	r8, r3
   13b08:	bls	13b48 <close_stdout@@Base+0x1838>
   13b0c:	ldr	r1, [sp, #32]
   13b10:	ldrb	r3, [r1, r3]
   13b14:	sub	r3, r3, #48	; 0x30
   13b18:	cmp	r3, #9
   13b1c:	bhi	13b48 <close_stdout@@Base+0x1838>
   13b20:	cmp	sl, r2
   13b24:	ldrhi	r0, [sp, #40]	; 0x28
   13b28:	movhi	r3, #48	; 0x30
   13b2c:	strbhi	r3, [r0, r2]
   13b30:	add	r3, r9, #2
   13b34:	cmp	sl, r3
   13b38:	ldrhi	r1, [sp, #40]	; 0x28
   13b3c:	movhi	r2, #48	; 0x30
   13b40:	strbhi	r2, [r1, r3]
   13b44:	add	r2, r9, #3
   13b48:	mov	r9, r2
   13b4c:	mov	r4, #48	; 0x30
   13b50:	b	138dc <close_stdout@@Base+0x15cc>
   13b54:	ldr	r1, [sp, #76]	; 0x4c
   13b58:	cmp	r1, #0
   13b5c:	beq	13b68 <close_stdout@@Base+0x1858>
   13b60:	cmp	r7, #0
   13b64:	bne	13928 <close_stdout@@Base+0x1618>
   13b68:	mov	r3, r4
   13b6c:	b	13a74 <close_stdout@@Base+0x1764>
   13b70:	ldr	r1, [sp, #160]	; 0xa0
   13b74:	cmp	r1, #2
   13b78:	bne	138d0 <close_stdout@@Base+0x15c0>
   13b7c:	ldr	r2, [sp, #36]	; 0x24
   13b80:	cmp	r2, #0
   13b84:	bne	13a18 <close_stdout@@Base+0x1708>
   13b88:	cmp	r9, sl
   13b8c:	ldrcc	r0, [sp, #40]	; 0x28
   13b90:	movcc	r3, #39	; 0x27
   13b94:	strbcc	r3, [r0, r9]
   13b98:	add	r3, r9, #1
   13b9c:	cmp	sl, r3
   13ba0:	ldrhi	r1, [sp, #40]	; 0x28
   13ba4:	movhi	r2, #92	; 0x5c
   13ba8:	strbhi	r2, [r1, r3]
   13bac:	add	r3, r9, #2
   13bb0:	cmp	sl, r3
   13bb4:	add	r9, r9, #3
   13bb8:	ldrhi	r0, [sp, #40]	; 0x28
   13bbc:	movhi	r2, #39	; 0x27
   13bc0:	strbhi	r2, [r0, r3]
   13bc4:	b	138d0 <close_stdout@@Base+0x15c0>
   13bc8:	ldr	r1, [sp, #64]	; 0x40
   13bcc:	cmp	r1, #1
   13bd0:	bne	13ec8 <close_stdout@@Base+0x1bb8>
   13bd4:	bl	114ac <__ctype_b_loc@plt>
   13bd8:	ldr	r2, [sp, #64]	; 0x40
   13bdc:	sxth	r3, r4
   13be0:	str	r2, [sp, #60]	; 0x3c
   13be4:	lsl	r3, r3, #1
   13be8:	ldr	r2, [r0]
   13bec:	ldrh	r2, [r2, r3]
   13bf0:	eor	r2, r2, #16384	; 0x4000
   13bf4:	ubfx	r2, r2, #14, #1
   13bf8:	ldr	r1, [sp, #24]
   13bfc:	ands	r2, r2, r1
   13c00:	beq	138d0 <close_stdout@@Base+0x15c0>
   13c04:	ldr	r3, [sp, #60]	; 0x3c
   13c08:	mov	r0, #92	; 0x5c
   13c0c:	ldr	r7, [sp, #36]	; 0x24
   13c10:	add	r1, r3, fp
   13c14:	str	r8, [sp, #60]	; 0x3c
   13c18:	ldr	r3, [sp, #40]	; 0x28
   13c1c:	b	13c80 <close_stdout@@Base+0x1970>
   13c20:	cmp	r7, #0
   13c24:	bne	140c0 <close_stdout@@Base+0x1db0>
   13c28:	add	ip, r9, #1
   13c2c:	cmp	r9, sl
   13c30:	strbcc	r0, [r3, r9]
   13c34:	cmp	sl, ip
   13c38:	lsrhi	r8, r4, #6
   13c3c:	addhi	r8, r8, #48	; 0x30
   13c40:	strbhi	r8, [r3, ip]
   13c44:	add	ip, r9, #2
   13c48:	add	r9, r9, #3
   13c4c:	cmp	sl, ip
   13c50:	ubfxhi	r8, r4, #3, #3
   13c54:	and	r4, r4, #7
   13c58:	add	r4, r4, #48	; 0x30
   13c5c:	addhi	r8, r8, #48	; 0x30
   13c60:	strbhi	r8, [r3, ip]
   13c64:	add	fp, fp, #1
   13c68:	cmp	r1, fp
   13c6c:	bls	13cac <close_stdout@@Base+0x199c>
   13c70:	cmp	r9, sl
   13c74:	strbcc	r4, [r3, r9]
   13c78:	ldrb	r4, [r5, #1]!
   13c7c:	add	r9, r9, #1
   13c80:	cmp	r2, #0
   13c84:	bne	13c20 <close_stdout@@Base+0x1910>
   13c88:	cmp	r6, #0
   13c8c:	beq	13c64 <close_stdout@@Base+0x1954>
   13c90:	add	fp, fp, #1
   13c94:	cmp	r9, sl
   13c98:	strbcc	r0, [r3, r9]
   13c9c:	cmp	r1, fp
   13ca0:	add	r9, r9, #1
   13ca4:	mov	r6, #0
   13ca8:	bhi	13c70 <close_stdout@@Base+0x1960>
   13cac:	ldr	r8, [sp, #60]	; 0x3c
   13cb0:	b	1392c <close_stdout@@Base+0x161c>
   13cb4:	ldr	r3, [sp, #36]	; 0x24
   13cb8:	cmp	r3, #0
   13cbc:	bne	141c0 <close_stdout@@Base+0x1eb0>
   13cc0:	cmp	sl, #0
   13cc4:	beq	140d8 <close_stdout@@Base+0x1dc8>
   13cc8:	ldr	r1, [sp, #40]	; 0x28
   13ccc:	mov	r0, #1
   13cd0:	ldr	r2, [pc, #1296]	; 141e8 <close_stdout@@Base+0x1ed8>
   13cd4:	mov	r3, #34	; 0x22
   13cd8:	str	r0, [sp, #24]
   13cdc:	mov	r9, r0
   13ce0:	add	r2, pc, r2
   13ce4:	str	r0, [sp, #28]
   13ce8:	strb	r3, [r1]
   13cec:	str	r2, [sp, #52]	; 0x34
   13cf0:	b	1359c <close_stdout@@Base+0x128c>
   13cf4:	ldr	r3, [pc, #1264]	; 141ec <close_stdout@@Base+0x1edc>
   13cf8:	mov	r2, #1
   13cfc:	mov	r0, #3
   13d00:	str	r2, [sp, #36]	; 0x24
   13d04:	add	r3, pc, r3
   13d08:	str	r2, [sp, #24]
   13d0c:	str	r3, [sp, #52]	; 0x34
   13d10:	mov	r9, #0
   13d14:	str	r2, [sp, #28]
   13d18:	str	r0, [sp, #160]	; 0xa0
   13d1c:	b	1359c <close_stdout@@Base+0x128c>
   13d20:	mov	r0, #0
   13d24:	mov	r1, #1
   13d28:	str	r0, [sp, #36]	; 0x24
   13d2c:	mov	r9, r0
   13d30:	str	r1, [sp, #24]
   13d34:	str	r0, [sp, #28]
   13d38:	str	r0, [sp, #52]	; 0x34
   13d3c:	b	1359c <close_stdout@@Base+0x128c>
   13d40:	ldr	r3, [sp, #160]	; 0xa0
   13d44:	cmp	r3, #8
   13d48:	beq	13d74 <close_stdout@@Base+0x1a64>
   13d4c:	ldr	r0, [pc, #1180]	; 141f0 <close_stdout@@Base+0x1ee0>
   13d50:	mov	r1, r3
   13d54:	add	r0, pc, r0
   13d58:	bl	13384 <close_stdout@@Base+0x1074>
   13d5c:	ldr	r1, [sp, #160]	; 0xa0
   13d60:	str	r0, [sp, #72]	; 0x48
   13d64:	ldr	r0, [pc, #1160]	; 141f4 <close_stdout@@Base+0x1ee4>
   13d68:	add	r0, pc, r0
   13d6c:	bl	13384 <close_stdout@@Base+0x1074>
   13d70:	str	r0, [sp, #68]	; 0x44
   13d74:	ldr	r0, [sp, #36]	; 0x24
   13d78:	cmp	r0, #0
   13d7c:	movne	r9, #0
   13d80:	bne	13db8 <close_stdout@@Base+0x1aa8>
   13d84:	ldr	r1, [sp, #72]	; 0x48
   13d88:	ldrb	r3, [r1]
   13d8c:	cmp	r3, #0
   13d90:	beq	14190 <close_stdout@@Base+0x1e80>
   13d94:	mov	r2, r1
   13d98:	ldr	r1, [sp, #40]	; 0x28
   13d9c:	mov	r9, r0
   13da0:	cmp	r9, sl
   13da4:	strbcc	r3, [r1, r9]
   13da8:	ldrb	r3, [r2, #1]!
   13dac:	add	r9, r9, #1
   13db0:	cmp	r3, #0
   13db4:	bne	13da0 <close_stdout@@Base+0x1a90>
   13db8:	ldr	r0, [sp, #68]	; 0x44
   13dbc:	str	r0, [sp, #52]	; 0x34
   13dc0:	bl	114d0 <strlen@plt>
   13dc4:	mov	r2, #1
   13dc8:	str	r2, [sp, #24]
   13dcc:	str	r0, [sp, #28]
   13dd0:	b	1359c <close_stdout@@Base+0x128c>
   13dd4:	ldr	r3, [pc, #1052]	; 141f8 <close_stdout@@Base+0x1ee8>
   13dd8:	mov	r2, #0
   13ddc:	mov	r1, #1
   13de0:	mov	r0, #2
   13de4:	add	r3, pc, r3
   13de8:	str	r1, [sp, #36]	; 0x24
   13dec:	str	r2, [sp, #24]
   13df0:	mov	r9, r2
   13df4:	str	r1, [sp, #28]
   13df8:	str	r3, [sp, #52]	; 0x34
   13dfc:	str	r0, [sp, #160]	; 0xa0
   13e00:	b	1359c <close_stdout@@Base+0x128c>
   13e04:	ldr	r3, [sp, #36]	; 0x24
   13e08:	cmp	r3, #0
   13e0c:	bne	1419c <close_stdout@@Base+0x1e8c>
   13e10:	cmp	sl, #0
   13e14:	beq	140f8 <close_stdout@@Base+0x1de8>
   13e18:	ldr	r1, [sp, #40]	; 0x28
   13e1c:	mov	r3, #39	; 0x27
   13e20:	ldr	r2, [sp, #36]	; 0x24
   13e24:	mov	r0, #1
   13e28:	mov	r9, r0
   13e2c:	str	r0, [sp, #28]
   13e30:	strb	r3, [r1]
   13e34:	ldr	r3, [pc, #960]	; 141fc <close_stdout@@Base+0x1eec>
   13e38:	str	r2, [sp, #24]
   13e3c:	add	r3, pc, r3
   13e40:	str	r3, [sp, #52]	; 0x34
   13e44:	b	1359c <close_stdout@@Base+0x128c>
   13e48:	ldr	r2, [sp, #28]
   13e4c:	cmp	r2, #1
   13e50:	add	r4, fp, r2
   13e54:	movls	r3, #0
   13e58:	movhi	r3, #1
   13e5c:	cmn	r8, #1
   13e60:	movne	r3, #0
   13e64:	cmp	r3, #0
   13e68:	beq	13e78 <close_stdout@@Base+0x1b68>
   13e6c:	ldr	r0, [sp, #32]
   13e70:	bl	114d0 <strlen@plt>
   13e74:	mov	r8, r0
   13e78:	cmp	r8, r4
   13e7c:	ldrcc	r3, [sp, #32]
   13e80:	movcc	r6, #0
   13e84:	addcc	r5, r3, fp
   13e88:	bcc	135f8 <close_stdout@@Base+0x12e8>
   13e8c:	ldr	r0, [sp, #32]
   13e90:	ldr	r1, [sp, #52]	; 0x34
   13e94:	add	r5, r0, fp
   13e98:	ldr	r2, [sp, #28]
   13e9c:	mov	r0, r5
   13ea0:	bl	11380 <memcmp@plt>
   13ea4:	cmp	r0, #0
   13ea8:	bne	13ec0 <close_stdout@@Base+0x1bb0>
   13eac:	ldr	r1, [sp, #36]	; 0x24
   13eb0:	cmp	r1, #0
   13eb4:	bne	13a18 <close_stdout@@Base+0x1708>
   13eb8:	mov	r6, #1
   13ebc:	b	135f8 <close_stdout@@Base+0x12e8>
   13ec0:	mov	r6, #0
   13ec4:	b	135f8 <close_stdout@@Base+0x12e8>
   13ec8:	add	r7, sp, #108	; 0x6c
   13ecc:	cmn	r8, #1
   13ed0:	mov	r3, #0
   13ed4:	str	r3, [sp, #108]	; 0x6c
   13ed8:	str	r3, [r7, #4]
   13edc:	beq	140c8 <close_stdout@@Base+0x1db8>
   13ee0:	mov	r1, #0
   13ee4:	ldr	r0, [sp, #32]
   13ee8:	mov	ip, #1
   13eec:	str	r9, [sp, #88]	; 0x58
   13ef0:	str	r6, [sp, #96]	; 0x60
   13ef4:	mov	r9, r1
   13ef8:	str	r5, [sp, #100]	; 0x64
   13efc:	mov	r6, ip
   13f00:	mov	r5, r7
   13f04:	add	r3, sp, #104	; 0x68
   13f08:	sub	r0, r0, #1
   13f0c:	str	r3, [sp, #80]	; 0x50
   13f10:	str	r0, [sp, #84]	; 0x54
   13f14:	str	r1, [sp, #60]	; 0x3c
   13f18:	str	r4, [sp, #92]	; 0x5c
   13f1c:	ldr	r2, [sp, #32]
   13f20:	add	r7, r9, fp
   13f24:	add	r0, sp, #104	; 0x68
   13f28:	mov	r3, r5
   13f2c:	add	r4, r2, r7
   13f30:	rsb	r2, r7, r8
   13f34:	mov	r1, r4
   13f38:	bl	1141c <mbrtowc@plt>
   13f3c:	subs	r2, r0, #0
   13f40:	beq	1404c <close_stdout@@Base+0x1d3c>
   13f44:	cmn	r2, #1
   13f48:	beq	14174 <close_stdout@@Base+0x1e64>
   13f4c:	cmn	r2, #2
   13f50:	beq	14118 <close_stdout@@Base+0x1e08>
   13f54:	ldr	r3, [sp, #36]	; 0x24
   13f58:	ldr	r0, [sp, #160]	; 0xa0
   13f5c:	cmp	r0, #2
   13f60:	movne	r3, #0
   13f64:	andeq	r3, r3, #1
   13f68:	cmp	r3, #0
   13f6c:	beq	14028 <close_stdout@@Base+0x1d18>
   13f70:	cmp	r2, #1
   13f74:	beq	14028 <close_stdout@@Base+0x1d18>
   13f78:	ldr	r1, [sp, #84]	; 0x54
   13f7c:	add	r3, r1, r2
   13f80:	add	r7, r3, r7
   13f84:	ldrb	r3, [r4, #1]!
   13f88:	sub	r3, r3, #91	; 0x5b
   13f8c:	cmp	r3, #33	; 0x21
   13f90:	addls	pc, pc, r3, lsl #2
   13f94:	b	14020 <close_stdout@@Base+0x1d10>
   13f98:	b	13a18 <close_stdout@@Base+0x1708>
   13f9c:	b	13a18 <close_stdout@@Base+0x1708>
   13fa0:	b	14020 <close_stdout@@Base+0x1d10>
   13fa4:	b	13a18 <close_stdout@@Base+0x1708>
   13fa8:	b	14020 <close_stdout@@Base+0x1d10>
   13fac:	b	13a18 <close_stdout@@Base+0x1708>
   13fb0:	b	14020 <close_stdout@@Base+0x1d10>
   13fb4:	b	14020 <close_stdout@@Base+0x1d10>
   13fb8:	b	14020 <close_stdout@@Base+0x1d10>
   13fbc:	b	14020 <close_stdout@@Base+0x1d10>
   13fc0:	b	14020 <close_stdout@@Base+0x1d10>
   13fc4:	b	14020 <close_stdout@@Base+0x1d10>
   13fc8:	b	14020 <close_stdout@@Base+0x1d10>
   13fcc:	b	14020 <close_stdout@@Base+0x1d10>
   13fd0:	b	14020 <close_stdout@@Base+0x1d10>
   13fd4:	b	14020 <close_stdout@@Base+0x1d10>
   13fd8:	b	14020 <close_stdout@@Base+0x1d10>
   13fdc:	b	14020 <close_stdout@@Base+0x1d10>
   13fe0:	b	14020 <close_stdout@@Base+0x1d10>
   13fe4:	b	14020 <close_stdout@@Base+0x1d10>
   13fe8:	b	14020 <close_stdout@@Base+0x1d10>
   13fec:	b	14020 <close_stdout@@Base+0x1d10>
   13ff0:	b	14020 <close_stdout@@Base+0x1d10>
   13ff4:	b	14020 <close_stdout@@Base+0x1d10>
   13ff8:	b	14020 <close_stdout@@Base+0x1d10>
   13ffc:	b	14020 <close_stdout@@Base+0x1d10>
   14000:	b	14020 <close_stdout@@Base+0x1d10>
   14004:	b	14020 <close_stdout@@Base+0x1d10>
   14008:	b	14020 <close_stdout@@Base+0x1d10>
   1400c:	b	14020 <close_stdout@@Base+0x1d10>
   14010:	b	14020 <close_stdout@@Base+0x1d10>
   14014:	b	14020 <close_stdout@@Base+0x1d10>
   14018:	b	14020 <close_stdout@@Base+0x1d10>
   1401c:	b	13a18 <close_stdout@@Base+0x1708>
   14020:	cmp	r4, r7
   14024:	bne	13f84 <close_stdout@@Base+0x1c74>
   14028:	ldr	r0, [sp, #104]	; 0x68
   1402c:	add	r9, r9, r2
   14030:	bl	113c8 <iswprint@plt>
   14034:	cmp	r0, #0
   14038:	mov	r0, r5
   1403c:	moveq	r6, #0
   14040:	bl	11374 <mbsinit@plt>
   14044:	cmp	r0, #0
   14048:	beq	13f1c <close_stdout@@Base+0x1c0c>
   1404c:	mov	ip, r6
   14050:	eor	r2, ip, #1
   14054:	str	r9, [sp, #60]	; 0x3c
   14058:	ldr	r4, [sp, #92]	; 0x5c
   1405c:	uxtb	r2, r2
   14060:	ldr	r9, [sp, #88]	; 0x58
   14064:	ldr	r6, [sp, #96]	; 0x60
   14068:	ldr	r5, [sp, #100]	; 0x64
   1406c:	ldr	r3, [sp, #60]	; 0x3c
   14070:	cmp	r3, #1
   14074:	bls	13bf8 <close_stdout@@Base+0x18e8>
   14078:	ldr	r0, [sp, #24]
   1407c:	and	r2, r2, r0
   14080:	b	13c04 <close_stdout@@Base+0x18f4>
   14084:	ldr	r2, [sp, #164]	; 0xa4
   14088:	tst	r2, #1
   1408c:	addne	fp, fp, #1
   14090:	bne	135c0 <close_stdout@@Base+0x12b0>
   14094:	b	138d0 <close_stdout@@Base+0x15c0>
   14098:	ldr	r0, [sp, #36]	; 0x24
   1409c:	cmp	r0, #0
   140a0:	beq	138d0 <close_stdout@@Base+0x15c0>
   140a4:	b	13a18 <close_stdout@@Base+0x1708>
   140a8:	ldr	r2, [sp, #32]
   140ac:	ldrb	r3, [r2, #1]
   140b0:	adds	r3, r3, #0
   140b4:	movne	r3, #1
   140b8:	b	139ec <close_stdout@@Base+0x16dc>
   140bc:	bl	11614 <abort@plt>
   140c0:	ldr	r8, [sp, #60]	; 0x3c
   140c4:	b	13a18 <close_stdout@@Base+0x1708>
   140c8:	ldr	r0, [sp, #32]
   140cc:	bl	114d0 <strlen@plt>
   140d0:	mov	r8, r0
   140d4:	b	13ee0 <close_stdout@@Base+0x1bd0>
   140d8:	ldr	r2, [pc, #288]	; 14200 <close_stdout@@Base+0x1ef0>
   140dc:	mov	r1, #1
   140e0:	mov	r9, r1
   140e4:	str	r1, [sp, #24]
   140e8:	add	r2, pc, r2
   140ec:	str	r1, [sp, #28]
   140f0:	str	r2, [sp, #52]	; 0x34
   140f4:	b	1359c <close_stdout@@Base+0x128c>
   140f8:	ldr	r2, [pc, #260]	; 14204 <close_stdout@@Base+0x1ef4>
   140fc:	mov	r3, #1
   14100:	mov	r9, r3
   14104:	str	r3, [sp, #28]
   14108:	add	r2, pc, r2
   1410c:	str	sl, [sp, #24]
   14110:	str	r2, [sp, #52]	; 0x34
   14114:	b	1359c <close_stdout@@Base+0x128c>
   14118:	cmp	r8, r7
   1411c:	str	r9, [sp, #60]	; 0x3c
   14120:	mov	ip, r4
   14124:	ldr	r6, [sp, #96]	; 0x60
   14128:	ldr	r9, [sp, #88]	; 0x58
   1412c:	ldr	r4, [sp, #92]	; 0x5c
   14130:	ldr	r5, [sp, #100]	; 0x64
   14134:	bls	1416c <close_stdout@@Base+0x1e5c>
   14138:	ldrb	r3, [ip]
   1413c:	cmp	r3, #0
   14140:	beq	1416c <close_stdout@@Base+0x1e5c>
   14144:	ldr	r3, [sp, #60]	; 0x3c
   14148:	b	14158 <close_stdout@@Base+0x1e48>
   1414c:	ldrb	r2, [r5, r3]
   14150:	cmp	r2, #0
   14154:	beq	14168 <close_stdout@@Base+0x1e58>
   14158:	add	r3, r3, #1
   1415c:	add	r2, fp, r3
   14160:	cmp	r8, r2
   14164:	bhi	1414c <close_stdout@@Base+0x1e3c>
   14168:	str	r3, [sp, #60]	; 0x3c
   1416c:	mov	r2, #1
   14170:	b	1406c <close_stdout@@Base+0x1d5c>
   14174:	str	r9, [sp, #60]	; 0x3c
   14178:	mov	r2, #1
   1417c:	ldr	r4, [sp, #92]	; 0x5c
   14180:	ldr	r6, [sp, #96]	; 0x60
   14184:	ldr	r9, [sp, #88]	; 0x58
   14188:	ldr	r5, [sp, #100]	; 0x64
   1418c:	b	1406c <close_stdout@@Base+0x1d5c>
   14190:	ldr	r9, [sp, #36]	; 0x24
   14194:	b	13db8 <close_stdout@@Base+0x1aa8>
   14198:	bl	11398 <__stack_chk_fail@plt>
   1419c:	ldr	r1, [pc, #100]	; 14208 <close_stdout@@Base+0x1ef8>
   141a0:	mov	r3, #0
   141a4:	mov	r0, #1
   141a8:	str	r3, [sp, #24]
   141ac:	add	r1, pc, r1
   141b0:	str	r0, [sp, #28]
   141b4:	mov	r9, r3
   141b8:	str	r1, [sp, #52]	; 0x34
   141bc:	b	1359c <close_stdout@@Base+0x128c>
   141c0:	ldr	r0, [pc, #68]	; 1420c <close_stdout@@Base+0x1efc>
   141c4:	mov	r3, #1
   141c8:	mov	r9, #0
   141cc:	str	r3, [sp, #24]
   141d0:	add	r0, pc, r0
   141d4:	str	r3, [sp, #28]
   141d8:	str	r0, [sp, #52]	; 0x34
   141dc:	b	1359c <close_stdout@@Base+0x128c>
   141e0:	strdeq	r9, [r1], -r4
   141e4:	andeq	r0, r0, r0, asr #2
   141e8:	andeq	r8, r0, r8, asr #1
   141ec:	andeq	r8, r0, r4, lsr #1
   141f0:	andeq	r8, r0, r0, rrx
   141f4:	andeq	r8, r0, ip, lsr r0
   141f8:	andeq	r7, r0, r0, asr #31
   141fc:	andeq	r7, r0, r8, ror #30
   14200:	andeq	r7, r0, r0, asr #25
   14204:	muleq	r0, ip, ip
   14208:	strdeq	r7, [r0], -r8
   1420c:	ldrdeq	r7, [r0], -r8
   14210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14214:	sub	sp, sp, #44	; 0x2c
   14218:	mov	r6, r0
   1421c:	mov	r9, r1
   14220:	mov	sl, r2
   14224:	mov	r4, r3
   14228:	bl	114f4 <__errno_location@plt>
   1422c:	ldr	fp, [pc, #412]	; 143d0 <close_stdout@@Base+0x20c0>
   14230:	cmp	r6, #0
   14234:	add	fp, pc, fp
   14238:	ldr	r5, [fp]
   1423c:	ldr	r1, [r0]
   14240:	mov	r8, r0
   14244:	str	r1, [sp, #36]	; 0x24
   14248:	blt	143c8 <close_stdout@@Base+0x20b8>
   1424c:	ldr	r3, [pc, #384]	; 143d4 <close_stdout@@Base+0x20c4>
   14250:	add	r3, pc, r3
   14254:	ldr	r3, [r3]
   14258:	cmp	r6, r3
   1425c:	bcc	142b0 <close_stdout@@Base+0x1fa0>
   14260:	add	r7, r6, #1
   14264:	cmn	r7, #-536870911	; 0xe0000001
   14268:	bhi	143cc <close_stdout@@Base+0x20bc>
   1426c:	add	r3, fp, #4
   14270:	cmp	r5, r3
   14274:	beq	143a0 <close_stdout@@Base+0x2090>
   14278:	mov	r0, r5
   1427c:	lsl	r1, r7, #3
   14280:	bl	15688 <close_stdout@@Base+0x3378>
   14284:	mov	r5, r0
   14288:	str	r0, [fp]
   1428c:	ldr	fp, [pc, #324]	; 143d8 <close_stdout@@Base+0x20c8>
   14290:	mov	r1, #0
   14294:	add	fp, pc, fp
   14298:	ldr	r0, [fp]
   1429c:	rsb	r2, r0, r7
   142a0:	add	r0, r5, r0, lsl #3
   142a4:	lsl	r2, r2, #3
   142a8:	bl	11530 <memset@plt>
   142ac:	str	r7, [fp]
   142b0:	add	r2, r4, #8
   142b4:	str	r2, [sp, #32]
   142b8:	ldr	r1, [r4]
   142bc:	add	fp, r5, r6, lsl #3
   142c0:	ldr	lr, [sp, #32]
   142c4:	mov	r2, r9
   142c8:	ldr	r3, [r4, #4]
   142cc:	ldr	ip, [r5, r6, lsl #3]
   142d0:	ldr	r7, [fp, #4]
   142d4:	orr	r3, r3, #1
   142d8:	str	r1, [sp]
   142dc:	str	r3, [sp, #4]
   142e0:	mov	r1, ip
   142e4:	str	lr, [sp, #8]
   142e8:	mov	r0, r7
   142ec:	ldr	lr, [r4, #40]	; 0x28
   142f0:	str	r3, [sp, #28]
   142f4:	mov	r3, sl
   142f8:	str	lr, [sp, #12]
   142fc:	ldr	lr, [r4, #44]	; 0x2c
   14300:	str	ip, [sp, #24]
   14304:	str	lr, [sp, #16]
   14308:	bl	134e8 <close_stdout@@Base+0x11d8>
   1430c:	ldr	ip, [sp, #24]
   14310:	cmp	ip, r0
   14314:	bhi	1438c <close_stdout@@Base+0x207c>
   14318:	ldr	r3, [pc, #188]	; 143dc <close_stdout@@Base+0x20cc>
   1431c:	add	r1, r0, #1
   14320:	str	r1, [r5, r6, lsl #3]
   14324:	add	r3, pc, r3
   14328:	cmp	r7, r3
   1432c:	beq	14340 <close_stdout@@Base+0x2030>
   14330:	mov	r0, r7
   14334:	str	r1, [sp, #24]
   14338:	bl	11338 <free@plt>
   1433c:	ldr	r1, [sp, #24]
   14340:	mov	r0, r1
   14344:	str	r1, [sp, #24]
   14348:	bl	15630 <close_stdout@@Base+0x3320>
   1434c:	ldr	r3, [sp, #28]
   14350:	ldr	lr, [sp, #32]
   14354:	mov	r2, r9
   14358:	str	r0, [fp, #4]
   1435c:	mov	r7, r0
   14360:	ldr	ip, [r4]
   14364:	str	r3, [sp, #4]
   14368:	mov	r3, sl
   1436c:	str	lr, [sp, #8]
   14370:	str	ip, [sp]
   14374:	ldr	ip, [r4, #40]	; 0x28
   14378:	ldr	r1, [sp, #24]
   1437c:	str	ip, [sp, #12]
   14380:	ldr	ip, [r4, #44]	; 0x2c
   14384:	str	ip, [sp, #16]
   14388:	bl	134e8 <close_stdout@@Base+0x11d8>
   1438c:	ldr	r1, [sp, #36]	; 0x24
   14390:	mov	r0, r7
   14394:	str	r1, [r8]
   14398:	add	sp, sp, #44	; 0x2c
   1439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a0:	lsl	r1, r7, #3
   143a4:	mov	r0, #0
   143a8:	str	r3, [sp, #24]
   143ac:	bl	15688 <close_stdout@@Base+0x3378>
   143b0:	ldr	r3, [sp, #24]
   143b4:	mov	r5, r0
   143b8:	ldm	r3, {r0, r1}
   143bc:	str	r5, [fp]
   143c0:	stm	r5, {r0, r1}
   143c4:	b	1428c <close_stdout@@Base+0x1f7c>
   143c8:	bl	11614 <abort@plt>
   143cc:	bl	15844 <close_stdout@@Base+0x3534>
   143d0:	andeq	r8, r1, r0, lsl #31
   143d4:	andeq	r8, r1, r0, lsr pc
   143d8:	andeq	r8, r1, ip, ror #29
   143dc:	ldrdeq	r8, [r1], -r4
   143e0:	push	{r4, r5, r6, lr}
   143e4:	mov	r5, r0
   143e8:	bl	114f4 <__errno_location@plt>
   143ec:	cmp	r5, #0
   143f0:	mov	r1, #48	; 0x30
   143f4:	mov	r4, r0
   143f8:	ldr	r0, [pc, #24]	; 14418 <close_stdout@@Base+0x2108>
   143fc:	ldr	r6, [r4]
   14400:	add	r0, pc, r0
   14404:	add	r0, r0, #256	; 0x100
   14408:	movne	r0, r5
   1440c:	bl	15804 <close_stdout@@Base+0x34f4>
   14410:	str	r6, [r4]
   14414:	pop	{r4, r5, r6, pc}
   14418:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1441c:	cmp	r0, #0
   14420:	beq	1442c <close_stdout@@Base+0x211c>
   14424:	ldr	r0, [r0]
   14428:	bx	lr
   1442c:	ldr	r0, [pc, #12]	; 14440 <close_stdout@@Base+0x2130>
   14430:	add	r0, pc, r0
   14434:	add	r0, r0, #256	; 0x100
   14438:	ldr	r0, [r0]
   1443c:	bx	lr
   14440:	andeq	r8, r1, r8, asr #27
   14444:	cmp	r0, #0
   14448:	beq	14454 <close_stdout@@Base+0x2144>
   1444c:	str	r1, [r0]
   14450:	bx	lr
   14454:	ldr	r0, [pc, #12]	; 14468 <close_stdout@@Base+0x2158>
   14458:	add	r0, pc, r0
   1445c:	add	r0, r0, #256	; 0x100
   14460:	str	r1, [r0]
   14464:	bx	lr
   14468:	andeq	r8, r1, r0, lsr #27
   1446c:	cmp	r0, #0
   14470:	movne	r3, r0
   14474:	beq	144a4 <close_stdout@@Base+0x2194>
   14478:	lsr	ip, r1, #5
   1447c:	and	r1, r1, #31
   14480:	add	r3, r3, ip, lsl #2
   14484:	ldr	ip, [r3, #8]
   14488:	lsr	r0, ip, r1
   1448c:	eor	r2, r0, r2
   14490:	and	r0, r0, #1
   14494:	and	r2, r2, #1
   14498:	eor	ip, ip, r2, lsl r1
   1449c:	str	ip, [r3, #8]
   144a0:	bx	lr
   144a4:	ldr	r3, [pc, #8]	; 144b4 <close_stdout@@Base+0x21a4>
   144a8:	add	r3, pc, r3
   144ac:	add	r3, r3, #256	; 0x100
   144b0:	b	14478 <close_stdout@@Base+0x2168>
   144b4:	andeq	r8, r1, r0, asr sp
   144b8:	subs	r3, r0, #0
   144bc:	beq	144cc <close_stdout@@Base+0x21bc>
   144c0:	ldr	r0, [r3, #4]
   144c4:	str	r1, [r3, #4]
   144c8:	bx	lr
   144cc:	ldr	r3, [pc, #8]	; 144dc <close_stdout@@Base+0x21cc>
   144d0:	add	r3, pc, r3
   144d4:	add	r3, r3, #256	; 0x100
   144d8:	b	144c0 <close_stdout@@Base+0x21b0>
   144dc:	andeq	r8, r1, r8, lsr #26
   144e0:	cmp	r0, #0
   144e4:	push	{r3, lr}
   144e8:	beq	1450c <close_stdout@@Base+0x21fc>
   144ec:	cmp	r2, #0
   144f0:	cmpne	r1, #0
   144f4:	mov	r3, #8
   144f8:	strne	r1, [r0, #40]	; 0x28
   144fc:	str	r3, [r0]
   14500:	strne	r2, [r0, #44]	; 0x2c
   14504:	popne	{r3, pc}
   14508:	bl	11614 <abort@plt>
   1450c:	ldr	r0, [pc, #8]	; 1451c <close_stdout@@Base+0x220c>
   14510:	add	r0, pc, r0
   14514:	add	r0, r0, #256	; 0x100
   14518:	b	144ec <close_stdout@@Base+0x21dc>
   1451c:	andeq	r8, r1, r8, ror #25
   14520:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14524:	sub	sp, sp, #24
   14528:	mov	r7, r0
   1452c:	mov	sl, r1
   14530:	ldr	r4, [sp, #56]	; 0x38
   14534:	mov	r9, r2
   14538:	mov	r8, r3
   1453c:	cmp	r4, #0
   14540:	beq	14594 <close_stdout@@Base+0x2284>
   14544:	bl	114f4 <__errno_location@plt>
   14548:	ldr	r3, [r4]
   1454c:	add	lr, r4, #8
   14550:	mov	r1, sl
   14554:	mov	r2, r9
   14558:	ldr	r6, [r0]
   1455c:	mov	r5, r0
   14560:	str	r3, [sp]
   14564:	mov	r0, r7
   14568:	ldr	ip, [r4, #4]
   1456c:	mov	r3, r8
   14570:	stmib	sp, {ip, lr}
   14574:	ldr	ip, [r4, #40]	; 0x28
   14578:	str	ip, [sp, #12]
   1457c:	ldr	ip, [r4, #44]	; 0x2c
   14580:	str	ip, [sp, #16]
   14584:	bl	134e8 <close_stdout@@Base+0x11d8>
   14588:	str	r6, [r5]
   1458c:	add	sp, sp, #24
   14590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14594:	ldr	r4, [pc, #8]	; 145a4 <close_stdout@@Base+0x2294>
   14598:	add	r4, pc, r4
   1459c:	add	r4, r4, #256	; 0x100
   145a0:	b	14544 <close_stdout@@Base+0x2234>
   145a4:	andeq	r8, r1, r0, ror #24
   145a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145ac:	subs	r4, r3, #0
   145b0:	sub	sp, sp, #36	; 0x24
   145b4:	mov	r7, r0
   145b8:	mov	r6, r1
   145bc:	mov	r5, r2
   145c0:	beq	1467c <close_stdout@@Base+0x236c>
   145c4:	bl	114f4 <__errno_location@plt>
   145c8:	ldr	r3, [r4]
   145cc:	ldr	sl, [r4, #4]
   145d0:	add	r9, r4, #8
   145d4:	mov	r8, r0
   145d8:	mov	r0, #0
   145dc:	ldr	r2, [r8]
   145e0:	cmp	r5, r0
   145e4:	orreq	sl, sl, #1
   145e8:	str	r9, [sp, #8]
   145ec:	mov	r1, r0
   145f0:	stm	sp, {r3, sl}
   145f4:	mov	r3, r6
   145f8:	ldr	ip, [r4, #40]	; 0x28
   145fc:	str	r2, [sp, #28]
   14600:	mov	r2, r7
   14604:	str	ip, [sp, #12]
   14608:	ldr	ip, [r4, #44]	; 0x2c
   1460c:	str	ip, [sp, #16]
   14610:	bl	134e8 <close_stdout@@Base+0x11d8>
   14614:	add	r1, r0, #1
   14618:	mov	fp, r0
   1461c:	str	r1, [sp, #24]
   14620:	mov	r0, r1
   14624:	bl	15630 <close_stdout@@Base+0x3320>
   14628:	ldr	lr, [r4]
   1462c:	str	sl, [sp, #4]
   14630:	mov	r3, r6
   14634:	str	r9, [sp, #8]
   14638:	mov	r2, r7
   1463c:	str	lr, [sp]
   14640:	ldr	lr, [r4, #40]	; 0x28
   14644:	ldr	r1, [sp, #24]
   14648:	str	lr, [sp, #12]
   1464c:	ldr	lr, [r4, #44]	; 0x2c
   14650:	str	lr, [sp, #16]
   14654:	str	r0, [sp, #24]
   14658:	bl	134e8 <close_stdout@@Base+0x11d8>
   1465c:	ldr	r3, [sp, #28]
   14660:	cmp	r5, #0
   14664:	str	r3, [r8]
   14668:	ldr	ip, [sp, #24]
   1466c:	strne	fp, [r5]
   14670:	mov	r0, ip
   14674:	add	sp, sp, #36	; 0x24
   14678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1467c:	ldr	r4, [pc, #8]	; 1468c <close_stdout@@Base+0x237c>
   14680:	add	r4, pc, r4
   14684:	add	r4, r4, #256	; 0x100
   14688:	b	145c4 <close_stdout@@Base+0x22b4>
   1468c:	andeq	r8, r1, r8, ror fp
   14690:	mov	r3, r2
   14694:	mov	r2, #0
   14698:	b	145a8 <close_stdout@@Base+0x2298>
   1469c:	ldr	r2, [pc, #152]	; 1473c <close_stdout@@Base+0x242c>
   146a0:	push	{r3, r4, r5, r6, r7, lr}
   146a4:	add	r2, pc, r2
   146a8:	ldr	r3, [pc, #144]	; 14740 <close_stdout@@Base+0x2430>
   146ac:	ldr	r6, [r2]
   146b0:	add	r3, pc, r3
   146b4:	cmp	r6, #1
   146b8:	ldr	r7, [r3]
   146bc:	movhi	r4, #1
   146c0:	movhi	r5, r7
   146c4:	bls	146e0 <close_stdout@@Base+0x23d0>
   146c8:	ldr	r0, [r5, #12]
   146cc:	add	r4, r4, #1
   146d0:	bl	11338 <free@plt>
   146d4:	cmp	r4, r6
   146d8:	add	r5, r5, #8
   146dc:	bne	146c8 <close_stdout@@Base+0x23b8>
   146e0:	ldr	r4, [pc, #92]	; 14744 <close_stdout@@Base+0x2434>
   146e4:	ldr	r0, [r7, #4]
   146e8:	add	r4, pc, r4
   146ec:	cmp	r0, r4
   146f0:	beq	14708 <close_stdout@@Base+0x23f8>
   146f4:	bl	11338 <free@plt>
   146f8:	ldr	r3, [pc, #72]	; 14748 <close_stdout@@Base+0x2438>
   146fc:	mov	r2, #256	; 0x100
   14700:	add	r3, pc, r3
   14704:	stmib	r3, {r2, r4}
   14708:	ldr	r4, [pc, #60]	; 1474c <close_stdout@@Base+0x243c>
   1470c:	add	r4, pc, r4
   14710:	add	r5, r4, #4
   14714:	cmp	r7, r5
   14718:	beq	14728 <close_stdout@@Base+0x2418>
   1471c:	mov	r0, r7
   14720:	bl	11338 <free@plt>
   14724:	str	r5, [r4]
   14728:	ldr	r3, [pc, #32]	; 14750 <close_stdout@@Base+0x2440>
   1472c:	mov	r2, #1
   14730:	add	r3, pc, r3
   14734:	str	r2, [r3]
   14738:	pop	{r3, r4, r5, r6, r7, pc}
   1473c:	ldrdeq	r8, [r1], -ip
   14740:	andeq	r8, r1, r4, lsl #22
   14744:	andeq	r8, r1, r0, lsl fp
   14748:			; <UNDEFINED> instruction: 0x00018ab4
   1474c:	andeq	r8, r1, r8, lsr #21
   14750:	andeq	r8, r1, r0, asr sl
   14754:	ldr	r3, [pc, #12]	; 14768 <close_stdout@@Base+0x2458>
   14758:	mvn	r2, #0
   1475c:	add	r3, pc, r3
   14760:	add	r3, r3, #256	; 0x100
   14764:	b	14210 <close_stdout@@Base+0x1f00>
   14768:	muleq	r1, ip, sl
   1476c:	ldr	r3, [pc, #8]	; 1477c <close_stdout@@Base+0x246c>
   14770:	add	r3, pc, r3
   14774:	add	r3, r3, #256	; 0x100
   14778:	b	14210 <close_stdout@@Base+0x1f00>
   1477c:	andeq	r8, r1, r8, lsl #21
   14780:	mov	r1, r0
   14784:	mov	r0, #0
   14788:	b	14754 <close_stdout@@Base+0x2444>
   1478c:	mov	r2, r1
   14790:	mov	r1, r0
   14794:	mov	r0, #0
   14798:	b	1476c <close_stdout@@Base+0x245c>
   1479c:	ldr	r3, [pc, #92]	; 14800 <close_stdout@@Base+0x24f0>
   147a0:	ldr	ip, [pc, #92]	; 14804 <close_stdout@@Base+0x24f4>
   147a4:	add	r3, pc, r3
   147a8:	push	{r4, r5, r6, r7, lr}
   147ac:	sub	sp, sp, #60	; 0x3c
   147b0:	ldr	r4, [r3, ip]
   147b4:	add	r5, sp, #4
   147b8:	mov	r7, r2
   147bc:	mov	r6, r0
   147c0:	mov	r0, r5
   147c4:	ldr	r3, [r4]
   147c8:	str	r3, [sp, #52]	; 0x34
   147cc:	bl	13330 <close_stdout@@Base+0x1020>
   147d0:	mov	r3, r5
   147d4:	mvn	r2, #0
   147d8:	mov	r0, r6
   147dc:	mov	r1, r7
   147e0:	bl	14210 <close_stdout@@Base+0x1f00>
   147e4:	ldr	r2, [sp, #52]	; 0x34
   147e8:	ldr	r3, [r4]
   147ec:	cmp	r2, r3
   147f0:	bne	147fc <close_stdout@@Base+0x24ec>
   147f4:	add	sp, sp, #60	; 0x3c
   147f8:	pop	{r4, r5, r6, r7, pc}
   147fc:	bl	11398 <__stack_chk_fail@plt>
   14800:	andeq	r8, r1, r4, asr r8
   14804:	andeq	r0, r0, r0, asr #2
   14808:	ldr	ip, [pc, #96]	; 14870 <close_stdout@@Base+0x2560>
   1480c:	push	{r4, r5, r6, r7, r8, lr}
   14810:	add	ip, pc, ip
   14814:	ldr	lr, [pc, #88]	; 14874 <close_stdout@@Base+0x2564>
   14818:	sub	sp, sp, #56	; 0x38
   1481c:	mov	r8, r3
   14820:	add	r5, sp, #4
   14824:	mov	r7, r2
   14828:	mov	r6, r0
   1482c:	ldr	r4, [ip, lr]
   14830:	mov	r0, r5
   14834:	ldr	r3, [r4]
   14838:	str	r3, [sp, #52]	; 0x34
   1483c:	bl	13330 <close_stdout@@Base+0x1020>
   14840:	mov	r2, r8
   14844:	mov	r3, r5
   14848:	mov	r0, r6
   1484c:	mov	r1, r7
   14850:	bl	14210 <close_stdout@@Base+0x1f00>
   14854:	ldr	r2, [sp, #52]	; 0x34
   14858:	ldr	r3, [r4]
   1485c:	cmp	r2, r3
   14860:	bne	1486c <close_stdout@@Base+0x255c>
   14864:	add	sp, sp, #56	; 0x38
   14868:	pop	{r4, r5, r6, r7, r8, pc}
   1486c:	bl	11398 <__stack_chk_fail@plt>
   14870:	andeq	r8, r1, r8, ror #15
   14874:	andeq	r0, r0, r0, asr #2
   14878:	mov	r2, r1
   1487c:	mov	r1, r0
   14880:	mov	r0, #0
   14884:	b	1479c <close_stdout@@Base+0x248c>
   14888:	mov	ip, r1
   1488c:	mov	r3, r2
   14890:	mov	r1, r0
   14894:	mov	r2, ip
   14898:	mov	r0, #0
   1489c:	b	14808 <close_stdout@@Base+0x24f8>
   148a0:	push	{r4, r5, r6, r7, r8, lr}
   148a4:	mov	r5, r2
   148a8:	ldr	lr, [pc, #136]	; 14938 <close_stdout@@Base+0x2628>
   148ac:	mov	r7, r0
   148b0:	mov	r6, r1
   148b4:	ldr	r4, [pc, #128]	; 1493c <close_stdout@@Base+0x262c>
   148b8:	add	lr, pc, lr
   148bc:	sub	sp, sp, #56	; 0x38
   148c0:	add	lr, lr, #256	; 0x100
   148c4:	ldr	r8, [pc, #116]	; 14940 <close_stdout@@Base+0x2630>
   148c8:	add	r4, pc, r4
   148cc:	add	ip, sp, #4
   148d0:	ldm	lr!, {r0, r1, r2, r3}
   148d4:	ldr	r4, [r4, r8]
   148d8:	stmia	ip!, {r0, r1, r2, r3}
   148dc:	ldm	lr!, {r0, r1, r2, r3}
   148e0:	ldr	r8, [r4]
   148e4:	stmia	ip!, {r0, r1, r2, r3}
   148e8:	ldm	lr, {r0, r1, r2, r3}
   148ec:	str	r8, [sp, #52]	; 0x34
   148f0:	stm	ip, {r0, r1, r2, r3}
   148f4:	mov	r1, r5
   148f8:	add	r5, sp, #4
   148fc:	mov	r2, #1
   14900:	mov	r0, r5
   14904:	bl	1446c <close_stdout@@Base+0x215c>
   14908:	mov	r2, r6
   1490c:	mov	r3, r5
   14910:	mov	r1, r7
   14914:	mov	r0, #0
   14918:	bl	14210 <close_stdout@@Base+0x1f00>
   1491c:	ldr	r2, [sp, #52]	; 0x34
   14920:	ldr	r3, [r4]
   14924:	cmp	r2, r3
   14928:	bne	14934 <close_stdout@@Base+0x2624>
   1492c:	add	sp, sp, #56	; 0x38
   14930:	pop	{r4, r5, r6, r7, r8, pc}
   14934:	bl	11398 <__stack_chk_fail@plt>
   14938:	andeq	r8, r1, r0, asr #18
   1493c:	andeq	r8, r1, r0, lsr r7
   14940:	andeq	r0, r0, r0, asr #2
   14944:	mov	r2, r1
   14948:	mvn	r1, #0
   1494c:	b	148a0 <close_stdout@@Base+0x2590>
   14950:	mov	r1, #58	; 0x3a
   14954:	b	14944 <close_stdout@@Base+0x2634>
   14958:	mov	r2, #58	; 0x3a
   1495c:	b	148a0 <close_stdout@@Base+0x2590>
   14960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14964:	mov	r5, r2
   14968:	ldr	lr, [pc, #144]	; 14a00 <close_stdout@@Base+0x26f0>
   1496c:	mov	r8, r0
   14970:	mov	r9, r1
   14974:	mov	r7, r3
   14978:	add	lr, pc, lr
   1497c:	ldr	r4, [pc, #128]	; 14a04 <close_stdout@@Base+0x26f4>
   14980:	add	lr, lr, #256	; 0x100
   14984:	sub	sp, sp, #56	; 0x38
   14988:	ldr	sl, [pc, #120]	; 14a08 <close_stdout@@Base+0x26f8>
   1498c:	add	r4, pc, r4
   14990:	ldm	lr!, {r0, r1, r2, r3}
   14994:	add	ip, sp, #4
   14998:	ldr	r4, [r4, sl]
   1499c:	ldr	r6, [sp, #88]	; 0x58
   149a0:	stmia	ip!, {r0, r1, r2, r3}
   149a4:	ldm	lr!, {r0, r1, r2, r3}
   149a8:	ldr	sl, [r4]
   149ac:	stmia	ip!, {r0, r1, r2, r3}
   149b0:	ldm	lr, {r0, r1, r2, r3}
   149b4:	str	sl, [sp, #52]	; 0x34
   149b8:	stm	ip, {r0, r1, r2, r3}
   149bc:	mov	r2, r5
   149c0:	add	r5, sp, #4
   149c4:	mov	r1, r9
   149c8:	mov	r0, r5
   149cc:	bl	144e0 <close_stdout@@Base+0x21d0>
   149d0:	mov	r2, r6
   149d4:	mov	r3, r5
   149d8:	mov	r0, r8
   149dc:	mov	r1, r7
   149e0:	bl	14210 <close_stdout@@Base+0x1f00>
   149e4:	ldr	r2, [sp, #52]	; 0x34
   149e8:	ldr	r3, [r4]
   149ec:	cmp	r2, r3
   149f0:	bne	149fc <close_stdout@@Base+0x26ec>
   149f4:	add	sp, sp, #56	; 0x38
   149f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149fc:	bl	11398 <__stack_chk_fail@plt>
   14a00:	andeq	r8, r1, r0, lsl #17
   14a04:	andeq	r8, r1, ip, ror #12
   14a08:	andeq	r0, r0, r0, asr #2
   14a0c:	push	{lr}		; (str lr, [sp, #-4]!)
   14a10:	sub	sp, sp, #12
   14a14:	mvn	ip, #0
   14a18:	str	ip, [sp]
   14a1c:	bl	14960 <close_stdout@@Base+0x2650>
   14a20:	add	sp, sp, #12
   14a24:	pop	{pc}		; (ldr pc, [sp], #4)
   14a28:	mov	ip, r1
   14a2c:	mov	r3, r2
   14a30:	mov	r1, r0
   14a34:	mov	r2, ip
   14a38:	mov	r0, #0
   14a3c:	b	14a0c <close_stdout@@Base+0x26fc>
   14a40:	push	{lr}		; (str lr, [sp, #-4]!)
   14a44:	sub	sp, sp, #12
   14a48:	mov	lr, r1
   14a4c:	mov	ip, r2
   14a50:	mov	r1, r0
   14a54:	str	r3, [sp]
   14a58:	mov	r2, lr
   14a5c:	mov	r3, ip
   14a60:	mov	r0, #0
   14a64:	bl	14960 <close_stdout@@Base+0x2650>
   14a68:	add	sp, sp, #12
   14a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a70:	ldr	r3, [pc, #12]	; 14a84 <close_stdout@@Base+0x2774>
   14a74:	ldr	ip, [pc, #12]	; 14a88 <close_stdout@@Base+0x2778>
   14a78:	add	r3, pc, r3
   14a7c:	ldr	r3, [r3, ip]
   14a80:	b	14210 <close_stdout@@Base+0x1f00>
   14a84:	andeq	r8, r1, r0, lsl #11
   14a88:	andeq	r0, r0, r8, lsr r1
   14a8c:	mov	r2, r1
   14a90:	mov	r1, r0
   14a94:	mov	r0, #0
   14a98:	b	14a70 <close_stdout@@Base+0x2760>
   14a9c:	mvn	r2, #0
   14aa0:	b	14a70 <close_stdout@@Base+0x2760>
   14aa4:	mov	r1, r0
   14aa8:	mov	r0, #0
   14aac:	b	14a9c <close_stdout@@Base+0x278c>
   14ab0:	push	{r3, r4, r5, lr}
   14ab4:	mov	r4, r1
   14ab8:	mov	r2, r4
   14abc:	mov	r1, #0
   14ac0:	mov	r5, r0
   14ac4:	bl	1156c <memchr@plt>
   14ac8:	cmp	r0, #0
   14acc:	rsbne	r0, r5, r0
   14ad0:	addne	r0, r0, #1
   14ad4:	moveq	r0, r4
   14ad8:	pop	{r3, r4, r5, pc}
   14adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ae0:	sub	sp, sp, #84	; 0x54
   14ae4:	ldr	r5, [pc, #1396]	; 15060 <close_stdout@@Base+0x2d50>
   14ae8:	mov	sl, r1
   14aec:	ldr	r3, [pc, #1392]	; 15064 <close_stdout@@Base+0x2d54>
   14af0:	add	r5, pc, r5
   14af4:	ldr	r3, [r5, r3]
   14af8:	str	r3, [sp, #12]
   14afc:	ldr	r3, [r3]
   14b00:	str	r3, [sp, #76]	; 0x4c
   14b04:	bl	11524 <__strdup@plt>
   14b08:	cmp	r0, #0
   14b0c:	str	r0, [sp]
   14b10:	beq	1503c <close_stdout@@Base+0x2d2c>
   14b14:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   14b18:	cmp	r0, #1
   14b1c:	bls	14dc0 <close_stdout@@Base+0x2ab0>
   14b20:	cmp	sl, #0
   14b24:	bne	14e80 <close_stdout@@Base+0x2b70>
   14b28:	add	r4, sp, #24
   14b2c:	ldr	r0, [sp]
   14b30:	mov	fp, #0
   14b34:	str	r0, [sp, #36]	; 0x24
   14b38:	bl	114d0 <strlen@plt>
   14b3c:	ldr	r1, [sp]
   14b40:	str	fp, [sp, #24]
   14b44:	strb	fp, [sp, #20]
   14b48:	str	fp, [r4, #4]
   14b4c:	strb	fp, [sp, #32]
   14b50:	add	r9, r1, r0
   14b54:	str	r9, [sp, #16]
   14b58:	cmp	r1, r9
   14b5c:	bcs	14d90 <close_stdout@@Base+0x2a80>
   14b60:	add	r1, sp, #48	; 0x30
   14b64:	str	r1, [sp, #4]
   14b68:	ldrb	r1, [sp, #20]
   14b6c:	mov	r8, fp
   14b70:	ldr	r3, [sp]
   14b74:	mov	r7, #1
   14b78:	cmp	r1, #0
   14b7c:	mov	ip, r3
   14b80:	bne	14c24 <close_stdout@@Base+0x2914>
   14b84:	ldr	r2, [pc, #1244]	; 15068 <close_stdout@@Base+0x2d58>
   14b88:	ldrb	r3, [ip]
   14b8c:	ldr	r1, [r5, r2]
   14b90:	and	r2, r3, #31
   14b94:	lsr	r3, r3, #5
   14b98:	ldr	r3, [r1, r3, lsl #2]
   14b9c:	lsr	r3, r3, r2
   14ba0:	tst	r3, #1
   14ba4:	beq	14cd4 <close_stdout@@Base+0x29c4>
   14ba8:	str	r7, [sp, #40]	; 0x28
   14bac:	mov	r6, #1
   14bb0:	ldrb	r2, [ip]
   14bb4:	ldr	r9, [sp, #16]
   14bb8:	ldr	sl, [sp, #36]	; 0x24
   14bbc:	strb	r7, [sp, #44]	; 0x2c
   14bc0:	str	r2, [sp, #48]	; 0x30
   14bc4:	cmp	fp, #0
   14bc8:	strb	r7, [sp, #32]
   14bcc:	beq	14cac <close_stdout@@Base+0x299c>
   14bd0:	cmp	fp, #1
   14bd4:	beq	14cec <close_stdout@@Base+0x29dc>
   14bd8:	cmp	fp, #2
   14bdc:	bne	14ccc <close_stdout@@Base+0x29bc>
   14be0:	ldrb	r2, [sp, #44]	; 0x2c
   14be4:	cmp	r2, #0
   14be8:	beq	14ccc <close_stdout@@Base+0x29bc>
   14bec:	ldr	r0, [sp, #48]	; 0x30
   14bf0:	bl	114c4 <iswspace@plt>
   14bf4:	cmp	r0, #0
   14bf8:	movne	fp, #2
   14bfc:	moveq	fp, #1
   14c00:	add	ip, sl, r6
   14c04:	strb	r8, [sp, #32]
   14c08:	cmp	ip, r9
   14c0c:	str	ip, [sp, #36]	; 0x24
   14c10:	mov	r1, #0
   14c14:	bcs	14db0 <close_stdout@@Base+0x2aa0>
   14c18:	ldrb	r1, [sp, #20]
   14c1c:	cmp	r1, #0
   14c20:	beq	14b84 <close_stdout@@Base+0x2874>
   14c24:	ldr	r1, [sp, #36]	; 0x24
   14c28:	add	r0, sp, #48	; 0x30
   14c2c:	mov	r3, r4
   14c30:	rsb	r2, r1, r9
   14c34:	bl	1141c <mbrtowc@plt>
   14c38:	cmn	r0, #1
   14c3c:	str	r0, [sp, #40]	; 0x28
   14c40:	beq	14d1c <close_stdout@@Base+0x2a0c>
   14c44:	cmn	r0, #2
   14c48:	beq	14d34 <close_stdout@@Base+0x2a24>
   14c4c:	cmp	r0, #0
   14c50:	ldr	r6, [sp, #36]	; 0x24
   14c54:	bne	14c74 <close_stdout@@Base+0x2964>
   14c58:	str	r7, [sp, #40]	; 0x28
   14c5c:	ldrb	r3, [r6]
   14c60:	cmp	r3, #0
   14c64:	bne	15040 <close_stdout@@Base+0x2d30>
   14c68:	ldr	r3, [sp, #48]	; 0x30
   14c6c:	cmp	r3, #0
   14c70:	bne	1501c <close_stdout@@Base+0x2d0c>
   14c74:	mov	r0, r4
   14c78:	strb	r7, [sp, #44]	; 0x2c
   14c7c:	bl	11374 <mbsinit@plt>
   14c80:	strb	r7, [sp, #32]
   14c84:	cmp	r0, #0
   14c88:	strbne	r8, [sp, #20]
   14c8c:	moveq	sl, r6
   14c90:	movne	sl, r6
   14c94:	ldreq	r9, [sp, #16]
   14c98:	ldreq	r6, [sp, #40]	; 0x28
   14c9c:	ldrne	r9, [sp, #16]
   14ca0:	ldrne	r6, [sp, #40]	; 0x28
   14ca4:	cmp	fp, #0
   14ca8:	bne	14bd0 <close_stdout@@Base+0x28c0>
   14cac:	ldrb	r2, [sp, #44]	; 0x2c
   14cb0:	cmp	r2, #0
   14cb4:	beq	14ccc <close_stdout@@Base+0x29bc>
   14cb8:	ldr	r0, [sp, #48]	; 0x30
   14cbc:	bl	114c4 <iswspace@plt>
   14cc0:	rsbs	fp, r0, #1
   14cc4:	movcc	fp, #0
   14cc8:	b	14c00 <close_stdout@@Base+0x28f0>
   14ccc:	mov	fp, #1
   14cd0:	b	14c00 <close_stdout@@Base+0x28f0>
   14cd4:	mov	r0, r4
   14cd8:	bl	11374 <mbsinit@plt>
   14cdc:	cmp	r0, #0
   14ce0:	beq	14ff8 <close_stdout@@Base+0x2ce8>
   14ce4:	strb	r7, [sp, #20]
   14ce8:	b	14c24 <close_stdout@@Base+0x2914>
   14cec:	ldrb	r2, [sp, #44]	; 0x2c
   14cf0:	cmp	r2, #0
   14cf4:	beq	14c00 <close_stdout@@Base+0x28f0>
   14cf8:	ldr	r0, [sp, #48]	; 0x30
   14cfc:	bl	114c4 <iswspace@plt>
   14d00:	ldr	r2, [sp, #8]
   14d04:	cmp	r0, #0
   14d08:	movne	r2, sl
   14d0c:	moveq	fp, #1
   14d10:	movne	fp, #2
   14d14:	str	r2, [sp, #8]
   14d18:	b	14c00 <close_stdout@@Base+0x28f0>
   14d1c:	str	r7, [sp, #40]	; 0x28
   14d20:	mov	r6, #1
   14d24:	strb	r8, [sp, #44]	; 0x2c
   14d28:	ldr	r9, [sp, #16]
   14d2c:	ldr	sl, [sp, #36]	; 0x24
   14d30:	b	14bc4 <close_stdout@@Base+0x28b4>
   14d34:	ldr	ip, [sp, #36]	; 0x24
   14d38:	ldr	r9, [sp, #16]
   14d3c:	strb	r8, [sp, #44]	; 0x2c
   14d40:	rsb	r3, ip, r9
   14d44:	mov	sl, ip
   14d48:	str	r3, [sp, #40]	; 0x28
   14d4c:	mov	r6, r3
   14d50:	b	14bc4 <close_stdout@@Base+0x28b4>
   14d54:	ldr	fp, [sp, #36]	; 0x24
   14d58:	mov	r2, #1
   14d5c:	mov	r3, #0
   14d60:	str	r2, [sp, #40]	; 0x28
   14d64:	strb	r3, [sp, #44]	; 0x2c
   14d68:	mov	r3, #1
   14d6c:	strb	r3, [sp, #32]
   14d70:	mov	r0, fp
   14d74:	bl	114d0 <strlen@plt>
   14d78:	mov	r1, fp
   14d7c:	add	r2, r0, #1
   14d80:	ldr	r0, [sp]
   14d84:	bl	1132c <memmove@plt>
   14d88:	cmp	sl, #1
   14d8c:	bne	14b2c <close_stdout@@Base+0x281c>
   14d90:	ldr	r1, [sp, #12]
   14d94:	ldr	r2, [sp, #76]	; 0x4c
   14d98:	ldr	r0, [sp]
   14d9c:	ldr	r3, [r1]
   14da0:	cmp	r2, r3
   14da4:	bne	15018 <close_stdout@@Base+0x2d08>
   14da8:	add	sp, sp, #84	; 0x54
   14dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14db0:	cmp	fp, #2
   14db4:	ldreq	r3, [sp, #8]
   14db8:	strbeq	r1, [r3]
   14dbc:	b	14d90 <close_stdout@@Base+0x2a80>
   14dc0:	cmp	sl, #0
   14dc4:	beq	14e2c <close_stdout@@Base+0x2b1c>
   14dc8:	ldr	r2, [sp]
   14dcc:	ldrb	r4, [r2]
   14dd0:	cmp	r4, #0
   14dd4:	beq	14fe8 <close_stdout@@Base+0x2cd8>
   14dd8:	bl	114ac <__ctype_b_loc@plt>
   14ddc:	ldr	r3, [sp]
   14de0:	ldr	r1, [r0]
   14de4:	b	14df8 <close_stdout@@Base+0x2ae8>
   14de8:	ldrb	r4, [r3, #1]
   14dec:	add	r3, r3, #1
   14df0:	cmp	r4, #0
   14df4:	beq	14fe0 <close_stdout@@Base+0x2cd0>
   14df8:	lsl	r4, r4, #1
   14dfc:	mov	r5, r3
   14e00:	ldrh	r2, [r1, r4]
   14e04:	tst	r2, #8192	; 0x2000
   14e08:	bne	14de8 <close_stdout@@Base+0x2ad8>
   14e0c:	mov	r0, r5
   14e10:	bl	114d0 <strlen@plt>
   14e14:	mov	r1, r5
   14e18:	add	r2, r0, #1
   14e1c:	ldr	r0, [sp]
   14e20:	bl	1132c <memmove@plt>
   14e24:	cmp	sl, #1
   14e28:	beq	14d90 <close_stdout@@Base+0x2a80>
   14e2c:	ldr	r0, [sp]
   14e30:	bl	114d0 <strlen@plt>
   14e34:	ldr	r1, [sp]
   14e38:	sub	r0, r0, #1
   14e3c:	adds	r4, r1, r0
   14e40:	bcs	14d90 <close_stdout@@Base+0x2a80>
   14e44:	bl	114ac <__ctype_b_loc@plt>
   14e48:	mov	r3, r4
   14e4c:	mov	ip, #0
   14e50:	ldr	r4, [sp]
   14e54:	b	14e64 <close_stdout@@Base+0x2b54>
   14e58:	cmp	r4, r3
   14e5c:	strb	ip, [r3, #1]
   14e60:	bhi	14d90 <close_stdout@@Base+0x2a80>
   14e64:	ldrb	r2, [r3], #-1
   14e68:	ldr	r1, [r0]
   14e6c:	lsl	r2, r2, #1
   14e70:	ldrh	r2, [r1, r2]
   14e74:	tst	r2, #8192	; 0x2000
   14e78:	bne	14e58 <close_stdout@@Base+0x2b48>
   14e7c:	b	14d90 <close_stdout@@Base+0x2a80>
   14e80:	ldr	r0, [sp]
   14e84:	add	r4, sp, #24
   14e88:	mov	r8, #0
   14e8c:	str	r0, [sp, #36]	; 0x24
   14e90:	bl	114d0 <strlen@plt>
   14e94:	ldr	r3, [sp]
   14e98:	str	r8, [sp, #24]
   14e9c:	strb	r8, [sp, #20]
   14ea0:	str	r8, [r4, #4]
   14ea4:	strb	r8, [sp, #32]
   14ea8:	add	r2, r3, r0
   14eac:	str	r2, [sp, #16]
   14eb0:	cmp	r3, r2
   14eb4:	bcs	14ff0 <close_stdout@@Base+0x2ce0>
   14eb8:	mov	fp, r3
   14ebc:	add	r9, sp, #48	; 0x30
   14ec0:	mov	r7, #1
   14ec4:	mov	r6, r2
   14ec8:	b	14f34 <close_stdout@@Base+0x2c24>
   14ecc:	ldr	r2, [pc, #404]	; 15068 <close_stdout@@Base+0x2d58>
   14ed0:	ldrb	r3, [fp]
   14ed4:	ldr	r1, [r5, r2]
   14ed8:	and	r2, r3, #31
   14edc:	lsr	r3, r3, #5
   14ee0:	ldr	r3, [r1, r3, lsl #2]
   14ee4:	lsr	r3, r3, r2
   14ee8:	tst	r3, #1
   14eec:	beq	14fa8 <close_stdout@@Base+0x2c98>
   14ef0:	str	r7, [sp, #40]	; 0x28
   14ef4:	ldrb	r6, [fp]
   14ef8:	ldr	fp, [sp, #36]	; 0x24
   14efc:	strb	r7, [sp, #44]	; 0x2c
   14f00:	str	r6, [sp, #48]	; 0x30
   14f04:	mov	r0, r6
   14f08:	strb	r7, [sp, #32]
   14f0c:	bl	114c4 <iswspace@plt>
   14f10:	cmp	r0, #0
   14f14:	beq	14d70 <close_stdout@@Base+0x2a60>
   14f18:	ldr	r3, [sp, #40]	; 0x28
   14f1c:	ldr	r6, [sp, #16]
   14f20:	add	fp, fp, r3
   14f24:	strb	r8, [sp, #32]
   14f28:	cmp	r6, fp
   14f2c:	str	fp, [sp, #36]	; 0x24
   14f30:	bls	14d70 <close_stdout@@Base+0x2a60>
   14f34:	ldrb	r3, [sp, #20]
   14f38:	cmp	r3, #0
   14f3c:	beq	14ecc <close_stdout@@Base+0x2bbc>
   14f40:	ldr	r1, [sp, #36]	; 0x24
   14f44:	mov	r0, r9
   14f48:	mov	r3, r4
   14f4c:	rsb	r2, r1, r6
   14f50:	bl	1141c <mbrtowc@plt>
   14f54:	cmn	r0, #1
   14f58:	str	r0, [sp, #40]	; 0x28
   14f5c:	beq	14d54 <close_stdout@@Base+0x2a44>
   14f60:	cmn	r0, #2
   14f64:	ldr	fp, [sp, #36]	; 0x24
   14f68:	beq	14fc8 <close_stdout@@Base+0x2cb8>
   14f6c:	cmp	r0, #0
   14f70:	bne	14fc0 <close_stdout@@Base+0x2cb0>
   14f74:	str	r7, [sp, #40]	; 0x28
   14f78:	ldrb	r3, [fp]
   14f7c:	cmp	r3, #0
   14f80:	bne	15040 <close_stdout@@Base+0x2d30>
   14f84:	ldr	r6, [sp, #48]	; 0x30
   14f88:	cmp	r6, #0
   14f8c:	bne	1501c <close_stdout@@Base+0x2d0c>
   14f90:	mov	r0, r4
   14f94:	strb	r7, [sp, #44]	; 0x2c
   14f98:	bl	11374 <mbsinit@plt>
   14f9c:	cmp	r0, #0
   14fa0:	strbne	r8, [sp, #20]
   14fa4:	b	14f04 <close_stdout@@Base+0x2bf4>
   14fa8:	mov	r0, r4
   14fac:	bl	11374 <mbsinit@plt>
   14fb0:	cmp	r0, #0
   14fb4:	beq	14ff8 <close_stdout@@Base+0x2ce8>
   14fb8:	strb	r7, [sp, #20]
   14fbc:	b	14f40 <close_stdout@@Base+0x2c30>
   14fc0:	ldr	r6, [sp, #48]	; 0x30
   14fc4:	b	14f90 <close_stdout@@Base+0x2c80>
   14fc8:	ldr	r3, [sp, #16]
   14fcc:	mov	r2, #0
   14fd0:	strb	r2, [sp, #44]	; 0x2c
   14fd4:	rsb	r3, fp, r3
   14fd8:	str	r3, [sp, #40]	; 0x28
   14fdc:	b	14d68 <close_stdout@@Base+0x2a58>
   14fe0:	mov	r5, r3
   14fe4:	b	14e0c <close_stdout@@Base+0x2afc>
   14fe8:	ldr	r5, [sp]
   14fec:	b	14e0c <close_stdout@@Base+0x2afc>
   14ff0:	ldr	fp, [sp]
   14ff4:	b	14d70 <close_stdout@@Base+0x2a60>
   14ff8:	ldr	r0, [pc, #108]	; 1506c <close_stdout@@Base+0x2d5c>
   14ffc:	mov	r2, #142	; 0x8e
   15000:	ldr	r1, [pc, #104]	; 15070 <close_stdout@@Base+0x2d60>
   15004:	ldr	r3, [pc, #104]	; 15074 <close_stdout@@Base+0x2d64>
   15008:	add	r0, pc, r0
   1500c:	add	r1, pc, r1
   15010:	add	r3, pc, r3
   15014:	bl	11638 <__assert_fail@plt>
   15018:	bl	11398 <__stack_chk_fail@plt>
   1501c:	ldr	r0, [pc, #84]	; 15078 <close_stdout@@Base+0x2d68>
   15020:	mov	r2, #170	; 0xaa
   15024:	ldr	r1, [pc, #80]	; 1507c <close_stdout@@Base+0x2d6c>
   15028:	ldr	r3, [pc, #80]	; 15080 <close_stdout@@Base+0x2d70>
   1502c:	add	r0, pc, r0
   15030:	add	r1, pc, r1
   15034:	add	r3, pc, r3
   15038:	bl	11638 <__assert_fail@plt>
   1503c:	bl	15844 <close_stdout@@Base+0x3534>
   15040:	ldr	r0, [pc, #60]	; 15084 <close_stdout@@Base+0x2d74>
   15044:	mov	r2, #169	; 0xa9
   15048:	ldr	r1, [pc, #56]	; 15088 <close_stdout@@Base+0x2d78>
   1504c:	ldr	r3, [pc, #56]	; 1508c <close_stdout@@Base+0x2d7c>
   15050:	add	r0, pc, r0
   15054:	add	r1, pc, r1
   15058:	add	r3, pc, r3
   1505c:	bl	11638 <__assert_fail@plt>
   15060:	andeq	r8, r1, r8, lsl #10
   15064:	andeq	r0, r0, r0, asr #2
   15068:	andeq	r0, r0, ip, lsr r1
   1506c:	andeq	r6, r0, r4, lsl #26
   15070:	andeq	r6, r0, r0, lsl #28
   15074:	andeq	r6, r0, r8, ror #27
   15078:	andeq	r6, r0, r0, lsr #26
   1507c:	ldrdeq	r6, [r0], -ip
   15080:	andeq	r6, r0, r4, asr #27
   15084:	andeq	r6, r0, r4, ror #25
   15088:			; <UNDEFINED> instruction: 0x00006db8
   1508c:	andeq	r6, r0, r0, lsr #27
   15090:	push	{r4, r5, r6, r7, lr}
   15094:	cmp	r1, #0
   15098:	sub	sp, sp, #36	; 0x24
   1509c:	ldr	r7, [pc, #896]	; 15424 <close_stdout@@Base+0x3114>
   150a0:	mov	ip, r3
   150a4:	mov	r5, r0
   150a8:	add	r7, pc, r7
   150ac:	ldr	r4, [sp, #56]	; 0x38
   150b0:	ldr	r6, [sp, #60]	; 0x3c
   150b4:	beq	153f8 <close_stdout@@Base+0x30e8>
   150b8:	str	r2, [sp]
   150bc:	mov	r3, r1
   150c0:	ldr	r2, [pc, #864]	; 15428 <close_stdout@@Base+0x3118>
   150c4:	mov	r1, #1
   150c8:	str	ip, [sp, #4]
   150cc:	add	r2, pc, r2
   150d0:	bl	11560 <__fprintf_chk@plt>
   150d4:	ldr	r1, [pc, #848]	; 1542c <close_stdout@@Base+0x311c>
   150d8:	mov	r2, #5
   150dc:	mov	r0, #0
   150e0:	add	r1, pc, r1
   150e4:	bl	1138c <dcgettext@plt>
   150e8:	ldr	r2, [pc, #832]	; 15430 <close_stdout@@Base+0x3120>
   150ec:	movw	ip, #2013	; 0x7dd
   150f0:	mov	r1, #1
   150f4:	ldr	r2, [r7, r2]
   150f8:	str	ip, [sp]
   150fc:	mov	r3, r0
   15100:	mov	r0, r5
   15104:	bl	11560 <__fprintf_chk@plt>
   15108:	ldr	r1, [pc, #804]	; 15434 <close_stdout@@Base+0x3124>
   1510c:	mov	r0, #0
   15110:	mov	r2, #5
   15114:	add	r1, pc, r1
   15118:	bl	1138c <dcgettext@plt>
   1511c:	mov	r1, r5
   15120:	bl	112d8 <fputs_unlocked@plt>
   15124:	cmp	r6, #9
   15128:	addls	pc, pc, r6, lsl #2
   1512c:	b	15414 <close_stdout@@Base+0x3104>
   15130:	b	151c4 <close_stdout@@Base+0x2eb4>
   15134:	b	151c8 <close_stdout@@Base+0x2eb8>
   15138:	b	151f8 <close_stdout@@Base+0x2ee8>
   1513c:	b	1522c <close_stdout@@Base+0x2f1c>
   15140:	b	15268 <close_stdout@@Base+0x2f58>
   15144:	b	152a8 <close_stdout@@Base+0x2f98>
   15148:	b	152f0 <close_stdout@@Base+0x2fe0>
   1514c:	b	15340 <close_stdout@@Base+0x3030>
   15150:	b	15398 <close_stdout@@Base+0x3088>
   15154:	b	15158 <close_stdout@@Base+0x2e48>
   15158:	ldr	r1, [pc, #728]	; 15438 <close_stdout@@Base+0x3128>
   1515c:	mov	r0, #0
   15160:	add	r1, pc, r1
   15164:	mov	r2, #5
   15168:	bl	1138c <dcgettext@plt>
   1516c:	ldm	r4, {r3, ip}
   15170:	mov	r1, #1
   15174:	str	ip, [sp]
   15178:	ldr	ip, [r4, #8]
   1517c:	str	ip, [sp, #4]
   15180:	ldr	ip, [r4, #12]
   15184:	str	ip, [sp, #8]
   15188:	ldr	ip, [r4, #16]
   1518c:	str	ip, [sp, #12]
   15190:	ldr	ip, [r4, #20]
   15194:	str	ip, [sp, #16]
   15198:	ldr	ip, [r4, #24]
   1519c:	str	ip, [sp, #20]
   151a0:	ldr	ip, [r4, #28]
   151a4:	str	ip, [sp, #24]
   151a8:	ldr	ip, [r4, #32]
   151ac:	str	ip, [sp, #28]
   151b0:	mov	r2, r0
   151b4:	mov	r0, r5
   151b8:	bl	11560 <__fprintf_chk@plt>
   151bc:	add	sp, sp, #36	; 0x24
   151c0:	pop	{r4, r5, r6, r7, pc}
   151c4:	bl	11614 <abort@plt>
   151c8:	ldr	r1, [pc, #620]	; 1543c <close_stdout@@Base+0x312c>
   151cc:	mov	r2, #5
   151d0:	mov	r0, #0
   151d4:	add	r1, pc, r1
   151d8:	bl	1138c <dcgettext@plt>
   151dc:	ldr	r3, [r4]
   151e0:	mov	r1, #1
   151e4:	mov	r2, r0
   151e8:	mov	r0, r5
   151ec:	add	sp, sp, #36	; 0x24
   151f0:	pop	{r4, r5, r6, r7, lr}
   151f4:	b	11560 <__fprintf_chk@plt>
   151f8:	ldr	r1, [pc, #576]	; 15440 <close_stdout@@Base+0x3130>
   151fc:	mov	r2, #5
   15200:	mov	r0, #0
   15204:	add	r1, pc, r1
   15208:	bl	1138c <dcgettext@plt>
   1520c:	ldm	r4, {r3, ip}
   15210:	mov	r1, #1
   15214:	str	ip, [sp, #56]	; 0x38
   15218:	mov	r2, r0
   1521c:	mov	r0, r5
   15220:	add	sp, sp, #36	; 0x24
   15224:	pop	{r4, r5, r6, r7, lr}
   15228:	b	11560 <__fprintf_chk@plt>
   1522c:	ldr	r1, [pc, #528]	; 15444 <close_stdout@@Base+0x3134>
   15230:	mov	r2, #5
   15234:	mov	r0, #0
   15238:	add	r1, pc, r1
   1523c:	bl	1138c <dcgettext@plt>
   15240:	ldm	r4, {r3, ip}
   15244:	mov	r1, #1
   15248:	str	ip, [sp, #56]	; 0x38
   1524c:	ldr	ip, [r4, #8]
   15250:	str	ip, [sp, #60]	; 0x3c
   15254:	mov	r2, r0
   15258:	mov	r0, r5
   1525c:	add	sp, sp, #36	; 0x24
   15260:	pop	{r4, r5, r6, r7, lr}
   15264:	b	11560 <__fprintf_chk@plt>
   15268:	ldr	r1, [pc, #472]	; 15448 <close_stdout@@Base+0x3138>
   1526c:	mov	r2, #5
   15270:	mov	r0, #0
   15274:	add	r1, pc, r1
   15278:	bl	1138c <dcgettext@plt>
   1527c:	ldm	r4, {r3, ip}
   15280:	mov	r1, #1
   15284:	str	ip, [sp]
   15288:	ldr	ip, [r4, #8]
   1528c:	str	ip, [sp, #4]
   15290:	ldr	ip, [r4, #12]
   15294:	str	ip, [sp, #8]
   15298:	mov	r2, r0
   1529c:	mov	r0, r5
   152a0:	bl	11560 <__fprintf_chk@plt>
   152a4:	b	151bc <close_stdout@@Base+0x2eac>
   152a8:	ldr	r1, [pc, #412]	; 1544c <close_stdout@@Base+0x313c>
   152ac:	mov	r2, #5
   152b0:	mov	r0, #0
   152b4:	add	r1, pc, r1
   152b8:	bl	1138c <dcgettext@plt>
   152bc:	ldm	r4, {r3, ip}
   152c0:	mov	r1, #1
   152c4:	str	ip, [sp]
   152c8:	ldr	ip, [r4, #8]
   152cc:	str	ip, [sp, #4]
   152d0:	ldr	ip, [r4, #12]
   152d4:	str	ip, [sp, #8]
   152d8:	ldr	ip, [r4, #16]
   152dc:	str	ip, [sp, #12]
   152e0:	mov	r2, r0
   152e4:	mov	r0, r5
   152e8:	bl	11560 <__fprintf_chk@plt>
   152ec:	b	151bc <close_stdout@@Base+0x2eac>
   152f0:	ldr	r1, [pc, #344]	; 15450 <close_stdout@@Base+0x3140>
   152f4:	mov	r2, #5
   152f8:	mov	r0, #0
   152fc:	add	r1, pc, r1
   15300:	bl	1138c <dcgettext@plt>
   15304:	ldm	r4, {r3, ip}
   15308:	mov	r1, #1
   1530c:	str	ip, [sp]
   15310:	ldr	ip, [r4, #8]
   15314:	str	ip, [sp, #4]
   15318:	ldr	ip, [r4, #12]
   1531c:	str	ip, [sp, #8]
   15320:	ldr	ip, [r4, #16]
   15324:	str	ip, [sp, #12]
   15328:	ldr	ip, [r4, #20]
   1532c:	str	ip, [sp, #16]
   15330:	mov	r2, r0
   15334:	mov	r0, r5
   15338:	bl	11560 <__fprintf_chk@plt>
   1533c:	b	151bc <close_stdout@@Base+0x2eac>
   15340:	ldr	r1, [pc, #268]	; 15454 <close_stdout@@Base+0x3144>
   15344:	mov	r2, #5
   15348:	mov	r0, #0
   1534c:	add	r1, pc, r1
   15350:	bl	1138c <dcgettext@plt>
   15354:	ldm	r4, {r3, ip}
   15358:	mov	r1, #1
   1535c:	str	ip, [sp]
   15360:	ldr	ip, [r4, #8]
   15364:	str	ip, [sp, #4]
   15368:	ldr	ip, [r4, #12]
   1536c:	str	ip, [sp, #8]
   15370:	ldr	ip, [r4, #16]
   15374:	str	ip, [sp, #12]
   15378:	ldr	ip, [r4, #20]
   1537c:	str	ip, [sp, #16]
   15380:	ldr	ip, [r4, #24]
   15384:	str	ip, [sp, #20]
   15388:	mov	r2, r0
   1538c:	mov	r0, r5
   15390:	bl	11560 <__fprintf_chk@plt>
   15394:	b	151bc <close_stdout@@Base+0x2eac>
   15398:	ldr	r1, [pc, #184]	; 15458 <close_stdout@@Base+0x3148>
   1539c:	mov	r2, #5
   153a0:	mov	r0, #0
   153a4:	add	r1, pc, r1
   153a8:	bl	1138c <dcgettext@plt>
   153ac:	ldm	r4, {r3, ip}
   153b0:	mov	r1, #1
   153b4:	str	ip, [sp]
   153b8:	ldr	ip, [r4, #8]
   153bc:	str	ip, [sp, #4]
   153c0:	ldr	ip, [r4, #12]
   153c4:	str	ip, [sp, #8]
   153c8:	ldr	ip, [r4, #16]
   153cc:	str	ip, [sp, #12]
   153d0:	ldr	ip, [r4, #20]
   153d4:	str	ip, [sp, #16]
   153d8:	ldr	ip, [r4, #24]
   153dc:	str	ip, [sp, #20]
   153e0:	ldr	ip, [r4, #28]
   153e4:	str	ip, [sp, #24]
   153e8:	mov	r2, r0
   153ec:	mov	r0, r5
   153f0:	bl	11560 <__fprintf_chk@plt>
   153f4:	b	151bc <close_stdout@@Base+0x2eac>
   153f8:	str	r3, [sp]
   153fc:	mov	r3, r2
   15400:	ldr	r2, [pc, #84]	; 1545c <close_stdout@@Base+0x314c>
   15404:	mov	r1, #1
   15408:	add	r2, pc, r2
   1540c:	bl	11560 <__fprintf_chk@plt>
   15410:	b	150d4 <close_stdout@@Base+0x2dc4>
   15414:	ldr	r1, [pc, #68]	; 15460 <close_stdout@@Base+0x3150>
   15418:	mov	r0, #0
   1541c:	add	r1, pc, r1
   15420:	b	15164 <close_stdout@@Base+0x2e54>
   15424:	andeq	r7, r1, r0, asr pc
   15428:	andeq	r6, r0, r0, asr sp
   1542c:	andeq	r6, r0, r0, asr sp
   15430:	andeq	r0, r0, r0, ror r1
   15434:	andeq	r6, r0, r0, lsr #26
   15438:	andeq	r6, r0, ip, lsr #29
   1543c:	andeq	r6, r0, ip, lsr #26
   15440:	andeq	r6, r0, ip, lsl #26
   15444:	strdeq	r6, [r0], -r0
   15448:	ldrdeq	r6, [r0], -r0
   1544c:			; <UNDEFINED> instruction: 0x00006cb0
   15450:	andeq	r6, r0, ip, lsl #25
   15454:	andeq	r6, r0, r4, ror #24
   15458:	andeq	r6, r0, r8, lsr ip
   1545c:	andeq	r6, r0, r0, lsr #20
   15460:	andeq	r6, r0, r4, lsr #24
   15464:	push	{r4, r5, lr}
   15468:	sub	sp, sp, #12
   1546c:	ldr	r5, [sp, #24]
   15470:	ldr	ip, [r5]
   15474:	cmp	ip, #0
   15478:	beq	15494 <close_stdout@@Base+0x3184>
   1547c:	mov	lr, r5
   15480:	mov	ip, #0
   15484:	ldr	r4, [lr, #4]!
   15488:	add	ip, ip, #1
   1548c:	cmp	r4, #0
   15490:	bne	15484 <close_stdout@@Base+0x3174>
   15494:	stm	sp, {r5, ip}
   15498:	bl	15090 <close_stdout@@Base+0x2d80>
   1549c:	add	sp, sp, #12
   154a0:	pop	{r4, r5, pc}
   154a4:	push	{r4, r5, r6, r7, lr}
   154a8:	sub	sp, sp, #60	; 0x3c
   154ac:	ldr	r4, [pc, #100]	; 15518 <close_stdout@@Base+0x3208>
   154b0:	mov	ip, #0
   154b4:	ldr	r5, [pc, #96]	; 1551c <close_stdout@@Base+0x320c>
   154b8:	mov	lr, ip
   154bc:	add	r4, pc, r4
   154c0:	ldr	r6, [sp, #80]	; 0x50
   154c4:	ldr	r7, [r4, r5]
   154c8:	add	r5, sp, #12
   154cc:	ldr	r4, [r7]
   154d0:	str	r4, [sp, #52]	; 0x34
   154d4:	ldr	r4, [r6, ip]
   154d8:	cmp	r4, #0
   154dc:	str	r4, [r5, ip]
   154e0:	beq	154f4 <close_stdout@@Base+0x31e4>
   154e4:	add	lr, lr, #1
   154e8:	add	ip, ip, #4
   154ec:	cmp	lr, #10
   154f0:	bne	154d4 <close_stdout@@Base+0x31c4>
   154f4:	stm	sp, {r5, lr}
   154f8:	bl	15090 <close_stdout@@Base+0x2d80>
   154fc:	ldr	r2, [sp, #52]	; 0x34
   15500:	ldr	r3, [r7]
   15504:	cmp	r2, r3
   15508:	bne	15514 <close_stdout@@Base+0x3204>
   1550c:	add	sp, sp, #60	; 0x3c
   15510:	pop	{r4, r5, r6, r7, pc}
   15514:	bl	11398 <__stack_chk_fail@plt>
   15518:	andeq	r7, r1, ip, lsr fp
   1551c:	andeq	r0, r0, r0, asr #2
   15520:	push	{r3}		; (str r3, [sp, #-4]!)
   15524:	push	{r4, lr}
   15528:	sub	sp, sp, #20
   1552c:	ldr	lr, [pc, #72]	; 1557c <close_stdout@@Base+0x326c>
   15530:	add	ip, sp, #32
   15534:	ldr	r4, [pc, #68]	; 15580 <close_stdout@@Base+0x3270>
   15538:	add	lr, pc, lr
   1553c:	ldr	r3, [sp, #28]
   15540:	ldr	r4, [lr, r4]
   15544:	str	ip, [sp]
   15548:	str	ip, [sp, #8]
   1554c:	ldr	ip, [r4]
   15550:	str	ip, [sp, #12]
   15554:	bl	154a4 <close_stdout@@Base+0x3194>
   15558:	ldr	r2, [sp, #12]
   1555c:	ldr	r3, [r4]
   15560:	cmp	r2, r3
   15564:	bne	15578 <close_stdout@@Base+0x3268>
   15568:	add	sp, sp, #20
   1556c:	pop	{r4, lr}
   15570:	add	sp, sp, #4
   15574:	bx	lr
   15578:	bl	11398 <__stack_chk_fail@plt>
   1557c:	andeq	r7, r1, r0, asr #21
   15580:	andeq	r0, r0, r0, asr #2
   15584:	ldr	r1, [pc, #132]	; 15610 <close_stdout@@Base+0x3300>
   15588:	mov	r2, #5
   1558c:	push	{r4, lr}
   15590:	add	r1, pc, r1
   15594:	mov	r0, #0
   15598:	ldr	r4, [pc, #116]	; 15614 <close_stdout@@Base+0x3304>
   1559c:	bl	1138c <dcgettext@plt>
   155a0:	ldr	r2, [pc, #112]	; 15618 <close_stdout@@Base+0x3308>
   155a4:	add	r4, pc, r4
   155a8:	add	r2, pc, r2
   155ac:	mov	r1, r0
   155b0:	mov	r0, #1
   155b4:	bl	11548 <__printf_chk@plt>
   155b8:	ldr	r1, [pc, #92]	; 1561c <close_stdout@@Base+0x330c>
   155bc:	mov	r2, #5
   155c0:	mov	r0, #0
   155c4:	add	r1, pc, r1
   155c8:	bl	1138c <dcgettext@plt>
   155cc:	ldr	r2, [pc, #76]	; 15620 <close_stdout@@Base+0x3310>
   155d0:	ldr	r3, [pc, #76]	; 15624 <close_stdout@@Base+0x3314>
   155d4:	add	r2, pc, r2
   155d8:	add	r3, pc, r3
   155dc:	mov	r1, r0
   155e0:	mov	r0, #1
   155e4:	bl	11548 <__printf_chk@plt>
   155e8:	ldr	r1, [pc, #56]	; 15628 <close_stdout@@Base+0x3318>
   155ec:	mov	r0, #0
   155f0:	mov	r2, #5
   155f4:	add	r1, pc, r1
   155f8:	bl	1138c <dcgettext@plt>
   155fc:	ldr	r3, [pc, #40]	; 1562c <close_stdout@@Base+0x331c>
   15600:	ldr	r3, [r4, r3]
   15604:	pop	{r4, lr}
   15608:	ldr	r1, [r3]
   1560c:	b	112d8 <fputs_unlocked@plt>
   15610:	andeq	r6, r0, ip, ror #21
   15614:	andeq	r7, r1, r4, asr sl
   15618:	andeq	r6, r0, ip, ror #21
   1561c:	andeq	r6, r0, r8, ror #21
   15620:			; <UNDEFINED> instruction: 0x000063b0
   15624:			; <UNDEFINED> instruction: 0x000063bc
   15628:	andeq	r6, r0, ip, asr #21
   1562c:	andeq	r0, r0, r0, ror #2
   15630:	push	{r4, lr}
   15634:	mov	r4, r0
   15638:	bl	1144c <malloc@plt>
   1563c:	rsbs	r3, r0, #1
   15640:	movcc	r3, #0
   15644:	cmp	r4, #0
   15648:	moveq	r3, #0
   1564c:	cmp	r3, #0
   15650:	popeq	{r4, pc}
   15654:	bl	15844 <close_stdout@@Base+0x3534>
   15658:	push	{r3, r4, r5, lr}
   1565c:	mov	r4, r0
   15660:	mvn	r0, #0
   15664:	mov	r5, r1
   15668:	bl	1a84c <close_stdout@@Base+0x853c>
   1566c:	cmp	r0, r4
   15670:	bcc	15680 <close_stdout@@Base+0x3370>
   15674:	mul	r0, r4, r5
   15678:	pop	{r3, r4, r5, lr}
   1567c:	b	15630 <close_stdout@@Base+0x3320>
   15680:	bl	15844 <close_stdout@@Base+0x3534>
   15684:	b	15630 <close_stdout@@Base+0x3320>
   15688:	rsbs	r3, r1, #1
   1568c:	push	{r4, lr}
   15690:	movcc	r3, #0
   15694:	cmp	r0, #0
   15698:	mov	r4, r1
   1569c:	moveq	r3, #0
   156a0:	cmp	r3, #0
   156a4:	bne	156c8 <close_stdout@@Base+0x33b8>
   156a8:	bl	113a4 <realloc@plt>
   156ac:	rsbs	r3, r0, #1
   156b0:	movcc	r3, #0
   156b4:	cmp	r4, #0
   156b8:	moveq	r3, #0
   156bc:	cmp	r3, #0
   156c0:	popeq	{r4, pc}
   156c4:	bl	15844 <close_stdout@@Base+0x3534>
   156c8:	bl	11338 <free@plt>
   156cc:	mov	r0, #0
   156d0:	pop	{r4, pc}
   156d4:	push	{r4, r5, r6, lr}
   156d8:	mov	r5, r1
   156dc:	mov	r6, r0
   156e0:	mov	r1, r2
   156e4:	mvn	r0, #0
   156e8:	mov	r4, r2
   156ec:	bl	1a84c <close_stdout@@Base+0x853c>
   156f0:	cmp	r0, r5
   156f4:	bcc	15708 <close_stdout@@Base+0x33f8>
   156f8:	mov	r0, r6
   156fc:	mul	r1, r5, r4
   15700:	pop	{r4, r5, r6, lr}
   15704:	b	15688 <close_stdout@@Base+0x3378>
   15708:	bl	15844 <close_stdout@@Base+0x3534>
   1570c:	push	{r3, r4, r5, r6, r7, lr}
   15710:	subs	r7, r0, #0
   15714:	mov	r5, r1
   15718:	mov	r6, r2
   1571c:	ldr	r4, [r1]
   15720:	beq	15758 <close_stdout@@Base+0x3448>
   15724:	movw	r0, #43690	; 0xaaaa
   15728:	mov	r1, r2
   1572c:	bfi	r0, r0, #16, #16
   15730:	bl	1a84c <close_stdout@@Base+0x853c>
   15734:	cmp	r4, r0
   15738:	addcc	r3, r4, #1
   1573c:	addcc	r4, r4, r3, lsr #1
   15740:	bcs	1577c <close_stdout@@Base+0x346c>
   15744:	str	r4, [r5]
   15748:	mov	r0, r7
   1574c:	mul	r1, r6, r4
   15750:	pop	{r3, r4, r5, r6, r7, lr}
   15754:	b	15688 <close_stdout@@Base+0x3378>
   15758:	cmp	r4, #0
   1575c:	bne	15744 <close_stdout@@Base+0x3434>
   15760:	mov	r0, #64	; 0x40
   15764:	mov	r1, r2
   15768:	bl	1a84c <close_stdout@@Base+0x853c>
   1576c:	cmp	r0, #0
   15770:	movne	r4, r0
   15774:	addeq	r4, r0, #1
   15778:	b	15744 <close_stdout@@Base+0x3434>
   1577c:	bl	15844 <close_stdout@@Base+0x3534>
   15780:	cmp	r0, #0
   15784:	push	{r3, lr}
   15788:	ldr	r3, [r1]
   1578c:	beq	157b8 <close_stdout@@Base+0x34a8>
   15790:	movw	r2, #43689	; 0xaaa9
   15794:	movt	r2, #43690	; 0xaaaa
   15798:	cmp	r3, r2
   1579c:	addls	r2, r3, #1
   157a0:	addls	r3, r3, r2, lsr #1
   157a4:	bhi	157d0 <close_stdout@@Base+0x34c0>
   157a8:	str	r3, [r1]
   157ac:	mov	r1, r3
   157b0:	pop	{r3, lr}
   157b4:	b	15688 <close_stdout@@Base+0x3378>
   157b8:	cmp	r3, #0
   157bc:	moveq	r3, #64	; 0x40
   157c0:	str	r3, [r1]
   157c4:	mov	r1, r3
   157c8:	pop	{r3, lr}
   157cc:	b	15688 <close_stdout@@Base+0x3378>
   157d0:	bl	15844 <close_stdout@@Base+0x3534>
   157d4:	push	{r4, lr}
   157d8:	mov	r4, r0
   157dc:	bl	15630 <close_stdout@@Base+0x3320>
   157e0:	mov	r2, r4
   157e4:	mov	r1, #0
   157e8:	pop	{r4, lr}
   157ec:	b	11530 <memset@plt>
   157f0:	push	{r3, lr}
   157f4:	bl	112cc <calloc@plt>
   157f8:	cmp	r0, #0
   157fc:	popne	{r3, pc}
   15800:	bl	15844 <close_stdout@@Base+0x3534>
   15804:	push	{r3, r4, r5, lr}
   15808:	mov	r4, r1
   1580c:	mov	r5, r0
   15810:	mov	r0, r1
   15814:	bl	15630 <close_stdout@@Base+0x3320>
   15818:	mov	r1, r5
   1581c:	mov	r2, r4
   15820:	pop	{r3, r4, r5, lr}
   15824:	b	11350 <memcpy@plt>
   15828:	push	{r4, lr}
   1582c:	mov	r4, r0
   15830:	bl	114d0 <strlen@plt>
   15834:	add	r1, r0, #1
   15838:	mov	r0, r4
   1583c:	pop	{r4, lr}
   15840:	b	15804 <close_stdout@@Base+0x34f4>
   15844:	ldr	r3, [pc, #64]	; 1588c <close_stdout@@Base+0x357c>
   15848:	mov	r2, #5
   1584c:	ldr	ip, [pc, #60]	; 15890 <close_stdout@@Base+0x3580>
   15850:	mov	r0, #0
   15854:	add	r3, pc, r3
   15858:	ldr	r1, [pc, #52]	; 15894 <close_stdout@@Base+0x3584>
   1585c:	push	{r4, lr}
   15860:	add	r1, pc, r1
   15864:	ldr	r3, [r3, ip]
   15868:	ldr	r4, [r3]
   1586c:	bl	1138c <dcgettext@plt>
   15870:	ldr	r2, [pc, #32]	; 15898 <close_stdout@@Base+0x3588>
   15874:	mov	r1, #0
   15878:	add	r2, pc, r2
   1587c:	mov	r3, r0
   15880:	mov	r0, r4
   15884:	bl	11428 <error@plt>
   15888:	bl	11614 <abort@plt>
   1588c:	andeq	r7, r1, r4, lsr #15
   15890:	andeq	r0, r0, r4, ror #2
   15894:	ldrdeq	r6, [r0], -r0
   15898:	andeq	r6, r0, r8, lsr r4
   1589c:	push	{r4, lr}
   158a0:	bl	161d4 <close_stdout@@Base+0x3ec4>
   158a4:	subs	r4, r0, #0
   158a8:	beq	158b4 <close_stdout@@Base+0x35a4>
   158ac:	mov	r0, r4
   158b0:	pop	{r4, pc}
   158b4:	bl	114f4 <__errno_location@plt>
   158b8:	ldr	r3, [r0]
   158bc:	cmp	r3, #12
   158c0:	bne	158ac <close_stdout@@Base+0x359c>
   158c4:	bl	15844 <close_stdout@@Base+0x3534>
   158c8:	push	{r4, lr}
   158cc:	sub	sp, sp, #8
   158d0:	ldr	ip, [sp, #16]
   158d4:	str	ip, [sp]
   158d8:	bl	18118 <close_stdout@@Base+0x5e08>
   158dc:	subs	r4, r0, #0
   158e0:	blt	158f0 <close_stdout@@Base+0x35e0>
   158e4:	mov	r0, r4
   158e8:	add	sp, sp, #8
   158ec:	pop	{r4, pc}
   158f0:	bl	114f4 <__errno_location@plt>
   158f4:	ldr	r3, [r0]
   158f8:	cmp	r3, #12
   158fc:	bne	158e4 <close_stdout@@Base+0x35d4>
   15900:	bl	15844 <close_stdout@@Base+0x3534>
   15904:	push	{r4, lr}
   15908:	bl	1847c <close_stdout@@Base+0x616c>
   1590c:	subs	r4, r0, #0
   15910:	beq	1591c <close_stdout@@Base+0x360c>
   15914:	mov	r0, r4
   15918:	pop	{r4, pc}
   1591c:	bl	114f4 <__errno_location@plt>
   15920:	ldr	r3, [r0]
   15924:	cmp	r3, #12
   15928:	bne	15914 <close_stdout@@Base+0x3604>
   1592c:	bl	15844 <close_stdout@@Base+0x3534>
   15930:	push	{r4, lr}
   15934:	bl	18698 <close_stdout@@Base+0x6388>
   15938:	subs	r4, r0, #0
   1593c:	beq	15948 <close_stdout@@Base+0x3638>
   15940:	mov	r0, r4
   15944:	pop	{r4, pc}
   15948:	bl	114f4 <__errno_location@plt>
   1594c:	ldr	r3, [r0]
   15950:	cmp	r3, #12
   15954:	bne	15940 <close_stdout@@Base+0x3630>
   15958:	bl	15844 <close_stdout@@Base+0x3534>
   1595c:	ldr	ip, [pc, #1852]	; 160a0 <close_stdout@@Base+0x3d90>
   15960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15964:	mov	fp, r2
   15968:	ldr	r2, [pc, #1844]	; 160a4 <close_stdout@@Base+0x3d94>
   1596c:	add	ip, pc, ip
   15970:	mov	r9, r3
   15974:	sub	sp, sp, #36	; 0x24
   15978:	mov	r3, ip
   1597c:	cmp	fp, #36	; 0x24
   15980:	ldr	sl, [ip, r2]
   15984:	mov	r5, r0
   15988:	mov	r8, r1
   1598c:	ldr	r6, [sp, #72]	; 0x48
   15990:	ldr	r3, [sl]
   15994:	str	r3, [sp, #28]
   15998:	bhi	16080 <close_stdout@@Base+0x3d70>
   1599c:	cmp	r1, #0
   159a0:	addeq	r8, sp, #24
   159a4:	bl	114ac <__ctype_b_loc@plt>
   159a8:	ldrb	r3, [r5]
   159ac:	mov	r1, r5
   159b0:	ldr	r0, [r0]
   159b4:	b	159bc <close_stdout@@Base+0x36ac>
   159b8:	ldrb	r3, [r1, #1]!
   159bc:	lsl	r2, r3, #1
   159c0:	ldrh	r4, [r0, r2]
   159c4:	and	r4, r4, #8192	; 0x2000
   159c8:	uxth	r4, r4
   159cc:	cmp	r4, #0
   159d0:	bne	159b8 <close_stdout@@Base+0x36a8>
   159d4:	cmp	r3, #45	; 0x2d
   159d8:	bne	159f8 <close_stdout@@Base+0x36e8>
   159dc:	mov	r0, #4
   159e0:	ldr	r2, [sp, #28]
   159e4:	ldr	r3, [sl]
   159e8:	cmp	r2, r3
   159ec:	bne	1607c <close_stdout@@Base+0x3d6c>
   159f0:	add	sp, sp, #36	; 0x24
   159f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159f8:	bl	114f4 <__errno_location@plt>
   159fc:	mov	r2, fp
   15a00:	mov	r1, r8
   15a04:	mov	r3, r4
   15a08:	str	r4, [r0]
   15a0c:	mov	r7, r0
   15a10:	mov	r0, r5
   15a14:	bl	11368 <__strtoull_internal@plt>
   15a18:	ldr	fp, [r8]
   15a1c:	cmp	fp, r5
   15a20:	strd	r0, [sp]
   15a24:	beq	15ba0 <close_stdout@@Base+0x3890>
   15a28:	ldr	ip, [r7]
   15a2c:	cmp	ip, #0
   15a30:	bne	15a5c <close_stdout@@Base+0x374c>
   15a34:	mov	r7, ip
   15a38:	cmp	r6, #0
   15a3c:	beq	1600c <close_stdout@@Base+0x3cfc>
   15a40:	ldrb	r5, [fp]
   15a44:	cmp	r5, #0
   15a48:	bne	15a6c <close_stdout@@Base+0x375c>
   15a4c:	ldrd	r2, [sp]
   15a50:	mov	r0, r7
   15a54:	strd	r2, [r9]
   15a58:	b	159e0 <close_stdout@@Base+0x36d0>
   15a5c:	cmp	ip, #34	; 0x22
   15a60:	moveq	r7, #1
   15a64:	bne	159dc <close_stdout@@Base+0x36cc>
   15a68:	b	15a38 <close_stdout@@Base+0x3728>
   15a6c:	mov	r0, r6
   15a70:	mov	r1, r5
   15a74:	bl	114dc <strchr@plt>
   15a78:	cmp	r0, #0
   15a7c:	beq	15bdc <close_stdout@@Base+0x38cc>
   15a80:	mov	r0, r6
   15a84:	mov	r1, #48	; 0x30
   15a88:	bl	114dc <strchr@plt>
   15a8c:	cmp	r0, #0
   15a90:	beq	15ab0 <close_stdout@@Base+0x37a0>
   15a94:	ldrb	r3, [fp, #1]
   15a98:	cmp	r3, #68	; 0x44
   15a9c:	beq	16034 <close_stdout@@Base+0x3d24>
   15aa0:	cmp	r3, #105	; 0x69
   15aa4:	beq	1601c <close_stdout@@Base+0x3d0c>
   15aa8:	cmp	r3, #66	; 0x42
   15aac:	beq	16034 <close_stdout@@Base+0x3d24>
   15ab0:	mov	r6, #1
   15ab4:	mov	r4, #1024	; 0x400
   15ab8:	sub	r5, r5, #66	; 0x42
   15abc:	cmp	r5, #53	; 0x35
   15ac0:	addls	pc, pc, r5, lsl #2
   15ac4:	b	15bdc <close_stdout@@Base+0x38cc>
   15ac8:	b	15e84 <close_stdout@@Base+0x3b74>
   15acc:	b	15bdc <close_stdout@@Base+0x38cc>
   15ad0:	b	15bdc <close_stdout@@Base+0x38cc>
   15ad4:	b	15e18 <close_stdout@@Base+0x3b08>
   15ad8:	b	15bdc <close_stdout@@Base+0x38cc>
   15adc:	b	15dac <close_stdout@@Base+0x3a9c>
   15ae0:	b	15bdc <close_stdout@@Base+0x38cc>
   15ae4:	b	15bdc <close_stdout@@Base+0x38cc>
   15ae8:	b	15bdc <close_stdout@@Base+0x38cc>
   15aec:	b	15d54 <close_stdout@@Base+0x3a44>
   15af0:	b	15bdc <close_stdout@@Base+0x38cc>
   15af4:	b	15f2c <close_stdout@@Base+0x3c1c>
   15af8:	b	15bdc <close_stdout@@Base+0x38cc>
   15afc:	b	15bdc <close_stdout@@Base+0x38cc>
   15b00:	b	15ec0 <close_stdout@@Base+0x3bb0>
   15b04:	b	15bdc <close_stdout@@Base+0x38cc>
   15b08:	b	15bdc <close_stdout@@Base+0x38cc>
   15b0c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b10:	b	15fa0 <close_stdout@@Base+0x3c90>
   15b14:	b	15bdc <close_stdout@@Base+0x38cc>
   15b18:	b	15bdc <close_stdout@@Base+0x38cc>
   15b1c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b20:	b	15bdc <close_stdout@@Base+0x38cc>
   15b24:	b	15ce8 <close_stdout@@Base+0x39d8>
   15b28:	b	15c70 <close_stdout@@Base+0x3960>
   15b2c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b30:	b	15bdc <close_stdout@@Base+0x38cc>
   15b34:	b	15bdc <close_stdout@@Base+0x38cc>
   15b38:	b	15bdc <close_stdout@@Base+0x38cc>
   15b3c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b40:	b	15bdc <close_stdout@@Base+0x38cc>
   15b44:	b	15bdc <close_stdout@@Base+0x38cc>
   15b48:	b	15c34 <close_stdout@@Base+0x3924>
   15b4c:	b	15bec <close_stdout@@Base+0x38dc>
   15b50:	b	15bdc <close_stdout@@Base+0x38cc>
   15b54:	b	15bdc <close_stdout@@Base+0x38cc>
   15b58:	b	15bdc <close_stdout@@Base+0x38cc>
   15b5c:	b	15dac <close_stdout@@Base+0x3a9c>
   15b60:	b	15bdc <close_stdout@@Base+0x38cc>
   15b64:	b	15bdc <close_stdout@@Base+0x38cc>
   15b68:	b	15bdc <close_stdout@@Base+0x38cc>
   15b6c:	b	15d54 <close_stdout@@Base+0x3a44>
   15b70:	b	15bdc <close_stdout@@Base+0x38cc>
   15b74:	b	15f2c <close_stdout@@Base+0x3c1c>
   15b78:	b	15bdc <close_stdout@@Base+0x38cc>
   15b7c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b80:	b	15bdc <close_stdout@@Base+0x38cc>
   15b84:	b	15bdc <close_stdout@@Base+0x38cc>
   15b88:	b	15bdc <close_stdout@@Base+0x38cc>
   15b8c:	b	15bdc <close_stdout@@Base+0x38cc>
   15b90:	b	15fa0 <close_stdout@@Base+0x3c90>
   15b94:	b	15bdc <close_stdout@@Base+0x38cc>
   15b98:	b	15bdc <close_stdout@@Base+0x38cc>
   15b9c:	b	15c0c <close_stdout@@Base+0x38fc>
   15ba0:	cmp	r6, #0
   15ba4:	beq	159dc <close_stdout@@Base+0x36cc>
   15ba8:	ldrb	r5, [r5]
   15bac:	cmp	r5, #0
   15bb0:	beq	159dc <close_stdout@@Base+0x36cc>
   15bb4:	mov	r0, r6
   15bb8:	mov	r1, r5
   15bbc:	bl	114dc <strchr@plt>
   15bc0:	cmp	r0, #0
   15bc4:	beq	159dc <close_stdout@@Base+0x36cc>
   15bc8:	mov	r0, #1
   15bcc:	mov	r1, #0
   15bd0:	mov	r7, r4
   15bd4:	strd	r0, [sp]
   15bd8:	b	15a80 <close_stdout@@Base+0x3770>
   15bdc:	ldrd	r2, [sp]
   15be0:	orr	r0, r7, #2
   15be4:	strd	r2, [r9]
   15be8:	b	159e0 <close_stdout@@Base+0x36d0>
   15bec:	mov	r3, #0
   15bf0:	add	r2, fp, r6
   15bf4:	str	r2, [r8]
   15bf8:	ldrb	r2, [fp, r6]
   15bfc:	orr	r7, r7, r3
   15c00:	cmp	r2, #0
   15c04:	orrne	r7, r7, #2
   15c08:	b	15a4c <close_stdout@@Base+0x373c>
   15c0c:	ldrd	r2, [sp]
   15c10:	cmp	r2, #0
   15c14:	sbcs	r3, r3, #0
   15c18:	blt	16054 <close_stdout@@Base+0x3d44>
   15c1c:	ldrd	r0, [sp]
   15c20:	mov	r3, #0
   15c24:	adds	r0, r0, r0
   15c28:	adc	r1, r1, r1
   15c2c:	strd	r0, [sp]
   15c30:	b	15bf0 <close_stdout@@Base+0x38e0>
   15c34:	ldrd	r0, [sp]
   15c38:	movw	r3, #65535	; 0xffff
   15c3c:	movt	r3, #127	; 0x7f
   15c40:	mvn	r2, #0
   15c44:	cmp	r1, r3
   15c48:	cmpeq	r0, r2
   15c4c:	bhi	16054 <close_stdout@@Base+0x3d44>
   15c50:	lsl	r2, r1, #9
   15c54:	ldr	r1, [sp]
   15c58:	lsl	r3, r0, #9
   15c5c:	str	r3, [sp]
   15c60:	mov	r3, #0
   15c64:	orr	r2, r2, r1, lsr #23
   15c68:	str	r2, [sp, #4]
   15c6c:	b	15bf0 <close_stdout@@Base+0x38e0>
   15c70:	asr	r5, r4, #31
   15c74:	mov	r2, r4
   15c78:	mvn	r0, #0
   15c7c:	mvn	r1, #0
   15c80:	mov	r3, r5
   15c84:	bl	1aa58 <close_stdout@@Base+0x8748>
   15c88:	mov	ip, r7
   15c8c:	str	r6, [sp, #20]
   15c90:	mov	r2, #7
   15c94:	ldrd	r6, [sp]
   15c98:	mov	r3, #0
   15c9c:	strd	r0, [sp, #8]
   15ca0:	ldrd	r0, [sp, #8]
   15ca4:	cmp	r1, r7
   15ca8:	cmpeq	r0, r6
   15cac:	mulcs	r0, r6, r5
   15cb0:	movcs	r1, #0
   15cb4:	mlacs	r0, r4, r7, r0
   15cb8:	movcc	r1, #1
   15cbc:	umullcs	r6, r7, r6, r4
   15cc0:	mvncc	r6, #0
   15cc4:	mvncc	r7, #0
   15cc8:	orr	r3, r3, r1
   15ccc:	addcs	r7, r0, r7
   15cd0:	subs	r2, r2, #1
   15cd4:	bne	15ca0 <close_stdout@@Base+0x3990>
   15cd8:	strd	r6, [sp]
   15cdc:	mov	r7, ip
   15ce0:	ldr	r6, [sp, #20]
   15ce4:	b	15bf0 <close_stdout@@Base+0x38e0>
   15ce8:	asr	r5, r4, #31
   15cec:	mov	r2, r4
   15cf0:	mvn	r0, #0
   15cf4:	mvn	r1, #0
   15cf8:	mov	r3, r5
   15cfc:	bl	1aa58 <close_stdout@@Base+0x8748>
   15d00:	mov	ip, r7
   15d04:	str	r6, [sp, #20]
   15d08:	mov	r2, #8
   15d0c:	ldrd	r6, [sp]
   15d10:	mov	r3, #0
   15d14:	strd	r0, [sp, #8]
   15d18:	ldrd	r0, [sp, #8]
   15d1c:	cmp	r1, r7
   15d20:	cmpeq	r0, r6
   15d24:	mulcs	r0, r6, r5
   15d28:	movcs	r1, #0
   15d2c:	mlacs	r0, r4, r7, r0
   15d30:	movcc	r1, #1
   15d34:	umullcs	r6, r7, r6, r4
   15d38:	mvncc	r6, #0
   15d3c:	mvncc	r7, #0
   15d40:	orr	r3, r3, r1
   15d44:	addcs	r7, r0, r7
   15d48:	subs	r2, r2, #1
   15d4c:	bne	15d18 <close_stdout@@Base+0x3a08>
   15d50:	b	15cd8 <close_stdout@@Base+0x39c8>
   15d54:	mov	r2, r4
   15d58:	asr	r3, r4, #31
   15d5c:	mvn	r0, #0
   15d60:	mvn	r1, #0
   15d64:	strd	r2, [sp, #8]
   15d68:	bl	1aa58 <close_stdout@@Base+0x8748>
   15d6c:	ldrd	r2, [sp]
   15d70:	cmp	r3, r1
   15d74:	cmpeq	r2, r0
   15d78:	bhi	16040 <close_stdout@@Base+0x3d30>
   15d7c:	ldr	r3, [sp]
   15d80:	ldr	ip, [sp, #12]
   15d84:	ldr	r0, [sp, #4]
   15d88:	ldr	r1, [sp]
   15d8c:	mul	r2, r3, ip
   15d90:	mov	r3, #0
   15d94:	mla	r2, r4, r0, r2
   15d98:	umull	r0, r1, r1, r4
   15d9c:	add	r2, r2, r1
   15da0:	strd	r0, [sp]
   15da4:	str	r2, [sp, #4]
   15da8:	b	15bf0 <close_stdout@@Base+0x38e0>
   15dac:	asr	r5, r4, #31
   15db0:	mov	r2, r4
   15db4:	mvn	r0, #0
   15db8:	mvn	r1, #0
   15dbc:	mov	r3, r5
   15dc0:	bl	1aa58 <close_stdout@@Base+0x8748>
   15dc4:	mov	ip, r7
   15dc8:	str	r6, [sp, #20]
   15dcc:	mov	r2, #3
   15dd0:	ldrd	r6, [sp]
   15dd4:	mov	r3, #0
   15dd8:	strd	r0, [sp, #8]
   15ddc:	ldrd	r0, [sp, #8]
   15de0:	cmp	r1, r7
   15de4:	cmpeq	r0, r6
   15de8:	mulcs	r0, r6, r5
   15dec:	movcs	r1, #0
   15df0:	mlacs	r0, r4, r7, r0
   15df4:	movcc	r1, #1
   15df8:	umullcs	r6, r7, r6, r4
   15dfc:	mvncc	r6, #0
   15e00:	mvncc	r7, #0
   15e04:	orr	r3, r3, r1
   15e08:	addcs	r7, r0, r7
   15e0c:	subs	r2, r2, #1
   15e10:	bne	15ddc <close_stdout@@Base+0x3acc>
   15e14:	b	15cd8 <close_stdout@@Base+0x39c8>
   15e18:	asr	r5, r4, #31
   15e1c:	mov	r2, r4
   15e20:	mvn	r0, #0
   15e24:	mvn	r1, #0
   15e28:	mov	r3, r5
   15e2c:	bl	1aa58 <close_stdout@@Base+0x8748>
   15e30:	mov	ip, r7
   15e34:	str	r6, [sp, #20]
   15e38:	mov	r2, #6
   15e3c:	ldrd	r6, [sp]
   15e40:	mov	r3, #0
   15e44:	strd	r0, [sp, #8]
   15e48:	ldrd	r0, [sp, #8]
   15e4c:	cmp	r1, r7
   15e50:	cmpeq	r0, r6
   15e54:	mulcs	r0, r6, r5
   15e58:	movcs	r1, #0
   15e5c:	mlacs	r0, r4, r7, r0
   15e60:	movcc	r1, #1
   15e64:	umullcs	r6, r7, r6, r4
   15e68:	mvncc	r6, #0
   15e6c:	mvncc	r7, #0
   15e70:	orr	r3, r3, r1
   15e74:	addcs	r7, r0, r7
   15e78:	subs	r2, r2, #1
   15e7c:	bne	15e48 <close_stdout@@Base+0x3b38>
   15e80:	b	15cd8 <close_stdout@@Base+0x39c8>
   15e84:	ldrd	r0, [sp]
   15e88:	movw	r3, #65535	; 0xffff
   15e8c:	movt	r3, #63	; 0x3f
   15e90:	mvn	r2, #0
   15e94:	cmp	r1, r3
   15e98:	cmpeq	r0, r2
   15e9c:	bhi	16040 <close_stdout@@Base+0x3d30>
   15ea0:	lsl	r2, r1, #10
   15ea4:	ldr	r1, [sp]
   15ea8:	lsl	r3, r0, #10
   15eac:	str	r3, [sp]
   15eb0:	mov	r3, #0
   15eb4:	orr	r2, r2, r1, lsr #22
   15eb8:	str	r2, [sp, #4]
   15ebc:	b	15bf0 <close_stdout@@Base+0x38e0>
   15ec0:	asr	r5, r4, #31
   15ec4:	mov	r2, r4
   15ec8:	mvn	r0, #0
   15ecc:	mvn	r1, #0
   15ed0:	mov	r3, r5
   15ed4:	bl	1aa58 <close_stdout@@Base+0x8748>
   15ed8:	mov	ip, r7
   15edc:	str	r6, [sp, #20]
   15ee0:	mov	r2, #5
   15ee4:	ldrd	r6, [sp]
   15ee8:	mov	r3, #0
   15eec:	strd	r0, [sp, #8]
   15ef0:	ldrd	r0, [sp, #8]
   15ef4:	cmp	r1, r7
   15ef8:	cmpeq	r0, r6
   15efc:	mulcs	r0, r6, r5
   15f00:	movcs	r1, #0
   15f04:	mlacs	r0, r4, r7, r0
   15f08:	movcc	r1, #1
   15f0c:	umullcs	r6, r7, r6, r4
   15f10:	mvncc	r6, #0
   15f14:	mvncc	r7, #0
   15f18:	orr	r3, r3, r1
   15f1c:	addcs	r7, r0, r7
   15f20:	subs	r2, r2, #1
   15f24:	bne	15ef0 <close_stdout@@Base+0x3be0>
   15f28:	b	15cd8 <close_stdout@@Base+0x39c8>
   15f2c:	mov	r2, r4
   15f30:	asr	r3, r4, #31
   15f34:	mvn	r0, #0
   15f38:	mvn	r1, #0
   15f3c:	strd	r2, [sp, #8]
   15f40:	bl	1aa58 <close_stdout@@Base+0x8748>
   15f44:	ldrd	r2, [sp]
   15f48:	cmp	r3, r1
   15f4c:	cmpeq	r2, r0
   15f50:	bhi	16068 <close_stdout@@Base+0x3d58>
   15f54:	ldr	ip, [sp, #4]
   15f58:	mul	r3, r4, ip
   15f5c:	ldr	ip, [sp, #12]
   15f60:	mla	r3, r2, ip, r3
   15f64:	ldr	r2, [sp]
   15f68:	umull	r4, r5, r4, r2
   15f6c:	add	r5, r3, r5
   15f70:	cmp	r1, r5
   15f74:	cmpeq	r0, r4
   15f78:	bcc	16068 <close_stdout@@Base+0x3d58>
   15f7c:	mul	r2, r4, ip
   15f80:	ldr	ip, [sp, #8]
   15f84:	mov	r3, #0
   15f88:	umull	r0, r1, r4, ip
   15f8c:	mla	r2, ip, r5, r2
   15f90:	strd	r0, [sp]
   15f94:	add	r2, r2, r1
   15f98:	str	r2, [sp, #4]
   15f9c:	b	15bf0 <close_stdout@@Base+0x38e0>
   15fa0:	asr	r5, r4, #31
   15fa4:	mov	r2, r4
   15fa8:	mvn	r0, #0
   15fac:	mvn	r1, #0
   15fb0:	mov	r3, r5
   15fb4:	bl	1aa58 <close_stdout@@Base+0x8748>
   15fb8:	mov	ip, r7
   15fbc:	str	r6, [sp, #20]
   15fc0:	mov	r2, #4
   15fc4:	ldrd	r6, [sp]
   15fc8:	mov	r3, #0
   15fcc:	strd	r0, [sp, #8]
   15fd0:	ldrd	r0, [sp, #8]
   15fd4:	cmp	r1, r7
   15fd8:	cmpeq	r0, r6
   15fdc:	mulcs	r0, r6, r5
   15fe0:	movcs	r1, #0
   15fe4:	mlacs	r0, r4, r7, r0
   15fe8:	movcc	r1, #1
   15fec:	umullcs	r6, r7, r6, r4
   15ff0:	mvncc	r6, #0
   15ff4:	mvncc	r7, #0
   15ff8:	orr	r3, r3, r1
   15ffc:	addcs	r7, r0, r7
   16000:	subs	r2, r2, #1
   16004:	bne	15fd0 <close_stdout@@Base+0x3cc0>
   16008:	b	15cd8 <close_stdout@@Base+0x39c8>
   1600c:	ldrd	r0, [sp]
   16010:	strd	r0, [r9]
   16014:	mov	r0, r7
   16018:	b	159e0 <close_stdout@@Base+0x36d0>
   1601c:	ldrb	r3, [fp, #2]
   16020:	mov	r4, #1024	; 0x400
   16024:	cmp	r3, #66	; 0x42
   16028:	moveq	r6, #3
   1602c:	movne	r6, #1
   16030:	b	15ab8 <close_stdout@@Base+0x37a8>
   16034:	mov	r6, #2
   16038:	mov	r4, #1000	; 0x3e8
   1603c:	b	15ab8 <close_stdout@@Base+0x37a8>
   16040:	mvn	r3, #0
   16044:	mvn	r2, #0
   16048:	strd	r2, [sp]
   1604c:	mov	r3, #1
   16050:	b	15bf0 <close_stdout@@Base+0x38e0>
   16054:	mvn	r0, #0
   16058:	mvn	r1, #0
   1605c:	mov	r3, #1
   16060:	strd	r0, [sp]
   16064:	b	15bf0 <close_stdout@@Base+0x38e0>
   16068:	mvn	r0, #0
   1606c:	mvn	r1, #0
   16070:	mov	r3, #1
   16074:	strd	r0, [sp]
   16078:	b	15bf0 <close_stdout@@Base+0x38e0>
   1607c:	bl	11398 <__stack_chk_fail@plt>
   16080:	ldr	r0, [pc, #32]	; 160a8 <close_stdout@@Base+0x3d98>
   16084:	mov	r2, #96	; 0x60
   16088:	ldr	r1, [pc, #28]	; 160ac <close_stdout@@Base+0x3d9c>
   1608c:	ldr	r3, [pc, #28]	; 160b0 <close_stdout@@Base+0x3da0>
   16090:	add	r0, pc, r0
   16094:	add	r1, pc, r1
   16098:	add	r3, pc, r3
   1609c:	bl	11638 <__assert_fail@plt>
   160a0:	andeq	r7, r1, ip, lsl #13
   160a4:	andeq	r0, r0, r0, asr #2
   160a8:	andeq	r6, r0, r0, asr #1
   160ac:	andeq	r6, r0, r4, ror #1
   160b0:	andeq	r6, r0, ip, lsr #1
   160b4:	ldr	ip, [pc, #84]	; 16110 <close_stdout@@Base+0x3e00>
   160b8:	push	{r1, r2, r3}
   160bc:	add	ip, pc, ip
   160c0:	push	{r4, lr}
   160c4:	sub	sp, sp, #12
   160c8:	ldr	lr, [pc, #68]	; 16114 <close_stdout@@Base+0x3e04>
   160cc:	add	r3, sp, #24
   160d0:	ldr	r1, [sp, #20]
   160d4:	mov	r2, r3
   160d8:	ldr	r4, [ip, lr]
   160dc:	str	r3, [sp]
   160e0:	ldr	r3, [r4]
   160e4:	str	r3, [sp, #4]
   160e8:	bl	16118 <close_stdout@@Base+0x3e08>
   160ec:	ldr	r2, [sp, #4]
   160f0:	ldr	r3, [r4]
   160f4:	cmp	r2, r3
   160f8:	bne	1610c <close_stdout@@Base+0x3dfc>
   160fc:	add	sp, sp, #12
   16100:	pop	{r4, lr}
   16104:	add	sp, sp, #12
   16108:	bx	lr
   1610c:	bl	11398 <__stack_chk_fail@plt>
   16110:	andeq	r6, r1, ip, lsr pc
   16114:	andeq	r0, r0, r0, asr #2
   16118:	ldr	ip, [pc, #136]	; 161a8 <close_stdout@@Base+0x3e98>
   1611c:	mov	r3, r2
   16120:	push	{r4, r5, lr}
   16124:	add	ip, pc, ip
   16128:	ldr	lr, [pc, #124]	; 161ac <close_stdout@@Base+0x3e9c>
   1612c:	sub	sp, sp, #12
   16130:	mov	r2, r1
   16134:	mov	r5, r0
   16138:	mov	r1, sp
   1613c:	mov	r0, #0
   16140:	ldr	r4, [ip, lr]
   16144:	ldr	ip, [r4]
   16148:	str	ip, [sp, #4]
   1614c:	bl	18928 <close_stdout@@Base+0x6618>
   16150:	subs	r2, r0, #0
   16154:	beq	16184 <close_stdout@@Base+0x3e74>
   16158:	ldr	r3, [sp]
   1615c:	cmp	r3, #0
   16160:	strge	r2, [r5]
   16164:	blt	1618c <close_stdout@@Base+0x3e7c>
   16168:	ldr	r2, [sp, #4]
   1616c:	mov	r0, r3
   16170:	ldr	r3, [r4]
   16174:	cmp	r2, r3
   16178:	bne	161a4 <close_stdout@@Base+0x3e94>
   1617c:	add	sp, sp, #12
   16180:	pop	{r4, r5, pc}
   16184:	mvn	r3, #0
   16188:	b	16168 <close_stdout@@Base+0x3e58>
   1618c:	bl	11338 <free@plt>
   16190:	bl	114f4 <__errno_location@plt>
   16194:	mov	r2, #75	; 0x4b
   16198:	mvn	r3, #0
   1619c:	str	r2, [r0]
   161a0:	b	16168 <close_stdout@@Base+0x3e58>
   161a4:	bl	11398 <__stack_chk_fail@plt>
   161a8:	ldrdeq	r6, [r1], -r4
   161ac:	andeq	r0, r0, r0, asr #2
   161b0:	cmn	r0, #100	; 0x64
   161b4:	push	{r3, lr}
   161b8:	bne	161d0 <close_stdout@@Base+0x3ec0>
   161bc:	mov	r0, r1
   161c0:	mov	r1, r2
   161c4:	mov	r2, r3
   161c8:	pop	{r3, lr}
   161cc:	b	113d4 <readlink@plt>
   161d0:	bl	11614 <abort@plt>
   161d4:	push	{lr}		; (str lr, [sp, #-4]!)
   161d8:	sub	sp, sp, #12
   161dc:	ldr	ip, [pc, #32]	; 16204 <close_stdout@@Base+0x3ef4>
   161e0:	mov	r3, #0
   161e4:	mov	r1, r0
   161e8:	mov	r2, r3
   161ec:	add	ip, pc, ip
   161f0:	mvn	r0, #99	; 0x63
   161f4:	stm	sp, {r3, ip}
   161f8:	bl	16278 <close_stdout@@Base+0x3f68>
   161fc:	add	sp, sp, #12
   16200:	pop	{pc}		; (ldr pc, [sp], #4)
   16204:			; <UNDEFINED> instruction: 0xffffffbc
   16208:	cmp	r0, r1
   1620c:	push	{r4}		; (str r4, [sp, #-4]!)
   16210:	beq	1626c <close_stdout@@Base+0x3f5c>
   16214:	sub	r4, r0, #1
   16218:	sub	r1, r1, #1
   1621c:	b	16228 <close_stdout@@Base+0x3f18>
   16220:	cmp	r2, ip
   16224:	bne	16260 <close_stdout@@Base+0x3f50>
   16228:	ldrb	r3, [r4, #1]!
   1622c:	sub	r0, r3, #65	; 0x41
   16230:	add	r2, r3, #32
   16234:	cmp	r0, #25
   16238:	movhi	r2, r3
   1623c:	ldrb	r3, [r1, #1]!
   16240:	uxtb	r2, r2
   16244:	sub	r0, r3, #65	; 0x41
   16248:	add	ip, r3, #32
   1624c:	cmp	r0, #25
   16250:	movhi	ip, r3
   16254:	cmp	r2, #0
   16258:	uxtb	ip, ip
   1625c:	bne	16220 <close_stdout@@Base+0x3f10>
   16260:	rsb	r0, ip, r2
   16264:	pop	{r4}		; (ldr r4, [sp], #4)
   16268:	bx	lr
   1626c:	mov	r0, #0
   16270:	pop	{r4}		; (ldr r4, [sp], #4)
   16274:	bx	lr
   16278:	ldr	ip, [pc, #480]	; 16460 <close_stdout@@Base+0x4150>
   1627c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16280:	mov	r8, r0
   16284:	ldr	r0, [pc, #472]	; 16464 <close_stdout@@Base+0x4154>
   16288:	add	ip, pc, ip
   1628c:	sub	sp, sp, #1040	; 0x410
   16290:	mov	r4, r3
   16294:	sub	sp, sp, #12
   16298:	mov	r9, r1
   1629c:	ldr	r0, [ip, r0]
   162a0:	mov	r7, r2
   162a4:	ldr	r6, [sp, #1088]	; 0x440
   162a8:	ldr	sl, [sp, #1092]	; 0x444
   162ac:	ldr	r3, [r0]
   162b0:	cmp	r6, #0
   162b4:	str	r0, [sp, #12]
   162b8:	str	r3, [sp, #1044]	; 0x414
   162bc:	beq	16428 <close_stdout@@Base+0x4118>
   162c0:	cmp	r4, #0
   162c4:	addeq	r7, sp, #20
   162c8:	moveq	r4, #1024	; 0x400
   162cc:	mov	r5, r7
   162d0:	b	1631c <close_stdout@@Base+0x400c>
   162d4:	cmp	r4, fp
   162d8:	bhi	163a0 <close_stdout@@Base+0x4090>
   162dc:	cmp	r5, r7
   162e0:	beq	162f0 <close_stdout@@Base+0x3fe0>
   162e4:	mov	r0, r5
   162e8:	ldr	r3, [r6, #8]
   162ec:	blx	r3
   162f0:	cmp	r4, #1073741824	; 0x40000000
   162f4:	lslls	r4, r4, #1
   162f8:	bls	16308 <close_stdout@@Base+0x3ff8>
   162fc:	cmp	r4, #-2147483648	; 0x80000000
   16300:	bcs	16414 <close_stdout@@Base+0x4104>
   16304:	mov	r4, #-2147483648	; 0x80000000
   16308:	ldr	r3, [r6]
   1630c:	mov	r0, r4
   16310:	blx	r3
   16314:	subs	r5, r0, #0
   16318:	beq	163ec <close_stdout@@Base+0x40dc>
   1631c:	mov	r0, r8
   16320:	mov	r1, r9
   16324:	mov	r2, r5
   16328:	mov	r3, r4
   1632c:	blx	sl
   16330:	subs	fp, r0, #0
   16334:	bge	162d4 <close_stdout@@Base+0x3fc4>
   16338:	bl	114f4 <__errno_location@plt>
   1633c:	ldr	r1, [r0]
   16340:	mov	r2, r0
   16344:	cmp	r1, #34	; 0x22
   16348:	beq	162d4 <close_stdout@@Base+0x3fc4>
   1634c:	cmp	r7, r5
   16350:	moveq	r5, #0
   16354:	beq	1637c <close_stdout@@Base+0x406c>
   16358:	ldr	r3, [r6, #8]
   1635c:	mov	r0, r5
   16360:	str	r1, [sp, #8]
   16364:	mov	r5, #0
   16368:	str	r2, [sp, #4]
   1636c:	blx	r3
   16370:	ldr	r1, [sp, #8]
   16374:	ldr	r2, [sp, #4]
   16378:	str	r1, [r2]
   1637c:	ldr	r1, [sp, #12]
   16380:	mov	r0, r5
   16384:	ldr	r2, [sp, #1044]	; 0x414
   16388:	ldr	r3, [r1]
   1638c:	cmp	r2, r3
   16390:	bne	1645c <close_stdout@@Base+0x414c>
   16394:	add	sp, sp, #1040	; 0x410
   16398:	add	sp, sp, #12
   1639c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a0:	add	r2, sp, #20
   163a4:	mov	r1, #0
   163a8:	cmp	r5, r2
   163ac:	strb	r1, [r5, fp]
   163b0:	add	r8, fp, #1
   163b4:	beq	16434 <close_stdout@@Base+0x4124>
   163b8:	cmp	r7, r5
   163bc:	cmpne	r4, r8
   163c0:	bls	1637c <close_stdout@@Base+0x406c>
   163c4:	ldr	r3, [r6, #4]
   163c8:	cmp	r3, #0
   163cc:	beq	1637c <close_stdout@@Base+0x406c>
   163d0:	mov	r0, r5
   163d4:	mov	r1, r8
   163d8:	blx	r3
   163dc:	cmp	r0, #0
   163e0:	movne	r5, r0
   163e4:	b	1637c <close_stdout@@Base+0x406c>
   163e8:	mov	r4, r8
   163ec:	ldr	r3, [r6, #12]
   163f0:	cmp	r3, #0
   163f4:	beq	16400 <close_stdout@@Base+0x40f0>
   163f8:	mov	r0, r4
   163fc:	blx	r3
   16400:	bl	114f4 <__errno_location@plt>
   16404:	mov	r5, #0
   16408:	mov	r3, #12
   1640c:	str	r3, [r0]
   16410:	b	1637c <close_stdout@@Base+0x406c>
   16414:	bl	114f4 <__errno_location@plt>
   16418:	mov	r5, #0
   1641c:	mov	r3, #36	; 0x24
   16420:	str	r3, [r0]
   16424:	b	1637c <close_stdout@@Base+0x406c>
   16428:	ldr	r3, [pc, #56]	; 16468 <close_stdout@@Base+0x4158>
   1642c:	ldr	r6, [ip, r3]
   16430:	b	162c0 <close_stdout@@Base+0x3fb0>
   16434:	ldr	r3, [r6]
   16438:	mov	r0, r8
   1643c:	blx	r3
   16440:	subs	r4, r0, #0
   16444:	beq	163e8 <close_stdout@@Base+0x40d8>
   16448:	mov	r1, r5
   1644c:	mov	r2, r8
   16450:	bl	11350 <memcpy@plt>
   16454:	mov	r5, r4
   16458:	b	1637c <close_stdout@@Base+0x406c>
   1645c:	bl	11398 <__stack_chk_fail@plt>
   16460:	andeq	r6, r1, r0, ror sp
   16464:	andeq	r0, r0, r0, asr #2
   16468:	andeq	r0, r0, r4, asr #2
   1646c:	push	{r4, r5, r6, lr}
   16470:	mov	r4, r0
   16474:	bl	11410 <__fpending@plt>
   16478:	mov	r6, r0
   1647c:	mov	r0, r4
   16480:	ldr	r4, [r4]
   16484:	bl	18780 <close_stdout@@Base+0x6470>
   16488:	and	r4, r4, #32
   1648c:	adds	r5, r0, #0
   16490:	movne	r5, #1
   16494:	cmp	r4, #0
   16498:	bne	164b8 <close_stdout@@Base+0x41a8>
   1649c:	cmp	r5, #0
   164a0:	beq	164b0 <close_stdout@@Base+0x41a0>
   164a4:	cmp	r6, #0
   164a8:	beq	164d4 <close_stdout@@Base+0x41c4>
   164ac:	mvn	r4, #0
   164b0:	mov	r0, r4
   164b4:	pop	{r4, r5, r6, pc}
   164b8:	cmp	r5, #0
   164bc:	bne	164ac <close_stdout@@Base+0x419c>
   164c0:	bl	114f4 <__errno_location@plt>
   164c4:	mvn	r4, #0
   164c8:	str	r5, [r0]
   164cc:	mov	r0, r4
   164d0:	pop	{r4, r5, r6, pc}
   164d4:	bl	114f4 <__errno_location@plt>
   164d8:	ldr	r4, [r0]
   164dc:	subs	r4, r4, #9
   164e0:	mvnne	r4, #0
   164e4:	mov	r0, r4
   164e8:	pop	{r4, r5, r6, pc}
   164ec:	ldr	r3, [pc, #984]	; 168cc <close_stdout@@Base+0x45bc>
   164f0:	mov	r0, #14
   164f4:	ldr	r2, [pc, #980]	; 168d0 <close_stdout@@Base+0x45c0>
   164f8:	add	r3, pc, r3
   164fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16500:	sub	sp, sp, #132	; 0x84
   16504:	ldr	r6, [r3, r2]
   16508:	ldr	r3, [r6]
   1650c:	str	r3, [sp, #124]	; 0x7c
   16510:	bl	115e4 <nl_langinfo@plt>
   16514:	subs	r5, r0, #0
   16518:	beq	165cc <close_stdout@@Base+0x42bc>
   1651c:	ldr	r3, [pc, #944]	; 168d4 <close_stdout@@Base+0x45c4>
   16520:	ldr	r4, [pc, r3]
   16524:	cmp	r4, #0
   16528:	beq	165d8 <close_stdout@@Base+0x42c8>
   1652c:	ldrb	r7, [r4]
   16530:	cmp	r7, #0
   16534:	bne	16568 <close_stdout@@Base+0x4258>
   16538:	b	165a0 <close_stdout@@Base+0x4290>
   1653c:	mov	r0, r4
   16540:	bl	114d0 <strlen@plt>
   16544:	add	r0, r0, #1
   16548:	add	r7, r4, r0
   1654c:	mov	r0, r7
   16550:	bl	114d0 <strlen@plt>
   16554:	add	r0, r0, #1
   16558:	add	r4, r7, r0
   1655c:	ldrb	r7, [r7, r0]
   16560:	cmp	r7, #0
   16564:	beq	165a0 <close_stdout@@Base+0x4290>
   16568:	mov	r0, r5
   1656c:	mov	r1, r4
   16570:	bl	11308 <strcmp@plt>
   16574:	cmp	r0, #0
   16578:	beq	16590 <close_stdout@@Base+0x4280>
   1657c:	cmp	r7, #42	; 0x2a
   16580:	bne	1653c <close_stdout@@Base+0x422c>
   16584:	ldrb	r3, [r4, #1]
   16588:	cmp	r3, #0
   1658c:	bne	1653c <close_stdout@@Base+0x422c>
   16590:	mov	r0, r4
   16594:	bl	114d0 <strlen@plt>
   16598:	add	r0, r0, #1
   1659c:	add	r5, r4, r0
   165a0:	ldrb	r3, [r5]
   165a4:	cmp	r3, #0
   165a8:	ldreq	r5, [pc, #808]	; 168d8 <close_stdout@@Base+0x45c8>
   165ac:	addeq	r5, pc, r5
   165b0:	ldr	r2, [sp, #124]	; 0x7c
   165b4:	mov	r0, r5
   165b8:	ldr	r3, [r6]
   165bc:	cmp	r2, r3
   165c0:	bne	168a0 <close_stdout@@Base+0x4590>
   165c4:	add	sp, sp, #132	; 0x84
   165c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165cc:	ldr	r5, [pc, #776]	; 168dc <close_stdout@@Base+0x45cc>
   165d0:	add	r5, pc, r5
   165d4:	b	1651c <close_stdout@@Base+0x420c>
   165d8:	ldr	r0, [pc, #768]	; 168e0 <close_stdout@@Base+0x45d0>
   165dc:	add	r0, pc, r0
   165e0:	bl	11440 <getenv@plt>
   165e4:	subs	r8, r0, #0
   165e8:	beq	16878 <close_stdout@@Base+0x4568>
   165ec:	ldrb	r3, [r8]
   165f0:	cmp	r3, #0
   165f4:	beq	1680c <close_stdout@@Base+0x44fc>
   165f8:	bl	114d0 <strlen@plt>
   165fc:	subs	sl, r0, #0
   16600:	subne	r3, sl, #1
   16604:	bne	1681c <close_stdout@@Base+0x450c>
   16608:	mov	r9, #0
   1660c:	mov	fp, r9
   16610:	add	r9, sl, r9
   16614:	add	r0, r9, #14
   16618:	bl	1144c <malloc@plt>
   1661c:	subs	r7, r0, #0
   16620:	beq	1686c <close_stdout@@Base+0x455c>
   16624:	mov	r1, r8
   16628:	mov	r2, sl
   1662c:	bl	11350 <memcpy@plt>
   16630:	cmp	fp, #0
   16634:	add	ip, r7, r9
   16638:	movne	r3, #47	; 0x2f
   1663c:	strbne	r3, [r7, sl]
   16640:	ldr	r3, [pc, #668]	; 168e4 <close_stdout@@Base+0x45d4>
   16644:	add	r3, pc, r3
   16648:	ldm	r3!, {r0, r1, r2}
   1664c:	ldrh	r3, [r3]
   16650:	str	r0, [r7, r9]
   16654:	mov	r0, r7
   16658:	str	r1, [ip, #4]
   1665c:	mov	r1, #32768	; 0x8000
   16660:	strh	r3, [ip, #12]
   16664:	str	r2, [ip, #8]
   16668:	bl	11434 <open64@plt>
   1666c:	subs	r8, r0, #0
   16670:	blt	16834 <close_stdout@@Base+0x4524>
   16674:	ldr	r1, [pc, #620]	; 168e8 <close_stdout@@Base+0x45d8>
   16678:	add	r1, pc, r1
   1667c:	bl	112c0 <fdopen@plt>
   16680:	subs	fp, r0, #0
   16684:	beq	1688c <close_stdout@@Base+0x457c>
   16688:	ldr	r0, [pc, #604]	; 168ec <close_stdout@@Base+0x45dc>
   1668c:	add	sl, sp, #20
   16690:	add	r9, sp, #72	; 0x48
   16694:	mov	r8, #0
   16698:	add	r0, pc, r0
   1669c:	str	r0, [sp, #12]
   166a0:	ldr	r3, [fp, #4]
   166a4:	ldr	r2, [fp, #8]
   166a8:	cmp	r3, r2
   166ac:	bcs	16798 <close_stdout@@Base+0x4488>
   166b0:	add	r2, r3, #1
   166b4:	str	r2, [fp, #4]
   166b8:	ldrb	r0, [r3]
   166bc:	cmp	r0, #32
   166c0:	beq	166a0 <close_stdout@@Base+0x4390>
   166c4:	sub	r3, r0, #9
   166c8:	cmp	r3, #1
   166cc:	bls	166a0 <close_stdout@@Base+0x4390>
   166d0:	cmp	r0, #35	; 0x23
   166d4:	beq	167ac <close_stdout@@Base+0x449c>
   166d8:	mov	r1, fp
   166dc:	bl	114e8 <ungetc@plt>
   166e0:	mov	r0, fp
   166e4:	ldr	r1, [sp, #12]
   166e8:	mov	r2, sl
   166ec:	mov	r3, r9
   166f0:	bl	1153c <fscanf@plt>
   166f4:	cmp	r0, #1
   166f8:	ble	167dc <close_stdout@@Base+0x44cc>
   166fc:	mov	r0, sl
   16700:	bl	114d0 <strlen@plt>
   16704:	str	r0, [sp, #8]
   16708:	mov	r0, r9
   1670c:	bl	114d0 <strlen@plt>
   16710:	cmp	r8, #0
   16714:	mov	r2, r0
   16718:	bne	16840 <close_stdout@@Base+0x4530>
   1671c:	ldr	r3, [sp, #8]
   16720:	str	r2, [sp]
   16724:	add	r8, r0, r3
   16728:	add	r0, r8, #3
   1672c:	add	r8, r8, #2
   16730:	bl	1144c <malloc@plt>
   16734:	ldr	r2, [sp]
   16738:	mov	r3, r0
   1673c:	cmp	r3, #0
   16740:	beq	168a4 <close_stdout@@Base+0x4594>
   16744:	ldr	r0, [sp, #8]
   16748:	movw	r1, #65534	; 0xfffe
   1674c:	movt	r1, #65535	; 0xffff
   16750:	rsb	r2, r2, r8
   16754:	rsb	r1, r0, r1
   16758:	stm	sp, {r2, r3}
   1675c:	add	r0, r1, r2
   16760:	mov	r1, sl
   16764:	add	r0, r3, r0
   16768:	mov	r4, r3
   1676c:	bl	11404 <strcpy@plt>
   16770:	ldr	r2, [sp]
   16774:	ldr	r3, [sp, #4]
   16778:	mov	r1, r9
   1677c:	sub	r0, r2, #1
   16780:	add	r0, r3, r0
   16784:	bl	11404 <strcpy@plt>
   16788:	ldr	r3, [fp, #4]
   1678c:	ldr	r2, [fp, #8]
   16790:	cmp	r3, r2
   16794:	bcc	166b0 <close_stdout@@Base+0x43a0>
   16798:	mov	r0, fp
   1679c:	bl	115b4 <__uflow@plt>
   167a0:	cmn	r0, #1
   167a4:	beq	167dc <close_stdout@@Base+0x44cc>
   167a8:	b	166bc <close_stdout@@Base+0x43ac>
   167ac:	ldr	r3, [fp, #4]
   167b0:	ldr	r2, [fp, #8]
   167b4:	cmp	r3, r2
   167b8:	bcs	168c0 <close_stdout@@Base+0x45b0>
   167bc:	add	r2, r3, #1
   167c0:	str	r2, [fp, #4]
   167c4:	ldrb	r0, [r3]
   167c8:	cmp	r0, #10
   167cc:	cmnne	r0, #1
   167d0:	bne	167ac <close_stdout@@Base+0x449c>
   167d4:	cmn	r0, #1
   167d8:	bne	166a0 <close_stdout@@Base+0x4390>
   167dc:	mov	r0, fp
   167e0:	bl	18780 <close_stdout@@Base+0x6470>
   167e4:	cmp	r8, #0
   167e8:	beq	16834 <close_stdout@@Base+0x4524>
   167ec:	mov	r3, #0
   167f0:	strb	r3, [r4, r8]
   167f4:	mov	r0, r7
   167f8:	bl	11338 <free@plt>
   167fc:	ldr	r3, [pc, #236]	; 168f0 <close_stdout@@Base+0x45e0>
   16800:	add	r3, pc, r3
   16804:	str	r4, [r3]
   16808:	b	1652c <close_stdout@@Base+0x421c>
   1680c:	ldr	r8, [pc, #224]	; 168f4 <close_stdout@@Base+0x45e4>
   16810:	mov	r3, #7
   16814:	mov	sl, #8
   16818:	add	r8, pc, r8
   1681c:	ldrb	r3, [r8, r3]
   16820:	cmp	r3, #47	; 0x2f
   16824:	movne	r9, #1
   16828:	movne	fp, r9
   1682c:	bne	16610 <close_stdout@@Base+0x4300>
   16830:	b	16608 <close_stdout@@Base+0x42f8>
   16834:	ldr	r4, [pc, #188]	; 168f8 <close_stdout@@Base+0x45e8>
   16838:	add	r4, pc, r4
   1683c:	b	167f4 <close_stdout@@Base+0x44e4>
   16840:	ldr	r0, [sp, #8]
   16844:	str	r2, [sp]
   16848:	add	r3, r0, r2
   1684c:	mov	r0, r4
   16850:	add	r8, r3, r8
   16854:	add	r1, r8, #3
   16858:	add	r8, r8, #2
   1685c:	bl	113a4 <realloc@plt>
   16860:	ldr	r2, [sp]
   16864:	mov	r3, r0
   16868:	b	1673c <close_stdout@@Base+0x442c>
   1686c:	ldr	r4, [pc, #136]	; 168fc <close_stdout@@Base+0x45ec>
   16870:	add	r4, pc, r4
   16874:	b	167fc <close_stdout@@Base+0x44ec>
   16878:	ldr	r8, [pc, #128]	; 16900 <close_stdout@@Base+0x45f0>
   1687c:	mov	r3, #7
   16880:	mov	sl, #8
   16884:	add	r8, pc, r8
   16888:	b	1681c <close_stdout@@Base+0x450c>
   1688c:	ldr	r4, [pc, #112]	; 16904 <close_stdout@@Base+0x45f4>
   16890:	mov	r0, r8
   16894:	add	r4, pc, r4
   16898:	bl	11620 <close@plt>
   1689c:	b	167f4 <close_stdout@@Base+0x44e4>
   168a0:	bl	11398 <__stack_chk_fail@plt>
   168a4:	mov	r0, r4
   168a8:	ldr	r4, [pc, #88]	; 16908 <close_stdout@@Base+0x45f8>
   168ac:	bl	11338 <free@plt>
   168b0:	mov	r0, fp
   168b4:	add	r4, pc, r4
   168b8:	bl	18780 <close_stdout@@Base+0x6470>
   168bc:	b	167f4 <close_stdout@@Base+0x44e4>
   168c0:	mov	r0, fp
   168c4:	bl	115b4 <__uflow@plt>
   168c8:	b	167c8 <close_stdout@@Base+0x44b8>
   168cc:	andeq	r6, r1, r0, lsl #22
   168d0:	andeq	r0, r0, r0, asr #2
   168d4:	andeq	r6, r1, r8, lsl #28
   168d8:	andeq	r5, r0, r8, ror #23
   168dc:	andeq	r5, r0, r8, ror r4
   168e0:	andeq	r5, r0, r0, asr #23
   168e4:	andeq	r5, r0, r8, ror #22
   168e8:	andeq	r5, r0, ip, lsl #12
   168ec:	andeq	r5, r0, r4, lsr #22
   168f0:	andeq	r6, r1, r8, lsr #22
   168f4:	andeq	r5, r0, r0, ror r9
   168f8:	andeq	r5, r0, r0, lsl r2
   168fc:	ldrdeq	r5, [r0], -r8
   16900:	andeq	r5, r0, r4, lsl #18
   16904:			; <UNDEFINED> instruction: 0x000051b4
   16908:	muleq	r0, r4, r1
   1690c:	push	{r4, lr}
   16910:	mov	r4, r0
   16914:	bl	11320 <wcwidth@plt>
   16918:	cmp	r0, #0
   1691c:	popge	{r4, pc}
   16920:	mov	r0, r4
   16924:	bl	113bc <iswcntrl@plt>
   16928:	rsbs	r0, r0, #1
   1692c:	movcc	r0, #0
   16930:	pop	{r4, pc}
   16934:	push	{r3, r4, r5, lr}
   16938:	mov	r3, r1
   1693c:	mov	r4, r1
   16940:	ldr	r1, [r3], #16
   16944:	mov	r5, r0
   16948:	cmp	r1, r3
   1694c:	strne	r1, [r0]
   16950:	beq	16974 <close_stdout@@Base+0x4664>
   16954:	ldr	r3, [r4, #4]
   16958:	str	r3, [r5, #4]
   1695c:	ldrb	r3, [r4, #8]
   16960:	cmp	r3, #0
   16964:	strb	r3, [r5, #8]
   16968:	ldrne	r3, [r4, #12]
   1696c:	strne	r3, [r5, #12]
   16970:	pop	{r3, r4, r5, pc}
   16974:	add	r3, r0, #16
   16978:	ldr	r2, [r4, #4]
   1697c:	mov	r0, r3
   16980:	bl	11350 <memcpy@plt>
   16984:	str	r0, [r5]
   16988:	b	16954 <close_stdout@@Base+0x4644>
   1698c:	ldr	r3, [pc, #32]	; 169b4 <close_stdout@@Base+0x46a4>
   16990:	lsr	r2, r0, #5
   16994:	ldr	r1, [pc, #28]	; 169b8 <close_stdout@@Base+0x46a8>
   16998:	and	r0, r0, #31
   1699c:	add	r3, pc, r3
   169a0:	ldr	r3, [r3, r1]
   169a4:	ldr	r3, [r3, r2, lsl #2]
   169a8:	lsr	r0, r3, r0
   169ac:	and	r0, r0, #1
   169b0:	bx	lr
   169b4:	andeq	r6, r1, ip, asr r6
   169b8:	andeq	r0, r0, ip, lsr r1
   169bc:	ldr	ip, [pc, #380]	; 16b40 <close_stdout@@Base+0x4830>
   169c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   169c4:	mov	r7, r2
   169c8:	add	fp, sp, #28
   169cc:	ldr	r2, [pc, #368]	; 16b44 <close_stdout@@Base+0x4834>
   169d0:	sub	sp, sp, #8
   169d4:	add	ip, pc, ip
   169d8:	mov	r8, r3
   169dc:	mov	r3, ip
   169e0:	cmn	r7, #-1073741823	; 0xc0000001
   169e4:	ldr	r5, [ip, r2]
   169e8:	mov	r6, r0
   169ec:	mov	r4, r1
   169f0:	ldr	r3, [r5]
   169f4:	str	r3, [fp, #-32]	; 0xffffffe0
   169f8:	bls	16a18 <close_stdout@@Base+0x4708>
   169fc:	mov	r0, #0
   16a00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a04:	ldr	r3, [r5]
   16a08:	cmp	r2, r3
   16a0c:	bne	16b3c <close_stdout@@Base+0x482c>
   16a10:	sub	sp, fp, #28
   16a14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16a18:	lsl	r0, r7, #2
   16a1c:	movw	r3, #4023	; 0xfb7
   16a20:	cmp	r0, r3
   16a24:	bls	16af0 <close_stdout@@Base+0x47e0>
   16a28:	bl	1976c <close_stdout@@Base+0x745c>
   16a2c:	cmp	r0, #0
   16a30:	beq	169fc <close_stdout@@Base+0x46ec>
   16a34:	cmp	r7, #2
   16a38:	mov	r3, #1
   16a3c:	str	r3, [r0, #4]
   16a40:	movhi	r9, r4
   16a44:	movhi	r2, r0
   16a48:	movhi	ip, #0
   16a4c:	movhi	r3, #2
   16a50:	bls	16a9c <close_stdout@@Base+0x478c>
   16a54:	ldrb	r1, [r9, #1]!
   16a58:	ldrb	lr, [r4, ip]
   16a5c:	cmp	lr, r1
   16a60:	bne	16a7c <close_stdout@@Base+0x476c>
   16a64:	b	16b04 <close_stdout@@Base+0x47f4>
   16a68:	ldr	lr, [r0, ip, lsl #2]
   16a6c:	rsb	ip, lr, ip
   16a70:	ldrb	lr, [r4, ip]
   16a74:	cmp	lr, r1
   16a78:	beq	16b04 <close_stdout@@Base+0x47f4>
   16a7c:	cmp	ip, #0
   16a80:	bne	16a68 <close_stdout@@Base+0x4758>
   16a84:	mov	ip, #0
   16a88:	str	r3, [r2, #8]
   16a8c:	add	r3, r3, #1
   16a90:	add	r2, r2, #4
   16a94:	cmp	r3, r7
   16a98:	bne	16a54 <close_stdout@@Base+0x4744>
   16a9c:	mov	r2, #0
   16aa0:	str	r2, [r8]
   16aa4:	ldrb	r3, [r6]
   16aa8:	mov	ip, r6
   16aac:	cmp	r3, #0
   16ab0:	beq	16ae4 <close_stdout@@Base+0x47d4>
   16ab4:	ldrb	r1, [r4, r2]
   16ab8:	cmp	r1, r3
   16abc:	beq	16b14 <close_stdout@@Base+0x4804>
   16ac0:	cmp	r2, #0
   16ac4:	addeq	r6, r6, #1
   16ac8:	ldrne	r1, [r0, r2, lsl #2]
   16acc:	ldrbeq	r3, [ip, #1]
   16ad0:	addeq	ip, ip, #1
   16ad4:	addne	r6, r6, r1
   16ad8:	rsbne	r2, r1, r2
   16adc:	cmp	r3, #0
   16ae0:	bne	16ab4 <close_stdout@@Base+0x47a4>
   16ae4:	bl	197d4 <close_stdout@@Base+0x74c4>
   16ae8:	mov	r0, #1
   16aec:	b	16a00 <close_stdout@@Base+0x46f0>
   16af0:	add	r3, r0, #22
   16af4:	bic	r3, r3, #7
   16af8:	sub	sp, sp, r3
   16afc:	add	r0, sp, #8
   16b00:	b	16a2c <close_stdout@@Base+0x471c>
   16b04:	add	ip, ip, #1
   16b08:	rsb	r1, ip, r3
   16b0c:	str	r1, [r2, #8]
   16b10:	b	16a8c <close_stdout@@Base+0x477c>
   16b14:	add	r2, r2, #1
   16b18:	add	r1, ip, #1
   16b1c:	cmp	r7, r2
   16b20:	ldrbne	r3, [ip, #1]
   16b24:	movne	ip, r1
   16b28:	bne	16aac <close_stdout@@Base+0x479c>
   16b2c:	str	r6, [r8]
   16b30:	bl	197d4 <close_stdout@@Base+0x74c4>
   16b34:	mov	r0, #1
   16b38:	b	16a00 <close_stdout@@Base+0x46f0>
   16b3c:	bl	11398 <__stack_chk_fail@plt>
   16b40:	andeq	r6, r1, r4, lsr #12
   16b44:	andeq	r0, r0, r0, asr #2
   16b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b4c:	add	fp, sp, #32
   16b50:	ldr	r8, [pc, #2268]	; 17434 <close_stdout@@Base+0x5124>
   16b54:	sub	sp, sp, #220	; 0xdc
   16b58:	ldr	r3, [pc, #2264]	; 17438 <close_stdout@@Base+0x5128>
   16b5c:	add	r8, pc, r8
   16b60:	str	r0, [fp, #-232]	; 0xffffff18
   16b64:	str	r2, [fp, #-248]	; 0xffffff08
   16b68:	mov	r0, r1
   16b6c:	ldr	r3, [r8, r3]
   16b70:	mov	r4, r1
   16b74:	str	r3, [fp, #-244]	; 0xffffff0c
   16b78:	ldr	r3, [r3]
   16b7c:	str	r3, [fp, #-40]	; 0xffffffd8
   16b80:	bl	1985c <close_stdout@@Base+0x754c>
   16b84:	movw	r3, #29789	; 0x745d
   16b88:	movt	r3, #1489	; 0x5d1
   16b8c:	cmp	r0, r3
   16b90:	str	r0, [fp, #-224]	; 0xffffff20
   16b94:	bls	16bb8 <close_stdout@@Base+0x48a8>
   16b98:	mov	r0, #0
   16b9c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16ba0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ba4:	ldr	r3, [r1]
   16ba8:	cmp	r2, r3
   16bac:	bne	17410 <close_stdout@@Base+0x5100>
   16bb0:	sub	sp, fp, #32
   16bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bb8:	ldr	r1, [fp, #-224]	; 0xffffff20
   16bbc:	mov	r0, #44	; 0x2c
   16bc0:	movw	r3, #4023	; 0xfb7
   16bc4:	mul	r0, r0, r1
   16bc8:	cmp	r0, r3
   16bcc:	bls	16f98 <close_stdout@@Base+0x4c88>
   16bd0:	bl	1976c <close_stdout@@Base+0x745c>
   16bd4:	str	r0, [fp, #-236]	; 0xffffff14
   16bd8:	ldr	r3, [fp, #-236]	; 0xffffff14
   16bdc:	cmp	r3, #0
   16be0:	beq	16b98 <close_stdout@@Base+0x4888>
   16be4:	mov	r2, #0
   16be8:	ldr	r0, [fp, #-224]	; 0xffffff20
   16bec:	str	r2, [fp, #-200]	; 0xffffff38
   16bf0:	mov	r5, r2
   16bf4:	strb	r2, [fp, #-208]	; 0xffffff30
   16bf8:	add	sl, r3, #16
   16bfc:	str	r2, [fp, #-204]	; 0xffffff34
   16c00:	add	r9, r0, r0, lsl #2
   16c04:	strb	r2, [fp, #-196]	; 0xffffff3c
   16c08:	sub	ip, fp, #204	; 0xcc
   16c0c:	ldrb	r2, [fp, #-208]	; 0xffffff30
   16c10:	mov	r7, r4
   16c14:	add	r9, r3, r9, lsl #3
   16c18:	str	r4, [fp, #-192]	; 0xffffff40
   16c1c:	cmp	r2, #0
   16c20:	sub	r1, fp, #180	; 0xb4
   16c24:	str	r9, [fp, #-220]	; 0xffffff24
   16c28:	mov	r4, #1
   16c2c:	mov	r9, sl
   16c30:	str	r1, [fp, #-216]	; 0xffffff28
   16c34:	mov	sl, r7
   16c38:	sub	r6, fp, #176	; 0xb0
   16c3c:	mov	r7, ip
   16c40:	bne	17014 <close_stdout@@Base+0x4d04>
   16c44:	ldr	r1, [pc, #2032]	; 1743c <close_stdout@@Base+0x512c>
   16c48:	ldrb	r2, [sl]
   16c4c:	ldr	r0, [r8, r1]
   16c50:	and	r1, r2, #31
   16c54:	lsr	r2, r2, #5
   16c58:	ldr	r2, [r0, r2, lsl #2]
   16c5c:	lsr	r2, r2, r1
   16c60:	tst	r2, #1
   16c64:	beq	17078 <close_stdout@@Base+0x4d68>
   16c68:	str	r4, [fp, #-188]	; 0xffffff44
   16c6c:	ldrb	r3, [sl]
   16c70:	strb	r4, [fp, #-184]	; 0xffffff48
   16c74:	mov	sl, r3
   16c78:	str	r3, [fp, #-180]	; 0xffffff4c
   16c7c:	cmp	sl, #0
   16c80:	strb	r4, [fp, #-196]	; 0xffffff3c
   16c84:	mov	r2, #1
   16c88:	bne	16fc4 <close_stdout@@Base+0x4cb4>
   16c8c:	ldr	r0, [fp, #-224]	; 0xffffff20
   16c90:	ldr	r9, [fp, #-220]	; 0xffffff24
   16c94:	cmp	r0, #2
   16c98:	str	r2, [r9, #4]
   16c9c:	bls	16d68 <close_stdout@@Base+0x4a58>
   16ca0:	ldr	r7, [fp, #-236]	; 0xffffff14
   16ca4:	mov	r6, r9
   16ca8:	str	r8, [fp, #-216]	; 0xffffff28
   16cac:	mov	r4, sl
   16cb0:	mov	r8, r9
   16cb4:	mov	r5, #2
   16cb8:	mov	r9, r7
   16cbc:	ldrb	sl, [r7, #48]	; 0x30
   16cc0:	b	16cfc <close_stdout@@Base+0x49ec>
   16cc4:	ldrb	r2, [r3, #8]
   16cc8:	cmp	r2, #0
   16ccc:	beq	16d0c <close_stdout@@Base+0x49fc>
   16cd0:	ldr	r0, [r7, #52]	; 0x34
   16cd4:	ldr	r3, [r3, #12]
   16cd8:	subs	r1, r0, r3
   16cdc:	rsbs	r0, r1, #0
   16ce0:	adcs	r0, r0, r1
   16ce4:	cmp	r0, #0
   16ce8:	bne	16d3c <close_stdout@@Base+0x4a2c>
   16cec:	cmp	r4, #0
   16cf0:	beq	17250 <close_stdout@@Base+0x4f40>
   16cf4:	ldr	r3, [r8, r4, lsl #2]
   16cf8:	rsb	r4, r3, r4
   16cfc:	add	r3, r4, r4, lsl #2
   16d00:	cmp	sl, #0
   16d04:	add	r3, r9, r3, lsl #3
   16d08:	bne	16cc4 <close_stdout@@Base+0x49b4>
   16d0c:	ldr	r2, [r7, #44]	; 0x2c
   16d10:	ldr	r1, [r3, #4]
   16d14:	cmp	r2, r1
   16d18:	movne	r0, #0
   16d1c:	bne	16ce4 <close_stdout@@Base+0x49d4>
   16d20:	ldr	r1, [r3]
   16d24:	ldr	r0, [r7, #40]	; 0x28
   16d28:	bl	11380 <memcmp@plt>
   16d2c:	rsbs	r0, r0, #1
   16d30:	movcc	r0, #0
   16d34:	cmp	r0, #0
   16d38:	beq	16cec <close_stdout@@Base+0x49dc>
   16d3c:	add	r4, r4, #1
   16d40:	rsb	r2, r4, r5
   16d44:	str	r2, [r6, #8]
   16d48:	ldr	r2, [fp, #-224]	; 0xffffff20
   16d4c:	add	r5, r5, #1
   16d50:	add	r7, r7, #40	; 0x28
   16d54:	add	r6, r6, #4
   16d58:	cmp	r5, r2
   16d5c:	bne	16cbc <close_stdout@@Base+0x49ac>
   16d60:	mov	r9, r8
   16d64:	ldr	r8, [fp, #-216]	; 0xffffff28
   16d68:	ldr	r1, [fp, #-232]	; 0xffffff18
   16d6c:	mov	r3, #0
   16d70:	ldr	r2, [fp, #-248]	; 0xffffff08
   16d74:	sub	r7, fp, #148	; 0x94
   16d78:	mov	r4, r3
   16d7c:	mov	r6, r3
   16d80:	mov	r5, #1
   16d84:	sub	r0, fp, #92	; 0x5c
   16d88:	str	r1, [fp, #-136]	; 0xffffff78
   16d8c:	str	r0, [fp, #-228]	; 0xffffff1c
   16d90:	sub	r0, fp, #68	; 0x44
   16d94:	str	r1, [fp, #-80]	; 0xffffffb0
   16d98:	sub	r1, fp, #124	; 0x7c
   16d9c:	str	r3, [fp, #-148]	; 0xffffff6c
   16da0:	strb	r3, [fp, #-140]	; 0xffffff74
   16da4:	str	r3, [fp, #-220]	; 0xffffff24
   16da8:	str	r3, [r2]
   16dac:	strb	r3, [fp, #-152]	; 0xffffff68
   16db0:	str	r0, [fp, #-232]	; 0xffffff18
   16db4:	str	r1, [fp, #-216]	; 0xffffff28
   16db8:	strb	r3, [fp, #-96]	; 0xffffffa0
   16dbc:	str	r3, [fp, #-92]	; 0xffffffa4
   16dc0:	strb	r3, [fp, #-84]	; 0xffffffac
   16dc4:	str	r3, [r7, #4]
   16dc8:	str	r3, [fp, #-88]	; 0xffffffa8
   16dcc:	str	r9, [fp, #-240]	; 0xffffff10
   16dd0:	cmp	r4, #0
   16dd4:	beq	16e44 <close_stdout@@Base+0x4b34>
   16dd8:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   16ddc:	cmp	r4, #0
   16de0:	bne	16e98 <close_stdout@@Base+0x4b88>
   16de4:	ldr	r2, [fp, #-220]	; 0xffffff24
   16de8:	ldr	r3, [fp, #-236]	; 0xffffff14
   16dec:	add	r1, r2, r2, lsl #2
   16df0:	add	r1, r3, r1, lsl #3
   16df4:	ldr	r2, [r1, #4]
   16df8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16dfc:	cmp	r2, r3
   16e00:	movne	r0, #0
   16e04:	beq	17238 <close_stdout@@Base+0x4f28>
   16e08:	mov	r3, r0
   16e0c:	cmp	r3, #0
   16e10:	ldr	r2, [fp, #-220]	; 0xffffff24
   16e14:	beq	16edc <close_stdout@@Base+0x4bcc>
   16e18:	ldr	r0, [fp, #-224]	; 0xffffff20
   16e1c:	add	r2, r2, #1
   16e20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16e24:	str	r2, [fp, #-220]	; 0xffffff24
   16e28:	cmp	r0, r2
   16e2c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16e30:	strb	r6, [fp, #-84]	; 0xffffffac
   16e34:	add	r3, r3, r2
   16e38:	str	r3, [fp, #-80]	; 0xffffffb0
   16e3c:	beq	173c0 <close_stdout@@Base+0x50b0>
   16e40:	mov	r4, #0
   16e44:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   16e48:	cmp	r3, #0
   16e4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16e50:	bne	17158 <close_stdout@@Base+0x4e48>
   16e54:	ldr	r1, [pc, #1504]	; 1743c <close_stdout@@Base+0x512c>
   16e58:	ldrb	r2, [r3]
   16e5c:	ldr	r0, [r8, r1]
   16e60:	and	r1, r2, #31
   16e64:	lsr	r2, r2, #5
   16e68:	ldr	r2, [r0, r2, lsl #2]
   16e6c:	lsr	r2, r2, r1
   16e70:	tst	r2, #1
   16e74:	beq	1713c <close_stdout@@Base+0x4e2c>
   16e78:	str	r5, [fp, #-76]	; 0xffffffb4
   16e7c:	mov	r4, #1
   16e80:	ldrb	r3, [r3]
   16e84:	strb	r5, [fp, #-72]	; 0xffffffb8
   16e88:	str	r3, [fp, #-68]	; 0xffffffbc
   16e8c:	cmp	r4, #0
   16e90:	strb	r5, [fp, #-84]	; 0xffffffac
   16e94:	beq	16de4 <close_stdout@@Base+0x4ad4>
   16e98:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16e9c:	cmp	r2, #0
   16ea0:	beq	173cc <close_stdout@@Base+0x50bc>
   16ea4:	ldr	r3, [fp, #-220]	; 0xffffff24
   16ea8:	ldr	r0, [fp, #-236]	; 0xffffff14
   16eac:	add	r1, r3, r3, lsl #2
   16eb0:	add	r1, r0, r1, lsl #3
   16eb4:	ldrb	r3, [r1, #8]
   16eb8:	cmp	r3, #0
   16ebc:	beq	16df4 <close_stdout@@Base+0x4ae4>
   16ec0:	ldr	r3, [r1, #12]
   16ec4:	subs	r2, r2, r3
   16ec8:	rsbs	r3, r2, #0
   16ecc:	adcs	r3, r3, r2
   16ed0:	ldr	r2, [fp, #-220]	; 0xffffff24
   16ed4:	cmp	r3, #0
   16ed8:	bne	16e18 <close_stdout@@Base+0x4b08>
   16edc:	cmp	r2, #0
   16ee0:	beq	171e8 <close_stdout@@Base+0x4ed8>
   16ee4:	ldr	r3, [fp, #-240]	; 0xffffff10
   16ee8:	ldr	r4, [r3, r2, lsl #2]
   16eec:	cmp	r4, #0
   16ef0:	rsb	r2, r4, r2
   16ef4:	str	r2, [fp, #-220]	; 0xffffff24
   16ef8:	beq	17230 <close_stdout@@Base+0x4f20>
   16efc:	ldrb	sl, [fp, #-140]	; 0xffffff74
   16f00:	cmp	sl, #0
   16f04:	beq	16f34 <close_stdout@@Base+0x4c24>
   16f08:	ldrb	sl, [fp, #-128]	; 0xffffff80
   16f0c:	cmp	sl, #0
   16f10:	bne	16f88 <close_stdout@@Base+0x4c78>
   16f14:	ldr	r2, [fp, #-136]	; 0xffffff78
   16f18:	subs	r4, r4, #1
   16f1c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16f20:	strb	r6, [fp, #-140]	; 0xffffff74
   16f24:	movne	sl, #0
   16f28:	add	r3, r2, r3
   16f2c:	str	r3, [fp, #-136]	; 0xffffff78
   16f30:	beq	17230 <close_stdout@@Base+0x4f20>
   16f34:	ldrb	r3, [fp, #-152]	; 0xffffff68
   16f38:	ldr	r9, [fp, #-136]	; 0xffffff78
   16f3c:	cmp	r3, #0
   16f40:	bne	170a4 <close_stdout@@Base+0x4d94>
   16f44:	ldr	r1, [pc, #1264]	; 1743c <close_stdout@@Base+0x512c>
   16f48:	ldrb	r2, [r9]
   16f4c:	ldr	r0, [r8, r1]
   16f50:	and	r1, r2, #31
   16f54:	lsr	r2, r2, #5
   16f58:	ldr	r2, [r0, r2, lsl #2]
   16f5c:	lsr	r2, r2, r1
   16f60:	tst	r2, #1
   16f64:	beq	17090 <close_stdout@@Base+0x4d80>
   16f68:	str	r5, [fp, #-132]	; 0xffffff7c
   16f6c:	mov	sl, #1
   16f70:	ldrb	r3, [r9]
   16f74:	strb	r5, [fp, #-128]	; 0xffffff80
   16f78:	str	r3, [fp, #-124]	; 0xffffff84
   16f7c:	cmp	sl, #0
   16f80:	strb	r5, [fp, #-140]	; 0xffffff74
   16f84:	beq	16f14 <close_stdout@@Base+0x4c04>
   16f88:	ldr	r3, [fp, #-124]	; 0xffffff84
   16f8c:	cmp	r3, #0
   16f90:	bne	16f14 <close_stdout@@Base+0x4c04>
   16f94:	bl	11614 <abort@plt>
   16f98:	add	r3, r0, #22
   16f9c:	bic	r3, r3, #7
   16fa0:	sub	sp, sp, r3
   16fa4:	add	r2, sp, #8
   16fa8:	str	r2, [fp, #-236]	; 0xffffff14
   16fac:	b	16bd8 <close_stdout@@Base+0x48c8>
   16fb0:	ldr	r0, [fp, #-192]	; 0xffffff40
   16fb4:	bl	114d0 <strlen@plt>
   16fb8:	strb	r5, [fp, #-184]	; 0xffffff48
   16fbc:	str	r0, [fp, #-188]	; 0xffffff44
   16fc0:	strb	r4, [fp, #-196]	; 0xffffff3c
   16fc4:	ldr	r3, [fp, #-192]	; 0xffffff40
   16fc8:	cmp	r3, r6
   16fcc:	strne	r3, [r9, #-16]
   16fd0:	beq	172fc <close_stdout@@Base+0x4fec>
   16fd4:	ldr	r3, [fp, #-188]	; 0xffffff44
   16fd8:	add	r9, r9, #40	; 0x28
   16fdc:	str	r3, [r9, #-52]	; 0xffffffcc
   16fe0:	ldrb	r3, [fp, #-184]	; 0xffffff48
   16fe4:	cmp	r3, #0
   16fe8:	strb	r3, [r9, #-48]	; 0xffffffd0
   16fec:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   16ff0:	strne	r3, [r9, #-44]	; 0xffffffd4
   16ff4:	ldr	sl, [fp, #-192]	; 0xffffff40
   16ff8:	ldr	r2, [fp, #-188]	; 0xffffff44
   16ffc:	strb	r5, [fp, #-196]	; 0xffffff3c
   17000:	add	sl, sl, r2
   17004:	ldrb	r2, [fp, #-208]	; 0xffffff30
   17008:	str	sl, [fp, #-192]	; 0xffffff40
   1700c:	cmp	r2, #0
   17010:	beq	16c44 <close_stdout@@Base+0x4934>
   17014:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17018:	mov	r1, r0
   1701c:	mov	r0, sl
   17020:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17024:	mov	r1, sl
   17028:	mov	r3, r7
   1702c:	mov	r2, r0
   17030:	sub	r0, fp, #180	; 0xb4
   17034:	bl	1141c <mbrtowc@plt>
   17038:	cmn	r0, #1
   1703c:	str	r0, [fp, #-188]	; 0xffffff44
   17040:	strbeq	r5, [fp, #-184]	; 0xffffff48
   17044:	streq	r4, [fp, #-188]	; 0xffffff44
   17048:	beq	16fc0 <close_stdout@@Base+0x4cb0>
   1704c:	cmn	r0, #2
   17050:	beq	16fb0 <close_stdout@@Base+0x4ca0>
   17054:	cmp	r0, #0
   17058:	beq	17258 <close_stdout@@Base+0x4f48>
   1705c:	ldr	sl, [fp, #-180]	; 0xffffff4c
   17060:	mov	r0, r7
   17064:	strb	r4, [fp, #-184]	; 0xffffff48
   17068:	bl	11374 <mbsinit@plt>
   1706c:	cmp	r0, #0
   17070:	strbne	r5, [fp, #-208]	; 0xffffff30
   17074:	b	16c7c <close_stdout@@Base+0x496c>
   17078:	mov	r0, r7
   1707c:	bl	11374 <mbsinit@plt>
   17080:	cmp	r0, #0
   17084:	beq	173f0 <close_stdout@@Base+0x50e0>
   17088:	strb	r4, [fp, #-208]	; 0xffffff30
   1708c:	b	17014 <close_stdout@@Base+0x4d04>
   17090:	mov	r0, r7
   17094:	bl	11374 <mbsinit@plt>
   17098:	cmp	r0, #0
   1709c:	beq	173f0 <close_stdout@@Base+0x50e0>
   170a0:	strb	r5, [fp, #-152]	; 0xffffff68
   170a4:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   170a8:	mov	r1, r0
   170ac:	mov	r0, r9
   170b0:	bl	14ab0 <close_stdout@@Base+0x27a0>
   170b4:	mov	r1, r9
   170b8:	mov	r3, r7
   170bc:	mov	r2, r0
   170c0:	sub	r0, fp, #124	; 0x7c
   170c4:	bl	1141c <mbrtowc@plt>
   170c8:	cmn	r0, #1
   170cc:	str	r0, [fp, #-132]	; 0xffffff7c
   170d0:	strbeq	r6, [fp, #-128]	; 0xffffff80
   170d4:	streq	r5, [fp, #-132]	; 0xffffff7c
   170d8:	beq	16f7c <close_stdout@@Base+0x4c6c>
   170dc:	cmn	r0, #2
   170e0:	beq	17128 <close_stdout@@Base+0x4e18>
   170e4:	cmp	r0, #0
   170e8:	bne	1710c <close_stdout@@Base+0x4dfc>
   170ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   170f0:	str	r5, [fp, #-132]	; 0xffffff7c
   170f4:	ldrb	r3, [r3]
   170f8:	cmp	r3, #0
   170fc:	bne	17414 <close_stdout@@Base+0x5104>
   17100:	ldr	r3, [fp, #-124]	; 0xffffff84
   17104:	cmp	r3, #0
   17108:	bne	17278 <close_stdout@@Base+0x4f68>
   1710c:	mov	r0, r7
   17110:	strb	r5, [fp, #-128]	; 0xffffff80
   17114:	bl	11374 <mbsinit@plt>
   17118:	mov	sl, #1
   1711c:	cmp	r0, #0
   17120:	strbne	r6, [fp, #-152]	; 0xffffff68
   17124:	b	16f7c <close_stdout@@Base+0x4c6c>
   17128:	ldr	r0, [fp, #-136]	; 0xffffff78
   1712c:	bl	114d0 <strlen@plt>
   17130:	strb	r6, [fp, #-128]	; 0xffffff80
   17134:	str	r0, [fp, #-132]	; 0xffffff7c
   17138:	b	16f7c <close_stdout@@Base+0x4c6c>
   1713c:	sub	r0, fp, #92	; 0x5c
   17140:	str	r3, [fp, #-252]	; 0xffffff04
   17144:	bl	11374 <mbsinit@plt>
   17148:	ldr	r3, [fp, #-252]	; 0xffffff04
   1714c:	cmp	r0, #0
   17150:	beq	173f0 <close_stdout@@Base+0x50e0>
   17154:	strb	r5, [fp, #-96]	; 0xffffffa0
   17158:	str	r3, [fp, #-252]	; 0xffffff04
   1715c:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17160:	ldr	r3, [fp, #-252]	; 0xffffff04
   17164:	mov	r1, r0
   17168:	mov	r0, r3
   1716c:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17170:	ldr	r3, [fp, #-252]	; 0xffffff04
   17174:	mov	r1, r3
   17178:	sub	r3, fp, #92	; 0x5c
   1717c:	mov	r2, r0
   17180:	sub	r0, fp, #68	; 0x44
   17184:	bl	1141c <mbrtowc@plt>
   17188:	cmn	r0, #1
   1718c:	str	r0, [fp, #-76]	; 0xffffffb4
   17190:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   17194:	streq	r5, [fp, #-76]	; 0xffffffb4
   17198:	beq	16e8c <close_stdout@@Base+0x4b7c>
   1719c:	cmn	r0, #2
   171a0:	beq	173ac <close_stdout@@Base+0x509c>
   171a4:	cmp	r0, #0
   171a8:	bne	171cc <close_stdout@@Base+0x4ebc>
   171ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   171b0:	str	r5, [fp, #-76]	; 0xffffffb4
   171b4:	ldrb	r3, [r3]
   171b8:	cmp	r3, #0
   171bc:	bne	17414 <close_stdout@@Base+0x5104>
   171c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171c4:	cmp	r3, #0
   171c8:	bne	17278 <close_stdout@@Base+0x4f68>
   171cc:	sub	r0, fp, #92	; 0x5c
   171d0:	strb	r5, [fp, #-72]	; 0xffffffb8
   171d4:	bl	11374 <mbsinit@plt>
   171d8:	mov	r4, #1
   171dc:	cmp	r0, #0
   171e0:	strbne	r6, [fp, #-96]	; 0xffffffa0
   171e4:	b	16e8c <close_stdout@@Base+0x4b7c>
   171e8:	ldrb	r4, [fp, #-140]	; 0xffffff74
   171ec:	cmp	r4, #0
   171f0:	beq	17298 <close_stdout@@Base+0x4f88>
   171f4:	ldrb	r4, [fp, #-128]	; 0xffffff80
   171f8:	cmp	r4, #0
   171fc:	bne	172ec <close_stdout@@Base+0x4fdc>
   17200:	ldr	r1, [fp, #-136]	; 0xffffff78
   17204:	mov	r4, #0
   17208:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1720c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17210:	add	r2, r1, r2
   17214:	str	r2, [fp, #-136]	; 0xffffff78
   17218:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1721c:	strb	r6, [fp, #-140]	; 0xffffff74
   17220:	add	r3, r3, r2
   17224:	strb	r6, [fp, #-84]	; 0xffffffac
   17228:	str	r3, [fp, #-80]	; 0xffffffb0
   1722c:	b	16e44 <close_stdout@@Base+0x4b34>
   17230:	ldrb	r4, [fp, #-84]	; 0xffffffac
   17234:	b	16dd0 <close_stdout@@Base+0x4ac0>
   17238:	ldr	r0, [r1]
   1723c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17240:	bl	11380 <memcmp@plt>
   17244:	rsbs	r0, r0, #1
   17248:	movcc	r0, #0
   1724c:	b	16e08 <close_stdout@@Base+0x4af8>
   17250:	str	r5, [r6, #8]
   17254:	b	16d48 <close_stdout@@Base+0x4a38>
   17258:	ldr	r3, [fp, #-192]	; 0xffffff40
   1725c:	str	r4, [fp, #-188]	; 0xffffff44
   17260:	ldrb	r3, [r3]
   17264:	cmp	r3, #0
   17268:	bne	17414 <close_stdout@@Base+0x5104>
   1726c:	ldr	sl, [fp, #-180]	; 0xffffff4c
   17270:	cmp	sl, #0
   17274:	beq	17060 <close_stdout@@Base+0x4d50>
   17278:	ldr	r0, [pc, #448]	; 17440 <close_stdout@@Base+0x5130>
   1727c:	mov	r2, #179	; 0xb3
   17280:	ldr	r1, [pc, #444]	; 17444 <close_stdout@@Base+0x5134>
   17284:	ldr	r3, [pc, #444]	; 17448 <close_stdout@@Base+0x5138>
   17288:	add	r0, pc, r0
   1728c:	add	r1, pc, r1
   17290:	add	r3, pc, r3
   17294:	bl	11638 <__assert_fail@plt>
   17298:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1729c:	ldr	sl, [fp, #-136]	; 0xffffff78
   172a0:	cmp	r3, #0
   172a4:	bne	17328 <close_stdout@@Base+0x5018>
   172a8:	ldr	r1, [pc, #396]	; 1743c <close_stdout@@Base+0x512c>
   172ac:	ldrb	r2, [sl]
   172b0:	ldr	r0, [r8, r1]
   172b4:	and	r1, r2, #31
   172b8:	lsr	r2, r2, #5
   172bc:	ldr	r2, [r0, r2, lsl #2]
   172c0:	lsr	r2, r2, r1
   172c4:	tst	r2, #1
   172c8:	beq	17314 <close_stdout@@Base+0x5004>
   172cc:	str	r5, [fp, #-132]	; 0xffffff7c
   172d0:	mov	r4, #1
   172d4:	ldrb	r3, [sl]
   172d8:	strb	r5, [fp, #-128]	; 0xffffff80
   172dc:	str	r3, [fp, #-124]	; 0xffffff84
   172e0:	cmp	r4, #0
   172e4:	strb	r5, [fp, #-140]	; 0xffffff74
   172e8:	beq	17200 <close_stdout@@Base+0x4ef0>
   172ec:	ldr	r3, [fp, #-124]	; 0xffffff84
   172f0:	cmp	r3, #0
   172f4:	bne	17200 <close_stdout@@Base+0x4ef0>
   172f8:	b	16f94 <close_stdout@@Base+0x4c84>
   172fc:	mov	r0, r9
   17300:	mov	r1, r6
   17304:	ldr	r2, [fp, #-188]	; 0xffffff44
   17308:	bl	11350 <memcpy@plt>
   1730c:	str	r9, [r9, #-16]
   17310:	b	16fd4 <close_stdout@@Base+0x4cc4>
   17314:	mov	r0, r7
   17318:	bl	11374 <mbsinit@plt>
   1731c:	cmp	r0, #0
   17320:	beq	173f0 <close_stdout@@Base+0x50e0>
   17324:	strb	r5, [fp, #-152]	; 0xffffff68
   17328:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   1732c:	mov	r1, r0
   17330:	mov	r0, sl
   17334:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17338:	mov	r1, sl
   1733c:	mov	r3, r7
   17340:	mov	r2, r0
   17344:	sub	r0, fp, #124	; 0x7c
   17348:	bl	1141c <mbrtowc@plt>
   1734c:	cmn	r0, #1
   17350:	str	r0, [fp, #-132]	; 0xffffff7c
   17354:	strbeq	r6, [fp, #-128]	; 0xffffff80
   17358:	streq	r5, [fp, #-132]	; 0xffffff7c
   1735c:	beq	172e0 <close_stdout@@Base+0x4fd0>
   17360:	cmn	r0, #2
   17364:	beq	173dc <close_stdout@@Base+0x50cc>
   17368:	cmp	r0, #0
   1736c:	bne	17390 <close_stdout@@Base+0x5080>
   17370:	ldr	r3, [fp, #-136]	; 0xffffff78
   17374:	str	r5, [fp, #-132]	; 0xffffff7c
   17378:	ldrb	r3, [r3]
   1737c:	cmp	r3, #0
   17380:	bne	17414 <close_stdout@@Base+0x5104>
   17384:	ldr	r3, [fp, #-124]	; 0xffffff84
   17388:	cmp	r3, #0
   1738c:	bne	17278 <close_stdout@@Base+0x4f68>
   17390:	mov	r0, r7
   17394:	strb	r5, [fp, #-128]	; 0xffffff80
   17398:	bl	11374 <mbsinit@plt>
   1739c:	mov	r4, #1
   173a0:	cmp	r0, #0
   173a4:	strbne	r6, [fp, #-152]	; 0xffffff68
   173a8:	b	172e0 <close_stdout@@Base+0x4fd0>
   173ac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   173b0:	bl	114d0 <strlen@plt>
   173b4:	strb	r6, [fp, #-72]	; 0xffffffb8
   173b8:	str	r0, [fp, #-76]	; 0xffffffb4
   173bc:	b	16e8c <close_stdout@@Base+0x4b7c>
   173c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   173c4:	ldr	r1, [fp, #-248]	; 0xffffff08
   173c8:	str	r3, [r1]
   173cc:	ldr	r0, [fp, #-236]	; 0xffffff14
   173d0:	bl	197d4 <close_stdout@@Base+0x74c4>
   173d4:	mov	r0, #1
   173d8:	b	16b9c <close_stdout@@Base+0x488c>
   173dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   173e0:	bl	114d0 <strlen@plt>
   173e4:	strb	r6, [fp, #-128]	; 0xffffff80
   173e8:	str	r0, [fp, #-132]	; 0xffffff7c
   173ec:	b	172e0 <close_stdout@@Base+0x4fd0>
   173f0:	ldr	r0, [pc, #84]	; 1744c <close_stdout@@Base+0x513c>
   173f4:	mov	r2, #150	; 0x96
   173f8:	ldr	r1, [pc, #80]	; 17450 <close_stdout@@Base+0x5140>
   173fc:	ldr	r3, [pc, #80]	; 17454 <close_stdout@@Base+0x5144>
   17400:	add	r0, pc, r0
   17404:	add	r1, pc, r1
   17408:	add	r3, pc, r3
   1740c:	bl	11638 <__assert_fail@plt>
   17410:	bl	11398 <__stack_chk_fail@plt>
   17414:	ldr	r0, [pc, #60]	; 17458 <close_stdout@@Base+0x5148>
   17418:	mov	r2, #178	; 0xb2
   1741c:	ldr	r1, [pc, #56]	; 1745c <close_stdout@@Base+0x514c>
   17420:	ldr	r3, [pc, #56]	; 17460 <close_stdout@@Base+0x5150>
   17424:	add	r0, pc, r0
   17428:	add	r1, pc, r1
   1742c:	add	r3, pc, r3
   17430:	bl	11638 <__assert_fail@plt>
   17434:	muleq	r1, ip, r4
   17438:	andeq	r0, r0, r0, asr #2
   1743c:	andeq	r0, r0, ip, lsr r1
   17440:	andeq	r4, r0, r4, asr #21
   17444:	muleq	r0, r8, sl
   17448:	andeq	r4, r0, r8, asr pc
   1744c:	andeq	r4, r0, ip, lsl #18
   17450:	andeq	r4, r0, r0, lsr #18
   17454:	andeq	r4, r0, r0, ror #27
   17458:	andeq	r4, r0, r0, lsl r9
   1745c:	strdeq	r4, [r0], -ip
   17460:			; <UNDEFINED> instruction: 0x00004dbc
   17464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17468:	sub	sp, sp, #348	; 0x15c
   1746c:	ldr	r4, [pc, #3188]	; 180e8 <close_stdout@@Base+0x5dd8>
   17470:	ldr	r3, [pc, #3188]	; 180ec <close_stdout@@Base+0x5ddc>
   17474:	add	r4, pc, r4
   17478:	str	r0, [sp, #16]
   1747c:	str	r1, [sp, #4]
   17480:	ldr	r3, [r4, r3]
   17484:	str	r3, [sp, #20]
   17488:	ldr	r3, [r3]
   1748c:	str	r3, [sp, #340]	; 0x154
   17490:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17494:	cmp	r0, #1
   17498:	bls	1767c <close_stdout@@Base+0x536c>
   1749c:	ldr	r0, [sp, #4]
   174a0:	add	r5, sp, #64	; 0x40
   174a4:	ldr	ip, [pc, #3140]	; 180f0 <close_stdout@@Base+0x5de0>
   174a8:	mov	r2, #0
   174ac:	str	r2, [r5, #4]
   174b0:	ldrb	r1, [r0]
   174b4:	str	r0, [sp, #76]	; 0x4c
   174b8:	strb	r2, [sp, #60]	; 0x3c
   174bc:	and	r3, r1, #31
   174c0:	str	r2, [sp, #64]	; 0x40
   174c4:	lsr	r0, r1, #5
   174c8:	strb	r2, [sp, #72]	; 0x48
   174cc:	ldr	r6, [r4, ip]
   174d0:	ldr	r2, [r6, r0, lsl #2]
   174d4:	lsr	r3, r2, r3
   174d8:	ands	r4, r3, #1
   174dc:	beq	175cc <close_stdout@@Base+0x52bc>
   174e0:	mov	r4, r1
   174e4:	cmp	r4, #0
   174e8:	mov	r3, #1
   174ec:	str	r1, [sp, #88]	; 0x58
   174f0:	str	r3, [sp, #80]	; 0x50
   174f4:	strb	r3, [sp, #84]	; 0x54
   174f8:	mov	r3, #1
   174fc:	strb	r3, [sp, #72]	; 0x48
   17500:	beq	1765c <close_stdout@@Base+0x534c>
   17504:	add	r2, sp, #120	; 0x78
   17508:	add	r0, sp, #176	; 0xb0
   1750c:	str	r2, [sp, #8]
   17510:	mov	r3, #0
   17514:	ldr	r2, [sp, #4]
   17518:	mov	r9, r3
   1751c:	str	r0, [sp, #44]	; 0x2c
   17520:	mov	r5, r3
   17524:	ldr	r0, [sp, #16]
   17528:	mov	r4, #1
   1752c:	mov	r1, #1
   17530:	str	r2, [sp, #132]	; 0x84
   17534:	str	r1, [sp, #32]
   17538:	add	r2, sp, #200	; 0xc8
   1753c:	str	r0, [sp, #188]	; 0xbc
   17540:	mov	r8, r0
   17544:	add	r1, sp, #144	; 0x90
   17548:	add	r0, sp, #56	; 0x38
   1754c:	str	r3, [sp, #28]
   17550:	strb	r3, [sp, #116]	; 0x74
   17554:	str	r3, [sp, #12]
   17558:	str	r3, [sp, #120]	; 0x78
   1755c:	strb	r3, [sp, #128]	; 0x80
   17560:	strb	r3, [sp, #172]	; 0xac
   17564:	str	r3, [sp, #176]	; 0xb0
   17568:	str	r2, [sp, #48]	; 0x30
   1756c:	strb	r3, [sp, #184]	; 0xb8
   17570:	str	r0, [sp, #52]	; 0x34
   17574:	str	r3, [sp, #124]	; 0x7c
   17578:	str	r1, [sp, #24]
   1757c:	str	r3, [sp, #180]	; 0xb4
   17580:	ldrb	r3, [sp, #172]	; 0xac
   17584:	cmp	r3, #0
   17588:	bne	177e4 <close_stdout@@Base+0x54d4>
   1758c:	ldrb	r3, [r8]
   17590:	and	r2, r3, #31
   17594:	lsr	r3, r3, #5
   17598:	ldr	r3, [r6, r3, lsl #2]
   1759c:	lsr	r3, r3, r2
   175a0:	tst	r3, #1
   175a4:	beq	177d0 <close_stdout@@Base+0x54c0>
   175a8:	str	r4, [sp, #192]	; 0xc0
   175ac:	ldrb	r7, [r8]
   175b0:	strb	r4, [sp, #196]	; 0xc4
   175b4:	cmp	r7, #0
   175b8:	strb	r4, [sp, #184]	; 0xb8
   175bc:	str	r7, [sp, #200]	; 0xc8
   175c0:	bne	17850 <close_stdout@@Base+0x5540>
   175c4:	mov	r0, r7
   175c8:	b	17660 <close_stdout@@Base+0x5350>
   175cc:	mov	r0, r5
   175d0:	bl	11374 <mbsinit@plt>
   175d4:	cmp	r0, #0
   175d8:	beq	180a4 <close_stdout@@Base+0x5d94>
   175dc:	mov	r7, #1
   175e0:	strb	r7, [sp, #60]	; 0x3c
   175e4:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   175e8:	mov	r1, r0
   175ec:	ldr	r0, [sp, #4]
   175f0:	bl	14ab0 <close_stdout@@Base+0x27a0>
   175f4:	ldr	r1, [sp, #4]
   175f8:	mov	r3, r5
   175fc:	mov	r2, r0
   17600:	add	r0, sp, #88	; 0x58
   17604:	bl	1141c <mbrtowc@plt>
   17608:	cmn	r0, #1
   1760c:	str	r0, [sp, #80]	; 0x50
   17610:	strbeq	r4, [sp, #84]	; 0x54
   17614:	streq	r7, [sp, #80]	; 0x50
   17618:	beq	17868 <close_stdout@@Base+0x5558>
   1761c:	cmn	r0, #2
   17620:	beq	17858 <close_stdout@@Base+0x5548>
   17624:	cmp	r0, #0
   17628:	beq	17fe0 <close_stdout@@Base+0x5cd0>
   1762c:	ldr	r4, [sp, #88]	; 0x58
   17630:	mov	r0, r5
   17634:	mov	r3, #1
   17638:	strb	r3, [sp, #84]	; 0x54
   1763c:	bl	11374 <mbsinit@plt>
   17640:	cmp	r0, #0
   17644:	movne	r3, #0
   17648:	strbne	r3, [sp, #60]	; 0x3c
   1764c:	cmp	r4, #0
   17650:	mov	r3, #1
   17654:	strb	r3, [sp, #72]	; 0x48
   17658:	bne	17504 <close_stdout@@Base+0x51f4>
   1765c:	ldr	r0, [sp, #16]
   17660:	ldr	r1, [sp, #20]
   17664:	ldr	r2, [sp, #340]	; 0x154
   17668:	ldr	r3, [r1]
   1766c:	cmp	r2, r3
   17670:	bne	180c4 <close_stdout@@Base+0x5db4>
   17674:	add	sp, sp, #348	; 0x15c
   17678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1767c:	ldr	r2, [sp, #4]
   17680:	ldrb	r8, [r2]
   17684:	cmp	r8, #0
   17688:	beq	1765c <close_stdout@@Base+0x534c>
   1768c:	ldr	r3, [sp, #16]
   17690:	ldrb	sl, [r3]
   17694:	cmp	sl, #0
   17698:	beq	17b58 <close_stdout@@Base+0x5848>
   1769c:	cmp	sl, r8
   176a0:	mov	r4, #0
   176a4:	mov	r5, r4
   176a8:	mov	r9, r4
   176ac:	add	r0, sp, #56	; 0x38
   176b0:	add	r7, r3, #1
   176b4:	mov	r6, r3
   176b8:	mov	fp, r2
   176bc:	mov	r1, #1
   176c0:	str	r0, [sp, #8]
   176c4:	add	r4, r4, #1
   176c8:	beq	1776c <close_stdout@@Base+0x545c>
   176cc:	ldrb	sl, [r6, #1]
   176d0:	cmp	sl, #0
   176d4:	beq	17b58 <close_stdout@@Base+0x5848>
   176d8:	add	r5, r5, #1
   176dc:	cmp	r4, #9
   176e0:	movls	r3, #0
   176e4:	andhi	r3, r1, #1
   176e8:	cmp	r3, #0
   176ec:	beq	17758 <close_stdout@@Base+0x5448>
   176f0:	add	r3, r4, r4, lsl #2
   176f4:	cmp	r5, r3
   176f8:	bcc	17754 <close_stdout@@Base+0x5444>
   176fc:	cmp	fp, #0
   17700:	beq	17720 <close_stdout@@Base+0x5410>
   17704:	rsb	r1, r9, r5
   17708:	mov	r0, fp
   1770c:	bl	11590 <strnlen@plt>
   17710:	mov	r9, r5
   17714:	ldrb	r3, [fp, r0]!
   17718:	cmp	r3, #0
   1771c:	bne	17754 <close_stdout@@Base+0x5444>
   17720:	ldr	r0, [sp, #4]
   17724:	bl	114d0 <strlen@plt>
   17728:	ldr	r1, [sp, #4]
   1772c:	add	r3, sp, #56	; 0x38
   17730:	mov	r2, r0
   17734:	mov	r0, r7
   17738:	bl	169bc <close_stdout@@Base+0x46ac>
   1773c:	cmp	r0, #0
   17740:	bne	1809c <close_stdout@@Base+0x5d8c>
   17744:	mov	fp, r0
   17748:	ldrb	sl, [r6, #1]
   1774c:	mov	r1, r0
   17750:	b	17758 <close_stdout@@Base+0x5448>
   17754:	mov	r1, #1
   17758:	cmp	sl, r8
   1775c:	add	r7, r7, #1
   17760:	add	r6, r6, #1
   17764:	add	r4, r4, #1
   17768:	bne	176cc <close_stdout@@Base+0x53bc>
   1776c:	ldr	r2, [sp, #4]
   17770:	ldrb	r3, [r2, #1]
   17774:	cmp	r3, #0
   17778:	beq	177c8 <close_stdout@@Base+0x54b8>
   1777c:	ldrb	sl, [r6, #1]
   17780:	cmp	sl, #0
   17784:	beq	17b58 <close_stdout@@Base+0x5848>
   17788:	cmp	r3, sl
   1778c:	add	r3, r5, #2
   17790:	bne	17bf4 <close_stdout@@Base+0x58e4>
   17794:	rsb	r0, r5, #0
   17798:	add	r5, r2, r0
   1779c:	add	r0, r6, r0
   177a0:	b	177bc <close_stdout@@Base+0x54ac>
   177a4:	ldrb	ip, [r0, r3]
   177a8:	cmp	ip, #0
   177ac:	beq	17b58 <close_stdout@@Base+0x5848>
   177b0:	cmp	r2, ip
   177b4:	add	r3, r3, #1
   177b8:	bne	17bf4 <close_stdout@@Base+0x58e4>
   177bc:	ldrb	r2, [r5, r3]
   177c0:	cmp	r2, #0
   177c4:	bne	177a4 <close_stdout@@Base+0x5494>
   177c8:	mov	r0, r6
   177cc:	b	17660 <close_stdout@@Base+0x5350>
   177d0:	add	r0, sp, #176	; 0xb0
   177d4:	bl	11374 <mbsinit@plt>
   177d8:	cmp	r0, #0
   177dc:	beq	180a4 <close_stdout@@Base+0x5d94>
   177e0:	strb	r4, [sp, #172]	; 0xac
   177e4:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   177e8:	mov	r1, r0
   177ec:	mov	r0, r8
   177f0:	bl	14ab0 <close_stdout@@Base+0x27a0>
   177f4:	mov	r1, r8
   177f8:	add	r3, sp, #176	; 0xb0
   177fc:	mov	r2, r0
   17800:	add	r0, sp, #200	; 0xc8
   17804:	bl	1141c <mbrtowc@plt>
   17808:	cmn	r0, #1
   1780c:	str	r0, [sp, #192]	; 0xc0
   17810:	strbeq	r5, [sp, #196]	; 0xc4
   17814:	streq	r4, [sp, #192]	; 0xc0
   17818:	beq	17884 <close_stdout@@Base+0x5574>
   1781c:	cmn	r0, #2
   17820:	beq	17874 <close_stdout@@Base+0x5564>
   17824:	cmp	r0, #0
   17828:	beq	17fbc <close_stdout@@Base+0x5cac>
   1782c:	ldr	r7, [sp, #200]	; 0xc8
   17830:	add	r0, sp, #176	; 0xb0
   17834:	strb	r4, [sp, #196]	; 0xc4
   17838:	bl	11374 <mbsinit@plt>
   1783c:	strb	r4, [sp, #184]	; 0xb8
   17840:	cmp	r0, #0
   17844:	strbne	r5, [sp, #172]	; 0xac
   17848:	cmp	r7, #0
   1784c:	beq	175c4 <close_stdout@@Base+0x52b4>
   17850:	mov	r3, #1
   17854:	b	1788c <close_stdout@@Base+0x557c>
   17858:	ldr	r0, [sp, #76]	; 0x4c
   1785c:	bl	114d0 <strlen@plt>
   17860:	strb	r4, [sp, #84]	; 0x54
   17864:	str	r0, [sp, #80]	; 0x50
   17868:	mov	r3, #1
   1786c:	strb	r3, [sp, #72]	; 0x48
   17870:	b	17504 <close_stdout@@Base+0x51f4>
   17874:	ldr	r0, [sp, #188]	; 0xbc
   17878:	bl	114d0 <strlen@plt>
   1787c:	strb	r5, [sp, #196]	; 0xc4
   17880:	str	r0, [sp, #192]	; 0xc0
   17884:	mov	r3, #0
   17888:	strb	r4, [sp, #184]	; 0xb8
   1788c:	ldr	r8, [sp, #32]
   17890:	ldr	r2, [sp, #12]
   17894:	cmp	r2, #9
   17898:	movls	r8, #0
   1789c:	andhi	r8, r8, #1
   178a0:	cmp	r8, #0
   178a4:	beq	1797c <close_stdout@@Base+0x566c>
   178a8:	ldr	r1, [sp, #12]
   178ac:	add	r2, r1, r1, lsl #2
   178b0:	cmp	r9, r2
   178b4:	bcc	17b4c <close_stdout@@Base+0x583c>
   178b8:	ldr	r2, [sp, #28]
   178bc:	subs	r7, r9, r2
   178c0:	beq	17954 <close_stdout@@Base+0x5644>
   178c4:	ldrb	sl, [sp, #128]	; 0x80
   178c8:	cmp	sl, #0
   178cc:	beq	178fc <close_stdout@@Base+0x55ec>
   178d0:	ldrb	sl, [sp, #140]	; 0x8c
   178d4:	cmp	sl, #0
   178d8:	bne	17948 <close_stdout@@Base+0x5638>
   178dc:	ldr	sl, [sp, #132]	; 0x84
   178e0:	subs	r7, r7, #1
   178e4:	ldr	r3, [sp, #136]	; 0x88
   178e8:	strb	r5, [sp, #128]	; 0x80
   178ec:	add	sl, sl, r3
   178f0:	str	sl, [sp, #132]	; 0x84
   178f4:	beq	17c20 <close_stdout@@Base+0x5910>
   178f8:	mov	sl, #0
   178fc:	ldrb	r3, [sp, #116]	; 0x74
   17900:	ldr	fp, [sp, #132]	; 0x84
   17904:	cmp	r3, #0
   17908:	bne	179ec <close_stdout@@Base+0x56dc>
   1790c:	ldrb	r3, [fp]
   17910:	and	r2, r3, #31
   17914:	lsr	r3, r3, #5
   17918:	ldr	r3, [r6, r3, lsl #2]
   1791c:	lsr	r3, r3, r2
   17920:	tst	r3, #1
   17924:	beq	179d8 <close_stdout@@Base+0x56c8>
   17928:	str	r4, [sp, #136]	; 0x88
   1792c:	mov	sl, r8
   17930:	ldrb	r3, [fp]
   17934:	strb	r4, [sp, #140]	; 0x8c
   17938:	str	r3, [sp, #144]	; 0x90
   1793c:	cmp	sl, #0
   17940:	strb	r4, [sp, #128]	; 0x80
   17944:	beq	178dc <close_stdout@@Base+0x55cc>
   17948:	ldr	r3, [sp, #144]	; 0x90
   1794c:	cmp	r3, #0
   17950:	bne	178dc <close_stdout@@Base+0x55cc>
   17954:	ldrb	r3, [sp, #128]	; 0x80
   17958:	cmp	r3, #0
   1795c:	ldrbne	r8, [sp, #140]	; 0x8c
   17960:	beq	17c1c <close_stdout@@Base+0x590c>
   17964:	cmp	r8, #0
   17968:	bne	17bfc <close_stdout@@Base+0x58ec>
   1796c:	ldrb	r3, [sp, #196]	; 0xc4
   17970:	mov	r0, #1
   17974:	str	r9, [sp, #28]
   17978:	str	r0, [sp, #32]
   1797c:	cmp	r3, #0
   17980:	ldr	r3, [sp, #12]
   17984:	add	r7, r9, #1
   17988:	add	r3, r3, #1
   1798c:	str	r3, [sp, #12]
   17990:	beq	17a70 <close_stdout@@Base+0x5760>
   17994:	ldrb	r3, [sp, #84]	; 0x54
   17998:	cmp	r3, #0
   1799c:	beq	17a70 <close_stdout@@Base+0x5760>
   179a0:	ldr	r0, [sp, #200]	; 0xc8
   179a4:	ldr	r3, [sp, #88]	; 0x58
   179a8:	subs	r3, r0, r3
   179ac:	rsbs	r0, r3, #0
   179b0:	adcs	r0, r0, r3
   179b4:	cmp	r0, #0
   179b8:	bne	17aa0 <close_stdout@@Base+0x5790>
   179bc:	ldr	r8, [sp, #188]	; 0xbc
   179c0:	mov	r9, r7
   179c4:	ldr	r3, [sp, #192]	; 0xc0
   179c8:	strb	r5, [sp, #184]	; 0xb8
   179cc:	add	r8, r8, r3
   179d0:	str	r8, [sp, #188]	; 0xbc
   179d4:	b	17580 <close_stdout@@Base+0x5270>
   179d8:	add	r0, sp, #120	; 0x78
   179dc:	bl	11374 <mbsinit@plt>
   179e0:	cmp	r0, #0
   179e4:	beq	180a4 <close_stdout@@Base+0x5d94>
   179e8:	strb	r4, [sp, #116]	; 0x74
   179ec:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   179f0:	mov	r1, r0
   179f4:	mov	r0, fp
   179f8:	bl	14ab0 <close_stdout@@Base+0x27a0>
   179fc:	mov	r1, fp
   17a00:	add	r3, sp, #120	; 0x78
   17a04:	mov	r2, r0
   17a08:	add	r0, sp, #144	; 0x90
   17a0c:	bl	1141c <mbrtowc@plt>
   17a10:	cmn	r0, #1
   17a14:	str	r0, [sp, #136]	; 0x88
   17a18:	strbeq	r5, [sp, #140]	; 0x8c
   17a1c:	streq	r4, [sp, #136]	; 0x88
   17a20:	beq	1793c <close_stdout@@Base+0x562c>
   17a24:	cmn	r0, #2
   17a28:	beq	17b38 <close_stdout@@Base+0x5828>
   17a2c:	cmp	r0, #0
   17a30:	bne	17a54 <close_stdout@@Base+0x5744>
   17a34:	ldr	r3, [sp, #132]	; 0x84
   17a38:	str	r4, [sp, #136]	; 0x88
   17a3c:	ldrb	r3, [r3]
   17a40:	cmp	r3, #0
   17a44:	bne	180c8 <close_stdout@@Base+0x5db8>
   17a48:	ldr	r3, [sp, #144]	; 0x90
   17a4c:	cmp	r3, #0
   17a50:	bne	17bd4 <close_stdout@@Base+0x58c4>
   17a54:	add	r0, sp, #120	; 0x78
   17a58:	strb	r4, [sp, #140]	; 0x8c
   17a5c:	bl	11374 <mbsinit@plt>
   17a60:	mov	sl, r8
   17a64:	cmp	r0, #0
   17a68:	strbne	r5, [sp, #116]	; 0x74
   17a6c:	b	1793c <close_stdout@@Base+0x562c>
   17a70:	ldr	r2, [sp, #192]	; 0xc0
   17a74:	ldr	r3, [sp, #80]	; 0x50
   17a78:	cmp	r2, r3
   17a7c:	movne	r0, #0
   17a80:	bne	179b4 <close_stdout@@Base+0x56a4>
   17a84:	ldr	r0, [sp, #188]	; 0xbc
   17a88:	ldr	r1, [sp, #76]	; 0x4c
   17a8c:	bl	11380 <memcmp@plt>
   17a90:	rsbs	r0, r0, #1
   17a94:	movcc	r0, #0
   17a98:	cmp	r0, #0
   17a9c:	beq	179bc <close_stdout@@Base+0x56ac>
   17aa0:	ldr	r0, [sp, #4]
   17aa4:	add	r7, sp, #172	; 0xac
   17aa8:	add	ip, sp, #228	; 0xe4
   17aac:	add	r8, sp, #288	; 0x120
   17ab0:	str	r0, [sp, #300]	; 0x12c
   17ab4:	ldm	r7!, {r0, r1, r2, r3}
   17ab8:	stmia	ip!, {r0, r1, r2, r3}
   17abc:	ldm	r7!, {r0, r1, r2, r3}
   17ac0:	strb	r5, [sp, #240]	; 0xf0
   17ac4:	stmia	ip!, {r0, r1, r2, r3}
   17ac8:	ldm	r7!, {r0, r1, r2, r3}
   17acc:	ldr	sl, [sp, #244]	; 0xf4
   17ad0:	stmia	ip!, {r0, r1, r2, r3}
   17ad4:	ldm	r7, {r0, r1}
   17ad8:	ldr	r3, [sp, #248]	; 0xf8
   17adc:	stm	ip, {r0, r1}
   17ae0:	add	r3, sl, r3
   17ae4:	str	r3, [sp, #244]	; 0xf4
   17ae8:	ldr	r1, [sp, #4]
   17aec:	str	r5, [sp, #288]	; 0x120
   17af0:	strb	r5, [sp, #296]	; 0x128
   17af4:	ldrb	r3, [r1]
   17af8:	strb	r5, [sp, #284]	; 0x11c
   17afc:	and	r2, r3, #31
   17b00:	str	r5, [r8, #4]
   17b04:	lsr	r1, r3, #5
   17b08:	ldr	r7, [r6, r1, lsl #2]
   17b0c:	lsr	r7, r7, r2
   17b10:	ands	r7, r7, #1
   17b14:	beq	17b60 <close_stdout@@Base+0x5850>
   17b18:	mov	r7, r3
   17b1c:	str	r4, [sp, #304]	; 0x130
   17b20:	str	r3, [sp, #312]	; 0x138
   17b24:	strb	r4, [sp, #308]	; 0x134
   17b28:	cmp	r7, #0
   17b2c:	strb	r4, [sp, #296]	; 0x128
   17b30:	bne	17ce4 <close_stdout@@Base+0x59d4>
   17b34:	bl	11614 <abort@plt>
   17b38:	ldr	r0, [sp, #132]	; 0x84
   17b3c:	bl	114d0 <strlen@plt>
   17b40:	strb	r5, [sp, #140]	; 0x8c
   17b44:	str	r0, [sp, #136]	; 0x88
   17b48:	b	1793c <close_stdout@@Base+0x562c>
   17b4c:	mov	r2, #1
   17b50:	str	r2, [sp, #32]
   17b54:	b	1797c <close_stdout@@Base+0x566c>
   17b58:	mov	r0, #0
   17b5c:	b	17660 <close_stdout@@Base+0x5350>
   17b60:	mov	r0, r8
   17b64:	bl	11374 <mbsinit@plt>
   17b68:	cmp	r0, #0
   17b6c:	beq	180a4 <close_stdout@@Base+0x5d94>
   17b70:	strb	r4, [sp, #284]	; 0x11c
   17b74:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17b78:	mov	r1, r0
   17b7c:	ldr	r0, [sp, #4]
   17b80:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17b84:	ldr	r1, [sp, #4]
   17b88:	mov	r3, r8
   17b8c:	mov	r2, r0
   17b90:	add	r0, sp, #312	; 0x138
   17b94:	bl	1141c <mbrtowc@plt>
   17b98:	cmn	r0, #1
   17b9c:	str	r0, [sp, #304]	; 0x130
   17ba0:	beq	18074 <close_stdout@@Base+0x5d64>
   17ba4:	cmn	r0, #2
   17ba8:	beq	18084 <close_stdout@@Base+0x5d74>
   17bac:	cmp	r0, #0
   17bb0:	bne	18040 <close_stdout@@Base+0x5d30>
   17bb4:	ldr	fp, [sp, #300]	; 0x12c
   17bb8:	str	r4, [sp, #304]	; 0x130
   17bbc:	ldrb	r3, [fp]
   17bc0:	cmp	r3, #0
   17bc4:	bne	180c8 <close_stdout@@Base+0x5db8>
   17bc8:	ldr	r7, [sp, #312]	; 0x138
   17bcc:	cmp	r7, #0
   17bd0:	beq	18044 <close_stdout@@Base+0x5d34>
   17bd4:	ldr	r0, [pc, #1304]	; 180f4 <close_stdout@@Base+0x5de4>
   17bd8:	mov	r2, #179	; 0xb3
   17bdc:	ldr	r1, [pc, #1300]	; 180f8 <close_stdout@@Base+0x5de8>
   17be0:	ldr	r3, [pc, #1300]	; 180fc <close_stdout@@Base+0x5dec>
   17be4:	add	r0, pc, r0
   17be8:	add	r1, pc, r1
   17bec:	add	r3, pc, r3
   17bf0:	bl	11638 <__assert_fail@plt>
   17bf4:	mov	r5, r3
   17bf8:	b	176dc <close_stdout@@Base+0x53cc>
   17bfc:	ldr	r3, [sp, #144]	; 0x90
   17c00:	cmp	r3, #0
   17c04:	beq	18004 <close_stdout@@Base+0x5cf4>
   17c08:	mov	r1, #1
   17c0c:	ldrb	r3, [sp, #196]	; 0xc4
   17c10:	str	r9, [sp, #28]
   17c14:	str	r1, [sp, #32]
   17c18:	b	1797c <close_stdout@@Base+0x566c>
   17c1c:	ldr	sl, [sp, #132]	; 0x84
   17c20:	ldrb	r3, [sp, #116]	; 0x74
   17c24:	cmp	r3, #0
   17c28:	bne	17c5c <close_stdout@@Base+0x594c>
   17c2c:	ldrb	r3, [sl]
   17c30:	and	r2, r3, #31
   17c34:	lsr	r3, r3, #5
   17c38:	ldr	r3, [r6, r3, lsl #2]
   17c3c:	lsr	r3, r3, r2
   17c40:	tst	r3, #1
   17c44:	bne	1802c <close_stdout@@Base+0x5d1c>
   17c48:	add	r0, sp, #120	; 0x78
   17c4c:	bl	11374 <mbsinit@plt>
   17c50:	cmp	r0, #0
   17c54:	beq	180a4 <close_stdout@@Base+0x5d94>
   17c58:	strb	r4, [sp, #116]	; 0x74
   17c5c:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17c60:	mov	r1, r0
   17c64:	mov	r0, sl
   17c68:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17c6c:	mov	r1, sl
   17c70:	add	r3, sp, #120	; 0x78
   17c74:	mov	r2, r0
   17c78:	add	r0, sp, #144	; 0x90
   17c7c:	bl	1141c <mbrtowc@plt>
   17c80:	cmn	r0, #1
   17c84:	str	r0, [sp, #136]	; 0x88
   17c88:	strbeq	r5, [sp, #140]	; 0x8c
   17c8c:	streq	r4, [sp, #136]	; 0x88
   17c90:	moveq	r8, #0
   17c94:	beq	17cdc <close_stdout@@Base+0x59cc>
   17c98:	cmn	r0, #2
   17c9c:	beq	1805c <close_stdout@@Base+0x5d4c>
   17ca0:	cmp	r0, #0
   17ca4:	bne	17cc8 <close_stdout@@Base+0x59b8>
   17ca8:	ldr	r3, [sp, #132]	; 0x84
   17cac:	str	r4, [sp, #136]	; 0x88
   17cb0:	ldrb	r3, [r3]
   17cb4:	cmp	r3, #0
   17cb8:	bne	180c8 <close_stdout@@Base+0x5db8>
   17cbc:	ldr	r3, [sp, #144]	; 0x90
   17cc0:	cmp	r3, #0
   17cc4:	bne	17bd4 <close_stdout@@Base+0x58c4>
   17cc8:	add	r0, sp, #120	; 0x78
   17ccc:	strb	r4, [sp, #140]	; 0x8c
   17cd0:	bl	11374 <mbsinit@plt>
   17cd4:	cmp	r0, #0
   17cd8:	strbne	r5, [sp, #116]	; 0x74
   17cdc:	strb	r4, [sp, #128]	; 0x80
   17ce0:	b	17964 <close_stdout@@Base+0x5654>
   17ce4:	ldr	fp, [sp, #300]	; 0x12c
   17ce8:	ldr	r2, [sp, #304]	; 0x130
   17cec:	add	r7, r9, #2
   17cf0:	add	r3, sp, #312	; 0x138
   17cf4:	add	r0, sp, #256	; 0x100
   17cf8:	add	fp, fp, r2
   17cfc:	ldrb	r2, [sp, #284]	; 0x11c
   17d00:	strb	r5, [sp, #296]	; 0x128
   17d04:	add	r9, sp, #232	; 0xe8
   17d08:	cmp	r2, #0
   17d0c:	str	r3, [sp, #36]	; 0x24
   17d10:	str	r0, [sp, #40]	; 0x28
   17d14:	str	fp, [sp, #300]	; 0x12c
   17d18:	bne	17de4 <close_stdout@@Base+0x5ad4>
   17d1c:	ldrb	r2, [fp]
   17d20:	and	r1, r2, #31
   17d24:	lsr	r2, r2, #5
   17d28:	ldr	r2, [r6, r2, lsl #2]
   17d2c:	lsr	r2, r2, r1
   17d30:	tst	r2, #1
   17d34:	beq	17f6c <close_stdout@@Base+0x5c5c>
   17d38:	str	r4, [sp, #304]	; 0x130
   17d3c:	ldrb	r3, [fp]
   17d40:	strb	r4, [sp, #308]	; 0x134
   17d44:	mov	fp, r3
   17d48:	str	r3, [sp, #312]	; 0x138
   17d4c:	cmp	fp, #0
   17d50:	strb	r4, [sp, #296]	; 0x128
   17d54:	bne	17d74 <close_stdout@@Base+0x5a64>
   17d58:	ldr	r0, [sp, #188]	; 0xbc
   17d5c:	b	17660 <close_stdout@@Base+0x5350>
   17d60:	ldr	r0, [sp, #300]	; 0x12c
   17d64:	bl	114d0 <strlen@plt>
   17d68:	strb	r5, [sp, #308]	; 0x134
   17d6c:	str	r0, [sp, #304]	; 0x130
   17d70:	strb	r4, [sp, #296]	; 0x128
   17d74:	ldrb	fp, [sp, #240]	; 0xf0
   17d78:	cmp	fp, #0
   17d7c:	beq	17e48 <close_stdout@@Base+0x5b38>
   17d80:	ldrb	fp, [sp, #252]	; 0xfc
   17d84:	cmp	fp, #0
   17d88:	bne	17e94 <close_stdout@@Base+0x5b84>
   17d8c:	ldr	r2, [sp, #248]	; 0xf8
   17d90:	ldr	r3, [sp, #304]	; 0x130
   17d94:	cmp	r2, r3
   17d98:	movne	r0, #1
   17d9c:	beq	17f54 <close_stdout@@Base+0x5c44>
   17da0:	cmp	r0, #0
   17da4:	add	r3, r7, #1
   17da8:	bne	179bc <close_stdout@@Base+0x56ac>
   17dac:	ldr	r1, [sp, #244]	; 0xf4
   17db0:	mov	r7, r3
   17db4:	ldr	r2, [sp, #248]	; 0xf8
   17db8:	ldr	fp, [sp, #300]	; 0x12c
   17dbc:	add	r1, r1, r2
   17dc0:	ldr	r2, [sp, #304]	; 0x130
   17dc4:	strb	r0, [sp, #240]	; 0xf0
   17dc8:	add	fp, fp, r2
   17dcc:	ldrb	r2, [sp, #284]	; 0x11c
   17dd0:	strb	r0, [sp, #296]	; 0x128
   17dd4:	cmp	r2, #0
   17dd8:	str	r1, [sp, #244]	; 0xf4
   17ddc:	str	fp, [sp, #300]	; 0x12c
   17de0:	beq	17d1c <close_stdout@@Base+0x5a0c>
   17de4:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17de8:	mov	r1, r0
   17dec:	mov	r0, fp
   17df0:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17df4:	mov	r1, fp
   17df8:	mov	r3, r8
   17dfc:	mov	r2, r0
   17e00:	add	r0, sp, #312	; 0x138
   17e04:	bl	1141c <mbrtowc@plt>
   17e08:	cmn	r0, #1
   17e0c:	str	r0, [sp, #304]	; 0x130
   17e10:	strbeq	r5, [sp, #308]	; 0x134
   17e14:	streq	r4, [sp, #304]	; 0x130
   17e18:	beq	17d70 <close_stdout@@Base+0x5a60>
   17e1c:	cmn	r0, #2
   17e20:	beq	17d60 <close_stdout@@Base+0x5a50>
   17e24:	cmp	r0, #0
   17e28:	beq	17f84 <close_stdout@@Base+0x5c74>
   17e2c:	ldr	fp, [sp, #312]	; 0x138
   17e30:	mov	r0, r8
   17e34:	strb	r4, [sp, #308]	; 0x134
   17e38:	bl	11374 <mbsinit@plt>
   17e3c:	cmp	r0, #0
   17e40:	strbne	r5, [sp, #284]	; 0x11c
   17e44:	b	17d4c <close_stdout@@Base+0x5a3c>
   17e48:	ldrb	r3, [sp, #228]	; 0xe4
   17e4c:	ldr	sl, [sp, #244]	; 0xf4
   17e50:	cmp	r3, #0
   17e54:	bne	17ed0 <close_stdout@@Base+0x5bc0>
   17e58:	ldrb	r2, [sl]
   17e5c:	and	r1, r2, #31
   17e60:	lsr	r2, r2, #5
   17e64:	ldr	r2, [r6, r2, lsl #2]
   17e68:	lsr	r2, r2, r1
   17e6c:	tst	r2, #1
   17e70:	beq	17ebc <close_stdout@@Base+0x5bac>
   17e74:	str	r4, [sp, #248]	; 0xf8
   17e78:	mov	fp, #1
   17e7c:	ldrb	r3, [sl]
   17e80:	strb	r4, [sp, #252]	; 0xfc
   17e84:	str	r3, [sp, #256]	; 0x100
   17e88:	cmp	fp, #0
   17e8c:	strb	r4, [sp, #240]	; 0xf0
   17e90:	beq	17d8c <close_stdout@@Base+0x5a7c>
   17e94:	ldr	r0, [sp, #256]	; 0x100
   17e98:	cmp	r0, #0
   17e9c:	beq	17660 <close_stdout@@Base+0x5350>
   17ea0:	ldrb	r3, [sp, #308]	; 0x134
   17ea4:	cmp	r3, #0
   17ea8:	beq	17d8c <close_stdout@@Base+0x5a7c>
   17eac:	ldr	r3, [sp, #312]	; 0x138
   17eb0:	subs	r0, r0, r3
   17eb4:	movne	r0, #1
   17eb8:	b	17da0 <close_stdout@@Base+0x5a90>
   17ebc:	mov	r0, r9
   17ec0:	bl	11374 <mbsinit@plt>
   17ec4:	cmp	r0, #0
   17ec8:	beq	180a4 <close_stdout@@Base+0x5d94>
   17ecc:	strb	r4, [sp, #228]	; 0xe4
   17ed0:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   17ed4:	mov	r1, r0
   17ed8:	mov	r0, sl
   17edc:	bl	14ab0 <close_stdout@@Base+0x27a0>
   17ee0:	mov	r1, sl
   17ee4:	mov	r3, r9
   17ee8:	mov	r2, r0
   17eec:	add	r0, sp, #256	; 0x100
   17ef0:	bl	1141c <mbrtowc@plt>
   17ef4:	cmn	r0, #1
   17ef8:	str	r0, [sp, #248]	; 0xf8
   17efc:	strbeq	r5, [sp, #252]	; 0xfc
   17f00:	streq	r4, [sp, #248]	; 0xf8
   17f04:	beq	17e88 <close_stdout@@Base+0x5b78>
   17f08:	cmn	r0, #2
   17f0c:	beq	17fa8 <close_stdout@@Base+0x5c98>
   17f10:	cmp	r0, #0
   17f14:	bne	17f38 <close_stdout@@Base+0x5c28>
   17f18:	ldr	r3, [sp, #244]	; 0xf4
   17f1c:	str	r4, [sp, #248]	; 0xf8
   17f20:	ldrb	r3, [r3]
   17f24:	cmp	r3, #0
   17f28:	bne	180c8 <close_stdout@@Base+0x5db8>
   17f2c:	ldr	r3, [sp, #256]	; 0x100
   17f30:	cmp	r3, #0
   17f34:	bne	17bd4 <close_stdout@@Base+0x58c4>
   17f38:	mov	r0, r9
   17f3c:	strb	r4, [sp, #252]	; 0xfc
   17f40:	bl	11374 <mbsinit@plt>
   17f44:	mov	fp, #1
   17f48:	cmp	r0, #0
   17f4c:	strbne	r5, [sp, #228]	; 0xe4
   17f50:	b	17e88 <close_stdout@@Base+0x5b78>
   17f54:	ldr	r0, [sp, #244]	; 0xf4
   17f58:	ldr	r1, [sp, #300]	; 0x12c
   17f5c:	bl	11380 <memcmp@plt>
   17f60:	adds	r0, r0, #0
   17f64:	movne	r0, #1
   17f68:	b	17da0 <close_stdout@@Base+0x5a90>
   17f6c:	mov	r0, r8
   17f70:	bl	11374 <mbsinit@plt>
   17f74:	cmp	r0, #0
   17f78:	beq	180a4 <close_stdout@@Base+0x5d94>
   17f7c:	strb	r4, [sp, #284]	; 0x11c
   17f80:	b	17de4 <close_stdout@@Base+0x5ad4>
   17f84:	ldr	r3, [sp, #300]	; 0x12c
   17f88:	str	r4, [sp, #304]	; 0x130
   17f8c:	ldrb	r3, [r3]
   17f90:	cmp	r3, #0
   17f94:	bne	180c8 <close_stdout@@Base+0x5db8>
   17f98:	ldr	fp, [sp, #312]	; 0x138
   17f9c:	cmp	fp, #0
   17fa0:	beq	17e30 <close_stdout@@Base+0x5b20>
   17fa4:	b	17bd4 <close_stdout@@Base+0x58c4>
   17fa8:	ldr	r0, [sp, #244]	; 0xf4
   17fac:	bl	114d0 <strlen@plt>
   17fb0:	strb	r5, [sp, #252]	; 0xfc
   17fb4:	str	r0, [sp, #248]	; 0xf8
   17fb8:	b	17e88 <close_stdout@@Base+0x5b78>
   17fbc:	ldr	r3, [sp, #188]	; 0xbc
   17fc0:	str	r4, [sp, #192]	; 0xc0
   17fc4:	ldrb	r3, [r3]
   17fc8:	cmp	r3, #0
   17fcc:	bne	180c8 <close_stdout@@Base+0x5db8>
   17fd0:	ldr	r7, [sp, #200]	; 0xc8
   17fd4:	cmp	r7, #0
   17fd8:	beq	17830 <close_stdout@@Base+0x5520>
   17fdc:	b	17bd4 <close_stdout@@Base+0x58c4>
   17fe0:	ldr	r3, [sp, #76]	; 0x4c
   17fe4:	str	r7, [sp, #80]	; 0x50
   17fe8:	ldrb	r3, [r3]
   17fec:	cmp	r3, #0
   17ff0:	bne	180c8 <close_stdout@@Base+0x5db8>
   17ff4:	ldr	r4, [sp, #88]	; 0x58
   17ff8:	cmp	r4, #0
   17ffc:	beq	17630 <close_stdout@@Base+0x5320>
   18000:	b	17bd4 <close_stdout@@Base+0x58c4>
   18004:	ldr	r0, [sp, #16]
   18008:	add	r2, sp, #56	; 0x38
   1800c:	ldr	r1, [sp, #4]
   18010:	bl	16b48 <close_stdout@@Base+0x4838>
   18014:	cmp	r0, #0
   18018:	bne	1809c <close_stdout@@Base+0x5d8c>
   1801c:	str	r0, [sp, #32]
   18020:	ldrb	r3, [sp, #196]	; 0xc4
   18024:	str	r9, [sp, #28]
   18028:	b	1797c <close_stdout@@Base+0x566c>
   1802c:	str	r4, [sp, #136]	; 0x88
   18030:	ldrb	r3, [sl]
   18034:	strb	r4, [sp, #140]	; 0x8c
   18038:	str	r3, [sp, #144]	; 0x90
   1803c:	b	17cdc <close_stdout@@Base+0x59cc>
   18040:	ldr	r7, [sp, #312]	; 0x138
   18044:	mov	r0, r8
   18048:	strb	r4, [sp, #308]	; 0x134
   1804c:	bl	11374 <mbsinit@plt>
   18050:	cmp	r0, #0
   18054:	strbne	r5, [sp, #284]	; 0x11c
   18058:	b	17b28 <close_stdout@@Base+0x5818>
   1805c:	ldr	r0, [sp, #132]	; 0x84
   18060:	mov	r8, #0
   18064:	bl	114d0 <strlen@plt>
   18068:	strb	r5, [sp, #140]	; 0x8c
   1806c:	str	r0, [sp, #136]	; 0x88
   18070:	b	17cdc <close_stdout@@Base+0x59cc>
   18074:	str	r4, [sp, #304]	; 0x130
   18078:	strb	r7, [sp, #308]	; 0x134
   1807c:	ldr	fp, [sp, #300]	; 0x12c
   18080:	b	17ce8 <close_stdout@@Base+0x59d8>
   18084:	ldr	fp, [sp, #300]	; 0x12c
   18088:	mov	r0, fp
   1808c:	bl	114d0 <strlen@plt>
   18090:	strb	r7, [sp, #308]	; 0x134
   18094:	str	r0, [sp, #304]	; 0x130
   18098:	b	17ce8 <close_stdout@@Base+0x59d8>
   1809c:	ldr	r0, [sp, #56]	; 0x38
   180a0:	b	17660 <close_stdout@@Base+0x5350>
   180a4:	ldr	r0, [pc, #84]	; 18100 <close_stdout@@Base+0x5df0>
   180a8:	mov	r2, #150	; 0x96
   180ac:	ldr	r1, [pc, #80]	; 18104 <close_stdout@@Base+0x5df4>
   180b0:	ldr	r3, [pc, #80]	; 18108 <close_stdout@@Base+0x5df8>
   180b4:	add	r0, pc, r0
   180b8:	add	r1, pc, r1
   180bc:	add	r3, pc, r3
   180c0:	bl	11638 <__assert_fail@plt>
   180c4:	bl	11398 <__stack_chk_fail@plt>
   180c8:	ldr	r0, [pc, #60]	; 1810c <close_stdout@@Base+0x5dfc>
   180cc:	mov	r2, #178	; 0xb2
   180d0:	ldr	r1, [pc, #56]	; 18110 <close_stdout@@Base+0x5e00>
   180d4:	ldr	r3, [pc, #56]	; 18114 <close_stdout@@Base+0x5e04>
   180d8:	add	r0, pc, r0
   180dc:	add	r1, pc, r1
   180e0:	add	r3, pc, r3
   180e4:	bl	11638 <__assert_fail@plt>
   180e8:	andeq	r5, r1, r4, lsl #23
   180ec:	andeq	r0, r0, r0, asr #2
   180f0:	andeq	r0, r0, ip, lsr r1
   180f4:	andeq	r4, r0, r8, ror #2
   180f8:	andeq	r4, r0, ip, lsr r1
   180fc:	strdeq	r4, [r0], -ip
   18100:	andeq	r3, r0, r8, asr ip
   18104:	andeq	r3, r0, ip, ror #24
   18108:	andeq	r4, r0, ip, lsr #2
   1810c:	andeq	r3, r0, ip, asr ip
   18110:	andeq	r3, r0, r8, asr #24
   18114:	andeq	r4, r0, r8, lsl #2
   18118:	ldr	ip, [pc, #852]	; 18474 <close_stdout@@Base+0x6164>
   1811c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18120:	mov	r6, r2
   18124:	sub	sp, sp, #4160	; 0x1040
   18128:	ldr	r2, [pc, #840]	; 18478 <close_stdout@@Base+0x6168>
   1812c:	sub	sp, sp, #4
   18130:	add	ip, pc, ip
   18134:	mov	r5, #0
   18138:	movw	fp, #61424	; 0xeff0
   1813c:	str	r0, [sp, #24]
   18140:	mov	r0, r6
   18144:	str	r1, [sp, #16]
   18148:	mov	r1, r5
   1814c:	str	r3, [sp, #32]
   18150:	mov	r3, r5
   18154:	ldr	r2, [ip, r2]
   18158:	add	ip, sp, #8192	; 0x2000
   1815c:	str	r5, [sp]
   18160:	movt	fp, #65535	; 0xffff
   18164:	ldr	ip, [ip, #-3992]	; 0xfffff068
   18168:	str	r2, [sp, #20]
   1816c:	mov	r2, r5
   18170:	ldr	lr, [sp, #20]
   18174:	str	ip, [sp, #28]
   18178:	ldr	ip, [lr]
   1817c:	add	lr, sp, #8192	; 0x2000
   18180:	str	ip, [lr, #-4036]	; 0xfffff03c
   18184:	bl	112fc <iconv@plt>
   18188:	ldr	ip, [sp, #16]
   1818c:	add	lr, sp, #4160	; 0x1040
   18190:	movw	r3, #61420	; 0xefec
   18194:	cmp	ip, r5
   18198:	ldr	ip, [sp, #24]
   1819c:	movt	r3, #65535	; 0xffff
   181a0:	str	ip, [lr, r3]
   181a4:	ldr	ip, [sp, #16]
   181a8:	str	ip, [lr, fp]
   181ac:	beq	18450 <close_stdout@@Base+0x6140>
   181b0:	movw	r9, #61432	; 0xeff8
   181b4:	movt	r9, #65535	; 0xffff
   181b8:	movw	sl, #61428	; 0xeff4
   181bc:	movt	sl, #65535	; 0xffff
   181c0:	mov	r3, r9
   181c4:	add	ip, sp, #64	; 0x40
   181c8:	mov	r9, sl
   181cc:	str	ip, [sp, #36]	; 0x24
   181d0:	add	r4, sp, #60	; 0x3c
   181d4:	add	ip, sp, #44	; 0x2c
   181d8:	add	r7, sp, #52	; 0x34
   181dc:	str	ip, [sp, #8]
   181e0:	add	r8, sp, #56	; 0x38
   181e4:	add	ip, sp, #48	; 0x30
   181e8:	mov	sl, r3
   181ec:	str	ip, [sp, #12]
   181f0:	b	18210 <close_stdout@@Base+0x5f00>
   181f4:	add	lr, sp, #4160	; 0x1040
   181f8:	ldr	r2, [lr, fp]
   181fc:	ldr	r3, [lr, r9]
   18200:	cmp	r2, #0
   18204:	rsb	r3, r4, r3
   18208:	add	r5, r5, r3
   1820c:	beq	18258 <close_stdout@@Base+0x5f48>
   18210:	add	lr, sp, #4160	; 0x1040
   18214:	str	r8, [sp]
   18218:	mov	ip, #4096	; 0x1000
   1821c:	mov	r0, r6
   18220:	add	r1, sp, #44	; 0x2c
   18224:	add	r2, sp, #48	; 0x30
   18228:	mov	r3, r7
   1822c:	str	r4, [lr, r9]
   18230:	str	ip, [lr, sl]
   18234:	bl	112fc <iconv@plt>
   18238:	cmn	r0, #1
   1823c:	bne	181f4 <close_stdout@@Base+0x5ee4>
   18240:	bl	114f4 <__errno_location@plt>
   18244:	ldr	r3, [r0]
   18248:	cmp	r3, #7
   1824c:	beq	181f4 <close_stdout@@Base+0x5ee4>
   18250:	cmp	r3, #22
   18254:	bne	18448 <close_stdout@@Base+0x6138>
   18258:	add	lr, sp, #4160	; 0x1040
   1825c:	movw	r9, #61428	; 0xeff4
   18260:	movw	r3, #61432	; 0xeff8
   18264:	movt	r9, #65535	; 0xffff
   18268:	movt	r3, #65535	; 0xffff
   1826c:	mov	r1, #0
   18270:	str	r8, [sp]
   18274:	mov	ip, #4096	; 0x1000
   18278:	mov	r2, r1
   1827c:	str	ip, [lr, r3]
   18280:	mov	r0, r6
   18284:	str	r4, [lr, r9]
   18288:	mov	r3, r7
   1828c:	bl	112fc <iconv@plt>
   18290:	cmn	r0, #1
   18294:	beq	18448 <close_stdout@@Base+0x6138>
   18298:	add	r0, sp, #4160	; 0x1040
   1829c:	ldr	r3, [r0, r9]
   182a0:	rsb	r4, r4, r3
   182a4:	adds	r5, r5, r4
   182a8:	beq	183f8 <close_stdout@@Base+0x60e8>
   182ac:	ldr	ip, [sp, #32]
   182b0:	ldr	r4, [ip]
   182b4:	cmp	r4, #0
   182b8:	beq	183d4 <close_stdout@@Base+0x60c4>
   182bc:	ldr	ip, [sp, #28]
   182c0:	ldr	r3, [ip]
   182c4:	cmp	r5, r3
   182c8:	bhi	183d4 <close_stdout@@Base+0x60c4>
   182cc:	mov	r3, #0
   182d0:	mov	r0, r6
   182d4:	mov	r1, r3
   182d8:	mov	r2, r3
   182dc:	str	r3, [sp]
   182e0:	movw	sl, #61424	; 0xeff0
   182e4:	bl	112fc <iconv@plt>
   182e8:	ldr	ip, [sp, #24]
   182ec:	add	lr, sp, #4160	; 0x1040
   182f0:	movw	r3, #61420	; 0xefec
   182f4:	movt	r3, #65535	; 0xffff
   182f8:	movt	sl, #65535	; 0xffff
   182fc:	movw	r1, #61428	; 0xeff4
   18300:	movw	r2, #61432	; 0xeff8
   18304:	str	ip, [lr, r3]
   18308:	movt	r1, #65535	; 0xffff
   1830c:	ldr	ip, [sp, #16]
   18310:	movt	r2, #65535	; 0xffff
   18314:	str	r4, [lr, r1]
   18318:	str	r5, [lr, r2]
   1831c:	str	ip, [lr, sl]
   18320:	mov	r3, ip
   18324:	ldr	ip, [sp, #36]	; 0x24
   18328:	sub	fp, ip, #20
   1832c:	sub	r9, ip, #16
   18330:	b	1835c <close_stdout@@Base+0x604c>
   18334:	str	r8, [sp]
   18338:	mov	r0, r6
   1833c:	mov	r1, fp
   18340:	mov	r2, r9
   18344:	mov	r3, r7
   18348:	bl	112fc <iconv@plt>
   1834c:	cmn	r0, #1
   18350:	beq	18408 <close_stdout@@Base+0x60f8>
   18354:	add	lr, sp, #4160	; 0x1040
   18358:	ldr	r3, [lr, sl]
   1835c:	cmp	r3, #0
   18360:	bne	18334 <close_stdout@@Base+0x6024>
   18364:	mov	r1, #0
   18368:	str	r8, [sp]
   1836c:	mov	r0, r6
   18370:	mov	r3, r7
   18374:	mov	r2, r1
   18378:	bl	112fc <iconv@plt>
   1837c:	cmn	r0, #1
   18380:	beq	18418 <close_stdout@@Base+0x6108>
   18384:	movw	r3, #61432	; 0xeff8
   18388:	add	r0, sp, #4160	; 0x1040
   1838c:	movt	r3, #65535	; 0xffff
   18390:	ldr	r3, [r0, r3]
   18394:	cmp	r3, #0
   18398:	bne	1846c <close_stdout@@Base+0x615c>
   1839c:	ldr	ip, [sp, #32]
   183a0:	str	r4, [ip]
   183a4:	ldr	ip, [sp, #28]
   183a8:	str	r5, [ip]
   183ac:	ldr	ip, [sp, #20]
   183b0:	add	r0, sp, #8192	; 0x2000
   183b4:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   183b8:	mov	r0, r3
   183bc:	ldr	r3, [ip]
   183c0:	cmp	r2, r3
   183c4:	bne	18470 <close_stdout@@Base+0x6160>
   183c8:	add	sp, sp, #4160	; 0x1040
   183cc:	add	sp, sp, #4
   183d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183d4:	mov	r0, r5
   183d8:	bl	1144c <malloc@plt>
   183dc:	subs	r4, r0, #0
   183e0:	bne	182cc <close_stdout@@Base+0x5fbc>
   183e4:	bl	114f4 <__errno_location@plt>
   183e8:	mov	r2, #12
   183ec:	mvn	r3, #0
   183f0:	str	r2, [r0]
   183f4:	b	183ac <close_stdout@@Base+0x609c>
   183f8:	ldr	ip, [sp, #28]
   183fc:	mov	r3, r5
   18400:	str	r5, [ip]
   18404:	b	183ac <close_stdout@@Base+0x609c>
   18408:	bl	114f4 <__errno_location@plt>
   1840c:	ldr	r3, [r0]
   18410:	cmp	r3, #22
   18414:	beq	18364 <close_stdout@@Base+0x6054>
   18418:	ldr	ip, [sp, #32]
   1841c:	ldr	r3, [ip]
   18420:	cmp	r3, r4
   18424:	beq	18448 <close_stdout@@Base+0x6138>
   18428:	bl	114f4 <__errno_location@plt>
   1842c:	ldr	r6, [r0]
   18430:	mov	r5, r0
   18434:	mov	r0, r4
   18438:	bl	11338 <free@plt>
   1843c:	mvn	r3, #0
   18440:	str	r6, [r5]
   18444:	b	183ac <close_stdout@@Base+0x609c>
   18448:	mvn	r3, #0
   1844c:	b	183ac <close_stdout@@Base+0x609c>
   18450:	add	ip, sp, #64	; 0x40
   18454:	add	r4, sp, #60	; 0x3c
   18458:	str	ip, [sp, #36]	; 0x24
   1845c:	add	r7, sp, #52	; 0x34
   18460:	add	r8, sp, #56	; 0x38
   18464:	ldr	r5, [sp, #16]
   18468:	b	18258 <close_stdout@@Base+0x5f48>
   1846c:	bl	11614 <abort@plt>
   18470:	bl	11398 <__stack_chk_fail@plt>
   18474:	andeq	r4, r1, r8, asr #29
   18478:	andeq	r0, r0, r0, asr #2
   1847c:	ldr	r3, [pc, #524]	; 18690 <close_stdout@@Base+0x6380>
   18480:	ldr	r2, [pc, #524]	; 18694 <close_stdout@@Base+0x6384>
   18484:	add	r3, pc, r3
   18488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1848c:	sub	sp, sp, #52	; 0x34
   18490:	ldr	r2, [r3, r2]
   18494:	mov	r6, r1
   18498:	str	r0, [sp, #28]
   1849c:	ldr	r3, [r2]
   184a0:	str	r2, [sp, #20]
   184a4:	str	r3, [sp, #44]	; 0x2c
   184a8:	bl	114d0 <strlen@plt>
   184ac:	cmp	r0, #4096	; 0x1000
   184b0:	mov	fp, r0
   184b4:	lslcc	fp, r0, #4
   184b8:	str	r0, [sp, #32]
   184bc:	add	r5, fp, #1
   184c0:	mov	r0, r5
   184c4:	bl	1144c <malloc@plt>
   184c8:	subs	r4, r0, #0
   184cc:	beq	1867c <close_stdout@@Base+0x636c>
   184d0:	mov	r3, #0
   184d4:	add	r2, sp, #32
   184d8:	mov	r1, r3
   184dc:	str	r2, [sp, #16]
   184e0:	str	r3, [sp]
   184e4:	mov	r2, r3
   184e8:	mov	r0, r6
   184ec:	add	sl, sp, #28
   184f0:	bl	112fc <iconv@plt>
   184f4:	add	r8, sp, #36	; 0x24
   184f8:	add	r7, sp, #40	; 0x28
   184fc:	str	r4, [sp, #36]	; 0x24
   18500:	str	fp, [sp, #40]	; 0x28
   18504:	b	18568 <close_stdout@@Base+0x6258>
   18508:	bl	114f4 <__errno_location@plt>
   1850c:	ldr	r3, [r0]
   18510:	mov	fp, r0
   18514:	cmp	r3, #22
   18518:	beq	185e4 <close_stdout@@Base+0x62d4>
   1851c:	cmp	r3, #7
   18520:	bne	18644 <close_stdout@@Base+0x6334>
   18524:	lsl	r9, r5, #1
   18528:	ldr	r1, [sp, #36]	; 0x24
   1852c:	cmp	r5, r9
   18530:	rsb	r5, r4, r1
   18534:	bcs	1863c <close_stdout@@Base+0x632c>
   18538:	mov	r0, r4
   1853c:	mov	r1, r9
   18540:	bl	113a4 <realloc@plt>
   18544:	cmp	r0, #0
   18548:	beq	1863c <close_stdout@@Base+0x632c>
   1854c:	sub	r1, r9, #1
   18550:	add	r2, r0, r5
   18554:	mov	r4, r0
   18558:	rsb	r5, r5, r1
   1855c:	str	r5, [sp, #40]	; 0x28
   18560:	mov	r5, r9
   18564:	str	r2, [sp, #36]	; 0x24
   18568:	str	r7, [sp]
   1856c:	mov	r0, r6
   18570:	mov	r1, sl
   18574:	add	r2, sp, #32
   18578:	mov	r3, r8
   1857c:	bl	112fc <iconv@plt>
   18580:	cmn	r0, #1
   18584:	beq	18508 <close_stdout@@Base+0x61f8>
   18588:	b	185e4 <close_stdout@@Base+0x62d4>
   1858c:	bl	114f4 <__errno_location@plt>
   18590:	ldr	r3, [r0]
   18594:	mov	fp, r0
   18598:	cmp	r3, #7
   1859c:	bne	18644 <close_stdout@@Base+0x6334>
   185a0:	lsl	r9, r5, #1
   185a4:	ldr	r3, [sp, #36]	; 0x24
   185a8:	cmp	r5, r9
   185ac:	rsb	r5, r4, r3
   185b0:	bcs	1863c <close_stdout@@Base+0x632c>
   185b4:	mov	r0, r4
   185b8:	mov	r1, r9
   185bc:	bl	113a4 <realloc@plt>
   185c0:	cmp	r0, #0
   185c4:	beq	1863c <close_stdout@@Base+0x632c>
   185c8:	sub	r2, r9, #1
   185cc:	add	r3, r0, r5
   185d0:	mov	r4, r0
   185d4:	rsb	r5, r5, r2
   185d8:	str	r5, [sp, #40]	; 0x28
   185dc:	mov	r5, r9
   185e0:	str	r3, [sp, #36]	; 0x24
   185e4:	mov	r1, #0
   185e8:	str	r7, [sp]
   185ec:	mov	r2, r1
   185f0:	mov	r0, r6
   185f4:	mov	r3, r8
   185f8:	bl	112fc <iconv@plt>
   185fc:	cmn	r0, #1
   18600:	beq	1858c <close_stdout@@Base+0x627c>
   18604:	ldr	r3, [sp, #36]	; 0x24
   18608:	mov	r2, #0
   1860c:	add	r1, r3, #1
   18610:	str	r1, [sp, #36]	; 0x24
   18614:	strb	r2, [r3]
   18618:	ldr	r1, [sp, #36]	; 0x24
   1861c:	rsb	r1, r4, r1
   18620:	cmp	r1, r5
   18624:	bcs	1865c <close_stdout@@Base+0x634c>
   18628:	mov	r0, r4
   1862c:	bl	113a4 <realloc@plt>
   18630:	cmp	r0, #0
   18634:	movne	r4, r0
   18638:	b	1865c <close_stdout@@Base+0x634c>
   1863c:	mov	r3, #12
   18640:	str	r3, [fp]
   18644:	mov	r0, r4
   18648:	str	r3, [sp, #12]
   1864c:	bl	11338 <free@plt>
   18650:	ldr	r3, [sp, #12]
   18654:	mov	r4, #0
   18658:	str	r3, [fp]
   1865c:	ldr	r1, [sp, #20]
   18660:	mov	r0, r4
   18664:	ldr	r2, [sp, #44]	; 0x2c
   18668:	ldr	r3, [r1]
   1866c:	cmp	r2, r3
   18670:	bne	1868c <close_stdout@@Base+0x637c>
   18674:	add	sp, sp, #52	; 0x34
   18678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1867c:	bl	114f4 <__errno_location@plt>
   18680:	mov	r3, #12
   18684:	str	r3, [r0]
   18688:	b	1865c <close_stdout@@Base+0x634c>
   1868c:	bl	11398 <__stack_chk_fail@plt>
   18690:	andeq	r4, r1, r4, ror fp
   18694:	andeq	r0, r0, r0, asr #2
   18698:	push	{r3, r4, r5, r6, r7, lr}
   1869c:	mov	r4, r0
   186a0:	ldrb	r3, [r0]
   186a4:	mov	r5, r1
   186a8:	mov	r6, r2
   186ac:	cmp	r3, #0
   186b0:	beq	186c8 <close_stdout@@Base+0x63b8>
   186b4:	mov	r0, r1
   186b8:	mov	r1, r2
   186bc:	bl	16208 <close_stdout@@Base+0x3ef8>
   186c0:	cmp	r0, #0
   186c4:	bne	186e4 <close_stdout@@Base+0x63d4>
   186c8:	mov	r0, r4
   186cc:	bl	11524 <__strdup@plt>
   186d0:	subs	r4, r0, #0
   186d4:	beq	18740 <close_stdout@@Base+0x6430>
   186d8:	mov	r3, r4
   186dc:	mov	r0, r3
   186e0:	pop	{r3, r4, r5, r6, r7, pc}
   186e4:	mov	r1, r5
   186e8:	mov	r0, r6
   186ec:	bl	11458 <iconv_open@plt>
   186f0:	cmn	r0, #1
   186f4:	mov	r5, r0
   186f8:	beq	18758 <close_stdout@@Base+0x6448>
   186fc:	mov	r0, r4
   18700:	mov	r1, r5
   18704:	bl	1847c <close_stdout@@Base+0x616c>
   18708:	subs	r4, r0, #0
   1870c:	beq	18760 <close_stdout@@Base+0x6450>
   18710:	mov	r0, r5
   18714:	bl	112f0 <iconv_close@plt>
   18718:	cmp	r0, #0
   1871c:	bge	186d8 <close_stdout@@Base+0x63c8>
   18720:	bl	114f4 <__errno_location@plt>
   18724:	ldr	r6, [r0]
   18728:	mov	r5, r0
   1872c:	mov	r0, r4
   18730:	bl	11338 <free@plt>
   18734:	mov	r3, #0
   18738:	str	r6, [r5]
   1873c:	b	186dc <close_stdout@@Base+0x63cc>
   18740:	bl	114f4 <__errno_location@plt>
   18744:	mov	r3, r4
   18748:	mov	r2, #12
   1874c:	str	r2, [r0]
   18750:	mov	r0, r3
   18754:	pop	{r3, r4, r5, r6, r7, pc}
   18758:	mov	r3, #0
   1875c:	b	186dc <close_stdout@@Base+0x63cc>
   18760:	bl	114f4 <__errno_location@plt>
   18764:	ldr	r7, [r0]
   18768:	mov	r6, r0
   1876c:	mov	r0, r5
   18770:	bl	112f0 <iconv_close@plt>
   18774:	mov	r3, r4
   18778:	str	r7, [r6]
   1877c:	b	186dc <close_stdout@@Base+0x63cc>
   18780:	push	{r4, r5, r6, lr}
   18784:	sub	sp, sp, #8
   18788:	mov	r4, r0
   1878c:	bl	11554 <fileno@plt>
   18790:	cmp	r0, #0
   18794:	mov	r0, r4
   18798:	blt	18814 <close_stdout@@Base+0x6504>
   1879c:	bl	11470 <__freading@plt>
   187a0:	cmp	r0, #0
   187a4:	bne	187e0 <close_stdout@@Base+0x64d0>
   187a8:	mov	r0, r4
   187ac:	bl	18820 <close_stdout@@Base+0x6510>
   187b0:	cmp	r0, #0
   187b4:	beq	18810 <close_stdout@@Base+0x6500>
   187b8:	bl	114f4 <__errno_location@plt>
   187bc:	ldr	r6, [r0]
   187c0:	mov	r5, r0
   187c4:	mov	r0, r4
   187c8:	bl	11584 <fclose@plt>
   187cc:	cmp	r6, #0
   187d0:	mvnne	r0, #0
   187d4:	strne	r6, [r5]
   187d8:	add	sp, sp, #8
   187dc:	pop	{r4, r5, r6, pc}
   187e0:	mov	r0, r4
   187e4:	bl	11554 <fileno@plt>
   187e8:	mov	r1, #1
   187ec:	mov	r2, #0
   187f0:	mov	r3, #0
   187f4:	str	r1, [sp]
   187f8:	bl	113ec <lseek64@plt>
   187fc:	mvn	r2, #0
   18800:	mvn	r3, #0
   18804:	cmp	r1, r3
   18808:	cmpeq	r0, r2
   1880c:	bne	187a8 <close_stdout@@Base+0x6498>
   18810:	mov	r0, r4
   18814:	add	sp, sp, #8
   18818:	pop	{r4, r5, r6, lr}
   1881c:	b	11584 <fclose@plt>
   18820:	push	{r4, lr}
   18824:	subs	r4, r0, #0
   18828:	sub	sp, sp, #8
   1882c:	beq	1883c <close_stdout@@Base+0x652c>
   18830:	bl	11470 <__freading@plt>
   18834:	cmp	r0, #0
   18838:	bne	1884c <close_stdout@@Base+0x653c>
   1883c:	mov	r0, r4
   18840:	add	sp, sp, #8
   18844:	pop	{r4, lr}
   18848:	b	11314 <fflush@plt>
   1884c:	ldr	r3, [r4]
   18850:	tst	r3, #256	; 0x100
   18854:	beq	1883c <close_stdout@@Base+0x652c>
   18858:	mov	r3, #1
   1885c:	mov	r0, r4
   18860:	str	r3, [sp]
   18864:	mov	r2, #0
   18868:	mov	r3, #0
   1886c:	bl	18880 <close_stdout@@Base+0x6570>
   18870:	mov	r0, r4
   18874:	add	sp, sp, #8
   18878:	pop	{r4, lr}
   1887c:	b	11314 <fflush@plt>
   18880:	push	{r4, r5, r6, r7, lr}
   18884:	sub	sp, sp, #20
   18888:	ldmib	r0, {r1, ip}
   1888c:	mov	r6, r0
   18890:	ldr	r4, [sp, #40]	; 0x28
   18894:	cmp	ip, r1
   18898:	beq	188b0 <close_stdout@@Base+0x65a0>
   1889c:	str	r4, [sp, #40]	; 0x28
   188a0:	mov	r0, r6
   188a4:	add	sp, sp, #20
   188a8:	pop	{r4, r5, r6, r7, lr}
   188ac:	b	1159c <fseeko64@plt>
   188b0:	ldr	ip, [r0, #20]
   188b4:	ldr	r1, [r0, #16]
   188b8:	cmp	ip, r1
   188bc:	bne	1889c <close_stdout@@Base+0x658c>
   188c0:	ldr	r7, [r0, #36]	; 0x24
   188c4:	cmp	r7, #0
   188c8:	bne	1889c <close_stdout@@Base+0x658c>
   188cc:	str	r2, [sp, #12]
   188d0:	mvn	r5, #0
   188d4:	str	r3, [sp, #8]
   188d8:	bl	11554 <fileno@plt>
   188dc:	str	r4, [sp]
   188e0:	mvn	r4, #0
   188e4:	ldr	r2, [sp, #12]
   188e8:	ldr	r3, [sp, #8]
   188ec:	bl	113ec <lseek64@plt>
   188f0:	mov	r2, r0
   188f4:	mov	r3, r1
   188f8:	cmp	r3, r5
   188fc:	cmpeq	r2, r4
   18900:	beq	18920 <close_stdout@@Base+0x6610>
   18904:	ldr	r1, [r6]
   18908:	mov	r0, r7
   1890c:	strd	r2, [r6, #80]	; 0x50
   18910:	bic	r3, r1, #16
   18914:	str	r3, [r6]
   18918:	add	sp, sp, #20
   1891c:	pop	{r4, r5, r6, r7, pc}
   18920:	mvn	r0, #0
   18924:	b	18918 <close_stdout@@Base+0x6608>
   18928:	ldr	ip, [pc, #3636]	; 19764 <close_stdout@@Base+0x7454>
   1892c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18930:	add	fp, sp, #32
   18934:	ldr	lr, [pc, #3628]	; 19768 <close_stdout@@Base+0x7458>
   18938:	sub	sp, sp, #564	; 0x234
   1893c:	add	ip, pc, ip
   18940:	str	r0, [fp, #-504]	; 0xfffffe08
   18944:	sub	r4, fp, #484	; 0x1e4
   18948:	str	r1, [fp, #-536]	; 0xfffffde8
   1894c:	mov	r0, r2
   18950:	ldr	lr, [ip, lr]
   18954:	mov	r5, r2
   18958:	sub	r1, fp, #364	; 0x16c
   1895c:	mov	r2, r4
   18960:	mov	r6, r3
   18964:	ldr	ip, [lr]
   18968:	str	lr, [fp, #-528]	; 0xfffffdf0
   1896c:	str	ip, [fp, #-40]	; 0xffffffd8
   18970:	bl	19bf8 <close_stdout@@Base+0x78e8>
   18974:	cmp	r0, #0
   18978:	blt	19468 <close_stdout@@Base+0x7158>
   1897c:	mov	r0, r6
   18980:	mov	r1, r4
   18984:	bl	19aa8 <close_stdout@@Base+0x7798>
   18988:	cmp	r0, #0
   1898c:	blt	19528 <close_stdout@@Base+0x7218>
   18990:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   18994:	ldr	r2, [fp, #-352]	; 0xfffffea0
   18998:	add	r3, r3, #7
   1899c:	cmp	r3, #6
   189a0:	mvnls	r3, #0
   189a4:	adds	r3, r3, r2
   189a8:	bcs	18cc4 <close_stdout@@Base+0x69b4>
   189ac:	adds	r0, r3, #6
   189b0:	bcs	18cc4 <close_stdout@@Base+0x69b4>
   189b4:	cmp	r0, #4000	; 0xfa0
   189b8:	bcs	1940c <close_stdout@@Base+0x70fc>
   189bc:	add	r3, r3, #20
   189c0:	mov	r1, #0
   189c4:	bic	r3, r3, #7
   189c8:	str	r1, [fp, #-548]	; 0xfffffddc
   189cc:	sub	sp, sp, r3
   189d0:	add	r2, sp, #32
   189d4:	str	r2, [fp, #-512]	; 0xfffffe00
   189d8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   189dc:	sub	r2, fp, #496	; 0x1f0
   189e0:	str	r2, [fp, #-532]	; 0xfffffdec
   189e4:	mov	ip, #0
   189e8:	cmp	r3, #0
   189ec:	ldr	r3, [fp, #-360]	; 0xfffffe98
   189f0:	ldr	r2, [fp, #-504]	; 0xfffffe08
   189f4:	mov	r6, ip
   189f8:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   189fc:	add	r7, r3, #44	; 0x2c
   18a00:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   18a04:	str	ip, [fp, #-520]	; 0xfffffdf8
   18a08:	ldrne	r4, [r1]
   18a0c:	ldr	sl, [r7, #-44]	; 0xffffffd4
   18a10:	sub	r3, r7, #44	; 0x2c
   18a14:	str	r3, [fp, #-540]	; 0xfffffde4
   18a18:	cmp	sl, r5
   18a1c:	beq	192d8 <close_stdout@@Base+0x6fc8>
   18a20:	rsb	r3, r5, sl
   18a24:	adds	r9, r3, r6
   18a28:	mvncs	r9, #0
   18a2c:	cmp	r4, r9
   18a30:	bcs	19268 <close_stdout@@Base+0x6f58>
   18a34:	cmp	r4, #0
   18a38:	beq	19134 <close_stdout@@Base+0x6e24>
   18a3c:	blt	19564 <close_stdout@@Base+0x7254>
   18a40:	lsl	r4, r4, #1
   18a44:	cmp	r4, r9
   18a48:	movcc	r4, r9
   18a4c:	cmn	r4, #1
   18a50:	beq	19564 <close_stdout@@Base+0x7254>
   18a54:	ldr	r1, [fp, #-504]	; 0xfffffe08
   18a58:	subs	lr, r2, r1
   18a5c:	rsbs	r8, lr, #0
   18a60:	adcs	r8, r8, lr
   18a64:	cmp	r2, r1
   18a68:	cmpne	r2, #0
   18a6c:	bne	1913c <close_stdout@@Base+0x6e2c>
   18a70:	mov	r0, r4
   18a74:	str	r2, [fp, #-560]	; 0xfffffdd0
   18a78:	str	r3, [fp, #-556]	; 0xfffffdd4
   18a7c:	bl	1144c <malloc@plt>
   18a80:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   18a84:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   18a88:	mov	sl, r0
   18a8c:	cmp	sl, #0
   18a90:	beq	19564 <close_stdout@@Base+0x7254>
   18a94:	cmp	r6, #0
   18a98:	moveq	r8, #0
   18a9c:	andne	r8, r8, #1
   18aa0:	cmp	r8, #0
   18aa4:	bne	192bc <close_stdout@@Base+0x6fac>
   18aa8:	add	r0, sl, r6
   18aac:	mov	r1, r5
   18ab0:	mov	r2, r3
   18ab4:	bl	11350 <memcpy@plt>
   18ab8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18abc:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   18ac0:	cmp	r3, r2
   18ac4:	beq	19578 <close_stdout@@Base+0x7268>
   18ac8:	ldrb	r3, [r7, #-8]
   18acc:	cmp	r3, #37	; 0x25
   18ad0:	beq	19160 <close_stdout@@Base+0x6e50>
   18ad4:	ldr	r2, [r7, #-4]
   18ad8:	cmn	r2, #1
   18adc:	beq	19448 <close_stdout@@Base+0x7138>
   18ae0:	cmp	r3, #110	; 0x6e
   18ae4:	beq	1928c <close_stdout@@Base+0x6f7c>
   18ae8:	ldr	r1, [fp, #-480]	; 0xfffffe20
   18aec:	ldr	r3, [r7, #-36]	; 0xffffffdc
   18af0:	ldr	r8, [r1, r2, lsl #4]
   18af4:	tst	r3, #1
   18af8:	ldr	r1, [fp, #-512]	; 0xfffffe00
   18afc:	mov	r2, #37	; 0x25
   18b00:	addeq	r5, r1, #1
   18b04:	strb	r2, [r1]
   18b08:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   18b0c:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   18b10:	addne	r5, r2, #2
   18b14:	movne	r2, #39	; 0x27
   18b18:	strbne	r2, [r1, #1]
   18b1c:	tst	r3, #2
   18b20:	movne	r2, #45	; 0x2d
   18b24:	strbne	r2, [r5]
   18b28:	addne	r5, r5, #1
   18b2c:	tst	r3, #4
   18b30:	movne	r2, #43	; 0x2b
   18b34:	strbne	r2, [r5]
   18b38:	addne	r5, r5, #1
   18b3c:	tst	r3, #8
   18b40:	movne	r2, #32
   18b44:	strbne	r2, [r5]
   18b48:	addne	r5, r5, #1
   18b4c:	tst	r3, #16
   18b50:	movne	r2, #35	; 0x23
   18b54:	strbne	r2, [r5]
   18b58:	addne	r5, r5, #1
   18b5c:	tst	r3, #64	; 0x40
   18b60:	movne	r2, #73	; 0x49
   18b64:	strbne	r2, [r5]
   18b68:	addne	r5, r5, #1
   18b6c:	tst	r3, #32
   18b70:	movne	r3, #48	; 0x30
   18b74:	strbne	r3, [r5]
   18b78:	ldr	r1, [r7, #-32]	; 0xffffffe0
   18b7c:	addne	r5, r5, #1
   18b80:	ldr	r2, [r7, #-28]	; 0xffffffe4
   18b84:	cmp	r1, r2
   18b88:	beq	18b9c <close_stdout@@Base+0x688c>
   18b8c:	rsb	r2, r1, r2
   18b90:	mov	r0, r5
   18b94:	add	r5, r5, r2
   18b98:	bl	11350 <memcpy@plt>
   18b9c:	ldr	r1, [r7, #-20]	; 0xffffffec
   18ba0:	ldr	r2, [r7, #-16]
   18ba4:	cmp	r1, r2
   18ba8:	beq	18bbc <close_stdout@@Base+0x68ac>
   18bac:	rsb	r2, r1, r2
   18bb0:	mov	r0, r5
   18bb4:	add	r5, r5, r2
   18bb8:	bl	11350 <memcpy@plt>
   18bbc:	sub	r3, r8, #7
   18bc0:	cmp	r3, #9
   18bc4:	bhi	18bec <close_stdout@@Base+0x68dc>
   18bc8:	mov	r2, #1
   18bcc:	lsl	r3, r2, r3
   18bd0:	movw	r2, #643	; 0x283
   18bd4:	and	r2, r3, r2
   18bd8:	cmp	r2, #0
   18bdc:	beq	192e4 <close_stdout@@Base+0x6fd4>
   18be0:	mov	r3, #108	; 0x6c
   18be4:	add	r5, r5, #1
   18be8:	strb	r3, [r5, #-1]
   18bec:	ldrb	r3, [r7, #-8]
   18bf0:	mov	r1, #0
   18bf4:	strb	r1, [r5, #1]
   18bf8:	strb	r3, [r5]
   18bfc:	ldr	r3, [r7, #-24]	; 0xffffffe8
   18c00:	cmn	r3, #1
   18c04:	beq	19404 <close_stdout@@Base+0x70f4>
   18c08:	ldr	r2, [fp, #-480]	; 0xfffffe20
   18c0c:	add	r1, r2, r3, lsl #4
   18c10:	ldr	r3, [r2, r3, lsl #4]
   18c14:	cmp	r3, #5
   18c18:	bne	19448 <close_stdout@@Base+0x7138>
   18c1c:	ldr	r3, [r1, #8]
   18c20:	mov	r6, #1
   18c24:	str	r3, [fp, #-492]	; 0xfffffe14
   18c28:	ldr	r3, [r7, #-12]
   18c2c:	cmn	r3, #1
   18c30:	beq	18c5c <close_stdout@@Base+0x694c>
   18c34:	ldr	r2, [fp, #-480]	; 0xfffffe20
   18c38:	add	r1, r2, r3, lsl #4
   18c3c:	ldr	r3, [r2, r3, lsl #4]
   18c40:	cmp	r3, #5
   18c44:	bne	19448 <close_stdout@@Base+0x7138>
   18c48:	ldr	r2, [r1, #8]
   18c4c:	sub	r1, fp, #36	; 0x24
   18c50:	add	r3, r1, r6, lsl #2
   18c54:	add	r6, r6, #1
   18c58:	str	r2, [r3, #-456]	; 0xfffffe38
   18c5c:	adds	r2, r9, #2
   18c60:	str	r2, [fp, #-524]	; 0xfffffdf4
   18c64:	mov	r3, r2
   18c68:	mvncs	r3, #0
   18c6c:	cmp	r4, r3
   18c70:	bcs	18dac <close_stdout@@Base+0x6a9c>
   18c74:	cmp	r4, #0
   18c78:	beq	18d24 <close_stdout@@Base+0x6a14>
   18c7c:	blt	19750 <close_stdout@@Base+0x7440>
   18c80:	cmp	r9, r2
   18c84:	lsl	r4, r4, #1
   18c88:	bls	18d34 <close_stdout@@Base+0x6a24>
   18c8c:	str	sl, [fp, #-560]	; 0xfffffdd0
   18c90:	bl	114f4 <__errno_location@plt>
   18c94:	str	r0, [fp, #-516]	; 0xfffffdfc
   18c98:	mov	r2, sl
   18c9c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   18ca0:	cmp	r2, #0
   18ca4:	cmpne	r2, r3
   18ca8:	bne	196f0 <close_stdout@@Base+0x73e0>
   18cac:	ldr	r1, [fp, #-548]	; 0xfffffddc
   18cb0:	cmp	r1, #0
   18cb4:	beq	18cc4 <close_stdout@@Base+0x69b4>
   18cb8:	mov	r0, r1
   18cbc:	bl	11338 <free@plt>
   18cc0:	b	18ccc <close_stdout@@Base+0x69bc>
   18cc4:	bl	114f4 <__errno_location@plt>
   18cc8:	str	r0, [fp, #-516]	; 0xfffffdfc
   18ccc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   18cd0:	sub	r3, fp, #348	; 0x15c
   18cd4:	cmp	r0, r3
   18cd8:	beq	18ce0 <close_stdout@@Base+0x69d0>
   18cdc:	bl	11338 <free@plt>
   18ce0:	ldr	r0, [fp, #-480]	; 0xfffffe20
   18ce4:	sub	r3, fp, #476	; 0x1dc
   18ce8:	cmp	r0, r3
   18cec:	beq	18cf4 <close_stdout@@Base+0x69e4>
   18cf0:	bl	11338 <free@plt>
   18cf4:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   18cf8:	mov	r3, #0
   18cfc:	mov	r2, #12
   18d00:	str	r2, [r1]
   18d04:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   18d08:	mov	r0, r3
   18d0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d10:	ldr	r3, [r1]
   18d14:	cmp	r2, r3
   18d18:	bne	1974c <close_stdout@@Base+0x743c>
   18d1c:	sub	sp, fp, #32
   18d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d24:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   18d28:	cmp	r9, r3
   18d2c:	bhi	18c8c <close_stdout@@Base+0x697c>
   18d30:	mov	r4, #12
   18d34:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   18d38:	cmp	r3, r4
   18d3c:	movcs	r4, r3
   18d40:	cmn	r4, #1
   18d44:	beq	18c8c <close_stdout@@Base+0x697c>
   18d48:	ldr	r1, [fp, #-504]	; 0xfffffe08
   18d4c:	subs	r0, sl, r1
   18d50:	rsbs	r2, r0, #0
   18d54:	adcs	r2, r2, r0
   18d58:	cmp	sl, r1
   18d5c:	cmpne	sl, #0
   18d60:	bne	1942c <close_stdout@@Base+0x711c>
   18d64:	mov	r0, r4
   18d68:	str	r2, [fp, #-560]	; 0xfffffdd0
   18d6c:	bl	1144c <malloc@plt>
   18d70:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   18d74:	mov	r3, r0
   18d78:	cmp	r3, #0
   18d7c:	beq	18c8c <close_stdout@@Base+0x697c>
   18d80:	cmp	r9, #0
   18d84:	moveq	r2, #0
   18d88:	andne	r2, r2, #1
   18d8c:	cmp	r2, #0
   18d90:	moveq	sl, r3
   18d94:	beq	18dac <close_stdout@@Base+0x6a9c>
   18d98:	mov	r1, sl
   18d9c:	mov	r0, r3
   18da0:	mov	r2, r9
   18da4:	mov	sl, r3
   18da8:	bl	11350 <memcpy@plt>
   18dac:	mov	r2, #0
   18db0:	strb	r2, [sl, r9]
   18db4:	sub	r8, r8, #1
   18db8:	str	r8, [fp, #-508]	; 0xfffffe04
   18dbc:	bl	114f4 <__errno_location@plt>
   18dc0:	rsb	ip, r9, r4
   18dc4:	str	r5, [fp, #-544]	; 0xfffffde0
   18dc8:	mov	r5, ip
   18dcc:	ldr	r3, [r0]
   18dd0:	str	r0, [fp, #-516]	; 0xfffffdfc
   18dd4:	str	r3, [fp, #-552]	; 0xfffffdd8
   18dd8:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   18ddc:	mvn	r1, #0
   18de0:	cmp	r5, #0
   18de4:	str	r1, [fp, #-496]	; 0xfffffe10
   18de8:	ldr	r1, [fp, #-508]	; 0xfffffe04
   18dec:	mov	r3, #0
   18df0:	movge	r8, r5
   18df4:	mvnlt	r8, #-2147483648	; 0x80000000
   18df8:	str	r3, [r2]
   18dfc:	cmp	r1, #16
   18e00:	addls	pc, pc, r1, lsl #2
   18e04:	b	19448 <close_stdout@@Base+0x7138>
   18e08:	b	1933c <close_stdout@@Base+0x702c>
   18e0c:	b	1921c <close_stdout@@Base+0x6f0c>
   18e10:	b	19320 <close_stdout@@Base+0x7010>
   18e14:	b	19304 <close_stdout@@Base+0x6ff4>
   18e18:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e1c:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e20:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e24:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e28:	b	18fa4 <close_stdout@@Base+0x6c94>
   18e2c:	b	18fa4 <close_stdout@@Base+0x6c94>
   18e30:	b	19000 <close_stdout@@Base+0x6cf0>
   18e34:	b	19000 <close_stdout@@Base+0x6cf0>
   18e38:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e3c:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e40:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e44:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e48:	b	18e4c <close_stdout@@Base+0x6b3c>
   18e4c:	ldr	r2, [r7, #-4]
   18e50:	cmp	r6, #1
   18e54:	ldr	r3, [fp, #-480]	; 0xfffffe20
   18e58:	add	r3, r3, r2, lsl #4
   18e5c:	ldr	r3, [r3, #8]
   18e60:	beq	19234 <close_stdout@@Base+0x6f24>
   18e64:	cmp	r6, #2
   18e68:	bne	1905c <close_stdout@@Base+0x6d4c>
   18e6c:	ldr	r2, [fp, #-512]	; 0xfffffe00
   18e70:	add	r0, sl, r9
   18e74:	ldr	lr, [fp, #-492]	; 0xfffffe14
   18e78:	mov	r1, r8
   18e7c:	ldr	ip, [fp, #-488]	; 0xfffffe18
   18e80:	str	r2, [sp]
   18e84:	mov	r2, #1
   18e88:	str	r3, [sp, #12]
   18e8c:	sub	r3, fp, #496	; 0x1f0
   18e90:	str	lr, [sp, #4]
   18e94:	str	r3, [sp, #16]
   18e98:	mvn	r3, #0
   18e9c:	str	ip, [sp, #8]
   18ea0:	bl	1162c <__snprintf_chk@plt>
   18ea4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   18ea8:	cmp	r3, #0
   18eac:	blt	19090 <close_stdout@@Base+0x6d80>
   18eb0:	cmp	r8, r3
   18eb4:	bls	18ec8 <close_stdout@@Base+0x6bb8>
   18eb8:	add	r2, sl, r3
   18ebc:	ldrb	r2, [r2, r9]
   18ec0:	cmp	r2, #0
   18ec4:	bne	19448 <close_stdout@@Base+0x7138>
   18ec8:	cmp	r0, r3
   18ecc:	movle	r0, r3
   18ed0:	ble	18ed8 <close_stdout@@Base+0x6bc8>
   18ed4:	str	r0, [fp, #-496]	; 0xfffffe10
   18ed8:	add	r3, r0, #1
   18edc:	cmp	r8, r3
   18ee0:	bhi	19678 <close_stdout@@Base+0x7368>
   18ee4:	cmn	r8, #-2147483647	; 0x80000001
   18ee8:	beq	19690 <close_stdout@@Base+0x7380>
   18eec:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   18ef0:	add	r0, r0, r2
   18ef4:	cmp	r9, r0
   18ef8:	mvnhi	r0, #0
   18efc:	cmp	r4, #0
   18f00:	mvnlt	r0, #0
   18f04:	blt	18f14 <close_stdout@@Base+0x6c04>
   18f08:	lsl	r3, r4, #1
   18f0c:	cmp	r0, r3
   18f10:	movcc	r0, r3
   18f14:	cmp	r4, r0
   18f18:	bcs	18dd8 <close_stdout@@Base+0x6ac8>
   18f1c:	cmp	r4, #0
   18f20:	beq	19270 <close_stdout@@Base+0x6f60>
   18f24:	blt	18c98 <close_stdout@@Base+0x6988>
   18f28:	lsl	r4, r4, #1
   18f2c:	cmp	r4, r0
   18f30:	movcc	r4, r0
   18f34:	cmn	r4, #1
   18f38:	beq	18c98 <close_stdout@@Base+0x6988>
   18f3c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   18f40:	subs	r2, sl, r3
   18f44:	rsbs	r5, r2, #0
   18f48:	adcs	r5, r5, r2
   18f4c:	cmp	sl, r3
   18f50:	cmpne	sl, #0
   18f54:	bne	19278 <close_stdout@@Base+0x6f68>
   18f58:	mov	r0, r4
   18f5c:	bl	1144c <malloc@plt>
   18f60:	mov	r3, r0
   18f64:	cmp	r3, #0
   18f68:	beq	18c98 <close_stdout@@Base+0x6988>
   18f6c:	cmp	r9, #0
   18f70:	moveq	r5, #0
   18f74:	andne	r5, r5, #1
   18f78:	cmp	r5, #0
   18f7c:	rsbeq	r5, r9, r4
   18f80:	moveq	sl, r3
   18f84:	beq	18dd8 <close_stdout@@Base+0x6ac8>
   18f88:	mov	r1, sl
   18f8c:	mov	r0, r3
   18f90:	mov	r2, r9
   18f94:	mov	sl, r3
   18f98:	rsb	r5, r9, r4
   18f9c:	bl	11350 <memcpy@plt>
   18fa0:	b	18dd8 <close_stdout@@Base+0x6ac8>
   18fa4:	ldr	r2, [r7, #-4]
   18fa8:	cmp	r6, #1
   18fac:	ldr	r3, [fp, #-480]	; 0xfffffe20
   18fb0:	add	r3, r3, r2, lsl #4
   18fb4:	ldrd	r2, [r3, #8]
   18fb8:	beq	193d0 <close_stdout@@Base+0x70c0>
   18fbc:	cmp	r6, #2
   18fc0:	bne	194ac <close_stdout@@Base+0x719c>
   18fc4:	ldr	r1, [fp, #-512]	; 0xfffffe00
   18fc8:	add	r0, sl, r9
   18fcc:	ldr	lr, [fp, #-492]	; 0xfffffe14
   18fd0:	ldr	ip, [fp, #-488]	; 0xfffffe18
   18fd4:	strd	r2, [sp, #16]
   18fd8:	sub	r2, fp, #496	; 0x1f0
   18fdc:	str	r1, [sp]
   18fe0:	mvn	r3, #0
   18fe4:	str	r2, [sp, #24]
   18fe8:	mov	r1, r8
   18fec:	mov	r2, #1
   18ff0:	str	lr, [sp, #4]
   18ff4:	str	ip, [sp, #8]
   18ff8:	bl	1162c <__snprintf_chk@plt>
   18ffc:	b	18ea4 <close_stdout@@Base+0x6b94>
   19000:	ldr	r2, [r7, #-4]
   19004:	cmp	r6, #1
   19008:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1900c:	add	r3, r3, r2, lsl #4
   19010:	ldrd	r0, [r3, #8]
   19014:	beq	1939c <close_stdout@@Base+0x708c>
   19018:	cmp	r6, #2
   1901c:	bne	19480 <close_stdout@@Base+0x7170>
   19020:	ldr	r3, [fp, #-492]	; 0xfffffe14
   19024:	ldr	r2, [fp, #-512]	; 0xfffffe00
   19028:	ldr	lr, [fp, #-488]	; 0xfffffe18
   1902c:	strd	r0, [sp, #16]
   19030:	add	r0, sl, r9
   19034:	str	r2, [sp]
   19038:	mov	r1, r8
   1903c:	sub	r2, fp, #496	; 0x1f0
   19040:	str	r3, [sp, #4]
   19044:	str	r2, [sp, #24]
   19048:	mvn	r3, #0
   1904c:	mov	r2, #1
   19050:	str	lr, [sp, #8]
   19054:	bl	1162c <__snprintf_chk@plt>
   19058:	b	18ea4 <close_stdout@@Base+0x6b94>
   1905c:	ldr	r1, [fp, #-512]	; 0xfffffe00
   19060:	sub	r2, fp, #496	; 0x1f0
   19064:	str	r3, [sp, #4]
   19068:	add	r0, sl, r9
   1906c:	str	r2, [sp, #8]
   19070:	mvn	r3, #0
   19074:	str	r1, [sp]
   19078:	mov	r2, #1
   1907c:	mov	r1, r8
   19080:	bl	1162c <__snprintf_chk@plt>
   19084:	ldr	r3, [fp, #-496]	; 0xfffffe10
   19088:	cmp	r3, #0
   1908c:	bge	18eb0 <close_stdout@@Base+0x6ba0>
   19090:	ldr	r1, [fp, #-544]	; 0xfffffde0
   19094:	ldrb	r3, [r1, #1]
   19098:	cmp	r3, #0
   1909c:	movne	r2, #0
   190a0:	strbne	r2, [r1, #1]
   190a4:	bne	18dd8 <close_stdout@@Base+0x6ac8>
   190a8:	cmp	r0, #0
   190ac:	bge	18ed4 <close_stdout@@Base+0x6bc4>
   190b0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   190b4:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   190b8:	cmp	sl, #0
   190bc:	cmpne	r3, sl
   190c0:	ldr	r4, [r1]
   190c4:	bne	1951c <close_stdout@@Base+0x720c>
   190c8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   190cc:	cmp	r2, #0
   190d0:	beq	190dc <close_stdout@@Base+0x6dcc>
   190d4:	mov	r0, r2
   190d8:	bl	11338 <free@plt>
   190dc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   190e0:	sub	r3, fp, #348	; 0x15c
   190e4:	cmp	r0, r3
   190e8:	beq	190f0 <close_stdout@@Base+0x6de0>
   190ec:	bl	11338 <free@plt>
   190f0:	ldr	r0, [fp, #-480]	; 0xfffffe20
   190f4:	sub	r3, fp, #476	; 0x1dc
   190f8:	cmp	r0, r3
   190fc:	beq	19104 <close_stdout@@Base+0x6df4>
   19100:	bl	11338 <free@plt>
   19104:	cmp	r4, #0
   19108:	bne	19124 <close_stdout@@Base+0x6e14>
   1910c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   19110:	ldrb	r4, [r3, #36]	; 0x24
   19114:	and	r4, r4, #239	; 0xef
   19118:	cmp	r4, #99	; 0x63
   1911c:	movne	r4, #22
   19120:	moveq	r4, #84	; 0x54
   19124:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   19128:	mov	r3, #0
   1912c:	str	r4, [r1]
   19130:	b	18d04 <close_stdout@@Base+0x69f4>
   19134:	mov	r4, #12
   19138:	b	18a44 <close_stdout@@Base+0x6734>
   1913c:	mov	r0, r2
   19140:	mov	r1, r4
   19144:	str	r2, [fp, #-560]	; 0xfffffdd0
   19148:	str	r3, [fp, #-556]	; 0xfffffdd4
   1914c:	bl	113a4 <realloc@plt>
   19150:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   19154:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   19158:	mov	sl, r0
   1915c:	b	18a8c <close_stdout@@Base+0x677c>
   19160:	ldr	r3, [r7, #-4]
   19164:	cmn	r3, #1
   19168:	bne	19448 <close_stdout@@Base+0x7138>
   1916c:	adds	r6, r9, #1
   19170:	mvncs	r6, #0
   19174:	cmp	r4, r6
   19178:	bcs	191f8 <close_stdout@@Base+0x6ee8>
   1917c:	cmp	r4, #0
   19180:	beq	1944c <close_stdout@@Base+0x713c>
   19184:	blt	18c8c <close_stdout@@Base+0x697c>
   19188:	lsl	r4, r4, #1
   1918c:	cmp	r4, r6
   19190:	movcc	r4, r6
   19194:	cmn	r4, #1
   19198:	beq	18c8c <close_stdout@@Base+0x697c>
   1919c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   191a0:	subs	ip, sl, r3
   191a4:	rsbs	r5, ip, #0
   191a8:	adcs	r5, r5, ip
   191ac:	cmp	sl, r3
   191b0:	cmpne	sl, #0
   191b4:	bne	19454 <close_stdout@@Base+0x7144>
   191b8:	mov	r0, r4
   191bc:	bl	1144c <malloc@plt>
   191c0:	mov	r3, r0
   191c4:	cmp	r3, #0
   191c8:	beq	18c8c <close_stdout@@Base+0x697c>
   191cc:	cmp	r9, #0
   191d0:	moveq	r5, #0
   191d4:	andne	r5, r5, #1
   191d8:	cmp	r5, #0
   191dc:	moveq	sl, r3
   191e0:	beq	191f8 <close_stdout@@Base+0x6ee8>
   191e4:	mov	r1, sl
   191e8:	mov	r0, r3
   191ec:	mov	r2, r9
   191f0:	mov	sl, r3
   191f4:	bl	11350 <memcpy@plt>
   191f8:	mov	r2, sl
   191fc:	mov	r1, #37	; 0x25
   19200:	strb	r1, [sl, r9]
   19204:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   19208:	add	r7, r7, #44	; 0x2c
   1920c:	ldr	r5, [r7, #-84]	; 0xffffffac
   19210:	add	r1, r1, #1
   19214:	str	r1, [fp, #-520]	; 0xfffffdf8
   19218:	b	18a0c <close_stdout@@Base+0x66fc>
   1921c:	ldr	r2, [r7, #-4]
   19220:	cmp	r6, #1
   19224:	ldr	r3, [fp, #-480]	; 0xfffffe20
   19228:	add	r3, r3, r2, lsl #4
   1922c:	ldrb	r3, [r3, #8]
   19230:	bne	18e64 <close_stdout@@Base+0x6b54>
   19234:	ldr	r1, [fp, #-512]	; 0xfffffe00
   19238:	add	r0, sl, r9
   1923c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   19240:	mov	r2, r6
   19244:	str	r3, [sp, #8]
   19248:	sub	r3, fp, #496	; 0x1f0
   1924c:	str	r1, [sp]
   19250:	mov	r1, r8
   19254:	str	r3, [sp, #12]
   19258:	mvn	r3, #0
   1925c:	str	lr, [sp, #4]
   19260:	bl	1162c <__snprintf_chk@plt>
   19264:	b	18ea4 <close_stdout@@Base+0x6b94>
   19268:	mov	sl, r2
   1926c:	b	18aa8 <close_stdout@@Base+0x6798>
   19270:	mov	r4, #12
   19274:	b	18f2c <close_stdout@@Base+0x6c1c>
   19278:	mov	r0, sl
   1927c:	mov	r1, r4
   19280:	bl	113a4 <realloc@plt>
   19284:	mov	r3, r0
   19288:	b	18f64 <close_stdout@@Base+0x6c54>
   1928c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   19290:	add	r1, r3, r2, lsl #4
   19294:	ldr	r3, [r3, r2, lsl #4]
   19298:	sub	r3, r3, #18
   1929c:	cmp	r3, #4
   192a0:	addls	pc, pc, r3, lsl #2
   192a4:	b	19448 <close_stdout@@Base+0x7138>
   192a8:	b	194d8 <close_stdout@@Base+0x71c8>
   192ac:	b	194ec <close_stdout@@Base+0x71dc>
   192b0:	b	19388 <close_stdout@@Base+0x7078>
   192b4:	b	19388 <close_stdout@@Base+0x7078>
   192b8:	b	19500 <close_stdout@@Base+0x71f0>
   192bc:	mov	r1, r2
   192c0:	mov	r0, sl
   192c4:	mov	r2, r6
   192c8:	str	r3, [fp, #-556]	; 0xfffffdd4
   192cc:	bl	11350 <memcpy@plt>
   192d0:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   192d4:	b	18aa8 <close_stdout@@Base+0x6798>
   192d8:	mov	r9, r6
   192dc:	mov	sl, r2
   192e0:	b	18ab8 <close_stdout@@Base+0x67a8>
   192e4:	tst	r3, #32
   192e8:	bne	19470 <close_stdout@@Base+0x7160>
   192ec:	tst	r3, #12
   192f0:	beq	18bec <close_stdout@@Base+0x68dc>
   192f4:	mov	r3, #108	; 0x6c
   192f8:	add	r5, r5, #1
   192fc:	strb	r3, [r5, #-1]
   19300:	b	18be0 <close_stdout@@Base+0x68d0>
   19304:	ldr	r2, [r7, #-4]
   19308:	cmp	r6, #1
   1930c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   19310:	add	r3, r3, r2, lsl #4
   19314:	ldrh	r3, [r3, #8]
   19318:	bne	18e64 <close_stdout@@Base+0x6b54>
   1931c:	b	19234 <close_stdout@@Base+0x6f24>
   19320:	ldr	r2, [r7, #-4]
   19324:	cmp	r6, #1
   19328:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1932c:	add	r3, r3, r2, lsl #4
   19330:	ldrsh	r3, [r3, #8]
   19334:	bne	18e64 <close_stdout@@Base+0x6b54>
   19338:	b	19234 <close_stdout@@Base+0x6f24>
   1933c:	ldr	r2, [r7, #-4]
   19340:	cmp	r6, #1
   19344:	ldr	r3, [fp, #-480]	; 0xfffffe20
   19348:	add	r3, r3, r2, lsl #4
   1934c:	ldrsb	r3, [r3, #8]
   19350:	beq	19234 <close_stdout@@Base+0x6f24>
   19354:	cmp	r6, #2
   19358:	beq	18e6c <close_stdout@@Base+0x6b5c>
   1935c:	ldr	r2, [fp, #-512]	; 0xfffffe00
   19360:	add	r0, sl, r9
   19364:	str	r3, [sp, #4]
   19368:	mov	r1, r8
   1936c:	sub	r3, fp, #496	; 0x1f0
   19370:	str	r3, [sp, #8]
   19374:	str	r2, [sp]
   19378:	mvn	r3, #0
   1937c:	mov	r2, #1
   19380:	bl	1162c <__snprintf_chk@plt>
   19384:	b	18ea4 <close_stdout@@Base+0x6b94>
   19388:	ldr	r3, [r1, #8]
   1938c:	mov	r2, sl
   19390:	mov	r6, r9
   19394:	str	r9, [r3]
   19398:	b	19204 <close_stdout@@Base+0x6ef4>
   1939c:	ldr	r3, [fp, #-492]	; 0xfffffe14
   193a0:	ldr	r2, [fp, #-512]	; 0xfffffe00
   193a4:	strd	r0, [sp, #8]
   193a8:	sub	r1, fp, #496	; 0x1f0
   193ac:	str	r3, [sp, #4]
   193b0:	add	r0, sl, r9
   193b4:	str	r2, [sp]
   193b8:	mvn	r3, #0
   193bc:	str	r1, [sp, #16]
   193c0:	mov	r2, r6
   193c4:	mov	r1, r8
   193c8:	bl	1162c <__snprintf_chk@plt>
   193cc:	b	18ea4 <close_stdout@@Base+0x6b94>
   193d0:	ldr	r1, [fp, #-512]	; 0xfffffe00
   193d4:	add	r0, sl, r9
   193d8:	ldr	lr, [fp, #-492]	; 0xfffffe14
   193dc:	strd	r2, [sp, #8]
   193e0:	sub	r3, fp, #496	; 0x1f0
   193e4:	str	r1, [sp]
   193e8:	mov	r2, r6
   193ec:	str	r3, [sp, #16]
   193f0:	mov	r1, r8
   193f4:	mvn	r3, #0
   193f8:	str	lr, [sp, #4]
   193fc:	bl	1162c <__snprintf_chk@plt>
   19400:	b	18ea4 <close_stdout@@Base+0x6b94>
   19404:	mov	r6, #0
   19408:	b	18c28 <close_stdout@@Base+0x6918>
   1940c:	cmn	r0, #1
   19410:	beq	18cc4 <close_stdout@@Base+0x69b4>
   19414:	bl	1144c <malloc@plt>
   19418:	cmp	r0, #0
   1941c:	str	r0, [fp, #-512]	; 0xfffffe00
   19420:	beq	18cc4 <close_stdout@@Base+0x69b4>
   19424:	str	r0, [fp, #-548]	; 0xfffffddc
   19428:	b	189d8 <close_stdout@@Base+0x66c8>
   1942c:	mov	r0, sl
   19430:	mov	r1, r4
   19434:	str	r2, [fp, #-560]	; 0xfffffdd0
   19438:	bl	113a4 <realloc@plt>
   1943c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   19440:	mov	r3, r0
   19444:	b	18d78 <close_stdout@@Base+0x6a68>
   19448:	bl	11614 <abort@plt>
   1944c:	mov	r4, #12
   19450:	b	1918c <close_stdout@@Base+0x6e7c>
   19454:	mov	r0, sl
   19458:	mov	r1, r4
   1945c:	bl	113a4 <realloc@plt>
   19460:	mov	r3, r0
   19464:	b	191c4 <close_stdout@@Base+0x6eb4>
   19468:	mov	r3, #0
   1946c:	b	18d04 <close_stdout@@Base+0x69f4>
   19470:	mov	r3, #76	; 0x4c
   19474:	add	r5, r5, #1
   19478:	strb	r3, [r5, #-1]
   1947c:	b	18bec <close_stdout@@Base+0x68dc>
   19480:	ldr	r3, [fp, #-512]	; 0xfffffe00
   19484:	mov	r2, #1
   19488:	strd	r0, [sp, #8]
   1948c:	sub	r1, fp, #496	; 0x1f0
   19490:	add	r0, sl, r9
   19494:	str	r1, [sp, #16]
   19498:	str	r3, [sp]
   1949c:	mov	r1, r8
   194a0:	mvn	r3, #0
   194a4:	bl	1162c <__snprintf_chk@plt>
   194a8:	b	18ea4 <close_stdout@@Base+0x6b94>
   194ac:	ldr	r1, [fp, #-512]	; 0xfffffe00
   194b0:	add	r0, sl, r9
   194b4:	strd	r2, [sp, #8]
   194b8:	sub	r2, fp, #496	; 0x1f0
   194bc:	mvn	r3, #0
   194c0:	str	r2, [sp, #16]
   194c4:	str	r1, [sp]
   194c8:	mov	r2, #1
   194cc:	mov	r1, r8
   194d0:	bl	1162c <__snprintf_chk@plt>
   194d4:	b	18ea4 <close_stdout@@Base+0x6b94>
   194d8:	ldr	r3, [r1, #8]
   194dc:	mov	r2, sl
   194e0:	mov	r6, r9
   194e4:	strb	r9, [r3]
   194e8:	b	19204 <close_stdout@@Base+0x6ef4>
   194ec:	ldr	r3, [r1, #8]
   194f0:	mov	r2, sl
   194f4:	mov	r6, r9
   194f8:	strh	r9, [r3]
   194fc:	b	19204 <close_stdout@@Base+0x6ef4>
   19500:	ldr	r3, [r1, #8]
   19504:	mov	r2, sl
   19508:	mov	r1, #0
   1950c:	mov	r6, r9
   19510:	str	r9, [r3]
   19514:	str	r1, [r3, #4]
   19518:	b	19204 <close_stdout@@Base+0x6ef4>
   1951c:	mov	r0, sl
   19520:	bl	11338 <free@plt>
   19524:	b	190c8 <close_stdout@@Base+0x6db8>
   19528:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1952c:	sub	r3, fp, #348	; 0x15c
   19530:	cmp	r0, r3
   19534:	beq	1953c <close_stdout@@Base+0x722c>
   19538:	bl	11338 <free@plt>
   1953c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   19540:	sub	r3, fp, #476	; 0x1dc
   19544:	cmp	r0, r3
   19548:	beq	19550 <close_stdout@@Base+0x7240>
   1954c:	bl	11338 <free@plt>
   19550:	bl	114f4 <__errno_location@plt>
   19554:	mov	r2, #22
   19558:	mov	r3, #0
   1955c:	str	r2, [r0]
   19560:	b	18d04 <close_stdout@@Base+0x69f4>
   19564:	str	r2, [fp, #-560]	; 0xfffffdd0
   19568:	bl	114f4 <__errno_location@plt>
   1956c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   19570:	str	r0, [fp, #-516]	; 0xfffffdfc
   19574:	b	18c9c <close_stdout@@Base+0x698c>
   19578:	adds	r5, r9, #1
   1957c:	movcc	r3, r5
   19580:	mvncs	r3, #0
   19584:	cmp	r3, r4
   19588:	bls	19610 <close_stdout@@Base+0x7300>
   1958c:	cmp	r4, #0
   19590:	moveq	r4, #12
   19594:	beq	195a0 <close_stdout@@Base+0x7290>
   19598:	lslge	r4, r4, #1
   1959c:	mvnlt	r4, #0
   195a0:	cmp	r5, r9
   195a4:	movcs	r3, r5
   195a8:	mvncc	r3, #0
   195ac:	cmp	r4, r3
   195b0:	bcs	195c0 <close_stdout@@Base+0x72b0>
   195b4:	cmp	r5, r9
   195b8:	bcc	18c8c <close_stdout@@Base+0x697c>
   195bc:	mov	r4, r5
   195c0:	cmn	r4, #1
   195c4:	beq	18c8c <close_stdout@@Base+0x697c>
   195c8:	ldr	r2, [fp, #-504]	; 0xfffffe08
   195cc:	subs	r3, sl, r2
   195d0:	rsbs	r6, r3, #0
   195d4:	adcs	r6, r6, r3
   195d8:	cmp	sl, r2
   195dc:	cmpne	sl, #0
   195e0:	bne	19720 <close_stdout@@Base+0x7410>
   195e4:	mov	r0, r4
   195e8:	bl	1144c <malloc@plt>
   195ec:	mov	r3, r0
   195f0:	cmp	r3, #0
   195f4:	beq	18c8c <close_stdout@@Base+0x697c>
   195f8:	cmp	r9, #0
   195fc:	moveq	r6, #0
   19600:	andne	r6, r6, #1
   19604:	cmp	r6, #0
   19608:	moveq	sl, r3
   1960c:	bne	19734 <close_stdout@@Base+0x7424>
   19610:	ldr	r3, [fp, #-504]	; 0xfffffe08
   19614:	cmp	sl, r3
   19618:	mov	r3, #0
   1961c:	strb	r3, [sl, r9]
   19620:	beq	1962c <close_stdout@@Base+0x731c>
   19624:	cmp	r4, r5
   19628:	bhi	19708 <close_stdout@@Base+0x73f8>
   1962c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   19630:	cmp	r1, #0
   19634:	beq	19640 <close_stdout@@Base+0x7330>
   19638:	mov	r0, r1
   1963c:	bl	11338 <free@plt>
   19640:	ldr	r0, [fp, #-360]	; 0xfffffe98
   19644:	sub	r3, fp, #348	; 0x15c
   19648:	cmp	r0, r3
   1964c:	beq	19654 <close_stdout@@Base+0x7344>
   19650:	bl	11338 <free@plt>
   19654:	ldr	r0, [fp, #-480]	; 0xfffffe20
   19658:	sub	r3, fp, #476	; 0x1dc
   1965c:	cmp	r0, r3
   19660:	beq	19668 <close_stdout@@Base+0x7358>
   19664:	bl	11338 <free@plt>
   19668:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1966c:	mov	r3, sl
   19670:	str	r9, [r2]
   19674:	b	18d04 <close_stdout@@Base+0x69f4>
   19678:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   1967c:	add	r6, r0, r9
   19680:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   19684:	str	r1, [r2]
   19688:	mov	r2, sl
   1968c:	b	19204 <close_stdout@@Base+0x6ef4>
   19690:	ldr	r3, [fp, #-504]	; 0xfffffe08
   19694:	cmp	sl, #0
   19698:	cmpne	sl, r3
   1969c:	bne	196fc <close_stdout@@Base+0x73ec>
   196a0:	ldr	r3, [fp, #-548]	; 0xfffffddc
   196a4:	cmp	r3, #0
   196a8:	beq	196b4 <close_stdout@@Base+0x73a4>
   196ac:	mov	r0, r3
   196b0:	bl	11338 <free@plt>
   196b4:	ldr	r0, [fp, #-360]	; 0xfffffe98
   196b8:	sub	r3, fp, #348	; 0x15c
   196bc:	cmp	r0, r3
   196c0:	beq	196c8 <close_stdout@@Base+0x73b8>
   196c4:	bl	11338 <free@plt>
   196c8:	ldr	r0, [fp, #-480]	; 0xfffffe20
   196cc:	sub	r3, fp, #476	; 0x1dc
   196d0:	cmp	r0, r3
   196d4:	beq	196dc <close_stdout@@Base+0x73cc>
   196d8:	bl	11338 <free@plt>
   196dc:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   196e0:	mov	r2, #75	; 0x4b
   196e4:	mov	r3, #0
   196e8:	str	r2, [r1]
   196ec:	b	18d04 <close_stdout@@Base+0x69f4>
   196f0:	mov	r0, r2
   196f4:	bl	11338 <free@plt>
   196f8:	b	18cac <close_stdout@@Base+0x699c>
   196fc:	mov	r0, sl
   19700:	bl	11338 <free@plt>
   19704:	b	196a0 <close_stdout@@Base+0x7390>
   19708:	mov	r0, sl
   1970c:	mov	r1, r5
   19710:	bl	113a4 <realloc@plt>
   19714:	cmp	r0, #0
   19718:	movne	sl, r0
   1971c:	b	1962c <close_stdout@@Base+0x731c>
   19720:	mov	r0, sl
   19724:	mov	r1, r4
   19728:	bl	113a4 <realloc@plt>
   1972c:	mov	r3, r0
   19730:	b	195f0 <close_stdout@@Base+0x72e0>
   19734:	mov	r1, sl
   19738:	mov	r0, r3
   1973c:	mov	r2, r9
   19740:	mov	sl, r3
   19744:	bl	11350 <memcpy@plt>
   19748:	b	19610 <close_stdout@@Base+0x7300>
   1974c:	bl	11398 <__stack_chk_fail@plt>
   19750:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   19754:	cmp	r9, r2
   19758:	bhi	18c8c <close_stdout@@Base+0x697c>
   1975c:	mvn	r4, #0
   19760:	b	18d34 <close_stdout@@Base+0x6a24>
   19764:			; <UNDEFINED> instruction: 0x000146bc
   19768:	andeq	r0, r0, r0, asr #2
   1976c:	adds	r0, r0, #8
   19770:	push	{r3, r4, r5, lr}
   19774:	bcs	197c8 <close_stdout@@Base+0x74b8>
   19778:	bl	1144c <malloc@plt>
   1977c:	subs	r1, r0, #0
   19780:	beq	197c8 <close_stdout@@Base+0x74b8>
   19784:	add	r2, r1, #8
   19788:	movw	r3, #65281	; 0xff01
   1978c:	movt	r3, #65280	; 0xff00
   19790:	ldr	ip, [pc, #56]	; 197d0 <close_stdout@@Base+0x74c0>
   19794:	movw	r4, #64330	; 0xfb4a
   19798:	movt	r4, #5141	; 0x1415
   1979c:	umull	r5, r3, r3, r2
   197a0:	add	ip, pc, ip
   197a4:	str	r4, [r1, #4]
   197a8:	mov	r0, r2
   197ac:	lsr	r3, r3, #8
   197b0:	add	r3, r3, r3, lsl #8
   197b4:	rsb	r3, r3, r2
   197b8:	ldr	r4, [ip, r3, lsl #2]
   197bc:	str	r2, [ip, r3, lsl #2]
   197c0:	str	r4, [r1]
   197c4:	pop	{r3, r4, r5, pc}
   197c8:	mov	r0, #0
   197cc:	pop	{r3, r4, r5, pc}
   197d0:	andeq	r3, r1, ip, lsl #23
   197d4:	cmp	r0, #0
   197d8:	bxeq	lr
   197dc:	ldr	r2, [r0, #-4]
   197e0:	movw	r3, #64330	; 0xfb4a
   197e4:	movt	r3, #5141	; 0x1415
   197e8:	cmp	r2, r3
   197ec:	bxne	lr
   197f0:	movw	r3, #65281	; 0xff01
   197f4:	movt	r3, #65280	; 0xff00
   197f8:	ldr	r1, [pc, #88]	; 19858 <close_stdout@@Base+0x7548>
   197fc:	umull	r2, r3, r3, r0
   19800:	add	r1, pc, r1
   19804:	lsr	r3, r3, #8
   19808:	add	r3, r3, r3, lsl #8
   1980c:	rsb	r3, r3, r0
   19810:	ldr	r2, [r1, r3, lsl #2]
   19814:	cmp	r2, #0
   19818:	bxeq	lr
   1981c:	cmp	r0, r2
   19820:	addeq	r2, r1, r3, lsl #2
   19824:	bne	19838 <close_stdout@@Base+0x7528>
   19828:	b	1984c <close_stdout@@Base+0x753c>
   1982c:	cmp	r0, r3
   19830:	beq	19848 <close_stdout@@Base+0x7538>
   19834:	mov	r2, r3
   19838:	ldr	r3, [r2, #-8]
   1983c:	cmp	r3, #0
   19840:	bne	1982c <close_stdout@@Base+0x751c>
   19844:	bx	lr
   19848:	sub	r2, r2, #8
   1984c:	ldr	ip, [r0, #-8]!
   19850:	str	ip, [r2]
   19854:	b	11338 <free@plt>
   19858:	andeq	r3, r1, ip, lsr #22
   1985c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19860:	sub	sp, sp, #76	; 0x4c
   19864:	ldr	r8, [pc, #524]	; 19a78 <close_stdout@@Base+0x7768>
   19868:	mov	sl, r0
   1986c:	ldr	r3, [pc, #520]	; 19a7c <close_stdout@@Base+0x776c>
   19870:	add	r8, pc, r8
   19874:	ldr	r3, [r8, r3]
   19878:	str	r3, [sp, #4]
   1987c:	ldr	r3, [r3]
   19880:	str	r3, [sp, #68]	; 0x44
   19884:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   19888:	cmp	r0, #1
   1988c:	bls	19a28 <close_stdout@@Base+0x7718>
   19890:	mov	r3, #0
   19894:	add	r7, sp, #16
   19898:	add	r9, sp, #40	; 0x28
   1989c:	mov	fp, r3
   198a0:	mov	r4, sl
   198a4:	mov	r6, r3
   198a8:	mov	r5, #1
   198ac:	str	r3, [sp, #16]
   198b0:	strb	r3, [sp, #24]
   198b4:	str	sl, [sp, #28]
   198b8:	strb	r3, [sp, #12]
   198bc:	str	r3, [r7, #4]
   198c0:	ldrb	r2, [sp, #12]
   198c4:	cmp	r2, #0
   198c8:	bne	19940 <close_stdout@@Base+0x7630>
   198cc:	ldr	r2, [pc, #428]	; 19a80 <close_stdout@@Base+0x7770>
   198d0:	ldrb	r3, [r4]
   198d4:	ldr	r1, [r8, r2]
   198d8:	and	r2, r3, #31
   198dc:	lsr	r3, r3, #5
   198e0:	ldr	r3, [r1, r3, lsl #2]
   198e4:	lsr	r3, r3, r2
   198e8:	tst	r3, #1
   198ec:	beq	1992c <close_stdout@@Base+0x761c>
   198f0:	str	r5, [sp, #32]
   198f4:	ldrb	r4, [r4]
   198f8:	strb	r5, [sp, #36]	; 0x24
   198fc:	cmp	r4, #0
   19900:	strb	r5, [sp, #24]
   19904:	str	r4, [sp, #40]	; 0x28
   19908:	bne	199a4 <close_stdout@@Base+0x7694>
   1990c:	mov	r0, fp
   19910:	ldr	r1, [sp, #4]
   19914:	ldr	r2, [sp, #68]	; 0x44
   19918:	ldr	r3, [r1]
   1991c:	cmp	r2, r3
   19920:	bne	19a54 <close_stdout@@Base+0x7744>
   19924:	add	sp, sp, #76	; 0x4c
   19928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1992c:	mov	r0, r7
   19930:	bl	11374 <mbsinit@plt>
   19934:	cmp	r0, #0
   19938:	beq	19a34 <close_stdout@@Base+0x7724>
   1993c:	strb	r5, [sp, #12]
   19940:	bl	113f8 <__ctype_get_mb_cur_max@plt>
   19944:	mov	r1, r0
   19948:	mov	r0, r4
   1994c:	bl	14ab0 <close_stdout@@Base+0x27a0>
   19950:	mov	r1, r4
   19954:	mov	r3, r7
   19958:	mov	r2, r0
   1995c:	mov	r0, r9
   19960:	bl	1141c <mbrtowc@plt>
   19964:	cmn	r0, #1
   19968:	str	r0, [sp, #32]
   1996c:	beq	199c0 <close_stdout@@Base+0x76b0>
   19970:	cmn	r0, #2
   19974:	beq	19a10 <close_stdout@@Base+0x7700>
   19978:	cmp	r0, #0
   1997c:	beq	199d0 <close_stdout@@Base+0x76c0>
   19980:	ldr	r4, [sp, #40]	; 0x28
   19984:	mov	r0, r7
   19988:	strb	r5, [sp, #36]	; 0x24
   1998c:	bl	11374 <mbsinit@plt>
   19990:	strb	r5, [sp, #24]
   19994:	cmp	r0, #0
   19998:	strbne	r6, [sp, #12]
   1999c:	cmp	r4, #0
   199a0:	beq	1990c <close_stdout@@Base+0x75fc>
   199a4:	ldr	r4, [sp, #28]
   199a8:	ldr	r3, [sp, #32]
   199ac:	add	fp, fp, #1
   199b0:	strb	r6, [sp, #24]
   199b4:	add	r4, r4, r3
   199b8:	str	r4, [sp, #28]
   199bc:	b	198c0 <close_stdout@@Base+0x75b0>
   199c0:	str	r5, [sp, #32]
   199c4:	strb	r6, [sp, #36]	; 0x24
   199c8:	ldr	r4, [sp, #28]
   199cc:	b	199a8 <close_stdout@@Base+0x7698>
   199d0:	ldr	r4, [sp, #28]
   199d4:	str	r5, [sp, #32]
   199d8:	ldrb	r3, [r4]
   199dc:	cmp	r3, #0
   199e0:	bne	19a58 <close_stdout@@Base+0x7748>
   199e4:	ldr	r4, [sp, #40]	; 0x28
   199e8:	cmp	r4, #0
   199ec:	beq	19984 <close_stdout@@Base+0x7674>
   199f0:	ldr	r0, [pc, #140]	; 19a84 <close_stdout@@Base+0x7774>
   199f4:	mov	r2, #179	; 0xb3
   199f8:	ldr	r1, [pc, #136]	; 19a88 <close_stdout@@Base+0x7778>
   199fc:	ldr	r3, [pc, #136]	; 19a8c <close_stdout@@Base+0x777c>
   19a00:	add	r0, pc, r0
   19a04:	add	r1, pc, r1
   19a08:	add	r3, pc, r3
   19a0c:	bl	11638 <__assert_fail@plt>
   19a10:	ldr	r4, [sp, #28]
   19a14:	mov	r0, r4
   19a18:	bl	114d0 <strlen@plt>
   19a1c:	strb	r6, [sp, #36]	; 0x24
   19a20:	str	r0, [sp, #32]
   19a24:	b	199a8 <close_stdout@@Base+0x7698>
   19a28:	mov	r0, sl
   19a2c:	bl	114d0 <strlen@plt>
   19a30:	b	19910 <close_stdout@@Base+0x7600>
   19a34:	ldr	r0, [pc, #84]	; 19a90 <close_stdout@@Base+0x7780>
   19a38:	mov	r2, #150	; 0x96
   19a3c:	ldr	r1, [pc, #80]	; 19a94 <close_stdout@@Base+0x7784>
   19a40:	ldr	r3, [pc, #80]	; 19a98 <close_stdout@@Base+0x7788>
   19a44:	add	r0, pc, r0
   19a48:	add	r1, pc, r1
   19a4c:	add	r3, pc, r3
   19a50:	bl	11638 <__assert_fail@plt>
   19a54:	bl	11398 <__stack_chk_fail@plt>
   19a58:	ldr	r0, [pc, #60]	; 19a9c <close_stdout@@Base+0x778c>
   19a5c:	mov	r2, #178	; 0xb2
   19a60:	ldr	r1, [pc, #56]	; 19aa0 <close_stdout@@Base+0x7790>
   19a64:	ldr	r3, [pc, #56]	; 19aa4 <close_stdout@@Base+0x7794>
   19a68:	add	r0, pc, r0
   19a6c:	add	r1, pc, r1
   19a70:	add	r3, pc, r3
   19a74:	bl	11638 <__assert_fail@plt>
   19a78:	andeq	r3, r1, r8, lsl #15
   19a7c:	andeq	r0, r0, r0, asr #2
   19a80:	andeq	r0, r0, ip, lsr r1
   19a84:	andeq	r2, r0, ip, asr #6
   19a88:	andeq	r2, r0, r0, lsr #6
   19a8c:	strdeq	r2, [r0], -r4
   19a90:	andeq	r2, r0, r8, asr #5
   19a94:	ldrdeq	r2, [r0], -ip
   19a98:			; <UNDEFINED> instruction: 0x000027b0
   19a9c:	andeq	r2, r0, ip, asr #5
   19aa0:			; <UNDEFINED> instruction: 0x000022b8
   19aa4:	andeq	r2, r0, ip, lsl #15
   19aa8:	push	{r4, r5, r6}
   19aac:	ldm	r1, {r3, ip}
   19ab0:	cmp	r3, #0
   19ab4:	beq	19b5c <close_stdout@@Base+0x784c>
   19ab8:	ldr	r6, [pc, #304]	; 19bf0 <close_stdout@@Base+0x78e0>
   19abc:	add	ip, ip, #16
   19ac0:	ldr	r5, [pc, #300]	; 19bf4 <close_stdout@@Base+0x78e4>
   19ac4:	mov	r4, #0
   19ac8:	add	r6, pc, r6
   19acc:	add	r5, pc, r5
   19ad0:	ldr	r3, [ip, #-16]
   19ad4:	sub	r3, r3, #1
   19ad8:	cmp	r3, #21
   19adc:	addls	pc, pc, r3, lsl #2
   19ae0:	b	19be8 <close_stdout@@Base+0x78d8>
   19ae4:	b	19ba8 <close_stdout@@Base+0x7898>
   19ae8:	b	19ba8 <close_stdout@@Base+0x7898>
   19aec:	b	19b98 <close_stdout@@Base+0x7888>
   19af0:	b	19b98 <close_stdout@@Base+0x7888>
   19af4:	b	19b3c <close_stdout@@Base+0x782c>
   19af8:	b	19b3c <close_stdout@@Base+0x782c>
   19afc:	b	19b3c <close_stdout@@Base+0x782c>
   19b00:	b	19b3c <close_stdout@@Base+0x782c>
   19b04:	b	19b68 <close_stdout@@Base+0x7858>
   19b08:	b	19b68 <close_stdout@@Base+0x7858>
   19b0c:	b	19b80 <close_stdout@@Base+0x7870>
   19b10:	b	19b80 <close_stdout@@Base+0x7870>
   19b14:	b	19b3c <close_stdout@@Base+0x782c>
   19b18:	b	19b3c <close_stdout@@Base+0x782c>
   19b1c:	b	19bb8 <close_stdout@@Base+0x78a8>
   19b20:	b	19bd0 <close_stdout@@Base+0x78c0>
   19b24:	b	19b3c <close_stdout@@Base+0x782c>
   19b28:	b	19b3c <close_stdout@@Base+0x782c>
   19b2c:	b	19b3c <close_stdout@@Base+0x782c>
   19b30:	b	19b3c <close_stdout@@Base+0x782c>
   19b34:	b	19b3c <close_stdout@@Base+0x782c>
   19b38:	b	19b3c <close_stdout@@Base+0x782c>
   19b3c:	ldr	r3, [r0]
   19b40:	add	r0, r0, #4
   19b44:	str	r3, [ip, #-8]
   19b48:	ldr	r3, [r1]
   19b4c:	add	r4, r4, #1
   19b50:	add	ip, ip, #16
   19b54:	cmp	r3, r4
   19b58:	bhi	19ad0 <close_stdout@@Base+0x77c0>
   19b5c:	mov	r0, #0
   19b60:	pop	{r4, r5, r6}
   19b64:	bx	lr
   19b68:	add	r3, r0, #7
   19b6c:	bic	r3, r3, #7
   19b70:	add	r0, r3, #8
   19b74:	ldrd	r2, [r3]
   19b78:	strd	r2, [ip, #-8]
   19b7c:	b	19b48 <close_stdout@@Base+0x7838>
   19b80:	add	r0, r0, #7
   19b84:	bic	r0, r0, #7
   19b88:	add	r0, r0, #8
   19b8c:	ldrd	r2, [r0, #-8]
   19b90:	strd	r2, [ip, #-8]
   19b94:	b	19b48 <close_stdout@@Base+0x7838>
   19b98:	ldr	r3, [r0]
   19b9c:	add	r0, r0, #4
   19ba0:	strh	r3, [ip, #-8]
   19ba4:	b	19b48 <close_stdout@@Base+0x7838>
   19ba8:	ldr	r3, [r0]
   19bac:	add	r0, r0, #4
   19bb0:	strb	r3, [ip, #-8]
   19bb4:	b	19b48 <close_stdout@@Base+0x7838>
   19bb8:	ldr	r3, [r0]
   19bbc:	add	r0, r0, #4
   19bc0:	cmp	r3, #0
   19bc4:	str	r3, [ip, #-8]
   19bc8:	streq	r5, [ip, #-8]
   19bcc:	b	19b48 <close_stdout@@Base+0x7838>
   19bd0:	ldr	r3, [r0]
   19bd4:	add	r0, r0, #4
   19bd8:	cmp	r3, #0
   19bdc:	str	r3, [ip, #-8]
   19be0:	streq	r6, [ip, #-8]
   19be4:	b	19b48 <close_stdout@@Base+0x7838>
   19be8:	mvn	r0, #0
   19bec:	b	19b60 <close_stdout@@Base+0x7850>
   19bf0:	andeq	r2, r0, r8, asr #14
   19bf4:	andeq	r2, r0, r0, ror #14
   19bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19bfc:	mov	r7, r1
   19c00:	sub	sp, sp, #44	; 0x2c
   19c04:	mov	r5, r2
   19c08:	movw	sl, #39321	; 0x9999
   19c0c:	mov	r2, r7
   19c10:	movt	sl, #6553	; 0x1999
   19c14:	mov	r3, #0
   19c18:	str	r3, [r2], #16
   19c1c:	mov	r1, #7
   19c20:	str	r2, [r7, #4]
   19c24:	mov	r9, r0
   19c28:	str	r2, [sp, #16]
   19c2c:	mov	r2, r5
   19c30:	str	r3, [r2], #8
   19c34:	mov	r6, r3
   19c38:	str	r2, [r5, #4]
   19c3c:	movw	r0, #29789	; 0x745d
   19c40:	str	r3, [sp, #8]
   19c44:	movt	r0, #1489	; 0x5d1
   19c48:	str	r1, [sp, #20]
   19c4c:	mov	ip, sl
   19c50:	str	r3, [sp, #24]
   19c54:	str	r3, [sp, #36]	; 0x24
   19c58:	mov	r3, #7
   19c5c:	str	r2, [sp, #12]
   19c60:	str	r3, [sp, #28]
   19c64:	ldr	r1, [r7]
   19c68:	ldr	r3, [r7, #4]
   19c6c:	str	r0, [sp, #32]
   19c70:	b	19c7c <close_stdout@@Base+0x796c>
   19c74:	cmp	r0, #37	; 0x25
   19c78:	beq	19cbc <close_stdout@@Base+0x79ac>
   19c7c:	mov	r8, r9
   19c80:	ldrb	r0, [r9], #1
   19c84:	cmp	r0, #0
   19c88:	mov	r2, r9
   19c8c:	bne	19c74 <close_stdout@@Base+0x7964>
   19c90:	mov	r4, #44	; 0x2c
   19c94:	mov	r2, r0
   19c98:	mul	r1, r4, r1
   19c9c:	str	r8, [r3, r1]
   19ca0:	ldr	r3, [sp, #24]
   19ca4:	str	r3, [r7, #8]
   19ca8:	ldr	r3, [sp, #8]
   19cac:	str	r3, [r7, #12]
   19cb0:	mov	r0, r2
   19cb4:	add	sp, sp, #44	; 0x2c
   19cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cbc:	mov	r0, #44	; 0x2c
   19cc0:	mul	r1, r0, r1
   19cc4:	add	r4, r3, r1
   19cc8:	str	r8, [r3, r1]
   19ccc:	mvn	r1, #0
   19cd0:	str	r6, [r4, #8]
   19cd4:	str	r1, [r4, #20]
   19cd8:	str	r1, [r4, #32]
   19cdc:	str	r1, [r4, #40]	; 0x28
   19ce0:	str	r6, [r4, #12]
   19ce4:	str	r6, [r4, #16]
   19ce8:	str	r6, [r4, #24]
   19cec:	str	r6, [r4, #28]
   19cf0:	ldrb	r3, [r8, #1]
   19cf4:	sub	sl, r3, #48	; 0x30
   19cf8:	uxtb	r1, sl
   19cfc:	cmp	r1, #9
   19d00:	bls	1a094 <close_stdout@@Base+0x7d84>
   19d04:	mvn	r8, #0
   19d08:	b	19d4c <close_stdout@@Base+0x7a3c>
   19d0c:	cmp	r3, #45	; 0x2d
   19d10:	beq	19d68 <close_stdout@@Base+0x7a58>
   19d14:	cmp	r3, #43	; 0x2b
   19d18:	beq	19d78 <close_stdout@@Base+0x7a68>
   19d1c:	cmp	r3, #32
   19d20:	beq	19d88 <close_stdout@@Base+0x7a78>
   19d24:	cmp	r3, #35	; 0x23
   19d28:	beq	19d98 <close_stdout@@Base+0x7a88>
   19d2c:	cmp	r3, #48	; 0x30
   19d30:	beq	19da8 <close_stdout@@Base+0x7a98>
   19d34:	cmp	r3, #73	; 0x49
   19d38:	bne	19db8 <close_stdout@@Base+0x7aa8>
   19d3c:	ldr	r3, [r4, #8]
   19d40:	orr	r3, r3, #64	; 0x40
   19d44:	str	r3, [r4, #8]
   19d48:	ldrb	r3, [r2, #1]!
   19d4c:	cmp	r3, #39	; 0x27
   19d50:	mov	r9, r2
   19d54:	bne	19d0c <close_stdout@@Base+0x79fc>
   19d58:	ldr	r3, [r4, #8]
   19d5c:	orr	r3, r3, #1
   19d60:	str	r3, [r4, #8]
   19d64:	b	19d48 <close_stdout@@Base+0x7a38>
   19d68:	ldr	r3, [r4, #8]
   19d6c:	orr	r3, r3, #2
   19d70:	str	r3, [r4, #8]
   19d74:	b	19d48 <close_stdout@@Base+0x7a38>
   19d78:	ldr	r3, [r4, #8]
   19d7c:	orr	r3, r3, #4
   19d80:	str	r3, [r4, #8]
   19d84:	b	19d48 <close_stdout@@Base+0x7a38>
   19d88:	ldr	r3, [r4, #8]
   19d8c:	orr	r3, r3, #8
   19d90:	str	r3, [r4, #8]
   19d94:	b	19d48 <close_stdout@@Base+0x7a38>
   19d98:	ldr	r3, [r4, #8]
   19d9c:	orr	r3, r3, #16
   19da0:	str	r3, [r4, #8]
   19da4:	b	19d48 <close_stdout@@Base+0x7a38>
   19da8:	ldr	r3, [r4, #8]
   19dac:	orr	r3, r3, #32
   19db0:	str	r3, [r4, #8]
   19db4:	b	19d48 <close_stdout@@Base+0x7a38>
   19db8:	cmp	r3, #42	; 0x2a
   19dbc:	beq	1a230 <close_stdout@@Base+0x7f20>
   19dc0:	sub	r1, r3, #48	; 0x30
   19dc4:	uxtb	r1, r1
   19dc8:	cmp	r1, #9
   19dcc:	bls	1a10c <close_stdout@@Base+0x7dfc>
   19dd0:	cmp	r3, #46	; 0x2e
   19dd4:	beq	1a160 <close_stdout@@Base+0x7e50>
   19dd8:	mov	sl, #0
   19ddc:	mov	r0, #1
   19de0:	b	19dec <close_stdout@@Base+0x7adc>
   19de4:	ldrb	r3, [r2, #1]
   19de8:	add	r9, r9, #1
   19dec:	cmp	r3, #104	; 0x68
   19df0:	mov	r2, r9
   19df4:	andeq	r3, sl, #1
   19df8:	orreq	sl, sl, r0, lsl r3
   19dfc:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e00:	cmp	r3, #76	; 0x4c
   19e04:	orreq	sl, sl, #4
   19e08:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e0c:	cmp	r3, #108	; 0x6c
   19e10:	addeq	sl, sl, #8
   19e14:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e18:	cmp	r3, #106	; 0x6a
   19e1c:	addeq	sl, sl, #16
   19e20:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e24:	and	r1, r3, #223	; 0xdf
   19e28:	cmp	r1, #90	; 0x5a
   19e2c:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e30:	cmp	r3, #116	; 0x74
   19e34:	beq	19de4 <close_stdout@@Base+0x7ad4>
   19e38:	sub	r2, r3, #37	; 0x25
   19e3c:	add	r9, r9, #1
   19e40:	mov	fp, r3
   19e44:	cmp	r2, #83	; 0x53
   19e48:	addls	pc, pc, r2, lsl #2
   19e4c:	b	1a570 <close_stdout@@Base+0x8260>
   19e50:	b	1a000 <close_stdout@@Base+0x7cf0>
   19e54:	b	1a570 <close_stdout@@Base+0x8260>
   19e58:	b	1a570 <close_stdout@@Base+0x8260>
   19e5c:	b	1a570 <close_stdout@@Base+0x8260>
   19e60:	b	1a570 <close_stdout@@Base+0x8260>
   19e64:	b	1a570 <close_stdout@@Base+0x8260>
   19e68:	b	1a570 <close_stdout@@Base+0x8260>
   19e6c:	b	1a570 <close_stdout@@Base+0x8260>
   19e70:	b	1a570 <close_stdout@@Base+0x8260>
   19e74:	b	1a570 <close_stdout@@Base+0x8260>
   19e78:	b	1a570 <close_stdout@@Base+0x8260>
   19e7c:	b	1a570 <close_stdout@@Base+0x8260>
   19e80:	b	1a570 <close_stdout@@Base+0x8260>
   19e84:	b	1a570 <close_stdout@@Base+0x8260>
   19e88:	b	1a570 <close_stdout@@Base+0x8260>
   19e8c:	b	1a570 <close_stdout@@Base+0x8260>
   19e90:	b	1a570 <close_stdout@@Base+0x8260>
   19e94:	b	1a570 <close_stdout@@Base+0x8260>
   19e98:	b	1a570 <close_stdout@@Base+0x8260>
   19e9c:	b	1a570 <close_stdout@@Base+0x8260>
   19ea0:	b	1a570 <close_stdout@@Base+0x8260>
   19ea4:	b	1a570 <close_stdout@@Base+0x8260>
   19ea8:	b	1a570 <close_stdout@@Base+0x8260>
   19eac:	b	1a570 <close_stdout@@Base+0x8260>
   19eb0:	b	1a570 <close_stdout@@Base+0x8260>
   19eb4:	b	1a570 <close_stdout@@Base+0x8260>
   19eb8:	b	1a570 <close_stdout@@Base+0x8260>
   19ebc:	b	1a570 <close_stdout@@Base+0x8260>
   19ec0:	b	1a34c <close_stdout@@Base+0x803c>
   19ec4:	b	1a570 <close_stdout@@Base+0x8260>
   19ec8:	b	1a370 <close_stdout@@Base+0x8060>
   19ecc:	b	1a570 <close_stdout@@Base+0x8260>
   19ed0:	b	1a34c <close_stdout@@Base+0x803c>
   19ed4:	b	1a34c <close_stdout@@Base+0x803c>
   19ed8:	b	1a34c <close_stdout@@Base+0x803c>
   19edc:	b	1a570 <close_stdout@@Base+0x8260>
   19ee0:	b	1a570 <close_stdout@@Base+0x8260>
   19ee4:	b	1a570 <close_stdout@@Base+0x8260>
   19ee8:	b	1a570 <close_stdout@@Base+0x8260>
   19eec:	b	1a570 <close_stdout@@Base+0x8260>
   19ef0:	b	1a570 <close_stdout@@Base+0x8260>
   19ef4:	b	1a570 <close_stdout@@Base+0x8260>
   19ef8:	b	1a570 <close_stdout@@Base+0x8260>
   19efc:	b	1a570 <close_stdout@@Base+0x8260>
   19f00:	b	1a570 <close_stdout@@Base+0x8260>
   19f04:	b	1a570 <close_stdout@@Base+0x8260>
   19f08:	b	1a37c <close_stdout@@Base+0x806c>
   19f0c:	b	1a570 <close_stdout@@Base+0x8260>
   19f10:	b	1a570 <close_stdout@@Base+0x8260>
   19f14:	b	1a570 <close_stdout@@Base+0x8260>
   19f18:	b	1a570 <close_stdout@@Base+0x8260>
   19f1c:	b	1a388 <close_stdout@@Base+0x8078>
   19f20:	b	1a570 <close_stdout@@Base+0x8260>
   19f24:	b	1a570 <close_stdout@@Base+0x8260>
   19f28:	b	1a570 <close_stdout@@Base+0x8260>
   19f2c:	b	1a570 <close_stdout@@Base+0x8260>
   19f30:	b	1a570 <close_stdout@@Base+0x8260>
   19f34:	b	1a570 <close_stdout@@Base+0x8260>
   19f38:	b	1a570 <close_stdout@@Base+0x8260>
   19f3c:	b	1a570 <close_stdout@@Base+0x8260>
   19f40:	b	1a34c <close_stdout@@Base+0x803c>
   19f44:	b	1a570 <close_stdout@@Base+0x8260>
   19f48:	b	1a410 <close_stdout@@Base+0x8100>
   19f4c:	b	1a3cc <close_stdout@@Base+0x80bc>
   19f50:	b	1a34c <close_stdout@@Base+0x803c>
   19f54:	b	1a34c <close_stdout@@Base+0x803c>
   19f58:	b	1a34c <close_stdout@@Base+0x803c>
   19f5c:	b	1a570 <close_stdout@@Base+0x8260>
   19f60:	b	1a3cc <close_stdout@@Base+0x80bc>
   19f64:	b	1a570 <close_stdout@@Base+0x8260>
   19f68:	b	1a570 <close_stdout@@Base+0x8260>
   19f6c:	b	1a570 <close_stdout@@Base+0x8260>
   19f70:	b	1a570 <close_stdout@@Base+0x8260>
   19f74:	b	1a420 <close_stdout@@Base+0x8110>
   19f78:	b	1a388 <close_stdout@@Base+0x8078>
   19f7c:	b	19fa0 <close_stdout@@Base+0x7c90>
   19f80:	b	1a570 <close_stdout@@Base+0x8260>
   19f84:	b	1a570 <close_stdout@@Base+0x8260>
   19f88:	b	1a33c <close_stdout@@Base+0x802c>
   19f8c:	b	1a570 <close_stdout@@Base+0x8260>
   19f90:	b	1a388 <close_stdout@@Base+0x8078>
   19f94:	b	1a570 <close_stdout@@Base+0x8260>
   19f98:	b	1a570 <close_stdout@@Base+0x8260>
   19f9c:	b	1a388 <close_stdout@@Base+0x8078>
   19fa0:	mov	sl, #17
   19fa4:	cmn	r8, #1
   19fa8:	strne	r8, [r4, #40]	; 0x28
   19fac:	beq	1a6cc <close_stdout@@Base+0x83bc>
   19fb0:	ldr	r3, [sp, #20]
   19fb4:	cmp	r3, r8
   19fb8:	bls	1a5f8 <close_stdout@@Base+0x82e8>
   19fbc:	ldr	r0, [r5, #4]
   19fc0:	ldr	r3, [r5]
   19fc4:	cmp	r3, r8
   19fc8:	bhi	19fe8 <close_stdout@@Base+0x7cd8>
   19fcc:	add	r2, r3, #1
   19fd0:	str	r2, [r5]
   19fd4:	str	r6, [r0, r3, lsl #4]
   19fd8:	ldr	r3, [r5]
   19fdc:	ldr	r0, [r5, #4]
   19fe0:	cmp	r3, r8
   19fe4:	bls	19fcc <close_stdout@@Base+0x7cbc>
   19fe8:	ldr	r3, [r0, r8, lsl #4]
   19fec:	cmp	r3, #0
   19ff0:	streq	sl, [r0, r8, lsl #4]
   19ff4:	beq	1a000 <close_stdout@@Base+0x7cf0>
   19ff8:	cmp	sl, r3
   19ffc:	bne	1a574 <close_stdout@@Base+0x8264>
   1a000:	strb	fp, [r4, #36]	; 0x24
   1a004:	str	r9, [r4, #4]
   1a008:	ldr	r1, [r7]
   1a00c:	ldr	r3, [sp, #28]
   1a010:	add	r1, r1, #1
   1a014:	str	r1, [r7]
   1a018:	cmp	r3, r1
   1a01c:	bhi	1a104 <close_stdout@@Base+0x7df4>
   1a020:	ldr	r3, [sp, #28]
   1a024:	cmp	r3, #0
   1a028:	blt	1a1f0 <close_stdout@@Base+0x7ee0>
   1a02c:	ldr	r3, [sp, #28]
   1a030:	ldr	r0, [sp, #32]
   1a034:	lsl	r3, r3, #1
   1a038:	str	r3, [sp, #28]
   1a03c:	cmp	r3, r0
   1a040:	bhi	1a1f0 <close_stdout@@Base+0x7ee0>
   1a044:	mov	r2, #44	; 0x2c
   1a048:	ldr	r0, [r7, #4]
   1a04c:	mul	r1, r2, r3
   1a050:	ldr	r3, [sp, #16]
   1a054:	cmp	r3, r0
   1a058:	beq	1a6ec <close_stdout@@Base+0x83dc>
   1a05c:	str	ip, [sp, #4]
   1a060:	bl	113a4 <realloc@plt>
   1a064:	ldr	ip, [sp, #4]
   1a068:	mov	r4, r0
   1a06c:	cmp	r4, #0
   1a070:	beq	1a1f0 <close_stdout@@Base+0x7ee0>
   1a074:	ldr	r3, [r7, #4]
   1a078:	ldr	r0, [sp, #16]
   1a07c:	cmp	r0, r3
   1a080:	beq	1a7a8 <close_stdout@@Base+0x8498>
   1a084:	ldr	r1, [r7]
   1a088:	mov	r3, r4
   1a08c:	str	r4, [r7, #4]
   1a090:	b	19c7c <close_stdout@@Base+0x796c>
   1a094:	mov	r0, r9
   1a098:	ldrb	r1, [r0, #1]!
   1a09c:	sub	r8, r1, #48	; 0x30
   1a0a0:	cmp	r8, #9
   1a0a4:	bls	1a098 <close_stdout@@Base+0x7d88>
   1a0a8:	cmp	r1, #36	; 0x24
   1a0ac:	bne	19d04 <close_stdout@@Base+0x79f4>
   1a0b0:	mov	r8, #0
   1a0b4:	b	1a0bc <close_stdout@@Base+0x7dac>
   1a0b8:	mov	r9, r2
   1a0bc:	add	r3, r8, r8, lsl #2
   1a0c0:	cmp	r8, ip
   1a0c4:	mvn	r8, #0
   1a0c8:	add	r2, r9, #1
   1a0cc:	lslls	r8, r3, #1
   1a0d0:	adds	r8, r8, sl
   1a0d4:	ldrb	sl, [r9, #1]
   1a0d8:	sub	sl, sl, #48	; 0x30
   1a0dc:	mvncs	r8, #0
   1a0e0:	uxtb	r3, sl
   1a0e4:	cmp	r3, #9
   1a0e8:	bls	1a0b8 <close_stdout@@Base+0x7da8>
   1a0ec:	sub	r8, r8, #1
   1a0f0:	cmn	r8, #3
   1a0f4:	bhi	1a570 <close_stdout@@Base+0x8260>
   1a0f8:	add	r2, r2, #1
   1a0fc:	ldrb	r3, [r9, #2]
   1a100:	b	19d4c <close_stdout@@Base+0x7a3c>
   1a104:	ldr	r3, [r7, #4]
   1a108:	b	19c7c <close_stdout@@Base+0x796c>
   1a10c:	str	r2, [r4, #12]
   1a110:	ldrb	r3, [r2]
   1a114:	sub	r3, r3, #48	; 0x30
   1a118:	cmp	r3, #9
   1a11c:	bhi	1a7a0 <close_stdout@@Base+0x8490>
   1a120:	add	r3, r2, #1
   1a124:	mov	r9, r3
   1a128:	add	r3, r3, #1
   1a12c:	ldrb	r1, [r9]
   1a130:	sub	r1, r1, #48	; 0x30
   1a134:	cmp	r1, #9
   1a138:	bls	1a124 <close_stdout@@Base+0x7e14>
   1a13c:	rsb	r2, r2, r9
   1a140:	ldr	r3, [sp, #24]
   1a144:	str	r9, [r4, #16]
   1a148:	cmp	r3, r2
   1a14c:	movcc	r3, r2
   1a150:	str	r3, [sp, #24]
   1a154:	ldrb	r3, [r9]
   1a158:	cmp	r3, #46	; 0x2e
   1a15c:	bne	19dd8 <close_stdout@@Base+0x7ac8>
   1a160:	ldrb	r3, [r9, #1]
   1a164:	str	r9, [r4, #24]
   1a168:	cmp	r3, #42	; 0x2a
   1a16c:	beq	1a458 <close_stdout@@Base+0x8148>
   1a170:	ldrb	r3, [r9, #1]
   1a174:	add	r2, r9, #1
   1a178:	sub	r3, r3, #48	; 0x30
   1a17c:	cmp	r3, #9
   1a180:	bhi	1a1a0 <close_stdout@@Base+0x7e90>
   1a184:	add	r3, r9, #2
   1a188:	mov	r2, r3
   1a18c:	add	r3, r3, #1
   1a190:	ldrb	r1, [r2]
   1a194:	sub	r1, r1, #48	; 0x30
   1a198:	cmp	r1, #9
   1a19c:	bls	1a188 <close_stdout@@Base+0x7e78>
   1a1a0:	ldr	r0, [sp, #8]
   1a1a4:	rsb	r9, r9, r2
   1a1a8:	str	r2, [r4, #28]
   1a1ac:	cmp	r0, r9
   1a1b0:	movcc	r0, r9
   1a1b4:	ldrb	r3, [r2]
   1a1b8:	str	r0, [sp, #8]
   1a1bc:	mov	r9, r2
   1a1c0:	b	19dd8 <close_stdout@@Base+0x7ac8>
   1a1c4:	ldr	r3, [sp, #20]
   1a1c8:	cmp	r3, #0
   1a1cc:	lslge	r3, r3, #1
   1a1d0:	mvnlt	r3, #0
   1a1d4:	str	r3, [sp, #20]
   1a1d8:	ldr	r3, [sp, #20]
   1a1dc:	cmp	r3, sl
   1a1e0:	bhi	1a67c <close_stdout@@Base+0x836c>
   1a1e4:	adds	r3, sl, #1
   1a1e8:	str	r3, [sp, #20]
   1a1ec:	bcc	1a67c <close_stdout@@Base+0x836c>
   1a1f0:	ldr	r2, [r5, #4]
   1a1f4:	ldr	r3, [sp, #12]
   1a1f8:	cmp	r3, r2
   1a1fc:	beq	1a208 <close_stdout@@Base+0x7ef8>
   1a200:	mov	r0, r2
   1a204:	bl	11338 <free@plt>
   1a208:	ldr	r0, [r7, #4]
   1a20c:	ldr	r3, [sp, #16]
   1a210:	cmp	r3, r0
   1a214:	beq	1a21c <close_stdout@@Base+0x7f0c>
   1a218:	bl	11338 <free@plt>
   1a21c:	bl	114f4 <__errno_location@plt>
   1a220:	mov	r3, #12
   1a224:	mvn	r2, #0
   1a228:	str	r3, [r0]
   1a22c:	b	19cb0 <close_stdout@@Base+0x79a0>
   1a230:	ldr	r3, [sp, #24]
   1a234:	add	r9, r2, #1
   1a238:	str	r2, [r4, #12]
   1a23c:	str	r9, [r4, #16]
   1a240:	cmp	r3, #0
   1a244:	ldrb	sl, [r2, #1]
   1a248:	moveq	r3, #1
   1a24c:	str	r3, [sp, #24]
   1a250:	sub	sl, sl, #48	; 0x30
   1a254:	uxtb	r3, sl
   1a258:	cmp	r3, #9
   1a25c:	bls	1a2d0 <close_stdout@@Base+0x7fc0>
   1a260:	ldr	r3, [sp, #36]	; 0x24
   1a264:	cmn	r3, #1
   1a268:	str	r3, [r4, #20]
   1a26c:	add	r3, r3, #1
   1a270:	beq	1a570 <close_stdout@@Base+0x8260>
   1a274:	ldr	sl, [sp, #36]	; 0x24
   1a278:	str	r3, [sp, #36]	; 0x24
   1a27c:	ldr	r3, [sp, #20]
   1a280:	cmp	r3, sl
   1a284:	bls	1a1c4 <close_stdout@@Base+0x7eb4>
   1a288:	ldr	r0, [r5, #4]
   1a28c:	ldr	r3, [r5]
   1a290:	cmp	r3, sl
   1a294:	bhi	1a2b4 <close_stdout@@Base+0x7fa4>
   1a298:	add	r2, r3, #1
   1a29c:	str	r2, [r5]
   1a2a0:	str	r6, [r0, r3, lsl #4]
   1a2a4:	ldr	r3, [r5]
   1a2a8:	ldr	r0, [r5, #4]
   1a2ac:	cmp	r3, sl
   1a2b0:	bls	1a298 <close_stdout@@Base+0x7f88>
   1a2b4:	ldr	r3, [r0, sl, lsl #4]
   1a2b8:	cmp	r3, #0
   1a2bc:	bne	1a670 <close_stdout@@Base+0x8360>
   1a2c0:	mov	r1, #5
   1a2c4:	str	r1, [r0, sl, lsl #4]
   1a2c8:	ldrb	r3, [r9]
   1a2cc:	b	19dd0 <close_stdout@@Base+0x7ac0>
   1a2d0:	mov	r1, r9
   1a2d4:	ldrb	r3, [r1, #1]!
   1a2d8:	sub	r0, r3, #48	; 0x30
   1a2dc:	cmp	r0, #9
   1a2e0:	bls	1a2d4 <close_stdout@@Base+0x7fc4>
   1a2e4:	cmp	r3, #36	; 0x24
   1a2e8:	bne	1a260 <close_stdout@@Base+0x7f50>
   1a2ec:	add	r2, r2, #2
   1a2f0:	mov	r3, #0
   1a2f4:	add	r1, r3, r3, lsl #2
   1a2f8:	cmp	r3, ip
   1a2fc:	mvn	r3, #0
   1a300:	lslls	r3, r1, #1
   1a304:	adds	r3, r3, sl
   1a308:	ldrb	sl, [r2], #1
   1a30c:	sub	sl, sl, #48	; 0x30
   1a310:	mvncs	r3, #0
   1a314:	uxtb	r1, sl
   1a318:	cmp	r1, #9
   1a31c:	bls	1a2f4 <close_stdout@@Base+0x7fe4>
   1a320:	sub	r3, r3, #1
   1a324:	cmn	r3, #3
   1a328:	bhi	1a570 <close_stdout@@Base+0x8260>
   1a32c:	str	r3, [r4, #20]
   1a330:	mov	r9, r2
   1a334:	mov	sl, r3
   1a338:	b	1a27c <close_stdout@@Base+0x7f6c>
   1a33c:	cmp	sl, #7
   1a340:	movle	sl, #15
   1a344:	movgt	sl, #16
   1a348:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a34c:	cmp	sl, #15
   1a350:	movgt	fp, r3
   1a354:	movgt	sl, #12
   1a358:	bgt	19fa4 <close_stdout@@Base+0x7c94>
   1a35c:	tst	sl, #4
   1a360:	mov	fp, r3
   1a364:	moveq	sl, #11
   1a368:	movne	sl, #12
   1a36c:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a370:	mov	sl, #14
   1a374:	mov	fp, #99	; 0x63
   1a378:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a37c:	mov	sl, #16
   1a380:	mov	fp, #115	; 0x73
   1a384:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a388:	cmp	sl, #15
   1a38c:	bgt	1a5ac <close_stdout@@Base+0x829c>
   1a390:	tst	sl, #4
   1a394:	bne	1a5ac <close_stdout@@Base+0x829c>
   1a398:	cmp	sl, #7
   1a39c:	movgt	fp, r3
   1a3a0:	movgt	sl, #8
   1a3a4:	bgt	19fa4 <close_stdout@@Base+0x7c94>
   1a3a8:	tst	sl, #2
   1a3ac:	movne	fp, r3
   1a3b0:	movne	sl, #2
   1a3b4:	bne	19fa4 <close_stdout@@Base+0x7c94>
   1a3b8:	tst	sl, #1
   1a3bc:	mov	fp, r3
   1a3c0:	moveq	sl, #6
   1a3c4:	movne	sl, #4
   1a3c8:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a3cc:	cmp	sl, #15
   1a3d0:	bgt	1a5b8 <close_stdout@@Base+0x82a8>
   1a3d4:	tst	sl, #4
   1a3d8:	bne	1a5b8 <close_stdout@@Base+0x82a8>
   1a3dc:	cmp	sl, #7
   1a3e0:	movgt	fp, r3
   1a3e4:	movgt	sl, #7
   1a3e8:	bgt	19fa4 <close_stdout@@Base+0x7c94>
   1a3ec:	tst	sl, #2
   1a3f0:	movne	fp, r3
   1a3f4:	movne	sl, #1
   1a3f8:	bne	19fa4 <close_stdout@@Base+0x7c94>
   1a3fc:	tst	sl, #1
   1a400:	mov	fp, r3
   1a404:	moveq	sl, #5
   1a408:	movne	sl, #3
   1a40c:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a410:	cmp	sl, #7
   1a414:	movle	sl, #13
   1a418:	movgt	sl, #14
   1a41c:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a420:	cmp	sl, #15
   1a424:	bgt	1a5c4 <close_stdout@@Base+0x82b4>
   1a428:	tst	sl, #4
   1a42c:	bne	1a5c4 <close_stdout@@Base+0x82b4>
   1a430:	cmp	sl, #7
   1a434:	movgt	sl, #21
   1a438:	bgt	19fa4 <close_stdout@@Base+0x7c94>
   1a43c:	tst	sl, #2
   1a440:	movne	sl, #18
   1a444:	bne	19fa4 <close_stdout@@Base+0x7c94>
   1a448:	tst	sl, #1
   1a44c:	moveq	sl, #20
   1a450:	movne	sl, #19
   1a454:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a458:	ldr	r3, [sp, #8]
   1a45c:	add	sl, r9, #2
   1a460:	str	sl, [r4, #28]
   1a464:	ldrb	r0, [r9, #2]
   1a468:	cmp	r3, #1
   1a46c:	sub	r0, r0, #48	; 0x30
   1a470:	movls	r3, #2
   1a474:	str	r3, [sp, #8]
   1a478:	uxtb	r3, r0
   1a47c:	cmp	r3, #9
   1a480:	bhi	1a5cc <close_stdout@@Base+0x82bc>
   1a484:	mov	r2, sl
   1a488:	ldrb	r3, [r2, #1]!
   1a48c:	sub	r1, r3, #48	; 0x30
   1a490:	cmp	r1, #9
   1a494:	bls	1a488 <close_stdout@@Base+0x8178>
   1a498:	cmp	r3, #36	; 0x24
   1a49c:	bne	1a5cc <close_stdout@@Base+0x82bc>
   1a4a0:	add	r9, r9, #3
   1a4a4:	mov	r3, #0
   1a4a8:	add	r2, r3, r3, lsl #2
   1a4ac:	cmp	r3, ip
   1a4b0:	mvn	r3, #0
   1a4b4:	lslls	r3, r2, #1
   1a4b8:	adds	r3, r3, r0
   1a4bc:	ldrb	r0, [r9], #1
   1a4c0:	sub	r0, r0, #48	; 0x30
   1a4c4:	mvncs	r3, #0
   1a4c8:	uxtb	r2, r0
   1a4cc:	cmp	r2, #9
   1a4d0:	bls	1a4a8 <close_stdout@@Base+0x8198>
   1a4d4:	sub	r3, r3, #1
   1a4d8:	cmn	r3, #3
   1a4dc:	bhi	1a570 <close_stdout@@Base+0x8260>
   1a4e0:	mov	sl, r9
   1a4e4:	mov	r9, r3
   1a4e8:	str	r3, [r4, #32]
   1a4ec:	ldr	r3, [sp, #20]
   1a4f0:	cmp	r3, r9
   1a4f4:	bhi	1a704 <close_stdout@@Base+0x83f4>
   1a4f8:	ldr	r3, [sp, #20]
   1a4fc:	cmp	r3, #0
   1a500:	blt	1a1f0 <close_stdout@@Base+0x7ee0>
   1a504:	lsl	r3, r3, #1
   1a508:	str	r3, [sp, #20]
   1a50c:	cmp	r3, r9
   1a510:	bhi	1a520 <close_stdout@@Base+0x8210>
   1a514:	adds	r3, r9, #1
   1a518:	str	r3, [sp, #20]
   1a51c:	bcs	1a1f0 <close_stdout@@Base+0x7ee0>
   1a520:	ldr	r3, [sp, #20]
   1a524:	cmn	r3, #-268435455	; 0xf0000001
   1a528:	bhi	1a1f0 <close_stdout@@Base+0x7ee0>
   1a52c:	ldr	r0, [r5, #4]
   1a530:	lsl	r1, r3, #4
   1a534:	ldr	r3, [sp, #12]
   1a538:	cmp	r3, r0
   1a53c:	beq	1a808 <close_stdout@@Base+0x84f8>
   1a540:	str	ip, [sp, #4]
   1a544:	bl	113a4 <realloc@plt>
   1a548:	ldr	r2, [r5, #4]
   1a54c:	ldr	ip, [sp, #4]
   1a550:	subs	r3, r0, #0
   1a554:	beq	1a1f4 <close_stdout@@Base+0x7ee4>
   1a558:	ldr	r0, [sp, #12]
   1a55c:	cmp	r0, r2
   1a560:	beq	1a820 <close_stdout@@Base+0x8510>
   1a564:	mov	r0, r3
   1a568:	str	r3, [r5, #4]
   1a56c:	b	1a708 <close_stdout@@Base+0x83f8>
   1a570:	ldr	r0, [r5, #4]
   1a574:	ldr	r3, [sp, #12]
   1a578:	cmp	r3, r0
   1a57c:	beq	1a584 <close_stdout@@Base+0x8274>
   1a580:	bl	11338 <free@plt>
   1a584:	ldr	r0, [r7, #4]
   1a588:	ldr	r3, [sp, #16]
   1a58c:	cmp	r3, r0
   1a590:	beq	1a598 <close_stdout@@Base+0x8288>
   1a594:	bl	11338 <free@plt>
   1a598:	bl	114f4 <__errno_location@plt>
   1a59c:	mov	r3, #22
   1a5a0:	mvn	r2, #0
   1a5a4:	str	r3, [r0]
   1a5a8:	b	19cb0 <close_stdout@@Base+0x79a0>
   1a5ac:	mov	fp, r3
   1a5b0:	mov	sl, #10
   1a5b4:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a5b8:	mov	fp, r3
   1a5bc:	mov	sl, #9
   1a5c0:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a5c4:	mov	sl, #22
   1a5c8:	b	19fa4 <close_stdout@@Base+0x7c94>
   1a5cc:	ldr	r9, [r4, #32]
   1a5d0:	cmn	r9, #1
   1a5d4:	bne	1a4ec <close_stdout@@Base+0x81dc>
   1a5d8:	ldr	r3, [sp, #36]	; 0x24
   1a5dc:	cmn	r3, #1
   1a5e0:	str	r3, [r4, #32]
   1a5e4:	add	r3, r3, #1
   1a5e8:	beq	1a570 <close_stdout@@Base+0x8260>
   1a5ec:	ldr	r9, [sp, #36]	; 0x24
   1a5f0:	str	r3, [sp, #36]	; 0x24
   1a5f4:	b	1a4ec <close_stdout@@Base+0x81dc>
   1a5f8:	ldr	r3, [sp, #20]
   1a5fc:	cmp	r3, #0
   1a600:	blt	1a1f0 <close_stdout@@Base+0x7ee0>
   1a604:	lsl	r3, r3, #1
   1a608:	str	r3, [sp, #20]
   1a60c:	cmp	r3, r8
   1a610:	bhi	1a620 <close_stdout@@Base+0x8310>
   1a614:	adds	r3, r8, #1
   1a618:	str	r3, [sp, #20]
   1a61c:	bcs	1a1f0 <close_stdout@@Base+0x7ee0>
   1a620:	ldr	r3, [sp, #20]
   1a624:	cmn	r3, #-268435455	; 0xf0000001
   1a628:	bhi	1a1f0 <close_stdout@@Base+0x7ee0>
   1a62c:	ldr	r0, [r5, #4]
   1a630:	lsl	r1, r3, #4
   1a634:	ldr	r3, [sp, #12]
   1a638:	cmp	r3, r0
   1a63c:	beq	1a764 <close_stdout@@Base+0x8454>
   1a640:	str	ip, [sp, #4]
   1a644:	bl	113a4 <realloc@plt>
   1a648:	ldr	r2, [r5, #4]
   1a64c:	ldr	ip, [sp, #4]
   1a650:	subs	r3, r0, #0
   1a654:	beq	1a1f4 <close_stdout@@Base+0x7ee4>
   1a658:	ldr	r0, [sp, #12]
   1a65c:	cmp	r0, r2
   1a660:	beq	1a77c <close_stdout@@Base+0x846c>
   1a664:	mov	r0, r3
   1a668:	str	r3, [r5, #4]
   1a66c:	b	19fc0 <close_stdout@@Base+0x7cb0>
   1a670:	cmp	r3, #5
   1a674:	beq	1a154 <close_stdout@@Base+0x7e44>
   1a678:	b	1a574 <close_stdout@@Base+0x8264>
   1a67c:	ldr	r3, [sp, #20]
   1a680:	cmn	r3, #-268435455	; 0xf0000001
   1a684:	bhi	1a1f0 <close_stdout@@Base+0x7ee0>
   1a688:	ldr	r0, [r5, #4]
   1a68c:	lsl	r1, r3, #4
   1a690:	ldr	r3, [sp, #12]
   1a694:	cmp	r3, r0
   1a698:	beq	1a7cc <close_stdout@@Base+0x84bc>
   1a69c:	str	ip, [sp, #4]
   1a6a0:	bl	113a4 <realloc@plt>
   1a6a4:	ldr	r2, [r5, #4]
   1a6a8:	ldr	ip, [sp, #4]
   1a6ac:	subs	r3, r0, #0
   1a6b0:	beq	1a1f4 <close_stdout@@Base+0x7ee4>
   1a6b4:	ldr	r0, [sp, #12]
   1a6b8:	cmp	r0, r2
   1a6bc:	beq	1a7e4 <close_stdout@@Base+0x84d4>
   1a6c0:	mov	r0, r3
   1a6c4:	str	r3, [r5, #4]
   1a6c8:	b	1a28c <close_stdout@@Base+0x7f7c>
   1a6cc:	ldr	r3, [sp, #36]	; 0x24
   1a6d0:	cmn	r3, #1
   1a6d4:	str	r3, [r4, #40]	; 0x28
   1a6d8:	add	r3, r3, #1
   1a6dc:	beq	1a570 <close_stdout@@Base+0x8260>
   1a6e0:	ldr	r8, [sp, #36]	; 0x24
   1a6e4:	str	r3, [sp, #36]	; 0x24
   1a6e8:	b	19fb0 <close_stdout@@Base+0x7ca0>
   1a6ec:	mov	r0, r1
   1a6f0:	str	ip, [sp, #4]
   1a6f4:	bl	1144c <malloc@plt>
   1a6f8:	ldr	ip, [sp, #4]
   1a6fc:	mov	r4, r0
   1a700:	b	1a06c <close_stdout@@Base+0x7d5c>
   1a704:	ldr	r0, [r5, #4]
   1a708:	ldr	r3, [r5]
   1a70c:	cmp	r3, r9
   1a710:	bhi	1a730 <close_stdout@@Base+0x8420>
   1a714:	add	r2, r3, #1
   1a718:	str	r2, [r5]
   1a71c:	str	r6, [r0, r3, lsl #4]
   1a720:	ldr	r3, [r5]
   1a724:	ldr	r0, [r5, #4]
   1a728:	cmp	r3, r9
   1a72c:	bls	1a714 <close_stdout@@Base+0x8404>
   1a730:	ldr	r3, [r0, r9, lsl #4]
   1a734:	cmp	r3, #0
   1a738:	bne	1a750 <close_stdout@@Base+0x8440>
   1a73c:	mov	r1, #5
   1a740:	str	r1, [r0, r9, lsl #4]
   1a744:	mov	r9, sl
   1a748:	ldrb	r3, [sl]
   1a74c:	b	19dd8 <close_stdout@@Base+0x7ac8>
   1a750:	cmp	r3, #5
   1a754:	bne	1a574 <close_stdout@@Base+0x8264>
   1a758:	ldrb	r3, [sl]
   1a75c:	mov	r9, sl
   1a760:	b	19dd8 <close_stdout@@Base+0x7ac8>
   1a764:	mov	r0, r1
   1a768:	str	ip, [sp, #4]
   1a76c:	bl	1144c <malloc@plt>
   1a770:	ldr	ip, [sp, #4]
   1a774:	subs	r3, r0, #0
   1a778:	beq	1a844 <close_stdout@@Base+0x8534>
   1a77c:	ldr	r2, [r5]
   1a780:	mov	r0, r3
   1a784:	ldr	r1, [sp, #12]
   1a788:	str	ip, [sp, #4]
   1a78c:	lsl	r2, r2, #4
   1a790:	bl	11350 <memcpy@plt>
   1a794:	ldr	ip, [sp, #4]
   1a798:	mov	r3, r0
   1a79c:	b	1a664 <close_stdout@@Base+0x8354>
   1a7a0:	mov	r2, #0
   1a7a4:	b	1a140 <close_stdout@@Base+0x7e30>
   1a7a8:	ldr	r2, [r7]
   1a7ac:	mov	r3, #44	; 0x2c
   1a7b0:	mov	r0, r4
   1a7b4:	ldr	r1, [sp, #16]
   1a7b8:	str	ip, [sp, #4]
   1a7bc:	mul	r2, r3, r2
   1a7c0:	bl	11350 <memcpy@plt>
   1a7c4:	ldr	ip, [sp, #4]
   1a7c8:	b	1a084 <close_stdout@@Base+0x7d74>
   1a7cc:	mov	r0, r1
   1a7d0:	str	ip, [sp, #4]
   1a7d4:	bl	1144c <malloc@plt>
   1a7d8:	ldr	ip, [sp, #4]
   1a7dc:	subs	r3, r0, #0
   1a7e0:	beq	1a844 <close_stdout@@Base+0x8534>
   1a7e4:	ldr	r2, [r5]
   1a7e8:	mov	r0, r3
   1a7ec:	ldr	r1, [sp, #12]
   1a7f0:	str	ip, [sp, #4]
   1a7f4:	lsl	r2, r2, #4
   1a7f8:	bl	11350 <memcpy@plt>
   1a7fc:	ldr	ip, [sp, #4]
   1a800:	mov	r3, r0
   1a804:	b	1a6c0 <close_stdout@@Base+0x83b0>
   1a808:	mov	r0, r1
   1a80c:	str	ip, [sp, #4]
   1a810:	bl	1144c <malloc@plt>
   1a814:	ldr	ip, [sp, #4]
   1a818:	subs	r3, r0, #0
   1a81c:	beq	1a844 <close_stdout@@Base+0x8534>
   1a820:	ldr	r2, [r5]
   1a824:	mov	r0, r3
   1a828:	ldr	r1, [sp, #12]
   1a82c:	str	ip, [sp, #4]
   1a830:	lsl	r2, r2, #4
   1a834:	bl	11350 <memcpy@plt>
   1a838:	ldr	ip, [sp, #4]
   1a83c:	mov	r3, r0
   1a840:	b	1a564 <close_stdout@@Base+0x8254>
   1a844:	ldr	r2, [sp, #12]
   1a848:	b	1a1f4 <close_stdout@@Base+0x7ee4>
   1a84c:	subs	r2, r1, #1
   1a850:	bxeq	lr
   1a854:	bcc	1aa2c <close_stdout@@Base+0x871c>
   1a858:	cmp	r0, r1
   1a85c:	bls	1aa10 <close_stdout@@Base+0x8700>
   1a860:	tst	r1, r2
   1a864:	beq	1aa1c <close_stdout@@Base+0x870c>
   1a868:	clz	r3, r0
   1a86c:	clz	r2, r1
   1a870:	sub	r3, r2, r3
   1a874:	rsbs	r3, r3, #31
   1a878:	addne	r3, r3, r3, lsl #1
   1a87c:	mov	r2, #0
   1a880:	addne	pc, pc, r3, lsl #2
   1a884:	nop	{0}
   1a888:	cmp	r0, r1, lsl #31
   1a88c:	adc	r2, r2, r2
   1a890:	subcs	r0, r0, r1, lsl #31
   1a894:	cmp	r0, r1, lsl #30
   1a898:	adc	r2, r2, r2
   1a89c:	subcs	r0, r0, r1, lsl #30
   1a8a0:	cmp	r0, r1, lsl #29
   1a8a4:	adc	r2, r2, r2
   1a8a8:	subcs	r0, r0, r1, lsl #29
   1a8ac:	cmp	r0, r1, lsl #28
   1a8b0:	adc	r2, r2, r2
   1a8b4:	subcs	r0, r0, r1, lsl #28
   1a8b8:	cmp	r0, r1, lsl #27
   1a8bc:	adc	r2, r2, r2
   1a8c0:	subcs	r0, r0, r1, lsl #27
   1a8c4:	cmp	r0, r1, lsl #26
   1a8c8:	adc	r2, r2, r2
   1a8cc:	subcs	r0, r0, r1, lsl #26
   1a8d0:	cmp	r0, r1, lsl #25
   1a8d4:	adc	r2, r2, r2
   1a8d8:	subcs	r0, r0, r1, lsl #25
   1a8dc:	cmp	r0, r1, lsl #24
   1a8e0:	adc	r2, r2, r2
   1a8e4:	subcs	r0, r0, r1, lsl #24
   1a8e8:	cmp	r0, r1, lsl #23
   1a8ec:	adc	r2, r2, r2
   1a8f0:	subcs	r0, r0, r1, lsl #23
   1a8f4:	cmp	r0, r1, lsl #22
   1a8f8:	adc	r2, r2, r2
   1a8fc:	subcs	r0, r0, r1, lsl #22
   1a900:	cmp	r0, r1, lsl #21
   1a904:	adc	r2, r2, r2
   1a908:	subcs	r0, r0, r1, lsl #21
   1a90c:	cmp	r0, r1, lsl #20
   1a910:	adc	r2, r2, r2
   1a914:	subcs	r0, r0, r1, lsl #20
   1a918:	cmp	r0, r1, lsl #19
   1a91c:	adc	r2, r2, r2
   1a920:	subcs	r0, r0, r1, lsl #19
   1a924:	cmp	r0, r1, lsl #18
   1a928:	adc	r2, r2, r2
   1a92c:	subcs	r0, r0, r1, lsl #18
   1a930:	cmp	r0, r1, lsl #17
   1a934:	adc	r2, r2, r2
   1a938:	subcs	r0, r0, r1, lsl #17
   1a93c:	cmp	r0, r1, lsl #16
   1a940:	adc	r2, r2, r2
   1a944:	subcs	r0, r0, r1, lsl #16
   1a948:	cmp	r0, r1, lsl #15
   1a94c:	adc	r2, r2, r2
   1a950:	subcs	r0, r0, r1, lsl #15
   1a954:	cmp	r0, r1, lsl #14
   1a958:	adc	r2, r2, r2
   1a95c:	subcs	r0, r0, r1, lsl #14
   1a960:	cmp	r0, r1, lsl #13
   1a964:	adc	r2, r2, r2
   1a968:	subcs	r0, r0, r1, lsl #13
   1a96c:	cmp	r0, r1, lsl #12
   1a970:	adc	r2, r2, r2
   1a974:	subcs	r0, r0, r1, lsl #12
   1a978:	cmp	r0, r1, lsl #11
   1a97c:	adc	r2, r2, r2
   1a980:	subcs	r0, r0, r1, lsl #11
   1a984:	cmp	r0, r1, lsl #10
   1a988:	adc	r2, r2, r2
   1a98c:	subcs	r0, r0, r1, lsl #10
   1a990:	cmp	r0, r1, lsl #9
   1a994:	adc	r2, r2, r2
   1a998:	subcs	r0, r0, r1, lsl #9
   1a99c:	cmp	r0, r1, lsl #8
   1a9a0:	adc	r2, r2, r2
   1a9a4:	subcs	r0, r0, r1, lsl #8
   1a9a8:	cmp	r0, r1, lsl #7
   1a9ac:	adc	r2, r2, r2
   1a9b0:	subcs	r0, r0, r1, lsl #7
   1a9b4:	cmp	r0, r1, lsl #6
   1a9b8:	adc	r2, r2, r2
   1a9bc:	subcs	r0, r0, r1, lsl #6
   1a9c0:	cmp	r0, r1, lsl #5
   1a9c4:	adc	r2, r2, r2
   1a9c8:	subcs	r0, r0, r1, lsl #5
   1a9cc:	cmp	r0, r1, lsl #4
   1a9d0:	adc	r2, r2, r2
   1a9d4:	subcs	r0, r0, r1, lsl #4
   1a9d8:	cmp	r0, r1, lsl #3
   1a9dc:	adc	r2, r2, r2
   1a9e0:	subcs	r0, r0, r1, lsl #3
   1a9e4:	cmp	r0, r1, lsl #2
   1a9e8:	adc	r2, r2, r2
   1a9ec:	subcs	r0, r0, r1, lsl #2
   1a9f0:	cmp	r0, r1, lsl #1
   1a9f4:	adc	r2, r2, r2
   1a9f8:	subcs	r0, r0, r1, lsl #1
   1a9fc:	cmp	r0, r1
   1aa00:	adc	r2, r2, r2
   1aa04:	subcs	r0, r0, r1
   1aa08:	mov	r0, r2
   1aa0c:	bx	lr
   1aa10:	moveq	r0, #1
   1aa14:	movne	r0, #0
   1aa18:	bx	lr
   1aa1c:	clz	r2, r1
   1aa20:	rsb	r2, r2, #31
   1aa24:	lsr	r0, r0, r2
   1aa28:	bx	lr
   1aa2c:	cmp	r0, #0
   1aa30:	mvnne	r0, #0
   1aa34:	b	1aa94 <close_stdout@@Base+0x8784>
   1aa38:	cmp	r1, #0
   1aa3c:	beq	1aa2c <close_stdout@@Base+0x871c>
   1aa40:	push	{r0, r1, lr}
   1aa44:	bl	1a84c <close_stdout@@Base+0x853c>
   1aa48:	pop	{r1, r2, lr}
   1aa4c:	mul	r3, r2, r0
   1aa50:	sub	r1, r1, r3
   1aa54:	bx	lr
   1aa58:	cmp	r3, #0
   1aa5c:	cmpeq	r2, #0
   1aa60:	bne	1aa78 <close_stdout@@Base+0x8768>
   1aa64:	cmp	r1, #0
   1aa68:	cmpeq	r0, #0
   1aa6c:	mvnne	r1, #0
   1aa70:	mvnne	r0, #0
   1aa74:	b	1aa94 <close_stdout@@Base+0x8784>
   1aa78:	sub	sp, sp, #8
   1aa7c:	push	{sp, lr}
   1aa80:	bl	1aae0 <close_stdout@@Base+0x87d0>
   1aa84:	ldr	lr, [sp, #4]
   1aa88:	add	sp, sp, #8
   1aa8c:	pop	{r2, r3}
   1aa90:	bx	lr
   1aa94:	push	{r1, lr}
   1aa98:	mov	r0, #8
   1aa9c:	bl	112e4 <raise@plt>
   1aaa0:	pop	{r1, pc}
   1aaa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aaa8:	mov	r8, r2
   1aaac:	mov	r6, r0
   1aab0:	mov	r7, r1
   1aab4:	mov	sl, r3
   1aab8:	ldr	r9, [sp, #32]
   1aabc:	bl	1ab1c <close_stdout@@Base+0x880c>
   1aac0:	umull	r4, r5, r8, r0
   1aac4:	mul	r8, r8, r1
   1aac8:	mla	r2, r0, sl, r8
   1aacc:	add	r5, r2, r5
   1aad0:	subs	r4, r6, r4
   1aad4:	sbc	r5, r7, r5
   1aad8:	strd	r4, [r9]
   1aadc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1aae0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1aae4:	mov	r8, r2
   1aae8:	mov	r6, r0
   1aaec:	mov	r7, r1
   1aaf0:	mov	r5, r3
   1aaf4:	ldr	r9, [sp, #32]
   1aaf8:	bl	1afa8 <close_stdout@@Base+0x8c98>
   1aafc:	mul	r3, r0, r5
   1ab00:	umull	r4, r5, r0, r8
   1ab04:	mla	r8, r8, r1, r3
   1ab08:	add	r5, r8, r5
   1ab0c:	subs	r4, r6, r4
   1ab10:	sbc	r5, r7, r5
   1ab14:	strd	r4, [r9]
   1ab18:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ab1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab20:	rsbs	r4, r0, #0
   1ab24:	rsc	r5, r1, #0
   1ab28:	cmp	r1, #0
   1ab2c:	mvn	r6, #0
   1ab30:	sub	sp, sp, #12
   1ab34:	movge	r4, r0
   1ab38:	movge	r5, r1
   1ab3c:	movge	r6, #0
   1ab40:	cmp	r3, #0
   1ab44:	blt	1ad7c <close_stdout@@Base+0x8a6c>
   1ab48:	cmp	r3, #0
   1ab4c:	mov	sl, r4
   1ab50:	mov	ip, r5
   1ab54:	mov	r0, r2
   1ab58:	mov	r1, r3
   1ab5c:	mov	r8, r2
   1ab60:	mov	r7, r4
   1ab64:	mov	r9, r5
   1ab68:	bne	1ac60 <close_stdout@@Base+0x8950>
   1ab6c:	cmp	r2, r5
   1ab70:	bls	1ac9c <close_stdout@@Base+0x898c>
   1ab74:	clz	r3, r2
   1ab78:	cmp	r3, #0
   1ab7c:	rsbne	r2, r3, #32
   1ab80:	lslne	r8, r0, r3
   1ab84:	lsrne	r2, r4, r2
   1ab88:	lslne	r7, r4, r3
   1ab8c:	orrne	r9, r2, r5, lsl r3
   1ab90:	lsr	r4, r8, #16
   1ab94:	uxth	sl, r8
   1ab98:	mov	r1, r4
   1ab9c:	mov	r0, r9
   1aba0:	bl	1a84c <close_stdout@@Base+0x853c>
   1aba4:	mov	r1, r4
   1aba8:	mov	fp, r0
   1abac:	mov	r0, r9
   1abb0:	bl	1aa38 <close_stdout@@Base+0x8728>
   1abb4:	mul	r0, sl, fp
   1abb8:	lsr	r2, r7, #16
   1abbc:	orr	r1, r2, r1, lsl #16
   1abc0:	cmp	r0, r1
   1abc4:	bls	1abe8 <close_stdout@@Base+0x88d8>
   1abc8:	adds	r1, r1, r8
   1abcc:	sub	r3, fp, #1
   1abd0:	bcs	1abe4 <close_stdout@@Base+0x88d4>
   1abd4:	cmp	r0, r1
   1abd8:	subhi	fp, fp, #2
   1abdc:	addhi	r1, r1, r8
   1abe0:	bhi	1abe8 <close_stdout@@Base+0x88d8>
   1abe4:	mov	fp, r3
   1abe8:	rsb	r9, r0, r1
   1abec:	mov	r1, r4
   1abf0:	uxth	r7, r7
   1abf4:	mov	r0, r9
   1abf8:	bl	1a84c <close_stdout@@Base+0x853c>
   1abfc:	mov	r1, r4
   1ac00:	mov	r5, r0
   1ac04:	mov	r0, r9
   1ac08:	bl	1aa38 <close_stdout@@Base+0x8728>
   1ac0c:	mul	sl, sl, r5
   1ac10:	orr	r1, r7, r1, lsl #16
   1ac14:	cmp	sl, r1
   1ac18:	bls	1ac38 <close_stdout@@Base+0x8928>
   1ac1c:	adds	r8, r1, r8
   1ac20:	sub	r3, r5, #1
   1ac24:	bcs	1ac34 <close_stdout@@Base+0x8924>
   1ac28:	cmp	sl, r8
   1ac2c:	subhi	r5, r5, #2
   1ac30:	bhi	1ac38 <close_stdout@@Base+0x8928>
   1ac34:	mov	r5, r3
   1ac38:	orr	r3, r5, fp, lsl #16
   1ac3c:	mov	r4, #0
   1ac40:	cmp	r6, #0
   1ac44:	mov	r0, r3
   1ac48:	mov	r1, r4
   1ac4c:	beq	1ac58 <close_stdout@@Base+0x8948>
   1ac50:	rsbs	r0, r0, #0
   1ac54:	rsc	r1, r1, #0
   1ac58:	add	sp, sp, #12
   1ac5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac60:	cmp	r3, r5
   1ac64:	movhi	r4, #0
   1ac68:	movhi	r3, r4
   1ac6c:	bhi	1ac40 <close_stdout@@Base+0x8930>
   1ac70:	clz	r5, r1
   1ac74:	cmp	r5, #0
   1ac78:	bne	1ae68 <close_stdout@@Base+0x8b58>
   1ac7c:	cmp	r1, ip
   1ac80:	cmpcs	r2, sl
   1ac84:	movhi	r4, #0
   1ac88:	movls	r4, #1
   1ac8c:	movls	r3, #1
   1ac90:	movls	r4, r5
   1ac94:	movhi	r3, r4
   1ac98:	b	1ac40 <close_stdout@@Base+0x8930>
   1ac9c:	cmp	r2, #0
   1aca0:	bne	1acb4 <close_stdout@@Base+0x89a4>
   1aca4:	mov	r1, r2
   1aca8:	mov	r0, #1
   1acac:	bl	1a84c <close_stdout@@Base+0x853c>
   1acb0:	mov	r8, r0
   1acb4:	clz	r3, r8
   1acb8:	cmp	r3, #0
   1acbc:	bne	1ad8c <close_stdout@@Base+0x8a7c>
   1acc0:	rsb	r9, r8, r9
   1acc4:	lsr	r5, r8, #16
   1acc8:	uxth	sl, r8
   1accc:	mov	r4, #1
   1acd0:	mov	r1, r5
   1acd4:	mov	r0, r9
   1acd8:	bl	1a84c <close_stdout@@Base+0x853c>
   1acdc:	mov	r1, r5
   1ace0:	mov	fp, r0
   1ace4:	mov	r0, r9
   1ace8:	bl	1aa38 <close_stdout@@Base+0x8728>
   1acec:	mul	r0, sl, fp
   1acf0:	lsr	r2, r7, #16
   1acf4:	orr	r1, r2, r1, lsl #16
   1acf8:	cmp	r0, r1
   1acfc:	bls	1ad1c <close_stdout@@Base+0x8a0c>
   1ad00:	adds	r1, r1, r8
   1ad04:	sub	r3, fp, #1
   1ad08:	bcs	1af88 <close_stdout@@Base+0x8c78>
   1ad0c:	cmp	r0, r1
   1ad10:	subhi	fp, fp, #2
   1ad14:	addhi	r1, r1, r8
   1ad18:	bls	1af88 <close_stdout@@Base+0x8c78>
   1ad1c:	rsb	r2, r0, r1
   1ad20:	mov	r1, r5
   1ad24:	str	r2, [sp]
   1ad28:	uxth	r7, r7
   1ad2c:	mov	r0, r2
   1ad30:	bl	1a84c <close_stdout@@Base+0x853c>
   1ad34:	ldr	r2, [sp]
   1ad38:	mov	r1, r5
   1ad3c:	mov	r9, r0
   1ad40:	mov	r0, r2
   1ad44:	bl	1aa38 <close_stdout@@Base+0x8728>
   1ad48:	mul	sl, sl, r9
   1ad4c:	orr	r1, r7, r1, lsl #16
   1ad50:	cmp	sl, r1
   1ad54:	bls	1ad74 <close_stdout@@Base+0x8a64>
   1ad58:	adds	r8, r1, r8
   1ad5c:	sub	r3, r9, #1
   1ad60:	bcs	1ad70 <close_stdout@@Base+0x8a60>
   1ad64:	cmp	sl, r8
   1ad68:	subhi	r9, r9, #2
   1ad6c:	bhi	1ad74 <close_stdout@@Base+0x8a64>
   1ad70:	mov	r9, r3
   1ad74:	orr	r3, r9, fp, lsl #16
   1ad78:	b	1ac40 <close_stdout@@Base+0x8930>
   1ad7c:	mvn	r6, r6
   1ad80:	rsbs	r2, r2, #0
   1ad84:	rsc	r3, r3, #0
   1ad88:	b	1ab48 <close_stdout@@Base+0x8838>
   1ad8c:	lsl	r8, r8, r3
   1ad90:	rsb	fp, r3, #32
   1ad94:	lsr	r4, r9, fp
   1ad98:	lsr	fp, r7, fp
   1ad9c:	lsr	r5, r8, #16
   1ada0:	orr	fp, fp, r9, lsl r3
   1ada4:	mov	r0, r4
   1ada8:	lsl	r7, r7, r3
   1adac:	mov	r1, r5
   1adb0:	uxth	sl, r8
   1adb4:	bl	1a84c <close_stdout@@Base+0x853c>
   1adb8:	mov	r1, r5
   1adbc:	mov	r3, r0
   1adc0:	mov	r0, r4
   1adc4:	str	r3, [sp]
   1adc8:	bl	1aa38 <close_stdout@@Base+0x8728>
   1adcc:	ldr	r3, [sp]
   1add0:	lsr	r2, fp, #16
   1add4:	mul	r0, sl, r3
   1add8:	orr	r1, r2, r1, lsl #16
   1addc:	cmp	r0, r1
   1ade0:	bls	1ae00 <close_stdout@@Base+0x8af0>
   1ade4:	adds	r1, r1, r8
   1ade8:	sub	r2, r3, #1
   1adec:	bcs	1afa0 <close_stdout@@Base+0x8c90>
   1adf0:	cmp	r0, r1
   1adf4:	subhi	r3, r3, #2
   1adf8:	addhi	r1, r1, r8
   1adfc:	bls	1afa0 <close_stdout@@Base+0x8c90>
   1ae00:	rsb	r9, r0, r1
   1ae04:	mov	r1, r5
   1ae08:	str	r3, [sp]
   1ae0c:	uxth	fp, fp
   1ae10:	mov	r0, r9
   1ae14:	bl	1a84c <close_stdout@@Base+0x853c>
   1ae18:	mov	r1, r5
   1ae1c:	mov	r4, r0
   1ae20:	mov	r0, r9
   1ae24:	bl	1aa38 <close_stdout@@Base+0x8728>
   1ae28:	mul	r9, sl, r4
   1ae2c:	ldr	r3, [sp]
   1ae30:	orr	r1, fp, r1, lsl #16
   1ae34:	cmp	r9, r1
   1ae38:	bls	1ae5c <close_stdout@@Base+0x8b4c>
   1ae3c:	adds	r1, r1, r8
   1ae40:	sub	r2, r4, #1
   1ae44:	bcs	1ae58 <close_stdout@@Base+0x8b48>
   1ae48:	cmp	r9, r1
   1ae4c:	subhi	r4, r4, #2
   1ae50:	addhi	r1, r1, r8
   1ae54:	bhi	1ae5c <close_stdout@@Base+0x8b4c>
   1ae58:	mov	r4, r2
   1ae5c:	rsb	r9, r9, r1
   1ae60:	orr	r4, r4, r3, lsl #16
   1ae64:	b	1acd0 <close_stdout@@Base+0x89c0>
   1ae68:	rsb	sl, r5, #32
   1ae6c:	lsl	r3, r2, r5
   1ae70:	lsr	r0, r2, sl
   1ae74:	lsr	r2, ip, sl
   1ae78:	orr	r4, r0, r1, lsl r5
   1ae7c:	lsr	sl, r7, sl
   1ae80:	mov	r0, r2
   1ae84:	orr	sl, sl, ip, lsl r5
   1ae88:	lsr	r9, r4, #16
   1ae8c:	str	r3, [sp, #4]
   1ae90:	str	r2, [sp]
   1ae94:	uxth	fp, r4
   1ae98:	mov	r1, r9
   1ae9c:	bl	1a84c <close_stdout@@Base+0x853c>
   1aea0:	ldr	r2, [sp]
   1aea4:	mov	r1, r9
   1aea8:	mov	r8, r0
   1aeac:	mov	r0, r2
   1aeb0:	bl	1aa38 <close_stdout@@Base+0x8728>
   1aeb4:	mul	r0, fp, r8
   1aeb8:	lsr	r2, sl, #16
   1aebc:	orr	r1, r2, r1, lsl #16
   1aec0:	cmp	r0, r1
   1aec4:	bls	1aee4 <close_stdout@@Base+0x8bd4>
   1aec8:	adds	r1, r1, r4
   1aecc:	sub	r2, r8, #1
   1aed0:	bcs	1af98 <close_stdout@@Base+0x8c88>
   1aed4:	cmp	r0, r1
   1aed8:	subhi	r8, r8, #2
   1aedc:	addhi	r1, r1, r4
   1aee0:	bls	1af98 <close_stdout@@Base+0x8c88>
   1aee4:	rsb	ip, r0, r1
   1aee8:	mov	r1, r9
   1aeec:	str	ip, [sp]
   1aef0:	mov	r0, ip
   1aef4:	bl	1a84c <close_stdout@@Base+0x853c>
   1aef8:	ldr	ip, [sp]
   1aefc:	mov	r1, r9
   1af00:	mov	r2, r0
   1af04:	mov	r0, ip
   1af08:	str	r2, [sp]
   1af0c:	bl	1aa38 <close_stdout@@Base+0x8728>
   1af10:	ldr	r2, [sp]
   1af14:	uxth	ip, sl
   1af18:	mul	fp, fp, r2
   1af1c:	orr	ip, ip, r1, lsl #16
   1af20:	cmp	fp, ip
   1af24:	bls	1af44 <close_stdout@@Base+0x8c34>
   1af28:	adds	ip, ip, r4
   1af2c:	sub	r1, r2, #1
   1af30:	bcs	1af90 <close_stdout@@Base+0x8c80>
   1af34:	cmp	fp, ip
   1af38:	subhi	r2, r2, #2
   1af3c:	addhi	ip, ip, r4
   1af40:	bls	1af90 <close_stdout@@Base+0x8c80>
   1af44:	ldr	r0, [sp, #4]
   1af48:	orr	r1, r2, r8, lsl #16
   1af4c:	rsb	fp, fp, ip
   1af50:	umull	r2, r3, r1, r0
   1af54:	cmp	fp, r3
   1af58:	bcc	1af7c <close_stdout@@Base+0x8c6c>
   1af5c:	movne	r4, #0
   1af60:	moveq	r4, #1
   1af64:	cmp	r2, r7, lsl r5
   1af68:	movls	r4, #0
   1af6c:	andhi	r4, r4, #1
   1af70:	cmp	r4, #0
   1af74:	moveq	r3, r1
   1af78:	beq	1ac40 <close_stdout@@Base+0x8930>
   1af7c:	sub	r3, r1, #1
   1af80:	mov	r4, #0
   1af84:	b	1ac40 <close_stdout@@Base+0x8930>
   1af88:	mov	fp, r3
   1af8c:	b	1ad1c <close_stdout@@Base+0x8a0c>
   1af90:	mov	r2, r1
   1af94:	b	1af44 <close_stdout@@Base+0x8c34>
   1af98:	mov	r8, r2
   1af9c:	b	1aee4 <close_stdout@@Base+0x8bd4>
   1afa0:	mov	r3, r2
   1afa4:	b	1ae00 <close_stdout@@Base+0x8af0>
   1afa8:	cmp	r3, #0
   1afac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afb0:	mov	r6, r0
   1afb4:	sub	sp, sp, #12
   1afb8:	mov	r5, r1
   1afbc:	mov	r7, r0
   1afc0:	mov	r4, r2
   1afc4:	mov	r8, r1
   1afc8:	bne	1b0a8 <close_stdout@@Base+0x8d98>
   1afcc:	cmp	r2, r1
   1afd0:	bls	1b0e4 <close_stdout@@Base+0x8dd4>
   1afd4:	clz	r3, r2
   1afd8:	cmp	r3, #0
   1afdc:	rsbne	r8, r3, #32
   1afe0:	lslne	r4, r2, r3
   1afe4:	lsrne	r8, r0, r8
   1afe8:	lslne	r7, r0, r3
   1afec:	orrne	r8, r8, r1, lsl r3
   1aff0:	lsr	r5, r4, #16
   1aff4:	uxth	sl, r4
   1aff8:	mov	r1, r5
   1affc:	mov	r0, r8
   1b000:	bl	1a84c <close_stdout@@Base+0x853c>
   1b004:	mov	r1, r5
   1b008:	mov	r9, r0
   1b00c:	mov	r0, r8
   1b010:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b014:	mul	r0, sl, r9
   1b018:	lsr	r3, r7, #16
   1b01c:	orr	r1, r3, r1, lsl #16
   1b020:	cmp	r0, r1
   1b024:	bls	1b048 <close_stdout@@Base+0x8d38>
   1b028:	adds	r1, r1, r4
   1b02c:	sub	r2, r9, #1
   1b030:	bcs	1b044 <close_stdout@@Base+0x8d34>
   1b034:	cmp	r0, r1
   1b038:	subhi	r9, r9, #2
   1b03c:	addhi	r1, r1, r4
   1b040:	bhi	1b048 <close_stdout@@Base+0x8d38>
   1b044:	mov	r9, r2
   1b048:	rsb	r8, r0, r1
   1b04c:	mov	r1, r5
   1b050:	uxth	r7, r7
   1b054:	mov	r0, r8
   1b058:	bl	1a84c <close_stdout@@Base+0x853c>
   1b05c:	mov	r1, r5
   1b060:	mov	r6, r0
   1b064:	mov	r0, r8
   1b068:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b06c:	mul	sl, sl, r6
   1b070:	orr	r1, r7, r1, lsl #16
   1b074:	cmp	sl, r1
   1b078:	bls	1b094 <close_stdout@@Base+0x8d84>
   1b07c:	adds	r4, r1, r4
   1b080:	sub	r3, r6, #1
   1b084:	bcs	1b390 <close_stdout@@Base+0x9080>
   1b088:	cmp	sl, r4
   1b08c:	subhi	r6, r6, #2
   1b090:	bls	1b390 <close_stdout@@Base+0x9080>
   1b094:	orr	r0, r6, r9, lsl #16
   1b098:	mov	r6, #0
   1b09c:	mov	r1, r6
   1b0a0:	add	sp, sp, #12
   1b0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0a8:	cmp	r3, r1
   1b0ac:	movhi	r6, #0
   1b0b0:	movhi	r0, r6
   1b0b4:	bhi	1b09c <close_stdout@@Base+0x8d8c>
   1b0b8:	clz	r7, r3
   1b0bc:	cmp	r7, #0
   1b0c0:	bne	1b1c0 <close_stdout@@Base+0x8eb0>
   1b0c4:	cmp	r3, r1
   1b0c8:	cmpcs	r2, r6
   1b0cc:	movhi	r6, #0
   1b0d0:	movls	r6, #1
   1b0d4:	movls	r0, #1
   1b0d8:	movls	r6, r7
   1b0dc:	movhi	r0, r6
   1b0e0:	b	1b09c <close_stdout@@Base+0x8d8c>
   1b0e4:	cmp	r2, #0
   1b0e8:	bne	1b0fc <close_stdout@@Base+0x8dec>
   1b0ec:	mov	r1, r2
   1b0f0:	mov	r0, #1
   1b0f4:	bl	1a84c <close_stdout@@Base+0x853c>
   1b0f8:	mov	r4, r0
   1b0fc:	clz	r3, r4
   1b100:	cmp	r3, #0
   1b104:	bne	1b2bc <close_stdout@@Base+0x8fac>
   1b108:	rsb	r5, r4, r5
   1b10c:	lsr	r8, r4, #16
   1b110:	uxth	sl, r4
   1b114:	mov	r6, #1
   1b118:	mov	r1, r8
   1b11c:	mov	r0, r5
   1b120:	bl	1a84c <close_stdout@@Base+0x853c>
   1b124:	mov	r1, r8
   1b128:	mov	r9, r0
   1b12c:	mov	r0, r5
   1b130:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b134:	mul	r0, sl, r9
   1b138:	lsr	r3, r7, #16
   1b13c:	orr	r1, r3, r1, lsl #16
   1b140:	cmp	r0, r1
   1b144:	bls	1b164 <close_stdout@@Base+0x8e54>
   1b148:	adds	r1, r1, r4
   1b14c:	sub	r2, r9, #1
   1b150:	bcs	1b398 <close_stdout@@Base+0x9088>
   1b154:	cmp	r0, r1
   1b158:	subhi	r9, r9, #2
   1b15c:	addhi	r1, r1, r4
   1b160:	bls	1b398 <close_stdout@@Base+0x9088>
   1b164:	rsb	fp, r0, r1
   1b168:	mov	r1, r8
   1b16c:	uxth	r7, r7
   1b170:	mov	r0, fp
   1b174:	bl	1a84c <close_stdout@@Base+0x853c>
   1b178:	mov	r1, r8
   1b17c:	mov	r5, r0
   1b180:	mov	r0, fp
   1b184:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b188:	mul	sl, sl, r5
   1b18c:	orr	r1, r7, r1, lsl #16
   1b190:	cmp	sl, r1
   1b194:	bls	1b1b0 <close_stdout@@Base+0x8ea0>
   1b198:	adds	r4, r1, r4
   1b19c:	sub	r3, r5, #1
   1b1a0:	bcs	1b3a0 <close_stdout@@Base+0x9090>
   1b1a4:	cmp	sl, r4
   1b1a8:	subhi	r5, r5, #2
   1b1ac:	bls	1b3a0 <close_stdout@@Base+0x9090>
   1b1b0:	orr	r0, r5, r9, lsl #16
   1b1b4:	mov	r1, r6
   1b1b8:	add	sp, sp, #12
   1b1bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1c0:	rsb	r1, r7, #32
   1b1c4:	lsl	r0, r2, r7
   1b1c8:	lsr	r2, r2, r1
   1b1cc:	lsr	fp, r5, r1
   1b1d0:	orr	r8, r2, r3, lsl r7
   1b1d4:	lsr	r1, r6, r1
   1b1d8:	str	r0, [sp, #4]
   1b1dc:	orr	r5, r1, r5, lsl r7
   1b1e0:	lsr	r9, r8, #16
   1b1e4:	mov	r0, fp
   1b1e8:	uxth	sl, r8
   1b1ec:	mov	r1, r9
   1b1f0:	bl	1a84c <close_stdout@@Base+0x853c>
   1b1f4:	mov	r1, r9
   1b1f8:	mov	r4, r0
   1b1fc:	mov	r0, fp
   1b200:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b204:	mul	r0, sl, r4
   1b208:	lsr	ip, r5, #16
   1b20c:	orr	r1, ip, r1, lsl #16
   1b210:	cmp	r0, r1
   1b214:	bls	1b228 <close_stdout@@Base+0x8f18>
   1b218:	adds	r1, r1, r8
   1b21c:	sub	r2, r4, #1
   1b220:	bcc	1b3bc <close_stdout@@Base+0x90ac>
   1b224:	mov	r4, r2
   1b228:	rsb	ip, r0, r1
   1b22c:	mov	r1, r9
   1b230:	str	ip, [sp]
   1b234:	uxth	r5, r5
   1b238:	mov	r0, ip
   1b23c:	bl	1a84c <close_stdout@@Base+0x853c>
   1b240:	ldr	ip, [sp]
   1b244:	mov	r1, r9
   1b248:	mov	fp, r0
   1b24c:	mov	r0, ip
   1b250:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b254:	mul	sl, sl, fp
   1b258:	orr	r1, r5, r1, lsl #16
   1b25c:	cmp	sl, r1
   1b260:	bls	1b274 <close_stdout@@Base+0x8f64>
   1b264:	adds	r1, r1, r8
   1b268:	sub	r2, fp, #1
   1b26c:	bcc	1b3a8 <close_stdout@@Base+0x9098>
   1b270:	mov	fp, r2
   1b274:	ldr	r3, [sp, #4]
   1b278:	orr	r0, fp, r4, lsl #16
   1b27c:	rsb	sl, sl, r1
   1b280:	umull	r4, r5, r0, r3
   1b284:	cmp	sl, r5
   1b288:	bcc	1b2a8 <close_stdout@@Base+0x8f98>
   1b28c:	movne	r3, #0
   1b290:	moveq	r3, #1
   1b294:	cmp	r4, r6, lsl r7
   1b298:	movls	r6, #0
   1b29c:	andhi	r6, r3, #1
   1b2a0:	cmp	r6, #0
   1b2a4:	beq	1b09c <close_stdout@@Base+0x8d8c>
   1b2a8:	mov	r6, #0
   1b2ac:	sub	r0, r0, #1
   1b2b0:	mov	r1, r6
   1b2b4:	add	sp, sp, #12
   1b2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2bc:	lsl	r4, r4, r3
   1b2c0:	rsb	r9, r3, #32
   1b2c4:	lsr	r2, r5, r9
   1b2c8:	lsr	r9, r6, r9
   1b2cc:	lsr	r8, r4, #16
   1b2d0:	orr	r9, r9, r5, lsl r3
   1b2d4:	mov	r0, r2
   1b2d8:	lsl	r7, r6, r3
   1b2dc:	mov	r1, r8
   1b2e0:	str	r2, [sp]
   1b2e4:	bl	1a84c <close_stdout@@Base+0x853c>
   1b2e8:	ldr	r2, [sp]
   1b2ec:	mov	r1, r8
   1b2f0:	uxth	sl, r4
   1b2f4:	mov	fp, r0
   1b2f8:	mov	r0, r2
   1b2fc:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b300:	mul	r0, sl, fp
   1b304:	lsr	r3, r9, #16
   1b308:	orr	r1, r3, r1, lsl #16
   1b30c:	cmp	r0, r1
   1b310:	bls	1b330 <close_stdout@@Base+0x9020>
   1b314:	adds	r1, r1, r4
   1b318:	sub	r3, fp, #1
   1b31c:	bcs	1b3d0 <close_stdout@@Base+0x90c0>
   1b320:	cmp	r0, r1
   1b324:	subhi	fp, fp, #2
   1b328:	addhi	r1, r1, r4
   1b32c:	bls	1b3d0 <close_stdout@@Base+0x90c0>
   1b330:	rsb	r5, r0, r1
   1b334:	mov	r1, r8
   1b338:	uxth	r9, r9
   1b33c:	mov	r0, r5
   1b340:	bl	1a84c <close_stdout@@Base+0x853c>
   1b344:	mov	r1, r8
   1b348:	mov	r6, r0
   1b34c:	mov	r0, r5
   1b350:	bl	1aa38 <close_stdout@@Base+0x8728>
   1b354:	mul	r5, sl, r6
   1b358:	orr	r1, r9, r1, lsl #16
   1b35c:	cmp	r5, r1
   1b360:	bls	1b384 <close_stdout@@Base+0x9074>
   1b364:	adds	r1, r1, r4
   1b368:	sub	r3, r6, #1
   1b36c:	bcs	1b380 <close_stdout@@Base+0x9070>
   1b370:	cmp	r5, r1
   1b374:	subhi	r6, r6, #2
   1b378:	addhi	r1, r1, r4
   1b37c:	bhi	1b384 <close_stdout@@Base+0x9074>
   1b380:	mov	r6, r3
   1b384:	rsb	r5, r5, r1
   1b388:	orr	r6, r6, fp, lsl #16
   1b38c:	b	1b118 <close_stdout@@Base+0x8e08>
   1b390:	mov	r6, r3
   1b394:	b	1b094 <close_stdout@@Base+0x8d84>
   1b398:	mov	r9, r2
   1b39c:	b	1b164 <close_stdout@@Base+0x8e54>
   1b3a0:	mov	r5, r3
   1b3a4:	b	1b1b0 <close_stdout@@Base+0x8ea0>
   1b3a8:	cmp	sl, r1
   1b3ac:	subhi	fp, fp, #2
   1b3b0:	addhi	r1, r1, r8
   1b3b4:	bhi	1b274 <close_stdout@@Base+0x8f64>
   1b3b8:	b	1b270 <close_stdout@@Base+0x8f60>
   1b3bc:	cmp	r0, r1
   1b3c0:	subhi	r4, r4, #2
   1b3c4:	addhi	r1, r1, r8
   1b3c8:	bhi	1b228 <close_stdout@@Base+0x8f18>
   1b3cc:	b	1b224 <close_stdout@@Base+0x8f14>
   1b3d0:	mov	fp, r3
   1b3d4:	b	1b330 <close_stdout@@Base+0x9020>
   1b3d8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1b3dc:	mov	r7, r0
   1b3e0:	ldr	r6, [pc, #76]	; 1b434 <close_stdout@@Base+0x9124>
   1b3e4:	mov	r8, r1
   1b3e8:	ldr	r5, [pc, #72]	; 1b438 <close_stdout@@Base+0x9128>
   1b3ec:	mov	r9, r2
   1b3f0:	add	r6, pc, r6
   1b3f4:	bl	112a0 <fdopen@plt-0x20>
   1b3f8:	add	r5, pc, r5
   1b3fc:	rsb	r6, r5, r6
   1b400:	asrs	r6, r6, #2
   1b404:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b408:	sub	r5, r5, #4
   1b40c:	mov	r4, #0
   1b410:	add	r4, r4, #1
   1b414:	ldr	r3, [r5, #4]!
   1b418:	mov	r0, r7
   1b41c:	mov	r1, r8
   1b420:	mov	r2, r9
   1b424:	blx	r3
   1b428:	cmp	r4, r6
   1b42c:	bne	1b410 <close_stdout@@Base+0x9100>
   1b430:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b434:	andeq	r1, r1, r4, ror sl
   1b438:	andeq	r1, r1, r8, ror #20
   1b43c:	bx	lr
   1b440:	ldr	r3, [pc, #28]	; 1b464 <close_stdout@@Base+0x9154>
   1b444:	mov	r1, #0
   1b448:	ldr	r2, [pc, #24]	; 1b468 <close_stdout@@Base+0x9158>
   1b44c:	add	r3, pc, r3
   1b450:	ldr	r3, [r3, r2]
   1b454:	cmp	r3, #0
   1b458:	ldrne	r2, [r3]
   1b45c:	moveq	r2, r3
   1b460:	b	11518 <__cxa_atexit@plt>
   1b464:	andeq	r1, r1, ip, lsr #23
   1b468:	andeq	r0, r0, ip, asr r1

Disassembly of section .fini:

0001b46c <.fini>:
   1b46c:	push	{r3, lr}
   1b470:	pop	{r3, pc}
