
centos-preinstalled/ipcmk:     file format elf32-littlearm


Disassembly of section .init:

00010f3c <.init>:
   10f3c:	push	{r3, lr}
   10f40:	bl	11638 <strspn@plt+0x400>
   10f44:	pop	{r3, pc}

Disassembly of section .plt:

00010f48 <calloc@plt-0x14>:
   10f48:	push	{lr}		; (str lr, [sp, #-4]!)
   10f4c:	ldr	lr, [pc, #4]	; 10f58 <calloc@plt-0x4>
   10f50:	add	lr, pc, lr
   10f54:	ldr	pc, [lr, #8]!
   10f58:	andeq	r4, r1, r8, lsr #1

00010f5c <calloc@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #20, 20	; 0x14000
   10f64:	ldr	pc, [ip, #168]!	; 0xa8

00010f68 <raise@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #20, 20	; 0x14000
   10f70:	ldr	pc, [ip, #160]!	; 0xa0

00010f74 <strcmp@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #20, 20	; 0x14000
   10f7c:	ldr	pc, [ip, #152]!	; 0x98

00010f80 <strtol@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #20, 20	; 0x14000
   10f88:	ldr	pc, [ip, #144]!	; 0x90

00010f8c <srandom@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #20, 20	; 0x14000
   10f94:	ldr	pc, [ip, #136]!	; 0x88

00010f98 <strcspn@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #20, 20	; 0x14000
   10fa0:	ldr	pc, [ip, #128]!	; 0x80

00010fa4 <read@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #20, 20	; 0x14000
   10fac:	ldr	pc, [ip, #120]!	; 0x78

00010fb0 <getuid@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #20, 20	; 0x14000
   10fb8:	ldr	pc, [ip, #112]!	; 0x70

00010fbc <free@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #20, 20	; 0x14000
   10fc4:	ldr	pc, [ip, #104]!	; 0x68

00010fc8 <ferror@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #20, 20	; 0x14000
   10fd0:	ldr	pc, [ip, #96]!	; 0x60

00010fd4 <_exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #20, 20	; 0x14000
   10fdc:	ldr	pc, [ip, #88]!	; 0x58

00010fe0 <memcpy@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #20, 20	; 0x14000
   10fe8:	ldr	pc, [ip, #80]!	; 0x50

00010fec <shmget@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #20, 20	; 0x14000
   10ff4:	ldr	pc, [ip, #72]!	; 0x48

00010ff8 <__strtoull_internal@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #20, 20	; 0x14000
   11000:	ldr	pc, [ip, #64]!	; 0x40

00011004 <jrand48@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #20, 20	; 0x14000
   1100c:	ldr	pc, [ip, #56]!	; 0x38

00011010 <dcgettext@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #20, 20	; 0x14000
   11018:	ldr	pc, [ip, #48]!	; 0x30

0001101c <__stack_chk_fail@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #20, 20	; 0x14000
   11024:	ldr	pc, [ip, #40]!	; 0x28

00011028 <textdomain@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #20, 20	; 0x14000
   11030:	ldr	pc, [ip, #32]!

00011034 <__strndup@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #20, 20	; 0x14000
   1103c:	ldr	pc, [ip, #24]!

00011040 <err@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #20, 20	; 0x14000
   11048:	ldr	pc, [ip, #16]!

0001104c <gettimeofday@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #20, 20	; 0x14000
   11054:	ldr	pc, [ip, #8]!

00011058 <__fpending@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #20, 20	; 0x14000
   11060:	ldr	pc, [ip, #0]!

00011064 <open64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #77824	; 0x13000
   1106c:	ldr	pc, [ip, #4088]!	; 0xff8

00011070 <malloc@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #77824	; 0x13000
   11078:	ldr	pc, [ip, #4080]!	; 0xff0

0001107c <__libc_start_main@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #77824	; 0x13000
   11084:	ldr	pc, [ip, #4072]!	; 0xfe8

00011088 <__gmon_start__@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #77824	; 0x13000
   11090:	ldr	pc, [ip, #4064]!	; 0xfe0

00011094 <getopt_long@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #77824	; 0x13000
   1109c:	ldr	pc, [ip, #4056]!	; 0xfd8

000110a0 <__ctype_b_loc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #77824	; 0x13000
   110a8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110ac <getpid@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #77824	; 0x13000
   110b4:	ldr	pc, [ip, #4040]!	; 0xfc8

000110b8 <exit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #77824	; 0x13000
   110c0:	ldr	pc, [ip, #4032]!	; 0xfc0

000110c4 <syscall@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #77824	; 0x13000
   110cc:	ldr	pc, [ip, #4024]!	; 0xfb8

000110d0 <strtoul@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #77824	; 0x13000
   110d8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110dc <strlen@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #77824	; 0x13000
   110e4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110e8 <strchr@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #77824	; 0x13000
   110f0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110f4 <warnx@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #77824	; 0x13000
   110fc:	ldr	pc, [ip, #3992]!	; 0xf98

00011100 <fcntl@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #77824	; 0x13000
   11108:	ldr	pc, [ip, #3984]!	; 0xf90

0001110c <__errno_location@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #77824	; 0x13000
   11114:	ldr	pc, [ip, #3976]!	; 0xf88

00011118 <__cxa_atexit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #77824	; 0x13000
   11120:	ldr	pc, [ip, #3968]!	; 0xf80

00011124 <__vasprintf_chk@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #77824	; 0x13000
   1112c:	ldr	pc, [ip, #3960]!	; 0xf78

00011130 <__strdup@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #77824	; 0x13000
   11138:	ldr	pc, [ip, #3952]!	; 0xf70

0001113c <semget@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #77824	; 0x13000
   11144:	ldr	pc, [ip, #3944]!	; 0xf68

00011148 <fgetc@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #77824	; 0x13000
   11150:	ldr	pc, [ip, #3936]!	; 0xf60

00011154 <__printf_chk@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #77824	; 0x13000
   1115c:	ldr	pc, [ip, #3928]!	; 0xf58

00011160 <strtod@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #77824	; 0x13000
   11168:	ldr	pc, [ip, #3920]!	; 0xf50

0001116c <__fprintf_chk@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #77824	; 0x13000
   11174:	ldr	pc, [ip, #3912]!	; 0xf48

00011178 <fclose@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #77824	; 0x13000
   11180:	ldr	pc, [ip, #3904]!	; 0xf40

00011184 <setlocale@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #77824	; 0x13000
   1118c:	ldr	pc, [ip, #3896]!	; 0xf38

00011190 <errx@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #77824	; 0x13000
   11198:	ldr	pc, [ip, #3888]!	; 0xf30

0001119c <warn@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #77824	; 0x13000
   111a4:	ldr	pc, [ip, #3880]!	; 0xf28

000111a8 <localeconv@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #77824	; 0x13000
   111b0:	ldr	pc, [ip, #3872]!	; 0xf20

000111b4 <getppid@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #77824	; 0x13000
   111bc:	ldr	pc, [ip, #3864]!	; 0xf18

000111c0 <__strtoll_internal@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #77824	; 0x13000
   111c8:	ldr	pc, [ip, #3856]!	; 0xf10

000111cc <msgget@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #77824	; 0x13000
   111d4:	ldr	pc, [ip, #3848]!	; 0xf08

000111d8 <bindtextdomain@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #77824	; 0x13000
   111e0:	ldr	pc, [ip, #3840]!	; 0xf00

000111e4 <__tls_get_addr@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #77824	; 0x13000
   111ec:	ldr	pc, [ip, #3832]!	; 0xef8

000111f0 <random@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #77824	; 0x13000
   111f8:	ldr	pc, [ip, #3824]!	; 0xef0

000111fc <fputs@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #77824	; 0x13000
   11204:	ldr	pc, [ip, #3816]!	; 0xee8

00011208 <strncmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #77824	; 0x13000
   11210:	ldr	pc, [ip, #3808]!	; 0xee0

00011214 <abort@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #77824	; 0x13000
   1121c:	ldr	pc, [ip, #3800]!	; 0xed8

00011220 <close@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #77824	; 0x13000
   11228:	ldr	pc, [ip, #3792]!	; 0xed0

0001122c <__snprintf_chk@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #77824	; 0x13000
   11234:	ldr	pc, [ip, #3784]!	; 0xec8

00011238 <strspn@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #77824	; 0x13000
   11240:	ldr	pc, [ip, #3776]!	; 0xec0

Disassembly of section .text:

00011248 <.text>:
   11248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1124c:	movw	r6, #20776	; 0x5128
   11250:	movt	r6, #2
   11254:	sub	sp, sp, #36	; 0x24
   11258:	mov	r9, r1
   1125c:	mov	r8, r0
   11260:	ldr	r3, [r6]
   11264:	movw	r1, #17388	; 0x43ec
   11268:	mov	r0, #6
   1126c:	movt	r1, #1
   11270:	mov	r5, #0
   11274:	movw	r7, #20792	; 0x5138
   11278:	str	r3, [sp, #28]
   1127c:	bl	11184 <setlocale@plt>
   11280:	movw	r0, #17544	; 0x4488
   11284:	movw	r1, #17556	; 0x4494
   11288:	movt	r0, #1
   1128c:	movt	r1, #1
   11290:	bl	111d8 <bindtextdomain@plt>
   11294:	movt	r7, #2
   11298:	movw	r0, #17544	; 0x4488
   1129c:	movt	r0, #1
   112a0:	bl	11028 <textdomain@plt>
   112a4:	mov	sl, r5
   112a8:	movw	r0, #6356	; 0x18d4
   112ac:	mov	fp, r5
   112b0:	movt	r0, #1
   112b4:	bl	14210 <strspn@plt+0x2fd8>
   112b8:	mov	r3, #420	; 0x1a4
   112bc:	str	r5, [sp, #16]
   112c0:	str	r5, [sp, #20]
   112c4:	str	r3, [sp, #12]
   112c8:	mov	r4, #0
   112cc:	movw	r2, #17660	; 0x44fc
   112d0:	str	r4, [sp]
   112d4:	movt	r2, #1
   112d8:	movw	r3, #16972	; 0x424c
   112dc:	mov	r0, r8
   112e0:	movt	r3, #1
   112e4:	mov	r1, r9
   112e8:	bl	11094 <getopt_long@plt>
   112ec:	cmn	r0, #1
   112f0:	beq	11484 <strspn@plt+0x24c>
   112f4:	sub	r0, r0, #77	; 0x4d
   112f8:	cmp	r0, #35	; 0x23
   112fc:	ldrls	pc, [pc, r0, lsl #2]
   11300:	b	11474 <strspn@plt+0x23c>
   11304:	andeq	r1, r1, r4, asr #8
   11308:	andeq	r1, r1, r4, ror r4
   1130c:	andeq	r1, r1, r4, ror r4
   11310:	andeq	r1, r1, r4, ror r4
   11314:	andeq	r1, r1, ip, lsr r4
   11318:	andeq	r1, r1, r4, ror r4
   1131c:	andeq	r1, r1, ip, lsl #8
   11320:	andeq	r1, r1, r4, ror r4
   11324:	andeq	r1, r1, r4, ror r4
   11328:			; <UNDEFINED> instruction: 0x000113bc
   1132c:	andeq	r1, r1, r4, ror r4
   11330:	andeq	r1, r1, r4, ror r4
   11334:	andeq	r1, r1, r4, ror r4
   11338:	andeq	r1, r1, r4, ror r4
   1133c:	andeq	r1, r1, r4, ror r4
   11340:	andeq	r1, r1, r4, ror r4
   11344:	andeq	r1, r1, r4, ror r4
   11348:	andeq	r1, r1, r4, ror r4
   1134c:	andeq	r1, r1, r4, ror r4
   11350:	andeq	r1, r1, r4, ror r4
   11354:	andeq	r1, r1, r4, ror r4
   11358:	andeq	r1, r1, r4, ror r4
   1135c:	andeq	r1, r1, r4, ror r4
   11360:	andeq	r1, r1, r4, ror r4
   11364:	andeq	r1, r1, r4, ror r4
   11368:	andeq	r1, r1, r4, ror r4
   1136c:	andeq	r1, r1, r4, ror r4
   11370:	andeq	r1, r1, ip, lsr #7
   11374:	andeq	r1, r1, r4, ror r4
   11378:	andeq	r1, r1, r4, ror r4
   1137c:	andeq	r1, r1, r4, ror r4
   11380:	andeq	r1, r1, r4, ror r4
   11384:	andeq	r1, r1, r4, ror r4
   11388:	andeq	r1, r1, r4, ror r4
   1138c:	andeq	r1, r1, r4, ror r4
   11390:	muleq	r1, r4, r3
   11394:	ldr	r0, [r7]
   11398:	mov	r1, #0
   1139c:	mov	r2, #8
   113a0:	bl	110d0 <strtoul@plt>
   113a4:	str	r0, [sp, #12]
   113a8:	b	112c8 <strspn@plt+0x90>
   113ac:	movw	r3, #20784	; 0x5130
   113b0:	movt	r3, #2
   113b4:	ldr	r0, [r3]
   113b8:	bl	11730 <strspn@plt+0x4f8>
   113bc:	mov	r2, #5
   113c0:	movw	r1, #17628	; 0x44dc
   113c4:	mov	r0, #0
   113c8:	movt	r1, #1
   113cc:	bl	11010 <dcgettext@plt>
   113d0:	movw	r2, #20768	; 0x5120
   113d4:	movt	r2, #2
   113d8:	movw	r3, #17640	; 0x44e8
   113dc:	movt	r3, #1
   113e0:	ldr	r2, [r2]
   113e4:	mov	r1, r0
   113e8:	mov	r0, #1
   113ec:	bl	11154 <__printf_chk@plt>
   113f0:	ldr	r2, [sp, #28]
   113f4:	mov	r0, #0
   113f8:	ldr	r3, [r6]
   113fc:	cmp	r2, r3
   11400:	bne	115ac <strspn@plt+0x374>
   11404:	add	sp, sp, #36	; 0x24
   11408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1140c:	mov	r2, #5
   11410:	movw	r1, #17600	; 0x44c0
   11414:	mov	r0, #0
   11418:	movt	r1, #1
   1141c:	ldr	r4, [r7]
   11420:	bl	11010 <dcgettext@plt>
   11424:	mov	r5, #1
   11428:	mov	r1, r0
   1142c:	mov	r0, r4
   11430:	bl	123ac <strspn@plt+0x1174>
   11434:	str	r0, [sp, #16]
   11438:	b	112c8 <strspn@plt+0x90>
   1143c:	mov	sl, #1
   11440:	b	112c8 <strspn@plt+0x90>
   11444:	mov	r2, #5
   11448:	movw	r1, #17576	; 0x44a8
   1144c:	mov	r0, #0
   11450:	movt	r1, #1
   11454:	ldr	r4, [r7]
   11458:	bl	11010 <dcgettext@plt>
   1145c:	mov	fp, #1
   11460:	mov	r1, r0
   11464:	mov	r0, r4
   11468:	bl	12434 <strspn@plt+0x11fc>
   1146c:	str	r0, [sp, #20]
   11470:	b	112c8 <strspn@plt+0x90>
   11474:	mov	r5, #0
   11478:	mov	sl, r5
   1147c:	mov	fp, r5
   11480:	b	112c8 <strspn@plt+0x90>
   11484:	orr	r3, sl, fp
   11488:	orrs	r3, r3, r5
   1148c:	beq	115d0 <strspn@plt+0x398>
   11490:	cmp	fp, #0
   11494:	bne	11558 <strspn@plt+0x320>
   11498:	cmp	sl, #0
   1149c:	bne	114fc <strspn@plt+0x2c4>
   114a0:	cmp	r5, #0
   114a4:	beq	113f0 <strspn@plt+0x1b8>
   114a8:	add	r0, sp, #24
   114ac:	mov	r1, #4
   114b0:	bl	11b68 <strspn@plt+0x930>
   114b4:	ldr	r3, [sp, #12]
   114b8:	ldr	r1, [sp, #16]
   114bc:	orr	r2, r3, #512	; 0x200
   114c0:	ldr	r0, [sp, #24]
   114c4:	bl	1113c <semget@plt>
   114c8:	cmn	r0, #1
   114cc:	mov	r4, r0
   114d0:	beq	115b0 <strspn@plt+0x378>
   114d4:	mov	r2, #5
   114d8:	movw	r1, #17800	; 0x4588
   114dc:	mov	r0, #0
   114e0:	movt	r1, #1
   114e4:	bl	11010 <dcgettext@plt>
   114e8:	mov	r2, r4
   114ec:	mov	r1, r0
   114f0:	mov	r0, #1
   114f4:	bl	11154 <__printf_chk@plt>
   114f8:	b	113f0 <strspn@plt+0x1b8>
   114fc:	add	r0, sp, #24
   11500:	mov	r1, #4
   11504:	bl	11b68 <strspn@plt+0x930>
   11508:	ldr	r3, [sp, #12]
   1150c:	ldr	r0, [sp, #24]
   11510:	orr	r1, r3, #512	; 0x200
   11514:	bl	111cc <msgget@plt>
   11518:	cmn	r0, #1
   1151c:	mov	r4, r0
   11520:	movweq	r1, #17724	; 0x453c
   11524:	moveq	r0, #0
   11528:	movteq	r1, #1
   1152c:	beq	115bc <strspn@plt+0x384>
   11530:	mov	r2, #5
   11534:	movw	r1, #17752	; 0x4558
   11538:	mov	r0, #0
   1153c:	movt	r1, #1
   11540:	bl	11010 <dcgettext@plt>
   11544:	mov	r2, r4
   11548:	mov	r1, r0
   1154c:	mov	r0, #1
   11550:	bl	11154 <__printf_chk@plt>
   11554:	b	114a0 <strspn@plt+0x268>
   11558:	add	r0, sp, #24
   1155c:	mov	r1, #4
   11560:	bl	11b68 <strspn@plt+0x930>
   11564:	ldr	r3, [sp, #12]
   11568:	ldr	r1, [sp, #20]
   1156c:	ldr	r0, [sp, #24]
   11570:	orr	r2, r3, #512	; 0x200
   11574:	bl	10fec <shmget@plt>
   11578:	mov	r7, r0
   1157c:	cmn	r7, #1
   11580:	mov	r0, r4
   11584:	beq	115e0 <strspn@plt+0x3a8>
   11588:	mov	r2, #5
   1158c:	movw	r1, #17700	; 0x4524
   11590:	movt	r1, #1
   11594:	bl	11010 <dcgettext@plt>
   11598:	mov	r2, r7
   1159c:	mov	r1, r0
   115a0:	mov	r0, #1
   115a4:	bl	11154 <__printf_chk@plt>
   115a8:	b	11498 <strspn@plt+0x260>
   115ac:	bl	1101c <__stack_chk_fail@plt>
   115b0:	movw	r1, #17776	; 0x4570
   115b4:	movt	r1, #1
   115b8:	mov	r0, #0
   115bc:	mov	r2, #5
   115c0:	bl	11010 <dcgettext@plt>
   115c4:	mov	r1, r0
   115c8:	mov	r0, #1
   115cc:	bl	11040 <err@plt>
   115d0:	movw	r3, #20780	; 0x512c
   115d4:	movt	r3, #2
   115d8:	ldr	r0, [r3]
   115dc:	bl	11730 <strspn@plt+0x4f8>
   115e0:	movw	r1, #17672	; 0x4508
   115e4:	mov	r2, #5
   115e8:	movt	r1, #1
   115ec:	bl	11010 <dcgettext@plt>
   115f0:	mov	r1, r0
   115f4:	mov	r0, #1
   115f8:	bl	11040 <err@plt>
   115fc:	mov	fp, #0
   11600:	mov	lr, #0
   11604:	pop	{r1}		; (ldr r1, [sp], #4)
   11608:	mov	r2, sp
   1160c:	push	{r2}		; (str r2, [sp, #-4]!)
   11610:	push	{r0}		; (str r0, [sp, #-4]!)
   11614:	ldr	ip, [pc, #16]	; 1162c <strspn@plt+0x3f4>
   11618:	push	{ip}		; (str ip, [sp, #-4]!)
   1161c:	ldr	r0, [pc, #12]	; 11630 <strspn@plt+0x3f8>
   11620:	ldr	r3, [pc, #12]	; 11634 <strspn@plt+0x3fc>
   11624:	bl	1107c <__libc_start_main@plt>
   11628:	bl	11214 <abort@plt>
   1162c:	andeq	r4, r1, ip, lsl #4
   11630:	andeq	r1, r1, r8, asr #4
   11634:	andeq	r4, r1, r8, lsr #3
   11638:	ldr	r3, [pc, #20]	; 11654 <strspn@plt+0x41c>
   1163c:	ldr	r2, [pc, #20]	; 11658 <strspn@plt+0x420>
   11640:	add	r3, pc, r3
   11644:	ldr	r2, [r3, r2]
   11648:	cmp	r2, #0
   1164c:	bxeq	lr
   11650:	b	11088 <__gmon_start__@plt>
   11654:			; <UNDEFINED> instruction: 0x000139b8
   11658:	andeq	r0, r0, r0, lsl r1
   1165c:	push	{r3, lr}
   11660:	movw	r0, #20764	; 0x511c
   11664:	ldr	r3, [pc, #36]	; 11690 <strspn@plt+0x458>
   11668:	movt	r0, #2
   1166c:	rsb	r3, r0, r3
   11670:	cmp	r3, #6
   11674:	popls	{r3, pc}
   11678:	movw	r3, #0
   1167c:	movt	r3, #0
   11680:	cmp	r3, #0
   11684:	popeq	{r3, pc}
   11688:	blx	r3
   1168c:	pop	{r3, pc}
   11690:	andeq	r5, r2, pc, lsl r1
   11694:	push	{r3, lr}
   11698:	movw	r0, #20764	; 0x511c
   1169c:	movw	r3, #20764	; 0x511c
   116a0:	movt	r0, #2
   116a4:	movt	r3, #2
   116a8:	rsb	r3, r0, r3
   116ac:	asr	r3, r3, #2
   116b0:	add	r3, r3, r3, lsr #31
   116b4:	asrs	r1, r3, #1
   116b8:	popeq	{r3, pc}
   116bc:	movw	r2, #0
   116c0:	movt	r2, #0
   116c4:	cmp	r2, #0
   116c8:	popeq	{r3, pc}
   116cc:	blx	r2
   116d0:	pop	{r3, pc}
   116d4:	push	{r4, lr}
   116d8:	movw	r4, #20796	; 0x513c
   116dc:	movt	r4, #2
   116e0:	ldrb	r3, [r4]
   116e4:	cmp	r3, #0
   116e8:	popne	{r4, pc}
   116ec:	bl	1165c <strspn@plt+0x424>
   116f0:	mov	r3, #1
   116f4:	strb	r3, [r4]
   116f8:	pop	{r4, pc}
   116fc:	movw	r0, #20228	; 0x4f04
   11700:	movt	r0, #2
   11704:	push	{r3, lr}
   11708:	ldr	r3, [r0]
   1170c:	cmp	r3, #0
   11710:	beq	11728 <strspn@plt+0x4f0>
   11714:	movw	r3, #0
   11718:	movt	r3, #0
   1171c:	cmp	r3, #0
   11720:	beq	11728 <strspn@plt+0x4f0>
   11724:	blx	r3
   11728:	pop	{r3, lr}
   1172c:	b	11694 <strspn@plt+0x45c>
   11730:	push	{r4, lr}
   11734:	mov	r2, #5
   11738:	mov	r4, r0
   1173c:	movw	r1, #17084	; 0x42bc
   11740:	mov	r0, #0
   11744:	movt	r1, #1
   11748:	bl	11010 <dcgettext@plt>
   1174c:	mov	r1, #1
   11750:	mov	r2, r0
   11754:	mov	r0, r4
   11758:	bl	1116c <__fprintf_chk@plt>
   1175c:	mov	r2, #5
   11760:	movw	r1, #17096	; 0x42c8
   11764:	mov	r0, #0
   11768:	movt	r1, #1
   1176c:	bl	11010 <dcgettext@plt>
   11770:	movw	r3, #20768	; 0x5120
   11774:	movt	r3, #2
   11778:	mov	r1, #1
   1177c:	ldr	r3, [r3]
   11780:	mov	r2, r0
   11784:	mov	r0, r4
   11788:	bl	1116c <__fprintf_chk@plt>
   1178c:	mov	r2, #5
   11790:	movw	r1, #17112	; 0x42d8
   11794:	mov	r0, #0
   11798:	movt	r1, #1
   1179c:	bl	11010 <dcgettext@plt>
   117a0:	mov	r1, #1
   117a4:	mov	r2, r0
   117a8:	mov	r0, r4
   117ac:	bl	1116c <__fprintf_chk@plt>
   117b0:	mov	r2, #5
   117b4:	movw	r1, #17124	; 0x42e4
   117b8:	mov	r0, #0
   117bc:	movt	r1, #1
   117c0:	bl	11010 <dcgettext@plt>
   117c4:	mov	r1, r4
   117c8:	bl	111fc <fputs@plt>
   117cc:	mov	r2, #5
   117d0:	movw	r1, #17196	; 0x432c
   117d4:	mov	r0, #0
   117d8:	movt	r1, #1
   117dc:	bl	11010 <dcgettext@plt>
   117e0:	mov	r1, r4
   117e4:	bl	111fc <fputs@plt>
   117e8:	mov	r2, #5
   117ec:	movw	r1, #17268	; 0x4374
   117f0:	mov	r0, #0
   117f4:	movt	r1, #1
   117f8:	bl	11010 <dcgettext@plt>
   117fc:	mov	r1, r4
   11800:	bl	111fc <fputs@plt>
   11804:	mov	r2, #5
   11808:	movw	r1, #17316	; 0x43a4
   1180c:	mov	r0, #0
   11810:	movt	r1, #1
   11814:	bl	11010 <dcgettext@plt>
   11818:	mov	r1, r4
   1181c:	bl	111fc <fputs@plt>
   11820:	mov	r2, #5
   11824:	movw	r1, #17816	; 0x4598
   11828:	mov	r0, #0
   1182c:	movt	r1, #1
   11830:	bl	11010 <dcgettext@plt>
   11834:	mov	r1, #1
   11838:	mov	r2, r0
   1183c:	mov	r0, r4
   11840:	bl	1116c <__fprintf_chk@plt>
   11844:	mov	r2, #5
   11848:	movw	r1, #17392	; 0x43f0
   1184c:	mov	r0, #0
   11850:	movt	r1, #1
   11854:	bl	11010 <dcgettext@plt>
   11858:	mov	r1, #1
   1185c:	mov	r2, r0
   11860:	mov	r0, r4
   11864:	bl	1116c <__fprintf_chk@plt>
   11868:	mov	r2, #5
   1186c:	movw	r1, #17436	; 0x441c
   11870:	mov	r0, #0
   11874:	movt	r1, #1
   11878:	bl	11010 <dcgettext@plt>
   1187c:	mov	r1, #1
   11880:	mov	r2, r0
   11884:	mov	r0, r4
   11888:	bl	1116c <__fprintf_chk@plt>
   1188c:	mov	r2, #5
   11890:	movw	r1, #17492	; 0x4454
   11894:	mov	r0, #0
   11898:	movt	r1, #1
   1189c:	bl	11010 <dcgettext@plt>
   118a0:	movw	r3, #17520	; 0x4470
   118a4:	mov	r1, #1
   118a8:	movt	r3, #1
   118ac:	mov	r2, r0
   118b0:	mov	r0, r4
   118b4:	bl	1116c <__fprintf_chk@plt>
   118b8:	movw	r3, #20780	; 0x512c
   118bc:	movt	r3, #2
   118c0:	ldr	r0, [r3]
   118c4:	subs	r3, r4, r0
   118c8:	rsbs	r0, r3, #0
   118cc:	adcs	r0, r0, r3
   118d0:	bl	110b8 <exit@plt>
   118d4:	movw	r3, #20784	; 0x5130
   118d8:	movt	r3, #2
   118dc:	push	{r4, r5, r6, lr}
   118e0:	ldr	r4, [r3]
   118e4:	mov	r0, r4
   118e8:	bl	11058 <__fpending@plt>
   118ec:	mov	r6, r0
   118f0:	mov	r0, r4
   118f4:	bl	10fc8 <ferror@plt>
   118f8:	mov	r5, r0
   118fc:	mov	r0, r4
   11900:	bl	11178 <fclose@plt>
   11904:	adds	r4, r0, #0
   11908:	movne	r4, #1
   1190c:	cmp	r5, #0
   11910:	bne	11988 <strspn@plt+0x750>
   11914:	cmp	r4, #0
   11918:	beq	11934 <strspn@plt+0x6fc>
   1191c:	cmp	r6, #0
   11920:	beq	119d8 <strspn@plt+0x7a0>
   11924:	bl	1110c <__errno_location@plt>
   11928:	ldr	r3, [r0]
   1192c:	cmp	r3, #32
   11930:	bne	119ec <strspn@plt+0x7b4>
   11934:	movw	r3, #20780	; 0x512c
   11938:	movt	r3, #2
   1193c:	ldr	r4, [r3]
   11940:	mov	r0, r4
   11944:	bl	11058 <__fpending@plt>
   11948:	mov	r6, r0
   1194c:	mov	r0, r4
   11950:	bl	10fc8 <ferror@plt>
   11954:	mov	r5, r0
   11958:	mov	r0, r4
   1195c:	bl	11178 <fclose@plt>
   11960:	adds	r4, r0, #0
   11964:	movne	r4, #1
   11968:	cmp	r5, #0
   1196c:	beq	119b4 <strspn@plt+0x77c>
   11970:	cmp	r4, #0
   11974:	bne	11980 <strspn@plt+0x748>
   11978:	bl	1110c <__errno_location@plt>
   1197c:	str	r4, [r0]
   11980:	mov	r0, #1
   11984:	bl	10fd4 <_exit@plt>
   11988:	cmp	r4, #0
   1198c:	bne	11924 <strspn@plt+0x6ec>
   11990:	bl	1110c <__errno_location@plt>
   11994:	str	r4, [r0]
   11998:	mov	r2, #5
   1199c:	movw	r1, #17532	; 0x447c
   119a0:	mov	r0, #0
   119a4:	movt	r1, #1
   119a8:	bl	11010 <dcgettext@plt>
   119ac:	bl	110f4 <warnx@plt>
   119b0:	b	11980 <strspn@plt+0x748>
   119b4:	cmp	r4, #0
   119b8:	popeq	{r4, r5, r6, pc}
   119bc:	cmp	r6, #0
   119c0:	bne	11980 <strspn@plt+0x748>
   119c4:	bl	1110c <__errno_location@plt>
   119c8:	ldr	r3, [r0]
   119cc:	cmp	r3, #9
   119d0:	bne	11980 <strspn@plt+0x748>
   119d4:	pop	{r4, r5, r6, pc}
   119d8:	bl	1110c <__errno_location@plt>
   119dc:	ldr	r3, [r0]
   119e0:	cmp	r3, #9
   119e4:	bne	1192c <strspn@plt+0x6f4>
   119e8:	b	11934 <strspn@plt+0x6fc>
   119ec:	cmp	r3, #0
   119f0:	beq	11998 <strspn@plt+0x760>
   119f4:	mov	r2, #5
   119f8:	movw	r1, #17532	; 0x447c
   119fc:	mov	r0, #0
   11a00:	movt	r1, #1
   11a04:	bl	11010 <dcgettext@plt>
   11a08:	bl	1119c <warn@plt>
   11a0c:	b	11980 <strspn@plt+0x748>
   11a10:	ldr	r3, [pc, #312]	; 11b50 <strspn@plt+0x918>
   11a14:	mov	r1, #0
   11a18:	ldr	r2, [pc, #308]	; 11b54 <strspn@plt+0x91c>
   11a1c:	add	r3, pc, r3
   11a20:	push	{r4, r5, r6, r7, r8, lr}
   11a24:	sub	sp, sp, #16
   11a28:	ldr	r6, [r3, r2]
   11a2c:	add	r4, sp, #4
   11a30:	mov	r0, r4
   11a34:	ldr	r3, [r6]
   11a38:	str	r3, [sp, #12]
   11a3c:	bl	1104c <gettimeofday@plt>
   11a40:	ldr	r0, [pc, #272]	; 11b58 <strspn@plt+0x920>
   11a44:	mov	r1, #524288	; 0x80000
   11a48:	add	r0, pc, r0
   11a4c:	bl	11064 <open64@plt>
   11a50:	cmn	r0, #1
   11a54:	mov	r5, r0
   11a58:	beq	11b30 <strspn@plt+0x8f8>
   11a5c:	cmp	r5, #0
   11a60:	blt	11a88 <strspn@plt+0x850>
   11a64:	mov	r0, r5
   11a68:	mov	r1, #1
   11a6c:	bl	11100 <fcntl@plt>
   11a70:	cmp	r0, #0
   11a74:	blt	11a88 <strspn@plt+0x850>
   11a78:	orr	r2, r0, #1
   11a7c:	mov	r1, #2
   11a80:	mov	r0, r5
   11a84:	bl	11100 <fcntl@plt>
   11a88:	bl	110ac <getpid@plt>
   11a8c:	mov	r7, r0
   11a90:	bl	10fb0 <getuid@plt>
   11a94:	ldmib	sp, {r2, r3}
   11a98:	eor	r3, r2, r3
   11a9c:	eor	r0, r3, r0
   11aa0:	eor	r0, r0, r7, lsl #16
   11aa4:	bl	10f8c <srandom@plt>
   11aa8:	bl	110ac <getpid@plt>
   11aac:	mov	r8, r0
   11ab0:	ldr	r0, [pc, #164]	; 11b5c <strspn@plt+0x924>
   11ab4:	add	r0, pc, r0
   11ab8:	bl	111e4 <__tls_get_addr@plt>
   11abc:	ldr	r3, [pc, #156]	; 11b60 <strspn@plt+0x928>
   11ac0:	ldr	r1, [sp, #4]
   11ac4:	eor	r8, r8, r1
   11ac8:	add	r7, r0, r3
   11acc:	strh	r8, [r0, r3]
   11ad0:	bl	111b4 <getppid@plt>
   11ad4:	ldmib	sp, {r2, r3}
   11ad8:	mov	r1, #0
   11adc:	eor	r2, r3, r2
   11ae0:	asr	r2, r2, #16
   11ae4:	strh	r2, [r7, #4]
   11ae8:	eor	r3, r0, r3
   11aec:	mov	r0, r4
   11af0:	strh	r3, [r7, #2]
   11af4:	bl	1104c <gettimeofday@plt>
   11af8:	ldmib	sp, {r3, r4}
   11afc:	eor	r4, r4, r3
   11b00:	ands	r4, r4, #31
   11b04:	beq	11b14 <strspn@plt+0x8dc>
   11b08:	bl	111f0 <random@plt>
   11b0c:	subs	r4, r4, #1
   11b10:	bne	11b08 <strspn@plt+0x8d0>
   11b14:	ldr	r2, [sp, #12]
   11b18:	mov	r0, r5
   11b1c:	ldr	r3, [r6]
   11b20:	cmp	r2, r3
   11b24:	bne	11b4c <strspn@plt+0x914>
   11b28:	add	sp, sp, #16
   11b2c:	pop	{r4, r5, r6, r7, r8, pc}
   11b30:	ldr	r0, [pc, #44]	; 11b64 <strspn@plt+0x92c>
   11b34:	mov	r1, #2048	; 0x800
   11b38:	movt	r1, #8
   11b3c:	add	r0, pc, r0
   11b40:	bl	11064 <open64@plt>
   11b44:	mov	r5, r0
   11b48:	b	11a5c <strspn@plt+0x824>
   11b4c:	bl	1101c <__stack_chk_fail@plt>
   11b50:	ldrdeq	r3, [r1], -ip
   11b54:	andeq	r0, r0, ip, lsl #2
   11b58:	andeq	r2, r0, r0, lsl #23
   11b5c:	andeq	r3, r1, r8, asr #12
   11b60:	andeq	r0, r0, r0
   11b64:	muleq	r0, ip, sl
   11b68:	ldr	r3, [pc, #368]	; 11ce0 <strspn@plt+0xaa8>
   11b6c:	ldr	r2, [pc, #368]	; 11ce4 <strspn@plt+0xaac>
   11b70:	add	r3, pc, r3
   11b74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b78:	sub	sp, sp, #16
   11b7c:	ldr	r8, [r3, r2]
   11b80:	mov	r4, r0
   11b84:	mov	r6, r1
   11b88:	ldr	r3, [r8]
   11b8c:	str	r3, [sp, #12]
   11b90:	bl	11a10 <strspn@plt+0x7d8>
   11b94:	subs	sl, r0, #0
   11b98:	blt	11bfc <strspn@plt+0x9c4>
   11b9c:	cmp	r6, #0
   11ba0:	movne	r7, r4
   11ba4:	movne	r5, r6
   11ba8:	movne	r9, #0
   11bac:	bne	11bc8 <strspn@plt+0x990>
   11bb0:	b	11bf4 <strspn@plt+0x9bc>
   11bb4:	rsb	r5, r0, r5
   11bb8:	add	r7, r7, r0
   11bbc:	cmp	r5, #0
   11bc0:	mov	r9, #0
   11bc4:	beq	11bf4 <strspn@plt+0x9bc>
   11bc8:	mov	r0, sl
   11bcc:	mov	r1, r7
   11bd0:	mov	r2, r5
   11bd4:	bl	10fa4 <read@plt>
   11bd8:	cmp	r0, #0
   11bdc:	bgt	11bb4 <strspn@plt+0x97c>
   11be0:	cmp	r9, #16
   11be4:	bgt	11bf4 <strspn@plt+0x9bc>
   11be8:	cmp	r5, #0
   11bec:	add	r9, r9, #1
   11bf0:	bne	11bc8 <strspn@plt+0x990>
   11bf4:	mov	r0, sl
   11bf8:	bl	11220 <close@plt>
   11bfc:	cmp	r6, #0
   11c00:	beq	11ca4 <strspn@plt+0xa6c>
   11c04:	add	r6, r4, r6
   11c08:	mov	r5, r4
   11c0c:	ldrb	r7, [r5], #1
   11c10:	bl	111f0 <random@plt>
   11c14:	cmp	r5, r6
   11c18:	eor	r0, r7, r0, asr #7
   11c1c:	strb	r0, [r5, #-1]
   11c20:	bne	11c0c <strspn@plt+0x9d4>
   11c24:	ldr	r0, [pc, #188]	; 11ce8 <strspn@plt+0xab0>
   11c28:	add	r7, sp, #4
   11c2c:	ldr	r9, [pc, #184]	; 11cec <strspn@plt+0xab4>
   11c30:	add	r0, pc, r0
   11c34:	bl	111e4 <__tls_get_addr@plt>
   11c38:	add	r5, r9, r0
   11c3c:	ldm	r5, {r0, r1}
   11c40:	ldrh	sl, [r5, #4]
   11c44:	str	r0, [sp, #4]
   11c48:	mov	r0, #224	; 0xe0
   11c4c:	strh	r1, [sp, #8]
   11c50:	bl	110c4 <syscall@plt>
   11c54:	eor	r0, r0, sl
   11c58:	strh	r0, [r5, #4]
   11c5c:	mov	r0, r7
   11c60:	ldrb	r5, [r4], #1
   11c64:	bl	11004 <jrand48@plt>
   11c68:	cmp	r4, r6
   11c6c:	eor	r0, r5, r0, asr #7
   11c70:	strb	r0, [r4, #-1]
   11c74:	bne	11c5c <strspn@plt+0xa24>
   11c78:	ldr	r0, [pc, #112]	; 11cf0 <strspn@plt+0xab8>
   11c7c:	add	r0, pc, r0
   11c80:	bl	111e4 <__tls_get_addr@plt>
   11c84:	ldr	r1, [sp, #12]
   11c88:	ldr	r2, [r8]
   11c8c:	ldr	r3, [sp, #4]
   11c90:	cmp	r1, r2
   11c94:	str	r3, [r9, r0]
   11c98:	bne	11cdc <strspn@plt+0xaa4>
   11c9c:	add	sp, sp, #16
   11ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ca4:	ldr	r0, [pc, #72]	; 11cf4 <strspn@plt+0xabc>
   11ca8:	ldr	r9, [pc, #60]	; 11cec <strspn@plt+0xab4>
   11cac:	add	r0, pc, r0
   11cb0:	bl	111e4 <__tls_get_addr@plt>
   11cb4:	add	r4, r9, r0
   11cb8:	ldm	r4, {r0, r1}
   11cbc:	ldrh	r5, [r4, #4]
   11cc0:	str	r0, [sp, #4]
   11cc4:	mov	r0, #224	; 0xe0
   11cc8:	strh	r1, [sp, #8]
   11ccc:	bl	110c4 <syscall@plt>
   11cd0:	eor	r0, r0, r5
   11cd4:	strh	r0, [r4, #4]
   11cd8:	b	11c78 <strspn@plt+0xa40>
   11cdc:	bl	1101c <__stack_chk_fail@plt>
   11ce0:	andeq	r3, r1, r8, lsl #9
   11ce4:	andeq	r0, r0, ip, lsl #2
   11ce8:	andeq	r3, r1, ip, asr #9
   11cec:	andeq	r0, r0, r0
   11cf0:	andeq	r3, r1, r0, lsl #9
   11cf4:	andeq	r3, r1, r0, asr r4
   11cf8:	cmp	r0, #0
   11cfc:	mov	r3, #0
   11d00:	str	r3, [r1]
   11d04:	bxeq	lr
   11d08:	ldrb	r2, [r0]
   11d0c:	cmp	r2, #47	; 0x2f
   11d10:	bne	11d58 <strspn@plt+0xb20>
   11d14:	ldrsb	r3, [r0, #1]
   11d18:	cmp	r3, #47	; 0x2f
   11d1c:	bne	11d60 <strspn@plt+0xb28>
   11d20:	mov	r3, r0
   11d24:	b	11d44 <strspn@plt+0xb0c>
   11d28:	ldrb	r2, [r3, #1]
   11d2c:	mov	r3, r0
   11d30:	cmp	r2, #47	; 0x2f
   11d34:	bne	11d58 <strspn@plt+0xb20>
   11d38:	ldrsb	r2, [r0, #1]
   11d3c:	cmp	r2, #47	; 0x2f
   11d40:	bne	11d60 <strspn@plt+0xb28>
   11d44:	cmn	r3, #1
   11d48:	add	r0, r0, #1
   11d4c:	bne	11d28 <strspn@plt+0xaf0>
   11d50:	mov	r0, #0
   11d54:	bx	lr
   11d58:	cmp	r2, #0
   11d5c:	beq	11d50 <strspn@plt+0xb18>
   11d60:	mov	r3, #1
   11d64:	str	r3, [r1]
   11d68:	ldrsb	r3, [r0, #1]
   11d6c:	cmp	r3, #47	; 0x2f
   11d70:	cmpne	r3, #0
   11d74:	bxeq	lr
   11d78:	mov	r3, #2
   11d7c:	str	r3, [r1]
   11d80:	ldrb	r2, [r0, r3]
   11d84:	add	r3, r3, #1
   11d88:	cmp	r2, #47	; 0x2f
   11d8c:	cmpne	r2, #0
   11d90:	bne	11d7c <strspn@plt+0xb44>
   11d94:	bx	lr
   11d98:	push	{r3, r4, r5, r6, r7, lr}
   11d9c:	mov	r7, r1
   11da0:	ldrb	r3, [r0]
   11da4:	cmp	r3, #0
   11da8:	beq	11e20 <strspn@plt+0xbe8>
   11dac:	mov	r4, #0
   11db0:	mov	r5, r0
   11db4:	mov	r6, r4
   11db8:	b	11de8 <strspn@plt+0xbb0>
   11dbc:	cmp	r3, #92	; 0x5c
   11dc0:	mov	r0, r7
   11dc4:	mov	r1, r3
   11dc8:	beq	11e10 <strspn@plt+0xbd8>
   11dcc:	bl	110e8 <strchr@plt>
   11dd0:	cmp	r0, #0
   11dd4:	bne	11e18 <strspn@plt+0xbe0>
   11dd8:	ldrb	r3, [r5, #1]!
   11ddc:	add	r4, r4, #1
   11de0:	cmp	r3, #0
   11de4:	beq	11e08 <strspn@plt+0xbd0>
   11de8:	cmp	r6, #0
   11dec:	sxtb	r3, r3
   11df0:	beq	11dbc <strspn@plt+0xb84>
   11df4:	ldrb	r3, [r5, #1]!
   11df8:	mov	r6, #0
   11dfc:	add	r4, r4, #1
   11e00:	cmp	r3, #0
   11e04:	bne	11de8 <strspn@plt+0xbb0>
   11e08:	rsb	r0, r6, r4
   11e0c:	pop	{r3, r4, r5, r6, r7, pc}
   11e10:	mov	r6, #1
   11e14:	b	11dd8 <strspn@plt+0xba0>
   11e18:	mov	r0, r4
   11e1c:	pop	{r3, r4, r5, r6, r7, pc}
   11e20:	mov	r0, r3
   11e24:	pop	{r3, r4, r5, r6, r7, pc}
   11e28:	ldr	r3, [pc, #224]	; 11f10 <strspn@plt+0xcd8>
   11e2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e30:	mov	r6, r0
   11e34:	ldr	r0, [pc, #216]	; 11f14 <strspn@plt+0xcdc>
   11e38:	add	r3, pc, r3
   11e3c:	sub	sp, sp, #12
   11e40:	mov	r4, #0
   11e44:	mov	r9, r1
   11e48:	mov	r5, r2
   11e4c:	ldr	r8, [r3, r0]
   11e50:	str	r4, [sp]
   11e54:	ldr	r3, [r8]
   11e58:	str	r3, [sp, #4]
   11e5c:	bl	1110c <__errno_location@plt>
   11e60:	cmp	r6, r4
   11e64:	mov	r7, r0
   11e68:	str	r4, [r0]
   11e6c:	beq	11e7c <strspn@plt+0xc44>
   11e70:	ldrsb	r3, [r6]
   11e74:	cmp	r3, r4
   11e78:	bne	11e94 <strspn@plt+0xc5c>
   11e7c:	ldr	r1, [pc, #148]	; 11f18 <strspn@plt+0xce0>
   11e80:	mov	r2, r9
   11e84:	mov	r3, r6
   11e88:	mov	r0, #1
   11e8c:	add	r1, pc, r1
   11e90:	bl	11190 <errx@plt>
   11e94:	mov	r3, r4
   11e98:	mov	r2, r5
   11e9c:	mov	r0, r6
   11ea0:	mov	r1, sp
   11ea4:	bl	10ff8 <__strtoull_internal@plt>
   11ea8:	ldr	r3, [r7]
   11eac:	cmp	r3, r4
   11eb0:	bne	11eec <strspn@plt+0xcb4>
   11eb4:	ldr	r3, [sp]
   11eb8:	cmp	r6, r3
   11ebc:	beq	11e7c <strspn@plt+0xc44>
   11ec0:	cmp	r3, r4
   11ec4:	beq	11ed4 <strspn@plt+0xc9c>
   11ec8:	ldrsb	r3, [r3]
   11ecc:	cmp	r3, r4
   11ed0:	bne	11e7c <strspn@plt+0xc44>
   11ed4:	ldr	r2, [sp, #4]
   11ed8:	ldr	r3, [r8]
   11edc:	cmp	r2, r3
   11ee0:	bne	11f0c <strspn@plt+0xcd4>
   11ee4:	add	sp, sp, #12
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11eec:	cmp	r3, #34	; 0x22
   11ef0:	bne	11e7c <strspn@plt+0xc44>
   11ef4:	ldr	r1, [pc, #32]	; 11f1c <strspn@plt+0xce4>
   11ef8:	mov	r2, r9
   11efc:	mov	r3, r6
   11f00:	mov	r0, #1
   11f04:	add	r1, pc, r1
   11f08:	bl	11040 <err@plt>
   11f0c:	bl	1101c <__stack_chk_fail@plt>
   11f10:	andeq	r3, r1, r0, asr #3
   11f14:	andeq	r0, r0, ip, lsl #2
   11f18:	andeq	r2, r0, r8, asr r7
   11f1c:	andeq	r2, r0, r0, ror #13
   11f20:	ldr	r3, [pc, #596]	; 1217c <strspn@plt+0xf44>
   11f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f28:	add	r3, pc, r3
   11f2c:	subs	r6, r0, #0
   11f30:	ldr	r0, [pc, #584]	; 12180 <strspn@plt+0xf48>
   11f34:	mov	r8, r1
   11f38:	mov	r1, r3
   11f3c:	sub	sp, sp, #20
   11f40:	mov	r9, r2
   11f44:	ldr	sl, [r1, r0]
   11f48:	mov	r2, #0
   11f4c:	mov	r3, #0
   11f50:	ldr	r1, [sl]
   11f54:	strd	r2, [r8]
   11f58:	str	r1, [sp, #12]
   11f5c:	beq	12044 <strspn@plt+0xe0c>
   11f60:	ldrb	r5, [r6]
   11f64:	cmp	r5, #0
   11f68:	beq	12044 <strspn@plt+0xe0c>
   11f6c:	str	r6, [sp, #8]
   11f70:	bl	110a0 <__ctype_b_loc@plt>
   11f74:	mov	r3, r6
   11f78:	ldr	r1, [r0]
   11f7c:	b	11f90 <strspn@plt+0xd58>
   11f80:	add	r2, r3, #1
   11f84:	str	r2, [sp, #8]
   11f88:	ldrb	r5, [r3, #1]
   11f8c:	mov	r3, r2
   11f90:	lsl	r2, r5, #1
   11f94:	ldrh	r4, [r1, r2]
   11f98:	and	r4, r4, #8192	; 0x2000
   11f9c:	uxth	r4, r4
   11fa0:	cmp	r4, #0
   11fa4:	bne	11f80 <strspn@plt+0xd48>
   11fa8:	cmp	r5, #45	; 0x2d
   11fac:	beq	12044 <strspn@plt+0xe0c>
   11fb0:	add	r5, sp, #16
   11fb4:	str	r4, [r5, #-8]!
   11fb8:	bl	1110c <__errno_location@plt>
   11fbc:	mov	r2, r4
   11fc0:	mov	r1, r5
   11fc4:	mov	r3, r4
   11fc8:	mov	r7, r0
   11fcc:	mov	r0, r6
   11fd0:	str	r4, [r7]
   11fd4:	bl	10ff8 <__strtoull_internal@plt>
   11fd8:	mov	r5, r1
   11fdc:	ldr	r1, [sp, #8]
   11fe0:	mov	r4, r0
   11fe4:	cmp	r1, r6
   11fe8:	beq	12044 <strspn@plt+0xe0c>
   11fec:	ldr	r3, [r7]
   11ff0:	cmp	r3, #0
   11ff4:	bne	12028 <strspn@plt+0xdf0>
   11ff8:	cmp	r1, #0
   11ffc:	beq	1212c <strspn@plt+0xef4>
   12000:	ldrb	r0, [r1]
   12004:	cmp	r0, #0
   12008:	bne	1204c <strspn@plt+0xe14>
   1200c:	strd	r4, [r8]
   12010:	ldr	r2, [sp, #12]
   12014:	ldr	r3, [sl]
   12018:	cmp	r2, r3
   1201c:	bne	12178 <strspn@plt+0xf40>
   12020:	add	sp, sp, #20
   12024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12028:	subs	r2, r4, #1
   1202c:	mvn	r6, #2
   12030:	sbc	r3, r5, #0
   12034:	mvn	r7, #0
   12038:	cmp	r3, r7
   1203c:	cmpeq	r2, r6
   12040:	bls	11ff8 <strspn@plt+0xdc0>
   12044:	mvn	r0, #0
   12048:	b	12010 <strspn@plt+0xdd8>
   1204c:	ldrb	r2, [r1, #1]
   12050:	sxtb	r3, r2
   12054:	cmp	r3, #105	; 0x69
   12058:	beq	12134 <strspn@plt+0xefc>
   1205c:	cmp	r3, #66	; 0x42
   12060:	beq	12110 <strspn@plt+0xed8>
   12064:	cmp	r2, #0
   12068:	bne	12044 <strspn@plt+0xe0c>
   1206c:	mov	r6, #1024	; 0x400
   12070:	ldr	r7, [pc, #268]	; 12184 <strspn@plt+0xf4c>
   12074:	sxtb	r3, r0
   12078:	str	r3, [sp, #4]
   1207c:	add	r7, pc, r7
   12080:	mov	r1, r3
   12084:	mov	r0, r7
   12088:	bl	110e8 <strchr@plt>
   1208c:	ldr	r3, [sp, #4]
   12090:	cmp	r0, #0
   12094:	rsbne	fp, r7, r0
   12098:	addne	fp, fp, #1
   1209c:	beq	12150 <strspn@plt+0xf18>
   120a0:	cmp	fp, #0
   120a4:	beq	12100 <strspn@plt+0xec8>
   120a8:	asr	r7, r6, #31
   120ac:	mvn	r0, #0
   120b0:	mvn	r1, #0
   120b4:	mov	r2, r6
   120b8:	mov	r3, r7
   120bc:	bl	1361c <strspn@plt+0x23e4>
   120c0:	cmp	r1, r5
   120c4:	cmpeq	r0, r4
   120c8:	bcc	12124 <strspn@plt+0xeec>
   120cc:	sub	ip, fp, #1
   120d0:	mov	r3, #0
   120d4:	b	120e8 <strspn@plt+0xeb0>
   120d8:	cmp	r1, r5
   120dc:	cmpeq	r0, r4
   120e0:	add	r3, r3, #1
   120e4:	bcc	12124 <strspn@plt+0xeec>
   120e8:	mul	r2, r4, r7
   120ec:	cmp	r3, ip
   120f0:	mla	r2, r6, r5, r2
   120f4:	umull	r4, r5, r4, r6
   120f8:	add	r5, r2, r5
   120fc:	bne	120d8 <strspn@plt+0xea0>
   12100:	mov	r0, #0
   12104:	cmp	r9, #0
   12108:	strne	fp, [r9]
   1210c:	b	1200c <strspn@plt+0xdd4>
   12110:	ldrsb	r3, [r1, #2]
   12114:	cmp	r3, #0
   12118:	bne	12044 <strspn@plt+0xe0c>
   1211c:	mov	r6, #1000	; 0x3e8
   12120:	b	12070 <strspn@plt+0xe38>
   12124:	mvn	r0, #1
   12128:	b	12104 <strspn@plt+0xecc>
   1212c:	mov	r0, r1
   12130:	b	1200c <strspn@plt+0xdd4>
   12134:	ldrsb	r3, [r1, #2]
   12138:	cmp	r3, #66	; 0x42
   1213c:	bne	12044 <strspn@plt+0xe0c>
   12140:	ldrsb	r3, [r1, #3]
   12144:	cmp	r3, #0
   12148:	beq	1206c <strspn@plt+0xe34>
   1214c:	b	12044 <strspn@plt+0xe0c>
   12150:	ldr	r7, [pc, #48]	; 12188 <strspn@plt+0xf50>
   12154:	mov	r1, r3
   12158:	add	r7, pc, r7
   1215c:	mov	r0, r7
   12160:	bl	110e8 <strchr@plt>
   12164:	cmp	r0, #0
   12168:	beq	12044 <strspn@plt+0xe0c>
   1216c:	rsb	r7, r7, r0
   12170:	add	fp, r7, #1
   12174:	b	120a0 <strspn@plt+0xe68>
   12178:	bl	1101c <__stack_chk_fail@plt>
   1217c:	ldrdeq	r3, [r1], -r0
   12180:	andeq	r0, r0, ip, lsl #2
   12184:	andeq	r2, r0, r4, ror r5
   12188:	andeq	r2, r0, r4, lsr #9
   1218c:	mov	r2, #0
   12190:	b	11f20 <strspn@plt+0xce8>
   12194:	push	{r4, r5, r6, lr}
   12198:	subs	r6, r0, #0
   1219c:	beq	12220 <strspn@plt+0xfe8>
   121a0:	ldrb	r4, [r6]
   121a4:	cmp	r4, #0
   121a8:	beq	12228 <strspn@plt+0xff0>
   121ac:	bl	110a0 <__ctype_b_loc@plt>
   121b0:	mov	r3, r6
   121b4:	ldr	r5, [r0]
   121b8:	b	121d4 <strspn@plt+0xf9c>
   121bc:	cmn	r3, #1
   121c0:	beq	12210 <strspn@plt+0xfd8>
   121c4:	ldrb	r4, [r3, #1]
   121c8:	mov	r3, r1
   121cc:	cmp	r4, #0
   121d0:	beq	12218 <strspn@plt+0xfe0>
   121d4:	lsl	r4, r4, #1
   121d8:	mov	ip, r3
   121dc:	add	r1, r3, #1
   121e0:	ldrh	r2, [r5, r4]
   121e4:	tst	r2, #2048	; 0x800
   121e8:	bne	121bc <strspn@plt+0xf84>
   121ec:	cmp	ip, #0
   121f0:	cmpne	ip, r6
   121f4:	movls	r0, #0
   121f8:	movhi	r0, #1
   121fc:	popls	{r4, r5, r6, pc}
   12200:	ldrsb	r0, [ip]
   12204:	rsbs	r0, r0, #1
   12208:	movcc	r0, #0
   1220c:	pop	{r4, r5, r6, pc}
   12210:	mov	r0, #0
   12214:	pop	{r4, r5, r6, pc}
   12218:	mov	ip, r1
   1221c:	b	121ec <strspn@plt+0xfb4>
   12220:	mov	r0, r6
   12224:	pop	{r4, r5, r6, pc}
   12228:	mov	r0, r4
   1222c:	pop	{r4, r5, r6, pc}
   12230:	cmp	r1, #0
   12234:	push	{r4, r5}
   12238:	sub	r4, r1, #1
   1223c:	beq	122a8 <strspn@plt+0x1070>
   12240:	ldrb	r1, [r0]
   12244:	cmp	r1, #0
   12248:	beq	122a8 <strspn@plt+0x1070>
   1224c:	sxtb	r1, r1
   12250:	sxtb	r2, r2
   12254:	cmp	r1, r2
   12258:	beq	12294 <strspn@plt+0x105c>
   1225c:	add	r1, r0, #1
   12260:	mov	r3, #0
   12264:	b	12280 <strspn@plt+0x1048>
   12268:	ldrb	r0, [r1], #1
   1226c:	cmp	r0, #0
   12270:	sxtb	ip, r0
   12274:	beq	12294 <strspn@plt+0x105c>
   12278:	cmp	ip, r2
   1227c:	beq	1229c <strspn@plt+0x1064>
   12280:	cmp	r3, r4
   12284:	mov	r5, r1
   12288:	add	r3, r3, #1
   1228c:	bne	12268 <strspn@plt+0x1030>
   12290:	mov	r0, #0
   12294:	pop	{r4, r5}
   12298:	bx	lr
   1229c:	mov	r0, r5
   122a0:	pop	{r4, r5}
   122a4:	bx	lr
   122a8:	mov	r0, r1
   122ac:	b	12294 <strspn@plt+0x105c>
   122b0:	ldr	r3, [pc, #228]	; 1239c <strspn@plt+0x1164>
   122b4:	ldr	r2, [pc, #228]	; 123a0 <strspn@plt+0x1168>
   122b8:	add	r3, pc, r3
   122bc:	push	{r4, r6, r7, r8, r9, lr}
   122c0:	subs	r6, r0, #0
   122c4:	ldr	r7, [r3, r2]
   122c8:	mov	r0, r3
   122cc:	sub	sp, sp, #8
   122d0:	mov	r4, #0
   122d4:	mov	r8, r1
   122d8:	ldr	r3, [r7]
   122dc:	str	r4, [sp]
   122e0:	str	r3, [sp, #4]
   122e4:	beq	122f4 <strspn@plt+0x10bc>
   122e8:	ldrsb	r3, [r6]
   122ec:	cmp	r3, r4
   122f0:	bne	1231c <strspn@plt+0x10e4>
   122f4:	bl	1110c <__errno_location@plt>
   122f8:	ldr	r3, [r0]
   122fc:	cmp	r3, #0
   12300:	bne	12348 <strspn@plt+0x1110>
   12304:	ldr	r1, [pc, #152]	; 123a4 <strspn@plt+0x116c>
   12308:	mov	r2, r8
   1230c:	mov	r3, r6
   12310:	mov	r0, #1
   12314:	add	r1, pc, r1
   12318:	bl	11190 <errx@plt>
   1231c:	bl	1110c <__errno_location@plt>
   12320:	mov	r3, r4
   12324:	mov	r1, sp
   12328:	mov	r2, #10
   1232c:	mov	r9, r0
   12330:	str	r4, [r0]
   12334:	mov	r0, r6
   12338:	bl	111c0 <__strtoll_internal@plt>
   1233c:	ldr	r3, [r9]
   12340:	cmp	r3, r4
   12344:	beq	12360 <strspn@plt+0x1128>
   12348:	ldr	r1, [pc, #88]	; 123a8 <strspn@plt+0x1170>
   1234c:	mov	r2, r8
   12350:	mov	r3, r6
   12354:	mov	r0, #1
   12358:	add	r1, pc, r1
   1235c:	bl	11040 <err@plt>
   12360:	ldr	r3, [sp]
   12364:	cmp	r6, r3
   12368:	beq	12304 <strspn@plt+0x10cc>
   1236c:	cmp	r3, #0
   12370:	beq	12380 <strspn@plt+0x1148>
   12374:	ldrsb	r3, [r3]
   12378:	cmp	r3, #0
   1237c:	bne	12304 <strspn@plt+0x10cc>
   12380:	ldr	r2, [sp, #4]
   12384:	ldr	r3, [r7]
   12388:	cmp	r2, r3
   1238c:	bne	12398 <strspn@plt+0x1160>
   12390:	add	sp, sp, #8
   12394:	pop	{r4, r6, r7, r8, r9, pc}
   12398:	bl	1101c <__stack_chk_fail@plt>
   1239c:	andeq	r2, r1, r0, asr #26
   123a0:	andeq	r0, r0, ip, lsl #2
   123a4:	ldrdeq	r2, [r0], -r0
   123a8:	andeq	r2, r0, ip, lsl #5
   123ac:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   123b0:	mov	r8, r0
   123b4:	mov	r9, r1
   123b8:	bl	122b0 <strspn@plt+0x1078>
   123bc:	mvn	r4, #0
   123c0:	mov	r5, #0
   123c4:	adds	r6, r0, #-2147483648	; 0x80000000
   123c8:	adc	r7, r1, #0
   123cc:	cmp	r7, r5
   123d0:	cmpeq	r6, r4
   123d4:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   123d8:	ldr	r1, [pc, #16]	; 123f0 <strspn@plt+0x11b8>
   123dc:	mov	r2, r9
   123e0:	mov	r3, r8
   123e4:	mov	r0, #1
   123e8:	add	r1, pc, r1
   123ec:	bl	11190 <errx@plt>
   123f0:	strdeq	r2, [r0], -ip
   123f4:	push	{r3, r4, r5, lr}
   123f8:	mov	r4, r0
   123fc:	mov	r5, r1
   12400:	bl	123ac <strspn@plt+0x1174>
   12404:	add	ip, r0, #32768	; 0x8000
   12408:	cmp	ip, #65536	; 0x10000
   1240c:	bcs	12418 <strspn@plt+0x11e0>
   12410:	sxth	r0, r0
   12414:	pop	{r3, r4, r5, pc}
   12418:	ldr	r1, [pc, #16]	; 12430 <strspn@plt+0x11f8>
   1241c:	mov	r2, r5
   12420:	mov	r3, r4
   12424:	mov	r0, #1
   12428:	add	r1, pc, r1
   1242c:	bl	11190 <errx@plt>
   12430:			; <UNDEFINED> instruction: 0x000021bc
   12434:	mov	r2, #10
   12438:	b	11e28 <strspn@plt+0xbf0>
   1243c:	push	{r3, r4, r5, r6, r7, lr}
   12440:	mov	r6, r0
   12444:	mov	r7, r1
   12448:	bl	12434 <strspn@plt+0x11fc>
   1244c:	mvn	r4, #0
   12450:	mov	r5, #0
   12454:	cmp	r1, r5
   12458:	cmpeq	r0, r4
   1245c:	popls	{r3, r4, r5, r6, r7, pc}
   12460:	ldr	r1, [pc, #16]	; 12478 <strspn@plt+0x1240>
   12464:	mov	r2, r7
   12468:	mov	r3, r6
   1246c:	mov	r0, #1
   12470:	add	r1, pc, r1
   12474:	bl	11190 <errx@plt>
   12478:	andeq	r2, r0, r4, ror r1
   1247c:	push	{r3, r4, r5, lr}
   12480:	mov	r4, r0
   12484:	mov	r5, r1
   12488:	bl	1243c <strspn@plt+0x1204>
   1248c:	cmp	r0, #65536	; 0x10000
   12490:	bcs	1249c <strspn@plt+0x1264>
   12494:	uxth	r0, r0
   12498:	pop	{r3, r4, r5, pc}
   1249c:	ldr	r1, [pc, #16]	; 124b4 <strspn@plt+0x127c>
   124a0:	mov	r2, r5
   124a4:	mov	r3, r4
   124a8:	mov	r0, #1
   124ac:	add	r1, pc, r1
   124b0:	bl	11190 <errx@plt>
   124b4:	andeq	r2, r0, r8, lsr r1
   124b8:	mov	r2, #16
   124bc:	b	11e28 <strspn@plt+0xbf0>
   124c0:	ldr	r3, [pc, #216]	; 125a0 <strspn@plt+0x1368>
   124c4:	push	{r4, r5, r6, r7, r8, lr}
   124c8:	subs	r4, r0, #0
   124cc:	ldr	r0, [pc, #208]	; 125a4 <strspn@plt+0x136c>
   124d0:	add	r3, pc, r3
   124d4:	sub	sp, sp, #8
   124d8:	mov	r5, #0
   124dc:	mov	r7, r1
   124e0:	ldr	r6, [r3, r0]
   124e4:	str	r5, [sp]
   124e8:	ldr	r3, [r6]
   124ec:	str	r3, [sp, #4]
   124f0:	beq	12500 <strspn@plt+0x12c8>
   124f4:	ldrsb	r3, [r4]
   124f8:	cmp	r3, r5
   124fc:	bne	12528 <strspn@plt+0x12f0>
   12500:	bl	1110c <__errno_location@plt>
   12504:	ldr	r3, [r0]
   12508:	cmp	r3, #0
   1250c:	bne	1254c <strspn@plt+0x1314>
   12510:	ldr	r1, [pc, #144]	; 125a8 <strspn@plt+0x1370>
   12514:	mov	r2, r7
   12518:	mov	r3, r4
   1251c:	mov	r0, #1
   12520:	add	r1, pc, r1
   12524:	bl	11190 <errx@plt>
   12528:	bl	1110c <__errno_location@plt>
   1252c:	mov	r1, sp
   12530:	mov	r8, r0
   12534:	str	r5, [r0]
   12538:	mov	r0, r4
   1253c:	bl	11160 <strtod@plt>
   12540:	ldr	r3, [r8]
   12544:	cmp	r3, r5
   12548:	beq	12564 <strspn@plt+0x132c>
   1254c:	ldr	r1, [pc, #88]	; 125ac <strspn@plt+0x1374>
   12550:	mov	r2, r7
   12554:	mov	r3, r4
   12558:	mov	r0, #1
   1255c:	add	r1, pc, r1
   12560:	bl	11040 <err@plt>
   12564:	ldr	r3, [sp]
   12568:	cmp	r4, r3
   1256c:	beq	12510 <strspn@plt+0x12d8>
   12570:	cmp	r3, #0
   12574:	beq	12584 <strspn@plt+0x134c>
   12578:	ldrsb	r3, [r3]
   1257c:	cmp	r3, #0
   12580:	bne	12510 <strspn@plt+0x12d8>
   12584:	ldr	r2, [sp, #4]
   12588:	ldr	r3, [r6]
   1258c:	cmp	r2, r3
   12590:	bne	1259c <strspn@plt+0x1364>
   12594:	add	sp, sp, #8
   12598:	pop	{r4, r5, r6, r7, r8, pc}
   1259c:	bl	1101c <__stack_chk_fail@plt>
   125a0:	andeq	r2, r1, r8, lsr #22
   125a4:	andeq	r0, r0, ip, lsl #2
   125a8:	andeq	r2, r0, r4, asr #1
   125ac:	andeq	r2, r0, r8, lsl #1
   125b0:	ldr	r3, [pc, #220]	; 12694 <strspn@plt+0x145c>
   125b4:	push	{r4, r5, r6, r7, r8, lr}
   125b8:	subs	r4, r0, #0
   125bc:	ldr	r0, [pc, #212]	; 12698 <strspn@plt+0x1460>
   125c0:	add	r3, pc, r3
   125c4:	sub	sp, sp, #8
   125c8:	mov	r5, #0
   125cc:	mov	r7, r1
   125d0:	ldr	r6, [r3, r0]
   125d4:	str	r5, [sp]
   125d8:	ldr	r3, [r6]
   125dc:	str	r3, [sp, #4]
   125e0:	beq	125f0 <strspn@plt+0x13b8>
   125e4:	ldrsb	r3, [r4]
   125e8:	cmp	r3, r5
   125ec:	bne	12618 <strspn@plt+0x13e0>
   125f0:	bl	1110c <__errno_location@plt>
   125f4:	ldr	r3, [r0]
   125f8:	cmp	r3, #0
   125fc:	bne	12640 <strspn@plt+0x1408>
   12600:	ldr	r1, [pc, #148]	; 1269c <strspn@plt+0x1464>
   12604:	mov	r2, r7
   12608:	mov	r3, r4
   1260c:	mov	r0, #1
   12610:	add	r1, pc, r1
   12614:	bl	11190 <errx@plt>
   12618:	bl	1110c <__errno_location@plt>
   1261c:	mov	r1, sp
   12620:	mov	r2, #10
   12624:	mov	r8, r0
   12628:	str	r5, [r0]
   1262c:	mov	r0, r4
   12630:	bl	10f80 <strtol@plt>
   12634:	ldr	r3, [r8]
   12638:	cmp	r3, r5
   1263c:	beq	12658 <strspn@plt+0x1420>
   12640:	ldr	r1, [pc, #88]	; 126a0 <strspn@plt+0x1468>
   12644:	mov	r2, r7
   12648:	mov	r3, r4
   1264c:	mov	r0, #1
   12650:	add	r1, pc, r1
   12654:	bl	11040 <err@plt>
   12658:	ldr	r3, [sp]
   1265c:	cmp	r4, r3
   12660:	beq	12600 <strspn@plt+0x13c8>
   12664:	cmp	r3, #0
   12668:	beq	12678 <strspn@plt+0x1440>
   1266c:	ldrsb	r3, [r3]
   12670:	cmp	r3, #0
   12674:	bne	12600 <strspn@plt+0x13c8>
   12678:	ldr	r2, [sp, #4]
   1267c:	ldr	r3, [r6]
   12680:	cmp	r2, r3
   12684:	bne	12690 <strspn@plt+0x1458>
   12688:	add	sp, sp, #8
   1268c:	pop	{r4, r5, r6, r7, r8, pc}
   12690:	bl	1101c <__stack_chk_fail@plt>
   12694:	andeq	r2, r1, r8, lsr sl
   12698:	andeq	r0, r0, ip, lsl #2
   1269c:	ldrdeq	r1, [r0], -r4
   126a0:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   126a4:	ldr	r3, [pc, #220]	; 12788 <strspn@plt+0x1550>
   126a8:	push	{r4, r5, r6, r7, r8, lr}
   126ac:	subs	r4, r0, #0
   126b0:	ldr	r0, [pc, #212]	; 1278c <strspn@plt+0x1554>
   126b4:	add	r3, pc, r3
   126b8:	sub	sp, sp, #8
   126bc:	mov	r5, #0
   126c0:	mov	r7, r1
   126c4:	ldr	r6, [r3, r0]
   126c8:	str	r5, [sp]
   126cc:	ldr	r3, [r6]
   126d0:	str	r3, [sp, #4]
   126d4:	beq	126e4 <strspn@plt+0x14ac>
   126d8:	ldrsb	r3, [r4]
   126dc:	cmp	r3, r5
   126e0:	bne	1270c <strspn@plt+0x14d4>
   126e4:	bl	1110c <__errno_location@plt>
   126e8:	ldr	r3, [r0]
   126ec:	cmp	r3, #0
   126f0:	bne	12734 <strspn@plt+0x14fc>
   126f4:	ldr	r1, [pc, #148]	; 12790 <strspn@plt+0x1558>
   126f8:	mov	r2, r7
   126fc:	mov	r3, r4
   12700:	mov	r0, #1
   12704:	add	r1, pc, r1
   12708:	bl	11190 <errx@plt>
   1270c:	bl	1110c <__errno_location@plt>
   12710:	mov	r1, sp
   12714:	mov	r2, #10
   12718:	mov	r8, r0
   1271c:	str	r5, [r0]
   12720:	mov	r0, r4
   12724:	bl	110d0 <strtoul@plt>
   12728:	ldr	r3, [r8]
   1272c:	cmp	r3, r5
   12730:	beq	1274c <strspn@plt+0x1514>
   12734:	ldr	r1, [pc, #88]	; 12794 <strspn@plt+0x155c>
   12738:	mov	r2, r7
   1273c:	mov	r3, r4
   12740:	mov	r0, #1
   12744:	add	r1, pc, r1
   12748:	bl	11040 <err@plt>
   1274c:	ldr	r3, [sp]
   12750:	cmp	r4, r3
   12754:	beq	126f4 <strspn@plt+0x14bc>
   12758:	cmp	r3, #0
   1275c:	beq	1276c <strspn@plt+0x1534>
   12760:	ldrsb	r3, [r3]
   12764:	cmp	r3, #0
   12768:	bne	126f4 <strspn@plt+0x14bc>
   1276c:	ldr	r2, [sp, #4]
   12770:	ldr	r3, [r6]
   12774:	cmp	r2, r3
   12778:	bne	12784 <strspn@plt+0x154c>
   1277c:	add	sp, sp, #8
   12780:	pop	{r4, r5, r6, r7, r8, pc}
   12784:	bl	1101c <__stack_chk_fail@plt>
   12788:	andeq	r2, r1, r4, asr #18
   1278c:	andeq	r0, r0, ip, lsl #2
   12790:	andeq	r1, r0, r0, ror #29
   12794:	andeq	r1, r0, r0, lsr #29
   12798:	ldr	ip, [pc, #132]	; 12824 <strspn@plt+0x15ec>
   1279c:	push	{r4, r5, r6, lr}
   127a0:	add	ip, pc, ip
   127a4:	ldr	lr, [pc, #124]	; 12828 <strspn@plt+0x15f0>
   127a8:	sub	sp, sp, #16
   127ac:	mov	r6, r1
   127b0:	mov	r5, r0
   127b4:	mov	r1, sp
   127b8:	ldr	r4, [ip, lr]
   127bc:	ldr	ip, [r4]
   127c0:	str	ip, [sp, #12]
   127c4:	bl	1218c <strspn@plt+0xf54>
   127c8:	cmp	r0, #0
   127cc:	bne	127ec <strspn@plt+0x15b4>
   127d0:	ldr	r2, [sp, #12]
   127d4:	ldr	r3, [r4]
   127d8:	ldrd	r0, [sp]
   127dc:	cmp	r2, r3
   127e0:	bne	12820 <strspn@plt+0x15e8>
   127e4:	add	sp, sp, #16
   127e8:	pop	{r4, r5, r6, pc}
   127ec:	bl	1110c <__errno_location@plt>
   127f0:	mov	r2, r6
   127f4:	ldr	r3, [r0]
   127f8:	mov	r0, #1
   127fc:	cmp	r3, #0
   12800:	mov	r3, r5
   12804:	beq	12814 <strspn@plt+0x15dc>
   12808:	ldr	r1, [pc, #28]	; 1282c <strspn@plt+0x15f4>
   1280c:	add	r1, pc, r1
   12810:	bl	11040 <err@plt>
   12814:	ldr	r1, [pc, #20]	; 12830 <strspn@plt+0x15f8>
   12818:	add	r1, pc, r1
   1281c:	bl	11190 <errx@plt>
   12820:	bl	1101c <__stack_chk_fail@plt>
   12824:	andeq	r2, r1, r8, asr r8
   12828:	andeq	r0, r0, ip, lsl #2
   1282c:	ldrdeq	r1, [r0], -r8
   12830:	andeq	r1, r0, ip, asr #27
   12834:	push	{r4, lr}
   12838:	mov	r4, r1
   1283c:	mov	r1, r2
   12840:	bl	124c0 <strspn@plt+0x1288>
   12844:	vldr	d7, [pc, #28]	; 12868 <strspn@plt+0x1630>
   12848:	vcvt.s32.f64	s11, d0
   1284c:	vcvt.f64.s32	d6, s11
   12850:	vstr	s11, [r4]
   12854:	vsub.f64	d0, d0, d6
   12858:	vmul.f64	d0, d0, d7
   1285c:	vcvt.s32.f64	s0, d0
   12860:	vstr	s0, [r4, #4]
   12864:	pop	{r4, pc}
   12868:	andeq	r0, r0, r0
   1286c:	smlawbmi	lr, r0, r4, r8
   12870:	and	r3, r0, #61440	; 0xf000
   12874:	cmp	r3, #16384	; 0x4000
   12878:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   1287c:	moveq	r3, #100	; 0x64
   12880:	beq	128f8 <strspn@plt+0x16c0>
   12884:	cmp	r3, #40960	; 0xa000
   12888:	moveq	r3, #108	; 0x6c
   1288c:	beq	128f8 <strspn@plt+0x16c0>
   12890:	cmp	r3, #8192	; 0x2000
   12894:	moveq	r3, #99	; 0x63
   12898:	beq	128f8 <strspn@plt+0x16c0>
   1289c:	cmp	r3, #24576	; 0x6000
   128a0:	moveq	r3, #98	; 0x62
   128a4:	beq	128f8 <strspn@plt+0x16c0>
   128a8:	cmp	r3, #49152	; 0xc000
   128ac:	moveq	r3, #115	; 0x73
   128b0:	beq	128f8 <strspn@plt+0x16c0>
   128b4:	cmp	r3, #4096	; 0x1000
   128b8:	moveq	r3, #112	; 0x70
   128bc:	beq	128f8 <strspn@plt+0x16c0>
   128c0:	cmp	r3, #32768	; 0x8000
   128c4:	beq	128f4 <strspn@plt+0x16bc>
   128c8:	mov	r4, #9
   128cc:	mov	r3, #8
   128d0:	mov	r6, #7
   128d4:	mov	r7, #6
   128d8:	mov	r2, #5
   128dc:	mov	r8, #4
   128e0:	mov	r9, #3
   128e4:	mov	ip, #2
   128e8:	mov	sl, #1
   128ec:	mov	fp, #0
   128f0:	b	12924 <strspn@plt+0x16ec>
   128f4:	mov	r3, #45	; 0x2d
   128f8:	strb	r3, [r1]
   128fc:	mov	r4, #10
   12900:	mov	r3, #9
   12904:	mov	r6, #8
   12908:	mov	r7, #7
   1290c:	mov	r2, #6
   12910:	mov	r8, #5
   12914:	mov	r9, #4
   12918:	mov	ip, #3
   1291c:	mov	sl, #2
   12920:	mov	fp, #1
   12924:	tst	r0, #256	; 0x100
   12928:	add	ip, r1, ip
   1292c:	moveq	r5, #45	; 0x2d
   12930:	movne	r5, #114	; 0x72
   12934:	tst	r0, #128	; 0x80
   12938:	strb	r5, [r1, fp]
   1293c:	moveq	r5, #45	; 0x2d
   12940:	movne	r5, #119	; 0x77
   12944:	tst	r0, #2048	; 0x800
   12948:	strb	r5, [r1, sl]
   1294c:	beq	129e8 <strspn@plt+0x17b0>
   12950:	tst	r0, #64	; 0x40
   12954:	moveq	r5, #83	; 0x53
   12958:	movne	r5, #115	; 0x73
   1295c:	tst	r0, #32
   12960:	strb	r5, [ip]
   12964:	add	r2, r1, r2
   12968:	moveq	ip, #45	; 0x2d
   1296c:	movne	ip, #114	; 0x72
   12970:	tst	r0, #16
   12974:	strb	ip, [r1, r9]
   12978:	moveq	ip, #45	; 0x2d
   1297c:	movne	ip, #119	; 0x77
   12980:	tst	r0, #1024	; 0x400
   12984:	strb	ip, [r1, r8]
   12988:	beq	12a08 <strspn@plt+0x17d0>
   1298c:	tst	r0, #8
   12990:	moveq	ip, #83	; 0x53
   12994:	movne	ip, #115	; 0x73
   12998:	tst	r0, #4
   1299c:	strb	ip, [r2]
   129a0:	add	r3, r1, r3
   129a4:	moveq	r2, #45	; 0x2d
   129a8:	movne	r2, #114	; 0x72
   129ac:	tst	r0, #2
   129b0:	strb	r2, [r1, r7]
   129b4:	moveq	r2, #45	; 0x2d
   129b8:	movne	r2, #119	; 0x77
   129bc:	tst	r0, #512	; 0x200
   129c0:	strb	r2, [r1, r6]
   129c4:	beq	129f8 <strspn@plt+0x17c0>
   129c8:	tst	r0, #1
   129cc:	moveq	r2, #84	; 0x54
   129d0:	movne	r2, #116	; 0x74
   129d4:	strb	r2, [r3]
   129d8:	mov	r3, #0
   129dc:	strb	r3, [r1, r4]
   129e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   129e4:	bx	lr
   129e8:	tst	r0, #64	; 0x40
   129ec:	moveq	r5, #45	; 0x2d
   129f0:	movne	r5, #120	; 0x78
   129f4:	b	1295c <strspn@plt+0x1724>
   129f8:	tst	r0, #1
   129fc:	moveq	r2, #45	; 0x2d
   12a00:	movne	r2, #120	; 0x78
   12a04:	b	129d4 <strspn@plt+0x179c>
   12a08:	tst	r0, #8
   12a0c:	moveq	ip, #45	; 0x2d
   12a10:	movne	ip, #120	; 0x78
   12a14:	b	12998 <strspn@plt+0x1760>
   12a18:	ldr	r1, [pc, #580]	; 12c64 <strspn@plt+0x1a2c>
   12a1c:	tst	r0, #2
   12a20:	ldr	ip, [pc, #576]	; 12c68 <strspn@plt+0x1a30>
   12a24:	add	r1, pc, r1
   12a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a2c:	sub	sp, sp, #100	; 0x64
   12a30:	ldr	r6, [r1, ip]
   12a34:	addeq	r7, sp, #52	; 0x34
   12a38:	addne	lr, sp, #53	; 0x35
   12a3c:	addne	r7, sp, #52	; 0x34
   12a40:	moveq	lr, r7
   12a44:	mov	ip, #10
   12a48:	ldr	r1, [r6]
   12a4c:	str	r1, [sp, #92]	; 0x5c
   12a50:	movne	r1, #32
   12a54:	strbne	r1, [sp, #52]	; 0x34
   12a58:	mov	r1, #1
   12a5c:	sub	r9, ip, #32
   12a60:	rsb	r8, ip, #32
   12a64:	lsl	r5, r1, r9
   12a68:	lsl	r4, r1, ip
   12a6c:	orr	r5, r5, r1, lsr r8
   12a70:	cmp	r3, r5
   12a74:	cmpeq	r2, r4
   12a78:	bcc	12be4 <strspn@plt+0x19ac>
   12a7c:	add	ip, ip, #10
   12a80:	cmp	ip, #70	; 0x46
   12a84:	bne	12a5c <strspn@plt+0x1824>
   12a88:	mov	r1, #60	; 0x3c
   12a8c:	movw	r5, #26215	; 0x6667
   12a90:	movt	r5, #26214	; 0x6666
   12a94:	ldr	r8, [pc, #464]	; 12c6c <strspn@plt+0x1a34>
   12a98:	mov	fp, #1
   12a9c:	smull	sl, r9, r5, r1
   12aa0:	add	r8, pc, r8
   12aa4:	str	r8, [sp, #36]	; 0x24
   12aa8:	sub	r8, r1, #32
   12aac:	asr	r4, r1, #31
   12ab0:	lsl	r5, fp, r8
   12ab4:	str	r4, [sp, #44]	; 0x2c
   12ab8:	lsl	r4, fp, r1
   12abc:	subs	r4, r4, #1
   12ac0:	str	r9, [sp, #40]	; 0x28
   12ac4:	rsb	r9, r1, #32
   12ac8:	ldr	sl, [sp, #40]	; 0x28
   12acc:	orr	r5, r5, fp, lsr r9
   12ad0:	ldr	fp, [sp, #44]	; 0x2c
   12ad4:	sbc	r5, r5, #0
   12ad8:	tst	r0, #1
   12adc:	lsr	r1, r2, r1
   12ae0:	rsb	fp, fp, sl, asr #2
   12ae4:	ldr	sl, [sp, #36]	; 0x24
   12ae8:	orr	r1, r1, r3, lsl r9
   12aec:	and	r5, r5, r3
   12af0:	orr	r8, r1, r3, lsr r8
   12af4:	and	r4, r4, r2
   12af8:	ldrb	r0, [sl, fp]
   12afc:	add	r3, lr, #1
   12b00:	strb	r0, [lr]
   12b04:	bne	12bc8 <strspn@plt+0x1990>
   12b08:	orrs	fp, r4, r5
   12b0c:	mov	r2, #0
   12b10:	strb	r2, [r3]
   12b14:	beq	12bfc <strspn@plt+0x19c4>
   12b18:	sub	lr, ip, #20
   12b1c:	sub	ip, ip, #52	; 0x34
   12b20:	rsb	r3, lr, #32
   12b24:	lsr	r0, r4, lr
   12b28:	orr	r0, r0, r5, lsl r3
   12b2c:	lsr	r1, r5, lr
   12b30:	orr	r0, r0, r5, lsr ip
   12b34:	mov	r2, #100	; 0x64
   12b38:	adds	r0, r0, #50	; 0x32
   12b3c:	mov	r3, #0
   12b40:	adc	r1, r1, #0
   12b44:	bl	1361c <strspn@plt+0x23e4>
   12b48:	mov	r4, r0
   12b4c:	mov	r5, r1
   12b50:	cmp	r5, #0
   12b54:	cmpeq	r4, #10
   12b58:	addeq	r8, r8, #1
   12b5c:	beq	12bfc <strspn@plt+0x19c4>
   12b60:	orrs	r2, r4, r5
   12b64:	beq	12bfc <strspn@plt+0x19c4>
   12b68:	bl	111a8 <localeconv@plt>
   12b6c:	cmp	r0, #0
   12b70:	beq	12c48 <strspn@plt+0x1a10>
   12b74:	ldr	r3, [r0]
   12b78:	cmp	r3, #0
   12b7c:	beq	12c58 <strspn@plt+0x1a20>
   12b80:	ldrsb	r2, [r3]
   12b84:	cmp	r2, #0
   12b88:	ldreq	r3, [pc, #224]	; 12c70 <strspn@plt+0x1a38>
   12b8c:	addeq	r3, pc, r3
   12b90:	add	r9, sp, #60	; 0x3c
   12b94:	ldr	ip, [pc, #216]	; 12c74 <strspn@plt+0x1a3c>
   12b98:	mov	r1, #32
   12b9c:	str	r3, [sp, #8]
   12ba0:	add	ip, pc, ip
   12ba4:	str	r8, [sp, #4]
   12ba8:	mov	r0, r9
   12bac:	strd	r4, [sp, #16]
   12bb0:	mov	r3, r1
   12bb4:	str	r7, [sp, #24]
   12bb8:	mov	r2, #1
   12bbc:	str	ip, [sp]
   12bc0:	bl	1122c <__snprintf_chk@plt>
   12bc4:	b	12c28 <strspn@plt+0x19f0>
   12bc8:	cmp	r0, #66	; 0x42
   12bcc:	addne	r3, lr, #3
   12bd0:	movne	r1, #105	; 0x69
   12bd4:	movne	r2, #66	; 0x42
   12bd8:	strbne	r1, [lr, #1]
   12bdc:	strbne	r2, [lr, #2]
   12be0:	b	12b08 <strspn@plt+0x18d0>
   12be4:	subs	r1, ip, #10
   12be8:	strbeq	r1, [lr, #1]
   12bec:	moveq	r3, #66	; 0x42
   12bf0:	moveq	r8, r2
   12bf4:	strbeq	r3, [lr]
   12bf8:	bne	12a8c <strspn@plt+0x1854>
   12bfc:	ldr	r3, [pc, #116]	; 12c78 <strspn@plt+0x1a40>
   12c00:	add	r9, sp, #60	; 0x3c
   12c04:	mov	r1, #32
   12c08:	str	r8, [sp, #4]
   12c0c:	add	r3, pc, r3
   12c10:	str	r7, [sp, #8]
   12c14:	str	r3, [sp]
   12c18:	mov	r0, r9
   12c1c:	mov	r3, r1
   12c20:	mov	r2, #1
   12c24:	bl	1122c <__snprintf_chk@plt>
   12c28:	mov	r0, r9
   12c2c:	bl	11130 <__strdup@plt>
   12c30:	ldr	r2, [sp, #92]	; 0x5c
   12c34:	ldr	r3, [r6]
   12c38:	cmp	r2, r3
   12c3c:	bne	12c54 <strspn@plt+0x1a1c>
   12c40:	add	sp, sp, #100	; 0x64
   12c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c48:	ldr	r3, [pc, #44]	; 12c7c <strspn@plt+0x1a44>
   12c4c:	add	r3, pc, r3
   12c50:	b	12b90 <strspn@plt+0x1958>
   12c54:	bl	1101c <__stack_chk_fail@plt>
   12c58:	ldr	r3, [pc, #32]	; 12c80 <strspn@plt+0x1a48>
   12c5c:	add	r3, pc, r3
   12c60:	b	12b90 <strspn@plt+0x1958>
   12c64:	ldrdeq	r2, [r1], -r4
   12c68:	andeq	r0, r0, ip, lsl #2
   12c6c:	andeq	r1, r0, ip, ror #22
   12c70:	andeq	r1, r0, ip, ror sl
   12c74:	andeq	r1, r0, r4, ror sl
   12c78:	andeq	r1, r0, r4, lsl sl
   12c7c:			; <UNDEFINED> instruction: 0x000019bc
   12c80:	andeq	r1, r0, ip, lsr #19
   12c84:	cmp	r0, #0
   12c88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c8c:	mov	r8, r1
   12c90:	mov	sl, r2
   12c94:	mov	r9, r3
   12c98:	beq	12d54 <strspn@plt+0x1b1c>
   12c9c:	ldrb	r5, [r0]
   12ca0:	cmp	r5, #0
   12ca4:	beq	12d54 <strspn@plt+0x1b1c>
   12ca8:	cmp	r2, #0
   12cac:	cmpne	r1, #0
   12cb0:	movne	ip, #0
   12cb4:	moveq	ip, #1
   12cb8:	beq	12d54 <strspn@plt+0x1b1c>
   12cbc:	cmp	r3, #0
   12cc0:	movne	r4, r0
   12cc4:	movne	r6, ip
   12cc8:	bne	12cdc <strspn@plt+0x1aa4>
   12ccc:	b	12d54 <strspn@plt+0x1b1c>
   12cd0:	ldrb	r5, [r4, #1]!
   12cd4:	cmp	r5, #0
   12cd8:	beq	12d4c <strspn@plt+0x1b14>
   12cdc:	cmp	sl, r6
   12ce0:	bls	12d5c <strspn@plt+0x1b24>
   12ce4:	cmp	ip, #0
   12ce8:	ldrsb	r7, [r4, #1]
   12cec:	moveq	ip, r4
   12cf0:	cmp	r5, #44	; 0x2c
   12cf4:	mov	r0, ip
   12cf8:	moveq	r5, r4
   12cfc:	movne	r5, #0
   12d00:	cmp	r7, #0
   12d04:	addeq	r5, r4, #1
   12d08:	cmp	r5, #0
   12d0c:	rsb	r1, ip, r5
   12d10:	beq	12d44 <strspn@plt+0x1b0c>
   12d14:	cmp	ip, r5
   12d18:	bcs	12d54 <strspn@plt+0x1b1c>
   12d1c:	blx	r9
   12d20:	mov	ip, #0
   12d24:	add	r3, r6, #1
   12d28:	cmn	r0, #1
   12d2c:	beq	12d54 <strspn@plt+0x1b1c>
   12d30:	str	r0, [r8, r6, lsl #2]
   12d34:	mov	r6, r3
   12d38:	ldrsb	r2, [r5]
   12d3c:	cmp	r2, ip
   12d40:	beq	12d64 <strspn@plt+0x1b2c>
   12d44:	cmn	r4, #1
   12d48:	bne	12cd0 <strspn@plt+0x1a98>
   12d4c:	mov	r0, r6
   12d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d54:	mvn	r0, #0
   12d58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d5c:	mvn	r0, #1
   12d60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d64:	mov	r6, r3
   12d68:	b	12d4c <strspn@plt+0x1b14>
   12d6c:	cmp	r0, #0
   12d70:	push	{r4, lr}
   12d74:	mov	r4, r3
   12d78:	beq	12df0 <strspn@plt+0x1bb8>
   12d7c:	ldrb	ip, [r0]
   12d80:	cmp	ip, #0
   12d84:	beq	12df0 <strspn@plt+0x1bb8>
   12d88:	cmp	r3, #0
   12d8c:	beq	12df0 <strspn@plt+0x1bb8>
   12d90:	ldr	r3, [r3]
   12d94:	cmp	r3, #0
   12d98:	blt	12df0 <strspn@plt+0x1bb8>
   12d9c:	cmp	r3, r2
   12da0:	bhi	12df0 <strspn@plt+0x1bb8>
   12da4:	cmp	ip, #43	; 0x2b
   12da8:	lsleq	ip, r3, #2
   12dac:	addeq	r0, r0, #1
   12db0:	movne	ip, #0
   12db4:	strne	ip, [r4]
   12db8:	movne	r3, ip
   12dbc:	add	r1, r1, ip
   12dc0:	rsb	r2, r3, r2
   12dc4:	ldr	r3, [sp, #8]
   12dc8:	bl	12c84 <strspn@plt+0x1a4c>
   12dcc:	subs	r3, r0, #0
   12dd0:	ble	12de8 <strspn@plt+0x1bb0>
   12dd4:	ldr	r2, [r4]
   12dd8:	mov	r0, r3
   12ddc:	add	r3, r2, r3
   12de0:	str	r3, [r4]
   12de4:	pop	{r4, pc}
   12de8:	mov	r0, r3
   12dec:	pop	{r4, pc}
   12df0:	mvn	r0, #0
   12df4:	pop	{r4, pc}
   12df8:	cmp	r2, #0
   12dfc:	cmpne	r0, #0
   12e00:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12e04:	mov	r4, r0
   12e08:	mov	r7, r2
   12e0c:	movne	r3, #0
   12e10:	moveq	r3, #1
   12e14:	mov	r9, r1
   12e18:	beq	12eb4 <strspn@plt+0x1c7c>
   12e1c:	cmp	r1, #0
   12e20:	beq	12eb4 <strspn@plt+0x1c7c>
   12e24:	mov	r6, r0
   12e28:	mov	r8, #1
   12e2c:	ldrb	r5, [r6], #1
   12e30:	cmp	r5, #0
   12e34:	beq	12ea4 <strspn@plt+0x1c6c>
   12e38:	cmp	r5, #44	; 0x2c
   12e3c:	ldrsb	r0, [r4, #1]
   12e40:	moveq	r5, r4
   12e44:	movne	r5, #0
   12e48:	cmp	r3, #0
   12e4c:	moveq	r3, r4
   12e50:	cmp	r0, #0
   12e54:	mov	r0, r3
   12e58:	moveq	r5, r6
   12e5c:	cmp	r5, #0
   12e60:	rsb	r1, r3, r5
   12e64:	beq	12e9c <strspn@plt+0x1c64>
   12e68:	cmp	r3, r5
   12e6c:	bcs	12eac <strspn@plt+0x1c74>
   12e70:	blx	r7
   12e74:	mov	r3, #0
   12e78:	cmp	r0, #0
   12e7c:	and	r2, r0, #7
   12e80:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   12e84:	ldrb	r1, [r9, r0, asr #3]
   12e88:	orr	r2, r1, r8, lsl r2
   12e8c:	strb	r2, [r9, r0, asr #3]
   12e90:	ldrsb	r2, [r5]
   12e94:	cmp	r2, r3
   12e98:	beq	12ea4 <strspn@plt+0x1c6c>
   12e9c:	adds	r4, r4, #1
   12ea0:	bne	12e2c <strspn@plt+0x1bf4>
   12ea4:	mov	r0, #0
   12ea8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12eac:	mvn	r0, #0
   12eb0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12eb4:	mvn	r0, #21
   12eb8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12ebc:	cmp	r2, #0
   12ec0:	cmpne	r0, #0
   12ec4:	push	{r4, r5, r6, r7, r8, lr}
   12ec8:	movne	r3, #0
   12ecc:	moveq	r3, #1
   12ed0:	mov	r4, r0
   12ed4:	mov	r8, r2
   12ed8:	mov	r7, r1
   12edc:	beq	12f70 <strspn@plt+0x1d38>
   12ee0:	cmp	r1, #0
   12ee4:	beq	12f70 <strspn@plt+0x1d38>
   12ee8:	mov	r6, r0
   12eec:	ldrb	r5, [r6], #1
   12ef0:	cmp	r5, #0
   12ef4:	beq	12f60 <strspn@plt+0x1d28>
   12ef8:	cmp	r5, #44	; 0x2c
   12efc:	ldrsb	r0, [r4, #1]
   12f00:	moveq	r5, r4
   12f04:	movne	r5, #0
   12f08:	cmp	r3, #0
   12f0c:	moveq	r3, r4
   12f10:	cmp	r0, #0
   12f14:	mov	r0, r3
   12f18:	moveq	r5, r6
   12f1c:	cmp	r5, #0
   12f20:	rsb	r1, r3, r5
   12f24:	beq	12f58 <strspn@plt+0x1d20>
   12f28:	cmp	r3, r5
   12f2c:	bcs	12f68 <strspn@plt+0x1d30>
   12f30:	blx	r8
   12f34:	mov	r3, #0
   12f38:	cmp	r0, #0
   12f3c:	poplt	{r4, r5, r6, r7, r8, pc}
   12f40:	ldr	r2, [r7]
   12f44:	orr	r0, r2, r0
   12f48:	str	r0, [r7]
   12f4c:	ldrsb	r2, [r5]
   12f50:	cmp	r2, r3
   12f54:	beq	12f60 <strspn@plt+0x1d28>
   12f58:	adds	r4, r4, #1
   12f5c:	bne	12eec <strspn@plt+0x1cb4>
   12f60:	mov	r0, #0
   12f64:	pop	{r4, r5, r6, r7, r8, pc}
   12f68:	mvn	r0, #0
   12f6c:	pop	{r4, r5, r6, r7, r8, pc}
   12f70:	mvn	r0, #21
   12f74:	pop	{r4, r5, r6, r7, r8, pc}
   12f78:	ldr	ip, [pc, #380]	; 130fc <strspn@plt+0x1ec4>
   12f7c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12f80:	subs	r4, r0, #0
   12f84:	ldr	r0, [pc, #372]	; 13100 <strspn@plt+0x1ec8>
   12f88:	add	ip, pc, ip
   12f8c:	mov	r6, r2
   12f90:	sub	sp, sp, #12
   12f94:	mov	r2, ip
   12f98:	mov	r8, #0
   12f9c:	ldr	r7, [ip, r0]
   12fa0:	mov	r9, r1
   12fa4:	str	r8, [sp]
   12fa8:	ldr	r2, [r7]
   12fac:	str	r2, [sp, #4]
   12fb0:	beq	13020 <strspn@plt+0x1de8>
   12fb4:	str	r3, [r1]
   12fb8:	str	r3, [r6]
   12fbc:	bl	1110c <__errno_location@plt>
   12fc0:	str	r8, [r0]
   12fc4:	mov	r5, r0
   12fc8:	ldrsb	r3, [r4]
   12fcc:	cmp	r3, #58	; 0x3a
   12fd0:	beq	1303c <strspn@plt+0x1e04>
   12fd4:	mov	r0, r4
   12fd8:	mov	r2, #10
   12fdc:	mov	r1, sp
   12fe0:	bl	10f80 <strtol@plt>
   12fe4:	str	r0, [r9]
   12fe8:	str	r0, [r6]
   12fec:	ldr	r0, [r5]
   12ff0:	cmp	r0, #0
   12ff4:	bne	130f0 <strspn@plt+0x1eb8>
   12ff8:	ldr	r3, [sp]
   12ffc:	cmp	r3, #0
   13000:	beq	130f0 <strspn@plt+0x1eb8>
   13004:	cmp	r4, r3
   13008:	beq	130f0 <strspn@plt+0x1eb8>
   1300c:	ldrsb	r2, [r3]
   13010:	cmp	r2, #58	; 0x3a
   13014:	beq	13088 <strspn@plt+0x1e50>
   13018:	cmp	r2, #45	; 0x2d
   1301c:	beq	13098 <strspn@plt+0x1e60>
   13020:	mov	r0, #0
   13024:	ldr	r2, [sp, #4]
   13028:	ldr	r3, [r7]
   1302c:	cmp	r2, r3
   13030:	bne	130f8 <strspn@plt+0x1ec0>
   13034:	add	sp, sp, #12
   13038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1303c:	add	r4, r4, #1
   13040:	mov	r1, sp
   13044:	mov	r2, #10
   13048:	mov	r0, r4
   1304c:	bl	10f80 <strtol@plt>
   13050:	str	r0, [r6]
   13054:	ldr	r3, [r5]
   13058:	cmp	r3, #0
   1305c:	bne	130f0 <strspn@plt+0x1eb8>
   13060:	ldr	r3, [sp]
   13064:	cmp	r3, #0
   13068:	beq	130f0 <strspn@plt+0x1eb8>
   1306c:	ldrsb	r2, [r3]
   13070:	cmp	r2, #0
   13074:	bne	130f0 <strspn@plt+0x1eb8>
   13078:	cmp	r4, r3
   1307c:	movne	r0, #0
   13080:	mvneq	r0, #0
   13084:	b	13024 <strspn@plt+0x1dec>
   13088:	ldrsb	r2, [r3, #1]
   1308c:	cmp	r2, #0
   13090:	streq	r0, [r6]
   13094:	beq	13024 <strspn@plt+0x1dec>
   13098:	add	r4, r3, #1
   1309c:	mov	ip, #0
   130a0:	mov	r1, sp
   130a4:	mov	r2, #10
   130a8:	mov	r0, r4
   130ac:	str	ip, [r5]
   130b0:	str	ip, [sp]
   130b4:	bl	10f80 <strtol@plt>
   130b8:	str	r0, [r6]
   130bc:	ldr	r3, [r5]
   130c0:	cmp	r3, #0
   130c4:	bne	130f0 <strspn@plt+0x1eb8>
   130c8:	ldr	r2, [sp]
   130cc:	cmp	r2, #0
   130d0:	beq	130f0 <strspn@plt+0x1eb8>
   130d4:	ldrsb	r3, [r2]
   130d8:	cmp	r3, #0
   130dc:	bne	130f0 <strspn@plt+0x1eb8>
   130e0:	cmp	r4, r2
   130e4:	movne	r0, #0
   130e8:	mvneq	r0, #0
   130ec:	b	13024 <strspn@plt+0x1dec>
   130f0:	mvn	r0, #0
   130f4:	b	13024 <strspn@plt+0x1dec>
   130f8:	bl	1101c <__stack_chk_fail@plt>
   130fc:	andeq	r2, r1, r0, ror r0
   13100:	andeq	r0, r0, ip, lsl #2
   13104:	rsbs	r2, r0, #1
   13108:	push	{r4, r5, r6, lr}
   1310c:	movcc	r2, #0
   13110:	rsbs	r3, r1, #1
   13114:	mov	r5, r0
   13118:	mov	r4, r1
   1311c:	movcc	r3, #0
   13120:	ands	ip, r2, r3
   13124:	bne	13190 <strspn@plt+0x1f58>
   13128:	orrs	r3, r2, r3
   1312c:	bne	13198 <strspn@plt+0x1f60>
   13130:	bl	10f74 <strcmp@plt>
   13134:	cmp	r0, #0
   13138:	beq	13190 <strspn@plt+0x1f58>
   1313c:	mov	r0, r5
   13140:	bl	110dc <strlen@plt>
   13144:	mov	r6, r0
   13148:	mov	r0, r4
   1314c:	bl	110dc <strlen@plt>
   13150:	cmp	r6, #0
   13154:	beq	13168 <strspn@plt+0x1f30>
   13158:	sub	r3, r6, #1
   1315c:	ldrsb	r2, [r5, r3]
   13160:	cmp	r2, #47	; 0x2f
   13164:	moveq	r6, r3
   13168:	cmp	r0, #0
   1316c:	beq	13180 <strspn@plt+0x1f48>
   13170:	sub	r3, r0, #1
   13174:	ldrsb	r2, [r4, r3]
   13178:	cmp	r2, #47	; 0x2f
   1317c:	moveq	r0, r3
   13180:	cmp	r6, r0
   13184:	beq	131a0 <strspn@plt+0x1f68>
   13188:	mov	r0, #0
   1318c:	pop	{r4, r5, r6, pc}
   13190:	mov	r0, #1
   13194:	pop	{r4, r5, r6, pc}
   13198:	mov	r0, ip
   1319c:	pop	{r4, r5, r6, pc}
   131a0:	mov	r0, r5
   131a4:	mov	r1, r4
   131a8:	mov	r2, r6
   131ac:	bl	11208 <strncmp@plt>
   131b0:	rsbs	r0, r0, #1
   131b4:	movcc	r0, #0
   131b8:	pop	{r4, r5, r6, pc}
   131bc:	ldr	r3, [pc, #248]	; 132bc <strspn@plt+0x2084>
   131c0:	cmp	r0, #0
   131c4:	cmpne	r1, #0
   131c8:	ldr	r2, [pc, #240]	; 132c0 <strspn@plt+0x2088>
   131cc:	add	r3, pc, r3
   131d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   131d4:	sub	sp, sp, #20
   131d8:	ldr	r9, [r3, r2]
   131dc:	mov	r6, r1
   131e0:	addne	r8, sp, #4
   131e4:	addne	r7, sp, #8
   131e8:	ldr	r3, [r9]
   131ec:	str	r3, [sp, #12]
   131f0:	bne	13238 <strspn@plt+0x2000>
   131f4:	b	132b0 <strspn@plt+0x2078>
   131f8:	cmp	r4, r3
   131fc:	bne	132b0 <strspn@plt+0x2078>
   13200:	mov	r0, r5
   13204:	mov	r1, r6
   13208:	mov	r2, r4
   1320c:	bl	11208 <strncmp@plt>
   13210:	cmp	r0, #0
   13214:	bne	132b0 <strspn@plt+0x2078>
   13218:	adds	r6, r6, r4
   1321c:	moveq	r3, #0
   13220:	movne	r3, #1
   13224:	adds	r0, r5, r4
   13228:	moveq	r3, #0
   1322c:	andne	r3, r3, #1
   13230:	cmp	r3, #0
   13234:	beq	132b0 <strspn@plt+0x2078>
   13238:	mov	r1, r8
   1323c:	bl	11cf8 <strspn@plt+0xac0>
   13240:	mov	r1, r7
   13244:	mov	r5, r0
   13248:	mov	r0, r6
   1324c:	bl	11cf8 <strspn@plt+0xac0>
   13250:	ldr	r4, [sp, #4]
   13254:	ldr	r3, [sp, #8]
   13258:	mov	r6, r0
   1325c:	adds	r0, r3, r4
   13260:	beq	13294 <strspn@plt+0x205c>
   13264:	cmp	r0, #1
   13268:	bne	131f8 <strspn@plt+0x1fc0>
   1326c:	cmp	r5, #0
   13270:	beq	13280 <strspn@plt+0x2048>
   13274:	ldrsb	r2, [r5]
   13278:	cmp	r2, #47	; 0x2f
   1327c:	beq	13298 <strspn@plt+0x2060>
   13280:	cmp	r6, #0
   13284:	beq	131f8 <strspn@plt+0x1fc0>
   13288:	ldrsb	r2, [r6]
   1328c:	cmp	r2, #47	; 0x2f
   13290:	bne	131f8 <strspn@plt+0x1fc0>
   13294:	mov	r0, #1
   13298:	ldr	r2, [sp, #12]
   1329c:	ldr	r3, [r9]
   132a0:	cmp	r2, r3
   132a4:	bne	132b8 <strspn@plt+0x2080>
   132a8:	add	sp, sp, #20
   132ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   132b0:	mov	r0, #0
   132b4:	b	13298 <strspn@plt+0x2060>
   132b8:	bl	1101c <__stack_chk_fail@plt>
   132bc:	andeq	r1, r1, ip, lsr #28
   132c0:	andeq	r0, r0, ip, lsl #2
   132c4:	rsbs	r3, r0, #1
   132c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132cc:	movcc	r3, #0
   132d0:	rsbs	r4, r1, #1
   132d4:	mov	r7, r1
   132d8:	mov	r6, r2
   132dc:	mov	sl, r0
   132e0:	movcc	r4, #0
   132e4:	tst	r3, r4
   132e8:	bne	1334c <strspn@plt+0x2114>
   132ec:	cmp	r3, #0
   132f0:	bne	13364 <strspn@plt+0x212c>
   132f4:	cmp	r4, #0
   132f8:	bne	13374 <strspn@plt+0x213c>
   132fc:	bl	110dc <strlen@plt>
   13300:	mvn	r3, r0
   13304:	cmp	r6, r3
   13308:	mov	r5, r0
   1330c:	bhi	1335c <strspn@plt+0x2124>
   13310:	add	r9, r0, r6
   13314:	add	r0, r9, #1
   13318:	bl	11070 <malloc@plt>
   1331c:	subs	r8, r0, #0
   13320:	beq	1337c <strspn@plt+0x2144>
   13324:	mov	r1, sl
   13328:	mov	r2, r5
   1332c:	bl	10fe0 <memcpy@plt>
   13330:	add	r0, r8, r5
   13334:	mov	r1, r7
   13338:	mov	r2, r6
   1333c:	bl	10fe0 <memcpy@plt>
   13340:	strb	r4, [r8, r9]
   13344:	mov	r0, r8
   13348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1334c:	mov	r0, #1
   13350:	mov	r1, r0
   13354:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13358:	b	10f5c <calloc@plt>
   1335c:	mov	r0, r4
   13360:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13364:	mov	r0, r1
   13368:	mov	r1, r2
   1336c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13370:	b	11034 <__strndup@plt>
   13374:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13378:	b	11130 <__strdup@plt>
   1337c:	mov	r0, r8
   13380:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13384:	push	{r3, r4, r5, lr}
   13388:	subs	r4, r1, #0
   1338c:	mov	r5, r0
   13390:	beq	133b0 <strspn@plt+0x2178>
   13394:	mov	r0, r4
   13398:	bl	110dc <strlen@plt>
   1339c:	mov	r1, r4
   133a0:	mov	r2, r0
   133a4:	mov	r0, r5
   133a8:	pop	{r3, r4, r5, lr}
   133ac:	b	132c4 <strspn@plt+0x208c>
   133b0:	mov	r2, r4
   133b4:	mov	r0, r5
   133b8:	mov	r1, r4
   133bc:	pop	{r3, r4, r5, lr}
   133c0:	b	132c4 <strspn@plt+0x208c>
   133c4:	push	{r1, r2, r3}
   133c8:	mov	r1, #1
   133cc:	push	{r4, r5, lr}
   133d0:	sub	sp, sp, #16
   133d4:	ldr	lr, [pc, #124]	; 13458 <strspn@plt+0x2220>
   133d8:	add	ip, sp, #32
   133dc:	ldr	r4, [pc, #120]	; 1345c <strspn@plt+0x2224>
   133e0:	mov	r5, r0
   133e4:	add	lr, pc, lr
   133e8:	mov	r3, ip
   133ec:	ldr	r2, [sp, #28]
   133f0:	add	r0, sp, #8
   133f4:	ldr	r4, [lr, r4]
   133f8:	str	ip, [sp, #4]
   133fc:	ldr	ip, [r4]
   13400:	str	ip, [sp, #12]
   13404:	bl	11124 <__vasprintf_chk@plt>
   13408:	subs	r2, r0, #0
   1340c:	blt	1344c <strspn@plt+0x2214>
   13410:	mov	r0, r5
   13414:	ldr	r1, [sp, #8]
   13418:	bl	132c4 <strspn@plt+0x208c>
   1341c:	mov	r5, r0
   13420:	ldr	r0, [sp, #8]
   13424:	bl	10fbc <free@plt>
   13428:	mov	r0, r5
   1342c:	ldr	r2, [sp, #12]
   13430:	ldr	r3, [r4]
   13434:	cmp	r2, r3
   13438:	bne	13454 <strspn@plt+0x221c>
   1343c:	add	sp, sp, #16
   13440:	pop	{r4, r5, lr}
   13444:	add	sp, sp, #12
   13448:	bx	lr
   1344c:	mov	r0, #0
   13450:	b	1342c <strspn@plt+0x21f4>
   13454:	bl	1101c <__stack_chk_fail@plt>
   13458:	andeq	r1, r1, r4, lsl ip
   1345c:	andeq	r0, r0, ip, lsl #2
   13460:	ldr	ip, [pc, #372]	; 135dc <strspn@plt+0x23a4>
   13464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13468:	mov	r6, r0
   1346c:	ldr	r0, [pc, #364]	; 135e0 <strspn@plt+0x23a8>
   13470:	add	ip, pc, ip
   13474:	ldr	r4, [r6]
   13478:	mov	r9, r3
   1347c:	sub	sp, sp, #12
   13480:	mov	r7, r1
   13484:	ldr	r5, [ip, r0]
   13488:	mov	r8, r2
   1348c:	ldrsb	ip, [r4]
   13490:	ldr	r3, [r5]
   13494:	cmp	ip, #0
   13498:	moveq	r0, ip
   1349c:	str	r3, [sp, #4]
   134a0:	beq	13550 <strspn@plt+0x2318>
   134a4:	mov	r0, r4
   134a8:	mov	r1, r2
   134ac:	bl	11238 <strspn@plt>
   134b0:	ldrb	sl, [r4, r0]
   134b4:	add	r4, r4, r0
   134b8:	cmp	sl, #0
   134bc:	beq	135cc <strspn@plt+0x2394>
   134c0:	cmp	r9, #0
   134c4:	beq	13568 <strspn@plt+0x2330>
   134c8:	sxtb	r9, sl
   134cc:	ldr	r0, [pc, #272]	; 135e4 <strspn@plt+0x23ac>
   134d0:	mov	r1, r9
   134d4:	add	r0, pc, r0
   134d8:	bl	110e8 <strchr@plt>
   134dc:	cmp	r0, #0
   134e0:	beq	1358c <strspn@plt+0x2354>
   134e4:	add	fp, r4, #1
   134e8:	mov	r1, sp
   134ec:	mov	r3, #0
   134f0:	strb	sl, [sp]
   134f4:	mov	r0, fp
   134f8:	strb	r3, [sp, #1]
   134fc:	bl	11d98 <strspn@plt+0xb60>
   13500:	add	r3, r4, r0
   13504:	str	r0, [r7]
   13508:	ldrb	r3, [r3, #1]
   1350c:	cmp	r3, #0
   13510:	beq	135cc <strspn@plt+0x2394>
   13514:	sxtb	r3, r3
   13518:	cmp	r9, r3
   1351c:	bne	135cc <strspn@plt+0x2394>
   13520:	add	r0, r0, #2
   13524:	add	r7, r4, r0
   13528:	ldrb	r1, [r4, r0]
   1352c:	cmp	r1, #0
   13530:	beq	13548 <strspn@plt+0x2310>
   13534:	mov	r0, r8
   13538:	sxtb	r1, r1
   1353c:	bl	110e8 <strchr@plt>
   13540:	cmp	r0, #0
   13544:	beq	135cc <strspn@plt+0x2394>
   13548:	mov	r0, fp
   1354c:	str	r7, [r6]
   13550:	ldr	r2, [sp, #4]
   13554:	ldr	r3, [r5]
   13558:	cmp	r2, r3
   1355c:	bne	135d8 <strspn@plt+0x23a0>
   13560:	add	sp, sp, #12
   13564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13568:	mov	r0, r4
   1356c:	mov	r1, r8
   13570:	bl	10f98 <strcspn@plt>
   13574:	mov	r3, r0
   13578:	mov	r0, r4
   1357c:	add	r4, r4, r3
   13580:	str	r3, [r7]
   13584:	str	r4, [r6]
   13588:	b	13550 <strspn@plt+0x2318>
   1358c:	mov	r1, r8
   13590:	mov	r0, r4
   13594:	bl	11d98 <strspn@plt+0xb60>
   13598:	str	r0, [r7]
   1359c:	add	r7, r4, r0
   135a0:	ldrb	r1, [r4, r0]
   135a4:	cmp	r1, #0
   135a8:	beq	135c0 <strspn@plt+0x2388>
   135ac:	mov	r0, r8
   135b0:	sxtb	r1, r1
   135b4:	bl	110e8 <strchr@plt>
   135b8:	cmp	r0, #0
   135bc:	beq	13584 <strspn@plt+0x234c>
   135c0:	str	r7, [r6]
   135c4:	mov	r0, r4
   135c8:	b	13550 <strspn@plt+0x2318>
   135cc:	str	r4, [r6]
   135d0:	mov	r0, #0
   135d4:	b	13550 <strspn@plt+0x2318>
   135d8:	bl	1101c <__stack_chk_fail@plt>
   135dc:	andeq	r1, r1, r8, lsl #23
   135e0:	andeq	r0, r0, ip, lsl #2
   135e4:	andeq	r1, r0, r4, asr r1
   135e8:	push	{r4, lr}
   135ec:	mov	r4, r0
   135f0:	b	135fc <strspn@plt+0x23c4>
   135f4:	cmp	r0, #10
   135f8:	beq	13614 <strspn@plt+0x23dc>
   135fc:	mov	r0, r4
   13600:	bl	11148 <fgetc@plt>
   13604:	cmn	r0, #1
   13608:	bne	135f4 <strspn@plt+0x23bc>
   1360c:	mov	r0, #1
   13610:	pop	{r4, pc}
   13614:	mov	r0, #0
   13618:	pop	{r4, pc}
   1361c:	cmp	r3, #0
   13620:	cmpeq	r2, #0
   13624:	bne	1363c <strspn@plt+0x2404>
   13628:	cmp	r1, #0
   1362c:	cmpeq	r0, #0
   13630:	mvnne	r1, #0
   13634:	mvnne	r0, #0
   13638:	b	13658 <strspn@plt+0x2420>
   1363c:	sub	sp, sp, #8
   13640:	push	{sp, lr}
   13644:	bl	136a4 <strspn@plt+0x246c>
   13648:	ldr	lr, [sp, #4]
   1364c:	add	sp, sp, #8
   13650:	pop	{r2, r3}
   13654:	bx	lr
   13658:	push	{r1, lr}
   1365c:	mov	r0, #8
   13660:	bl	10f68 <raise@plt>
   13664:	pop	{r1, pc}
   13668:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1366c:	mov	r8, r2
   13670:	mov	r6, r0
   13674:	mov	r7, r1
   13678:	mov	sl, r3
   1367c:	ldr	r9, [sp, #32]
   13680:	bl	136e0 <strspn@plt+0x24a8>
   13684:	umull	r4, r5, r8, r0
   13688:	mul	r8, r8, r1
   1368c:	mla	r2, r0, sl, r8
   13690:	add	r5, r2, r5
   13694:	subs	r4, r6, r4
   13698:	sbc	r5, r7, r5
   1369c:	strd	r4, [r9]
   136a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136a4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   136a8:	mov	r8, r2
   136ac:	mov	r6, r0
   136b0:	mov	r7, r1
   136b4:	mov	r5, r3
   136b8:	ldr	r9, [sp, #32]
   136bc:	bl	13b6c <strspn@plt+0x2934>
   136c0:	mul	r3, r0, r5
   136c4:	umull	r4, r5, r0, r8
   136c8:	mla	r8, r8, r1, r3
   136cc:	add	r5, r8, r5
   136d0:	subs	r4, r6, r4
   136d4:	sbc	r5, r7, r5
   136d8:	strd	r4, [r9]
   136dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   136e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e4:	rsbs	r4, r0, #0
   136e8:	rsc	r5, r1, #0
   136ec:	cmp	r1, #0
   136f0:	mvn	r6, #0
   136f4:	sub	sp, sp, #12
   136f8:	movge	r4, r0
   136fc:	movge	r5, r1
   13700:	movge	r6, #0
   13704:	cmp	r3, #0
   13708:	blt	13940 <strspn@plt+0x2708>
   1370c:	cmp	r3, #0
   13710:	mov	sl, r4
   13714:	mov	ip, r5
   13718:	mov	r0, r2
   1371c:	mov	r1, r3
   13720:	mov	r8, r2
   13724:	mov	r7, r4
   13728:	mov	r9, r5
   1372c:	bne	13824 <strspn@plt+0x25ec>
   13730:	cmp	r2, r5
   13734:	bls	13860 <strspn@plt+0x2628>
   13738:	clz	r3, r2
   1373c:	cmp	r3, #0
   13740:	rsbne	r2, r3, #32
   13744:	lslne	r8, r0, r3
   13748:	lsrne	r2, r4, r2
   1374c:	lslne	r7, r4, r3
   13750:	orrne	r9, r2, r5, lsl r3
   13754:	lsr	r4, r8, #16
   13758:	uxth	sl, r8
   1375c:	mov	r1, r4
   13760:	mov	r0, r9
   13764:	bl	13f9c <strspn@plt+0x2d64>
   13768:	mov	r1, r4
   1376c:	mov	fp, r0
   13770:	mov	r0, r9
   13774:	bl	14188 <strspn@plt+0x2f50>
   13778:	mul	r0, sl, fp
   1377c:	lsr	r2, r7, #16
   13780:	orr	r1, r2, r1, lsl #16
   13784:	cmp	r0, r1
   13788:	bls	137ac <strspn@plt+0x2574>
   1378c:	adds	r1, r1, r8
   13790:	sub	r3, fp, #1
   13794:	bcs	137a8 <strspn@plt+0x2570>
   13798:	cmp	r0, r1
   1379c:	subhi	fp, fp, #2
   137a0:	addhi	r1, r1, r8
   137a4:	bhi	137ac <strspn@plt+0x2574>
   137a8:	mov	fp, r3
   137ac:	rsb	r9, r0, r1
   137b0:	mov	r1, r4
   137b4:	uxth	r7, r7
   137b8:	mov	r0, r9
   137bc:	bl	13f9c <strspn@plt+0x2d64>
   137c0:	mov	r1, r4
   137c4:	mov	r5, r0
   137c8:	mov	r0, r9
   137cc:	bl	14188 <strspn@plt+0x2f50>
   137d0:	mul	sl, sl, r5
   137d4:	orr	r1, r7, r1, lsl #16
   137d8:	cmp	sl, r1
   137dc:	bls	137fc <strspn@plt+0x25c4>
   137e0:	adds	r8, r1, r8
   137e4:	sub	r3, r5, #1
   137e8:	bcs	137f8 <strspn@plt+0x25c0>
   137ec:	cmp	sl, r8
   137f0:	subhi	r5, r5, #2
   137f4:	bhi	137fc <strspn@plt+0x25c4>
   137f8:	mov	r5, r3
   137fc:	orr	r3, r5, fp, lsl #16
   13800:	mov	r4, #0
   13804:	cmp	r6, #0
   13808:	mov	r0, r3
   1380c:	mov	r1, r4
   13810:	beq	1381c <strspn@plt+0x25e4>
   13814:	rsbs	r0, r0, #0
   13818:	rsc	r1, r1, #0
   1381c:	add	sp, sp, #12
   13820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13824:	cmp	r3, r5
   13828:	movhi	r4, #0
   1382c:	movhi	r3, r4
   13830:	bhi	13804 <strspn@plt+0x25cc>
   13834:	clz	r5, r1
   13838:	cmp	r5, #0
   1383c:	bne	13a2c <strspn@plt+0x27f4>
   13840:	cmp	r1, ip
   13844:	cmpcs	r2, sl
   13848:	movhi	r4, #0
   1384c:	movls	r4, #1
   13850:	movls	r3, #1
   13854:	movls	r4, r5
   13858:	movhi	r3, r4
   1385c:	b	13804 <strspn@plt+0x25cc>
   13860:	cmp	r2, #0
   13864:	bne	13878 <strspn@plt+0x2640>
   13868:	mov	r1, r2
   1386c:	mov	r0, #1
   13870:	bl	13f9c <strspn@plt+0x2d64>
   13874:	mov	r8, r0
   13878:	clz	r3, r8
   1387c:	cmp	r3, #0
   13880:	bne	13950 <strspn@plt+0x2718>
   13884:	rsb	r9, r8, r9
   13888:	lsr	r5, r8, #16
   1388c:	uxth	sl, r8
   13890:	mov	r4, #1
   13894:	mov	r1, r5
   13898:	mov	r0, r9
   1389c:	bl	13f9c <strspn@plt+0x2d64>
   138a0:	mov	r1, r5
   138a4:	mov	fp, r0
   138a8:	mov	r0, r9
   138ac:	bl	14188 <strspn@plt+0x2f50>
   138b0:	mul	r0, sl, fp
   138b4:	lsr	r2, r7, #16
   138b8:	orr	r1, r2, r1, lsl #16
   138bc:	cmp	r0, r1
   138c0:	bls	138e0 <strspn@plt+0x26a8>
   138c4:	adds	r1, r1, r8
   138c8:	sub	r3, fp, #1
   138cc:	bcs	13b4c <strspn@plt+0x2914>
   138d0:	cmp	r0, r1
   138d4:	subhi	fp, fp, #2
   138d8:	addhi	r1, r1, r8
   138dc:	bls	13b4c <strspn@plt+0x2914>
   138e0:	rsb	r2, r0, r1
   138e4:	mov	r1, r5
   138e8:	str	r2, [sp]
   138ec:	uxth	r7, r7
   138f0:	mov	r0, r2
   138f4:	bl	13f9c <strspn@plt+0x2d64>
   138f8:	ldr	r2, [sp]
   138fc:	mov	r1, r5
   13900:	mov	r9, r0
   13904:	mov	r0, r2
   13908:	bl	14188 <strspn@plt+0x2f50>
   1390c:	mul	sl, sl, r9
   13910:	orr	r1, r7, r1, lsl #16
   13914:	cmp	sl, r1
   13918:	bls	13938 <strspn@plt+0x2700>
   1391c:	adds	r8, r1, r8
   13920:	sub	r3, r9, #1
   13924:	bcs	13934 <strspn@plt+0x26fc>
   13928:	cmp	sl, r8
   1392c:	subhi	r9, r9, #2
   13930:	bhi	13938 <strspn@plt+0x2700>
   13934:	mov	r9, r3
   13938:	orr	r3, r9, fp, lsl #16
   1393c:	b	13804 <strspn@plt+0x25cc>
   13940:	mvn	r6, r6
   13944:	rsbs	r2, r2, #0
   13948:	rsc	r3, r3, #0
   1394c:	b	1370c <strspn@plt+0x24d4>
   13950:	lsl	r8, r8, r3
   13954:	rsb	fp, r3, #32
   13958:	lsr	r4, r9, fp
   1395c:	lsr	fp, r7, fp
   13960:	lsr	r5, r8, #16
   13964:	orr	fp, fp, r9, lsl r3
   13968:	mov	r0, r4
   1396c:	lsl	r7, r7, r3
   13970:	mov	r1, r5
   13974:	uxth	sl, r8
   13978:	bl	13f9c <strspn@plt+0x2d64>
   1397c:	mov	r1, r5
   13980:	mov	r3, r0
   13984:	mov	r0, r4
   13988:	str	r3, [sp]
   1398c:	bl	14188 <strspn@plt+0x2f50>
   13990:	ldr	r3, [sp]
   13994:	lsr	r2, fp, #16
   13998:	mul	r0, sl, r3
   1399c:	orr	r1, r2, r1, lsl #16
   139a0:	cmp	r0, r1
   139a4:	bls	139c4 <strspn@plt+0x278c>
   139a8:	adds	r1, r1, r8
   139ac:	sub	r2, r3, #1
   139b0:	bcs	13b64 <strspn@plt+0x292c>
   139b4:	cmp	r0, r1
   139b8:	subhi	r3, r3, #2
   139bc:	addhi	r1, r1, r8
   139c0:	bls	13b64 <strspn@plt+0x292c>
   139c4:	rsb	r9, r0, r1
   139c8:	mov	r1, r5
   139cc:	str	r3, [sp]
   139d0:	uxth	fp, fp
   139d4:	mov	r0, r9
   139d8:	bl	13f9c <strspn@plt+0x2d64>
   139dc:	mov	r1, r5
   139e0:	mov	r4, r0
   139e4:	mov	r0, r9
   139e8:	bl	14188 <strspn@plt+0x2f50>
   139ec:	mul	r9, sl, r4
   139f0:	ldr	r3, [sp]
   139f4:	orr	r1, fp, r1, lsl #16
   139f8:	cmp	r9, r1
   139fc:	bls	13a20 <strspn@plt+0x27e8>
   13a00:	adds	r1, r1, r8
   13a04:	sub	r2, r4, #1
   13a08:	bcs	13a1c <strspn@plt+0x27e4>
   13a0c:	cmp	r9, r1
   13a10:	subhi	r4, r4, #2
   13a14:	addhi	r1, r1, r8
   13a18:	bhi	13a20 <strspn@plt+0x27e8>
   13a1c:	mov	r4, r2
   13a20:	rsb	r9, r9, r1
   13a24:	orr	r4, r4, r3, lsl #16
   13a28:	b	13894 <strspn@plt+0x265c>
   13a2c:	rsb	sl, r5, #32
   13a30:	lsl	r3, r2, r5
   13a34:	lsr	r0, r2, sl
   13a38:	lsr	r2, ip, sl
   13a3c:	orr	r4, r0, r1, lsl r5
   13a40:	lsr	sl, r7, sl
   13a44:	mov	r0, r2
   13a48:	orr	sl, sl, ip, lsl r5
   13a4c:	lsr	r9, r4, #16
   13a50:	str	r3, [sp, #4]
   13a54:	str	r2, [sp]
   13a58:	uxth	fp, r4
   13a5c:	mov	r1, r9
   13a60:	bl	13f9c <strspn@plt+0x2d64>
   13a64:	ldr	r2, [sp]
   13a68:	mov	r1, r9
   13a6c:	mov	r8, r0
   13a70:	mov	r0, r2
   13a74:	bl	14188 <strspn@plt+0x2f50>
   13a78:	mul	r0, fp, r8
   13a7c:	lsr	r2, sl, #16
   13a80:	orr	r1, r2, r1, lsl #16
   13a84:	cmp	r0, r1
   13a88:	bls	13aa8 <strspn@plt+0x2870>
   13a8c:	adds	r1, r1, r4
   13a90:	sub	r2, r8, #1
   13a94:	bcs	13b5c <strspn@plt+0x2924>
   13a98:	cmp	r0, r1
   13a9c:	subhi	r8, r8, #2
   13aa0:	addhi	r1, r1, r4
   13aa4:	bls	13b5c <strspn@plt+0x2924>
   13aa8:	rsb	ip, r0, r1
   13aac:	mov	r1, r9
   13ab0:	str	ip, [sp]
   13ab4:	mov	r0, ip
   13ab8:	bl	13f9c <strspn@plt+0x2d64>
   13abc:	ldr	ip, [sp]
   13ac0:	mov	r1, r9
   13ac4:	mov	r2, r0
   13ac8:	mov	r0, ip
   13acc:	str	r2, [sp]
   13ad0:	bl	14188 <strspn@plt+0x2f50>
   13ad4:	ldr	r2, [sp]
   13ad8:	uxth	ip, sl
   13adc:	mul	fp, fp, r2
   13ae0:	orr	ip, ip, r1, lsl #16
   13ae4:	cmp	fp, ip
   13ae8:	bls	13b08 <strspn@plt+0x28d0>
   13aec:	adds	ip, ip, r4
   13af0:	sub	r1, r2, #1
   13af4:	bcs	13b54 <strspn@plt+0x291c>
   13af8:	cmp	fp, ip
   13afc:	subhi	r2, r2, #2
   13b00:	addhi	ip, ip, r4
   13b04:	bls	13b54 <strspn@plt+0x291c>
   13b08:	ldr	r0, [sp, #4]
   13b0c:	orr	r1, r2, r8, lsl #16
   13b10:	rsb	fp, fp, ip
   13b14:	umull	r2, r3, r1, r0
   13b18:	cmp	fp, r3
   13b1c:	bcc	13b40 <strspn@plt+0x2908>
   13b20:	movne	r4, #0
   13b24:	moveq	r4, #1
   13b28:	cmp	r2, r7, lsl r5
   13b2c:	movls	r4, #0
   13b30:	andhi	r4, r4, #1
   13b34:	cmp	r4, #0
   13b38:	moveq	r3, r1
   13b3c:	beq	13804 <strspn@plt+0x25cc>
   13b40:	sub	r3, r1, #1
   13b44:	mov	r4, #0
   13b48:	b	13804 <strspn@plt+0x25cc>
   13b4c:	mov	fp, r3
   13b50:	b	138e0 <strspn@plt+0x26a8>
   13b54:	mov	r2, r1
   13b58:	b	13b08 <strspn@plt+0x28d0>
   13b5c:	mov	r8, r2
   13b60:	b	13aa8 <strspn@plt+0x2870>
   13b64:	mov	r3, r2
   13b68:	b	139c4 <strspn@plt+0x278c>
   13b6c:	cmp	r3, #0
   13b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b74:	mov	r6, r0
   13b78:	sub	sp, sp, #12
   13b7c:	mov	r5, r1
   13b80:	mov	r7, r0
   13b84:	mov	r4, r2
   13b88:	mov	r8, r1
   13b8c:	bne	13c6c <strspn@plt+0x2a34>
   13b90:	cmp	r2, r1
   13b94:	bls	13ca8 <strspn@plt+0x2a70>
   13b98:	clz	r3, r2
   13b9c:	cmp	r3, #0
   13ba0:	rsbne	r8, r3, #32
   13ba4:	lslne	r4, r2, r3
   13ba8:	lsrne	r8, r0, r8
   13bac:	lslne	r7, r0, r3
   13bb0:	orrne	r8, r8, r1, lsl r3
   13bb4:	lsr	r5, r4, #16
   13bb8:	uxth	sl, r4
   13bbc:	mov	r1, r5
   13bc0:	mov	r0, r8
   13bc4:	bl	13f9c <strspn@plt+0x2d64>
   13bc8:	mov	r1, r5
   13bcc:	mov	r9, r0
   13bd0:	mov	r0, r8
   13bd4:	bl	14188 <strspn@plt+0x2f50>
   13bd8:	mul	r0, sl, r9
   13bdc:	lsr	r3, r7, #16
   13be0:	orr	r1, r3, r1, lsl #16
   13be4:	cmp	r0, r1
   13be8:	bls	13c0c <strspn@plt+0x29d4>
   13bec:	adds	r1, r1, r4
   13bf0:	sub	r2, r9, #1
   13bf4:	bcs	13c08 <strspn@plt+0x29d0>
   13bf8:	cmp	r0, r1
   13bfc:	subhi	r9, r9, #2
   13c00:	addhi	r1, r1, r4
   13c04:	bhi	13c0c <strspn@plt+0x29d4>
   13c08:	mov	r9, r2
   13c0c:	rsb	r8, r0, r1
   13c10:	mov	r1, r5
   13c14:	uxth	r7, r7
   13c18:	mov	r0, r8
   13c1c:	bl	13f9c <strspn@plt+0x2d64>
   13c20:	mov	r1, r5
   13c24:	mov	r6, r0
   13c28:	mov	r0, r8
   13c2c:	bl	14188 <strspn@plt+0x2f50>
   13c30:	mul	sl, sl, r6
   13c34:	orr	r1, r7, r1, lsl #16
   13c38:	cmp	sl, r1
   13c3c:	bls	13c58 <strspn@plt+0x2a20>
   13c40:	adds	r4, r1, r4
   13c44:	sub	r3, r6, #1
   13c48:	bcs	13f54 <strspn@plt+0x2d1c>
   13c4c:	cmp	sl, r4
   13c50:	subhi	r6, r6, #2
   13c54:	bls	13f54 <strspn@plt+0x2d1c>
   13c58:	orr	r0, r6, r9, lsl #16
   13c5c:	mov	r6, #0
   13c60:	mov	r1, r6
   13c64:	add	sp, sp, #12
   13c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c6c:	cmp	r3, r1
   13c70:	movhi	r6, #0
   13c74:	movhi	r0, r6
   13c78:	bhi	13c60 <strspn@plt+0x2a28>
   13c7c:	clz	r7, r3
   13c80:	cmp	r7, #0
   13c84:	bne	13d84 <strspn@plt+0x2b4c>
   13c88:	cmp	r3, r1
   13c8c:	cmpcs	r2, r6
   13c90:	movhi	r6, #0
   13c94:	movls	r6, #1
   13c98:	movls	r0, #1
   13c9c:	movls	r6, r7
   13ca0:	movhi	r0, r6
   13ca4:	b	13c60 <strspn@plt+0x2a28>
   13ca8:	cmp	r2, #0
   13cac:	bne	13cc0 <strspn@plt+0x2a88>
   13cb0:	mov	r1, r2
   13cb4:	mov	r0, #1
   13cb8:	bl	13f9c <strspn@plt+0x2d64>
   13cbc:	mov	r4, r0
   13cc0:	clz	r3, r4
   13cc4:	cmp	r3, #0
   13cc8:	bne	13e80 <strspn@plt+0x2c48>
   13ccc:	rsb	r5, r4, r5
   13cd0:	lsr	r8, r4, #16
   13cd4:	uxth	sl, r4
   13cd8:	mov	r6, #1
   13cdc:	mov	r1, r8
   13ce0:	mov	r0, r5
   13ce4:	bl	13f9c <strspn@plt+0x2d64>
   13ce8:	mov	r1, r8
   13cec:	mov	r9, r0
   13cf0:	mov	r0, r5
   13cf4:	bl	14188 <strspn@plt+0x2f50>
   13cf8:	mul	r0, sl, r9
   13cfc:	lsr	r3, r7, #16
   13d00:	orr	r1, r3, r1, lsl #16
   13d04:	cmp	r0, r1
   13d08:	bls	13d28 <strspn@plt+0x2af0>
   13d0c:	adds	r1, r1, r4
   13d10:	sub	r2, r9, #1
   13d14:	bcs	13f5c <strspn@plt+0x2d24>
   13d18:	cmp	r0, r1
   13d1c:	subhi	r9, r9, #2
   13d20:	addhi	r1, r1, r4
   13d24:	bls	13f5c <strspn@plt+0x2d24>
   13d28:	rsb	fp, r0, r1
   13d2c:	mov	r1, r8
   13d30:	uxth	r7, r7
   13d34:	mov	r0, fp
   13d38:	bl	13f9c <strspn@plt+0x2d64>
   13d3c:	mov	r1, r8
   13d40:	mov	r5, r0
   13d44:	mov	r0, fp
   13d48:	bl	14188 <strspn@plt+0x2f50>
   13d4c:	mul	sl, sl, r5
   13d50:	orr	r1, r7, r1, lsl #16
   13d54:	cmp	sl, r1
   13d58:	bls	13d74 <strspn@plt+0x2b3c>
   13d5c:	adds	r4, r1, r4
   13d60:	sub	r3, r5, #1
   13d64:	bcs	13f64 <strspn@plt+0x2d2c>
   13d68:	cmp	sl, r4
   13d6c:	subhi	r5, r5, #2
   13d70:	bls	13f64 <strspn@plt+0x2d2c>
   13d74:	orr	r0, r5, r9, lsl #16
   13d78:	mov	r1, r6
   13d7c:	add	sp, sp, #12
   13d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d84:	rsb	r1, r7, #32
   13d88:	lsl	r0, r2, r7
   13d8c:	lsr	r2, r2, r1
   13d90:	lsr	fp, r5, r1
   13d94:	orr	r8, r2, r3, lsl r7
   13d98:	lsr	r1, r6, r1
   13d9c:	str	r0, [sp, #4]
   13da0:	orr	r5, r1, r5, lsl r7
   13da4:	lsr	r9, r8, #16
   13da8:	mov	r0, fp
   13dac:	uxth	sl, r8
   13db0:	mov	r1, r9
   13db4:	bl	13f9c <strspn@plt+0x2d64>
   13db8:	mov	r1, r9
   13dbc:	mov	r4, r0
   13dc0:	mov	r0, fp
   13dc4:	bl	14188 <strspn@plt+0x2f50>
   13dc8:	mul	r0, sl, r4
   13dcc:	lsr	ip, r5, #16
   13dd0:	orr	r1, ip, r1, lsl #16
   13dd4:	cmp	r0, r1
   13dd8:	bls	13dec <strspn@plt+0x2bb4>
   13ddc:	adds	r1, r1, r8
   13de0:	sub	r2, r4, #1
   13de4:	bcc	13f80 <strspn@plt+0x2d48>
   13de8:	mov	r4, r2
   13dec:	rsb	ip, r0, r1
   13df0:	mov	r1, r9
   13df4:	str	ip, [sp]
   13df8:	uxth	r5, r5
   13dfc:	mov	r0, ip
   13e00:	bl	13f9c <strspn@plt+0x2d64>
   13e04:	ldr	ip, [sp]
   13e08:	mov	r1, r9
   13e0c:	mov	fp, r0
   13e10:	mov	r0, ip
   13e14:	bl	14188 <strspn@plt+0x2f50>
   13e18:	mul	sl, sl, fp
   13e1c:	orr	r1, r5, r1, lsl #16
   13e20:	cmp	sl, r1
   13e24:	bls	13e38 <strspn@plt+0x2c00>
   13e28:	adds	r1, r1, r8
   13e2c:	sub	r2, fp, #1
   13e30:	bcc	13f6c <strspn@plt+0x2d34>
   13e34:	mov	fp, r2
   13e38:	ldr	r3, [sp, #4]
   13e3c:	orr	r0, fp, r4, lsl #16
   13e40:	rsb	sl, sl, r1
   13e44:	umull	r4, r5, r0, r3
   13e48:	cmp	sl, r5
   13e4c:	bcc	13e6c <strspn@plt+0x2c34>
   13e50:	movne	r3, #0
   13e54:	moveq	r3, #1
   13e58:	cmp	r4, r6, lsl r7
   13e5c:	movls	r6, #0
   13e60:	andhi	r6, r3, #1
   13e64:	cmp	r6, #0
   13e68:	beq	13c60 <strspn@plt+0x2a28>
   13e6c:	mov	r6, #0
   13e70:	sub	r0, r0, #1
   13e74:	mov	r1, r6
   13e78:	add	sp, sp, #12
   13e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e80:	lsl	r4, r4, r3
   13e84:	rsb	r9, r3, #32
   13e88:	lsr	r2, r5, r9
   13e8c:	lsr	r9, r6, r9
   13e90:	lsr	r8, r4, #16
   13e94:	orr	r9, r9, r5, lsl r3
   13e98:	mov	r0, r2
   13e9c:	lsl	r7, r6, r3
   13ea0:	mov	r1, r8
   13ea4:	str	r2, [sp]
   13ea8:	bl	13f9c <strspn@plt+0x2d64>
   13eac:	ldr	r2, [sp]
   13eb0:	mov	r1, r8
   13eb4:	uxth	sl, r4
   13eb8:	mov	fp, r0
   13ebc:	mov	r0, r2
   13ec0:	bl	14188 <strspn@plt+0x2f50>
   13ec4:	mul	r0, sl, fp
   13ec8:	lsr	r3, r9, #16
   13ecc:	orr	r1, r3, r1, lsl #16
   13ed0:	cmp	r0, r1
   13ed4:	bls	13ef4 <strspn@plt+0x2cbc>
   13ed8:	adds	r1, r1, r4
   13edc:	sub	r3, fp, #1
   13ee0:	bcs	13f94 <strspn@plt+0x2d5c>
   13ee4:	cmp	r0, r1
   13ee8:	subhi	fp, fp, #2
   13eec:	addhi	r1, r1, r4
   13ef0:	bls	13f94 <strspn@plt+0x2d5c>
   13ef4:	rsb	r5, r0, r1
   13ef8:	mov	r1, r8
   13efc:	uxth	r9, r9
   13f00:	mov	r0, r5
   13f04:	bl	13f9c <strspn@plt+0x2d64>
   13f08:	mov	r1, r8
   13f0c:	mov	r6, r0
   13f10:	mov	r0, r5
   13f14:	bl	14188 <strspn@plt+0x2f50>
   13f18:	mul	r5, sl, r6
   13f1c:	orr	r1, r9, r1, lsl #16
   13f20:	cmp	r5, r1
   13f24:	bls	13f48 <strspn@plt+0x2d10>
   13f28:	adds	r1, r1, r4
   13f2c:	sub	r3, r6, #1
   13f30:	bcs	13f44 <strspn@plt+0x2d0c>
   13f34:	cmp	r5, r1
   13f38:	subhi	r6, r6, #2
   13f3c:	addhi	r1, r1, r4
   13f40:	bhi	13f48 <strspn@plt+0x2d10>
   13f44:	mov	r6, r3
   13f48:	rsb	r5, r5, r1
   13f4c:	orr	r6, r6, fp, lsl #16
   13f50:	b	13cdc <strspn@plt+0x2aa4>
   13f54:	mov	r6, r3
   13f58:	b	13c58 <strspn@plt+0x2a20>
   13f5c:	mov	r9, r2
   13f60:	b	13d28 <strspn@plt+0x2af0>
   13f64:	mov	r5, r3
   13f68:	b	13d74 <strspn@plt+0x2b3c>
   13f6c:	cmp	sl, r1
   13f70:	subhi	fp, fp, #2
   13f74:	addhi	r1, r1, r8
   13f78:	bhi	13e38 <strspn@plt+0x2c00>
   13f7c:	b	13e34 <strspn@plt+0x2bfc>
   13f80:	cmp	r0, r1
   13f84:	subhi	r4, r4, #2
   13f88:	addhi	r1, r1, r8
   13f8c:	bhi	13dec <strspn@plt+0x2bb4>
   13f90:	b	13de8 <strspn@plt+0x2bb0>
   13f94:	mov	fp, r3
   13f98:	b	13ef4 <strspn@plt+0x2cbc>
   13f9c:	subs	r2, r1, #1
   13fa0:	bxeq	lr
   13fa4:	bcc	1417c <strspn@plt+0x2f44>
   13fa8:	cmp	r0, r1
   13fac:	bls	14160 <strspn@plt+0x2f28>
   13fb0:	tst	r1, r2
   13fb4:	beq	1416c <strspn@plt+0x2f34>
   13fb8:	clz	r3, r0
   13fbc:	clz	r2, r1
   13fc0:	sub	r3, r2, r3
   13fc4:	rsbs	r3, r3, #31
   13fc8:	addne	r3, r3, r3, lsl #1
   13fcc:	mov	r2, #0
   13fd0:	addne	pc, pc, r3, lsl #2
   13fd4:	nop	{0}
   13fd8:	cmp	r0, r1, lsl #31
   13fdc:	adc	r2, r2, r2
   13fe0:	subcs	r0, r0, r1, lsl #31
   13fe4:	cmp	r0, r1, lsl #30
   13fe8:	adc	r2, r2, r2
   13fec:	subcs	r0, r0, r1, lsl #30
   13ff0:	cmp	r0, r1, lsl #29
   13ff4:	adc	r2, r2, r2
   13ff8:	subcs	r0, r0, r1, lsl #29
   13ffc:	cmp	r0, r1, lsl #28
   14000:	adc	r2, r2, r2
   14004:	subcs	r0, r0, r1, lsl #28
   14008:	cmp	r0, r1, lsl #27
   1400c:	adc	r2, r2, r2
   14010:	subcs	r0, r0, r1, lsl #27
   14014:	cmp	r0, r1, lsl #26
   14018:	adc	r2, r2, r2
   1401c:	subcs	r0, r0, r1, lsl #26
   14020:	cmp	r0, r1, lsl #25
   14024:	adc	r2, r2, r2
   14028:	subcs	r0, r0, r1, lsl #25
   1402c:	cmp	r0, r1, lsl #24
   14030:	adc	r2, r2, r2
   14034:	subcs	r0, r0, r1, lsl #24
   14038:	cmp	r0, r1, lsl #23
   1403c:	adc	r2, r2, r2
   14040:	subcs	r0, r0, r1, lsl #23
   14044:	cmp	r0, r1, lsl #22
   14048:	adc	r2, r2, r2
   1404c:	subcs	r0, r0, r1, lsl #22
   14050:	cmp	r0, r1, lsl #21
   14054:	adc	r2, r2, r2
   14058:	subcs	r0, r0, r1, lsl #21
   1405c:	cmp	r0, r1, lsl #20
   14060:	adc	r2, r2, r2
   14064:	subcs	r0, r0, r1, lsl #20
   14068:	cmp	r0, r1, lsl #19
   1406c:	adc	r2, r2, r2
   14070:	subcs	r0, r0, r1, lsl #19
   14074:	cmp	r0, r1, lsl #18
   14078:	adc	r2, r2, r2
   1407c:	subcs	r0, r0, r1, lsl #18
   14080:	cmp	r0, r1, lsl #17
   14084:	adc	r2, r2, r2
   14088:	subcs	r0, r0, r1, lsl #17
   1408c:	cmp	r0, r1, lsl #16
   14090:	adc	r2, r2, r2
   14094:	subcs	r0, r0, r1, lsl #16
   14098:	cmp	r0, r1, lsl #15
   1409c:	adc	r2, r2, r2
   140a0:	subcs	r0, r0, r1, lsl #15
   140a4:	cmp	r0, r1, lsl #14
   140a8:	adc	r2, r2, r2
   140ac:	subcs	r0, r0, r1, lsl #14
   140b0:	cmp	r0, r1, lsl #13
   140b4:	adc	r2, r2, r2
   140b8:	subcs	r0, r0, r1, lsl #13
   140bc:	cmp	r0, r1, lsl #12
   140c0:	adc	r2, r2, r2
   140c4:	subcs	r0, r0, r1, lsl #12
   140c8:	cmp	r0, r1, lsl #11
   140cc:	adc	r2, r2, r2
   140d0:	subcs	r0, r0, r1, lsl #11
   140d4:	cmp	r0, r1, lsl #10
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #10
   140e0:	cmp	r0, r1, lsl #9
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #9
   140ec:	cmp	r0, r1, lsl #8
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #8
   140f8:	cmp	r0, r1, lsl #7
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #7
   14104:	cmp	r0, r1, lsl #6
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #6
   14110:	cmp	r0, r1, lsl #5
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #5
   1411c:	cmp	r0, r1, lsl #4
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #4
   14128:	cmp	r0, r1, lsl #3
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1, lsl #3
   14134:	cmp	r0, r1, lsl #2
   14138:	adc	r2, r2, r2
   1413c:	subcs	r0, r0, r1, lsl #2
   14140:	cmp	r0, r1, lsl #1
   14144:	adc	r2, r2, r2
   14148:	subcs	r0, r0, r1, lsl #1
   1414c:	cmp	r0, r1
   14150:	adc	r2, r2, r2
   14154:	subcs	r0, r0, r1
   14158:	mov	r0, r2
   1415c:	bx	lr
   14160:	moveq	r0, #1
   14164:	movne	r0, #0
   14168:	bx	lr
   1416c:	clz	r2, r1
   14170:	rsb	r2, r2, #31
   14174:	lsr	r0, r0, r2
   14178:	bx	lr
   1417c:	cmp	r0, #0
   14180:	mvnne	r0, #0
   14184:	b	13658 <strspn@plt+0x2420>
   14188:	cmp	r1, #0
   1418c:	beq	1417c <strspn@plt+0x2f44>
   14190:	push	{r0, r1, lr}
   14194:	bl	13f9c <strspn@plt+0x2d64>
   14198:	pop	{r1, r2, lr}
   1419c:	mul	r3, r2, r0
   141a0:	sub	r1, r1, r3
   141a4:	bx	lr
   141a8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   141ac:	mov	r7, r0
   141b0:	ldr	r6, [pc, #76]	; 14204 <strspn@plt+0x2fcc>
   141b4:	mov	r8, r1
   141b8:	ldr	r5, [pc, #72]	; 14208 <strspn@plt+0x2fd0>
   141bc:	mov	r9, r2
   141c0:	add	r6, pc, r6
   141c4:	bl	10f3c <calloc@plt-0x20>
   141c8:	add	r5, pc, r5
   141cc:	rsb	r6, r5, r6
   141d0:	asrs	r6, r6, #2
   141d4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   141d8:	sub	r5, r5, #4
   141dc:	mov	r4, #0
   141e0:	add	r4, r4, #1
   141e4:	ldr	r3, [r5, #4]!
   141e8:	mov	r0, r7
   141ec:	mov	r1, r8
   141f0:	mov	r2, r9
   141f4:	blx	r3
   141f8:	cmp	r4, r6
   141fc:	bne	141e0 <strspn@plt+0x2fa8>
   14200:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14204:	andeq	r0, r1, r8, lsr sp
   14208:	andeq	r0, r1, ip, lsr #26
   1420c:	bx	lr
   14210:	ldr	r3, [pc, #28]	; 14234 <strspn@plt+0x2ffc>
   14214:	mov	r1, #0
   14218:	ldr	r2, [pc, #24]	; 14238 <strspn@plt+0x3000>
   1421c:	add	r3, pc, r3
   14220:	ldr	r3, [r3, r2]
   14224:	cmp	r3, #0
   14228:	ldrne	r2, [r3]
   1422c:	moveq	r2, r3
   14230:	b	11118 <__cxa_atexit@plt>
   14234:	ldrdeq	r0, [r1], -ip
   14238:	andeq	r0, r0, r4, lsl r1

Disassembly of section .fini:

0001423c <.fini>:
   1423c:	push	{r3, lr}
   14240:	pop	{r3, pc}
