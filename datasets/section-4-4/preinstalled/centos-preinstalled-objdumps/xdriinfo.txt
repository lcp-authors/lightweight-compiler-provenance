
centos-preinstalled/xdriinfo:     file format elf32-littlearm


Disassembly of section .init:

00010774 <_init@@Base>:
   10774:	push	{r3, lr}
   10778:	bl	10cc4 <strcmp@plt+0x494>
   1077c:	pop	{r3, pc}

Disassembly of section .plt:

00010780 <abort@plt-0x14>:
   10780:	push	{lr}		; (str lr, [sp, #-4]!)
   10784:	ldr	lr, [pc, #4]	; 10790 <_init@@Base+0x1c>
   10788:	add	lr, pc, lr
   1078c:	ldr	pc, [lr, #8]!
   10790:	andeq	r1, r1, r0, ror r8

00010794 <abort@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2160]!	; 0x870

000107a0 <__libc_start_main@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2152]!	; 0x868

000107ac <__gmon_start__@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2144]!	; 0x860

000107b8 <__isoc99_sscanf@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2136]!	; 0x858

000107c4 <glXGetProcAddressARB@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2128]!	; 0x850

000107d0 <__printf_chk@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2120]!	; 0x848

000107dc <putchar@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2112]!	; 0x840

000107e8 <XOpenDisplay@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2104]!	; 0x838

000107f4 <isatty@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2096]!	; 0x830

00010800 <fwrite@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2088]!	; 0x828

0001080c <glXGetClientString@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2080]!	; 0x820

00010818 <__stack_chk_fail@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2072]!	; 0x818

00010824 <__fprintf_chk@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2064]!	; 0x810

00010830 <strcmp@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #69632	; 0x11000
   10838:	ldr	pc, [ip, #2056]!	; 0x808

Disassembly of section .text:

0001083c <.text>:
   1083c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10840:	movw	fp, #8272	; 0x2050
   10844:	movt	fp, #2
   10848:	sub	sp, sp, #20
   1084c:	mov	r7, r0
   10850:	movw	r0, #4000	; 0xfa0
   10854:	ldr	r3, [fp]
   10858:	movt	r0, #1
   1085c:	mov	r9, #0
   10860:	mov	r6, r1
   10864:	str	r9, [sp, #4]
   10868:	movw	sl, #8284	; 0x205c
   1086c:	str	r3, [sp, #12]
   10870:	movt	sl, #2
   10874:	str	r9, [sp, #8]
   10878:	bl	107c4 <glXGetProcAddressARB@plt>
   1087c:	str	r0, [sl]
   10880:	movw	r0, #4020	; 0xfb4
   10884:	movt	r0, #1
   10888:	bl	107c4 <glXGetProcAddressARB@plt>
   1088c:	ldr	r3, [sl]
   10890:	cmp	r3, r9
   10894:	str	r0, [sl, #4]
   10898:	beq	10b60 <strcmp@plt+0x330>
   1089c:	cmp	r0, r9
   108a0:	beq	10b60 <strcmp@plt+0x330>
   108a4:	cmp	r7, #1
   108a8:	mvnle	r6, #1
   108ac:	ble	109b8 <strcmp@plt+0x188>
   108b0:	mov	r4, #1
   108b4:	b	1092c <strcmp@plt+0xfc>
   108b8:	movw	r1, #4072	; 0xfe8
   108bc:	mov	r0, r5
   108c0:	movt	r1, #1
   108c4:	bl	10830 <strcmp@plt>
   108c8:	cmp	r0, #0
   108cc:	beq	1099c <strcmp@plt+0x16c>
   108d0:	movw	r1, #4084	; 0xff4
   108d4:	mov	r0, r5
   108d8:	movt	r1, #1
   108dc:	bl	10830 <strcmp@plt>
   108e0:	cmp	r0, #0
   108e4:	beq	10a58 <strcmp@plt+0x228>
   108e8:	mov	r0, r5
   108ec:	movw	r1, #4092	; 0xffc
   108f0:	movt	r1, #1
   108f4:	bl	10830 <strcmp@plt>
   108f8:	cmp	r0, #0
   108fc:	bne	1095c <strcmp@plt+0x12c>
   10900:	add	r2, sp, #4
   10904:	mov	r9, #3
   10908:	add	r4, r4, #1
   1090c:	cmp	r4, r7
   10910:	beq	1095c <strcmp@plt+0x12c>
   10914:	add	r8, r6, r8
   10918:	add	r4, r4, #1
   1091c:	cmp	r7, r4
   10920:	ldr	r3, [r8, #4]
   10924:	str	r3, [r2]
   10928:	ble	109ac <strcmp@plt+0x17c>
   1092c:	ldr	r5, [r6, r4, lsl #2]
   10930:	movw	r1, #4060	; 0xfdc
   10934:	movt	r1, #1
   10938:	lsl	r8, r4, #2
   1093c:	mov	r0, r5
   10940:	bl	10830 <strcmp@plt>
   10944:	cmp	r0, #0
   10948:	bne	108b8 <strcmp@plt+0x88>
   1094c:	add	r4, r4, #1
   10950:	add	r2, sp, #8
   10954:	cmp	r4, r7
   10958:	bne	10914 <strcmp@plt+0xe4>
   1095c:	movw	r3, #8276	; 0x2054
   10960:	movt	r3, #2
   10964:	movw	r0, #3668	; 0xe54
   10968:	mov	r1, #1
   1096c:	ldr	r3, [r3]
   10970:	movt	r0, #1
   10974:	movw	r2, #330	; 0x14a
   10978:	mov	r4, r1
   1097c:	bl	10800 <fwrite@plt>
   10980:	ldr	r2, [sp, #12]
   10984:	mov	r0, r4
   10988:	ldr	r3, [fp]
   1098c:	cmp	r2, r3
   10990:	bne	10c7c <strcmp@plt+0x44c>
   10994:	add	sp, sp, #20
   10998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1099c:	add	r4, r4, #1
   109a0:	mov	r9, #1
   109a4:	cmp	r7, r4
   109a8:	bgt	1092c <strcmp@plt+0xfc>
   109ac:	sub	r6, r9, #2
   109b0:	cmp	r6, #1
   109b4:	bls	10ac8 <strcmp@plt+0x298>
   109b8:	ldr	r0, [sp, #8]
   109bc:	bl	107e8 <XOpenDisplay@plt>
   109c0:	subs	r5, r0, #0
   109c4:	beq	10c2c <strcmp@plt+0x3fc>
   109c8:	cmp	r6, #1
   109cc:	ldr	r6, [r5, #136]	; 0x88
   109d0:	bls	10b30 <strcmp@plt+0x300>
   109d4:	mov	r0, r5
   109d8:	mov	r1, #3
   109dc:	bl	1080c <glXGetClientString@plt>
   109e0:	cmp	r9, #2
   109e4:	beq	10b88 <strcmp@plt+0x358>
   109e8:	cmp	r9, #3
   109ec:	beq	10a64 <strcmp@plt+0x234>
   109f0:	cmp	r9, #1
   109f4:	beq	10bc8 <strcmp@plt+0x398>
   109f8:	cmp	r6, #0
   109fc:	movgt	r4, #0
   10a00:	bgt	10a28 <strcmp@plt+0x1f8>
   10a04:	b	10ac0 <strcmp@plt+0x290>
   10a08:	movw	r1, #4360	; 0x1108
   10a0c:	mov	r0, #1
   10a10:	movt	r1, #1
   10a14:	mov	r2, r4
   10a18:	bl	107d0 <__printf_chk@plt>
   10a1c:	add	r4, r4, #1
   10a20:	cmp	r4, r6
   10a24:	beq	10ac0 <strcmp@plt+0x290>
   10a28:	ldr	r3, [sl]
   10a2c:	mov	r0, r5
   10a30:	mov	r1, r4
   10a34:	blx	r3
   10a38:	subs	r3, r0, #0
   10a3c:	bne	10a08 <strcmp@plt+0x1d8>
   10a40:	movw	r1, #4376	; 0x1118
   10a44:	mov	r2, r4
   10a48:	movt	r1, #1
   10a4c:	mov	r0, #1
   10a50:	bl	107d0 <__printf_chk@plt>
   10a54:	b	10a1c <strcmp@plt+0x1ec>
   10a58:	add	r2, sp, #4
   10a5c:	mov	r9, #2
   10a60:	b	10908 <strcmp@plt+0xd8>
   10a64:	ldr	r1, [sp]
   10a68:	cmn	r1, #1
   10a6c:	ldreq	r4, [sp, #4]
   10a70:	beq	10a84 <strcmp@plt+0x254>
   10a74:	mov	r0, r5
   10a78:	ldr	r3, [sl]
   10a7c:	blx	r3
   10a80:	mov	r4, r0
   10a84:	cmp	r4, #0
   10a88:	beq	10ba0 <strcmp@plt+0x370>
   10a8c:	ldr	r3, [sl, #4]
   10a90:	mov	r0, r4
   10a94:	blx	r3
   10a98:	subs	r2, r0, #0
   10a9c:	beq	10c54 <strcmp@plt+0x424>
   10aa0:	movw	r1, #4288	; 0x10c0
   10aa4:	mov	r0, #1
   10aa8:	movt	r1, #1
   10aac:	bl	107d0 <__printf_chk@plt>
   10ab0:	mov	r0, #1
   10ab4:	bl	107f4 <isatty@plt>
   10ab8:	cmp	r0, #0
   10abc:	bne	10bec <strcmp@plt+0x3bc>
   10ac0:	mov	r4, #0
   10ac4:	b	10980 <strcmp@plt+0x150>
   10ac8:	ldr	r5, [sp, #4]
   10acc:	movw	r1, #4100	; 0x1004
   10ad0:	mov	r2, sp
   10ad4:	movt	r1, #1
   10ad8:	mov	r0, r5
   10adc:	bl	107b8 <__isoc99_sscanf@plt>
   10ae0:	cmp	r0, #1
   10ae4:	mov	r4, r0
   10ae8:	beq	10bfc <strcmp@plt+0x3cc>
   10aec:	mvn	r3, #0
   10af0:	str	r3, [sp]
   10af4:	cmp	r9, #2
   10af8:	bne	10c80 <strcmp@plt+0x450>
   10afc:	ldr	r2, [sp]
   10b00:	cmn	r2, #1
   10b04:	bne	109b8 <strcmp@plt+0x188>
   10b08:	movw	r1, #8276	; 0x2054
   10b0c:	movt	r1, #2
   10b10:	mov	r3, r5
   10b14:	movw	r2, #4136	; 0x1028
   10b18:	ldr	r0, [r1]
   10b1c:	movt	r2, #1
   10b20:	mov	r1, #1
   10b24:	mov	r4, r1
   10b28:	bl	10824 <__fprintf_chk@plt>
   10b2c:	b	10980 <strcmp@plt+0x150>
   10b30:	ldr	r3, [sp]
   10b34:	cmp	r6, r3
   10b38:	bgt	109d4 <strcmp@plt+0x1a4>
   10b3c:	movw	r1, #8276	; 0x2054
   10b40:	movt	r1, #2
   10b44:	movw	r2, #4200	; 0x1068
   10b48:	movt	r2, #1
   10b4c:	ldr	r0, [r1]
   10b50:	mov	r1, #1
   10b54:	mov	r4, r1
   10b58:	bl	10824 <__fprintf_chk@plt>
   10b5c:	b	10980 <strcmp@plt+0x150>
   10b60:	movw	r3, #8276	; 0x2054
   10b64:	movt	r3, #2
   10b68:	mov	r1, #1
   10b6c:	movw	r0, #4040	; 0xfc8
   10b70:	ldr	r3, [r3]
   10b74:	mov	r2, #18
   10b78:	movt	r0, #1
   10b7c:	mov	r4, r1
   10b80:	bl	10800 <fwrite@plt>
   10b84:	b	10980 <strcmp@plt+0x150>
   10b88:	ldr	r3, [sl]
   10b8c:	mov	r0, r5
   10b90:	ldr	r1, [sp]
   10b94:	blx	r3
   10b98:	subs	r2, r0, #0
   10b9c:	bne	10aa0 <strcmp@plt+0x270>
   10ba0:	movw	r3, #8276	; 0x2054
   10ba4:	movt	r3, #2
   10ba8:	mov	r1, #1
   10bac:	movw	r2, #4240	; 0x1090
   10bb0:	ldr	r0, [r3]
   10bb4:	movt	r2, #1
   10bb8:	ldr	r3, [sp]
   10bbc:	mov	r4, r1
   10bc0:	bl	10824 <__fprintf_chk@plt>
   10bc4:	b	10980 <strcmp@plt+0x150>
   10bc8:	mov	r2, r6
   10bcc:	movw	r1, #4236	; 0x108c
   10bd0:	mov	r0, r9
   10bd4:	movt	r1, #1
   10bd8:	bl	107d0 <__printf_chk@plt>
   10bdc:	mov	r0, r9
   10be0:	bl	107f4 <isatty@plt>
   10be4:	cmp	r0, #0
   10be8:	beq	10ac0 <strcmp@plt+0x290>
   10bec:	mov	r0, #10
   10bf0:	mov	r4, #0
   10bf4:	bl	107dc <putchar@plt>
   10bf8:	b	10980 <strcmp@plt+0x150>
   10bfc:	ldr	r3, [sp]
   10c00:	cmp	r3, #0
   10c04:	bge	10af4 <strcmp@plt+0x2c4>
   10c08:	movw	r1, #8276	; 0x2054
   10c0c:	movt	r1, #2
   10c10:	mov	r3, r5
   10c14:	movw	r2, #4104	; 0x1008
   10c18:	ldr	r0, [r1]
   10c1c:	movt	r2, #1
   10c20:	mov	r1, r4
   10c24:	bl	10824 <__fprintf_chk@plt>
   10c28:	b	10980 <strcmp@plt+0x150>
   10c2c:	movw	r3, #8276	; 0x2054
   10c30:	movt	r3, #2
   10c34:	mov	r1, #1
   10c38:	movw	r0, #4168	; 0x1048
   10c3c:	ldr	r3, [r3]
   10c40:	mov	r2, #29
   10c44:	movt	r0, #1
   10c48:	mov	r4, r1
   10c4c:	bl	10800 <fwrite@plt>
   10c50:	b	10980 <strcmp@plt+0x150>
   10c54:	movw	r1, #8276	; 0x2054
   10c58:	movt	r1, #2
   10c5c:	mov	r3, r4
   10c60:	movw	r2, #4292	; 0x10c4
   10c64:	ldr	r0, [r1]
   10c68:	movt	r2, #1
   10c6c:	mov	r1, #1
   10c70:	mov	r4, r1
   10c74:	bl	10824 <__fprintf_chk@plt>
   10c78:	b	10980 <strcmp@plt+0x150>
   10c7c:	bl	10818 <__stack_chk_fail@plt>
   10c80:	mov	r9, #3
   10c84:	b	109b8 <strcmp@plt+0x188>
   10c88:	mov	fp, #0
   10c8c:	mov	lr, #0
   10c90:	pop	{r1}		; (ldr r1, [sp], #4)
   10c94:	mov	r2, sp
   10c98:	push	{r2}		; (str r2, [sp, #-4]!)
   10c9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ca0:	ldr	ip, [pc, #16]	; 10cb8 <strcmp@plt+0x488>
   10ca4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ca8:	ldr	r0, [pc, #12]	; 10cbc <strcmp@plt+0x48c>
   10cac:	ldr	r3, [pc, #12]	; 10cc0 <strcmp@plt+0x490>
   10cb0:	bl	107a0 <__libc_start_main@plt>
   10cb4:	bl	10794 <abort@plt>
   10cb8:	andeq	r0, r1, r0, asr #28
   10cbc:	andeq	r0, r1, ip, lsr r8
   10cc0:	ldrdeq	r0, [r1], -ip
   10cc4:	ldr	r3, [pc, #20]	; 10ce0 <strcmp@plt+0x4b0>
   10cc8:	ldr	r2, [pc, #20]	; 10ce4 <strcmp@plt+0x4b4>
   10ccc:	add	r3, pc, r3
   10cd0:	ldr	r2, [r3, r2]
   10cd4:	cmp	r2, #0
   10cd8:	bxeq	lr
   10cdc:	b	107ac <__gmon_start__@plt>
   10ce0:	andeq	r1, r1, ip, lsr #6
   10ce4:	andeq	r0, r0, r4, asr #32
   10ce8:	push	{r3, lr}
   10cec:	movw	r0, #8268	; 0x204c
   10cf0:	ldr	r3, [pc, #36]	; 10d1c <strcmp@plt+0x4ec>
   10cf4:	movt	r0, #2
   10cf8:	rsb	r3, r0, r3
   10cfc:	cmp	r3, #6
   10d00:	popls	{r3, pc}
   10d04:	movw	r3, #0
   10d08:	movt	r3, #0
   10d0c:	cmp	r3, #0
   10d10:	popeq	{r3, pc}
   10d14:	blx	r3
   10d18:	pop	{r3, pc}
   10d1c:	andeq	r2, r2, pc, asr #32
   10d20:	push	{r3, lr}
   10d24:	movw	r0, #8268	; 0x204c
   10d28:	movw	r3, #8268	; 0x204c
   10d2c:	movt	r0, #2
   10d30:	movt	r3, #2
   10d34:	rsb	r3, r0, r3
   10d38:	asr	r3, r3, #2
   10d3c:	add	r3, r3, r3, lsr #31
   10d40:	asrs	r1, r3, #1
   10d44:	popeq	{r3, pc}
   10d48:	movw	r2, #0
   10d4c:	movt	r2, #0
   10d50:	cmp	r2, #0
   10d54:	popeq	{r3, pc}
   10d58:	blx	r2
   10d5c:	pop	{r3, pc}
   10d60:	push	{r4, lr}
   10d64:	movw	r4, #8280	; 0x2058
   10d68:	movt	r4, #2
   10d6c:	ldrb	r3, [r4]
   10d70:	cmp	r3, #0
   10d74:	popne	{r4, pc}
   10d78:	bl	10ce8 <strcmp@plt+0x4b8>
   10d7c:	mov	r3, #1
   10d80:	strb	r3, [r4]
   10d84:	pop	{r4, pc}
   10d88:	movw	r0, #7924	; 0x1ef4
   10d8c:	movt	r0, #2
   10d90:	push	{r3, lr}
   10d94:	ldr	r3, [r0]
   10d98:	cmp	r3, #0
   10d9c:	beq	10db4 <strcmp@plt+0x584>
   10da0:	movw	r3, #0
   10da4:	movt	r3, #0
   10da8:	cmp	r3, #0
   10dac:	beq	10db4 <strcmp@plt+0x584>
   10db0:	blx	r3
   10db4:	pop	{r3, lr}
   10db8:	b	10d20 <strcmp@plt+0x4f0>
   10dbc:	movw	r3, #8276	; 0x2054
   10dc0:	movt	r3, #2
   10dc4:	movw	r0, #3668	; 0xe54
   10dc8:	mov	r1, #1
   10dcc:	ldr	r3, [r3]
   10dd0:	movt	r0, #1
   10dd4:	movw	r2, #330	; 0x14a
   10dd8:	b	10800 <fwrite@plt>
   10ddc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10de0:	mov	r7, r0
   10de4:	ldr	r6, [pc, #76]	; 10e38 <strcmp@plt+0x608>
   10de8:	mov	r8, r1
   10dec:	ldr	r5, [pc, #72]	; 10e3c <strcmp@plt+0x60c>
   10df0:	mov	r9, r2
   10df4:	add	r6, pc, r6
   10df8:	bl	10774 <_init@@Base>
   10dfc:	add	r5, pc, r5
   10e00:	rsb	r6, r5, r6
   10e04:	asrs	r6, r6, #2
   10e08:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e0c:	sub	r5, r5, #4
   10e10:	mov	r4, #0
   10e14:	add	r4, r4, #1
   10e18:	ldr	r3, [r5, #4]!
   10e1c:	mov	r0, r7
   10e20:	mov	r1, r8
   10e24:	mov	r2, r9
   10e28:	blx	r3
   10e2c:	cmp	r4, r6
   10e30:	bne	10e14 <strcmp@plt+0x5e4>
   10e34:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e38:	strdeq	r1, [r1], -r4
   10e3c:	andeq	r1, r1, r8, ror #1
   10e40:	bx	lr

Disassembly of section .fini:

00010e44 <_fini@@Base>:
   10e44:	push	{r3, lr}
   10e48:	pop	{r3, pc}
