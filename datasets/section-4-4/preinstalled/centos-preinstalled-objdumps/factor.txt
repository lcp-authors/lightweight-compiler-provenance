
centos-preinstalled/factor:     file format elf32-littlearm


Disassembly of section .init:

000117b0 <_init@@Base>:
   117b0:	push	{r3, lr}
   117b4:	bl	11f2c <__assert_fail@plt+0x300>
   117b8:	pop	{r3, pc}

Disassembly of section .plt:

000117bc <fdopen@plt-0x14>:
   117bc:	push	{lr}		; (str lr, [sp, #-4]!)
   117c0:	ldr	lr, [pc, #4]	; 117cc <_init@@Base+0x1c>
   117c4:	add	lr, pc, lr
   117c8:	ldr	pc, [lr, #8]!
   117cc:	andeq	r5, r2, r4, lsr r8

000117d0 <fdopen@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #151552	; 0x25000
   117d8:	ldr	pc, [ip, #2100]!	; 0x834

000117dc <calloc@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #151552	; 0x25000
   117e4:	ldr	pc, [ip, #2092]!	; 0x82c

000117e8 <fputs_unlocked@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #151552	; 0x25000
   117f0:	ldr	pc, [ip, #2084]!	; 0x824

000117f4 <raise@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #151552	; 0x25000
   117fc:	ldr	pc, [ip, #2076]!	; 0x81c

00011800 <__gmpz_scan1@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #151552	; 0x25000
   11808:	ldr	pc, [ip, #2068]!	; 0x814

0001180c <iconv_close@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #151552	; 0x25000
   11814:	ldr	pc, [ip, #2060]!	; 0x80c

00011818 <iconv@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #151552	; 0x25000
   11820:	ldr	pc, [ip, #2052]!	; 0x804

00011824 <strcmp@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #151552	; 0x25000
   1182c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011830 <fflush@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #151552	; 0x25000
   11838:	ldr	pc, [ip, #2036]!	; 0x7f4

0001183c <__gmpz_sub_ui@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #151552	; 0x25000
   11844:	ldr	pc, [ip, #2028]!	; 0x7ec

00011848 <__gmpz_clears@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #151552	; 0x25000
   11850:	ldr	pc, [ip, #2020]!	; 0x7e4

00011854 <wcwidth@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #151552	; 0x25000
   1185c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011860 <memmove@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #151552	; 0x25000
   11868:	ldr	pc, [ip, #2004]!	; 0x7d4

0001186c <__memmove_chk@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #151552	; 0x25000
   11874:	ldr	pc, [ip, #1996]!	; 0x7cc

00011878 <__gmpz_set_ui@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #151552	; 0x25000
   11880:	ldr	pc, [ip, #1988]!	; 0x7c4

00011884 <free@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #151552	; 0x25000
   1188c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011890 <_exit@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #151552	; 0x25000
   11898:	ldr	pc, [ip, #1972]!	; 0x7b4

0001189c <memcpy@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #151552	; 0x25000
   118a4:	ldr	pc, [ip, #1964]!	; 0x7ac

000118a8 <__gmpz_sub@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #151552	; 0x25000
   118b0:	ldr	pc, [ip, #1956]!	; 0x7a4

000118b4 <mbsinit@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #151552	; 0x25000
   118bc:	ldr	pc, [ip, #1948]!	; 0x79c

000118c0 <memcmp@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #151552	; 0x25000
   118c8:	ldr	pc, [ip, #1940]!	; 0x794

000118cc <dcgettext@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #151552	; 0x25000
   118d4:	ldr	pc, [ip, #1932]!	; 0x78c

000118d8 <__gmpz_powm@plt>:
   118d8:	add	ip, pc, #0, 12
   118dc:	add	ip, ip, #151552	; 0x25000
   118e0:	ldr	pc, [ip, #1924]!	; 0x784

000118e4 <__stack_chk_fail@plt>:
   118e4:	add	ip, pc, #0, 12
   118e8:	add	ip, ip, #151552	; 0x25000
   118ec:	ldr	pc, [ip, #1916]!	; 0x77c

000118f0 <__gmpz_divexact@plt>:
   118f0:	add	ip, pc, #0, 12
   118f4:	add	ip, ip, #151552	; 0x25000
   118f8:	ldr	pc, [ip, #1908]!	; 0x774

000118fc <__gmpz_inits@plt>:
   118fc:	add	ip, pc, #0, 12
   11900:	add	ip, ip, #151552	; 0x25000
   11904:	ldr	pc, [ip, #1900]!	; 0x76c

00011908 <__gmpz_set@plt>:
   11908:	add	ip, pc, #0, 12
   1190c:	add	ip, ip, #151552	; 0x25000
   11910:	ldr	pc, [ip, #1892]!	; 0x764

00011914 <realloc@plt>:
   11914:	add	ip, pc, #0, 12
   11918:	add	ip, ip, #151552	; 0x25000
   1191c:	ldr	pc, [ip, #1884]!	; 0x75c

00011920 <__gmpz_mul@plt>:
   11920:	add	ip, pc, #0, 12
   11924:	add	ip, ip, #151552	; 0x25000
   11928:	ldr	pc, [ip, #1876]!	; 0x754

0001192c <__gmpz_tdiv_q_ui@plt>:
   1192c:	add	ip, pc, #0, 12
   11930:	add	ip, ip, #151552	; 0x25000
   11934:	ldr	pc, [ip, #1868]!	; 0x74c

00011938 <textdomain@plt>:
   11938:	add	ip, pc, #0, 12
   1193c:	add	ip, ip, #151552	; 0x25000
   11940:	ldr	pc, [ip, #1860]!	; 0x744

00011944 <iswcntrl@plt>:
   11944:	add	ip, pc, #0, 12
   11948:	add	ip, ip, #151552	; 0x25000
   1194c:	ldr	pc, [ip, #1852]!	; 0x73c

00011950 <iswprint@plt>:
   11950:	add	ip, pc, #0, 12
   11954:	add	ip, ip, #151552	; 0x25000
   11958:	ldr	pc, [ip, #1844]!	; 0x734

0001195c <fwrite@plt>:
   1195c:	add	ip, pc, #0, 12
   11960:	add	ip, ip, #151552	; 0x25000
   11964:	ldr	pc, [ip, #1836]!	; 0x72c

00011968 <lseek64@plt>:
   11968:	add	ip, pc, #0, 12
   1196c:	add	ip, ip, #151552	; 0x25000
   11970:	ldr	pc, [ip, #1828]!	; 0x724

00011974 <__gmpz_fdiv_q_2exp@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #151552	; 0x25000
   1197c:	ldr	pc, [ip, #1820]!	; 0x71c

00011980 <__ctype_get_mb_cur_max@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #151552	; 0x25000
   11988:	ldr	pc, [ip, #1812]!	; 0x714

0001198c <strcpy@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #151552	; 0x25000
   11994:	ldr	pc, [ip, #1804]!	; 0x70c

00011998 <__fpending@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #151552	; 0x25000
   119a0:	ldr	pc, [ip, #1796]!	; 0x704

000119a4 <mbrtowc@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #151552	; 0x25000
   119ac:	ldr	pc, [ip, #1788]!	; 0x6fc

000119b0 <error@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #151552	; 0x25000
   119b8:	ldr	pc, [ip, #1780]!	; 0x6f4

000119bc <__gmp_printf@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #151552	; 0x25000
   119c4:	ldr	pc, [ip, #1772]!	; 0x6ec

000119c8 <open64@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #151552	; 0x25000
   119d0:	ldr	pc, [ip, #1764]!	; 0x6e4

000119d4 <getenv@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #151552	; 0x25000
   119dc:	ldr	pc, [ip, #1756]!	; 0x6dc

000119e0 <malloc@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #151552	; 0x25000
   119e8:	ldr	pc, [ip, #1748]!	; 0x6d4

000119ec <iconv_open@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #151552	; 0x25000
   119f4:	ldr	pc, [ip, #1740]!	; 0x6cc

000119f8 <__libc_start_main@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #151552	; 0x25000
   11a00:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a04 <__freading@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #151552	; 0x25000
   11a0c:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a10 <__gmpz_init_set_si@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #151552	; 0x25000
   11a18:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a1c <__gmpz_add_ui@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #151552	; 0x25000
   11a24:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a28 <__gmon_start__@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #151552	; 0x25000
   11a30:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a34 <getopt_long@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #151552	; 0x25000
   11a3c:	ldr	pc, [ip, #1692]!	; 0x69c

00011a40 <__ctype_b_loc@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #151552	; 0x25000
   11a48:	ldr	pc, [ip, #1684]!	; 0x694

00011a4c <exit@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #151552	; 0x25000
   11a54:	ldr	pc, [ip, #1676]!	; 0x68c

00011a58 <iswspace@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #151552	; 0x25000
   11a60:	ldr	pc, [ip, #1668]!	; 0x684

00011a64 <strlen@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #151552	; 0x25000
   11a6c:	ldr	pc, [ip, #1660]!	; 0x67c

00011a70 <strchr@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #151552	; 0x25000
   11a78:	ldr	pc, [ip, #1652]!	; 0x674

00011a7c <__gmpz_divisible_ui_p@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #151552	; 0x25000
   11a84:	ldr	pc, [ip, #1644]!	; 0x66c

00011a88 <ungetc@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #151552	; 0x25000
   11a90:	ldr	pc, [ip, #1636]!	; 0x664

00011a94 <__gmpz_clear@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #151552	; 0x25000
   11a9c:	ldr	pc, [ip, #1628]!	; 0x65c

00011aa0 <__errno_location@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #151552	; 0x25000
   11aa8:	ldr	pc, [ip, #1620]!	; 0x654

00011aac <iswalnum@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #151552	; 0x25000
   11ab4:	ldr	pc, [ip, #1612]!	; 0x64c

00011ab8 <__sprintf_chk@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #151552	; 0x25000
   11ac0:	ldr	pc, [ip, #1604]!	; 0x644

00011ac4 <__cxa_atexit@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #151552	; 0x25000
   11acc:	ldr	pc, [ip, #1596]!	; 0x63c

00011ad0 <__strdup@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #151552	; 0x25000
   11ad8:	ldr	pc, [ip, #1588]!	; 0x634

00011adc <memset@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #151552	; 0x25000
   11ae4:	ldr	pc, [ip, #1580]!	; 0x62c

00011ae8 <fscanf@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #151552	; 0x25000
   11af0:	ldr	pc, [ip, #1572]!	; 0x624

00011af4 <__gmpz_tdiv_q_2exp@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #151552	; 0x25000
   11afc:	ldr	pc, [ip, #1564]!	; 0x61c

00011b00 <__printf_chk@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #151552	; 0x25000
   11b08:	ldr	pc, [ip, #1556]!	; 0x614

00011b0c <fileno@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #151552	; 0x25000
   11b14:	ldr	pc, [ip, #1548]!	; 0x60c

00011b18 <__fprintf_chk@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #151552	; 0x25000
   11b20:	ldr	pc, [ip, #1540]!	; 0x604

00011b24 <memchr@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #151552	; 0x25000
   11b2c:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b30 <fclose@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #151552	; 0x25000
   11b38:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b3c <strnlen@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #151552	; 0x25000
   11b44:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b48 <fseeko64@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #151552	; 0x25000
   11b50:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b54 <__gmpz_mod@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #151552	; 0x25000
   11b5c:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b60 <__gmpz_init_set_ui@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #151552	; 0x25000
   11b68:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b6c <__gmpz_cmp@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #151552	; 0x25000
   11b74:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b78 <__uflow@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #151552	; 0x25000
   11b80:	ldr	pc, [ip, #1476]!	; 0x5c4

00011b84 <__overflow@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #151552	; 0x25000
   11b8c:	ldr	pc, [ip, #1468]!	; 0x5bc

00011b90 <setlocale@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #151552	; 0x25000
   11b98:	ldr	pc, [ip, #1460]!	; 0x5b4

00011b9c <strrchr@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #151552	; 0x25000
   11ba4:	ldr	pc, [ip, #1452]!	; 0x5ac

00011ba8 <nl_langinfo@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #151552	; 0x25000
   11bb0:	ldr	pc, [ip, #1444]!	; 0x5a4

00011bb4 <__gmpz_gcd@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #151552	; 0x25000
   11bbc:	ldr	pc, [ip, #1436]!	; 0x59c

00011bc0 <__gmpz_init_set_str@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #151552	; 0x25000
   11bc8:	ldr	pc, [ip, #1428]!	; 0x594

00011bcc <bindtextdomain@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #151552	; 0x25000
   11bd4:	ldr	pc, [ip, #1420]!	; 0x58c

00011bd8 <__gmpz_cmp_ui@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #151552	; 0x25000
   11be0:	ldr	pc, [ip, #1412]!	; 0x584

00011be4 <__gmpz_init@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #151552	; 0x25000
   11bec:	ldr	pc, [ip, #1404]!	; 0x57c

00011bf0 <__gmpz_powm_ui@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #151552	; 0x25000
   11bf8:	ldr	pc, [ip, #1396]!	; 0x574

00011bfc <strncmp@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #151552	; 0x25000
   11c04:	ldr	pc, [ip, #1388]!	; 0x56c

00011c08 <abort@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #151552	; 0x25000
   11c10:	ldr	pc, [ip, #1380]!	; 0x564

00011c14 <close@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #151552	; 0x25000
   11c1c:	ldr	pc, [ip, #1372]!	; 0x55c

00011c20 <__snprintf_chk@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #151552	; 0x25000
   11c28:	ldr	pc, [ip, #1364]!	; 0x554

00011c2c <__assert_fail@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #151552	; 0x25000
   11c34:	ldr	pc, [ip, #1356]!	; 0x54c

Disassembly of section .text:

00011c38 <close_stdout@@Base-0x860c>:
   11c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c3c:	mov	r5, r1
   11c40:	ldr	r4, [pc, #588]	; 11e94 <__assert_fail@plt+0x268>
   11c44:	sub	sp, sp, #44	; 0x2c
   11c48:	ldr	r2, [pc, #584]	; 11e98 <__assert_fail@plt+0x26c>
   11c4c:	mov	r6, r0
   11c50:	add	r4, pc, r4
   11c54:	ldr	r1, [pc, #576]	; 11e9c <__assert_fail@plt+0x270>
   11c58:	ldr	r3, [pc, #576]	; 11ea0 <__assert_fail@plt+0x274>
   11c5c:	mov	fp, #2
   11c60:	ldr	r2, [r4, r2]
   11c64:	add	r1, pc, r1
   11c68:	add	r3, pc, r3
   11c6c:	str	r3, [sp, #16]
   11c70:	ldr	r3, [pc, #556]	; 11ea4 <__assert_fail@plt+0x278>
   11c74:	mov	sl, r1
   11c78:	ldr	r2, [r2]
   11c7c:	mov	r8, r1
   11c80:	ldr	r0, [r5]
   11c84:	add	r3, pc, r3
   11c88:	ldr	r9, [pc, #536]	; 11ea8 <__assert_fail@plt+0x27c>
   11c8c:	str	r2, [sp, #36]	; 0x24
   11c90:	str	r3, [sp, #20]
   11c94:	bl	1a464 <close_stdout@@Base+0x220>
   11c98:	mov	r1, sl
   11c9c:	mov	r0, #6
   11ca0:	bl	11b90 <setlocale@plt>
   11ca4:	add	r9, pc, r9
   11ca8:	ldr	r1, [pc, #508]	; 11eac <__assert_fail@plt+0x280>
   11cac:	mov	r0, r9
   11cb0:	ldr	r7, [pc, #504]	; 11eb0 <__assert_fail@plt+0x284>
   11cb4:	add	r1, pc, r1
   11cb8:	ldr	sl, [pc, #500]	; 11eb4 <__assert_fail@plt+0x288>
   11cbc:	bl	11bcc <bindtextdomain@plt>
   11cc0:	mov	r0, r9
   11cc4:	bl	11938 <textdomain@plt>
   11cc8:	ldr	r3, [pc, #488]	; 11eb8 <__assert_fail@plt+0x28c>
   11ccc:	add	r7, pc, r7
   11cd0:	add	sl, pc, sl
   11cd4:	ldr	r0, [r4, r3]
   11cd8:	bl	22c4c <close_stdout@@Base+0x8a08>
   11cdc:	ldr	r3, [pc, #472]	; 11ebc <__assert_fail@plt+0x290>
   11ce0:	mov	r2, #1
   11ce4:	add	r3, pc, r3
   11ce8:	str	r2, [r3, #4]
   11cec:	mov	r9, #0
   11cf0:	mov	r0, r6
   11cf4:	str	r9, [sp]
   11cf8:	mov	r1, r5
   11cfc:	mov	r2, r8
   11d00:	mov	r3, r7
   11d04:	bl	11a34 <getopt_long@plt>
   11d08:	cmn	r0, #1
   11d0c:	beq	11df0 <__assert_fail@plt+0x1c4>
   11d10:	cmp	r0, #115	; 0x73
   11d14:	beq	11de4 <__assert_fail@plt+0x1b8>
   11d18:	bgt	11d34 <__assert_fail@plt+0x108>
   11d1c:	cmn	r0, #3
   11d20:	beq	11d50 <__assert_fail@plt+0x124>
   11d24:	cmn	r0, #2
   11d28:	bne	11ddc <__assert_fail@plt+0x1b0>
   11d2c:	mov	r0, r9
   11d30:	bl	1a03c <__assert_fail@plt+0x8410>
   11d34:	cmp	r0, #119	; 0x77
   11d38:	beq	11dd0 <__assert_fail@plt+0x1a4>
   11d3c:	cmp	r0, #256	; 0x100
   11d40:	bne	11ddc <__assert_fail@plt+0x1b0>
   11d44:	mov	r3, #1
   11d48:	strb	r3, [sl]
   11d4c:	b	11cec <__assert_fail@plt+0xc0>
   11d50:	ldr	r2, [pc, #360]	; 11ec0 <__assert_fail@plt+0x294>
   11d54:	ldr	r3, [pc, #360]	; 11ec4 <__assert_fail@plt+0x298>
   11d58:	ldr	r0, [pc, #360]	; 11ec8 <__assert_fail@plt+0x29c>
   11d5c:	ldr	r2, [r4, r2]
   11d60:	ldr	r3, [r4, r3]
   11d64:	add	r0, pc, r0
   11d68:	ldr	r1, [pc, #348]	; 11ecc <__assert_fail@plt+0x2a0>
   11d6c:	ldr	r4, [r2]
   11d70:	add	r1, pc, r1
   11d74:	ldr	r5, [r3]
   11d78:	bl	1ae58 <close_stdout@@Base+0xc14>
   11d7c:	ldr	r1, [pc, #332]	; 11ed0 <__assert_fail@plt+0x2a4>
   11d80:	add	r1, pc, r1
   11d84:	mov	r6, r0
   11d88:	ldr	r0, [pc, #324]	; 11ed4 <__assert_fail@plt+0x2a8>
   11d8c:	add	r0, pc, r0
   11d90:	bl	1ae58 <close_stdout@@Base+0xc14>
   11d94:	ldr	r2, [pc, #316]	; 11ed8 <__assert_fail@plt+0x2ac>
   11d98:	ldr	r1, [pc, #316]	; 11edc <__assert_fail@plt+0x2b0>
   11d9c:	mov	r3, r5
   11da0:	add	r2, pc, r2
   11da4:	str	r2, [sp]
   11da8:	ldr	r2, [pc, #304]	; 11ee0 <__assert_fail@plt+0x2b4>
   11dac:	add	r1, pc, r1
   11db0:	str	r6, [sp, #4]
   11db4:	str	r9, [sp, #12]
   11db8:	add	r2, pc, r2
   11dbc:	str	r0, [sp, #8]
   11dc0:	mov	r0, r4
   11dc4:	bl	1d6f4 <close_stdout@@Base+0x34b0>
   11dc8:	mov	r0, r9
   11dcc:	bl	11a4c <exit@plt>
   11dd0:	ldr	r3, [sp, #20]
   11dd4:	strb	r9, [r3]
   11dd8:	b	11cec <__assert_fail@plt+0xc0>
   11ddc:	mov	r0, #1
   11de0:	bl	1a03c <__assert_fail@plt+0x8410>
   11de4:	ldr	r3, [sp, #16]
   11de8:	str	fp, [r3, #4]
   11dec:	b	11cec <__assert_fail@plt+0xc0>
   11df0:	ldr	r3, [pc, #236]	; 11ee4 <__assert_fail@plt+0x2b8>
   11df4:	ldr	r3, [r4, r3]
   11df8:	ldr	r3, [r3]
   11dfc:	cmp	r6, r3
   11e00:	ble	11e3c <__assert_fail@plt+0x210>
   11e04:	rsb	r6, r3, r6
   11e08:	add	r5, r5, r3, lsl #2
   11e0c:	mov	r4, r9
   11e10:	mov	r7, #1
   11e14:	ldr	r0, [r5, r4, lsl #2]
   11e18:	add	r4, r4, #1
   11e1c:	bl	19ba0 <__assert_fail@plt+0x7f74>
   11e20:	cmp	r0, #0
   11e24:	moveq	r7, #0
   11e28:	cmp	r4, r6
   11e2c:	bne	11e14 <__assert_fail@plt+0x1e8>
   11e30:	rsbs	r0, r7, #1
   11e34:	movcc	r0, #0
   11e38:	bl	11a4c <exit@plt>
   11e3c:	add	r5, sp, #28
   11e40:	ldr	r6, [pc, #160]	; 11ee8 <__assert_fail@plt+0x2bc>
   11e44:	mov	r7, #1
   11e48:	mov	r0, r5
   11e4c:	add	r6, pc, r6
   11e50:	bl	1c888 <close_stdout@@Base+0x2644>
   11e54:	ldr	r3, [pc, #144]	; 11eec <__assert_fail@plt+0x2c0>
   11e58:	ldr	r4, [r4, r3]
   11e5c:	b	11e6c <__assert_fail@plt+0x240>
   11e60:	bl	19ba0 <__assert_fail@plt+0x7f74>
   11e64:	and	r0, r0, r7
   11e68:	uxtb	r7, r0
   11e6c:	ldr	r0, [r4]
   11e70:	mov	r1, r6
   11e74:	mov	r2, #3
   11e78:	mov	r3, r5
   11e7c:	bl	1c898 <close_stdout@@Base+0x2654>
   11e80:	cmn	r0, #1
   11e84:	ldr	r0, [sp, #32]
   11e88:	bne	11e60 <__assert_fail@plt+0x234>
   11e8c:	bl	11884 <free@plt>
   11e90:	b	11e30 <__assert_fail@plt+0x204>
   11e94:	andeq	r5, r2, r8, lsr #7
   11e98:	andeq	r0, r0, ip, lsl #3
   11e9c:	andeq	r4, r1, r8, ror #14
   11ea0:	andeq	r5, r2, r8, lsr #11
   11ea4:	andeq	r5, r2, ip, lsr r5
   11ea8:	andeq	r4, r1, r8, ror #12
   11eac:	andeq	r4, r1, ip, lsl r7
   11eb0:	andeq	r5, r2, r8, asr #3
   11eb4:	andeq	r5, r2, r0, asr #10
   11eb8:	muleq	r0, ip, r1
   11ebc:	andeq	r5, r2, ip, lsr #10
   11ec0:	andeq	r0, r0, ip, lsr #3
   11ec4:	muleq	r0, r4, r1
   11ec8:	andeq	r4, r1, r0, lsl #13
   11ecc:	andeq	r4, r1, r8, lsl #13
   11ed0:	muleq	r1, ip, r6
   11ed4:	andeq	r4, r1, r0, lsl #13
   11ed8:	muleq	r1, r4, r6
   11edc:	andeq	r4, r1, r0, lsl #13
   11ee0:	andeq	r4, r1, r0, asr r5
   11ee4:	muleq	r0, r0, r1
   11ee8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11eec:	andeq	r0, r0, r8, lsr #3
   11ef0:	mov	fp, #0
   11ef4:	mov	lr, #0
   11ef8:	pop	{r1}		; (ldr r1, [sp], #4)
   11efc:	mov	r2, sp
   11f00:	push	{r2}		; (str r2, [sp, #-4]!)
   11f04:	push	{r0}		; (str r0, [sp, #-4]!)
   11f08:	ldr	ip, [pc, #16]	; 11f20 <__assert_fail@plt+0x2f4>
   11f0c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f10:	ldr	r0, [pc, #12]	; 11f24 <__assert_fail@plt+0x2f8>
   11f14:	ldr	r3, [pc, #12]	; 11f28 <__assert_fail@plt+0x2fc>
   11f18:	bl	119f8 <__libc_start_main@plt>
   11f1c:	bl	11c08 <abort@plt>
   11f20:	andeq	r2, r2, r8, asr #24
   11f24:	andeq	r1, r1, r8, lsr ip
   11f28:	andeq	r2, r2, r4, ror #23
   11f2c:	ldr	r3, [pc, #20]	; 11f48 <__assert_fail@plt+0x31c>
   11f30:	ldr	r2, [pc, #20]	; 11f4c <__assert_fail@plt+0x320>
   11f34:	add	r3, pc, r3
   11f38:	ldr	r2, [r3, r2]
   11f3c:	cmp	r2, #0
   11f40:	bxeq	lr
   11f44:	b	11a28 <__gmon_start__@plt>
   11f48:	andeq	r5, r2, r4, asr #1
   11f4c:	andeq	r0, r0, r0, lsr #3
   11f50:	push	{r3, lr}
   11f54:	movw	r0, #29204	; 0x7214
   11f58:	ldr	r3, [pc, #36]	; 11f84 <__assert_fail@plt+0x358>
   11f5c:	movt	r0, #3
   11f60:	rsb	r3, r0, r3
   11f64:	cmp	r3, #6
   11f68:	popls	{r3, pc}
   11f6c:	movw	r3, #0
   11f70:	movt	r3, #0
   11f74:	cmp	r3, #0
   11f78:	popeq	{r3, pc}
   11f7c:	blx	r3
   11f80:	pop	{r3, pc}
   11f84:	andeq	r7, r3, r7, lsl r2
   11f88:	push	{r3, lr}
   11f8c:	movw	r0, #29204	; 0x7214
   11f90:	movw	r3, #29204	; 0x7214
   11f94:	movt	r0, #3
   11f98:	movt	r3, #3
   11f9c:	rsb	r3, r0, r3
   11fa0:	asr	r3, r3, #2
   11fa4:	add	r3, r3, r3, lsr #31
   11fa8:	asrs	r1, r3, #1
   11fac:	popeq	{r3, pc}
   11fb0:	movw	r2, #0
   11fb4:	movt	r2, #0
   11fb8:	cmp	r2, #0
   11fbc:	popeq	{r3, pc}
   11fc0:	blx	r2
   11fc4:	pop	{r3, pc}
   11fc8:	push	{r4, lr}
   11fcc:	movw	r4, #29204	; 0x7214
   11fd0:	movt	r4, #3
   11fd4:	ldrb	r3, [r4]
   11fd8:	cmp	r3, #0
   11fdc:	popne	{r4, pc}
   11fe0:	bl	11f50 <__assert_fail@plt+0x324>
   11fe4:	mov	r3, #1
   11fe8:	strb	r3, [r4]
   11fec:	pop	{r4, pc}
   11ff0:	movw	r0, #28312	; 0x6e98
   11ff4:	movt	r0, #3
   11ff8:	push	{r3, lr}
   11ffc:	ldr	r3, [r0]
   12000:	cmp	r3, #0
   12004:	beq	1201c <__assert_fail@plt+0x3f0>
   12008:	movw	r3, #0
   1200c:	movt	r3, #0
   12010:	cmp	r3, #0
   12014:	beq	1201c <__assert_fail@plt+0x3f0>
   12018:	blx	r3
   1201c:	pop	{r3, lr}
   12020:	b	11f88 <__assert_fail@plt+0x35c>
   12024:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12028:	mov	r6, #1
   1202c:	mov	r7, #0
   12030:	and	r6, r6, r2
   12034:	and	r7, r7, r3
   12038:	orrs	ip, r6, r7
   1203c:	bne	12058 <__assert_fail@plt+0x42c>
   12040:	mov	r6, r0
   12044:	mov	ip, r1
   12048:	mov	r0, r2
   1204c:	mov	r1, r3
   12050:	mov	r2, r6
   12054:	mov	r3, ip
   12058:	orrs	ip, r0, r1
   1205c:	moveq	r0, r2
   12060:	moveq	r1, r3
   12064:	beq	120e4 <__assert_fail@plt+0x4b8>
   12068:	lsrs	r3, r3, #1
   1206c:	rrx	r2, r2
   12070:	mov	r8, #1
   12074:	mov	r9, #0
   12078:	and	r6, r0, r8
   1207c:	and	r7, r1, r9
   12080:	lsrs	r1, r1, #1
   12084:	rrx	r0, r0
   12088:	orrs	ip, r6, r7
   1208c:	beq	12078 <__assert_fail@plt+0x44c>
   12090:	mov	r6, r0
   12094:	mov	r7, r1
   12098:	subs	r6, r6, r2
   1209c:	sbc	r7, r7, r3
   120a0:	orrs	ip, r6, r7
   120a4:	asr	r4, r7, #31
   120a8:	beq	120d4 <__assert_fail@plt+0x4a8>
   120ac:	and	sl, r4, r6
   120b0:	and	fp, r4, r7
   120b4:	adds	r2, r2, sl
   120b8:	eor	r0, r4, r6
   120bc:	eor	r1, r4, r7
   120c0:	mov	r5, r4
   120c4:	adc	r3, r3, fp
   120c8:	subs	r0, r0, r4
   120cc:	sbc	r1, r1, r5
   120d0:	b	12078 <__assert_fail@plt+0x44c>
   120d4:	adds	r0, r0, r0
   120d8:	adc	r1, r1, r1
   120dc:	adds	r0, r0, #1
   120e0:	adc	r1, r1, #0
   120e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   120e8:	bx	lr
   120ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   120f0:	sub	sp, sp, #40	; 0x28
   120f4:	mov	ip, r0
   120f8:	mov	r1, #0
   120fc:	ldrd	r4, [sp, #72]	; 0x48
   12100:	mov	r0, #1
   12104:	ldrd	r6, [sp, #80]	; 0x50
   12108:	and	r0, r0, r4
   1210c:	and	r1, r1, r5
   12110:	orrs	sl, r0, r1
   12114:	ldrd	sl, [sp, #88]	; 0x58
   12118:	bne	12164 <__assert_fail@plt+0x538>
   1211c:	str	ip, [sp, #4]
   12120:	strd	r6, [sp, #8]
   12124:	lsl	r1, r2, #31
   12128:	lsrs	r5, r5, #1
   1212c:	rrx	r4, r4
   12130:	mov	r0, #0
   12134:	orr	r5, r5, r1
   12138:	orr	r4, r4, r0
   1213c:	mov	r6, #1
   12140:	mov	r7, #0
   12144:	and	r6, r6, r4
   12148:	and	r7, r7, r5
   1214c:	lsrs	r3, r3, #1
   12150:	rrx	r2, r2
   12154:	orrs	ip, r6, r7
   12158:	beq	12124 <__assert_fail@plt+0x4f8>
   1215c:	ldr	ip, [sp, #4]
   12160:	ldrd	r6, [sp, #8]
   12164:	mov	r0, #1
   12168:	mov	r1, #0
   1216c:	and	r0, r0, sl
   12170:	and	r1, r1, fp
   12174:	orrs	r1, r0, r1
   12178:	bne	121c4 <__assert_fail@plt+0x598>
   1217c:	str	ip, [sp, #24]
   12180:	strd	r2, [sp, #8]
   12184:	lsl	r3, r6, #31
   12188:	lsrs	fp, fp, #1
   1218c:	rrx	sl, sl
   12190:	mov	r2, #0
   12194:	orr	fp, fp, r3
   12198:	orr	sl, sl, r2
   1219c:	mov	r0, #1
   121a0:	mov	r1, #0
   121a4:	and	r0, r0, sl
   121a8:	and	r1, r1, fp
   121ac:	lsrs	r7, r7, #1
   121b0:	rrx	r6, r6
   121b4:	orrs	ip, r0, r1
   121b8:	beq	12184 <__assert_fail@plt+0x558>
   121bc:	ldr	ip, [sp, #24]
   121c0:	ldrd	r2, [sp, #8]
   121c4:	strd	r8, [sp, #24]
   121c8:	orr	r0, r6, r2
   121cc:	orr	r1, r7, r3
   121d0:	orrs	r8, r0, r1
   121d4:	beq	122b8 <__assert_fail@plt+0x68c>
   121d8:	cmp	r3, r7
   121dc:	cmpeq	r2, r6
   121e0:	bhi	122d8 <__assert_fail@plt+0x6ac>
   121e4:	movne	r1, #0
   121e8:	moveq	r1, #1
   121ec:	cmp	r5, fp
   121f0:	cmpeq	r4, sl
   121f4:	movls	r0, #0
   121f8:	andhi	r0, r1, #1
   121fc:	cmp	r0, #0
   12200:	bne	122d8 <__assert_fail@plt+0x6ac>
   12204:	cmp	r3, r7
   12208:	cmpeq	r2, r6
   1220c:	bcc	12228 <__assert_fail@plt+0x5fc>
   12210:	cmp	fp, r5
   12214:	cmpeq	sl, r4
   12218:	movls	r1, #0
   1221c:	andhi	r1, r1, #1
   12220:	cmp	r1, #0
   12224:	beq	1234c <__assert_fail@plt+0x720>
   12228:	cmp	fp, r5
   1222c:	cmpeq	sl, r4
   12230:	ldrd	r8, [sp, #24]
   12234:	mov	r1, #0
   12238:	str	ip, [sp, #32]
   1223c:	movcs	r0, #0
   12240:	movcc	r0, #1
   12244:	subs	r6, r6, r2
   12248:	sbc	r7, r7, r3
   1224c:	subs	sl, sl, r4
   12250:	sbc	fp, fp, r5
   12254:	subs	r6, r6, r0
   12258:	sbc	r7, r7, r1
   1225c:	strd	r2, [sp, #8]
   12260:	lsl	r3, r6, #31
   12264:	lsrs	fp, fp, #1
   12268:	rrx	sl, sl
   1226c:	mov	r2, #0
   12270:	orr	fp, fp, r3
   12274:	orr	sl, sl, r2
   12278:	mov	r0, #1
   1227c:	mov	r1, #0
   12280:	and	r0, r0, sl
   12284:	and	r1, r1, fp
   12288:	lsrs	r7, r7, #1
   1228c:	rrx	r6, r6
   12290:	orrs	ip, r0, r1
   12294:	beq	12260 <__assert_fail@plt+0x634>
   12298:	strd	r2, [sp, #16]
   1229c:	ldrd	r2, [sp, #8]
   122a0:	strd	r8, [sp, #24]
   122a4:	orr	r0, r6, r2
   122a8:	orr	r1, r7, r3
   122ac:	orrs	r8, r0, r1
   122b0:	ldr	ip, [sp, #32]
   122b4:	bne	121d8 <__assert_fail@plt+0x5ac>
   122b8:	strd	r0, [ip]
   122bc:	mov	r2, r4
   122c0:	mov	r0, sl
   122c4:	mov	r1, fp
   122c8:	mov	r3, r5
   122cc:	add	sp, sp, #40	; 0x28
   122d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   122d4:	b	12024 <__assert_fail@plt+0x3f8>
   122d8:	cmp	r5, fp
   122dc:	cmpeq	r4, sl
   122e0:	mov	r1, #0
   122e4:	str	ip, [sp, #8]
   122e8:	movcs	r0, #0
   122ec:	movcc	r0, #1
   122f0:	subs	r2, r2, r6
   122f4:	sbc	r3, r3, r7
   122f8:	subs	r4, r4, sl
   122fc:	sbc	r5, r5, fp
   12300:	subs	r2, r2, r0
   12304:	sbc	r3, r3, r1
   12308:	lsl	r9, r2, #31
   1230c:	lsrs	r5, r5, #1
   12310:	rrx	r4, r4
   12314:	mov	r8, #0
   12318:	orr	r5, r5, r9
   1231c:	orr	r4, r4, r8
   12320:	mov	r0, #1
   12324:	mov	r1, #0
   12328:	and	r0, r0, r4
   1232c:	and	r1, r1, r5
   12330:	lsrs	r3, r3, #1
   12334:	rrx	r2, r2
   12338:	orrs	ip, r0, r1
   1233c:	beq	12308 <__assert_fail@plt+0x6dc>
   12340:	ldr	ip, [sp, #8]
   12344:	strd	r8, [sp, #24]
   12348:	b	121c8 <__assert_fail@plt+0x59c>
   1234c:	mov	r0, r4
   12350:	mov	r1, r5
   12354:	strd	r2, [ip]
   12358:	add	sp, sp, #40	; 0x28
   1235c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12360:	bx	lr
   12364:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12368:	add	ip, r0, #224	; 0xe0
   1236c:	ldrb	r6, [r0, #250]	; 0xfa
   12370:	sub	sp, sp, #8
   12374:	add	r7, r0, #16
   12378:	sub	r1, r6, #1
   1237c:	cmn	r1, #1
   12380:	mov	sl, r1
   12384:	beq	1245c <__assert_fail@plt+0x830>
   12388:	lsl	r4, r1, #3
   1238c:	ldrd	r4, [r4, r7]
   12390:	cmp	r3, r5
   12394:	cmpeq	r2, r4
   12398:	bcs	1246c <__assert_fail@plt+0x840>
   1239c:	sub	r9, r6, #-536870911	; 0xe0000001
   123a0:	mov	r8, r1
   123a4:	add	r9, r7, r9, lsl #3
   123a8:	b	123bc <__assert_fail@plt+0x790>
   123ac:	ldrd	r4, [r9, #-8]!
   123b0:	cmp	r5, r3
   123b4:	cmpeq	r4, r2
   123b8:	bls	12418 <__assert_fail@plt+0x7ec>
   123bc:	subs	r8, r8, #1
   123c0:	bcs	123ac <__assert_fail@plt+0x780>
   123c4:	mov	r9, #0
   123c8:	mov	sl, r9
   123cc:	add	r5, r6, #1
   123d0:	add	r6, r7, r6, lsl #3
   123d4:	add	r4, ip, r5
   123d8:	strd	r2, [sp]
   123dc:	ldrd	r2, [r6, #-8]
   123e0:	strd	r2, [r6], #-8
   123e4:	ldrb	fp, [ip, r1]
   123e8:	sub	r1, r1, #1
   123ec:	cmp	r1, r8
   123f0:	strb	fp, [r4, #-1]!
   123f4:	bgt	123dc <__assert_fail@plt+0x7b0>
   123f8:	ldrd	r2, [sp]
   123fc:	ldr	r1, [sp, #40]	; 0x28
   12400:	strd	r2, [r7, r9]
   12404:	strb	r1, [ip, sl]
   12408:	strb	r5, [r0, #250]	; 0xfa
   1240c:	add	sp, sp, #8
   12410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12414:	bx	lr
   12418:	mov	sl, r8
   1241c:	cmp	r3, r5
   12420:	cmpeq	r2, r4
   12424:	beq	12440 <__assert_fail@plt+0x814>
   12428:	add	sl, sl, #1
   1242c:	cmp	r1, r8
   12430:	addle	r5, r6, #1
   12434:	lsl	r9, sl, #3
   12438:	bgt	123cc <__assert_fail@plt+0x7a0>
   1243c:	b	123fc <__assert_fail@plt+0x7d0>
   12440:	ldrb	r3, [ip, sl]
   12444:	ldr	r1, [sp, #40]	; 0x28
   12448:	add	r3, r3, r1
   1244c:	strb	r3, [ip, sl]
   12450:	add	sp, sp, #8
   12454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12458:	bx	lr
   1245c:	mov	r9, #0
   12460:	add	r5, r6, #1
   12464:	mov	sl, r9
   12468:	b	123fc <__assert_fail@plt+0x7d0>
   1246c:	mov	r8, r1
   12470:	b	1241c <__assert_fail@plt+0x7f0>
   12474:	push	{r4, r5, r6, lr}
   12478:	mov	r6, r0
   1247c:	ldr	r3, [r0, #8]
   12480:	cmp	r3, #0
   12484:	movne	r4, #0
   12488:	movne	r5, r4
   1248c:	beq	124b0 <__assert_fail@plt+0x884>
   12490:	ldr	r0, [r6]
   12494:	add	r5, r5, #1
   12498:	add	r0, r0, r4
   1249c:	add	r4, r4, #12
   124a0:	bl	11a94 <__gmpz_clear@plt>
   124a4:	ldr	r3, [r6, #8]
   124a8:	cmp	r3, r5
   124ac:	bhi	12490 <__assert_fail@plt+0x864>
   124b0:	ldr	r0, [r6]
   124b4:	bl	11884 <free@plt>
   124b8:	ldr	r0, [r6, #4]
   124bc:	pop	{r4, r5, r6, lr}
   124c0:	b	11884 <free@plt>
   124c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124c8:	sub	sp, sp, #164	; 0xa4
   124cc:	ldrd	r4, [sp, #240]	; 0xf0
   124d0:	str	r0, [sp, #148]	; 0x94
   124d4:	rsbs	r0, r4, #0
   124d8:	rsc	r1, r5, #0
   124dc:	strd	r0, [sp, #80]	; 0x50
   124e0:	cmp	r2, #0
   124e4:	sbcs	r1, r3, #0
   124e8:	strd	r2, [sp, #32]
   124ec:	ldrd	r8, [sp, #200]	; 0xc8
   124f0:	blt	12d84 <__assert_fail@plt+0x1158>
   124f4:	ldrd	r2, [sp, #208]	; 0xd0
   124f8:	cmp	r2, #0
   124fc:	sbcs	r3, r3, #0
   12500:	blt	12d64 <__assert_fail@plt+0x1138>
   12504:	ldrd	r4, [sp, #224]	; 0xe0
   12508:	cmp	r4, #0
   1250c:	sbcs	r5, r5, #0
   12510:	blt	12d44 <__assert_fail@plt+0x1118>
   12514:	ldrd	r6, [sp, #216]	; 0xd8
   12518:	mvn	r0, #0
   1251c:	mov	r1, #0
   12520:	and	r2, r8, r0
   12524:	and	r6, r6, r0
   12528:	and	r7, r7, r1
   1252c:	strd	r6, [sp, #16]
   12530:	and	r3, r9, r1
   12534:	ldr	r7, [sp, #220]	; 0xdc
   12538:	umull	r0, r1, r9, r6
   1253c:	ldr	sl, [sp, #20]
   12540:	umull	r4, r5, r2, r7
   12544:	ldr	fp, [sp, #16]
   12548:	mul	ip, r2, sl
   1254c:	ldr	sl, [sp, #220]	; 0xdc
   12550:	umull	r6, r7, r2, fp
   12554:	adds	r4, r4, r0
   12558:	mla	ip, fp, r3, ip
   1255c:	ldr	fp, [sp, #20]
   12560:	mla	r5, sl, r3, r5
   12564:	mla	r1, r9, fp, r1
   12568:	add	ip, ip, r7
   1256c:	strd	r6, [sp, #72]	; 0x48
   12570:	mov	r7, #0
   12574:	adc	r5, r5, r1
   12578:	adds	r4, r4, ip
   1257c:	adc	r5, r5, r7
   12580:	cmp	r1, r5
   12584:	cmpeq	r0, r4
   12588:	umull	r0, r1, r9, sl
   1258c:	strd	r0, [sp, #48]	; 0x30
   12590:	bls	125a0 <__assert_fail@plt+0x974>
   12594:	adds	r0, r0, #0
   12598:	adc	r1, r1, #1
   1259c:	strd	r0, [sp, #48]	; 0x30
   125a0:	ldr	r6, [sp, #208]	; 0xd0
   125a4:	mov	r7, #0
   125a8:	ldr	fp, [sp, #212]	; 0xd4
   125ac:	strd	r6, [sp, #40]	; 0x28
   125b0:	ldr	r1, [sp, #40]	; 0x28
   125b4:	umull	sl, fp, fp, r2
   125b8:	ldr	ip, [sp, #40]	; 0x28
   125bc:	umull	r0, r1, r1, r2
   125c0:	umull	r6, r7, ip, r9
   125c4:	strd	sl, [sp, #8]
   125c8:	mov	fp, #0
   125cc:	strd	r0, [sp, #64]	; 0x40
   125d0:	ldr	r1, [sp, #12]
   125d4:	ldr	r0, [sp, #212]	; 0xd4
   125d8:	mla	r0, r0, r3, r1
   125dc:	str	r0, [sp, #12]
   125e0:	ldrd	r0, [sp, #48]	; 0x30
   125e4:	adds	r0, r0, r5
   125e8:	adc	r1, r1, fp
   125ec:	strd	r0, [sp, #112]	; 0x70
   125f0:	ldr	r1, [sp, #208]	; 0xd0
   125f4:	ldr	r0, [sp, #68]	; 0x44
   125f8:	mla	ip, r1, r3, r0
   125fc:	ldr	r0, [sp, #72]	; 0x48
   12600:	mov	r3, r4
   12604:	ldr	r1, [sp, #44]	; 0x2c
   12608:	adds	r4, fp, r0
   1260c:	adc	r5, r3, #0
   12610:	ldr	r3, [sp, #212]	; 0xd4
   12614:	mla	r7, r9, r1, r7
   12618:	strd	r4, [sp, #24]
   1261c:	umull	r2, r3, r3, r9
   12620:	ldrd	r8, [sp, #8]
   12624:	adds	r8, r8, r6
   12628:	adc	r9, r9, r7
   1262c:	adds	r0, ip, r8
   12630:	adc	r1, fp, r9
   12634:	cmp	r7, r1
   12638:	cmpeq	r6, r0
   1263c:	strd	r2, [sp, #120]	; 0x78
   12640:	bls	12650 <__assert_fail@plt+0xa24>
   12644:	adds	r2, r2, #0
   12648:	adc	r3, r3, #1
   1264c:	strd	r2, [sp, #120]	; 0x78
   12650:	ldr	r6, [sp, #80]	; 0x50
   12654:	mvn	r2, #0
   12658:	ldr	r4, [sp, #24]
   1265c:	mov	r3, #0
   12660:	ldr	r5, [sp, #84]	; 0x54
   12664:	mov	r7, #0
   12668:	ldrd	sl, [sp, #232]	; 0xe8
   1266c:	str	r7, [sp, #76]	; 0x4c
   12670:	mul	ip, r4, r5
   12674:	and	sl, sl, r2
   12678:	umull	r4, r5, r4, r6
   1267c:	and	fp, fp, r3
   12680:	strd	sl, [sp, #8]
   12684:	ldr	fp, [sp, #28]
   12688:	and	r2, r2, r4
   1268c:	ldr	r7, [sp, #236]	; 0xec
   12690:	ldr	sl, [sp, #8]
   12694:	mla	ip, r6, fp, ip
   12698:	str	r1, [sp, #72]	; 0x48
   1269c:	umull	r6, r7, r2, r7
   126a0:	add	r1, ip, r5
   126a4:	ldr	fp, [sp, #8]
   126a8:	and	r3, r3, r1
   126ac:	umull	r8, r9, r1, sl
   126b0:	ldr	sl, [sp, #12]
   126b4:	strd	r6, [sp]
   126b8:	umull	r6, r7, r2, fp
   126bc:	str	r0, [sp, #60]	; 0x3c
   126c0:	mul	ip, r2, sl
   126c4:	ldr	sl, [sp, #4]
   126c8:	mla	r4, fp, r3, ip
   126cc:	ldr	ip, [sp, #236]	; 0xec
   126d0:	ldr	fp, [sp, #12]
   126d4:	mla	ip, ip, r3, sl
   126d8:	add	r4, r4, r7
   126dc:	mla	r9, r1, fp, r9
   126e0:	mov	r7, #0
   126e4:	str	r4, [sp, #48]	; 0x30
   126e8:	str	r7, [sp, #52]	; 0x34
   126ec:	str	ip, [sp, #4]
   126f0:	ldrd	sl, [sp]
   126f4:	str	r7, [sp, #56]	; 0x38
   126f8:	adds	sl, sl, r8
   126fc:	adc	fp, fp, r9
   12700:	strd	sl, [sp]
   12704:	ldrd	r6, [sp]
   12708:	ldrd	sl, [sp, #48]	; 0x30
   1270c:	adds	r6, r6, sl
   12710:	ldr	sl, [sp, #64]	; 0x40
   12714:	adc	r7, r7, fp
   12718:	ldr	fp, [sp, #236]	; 0xec
   1271c:	strd	r6, [sp]
   12720:	ldrd	r6, [sp, #56]	; 0x38
   12724:	adds	r6, r6, sl
   12728:	umull	sl, fp, r1, fp
   1272c:	adc	r7, r7, #0
   12730:	strd	r6, [sp, #152]	; 0x98
   12734:	ldrd	r6, [sp]
   12738:	cmp	r9, r7
   1273c:	cmpeq	r8, r6
   12740:	strd	sl, [sp, #96]	; 0x60
   12744:	bls	12754 <__assert_fail@plt+0xb28>
   12748:	adds	sl, sl, #0
   1274c:	adc	fp, fp, #1
   12750:	strd	sl, [sp, #96]	; 0x60
   12754:	ldr	r4, [sp, #224]	; 0xe0
   12758:	mov	r5, #0
   1275c:	ldr	sl, [sp, #228]	; 0xe4
   12760:	mov	ip, #0
   12764:	ldr	r0, [sp, #228]	; 0xe4
   12768:	strd	r4, [sp, #48]	; 0x30
   1276c:	ldr	r5, [sp, #48]	; 0x30
   12770:	umull	r6, r7, r2, sl
   12774:	ldr	fp, [sp, #48]	; 0x30
   12778:	umull	r4, r5, r2, r5
   1277c:	ldr	sl, [sp, #4]
   12780:	umull	r8, r9, r1, fp
   12784:	str	sl, [sp, #64]	; 0x40
   12788:	mla	r7, r0, r3, r7
   1278c:	strd	r4, [sp, #104]	; 0x68
   12790:	ldr	r4, [sp, #224]	; 0xe0
   12794:	adds	r6, r6, r8
   12798:	umull	sl, fp, r1, r0
   1279c:	str	ip, [sp, #68]	; 0x44
   127a0:	mla	r3, r4, r3, r5
   127a4:	ldr	r5, [sp, #52]	; 0x34
   127a8:	mla	r9, r1, r5, r9
   127ac:	strd	sl, [sp, #128]	; 0x80
   127b0:	adc	r7, r7, r9
   127b4:	adds	r4, r3, r6
   127b8:	adc	r5, ip, r7
   127bc:	cmp	r9, r5
   127c0:	cmpeq	r8, r4
   127c4:	bls	127d4 <__assert_fail@plt+0xba8>
   127c8:	adds	sl, sl, #0
   127cc:	adc	fp, fp, #1
   127d0:	strd	sl, [sp, #128]	; 0x80
   127d4:	ldr	r0, [sp, #32]
   127d8:	mov	r1, #0
   127dc:	ldr	r7, [sp, #16]
   127e0:	mov	r3, r1
   127e4:	ldr	r6, [sp, #28]
   127e8:	ldr	r1, [sp, #24]
   127ec:	mov	r2, r0
   127f0:	ldr	fp, [sp, #36]	; 0x24
   127f4:	ldr	sl, [sp, #16]
   127f8:	orrs	r1, r1, r6
   127fc:	umull	r6, r7, r0, r7
   12800:	ldr	ip, [sp, #220]	; 0xdc
   12804:	umull	sl, fp, fp, sl
   12808:	ldrd	r8, [sp, #64]	; 0x40
   1280c:	moveq	r1, #0
   12810:	movne	r1, #1
   12814:	str	r5, [sp, #24]
   12818:	strd	r6, [sp, #136]	; 0x88
   1281c:	ldrd	r6, [sp, #152]	; 0x98
   12820:	ldr	r5, [sp, #104]	; 0x68
   12824:	strd	sl, [sp, #88]	; 0x58
   12828:	adds	r6, r6, r1
   1282c:	umull	sl, fp, r0, ip
   12830:	ldrd	r0, [sp, #96]	; 0x60
   12834:	adc	r7, r7, #0
   12838:	adds	r8, r8, r6
   1283c:	adc	r9, r9, r7
   12840:	adds	r8, r8, r0
   12844:	adc	r9, r9, r1
   12848:	ldr	r1, [sp, #20]
   1284c:	cmp	r9, r7
   12850:	cmpeq	r8, r6
   12854:	ldr	r7, [sp, #92]	; 0x5c
   12858:	ldr	r6, [sp, #36]	; 0x24
   1285c:	mov	ip, #0
   12860:	ldr	r0, [sp, #20]
   12864:	str	ip, [sp, #28]
   12868:	mla	r1, r6, r1, r7
   1286c:	ldr	r6, [sp, #140]	; 0x8c
   12870:	movcs	r7, #0
   12874:	movcc	r7, #1
   12878:	str	r7, [sp, #64]	; 0x40
   1287c:	str	r1, [sp, #92]	; 0x5c
   12880:	ldr	r1, [sp, #32]
   12884:	mla	ip, r1, r0, r6
   12888:	ldrd	r6, [sp, #112]	; 0x70
   1288c:	ldr	r0, [sp, #220]	; 0xdc
   12890:	mov	r1, r4
   12894:	adds	r6, r6, r8
   12898:	adc	r7, r7, r9
   1289c:	cmp	r9, r7
   128a0:	cmpeq	r8, r6
   128a4:	mla	fp, r0, r3, fp
   128a8:	movls	r4, #0
   128ac:	movhi	r4, #1
   128b0:	mov	r0, #0
   128b4:	adds	r0, r0, r5
   128b8:	adc	r1, r1, #0
   128bc:	str	r4, [sp, #96]	; 0x60
   128c0:	adds	r4, r0, r6
   128c4:	adc	r5, r1, r7
   128c8:	strd	r4, [sp, #112]	; 0x70
   128cc:	ldrd	r0, [sp, #112]	; 0x70
   128d0:	mov	r5, #0
   128d4:	str	r5, [sp, #68]	; 0x44
   128d8:	cmp	r7, r1
   128dc:	cmpeq	r6, r0
   128e0:	ldr	r0, [sp, #220]	; 0xdc
   128e4:	ldrd	r6, [sp, #88]	; 0x58
   128e8:	movls	r1, #0
   128ec:	movhi	r1, #1
   128f0:	str	r1, [sp, #104]	; 0x68
   128f4:	ldr	r1, [sp, #36]	; 0x24
   128f8:	adds	sl, sl, r6
   128fc:	adc	fp, fp, r7
   12900:	adds	r4, ip, sl
   12904:	adc	r5, r5, fp
   12908:	umull	r0, r1, r1, r0
   1290c:	cmp	r7, r5
   12910:	cmpeq	r6, r4
   12914:	mov	r7, #0
   12918:	str	r7, [sp, #100]	; 0x64
   1291c:	str	r7, [sp, #108]	; 0x6c
   12920:	strd	r0, [sp, #56]	; 0x38
   12924:	bls	12934 <__assert_fail@plt+0xd08>
   12928:	adds	r0, r0, #0
   1292c:	adc	r1, r1, #1
   12930:	strd	r0, [sp, #56]	; 0x38
   12934:	ldr	r1, [sp, #212]	; 0xd4
   12938:	mov	r6, #0
   1293c:	ldr	r7, [sp, #36]	; 0x24
   12940:	ldr	ip, [sp, #40]	; 0x28
   12944:	umull	r8, r9, r2, r1
   12948:	ldr	r0, [sp, #44]	; 0x2c
   1294c:	ldr	r1, [sp, #40]	; 0x28
   12950:	umull	sl, fp, r7, ip
   12954:	str	r6, [sp, #20]
   12958:	mul	ip, r2, r0
   1295c:	adds	r8, r8, sl
   12960:	mla	ip, r1, r3, ip
   12964:	str	r5, [sp, #16]
   12968:	umull	r6, r7, r2, r1
   1296c:	ldr	r1, [sp, #212]	; 0xd4
   12970:	ldr	r2, [sp, #44]	; 0x2c
   12974:	add	ip, ip, r7
   12978:	mla	r9, r1, r3, r9
   1297c:	ldr	r3, [sp, #36]	; 0x24
   12980:	mov	r1, #0
   12984:	mla	fp, r3, r2, fp
   12988:	mov	r3, r4
   1298c:	mov	r2, r1
   12990:	adc	r9, r9, fp
   12994:	adds	r0, ip, r8
   12998:	ldr	ip, [sp, #136]	; 0x88
   1299c:	adc	r1, r1, r9
   129a0:	adds	r4, r2, ip
   129a4:	ldr	r2, [sp, #212]	; 0xd4
   129a8:	adc	r5, r3, #0
   129ac:	ldr	r3, [sp, #36]	; 0x24
   129b0:	cmp	fp, r1
   129b4:	cmpeq	sl, r0
   129b8:	umull	r2, r3, r3, r2
   129bc:	strd	r2, [sp, #88]	; 0x58
   129c0:	bls	129d0 <__assert_fail@plt+0xda4>
   129c4:	adds	r2, r2, #0
   129c8:	adc	r3, r3, #1
   129cc:	strd	r2, [sp, #88]	; 0x58
   129d0:	ldrd	sl, [sp, #112]	; 0x70
   129d4:	ldr	r3, [sp, #84]	; 0x54
   129d8:	adds	sl, sl, r4
   129dc:	str	r1, [sp, #32]
   129e0:	adc	fp, fp, r5
   129e4:	strd	sl, [sp]
   129e8:	mul	ip, sl, r3
   129ec:	ldr	r2, [sp]
   129f0:	ldr	sl, [sp, #80]	; 0x50
   129f4:	umull	r8, r9, r2, sl
   129f8:	mla	ip, sl, fp, ip
   129fc:	mov	fp, #0
   12a00:	adds	sl, fp, r6
   12a04:	str	fp, [sp, #36]	; 0x24
   12a08:	adc	fp, r0, #0
   12a0c:	ldrd	r0, [sp]
   12a10:	ldr	r6, [sp, #8]
   12a14:	add	ip, ip, r9
   12a18:	cmp	r1, r5
   12a1c:	cmpeq	r0, r4
   12a20:	ldrd	r4, [sp, #72]	; 0x48
   12a24:	strd	sl, [sp, #80]	; 0x50
   12a28:	mov	r2, r8
   12a2c:	movcs	r3, #0
   12a30:	movcc	r3, #1
   12a34:	adds	r0, sl, r4
   12a38:	adc	r1, fp, r5
   12a3c:	ldrd	sl, [sp, #24]
   12a40:	umull	r4, r5, ip, r6
   12a44:	ldr	r6, [sp, #236]	; 0xec
   12a48:	adds	r0, r0, sl
   12a4c:	str	r3, [sp, #112]	; 0x70
   12a50:	adc	r1, r1, fp
   12a54:	mov	r3, #0
   12a58:	umull	sl, fp, r8, r6
   12a5c:	ldrd	r6, [sp, #120]	; 0x78
   12a60:	adds	r6, r6, r0
   12a64:	adc	r7, r7, r1
   12a68:	strd	r6, [sp, #24]
   12a6c:	ldr	r7, [sp, #12]
   12a70:	ldrd	r0, [sp, #24]
   12a74:	mul	r8, r8, r7
   12a78:	ldrd	r6, [sp, #64]	; 0x40
   12a7c:	adds	r0, r0, r6
   12a80:	adc	r1, r1, r7
   12a84:	ldr	r7, [sp, #8]
   12a88:	mla	r8, r7, r3, r8
   12a8c:	ldrd	r6, [sp, #96]	; 0x60
   12a90:	adds	r0, r0, r6
   12a94:	adc	r1, r1, r7
   12a98:	ldr	r7, [sp, #8]
   12a9c:	umull	r6, r7, r2, r7
   12aa0:	strd	r6, [sp, #72]	; 0x48
   12aa4:	ldrd	r6, [sp, #104]	; 0x68
   12aa8:	adds	r0, r0, r6
   12aac:	adc	r1, r1, r7
   12ab0:	ldr	r7, [sp, #236]	; 0xec
   12ab4:	mla	fp, r7, r3, fp
   12ab8:	ldrd	r6, [sp, #128]	; 0x80
   12abc:	adds	r6, r6, r0
   12ac0:	adc	r7, r7, r1
   12ac4:	strd	r6, [sp, #24]
   12ac8:	ldr	r7, [sp, #12]
   12acc:	ldrd	r0, [sp, #16]
   12ad0:	ldr	r6, [sp, #112]	; 0x70
   12ad4:	mla	r5, ip, r7, r5
   12ad8:	ldr	r7, [sp, #76]	; 0x4c
   12adc:	adds	r0, r0, r6
   12ae0:	add	r8, r8, r7
   12ae4:	ldrd	r6, [sp, #56]	; 0x38
   12ae8:	adc	r1, r1, #0
   12aec:	str	r8, [sp, #40]	; 0x28
   12af0:	adds	r6, r6, r0
   12af4:	adc	r7, r7, r1
   12af8:	strd	r6, [sp, #56]	; 0x38
   12afc:	ldrd	r6, [sp, #80]	; 0x50
   12b00:	ldrd	r0, [sp, #24]
   12b04:	cmp	r1, r7
   12b08:	cmpeq	r0, r6
   12b0c:	movcs	r7, #0
   12b10:	movcc	r7, #1
   12b14:	adds	r6, r4, sl
   12b18:	mov	sl, #0
   12b1c:	str	sl, [sp, #44]	; 0x2c
   12b20:	ldrd	r0, [sp, #40]	; 0x28
   12b24:	str	r7, [sp, #16]
   12b28:	adc	r7, r5, fp
   12b2c:	adds	r6, r6, r0
   12b30:	str	sl, [sp, #20]
   12b34:	adc	r7, r7, r1
   12b38:	cmp	r5, r7
   12b3c:	cmpeq	r4, r6
   12b40:	ldr	r5, [sp, #236]	; 0xec
   12b44:	umull	r4, r5, ip, r5
   12b48:	strd	r4, [sp, #40]	; 0x28
   12b4c:	bls	12b5c <__assert_fail@plt+0xf30>
   12b50:	adds	r4, r4, #0
   12b54:	adc	r5, r5, #1
   12b58:	strd	r4, [sp, #40]	; 0x28
   12b5c:	ldr	fp, [sp, #48]	; 0x30
   12b60:	ldr	sl, [sp, #228]	; 0xe4
   12b64:	ldr	r1, [sp, #52]	; 0x34
   12b68:	umull	r8, r9, ip, fp
   12b6c:	ldr	r0, [sp, #228]	; 0xe4
   12b70:	umull	r4, r5, r2, sl
   12b74:	str	r7, [sp, #8]
   12b78:	mul	sl, r2, r1
   12b7c:	mov	r1, #0
   12b80:	str	r1, [sp, #12]
   12b84:	adds	r4, r4, r8
   12b88:	ldr	r1, [sp, #52]	; 0x34
   12b8c:	umull	r6, r7, r2, fp
   12b90:	ldr	r2, [sp, #228]	; 0xe4
   12b94:	mla	sl, fp, r3, sl
   12b98:	mla	r9, ip, r1, r9
   12b9c:	mov	r1, #0
   12ba0:	mla	r5, r0, r3, r5
   12ba4:	add	sl, sl, r7
   12ba8:	mov	r0, sl
   12bac:	adc	r5, r5, r9
   12bb0:	adds	r4, r4, r0
   12bb4:	adc	r5, r5, r1
   12bb8:	cmp	r9, r5
   12bbc:	cmpeq	r8, r4
   12bc0:	umull	sl, fp, ip, r2
   12bc4:	bls	12bd0 <__assert_fail@plt+0xfa4>
   12bc8:	adds	sl, sl, #0
   12bcc:	adc	fp, fp, #1
   12bd0:	ldm	sp, {r3, ip}
   12bd4:	mov	r2, #0
   12bd8:	ldrd	r0, [sp, #24]
   12bdc:	orrs	r3, r3, ip
   12be0:	mov	r3, r4
   12be4:	moveq	ip, #0
   12be8:	movne	ip, #1
   12bec:	adds	r0, r0, ip
   12bf0:	adc	r1, r1, #0
   12bf4:	strd	r0, [sp]
   12bf8:	mov	r8, r0
   12bfc:	mov	r9, r1
   12c00:	ldrd	r0, [sp, #8]
   12c04:	adds	r8, r8, r0
   12c08:	mov	r0, r5
   12c0c:	ldrd	r4, [sp, #40]	; 0x28
   12c10:	adc	r9, r9, r1
   12c14:	adds	r8, r8, r4
   12c18:	adc	r9, r9, r5
   12c1c:	ldrd	r4, [sp, #32]
   12c20:	adds	r0, r0, r4
   12c24:	adc	r1, r2, r5
   12c28:	ldrd	r4, [sp, #56]	; 0x38
   12c2c:	adds	r4, r4, r8
   12c30:	adc	r5, r5, r9
   12c34:	adds	r2, r2, r6
   12c38:	ldrd	r6, [sp, #16]
   12c3c:	adc	r3, r3, #0
   12c40:	adds	r6, r6, r0
   12c44:	adc	r7, r7, r1
   12c48:	adds	r0, r2, r4
   12c4c:	adc	r1, r3, r5
   12c50:	ldrd	r2, [sp, #88]	; 0x58
   12c54:	adds	r6, r6, r2
   12c58:	adc	r7, r7, r3
   12c5c:	ldrd	r2, [sp]
   12c60:	cmp	r9, r3
   12c64:	cmpeq	r8, r2
   12c68:	movcs	r3, #0
   12c6c:	movcc	r3, #1
   12c70:	adds	r6, r6, r3
   12c74:	adc	r7, r7, #0
   12c78:	cmp	r9, r5
   12c7c:	cmpeq	r8, r4
   12c80:	movls	r3, #0
   12c84:	movhi	r3, #1
   12c88:	adds	r6, r6, r3
   12c8c:	adc	r7, r7, #0
   12c90:	cmp	r5, r1
   12c94:	cmpeq	r4, r0
   12c98:	ldrd	r4, [sp, #224]	; 0xe0
   12c9c:	movls	r3, #0
   12ca0:	movhi	r3, #1
   12ca4:	adds	r6, r6, r3
   12ca8:	adc	r7, r7, #0
   12cac:	adds	sl, sl, r6
   12cb0:	adc	fp, fp, r7
   12cb4:	cmp	r5, fp
   12cb8:	cmpeq	r4, sl
   12cbc:	bcs	12d08 <__assert_fail@plt+0x10dc>
   12cc0:	ldrd	r2, [sp, #232]	; 0xe8
   12cc4:	ldrd	r6, [sp, #232]	; 0xe8
   12cc8:	cmp	r3, r1
   12ccc:	cmpeq	r2, r0
   12cd0:	ldrd	r4, [sp, #224]	; 0xe0
   12cd4:	mov	r3, #0
   12cd8:	movls	r2, #0
   12cdc:	movhi	r2, #1
   12ce0:	subs	r0, r0, r6
   12ce4:	sbc	r1, r1, r7
   12ce8:	ldr	r7, [sp, #148]	; 0x94
   12cec:	subs	sl, sl, r4
   12cf0:	sbc	fp, fp, r5
   12cf4:	subs	sl, sl, r2
   12cf8:	sbc	fp, fp, r3
   12cfc:	strd	sl, [r7]
   12d00:	add	sp, sp, #164	; 0xa4
   12d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d08:	cmp	fp, r5
   12d0c:	cmpeq	sl, r4
   12d10:	ldrd	r6, [sp, #232]	; 0xe8
   12d14:	movne	r3, #0
   12d18:	moveq	r3, #1
   12d1c:	cmp	r7, r1
   12d20:	cmpeq	r6, r0
   12d24:	movhi	r3, #0
   12d28:	andls	r3, r3, #1
   12d2c:	cmp	r3, #0
   12d30:	bne	12cc0 <__assert_fail@plt+0x1094>
   12d34:	ldr	r7, [sp, #148]	; 0x94
   12d38:	strd	sl, [r7]
   12d3c:	add	sp, sp, #164	; 0xa4
   12d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d44:	ldr	r0, [pc, #88]	; 12da4 <__assert_fail@plt+0x1178>
   12d48:	mov	r2, #1008	; 0x3f0
   12d4c:	ldr	r1, [pc, #84]	; 12da8 <__assert_fail@plt+0x117c>
   12d50:	ldr	r3, [pc, #84]	; 12dac <__assert_fail@plt+0x1180>
   12d54:	add	r0, pc, r0
   12d58:	add	r1, pc, r1
   12d5c:	add	r3, pc, r3
   12d60:	bl	11c2c <__assert_fail@plt>
   12d64:	ldr	r0, [pc, #68]	; 12db0 <__assert_fail@plt+0x1184>
   12d68:	movw	r2, #1007	; 0x3ef
   12d6c:	ldr	r1, [pc, #64]	; 12db4 <__assert_fail@plt+0x1188>
   12d70:	ldr	r3, [pc, #64]	; 12db8 <__assert_fail@plt+0x118c>
   12d74:	add	r0, pc, r0
   12d78:	add	r1, pc, r1
   12d7c:	add	r3, pc, r3
   12d80:	bl	11c2c <__assert_fail@plt>
   12d84:	ldr	r0, [pc, #48]	; 12dbc <__assert_fail@plt+0x1190>
   12d88:	movw	r2, #1006	; 0x3ee
   12d8c:	ldr	r1, [pc, #44]	; 12dc0 <__assert_fail@plt+0x1194>
   12d90:	ldr	r3, [pc, #44]	; 12dc4 <__assert_fail@plt+0x1198>
   12d94:	add	r0, pc, r0
   12d98:	add	r1, pc, r1
   12d9c:	add	r3, pc, r3
   12da0:	bl	11c2c <__assert_fail@plt>
   12da4:	andeq	r3, r1, r0, asr #2
   12da8:	andeq	r3, r1, r0, lsl #2
   12dac:	andeq	pc, r0, r4, lsr #30
   12db0:	strdeq	r3, [r1], -r4
   12db4:	andeq	r3, r1, r0, ror #1
   12db8:	andeq	pc, r0, r4, lsl #30
   12dbc:	muleq	r1, r8, r0
   12dc0:	andeq	r3, r1, r0, asr #1
   12dc4:	andeq	pc, r0, r4, ror #29
   12dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dcc:	sub	sp, sp, #108	; 0x6c
   12dd0:	ldrd	r8, [r3]
   12dd4:	mov	sl, r0
   12dd8:	ldr	ip, [sp, #152]	; 0x98
   12ddc:	mov	fp, #64	; 0x40
   12de0:	str	r2, [sp, #100]	; 0x64
   12de4:	strd	r8, [sp, #64]	; 0x40
   12de8:	ldrd	r8, [r3, #8]
   12dec:	ldrd	r4, [r1]
   12df0:	ldrd	r6, [r1, #8]
   12df4:	strd	r8, [sp, #72]	; 0x48
   12df8:	ldrd	r0, [ip]
   12dfc:	ldrd	r8, [r2]
   12e00:	ldrd	r2, [ip, #8]
   12e04:	strd	r0, [sp, #88]	; 0x58
   12e08:	strd	r8, [sp, #56]	; 0x38
   12e0c:	strd	r2, [sp, #80]	; 0x50
   12e10:	b	12e6c <__assert_fail@plt+0x1240>
   12e14:	ldrd	r8, [sp, #72]	; 0x48
   12e18:	mov	r2, r6
   12e1c:	strd	r4, [sp]
   12e20:	mov	r3, r7
   12e24:	strd	r4, [sp, #16]
   12e28:	mov	r0, sl
   12e2c:	ldrd	r4, [sp, #56]	; 0x38
   12e30:	strd	r8, [sp, #24]
   12e34:	ldrd	r8, [sp, #144]	; 0x90
   12e38:	lsrs	r5, r5, #1
   12e3c:	rrx	r4, r4
   12e40:	strd	r4, [sp, #56]	; 0x38
   12e44:	ldrd	r4, [sp, #64]	; 0x40
   12e48:	strd	r6, [sp, #8]
   12e4c:	strd	r8, [sp, #40]	; 0x28
   12e50:	strd	r4, [sp, #32]
   12e54:	bl	124c4 <__assert_fail@plt+0x898>
   12e58:	subs	fp, fp, #1
   12e5c:	ldrd	r6, [sl]
   12e60:	mov	r4, r0
   12e64:	mov	r5, r1
   12e68:	beq	12ecc <__assert_fail@plt+0x12a0>
   12e6c:	ldrd	r8, [sp, #56]	; 0x38
   12e70:	mov	r2, #1
   12e74:	mov	r3, #0
   12e78:	and	r2, r2, r8
   12e7c:	and	r3, r3, r9
   12e80:	orrs	r9, r2, r3
   12e84:	beq	12e14 <__assert_fail@plt+0x11e8>
   12e88:	ldrd	r8, [sp, #88]	; 0x58
   12e8c:	mov	r0, sl
   12e90:	ldrd	r2, [sp, #80]	; 0x50
   12e94:	strd	r6, [sp, #8]
   12e98:	strd	r8, [sp]
   12e9c:	ldrd	r8, [sp, #72]	; 0x48
   12ea0:	strd	r4, [sp, #16]
   12ea4:	strd	r8, [sp, #24]
   12ea8:	ldrd	r8, [sp, #64]	; 0x40
   12eac:	strd	r8, [sp, #32]
   12eb0:	ldrd	r8, [sp, #144]	; 0x90
   12eb4:	strd	r8, [sp, #40]	; 0x28
   12eb8:	bl	124c4 <__assert_fail@plt+0x898>
   12ebc:	ldrd	r8, [sl]
   12ec0:	strd	r8, [sp, #80]	; 0x50
   12ec4:	strd	r0, [sp, #88]	; 0x58
   12ec8:	b	12e14 <__assert_fail@plt+0x11e8>
   12ecc:	ldr	fp, [sp, #100]	; 0x64
   12ed0:	ldrd	r8, [fp, #8]
   12ed4:	orrs	r0, r8, r9
   12ed8:	beq	12fa4 <__assert_fail@plt+0x1378>
   12edc:	mov	ip, sl
   12ee0:	b	12f3c <__assert_fail@plt+0x1310>
   12ee4:	strd	r4, [sp]
   12ee8:	mov	r0, ip
   12eec:	strd	r4, [sp, #16]
   12ef0:	mov	r2, r6
   12ef4:	ldrd	r4, [sp, #72]	; 0x48
   12ef8:	mov	r3, r7
   12efc:	ldrd	sl, [sp, #64]	; 0x40
   12f00:	lsrs	r9, r9, #1
   12f04:	rrx	r8, r8
   12f08:	strd	r6, [sp, #8]
   12f0c:	strd	r4, [sp, #24]
   12f10:	ldrd	r4, [sp, #144]	; 0x90
   12f14:	strd	sl, [sp, #32]
   12f18:	str	ip, [sp, #52]	; 0x34
   12f1c:	strd	r4, [sp, #40]	; 0x28
   12f20:	bl	124c4 <__assert_fail@plt+0x898>
   12f24:	ldr	ip, [sp, #52]	; 0x34
   12f28:	orrs	sl, r8, r9
   12f2c:	ldrd	r6, [ip]
   12f30:	mov	r4, r0
   12f34:	mov	r5, r1
   12f38:	beq	12fa0 <__assert_fail@plt+0x1374>
   12f3c:	mov	r2, #1
   12f40:	mov	r3, #0
   12f44:	and	r2, r2, r8
   12f48:	and	r3, r3, r9
   12f4c:	orrs	r1, r2, r3
   12f50:	beq	12ee4 <__assert_fail@plt+0x12b8>
   12f54:	ldrd	sl, [sp, #88]	; 0x58
   12f58:	mov	r0, ip
   12f5c:	ldrd	r2, [sp, #80]	; 0x50
   12f60:	strd	r6, [sp, #8]
   12f64:	strd	sl, [sp]
   12f68:	ldrd	sl, [sp, #72]	; 0x48
   12f6c:	strd	r4, [sp, #16]
   12f70:	str	ip, [sp, #52]	; 0x34
   12f74:	strd	sl, [sp, #24]
   12f78:	ldrd	sl, [sp, #64]	; 0x40
   12f7c:	strd	sl, [sp, #32]
   12f80:	ldrd	sl, [sp, #144]	; 0x90
   12f84:	strd	sl, [sp, #40]	; 0x28
   12f88:	bl	124c4 <__assert_fail@plt+0x898>
   12f8c:	ldr	ip, [sp, #52]	; 0x34
   12f90:	ldrd	sl, [ip]
   12f94:	strd	sl, [sp, #80]	; 0x50
   12f98:	strd	r0, [sp, #88]	; 0x58
   12f9c:	b	12ee4 <__assert_fail@plt+0x12b8>
   12fa0:	mov	sl, ip
   12fa4:	ldrd	r4, [sp, #80]	; 0x50
   12fa8:	ldrd	r0, [sp, #88]	; 0x58
   12fac:	strd	r4, [sl]
   12fb0:	add	sp, sp, #108	; 0x6c
   12fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fb8:	ldr	ip, [pc, #536]	; 131d8 <__assert_fail@plt+0x15ac>
   12fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fc0:	sub	sp, sp, #132	; 0x84
   12fc4:	ldr	lr, [pc, #528]	; 131dc <__assert_fail@plt+0x15b0>
   12fc8:	add	ip, pc, ip
   12fcc:	strd	r2, [sp, #56]	; 0x38
   12fd0:	add	r4, sp, #112	; 0x70
   12fd4:	ldrd	sl, [sp, #56]	; 0x38
   12fd8:	mov	r3, r0
   12fdc:	str	r4, [sp, #68]	; 0x44
   12fe0:	mov	r6, r0
   12fe4:	ldr	lr, [ip, lr]
   12fe8:	mov	r0, r4
   12fec:	ldr	r8, [sp, #180]	; 0xb4
   12ff0:	strd	sl, [sp]
   12ff4:	str	lr, [sp, #108]	; 0x6c
   12ff8:	ldr	lr, [lr]
   12ffc:	ldr	r2, [sp, #172]	; 0xac
   13000:	ldr	r1, [sp, #168]	; 0xa8
   13004:	str	r8, [sp, #8]
   13008:	str	lr, [sp, #124]	; 0x7c
   1300c:	bl	12dc8 <__assert_fail@plt+0x119c>
   13010:	ldrd	r2, [sp, #112]	; 0x70
   13014:	strd	r2, [sp, #48]	; 0x30
   13018:	mov	r4, r0
   1301c:	mov	r5, r1
   13020:	ldrd	r0, [r8]
   13024:	cmp	r5, r1
   13028:	cmpeq	r4, r0
   1302c:	beq	131b0 <__assert_fail@plt+0x1584>
   13030:	ldrd	sl, [r8, #8]
   13034:	strd	sl, [sp, #80]	; 0x50
   13038:	ldrd	r2, [r6]
   1303c:	ldrd	sl, [r6, #8]
   13040:	strd	r2, [sp, #88]	; 0x58
   13044:	subs	r2, r2, r0
   13048:	sbc	r3, r3, r1
   1304c:	strd	r2, [sp, #72]	; 0x48
   13050:	ldrd	r2, [sp, #80]	; 0x50
   13054:	strd	sl, [sp, #96]	; 0x60
   13058:	subs	sl, sl, r2
   1305c:	sbc	fp, fp, r3
   13060:	strd	sl, [sp, #80]	; 0x50
   13064:	ldrd	sl, [sp, #88]	; 0x58
   13068:	cmp	r1, fp
   1306c:	cmpeq	r0, sl
   13070:	ldrd	sl, [sp, #80]	; 0x50
   13074:	movls	r1, #0
   13078:	movhi	r1, #1
   1307c:	subs	sl, sl, r1
   13080:	sbc	fp, fp, #0
   13084:	ldrd	r0, [sp, #48]	; 0x30
   13088:	strd	sl, [sp, #80]	; 0x50
   1308c:	cmp	r1, fp
   13090:	cmpeq	r0, sl
   13094:	ldrd	sl, [sp, #72]	; 0x48
   13098:	movne	r3, #0
   1309c:	moveq	r3, #1
   130a0:	cmp	r5, fp
   130a4:	cmpeq	r4, sl
   130a8:	movne	r3, #0
   130ac:	andeq	r3, r3, #1
   130b0:	cmp	r3, #0
   130b4:	str	r3, [sp, #104]	; 0x68
   130b8:	bne	131c8 <__assert_fail@plt+0x159c>
   130bc:	ldr	fp, [sp, #176]	; 0xb0
   130c0:	cmp	fp, #1
   130c4:	bls	13190 <__assert_fail@plt+0x1564>
   130c8:	ldr	r9, [sp, #88]	; 0x58
   130cc:	mov	r7, #1
   130d0:	ldr	lr, [sp, #92]	; 0x5c
   130d4:	ldr	ip, [sp, #96]	; 0x60
   130d8:	ldr	r1, [sp, #100]	; 0x64
   130dc:	ldrd	sl, [sp, #48]	; 0x30
   130e0:	b	13100 <__assert_fail@plt+0x14d4>
   130e4:	ldr	ip, [sp, #176]	; 0xb0
   130e8:	add	r7, r7, #1
   130ec:	cmp	r7, ip
   130f0:	beq	13190 <__assert_fail@plt+0x1564>
   130f4:	ldr	ip, [r6, #8]
   130f8:	ldr	r1, [r6, #12]
   130fc:	ldm	r6, {r9, lr}
   13100:	strd	r4, [sp]
   13104:	mov	r3, fp
   13108:	strd	r4, [sp, #16]
   1310c:	mov	r2, sl
   13110:	ldrd	r4, [sp, #56]	; 0x38
   13114:	add	r0, sp, #112	; 0x70
   13118:	strd	sl, [sp, #8]
   1311c:	str	ip, [sp, #24]
   13120:	strd	r4, [sp, #40]	; 0x28
   13124:	str	r1, [sp, #28]
   13128:	str	r9, [sp, #32]
   1312c:	str	lr, [sp, #36]	; 0x24
   13130:	bl	124c4 <__assert_fail@plt+0x898>
   13134:	ldrd	sl, [sp, #72]	; 0x48
   13138:	mov	r4, r0
   1313c:	mov	r5, r1
   13140:	ldrd	r0, [sp, #80]	; 0x50
   13144:	cmp	fp, r5
   13148:	cmpeq	sl, r4
   1314c:	ldrd	sl, [sp, #112]	; 0x70
   13150:	movne	r3, #0
   13154:	moveq	r3, #1
   13158:	cmp	fp, r1
   1315c:	cmpeq	sl, r0
   13160:	movne	r3, #0
   13164:	andeq	r3, r3, #1
   13168:	cmp	r3, #0
   1316c:	bne	131c8 <__assert_fail@plt+0x159c>
   13170:	ldrd	r2, [r8]
   13174:	cmp	r5, r3
   13178:	cmpeq	r4, r2
   1317c:	bne	130e4 <__assert_fail@plt+0x14b8>
   13180:	ldrd	r2, [r8, #8]
   13184:	cmp	r3, fp
   13188:	cmpeq	r2, sl
   1318c:	bne	130e4 <__assert_fail@plt+0x14b8>
   13190:	ldr	r4, [sp, #108]	; 0x6c
   13194:	ldr	r2, [sp, #124]	; 0x7c
   13198:	ldr	r0, [sp, #104]	; 0x68
   1319c:	ldr	r3, [r4]
   131a0:	cmp	r2, r3
   131a4:	bne	131d4 <__assert_fail@plt+0x15a8>
   131a8:	add	sp, sp, #132	; 0x84
   131ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131b0:	ldrd	r2, [r8, #8]
   131b4:	ldrd	sl, [sp, #48]	; 0x30
   131b8:	cmp	r3, fp
   131bc:	cmpeq	r2, sl
   131c0:	strdne	r2, [sp, #80]	; 0x50
   131c4:	bne	13038 <__assert_fail@plt+0x140c>
   131c8:	mov	fp, #1
   131cc:	str	fp, [sp, #104]	; 0x68
   131d0:	b	13190 <__assert_fail@plt+0x1564>
   131d4:	bl	118e4 <__stack_chk_fail@plt>
   131d8:	andeq	r4, r2, r0, lsr r0
   131dc:	andeq	r0, r0, ip, lsl #3
   131e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131e4:	mov	r4, r0
   131e8:	sub	sp, sp, #28
   131ec:	mov	r5, r1
   131f0:	orrs	r6, r4, r5
   131f4:	strd	r2, [sp, #8]
   131f8:	beq	13338 <__assert_fail@plt+0x170c>
   131fc:	mov	r3, #0
   13200:	mov	r2, #51712	; 0xca00
   13204:	movt	r2, #15258	; 0x3b9a
   13208:	bl	22264 <close_stdout@@Base+0x8020>
   1320c:	mov	r2, #51712	; 0xca00
   13210:	mov	r3, #0
   13214:	movt	r2, #15258	; 0x3b9a
   13218:	strd	r0, [sp, #16]
   1321c:	mov	r0, r4
   13220:	mov	r1, r5
   13224:	bl	22264 <close_stdout@@Base+0x8020>
   13228:	mov	r0, #51712	; 0xca00
   1322c:	movt	r0, #15258	; 0x3b9a
   13230:	mov	r1, #0
   13234:	mov	ip, #64	; 0x40
   13238:	mov	r8, r2
   1323c:	mov	r9, r3
   13240:	mov	r2, #0
   13244:	mov	r3, #0
   13248:	mov	r4, r2
   1324c:	mov	r5, r3
   13250:	lsrs	r5, r5, #1
   13254:	rrx	r4, r4
   13258:	lsl	fp, r0, #31
   1325c:	lsrs	r1, r1, #1
   13260:	rrx	r0, r0
   13264:	adds	r6, r2, r2
   13268:	adc	r7, r3, r3
   1326c:	cmp	r1, r9
   13270:	cmpeq	r0, r8
   13274:	mov	sl, #0
   13278:	strd	r6, [sp]
   1327c:	mov	r2, r6
   13280:	mov	r3, r7
   13284:	orr	r4, r4, sl
   13288:	orr	r5, r5, fp
   1328c:	bcc	132bc <__assert_fail@plt+0x1690>
   13290:	ldrd	r6, [sp, #8]
   13294:	cmp	r7, r5
   13298:	cmpeq	r6, r4
   1329c:	movcc	lr, #0
   132a0:	movcs	lr, #1
   132a4:	cmp	r9, r1
   132a8:	cmpeq	r8, r0
   132ac:	movne	lr, #0
   132b0:	andeq	lr, lr, #1
   132b4:	cmp	lr, sl
   132b8:	beq	1330c <__assert_fail@plt+0x16e0>
   132bc:	ldrd	r2, [sp]
   132c0:	mov	lr, #0
   132c4:	ldrd	r6, [sp, #8]
   132c8:	adds	r2, r2, #1
   132cc:	str	lr, [sp, #4]
   132d0:	adc	r3, r3, #0
   132d4:	cmp	r7, r5
   132d8:	cmpeq	r6, r4
   132dc:	movcs	r7, #0
   132e0:	movcc	r7, #1
   132e4:	str	r7, [sp]
   132e8:	ldrd	r6, [sp, #8]
   132ec:	subs	r8, r8, r0
   132f0:	sbc	r9, r9, r1
   132f4:	subs	r6, r6, r4
   132f8:	sbc	r7, r7, r5
   132fc:	strd	r6, [sp, #8]
   13300:	ldrd	r6, [sp]
   13304:	subs	r8, r8, r6
   13308:	sbc	r9, r9, r7
   1330c:	subs	ip, ip, #1
   13310:	bne	13250 <__assert_fail@plt+0x1624>
   13314:	ldrd	r0, [sp, #16]
   13318:	bl	131e0 <__assert_fail@plt+0x15b4>
   1331c:	ldr	r1, [pc, #44]	; 13350 <__assert_fail@plt+0x1724>
   13320:	ldr	r2, [sp, #8]
   13324:	mov	r0, #1
   13328:	add	r1, pc, r1
   1332c:	add	sp, sp, #28
   13330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13334:	b	11b00 <__printf_chk@plt>
   13338:	ldr	r1, [pc, #20]	; 13354 <__assert_fail@plt+0x1728>
   1333c:	mov	r0, #1
   13340:	add	r1, pc, r1
   13344:	add	sp, sp, #28
   13348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1334c:	b	11b00 <__printf_chk@plt>
   13350:	andeq	r2, r1, r0, lsr #23
   13354:	andeq	r2, r1, r0, lsl #23
   13358:	push	{r0, r1, r2, r3}
   1335c:	ldr	r3, [pc, #108]	; 133d0 <__assert_fail@plt+0x17a4>
   13360:	ldr	r0, [pc, #108]	; 133d4 <__assert_fail@plt+0x17a8>
   13364:	add	r3, pc, r3
   13368:	ldr	r2, [pc, #104]	; 133d8 <__assert_fail@plt+0x17ac>
   1336c:	push	{r4, lr}
   13370:	add	r2, pc, r2
   13374:	ldr	r4, [r3, r0]
   13378:	sub	sp, sp, #8
   1337c:	ldrb	r0, [r2]
   13380:	ldr	r1, [sp, #16]
   13384:	ldr	r2, [r4]
   13388:	cmp	r0, #0
   1338c:	str	r2, [sp, #4]
   13390:	beq	133ac <__assert_fail@plt+0x1780>
   13394:	ldr	r0, [pc, #64]	; 133dc <__assert_fail@plt+0x17b0>
   13398:	add	r2, sp, #20
   1339c:	str	r2, [sp]
   133a0:	ldr	r3, [r3, r0]
   133a4:	ldr	r0, [r3]
   133a8:	bl	1db04 <close_stdout@@Base+0x38c0>
   133ac:	ldr	r2, [sp, #4]
   133b0:	ldr	r3, [r4]
   133b4:	cmp	r2, r3
   133b8:	bne	133cc <__assert_fail@plt+0x17a0>
   133bc:	add	sp, sp, #8
   133c0:	pop	{r4, lr}
   133c4:	add	sp, sp, #16
   133c8:	bx	lr
   133cc:	bl	118e4 <__stack_chk_fail@plt>
   133d0:	muleq	r2, r4, ip
   133d4:	andeq	r0, r0, ip, lsl #3
   133d8:	andeq	r3, r2, r0, lsr #29
   133dc:	muleq	r0, r8, r1
   133e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e4:	mov	r8, r0
   133e8:	ldr	fp, [r0, #8]
   133ec:	sub	sp, sp, #12
   133f0:	mov	r7, r1
   133f4:	ldr	sl, [r0]
   133f8:	subs	r6, fp, #1
   133fc:	ldr	r9, [r0, #4]
   13400:	bmi	13450 <__assert_fail@plt+0x1824>
   13404:	add	r5, fp, fp, lsl #1
   13408:	mov	r4, r6
   1340c:	add	r5, sl, r5, lsl #2
   13410:	sub	r5, r5, #12
   13414:	b	13420 <__assert_fail@plt+0x17f4>
   13418:	subs	r4, r4, #1
   1341c:	bmi	13454 <__assert_fail@plt+0x1828>
   13420:	mov	r0, r5
   13424:	mov	r1, r7
   13428:	bl	11b6c <__gmpz_cmp@plt>
   1342c:	sub	r5, r5, #12
   13430:	cmp	r0, #0
   13434:	bgt	13418 <__assert_fail@plt+0x17ec>
   13438:	bne	13454 <__assert_fail@plt+0x1828>
   1343c:	ldr	r3, [r9, r4, lsl #2]
   13440:	add	r3, r3, #1
   13444:	str	r3, [r9, r4, lsl #2]
   13448:	add	sp, sp, #12
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13450:	mov	r4, r6
   13454:	add	r5, fp, #1
   13458:	mov	r0, sl
   1345c:	add	r3, r5, r5, lsl #1
   13460:	lsl	fp, r5, #2
   13464:	lsl	r3, r3, #2
   13468:	str	r3, [sp]
   1346c:	mov	r1, r3
   13470:	bl	1d85c <close_stdout@@Base+0x3618>
   13474:	mov	r1, fp
   13478:	mov	sl, r0
   1347c:	mov	r0, r9
   13480:	bl	1d85c <close_stdout@@Base+0x3618>
   13484:	ldr	r3, [sp]
   13488:	sub	r3, r3, #12
   1348c:	add	r3, sl, r3
   13490:	str	r3, [sp]
   13494:	str	r0, [sp, #4]
   13498:	mov	r0, r3
   1349c:	bl	11be4 <__gmpz_init@plt>
   134a0:	cmp	r6, r4
   134a4:	ldr	r3, [sp]
   134a8:	ble	134e0 <__assert_fail@plt+0x18b4>
   134ac:	mov	r0, r3
   134b0:	ldr	r3, [sp, #4]
   134b4:	sub	fp, fp, #4
   134b8:	add	fp, r3, fp
   134bc:	sub	r9, r0, #12
   134c0:	sub	r6, r6, #1
   134c4:	mov	r1, r9
   134c8:	bl	11908 <__gmpz_set@plt>
   134cc:	ldr	r2, [fp, #-4]
   134d0:	cmp	r6, r4
   134d4:	mov	r0, r9
   134d8:	str	r2, [fp], #-4
   134dc:	bgt	134bc <__assert_fail@plt+0x1890>
   134e0:	add	r4, r4, #1
   134e4:	mov	r1, r7
   134e8:	add	r0, r4, r4, lsl #1
   134ec:	add	r0, sl, r0, lsl #2
   134f0:	bl	11908 <__gmpz_set@plt>
   134f4:	ldr	r2, [sp, #4]
   134f8:	mov	r3, #1
   134fc:	str	r3, [r2, r4, lsl #2]
   13500:	str	sl, [r8]
   13504:	stmib	r8, {r2, r5}
   13508:	add	sp, sp, #12
   1350c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13510:	push	{r3, r4, r5, r6, r7, lr}
   13514:	mov	r4, #0
   13518:	mov	r5, #-16777216	; 0xff000000
   1351c:	and	r2, r0, r4
   13520:	and	r3, r1, r5
   13524:	mov	r7, r1
   13528:	orrs	r1, r2, r3
   1352c:	mov	r6, r0
   13530:	mov	r2, r0
   13534:	mov	r3, r7
   13538:	mov	ip, #0
   1353c:	bne	13568 <__assert_fail@plt+0x193c>
   13540:	lsl	r1, r3, #8
   13544:	lsl	r0, r2, #8
   13548:	orr	r1, r1, r2, lsr #24
   1354c:	add	ip, ip, #8
   13550:	mov	r2, r0
   13554:	and	r0, r0, r4
   13558:	mov	r3, r1
   1355c:	and	r1, r1, r5
   13560:	orrs	lr, r0, r1
   13564:	beq	13540 <__assert_fail@plt+0x1914>
   13568:	cmp	r2, #0
   1356c:	sbcs	r1, r3, #0
   13570:	blt	1358c <__assert_fail@plt+0x1960>
   13574:	adds	r2, r2, r2
   13578:	add	ip, ip, #1
   1357c:	adc	r3, r3, r3
   13580:	cmp	r2, #0
   13584:	sbcs	lr, r3, #0
   13588:	bge	13574 <__assert_fail@plt+0x1948>
   1358c:	rsb	ip, ip, #65	; 0x41
   13590:	mov	r3, #1
   13594:	lsr	ip, ip, r3
   13598:	sub	r1, ip, #32
   1359c:	rsb	r2, ip, #32
   135a0:	lsl	r5, r3, r1
   135a4:	lsl	r4, r3, ip
   135a8:	orr	r5, r5, r3, lsr r2
   135ac:	b	135b8 <__assert_fail@plt+0x198c>
   135b0:	mov	r4, r0
   135b4:	mov	r5, r1
   135b8:	mov	r0, r6
   135bc:	mov	r1, r7
   135c0:	mov	r2, r4
   135c4:	mov	r3, r5
   135c8:	bl	22264 <close_stdout@@Base+0x8020>
   135cc:	adds	r0, r0, r4
   135d0:	adc	r1, r1, r5
   135d4:	lsrs	r1, r1, #1
   135d8:	rrx	r0, r0
   135dc:	cmp	r5, r1
   135e0:	cmpeq	r4, r0
   135e4:	bhi	135b0 <__assert_fail@plt+0x1984>
   135e8:	mov	r0, r4
   135ec:	mov	r1, r5
   135f0:	pop	{r3, r4, r5, r6, r7, pc}
   135f4:	orrs	ip, r2, r3
   135f8:	mov	r1, r0
   135fc:	push	{r4, r5, r6, r7, r8, lr}
   13600:	ldrd	r6, [sp, #24]
   13604:	beq	13640 <__assert_fail@plt+0x1a14>
   13608:	ldrd	r4, [r0, #8]
   1360c:	orrs	r0, r4, r5
   13610:	strdeq	r6, [r1]
   13614:	strdeq	r2, [r1, #8]
   13618:	popeq	{r4, r5, r6, r7, r8, pc}
   1361c:	ldr	r3, [pc, #52]	; 13658 <__assert_fail@plt+0x1a2c>
   13620:	mov	r2, #548	; 0x224
   13624:	ldr	r0, [pc, #48]	; 1365c <__assert_fail@plt+0x1a30>
   13628:	ldr	r1, [pc, #48]	; 13660 <__assert_fail@plt+0x1a34>
   1362c:	add	r3, pc, r3
   13630:	add	r0, pc, r0
   13634:	add	r3, r3, #12
   13638:	add	r1, pc, r1
   1363c:	bl	11c2c <__assert_fail@plt>
   13640:	mov	r2, r6
   13644:	mov	r3, r7
   13648:	mov	r1, #1
   1364c:	str	r1, [sp, #24]
   13650:	pop	{r4, r5, r6, r7, r8, lr}
   13654:	b	12364 <__assert_fail@plt+0x738>
   13658:	andeq	pc, r0, r4, asr r6	; <UNPREDICTABLE>
   1365c:	andeq	r2, r1, r0, lsr #17
   13660:	andeq	r2, r1, r0, lsr #16
   13664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13668:	sub	sp, sp, #52	; 0x34
   1366c:	strd	r0, [sp, #32]
   13670:	mvn	r0, #0
   13674:	ldrd	r4, [sp, #32]
   13678:	mvn	r1, #-1073741824	; 0xc0000000
   1367c:	strd	r2, [sp, #40]	; 0x28
   13680:	cmp	r5, r1
   13684:	cmpeq	r4, r0
   13688:	bhi	13ae4 <__assert_fail@plt+0x1eb8>
   1368c:	ldrd	r6, [sp, #32]
   13690:	orrs	r7, r6, r7
   13694:	beq	138e0 <__assert_fail@plt+0x1cb4>
   13698:	ldrd	r2, [sp, #32]
   1369c:	mov	r4, #0
   136a0:	mov	r5, #-16777216	; 0xff000000
   136a4:	and	r2, r2, r4
   136a8:	and	r3, r3, r5
   136ac:	orrs	ip, r2, r3
   136b0:	ldrd	r2, [sp, #32]
   136b4:	mov	ip, #0
   136b8:	bne	136e4 <__assert_fail@plt+0x1ab8>
   136bc:	lsl	r1, r3, #8
   136c0:	lsl	r0, r2, #8
   136c4:	orr	r1, r1, r2, lsr #24
   136c8:	add	ip, ip, #8
   136cc:	mov	r2, r0
   136d0:	and	r0, r0, r4
   136d4:	mov	r3, r1
   136d8:	and	r1, r1, r5
   136dc:	orrs	r6, r0, r1
   136e0:	beq	136bc <__assert_fail@plt+0x1a90>
   136e4:	cmp	r2, #0
   136e8:	sbcs	r7, r3, #0
   136ec:	blt	13708 <__assert_fail@plt+0x1adc>
   136f0:	adds	r2, r2, r2
   136f4:	add	ip, ip, #1
   136f8:	adc	r3, r3, r3
   136fc:	cmp	r2, #0
   13700:	sbcs	r0, r3, #0
   13704:	bge	136f0 <__assert_fail@plt+0x1ac4>
   13708:	ldr	r7, [sp, #36]	; 0x24
   1370c:	bic	ip, ip, #1
   13710:	ldr	r2, [sp, #40]	; 0x28
   13714:	rsb	r4, ip, #64	; 0x40
   13718:	rsb	r6, r4, #32
   1371c:	sub	r5, ip, #32
   13720:	lsl	r3, r7, ip
   13724:	ldr	r7, [sp, #44]	; 0x2c
   13728:	lsr	r0, r2, r4
   1372c:	orr	r0, r0, r7, lsl r6
   13730:	ldr	r7, [sp, #32]
   13734:	sub	r6, r4, #32
   13738:	orr	r3, r3, r7, lsl r5
   1373c:	ldr	r7, [sp, #44]	; 0x2c
   13740:	rsb	r5, ip, #32
   13744:	orr	r0, r0, r7, lsr r6
   13748:	ldr	r6, [sp, #32]
   1374c:	lsr	r1, r7, r4
   13750:	lsl	r2, r6, ip
   13754:	orr	r3, r3, r6, lsr r5
   13758:	adds	r0, r0, r2
   1375c:	adc	r1, r1, r3
   13760:	orrs	r7, r0, r1
   13764:	moveq	r0, #1
   13768:	moveq	r1, #0
   1376c:	bne	13a7c <__assert_fail@plt+0x1e50>
   13770:	lsr	r4, r4, #1
   13774:	mov	r3, #0
   13778:	lsl	r5, r1, r4
   1377c:	mov	r2, #0
   13780:	strd	r2, [sp, #24]
   13784:	sub	r3, r4, #32
   13788:	orr	r3, r5, r0, lsl r3
   1378c:	str	r3, [sp, #28]
   13790:	ldr	r6, [sp, #28]
   13794:	rsb	r3, r4, #32
   13798:	lsl	r4, r0, r4
   1379c:	str	r4, [sp, #24]
   137a0:	orr	r3, r6, r0, lsr r3
   137a4:	str	r3, [sp, #28]
   137a8:	ldrd	r4, [sp, #32]
   137ac:	ldrd	r6, [sp, #24]
   137b0:	cmp	r5, r7
   137b4:	cmpeq	r4, r6
   137b8:	bcs	13ac0 <__assert_fail@plt+0x1e94>
   137bc:	ldrd	r6, [sp, #40]	; 0x28
   137c0:	mov	r4, #0
   137c4:	ldrd	r8, [sp, #32]
   137c8:	mov	r5, #0
   137cc:	ldrd	r2, [sp, #24]
   137d0:	mov	r0, r4
   137d4:	mov	r1, r5
   137d8:	mov	ip, #64	; 0x40
   137dc:	strd	r6, [sp, #8]
   137e0:	lsrs	r1, r1, #1
   137e4:	rrx	r0, r0
   137e8:	lsl	fp, r2, #31
   137ec:	lsrs	r3, r3, #1
   137f0:	rrx	r2, r2
   137f4:	adds	r6, r4, r4
   137f8:	adc	r7, r5, r5
   137fc:	cmp	r3, r9
   13800:	cmpeq	r2, r8
   13804:	mov	sl, #0
   13808:	strd	r6, [sp]
   1380c:	mov	r4, r6
   13810:	mov	r5, r7
   13814:	orr	r0, r0, sl
   13818:	orr	r1, r1, fp
   1381c:	bcc	1384c <__assert_fail@plt+0x1c20>
   13820:	ldrd	r6, [sp, #8]
   13824:	cmp	r1, r7
   13828:	cmpeq	r0, r6
   1382c:	movhi	r7, #0
   13830:	movls	r7, #1
   13834:	cmp	r3, r9
   13838:	cmpeq	r2, r8
   1383c:	movne	r7, #0
   13840:	andeq	r7, r7, #1
   13844:	cmp	r7, sl
   13848:	beq	1389c <__assert_fail@plt+0x1c70>
   1384c:	ldrd	r4, [sp]
   13850:	ldrd	r6, [sp, #8]
   13854:	adds	r4, r4, #1
   13858:	adc	r5, r5, #0
   1385c:	cmp	r1, r7
   13860:	cmpeq	r0, r6
   13864:	mov	r6, #0
   13868:	str	r6, [sp, #4]
   1386c:	movls	r7, #0
   13870:	movhi	r7, #1
   13874:	str	r7, [sp]
   13878:	ldrd	r6, [sp, #8]
   1387c:	subs	r8, r8, r2
   13880:	sbc	r9, r9, r3
   13884:	subs	r6, r6, r0
   13888:	sbc	r7, r7, r1
   1388c:	strd	r6, [sp, #8]
   13890:	ldrd	r6, [sp]
   13894:	subs	r8, r8, r6
   13898:	sbc	r9, r9, r7
   1389c:	subs	ip, ip, #1
   138a0:	bne	137e0 <__assert_fail@plt+0x1bb4>
   138a4:	ldrd	r2, [sp, #24]
   138a8:	ldrd	r0, [sp, #24]
   138ac:	adds	r2, r2, r4
   138b0:	adc	r3, r3, r5
   138b4:	lsrs	r3, r3, #1
   138b8:	rrx	r2, r2
   138bc:	cmp	r3, r1
   138c0:	cmpeq	r2, r0
   138c4:	bcs	138fc <__assert_fail@plt+0x1cd0>
   138c8:	ldrd	r4, [sp, #32]
   138cc:	cmp	r5, r3
   138d0:	cmpeq	r4, r2
   138d4:	bcs	13ac0 <__assert_fail@plt+0x1e94>
   138d8:	strd	r2, [sp, #24]
   138dc:	b	137bc <__assert_fail@plt+0x1b90>
   138e0:	ldrd	r2, [sp, #40]	; 0x28
   138e4:	orrs	r3, r2, r3
   138e8:	beq	13a8c <__assert_fail@plt+0x1e60>
   138ec:	ldrd	r0, [sp, #40]	; 0x28
   138f0:	add	sp, sp, #52	; 0x34
   138f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f8:	b	13510 <__assert_fail@plt+0x18e4>
   138fc:	adds	r2, r0, #1
   13900:	adc	r3, r1, #0
   13904:	mov	r1, #0
   13908:	umull	r8, r9, r2, r2
   1390c:	umull	r4, r5, r2, r3
   13910:	adds	r2, r4, r4
   13914:	mla	r5, r3, r1, r5
   13918:	umull	r0, r1, r3, r3
   1391c:	adc	r3, r5, r5
   13920:	adds	r6, r9, r2
   13924:	adc	r7, ip, r3
   13928:	cmp	r5, r7
   1392c:	cmpeq	r4, r6
   13930:	bls	1393c <__assert_fail@plt+0x1d10>
   13934:	adds	r0, r0, #0
   13938:	adc	r1, r1, #1
   1393c:	adds	r0, r0, r7
   13940:	ldrd	r4, [sp, #32]
   13944:	mov	r3, #0
   13948:	adc	r1, r1, r3
   1394c:	cmp	r5, r1
   13950:	cmpeq	r4, r0
   13954:	bcc	13980 <__assert_fail@plt+0x1d54>
   13958:	moveq	r2, #0
   1395c:	movne	r2, #1
   13960:	adds	r0, r3, r8
   13964:	adc	r1, r6, #0
   13968:	ldrd	r6, [sp, #40]	; 0x28
   1396c:	cmp	r7, r1
   13970:	cmpeq	r6, r0
   13974:	orrcs	r2, r2, #1
   13978:	cmp	r2, r3
   1397c:	bne	13b08 <__assert_fail@plt+0x1edc>
   13980:	ldr	r4, [sp, #28]
   13984:	mov	r3, #0
   13988:	ldr	r2, [sp, #24]
   1398c:	mov	r1, r3
   13990:	mov	r5, #0
   13994:	ldr	ip, [sp, #28]
   13998:	mov	r0, r2
   1399c:	umull	r2, r3, r2, r4
   139a0:	umull	r8, r9, r0, r0
   139a4:	adds	r6, r2, r2
   139a8:	mla	r3, r4, r1, r3
   139ac:	adc	r7, r3, r3
   139b0:	adds	r6, r6, r9
   139b4:	adc	r7, r7, r5
   139b8:	cmp	r3, r7
   139bc:	cmpeq	r2, r6
   139c0:	umull	r4, r5, ip, ip
   139c4:	bls	139d0 <__assert_fail@plt+0x1da4>
   139c8:	adds	r4, r4, #0
   139cc:	adc	r5, r5, #1
   139d0:	adds	r4, r4, r7
   139d4:	mov	r3, #0
   139d8:	adc	r5, r5, r3
   139dc:	adds	r0, r3, r8
   139e0:	adc	r1, r6, #0
   139e4:	ldrd	r6, [sp, #32]
   139e8:	cmp	r7, r5
   139ec:	cmpeq	r6, r4
   139f0:	bls	13a38 <__assert_fail@plt+0x1e0c>
   139f4:	ldrd	r2, [sp, #40]	; 0x28
   139f8:	cmp	r3, r1
   139fc:	cmpeq	r2, r0
   13a00:	movcs	r2, #0
   13a04:	movcc	r2, #1
   13a08:	ldrd	r6, [sp, #32]
   13a0c:	uxtb	r2, r2
   13a10:	mov	r3, #0
   13a14:	subs	r4, r6, r4
   13a18:	sbc	r5, r7, r5
   13a1c:	cmp	r3, r5
   13a20:	cmpeq	r2, r4
   13a24:	bne	13a9c <__assert_fail@plt+0x1e70>
   13a28:	ldr	r0, [sp, #24]
   13a2c:	ldr	r1, [sp, #28]
   13a30:	add	sp, sp, #52	; 0x34
   13a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a38:	ldrd	r6, [sp, #40]	; 0x28
   13a3c:	moveq	r2, #0
   13a40:	movne	r2, #1
   13a44:	cmp	r7, r1
   13a48:	cmpeq	r6, r0
   13a4c:	orrcc	r2, r2, #1
   13a50:	cmp	r2, r3
   13a54:	beq	13a08 <__assert_fail@plt+0x1ddc>
   13a58:	ldr	r3, [pc, #204]	; 13b2c <__assert_fail@plt+0x1f00>
   13a5c:	movw	r2, #1818	; 0x71a
   13a60:	ldr	r0, [pc, #200]	; 13b30 <__assert_fail@plt+0x1f04>
   13a64:	ldr	r1, [pc, #200]	; 13b34 <__assert_fail@plt+0x1f08>
   13a68:	add	r3, pc, r3
   13a6c:	add	r0, pc, r0
   13a70:	add	r3, r3, #32
   13a74:	add	r1, pc, r1
   13a78:	bl	11c2c <__assert_fail@plt>
   13a7c:	bl	13510 <__assert_fail@plt+0x18e4>
   13a80:	adds	r0, r0, #1
   13a84:	adc	r1, r1, #0
   13a88:	b	13770 <__assert_fail@plt+0x1b44>
   13a8c:	ldr	r0, [sp, #40]	; 0x28
   13a90:	ldr	r1, [sp, #44]	; 0x2c
   13a94:	add	sp, sp, #52	; 0x34
   13a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a9c:	ldr	r3, [pc, #148]	; 13b38 <__assert_fail@plt+0x1f0c>
   13aa0:	movw	r2, #1820	; 0x71c
   13aa4:	ldr	r0, [pc, #144]	; 13b3c <__assert_fail@plt+0x1f10>
   13aa8:	ldr	r1, [pc, #144]	; 13b40 <__assert_fail@plt+0x1f14>
   13aac:	add	r3, pc, r3
   13ab0:	add	r0, pc, r0
   13ab4:	add	r3, r3, #32
   13ab8:	add	r1, pc, r1
   13abc:	bl	11c2c <__assert_fail@plt>
   13ac0:	ldr	r3, [pc, #124]	; 13b44 <__assert_fail@plt+0x1f18>
   13ac4:	mov	r2, #1808	; 0x710
   13ac8:	ldr	r0, [pc, #120]	; 13b48 <__assert_fail@plt+0x1f1c>
   13acc:	ldr	r1, [pc, #120]	; 13b4c <__assert_fail@plt+0x1f20>
   13ad0:	add	r3, pc, r3
   13ad4:	add	r0, pc, r0
   13ad8:	add	r3, r3, #32
   13adc:	add	r1, pc, r1
   13ae0:	bl	11c2c <__assert_fail@plt>
   13ae4:	ldr	r3, [pc, #100]	; 13b50 <__assert_fail@plt+0x1f24>
   13ae8:	movw	r2, #1791	; 0x6ff
   13aec:	ldr	r0, [pc, #96]	; 13b54 <__assert_fail@plt+0x1f28>
   13af0:	ldr	r1, [pc, #96]	; 13b58 <__assert_fail@plt+0x1f2c>
   13af4:	add	r3, pc, r3
   13af8:	add	r0, pc, r0
   13afc:	add	r3, r3, #32
   13b00:	add	r1, pc, r1
   13b04:	bl	11c2c <__assert_fail@plt>
   13b08:	ldr	r3, [pc, #76]	; 13b5c <__assert_fail@plt+0x1f30>
   13b0c:	movw	r2, #1815	; 0x717
   13b10:	ldr	r0, [pc, #72]	; 13b60 <__assert_fail@plt+0x1f34>
   13b14:	ldr	r1, [pc, #72]	; 13b64 <__assert_fail@plt+0x1f38>
   13b18:	add	r3, pc, r3
   13b1c:	add	r0, pc, r0
   13b20:	add	r3, r3, #32
   13b24:	add	r1, pc, r1
   13b28:	bl	11c2c <__assert_fail@plt>
   13b2c:	andeq	pc, r0, r8, lsl r2	; <UNPREDICTABLE>
   13b30:	strdeq	r2, [r1], -r0
   13b34:	andeq	r2, r1, r4, ror #7
   13b38:	ldrdeq	pc, [r0], -r4
   13b3c:	ldrdeq	r2, [r1], -ip
   13b40:	andeq	r2, r1, r0, lsr #7
   13b44:			; <UNDEFINED> instruction: 0x0000f1b0
   13b48:	andeq	r2, r1, ip, asr #8
   13b4c:	andeq	r2, r1, ip, ror r3
   13b50:	andeq	pc, r0, ip, lsl #3
   13b54:	strdeq	r2, [r1], -r0
   13b58:	andeq	r2, r1, r8, asr r3
   13b5c:	andeq	pc, r0, r8, ror #2
   13b60:	andeq	r2, r1, r0, lsl r4
   13b64:	andeq	r2, r1, r4, lsr r3
   13b68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b6c:	sub	sp, sp, #28
   13b70:	ldrd	r4, [sp, #72]	; 0x48
   13b74:	ldr	r6, [sp, #80]	; 0x50
   13b78:	ldr	r7, [sp, #84]	; 0x54
   13b7c:	orrs	r5, r4, r5
   13b80:	str	r0, [sp, #20]
   13b84:	str	r6, [sp, #12]
   13b88:	str	r7, [sp, #16]
   13b8c:	beq	13dd8 <__assert_fail@plt+0x21ac>
   13b90:	orrs	r8, r2, r3
   13b94:	beq	13dc4 <__assert_fail@plt+0x2198>
   13b98:	ldrd	r0, [sp, #72]	; 0x48
   13b9c:	mov	r6, #0
   13ba0:	mov	r7, #-16777216	; 0xff000000
   13ba4:	mov	ip, #0
   13ba8:	and	r0, r0, r6
   13bac:	and	r1, r1, r7
   13bb0:	orrs	r9, r0, r1
   13bb4:	ldrd	r0, [sp, #72]	; 0x48
   13bb8:	bne	13be4 <__assert_fail@plt+0x1fb8>
   13bbc:	lsl	r4, r1, #8
   13bc0:	lsl	r5, r0, #8
   13bc4:	orr	r4, r4, r0, lsr #24
   13bc8:	add	ip, ip, #8
   13bcc:	mov	r0, r5
   13bd0:	mov	r1, r4
   13bd4:	and	r4, r5, r6
   13bd8:	and	r5, r1, r7
   13bdc:	orrs	r8, r4, r5
   13be0:	beq	13bbc <__assert_fail@plt+0x1f90>
   13be4:	cmp	r0, #0
   13be8:	sbcs	r9, r1, #0
   13bec:	blt	13c08 <__assert_fail@plt+0x1fdc>
   13bf0:	adds	r0, r0, r0
   13bf4:	add	ip, ip, #1
   13bf8:	adc	r1, r1, r1
   13bfc:	cmp	r0, #0
   13c00:	sbcs	r4, r1, #0
   13c04:	bge	13bf0 <__assert_fail@plt+0x1fc4>
   13c08:	mov	r6, #0
   13c0c:	mov	r7, #-16777216	; 0xff000000
   13c10:	and	r0, r2, r6
   13c14:	and	r1, r3, r7
   13c18:	orrs	r5, r0, r1
   13c1c:	mov	r8, #0
   13c20:	mov	r0, r2
   13c24:	mov	r1, r3
   13c28:	bne	13c54 <__assert_fail@plt+0x2028>
   13c2c:	lsl	r4, r1, #8
   13c30:	lsl	r5, r0, #8
   13c34:	orr	r4, r4, r0, lsr #24
   13c38:	add	r8, r8, #8
   13c3c:	mov	r0, r5
   13c40:	mov	r1, r4
   13c44:	and	r4, r5, r6
   13c48:	and	r5, r1, r7
   13c4c:	orrs	r9, r4, r5
   13c50:	beq	13c2c <__assert_fail@plt+0x2000>
   13c54:	cmp	r0, #0
   13c58:	sbcs	r4, r1, #0
   13c5c:	blt	13c78 <__assert_fail@plt+0x204c>
   13c60:	adds	r0, r0, r0
   13c64:	add	r8, r8, #1
   13c68:	adc	r1, r1, r1
   13c6c:	cmp	r0, #0
   13c70:	sbcs	r5, r1, #0
   13c74:	bge	13c60 <__assert_fail@plt+0x2034>
   13c78:	ldr	r0, [sp, #76]	; 0x4c
   13c7c:	rsb	ip, r8, ip
   13c80:	ldr	r6, [sp, #12]
   13c84:	rsb	r1, ip, #64	; 0x40
   13c88:	rsb	r4, r1, #32
   13c8c:	sub	r5, ip, #32
   13c90:	lsl	r7, r0, ip
   13c94:	ldr	r0, [sp, #16]
   13c98:	lsr	r8, r6, r1
   13c9c:	str	r5, [sp]
   13ca0:	cmp	ip, #0
   13ca4:	orr	r8, r8, r0, lsl r4
   13ca8:	ldr	r0, [sp, #72]	; 0x48
   13cac:	sub	r4, r1, #32
   13cb0:	orr	r7, r7, r0, lsl r5
   13cb4:	ldr	r0, [sp, #16]
   13cb8:	ldr	r5, [sp, #16]
   13cbc:	lsr	r9, r0, r1
   13cc0:	rsb	r1, ip, #32
   13cc4:	str	r1, [sp, #16]
   13cc8:	orr	r8, r8, r5, lsr r4
   13ccc:	ldr	r1, [sp]
   13cd0:	lsl	r5, r0, ip
   13cd4:	ldr	r0, [sp, #72]	; 0x48
   13cd8:	orr	r5, r5, r6, lsl r1
   13cdc:	ldr	r1, [sp, #16]
   13ce0:	orr	r7, r7, r0, lsr r1
   13ce4:	orr	r5, r5, r6, lsr r1
   13ce8:	ldr	r1, [sp, #72]	; 0x48
   13cec:	mov	r0, r6
   13cf0:	lsl	r4, r0, ip
   13cf4:	lsl	r6, r1, ip
   13cf8:	orr	r1, r9, r7
   13cfc:	orr	r0, r8, r6
   13d00:	ble	13db0 <__assert_fail@plt+0x2184>
   13d04:	mov	r8, #0
   13d08:	cmp	r3, r1
   13d0c:	cmpeq	r2, r0
   13d10:	bhi	13d40 <__assert_fail@plt+0x2114>
   13d14:	ldrd	r6, [sp, #64]	; 0x40
   13d18:	cmp	r7, r5
   13d1c:	cmpeq	r6, r4
   13d20:	movcc	r6, #0
   13d24:	movcs	r6, #1
   13d28:	cmp	r3, r1
   13d2c:	cmpeq	r2, r0
   13d30:	movne	r6, #0
   13d34:	andeq	r6, r6, #1
   13d38:	cmp	r6, #0
   13d3c:	beq	13d84 <__assert_fail@plt+0x2158>
   13d40:	ldrd	r6, [sp, #64]	; 0x40
   13d44:	mov	r9, #0
   13d48:	str	r9, [sp, #4]
   13d4c:	cmp	r7, r5
   13d50:	cmpeq	r6, r4
   13d54:	movcs	r7, #0
   13d58:	movcc	r7, #1
   13d5c:	str	r7, [sp]
   13d60:	ldrd	r6, [sp, #64]	; 0x40
   13d64:	subs	r2, r2, r0
   13d68:	sbc	r3, r3, r1
   13d6c:	subs	r6, r6, r4
   13d70:	sbc	r7, r7, r5
   13d74:	strd	r6, [sp, #64]	; 0x40
   13d78:	ldrd	r6, [sp]
   13d7c:	subs	r2, r2, r6
   13d80:	sbc	r3, r3, r7
   13d84:	add	r8, r8, #1
   13d88:	lsrs	r5, r5, #1
   13d8c:	rrx	r4, r4
   13d90:	lsl	fp, r0, #31
   13d94:	lsrs	r1, r1, #1
   13d98:	rrx	r0, r0
   13d9c:	cmp	r8, ip
   13da0:	mov	sl, #0
   13da4:	orr	r5, r5, fp
   13da8:	orr	r4, r4, sl
   13dac:	bne	13d08 <__assert_fail@plt+0x20dc>
   13db0:	ldr	r7, [sp, #20]
   13db4:	ldrd	r0, [sp, #64]	; 0x40
   13db8:	strd	r2, [r7]
   13dbc:	add	sp, sp, #28
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc4:	ldr	r8, [sp, #20]
   13dc8:	ldrd	r0, [sp, #64]	; 0x40
   13dcc:	strd	r2, [r8]
   13dd0:	add	sp, sp, #28
   13dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dd8:	ldr	r3, [pc, #28]	; 13dfc <__assert_fail@plt+0x21d0>
   13ddc:	mov	r2, #408	; 0x198
   13de0:	ldr	r0, [pc, #24]	; 13e00 <__assert_fail@plt+0x21d4>
   13de4:	ldr	r1, [pc, #24]	; 13e04 <__assert_fail@plt+0x21d8>
   13de8:	add	r3, pc, r3
   13dec:	add	r0, pc, r0
   13df0:	add	r3, r3, #40	; 0x28
   13df4:	add	r1, pc, r1
   13df8:	bl	11c2c <__assert_fail@plt>
   13dfc:	muleq	r0, r8, lr
   13e00:	andeq	r2, r1, r8, lsr #3
   13e04:	andeq	r2, r1, r4, rrx
   13e08:	push	{r4, r5, r6, r7, r8, lr}
   13e0c:	mov	r6, r0
   13e10:	mov	r4, r3
   13e14:	mov	r0, r3
   13e18:	mov	r7, r1
   13e1c:	mov	r3, r6
   13e20:	mov	r1, r2
   13e24:	ldr	r2, [sp, #24]
   13e28:	ldr	r8, [sp, #28]
   13e2c:	bl	118d8 <__gmpz_powm@plt>
   13e30:	mov	r0, r4
   13e34:	mov	r1, #1
   13e38:	bl	11bd8 <__gmpz_cmp_ui@plt>
   13e3c:	cmp	r0, #0
   13e40:	beq	13eb0 <__assert_fail@plt+0x2284>
   13e44:	mov	r0, r4
   13e48:	mov	r1, r7
   13e4c:	bl	11b6c <__gmpz_cmp@plt>
   13e50:	cmp	r0, #0
   13e54:	beq	13eb0 <__assert_fail@plt+0x2284>
   13e58:	cmp	r8, #1
   13e5c:	movhi	r5, #1
   13e60:	bhi	13e7c <__assert_fail@plt+0x2250>
   13e64:	b	13eb8 <__assert_fail@plt+0x228c>
   13e68:	bl	11bd8 <__gmpz_cmp_ui@plt>
   13e6c:	cmp	r0, #0
   13e70:	beq	13eb8 <__assert_fail@plt+0x228c>
   13e74:	cmp	r5, r8
   13e78:	beq	13eb8 <__assert_fail@plt+0x228c>
   13e7c:	mov	r0, r4
   13e80:	mov	r1, r4
   13e84:	mov	r2, #2
   13e88:	mov	r3, r6
   13e8c:	bl	11bf0 <__gmpz_powm_ui@plt>
   13e90:	mov	r1, r7
   13e94:	mov	r0, r4
   13e98:	bl	11b6c <__gmpz_cmp@plt>
   13e9c:	mov	r1, #1
   13ea0:	add	r5, r5, r1
   13ea4:	cmp	r0, #0
   13ea8:	mov	r0, r4
   13eac:	bne	13e68 <__assert_fail@plt+0x223c>
   13eb0:	mov	r0, #1
   13eb4:	pop	{r4, r5, r6, r7, r8, pc}
   13eb8:	mov	r0, #0
   13ebc:	pop	{r4, r5, r6, r7, r8, pc}
   13ec0:	ldr	r3, [pc, #432]	; 14078 <__assert_fail@plt+0x244c>
   13ec4:	ldr	r2, [pc, #432]	; 1407c <__assert_fail@plt+0x2450>
   13ec8:	add	r3, pc, r3
   13ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ed0:	mov	r4, #0
   13ed4:	ldr	sl, [r3, r2]
   13ed8:	sub	sp, sp, #36	; 0x24
   13edc:	str	r4, [r1, #4]
   13ee0:	mov	r7, r1
   13ee4:	str	r4, [r1, #8]
   13ee8:	mov	r5, r0
   13eec:	ldr	r2, [sl]
   13ef0:	str	r4, [r1]
   13ef4:	ldr	r3, [r0, #4]
   13ef8:	str	r2, [sp, #28]
   13efc:	cmp	r3, r4
   13f00:	bne	13f1c <__assert_fail@plt+0x22f0>
   13f04:	ldr	r2, [sp, #28]
   13f08:	ldr	r3, [sl]
   13f0c:	cmp	r2, r3
   13f10:	bne	14074 <__assert_fail@plt+0x2448>
   13f14:	add	sp, sp, #36	; 0x24
   13f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f1c:	ldr	r0, [pc, #348]	; 14080 <__assert_fail@plt+0x2454>
   13f20:	add	fp, sp, #4
   13f24:	add	r0, pc, r0
   13f28:	bl	13358 <__assert_fail@plt+0x172c>
   13f2c:	mov	r0, fp
   13f30:	bl	11be4 <__gmpz_init@plt>
   13f34:	mov	r1, r4
   13f38:	mov	r0, r5
   13f3c:	bl	11800 <__gmpz_scan1@plt>
   13f40:	mov	r1, r5
   13f44:	mov	r4, r0
   13f48:	mov	r0, r5
   13f4c:	mov	r2, r4
   13f50:	bl	11974 <__gmpz_fdiv_q_2exp@plt>
   13f54:	cmp	r4, #0
   13f58:	beq	13f88 <__assert_fail@plt+0x235c>
   13f5c:	add	r6, sp, #16
   13f60:	mov	r0, r6
   13f64:	mov	r1, #2
   13f68:	bl	11b60 <__gmpz_init_set_ui@plt>
   13f6c:	mov	r0, r7
   13f70:	mov	r1, r6
   13f74:	bl	133e0 <__assert_fail@plt+0x17b4>
   13f78:	mov	r0, r6
   13f7c:	bl	11a94 <__gmpz_clear@plt>
   13f80:	subs	r4, r4, #1
   13f84:	bne	13f60 <__assert_fail@plt+0x2334>
   13f88:	ldr	r9, [pc, #244]	; 14084 <__assert_fail@plt+0x2458>
   13f8c:	mov	r6, #1
   13f90:	mov	r4, #3
   13f94:	add	r8, sp, #16
   13f98:	add	r9, pc, r9
   13f9c:	b	13fcc <__assert_fail@plt+0x23a0>
   13fa0:	add	r3, r9, r6
   13fa4:	mov	r0, r5
   13fa8:	add	r6, r6, #1
   13fac:	ldrb	r3, [r3, #48]	; 0x30
   13fb0:	add	r4, r4, r3
   13fb4:	mul	r1, r4, r4
   13fb8:	bl	11bd8 <__gmpz_cmp_ui@plt>
   13fbc:	cmp	r0, #0
   13fc0:	blt	14018 <__assert_fail@plt+0x23ec>
   13fc4:	cmp	r6, #668	; 0x29c
   13fc8:	bhi	14018 <__assert_fail@plt+0x23ec>
   13fcc:	mov	r0, r5
   13fd0:	mov	r1, r4
   13fd4:	bl	11a7c <__gmpz_divisible_ui_p@plt>
   13fd8:	cmp	r0, #0
   13fdc:	beq	13fa0 <__assert_fail@plt+0x2374>
   13fe0:	mov	r2, r4
   13fe4:	mov	r1, r5
   13fe8:	mov	r0, r5
   13fec:	bl	1192c <__gmpz_tdiv_q_ui@plt>
   13ff0:	mov	r0, r8
   13ff4:	mov	r1, r4
   13ff8:	bl	11b60 <__gmpz_init_set_ui@plt>
   13ffc:	mov	r0, r7
   14000:	mov	r1, r8
   14004:	bl	133e0 <__assert_fail@plt+0x17b4>
   14008:	mov	r0, r8
   1400c:	bl	11a94 <__gmpz_clear@plt>
   14010:	cmp	r6, #668	; 0x29c
   14014:	bls	13fcc <__assert_fail@plt+0x23a0>
   14018:	mov	r0, fp
   1401c:	bl	11a94 <__gmpz_clear@plt>
   14020:	mov	r0, r5
   14024:	mov	r1, #1
   14028:	bl	11bd8 <__gmpz_cmp_ui@plt>
   1402c:	cmp	r0, #0
   14030:	beq	13f04 <__assert_fail@plt+0x22d8>
   14034:	ldr	r0, [pc, #76]	; 14088 <__assert_fail@plt+0x245c>
   14038:	add	r0, pc, r0
   1403c:	bl	13358 <__assert_fail@plt+0x172c>
   14040:	mov	r0, r5
   14044:	bl	1408c <__assert_fail@plt+0x2460>
   14048:	cmp	r0, #0
   1404c:	bne	14064 <__assert_fail@plt+0x2438>
   14050:	mov	r0, r5
   14054:	mov	r2, r7
   14058:	mov	r1, #1
   1405c:	bl	14394 <__assert_fail@plt+0x2768>
   14060:	b	13f04 <__assert_fail@plt+0x22d8>
   14064:	mov	r0, r7
   14068:	mov	r1, r5
   1406c:	bl	133e0 <__assert_fail@plt+0x17b4>
   14070:	b	13f04 <__assert_fail@plt+0x22d8>
   14074:	bl	118e4 <__stack_chk_fail@plt>
   14078:	andeq	r3, r2, r0, lsr r1
   1407c:	andeq	r0, r0, ip, lsl #3
   14080:	andeq	r2, r1, r8, ror r0
   14084:	andeq	lr, r0, r8, ror #25
   14088:	andeq	r1, r1, r8, ror pc
   1408c:	ldr	r3, [pc, #736]	; 14374 <__assert_fail@plt+0x2748>
   14090:	mov	r1, #1
   14094:	ldr	r2, [pc, #732]	; 14378 <__assert_fail@plt+0x274c>
   14098:	add	r3, pc, r3
   1409c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a0:	sub	sp, sp, #100	; 0x64
   140a4:	ldr	r2, [r3, r2]
   140a8:	mov	r9, r0
   140ac:	ldr	r3, [r2]
   140b0:	str	r2, [sp, #28]
   140b4:	str	r3, [sp, #92]	; 0x5c
   140b8:	bl	11bd8 <__gmpz_cmp_ui@plt>
   140bc:	cmp	r0, #0
   140c0:	ble	142d8 <__assert_fail@plt+0x26ac>
   140c4:	movw	r1, #60793	; 0xed79
   140c8:	mov	r0, r9
   140cc:	movt	r1, #381	; 0x17d
   140d0:	bl	11bd8 <__gmpz_cmp_ui@plt>
   140d4:	cmp	r0, #0
   140d8:	blt	14288 <__assert_fail@plt+0x265c>
   140dc:	add	r8, sp, #56	; 0x38
   140e0:	add	fp, sp, #32
   140e4:	add	r7, sp, #44	; 0x2c
   140e8:	add	r4, sp, #68	; 0x44
   140ec:	mov	r0, fp
   140f0:	mov	r2, r8
   140f4:	mov	r3, r4
   140f8:	mov	r1, r7
   140fc:	mov	r5, #0
   14100:	str	r5, [sp]
   14104:	bl	118fc <__gmpz_inits@plt>
   14108:	mov	r2, #1
   1410c:	mov	r0, r8
   14110:	mov	r1, r9
   14114:	bl	1183c <__gmpz_sub_ui@plt>
   14118:	mov	r1, r5
   1411c:	mov	r0, r8
   14120:	bl	11800 <__gmpz_scan1@plt>
   14124:	mov	r1, r8
   14128:	str	r0, [sp, #16]
   1412c:	mov	r0, fp
   14130:	ldr	r2, [sp, #16]
   14134:	bl	11af4 <__gmpz_tdiv_q_2exp@plt>
   14138:	mov	r0, r7
   1413c:	mov	r1, #2
   14140:	bl	11878 <__gmpz_set_ui@plt>
   14144:	ldr	r1, [sp, #16]
   14148:	str	fp, [sp]
   1414c:	mov	r2, r7
   14150:	mov	r3, r4
   14154:	mov	r0, r9
   14158:	str	r1, [sp, #4]
   1415c:	mov	r1, r8
   14160:	bl	13e08 <__assert_fail@plt+0x21dc>
   14164:	cmp	r0, #0
   14168:	beq	142a8 <__assert_fail@plt+0x267c>
   1416c:	ldr	r5, [pc, #520]	; 1437c <__assert_fail@plt+0x2750>
   14170:	add	r5, pc, r5
   14174:	ldrb	r3, [r5]
   14178:	cmp	r3, #0
   1417c:	bne	14314 <__assert_fail@plt+0x26e8>
   14180:	ldr	r2, [pc, #504]	; 14380 <__assert_fail@plt+0x2754>
   14184:	cmp	r3, #0
   14188:	ldr	r1, [pc, #500]	; 14384 <__assert_fail@plt+0x2758>
   1418c:	mov	sl, #0
   14190:	add	r2, pc, r2
   14194:	str	r2, [sp, #20]
   14198:	add	r1, pc, r1
   1419c:	str	r1, [sp, #24]
   141a0:	beq	14278 <__assert_fail@plt+0x264c>
   141a4:	ldr	r3, [sp, #88]	; 0x58
   141a8:	cmp	r3, #0
   141ac:	beq	142fc <__assert_fail@plt+0x26d0>
   141b0:	mov	r5, #0
   141b4:	mov	r6, r5
   141b8:	b	141c8 <__assert_fail@plt+0x259c>
   141bc:	cmp	r0, #0
   141c0:	add	r5, r5, #12
   141c4:	beq	1421c <__assert_fail@plt+0x25f0>
   141c8:	ldr	r2, [sp, #80]	; 0x50
   141cc:	mov	r0, r4
   141d0:	mov	r1, r8
   141d4:	add	r6, r6, #1
   141d8:	add	r2, r2, r5
   141dc:	bl	118f0 <__gmpz_divexact@plt>
   141e0:	mov	r3, r9
   141e4:	mov	r0, r4
   141e8:	mov	r1, r7
   141ec:	mov	r2, r4
   141f0:	bl	118d8 <__gmpz_powm@plt>
   141f4:	mov	r0, r4
   141f8:	mov	r1, #1
   141fc:	bl	11bd8 <__gmpz_cmp_ui@plt>
   14200:	ldr	r3, [sp, #88]	; 0x58
   14204:	adds	r0, r0, #0
   14208:	movne	r0, #1
   1420c:	cmp	r6, r3
   14210:	bcc	141bc <__assert_fail@plt+0x2590>
   14214:	cmp	r0, #0
   14218:	bne	1435c <__assert_fail@plt+0x2730>
   1421c:	ldr	r2, [sp, #20]
   14220:	mov	r0, r7
   14224:	mov	r1, r7
   14228:	add	r3, r2, #48	; 0x30
   1422c:	ldrb	r2, [r3, sl]
   14230:	bl	11a1c <__gmpz_add_ui@plt>
   14234:	ldr	r3, [sp, #16]
   14238:	str	fp, [sp]
   1423c:	mov	r0, r9
   14240:	mov	r1, r8
   14244:	mov	r2, r7
   14248:	str	r3, [sp, #4]
   1424c:	mov	r3, r4
   14250:	bl	13e08 <__assert_fail@plt+0x21dc>
   14254:	cmp	r0, #0
   14258:	beq	142e0 <__assert_fail@plt+0x26b4>
   1425c:	add	sl, sl, #1
   14260:	cmp	sl, #668	; 0x29c
   14264:	beq	14334 <__assert_fail@plt+0x2708>
   14268:	ldr	r1, [sp, #24]
   1426c:	ldrb	r3, [r1]
   14270:	cmp	r3, #0
   14274:	bne	141a4 <__assert_fail@plt+0x2578>
   14278:	subs	r3, sl, #24
   1427c:	rsbs	r0, r3, #0
   14280:	adcs	r0, r0, r3
   14284:	b	14214 <__assert_fail@plt+0x25e8>
   14288:	mov	r0, #1
   1428c:	ldr	r1, [sp, #28]
   14290:	ldr	r2, [sp, #92]	; 0x5c
   14294:	ldr	r3, [r1]
   14298:	cmp	r2, r3
   1429c:	bne	14370 <__assert_fail@plt+0x2744>
   142a0:	add	sp, sp, #100	; 0x64
   142a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a8:	mov	ip, r0
   142ac:	mov	r0, fp
   142b0:	mov	lr, #0
   142b4:	mov	r1, r7
   142b8:	mov	r2, r8
   142bc:	mov	r3, r4
   142c0:	str	lr, [sp]
   142c4:	str	ip, [sp, #12]
   142c8:	bl	11848 <__gmpz_clears@plt>
   142cc:	ldr	ip, [sp, #12]
   142d0:	mov	r0, ip
   142d4:	b	1428c <__assert_fail@plt+0x2660>
   142d8:	mov	r0, #0
   142dc:	b	1428c <__assert_fail@plt+0x2660>
   142e0:	ldr	r3, [pc, #160]	; 14388 <__assert_fail@plt+0x275c>
   142e4:	mov	ip, r0
   142e8:	add	r3, pc, r3
   142ec:	ldrb	r3, [r3]
   142f0:	cmp	r3, #0
   142f4:	beq	142ac <__assert_fail@plt+0x2680>
   142f8:	b	14300 <__assert_fail@plt+0x26d4>
   142fc:	mov	ip, #1
   14300:	add	r0, sp, #80	; 0x50
   14304:	str	ip, [sp, #12]
   14308:	bl	12474 <__assert_fail@plt+0x848>
   1430c:	ldr	ip, [sp, #12]
   14310:	b	142ac <__assert_fail@plt+0x2680>
   14314:	mov	r0, r4
   14318:	mov	r1, r8
   1431c:	bl	11908 <__gmpz_set@plt>
   14320:	mov	r0, r4
   14324:	add	r1, sp, #80	; 0x50
   14328:	bl	13ec0 <__assert_fail@plt+0x2294>
   1432c:	ldrb	r3, [r5]
   14330:	b	14180 <__assert_fail@plt+0x2554>
   14334:	ldr	r1, [pc, #80]	; 1438c <__assert_fail@plt+0x2760>
   14338:	mov	r2, #5
   1433c:	mov	r0, #0
   14340:	add	r1, pc, r1
   14344:	bl	118cc <dcgettext@plt>
   14348:	mov	r2, r0
   1434c:	mov	r0, #0
   14350:	mov	r1, r0
   14354:	bl	119b0 <error@plt>
   14358:	bl	11c08 <abort@plt>
   1435c:	ldr	r3, [pc, #44]	; 14390 <__assert_fail@plt+0x2764>
   14360:	mov	ip, r0
   14364:	add	r3, pc, r3
   14368:	ldrb	r3, [r3]
   1436c:	b	142f0 <__assert_fail@plt+0x26c4>
   14370:	bl	118e4 <__stack_chk_fail@plt>
   14374:	andeq	r2, r2, r0, ror #30
   14378:	andeq	r0, r0, ip, lsl #3
   1437c:	andeq	r3, r2, r0, asr r0
   14380:	strdeq	lr, [r0], -r0
   14384:	andeq	r3, r2, r8, lsr #32
   14388:	ldrdeq	r2, [r2], -r8
   1438c:	andeq	r1, r1, r4, lsl #25
   14390:	andeq	r2, r2, ip, asr lr
   14394:	ldr	r3, [pc, #944]	; 1474c <__assert_fail@plt+0x2b20>
   14398:	ldr	ip, [pc, #944]	; 14750 <__assert_fail@plt+0x2b24>
   1439c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143a0:	add	r3, pc, r3
   143a4:	sub	sp, sp, #148	; 0x94
   143a8:	mov	sl, r0
   143ac:	add	r0, sp, #92	; 0x5c
   143b0:	add	r9, sp, #116	; 0x74
   143b4:	str	r0, [sp, #20]
   143b8:	add	r7, sp, #128	; 0x80
   143bc:	str	r2, [sp, #48]	; 0x30
   143c0:	mov	r2, #1
   143c4:	ldr	ip, [r3, ip]
   143c8:	add	r3, sp, #80	; 0x50
   143cc:	ldr	r0, [pc, #896]	; 14754 <__assert_fail@plt+0x2b28>
   143d0:	mov	r6, r1
   143d4:	str	r3, [sp, #16]
   143d8:	mov	r3, #0
   143dc:	strd	r2, [sp, #24]
   143e0:	add	r2, r1, #1
   143e4:	ldr	r3, [ip]
   143e8:	add	r0, pc, r0
   143ec:	str	r2, [sp, #56]	; 0x38
   143f0:	add	r8, sp, #68	; 0x44
   143f4:	ldr	r2, [pc, #860]	; 14758 <__assert_fail@plt+0x2b2c>
   143f8:	add	fp, sp, #104	; 0x68
   143fc:	str	ip, [sp, #60]	; 0x3c
   14400:	mov	r4, #1
   14404:	str	r3, [sp, #140]	; 0x8c
   14408:	add	r2, pc, r2
   1440c:	str	r2, [sp, #52]	; 0x34
   14410:	bl	13358 <__assert_fail@plt+0x172c>
   14414:	mov	r2, #0
   14418:	mov	r0, r9
   1441c:	mov	r1, r7
   14420:	mov	r5, #0
   14424:	bl	118fc <__gmpz_inits@plt>
   14428:	add	r0, sp, #92	; 0x5c
   1442c:	mov	r1, #2
   14430:	bl	11a10 <__gmpz_init_set_si@plt>
   14434:	mov	r0, r8
   14438:	mov	r1, #2
   1443c:	bl	11a10 <__gmpz_init_set_si@plt>
   14440:	add	r0, sp, #80	; 0x50
   14444:	mov	r1, #2
   14448:	bl	11a10 <__gmpz_init_set_si@plt>
   1444c:	mov	r0, fp
   14450:	mov	r1, #1
   14454:	bl	11b60 <__gmpz_init_set_ui@plt>
   14458:	mov	r0, sl
   1445c:	mov	r1, #1
   14460:	bl	11bd8 <__gmpz_cmp_ui@plt>
   14464:	cmp	r0, #0
   14468:	bne	14480 <__assert_fail@plt+0x2854>
   1446c:	b	14704 <__assert_fail@plt+0x2ad8>
   14470:	subs	r4, r4, #1
   14474:	sbc	r5, r5, #0
   14478:	orrs	r3, r4, r5
   1447c:	beq	1453c <__assert_fail@plt+0x2910>
   14480:	mov	r0, r9
   14484:	mov	r1, r8
   14488:	mov	r2, r8
   1448c:	bl	11920 <__gmpz_mul@plt>
   14490:	mov	r0, r8
   14494:	mov	r1, r9
   14498:	mov	r2, sl
   1449c:	bl	11b54 <__gmpz_mod@plt>
   144a0:	mov	r0, r8
   144a4:	mov	r1, r8
   144a8:	mov	r2, r6
   144ac:	bl	11a1c <__gmpz_add_ui@plt>
   144b0:	mov	r0, r9
   144b4:	add	r1, sp, #80	; 0x50
   144b8:	mov	r2, r8
   144bc:	bl	118a8 <__gmpz_sub@plt>
   144c0:	mov	r0, r7
   144c4:	mov	r1, fp
   144c8:	mov	r2, r9
   144cc:	bl	11920 <__gmpz_mul@plt>
   144d0:	mov	r2, sl
   144d4:	mov	r0, fp
   144d8:	mov	r1, r7
   144dc:	bl	11b54 <__gmpz_mod@plt>
   144e0:	mov	r2, #31
   144e4:	mov	r3, #0
   144e8:	and	r2, r2, r4
   144ec:	and	r3, r3, r5
   144f0:	cmp	r3, #0
   144f4:	cmpeq	r2, #1
   144f8:	bne	14470 <__assert_fail@plt+0x2844>
   144fc:	mov	r0, r9
   14500:	mov	r1, fp
   14504:	mov	r2, sl
   14508:	bl	11bb4 <__gmpz_gcd@plt>
   1450c:	mov	r0, r9
   14510:	mov	r1, #1
   14514:	bl	11bd8 <__gmpz_cmp_ui@plt>
   14518:	cmp	r0, #0
   1451c:	bne	145e4 <__assert_fail@plt+0x29b8>
   14520:	add	r0, sp, #92	; 0x5c
   14524:	mov	r1, r8
   14528:	bl	11908 <__gmpz_set@plt>
   1452c:	subs	r4, r4, #1
   14530:	sbc	r5, r5, #0
   14534:	orrs	r3, r4, r5
   14538:	bne	14480 <__assert_fail@plt+0x2854>
   1453c:	add	r0, sp, #80	; 0x50
   14540:	mov	r1, r8
   14544:	bl	11908 <__gmpz_set@plt>
   14548:	ldrd	r0, [sp, #24]
   1454c:	mov	r2, r0
   14550:	adds	r0, r0, r0
   14554:	mov	r3, r1
   14558:	adc	r1, r1, r1
   1455c:	orrs	r3, r2, r3
   14560:	strd	r0, [sp, #32]
   14564:	beq	145c8 <__assert_fail@plt+0x299c>
   14568:	str	fp, [sp, #40]	; 0x28
   1456c:	mov	fp, r6
   14570:	str	r7, [sp, #44]	; 0x2c
   14574:	ldrd	r6, [sp, #24]
   14578:	adds	r4, r4, #1
   1457c:	mov	r0, r9
   14580:	mov	r1, r8
   14584:	mov	r2, r8
   14588:	adc	r5, r5, #0
   1458c:	bl	11920 <__gmpz_mul@plt>
   14590:	mov	r0, r8
   14594:	mov	r1, r9
   14598:	mov	r2, sl
   1459c:	bl	11b54 <__gmpz_mod@plt>
   145a0:	mov	r0, r8
   145a4:	mov	r1, r8
   145a8:	mov	r2, fp
   145ac:	bl	11a1c <__gmpz_add_ui@plt>
   145b0:	cmp	r5, r7
   145b4:	cmpeq	r4, r6
   145b8:	bne	14578 <__assert_fail@plt+0x294c>
   145bc:	mov	r6, fp
   145c0:	ldr	r7, [sp, #44]	; 0x2c
   145c4:	ldr	fp, [sp, #40]	; 0x28
   145c8:	add	r0, sp, #92	; 0x5c
   145cc:	mov	r1, r8
   145d0:	ldrd	r4, [sp, #24]
   145d4:	bl	11908 <__gmpz_set@plt>
   145d8:	ldrd	r0, [sp, #32]
   145dc:	strd	r0, [sp, #24]
   145e0:	b	14480 <__assert_fail@plt+0x2854>
   145e4:	strd	r4, [sp, #32]
   145e8:	add	r5, sp, #80	; 0x50
   145ec:	add	r4, sp, #92	; 0x5c
   145f0:	mov	r0, r9
   145f4:	mov	r1, r4
   145f8:	mov	r2, r4
   145fc:	bl	11920 <__gmpz_mul@plt>
   14600:	mov	r0, r4
   14604:	mov	r1, r9
   14608:	mov	r2, sl
   1460c:	bl	11b54 <__gmpz_mod@plt>
   14610:	mov	r0, r4
   14614:	mov	r1, r4
   14618:	mov	r2, r6
   1461c:	bl	11a1c <__gmpz_add_ui@plt>
   14620:	mov	r0, r9
   14624:	mov	r1, r5
   14628:	mov	r2, r4
   1462c:	bl	118a8 <__gmpz_sub@plt>
   14630:	mov	r0, r9
   14634:	mov	r1, r9
   14638:	mov	r2, sl
   1463c:	bl	11bb4 <__gmpz_gcd@plt>
   14640:	mov	r0, r9
   14644:	mov	r1, #1
   14648:	bl	11bd8 <__gmpz_cmp_ui@plt>
   1464c:	cmp	r0, #0
   14650:	beq	145f0 <__assert_fail@plt+0x29c4>
   14654:	mov	r0, sl
   14658:	mov	r1, sl
   1465c:	mov	r2, r9
   14660:	str	r5, [sp, #16]
   14664:	str	r4, [sp, #20]
   14668:	ldrd	r4, [sp, #32]
   1466c:	bl	118f0 <__gmpz_divexact@plt>
   14670:	mov	r0, r9
   14674:	bl	1408c <__assert_fail@plt+0x2460>
   14678:	cmp	r0, #0
   1467c:	bne	146dc <__assert_fail@plt+0x2ab0>
   14680:	ldr	r0, [sp, #52]	; 0x34
   14684:	bl	13358 <__assert_fail@plt+0x172c>
   14688:	mov	r0, r9
   1468c:	ldr	r1, [sp, #56]	; 0x38
   14690:	ldr	r2, [sp, #48]	; 0x30
   14694:	bl	14394 <__assert_fail@plt+0x2768>
   14698:	mov	r0, sl
   1469c:	bl	1408c <__assert_fail@plt+0x2460>
   146a0:	cmp	r0, #0
   146a4:	bne	146f8 <__assert_fail@plt+0x2acc>
   146a8:	mov	r0, r8
   146ac:	mov	r1, r8
   146b0:	mov	r2, sl
   146b4:	bl	11b54 <__gmpz_mod@plt>
   146b8:	add	r0, sp, #80	; 0x50
   146bc:	mov	r2, sl
   146c0:	mov	r1, r0
   146c4:	bl	11b54 <__gmpz_mod@plt>
   146c8:	add	r0, sp, #92	; 0x5c
   146cc:	mov	r2, sl
   146d0:	mov	r1, r0
   146d4:	bl	11b54 <__gmpz_mod@plt>
   146d8:	b	14458 <__assert_fail@plt+0x282c>
   146dc:	ldr	r0, [sp, #48]	; 0x30
   146e0:	mov	r1, r9
   146e4:	bl	133e0 <__assert_fail@plt+0x17b4>
   146e8:	mov	r0, sl
   146ec:	bl	1408c <__assert_fail@plt+0x2460>
   146f0:	cmp	r0, #0
   146f4:	beq	146a8 <__assert_fail@plt+0x2a7c>
   146f8:	ldr	r0, [sp, #48]	; 0x30
   146fc:	mov	r1, sl
   14700:	bl	133e0 <__assert_fail@plt+0x17b4>
   14704:	mov	r0, fp
   14708:	add	r1, sp, #92	; 0x5c
   1470c:	mov	r2, r9
   14710:	str	r1, [sp, #4]
   14714:	add	r3, sp, #80	; 0x50
   14718:	mov	ip, #0
   1471c:	str	r8, [sp]
   14720:	mov	r1, r7
   14724:	str	ip, [sp, #8]
   14728:	bl	11848 <__gmpz_clears@plt>
   1472c:	ldr	r0, [sp, #60]	; 0x3c
   14730:	ldr	r2, [sp, #140]	; 0x8c
   14734:	ldr	r3, [r0]
   14738:	cmp	r2, r3
   1473c:	bne	14748 <__assert_fail@plt+0x2b1c>
   14740:	add	sp, sp, #148	; 0x94
   14744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14748:	bl	118e4 <__stack_chk_fail@plt>
   1474c:	andeq	r2, r2, r8, asr ip
   14750:	andeq	r0, r0, ip, lsl #3
   14754:	andeq	r1, r1, r0, lsl ip
   14758:	andeq	r1, r1, r8, lsl #24
   1475c:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   14760:	sub	sp, sp, #128	; 0x80
   14764:	mov	r8, r0
   14768:	mov	r9, r1
   1476c:	strd	r2, [sp, #32]
   14770:	mov	r2, #1
   14774:	ldrd	r4, [sp, #32]
   14778:	mov	r3, #0
   1477c:	ldr	r6, [sp, #168]	; 0xa8
   14780:	and	r2, r2, r4
   14784:	and	r3, r3, r5
   14788:	ldr	r7, [sp, #172]	; 0xac
   1478c:	orrs	r5, r2, r3
   14790:	str	r6, [sp, #80]	; 0x50
   14794:	ldr	r2, [sp, #176]	; 0xb0
   14798:	str	r7, [sp, #84]	; 0x54
   1479c:	ldr	r3, [sp, #180]	; 0xb4
   147a0:	bne	14b1c <__assert_fail@plt+0x2ef0>
   147a4:	ldrd	sl, [sp, #32]
   147a8:	str	r2, [sp, #24]
   147ac:	orrs	fp, sl, fp
   147b0:	str	r3, [sp, #28]
   147b4:	beq	14b0c <__assert_fail@plt+0x2ee0>
   147b8:	ldr	ip, [sp, #164]	; 0xa4
   147bc:	mvn	r2, #0
   147c0:	ldrd	r0, [sp, #160]	; 0xa0
   147c4:	mov	r3, #0
   147c8:	and	r0, r0, r2
   147cc:	and	r1, r1, r3
   147d0:	strd	r0, [sp, #8]
   147d4:	mvn	r2, #0
   147d8:	and	r2, r2, r8
   147dc:	mov	r3, #0
   147e0:	and	r3, r3, r9
   147e4:	umull	r0, r1, r2, r9
   147e8:	mul	r6, r2, r3
   147ec:	umull	r4, r5, r2, r2
   147f0:	adds	r2, r0, r0
   147f4:	mla	r1, r9, r3, r1
   147f8:	add	r3, r5, r6, lsl #1
   147fc:	mov	r6, #0
   14800:	str	r3, [sp, #40]	; 0x28
   14804:	str	r6, [sp, #44]	; 0x2c
   14808:	ldrd	r6, [sp, #40]	; 0x28
   1480c:	adc	r3, r1, r1
   14810:	umull	sl, fp, r9, r9
   14814:	adds	r2, r2, r6
   14818:	adc	r3, r3, r7
   1481c:	cmp	r1, r3
   14820:	cmpeq	r0, r2
   14824:	bls	14830 <__assert_fail@plt+0x2c04>
   14828:	adds	sl, sl, #0
   1482c:	adc	fp, fp, #1
   14830:	str	r3, [sp, #16]
   14834:	mov	r7, #0
   14838:	str	r7, [sp, #20]
   1483c:	ldrd	r6, [sp, #16]
   14840:	str	r2, [sp, #52]	; 0x34
   14844:	adds	sl, sl, r6
   14848:	ldr	r9, [sp, #80]	; 0x50
   1484c:	str	r7, [sp, #48]	; 0x30
   14850:	adc	fp, fp, r7
   14854:	ldrd	r0, [sp, #48]	; 0x30
   14858:	ldr	r7, [sp, #84]	; 0x54
   1485c:	adds	r0, r0, r4
   14860:	ldr	r4, [sp, #8]
   14864:	adc	r1, r1, #0
   14868:	ldr	r6, [sp, #12]
   1486c:	mul	r8, r0, r7
   14870:	ldr	r7, [sp, #8]
   14874:	umull	r2, r3, r0, r9
   14878:	mvn	r0, #0
   1487c:	mla	r8, r9, r1, r8
   14880:	and	r2, r2, r0
   14884:	mov	r1, #0
   14888:	mul	r9, r2, r6
   1488c:	add	r8, r8, r3
   14890:	and	r3, r8, r1
   14894:	umull	r0, r1, r8, r4
   14898:	umull	r4, r5, r2, ip
   1489c:	mla	r9, r7, r3, r9
   148a0:	adds	r4, r4, r0
   148a4:	umull	r6, r7, r2, r7
   148a8:	mov	r6, #0
   148ac:	mla	r5, ip, r3, r5
   148b0:	ldr	r3, [sp, #12]
   148b4:	str	r9, [sp, #88]	; 0x58
   148b8:	ldr	r2, [sp, #88]	; 0x58
   148bc:	mla	r1, r8, r3, r1
   148c0:	add	r2, r2, r7
   148c4:	str	r6, [sp, #60]	; 0x3c
   148c8:	str	r2, [sp, #56]	; 0x38
   148cc:	ldrd	r6, [sp, #56]	; 0x38
   148d0:	adc	r5, r5, r1
   148d4:	umull	r8, r9, r8, ip
   148d8:	adds	r4, r4, r6
   148dc:	adc	r5, r5, r7
   148e0:	cmp	r1, r5
   148e4:	cmpeq	r0, r4
   148e8:	bls	148f4 <__assert_fail@plt+0x2cc8>
   148ec:	adds	r8, r8, #0
   148f0:	adc	r9, r9, #1
   148f4:	str	r5, [sp, #64]	; 0x40
   148f8:	mov	r7, #0
   148fc:	str	r7, [sp, #68]	; 0x44
   14900:	ldrd	r2, [sp, #64]	; 0x40
   14904:	adds	r2, r2, r8
   14908:	mov	r8, sl
   1490c:	adc	r3, r3, r9
   14910:	mov	r9, fp
   14914:	subs	r8, r8, r2
   14918:	sbc	r9, r9, r3
   1491c:	cmp	fp, r3
   14920:	cmpeq	sl, r2
   14924:	bcs	14934 <__assert_fail@plt+0x2d08>
   14928:	ldrd	sl, [sp, #160]	; 0xa0
   1492c:	adds	r8, r8, sl
   14930:	adc	r9, r9, fp
   14934:	ldrd	r2, [sp, #32]
   14938:	mov	r5, #0
   1493c:	mov	r4, #1
   14940:	lsrs	r3, r3, #1
   14944:	rrx	r2, r2
   14948:	strd	r2, [sp, #32]
   1494c:	and	r2, r2, r4
   14950:	and	r3, r3, r5
   14954:	orrs	r5, r2, r3
   14958:	beq	14b00 <__assert_fail@plt+0x2ed4>
   1495c:	ldrd	r0, [sp, #24]
   14960:	mvn	r6, #0
   14964:	ldr	sl, [sp, #28]
   14968:	and	r2, r6, r8
   1496c:	mov	r7, #0
   14970:	and	r1, r1, r7
   14974:	and	r0, r0, r6
   14978:	and	r3, r7, r9
   1497c:	umull	r6, r7, r2, sl
   14980:	mul	sl, r2, r1
   14984:	mla	sl, r0, r3, sl
   14988:	umull	r4, r5, r9, r0
   1498c:	str	sl, [sp]
   14990:	adds	r4, r4, r6
   14994:	umull	sl, fp, r2, r0
   14998:	ldr	r0, [sp]
   1499c:	mla	r5, r9, r1, r5
   149a0:	ldr	r1, [sp, #28]
   149a4:	mov	r2, #0
   149a8:	str	r2, [sp, #100]	; 0x64
   149ac:	mla	r7, r1, r3, r7
   149b0:	strd	sl, [sp, #88]	; 0x58
   149b4:	add	sl, r0, fp
   149b8:	str	sl, [sp, #96]	; 0x60
   149bc:	ldrd	sl, [sp, #96]	; 0x60
   149c0:	adc	r5, r5, r7
   149c4:	adds	r4, r4, sl
   149c8:	adc	r5, r5, fp
   149cc:	cmp	r7, r5
   149d0:	cmpeq	r6, r4
   149d4:	umull	r2, r3, r9, r1
   149d8:	bls	149e4 <__assert_fail@plt+0x2db8>
   149dc:	adds	r2, r2, #0
   149e0:	adc	r3, r3, #1
   149e4:	mov	fp, #0
   149e8:	str	r5, [sp, #72]	; 0x48
   149ec:	str	fp, [sp, #76]	; 0x4c
   149f0:	str	r4, [sp, #108]	; 0x6c
   149f4:	str	fp, [sp, #104]	; 0x68
   149f8:	ldrd	r4, [sp, #72]	; 0x48
   149fc:	ldr	r6, [sp, #88]	; 0x58
   14a00:	ldrd	r0, [sp, #104]	; 0x68
   14a04:	adds	r4, r4, r2
   14a08:	ldr	r7, [sp, #84]	; 0x54
   14a0c:	adc	r5, r5, r3
   14a10:	ldr	fp, [sp, #80]	; 0x50
   14a14:	adds	r0, r0, r6
   14a18:	adc	r1, r1, #0
   14a1c:	strd	r4, [sp]
   14a20:	mul	sl, r0, r7
   14a24:	ldr	r5, [sp, #12]
   14a28:	umull	r2, r3, r0, fp
   14a2c:	mvn	r0, #0
   14a30:	mla	sl, fp, r1, sl
   14a34:	and	r2, r2, r0
   14a38:	ldr	fp, [sp, #8]
   14a3c:	mov	r1, #0
   14a40:	mul	r4, r2, r5
   14a44:	add	sl, sl, r3
   14a48:	and	r3, sl, r1
   14a4c:	ldr	r1, [sp, #8]
   14a50:	mla	r4, fp, r3, r4
   14a54:	umull	r6, r7, sl, r1
   14a58:	umull	r0, r1, r2, ip
   14a5c:	str	r4, [sp, #88]	; 0x58
   14a60:	umull	r4, r5, r2, fp
   14a64:	ldr	r2, [sp, #12]
   14a68:	ldr	fp, [sp, #88]	; 0x58
   14a6c:	adds	r0, r0, r6
   14a70:	mla	r1, ip, r3, r1
   14a74:	add	fp, fp, r5
   14a78:	mla	r7, sl, r2, r7
   14a7c:	str	fp, [sp, #112]	; 0x70
   14a80:	mov	r3, #0
   14a84:	str	r3, [sp, #116]	; 0x74
   14a88:	strd	r4, [sp, #24]
   14a8c:	ldrd	r4, [sp, #112]	; 0x70
   14a90:	adc	r1, r1, r7
   14a94:	umull	sl, fp, sl, ip
   14a98:	adds	r0, r0, r4
   14a9c:	adc	r1, r1, r5
   14aa0:	cmp	r7, r1
   14aa4:	cmpeq	r6, r0
   14aa8:	bls	14ab4 <__assert_fail@plt+0x2e88>
   14aac:	adds	sl, sl, #0
   14ab0:	adc	fp, fp, #1
   14ab4:	str	r1, [sp, #120]	; 0x78
   14ab8:	mov	r5, #0
   14abc:	str	r5, [sp, #124]	; 0x7c
   14ac0:	ldrd	r6, [sp, #120]	; 0x78
   14ac4:	ldrd	r0, [sp]
   14ac8:	adds	sl, sl, r6
   14acc:	ldrd	r2, [sp]
   14ad0:	adc	fp, fp, r7
   14ad4:	subs	r0, r0, sl
   14ad8:	sbc	r1, r1, fp
   14adc:	cmp	r3, fp
   14ae0:	cmpeq	r2, sl
   14ae4:	strd	r0, [sp, #24]
   14ae8:	bcs	147d4 <__assert_fail@plt+0x2ba8>
   14aec:	ldrd	r4, [sp, #160]	; 0xa0
   14af0:	adds	r0, r0, r4
   14af4:	adc	r1, r1, r5
   14af8:	strd	r0, [sp, #24]
   14afc:	b	147d4 <__assert_fail@plt+0x2ba8>
   14b00:	ldrd	r6, [sp, #32]
   14b04:	orrs	r7, r6, r7
   14b08:	bne	147d4 <__assert_fail@plt+0x2ba8>
   14b0c:	ldrd	r0, [sp, #24]
   14b10:	add	sp, sp, #128	; 0x80
   14b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   14b18:	bx	lr
   14b1c:	strd	r8, [sp, #24]
   14b20:	b	147b8 <__assert_fail@plt+0x2b8c>
   14b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b28:	sub	sp, sp, #116	; 0x74
   14b2c:	ldrd	r4, [sp, #176]	; 0xb0
   14b30:	strd	r0, [sp, #96]	; 0x60
   14b34:	str	r2, [sp, #76]	; 0x4c
   14b38:	strd	r0, [sp]
   14b3c:	str	r2, [sp, #8]
   14b40:	str	r3, [sp, #104]	; 0x68
   14b44:	str	r3, [sp, #12]
   14b48:	strd	r4, [sp, #16]
   14b4c:	ldrd	r2, [sp, #160]	; 0xa0
   14b50:	ldrd	r0, [sp, #152]	; 0x98
   14b54:	bl	1475c <__assert_fail@plt+0x2b30>
   14b58:	ldrd	r6, [sp, #96]	; 0x60
   14b5c:	subs	r6, r6, r4
   14b60:	sbc	r7, r7, r5
   14b64:	strd	r6, [sp, #88]	; 0x58
   14b68:	cmp	r1, r7
   14b6c:	cmpeq	r0, r6
   14b70:	movne	r3, #0
   14b74:	moveq	r3, #1
   14b78:	cmp	r5, r1
   14b7c:	cmpeq	r4, r0
   14b80:	orreq	r3, r3, #1
   14b84:	str	r3, [sp, #108]	; 0x6c
   14b88:	cmp	r3, #0
   14b8c:	bne	14d58 <__assert_fail@plt+0x312c>
   14b90:	ldr	r7, [sp, #168]	; 0xa8
   14b94:	cmp	r7, #1
   14b98:	bls	14d58 <__assert_fail@plt+0x312c>
   14b9c:	ldrd	r8, [sp, #96]	; 0x60
   14ba0:	mvn	r2, #0
   14ba4:	mov	r3, #0
   14ba8:	mov	sl, #1
   14bac:	ldr	ip, [sp, #100]	; 0x64
   14bb0:	and	r8, r8, r2
   14bb4:	and	r9, r9, r3
   14bb8:	str	sl, [sp, #72]	; 0x48
   14bbc:	b	14be0 <__assert_fail@plt+0x2fb4>
   14bc0:	ldrd	r4, [sp, #176]	; 0xb0
   14bc4:	cmp	r5, r1
   14bc8:	cmpeq	r4, r0
   14bcc:	beq	14d58 <__assert_fail@plt+0x312c>
   14bd0:	ldr	r5, [sp, #72]	; 0x48
   14bd4:	ldr	r6, [sp, #168]	; 0xa8
   14bd8:	cmp	r5, r6
   14bdc:	beq	14d58 <__assert_fail@plt+0x312c>
   14be0:	mvn	r6, #0
   14be4:	and	r6, r6, r0
   14be8:	mov	r7, #0
   14bec:	and	r7, r7, r1
   14bf0:	umull	r2, r3, r6, r1
   14bf4:	ldr	fp, [sp, #72]	; 0x48
   14bf8:	mul	r0, r6, r7
   14bfc:	mov	sl, #0
   14c00:	umull	r4, r5, r6, r6
   14c04:	str	sl, [sp, #44]	; 0x2c
   14c08:	mla	r3, r1, r7, r3
   14c0c:	add	r0, r5, r0, lsl #1
   14c10:	str	r0, [sp, #40]	; 0x28
   14c14:	add	fp, fp, #1
   14c18:	str	fp, [sp, #72]	; 0x48
   14c1c:	adds	r0, r2, r2
   14c20:	ldrd	sl, [sp, #40]	; 0x28
   14c24:	umull	r6, r7, r1, r1
   14c28:	adc	r1, r3, r3
   14c2c:	adds	r0, r0, sl
   14c30:	str	r0, [sp, #52]	; 0x34
   14c34:	adc	r1, r1, fp
   14c38:	mov	fp, #0
   14c3c:	cmp	r3, r1
   14c40:	cmpeq	r2, r0
   14c44:	str	r1, [sp, #32]
   14c48:	str	fp, [sp, #36]	; 0x24
   14c4c:	bls	14c58 <__assert_fail@plt+0x302c>
   14c50:	adds	r6, r6, #0
   14c54:	adc	r7, r7, #1
   14c58:	ldr	r0, [sp, #36]	; 0x24
   14c5c:	str	r0, [sp, #48]	; 0x30
   14c60:	ldrd	r0, [sp, #48]	; 0x30
   14c64:	adds	r0, r0, r4
   14c68:	ldrd	r4, [sp, #32]
   14c6c:	adc	r1, r1, #0
   14c70:	adds	r4, r4, r6
   14c74:	ldr	r6, [sp, #76]	; 0x4c
   14c78:	adc	r5, r5, r7
   14c7c:	strd	r4, [sp, #24]
   14c80:	ldr	r5, [sp, #104]	; 0x68
   14c84:	umull	r2, r3, r0, r6
   14c88:	mul	sl, r0, r5
   14c8c:	mvn	r0, #0
   14c90:	mla	sl, r6, r1, sl
   14c94:	and	r2, r2, r0
   14c98:	mov	r1, #0
   14c9c:	umull	r6, r7, r2, r8
   14ca0:	add	sl, sl, r3
   14ca4:	and	r3, sl, r1
   14ca8:	umull	r4, r5, r2, ip
   14cac:	umull	r0, r1, sl, r8
   14cb0:	strd	r6, [sp, #80]	; 0x50
   14cb4:	mul	fp, r2, r9
   14cb8:	adds	r4, r4, r0
   14cbc:	mla	fp, r8, r3, fp
   14cc0:	mla	r1, sl, r9, r1
   14cc4:	add	fp, fp, r7
   14cc8:	ldr	r7, [sp, #36]	; 0x24
   14ccc:	mla	r5, ip, r3, r5
   14cd0:	str	fp, [sp, #56]	; 0x38
   14cd4:	str	r7, [sp, #60]	; 0x3c
   14cd8:	umull	r2, r3, sl, ip
   14cdc:	ldrd	sl, [sp, #56]	; 0x38
   14ce0:	adc	r5, r5, r1
   14ce4:	adds	r4, r4, sl
   14ce8:	adc	r5, r5, fp
   14cec:	mov	fp, #0
   14cf0:	cmp	r1, r5
   14cf4:	cmpeq	r0, r4
   14cf8:	str	r5, [sp, #64]	; 0x40
   14cfc:	str	fp, [sp, #68]	; 0x44
   14d00:	bls	14d0c <__assert_fail@plt+0x30e0>
   14d04:	adds	r2, r2, #0
   14d08:	adc	r3, r3, #1
   14d0c:	ldrd	r4, [sp, #64]	; 0x40
   14d10:	ldrd	r0, [sp, #24]
   14d14:	adds	r2, r2, r4
   14d18:	ldrd	r6, [sp, #24]
   14d1c:	adc	r3, r3, r5
   14d20:	subs	r0, r0, r2
   14d24:	sbc	r1, r1, r3
   14d28:	cmp	r7, r3
   14d2c:	cmpeq	r6, r2
   14d30:	bcs	14d40 <__assert_fail@plt+0x3114>
   14d34:	ldrd	sl, [sp, #96]	; 0x60
   14d38:	adds	r0, r0, sl
   14d3c:	adc	r1, r1, fp
   14d40:	ldrd	r2, [sp, #88]	; 0x58
   14d44:	cmp	r3, r1
   14d48:	cmpeq	r2, r0
   14d4c:	bne	14bc0 <__assert_fail@plt+0x2f94>
   14d50:	mov	r7, #1
   14d54:	str	r7, [sp, #108]	; 0x6c
   14d58:	ldr	r0, [sp, #108]	; 0x6c
   14d5c:	add	sp, sp, #116	; 0x74
   14d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d68:	cmp	r1, #0
   14d6c:	cmpeq	r0, #1
   14d70:	sub	sp, sp, #292	; 0x124
   14d74:	strd	r0, [sp, #72]	; 0x48
   14d78:	str	r2, [sp, #284]	; 0x11c
   14d7c:	str	r3, [sp, #276]	; 0x114
   14d80:	bls	15954 <__assert_fail@plt+0x3d28>
   14d84:	mov	r4, #0
   14d88:	mov	r5, #0
   14d8c:	strd	r4, [sp, #104]	; 0x68
   14d90:	mov	r1, #64	; 0x40
   14d94:	ldrd	r4, [sp, #72]	; 0x48
   14d98:	mov	r8, #0
   14d9c:	mov	r9, #0
   14da0:	mov	ip, r1
   14da4:	mov	r6, #1
   14da8:	mov	r7, #0
   14dac:	mov	r0, r8
   14db0:	mov	r1, r9
   14db4:	lsrs	r9, r9, #1
   14db8:	rrx	r8, r8
   14dbc:	lsl	fp, r4, #31
   14dc0:	lsrs	r5, r5, #1
   14dc4:	rrx	r4, r4
   14dc8:	cmp	r5, r7
   14dcc:	cmpeq	r4, r6
   14dd0:	mov	sl, #0
   14dd4:	orr	r9, r9, fp
   14dd8:	orr	r8, r8, sl
   14ddc:	bcc	14e08 <__assert_fail@plt+0x31dc>
   14de0:	cmp	r1, r9
   14de4:	cmpeq	r0, r8
   14de8:	movcc	r3, #0
   14dec:	movcs	r3, #1
   14df0:	cmp	r7, r5
   14df4:	cmpeq	r6, r4
   14df8:	movne	r3, #0
   14dfc:	andeq	r3, r3, #1
   14e00:	cmp	r3, sl
   14e04:	beq	14e34 <__assert_fail@plt+0x3208>
   14e08:	cmp	r1, r9
   14e0c:	cmpeq	r0, r8
   14e10:	mov	r3, #0
   14e14:	movcs	r2, #0
   14e18:	movcc	r2, #1
   14e1c:	subs	r6, r6, r4
   14e20:	sbc	r7, r7, r5
   14e24:	subs	r0, r0, r8
   14e28:	sbc	r1, r1, r9
   14e2c:	subs	r6, r6, r2
   14e30:	sbc	r7, r7, r3
   14e34:	subs	ip, ip, #1
   14e38:	bne	14db4 <__assert_fail@plt+0x3188>
   14e3c:	adds	r2, r0, r0
   14e40:	strd	r0, [sp, #104]	; 0x68
   14e44:	adc	r3, r1, r1
   14e48:	ldrd	r6, [sp, #104]	; 0x68
   14e4c:	ldrd	r0, [sp, #72]	; 0x48
   14e50:	mov	ip, #1
   14e54:	ldrd	sl, [sp, #72]	; 0x48
   14e58:	subs	r0, r0, r6
   14e5c:	sbc	r1, r1, r7
   14e60:	ldrd	r4, [sp, #72]	; 0x48
   14e64:	subs	r2, r2, sl
   14e68:	sbc	r3, r3, fp
   14e6c:	cmp	r7, r1
   14e70:	cmpeq	r6, r0
   14e74:	ldr	r6, [sp, #284]	; 0x11c
   14e78:	add	sl, sp, #256	; 0x100
   14e7c:	movcs	r0, #0
   14e80:	movcc	r0, #1
   14e84:	mov	r1, #0
   14e88:	rsbs	r0, r0, #0
   14e8c:	rsc	r1, r1, #0
   14e90:	mov	r7, #0
   14e94:	and	r0, r0, r4
   14e98:	strd	r6, [sl]
   14e9c:	and	r1, r1, r5
   14ea0:	adds	r6, r2, r0
   14ea4:	adc	r7, r3, r1
   14ea8:	ldr	fp, [pc, #2796]	; 1599c <__assert_fail@plt+0x3d70>
   14eac:	mov	sl, r6
   14eb0:	str	ip, [sp, #100]	; 0x64
   14eb4:	add	fp, pc, fp
   14eb8:	str	fp, [sp, #280]	; 0x118
   14ebc:	mov	fp, r7
   14ec0:	strd	r6, [sp, #152]	; 0x98
   14ec4:	strd	r6, [sp, #88]	; 0x58
   14ec8:	str	ip, [sp, #32]
   14ecc:	add	r7, sp, #256	; 0x100
   14ed0:	ldrd	r4, [sp, #72]	; 0x48
   14ed4:	ldrd	r6, [r7]
   14ed8:	cmp	r5, r7
   14edc:	cmpeq	r4, r6
   14ee0:	bls	15978 <__assert_fail@plt+0x3d4c>
   14ee4:	ldrd	r2, [sp, #72]	; 0x48
   14ee8:	mov	r0, #127	; 0x7f
   14eec:	ldr	r4, [sp, #280]	; 0x118
   14ef0:	add	r1, sp, #256	; 0x100
   14ef4:	ldrd	r6, [sp, #72]	; 0x48
   14ef8:	lsrs	r3, r3, #1
   14efc:	rrx	r2, r2
   14f00:	and	r2, r2, r0
   14f04:	add	r2, r4, r2
   14f08:	ldrd	r0, [r1]
   14f0c:	ldrd	r4, [sp, #72]	; 0x48
   14f10:	ldrb	r2, [r2, #752]	; 0x2f0
   14f14:	subs	r6, r6, r0
   14f18:	sbc	r7, r7, r1
   14f1c:	subs	r0, r0, r4
   14f20:	sbc	r1, r1, r5
   14f24:	strd	r6, [sp, #112]	; 0x70
   14f28:	ldr	r6, [sp, #76]	; 0x4c
   14f2c:	mov	r5, #0
   14f30:	mov	r4, r2
   14f34:	ldr	r7, [sp, #72]	; 0x48
   14f38:	umull	r2, r3, r2, r2
   14f3c:	ldrd	r8, [sp, #72]	; 0x48
   14f40:	strd	r0, [sp, #120]	; 0x78
   14f44:	mov	r1, #0
   14f48:	and	r9, r9, r1
   14f4c:	adds	r4, r4, r4
   14f50:	adc	r5, r5, r5
   14f54:	str	r6, [sp, #272]	; 0x110
   14f58:	ldr	ip, [sp, #72]	; 0x48
   14f5c:	mvn	r0, #0
   14f60:	mul	r1, r2, r6
   14f64:	strd	sl, [sp, #8]
   14f68:	mla	r1, r7, r3, r1
   14f6c:	ldr	fp, [sp, #32]
   14f70:	umull	r2, r3, r2, r7
   14f74:	and	r8, r8, r0
   14f78:	strd	r8, [sp, #80]	; 0x50
   14f7c:	add	r3, r1, r3
   14f80:	subs	r4, r4, r2
   14f84:	sbc	r5, r5, r3
   14f88:	mul	r1, r4, r5
   14f8c:	umull	r2, r3, r4, r4
   14f90:	adds	r4, r4, r4
   14f94:	adc	r5, r5, r5
   14f98:	add	r3, r3, r1, lsl #1
   14f9c:	mul	r1, r2, r6
   14fa0:	mla	r1, r7, r3, r1
   14fa4:	umull	r2, r3, r2, r7
   14fa8:	add	r3, r1, r3
   14fac:	subs	r4, r4, r2
   14fb0:	sbc	r5, r5, r3
   14fb4:	adds	r6, r4, r4
   14fb8:	umull	r2, r3, r4, r4
   14fbc:	adc	r7, r5, r5
   14fc0:	mul	r1, r4, r5
   14fc4:	strd	r6, [sp, #24]
   14fc8:	ldr	r7, [sp, #76]	; 0x4c
   14fcc:	ldrd	r4, [sp, #24]
   14fd0:	mov	sl, r7
   14fd4:	add	r3, r3, r1, lsl #1
   14fd8:	mul	r1, r2, r7
   14fdc:	mla	r1, ip, r3, r1
   14fe0:	umull	r2, r3, r2, ip
   14fe4:	add	r3, r1, r3
   14fe8:	subs	r4, r4, r2
   14fec:	sbc	r5, r5, r3
   14ff0:	strd	r4, [sp, #24]
   14ff4:	ldrd	r2, [sp, #88]	; 0x58
   14ff8:	mov	r7, #0
   14ffc:	mvn	r6, #0
   15000:	and	r3, r3, r7
   15004:	ldr	r7, [sp, #92]	; 0x5c
   15008:	and	r2, r2, r6
   1500c:	umull	r8, r9, r2, r7
   15010:	mul	ip, r2, r3
   15014:	umull	r0, r1, r2, r2
   15018:	adds	r2, r8, r8
   1501c:	mla	r9, r7, r3, r9
   15020:	add	r3, r1, ip, lsl #1
   15024:	mov	ip, #0
   15028:	str	r3, [sp, #160]	; 0xa0
   1502c:	str	ip, [sp, #164]	; 0xa4
   15030:	umull	r4, r5, r7, r7
   15034:	ldrd	r6, [sp, #160]	; 0xa0
   15038:	adc	r3, r9, r9
   1503c:	adds	r2, r2, r6
   15040:	adc	r3, r3, r7
   15044:	cmp	r9, r3
   15048:	cmpeq	r8, r2
   1504c:	bls	15058 <__assert_fail@plt+0x342c>
   15050:	adds	r4, r4, #0
   15054:	adc	r5, r5, #1
   15058:	str	r3, [sp, #128]	; 0x80
   1505c:	mov	r7, #0
   15060:	str	r7, [sp, #132]	; 0x84
   15064:	ldrd	r6, [sp, #128]	; 0x80
   15068:	str	r2, [sp, #172]	; 0xac
   1506c:	adds	r6, r6, r4
   15070:	ldr	lr, [sp, #28]
   15074:	adc	r7, r7, r5
   15078:	strd	r6, [sp, #32]
   1507c:	mov	r7, #0
   15080:	str	r7, [sp, #168]	; 0xa8
   15084:	ldrd	r4, [sp, #168]	; 0xa8
   15088:	ldr	r6, [sp, #84]	; 0x54
   1508c:	adds	r4, r4, r0
   15090:	ldr	r0, [sp, #24]
   15094:	adc	r5, r5, #0
   15098:	mul	ip, r4, lr
   1509c:	umull	r2, r3, r4, r0
   150a0:	mvn	r4, #0
   150a4:	mla	ip, r0, r5, ip
   150a8:	mov	r5, #0
   150ac:	and	r2, r2, r4
   150b0:	add	ip, ip, r3
   150b4:	and	r3, ip, r5
   150b8:	ldr	r5, [sp, #80]	; 0x50
   150bc:	umull	r0, r1, r2, sl
   150c0:	umull	r8, r9, ip, r5
   150c4:	mul	lr, r2, r6
   150c8:	adds	r0, r0, r8
   150cc:	mla	lr, r5, r3, lr
   150d0:	umull	r4, r5, r2, r5
   150d4:	mla	r1, sl, r3, r1
   150d8:	add	lr, lr, r5
   150dc:	mla	r9, ip, r6, r9
   150e0:	str	lr, [sp, #176]	; 0xb0
   150e4:	mov	lr, #0
   150e8:	str	lr, [sp, #180]	; 0xb4
   150ec:	ldrd	r4, [sp, #176]	; 0xb0
   150f0:	adc	r1, r1, r9
   150f4:	adds	r0, r0, r4
   150f8:	adc	r1, r1, r5
   150fc:	cmp	r9, r1
   15100:	cmpeq	r8, r0
   15104:	umull	r2, r3, ip, sl
   15108:	bls	15114 <__assert_fail@plt+0x34e8>
   1510c:	adds	r2, r2, #0
   15110:	adc	r3, r3, #1
   15114:	str	r1, [sp, #184]	; 0xb8
   15118:	mov	r5, #0
   1511c:	str	r5, [sp, #188]	; 0xbc
   15120:	ldrd	r6, [sp, #184]	; 0xb8
   15124:	ldrd	r0, [sp, #32]
   15128:	adds	r2, r2, r6
   1512c:	ldrd	r4, [sp, #32]
   15130:	adc	r3, r3, r7
   15134:	subs	r0, r0, r2
   15138:	sbc	r1, r1, r3
   1513c:	cmp	r5, r3
   15140:	cmpeq	r4, r2
   15144:	bcs	15154 <__assert_fail@plt+0x3528>
   15148:	ldrd	r6, [sp, #72]	; 0x48
   1514c:	adds	r0, r0, r6
   15150:	adc	r1, r1, r7
   15154:	ldrd	r4, [sp, #120]	; 0x78
   15158:	mov	r9, #0
   1515c:	ldrd	r6, [sp, #112]	; 0x70
   15160:	adds	r4, r4, r0
   15164:	ldrd	r2, [sp, #104]	; 0x68
   15168:	adc	r5, r5, r1
   1516c:	cmp	r1, r7
   15170:	cmpeq	r0, r6
   15174:	ldrd	r6, [sp, #72]	; 0x48
   15178:	mvn	r0, #0
   1517c:	mov	r1, #0
   15180:	and	r2, r2, r0
   15184:	and	r3, r3, r1
   15188:	movcs	r0, #0
   1518c:	movcc	r0, #1
   15190:	mov	r1, #0
   15194:	rsbs	r0, r0, #0
   15198:	rsc	r1, r1, #0
   1519c:	and	r0, r0, r6
   151a0:	and	r1, r1, r7
   151a4:	adds	r6, r4, r0
   151a8:	adc	r7, r5, r1
   151ac:	ldrd	r4, [sp, #152]	; 0x98
   151b0:	ldrd	r0, [sp, #152]	; 0x98
   151b4:	strd	r6, [sp, #88]	; 0x58
   151b8:	subs	r0, r0, r6
   151bc:	sbc	r1, r1, r7
   151c0:	cmp	r5, r7
   151c4:	cmpeq	r4, r6
   151c8:	ldrd	r6, [sp, #72]	; 0x48
   151cc:	movcs	r8, #0
   151d0:	movcc	r8, #1
   151d4:	rsbs	r8, r8, #0
   151d8:	rsc	r9, r9, #0
   151dc:	and	r8, r8, r6
   151e0:	and	r9, r9, r7
   151e4:	adds	r8, r8, r0
   151e8:	ldr	r7, [sp, #108]	; 0x6c
   151ec:	mvn	r0, #0
   151f0:	and	r0, r0, r8
   151f4:	adc	r9, r9, r1
   151f8:	mov	r1, #0
   151fc:	umull	r6, r7, r0, r7
   15200:	and	r1, r1, r9
   15204:	umull	r4, r5, r9, r2
   15208:	mul	ip, r0, r3
   1520c:	strd	r6, [sp, #32]
   15210:	umull	r6, r7, r0, r2
   15214:	ldr	lr, [sp, #36]	; 0x24
   15218:	mla	ip, r2, r1, ip
   1521c:	mla	r5, r9, r3, r5
   15220:	strd	r6, [sp, #144]	; 0x90
   15224:	ldr	r7, [sp, #108]	; 0x6c
   15228:	ldr	r0, [sp, #148]	; 0x94
   1522c:	ldr	r6, [sp, #108]	; 0x6c
   15230:	mla	r7, r7, r1, lr
   15234:	add	ip, ip, r0
   15238:	mov	r1, #0
   1523c:	str	ip, [sp, #192]	; 0xc0
   15240:	str	r1, [sp, #196]	; 0xc4
   15244:	umull	r2, r3, r9, r6
   15248:	str	r7, [sp, #36]	; 0x24
   1524c:	ldrd	r0, [sp, #32]
   15250:	ldrd	r6, [sp, #192]	; 0xc0
   15254:	adds	r4, r4, r0
   15258:	adc	r5, r5, r1
   1525c:	adds	r4, r4, r6
   15260:	adc	r5, r5, r7
   15264:	cmp	r1, r5
   15268:	cmpeq	r0, r4
   1526c:	bls	15278 <__assert_fail@plt+0x364c>
   15270:	adds	r2, r2, #0
   15274:	adc	r3, r3, #1
   15278:	mov	r7, #0
   1527c:	str	r5, [sp, #136]	; 0x88
   15280:	str	r7, [sp, #140]	; 0x8c
   15284:	str	r4, [sp, #204]	; 0xcc
   15288:	str	r7, [sp, #200]	; 0xc8
   1528c:	ldrd	r4, [sp, #136]	; 0x88
   15290:	ldrd	r0, [sp, #200]	; 0xc8
   15294:	ldr	ip, [sp, #144]	; 0x90
   15298:	adds	r4, r4, r2
   1529c:	ldr	lr, [sp, #28]
   152a0:	adc	r5, r5, r3
   152a4:	ldr	r6, [sp, #24]
   152a8:	adds	r0, r0, ip
   152ac:	adc	r1, r1, #0
   152b0:	ldr	r7, [sp, #80]	; 0x50
   152b4:	mul	ip, r0, lr
   152b8:	umull	r2, r3, r0, r6
   152bc:	mvn	r0, #0
   152c0:	mla	ip, r6, r1, ip
   152c4:	ldr	r6, [sp, #84]	; 0x54
   152c8:	and	r2, r2, r0
   152cc:	mov	r1, #0
   152d0:	add	ip, ip, r3
   152d4:	and	r3, ip, r1
   152d8:	ldr	r1, [sp, #80]	; 0x50
   152dc:	mul	lr, r2, r6
   152e0:	umull	r8, r9, ip, r1
   152e4:	mla	lr, r7, r3, lr
   152e8:	umull	r0, r1, r2, sl
   152ec:	umull	r6, r7, r2, r7
   152f0:	mov	r2, #0
   152f4:	str	r2, [sp, #212]	; 0xd4
   152f8:	adds	r0, r0, r8
   152fc:	add	lr, lr, r7
   15300:	str	lr, [sp, #208]	; 0xd0
   15304:	ldr	lr, [sp, #84]	; 0x54
   15308:	mla	r1, sl, r3, r1
   1530c:	strd	r6, [sp, #32]
   15310:	mla	r9, ip, lr, r9
   15314:	ldrd	r6, [sp, #208]	; 0xd0
   15318:	umull	r2, r3, ip, sl
   1531c:	adc	r1, r1, r9
   15320:	adds	r0, r0, r6
   15324:	adc	r1, r1, r7
   15328:	cmp	r9, r1
   1532c:	cmpeq	r8, r0
   15330:	bls	1533c <__assert_fail@plt+0x3710>
   15334:	adds	r2, r2, #0
   15338:	adc	r3, r3, #1
   1533c:	mov	r7, #0
   15340:	str	r1, [sp, #216]	; 0xd8
   15344:	str	r7, [sp, #220]	; 0xdc
   15348:	ldrd	r6, [sp, #216]	; 0xd8
   1534c:	adds	r2, r2, r6
   15350:	mov	r6, r4
   15354:	adc	r3, r3, r7
   15358:	mov	r7, r5
   1535c:	subs	r6, r6, r2
   15360:	sbc	r7, r7, r3
   15364:	cmp	r5, r3
   15368:	cmpeq	r4, r2
   1536c:	strd	r6, [sp, #104]	; 0x68
   15370:	bcs	15384 <__assert_fail@plt+0x3758>
   15374:	ldrd	r4, [sp, #72]	; 0x48
   15378:	adds	r6, r6, r4
   1537c:	adc	r7, r7, r5
   15380:	strd	r6, [sp, #104]	; 0x68
   15384:	and	r3, fp, #31
   15388:	cmp	r3, #1
   1538c:	beq	15598 <__assert_fail@plt+0x396c>
   15390:	subs	fp, fp, #1
   15394:	bne	14ff4 <__assert_fail@plt+0x33c8>
   15398:	ldr	r7, [sp, #100]	; 0x64
   1539c:	cmp	r7, #0
   153a0:	lsl	ip, r7, #1
   153a4:	str	ip, [sp, #144]	; 0x90
   153a8:	beq	155bc <__assert_fail@plt+0x3990>
   153ac:	ldrd	r4, [sp, #88]	; 0x58
   153b0:	mov	ip, fp
   153b4:	ldrd	r8, [sp, #80]	; 0x50
   153b8:	mov	r6, r4
   153bc:	mov	r7, r5
   153c0:	strd	r4, [sp, #8]
   153c4:	mvn	r0, #0
   153c8:	and	r0, r0, r6
   153cc:	mov	r1, #0
   153d0:	and	r1, r1, r7
   153d4:	umull	r2, r3, r0, r7
   153d8:	mov	r6, #0
   153dc:	mul	lr, r0, r1
   153e0:	str	r6, [sp, #44]	; 0x2c
   153e4:	umull	r4, r5, r0, r0
   153e8:	mla	r3, r7, r1, r3
   153ec:	add	lr, r5, lr, lsl #1
   153f0:	umull	r0, r1, r7, r7
   153f4:	str	lr, [sp, #40]	; 0x28
   153f8:	ldrd	r6, [sp, #40]	; 0x28
   153fc:	strd	r0, [sp, #32]
   15400:	adds	r0, r2, r2
   15404:	adc	r1, r3, r3
   15408:	adds	r0, r0, r6
   1540c:	adc	r1, r1, r7
   15410:	cmp	r3, r1
   15414:	cmpeq	r2, r0
   15418:	bls	1542c <__assert_fail@plt+0x3800>
   1541c:	ldrd	r2, [sp, #32]
   15420:	adds	r2, r2, #0
   15424:	adc	r3, r3, #1
   15428:	strd	r2, [sp, #32]
   1542c:	mov	r3, #0
   15430:	str	r1, [sp, #16]
   15434:	str	r3, [sp, #20]
   15438:	str	r0, [sp, #52]	; 0x34
   1543c:	ldrd	r0, [sp, #16]
   15440:	ldrd	r6, [sp, #32]
   15444:	ldr	r2, [sp, #28]
   15448:	adds	r6, r6, r0
   1544c:	str	r1, [sp, #48]	; 0x30
   15450:	adc	r7, r7, r1
   15454:	ldrd	r0, [sp, #48]	; 0x30
   15458:	strd	r6, [sp, #152]	; 0x98
   1545c:	mvn	r6, #0
   15460:	adds	r0, r0, r4
   15464:	ldr	r4, [sp, #24]
   15468:	adc	r1, r1, #0
   1546c:	mov	r7, #0
   15470:	mul	lr, r0, r2
   15474:	mla	lr, r4, r1, lr
   15478:	umull	r2, r3, r0, r4
   1547c:	add	lr, lr, r3
   15480:	and	r2, r2, r6
   15484:	and	r3, lr, r7
   15488:	umull	r0, r1, lr, r8
   1548c:	umull	r4, r5, r2, sl
   15490:	umull	r6, r7, r2, r8
   15494:	adds	r4, r4, r0
   15498:	mul	fp, r2, r9
   1549c:	mla	fp, r8, r3, fp
   154a0:	mla	r5, sl, r3, r5
   154a4:	strd	r6, [sp, #32]
   154a8:	mla	r1, lr, r9, r1
   154ac:	add	fp, fp, r7
   154b0:	mov	r7, #0
   154b4:	str	fp, [sp, #56]	; 0x38
   154b8:	str	r7, [sp, #60]	; 0x3c
   154bc:	ldrd	r6, [sp, #56]	; 0x38
   154c0:	adc	r5, r5, r1
   154c4:	umull	r2, r3, lr, sl
   154c8:	adds	r4, r4, r6
   154cc:	adc	r5, r5, r7
   154d0:	cmp	r1, r5
   154d4:	cmpeq	r0, r4
   154d8:	bls	154e4 <__assert_fail@plt+0x38b8>
   154dc:	adds	r2, r2, #0
   154e0:	adc	r3, r3, #1
   154e4:	mov	r7, #0
   154e8:	str	r5, [sp, #64]	; 0x40
   154ec:	str	r7, [sp, #68]	; 0x44
   154f0:	ldrd	r4, [sp, #64]	; 0x40
   154f4:	ldrd	r0, [sp, #152]	; 0x98
   154f8:	adds	r2, r2, r4
   154fc:	ldrd	r6, [sp, #152]	; 0x98
   15500:	adc	r3, r3, r5
   15504:	subs	r0, r0, r2
   15508:	sbc	r1, r1, r3
   1550c:	cmp	r7, r3
   15510:	cmpeq	r6, r2
   15514:	bcs	15524 <__assert_fail@plt+0x38f8>
   15518:	ldrd	r4, [sp, #72]	; 0x48
   1551c:	adds	r0, r0, r4
   15520:	adc	r1, r1, r5
   15524:	ldrd	r2, [sp, #120]	; 0x78
   15528:	add	ip, ip, #1
   1552c:	ldrd	r6, [sp, #112]	; 0x70
   15530:	adds	r2, r2, r0
   15534:	ldrd	r4, [sp, #72]	; 0x48
   15538:	adc	r3, r3, r1
   1553c:	cmp	r1, r7
   15540:	cmpeq	r0, r6
   15544:	mov	r7, #0
   15548:	movcs	r6, #0
   1554c:	movcc	r6, #1
   15550:	rsbs	r6, r6, #0
   15554:	rsc	r7, r7, #0
   15558:	and	r7, r7, r5
   1555c:	and	r6, r6, r4
   15560:	ldr	r5, [sp, #100]	; 0x64
   15564:	adds	r6, r6, r2
   15568:	adc	r7, r7, r3
   1556c:	cmp	ip, r5
   15570:	bne	153c4 <__assert_fail@plt+0x3798>
   15574:	strd	r6, [sp, #8]
   15578:	ldrd	r4, [sp, #8]
   1557c:	ldrd	r6, [sp, #88]	; 0x58
   15580:	ldr	fp, [sp, #100]	; 0x64
   15584:	strd	r4, [sp, #88]	; 0x58
   15588:	ldr	r5, [sp, #144]	; 0x90
   1558c:	strd	r6, [sp, #152]	; 0x98
   15590:	str	r5, [sp, #100]	; 0x64
   15594:	b	14ff4 <__assert_fail@plt+0x33c8>
   15598:	ldrd	r0, [sp, #104]	; 0x68
   1559c:	ldrd	r2, [sp, #72]	; 0x48
   155a0:	bl	12024 <__assert_fail@plt+0x3f8>
   155a4:	cmp	r1, #0
   155a8:	cmpeq	r0, #1
   155ac:	bne	155dc <__assert_fail@plt+0x39b0>
   155b0:	ldrd	r6, [sp, #88]	; 0x58
   155b4:	strd	r6, [sp, #8]
   155b8:	b	15390 <__assert_fail@plt+0x3764>
   155bc:	ldrd	r6, [sp, #88]	; 0x58
   155c0:	ldrd	r4, [sp, #88]	; 0x58
   155c4:	ldr	fp, [sp, #100]	; 0x64
   155c8:	strd	r6, [sp, #8]
   155cc:	ldr	r7, [sp, #144]	; 0x90
   155d0:	strd	r4, [sp, #152]	; 0x98
   155d4:	str	r7, [sp, #100]	; 0x64
   155d8:	b	14ff4 <__assert_fail@plt+0x33c8>
   155dc:	str	fp, [sp, #32]
   155e0:	ldrd	r6, [sp, #80]	; 0x50
   155e4:	ldrd	sl, [sp, #8]
   155e8:	mvn	r0, #0
   155ec:	and	r0, r0, sl
   155f0:	mov	r1, #0
   155f4:	and	r1, r1, fp
   155f8:	umull	r2, r3, r0, fp
   155fc:	mov	sl, #0
   15600:	mul	ip, r0, r1
   15604:	str	sl, [sp, #228]	; 0xe4
   15608:	umull	r4, r5, r0, r0
   1560c:	mla	r3, fp, r1, r3
   15610:	add	ip, r5, ip, lsl #1
   15614:	umull	r0, r1, fp, fp
   15618:	str	ip, [sp, #224]	; 0xe0
   1561c:	ldrd	sl, [sp, #224]	; 0xe0
   15620:	strd	r0, [sp, #80]	; 0x50
   15624:	adds	r0, r2, r2
   15628:	adc	r1, r3, r3
   1562c:	adds	r0, r0, sl
   15630:	adc	r1, r1, fp
   15634:	cmp	r3, r1
   15638:	cmpeq	r2, r0
   1563c:	bls	15650 <__assert_fail@plt+0x3a24>
   15640:	ldrd	r2, [sp, #80]	; 0x50
   15644:	adds	r2, r2, #0
   15648:	adc	r3, r3, #1
   1564c:	strd	r2, [sp, #80]	; 0x50
   15650:	ldrd	sl, [sp, #80]	; 0x50
   15654:	mov	r9, #0
   15658:	str	r0, [sp, #236]	; 0xec
   1565c:	mov	r8, r1
   15660:	str	r9, [sp, #232]	; 0xe8
   15664:	adds	sl, sl, r1
   15668:	ldrd	r0, [sp, #232]	; 0xe8
   1566c:	adc	fp, fp, r9
   15670:	ldr	lr, [sp, #24]
   15674:	adds	r0, r0, r4
   15678:	strd	sl, [sp, #144]	; 0x90
   1567c:	ldr	fp, [sp, #28]
   15680:	adc	r1, r1, #0
   15684:	umull	r2, r3, r0, lr
   15688:	ldr	sl, [sp, #272]	; 0x110
   1568c:	mul	ip, r0, fp
   15690:	mvn	r0, #0
   15694:	mla	ip, lr, r1, ip
   15698:	and	r2, r2, r0
   1569c:	mov	r1, #0
   156a0:	str	r9, [sp, #244]	; 0xf4
   156a4:	umull	r4, r5, r2, sl
   156a8:	add	ip, ip, r3
   156ac:	umull	sl, fp, r2, r6
   156b0:	and	r3, ip, r1
   156b4:	umull	r0, r1, ip, r6
   156b8:	mul	lr, r2, r7
   156bc:	strd	sl, [sp, #80]	; 0x50
   156c0:	mla	lr, r6, r3, lr
   156c4:	ldr	sl, [sp, #272]	; 0x110
   156c8:	mla	r1, ip, r7, r1
   156cc:	adds	r4, r4, r0
   156d0:	mla	r5, sl, r3, r5
   156d4:	add	lr, lr, fp
   156d8:	str	lr, [sp, #240]	; 0xf0
   156dc:	umull	r2, r3, ip, sl
   156e0:	ldrd	sl, [sp, #240]	; 0xf0
   156e4:	adc	r5, r5, r1
   156e8:	adds	r4, r4, sl
   156ec:	adc	r5, r5, fp
   156f0:	cmp	r1, r5
   156f4:	cmpeq	r0, r4
   156f8:	bls	15704 <__assert_fail@plt+0x3ad8>
   156fc:	adds	r2, r2, #0
   15700:	adc	r3, r3, #1
   15704:	mov	fp, #0
   15708:	str	r5, [sp, #248]	; 0xf8
   1570c:	str	fp, [sp, #252]	; 0xfc
   15710:	ldrd	r4, [sp, #248]	; 0xf8
   15714:	ldrd	r0, [sp, #144]	; 0x90
   15718:	adds	r2, r2, r4
   1571c:	ldrd	sl, [sp, #144]	; 0x90
   15720:	adc	r3, r3, r5
   15724:	subs	r0, r0, r2
   15728:	sbc	r1, r1, r3
   1572c:	cmp	fp, r3
   15730:	cmpeq	sl, r2
   15734:	bcs	15744 <__assert_fail@plt+0x3b18>
   15738:	ldrd	r4, [sp, #72]	; 0x48
   1573c:	adds	r0, r0, r4
   15740:	adc	r1, r1, r5
   15744:	ldrd	sl, [sp, #112]	; 0x70
   15748:	mov	r5, #0
   1574c:	ldrd	r2, [sp, #72]	; 0x48
   15750:	cmp	r1, fp
   15754:	cmpeq	r0, sl
   15758:	ldrd	sl, [sp, #120]	; 0x78
   1575c:	movcs	r4, #0
   15760:	movcc	r4, #1
   15764:	rsbs	r4, r4, #0
   15768:	rsc	r5, r5, #0
   1576c:	and	r4, r4, r2
   15770:	adds	r0, r0, sl
   15774:	adc	r1, r1, fp
   15778:	and	r5, r5, r3
   1577c:	adds	sl, r0, r4
   15780:	adc	fp, r1, r5
   15784:	ldrd	r4, [sp, #152]	; 0x98
   15788:	mov	r1, #0
   1578c:	subs	r4, r4, sl
   15790:	sbc	r5, r5, fp
   15794:	strd	r4, [sp, #80]	; 0x50
   15798:	ldrd	r4, [sp, #152]	; 0x98
   1579c:	cmp	r5, fp
   157a0:	cmpeq	r4, sl
   157a4:	ldrd	r4, [sp, #80]	; 0x50
   157a8:	movcs	r0, #0
   157ac:	movcc	r0, #1
   157b0:	rsbs	r0, r0, #0
   157b4:	rsc	r1, r1, #0
   157b8:	and	r0, r0, r2
   157bc:	and	r1, r1, r3
   157c0:	adds	r0, r0, r4
   157c4:	adc	r1, r1, r5
   157c8:	bl	12024 <__assert_fail@plt+0x3f8>
   157cc:	cmp	r1, #0
   157d0:	cmpeq	r0, #1
   157d4:	beq	155e8 <__assert_fail@plt+0x39bc>
   157d8:	add	r6, sp, #512	; 0x200
   157dc:	mov	r4, r0
   157e0:	mov	r5, r1
   157e4:	mov	r2, r4
   157e8:	ldrd	r0, [sp, #72]	; 0x48
   157ec:	mov	r3, r5
   157f0:	strd	r8, [r6, #-248]	; 0xffffff08
   157f4:	bl	22264 <close_stdout@@Base+0x8020>
   157f8:	cmp	r5, #0
   157fc:	cmpeq	r4, #1
   15800:	strd	r0, [sp, #72]	; 0x48
   15804:	bls	158c0 <__assert_fail@plt+0x3c94>
   15808:	movw	r0, #60792	; 0xed78
   1580c:	movt	r0, #381	; 0x17d
   15810:	mov	r1, #0
   15814:	cmp	r5, r1
   15818:	cmpeq	r4, r0
   1581c:	bhi	158ac <__assert_fail@plt+0x3c80>
   15820:	mov	r1, #1
   15824:	mov	r2, r4
   15828:	mov	r3, r5
   1582c:	str	r1, [sp]
   15830:	ldr	r0, [sp, #276]	; 0x114
   15834:	bl	12364 <__assert_fail@plt+0x738>
   15838:	ldrd	r4, [sp, #72]	; 0x48
   1583c:	cmp	r5, #0
   15840:	cmpeq	r4, #1
   15844:	bls	158e8 <__assert_fail@plt+0x3cbc>
   15848:	movw	r6, #60792	; 0xed78
   1584c:	movt	r6, #381	; 0x17d
   15850:	mov	r7, #0
   15854:	cmp	r5, r7
   15858:	cmpeq	r4, r6
   1585c:	bls	15938 <__assert_fail@plt+0x3d0c>
   15860:	ldrd	r0, [sp, #72]	; 0x48
   15864:	bl	16660 <__assert_fail@plt+0x4a34>
   15868:	cmp	r0, #0
   1586c:	bne	15938 <__assert_fail@plt+0x3d0c>
   15870:	ldrd	r0, [sp, #88]	; 0x58
   15874:	ldrd	r2, [sp, #72]	; 0x48
   15878:	bl	22264 <close_stdout@@Base+0x8020>
   1587c:	ldrd	r0, [sp, #152]	; 0x98
   15880:	strd	r2, [sp, #88]	; 0x58
   15884:	ldrd	r2, [sp, #72]	; 0x48
   15888:	bl	22264 <close_stdout@@Base+0x8020>
   1588c:	mov	r0, sl
   15890:	mov	r1, fp
   15894:	strd	r2, [sp, #152]	; 0x98
   15898:	ldrd	r2, [sp, #72]	; 0x48
   1589c:	bl	22264 <close_stdout@@Base+0x8020>
   158a0:	mov	sl, r2
   158a4:	mov	fp, r3
   158a8:	b	14ecc <__assert_fail@plt+0x32a0>
   158ac:	mov	r0, r4
   158b0:	mov	r1, r5
   158b4:	bl	16660 <__assert_fail@plt+0x4a34>
   158b8:	cmp	r0, #0
   158bc:	bne	15820 <__assert_fail@plt+0x3bf4>
   158c0:	ldr	r7, [sp, #284]	; 0x11c
   158c4:	mov	r0, r4
   158c8:	mov	r1, r5
   158cc:	ldr	r3, [sp, #276]	; 0x114
   158d0:	add	r2, r7, #1
   158d4:	bl	14d64 <__assert_fail@plt+0x3138>
   158d8:	ldrd	r4, [sp, #72]	; 0x48
   158dc:	cmp	r5, #0
   158e0:	cmpeq	r4, #1
   158e4:	bhi	15848 <__assert_fail@plt+0x3c1c>
   158e8:	ldrd	r0, [sp, #88]	; 0x58
   158ec:	ldrd	r2, [sp, #72]	; 0x48
   158f0:	bl	22264 <close_stdout@@Base+0x8020>
   158f4:	ldrd	r0, [sp, #152]	; 0x98
   158f8:	strd	r2, [sp, #88]	; 0x58
   158fc:	ldrd	r2, [sp, #72]	; 0x48
   15900:	bl	22264 <close_stdout@@Base+0x8020>
   15904:	mov	r0, sl
   15908:	mov	r1, fp
   1590c:	strd	r2, [sp, #152]	; 0x98
   15910:	ldrd	r2, [sp, #72]	; 0x48
   15914:	bl	22264 <close_stdout@@Base+0x8020>
   15918:	ldrd	r4, [sp, #72]	; 0x48
   1591c:	cmp	r5, #0
   15920:	cmpeq	r4, #1
   15924:	mov	sl, r2
   15928:	mov	fp, r3
   1592c:	bne	14ecc <__assert_fail@plt+0x32a0>
   15930:	add	sp, sp, #292	; 0x124
   15934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15938:	mov	r1, #1
   1593c:	ldr	r0, [sp, #276]	; 0x114
   15940:	ldrd	r2, [sp, #72]	; 0x48
   15944:	str	r1, [sp]
   15948:	bl	12364 <__assert_fail@plt+0x738>
   1594c:	add	sp, sp, #292	; 0x124
   15950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15954:	ldr	r3, [pc, #68]	; 159a0 <__assert_fail@plt+0x3d74>
   15958:	movw	r2, #1481	; 0x5c9
   1595c:	ldr	r0, [pc, #64]	; 159a4 <__assert_fail@plt+0x3d78>
   15960:	ldr	r1, [pc, #64]	; 159a8 <__assert_fail@plt+0x3d7c>
   15964:	add	r3, pc, r3
   15968:	add	r0, pc, r0
   1596c:	add	r3, r3, #724	; 0x2d4
   15970:	add	r1, pc, r1
   15974:	bl	11c2c <__assert_fail@plt>
   15978:	ldr	r3, [pc, #44]	; 159ac <__assert_fail@plt+0x3d80>
   1597c:	movw	r2, #1487	; 0x5cf
   15980:	ldr	r0, [pc, #40]	; 159b0 <__assert_fail@plt+0x3d84>
   15984:	ldr	r1, [pc, #40]	; 159b4 <__assert_fail@plt+0x3d88>
   15988:	add	r3, pc, r3
   1598c:	add	r0, pc, r0
   15990:	add	r3, r3, #724	; 0x2d4
   15994:	add	r1, pc, r1
   15998:	bl	11c2c <__assert_fail@plt>
   1599c:	andeq	sp, r0, ip, asr #27
   159a0:	andeq	sp, r0, ip, lsl r3
   159a4:	ldrdeq	r0, [r1], -r4
   159a8:	andeq	r0, r1, r8, ror #9
   159ac:	strdeq	sp, [r0], -r8
   159b0:			; <UNDEFINED> instruction: 0x000106bc
   159b4:	andeq	r0, r1, r4, asr #9
   159b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159bc:	sub	sp, sp, #236	; 0xec
   159c0:	mov	sl, r2
   159c4:	mov	fp, r3
   159c8:	strd	r0, [sp, #128]	; 0x80
   159cc:	cmp	fp, #0
   159d0:	cmpeq	sl, #1
   159d4:	ldr	r5, [sp, #128]	; 0x80
   159d8:	mov	r0, #0
   159dc:	ldr	ip, [sp, #132]	; 0x84
   159e0:	movhi	r1, #0
   159e4:	movls	r1, #1
   159e8:	ldr	r4, [sp, #272]	; 0x110
   159ec:	mov	r2, #0
   159f0:	orrs	r5, r5, ip
   159f4:	mov	r3, #0
   159f8:	movne	r1, #0
   159fc:	andeq	r1, r1, #1
   15a00:	cmp	r1, r0
   15a04:	str	r4, [sp, #208]	; 0xd0
   15a08:	strb	r0, [r4, #250]	; 0xfa
   15a0c:	strd	r2, [r4, #8]
   15a10:	beq	15a1c <__assert_fail@plt+0x3df0>
   15a14:	add	sp, sp, #236	; 0xec
   15a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a1c:	mov	r4, #1
   15a20:	mov	r5, #0
   15a24:	and	r2, sl, r4
   15a28:	and	r3, fp, r5
   15a2c:	orrs	r0, r2, r3
   15a30:	beq	15fdc <__assert_fail@plt+0x43b0>
   15a34:	ldrd	r4, [sp, #128]	; 0x80
   15a38:	orrs	r5, r4, r5
   15a3c:	beq	16184 <__assert_fail@plt+0x4558>
   15a40:	ldr	r3, [pc, #3064]	; 16640 <__assert_fail@plt+0x4a14>
   15a44:	mov	r5, #0
   15a48:	mov	r4, #3
   15a4c:	strd	sl, [sp, #136]	; 0x88
   15a50:	add	r3, pc, r3
   15a54:	strd	r4, [sp, #104]	; 0x68
   15a58:	add	r9, r3, #880	; 0x370
   15a5c:	mov	r5, #0
   15a60:	str	r3, [sp, #172]	; 0xac
   15a64:	mov	r8, r9
   15a68:	str	r5, [sp, #168]	; 0xa8
   15a6c:	ldrd	r4, [sp, #104]	; 0x68
   15a70:	mvn	r2, #0
   15a74:	ldr	r1, [r8, #4]
   15a78:	mov	r3, #0
   15a7c:	and	r4, r4, r2
   15a80:	and	r5, r5, r3
   15a84:	ldr	sl, [r8]
   15a88:	ldr	r9, [sp, #108]	; 0x6c
   15a8c:	mov	r6, r4
   15a90:	mov	r7, r5
   15a94:	mov	fp, r1
   15a98:	ldr	ip, [sp, #136]	; 0x88
   15a9c:	mov	r5, #0
   15aa0:	ldr	r2, [sp, #140]	; 0x8c
   15aa4:	str	r5, [sp, #148]	; 0x94
   15aa8:	umull	r0, r1, ip, sl
   15aac:	mul	r4, ip, fp
   15ab0:	mla	r4, sl, r2, r4
   15ab4:	strd	r0, [sp, #120]	; 0x78
   15ab8:	mvn	r0, #0
   15abc:	add	r4, r4, r1
   15ac0:	str	r4, [sp, #124]	; 0x7c
   15ac4:	ldrd	r2, [sp, #120]	; 0x78
   15ac8:	mov	r1, #0
   15acc:	and	r2, r2, r0
   15ad0:	and	r3, r3, r1
   15ad4:	umull	r0, r1, r4, r6
   15ad8:	mul	ip, r2, r7
   15adc:	mla	ip, r6, r3, ip
   15ae0:	strd	r0, [sp, #112]	; 0x70
   15ae4:	umull	r0, r1, r2, r9
   15ae8:	strd	r0, [sp, #8]
   15aec:	umull	r0, r1, r2, r6
   15af0:	strd	r0, [sp, #160]	; 0xa0
   15af4:	ldr	r1, [sp, #12]
   15af8:	ldr	r2, [sp, #164]	; 0xa4
   15afc:	mla	r1, r9, r3, r1
   15b00:	ldr	r3, [sp, #116]	; 0x74
   15b04:	add	ip, ip, r2
   15b08:	str	ip, [sp, #144]	; 0x90
   15b0c:	mla	r3, r4, r7, r3
   15b10:	str	r1, [sp, #12]
   15b14:	ldrd	r0, [sp, #8]
   15b18:	umull	r4, r5, r4, r9
   15b1c:	str	r3, [sp, #116]	; 0x74
   15b20:	ldrd	r2, [sp, #112]	; 0x70
   15b24:	adds	r0, r0, r2
   15b28:	adc	r1, r1, r3
   15b2c:	ldrd	r2, [sp, #144]	; 0x90
   15b30:	adds	r0, r0, r2
   15b34:	adc	r1, r1, r3
   15b38:	ldrd	r2, [sp, #112]	; 0x70
   15b3c:	str	r1, [sp, #152]	; 0x98
   15b40:	cmp	r3, r1
   15b44:	cmpeq	r2, r0
   15b48:	mov	r3, #0
   15b4c:	str	r3, [sp, #156]	; 0x9c
   15b50:	bls	15b5c <__assert_fail@plt+0x3f30>
   15b54:	adds	r4, r4, #0
   15b58:	adc	r5, r5, #1
   15b5c:	ldrd	r0, [sp, #152]	; 0x98
   15b60:	ldrd	r2, [sp, #128]	; 0x80
   15b64:	adds	r4, r4, r0
   15b68:	adc	r5, r5, r1
   15b6c:	cmp	r5, r3
   15b70:	cmpeq	r4, r2
   15b74:	bhi	15bac <__assert_fail@plt+0x3f80>
   15b78:	subs	r4, r2, r4
   15b7c:	sbc	r5, r3, r5
   15b80:	umull	r2, r3, r4, sl
   15b84:	mul	r1, r4, fp
   15b88:	mla	r1, sl, r5, r1
   15b8c:	strd	r2, [sp, #112]	; 0x70
   15b90:	add	r1, r1, r3
   15b94:	str	r1, [sp, #116]	; 0x74
   15b98:	ldrd	r4, [sp, #112]	; 0x70
   15b9c:	ldrd	r0, [r8, #8]
   15ba0:	cmp	r5, r1
   15ba4:	cmpeq	r4, r0
   15ba8:	bls	16150 <__assert_fail@plt+0x4524>
   15bac:	ldr	r5, [sp, #168]	; 0xa8
   15bb0:	add	r8, r8, #16
   15bb4:	ldr	ip, [sp, #172]	; 0xac
   15bb8:	add	r5, r5, #1
   15bbc:	str	r5, [sp, #168]	; 0xa8
   15bc0:	add	r3, ip, #48	; 0x30
   15bc4:	ldr	r0, [sp, #128]	; 0x80
   15bc8:	ldr	r1, [sp, #132]	; 0x84
   15bcc:	movw	ip, #667	; 0x29b
   15bd0:	ldrb	r2, [r5, r3]
   15bd4:	mov	r3, #0
   15bd8:	ldrd	r4, [sp, #104]	; 0x68
   15bdc:	adds	r4, r4, r2
   15be0:	adc	r5, r5, r3
   15be4:	orrs	r1, r0, r1
   15be8:	strd	r4, [sp, #104]	; 0x68
   15bec:	ldr	r5, [sp, #168]	; 0xa8
   15bf0:	moveq	r3, #0
   15bf4:	movne	r3, #1
   15bf8:	cmp	r5, ip
   15bfc:	movhi	r3, #0
   15c00:	andls	r3, r3, #1
   15c04:	cmp	r3, #0
   15c08:	bne	15a6c <__assert_fail@plt+0x3e40>
   15c0c:	ldr	r4, [sp, #168]	; 0xa8
   15c10:	ldrd	sl, [sp, #136]	; 0x88
   15c14:	cmp	r4, #668	; 0x29c
   15c18:	bcs	15f64 <__assert_fail@plt+0x4338>
   15c1c:	ldr	r3, [pc, #2592]	; 16644 <__assert_fail@plt+0x4a18>
   15c20:	mov	r4, #0
   15c24:	ldr	ip, [sp, #168]	; 0xa8
   15c28:	add	r3, pc, r3
   15c2c:	ldr	r1, [pc, #2580]	; 16648 <__assert_fail@plt+0x4a1c>
   15c30:	add	r9, r3, #880	; 0x370
   15c34:	add	r3, r3, #48	; 0x30
   15c38:	add	r9, r9, ip, lsl #4
   15c3c:	add	r3, r3, ip
   15c40:	str	r3, [sp, #160]	; 0xa0
   15c44:	add	r5, r9, #112	; 0x70
   15c48:	ldr	r2, [pc, #2556]	; 1664c <__assert_fail@plt+0x4a20>
   15c4c:	add	r6, r9, #24
   15c50:	str	r5, [sp, #172]	; 0xac
   15c54:	add	r5, r9, #96	; 0x60
   15c58:	ldr	r3, [pc, #2544]	; 16650 <__assert_fail@plt+0x4a24>
   15c5c:	add	r8, r9, #40	; 0x28
   15c60:	str	r5, [sp, #176]	; 0xb0
   15c64:	add	r5, r9, #80	; 0x50
   15c68:	str	r5, [sp, #180]	; 0xb4
   15c6c:	add	r5, r9, #64	; 0x40
   15c70:	str	r5, [sp, #184]	; 0xb8
   15c74:	add	r5, r9, #32
   15c78:	str	r5, [sp, #192]	; 0xc0
   15c7c:	add	r5, r9, #16
   15c80:	str	r5, [sp, #196]	; 0xc4
   15c84:	add	r1, pc, r1
   15c88:	ldr	r5, [sp, #160]	; 0xa0
   15c8c:	add	r2, pc, r2
   15c90:	add	r3, pc, r3
   15c94:	add	ip, r9, #120	; 0x78
   15c98:	str	r9, [sp, #112]	; 0x70
   15c9c:	add	r7, r9, #72	; 0x48
   15ca0:	str	ip, [sp, #144]	; 0x90
   15ca4:	add	r1, r1, #52	; 0x34
   15ca8:	add	ip, r9, #104	; 0x68
   15cac:	add	r2, r2, #53	; 0x35
   15cb0:	str	ip, [sp, #136]	; 0x88
   15cb4:	add	r3, r3, #54	; 0x36
   15cb8:	add	ip, r9, #88	; 0x58
   15cbc:	str	r9, [sp, #200]	; 0xc8
   15cc0:	str	ip, [sp, #120]	; 0x78
   15cc4:	add	ip, r9, #48	; 0x30
   15cc8:	str	r5, [sp, #204]	; 0xcc
   15ccc:	str	ip, [sp, #188]	; 0xbc
   15cd0:	add	ip, r9, #56	; 0x38
   15cd4:	str	r1, [sp, #216]	; 0xd8
   15cd8:	str	ip, [sp, #152]	; 0x98
   15cdc:	mov	ip, r6
   15ce0:	str	r2, [sp, #220]	; 0xdc
   15ce4:	mov	r6, r8
   15ce8:	str	r3, [sp, #224]	; 0xe0
   15cec:	ldrd	r8, [sp, #104]	; 0x68
   15cf0:	b	15d6c <__assert_fail@plt+0x4140>
   15cf4:	ldr	r5, [sp, #168]	; 0xa8
   15cf8:	add	r4, r4, #128	; 0x80
   15cfc:	ldr	r1, [sp, #112]	; 0x70
   15d00:	add	r7, r7, #128	; 0x80
   15d04:	add	r5, r5, #8
   15d08:	str	r5, [sp, #168]	; 0xa8
   15d0c:	add	r1, r1, #128	; 0x80
   15d10:	cmp	r5, #668	; 0x29c
   15d14:	str	r1, [sp, #112]	; 0x70
   15d18:	add	r6, r6, #128	; 0x80
   15d1c:	ldr	r5, [sp, #144]	; 0x90
   15d20:	add	ip, ip, #128	; 0x80
   15d24:	ldr	r1, [sp, #136]	; 0x88
   15d28:	add	r5, r5, #128	; 0x80
   15d2c:	str	r5, [sp, #144]	; 0x90
   15d30:	add	r1, r1, #128	; 0x80
   15d34:	ldr	r5, [sp, #120]	; 0x78
   15d38:	str	r1, [sp, #136]	; 0x88
   15d3c:	ldr	r1, [sp, #152]	; 0x98
   15d40:	add	r5, r5, #128	; 0x80
   15d44:	str	r5, [sp, #120]	; 0x78
   15d48:	add	r1, r1, #128	; 0x80
   15d4c:	ldr	r5, [sp, #160]	; 0xa0
   15d50:	str	r1, [sp, #152]	; 0x98
   15d54:	ldr	r1, [sp, #204]	; 0xcc
   15d58:	add	r5, r5, #8
   15d5c:	str	r5, [sp, #160]	; 0xa0
   15d60:	add	r1, r1, #8
   15d64:	str	r1, [sp, #204]	; 0xcc
   15d68:	bcs	15f64 <__assert_fail@plt+0x4338>
   15d6c:	ldr	r1, [sp, #200]	; 0xc8
   15d70:	ldr	r3, [sp, #112]	; 0x70
   15d74:	add	r5, r1, r4
   15d78:	ldr	r1, [r1, r4]
   15d7c:	ldr	r0, [r5, #4]
   15d80:	ldrd	r2, [r3, #8]
   15d84:	mul	r0, sl, r0
   15d88:	strd	r2, [sp, #96]	; 0x60
   15d8c:	umull	r2, r3, r1, sl
   15d90:	mla	r1, r1, fp, r0
   15d94:	add	r3, r1, r3
   15d98:	ldrd	r0, [sp, #96]	; 0x60
   15d9c:	cmp	r1, r3
   15da0:	cmpeq	r0, r2
   15da4:	bcs	16534 <__assert_fail@plt+0x4908>
   15da8:	ldr	r1, [sp, #196]	; 0xc4
   15dac:	add	r5, r1, r4
   15db0:	ldr	r1, [r1, r4]
   15db4:	ldr	r0, [r5, #4]
   15db8:	umull	r2, r3, r1, sl
   15dbc:	mul	r0, sl, r0
   15dc0:	mla	r1, r1, fp, r0
   15dc4:	add	r3, r1, r3
   15dc8:	ldrd	r0, [ip]
   15dcc:	cmp	r3, r1
   15dd0:	cmpeq	r2, r0
   15dd4:	bls	165a8 <__assert_fail@plt+0x497c>
   15dd8:	ldr	r1, [sp, #192]	; 0xc0
   15ddc:	add	r5, r1, r4
   15de0:	ldr	r1, [r1, r4]
   15de4:	ldr	r0, [r5, #4]
   15de8:	umull	r2, r3, r1, sl
   15dec:	mul	r0, sl, r0
   15df0:	mla	r1, r1, fp, r0
   15df4:	add	r3, r1, r3
   15df8:	ldrd	r0, [r6]
   15dfc:	cmp	r1, r3
   15e00:	cmpeq	r0, r2
   15e04:	bcs	1619c <__assert_fail@plt+0x4570>
   15e08:	ldr	r1, [sp, #188]	; 0xbc
   15e0c:	ldr	r3, [sp, #152]	; 0x98
   15e10:	add	r5, r1, r4
   15e14:	ldr	r1, [r1, r4]
   15e18:	ldr	r0, [r5, #4]
   15e1c:	ldrd	r2, [r3]
   15e20:	mul	r0, sl, r0
   15e24:	strd	r2, [sp, #80]	; 0x50
   15e28:	umull	r2, r3, r1, sl
   15e2c:	mla	r1, r1, fp, r0
   15e30:	add	r3, r1, r3
   15e34:	ldrd	r0, [sp, #80]	; 0x50
   15e38:	cmp	r1, r3
   15e3c:	cmpeq	r0, r2
   15e40:	bcs	16220 <__assert_fail@plt+0x45f4>
   15e44:	ldr	r1, [sp, #184]	; 0xb8
   15e48:	add	r5, r1, r4
   15e4c:	ldr	r1, [r1, r4]
   15e50:	ldr	r0, [r5, #4]
   15e54:	umull	r2, r3, r1, sl
   15e58:	mul	r0, sl, r0
   15e5c:	mla	r1, r1, fp, r0
   15e60:	add	r3, r1, r3
   15e64:	ldrd	r0, [r7]
   15e68:	cmp	r1, r3
   15e6c:	cmpeq	r0, r2
   15e70:	bcs	16400 <__assert_fail@plt+0x47d4>
   15e74:	ldr	r1, [sp, #180]	; 0xb4
   15e78:	ldr	r3, [sp, #120]	; 0x78
   15e7c:	add	r5, r1, r4
   15e80:	ldr	r1, [r1, r4]
   15e84:	ldr	r0, [r5, #4]
   15e88:	ldrd	r2, [r3]
   15e8c:	mul	r0, sl, r0
   15e90:	strd	r2, [sp, #64]	; 0x40
   15e94:	umull	r2, r3, r1, sl
   15e98:	mla	r1, r1, fp, r0
   15e9c:	add	r3, r1, r3
   15ea0:	ldrd	r0, [sp, #64]	; 0x40
   15ea4:	cmp	r3, r1
   15ea8:	cmpeq	r2, r0
   15eac:	bls	16498 <__assert_fail@plt+0x486c>
   15eb0:	ldr	r1, [sp, #176]	; 0xb0
   15eb4:	ldr	r3, [sp, #136]	; 0x88
   15eb8:	add	r5, r1, r4
   15ebc:	ldr	r1, [r1, r4]
   15ec0:	ldr	r0, [r5, #4]
   15ec4:	ldrd	r2, [r3]
   15ec8:	mul	r0, sl, r0
   15ecc:	strd	r2, [sp, #56]	; 0x38
   15ed0:	umull	r2, r3, r1, sl
   15ed4:	mla	r1, r1, fp, r0
   15ed8:	add	r3, r1, r3
   15edc:	ldrd	r0, [sp, #56]	; 0x38
   15ee0:	cmp	r1, r3
   15ee4:	cmpeq	r0, r2
   15ee8:	bcs	162c0 <__assert_fail@plt+0x4694>
   15eec:	ldr	r1, [sp, #172]	; 0xac
   15ef0:	ldr	r3, [sp, #144]	; 0x90
   15ef4:	add	r5, r1, r4
   15ef8:	ldr	r1, [r1, r4]
   15efc:	ldr	r0, [r5, #4]
   15f00:	ldrd	r2, [r3]
   15f04:	mul	r0, sl, r0
   15f08:	strd	r2, [sp, #40]	; 0x28
   15f0c:	umull	r2, r3, r1, sl
   15f10:	mla	r1, r1, fp, r0
   15f14:	add	r3, r1, r3
   15f18:	ldrd	r0, [sp, #40]	; 0x28
   15f1c:	cmp	r1, r3
   15f20:	cmpeq	r0, r2
   15f24:	bcs	1635c <__assert_fail@plt+0x4730>
   15f28:	ldr	r3, [pc, #1828]	; 16654 <__assert_fail@plt+0x4a28>
   15f2c:	ldr	r1, [sp, #168]	; 0xa8
   15f30:	add	r3, pc, r3
   15f34:	add	r3, r3, #3488	; 0xda0
   15f38:	add	r3, r3, #8
   15f3c:	ldrb	r2, [r1, r3]
   15f40:	mov	r3, #0
   15f44:	adds	r8, r8, r2
   15f48:	adc	r9, r9, r3
   15f4c:	umull	r2, r3, r8, r8
   15f50:	mul	r1, r8, r9
   15f54:	add	r3, r3, r1, lsl #1
   15f58:	cmp	fp, r3
   15f5c:	cmpeq	sl, r2
   15f60:	bcs	15cf4 <__assert_fail@plt+0x40c8>
   15f64:	ldrd	r4, [sp, #128]	; 0x80
   15f68:	orrs	r5, r4, r5
   15f6c:	bne	15f7c <__assert_fail@plt+0x4350>
   15f70:	cmp	fp, #0
   15f74:	cmpeq	sl, #1
   15f78:	bls	15a14 <__assert_fail@plt+0x3de8>
   15f7c:	ldrd	r0, [sp, #128]	; 0x80
   15f80:	mov	r2, sl
   15f84:	mov	r3, fp
   15f88:	bl	17988 <__assert_fail@plt+0x5d5c>
   15f8c:	cmp	r0, #0
   15f90:	bne	16118 <__assert_fail@plt+0x44ec>
   15f94:	ldr	r3, [pc, #1724]	; 16658 <__assert_fail@plt+0x4a2c>
   15f98:	add	r3, pc, r3
   15f9c:	ldr	r3, [r3, #4]
   15fa0:	cmp	r3, #2
   15fa4:	beq	1612c <__assert_fail@plt+0x4500>
   15fa8:	ldrd	r4, [sp, #128]	; 0x80
   15fac:	orrs	r5, r4, r5
   15fb0:	beq	16064 <__assert_fail@plt+0x4438>
   15fb4:	ldr	r4, [sp, #208]	; 0xd0
   15fb8:	mov	ip, #1
   15fbc:	ldrd	r0, [sp, #128]	; 0x80
   15fc0:	mov	r2, sl
   15fc4:	mov	r3, fp
   15fc8:	str	ip, [sp]
   15fcc:	str	r4, [sp, #4]
   15fd0:	bl	179ec <__assert_fail@plt+0x5dc0>
   15fd4:	add	sp, sp, #236	; 0xec
   15fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fdc:	orrs	r2, sl, fp
   15fe0:	bne	16080 <__assert_fail@plt+0x4454>
   15fe4:	ldrd	r2, [sp, #128]	; 0x80
   15fe8:	and	r2, r2, r4
   15fec:	and	r3, r3, r5
   15ff0:	orrs	ip, r2, r3
   15ff4:	bne	16178 <__assert_fail@plt+0x454c>
   15ff8:	ldrd	r2, [sp, #128]	; 0x80
   15ffc:	mov	ip, r1
   16000:	lsrs	r3, r3, #1
   16004:	rrx	r2, r2
   16008:	and	r0, r2, r4
   1600c:	and	r1, r3, r5
   16010:	add	ip, ip, #1
   16014:	orrs	lr, r0, r1
   16018:	beq	16000 <__assert_fail@plt+0x43d4>
   1601c:	add	r0, ip, #64	; 0x40
   16020:	ldr	r1, [sp, #128]	; 0x80
   16024:	rsb	r3, ip, #32
   16028:	ldr	r2, [sp, #132]	; 0x84
   1602c:	mov	r4, #0
   16030:	mov	r5, #0
   16034:	strd	r4, [sp, #128]	; 0x80
   16038:	lsr	sl, r1, ip
   1603c:	orr	sl, sl, r2, lsl r3
   16040:	sub	r3, ip, #32
   16044:	orr	sl, sl, r2, lsr r3
   16048:	lsr	fp, r2, ip
   1604c:	str	r0, [sp]
   16050:	mov	r2, #2
   16054:	ldr	r0, [sp, #208]	; 0xd0
   16058:	mov	r3, #0
   1605c:	bl	12364 <__assert_fail@plt+0x738>
   16060:	b	15a34 <__assert_fail@plt+0x3e08>
   16064:	mov	r0, sl
   16068:	mov	r1, fp
   1606c:	ldr	r3, [sp, #208]	; 0xd0
   16070:	mov	r2, #1
   16074:	add	sp, sp, #236	; 0xec
   16078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1607c:	b	14d64 <__assert_fail@plt+0x3138>
   16080:	mov	r2, sl
   16084:	mov	r3, fp
   16088:	mov	ip, r1
   1608c:	b	16094 <__assert_fail@plt+0x4468>
   16090:	mov	ip, r0
   16094:	lsrs	r3, r3, #1
   16098:	rrx	r2, r2
   1609c:	and	r0, r2, r4
   160a0:	and	r1, r3, r5
   160a4:	orrs	lr, r0, r1
   160a8:	add	r0, ip, #1
   160ac:	beq	16090 <__assert_fail@plt+0x4464>
   160b0:	ldr	r1, [sp, #132]	; 0x84
   160b4:	rsb	r2, ip, #63	; 0x3f
   160b8:	ldr	lr, [sp, #128]	; 0x80
   160bc:	lsr	r6, sl, r0
   160c0:	sub	r3, r2, #32
   160c4:	sub	ip, ip, #31
   160c8:	lsl	r5, r1, r2
   160cc:	rsb	r1, r0, #32
   160d0:	orr	r6, r6, fp, lsl r1
   160d4:	lsl	r4, lr, r2
   160d8:	orr	r5, r5, lr, lsl r3
   160dc:	orr	r6, r6, fp, lsr ip
   160e0:	rsb	r3, r2, #32
   160e4:	ldr	r2, [sp, #132]	; 0x84
   160e8:	orr	sl, r4, r6
   160ec:	ldr	r4, [sp, #132]	; 0x84
   160f0:	orr	r5, r5, lr, lsr r3
   160f4:	lsr	r3, lr, r0
   160f8:	orr	r3, r3, r2, lsl r1
   160fc:	lsr	r7, fp, r0
   16100:	lsr	r2, r2, r0
   16104:	orr	r3, r3, r4, lsr ip
   16108:	orr	fp, r5, r7
   1610c:	str	r3, [sp, #128]	; 0x80
   16110:	str	r2, [sp, #132]	; 0x84
   16114:	b	1604c <__assert_fail@plt+0x4420>
   16118:	strd	sl, [sp]
   1611c:	ldr	r0, [sp, #208]	; 0xd0
   16120:	ldrd	r2, [sp, #128]	; 0x80
   16124:	bl	135f4 <__assert_fail@plt+0x19c8>
   16128:	b	15a14 <__assert_fail@plt+0x3de8>
   1612c:	ldr	ip, [sp, #208]	; 0xd0
   16130:	mov	r2, sl
   16134:	ldrd	r0, [sp, #128]	; 0x80
   16138:	mov	r3, fp
   1613c:	str	ip, [sp]
   16140:	bl	18704 <__assert_fail@plt+0x6ad8>
   16144:	cmp	r0, #0
   16148:	beq	15fa8 <__assert_fail@plt+0x437c>
   1614c:	b	15a14 <__assert_fail@plt+0x3de8>
   16150:	ldrd	r4, [sp, #120]	; 0x78
   16154:	mov	r1, #1
   16158:	ldr	r0, [sp, #208]	; 0xd0
   1615c:	str	r1, [sp]
   16160:	strd	r4, [sp, #136]	; 0x88
   16164:	ldrd	r4, [sp, #112]	; 0x70
   16168:	ldrd	r2, [sp, #104]	; 0x68
   1616c:	strd	r4, [sp, #128]	; 0x80
   16170:	bl	12364 <__assert_fail@plt+0x738>
   16174:	b	15a98 <__assert_fail@plt+0x3e6c>
   16178:	mov	ip, r1
   1617c:	mov	r0, #64	; 0x40
   16180:	b	16020 <__assert_fail@plt+0x43f4>
   16184:	mov	r5, #0
   16188:	mov	r4, #3
   1618c:	strd	r4, [sp, #104]	; 0x68
   16190:	mov	r5, #0
   16194:	str	r5, [sp, #168]	; 0xa8
   16198:	b	15c1c <__assert_fail@plt+0x3ff0>
   1619c:	ldr	r1, [sp, #160]	; 0xa0
   161a0:	mov	fp, #0
   161a4:	str	r7, [sp, #228]	; 0xe4
   161a8:	mov	r7, ip
   161ac:	ldrb	sl, [r1, #1]
   161b0:	ldrb	r0, [r1, #2]
   161b4:	mov	r1, #0
   161b8:	adds	r0, r0, sl
   161bc:	mov	sl, r2
   161c0:	adc	r1, r1, fp
   161c4:	adds	r2, r0, r8
   161c8:	mov	fp, r3
   161cc:	adc	r3, r1, r9
   161d0:	strd	r2, [sp, #104]	; 0x68
   161d4:	mov	r3, #1
   161d8:	ldr	r0, [sp, #208]	; 0xd0
   161dc:	str	r3, [sp]
   161e0:	ldrd	r2, [sp, #104]	; 0x68
   161e4:	bl	12364 <__assert_fail@plt+0x738>
   161e8:	ldr	ip, [sp, #192]	; 0xc0
   161ec:	ldr	r0, [r5, #4]
   161f0:	ldr	r1, [ip, r4]
   161f4:	mul	r0, sl, r0
   161f8:	umull	r2, r3, r1, sl
   161fc:	mla	r0, r1, fp, r0
   16200:	add	r3, r0, r3
   16204:	ldrd	r0, [r6]
   16208:	cmp	r3, r1
   1620c:	cmpeq	r2, r0
   16210:	bls	162b4 <__assert_fail@plt+0x4688>
   16214:	mov	ip, r7
   16218:	ldr	r7, [sp, #228]	; 0xe4
   1621c:	b	15e08 <__assert_fail@plt+0x41dc>
   16220:	mov	sl, r2
   16224:	ldr	r2, [sp, #160]	; 0xa0
   16228:	ldr	lr, [sp, #160]	; 0xa0
   1622c:	mov	fp, r3
   16230:	mov	r1, #0
   16234:	mov	r3, #0
   16238:	ldrb	r0, [r2, #2]
   1623c:	ldrb	r2, [r2, #3]
   16240:	adds	r2, r2, r0
   16244:	ldrb	r0, [lr, #1]
   16248:	adc	r3, r3, r1
   1624c:	adds	r2, r2, r8
   16250:	adc	r3, r3, r9
   16254:	adds	r2, r2, r0
   16258:	mov	r1, #0
   1625c:	mov	lr, #1
   16260:	adc	r3, r3, r1
   16264:	ldr	r0, [sp, #208]	; 0xd0
   16268:	str	lr, [sp]
   1626c:	str	ip, [sp, #20]
   16270:	bl	12364 <__assert_fail@plt+0x738>
   16274:	ldr	r1, [sp, #188]	; 0xbc
   16278:	ldr	r3, [r5, #4]
   1627c:	ldr	ip, [sp, #20]
   16280:	ldr	r2, [r1, r4]
   16284:	ldr	r1, [sp, #152]	; 0x98
   16288:	ldrd	r0, [r1]
   1628c:	strd	r0, [sp, #72]	; 0x48
   16290:	mul	r1, sl, r3
   16294:	mla	r1, r2, fp, r1
   16298:	umull	r2, r3, r2, sl
   1629c:	add	r3, r1, r3
   162a0:	ldrd	r0, [sp, #72]	; 0x48
   162a4:	cmp	r3, r1
   162a8:	cmpeq	r2, r0
   162ac:	bhi	15e44 <__assert_fail@plt+0x4218>
   162b0:	b	16220 <__assert_fail@plt+0x45f4>
   162b4:	mov	sl, r2
   162b8:	mov	fp, r3
   162bc:	b	161d4 <__assert_fail@plt+0x45a8>
   162c0:	mov	sl, r2
   162c4:	ldr	r1, [sp, #168]	; 0xa8
   162c8:	ldr	r2, [sp, #224]	; 0xe0
   162cc:	mov	fp, r3
   162d0:	add	r1, r1, r2
   162d4:	str	r1, [sp, #212]	; 0xd4
   162d8:	ldr	lr, [sp, #204]	; 0xcc
   162dc:	mov	r2, r8
   162e0:	mov	r3, r9
   162e4:	ldrb	r0, [lr, #1]!
   162e8:	mov	r1, #0
   162ec:	adds	r2, r2, r0
   162f0:	adc	r3, r3, r1
   162f4:	ldr	r1, [sp, #212]	; 0xd4
   162f8:	cmp	lr, r1
   162fc:	bne	162e4 <__assert_fail@plt+0x46b8>
   16300:	mov	lr, #1
   16304:	ldr	r0, [sp, #208]	; 0xd0
   16308:	str	lr, [sp]
   1630c:	str	ip, [sp, #20]
   16310:	bl	12364 <__assert_fail@plt+0x738>
   16314:	ldr	r1, [sp, #176]	; 0xb0
   16318:	ldr	r3, [r5, #4]
   1631c:	ldr	ip, [sp, #20]
   16320:	ldr	r2, [r1, r4]
   16324:	ldr	r1, [sp, #136]	; 0x88
   16328:	ldrd	r0, [r1]
   1632c:	strd	r0, [sp, #32]
   16330:	mul	r1, sl, r3
   16334:	mla	r1, r2, fp, r1
   16338:	umull	r2, r3, r2, sl
   1633c:	add	r3, r1, r3
   16340:	ldrd	r0, [sp, #32]
   16344:	cmp	r3, r1
   16348:	cmpeq	r2, r0
   1634c:	bhi	15eec <__assert_fail@plt+0x42c0>
   16350:	mov	sl, r2
   16354:	mov	fp, r3
   16358:	b	162d8 <__assert_fail@plt+0x46ac>
   1635c:	ldr	r1, [pc, #760]	; 1665c <__assert_fail@plt+0x4a30>
   16360:	mov	fp, r3
   16364:	mov	sl, r2
   16368:	add	r1, pc, r1
   1636c:	add	r3, r1, #55	; 0x37
   16370:	ldr	r1, [sp, #168]	; 0xa8
   16374:	add	r3, r3, r1
   16378:	str	r3, [sp, #212]	; 0xd4
   1637c:	ldr	lr, [sp, #204]	; 0xcc
   16380:	mov	r2, r8
   16384:	mov	r3, r9
   16388:	ldrb	r0, [lr, #1]!
   1638c:	mov	r1, #0
   16390:	adds	r2, r2, r0
   16394:	adc	r3, r3, r1
   16398:	ldr	r1, [sp, #212]	; 0xd4
   1639c:	cmp	lr, r1
   163a0:	bne	16388 <__assert_fail@plt+0x475c>
   163a4:	mov	lr, #1
   163a8:	ldr	r0, [sp, #208]	; 0xd0
   163ac:	str	lr, [sp]
   163b0:	str	ip, [sp, #20]
   163b4:	bl	12364 <__assert_fail@plt+0x738>
   163b8:	ldr	r1, [sp, #172]	; 0xac
   163bc:	ldr	r3, [r5, #4]
   163c0:	ldr	ip, [sp, #20]
   163c4:	ldr	r2, [r1, r4]
   163c8:	ldr	r1, [sp, #144]	; 0x90
   163cc:	ldrd	r0, [r1]
   163d0:	strd	r0, [sp, #24]
   163d4:	mul	r1, sl, r3
   163d8:	mla	r1, r2, fp, r1
   163dc:	umull	r2, r3, r2, sl
   163e0:	add	r3, r1, r3
   163e4:	ldrd	r0, [sp, #24]
   163e8:	cmp	r3, r1
   163ec:	cmpeq	r2, r0
   163f0:	bhi	15f28 <__assert_fail@plt+0x42fc>
   163f4:	mov	sl, r2
   163f8:	mov	fp, r3
   163fc:	b	1637c <__assert_fail@plt+0x4750>
   16400:	mov	sl, r2
   16404:	ldr	r1, [sp, #216]	; 0xd8
   16408:	ldr	r2, [sp, #168]	; 0xa8
   1640c:	mov	fp, r3
   16410:	add	r1, r1, r2
   16414:	str	r1, [sp, #212]	; 0xd4
   16418:	ldr	lr, [sp, #204]	; 0xcc
   1641c:	mov	r0, r8
   16420:	mov	r1, r9
   16424:	ldrb	r2, [lr, #1]!
   16428:	mov	r3, #0
   1642c:	adds	r0, r0, r2
   16430:	adc	r1, r1, r3
   16434:	ldr	r3, [sp, #212]	; 0xd4
   16438:	cmp	lr, r3
   1643c:	bne	16424 <__assert_fail@plt+0x47f8>
   16440:	mov	r2, r0
   16444:	mov	r3, r1
   16448:	mov	lr, #1
   1644c:	ldr	r0, [sp, #208]	; 0xd0
   16450:	str	lr, [sp]
   16454:	str	ip, [sp, #20]
   16458:	bl	12364 <__assert_fail@plt+0x738>
   1645c:	ldr	r1, [sp, #184]	; 0xb8
   16460:	ldr	r3, [r5, #4]
   16464:	ldr	ip, [sp, #20]
   16468:	ldr	r2, [r1, r4]
   1646c:	mul	r1, sl, r3
   16470:	mla	r1, r2, fp, r1
   16474:	umull	r2, r3, r2, sl
   16478:	add	r3, r1, r3
   1647c:	ldrd	r0, [r7]
   16480:	cmp	r3, r1
   16484:	cmpeq	r2, r0
   16488:	bhi	15e74 <__assert_fail@plt+0x4248>
   1648c:	mov	sl, r2
   16490:	mov	fp, r3
   16494:	b	16418 <__assert_fail@plt+0x47ec>
   16498:	mov	sl, r2
   1649c:	ldr	r1, [sp, #220]	; 0xdc
   164a0:	ldr	r2, [sp, #168]	; 0xa8
   164a4:	mov	fp, r3
   164a8:	add	r1, r1, r2
   164ac:	str	r1, [sp, #212]	; 0xd4
   164b0:	ldr	lr, [sp, #204]	; 0xcc
   164b4:	mov	r2, r8
   164b8:	mov	r3, r9
   164bc:	ldrb	r0, [lr, #1]!
   164c0:	mov	r1, #0
   164c4:	adds	r2, r2, r0
   164c8:	adc	r3, r3, r1
   164cc:	ldr	r1, [sp, #212]	; 0xd4
   164d0:	cmp	lr, r1
   164d4:	bne	164bc <__assert_fail@plt+0x4890>
   164d8:	mov	lr, #1
   164dc:	ldr	r0, [sp, #208]	; 0xd0
   164e0:	str	lr, [sp]
   164e4:	str	ip, [sp, #20]
   164e8:	bl	12364 <__assert_fail@plt+0x738>
   164ec:	ldr	r1, [sp, #180]	; 0xb4
   164f0:	ldr	r3, [r5, #4]
   164f4:	ldr	ip, [sp, #20]
   164f8:	ldr	r2, [r1, r4]
   164fc:	ldr	r1, [sp, #120]	; 0x78
   16500:	ldrd	r0, [r1]
   16504:	strd	r0, [sp, #48]	; 0x30
   16508:	mul	r1, sl, r3
   1650c:	mla	r1, r2, fp, r1
   16510:	umull	r2, r3, r2, sl
   16514:	add	r3, r1, r3
   16518:	ldrd	r0, [sp, #48]	; 0x30
   1651c:	cmp	r3, r1
   16520:	cmpeq	r2, r0
   16524:	bhi	15eb0 <__assert_fail@plt+0x4284>
   16528:	mov	sl, r2
   1652c:	mov	fp, r3
   16530:	b	164b0 <__assert_fail@plt+0x4884>
   16534:	str	r7, [sp, #104]	; 0x68
   16538:	mov	sl, r2
   1653c:	mov	r7, r6
   16540:	mov	fp, r3
   16544:	mov	r6, ip
   16548:	mov	r1, #1
   1654c:	ldr	r0, [sp, #208]	; 0xd0
   16550:	str	r1, [sp]
   16554:	mov	r2, r8
   16558:	mov	r3, r9
   1655c:	bl	12364 <__assert_fail@plt+0x738>
   16560:	ldr	ip, [sp, #200]	; 0xc8
   16564:	ldr	r3, [sp, #112]	; 0x70
   16568:	ldr	r0, [r5, #4]
   1656c:	ldr	r1, [ip, r4]
   16570:	ldrd	r2, [r3, #8]
   16574:	mul	r0, sl, r0
   16578:	strd	r2, [sp, #88]	; 0x58
   1657c:	mla	r0, r1, fp, r0
   16580:	umull	r2, r3, r1, sl
   16584:	add	r3, r0, r3
   16588:	ldrd	r0, [sp, #88]	; 0x58
   1658c:	cmp	r3, r1
   16590:	cmpeq	r2, r0
   16594:	bls	16628 <__assert_fail@plt+0x49fc>
   16598:	mov	ip, r6
   1659c:	mov	r6, r7
   165a0:	ldr	r7, [sp, #104]	; 0x68
   165a4:	b	15da8 <__assert_fail@plt+0x417c>
   165a8:	ldr	lr, [sp, #160]	; 0xa0
   165ac:	mov	sl, r2
   165b0:	str	r7, [sp, #228]	; 0xe4
   165b4:	mov	r7, r6
   165b8:	mov	r6, r5
   165bc:	mov	r5, ip
   165c0:	ldrb	r0, [lr, #1]
   165c4:	mov	r1, #0
   165c8:	mov	fp, r3
   165cc:	adds	r2, r0, r8
   165d0:	adc	r3, r1, r9
   165d4:	strd	r2, [sp, #104]	; 0x68
   165d8:	mov	r3, #1
   165dc:	ldr	r0, [sp, #208]	; 0xd0
   165e0:	str	r3, [sp]
   165e4:	ldrd	r2, [sp, #104]	; 0x68
   165e8:	bl	12364 <__assert_fail@plt+0x738>
   165ec:	ldr	ip, [sp, #196]	; 0xc4
   165f0:	ldr	r0, [r6, #4]
   165f4:	ldr	r1, [ip, r4]
   165f8:	mul	r0, sl, r0
   165fc:	umull	r2, r3, r1, sl
   16600:	mla	r0, r1, fp, r0
   16604:	add	r3, r0, r3
   16608:	ldrd	r0, [r5]
   1660c:	cmp	r3, r1
   16610:	cmpeq	r2, r0
   16614:	bls	16634 <__assert_fail@plt+0x4a08>
   16618:	mov	r6, r7
   1661c:	mov	ip, r5
   16620:	ldr	r7, [sp, #228]	; 0xe4
   16624:	b	15dd8 <__assert_fail@plt+0x41ac>
   16628:	mov	sl, r2
   1662c:	mov	fp, r3
   16630:	b	16548 <__assert_fail@plt+0x491c>
   16634:	mov	sl, r2
   16638:	mov	fp, r3
   1663c:	b	165d8 <__assert_fail@plt+0x49ac>
   16640:	andeq	sp, r0, r0, lsr r2
   16644:	andeq	sp, r0, r8, asr r0
   16648:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   1664c:	strdeq	ip, [r0], -r4
   16650:	strdeq	ip, [r0], -r0
   16654:	andeq	lr, r0, r8, asr #26
   16658:	andeq	r1, r2, r8, ror r2
   1665c:	andeq	ip, r0, r8, lsl r9
   16660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16664:	sub	sp, sp, #420	; 0x1a4
   16668:	ldr	ip, [pc, #1568]	; 16c90 <__assert_fail@plt+0x5064>
   1666c:	ldr	lr, [pc, #1568]	; 16c94 <__assert_fail@plt+0x5068>
   16670:	strd	r0, [sp, #32]
   16674:	add	ip, pc, ip
   16678:	subs	r0, r0, #1
   1667c:	sbc	r1, r1, #0
   16680:	strd	r0, [sp, #56]	; 0x38
   16684:	ldrd	r2, [sp, #56]	; 0x38
   16688:	mov	r0, #1
   1668c:	ldr	lr, [ip, lr]
   16690:	mov	r1, #0
   16694:	and	r2, r2, r0
   16698:	and	r3, r3, r1
   1669c:	orrs	r4, r2, r3
   166a0:	ldrd	r4, [sp, #56]	; 0x38
   166a4:	ldr	r3, [lr]
   166a8:	str	lr, [sp, #120]	; 0x78
   166ac:	strd	r4, [sp, #96]	; 0x60
   166b0:	mov	r5, #0
   166b4:	str	r3, [sp, #412]	; 0x19c
   166b8:	str	r5, [sp, #108]	; 0x6c
   166bc:	bne	166ec <__assert_fail@plt+0x4ac0>
   166c0:	ldrd	r2, [sp, #96]	; 0x60
   166c4:	mov	ip, r5
   166c8:	lsrs	r3, r3, #1
   166cc:	rrx	r2, r2
   166d0:	and	r4, r2, r0
   166d4:	and	r5, r3, r1
   166d8:	add	ip, ip, #1
   166dc:	orrs	lr, r4, r5
   166e0:	beq	166c8 <__assert_fail@plt+0x4a9c>
   166e4:	strd	r2, [sp, #96]	; 0x60
   166e8:	str	ip, [sp, #108]	; 0x6c
   166ec:	ldrd	r2, [sp, #32]
   166f0:	ldr	r1, [pc, #1440]	; 16c98 <__assert_fail@plt+0x506c>
   166f4:	ldr	lr, [sp, #36]	; 0x24
   166f8:	lsrs	r3, r3, #1
   166fc:	rrx	r2, r2
   16700:	add	r1, pc, r1
   16704:	and	r2, r2, #127	; 0x7f
   16708:	ldr	r4, [sp, #32]
   1670c:	add	r3, r2, r1
   16710:	mov	r1, #0
   16714:	ldrb	r2, [r3, #752]	; 0x2f0
   16718:	mov	r0, r2
   1671c:	adds	r0, r0, r0
   16720:	umull	r2, r3, r2, r2
   16724:	adc	r1, r1, r1
   16728:	mul	ip, r2, lr
   1672c:	mla	ip, r4, r3, ip
   16730:	umull	r2, r3, r2, r4
   16734:	add	r3, ip, r3
   16738:	subs	r0, r0, r2
   1673c:	sbc	r1, r1, r3
   16740:	mul	ip, r0, r1
   16744:	umull	r2, r3, r0, r0
   16748:	adds	r0, r0, r0
   1674c:	adc	r1, r1, r1
   16750:	add	r3, r3, ip, lsl #1
   16754:	mul	ip, r2, lr
   16758:	mla	ip, r4, r3, ip
   1675c:	umull	r2, r3, r2, r4
   16760:	add	r3, ip, r3
   16764:	subs	r0, r0, r2
   16768:	sbc	r1, r1, r3
   1676c:	adds	r4, r0, r0
   16770:	mul	ip, r0, r1
   16774:	adc	r5, r1, r1
   16778:	umull	r2, r3, r0, r0
   1677c:	strd	r4, [sp, #40]	; 0x28
   16780:	ldrd	r4, [sp, #40]	; 0x28
   16784:	add	r3, r3, ip, lsl #1
   16788:	ldr	ip, [sp, #32]
   1678c:	mul	r1, r2, lr
   16790:	mla	r1, ip, r3, r1
   16794:	umull	r2, r3, r2, ip
   16798:	add	r3, r1, r3
   1679c:	subs	r4, r4, r2
   167a0:	sbc	r5, r5, r3
   167a4:	strd	r4, [sp, #40]	; 0x28
   167a8:	ldrd	r4, [sp, #32]
   167ac:	cmp	r5, #0
   167b0:	cmpeq	r4, #1
   167b4:	bls	16c64 <__assert_fail@plt+0x5038>
   167b8:	ldrd	r2, [sp, #32]
   167bc:	mov	r8, #0
   167c0:	mov	r9, #0
   167c4:	mov	r6, #64	; 0x40
   167c8:	mov	r4, r8
   167cc:	mov	r5, r9
   167d0:	mov	r0, #1
   167d4:	mov	r1, #0
   167d8:	mov	ip, r6
   167dc:	lsrs	r5, r5, #1
   167e0:	rrx	r4, r4
   167e4:	lsl	fp, r2, #31
   167e8:	lsrs	r3, r3, #1
   167ec:	rrx	r2, r2
   167f0:	cmp	r3, r1
   167f4:	cmpeq	r2, r0
   167f8:	mov	sl, #0
   167fc:	orr	r5, r5, fp
   16800:	orr	r4, r4, sl
   16804:	bcc	16830 <__assert_fail@plt+0x4c04>
   16808:	cmp	r5, r9
   1680c:	cmpeq	r4, r8
   16810:	movhi	lr, #0
   16814:	movls	lr, #1
   16818:	cmp	r3, r1
   1681c:	cmpeq	r2, r0
   16820:	movne	lr, #0
   16824:	andeq	lr, lr, #1
   16828:	cmp	lr, sl
   1682c:	beq	1685c <__assert_fail@plt+0x4c30>
   16830:	cmp	r5, r9
   16834:	cmpeq	r4, r8
   16838:	mov	r7, #0
   1683c:	movls	r6, #0
   16840:	movhi	r6, #1
   16844:	subs	r0, r0, r2
   16848:	sbc	r1, r1, r3
   1684c:	subs	r8, r8, r4
   16850:	sbc	r9, r9, r5
   16854:	subs	r0, r0, r6
   16858:	sbc	r1, r1, r7
   1685c:	subs	ip, ip, #1
   16860:	bne	167dc <__assert_fail@plt+0x4bb0>
   16864:	ldrd	r2, [sp, #32]
   16868:	adds	r4, r8, r8
   1686c:	ldrd	sl, [sp, #32]
   16870:	adc	r5, r9, r9
   16874:	subs	r2, r2, r8
   16878:	sbc	r3, r3, r9
   1687c:	ldrd	r0, [sp, #32]
   16880:	subs	r4, r4, sl
   16884:	sbc	r5, r5, fp
   16888:	cmp	r3, r9
   1688c:	cmpeq	r2, r8
   16890:	ldrd	sl, [sp, #96]	; 0x60
   16894:	mov	r6, ip
   16898:	movls	r2, #0
   1689c:	movhi	r2, #1
   168a0:	ldr	ip, [sp, #108]	; 0x6c
   168a4:	mov	r3, #0
   168a8:	rsbs	r2, r2, #0
   168ac:	rsc	r3, r3, #0
   168b0:	and	r2, r2, r0
   168b4:	strd	sl, [sp, #8]
   168b8:	and	r3, r3, r1
   168bc:	adds	sl, r4, r2
   168c0:	adc	fp, r5, r3
   168c4:	str	ip, [sp, #16]
   168c8:	strd	r8, [sp, #24]
   168cc:	ldrd	r2, [sp, #40]	; 0x28
   168d0:	strd	sl, [sp]
   168d4:	bl	14b24 <__assert_fail@plt+0x2ef8>
   168d8:	cmp	r0, #0
   168dc:	str	r0, [sp, #124]	; 0x7c
   168e0:	beq	16b44 <__assert_fail@plt+0x4f18>
   168e4:	ldr	r4, [pc, #944]	; 16c9c <__assert_fail@plt+0x5070>
   168e8:	add	r4, pc, r4
   168ec:	ldrb	r3, [r4]
   168f0:	cmp	r3, #0
   168f4:	streq	r6, [sp, #112]	; 0x70
   168f8:	bne	16b50 <__assert_fail@plt+0x4f24>
   168fc:	ldrb	r6, [sp, #402]	; 0x192
   16900:	mov	r7, #0
   16904:	ldr	ip, [pc, #916]	; 16ca0 <__assert_fail@plt+0x5074>
   16908:	mvn	r4, #0
   1690c:	mov	r5, #0
   16910:	and	r4, r4, r8
   16914:	and	r5, r5, r9
   16918:	add	ip, pc, ip
   1691c:	strd	r4, [sp, #64]	; 0x40
   16920:	mov	r4, #2
   16924:	mov	r5, #0
   16928:	str	ip, [sp, #116]	; 0x74
   1692c:	strd	r4, [sp, #48]	; 0x30
   16930:	str	r9, [sp, #104]	; 0x68
   16934:	ldr	r5, [sp, #112]	; 0x70
   16938:	cmp	r5, #0
   1693c:	beq	16b0c <__assert_fail@plt+0x4ee0>
   16940:	cmp	r6, #0
   16944:	beq	16b24 <__assert_fail@plt+0x4ef8>
   16948:	add	r5, sp, #160	; 0xa0
   1694c:	mov	r4, #0
   16950:	b	1695c <__assert_fail@plt+0x4d30>
   16954:	cmp	r3, #0
   16958:	beq	169b4 <__assert_fail@plt+0x4d88>
   1695c:	ldrd	r2, [r5, #8]!
   16960:	add	r4, r4, #1
   16964:	ldrd	r0, [sp, #56]	; 0x38
   16968:	bl	22264 <close_stdout@@Base+0x8020>
   1696c:	strd	r8, [sp, #16]
   16970:	mov	r3, r1
   16974:	mov	r2, r0
   16978:	ldrd	r0, [sp, #32]
   1697c:	strd	r0, [sp]
   16980:	ldrd	r0, [sp, #40]	; 0x28
   16984:	strd	r0, [sp, #8]
   16988:	mov	r0, sl
   1698c:	mov	r1, fp
   16990:	bl	1475c <__assert_fail@plt+0x2b30>
   16994:	cmp	r1, r9
   16998:	cmpeq	r0, r8
   1699c:	moveq	r3, #0
   169a0:	movne	r3, #1
   169a4:	cmp	r4, r6
   169a8:	bne	16954 <__assert_fail@plt+0x4d28>
   169ac:	cmp	r3, #0
   169b0:	bne	16b1c <__assert_fail@plt+0x4ef0>
   169b4:	ldr	r4, [sp, #116]	; 0x74
   169b8:	mvn	r0, #0
   169bc:	ldrd	sl, [sp, #48]	; 0x30
   169c0:	mov	r1, #0
   169c4:	add	r3, r4, #48	; 0x30
   169c8:	ldr	r4, [sp, #104]	; 0x68
   169cc:	ldr	r5, [sp, #68]	; 0x44
   169d0:	ldrb	r2, [r7, r3]
   169d4:	mov	r3, #0
   169d8:	ldr	lr, [sp, #64]	; 0x40
   169dc:	adds	sl, sl, r2
   169e0:	adc	fp, fp, r3
   169e4:	strd	sl, [sp, #48]	; 0x30
   169e8:	ldr	r2, [sp, #52]	; 0x34
   169ec:	and	sl, sl, r0
   169f0:	ldr	r3, [sp, #64]	; 0x40
   169f4:	and	fp, fp, r1
   169f8:	mul	ip, sl, r5
   169fc:	umull	r0, r1, r2, r3
   16a00:	umull	r2, r3, sl, r4
   16a04:	mla	ip, lr, fp, ip
   16a08:	adds	r0, r0, r2
   16a0c:	umull	r4, r5, sl, lr
   16a10:	ldr	lr, [sp, #104]	; 0x68
   16a14:	ldr	sl, [sp, #68]	; 0x44
   16a18:	add	ip, ip, r5
   16a1c:	str	ip, [sp, #80]	; 0x50
   16a20:	mla	r3, lr, fp, r3
   16a24:	ldr	fp, [sp, #52]	; 0x34
   16a28:	mov	ip, #0
   16a2c:	str	ip, [sp, #84]	; 0x54
   16a30:	mla	r1, fp, sl, r1
   16a34:	ldrd	sl, [sp, #80]	; 0x50
   16a38:	adc	r1, r1, r3
   16a3c:	adds	r0, r0, sl
   16a40:	adc	r1, r1, fp
   16a44:	ldr	fp, [sp, #52]	; 0x34
   16a48:	cmp	r3, r1
   16a4c:	cmpeq	r2, r0
   16a50:	umull	r2, r3, fp, lr
   16a54:	bls	16a60 <__assert_fail@plt+0x4e34>
   16a58:	adds	r2, r2, #0
   16a5c:	adc	r3, r3, #1
   16a60:	mov	ip, #0
   16a64:	str	r1, [sp, #72]	; 0x48
   16a68:	str	ip, [sp, #76]	; 0x4c
   16a6c:	ldrd	sl, [sp, #72]	; 0x48
   16a70:	str	r0, [sp, #92]	; 0x5c
   16a74:	adds	r2, r2, sl
   16a78:	str	fp, [sp, #88]	; 0x58
   16a7c:	adc	r3, r3, fp
   16a80:	ldrd	sl, [sp, #88]	; 0x58
   16a84:	adds	sl, sl, r4
   16a88:	adc	fp, fp, #0
   16a8c:	orrs	ip, r2, r3
   16a90:	bne	16b74 <__assert_fail@plt+0x4f48>
   16a94:	mov	r0, sl
   16a98:	mov	r1, fp
   16a9c:	ldrd	r2, [sp, #32]
   16aa0:	bl	22264 <close_stdout@@Base+0x8020>
   16aa4:	mov	sl, r2
   16aa8:	mov	fp, r3
   16aac:	ldrd	r4, [sp, #96]	; 0x60
   16ab0:	strd	sl, [sp]
   16ab4:	ldrd	r0, [sp, #32]
   16ab8:	strd	r4, [sp, #8]
   16abc:	ldr	r5, [sp, #108]	; 0x6c
   16ac0:	ldrd	r2, [sp, #40]	; 0x28
   16ac4:	strd	r8, [sp, #24]
   16ac8:	str	r5, [sp, #16]
   16acc:	bl	14b24 <__assert_fail@plt+0x2ef8>
   16ad0:	cmp	r0, #0
   16ad4:	beq	16b44 <__assert_fail@plt+0x4f18>
   16ad8:	add	r7, r7, #1
   16adc:	cmp	r7, #668	; 0x29c
   16ae0:	bne	16934 <__assert_fail@plt+0x4d08>
   16ae4:	ldr	r1, [pc, #440]	; 16ca4 <__assert_fail@plt+0x5078>
   16ae8:	mov	r2, #5
   16aec:	mov	r0, #0
   16af0:	add	r1, pc, r1
   16af4:	bl	118cc <dcgettext@plt>
   16af8:	mov	r2, r0
   16afc:	mov	r0, #0
   16b00:	mov	r1, r0
   16b04:	bl	119b0 <error@plt>
   16b08:	bl	11c08 <abort@plt>
   16b0c:	subs	r2, r7, #24
   16b10:	rsbs	r3, r2, #0
   16b14:	adcs	r3, r3, r2
   16b18:	b	169ac <__assert_fail@plt+0x4d80>
   16b1c:	ldr	fp, [sp, #124]	; 0x7c
   16b20:	str	fp, [sp, #112]	; 0x70
   16b24:	ldr	ip, [sp, #120]	; 0x78
   16b28:	ldr	r2, [sp, #412]	; 0x19c
   16b2c:	ldr	r0, [sp, #112]	; 0x70
   16b30:	ldr	r3, [ip]
   16b34:	cmp	r2, r3
   16b38:	bne	16c8c <__assert_fail@plt+0x5060>
   16b3c:	add	sp, sp, #420	; 0x1a4
   16b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b44:	mov	sl, #0
   16b48:	str	sl, [sp, #112]	; 0x70
   16b4c:	b	16b24 <__assert_fail@plt+0x4ef8>
   16b50:	add	r3, sp, #152	; 0x98
   16b54:	mov	r0, #0
   16b58:	str	r3, [sp]
   16b5c:	mov	r1, #0
   16b60:	ldrd	r2, [sp, #56]	; 0x38
   16b64:	bl	159b8 <__assert_fail@plt+0x3d8c>
   16b68:	ldrb	r4, [r4]
   16b6c:	str	r4, [sp, #112]	; 0x70
   16b70:	b	168fc <__assert_fail@plt+0x4cd0>
   16b74:	ldrd	r4, [sp, #32]
   16b78:	cmp	r5, r3
   16b7c:	cmpeq	r4, r2
   16b80:	bls	16c3c <__assert_fail@plt+0x5010>
   16b84:	ldrd	r4, [sp, #32]
   16b88:	mov	r0, #0
   16b8c:	mov	r1, #0
   16b90:	mov	ip, #64	; 0x40
   16b94:	str	r7, [sp, #136]	; 0x88
   16b98:	str	r6, [sp, #140]	; 0x8c
   16b9c:	strd	r8, [sp, #144]	; 0x90
   16ba0:	lsrs	r1, r1, #1
   16ba4:	rrx	r0, r0
   16ba8:	lsl	r9, r4, #31
   16bac:	lsrs	r5, r5, #1
   16bb0:	rrx	r4, r4
   16bb4:	cmp	r5, r3
   16bb8:	cmpeq	r4, r2
   16bbc:	mov	r8, #0
   16bc0:	orr	r1, r1, r9
   16bc4:	orr	r0, r0, r8
   16bc8:	bcc	16bf4 <__assert_fail@plt+0x4fc8>
   16bcc:	cmp	r1, fp
   16bd0:	cmpeq	r0, sl
   16bd4:	movhi	lr, #0
   16bd8:	movls	lr, #1
   16bdc:	cmp	r5, r3
   16be0:	cmpeq	r4, r2
   16be4:	movne	lr, #0
   16be8:	andeq	lr, lr, #1
   16bec:	cmp	lr, r8
   16bf0:	beq	16c20 <__assert_fail@plt+0x4ff4>
   16bf4:	cmp	r1, fp
   16bf8:	cmpeq	r0, sl
   16bfc:	mov	r7, #0
   16c00:	movls	r6, #0
   16c04:	movhi	r6, #1
   16c08:	subs	r2, r2, r4
   16c0c:	sbc	r3, r3, r5
   16c10:	subs	sl, sl, r0
   16c14:	sbc	fp, fp, r1
   16c18:	subs	r2, r2, r6
   16c1c:	sbc	r3, r3, r7
   16c20:	subs	ip, ip, #1
   16c24:	bne	16ba0 <__assert_fail@plt+0x4f74>
   16c28:	strd	r8, [sp, #128]	; 0x80
   16c2c:	ldr	r7, [sp, #136]	; 0x88
   16c30:	ldr	r6, [sp, #140]	; 0x8c
   16c34:	ldrd	r8, [sp, #144]	; 0x90
   16c38:	b	16aac <__assert_fail@plt+0x4e80>
   16c3c:	ldr	r3, [pc, #100]	; 16ca8 <__assert_fail@plt+0x507c>
   16c40:	movw	r2, #1275	; 0x4fb
   16c44:	ldr	r0, [pc, #96]	; 16cac <__assert_fail@plt+0x5080>
   16c48:	add	r3, pc, r3
   16c4c:	ldr	r1, [pc, #92]	; 16cb0 <__assert_fail@plt+0x5084>
   16c50:	sub	r3, r3, #4000	; 0xfa0
   16c54:	add	r0, pc, r0
   16c58:	add	r1, pc, r1
   16c5c:	sub	r3, r3, #12
   16c60:	bl	11c2c <__assert_fail@plt>
   16c64:	ldr	r3, [pc, #72]	; 16cb4 <__assert_fail@plt+0x5088>
   16c68:	movw	r2, #1227	; 0x4cb
   16c6c:	ldr	r0, [pc, #68]	; 16cb8 <__assert_fail@plt+0x508c>
   16c70:	add	r3, pc, r3
   16c74:	ldr	r1, [pc, #64]	; 16cbc <__assert_fail@plt+0x5090>
   16c78:	sub	r3, r3, #4000	; 0xfa0
   16c7c:	add	r0, pc, r0
   16c80:	add	r1, pc, r1
   16c84:	sub	r3, r3, #12
   16c88:	bl	11c2c <__assert_fail@plt>
   16c8c:	bl	118e4 <__stack_chk_fail@plt>
   16c90:	andeq	r0, r2, r4, lsl #19
   16c94:	andeq	r0, r0, ip, lsl #3
   16c98:	andeq	ip, r0, r0, lsl #11
   16c9c:	ldrdeq	r0, [r2], -r8
   16ca0:	andeq	ip, r0, r8, ror #6
   16ca4:	ldrdeq	pc, [r0], -r4
   16ca8:	andeq	r0, r1, r8, lsr #32
   16cac:	strdeq	pc, [r0], -ip
   16cb0:	andeq	pc, r0, r0, lsl #4
   16cb4:	andeq	r0, r1, r0
   16cb8:	andeq	pc, r0, r0, asr #7
   16cbc:	ldrdeq	pc, [r0], -r8
   16cc0:	mov	r2, r0
   16cc4:	mov	r3, r1
   16cc8:	cmp	r3, #0
   16ccc:	cmpeq	r2, #1
   16cd0:	push	{r4, r5}
   16cd4:	bls	16d04 <__assert_fail@plt+0x50d8>
   16cd8:	movw	r4, #60792	; 0xed78
   16cdc:	movt	r4, #381	; 0x17d
   16ce0:	mov	r5, #0
   16ce4:	cmp	r3, r5
   16ce8:	cmpeq	r2, r4
   16cec:	bls	16cf8 <__assert_fail@plt+0x50cc>
   16cf0:	pop	{r4, r5}
   16cf4:	b	16660 <__assert_fail@plt+0x4a34>
   16cf8:	mov	r0, #1
   16cfc:	pop	{r4, r5}
   16d00:	bx	lr
   16d04:	mov	r0, #0
   16d08:	pop	{r4, r5}
   16d0c:	bx	lr
   16d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d14:	sub	sp, sp, #588	; 0x24c
   16d18:	ldr	ip, [pc, #3140]	; 17964 <__assert_fail@plt+0x5d38>
   16d1c:	mov	r5, #0
   16d20:	strd	r2, [sp, #24]
   16d24:	ldr	r4, [sp, #28]
   16d28:	add	ip, pc, ip
   16d2c:	ldrd	r6, [sp, #24]
   16d30:	orrs	r2, r2, r4
   16d34:	ldr	r3, [pc, #3116]	; 17968 <__assert_fail@plt+0x5d3c>
   16d38:	strd	r0, [sp, #32]
   16d3c:	mov	r4, #1
   16d40:	movne	r2, #0
   16d44:	moveq	r2, #1
   16d48:	subs	r6, r6, #1
   16d4c:	sbc	r7, r7, #0
   16d50:	strd	r6, [sp, #40]	; 0x28
   16d54:	ldr	r3, [ip, r3]
   16d58:	subs	r0, r0, r2
   16d5c:	sbc	r1, r1, #0
   16d60:	orrs	r7, r6, r7
   16d64:	strd	r0, [sp, #80]	; 0x50
   16d68:	str	r3, [sp, #212]	; 0xd4
   16d6c:	ldr	r3, [r3]
   16d70:	str	r3, [sp, #580]	; 0x244
   16d74:	beq	17830 <__assert_fail@plt+0x5c04>
   16d78:	ldrd	r2, [sp, #40]	; 0x28
   16d7c:	and	r3, r3, r5
   16d80:	and	r2, r2, r4
   16d84:	orrs	r8, r2, r3
   16d88:	movne	r3, #0
   16d8c:	movne	r1, #64	; 0x40
   16d90:	strne	r3, [sp, #188]	; 0xbc
   16d94:	bne	16dd0 <__assert_fail@plt+0x51a4>
   16d98:	ldrd	r2, [sp, #40]	; 0x28
   16d9c:	mov	r9, #0
   16da0:	mov	ip, r9
   16da4:	str	r9, [sp, #188]	; 0xbc
   16da8:	lsrs	r3, r3, #1
   16dac:	rrx	r2, r2
   16db0:	and	r0, r2, r4
   16db4:	and	r1, r3, r5
   16db8:	add	ip, ip, #1
   16dbc:	orrs	lr, r0, r1
   16dc0:	beq	16da8 <__assert_fail@plt+0x517c>
   16dc4:	rsb	r1, ip, #64	; 0x40
   16dc8:	mov	r3, ip
   16dcc:	str	ip, [sp, #188]	; 0xbc
   16dd0:	ldr	r2, [sp, #40]	; 0x28
   16dd4:	rsb	r0, r3, #32
   16dd8:	ldr	ip, [sp, #80]	; 0x50
   16ddc:	ldr	r8, [sp, #84]	; 0x54
   16de0:	ldr	r9, [sp, #44]	; 0x2c
   16de4:	lsr	r4, r2, r3
   16de8:	ldr	lr, [sp, #80]	; 0x50
   16dec:	lsr	r2, ip, r3
   16df0:	orr	r2, r2, r8, lsl r0
   16df4:	sub	ip, r1, #32
   16df8:	orr	r4, r4, r9, lsl r0
   16dfc:	sub	r0, r3, #32
   16e00:	orr	r4, r4, r9, lsr r0
   16e04:	lsl	r7, r8, r1
   16e08:	lsl	r6, lr, r1
   16e0c:	orr	r2, r2, r8, lsr r0
   16e10:	orr	r7, r7, lr, lsl ip
   16e14:	str	r2, [sp, #232]	; 0xe8
   16e18:	rsb	ip, r1, #32
   16e1c:	orr	r2, r4, r6
   16e20:	movw	r1, #65176	; 0xfe98
   16e24:	add	r4, sp, #584	; 0x248
   16e28:	movt	r1, #65535	; 0xffff
   16e2c:	orr	r7, r7, lr, lsr ip
   16e30:	lsr	r5, r9, r3
   16e34:	lsr	r0, r8, r3
   16e38:	orr	r3, r5, r7
   16e3c:	str	r0, [sp, #236]	; 0xec
   16e40:	strd	r2, [r4, r1]
   16e44:	ldrd	r2, [sp, #24]
   16e48:	ldr	r1, [pc, #2844]	; 1796c <__assert_fail@plt+0x5d40>
   16e4c:	ldr	r6, [sp, #28]
   16e50:	lsrs	r3, r3, #1
   16e54:	rrx	r2, r2
   16e58:	add	r1, pc, r1
   16e5c:	and	r2, r2, #127	; 0x7f
   16e60:	ldr	r7, [sp, #24]
   16e64:	add	r3, r2, r1
   16e68:	mov	r1, #0
   16e6c:	strd	sl, [sp, #48]	; 0x30
   16e70:	ldrb	r2, [r3, #752]	; 0x2f0
   16e74:	mov	r0, r2
   16e78:	adds	r4, r0, r0
   16e7c:	umull	r2, r3, r2, r2
   16e80:	adc	r5, r1, r1
   16e84:	mul	r1, r2, r6
   16e88:	mla	r1, r7, r3, r1
   16e8c:	umull	r2, r3, r2, r7
   16e90:	add	r3, r1, r3
   16e94:	subs	r4, r4, r2
   16e98:	sbc	r5, r5, r3
   16e9c:	mul	r1, r4, r5
   16ea0:	umull	r2, r3, r4, r4
   16ea4:	adds	r4, r4, r4
   16ea8:	adc	r5, r5, r5
   16eac:	add	r3, r3, r1, lsl #1
   16eb0:	mul	r1, r2, r6
   16eb4:	mla	r1, r7, r3, r1
   16eb8:	umull	r2, r3, r2, r7
   16ebc:	add	r3, r1, r3
   16ec0:	subs	r4, r4, r2
   16ec4:	sbc	r5, r5, r3
   16ec8:	adds	r8, r4, r4
   16ecc:	umull	r2, r3, r4, r4
   16ed0:	adc	r9, r5, r5
   16ed4:	mul	r1, r4, r5
   16ed8:	strd	r8, [sp, #72]	; 0x48
   16edc:	ldrd	r4, [sp, #72]	; 0x48
   16ee0:	mov	r9, r6
   16ee4:	add	r3, r3, r1, lsl #1
   16ee8:	mul	r1, r2, r6
   16eec:	mla	r1, r7, r3, r1
   16ef0:	umull	r2, r3, r2, r7
   16ef4:	ldrd	r6, [sp, #32]
   16ef8:	add	r3, r1, r3
   16efc:	subs	r4, r4, r2
   16f00:	sbc	r5, r5, r3
   16f04:	cmp	r7, #0
   16f08:	cmpeq	r6, #1
   16f0c:	mov	r7, #0
   16f10:	strd	r4, [sp, #72]	; 0x48
   16f14:	movhi	r0, #64	; 0x40
   16f18:	movhi	r1, #0
   16f1c:	movhi	r8, #0
   16f20:	movhi	r9, #0
   16f24:	movhi	r6, #1
   16f28:	movls	r0, #128	; 0x80
   16f2c:	movls	r1, #0
   16f30:	movls	r8, #1
   16f34:	movls	r9, #0
   16f38:	movls	r6, #0
   16f3c:	subs	r0, r0, #1
   16f40:	mvn	r2, #0
   16f44:	sbc	r1, r1, #0
   16f48:	mvn	r3, #0
   16f4c:	cmp	r1, r3
   16f50:	cmpeq	r0, r2
   16f54:	beq	16ff0 <__assert_fail@plt+0x53c4>
   16f58:	adds	r6, r6, r6
   16f5c:	lsr	sl, r9, #31
   16f60:	adc	r7, r7, r7
   16f64:	adds	r2, r8, r8
   16f68:	adc	r3, r9, r9
   16f6c:	ldrd	r8, [sp, #32]
   16f70:	mov	fp, #0
   16f74:	orr	r6, r6, sl
   16f78:	orr	r7, r7, fp
   16f7c:	cmp	r9, r7
   16f80:	cmpeq	r8, r6
   16f84:	mov	r8, r2
   16f88:	mov	r9, r3
   16f8c:	bcc	16fb4 <__assert_fail@plt+0x5388>
   16f90:	ldrd	r4, [sp, #24]
   16f94:	movne	ip, #0
   16f98:	moveq	ip, #1
   16f9c:	cmp	r5, r9
   16fa0:	cmpeq	r4, r8
   16fa4:	movhi	ip, #0
   16fa8:	andls	ip, ip, #1
   16fac:	cmp	ip, fp
   16fb0:	beq	16f3c <__assert_fail@plt+0x5310>
   16fb4:	ldrd	r8, [sp, #24]
   16fb8:	mov	r5, #0
   16fbc:	cmp	r9, r3
   16fc0:	cmpeq	r8, r2
   16fc4:	ldrd	r8, [sp, #32]
   16fc8:	movls	r4, #0
   16fcc:	movhi	r4, #1
   16fd0:	subs	r6, r6, r8
   16fd4:	sbc	r7, r7, r9
   16fd8:	ldrd	r8, [sp, #24]
   16fdc:	subs	r6, r6, r4
   16fe0:	sbc	r7, r7, r5
   16fe4:	subs	r8, r2, r8
   16fe8:	sbc	r9, r3, r9
   16fec:	b	16f3c <__assert_fail@plt+0x5310>
   16ff0:	adds	r4, r8, r8
   16ff4:	ldrd	sl, [sp, #48]	; 0x30
   16ff8:	adc	r5, r9, r9
   16ffc:	strd	r4, [sp, #56]	; 0x38
   17000:	ldrd	r0, [sp, #56]	; 0x38
   17004:	adds	r4, r6, r6
   17008:	adc	r5, r7, r7
   1700c:	add	ip, sp, #584	; 0x248
   17010:	cmp	r9, r1
   17014:	cmpeq	r8, r0
   17018:	movw	r1, #65200	; 0xfeb0
   1701c:	movt	r1, #65535	; 0xffff
   17020:	movls	r0, #0
   17024:	movhi	r0, #1
   17028:	adds	r2, r4, r0
   1702c:	adc	r3, r5, #0
   17030:	ldrd	r4, [sp, #32]
   17034:	strd	r2, [sp, #48]	; 0x30
   17038:	cmp	r5, r3
   1703c:	cmpeq	r4, r2
   17040:	ldrd	r4, [sp, #48]	; 0x30
   17044:	movw	r3, #65216	; 0xfec0
   17048:	movw	r2, #65208	; 0xfeb8
   1704c:	movt	r3, #65535	; 0xffff
   17050:	movt	r2, #65535	; 0xffff
   17054:	strd	r4, [ip, r1]
   17058:	strd	r6, [ip, r3]
   1705c:	strd	r8, [ip, r2]
   17060:	bcc	17094 <__assert_fail@plt+0x5468>
   17064:	beq	17080 <__assert_fail@plt+0x5454>
   17068:	ldrd	r0, [sp, #56]	; 0x38
   1706c:	movw	r3, #65192	; 0xfea8
   17070:	add	r2, sp, #584	; 0x248
   17074:	movt	r3, #65535	; 0xffff
   17078:	strd	r0, [r2, r3]
   1707c:	b	170ec <__assert_fail@plt+0x54c0>
   17080:	ldrd	r4, [sp, #24]
   17084:	ldrd	r6, [sp, #56]	; 0x38
   17088:	cmp	r5, r7
   1708c:	cmpeq	r4, r6
   17090:	bhi	17068 <__assert_fail@plt+0x543c>
   17094:	ldrd	r8, [sp, #32]
   17098:	movw	r0, #65200	; 0xfeb0
   1709c:	ldrd	r2, [sp, #48]	; 0x30
   170a0:	movt	r0, #65535	; 0xffff
   170a4:	ldrd	r4, [sp, #24]
   170a8:	movw	r1, #65192	; 0xfea8
   170ac:	subs	r2, r2, r8
   170b0:	sbc	r3, r3, r9
   170b4:	ldrd	r6, [sp, #56]	; 0x38
   170b8:	ldrd	r8, [sp, #56]	; 0x38
   170bc:	movt	r1, #65535	; 0xffff
   170c0:	subs	r6, r6, r4
   170c4:	sbc	r7, r7, r5
   170c8:	cmp	r5, r9
   170cc:	cmpeq	r4, r8
   170d0:	add	r9, sp, #584	; 0x248
   170d4:	movls	ip, #0
   170d8:	movhi	ip, #1
   170dc:	strd	r6, [r9, r1]
   170e0:	subs	r2, r2, ip
   170e4:	sbc	r3, r3, #0
   170e8:	strd	r2, [r9, r0]
   170ec:	ldr	r4, [sp, #188]	; 0xbc
   170f0:	add	r5, sp, #240	; 0xf0
   170f4:	add	r6, sp, #224	; 0xe0
   170f8:	str	r5, [sp, #92]	; 0x5c
   170fc:	stm	sp, {r5, r6}
   17100:	add	lr, sp, #584	; 0x248
   17104:	str	r4, [sp, #8]
   17108:	add	ip, sp, #272	; 0x110
   1710c:	ldrd	r8, [sp, #24]
   17110:	movw	r1, #65232	; 0xfed0
   17114:	ldrd	r4, [sp, #32]
   17118:	movt	r1, #65535	; 0xffff
   1711c:	str	ip, [sp, #100]	; 0x64
   17120:	movw	ip, #65224	; 0xfec8
   17124:	movt	ip, #65535	; 0xffff
   17128:	add	r7, sp, #256	; 0x100
   1712c:	add	r0, sp, #272	; 0x110
   17130:	str	r7, [sp, #12]
   17134:	ldrd	r2, [sp, #72]	; 0x48
   17138:	strd	r8, [lr, ip]
   1713c:	strd	r4, [lr, r1]
   17140:	str	r6, [sp, #192]	; 0xc0
   17144:	str	r7, [sp, #96]	; 0x60
   17148:	bl	12fb8 <__assert_fail@plt+0x138c>
   1714c:	cmp	r0, #0
   17150:	str	r0, [sp, #216]	; 0xd8
   17154:	beq	17788 <__assert_fail@plt+0x5b5c>
   17158:	ldr	r4, [pc, #2064]	; 17970 <__assert_fail@plt+0x5d44>
   1715c:	add	r4, pc, r4
   17160:	ldrb	r3, [r4]
   17164:	cmp	r3, #0
   17168:	streq	r3, [sp, #184]	; 0xb8
   1716c:	bne	178fc <__assert_fail@plt+0x5cd0>
   17170:	ldr	r4, [pc, #2044]	; 17974 <__assert_fail@plt+0x5d48>
   17174:	movw	r5, #65240	; 0xfed8
   17178:	ldr	r8, [sp, #80]	; 0x50
   1717c:	movt	r5, #65535	; 0xffff
   17180:	add	r4, pc, r4
   17184:	ldrd	r2, [sp, #40]	; 0x28
   17188:	str	r4, [sp, #208]	; 0xd0
   1718c:	mov	r0, #0
   17190:	str	r5, [sp, #132]	; 0x84
   17194:	lsl	r1, r8, #31
   17198:	ldrd	r4, [sp, #80]	; 0x50
   1719c:	lsrs	r3, r3, #1
   171a0:	rrx	r2, r2
   171a4:	ldr	r7, [pc, #1996]	; 17978 <__assert_fail@plt+0x5d4c>
   171a8:	orr	r6, r0, r2
   171ac:	ldr	r9, [pc, #1992]	; 1797c <__assert_fail@plt+0x5d50>
   171b0:	mov	r8, #2
   171b4:	ldr	ip, [pc, #1988]	; 17980 <__assert_fail@plt+0x5d54>
   171b8:	add	r7, pc, r7
   171bc:	add	r9, pc, r9
   171c0:	str	r7, [sp, #160]	; 0xa0
   171c4:	str	r9, [sp, #220]	; 0xdc
   171c8:	orr	r7, r1, r3
   171cc:	add	ip, pc, ip
   171d0:	strd	r6, [sp, #168]	; 0xa8
   171d4:	mov	r9, #0
   171d8:	movw	r7, #65248	; 0xfee0
   171dc:	lsrs	r5, r5, #1
   171e0:	rrx	r4, r4
   171e4:	movt	r7, #65535	; 0xffff
   171e8:	str	ip, [sp, #196]	; 0xc4
   171ec:	strd	r8, [sp, #144]	; 0x90
   171f0:	str	r7, [sp, #136]	; 0x88
   171f4:	str	r0, [sp, #140]	; 0x8c
   171f8:	strd	r4, [sp, #176]	; 0xb0
   171fc:	ldr	r5, [sp, #184]	; 0xb8
   17200:	cmp	r5, #0
   17204:	beq	17490 <__assert_fail@plt+0x5864>
   17208:	add	r6, sp, #584	; 0x248
   1720c:	mvn	r3, #255	; 0xff
   17210:	ldrd	r2, [r3, r6]
   17214:	orrs	r7, r2, r3
   17218:	bne	17634 <__assert_fail@plt+0x5a08>
   1721c:	ldrb	r3, [sp, #570]	; 0x23a
   17220:	cmp	r3, #0
   17224:	beq	17958 <__assert_fail@plt+0x5d2c>
   17228:	add	r5, sp, #312	; 0x138
   1722c:	add	r6, sp, #288	; 0x120
   17230:	str	r5, [sp, #128]	; 0x80
   17234:	str	r6, [sp, #124]	; 0x7c
   17238:	movw	r9, #65208	; 0xfeb8
   1723c:	movt	r9, #65535	; 0xffff
   17240:	mov	r8, #1
   17244:	movw	ip, #65256	; 0xfee8
   17248:	movw	r4, #65264	; 0xfef0
   1724c:	movt	ip, #65535	; 0xffff
   17250:	add	r5, sp, #328	; 0x148
   17254:	movt	r4, #65535	; 0xffff
   17258:	str	ip, [sp, #120]	; 0x78
   1725c:	str	r5, [sp, #48]	; 0x30
   17260:	str	r4, [sp, #164]	; 0xa4
   17264:	strd	sl, [sp, #200]	; 0xc8
   17268:	ldr	r6, [sp, #48]	; 0x30
   1726c:	ldrd	r2, [r6, #8]!
   17270:	cmp	r3, #0
   17274:	cmpeq	r2, #2
   17278:	str	r6, [sp, #48]	; 0x30
   1727c:	beq	17808 <__assert_fail@plt+0x5bdc>
   17280:	ldr	ip, [sp, #160]	; 0xa0
   17284:	lsrs	r1, r3, #1
   17288:	rrx	r0, r2
   1728c:	and	r0, r0, #127	; 0x7f
   17290:	mov	r5, #0
   17294:	add	r0, r0, ip
   17298:	ldrd	r6, [sp, #80]	; 0x50
   1729c:	ldr	lr, [sp, #40]	; 0x28
   172a0:	ldrb	r0, [r0, #752]	; 0x2f0
   172a4:	mov	r4, r0
   172a8:	adds	r4, r4, r4
   172ac:	umull	r0, r1, r0, r0
   172b0:	adc	r5, r5, r5
   172b4:	mul	ip, r0, r3
   172b8:	mla	ip, r2, r1, ip
   172bc:	umull	r0, r1, r0, r2
   172c0:	add	r1, ip, r1
   172c4:	subs	r4, r4, r0
   172c8:	sbc	r5, r5, r1
   172cc:	mul	ip, r4, r5
   172d0:	umull	r0, r1, r4, r4
   172d4:	adds	r4, r4, r4
   172d8:	adc	r5, r5, r5
   172dc:	add	r1, r1, ip, lsl #1
   172e0:	mul	ip, r0, r3
   172e4:	mla	ip, r2, r1, ip
   172e8:	umull	r0, r1, r0, r2
   172ec:	add	r1, ip, r1
   172f0:	subs	r4, r4, r0
   172f4:	sbc	r5, r5, r1
   172f8:	mul	ip, r4, r5
   172fc:	umull	r0, r1, r4, r4
   17300:	adds	r4, r4, r4
   17304:	adc	r5, r5, r5
   17308:	add	r1, r1, ip, lsl #1
   1730c:	mul	ip, r0, r3
   17310:	mla	ip, r2, r1, ip
   17314:	umull	r0, r1, r0, r2
   17318:	add	r1, ip, r1
   1731c:	subs	r4, r4, r0
   17320:	sbc	r5, r5, r1
   17324:	cmp	r7, r3
   17328:	cmpeq	r6, r2
   1732c:	ldr	r7, [sp, #44]	; 0x2c
   17330:	umull	sl, fp, r4, lr
   17334:	mul	ip, r4, r7
   17338:	mla	ip, lr, r5, ip
   1733c:	add	ip, ip, fp
   17340:	mov	fp, ip
   17344:	bcc	177a8 <__assert_fail@plt+0x5b7c>
   17348:	mvn	r0, #0
   1734c:	mov	r1, #0
   17350:	and	r6, sl, r0
   17354:	and	r7, ip, r1
   17358:	strd	r6, [sp, #16]
   1735c:	and	r0, r0, r2
   17360:	ldr	r7, [sp, #16]
   17364:	and	r1, r1, r3
   17368:	ldr	lr, [sp, #20]
   1736c:	umull	r6, r7, r7, r3
   17370:	strd	r6, [sp, #64]	; 0x40
   17374:	umull	r6, r7, ip, r0
   17378:	strd	r6, [sp, #56]	; 0x38
   1737c:	ldr	r7, [sp, #16]
   17380:	mul	r2, r7, r1
   17384:	umull	r6, r7, r7, r0
   17388:	mla	r2, r0, lr, r2
   1738c:	strd	r6, [sp, #152]	; 0x98
   17390:	add	r2, r2, r7
   17394:	ldr	r6, [sp, #68]	; 0x44
   17398:	ldr	r7, [sp, #60]	; 0x3c
   1739c:	str	r2, [sp, #104]	; 0x68
   173a0:	mla	lr, r3, lr, r6
   173a4:	mla	r7, ip, r1, r7
   173a8:	umull	r2, r3, ip, r3
   173ac:	str	lr, [sp, #68]	; 0x44
   173b0:	ldrd	r0, [sp, #64]	; 0x40
   173b4:	mov	lr, #0
   173b8:	str	r7, [sp, #60]	; 0x3c
   173bc:	ldrd	r6, [sp, #56]	; 0x38
   173c0:	str	lr, [sp, #108]	; 0x6c
   173c4:	adds	r6, r6, r0
   173c8:	adc	r7, r7, r1
   173cc:	ldrd	r0, [sp, #104]	; 0x68
   173d0:	adds	r6, r6, r0
   173d4:	adc	r7, r7, r1
   173d8:	ldrd	r0, [sp, #56]	; 0x38
   173dc:	cmp	r1, r7
   173e0:	cmpeq	r0, r6
   173e4:	bls	173f0 <__assert_fail@plt+0x57c4>
   173e8:	adds	r2, r2, #0
   173ec:	adc	r3, r3, #1
   173f0:	ldr	r6, [sp, #132]	; 0x84
   173f4:	mov	ip, #0
   173f8:	str	r7, [sp, #112]	; 0x70
   173fc:	add	r7, sp, #584	; 0x248
   17400:	str	ip, [sp, #116]	; 0x74
   17404:	add	ip, sp, #584	; 0x248
   17408:	strd	sl, [r7, r6]
   1740c:	ldrd	r0, [sp, #80]	; 0x50
   17410:	ldrd	r6, [sp, #112]	; 0x70
   17414:	subs	r0, r0, r6
   17418:	sbc	r1, r1, r7
   1741c:	ldr	r7, [sp, #136]	; 0x88
   17420:	subs	r0, r0, r2
   17424:	sbc	r1, r1, r3
   17428:	mul	r3, r0, r5
   1742c:	mla	r3, r4, r1, r3
   17430:	umull	r0, r1, r0, r4
   17434:	add	r1, r3, r1
   17438:	strd	r0, [ip, r7]
   1743c:	ldrd	r4, [sp, #72]	; 0x48
   17440:	add	r3, sp, #272	; 0x110
   17444:	ldr	r2, [sp, #124]	; 0x7c
   17448:	add	r1, sp, #240	; 0xf0
   1744c:	ldr	r0, [sp, #128]	; 0x80
   17450:	add	r6, sp, #584	; 0x248
   17454:	strd	r4, [sp]
   17458:	add	r5, sp, #256	; 0x100
   1745c:	str	r5, [sp, #8]
   17460:	bl	12dc8 <__assert_fail@plt+0x119c>
   17464:	ldrd	r2, [r6, r9]
   17468:	ldr	r7, [sp, #120]	; 0x78
   1746c:	cmp	r1, r3
   17470:	cmpeq	r0, r2
   17474:	strd	r0, [r6, r7]
   17478:	beq	177c8 <__assert_fail@plt+0x5b9c>
   1747c:	ldrb	r3, [sp, #570]	; 0x23a
   17480:	cmp	r8, r3
   17484:	bcs	17958 <__assert_fail@plt+0x5d2c>
   17488:	add	r8, r8, #1
   1748c:	b	17268 <__assert_fail@plt+0x563c>
   17490:	ldr	r4, [sp, #140]	; 0x8c
   17494:	subs	r2, r4, #24
   17498:	rsbs	r3, r2, #0
   1749c:	adcs	r3, r3, r2
   174a0:	cmp	r3, #0
   174a4:	bne	17788 <__assert_fail@plt+0x5b5c>
   174a8:	ldr	r4, [sp, #196]	; 0xc4
   174ac:	ldr	r5, [sp, #140]	; 0x8c
   174b0:	add	r3, r4, #48	; 0x30
   174b4:	ldrd	r6, [sp, #144]	; 0x90
   174b8:	ldrd	r8, [sp, #32]
   174bc:	ldrb	r2, [r5, r3]
   174c0:	mov	r3, #0
   174c4:	adds	r6, r6, r2
   174c8:	adc	r7, r7, r3
   174cc:	strd	r6, [sp, #144]	; 0x90
   174d0:	cmp	r9, r7
   174d4:	cmpeq	r8, r6
   174d8:	bls	1761c <__assert_fail@plt+0x59f0>
   174dc:	mov	r2, r6
   174e0:	mov	r3, r7
   174e4:	mov	r6, #64	; 0x40
   174e8:	mov	r7, #0
   174ec:	mov	r4, #0
   174f0:	mov	r5, #0
   174f4:	subs	r6, r6, #1
   174f8:	mvn	r8, #0
   174fc:	sbc	r7, r7, #0
   17500:	mvn	r9, #0
   17504:	cmp	r7, r9
   17508:	cmpeq	r6, r8
   1750c:	beq	175a8 <__assert_fail@plt+0x597c>
   17510:	adds	r2, r2, r2
   17514:	lsr	sl, r5, #31
   17518:	adc	r3, r3, r3
   1751c:	ldrd	r8, [sp, #32]
   17520:	adds	r0, r4, r4
   17524:	mov	fp, #0
   17528:	orr	r2, r2, sl
   1752c:	orr	r3, r3, fp
   17530:	adc	r1, r5, r5
   17534:	cmp	r9, r3
   17538:	cmpeq	r8, r2
   1753c:	mov	r4, r0
   17540:	mov	r5, r1
   17544:	bcc	1756c <__assert_fail@plt+0x5940>
   17548:	ldrd	r8, [sp, #24]
   1754c:	movne	ip, #0
   17550:	moveq	ip, #1
   17554:	cmp	r9, r5
   17558:	cmpeq	r8, r4
   1755c:	movhi	ip, #0
   17560:	andls	ip, ip, #1
   17564:	cmp	ip, fp
   17568:	beq	174f4 <__assert_fail@plt+0x58c8>
   1756c:	ldrd	r4, [sp, #24]
   17570:	mov	r9, #0
   17574:	cmp	r5, r1
   17578:	cmpeq	r4, r0
   1757c:	ldrd	r4, [sp, #32]
   17580:	movls	r8, #0
   17584:	movhi	r8, #1
   17588:	subs	r2, r2, r4
   1758c:	sbc	r3, r3, r5
   17590:	ldrd	r4, [sp, #24]
   17594:	subs	r2, r2, r8
   17598:	sbc	r3, r3, r9
   1759c:	subs	r4, r0, r4
   175a0:	sbc	r5, r1, r5
   175a4:	b	174f4 <__assert_fail@plt+0x58c8>
   175a8:	ldr	r6, [sp, #188]	; 0xbc
   175ac:	add	r8, sp, #584	; 0x248
   175b0:	movw	ip, #65200	; 0xfeb0
   175b4:	movw	r1, #65192	; 0xfea8
   175b8:	movt	ip, #65535	; 0xffff
   175bc:	movt	r1, #65535	; 0xffff
   175c0:	str	r6, [sp, #8]
   175c4:	add	lr, sp, #224	; 0xe0
   175c8:	add	r9, sp, #240	; 0xf0
   175cc:	str	lr, [sp, #4]
   175d0:	str	r9, [sp]
   175d4:	add	r0, sp, #272	; 0x110
   175d8:	add	r7, sp, #256	; 0x100
   175dc:	str	r7, [sp, #12]
   175e0:	strd	r2, [r8, ip]
   175e4:	strd	r4, [r8, r1]
   175e8:	ldrd	r2, [sp, #72]	; 0x48
   175ec:	bl	12fb8 <__assert_fail@plt+0x138c>
   175f0:	cmp	r0, #0
   175f4:	beq	178f4 <__assert_fail@plt+0x5cc8>
   175f8:	ldr	r9, [sp, #140]	; 0x8c
   175fc:	add	r9, r9, #1
   17600:	str	r9, [sp, #140]	; 0x8c
   17604:	cmp	r9, #668	; 0x29c
   17608:	beq	1792c <__assert_fail@plt+0x5d00>
   1760c:	ldr	ip, [sp, #208]	; 0xd0
   17610:	ldrb	ip, [ip]
   17614:	str	ip, [sp, #184]	; 0xb8
   17618:	b	171fc <__assert_fail@plt+0x55d0>
   1761c:	ldrd	r4, [sp, #144]	; 0x90
   17620:	mov	r6, #128	; 0x80
   17624:	mov	r7, #0
   17628:	mov	r2, #0
   1762c:	mov	r3, #0
   17630:	b	174f4 <__assert_fail@plt+0x58c8>
   17634:	ldrd	r8, [sp, #72]	; 0x48
   17638:	movw	r3, #65272	; 0xfef8
   1763c:	movt	r3, #65535	; 0xffff
   17640:	ldr	r5, [sp, #220]	; 0xdc
   17644:	add	r4, sp, #288	; 0x120
   17648:	str	r4, [sp, #124]	; 0x7c
   1764c:	strd	r8, [sp]
   17650:	add	r9, sp, #312	; 0x138
   17654:	ldrd	r6, [r6, r3]
   17658:	add	ip, sp, #256	; 0x100
   1765c:	str	r9, [sp, #128]	; 0x80
   17660:	add	r1, sp, #240	; 0xf0
   17664:	str	ip, [sp, #8]
   17668:	lsrs	r3, r7, #1
   1766c:	rrx	r2, r6
   17670:	and	r3, r2, #127	; 0x7f
   17674:	add	r3, r3, r5
   17678:	ldr	r0, [sp, #128]	; 0x80
   1767c:	ldrb	r4, [r3, #752]	; 0x2f0
   17680:	mov	r3, #0
   17684:	mov	r2, r4
   17688:	adds	r8, r2, r2
   1768c:	umull	r4, r5, r4, r4
   17690:	adc	r9, r3, r3
   17694:	ldr	r2, [sp, #124]	; 0x7c
   17698:	mul	r3, r4, r7
   1769c:	mla	r3, r6, r5, r3
   176a0:	umull	r4, r5, r4, r6
   176a4:	add	r5, r3, r5
   176a8:	subs	r8, r8, r4
   176ac:	sbc	r9, r9, r5
   176b0:	mul	r3, r8, r9
   176b4:	umull	r4, r5, r8, r8
   176b8:	adds	r8, r8, r8
   176bc:	adc	r9, r9, r9
   176c0:	add	r5, r5, r3, lsl #1
   176c4:	mul	r3, r4, r7
   176c8:	mla	r3, r6, r5, r3
   176cc:	umull	r4, r5, r4, r6
   176d0:	add	r5, r3, r5
   176d4:	subs	r8, r8, r4
   176d8:	sbc	r9, r9, r5
   176dc:	mul	r3, r8, r9
   176e0:	umull	r4, r5, r8, r8
   176e4:	adds	r8, r8, r8
   176e8:	adc	r9, r9, r9
   176ec:	add	r5, r5, r3, lsl #1
   176f0:	mul	r3, r4, r7
   176f4:	ldr	r7, [sp, #40]	; 0x28
   176f8:	mla	r3, r6, r5, r3
   176fc:	umull	r4, r5, r4, r6
   17700:	ldr	r6, [sp, #44]	; 0x2c
   17704:	add	r5, r3, r5
   17708:	add	r3, sp, #272	; 0x110
   1770c:	subs	r8, r8, r4
   17710:	sbc	r9, r9, r5
   17714:	mul	ip, r8, r6
   17718:	umull	r4, r5, r8, r7
   1771c:	ldr	r8, [sp, #132]	; 0x84
   17720:	mla	ip, r7, r9, ip
   17724:	add	r9, sp, #584	; 0x248
   17728:	add	r5, ip, r5
   1772c:	ldr	ip, [sp, #136]	; 0x88
   17730:	strd	r4, [r9, r8]
   17734:	mov	r4, #0
   17738:	mov	r5, #0
   1773c:	strd	r4, [r9, ip]
   17740:	bl	12dc8 <__assert_fail@plt+0x119c>
   17744:	movw	r3, #65208	; 0xfeb8
   17748:	movt	r3, #65535	; 0xffff
   1774c:	mov	r4, r0
   17750:	add	r0, sp, #584	; 0x248
   17754:	mov	r5, r1
   17758:	movw	r1, #65256	; 0xfee8
   1775c:	ldrd	r2, [r3, r0]
   17760:	movt	r1, #65535	; 0xffff
   17764:	cmp	r5, r3
   17768:	cmpeq	r4, r2
   1776c:	strd	r4, [r0, r1]
   17770:	beq	178b4 <__assert_fail@plt+0x5c88>
   17774:	ldrb	r3, [sp, #570]	; 0x23a
   17778:	cmp	r3, #0
   1777c:	bne	17238 <__assert_fail@plt+0x560c>
   17780:	ldr	r8, [sp, #184]	; 0xb8
   17784:	str	r8, [sp, #216]	; 0xd8
   17788:	ldr	r4, [sp, #212]	; 0xd4
   1778c:	ldr	r2, [sp, #580]	; 0x244
   17790:	ldr	r0, [sp, #216]	; 0xd8
   17794:	ldr	r3, [r4]
   17798:	cmp	r2, r3
   1779c:	bne	17954 <__assert_fail@plt+0x5d28>
   177a0:	add	sp, sp, #588	; 0x24c
   177a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177a8:	ldr	r4, [sp, #132]	; 0x84
   177ac:	add	r5, sp, #584	; 0x248
   177b0:	ldr	r6, [sp, #136]	; 0x88
   177b4:	mov	r2, #0
   177b8:	mov	r3, #0
   177bc:	strd	sl, [r5, r4]
   177c0:	strd	r2, [r5, r6]
   177c4:	b	1743c <__assert_fail@plt+0x5810>
   177c8:	ldr	ip, [sp, #164]	; 0xa4
   177cc:	movw	r3, #65216	; 0xfec0
   177d0:	movt	r3, #65535	; 0xffff
   177d4:	ldrb	r1, [sp, #570]	; 0x23a
   177d8:	ldrd	r2, [r3, r6]
   177dc:	ldrd	r4, [r6, ip]
   177e0:	cmp	r5, r3
   177e4:	cmpeq	r4, r2
   177e8:	moveq	r3, #0
   177ec:	movne	r3, #1
   177f0:	cmp	r8, r1
   177f4:	bcs	17828 <__assert_fail@plt+0x5bfc>
   177f8:	cmp	r3, #0
   177fc:	bne	17488 <__assert_fail@plt+0x585c>
   17800:	ldrd	sl, [sp, #200]	; 0xc8
   17804:	b	174a8 <__assert_fail@plt+0x587c>
   17808:	ldrd	r4, [sp, #168]	; 0xa8
   1780c:	add	r7, sp, #584	; 0x248
   17810:	ldr	r6, [sp, #132]	; 0x84
   17814:	strd	r4, [r7, r6]
   17818:	ldrd	r4, [sp, #176]	; 0xb0
   1781c:	ldr	r6, [sp, #136]	; 0x88
   17820:	strd	r4, [r7, r6]
   17824:	b	1743c <__assert_fail@plt+0x5810>
   17828:	ldrd	sl, [sp, #200]	; 0xc8
   1782c:	b	174a0 <__assert_fail@plt+0x5874>
   17830:	ldrd	r2, [sp, #80]	; 0x50
   17834:	and	r2, r2, r4
   17838:	and	r3, r3, r5
   1783c:	orrs	r9, r2, r3
   17840:	bne	1791c <__assert_fail@plt+0x5cf0>
   17844:	ldrd	r2, [sp, #80]	; 0x50
   17848:	mov	ip, #0
   1784c:	lsrs	r3, r3, #1
   17850:	rrx	r2, r2
   17854:	and	r0, r2, r4
   17858:	and	r1, r3, r5
   1785c:	add	ip, ip, #1
   17860:	orrs	lr, r0, r1
   17864:	beq	1784c <__assert_fail@plt+0x5c20>
   17868:	add	r4, ip, #64	; 0x40
   1786c:	str	r4, [sp, #188]	; 0xbc
   17870:	ldr	r6, [sp, #80]	; 0x50
   17874:	rsb	r2, ip, #32
   17878:	ldr	r7, [sp, #84]	; 0x54
   1787c:	movw	r1, #65184	; 0xfea0
   17880:	add	r8, sp, #584	; 0x248
   17884:	movt	r1, #65535	; 0xffff
   17888:	lsr	r3, r6, ip
   1788c:	orr	r3, r3, r7, lsl r2
   17890:	sub	r2, ip, #32
   17894:	orr	r3, r3, r7, lsr r2
   17898:	lsr	r0, r7, ip
   1789c:	str	r3, [sp, #224]	; 0xe0
   178a0:	mov	r2, #0
   178a4:	mov	r3, #0
   178a8:	str	r0, [sp, #228]	; 0xe4
   178ac:	strd	r2, [r8, r1]
   178b0:	b	16e44 <__assert_fail@plt+0x5218>
   178b4:	movw	r2, #65264	; 0xfef0
   178b8:	movw	r3, #65216	; 0xfec0
   178bc:	movt	r2, #65535	; 0xffff
   178c0:	movt	r3, #65535	; 0xffff
   178c4:	ldrb	r1, [sp, #570]	; 0x23a
   178c8:	ldrd	r4, [r0, r2]
   178cc:	ldrd	r2, [r3, r0]
   178d0:	cmp	r5, r3
   178d4:	cmpeq	r4, r2
   178d8:	moveq	r3, #0
   178dc:	movne	r3, #1
   178e0:	cmp	r1, #0
   178e4:	beq	174a0 <__assert_fail@plt+0x5874>
   178e8:	cmp	r3, #0
   178ec:	bne	17238 <__assert_fail@plt+0x560c>
   178f0:	b	174a8 <__assert_fail@plt+0x587c>
   178f4:	str	r0, [sp, #216]	; 0xd8
   178f8:	b	17788 <__assert_fail@plt+0x5b5c>
   178fc:	add	r3, sp, #320	; 0x140
   17900:	ldrd	r0, [sp, #80]	; 0x50
   17904:	str	r3, [sp]
   17908:	ldrd	r2, [sp, #40]	; 0x28
   1790c:	bl	159b8 <__assert_fail@plt+0x3d8c>
   17910:	ldrb	r4, [r4]
   17914:	str	r4, [sp, #184]	; 0xb8
   17918:	b	17170 <__assert_fail@plt+0x5544>
   1791c:	mov	r5, #64	; 0x40
   17920:	mov	ip, #0
   17924:	str	r5, [sp, #188]	; 0xbc
   17928:	b	17870 <__assert_fail@plt+0x5c44>
   1792c:	ldr	r1, [pc, #80]	; 17984 <__assert_fail@plt+0x5d58>
   17930:	mov	r2, #5
   17934:	mov	r0, #0
   17938:	add	r1, pc, r1
   1793c:	bl	118cc <dcgettext@plt>
   17940:	mov	r2, r0
   17944:	mov	r0, #0
   17948:	mov	r1, r0
   1794c:	bl	119b0 <error@plt>
   17950:	bl	11c08 <abort@plt>
   17954:	bl	118e4 <__stack_chk_fail@plt>
   17958:	ldr	r7, [sp, #184]	; 0xb8
   1795c:	str	r7, [sp, #216]	; 0xd8
   17960:	b	17788 <__assert_fail@plt+0x5b5c>
   17964:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   17968:	andeq	r0, r0, ip, lsl #3
   1796c:	andeq	fp, r0, r8, lsr #28
   17970:	andeq	r0, r2, r4, rrx
   17974:	andeq	r0, r2, r0, asr #32
   17978:	andeq	fp, r0, r8, asr #21
   1797c:	andeq	fp, r0, r4, asr #21
   17980:			; <UNDEFINED> instruction: 0x0000bab4
   17984:	andeq	lr, r0, ip, lsl #13
   17988:	orrs	ip, r0, r1
   1798c:	push	{r4, r5}
   17990:	mov	r4, r2
   17994:	mov	r5, r3
   17998:	bne	179cc <__assert_fail@plt+0x5da0>
   1799c:	cmp	r5, #0
   179a0:	cmpeq	r4, #1
   179a4:	bls	179d4 <__assert_fail@plt+0x5da8>
   179a8:	movw	r2, #60792	; 0xed78
   179ac:	movt	r2, #381	; 0x17d
   179b0:	mov	r3, #0
   179b4:	cmp	r5, r3
   179b8:	cmpeq	r4, r2
   179bc:	movls	r0, #1
   179c0:	bhi	179dc <__assert_fail@plt+0x5db0>
   179c4:	pop	{r4, r5}
   179c8:	bx	lr
   179cc:	pop	{r4, r5}
   179d0:	b	16d10 <__assert_fail@plt+0x50e4>
   179d4:	mov	r0, #0
   179d8:	b	179c4 <__assert_fail@plt+0x5d98>
   179dc:	mov	r0, r4
   179e0:	mov	r1, r5
   179e4:	pop	{r4, r5}
   179e8:	b	16660 <__assert_fail@plt+0x4a34>
   179ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179f0:	sub	sp, sp, #236	; 0xec
   179f4:	ldr	ip, [pc, #3316]	; 186f0 <__assert_fail@plt+0x6ac4>
   179f8:	mov	r5, r1
   179fc:	ldr	r8, [sp, #276]	; 0x114
   17a00:	mov	r4, r0
   17a04:	ldr	r1, [pc, #3304]	; 186f4 <__assert_fail@plt+0x6ac8>
   17a08:	add	ip, pc, ip
   17a0c:	strd	r2, [sp, #72]	; 0x48
   17a10:	cmp	r5, #0
   17a14:	cmpeq	r4, #1
   17a18:	str	r8, [sp, #144]	; 0x90
   17a1c:	ldr	r1, [ip, r1]
   17a20:	ldr	r3, [r1]
   17a24:	str	r1, [sp, #176]	; 0xb0
   17a28:	str	r3, [sp, #228]	; 0xe4
   17a2c:	bls	186b0 <__assert_fail@plt+0x6a84>
   17a30:	mov	sl, #64	; 0x40
   17a34:	mov	fp, #0
   17a38:	mov	r8, #0
   17a3c:	mov	r9, #0
   17a40:	strd	r8, [sp, #96]	; 0x60
   17a44:	mov	r8, #1
   17a48:	mov	r9, #0
   17a4c:	strd	r8, [sp, #104]	; 0x68
   17a50:	ldrd	r2, [sp, #104]	; 0x68
   17a54:	ldrd	r0, [sp, #96]	; 0x60
   17a58:	subs	sl, sl, #1
   17a5c:	mvn	r8, #0
   17a60:	sbc	fp, fp, #0
   17a64:	mvn	r9, #0
   17a68:	cmp	fp, r9
   17a6c:	cmpeq	sl, r8
   17a70:	beq	17b20 <__assert_fail@plt+0x5ef4>
   17a74:	adds	r2, r2, r2
   17a78:	lsr	r6, r1, #31
   17a7c:	adc	r3, r3, r3
   17a80:	mov	r7, #0
   17a84:	adds	r8, r0, r0
   17a88:	orr	r2, r2, r6
   17a8c:	orr	r3, r3, r7
   17a90:	adc	r9, r1, r1
   17a94:	cmp	r5, r3
   17a98:	cmpeq	r4, r2
   17a9c:	strd	r8, [sp, #56]	; 0x38
   17aa0:	mov	r0, r8
   17aa4:	mov	r1, r9
   17aa8:	bcc	17ad8 <__assert_fail@plt+0x5eac>
   17aac:	cmp	r3, r5
   17ab0:	cmpeq	r2, r4
   17ab4:	ldrd	r8, [sp, #72]	; 0x48
   17ab8:	movne	ip, #0
   17abc:	moveq	ip, #1
   17ac0:	cmp	r1, r9
   17ac4:	cmpeq	r0, r8
   17ac8:	movcc	ip, #0
   17acc:	andcs	ip, ip, #1
   17ad0:	cmp	ip, r7
   17ad4:	beq	17a58 <__assert_fail@plt+0x5e2c>
   17ad8:	ldrd	r8, [sp, #72]	; 0x48
   17adc:	mov	ip, #0
   17ae0:	ldrd	r0, [sp, #56]	; 0x38
   17ae4:	str	ip, [sp, #68]	; 0x44
   17ae8:	cmp	r1, r9
   17aec:	cmpeq	r0, r8
   17af0:	movcs	r9, #0
   17af4:	movcc	r9, #1
   17af8:	str	r9, [sp, #64]	; 0x40
   17afc:	ldrd	r8, [sp, #72]	; 0x48
   17b00:	subs	r2, r2, r4
   17b04:	sbc	r3, r3, r5
   17b08:	subs	r0, r0, r8
   17b0c:	sbc	r1, r1, r9
   17b10:	ldrd	r8, [sp, #64]	; 0x40
   17b14:	subs	r2, r2, r8
   17b18:	sbc	r3, r3, r9
   17b1c:	b	17a58 <__assert_fail@plt+0x5e2c>
   17b20:	adds	sl, r0, r0
   17b24:	strd	r2, [sp, #104]	; 0x68
   17b28:	adc	fp, r1, r1
   17b2c:	adds	r2, r2, r2
   17b30:	adc	r3, r3, r3
   17b34:	cmp	r1, fp
   17b38:	cmpeq	r0, sl
   17b3c:	strd	r0, [sp, #96]	; 0x60
   17b40:	movls	r1, #0
   17b44:	movhi	r1, #1
   17b48:	adds	r2, r2, r1
   17b4c:	adc	r3, r3, #0
   17b50:	cmp	r5, r3
   17b54:	cmpeq	r4, r2
   17b58:	bcc	17fb8 <__assert_fail@plt+0x638c>
   17b5c:	ldrd	r8, [sp, #72]	; 0x48
   17b60:	movne	r1, #0
   17b64:	moveq	r1, #1
   17b68:	cmp	r9, fp
   17b6c:	cmpeq	r8, sl
   17b70:	movhi	r1, #0
   17b74:	andls	r1, r1, #1
   17b78:	cmp	r1, #0
   17b7c:	bne	17fb8 <__assert_fail@plt+0x638c>
   17b80:	orrs	r7, r4, r5
   17b84:	ldrd	r6, [sp, #72]	; 0x48
   17b88:	mov	r8, r3
   17b8c:	strd	r2, [sp, #184]	; 0xb8
   17b90:	str	r3, [sp, #196]	; 0xc4
   17b94:	moveq	r3, #0
   17b98:	movne	r3, #1
   17b9c:	cmp	r7, #0
   17ba0:	cmpeq	r6, #1
   17ba4:	mov	ip, r2
   17ba8:	orrne	r3, r3, #1
   17bac:	str	r2, [sp, #192]	; 0xc0
   17bb0:	cmp	r3, #0
   17bb4:	str	r2, [sp, #200]	; 0xc8
   17bb8:	str	r8, [sp, #204]	; 0xcc
   17bbc:	beq	18338 <__assert_fail@plt+0x670c>
   17bc0:	ldr	r6, [pc, #2864]	; 186f8 <__assert_fail@plt+0x6acc>
   17bc4:	mov	r9, #1
   17bc8:	ldr	r7, [pc, #2860]	; 186fc <__assert_fail@plt+0x6ad0>
   17bcc:	mov	lr, r8
   17bd0:	add	r6, pc, r6
   17bd4:	str	r6, [sp, #180]	; 0xb4
   17bd8:	ldr	r6, [sp, #272]	; 0x110
   17bdc:	add	r7, pc, r7
   17be0:	str	r9, [sp, #112]	; 0x70
   17be4:	add	r9, sp, #216	; 0xd8
   17be8:	str	r9, [sp, #124]	; 0x7c
   17bec:	ldrd	r8, [sp, #72]	; 0x48
   17bf0:	str	r7, [sp, #148]	; 0x94
   17bf4:	mov	r7, #0
   17bf8:	strd	r6, [sp, #80]	; 0x50
   17bfc:	mov	r6, #1
   17c00:	add	r7, sp, #208	; 0xd0
   17c04:	str	r6, [sp, #88]	; 0x58
   17c08:	str	r7, [sp, #120]	; 0x78
   17c0c:	mov	r7, r5
   17c10:	str	r6, [sp, #116]	; 0x74
   17c14:	mov	r6, r4
   17c18:	strd	sl, [sp, #56]	; 0x38
   17c1c:	strd	sl, [sp, #64]	; 0x40
   17c20:	ldr	r4, [sp, #148]	; 0x94
   17c24:	lsrs	r3, r9, #1
   17c28:	rrx	r2, r8
   17c2c:	mov	r0, #127	; 0x7f
   17c30:	and	r2, r2, r0
   17c34:	add	r2, r4, r2
   17c38:	mov	r1, #0
   17c3c:	strd	sl, [sp, #136]	; 0x88
   17c40:	ldrb	r2, [r2, #752]	; 0x2f0
   17c44:	mov	r0, r2
   17c48:	adds	r4, r0, r0
   17c4c:	umull	r2, r3, r2, r2
   17c50:	adc	r5, r1, r1
   17c54:	mul	r1, r2, r9
   17c58:	mla	r1, r8, r3, r1
   17c5c:	umull	r2, r3, r2, r8
   17c60:	add	r3, r1, r3
   17c64:	subs	r4, r4, r2
   17c68:	sbc	r5, r5, r3
   17c6c:	mul	r3, r4, r5
   17c70:	umull	r0, r1, r4, r4
   17c74:	adds	r4, r4, r4
   17c78:	adc	r5, r5, r5
   17c7c:	add	r1, r1, r3, lsl #1
   17c80:	mul	r3, r0, r9
   17c84:	mla	r3, r8, r1, r3
   17c88:	umull	r0, r1, r0, r8
   17c8c:	add	r1, r3, r1
   17c90:	subs	r4, r4, r0
   17c94:	sbc	r5, r5, r1
   17c98:	adds	r2, r4, r4
   17c9c:	mul	r0, r4, r5
   17ca0:	adc	r3, r5, r5
   17ca4:	strd	r2, [sp, #72]	; 0x48
   17ca8:	str	r0, [sp, #128]	; 0x80
   17cac:	umull	r0, r1, r4, r4
   17cb0:	ldr	r3, [sp, #128]	; 0x80
   17cb4:	ldrd	r4, [sp, #72]	; 0x48
   17cb8:	add	r1, r1, r3, lsl #1
   17cbc:	mul	r3, r0, r9
   17cc0:	mla	r3, r8, r1, r3
   17cc4:	umull	r0, r1, r0, r8
   17cc8:	add	r1, r3, r1
   17ccc:	subs	r4, r4, r0
   17cd0:	sbc	r5, r5, r1
   17cd4:	strd	r4, [sp, #72]	; 0x48
   17cd8:	mov	r4, r6
   17cdc:	mov	r5, r7
   17ce0:	ldr	r6, [sp, #88]	; 0x58
   17ce4:	ldr	r7, [sp, #124]	; 0x7c
   17ce8:	ldrd	sl, [sp, #64]	; 0x40
   17cec:	mov	r2, ip
   17cf0:	mov	r3, lr
   17cf4:	str	ip, [sp, #8]
   17cf8:	str	lr, [sp, #12]
   17cfc:	mov	r0, r7
   17d00:	strd	sl, [sp]
   17d04:	strd	sl, [sp, #16]
   17d08:	ldrd	sl, [sp, #72]	; 0x48
   17d0c:	strd	r4, [sp, #24]
   17d10:	strd	r8, [sp, #32]
   17d14:	strd	sl, [sp, #40]	; 0x28
   17d18:	bl	124c4 <__assert_fail@plt+0x898>
   17d1c:	ldrd	sl, [sp, #80]	; 0x50
   17d20:	ldrd	r2, [sp, #216]	; 0xd8
   17d24:	adds	sl, sl, r0
   17d28:	adc	fp, fp, r1
   17d2c:	strd	sl, [sp, #64]	; 0x40
   17d30:	cmp	r1, fp
   17d34:	cmpeq	r0, sl
   17d38:	movls	r1, #0
   17d3c:	movhi	r1, #1
   17d40:	adds	r2, r2, r1
   17d44:	adc	r3, r3, #0
   17d48:	cmp	r3, r5
   17d4c:	cmpeq	r2, r4
   17d50:	bhi	17d84 <__assert_fail@plt+0x6158>
   17d54:	cmp	r5, r3
   17d58:	cmpeq	r4, r2
   17d5c:	movne	r1, #0
   17d60:	moveq	r1, #1
   17d64:	cmp	r9, fp
   17d68:	cmpeq	r8, sl
   17d6c:	movhi	r1, #0
   17d70:	andls	r1, r1, #1
   17d74:	cmp	r1, #0
   17d78:	strdeq	r2, [sp, #184]	; 0xb8
   17d7c:	strdeq	r2, [sp, #128]	; 0x80
   17d80:	beq	17dc0 <__assert_fail@plt+0x6194>
   17d84:	ldrd	sl, [sp, #64]	; 0x40
   17d88:	mov	r1, #0
   17d8c:	cmp	r9, fp
   17d90:	cmpeq	r8, sl
   17d94:	movls	r0, #0
   17d98:	movhi	r0, #1
   17d9c:	subs	r2, r2, r4
   17da0:	sbc	r3, r3, r5
   17da4:	subs	r2, r2, r0
   17da8:	sbc	r3, r3, r1
   17dac:	subs	sl, sl, r8
   17db0:	sbc	fp, fp, r9
   17db4:	strd	r2, [sp, #128]	; 0x80
   17db8:	strd	sl, [sp, #64]	; 0x40
   17dbc:	strd	r2, [sp, #184]	; 0xb8
   17dc0:	ldrd	r0, [sp, #64]	; 0x40
   17dc4:	ldrd	sl, [sp, #56]	; 0x38
   17dc8:	ldrd	r2, [sp, #192]	; 0xc0
   17dcc:	subs	sl, sl, r0
   17dd0:	sbc	fp, fp, r1
   17dd4:	strd	sl, [sp, #88]	; 0x58
   17dd8:	ldrd	sl, [sp, #128]	; 0x80
   17ddc:	subs	r2, r2, sl
   17de0:	sbc	r3, r3, fp
   17de4:	ldrd	sl, [sp, #56]	; 0x38
   17de8:	cmp	fp, r1
   17dec:	cmpeq	sl, r0
   17df0:	movcs	ip, #0
   17df4:	movcc	ip, #1
   17df8:	subs	r0, r2, ip
   17dfc:	sbc	r1, r3, #0
   17e00:	cmp	r0, #0
   17e04:	sbcs	fp, r1, #0
   17e08:	blt	18044 <__assert_fail@plt+0x6418>
   17e0c:	ldrd	sl, [sp, #96]	; 0x60
   17e10:	strd	r0, [sp, #8]
   17e14:	mov	r0, r7
   17e18:	ldrd	r2, [sp, #104]	; 0x68
   17e1c:	strd	sl, [sp]
   17e20:	ldrd	sl, [sp, #88]	; 0x58
   17e24:	strd	r4, [sp, #24]
   17e28:	strd	r8, [sp, #32]
   17e2c:	strd	sl, [sp, #16]
   17e30:	ldrd	sl, [sp, #72]	; 0x48
   17e34:	strd	sl, [sp, #40]	; 0x28
   17e38:	bl	124c4 <__assert_fail@plt+0x898>
   17e3c:	ldr	fp, [sp, #116]	; 0x74
   17e40:	cmp	fp, #1
   17e44:	ldrd	sl, [sp, #216]	; 0xd8
   17e48:	strd	sl, [sp, #104]	; 0x68
   17e4c:	strd	r0, [sp, #96]	; 0x60
   17e50:	beq	17fec <__assert_fail@plt+0x63c0>
   17e54:	ldr	ip, [sp, #184]	; 0xb8
   17e58:	ldr	lr, [sp, #188]	; 0xbc
   17e5c:	subs	r6, r6, #1
   17e60:	bne	17fac <__assert_fail@plt+0x6380>
   17e64:	ldr	fp, [sp, #112]	; 0x70
   17e68:	str	ip, [sp, #192]	; 0xc0
   17e6c:	cmp	fp, #0
   17e70:	str	lr, [sp, #196]	; 0xc4
   17e74:	lsl	sl, fp, #1
   17e78:	str	sl, [sp, #88]	; 0x58
   17e7c:	ldrd	sl, [sp, #64]	; 0x40
   17e80:	strd	sl, [sp, #136]	; 0x88
   17e84:	beq	17f88 <__assert_fail@plt+0x635c>
   17e88:	strd	r8, [sp, #56]	; 0x38
   17e8c:	mov	r8, r4
   17e90:	mov	r9, r5
   17e94:	ldrd	r4, [sp, #56]	; 0x38
   17e98:	mov	r3, lr
   17e9c:	strd	sl, [sp]
   17ea0:	mov	r2, ip
   17ea4:	strd	sl, [sp, #16]
   17ea8:	mov	r0, r7
   17eac:	ldrd	sl, [sp, #72]	; 0x48
   17eb0:	strd	r4, [sp, #32]
   17eb4:	str	ip, [sp, #8]
   17eb8:	strd	sl, [sp, #40]	; 0x28
   17ebc:	str	lr, [sp, #12]
   17ec0:	strd	r8, [sp, #24]
   17ec4:	bl	124c4 <__assert_fail@plt+0x898>
   17ec8:	ldrd	sl, [sp, #80]	; 0x50
   17ecc:	ldrd	r4, [sp, #216]	; 0xd8
   17ed0:	adds	sl, sl, r0
   17ed4:	adc	fp, fp, r1
   17ed8:	cmp	r1, fp
   17edc:	cmpeq	r0, sl
   17ee0:	movls	r3, #0
   17ee4:	movhi	r3, #1
   17ee8:	adds	r4, r4, r3
   17eec:	adc	r5, r5, #0
   17ef0:	cmp	r5, r9
   17ef4:	cmpeq	r4, r8
   17ef8:	bhi	17f28 <__assert_fail@plt+0x62fc>
   17efc:	cmp	r9, r5
   17f00:	cmpeq	r8, r4
   17f04:	ldrd	r0, [sp, #56]	; 0x38
   17f08:	movne	r3, #0
   17f0c:	moveq	r3, #1
   17f10:	cmp	r1, fp
   17f14:	cmpeq	r0, sl
   17f18:	movhi	r3, #0
   17f1c:	andls	r3, r3, #1
   17f20:	cmp	r3, #0
   17f24:	beq	17f5c <__assert_fail@plt+0x6330>
   17f28:	ldrd	r2, [sp, #56]	; 0x38
   17f2c:	ldrd	r0, [sp, #56]	; 0x38
   17f30:	cmp	r3, fp
   17f34:	cmpeq	r2, sl
   17f38:	mov	r3, #0
   17f3c:	movls	r2, #0
   17f40:	movhi	r2, #1
   17f44:	subs	r4, r4, r8
   17f48:	sbc	r5, r5, r9
   17f4c:	subs	r4, r4, r2
   17f50:	sbc	r5, r5, r3
   17f54:	subs	sl, sl, r0
   17f58:	sbc	fp, fp, r1
   17f5c:	strd	r4, [sp, #184]	; 0xb8
   17f60:	mov	ip, r4
   17f64:	ldr	r4, [sp, #112]	; 0x70
   17f68:	add	r6, r6, #1
   17f6c:	mov	lr, r5
   17f70:	cmp	r6, r4
   17f74:	bne	17e94 <__assert_fail@plt+0x6268>
   17f78:	mov	r4, r8
   17f7c:	mov	r5, r9
   17f80:	ldrd	r8, [sp, #56]	; 0x38
   17f84:	strd	sl, [sp, #136]	; 0x88
   17f88:	ldrd	sl, [sp, #64]	; 0x40
   17f8c:	ldr	r6, [sp, #112]	; 0x70
   17f90:	str	ip, [sp, #200]	; 0xc8
   17f94:	strd	sl, [sp, #56]	; 0x38
   17f98:	ldr	fp, [sp, #88]	; 0x58
   17f9c:	str	lr, [sp, #204]	; 0xcc
   17fa0:	str	fp, [sp, #112]	; 0x70
   17fa4:	ldrd	sl, [sp, #136]	; 0x88
   17fa8:	strd	sl, [sp, #64]	; 0x40
   17fac:	and	sl, r6, #31
   17fb0:	str	sl, [sp, #116]	; 0x74
   17fb4:	b	17ce8 <__assert_fail@plt+0x60bc>
   17fb8:	ldrd	r6, [sp, #72]	; 0x48
   17fbc:	mov	r1, #0
   17fc0:	cmp	r7, fp
   17fc4:	cmpeq	r6, sl
   17fc8:	movls	r0, #0
   17fcc:	movhi	r0, #1
   17fd0:	subs	r2, r2, r4
   17fd4:	sbc	r3, r3, r5
   17fd8:	subs	r2, r2, r0
   17fdc:	sbc	r3, r3, r1
   17fe0:	subs	sl, sl, r6
   17fe4:	sbc	fp, fp, r7
   17fe8:	b	17b80 <__assert_fail@plt+0x5f54>
   17fec:	ldrd	sl, [sp, #96]	; 0x60
   17ff0:	add	r0, sp, #208	; 0xd0
   17ff4:	ldrd	r2, [sp, #104]	; 0x68
   17ff8:	strd	r4, [sp, #8]
   17ffc:	strd	sl, [sp]
   18000:	strd	r8, [sp, #16]
   18004:	bl	120ec <__assert_fail@plt+0x4c0>
   18008:	ldrd	r2, [sp, #208]	; 0xd0
   1800c:	orrs	fp, r2, r3
   18010:	bne	1807c <__assert_fail@plt+0x6450>
   18014:	cmp	r1, #0
   18018:	cmpeq	r0, #1
   1801c:	bne	1807c <__assert_fail@plt+0x6450>
   18020:	ldr	r2, [sp, #184]	; 0xb8
   18024:	ldr	r3, [sp, #188]	; 0xbc
   18028:	ldrd	sl, [sp, #64]	; 0x40
   1802c:	mov	ip, r2
   18030:	str	r2, [sp, #200]	; 0xc8
   18034:	mov	lr, r3
   18038:	str	r3, [sp, #204]	; 0xcc
   1803c:	strd	sl, [sp, #136]	; 0x88
   18040:	b	17e5c <__assert_fail@plt+0x6230>
   18044:	ldrd	r2, [sp, #88]	; 0x58
   18048:	ldrd	sl, [sp, #88]	; 0x58
   1804c:	adds	r2, r2, r8
   18050:	adc	r3, r3, r9
   18054:	adds	r0, r0, r4
   18058:	adc	r1, r1, r5
   1805c:	cmp	r3, fp
   18060:	cmpeq	r2, sl
   18064:	strd	r2, [sp, #88]	; 0x58
   18068:	movcs	r3, #0
   1806c:	movcc	r3, #1
   18070:	adds	r0, r0, r3
   18074:	adc	r1, r1, #0
   18078:	b	17e0c <__assert_fail@plt+0x61e0>
   1807c:	str	r6, [sp, #88]	; 0x58
   18080:	mov	r7, r5
   18084:	ldrd	sl, [sp, #136]	; 0x88
   18088:	mov	r6, r4
   1808c:	b	180bc <__assert_fail@plt+0x6490>
   18090:	strd	r0, [sp]
   18094:	add	r0, sp, #208	; 0xd0
   18098:	strd	r6, [sp, #8]
   1809c:	strd	r8, [sp, #16]
   180a0:	bl	120ec <__assert_fail@plt+0x4c0>
   180a4:	ldrd	r2, [sp, #208]	; 0xd0
   180a8:	orrs	ip, r2, r3
   180ac:	bne	18200 <__assert_fail@plt+0x65d4>
   180b0:	cmp	r1, #0
   180b4:	cmpeq	r0, #1
   180b8:	bne	18354 <__assert_fail@plt+0x6728>
   180bc:	ldrd	r4, [sp, #200]	; 0xc8
   180c0:	strd	sl, [sp]
   180c4:	strd	sl, [sp, #16]
   180c8:	ldrd	sl, [sp, #72]	; 0x48
   180cc:	mov	r3, r5
   180d0:	mov	r2, r4
   180d4:	strd	r4, [sp, #8]
   180d8:	ldr	r0, [sp, #124]	; 0x7c
   180dc:	strd	sl, [sp, #40]	; 0x28
   180e0:	strd	r6, [sp, #24]
   180e4:	strd	r8, [sp, #32]
   180e8:	bl	124c4 <__assert_fail@plt+0x898>
   180ec:	ldrd	sl, [sp, #80]	; 0x50
   180f0:	ldrd	r4, [sp, #216]	; 0xd8
   180f4:	adds	sl, sl, r0
   180f8:	adc	fp, fp, r1
   180fc:	cmp	r1, fp
   18100:	cmpeq	r0, sl
   18104:	movls	r3, #0
   18108:	movhi	r3, #1
   1810c:	adds	r4, r4, r3
   18110:	adc	r5, r5, #0
   18114:	cmp	r5, r7
   18118:	cmpeq	r4, r6
   1811c:	bhi	1814c <__assert_fail@plt+0x6520>
   18120:	cmp	r7, r5
   18124:	cmpeq	r6, r4
   18128:	movne	r3, #0
   1812c:	moveq	r3, #1
   18130:	cmp	r9, fp
   18134:	cmpeq	r8, sl
   18138:	movhi	r3, #0
   1813c:	andls	r3, r3, #1
   18140:	cmp	r3, #0
   18144:	strdeq	r4, [sp, #200]	; 0xc8
   18148:	beq	1818c <__assert_fail@plt+0x6560>
   1814c:	cmp	r9, fp
   18150:	cmpeq	r8, sl
   18154:	mov	r2, r4
   18158:	mov	r3, r5
   1815c:	mov	r1, #0
   18160:	movls	r0, #0
   18164:	movhi	r0, #1
   18168:	subs	r2, r2, r6
   1816c:	sbc	r3, r3, r7
   18170:	subs	r2, r2, r0
   18174:	sbc	r3, r3, r1
   18178:	subs	sl, sl, r8
   1817c:	sbc	fp, fp, r9
   18180:	strd	r2, [sp, #200]	; 0xc8
   18184:	mov	r4, r2
   18188:	mov	r5, r3
   1818c:	ldrd	r2, [sp, #192]	; 0xc0
   18190:	ldrd	r0, [sp, #56]	; 0x38
   18194:	subs	r2, r2, r4
   18198:	sbc	r3, r3, r5
   1819c:	ldrd	r4, [sp, #56]	; 0x38
   181a0:	subs	r0, r0, sl
   181a4:	sbc	r1, r1, fp
   181a8:	cmp	r5, fp
   181ac:	cmpeq	r4, sl
   181b0:	movcs	ip, #0
   181b4:	movcc	ip, #1
   181b8:	subs	r2, r2, ip
   181bc:	sbc	r3, r3, #0
   181c0:	cmp	r2, #0
   181c4:	sbcs	r5, r3, #0
   181c8:	bge	18090 <__assert_fail@plt+0x6464>
   181cc:	adds	r4, r0, r8
   181d0:	adc	r5, r1, r9
   181d4:	adds	r2, r2, r6
   181d8:	adc	r3, r3, r7
   181dc:	cmp	r5, r1
   181e0:	cmpeq	r4, r0
   181e4:	mov	r0, r4
   181e8:	mov	r1, r5
   181ec:	movcs	ip, #0
   181f0:	movcc	ip, #1
   181f4:	adds	r2, r2, ip
   181f8:	adc	r3, r3, #0
   181fc:	b	18090 <__assert_fail@plt+0x6464>
   18200:	ldr	lr, [pc, #1272]	; 18700 <__assert_fail@plt+0x6ad4>
   18204:	mov	r6, r2
   18208:	mov	r7, r3
   1820c:	mov	r2, r0
   18210:	mov	r3, r1
   18214:	add	lr, pc, lr
   18218:	lsrs	r3, r3, #1
   1821c:	rrx	r2, r2
   18220:	and	r2, r2, #127	; 0x7f
   18224:	strd	r0, [sp, #56]	; 0x38
   18228:	add	ip, r2, lr
   1822c:	mov	r0, r6
   18230:	mov	r1, r7
   18234:	ldrd	r2, [sp, #56]	; 0x38
   18238:	strd	r8, [sp, #72]	; 0x48
   1823c:	ldrb	r4, [ip, #752]	; 0x2f0
   18240:	bl	17988 <__assert_fail@plt+0x5d5c>
   18244:	cmp	r0, #0
   18248:	bne	18698 <__assert_fail@plt+0x6a6c>
   1824c:	ldr	r6, [sp, #144]	; 0x90
   18250:	ldr	r5, [sp, #272]	; 0x110
   18254:	ldrd	r0, [sp, #208]	; 0xd0
   18258:	add	ip, r5, #1
   1825c:	str	r6, [sp, #4]
   18260:	ldrd	r2, [sp, #56]	; 0x38
   18264:	str	ip, [sp]
   18268:	bl	179ec <__assert_fail@plt+0x5dc0>
   1826c:	umull	r2, r3, r4, r4
   18270:	ldr	r6, [sp, #60]	; 0x3c
   18274:	ldr	r7, [sp, #56]	; 0x38
   18278:	adds	r4, r4, r4
   1827c:	mov	r5, #0
   18280:	adc	r5, r5, r5
   18284:	ldr	r8, [sp, #72]	; 0x48
   18288:	ldr	r9, [sp, #76]	; 0x4c
   1828c:	mul	r1, r2, r6
   18290:	mla	r1, r7, r3, r1
   18294:	umull	r2, r3, r2, r7
   18298:	add	r3, r1, r3
   1829c:	subs	r4, r4, r2
   182a0:	sbc	r5, r5, r3
   182a4:	adds	r2, r4, r4
   182a8:	adc	r3, r5, r5
   182ac:	mul	r1, r4, r5
   182b0:	umull	r4, r5, r4, r4
   182b4:	add	r5, r5, r1, lsl #1
   182b8:	mul	r1, r4, r6
   182bc:	mla	r1, r7, r5, r1
   182c0:	umull	r4, r5, r4, r7
   182c4:	add	r5, r1, r5
   182c8:	subs	r2, r2, r4
   182cc:	sbc	r3, r3, r5
   182d0:	adds	r0, r2, r2
   182d4:	adc	r1, r3, r3
   182d8:	mul	ip, r2, r3
   182dc:	umull	r2, r3, r2, r2
   182e0:	add	r3, r3, ip, lsl #1
   182e4:	mul	ip, r2, r6
   182e8:	mla	ip, r7, r3, ip
   182ec:	umull	r2, r3, r2, r7
   182f0:	add	r3, ip, r3
   182f4:	subs	r0, r0, r2
   182f8:	sbc	r1, r1, r3
   182fc:	umull	sl, fp, r8, r0
   18300:	mul	r3, r8, r1
   18304:	mla	r3, r0, r9, r3
   18308:	strd	sl, [sp, #72]	; 0x48
   1830c:	add	r3, r3, fp
   18310:	str	r3, [sp, #76]	; 0x4c
   18314:	ldrd	r0, [sp, #72]	; 0x48
   18318:	bl	16cc0 <__assert_fail@plt+0x5094>
   1831c:	cmp	r0, #0
   18320:	beq	18684 <__assert_fail@plt+0x6a58>
   18324:	mov	r1, #1
   18328:	ldr	r0, [sp, #144]	; 0x90
   1832c:	ldrd	r2, [sp, #72]	; 0x48
   18330:	str	r1, [sp]
   18334:	bl	12364 <__assert_fail@plt+0x738>
   18338:	ldr	ip, [sp, #176]	; 0xb0
   1833c:	ldr	r2, [sp, #228]	; 0xe4
   18340:	ldr	r3, [ip]
   18344:	cmp	r2, r3
   18348:	bne	186ec <__assert_fail@plt+0x6ac0>
   1834c:	add	sp, sp, #236	; 0xec
   18350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18354:	mov	r4, r0
   18358:	mov	r5, r1
   1835c:	ldr	ip, [sp, #180]	; 0xb4
   18360:	mov	r0, #127	; 0x7f
   18364:	strd	r2, [sp, #136]	; 0x88
   18368:	lsrs	r3, r5, #1
   1836c:	rrx	r2, r4
   18370:	and	r2, r2, r0
   18374:	mov	r1, #0
   18378:	add	r2, ip, r2
   1837c:	ldrb	r2, [r2, #752]	; 0x2f0
   18380:	mov	r0, r2
   18384:	strd	r0, [sp, #72]	; 0x48
   18388:	umull	r0, r1, r2, r2
   1838c:	ldrd	r2, [sp, #72]	; 0x48
   18390:	adds	r2, r2, r2
   18394:	adc	r3, r3, r3
   18398:	strd	r2, [sp, #72]	; 0x48
   1839c:	strd	r0, [sp, #128]	; 0x80
   183a0:	ldr	r1, [sp, #128]	; 0x80
   183a4:	ldr	r2, [sp, #132]	; 0x84
   183a8:	mul	ip, r1, r5
   183ac:	mla	ip, r4, r2, ip
   183b0:	umull	r2, r3, r1, r4
   183b4:	ldrd	r0, [sp, #72]	; 0x48
   183b8:	add	r3, ip, r3
   183bc:	subs	r0, r0, r2
   183c0:	sbc	r1, r1, r3
   183c4:	strd	r0, [sp, #72]	; 0x48
   183c8:	ldr	r3, [sp, #72]	; 0x48
   183cc:	mul	ip, r0, r1
   183d0:	umull	r2, r3, r3, r3
   183d4:	strd	r2, [sp, #128]	; 0x80
   183d8:	adds	r2, r0, r0
   183dc:	adc	r3, r1, r1
   183e0:	strd	r2, [sp, #72]	; 0x48
   183e4:	ldr	r3, [sp, #132]	; 0x84
   183e8:	ldr	lr, [sp, #128]	; 0x80
   183ec:	add	ip, r3, ip, lsl #1
   183f0:	str	ip, [sp, #132]	; 0x84
   183f4:	ldr	r0, [sp, #132]	; 0x84
   183f8:	mul	ip, lr, r5
   183fc:	umull	r2, r3, lr, r4
   18400:	mla	ip, r4, r0, ip
   18404:	ldrd	r0, [sp, #72]	; 0x48
   18408:	add	r3, ip, r3
   1840c:	subs	r0, r0, r2
   18410:	sbc	r1, r1, r3
   18414:	strd	r0, [sp, #72]	; 0x48
   18418:	ldr	r3, [sp, #72]	; 0x48
   1841c:	mul	ip, r0, r1
   18420:	umull	r2, r3, r3, r3
   18424:	strd	r2, [sp, #128]	; 0x80
   18428:	adds	r2, r0, r0
   1842c:	adc	r3, r1, r1
   18430:	strd	r2, [sp, #72]	; 0x48
   18434:	ldr	r3, [sp, #132]	; 0x84
   18438:	ldr	lr, [sp, #128]	; 0x80
   1843c:	add	ip, r3, ip, lsl #1
   18440:	str	ip, [sp, #132]	; 0x84
   18444:	ldr	r0, [sp, #132]	; 0x84
   18448:	mul	ip, lr, r5
   1844c:	mla	ip, r4, r0, ip
   18450:	ldrd	r0, [sp, #72]	; 0x48
   18454:	umull	r2, r3, lr, r4
   18458:	add	r3, ip, r3
   1845c:	subs	r0, r0, r2
   18460:	sbc	r1, r1, r3
   18464:	strd	r0, [sp, #72]	; 0x48
   18468:	cmp	r7, r5
   1846c:	cmpeq	r6, r4
   18470:	mul	r3, r8, r1
   18474:	ldr	r1, [sp, #72]	; 0x48
   18478:	mla	r3, r0, r9, r3
   1847c:	umull	r8, r9, r8, r1
   18480:	add	ip, r3, r9
   18484:	mov	r9, ip
   18488:	bcs	1854c <__assert_fail@plt+0x6920>
   1848c:	ldrd	r6, [sp, #136]	; 0x88
   18490:	mov	r0, r4
   18494:	mov	r1, r5
   18498:	bl	16cc0 <__assert_fail@plt+0x5094>
   1849c:	cmp	r0, #0
   184a0:	bne	18650 <__assert_fail@plt+0x6a24>
   184a4:	ldr	ip, [sp, #272]	; 0x110
   184a8:	mov	r0, r4
   184ac:	mov	r1, r5
   184b0:	ldr	r3, [sp, #144]	; 0x90
   184b4:	add	r2, ip, #1
   184b8:	bl	14d64 <__assert_fail@plt+0x3138>
   184bc:	orrs	ip, r6, r7
   184c0:	beq	18670 <__assert_fail@plt+0x6a44>
   184c4:	mov	r0, r6
   184c8:	mov	r1, r7
   184cc:	mov	r2, r8
   184d0:	mov	r3, r9
   184d4:	bl	17988 <__assert_fail@plt+0x5d5c>
   184d8:	cmp	r0, #0
   184dc:	bne	186d4 <__assert_fail@plt+0x6aa8>
   184e0:	ldrd	r4, [sp, #64]	; 0x40
   184e4:	add	r0, sp, #184	; 0xb8
   184e8:	ldrd	r2, [sp, #184]	; 0xb8
   184ec:	strd	r6, [sp, #8]
   184f0:	strd	r4, [sp]
   184f4:	strd	r8, [sp, #16]
   184f8:	bl	13b68 <__assert_fail@plt+0x1f3c>
   184fc:	ldrd	r4, [sp, #56]	; 0x38
   18500:	ldrd	r2, [sp, #192]	; 0xc0
   18504:	strd	r6, [sp, #8]
   18508:	strd	r4, [sp]
   1850c:	strd	r8, [sp, #16]
   18510:	strd	r0, [sp, #64]	; 0x40
   18514:	add	r0, sp, #192	; 0xc0
   18518:	bl	13b68 <__assert_fail@plt+0x1f3c>
   1851c:	strd	sl, [sp]
   18520:	ldrd	r2, [sp, #200]	; 0xc8
   18524:	strd	r6, [sp, #8]
   18528:	strd	r8, [sp, #16]
   1852c:	strd	r0, [sp, #56]	; 0x38
   18530:	add	r0, sp, #200	; 0xc8
   18534:	bl	13b68 <__assert_fail@plt+0x1f3c>
   18538:	ldr	ip, [sp, #184]	; 0xb8
   1853c:	ldr	lr, [sp, #188]	; 0xbc
   18540:	mov	sl, r0
   18544:	mov	fp, r1
   18548:	b	17c20 <__assert_fail@plt+0x5ff4>
   1854c:	mvn	r2, #0
   18550:	mov	r3, #0
   18554:	and	r2, r2, r8
   18558:	and	r3, r3, r9
   1855c:	strd	r2, [sp, #48]	; 0x30
   18560:	mvn	r2, #0
   18564:	ldr	r1, [sp, #48]	; 0x30
   18568:	and	r2, r2, r4
   1856c:	mov	r3, #0
   18570:	and	r3, r3, r5
   18574:	umull	r0, r1, r1, r5
   18578:	strd	r0, [sp, #152]	; 0x98
   1857c:	umull	r0, r1, ip, r2
   18580:	strd	r0, [sp, #128]	; 0x80
   18584:	ldr	r1, [sp, #48]	; 0x30
   18588:	ldr	r0, [sp, #52]	; 0x34
   1858c:	mul	lr, r1, r3
   18590:	mla	lr, r2, r0, lr
   18594:	umull	r0, r1, r1, r2
   18598:	mov	r2, #0
   1859c:	str	r2, [sp, #164]	; 0xa4
   185a0:	strd	r0, [sp, #136]	; 0x88
   185a4:	ldr	r1, [sp, #156]	; 0x9c
   185a8:	ldr	r0, [sp, #52]	; 0x34
   185ac:	mla	r0, r5, r0, r1
   185b0:	ldr	r1, [sp, #132]	; 0x84
   185b4:	mla	r1, ip, r3, r1
   185b8:	str	r0, [sp, #156]	; 0x9c
   185bc:	ldr	r0, [sp, #140]	; 0x8c
   185c0:	add	lr, lr, r0
   185c4:	str	lr, [sp, #160]	; 0xa0
   185c8:	str	r1, [sp, #132]	; 0x84
   185cc:	umull	r0, r1, ip, r5
   185d0:	ldrd	r2, [sp, #128]	; 0x80
   185d4:	strd	r0, [sp, #136]	; 0x88
   185d8:	ldrd	r0, [sp, #152]	; 0x98
   185dc:	adds	r2, r2, r0
   185e0:	adc	r3, r3, r1
   185e4:	ldrd	r0, [sp, #160]	; 0xa0
   185e8:	adds	r2, r2, r0
   185ec:	adc	r3, r3, r1
   185f0:	ldrd	r0, [sp, #128]	; 0x80
   185f4:	cmp	r1, r3
   185f8:	cmpeq	r0, r2
   185fc:	bls	18610 <__assert_fail@plt+0x69e4>
   18600:	ldrd	r0, [sp, #136]	; 0x88
   18604:	adds	r0, r0, #0
   18608:	adc	r1, r1, #1
   1860c:	strd	r0, [sp, #136]	; 0x88
   18610:	str	r3, [sp, #168]	; 0xa8
   18614:	mov	r1, #0
   18618:	str	r1, [sp, #172]	; 0xac
   1861c:	ldrd	r0, [sp, #168]	; 0xa8
   18620:	ldrd	r2, [sp, #136]	; 0x88
   18624:	subs	r0, r6, r0
   18628:	sbc	r1, r7, r1
   1862c:	ldr	r6, [sp, #76]	; 0x4c
   18630:	subs	r0, r0, r2
   18634:	sbc	r1, r1, r3
   18638:	ldr	r7, [sp, #72]	; 0x48
   1863c:	mul	r3, r0, r6
   18640:	mla	r3, r7, r1, r3
   18644:	umull	r6, r7, r0, r7
   18648:	add	r7, r3, r7
   1864c:	b	18490 <__assert_fail@plt+0x6864>
   18650:	mov	r1, #1
   18654:	mov	r2, r4
   18658:	mov	r3, r5
   1865c:	str	r1, [sp]
   18660:	ldr	r0, [sp, #144]	; 0x90
   18664:	bl	12364 <__assert_fail@plt+0x738>
   18668:	orrs	ip, r6, r7
   1866c:	bne	184c4 <__assert_fail@plt+0x6898>
   18670:	strd	r8, [sp, #72]	; 0x48
   18674:	ldrd	r0, [sp, #72]	; 0x48
   18678:	bl	16cc0 <__assert_fail@plt+0x5094>
   1867c:	cmp	r0, #0
   18680:	bne	18324 <__assert_fail@plt+0x66f8>
   18684:	ldrd	r0, [sp, #72]	; 0x48
   18688:	ldr	r2, [sp, #272]	; 0x110
   1868c:	ldr	r3, [sp, #144]	; 0x90
   18690:	bl	14d64 <__assert_fail@plt+0x3138>
   18694:	b	18338 <__assert_fail@plt+0x670c>
   18698:	ldrd	r8, [sp, #56]	; 0x38
   1869c:	ldrd	r2, [sp, #208]	; 0xd0
   186a0:	ldr	r0, [sp, #144]	; 0x90
   186a4:	strd	r8, [sp]
   186a8:	bl	135f4 <__assert_fail@plt+0x19c8>
   186ac:	b	1826c <__assert_fail@plt+0x6640>
   186b0:	mov	r8, #1
   186b4:	mov	r9, #0
   186b8:	mov	sl, #128	; 0x80
   186bc:	strd	r8, [sp, #96]	; 0x60
   186c0:	mov	fp, #0
   186c4:	mov	r8, #0
   186c8:	mov	r9, #0
   186cc:	strd	r8, [sp, #104]	; 0x68
   186d0:	b	17a50 <__assert_fail@plt+0x5e24>
   186d4:	strd	r8, [sp]
   186d8:	mov	r2, r6
   186dc:	ldr	r0, [sp, #144]	; 0x90
   186e0:	mov	r3, r7
   186e4:	bl	135f4 <__assert_fail@plt+0x19c8>
   186e8:	b	18338 <__assert_fail@plt+0x670c>
   186ec:	bl	118e4 <__stack_chk_fail@plt>
   186f0:	strdeq	pc, [r1], -r0
   186f4:	andeq	r0, r0, ip, lsl #3
   186f8:	strheq	fp, [r0], -r0
   186fc:	andeq	fp, r0, r4, lsr #1
   18700:	andeq	sl, r0, ip, ror #20
   18704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18708:	sub	sp, sp, #1072	; 0x430
   1870c:	sub	sp, sp, #4
   18710:	ldr	r6, [pc, #3852]	; 19624 <__assert_fail@plt+0x79f8>
   18714:	mvn	r4, #0
   18718:	ldr	ip, [pc, #3848]	; 19628 <__assert_fail@plt+0x79fc>
   1871c:	mvn	r5, #-1073741824	; 0xc0000000
   18720:	cmp	r1, r5
   18724:	cmpeq	r0, r4
   18728:	ldr	r4, [sp, #1112]	; 0x458
   1872c:	add	r6, pc, r6
   18730:	strd	r0, [sp, #120]	; 0x78
   18734:	strd	r2, [sp, #96]	; 0x60
   18738:	str	r4, [sp, #212]	; 0xd4
   1873c:	ldr	ip, [r6, ip]
   18740:	str	ip, [sp, #184]	; 0xb8
   18744:	ldr	ip, [ip]
   18748:	str	ip, [sp, #1068]	; 0x42c
   1874c:	bhi	18f08 <__assert_fail@plt+0x72dc>
   18750:	bl	13664 <__assert_fail@plt+0x1a38>
   18754:	ldrd	r8, [sp, #96]	; 0x60
   18758:	mul	r3, r0, r1
   1875c:	mov	r4, r0
   18760:	mov	r5, r1
   18764:	umull	r0, r1, r0, r0
   18768:	add	r1, r1, r3, lsl #1
   1876c:	cmp	r1, r9
   18770:	cmpeq	r0, r8
   18774:	beq	18f58 <__assert_fail@plt+0x732c>
   18778:	ldrd	r4, [sp, #96]	; 0x60
   1877c:	mov	r2, #3
   18780:	mov	r3, #0
   18784:	ldr	ip, [pc, #3744]	; 1962c <__assert_fail@plt+0x7a00>
   18788:	and	r2, r2, r4
   1878c:	and	r3, r3, r5
   18790:	cmp	r3, #0
   18794:	cmpeq	r2, #1
   18798:	add	ip, pc, ip
   1879c:	sub	ip, ip, #3968	; 0xf80
   187a0:	ldrne	ip, [pc, #3720]	; 19630 <__assert_fail@plt+0x7a04>
   187a4:	addne	ip, pc, ip
   187a8:	subne	ip, ip, #4000	; 0xfa0
   187ac:	subne	ip, ip, #4
   187b0:	ldr	r5, [ip]
   187b4:	cmp	r5, #0
   187b8:	str	r5, [sp, #84]	; 0x54
   187bc:	beq	18f08 <__assert_fail@plt+0x72dc>
   187c0:	ldr	r6, [sp, #96]	; 0x60
   187c4:	mov	r0, #3
   187c8:	ldr	r8, [sp, #100]	; 0x64
   187cc:	mov	r1, #0
   187d0:	umull	r2, r3, r5, r6
   187d4:	and	r2, r2, r0
   187d8:	mla	r3, r5, r8, r3
   187dc:	and	r3, r3, r1
   187e0:	cmp	r3, r1
   187e4:	cmpeq	r2, r0
   187e8:	bne	18e8c <__assert_fail@plt+0x7260>
   187ec:	ldrd	r4, [sp, #96]	; 0x60
   187f0:	mvn	r2, #0
   187f4:	ldr	r9, [sp, #96]	; 0x60
   187f8:	mov	r3, #0
   187fc:	and	r4, r4, r2
   18800:	and	r5, r5, r3
   18804:	strd	r4, [sp, #240]	; 0xf0
   18808:	movw	r8, #531	; 0x213
   1880c:	ldr	r5, [sp, #100]	; 0x64
   18810:	lsr	r9, r9, #6
   18814:	movt	r8, #515	; 0x203
   18818:	str	r8, [sp, #180]	; 0xb4
   1881c:	ldr	r8, [sp, #100]	; 0x64
   18820:	movw	r4, #530	; 0x212
   18824:	orr	r5, r9, r5, lsl #26
   18828:	ldr	r9, [sp, #100]	; 0x64
   1882c:	str	r5, [sp, #168]	; 0xa8
   18830:	movt	r4, #514	; 0x202
   18834:	movw	r5, #659	; 0x293
   18838:	movw	r6, #17939	; 0x4613
   1883c:	lsr	r9, r9, #6
   18840:	movt	r5, #4677	; 0x1245
   18844:	movt	r6, #26113	; 0x6601
   18848:	str	r9, [sp, #172]	; 0xac
   1884c:	str	r4, [sp, #176]	; 0xb0
   18850:	str	r5, [sp, #208]	; 0xd0
   18854:	str	r6, [sp, #236]	; 0xec
   18858:	str	ip, [sp, #232]	; 0xe8
   1885c:	str	r8, [sp, #248]	; 0xf8
   18860:	ldrd	r4, [sp, #120]	; 0x78
   18864:	orrs	r5, r4, r5
   18868:	bne	18e20 <__assert_fail@plt+0x71f4>
   1886c:	ldr	r6, [sp, #84]	; 0x54
   18870:	ldrd	r8, [sp, #168]	; 0xa8
   18874:	umull	r0, r1, r6, r6
   18878:	umull	r2, r3, r0, r6
   1887c:	mla	r3, r6, r1, r3
   18880:	cmp	r3, r9
   18884:	cmpeq	r2, r8
   18888:	bcs	18e44 <__assert_fail@plt+0x7218>
   1888c:	ldr	r6, [sp, #84]	; 0x54
   18890:	mov	lr, #0
   18894:	ldr	r8, [sp, #240]	; 0xf0
   18898:	ldr	ip, [sp, #244]	; 0xf4
   1889c:	ldr	r9, [sp, #248]	; 0xf8
   188a0:	umull	r4, r5, r6, r8
   188a4:	str	lr, [sp, #220]	; 0xdc
   188a8:	umull	r2, r3, r6, r9
   188ac:	ldr	r8, [sp, #84]	; 0x54
   188b0:	ldr	r9, [sp, #120]	; 0x78
   188b4:	mla	r1, r6, ip, r5
   188b8:	mov	ip, #0
   188bc:	str	ip, [sp, #192]	; 0xc0
   188c0:	mov	r6, #0
   188c4:	str	ip, [sp, #228]	; 0xe4
   188c8:	str	r1, [sp, #216]	; 0xd8
   188cc:	ldrd	r0, [sp, #216]	; 0xd8
   188d0:	adds	r0, r0, r2
   188d4:	str	r0, [sp, #196]	; 0xc4
   188d8:	adc	r1, r1, r3
   188dc:	str	r1, [sp, #224]	; 0xe0
   188e0:	cmp	r3, r1
   188e4:	cmpeq	r2, r0
   188e8:	mov	r1, #0
   188ec:	umull	r2, r3, r8, r9
   188f0:	ldrd	r8, [sp, #192]	; 0xc0
   188f4:	movhi	r7, #1
   188f8:	movls	r7, #0
   188fc:	adds	r8, r8, r4
   18900:	mov	r0, #3
   18904:	adc	r9, r9, #0
   18908:	strd	r8, [sp, #160]	; 0xa0
   1890c:	ldrd	r4, [sp, #160]	; 0xa0
   18910:	ldr	r8, [sp, #84]	; 0x54
   18914:	and	r1, r1, r5
   18918:	ldr	r5, [sp, #124]	; 0x7c
   1891c:	and	r0, r0, r4
   18920:	mla	r3, r8, r5, r3
   18924:	ldrd	r4, [sp, #224]	; 0xe0
   18928:	adds	r2, r2, r4
   1892c:	adc	r3, r3, r5
   18930:	adds	r8, r2, r6
   18934:	adc	r9, r3, r7
   18938:	cmp	r1, #0
   1893c:	cmpeq	r0, #1
   18940:	strd	r8, [sp, #200]	; 0xc8
   18944:	beq	1955c <__assert_fail@plt+0x7930>
   18948:	ldrd	r4, [sp, #200]	; 0xc8
   1894c:	mvn	r2, #0
   18950:	mvn	r3, #-1073741824	; 0xc0000000
   18954:	cmp	r5, r3
   18958:	cmpeq	r4, r2
   1895c:	bhi	19534 <__assert_fail@plt+0x7908>
   18960:	ldrd	r2, [sp, #160]	; 0xa0
   18964:	ldrd	r0, [sp, #200]	; 0xc8
   18968:	bl	13664 <__assert_fail@plt+0x1a38>
   1896c:	ldrd	r4, [sp, #160]	; 0xa0
   18970:	strd	r0, [sp, #56]	; 0x38
   18974:	mov	r9, r1
   18978:	mov	r8, r0
   1897c:	adds	r0, r0, r0
   18980:	mul	r3, r8, r9
   18984:	ldr	r9, [sp, #56]	; 0x38
   18988:	adc	r1, r1, r1
   1898c:	umull	sl, fp, r9, r9
   18990:	add	fp, fp, r3, lsl #1
   18994:	subs	sl, r4, sl
   18998:	sbc	fp, r5, fp
   1899c:	orrs	r5, r0, r1
   189a0:	beq	18eb4 <__assert_fail@plt+0x7288>
   189a4:	bl	13510 <__assert_fail@plt+0x18e4>
   189a8:	ldr	r6, [sp, #84]	; 0x54
   189ac:	lsl	r3, r6, #1
   189b0:	strd	r0, [sp, #152]	; 0x98
   189b4:	mov	r9, r1
   189b8:	ldr	r5, [sp, #152]	; 0x98
   189bc:	adds	r0, r0, r0
   189c0:	adc	r1, r1, r1
   189c4:	strd	r0, [sp, #144]	; 0x90
   189c8:	umull	r4, r5, r5, r3
   189cc:	mla	r3, r3, r9, r5
   189d0:	strd	r4, [sp, #128]	; 0x80
   189d4:	str	r3, [sp, #132]	; 0x84
   189d8:	ldrd	r4, [sp, #56]	; 0x38
   189dc:	mov	r8, #0
   189e0:	ldr	r6, [pc, #3148]	; 19634 <__assert_fail@plt+0x7a08>
   189e4:	mov	r9, r8
   189e8:	strd	r4, [sp, #24]
   189ec:	mov	r5, #0
   189f0:	mov	r4, #1
   189f4:	strd	r4, [sp, #112]	; 0x70
   189f8:	ldr	r5, [pc, #3128]	; 19638 <__assert_fail@plt+0x7a0c>
   189fc:	add	r6, pc, r6
   18a00:	str	r6, [sp, #252]	; 0xfc
   18a04:	add	r5, pc, r5
   18a08:	str	r5, [sp, #188]	; 0xbc
   18a0c:	ldrd	r4, [sp, #56]	; 0x38
   18a10:	ldrd	r6, [sp, #24]
   18a14:	adds	r6, r6, r4
   18a18:	adc	r7, r7, r5
   18a1c:	lsr	r5, r6, #6
   18a20:	orr	ip, r5, r7, lsl #26
   18a24:	lsr	r0, r7, #6
   18a28:	str	ip, [sp, #16]
   18a2c:	str	r0, [sp, #20]
   18a30:	ldrd	r4, [sp, #16]
   18a34:	cmp	r5, fp
   18a38:	cmpeq	r4, sl
   18a3c:	bcs	18ec4 <__assert_fail@plt+0x7298>
   18a40:	mov	r4, #0
   18a44:	mov	r5, #-16777216	; 0xff000000
   18a48:	and	r2, sl, r4
   18a4c:	and	r3, fp, r5
   18a50:	orrs	ip, r2, r3
   18a54:	mov	r2, sl
   18a58:	mov	r3, fp
   18a5c:	mov	ip, #0
   18a60:	bne	18a94 <__assert_fail@plt+0x6e68>
   18a64:	strd	r6, [sp, #72]	; 0x48
   18a68:	lsl	r1, r3, #8
   18a6c:	lsl	r0, r2, #8
   18a70:	orr	r1, r1, r2, lsr #24
   18a74:	add	ip, ip, #8
   18a78:	mov	r2, r0
   18a7c:	and	r0, r0, r4
   18a80:	mov	r3, r1
   18a84:	and	r1, r1, r5
   18a88:	orrs	r6, r0, r1
   18a8c:	beq	18a68 <__assert_fail@plt+0x6e3c>
   18a90:	ldrd	r6, [sp, #72]	; 0x48
   18a94:	cmp	r2, #0
   18a98:	sbcs	r0, r3, #0
   18a9c:	blt	18ab8 <__assert_fail@plt+0x6e8c>
   18aa0:	adds	r2, r2, r2
   18aa4:	add	ip, ip, #1
   18aa8:	adc	r3, r3, r3
   18aac:	cmp	r2, #0
   18ab0:	sbcs	r1, r3, #0
   18ab4:	bge	18aa0 <__assert_fail@plt+0x6e74>
   18ab8:	cmp	ip, #56	; 0x38
   18abc:	bhi	19584 <__assert_fail@plt+0x7958>
   18ac0:	rsb	r2, ip, #56	; 0x38
   18ac4:	ldr	r4, [sp, #188]	; 0xbc
   18ac8:	rsb	r1, r2, #32
   18acc:	lsr	r3, sl, r2
   18ad0:	orr	r3, r3, fp, lsl r1
   18ad4:	sub	r2, r2, #32
   18ad8:	orr	r3, r3, fp, lsr r2
   18adc:	rsb	ip, ip, #61	; 0x3d
   18ae0:	rsb	r0, ip, #32
   18ae4:	lsr	r2, r6, ip
   18ae8:	add	r3, r4, r3, lsl #1
   18aec:	sub	r1, ip, #32
   18af0:	sub	r3, r3, #4160	; 0x1040
   18af4:	orr	r2, r2, r7, lsl r0
   18af8:	orr	r2, r2, r7, lsr r1
   18afc:	lsr	ip, r7, ip
   18b00:	ldrh	r0, [r3, #-6]
   18b04:	umull	r2, r3, r0, r2
   18b08:	mla	r3, ip, r0, r3
   18b0c:	lsr	r5, r2, #11
   18b10:	orr	ip, r5, r3, lsl #21
   18b14:	lsr	r0, r3, #11
   18b18:	str	ip, [sp, #48]	; 0x30
   18b1c:	str	r0, [sp, #52]	; 0x34
   18b20:	ldr	r1, [sp, #48]	; 0x30
   18b24:	mov	r4, r6
   18b28:	ldr	r2, [sp, #52]	; 0x34
   18b2c:	mov	r5, r7
   18b30:	mul	r3, r1, fp
   18b34:	mla	r3, sl, r2, r3
   18b38:	umull	r0, r1, r1, sl
   18b3c:	add	r1, r3, r1
   18b40:	mov	r3, #0
   18b44:	subs	r4, r4, r0
   18b48:	sbc	r5, r5, r1
   18b4c:	strd	r4, [sp, #72]	; 0x48
   18b50:	cmp	r5, fp
   18b54:	cmpeq	r4, sl
   18b58:	ldrd	r4, [sp, #48]	; 0x30
   18b5c:	ldrd	r0, [sp, #72]	; 0x48
   18b60:	movcc	r2, #0
   18b64:	movcs	r2, #1
   18b68:	adds	r4, r4, r2
   18b6c:	adc	r5, r5, r3
   18b70:	rsbs	r2, r2, #0
   18b74:	rsc	r3, r3, #0
   18b78:	and	r2, r2, sl
   18b7c:	and	r3, r3, fp
   18b80:	mul	ip, r4, fp
   18b84:	subs	r0, r0, r2
   18b88:	sbc	r1, r1, r3
   18b8c:	mla	ip, sl, r5, ip
   18b90:	strd	r0, [sp, #88]	; 0x58
   18b94:	umull	r2, r3, r4, sl
   18b98:	adds	r2, r2, r0
   18b9c:	add	r3, ip, r3
   18ba0:	adc	r3, r3, r1
   18ba4:	cmp	r7, r3
   18ba8:	cmpeq	r6, r2
   18bac:	bne	195cc <__assert_fail@plt+0x79a0>
   18bb0:	ldrd	r2, [sp, #56]	; 0x38
   18bb4:	ldrd	r0, [sp, #88]	; 0x58
   18bb8:	subs	r2, r2, r0
   18bbc:	sbc	r3, r3, r1
   18bc0:	strd	r2, [sp, #72]	; 0x48
   18bc4:	ldrd	r2, [sp, #128]	; 0x80
   18bc8:	cmp	fp, r3
   18bcc:	cmpeq	sl, r2
   18bd0:	bhi	18c78 <__assert_fail@plt+0x704c>
   18bd4:	mov	r2, #1
   18bd8:	mov	r3, #0
   18bdc:	and	r2, r2, sl
   18be0:	and	r3, r3, fp
   18be4:	orrs	r6, r2, r3
   18be8:	movne	r6, sl
   18bec:	movne	r7, fp
   18bf0:	bne	18bfc <__assert_fail@plt+0x6fd0>
   18bf4:	lsrs	r7, fp, #1
   18bf8:	rrx	r6, sl
   18bfc:	mov	r0, r6
   18c00:	mov	r1, r7
   18c04:	ldr	r2, [sp, #84]	; 0x54
   18c08:	mov	r3, #0
   18c0c:	bl	12024 <__assert_fail@plt+0x3f8>
   18c10:	mov	r2, r0
   18c14:	mov	r3, r1
   18c18:	mov	r0, r6
   18c1c:	mov	r1, r7
   18c20:	bl	22264 <close_stdout@@Base+0x8020>
   18c24:	mov	r6, r0
   18c28:	mov	r7, r1
   18c2c:	ldrd	r0, [sp, #152]	; 0x98
   18c30:	cmp	r1, r7
   18c34:	cmpeq	r0, r6
   18c38:	bcc	18c78 <__assert_fail@plt+0x704c>
   18c3c:	cmp	r8, #49	; 0x31
   18c40:	bhi	18f30 <__assert_fail@plt+0x7304>
   18c44:	add	r1, sp, #1072	; 0x430
   18c48:	mov	r2, r6
   18c4c:	add	ip, r1, r8, lsl #4
   18c50:	mov	r3, r7
   18c54:	sub	r1, ip, #808	; 0x328
   18c58:	sub	ip, ip, #800	; 0x320
   18c5c:	add	r8, r8, #1
   18c60:	strd	r6, [r1]
   18c64:	ldrd	r0, [sp, #24]
   18c68:	str	ip, [sp, #12]
   18c6c:	bl	22264 <close_stdout@@Base+0x8020>
   18c70:	ldr	ip, [sp, #12]
   18c74:	strd	r2, [ip]
   18c78:	ldrd	r2, [sp, #72]	; 0x48
   18c7c:	ldrd	r6, [sp, #24]
   18c80:	subs	r6, r6, r2
   18c84:	sbc	r7, r7, r3
   18c88:	mul	r3, r6, r5
   18c8c:	mla	r3, r4, r7, r3
   18c90:	umull	r4, r5, r6, r4
   18c94:	ldrd	r6, [sp, #112]	; 0x70
   18c98:	add	r5, r3, r5
   18c9c:	adds	r6, r6, r4
   18ca0:	adc	r7, r7, r5
   18ca4:	tst	r9, #1
   18ca8:	bne	18dec <__assert_fail@plt+0x71c0>
   18cac:	ldr	ip, [sp, #180]	; 0xb4
   18cb0:	and	r3, r6, #63	; 0x3f
   18cb4:	ldr	r0, [sp, #176]	; 0xb0
   18cb8:	rsb	r2, r3, #32
   18cbc:	mov	r4, #1
   18cc0:	mov	r5, #0
   18cc4:	lsr	ip, ip, r3
   18cc8:	orr	r2, ip, r0, lsl r2
   18ccc:	str	r2, [sp, #64]	; 0x40
   18cd0:	ldr	r1, [sp, #64]	; 0x40
   18cd4:	sub	r2, r3, #32
   18cd8:	lsr	r3, r0, r3
   18cdc:	str	r3, [sp, #68]	; 0x44
   18ce0:	orr	r2, r1, r0, lsr r2
   18ce4:	str	r2, [sp, #64]	; 0x40
   18ce8:	ldrd	r2, [sp, #64]	; 0x40
   18cec:	and	r2, r2, r4
   18cf0:	and	r3, r3, r5
   18cf4:	orrs	ip, r2, r3
   18cf8:	beq	18dec <__assert_fail@plt+0x71c0>
   18cfc:	mov	r0, r6
   18d00:	mov	r1, r7
   18d04:	mov	r2, #63	; 0x3f
   18d08:	mov	r3, #0
   18d0c:	bl	22264 <close_stdout@@Base+0x8020>
   18d10:	ldr	r0, [sp, #208]	; 0xd0
   18d14:	movw	r3, #18480	; 0x4830
   18d18:	movt	r3, #1026	; 0x402
   18d1c:	lsr	r0, r0, r2
   18d20:	rsb	r1, r2, #32
   18d24:	orr	r1, r0, r3, lsl r1
   18d28:	str	r1, [sp, #104]	; 0x68
   18d2c:	ldr	ip, [sp, #104]	; 0x68
   18d30:	sub	r1, r2, #32
   18d34:	orr	r1, ip, r3, lsr r1
   18d38:	lsr	r3, r3, r2
   18d3c:	str	r1, [sp, #104]	; 0x68
   18d40:	str	r3, [sp, #108]	; 0x6c
   18d44:	ldrd	r2, [sp, #104]	; 0x68
   18d48:	and	r2, r2, r4
   18d4c:	and	r3, r3, r5
   18d50:	orrs	r0, r2, r3
   18d54:	beq	18dec <__assert_fail@plt+0x71c0>
   18d58:	mov	r0, r6
   18d5c:	mov	r1, r7
   18d60:	mov	r2, #65	; 0x41
   18d64:	mov	r3, #0
   18d68:	bl	22264 <close_stdout@@Base+0x8020>
   18d6c:	ldr	r1, [sp, #236]	; 0xec
   18d70:	mov	r3, #408	; 0x198
   18d74:	movt	r3, #8586	; 0x218a
   18d78:	and	r2, r2, #63	; 0x3f
   18d7c:	lsr	r1, r1, r2
   18d80:	str	r1, [sp, #136]	; 0x88
   18d84:	ldr	ip, [sp, #136]	; 0x88
   18d88:	rsb	r1, r2, #32
   18d8c:	orr	r1, ip, r3, lsl r1
   18d90:	str	r1, [sp, #136]	; 0x88
   18d94:	ldr	r0, [sp, #136]	; 0x88
   18d98:	sub	r1, r2, #32
   18d9c:	orr	r1, r0, r3, lsr r1
   18da0:	lsr	r3, r3, r2
   18da4:	str	r1, [sp, #136]	; 0x88
   18da8:	str	r3, [sp, #140]	; 0x8c
   18dac:	ldrd	r2, [sp, #136]	; 0x88
   18db0:	and	r4, r4, r2
   18db4:	and	r5, r5, r3
   18db8:	orrs	r3, r4, r5
   18dbc:	beq	18dec <__assert_fail@plt+0x71c0>
   18dc0:	mov	r0, r6
   18dc4:	mov	r1, r7
   18dc8:	mov	r2, #11
   18dcc:	mov	r3, #0
   18dd0:	bl	22264 <close_stdout@@Base+0x8020>
   18dd4:	movw	r3, #571	; 0x23b
   18dd8:	asr	r2, r3, r2
   18ddc:	tst	r2, #1
   18de0:	beq	18dec <__assert_fail@plt+0x71c0>
   18de4:	orrs	r4, r6, r7
   18de8:	bne	19074 <__assert_fail@plt+0x7448>
   18dec:	add	r9, r9, #1
   18df0:	ldrd	r4, [sp, #144]	; 0x90
   18df4:	mov	r3, #0
   18df8:	mov	r2, r9
   18dfc:	cmp	r3, r5
   18e00:	cmpeq	r2, r4
   18e04:	bhi	18e44 <__assert_fail@plt+0x7218>
   18e08:	ldrd	r4, [sp, #72]	; 0x48
   18e0c:	strd	sl, [sp, #112]	; 0x70
   18e10:	mov	sl, r6
   18e14:	mov	fp, r7
   18e18:	strd	r4, [sp, #24]
   18e1c:	b	18a0c <__assert_fail@plt+0x6de0>
   18e20:	mov	r0, #0
   18e24:	mov	r1, #1073741824	; 0x40000000
   18e28:	ldr	r2, [sp, #84]	; 0x54
   18e2c:	mov	r3, #0
   18e30:	bl	22264 <close_stdout@@Base+0x8020>
   18e34:	ldrd	r4, [sp, #120]	; 0x78
   18e38:	cmp	r5, r1
   18e3c:	cmpeq	r4, r0
   18e40:	bls	1888c <__assert_fail@plt+0x6c60>
   18e44:	ldr	ip, [sp, #232]	; 0xe8
   18e48:	ldr	r9, [ip, #4]!
   18e4c:	cmp	r9, #0
   18e50:	str	ip, [sp, #232]	; 0xe8
   18e54:	str	r9, [sp, #84]	; 0x54
   18e58:	beq	18f08 <__assert_fail@plt+0x72dc>
   18e5c:	ldr	r9, [sp, #84]	; 0x54
   18e60:	mov	r0, #3
   18e64:	ldr	ip, [sp, #96]	; 0x60
   18e68:	mov	r1, #0
   18e6c:	ldr	r4, [sp, #100]	; 0x64
   18e70:	umull	r2, r3, r9, ip
   18e74:	and	r2, r2, r0
   18e78:	mla	r3, r9, r4, r3
   18e7c:	and	r3, r3, r1
   18e80:	cmp	r3, r1
   18e84:	cmpeq	r2, r0
   18e88:	beq	18860 <__assert_fail@plt+0x6c34>
   18e8c:	ldr	r3, [pc, #1960]	; 1963c <__assert_fail@plt+0x7a10>
   18e90:	movw	r2, #2024	; 0x7e8
   18e94:	ldr	r0, [pc, #1956]	; 19640 <__assert_fail@plt+0x7a14>
   18e98:	add	r3, pc, r3
   18e9c:	ldr	r1, [pc, #1952]	; 19644 <__assert_fail@plt+0x7a18>
   18ea0:	sub	r3, r3, #3920	; 0xf50
   18ea4:	add	r0, pc, r0
   18ea8:	add	r1, pc, r1
   18eac:	sub	r3, r3, #12
   18eb0:	bl	11c2c <__assert_fail@plt>
   18eb4:	strd	r0, [sp, #128]	; 0x80
   18eb8:	strd	r0, [sp, #144]	; 0x90
   18ebc:	strd	r0, [sp, #152]	; 0x98
   18ec0:	b	189d8 <__assert_fail@plt+0x6dac>
   18ec4:	mov	r2, sl
   18ec8:	mov	r3, fp
   18ecc:	mov	r0, r6
   18ed0:	mov	r1, r7
   18ed4:	bl	22264 <close_stdout@@Base+0x8020>
   18ed8:	mov	r4, r0
   18edc:	mov	r5, r1
   18ee0:	mul	r1, r0, fp
   18ee4:	mov	r0, r6
   18ee8:	mla	r1, sl, r5, r1
   18eec:	umull	r2, r3, r4, sl
   18ef0:	add	r3, r1, r3
   18ef4:	mov	r1, r7
   18ef8:	subs	r0, r0, r2
   18efc:	sbc	r1, r1, r3
   18f00:	strd	r0, [sp, #88]	; 0x58
   18f04:	b	18bb0 <__assert_fail@plt+0x6f84>
   18f08:	mov	r6, #0
   18f0c:	ldr	r5, [sp, #184]	; 0xb8
   18f10:	mov	r0, r6
   18f14:	ldr	r2, [sp, #1068]	; 0x42c
   18f18:	ldr	r3, [r5]
   18f1c:	cmp	r2, r3
   18f20:	bne	19530 <__assert_fail@plt+0x7904>
   18f24:	add	sp, sp, #1072	; 0x430
   18f28:	add	sp, sp, #4
   18f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f30:	ldr	r1, [pc, #1808]	; 19648 <__assert_fail@plt+0x7a1c>
   18f34:	mov	r2, #5
   18f38:	mov	r0, #0
   18f3c:	add	r1, pc, r1
   18f40:	bl	118cc <dcgettext@plt>
   18f44:	mov	r1, #0
   18f48:	mov	r2, r0
   18f4c:	mov	r0, #1
   18f50:	bl	119b0 <error@plt>
   18f54:	b	18c44 <__assert_fail@plt+0x7018>
   18f58:	umull	r6, r7, r4, r5
   18f5c:	mov	r3, #0
   18f60:	umull	r8, r9, r4, r4
   18f64:	adds	r2, r6, r6
   18f68:	umull	sl, fp, r5, r5
   18f6c:	mla	r7, r5, r3, r7
   18f70:	strd	r8, [sp, #24]
   18f74:	ldr	r3, [sp, #28]
   18f78:	mov	r9, #0
   18f7c:	mov	r8, r3
   18f80:	adc	r3, r7, r7
   18f84:	adds	r2, r2, r8
   18f88:	adc	r3, r3, r9
   18f8c:	cmp	r7, r3
   18f90:	cmpeq	r6, r2
   18f94:	bls	18fa0 <__assert_fail@plt+0x7374>
   18f98:	adds	sl, sl, #0
   18f9c:	adc	fp, fp, #1
   18fa0:	ldr	ip, [sp, #24]
   18fa4:	adds	sl, sl, r3
   18fa8:	mov	r9, r2
   18fac:	mov	r7, #0
   18fb0:	adc	fp, fp, r7
   18fb4:	adds	r2, r7, ip
   18fb8:	adc	r3, r9, #0
   18fbc:	cmp	r1, r3
   18fc0:	cmpeq	r0, r2
   18fc4:	bne	19508 <__assert_fail@plt+0x78dc>
   18fc8:	ldrd	r8, [sp, #120]	; 0x78
   18fcc:	cmp	r9, fp
   18fd0:	cmpeq	r8, sl
   18fd4:	bne	18778 <__assert_fail@plt+0x6b4c>
   18fd8:	mov	r0, r4
   18fdc:	mov	r1, r5
   18fe0:	bl	16cc0 <__assert_fail@plt+0x5094>
   18fe4:	subs	r6, r0, #0
   18fe8:	bne	194ec <__assert_fail@plt+0x78c0>
   18fec:	add	r7, sp, #264	; 0x108
   18ff0:	mov	r0, #0
   18ff4:	mov	r1, #0
   18ff8:	str	r7, [sp]
   18ffc:	mov	r2, r4
   19000:	mov	r3, r5
   19004:	strb	r6, [sp, #514]	; 0x202
   19008:	bl	18704 <__assert_fail@plt+0x6ad8>
   1900c:	cmp	r0, #0
   19010:	bne	19028 <__assert_fail@plt+0x73fc>
   19014:	mov	r0, r4
   19018:	mov	r1, r5
   1901c:	mov	r2, #1
   19020:	mov	r3, r7
   19024:	bl	14d64 <__assert_fail@plt+0x3138>
   19028:	ldrb	r3, [sp, #514]	; 0x202
   1902c:	cmp	r3, #0
   19030:	beq	1906c <__assert_fail@plt+0x7440>
   19034:	add	r6, r7, #223	; 0xdf
   19038:	ldr	r7, [sp, #212]	; 0xd4
   1903c:	add	r5, sp, #272	; 0x110
   19040:	mov	r4, #0
   19044:	ldrb	r1, [r6, #1]!
   19048:	mov	r0, r7
   1904c:	ldrd	r2, [r5, #8]!
   19050:	add	r4, r4, #1
   19054:	lsl	r1, r1, #1
   19058:	str	r1, [sp]
   1905c:	bl	12364 <__assert_fail@plt+0x738>
   19060:	ldrb	r3, [sp, #514]	; 0x202
   19064:	cmp	r3, r4
   19068:	bhi	19044 <__assert_fail@plt+0x7418>
   1906c:	mov	r6, #1
   19070:	b	18f0c <__assert_fail@plt+0x72e0>
   19074:	mov	r0, r6
   19078:	mov	r1, r7
   1907c:	bl	13510 <__assert_fail@plt+0x18e4>
   19080:	mul	ip, r0, r1
   19084:	mov	r2, r0
   19088:	mov	r3, r1
   1908c:	umull	r0, r1, r0, r0
   19090:	add	r1, r1, ip, lsl #1
   19094:	cmp	r7, r1
   19098:	cmpeq	r6, r0
   1909c:	bne	18dec <__assert_fail@plt+0x71c0>
   190a0:	orrs	r5, r2, r3
   190a4:	beq	18dec <__assert_fail@plt+0x71c0>
   190a8:	cmp	r8, #0
   190ac:	beq	19100 <__assert_fail@plt+0x74d4>
   190b0:	movw	r1, #64728	; 0xfcd8
   190b4:	add	r5, sp, #1072	; 0x430
   190b8:	movt	r1, #65535	; 0xffff
   190bc:	ldrd	r0, [r1, r5]
   190c0:	cmp	r3, r1
   190c4:	cmpeq	r2, r0
   190c8:	movne	ip, #0
   190cc:	movne	r4, ip
   190d0:	bne	190f4 <__assert_fail@plt+0x74c8>
   190d4:	b	19a88 <__assert_fail@plt+0x7e5c>
   190d8:	add	r1, sp, #264	; 0x108
   190dc:	lsl	r0, r4, #4
   190e0:	add	r0, r0, r1
   190e4:	ldrd	r0, [r0]
   190e8:	cmp	r1, r3
   190ec:	cmpeq	r0, r2
   190f0:	beq	19974 <__assert_fail@plt+0x7d48>
   190f4:	add	r4, r4, #1
   190f8:	cmp	r4, r8
   190fc:	bne	190d8 <__assert_fail@plt+0x74ac>
   19100:	ldrd	r8, [sp, #72]	; 0x48
   19104:	ldrd	r4, [sp, #56]	; 0x38
   19108:	strd	r2, [sp, #48]	; 0x30
   1910c:	cmp	r9, r5
   19110:	cmpeq	r8, r4
   19114:	bhi	19ab8 <__assert_fail@plt+0x7e8c>
   19118:	ldrd	r2, [sp, #48]	; 0x30
   1911c:	mov	r9, #0
   19120:	ldrd	r0, [sp, #88]	; 0x58
   19124:	bl	22264 <close_stdout@@Base+0x8020>
   19128:	ldr	r6, [sp, #52]	; 0x34
   1912c:	ldr	r8, [sp, #48]	; 0x30
   19130:	ldrd	r4, [sp, #72]	; 0x48
   19134:	mul	ip, r0, r6
   19138:	umull	r2, r3, r0, r8
   1913c:	mla	r1, r1, r8, ip
   19140:	adds	r4, r4, r2
   19144:	add	r3, r1, r3
   19148:	mov	r1, r9
   1914c:	adc	r5, r5, r3
   19150:	strd	r4, [sp, #24]
   19154:	ldr	ip, [sp, #28]
   19158:	umull	r2, r3, r4, r5
   1915c:	mov	r5, #0
   19160:	umull	r8, r9, r4, r4
   19164:	adds	r0, r2, r2
   19168:	mla	r3, ip, r1, r3
   1916c:	adc	r1, r3, r3
   19170:	adds	r0, r0, r9
   19174:	adc	r1, r1, r5
   19178:	cmp	r3, r1
   1917c:	cmpeq	r2, r0
   19180:	umull	r4, r5, ip, ip
   19184:	bls	19190 <__assert_fail@plt+0x7564>
   19188:	adds	r4, r4, #0
   1918c:	adc	r5, r5, #1
   19190:	mov	r3, r0
   19194:	mov	r2, #0
   19198:	adds	r0, r2, r8
   1919c:	ldrd	r8, [sp, #200]	; 0xc8
   191a0:	mov	r6, r1
   191a4:	mov	r7, r2
   191a8:	adc	r1, r3, #0
   191ac:	ldrd	sl, [sp, #160]	; 0xa0
   191b0:	subs	r6, r8, r6
   191b4:	sbc	r7, r9, r7
   191b8:	ldrd	r8, [sp, #160]	; 0xa0
   191bc:	subs	sl, sl, r0
   191c0:	sbc	fp, fp, r1
   191c4:	cmp	r9, r1
   191c8:	cmpeq	r8, r0
   191cc:	movcs	r3, #0
   191d0:	movcc	r3, #1
   191d4:	subs	r6, r6, r3
   191d8:	sbc	r7, r7, #0
   191dc:	subs	r6, r6, r4
   191e0:	sbc	r7, r7, r5
   191e4:	ldrd	r4, [sp, #48]	; 0x30
   191e8:	cmp	r7, r5
   191ec:	cmpeq	r6, r4
   191f0:	bcs	19a90 <__assert_fail@plt+0x7e64>
   191f4:	ldrd	r2, [sp, #48]	; 0x30
   191f8:	mov	r8, #0
   191fc:	mov	r9, #0
   19200:	strd	sl, [sp, #16]
   19204:	mov	r0, r8
   19208:	mov	r1, r9
   1920c:	mov	ip, #64	; 0x40
   19210:	mov	sl, r6
   19214:	mov	fp, r7
   19218:	lsrs	r1, r1, #1
   1921c:	rrx	r0, r0
   19220:	lsl	r7, r2, #31
   19224:	lsrs	r3, r3, #1
   19228:	rrx	r2, r2
   1922c:	adds	r4, r8, r8
   19230:	adc	r5, r9, r9
   19234:	cmp	r3, fp
   19238:	cmpeq	r2, sl
   1923c:	mov	r6, #0
   19240:	strd	r4, [sp, #64]	; 0x40
   19244:	mov	r8, r4
   19248:	mov	r9, r5
   1924c:	orr	r0, r0, r6
   19250:	orr	r1, r1, r7
   19254:	bcc	19284 <__assert_fail@plt+0x7658>
   19258:	ldrd	r4, [sp, #16]
   1925c:	cmp	r5, r1
   19260:	cmpeq	r4, r0
   19264:	movcc	lr, #0
   19268:	movcs	lr, #1
   1926c:	cmp	fp, r3
   19270:	cmpeq	sl, r2
   19274:	movne	lr, #0
   19278:	andeq	lr, lr, #1
   1927c:	cmp	lr, r6
   19280:	beq	192d4 <__assert_fail@plt+0x76a8>
   19284:	ldrd	r8, [sp, #64]	; 0x40
   19288:	mov	lr, #0
   1928c:	ldrd	r4, [sp, #16]
   19290:	adds	r8, r8, #1
   19294:	str	lr, [sp, #68]	; 0x44
   19298:	adc	r9, r9, #0
   1929c:	cmp	r5, r1
   192a0:	cmpeq	r4, r0
   192a4:	movcs	r5, #0
   192a8:	movcc	r5, #1
   192ac:	str	r5, [sp, #64]	; 0x40
   192b0:	ldrd	r4, [sp, #16]
   192b4:	subs	sl, sl, r2
   192b8:	sbc	fp, fp, r3
   192bc:	subs	r4, r4, r0
   192c0:	sbc	r5, r5, r1
   192c4:	strd	r4, [sp, #16]
   192c8:	ldrd	r4, [sp, #64]	; 0x40
   192cc:	subs	sl, sl, r4
   192d0:	sbc	fp, fp, r5
   192d4:	subs	ip, ip, #1
   192d8:	bne	19218 <__assert_fail@plt+0x75ec>
   192dc:	ldrd	sl, [sp, #16]
   192e0:	orrs	r5, sl, fp
   192e4:	bne	19b08 <__assert_fail@plt+0x7edc>
   192e8:	ldr	r6, [pc, #860]	; 1964c <__assert_fail@plt+0x7a20>
   192ec:	mov	sl, #0
   192f0:	ldr	ip, [pc, #856]	; 19650 <__assert_fail@plt+0x7a24>
   192f4:	mov	fp, #-16777216	; 0xff000000
   192f8:	add	r6, pc, r6
   192fc:	str	r6, [sp, #64]	; 0x40
   19300:	add	ip, pc, ip
   19304:	str	ip, [sp, #72]	; 0x48
   19308:	ldrd	r4, [sp, #56]	; 0x38
   1930c:	ldrd	r6, [sp, #24]
   19310:	adds	r6, r6, r4
   19314:	adc	r7, r7, r5
   19318:	lsr	r5, r6, #6
   1931c:	orr	ip, r5, r7, lsl #26
   19320:	lsr	lr, r7, #6
   19324:	str	ip, [sp, #32]
   19328:	str	lr, [sp, #36]	; 0x24
   1932c:	ldrd	r4, [sp, #32]
   19330:	cmp	r9, r5
   19334:	cmpeq	r8, r4
   19338:	bls	195f4 <__assert_fail@plt+0x79c8>
   1933c:	and	r2, r8, sl
   19340:	and	r3, r9, fp
   19344:	orrs	r5, r2, r3
   19348:	mov	ip, #0
   1934c:	mov	r2, r8
   19350:	mov	r3, r9
   19354:	bne	19380 <__assert_fail@plt+0x7754>
   19358:	lsl	r1, r3, #8
   1935c:	lsl	r0, r2, #8
   19360:	orr	r1, r1, r2, lsr #24
   19364:	add	ip, ip, #8
   19368:	mov	r2, r0
   1936c:	and	r0, r0, sl
   19370:	mov	r3, r1
   19374:	and	r1, r1, fp
   19378:	orrs	lr, r0, r1
   1937c:	beq	19358 <__assert_fail@plt+0x772c>
   19380:	cmp	r2, #0
   19384:	sbcs	r0, r3, #0
   19388:	blt	193a4 <__assert_fail@plt+0x7778>
   1938c:	adds	r2, r2, r2
   19390:	add	ip, ip, #1
   19394:	adc	r3, r3, r3
   19398:	cmp	r2, #0
   1939c:	sbcs	r1, r3, #0
   193a0:	bge	1938c <__assert_fail@plt+0x7760>
   193a4:	cmp	ip, #56	; 0x38
   193a8:	bhi	19b58 <__assert_fail@plt+0x7f2c>
   193ac:	rsb	r2, ip, #56	; 0x38
   193b0:	ldr	r4, [sp, #64]	; 0x40
   193b4:	rsb	r1, r2, #32
   193b8:	lsr	r3, r8, r2
   193bc:	orr	r3, r3, r9, lsl r1
   193c0:	sub	r2, r2, #32
   193c4:	orr	r3, r3, r9, lsr r2
   193c8:	rsb	ip, ip, #61	; 0x3d
   193cc:	rsb	r0, ip, #32
   193d0:	lsr	r2, r6, ip
   193d4:	add	r3, r4, r3, lsl #1
   193d8:	sub	r1, ip, #32
   193dc:	sub	r3, r3, #4160	; 0x1040
   193e0:	orr	r2, r2, r7, lsl r0
   193e4:	orr	r2, r2, r7, lsr r1
   193e8:	lsr	ip, r7, ip
   193ec:	ldrh	r0, [r3, #-6]
   193f0:	umull	r2, r3, r0, r2
   193f4:	mla	r3, ip, r0, r3
   193f8:	lsr	r5, r2, #11
   193fc:	orr	ip, r5, r3, lsl #21
   19400:	lsr	lr, r3, #11
   19404:	str	ip, [sp, #40]	; 0x28
   19408:	str	lr, [sp, #44]	; 0x2c
   1940c:	ldr	r0, [sp, #40]	; 0x28
   19410:	mov	r2, r6
   19414:	ldr	r1, [sp, #44]	; 0x2c
   19418:	mov	r5, #0
   1941c:	mul	r3, r0, r9
   19420:	mla	r3, r8, r1, r3
   19424:	umull	r0, r1, r0, r8
   19428:	add	r1, r3, r1
   1942c:	mov	r3, r7
   19430:	subs	r2, r2, r0
   19434:	sbc	r3, r3, r1
   19438:	ldrd	r0, [sp, #40]	; 0x28
   1943c:	cmp	r3, r9
   19440:	cmpeq	r2, r8
   19444:	strd	r2, [sp, #16]
   19448:	movcc	r4, #0
   1944c:	movcs	r4, #1
   19450:	adds	r0, r0, r4
   19454:	adc	r1, r1, r5
   19458:	rsbs	r2, r4, #0
   1945c:	rsc	r3, r5, #0
   19460:	ldrd	r4, [sp, #16]
   19464:	and	r2, r2, r8
   19468:	mul	ip, r0, r9
   1946c:	and	r3, r3, r9
   19470:	subs	r2, r4, r2
   19474:	sbc	r3, r5, r3
   19478:	mla	ip, r8, r1, ip
   1947c:	umull	r4, r5, r0, r8
   19480:	adds	r4, r4, r2
   19484:	add	r5, ip, r5
   19488:	adc	r5, r5, r3
   1948c:	cmp	r7, r5
   19490:	cmpeq	r6, r4
   19494:	bne	19b30 <__assert_fail@plt+0x7f04>
   19498:	ldrd	r4, [sp, #56]	; 0x38
   1949c:	subs	r2, r4, r2
   194a0:	sbc	r3, r5, r3
   194a4:	ldrd	r4, [sp, #24]
   194a8:	cmp	r5, r3
   194ac:	cmpeq	r4, r2
   194b0:	beq	196c4 <__assert_fail@plt+0x7a98>
   194b4:	subs	r4, r4, r2
   194b8:	sbc	r5, r5, r3
   194bc:	strd	r2, [sp, #24]
   194c0:	mul	r3, r4, r1
   194c4:	mla	r3, r0, r5, r3
   194c8:	umull	r0, r1, r4, r0
   194cc:	ldrd	r4, [sp, #48]	; 0x30
   194d0:	strd	r8, [sp, #48]	; 0x30
   194d4:	adds	r0, r0, r4
   194d8:	add	r1, r3, r1
   194dc:	adc	r1, r1, r5
   194e0:	mov	r8, r0
   194e4:	mov	r9, r1
   194e8:	b	19308 <__assert_fail@plt+0x76dc>
   194ec:	mov	r1, #2
   194f0:	ldr	r0, [sp, #212]	; 0xd4
   194f4:	mov	r2, r4
   194f8:	mov	r3, r5
   194fc:	str	r1, [sp]
   19500:	bl	12364 <__assert_fail@plt+0x738>
   19504:	b	18f0c <__assert_fail@plt+0x72e0>
   19508:	ldr	r3, [pc, #324]	; 19654 <__assert_fail@plt+0x7a28>
   1950c:	movw	r2, #1991	; 0x7c7
   19510:	ldr	r0, [pc, #320]	; 19658 <__assert_fail@plt+0x7a2c>
   19514:	add	r3, pc, r3
   19518:	ldr	r1, [pc, #316]	; 1965c <__assert_fail@plt+0x7a30>
   1951c:	sub	r3, r3, #3920	; 0xf50
   19520:	add	r0, pc, r0
   19524:	add	r1, pc, r1
   19528:	sub	r3, r3, #12
   1952c:	bl	11c2c <__assert_fail@plt>
   19530:	bl	118e4 <__stack_chk_fail@plt>
   19534:	ldr	r3, [pc, #292]	; 19660 <__assert_fail@plt+0x7a34>
   19538:	movw	r2, #2050	; 0x802
   1953c:	ldr	r0, [pc, #288]	; 19664 <__assert_fail@plt+0x7a38>
   19540:	add	r3, pc, r3
   19544:	ldr	r1, [pc, #284]	; 19668 <__assert_fail@plt+0x7a3c>
   19548:	sub	r3, r3, #3920	; 0xf50
   1954c:	add	r0, pc, r0
   19550:	add	r1, pc, r1
   19554:	sub	r3, r3, #12
   19558:	bl	11c2c <__assert_fail@plt>
   1955c:	ldr	r3, [pc, #264]	; 1966c <__assert_fail@plt+0x7a40>
   19560:	movw	r2, #2049	; 0x801
   19564:	ldr	r0, [pc, #260]	; 19670 <__assert_fail@plt+0x7a44>
   19568:	add	r3, pc, r3
   1956c:	ldr	r1, [pc, #256]	; 19674 <__assert_fail@plt+0x7a48>
   19570:	sub	r3, r3, #3920	; 0xf50
   19574:	add	r0, pc, r0
   19578:	add	r1, pc, r1
   1957c:	sub	r3, r3, #12
   19580:	bl	11c2c <__assert_fail@plt>
   19584:	sub	r3, ip, #56	; 0x38
   19588:	ldr	r5, [sp, #252]	; 0xfc
   1958c:	lsl	r3, sl, r3
   19590:	rsb	ip, ip, #72	; 0x48
   19594:	rsb	r4, ip, #32
   19598:	sub	r1, ip, #32
   1959c:	add	r3, r5, r3, lsl #1
   195a0:	sub	r3, r3, #4160	; 0x1040
   195a4:	ldrh	r0, [r3, #-8]
   195a8:	umull	r2, r3, r0, r6
   195ac:	mla	r3, r0, r7, r3
   195b0:	lsr	r0, r2, ip
   195b4:	orr	r4, r0, r3, lsl r4
   195b8:	lsr	ip, r3, ip
   195bc:	orr	r1, r4, r3, lsr r1
   195c0:	str	ip, [sp, #52]	; 0x34
   195c4:	str	r1, [sp, #48]	; 0x30
   195c8:	b	18b20 <__assert_fail@plt+0x6ef4>
   195cc:	ldr	r3, [pc, #164]	; 19678 <__assert_fail@plt+0x7a4c>
   195d0:	movw	r2, #2071	; 0x817
   195d4:	ldr	r0, [pc, #160]	; 1967c <__assert_fail@plt+0x7a50>
   195d8:	add	r3, pc, r3
   195dc:	ldr	r1, [pc, #156]	; 19680 <__assert_fail@plt+0x7a54>
   195e0:	sub	r3, r3, #3920	; 0xf50
   195e4:	add	r0, pc, r0
   195e8:	add	r1, pc, r1
   195ec:	sub	r3, r3, #12
   195f0:	bl	11c2c <__assert_fail@plt>
   195f4:	mov	r2, r8
   195f8:	mov	r3, r9
   195fc:	mov	r0, r6
   19600:	mov	r1, r7
   19604:	bl	22264 <close_stdout@@Base+0x8020>
   19608:	mul	ip, r0, r9
   1960c:	umull	r2, r3, r0, r8
   19610:	mla	ip, r8, r1, ip
   19614:	add	r3, ip, r3
   19618:	subs	r2, r6, r2
   1961c:	sbc	r3, r7, r3
   19620:	b	19498 <__assert_fail@plt+0x786c>
   19624:	andeq	lr, r1, ip, asr #17
   19628:	andeq	r0, r0, ip, lsl #3
   1962c:	ldrdeq	lr, [r0], -r8
   19630:	andeq	lr, r0, ip, asr #9
   19634:	andeq	lr, r0, r4, ror r2
   19638:	andeq	lr, r0, ip, ror #4
   1963c:	ldrdeq	sp, [r0], -r8
   19640:	andeq	sp, r0, r4, asr #3
   19644:			; <UNDEFINED> instruction: 0x0000cfb0
   19648:	andeq	sp, r0, r0, lsr #3
   1964c:	andeq	sp, r0, r8, ror r9
   19650:	andeq	sp, r0, r0, ror r9
   19654:	andeq	sp, r0, ip, asr r7
   19658:	andeq	ip, r0, ip, lsr fp
   1965c:	andeq	ip, r0, r4, lsr r9
   19660:	andeq	sp, r0, r0, lsr r7
   19664:	andeq	ip, r0, ip, lsr fp
   19668:	andeq	ip, r0, r8, lsl #18
   1966c:	andeq	sp, r0, r8, lsl #14
   19670:	andeq	ip, r0, r8, lsl #22
   19674:	andeq	ip, r0, r0, ror #17
   19678:	muleq	r0, r8, r6
   1967c:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   19680:	andeq	ip, r0, r0, ror r8
   19684:	strdeq	r9, [r0], -r8
   19688:	ldrdeq	sp, [r0], -r4
   1968c:	andeq	ip, r0, r4, asr r6
   19690:	andeq	ip, r0, ip, lsr #7
   19694:	andeq	sp, r0, ip, lsr #3
   19698:	andeq	ip, r0, r4, lsr #12
   1969c:	andeq	ip, r0, r4, lsl #7
   196a0:	andeq	sp, r0, r4, lsl #3
   196a4:	andeq	ip, r0, ip, lsl r6
   196a8:	andeq	ip, r0, ip, asr r3
   196ac:	andeq	sp, r0, ip, asr r1
   196b0:	andeq	ip, r0, r8, ror #11
   196b4:	andeq	ip, r0, r4, lsr r3
   196b8:	andeq	sp, r0, r4, lsr r1
   196bc:	andeq	ip, r0, r8, ror r5
   196c0:	andeq	ip, r0, ip, lsl #6
   196c4:	mov	r2, #1
   196c8:	mov	r3, #0
   196cc:	and	r2, r2, r8
   196d0:	and	r3, r3, r9
   196d4:	orrs	r5, r2, r3
   196d8:	bne	196e4 <__assert_fail@plt+0x7ab8>
   196dc:	lsrs	r9, r9, #1
   196e0:	rrx	r8, r8
   196e4:	ldr	r2, [sp, #84]	; 0x54
   196e8:	mov	r3, #0
   196ec:	mov	r0, r8
   196f0:	mov	r1, r9
   196f4:	bl	12024 <__assert_fail@plt+0x3f8>
   196f8:	mov	r2, r0
   196fc:	mov	r3, r1
   19700:	mov	r0, r8
   19704:	mov	r1, r9
   19708:	bl	22264 <close_stdout@@Base+0x8020>
   1970c:	mov	r4, r0
   19710:	mov	r5, r1
   19714:	cmp	r5, #0
   19718:	cmpeq	r4, #1
   1971c:	bls	19ae0 <__assert_fail@plt+0x7eb4>
   19720:	ldrd	r8, [sp, #96]	; 0x60
   19724:	ldr	ip, [sp, #124]	; 0x7c
   19728:	cmp	r5, r9
   1972c:	cmpeq	r4, r8
   19730:	ldr	r9, [sp, #120]	; 0x78
   19734:	movcc	r3, #0
   19738:	movcs	r3, #1
   1973c:	orrs	r9, r9, ip
   19740:	movne	r3, #0
   19744:	andeq	r3, r3, #1
   19748:	cmp	r3, #0
   1974c:	bne	19ae0 <__assert_fail@plt+0x7eb4>
   19750:	bl	16cc0 <__assert_fail@plt+0x5094>
   19754:	cmp	r0, #0
   19758:	beq	199f4 <__assert_fail@plt+0x7dc8>
   1975c:	mov	r3, #1
   19760:	ldr	r0, [sp, #212]	; 0xd4
   19764:	str	r3, [sp]
   19768:	mov	r2, r4
   1976c:	mov	r3, r5
   19770:	bl	12364 <__assert_fail@plt+0x738>
   19774:	ldr	r1, [pc, #-248]	; 19684 <__assert_fail@plt+0x7a58>
   19778:	lsrs	r3, r5, #1
   1977c:	rrx	r2, r4
   19780:	and	r2, r2, #127	; 0x7f
   19784:	mov	r7, #0
   19788:	add	r1, pc, r1
   1978c:	ldrd	r8, [sp, #120]	; 0x78
   19790:	add	r3, r2, r1
   19794:	ldr	lr, [sp, #96]	; 0x60
   19798:	ldrb	r2, [r3, #752]	; 0x2f0
   1979c:	mov	r6, r2
   197a0:	adds	r6, r6, r6
   197a4:	umull	r2, r3, r2, r2
   197a8:	adc	r7, r7, r7
   197ac:	mul	r1, r2, r5
   197b0:	mla	r1, r4, r3, r1
   197b4:	umull	r2, r3, r2, r4
   197b8:	add	r3, r1, r3
   197bc:	subs	r6, r6, r2
   197c0:	sbc	r7, r7, r3
   197c4:	mul	r1, r6, r7
   197c8:	umull	r2, r3, r6, r6
   197cc:	adds	r6, r6, r6
   197d0:	adc	r7, r7, r7
   197d4:	add	r3, r3, r1, lsl #1
   197d8:	mul	r1, r2, r5
   197dc:	mla	r1, r4, r3, r1
   197e0:	umull	r2, r3, r2, r4
   197e4:	add	r3, r1, r3
   197e8:	subs	r6, r6, r2
   197ec:	sbc	r7, r7, r3
   197f0:	mul	r1, r6, r7
   197f4:	umull	r2, r3, r6, r6
   197f8:	adds	r6, r6, r6
   197fc:	adc	r7, r7, r7
   19800:	add	r3, r3, r1, lsl #1
   19804:	mul	r1, r2, r5
   19808:	mla	r1, r4, r3, r1
   1980c:	umull	r2, r3, r2, r4
   19810:	add	r3, r1, r3
   19814:	subs	r6, r6, r2
   19818:	sbc	r7, r7, r3
   1981c:	cmp	r9, r5
   19820:	cmpeq	r8, r4
   19824:	ldr	r9, [sp, #100]	; 0x64
   19828:	movcc	r4, #0
   1982c:	movcc	r5, #0
   19830:	mul	ip, r6, r9
   19834:	mla	ip, lr, r7, ip
   19838:	umull	r8, r9, r6, lr
   1983c:	add	ip, ip, r9
   19840:	mov	r9, ip
   19844:	bcc	19910 <__assert_fail@plt+0x7ce4>
   19848:	mvn	r2, #0
   1984c:	and	sl, r8, r2
   19850:	and	r2, r2, r4
   19854:	mov	r3, #0
   19858:	umull	r0, r1, sl, r5
   1985c:	and	fp, ip, r3
   19860:	and	r3, r3, r5
   19864:	mul	lr, sl, r3
   19868:	strd	r0, [sp, #40]	; 0x28
   1986c:	umull	r0, r1, ip, r2
   19870:	mla	lr, r2, fp, lr
   19874:	strd	r0, [sp, #16]
   19878:	umull	r0, r1, sl, r2
   1987c:	mov	r2, #0
   19880:	str	r2, [sp, #36]	; 0x24
   19884:	strd	r0, [sp, #24]
   19888:	ldr	r1, [sp, #44]	; 0x2c
   1988c:	ldr	r0, [sp, #28]
   19890:	mla	r1, r5, fp, r1
   19894:	add	lr, lr, r0
   19898:	str	lr, [sp, #32]
   1989c:	str	r1, [sp, #44]	; 0x2c
   198a0:	ldr	r1, [sp, #20]
   198a4:	mla	r1, ip, r3, r1
   198a8:	umull	r2, r3, ip, r5
   198ac:	str	r1, [sp, #20]
   198b0:	ldrd	r4, [sp, #16]
   198b4:	ldrd	r0, [sp, #40]	; 0x28
   198b8:	adds	r0, r0, r4
   198bc:	adc	r1, r1, r5
   198c0:	ldrd	r4, [sp, #32]
   198c4:	adds	r0, r0, r4
   198c8:	adc	r1, r1, r5
   198cc:	ldrd	r4, [sp, #16]
   198d0:	cmp	r5, r1
   198d4:	cmpeq	r4, r0
   198d8:	bls	198e4 <__assert_fail@plt+0x7cb8>
   198dc:	adds	r2, r2, #0
   198e0:	adc	r3, r3, #1
   198e4:	mov	r4, r1
   198e8:	ldrd	r0, [sp, #120]	; 0x78
   198ec:	mov	r5, #0
   198f0:	subs	r4, r0, r4
   198f4:	sbc	r5, r1, r5
   198f8:	subs	r4, r4, r2
   198fc:	sbc	r5, r5, r3
   19900:	mul	r3, r4, r7
   19904:	mla	r3, r6, r5, r3
   19908:	umull	r4, r5, r4, r6
   1990c:	add	r5, r3, r5
   19910:	mov	r0, r4
   19914:	mov	r1, r5
   19918:	mov	r2, r8
   1991c:	mov	r3, r9
   19920:	bl	17988 <__assert_fail@plt+0x5d5c>
   19924:	subs	r6, r0, #0
   19928:	bne	19a48 <__assert_fail@plt+0x7e1c>
   1992c:	ldr	r6, [sp, #212]	; 0xd4
   19930:	mov	r0, r4
   19934:	mov	r1, r5
   19938:	mov	r2, r8
   1993c:	mov	r3, r9
   19940:	str	r6, [sp]
   19944:	bl	18704 <__assert_fail@plt+0x6ad8>
   19948:	subs	r6, r0, #0
   1994c:	bne	18f0c <__assert_fail@plt+0x72e0>
   19950:	orrs	ip, r4, r5
   19954:	bne	19a60 <__assert_fail@plt+0x7e34>
   19958:	mov	r2, #1
   1995c:	mov	r0, r8
   19960:	mov	r1, r9
   19964:	ldr	r3, [sp, #212]	; 0xd4
   19968:	mov	r6, r2
   1996c:	bl	14d64 <__assert_fail@plt+0x3138>
   19970:	b	18f0c <__assert_fail@plt+0x72e0>
   19974:	mov	ip, r4
   19978:	cmp	r3, #0
   1997c:	cmpeq	r2, #1
   19980:	beq	18e44 <__assert_fail@plt+0x7218>
   19984:	add	lr, sp, #1072	; 0x430
   19988:	ldrd	r4, [sp, #72]	; 0x48
   1998c:	add	r1, lr, ip, lsl #4
   19990:	sub	lr, r1, #800	; 0x320
   19994:	ldrd	r0, [lr]
   19998:	cmp	r5, r1
   1999c:	cmpeq	r4, r0
   199a0:	strd	r0, [sp, #24]
   199a4:	bcc	19a30 <__assert_fail@plt+0x7e04>
   199a8:	subs	r4, r4, r0
   199ac:	sbc	r5, r5, r1
   199b0:	strd	r4, [sp, #24]
   199b4:	ldrd	r0, [sp, #24]
   199b8:	str	ip, [sp, #12]
   199bc:	bl	22264 <close_stdout@@Base+0x8020>
   199c0:	ldr	ip, [sp, #12]
   199c4:	orrs	r5, r2, r3
   199c8:	bne	18dec <__assert_fail@plt+0x71c0>
   199cc:	rsb	r8, ip, r8
   199d0:	add	r1, ip, #1
   199d4:	sub	r2, r8, #-268435455	; 0xf0000001
   199d8:	add	r0, sp, #264	; 0x108
   199dc:	mov	r3, #800	; 0x320
   199e0:	add	r1, r0, r1, lsl #4
   199e4:	lsl	r2, r2, #4
   199e8:	sub	r8, r8, #1
   199ec:	bl	1186c <__memmove_chk@plt>
   199f0:	b	18dec <__assert_fail@plt+0x71c0>
   199f4:	ldr	r6, [sp, #212]	; 0xd4
   199f8:	mov	r0, #0
   199fc:	mov	r1, #0
   19a00:	mov	r2, r4
   19a04:	mov	r3, r5
   19a08:	str	r6, [sp]
   19a0c:	bl	18704 <__assert_fail@plt+0x6ad8>
   19a10:	cmp	r0, #0
   19a14:	bne	19774 <__assert_fail@plt+0x7b48>
   19a18:	mov	r0, r4
   19a1c:	mov	r1, r5
   19a20:	mov	r2, #2
   19a24:	ldr	r3, [sp, #212]	; 0xd4
   19a28:	bl	14d64 <__assert_fail@plt+0x3138>
   19a2c:	b	19774 <__assert_fail@plt+0x7b48>
   19a30:	ldrd	r0, [sp, #24]
   19a34:	ldrd	r4, [sp, #72]	; 0x48
   19a38:	subs	r0, r0, r4
   19a3c:	sbc	r1, r1, r5
   19a40:	strd	r0, [sp, #24]
   19a44:	b	199b4 <__assert_fail@plt+0x7d88>
   19a48:	strd	r8, [sp]
   19a4c:	mov	r2, r4
   19a50:	ldr	r0, [sp, #212]	; 0xd4
   19a54:	mov	r3, r5
   19a58:	bl	135f4 <__assert_fail@plt+0x19c8>
   19a5c:	b	18f0c <__assert_fail@plt+0x72e0>
   19a60:	ldr	r6, [sp, #212]	; 0xd4
   19a64:	mov	r0, r4
   19a68:	mov	r1, r5
   19a6c:	mov	r2, r8
   19a70:	mov	r3, r9
   19a74:	str	r6, [sp, #4]
   19a78:	mov	r6, #1
   19a7c:	str	r6, [sp]
   19a80:	bl	179ec <__assert_fail@plt+0x5dc0>
   19a84:	b	18f0c <__assert_fail@plt+0x72e0>
   19a88:	mov	ip, #0
   19a8c:	b	19978 <__assert_fail@plt+0x7d4c>
   19a90:	ldr	r3, [pc, #-1040]	; 19688 <__assert_fail@plt+0x7a5c>
   19a94:	movw	r2, #2149	; 0x865
   19a98:	ldr	r0, [pc, #-1044]	; 1968c <__assert_fail@plt+0x7a60>
   19a9c:	add	r3, pc, r3
   19aa0:	ldr	r1, [pc, #-1048]	; 19690 <__assert_fail@plt+0x7a64>
   19aa4:	sub	r3, r3, #3920	; 0xf50
   19aa8:	add	r0, pc, r0
   19aac:	add	r1, pc, r1
   19ab0:	sub	r3, r3, #12
   19ab4:	bl	11c2c <__assert_fail@plt>
   19ab8:	ldr	r3, [pc, #-1068]	; 19694 <__assert_fail@plt+0x7a68>
   19abc:	movw	r2, #2139	; 0x85b
   19ac0:	ldr	r0, [pc, #-1072]	; 19698 <__assert_fail@plt+0x7a6c>
   19ac4:	add	r3, pc, r3
   19ac8:	ldr	r1, [pc, #-1076]	; 1969c <__assert_fail@plt+0x7a70>
   19acc:	sub	r3, r3, #3920	; 0xf50
   19ad0:	add	r0, pc, r0
   19ad4:	add	r1, pc, r1
   19ad8:	sub	r3, r3, #12
   19adc:	bl	11c2c <__assert_fail@plt>
   19ae0:	ldr	r3, [pc, #-1096]	; 196a0 <__assert_fail@plt+0x7a74>
   19ae4:	movw	r2, #2178	; 0x882
   19ae8:	ldr	r0, [pc, #-1100]	; 196a4 <__assert_fail@plt+0x7a78>
   19aec:	add	r3, pc, r3
   19af0:	ldr	r1, [pc, #-1104]	; 196a8 <__assert_fail@plt+0x7a7c>
   19af4:	sub	r3, r3, #3920	; 0xf50
   19af8:	add	r0, pc, r0
   19afc:	add	r1, pc, r1
   19b00:	sub	r3, r3, #12
   19b04:	bl	11c2c <__assert_fail@plt>
   19b08:	ldr	r3, [pc, #-1124]	; 196ac <__assert_fail@plt+0x7a80>
   19b0c:	movw	r2, #2150	; 0x866
   19b10:	ldr	r0, [pc, #-1128]	; 196b0 <__assert_fail@plt+0x7a84>
   19b14:	add	r3, pc, r3
   19b18:	ldr	r1, [pc, #-1132]	; 196b4 <__assert_fail@plt+0x7a88>
   19b1c:	sub	r3, r3, #3920	; 0xf50
   19b20:	add	r0, pc, r0
   19b24:	add	r1, pc, r1
   19b28:	sub	r3, r3, #12
   19b2c:	bl	11c2c <__assert_fail@plt>
   19b30:	ldr	r3, [pc, #-1152]	; 196b8 <__assert_fail@plt+0x7a8c>
   19b34:	movw	r2, #2159	; 0x86f
   19b38:	ldr	r0, [pc, #-1156]	; 196bc <__assert_fail@plt+0x7a90>
   19b3c:	add	r3, pc, r3
   19b40:	ldr	r1, [pc, #-1160]	; 196c0 <__assert_fail@plt+0x7a94>
   19b44:	sub	r3, r3, #3920	; 0xf50
   19b48:	add	r0, pc, r0
   19b4c:	add	r1, pc, r1
   19b50:	sub	r3, r3, #12
   19b54:	bl	11c2c <__assert_fail@plt>
   19b58:	sub	r3, ip, #56	; 0x38
   19b5c:	ldr	r4, [sp, #72]	; 0x48
   19b60:	lsl	r3, r8, r3
   19b64:	rsb	ip, ip, #72	; 0x48
   19b68:	rsb	lr, ip, #32
   19b6c:	sub	r1, ip, #32
   19b70:	add	r3, r4, r3, lsl #1
   19b74:	sub	r3, r3, #4160	; 0x1040
   19b78:	ldrh	r0, [r3, #-8]
   19b7c:	umull	r2, r3, r0, r6
   19b80:	mla	r3, r0, r7, r3
   19b84:	lsr	r5, r2, ip
   19b88:	orr	lr, r5, r3, lsl lr
   19b8c:	lsr	ip, r3, ip
   19b90:	orr	r1, lr, r3, lsr r1
   19b94:	str	ip, [sp, #44]	; 0x2c
   19b98:	str	r1, [sp, #40]	; 0x28
   19b9c:	b	1940c <__assert_fail@plt+0x77e0>
   19ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ba4:	sub	sp, sp, #324	; 0x144
   19ba8:	ldr	fp, [pc, #1132]	; 1a01c <__assert_fail@plt+0x83f0>
   19bac:	ldr	r3, [pc, #1132]	; 1a020 <__assert_fail@plt+0x83f4>
   19bb0:	add	fp, pc, fp
   19bb4:	str	r0, [sp, #8]
   19bb8:	ldrb	r2, [r0]
   19bbc:	ldr	r3, [fp, r3]
   19bc0:	cmp	r2, #32
   19bc4:	str	r3, [sp, #12]
   19bc8:	ldr	r3, [r3]
   19bcc:	str	r3, [sp, #316]	; 0x13c
   19bd0:	bne	19e4c <__assert_fail@plt+0x8220>
   19bd4:	add	r3, r0, #1
   19bd8:	mov	lr, r3
   19bdc:	ldrb	r2, [r3], #1
   19be0:	cmp	r2, #32
   19be4:	beq	19bd8 <__assert_fail@plt+0x7fac>
   19be8:	cmp	r2, #43	; 0x2b
   19bec:	mov	r1, #4
   19bf0:	addeq	lr, lr, #1
   19bf4:	mov	r2, lr
   19bf8:	b	19c0c <__assert_fail@plt+0x7fe0>
   19bfc:	sub	r3, r3, #48	; 0x30
   19c00:	cmp	r3, #9
   19c04:	bhi	19e10 <__assert_fail@plt+0x81e4>
   19c08:	mov	r1, #0
   19c0c:	ldrb	r3, [r2], #1
   19c10:	cmp	r3, #0
   19c14:	bne	19bfc <__assert_fail@plt+0x7fd0>
   19c18:	cmp	r1, #0
   19c1c:	bne	19e08 <__assert_fail@plt+0x81dc>
   19c20:	ldrb	sl, [lr]
   19c24:	cmp	sl, #0
   19c28:	beq	19fc8 <__assert_fail@plt+0x839c>
   19c2c:	mov	r4, #0
   19c30:	mov	r5, #0
   19c34:	sub	sl, sl, #48	; 0x30
   19c38:	mov	r2, r4
   19c3c:	mov	r3, r5
   19c40:	mov	ip, #10
   19c44:	b	19c68 <__assert_fail@plt+0x803c>
   19c48:	movw	r6, #39321	; 0x9999
   19c4c:	movw	r7, #39321	; 0x9999
   19c50:	movt	r6, #39321	; 0x9999
   19c54:	movt	r7, #6553	; 0x1999
   19c58:	cmp	r3, r7
   19c5c:	cmpeq	r2, r6
   19c60:	sub	sl, r1, #48	; 0x30
   19c64:	bhi	19d00 <__assert_fail@plt+0x80d4>
   19c68:	umull	r0, r1, r4, ip
   19c6c:	adds	r8, r4, r4
   19c70:	umull	r6, r7, r2, ip
   19c74:	adc	r9, r5, r5
   19c78:	mov	r2, sl
   19c7c:	mla	r1, ip, r5, r1
   19c80:	mla	r7, ip, r3, r7
   19c84:	cmp	r1, r9
   19c88:	cmpeq	r0, r8
   19c8c:	lsr	r9, r5, #29
   19c90:	mov	r3, #0
   19c94:	movcs	r8, #0
   19c98:	movcc	r8, #1
   19c9c:	adds	r4, r0, sl
   19ca0:	add	r9, r9, r5, lsr #31
   19ca4:	adc	r5, r1, r3
   19ca8:	cmp	r3, r5
   19cac:	cmpeq	r2, r4
   19cb0:	add	r0, r9, r8
   19cb4:	mov	r1, #0
   19cb8:	movls	r3, #0
   19cbc:	movhi	r3, #1
   19cc0:	add	r0, r0, r3
   19cc4:	adds	r2, r0, r6
   19cc8:	adc	r3, r1, r7
   19ccc:	cmp	r1, r3
   19cd0:	cmpeq	r0, r2
   19cd4:	bhi	19d00 <__assert_fail@plt+0x80d4>
   19cd8:	ldrb	r1, [lr, #1]!
   19cdc:	cmp	r1, #0
   19ce0:	bne	19c48 <__assert_fail@plt+0x801c>
   19ce4:	mvn	r6, #0
   19ce8:	mvn	r7, #-2147483648	; 0x80000000
   19cec:	and	r6, r6, r2
   19cf0:	and	r7, r7, r3
   19cf4:	cmp	r3, r7
   19cf8:	cmpeq	r2, r6
   19cfc:	beq	19e54 <__assert_fail@plt+0x8228>
   19d00:	ldr	r0, [pc, #796]	; 1a024 <__assert_fail@plt+0x83f8>
   19d04:	add	r7, sp, #32
   19d08:	add	r8, sp, #20
   19d0c:	add	r0, pc, r0
   19d10:	bl	13358 <__assert_fail@plt+0x172c>
   19d14:	mov	r2, #10
   19d18:	ldr	r1, [sp, #8]
   19d1c:	mov	r0, r7
   19d20:	bl	11bc0 <__gmpz_init_set_str@plt>
   19d24:	ldr	r0, [pc, #764]	; 1a028 <__assert_fail@plt+0x83fc>
   19d28:	mov	r1, r7
   19d2c:	add	r0, pc, r0
   19d30:	bl	119bc <__gmp_printf@plt>
   19d34:	mov	r0, r7
   19d38:	mov	r1, r8
   19d3c:	bl	13ec0 <__assert_fail@plt+0x2294>
   19d40:	ldr	r2, [sp, #28]
   19d44:	cmp	r2, #0
   19d48:	beq	19dac <__assert_fail@plt+0x8180>
   19d4c:	ldr	r6, [pc, #728]	; 1a02c <__assert_fail@plt+0x8400>
   19d50:	mov	sl, #0
   19d54:	ldr	r3, [sp, #24]
   19d58:	mov	r9, sl
   19d5c:	add	r6, pc, r6
   19d60:	ldr	r1, [r3, sl]
   19d64:	cmp	r1, #0
   19d68:	beq	19d9c <__assert_fail@plt+0x8170>
   19d6c:	add	r5, sl, sl, lsl #1
   19d70:	mov	r4, #0
   19d74:	ldr	r1, [sp, #20]
   19d78:	mov	r0, r6
   19d7c:	add	r4, r4, #1
   19d80:	add	r1, r1, r5
   19d84:	bl	119bc <__gmp_printf@plt>
   19d88:	ldr	r3, [sp, #24]
   19d8c:	ldr	r2, [r3, sl]
   19d90:	cmp	r2, r4
   19d94:	bhi	19d74 <__assert_fail@plt+0x8148>
   19d98:	ldr	r2, [sp, #28]
   19d9c:	add	r9, r9, #1
   19da0:	add	sl, sl, #4
   19da4:	cmp	r2, r9
   19da8:	bhi	19d60 <__assert_fail@plt+0x8134>
   19dac:	mov	r0, r8
   19db0:	bl	12474 <__assert_fail@plt+0x848>
   19db4:	mov	r0, r7
   19db8:	bl	11a94 <__gmpz_clear@plt>
   19dbc:	ldr	r3, [pc, #620]	; 1a030 <__assert_fail@plt+0x8404>
   19dc0:	ldr	r3, [fp, r3]
   19dc4:	ldr	r3, [r3]
   19dc8:	ldr	r2, [r3, #20]
   19dcc:	ldr	r1, [r3, #24]
   19dd0:	cmp	r2, r1
   19dd4:	bcs	1a008 <__assert_fail@plt+0x83dc>
   19dd8:	mov	r0, #1
   19ddc:	mov	r1, #10
   19de0:	add	ip, r2, r0
   19de4:	str	ip, [r3, #20]
   19de8:	strb	r1, [r2]
   19dec:	ldr	r7, [sp, #12]
   19df0:	ldr	r2, [sp, #316]	; 0x13c
   19df4:	ldr	r3, [r7]
   19df8:	cmp	r2, r3
   19dfc:	bne	1a018 <__assert_fail@plt+0x83ec>
   19e00:	add	sp, sp, #324	; 0x144
   19e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e08:	cmp	r1, #1
   19e0c:	beq	19d00 <__assert_fail@plt+0x80d4>
   19e10:	ldr	r1, [pc, #540]	; 1a034 <__assert_fail@plt+0x8408>
   19e14:	mov	r2, #5
   19e18:	mov	r0, #0
   19e1c:	add	r1, pc, r1
   19e20:	bl	118cc <dcgettext@plt>
   19e24:	mov	r4, r0
   19e28:	ldr	r0, [sp, #8]
   19e2c:	bl	1c87c <close_stdout@@Base+0x2638>
   19e30:	mov	r2, r4
   19e34:	mov	r3, r0
   19e38:	mov	r0, #0
   19e3c:	mov	r1, r0
   19e40:	bl	119b0 <error@plt>
   19e44:	mov	r0, #0
   19e48:	b	19dec <__assert_fail@plt+0x81c0>
   19e4c:	ldr	lr, [sp, #8]
   19e50:	b	19be8 <__assert_fail@plt+0x7fbc>
   19e54:	ldr	r0, [pc, #476]	; 1a038 <__assert_fail@plt+0x840c>
   19e58:	add	r0, pc, r0
   19e5c:	bl	13358 <__assert_fail@plt+0x172c>
   19e60:	mov	r1, r7
   19e64:	mov	r0, r6
   19e68:	mov	r2, r4
   19e6c:	mov	r3, r5
   19e70:	bl	131e0 <__assert_fail@plt+0x15b4>
   19e74:	ldr	r3, [pc, #436]	; 1a030 <__assert_fail@plt+0x8404>
   19e78:	ldr	r8, [fp, r3]
   19e7c:	ldr	r0, [r8]
   19e80:	ldr	r3, [r0, #20]
   19e84:	ldr	r2, [r0, #24]
   19e88:	cmp	r3, r2
   19e8c:	addcc	r1, r3, #1
   19e90:	movcc	r2, #58	; 0x3a
   19e94:	strcc	r1, [r0, #20]
   19e98:	strbcc	r2, [r3]
   19e9c:	bcs	19ff0 <__assert_fail@plt+0x83c4>
   19ea0:	mov	r3, r5
   19ea4:	mov	r0, r6
   19ea8:	mov	r1, r7
   19eac:	mov	r2, r4
   19eb0:	add	r5, sp, #32
   19eb4:	str	r5, [sp]
   19eb8:	bl	159b8 <__assert_fail@plt+0x3d8c>
   19ebc:	ldrb	r3, [sp, #282]	; 0x11a
   19ec0:	cmp	r3, #0
   19ec4:	beq	19f40 <__assert_fail@plt+0x8314>
   19ec8:	add	r4, sp, #256	; 0x100
   19ecc:	add	r7, sp, #292	; 0x124
   19ed0:	mov	r9, #0
   19ed4:	mov	r6, #32
   19ed8:	ldrb	r2, [r4], #1
   19edc:	cmp	r2, #0
   19ee0:	beq	19f30 <__assert_fail@plt+0x8304>
   19ee4:	mov	sl, #0
   19ee8:	ldr	r0, [r8]
   19eec:	ldr	r3, [r0, #20]
   19ef0:	ldr	r2, [r0, #24]
   19ef4:	cmp	r3, r2
   19ef8:	addcc	r2, r3, #1
   19efc:	strcc	r2, [r0, #20]
   19f00:	strbcc	r6, [r3]
   19f04:	bcs	19fe4 <__assert_fail@plt+0x83b8>
   19f08:	ldrd	r0, [r5, #16]
   19f0c:	mov	r2, r7
   19f10:	bl	1a400 <close_stdout@@Base+0x1bc>
   19f14:	ldr	r1, [r8]
   19f18:	bl	117e8 <fputs_unlocked@plt>
   19f1c:	ldrb	r3, [r4, #-1]
   19f20:	add	sl, sl, #1
   19f24:	cmp	sl, r3
   19f28:	bcc	19ee8 <__assert_fail@plt+0x82bc>
   19f2c:	ldrb	r3, [sp, #282]	; 0x11a
   19f30:	add	r9, r9, #1
   19f34:	add	r5, r5, #8
   19f38:	cmp	r9, r3
   19f3c:	bcc	19ed8 <__assert_fail@plt+0x82ac>
   19f40:	movw	r3, #65256	; 0xfee8
   19f44:	add	r7, sp, #320	; 0x140
   19f48:	movt	r3, #65535	; 0xffff
   19f4c:	ldrd	r2, [r3, r7]
   19f50:	orrs	ip, r2, r3
   19f54:	beq	19f9c <__assert_fail@plt+0x8370>
   19f58:	ldr	r0, [r8]
   19f5c:	ldr	r3, [r0, #20]
   19f60:	ldr	r2, [r0, #24]
   19f64:	cmp	r3, r2
   19f68:	addcc	r1, r3, #1
   19f6c:	strcc	r1, [r0, #20]
   19f70:	movcc	r2, #32
   19f74:	strbcc	r2, [r3]
   19f78:	bcs	19ffc <__assert_fail@plt+0x83d0>
   19f7c:	add	r6, sp, #320	; 0x140
   19f80:	movw	r2, #65256	; 0xfee8
   19f84:	movw	r3, #65248	; 0xfee0
   19f88:	movt	r2, #65535	; 0xffff
   19f8c:	movt	r3, #65535	; 0xffff
   19f90:	ldrd	r0, [r6, r2]
   19f94:	ldrd	r2, [r3, r6]
   19f98:	bl	131e0 <__assert_fail@plt+0x15b4>
   19f9c:	ldr	r0, [r8]
   19fa0:	ldr	r3, [r0, #20]
   19fa4:	ldr	r2, [r0, #24]
   19fa8:	cmp	r3, r2
   19fac:	addcc	r1, r3, #1
   19fb0:	strcc	r1, [r0, #20]
   19fb4:	movcc	r2, #10
   19fb8:	strbcc	r2, [r3]
   19fbc:	bcs	1a00c <__assert_fail@plt+0x83e0>
   19fc0:	mov	r0, #1
   19fc4:	b	19dec <__assert_fail@plt+0x81c0>
   19fc8:	mov	r6, #0
   19fcc:	mov	r7, #0
   19fd0:	mov	r4, r6
   19fd4:	mov	r5, r7
   19fd8:	mov	r2, r6
   19fdc:	mov	r3, r7
   19fe0:	b	19cf4 <__assert_fail@plt+0x80c8>
   19fe4:	mov	r1, #32
   19fe8:	bl	11b84 <__overflow@plt>
   19fec:	b	19f08 <__assert_fail@plt+0x82dc>
   19ff0:	mov	r1, #58	; 0x3a
   19ff4:	bl	11b84 <__overflow@plt>
   19ff8:	b	19ea0 <__assert_fail@plt+0x8274>
   19ffc:	mov	r1, #32
   1a000:	bl	11b84 <__overflow@plt>
   1a004:	b	19f7c <__assert_fail@plt+0x8350>
   1a008:	mov	r0, r3
   1a00c:	mov	r1, #10
   1a010:	bl	11b84 <__overflow@plt>
   1a014:	b	19fc0 <__assert_fail@plt+0x8394>
   1a018:	bl	118e4 <__stack_chk_fail@plt>
   1a01c:	andeq	sp, r1, r8, asr #8
   1a020:	andeq	r0, r0, ip, lsl #3
   1a024:	andeq	ip, r0, ip, ror #8
   1a028:	andeq	ip, r0, r4, ror r4
   1a02c:	andeq	ip, r0, ip, asr #8
   1a030:	andeq	r0, r0, ip, lsr #3
   1a034:	andeq	ip, r0, r8, lsr r3
   1a038:	ldrdeq	ip, [r0], -r4
   1a03c:	push	{r4, r5, r6, lr}
   1a040:	subs	r4, r0, #0
   1a044:	ldr	r5, [pc, #404]	; 1a1e0 <__assert_fail@plt+0x85b4>
   1a048:	add	r5, pc, r5
   1a04c:	beq	1a094 <__assert_fail@plt+0x8468>
   1a050:	ldr	r3, [pc, #396]	; 1a1e4 <__assert_fail@plt+0x85b8>
   1a054:	mov	r2, #5
   1a058:	ldr	r1, [pc, #392]	; 1a1e8 <__assert_fail@plt+0x85bc>
   1a05c:	mov	r0, #0
   1a060:	ldr	r3, [r5, r3]
   1a064:	add	r1, pc, r1
   1a068:	ldr	r6, [r3]
   1a06c:	bl	118cc <dcgettext@plt>
   1a070:	ldr	r3, [pc, #372]	; 1a1ec <__assert_fail@plt+0x85c0>
   1a074:	mov	r1, #1
   1a078:	ldr	r3, [r5, r3]
   1a07c:	ldr	r3, [r3]
   1a080:	mov	r2, r0
   1a084:	mov	r0, r6
   1a088:	bl	11b18 <__fprintf_chk@plt>
   1a08c:	mov	r0, r4
   1a090:	bl	11a4c <exit@plt>
   1a094:	ldr	r1, [pc, #340]	; 1a1f0 <__assert_fail@plt+0x85c4>
   1a098:	mov	r2, #5
   1a09c:	add	r1, pc, r1
   1a0a0:	bl	118cc <dcgettext@plt>
   1a0a4:	ldr	r3, [pc, #320]	; 1a1ec <__assert_fail@plt+0x85c0>
   1a0a8:	ldr	r6, [r5, r3]
   1a0ac:	ldr	r2, [r6]
   1a0b0:	mov	r3, r2
   1a0b4:	mov	r1, r0
   1a0b8:	mov	r0, #1
   1a0bc:	bl	11b00 <__printf_chk@plt>
   1a0c0:	ldr	r1, [pc, #300]	; 1a1f4 <__assert_fail@plt+0x85c8>
   1a0c4:	mov	r2, #5
   1a0c8:	mov	r0, r4
   1a0cc:	add	r1, pc, r1
   1a0d0:	bl	118cc <dcgettext@plt>
   1a0d4:	ldr	r3, [pc, #284]	; 1a1f8 <__assert_fail@plt+0x85cc>
   1a0d8:	ldr	r5, [r5, r3]
   1a0dc:	ldr	r1, [r5]
   1a0e0:	bl	117e8 <fputs_unlocked@plt>
   1a0e4:	ldr	r1, [pc, #272]	; 1a1fc <__assert_fail@plt+0x85d0>
   1a0e8:	mov	r2, #5
   1a0ec:	mov	r0, r4
   1a0f0:	add	r1, pc, r1
   1a0f4:	bl	118cc <dcgettext@plt>
   1a0f8:	ldr	r1, [r5]
   1a0fc:	bl	117e8 <fputs_unlocked@plt>
   1a100:	ldr	r1, [pc, #248]	; 1a200 <__assert_fail@plt+0x85d4>
   1a104:	mov	r2, #5
   1a108:	mov	r0, r4
   1a10c:	add	r1, pc, r1
   1a110:	bl	118cc <dcgettext@plt>
   1a114:	ldr	r1, [r5]
   1a118:	bl	117e8 <fputs_unlocked@plt>
   1a11c:	ldr	r1, [pc, #224]	; 1a204 <__assert_fail@plt+0x85d8>
   1a120:	mov	r2, #5
   1a124:	mov	r0, r4
   1a128:	add	r1, pc, r1
   1a12c:	bl	118cc <dcgettext@plt>
   1a130:	ldr	r2, [pc, #208]	; 1a208 <__assert_fail@plt+0x85dc>
   1a134:	ldr	r3, [pc, #208]	; 1a20c <__assert_fail@plt+0x85e0>
   1a138:	add	r2, pc, r2
   1a13c:	add	r3, pc, r3
   1a140:	mov	r1, r0
   1a144:	mov	r0, #1
   1a148:	bl	11b00 <__printf_chk@plt>
   1a14c:	mov	r0, #5
   1a150:	mov	r1, r4
   1a154:	bl	11b90 <setlocale@plt>
   1a158:	cmp	r0, #0
   1a15c:	beq	1a178 <__assert_fail@plt+0x854c>
   1a160:	ldr	r1, [pc, #168]	; 1a210 <__assert_fail@plt+0x85e4>
   1a164:	mov	r2, #3
   1a168:	add	r1, pc, r1
   1a16c:	bl	11bfc <strncmp@plt>
   1a170:	cmp	r0, #0
   1a174:	bne	1a1ac <__assert_fail@plt+0x8580>
   1a178:	ldr	r1, [pc, #148]	; 1a214 <__assert_fail@plt+0x85e8>
   1a17c:	mov	r2, #5
   1a180:	mov	r0, #0
   1a184:	add	r1, pc, r1
   1a188:	bl	118cc <dcgettext@plt>
   1a18c:	mov	r5, r0
   1a190:	ldr	r0, [r6]
   1a194:	bl	1a35c <close_stdout@@Base+0x118>
   1a198:	mov	r1, r5
   1a19c:	mov	r2, r0
   1a1a0:	mov	r0, #1
   1a1a4:	bl	11b00 <__printf_chk@plt>
   1a1a8:	b	1a08c <__assert_fail@plt+0x8460>
   1a1ac:	ldr	r1, [pc, #100]	; 1a218 <__assert_fail@plt+0x85ec>
   1a1b0:	mov	r2, #5
   1a1b4:	mov	r0, r4
   1a1b8:	add	r1, pc, r1
   1a1bc:	bl	118cc <dcgettext@plt>
   1a1c0:	mov	r5, r0
   1a1c4:	ldr	r0, [r6]
   1a1c8:	bl	1a35c <close_stdout@@Base+0x118>
   1a1cc:	mov	r1, r5
   1a1d0:	mov	r2, r0
   1a1d4:	mov	r0, #1
   1a1d8:	bl	11b00 <__printf_chk@plt>
   1a1dc:	b	1a178 <__assert_fail@plt+0x854c>
   1a1e0:			; <UNDEFINED> instruction: 0x0001cfb0
   1a1e4:	muleq	r0, r8, r1
   1a1e8:	andeq	ip, r0, ip, asr #2
   1a1ec:			; <UNDEFINED> instruction: 0x000001b8
   1a1f0:	andeq	ip, r0, ip, lsr r1
   1a1f4:	andeq	ip, r0, r4, lsr r1
   1a1f8:	andeq	r0, r0, ip, lsr #3
   1a1fc:	muleq	r0, r8, r1
   1a200:	andeq	ip, r0, ip, lsr #3
   1a204:	andeq	ip, r0, r8, asr #3
   1a208:	ldrdeq	ip, [r0], -r0
   1a20c:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   1a210:	ldrdeq	ip, [r0], -r8
   1a214:	andeq	ip, r0, r8, lsl #4
   1a218:	andeq	ip, r0, ip, lsl #3
   1a21c:	ldr	r3, [pc, #8]	; 1a22c <__assert_fail@plt+0x8600>
   1a220:	add	r3, pc, r3
   1a224:	str	r0, [r3]
   1a228:	bx	lr
   1a22c:	strdeq	ip, [r1], -r8
   1a230:	ldr	r3, [pc, #8]	; 1a240 <__assert_fail@plt+0x8614>
   1a234:	add	r3, pc, r3
   1a238:	strb	r0, [r3, #4]
   1a23c:	bx	lr
   1a240:	andeq	ip, r1, r4, ror #31

0001a244 <close_stdout@@Base>:
   1a244:	push	{r4, r5, r6, r7, lr}
   1a248:	sub	sp, sp, #12
   1a24c:	ldr	r4, [pc, #228]	; 1a338 <close_stdout@@Base+0xf4>
   1a250:	ldr	r3, [pc, #228]	; 1a33c <close_stdout@@Base+0xf8>
   1a254:	add	r4, pc, r4
   1a258:	ldr	r3, [r4, r3]
   1a25c:	ldr	r0, [r3]
   1a260:	bl	1dc68 <close_stdout@@Base+0x3a24>
   1a264:	cmp	r0, #0
   1a268:	beq	1a290 <close_stdout@@Base+0x4c>
   1a26c:	ldr	r3, [pc, #204]	; 1a340 <close_stdout@@Base+0xfc>
   1a270:	add	r3, pc, r3
   1a274:	ldrb	r3, [r3, #4]
   1a278:	cmp	r3, #0
   1a27c:	beq	1a2b0 <close_stdout@@Base+0x6c>
   1a280:	bl	11aa0 <__errno_location@plt>
   1a284:	ldr	r3, [r0]
   1a288:	cmp	r3, #32
   1a28c:	bne	1a2b0 <close_stdout@@Base+0x6c>
   1a290:	ldr	r3, [pc, #172]	; 1a344 <close_stdout@@Base+0x100>
   1a294:	ldr	r3, [r4, r3]
   1a298:	ldr	r0, [r3]
   1a29c:	bl	1dc68 <close_stdout@@Base+0x3a24>
   1a2a0:	cmp	r0, #0
   1a2a4:	bne	1a304 <close_stdout@@Base+0xc0>
   1a2a8:	add	sp, sp, #12
   1a2ac:	pop	{r4, r5, r6, r7, pc}
   1a2b0:	ldr	r1, [pc, #144]	; 1a348 <close_stdout@@Base+0x104>
   1a2b4:	mov	r0, #0
   1a2b8:	mov	r2, #5
   1a2bc:	add	r1, pc, r1
   1a2c0:	bl	118cc <dcgettext@plt>
   1a2c4:	ldr	r3, [pc, #128]	; 1a34c <close_stdout@@Base+0x108>
   1a2c8:	ldr	r5, [pc, r3]
   1a2cc:	cmp	r5, #0
   1a2d0:	mov	r6, r0
   1a2d4:	beq	1a314 <close_stdout@@Base+0xd0>
   1a2d8:	bl	11aa0 <__errno_location@plt>
   1a2dc:	ldr	r7, [r0]
   1a2e0:	mov	r0, r5
   1a2e4:	bl	1c728 <close_stdout@@Base+0x24e4>
   1a2e8:	ldr	r2, [pc, #96]	; 1a350 <close_stdout@@Base+0x10c>
   1a2ec:	str	r6, [sp]
   1a2f0:	mov	r1, r7
   1a2f4:	add	r2, pc, r2
   1a2f8:	mov	r3, r0
   1a2fc:	mov	r0, #0
   1a300:	bl	119b0 <error@plt>
   1a304:	ldr	r3, [pc, #72]	; 1a354 <close_stdout@@Base+0x110>
   1a308:	ldr	r3, [r4, r3]
   1a30c:	ldr	r0, [r3]
   1a310:	bl	11890 <_exit@plt>
   1a314:	bl	11aa0 <__errno_location@plt>
   1a318:	ldr	r2, [pc, #56]	; 1a358 <close_stdout@@Base+0x114>
   1a31c:	add	r2, pc, r2
   1a320:	mov	r3, r0
   1a324:	mov	r0, r5
   1a328:	ldr	r1, [r3]
   1a32c:	mov	r3, r6
   1a330:	bl	119b0 <error@plt>
   1a334:	b	1a304 <close_stdout@@Base+0xc0>
   1a338:	andeq	ip, r1, r4, lsr #27
   1a33c:	andeq	r0, r0, ip, lsr #3
   1a340:	andeq	ip, r1, r8, lsr #31
   1a344:	muleq	r0, r8, r1
   1a348:	andeq	ip, r0, r8, lsr #3
   1a34c:	andeq	ip, r1, r0, asr pc
   1a350:	andeq	ip, r0, ip, ror r1
   1a354:			; <UNDEFINED> instruction: 0x000001b0
   1a358:	andeq	ip, r0, r8, asr r1
   1a35c:	ldrb	r3, [r0]
   1a360:	cmp	r3, #47	; 0x2f
   1a364:	bne	1a380 <close_stdout@@Base+0x13c>
   1a368:	add	r2, r0, #1
   1a36c:	mov	r0, r2
   1a370:	add	r2, r2, #1
   1a374:	ldrb	r3, [r0]
   1a378:	cmp	r3, #47	; 0x2f
   1a37c:	beq	1a36c <close_stdout@@Base+0x128>
   1a380:	cmp	r3, #0
   1a384:	bxeq	lr
   1a388:	mov	r2, r0
   1a38c:	mov	r1, #0
   1a390:	cmp	r3, #47	; 0x2f
   1a394:	moveq	r1, #1
   1a398:	beq	1a3a8 <close_stdout@@Base+0x164>
   1a39c:	cmp	r1, #0
   1a3a0:	movne	r0, r2
   1a3a4:	movne	r1, #0
   1a3a8:	ldrb	r3, [r2, #1]!
   1a3ac:	cmp	r3, #0
   1a3b0:	bne	1a390 <close_stdout@@Base+0x14c>
   1a3b4:	bx	lr
   1a3b8:	push	{r4, lr}
   1a3bc:	mov	r4, r0
   1a3c0:	bl	11a64 <strlen@plt>
   1a3c4:	cmp	r0, #1
   1a3c8:	popls	{r4, pc}
   1a3cc:	sub	r3, r0, #1
   1a3d0:	ldrb	r2, [r4, r3]
   1a3d4:	cmp	r2, #47	; 0x2f
   1a3d8:	popne	{r4, pc}
   1a3dc:	mov	r0, r3
   1a3e0:	cmp	r0, #1
   1a3e4:	sub	r3, r3, #1
   1a3e8:	beq	1a3fc <close_stdout@@Base+0x1b8>
   1a3ec:	ldrb	r2, [r4, r3]
   1a3f0:	cmp	r2, #47	; 0x2f
   1a3f4:	popne	{r4, pc}
   1a3f8:	b	1a3dc <close_stdout@@Base+0x198>
   1a3fc:	pop	{r4, pc}
   1a400:	push	{r3, r4, r5, r6, r7, lr}
   1a404:	add	r6, r2, #19
   1a408:	mov	r4, r0
   1a40c:	mov	r5, r1
   1a410:	mov	r3, #0
   1a414:	strb	r3, [r2, #20]
   1a418:	mov	r0, r4
   1a41c:	mov	r1, r5
   1a420:	mov	r2, #10
   1a424:	mov	r3, #0
   1a428:	bl	22264 <close_stdout@@Base+0x8020>
   1a42c:	mov	r7, r6
   1a430:	mov	r0, r4
   1a434:	mov	r1, r5
   1a438:	mov	r3, #0
   1a43c:	add	ip, r2, #48	; 0x30
   1a440:	mov	r2, #10
   1a444:	strb	ip, [r6], #-1
   1a448:	bl	22264 <close_stdout@@Base+0x8020>
   1a44c:	mov	r4, r0
   1a450:	mov	r5, r1
   1a454:	orrs	r3, r4, r5
   1a458:	bne	1a418 <close_stdout@@Base+0x1d4>
   1a45c:	mov	r0, r7
   1a460:	pop	{r3, r4, r5, r6, r7, pc}
   1a464:	push	{r3, r4, r5, r6, r7, lr}
   1a468:	subs	r4, r0, #0
   1a46c:	ldr	r5, [pc, #172]	; 1a520 <close_stdout@@Base+0x2dc>
   1a470:	add	r5, pc, r5
   1a474:	beq	1a4fc <close_stdout@@Base+0x2b8>
   1a478:	mov	r1, #47	; 0x2f
   1a47c:	bl	11b9c <strrchr@plt>
   1a480:	subs	r6, r0, #0
   1a484:	beq	1a4e0 <close_stdout@@Base+0x29c>
   1a488:	add	r7, r6, #1
   1a48c:	rsb	r3, r4, r7
   1a490:	cmp	r3, #6
   1a494:	ble	1a4e0 <close_stdout@@Base+0x29c>
   1a498:	ldr	r1, [pc, #132]	; 1a524 <close_stdout@@Base+0x2e0>
   1a49c:	sub	r0, r6, #6
   1a4a0:	mov	r2, #7
   1a4a4:	add	r1, pc, r1
   1a4a8:	bl	11bfc <strncmp@plt>
   1a4ac:	cmp	r0, #0
   1a4b0:	bne	1a4e0 <close_stdout@@Base+0x29c>
   1a4b4:	ldr	r1, [pc, #108]	; 1a528 <close_stdout@@Base+0x2e4>
   1a4b8:	mov	r0, r7
   1a4bc:	mov	r2, #3
   1a4c0:	add	r1, pc, r1
   1a4c4:	bl	11bfc <strncmp@plt>
   1a4c8:	cmp	r0, #0
   1a4cc:	movne	r4, r7
   1a4d0:	ldreq	r3, [pc, #84]	; 1a52c <close_stdout@@Base+0x2e8>
   1a4d4:	addeq	r4, r6, #4
   1a4d8:	ldreq	r3, [r5, r3]
   1a4dc:	streq	r4, [r3]
   1a4e0:	ldr	r2, [pc, #72]	; 1a530 <close_stdout@@Base+0x2ec>
   1a4e4:	ldr	r3, [pc, #72]	; 1a534 <close_stdout@@Base+0x2f0>
   1a4e8:	ldr	r2, [r5, r2]
   1a4ec:	str	r4, [r2]
   1a4f0:	ldr	r3, [r5, r3]
   1a4f4:	str	r4, [r3]
   1a4f8:	pop	{r3, r4, r5, r6, r7, pc}
   1a4fc:	ldr	r3, [pc, #52]	; 1a538 <close_stdout@@Base+0x2f4>
   1a500:	mov	r1, #1
   1a504:	ldr	r0, [pc, #48]	; 1a53c <close_stdout@@Base+0x2f8>
   1a508:	mov	r2, #55	; 0x37
   1a50c:	ldr	r3, [r5, r3]
   1a510:	add	r0, pc, r0
   1a514:	ldr	r3, [r3]
   1a518:	bl	1195c <fwrite@plt>
   1a51c:	bl	11c08 <abort@plt>
   1a520:	andeq	ip, r1, r8, lsl #23
   1a524:	andeq	ip, r0, ip
   1a528:	strdeq	fp, [r0], -r8
   1a52c:	andeq	r0, r0, r0, asr #3
   1a530:			; <UNDEFINED> instruction: 0x000001b8
   1a534:			; <UNDEFINED> instruction: 0x000001b4
   1a538:	muleq	r0, r8, r1
   1a53c:	andeq	fp, r0, r8, ror #30
   1a540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a544:	sub	sp, sp, #156	; 0x9c
   1a548:	ldr	r7, [pc, #2116]	; 1ad94 <close_stdout@@Base+0xb50>
   1a54c:	add	r2, sp, #120	; 0x78
   1a550:	ldr	r3, [pc, #2112]	; 1ad98 <close_stdout@@Base+0xb54>
   1a554:	mov	fp, r0
   1a558:	add	r7, pc, r7
   1a55c:	mov	r0, r1
   1a560:	mov	r1, #2
   1a564:	add	r6, sp, #40	; 0x28
   1a568:	ldr	r3, [r7, r3]
   1a56c:	add	r9, sp, #96	; 0x60
   1a570:	str	r2, [sp, #16]
   1a574:	mov	r4, #1
   1a578:	mov	r5, #0
   1a57c:	str	r3, [sp, #28]
   1a580:	add	r3, sp, #64	; 0x40
   1a584:	ldr	r2, [sp, #28]
   1a588:	str	r3, [sp, #12]
   1a58c:	ldr	r3, [r2]
   1a590:	str	r3, [sp, #148]	; 0x94
   1a594:	bl	1ccb0 <close_stdout@@Base+0x2a6c>
   1a598:	str	r0, [sp, #20]
   1a59c:	ldrb	r3, [fp]
   1a5a0:	cmp	r3, #0
   1a5a4:	beq	1ab9c <close_stdout@@Base+0x958>
   1a5a8:	mov	r0, fp
   1a5ac:	ldr	r1, [sp, #20]
   1a5b0:	bl	1ec60 <close_stdout@@Base+0x4a1c>
   1a5b4:	subs	r8, r0, #0
   1a5b8:	beq	1ab9c <close_stdout@@Base+0x958>
   1a5bc:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1a5c0:	cmp	r0, #1
   1a5c4:	bls	1ab1c <close_stdout@@Base+0x8d8>
   1a5c8:	cmp	fp, r8
   1a5cc:	str	r5, [r6, #4]
   1a5d0:	str	fp, [sp, #52]	; 0x34
   1a5d4:	addcc	sl, sp, #64	; 0x40
   1a5d8:	strb	r5, [sp, #36]	; 0x24
   1a5dc:	str	r5, [r6]
   1a5e0:	strb	r5, [sp, #48]	; 0x30
   1a5e4:	strcc	r9, [sp, #24]
   1a5e8:	bcs	1abbc <close_stdout@@Base+0x978>
   1a5ec:	ldrb	r3, [sp, #36]	; 0x24
   1a5f0:	cmp	r3, #0
   1a5f4:	bne	1a654 <close_stdout@@Base+0x410>
   1a5f8:	ldr	r2, [pc, #1948]	; 1ad9c <close_stdout@@Base+0xb58>
   1a5fc:	ldrb	r3, [fp]
   1a600:	ldr	r1, [r7, r2]
   1a604:	and	r2, r3, #31
   1a608:	lsr	r3, r3, #5
   1a60c:	ldr	r3, [r1, r3, lsl #2]
   1a610:	lsr	r3, r3, r2
   1a614:	tst	r3, #1
   1a618:	beq	1a640 <close_stdout@@Base+0x3fc>
   1a61c:	str	r4, [sp, #56]	; 0x38
   1a620:	ldrb	r2, [fp]
   1a624:	strb	r4, [sp, #60]	; 0x3c
   1a628:	strb	r4, [sp, #48]	; 0x30
   1a62c:	mov	r9, r2
   1a630:	cmp	r9, #0
   1a634:	str	r2, [sp, #64]	; 0x40
   1a638:	bne	1a6d8 <close_stdout@@Base+0x494>
   1a63c:	bl	11c08 <abort@plt>
   1a640:	mov	r0, r6
   1a644:	bl	118b4 <mbsinit@plt>
   1a648:	cmp	r0, #0
   1a64c:	beq	1ad50 <close_stdout@@Base+0xb0c>
   1a650:	strb	r4, [sp, #36]	; 0x24
   1a654:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1a658:	mov	r1, r0
   1a65c:	mov	r0, fp
   1a660:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1a664:	mov	r1, fp
   1a668:	mov	r3, r6
   1a66c:	mov	r2, r0
   1a670:	mov	r0, sl
   1a674:	bl	119a4 <mbrtowc@plt>
   1a678:	cmn	r0, #1
   1a67c:	str	r0, [sp, #56]	; 0x38
   1a680:	beq	1aac4 <close_stdout@@Base+0x880>
   1a684:	cmn	r0, #2
   1a688:	beq	1aaf4 <close_stdout@@Base+0x8b0>
   1a68c:	cmp	r0, #0
   1a690:	bne	1aaec <close_stdout@@Base+0x8a8>
   1a694:	ldr	fp, [sp, #52]	; 0x34
   1a698:	str	r4, [sp, #56]	; 0x38
   1a69c:	ldrb	r3, [fp]
   1a6a0:	cmp	r3, #0
   1a6a4:	bne	1ad74 <close_stdout@@Base+0xb30>
   1a6a8:	ldr	r2, [sp, #64]	; 0x40
   1a6ac:	cmp	r2, #0
   1a6b0:	bne	1aaa4 <close_stdout@@Base+0x860>
   1a6b4:	mov	r9, r2
   1a6b8:	mov	r0, r6
   1a6bc:	strb	r4, [sp, #60]	; 0x3c
   1a6c0:	bl	118b4 <mbsinit@plt>
   1a6c4:	strb	r4, [sp, #48]	; 0x30
   1a6c8:	cmp	r0, #0
   1a6cc:	strbne	r5, [sp, #36]	; 0x24
   1a6d0:	cmp	r9, #0
   1a6d4:	beq	1a63c <close_stdout@@Base+0x3f8>
   1a6d8:	ldr	fp, [sp, #52]	; 0x34
   1a6dc:	ldr	r3, [sp, #56]	; 0x38
   1a6e0:	strb	r5, [sp, #48]	; 0x30
   1a6e4:	add	fp, fp, r3
   1a6e8:	ldrb	r3, [sp, #60]	; 0x3c
   1a6ec:	cmp	r8, fp
   1a6f0:	str	fp, [sp, #52]	; 0x34
   1a6f4:	bhi	1a5ec <close_stdout@@Base+0x3a8>
   1a6f8:	cmp	r3, #0
   1a6fc:	mov	r2, r9
   1a700:	ldr	r9, [sp, #24]
   1a704:	beq	1abbc <close_stdout@@Base+0x978>
   1a708:	mov	r0, r2
   1a70c:	bl	11aac <iswalnum@plt>
   1a710:	rsbs	r0, r0, #1
   1a714:	movcc	r0, #0
   1a718:	str	r0, [sp, #24]
   1a71c:	strb	r5, [sp, #92]	; 0x5c
   1a720:	ldrb	r2, [sp, #92]	; 0x5c
   1a724:	ldr	fp, [sp, #20]
   1a728:	cmp	r2, #0
   1a72c:	str	r5, [r6, #4]
   1a730:	str	r5, [r9, #4]
   1a734:	str	r8, [sp, #52]	; 0x34
   1a738:	strb	r5, [sp, #36]	; 0x24
   1a73c:	str	r5, [r6]
   1a740:	strb	r5, [sp, #48]	; 0x30
   1a744:	str	fp, [sp, #108]	; 0x6c
   1a748:	str	r5, [r9]
   1a74c:	strb	r5, [sp, #104]	; 0x68
   1a750:	bne	1a90c <close_stdout@@Base+0x6c8>
   1a754:	ldr	r1, [pc, #1600]	; 1ad9c <close_stdout@@Base+0xb58>
   1a758:	ldrb	r2, [fp]
   1a75c:	ldr	r0, [r7, r1]
   1a760:	and	r1, r2, #31
   1a764:	lsr	r2, r2, #5
   1a768:	ldr	r2, [r0, r2, lsl #2]
   1a76c:	lsr	r2, r2, r1
   1a770:	tst	r2, #1
   1a774:	beq	1aa6c <close_stdout@@Base+0x828>
   1a778:	str	r4, [sp, #112]	; 0x70
   1a77c:	ldrb	r3, [fp]
   1a780:	strb	r4, [sp, #116]	; 0x74
   1a784:	mov	fp, r3
   1a788:	str	r3, [sp, #120]	; 0x78
   1a78c:	cmp	fp, #0
   1a790:	strb	r4, [sp, #104]	; 0x68
   1a794:	mov	r3, #1
   1a798:	bne	1a8c0 <close_stdout@@Base+0x67c>
   1a79c:	ldrb	ip, [sp, #48]	; 0x30
   1a7a0:	cmp	ip, #0
   1a7a4:	bne	1ab10 <close_stdout@@Base+0x8cc>
   1a7a8:	ldrb	r2, [sp, #36]	; 0x24
   1a7ac:	ldr	sl, [sp, #52]	; 0x34
   1a7b0:	cmp	r2, #0
   1a7b4:	bne	1ac60 <close_stdout@@Base+0xa1c>
   1a7b8:	ldr	r1, [pc, #1500]	; 1ad9c <close_stdout@@Base+0xb58>
   1a7bc:	ldrb	r2, [sl]
   1a7c0:	ldr	r0, [r7, r1]
   1a7c4:	and	r1, r2, #31
   1a7c8:	lsr	r2, r2, #5
   1a7cc:	ldr	r2, [r0, r2, lsl #2]
   1a7d0:	lsr	r2, r2, r1
   1a7d4:	tst	r2, #1
   1a7d8:	beq	1ac3c <close_stdout@@Base+0x9f8>
   1a7dc:	str	r3, [sp, #56]	; 0x38
   1a7e0:	mov	ip, r3
   1a7e4:	ldrb	r2, [sl]
   1a7e8:	strb	r3, [sp, #60]	; 0x3c
   1a7ec:	mov	r3, r2
   1a7f0:	str	r2, [sp, #64]	; 0x40
   1a7f4:	strb	r4, [sp, #48]	; 0x30
   1a7f8:	cmp	ip, #0
   1a7fc:	beq	1a808 <close_stdout@@Base+0x5c4>
   1a800:	cmp	r3, #0
   1a804:	beq	1a824 <close_stdout@@Base+0x5e0>
   1a808:	ldrb	r2, [sp, #60]	; 0x3c
   1a80c:	cmp	r2, #0
   1a810:	beq	1a824 <close_stdout@@Base+0x5e0>
   1a814:	mov	r0, r3
   1a818:	bl	11aac <iswalnum@plt>
   1a81c:	cmp	r0, #0
   1a820:	bne	1a830 <close_stdout@@Base+0x5ec>
   1a824:	ldr	r2, [sp, #24]
   1a828:	cmp	r2, #0
   1a82c:	bne	1ad48 <close_stdout@@Base+0xb04>
   1a830:	ldr	r2, [pc, #1380]	; 1ad9c <close_stdout@@Base+0xb58>
   1a834:	str	r5, [r6, #4]
   1a838:	str	r8, [sp, #52]	; 0x34
   1a83c:	strb	r5, [sp, #36]	; 0x24
   1a840:	str	r5, [r6]
   1a844:	strb	r5, [sp, #48]	; 0x30
   1a848:	ldrb	r3, [r8]
   1a84c:	ldr	r1, [r7, r2]
   1a850:	and	r2, r3, #31
   1a854:	lsr	r3, r3, #5
   1a858:	ldr	r3, [r1, r3, lsl #2]
   1a85c:	lsr	r3, r3, r2
   1a860:	tst	r3, #1
   1a864:	beq	1abc8 <close_stdout@@Base+0x984>
   1a868:	str	r4, [sp, #56]	; 0x38
   1a86c:	ldrb	fp, [r8]
   1a870:	strb	r4, [sp, #60]	; 0x3c
   1a874:	str	fp, [sp, #64]	; 0x40
   1a878:	cmp	fp, #0
   1a87c:	strb	r4, [sp, #48]	; 0x30
   1a880:	bne	1abb0 <close_stdout@@Base+0x96c>
   1a884:	ldr	r0, [sp, #20]
   1a888:	bl	11884 <free@plt>
   1a88c:	ldr	r1, [sp, #28]
   1a890:	ldr	r2, [sp, #148]	; 0x94
   1a894:	mov	r0, fp
   1a898:	ldr	r3, [r1]
   1a89c:	cmp	r2, r3
   1a8a0:	bne	1ad70 <close_stdout@@Base+0xb2c>
   1a8a4:	add	sp, sp, #156	; 0x9c
   1a8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8ac:	ldr	r0, [sp, #108]	; 0x6c
   1a8b0:	bl	11a64 <strlen@plt>
   1a8b4:	strb	r5, [sp, #116]	; 0x74
   1a8b8:	str	r0, [sp, #112]	; 0x70
   1a8bc:	strb	r4, [sp, #104]	; 0x68
   1a8c0:	ldrb	fp, [sp, #48]	; 0x30
   1a8c4:	cmp	fp, #0
   1a8c8:	beq	1a970 <close_stdout@@Base+0x72c>
   1a8cc:	ldrb	fp, [sp, #60]	; 0x3c
   1a8d0:	cmp	fp, #0
   1a8d4:	bne	1a9c4 <close_stdout@@Base+0x780>
   1a8d8:	ldr	r1, [sp, #52]	; 0x34
   1a8dc:	ldr	r2, [sp, #56]	; 0x38
   1a8e0:	ldr	fp, [sp, #108]	; 0x6c
   1a8e4:	add	r1, r1, r2
   1a8e8:	ldr	r2, [sp, #112]	; 0x70
   1a8ec:	strb	r5, [sp, #48]	; 0x30
   1a8f0:	add	fp, fp, r2
   1a8f4:	ldrb	r2, [sp, #92]	; 0x5c
   1a8f8:	strb	r5, [sp, #104]	; 0x68
   1a8fc:	cmp	r2, #0
   1a900:	str	r1, [sp, #52]	; 0x34
   1a904:	str	fp, [sp, #108]	; 0x6c
   1a908:	beq	1a754 <close_stdout@@Base+0x510>
   1a90c:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1a910:	mov	r1, r0
   1a914:	mov	r0, fp
   1a918:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1a91c:	mov	r1, fp
   1a920:	mov	r3, r9
   1a924:	mov	r2, r0
   1a928:	add	r0, sp, #120	; 0x78
   1a92c:	bl	119a4 <mbrtowc@plt>
   1a930:	cmn	r0, #1
   1a934:	str	r0, [sp, #112]	; 0x70
   1a938:	strbeq	r5, [sp, #116]	; 0x74
   1a93c:	streq	r4, [sp, #112]	; 0x70
   1a940:	beq	1a8bc <close_stdout@@Base+0x678>
   1a944:	cmn	r0, #2
   1a948:	beq	1a8ac <close_stdout@@Base+0x668>
   1a94c:	cmp	r0, #0
   1a950:	beq	1aa84 <close_stdout@@Base+0x840>
   1a954:	ldr	fp, [sp, #120]	; 0x78
   1a958:	mov	r0, r9
   1a95c:	strb	r4, [sp, #116]	; 0x74
   1a960:	bl	118b4 <mbsinit@plt>
   1a964:	cmp	r0, #0
   1a968:	strbne	r5, [sp, #92]	; 0x5c
   1a96c:	b	1a78c <close_stdout@@Base+0x548>
   1a970:	ldrb	r3, [sp, #36]	; 0x24
   1a974:	ldr	sl, [sp, #52]	; 0x34
   1a978:	cmp	r3, #0
   1a97c:	bne	1a9e8 <close_stdout@@Base+0x7a4>
   1a980:	ldr	r1, [pc, #1044]	; 1ad9c <close_stdout@@Base+0xb58>
   1a984:	ldrb	r2, [sl]
   1a988:	ldr	r0, [r7, r1]
   1a98c:	and	r1, r2, #31
   1a990:	lsr	r2, r2, #5
   1a994:	ldr	r2, [r0, r2, lsl #2]
   1a998:	lsr	r2, r2, r1
   1a99c:	tst	r2, #1
   1a9a0:	beq	1a9d4 <close_stdout@@Base+0x790>
   1a9a4:	str	r4, [sp, #56]	; 0x38
   1a9a8:	mov	fp, #1
   1a9ac:	ldrb	r3, [sl]
   1a9b0:	strb	r4, [sp, #60]	; 0x3c
   1a9b4:	str	r3, [sp, #64]	; 0x40
   1a9b8:	cmp	fp, #0
   1a9bc:	strb	r4, [sp, #48]	; 0x30
   1a9c0:	beq	1a8d8 <close_stdout@@Base+0x694>
   1a9c4:	ldr	r3, [sp, #64]	; 0x40
   1a9c8:	cmp	r3, #0
   1a9cc:	bne	1a8d8 <close_stdout@@Base+0x694>
   1a9d0:	b	1a63c <close_stdout@@Base+0x3f8>
   1a9d4:	mov	r0, r6
   1a9d8:	bl	118b4 <mbsinit@plt>
   1a9dc:	cmp	r0, #0
   1a9e0:	beq	1ad50 <close_stdout@@Base+0xb0c>
   1a9e4:	strb	r4, [sp, #36]	; 0x24
   1a9e8:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1a9ec:	mov	r1, r0
   1a9f0:	mov	r0, sl
   1a9f4:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1a9f8:	mov	r1, sl
   1a9fc:	mov	r3, r6
   1aa00:	mov	r2, r0
   1aa04:	add	r0, sp, #64	; 0x40
   1aa08:	bl	119a4 <mbrtowc@plt>
   1aa0c:	cmn	r0, #1
   1aa10:	str	r0, [sp, #56]	; 0x38
   1aa14:	strbeq	r5, [sp, #60]	; 0x3c
   1aa18:	streq	r4, [sp, #56]	; 0x38
   1aa1c:	beq	1a9b8 <close_stdout@@Base+0x774>
   1aa20:	cmn	r0, #2
   1aa24:	beq	1aad8 <close_stdout@@Base+0x894>
   1aa28:	cmp	r0, #0
   1aa2c:	bne	1aa50 <close_stdout@@Base+0x80c>
   1aa30:	ldr	r3, [sp, #52]	; 0x34
   1aa34:	str	r4, [sp, #56]	; 0x38
   1aa38:	ldrb	r3, [r3]
   1aa3c:	cmp	r3, #0
   1aa40:	bne	1ad74 <close_stdout@@Base+0xb30>
   1aa44:	ldr	r3, [sp, #64]	; 0x40
   1aa48:	cmp	r3, #0
   1aa4c:	bne	1aaa4 <close_stdout@@Base+0x860>
   1aa50:	mov	r0, r6
   1aa54:	strb	r4, [sp, #60]	; 0x3c
   1aa58:	bl	118b4 <mbsinit@plt>
   1aa5c:	mov	fp, #1
   1aa60:	cmp	r0, #0
   1aa64:	strbne	r5, [sp, #36]	; 0x24
   1aa68:	b	1a9b8 <close_stdout@@Base+0x774>
   1aa6c:	mov	r0, r9
   1aa70:	bl	118b4 <mbsinit@plt>
   1aa74:	cmp	r0, #0
   1aa78:	beq	1ad50 <close_stdout@@Base+0xb0c>
   1aa7c:	strb	r4, [sp, #92]	; 0x5c
   1aa80:	b	1a90c <close_stdout@@Base+0x6c8>
   1aa84:	ldr	r3, [sp, #108]	; 0x6c
   1aa88:	str	r4, [sp, #112]	; 0x70
   1aa8c:	ldrb	r3, [r3]
   1aa90:	cmp	r3, #0
   1aa94:	bne	1ad74 <close_stdout@@Base+0xb30>
   1aa98:	ldr	fp, [sp, #120]	; 0x78
   1aa9c:	cmp	fp, #0
   1aaa0:	beq	1a958 <close_stdout@@Base+0x714>
   1aaa4:	ldr	r0, [pc, #756]	; 1ada0 <close_stdout@@Base+0xb5c>
   1aaa8:	mov	r2, #179	; 0xb3
   1aaac:	ldr	r1, [pc, #752]	; 1ada4 <close_stdout@@Base+0xb60>
   1aab0:	ldr	r3, [pc, #752]	; 1ada8 <close_stdout@@Base+0xb64>
   1aab4:	add	r0, pc, r0
   1aab8:	add	r1, pc, r1
   1aabc:	add	r3, pc, r3
   1aac0:	bl	11c2c <__assert_fail@plt>
   1aac4:	str	r4, [sp, #56]	; 0x38
   1aac8:	strb	r5, [sp, #60]	; 0x3c
   1aacc:	ldr	r9, [sp, #64]	; 0x40
   1aad0:	ldr	fp, [sp, #52]	; 0x34
   1aad4:	b	1a6dc <close_stdout@@Base+0x498>
   1aad8:	ldr	r0, [sp, #52]	; 0x34
   1aadc:	bl	11a64 <strlen@plt>
   1aae0:	strb	r5, [sp, #60]	; 0x3c
   1aae4:	str	r0, [sp, #56]	; 0x38
   1aae8:	b	1a9b8 <close_stdout@@Base+0x774>
   1aaec:	ldr	r9, [sp, #64]	; 0x40
   1aaf0:	b	1a6b8 <close_stdout@@Base+0x474>
   1aaf4:	ldr	fp, [sp, #52]	; 0x34
   1aaf8:	mov	r0, fp
   1aafc:	bl	11a64 <strlen@plt>
   1ab00:	strb	r5, [sp, #60]	; 0x3c
   1ab04:	ldr	r9, [sp, #64]	; 0x40
   1ab08:	str	r0, [sp, #56]	; 0x38
   1ab0c:	b	1a6dc <close_stdout@@Base+0x498>
   1ab10:	ldr	r3, [sp, #64]	; 0x40
   1ab14:	ldrb	ip, [sp, #60]	; 0x3c
   1ab18:	b	1a7f8 <close_stdout@@Base+0x5b4>
   1ab1c:	cmp	fp, r8
   1ab20:	movcs	fp, #1
   1ab24:	bcs	1ab44 <close_stdout@@Base+0x900>
   1ab28:	bl	11a40 <__ctype_b_loc@plt>
   1ab2c:	ldrb	r3, [r8, #-1]
   1ab30:	lsl	r3, r3, #1
   1ab34:	ldr	r2, [r0]
   1ab38:	ldrh	fp, [r2, r3]
   1ab3c:	eor	fp, fp, #8
   1ab40:	ubfx	fp, fp, #3, #1
   1ab44:	ldr	r0, [sp, #20]
   1ab48:	bl	11a64 <strlen@plt>
   1ab4c:	ldrb	r3, [r8, r0]
   1ab50:	cmp	r3, #0
   1ab54:	beq	1ab78 <close_stdout@@Base+0x934>
   1ab58:	str	r3, [sp, #8]
   1ab5c:	bl	11a40 <__ctype_b_loc@plt>
   1ab60:	ldr	r3, [sp, #8]
   1ab64:	lsl	r3, r3, #1
   1ab68:	ldr	r2, [r0]
   1ab6c:	ldrh	r3, [r2, r3]
   1ab70:	tst	r3, #8
   1ab74:	bne	1ab80 <close_stdout@@Base+0x93c>
   1ab78:	cmp	fp, #0
   1ab7c:	bne	1ad48 <close_stdout@@Base+0xb04>
   1ab80:	ldrb	r3, [r8]
   1ab84:	cmp	r3, #0
   1ab88:	beq	1ab9c <close_stdout@@Base+0x958>
   1ab8c:	add	fp, r8, #1
   1ab90:	ldrb	r3, [fp]
   1ab94:	cmp	r3, #0
   1ab98:	bne	1a5a8 <close_stdout@@Base+0x364>
   1ab9c:	mov	fp, #0
   1aba0:	b	1a884 <close_stdout@@Base+0x640>
   1aba4:	ldr	r0, [sp, #52]	; 0x34
   1aba8:	bl	11a64 <strlen@plt>
   1abac:	str	r0, [sp, #56]	; 0x38
   1abb0:	ldr	fp, [sp, #56]	; 0x38
   1abb4:	add	fp, r8, fp
   1abb8:	b	1a59c <close_stdout@@Base+0x358>
   1abbc:	mov	r3, #1
   1abc0:	str	r3, [sp, #24]
   1abc4:	b	1a71c <close_stdout@@Base+0x4d8>
   1abc8:	mov	r0, r6
   1abcc:	bl	118b4 <mbsinit@plt>
   1abd0:	cmp	r0, #0
   1abd4:	beq	1ad50 <close_stdout@@Base+0xb0c>
   1abd8:	strb	r4, [sp, #36]	; 0x24
   1abdc:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1abe0:	mov	r1, r0
   1abe4:	mov	r0, r8
   1abe8:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1abec:	mov	r1, r8
   1abf0:	mov	r3, r6
   1abf4:	mov	r2, r0
   1abf8:	add	r0, sp, #64	; 0x40
   1abfc:	bl	119a4 <mbrtowc@plt>
   1ac00:	cmn	r0, #1
   1ac04:	str	r0, [sp, #56]	; 0x38
   1ac08:	streq	r4, [sp, #56]	; 0x38
   1ac0c:	beq	1abb0 <close_stdout@@Base+0x96c>
   1ac10:	cmn	r0, #2
   1ac14:	beq	1aba4 <close_stdout@@Base+0x960>
   1ac18:	cmp	r0, #0
   1ac1c:	beq	1accc <close_stdout@@Base+0xa88>
   1ac20:	ldr	fp, [sp, #64]	; 0x40
   1ac24:	mov	r0, r6
   1ac28:	strb	r4, [sp, #60]	; 0x3c
   1ac2c:	bl	118b4 <mbsinit@plt>
   1ac30:	cmp	r0, #0
   1ac34:	strbne	r5, [sp, #36]	; 0x24
   1ac38:	b	1a878 <close_stdout@@Base+0x634>
   1ac3c:	mov	r0, r6
   1ac40:	str	r3, [sp, #8]
   1ac44:	str	ip, [sp, #4]
   1ac48:	bl	118b4 <mbsinit@plt>
   1ac4c:	ldr	r3, [sp, #8]
   1ac50:	ldr	ip, [sp, #4]
   1ac54:	cmp	r0, #0
   1ac58:	beq	1ad50 <close_stdout@@Base+0xb0c>
   1ac5c:	strb	r3, [sp, #36]	; 0x24
   1ac60:	str	ip, [sp, #4]
   1ac64:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1ac68:	mov	r1, r0
   1ac6c:	mov	r0, sl
   1ac70:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1ac74:	mov	r1, sl
   1ac78:	mov	r3, r6
   1ac7c:	mov	r2, r0
   1ac80:	add	r0, sp, #64	; 0x40
   1ac84:	bl	119a4 <mbrtowc@plt>
   1ac88:	ldr	ip, [sp, #4]
   1ac8c:	cmn	r0, #1
   1ac90:	str	r0, [sp, #56]	; 0x38
   1ac94:	beq	1ad18 <close_stdout@@Base+0xad4>
   1ac98:	cmn	r0, #2
   1ac9c:	beq	1ad28 <close_stdout@@Base+0xae4>
   1aca0:	cmp	r0, #0
   1aca4:	bne	1acf0 <close_stdout@@Base+0xaac>
   1aca8:	ldr	r3, [sp, #52]	; 0x34
   1acac:	str	r4, [sp, #56]	; 0x38
   1acb0:	ldrb	r3, [r3]
   1acb4:	cmp	r3, #0
   1acb8:	bne	1ad74 <close_stdout@@Base+0xb30>
   1acbc:	ldr	r3, [sp, #64]	; 0x40
   1acc0:	cmp	r3, #0
   1acc4:	beq	1acf4 <close_stdout@@Base+0xab0>
   1acc8:	b	1aaa4 <close_stdout@@Base+0x860>
   1accc:	ldr	r3, [sp, #52]	; 0x34
   1acd0:	str	r4, [sp, #56]	; 0x38
   1acd4:	ldrb	r3, [r3]
   1acd8:	cmp	r3, #0
   1acdc:	bne	1ad74 <close_stdout@@Base+0xb30>
   1ace0:	ldr	fp, [sp, #64]	; 0x40
   1ace4:	cmp	fp, #0
   1ace8:	beq	1ac24 <close_stdout@@Base+0x9e0>
   1acec:	b	1aaa4 <close_stdout@@Base+0x860>
   1acf0:	ldr	r3, [sp, #64]	; 0x40
   1acf4:	mov	r0, r6
   1acf8:	str	r3, [sp, #8]
   1acfc:	strb	r4, [sp, #60]	; 0x3c
   1ad00:	bl	118b4 <mbsinit@plt>
   1ad04:	ldr	r3, [sp, #8]
   1ad08:	mov	ip, #1
   1ad0c:	cmp	r0, #0
   1ad10:	strbne	r5, [sp, #36]	; 0x24
   1ad14:	b	1a7f4 <close_stdout@@Base+0x5b0>
   1ad18:	str	r4, [sp, #56]	; 0x38
   1ad1c:	strb	r5, [sp, #60]	; 0x3c
   1ad20:	ldr	r3, [sp, #64]	; 0x40
   1ad24:	b	1a7f4 <close_stdout@@Base+0x5b0>
   1ad28:	ldr	r0, [sp, #52]	; 0x34
   1ad2c:	str	ip, [sp, #4]
   1ad30:	bl	11a64 <strlen@plt>
   1ad34:	strb	r5, [sp, #60]	; 0x3c
   1ad38:	ldr	r3, [sp, #64]	; 0x40
   1ad3c:	ldr	ip, [sp, #4]
   1ad40:	str	r0, [sp, #56]	; 0x38
   1ad44:	b	1a7f4 <close_stdout@@Base+0x5b0>
   1ad48:	mov	fp, #1
   1ad4c:	b	1a884 <close_stdout@@Base+0x640>
   1ad50:	ldr	r0, [pc, #84]	; 1adac <close_stdout@@Base+0xb68>
   1ad54:	mov	r2, #150	; 0x96
   1ad58:	ldr	r1, [pc, #80]	; 1adb0 <close_stdout@@Base+0xb6c>
   1ad5c:	ldr	r3, [pc, #80]	; 1adb4 <close_stdout@@Base+0xb70>
   1ad60:	add	r0, pc, r0
   1ad64:	add	r1, pc, r1
   1ad68:	add	r3, pc, r3
   1ad6c:	bl	11c2c <__assert_fail@plt>
   1ad70:	bl	118e4 <__stack_chk_fail@plt>
   1ad74:	ldr	r0, [pc, #60]	; 1adb8 <close_stdout@@Base+0xb74>
   1ad78:	mov	r2, #178	; 0xb2
   1ad7c:	ldr	r1, [pc, #56]	; 1adbc <close_stdout@@Base+0xb78>
   1ad80:	ldr	r3, [pc, #56]	; 1adc0 <close_stdout@@Base+0xb7c>
   1ad84:	add	r0, pc, r0
   1ad88:	add	r1, pc, r1
   1ad8c:	add	r3, pc, r3
   1ad90:	bl	11c2c <__assert_fail@plt>
   1ad94:	andeq	ip, r1, r0, lsr #21
   1ad98:	andeq	r0, r0, ip, lsl #3
   1ad9c:	andeq	r0, r0, r8, lsl #3
   1ada0:	andeq	fp, r0, ip, asr sl
   1ada4:	andeq	fp, r0, r0, lsr sl
   1ada8:	andeq	fp, r0, r0, lsl #20
   1adac:	andeq	fp, r0, r0, ror r7
   1adb0:	andeq	fp, r0, r4, lsl #15
   1adb4:	andeq	fp, r0, r4, asr r7
   1adb8:	andeq	fp, r0, r4, ror r7
   1adbc:	andeq	fp, r0, r0, ror #14
   1adc0:	andeq	fp, r0, r0, lsr r7
   1adc4:	push	{r4, r5, r6, lr}
   1adc8:	mov	r1, r0
   1adcc:	mov	r4, r0
   1add0:	sub	sp, sp, #8
   1add4:	mov	r2, #5
   1add8:	mov	r0, #0
   1addc:	bl	118cc <dcgettext@plt>
   1ade0:	cmp	r0, r4
   1ade4:	mov	r5, r0
   1ade8:	moveq	r0, r0
   1adec:	beq	1ae04 <close_stdout@@Base+0xbc0>
   1adf0:	mov	r1, r4
   1adf4:	bl	1a540 <close_stdout@@Base+0x2fc>
   1adf8:	cmp	r0, #0
   1adfc:	mov	r0, r5
   1ae00:	beq	1ae0c <close_stdout@@Base+0xbc8>
   1ae04:	add	sp, sp, #8
   1ae08:	pop	{r4, r5, r6, pc}
   1ae0c:	bl	11a64 <strlen@plt>
   1ae10:	mov	r6, r0
   1ae14:	mov	r0, r4
   1ae18:	bl	11a64 <strlen@plt>
   1ae1c:	add	r0, r6, r0
   1ae20:	add	r0, r0, #4
   1ae24:	bl	1d804 <close_stdout@@Base+0x35c0>
   1ae28:	ldr	r3, [pc, #36]	; 1ae54 <close_stdout@@Base+0xc10>
   1ae2c:	str	r5, [sp]
   1ae30:	mov	r1, #1
   1ae34:	str	r4, [sp, #4]
   1ae38:	mvn	r2, #0
   1ae3c:	add	r3, pc, r3
   1ae40:	mov	r6, r0
   1ae44:	bl	11ab8 <__sprintf_chk@plt>
   1ae48:	mov	r0, r6
   1ae4c:	add	sp, sp, #8
   1ae50:	pop	{r4, r5, r6, pc}
   1ae54:	andeq	fp, r0, r8, ror #13
   1ae58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae5c:	mov	r6, r0
   1ae60:	sub	sp, sp, #12
   1ae64:	mov	r2, #5
   1ae68:	mov	r4, r1
   1ae6c:	mov	r0, #0
   1ae70:	mov	r1, r6
   1ae74:	ldr	r7, [pc, #640]	; 1b0fc <close_stdout@@Base+0xeb8>
   1ae78:	bl	118cc <dcgettext@plt>
   1ae7c:	add	r7, pc, r7
   1ae80:	mov	r8, r0
   1ae84:	bl	1dce8 <close_stdout@@Base+0x3aa4>
   1ae88:	mov	r1, r7
   1ae8c:	mov	r9, r0
   1ae90:	bl	1dbf8 <close_stdout@@Base+0x39b4>
   1ae94:	cmp	r0, #0
   1ae98:	moveq	r5, r0
   1ae9c:	moveq	r9, r4
   1aea0:	bne	1aeec <close_stdout@@Base+0xca8>
   1aea4:	cmp	r4, #0
   1aea8:	movne	sl, r4
   1aeac:	movne	r7, #0
   1aeb0:	beq	1afa4 <close_stdout@@Base+0xd60>
   1aeb4:	mov	r0, r8
   1aeb8:	mov	r1, r6
   1aebc:	bl	11824 <strcmp@plt>
   1aec0:	cmp	r0, #0
   1aec4:	bne	1afbc <close_stdout@@Base+0xd78>
   1aec8:	cmp	r5, r4
   1aecc:	cmpne	r5, #0
   1aed0:	bne	1b04c <close_stdout@@Base+0xe08>
   1aed4:	cmp	r7, r4
   1aed8:	cmpne	r7, #0
   1aedc:	moveq	r0, r4
   1aee0:	bne	1b038 <close_stdout@@Base+0xdf4>
   1aee4:	add	sp, sp, #12
   1aee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aeec:	mov	r2, r9
   1aef0:	mov	r1, r7
   1aef4:	mov	r0, r4
   1aef8:	bl	1dad8 <close_stdout@@Base+0x3894>
   1aefc:	mov	r5, r0
   1af00:	mov	r0, r9
   1af04:	bl	11a64 <strlen@plt>
   1af08:	mov	fp, r0
   1af0c:	add	r0, r0, #11
   1af10:	bl	1d804 <close_stdout@@Base+0x35c0>
   1af14:	mov	r1, r9
   1af18:	mov	r2, fp
   1af1c:	mov	sl, r0
   1af20:	bl	1189c <memcpy@plt>
   1af24:	ldr	r3, [pc, #468]	; 1b100 <close_stdout@@Base+0xebc>
   1af28:	add	ip, sl, fp
   1af2c:	mov	r2, sl
   1af30:	add	r3, pc, r3
   1af34:	ldm	r3!, {r0, r1}
   1af38:	ldrh	lr, [r3]
   1af3c:	ldrb	r3, [r3, #2]
   1af40:	str	r0, [sl, fp]
   1af44:	mov	r0, r4
   1af48:	str	r1, [ip, #4]
   1af4c:	mov	r1, r7
   1af50:	strh	lr, [ip, #8]
   1af54:	strb	r3, [ip, #10]
   1af58:	bl	1dad8 <close_stdout@@Base+0x3894>
   1af5c:	mov	r9, r0
   1af60:	mov	r0, sl
   1af64:	bl	11884 <free@plt>
   1af68:	cmp	r9, #0
   1af6c:	beq	1b0dc <close_stdout@@Base+0xe98>
   1af70:	mov	r0, r9
   1af74:	mov	r1, #63	; 0x3f
   1af78:	bl	11a70 <strchr@plt>
   1af7c:	cmp	r0, #0
   1af80:	beq	1b0c4 <close_stdout@@Base+0xe80>
   1af84:	mov	r0, r9
   1af88:	mov	r4, r5
   1af8c:	bl	11884 <free@plt>
   1af90:	cmp	r4, #0
   1af94:	mov	r9, #0
   1af98:	movne	sl, r4
   1af9c:	movne	r7, #0
   1afa0:	bne	1aeb4 <close_stdout@@Base+0xc70>
   1afa4:	cmp	r9, #0
   1afa8:	beq	1b0e4 <close_stdout@@Base+0xea0>
   1afac:	mov	r7, r4
   1afb0:	mov	sl, #0
   1afb4:	mov	r4, r9
   1afb8:	b	1aeb4 <close_stdout@@Base+0xc70>
   1afbc:	mov	r1, r6
   1afc0:	mov	r0, r8
   1afc4:	bl	1a540 <close_stdout@@Base+0x2fc>
   1afc8:	cmp	r0, #0
   1afcc:	bne	1b008 <close_stdout@@Base+0xdc4>
   1afd0:	cmp	sl, #0
   1afd4:	beq	1afec <close_stdout@@Base+0xda8>
   1afd8:	mov	r1, sl
   1afdc:	mov	r0, r8
   1afe0:	bl	1a540 <close_stdout@@Base+0x2fc>
   1afe4:	cmp	r0, #0
   1afe8:	bne	1b008 <close_stdout@@Base+0xdc4>
   1afec:	cmp	r9, #0
   1aff0:	beq	1b058 <close_stdout@@Base+0xe14>
   1aff4:	mov	r1, r9
   1aff8:	mov	r0, r8
   1affc:	bl	1a540 <close_stdout@@Base+0x2fc>
   1b000:	cmp	r0, #0
   1b004:	beq	1b058 <close_stdout@@Base+0xe14>
   1b008:	cmp	r5, #0
   1b00c:	beq	1b018 <close_stdout@@Base+0xdd4>
   1b010:	mov	r0, r5
   1b014:	bl	11884 <free@plt>
   1b018:	cmp	r7, #0
   1b01c:	moveq	r0, r8
   1b020:	beq	1aee4 <close_stdout@@Base+0xca0>
   1b024:	mov	r0, r7
   1b028:	bl	11884 <free@plt>
   1b02c:	mov	r0, r8
   1b030:	add	sp, sp, #12
   1b034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b038:	mov	r0, r7
   1b03c:	bl	11884 <free@plt>
   1b040:	mov	r0, r4
   1b044:	add	sp, sp, #12
   1b048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b04c:	mov	r0, r5
   1b050:	bl	11884 <free@plt>
   1b054:	b	1aed4 <close_stdout@@Base+0xc90>
   1b058:	mov	r0, r8
   1b05c:	bl	11a64 <strlen@plt>
   1b060:	mov	r6, r0
   1b064:	mov	r0, r4
   1b068:	bl	11a64 <strlen@plt>
   1b06c:	add	r0, r6, r0
   1b070:	add	r0, r0, #4
   1b074:	bl	1d804 <close_stdout@@Base+0x35c0>
   1b078:	ldr	r3, [pc, #132]	; 1b104 <close_stdout@@Base+0xec0>
   1b07c:	str	r8, [sp]
   1b080:	mov	r1, #1
   1b084:	str	r4, [sp, #4]
   1b088:	mvn	r2, #0
   1b08c:	add	r3, pc, r3
   1b090:	mov	r6, r0
   1b094:	bl	11ab8 <__sprintf_chk@plt>
   1b098:	cmp	r5, #0
   1b09c:	beq	1b0a8 <close_stdout@@Base+0xe64>
   1b0a0:	mov	r0, r5
   1b0a4:	bl	11884 <free@plt>
   1b0a8:	cmp	r7, #0
   1b0ac:	moveq	r0, r6
   1b0b0:	beq	1aee4 <close_stdout@@Base+0xca0>
   1b0b4:	mov	r0, r7
   1b0b8:	bl	11884 <free@plt>
   1b0bc:	mov	r0, r6
   1b0c0:	b	1aee4 <close_stdout@@Base+0xca0>
   1b0c4:	cmp	r5, #0
   1b0c8:	beq	1b0f4 <close_stdout@@Base+0xeb0>
   1b0cc:	mov	sl, r5
   1b0d0:	mov	r7, r9
   1b0d4:	mov	r4, r5
   1b0d8:	b	1aeb4 <close_stdout@@Base+0xc70>
   1b0dc:	mov	r4, r5
   1b0e0:	b	1aea4 <close_stdout@@Base+0xc60>
   1b0e4:	mov	sl, r9
   1b0e8:	mov	r7, r9
   1b0ec:	mov	r4, r6
   1b0f0:	b	1aeb4 <close_stdout@@Base+0xc70>
   1b0f4:	mov	r4, r9
   1b0f8:	b	1afac <close_stdout@@Base+0xd68>
   1b0fc:			; <UNDEFINED> instruction: 0x0000b6b0
   1b100:	andeq	fp, r0, r4, lsl #12
   1b104:	muleq	r0, r8, r4
   1b108:	push	{r3, lr}
   1b10c:	mov	r3, r0
   1b110:	mov	r2, #0
   1b114:	cmp	r1, #8
   1b118:	str	r2, [r3], #4
   1b11c:	add	r3, r3, #4
   1b120:	str	r2, [r0, #4]
   1b124:	str	r2, [r3], #4
   1b128:	str	r2, [r3], #4
   1b12c:	str	r2, [r3], #4
   1b130:	str	r2, [r3], #4
   1b134:	str	r2, [r3], #4
   1b138:	str	r2, [r3], #4
   1b13c:	str	r2, [r3], #4
   1b140:	str	r2, [r3], #4
   1b144:	str	r2, [r3], #4
   1b148:	str	r2, [r3]
   1b14c:	beq	1b158 <close_stdout@@Base+0xf14>
   1b150:	str	r1, [r0]
   1b154:	pop	{r3, pc}
   1b158:	bl	11c08 <abort@plt>
   1b15c:	push	{r4, r5, r6, lr}
   1b160:	mov	r4, r0
   1b164:	mov	r6, r1
   1b168:	mov	r0, #0
   1b16c:	mov	r1, r4
   1b170:	mov	r2, #5
   1b174:	bl	118cc <dcgettext@plt>
   1b178:	cmp	r0, r4
   1b17c:	mov	r5, r0
   1b180:	beq	1b188 <close_stdout@@Base+0xf44>
   1b184:	pop	{r4, r5, r6, pc}
   1b188:	bl	1dce8 <close_stdout@@Base+0x3aa4>
   1b18c:	ldrb	r3, [r0]
   1b190:	bic	r3, r3, #32
   1b194:	cmp	r3, #85	; 0x55
   1b198:	bne	1b20c <close_stdout@@Base+0xfc8>
   1b19c:	ldrb	r3, [r0, #1]
   1b1a0:	bic	r3, r3, #32
   1b1a4:	cmp	r3, #84	; 0x54
   1b1a8:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b1ac:	ldrb	r3, [r0, #2]
   1b1b0:	bic	r3, r3, #32
   1b1b4:	cmp	r3, #70	; 0x46
   1b1b8:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b1bc:	ldrb	r3, [r0, #3]
   1b1c0:	cmp	r3, #45	; 0x2d
   1b1c4:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b1c8:	ldrb	r3, [r0, #4]
   1b1cc:	cmp	r3, #56	; 0x38
   1b1d0:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b1d4:	ldrb	r3, [r0, #5]
   1b1d8:	cmp	r3, #0
   1b1dc:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b1e0:	ldrb	r3, [r5]
   1b1e4:	cmp	r3, #96	; 0x60
   1b1e8:	beq	1b284 <close_stdout@@Base+0x1040>
   1b1ec:	ldr	r0, [pc, #180]	; 1b2a8 <close_stdout@@Base+0x1064>
   1b1f0:	add	r0, pc, r0
   1b1f4:	pop	{r4, r5, r6, pc}
   1b1f8:	cmp	r6, #7
   1b1fc:	beq	1b290 <close_stdout@@Base+0x104c>
   1b200:	ldr	r0, [pc, #164]	; 1b2ac <close_stdout@@Base+0x1068>
   1b204:	add	r0, pc, r0
   1b208:	pop	{r4, r5, r6, pc}
   1b20c:	cmp	r3, #71	; 0x47
   1b210:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b214:	ldrb	r3, [r0, #1]
   1b218:	bic	r3, r3, #32
   1b21c:	cmp	r3, #66	; 0x42
   1b220:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b224:	ldrb	r3, [r0, #2]
   1b228:	cmp	r3, #49	; 0x31
   1b22c:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b230:	ldrb	r3, [r0, #3]
   1b234:	cmp	r3, #56	; 0x38
   1b238:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b23c:	ldrb	r3, [r0, #4]
   1b240:	cmp	r3, #48	; 0x30
   1b244:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b248:	ldrb	r3, [r0, #5]
   1b24c:	cmp	r3, #51	; 0x33
   1b250:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b254:	ldrb	r3, [r0, #6]
   1b258:	cmp	r3, #48	; 0x30
   1b25c:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b260:	ldrb	r3, [r0, #7]
   1b264:	cmp	r3, #0
   1b268:	bne	1b1f8 <close_stdout@@Base+0xfb4>
   1b26c:	ldrb	r3, [r5]
   1b270:	cmp	r3, #96	; 0x60
   1b274:	beq	1b29c <close_stdout@@Base+0x1058>
   1b278:	ldr	r0, [pc, #48]	; 1b2b0 <close_stdout@@Base+0x106c>
   1b27c:	add	r0, pc, r0
   1b280:	pop	{r4, r5, r6, pc}
   1b284:	ldr	r0, [pc, #40]	; 1b2b4 <close_stdout@@Base+0x1070>
   1b288:	add	r0, pc, r0
   1b28c:	pop	{r4, r5, r6, pc}
   1b290:	ldr	r0, [pc, #32]	; 1b2b8 <close_stdout@@Base+0x1074>
   1b294:	add	r0, pc, r0
   1b298:	pop	{r4, r5, r6, pc}
   1b29c:	ldr	r0, [pc, #24]	; 1b2bc <close_stdout@@Base+0x1078>
   1b2a0:	add	r0, pc, r0
   1b2a4:	pop	{r4, r5, r6, pc}
   1b2a8:	andeq	fp, r0, r0, ror r3
   1b2ac:	andeq	fp, r0, r4, ror #6
   1b2b0:	andeq	fp, r0, r8, ror #5
   1b2b4:	andeq	fp, r0, ip, ror #5
   1b2b8:	ldrdeq	fp, [r0], -r8
   1b2bc:	ldrdeq	fp, [r0], -r0
   1b2c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2c4:	sub	sp, sp, #124	; 0x7c
   1b2c8:	ldr	ip, [pc, #3304]	; 1bfb8 <close_stdout@@Base+0x1d74>
   1b2cc:	mov	sl, r1
   1b2d0:	str	r0, [sp, #40]	; 0x28
   1b2d4:	mov	r8, r3
   1b2d8:	ldr	r0, [pc, #3292]	; 1bfbc <close_stdout@@Base+0x1d78>
   1b2dc:	add	ip, pc, ip
   1b2e0:	str	r2, [sp, #32]
   1b2e4:	ldr	r1, [sp, #164]	; 0xa4
   1b2e8:	mov	r3, ip
   1b2ec:	ldr	r0, [ip, r0]
   1b2f0:	ldr	r2, [sp, #172]	; 0xac
   1b2f4:	ubfx	r1, r1, #1, #1
   1b2f8:	str	r1, [sp, #36]	; 0x24
   1b2fc:	str	r0, [sp, #56]	; 0x38
   1b300:	ldr	r0, [sp, #168]	; 0xa8
   1b304:	ldr	r1, [sp, #176]	; 0xb0
   1b308:	str	r2, [sp, #72]	; 0x48
   1b30c:	str	r0, [sp, #48]	; 0x30
   1b310:	ldr	r0, [sp, #56]	; 0x38
   1b314:	str	r1, [sp, #68]	; 0x44
   1b318:	ldr	r3, [r0]
   1b31c:	str	r3, [sp, #116]	; 0x74
   1b320:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1b324:	ldr	r2, [sp, #160]	; 0xa0
   1b328:	str	r0, [sp, #64]	; 0x40
   1b32c:	cmp	r2, #8
   1b330:	addls	pc, pc, r2, lsl #2
   1b334:	b	1be94 <close_stdout@@Base+0x1c50>
   1b338:	b	1b35c <close_stdout@@Base+0x1118>
   1b33c:	b	1bbac <close_stdout@@Base+0x1968>
   1b340:	b	1bbdc <close_stdout@@Base+0x1998>
   1b344:	b	1ba8c <close_stdout@@Base+0x1848>
   1b348:	b	1bacc <close_stdout@@Base+0x1888>
   1b34c:	b	1baf8 <close_stdout@@Base+0x18b4>
   1b350:	b	1bb18 <close_stdout@@Base+0x18d4>
   1b354:	b	1bb18 <close_stdout@@Base+0x18d4>
   1b358:	b	1bb18 <close_stdout@@Base+0x18d4>
   1b35c:	mov	r2, #0
   1b360:	str	r2, [sp, #36]	; 0x24
   1b364:	mov	r9, r2
   1b368:	str	r2, [sp, #24]
   1b36c:	str	r2, [sp, #28]
   1b370:	str	r2, [sp, #52]	; 0x34
   1b374:	ldr	r0, [sp, #36]	; 0x24
   1b378:	mov	fp, #0
   1b37c:	ldr	r1, [sp, #24]
   1b380:	eor	r2, r0, #1
   1b384:	eor	r3, r1, #1
   1b388:	and	r3, r2, r3
   1b38c:	and	r2, r1, r0
   1b390:	str	r3, [sp, #44]	; 0x2c
   1b394:	str	r2, [sp, #76]	; 0x4c
   1b398:	cmn	r8, #1
   1b39c:	beq	1b71c <close_stdout@@Base+0x14d8>
   1b3a0:	subs	r3, fp, r8
   1b3a4:	movne	r3, #1
   1b3a8:	cmp	r3, #0
   1b3ac:	beq	1b734 <close_stdout@@Base+0x14f0>
   1b3b0:	ldr	r3, [sp, #28]
   1b3b4:	ldr	r0, [sp, #24]
   1b3b8:	adds	r7, r3, #0
   1b3bc:	movne	r7, #1
   1b3c0:	ands	r6, r7, r0
   1b3c4:	bne	1bc20 <close_stdout@@Base+0x19dc>
   1b3c8:	ldr	r1, [sp, #32]
   1b3cc:	add	r5, r1, fp
   1b3d0:	ldrb	r4, [r5]
   1b3d4:	cmp	r4, #126	; 0x7e
   1b3d8:	addls	pc, pc, r4, lsl #2
   1b3dc:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3e0:	b	1b8ac <close_stdout@@Base+0x1668>
   1b3e4:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3e8:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3ec:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3f0:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3f4:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3f8:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b3fc:	b	1b894 <close_stdout@@Base+0x1650>
   1b400:	b	1b87c <close_stdout@@Base+0x1638>
   1b404:	b	1b8a4 <close_stdout@@Base+0x1660>
   1b408:	b	1b89c <close_stdout@@Base+0x1658>
   1b40c:	b	1b88c <close_stdout@@Base+0x1648>
   1b410:	b	1b884 <close_stdout@@Base+0x1640>
   1b414:	b	1b848 <close_stdout@@Base+0x1604>
   1b418:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b41c:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b420:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b424:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b428:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b42c:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b430:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b434:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b438:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b43c:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b440:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b444:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b448:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b44c:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b450:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b454:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b458:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b45c:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b460:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b464:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b468:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b46c:	b	1b7cc <close_stdout@@Base+0x1588>
   1b470:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b474:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b478:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b47c:	b	1b948 <close_stdout@@Base+0x1704>
   1b480:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b484:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b488:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b48c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b490:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b494:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b498:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b49c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4a0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4a4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4a8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4ac:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4b0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4b4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4b8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4bc:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4c0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4c4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4c8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4cc:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b4d0:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b4d4:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b4d8:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b4dc:	b	1b5dc <close_stdout@@Base+0x1398>
   1b4e0:	b	1b9a0 <close_stdout@@Base+0x175c>
   1b4e4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4e8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4ec:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4f0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4f4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4f8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b4fc:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b500:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b504:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b508:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b50c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b510:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b514:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b518:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b51c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b520:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b524:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b528:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b52c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b530:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b534:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b538:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b53c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b540:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b544:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b548:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b54c:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b550:	b	1b92c <close_stdout@@Base+0x16e8>
   1b554:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b558:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b55c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b560:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b564:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b568:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b56c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b570:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b574:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b578:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b57c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b580:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b584:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b588:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b58c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b590:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b594:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b598:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b59c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5a0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5a4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5a8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5ac:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5b0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5b4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5b8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5bc:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5c0:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5c4:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5c8:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b5cc:	b	1b7b4 <close_stdout@@Base+0x1570>
   1b5d0:	b	1b7d4 <close_stdout@@Base+0x1590>
   1b5d4:	b	1b7b4 <close_stdout@@Base+0x1570>
   1b5d8:	b	1b7cc <close_stdout@@Base+0x1588>
   1b5dc:	ldr	r3, [sp, #160]	; 0xa0
   1b5e0:	cmp	r3, #2
   1b5e4:	beq	1be70 <close_stdout@@Base+0x1c2c>
   1b5e8:	cmp	r3, #3
   1b5ec:	bne	1b6a8 <close_stdout@@Base+0x1464>
   1b5f0:	ldr	r1, [sp, #164]	; 0xa4
   1b5f4:	tst	r1, #4
   1b5f8:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1b5fc:	add	r3, fp, #2
   1b600:	cmp	r8, r3
   1b604:	bls	1b6a8 <close_stdout@@Base+0x1464>
   1b608:	ldrb	r2, [r5, #1]
   1b60c:	mov	r1, #1
   1b610:	cmp	r2, #63	; 0x3f
   1b614:	bne	1b6a8 <close_stdout@@Base+0x1464>
   1b618:	ldr	r0, [sp, #32]
   1b61c:	ldrb	ip, [r0, r3]
   1b620:	sub	r0, ip, #33	; 0x21
   1b624:	uxtb	r0, r0
   1b628:	cmp	r0, #29
   1b62c:	bhi	1b6a8 <close_stdout@@Base+0x1464>
   1b630:	lsl	r1, r1, r0
   1b634:	movw	r0, #20929	; 0x51c1
   1b638:	movt	r0, #14336	; 0x3800
   1b63c:	and	r0, r1, r0
   1b640:	cmp	r0, #0
   1b644:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1b648:	ldr	r1, [sp, #36]	; 0x24
   1b64c:	cmp	r1, #0
   1b650:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b654:	cmp	r9, sl
   1b658:	mov	r4, ip
   1b65c:	mov	fp, r3
   1b660:	ldrcc	r0, [sp, #40]	; 0x28
   1b664:	strbcc	r2, [r0, r9]
   1b668:	add	r2, r9, #1
   1b66c:	cmp	sl, r2
   1b670:	ldrhi	r0, [sp, #40]	; 0x28
   1b674:	movhi	r1, #34	; 0x22
   1b678:	strbhi	r1, [r0, r2]
   1b67c:	add	r2, r9, #2
   1b680:	cmp	sl, r2
   1b684:	ldrhi	r0, [sp, #40]	; 0x28
   1b688:	movhi	r1, #34	; 0x22
   1b68c:	strbhi	r1, [r0, r2]
   1b690:	add	r2, r9, #3
   1b694:	cmp	sl, r2
   1b698:	add	r9, r9, #4
   1b69c:	ldrhi	r0, [sp, #40]	; 0x28
   1b6a0:	movhi	r1, #63	; 0x3f
   1b6a4:	strbhi	r1, [r0, r2]
   1b6a8:	ldr	r0, [sp, #44]	; 0x2c
   1b6ac:	cmp	r0, #0
   1b6b0:	bne	1b6d8 <close_stdout@@Base+0x1494>
   1b6b4:	ldr	r1, [sp, #48]	; 0x30
   1b6b8:	cmp	r1, #0
   1b6bc:	beq	1b6d8 <close_stdout@@Base+0x1494>
   1b6c0:	ubfx	r2, r4, #5, #8
   1b6c4:	and	r3, r4, #31
   1b6c8:	ldr	r2, [r1, r2, lsl #2]
   1b6cc:	lsr	r3, r2, r3
   1b6d0:	tst	r3, #1
   1b6d4:	bne	1b6e0 <close_stdout@@Base+0x149c>
   1b6d8:	cmp	r6, #0
   1b6dc:	beq	1b700 <close_stdout@@Base+0x14bc>
   1b6e0:	ldr	r2, [sp, #36]	; 0x24
   1b6e4:	cmp	r2, #0
   1b6e8:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b6ec:	cmp	r9, sl
   1b6f0:	ldrcc	r0, [sp, #40]	; 0x28
   1b6f4:	movcc	r3, #92	; 0x5c
   1b6f8:	strbcc	r3, [r0, r9]
   1b6fc:	add	r9, r9, #1
   1b700:	add	fp, fp, #1
   1b704:	cmp	r9, sl
   1b708:	ldrcc	r1, [sp, #40]	; 0x28
   1b70c:	strbcc	r4, [r1, r9]
   1b710:	cmn	r8, #1
   1b714:	add	r9, r9, #1
   1b718:	bne	1b3a0 <close_stdout@@Base+0x115c>
   1b71c:	ldr	r2, [sp, #32]
   1b720:	ldrb	r3, [r2, fp]
   1b724:	adds	r3, r3, #0
   1b728:	movne	r3, #1
   1b72c:	cmp	r3, #0
   1b730:	bne	1b3b0 <close_stdout@@Base+0x116c>
   1b734:	ldr	r3, [sp, #160]	; 0xa0
   1b738:	cmp	r9, #0
   1b73c:	cmpeq	r3, #2
   1b740:	bne	1b750 <close_stdout@@Base+0x150c>
   1b744:	ldr	r0, [sp, #36]	; 0x24
   1b748:	cmp	r0, #0
   1b74c:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b750:	ldr	r1, [sp, #36]	; 0x24
   1b754:	ldr	r2, [sp, #52]	; 0x34
   1b758:	eor	r3, r1, #1
   1b75c:	cmp	r2, #0
   1b760:	moveq	r3, #0
   1b764:	andne	r3, r3, #1
   1b768:	cmp	r3, #0
   1b76c:	beq	1b798 <close_stdout@@Base+0x1554>
   1b770:	ldrb	r3, [r2]
   1b774:	cmp	r3, #0
   1b778:	beq	1b798 <close_stdout@@Base+0x1554>
   1b77c:	ldr	r1, [sp, #40]	; 0x28
   1b780:	cmp	sl, r9
   1b784:	strbhi	r3, [r1, r9]
   1b788:	ldrb	r3, [r2, #1]!
   1b78c:	add	r9, r9, #1
   1b790:	cmp	r3, #0
   1b794:	bne	1b780 <close_stdout@@Base+0x153c>
   1b798:	cmp	r9, sl
   1b79c:	movcs	r0, r9
   1b7a0:	ldrcc	r1, [sp, #40]	; 0x28
   1b7a4:	movcc	r3, #0
   1b7a8:	movcc	r0, r9
   1b7ac:	strbcc	r3, [r1, r9]
   1b7b0:	b	1b82c <close_stdout@@Base+0x15e8>
   1b7b4:	cmn	r8, #1
   1b7b8:	beq	1be80 <close_stdout@@Base+0x1c3c>
   1b7bc:	subs	r3, r8, #1
   1b7c0:	movne	r3, #1
   1b7c4:	cmp	r3, #0
   1b7c8:	bne	1b6a8 <close_stdout@@Base+0x1464>
   1b7cc:	cmp	fp, #0
   1b7d0:	bne	1b6a8 <close_stdout@@Base+0x1464>
   1b7d4:	ldr	r3, [sp, #36]	; 0x24
   1b7d8:	ldr	r0, [sp, #160]	; 0xa0
   1b7dc:	cmp	r0, #2
   1b7e0:	movne	r3, #0
   1b7e4:	andeq	r3, r3, #1
   1b7e8:	cmp	r3, #0
   1b7ec:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1b7f0:	ldr	r2, [sp, #164]	; 0xa4
   1b7f4:	mov	ip, #0
   1b7f8:	ldr	r0, [sp, #160]	; 0xa0
   1b7fc:	bic	r3, r2, #2
   1b800:	ldr	r1, [sp, #72]	; 0x48
   1b804:	ldr	r2, [sp, #68]	; 0x44
   1b808:	stm	sp, {r0, r3}
   1b80c:	mov	r3, r8
   1b810:	str	r1, [sp, #12]
   1b814:	mov	r1, sl
   1b818:	str	r2, [sp, #16]
   1b81c:	ldr	r0, [sp, #40]	; 0x28
   1b820:	ldr	r2, [sp, #32]
   1b824:	str	ip, [sp, #8]
   1b828:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1b82c:	ldr	r1, [sp, #56]	; 0x38
   1b830:	ldr	r2, [sp, #116]	; 0x74
   1b834:	ldr	r3, [r1]
   1b838:	cmp	r2, r3
   1b83c:	bne	1bf70 <close_stdout@@Base+0x1d2c>
   1b840:	add	sp, sp, #124	; 0x7c
   1b844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b848:	mov	r3, #114	; 0x72
   1b84c:	ldr	r2, [sp, #36]	; 0x24
   1b850:	ldr	r0, [sp, #160]	; 0xa0
   1b854:	cmp	r0, #2
   1b858:	movne	r2, #0
   1b85c:	andeq	r2, r2, #1
   1b860:	cmp	r2, #0
   1b864:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b868:	ldr	r1, [sp, #24]
   1b86c:	cmp	r1, #0
   1b870:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1b874:	mov	r4, r3
   1b878:	b	1b6e0 <close_stdout@@Base+0x149c>
   1b87c:	mov	r3, #98	; 0x62
   1b880:	b	1b868 <close_stdout@@Base+0x1624>
   1b884:	mov	r3, #102	; 0x66
   1b888:	b	1b868 <close_stdout@@Base+0x1624>
   1b88c:	mov	r3, #118	; 0x76
   1b890:	b	1b868 <close_stdout@@Base+0x1624>
   1b894:	mov	r3, #97	; 0x61
   1b898:	b	1b868 <close_stdout@@Base+0x1624>
   1b89c:	mov	r3, #110	; 0x6e
   1b8a0:	b	1b84c <close_stdout@@Base+0x1608>
   1b8a4:	mov	r3, #116	; 0x74
   1b8a8:	b	1b84c <close_stdout@@Base+0x1608>
   1b8ac:	ldr	r2, [sp, #24]
   1b8b0:	cmp	r2, #0
   1b8b4:	beq	1be5c <close_stdout@@Base+0x1c18>
   1b8b8:	ldr	r3, [sp, #36]	; 0x24
   1b8bc:	cmp	r3, #0
   1b8c0:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b8c4:	cmp	r9, sl
   1b8c8:	add	r2, r9, #1
   1b8cc:	ldrcc	r0, [sp, #40]	; 0x28
   1b8d0:	movcc	r3, #92	; 0x5c
   1b8d4:	strbcc	r3, [r0, r9]
   1b8d8:	add	r3, fp, #1
   1b8dc:	cmp	r8, r3
   1b8e0:	bls	1b920 <close_stdout@@Base+0x16dc>
   1b8e4:	ldr	r1, [sp, #32]
   1b8e8:	ldrb	r3, [r1, r3]
   1b8ec:	sub	r3, r3, #48	; 0x30
   1b8f0:	cmp	r3, #9
   1b8f4:	bhi	1b920 <close_stdout@@Base+0x16dc>
   1b8f8:	cmp	sl, r2
   1b8fc:	ldrhi	r0, [sp, #40]	; 0x28
   1b900:	movhi	r3, #48	; 0x30
   1b904:	strbhi	r3, [r0, r2]
   1b908:	add	r3, r9, #2
   1b90c:	cmp	sl, r3
   1b910:	ldrhi	r1, [sp, #40]	; 0x28
   1b914:	movhi	r2, #48	; 0x30
   1b918:	strbhi	r2, [r1, r3]
   1b91c:	add	r2, r9, #3
   1b920:	mov	r9, r2
   1b924:	mov	r4, #48	; 0x30
   1b928:	b	1b6b4 <close_stdout@@Base+0x1470>
   1b92c:	ldr	r1, [sp, #76]	; 0x4c
   1b930:	cmp	r1, #0
   1b934:	beq	1b940 <close_stdout@@Base+0x16fc>
   1b938:	cmp	r7, #0
   1b93c:	bne	1b700 <close_stdout@@Base+0x14bc>
   1b940:	mov	r3, r4
   1b944:	b	1b84c <close_stdout@@Base+0x1608>
   1b948:	ldr	r1, [sp, #160]	; 0xa0
   1b94c:	cmp	r1, #2
   1b950:	bne	1b6a8 <close_stdout@@Base+0x1464>
   1b954:	ldr	r2, [sp, #36]	; 0x24
   1b958:	cmp	r2, #0
   1b95c:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1b960:	cmp	r9, sl
   1b964:	ldrcc	r0, [sp, #40]	; 0x28
   1b968:	movcc	r3, #39	; 0x27
   1b96c:	strbcc	r3, [r0, r9]
   1b970:	add	r3, r9, #1
   1b974:	cmp	sl, r3
   1b978:	ldrhi	r1, [sp, #40]	; 0x28
   1b97c:	movhi	r2, #92	; 0x5c
   1b980:	strbhi	r2, [r1, r3]
   1b984:	add	r3, r9, #2
   1b988:	cmp	sl, r3
   1b98c:	add	r9, r9, #3
   1b990:	ldrhi	r0, [sp, #40]	; 0x28
   1b994:	movhi	r2, #39	; 0x27
   1b998:	strbhi	r2, [r0, r3]
   1b99c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1b9a0:	ldr	r1, [sp, #64]	; 0x40
   1b9a4:	cmp	r1, #1
   1b9a8:	bne	1bca0 <close_stdout@@Base+0x1a5c>
   1b9ac:	bl	11a40 <__ctype_b_loc@plt>
   1b9b0:	ldr	r2, [sp, #64]	; 0x40
   1b9b4:	sxth	r3, r4
   1b9b8:	str	r2, [sp, #60]	; 0x3c
   1b9bc:	lsl	r3, r3, #1
   1b9c0:	ldr	r2, [r0]
   1b9c4:	ldrh	r2, [r2, r3]
   1b9c8:	eor	r2, r2, #16384	; 0x4000
   1b9cc:	ubfx	r2, r2, #14, #1
   1b9d0:	ldr	r1, [sp, #24]
   1b9d4:	ands	r2, r2, r1
   1b9d8:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1b9dc:	ldr	r3, [sp, #60]	; 0x3c
   1b9e0:	mov	r0, #92	; 0x5c
   1b9e4:	ldr	r7, [sp, #36]	; 0x24
   1b9e8:	add	r1, r3, fp
   1b9ec:	str	r8, [sp, #60]	; 0x3c
   1b9f0:	ldr	r3, [sp, #40]	; 0x28
   1b9f4:	b	1ba58 <close_stdout@@Base+0x1814>
   1b9f8:	cmp	r7, #0
   1b9fc:	bne	1be98 <close_stdout@@Base+0x1c54>
   1ba00:	add	ip, r9, #1
   1ba04:	cmp	r9, sl
   1ba08:	strbcc	r0, [r3, r9]
   1ba0c:	cmp	sl, ip
   1ba10:	lsrhi	r8, r4, #6
   1ba14:	addhi	r8, r8, #48	; 0x30
   1ba18:	strbhi	r8, [r3, ip]
   1ba1c:	add	ip, r9, #2
   1ba20:	add	r9, r9, #3
   1ba24:	cmp	sl, ip
   1ba28:	ubfxhi	r8, r4, #3, #3
   1ba2c:	and	r4, r4, #7
   1ba30:	add	r4, r4, #48	; 0x30
   1ba34:	addhi	r8, r8, #48	; 0x30
   1ba38:	strbhi	r8, [r3, ip]
   1ba3c:	add	fp, fp, #1
   1ba40:	cmp	r1, fp
   1ba44:	bls	1ba84 <close_stdout@@Base+0x1840>
   1ba48:	cmp	r9, sl
   1ba4c:	strbcc	r4, [r3, r9]
   1ba50:	ldrb	r4, [r5, #1]!
   1ba54:	add	r9, r9, #1
   1ba58:	cmp	r2, #0
   1ba5c:	bne	1b9f8 <close_stdout@@Base+0x17b4>
   1ba60:	cmp	r6, #0
   1ba64:	beq	1ba3c <close_stdout@@Base+0x17f8>
   1ba68:	add	fp, fp, #1
   1ba6c:	cmp	r9, sl
   1ba70:	strbcc	r0, [r3, r9]
   1ba74:	cmp	r1, fp
   1ba78:	add	r9, r9, #1
   1ba7c:	mov	r6, #0
   1ba80:	bhi	1ba48 <close_stdout@@Base+0x1804>
   1ba84:	ldr	r8, [sp, #60]	; 0x3c
   1ba88:	b	1b704 <close_stdout@@Base+0x14c0>
   1ba8c:	ldr	r3, [sp, #36]	; 0x24
   1ba90:	cmp	r3, #0
   1ba94:	bne	1bf98 <close_stdout@@Base+0x1d54>
   1ba98:	cmp	sl, #0
   1ba9c:	beq	1beb0 <close_stdout@@Base+0x1c6c>
   1baa0:	ldr	r1, [sp, #40]	; 0x28
   1baa4:	mov	r0, #1
   1baa8:	ldr	r2, [pc, #1296]	; 1bfc0 <close_stdout@@Base+0x1d7c>
   1baac:	mov	r3, #34	; 0x22
   1bab0:	str	r0, [sp, #24]
   1bab4:	mov	r9, r0
   1bab8:	add	r2, pc, r2
   1babc:	str	r0, [sp, #28]
   1bac0:	strb	r3, [r1]
   1bac4:	str	r2, [sp, #52]	; 0x34
   1bac8:	b	1b374 <close_stdout@@Base+0x1130>
   1bacc:	ldr	r3, [pc, #1264]	; 1bfc4 <close_stdout@@Base+0x1d80>
   1bad0:	mov	r2, #1
   1bad4:	mov	r0, #3
   1bad8:	str	r2, [sp, #36]	; 0x24
   1badc:	add	r3, pc, r3
   1bae0:	str	r2, [sp, #24]
   1bae4:	str	r3, [sp, #52]	; 0x34
   1bae8:	mov	r9, #0
   1baec:	str	r2, [sp, #28]
   1baf0:	str	r0, [sp, #160]	; 0xa0
   1baf4:	b	1b374 <close_stdout@@Base+0x1130>
   1baf8:	mov	r0, #0
   1bafc:	mov	r1, #1
   1bb00:	str	r0, [sp, #36]	; 0x24
   1bb04:	mov	r9, r0
   1bb08:	str	r1, [sp, #24]
   1bb0c:	str	r0, [sp, #28]
   1bb10:	str	r0, [sp, #52]	; 0x34
   1bb14:	b	1b374 <close_stdout@@Base+0x1130>
   1bb18:	ldr	r3, [sp, #160]	; 0xa0
   1bb1c:	cmp	r3, #8
   1bb20:	beq	1bb4c <close_stdout@@Base+0x1908>
   1bb24:	ldr	r0, [pc, #1180]	; 1bfc8 <close_stdout@@Base+0x1d84>
   1bb28:	mov	r1, r3
   1bb2c:	add	r0, pc, r0
   1bb30:	bl	1b15c <close_stdout@@Base+0xf18>
   1bb34:	ldr	r1, [sp, #160]	; 0xa0
   1bb38:	str	r0, [sp, #72]	; 0x48
   1bb3c:	ldr	r0, [pc, #1160]	; 1bfcc <close_stdout@@Base+0x1d88>
   1bb40:	add	r0, pc, r0
   1bb44:	bl	1b15c <close_stdout@@Base+0xf18>
   1bb48:	str	r0, [sp, #68]	; 0x44
   1bb4c:	ldr	r0, [sp, #36]	; 0x24
   1bb50:	cmp	r0, #0
   1bb54:	movne	r9, #0
   1bb58:	bne	1bb90 <close_stdout@@Base+0x194c>
   1bb5c:	ldr	r1, [sp, #72]	; 0x48
   1bb60:	ldrb	r3, [r1]
   1bb64:	cmp	r3, #0
   1bb68:	beq	1bf68 <close_stdout@@Base+0x1d24>
   1bb6c:	mov	r2, r1
   1bb70:	ldr	r1, [sp, #40]	; 0x28
   1bb74:	mov	r9, r0
   1bb78:	cmp	r9, sl
   1bb7c:	strbcc	r3, [r1, r9]
   1bb80:	ldrb	r3, [r2, #1]!
   1bb84:	add	r9, r9, #1
   1bb88:	cmp	r3, #0
   1bb8c:	bne	1bb78 <close_stdout@@Base+0x1934>
   1bb90:	ldr	r0, [sp, #68]	; 0x44
   1bb94:	str	r0, [sp, #52]	; 0x34
   1bb98:	bl	11a64 <strlen@plt>
   1bb9c:	mov	r2, #1
   1bba0:	str	r2, [sp, #24]
   1bba4:	str	r0, [sp, #28]
   1bba8:	b	1b374 <close_stdout@@Base+0x1130>
   1bbac:	ldr	r3, [pc, #1052]	; 1bfd0 <close_stdout@@Base+0x1d8c>
   1bbb0:	mov	r2, #0
   1bbb4:	mov	r1, #1
   1bbb8:	mov	r0, #2
   1bbbc:	add	r3, pc, r3
   1bbc0:	str	r1, [sp, #36]	; 0x24
   1bbc4:	str	r2, [sp, #24]
   1bbc8:	mov	r9, r2
   1bbcc:	str	r1, [sp, #28]
   1bbd0:	str	r3, [sp, #52]	; 0x34
   1bbd4:	str	r0, [sp, #160]	; 0xa0
   1bbd8:	b	1b374 <close_stdout@@Base+0x1130>
   1bbdc:	ldr	r3, [sp, #36]	; 0x24
   1bbe0:	cmp	r3, #0
   1bbe4:	bne	1bf74 <close_stdout@@Base+0x1d30>
   1bbe8:	cmp	sl, #0
   1bbec:	beq	1bed0 <close_stdout@@Base+0x1c8c>
   1bbf0:	ldr	r1, [sp, #40]	; 0x28
   1bbf4:	mov	r3, #39	; 0x27
   1bbf8:	ldr	r2, [sp, #36]	; 0x24
   1bbfc:	mov	r0, #1
   1bc00:	mov	r9, r0
   1bc04:	str	r0, [sp, #28]
   1bc08:	strb	r3, [r1]
   1bc0c:	ldr	r3, [pc, #960]	; 1bfd4 <close_stdout@@Base+0x1d90>
   1bc10:	str	r2, [sp, #24]
   1bc14:	add	r3, pc, r3
   1bc18:	str	r3, [sp, #52]	; 0x34
   1bc1c:	b	1b374 <close_stdout@@Base+0x1130>
   1bc20:	ldr	r2, [sp, #28]
   1bc24:	cmp	r2, #1
   1bc28:	add	r4, fp, r2
   1bc2c:	movls	r3, #0
   1bc30:	movhi	r3, #1
   1bc34:	cmn	r8, #1
   1bc38:	movne	r3, #0
   1bc3c:	cmp	r3, #0
   1bc40:	beq	1bc50 <close_stdout@@Base+0x1a0c>
   1bc44:	ldr	r0, [sp, #32]
   1bc48:	bl	11a64 <strlen@plt>
   1bc4c:	mov	r8, r0
   1bc50:	cmp	r8, r4
   1bc54:	ldrcc	r3, [sp, #32]
   1bc58:	movcc	r6, #0
   1bc5c:	addcc	r5, r3, fp
   1bc60:	bcc	1b3d0 <close_stdout@@Base+0x118c>
   1bc64:	ldr	r0, [sp, #32]
   1bc68:	ldr	r1, [sp, #52]	; 0x34
   1bc6c:	add	r5, r0, fp
   1bc70:	ldr	r2, [sp, #28]
   1bc74:	mov	r0, r5
   1bc78:	bl	118c0 <memcmp@plt>
   1bc7c:	cmp	r0, #0
   1bc80:	bne	1bc98 <close_stdout@@Base+0x1a54>
   1bc84:	ldr	r1, [sp, #36]	; 0x24
   1bc88:	cmp	r1, #0
   1bc8c:	bne	1b7f0 <close_stdout@@Base+0x15ac>
   1bc90:	mov	r6, #1
   1bc94:	b	1b3d0 <close_stdout@@Base+0x118c>
   1bc98:	mov	r6, #0
   1bc9c:	b	1b3d0 <close_stdout@@Base+0x118c>
   1bca0:	add	r7, sp, #108	; 0x6c
   1bca4:	cmn	r8, #1
   1bca8:	mov	r3, #0
   1bcac:	str	r3, [sp, #108]	; 0x6c
   1bcb0:	str	r3, [r7, #4]
   1bcb4:	beq	1bea0 <close_stdout@@Base+0x1c5c>
   1bcb8:	mov	r1, #0
   1bcbc:	ldr	r0, [sp, #32]
   1bcc0:	mov	ip, #1
   1bcc4:	str	r9, [sp, #88]	; 0x58
   1bcc8:	str	r6, [sp, #96]	; 0x60
   1bccc:	mov	r9, r1
   1bcd0:	str	r5, [sp, #100]	; 0x64
   1bcd4:	mov	r6, ip
   1bcd8:	mov	r5, r7
   1bcdc:	add	r3, sp, #104	; 0x68
   1bce0:	sub	r0, r0, #1
   1bce4:	str	r3, [sp, #80]	; 0x50
   1bce8:	str	r0, [sp, #84]	; 0x54
   1bcec:	str	r1, [sp, #60]	; 0x3c
   1bcf0:	str	r4, [sp, #92]	; 0x5c
   1bcf4:	ldr	r2, [sp, #32]
   1bcf8:	add	r7, r9, fp
   1bcfc:	add	r0, sp, #104	; 0x68
   1bd00:	mov	r3, r5
   1bd04:	add	r4, r2, r7
   1bd08:	rsb	r2, r7, r8
   1bd0c:	mov	r1, r4
   1bd10:	bl	119a4 <mbrtowc@plt>
   1bd14:	subs	r2, r0, #0
   1bd18:	beq	1be24 <close_stdout@@Base+0x1be0>
   1bd1c:	cmn	r2, #1
   1bd20:	beq	1bf4c <close_stdout@@Base+0x1d08>
   1bd24:	cmn	r2, #2
   1bd28:	beq	1bef0 <close_stdout@@Base+0x1cac>
   1bd2c:	ldr	r3, [sp, #36]	; 0x24
   1bd30:	ldr	r0, [sp, #160]	; 0xa0
   1bd34:	cmp	r0, #2
   1bd38:	movne	r3, #0
   1bd3c:	andeq	r3, r3, #1
   1bd40:	cmp	r3, #0
   1bd44:	beq	1be00 <close_stdout@@Base+0x1bbc>
   1bd48:	cmp	r2, #1
   1bd4c:	beq	1be00 <close_stdout@@Base+0x1bbc>
   1bd50:	ldr	r1, [sp, #84]	; 0x54
   1bd54:	add	r3, r1, r2
   1bd58:	add	r7, r3, r7
   1bd5c:	ldrb	r3, [r4, #1]!
   1bd60:	sub	r3, r3, #91	; 0x5b
   1bd64:	cmp	r3, #33	; 0x21
   1bd68:	addls	pc, pc, r3, lsl #2
   1bd6c:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd70:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bd74:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bd78:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd7c:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bd80:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd84:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bd88:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd8c:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd90:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd94:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd98:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bd9c:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bda0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bda4:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bda8:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdac:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdb0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdb4:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdb8:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdbc:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdc0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdc4:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdc8:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdcc:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdd0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdd4:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdd8:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bddc:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bde0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bde4:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bde8:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdec:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdf0:	b	1bdf8 <close_stdout@@Base+0x1bb4>
   1bdf4:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bdf8:	cmp	r4, r7
   1bdfc:	bne	1bd5c <close_stdout@@Base+0x1b18>
   1be00:	ldr	r0, [sp, #104]	; 0x68
   1be04:	add	r9, r9, r2
   1be08:	bl	11950 <iswprint@plt>
   1be0c:	cmp	r0, #0
   1be10:	mov	r0, r5
   1be14:	moveq	r6, #0
   1be18:	bl	118b4 <mbsinit@plt>
   1be1c:	cmp	r0, #0
   1be20:	beq	1bcf4 <close_stdout@@Base+0x1ab0>
   1be24:	mov	ip, r6
   1be28:	eor	r2, ip, #1
   1be2c:	str	r9, [sp, #60]	; 0x3c
   1be30:	ldr	r4, [sp, #92]	; 0x5c
   1be34:	uxtb	r2, r2
   1be38:	ldr	r9, [sp, #88]	; 0x58
   1be3c:	ldr	r6, [sp, #96]	; 0x60
   1be40:	ldr	r5, [sp, #100]	; 0x64
   1be44:	ldr	r3, [sp, #60]	; 0x3c
   1be48:	cmp	r3, #1
   1be4c:	bls	1b9d0 <close_stdout@@Base+0x178c>
   1be50:	ldr	r0, [sp, #24]
   1be54:	and	r2, r2, r0
   1be58:	b	1b9dc <close_stdout@@Base+0x1798>
   1be5c:	ldr	r2, [sp, #164]	; 0xa4
   1be60:	tst	r2, #1
   1be64:	addne	fp, fp, #1
   1be68:	bne	1b398 <close_stdout@@Base+0x1154>
   1be6c:	b	1b6a8 <close_stdout@@Base+0x1464>
   1be70:	ldr	r0, [sp, #36]	; 0x24
   1be74:	cmp	r0, #0
   1be78:	beq	1b6a8 <close_stdout@@Base+0x1464>
   1be7c:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1be80:	ldr	r2, [sp, #32]
   1be84:	ldrb	r3, [r2, #1]
   1be88:	adds	r3, r3, #0
   1be8c:	movne	r3, #1
   1be90:	b	1b7c4 <close_stdout@@Base+0x1580>
   1be94:	bl	11c08 <abort@plt>
   1be98:	ldr	r8, [sp, #60]	; 0x3c
   1be9c:	b	1b7f0 <close_stdout@@Base+0x15ac>
   1bea0:	ldr	r0, [sp, #32]
   1bea4:	bl	11a64 <strlen@plt>
   1bea8:	mov	r8, r0
   1beac:	b	1bcb8 <close_stdout@@Base+0x1a74>
   1beb0:	ldr	r2, [pc, #288]	; 1bfd8 <close_stdout@@Base+0x1d94>
   1beb4:	mov	r1, #1
   1beb8:	mov	r9, r1
   1bebc:	str	r1, [sp, #24]
   1bec0:	add	r2, pc, r2
   1bec4:	str	r1, [sp, #28]
   1bec8:	str	r2, [sp, #52]	; 0x34
   1becc:	b	1b374 <close_stdout@@Base+0x1130>
   1bed0:	ldr	r2, [pc, #260]	; 1bfdc <close_stdout@@Base+0x1d98>
   1bed4:	mov	r3, #1
   1bed8:	mov	r9, r3
   1bedc:	str	r3, [sp, #28]
   1bee0:	add	r2, pc, r2
   1bee4:	str	sl, [sp, #24]
   1bee8:	str	r2, [sp, #52]	; 0x34
   1beec:	b	1b374 <close_stdout@@Base+0x1130>
   1bef0:	cmp	r8, r7
   1bef4:	str	r9, [sp, #60]	; 0x3c
   1bef8:	mov	ip, r4
   1befc:	ldr	r6, [sp, #96]	; 0x60
   1bf00:	ldr	r9, [sp, #88]	; 0x58
   1bf04:	ldr	r4, [sp, #92]	; 0x5c
   1bf08:	ldr	r5, [sp, #100]	; 0x64
   1bf0c:	bls	1bf44 <close_stdout@@Base+0x1d00>
   1bf10:	ldrb	r3, [ip]
   1bf14:	cmp	r3, #0
   1bf18:	beq	1bf44 <close_stdout@@Base+0x1d00>
   1bf1c:	ldr	r3, [sp, #60]	; 0x3c
   1bf20:	b	1bf30 <close_stdout@@Base+0x1cec>
   1bf24:	ldrb	r2, [r5, r3]
   1bf28:	cmp	r2, #0
   1bf2c:	beq	1bf40 <close_stdout@@Base+0x1cfc>
   1bf30:	add	r3, r3, #1
   1bf34:	add	r2, fp, r3
   1bf38:	cmp	r8, r2
   1bf3c:	bhi	1bf24 <close_stdout@@Base+0x1ce0>
   1bf40:	str	r3, [sp, #60]	; 0x3c
   1bf44:	mov	r2, #1
   1bf48:	b	1be44 <close_stdout@@Base+0x1c00>
   1bf4c:	str	r9, [sp, #60]	; 0x3c
   1bf50:	mov	r2, #1
   1bf54:	ldr	r4, [sp, #92]	; 0x5c
   1bf58:	ldr	r6, [sp, #96]	; 0x60
   1bf5c:	ldr	r9, [sp, #88]	; 0x58
   1bf60:	ldr	r5, [sp, #100]	; 0x64
   1bf64:	b	1be44 <close_stdout@@Base+0x1c00>
   1bf68:	ldr	r9, [sp, #36]	; 0x24
   1bf6c:	b	1bb90 <close_stdout@@Base+0x194c>
   1bf70:	bl	118e4 <__stack_chk_fail@plt>
   1bf74:	ldr	r1, [pc, #100]	; 1bfe0 <close_stdout@@Base+0x1d9c>
   1bf78:	mov	r3, #0
   1bf7c:	mov	r0, #1
   1bf80:	str	r3, [sp, #24]
   1bf84:	add	r1, pc, r1
   1bf88:	str	r0, [sp, #28]
   1bf8c:	mov	r9, r3
   1bf90:	str	r1, [sp, #52]	; 0x34
   1bf94:	b	1b374 <close_stdout@@Base+0x1130>
   1bf98:	ldr	r0, [pc, #68]	; 1bfe4 <close_stdout@@Base+0x1da0>
   1bf9c:	mov	r3, #1
   1bfa0:	mov	r9, #0
   1bfa4:	str	r3, [sp, #24]
   1bfa8:	add	r0, pc, r0
   1bfac:	str	r3, [sp, #28]
   1bfb0:	str	r0, [sp, #52]	; 0x34
   1bfb4:	b	1b374 <close_stdout@@Base+0x1130>
   1bfb8:	andeq	fp, r1, ip, lsl sp
   1bfbc:	andeq	r0, r0, ip, lsl #3
   1bfc0:			; <UNDEFINED> instruction: 0x0000aab4
   1bfc4:	muleq	r0, r0, sl
   1bfc8:	andeq	sl, r0, ip, asr #20
   1bfcc:	andeq	sl, r0, r8, lsr #20
   1bfd0:	andeq	sl, r0, ip, lsr #19
   1bfd4:	andeq	sl, r0, r4, asr r9
   1bfd8:	andeq	sl, r0, ip, lsr #13
   1bfdc:	andeq	sl, r0, r8, lsl #13
   1bfe0:	andeq	sl, r0, r4, ror #11
   1bfe4:	andeq	sl, r0, r4, asr #11
   1bfe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfec:	sub	sp, sp, #44	; 0x2c
   1bff0:	mov	r6, r0
   1bff4:	mov	r9, r1
   1bff8:	mov	sl, r2
   1bffc:	mov	r4, r3
   1c000:	bl	11aa0 <__errno_location@plt>
   1c004:	ldr	fp, [pc, #412]	; 1c1a8 <close_stdout@@Base+0x1f64>
   1c008:	cmp	r6, #0
   1c00c:	add	fp, pc, fp
   1c010:	ldr	r5, [fp]
   1c014:	ldr	r1, [r0]
   1c018:	mov	r8, r0
   1c01c:	str	r1, [sp, #36]	; 0x24
   1c020:	blt	1c1a0 <close_stdout@@Base+0x1f5c>
   1c024:	ldr	r3, [pc, #384]	; 1c1ac <close_stdout@@Base+0x1f68>
   1c028:	add	r3, pc, r3
   1c02c:	ldr	r3, [r3]
   1c030:	cmp	r6, r3
   1c034:	bcc	1c088 <close_stdout@@Base+0x1e44>
   1c038:	add	r7, r6, #1
   1c03c:	cmn	r7, #-536870911	; 0xe0000001
   1c040:	bhi	1c1a4 <close_stdout@@Base+0x1f60>
   1c044:	add	r3, fp, #4
   1c048:	cmp	r5, r3
   1c04c:	beq	1c178 <close_stdout@@Base+0x1f34>
   1c050:	mov	r0, r5
   1c054:	lsl	r1, r7, #3
   1c058:	bl	1d85c <close_stdout@@Base+0x3618>
   1c05c:	mov	r5, r0
   1c060:	str	r0, [fp]
   1c064:	ldr	fp, [pc, #324]	; 1c1b0 <close_stdout@@Base+0x1f6c>
   1c068:	mov	r1, #0
   1c06c:	add	fp, pc, fp
   1c070:	ldr	r0, [fp]
   1c074:	rsb	r2, r0, r7
   1c078:	add	r0, r5, r0, lsl #3
   1c07c:	lsl	r2, r2, #3
   1c080:	bl	11adc <memset@plt>
   1c084:	str	r7, [fp]
   1c088:	add	r2, r4, #8
   1c08c:	str	r2, [sp, #32]
   1c090:	ldr	r1, [r4]
   1c094:	add	fp, r5, r6, lsl #3
   1c098:	ldr	lr, [sp, #32]
   1c09c:	mov	r2, r9
   1c0a0:	ldr	r3, [r4, #4]
   1c0a4:	ldr	ip, [r5, r6, lsl #3]
   1c0a8:	ldr	r7, [fp, #4]
   1c0ac:	orr	r3, r3, #1
   1c0b0:	str	r1, [sp]
   1c0b4:	str	r3, [sp, #4]
   1c0b8:	mov	r1, ip
   1c0bc:	str	lr, [sp, #8]
   1c0c0:	mov	r0, r7
   1c0c4:	ldr	lr, [r4, #40]	; 0x28
   1c0c8:	str	r3, [sp, #28]
   1c0cc:	mov	r3, sl
   1c0d0:	str	lr, [sp, #12]
   1c0d4:	ldr	lr, [r4, #44]	; 0x2c
   1c0d8:	str	ip, [sp, #24]
   1c0dc:	str	lr, [sp, #16]
   1c0e0:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1c0e4:	ldr	ip, [sp, #24]
   1c0e8:	cmp	ip, r0
   1c0ec:	bhi	1c164 <close_stdout@@Base+0x1f20>
   1c0f0:	ldr	r3, [pc, #188]	; 1c1b4 <close_stdout@@Base+0x1f70>
   1c0f4:	add	r1, r0, #1
   1c0f8:	str	r1, [r5, r6, lsl #3]
   1c0fc:	add	r3, pc, r3
   1c100:	cmp	r7, r3
   1c104:	beq	1c118 <close_stdout@@Base+0x1ed4>
   1c108:	mov	r0, r7
   1c10c:	str	r1, [sp, #24]
   1c110:	bl	11884 <free@plt>
   1c114:	ldr	r1, [sp, #24]
   1c118:	mov	r0, r1
   1c11c:	str	r1, [sp, #24]
   1c120:	bl	1d804 <close_stdout@@Base+0x35c0>
   1c124:	ldr	r3, [sp, #28]
   1c128:	ldr	lr, [sp, #32]
   1c12c:	mov	r2, r9
   1c130:	str	r0, [fp, #4]
   1c134:	mov	r7, r0
   1c138:	ldr	ip, [r4]
   1c13c:	str	r3, [sp, #4]
   1c140:	mov	r3, sl
   1c144:	str	lr, [sp, #8]
   1c148:	str	ip, [sp]
   1c14c:	ldr	ip, [r4, #40]	; 0x28
   1c150:	ldr	r1, [sp, #24]
   1c154:	str	ip, [sp, #12]
   1c158:	ldr	ip, [r4, #44]	; 0x2c
   1c15c:	str	ip, [sp, #16]
   1c160:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1c164:	ldr	r1, [sp, #36]	; 0x24
   1c168:	mov	r0, r7
   1c16c:	str	r1, [r8]
   1c170:	add	sp, sp, #44	; 0x2c
   1c174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c178:	lsl	r1, r7, #3
   1c17c:	mov	r0, #0
   1c180:	str	r3, [sp, #24]
   1c184:	bl	1d85c <close_stdout@@Base+0x3618>
   1c188:	ldr	r3, [sp, #24]
   1c18c:	mov	r5, r0
   1c190:	ldm	r3, {r0, r1}
   1c194:	str	r5, [fp]
   1c198:	stm	r5, {r0, r1}
   1c19c:	b	1c064 <close_stdout@@Base+0x1e20>
   1c1a0:	bl	11c08 <abort@plt>
   1c1a4:	bl	1da18 <close_stdout@@Base+0x37d4>
   1c1a8:	strdeq	fp, [r1], -r4
   1c1ac:	andeq	fp, r1, r4, lsr #3
   1c1b0:	andeq	fp, r1, r0, ror #2
   1c1b4:	andeq	fp, r1, r8, lsr #2
   1c1b8:	push	{r4, r5, r6, lr}
   1c1bc:	mov	r5, r0
   1c1c0:	bl	11aa0 <__errno_location@plt>
   1c1c4:	cmp	r5, #0
   1c1c8:	mov	r1, #48	; 0x30
   1c1cc:	mov	r4, r0
   1c1d0:	ldr	r0, [pc, #24]	; 1c1f0 <close_stdout@@Base+0x1fac>
   1c1d4:	ldr	r6, [r4]
   1c1d8:	add	r0, pc, r0
   1c1dc:	add	r0, r0, #256	; 0x100
   1c1e0:	movne	r0, r5
   1c1e4:	bl	1d9d8 <close_stdout@@Base+0x3794>
   1c1e8:	str	r6, [r4]
   1c1ec:	pop	{r4, r5, r6, pc}
   1c1f0:	andeq	fp, r1, ip, asr #32
   1c1f4:	cmp	r0, #0
   1c1f8:	beq	1c204 <close_stdout@@Base+0x1fc0>
   1c1fc:	ldr	r0, [r0]
   1c200:	bx	lr
   1c204:	ldr	r0, [pc, #12]	; 1c218 <close_stdout@@Base+0x1fd4>
   1c208:	add	r0, pc, r0
   1c20c:	add	r0, r0, #256	; 0x100
   1c210:	ldr	r0, [r0]
   1c214:	bx	lr
   1c218:	andeq	fp, r1, ip, lsl r0
   1c21c:	cmp	r0, #0
   1c220:	beq	1c22c <close_stdout@@Base+0x1fe8>
   1c224:	str	r1, [r0]
   1c228:	bx	lr
   1c22c:	ldr	r0, [pc, #12]	; 1c240 <close_stdout@@Base+0x1ffc>
   1c230:	add	r0, pc, r0
   1c234:	add	r0, r0, #256	; 0x100
   1c238:	str	r1, [r0]
   1c23c:	bx	lr
   1c240:	strdeq	sl, [r1], -r4
   1c244:	cmp	r0, #0
   1c248:	movne	r3, r0
   1c24c:	beq	1c27c <close_stdout@@Base+0x2038>
   1c250:	lsr	ip, r1, #5
   1c254:	and	r1, r1, #31
   1c258:	add	r3, r3, ip, lsl #2
   1c25c:	ldr	ip, [r3, #8]
   1c260:	lsr	r0, ip, r1
   1c264:	eor	r2, r0, r2
   1c268:	and	r0, r0, #1
   1c26c:	and	r2, r2, #1
   1c270:	eor	ip, ip, r2, lsl r1
   1c274:	str	ip, [r3, #8]
   1c278:	bx	lr
   1c27c:	ldr	r3, [pc, #8]	; 1c28c <close_stdout@@Base+0x2048>
   1c280:	add	r3, pc, r3
   1c284:	add	r3, r3, #256	; 0x100
   1c288:	b	1c250 <close_stdout@@Base+0x200c>
   1c28c:	andeq	sl, r1, r4, lsr #31
   1c290:	subs	r3, r0, #0
   1c294:	beq	1c2a4 <close_stdout@@Base+0x2060>
   1c298:	ldr	r0, [r3, #4]
   1c29c:	str	r1, [r3, #4]
   1c2a0:	bx	lr
   1c2a4:	ldr	r3, [pc, #8]	; 1c2b4 <close_stdout@@Base+0x2070>
   1c2a8:	add	r3, pc, r3
   1c2ac:	add	r3, r3, #256	; 0x100
   1c2b0:	b	1c298 <close_stdout@@Base+0x2054>
   1c2b4:	andeq	sl, r1, ip, ror pc
   1c2b8:	cmp	r0, #0
   1c2bc:	push	{r3, lr}
   1c2c0:	beq	1c2e4 <close_stdout@@Base+0x20a0>
   1c2c4:	cmp	r2, #0
   1c2c8:	cmpne	r1, #0
   1c2cc:	mov	r3, #8
   1c2d0:	strne	r1, [r0, #40]	; 0x28
   1c2d4:	str	r3, [r0]
   1c2d8:	strne	r2, [r0, #44]	; 0x2c
   1c2dc:	popne	{r3, pc}
   1c2e0:	bl	11c08 <abort@plt>
   1c2e4:	ldr	r0, [pc, #8]	; 1c2f4 <close_stdout@@Base+0x20b0>
   1c2e8:	add	r0, pc, r0
   1c2ec:	add	r0, r0, #256	; 0x100
   1c2f0:	b	1c2c4 <close_stdout@@Base+0x2080>
   1c2f4:	andeq	sl, r1, ip, lsr pc
   1c2f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c2fc:	sub	sp, sp, #24
   1c300:	mov	r7, r0
   1c304:	mov	sl, r1
   1c308:	ldr	r4, [sp, #56]	; 0x38
   1c30c:	mov	r9, r2
   1c310:	mov	r8, r3
   1c314:	cmp	r4, #0
   1c318:	beq	1c36c <close_stdout@@Base+0x2128>
   1c31c:	bl	11aa0 <__errno_location@plt>
   1c320:	ldr	r3, [r4]
   1c324:	add	lr, r4, #8
   1c328:	mov	r1, sl
   1c32c:	mov	r2, r9
   1c330:	ldr	r6, [r0]
   1c334:	mov	r5, r0
   1c338:	str	r3, [sp]
   1c33c:	mov	r0, r7
   1c340:	ldr	ip, [r4, #4]
   1c344:	mov	r3, r8
   1c348:	stmib	sp, {ip, lr}
   1c34c:	ldr	ip, [r4, #40]	; 0x28
   1c350:	str	ip, [sp, #12]
   1c354:	ldr	ip, [r4, #44]	; 0x2c
   1c358:	str	ip, [sp, #16]
   1c35c:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1c360:	str	r6, [r5]
   1c364:	add	sp, sp, #24
   1c368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c36c:	ldr	r4, [pc, #8]	; 1c37c <close_stdout@@Base+0x2138>
   1c370:	add	r4, pc, r4
   1c374:	add	r4, r4, #256	; 0x100
   1c378:	b	1c31c <close_stdout@@Base+0x20d8>
   1c37c:			; <UNDEFINED> instruction: 0x0001aeb4
   1c380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c384:	subs	r4, r3, #0
   1c388:	sub	sp, sp, #36	; 0x24
   1c38c:	mov	r7, r0
   1c390:	mov	r6, r1
   1c394:	mov	r5, r2
   1c398:	beq	1c454 <close_stdout@@Base+0x2210>
   1c39c:	bl	11aa0 <__errno_location@plt>
   1c3a0:	ldr	r3, [r4]
   1c3a4:	ldr	sl, [r4, #4]
   1c3a8:	add	r9, r4, #8
   1c3ac:	mov	r8, r0
   1c3b0:	mov	r0, #0
   1c3b4:	ldr	r2, [r8]
   1c3b8:	cmp	r5, r0
   1c3bc:	orreq	sl, sl, #1
   1c3c0:	str	r9, [sp, #8]
   1c3c4:	mov	r1, r0
   1c3c8:	stm	sp, {r3, sl}
   1c3cc:	mov	r3, r6
   1c3d0:	ldr	ip, [r4, #40]	; 0x28
   1c3d4:	str	r2, [sp, #28]
   1c3d8:	mov	r2, r7
   1c3dc:	str	ip, [sp, #12]
   1c3e0:	ldr	ip, [r4, #44]	; 0x2c
   1c3e4:	str	ip, [sp, #16]
   1c3e8:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1c3ec:	add	r1, r0, #1
   1c3f0:	mov	fp, r0
   1c3f4:	str	r1, [sp, #24]
   1c3f8:	mov	r0, r1
   1c3fc:	bl	1d804 <close_stdout@@Base+0x35c0>
   1c400:	ldr	lr, [r4]
   1c404:	str	sl, [sp, #4]
   1c408:	mov	r3, r6
   1c40c:	str	r9, [sp, #8]
   1c410:	mov	r2, r7
   1c414:	str	lr, [sp]
   1c418:	ldr	lr, [r4, #40]	; 0x28
   1c41c:	ldr	r1, [sp, #24]
   1c420:	str	lr, [sp, #12]
   1c424:	ldr	lr, [r4, #44]	; 0x2c
   1c428:	str	lr, [sp, #16]
   1c42c:	str	r0, [sp, #24]
   1c430:	bl	1b2c0 <close_stdout@@Base+0x107c>
   1c434:	ldr	r3, [sp, #28]
   1c438:	cmp	r5, #0
   1c43c:	str	r3, [r8]
   1c440:	ldr	ip, [sp, #24]
   1c444:	strne	fp, [r5]
   1c448:	mov	r0, ip
   1c44c:	add	sp, sp, #36	; 0x24
   1c450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c454:	ldr	r4, [pc, #8]	; 1c464 <close_stdout@@Base+0x2220>
   1c458:	add	r4, pc, r4
   1c45c:	add	r4, r4, #256	; 0x100
   1c460:	b	1c39c <close_stdout@@Base+0x2158>
   1c464:	andeq	sl, r1, ip, asr #27
   1c468:	mov	r3, r2
   1c46c:	mov	r2, #0
   1c470:	b	1c380 <close_stdout@@Base+0x213c>
   1c474:	ldr	r2, [pc, #152]	; 1c514 <close_stdout@@Base+0x22d0>
   1c478:	push	{r3, r4, r5, r6, r7, lr}
   1c47c:	add	r2, pc, r2
   1c480:	ldr	r3, [pc, #144]	; 1c518 <close_stdout@@Base+0x22d4>
   1c484:	ldr	r6, [r2]
   1c488:	add	r3, pc, r3
   1c48c:	cmp	r6, #1
   1c490:	ldr	r7, [r3]
   1c494:	movhi	r4, #1
   1c498:	movhi	r5, r7
   1c49c:	bls	1c4b8 <close_stdout@@Base+0x2274>
   1c4a0:	ldr	r0, [r5, #12]
   1c4a4:	add	r4, r4, #1
   1c4a8:	bl	11884 <free@plt>
   1c4ac:	cmp	r4, r6
   1c4b0:	add	r5, r5, #8
   1c4b4:	bne	1c4a0 <close_stdout@@Base+0x225c>
   1c4b8:	ldr	r4, [pc, #92]	; 1c51c <close_stdout@@Base+0x22d8>
   1c4bc:	ldr	r0, [r7, #4]
   1c4c0:	add	r4, pc, r4
   1c4c4:	cmp	r0, r4
   1c4c8:	beq	1c4e0 <close_stdout@@Base+0x229c>
   1c4cc:	bl	11884 <free@plt>
   1c4d0:	ldr	r3, [pc, #72]	; 1c520 <close_stdout@@Base+0x22dc>
   1c4d4:	mov	r2, #256	; 0x100
   1c4d8:	add	r3, pc, r3
   1c4dc:	stmib	r3, {r2, r4}
   1c4e0:	ldr	r4, [pc, #60]	; 1c524 <close_stdout@@Base+0x22e0>
   1c4e4:	add	r4, pc, r4
   1c4e8:	add	r5, r4, #4
   1c4ec:	cmp	r7, r5
   1c4f0:	beq	1c500 <close_stdout@@Base+0x22bc>
   1c4f4:	mov	r0, r7
   1c4f8:	bl	11884 <free@plt>
   1c4fc:	str	r5, [r4]
   1c500:	ldr	r3, [pc, #32]	; 1c528 <close_stdout@@Base+0x22e4>
   1c504:	mov	r2, #1
   1c508:	add	r3, pc, r3
   1c50c:	str	r2, [r3]
   1c510:	pop	{r3, r4, r5, r6, r7, pc}
   1c514:	andeq	sl, r1, r0, asr sp
   1c518:	andeq	sl, r1, r8, ror sp
   1c51c:	andeq	sl, r1, r4, ror #26
   1c520:	andeq	sl, r1, r8, lsr #26
   1c524:	andeq	sl, r1, ip, lsl sp
   1c528:	andeq	sl, r1, r4, asr #25
   1c52c:	ldr	r3, [pc, #12]	; 1c540 <close_stdout@@Base+0x22fc>
   1c530:	mvn	r2, #0
   1c534:	add	r3, pc, r3
   1c538:	add	r3, r3, #256	; 0x100
   1c53c:	b	1bfe8 <close_stdout@@Base+0x1da4>
   1c540:	strdeq	sl, [r1], -r0
   1c544:	ldr	r3, [pc, #8]	; 1c554 <close_stdout@@Base+0x2310>
   1c548:	add	r3, pc, r3
   1c54c:	add	r3, r3, #256	; 0x100
   1c550:	b	1bfe8 <close_stdout@@Base+0x1da4>
   1c554:	ldrdeq	sl, [r1], -ip
   1c558:	mov	r1, r0
   1c55c:	mov	r0, #0
   1c560:	b	1c52c <close_stdout@@Base+0x22e8>
   1c564:	mov	r2, r1
   1c568:	mov	r1, r0
   1c56c:	mov	r0, #0
   1c570:	b	1c544 <close_stdout@@Base+0x2300>
   1c574:	ldr	r3, [pc, #92]	; 1c5d8 <close_stdout@@Base+0x2394>
   1c578:	ldr	ip, [pc, #92]	; 1c5dc <close_stdout@@Base+0x2398>
   1c57c:	add	r3, pc, r3
   1c580:	push	{r4, r5, r6, r7, lr}
   1c584:	sub	sp, sp, #60	; 0x3c
   1c588:	ldr	r4, [r3, ip]
   1c58c:	add	r5, sp, #4
   1c590:	mov	r7, r2
   1c594:	mov	r6, r0
   1c598:	mov	r0, r5
   1c59c:	ldr	r3, [r4]
   1c5a0:	str	r3, [sp, #52]	; 0x34
   1c5a4:	bl	1b108 <close_stdout@@Base+0xec4>
   1c5a8:	mov	r3, r5
   1c5ac:	mvn	r2, #0
   1c5b0:	mov	r0, r6
   1c5b4:	mov	r1, r7
   1c5b8:	bl	1bfe8 <close_stdout@@Base+0x1da4>
   1c5bc:	ldr	r2, [sp, #52]	; 0x34
   1c5c0:	ldr	r3, [r4]
   1c5c4:	cmp	r2, r3
   1c5c8:	bne	1c5d4 <close_stdout@@Base+0x2390>
   1c5cc:	add	sp, sp, #60	; 0x3c
   1c5d0:	pop	{r4, r5, r6, r7, pc}
   1c5d4:	bl	118e4 <__stack_chk_fail@plt>
   1c5d8:	andeq	sl, r1, ip, ror sl
   1c5dc:	andeq	r0, r0, ip, lsl #3
   1c5e0:	ldr	ip, [pc, #96]	; 1c648 <close_stdout@@Base+0x2404>
   1c5e4:	push	{r4, r5, r6, r7, r8, lr}
   1c5e8:	add	ip, pc, ip
   1c5ec:	ldr	lr, [pc, #88]	; 1c64c <close_stdout@@Base+0x2408>
   1c5f0:	sub	sp, sp, #56	; 0x38
   1c5f4:	mov	r8, r3
   1c5f8:	add	r5, sp, #4
   1c5fc:	mov	r7, r2
   1c600:	mov	r6, r0
   1c604:	ldr	r4, [ip, lr]
   1c608:	mov	r0, r5
   1c60c:	ldr	r3, [r4]
   1c610:	str	r3, [sp, #52]	; 0x34
   1c614:	bl	1b108 <close_stdout@@Base+0xec4>
   1c618:	mov	r2, r8
   1c61c:	mov	r3, r5
   1c620:	mov	r0, r6
   1c624:	mov	r1, r7
   1c628:	bl	1bfe8 <close_stdout@@Base+0x1da4>
   1c62c:	ldr	r2, [sp, #52]	; 0x34
   1c630:	ldr	r3, [r4]
   1c634:	cmp	r2, r3
   1c638:	bne	1c644 <close_stdout@@Base+0x2400>
   1c63c:	add	sp, sp, #56	; 0x38
   1c640:	pop	{r4, r5, r6, r7, r8, pc}
   1c644:	bl	118e4 <__stack_chk_fail@plt>
   1c648:	andeq	sl, r1, r0, lsl sl
   1c64c:	andeq	r0, r0, ip, lsl #3
   1c650:	mov	r2, r1
   1c654:	mov	r1, r0
   1c658:	mov	r0, #0
   1c65c:	b	1c574 <close_stdout@@Base+0x2330>
   1c660:	mov	ip, r1
   1c664:	mov	r3, r2
   1c668:	mov	r1, r0
   1c66c:	mov	r2, ip
   1c670:	mov	r0, #0
   1c674:	b	1c5e0 <close_stdout@@Base+0x239c>
   1c678:	push	{r4, r5, r6, r7, r8, lr}
   1c67c:	mov	r5, r2
   1c680:	ldr	lr, [pc, #136]	; 1c710 <close_stdout@@Base+0x24cc>
   1c684:	mov	r7, r0
   1c688:	mov	r6, r1
   1c68c:	ldr	r4, [pc, #128]	; 1c714 <close_stdout@@Base+0x24d0>
   1c690:	add	lr, pc, lr
   1c694:	sub	sp, sp, #56	; 0x38
   1c698:	add	lr, lr, #256	; 0x100
   1c69c:	ldr	r8, [pc, #116]	; 1c718 <close_stdout@@Base+0x24d4>
   1c6a0:	add	r4, pc, r4
   1c6a4:	add	ip, sp, #4
   1c6a8:	ldm	lr!, {r0, r1, r2, r3}
   1c6ac:	ldr	r4, [r4, r8]
   1c6b0:	stmia	ip!, {r0, r1, r2, r3}
   1c6b4:	ldm	lr!, {r0, r1, r2, r3}
   1c6b8:	ldr	r8, [r4]
   1c6bc:	stmia	ip!, {r0, r1, r2, r3}
   1c6c0:	ldm	lr, {r0, r1, r2, r3}
   1c6c4:	str	r8, [sp, #52]	; 0x34
   1c6c8:	stm	ip, {r0, r1, r2, r3}
   1c6cc:	mov	r1, r5
   1c6d0:	add	r5, sp, #4
   1c6d4:	mov	r2, #1
   1c6d8:	mov	r0, r5
   1c6dc:	bl	1c244 <close_stdout@@Base+0x2000>
   1c6e0:	mov	r2, r6
   1c6e4:	mov	r3, r5
   1c6e8:	mov	r1, r7
   1c6ec:	mov	r0, #0
   1c6f0:	bl	1bfe8 <close_stdout@@Base+0x1da4>
   1c6f4:	ldr	r2, [sp, #52]	; 0x34
   1c6f8:	ldr	r3, [r4]
   1c6fc:	cmp	r2, r3
   1c700:	bne	1c70c <close_stdout@@Base+0x24c8>
   1c704:	add	sp, sp, #56	; 0x38
   1c708:	pop	{r4, r5, r6, r7, r8, pc}
   1c70c:	bl	118e4 <__stack_chk_fail@plt>
   1c710:	muleq	r1, r4, fp
   1c714:	andeq	sl, r1, r8, asr r9
   1c718:	andeq	r0, r0, ip, lsl #3
   1c71c:	mov	r2, r1
   1c720:	mvn	r1, #0
   1c724:	b	1c678 <close_stdout@@Base+0x2434>
   1c728:	mov	r1, #58	; 0x3a
   1c72c:	b	1c71c <close_stdout@@Base+0x24d8>
   1c730:	mov	r2, #58	; 0x3a
   1c734:	b	1c678 <close_stdout@@Base+0x2434>
   1c738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c73c:	mov	r5, r2
   1c740:	ldr	lr, [pc, #144]	; 1c7d8 <close_stdout@@Base+0x2594>
   1c744:	mov	r8, r0
   1c748:	mov	r9, r1
   1c74c:	mov	r7, r3
   1c750:	add	lr, pc, lr
   1c754:	ldr	r4, [pc, #128]	; 1c7dc <close_stdout@@Base+0x2598>
   1c758:	add	lr, lr, #256	; 0x100
   1c75c:	sub	sp, sp, #56	; 0x38
   1c760:	ldr	sl, [pc, #120]	; 1c7e0 <close_stdout@@Base+0x259c>
   1c764:	add	r4, pc, r4
   1c768:	ldm	lr!, {r0, r1, r2, r3}
   1c76c:	add	ip, sp, #4
   1c770:	ldr	r4, [r4, sl]
   1c774:	ldr	r6, [sp, #88]	; 0x58
   1c778:	stmia	ip!, {r0, r1, r2, r3}
   1c77c:	ldm	lr!, {r0, r1, r2, r3}
   1c780:	ldr	sl, [r4]
   1c784:	stmia	ip!, {r0, r1, r2, r3}
   1c788:	ldm	lr, {r0, r1, r2, r3}
   1c78c:	str	sl, [sp, #52]	; 0x34
   1c790:	stm	ip, {r0, r1, r2, r3}
   1c794:	mov	r2, r5
   1c798:	add	r5, sp, #4
   1c79c:	mov	r1, r9
   1c7a0:	mov	r0, r5
   1c7a4:	bl	1c2b8 <close_stdout@@Base+0x2074>
   1c7a8:	mov	r2, r6
   1c7ac:	mov	r3, r5
   1c7b0:	mov	r0, r8
   1c7b4:	mov	r1, r7
   1c7b8:	bl	1bfe8 <close_stdout@@Base+0x1da4>
   1c7bc:	ldr	r2, [sp, #52]	; 0x34
   1c7c0:	ldr	r3, [r4]
   1c7c4:	cmp	r2, r3
   1c7c8:	bne	1c7d4 <close_stdout@@Base+0x2590>
   1c7cc:	add	sp, sp, #56	; 0x38
   1c7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c7d4:	bl	118e4 <__stack_chk_fail@plt>
   1c7d8:	ldrdeq	sl, [r1], -r4
   1c7dc:	muleq	r1, r4, r8
   1c7e0:	andeq	r0, r0, ip, lsl #3
   1c7e4:	push	{lr}		; (str lr, [sp, #-4]!)
   1c7e8:	sub	sp, sp, #12
   1c7ec:	mvn	ip, #0
   1c7f0:	str	ip, [sp]
   1c7f4:	bl	1c738 <close_stdout@@Base+0x24f4>
   1c7f8:	add	sp, sp, #12
   1c7fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c800:	mov	ip, r1
   1c804:	mov	r3, r2
   1c808:	mov	r1, r0
   1c80c:	mov	r2, ip
   1c810:	mov	r0, #0
   1c814:	b	1c7e4 <close_stdout@@Base+0x25a0>
   1c818:	push	{lr}		; (str lr, [sp, #-4]!)
   1c81c:	sub	sp, sp, #12
   1c820:	mov	lr, r1
   1c824:	mov	ip, r2
   1c828:	mov	r1, r0
   1c82c:	str	r3, [sp]
   1c830:	mov	r2, lr
   1c834:	mov	r3, ip
   1c838:	mov	r0, #0
   1c83c:	bl	1c738 <close_stdout@@Base+0x24f4>
   1c840:	add	sp, sp, #12
   1c844:	pop	{pc}		; (ldr pc, [sp], #4)
   1c848:	ldr	r3, [pc, #12]	; 1c85c <close_stdout@@Base+0x2618>
   1c84c:	ldr	ip, [pc, #12]	; 1c860 <close_stdout@@Base+0x261c>
   1c850:	add	r3, pc, r3
   1c854:	ldr	r3, [r3, ip]
   1c858:	b	1bfe8 <close_stdout@@Base+0x1da4>
   1c85c:	andeq	sl, r1, r8, lsr #15
   1c860:	andeq	r0, r0, r4, lsl #3
   1c864:	mov	r2, r1
   1c868:	mov	r1, r0
   1c86c:	mov	r0, #0
   1c870:	b	1c848 <close_stdout@@Base+0x2604>
   1c874:	mvn	r2, #0
   1c878:	b	1c848 <close_stdout@@Base+0x2604>
   1c87c:	mov	r1, r0
   1c880:	mov	r0, #0
   1c884:	b	1c874 <close_stdout@@Base+0x2630>
   1c888:	mov	r3, #0
   1c88c:	str	r3, [r0]
   1c890:	str	r3, [r0, #4]
   1c894:	bx	lr
   1c898:	ldr	ip, [pc, #560]	; 1cad0 <close_stdout@@Base+0x288c>
   1c89c:	cmp	r2, #0
   1c8a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8a4:	add	ip, pc, ip
   1c8a8:	ldr	r4, [pc, #548]	; 1cad4 <close_stdout@@Base+0x2890>
   1c8ac:	mov	r6, r0
   1c8b0:	mov	r0, ip
   1c8b4:	sub	sp, sp, #52	; 0x34
   1c8b8:	mov	r8, r3
   1c8bc:	addne	r5, r1, r2
   1c8c0:	ldr	r9, [ip, r4]
   1c8c4:	mov	r3, #0
   1c8c8:	movne	r4, #1
   1c8cc:	str	r3, [sp, #12]
   1c8d0:	str	r3, [sp, #16]
   1c8d4:	ldr	r0, [r9]
   1c8d8:	str	r3, [sp, #20]
   1c8dc:	str	r3, [sp, #24]
   1c8e0:	str	r0, [sp, #44]	; 0x2c
   1c8e4:	addne	r0, sp, #12
   1c8e8:	str	r3, [sp, #28]
   1c8ec:	str	r3, [sp, #32]
   1c8f0:	str	r3, [sp, #36]	; 0x24
   1c8f4:	str	r3, [sp, #40]	; 0x28
   1c8f8:	beq	1c91c <close_stdout@@Base+0x26d8>
   1c8fc:	ldrb	r3, [r1], #1
   1c900:	and	ip, r3, #31
   1c904:	cmp	r1, r5
   1c908:	lsr	r3, r3, #5
   1c90c:	ldr	r2, [r0, r3, lsl #2]
   1c910:	orr	r2, r2, r4, lsl ip
   1c914:	str	r2, [r0, r3, lsl #2]
   1c918:	bne	1c8fc <close_stdout@@Base+0x26b8>
   1c91c:	ldr	r3, [r6, #4]
   1c920:	ldr	r2, [r6, #8]
   1c924:	cmp	r3, r2
   1c928:	bcs	1cabc <close_stdout@@Base+0x2878>
   1c92c:	add	r2, r3, #1
   1c930:	str	r2, [r6, #4]
   1c934:	ldrb	r4, [r3]
   1c938:	lsr	r2, r4, #5
   1c93c:	add	r0, sp, #48	; 0x30
   1c940:	and	r3, r4, #31
   1c944:	add	r2, r0, r2, lsl #2
   1c948:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1c94c:	lsr	r3, r2, r3
   1c950:	tst	r3, #1
   1c954:	beq	1c990 <close_stdout@@Base+0x274c>
   1c958:	ldmib	r6, {r2, r3}
   1c95c:	cmp	r2, r3
   1c960:	bcs	1caa0 <close_stdout@@Base+0x285c>
   1c964:	add	r3, r2, #1
   1c968:	str	r3, [r6, #4]
   1c96c:	ldrb	r4, [r2]
   1c970:	lsr	r2, r4, #5
   1c974:	add	r1, sp, #48	; 0x30
   1c978:	and	r3, r4, #31
   1c97c:	add	r2, r1, r2, lsl #2
   1c980:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1c984:	lsr	r3, r2, r3
   1c988:	tst	r3, #1
   1c98c:	bne	1c958 <close_stdout@@Base+0x2714>
   1c990:	movw	fp, #43689	; 0xaaa9
   1c994:	ldr	r1, [r8, #4]
   1c998:	movt	fp, #43690	; 0xaaaa
   1c99c:	ldr	sl, [r8]
   1c9a0:	mov	r5, #0
   1c9a4:	b	1c9f0 <close_stdout@@Base+0x27ac>
   1c9a8:	cmp	r7, #0
   1c9ac:	bne	1ca3c <close_stdout@@Base+0x27f8>
   1c9b0:	lsr	r2, r4, #5
   1c9b4:	add	r0, sp, #48	; 0x30
   1c9b8:	and	r3, r4, #31
   1c9bc:	add	r2, r0, r2, lsl #2
   1c9c0:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1c9c4:	lsr	r3, r2, r3
   1c9c8:	tst	r3, #1
   1c9cc:	bne	1ca80 <close_stdout@@Base+0x283c>
   1c9d0:	strb	r4, [r1, r5]
   1c9d4:	add	r5, r5, #1
   1c9d8:	ldmib	r6, {r2, r3}
   1c9dc:	cmp	r2, r3
   1c9e0:	bcs	1ca88 <close_stdout@@Base+0x2844>
   1c9e4:	add	r3, r2, #1
   1c9e8:	str	r3, [r6, #4]
   1c9ec:	ldrb	r4, [r2]
   1c9f0:	rsbs	r3, r5, #1
   1c9f4:	lsr	r7, r4, #31
   1c9f8:	movcc	r3, #0
   1c9fc:	tst	r3, r7
   1ca00:	bne	1ca64 <close_stdout@@Base+0x2820>
   1ca04:	cmp	r5, sl
   1ca08:	bne	1c9a8 <close_stdout@@Base+0x2764>
   1ca0c:	cmp	r1, #0
   1ca10:	beq	1ca54 <close_stdout@@Base+0x2810>
   1ca14:	cmp	r5, fp
   1ca18:	bhi	1cab4 <close_stdout@@Base+0x2870>
   1ca1c:	add	sl, r5, #1
   1ca20:	add	sl, r5, sl, lsr #1
   1ca24:	mov	r0, r1
   1ca28:	mov	r1, sl
   1ca2c:	bl	1d85c <close_stdout@@Base+0x3618>
   1ca30:	cmp	r7, #0
   1ca34:	mov	r1, r0
   1ca38:	beq	1c9b0 <close_stdout@@Base+0x276c>
   1ca3c:	mov	r3, #0
   1ca40:	strb	r3, [r1, r5]
   1ca44:	str	r1, [r8, #4]
   1ca48:	mov	r0, r5
   1ca4c:	str	sl, [r8]
   1ca50:	b	1ca68 <close_stdout@@Base+0x2824>
   1ca54:	cmp	r3, #0
   1ca58:	moveq	sl, r5
   1ca5c:	movne	sl, #64	; 0x40
   1ca60:	b	1ca24 <close_stdout@@Base+0x27e0>
   1ca64:	mvn	r0, #0
   1ca68:	ldr	r2, [sp, #44]	; 0x2c
   1ca6c:	ldr	r3, [r9]
   1ca70:	cmp	r2, r3
   1ca74:	bne	1cab8 <close_stdout@@Base+0x2874>
   1ca78:	add	sp, sp, #52	; 0x34
   1ca7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca80:	strb	r7, [r1, r5]
   1ca84:	b	1ca44 <close_stdout@@Base+0x2800>
   1ca88:	mov	r0, r6
   1ca8c:	str	r1, [sp, #4]
   1ca90:	bl	11b78 <__uflow@plt>
   1ca94:	ldr	r1, [sp, #4]
   1ca98:	mov	r4, r0
   1ca9c:	b	1c9f0 <close_stdout@@Base+0x27ac>
   1caa0:	mov	r0, r6
   1caa4:	bl	11b78 <__uflow@plt>
   1caa8:	subs	r4, r0, #0
   1caac:	blt	1c990 <close_stdout@@Base+0x274c>
   1cab0:	b	1c970 <close_stdout@@Base+0x272c>
   1cab4:	bl	1da18 <close_stdout@@Base+0x37d4>
   1cab8:	bl	118e4 <__stack_chk_fail@plt>
   1cabc:	mov	r0, r6
   1cac0:	bl	11b78 <__uflow@plt>
   1cac4:	subs	r4, r0, #0
   1cac8:	blt	1c990 <close_stdout@@Base+0x274c>
   1cacc:	b	1c938 <close_stdout@@Base+0x26f4>
   1cad0:	andeq	sl, r1, r4, asr r7
   1cad4:	andeq	r0, r0, ip, lsl #3
   1cad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cadc:	sub	sp, sp, #44	; 0x2c
   1cae0:	ldr	ip, [pc, #404]	; 1cc7c <close_stdout@@Base+0x2a38>
   1cae4:	mov	fp, r3
   1cae8:	stm	sp, {r0, r2}
   1caec:	cmp	r1, #0
   1caf0:	ldr	lr, [pc, #392]	; 1cc80 <close_stdout@@Base+0x2a3c>
   1caf4:	add	ip, pc, ip
   1caf8:	ldr	r2, [sp, #80]	; 0x50
   1cafc:	mov	r3, ip
   1cb00:	ldr	r3, [sp, #84]	; 0x54
   1cb04:	str	r2, [sp, #20]
   1cb08:	ldr	lr, [ip, lr]
   1cb0c:	str	r3, [sp, #16]
   1cb10:	ldr	r3, [lr]
   1cb14:	str	lr, [sp, #12]
   1cb18:	str	r3, [sp, #36]	; 0x24
   1cb1c:	beq	1cc5c <close_stdout@@Base+0x2a18>
   1cb20:	add	r5, r1, #1
   1cb24:	cmn	r5, #-1073741823	; 0xc0000001
   1cb28:	bhi	1cc74 <close_stdout@@Base+0x2a30>
   1cb2c:	lsl	r4, r5, #2
   1cb30:	mov	r0, r4
   1cb34:	add	r8, sp, #28
   1cb38:	bl	1d804 <close_stdout@@Base+0x35c0>
   1cb3c:	mov	r6, r0
   1cb40:	mov	r0, r4
   1cb44:	bl	1d804 <close_stdout@@Base+0x35c0>
   1cb48:	movw	r1, #43689	; 0xaaa9
   1cb4c:	str	r1, [sp, #8]
   1cb50:	mov	r4, #0
   1cb54:	mov	r7, r0
   1cb58:	mov	r0, r8
   1cb5c:	bl	1c888 <close_stdout@@Base+0x2644>
   1cb60:	ldr	r2, [sp, #8]
   1cb64:	movt	r2, #10922	; 0x2aaa
   1cb68:	str	r2, [sp, #8]
   1cb6c:	b	1cbd4 <close_stdout@@Base+0x2990>
   1cb70:	ldr	r3, [sp, #8]
   1cb74:	cmp	r5, r3
   1cb78:	bhi	1cc74 <close_stdout@@Base+0x2a30>
   1cb7c:	add	r2, r5, #1
   1cb80:	add	r5, r5, r2, lsr #1
   1cb84:	lsl	r9, r5, #2
   1cb88:	mov	r0, r6
   1cb8c:	mov	r1, r9
   1cb90:	bl	1d85c <close_stdout@@Base+0x3618>
   1cb94:	mov	r1, r9
   1cb98:	mov	r6, r0
   1cb9c:	mov	r0, r7
   1cba0:	bl	1d85c <close_stdout@@Base+0x3618>
   1cba4:	mov	r7, r0
   1cba8:	cmn	sl, #1
   1cbac:	beq	1cc0c <close_stdout@@Base+0x29c8>
   1cbb0:	add	r9, sl, #1
   1cbb4:	mov	r0, r9
   1cbb8:	bl	1d804 <close_stdout@@Base+0x35c0>
   1cbbc:	str	sl, [r7, r4, lsl #2]
   1cbc0:	mov	r2, r9
   1cbc4:	ldr	r1, [sp, #32]
   1cbc8:	bl	1189c <memcpy@plt>
   1cbcc:	str	r0, [r6, r4, lsl #2]
   1cbd0:	add	r4, r4, #1
   1cbd4:	ldm	sp, {r0, r1}
   1cbd8:	mov	r2, fp
   1cbdc:	mov	r3, r8
   1cbe0:	bl	1c898 <close_stdout@@Base+0x2654>
   1cbe4:	cmp	r4, r5
   1cbe8:	mov	sl, r0
   1cbec:	bcc	1cba8 <close_stdout@@Base+0x2964>
   1cbf0:	cmp	r6, #0
   1cbf4:	bne	1cb70 <close_stdout@@Base+0x292c>
   1cbf8:	cmp	r5, #0
   1cbfc:	moveq	r9, #64	; 0x40
   1cc00:	moveq	r5, #16
   1cc04:	beq	1cb88 <close_stdout@@Base+0x2944>
   1cc08:	b	1cb84 <close_stdout@@Base+0x2940>
   1cc0c:	mov	r3, #0
   1cc10:	str	r3, [r6, r4, lsl #2]
   1cc14:	str	r3, [r7, r4, lsl #2]
   1cc18:	ldr	r0, [sp, #32]
   1cc1c:	bl	11884 <free@plt>
   1cc20:	ldr	r1, [sp, #16]
   1cc24:	ldr	r2, [sp, #20]
   1cc28:	cmp	r1, #0
   1cc2c:	ldrne	r3, [sp, #16]
   1cc30:	str	r6, [r2]
   1cc34:	strne	r7, [r3]
   1cc38:	beq	1cc68 <close_stdout@@Base+0x2a24>
   1cc3c:	ldr	r1, [sp, #12]
   1cc40:	mov	r0, r4
   1cc44:	ldr	r2, [sp, #36]	; 0x24
   1cc48:	ldr	r3, [r1]
   1cc4c:	cmp	r2, r3
   1cc50:	bne	1cc78 <close_stdout@@Base+0x2a34>
   1cc54:	add	sp, sp, #44	; 0x2c
   1cc58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc5c:	mov	r4, #256	; 0x100
   1cc60:	mov	r5, #64	; 0x40
   1cc64:	b	1cb30 <close_stdout@@Base+0x28ec>
   1cc68:	mov	r0, r7
   1cc6c:	bl	11884 <free@plt>
   1cc70:	b	1cc3c <close_stdout@@Base+0x29f8>
   1cc74:	bl	1da18 <close_stdout@@Base+0x37d4>
   1cc78:	bl	118e4 <__stack_chk_fail@plt>
   1cc7c:	andeq	sl, r1, r4, lsl #10
   1cc80:	andeq	r0, r0, ip, lsl #3
   1cc84:	push	{r3, r4, r5, lr}
   1cc88:	mov	r4, r1
   1cc8c:	mov	r2, r4
   1cc90:	mov	r1, #0
   1cc94:	mov	r5, r0
   1cc98:	bl	11b24 <memchr@plt>
   1cc9c:	cmp	r0, #0
   1cca0:	rsbne	r0, r5, r0
   1cca4:	addne	r0, r0, #1
   1cca8:	moveq	r0, r4
   1ccac:	pop	{r3, r4, r5, pc}
   1ccb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccb4:	sub	sp, sp, #84	; 0x54
   1ccb8:	ldr	r5, [pc, #1396]	; 1d234 <close_stdout@@Base+0x2ff0>
   1ccbc:	mov	sl, r1
   1ccc0:	ldr	r3, [pc, #1392]	; 1d238 <close_stdout@@Base+0x2ff4>
   1ccc4:	add	r5, pc, r5
   1ccc8:	ldr	r3, [r5, r3]
   1cccc:	str	r3, [sp, #12]
   1ccd0:	ldr	r3, [r3]
   1ccd4:	str	r3, [sp, #76]	; 0x4c
   1ccd8:	bl	11ad0 <__strdup@plt>
   1ccdc:	cmp	r0, #0
   1cce0:	str	r0, [sp]
   1cce4:	beq	1d210 <close_stdout@@Base+0x2fcc>
   1cce8:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1ccec:	cmp	r0, #1
   1ccf0:	bls	1cf94 <close_stdout@@Base+0x2d50>
   1ccf4:	cmp	sl, #0
   1ccf8:	bne	1d054 <close_stdout@@Base+0x2e10>
   1ccfc:	add	r4, sp, #24
   1cd00:	ldr	r0, [sp]
   1cd04:	mov	fp, #0
   1cd08:	str	r0, [sp, #36]	; 0x24
   1cd0c:	bl	11a64 <strlen@plt>
   1cd10:	ldr	r1, [sp]
   1cd14:	str	fp, [sp, #24]
   1cd18:	strb	fp, [sp, #20]
   1cd1c:	str	fp, [r4, #4]
   1cd20:	strb	fp, [sp, #32]
   1cd24:	add	r9, r1, r0
   1cd28:	str	r9, [sp, #16]
   1cd2c:	cmp	r1, r9
   1cd30:	bcs	1cf64 <close_stdout@@Base+0x2d20>
   1cd34:	add	r1, sp, #48	; 0x30
   1cd38:	str	r1, [sp, #4]
   1cd3c:	ldrb	r1, [sp, #20]
   1cd40:	mov	r8, fp
   1cd44:	ldr	r3, [sp]
   1cd48:	mov	r7, #1
   1cd4c:	cmp	r1, #0
   1cd50:	mov	ip, r3
   1cd54:	bne	1cdf8 <close_stdout@@Base+0x2bb4>
   1cd58:	ldr	r2, [pc, #1244]	; 1d23c <close_stdout@@Base+0x2ff8>
   1cd5c:	ldrb	r3, [ip]
   1cd60:	ldr	r1, [r5, r2]
   1cd64:	and	r2, r3, #31
   1cd68:	lsr	r3, r3, #5
   1cd6c:	ldr	r3, [r1, r3, lsl #2]
   1cd70:	lsr	r3, r3, r2
   1cd74:	tst	r3, #1
   1cd78:	beq	1cea8 <close_stdout@@Base+0x2c64>
   1cd7c:	str	r7, [sp, #40]	; 0x28
   1cd80:	mov	r6, #1
   1cd84:	ldrb	r2, [ip]
   1cd88:	ldr	r9, [sp, #16]
   1cd8c:	ldr	sl, [sp, #36]	; 0x24
   1cd90:	strb	r7, [sp, #44]	; 0x2c
   1cd94:	str	r2, [sp, #48]	; 0x30
   1cd98:	cmp	fp, #0
   1cd9c:	strb	r7, [sp, #32]
   1cda0:	beq	1ce80 <close_stdout@@Base+0x2c3c>
   1cda4:	cmp	fp, #1
   1cda8:	beq	1cec0 <close_stdout@@Base+0x2c7c>
   1cdac:	cmp	fp, #2
   1cdb0:	bne	1cea0 <close_stdout@@Base+0x2c5c>
   1cdb4:	ldrb	r2, [sp, #44]	; 0x2c
   1cdb8:	cmp	r2, #0
   1cdbc:	beq	1cea0 <close_stdout@@Base+0x2c5c>
   1cdc0:	ldr	r0, [sp, #48]	; 0x30
   1cdc4:	bl	11a58 <iswspace@plt>
   1cdc8:	cmp	r0, #0
   1cdcc:	movne	fp, #2
   1cdd0:	moveq	fp, #1
   1cdd4:	add	ip, sl, r6
   1cdd8:	strb	r8, [sp, #32]
   1cddc:	cmp	ip, r9
   1cde0:	str	ip, [sp, #36]	; 0x24
   1cde4:	mov	r1, #0
   1cde8:	bcs	1cf84 <close_stdout@@Base+0x2d40>
   1cdec:	ldrb	r1, [sp, #20]
   1cdf0:	cmp	r1, #0
   1cdf4:	beq	1cd58 <close_stdout@@Base+0x2b14>
   1cdf8:	ldr	r1, [sp, #36]	; 0x24
   1cdfc:	add	r0, sp, #48	; 0x30
   1ce00:	mov	r3, r4
   1ce04:	rsb	r2, r1, r9
   1ce08:	bl	119a4 <mbrtowc@plt>
   1ce0c:	cmn	r0, #1
   1ce10:	str	r0, [sp, #40]	; 0x28
   1ce14:	beq	1cef0 <close_stdout@@Base+0x2cac>
   1ce18:	cmn	r0, #2
   1ce1c:	beq	1cf08 <close_stdout@@Base+0x2cc4>
   1ce20:	cmp	r0, #0
   1ce24:	ldr	r6, [sp, #36]	; 0x24
   1ce28:	bne	1ce48 <close_stdout@@Base+0x2c04>
   1ce2c:	str	r7, [sp, #40]	; 0x28
   1ce30:	ldrb	r3, [r6]
   1ce34:	cmp	r3, #0
   1ce38:	bne	1d214 <close_stdout@@Base+0x2fd0>
   1ce3c:	ldr	r3, [sp, #48]	; 0x30
   1ce40:	cmp	r3, #0
   1ce44:	bne	1d1f0 <close_stdout@@Base+0x2fac>
   1ce48:	mov	r0, r4
   1ce4c:	strb	r7, [sp, #44]	; 0x2c
   1ce50:	bl	118b4 <mbsinit@plt>
   1ce54:	strb	r7, [sp, #32]
   1ce58:	cmp	r0, #0
   1ce5c:	strbne	r8, [sp, #20]
   1ce60:	moveq	sl, r6
   1ce64:	movne	sl, r6
   1ce68:	ldreq	r9, [sp, #16]
   1ce6c:	ldreq	r6, [sp, #40]	; 0x28
   1ce70:	ldrne	r9, [sp, #16]
   1ce74:	ldrne	r6, [sp, #40]	; 0x28
   1ce78:	cmp	fp, #0
   1ce7c:	bne	1cda4 <close_stdout@@Base+0x2b60>
   1ce80:	ldrb	r2, [sp, #44]	; 0x2c
   1ce84:	cmp	r2, #0
   1ce88:	beq	1cea0 <close_stdout@@Base+0x2c5c>
   1ce8c:	ldr	r0, [sp, #48]	; 0x30
   1ce90:	bl	11a58 <iswspace@plt>
   1ce94:	rsbs	fp, r0, #1
   1ce98:	movcc	fp, #0
   1ce9c:	b	1cdd4 <close_stdout@@Base+0x2b90>
   1cea0:	mov	fp, #1
   1cea4:	b	1cdd4 <close_stdout@@Base+0x2b90>
   1cea8:	mov	r0, r4
   1ceac:	bl	118b4 <mbsinit@plt>
   1ceb0:	cmp	r0, #0
   1ceb4:	beq	1d1cc <close_stdout@@Base+0x2f88>
   1ceb8:	strb	r7, [sp, #20]
   1cebc:	b	1cdf8 <close_stdout@@Base+0x2bb4>
   1cec0:	ldrb	r2, [sp, #44]	; 0x2c
   1cec4:	cmp	r2, #0
   1cec8:	beq	1cdd4 <close_stdout@@Base+0x2b90>
   1cecc:	ldr	r0, [sp, #48]	; 0x30
   1ced0:	bl	11a58 <iswspace@plt>
   1ced4:	ldr	r2, [sp, #8]
   1ced8:	cmp	r0, #0
   1cedc:	movne	r2, sl
   1cee0:	moveq	fp, #1
   1cee4:	movne	fp, #2
   1cee8:	str	r2, [sp, #8]
   1ceec:	b	1cdd4 <close_stdout@@Base+0x2b90>
   1cef0:	str	r7, [sp, #40]	; 0x28
   1cef4:	mov	r6, #1
   1cef8:	strb	r8, [sp, #44]	; 0x2c
   1cefc:	ldr	r9, [sp, #16]
   1cf00:	ldr	sl, [sp, #36]	; 0x24
   1cf04:	b	1cd98 <close_stdout@@Base+0x2b54>
   1cf08:	ldr	ip, [sp, #36]	; 0x24
   1cf0c:	ldr	r9, [sp, #16]
   1cf10:	strb	r8, [sp, #44]	; 0x2c
   1cf14:	rsb	r3, ip, r9
   1cf18:	mov	sl, ip
   1cf1c:	str	r3, [sp, #40]	; 0x28
   1cf20:	mov	r6, r3
   1cf24:	b	1cd98 <close_stdout@@Base+0x2b54>
   1cf28:	ldr	fp, [sp, #36]	; 0x24
   1cf2c:	mov	r2, #1
   1cf30:	mov	r3, #0
   1cf34:	str	r2, [sp, #40]	; 0x28
   1cf38:	strb	r3, [sp, #44]	; 0x2c
   1cf3c:	mov	r3, #1
   1cf40:	strb	r3, [sp, #32]
   1cf44:	mov	r0, fp
   1cf48:	bl	11a64 <strlen@plt>
   1cf4c:	mov	r1, fp
   1cf50:	add	r2, r0, #1
   1cf54:	ldr	r0, [sp]
   1cf58:	bl	11860 <memmove@plt>
   1cf5c:	cmp	sl, #1
   1cf60:	bne	1cd00 <close_stdout@@Base+0x2abc>
   1cf64:	ldr	r1, [sp, #12]
   1cf68:	ldr	r2, [sp, #76]	; 0x4c
   1cf6c:	ldr	r0, [sp]
   1cf70:	ldr	r3, [r1]
   1cf74:	cmp	r2, r3
   1cf78:	bne	1d1ec <close_stdout@@Base+0x2fa8>
   1cf7c:	add	sp, sp, #84	; 0x54
   1cf80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cf84:	cmp	fp, #2
   1cf88:	ldreq	r3, [sp, #8]
   1cf8c:	strbeq	r1, [r3]
   1cf90:	b	1cf64 <close_stdout@@Base+0x2d20>
   1cf94:	cmp	sl, #0
   1cf98:	beq	1d000 <close_stdout@@Base+0x2dbc>
   1cf9c:	ldr	r2, [sp]
   1cfa0:	ldrb	r4, [r2]
   1cfa4:	cmp	r4, #0
   1cfa8:	beq	1d1bc <close_stdout@@Base+0x2f78>
   1cfac:	bl	11a40 <__ctype_b_loc@plt>
   1cfb0:	ldr	r3, [sp]
   1cfb4:	ldr	r1, [r0]
   1cfb8:	b	1cfcc <close_stdout@@Base+0x2d88>
   1cfbc:	ldrb	r4, [r3, #1]
   1cfc0:	add	r3, r3, #1
   1cfc4:	cmp	r4, #0
   1cfc8:	beq	1d1b4 <close_stdout@@Base+0x2f70>
   1cfcc:	lsl	r4, r4, #1
   1cfd0:	mov	r5, r3
   1cfd4:	ldrh	r2, [r1, r4]
   1cfd8:	tst	r2, #8192	; 0x2000
   1cfdc:	bne	1cfbc <close_stdout@@Base+0x2d78>
   1cfe0:	mov	r0, r5
   1cfe4:	bl	11a64 <strlen@plt>
   1cfe8:	mov	r1, r5
   1cfec:	add	r2, r0, #1
   1cff0:	ldr	r0, [sp]
   1cff4:	bl	11860 <memmove@plt>
   1cff8:	cmp	sl, #1
   1cffc:	beq	1cf64 <close_stdout@@Base+0x2d20>
   1d000:	ldr	r0, [sp]
   1d004:	bl	11a64 <strlen@plt>
   1d008:	ldr	r1, [sp]
   1d00c:	sub	r0, r0, #1
   1d010:	adds	r4, r1, r0
   1d014:	bcs	1cf64 <close_stdout@@Base+0x2d20>
   1d018:	bl	11a40 <__ctype_b_loc@plt>
   1d01c:	mov	r3, r4
   1d020:	mov	ip, #0
   1d024:	ldr	r4, [sp]
   1d028:	b	1d038 <close_stdout@@Base+0x2df4>
   1d02c:	cmp	r4, r3
   1d030:	strb	ip, [r3, #1]
   1d034:	bhi	1cf64 <close_stdout@@Base+0x2d20>
   1d038:	ldrb	r2, [r3], #-1
   1d03c:	ldr	r1, [r0]
   1d040:	lsl	r2, r2, #1
   1d044:	ldrh	r2, [r1, r2]
   1d048:	tst	r2, #8192	; 0x2000
   1d04c:	bne	1d02c <close_stdout@@Base+0x2de8>
   1d050:	b	1cf64 <close_stdout@@Base+0x2d20>
   1d054:	ldr	r0, [sp]
   1d058:	add	r4, sp, #24
   1d05c:	mov	r8, #0
   1d060:	str	r0, [sp, #36]	; 0x24
   1d064:	bl	11a64 <strlen@plt>
   1d068:	ldr	r3, [sp]
   1d06c:	str	r8, [sp, #24]
   1d070:	strb	r8, [sp, #20]
   1d074:	str	r8, [r4, #4]
   1d078:	strb	r8, [sp, #32]
   1d07c:	add	r2, r3, r0
   1d080:	str	r2, [sp, #16]
   1d084:	cmp	r3, r2
   1d088:	bcs	1d1c4 <close_stdout@@Base+0x2f80>
   1d08c:	mov	fp, r3
   1d090:	add	r9, sp, #48	; 0x30
   1d094:	mov	r7, #1
   1d098:	mov	r6, r2
   1d09c:	b	1d108 <close_stdout@@Base+0x2ec4>
   1d0a0:	ldr	r2, [pc, #404]	; 1d23c <close_stdout@@Base+0x2ff8>
   1d0a4:	ldrb	r3, [fp]
   1d0a8:	ldr	r1, [r5, r2]
   1d0ac:	and	r2, r3, #31
   1d0b0:	lsr	r3, r3, #5
   1d0b4:	ldr	r3, [r1, r3, lsl #2]
   1d0b8:	lsr	r3, r3, r2
   1d0bc:	tst	r3, #1
   1d0c0:	beq	1d17c <close_stdout@@Base+0x2f38>
   1d0c4:	str	r7, [sp, #40]	; 0x28
   1d0c8:	ldrb	r6, [fp]
   1d0cc:	ldr	fp, [sp, #36]	; 0x24
   1d0d0:	strb	r7, [sp, #44]	; 0x2c
   1d0d4:	str	r6, [sp, #48]	; 0x30
   1d0d8:	mov	r0, r6
   1d0dc:	strb	r7, [sp, #32]
   1d0e0:	bl	11a58 <iswspace@plt>
   1d0e4:	cmp	r0, #0
   1d0e8:	beq	1cf44 <close_stdout@@Base+0x2d00>
   1d0ec:	ldr	r3, [sp, #40]	; 0x28
   1d0f0:	ldr	r6, [sp, #16]
   1d0f4:	add	fp, fp, r3
   1d0f8:	strb	r8, [sp, #32]
   1d0fc:	cmp	r6, fp
   1d100:	str	fp, [sp, #36]	; 0x24
   1d104:	bls	1cf44 <close_stdout@@Base+0x2d00>
   1d108:	ldrb	r3, [sp, #20]
   1d10c:	cmp	r3, #0
   1d110:	beq	1d0a0 <close_stdout@@Base+0x2e5c>
   1d114:	ldr	r1, [sp, #36]	; 0x24
   1d118:	mov	r0, r9
   1d11c:	mov	r3, r4
   1d120:	rsb	r2, r1, r6
   1d124:	bl	119a4 <mbrtowc@plt>
   1d128:	cmn	r0, #1
   1d12c:	str	r0, [sp, #40]	; 0x28
   1d130:	beq	1cf28 <close_stdout@@Base+0x2ce4>
   1d134:	cmn	r0, #2
   1d138:	ldr	fp, [sp, #36]	; 0x24
   1d13c:	beq	1d19c <close_stdout@@Base+0x2f58>
   1d140:	cmp	r0, #0
   1d144:	bne	1d194 <close_stdout@@Base+0x2f50>
   1d148:	str	r7, [sp, #40]	; 0x28
   1d14c:	ldrb	r3, [fp]
   1d150:	cmp	r3, #0
   1d154:	bne	1d214 <close_stdout@@Base+0x2fd0>
   1d158:	ldr	r6, [sp, #48]	; 0x30
   1d15c:	cmp	r6, #0
   1d160:	bne	1d1f0 <close_stdout@@Base+0x2fac>
   1d164:	mov	r0, r4
   1d168:	strb	r7, [sp, #44]	; 0x2c
   1d16c:	bl	118b4 <mbsinit@plt>
   1d170:	cmp	r0, #0
   1d174:	strbne	r8, [sp, #20]
   1d178:	b	1d0d8 <close_stdout@@Base+0x2e94>
   1d17c:	mov	r0, r4
   1d180:	bl	118b4 <mbsinit@plt>
   1d184:	cmp	r0, #0
   1d188:	beq	1d1cc <close_stdout@@Base+0x2f88>
   1d18c:	strb	r7, [sp, #20]
   1d190:	b	1d114 <close_stdout@@Base+0x2ed0>
   1d194:	ldr	r6, [sp, #48]	; 0x30
   1d198:	b	1d164 <close_stdout@@Base+0x2f20>
   1d19c:	ldr	r3, [sp, #16]
   1d1a0:	mov	r2, #0
   1d1a4:	strb	r2, [sp, #44]	; 0x2c
   1d1a8:	rsb	r3, fp, r3
   1d1ac:	str	r3, [sp, #40]	; 0x28
   1d1b0:	b	1cf3c <close_stdout@@Base+0x2cf8>
   1d1b4:	mov	r5, r3
   1d1b8:	b	1cfe0 <close_stdout@@Base+0x2d9c>
   1d1bc:	ldr	r5, [sp]
   1d1c0:	b	1cfe0 <close_stdout@@Base+0x2d9c>
   1d1c4:	ldr	fp, [sp]
   1d1c8:	b	1cf44 <close_stdout@@Base+0x2d00>
   1d1cc:	ldr	r0, [pc, #108]	; 1d240 <close_stdout@@Base+0x2ffc>
   1d1d0:	mov	r2, #142	; 0x8e
   1d1d4:	ldr	r1, [pc, #104]	; 1d244 <close_stdout@@Base+0x3000>
   1d1d8:	ldr	r3, [pc, #104]	; 1d248 <close_stdout@@Base+0x3004>
   1d1dc:	add	r0, pc, r0
   1d1e0:	add	r1, pc, r1
   1d1e4:	add	r3, pc, r3
   1d1e8:	bl	11c2c <__assert_fail@plt>
   1d1ec:	bl	118e4 <__stack_chk_fail@plt>
   1d1f0:	ldr	r0, [pc, #84]	; 1d24c <close_stdout@@Base+0x3008>
   1d1f4:	mov	r2, #170	; 0xaa
   1d1f8:	ldr	r1, [pc, #80]	; 1d250 <close_stdout@@Base+0x300c>
   1d1fc:	ldr	r3, [pc, #80]	; 1d254 <close_stdout@@Base+0x3010>
   1d200:	add	r0, pc, r0
   1d204:	add	r1, pc, r1
   1d208:	add	r3, pc, r3
   1d20c:	bl	11c2c <__assert_fail@plt>
   1d210:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d214:	ldr	r0, [pc, #60]	; 1d258 <close_stdout@@Base+0x3014>
   1d218:	mov	r2, #169	; 0xa9
   1d21c:	ldr	r1, [pc, #56]	; 1d25c <close_stdout@@Base+0x3018>
   1d220:	ldr	r3, [pc, #56]	; 1d260 <close_stdout@@Base+0x301c>
   1d224:	add	r0, pc, r0
   1d228:	add	r1, pc, r1
   1d22c:	add	r3, pc, r3
   1d230:	bl	11c2c <__assert_fail@plt>
   1d234:	andeq	sl, r1, r4, lsr r3
   1d238:	andeq	r0, r0, ip, lsl #3
   1d23c:	andeq	r0, r0, r8, lsl #3
   1d240:	strdeq	r9, [r0], -r4
   1d244:	strdeq	r9, [r0], -r4
   1d248:	ldrdeq	r9, [r0], -ip
   1d24c:	andeq	r9, r0, r0, lsl r3
   1d250:	ldrdeq	r9, [r0], -r0
   1d254:			; <UNDEFINED> instruction: 0x000093b8
   1d258:	ldrdeq	r9, [r0], -r4
   1d25c:	andeq	r9, r0, ip, lsr #7
   1d260:	muleq	r0, r4, r3
   1d264:	push	{r4, r5, r6, r7, lr}
   1d268:	cmp	r1, #0
   1d26c:	sub	sp, sp, #36	; 0x24
   1d270:	ldr	r7, [pc, #896]	; 1d5f8 <close_stdout@@Base+0x33b4>
   1d274:	mov	ip, r3
   1d278:	mov	r5, r0
   1d27c:	add	r7, pc, r7
   1d280:	ldr	r4, [sp, #56]	; 0x38
   1d284:	ldr	r6, [sp, #60]	; 0x3c
   1d288:	beq	1d5cc <close_stdout@@Base+0x3388>
   1d28c:	str	r2, [sp]
   1d290:	mov	r3, r1
   1d294:	ldr	r2, [pc, #864]	; 1d5fc <close_stdout@@Base+0x33b8>
   1d298:	mov	r1, #1
   1d29c:	str	ip, [sp, #4]
   1d2a0:	add	r2, pc, r2
   1d2a4:	bl	11b18 <__fprintf_chk@plt>
   1d2a8:	ldr	r1, [pc, #848]	; 1d600 <close_stdout@@Base+0x33bc>
   1d2ac:	mov	r2, #5
   1d2b0:	mov	r0, #0
   1d2b4:	add	r1, pc, r1
   1d2b8:	bl	118cc <dcgettext@plt>
   1d2bc:	ldr	r2, [pc, #832]	; 1d604 <close_stdout@@Base+0x33c0>
   1d2c0:	movw	ip, #2013	; 0x7dd
   1d2c4:	mov	r1, #1
   1d2c8:	ldr	r2, [r7, r2]
   1d2cc:	str	ip, [sp]
   1d2d0:	mov	r3, r0
   1d2d4:	mov	r0, r5
   1d2d8:	bl	11b18 <__fprintf_chk@plt>
   1d2dc:	ldr	r1, [pc, #804]	; 1d608 <close_stdout@@Base+0x33c4>
   1d2e0:	mov	r0, #0
   1d2e4:	mov	r2, #5
   1d2e8:	add	r1, pc, r1
   1d2ec:	bl	118cc <dcgettext@plt>
   1d2f0:	mov	r1, r5
   1d2f4:	bl	117e8 <fputs_unlocked@plt>
   1d2f8:	cmp	r6, #9
   1d2fc:	addls	pc, pc, r6, lsl #2
   1d300:	b	1d5e8 <close_stdout@@Base+0x33a4>
   1d304:	b	1d398 <close_stdout@@Base+0x3154>
   1d308:	b	1d39c <close_stdout@@Base+0x3158>
   1d30c:	b	1d3cc <close_stdout@@Base+0x3188>
   1d310:	b	1d400 <close_stdout@@Base+0x31bc>
   1d314:	b	1d43c <close_stdout@@Base+0x31f8>
   1d318:	b	1d47c <close_stdout@@Base+0x3238>
   1d31c:	b	1d4c4 <close_stdout@@Base+0x3280>
   1d320:	b	1d514 <close_stdout@@Base+0x32d0>
   1d324:	b	1d56c <close_stdout@@Base+0x3328>
   1d328:	b	1d32c <close_stdout@@Base+0x30e8>
   1d32c:	ldr	r1, [pc, #728]	; 1d60c <close_stdout@@Base+0x33c8>
   1d330:	mov	r0, #0
   1d334:	add	r1, pc, r1
   1d338:	mov	r2, #5
   1d33c:	bl	118cc <dcgettext@plt>
   1d340:	ldm	r4, {r3, ip}
   1d344:	mov	r1, #1
   1d348:	str	ip, [sp]
   1d34c:	ldr	ip, [r4, #8]
   1d350:	str	ip, [sp, #4]
   1d354:	ldr	ip, [r4, #12]
   1d358:	str	ip, [sp, #8]
   1d35c:	ldr	ip, [r4, #16]
   1d360:	str	ip, [sp, #12]
   1d364:	ldr	ip, [r4, #20]
   1d368:	str	ip, [sp, #16]
   1d36c:	ldr	ip, [r4, #24]
   1d370:	str	ip, [sp, #20]
   1d374:	ldr	ip, [r4, #28]
   1d378:	str	ip, [sp, #24]
   1d37c:	ldr	ip, [r4, #32]
   1d380:	str	ip, [sp, #28]
   1d384:	mov	r2, r0
   1d388:	mov	r0, r5
   1d38c:	bl	11b18 <__fprintf_chk@plt>
   1d390:	add	sp, sp, #36	; 0x24
   1d394:	pop	{r4, r5, r6, r7, pc}
   1d398:	bl	11c08 <abort@plt>
   1d39c:	ldr	r1, [pc, #620]	; 1d610 <close_stdout@@Base+0x33cc>
   1d3a0:	mov	r2, #5
   1d3a4:	mov	r0, #0
   1d3a8:	add	r1, pc, r1
   1d3ac:	bl	118cc <dcgettext@plt>
   1d3b0:	ldr	r3, [r4]
   1d3b4:	mov	r1, #1
   1d3b8:	mov	r2, r0
   1d3bc:	mov	r0, r5
   1d3c0:	add	sp, sp, #36	; 0x24
   1d3c4:	pop	{r4, r5, r6, r7, lr}
   1d3c8:	b	11b18 <__fprintf_chk@plt>
   1d3cc:	ldr	r1, [pc, #576]	; 1d614 <close_stdout@@Base+0x33d0>
   1d3d0:	mov	r2, #5
   1d3d4:	mov	r0, #0
   1d3d8:	add	r1, pc, r1
   1d3dc:	bl	118cc <dcgettext@plt>
   1d3e0:	ldm	r4, {r3, ip}
   1d3e4:	mov	r1, #1
   1d3e8:	str	ip, [sp, #56]	; 0x38
   1d3ec:	mov	r2, r0
   1d3f0:	mov	r0, r5
   1d3f4:	add	sp, sp, #36	; 0x24
   1d3f8:	pop	{r4, r5, r6, r7, lr}
   1d3fc:	b	11b18 <__fprintf_chk@plt>
   1d400:	ldr	r1, [pc, #528]	; 1d618 <close_stdout@@Base+0x33d4>
   1d404:	mov	r2, #5
   1d408:	mov	r0, #0
   1d40c:	add	r1, pc, r1
   1d410:	bl	118cc <dcgettext@plt>
   1d414:	ldm	r4, {r3, ip}
   1d418:	mov	r1, #1
   1d41c:	str	ip, [sp, #56]	; 0x38
   1d420:	ldr	ip, [r4, #8]
   1d424:	str	ip, [sp, #60]	; 0x3c
   1d428:	mov	r2, r0
   1d42c:	mov	r0, r5
   1d430:	add	sp, sp, #36	; 0x24
   1d434:	pop	{r4, r5, r6, r7, lr}
   1d438:	b	11b18 <__fprintf_chk@plt>
   1d43c:	ldr	r1, [pc, #472]	; 1d61c <close_stdout@@Base+0x33d8>
   1d440:	mov	r2, #5
   1d444:	mov	r0, #0
   1d448:	add	r1, pc, r1
   1d44c:	bl	118cc <dcgettext@plt>
   1d450:	ldm	r4, {r3, ip}
   1d454:	mov	r1, #1
   1d458:	str	ip, [sp]
   1d45c:	ldr	ip, [r4, #8]
   1d460:	str	ip, [sp, #4]
   1d464:	ldr	ip, [r4, #12]
   1d468:	str	ip, [sp, #8]
   1d46c:	mov	r2, r0
   1d470:	mov	r0, r5
   1d474:	bl	11b18 <__fprintf_chk@plt>
   1d478:	b	1d390 <close_stdout@@Base+0x314c>
   1d47c:	ldr	r1, [pc, #412]	; 1d620 <close_stdout@@Base+0x33dc>
   1d480:	mov	r2, #5
   1d484:	mov	r0, #0
   1d488:	add	r1, pc, r1
   1d48c:	bl	118cc <dcgettext@plt>
   1d490:	ldm	r4, {r3, ip}
   1d494:	mov	r1, #1
   1d498:	str	ip, [sp]
   1d49c:	ldr	ip, [r4, #8]
   1d4a0:	str	ip, [sp, #4]
   1d4a4:	ldr	ip, [r4, #12]
   1d4a8:	str	ip, [sp, #8]
   1d4ac:	ldr	ip, [r4, #16]
   1d4b0:	str	ip, [sp, #12]
   1d4b4:	mov	r2, r0
   1d4b8:	mov	r0, r5
   1d4bc:	bl	11b18 <__fprintf_chk@plt>
   1d4c0:	b	1d390 <close_stdout@@Base+0x314c>
   1d4c4:	ldr	r1, [pc, #344]	; 1d624 <close_stdout@@Base+0x33e0>
   1d4c8:	mov	r2, #5
   1d4cc:	mov	r0, #0
   1d4d0:	add	r1, pc, r1
   1d4d4:	bl	118cc <dcgettext@plt>
   1d4d8:	ldm	r4, {r3, ip}
   1d4dc:	mov	r1, #1
   1d4e0:	str	ip, [sp]
   1d4e4:	ldr	ip, [r4, #8]
   1d4e8:	str	ip, [sp, #4]
   1d4ec:	ldr	ip, [r4, #12]
   1d4f0:	str	ip, [sp, #8]
   1d4f4:	ldr	ip, [r4, #16]
   1d4f8:	str	ip, [sp, #12]
   1d4fc:	ldr	ip, [r4, #20]
   1d500:	str	ip, [sp, #16]
   1d504:	mov	r2, r0
   1d508:	mov	r0, r5
   1d50c:	bl	11b18 <__fprintf_chk@plt>
   1d510:	b	1d390 <close_stdout@@Base+0x314c>
   1d514:	ldr	r1, [pc, #268]	; 1d628 <close_stdout@@Base+0x33e4>
   1d518:	mov	r2, #5
   1d51c:	mov	r0, #0
   1d520:	add	r1, pc, r1
   1d524:	bl	118cc <dcgettext@plt>
   1d528:	ldm	r4, {r3, ip}
   1d52c:	mov	r1, #1
   1d530:	str	ip, [sp]
   1d534:	ldr	ip, [r4, #8]
   1d538:	str	ip, [sp, #4]
   1d53c:	ldr	ip, [r4, #12]
   1d540:	str	ip, [sp, #8]
   1d544:	ldr	ip, [r4, #16]
   1d548:	str	ip, [sp, #12]
   1d54c:	ldr	ip, [r4, #20]
   1d550:	str	ip, [sp, #16]
   1d554:	ldr	ip, [r4, #24]
   1d558:	str	ip, [sp, #20]
   1d55c:	mov	r2, r0
   1d560:	mov	r0, r5
   1d564:	bl	11b18 <__fprintf_chk@plt>
   1d568:	b	1d390 <close_stdout@@Base+0x314c>
   1d56c:	ldr	r1, [pc, #184]	; 1d62c <close_stdout@@Base+0x33e8>
   1d570:	mov	r2, #5
   1d574:	mov	r0, #0
   1d578:	add	r1, pc, r1
   1d57c:	bl	118cc <dcgettext@plt>
   1d580:	ldm	r4, {r3, ip}
   1d584:	mov	r1, #1
   1d588:	str	ip, [sp]
   1d58c:	ldr	ip, [r4, #8]
   1d590:	str	ip, [sp, #4]
   1d594:	ldr	ip, [r4, #12]
   1d598:	str	ip, [sp, #8]
   1d59c:	ldr	ip, [r4, #16]
   1d5a0:	str	ip, [sp, #12]
   1d5a4:	ldr	ip, [r4, #20]
   1d5a8:	str	ip, [sp, #16]
   1d5ac:	ldr	ip, [r4, #24]
   1d5b0:	str	ip, [sp, #20]
   1d5b4:	ldr	ip, [r4, #28]
   1d5b8:	str	ip, [sp, #24]
   1d5bc:	mov	r2, r0
   1d5c0:	mov	r0, r5
   1d5c4:	bl	11b18 <__fprintf_chk@plt>
   1d5c8:	b	1d390 <close_stdout@@Base+0x314c>
   1d5cc:	str	r3, [sp]
   1d5d0:	mov	r3, r2
   1d5d4:	ldr	r2, [pc, #84]	; 1d630 <close_stdout@@Base+0x33ec>
   1d5d8:	mov	r1, #1
   1d5dc:	add	r2, pc, r2
   1d5e0:	bl	11b18 <__fprintf_chk@plt>
   1d5e4:	b	1d2a8 <close_stdout@@Base+0x3064>
   1d5e8:	ldr	r1, [pc, #68]	; 1d634 <close_stdout@@Base+0x33f0>
   1d5ec:	mov	r0, #0
   1d5f0:	add	r1, pc, r1
   1d5f4:	b	1d338 <close_stdout@@Base+0x30f4>
   1d5f8:	andeq	r9, r1, ip, ror sp
   1d5fc:	andeq	r9, r0, r4, asr #6
   1d600:	andeq	r9, r0, r4, asr #6
   1d604:			; <UNDEFINED> instruction: 0x000001bc
   1d608:	andeq	r9, r0, r4, lsl r3
   1d60c:	andeq	r9, r0, r0, lsr #9
   1d610:	andeq	r9, r0, r0, lsr #6
   1d614:	andeq	r9, r0, r0, lsl #6
   1d618:	andeq	r9, r0, r4, ror #5
   1d61c:	andeq	r9, r0, r4, asr #5
   1d620:	andeq	r9, r0, r4, lsr #5
   1d624:	andeq	r9, r0, r0, lsl #5
   1d628:	andeq	r9, r0, r8, asr r2
   1d62c:	andeq	r9, r0, ip, lsr #4
   1d630:	andeq	r9, r0, r4, lsl r0
   1d634:	andeq	r9, r0, r8, lsl r2
   1d638:	push	{r4, r5, lr}
   1d63c:	sub	sp, sp, #12
   1d640:	ldr	r5, [sp, #24]
   1d644:	ldr	ip, [r5]
   1d648:	cmp	ip, #0
   1d64c:	beq	1d668 <close_stdout@@Base+0x3424>
   1d650:	mov	lr, r5
   1d654:	mov	ip, #0
   1d658:	ldr	r4, [lr, #4]!
   1d65c:	add	ip, ip, #1
   1d660:	cmp	r4, #0
   1d664:	bne	1d658 <close_stdout@@Base+0x3414>
   1d668:	stm	sp, {r5, ip}
   1d66c:	bl	1d264 <close_stdout@@Base+0x3020>
   1d670:	add	sp, sp, #12
   1d674:	pop	{r4, r5, pc}
   1d678:	push	{r4, r5, r6, r7, lr}
   1d67c:	sub	sp, sp, #60	; 0x3c
   1d680:	ldr	r4, [pc, #100]	; 1d6ec <close_stdout@@Base+0x34a8>
   1d684:	mov	ip, #0
   1d688:	ldr	r5, [pc, #96]	; 1d6f0 <close_stdout@@Base+0x34ac>
   1d68c:	mov	lr, ip
   1d690:	add	r4, pc, r4
   1d694:	ldr	r6, [sp, #80]	; 0x50
   1d698:	ldr	r7, [r4, r5]
   1d69c:	add	r5, sp, #12
   1d6a0:	ldr	r4, [r7]
   1d6a4:	str	r4, [sp, #52]	; 0x34
   1d6a8:	ldr	r4, [r6, ip]
   1d6ac:	cmp	r4, #0
   1d6b0:	str	r4, [r5, ip]
   1d6b4:	beq	1d6c8 <close_stdout@@Base+0x3484>
   1d6b8:	add	lr, lr, #1
   1d6bc:	add	ip, ip, #4
   1d6c0:	cmp	lr, #10
   1d6c4:	bne	1d6a8 <close_stdout@@Base+0x3464>
   1d6c8:	stm	sp, {r5, lr}
   1d6cc:	bl	1d264 <close_stdout@@Base+0x3020>
   1d6d0:	ldr	r2, [sp, #52]	; 0x34
   1d6d4:	ldr	r3, [r7]
   1d6d8:	cmp	r2, r3
   1d6dc:	bne	1d6e8 <close_stdout@@Base+0x34a4>
   1d6e0:	add	sp, sp, #60	; 0x3c
   1d6e4:	pop	{r4, r5, r6, r7, pc}
   1d6e8:	bl	118e4 <__stack_chk_fail@plt>
   1d6ec:	andeq	r9, r1, r8, ror #18
   1d6f0:	andeq	r0, r0, ip, lsl #3
   1d6f4:	push	{r3}		; (str r3, [sp, #-4]!)
   1d6f8:	push	{r4, lr}
   1d6fc:	sub	sp, sp, #20
   1d700:	ldr	lr, [pc, #72]	; 1d750 <close_stdout@@Base+0x350c>
   1d704:	add	ip, sp, #32
   1d708:	ldr	r4, [pc, #68]	; 1d754 <close_stdout@@Base+0x3510>
   1d70c:	add	lr, pc, lr
   1d710:	ldr	r3, [sp, #28]
   1d714:	ldr	r4, [lr, r4]
   1d718:	str	ip, [sp]
   1d71c:	str	ip, [sp, #8]
   1d720:	ldr	ip, [r4]
   1d724:	str	ip, [sp, #12]
   1d728:	bl	1d678 <close_stdout@@Base+0x3434>
   1d72c:	ldr	r2, [sp, #12]
   1d730:	ldr	r3, [r4]
   1d734:	cmp	r2, r3
   1d738:	bne	1d74c <close_stdout@@Base+0x3508>
   1d73c:	add	sp, sp, #20
   1d740:	pop	{r4, lr}
   1d744:	add	sp, sp, #4
   1d748:	bx	lr
   1d74c:	bl	118e4 <__stack_chk_fail@plt>
   1d750:	andeq	r9, r1, ip, ror #17
   1d754:	andeq	r0, r0, ip, lsl #3
   1d758:	ldr	r1, [pc, #132]	; 1d7e4 <close_stdout@@Base+0x35a0>
   1d75c:	mov	r2, #5
   1d760:	push	{r4, lr}
   1d764:	add	r1, pc, r1
   1d768:	mov	r0, #0
   1d76c:	ldr	r4, [pc, #116]	; 1d7e8 <close_stdout@@Base+0x35a4>
   1d770:	bl	118cc <dcgettext@plt>
   1d774:	ldr	r2, [pc, #112]	; 1d7ec <close_stdout@@Base+0x35a8>
   1d778:	add	r4, pc, r4
   1d77c:	add	r2, pc, r2
   1d780:	mov	r1, r0
   1d784:	mov	r0, #1
   1d788:	bl	11b00 <__printf_chk@plt>
   1d78c:	ldr	r1, [pc, #92]	; 1d7f0 <close_stdout@@Base+0x35ac>
   1d790:	mov	r2, #5
   1d794:	mov	r0, #0
   1d798:	add	r1, pc, r1
   1d79c:	bl	118cc <dcgettext@plt>
   1d7a0:	ldr	r2, [pc, #76]	; 1d7f4 <close_stdout@@Base+0x35b0>
   1d7a4:	ldr	r3, [pc, #76]	; 1d7f8 <close_stdout@@Base+0x35b4>
   1d7a8:	add	r2, pc, r2
   1d7ac:	add	r3, pc, r3
   1d7b0:	mov	r1, r0
   1d7b4:	mov	r0, #1
   1d7b8:	bl	11b00 <__printf_chk@plt>
   1d7bc:	ldr	r1, [pc, #56]	; 1d7fc <close_stdout@@Base+0x35b8>
   1d7c0:	mov	r0, #0
   1d7c4:	mov	r2, #5
   1d7c8:	add	r1, pc, r1
   1d7cc:	bl	118cc <dcgettext@plt>
   1d7d0:	ldr	r3, [pc, #40]	; 1d800 <close_stdout@@Base+0x35bc>
   1d7d4:	ldr	r3, [r4, r3]
   1d7d8:	pop	{r4, lr}
   1d7dc:	ldr	r1, [r3]
   1d7e0:	b	117e8 <fputs_unlocked@plt>
   1d7e4:	andeq	r9, r0, r0, ror #1
   1d7e8:	andeq	r9, r1, r0, lsl #17
   1d7ec:	andeq	r9, r0, r0, ror #1
   1d7f0:	ldrdeq	r9, [r0], -ip
   1d7f4:	andeq	r8, r0, r0, ror #22
   1d7f8:	andeq	r8, r0, ip, ror #22
   1d7fc:	andeq	r9, r0, r0, asr #1
   1d800:	andeq	r0, r0, ip, lsr #3
   1d804:	push	{r4, lr}
   1d808:	mov	r4, r0
   1d80c:	bl	119e0 <malloc@plt>
   1d810:	rsbs	r3, r0, #1
   1d814:	movcc	r3, #0
   1d818:	cmp	r4, #0
   1d81c:	moveq	r3, #0
   1d820:	cmp	r3, #0
   1d824:	popeq	{r4, pc}
   1d828:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d82c:	push	{r3, r4, r5, lr}
   1d830:	mov	r4, r0
   1d834:	mvn	r0, #0
   1d838:	mov	r5, r1
   1d83c:	bl	22058 <close_stdout@@Base+0x7e14>
   1d840:	cmp	r0, r4
   1d844:	bcc	1d854 <close_stdout@@Base+0x3610>
   1d848:	mul	r0, r4, r5
   1d84c:	pop	{r3, r4, r5, lr}
   1d850:	b	1d804 <close_stdout@@Base+0x35c0>
   1d854:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d858:	b	1d804 <close_stdout@@Base+0x35c0>
   1d85c:	rsbs	r3, r1, #1
   1d860:	push	{r4, lr}
   1d864:	movcc	r3, #0
   1d868:	cmp	r0, #0
   1d86c:	mov	r4, r1
   1d870:	moveq	r3, #0
   1d874:	cmp	r3, #0
   1d878:	bne	1d89c <close_stdout@@Base+0x3658>
   1d87c:	bl	11914 <realloc@plt>
   1d880:	rsbs	r3, r0, #1
   1d884:	movcc	r3, #0
   1d888:	cmp	r4, #0
   1d88c:	moveq	r3, #0
   1d890:	cmp	r3, #0
   1d894:	popeq	{r4, pc}
   1d898:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d89c:	bl	11884 <free@plt>
   1d8a0:	mov	r0, #0
   1d8a4:	pop	{r4, pc}
   1d8a8:	push	{r4, r5, r6, lr}
   1d8ac:	mov	r5, r1
   1d8b0:	mov	r6, r0
   1d8b4:	mov	r1, r2
   1d8b8:	mvn	r0, #0
   1d8bc:	mov	r4, r2
   1d8c0:	bl	22058 <close_stdout@@Base+0x7e14>
   1d8c4:	cmp	r0, r5
   1d8c8:	bcc	1d8dc <close_stdout@@Base+0x3698>
   1d8cc:	mov	r0, r6
   1d8d0:	mul	r1, r5, r4
   1d8d4:	pop	{r4, r5, r6, lr}
   1d8d8:	b	1d85c <close_stdout@@Base+0x3618>
   1d8dc:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d8e0:	push	{r3, r4, r5, r6, r7, lr}
   1d8e4:	subs	r7, r0, #0
   1d8e8:	mov	r5, r1
   1d8ec:	mov	r6, r2
   1d8f0:	ldr	r4, [r1]
   1d8f4:	beq	1d92c <close_stdout@@Base+0x36e8>
   1d8f8:	movw	r0, #43690	; 0xaaaa
   1d8fc:	mov	r1, r2
   1d900:	bfi	r0, r0, #16, #16
   1d904:	bl	22058 <close_stdout@@Base+0x7e14>
   1d908:	cmp	r4, r0
   1d90c:	addcc	r3, r4, #1
   1d910:	addcc	r4, r4, r3, lsr #1
   1d914:	bcs	1d950 <close_stdout@@Base+0x370c>
   1d918:	str	r4, [r5]
   1d91c:	mov	r0, r7
   1d920:	mul	r1, r6, r4
   1d924:	pop	{r3, r4, r5, r6, r7, lr}
   1d928:	b	1d85c <close_stdout@@Base+0x3618>
   1d92c:	cmp	r4, #0
   1d930:	bne	1d918 <close_stdout@@Base+0x36d4>
   1d934:	mov	r0, #64	; 0x40
   1d938:	mov	r1, r2
   1d93c:	bl	22058 <close_stdout@@Base+0x7e14>
   1d940:	cmp	r0, #0
   1d944:	movne	r4, r0
   1d948:	addeq	r4, r0, #1
   1d94c:	b	1d918 <close_stdout@@Base+0x36d4>
   1d950:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d954:	cmp	r0, #0
   1d958:	push	{r3, lr}
   1d95c:	ldr	r3, [r1]
   1d960:	beq	1d98c <close_stdout@@Base+0x3748>
   1d964:	movw	r2, #43689	; 0xaaa9
   1d968:	movt	r2, #43690	; 0xaaaa
   1d96c:	cmp	r3, r2
   1d970:	addls	r2, r3, #1
   1d974:	addls	r3, r3, r2, lsr #1
   1d978:	bhi	1d9a4 <close_stdout@@Base+0x3760>
   1d97c:	str	r3, [r1]
   1d980:	mov	r1, r3
   1d984:	pop	{r3, lr}
   1d988:	b	1d85c <close_stdout@@Base+0x3618>
   1d98c:	cmp	r3, #0
   1d990:	moveq	r3, #64	; 0x40
   1d994:	str	r3, [r1]
   1d998:	mov	r1, r3
   1d99c:	pop	{r3, lr}
   1d9a0:	b	1d85c <close_stdout@@Base+0x3618>
   1d9a4:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d9a8:	push	{r4, lr}
   1d9ac:	mov	r4, r0
   1d9b0:	bl	1d804 <close_stdout@@Base+0x35c0>
   1d9b4:	mov	r2, r4
   1d9b8:	mov	r1, #0
   1d9bc:	pop	{r4, lr}
   1d9c0:	b	11adc <memset@plt>
   1d9c4:	push	{r3, lr}
   1d9c8:	bl	117dc <calloc@plt>
   1d9cc:	cmp	r0, #0
   1d9d0:	popne	{r3, pc}
   1d9d4:	bl	1da18 <close_stdout@@Base+0x37d4>
   1d9d8:	push	{r3, r4, r5, lr}
   1d9dc:	mov	r4, r1
   1d9e0:	mov	r5, r0
   1d9e4:	mov	r0, r1
   1d9e8:	bl	1d804 <close_stdout@@Base+0x35c0>
   1d9ec:	mov	r1, r5
   1d9f0:	mov	r2, r4
   1d9f4:	pop	{r3, r4, r5, lr}
   1d9f8:	b	1189c <memcpy@plt>
   1d9fc:	push	{r4, lr}
   1da00:	mov	r4, r0
   1da04:	bl	11a64 <strlen@plt>
   1da08:	add	r1, r0, #1
   1da0c:	mov	r0, r4
   1da10:	pop	{r4, lr}
   1da14:	b	1d9d8 <close_stdout@@Base+0x3794>
   1da18:	ldr	r3, [pc, #64]	; 1da60 <close_stdout@@Base+0x381c>
   1da1c:	mov	r2, #5
   1da20:	ldr	ip, [pc, #60]	; 1da64 <close_stdout@@Base+0x3820>
   1da24:	mov	r0, #0
   1da28:	add	r3, pc, r3
   1da2c:	ldr	r1, [pc, #52]	; 1da68 <close_stdout@@Base+0x3824>
   1da30:	push	{r4, lr}
   1da34:	add	r1, pc, r1
   1da38:	ldr	r3, [r3, ip]
   1da3c:	ldr	r4, [r3]
   1da40:	bl	118cc <dcgettext@plt>
   1da44:	ldr	r2, [pc, #32]	; 1da6c <close_stdout@@Base+0x3828>
   1da48:	mov	r1, #0
   1da4c:	add	r2, pc, r2
   1da50:	mov	r3, r0
   1da54:	mov	r0, r4
   1da58:	bl	119b0 <error@plt>
   1da5c:	bl	11c08 <abort@plt>
   1da60:	ldrdeq	r9, [r1], -r0
   1da64:			; <UNDEFINED> instruction: 0x000001b0
   1da68:	andeq	r8, r0, r4, asr #29
   1da6c:	andeq	r8, r0, r8, lsr #20
   1da70:	push	{r4, lr}
   1da74:	sub	sp, sp, #8
   1da78:	ldr	ip, [sp, #16]
   1da7c:	str	ip, [sp]
   1da80:	bl	1f914 <close_stdout@@Base+0x56d0>
   1da84:	subs	r4, r0, #0
   1da88:	blt	1da98 <close_stdout@@Base+0x3854>
   1da8c:	mov	r0, r4
   1da90:	add	sp, sp, #8
   1da94:	pop	{r4, pc}
   1da98:	bl	11aa0 <__errno_location@plt>
   1da9c:	ldr	r3, [r0]
   1daa0:	cmp	r3, #12
   1daa4:	bne	1da8c <close_stdout@@Base+0x3848>
   1daa8:	bl	1da18 <close_stdout@@Base+0x37d4>
   1daac:	push	{r4, lr}
   1dab0:	bl	1fc78 <close_stdout@@Base+0x5a34>
   1dab4:	subs	r4, r0, #0
   1dab8:	beq	1dac4 <close_stdout@@Base+0x3880>
   1dabc:	mov	r0, r4
   1dac0:	pop	{r4, pc}
   1dac4:	bl	11aa0 <__errno_location@plt>
   1dac8:	ldr	r3, [r0]
   1dacc:	cmp	r3, #12
   1dad0:	bne	1dabc <close_stdout@@Base+0x3878>
   1dad4:	bl	1da18 <close_stdout@@Base+0x37d4>
   1dad8:	push	{r4, lr}
   1dadc:	bl	1fe94 <close_stdout@@Base+0x5c50>
   1dae0:	subs	r4, r0, #0
   1dae4:	beq	1daf0 <close_stdout@@Base+0x38ac>
   1dae8:	mov	r0, r4
   1daec:	pop	{r4, pc}
   1daf0:	bl	11aa0 <__errno_location@plt>
   1daf4:	ldr	r3, [r0]
   1daf8:	cmp	r3, #12
   1dafc:	bne	1dae8 <close_stdout@@Base+0x38a4>
   1db00:	bl	1da18 <close_stdout@@Base+0x37d4>
   1db04:	ldr	ip, [pc, #228]	; 1dbf0 <close_stdout@@Base+0x39ac>
   1db08:	mov	r3, r2
   1db0c:	push	{r4, r5, r6, r7, r8, lr}
   1db10:	add	ip, pc, ip
   1db14:	ldr	r4, [pc, #216]	; 1dbf4 <close_stdout@@Base+0x39b0>
   1db18:	sub	sp, sp, #2000	; 0x7d0
   1db1c:	sub	sp, sp, #8
   1db20:	mov	r2, r1
   1db24:	add	r6, sp, #4
   1db28:	mov	r8, r0
   1db2c:	ldr	r5, [ip, r4]
   1db30:	mov	ip, #2000	; 0x7d0
   1db34:	str	ip, [sp]
   1db38:	mov	r1, sp
   1db3c:	mov	r0, r6
   1db40:	ldr	ip, [r5]
   1db44:	str	ip, [sp, #2004]	; 0x7d4
   1db48:	bl	20134 <close_stdout@@Base+0x5ef0>
   1db4c:	ldr	r4, [sp]
   1db50:	subs	r7, r0, #0
   1db54:	beq	1dbdc <close_stdout@@Base+0x3998>
   1db58:	mov	r1, #1
   1db5c:	mov	r2, r4
   1db60:	mov	r3, r8
   1db64:	bl	1195c <fwrite@plt>
   1db68:	cmp	r4, r0
   1db6c:	bhi	1dba8 <close_stdout@@Base+0x3964>
   1db70:	cmp	r7, r6
   1db74:	beq	1db80 <close_stdout@@Base+0x393c>
   1db78:	mov	r0, r7
   1db7c:	bl	11884 <free@plt>
   1db80:	cmp	r4, #0
   1db84:	movge	r0, r4
   1db88:	blt	1dbd0 <close_stdout@@Base+0x398c>
   1db8c:	ldr	r2, [sp, #2004]	; 0x7d4
   1db90:	ldr	r3, [r5]
   1db94:	cmp	r2, r3
   1db98:	bne	1dbec <close_stdout@@Base+0x39a8>
   1db9c:	add	sp, sp, #2000	; 0x7d0
   1dba0:	add	sp, sp, #8
   1dba4:	pop	{r4, r5, r6, r7, r8, pc}
   1dba8:	cmp	r7, r6
   1dbac:	beq	1dbe4 <close_stdout@@Base+0x39a0>
   1dbb0:	bl	11aa0 <__errno_location@plt>
   1dbb4:	ldr	r6, [r0]
   1dbb8:	mov	r4, r0
   1dbbc:	mov	r0, r7
   1dbc0:	bl	11884 <free@plt>
   1dbc4:	mvn	r0, #0
   1dbc8:	str	r6, [r4]
   1dbcc:	b	1db8c <close_stdout@@Base+0x3948>
   1dbd0:	bl	11aa0 <__errno_location@plt>
   1dbd4:	mov	r3, #75	; 0x4b
   1dbd8:	str	r3, [r0]
   1dbdc:	mov	r0, r8
   1dbe0:	bl	20124 <close_stdout@@Base+0x5ee0>
   1dbe4:	mvn	r0, #0
   1dbe8:	b	1db8c <close_stdout@@Base+0x3948>
   1dbec:	bl	118e4 <__stack_chk_fail@plt>
   1dbf0:	andeq	r9, r1, r8, ror #9
   1dbf4:	andeq	r0, r0, ip, lsl #3
   1dbf8:	cmp	r0, r1
   1dbfc:	push	{r4}		; (str r4, [sp, #-4]!)
   1dc00:	beq	1dc5c <close_stdout@@Base+0x3a18>
   1dc04:	sub	r4, r0, #1
   1dc08:	sub	r1, r1, #1
   1dc0c:	b	1dc18 <close_stdout@@Base+0x39d4>
   1dc10:	cmp	r2, ip
   1dc14:	bne	1dc50 <close_stdout@@Base+0x3a0c>
   1dc18:	ldrb	r3, [r4, #1]!
   1dc1c:	sub	r0, r3, #65	; 0x41
   1dc20:	add	r2, r3, #32
   1dc24:	cmp	r0, #25
   1dc28:	movhi	r2, r3
   1dc2c:	ldrb	r3, [r1, #1]!
   1dc30:	uxtb	r2, r2
   1dc34:	sub	r0, r3, #65	; 0x41
   1dc38:	add	ip, r3, #32
   1dc3c:	cmp	r0, #25
   1dc40:	movhi	ip, r3
   1dc44:	cmp	r2, #0
   1dc48:	uxtb	ip, ip
   1dc4c:	bne	1dc10 <close_stdout@@Base+0x39cc>
   1dc50:	rsb	r0, ip, r2
   1dc54:	pop	{r4}		; (ldr r4, [sp], #4)
   1dc58:	bx	lr
   1dc5c:	mov	r0, #0
   1dc60:	pop	{r4}		; (ldr r4, [sp], #4)
   1dc64:	bx	lr
   1dc68:	push	{r4, r5, r6, lr}
   1dc6c:	mov	r4, r0
   1dc70:	bl	11998 <__fpending@plt>
   1dc74:	mov	r6, r0
   1dc78:	mov	r0, r4
   1dc7c:	ldr	r4, [r4]
   1dc80:	bl	1ff7c <close_stdout@@Base+0x5d38>
   1dc84:	and	r4, r4, #32
   1dc88:	adds	r5, r0, #0
   1dc8c:	movne	r5, #1
   1dc90:	cmp	r4, #0
   1dc94:	bne	1dcb4 <close_stdout@@Base+0x3a70>
   1dc98:	cmp	r5, #0
   1dc9c:	beq	1dcac <close_stdout@@Base+0x3a68>
   1dca0:	cmp	r6, #0
   1dca4:	beq	1dcd0 <close_stdout@@Base+0x3a8c>
   1dca8:	mvn	r4, #0
   1dcac:	mov	r0, r4
   1dcb0:	pop	{r4, r5, r6, pc}
   1dcb4:	cmp	r5, #0
   1dcb8:	bne	1dca8 <close_stdout@@Base+0x3a64>
   1dcbc:	bl	11aa0 <__errno_location@plt>
   1dcc0:	mvn	r4, #0
   1dcc4:	str	r5, [r0]
   1dcc8:	mov	r0, r4
   1dccc:	pop	{r4, r5, r6, pc}
   1dcd0:	bl	11aa0 <__errno_location@plt>
   1dcd4:	ldr	r4, [r0]
   1dcd8:	subs	r4, r4, #9
   1dcdc:	mvnne	r4, #0
   1dce0:	mov	r0, r4
   1dce4:	pop	{r4, r5, r6, pc}
   1dce8:	ldr	r3, [pc, #984]	; 1e0c8 <close_stdout@@Base+0x3e84>
   1dcec:	mov	r0, #14
   1dcf0:	ldr	r2, [pc, #980]	; 1e0cc <close_stdout@@Base+0x3e88>
   1dcf4:	add	r3, pc, r3
   1dcf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dcfc:	sub	sp, sp, #132	; 0x84
   1dd00:	ldr	r6, [r3, r2]
   1dd04:	ldr	r3, [r6]
   1dd08:	str	r3, [sp, #124]	; 0x7c
   1dd0c:	bl	11ba8 <nl_langinfo@plt>
   1dd10:	subs	r5, r0, #0
   1dd14:	beq	1ddc8 <close_stdout@@Base+0x3b84>
   1dd18:	ldr	r3, [pc, #944]	; 1e0d0 <close_stdout@@Base+0x3e8c>
   1dd1c:	ldr	r4, [pc, r3]
   1dd20:	cmp	r4, #0
   1dd24:	beq	1ddd4 <close_stdout@@Base+0x3b90>
   1dd28:	ldrb	r7, [r4]
   1dd2c:	cmp	r7, #0
   1dd30:	bne	1dd64 <close_stdout@@Base+0x3b20>
   1dd34:	b	1dd9c <close_stdout@@Base+0x3b58>
   1dd38:	mov	r0, r4
   1dd3c:	bl	11a64 <strlen@plt>
   1dd40:	add	r0, r0, #1
   1dd44:	add	r7, r4, r0
   1dd48:	mov	r0, r7
   1dd4c:	bl	11a64 <strlen@plt>
   1dd50:	add	r0, r0, #1
   1dd54:	add	r4, r7, r0
   1dd58:	ldrb	r7, [r7, r0]
   1dd5c:	cmp	r7, #0
   1dd60:	beq	1dd9c <close_stdout@@Base+0x3b58>
   1dd64:	mov	r0, r5
   1dd68:	mov	r1, r4
   1dd6c:	bl	11824 <strcmp@plt>
   1dd70:	cmp	r0, #0
   1dd74:	beq	1dd8c <close_stdout@@Base+0x3b48>
   1dd78:	cmp	r7, #42	; 0x2a
   1dd7c:	bne	1dd38 <close_stdout@@Base+0x3af4>
   1dd80:	ldrb	r3, [r4, #1]
   1dd84:	cmp	r3, #0
   1dd88:	bne	1dd38 <close_stdout@@Base+0x3af4>
   1dd8c:	mov	r0, r4
   1dd90:	bl	11a64 <strlen@plt>
   1dd94:	add	r0, r0, #1
   1dd98:	add	r5, r4, r0
   1dd9c:	ldrb	r3, [r5]
   1dda0:	cmp	r3, #0
   1dda4:	ldreq	r5, [pc, #808]	; 1e0d4 <close_stdout@@Base+0x3e90>
   1dda8:	addeq	r5, pc, r5
   1ddac:	ldr	r2, [sp, #124]	; 0x7c
   1ddb0:	mov	r0, r5
   1ddb4:	ldr	r3, [r6]
   1ddb8:	cmp	r2, r3
   1ddbc:	bne	1e09c <close_stdout@@Base+0x3e58>
   1ddc0:	add	sp, sp, #132	; 0x84
   1ddc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ddc8:	ldr	r5, [pc, #776]	; 1e0d8 <close_stdout@@Base+0x3e94>
   1ddcc:	add	r5, pc, r5
   1ddd0:	b	1dd18 <close_stdout@@Base+0x3ad4>
   1ddd4:	ldr	r0, [pc, #768]	; 1e0dc <close_stdout@@Base+0x3e98>
   1ddd8:	add	r0, pc, r0
   1dddc:	bl	119d4 <getenv@plt>
   1dde0:	subs	r8, r0, #0
   1dde4:	beq	1e074 <close_stdout@@Base+0x3e30>
   1dde8:	ldrb	r3, [r8]
   1ddec:	cmp	r3, #0
   1ddf0:	beq	1e008 <close_stdout@@Base+0x3dc4>
   1ddf4:	bl	11a64 <strlen@plt>
   1ddf8:	subs	sl, r0, #0
   1ddfc:	subne	r3, sl, #1
   1de00:	bne	1e018 <close_stdout@@Base+0x3dd4>
   1de04:	mov	r9, #0
   1de08:	mov	fp, r9
   1de0c:	add	r9, sl, r9
   1de10:	add	r0, r9, #14
   1de14:	bl	119e0 <malloc@plt>
   1de18:	subs	r7, r0, #0
   1de1c:	beq	1e068 <close_stdout@@Base+0x3e24>
   1de20:	mov	r1, r8
   1de24:	mov	r2, sl
   1de28:	bl	1189c <memcpy@plt>
   1de2c:	cmp	fp, #0
   1de30:	add	ip, r7, r9
   1de34:	movne	r3, #47	; 0x2f
   1de38:	strbne	r3, [r7, sl]
   1de3c:	ldr	r3, [pc, #668]	; 1e0e0 <close_stdout@@Base+0x3e9c>
   1de40:	add	r3, pc, r3
   1de44:	ldm	r3!, {r0, r1, r2}
   1de48:	ldrh	r3, [r3]
   1de4c:	str	r0, [r7, r9]
   1de50:	mov	r0, r7
   1de54:	str	r1, [ip, #4]
   1de58:	mov	r1, #32768	; 0x8000
   1de5c:	strh	r3, [ip, #12]
   1de60:	str	r2, [ip, #8]
   1de64:	bl	119c8 <open64@plt>
   1de68:	subs	r8, r0, #0
   1de6c:	blt	1e030 <close_stdout@@Base+0x3dec>
   1de70:	ldr	r1, [pc, #620]	; 1e0e4 <close_stdout@@Base+0x3ea0>
   1de74:	add	r1, pc, r1
   1de78:	bl	117d0 <fdopen@plt>
   1de7c:	subs	fp, r0, #0
   1de80:	beq	1e088 <close_stdout@@Base+0x3e44>
   1de84:	ldr	r0, [pc, #604]	; 1e0e8 <close_stdout@@Base+0x3ea4>
   1de88:	add	sl, sp, #20
   1de8c:	add	r9, sp, #72	; 0x48
   1de90:	mov	r8, #0
   1de94:	add	r0, pc, r0
   1de98:	str	r0, [sp, #12]
   1de9c:	ldr	r3, [fp, #4]
   1dea0:	ldr	r2, [fp, #8]
   1dea4:	cmp	r3, r2
   1dea8:	bcs	1df94 <close_stdout@@Base+0x3d50>
   1deac:	add	r2, r3, #1
   1deb0:	str	r2, [fp, #4]
   1deb4:	ldrb	r0, [r3]
   1deb8:	cmp	r0, #32
   1debc:	beq	1de9c <close_stdout@@Base+0x3c58>
   1dec0:	sub	r3, r0, #9
   1dec4:	cmp	r3, #1
   1dec8:	bls	1de9c <close_stdout@@Base+0x3c58>
   1decc:	cmp	r0, #35	; 0x23
   1ded0:	beq	1dfa8 <close_stdout@@Base+0x3d64>
   1ded4:	mov	r1, fp
   1ded8:	bl	11a88 <ungetc@plt>
   1dedc:	mov	r0, fp
   1dee0:	ldr	r1, [sp, #12]
   1dee4:	mov	r2, sl
   1dee8:	mov	r3, r9
   1deec:	bl	11ae8 <fscanf@plt>
   1def0:	cmp	r0, #1
   1def4:	ble	1dfd8 <close_stdout@@Base+0x3d94>
   1def8:	mov	r0, sl
   1defc:	bl	11a64 <strlen@plt>
   1df00:	str	r0, [sp, #8]
   1df04:	mov	r0, r9
   1df08:	bl	11a64 <strlen@plt>
   1df0c:	cmp	r8, #0
   1df10:	mov	r2, r0
   1df14:	bne	1e03c <close_stdout@@Base+0x3df8>
   1df18:	ldr	r3, [sp, #8]
   1df1c:	str	r2, [sp]
   1df20:	add	r8, r0, r3
   1df24:	add	r0, r8, #3
   1df28:	add	r8, r8, #2
   1df2c:	bl	119e0 <malloc@plt>
   1df30:	ldr	r2, [sp]
   1df34:	mov	r3, r0
   1df38:	cmp	r3, #0
   1df3c:	beq	1e0a0 <close_stdout@@Base+0x3e5c>
   1df40:	ldr	r0, [sp, #8]
   1df44:	movw	r1, #65534	; 0xfffe
   1df48:	movt	r1, #65535	; 0xffff
   1df4c:	rsb	r2, r2, r8
   1df50:	rsb	r1, r0, r1
   1df54:	stm	sp, {r2, r3}
   1df58:	add	r0, r1, r2
   1df5c:	mov	r1, sl
   1df60:	add	r0, r3, r0
   1df64:	mov	r4, r3
   1df68:	bl	1198c <strcpy@plt>
   1df6c:	ldr	r2, [sp]
   1df70:	ldr	r3, [sp, #4]
   1df74:	mov	r1, r9
   1df78:	sub	r0, r2, #1
   1df7c:	add	r0, r3, r0
   1df80:	bl	1198c <strcpy@plt>
   1df84:	ldr	r3, [fp, #4]
   1df88:	ldr	r2, [fp, #8]
   1df8c:	cmp	r3, r2
   1df90:	bcc	1deac <close_stdout@@Base+0x3c68>
   1df94:	mov	r0, fp
   1df98:	bl	11b78 <__uflow@plt>
   1df9c:	cmn	r0, #1
   1dfa0:	beq	1dfd8 <close_stdout@@Base+0x3d94>
   1dfa4:	b	1deb8 <close_stdout@@Base+0x3c74>
   1dfa8:	ldr	r3, [fp, #4]
   1dfac:	ldr	r2, [fp, #8]
   1dfb0:	cmp	r3, r2
   1dfb4:	bcs	1e0bc <close_stdout@@Base+0x3e78>
   1dfb8:	add	r2, r3, #1
   1dfbc:	str	r2, [fp, #4]
   1dfc0:	ldrb	r0, [r3]
   1dfc4:	cmp	r0, #10
   1dfc8:	cmnne	r0, #1
   1dfcc:	bne	1dfa8 <close_stdout@@Base+0x3d64>
   1dfd0:	cmn	r0, #1
   1dfd4:	bne	1de9c <close_stdout@@Base+0x3c58>
   1dfd8:	mov	r0, fp
   1dfdc:	bl	1ff7c <close_stdout@@Base+0x5d38>
   1dfe0:	cmp	r8, #0
   1dfe4:	beq	1e030 <close_stdout@@Base+0x3dec>
   1dfe8:	mov	r3, #0
   1dfec:	strb	r3, [r4, r8]
   1dff0:	mov	r0, r7
   1dff4:	bl	11884 <free@plt>
   1dff8:	ldr	r3, [pc, #236]	; 1e0ec <close_stdout@@Base+0x3ea8>
   1dffc:	add	r3, pc, r3
   1e000:	str	r4, [r3]
   1e004:	b	1dd28 <close_stdout@@Base+0x3ae4>
   1e008:	ldr	r8, [pc, #224]	; 1e0f0 <close_stdout@@Base+0x3eac>
   1e00c:	mov	r3, #7
   1e010:	mov	sl, #8
   1e014:	add	r8, pc, r8
   1e018:	ldrb	r3, [r8, r3]
   1e01c:	cmp	r3, #47	; 0x2f
   1e020:	movne	r9, #1
   1e024:	movne	fp, r9
   1e028:	bne	1de0c <close_stdout@@Base+0x3bc8>
   1e02c:	b	1de04 <close_stdout@@Base+0x3bc0>
   1e030:	ldr	r4, [pc, #188]	; 1e0f4 <close_stdout@@Base+0x3eb0>
   1e034:	add	r4, pc, r4
   1e038:	b	1dff0 <close_stdout@@Base+0x3dac>
   1e03c:	ldr	r0, [sp, #8]
   1e040:	str	r2, [sp]
   1e044:	add	r3, r0, r2
   1e048:	mov	r0, r4
   1e04c:	add	r8, r3, r8
   1e050:	add	r1, r8, #3
   1e054:	add	r8, r8, #2
   1e058:	bl	11914 <realloc@plt>
   1e05c:	ldr	r2, [sp]
   1e060:	mov	r3, r0
   1e064:	b	1df38 <close_stdout@@Base+0x3cf4>
   1e068:	ldr	r4, [pc, #136]	; 1e0f8 <close_stdout@@Base+0x3eb4>
   1e06c:	add	r4, pc, r4
   1e070:	b	1dff8 <close_stdout@@Base+0x3db4>
   1e074:	ldr	r8, [pc, #128]	; 1e0fc <close_stdout@@Base+0x3eb8>
   1e078:	mov	r3, #7
   1e07c:	mov	sl, #8
   1e080:	add	r8, pc, r8
   1e084:	b	1e018 <close_stdout@@Base+0x3dd4>
   1e088:	ldr	r4, [pc, #112]	; 1e100 <close_stdout@@Base+0x3ebc>
   1e08c:	mov	r0, r8
   1e090:	add	r4, pc, r4
   1e094:	bl	11c14 <close@plt>
   1e098:	b	1dff0 <close_stdout@@Base+0x3dac>
   1e09c:	bl	118e4 <__stack_chk_fail@plt>
   1e0a0:	mov	r0, r4
   1e0a4:	ldr	r4, [pc, #88]	; 1e104 <close_stdout@@Base+0x3ec0>
   1e0a8:	bl	11884 <free@plt>
   1e0ac:	mov	r0, fp
   1e0b0:	add	r4, pc, r4
   1e0b4:	bl	1ff7c <close_stdout@@Base+0x5d38>
   1e0b8:	b	1dff0 <close_stdout@@Base+0x3dac>
   1e0bc:	mov	r0, fp
   1e0c0:	bl	11b78 <__uflow@plt>
   1e0c4:	b	1dfc4 <close_stdout@@Base+0x3d80>
   1e0c8:	andeq	r9, r1, r4, lsl #6
   1e0cc:	andeq	r0, r0, ip, lsl #3
   1e0d0:	andeq	r9, r1, r8, lsr r6
   1e0d4:	andeq	r8, r0, r0, ror fp
   1e0d8:	andeq	r8, r0, r0, lsl #12
   1e0dc:	andeq	r8, r0, r8, asr #22
   1e0e0:	strdeq	r8, [r0], -r0
   1e0e4:			; <UNDEFINED> instruction: 0x000085b4
   1e0e8:	andeq	r8, r0, ip, lsr #21
   1e0ec:	andeq	r9, r1, r8, asr r3
   1e0f0:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1e0f4:	muleq	r0, r8, r3
   1e0f8:	andeq	r8, r0, r0, ror #6
   1e0fc:	andeq	r8, r0, ip, lsl #17
   1e100:	andeq	r8, r0, ip, lsr r3
   1e104:	andeq	r8, r0, ip, lsl r3
   1e108:	push	{r4, lr}
   1e10c:	mov	r4, r0
   1e110:	bl	11854 <wcwidth@plt>
   1e114:	cmp	r0, #0
   1e118:	popge	{r4, pc}
   1e11c:	mov	r0, r4
   1e120:	bl	11944 <iswcntrl@plt>
   1e124:	rsbs	r0, r0, #1
   1e128:	movcc	r0, #0
   1e12c:	pop	{r4, pc}
   1e130:	push	{r3, r4, r5, lr}
   1e134:	mov	r3, r1
   1e138:	mov	r4, r1
   1e13c:	ldr	r1, [r3], #16
   1e140:	mov	r5, r0
   1e144:	cmp	r1, r3
   1e148:	strne	r1, [r0]
   1e14c:	beq	1e170 <close_stdout@@Base+0x3f2c>
   1e150:	ldr	r3, [r4, #4]
   1e154:	str	r3, [r5, #4]
   1e158:	ldrb	r3, [r4, #8]
   1e15c:	cmp	r3, #0
   1e160:	strb	r3, [r5, #8]
   1e164:	ldrne	r3, [r4, #12]
   1e168:	strne	r3, [r5, #12]
   1e16c:	pop	{r3, r4, r5, pc}
   1e170:	add	r3, r0, #16
   1e174:	ldr	r2, [r4, #4]
   1e178:	mov	r0, r3
   1e17c:	bl	1189c <memcpy@plt>
   1e180:	str	r0, [r5]
   1e184:	b	1e150 <close_stdout@@Base+0x3f0c>
   1e188:	ldr	r3, [pc, #32]	; 1e1b0 <close_stdout@@Base+0x3f6c>
   1e18c:	lsr	r2, r0, #5
   1e190:	ldr	r1, [pc, #28]	; 1e1b4 <close_stdout@@Base+0x3f70>
   1e194:	and	r0, r0, #31
   1e198:	add	r3, pc, r3
   1e19c:	ldr	r3, [r3, r1]
   1e1a0:	ldr	r3, [r3, r2, lsl #2]
   1e1a4:	lsr	r0, r3, r0
   1e1a8:	and	r0, r0, #1
   1e1ac:	bx	lr
   1e1b0:	andeq	r8, r1, r0, ror #28
   1e1b4:	andeq	r0, r0, r8, lsl #3
   1e1b8:	ldr	ip, [pc, #380]	; 1e33c <close_stdout@@Base+0x40f8>
   1e1bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e1c0:	mov	r7, r2
   1e1c4:	add	fp, sp, #28
   1e1c8:	ldr	r2, [pc, #368]	; 1e340 <close_stdout@@Base+0x40fc>
   1e1cc:	sub	sp, sp, #8
   1e1d0:	add	ip, pc, ip
   1e1d4:	mov	r8, r3
   1e1d8:	mov	r3, ip
   1e1dc:	cmn	r7, #-1073741823	; 0xc0000001
   1e1e0:	ldr	r5, [ip, r2]
   1e1e4:	mov	r6, r0
   1e1e8:	mov	r4, r1
   1e1ec:	ldr	r3, [r5]
   1e1f0:	str	r3, [fp, #-32]	; 0xffffffe0
   1e1f4:	bls	1e214 <close_stdout@@Base+0x3fd0>
   1e1f8:	mov	r0, #0
   1e1fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e200:	ldr	r3, [r5]
   1e204:	cmp	r2, r3
   1e208:	bne	1e338 <close_stdout@@Base+0x40f4>
   1e20c:	sub	sp, fp, #28
   1e210:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e214:	lsl	r0, r7, #2
   1e218:	movw	r3, #4023	; 0xfb7
   1e21c:	cmp	r0, r3
   1e220:	bls	1e2ec <close_stdout@@Base+0x40a8>
   1e224:	bl	20f78 <close_stdout@@Base+0x6d34>
   1e228:	cmp	r0, #0
   1e22c:	beq	1e1f8 <close_stdout@@Base+0x3fb4>
   1e230:	cmp	r7, #2
   1e234:	mov	r3, #1
   1e238:	str	r3, [r0, #4]
   1e23c:	movhi	r9, r4
   1e240:	movhi	r2, r0
   1e244:	movhi	ip, #0
   1e248:	movhi	r3, #2
   1e24c:	bls	1e298 <close_stdout@@Base+0x4054>
   1e250:	ldrb	r1, [r9, #1]!
   1e254:	ldrb	lr, [r4, ip]
   1e258:	cmp	lr, r1
   1e25c:	bne	1e278 <close_stdout@@Base+0x4034>
   1e260:	b	1e300 <close_stdout@@Base+0x40bc>
   1e264:	ldr	lr, [r0, ip, lsl #2]
   1e268:	rsb	ip, lr, ip
   1e26c:	ldrb	lr, [r4, ip]
   1e270:	cmp	lr, r1
   1e274:	beq	1e300 <close_stdout@@Base+0x40bc>
   1e278:	cmp	ip, #0
   1e27c:	bne	1e264 <close_stdout@@Base+0x4020>
   1e280:	mov	ip, #0
   1e284:	str	r3, [r2, #8]
   1e288:	add	r3, r3, #1
   1e28c:	add	r2, r2, #4
   1e290:	cmp	r3, r7
   1e294:	bne	1e250 <close_stdout@@Base+0x400c>
   1e298:	mov	r2, #0
   1e29c:	str	r2, [r8]
   1e2a0:	ldrb	r3, [r6]
   1e2a4:	mov	ip, r6
   1e2a8:	cmp	r3, #0
   1e2ac:	beq	1e2e0 <close_stdout@@Base+0x409c>
   1e2b0:	ldrb	r1, [r4, r2]
   1e2b4:	cmp	r1, r3
   1e2b8:	beq	1e310 <close_stdout@@Base+0x40cc>
   1e2bc:	cmp	r2, #0
   1e2c0:	addeq	r6, r6, #1
   1e2c4:	ldrne	r1, [r0, r2, lsl #2]
   1e2c8:	ldrbeq	r3, [ip, #1]
   1e2cc:	addeq	ip, ip, #1
   1e2d0:	addne	r6, r6, r1
   1e2d4:	rsbne	r2, r1, r2
   1e2d8:	cmp	r3, #0
   1e2dc:	bne	1e2b0 <close_stdout@@Base+0x406c>
   1e2e0:	bl	20fe0 <close_stdout@@Base+0x6d9c>
   1e2e4:	mov	r0, #1
   1e2e8:	b	1e1fc <close_stdout@@Base+0x3fb8>
   1e2ec:	add	r3, r0, #22
   1e2f0:	bic	r3, r3, #7
   1e2f4:	sub	sp, sp, r3
   1e2f8:	add	r0, sp, #8
   1e2fc:	b	1e228 <close_stdout@@Base+0x3fe4>
   1e300:	add	ip, ip, #1
   1e304:	rsb	r1, ip, r3
   1e308:	str	r1, [r2, #8]
   1e30c:	b	1e288 <close_stdout@@Base+0x4044>
   1e310:	add	r2, r2, #1
   1e314:	add	r1, ip, #1
   1e318:	cmp	r7, r2
   1e31c:	ldrbne	r3, [ip, #1]
   1e320:	movne	ip, r1
   1e324:	bne	1e2a8 <close_stdout@@Base+0x4064>
   1e328:	str	r6, [r8]
   1e32c:	bl	20fe0 <close_stdout@@Base+0x6d9c>
   1e330:	mov	r0, #1
   1e334:	b	1e1fc <close_stdout@@Base+0x3fb8>
   1e338:	bl	118e4 <__stack_chk_fail@plt>
   1e33c:	andeq	r8, r1, r8, lsr #28
   1e340:	andeq	r0, r0, ip, lsl #3
   1e344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e348:	add	fp, sp, #32
   1e34c:	ldr	r8, [pc, #2268]	; 1ec30 <close_stdout@@Base+0x49ec>
   1e350:	sub	sp, sp, #220	; 0xdc
   1e354:	ldr	r3, [pc, #2264]	; 1ec34 <close_stdout@@Base+0x49f0>
   1e358:	add	r8, pc, r8
   1e35c:	str	r0, [fp, #-232]	; 0xffffff18
   1e360:	str	r2, [fp, #-248]	; 0xffffff08
   1e364:	mov	r0, r1
   1e368:	ldr	r3, [r8, r3]
   1e36c:	mov	r4, r1
   1e370:	str	r3, [fp, #-244]	; 0xffffff0c
   1e374:	ldr	r3, [r3]
   1e378:	str	r3, [fp, #-40]	; 0xffffffd8
   1e37c:	bl	21068 <close_stdout@@Base+0x6e24>
   1e380:	movw	r3, #29789	; 0x745d
   1e384:	movt	r3, #1489	; 0x5d1
   1e388:	cmp	r0, r3
   1e38c:	str	r0, [fp, #-224]	; 0xffffff20
   1e390:	bls	1e3b4 <close_stdout@@Base+0x4170>
   1e394:	mov	r0, #0
   1e398:	ldr	r1, [fp, #-244]	; 0xffffff0c
   1e39c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3a0:	ldr	r3, [r1]
   1e3a4:	cmp	r2, r3
   1e3a8:	bne	1ec0c <close_stdout@@Base+0x49c8>
   1e3ac:	sub	sp, fp, #32
   1e3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3b4:	ldr	r1, [fp, #-224]	; 0xffffff20
   1e3b8:	mov	r0, #44	; 0x2c
   1e3bc:	movw	r3, #4023	; 0xfb7
   1e3c0:	mul	r0, r0, r1
   1e3c4:	cmp	r0, r3
   1e3c8:	bls	1e794 <close_stdout@@Base+0x4550>
   1e3cc:	bl	20f78 <close_stdout@@Base+0x6d34>
   1e3d0:	str	r0, [fp, #-236]	; 0xffffff14
   1e3d4:	ldr	r3, [fp, #-236]	; 0xffffff14
   1e3d8:	cmp	r3, #0
   1e3dc:	beq	1e394 <close_stdout@@Base+0x4150>
   1e3e0:	mov	r2, #0
   1e3e4:	ldr	r0, [fp, #-224]	; 0xffffff20
   1e3e8:	str	r2, [fp, #-200]	; 0xffffff38
   1e3ec:	mov	r5, r2
   1e3f0:	strb	r2, [fp, #-208]	; 0xffffff30
   1e3f4:	add	sl, r3, #16
   1e3f8:	str	r2, [fp, #-204]	; 0xffffff34
   1e3fc:	add	r9, r0, r0, lsl #2
   1e400:	strb	r2, [fp, #-196]	; 0xffffff3c
   1e404:	sub	ip, fp, #204	; 0xcc
   1e408:	ldrb	r2, [fp, #-208]	; 0xffffff30
   1e40c:	mov	r7, r4
   1e410:	add	r9, r3, r9, lsl #3
   1e414:	str	r4, [fp, #-192]	; 0xffffff40
   1e418:	cmp	r2, #0
   1e41c:	sub	r1, fp, #180	; 0xb4
   1e420:	str	r9, [fp, #-220]	; 0xffffff24
   1e424:	mov	r4, #1
   1e428:	mov	r9, sl
   1e42c:	str	r1, [fp, #-216]	; 0xffffff28
   1e430:	mov	sl, r7
   1e434:	sub	r6, fp, #176	; 0xb0
   1e438:	mov	r7, ip
   1e43c:	bne	1e810 <close_stdout@@Base+0x45cc>
   1e440:	ldr	r1, [pc, #2032]	; 1ec38 <close_stdout@@Base+0x49f4>
   1e444:	ldrb	r2, [sl]
   1e448:	ldr	r0, [r8, r1]
   1e44c:	and	r1, r2, #31
   1e450:	lsr	r2, r2, #5
   1e454:	ldr	r2, [r0, r2, lsl #2]
   1e458:	lsr	r2, r2, r1
   1e45c:	tst	r2, #1
   1e460:	beq	1e874 <close_stdout@@Base+0x4630>
   1e464:	str	r4, [fp, #-188]	; 0xffffff44
   1e468:	ldrb	r3, [sl]
   1e46c:	strb	r4, [fp, #-184]	; 0xffffff48
   1e470:	mov	sl, r3
   1e474:	str	r3, [fp, #-180]	; 0xffffff4c
   1e478:	cmp	sl, #0
   1e47c:	strb	r4, [fp, #-196]	; 0xffffff3c
   1e480:	mov	r2, #1
   1e484:	bne	1e7c0 <close_stdout@@Base+0x457c>
   1e488:	ldr	r0, [fp, #-224]	; 0xffffff20
   1e48c:	ldr	r9, [fp, #-220]	; 0xffffff24
   1e490:	cmp	r0, #2
   1e494:	str	r2, [r9, #4]
   1e498:	bls	1e564 <close_stdout@@Base+0x4320>
   1e49c:	ldr	r7, [fp, #-236]	; 0xffffff14
   1e4a0:	mov	r6, r9
   1e4a4:	str	r8, [fp, #-216]	; 0xffffff28
   1e4a8:	mov	r4, sl
   1e4ac:	mov	r8, r9
   1e4b0:	mov	r5, #2
   1e4b4:	mov	r9, r7
   1e4b8:	ldrb	sl, [r7, #48]	; 0x30
   1e4bc:	b	1e4f8 <close_stdout@@Base+0x42b4>
   1e4c0:	ldrb	r2, [r3, #8]
   1e4c4:	cmp	r2, #0
   1e4c8:	beq	1e508 <close_stdout@@Base+0x42c4>
   1e4cc:	ldr	r0, [r7, #52]	; 0x34
   1e4d0:	ldr	r3, [r3, #12]
   1e4d4:	subs	r1, r0, r3
   1e4d8:	rsbs	r0, r1, #0
   1e4dc:	adcs	r0, r0, r1
   1e4e0:	cmp	r0, #0
   1e4e4:	bne	1e538 <close_stdout@@Base+0x42f4>
   1e4e8:	cmp	r4, #0
   1e4ec:	beq	1ea4c <close_stdout@@Base+0x4808>
   1e4f0:	ldr	r3, [r8, r4, lsl #2]
   1e4f4:	rsb	r4, r3, r4
   1e4f8:	add	r3, r4, r4, lsl #2
   1e4fc:	cmp	sl, #0
   1e500:	add	r3, r9, r3, lsl #3
   1e504:	bne	1e4c0 <close_stdout@@Base+0x427c>
   1e508:	ldr	r2, [r7, #44]	; 0x2c
   1e50c:	ldr	r1, [r3, #4]
   1e510:	cmp	r2, r1
   1e514:	movne	r0, #0
   1e518:	bne	1e4e0 <close_stdout@@Base+0x429c>
   1e51c:	ldr	r1, [r3]
   1e520:	ldr	r0, [r7, #40]	; 0x28
   1e524:	bl	118c0 <memcmp@plt>
   1e528:	rsbs	r0, r0, #1
   1e52c:	movcc	r0, #0
   1e530:	cmp	r0, #0
   1e534:	beq	1e4e8 <close_stdout@@Base+0x42a4>
   1e538:	add	r4, r4, #1
   1e53c:	rsb	r2, r4, r5
   1e540:	str	r2, [r6, #8]
   1e544:	ldr	r2, [fp, #-224]	; 0xffffff20
   1e548:	add	r5, r5, #1
   1e54c:	add	r7, r7, #40	; 0x28
   1e550:	add	r6, r6, #4
   1e554:	cmp	r5, r2
   1e558:	bne	1e4b8 <close_stdout@@Base+0x4274>
   1e55c:	mov	r9, r8
   1e560:	ldr	r8, [fp, #-216]	; 0xffffff28
   1e564:	ldr	r1, [fp, #-232]	; 0xffffff18
   1e568:	mov	r3, #0
   1e56c:	ldr	r2, [fp, #-248]	; 0xffffff08
   1e570:	sub	r7, fp, #148	; 0x94
   1e574:	mov	r4, r3
   1e578:	mov	r6, r3
   1e57c:	mov	r5, #1
   1e580:	sub	r0, fp, #92	; 0x5c
   1e584:	str	r1, [fp, #-136]	; 0xffffff78
   1e588:	str	r0, [fp, #-228]	; 0xffffff1c
   1e58c:	sub	r0, fp, #68	; 0x44
   1e590:	str	r1, [fp, #-80]	; 0xffffffb0
   1e594:	sub	r1, fp, #124	; 0x7c
   1e598:	str	r3, [fp, #-148]	; 0xffffff6c
   1e59c:	strb	r3, [fp, #-140]	; 0xffffff74
   1e5a0:	str	r3, [fp, #-220]	; 0xffffff24
   1e5a4:	str	r3, [r2]
   1e5a8:	strb	r3, [fp, #-152]	; 0xffffff68
   1e5ac:	str	r0, [fp, #-232]	; 0xffffff18
   1e5b0:	str	r1, [fp, #-216]	; 0xffffff28
   1e5b4:	strb	r3, [fp, #-96]	; 0xffffffa0
   1e5b8:	str	r3, [fp, #-92]	; 0xffffffa4
   1e5bc:	strb	r3, [fp, #-84]	; 0xffffffac
   1e5c0:	str	r3, [r7, #4]
   1e5c4:	str	r3, [fp, #-88]	; 0xffffffa8
   1e5c8:	str	r9, [fp, #-240]	; 0xffffff10
   1e5cc:	cmp	r4, #0
   1e5d0:	beq	1e640 <close_stdout@@Base+0x43fc>
   1e5d4:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   1e5d8:	cmp	r4, #0
   1e5dc:	bne	1e694 <close_stdout@@Base+0x4450>
   1e5e0:	ldr	r2, [fp, #-220]	; 0xffffff24
   1e5e4:	ldr	r3, [fp, #-236]	; 0xffffff14
   1e5e8:	add	r1, r2, r2, lsl #2
   1e5ec:	add	r1, r3, r1, lsl #3
   1e5f0:	ldr	r2, [r1, #4]
   1e5f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1e5f8:	cmp	r2, r3
   1e5fc:	movne	r0, #0
   1e600:	beq	1ea34 <close_stdout@@Base+0x47f0>
   1e604:	mov	r3, r0
   1e608:	cmp	r3, #0
   1e60c:	ldr	r2, [fp, #-220]	; 0xffffff24
   1e610:	beq	1e6d8 <close_stdout@@Base+0x4494>
   1e614:	ldr	r0, [fp, #-224]	; 0xffffff20
   1e618:	add	r2, r2, #1
   1e61c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e620:	str	r2, [fp, #-220]	; 0xffffff24
   1e624:	cmp	r0, r2
   1e628:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e62c:	strb	r6, [fp, #-84]	; 0xffffffac
   1e630:	add	r3, r3, r2
   1e634:	str	r3, [fp, #-80]	; 0xffffffb0
   1e638:	beq	1ebbc <close_stdout@@Base+0x4978>
   1e63c:	mov	r4, #0
   1e640:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   1e644:	cmp	r3, #0
   1e648:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e64c:	bne	1e954 <close_stdout@@Base+0x4710>
   1e650:	ldr	r1, [pc, #1504]	; 1ec38 <close_stdout@@Base+0x49f4>
   1e654:	ldrb	r2, [r3]
   1e658:	ldr	r0, [r8, r1]
   1e65c:	and	r1, r2, #31
   1e660:	lsr	r2, r2, #5
   1e664:	ldr	r2, [r0, r2, lsl #2]
   1e668:	lsr	r2, r2, r1
   1e66c:	tst	r2, #1
   1e670:	beq	1e938 <close_stdout@@Base+0x46f4>
   1e674:	str	r5, [fp, #-76]	; 0xffffffb4
   1e678:	mov	r4, #1
   1e67c:	ldrb	r3, [r3]
   1e680:	strb	r5, [fp, #-72]	; 0xffffffb8
   1e684:	str	r3, [fp, #-68]	; 0xffffffbc
   1e688:	cmp	r4, #0
   1e68c:	strb	r5, [fp, #-84]	; 0xffffffac
   1e690:	beq	1e5e0 <close_stdout@@Base+0x439c>
   1e694:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e698:	cmp	r2, #0
   1e69c:	beq	1ebc8 <close_stdout@@Base+0x4984>
   1e6a0:	ldr	r3, [fp, #-220]	; 0xffffff24
   1e6a4:	ldr	r0, [fp, #-236]	; 0xffffff14
   1e6a8:	add	r1, r3, r3, lsl #2
   1e6ac:	add	r1, r0, r1, lsl #3
   1e6b0:	ldrb	r3, [r1, #8]
   1e6b4:	cmp	r3, #0
   1e6b8:	beq	1e5f0 <close_stdout@@Base+0x43ac>
   1e6bc:	ldr	r3, [r1, #12]
   1e6c0:	subs	r2, r2, r3
   1e6c4:	rsbs	r3, r2, #0
   1e6c8:	adcs	r3, r3, r2
   1e6cc:	ldr	r2, [fp, #-220]	; 0xffffff24
   1e6d0:	cmp	r3, #0
   1e6d4:	bne	1e614 <close_stdout@@Base+0x43d0>
   1e6d8:	cmp	r2, #0
   1e6dc:	beq	1e9e4 <close_stdout@@Base+0x47a0>
   1e6e0:	ldr	r3, [fp, #-240]	; 0xffffff10
   1e6e4:	ldr	r4, [r3, r2, lsl #2]
   1e6e8:	cmp	r4, #0
   1e6ec:	rsb	r2, r4, r2
   1e6f0:	str	r2, [fp, #-220]	; 0xffffff24
   1e6f4:	beq	1ea2c <close_stdout@@Base+0x47e8>
   1e6f8:	ldrb	sl, [fp, #-140]	; 0xffffff74
   1e6fc:	cmp	sl, #0
   1e700:	beq	1e730 <close_stdout@@Base+0x44ec>
   1e704:	ldrb	sl, [fp, #-128]	; 0xffffff80
   1e708:	cmp	sl, #0
   1e70c:	bne	1e784 <close_stdout@@Base+0x4540>
   1e710:	ldr	r2, [fp, #-136]	; 0xffffff78
   1e714:	subs	r4, r4, #1
   1e718:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1e71c:	strb	r6, [fp, #-140]	; 0xffffff74
   1e720:	movne	sl, #0
   1e724:	add	r3, r2, r3
   1e728:	str	r3, [fp, #-136]	; 0xffffff78
   1e72c:	beq	1ea2c <close_stdout@@Base+0x47e8>
   1e730:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1e734:	ldr	r9, [fp, #-136]	; 0xffffff78
   1e738:	cmp	r3, #0
   1e73c:	bne	1e8a0 <close_stdout@@Base+0x465c>
   1e740:	ldr	r1, [pc, #1264]	; 1ec38 <close_stdout@@Base+0x49f4>
   1e744:	ldrb	r2, [r9]
   1e748:	ldr	r0, [r8, r1]
   1e74c:	and	r1, r2, #31
   1e750:	lsr	r2, r2, #5
   1e754:	ldr	r2, [r0, r2, lsl #2]
   1e758:	lsr	r2, r2, r1
   1e75c:	tst	r2, #1
   1e760:	beq	1e88c <close_stdout@@Base+0x4648>
   1e764:	str	r5, [fp, #-132]	; 0xffffff7c
   1e768:	mov	sl, #1
   1e76c:	ldrb	r3, [r9]
   1e770:	strb	r5, [fp, #-128]	; 0xffffff80
   1e774:	str	r3, [fp, #-124]	; 0xffffff84
   1e778:	cmp	sl, #0
   1e77c:	strb	r5, [fp, #-140]	; 0xffffff74
   1e780:	beq	1e710 <close_stdout@@Base+0x44cc>
   1e784:	ldr	r3, [fp, #-124]	; 0xffffff84
   1e788:	cmp	r3, #0
   1e78c:	bne	1e710 <close_stdout@@Base+0x44cc>
   1e790:	bl	11c08 <abort@plt>
   1e794:	add	r3, r0, #22
   1e798:	bic	r3, r3, #7
   1e79c:	sub	sp, sp, r3
   1e7a0:	add	r2, sp, #8
   1e7a4:	str	r2, [fp, #-236]	; 0xffffff14
   1e7a8:	b	1e3d4 <close_stdout@@Base+0x4190>
   1e7ac:	ldr	r0, [fp, #-192]	; 0xffffff40
   1e7b0:	bl	11a64 <strlen@plt>
   1e7b4:	strb	r5, [fp, #-184]	; 0xffffff48
   1e7b8:	str	r0, [fp, #-188]	; 0xffffff44
   1e7bc:	strb	r4, [fp, #-196]	; 0xffffff3c
   1e7c0:	ldr	r3, [fp, #-192]	; 0xffffff40
   1e7c4:	cmp	r3, r6
   1e7c8:	strne	r3, [r9, #-16]
   1e7cc:	beq	1eaf8 <close_stdout@@Base+0x48b4>
   1e7d0:	ldr	r3, [fp, #-188]	; 0xffffff44
   1e7d4:	add	r9, r9, #40	; 0x28
   1e7d8:	str	r3, [r9, #-52]	; 0xffffffcc
   1e7dc:	ldrb	r3, [fp, #-184]	; 0xffffff48
   1e7e0:	cmp	r3, #0
   1e7e4:	strb	r3, [r9, #-48]	; 0xffffffd0
   1e7e8:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   1e7ec:	strne	r3, [r9, #-44]	; 0xffffffd4
   1e7f0:	ldr	sl, [fp, #-192]	; 0xffffff40
   1e7f4:	ldr	r2, [fp, #-188]	; 0xffffff44
   1e7f8:	strb	r5, [fp, #-196]	; 0xffffff3c
   1e7fc:	add	sl, sl, r2
   1e800:	ldrb	r2, [fp, #-208]	; 0xffffff30
   1e804:	str	sl, [fp, #-192]	; 0xffffff40
   1e808:	cmp	r2, #0
   1e80c:	beq	1e440 <close_stdout@@Base+0x41fc>
   1e810:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1e814:	mov	r1, r0
   1e818:	mov	r0, sl
   1e81c:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1e820:	mov	r1, sl
   1e824:	mov	r3, r7
   1e828:	mov	r2, r0
   1e82c:	sub	r0, fp, #180	; 0xb4
   1e830:	bl	119a4 <mbrtowc@plt>
   1e834:	cmn	r0, #1
   1e838:	str	r0, [fp, #-188]	; 0xffffff44
   1e83c:	strbeq	r5, [fp, #-184]	; 0xffffff48
   1e840:	streq	r4, [fp, #-188]	; 0xffffff44
   1e844:	beq	1e7bc <close_stdout@@Base+0x4578>
   1e848:	cmn	r0, #2
   1e84c:	beq	1e7ac <close_stdout@@Base+0x4568>
   1e850:	cmp	r0, #0
   1e854:	beq	1ea54 <close_stdout@@Base+0x4810>
   1e858:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1e85c:	mov	r0, r7
   1e860:	strb	r4, [fp, #-184]	; 0xffffff48
   1e864:	bl	118b4 <mbsinit@plt>
   1e868:	cmp	r0, #0
   1e86c:	strbne	r5, [fp, #-208]	; 0xffffff30
   1e870:	b	1e478 <close_stdout@@Base+0x4234>
   1e874:	mov	r0, r7
   1e878:	bl	118b4 <mbsinit@plt>
   1e87c:	cmp	r0, #0
   1e880:	beq	1ebec <close_stdout@@Base+0x49a8>
   1e884:	strb	r4, [fp, #-208]	; 0xffffff30
   1e888:	b	1e810 <close_stdout@@Base+0x45cc>
   1e88c:	mov	r0, r7
   1e890:	bl	118b4 <mbsinit@plt>
   1e894:	cmp	r0, #0
   1e898:	beq	1ebec <close_stdout@@Base+0x49a8>
   1e89c:	strb	r5, [fp, #-152]	; 0xffffff68
   1e8a0:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1e8a4:	mov	r1, r0
   1e8a8:	mov	r0, r9
   1e8ac:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1e8b0:	mov	r1, r9
   1e8b4:	mov	r3, r7
   1e8b8:	mov	r2, r0
   1e8bc:	sub	r0, fp, #124	; 0x7c
   1e8c0:	bl	119a4 <mbrtowc@plt>
   1e8c4:	cmn	r0, #1
   1e8c8:	str	r0, [fp, #-132]	; 0xffffff7c
   1e8cc:	strbeq	r6, [fp, #-128]	; 0xffffff80
   1e8d0:	streq	r5, [fp, #-132]	; 0xffffff7c
   1e8d4:	beq	1e778 <close_stdout@@Base+0x4534>
   1e8d8:	cmn	r0, #2
   1e8dc:	beq	1e924 <close_stdout@@Base+0x46e0>
   1e8e0:	cmp	r0, #0
   1e8e4:	bne	1e908 <close_stdout@@Base+0x46c4>
   1e8e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e8ec:	str	r5, [fp, #-132]	; 0xffffff7c
   1e8f0:	ldrb	r3, [r3]
   1e8f4:	cmp	r3, #0
   1e8f8:	bne	1ec10 <close_stdout@@Base+0x49cc>
   1e8fc:	ldr	r3, [fp, #-124]	; 0xffffff84
   1e900:	cmp	r3, #0
   1e904:	bne	1ea74 <close_stdout@@Base+0x4830>
   1e908:	mov	r0, r7
   1e90c:	strb	r5, [fp, #-128]	; 0xffffff80
   1e910:	bl	118b4 <mbsinit@plt>
   1e914:	mov	sl, #1
   1e918:	cmp	r0, #0
   1e91c:	strbne	r6, [fp, #-152]	; 0xffffff68
   1e920:	b	1e778 <close_stdout@@Base+0x4534>
   1e924:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e928:	bl	11a64 <strlen@plt>
   1e92c:	strb	r6, [fp, #-128]	; 0xffffff80
   1e930:	str	r0, [fp, #-132]	; 0xffffff7c
   1e934:	b	1e778 <close_stdout@@Base+0x4534>
   1e938:	sub	r0, fp, #92	; 0x5c
   1e93c:	str	r3, [fp, #-252]	; 0xffffff04
   1e940:	bl	118b4 <mbsinit@plt>
   1e944:	ldr	r3, [fp, #-252]	; 0xffffff04
   1e948:	cmp	r0, #0
   1e94c:	beq	1ebec <close_stdout@@Base+0x49a8>
   1e950:	strb	r5, [fp, #-96]	; 0xffffffa0
   1e954:	str	r3, [fp, #-252]	; 0xffffff04
   1e958:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1e95c:	ldr	r3, [fp, #-252]	; 0xffffff04
   1e960:	mov	r1, r0
   1e964:	mov	r0, r3
   1e968:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1e96c:	ldr	r3, [fp, #-252]	; 0xffffff04
   1e970:	mov	r1, r3
   1e974:	sub	r3, fp, #92	; 0x5c
   1e978:	mov	r2, r0
   1e97c:	sub	r0, fp, #68	; 0x44
   1e980:	bl	119a4 <mbrtowc@plt>
   1e984:	cmn	r0, #1
   1e988:	str	r0, [fp, #-76]	; 0xffffffb4
   1e98c:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   1e990:	streq	r5, [fp, #-76]	; 0xffffffb4
   1e994:	beq	1e688 <close_stdout@@Base+0x4444>
   1e998:	cmn	r0, #2
   1e99c:	beq	1eba8 <close_stdout@@Base+0x4964>
   1e9a0:	cmp	r0, #0
   1e9a4:	bne	1e9c8 <close_stdout@@Base+0x4784>
   1e9a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e9ac:	str	r5, [fp, #-76]	; 0xffffffb4
   1e9b0:	ldrb	r3, [r3]
   1e9b4:	cmp	r3, #0
   1e9b8:	bne	1ec10 <close_stdout@@Base+0x49cc>
   1e9bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e9c0:	cmp	r3, #0
   1e9c4:	bne	1ea74 <close_stdout@@Base+0x4830>
   1e9c8:	sub	r0, fp, #92	; 0x5c
   1e9cc:	strb	r5, [fp, #-72]	; 0xffffffb8
   1e9d0:	bl	118b4 <mbsinit@plt>
   1e9d4:	mov	r4, #1
   1e9d8:	cmp	r0, #0
   1e9dc:	strbne	r6, [fp, #-96]	; 0xffffffa0
   1e9e0:	b	1e688 <close_stdout@@Base+0x4444>
   1e9e4:	ldrb	r4, [fp, #-140]	; 0xffffff74
   1e9e8:	cmp	r4, #0
   1e9ec:	beq	1ea94 <close_stdout@@Base+0x4850>
   1e9f0:	ldrb	r4, [fp, #-128]	; 0xffffff80
   1e9f4:	cmp	r4, #0
   1e9f8:	bne	1eae8 <close_stdout@@Base+0x48a4>
   1e9fc:	ldr	r1, [fp, #-136]	; 0xffffff78
   1ea00:	mov	r4, #0
   1ea04:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1ea08:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ea0c:	add	r2, r1, r2
   1ea10:	str	r2, [fp, #-136]	; 0xffffff78
   1ea14:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ea18:	strb	r6, [fp, #-140]	; 0xffffff74
   1ea1c:	add	r3, r3, r2
   1ea20:	strb	r6, [fp, #-84]	; 0xffffffac
   1ea24:	str	r3, [fp, #-80]	; 0xffffffb0
   1ea28:	b	1e640 <close_stdout@@Base+0x43fc>
   1ea2c:	ldrb	r4, [fp, #-84]	; 0xffffffac
   1ea30:	b	1e5cc <close_stdout@@Base+0x4388>
   1ea34:	ldr	r0, [r1]
   1ea38:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ea3c:	bl	118c0 <memcmp@plt>
   1ea40:	rsbs	r0, r0, #1
   1ea44:	movcc	r0, #0
   1ea48:	b	1e604 <close_stdout@@Base+0x43c0>
   1ea4c:	str	r5, [r6, #8]
   1ea50:	b	1e544 <close_stdout@@Base+0x4300>
   1ea54:	ldr	r3, [fp, #-192]	; 0xffffff40
   1ea58:	str	r4, [fp, #-188]	; 0xffffff44
   1ea5c:	ldrb	r3, [r3]
   1ea60:	cmp	r3, #0
   1ea64:	bne	1ec10 <close_stdout@@Base+0x49cc>
   1ea68:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1ea6c:	cmp	sl, #0
   1ea70:	beq	1e85c <close_stdout@@Base+0x4618>
   1ea74:	ldr	r0, [pc, #448]	; 1ec3c <close_stdout@@Base+0x49f8>
   1ea78:	mov	r2, #179	; 0xb3
   1ea7c:	ldr	r1, [pc, #444]	; 1ec40 <close_stdout@@Base+0x49fc>
   1ea80:	ldr	r3, [pc, #444]	; 1ec44 <close_stdout@@Base+0x4a00>
   1ea84:	add	r0, pc, r0
   1ea88:	add	r1, pc, r1
   1ea8c:	add	r3, pc, r3
   1ea90:	bl	11c2c <__assert_fail@plt>
   1ea94:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1ea98:	ldr	sl, [fp, #-136]	; 0xffffff78
   1ea9c:	cmp	r3, #0
   1eaa0:	bne	1eb24 <close_stdout@@Base+0x48e0>
   1eaa4:	ldr	r1, [pc, #396]	; 1ec38 <close_stdout@@Base+0x49f4>
   1eaa8:	ldrb	r2, [sl]
   1eaac:	ldr	r0, [r8, r1]
   1eab0:	and	r1, r2, #31
   1eab4:	lsr	r2, r2, #5
   1eab8:	ldr	r2, [r0, r2, lsl #2]
   1eabc:	lsr	r2, r2, r1
   1eac0:	tst	r2, #1
   1eac4:	beq	1eb10 <close_stdout@@Base+0x48cc>
   1eac8:	str	r5, [fp, #-132]	; 0xffffff7c
   1eacc:	mov	r4, #1
   1ead0:	ldrb	r3, [sl]
   1ead4:	strb	r5, [fp, #-128]	; 0xffffff80
   1ead8:	str	r3, [fp, #-124]	; 0xffffff84
   1eadc:	cmp	r4, #0
   1eae0:	strb	r5, [fp, #-140]	; 0xffffff74
   1eae4:	beq	1e9fc <close_stdout@@Base+0x47b8>
   1eae8:	ldr	r3, [fp, #-124]	; 0xffffff84
   1eaec:	cmp	r3, #0
   1eaf0:	bne	1e9fc <close_stdout@@Base+0x47b8>
   1eaf4:	b	1e790 <close_stdout@@Base+0x454c>
   1eaf8:	mov	r0, r9
   1eafc:	mov	r1, r6
   1eb00:	ldr	r2, [fp, #-188]	; 0xffffff44
   1eb04:	bl	1189c <memcpy@plt>
   1eb08:	str	r9, [r9, #-16]
   1eb0c:	b	1e7d0 <close_stdout@@Base+0x458c>
   1eb10:	mov	r0, r7
   1eb14:	bl	118b4 <mbsinit@plt>
   1eb18:	cmp	r0, #0
   1eb1c:	beq	1ebec <close_stdout@@Base+0x49a8>
   1eb20:	strb	r5, [fp, #-152]	; 0xffffff68
   1eb24:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1eb28:	mov	r1, r0
   1eb2c:	mov	r0, sl
   1eb30:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1eb34:	mov	r1, sl
   1eb38:	mov	r3, r7
   1eb3c:	mov	r2, r0
   1eb40:	sub	r0, fp, #124	; 0x7c
   1eb44:	bl	119a4 <mbrtowc@plt>
   1eb48:	cmn	r0, #1
   1eb4c:	str	r0, [fp, #-132]	; 0xffffff7c
   1eb50:	strbeq	r6, [fp, #-128]	; 0xffffff80
   1eb54:	streq	r5, [fp, #-132]	; 0xffffff7c
   1eb58:	beq	1eadc <close_stdout@@Base+0x4898>
   1eb5c:	cmn	r0, #2
   1eb60:	beq	1ebd8 <close_stdout@@Base+0x4994>
   1eb64:	cmp	r0, #0
   1eb68:	bne	1eb8c <close_stdout@@Base+0x4948>
   1eb6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eb70:	str	r5, [fp, #-132]	; 0xffffff7c
   1eb74:	ldrb	r3, [r3]
   1eb78:	cmp	r3, #0
   1eb7c:	bne	1ec10 <close_stdout@@Base+0x49cc>
   1eb80:	ldr	r3, [fp, #-124]	; 0xffffff84
   1eb84:	cmp	r3, #0
   1eb88:	bne	1ea74 <close_stdout@@Base+0x4830>
   1eb8c:	mov	r0, r7
   1eb90:	strb	r5, [fp, #-128]	; 0xffffff80
   1eb94:	bl	118b4 <mbsinit@plt>
   1eb98:	mov	r4, #1
   1eb9c:	cmp	r0, #0
   1eba0:	strbne	r6, [fp, #-152]	; 0xffffff68
   1eba4:	b	1eadc <close_stdout@@Base+0x4898>
   1eba8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ebac:	bl	11a64 <strlen@plt>
   1ebb0:	strb	r6, [fp, #-72]	; 0xffffffb8
   1ebb4:	str	r0, [fp, #-76]	; 0xffffffb4
   1ebb8:	b	1e688 <close_stdout@@Base+0x4444>
   1ebbc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ebc0:	ldr	r1, [fp, #-248]	; 0xffffff08
   1ebc4:	str	r3, [r1]
   1ebc8:	ldr	r0, [fp, #-236]	; 0xffffff14
   1ebcc:	bl	20fe0 <close_stdout@@Base+0x6d9c>
   1ebd0:	mov	r0, #1
   1ebd4:	b	1e398 <close_stdout@@Base+0x4154>
   1ebd8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ebdc:	bl	11a64 <strlen@plt>
   1ebe0:	strb	r6, [fp, #-128]	; 0xffffff80
   1ebe4:	str	r0, [fp, #-132]	; 0xffffff7c
   1ebe8:	b	1eadc <close_stdout@@Base+0x4898>
   1ebec:	ldr	r0, [pc, #84]	; 1ec48 <close_stdout@@Base+0x4a04>
   1ebf0:	mov	r2, #150	; 0x96
   1ebf4:	ldr	r1, [pc, #80]	; 1ec4c <close_stdout@@Base+0x4a08>
   1ebf8:	ldr	r3, [pc, #80]	; 1ec50 <close_stdout@@Base+0x4a0c>
   1ebfc:	add	r0, pc, r0
   1ec00:	add	r1, pc, r1
   1ec04:	add	r3, pc, r3
   1ec08:	bl	11c2c <__assert_fail@plt>
   1ec0c:	bl	118e4 <__stack_chk_fail@plt>
   1ec10:	ldr	r0, [pc, #60]	; 1ec54 <close_stdout@@Base+0x4a10>
   1ec14:	mov	r2, #178	; 0xb2
   1ec18:	ldr	r1, [pc, #56]	; 1ec58 <close_stdout@@Base+0x4a14>
   1ec1c:	ldr	r3, [pc, #56]	; 1ec5c <close_stdout@@Base+0x4a18>
   1ec20:	add	r0, pc, r0
   1ec24:	add	r1, pc, r1
   1ec28:	add	r3, pc, r3
   1ec2c:	bl	11c2c <__assert_fail@plt>
   1ec30:	andeq	r8, r1, r0, lsr #25
   1ec34:	andeq	r0, r0, ip, lsl #3
   1ec38:	andeq	r0, r0, r8, lsl #3
   1ec3c:	andeq	r7, r0, ip, lsl #21
   1ec40:	andeq	r7, r0, r0, ror #20
   1ec44:	andeq	r7, r0, r0, ror #29
   1ec48:	ldrdeq	r7, [r0], -r4
   1ec4c:	andeq	r7, r0, r8, ror #17
   1ec50:	andeq	r7, r0, r8, ror #26
   1ec54:	ldrdeq	r7, [r0], -r8
   1ec58:	andeq	r7, r0, r4, asr #17
   1ec5c:	andeq	r7, r0, r4, asr #26
   1ec60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec64:	sub	sp, sp, #348	; 0x15c
   1ec68:	ldr	r4, [pc, #3188]	; 1f8e4 <close_stdout@@Base+0x56a0>
   1ec6c:	ldr	r3, [pc, #3188]	; 1f8e8 <close_stdout@@Base+0x56a4>
   1ec70:	add	r4, pc, r4
   1ec74:	str	r0, [sp, #16]
   1ec78:	str	r1, [sp, #4]
   1ec7c:	ldr	r3, [r4, r3]
   1ec80:	str	r3, [sp, #20]
   1ec84:	ldr	r3, [r3]
   1ec88:	str	r3, [sp, #340]	; 0x154
   1ec8c:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1ec90:	cmp	r0, #1
   1ec94:	bls	1ee78 <close_stdout@@Base+0x4c34>
   1ec98:	ldr	r0, [sp, #4]
   1ec9c:	add	r5, sp, #64	; 0x40
   1eca0:	ldr	ip, [pc, #3140]	; 1f8ec <close_stdout@@Base+0x56a8>
   1eca4:	mov	r2, #0
   1eca8:	str	r2, [r5, #4]
   1ecac:	ldrb	r1, [r0]
   1ecb0:	str	r0, [sp, #76]	; 0x4c
   1ecb4:	strb	r2, [sp, #60]	; 0x3c
   1ecb8:	and	r3, r1, #31
   1ecbc:	str	r2, [sp, #64]	; 0x40
   1ecc0:	lsr	r0, r1, #5
   1ecc4:	strb	r2, [sp, #72]	; 0x48
   1ecc8:	ldr	r6, [r4, ip]
   1eccc:	ldr	r2, [r6, r0, lsl #2]
   1ecd0:	lsr	r3, r2, r3
   1ecd4:	ands	r4, r3, #1
   1ecd8:	beq	1edc8 <close_stdout@@Base+0x4b84>
   1ecdc:	mov	r4, r1
   1ece0:	cmp	r4, #0
   1ece4:	mov	r3, #1
   1ece8:	str	r1, [sp, #88]	; 0x58
   1ecec:	str	r3, [sp, #80]	; 0x50
   1ecf0:	strb	r3, [sp, #84]	; 0x54
   1ecf4:	mov	r3, #1
   1ecf8:	strb	r3, [sp, #72]	; 0x48
   1ecfc:	beq	1ee58 <close_stdout@@Base+0x4c14>
   1ed00:	add	r2, sp, #120	; 0x78
   1ed04:	add	r0, sp, #176	; 0xb0
   1ed08:	str	r2, [sp, #8]
   1ed0c:	mov	r3, #0
   1ed10:	ldr	r2, [sp, #4]
   1ed14:	mov	r9, r3
   1ed18:	str	r0, [sp, #44]	; 0x2c
   1ed1c:	mov	r5, r3
   1ed20:	ldr	r0, [sp, #16]
   1ed24:	mov	r4, #1
   1ed28:	mov	r1, #1
   1ed2c:	str	r2, [sp, #132]	; 0x84
   1ed30:	str	r1, [sp, #32]
   1ed34:	add	r2, sp, #200	; 0xc8
   1ed38:	str	r0, [sp, #188]	; 0xbc
   1ed3c:	mov	r8, r0
   1ed40:	add	r1, sp, #144	; 0x90
   1ed44:	add	r0, sp, #56	; 0x38
   1ed48:	str	r3, [sp, #28]
   1ed4c:	strb	r3, [sp, #116]	; 0x74
   1ed50:	str	r3, [sp, #12]
   1ed54:	str	r3, [sp, #120]	; 0x78
   1ed58:	strb	r3, [sp, #128]	; 0x80
   1ed5c:	strb	r3, [sp, #172]	; 0xac
   1ed60:	str	r3, [sp, #176]	; 0xb0
   1ed64:	str	r2, [sp, #48]	; 0x30
   1ed68:	strb	r3, [sp, #184]	; 0xb8
   1ed6c:	str	r0, [sp, #52]	; 0x34
   1ed70:	str	r3, [sp, #124]	; 0x7c
   1ed74:	str	r1, [sp, #24]
   1ed78:	str	r3, [sp, #180]	; 0xb4
   1ed7c:	ldrb	r3, [sp, #172]	; 0xac
   1ed80:	cmp	r3, #0
   1ed84:	bne	1efe0 <close_stdout@@Base+0x4d9c>
   1ed88:	ldrb	r3, [r8]
   1ed8c:	and	r2, r3, #31
   1ed90:	lsr	r3, r3, #5
   1ed94:	ldr	r3, [r6, r3, lsl #2]
   1ed98:	lsr	r3, r3, r2
   1ed9c:	tst	r3, #1
   1eda0:	beq	1efcc <close_stdout@@Base+0x4d88>
   1eda4:	str	r4, [sp, #192]	; 0xc0
   1eda8:	ldrb	r7, [r8]
   1edac:	strb	r4, [sp, #196]	; 0xc4
   1edb0:	cmp	r7, #0
   1edb4:	strb	r4, [sp, #184]	; 0xb8
   1edb8:	str	r7, [sp, #200]	; 0xc8
   1edbc:	bne	1f04c <close_stdout@@Base+0x4e08>
   1edc0:	mov	r0, r7
   1edc4:	b	1ee5c <close_stdout@@Base+0x4c18>
   1edc8:	mov	r0, r5
   1edcc:	bl	118b4 <mbsinit@plt>
   1edd0:	cmp	r0, #0
   1edd4:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1edd8:	mov	r7, #1
   1eddc:	strb	r7, [sp, #60]	; 0x3c
   1ede0:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1ede4:	mov	r1, r0
   1ede8:	ldr	r0, [sp, #4]
   1edec:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1edf0:	ldr	r1, [sp, #4]
   1edf4:	mov	r3, r5
   1edf8:	mov	r2, r0
   1edfc:	add	r0, sp, #88	; 0x58
   1ee00:	bl	119a4 <mbrtowc@plt>
   1ee04:	cmn	r0, #1
   1ee08:	str	r0, [sp, #80]	; 0x50
   1ee0c:	strbeq	r4, [sp, #84]	; 0x54
   1ee10:	streq	r7, [sp, #80]	; 0x50
   1ee14:	beq	1f064 <close_stdout@@Base+0x4e20>
   1ee18:	cmn	r0, #2
   1ee1c:	beq	1f054 <close_stdout@@Base+0x4e10>
   1ee20:	cmp	r0, #0
   1ee24:	beq	1f7dc <close_stdout@@Base+0x5598>
   1ee28:	ldr	r4, [sp, #88]	; 0x58
   1ee2c:	mov	r0, r5
   1ee30:	mov	r3, #1
   1ee34:	strb	r3, [sp, #84]	; 0x54
   1ee38:	bl	118b4 <mbsinit@plt>
   1ee3c:	cmp	r0, #0
   1ee40:	movne	r3, #0
   1ee44:	strbne	r3, [sp, #60]	; 0x3c
   1ee48:	cmp	r4, #0
   1ee4c:	mov	r3, #1
   1ee50:	strb	r3, [sp, #72]	; 0x48
   1ee54:	bne	1ed00 <close_stdout@@Base+0x4abc>
   1ee58:	ldr	r0, [sp, #16]
   1ee5c:	ldr	r1, [sp, #20]
   1ee60:	ldr	r2, [sp, #340]	; 0x154
   1ee64:	ldr	r3, [r1]
   1ee68:	cmp	r2, r3
   1ee6c:	bne	1f8c0 <close_stdout@@Base+0x567c>
   1ee70:	add	sp, sp, #348	; 0x15c
   1ee74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee78:	ldr	r2, [sp, #4]
   1ee7c:	ldrb	r8, [r2]
   1ee80:	cmp	r8, #0
   1ee84:	beq	1ee58 <close_stdout@@Base+0x4c14>
   1ee88:	ldr	r3, [sp, #16]
   1ee8c:	ldrb	sl, [r3]
   1ee90:	cmp	sl, #0
   1ee94:	beq	1f354 <close_stdout@@Base+0x5110>
   1ee98:	cmp	sl, r8
   1ee9c:	mov	r4, #0
   1eea0:	mov	r5, r4
   1eea4:	mov	r9, r4
   1eea8:	add	r0, sp, #56	; 0x38
   1eeac:	add	r7, r3, #1
   1eeb0:	mov	r6, r3
   1eeb4:	mov	fp, r2
   1eeb8:	mov	r1, #1
   1eebc:	str	r0, [sp, #8]
   1eec0:	add	r4, r4, #1
   1eec4:	beq	1ef68 <close_stdout@@Base+0x4d24>
   1eec8:	ldrb	sl, [r6, #1]
   1eecc:	cmp	sl, #0
   1eed0:	beq	1f354 <close_stdout@@Base+0x5110>
   1eed4:	add	r5, r5, #1
   1eed8:	cmp	r4, #9
   1eedc:	movls	r3, #0
   1eee0:	andhi	r3, r1, #1
   1eee4:	cmp	r3, #0
   1eee8:	beq	1ef54 <close_stdout@@Base+0x4d10>
   1eeec:	add	r3, r4, r4, lsl #2
   1eef0:	cmp	r5, r3
   1eef4:	bcc	1ef50 <close_stdout@@Base+0x4d0c>
   1eef8:	cmp	fp, #0
   1eefc:	beq	1ef1c <close_stdout@@Base+0x4cd8>
   1ef00:	rsb	r1, r9, r5
   1ef04:	mov	r0, fp
   1ef08:	bl	11b3c <strnlen@plt>
   1ef0c:	mov	r9, r5
   1ef10:	ldrb	r3, [fp, r0]!
   1ef14:	cmp	r3, #0
   1ef18:	bne	1ef50 <close_stdout@@Base+0x4d0c>
   1ef1c:	ldr	r0, [sp, #4]
   1ef20:	bl	11a64 <strlen@plt>
   1ef24:	ldr	r1, [sp, #4]
   1ef28:	add	r3, sp, #56	; 0x38
   1ef2c:	mov	r2, r0
   1ef30:	mov	r0, r7
   1ef34:	bl	1e1b8 <close_stdout@@Base+0x3f74>
   1ef38:	cmp	r0, #0
   1ef3c:	bne	1f898 <close_stdout@@Base+0x5654>
   1ef40:	mov	fp, r0
   1ef44:	ldrb	sl, [r6, #1]
   1ef48:	mov	r1, r0
   1ef4c:	b	1ef54 <close_stdout@@Base+0x4d10>
   1ef50:	mov	r1, #1
   1ef54:	cmp	sl, r8
   1ef58:	add	r7, r7, #1
   1ef5c:	add	r6, r6, #1
   1ef60:	add	r4, r4, #1
   1ef64:	bne	1eec8 <close_stdout@@Base+0x4c84>
   1ef68:	ldr	r2, [sp, #4]
   1ef6c:	ldrb	r3, [r2, #1]
   1ef70:	cmp	r3, #0
   1ef74:	beq	1efc4 <close_stdout@@Base+0x4d80>
   1ef78:	ldrb	sl, [r6, #1]
   1ef7c:	cmp	sl, #0
   1ef80:	beq	1f354 <close_stdout@@Base+0x5110>
   1ef84:	cmp	r3, sl
   1ef88:	add	r3, r5, #2
   1ef8c:	bne	1f3f0 <close_stdout@@Base+0x51ac>
   1ef90:	rsb	r0, r5, #0
   1ef94:	add	r5, r2, r0
   1ef98:	add	r0, r6, r0
   1ef9c:	b	1efb8 <close_stdout@@Base+0x4d74>
   1efa0:	ldrb	ip, [r0, r3]
   1efa4:	cmp	ip, #0
   1efa8:	beq	1f354 <close_stdout@@Base+0x5110>
   1efac:	cmp	r2, ip
   1efb0:	add	r3, r3, #1
   1efb4:	bne	1f3f0 <close_stdout@@Base+0x51ac>
   1efb8:	ldrb	r2, [r5, r3]
   1efbc:	cmp	r2, #0
   1efc0:	bne	1efa0 <close_stdout@@Base+0x4d5c>
   1efc4:	mov	r0, r6
   1efc8:	b	1ee5c <close_stdout@@Base+0x4c18>
   1efcc:	add	r0, sp, #176	; 0xb0
   1efd0:	bl	118b4 <mbsinit@plt>
   1efd4:	cmp	r0, #0
   1efd8:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1efdc:	strb	r4, [sp, #172]	; 0xac
   1efe0:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1efe4:	mov	r1, r0
   1efe8:	mov	r0, r8
   1efec:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1eff0:	mov	r1, r8
   1eff4:	add	r3, sp, #176	; 0xb0
   1eff8:	mov	r2, r0
   1effc:	add	r0, sp, #200	; 0xc8
   1f000:	bl	119a4 <mbrtowc@plt>
   1f004:	cmn	r0, #1
   1f008:	str	r0, [sp, #192]	; 0xc0
   1f00c:	strbeq	r5, [sp, #196]	; 0xc4
   1f010:	streq	r4, [sp, #192]	; 0xc0
   1f014:	beq	1f080 <close_stdout@@Base+0x4e3c>
   1f018:	cmn	r0, #2
   1f01c:	beq	1f070 <close_stdout@@Base+0x4e2c>
   1f020:	cmp	r0, #0
   1f024:	beq	1f7b8 <close_stdout@@Base+0x5574>
   1f028:	ldr	r7, [sp, #200]	; 0xc8
   1f02c:	add	r0, sp, #176	; 0xb0
   1f030:	strb	r4, [sp, #196]	; 0xc4
   1f034:	bl	118b4 <mbsinit@plt>
   1f038:	strb	r4, [sp, #184]	; 0xb8
   1f03c:	cmp	r0, #0
   1f040:	strbne	r5, [sp, #172]	; 0xac
   1f044:	cmp	r7, #0
   1f048:	beq	1edc0 <close_stdout@@Base+0x4b7c>
   1f04c:	mov	r3, #1
   1f050:	b	1f088 <close_stdout@@Base+0x4e44>
   1f054:	ldr	r0, [sp, #76]	; 0x4c
   1f058:	bl	11a64 <strlen@plt>
   1f05c:	strb	r4, [sp, #84]	; 0x54
   1f060:	str	r0, [sp, #80]	; 0x50
   1f064:	mov	r3, #1
   1f068:	strb	r3, [sp, #72]	; 0x48
   1f06c:	b	1ed00 <close_stdout@@Base+0x4abc>
   1f070:	ldr	r0, [sp, #188]	; 0xbc
   1f074:	bl	11a64 <strlen@plt>
   1f078:	strb	r5, [sp, #196]	; 0xc4
   1f07c:	str	r0, [sp, #192]	; 0xc0
   1f080:	mov	r3, #0
   1f084:	strb	r4, [sp, #184]	; 0xb8
   1f088:	ldr	r8, [sp, #32]
   1f08c:	ldr	r2, [sp, #12]
   1f090:	cmp	r2, #9
   1f094:	movls	r8, #0
   1f098:	andhi	r8, r8, #1
   1f09c:	cmp	r8, #0
   1f0a0:	beq	1f178 <close_stdout@@Base+0x4f34>
   1f0a4:	ldr	r1, [sp, #12]
   1f0a8:	add	r2, r1, r1, lsl #2
   1f0ac:	cmp	r9, r2
   1f0b0:	bcc	1f348 <close_stdout@@Base+0x5104>
   1f0b4:	ldr	r2, [sp, #28]
   1f0b8:	subs	r7, r9, r2
   1f0bc:	beq	1f150 <close_stdout@@Base+0x4f0c>
   1f0c0:	ldrb	sl, [sp, #128]	; 0x80
   1f0c4:	cmp	sl, #0
   1f0c8:	beq	1f0f8 <close_stdout@@Base+0x4eb4>
   1f0cc:	ldrb	sl, [sp, #140]	; 0x8c
   1f0d0:	cmp	sl, #0
   1f0d4:	bne	1f144 <close_stdout@@Base+0x4f00>
   1f0d8:	ldr	sl, [sp, #132]	; 0x84
   1f0dc:	subs	r7, r7, #1
   1f0e0:	ldr	r3, [sp, #136]	; 0x88
   1f0e4:	strb	r5, [sp, #128]	; 0x80
   1f0e8:	add	sl, sl, r3
   1f0ec:	str	sl, [sp, #132]	; 0x84
   1f0f0:	beq	1f41c <close_stdout@@Base+0x51d8>
   1f0f4:	mov	sl, #0
   1f0f8:	ldrb	r3, [sp, #116]	; 0x74
   1f0fc:	ldr	fp, [sp, #132]	; 0x84
   1f100:	cmp	r3, #0
   1f104:	bne	1f1e8 <close_stdout@@Base+0x4fa4>
   1f108:	ldrb	r3, [fp]
   1f10c:	and	r2, r3, #31
   1f110:	lsr	r3, r3, #5
   1f114:	ldr	r3, [r6, r3, lsl #2]
   1f118:	lsr	r3, r3, r2
   1f11c:	tst	r3, #1
   1f120:	beq	1f1d4 <close_stdout@@Base+0x4f90>
   1f124:	str	r4, [sp, #136]	; 0x88
   1f128:	mov	sl, r8
   1f12c:	ldrb	r3, [fp]
   1f130:	strb	r4, [sp, #140]	; 0x8c
   1f134:	str	r3, [sp, #144]	; 0x90
   1f138:	cmp	sl, #0
   1f13c:	strb	r4, [sp, #128]	; 0x80
   1f140:	beq	1f0d8 <close_stdout@@Base+0x4e94>
   1f144:	ldr	r3, [sp, #144]	; 0x90
   1f148:	cmp	r3, #0
   1f14c:	bne	1f0d8 <close_stdout@@Base+0x4e94>
   1f150:	ldrb	r3, [sp, #128]	; 0x80
   1f154:	cmp	r3, #0
   1f158:	ldrbne	r8, [sp, #140]	; 0x8c
   1f15c:	beq	1f418 <close_stdout@@Base+0x51d4>
   1f160:	cmp	r8, #0
   1f164:	bne	1f3f8 <close_stdout@@Base+0x51b4>
   1f168:	ldrb	r3, [sp, #196]	; 0xc4
   1f16c:	mov	r0, #1
   1f170:	str	r9, [sp, #28]
   1f174:	str	r0, [sp, #32]
   1f178:	cmp	r3, #0
   1f17c:	ldr	r3, [sp, #12]
   1f180:	add	r7, r9, #1
   1f184:	add	r3, r3, #1
   1f188:	str	r3, [sp, #12]
   1f18c:	beq	1f26c <close_stdout@@Base+0x5028>
   1f190:	ldrb	r3, [sp, #84]	; 0x54
   1f194:	cmp	r3, #0
   1f198:	beq	1f26c <close_stdout@@Base+0x5028>
   1f19c:	ldr	r0, [sp, #200]	; 0xc8
   1f1a0:	ldr	r3, [sp, #88]	; 0x58
   1f1a4:	subs	r3, r0, r3
   1f1a8:	rsbs	r0, r3, #0
   1f1ac:	adcs	r0, r0, r3
   1f1b0:	cmp	r0, #0
   1f1b4:	bne	1f29c <close_stdout@@Base+0x5058>
   1f1b8:	ldr	r8, [sp, #188]	; 0xbc
   1f1bc:	mov	r9, r7
   1f1c0:	ldr	r3, [sp, #192]	; 0xc0
   1f1c4:	strb	r5, [sp, #184]	; 0xb8
   1f1c8:	add	r8, r8, r3
   1f1cc:	str	r8, [sp, #188]	; 0xbc
   1f1d0:	b	1ed7c <close_stdout@@Base+0x4b38>
   1f1d4:	add	r0, sp, #120	; 0x78
   1f1d8:	bl	118b4 <mbsinit@plt>
   1f1dc:	cmp	r0, #0
   1f1e0:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1f1e4:	strb	r4, [sp, #116]	; 0x74
   1f1e8:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1f1ec:	mov	r1, r0
   1f1f0:	mov	r0, fp
   1f1f4:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1f1f8:	mov	r1, fp
   1f1fc:	add	r3, sp, #120	; 0x78
   1f200:	mov	r2, r0
   1f204:	add	r0, sp, #144	; 0x90
   1f208:	bl	119a4 <mbrtowc@plt>
   1f20c:	cmn	r0, #1
   1f210:	str	r0, [sp, #136]	; 0x88
   1f214:	strbeq	r5, [sp, #140]	; 0x8c
   1f218:	streq	r4, [sp, #136]	; 0x88
   1f21c:	beq	1f138 <close_stdout@@Base+0x4ef4>
   1f220:	cmn	r0, #2
   1f224:	beq	1f334 <close_stdout@@Base+0x50f0>
   1f228:	cmp	r0, #0
   1f22c:	bne	1f250 <close_stdout@@Base+0x500c>
   1f230:	ldr	r3, [sp, #132]	; 0x84
   1f234:	str	r4, [sp, #136]	; 0x88
   1f238:	ldrb	r3, [r3]
   1f23c:	cmp	r3, #0
   1f240:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f244:	ldr	r3, [sp, #144]	; 0x90
   1f248:	cmp	r3, #0
   1f24c:	bne	1f3d0 <close_stdout@@Base+0x518c>
   1f250:	add	r0, sp, #120	; 0x78
   1f254:	strb	r4, [sp, #140]	; 0x8c
   1f258:	bl	118b4 <mbsinit@plt>
   1f25c:	mov	sl, r8
   1f260:	cmp	r0, #0
   1f264:	strbne	r5, [sp, #116]	; 0x74
   1f268:	b	1f138 <close_stdout@@Base+0x4ef4>
   1f26c:	ldr	r2, [sp, #192]	; 0xc0
   1f270:	ldr	r3, [sp, #80]	; 0x50
   1f274:	cmp	r2, r3
   1f278:	movne	r0, #0
   1f27c:	bne	1f1b0 <close_stdout@@Base+0x4f6c>
   1f280:	ldr	r0, [sp, #188]	; 0xbc
   1f284:	ldr	r1, [sp, #76]	; 0x4c
   1f288:	bl	118c0 <memcmp@plt>
   1f28c:	rsbs	r0, r0, #1
   1f290:	movcc	r0, #0
   1f294:	cmp	r0, #0
   1f298:	beq	1f1b8 <close_stdout@@Base+0x4f74>
   1f29c:	ldr	r0, [sp, #4]
   1f2a0:	add	r7, sp, #172	; 0xac
   1f2a4:	add	ip, sp, #228	; 0xe4
   1f2a8:	add	r8, sp, #288	; 0x120
   1f2ac:	str	r0, [sp, #300]	; 0x12c
   1f2b0:	ldm	r7!, {r0, r1, r2, r3}
   1f2b4:	stmia	ip!, {r0, r1, r2, r3}
   1f2b8:	ldm	r7!, {r0, r1, r2, r3}
   1f2bc:	strb	r5, [sp, #240]	; 0xf0
   1f2c0:	stmia	ip!, {r0, r1, r2, r3}
   1f2c4:	ldm	r7!, {r0, r1, r2, r3}
   1f2c8:	ldr	sl, [sp, #244]	; 0xf4
   1f2cc:	stmia	ip!, {r0, r1, r2, r3}
   1f2d0:	ldm	r7, {r0, r1}
   1f2d4:	ldr	r3, [sp, #248]	; 0xf8
   1f2d8:	stm	ip, {r0, r1}
   1f2dc:	add	r3, sl, r3
   1f2e0:	str	r3, [sp, #244]	; 0xf4
   1f2e4:	ldr	r1, [sp, #4]
   1f2e8:	str	r5, [sp, #288]	; 0x120
   1f2ec:	strb	r5, [sp, #296]	; 0x128
   1f2f0:	ldrb	r3, [r1]
   1f2f4:	strb	r5, [sp, #284]	; 0x11c
   1f2f8:	and	r2, r3, #31
   1f2fc:	str	r5, [r8, #4]
   1f300:	lsr	r1, r3, #5
   1f304:	ldr	r7, [r6, r1, lsl #2]
   1f308:	lsr	r7, r7, r2
   1f30c:	ands	r7, r7, #1
   1f310:	beq	1f35c <close_stdout@@Base+0x5118>
   1f314:	mov	r7, r3
   1f318:	str	r4, [sp, #304]	; 0x130
   1f31c:	str	r3, [sp, #312]	; 0x138
   1f320:	strb	r4, [sp, #308]	; 0x134
   1f324:	cmp	r7, #0
   1f328:	strb	r4, [sp, #296]	; 0x128
   1f32c:	bne	1f4e0 <close_stdout@@Base+0x529c>
   1f330:	bl	11c08 <abort@plt>
   1f334:	ldr	r0, [sp, #132]	; 0x84
   1f338:	bl	11a64 <strlen@plt>
   1f33c:	strb	r5, [sp, #140]	; 0x8c
   1f340:	str	r0, [sp, #136]	; 0x88
   1f344:	b	1f138 <close_stdout@@Base+0x4ef4>
   1f348:	mov	r2, #1
   1f34c:	str	r2, [sp, #32]
   1f350:	b	1f178 <close_stdout@@Base+0x4f34>
   1f354:	mov	r0, #0
   1f358:	b	1ee5c <close_stdout@@Base+0x4c18>
   1f35c:	mov	r0, r8
   1f360:	bl	118b4 <mbsinit@plt>
   1f364:	cmp	r0, #0
   1f368:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1f36c:	strb	r4, [sp, #284]	; 0x11c
   1f370:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1f374:	mov	r1, r0
   1f378:	ldr	r0, [sp, #4]
   1f37c:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1f380:	ldr	r1, [sp, #4]
   1f384:	mov	r3, r8
   1f388:	mov	r2, r0
   1f38c:	add	r0, sp, #312	; 0x138
   1f390:	bl	119a4 <mbrtowc@plt>
   1f394:	cmn	r0, #1
   1f398:	str	r0, [sp, #304]	; 0x130
   1f39c:	beq	1f870 <close_stdout@@Base+0x562c>
   1f3a0:	cmn	r0, #2
   1f3a4:	beq	1f880 <close_stdout@@Base+0x563c>
   1f3a8:	cmp	r0, #0
   1f3ac:	bne	1f83c <close_stdout@@Base+0x55f8>
   1f3b0:	ldr	fp, [sp, #300]	; 0x12c
   1f3b4:	str	r4, [sp, #304]	; 0x130
   1f3b8:	ldrb	r3, [fp]
   1f3bc:	cmp	r3, #0
   1f3c0:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f3c4:	ldr	r7, [sp, #312]	; 0x138
   1f3c8:	cmp	r7, #0
   1f3cc:	beq	1f840 <close_stdout@@Base+0x55fc>
   1f3d0:	ldr	r0, [pc, #1304]	; 1f8f0 <close_stdout@@Base+0x56ac>
   1f3d4:	mov	r2, #179	; 0xb3
   1f3d8:	ldr	r1, [pc, #1300]	; 1f8f4 <close_stdout@@Base+0x56b0>
   1f3dc:	ldr	r3, [pc, #1300]	; 1f8f8 <close_stdout@@Base+0x56b4>
   1f3e0:	add	r0, pc, r0
   1f3e4:	add	r1, pc, r1
   1f3e8:	add	r3, pc, r3
   1f3ec:	bl	11c2c <__assert_fail@plt>
   1f3f0:	mov	r5, r3
   1f3f4:	b	1eed8 <close_stdout@@Base+0x4c94>
   1f3f8:	ldr	r3, [sp, #144]	; 0x90
   1f3fc:	cmp	r3, #0
   1f400:	beq	1f800 <close_stdout@@Base+0x55bc>
   1f404:	mov	r1, #1
   1f408:	ldrb	r3, [sp, #196]	; 0xc4
   1f40c:	str	r9, [sp, #28]
   1f410:	str	r1, [sp, #32]
   1f414:	b	1f178 <close_stdout@@Base+0x4f34>
   1f418:	ldr	sl, [sp, #132]	; 0x84
   1f41c:	ldrb	r3, [sp, #116]	; 0x74
   1f420:	cmp	r3, #0
   1f424:	bne	1f458 <close_stdout@@Base+0x5214>
   1f428:	ldrb	r3, [sl]
   1f42c:	and	r2, r3, #31
   1f430:	lsr	r3, r3, #5
   1f434:	ldr	r3, [r6, r3, lsl #2]
   1f438:	lsr	r3, r3, r2
   1f43c:	tst	r3, #1
   1f440:	bne	1f828 <close_stdout@@Base+0x55e4>
   1f444:	add	r0, sp, #120	; 0x78
   1f448:	bl	118b4 <mbsinit@plt>
   1f44c:	cmp	r0, #0
   1f450:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1f454:	strb	r4, [sp, #116]	; 0x74
   1f458:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1f45c:	mov	r1, r0
   1f460:	mov	r0, sl
   1f464:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1f468:	mov	r1, sl
   1f46c:	add	r3, sp, #120	; 0x78
   1f470:	mov	r2, r0
   1f474:	add	r0, sp, #144	; 0x90
   1f478:	bl	119a4 <mbrtowc@plt>
   1f47c:	cmn	r0, #1
   1f480:	str	r0, [sp, #136]	; 0x88
   1f484:	strbeq	r5, [sp, #140]	; 0x8c
   1f488:	streq	r4, [sp, #136]	; 0x88
   1f48c:	moveq	r8, #0
   1f490:	beq	1f4d8 <close_stdout@@Base+0x5294>
   1f494:	cmn	r0, #2
   1f498:	beq	1f858 <close_stdout@@Base+0x5614>
   1f49c:	cmp	r0, #0
   1f4a0:	bne	1f4c4 <close_stdout@@Base+0x5280>
   1f4a4:	ldr	r3, [sp, #132]	; 0x84
   1f4a8:	str	r4, [sp, #136]	; 0x88
   1f4ac:	ldrb	r3, [r3]
   1f4b0:	cmp	r3, #0
   1f4b4:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f4b8:	ldr	r3, [sp, #144]	; 0x90
   1f4bc:	cmp	r3, #0
   1f4c0:	bne	1f3d0 <close_stdout@@Base+0x518c>
   1f4c4:	add	r0, sp, #120	; 0x78
   1f4c8:	strb	r4, [sp, #140]	; 0x8c
   1f4cc:	bl	118b4 <mbsinit@plt>
   1f4d0:	cmp	r0, #0
   1f4d4:	strbne	r5, [sp, #116]	; 0x74
   1f4d8:	strb	r4, [sp, #128]	; 0x80
   1f4dc:	b	1f160 <close_stdout@@Base+0x4f1c>
   1f4e0:	ldr	fp, [sp, #300]	; 0x12c
   1f4e4:	ldr	r2, [sp, #304]	; 0x130
   1f4e8:	add	r7, r9, #2
   1f4ec:	add	r3, sp, #312	; 0x138
   1f4f0:	add	r0, sp, #256	; 0x100
   1f4f4:	add	fp, fp, r2
   1f4f8:	ldrb	r2, [sp, #284]	; 0x11c
   1f4fc:	strb	r5, [sp, #296]	; 0x128
   1f500:	add	r9, sp, #232	; 0xe8
   1f504:	cmp	r2, #0
   1f508:	str	r3, [sp, #36]	; 0x24
   1f50c:	str	r0, [sp, #40]	; 0x28
   1f510:	str	fp, [sp, #300]	; 0x12c
   1f514:	bne	1f5e0 <close_stdout@@Base+0x539c>
   1f518:	ldrb	r2, [fp]
   1f51c:	and	r1, r2, #31
   1f520:	lsr	r2, r2, #5
   1f524:	ldr	r2, [r6, r2, lsl #2]
   1f528:	lsr	r2, r2, r1
   1f52c:	tst	r2, #1
   1f530:	beq	1f768 <close_stdout@@Base+0x5524>
   1f534:	str	r4, [sp, #304]	; 0x130
   1f538:	ldrb	r3, [fp]
   1f53c:	strb	r4, [sp, #308]	; 0x134
   1f540:	mov	fp, r3
   1f544:	str	r3, [sp, #312]	; 0x138
   1f548:	cmp	fp, #0
   1f54c:	strb	r4, [sp, #296]	; 0x128
   1f550:	bne	1f570 <close_stdout@@Base+0x532c>
   1f554:	ldr	r0, [sp, #188]	; 0xbc
   1f558:	b	1ee5c <close_stdout@@Base+0x4c18>
   1f55c:	ldr	r0, [sp, #300]	; 0x12c
   1f560:	bl	11a64 <strlen@plt>
   1f564:	strb	r5, [sp, #308]	; 0x134
   1f568:	str	r0, [sp, #304]	; 0x130
   1f56c:	strb	r4, [sp, #296]	; 0x128
   1f570:	ldrb	fp, [sp, #240]	; 0xf0
   1f574:	cmp	fp, #0
   1f578:	beq	1f644 <close_stdout@@Base+0x5400>
   1f57c:	ldrb	fp, [sp, #252]	; 0xfc
   1f580:	cmp	fp, #0
   1f584:	bne	1f690 <close_stdout@@Base+0x544c>
   1f588:	ldr	r2, [sp, #248]	; 0xf8
   1f58c:	ldr	r3, [sp, #304]	; 0x130
   1f590:	cmp	r2, r3
   1f594:	movne	r0, #1
   1f598:	beq	1f750 <close_stdout@@Base+0x550c>
   1f59c:	cmp	r0, #0
   1f5a0:	add	r3, r7, #1
   1f5a4:	bne	1f1b8 <close_stdout@@Base+0x4f74>
   1f5a8:	ldr	r1, [sp, #244]	; 0xf4
   1f5ac:	mov	r7, r3
   1f5b0:	ldr	r2, [sp, #248]	; 0xf8
   1f5b4:	ldr	fp, [sp, #300]	; 0x12c
   1f5b8:	add	r1, r1, r2
   1f5bc:	ldr	r2, [sp, #304]	; 0x130
   1f5c0:	strb	r0, [sp, #240]	; 0xf0
   1f5c4:	add	fp, fp, r2
   1f5c8:	ldrb	r2, [sp, #284]	; 0x11c
   1f5cc:	strb	r0, [sp, #296]	; 0x128
   1f5d0:	cmp	r2, #0
   1f5d4:	str	r1, [sp, #244]	; 0xf4
   1f5d8:	str	fp, [sp, #300]	; 0x12c
   1f5dc:	beq	1f518 <close_stdout@@Base+0x52d4>
   1f5e0:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1f5e4:	mov	r1, r0
   1f5e8:	mov	r0, fp
   1f5ec:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1f5f0:	mov	r1, fp
   1f5f4:	mov	r3, r8
   1f5f8:	mov	r2, r0
   1f5fc:	add	r0, sp, #312	; 0x138
   1f600:	bl	119a4 <mbrtowc@plt>
   1f604:	cmn	r0, #1
   1f608:	str	r0, [sp, #304]	; 0x130
   1f60c:	strbeq	r5, [sp, #308]	; 0x134
   1f610:	streq	r4, [sp, #304]	; 0x130
   1f614:	beq	1f56c <close_stdout@@Base+0x5328>
   1f618:	cmn	r0, #2
   1f61c:	beq	1f55c <close_stdout@@Base+0x5318>
   1f620:	cmp	r0, #0
   1f624:	beq	1f780 <close_stdout@@Base+0x553c>
   1f628:	ldr	fp, [sp, #312]	; 0x138
   1f62c:	mov	r0, r8
   1f630:	strb	r4, [sp, #308]	; 0x134
   1f634:	bl	118b4 <mbsinit@plt>
   1f638:	cmp	r0, #0
   1f63c:	strbne	r5, [sp, #284]	; 0x11c
   1f640:	b	1f548 <close_stdout@@Base+0x5304>
   1f644:	ldrb	r3, [sp, #228]	; 0xe4
   1f648:	ldr	sl, [sp, #244]	; 0xf4
   1f64c:	cmp	r3, #0
   1f650:	bne	1f6cc <close_stdout@@Base+0x5488>
   1f654:	ldrb	r2, [sl]
   1f658:	and	r1, r2, #31
   1f65c:	lsr	r2, r2, #5
   1f660:	ldr	r2, [r6, r2, lsl #2]
   1f664:	lsr	r2, r2, r1
   1f668:	tst	r2, #1
   1f66c:	beq	1f6b8 <close_stdout@@Base+0x5474>
   1f670:	str	r4, [sp, #248]	; 0xf8
   1f674:	mov	fp, #1
   1f678:	ldrb	r3, [sl]
   1f67c:	strb	r4, [sp, #252]	; 0xfc
   1f680:	str	r3, [sp, #256]	; 0x100
   1f684:	cmp	fp, #0
   1f688:	strb	r4, [sp, #240]	; 0xf0
   1f68c:	beq	1f588 <close_stdout@@Base+0x5344>
   1f690:	ldr	r0, [sp, #256]	; 0x100
   1f694:	cmp	r0, #0
   1f698:	beq	1ee5c <close_stdout@@Base+0x4c18>
   1f69c:	ldrb	r3, [sp, #308]	; 0x134
   1f6a0:	cmp	r3, #0
   1f6a4:	beq	1f588 <close_stdout@@Base+0x5344>
   1f6a8:	ldr	r3, [sp, #312]	; 0x138
   1f6ac:	subs	r0, r0, r3
   1f6b0:	movne	r0, #1
   1f6b4:	b	1f59c <close_stdout@@Base+0x5358>
   1f6b8:	mov	r0, r9
   1f6bc:	bl	118b4 <mbsinit@plt>
   1f6c0:	cmp	r0, #0
   1f6c4:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1f6c8:	strb	r4, [sp, #228]	; 0xe4
   1f6cc:	bl	11980 <__ctype_get_mb_cur_max@plt>
   1f6d0:	mov	r1, r0
   1f6d4:	mov	r0, sl
   1f6d8:	bl	1cc84 <close_stdout@@Base+0x2a40>
   1f6dc:	mov	r1, sl
   1f6e0:	mov	r3, r9
   1f6e4:	mov	r2, r0
   1f6e8:	add	r0, sp, #256	; 0x100
   1f6ec:	bl	119a4 <mbrtowc@plt>
   1f6f0:	cmn	r0, #1
   1f6f4:	str	r0, [sp, #248]	; 0xf8
   1f6f8:	strbeq	r5, [sp, #252]	; 0xfc
   1f6fc:	streq	r4, [sp, #248]	; 0xf8
   1f700:	beq	1f684 <close_stdout@@Base+0x5440>
   1f704:	cmn	r0, #2
   1f708:	beq	1f7a4 <close_stdout@@Base+0x5560>
   1f70c:	cmp	r0, #0
   1f710:	bne	1f734 <close_stdout@@Base+0x54f0>
   1f714:	ldr	r3, [sp, #244]	; 0xf4
   1f718:	str	r4, [sp, #248]	; 0xf8
   1f71c:	ldrb	r3, [r3]
   1f720:	cmp	r3, #0
   1f724:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f728:	ldr	r3, [sp, #256]	; 0x100
   1f72c:	cmp	r3, #0
   1f730:	bne	1f3d0 <close_stdout@@Base+0x518c>
   1f734:	mov	r0, r9
   1f738:	strb	r4, [sp, #252]	; 0xfc
   1f73c:	bl	118b4 <mbsinit@plt>
   1f740:	mov	fp, #1
   1f744:	cmp	r0, #0
   1f748:	strbne	r5, [sp, #228]	; 0xe4
   1f74c:	b	1f684 <close_stdout@@Base+0x5440>
   1f750:	ldr	r0, [sp, #244]	; 0xf4
   1f754:	ldr	r1, [sp, #300]	; 0x12c
   1f758:	bl	118c0 <memcmp@plt>
   1f75c:	adds	r0, r0, #0
   1f760:	movne	r0, #1
   1f764:	b	1f59c <close_stdout@@Base+0x5358>
   1f768:	mov	r0, r8
   1f76c:	bl	118b4 <mbsinit@plt>
   1f770:	cmp	r0, #0
   1f774:	beq	1f8a0 <close_stdout@@Base+0x565c>
   1f778:	strb	r4, [sp, #284]	; 0x11c
   1f77c:	b	1f5e0 <close_stdout@@Base+0x539c>
   1f780:	ldr	r3, [sp, #300]	; 0x12c
   1f784:	str	r4, [sp, #304]	; 0x130
   1f788:	ldrb	r3, [r3]
   1f78c:	cmp	r3, #0
   1f790:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f794:	ldr	fp, [sp, #312]	; 0x138
   1f798:	cmp	fp, #0
   1f79c:	beq	1f62c <close_stdout@@Base+0x53e8>
   1f7a0:	b	1f3d0 <close_stdout@@Base+0x518c>
   1f7a4:	ldr	r0, [sp, #244]	; 0xf4
   1f7a8:	bl	11a64 <strlen@plt>
   1f7ac:	strb	r5, [sp, #252]	; 0xfc
   1f7b0:	str	r0, [sp, #248]	; 0xf8
   1f7b4:	b	1f684 <close_stdout@@Base+0x5440>
   1f7b8:	ldr	r3, [sp, #188]	; 0xbc
   1f7bc:	str	r4, [sp, #192]	; 0xc0
   1f7c0:	ldrb	r3, [r3]
   1f7c4:	cmp	r3, #0
   1f7c8:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f7cc:	ldr	r7, [sp, #200]	; 0xc8
   1f7d0:	cmp	r7, #0
   1f7d4:	beq	1f02c <close_stdout@@Base+0x4de8>
   1f7d8:	b	1f3d0 <close_stdout@@Base+0x518c>
   1f7dc:	ldr	r3, [sp, #76]	; 0x4c
   1f7e0:	str	r7, [sp, #80]	; 0x50
   1f7e4:	ldrb	r3, [r3]
   1f7e8:	cmp	r3, #0
   1f7ec:	bne	1f8c4 <close_stdout@@Base+0x5680>
   1f7f0:	ldr	r4, [sp, #88]	; 0x58
   1f7f4:	cmp	r4, #0
   1f7f8:	beq	1ee2c <close_stdout@@Base+0x4be8>
   1f7fc:	b	1f3d0 <close_stdout@@Base+0x518c>
   1f800:	ldr	r0, [sp, #16]
   1f804:	add	r2, sp, #56	; 0x38
   1f808:	ldr	r1, [sp, #4]
   1f80c:	bl	1e344 <close_stdout@@Base+0x4100>
   1f810:	cmp	r0, #0
   1f814:	bne	1f898 <close_stdout@@Base+0x5654>
   1f818:	str	r0, [sp, #32]
   1f81c:	ldrb	r3, [sp, #196]	; 0xc4
   1f820:	str	r9, [sp, #28]
   1f824:	b	1f178 <close_stdout@@Base+0x4f34>
   1f828:	str	r4, [sp, #136]	; 0x88
   1f82c:	ldrb	r3, [sl]
   1f830:	strb	r4, [sp, #140]	; 0x8c
   1f834:	str	r3, [sp, #144]	; 0x90
   1f838:	b	1f4d8 <close_stdout@@Base+0x5294>
   1f83c:	ldr	r7, [sp, #312]	; 0x138
   1f840:	mov	r0, r8
   1f844:	strb	r4, [sp, #308]	; 0x134
   1f848:	bl	118b4 <mbsinit@plt>
   1f84c:	cmp	r0, #0
   1f850:	strbne	r5, [sp, #284]	; 0x11c
   1f854:	b	1f324 <close_stdout@@Base+0x50e0>
   1f858:	ldr	r0, [sp, #132]	; 0x84
   1f85c:	mov	r8, #0
   1f860:	bl	11a64 <strlen@plt>
   1f864:	strb	r5, [sp, #140]	; 0x8c
   1f868:	str	r0, [sp, #136]	; 0x88
   1f86c:	b	1f4d8 <close_stdout@@Base+0x5294>
   1f870:	str	r4, [sp, #304]	; 0x130
   1f874:	strb	r7, [sp, #308]	; 0x134
   1f878:	ldr	fp, [sp, #300]	; 0x12c
   1f87c:	b	1f4e4 <close_stdout@@Base+0x52a0>
   1f880:	ldr	fp, [sp, #300]	; 0x12c
   1f884:	mov	r0, fp
   1f888:	bl	11a64 <strlen@plt>
   1f88c:	strb	r7, [sp, #308]	; 0x134
   1f890:	str	r0, [sp, #304]	; 0x130
   1f894:	b	1f4e4 <close_stdout@@Base+0x52a0>
   1f898:	ldr	r0, [sp, #56]	; 0x38
   1f89c:	b	1ee5c <close_stdout@@Base+0x4c18>
   1f8a0:	ldr	r0, [pc, #84]	; 1f8fc <close_stdout@@Base+0x56b8>
   1f8a4:	mov	r2, #150	; 0x96
   1f8a8:	ldr	r1, [pc, #80]	; 1f900 <close_stdout@@Base+0x56bc>
   1f8ac:	ldr	r3, [pc, #80]	; 1f904 <close_stdout@@Base+0x56c0>
   1f8b0:	add	r0, pc, r0
   1f8b4:	add	r1, pc, r1
   1f8b8:	add	r3, pc, r3
   1f8bc:	bl	11c2c <__assert_fail@plt>
   1f8c0:	bl	118e4 <__stack_chk_fail@plt>
   1f8c4:	ldr	r0, [pc, #60]	; 1f908 <close_stdout@@Base+0x56c4>
   1f8c8:	mov	r2, #178	; 0xb2
   1f8cc:	ldr	r1, [pc, #56]	; 1f90c <close_stdout@@Base+0x56c8>
   1f8d0:	ldr	r3, [pc, #56]	; 1f910 <close_stdout@@Base+0x56cc>
   1f8d4:	add	r0, pc, r0
   1f8d8:	add	r1, pc, r1
   1f8dc:	add	r3, pc, r3
   1f8e0:	bl	11c2c <__assert_fail@plt>
   1f8e4:	andeq	r8, r1, r8, lsl #7
   1f8e8:	andeq	r0, r0, ip, lsl #3
   1f8ec:	andeq	r0, r0, r8, lsl #3
   1f8f0:	andeq	r7, r0, r0, lsr r1
   1f8f4:	andeq	r7, r0, r4, lsl #2
   1f8f8:	andeq	r7, r0, r4, lsl #11
   1f8fc:	andeq	r6, r0, r0, lsr #24
   1f900:	andeq	r6, r0, r4, lsr ip
   1f904:	strheq	r7, [r0], -r4
   1f908:	andeq	r6, r0, r4, lsr #24
   1f90c:	andeq	r6, r0, r0, lsl ip
   1f910:	muleq	r0, r0, r0
   1f914:	ldr	ip, [pc, #852]	; 1fc70 <close_stdout@@Base+0x5a2c>
   1f918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f91c:	mov	r6, r2
   1f920:	sub	sp, sp, #4160	; 0x1040
   1f924:	ldr	r2, [pc, #840]	; 1fc74 <close_stdout@@Base+0x5a30>
   1f928:	sub	sp, sp, #4
   1f92c:	add	ip, pc, ip
   1f930:	mov	r5, #0
   1f934:	movw	fp, #61424	; 0xeff0
   1f938:	str	r0, [sp, #24]
   1f93c:	mov	r0, r6
   1f940:	str	r1, [sp, #16]
   1f944:	mov	r1, r5
   1f948:	str	r3, [sp, #32]
   1f94c:	mov	r3, r5
   1f950:	ldr	r2, [ip, r2]
   1f954:	add	ip, sp, #8192	; 0x2000
   1f958:	str	r5, [sp]
   1f95c:	movt	fp, #65535	; 0xffff
   1f960:	ldr	ip, [ip, #-3992]	; 0xfffff068
   1f964:	str	r2, [sp, #20]
   1f968:	mov	r2, r5
   1f96c:	ldr	lr, [sp, #20]
   1f970:	str	ip, [sp, #28]
   1f974:	ldr	ip, [lr]
   1f978:	add	lr, sp, #8192	; 0x2000
   1f97c:	str	ip, [lr, #-4036]	; 0xfffff03c
   1f980:	bl	11818 <iconv@plt>
   1f984:	ldr	ip, [sp, #16]
   1f988:	add	lr, sp, #4160	; 0x1040
   1f98c:	movw	r3, #61420	; 0xefec
   1f990:	cmp	ip, r5
   1f994:	ldr	ip, [sp, #24]
   1f998:	movt	r3, #65535	; 0xffff
   1f99c:	str	ip, [lr, r3]
   1f9a0:	ldr	ip, [sp, #16]
   1f9a4:	str	ip, [lr, fp]
   1f9a8:	beq	1fc4c <close_stdout@@Base+0x5a08>
   1f9ac:	movw	r9, #61432	; 0xeff8
   1f9b0:	movt	r9, #65535	; 0xffff
   1f9b4:	movw	sl, #61428	; 0xeff4
   1f9b8:	movt	sl, #65535	; 0xffff
   1f9bc:	mov	r3, r9
   1f9c0:	add	ip, sp, #64	; 0x40
   1f9c4:	mov	r9, sl
   1f9c8:	str	ip, [sp, #36]	; 0x24
   1f9cc:	add	r4, sp, #60	; 0x3c
   1f9d0:	add	ip, sp, #44	; 0x2c
   1f9d4:	add	r7, sp, #52	; 0x34
   1f9d8:	str	ip, [sp, #8]
   1f9dc:	add	r8, sp, #56	; 0x38
   1f9e0:	add	ip, sp, #48	; 0x30
   1f9e4:	mov	sl, r3
   1f9e8:	str	ip, [sp, #12]
   1f9ec:	b	1fa0c <close_stdout@@Base+0x57c8>
   1f9f0:	add	lr, sp, #4160	; 0x1040
   1f9f4:	ldr	r2, [lr, fp]
   1f9f8:	ldr	r3, [lr, r9]
   1f9fc:	cmp	r2, #0
   1fa00:	rsb	r3, r4, r3
   1fa04:	add	r5, r5, r3
   1fa08:	beq	1fa54 <close_stdout@@Base+0x5810>
   1fa0c:	add	lr, sp, #4160	; 0x1040
   1fa10:	str	r8, [sp]
   1fa14:	mov	ip, #4096	; 0x1000
   1fa18:	mov	r0, r6
   1fa1c:	add	r1, sp, #44	; 0x2c
   1fa20:	add	r2, sp, #48	; 0x30
   1fa24:	mov	r3, r7
   1fa28:	str	r4, [lr, r9]
   1fa2c:	str	ip, [lr, sl]
   1fa30:	bl	11818 <iconv@plt>
   1fa34:	cmn	r0, #1
   1fa38:	bne	1f9f0 <close_stdout@@Base+0x57ac>
   1fa3c:	bl	11aa0 <__errno_location@plt>
   1fa40:	ldr	r3, [r0]
   1fa44:	cmp	r3, #7
   1fa48:	beq	1f9f0 <close_stdout@@Base+0x57ac>
   1fa4c:	cmp	r3, #22
   1fa50:	bne	1fc44 <close_stdout@@Base+0x5a00>
   1fa54:	add	lr, sp, #4160	; 0x1040
   1fa58:	movw	r9, #61428	; 0xeff4
   1fa5c:	movw	r3, #61432	; 0xeff8
   1fa60:	movt	r9, #65535	; 0xffff
   1fa64:	movt	r3, #65535	; 0xffff
   1fa68:	mov	r1, #0
   1fa6c:	str	r8, [sp]
   1fa70:	mov	ip, #4096	; 0x1000
   1fa74:	mov	r2, r1
   1fa78:	str	ip, [lr, r3]
   1fa7c:	mov	r0, r6
   1fa80:	str	r4, [lr, r9]
   1fa84:	mov	r3, r7
   1fa88:	bl	11818 <iconv@plt>
   1fa8c:	cmn	r0, #1
   1fa90:	beq	1fc44 <close_stdout@@Base+0x5a00>
   1fa94:	add	r0, sp, #4160	; 0x1040
   1fa98:	ldr	r3, [r0, r9]
   1fa9c:	rsb	r4, r4, r3
   1faa0:	adds	r5, r5, r4
   1faa4:	beq	1fbf4 <close_stdout@@Base+0x59b0>
   1faa8:	ldr	ip, [sp, #32]
   1faac:	ldr	r4, [ip]
   1fab0:	cmp	r4, #0
   1fab4:	beq	1fbd0 <close_stdout@@Base+0x598c>
   1fab8:	ldr	ip, [sp, #28]
   1fabc:	ldr	r3, [ip]
   1fac0:	cmp	r5, r3
   1fac4:	bhi	1fbd0 <close_stdout@@Base+0x598c>
   1fac8:	mov	r3, #0
   1facc:	mov	r0, r6
   1fad0:	mov	r1, r3
   1fad4:	mov	r2, r3
   1fad8:	str	r3, [sp]
   1fadc:	movw	sl, #61424	; 0xeff0
   1fae0:	bl	11818 <iconv@plt>
   1fae4:	ldr	ip, [sp, #24]
   1fae8:	add	lr, sp, #4160	; 0x1040
   1faec:	movw	r3, #61420	; 0xefec
   1faf0:	movt	r3, #65535	; 0xffff
   1faf4:	movt	sl, #65535	; 0xffff
   1faf8:	movw	r1, #61428	; 0xeff4
   1fafc:	movw	r2, #61432	; 0xeff8
   1fb00:	str	ip, [lr, r3]
   1fb04:	movt	r1, #65535	; 0xffff
   1fb08:	ldr	ip, [sp, #16]
   1fb0c:	movt	r2, #65535	; 0xffff
   1fb10:	str	r4, [lr, r1]
   1fb14:	str	r5, [lr, r2]
   1fb18:	str	ip, [lr, sl]
   1fb1c:	mov	r3, ip
   1fb20:	ldr	ip, [sp, #36]	; 0x24
   1fb24:	sub	fp, ip, #20
   1fb28:	sub	r9, ip, #16
   1fb2c:	b	1fb58 <close_stdout@@Base+0x5914>
   1fb30:	str	r8, [sp]
   1fb34:	mov	r0, r6
   1fb38:	mov	r1, fp
   1fb3c:	mov	r2, r9
   1fb40:	mov	r3, r7
   1fb44:	bl	11818 <iconv@plt>
   1fb48:	cmn	r0, #1
   1fb4c:	beq	1fc04 <close_stdout@@Base+0x59c0>
   1fb50:	add	lr, sp, #4160	; 0x1040
   1fb54:	ldr	r3, [lr, sl]
   1fb58:	cmp	r3, #0
   1fb5c:	bne	1fb30 <close_stdout@@Base+0x58ec>
   1fb60:	mov	r1, #0
   1fb64:	str	r8, [sp]
   1fb68:	mov	r0, r6
   1fb6c:	mov	r3, r7
   1fb70:	mov	r2, r1
   1fb74:	bl	11818 <iconv@plt>
   1fb78:	cmn	r0, #1
   1fb7c:	beq	1fc14 <close_stdout@@Base+0x59d0>
   1fb80:	movw	r3, #61432	; 0xeff8
   1fb84:	add	r0, sp, #4160	; 0x1040
   1fb88:	movt	r3, #65535	; 0xffff
   1fb8c:	ldr	r3, [r0, r3]
   1fb90:	cmp	r3, #0
   1fb94:	bne	1fc68 <close_stdout@@Base+0x5a24>
   1fb98:	ldr	ip, [sp, #32]
   1fb9c:	str	r4, [ip]
   1fba0:	ldr	ip, [sp, #28]
   1fba4:	str	r5, [ip]
   1fba8:	ldr	ip, [sp, #20]
   1fbac:	add	r0, sp, #8192	; 0x2000
   1fbb0:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   1fbb4:	mov	r0, r3
   1fbb8:	ldr	r3, [ip]
   1fbbc:	cmp	r2, r3
   1fbc0:	bne	1fc6c <close_stdout@@Base+0x5a28>
   1fbc4:	add	sp, sp, #4160	; 0x1040
   1fbc8:	add	sp, sp, #4
   1fbcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbd0:	mov	r0, r5
   1fbd4:	bl	119e0 <malloc@plt>
   1fbd8:	subs	r4, r0, #0
   1fbdc:	bne	1fac8 <close_stdout@@Base+0x5884>
   1fbe0:	bl	11aa0 <__errno_location@plt>
   1fbe4:	mov	r2, #12
   1fbe8:	mvn	r3, #0
   1fbec:	str	r2, [r0]
   1fbf0:	b	1fba8 <close_stdout@@Base+0x5964>
   1fbf4:	ldr	ip, [sp, #28]
   1fbf8:	mov	r3, r5
   1fbfc:	str	r5, [ip]
   1fc00:	b	1fba8 <close_stdout@@Base+0x5964>
   1fc04:	bl	11aa0 <__errno_location@plt>
   1fc08:	ldr	r3, [r0]
   1fc0c:	cmp	r3, #22
   1fc10:	beq	1fb60 <close_stdout@@Base+0x591c>
   1fc14:	ldr	ip, [sp, #32]
   1fc18:	ldr	r3, [ip]
   1fc1c:	cmp	r3, r4
   1fc20:	beq	1fc44 <close_stdout@@Base+0x5a00>
   1fc24:	bl	11aa0 <__errno_location@plt>
   1fc28:	ldr	r6, [r0]
   1fc2c:	mov	r5, r0
   1fc30:	mov	r0, r4
   1fc34:	bl	11884 <free@plt>
   1fc38:	mvn	r3, #0
   1fc3c:	str	r6, [r5]
   1fc40:	b	1fba8 <close_stdout@@Base+0x5964>
   1fc44:	mvn	r3, #0
   1fc48:	b	1fba8 <close_stdout@@Base+0x5964>
   1fc4c:	add	ip, sp, #64	; 0x40
   1fc50:	add	r4, sp, #60	; 0x3c
   1fc54:	str	ip, [sp, #36]	; 0x24
   1fc58:	add	r7, sp, #52	; 0x34
   1fc5c:	add	r8, sp, #56	; 0x38
   1fc60:	ldr	r5, [sp, #16]
   1fc64:	b	1fa54 <close_stdout@@Base+0x5810>
   1fc68:	bl	11c08 <abort@plt>
   1fc6c:	bl	118e4 <__stack_chk_fail@plt>
   1fc70:	andeq	r7, r1, ip, asr #13
   1fc74:	andeq	r0, r0, ip, lsl #3
   1fc78:	ldr	r3, [pc, #524]	; 1fe8c <close_stdout@@Base+0x5c48>
   1fc7c:	ldr	r2, [pc, #524]	; 1fe90 <close_stdout@@Base+0x5c4c>
   1fc80:	add	r3, pc, r3
   1fc84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc88:	sub	sp, sp, #52	; 0x34
   1fc8c:	ldr	r2, [r3, r2]
   1fc90:	mov	r6, r1
   1fc94:	str	r0, [sp, #28]
   1fc98:	ldr	r3, [r2]
   1fc9c:	str	r2, [sp, #20]
   1fca0:	str	r3, [sp, #44]	; 0x2c
   1fca4:	bl	11a64 <strlen@plt>
   1fca8:	cmp	r0, #4096	; 0x1000
   1fcac:	mov	fp, r0
   1fcb0:	lslcc	fp, r0, #4
   1fcb4:	str	r0, [sp, #32]
   1fcb8:	add	r5, fp, #1
   1fcbc:	mov	r0, r5
   1fcc0:	bl	119e0 <malloc@plt>
   1fcc4:	subs	r4, r0, #0
   1fcc8:	beq	1fe78 <close_stdout@@Base+0x5c34>
   1fccc:	mov	r3, #0
   1fcd0:	add	r2, sp, #32
   1fcd4:	mov	r1, r3
   1fcd8:	str	r2, [sp, #16]
   1fcdc:	str	r3, [sp]
   1fce0:	mov	r2, r3
   1fce4:	mov	r0, r6
   1fce8:	add	sl, sp, #28
   1fcec:	bl	11818 <iconv@plt>
   1fcf0:	add	r8, sp, #36	; 0x24
   1fcf4:	add	r7, sp, #40	; 0x28
   1fcf8:	str	r4, [sp, #36]	; 0x24
   1fcfc:	str	fp, [sp, #40]	; 0x28
   1fd00:	b	1fd64 <close_stdout@@Base+0x5b20>
   1fd04:	bl	11aa0 <__errno_location@plt>
   1fd08:	ldr	r3, [r0]
   1fd0c:	mov	fp, r0
   1fd10:	cmp	r3, #22
   1fd14:	beq	1fde0 <close_stdout@@Base+0x5b9c>
   1fd18:	cmp	r3, #7
   1fd1c:	bne	1fe40 <close_stdout@@Base+0x5bfc>
   1fd20:	lsl	r9, r5, #1
   1fd24:	ldr	r1, [sp, #36]	; 0x24
   1fd28:	cmp	r5, r9
   1fd2c:	rsb	r5, r4, r1
   1fd30:	bcs	1fe38 <close_stdout@@Base+0x5bf4>
   1fd34:	mov	r0, r4
   1fd38:	mov	r1, r9
   1fd3c:	bl	11914 <realloc@plt>
   1fd40:	cmp	r0, #0
   1fd44:	beq	1fe38 <close_stdout@@Base+0x5bf4>
   1fd48:	sub	r1, r9, #1
   1fd4c:	add	r2, r0, r5
   1fd50:	mov	r4, r0
   1fd54:	rsb	r5, r5, r1
   1fd58:	str	r5, [sp, #40]	; 0x28
   1fd5c:	mov	r5, r9
   1fd60:	str	r2, [sp, #36]	; 0x24
   1fd64:	str	r7, [sp]
   1fd68:	mov	r0, r6
   1fd6c:	mov	r1, sl
   1fd70:	add	r2, sp, #32
   1fd74:	mov	r3, r8
   1fd78:	bl	11818 <iconv@plt>
   1fd7c:	cmn	r0, #1
   1fd80:	beq	1fd04 <close_stdout@@Base+0x5ac0>
   1fd84:	b	1fde0 <close_stdout@@Base+0x5b9c>
   1fd88:	bl	11aa0 <__errno_location@plt>
   1fd8c:	ldr	r3, [r0]
   1fd90:	mov	fp, r0
   1fd94:	cmp	r3, #7
   1fd98:	bne	1fe40 <close_stdout@@Base+0x5bfc>
   1fd9c:	lsl	r9, r5, #1
   1fda0:	ldr	r3, [sp, #36]	; 0x24
   1fda4:	cmp	r5, r9
   1fda8:	rsb	r5, r4, r3
   1fdac:	bcs	1fe38 <close_stdout@@Base+0x5bf4>
   1fdb0:	mov	r0, r4
   1fdb4:	mov	r1, r9
   1fdb8:	bl	11914 <realloc@plt>
   1fdbc:	cmp	r0, #0
   1fdc0:	beq	1fe38 <close_stdout@@Base+0x5bf4>
   1fdc4:	sub	r2, r9, #1
   1fdc8:	add	r3, r0, r5
   1fdcc:	mov	r4, r0
   1fdd0:	rsb	r5, r5, r2
   1fdd4:	str	r5, [sp, #40]	; 0x28
   1fdd8:	mov	r5, r9
   1fddc:	str	r3, [sp, #36]	; 0x24
   1fde0:	mov	r1, #0
   1fde4:	str	r7, [sp]
   1fde8:	mov	r2, r1
   1fdec:	mov	r0, r6
   1fdf0:	mov	r3, r8
   1fdf4:	bl	11818 <iconv@plt>
   1fdf8:	cmn	r0, #1
   1fdfc:	beq	1fd88 <close_stdout@@Base+0x5b44>
   1fe00:	ldr	r3, [sp, #36]	; 0x24
   1fe04:	mov	r2, #0
   1fe08:	add	r1, r3, #1
   1fe0c:	str	r1, [sp, #36]	; 0x24
   1fe10:	strb	r2, [r3]
   1fe14:	ldr	r1, [sp, #36]	; 0x24
   1fe18:	rsb	r1, r4, r1
   1fe1c:	cmp	r1, r5
   1fe20:	bcs	1fe58 <close_stdout@@Base+0x5c14>
   1fe24:	mov	r0, r4
   1fe28:	bl	11914 <realloc@plt>
   1fe2c:	cmp	r0, #0
   1fe30:	movne	r4, r0
   1fe34:	b	1fe58 <close_stdout@@Base+0x5c14>
   1fe38:	mov	r3, #12
   1fe3c:	str	r3, [fp]
   1fe40:	mov	r0, r4
   1fe44:	str	r3, [sp, #12]
   1fe48:	bl	11884 <free@plt>
   1fe4c:	ldr	r3, [sp, #12]
   1fe50:	mov	r4, #0
   1fe54:	str	r3, [fp]
   1fe58:	ldr	r1, [sp, #20]
   1fe5c:	mov	r0, r4
   1fe60:	ldr	r2, [sp, #44]	; 0x2c
   1fe64:	ldr	r3, [r1]
   1fe68:	cmp	r2, r3
   1fe6c:	bne	1fe88 <close_stdout@@Base+0x5c44>
   1fe70:	add	sp, sp, #52	; 0x34
   1fe74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe78:	bl	11aa0 <__errno_location@plt>
   1fe7c:	mov	r3, #12
   1fe80:	str	r3, [r0]
   1fe84:	b	1fe58 <close_stdout@@Base+0x5c14>
   1fe88:	bl	118e4 <__stack_chk_fail@plt>
   1fe8c:	andeq	r7, r1, r8, ror r3
   1fe90:	andeq	r0, r0, ip, lsl #3
   1fe94:	push	{r3, r4, r5, r6, r7, lr}
   1fe98:	mov	r4, r0
   1fe9c:	ldrb	r3, [r0]
   1fea0:	mov	r5, r1
   1fea4:	mov	r6, r2
   1fea8:	cmp	r3, #0
   1feac:	beq	1fec4 <close_stdout@@Base+0x5c80>
   1feb0:	mov	r0, r1
   1feb4:	mov	r1, r2
   1feb8:	bl	1dbf8 <close_stdout@@Base+0x39b4>
   1febc:	cmp	r0, #0
   1fec0:	bne	1fee0 <close_stdout@@Base+0x5c9c>
   1fec4:	mov	r0, r4
   1fec8:	bl	11ad0 <__strdup@plt>
   1fecc:	subs	r4, r0, #0
   1fed0:	beq	1ff3c <close_stdout@@Base+0x5cf8>
   1fed4:	mov	r3, r4
   1fed8:	mov	r0, r3
   1fedc:	pop	{r3, r4, r5, r6, r7, pc}
   1fee0:	mov	r1, r5
   1fee4:	mov	r0, r6
   1fee8:	bl	119ec <iconv_open@plt>
   1feec:	cmn	r0, #1
   1fef0:	mov	r5, r0
   1fef4:	beq	1ff54 <close_stdout@@Base+0x5d10>
   1fef8:	mov	r0, r4
   1fefc:	mov	r1, r5
   1ff00:	bl	1fc78 <close_stdout@@Base+0x5a34>
   1ff04:	subs	r4, r0, #0
   1ff08:	beq	1ff5c <close_stdout@@Base+0x5d18>
   1ff0c:	mov	r0, r5
   1ff10:	bl	1180c <iconv_close@plt>
   1ff14:	cmp	r0, #0
   1ff18:	bge	1fed4 <close_stdout@@Base+0x5c90>
   1ff1c:	bl	11aa0 <__errno_location@plt>
   1ff20:	ldr	r6, [r0]
   1ff24:	mov	r5, r0
   1ff28:	mov	r0, r4
   1ff2c:	bl	11884 <free@plt>
   1ff30:	mov	r3, #0
   1ff34:	str	r6, [r5]
   1ff38:	b	1fed8 <close_stdout@@Base+0x5c94>
   1ff3c:	bl	11aa0 <__errno_location@plt>
   1ff40:	mov	r3, r4
   1ff44:	mov	r2, #12
   1ff48:	str	r2, [r0]
   1ff4c:	mov	r0, r3
   1ff50:	pop	{r3, r4, r5, r6, r7, pc}
   1ff54:	mov	r3, #0
   1ff58:	b	1fed8 <close_stdout@@Base+0x5c94>
   1ff5c:	bl	11aa0 <__errno_location@plt>
   1ff60:	ldr	r7, [r0]
   1ff64:	mov	r6, r0
   1ff68:	mov	r0, r5
   1ff6c:	bl	1180c <iconv_close@plt>
   1ff70:	mov	r3, r4
   1ff74:	str	r7, [r6]
   1ff78:	b	1fed8 <close_stdout@@Base+0x5c94>
   1ff7c:	push	{r4, r5, r6, lr}
   1ff80:	sub	sp, sp, #8
   1ff84:	mov	r4, r0
   1ff88:	bl	11b0c <fileno@plt>
   1ff8c:	cmp	r0, #0
   1ff90:	mov	r0, r4
   1ff94:	blt	20010 <close_stdout@@Base+0x5dcc>
   1ff98:	bl	11a04 <__freading@plt>
   1ff9c:	cmp	r0, #0
   1ffa0:	bne	1ffdc <close_stdout@@Base+0x5d98>
   1ffa4:	mov	r0, r4
   1ffa8:	bl	2001c <close_stdout@@Base+0x5dd8>
   1ffac:	cmp	r0, #0
   1ffb0:	beq	2000c <close_stdout@@Base+0x5dc8>
   1ffb4:	bl	11aa0 <__errno_location@plt>
   1ffb8:	ldr	r6, [r0]
   1ffbc:	mov	r5, r0
   1ffc0:	mov	r0, r4
   1ffc4:	bl	11b30 <fclose@plt>
   1ffc8:	cmp	r6, #0
   1ffcc:	mvnne	r0, #0
   1ffd0:	strne	r6, [r5]
   1ffd4:	add	sp, sp, #8
   1ffd8:	pop	{r4, r5, r6, pc}
   1ffdc:	mov	r0, r4
   1ffe0:	bl	11b0c <fileno@plt>
   1ffe4:	mov	r1, #1
   1ffe8:	mov	r2, #0
   1ffec:	mov	r3, #0
   1fff0:	str	r1, [sp]
   1fff4:	bl	11968 <lseek64@plt>
   1fff8:	mvn	r2, #0
   1fffc:	mvn	r3, #0
   20000:	cmp	r1, r3
   20004:	cmpeq	r0, r2
   20008:	bne	1ffa4 <close_stdout@@Base+0x5d60>
   2000c:	mov	r0, r4
   20010:	add	sp, sp, #8
   20014:	pop	{r4, r5, r6, lr}
   20018:	b	11b30 <fclose@plt>
   2001c:	push	{r4, lr}
   20020:	subs	r4, r0, #0
   20024:	sub	sp, sp, #8
   20028:	beq	20038 <close_stdout@@Base+0x5df4>
   2002c:	bl	11a04 <__freading@plt>
   20030:	cmp	r0, #0
   20034:	bne	20048 <close_stdout@@Base+0x5e04>
   20038:	mov	r0, r4
   2003c:	add	sp, sp, #8
   20040:	pop	{r4, lr}
   20044:	b	11830 <fflush@plt>
   20048:	ldr	r3, [r4]
   2004c:	tst	r3, #256	; 0x100
   20050:	beq	20038 <close_stdout@@Base+0x5df4>
   20054:	mov	r3, #1
   20058:	mov	r0, r4
   2005c:	str	r3, [sp]
   20060:	mov	r2, #0
   20064:	mov	r3, #0
   20068:	bl	2007c <close_stdout@@Base+0x5e38>
   2006c:	mov	r0, r4
   20070:	add	sp, sp, #8
   20074:	pop	{r4, lr}
   20078:	b	11830 <fflush@plt>
   2007c:	push	{r4, r5, r6, r7, lr}
   20080:	sub	sp, sp, #20
   20084:	ldmib	r0, {r1, ip}
   20088:	mov	r6, r0
   2008c:	ldr	r4, [sp, #40]	; 0x28
   20090:	cmp	ip, r1
   20094:	beq	200ac <close_stdout@@Base+0x5e68>
   20098:	str	r4, [sp, #40]	; 0x28
   2009c:	mov	r0, r6
   200a0:	add	sp, sp, #20
   200a4:	pop	{r4, r5, r6, r7, lr}
   200a8:	b	11b48 <fseeko64@plt>
   200ac:	ldr	ip, [r0, #20]
   200b0:	ldr	r1, [r0, #16]
   200b4:	cmp	ip, r1
   200b8:	bne	20098 <close_stdout@@Base+0x5e54>
   200bc:	ldr	r7, [r0, #36]	; 0x24
   200c0:	cmp	r7, #0
   200c4:	bne	20098 <close_stdout@@Base+0x5e54>
   200c8:	str	r2, [sp, #12]
   200cc:	mvn	r5, #0
   200d0:	str	r3, [sp, #8]
   200d4:	bl	11b0c <fileno@plt>
   200d8:	str	r4, [sp]
   200dc:	mvn	r4, #0
   200e0:	ldr	r2, [sp, #12]
   200e4:	ldr	r3, [sp, #8]
   200e8:	bl	11968 <lseek64@plt>
   200ec:	mov	r2, r0
   200f0:	mov	r3, r1
   200f4:	cmp	r3, r5
   200f8:	cmpeq	r2, r4
   200fc:	beq	2011c <close_stdout@@Base+0x5ed8>
   20100:	ldr	r1, [r6]
   20104:	mov	r0, r7
   20108:	strd	r2, [r6, #80]	; 0x50
   2010c:	bic	r3, r1, #16
   20110:	str	r3, [r6]
   20114:	add	sp, sp, #20
   20118:	pop	{r4, r5, r6, r7, pc}
   2011c:	mvn	r0, #0
   20120:	b	20114 <close_stdout@@Base+0x5ed0>
   20124:	ldr	r3, [r0]
   20128:	orr	r3, r3, #32
   2012c:	str	r3, [r0]
   20130:	bx	lr
   20134:	ldr	ip, [pc, #3636]	; 20f70 <close_stdout@@Base+0x6d2c>
   20138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2013c:	add	fp, sp, #32
   20140:	ldr	lr, [pc, #3628]	; 20f74 <close_stdout@@Base+0x6d30>
   20144:	sub	sp, sp, #564	; 0x234
   20148:	add	ip, pc, ip
   2014c:	str	r0, [fp, #-504]	; 0xfffffe08
   20150:	sub	r4, fp, #484	; 0x1e4
   20154:	str	r1, [fp, #-536]	; 0xfffffde8
   20158:	mov	r0, r2
   2015c:	ldr	lr, [ip, lr]
   20160:	mov	r5, r2
   20164:	sub	r1, fp, #364	; 0x16c
   20168:	mov	r2, r4
   2016c:	mov	r6, r3
   20170:	ldr	ip, [lr]
   20174:	str	lr, [fp, #-528]	; 0xfffffdf0
   20178:	str	ip, [fp, #-40]	; 0xffffffd8
   2017c:	bl	21404 <close_stdout@@Base+0x71c0>
   20180:	cmp	r0, #0
   20184:	blt	20c74 <close_stdout@@Base+0x6a30>
   20188:	mov	r0, r6
   2018c:	mov	r1, r4
   20190:	bl	212b4 <close_stdout@@Base+0x7070>
   20194:	cmp	r0, #0
   20198:	blt	20d34 <close_stdout@@Base+0x6af0>
   2019c:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   201a0:	ldr	r2, [fp, #-352]	; 0xfffffea0
   201a4:	add	r3, r3, #7
   201a8:	cmp	r3, #6
   201ac:	mvnls	r3, #0
   201b0:	adds	r3, r3, r2
   201b4:	bcs	204d0 <close_stdout@@Base+0x628c>
   201b8:	adds	r0, r3, #6
   201bc:	bcs	204d0 <close_stdout@@Base+0x628c>
   201c0:	cmp	r0, #4000	; 0xfa0
   201c4:	bcs	20c18 <close_stdout@@Base+0x69d4>
   201c8:	add	r3, r3, #20
   201cc:	mov	r1, #0
   201d0:	bic	r3, r3, #7
   201d4:	str	r1, [fp, #-548]	; 0xfffffddc
   201d8:	sub	sp, sp, r3
   201dc:	add	r2, sp, #32
   201e0:	str	r2, [fp, #-512]	; 0xfffffe00
   201e4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   201e8:	sub	r2, fp, #496	; 0x1f0
   201ec:	str	r2, [fp, #-532]	; 0xfffffdec
   201f0:	mov	ip, #0
   201f4:	cmp	r3, #0
   201f8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   201fc:	ldr	r2, [fp, #-504]	; 0xfffffe08
   20200:	mov	r6, ip
   20204:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   20208:	add	r7, r3, #44	; 0x2c
   2020c:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   20210:	str	ip, [fp, #-520]	; 0xfffffdf8
   20214:	ldrne	r4, [r1]
   20218:	ldr	sl, [r7, #-44]	; 0xffffffd4
   2021c:	sub	r3, r7, #44	; 0x2c
   20220:	str	r3, [fp, #-540]	; 0xfffffde4
   20224:	cmp	sl, r5
   20228:	beq	20ae4 <close_stdout@@Base+0x68a0>
   2022c:	rsb	r3, r5, sl
   20230:	adds	r9, r3, r6
   20234:	mvncs	r9, #0
   20238:	cmp	r4, r9
   2023c:	bcs	20a74 <close_stdout@@Base+0x6830>
   20240:	cmp	r4, #0
   20244:	beq	20940 <close_stdout@@Base+0x66fc>
   20248:	blt	20d70 <close_stdout@@Base+0x6b2c>
   2024c:	lsl	r4, r4, #1
   20250:	cmp	r4, r9
   20254:	movcc	r4, r9
   20258:	cmn	r4, #1
   2025c:	beq	20d70 <close_stdout@@Base+0x6b2c>
   20260:	ldr	r1, [fp, #-504]	; 0xfffffe08
   20264:	subs	lr, r2, r1
   20268:	rsbs	r8, lr, #0
   2026c:	adcs	r8, r8, lr
   20270:	cmp	r2, r1
   20274:	cmpne	r2, #0
   20278:	bne	20948 <close_stdout@@Base+0x6704>
   2027c:	mov	r0, r4
   20280:	str	r2, [fp, #-560]	; 0xfffffdd0
   20284:	str	r3, [fp, #-556]	; 0xfffffdd4
   20288:	bl	119e0 <malloc@plt>
   2028c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   20290:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   20294:	mov	sl, r0
   20298:	cmp	sl, #0
   2029c:	beq	20d70 <close_stdout@@Base+0x6b2c>
   202a0:	cmp	r6, #0
   202a4:	moveq	r8, #0
   202a8:	andne	r8, r8, #1
   202ac:	cmp	r8, #0
   202b0:	bne	20ac8 <close_stdout@@Base+0x6884>
   202b4:	add	r0, sl, r6
   202b8:	mov	r1, r5
   202bc:	mov	r2, r3
   202c0:	bl	1189c <memcpy@plt>
   202c4:	ldr	r3, [fp, #-364]	; 0xfffffe94
   202c8:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   202cc:	cmp	r3, r2
   202d0:	beq	20d84 <close_stdout@@Base+0x6b40>
   202d4:	ldrb	r3, [r7, #-8]
   202d8:	cmp	r3, #37	; 0x25
   202dc:	beq	2096c <close_stdout@@Base+0x6728>
   202e0:	ldr	r2, [r7, #-4]
   202e4:	cmn	r2, #1
   202e8:	beq	20c54 <close_stdout@@Base+0x6a10>
   202ec:	cmp	r3, #110	; 0x6e
   202f0:	beq	20a98 <close_stdout@@Base+0x6854>
   202f4:	ldr	r1, [fp, #-480]	; 0xfffffe20
   202f8:	ldr	r3, [r7, #-36]	; 0xffffffdc
   202fc:	ldr	r8, [r1, r2, lsl #4]
   20300:	tst	r3, #1
   20304:	ldr	r1, [fp, #-512]	; 0xfffffe00
   20308:	mov	r2, #37	; 0x25
   2030c:	addeq	r5, r1, #1
   20310:	strb	r2, [r1]
   20314:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   20318:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   2031c:	addne	r5, r2, #2
   20320:	movne	r2, #39	; 0x27
   20324:	strbne	r2, [r1, #1]
   20328:	tst	r3, #2
   2032c:	movne	r2, #45	; 0x2d
   20330:	strbne	r2, [r5]
   20334:	addne	r5, r5, #1
   20338:	tst	r3, #4
   2033c:	movne	r2, #43	; 0x2b
   20340:	strbne	r2, [r5]
   20344:	addne	r5, r5, #1
   20348:	tst	r3, #8
   2034c:	movne	r2, #32
   20350:	strbne	r2, [r5]
   20354:	addne	r5, r5, #1
   20358:	tst	r3, #16
   2035c:	movne	r2, #35	; 0x23
   20360:	strbne	r2, [r5]
   20364:	addne	r5, r5, #1
   20368:	tst	r3, #64	; 0x40
   2036c:	movne	r2, #73	; 0x49
   20370:	strbne	r2, [r5]
   20374:	addne	r5, r5, #1
   20378:	tst	r3, #32
   2037c:	movne	r3, #48	; 0x30
   20380:	strbne	r3, [r5]
   20384:	ldr	r1, [r7, #-32]	; 0xffffffe0
   20388:	addne	r5, r5, #1
   2038c:	ldr	r2, [r7, #-28]	; 0xffffffe4
   20390:	cmp	r1, r2
   20394:	beq	203a8 <close_stdout@@Base+0x6164>
   20398:	rsb	r2, r1, r2
   2039c:	mov	r0, r5
   203a0:	add	r5, r5, r2
   203a4:	bl	1189c <memcpy@plt>
   203a8:	ldr	r1, [r7, #-20]	; 0xffffffec
   203ac:	ldr	r2, [r7, #-16]
   203b0:	cmp	r1, r2
   203b4:	beq	203c8 <close_stdout@@Base+0x6184>
   203b8:	rsb	r2, r1, r2
   203bc:	mov	r0, r5
   203c0:	add	r5, r5, r2
   203c4:	bl	1189c <memcpy@plt>
   203c8:	sub	r3, r8, #7
   203cc:	cmp	r3, #9
   203d0:	bhi	203f8 <close_stdout@@Base+0x61b4>
   203d4:	mov	r2, #1
   203d8:	lsl	r3, r2, r3
   203dc:	movw	r2, #643	; 0x283
   203e0:	and	r2, r3, r2
   203e4:	cmp	r2, #0
   203e8:	beq	20af0 <close_stdout@@Base+0x68ac>
   203ec:	mov	r3, #108	; 0x6c
   203f0:	add	r5, r5, #1
   203f4:	strb	r3, [r5, #-1]
   203f8:	ldrb	r3, [r7, #-8]
   203fc:	mov	r1, #0
   20400:	strb	r1, [r5, #1]
   20404:	strb	r3, [r5]
   20408:	ldr	r3, [r7, #-24]	; 0xffffffe8
   2040c:	cmn	r3, #1
   20410:	beq	20c10 <close_stdout@@Base+0x69cc>
   20414:	ldr	r2, [fp, #-480]	; 0xfffffe20
   20418:	add	r1, r2, r3, lsl #4
   2041c:	ldr	r3, [r2, r3, lsl #4]
   20420:	cmp	r3, #5
   20424:	bne	20c54 <close_stdout@@Base+0x6a10>
   20428:	ldr	r3, [r1, #8]
   2042c:	mov	r6, #1
   20430:	str	r3, [fp, #-492]	; 0xfffffe14
   20434:	ldr	r3, [r7, #-12]
   20438:	cmn	r3, #1
   2043c:	beq	20468 <close_stdout@@Base+0x6224>
   20440:	ldr	r2, [fp, #-480]	; 0xfffffe20
   20444:	add	r1, r2, r3, lsl #4
   20448:	ldr	r3, [r2, r3, lsl #4]
   2044c:	cmp	r3, #5
   20450:	bne	20c54 <close_stdout@@Base+0x6a10>
   20454:	ldr	r2, [r1, #8]
   20458:	sub	r1, fp, #36	; 0x24
   2045c:	add	r3, r1, r6, lsl #2
   20460:	add	r6, r6, #1
   20464:	str	r2, [r3, #-456]	; 0xfffffe38
   20468:	adds	r2, r9, #2
   2046c:	str	r2, [fp, #-524]	; 0xfffffdf4
   20470:	mov	r3, r2
   20474:	mvncs	r3, #0
   20478:	cmp	r4, r3
   2047c:	bcs	205b8 <close_stdout@@Base+0x6374>
   20480:	cmp	r4, #0
   20484:	beq	20530 <close_stdout@@Base+0x62ec>
   20488:	blt	20f5c <close_stdout@@Base+0x6d18>
   2048c:	cmp	r9, r2
   20490:	lsl	r4, r4, #1
   20494:	bls	20540 <close_stdout@@Base+0x62fc>
   20498:	str	sl, [fp, #-560]	; 0xfffffdd0
   2049c:	bl	11aa0 <__errno_location@plt>
   204a0:	str	r0, [fp, #-516]	; 0xfffffdfc
   204a4:	mov	r2, sl
   204a8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   204ac:	cmp	r2, #0
   204b0:	cmpne	r2, r3
   204b4:	bne	20efc <close_stdout@@Base+0x6cb8>
   204b8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   204bc:	cmp	r1, #0
   204c0:	beq	204d0 <close_stdout@@Base+0x628c>
   204c4:	mov	r0, r1
   204c8:	bl	11884 <free@plt>
   204cc:	b	204d8 <close_stdout@@Base+0x6294>
   204d0:	bl	11aa0 <__errno_location@plt>
   204d4:	str	r0, [fp, #-516]	; 0xfffffdfc
   204d8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   204dc:	sub	r3, fp, #348	; 0x15c
   204e0:	cmp	r0, r3
   204e4:	beq	204ec <close_stdout@@Base+0x62a8>
   204e8:	bl	11884 <free@plt>
   204ec:	ldr	r0, [fp, #-480]	; 0xfffffe20
   204f0:	sub	r3, fp, #476	; 0x1dc
   204f4:	cmp	r0, r3
   204f8:	beq	20500 <close_stdout@@Base+0x62bc>
   204fc:	bl	11884 <free@plt>
   20500:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   20504:	mov	r3, #0
   20508:	mov	r2, #12
   2050c:	str	r2, [r1]
   20510:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   20514:	mov	r0, r3
   20518:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2051c:	ldr	r3, [r1]
   20520:	cmp	r2, r3
   20524:	bne	20f58 <close_stdout@@Base+0x6d14>
   20528:	sub	sp, fp, #32
   2052c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20530:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   20534:	cmp	r9, r3
   20538:	bhi	20498 <close_stdout@@Base+0x6254>
   2053c:	mov	r4, #12
   20540:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   20544:	cmp	r3, r4
   20548:	movcs	r4, r3
   2054c:	cmn	r4, #1
   20550:	beq	20498 <close_stdout@@Base+0x6254>
   20554:	ldr	r1, [fp, #-504]	; 0xfffffe08
   20558:	subs	r0, sl, r1
   2055c:	rsbs	r2, r0, #0
   20560:	adcs	r2, r2, r0
   20564:	cmp	sl, r1
   20568:	cmpne	sl, #0
   2056c:	bne	20c38 <close_stdout@@Base+0x69f4>
   20570:	mov	r0, r4
   20574:	str	r2, [fp, #-560]	; 0xfffffdd0
   20578:	bl	119e0 <malloc@plt>
   2057c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   20580:	mov	r3, r0
   20584:	cmp	r3, #0
   20588:	beq	20498 <close_stdout@@Base+0x6254>
   2058c:	cmp	r9, #0
   20590:	moveq	r2, #0
   20594:	andne	r2, r2, #1
   20598:	cmp	r2, #0
   2059c:	moveq	sl, r3
   205a0:	beq	205b8 <close_stdout@@Base+0x6374>
   205a4:	mov	r1, sl
   205a8:	mov	r0, r3
   205ac:	mov	r2, r9
   205b0:	mov	sl, r3
   205b4:	bl	1189c <memcpy@plt>
   205b8:	mov	r2, #0
   205bc:	strb	r2, [sl, r9]
   205c0:	sub	r8, r8, #1
   205c4:	str	r8, [fp, #-508]	; 0xfffffe04
   205c8:	bl	11aa0 <__errno_location@plt>
   205cc:	rsb	ip, r9, r4
   205d0:	str	r5, [fp, #-544]	; 0xfffffde0
   205d4:	mov	r5, ip
   205d8:	ldr	r3, [r0]
   205dc:	str	r0, [fp, #-516]	; 0xfffffdfc
   205e0:	str	r3, [fp, #-552]	; 0xfffffdd8
   205e4:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   205e8:	mvn	r1, #0
   205ec:	cmp	r5, #0
   205f0:	str	r1, [fp, #-496]	; 0xfffffe10
   205f4:	ldr	r1, [fp, #-508]	; 0xfffffe04
   205f8:	mov	r3, #0
   205fc:	movge	r8, r5
   20600:	mvnlt	r8, #-2147483648	; 0x80000000
   20604:	str	r3, [r2]
   20608:	cmp	r1, #16
   2060c:	addls	pc, pc, r1, lsl #2
   20610:	b	20c54 <close_stdout@@Base+0x6a10>
   20614:	b	20b48 <close_stdout@@Base+0x6904>
   20618:	b	20a28 <close_stdout@@Base+0x67e4>
   2061c:	b	20b2c <close_stdout@@Base+0x68e8>
   20620:	b	20b10 <close_stdout@@Base+0x68cc>
   20624:	b	20658 <close_stdout@@Base+0x6414>
   20628:	b	20658 <close_stdout@@Base+0x6414>
   2062c:	b	20658 <close_stdout@@Base+0x6414>
   20630:	b	20658 <close_stdout@@Base+0x6414>
   20634:	b	207b0 <close_stdout@@Base+0x656c>
   20638:	b	207b0 <close_stdout@@Base+0x656c>
   2063c:	b	2080c <close_stdout@@Base+0x65c8>
   20640:	b	2080c <close_stdout@@Base+0x65c8>
   20644:	b	20658 <close_stdout@@Base+0x6414>
   20648:	b	20658 <close_stdout@@Base+0x6414>
   2064c:	b	20658 <close_stdout@@Base+0x6414>
   20650:	b	20658 <close_stdout@@Base+0x6414>
   20654:	b	20658 <close_stdout@@Base+0x6414>
   20658:	ldr	r2, [r7, #-4]
   2065c:	cmp	r6, #1
   20660:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20664:	add	r3, r3, r2, lsl #4
   20668:	ldr	r3, [r3, #8]
   2066c:	beq	20a40 <close_stdout@@Base+0x67fc>
   20670:	cmp	r6, #2
   20674:	bne	20868 <close_stdout@@Base+0x6624>
   20678:	ldr	r2, [fp, #-512]	; 0xfffffe00
   2067c:	add	r0, sl, r9
   20680:	ldr	lr, [fp, #-492]	; 0xfffffe14
   20684:	mov	r1, r8
   20688:	ldr	ip, [fp, #-488]	; 0xfffffe18
   2068c:	str	r2, [sp]
   20690:	mov	r2, #1
   20694:	str	r3, [sp, #12]
   20698:	sub	r3, fp, #496	; 0x1f0
   2069c:	str	lr, [sp, #4]
   206a0:	str	r3, [sp, #16]
   206a4:	mvn	r3, #0
   206a8:	str	ip, [sp, #8]
   206ac:	bl	11c20 <__snprintf_chk@plt>
   206b0:	ldr	r3, [fp, #-496]	; 0xfffffe10
   206b4:	cmp	r3, #0
   206b8:	blt	2089c <close_stdout@@Base+0x6658>
   206bc:	cmp	r8, r3
   206c0:	bls	206d4 <close_stdout@@Base+0x6490>
   206c4:	add	r2, sl, r3
   206c8:	ldrb	r2, [r2, r9]
   206cc:	cmp	r2, #0
   206d0:	bne	20c54 <close_stdout@@Base+0x6a10>
   206d4:	cmp	r0, r3
   206d8:	movle	r0, r3
   206dc:	ble	206e4 <close_stdout@@Base+0x64a0>
   206e0:	str	r0, [fp, #-496]	; 0xfffffe10
   206e4:	add	r3, r0, #1
   206e8:	cmp	r8, r3
   206ec:	bhi	20e84 <close_stdout@@Base+0x6c40>
   206f0:	cmn	r8, #-2147483647	; 0x80000001
   206f4:	beq	20e9c <close_stdout@@Base+0x6c58>
   206f8:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   206fc:	add	r0, r0, r2
   20700:	cmp	r9, r0
   20704:	mvnhi	r0, #0
   20708:	cmp	r4, #0
   2070c:	mvnlt	r0, #0
   20710:	blt	20720 <close_stdout@@Base+0x64dc>
   20714:	lsl	r3, r4, #1
   20718:	cmp	r0, r3
   2071c:	movcc	r0, r3
   20720:	cmp	r4, r0
   20724:	bcs	205e4 <close_stdout@@Base+0x63a0>
   20728:	cmp	r4, #0
   2072c:	beq	20a7c <close_stdout@@Base+0x6838>
   20730:	blt	204a4 <close_stdout@@Base+0x6260>
   20734:	lsl	r4, r4, #1
   20738:	cmp	r4, r0
   2073c:	movcc	r4, r0
   20740:	cmn	r4, #1
   20744:	beq	204a4 <close_stdout@@Base+0x6260>
   20748:	ldr	r3, [fp, #-504]	; 0xfffffe08
   2074c:	subs	r2, sl, r3
   20750:	rsbs	r5, r2, #0
   20754:	adcs	r5, r5, r2
   20758:	cmp	sl, r3
   2075c:	cmpne	sl, #0
   20760:	bne	20a84 <close_stdout@@Base+0x6840>
   20764:	mov	r0, r4
   20768:	bl	119e0 <malloc@plt>
   2076c:	mov	r3, r0
   20770:	cmp	r3, #0
   20774:	beq	204a4 <close_stdout@@Base+0x6260>
   20778:	cmp	r9, #0
   2077c:	moveq	r5, #0
   20780:	andne	r5, r5, #1
   20784:	cmp	r5, #0
   20788:	rsbeq	r5, r9, r4
   2078c:	moveq	sl, r3
   20790:	beq	205e4 <close_stdout@@Base+0x63a0>
   20794:	mov	r1, sl
   20798:	mov	r0, r3
   2079c:	mov	r2, r9
   207a0:	mov	sl, r3
   207a4:	rsb	r5, r9, r4
   207a8:	bl	1189c <memcpy@plt>
   207ac:	b	205e4 <close_stdout@@Base+0x63a0>
   207b0:	ldr	r2, [r7, #-4]
   207b4:	cmp	r6, #1
   207b8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   207bc:	add	r3, r3, r2, lsl #4
   207c0:	ldrd	r2, [r3, #8]
   207c4:	beq	20bdc <close_stdout@@Base+0x6998>
   207c8:	cmp	r6, #2
   207cc:	bne	20cb8 <close_stdout@@Base+0x6a74>
   207d0:	ldr	r1, [fp, #-512]	; 0xfffffe00
   207d4:	add	r0, sl, r9
   207d8:	ldr	lr, [fp, #-492]	; 0xfffffe14
   207dc:	ldr	ip, [fp, #-488]	; 0xfffffe18
   207e0:	strd	r2, [sp, #16]
   207e4:	sub	r2, fp, #496	; 0x1f0
   207e8:	str	r1, [sp]
   207ec:	mvn	r3, #0
   207f0:	str	r2, [sp, #24]
   207f4:	mov	r1, r8
   207f8:	mov	r2, #1
   207fc:	str	lr, [sp, #4]
   20800:	str	ip, [sp, #8]
   20804:	bl	11c20 <__snprintf_chk@plt>
   20808:	b	206b0 <close_stdout@@Base+0x646c>
   2080c:	ldr	r2, [r7, #-4]
   20810:	cmp	r6, #1
   20814:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20818:	add	r3, r3, r2, lsl #4
   2081c:	ldrd	r0, [r3, #8]
   20820:	beq	20ba8 <close_stdout@@Base+0x6964>
   20824:	cmp	r6, #2
   20828:	bne	20c8c <close_stdout@@Base+0x6a48>
   2082c:	ldr	r3, [fp, #-492]	; 0xfffffe14
   20830:	ldr	r2, [fp, #-512]	; 0xfffffe00
   20834:	ldr	lr, [fp, #-488]	; 0xfffffe18
   20838:	strd	r0, [sp, #16]
   2083c:	add	r0, sl, r9
   20840:	str	r2, [sp]
   20844:	mov	r1, r8
   20848:	sub	r2, fp, #496	; 0x1f0
   2084c:	str	r3, [sp, #4]
   20850:	str	r2, [sp, #24]
   20854:	mvn	r3, #0
   20858:	mov	r2, #1
   2085c:	str	lr, [sp, #8]
   20860:	bl	11c20 <__snprintf_chk@plt>
   20864:	b	206b0 <close_stdout@@Base+0x646c>
   20868:	ldr	r1, [fp, #-512]	; 0xfffffe00
   2086c:	sub	r2, fp, #496	; 0x1f0
   20870:	str	r3, [sp, #4]
   20874:	add	r0, sl, r9
   20878:	str	r2, [sp, #8]
   2087c:	mvn	r3, #0
   20880:	str	r1, [sp]
   20884:	mov	r2, #1
   20888:	mov	r1, r8
   2088c:	bl	11c20 <__snprintf_chk@plt>
   20890:	ldr	r3, [fp, #-496]	; 0xfffffe10
   20894:	cmp	r3, #0
   20898:	bge	206bc <close_stdout@@Base+0x6478>
   2089c:	ldr	r1, [fp, #-544]	; 0xfffffde0
   208a0:	ldrb	r3, [r1, #1]
   208a4:	cmp	r3, #0
   208a8:	movne	r2, #0
   208ac:	strbne	r2, [r1, #1]
   208b0:	bne	205e4 <close_stdout@@Base+0x63a0>
   208b4:	cmp	r0, #0
   208b8:	bge	206e0 <close_stdout@@Base+0x649c>
   208bc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   208c0:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   208c4:	cmp	sl, #0
   208c8:	cmpne	r3, sl
   208cc:	ldr	r4, [r1]
   208d0:	bne	20d28 <close_stdout@@Base+0x6ae4>
   208d4:	ldr	r2, [fp, #-548]	; 0xfffffddc
   208d8:	cmp	r2, #0
   208dc:	beq	208e8 <close_stdout@@Base+0x66a4>
   208e0:	mov	r0, r2
   208e4:	bl	11884 <free@plt>
   208e8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   208ec:	sub	r3, fp, #348	; 0x15c
   208f0:	cmp	r0, r3
   208f4:	beq	208fc <close_stdout@@Base+0x66b8>
   208f8:	bl	11884 <free@plt>
   208fc:	ldr	r0, [fp, #-480]	; 0xfffffe20
   20900:	sub	r3, fp, #476	; 0x1dc
   20904:	cmp	r0, r3
   20908:	beq	20910 <close_stdout@@Base+0x66cc>
   2090c:	bl	11884 <free@plt>
   20910:	cmp	r4, #0
   20914:	bne	20930 <close_stdout@@Base+0x66ec>
   20918:	ldr	r3, [fp, #-540]	; 0xfffffde4
   2091c:	ldrb	r4, [r3, #36]	; 0x24
   20920:	and	r4, r4, #239	; 0xef
   20924:	cmp	r4, #99	; 0x63
   20928:	movne	r4, #22
   2092c:	moveq	r4, #84	; 0x54
   20930:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   20934:	mov	r3, #0
   20938:	str	r4, [r1]
   2093c:	b	20510 <close_stdout@@Base+0x62cc>
   20940:	mov	r4, #12
   20944:	b	20250 <close_stdout@@Base+0x600c>
   20948:	mov	r0, r2
   2094c:	mov	r1, r4
   20950:	str	r2, [fp, #-560]	; 0xfffffdd0
   20954:	str	r3, [fp, #-556]	; 0xfffffdd4
   20958:	bl	11914 <realloc@plt>
   2095c:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   20960:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   20964:	mov	sl, r0
   20968:	b	20298 <close_stdout@@Base+0x6054>
   2096c:	ldr	r3, [r7, #-4]
   20970:	cmn	r3, #1
   20974:	bne	20c54 <close_stdout@@Base+0x6a10>
   20978:	adds	r6, r9, #1
   2097c:	mvncs	r6, #0
   20980:	cmp	r4, r6
   20984:	bcs	20a04 <close_stdout@@Base+0x67c0>
   20988:	cmp	r4, #0
   2098c:	beq	20c58 <close_stdout@@Base+0x6a14>
   20990:	blt	20498 <close_stdout@@Base+0x6254>
   20994:	lsl	r4, r4, #1
   20998:	cmp	r4, r6
   2099c:	movcc	r4, r6
   209a0:	cmn	r4, #1
   209a4:	beq	20498 <close_stdout@@Base+0x6254>
   209a8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   209ac:	subs	ip, sl, r3
   209b0:	rsbs	r5, ip, #0
   209b4:	adcs	r5, r5, ip
   209b8:	cmp	sl, r3
   209bc:	cmpne	sl, #0
   209c0:	bne	20c60 <close_stdout@@Base+0x6a1c>
   209c4:	mov	r0, r4
   209c8:	bl	119e0 <malloc@plt>
   209cc:	mov	r3, r0
   209d0:	cmp	r3, #0
   209d4:	beq	20498 <close_stdout@@Base+0x6254>
   209d8:	cmp	r9, #0
   209dc:	moveq	r5, #0
   209e0:	andne	r5, r5, #1
   209e4:	cmp	r5, #0
   209e8:	moveq	sl, r3
   209ec:	beq	20a04 <close_stdout@@Base+0x67c0>
   209f0:	mov	r1, sl
   209f4:	mov	r0, r3
   209f8:	mov	r2, r9
   209fc:	mov	sl, r3
   20a00:	bl	1189c <memcpy@plt>
   20a04:	mov	r2, sl
   20a08:	mov	r1, #37	; 0x25
   20a0c:	strb	r1, [sl, r9]
   20a10:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   20a14:	add	r7, r7, #44	; 0x2c
   20a18:	ldr	r5, [r7, #-84]	; 0xffffffac
   20a1c:	add	r1, r1, #1
   20a20:	str	r1, [fp, #-520]	; 0xfffffdf8
   20a24:	b	20218 <close_stdout@@Base+0x5fd4>
   20a28:	ldr	r2, [r7, #-4]
   20a2c:	cmp	r6, #1
   20a30:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20a34:	add	r3, r3, r2, lsl #4
   20a38:	ldrb	r3, [r3, #8]
   20a3c:	bne	20670 <close_stdout@@Base+0x642c>
   20a40:	ldr	r1, [fp, #-512]	; 0xfffffe00
   20a44:	add	r0, sl, r9
   20a48:	ldr	lr, [fp, #-492]	; 0xfffffe14
   20a4c:	mov	r2, r6
   20a50:	str	r3, [sp, #8]
   20a54:	sub	r3, fp, #496	; 0x1f0
   20a58:	str	r1, [sp]
   20a5c:	mov	r1, r8
   20a60:	str	r3, [sp, #12]
   20a64:	mvn	r3, #0
   20a68:	str	lr, [sp, #4]
   20a6c:	bl	11c20 <__snprintf_chk@plt>
   20a70:	b	206b0 <close_stdout@@Base+0x646c>
   20a74:	mov	sl, r2
   20a78:	b	202b4 <close_stdout@@Base+0x6070>
   20a7c:	mov	r4, #12
   20a80:	b	20738 <close_stdout@@Base+0x64f4>
   20a84:	mov	r0, sl
   20a88:	mov	r1, r4
   20a8c:	bl	11914 <realloc@plt>
   20a90:	mov	r3, r0
   20a94:	b	20770 <close_stdout@@Base+0x652c>
   20a98:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20a9c:	add	r1, r3, r2, lsl #4
   20aa0:	ldr	r3, [r3, r2, lsl #4]
   20aa4:	sub	r3, r3, #18
   20aa8:	cmp	r3, #4
   20aac:	addls	pc, pc, r3, lsl #2
   20ab0:	b	20c54 <close_stdout@@Base+0x6a10>
   20ab4:	b	20ce4 <close_stdout@@Base+0x6aa0>
   20ab8:	b	20cf8 <close_stdout@@Base+0x6ab4>
   20abc:	b	20b94 <close_stdout@@Base+0x6950>
   20ac0:	b	20b94 <close_stdout@@Base+0x6950>
   20ac4:	b	20d0c <close_stdout@@Base+0x6ac8>
   20ac8:	mov	r1, r2
   20acc:	mov	r0, sl
   20ad0:	mov	r2, r6
   20ad4:	str	r3, [fp, #-556]	; 0xfffffdd4
   20ad8:	bl	1189c <memcpy@plt>
   20adc:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   20ae0:	b	202b4 <close_stdout@@Base+0x6070>
   20ae4:	mov	r9, r6
   20ae8:	mov	sl, r2
   20aec:	b	202c4 <close_stdout@@Base+0x6080>
   20af0:	tst	r3, #32
   20af4:	bne	20c7c <close_stdout@@Base+0x6a38>
   20af8:	tst	r3, #12
   20afc:	beq	203f8 <close_stdout@@Base+0x61b4>
   20b00:	mov	r3, #108	; 0x6c
   20b04:	add	r5, r5, #1
   20b08:	strb	r3, [r5, #-1]
   20b0c:	b	203ec <close_stdout@@Base+0x61a8>
   20b10:	ldr	r2, [r7, #-4]
   20b14:	cmp	r6, #1
   20b18:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20b1c:	add	r3, r3, r2, lsl #4
   20b20:	ldrh	r3, [r3, #8]
   20b24:	bne	20670 <close_stdout@@Base+0x642c>
   20b28:	b	20a40 <close_stdout@@Base+0x67fc>
   20b2c:	ldr	r2, [r7, #-4]
   20b30:	cmp	r6, #1
   20b34:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20b38:	add	r3, r3, r2, lsl #4
   20b3c:	ldrsh	r3, [r3, #8]
   20b40:	bne	20670 <close_stdout@@Base+0x642c>
   20b44:	b	20a40 <close_stdout@@Base+0x67fc>
   20b48:	ldr	r2, [r7, #-4]
   20b4c:	cmp	r6, #1
   20b50:	ldr	r3, [fp, #-480]	; 0xfffffe20
   20b54:	add	r3, r3, r2, lsl #4
   20b58:	ldrsb	r3, [r3, #8]
   20b5c:	beq	20a40 <close_stdout@@Base+0x67fc>
   20b60:	cmp	r6, #2
   20b64:	beq	20678 <close_stdout@@Base+0x6434>
   20b68:	ldr	r2, [fp, #-512]	; 0xfffffe00
   20b6c:	add	r0, sl, r9
   20b70:	str	r3, [sp, #4]
   20b74:	mov	r1, r8
   20b78:	sub	r3, fp, #496	; 0x1f0
   20b7c:	str	r3, [sp, #8]
   20b80:	str	r2, [sp]
   20b84:	mvn	r3, #0
   20b88:	mov	r2, #1
   20b8c:	bl	11c20 <__snprintf_chk@plt>
   20b90:	b	206b0 <close_stdout@@Base+0x646c>
   20b94:	ldr	r3, [r1, #8]
   20b98:	mov	r2, sl
   20b9c:	mov	r6, r9
   20ba0:	str	r9, [r3]
   20ba4:	b	20a10 <close_stdout@@Base+0x67cc>
   20ba8:	ldr	r3, [fp, #-492]	; 0xfffffe14
   20bac:	ldr	r2, [fp, #-512]	; 0xfffffe00
   20bb0:	strd	r0, [sp, #8]
   20bb4:	sub	r1, fp, #496	; 0x1f0
   20bb8:	str	r3, [sp, #4]
   20bbc:	add	r0, sl, r9
   20bc0:	str	r2, [sp]
   20bc4:	mvn	r3, #0
   20bc8:	str	r1, [sp, #16]
   20bcc:	mov	r2, r6
   20bd0:	mov	r1, r8
   20bd4:	bl	11c20 <__snprintf_chk@plt>
   20bd8:	b	206b0 <close_stdout@@Base+0x646c>
   20bdc:	ldr	r1, [fp, #-512]	; 0xfffffe00
   20be0:	add	r0, sl, r9
   20be4:	ldr	lr, [fp, #-492]	; 0xfffffe14
   20be8:	strd	r2, [sp, #8]
   20bec:	sub	r3, fp, #496	; 0x1f0
   20bf0:	str	r1, [sp]
   20bf4:	mov	r2, r6
   20bf8:	str	r3, [sp, #16]
   20bfc:	mov	r1, r8
   20c00:	mvn	r3, #0
   20c04:	str	lr, [sp, #4]
   20c08:	bl	11c20 <__snprintf_chk@plt>
   20c0c:	b	206b0 <close_stdout@@Base+0x646c>
   20c10:	mov	r6, #0
   20c14:	b	20434 <close_stdout@@Base+0x61f0>
   20c18:	cmn	r0, #1
   20c1c:	beq	204d0 <close_stdout@@Base+0x628c>
   20c20:	bl	119e0 <malloc@plt>
   20c24:	cmp	r0, #0
   20c28:	str	r0, [fp, #-512]	; 0xfffffe00
   20c2c:	beq	204d0 <close_stdout@@Base+0x628c>
   20c30:	str	r0, [fp, #-548]	; 0xfffffddc
   20c34:	b	201e4 <close_stdout@@Base+0x5fa0>
   20c38:	mov	r0, sl
   20c3c:	mov	r1, r4
   20c40:	str	r2, [fp, #-560]	; 0xfffffdd0
   20c44:	bl	11914 <realloc@plt>
   20c48:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   20c4c:	mov	r3, r0
   20c50:	b	20584 <close_stdout@@Base+0x6340>
   20c54:	bl	11c08 <abort@plt>
   20c58:	mov	r4, #12
   20c5c:	b	20998 <close_stdout@@Base+0x6754>
   20c60:	mov	r0, sl
   20c64:	mov	r1, r4
   20c68:	bl	11914 <realloc@plt>
   20c6c:	mov	r3, r0
   20c70:	b	209d0 <close_stdout@@Base+0x678c>
   20c74:	mov	r3, #0
   20c78:	b	20510 <close_stdout@@Base+0x62cc>
   20c7c:	mov	r3, #76	; 0x4c
   20c80:	add	r5, r5, #1
   20c84:	strb	r3, [r5, #-1]
   20c88:	b	203f8 <close_stdout@@Base+0x61b4>
   20c8c:	ldr	r3, [fp, #-512]	; 0xfffffe00
   20c90:	mov	r2, #1
   20c94:	strd	r0, [sp, #8]
   20c98:	sub	r1, fp, #496	; 0x1f0
   20c9c:	add	r0, sl, r9
   20ca0:	str	r1, [sp, #16]
   20ca4:	str	r3, [sp]
   20ca8:	mov	r1, r8
   20cac:	mvn	r3, #0
   20cb0:	bl	11c20 <__snprintf_chk@plt>
   20cb4:	b	206b0 <close_stdout@@Base+0x646c>
   20cb8:	ldr	r1, [fp, #-512]	; 0xfffffe00
   20cbc:	add	r0, sl, r9
   20cc0:	strd	r2, [sp, #8]
   20cc4:	sub	r2, fp, #496	; 0x1f0
   20cc8:	mvn	r3, #0
   20ccc:	str	r2, [sp, #16]
   20cd0:	str	r1, [sp]
   20cd4:	mov	r2, #1
   20cd8:	mov	r1, r8
   20cdc:	bl	11c20 <__snprintf_chk@plt>
   20ce0:	b	206b0 <close_stdout@@Base+0x646c>
   20ce4:	ldr	r3, [r1, #8]
   20ce8:	mov	r2, sl
   20cec:	mov	r6, r9
   20cf0:	strb	r9, [r3]
   20cf4:	b	20a10 <close_stdout@@Base+0x67cc>
   20cf8:	ldr	r3, [r1, #8]
   20cfc:	mov	r2, sl
   20d00:	mov	r6, r9
   20d04:	strh	r9, [r3]
   20d08:	b	20a10 <close_stdout@@Base+0x67cc>
   20d0c:	ldr	r3, [r1, #8]
   20d10:	mov	r2, sl
   20d14:	mov	r1, #0
   20d18:	mov	r6, r9
   20d1c:	str	r9, [r3]
   20d20:	str	r1, [r3, #4]
   20d24:	b	20a10 <close_stdout@@Base+0x67cc>
   20d28:	mov	r0, sl
   20d2c:	bl	11884 <free@plt>
   20d30:	b	208d4 <close_stdout@@Base+0x6690>
   20d34:	ldr	r0, [fp, #-360]	; 0xfffffe98
   20d38:	sub	r3, fp, #348	; 0x15c
   20d3c:	cmp	r0, r3
   20d40:	beq	20d48 <close_stdout@@Base+0x6b04>
   20d44:	bl	11884 <free@plt>
   20d48:	ldr	r0, [fp, #-480]	; 0xfffffe20
   20d4c:	sub	r3, fp, #476	; 0x1dc
   20d50:	cmp	r0, r3
   20d54:	beq	20d5c <close_stdout@@Base+0x6b18>
   20d58:	bl	11884 <free@plt>
   20d5c:	bl	11aa0 <__errno_location@plt>
   20d60:	mov	r2, #22
   20d64:	mov	r3, #0
   20d68:	str	r2, [r0]
   20d6c:	b	20510 <close_stdout@@Base+0x62cc>
   20d70:	str	r2, [fp, #-560]	; 0xfffffdd0
   20d74:	bl	11aa0 <__errno_location@plt>
   20d78:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   20d7c:	str	r0, [fp, #-516]	; 0xfffffdfc
   20d80:	b	204a8 <close_stdout@@Base+0x6264>
   20d84:	adds	r5, r9, #1
   20d88:	movcc	r3, r5
   20d8c:	mvncs	r3, #0
   20d90:	cmp	r3, r4
   20d94:	bls	20e1c <close_stdout@@Base+0x6bd8>
   20d98:	cmp	r4, #0
   20d9c:	moveq	r4, #12
   20da0:	beq	20dac <close_stdout@@Base+0x6b68>
   20da4:	lslge	r4, r4, #1
   20da8:	mvnlt	r4, #0
   20dac:	cmp	r5, r9
   20db0:	movcs	r3, r5
   20db4:	mvncc	r3, #0
   20db8:	cmp	r4, r3
   20dbc:	bcs	20dcc <close_stdout@@Base+0x6b88>
   20dc0:	cmp	r5, r9
   20dc4:	bcc	20498 <close_stdout@@Base+0x6254>
   20dc8:	mov	r4, r5
   20dcc:	cmn	r4, #1
   20dd0:	beq	20498 <close_stdout@@Base+0x6254>
   20dd4:	ldr	r2, [fp, #-504]	; 0xfffffe08
   20dd8:	subs	r3, sl, r2
   20ddc:	rsbs	r6, r3, #0
   20de0:	adcs	r6, r6, r3
   20de4:	cmp	sl, r2
   20de8:	cmpne	sl, #0
   20dec:	bne	20f2c <close_stdout@@Base+0x6ce8>
   20df0:	mov	r0, r4
   20df4:	bl	119e0 <malloc@plt>
   20df8:	mov	r3, r0
   20dfc:	cmp	r3, #0
   20e00:	beq	20498 <close_stdout@@Base+0x6254>
   20e04:	cmp	r9, #0
   20e08:	moveq	r6, #0
   20e0c:	andne	r6, r6, #1
   20e10:	cmp	r6, #0
   20e14:	moveq	sl, r3
   20e18:	bne	20f40 <close_stdout@@Base+0x6cfc>
   20e1c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   20e20:	cmp	sl, r3
   20e24:	mov	r3, #0
   20e28:	strb	r3, [sl, r9]
   20e2c:	beq	20e38 <close_stdout@@Base+0x6bf4>
   20e30:	cmp	r4, r5
   20e34:	bhi	20f14 <close_stdout@@Base+0x6cd0>
   20e38:	ldr	r1, [fp, #-548]	; 0xfffffddc
   20e3c:	cmp	r1, #0
   20e40:	beq	20e4c <close_stdout@@Base+0x6c08>
   20e44:	mov	r0, r1
   20e48:	bl	11884 <free@plt>
   20e4c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   20e50:	sub	r3, fp, #348	; 0x15c
   20e54:	cmp	r0, r3
   20e58:	beq	20e60 <close_stdout@@Base+0x6c1c>
   20e5c:	bl	11884 <free@plt>
   20e60:	ldr	r0, [fp, #-480]	; 0xfffffe20
   20e64:	sub	r3, fp, #476	; 0x1dc
   20e68:	cmp	r0, r3
   20e6c:	beq	20e74 <close_stdout@@Base+0x6c30>
   20e70:	bl	11884 <free@plt>
   20e74:	ldr	r2, [fp, #-536]	; 0xfffffde8
   20e78:	mov	r3, sl
   20e7c:	str	r9, [r2]
   20e80:	b	20510 <close_stdout@@Base+0x62cc>
   20e84:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   20e88:	add	r6, r0, r9
   20e8c:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   20e90:	str	r1, [r2]
   20e94:	mov	r2, sl
   20e98:	b	20a10 <close_stdout@@Base+0x67cc>
   20e9c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   20ea0:	cmp	sl, #0
   20ea4:	cmpne	sl, r3
   20ea8:	bne	20f08 <close_stdout@@Base+0x6cc4>
   20eac:	ldr	r3, [fp, #-548]	; 0xfffffddc
   20eb0:	cmp	r3, #0
   20eb4:	beq	20ec0 <close_stdout@@Base+0x6c7c>
   20eb8:	mov	r0, r3
   20ebc:	bl	11884 <free@plt>
   20ec0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   20ec4:	sub	r3, fp, #348	; 0x15c
   20ec8:	cmp	r0, r3
   20ecc:	beq	20ed4 <close_stdout@@Base+0x6c90>
   20ed0:	bl	11884 <free@plt>
   20ed4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   20ed8:	sub	r3, fp, #476	; 0x1dc
   20edc:	cmp	r0, r3
   20ee0:	beq	20ee8 <close_stdout@@Base+0x6ca4>
   20ee4:	bl	11884 <free@plt>
   20ee8:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   20eec:	mov	r2, #75	; 0x4b
   20ef0:	mov	r3, #0
   20ef4:	str	r2, [r1]
   20ef8:	b	20510 <close_stdout@@Base+0x62cc>
   20efc:	mov	r0, r2
   20f00:	bl	11884 <free@plt>
   20f04:	b	204b8 <close_stdout@@Base+0x6274>
   20f08:	mov	r0, sl
   20f0c:	bl	11884 <free@plt>
   20f10:	b	20eac <close_stdout@@Base+0x6c68>
   20f14:	mov	r0, sl
   20f18:	mov	r1, r5
   20f1c:	bl	11914 <realloc@plt>
   20f20:	cmp	r0, #0
   20f24:	movne	sl, r0
   20f28:	b	20e38 <close_stdout@@Base+0x6bf4>
   20f2c:	mov	r0, sl
   20f30:	mov	r1, r4
   20f34:	bl	11914 <realloc@plt>
   20f38:	mov	r3, r0
   20f3c:	b	20dfc <close_stdout@@Base+0x6bb8>
   20f40:	mov	r1, sl
   20f44:	mov	r0, r3
   20f48:	mov	r2, r9
   20f4c:	mov	sl, r3
   20f50:	bl	1189c <memcpy@plt>
   20f54:	b	20e1c <close_stdout@@Base+0x6bd8>
   20f58:	bl	118e4 <__stack_chk_fail@plt>
   20f5c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   20f60:	cmp	r9, r2
   20f64:	bhi	20498 <close_stdout@@Base+0x6254>
   20f68:	mvn	r4, #0
   20f6c:	b	20540 <close_stdout@@Base+0x62fc>
   20f70:			; <UNDEFINED> instruction: 0x00016eb0
   20f74:	andeq	r0, r0, ip, lsl #3
   20f78:	adds	r0, r0, #8
   20f7c:	push	{r3, r4, r5, lr}
   20f80:	bcs	20fd4 <close_stdout@@Base+0x6d90>
   20f84:	bl	119e0 <malloc@plt>
   20f88:	subs	r1, r0, #0
   20f8c:	beq	20fd4 <close_stdout@@Base+0x6d90>
   20f90:	add	r2, r1, #8
   20f94:	movw	r3, #65281	; 0xff01
   20f98:	movt	r3, #65280	; 0xff00
   20f9c:	ldr	ip, [pc, #56]	; 20fdc <close_stdout@@Base+0x6d98>
   20fa0:	movw	r4, #64330	; 0xfb4a
   20fa4:	movt	r4, #5141	; 0x1415
   20fa8:	umull	r5, r3, r3, r2
   20fac:	add	ip, pc, ip
   20fb0:	str	r4, [r1, #4]
   20fb4:	mov	r0, r2
   20fb8:	lsr	r3, r3, #8
   20fbc:	add	r3, r3, r3, lsl #8
   20fc0:	rsb	r3, r3, r2
   20fc4:	ldr	r4, [ip, r3, lsl #2]
   20fc8:	str	r2, [ip, r3, lsl #2]
   20fcc:	str	r4, [r1]
   20fd0:	pop	{r3, r4, r5, pc}
   20fd4:	mov	r0, #0
   20fd8:	pop	{r3, r4, r5, pc}
   20fdc:	andeq	r6, r1, ip, lsr #7
   20fe0:	cmp	r0, #0
   20fe4:	bxeq	lr
   20fe8:	ldr	r2, [r0, #-4]
   20fec:	movw	r3, #64330	; 0xfb4a
   20ff0:	movt	r3, #5141	; 0x1415
   20ff4:	cmp	r2, r3
   20ff8:	bxne	lr
   20ffc:	movw	r3, #65281	; 0xff01
   21000:	movt	r3, #65280	; 0xff00
   21004:	ldr	r1, [pc, #88]	; 21064 <close_stdout@@Base+0x6e20>
   21008:	umull	r2, r3, r3, r0
   2100c:	add	r1, pc, r1
   21010:	lsr	r3, r3, #8
   21014:	add	r3, r3, r3, lsl #8
   21018:	rsb	r3, r3, r0
   2101c:	ldr	r2, [r1, r3, lsl #2]
   21020:	cmp	r2, #0
   21024:	bxeq	lr
   21028:	cmp	r0, r2
   2102c:	addeq	r2, r1, r3, lsl #2
   21030:	bne	21044 <close_stdout@@Base+0x6e00>
   21034:	b	21058 <close_stdout@@Base+0x6e14>
   21038:	cmp	r0, r3
   2103c:	beq	21054 <close_stdout@@Base+0x6e10>
   21040:	mov	r2, r3
   21044:	ldr	r3, [r2, #-8]
   21048:	cmp	r3, #0
   2104c:	bne	21038 <close_stdout@@Base+0x6df4>
   21050:	bx	lr
   21054:	sub	r2, r2, #8
   21058:	ldr	ip, [r0, #-8]!
   2105c:	str	ip, [r2]
   21060:	b	11884 <free@plt>
   21064:	andeq	r6, r1, ip, asr #6
   21068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2106c:	sub	sp, sp, #76	; 0x4c
   21070:	ldr	r8, [pc, #524]	; 21284 <close_stdout@@Base+0x7040>
   21074:	mov	sl, r0
   21078:	ldr	r3, [pc, #520]	; 21288 <close_stdout@@Base+0x7044>
   2107c:	add	r8, pc, r8
   21080:	ldr	r3, [r8, r3]
   21084:	str	r3, [sp, #4]
   21088:	ldr	r3, [r3]
   2108c:	str	r3, [sp, #68]	; 0x44
   21090:	bl	11980 <__ctype_get_mb_cur_max@plt>
   21094:	cmp	r0, #1
   21098:	bls	21234 <close_stdout@@Base+0x6ff0>
   2109c:	mov	r3, #0
   210a0:	add	r7, sp, #16
   210a4:	add	r9, sp, #40	; 0x28
   210a8:	mov	fp, r3
   210ac:	mov	r4, sl
   210b0:	mov	r6, r3
   210b4:	mov	r5, #1
   210b8:	str	r3, [sp, #16]
   210bc:	strb	r3, [sp, #24]
   210c0:	str	sl, [sp, #28]
   210c4:	strb	r3, [sp, #12]
   210c8:	str	r3, [r7, #4]
   210cc:	ldrb	r2, [sp, #12]
   210d0:	cmp	r2, #0
   210d4:	bne	2114c <close_stdout@@Base+0x6f08>
   210d8:	ldr	r2, [pc, #428]	; 2128c <close_stdout@@Base+0x7048>
   210dc:	ldrb	r3, [r4]
   210e0:	ldr	r1, [r8, r2]
   210e4:	and	r2, r3, #31
   210e8:	lsr	r3, r3, #5
   210ec:	ldr	r3, [r1, r3, lsl #2]
   210f0:	lsr	r3, r3, r2
   210f4:	tst	r3, #1
   210f8:	beq	21138 <close_stdout@@Base+0x6ef4>
   210fc:	str	r5, [sp, #32]
   21100:	ldrb	r4, [r4]
   21104:	strb	r5, [sp, #36]	; 0x24
   21108:	cmp	r4, #0
   2110c:	strb	r5, [sp, #24]
   21110:	str	r4, [sp, #40]	; 0x28
   21114:	bne	211b0 <close_stdout@@Base+0x6f6c>
   21118:	mov	r0, fp
   2111c:	ldr	r1, [sp, #4]
   21120:	ldr	r2, [sp, #68]	; 0x44
   21124:	ldr	r3, [r1]
   21128:	cmp	r2, r3
   2112c:	bne	21260 <close_stdout@@Base+0x701c>
   21130:	add	sp, sp, #76	; 0x4c
   21134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21138:	mov	r0, r7
   2113c:	bl	118b4 <mbsinit@plt>
   21140:	cmp	r0, #0
   21144:	beq	21240 <close_stdout@@Base+0x6ffc>
   21148:	strb	r5, [sp, #12]
   2114c:	bl	11980 <__ctype_get_mb_cur_max@plt>
   21150:	mov	r1, r0
   21154:	mov	r0, r4
   21158:	bl	1cc84 <close_stdout@@Base+0x2a40>
   2115c:	mov	r1, r4
   21160:	mov	r3, r7
   21164:	mov	r2, r0
   21168:	mov	r0, r9
   2116c:	bl	119a4 <mbrtowc@plt>
   21170:	cmn	r0, #1
   21174:	str	r0, [sp, #32]
   21178:	beq	211cc <close_stdout@@Base+0x6f88>
   2117c:	cmn	r0, #2
   21180:	beq	2121c <close_stdout@@Base+0x6fd8>
   21184:	cmp	r0, #0
   21188:	beq	211dc <close_stdout@@Base+0x6f98>
   2118c:	ldr	r4, [sp, #40]	; 0x28
   21190:	mov	r0, r7
   21194:	strb	r5, [sp, #36]	; 0x24
   21198:	bl	118b4 <mbsinit@plt>
   2119c:	strb	r5, [sp, #24]
   211a0:	cmp	r0, #0
   211a4:	strbne	r6, [sp, #12]
   211a8:	cmp	r4, #0
   211ac:	beq	21118 <close_stdout@@Base+0x6ed4>
   211b0:	ldr	r4, [sp, #28]
   211b4:	ldr	r3, [sp, #32]
   211b8:	add	fp, fp, #1
   211bc:	strb	r6, [sp, #24]
   211c0:	add	r4, r4, r3
   211c4:	str	r4, [sp, #28]
   211c8:	b	210cc <close_stdout@@Base+0x6e88>
   211cc:	str	r5, [sp, #32]
   211d0:	strb	r6, [sp, #36]	; 0x24
   211d4:	ldr	r4, [sp, #28]
   211d8:	b	211b4 <close_stdout@@Base+0x6f70>
   211dc:	ldr	r4, [sp, #28]
   211e0:	str	r5, [sp, #32]
   211e4:	ldrb	r3, [r4]
   211e8:	cmp	r3, #0
   211ec:	bne	21264 <close_stdout@@Base+0x7020>
   211f0:	ldr	r4, [sp, #40]	; 0x28
   211f4:	cmp	r4, #0
   211f8:	beq	21190 <close_stdout@@Base+0x6f4c>
   211fc:	ldr	r0, [pc, #140]	; 21290 <close_stdout@@Base+0x704c>
   21200:	mov	r2, #179	; 0xb3
   21204:	ldr	r1, [pc, #136]	; 21294 <close_stdout@@Base+0x7050>
   21208:	ldr	r3, [pc, #136]	; 21298 <close_stdout@@Base+0x7054>
   2120c:	add	r0, pc, r0
   21210:	add	r1, pc, r1
   21214:	add	r3, pc, r3
   21218:	bl	11c2c <__assert_fail@plt>
   2121c:	ldr	r4, [sp, #28]
   21220:	mov	r0, r4
   21224:	bl	11a64 <strlen@plt>
   21228:	strb	r6, [sp, #36]	; 0x24
   2122c:	str	r0, [sp, #32]
   21230:	b	211b4 <close_stdout@@Base+0x6f70>
   21234:	mov	r0, sl
   21238:	bl	11a64 <strlen@plt>
   2123c:	b	2111c <close_stdout@@Base+0x6ed8>
   21240:	ldr	r0, [pc, #84]	; 2129c <close_stdout@@Base+0x7058>
   21244:	mov	r2, #150	; 0x96
   21248:	ldr	r1, [pc, #80]	; 212a0 <close_stdout@@Base+0x705c>
   2124c:	ldr	r3, [pc, #80]	; 212a4 <close_stdout@@Base+0x7060>
   21250:	add	r0, pc, r0
   21254:	add	r1, pc, r1
   21258:	add	r3, pc, r3
   2125c:	bl	11c2c <__assert_fail@plt>
   21260:	bl	118e4 <__stack_chk_fail@plt>
   21264:	ldr	r0, [pc, #60]	; 212a8 <close_stdout@@Base+0x7064>
   21268:	mov	r2, #178	; 0xb2
   2126c:	ldr	r1, [pc, #56]	; 212ac <close_stdout@@Base+0x7068>
   21270:	ldr	r3, [pc, #56]	; 212b0 <close_stdout@@Base+0x706c>
   21274:	add	r0, pc, r0
   21278:	add	r1, pc, r1
   2127c:	add	r3, pc, r3
   21280:	bl	11c2c <__assert_fail@plt>
   21284:	andeq	r5, r1, ip, ror pc
   21288:	andeq	r0, r0, ip, lsl #3
   2128c:	andeq	r0, r0, r8, lsl #3
   21290:	andeq	r5, r0, r4, lsl #6
   21294:	ldrdeq	r5, [r0], -r8
   21298:	andeq	r5, r0, ip, ror #14
   2129c:	andeq	r5, r0, r0, lsl #5
   212a0:	muleq	r0, r4, r2
   212a4:	andeq	r5, r0, r8, lsr #14
   212a8:	andeq	r5, r0, r4, lsl #5
   212ac:	andeq	r5, r0, r0, ror r2
   212b0:	andeq	r5, r0, r4, lsl #14
   212b4:	push	{r4, r5, r6}
   212b8:	ldm	r1, {r3, ip}
   212bc:	cmp	r3, #0
   212c0:	beq	21368 <close_stdout@@Base+0x7124>
   212c4:	ldr	r6, [pc, #304]	; 213fc <close_stdout@@Base+0x71b8>
   212c8:	add	ip, ip, #16
   212cc:	ldr	r5, [pc, #300]	; 21400 <close_stdout@@Base+0x71bc>
   212d0:	mov	r4, #0
   212d4:	add	r6, pc, r6
   212d8:	add	r5, pc, r5
   212dc:	ldr	r3, [ip, #-16]
   212e0:	sub	r3, r3, #1
   212e4:	cmp	r3, #21
   212e8:	addls	pc, pc, r3, lsl #2
   212ec:	b	213f4 <close_stdout@@Base+0x71b0>
   212f0:	b	213b4 <close_stdout@@Base+0x7170>
   212f4:	b	213b4 <close_stdout@@Base+0x7170>
   212f8:	b	213a4 <close_stdout@@Base+0x7160>
   212fc:	b	213a4 <close_stdout@@Base+0x7160>
   21300:	b	21348 <close_stdout@@Base+0x7104>
   21304:	b	21348 <close_stdout@@Base+0x7104>
   21308:	b	21348 <close_stdout@@Base+0x7104>
   2130c:	b	21348 <close_stdout@@Base+0x7104>
   21310:	b	21374 <close_stdout@@Base+0x7130>
   21314:	b	21374 <close_stdout@@Base+0x7130>
   21318:	b	2138c <close_stdout@@Base+0x7148>
   2131c:	b	2138c <close_stdout@@Base+0x7148>
   21320:	b	21348 <close_stdout@@Base+0x7104>
   21324:	b	21348 <close_stdout@@Base+0x7104>
   21328:	b	213c4 <close_stdout@@Base+0x7180>
   2132c:	b	213dc <close_stdout@@Base+0x7198>
   21330:	b	21348 <close_stdout@@Base+0x7104>
   21334:	b	21348 <close_stdout@@Base+0x7104>
   21338:	b	21348 <close_stdout@@Base+0x7104>
   2133c:	b	21348 <close_stdout@@Base+0x7104>
   21340:	b	21348 <close_stdout@@Base+0x7104>
   21344:	b	21348 <close_stdout@@Base+0x7104>
   21348:	ldr	r3, [r0]
   2134c:	add	r0, r0, #4
   21350:	str	r3, [ip, #-8]
   21354:	ldr	r3, [r1]
   21358:	add	r4, r4, #1
   2135c:	add	ip, ip, #16
   21360:	cmp	r3, r4
   21364:	bhi	212dc <close_stdout@@Base+0x7098>
   21368:	mov	r0, #0
   2136c:	pop	{r4, r5, r6}
   21370:	bx	lr
   21374:	add	r3, r0, #7
   21378:	bic	r3, r3, #7
   2137c:	add	r0, r3, #8
   21380:	ldrd	r2, [r3]
   21384:	strd	r2, [ip, #-8]
   21388:	b	21354 <close_stdout@@Base+0x7110>
   2138c:	add	r0, r0, #7
   21390:	bic	r0, r0, #7
   21394:	add	r0, r0, #8
   21398:	ldrd	r2, [r0, #-8]
   2139c:	strd	r2, [ip, #-8]
   213a0:	b	21354 <close_stdout@@Base+0x7110>
   213a4:	ldr	r3, [r0]
   213a8:	add	r0, r0, #4
   213ac:	strh	r3, [ip, #-8]
   213b0:	b	21354 <close_stdout@@Base+0x7110>
   213b4:	ldr	r3, [r0]
   213b8:	add	r0, r0, #4
   213bc:	strb	r3, [ip, #-8]
   213c0:	b	21354 <close_stdout@@Base+0x7110>
   213c4:	ldr	r3, [r0]
   213c8:	add	r0, r0, #4
   213cc:	cmp	r3, #0
   213d0:	str	r3, [ip, #-8]
   213d4:	streq	r5, [ip, #-8]
   213d8:	b	21354 <close_stdout@@Base+0x7110>
   213dc:	ldr	r3, [r0]
   213e0:	add	r0, r0, #4
   213e4:	cmp	r3, #0
   213e8:	str	r3, [ip, #-8]
   213ec:	streq	r6, [ip, #-8]
   213f0:	b	21354 <close_stdout@@Base+0x7110>
   213f4:	mvn	r0, #0
   213f8:	b	2136c <close_stdout@@Base+0x7128>
   213fc:	andeq	r5, r0, r0, asr #13
   21400:	ldrdeq	r5, [r0], -r8
   21404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21408:	mov	r7, r1
   2140c:	sub	sp, sp, #44	; 0x2c
   21410:	mov	r5, r2
   21414:	movw	sl, #39321	; 0x9999
   21418:	mov	r2, r7
   2141c:	movt	sl, #6553	; 0x1999
   21420:	mov	r3, #0
   21424:	str	r3, [r2], #16
   21428:	mov	r1, #7
   2142c:	str	r2, [r7, #4]
   21430:	mov	r9, r0
   21434:	str	r2, [sp, #16]
   21438:	mov	r2, r5
   2143c:	str	r3, [r2], #8
   21440:	mov	r6, r3
   21444:	str	r2, [r5, #4]
   21448:	movw	r0, #29789	; 0x745d
   2144c:	str	r3, [sp, #8]
   21450:	movt	r0, #1489	; 0x5d1
   21454:	str	r1, [sp, #20]
   21458:	mov	ip, sl
   2145c:	str	r3, [sp, #24]
   21460:	str	r3, [sp, #36]	; 0x24
   21464:	mov	r3, #7
   21468:	str	r2, [sp, #12]
   2146c:	str	r3, [sp, #28]
   21470:	ldr	r1, [r7]
   21474:	ldr	r3, [r7, #4]
   21478:	str	r0, [sp, #32]
   2147c:	b	21488 <close_stdout@@Base+0x7244>
   21480:	cmp	r0, #37	; 0x25
   21484:	beq	214c8 <close_stdout@@Base+0x7284>
   21488:	mov	r8, r9
   2148c:	ldrb	r0, [r9], #1
   21490:	cmp	r0, #0
   21494:	mov	r2, r9
   21498:	bne	21480 <close_stdout@@Base+0x723c>
   2149c:	mov	r4, #44	; 0x2c
   214a0:	mov	r2, r0
   214a4:	mul	r1, r4, r1
   214a8:	str	r8, [r3, r1]
   214ac:	ldr	r3, [sp, #24]
   214b0:	str	r3, [r7, #8]
   214b4:	ldr	r3, [sp, #8]
   214b8:	str	r3, [r7, #12]
   214bc:	mov	r0, r2
   214c0:	add	sp, sp, #44	; 0x2c
   214c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   214c8:	mov	r0, #44	; 0x2c
   214cc:	mul	r1, r0, r1
   214d0:	add	r4, r3, r1
   214d4:	str	r8, [r3, r1]
   214d8:	mvn	r1, #0
   214dc:	str	r6, [r4, #8]
   214e0:	str	r1, [r4, #20]
   214e4:	str	r1, [r4, #32]
   214e8:	str	r1, [r4, #40]	; 0x28
   214ec:	str	r6, [r4, #12]
   214f0:	str	r6, [r4, #16]
   214f4:	str	r6, [r4, #24]
   214f8:	str	r6, [r4, #28]
   214fc:	ldrb	r3, [r8, #1]
   21500:	sub	sl, r3, #48	; 0x30
   21504:	uxtb	r1, sl
   21508:	cmp	r1, #9
   2150c:	bls	218a0 <close_stdout@@Base+0x765c>
   21510:	mvn	r8, #0
   21514:	b	21558 <close_stdout@@Base+0x7314>
   21518:	cmp	r3, #45	; 0x2d
   2151c:	beq	21574 <close_stdout@@Base+0x7330>
   21520:	cmp	r3, #43	; 0x2b
   21524:	beq	21584 <close_stdout@@Base+0x7340>
   21528:	cmp	r3, #32
   2152c:	beq	21594 <close_stdout@@Base+0x7350>
   21530:	cmp	r3, #35	; 0x23
   21534:	beq	215a4 <close_stdout@@Base+0x7360>
   21538:	cmp	r3, #48	; 0x30
   2153c:	beq	215b4 <close_stdout@@Base+0x7370>
   21540:	cmp	r3, #73	; 0x49
   21544:	bne	215c4 <close_stdout@@Base+0x7380>
   21548:	ldr	r3, [r4, #8]
   2154c:	orr	r3, r3, #64	; 0x40
   21550:	str	r3, [r4, #8]
   21554:	ldrb	r3, [r2, #1]!
   21558:	cmp	r3, #39	; 0x27
   2155c:	mov	r9, r2
   21560:	bne	21518 <close_stdout@@Base+0x72d4>
   21564:	ldr	r3, [r4, #8]
   21568:	orr	r3, r3, #1
   2156c:	str	r3, [r4, #8]
   21570:	b	21554 <close_stdout@@Base+0x7310>
   21574:	ldr	r3, [r4, #8]
   21578:	orr	r3, r3, #2
   2157c:	str	r3, [r4, #8]
   21580:	b	21554 <close_stdout@@Base+0x7310>
   21584:	ldr	r3, [r4, #8]
   21588:	orr	r3, r3, #4
   2158c:	str	r3, [r4, #8]
   21590:	b	21554 <close_stdout@@Base+0x7310>
   21594:	ldr	r3, [r4, #8]
   21598:	orr	r3, r3, #8
   2159c:	str	r3, [r4, #8]
   215a0:	b	21554 <close_stdout@@Base+0x7310>
   215a4:	ldr	r3, [r4, #8]
   215a8:	orr	r3, r3, #16
   215ac:	str	r3, [r4, #8]
   215b0:	b	21554 <close_stdout@@Base+0x7310>
   215b4:	ldr	r3, [r4, #8]
   215b8:	orr	r3, r3, #32
   215bc:	str	r3, [r4, #8]
   215c0:	b	21554 <close_stdout@@Base+0x7310>
   215c4:	cmp	r3, #42	; 0x2a
   215c8:	beq	21a3c <close_stdout@@Base+0x77f8>
   215cc:	sub	r1, r3, #48	; 0x30
   215d0:	uxtb	r1, r1
   215d4:	cmp	r1, #9
   215d8:	bls	21918 <close_stdout@@Base+0x76d4>
   215dc:	cmp	r3, #46	; 0x2e
   215e0:	beq	2196c <close_stdout@@Base+0x7728>
   215e4:	mov	sl, #0
   215e8:	mov	r0, #1
   215ec:	b	215f8 <close_stdout@@Base+0x73b4>
   215f0:	ldrb	r3, [r2, #1]
   215f4:	add	r9, r9, #1
   215f8:	cmp	r3, #104	; 0x68
   215fc:	mov	r2, r9
   21600:	andeq	r3, sl, #1
   21604:	orreq	sl, sl, r0, lsl r3
   21608:	beq	215f0 <close_stdout@@Base+0x73ac>
   2160c:	cmp	r3, #76	; 0x4c
   21610:	orreq	sl, sl, #4
   21614:	beq	215f0 <close_stdout@@Base+0x73ac>
   21618:	cmp	r3, #108	; 0x6c
   2161c:	addeq	sl, sl, #8
   21620:	beq	215f0 <close_stdout@@Base+0x73ac>
   21624:	cmp	r3, #106	; 0x6a
   21628:	addeq	sl, sl, #16
   2162c:	beq	215f0 <close_stdout@@Base+0x73ac>
   21630:	and	r1, r3, #223	; 0xdf
   21634:	cmp	r1, #90	; 0x5a
   21638:	beq	215f0 <close_stdout@@Base+0x73ac>
   2163c:	cmp	r3, #116	; 0x74
   21640:	beq	215f0 <close_stdout@@Base+0x73ac>
   21644:	sub	r2, r3, #37	; 0x25
   21648:	add	r9, r9, #1
   2164c:	mov	fp, r3
   21650:	cmp	r2, #83	; 0x53
   21654:	addls	pc, pc, r2, lsl #2
   21658:	b	21d7c <close_stdout@@Base+0x7b38>
   2165c:	b	2180c <close_stdout@@Base+0x75c8>
   21660:	b	21d7c <close_stdout@@Base+0x7b38>
   21664:	b	21d7c <close_stdout@@Base+0x7b38>
   21668:	b	21d7c <close_stdout@@Base+0x7b38>
   2166c:	b	21d7c <close_stdout@@Base+0x7b38>
   21670:	b	21d7c <close_stdout@@Base+0x7b38>
   21674:	b	21d7c <close_stdout@@Base+0x7b38>
   21678:	b	21d7c <close_stdout@@Base+0x7b38>
   2167c:	b	21d7c <close_stdout@@Base+0x7b38>
   21680:	b	21d7c <close_stdout@@Base+0x7b38>
   21684:	b	21d7c <close_stdout@@Base+0x7b38>
   21688:	b	21d7c <close_stdout@@Base+0x7b38>
   2168c:	b	21d7c <close_stdout@@Base+0x7b38>
   21690:	b	21d7c <close_stdout@@Base+0x7b38>
   21694:	b	21d7c <close_stdout@@Base+0x7b38>
   21698:	b	21d7c <close_stdout@@Base+0x7b38>
   2169c:	b	21d7c <close_stdout@@Base+0x7b38>
   216a0:	b	21d7c <close_stdout@@Base+0x7b38>
   216a4:	b	21d7c <close_stdout@@Base+0x7b38>
   216a8:	b	21d7c <close_stdout@@Base+0x7b38>
   216ac:	b	21d7c <close_stdout@@Base+0x7b38>
   216b0:	b	21d7c <close_stdout@@Base+0x7b38>
   216b4:	b	21d7c <close_stdout@@Base+0x7b38>
   216b8:	b	21d7c <close_stdout@@Base+0x7b38>
   216bc:	b	21d7c <close_stdout@@Base+0x7b38>
   216c0:	b	21d7c <close_stdout@@Base+0x7b38>
   216c4:	b	21d7c <close_stdout@@Base+0x7b38>
   216c8:	b	21d7c <close_stdout@@Base+0x7b38>
   216cc:	b	21b58 <close_stdout@@Base+0x7914>
   216d0:	b	21d7c <close_stdout@@Base+0x7b38>
   216d4:	b	21b7c <close_stdout@@Base+0x7938>
   216d8:	b	21d7c <close_stdout@@Base+0x7b38>
   216dc:	b	21b58 <close_stdout@@Base+0x7914>
   216e0:	b	21b58 <close_stdout@@Base+0x7914>
   216e4:	b	21b58 <close_stdout@@Base+0x7914>
   216e8:	b	21d7c <close_stdout@@Base+0x7b38>
   216ec:	b	21d7c <close_stdout@@Base+0x7b38>
   216f0:	b	21d7c <close_stdout@@Base+0x7b38>
   216f4:	b	21d7c <close_stdout@@Base+0x7b38>
   216f8:	b	21d7c <close_stdout@@Base+0x7b38>
   216fc:	b	21d7c <close_stdout@@Base+0x7b38>
   21700:	b	21d7c <close_stdout@@Base+0x7b38>
   21704:	b	21d7c <close_stdout@@Base+0x7b38>
   21708:	b	21d7c <close_stdout@@Base+0x7b38>
   2170c:	b	21d7c <close_stdout@@Base+0x7b38>
   21710:	b	21d7c <close_stdout@@Base+0x7b38>
   21714:	b	21b88 <close_stdout@@Base+0x7944>
   21718:	b	21d7c <close_stdout@@Base+0x7b38>
   2171c:	b	21d7c <close_stdout@@Base+0x7b38>
   21720:	b	21d7c <close_stdout@@Base+0x7b38>
   21724:	b	21d7c <close_stdout@@Base+0x7b38>
   21728:	b	21b94 <close_stdout@@Base+0x7950>
   2172c:	b	21d7c <close_stdout@@Base+0x7b38>
   21730:	b	21d7c <close_stdout@@Base+0x7b38>
   21734:	b	21d7c <close_stdout@@Base+0x7b38>
   21738:	b	21d7c <close_stdout@@Base+0x7b38>
   2173c:	b	21d7c <close_stdout@@Base+0x7b38>
   21740:	b	21d7c <close_stdout@@Base+0x7b38>
   21744:	b	21d7c <close_stdout@@Base+0x7b38>
   21748:	b	21d7c <close_stdout@@Base+0x7b38>
   2174c:	b	21b58 <close_stdout@@Base+0x7914>
   21750:	b	21d7c <close_stdout@@Base+0x7b38>
   21754:	b	21c1c <close_stdout@@Base+0x79d8>
   21758:	b	21bd8 <close_stdout@@Base+0x7994>
   2175c:	b	21b58 <close_stdout@@Base+0x7914>
   21760:	b	21b58 <close_stdout@@Base+0x7914>
   21764:	b	21b58 <close_stdout@@Base+0x7914>
   21768:	b	21d7c <close_stdout@@Base+0x7b38>
   2176c:	b	21bd8 <close_stdout@@Base+0x7994>
   21770:	b	21d7c <close_stdout@@Base+0x7b38>
   21774:	b	21d7c <close_stdout@@Base+0x7b38>
   21778:	b	21d7c <close_stdout@@Base+0x7b38>
   2177c:	b	21d7c <close_stdout@@Base+0x7b38>
   21780:	b	21c2c <close_stdout@@Base+0x79e8>
   21784:	b	21b94 <close_stdout@@Base+0x7950>
   21788:	b	217ac <close_stdout@@Base+0x7568>
   2178c:	b	21d7c <close_stdout@@Base+0x7b38>
   21790:	b	21d7c <close_stdout@@Base+0x7b38>
   21794:	b	21b48 <close_stdout@@Base+0x7904>
   21798:	b	21d7c <close_stdout@@Base+0x7b38>
   2179c:	b	21b94 <close_stdout@@Base+0x7950>
   217a0:	b	21d7c <close_stdout@@Base+0x7b38>
   217a4:	b	21d7c <close_stdout@@Base+0x7b38>
   217a8:	b	21b94 <close_stdout@@Base+0x7950>
   217ac:	mov	sl, #17
   217b0:	cmn	r8, #1
   217b4:	strne	r8, [r4, #40]	; 0x28
   217b8:	beq	21ed8 <close_stdout@@Base+0x7c94>
   217bc:	ldr	r3, [sp, #20]
   217c0:	cmp	r3, r8
   217c4:	bls	21e04 <close_stdout@@Base+0x7bc0>
   217c8:	ldr	r0, [r5, #4]
   217cc:	ldr	r3, [r5]
   217d0:	cmp	r3, r8
   217d4:	bhi	217f4 <close_stdout@@Base+0x75b0>
   217d8:	add	r2, r3, #1
   217dc:	str	r2, [r5]
   217e0:	str	r6, [r0, r3, lsl #4]
   217e4:	ldr	r3, [r5]
   217e8:	ldr	r0, [r5, #4]
   217ec:	cmp	r3, r8
   217f0:	bls	217d8 <close_stdout@@Base+0x7594>
   217f4:	ldr	r3, [r0, r8, lsl #4]
   217f8:	cmp	r3, #0
   217fc:	streq	sl, [r0, r8, lsl #4]
   21800:	beq	2180c <close_stdout@@Base+0x75c8>
   21804:	cmp	sl, r3
   21808:	bne	21d80 <close_stdout@@Base+0x7b3c>
   2180c:	strb	fp, [r4, #36]	; 0x24
   21810:	str	r9, [r4, #4]
   21814:	ldr	r1, [r7]
   21818:	ldr	r3, [sp, #28]
   2181c:	add	r1, r1, #1
   21820:	str	r1, [r7]
   21824:	cmp	r3, r1
   21828:	bhi	21910 <close_stdout@@Base+0x76cc>
   2182c:	ldr	r3, [sp, #28]
   21830:	cmp	r3, #0
   21834:	blt	219fc <close_stdout@@Base+0x77b8>
   21838:	ldr	r3, [sp, #28]
   2183c:	ldr	r0, [sp, #32]
   21840:	lsl	r3, r3, #1
   21844:	str	r3, [sp, #28]
   21848:	cmp	r3, r0
   2184c:	bhi	219fc <close_stdout@@Base+0x77b8>
   21850:	mov	r2, #44	; 0x2c
   21854:	ldr	r0, [r7, #4]
   21858:	mul	r1, r2, r3
   2185c:	ldr	r3, [sp, #16]
   21860:	cmp	r3, r0
   21864:	beq	21ef8 <close_stdout@@Base+0x7cb4>
   21868:	str	ip, [sp, #4]
   2186c:	bl	11914 <realloc@plt>
   21870:	ldr	ip, [sp, #4]
   21874:	mov	r4, r0
   21878:	cmp	r4, #0
   2187c:	beq	219fc <close_stdout@@Base+0x77b8>
   21880:	ldr	r3, [r7, #4]
   21884:	ldr	r0, [sp, #16]
   21888:	cmp	r0, r3
   2188c:	beq	21fb4 <close_stdout@@Base+0x7d70>
   21890:	ldr	r1, [r7]
   21894:	mov	r3, r4
   21898:	str	r4, [r7, #4]
   2189c:	b	21488 <close_stdout@@Base+0x7244>
   218a0:	mov	r0, r9
   218a4:	ldrb	r1, [r0, #1]!
   218a8:	sub	r8, r1, #48	; 0x30
   218ac:	cmp	r8, #9
   218b0:	bls	218a4 <close_stdout@@Base+0x7660>
   218b4:	cmp	r1, #36	; 0x24
   218b8:	bne	21510 <close_stdout@@Base+0x72cc>
   218bc:	mov	r8, #0
   218c0:	b	218c8 <close_stdout@@Base+0x7684>
   218c4:	mov	r9, r2
   218c8:	add	r3, r8, r8, lsl #2
   218cc:	cmp	r8, ip
   218d0:	mvn	r8, #0
   218d4:	add	r2, r9, #1
   218d8:	lslls	r8, r3, #1
   218dc:	adds	r8, r8, sl
   218e0:	ldrb	sl, [r9, #1]
   218e4:	sub	sl, sl, #48	; 0x30
   218e8:	mvncs	r8, #0
   218ec:	uxtb	r3, sl
   218f0:	cmp	r3, #9
   218f4:	bls	218c4 <close_stdout@@Base+0x7680>
   218f8:	sub	r8, r8, #1
   218fc:	cmn	r8, #3
   21900:	bhi	21d7c <close_stdout@@Base+0x7b38>
   21904:	add	r2, r2, #1
   21908:	ldrb	r3, [r9, #2]
   2190c:	b	21558 <close_stdout@@Base+0x7314>
   21910:	ldr	r3, [r7, #4]
   21914:	b	21488 <close_stdout@@Base+0x7244>
   21918:	str	r2, [r4, #12]
   2191c:	ldrb	r3, [r2]
   21920:	sub	r3, r3, #48	; 0x30
   21924:	cmp	r3, #9
   21928:	bhi	21fac <close_stdout@@Base+0x7d68>
   2192c:	add	r3, r2, #1
   21930:	mov	r9, r3
   21934:	add	r3, r3, #1
   21938:	ldrb	r1, [r9]
   2193c:	sub	r1, r1, #48	; 0x30
   21940:	cmp	r1, #9
   21944:	bls	21930 <close_stdout@@Base+0x76ec>
   21948:	rsb	r2, r2, r9
   2194c:	ldr	r3, [sp, #24]
   21950:	str	r9, [r4, #16]
   21954:	cmp	r3, r2
   21958:	movcc	r3, r2
   2195c:	str	r3, [sp, #24]
   21960:	ldrb	r3, [r9]
   21964:	cmp	r3, #46	; 0x2e
   21968:	bne	215e4 <close_stdout@@Base+0x73a0>
   2196c:	ldrb	r3, [r9, #1]
   21970:	str	r9, [r4, #24]
   21974:	cmp	r3, #42	; 0x2a
   21978:	beq	21c64 <close_stdout@@Base+0x7a20>
   2197c:	ldrb	r3, [r9, #1]
   21980:	add	r2, r9, #1
   21984:	sub	r3, r3, #48	; 0x30
   21988:	cmp	r3, #9
   2198c:	bhi	219ac <close_stdout@@Base+0x7768>
   21990:	add	r3, r9, #2
   21994:	mov	r2, r3
   21998:	add	r3, r3, #1
   2199c:	ldrb	r1, [r2]
   219a0:	sub	r1, r1, #48	; 0x30
   219a4:	cmp	r1, #9
   219a8:	bls	21994 <close_stdout@@Base+0x7750>
   219ac:	ldr	r0, [sp, #8]
   219b0:	rsb	r9, r9, r2
   219b4:	str	r2, [r4, #28]
   219b8:	cmp	r0, r9
   219bc:	movcc	r0, r9
   219c0:	ldrb	r3, [r2]
   219c4:	str	r0, [sp, #8]
   219c8:	mov	r9, r2
   219cc:	b	215e4 <close_stdout@@Base+0x73a0>
   219d0:	ldr	r3, [sp, #20]
   219d4:	cmp	r3, #0
   219d8:	lslge	r3, r3, #1
   219dc:	mvnlt	r3, #0
   219e0:	str	r3, [sp, #20]
   219e4:	ldr	r3, [sp, #20]
   219e8:	cmp	r3, sl
   219ec:	bhi	21e88 <close_stdout@@Base+0x7c44>
   219f0:	adds	r3, sl, #1
   219f4:	str	r3, [sp, #20]
   219f8:	bcc	21e88 <close_stdout@@Base+0x7c44>
   219fc:	ldr	r2, [r5, #4]
   21a00:	ldr	r3, [sp, #12]
   21a04:	cmp	r3, r2
   21a08:	beq	21a14 <close_stdout@@Base+0x77d0>
   21a0c:	mov	r0, r2
   21a10:	bl	11884 <free@plt>
   21a14:	ldr	r0, [r7, #4]
   21a18:	ldr	r3, [sp, #16]
   21a1c:	cmp	r3, r0
   21a20:	beq	21a28 <close_stdout@@Base+0x77e4>
   21a24:	bl	11884 <free@plt>
   21a28:	bl	11aa0 <__errno_location@plt>
   21a2c:	mov	r3, #12
   21a30:	mvn	r2, #0
   21a34:	str	r3, [r0]
   21a38:	b	214bc <close_stdout@@Base+0x7278>
   21a3c:	ldr	r3, [sp, #24]
   21a40:	add	r9, r2, #1
   21a44:	str	r2, [r4, #12]
   21a48:	str	r9, [r4, #16]
   21a4c:	cmp	r3, #0
   21a50:	ldrb	sl, [r2, #1]
   21a54:	moveq	r3, #1
   21a58:	str	r3, [sp, #24]
   21a5c:	sub	sl, sl, #48	; 0x30
   21a60:	uxtb	r3, sl
   21a64:	cmp	r3, #9
   21a68:	bls	21adc <close_stdout@@Base+0x7898>
   21a6c:	ldr	r3, [sp, #36]	; 0x24
   21a70:	cmn	r3, #1
   21a74:	str	r3, [r4, #20]
   21a78:	add	r3, r3, #1
   21a7c:	beq	21d7c <close_stdout@@Base+0x7b38>
   21a80:	ldr	sl, [sp, #36]	; 0x24
   21a84:	str	r3, [sp, #36]	; 0x24
   21a88:	ldr	r3, [sp, #20]
   21a8c:	cmp	r3, sl
   21a90:	bls	219d0 <close_stdout@@Base+0x778c>
   21a94:	ldr	r0, [r5, #4]
   21a98:	ldr	r3, [r5]
   21a9c:	cmp	r3, sl
   21aa0:	bhi	21ac0 <close_stdout@@Base+0x787c>
   21aa4:	add	r2, r3, #1
   21aa8:	str	r2, [r5]
   21aac:	str	r6, [r0, r3, lsl #4]
   21ab0:	ldr	r3, [r5]
   21ab4:	ldr	r0, [r5, #4]
   21ab8:	cmp	r3, sl
   21abc:	bls	21aa4 <close_stdout@@Base+0x7860>
   21ac0:	ldr	r3, [r0, sl, lsl #4]
   21ac4:	cmp	r3, #0
   21ac8:	bne	21e7c <close_stdout@@Base+0x7c38>
   21acc:	mov	r1, #5
   21ad0:	str	r1, [r0, sl, lsl #4]
   21ad4:	ldrb	r3, [r9]
   21ad8:	b	215dc <close_stdout@@Base+0x7398>
   21adc:	mov	r1, r9
   21ae0:	ldrb	r3, [r1, #1]!
   21ae4:	sub	r0, r3, #48	; 0x30
   21ae8:	cmp	r0, #9
   21aec:	bls	21ae0 <close_stdout@@Base+0x789c>
   21af0:	cmp	r3, #36	; 0x24
   21af4:	bne	21a6c <close_stdout@@Base+0x7828>
   21af8:	add	r2, r2, #2
   21afc:	mov	r3, #0
   21b00:	add	r1, r3, r3, lsl #2
   21b04:	cmp	r3, ip
   21b08:	mvn	r3, #0
   21b0c:	lslls	r3, r1, #1
   21b10:	adds	r3, r3, sl
   21b14:	ldrb	sl, [r2], #1
   21b18:	sub	sl, sl, #48	; 0x30
   21b1c:	mvncs	r3, #0
   21b20:	uxtb	r1, sl
   21b24:	cmp	r1, #9
   21b28:	bls	21b00 <close_stdout@@Base+0x78bc>
   21b2c:	sub	r3, r3, #1
   21b30:	cmn	r3, #3
   21b34:	bhi	21d7c <close_stdout@@Base+0x7b38>
   21b38:	str	r3, [r4, #20]
   21b3c:	mov	r9, r2
   21b40:	mov	sl, r3
   21b44:	b	21a88 <close_stdout@@Base+0x7844>
   21b48:	cmp	sl, #7
   21b4c:	movle	sl, #15
   21b50:	movgt	sl, #16
   21b54:	b	217b0 <close_stdout@@Base+0x756c>
   21b58:	cmp	sl, #15
   21b5c:	movgt	fp, r3
   21b60:	movgt	sl, #12
   21b64:	bgt	217b0 <close_stdout@@Base+0x756c>
   21b68:	tst	sl, #4
   21b6c:	mov	fp, r3
   21b70:	moveq	sl, #11
   21b74:	movne	sl, #12
   21b78:	b	217b0 <close_stdout@@Base+0x756c>
   21b7c:	mov	sl, #14
   21b80:	mov	fp, #99	; 0x63
   21b84:	b	217b0 <close_stdout@@Base+0x756c>
   21b88:	mov	sl, #16
   21b8c:	mov	fp, #115	; 0x73
   21b90:	b	217b0 <close_stdout@@Base+0x756c>
   21b94:	cmp	sl, #15
   21b98:	bgt	21db8 <close_stdout@@Base+0x7b74>
   21b9c:	tst	sl, #4
   21ba0:	bne	21db8 <close_stdout@@Base+0x7b74>
   21ba4:	cmp	sl, #7
   21ba8:	movgt	fp, r3
   21bac:	movgt	sl, #8
   21bb0:	bgt	217b0 <close_stdout@@Base+0x756c>
   21bb4:	tst	sl, #2
   21bb8:	movne	fp, r3
   21bbc:	movne	sl, #2
   21bc0:	bne	217b0 <close_stdout@@Base+0x756c>
   21bc4:	tst	sl, #1
   21bc8:	mov	fp, r3
   21bcc:	moveq	sl, #6
   21bd0:	movne	sl, #4
   21bd4:	b	217b0 <close_stdout@@Base+0x756c>
   21bd8:	cmp	sl, #15
   21bdc:	bgt	21dc4 <close_stdout@@Base+0x7b80>
   21be0:	tst	sl, #4
   21be4:	bne	21dc4 <close_stdout@@Base+0x7b80>
   21be8:	cmp	sl, #7
   21bec:	movgt	fp, r3
   21bf0:	movgt	sl, #7
   21bf4:	bgt	217b0 <close_stdout@@Base+0x756c>
   21bf8:	tst	sl, #2
   21bfc:	movne	fp, r3
   21c00:	movne	sl, #1
   21c04:	bne	217b0 <close_stdout@@Base+0x756c>
   21c08:	tst	sl, #1
   21c0c:	mov	fp, r3
   21c10:	moveq	sl, #5
   21c14:	movne	sl, #3
   21c18:	b	217b0 <close_stdout@@Base+0x756c>
   21c1c:	cmp	sl, #7
   21c20:	movle	sl, #13
   21c24:	movgt	sl, #14
   21c28:	b	217b0 <close_stdout@@Base+0x756c>
   21c2c:	cmp	sl, #15
   21c30:	bgt	21dd0 <close_stdout@@Base+0x7b8c>
   21c34:	tst	sl, #4
   21c38:	bne	21dd0 <close_stdout@@Base+0x7b8c>
   21c3c:	cmp	sl, #7
   21c40:	movgt	sl, #21
   21c44:	bgt	217b0 <close_stdout@@Base+0x756c>
   21c48:	tst	sl, #2
   21c4c:	movne	sl, #18
   21c50:	bne	217b0 <close_stdout@@Base+0x756c>
   21c54:	tst	sl, #1
   21c58:	moveq	sl, #20
   21c5c:	movne	sl, #19
   21c60:	b	217b0 <close_stdout@@Base+0x756c>
   21c64:	ldr	r3, [sp, #8]
   21c68:	add	sl, r9, #2
   21c6c:	str	sl, [r4, #28]
   21c70:	ldrb	r0, [r9, #2]
   21c74:	cmp	r3, #1
   21c78:	sub	r0, r0, #48	; 0x30
   21c7c:	movls	r3, #2
   21c80:	str	r3, [sp, #8]
   21c84:	uxtb	r3, r0
   21c88:	cmp	r3, #9
   21c8c:	bhi	21dd8 <close_stdout@@Base+0x7b94>
   21c90:	mov	r2, sl
   21c94:	ldrb	r3, [r2, #1]!
   21c98:	sub	r1, r3, #48	; 0x30
   21c9c:	cmp	r1, #9
   21ca0:	bls	21c94 <close_stdout@@Base+0x7a50>
   21ca4:	cmp	r3, #36	; 0x24
   21ca8:	bne	21dd8 <close_stdout@@Base+0x7b94>
   21cac:	add	r9, r9, #3
   21cb0:	mov	r3, #0
   21cb4:	add	r2, r3, r3, lsl #2
   21cb8:	cmp	r3, ip
   21cbc:	mvn	r3, #0
   21cc0:	lslls	r3, r2, #1
   21cc4:	adds	r3, r3, r0
   21cc8:	ldrb	r0, [r9], #1
   21ccc:	sub	r0, r0, #48	; 0x30
   21cd0:	mvncs	r3, #0
   21cd4:	uxtb	r2, r0
   21cd8:	cmp	r2, #9
   21cdc:	bls	21cb4 <close_stdout@@Base+0x7a70>
   21ce0:	sub	r3, r3, #1
   21ce4:	cmn	r3, #3
   21ce8:	bhi	21d7c <close_stdout@@Base+0x7b38>
   21cec:	mov	sl, r9
   21cf0:	mov	r9, r3
   21cf4:	str	r3, [r4, #32]
   21cf8:	ldr	r3, [sp, #20]
   21cfc:	cmp	r3, r9
   21d00:	bhi	21f10 <close_stdout@@Base+0x7ccc>
   21d04:	ldr	r3, [sp, #20]
   21d08:	cmp	r3, #0
   21d0c:	blt	219fc <close_stdout@@Base+0x77b8>
   21d10:	lsl	r3, r3, #1
   21d14:	str	r3, [sp, #20]
   21d18:	cmp	r3, r9
   21d1c:	bhi	21d2c <close_stdout@@Base+0x7ae8>
   21d20:	adds	r3, r9, #1
   21d24:	str	r3, [sp, #20]
   21d28:	bcs	219fc <close_stdout@@Base+0x77b8>
   21d2c:	ldr	r3, [sp, #20]
   21d30:	cmn	r3, #-268435455	; 0xf0000001
   21d34:	bhi	219fc <close_stdout@@Base+0x77b8>
   21d38:	ldr	r0, [r5, #4]
   21d3c:	lsl	r1, r3, #4
   21d40:	ldr	r3, [sp, #12]
   21d44:	cmp	r3, r0
   21d48:	beq	22014 <close_stdout@@Base+0x7dd0>
   21d4c:	str	ip, [sp, #4]
   21d50:	bl	11914 <realloc@plt>
   21d54:	ldr	r2, [r5, #4]
   21d58:	ldr	ip, [sp, #4]
   21d5c:	subs	r3, r0, #0
   21d60:	beq	21a00 <close_stdout@@Base+0x77bc>
   21d64:	ldr	r0, [sp, #12]
   21d68:	cmp	r0, r2
   21d6c:	beq	2202c <close_stdout@@Base+0x7de8>
   21d70:	mov	r0, r3
   21d74:	str	r3, [r5, #4]
   21d78:	b	21f14 <close_stdout@@Base+0x7cd0>
   21d7c:	ldr	r0, [r5, #4]
   21d80:	ldr	r3, [sp, #12]
   21d84:	cmp	r3, r0
   21d88:	beq	21d90 <close_stdout@@Base+0x7b4c>
   21d8c:	bl	11884 <free@plt>
   21d90:	ldr	r0, [r7, #4]
   21d94:	ldr	r3, [sp, #16]
   21d98:	cmp	r3, r0
   21d9c:	beq	21da4 <close_stdout@@Base+0x7b60>
   21da0:	bl	11884 <free@plt>
   21da4:	bl	11aa0 <__errno_location@plt>
   21da8:	mov	r3, #22
   21dac:	mvn	r2, #0
   21db0:	str	r3, [r0]
   21db4:	b	214bc <close_stdout@@Base+0x7278>
   21db8:	mov	fp, r3
   21dbc:	mov	sl, #10
   21dc0:	b	217b0 <close_stdout@@Base+0x756c>
   21dc4:	mov	fp, r3
   21dc8:	mov	sl, #9
   21dcc:	b	217b0 <close_stdout@@Base+0x756c>
   21dd0:	mov	sl, #22
   21dd4:	b	217b0 <close_stdout@@Base+0x756c>
   21dd8:	ldr	r9, [r4, #32]
   21ddc:	cmn	r9, #1
   21de0:	bne	21cf8 <close_stdout@@Base+0x7ab4>
   21de4:	ldr	r3, [sp, #36]	; 0x24
   21de8:	cmn	r3, #1
   21dec:	str	r3, [r4, #32]
   21df0:	add	r3, r3, #1
   21df4:	beq	21d7c <close_stdout@@Base+0x7b38>
   21df8:	ldr	r9, [sp, #36]	; 0x24
   21dfc:	str	r3, [sp, #36]	; 0x24
   21e00:	b	21cf8 <close_stdout@@Base+0x7ab4>
   21e04:	ldr	r3, [sp, #20]
   21e08:	cmp	r3, #0
   21e0c:	blt	219fc <close_stdout@@Base+0x77b8>
   21e10:	lsl	r3, r3, #1
   21e14:	str	r3, [sp, #20]
   21e18:	cmp	r3, r8
   21e1c:	bhi	21e2c <close_stdout@@Base+0x7be8>
   21e20:	adds	r3, r8, #1
   21e24:	str	r3, [sp, #20]
   21e28:	bcs	219fc <close_stdout@@Base+0x77b8>
   21e2c:	ldr	r3, [sp, #20]
   21e30:	cmn	r3, #-268435455	; 0xf0000001
   21e34:	bhi	219fc <close_stdout@@Base+0x77b8>
   21e38:	ldr	r0, [r5, #4]
   21e3c:	lsl	r1, r3, #4
   21e40:	ldr	r3, [sp, #12]
   21e44:	cmp	r3, r0
   21e48:	beq	21f70 <close_stdout@@Base+0x7d2c>
   21e4c:	str	ip, [sp, #4]
   21e50:	bl	11914 <realloc@plt>
   21e54:	ldr	r2, [r5, #4]
   21e58:	ldr	ip, [sp, #4]
   21e5c:	subs	r3, r0, #0
   21e60:	beq	21a00 <close_stdout@@Base+0x77bc>
   21e64:	ldr	r0, [sp, #12]
   21e68:	cmp	r0, r2
   21e6c:	beq	21f88 <close_stdout@@Base+0x7d44>
   21e70:	mov	r0, r3
   21e74:	str	r3, [r5, #4]
   21e78:	b	217cc <close_stdout@@Base+0x7588>
   21e7c:	cmp	r3, #5
   21e80:	beq	21960 <close_stdout@@Base+0x771c>
   21e84:	b	21d80 <close_stdout@@Base+0x7b3c>
   21e88:	ldr	r3, [sp, #20]
   21e8c:	cmn	r3, #-268435455	; 0xf0000001
   21e90:	bhi	219fc <close_stdout@@Base+0x77b8>
   21e94:	ldr	r0, [r5, #4]
   21e98:	lsl	r1, r3, #4
   21e9c:	ldr	r3, [sp, #12]
   21ea0:	cmp	r3, r0
   21ea4:	beq	21fd8 <close_stdout@@Base+0x7d94>
   21ea8:	str	ip, [sp, #4]
   21eac:	bl	11914 <realloc@plt>
   21eb0:	ldr	r2, [r5, #4]
   21eb4:	ldr	ip, [sp, #4]
   21eb8:	subs	r3, r0, #0
   21ebc:	beq	21a00 <close_stdout@@Base+0x77bc>
   21ec0:	ldr	r0, [sp, #12]
   21ec4:	cmp	r0, r2
   21ec8:	beq	21ff0 <close_stdout@@Base+0x7dac>
   21ecc:	mov	r0, r3
   21ed0:	str	r3, [r5, #4]
   21ed4:	b	21a98 <close_stdout@@Base+0x7854>
   21ed8:	ldr	r3, [sp, #36]	; 0x24
   21edc:	cmn	r3, #1
   21ee0:	str	r3, [r4, #40]	; 0x28
   21ee4:	add	r3, r3, #1
   21ee8:	beq	21d7c <close_stdout@@Base+0x7b38>
   21eec:	ldr	r8, [sp, #36]	; 0x24
   21ef0:	str	r3, [sp, #36]	; 0x24
   21ef4:	b	217bc <close_stdout@@Base+0x7578>
   21ef8:	mov	r0, r1
   21efc:	str	ip, [sp, #4]
   21f00:	bl	119e0 <malloc@plt>
   21f04:	ldr	ip, [sp, #4]
   21f08:	mov	r4, r0
   21f0c:	b	21878 <close_stdout@@Base+0x7634>
   21f10:	ldr	r0, [r5, #4]
   21f14:	ldr	r3, [r5]
   21f18:	cmp	r3, r9
   21f1c:	bhi	21f3c <close_stdout@@Base+0x7cf8>
   21f20:	add	r2, r3, #1
   21f24:	str	r2, [r5]
   21f28:	str	r6, [r0, r3, lsl #4]
   21f2c:	ldr	r3, [r5]
   21f30:	ldr	r0, [r5, #4]
   21f34:	cmp	r3, r9
   21f38:	bls	21f20 <close_stdout@@Base+0x7cdc>
   21f3c:	ldr	r3, [r0, r9, lsl #4]
   21f40:	cmp	r3, #0
   21f44:	bne	21f5c <close_stdout@@Base+0x7d18>
   21f48:	mov	r1, #5
   21f4c:	str	r1, [r0, r9, lsl #4]
   21f50:	mov	r9, sl
   21f54:	ldrb	r3, [sl]
   21f58:	b	215e4 <close_stdout@@Base+0x73a0>
   21f5c:	cmp	r3, #5
   21f60:	bne	21d80 <close_stdout@@Base+0x7b3c>
   21f64:	ldrb	r3, [sl]
   21f68:	mov	r9, sl
   21f6c:	b	215e4 <close_stdout@@Base+0x73a0>
   21f70:	mov	r0, r1
   21f74:	str	ip, [sp, #4]
   21f78:	bl	119e0 <malloc@plt>
   21f7c:	ldr	ip, [sp, #4]
   21f80:	subs	r3, r0, #0
   21f84:	beq	22050 <close_stdout@@Base+0x7e0c>
   21f88:	ldr	r2, [r5]
   21f8c:	mov	r0, r3
   21f90:	ldr	r1, [sp, #12]
   21f94:	str	ip, [sp, #4]
   21f98:	lsl	r2, r2, #4
   21f9c:	bl	1189c <memcpy@plt>
   21fa0:	ldr	ip, [sp, #4]
   21fa4:	mov	r3, r0
   21fa8:	b	21e70 <close_stdout@@Base+0x7c2c>
   21fac:	mov	r2, #0
   21fb0:	b	2194c <close_stdout@@Base+0x7708>
   21fb4:	ldr	r2, [r7]
   21fb8:	mov	r3, #44	; 0x2c
   21fbc:	mov	r0, r4
   21fc0:	ldr	r1, [sp, #16]
   21fc4:	str	ip, [sp, #4]
   21fc8:	mul	r2, r3, r2
   21fcc:	bl	1189c <memcpy@plt>
   21fd0:	ldr	ip, [sp, #4]
   21fd4:	b	21890 <close_stdout@@Base+0x764c>
   21fd8:	mov	r0, r1
   21fdc:	str	ip, [sp, #4]
   21fe0:	bl	119e0 <malloc@plt>
   21fe4:	ldr	ip, [sp, #4]
   21fe8:	subs	r3, r0, #0
   21fec:	beq	22050 <close_stdout@@Base+0x7e0c>
   21ff0:	ldr	r2, [r5]
   21ff4:	mov	r0, r3
   21ff8:	ldr	r1, [sp, #12]
   21ffc:	str	ip, [sp, #4]
   22000:	lsl	r2, r2, #4
   22004:	bl	1189c <memcpy@plt>
   22008:	ldr	ip, [sp, #4]
   2200c:	mov	r3, r0
   22010:	b	21ecc <close_stdout@@Base+0x7c88>
   22014:	mov	r0, r1
   22018:	str	ip, [sp, #4]
   2201c:	bl	119e0 <malloc@plt>
   22020:	ldr	ip, [sp, #4]
   22024:	subs	r3, r0, #0
   22028:	beq	22050 <close_stdout@@Base+0x7e0c>
   2202c:	ldr	r2, [r5]
   22030:	mov	r0, r3
   22034:	ldr	r1, [sp, #12]
   22038:	str	ip, [sp, #4]
   2203c:	lsl	r2, r2, #4
   22040:	bl	1189c <memcpy@plt>
   22044:	ldr	ip, [sp, #4]
   22048:	mov	r3, r0
   2204c:	b	21d70 <close_stdout@@Base+0x7b2c>
   22050:	ldr	r2, [sp, #12]
   22054:	b	21a00 <close_stdout@@Base+0x77bc>
   22058:	subs	r2, r1, #1
   2205c:	bxeq	lr
   22060:	bcc	22238 <close_stdout@@Base+0x7ff4>
   22064:	cmp	r0, r1
   22068:	bls	2221c <close_stdout@@Base+0x7fd8>
   2206c:	tst	r1, r2
   22070:	beq	22228 <close_stdout@@Base+0x7fe4>
   22074:	clz	r3, r0
   22078:	clz	r2, r1
   2207c:	sub	r3, r2, r3
   22080:	rsbs	r3, r3, #31
   22084:	addne	r3, r3, r3, lsl #1
   22088:	mov	r2, #0
   2208c:	addne	pc, pc, r3, lsl #2
   22090:	nop	{0}
   22094:	cmp	r0, r1, lsl #31
   22098:	adc	r2, r2, r2
   2209c:	subcs	r0, r0, r1, lsl #31
   220a0:	cmp	r0, r1, lsl #30
   220a4:	adc	r2, r2, r2
   220a8:	subcs	r0, r0, r1, lsl #30
   220ac:	cmp	r0, r1, lsl #29
   220b0:	adc	r2, r2, r2
   220b4:	subcs	r0, r0, r1, lsl #29
   220b8:	cmp	r0, r1, lsl #28
   220bc:	adc	r2, r2, r2
   220c0:	subcs	r0, r0, r1, lsl #28
   220c4:	cmp	r0, r1, lsl #27
   220c8:	adc	r2, r2, r2
   220cc:	subcs	r0, r0, r1, lsl #27
   220d0:	cmp	r0, r1, lsl #26
   220d4:	adc	r2, r2, r2
   220d8:	subcs	r0, r0, r1, lsl #26
   220dc:	cmp	r0, r1, lsl #25
   220e0:	adc	r2, r2, r2
   220e4:	subcs	r0, r0, r1, lsl #25
   220e8:	cmp	r0, r1, lsl #24
   220ec:	adc	r2, r2, r2
   220f0:	subcs	r0, r0, r1, lsl #24
   220f4:	cmp	r0, r1, lsl #23
   220f8:	adc	r2, r2, r2
   220fc:	subcs	r0, r0, r1, lsl #23
   22100:	cmp	r0, r1, lsl #22
   22104:	adc	r2, r2, r2
   22108:	subcs	r0, r0, r1, lsl #22
   2210c:	cmp	r0, r1, lsl #21
   22110:	adc	r2, r2, r2
   22114:	subcs	r0, r0, r1, lsl #21
   22118:	cmp	r0, r1, lsl #20
   2211c:	adc	r2, r2, r2
   22120:	subcs	r0, r0, r1, lsl #20
   22124:	cmp	r0, r1, lsl #19
   22128:	adc	r2, r2, r2
   2212c:	subcs	r0, r0, r1, lsl #19
   22130:	cmp	r0, r1, lsl #18
   22134:	adc	r2, r2, r2
   22138:	subcs	r0, r0, r1, lsl #18
   2213c:	cmp	r0, r1, lsl #17
   22140:	adc	r2, r2, r2
   22144:	subcs	r0, r0, r1, lsl #17
   22148:	cmp	r0, r1, lsl #16
   2214c:	adc	r2, r2, r2
   22150:	subcs	r0, r0, r1, lsl #16
   22154:	cmp	r0, r1, lsl #15
   22158:	adc	r2, r2, r2
   2215c:	subcs	r0, r0, r1, lsl #15
   22160:	cmp	r0, r1, lsl #14
   22164:	adc	r2, r2, r2
   22168:	subcs	r0, r0, r1, lsl #14
   2216c:	cmp	r0, r1, lsl #13
   22170:	adc	r2, r2, r2
   22174:	subcs	r0, r0, r1, lsl #13
   22178:	cmp	r0, r1, lsl #12
   2217c:	adc	r2, r2, r2
   22180:	subcs	r0, r0, r1, lsl #12
   22184:	cmp	r0, r1, lsl #11
   22188:	adc	r2, r2, r2
   2218c:	subcs	r0, r0, r1, lsl #11
   22190:	cmp	r0, r1, lsl #10
   22194:	adc	r2, r2, r2
   22198:	subcs	r0, r0, r1, lsl #10
   2219c:	cmp	r0, r1, lsl #9
   221a0:	adc	r2, r2, r2
   221a4:	subcs	r0, r0, r1, lsl #9
   221a8:	cmp	r0, r1, lsl #8
   221ac:	adc	r2, r2, r2
   221b0:	subcs	r0, r0, r1, lsl #8
   221b4:	cmp	r0, r1, lsl #7
   221b8:	adc	r2, r2, r2
   221bc:	subcs	r0, r0, r1, lsl #7
   221c0:	cmp	r0, r1, lsl #6
   221c4:	adc	r2, r2, r2
   221c8:	subcs	r0, r0, r1, lsl #6
   221cc:	cmp	r0, r1, lsl #5
   221d0:	adc	r2, r2, r2
   221d4:	subcs	r0, r0, r1, lsl #5
   221d8:	cmp	r0, r1, lsl #4
   221dc:	adc	r2, r2, r2
   221e0:	subcs	r0, r0, r1, lsl #4
   221e4:	cmp	r0, r1, lsl #3
   221e8:	adc	r2, r2, r2
   221ec:	subcs	r0, r0, r1, lsl #3
   221f0:	cmp	r0, r1, lsl #2
   221f4:	adc	r2, r2, r2
   221f8:	subcs	r0, r0, r1, lsl #2
   221fc:	cmp	r0, r1, lsl #1
   22200:	adc	r2, r2, r2
   22204:	subcs	r0, r0, r1, lsl #1
   22208:	cmp	r0, r1
   2220c:	adc	r2, r2, r2
   22210:	subcs	r0, r0, r1
   22214:	mov	r0, r2
   22218:	bx	lr
   2221c:	moveq	r0, #1
   22220:	movne	r0, #0
   22224:	bx	lr
   22228:	clz	r2, r1
   2222c:	rsb	r2, r2, #31
   22230:	lsr	r0, r0, r2
   22234:	bx	lr
   22238:	cmp	r0, #0
   2223c:	mvnne	r0, #0
   22240:	b	222a0 <close_stdout@@Base+0x805c>
   22244:	cmp	r1, #0
   22248:	beq	22238 <close_stdout@@Base+0x7ff4>
   2224c:	push	{r0, r1, lr}
   22250:	bl	22058 <close_stdout@@Base+0x7e14>
   22254:	pop	{r1, r2, lr}
   22258:	mul	r3, r2, r0
   2225c:	sub	r1, r1, r3
   22260:	bx	lr
   22264:	cmp	r3, #0
   22268:	cmpeq	r2, #0
   2226c:	bne	22284 <close_stdout@@Base+0x8040>
   22270:	cmp	r1, #0
   22274:	cmpeq	r0, #0
   22278:	mvnne	r1, #0
   2227c:	mvnne	r0, #0
   22280:	b	222a0 <close_stdout@@Base+0x805c>
   22284:	sub	sp, sp, #8
   22288:	push	{sp, lr}
   2228c:	bl	222ec <close_stdout@@Base+0x80a8>
   22290:	ldr	lr, [sp, #4]
   22294:	add	sp, sp, #8
   22298:	pop	{r2, r3}
   2229c:	bx	lr
   222a0:	push	{r1, lr}
   222a4:	mov	r0, #8
   222a8:	bl	117f4 <raise@plt>
   222ac:	pop	{r1, pc}
   222b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   222b4:	mov	r8, r2
   222b8:	mov	r6, r0
   222bc:	mov	r7, r1
   222c0:	mov	sl, r3
   222c4:	ldr	r9, [sp, #32]
   222c8:	bl	22328 <close_stdout@@Base+0x80e4>
   222cc:	umull	r4, r5, r8, r0
   222d0:	mul	r8, r8, r1
   222d4:	mla	r2, r0, sl, r8
   222d8:	add	r5, r2, r5
   222dc:	subs	r4, r6, r4
   222e0:	sbc	r5, r7, r5
   222e4:	strd	r4, [r9]
   222e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   222ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   222f0:	mov	r8, r2
   222f4:	mov	r6, r0
   222f8:	mov	r7, r1
   222fc:	mov	r5, r3
   22300:	ldr	r9, [sp, #32]
   22304:	bl	227b4 <close_stdout@@Base+0x8570>
   22308:	mul	r3, r0, r5
   2230c:	umull	r4, r5, r0, r8
   22310:	mla	r8, r8, r1, r3
   22314:	add	r5, r8, r5
   22318:	subs	r4, r6, r4
   2231c:	sbc	r5, r7, r5
   22320:	strd	r4, [r9]
   22324:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   22328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2232c:	rsbs	r4, r0, #0
   22330:	rsc	r5, r1, #0
   22334:	cmp	r1, #0
   22338:	mvn	r6, #0
   2233c:	sub	sp, sp, #12
   22340:	movge	r4, r0
   22344:	movge	r5, r1
   22348:	movge	r6, #0
   2234c:	cmp	r3, #0
   22350:	blt	22588 <close_stdout@@Base+0x8344>
   22354:	cmp	r3, #0
   22358:	mov	sl, r4
   2235c:	mov	ip, r5
   22360:	mov	r0, r2
   22364:	mov	r1, r3
   22368:	mov	r8, r2
   2236c:	mov	r7, r4
   22370:	mov	r9, r5
   22374:	bne	2246c <close_stdout@@Base+0x8228>
   22378:	cmp	r2, r5
   2237c:	bls	224a8 <close_stdout@@Base+0x8264>
   22380:	clz	r3, r2
   22384:	cmp	r3, #0
   22388:	rsbne	r2, r3, #32
   2238c:	lslne	r8, r0, r3
   22390:	lsrne	r2, r4, r2
   22394:	lslne	r7, r4, r3
   22398:	orrne	r9, r2, r5, lsl r3
   2239c:	lsr	r4, r8, #16
   223a0:	uxth	sl, r8
   223a4:	mov	r1, r4
   223a8:	mov	r0, r9
   223ac:	bl	22058 <close_stdout@@Base+0x7e14>
   223b0:	mov	r1, r4
   223b4:	mov	fp, r0
   223b8:	mov	r0, r9
   223bc:	bl	22244 <close_stdout@@Base+0x8000>
   223c0:	mul	r0, sl, fp
   223c4:	lsr	r2, r7, #16
   223c8:	orr	r1, r2, r1, lsl #16
   223cc:	cmp	r0, r1
   223d0:	bls	223f4 <close_stdout@@Base+0x81b0>
   223d4:	adds	r1, r1, r8
   223d8:	sub	r3, fp, #1
   223dc:	bcs	223f0 <close_stdout@@Base+0x81ac>
   223e0:	cmp	r0, r1
   223e4:	subhi	fp, fp, #2
   223e8:	addhi	r1, r1, r8
   223ec:	bhi	223f4 <close_stdout@@Base+0x81b0>
   223f0:	mov	fp, r3
   223f4:	rsb	r9, r0, r1
   223f8:	mov	r1, r4
   223fc:	uxth	r7, r7
   22400:	mov	r0, r9
   22404:	bl	22058 <close_stdout@@Base+0x7e14>
   22408:	mov	r1, r4
   2240c:	mov	r5, r0
   22410:	mov	r0, r9
   22414:	bl	22244 <close_stdout@@Base+0x8000>
   22418:	mul	sl, sl, r5
   2241c:	orr	r1, r7, r1, lsl #16
   22420:	cmp	sl, r1
   22424:	bls	22444 <close_stdout@@Base+0x8200>
   22428:	adds	r8, r1, r8
   2242c:	sub	r3, r5, #1
   22430:	bcs	22440 <close_stdout@@Base+0x81fc>
   22434:	cmp	sl, r8
   22438:	subhi	r5, r5, #2
   2243c:	bhi	22444 <close_stdout@@Base+0x8200>
   22440:	mov	r5, r3
   22444:	orr	r3, r5, fp, lsl #16
   22448:	mov	r4, #0
   2244c:	cmp	r6, #0
   22450:	mov	r0, r3
   22454:	mov	r1, r4
   22458:	beq	22464 <close_stdout@@Base+0x8220>
   2245c:	rsbs	r0, r0, #0
   22460:	rsc	r1, r1, #0
   22464:	add	sp, sp, #12
   22468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2246c:	cmp	r3, r5
   22470:	movhi	r4, #0
   22474:	movhi	r3, r4
   22478:	bhi	2244c <close_stdout@@Base+0x8208>
   2247c:	clz	r5, r1
   22480:	cmp	r5, #0
   22484:	bne	22674 <close_stdout@@Base+0x8430>
   22488:	cmp	r1, ip
   2248c:	cmpcs	r2, sl
   22490:	movhi	r4, #0
   22494:	movls	r4, #1
   22498:	movls	r3, #1
   2249c:	movls	r4, r5
   224a0:	movhi	r3, r4
   224a4:	b	2244c <close_stdout@@Base+0x8208>
   224a8:	cmp	r2, #0
   224ac:	bne	224c0 <close_stdout@@Base+0x827c>
   224b0:	mov	r1, r2
   224b4:	mov	r0, #1
   224b8:	bl	22058 <close_stdout@@Base+0x7e14>
   224bc:	mov	r8, r0
   224c0:	clz	r3, r8
   224c4:	cmp	r3, #0
   224c8:	bne	22598 <close_stdout@@Base+0x8354>
   224cc:	rsb	r9, r8, r9
   224d0:	lsr	r5, r8, #16
   224d4:	uxth	sl, r8
   224d8:	mov	r4, #1
   224dc:	mov	r1, r5
   224e0:	mov	r0, r9
   224e4:	bl	22058 <close_stdout@@Base+0x7e14>
   224e8:	mov	r1, r5
   224ec:	mov	fp, r0
   224f0:	mov	r0, r9
   224f4:	bl	22244 <close_stdout@@Base+0x8000>
   224f8:	mul	r0, sl, fp
   224fc:	lsr	r2, r7, #16
   22500:	orr	r1, r2, r1, lsl #16
   22504:	cmp	r0, r1
   22508:	bls	22528 <close_stdout@@Base+0x82e4>
   2250c:	adds	r1, r1, r8
   22510:	sub	r3, fp, #1
   22514:	bcs	22794 <close_stdout@@Base+0x8550>
   22518:	cmp	r0, r1
   2251c:	subhi	fp, fp, #2
   22520:	addhi	r1, r1, r8
   22524:	bls	22794 <close_stdout@@Base+0x8550>
   22528:	rsb	r2, r0, r1
   2252c:	mov	r1, r5
   22530:	str	r2, [sp]
   22534:	uxth	r7, r7
   22538:	mov	r0, r2
   2253c:	bl	22058 <close_stdout@@Base+0x7e14>
   22540:	ldr	r2, [sp]
   22544:	mov	r1, r5
   22548:	mov	r9, r0
   2254c:	mov	r0, r2
   22550:	bl	22244 <close_stdout@@Base+0x8000>
   22554:	mul	sl, sl, r9
   22558:	orr	r1, r7, r1, lsl #16
   2255c:	cmp	sl, r1
   22560:	bls	22580 <close_stdout@@Base+0x833c>
   22564:	adds	r8, r1, r8
   22568:	sub	r3, r9, #1
   2256c:	bcs	2257c <close_stdout@@Base+0x8338>
   22570:	cmp	sl, r8
   22574:	subhi	r9, r9, #2
   22578:	bhi	22580 <close_stdout@@Base+0x833c>
   2257c:	mov	r9, r3
   22580:	orr	r3, r9, fp, lsl #16
   22584:	b	2244c <close_stdout@@Base+0x8208>
   22588:	mvn	r6, r6
   2258c:	rsbs	r2, r2, #0
   22590:	rsc	r3, r3, #0
   22594:	b	22354 <close_stdout@@Base+0x8110>
   22598:	lsl	r8, r8, r3
   2259c:	rsb	fp, r3, #32
   225a0:	lsr	r4, r9, fp
   225a4:	lsr	fp, r7, fp
   225a8:	lsr	r5, r8, #16
   225ac:	orr	fp, fp, r9, lsl r3
   225b0:	mov	r0, r4
   225b4:	lsl	r7, r7, r3
   225b8:	mov	r1, r5
   225bc:	uxth	sl, r8
   225c0:	bl	22058 <close_stdout@@Base+0x7e14>
   225c4:	mov	r1, r5
   225c8:	mov	r3, r0
   225cc:	mov	r0, r4
   225d0:	str	r3, [sp]
   225d4:	bl	22244 <close_stdout@@Base+0x8000>
   225d8:	ldr	r3, [sp]
   225dc:	lsr	r2, fp, #16
   225e0:	mul	r0, sl, r3
   225e4:	orr	r1, r2, r1, lsl #16
   225e8:	cmp	r0, r1
   225ec:	bls	2260c <close_stdout@@Base+0x83c8>
   225f0:	adds	r1, r1, r8
   225f4:	sub	r2, r3, #1
   225f8:	bcs	227ac <close_stdout@@Base+0x8568>
   225fc:	cmp	r0, r1
   22600:	subhi	r3, r3, #2
   22604:	addhi	r1, r1, r8
   22608:	bls	227ac <close_stdout@@Base+0x8568>
   2260c:	rsb	r9, r0, r1
   22610:	mov	r1, r5
   22614:	str	r3, [sp]
   22618:	uxth	fp, fp
   2261c:	mov	r0, r9
   22620:	bl	22058 <close_stdout@@Base+0x7e14>
   22624:	mov	r1, r5
   22628:	mov	r4, r0
   2262c:	mov	r0, r9
   22630:	bl	22244 <close_stdout@@Base+0x8000>
   22634:	mul	r9, sl, r4
   22638:	ldr	r3, [sp]
   2263c:	orr	r1, fp, r1, lsl #16
   22640:	cmp	r9, r1
   22644:	bls	22668 <close_stdout@@Base+0x8424>
   22648:	adds	r1, r1, r8
   2264c:	sub	r2, r4, #1
   22650:	bcs	22664 <close_stdout@@Base+0x8420>
   22654:	cmp	r9, r1
   22658:	subhi	r4, r4, #2
   2265c:	addhi	r1, r1, r8
   22660:	bhi	22668 <close_stdout@@Base+0x8424>
   22664:	mov	r4, r2
   22668:	rsb	r9, r9, r1
   2266c:	orr	r4, r4, r3, lsl #16
   22670:	b	224dc <close_stdout@@Base+0x8298>
   22674:	rsb	sl, r5, #32
   22678:	lsl	r3, r2, r5
   2267c:	lsr	r0, r2, sl
   22680:	lsr	r2, ip, sl
   22684:	orr	r4, r0, r1, lsl r5
   22688:	lsr	sl, r7, sl
   2268c:	mov	r0, r2
   22690:	orr	sl, sl, ip, lsl r5
   22694:	lsr	r9, r4, #16
   22698:	str	r3, [sp, #4]
   2269c:	str	r2, [sp]
   226a0:	uxth	fp, r4
   226a4:	mov	r1, r9
   226a8:	bl	22058 <close_stdout@@Base+0x7e14>
   226ac:	ldr	r2, [sp]
   226b0:	mov	r1, r9
   226b4:	mov	r8, r0
   226b8:	mov	r0, r2
   226bc:	bl	22244 <close_stdout@@Base+0x8000>
   226c0:	mul	r0, fp, r8
   226c4:	lsr	r2, sl, #16
   226c8:	orr	r1, r2, r1, lsl #16
   226cc:	cmp	r0, r1
   226d0:	bls	226f0 <close_stdout@@Base+0x84ac>
   226d4:	adds	r1, r1, r4
   226d8:	sub	r2, r8, #1
   226dc:	bcs	227a4 <close_stdout@@Base+0x8560>
   226e0:	cmp	r0, r1
   226e4:	subhi	r8, r8, #2
   226e8:	addhi	r1, r1, r4
   226ec:	bls	227a4 <close_stdout@@Base+0x8560>
   226f0:	rsb	ip, r0, r1
   226f4:	mov	r1, r9
   226f8:	str	ip, [sp]
   226fc:	mov	r0, ip
   22700:	bl	22058 <close_stdout@@Base+0x7e14>
   22704:	ldr	ip, [sp]
   22708:	mov	r1, r9
   2270c:	mov	r2, r0
   22710:	mov	r0, ip
   22714:	str	r2, [sp]
   22718:	bl	22244 <close_stdout@@Base+0x8000>
   2271c:	ldr	r2, [sp]
   22720:	uxth	ip, sl
   22724:	mul	fp, fp, r2
   22728:	orr	ip, ip, r1, lsl #16
   2272c:	cmp	fp, ip
   22730:	bls	22750 <close_stdout@@Base+0x850c>
   22734:	adds	ip, ip, r4
   22738:	sub	r1, r2, #1
   2273c:	bcs	2279c <close_stdout@@Base+0x8558>
   22740:	cmp	fp, ip
   22744:	subhi	r2, r2, #2
   22748:	addhi	ip, ip, r4
   2274c:	bls	2279c <close_stdout@@Base+0x8558>
   22750:	ldr	r0, [sp, #4]
   22754:	orr	r1, r2, r8, lsl #16
   22758:	rsb	fp, fp, ip
   2275c:	umull	r2, r3, r1, r0
   22760:	cmp	fp, r3
   22764:	bcc	22788 <close_stdout@@Base+0x8544>
   22768:	movne	r4, #0
   2276c:	moveq	r4, #1
   22770:	cmp	r2, r7, lsl r5
   22774:	movls	r4, #0
   22778:	andhi	r4, r4, #1
   2277c:	cmp	r4, #0
   22780:	moveq	r3, r1
   22784:	beq	2244c <close_stdout@@Base+0x8208>
   22788:	sub	r3, r1, #1
   2278c:	mov	r4, #0
   22790:	b	2244c <close_stdout@@Base+0x8208>
   22794:	mov	fp, r3
   22798:	b	22528 <close_stdout@@Base+0x82e4>
   2279c:	mov	r2, r1
   227a0:	b	22750 <close_stdout@@Base+0x850c>
   227a4:	mov	r8, r2
   227a8:	b	226f0 <close_stdout@@Base+0x84ac>
   227ac:	mov	r3, r2
   227b0:	b	2260c <close_stdout@@Base+0x83c8>
   227b4:	cmp	r3, #0
   227b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   227bc:	mov	r6, r0
   227c0:	sub	sp, sp, #12
   227c4:	mov	r5, r1
   227c8:	mov	r7, r0
   227cc:	mov	r4, r2
   227d0:	mov	r8, r1
   227d4:	bne	228b4 <close_stdout@@Base+0x8670>
   227d8:	cmp	r2, r1
   227dc:	bls	228f0 <close_stdout@@Base+0x86ac>
   227e0:	clz	r3, r2
   227e4:	cmp	r3, #0
   227e8:	rsbne	r8, r3, #32
   227ec:	lslne	r4, r2, r3
   227f0:	lsrne	r8, r0, r8
   227f4:	lslne	r7, r0, r3
   227f8:	orrne	r8, r8, r1, lsl r3
   227fc:	lsr	r5, r4, #16
   22800:	uxth	sl, r4
   22804:	mov	r1, r5
   22808:	mov	r0, r8
   2280c:	bl	22058 <close_stdout@@Base+0x7e14>
   22810:	mov	r1, r5
   22814:	mov	r9, r0
   22818:	mov	r0, r8
   2281c:	bl	22244 <close_stdout@@Base+0x8000>
   22820:	mul	r0, sl, r9
   22824:	lsr	r3, r7, #16
   22828:	orr	r1, r3, r1, lsl #16
   2282c:	cmp	r0, r1
   22830:	bls	22854 <close_stdout@@Base+0x8610>
   22834:	adds	r1, r1, r4
   22838:	sub	r2, r9, #1
   2283c:	bcs	22850 <close_stdout@@Base+0x860c>
   22840:	cmp	r0, r1
   22844:	subhi	r9, r9, #2
   22848:	addhi	r1, r1, r4
   2284c:	bhi	22854 <close_stdout@@Base+0x8610>
   22850:	mov	r9, r2
   22854:	rsb	r8, r0, r1
   22858:	mov	r1, r5
   2285c:	uxth	r7, r7
   22860:	mov	r0, r8
   22864:	bl	22058 <close_stdout@@Base+0x7e14>
   22868:	mov	r1, r5
   2286c:	mov	r6, r0
   22870:	mov	r0, r8
   22874:	bl	22244 <close_stdout@@Base+0x8000>
   22878:	mul	sl, sl, r6
   2287c:	orr	r1, r7, r1, lsl #16
   22880:	cmp	sl, r1
   22884:	bls	228a0 <close_stdout@@Base+0x865c>
   22888:	adds	r4, r1, r4
   2288c:	sub	r3, r6, #1
   22890:	bcs	22b9c <close_stdout@@Base+0x8958>
   22894:	cmp	sl, r4
   22898:	subhi	r6, r6, #2
   2289c:	bls	22b9c <close_stdout@@Base+0x8958>
   228a0:	orr	r0, r6, r9, lsl #16
   228a4:	mov	r6, #0
   228a8:	mov	r1, r6
   228ac:	add	sp, sp, #12
   228b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228b4:	cmp	r3, r1
   228b8:	movhi	r6, #0
   228bc:	movhi	r0, r6
   228c0:	bhi	228a8 <close_stdout@@Base+0x8664>
   228c4:	clz	r7, r3
   228c8:	cmp	r7, #0
   228cc:	bne	229cc <close_stdout@@Base+0x8788>
   228d0:	cmp	r3, r1
   228d4:	cmpcs	r2, r6
   228d8:	movhi	r6, #0
   228dc:	movls	r6, #1
   228e0:	movls	r0, #1
   228e4:	movls	r6, r7
   228e8:	movhi	r0, r6
   228ec:	b	228a8 <close_stdout@@Base+0x8664>
   228f0:	cmp	r2, #0
   228f4:	bne	22908 <close_stdout@@Base+0x86c4>
   228f8:	mov	r1, r2
   228fc:	mov	r0, #1
   22900:	bl	22058 <close_stdout@@Base+0x7e14>
   22904:	mov	r4, r0
   22908:	clz	r3, r4
   2290c:	cmp	r3, #0
   22910:	bne	22ac8 <close_stdout@@Base+0x8884>
   22914:	rsb	r5, r4, r5
   22918:	lsr	r8, r4, #16
   2291c:	uxth	sl, r4
   22920:	mov	r6, #1
   22924:	mov	r1, r8
   22928:	mov	r0, r5
   2292c:	bl	22058 <close_stdout@@Base+0x7e14>
   22930:	mov	r1, r8
   22934:	mov	r9, r0
   22938:	mov	r0, r5
   2293c:	bl	22244 <close_stdout@@Base+0x8000>
   22940:	mul	r0, sl, r9
   22944:	lsr	r3, r7, #16
   22948:	orr	r1, r3, r1, lsl #16
   2294c:	cmp	r0, r1
   22950:	bls	22970 <close_stdout@@Base+0x872c>
   22954:	adds	r1, r1, r4
   22958:	sub	r2, r9, #1
   2295c:	bcs	22ba4 <close_stdout@@Base+0x8960>
   22960:	cmp	r0, r1
   22964:	subhi	r9, r9, #2
   22968:	addhi	r1, r1, r4
   2296c:	bls	22ba4 <close_stdout@@Base+0x8960>
   22970:	rsb	fp, r0, r1
   22974:	mov	r1, r8
   22978:	uxth	r7, r7
   2297c:	mov	r0, fp
   22980:	bl	22058 <close_stdout@@Base+0x7e14>
   22984:	mov	r1, r8
   22988:	mov	r5, r0
   2298c:	mov	r0, fp
   22990:	bl	22244 <close_stdout@@Base+0x8000>
   22994:	mul	sl, sl, r5
   22998:	orr	r1, r7, r1, lsl #16
   2299c:	cmp	sl, r1
   229a0:	bls	229bc <close_stdout@@Base+0x8778>
   229a4:	adds	r4, r1, r4
   229a8:	sub	r3, r5, #1
   229ac:	bcs	22bac <close_stdout@@Base+0x8968>
   229b0:	cmp	sl, r4
   229b4:	subhi	r5, r5, #2
   229b8:	bls	22bac <close_stdout@@Base+0x8968>
   229bc:	orr	r0, r5, r9, lsl #16
   229c0:	mov	r1, r6
   229c4:	add	sp, sp, #12
   229c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229cc:	rsb	r1, r7, #32
   229d0:	lsl	r0, r2, r7
   229d4:	lsr	r2, r2, r1
   229d8:	lsr	fp, r5, r1
   229dc:	orr	r8, r2, r3, lsl r7
   229e0:	lsr	r1, r6, r1
   229e4:	str	r0, [sp, #4]
   229e8:	orr	r5, r1, r5, lsl r7
   229ec:	lsr	r9, r8, #16
   229f0:	mov	r0, fp
   229f4:	uxth	sl, r8
   229f8:	mov	r1, r9
   229fc:	bl	22058 <close_stdout@@Base+0x7e14>
   22a00:	mov	r1, r9
   22a04:	mov	r4, r0
   22a08:	mov	r0, fp
   22a0c:	bl	22244 <close_stdout@@Base+0x8000>
   22a10:	mul	r0, sl, r4
   22a14:	lsr	ip, r5, #16
   22a18:	orr	r1, ip, r1, lsl #16
   22a1c:	cmp	r0, r1
   22a20:	bls	22a34 <close_stdout@@Base+0x87f0>
   22a24:	adds	r1, r1, r8
   22a28:	sub	r2, r4, #1
   22a2c:	bcc	22bc8 <close_stdout@@Base+0x8984>
   22a30:	mov	r4, r2
   22a34:	rsb	ip, r0, r1
   22a38:	mov	r1, r9
   22a3c:	str	ip, [sp]
   22a40:	uxth	r5, r5
   22a44:	mov	r0, ip
   22a48:	bl	22058 <close_stdout@@Base+0x7e14>
   22a4c:	ldr	ip, [sp]
   22a50:	mov	r1, r9
   22a54:	mov	fp, r0
   22a58:	mov	r0, ip
   22a5c:	bl	22244 <close_stdout@@Base+0x8000>
   22a60:	mul	sl, sl, fp
   22a64:	orr	r1, r5, r1, lsl #16
   22a68:	cmp	sl, r1
   22a6c:	bls	22a80 <close_stdout@@Base+0x883c>
   22a70:	adds	r1, r1, r8
   22a74:	sub	r2, fp, #1
   22a78:	bcc	22bb4 <close_stdout@@Base+0x8970>
   22a7c:	mov	fp, r2
   22a80:	ldr	r3, [sp, #4]
   22a84:	orr	r0, fp, r4, lsl #16
   22a88:	rsb	sl, sl, r1
   22a8c:	umull	r4, r5, r0, r3
   22a90:	cmp	sl, r5
   22a94:	bcc	22ab4 <close_stdout@@Base+0x8870>
   22a98:	movne	r3, #0
   22a9c:	moveq	r3, #1
   22aa0:	cmp	r4, r6, lsl r7
   22aa4:	movls	r6, #0
   22aa8:	andhi	r6, r3, #1
   22aac:	cmp	r6, #0
   22ab0:	beq	228a8 <close_stdout@@Base+0x8664>
   22ab4:	mov	r6, #0
   22ab8:	sub	r0, r0, #1
   22abc:	mov	r1, r6
   22ac0:	add	sp, sp, #12
   22ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ac8:	lsl	r4, r4, r3
   22acc:	rsb	r9, r3, #32
   22ad0:	lsr	r2, r5, r9
   22ad4:	lsr	r9, r6, r9
   22ad8:	lsr	r8, r4, #16
   22adc:	orr	r9, r9, r5, lsl r3
   22ae0:	mov	r0, r2
   22ae4:	lsl	r7, r6, r3
   22ae8:	mov	r1, r8
   22aec:	str	r2, [sp]
   22af0:	bl	22058 <close_stdout@@Base+0x7e14>
   22af4:	ldr	r2, [sp]
   22af8:	mov	r1, r8
   22afc:	uxth	sl, r4
   22b00:	mov	fp, r0
   22b04:	mov	r0, r2
   22b08:	bl	22244 <close_stdout@@Base+0x8000>
   22b0c:	mul	r0, sl, fp
   22b10:	lsr	r3, r9, #16
   22b14:	orr	r1, r3, r1, lsl #16
   22b18:	cmp	r0, r1
   22b1c:	bls	22b3c <close_stdout@@Base+0x88f8>
   22b20:	adds	r1, r1, r4
   22b24:	sub	r3, fp, #1
   22b28:	bcs	22bdc <close_stdout@@Base+0x8998>
   22b2c:	cmp	r0, r1
   22b30:	subhi	fp, fp, #2
   22b34:	addhi	r1, r1, r4
   22b38:	bls	22bdc <close_stdout@@Base+0x8998>
   22b3c:	rsb	r5, r0, r1
   22b40:	mov	r1, r8
   22b44:	uxth	r9, r9
   22b48:	mov	r0, r5
   22b4c:	bl	22058 <close_stdout@@Base+0x7e14>
   22b50:	mov	r1, r8
   22b54:	mov	r6, r0
   22b58:	mov	r0, r5
   22b5c:	bl	22244 <close_stdout@@Base+0x8000>
   22b60:	mul	r5, sl, r6
   22b64:	orr	r1, r9, r1, lsl #16
   22b68:	cmp	r5, r1
   22b6c:	bls	22b90 <close_stdout@@Base+0x894c>
   22b70:	adds	r1, r1, r4
   22b74:	sub	r3, r6, #1
   22b78:	bcs	22b8c <close_stdout@@Base+0x8948>
   22b7c:	cmp	r5, r1
   22b80:	subhi	r6, r6, #2
   22b84:	addhi	r1, r1, r4
   22b88:	bhi	22b90 <close_stdout@@Base+0x894c>
   22b8c:	mov	r6, r3
   22b90:	rsb	r5, r5, r1
   22b94:	orr	r6, r6, fp, lsl #16
   22b98:	b	22924 <close_stdout@@Base+0x86e0>
   22b9c:	mov	r6, r3
   22ba0:	b	228a0 <close_stdout@@Base+0x865c>
   22ba4:	mov	r9, r2
   22ba8:	b	22970 <close_stdout@@Base+0x872c>
   22bac:	mov	r5, r3
   22bb0:	b	229bc <close_stdout@@Base+0x8778>
   22bb4:	cmp	sl, r1
   22bb8:	subhi	fp, fp, #2
   22bbc:	addhi	r1, r1, r8
   22bc0:	bhi	22a80 <close_stdout@@Base+0x883c>
   22bc4:	b	22a7c <close_stdout@@Base+0x8838>
   22bc8:	cmp	r0, r1
   22bcc:	subhi	r4, r4, #2
   22bd0:	addhi	r1, r1, r8
   22bd4:	bhi	22a34 <close_stdout@@Base+0x87f0>
   22bd8:	b	22a30 <close_stdout@@Base+0x87ec>
   22bdc:	mov	fp, r3
   22be0:	b	22b3c <close_stdout@@Base+0x88f8>
   22be4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   22be8:	mov	r7, r0
   22bec:	ldr	r6, [pc, #76]	; 22c40 <close_stdout@@Base+0x89fc>
   22bf0:	mov	r8, r1
   22bf4:	ldr	r5, [pc, #72]	; 22c44 <close_stdout@@Base+0x8a00>
   22bf8:	mov	r9, r2
   22bfc:	add	r6, pc, r6
   22c00:	bl	117b0 <_init@@Base>
   22c04:	add	r5, pc, r5
   22c08:	rsb	r6, r5, r6
   22c0c:	asrs	r6, r6, #2
   22c10:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   22c14:	sub	r5, r5, #4
   22c18:	mov	r4, #0
   22c1c:	add	r4, r4, #1
   22c20:	ldr	r3, [r5, #4]!
   22c24:	mov	r0, r7
   22c28:	mov	r1, r8
   22c2c:	mov	r2, r9
   22c30:	blx	r3
   22c34:	cmp	r4, r6
   22c38:	bne	22c1c <close_stdout@@Base+0x89d8>
   22c3c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   22c40:	muleq	r1, r0, r2
   22c44:	andeq	r4, r1, r4, lsl #5
   22c48:	bx	lr
   22c4c:	ldr	r3, [pc, #28]	; 22c70 <close_stdout@@Base+0x8a2c>
   22c50:	mov	r1, #0
   22c54:	ldr	r2, [pc, #24]	; 22c74 <close_stdout@@Base+0x8a30>
   22c58:	add	r3, pc, r3
   22c5c:	ldr	r3, [r3, r2]
   22c60:	cmp	r3, #0
   22c64:	ldrne	r2, [r3]
   22c68:	moveq	r2, r3
   22c6c:	b	11ac4 <__cxa_atexit@plt>
   22c70:	andeq	r4, r1, r0, lsr #7
   22c74:	andeq	r0, r0, r4, lsr #3

Disassembly of section .fini:

00022c78 <_fini@@Base>:
   22c78:	push	{r3, lr}
   22c7c:	pop	{r3, pc}
