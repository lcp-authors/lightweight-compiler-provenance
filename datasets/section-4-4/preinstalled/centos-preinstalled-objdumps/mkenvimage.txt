
centos-preinstalled/mkenvimage:     file format elf32-littlearm


Disassembly of section .init:

000107f4 <.init>:
   107f4:	push	{r3, lr}
   107f8:	bl	11154 <close@plt+0x82c>
   107fc:	pop	{r3, pc}

Disassembly of section .plt:

00010800 <strtol@plt-0x14>:
   10800:	push	{lr}		; (str lr, [sp, #-4]!)
   10804:	ldr	lr, [pc, #4]	; 10810 <strtol@plt-0x4>
   10808:	add	lr, pc, lr
   1080c:	ldr	pc, [lr, #8]!
   10810:	strdeq	r1, [r1], -r0

00010814 <strtol@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2032]!	; 0x7f0

00010820 <read@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2024]!	; 0x7e8

0001082c <__stack_chk_fail@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2016]!	; 0x7e0

00010838 <realloc@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2008]!	; 0x7d8

00010844 <fwrite@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2000]!	; 0x7d0

00010850 <malloc@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #1992]!	; 0x7c8

0001085c <__libc_start_main@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1984]!	; 0x7c0

00010868 <strerror@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1976]!	; 0x7b8

00010874 <__fxstat@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1968]!	; 0x7b0

00010880 <__gmon_start__@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1960]!	; 0x7a8

0001088c <open@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1952]!	; 0x7a0

00010898 <exit@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1944]!	; 0x798

000108a4 <mmap@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1936]!	; 0x790

000108b0 <getopt@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1928]!	; 0x788

000108bc <creat@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1920]!	; 0x780

000108c8 <__errno_location@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1912]!	; 0x778

000108d4 <__strdup@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1904]!	; 0x770

000108e0 <memset@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1896]!	; 0x768

000108ec <__xpg_basename@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1888]!	; 0x760

000108f8 <__printf_chk@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1880]!	; 0x758

00010904 <write@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1872]!	; 0x750

00010910 <__fprintf_chk@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1864]!	; 0x748

0001091c <abort@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1856]!	; 0x740

00010928 <close@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1848]!	; 0x738

Disassembly of section .text:

00010934 <.text>:
   10934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10938:	movw	r5, #7936	; 0x1f00
   1093c:	movt	r5, #2
   10940:	sub	sp, sp, #140	; 0x8c
   10944:	mov	r9, r0
   10948:	ldr	r0, [r1]
   1094c:	ldr	r3, [r5]
   10950:	mov	r2, #255	; 0xff
   10954:	mov	r7, r1
   10958:	str	r2, [sp, #12]
   1095c:	movw	r4, #6036	; 0x1794
   10960:	movw	r8, #8336	; 0x2090
   10964:	str	r3, [sp, #132]	; 0x84
   10968:	bl	108ec <__xpg_basename@plt>
   1096c:	movt	r4, #1
   10970:	mov	r2, #0
   10974:	movw	r3, #8328	; 0x2088
   10978:	movt	r8, #2
   1097c:	movt	r3, #2
   10980:	mov	r6, r2
   10984:	mov	fp, r2
   10988:	str	r2, [sp, #16]
   1098c:	str	r2, [r3]
   10990:	str	r2, [sp, #20]
   10994:	mov	sl, r0
   10998:	mov	r2, r4
   1099c:	mov	r1, r7
   109a0:	mov	r0, r9
   109a4:	bl	108b0 <getopt@plt>
   109a8:	cmn	r0, #1
   109ac:	beq	10be8 <close@plt+0x2c0>
   109b0:	sub	r0, r0, #58	; 0x3a
   109b4:	cmp	r0, #57	; 0x39
   109b8:	ldrls	pc, [pc, r0, lsl #2]
   109bc:	b	10bc4 <close@plt+0x29c>
   109c0:	andeq	r0, r1, ip, ror #21
   109c4:	andeq	r0, r1, r4, asr #23
   109c8:	andeq	r0, r1, r4, asr #23
   109cc:	andeq	r0, r1, r4, asr #23
   109d0:	andeq	r0, r1, r4, asr #23
   109d4:	andeq	r0, r1, r4, asr #23
   109d8:	andeq	r0, r1, r4, asr #23
   109dc:	andeq	r0, r1, r4, asr #23
   109e0:	andeq	r0, r1, r4, asr #23
   109e4:	andeq	r0, r1, r4, asr #23
   109e8:	andeq	r0, r1, r4, asr #23
   109ec:	andeq	r0, r1, r4, asr #23
   109f0:	andeq	r0, r1, r4, asr #23
   109f4:	andeq	r0, r1, r4, asr #23
   109f8:	andeq	r0, r1, r4, asr #23
   109fc:	andeq	r0, r1, r4, asr #23
   10a00:	andeq	r0, r1, r4, asr #23
   10a04:	andeq	r0, r1, r4, asr #23
   10a08:	andeq	r0, r1, r4, asr #23
   10a0c:	andeq	r0, r1, r4, asr #23
   10a10:	andeq	r0, r1, r4, asr #23
   10a14:	andeq	r0, r1, r4, asr #23
   10a18:	andeq	r0, r1, r4, asr #23
   10a1c:	andeq	r0, r1, r4, asr #23
   10a20:	andeq	r0, r1, r4, asr #23
   10a24:	andeq	r0, r1, r4, asr #23
   10a28:	andeq	r0, r1, r4, asr #23
   10a2c:	andeq	r0, r1, r4, asr #23
   10a30:			; <UNDEFINED> instruction: 0x00010ab4
   10a34:	andeq	r0, r1, r4, asr #23
   10a38:	andeq	r0, r1, r4, asr #23
   10a3c:	andeq	r0, r1, r4, asr #23
   10a40:	andeq	r0, r1, r4, asr #23
   10a44:	andeq	r0, r1, r4, asr #23
   10a48:	andeq	r0, r1, r4, asr #23
   10a4c:	andeq	r0, r1, r4, asr #23
   10a50:	andeq	r0, r1, r4, asr #23
   10a54:	andeq	r0, r1, r4, asr #23
   10a58:	andeq	r0, r1, r4, asr #23
   10a5c:	andeq	r0, r1, r4, asr #23
   10a60:	andeq	r0, r1, r8, lsr #21
   10a64:	andeq	r0, r1, r4, asr #23
   10a68:	andeq	r0, r1, r4, asr #23
   10a6c:	andeq	r0, r1, r4, asr #23
   10a70:	andeq	r0, r1, r4, asr #23
   10a74:	andeq	r0, r1, r4, asr #23
   10a78:	muleq	r1, ip, fp
   10a7c:	andeq	r0, r1, r4, asr #23
   10a80:	andeq	r0, r1, r4, asr #23
   10a84:	andeq	r0, r1, r4, asr #23
   10a88:	andeq	r0, r1, r4, asr #23
   10a8c:	andeq	r0, r1, r4, asr #23
   10a90:	andeq	r0, r1, r4, asr #23
   10a94:	andeq	r0, r1, r0, ror #22
   10a98:	andeq	r0, r1, ip, asr #22
   10a9c:	andeq	r0, r1, r4, asr #23
   10aa0:	andeq	r0, r1, r4, asr #22
   10aa4:	andeq	r0, r1, r4, lsr fp
   10aa8:	mov	r3, #1
   10aac:	str	r3, [sp, #16]
   10ab0:	b	10998 <close@plt+0x70>
   10ab4:	mov	r2, sl
   10ab8:	movw	r3, #5956	; 0x1744
   10abc:	movw	r1, #5964	; 0x174c
   10ac0:	movt	r3, #1
   10ac4:	movt	r1, #1
   10ac8:	mov	r0, #1
   10acc:	bl	108f8 <__printf_chk@plt>
   10ad0:	mov	r0, #0
   10ad4:	ldr	r2, [sp, #132]	; 0x84
   10ad8:	ldr	r3, [r5]
   10adc:	cmp	r2, r3
   10ae0:	bne	110ec <close@plt+0x7c4>
   10ae4:	add	sp, sp, #140	; 0x8c
   10ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10aec:	movw	r3, #8320	; 0x2080
   10af0:	movt	r3, #2
   10af4:	movw	r4, #8324	; 0x2084
   10af8:	movw	r2, #5980	; 0x175c
   10afc:	ldr	r3, [r3]
   10b00:	movt	r4, #2
   10b04:	movt	r2, #1
   10b08:	mov	r1, #1
   10b0c:	ldr	r0, [r4]
   10b10:	bl	10910 <__fprintf_chk@plt>
   10b14:	mov	r3, sl
   10b18:	ldr	r0, [r4]
   10b1c:	movw	r2, #5272	; 0x1498
   10b20:	mov	r1, #1
   10b24:	movt	r2, #1
   10b28:	bl	10910 <__fprintf_chk@plt>
   10b2c:	mov	r0, #1
   10b30:	b	10ad4 <close@plt+0x1ac>
   10b34:	ldr	r0, [r8]
   10b38:	bl	11208 <close@plt+0x8e0>
   10b3c:	mov	fp, r0
   10b40:	b	10998 <close@plt+0x70>
   10b44:	mov	r6, #1
   10b48:	b	10998 <close@plt+0x70>
   10b4c:	ldr	r0, [r8]
   10b50:	bl	11208 <close@plt+0x8e0>
   10b54:	uxtb	r3, r0
   10b58:	str	r3, [sp, #12]
   10b5c:	b	10998 <close@plt+0x70>
   10b60:	ldr	r0, [r8]
   10b64:	bl	108d4 <__strdup@plt>
   10b68:	subs	r3, r0, #0
   10b6c:	str	r3, [sp, #20]
   10b70:	bne	10998 <close@plt+0x70>
   10b74:	movw	r3, #8324	; 0x2084
   10b78:	movt	r3, #2
   10b7c:	movw	r0, #5236	; 0x1474
   10b80:	mov	r2, #35	; 0x23
   10b84:	ldr	r3, [r3]
   10b88:	movt	r0, #1
   10b8c:	mov	r1, #1
   10b90:	bl	10844 <fwrite@plt>
   10b94:	mov	r0, #1
   10b98:	b	10ad4 <close@plt+0x1ac>
   10b9c:	movw	r1, #8324	; 0x2084
   10ba0:	movt	r1, #2
   10ba4:	mov	r3, sl
   10ba8:	movw	r2, #5272	; 0x1498
   10bac:	ldr	r0, [r1]
   10bb0:	movt	r2, #1
   10bb4:	mov	r1, #1
   10bb8:	bl	10910 <__fprintf_chk@plt>
   10bbc:	mov	r0, #0
   10bc0:	b	10ad4 <close@plt+0x1ac>
   10bc4:	movw	r3, #8320	; 0x2080
   10bc8:	movt	r3, #2
   10bcc:	movw	r4, #8324	; 0x2084
   10bd0:	movw	r2, #6016	; 0x1780
   10bd4:	movt	r4, #2
   10bd8:	mov	r1, #1
   10bdc:	ldr	r3, [r3]
   10be0:	movt	r2, #1
   10be4:	b	10b0c <close@plt+0x1e4>
   10be8:	cmp	fp, #0
   10bec:	beq	10db8 <close@plt+0x490>
   10bf0:	mov	r0, fp
   10bf4:	bl	10850 <malloc@plt>
   10bf8:	subs	sl, r0, #0
   10bfc:	beq	10eb4 <close@plt+0x58c>
   10c00:	add	r8, r6, #4
   10c04:	sub	r4, fp, r6
   10c08:	add	r8, sl, r8
   10c0c:	sub	r2, r4, #4
   10c10:	ldr	r1, [sp, #12]
   10c14:	mov	r0, r8
   10c18:	str	r2, [sp, #24]
   10c1c:	bl	108e0 <memset@plt>
   10c20:	movw	r3, #8312	; 0x2078
   10c24:	movt	r3, #2
   10c28:	ldr	r3, [r3]
   10c2c:	cmp	r3, r9
   10c30:	bge	10e00 <close@plt+0x4d8>
   10c34:	ldr	r9, [r7, r3, lsl #2]
   10c38:	ldrb	r3, [r9]
   10c3c:	cmp	r3, #45	; 0x2d
   10c40:	beq	10ea4 <close@plt+0x57c>
   10c44:	mov	r1, #0
   10c48:	mov	r0, r9
   10c4c:	bl	1088c <open@plt>
   10c50:	cmn	r0, #1
   10c54:	str	r0, [sp, #28]
   10c58:	beq	10fdc <close@plt+0x6b4>
   10c5c:	add	r2, sp, #40	; 0x28
   10c60:	ldr	r1, [sp, #28]
   10c64:	mov	r0, #3
   10c68:	bl	10874 <__fxstat@plt>
   10c6c:	cmn	r0, #1
   10c70:	beq	11018 <close@plt+0x6f0>
   10c74:	ldr	r3, [sp, #84]	; 0x54
   10c78:	ldr	r2, [sp, #28]
   10c7c:	mov	r7, r3
   10c80:	str	r3, [sp, #12]
   10c84:	mov	r3, #0
   10c88:	str	r2, [sp]
   10c8c:	mov	r0, r3
   10c90:	str	r3, [sp, #4]
   10c94:	mov	r1, r7
   10c98:	mov	r3, #2
   10c9c:	mov	r2, #1
   10ca0:	bl	108a4 <mmap@plt>
   10ca4:	cmn	r0, #1
   10ca8:	mov	r9, r0
   10cac:	beq	11040 <close@plt+0x718>
   10cb0:	ldr	r0, [sp, #28]
   10cb4:	bl	10928 <close@plt>
   10cb8:	mov	r2, #0
   10cbc:	sub	r4, r4, #5
   10cc0:	mov	r3, r2
   10cc4:	mov	lr, r2
   10cc8:	b	10cf0 <close@plt+0x3c8>
   10ccc:	cmp	r3, #0
   10cd0:	beq	10ddc <close@plt+0x4b4>
   10cd4:	add	ip, r9, r3
   10cd8:	ldrb	ip, [ip, #-1]
   10cdc:	cmp	ip, #10
   10ce0:	beq	10ddc <close@plt+0x4b4>
   10ce4:	add	r2, r2, #1
   10ce8:	strb	r1, [r8, r0]
   10cec:	add	r3, r3, #1
   10cf0:	cmp	r3, r7
   10cf4:	mov	r0, r2
   10cf8:	bcs	10edc <close@plt+0x5b4>
   10cfc:	cmp	r4, r2
   10d00:	bls	10d5c <close@plt+0x434>
   10d04:	ldrb	r1, [r9, r3]
   10d08:	cmp	r1, #10
   10d0c:	bne	10ccc <close@plt+0x3a4>
   10d10:	cmp	r3, #0
   10d14:	beq	10cec <close@plt+0x3c4>
   10d18:	add	ip, r9, r3
   10d1c:	ldrb	ip, [ip, #-1]
   10d20:	cmp	ip, #10
   10d24:	beq	10cec <close@plt+0x3c4>
   10d28:	cmp	ip, #92	; 0x5c
   10d2c:	strbne	lr, [r8, r0]
   10d30:	addeq	r0, r8, r2
   10d34:	addne	r2, r2, #1
   10d38:	strbeq	r1, [r0, #-1]
   10d3c:	b	10cec <close@plt+0x3c4>
   10d40:	add	r3, r3, #1
   10d44:	cmp	r7, r3
   10d48:	bls	10d58 <close@plt+0x430>
   10d4c:	ldrb	r1, [r9, r3]
   10d50:	cmp	r1, #10
   10d54:	bne	10d40 <close@plt+0x418>
   10d58:	add	r3, r3, #1
   10d5c:	cmp	r3, r7
   10d60:	bcs	10edc <close@plt+0x5b4>
   10d64:	ldrb	r1, [r9, r3]
   10d68:	cmp	r1, #10
   10d6c:	beq	10d58 <close@plt+0x430>
   10d70:	cmp	r3, #0
   10d74:	beq	10d88 <close@plt+0x460>
   10d78:	add	r0, r9, r3
   10d7c:	ldrb	r0, [r0, #-1]
   10d80:	cmp	r0, #10
   10d84:	bne	10d90 <close@plt+0x468>
   10d88:	cmp	r1, #35	; 0x23
   10d8c:	beq	10d40 <close@plt+0x418>
   10d90:	movw	r3, #8324	; 0x2084
   10d94:	movt	r3, #2
   10d98:	movw	r0, #6380	; 0x18ec
   10d9c:	mov	r2, #69	; 0x45
   10da0:	ldr	r3, [r3]
   10da4:	movt	r0, #1
   10da8:	mov	r1, #1
   10dac:	bl	10844 <fwrite@plt>
   10db0:	mov	r0, #1
   10db4:	b	10ad4 <close@plt+0x1ac>
   10db8:	movw	r4, #8324	; 0x2084
   10dbc:	movt	r4, #2
   10dc0:	movw	r0, #6048	; 0x17a0
   10dc4:	mov	r2, #54	; 0x36
   10dc8:	ldr	r3, [r4]
   10dcc:	mov	r1, #1
   10dd0:	movt	r0, #1
   10dd4:	bl	10844 <fwrite@plt>
   10dd8:	b	10b14 <close@plt+0x1ec>
   10ddc:	cmp	r1, #35	; 0x23
   10de0:	bne	10ce4 <close@plt+0x3bc>
   10de4:	add	r3, r3, #1
   10de8:	cmp	r3, r7
   10dec:	bcs	10cec <close@plt+0x3c4>
   10df0:	ldrb	r1, [r9, r3]
   10df4:	cmp	r1, #10
   10df8:	beq	10cec <close@plt+0x3c4>
   10dfc:	b	10de4 <close@plt+0x4bc>
   10e00:	mov	r7, #0
   10e04:	mov	r9, r7
   10e08:	b	10e30 <close@plt+0x508>
   10e0c:	mov	r2, #4096	; 0x1000
   10e10:	add	r1, r9, r7
   10e14:	mov	r0, #0
   10e18:	bl	10820 <read@plt>
   10e1c:	cmp	r0, #0
   10e20:	blt	10e6c <close@plt+0x544>
   10e24:	cmp	r0, #4096	; 0x1000
   10e28:	add	r7, r7, r0
   10e2c:	bne	10cb8 <close@plt+0x390>
   10e30:	mov	r0, r9
   10e34:	add	r1, r7, #4096	; 0x1000
   10e38:	bl	10838 <realloc@plt>
   10e3c:	subs	r9, r0, #0
   10e40:	bne	10e0c <close@plt+0x4e4>
   10e44:	movw	r3, #8324	; 0x2084
   10e48:	movt	r3, #2
   10e4c:	movw	r0, #6140	; 0x17fc
   10e50:	mov	r2, #47	; 0x2f
   10e54:	ldr	r3, [r3]
   10e58:	movt	r0, #1
   10e5c:	mov	r1, #1
   10e60:	bl	10844 <fwrite@plt>
   10e64:	mov	r0, #1
   10e68:	b	10ad4 <close@plt+0x1ac>
   10e6c:	movw	r3, #8324	; 0x2084
   10e70:	movt	r3, #2
   10e74:	ldr	r4, [r3]
   10e78:	bl	108c8 <__errno_location@plt>
   10e7c:	ldr	r0, [r0]
   10e80:	bl	10868 <strerror@plt>
   10e84:	movw	r2, #6188	; 0x182c
   10e88:	mov	r1, #1
   10e8c:	movt	r2, #1
   10e90:	mov	r3, r0
   10e94:	mov	r0, r4
   10e98:	bl	10910 <__fprintf_chk@plt>
   10e9c:	mov	r0, #1
   10ea0:	b	10ad4 <close@plt+0x1ac>
   10ea4:	ldrb	r7, [r9, #1]
   10ea8:	cmp	r7, #0
   10eac:	beq	10e04 <close@plt+0x4dc>
   10eb0:	b	10c44 <close@plt+0x31c>
   10eb4:	movw	r1, #8324	; 0x2084
   10eb8:	movt	r1, #2
   10ebc:	mov	r3, fp
   10ec0:	movw	r2, #6104	; 0x17d8
   10ec4:	ldr	r0, [r1]
   10ec8:	movt	r2, #1
   10ecc:	mov	r1, #1
   10ed0:	bl	10910 <__fprintf_chk@plt>
   10ed4:	mov	r0, #1
   10ed8:	b	10ad4 <close@plt+0x1ac>
   10edc:	add	r3, r8, r2
   10ee0:	ldrb	r3, [r3, #-1]
   10ee4:	cmp	r3, #0
   10ee8:	beq	10fb4 <close@plt+0x68c>
   10eec:	ldr	r0, [sp, #24]
   10ef0:	add	r3, r2, #1
   10ef4:	mov	r1, #0
   10ef8:	strb	r1, [r8, r2]
   10efc:	cmp	r3, r0
   10f00:	strbcc	r1, [r8, r3]
   10f04:	bcs	10d90 <close@plt+0x468>
   10f08:	ldr	r2, [sp, #24]
   10f0c:	mov	r1, r8
   10f10:	mov	r0, #0
   10f14:	bl	11378 <close@plt+0xa50>
   10f18:	ldr	r3, [sp, #16]
   10f1c:	ldr	r2, [sp, #20]
   10f20:	cmp	r3, #0
   10f24:	revne	r0, r0
   10f28:	cmp	r6, #0
   10f2c:	str	r0, [sl]
   10f30:	movne	r3, #1
   10f34:	strbne	r3, [sl, #4]
   10f38:	cmp	r2, #0
   10f3c:	beq	10fc8 <close@plt+0x6a0>
   10f40:	ldrb	r3, [r2]
   10f44:	cmp	r3, #45	; 0x2d
   10f48:	beq	10fbc <close@plt+0x694>
   10f4c:	mov	r1, #432	; 0x1b0
   10f50:	ldr	r0, [sp, #20]
   10f54:	bl	108bc <creat@plt>
   10f58:	cmn	r0, #1
   10f5c:	mov	r4, r0
   10f60:	beq	110f0 <close@plt+0x7c8>
   10f64:	mov	r1, sl
   10f68:	mov	r2, fp
   10f6c:	mov	r0, r4
   10f70:	bl	10904 <write@plt>
   10f74:	cmp	r0, fp
   10f78:	beq	10fd0 <close@plt+0x6a8>
   10f7c:	movw	r3, #8324	; 0x2084
   10f80:	movt	r3, #2
   10f84:	ldr	r4, [r3]
   10f88:	bl	108c8 <__errno_location@plt>
   10f8c:	ldr	r0, [r0]
   10f90:	bl	10868 <strerror@plt>
   10f94:	movw	r2, #6488	; 0x1958
   10f98:	mov	r1, #1
   10f9c:	movt	r2, #1
   10fa0:	mov	r3, r0
   10fa4:	mov	r0, r4
   10fa8:	bl	10910 <__fprintf_chk@plt>
   10fac:	mov	r0, #1
   10fb0:	b	10ad4 <close@plt+0x1ac>
   10fb4:	strb	r3, [r8, r2]
   10fb8:	b	10f08 <close@plt+0x5e0>
   10fbc:	ldrb	r3, [r2, #1]
   10fc0:	cmp	r3, #0
   10fc4:	bne	10f4c <close@plt+0x624>
   10fc8:	mov	r4, #1
   10fcc:	b	10f64 <close@plt+0x63c>
   10fd0:	mov	r0, r4
   10fd4:	bl	10928 <close@plt>
   10fd8:	b	10ad4 <close@plt+0x1ac>
   10fdc:	movw	r3, #8324	; 0x2084
   10fe0:	movt	r3, #2
   10fe4:	ldr	r4, [r3]
   10fe8:	bl	108c8 <__errno_location@plt>
   10fec:	ldr	r0, [r0]
   10ff0:	bl	10868 <strerror@plt>
   10ff4:	movw	r2, #6220	; 0x184c
   10ff8:	movt	r2, #1
   10ffc:	mov	r3, r9
   11000:	str	r0, [sp]
   11004:	mov	r1, #1
   11008:	mov	r0, r4
   1100c:	bl	10910 <__fprintf_chk@plt>
   11010:	mov	r0, #1
   11014:	b	10ad4 <close@plt+0x1ac>
   11018:	movw	r3, #8324	; 0x2084
   1101c:	movt	r3, #2
   11020:	ldr	r4, [r3]
   11024:	bl	108c8 <__errno_location@plt>
   11028:	ldr	r0, [r0]
   1102c:	bl	10868 <strerror@plt>
   11030:	movw	r2, #6244	; 0x1864
   11034:	mov	r3, r9
   11038:	movt	r2, #1
   1103c:	b	11000 <close@plt+0x6d8>
   11040:	movw	r3, #8324	; 0x2084
   11044:	mov	r9, r3
   11048:	bl	108c8 <__errno_location@plt>
   1104c:	mov	r3, r9
   11050:	movt	r3, #2
   11054:	str	r3, [sp, #32]
   11058:	ldr	r9, [r3]
   1105c:	str	r0, [sp, #36]	; 0x24
   11060:	ldr	r0, [r0]
   11064:	bl	10868 <strerror@plt>
   11068:	ldr	r3, [sp, #12]
   1106c:	mov	r1, #1
   11070:	movw	r2, #6272	; 0x1880
   11074:	movt	r2, #1
   11078:	str	r0, [sp]
   1107c:	mov	r0, r9
   11080:	bl	10910 <__fprintf_chk@plt>
   11084:	ldr	r3, [sp, #32]
   11088:	mov	r2, #23
   1108c:	mov	r1, #1
   11090:	movw	r0, #6304	; 0x18a0
   11094:	movt	r0, #1
   11098:	ldr	r3, [r3]
   1109c:	bl	10844 <fwrite@plt>
   110a0:	ldr	r0, [sp, #12]
   110a4:	bl	10850 <malloc@plt>
   110a8:	ldr	r2, [sp, #12]
   110ac:	mov	r1, r0
   110b0:	mov	r9, r0
   110b4:	ldr	r0, [sp, #28]
   110b8:	bl	10820 <read@plt>
   110bc:	ldr	r3, [sp, #12]
   110c0:	cmp	r3, r0
   110c4:	beq	10cb0 <close@plt+0x388>
   110c8:	ldr	r0, [sp, #36]	; 0x24
   110cc:	ldr	r3, [sp, #32]
   110d0:	ldr	r0, [r0]
   110d4:	ldr	r4, [r3]
   110d8:	bl	10868 <strerror@plt>
   110dc:	movw	r2, #6328	; 0x18b8
   110e0:	ldr	r3, [sp, #12]
   110e4:	movt	r2, #1
   110e8:	b	11000 <close@plt+0x6d8>
   110ec:	bl	1082c <__stack_chk_fail@plt>
   110f0:	movw	r3, #8324	; 0x2084
   110f4:	movt	r3, #2
   110f8:	ldr	r4, [r3]
   110fc:	bl	108c8 <__errno_location@plt>
   11100:	ldr	r0, [r0]
   11104:	bl	10868 <strerror@plt>
   11108:	movw	r2, #6452	; 0x1934
   1110c:	ldr	r3, [sp, #20]
   11110:	movt	r2, #1
   11114:	b	11000 <close@plt+0x6d8>
   11118:	mov	fp, #0
   1111c:	mov	lr, #0
   11120:	pop	{r1}		; (ldr r1, [sp], #4)
   11124:	mov	r2, sp
   11128:	push	{r2}		; (str r2, [sp, #-4]!)
   1112c:	push	{r0}		; (str r0, [sp, #-4]!)
   11130:	ldr	ip, [pc, #16]	; 11148 <close@plt+0x820>
   11134:	push	{ip}		; (str ip, [sp, #-4]!)
   11138:	ldr	r0, [pc, #12]	; 1114c <close@plt+0x824>
   1113c:	ldr	r3, [pc, #12]	; 11150 <close@plt+0x828>
   11140:	bl	1085c <__libc_start_main@plt>
   11144:	bl	1091c <abort@plt>
   11148:	andeq	r1, r1, ip, lsr #8
   1114c:	andeq	r0, r1, r4, lsr r9
   11150:	andeq	r1, r1, r8, asr #7
   11154:	ldr	r3, [pc, #20]	; 11170 <close@plt+0x848>
   11158:	ldr	r2, [pc, #20]	; 11174 <close@plt+0x84c>
   1115c:	add	r3, pc, r3
   11160:	ldr	r2, [r3, r2]
   11164:	cmp	r2, #0
   11168:	bxeq	lr
   1116c:	b	10880 <__gmon_start__@plt>
   11170:	muleq	r1, ip, lr
   11174:	andeq	r0, r0, ip, rrx
   11178:	movw	r0, #8308	; 0x2074
   1117c:	movt	r0, #2
   11180:	movw	r3, #8308	; 0x2074
   11184:	movt	r3, #2
   11188:	cmp	r3, r0
   1118c:	bxeq	lr
   11190:	movw	r3, #0
   11194:	movt	r3, #0
   11198:	cmp	r3, #0
   1119c:	bxeq	lr
   111a0:	bx	r3
   111a4:	movw	r0, #8308	; 0x2074
   111a8:	movt	r0, #2
   111ac:	movw	r1, #8308	; 0x2074
   111b0:	movt	r1, #2
   111b4:	sub	r1, r1, r0
   111b8:	asr	r1, r1, #2
   111bc:	add	r1, r1, r1, lsr #31
   111c0:	asrs	r1, r1, #1
   111c4:	bxeq	lr
   111c8:	movw	r3, #0
   111cc:	movt	r3, #0
   111d0:	cmp	r3, #0
   111d4:	bxeq	lr
   111d8:	bx	r3
   111dc:	push	{r4, lr}
   111e0:	movw	r4, #8340	; 0x2094
   111e4:	movt	r4, #2
   111e8:	ldrb	r3, [r4]
   111ec:	cmp	r3, #0
   111f0:	popne	{r4, pc}
   111f4:	bl	11178 <close@plt+0x850>
   111f8:	mov	r3, #1
   111fc:	strb	r3, [r4]
   11200:	pop	{r4, pc}
   11204:	b	111a4 <close@plt+0x87c>
   11208:	push	{r4, r5, lr}
   1120c:	sub	sp, sp, #12
   11210:	mov	r5, r0
   11214:	bl	108c8 <__errno_location@plt>
   11218:	mov	r2, #0
   1121c:	mov	r1, r2
   11220:	mov	r4, r0
   11224:	mov	r0, r5
   11228:	str	r2, [r4]
   1122c:	bl	10814 <strtol@plt>
   11230:	ldr	r3, [r4]
   11234:	cmp	r3, #0
   11238:	bne	11244 <close@plt+0x91c>
   1123c:	add	sp, sp, #12
   11240:	pop	{r4, r5, pc}
   11244:	movw	r2, #8324	; 0x2084
   11248:	cmp	r3, #34	; 0x22
   1124c:	movt	r2, #2
   11250:	ldr	r4, [r2]
   11254:	beq	11284 <close@plt+0x95c>
   11258:	mov	r0, r3
   1125c:	bl	10868 <strerror@plt>
   11260:	movw	r2, #5208	; 0x1458
   11264:	mov	r3, r5
   11268:	mov	r1, #1
   1126c:	movt	r2, #1
   11270:	str	r0, [sp]
   11274:	mov	r0, r4
   11278:	bl	10910 <__fprintf_chk@plt>
   1127c:	mov	r0, #1
   11280:	bl	10898 <exit@plt>
   11284:	mov	r3, r5
   11288:	mov	r0, r4
   1128c:	movw	r2, #5184	; 0x1440
   11290:	mov	r1, #1
   11294:	movt	r2, #1
   11298:	bl	10910 <__fprintf_chk@plt>
   1129c:	b	1127c <close@plt+0x954>
   112a0:	tst	r1, #3
   112a4:	beq	112dc <close@plt+0x9b4>
   112a8:	cmp	r2, #0
   112ac:	bxeq	lr
   112b0:	movw	r3, #6508	; 0x196c
   112b4:	movt	r3, #1
   112b8:	ldrb	ip, [r1], #1
   112bc:	subs	r2, r2, #1
   112c0:	eor	ip, ip, r0
   112c4:	uxtb	ip, ip
   112c8:	ldr	ip, [r3, ip, lsl #2]
   112cc:	eor	r0, ip, r0, lsr #8
   112d0:	bxeq	lr
   112d4:	tst	r1, #3
   112d8:	bne	112b8 <close@plt+0x990>
   112dc:	lsrs	ip, r2, #2
   112e0:	and	r2, r2, #3
   112e4:	push	{lr}		; (str lr, [sp, #-4]!)
   112e8:	sub	lr, r1, #4
   112ec:	beq	11340 <close@plt+0xa18>
   112f0:	sub	ip, ip, #-1073741823	; 0xc0000001
   112f4:	movw	r3, #6508	; 0x196c
   112f8:	movt	r3, #1
   112fc:	add	r1, r1, ip, lsl #2
   11300:	ldr	ip, [lr, #4]!
   11304:	eor	r0, r0, ip
   11308:	cmp	lr, r1
   1130c:	uxtb	ip, r0
   11310:	ldr	ip, [r3, ip, lsl #2]
   11314:	eor	ip, ip, r0, lsr #8
   11318:	uxtb	r0, ip
   1131c:	ldr	r0, [r3, r0, lsl #2]
   11320:	eor	ip, r0, ip, lsr #8
   11324:	uxtb	r0, ip
   11328:	ldr	r0, [r3, r0, lsl #2]
   1132c:	eor	r0, r0, ip, lsr #8
   11330:	uxtb	ip, r0
   11334:	ldr	ip, [r3, ip, lsl #2]
   11338:	eor	r0, ip, r0, lsr #8
   1133c:	bne	11300 <close@plt+0x9d8>
   11340:	cmp	r2, #0
   11344:	popeq	{pc}		; (ldreq pc, [sp], #4)
   11348:	add	r1, lr, #3
   1134c:	movw	r3, #6508	; 0x196c
   11350:	add	lr, r1, r2
   11354:	movt	r3, #1
   11358:	ldrb	r2, [r1, #1]!
   1135c:	eor	r2, r2, r0
   11360:	cmp	r1, lr
   11364:	uxtb	r2, r2
   11368:	ldr	ip, [r3, r2, lsl #2]
   1136c:	eor	r0, ip, r0, lsr #8
   11370:	bne	11358 <close@plt+0xa30>
   11374:	pop	{pc}		; (ldr pc, [sp], #4)
   11378:	push	{r4, lr}
   1137c:	mvn	r0, r0
   11380:	bl	112a0 <close@plt+0x978>
   11384:	mvn	r0, r0
   11388:	pop	{r4, pc}
   1138c:	push	{r4, lr}
   11390:	mvn	r0, r0
   11394:	bl	112a0 <close@plt+0x978>
   11398:	mvn	r0, r0
   1139c:	pop	{r4, pc}
   113a0:	push	{r4, lr}
   113a4:	mov	r4, r2
   113a8:	mov	r2, r1
   113ac:	mov	r1, r0
   113b0:	mvn	r0, #0
   113b4:	bl	112a0 <close@plt+0x978>
   113b8:	mvn	r0, r0
   113bc:	rev	r0, r0
   113c0:	str	r0, [r4]
   113c4:	pop	{r4, pc}
   113c8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   113cc:	mov	r7, r0
   113d0:	ldr	r6, [pc, #76]	; 11424 <close@plt+0xafc>
   113d4:	mov	r8, r1
   113d8:	ldr	r5, [pc, #72]	; 11428 <close@plt+0xb00>
   113dc:	mov	r9, r2
   113e0:	add	r6, pc, r6
   113e4:	bl	107f4 <strtol@plt-0x20>
   113e8:	add	r5, pc, r5
   113ec:	rsb	r6, r5, r6
   113f0:	asrs	r6, r6, #2
   113f4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   113f8:	sub	r5, r5, #4
   113fc:	mov	r4, #0
   11400:	add	r4, r4, #1
   11404:	ldr	r3, [r5, #4]!
   11408:	mov	r0, r7
   1140c:	mov	r1, r8
   11410:	mov	r2, r9
   11414:	blx	r3
   11418:	cmp	r4, r6
   1141c:	bne	11400 <close@plt+0xad8>
   11420:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11424:	andeq	r0, r1, r4, lsl fp
   11428:	andeq	r0, r1, r8, lsl #22
   1142c:	bx	lr

Disassembly of section .fini:

00011430 <.fini>:
   11430:	push	{r3, lr}
   11434:	pop	{r3, pc}
