
centos-preinstalled/abrt-action-trim-files:     file format elf32-littlearm


Disassembly of section .init:

00000c50 <_init@@Base>:
 c50:	push	{r3, lr}
 c54:	bl	1194 <main@@Base+0x344>
 c58:	pop	{r3, pc}

Disassembly of section .plt:

00000c5c <g_list_reverse@plt-0x14>:
 c5c:	push	{lr}		; (str lr, [sp, #-4]!)
 c60:	ldr	lr, [pc, #4]	; c6c <_init@@Base+0x1c>
 c64:	add	lr, pc, lr
 c68:	ldr	pc, [lr, #8]!
 c6c:			; <UNDEFINED> instruction: 0x000122bc

00000c70 <g_list_reverse@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #73728	; 0x12000
 c78:	ldr	pc, [ip, #700]!	; 0x2bc

00000c7c <libreport_show_usage_and_die@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #73728	; 0x12000
 c84:	ldr	pc, [ip, #692]!	; 0x2b4

00000c88 <free@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #73728	; 0x12000
 c90:	ldr	pc, [ip, #684]!	; 0x2ac

00000c94 <log_and_die_wrapper@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #73728	; 0x12000
 c9c:	ldr	pc, [ip, #676]!	; 0x2a4

00000ca0 <libreport_parse_opts@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #73728	; 0x12000
 ca8:	ldr	pc, [ip, #668]!	; 0x29c

00000cac <g_list_length@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #73728	; 0x12000
 cb4:	ldr	pc, [ip, #660]!	; 0x294

00000cb8 <libreport_xmalloc@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #73728	; 0x12000
 cc0:	ldr	pc, [ip, #652]!	; 0x28c

00000cc4 <closedir@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #644]!	; 0x284

00000cd0 <g_list_delete_link@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #73728	; 0x12000
 cd8:	ldr	pc, [ip, #636]!	; 0x27c

00000cdc <abrt_trim_problem_dirs@plt>:
 cdc:	add	ip, pc, #0, 12
 ce0:	add	ip, ip, #73728	; 0x12000
 ce4:	ldr	pc, [ip, #628]!	; 0x274

00000ce8 <g_list_insert_before@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #73728	; 0x12000
 cf0:	ldr	pc, [ip, #620]!	; 0x26c

00000cf4 <realpath@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #73728	; 0x12000
 cfc:	ldr	pc, [ip, #612]!	; 0x264

00000d00 <readdir64@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #73728	; 0x12000
 d08:	ldr	pc, [ip, #604]!	; 0x25c

00000d0c <textdomain@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #73728	; 0x12000
 d14:	ldr	pc, [ip, #596]!	; 0x254

00000d18 <memset@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #73728	; 0x12000
 d20:	ldr	pc, [ip, #588]!	; 0x24c

00000d24 <opendir@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #73728	; 0x12000
 d2c:	ldr	pc, [ip, #580]!	; 0x244

00000d30 <abort@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #572]!	; 0x23c

00000d3c <unlink@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #564]!	; 0x234

00000d48 <strcpy@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #556]!	; 0x22c

00000d54 <__stack_chk_fail@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #548]!	; 0x224

00000d60 <g_list_prepend@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #540]!	; 0x21c

00000d6c <dcgettext@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #532]!	; 0x214

00000d78 <log_wrapper@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #524]!	; 0x20c

00000d84 <__ctype_b_loc@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #516]!	; 0x204

00000d90 <bindtextdomain@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #508]!	; 0x1fc

00000d9c <strtoull@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #500]!	; 0x1f4

00000da8 <setlocale@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #492]!	; 0x1ec

00000db4 <g_list_foreach@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #484]!	; 0x1e4

00000dc0 <strlen@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #476]!	; 0x1dc

00000dcc <libreport_concat_path_file@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #468]!	; 0x1d4

00000dd8 <strcmp@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #460]!	; 0x1cc

00000de4 <time@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #452]!	; 0x1c4

00000df0 <abrt_init@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #444]!	; 0x1bc

00000dfc <__errno_location@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #436]!	; 0x1b4

00000e08 <__lxstat64@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #428]!	; 0x1ac

00000e14 <__libc_start_main@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #420]!	; 0x1a4

00000e20 <libreport_dot_or_dotdot@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #412]!	; 0x19c

00000e2c <__gmon_start__@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #404]!	; 0x194

00000e38 <__cxa_finalize@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #396]!	; 0x18c

00000e44 <libreport_list_free_with_free@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00000e50 <main@@Base>:
     e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e54:	sub	sp, sp, #148	; 0x94
     e58:	ldr	r7, [pc, #664]	; 10f8 <main@@Base+0x2a8>
     e5c:	mov	r6, r1
     e60:	ldr	r3, [pc, #660]	; 10fc <main@@Base+0x2ac>
     e64:	mov	r8, r0
     e68:	add	r7, pc, r7
     e6c:	ldr	r1, [pc, #652]	; 1100 <main@@Base+0x2b0>
     e70:	ldr	r4, [pc, #652]	; 1104 <main@@Base+0x2b4>
     e74:	mov	r0, #6
     e78:	ldr	r3, [r7, r3]
     e7c:	add	r1, pc, r1
     e80:	add	r4, pc, r4
     e84:	mov	r5, #5
     e88:	mov	fp, #0
     e8c:	add	r9, sp, #20
     e90:	str	r3, [sp, #4]
     e94:	ldr	ip, [sp, #4]
     e98:	ldr	r3, [pc, #616]	; 1108 <main@@Base+0x2b8>
     e9c:	ldr	r2, [ip]
     ea0:	add	r3, pc, r3
     ea4:	str	r3, [sp]
     ea8:	str	r2, [sp, #140]	; 0x8c
     eac:	bl	da8 <setlocale@plt>
     eb0:	ldr	r1, [pc, #596]	; 110c <main@@Base+0x2bc>
     eb4:	mov	r0, r4
     eb8:	add	r1, pc, r1
     ebc:	bl	d90 <bindtextdomain@plt>
     ec0:	mov	r0, r4
     ec4:	bl	d0c <textdomain@plt>
     ec8:	mov	r0, r6
     ecc:	bl	df0 <abrt_init@plt>
     ed0:	ldr	r1, [pc, #568]	; 1110 <main@@Base+0x2c0>
     ed4:	mov	r0, r4
     ed8:	mov	r2, r5
     edc:	add	r1, pc, r1
     ee0:	str	fp, [sp, #8]
     ee4:	str	fp, [sp, #12]
     ee8:	str	fp, [sp, #16]
     eec:	bl	d6c <dcgettext@plt>
     ef0:	mov	r1, fp
     ef4:	mov	r2, #120	; 0x78
     ef8:	mov	sl, r0
     efc:	mov	r0, r9
     f00:	bl	d18 <memset@plt>
     f04:	ldr	r1, [pc, #520]	; 1114 <main@@Base+0x2c4>
     f08:	ldr	r2, [pc, #520]	; 1118 <main@@Base+0x2c8>
     f0c:	mov	r0, #118	; 0x76
     f10:	str	r0, [sp, #24]
     f14:	mov	r0, r4
     f18:	add	r2, pc, r2
     f1c:	str	r2, [sp, #28]
     f20:	ldr	lr, [r7, r1]
     f24:	mov	r2, r5
     f28:	ldr	r1, [pc, #492]	; 111c <main@@Base+0x2cc>
     f2c:	add	r1, pc, r1
     f30:	str	lr, [sp, #32]
     f34:	bl	d6c <dcgettext@plt>
     f38:	ldr	r3, [sp]
     f3c:	ldr	r1, [pc, #476]	; 1120 <main@@Base+0x2d0>
     f40:	mov	r2, r5
     f44:	str	r5, [sp, #44]	; 0x2c
     f48:	add	r1, pc, r1
     f4c:	mov	fp, r3
     f50:	str	r3, [sp, #60]	; 0x3c
     f54:	mov	r3, #100	; 0x64
     f58:	str	r3, [sp, #48]	; 0x30
     f5c:	add	r3, sp, #8
     f60:	str	r3, [sp, #56]	; 0x38
     f64:	str	r0, [sp, #40]	; 0x28
     f68:	mov	r0, r4
     f6c:	bl	d6c <dcgettext@plt>
     f70:	ldr	r1, [pc, #428]	; 1124 <main@@Base+0x2d4>
     f74:	mov	r2, r5
     f78:	mov	r3, #102	; 0x66
     f7c:	add	r1, pc, r1
     f80:	str	fp, [sp, #84]	; 0x54
     f84:	str	r3, [sp, #72]	; 0x48
     f88:	add	r3, sp, #12
     f8c:	str	r5, [sp, #68]	; 0x44
     f90:	str	r3, [sp, #80]	; 0x50
     f94:	ldr	fp, [pc, #396]	; 1128 <main@@Base+0x2d8>
     f98:	add	fp, pc, fp
     f9c:	str	r0, [sp, #64]	; 0x40
     fa0:	mov	r0, r4
     fa4:	bl	d6c <dcgettext@plt>
     fa8:	ldr	r1, [pc, #380]	; 112c <main@@Base+0x2dc>
     fac:	mov	r2, r5
     fb0:	mov	lr, #2
     fb4:	add	r1, pc, r1
     fb8:	mov	r3, #112	; 0x70
     fbc:	str	lr, [sp, #92]	; 0x5c
     fc0:	str	r3, [sp, #96]	; 0x60
     fc4:	add	r3, sp, #16
     fc8:	str	fp, [sp, #108]	; 0x6c
     fcc:	str	r3, [sp, #104]	; 0x68
     fd0:	str	r0, [sp, #88]	; 0x58
     fd4:	mov	r0, r4
     fd8:	bl	d6c <dcgettext@plt>
     fdc:	mov	r1, r6
     fe0:	mov	r3, sl
     fe4:	mov	r2, r9
     fe8:	mov	lr, #6
     fec:	str	lr, [sp, #116]	; 0x74
     ff0:	str	r0, [sp, #112]	; 0x70
     ff4:	mov	r0, r8
     ff8:	bl	ca0 <libreport_parse_opts@plt>
     ffc:	ldr	r3, [pc, #300]	; 1130 <main@@Base+0x2e0>
    1000:	ldr	r3, [r7, r3]
    1004:	ldr	r3, [r3]
    1008:	ldr	r4, [r6, r3, lsl #2]
    100c:	add	r6, r6, r3, lsl #2
    1010:	cmp	r4, #0
    1014:	beq	10d8 <main@@Base+0x288>
    1018:	ldr	r3, [sp, #12]
    101c:	cmp	r3, #0
    1020:	beq	10ec <main@@Base+0x29c>
    1024:	mov	r5, #0
    1028:	b	1040 <main@@Base+0x1f0>
    102c:	mov	r0, r5
    1030:	mov	r1, r7
    1034:	bl	d60 <g_list_prepend@plt>
    1038:	mov	r5, r0
    103c:	ldr	r4, [r6, #4]!
    1040:	cmp	r4, #0
    1044:	mov	r0, r5
    1048:	beq	1088 <main@@Base+0x238>
    104c:	mov	r1, r4
    1050:	bl	d60 <g_list_prepend@plt>
    1054:	mov	r1, #0
    1058:	mov	r5, r0
    105c:	mov	r0, r4
    1060:	bl	cf4 <realpath@plt>
    1064:	subs	r7, r0, #0
    1068:	beq	103c <main@@Base+0x1ec>
    106c:	mov	r1, r4
    1070:	bl	dd8 <strcmp@plt>
    1074:	cmp	r0, #0
    1078:	bne	102c <main@@Base+0x1dc>
    107c:	mov	r0, r7
    1080:	bl	c88 <free@plt>
    1084:	b	103c <main@@Base+0x1ec>
    1088:	bl	c70 <g_list_reverse@plt>
    108c:	ldr	r1, [pc, #160]	; 1134 <main@@Base+0x2e4>
    1090:	ldr	r2, [sp, #16]
    1094:	add	r1, pc, r1
    1098:	mov	r5, r0
    109c:	ldr	r0, [sp, #8]
    10a0:	bl	db4 <g_list_foreach@plt>
    10a4:	ldr	r1, [pc, #140]	; 1138 <main@@Base+0x2e8>
    10a8:	mov	r2, r5
    10ac:	ldr	r0, [sp, #12]
    10b0:	add	r1, pc, r1
    10b4:	bl	db4 <g_list_foreach@plt>
    10b8:	ldr	ip, [sp, #4]
    10bc:	ldr	r2, [sp, #140]	; 0x8c
    10c0:	mov	r0, r4
    10c4:	ldr	r3, [ip]
    10c8:	cmp	r2, r3
    10cc:	bne	10e8 <main@@Base+0x298>
    10d0:	add	sp, sp, #148	; 0x94
    10d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10d8:	ldr	r3, [sp, #8]
    10dc:	cmp	r3, #0
    10e0:	bne	1024 <main@@Base+0x1d4>
    10e4:	b	1018 <main@@Base+0x1c8>
    10e8:	bl	d54 <__stack_chk_fail@plt>
    10ec:	mov	r0, sl
    10f0:	mov	r1, r9
    10f4:	bl	c7c <libreport_show_usage_and_die@plt>
    10f8:	strheq	r2, [r1], -r8
    10fc:	andeq	r0, r0, ip, lsr #1
    1100:	andeq	r1, r0, r4, lsr r1
    1104:	andeq	r1, r0, r8, asr #2
    1108:	andeq	r1, r0, ip, lsl #4
    110c:	andeq	r1, r0, r8, lsl r1
    1110:	andeq	r1, r0, r8, lsl #2
    1114:	strheq	r0, [r0], -ip
    1118:	andeq	r1, r0, r0, lsl #3
    111c:	andeq	r1, r0, r4, ror r1
    1120:	andeq	r1, r0, r0, ror r1
    1124:	andeq	r1, r0, r0, ror #2
    1128:	andeq	r1, r0, r8, ror #2
    112c:	andeq	r1, r0, r0, asr r1
    1130:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1134:	andeq	r0, r0, r8, asr #19
    1138:	andeq	r0, r0, r0, asr r7
    113c:	mov	fp, #0
    1140:	mov	lr, #0
    1144:	pop	{r1}		; (ldr r1, [sp], #4)
    1148:	mov	r2, sp
    114c:	push	{r2}		; (str r2, [sp, #-4]!)
    1150:	push	{r0}		; (str r0, [sp, #-4]!)
    1154:	ldr	sl, [pc, #40]	; 1184 <main@@Base+0x334>
    1158:	add	r3, pc, #36	; 0x24
    115c:	add	sl, sl, r3
    1160:	ldr	ip, [pc, #32]	; 1188 <main@@Base+0x338>
    1164:	ldr	ip, [sl, ip]
    1168:	push	{ip}		; (str ip, [sp, #-4]!)
    116c:	ldr	r3, [pc, #24]	; 118c <main@@Base+0x33c>
    1170:	ldr	r3, [sl, r3]
    1174:	ldr	r0, [pc, #20]	; 1190 <main@@Base+0x340>
    1178:	ldr	r0, [sl, r0]
    117c:	bl	e14 <__libc_start_main@plt>
    1180:	bl	d30 <abort@plt>
    1184:	andeq	r1, r1, r4, lsr #27
    1188:	andeq	r0, r0, r8, asr #1
    118c:	andeq	r0, r0, r0, asr #1
    1190:	strheq	r0, [r0], -r4
    1194:	ldr	r3, [pc, #20]	; 11b0 <main@@Base+0x360>
    1198:	ldr	r2, [pc, #20]	; 11b4 <main@@Base+0x364>
    119c:	add	r3, pc, r3
    11a0:	ldr	r2, [r3, r2]
    11a4:	cmp	r2, #0
    11a8:	bxeq	lr
    11ac:	b	e2c <__gmon_start__@plt>
    11b0:	andeq	r1, r1, r4, lsl #27
    11b4:	andeq	r0, r0, ip, asr #1
    11b8:	ldr	r2, [pc, #60]	; 11fc <main@@Base+0x3ac>
    11bc:	ldr	r0, [pc, #60]	; 1200 <main@@Base+0x3b0>
    11c0:	add	r2, pc, r2
    11c4:	add	r0, pc, r0
    11c8:	add	r2, r2, #3
    11cc:	rsb	r2, r0, r2
    11d0:	push	{r3, lr}
    11d4:	cmp	r2, #6
    11d8:	ldr	r3, [pc, #36]	; 1204 <main@@Base+0x3b4>
    11dc:	add	r3, pc, r3
    11e0:	popls	{r3, pc}
    11e4:	ldr	r2, [pc, #28]	; 1208 <main@@Base+0x3b8>
    11e8:	ldr	r3, [r3, r2]
    11ec:	cmp	r3, #0
    11f0:	popeq	{r3, pc}
    11f4:	blx	r3
    11f8:	pop	{r3, pc}
    11fc:	andeq	r1, r1, ip, lsr lr
    1200:	andeq	r1, r1, r8, lsr lr
    1204:	andeq	r1, r1, r4, asr #26
    1208:	andeq	r0, r0, r4, asr #1
    120c:	push	{r3, lr}
    1210:	ldr	r0, [pc, #64]	; 1258 <main@@Base+0x408>
    1214:	ldr	r3, [pc, #64]	; 125c <main@@Base+0x40c>
    1218:	add	r0, pc, r0
    121c:	ldr	r2, [pc, #60]	; 1260 <main@@Base+0x410>
    1220:	add	r3, pc, r3
    1224:	rsb	r3, r0, r3
    1228:	add	r2, pc, r2
    122c:	asr	r3, r3, #2
    1230:	add	r3, r3, r3, lsr #31
    1234:	asrs	r3, r3, #1
    1238:	popeq	{r3, pc}
    123c:	ldr	r1, [pc, #32]	; 1264 <main@@Base+0x414>
    1240:	ldr	r2, [r2, r1]
    1244:	cmp	r2, #0
    1248:	popeq	{r3, pc}
    124c:	mov	r1, r3
    1250:	blx	r2
    1254:	pop	{r3, pc}
    1258:	andeq	r1, r1, r4, ror #27
    125c:	ldrdeq	r1, [r1], -ip
    1260:	strdeq	r1, [r1], -r8
    1264:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1268:	ldr	r2, [pc, #76]	; 12bc <main@@Base+0x46c>
    126c:	push	{r3, lr}
    1270:	add	r2, pc, r2
    1274:	ldr	r3, [pc, #68]	; 12c0 <main@@Base+0x470>
    1278:	ldrb	r2, [r2]
    127c:	add	r3, pc, r3
    1280:	cmp	r2, #0
    1284:	popne	{r3, pc}
    1288:	ldr	r2, [pc, #52]	; 12c4 <main@@Base+0x474>
    128c:	ldr	r3, [r3, r2]
    1290:	cmp	r3, #0
    1294:	beq	12a4 <main@@Base+0x454>
    1298:	ldr	r0, [pc, #40]	; 12c8 <main@@Base+0x478>
    129c:	add	r0, pc, r0
    12a0:	bl	e38 <__cxa_finalize@plt>
    12a4:	bl	11b8 <main@@Base+0x368>
    12a8:	ldr	r3, [pc, #28]	; 12cc <main@@Base+0x47c>
    12ac:	mov	r2, #1
    12b0:	add	r3, pc, r3
    12b4:	strb	r2, [r3]
    12b8:	pop	{r3, pc}
    12bc:	andeq	r1, r1, ip, lsl #27
    12c0:	andeq	r1, r1, r4, lsr #25
    12c4:	ldrdeq	r0, [r0], -r4
    12c8:	andeq	r1, r1, r8, asr #22
    12cc:	andeq	r1, r1, ip, asr #26
    12d0:	ldr	r0, [pc, #52]	; 130c <main@@Base+0x4bc>
    12d4:	push	{r3, lr}
    12d8:	add	r0, pc, r0
    12dc:	ldr	r3, [pc, #44]	; 1310 <main@@Base+0x4c0>
    12e0:	ldr	r2, [r0]
    12e4:	add	r3, pc, r3
    12e8:	cmp	r2, #0
    12ec:	beq	1304 <main@@Base+0x4b4>
    12f0:	ldr	r2, [pc, #28]	; 1314 <main@@Base+0x4c4>
    12f4:	ldr	r3, [r3, r2]
    12f8:	cmp	r3, #0
    12fc:	beq	1304 <main@@Base+0x4b4>
    1300:	blx	r3
    1304:	pop	{r3, lr}
    1308:	b	120c <main@@Base+0x3bc>
    130c:	andeq	r1, r1, r8, lsl #22
    1310:	andeq	r1, r1, ip, lsr ip
    1314:	strheq	r0, [r0], -r8
    1318:	ldr	r3, [pc, #400]	; 14b0 <main@@Base+0x660>
    131c:	ldr	r2, [pc, #400]	; 14b4 <main@@Base+0x664>
    1320:	add	r3, pc, r3
    1324:	push	{r4, r5, r6, r7, lr}
    1328:	sub	sp, sp, #28
    132c:	ldr	r6, [r3, r2]
    1330:	mov	r4, r1
    1334:	mov	r7, r0
    1338:	ldr	r3, [r6]
    133c:	str	r3, [sp, #20]
    1340:	bl	dfc <__errno_location@plt>
    1344:	mov	r5, r0
    1348:	bl	d84 <__ctype_b_loc@plt>
    134c:	ldrb	r3, [r4]
    1350:	mov	r2, #10
    1354:	add	r1, sp, #16
    1358:	lsl	r3, r3, #1
    135c:	ldr	ip, [r0]
    1360:	mov	r0, r4
    1364:	ldrh	r3, [ip, r3]
    1368:	tst	r3, #2048	; 0x800
    136c:	moveq	r3, #34	; 0x22
    1370:	movne	r3, #0
    1374:	str	r3, [r5]
    1378:	bl	d9c <strtoull@plt>
    137c:	bl	1e0c <main@@Base+0xfbc>
    1380:	ldr	r3, [sp, #16]
    1384:	cmp	r3, r4
    1388:	vmov	d7, r0, r1
    138c:	strd	r0, [r7]
    1390:	beq	13cc <main@@Base+0x57c>
    1394:	ldrb	r2, [r3]
    1398:	orr	r2, r2, #32
    139c:	cmp	r2, #107	; 0x6b
    13a0:	beq	140c <main@@Base+0x5bc>
    13a4:	cmp	r2, #109	; 0x6d
    13a8:	beq	1424 <main@@Base+0x5d4>
    13ac:	cmp	r2, #103	; 0x67
    13b0:	beq	143c <main@@Base+0x5ec>
    13b4:	cmp	r2, #116	; 0x74
    13b8:	vldreq	d6, [pc, #208]	; 1490 <main@@Base+0x640>
    13bc:	addeq	r3, r3, #1
    13c0:	streq	r3, [sp, #16]
    13c4:	vmuleq.f64	d7, d7, d6
    13c8:	vstreq	d7, [r7]
    13cc:	ldr	r3, [r5]
    13d0:	cmp	r3, #0
    13d4:	bne	1454 <main@@Base+0x604>
    13d8:	ldr	r0, [sp, #16]
    13dc:	cmp	r0, r4
    13e0:	beq	1454 <main@@Base+0x604>
    13e4:	ldrb	r3, [r0]
    13e8:	cmp	r3, #58	; 0x3a
    13ec:	bne	1454 <main@@Base+0x604>
    13f0:	ldr	r2, [sp, #20]
    13f4:	add	r0, r0, #1
    13f8:	ldr	r3, [r6]
    13fc:	cmp	r2, r3
    1400:	bne	148c <main@@Base+0x63c>
    1404:	add	sp, sp, #28
    1408:	pop	{r4, r5, r6, r7, pc}
    140c:	vldr	d6, [pc, #132]	; 1498 <main@@Base+0x648>
    1410:	vmul.f64	d7, d7, d6
    1414:	add	r3, r3, #1
    1418:	str	r3, [sp, #16]
    141c:	vstr	d7, [r7]
    1420:	b	13cc <main@@Base+0x57c>
    1424:	vldr	d6, [pc, #116]	; 14a0 <main@@Base+0x650>
    1428:	vmul.f64	d7, d7, d6
    142c:	add	r3, r3, #1
    1430:	str	r3, [sp, #16]
    1434:	vstr	d7, [r7]
    1438:	b	13cc <main@@Base+0x57c>
    143c:	vldr	d6, [pc, #100]	; 14a8 <main@@Base+0x658>
    1440:	vmul.f64	d7, d7, d6
    1444:	add	r3, r3, #1
    1448:	str	r3, [sp, #16]
    144c:	vstr	d7, [r7]
    1450:	b	13cc <main@@Base+0x57c>
    1454:	ldr	r1, [pc, #92]	; 14b8 <main@@Base+0x668>
    1458:	mov	r3, #1
    145c:	str	r3, [sp]
    1460:	mov	r0, #3
    1464:	add	r1, pc, r1
    1468:	str	r3, [sp, #4]
    146c:	str	r1, [sp, #8]
    1470:	mov	r2, #155	; 0x9b
    1474:	ldr	r1, [pc, #64]	; 14bc <main@@Base+0x66c>
    1478:	ldr	r3, [pc, #64]	; 14c0 <main@@Base+0x670>
    147c:	str	r4, [sp, #12]
    1480:	add	r1, pc, r1
    1484:	add	r3, pc, r3
    1488:	bl	c94 <log_and_die_wrapper@plt>
    148c:	bl	d54 <__stack_chk_fail@plt>
    1490:	andeq	r0, r0, r0
    1494:	rsbsmi	r0, r0, #0
    1498:	andeq	r0, r0, r0
    149c:	addsmi	r0, r0, r0
    14a0:	andeq	r0, r0, r0
    14a4:	teqmi	r0, r0
    14a8:	andeq	r0, r0, r0
    14ac:	bicsmi	r0, r0, r0
    14b0:	andeq	r1, r1, r0, lsl #24
    14b4:	andeq	r0, r0, ip, lsr #1
    14b8:	andeq	r0, r0, r4, asr #21
    14bc:	andeq	r0, r0, ip, lsl #21
    14c0:	andeq	r0, r0, r8, ror #20
    14c4:	ldr	r3, [pc, #820]	; 1800 <main@@Base+0x9b0>
    14c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14cc:	vpush	{d8-d11}
    14d0:	mov	r5, r1
    14d4:	ldr	r1, [pc, #808]	; 1804 <main@@Base+0x9b4>
    14d8:	sub	sp, sp, #148	; 0x94
    14dc:	add	r3, pc, r3
    14e0:	mov	r4, r0
    14e4:	str	r2, [sp, #24]
    14e8:	ldr	r1, [r3, r1]
    14ec:	ldr	r3, [r1]
    14f0:	str	r1, [sp, #12]
    14f4:	str	r3, [sp, #140]	; 0x8c
    14f8:	bl	d24 <opendir@plt>
    14fc:	subs	r8, r0, #0
    1500:	beq	17d4 <main@@Base+0x984>
    1504:	cmp	r5, #0
    1508:	streq	r5, [sp, #28]
    150c:	beq	151c <main@@Base+0x6cc>
    1510:	mov	r0, #0
    1514:	bl	de4 <time@plt>
    1518:	str	r0, [sp, #28]
    151c:	movw	fp, #34953	; 0x8889
    1520:	add	sl, sp, #32
    1524:	movt	fp, #34952	; 0x8888
    1528:	vldr	d9, [pc, #704]	; 17f0 <main@@Base+0x9a0>
    152c:	vldr	d10, [pc, #708]	; 17f8 <main@@Base+0x9a8>
    1530:	mov	r0, r8
    1534:	bl	d00 <readdir64@plt>
    1538:	cmp	r0, #0
    153c:	beq	1620 <main@@Base+0x7d0>
    1540:	add	r6, r0, #19
    1544:	mov	r0, r6
    1548:	bl	e20 <libreport_dot_or_dotdot@plt>
    154c:	subs	r9, r0, #0
    1550:	bne	1530 <main@@Base+0x6e0>
    1554:	mov	r1, r6
    1558:	mov	r0, r4
    155c:	bl	dcc <libreport_concat_path_file@plt>
    1560:	mov	r2, sl
    1564:	mov	r1, r0
    1568:	mov	r7, r0
    156c:	mov	r0, #3
    1570:	bl	e08 <__lxstat64@plt>
    1574:	cmp	r0, #0
    1578:	bne	1608 <main@@Base+0x7b8>
    157c:	ldr	r3, [sp, #48]	; 0x30
    1580:	and	r2, r3, #61440	; 0xf000
    1584:	cmp	r2, #16384	; 0x4000
    1588:	beq	1778 <main@@Base+0x928>
    158c:	and	r3, r3, #53248	; 0xd000
    1590:	cmp	r3, #32768	; 0x8000
    1594:	bne	1608 <main@@Base+0x7b8>
    1598:	ldrd	r2, [sp, #80]	; 0x50
    159c:	mov	r0, r2
    15a0:	mov	r1, r3
    15a4:	strd	r2, [sp, #16]
    15a8:	bl	1e20 <main@@Base+0xfd0>
    15ac:	vmov	d11, r0, r1
    15b0:	mov	r0, r6
    15b4:	bl	dc0 <strlen@plt>
    15b8:	cmp	r5, #0
    15bc:	add	r0, r0, #104	; 0x68
    15c0:	vmov	s13, r0
    15c4:	vcvt.f64.u32	d8, s13
    15c8:	vadd.f64	d8, d8, d11
    15cc:	vadd.f64	d9, d9, d8
    15d0:	beq	1608 <main@@Base+0x7b8>
    15d4:	ldr	r3, [sp, #24]
    15d8:	cmp	r3, #0
    15dc:	beq	164c <main@@Base+0x7fc>
    15e0:	mov	r6, r3
    15e4:	b	15f4 <main@@Base+0x7a4>
    15e8:	ldr	r6, [r6, #4]
    15ec:	cmp	r6, #0
    15f0:	beq	164c <main@@Base+0x7fc>
    15f4:	mov	r0, r7
    15f8:	ldr	r1, [r6]
    15fc:	bl	dd8 <strcmp@plt>
    1600:	cmp	r0, #0
    1604:	bne	15e8 <main@@Base+0x798>
    1608:	mov	r0, r7
    160c:	bl	c88 <free@plt>
    1610:	mov	r0, r8
    1614:	bl	d00 <readdir64@plt>
    1618:	cmp	r0, #0
    161c:	bne	1540 <main@@Base+0x6f0>
    1620:	mov	r0, r8
    1624:	bl	cc4 <closedir@plt>
    1628:	vmov.f64	d0, d9
    162c:	ldr	r1, [sp, #12]
    1630:	ldr	r2, [sp, #140]	; 0x8c
    1634:	ldr	r3, [r1]
    1638:	cmp	r2, r3
    163c:	bne	17e8 <main@@Base+0x998>
    1640:	add	sp, sp, #148	; 0x94
    1644:	vpop	{d8-d11}
    1648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    164c:	ldr	r3, [sp, #112]	; 0x70
    1650:	vmul.f64	d8, d8, d10
    1654:	ldr	r0, [sp, #28]
    1658:	rsb	r3, r3, r0
    165c:	smull	r2, r1, fp, r3
    1660:	asr	r2, r3, #31
    1664:	add	r3, r1, r3
    1668:	rsb	r3, r2, r3, asr #5
    166c:	cmp	r3, #1
    1670:	vmovgt	s13, r3
    1674:	ldr	r3, [r5]
    1678:	vcvtgt.f64.s32	d7, s13
    167c:	vmulgt.f64	d8, d8, d7
    1680:	cmp	r3, #0
    1684:	beq	17dc <main@@Base+0x98c>
    1688:	ldr	r2, [r3]
    168c:	vldr	d7, [r2, #8]
    1690:	mov	r6, r3
    1694:	mov	ip, #0
    1698:	vcmpe.f64	d8, d7
    169c:	vmrs	APSR_nzcv, fpscr
    16a0:	bhi	16bc <main@@Base+0x86c>
    16a4:	b	17a0 <main@@Base+0x950>
    16a8:	ldr	r2, [r6]
    16ac:	vldr	d7, [r2, #8]
    16b0:	vcmpe.f64	d8, d7
    16b4:	vmrs	APSR_nzcv, fpscr
    16b8:	bls	1798 <main@@Base+0x948>
    16bc:	ldr	r6, [r6, #4]
    16c0:	add	ip, ip, #1
    16c4:	cmp	r6, #0
    16c8:	bne	16a8 <main@@Base+0x858>
    16cc:	mov	r0, r6
    16d0:	str	r3, [sp, #8]
    16d4:	str	ip, [sp, #4]
    16d8:	bl	cac <g_list_length@plt>
    16dc:	ldr	ip, [sp, #4]
    16e0:	ldr	r3, [sp, #8]
    16e4:	add	ip, r0, ip
    16e8:	mov	r0, r7
    16ec:	str	ip, [sp, #4]
    16f0:	str	r3, [sp, #8]
    16f4:	bl	dc0 <strlen@plt>
    16f8:	add	r0, r0, #24
    16fc:	bl	cb8 <libreport_xmalloc@plt>
    1700:	mov	r2, r0
    1704:	vstr	d8, [r0, #8]
    1708:	mov	r9, r0
    170c:	ldrd	r0, [sp, #16]
    1710:	strd	r0, [r2], #16
    1714:	mov	r1, r7
    1718:	mov	r0, r2
    171c:	bl	d48 <strcpy@plt>
    1720:	ldr	r3, [sp, #8]
    1724:	mov	r1, r6
    1728:	mov	r2, r9
    172c:	mov	r0, r3
    1730:	bl	ce8 <g_list_insert_before@plt>
    1734:	ldr	ip, [sp, #4]
    1738:	add	ip, ip, #1
    173c:	cmp	ip, #128	; 0x80
    1740:	mov	r3, r0
    1744:	bls	1768 <main@@Base+0x918>
    1748:	ldr	r0, [r0]
    174c:	str	r3, [sp, #8]
    1750:	bl	c88 <free@plt>
    1754:	ldr	r3, [sp, #8]
    1758:	mov	r0, r3
    175c:	mov	r1, r3
    1760:	bl	cd0 <g_list_delete_link@plt>
    1764:	mov	r3, r0
    1768:	str	r3, [r5]
    176c:	mov	r0, r7
    1770:	bl	c88 <free@plt>
    1774:	b	1610 <main@@Base+0x7c0>
    1778:	mov	r0, r7
    177c:	mov	r1, r5
    1780:	ldr	r2, [sp, #24]
    1784:	bl	14c4 <main@@Base+0x674>
    1788:	mov	r0, r7
    178c:	vadd.f64	d9, d9, d0
    1790:	bl	c88 <free@plt>
    1794:	b	1610 <main@@Base+0x7c0>
    1798:	subs	r9, r3, r6
    179c:	movne	r9, #1
    17a0:	mov	r0, r6
    17a4:	str	r3, [sp, #8]
    17a8:	str	ip, [sp, #4]
    17ac:	bl	cac <g_list_length@plt>
    17b0:	ldr	ip, [sp, #4]
    17b4:	ldr	r3, [sp, #8]
    17b8:	add	ip, ip, r0
    17bc:	cmp	ip, #127	; 0x7f
    17c0:	orrls	r9, r9, #1
    17c4:	tst	r9, #255	; 0xff
    17c8:	bne	16e8 <main@@Base+0x898>
    17cc:	str	r3, [r5]
    17d0:	b	176c <main@@Base+0x91c>
    17d4:	vldr	d0, [pc, #20]	; 17f0 <main@@Base+0x9a0>
    17d8:	b	162c <main@@Base+0x7dc>
    17dc:	mov	r6, r3
    17e0:	mov	ip, r3
    17e4:	b	17a0 <main@@Base+0x950>
    17e8:	bl	d54 <__stack_chk_fail@plt>
    17ec:	nop	{0}
	...
    17fc:	svccc	0x00500000
    1800:	andeq	r1, r1, r4, asr #20
    1804:	andeq	r0, r0, ip, lsr #1
    1808:	ldr	r3, [pc, #560]	; 1a40 <main@@Base+0xbf0>
    180c:	mov	ip, r0
    1810:	ldr	r2, [pc, #556]	; 1a44 <main@@Base+0xbf4>
    1814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1818:	vpush	{d8-d9}
    181c:	add	r3, pc, r3
    1820:	vldr	d9, [pc, #528]	; 1a38 <main@@Base+0xbe8>
    1824:	sub	sp, sp, #100	; 0x64
    1828:	mov	r9, #99	; 0x63
    182c:	add	r8, sp, #76	; 0x4c
    1830:	add	r0, sp, #80	; 0x50
    1834:	str	r1, [sp, #60]	; 0x3c
    1838:	mov	r1, ip
    183c:	str	r8, [sp, #64]	; 0x40
    1840:	ldr	r2, [r3, r2]
    1844:	str	r9, [sp, #56]	; 0x38
    1848:	ldr	r6, [pc, #504]	; 1a48 <main@@Base+0xbf8>
    184c:	ldr	r3, [r2]
    1850:	str	r2, [sp, #68]	; 0x44
    1854:	add	r6, pc, r6
    1858:	ldr	r7, [pc, #492]	; 1a4c <main@@Base+0xbfc>
    185c:	add	r6, r6, #16
    1860:	str	r3, [sp, #92]	; 0x5c
    1864:	bl	1318 <main@@Base+0x4c8>
    1868:	ldr	r9, [pc, #480]	; 1a50 <main@@Base+0xc00>
    186c:	add	r7, pc, r7
    1870:	ldr	sl, [pc, #476]	; 1a54 <main@@Base+0xc04>
    1874:	add	r9, pc, r9
    1878:	add	sl, pc, sl
    187c:	mov	r8, r0
    1880:	mov	r0, r8
    1884:	add	r1, sp, #76	; 0x4c
    1888:	ldr	r2, [sp, #60]	; 0x3c
    188c:	mov	r5, #0
    1890:	str	r5, [sp, #76]	; 0x4c
    1894:	bl	14c4 <main@@Base+0x674>
    1898:	vldr	d7, [sp, #80]	; 0x50
    189c:	ldr	r0, [sp, #76]	; 0x4c
    18a0:	vcmpe.f64	d0, d7
    18a4:	vmov.f64	d8, d0
    18a8:	vmrs	APSR_nzcv, fpscr
    18ac:	bls	19e4 <main@@Base+0xb94>
    18b0:	cmp	r0, #0
    18b4:	beq	19e4 <main@@Base+0xb94>
    18b8:	bl	c70 <g_list_reverse@plt>
    18bc:	cmp	r0, #0
    18c0:	str	r0, [sp, #76]	; 0x4c
    18c4:	beq	19b4 <main@@Base+0xb64>
    18c8:	vldr	d7, [sp, #80]	; 0x50
    18cc:	vcmpe.f64	d8, d7
    18d0:	vmrs	APSR_nzcv, fpscr
    18d4:	ble	19b4 <main@@Base+0xb64>
    18d8:	str	r8, [sp, #52]	; 0x34
    18dc:	str	r9, [sp, #48]	; 0x30
    18e0:	b	1924 <main@@Base+0xad4>
    18e4:	ldrd	r0, [r4]
    18e8:	bl	1e20 <main@@Base+0xfd0>
    18ec:	vmov	d7, r0, r1
    18f0:	vsub.f64	d8, d8, d7
    18f4:	mov	r0, r4
    18f8:	bl	c88 <free@plt>
    18fc:	ldr	r0, [sp, #76]	; 0x4c
    1900:	mov	r1, r0
    1904:	bl	cd0 <g_list_delete_link@plt>
    1908:	cmp	r0, #0
    190c:	str	r0, [sp, #76]	; 0x4c
    1910:	beq	19ac <main@@Base+0xb5c>
    1914:	vldr	d7, [sp, #80]	; 0x50
    1918:	vcmpe.f64	d8, d7
    191c:	vmrs	APSR_nzcv, fpscr
    1920:	ble	19ac <main@@Base+0xb5c>
    1924:	vmul.f64	d7, d7, d9
    1928:	ldr	r4, [r0]
    192c:	ldr	r8, [sp, #48]	; 0x30
    1930:	vstr	d8, [sp, #16]
    1934:	ldr	r9, [sp, #52]	; 0x34
    1938:	add	fp, r4, #16
    193c:	str	r5, [sp]
    1940:	mov	r0, #5
    1944:	str	r5, [sp, #4]
    1948:	mov	r1, r7
    194c:	str	r8, [sp, #8]
    1950:	mov	r2, #194	; 0xc2
    1954:	str	r9, [sp, #12]
    1958:	mov	r3, r6
    195c:	str	fp, [sp, #32]
    1960:	vstr	d7, [sp, #24]
    1964:	ldrd	r8, [r4]
    1968:	strd	r8, [sp, #40]	; 0x28
    196c:	bl	d78 <log_wrapper@plt>
    1970:	mov	r0, fp
    1974:	bl	d3c <unlink@plt>
    1978:	cmp	r0, #0
    197c:	beq	18e4 <main@@Base+0xa94>
    1980:	mov	r3, #1
    1984:	str	sl, [sp, #8]
    1988:	str	r3, [sp]
    198c:	mov	r0, #3
    1990:	str	r3, [sp, #4]
    1994:	mov	r1, r7
    1998:	str	fp, [sp, #12]
    199c:	mov	r2, #196	; 0xc4
    19a0:	mov	r3, r6
    19a4:	bl	d78 <log_wrapper@plt>
    19a8:	b	18f4 <main@@Base+0xaa4>
    19ac:	ldr	r8, [sp, #52]	; 0x34
    19b0:	ldr	r9, [sp, #48]	; 0x30
    19b4:	ldr	ip, [sp, #56]	; 0x38
    19b8:	subs	ip, ip, #1
    19bc:	str	ip, [sp, #56]	; 0x38
    19c0:	bne	1880 <main@@Base+0xa30>
    19c4:	ldr	r8, [sp, #68]	; 0x44
    19c8:	ldr	r2, [sp, #92]	; 0x5c
    19cc:	ldr	r3, [r8]
    19d0:	cmp	r2, r3
    19d4:	bne	1a30 <main@@Base+0xbe0>
    19d8:	add	sp, sp, #100	; 0x64
    19dc:	vpop	{d8-d9}
    19e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19e4:	bl	e44 <libreport_list_free_with_free@plt>
    19e8:	ldrd	r0, [sp, #80]	; 0x50
    19ec:	ldr	r3, [pc, #100]	; 1a58 <main@@Base+0xc08>
    19f0:	mov	r2, #0
    19f4:	ldr	ip, [pc, #96]	; 1a5c <main@@Base+0xc0c>
    19f8:	vstr	d8, [sp, #16]
    19fc:	strd	r0, [sp, #24]
    1a00:	add	r3, pc, r3
    1a04:	ldr	r1, [pc, #84]	; 1a60 <main@@Base+0xc10>
    1a08:	add	ip, pc, ip
    1a0c:	str	r2, [sp]
    1a10:	add	r3, r3, #16
    1a14:	str	r2, [sp, #4]
    1a18:	mov	r0, #6
    1a1c:	str	ip, [sp, #8]
    1a20:	add	r1, pc, r1
    1a24:	mov	r2, #183	; 0xb7
    1a28:	bl	d78 <log_wrapper@plt>
    1a2c:	b	19c4 <main@@Base+0xb74>
    1a30:	bl	d54 <__stack_chk_fail@plt>
    1a34:	nop	{0}
    1a38:	andeq	r0, r0, r0
    1a3c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
    1a40:	andeq	r1, r1, r4, lsl #14
    1a44:	andeq	r0, r0, ip, lsr #1
    1a48:	muleq	r0, r8, r6
    1a4c:	andeq	r0, r0, r0, lsr #13
    1a50:	strdeq	r0, [r0], -ip
    1a54:	andeq	r0, r0, ip, lsr r7
    1a58:	andeq	r0, r0, ip, ror #9
    1a5c:	andeq	r0, r0, r8, lsr r5
    1a60:	andeq	r0, r0, ip, ror #9
    1a64:	ldr	r3, [pc, #84]	; 1ac0 <main@@Base+0xc70>
    1a68:	mov	ip, r0
    1a6c:	ldr	r2, [pc, #80]	; 1ac4 <main@@Base+0xc74>
    1a70:	add	r3, pc, r3
    1a74:	push	{r4, r5, lr}
    1a78:	sub	sp, sp, #20
    1a7c:	ldr	r4, [r3, r2]
    1a80:	mov	r5, r1
    1a84:	mov	r0, sp
    1a88:	mov	r1, ip
    1a8c:	ldr	r3, [r4]
    1a90:	str	r3, [sp, #12]
    1a94:	bl	1318 <main@@Base+0x4c8>
    1a98:	mov	r1, r5
    1a9c:	vldr	d0, [sp]
    1aa0:	bl	cdc <abrt_trim_problem_dirs@plt>
    1aa4:	ldr	r2, [sp, #12]
    1aa8:	ldr	r3, [r4]
    1aac:	cmp	r2, r3
    1ab0:	bne	1abc <main@@Base+0xc6c>
    1ab4:	add	sp, sp, #20
    1ab8:	pop	{r4, r5, pc}
    1abc:	bl	d54 <__stack_chk_fail@plt>
    1ac0:			; <UNDEFINED> instruction: 0x000114b0
    1ac4:	andeq	r0, r0, ip, lsr #1
    1ac8:	eor	r1, r1, #-2147483648	; 0x80000000
    1acc:	b	1ad4 <main@@Base+0xc84>
    1ad0:	eor	r3, r3, #-2147483648	; 0x80000000
    1ad4:	push	{r4, r5, lr}
    1ad8:	lsl	r4, r1, #1
    1adc:	lsl	r5, r3, #1
    1ae0:	teq	r4, r5
    1ae4:	teqeq	r0, r2
    1ae8:	orrsne	ip, r4, r0
    1aec:	orrsne	ip, r5, r2
    1af0:	mvnsne	ip, r4, asr #21
    1af4:	mvnsne	ip, r5, asr #21
    1af8:	beq	1ce4 <main@@Base+0xe94>
    1afc:	lsr	r4, r4, #21
    1b00:	rsbs	r5, r4, r5, lsr #21
    1b04:	rsblt	r5, r5, #0
    1b08:	ble	1b28 <main@@Base+0xcd8>
    1b0c:	add	r4, r4, r5
    1b10:	eor	r2, r0, r2
    1b14:	eor	r3, r1, r3
    1b18:	eor	r0, r2, r0
    1b1c:	eor	r1, r3, r1
    1b20:	eor	r2, r0, r2
    1b24:	eor	r3, r1, r3
    1b28:	cmp	r5, #54	; 0x36
    1b2c:	pophi	{r4, r5, pc}
    1b30:	tst	r1, #-2147483648	; 0x80000000
    1b34:	lsl	r1, r1, #12
    1b38:	mov	ip, #1048576	; 0x100000
    1b3c:	orr	r1, ip, r1, lsr #12
    1b40:	beq	1b4c <main@@Base+0xcfc>
    1b44:	rsbs	r0, r0, #0
    1b48:	rsc	r1, r1, #0
    1b4c:	tst	r3, #-2147483648	; 0x80000000
    1b50:	lsl	r3, r3, #12
    1b54:	orr	r3, ip, r3, lsr #12
    1b58:	beq	1b64 <main@@Base+0xd14>
    1b5c:	rsbs	r2, r2, #0
    1b60:	rsc	r3, r3, #0
    1b64:	teq	r4, r5
    1b68:	beq	1ccc <main@@Base+0xe7c>
    1b6c:	sub	r4, r4, #1
    1b70:	rsbs	lr, r5, #32
    1b74:	blt	1b90 <main@@Base+0xd40>
    1b78:	lsl	ip, r2, lr
    1b7c:	adds	r0, r0, r2, lsr r5
    1b80:	adc	r1, r1, #0
    1b84:	adds	r0, r0, r3, lsl lr
    1b88:	adcs	r1, r1, r3, asr r5
    1b8c:	b	1bac <main@@Base+0xd5c>
    1b90:	sub	r5, r5, #32
    1b94:	add	lr, lr, #32
    1b98:	cmp	r2, #1
    1b9c:	lsl	ip, r3, lr
    1ba0:	orrcs	ip, ip, #2
    1ba4:	adds	r0, r0, r3, asr r5
    1ba8:	adcs	r1, r1, r3, asr #31
    1bac:	and	r5, r1, #-2147483648	; 0x80000000
    1bb0:	bpl	1bc0 <main@@Base+0xd70>
    1bb4:	rsbs	ip, ip, #0
    1bb8:	rscs	r0, r0, #0
    1bbc:	rsc	r1, r1, #0
    1bc0:	cmp	r1, #1048576	; 0x100000
    1bc4:	bcc	1c04 <main@@Base+0xdb4>
    1bc8:	cmp	r1, #2097152	; 0x200000
    1bcc:	bcc	1bec <main@@Base+0xd9c>
    1bd0:	lsrs	r1, r1, #1
    1bd4:	rrxs	r0, r0
    1bd8:	rrx	ip, ip
    1bdc:	add	r4, r4, #1
    1be0:	lsl	r2, r4, #21
    1be4:	cmn	r2, #4194304	; 0x400000
    1be8:	bcs	1d44 <main@@Base+0xef4>
    1bec:	cmp	ip, #-2147483648	; 0x80000000
    1bf0:	lsrseq	ip, r0, #1
    1bf4:	adcs	r0, r0, #0
    1bf8:	adc	r1, r1, r4, lsl #20
    1bfc:	orr	r1, r1, r5
    1c00:	pop	{r4, r5, pc}
    1c04:	lsls	ip, ip, #1
    1c08:	adcs	r0, r0, r0
    1c0c:	adc	r1, r1, r1
    1c10:	tst	r1, #1048576	; 0x100000
    1c14:	sub	r4, r4, #1
    1c18:	bne	1bec <main@@Base+0xd9c>
    1c1c:	teq	r1, #0
    1c20:	moveq	r1, r0
    1c24:	moveq	r0, #0
    1c28:	clz	r3, r1
    1c2c:	addeq	r3, r3, #32
    1c30:	sub	r3, r3, #11
    1c34:	subs	r2, r3, #32
    1c38:	bge	1c5c <main@@Base+0xe0c>
    1c3c:	adds	r2, r2, #12
    1c40:	ble	1c58 <main@@Base+0xe08>
    1c44:	add	ip, r2, #20
    1c48:	rsb	r2, r2, #12
    1c4c:	lsl	r0, r1, ip
    1c50:	lsr	r1, r1, r2
    1c54:	b	1c6c <main@@Base+0xe1c>
    1c58:	add	r2, r2, #20
    1c5c:	rsble	ip, r2, #32
    1c60:	lsl	r1, r1, r2
    1c64:	orrle	r1, r1, r0, lsr ip
    1c68:	lslle	r0, r0, r2
    1c6c:	subs	r4, r4, r3
    1c70:	addge	r1, r1, r4, lsl #20
    1c74:	orrge	r1, r1, r5
    1c78:	popge	{r4, r5, pc}
    1c7c:	mvn	r4, r4
    1c80:	subs	r4, r4, #31
    1c84:	bge	1cc0 <main@@Base+0xe70>
    1c88:	adds	r4, r4, #12
    1c8c:	bgt	1ca8 <main@@Base+0xe58>
    1c90:	add	r4, r4, #20
    1c94:	rsb	r2, r4, #32
    1c98:	lsr	r0, r0, r4
    1c9c:	orr	r0, r0, r1, lsl r2
    1ca0:	orr	r1, r5, r1, lsr r4
    1ca4:	pop	{r4, r5, pc}
    1ca8:	rsb	r4, r4, #12
    1cac:	rsb	r2, r4, #32
    1cb0:	lsr	r0, r0, r2
    1cb4:	orr	r0, r0, r1, lsl r4
    1cb8:	mov	r1, r5
    1cbc:	pop	{r4, r5, pc}
    1cc0:	lsr	r0, r1, r4
    1cc4:	mov	r1, r5
    1cc8:	pop	{r4, r5, pc}
    1ccc:	teq	r4, #0
    1cd0:	eor	r3, r3, #1048576	; 0x100000
    1cd4:	eoreq	r1, r1, #1048576	; 0x100000
    1cd8:	addeq	r4, r4, #1
    1cdc:	subne	r5, r5, #1
    1ce0:	b	1b6c <main@@Base+0xd1c>
    1ce4:	mvns	ip, r4, asr #21
    1ce8:	mvnsne	ip, r5, asr #21
    1cec:	beq	1d54 <main@@Base+0xf04>
    1cf0:	teq	r4, r5
    1cf4:	teqeq	r0, r2
    1cf8:	beq	1d0c <main@@Base+0xebc>
    1cfc:	orrs	ip, r4, r0
    1d00:	moveq	r1, r3
    1d04:	moveq	r0, r2
    1d08:	pop	{r4, r5, pc}
    1d0c:	teq	r1, r3
    1d10:	movne	r1, #0
    1d14:	movne	r0, #0
    1d18:	popne	{r4, r5, pc}
    1d1c:	lsrs	ip, r4, #21
    1d20:	bne	1d34 <main@@Base+0xee4>
    1d24:	lsls	r0, r0, #1
    1d28:	adcs	r1, r1, r1
    1d2c:	orrcs	r1, r1, #-2147483648	; 0x80000000
    1d30:	pop	{r4, r5, pc}
    1d34:	adds	r4, r4, #4194304	; 0x400000
    1d38:	addcc	r1, r1, #1048576	; 0x100000
    1d3c:	popcc	{r4, r5, pc}
    1d40:	and	r5, r1, #-2147483648	; 0x80000000
    1d44:	orr	r1, r5, #2130706432	; 0x7f000000
    1d48:	orr	r1, r1, #15728640	; 0xf00000
    1d4c:	mov	r0, #0
    1d50:	pop	{r4, r5, pc}
    1d54:	mvns	ip, r4, asr #21
    1d58:	movne	r1, r3
    1d5c:	movne	r0, r2
    1d60:	mvnseq	ip, r5, asr #21
    1d64:	movne	r3, r1
    1d68:	movne	r2, r0
    1d6c:	orrs	r4, r0, r1, lsl #12
    1d70:	orrseq	r5, r2, r3, lsl #12
    1d74:	teqeq	r1, r3
    1d78:	orrne	r1, r1, #524288	; 0x80000
    1d7c:	pop	{r4, r5, pc}
    1d80:	teq	r0, #0
    1d84:	moveq	r1, #0
    1d88:	bxeq	lr
    1d8c:	push	{r4, r5, lr}
    1d90:	mov	r4, #1024	; 0x400
    1d94:	add	r4, r4, #50	; 0x32
    1d98:	mov	r5, #0
    1d9c:	mov	r1, #0
    1da0:	b	1c1c <main@@Base+0xdcc>
    1da4:	teq	r0, #0
    1da8:	moveq	r1, #0
    1dac:	bxeq	lr
    1db0:	push	{r4, r5, lr}
    1db4:	mov	r4, #1024	; 0x400
    1db8:	add	r4, r4, #50	; 0x32
    1dbc:	ands	r5, r0, #-2147483648	; 0x80000000
    1dc0:	rsbmi	r0, r0, #0
    1dc4:	mov	r1, #0
    1dc8:	b	1c1c <main@@Base+0xdcc>
    1dcc:	lsls	r2, r0, #1
    1dd0:	asr	r1, r2, #3
    1dd4:	rrx	r1, r1
    1dd8:	lsl	r0, r2, #28
    1ddc:	andsne	r3, r2, #-16777216	; 0xff000000
    1de0:	teqne	r3, #-16777216	; 0xff000000
    1de4:	eorne	r1, r1, #939524096	; 0x38000000
    1de8:	bxne	lr
    1dec:	teq	r2, #0
    1df0:	teqne	r3, #-16777216	; 0xff000000
    1df4:	bxeq	lr
    1df8:	push	{r4, r5, lr}
    1dfc:	mov	r4, #896	; 0x380
    1e00:	and	r5, r1, #-2147483648	; 0x80000000
    1e04:	bic	r1, r1, #-2147483648	; 0x80000000
    1e08:	b	1c1c <main@@Base+0xdcc>
    1e0c:	orrs	r2, r0, r1
    1e10:	bxeq	lr
    1e14:	push	{r4, r5, lr}
    1e18:	mov	r5, #0
    1e1c:	b	1e3c <main@@Base+0xfec>
    1e20:	orrs	r2, r0, r1
    1e24:	bxeq	lr
    1e28:	push	{r4, r5, lr}
    1e2c:	ands	r5, r1, #-2147483648	; 0x80000000
    1e30:	bpl	1e3c <main@@Base+0xfec>
    1e34:	rsbs	r0, r0, #0
    1e38:	rsc	r1, r1, #0
    1e3c:	mov	r4, #1024	; 0x400
    1e40:	add	r4, r4, #50	; 0x32
    1e44:	lsrs	ip, r1, #22
    1e48:	beq	1bc0 <main@@Base+0xd70>
    1e4c:	mov	r2, #3
    1e50:	lsrs	ip, ip, #3
    1e54:	addne	r2, r2, #3
    1e58:	lsrs	ip, ip, #3
    1e5c:	addne	r2, r2, #3
    1e60:	add	r2, r2, ip, lsr #3
    1e64:	rsb	r3, r2, #32
    1e68:	lsl	ip, r0, r3
    1e6c:	lsr	r0, r0, r2
    1e70:	orr	r0, r0, r1, lsl r3
    1e74:	lsr	r1, r1, r2
    1e78:	add	r4, r4, r2
    1e7c:	b	1bc0 <main@@Base+0xd70>

00001e80 <__libc_csu_init@@Base>:
    1e80:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1e84:	mov	r7, r0
    1e88:	ldr	r6, [pc, #76]	; 1edc <__libc_csu_init@@Base+0x5c>
    1e8c:	mov	r8, r1
    1e90:	ldr	r5, [pc, #72]	; 1ee0 <__libc_csu_init@@Base+0x60>
    1e94:	mov	r9, r2
    1e98:	add	r6, pc, r6
    1e9c:	bl	c50 <_init@@Base>
    1ea0:	add	r5, pc, r5
    1ea4:	rsb	r6, r5, r6
    1ea8:	asrs	r6, r6, #2
    1eac:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    1eb0:	sub	r5, r5, #4
    1eb4:	mov	r4, #0
    1eb8:	add	r4, r4, #1
    1ebc:	ldr	r3, [r5, #4]!
    1ec0:	mov	r0, r7
    1ec4:	mov	r1, r8
    1ec8:	mov	r2, r9
    1ecc:	blx	r3
    1ed0:	cmp	r4, r6
    1ed4:	bne	1eb8 <__libc_csu_init@@Base+0x38>
    1ed8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1edc:	andeq	r0, r1, r4, asr #30
    1ee0:	andeq	r0, r1, r8, lsr pc

00001ee4 <__libc_csu_fini@@Base>:
    1ee4:	bx	lr

Disassembly of section .fini:

00001ee8 <_fini@@Base>:
    1ee8:	push	{r3, lr}
    1eec:	pop	{r3, pc}
