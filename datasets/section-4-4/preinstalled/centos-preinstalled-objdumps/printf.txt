
centos-preinstalled/printf:     file format elf32-littlearm


Disassembly of section .init:

00011014 <.init>:
   11014:	push	{r3, lr}
   11018:	bl	1157c <__snprintf_chk@plt+0x278>
   1101c:	pop	{r3, pc}

Disassembly of section .plt:

00011020 <fdopen@plt-0x14>:
   11020:	push	{lr}		; (str lr, [sp, #-4]!)
   11024:	ldr	lr, [pc, #4]	; 11030 <fdopen@plt-0x4>
   11028:	add	lr, pc, lr
   1102c:	ldr	pc, [lr, #8]!
   11030:	ldrdeq	r7, [r1], -r0

00011034 <fdopen@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #94208	; 0x17000
   1103c:	ldr	pc, [ip, #4048]!	; 0xfd0

00011040 <calloc@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #94208	; 0x17000
   11048:	ldr	pc, [ip, #4040]!	; 0xfc8

0001104c <fputs_unlocked@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #94208	; 0x17000
   11054:	ldr	pc, [ip, #4032]!	; 0xfc0

00011058 <raise@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #94208	; 0x17000
   11060:	ldr	pc, [ip, #4024]!	; 0xfb8

00011064 <iconv@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #94208	; 0x17000
   1106c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011070 <strcmp@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #94208	; 0x17000
   11078:	ldr	pc, [ip, #4008]!	; 0xfa8

0001107c <fflush@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #94208	; 0x17000
   11084:	ldr	pc, [ip, #4000]!	; 0xfa0

00011088 <free@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #94208	; 0x17000
   11090:	ldr	pc, [ip, #3992]!	; 0xf98

00011094 <ferror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #94208	; 0x17000
   1109c:	ldr	pc, [ip, #3984]!	; 0xf90

000110a0 <_exit@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #94208	; 0x17000
   110a8:	ldr	pc, [ip, #3976]!	; 0xf88

000110ac <memcpy@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #94208	; 0x17000
   110b4:	ldr	pc, [ip, #3968]!	; 0xf80

000110b8 <__strtoull_internal@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #94208	; 0x17000
   110c0:	ldr	pc, [ip, #3960]!	; 0xf78

000110c4 <mbsinit@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #3952]!	; 0xf70

000110d0 <memcmp@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #3944]!	; 0xf68

000110dc <dcgettext@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #3936]!	; 0xf60

000110e8 <__stack_chk_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #3928]!	; 0xf58

000110f4 <realloc@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #3920]!	; 0xf50

00011100 <textdomain@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #3912]!	; 0xf48

0001110c <iswprint@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #3904]!	; 0xf40

00011118 <fwrite@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #3896]!	; 0xf38

00011124 <lseek64@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #94208	; 0x17000
   1112c:	ldr	pc, [ip, #3888]!	; 0xf30

00011130 <__ctype_get_mb_cur_max@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #94208	; 0x17000
   11138:	ldr	pc, [ip, #3880]!	; 0xf28

0001113c <strcpy@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #94208	; 0x17000
   11144:	ldr	pc, [ip, #3872]!	; 0xf20

00011148 <__fpending@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #94208	; 0x17000
   11150:	ldr	pc, [ip, #3864]!	; 0xf18

00011154 <mbrtowc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #94208	; 0x17000
   1115c:	ldr	pc, [ip, #3856]!	; 0xf10

00011160 <error@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #94208	; 0x17000
   11168:	ldr	pc, [ip, #3848]!	; 0xf08

0001116c <open64@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #94208	; 0x17000
   11174:	ldr	pc, [ip, #3840]!	; 0xf00

00011178 <getenv@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #94208	; 0x17000
   11180:	ldr	pc, [ip, #3832]!	; 0xef8

00011184 <strtold_l@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #94208	; 0x17000
   1118c:	ldr	pc, [ip, #3824]!	; 0xef0

00011190 <malloc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #94208	; 0x17000
   11198:	ldr	pc, [ip, #3816]!	; 0xee8

0001119c <iconv_open@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #94208	; 0x17000
   111a4:	ldr	pc, [ip, #3808]!	; 0xee0

000111a8 <__libc_start_main@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #94208	; 0x17000
   111b0:	ldr	pc, [ip, #3800]!	; 0xed8

000111b4 <__freading@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #94208	; 0x17000
   111bc:	ldr	pc, [ip, #3792]!	; 0xed0

000111c0 <__gmon_start__@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #94208	; 0x17000
   111c8:	ldr	pc, [ip, #3784]!	; 0xec8

000111cc <mempcpy@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #94208	; 0x17000
   111d4:	ldr	pc, [ip, #3776]!	; 0xec0

000111d8 <__ctype_b_loc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #94208	; 0x17000
   111e0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e4 <exit@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #94208	; 0x17000
   111ec:	ldr	pc, [ip, #3760]!	; 0xeb0

000111f0 <strlen@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #94208	; 0x17000
   111f8:	ldr	pc, [ip, #3752]!	; 0xea8

000111fc <strchr@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #94208	; 0x17000
   11204:	ldr	pc, [ip, #3744]!	; 0xea0

00011208 <ungetc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #94208	; 0x17000
   11210:	ldr	pc, [ip, #3736]!	; 0xe98

00011214 <__errno_location@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #94208	; 0x17000
   1121c:	ldr	pc, [ip, #3728]!	; 0xe90

00011220 <__cxa_atexit@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #94208	; 0x17000
   11228:	ldr	pc, [ip, #3720]!	; 0xe88

0001122c <memset@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #94208	; 0x17000
   11234:	ldr	pc, [ip, #3712]!	; 0xe80

00011238 <fscanf@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #94208	; 0x17000
   11240:	ldr	pc, [ip, #3704]!	; 0xe78

00011244 <__printf_chk@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #94208	; 0x17000
   1124c:	ldr	pc, [ip, #3696]!	; 0xe70

00011250 <fileno@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #94208	; 0x17000
   11258:	ldr	pc, [ip, #3688]!	; 0xe68

0001125c <__fprintf_chk@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #94208	; 0x17000
   11264:	ldr	pc, [ip, #3680]!	; 0xe60

00011268 <fclose@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #94208	; 0x17000
   11270:	ldr	pc, [ip, #3672]!	; 0xe58

00011274 <fseeko64@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #94208	; 0x17000
   1127c:	ldr	pc, [ip, #3664]!	; 0xe50

00011280 <__uflow@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #94208	; 0x17000
   11288:	ldr	pc, [ip, #3656]!	; 0xe48

0001128c <__overflow@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #94208	; 0x17000
   11294:	ldr	pc, [ip, #3648]!	; 0xe40

00011298 <setlocale@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #94208	; 0x17000
   112a0:	ldr	pc, [ip, #3640]!	; 0xe38

000112a4 <strrchr@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #94208	; 0x17000
   112ac:	ldr	pc, [ip, #3632]!	; 0xe30

000112b0 <nl_langinfo@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #94208	; 0x17000
   112b8:	ldr	pc, [ip, #3624]!	; 0xe28

000112bc <newlocale@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #94208	; 0x17000
   112c4:	ldr	pc, [ip, #3616]!	; 0xe20

000112c8 <__strtoll_internal@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #94208	; 0x17000
   112d0:	ldr	pc, [ip, #3608]!	; 0xe18

000112d4 <bindtextdomain@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #94208	; 0x17000
   112dc:	ldr	pc, [ip, #3600]!	; 0xe10

000112e0 <strncmp@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #94208	; 0x17000
   112e8:	ldr	pc, [ip, #3592]!	; 0xe08

000112ec <abort@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #94208	; 0x17000
   112f4:	ldr	pc, [ip, #3584]!	; 0xe00

000112f8 <close@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #94208	; 0x17000
   11300:	ldr	pc, [ip, #3576]!	; 0xdf8

00011304 <__snprintf_chk@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #94208	; 0x17000
   1130c:	ldr	pc, [ip, #3568]!	; 0xdf0

Disassembly of section .text:

00011310 <close_stdout@@Base-0x1b24>:
   11310:	push	{r4, r5, r6, r7, r8, lr}
   11314:	mov	r4, r0
   11318:	sub	sp, sp, #8
   1131c:	ldr	r0, [r1]
   11320:	mov	r5, r1
   11324:	bl	12ff0 <close_stdout@@Base+0x1bc>
   11328:	ldr	r1, [pc, #460]	; 114fc <__snprintf_chk@plt+0x1f8>
   1132c:	mov	r0, #6
   11330:	ldr	r6, [pc, #456]	; 11500 <__snprintf_chk@plt+0x1fc>
   11334:	add	r1, pc, r1
   11338:	ldr	r7, [pc, #452]	; 11504 <__snprintf_chk@plt+0x200>
   1133c:	bl	11298 <setlocale@plt>
   11340:	add	r6, pc, r6
   11344:	ldr	r1, [pc, #444]	; 11508 <__snprintf_chk@plt+0x204>
   11348:	add	r7, pc, r7
   1134c:	mov	r0, r6
   11350:	add	r1, pc, r1
   11354:	bl	112d4 <bindtextdomain@plt>
   11358:	mov	r0, r6
   1135c:	ldr	r6, [pc, #424]	; 1150c <__snprintf_chk@plt+0x208>
   11360:	bl	11100 <textdomain@plt>
   11364:	ldr	r3, [pc, #420]	; 11510 <__snprintf_chk@plt+0x20c>
   11368:	add	r6, pc, r6
   1136c:	ldr	r0, [r6, r3]
   11370:	bl	17c88 <fwrite_success_callback@@Base+0x343c>
   11374:	ldr	r0, [pc, #408]	; 11514 <__snprintf_chk@plt+0x210>
   11378:	mov	r3, #0
   1137c:	str	r3, [r7]
   11380:	add	r0, pc, r0
   11384:	bl	11178 <getenv@plt>
   11388:	adds	r0, r0, #0
   1138c:	movne	r0, #1
   11390:	cmp	r4, #2
   11394:	strb	r0, [r7, #4]
   11398:	beq	1145c <__snprintf_chk@plt+0x158>
   1139c:	cmp	r4, #1
   113a0:	ble	114d0 <__snprintf_chk@plt+0x1cc>
   113a4:	ldr	r7, [r5, #4]
   113a8:	ldrb	r3, [r7]
   113ac:	cmp	r3, #45	; 0x2d
   113b0:	bne	113dc <__snprintf_chk@plt+0xd8>
   113b4:	ldrb	r3, [r7, #1]
   113b8:	cmp	r3, #45	; 0x2d
   113bc:	bne	113dc <__snprintf_chk@plt+0xd8>
   113c0:	ldrb	r3, [r7, #2]
   113c4:	cmp	r3, #0
   113c8:	bne	113dc <__snprintf_chk@plt+0xd8>
   113cc:	sub	r4, r4, #1
   113d0:	add	r5, r5, #4
   113d4:	cmp	r4, #1
   113d8:	ble	114d0 <__snprintf_chk@plt+0x1cc>
   113dc:	ldr	r7, [r5, #4]
   113e0:	sub	r4, r4, #2
   113e4:	add	r5, r5, #8
   113e8:	mov	r1, r4
   113ec:	mov	r2, r5
   113f0:	mov	r0, r7
   113f4:	bl	11e48 <__snprintf_chk@plt+0xb44>
   113f8:	rsb	r4, r0, r4
   113fc:	add	r5, r5, r0, lsl #2
   11400:	cmp	r4, #0
   11404:	cmpgt	r0, #0
   11408:	movle	r6, #0
   1140c:	movgt	r6, #1
   11410:	bgt	113e8 <__snprintf_chk@plt+0xe4>
   11414:	cmp	r4, #0
   11418:	ble	11450 <__snprintf_chk@plt+0x14c>
   1141c:	ldr	r1, [pc, #244]	; 11518 <__snprintf_chk@plt+0x214>
   11420:	mov	r2, #5
   11424:	mov	r0, r6
   11428:	add	r1, pc, r1
   1142c:	bl	110dc <dcgettext@plt>
   11430:	mov	r4, r0
   11434:	ldr	r0, [r5]
   11438:	bl	14840 <close_stdout@@Base+0x1a0c>
   1143c:	mov	r1, r6
   11440:	mov	r2, r4
   11444:	mov	r3, r0
   11448:	mov	r0, r6
   1144c:	bl	11160 <error@plt>
   11450:	ldr	r3, [pc, #196]	; 1151c <__snprintf_chk@plt+0x218>
   11454:	ldr	r0, [pc, r3]
   11458:	bl	111e4 <exit@plt>
   1145c:	ldr	r7, [r5, #4]
   11460:	ldr	r1, [pc, #184]	; 11520 <__snprintf_chk@plt+0x21c>
   11464:	mov	r0, r7
   11468:	add	r1, pc, r1
   1146c:	bl	11070 <strcmp@plt>
   11470:	cmp	r0, #0
   11474:	beq	114f8 <__snprintf_chk@plt+0x1f4>
   11478:	ldr	r1, [pc, #164]	; 11524 <__snprintf_chk@plt+0x220>
   1147c:	mov	r0, r7
   11480:	add	r1, pc, r1
   11484:	bl	11070 <strcmp@plt>
   11488:	subs	r8, r0, #0
   1148c:	bne	113a8 <__snprintf_chk@plt+0xa4>
   11490:	ldr	r1, [pc, #144]	; 11528 <__snprintf_chk@plt+0x224>
   11494:	ldr	r3, [pc, #144]	; 1152c <__snprintf_chk@plt+0x228>
   11498:	ldr	r2, [pc, #144]	; 11530 <__snprintf_chk@plt+0x22c>
   1149c:	ldr	r0, [r6, r1]
   114a0:	ldr	r3, [r6, r3]
   114a4:	add	r2, pc, r2
   114a8:	ldr	r1, [pc, #132]	; 11534 <__snprintf_chk@plt+0x230>
   114ac:	ldr	r0, [r0]
   114b0:	ldr	r3, [r3]
   114b4:	add	r1, pc, r1
   114b8:	stm	sp, {r2, r8}
   114bc:	ldr	r2, [pc, #116]	; 11538 <__snprintf_chk@plt+0x234>
   114c0:	add	r2, pc, r2
   114c4:	bl	15164 <fwrite_success_callback@@Base+0x918>
   114c8:	mov	r0, r8
   114cc:	bl	111e4 <exit@plt>
   114d0:	ldr	r1, [pc, #100]	; 1153c <__snprintf_chk@plt+0x238>
   114d4:	mov	r2, #5
   114d8:	mov	r0, #0
   114dc:	add	r1, pc, r1
   114e0:	bl	110dc <dcgettext@plt>
   114e4:	mov	r2, r0
   114e8:	mov	r0, #0
   114ec:	mov	r1, r0
   114f0:	bl	11160 <error@plt>
   114f4:	mov	r0, #1
   114f8:	bl	12b00 <__snprintf_chk@plt+0x17fc>
   114fc:	andeq	r6, r0, ip, ror fp
   11500:	andeq	r7, r0, ip, lsr #32
   11504:	andeq	r7, r1, r8, lsr lr
   11508:	andeq	r7, r0, r0, ror #1
   1150c:	muleq	r1, r0, ip
   11510:	andeq	r0, r0, r0, lsl r1
   11514:	andeq	r7, r0, r4, asr #1
   11518:	andeq	r7, r0, r0, rrx
   1151c:	andeq	r7, r1, ip, lsr #26
   11520:	andeq	r6, r0, ip, ror #31
   11524:	ldrdeq	r6, [r0], -ip
   11528:	andeq	r0, r0, ip, lsl r1
   1152c:	andeq	r0, r0, r8, lsl #2
   11530:	andeq	r6, r0, r4, asr #31
   11534:	muleq	r0, r4, lr
   11538:	andeq	r6, r0, r8, lsr #29
   1153c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   11540:	mov	fp, #0
   11544:	mov	lr, #0
   11548:	pop	{r1}		; (ldr r1, [sp], #4)
   1154c:	mov	r2, sp
   11550:	push	{r2}		; (str r2, [sp, #-4]!)
   11554:	push	{r0}		; (str r0, [sp, #-4]!)
   11558:	ldr	ip, [pc, #16]	; 11570 <__snprintf_chk@plt+0x26c>
   1155c:	push	{ip}		; (str ip, [sp, #-4]!)
   11560:	ldr	r0, [pc, #12]	; 11574 <__snprintf_chk@plt+0x270>
   11564:	ldr	r3, [pc, #12]	; 11578 <__snprintf_chk@plt+0x274>
   11568:	bl	111a8 <__libc_start_main@plt>
   1156c:	bl	112ec <abort@plt>
   11570:	andeq	r7, r1, r4, lsl #25
   11574:	andeq	r1, r1, r0, lsl r3
   11578:	andeq	r7, r1, r0, lsr #24
   1157c:	ldr	r3, [pc, #20]	; 11598 <__snprintf_chk@plt+0x294>
   11580:	ldr	r2, [pc, #20]	; 1159c <__snprintf_chk@plt+0x298>
   11584:	add	r3, pc, r3
   11588:	ldr	r2, [r3, r2]
   1158c:	cmp	r2, #0
   11590:	bxeq	lr
   11594:	b	111c0 <__gmon_start__@plt>
   11598:	andeq	r7, r1, r4, ror sl
   1159c:	andeq	r0, r0, r4, lsl r1
   115a0:	push	{r3, lr}
   115a4:	movw	r0, #37252	; 0x9184
   115a8:	ldr	r3, [pc, #36]	; 115d4 <__snprintf_chk@plt+0x2d0>
   115ac:	movt	r0, #2
   115b0:	rsb	r3, r0, r3
   115b4:	cmp	r3, #6
   115b8:	popls	{r3, pc}
   115bc:	movw	r3, #0
   115c0:	movt	r3, #0
   115c4:	cmp	r3, #0
   115c8:	popeq	{r3, pc}
   115cc:	blx	r3
   115d0:	pop	{r3, pc}
   115d4:	andeq	r9, r2, r7, lsl #3
   115d8:	push	{r3, lr}
   115dc:	movw	r0, #37252	; 0x9184
   115e0:	movw	r3, #37252	; 0x9184
   115e4:	movt	r0, #2
   115e8:	movt	r3, #2
   115ec:	rsb	r3, r0, r3
   115f0:	asr	r3, r3, #2
   115f4:	add	r3, r3, r3, lsr #31
   115f8:	asrs	r1, r3, #1
   115fc:	popeq	{r3, pc}
   11600:	movw	r2, #0
   11604:	movt	r2, #0
   11608:	cmp	r2, #0
   1160c:	popeq	{r3, pc}
   11610:	blx	r2
   11614:	pop	{r3, pc}
   11618:	push	{r4, lr}
   1161c:	movw	r4, #37252	; 0x9184
   11620:	movt	r4, #2
   11624:	ldrb	r3, [r4]
   11628:	cmp	r3, #0
   1162c:	popne	{r4, pc}
   11630:	bl	115a0 <__snprintf_chk@plt+0x29c>
   11634:	mov	r3, #1
   11638:	strb	r3, [r4]
   1163c:	pop	{r4, pc}
   11640:	movw	r0, #36576	; 0x8ee0
   11644:	movt	r0, #2
   11648:	push	{r3, lr}
   1164c:	ldr	r3, [r0]
   11650:	cmp	r3, #0
   11654:	beq	1166c <__snprintf_chk@plt+0x368>
   11658:	movw	r3, #0
   1165c:	movt	r3, #0
   11660:	cmp	r3, #0
   11664:	beq	1166c <__snprintf_chk@plt+0x368>
   11668:	blx	r3
   1166c:	pop	{r3, lr}
   11670:	b	115d8 <__snprintf_chk@plt+0x2d4>
   11674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11678:	mov	r4, r0
   1167c:	ldrb	r6, [r0, #1]
   11680:	sub	sp, sp, #28
   11684:	ldr	sl, [pc, #1528]	; 11c84 <__snprintf_chk@plt+0x980>
   11688:	cmp	r6, #120	; 0x78
   1168c:	add	sl, pc, sl
   11690:	beq	11780 <__snprintf_chk@plt+0x47c>
   11694:	sub	r3, r6, #48	; 0x30
   11698:	add	fp, r0, #1
   1169c:	cmp	r3, #7
   116a0:	bhi	11718 <__snprintf_chk@plt+0x414>
   116a4:	cmp	r1, #0
   116a8:	bne	11820 <__snprintf_chk@plt+0x51c>
   116ac:	add	r6, fp, r1
   116b0:	mov	r1, #0
   116b4:	add	r0, r6, #3
   116b8:	mov	fp, r6
   116bc:	ldrb	r3, [r6], #1
   116c0:	sub	r3, r3, #48	; 0x30
   116c4:	uxtb	r2, r3
   116c8:	cmp	r2, #7
   116cc:	bhi	116e0 <__snprintf_chk@plt+0x3dc>
   116d0:	cmp	r6, r0
   116d4:	add	r1, r3, r1, lsl #3
   116d8:	mov	fp, r6
   116dc:	bne	116b8 <__snprintf_chk@plt+0x3b4>
   116e0:	ldr	r3, [pc, #1440]	; 11c88 <__snprintf_chk@plt+0x984>
   116e4:	ldr	r3, [sl, r3]
   116e8:	ldr	r0, [r3]
   116ec:	ldr	r3, [r0, #20]
   116f0:	ldr	r2, [r0, #24]
   116f4:	cmp	r3, r2
   116f8:	addcc	r2, r3, #1
   116fc:	strcc	r2, [r0, #20]
   11700:	strbcc	r1, [r3]
   11704:	bcs	11c58 <__snprintf_chk@plt+0x954>
   11708:	rsb	r0, r4, fp
   1170c:	sub	r0, r0, #1
   11710:	add	sp, sp, #28
   11714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11718:	cmp	r6, #0
   1171c:	bne	11830 <__snprintf_chk@plt+0x52c>
   11720:	ldr	r3, [pc, #1376]	; 11c88 <__snprintf_chk@plt+0x984>
   11724:	ldr	r5, [sl, r3]
   11728:	ldr	r0, [r5]
   1172c:	ldr	r3, [r0, #20]
   11730:	ldr	r2, [r0, #24]
   11734:	cmp	r3, r2
   11738:	addcc	r1, r3, #1
   1173c:	strcc	r1, [r0, #20]
   11740:	movcc	r2, #92	; 0x5c
   11744:	strbcc	r2, [r3]
   11748:	bcs	11c78 <__snprintf_chk@plt+0x974>
   1174c:	ldrb	r1, [r4, #1]
   11750:	cmp	r1, #0
   11754:	beq	11708 <__snprintf_chk@plt+0x404>
   11758:	ldr	r0, [r5]
   1175c:	ldr	r3, [r0, #20]
   11760:	ldr	r2, [r0, #24]
   11764:	cmp	r3, r2
   11768:	addcc	r2, r3, #1
   1176c:	strcc	r2, [r0, #20]
   11770:	strbcc	r1, [r3]
   11774:	bcs	11c70 <__snprintf_chk@plt+0x96c>
   11778:	add	fp, r4, #2
   1177c:	b	11708 <__snprintf_chk@plt+0x404>
   11780:	bl	111d8 <__ctype_b_loc@plt>
   11784:	mov	r5, #0
   11788:	add	r2, r4, #2
   1178c:	mov	r6, r5
   11790:	ldr	r0, [r0]
   11794:	mov	fp, r2
   11798:	add	r2, r2, #1
   1179c:	ldrb	r3, [fp]
   117a0:	lsl	r1, r3, #1
   117a4:	ldrh	r1, [r0, r1]
   117a8:	tst	r1, #4096	; 0x1000
   117ac:	beq	11c28 <__snprintf_chk@plt+0x924>
   117b0:	sub	r1, r3, #97	; 0x61
   117b4:	lsl	r6, r6, #4
   117b8:	cmp	r1, #5
   117bc:	subls	r3, r3, #87	; 0x57
   117c0:	bls	117d4 <__snprintf_chk@plt+0x4d0>
   117c4:	sub	r1, r3, #65	; 0x41
   117c8:	cmp	r1, #5
   117cc:	subls	r3, r3, #55	; 0x37
   117d0:	subhi	r3, r3, #48	; 0x30
   117d4:	add	r5, r5, #1
   117d8:	add	r6, r6, r3
   117dc:	cmp	r5, #2
   117e0:	mov	fp, r2
   117e4:	bne	11794 <__snprintf_chk@plt+0x490>
   117e8:	ldr	r3, [pc, #1176]	; 11c88 <__snprintf_chk@plt+0x984>
   117ec:	ldr	r3, [sl, r3]
   117f0:	ldr	r0, [r3]
   117f4:	ldr	r3, [r0, #20]
   117f8:	ldr	r2, [r0, #24]
   117fc:	cmp	r3, r2
   11800:	bcs	11c64 <__snprintf_chk@plt+0x960>
   11804:	add	r2, r3, #1
   11808:	str	r2, [r0, #20]
   1180c:	rsb	r0, r4, fp
   11810:	strb	r6, [r3]
   11814:	sub	r0, r0, #1
   11818:	add	sp, sp, #28
   1181c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11820:	subs	r0, r6, #48	; 0x30
   11824:	rsbs	r1, r0, #0
   11828:	adcs	r1, r1, r0
   1182c:	b	116ac <__snprintf_chk@plt+0x3a8>
   11830:	ldr	r0, [pc, #1108]	; 11c8c <__snprintf_chk@plt+0x988>
   11834:	mov	r1, r6
   11838:	add	r0, pc, r0
   1183c:	bl	111fc <strchr@plt>
   11840:	cmp	r0, #0
   11844:	beq	118b4 <__snprintf_chk@plt+0x5b0>
   11848:	sub	r3, r6, #97	; 0x61
   1184c:	add	fp, r4, #2
   11850:	cmp	r3, #21
   11854:	addls	pc, pc, r3, lsl #2
   11858:	b	11c00 <__snprintf_chk@plt+0x8fc>
   1185c:	b	11bc8 <__snprintf_chk@plt+0x8c4>
   11860:	b	11b90 <__snprintf_chk@plt+0x88c>
   11864:	b	11b88 <__snprintf_chk@plt+0x884>
   11868:	b	11c00 <__snprintf_chk@plt+0x8fc>
   1186c:	b	11b50 <__snprintf_chk@plt+0x84c>
   11870:	b	11b18 <__snprintf_chk@plt+0x814>
   11874:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11878:	b	11c00 <__snprintf_chk@plt+0x8fc>
   1187c:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11880:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11884:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11888:	b	11c00 <__snprintf_chk@plt+0x8fc>
   1188c:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11890:	b	11ae0 <__snprintf_chk@plt+0x7dc>
   11894:	b	11c00 <__snprintf_chk@plt+0x8fc>
   11898:	b	11c00 <__snprintf_chk@plt+0x8fc>
   1189c:	b	11c00 <__snprintf_chk@plt+0x8fc>
   118a0:	b	11aa8 <__snprintf_chk@plt+0x7a4>
   118a4:	b	11c00 <__snprintf_chk@plt+0x8fc>
   118a8:	b	11a70 <__snprintf_chk@plt+0x76c>
   118ac:	b	11c00 <__snprintf_chk@plt+0x8fc>
   118b0:	b	11a38 <__snprintf_chk@plt+0x734>
   118b4:	subs	r1, r6, #117	; 0x75
   118b8:	and	r3, r6, #223	; 0xdf
   118bc:	rsbs	r2, r1, #0
   118c0:	adcs	r2, r2, r1
   118c4:	cmp	r3, #85	; 0x55
   118c8:	str	r2, [sp, #20]
   118cc:	bne	11720 <__snprintf_chk@plt+0x41c>
   118d0:	cmp	r2, #0
   118d4:	mov	r7, r0
   118d8:	moveq	r3, #8
   118dc:	movne	r3, #4
   118e0:	str	r3, [sp, #12]
   118e4:	add	r3, r4, #2
   118e8:	str	r3, [sp, #16]
   118ec:	ldr	r3, [pc, #924]	; 11c90 <__snprintf_chk@plt+0x98c>
   118f0:	ldr	r5, [sp, #12]
   118f4:	add	r3, pc, r3
   118f8:	str	r3, [sp, #8]
   118fc:	bl	111d8 <__ctype_b_loc@plt>
   11900:	ldr	r9, [sp, #16]
   11904:	mov	fp, r0
   11908:	b	11940 <__snprintf_chk@plt+0x63c>
   1190c:	sub	r2, r3, #97	; 0x61
   11910:	lsl	r7, r7, #4
   11914:	cmp	r2, #5
   11918:	subls	r3, r3, #87	; 0x57
   1191c:	bls	11930 <__snprintf_chk@plt+0x62c>
   11920:	sub	r2, r3, #65	; 0x41
   11924:	cmp	r2, #5
   11928:	subls	r3, r3, #55	; 0x37
   1192c:	subhi	r3, r3, #48	; 0x30
   11930:	sub	r5, r5, #1
   11934:	add	r7, r3, r7
   11938:	cmp	r5, #0
   1193c:	ble	11988 <__snprintf_chk@plt+0x684>
   11940:	ldrb	r3, [r9], #1
   11944:	ldr	r1, [fp]
   11948:	lsl	r2, r3, #1
   1194c:	ldrh	ip, [r1, r2]
   11950:	and	ip, ip, #4096	; 0x1000
   11954:	uxth	r8, ip
   11958:	cmp	r8, #0
   1195c:	bne	1190c <__snprintf_chk@plt+0x608>
   11960:	ldr	r1, [sp, #8]
   11964:	mov	r2, #5
   11968:	mov	r0, r8
   1196c:	bl	110dc <dcgettext@plt>
   11970:	mov	r1, r8
   11974:	mov	r2, r0
   11978:	mov	r0, #1
   1197c:	bl	11160 <error@plt>
   11980:	ldrb	r3, [r9, #-1]
   11984:	b	1190c <__snprintf_chk@plt+0x608>
   11988:	cmp	r7, #159	; 0x9f
   1198c:	ldr	fp, [sp, #16]
   11990:	ldr	r2, [sp, #12]
   11994:	movhi	r3, #0
   11998:	movls	r3, #1
   1199c:	cmp	r7, #36	; 0x24
   119a0:	moveq	r3, #0
   119a4:	cmp	r2, #1
   119a8:	addge	fp, fp, r2
   119ac:	addlt	fp, fp, #1
   119b0:	cmp	r3, #0
   119b4:	beq	119c4 <__snprintf_chk@plt+0x6c0>
   119b8:	bic	r3, r7, #32
   119bc:	cmp	r3, #64	; 0x40
   119c0:	bne	119d0 <__snprintf_chk@plt+0x6cc>
   119c4:	sub	r3, r7, #55296	; 0xd800
   119c8:	cmp	r3, #2048	; 0x800
   119cc:	bcs	11a10 <__snprintf_chk@plt+0x70c>
   119d0:	ldr	r1, [pc, #700]	; 11c94 <__snprintf_chk@plt+0x990>
   119d4:	mov	r2, #5
   119d8:	mov	r0, #0
   119dc:	add	r1, pc, r1
   119e0:	bl	110dc <dcgettext@plt>
   119e4:	ldr	r3, [sp, #20]
   119e8:	str	r7, [sp, #4]
   119ec:	cmp	r3, #0
   119f0:	mov	r3, r6
   119f4:	moveq	r1, #8
   119f8:	movne	r1, #4
   119fc:	mov	r2, r0
   11a00:	str	r1, [sp]
   11a04:	mov	r0, #1
   11a08:	mov	r1, #0
   11a0c:	bl	11160 <error@plt>
   11a10:	ldr	r3, [pc, #624]	; 11c88 <__snprintf_chk@plt+0x984>
   11a14:	mov	r1, r7
   11a18:	mov	r2, #0
   11a1c:	ldr	r3, [sl, r3]
   11a20:	ldr	r0, [r3]
   11a24:	bl	14bcc <fwrite_success_callback@@Base+0x380>
   11a28:	rsb	r0, r4, fp
   11a2c:	sub	r0, r0, #1
   11a30:	add	sp, sp, #28
   11a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a38:	ldr	r3, [pc, #584]	; 11c88 <__snprintf_chk@plt+0x984>
   11a3c:	ldr	r3, [sl, r3]
   11a40:	ldr	r0, [r3]
   11a44:	ldr	r3, [r0, #20]
   11a48:	ldr	r2, [r0, #24]
   11a4c:	cmp	r3, r2
   11a50:	addcc	r1, r3, #1
   11a54:	strcc	r1, [r0, #20]
   11a58:	movcc	r2, #11
   11a5c:	strbcc	r2, [r3]
   11a60:	bcc	11708 <__snprintf_chk@plt+0x404>
   11a64:	mov	r1, #11
   11a68:	bl	1128c <__overflow@plt>
   11a6c:	b	11708 <__snprintf_chk@plt+0x404>
   11a70:	ldr	r3, [pc, #528]	; 11c88 <__snprintf_chk@plt+0x984>
   11a74:	ldr	r3, [sl, r3]
   11a78:	ldr	r0, [r3]
   11a7c:	ldr	r3, [r0, #20]
   11a80:	ldr	r2, [r0, #24]
   11a84:	cmp	r3, r2
   11a88:	addcc	r1, r3, #1
   11a8c:	strcc	r1, [r0, #20]
   11a90:	movcc	r2, #9
   11a94:	strbcc	r2, [r3]
   11a98:	bcc	11708 <__snprintf_chk@plt+0x404>
   11a9c:	mov	r1, #9
   11aa0:	bl	1128c <__overflow@plt>
   11aa4:	b	11708 <__snprintf_chk@plt+0x404>
   11aa8:	ldr	r3, [pc, #472]	; 11c88 <__snprintf_chk@plt+0x984>
   11aac:	ldr	r3, [sl, r3]
   11ab0:	ldr	r0, [r3]
   11ab4:	ldr	r3, [r0, #20]
   11ab8:	ldr	r2, [r0, #24]
   11abc:	cmp	r3, r2
   11ac0:	addcc	r1, r3, #1
   11ac4:	strcc	r1, [r0, #20]
   11ac8:	movcc	r2, #13
   11acc:	strbcc	r2, [r3]
   11ad0:	bcc	11708 <__snprintf_chk@plt+0x404>
   11ad4:	mov	r1, #13
   11ad8:	bl	1128c <__overflow@plt>
   11adc:	b	11708 <__snprintf_chk@plt+0x404>
   11ae0:	ldr	r3, [pc, #416]	; 11c88 <__snprintf_chk@plt+0x984>
   11ae4:	ldr	r3, [sl, r3]
   11ae8:	ldr	r0, [r3]
   11aec:	ldr	r3, [r0, #20]
   11af0:	ldr	r2, [r0, #24]
   11af4:	cmp	r3, r2
   11af8:	addcc	r1, r3, #1
   11afc:	strcc	r1, [r0, #20]
   11b00:	movcc	r2, #10
   11b04:	strbcc	r2, [r3]
   11b08:	bcc	11708 <__snprintf_chk@plt+0x404>
   11b0c:	mov	r1, #10
   11b10:	bl	1128c <__overflow@plt>
   11b14:	b	11708 <__snprintf_chk@plt+0x404>
   11b18:	ldr	r3, [pc, #360]	; 11c88 <__snprintf_chk@plt+0x984>
   11b1c:	ldr	r3, [sl, r3]
   11b20:	ldr	r0, [r3]
   11b24:	ldr	r3, [r0, #20]
   11b28:	ldr	r2, [r0, #24]
   11b2c:	cmp	r3, r2
   11b30:	addcc	r1, r3, #1
   11b34:	strcc	r1, [r0, #20]
   11b38:	movcc	r2, #12
   11b3c:	strbcc	r2, [r3]
   11b40:	bcc	11708 <__snprintf_chk@plt+0x404>
   11b44:	mov	r1, #12
   11b48:	bl	1128c <__overflow@plt>
   11b4c:	b	11708 <__snprintf_chk@plt+0x404>
   11b50:	ldr	r3, [pc, #304]	; 11c88 <__snprintf_chk@plt+0x984>
   11b54:	ldr	r3, [sl, r3]
   11b58:	ldr	r0, [r3]
   11b5c:	ldr	r3, [r0, #20]
   11b60:	ldr	r2, [r0, #24]
   11b64:	cmp	r3, r2
   11b68:	addcc	r1, r3, #1
   11b6c:	strcc	r1, [r0, #20]
   11b70:	movcc	r2, #27
   11b74:	strbcc	r2, [r3]
   11b78:	bcc	11708 <__snprintf_chk@plt+0x404>
   11b7c:	mov	r1, #27
   11b80:	bl	1128c <__overflow@plt>
   11b84:	b	11708 <__snprintf_chk@plt+0x404>
   11b88:	mov	r0, #0
   11b8c:	bl	111e4 <exit@plt>
   11b90:	ldr	r3, [pc, #240]	; 11c88 <__snprintf_chk@plt+0x984>
   11b94:	ldr	r3, [sl, r3]
   11b98:	ldr	r0, [r3]
   11b9c:	ldr	r3, [r0, #20]
   11ba0:	ldr	r2, [r0, #24]
   11ba4:	cmp	r3, r2
   11ba8:	addcc	r1, r3, #1
   11bac:	strcc	r1, [r0, #20]
   11bb0:	movcc	r2, #8
   11bb4:	strbcc	r2, [r3]
   11bb8:	bcc	11708 <__snprintf_chk@plt+0x404>
   11bbc:	mov	r1, #8
   11bc0:	bl	1128c <__overflow@plt>
   11bc4:	b	11708 <__snprintf_chk@plt+0x404>
   11bc8:	ldr	r3, [pc, #184]	; 11c88 <__snprintf_chk@plt+0x984>
   11bcc:	ldr	r3, [sl, r3]
   11bd0:	ldr	r0, [r3]
   11bd4:	ldr	r3, [r0, #20]
   11bd8:	ldr	r2, [r0, #24]
   11bdc:	cmp	r3, r2
   11be0:	addcc	r1, r3, #1
   11be4:	strcc	r1, [r0, #20]
   11be8:	movcc	r2, #7
   11bec:	strbcc	r2, [r3]
   11bf0:	bcc	11708 <__snprintf_chk@plt+0x404>
   11bf4:	mov	r1, #7
   11bf8:	bl	1128c <__overflow@plt>
   11bfc:	b	11708 <__snprintf_chk@plt+0x404>
   11c00:	ldr	r3, [pc, #128]	; 11c88 <__snprintf_chk@plt+0x984>
   11c04:	ldr	r3, [sl, r3]
   11c08:	ldr	r0, [r3]
   11c0c:	ldr	r3, [r0, #20]
   11c10:	ldr	r2, [r0, #24]
   11c14:	cmp	r3, r2
   11c18:	bcc	11804 <__snprintf_chk@plt+0x500>
   11c1c:	mov	r1, r6
   11c20:	bl	1128c <__overflow@plt>
   11c24:	b	11708 <__snprintf_chk@plt+0x404>
   11c28:	cmp	r5, #0
   11c2c:	bne	117e8 <__snprintf_chk@plt+0x4e4>
   11c30:	ldr	r1, [pc, #96]	; 11c98 <__snprintf_chk@plt+0x994>
   11c34:	mov	r0, r5
   11c38:	mov	r2, #5
   11c3c:	add	r1, pc, r1
   11c40:	bl	110dc <dcgettext@plt>
   11c44:	mov	r1, r5
   11c48:	mov	r2, r0
   11c4c:	mov	r0, #1
   11c50:	bl	11160 <error@plt>
   11c54:	b	117e8 <__snprintf_chk@plt+0x4e4>
   11c58:	uxtb	r1, r1
   11c5c:	bl	1128c <__overflow@plt>
   11c60:	b	11708 <__snprintf_chk@plt+0x404>
   11c64:	uxtb	r1, r6
   11c68:	bl	1128c <__overflow@plt>
   11c6c:	b	11708 <__snprintf_chk@plt+0x404>
   11c70:	bl	1128c <__overflow@plt>
   11c74:	b	11778 <__snprintf_chk@plt+0x474>
   11c78:	mov	r1, #92	; 0x5c
   11c7c:	bl	1128c <__overflow@plt>
   11c80:	b	1174c <__snprintf_chk@plt+0x448>
   11c84:	andeq	r7, r1, ip, ror #18
   11c88:	andeq	r0, r0, ip, lsl r1
   11c8c:	andeq	r6, r0, ip, lsr #9
   11c90:	andeq	r6, r0, r8, asr #7
   11c94:	andeq	r6, r0, r4, lsl r3
   11c98:	andeq	r6, r0, r0, lsl #1
   11c9c:	push	{r4, r5, r6, lr}
   11ca0:	mov	r6, r0
   11ca4:	mov	r5, r1
   11ca8:	bl	11214 <__errno_location@plt>
   11cac:	ldr	r4, [r0]
   11cb0:	cmp	r4, #0
   11cb4:	bne	11d0c <__snprintf_chk@plt+0xa08>
   11cb8:	ldrb	r3, [r5]
   11cbc:	cmp	r3, #0
   11cc0:	popeq	{r4, r5, r6, pc}
   11cc4:	ldr	r1, [pc, #108]	; 11d38 <__snprintf_chk@plt+0xa34>
   11cc8:	cmp	r6, r5
   11ccc:	mov	r0, r4
   11cd0:	add	r1, pc, r1
   11cd4:	ldrne	r1, [pc, #96]	; 11d3c <__snprintf_chk@plt+0xa38>
   11cd8:	addne	r1, pc, r1
   11cdc:	mov	r2, #5
   11ce0:	bl	110dc <dcgettext@plt>
   11ce4:	mov	r3, r6
   11ce8:	mov	r1, r4
   11cec:	mov	r2, r0
   11cf0:	mov	r0, r4
   11cf4:	bl	11160 <error@plt>
   11cf8:	ldr	r3, [pc, #64]	; 11d40 <__snprintf_chk@plt+0xa3c>
   11cfc:	mov	r2, #1
   11d00:	add	r3, pc, r3
   11d04:	str	r2, [r3]
   11d08:	pop	{r4, r5, r6, pc}
   11d0c:	ldr	r2, [pc, #48]	; 11d44 <__snprintf_chk@plt+0xa40>
   11d10:	mov	r3, r6
   11d14:	mov	r1, r4
   11d18:	mov	r0, #0
   11d1c:	add	r2, pc, r2
   11d20:	bl	11160 <error@plt>
   11d24:	ldr	r3, [pc, #28]	; 11d48 <__snprintf_chk@plt+0xa44>
   11d28:	mov	r2, #1
   11d2c:	add	r3, pc, r3
   11d30:	str	r2, [r3]
   11d34:	pop	{r4, r5, r6, pc}
   11d38:	andeq	r6, r0, ip, asr #32
   11d3c:	andeq	r6, r0, r4, rrx
   11d40:	andeq	r7, r1, r0, lsl #9
   11d44:	andeq	r6, r0, r0, asr #15
   11d48:	andeq	r7, r1, r4, asr r4
   11d4c:	ldr	r2, [pc, #228]	; 11e38 <__snprintf_chk@plt+0xb34>
   11d50:	ldr	r1, [pc, #228]	; 11e3c <__snprintf_chk@plt+0xb38>
   11d54:	add	r2, pc, r2
   11d58:	push	{r4, r5, r6, r7, r8, lr}
   11d5c:	sub	sp, sp, #8
   11d60:	ldr	r7, [r2, r1]
   11d64:	mov	r6, r0
   11d68:	ldrb	r3, [r0]
   11d6c:	cmp	r3, #34	; 0x22
   11d70:	cmpne	r3, #39	; 0x27
   11d74:	ldr	r3, [r7]
   11d78:	str	r3, [sp, #4]
   11d7c:	bne	11d8c <__snprintf_chk@plt+0xa88>
   11d80:	ldrb	r4, [r0, #1]
   11d84:	cmp	r4, #0
   11d88:	bne	11de0 <__snprintf_chk@plt+0xadc>
   11d8c:	bl	11214 <__errno_location@plt>
   11d90:	mov	r3, #0
   11d94:	mov	r2, r3
   11d98:	mov	r1, r0
   11d9c:	mov	r0, r6
   11da0:	str	r3, [r1]
   11da4:	mov	r1, sp
   11da8:	bl	112c8 <__strtoll_internal@plt>
   11dac:	mov	r4, r0
   11db0:	mov	r5, r1
   11db4:	mov	r0, r6
   11db8:	ldr	r1, [sp]
   11dbc:	bl	11c9c <__snprintf_chk@plt+0x998>
   11dc0:	ldr	r2, [sp, #4]
   11dc4:	mov	r0, r4
   11dc8:	ldr	r3, [r7]
   11dcc:	mov	r1, r5
   11dd0:	cmp	r2, r3
   11dd4:	bne	11e34 <__snprintf_chk@plt+0xb30>
   11dd8:	add	sp, sp, #8
   11ddc:	pop	{r4, r5, r6, r7, r8, pc}
   11de0:	ldrb	r3, [r0, #2]
   11de4:	uxtb	r4, r4
   11de8:	mov	r5, #0
   11dec:	cmp	r3, #0
   11df0:	beq	11dc0 <__snprintf_chk@plt+0xabc>
   11df4:	ldr	r3, [pc, #68]	; 11e40 <__snprintf_chk@plt+0xb3c>
   11df8:	add	r3, pc, r3
   11dfc:	ldrb	r8, [r3, #4]
   11e00:	cmp	r8, #0
   11e04:	bne	11dc0 <__snprintf_chk@plt+0xabc>
   11e08:	ldr	r1, [pc, #52]	; 11e44 <__snprintf_chk@plt+0xb40>
   11e0c:	mov	r0, r8
   11e10:	mov	r2, #5
   11e14:	add	r1, pc, r1
   11e18:	bl	110dc <dcgettext@plt>
   11e1c:	mov	r1, r8
   11e20:	add	r3, r6, #2
   11e24:	mov	r2, r0
   11e28:	mov	r0, r8
   11e2c:	bl	11160 <error@plt>
   11e30:	b	11dc0 <__snprintf_chk@plt+0xabc>
   11e34:	bl	110e8 <__stack_chk_fail@plt>
   11e38:	andeq	r7, r1, r4, lsr #5
   11e3c:	andeq	r0, r0, r4, lsl #2
   11e40:	andeq	r7, r1, r8, lsl #7
   11e44:	andeq	r5, r0, ip, asr #30
   11e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e4c:	vpush	{d8}
   11e50:	sub	sp, sp, #356	; 0x164
   11e54:	ldr	r9, [pc, #3184]	; 12acc <__snprintf_chk@plt+0x17c8>
   11e58:	mov	fp, r0
   11e5c:	ldr	r3, [pc, #3180]	; 12ad0 <__snprintf_chk@plt+0x17cc>
   11e60:	add	r9, pc, r9
   11e64:	str	r1, [sp, #52]	; 0x34
   11e68:	str	r2, [sp, #24]
   11e6c:	ldr	r3, [r9, r3]
   11e70:	ldrb	r1, [r0]
   11e74:	str	r3, [sp, #48]	; 0x30
   11e78:	cmp	r1, #0
   11e7c:	ldr	r3, [r3]
   11e80:	str	r3, [sp, #348]	; 0x15c
   11e84:	beq	12978 <__snprintf_chk@plt+0x1674>
   11e88:	ldr	ip, [pc, #3140]	; 12ad4 <__snprintf_chk@plt+0x17d0>
   11e8c:	mov	r7, r9
   11e90:	ldr	sl, [sp, #52]	; 0x34
   11e94:	add	ip, pc, ip
   11e98:	str	ip, [sp, #72]	; 0x48
   11e9c:	mov	ip, #0
   11ea0:	str	ip, [sp, #56]	; 0x38
   11ea4:	ldr	ip, [pc, #3116]	; 12ad8 <__snprintf_chk@plt+0x17d4>
   11ea8:	str	sl, [sp, #20]
   11eac:	add	ip, pc, ip
   11eb0:	str	ip, [sp, #76]	; 0x4c
   11eb4:	mov	ip, #0
   11eb8:	str	ip, [sp, #60]	; 0x3c
   11ebc:	ldr	ip, [pc, #3096]	; 12adc <__snprintf_chk@plt+0x17d8>
   11ec0:	add	ip, pc, ip
   11ec4:	str	ip, [sp, #80]	; 0x50
   11ec8:	ldr	ip, [pc, #3088]	; 12ae0 <__snprintf_chk@plt+0x17dc>
   11ecc:	add	ip, pc, ip
   11ed0:	str	ip, [sp, #84]	; 0x54
   11ed4:	ldr	ip, [pc, #3080]	; 12ae4 <__snprintf_chk@plt+0x17e0>
   11ed8:	add	ip, pc, ip
   11edc:	str	ip, [sp, #64]	; 0x40
   11ee0:	ldr	ip, [pc, #3072]	; 12ae8 <__snprintf_chk@plt+0x17e4>
   11ee4:	add	ip, pc, ip
   11ee8:	str	ip, [sp, #68]	; 0x44
   11eec:	b	11f10 <__snprintf_chk@plt+0xc0c>
   11ef0:	mov	r0, fp
   11ef4:	mov	r1, #0
   11ef8:	bl	11674 <__snprintf_chk@plt+0x370>
   11efc:	add	sl, fp, r0
   11f00:	add	fp, sl, #1
   11f04:	ldrb	r1, [sl, #1]
   11f08:	cmp	r1, #0
   11f0c:	beq	11f5c <__snprintf_chk@plt+0xc58>
   11f10:	cmp	r1, #37	; 0x25
   11f14:	beq	11f88 <__snprintf_chk@plt+0xc84>
   11f18:	cmp	r1, #92	; 0x5c
   11f1c:	beq	11ef0 <__snprintf_chk@plt+0xbec>
   11f20:	ldr	r3, [pc, #3012]	; 12aec <__snprintf_chk@plt+0x17e8>
   11f24:	ldr	r3, [r7, r3]
   11f28:	ldr	r0, [r3]
   11f2c:	ldr	r3, [r0, #20]
   11f30:	ldr	r2, [r0, #24]
   11f34:	cmp	r3, r2
   11f38:	bcs	12abc <__snprintf_chk@plt+0x17b8>
   11f3c:	mov	sl, fp
   11f40:	add	r2, r3, #1
   11f44:	str	r2, [r0, #20]
   11f48:	add	fp, fp, #1
   11f4c:	strb	r1, [r3]
   11f50:	ldrb	r1, [sl, #1]
   11f54:	cmp	r1, #0
   11f58:	bne	11f10 <__snprintf_chk@plt+0xc0c>
   11f5c:	ldr	sl, [sp, #20]
   11f60:	ldr	ip, [sp, #52]	; 0x34
   11f64:	rsb	r0, sl, ip
   11f68:	ldr	ip, [sp, #48]	; 0x30
   11f6c:	ldr	r2, [sp, #348]	; 0x15c
   11f70:	ldr	r3, [ip]
   11f74:	cmp	r2, r3
   11f78:	bne	12aa8 <__snprintf_chk@plt+0x17a4>
   11f7c:	add	sp, sp, #356	; 0x164
   11f80:	vpop	{d8}
   11f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f88:	ldrb	r4, [fp, #1]
   11f8c:	add	sl, fp, #1
   11f90:	cmp	r4, #37	; 0x25
   11f94:	beq	12578 <__snprintf_chk@plt+0x1274>
   11f98:	cmp	r4, #98	; 0x62
   11f9c:	bne	12048 <__snprintf_chk@plt+0xd44>
   11fa0:	ldr	ip, [sp, #20]
   11fa4:	cmp	ip, #0
   11fa8:	ble	12040 <__snprintf_chk@plt+0xd3c>
   11fac:	ldr	ip, [sp, #24]
   11fb0:	ldr	r4, [ip]
   11fb4:	ldrb	r1, [r4]
   11fb8:	cmp	r1, #0
   11fbc:	bne	12000 <__snprintf_chk@plt+0xcfc>
   11fc0:	b	12028 <__snprintf_chk@plt+0xd24>
   11fc4:	ldr	r3, [pc, #2848]	; 12aec <__snprintf_chk@plt+0x17e8>
   11fc8:	ldr	r3, [r7, r3]
   11fcc:	ldr	r3, [r3]
   11fd0:	ldr	r2, [r3, #20]
   11fd4:	ldr	r0, [r3, #24]
   11fd8:	cmp	r2, r0
   11fdc:	addcc	ip, r2, #1
   11fe0:	strcc	ip, [r3, #20]
   11fe4:	movcc	r0, r4
   11fe8:	strbcc	r1, [r2]
   11fec:	bcs	12aac <__snprintf_chk@plt+0x17a8>
   11ff0:	ldrb	r1, [r0, #1]
   11ff4:	add	r4, r0, #1
   11ff8:	cmp	r1, #0
   11ffc:	beq	12028 <__snprintf_chk@plt+0xd24>
   12000:	cmp	r1, #92	; 0x5c
   12004:	bne	11fc4 <__snprintf_chk@plt+0xcc0>
   12008:	mov	r0, r4
   1200c:	mov	r1, #1
   12010:	bl	11674 <__snprintf_chk@plt+0x370>
   12014:	add	r0, r4, r0
   12018:	add	r4, r0, #1
   1201c:	ldrb	r1, [r0, #1]
   12020:	cmp	r1, #0
   12024:	bne	12000 <__snprintf_chk@plt+0xcfc>
   12028:	ldr	ip, [sp, #24]
   1202c:	add	ip, ip, #4
   12030:	str	ip, [sp, #24]
   12034:	ldr	ip, [sp, #20]
   12038:	sub	ip, ip, #1
   1203c:	str	ip, [sp, #20]
   12040:	add	fp, fp, #2
   12044:	b	11f04 <__snprintf_chk@plt+0xc00>
   12048:	mov	r1, #0
   1204c:	mov	r2, #256	; 0x100
   12050:	add	r0, sp, #92	; 0x5c
   12054:	bl	1122c <memset@plt>
   12058:	mov	r3, #1
   1205c:	mov	r2, r3
   12060:	mov	r6, r3
   12064:	mov	ip, r3
   12068:	mov	r5, r3
   1206c:	mov	lr, r3
   12070:	mov	r0, r3
   12074:	mov	r1, r3
   12078:	str	r3, [sp, #44]	; 0x2c
   1207c:	str	r3, [sp, #40]	; 0x28
   12080:	str	r3, [sp, #36]	; 0x24
   12084:	str	r3, [sp, #32]
   12088:	str	r3, [sp, #28]
   1208c:	strb	r3, [sp, #180]	; 0xb4
   12090:	strb	r3, [sp, #212]	; 0xd4
   12094:	strb	r3, [sp, #209]	; 0xd1
   12098:	strb	r3, [sp, #207]	; 0xcf
   1209c:	strb	r3, [sp, #203]	; 0xcb
   120a0:	strb	r3, [sp, #197]	; 0xc5
   120a4:	strb	r3, [sp, #163]	; 0xa3
   120a8:	strb	r3, [sp, #195]	; 0xc3
   120ac:	strb	r3, [sp, #162]	; 0xa2
   120b0:	strb	r3, [sp, #194]	; 0xc2
   120b4:	strb	r3, [sp, #161]	; 0xa1
   120b8:	strb	r3, [sp, #193]	; 0xc1
   120bc:	strb	r3, [sp, #192]	; 0xc0
   120c0:	strb	r3, [sp, #191]	; 0xbf
   120c4:	strb	r3, [sp, #157]	; 0x9d
   120c8:	sub	r3, r4, #32
   120cc:	rsb	r9, fp, sl
   120d0:	mov	r8, sl
   120d4:	cmp	r3, #41	; 0x29
   120d8:	addls	pc, pc, r3, lsl #2
   120dc:	b	121e0 <__snprintf_chk@plt+0xedc>
   120e0:	b	12190 <__snprintf_chk@plt+0xe8c>
   120e4:	b	121e0 <__snprintf_chk@plt+0xedc>
   120e8:	b	121e0 <__snprintf_chk@plt+0xedc>
   120ec:	b	121c4 <__snprintf_chk@plt+0xec0>
   120f0:	b	121e0 <__snprintf_chk@plt+0xedc>
   120f4:	b	121e0 <__snprintf_chk@plt+0xedc>
   120f8:	b	121e0 <__snprintf_chk@plt+0xedc>
   120fc:	b	12198 <__snprintf_chk@plt+0xe94>
   12100:	b	121e0 <__snprintf_chk@plt+0xedc>
   12104:	b	121e0 <__snprintf_chk@plt+0xedc>
   12108:	b	121e0 <__snprintf_chk@plt+0xedc>
   1210c:	b	12190 <__snprintf_chk@plt+0xe8c>
   12110:	b	121e0 <__snprintf_chk@plt+0xedc>
   12114:	b	12190 <__snprintf_chk@plt+0xe8c>
   12118:	b	121e0 <__snprintf_chk@plt+0xedc>
   1211c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12120:	b	12188 <__snprintf_chk@plt+0xe84>
   12124:	b	121e0 <__snprintf_chk@plt+0xedc>
   12128:	b	121e0 <__snprintf_chk@plt+0xedc>
   1212c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12130:	b	121e0 <__snprintf_chk@plt+0xedc>
   12134:	b	121e0 <__snprintf_chk@plt+0xedc>
   12138:	b	121e0 <__snprintf_chk@plt+0xedc>
   1213c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12140:	b	121e0 <__snprintf_chk@plt+0xedc>
   12144:	b	121e0 <__snprintf_chk@plt+0xedc>
   12148:	b	121e0 <__snprintf_chk@plt+0xedc>
   1214c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12150:	b	121e0 <__snprintf_chk@plt+0xedc>
   12154:	b	121e0 <__snprintf_chk@plt+0xedc>
   12158:	b	121e0 <__snprintf_chk@plt+0xedc>
   1215c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12160:	b	121e0 <__snprintf_chk@plt+0xedc>
   12164:	b	121e0 <__snprintf_chk@plt+0xedc>
   12168:	b	121e0 <__snprintf_chk@plt+0xedc>
   1216c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12170:	b	121e0 <__snprintf_chk@plt+0xedc>
   12174:	b	121e0 <__snprintf_chk@plt+0xedc>
   12178:	b	121e0 <__snprintf_chk@plt+0xedc>
   1217c:	b	121e0 <__snprintf_chk@plt+0xedc>
   12180:	b	121e0 <__snprintf_chk@plt+0xedc>
   12184:	b	12198 <__snprintf_chk@plt+0xe94>
   12188:	mov	r0, #0
   1218c:	mov	ip, r0
   12190:	ldrb	r4, [sl, #1]!
   12194:	b	120c8 <__snprintf_chk@plt+0xdc4>
   12198:	mov	r1, #0
   1219c:	ldrb	r4, [sl, #1]!
   121a0:	str	r1, [sp, #28]
   121a4:	mov	r0, r1
   121a8:	str	r1, [sp, #36]	; 0x24
   121ac:	mov	r5, r1
   121b0:	str	r1, [sp, #40]	; 0x28
   121b4:	mov	ip, r1
   121b8:	str	r1, [sp, #44]	; 0x2c
   121bc:	mov	r2, r1
   121c0:	b	120c8 <__snprintf_chk@plt+0xdc4>
   121c4:	mov	r0, #0
   121c8:	ldrb	r4, [sl, #1]!
   121cc:	str	r0, [sp, #32]
   121d0:	mov	lr, r0
   121d4:	mov	ip, r0
   121d8:	mov	r6, r0
   121dc:	b	120c8 <__snprintf_chk@plt+0xdc4>
   121e0:	ldr	r3, [sp, #40]	; 0x28
   121e4:	cmp	r4, #42	; 0x2a
   121e8:	strb	r2, [sp, #180]	; 0xb4
   121ec:	ldr	r2, [sp, #44]	; 0x2c
   121f0:	strb	ip, [sp, #207]	; 0xcf
   121f4:	strb	r3, [sp, #161]	; 0xa1
   121f8:	strb	r2, [sp, #212]	; 0xd4
   121fc:	ldr	ip, [sp, #36]	; 0x24
   12200:	ldr	r2, [sp, #32]
   12204:	ldr	r3, [sp, #28]
   12208:	strb	r6, [sp, #209]	; 0xd1
   1220c:	strb	r5, [sp, #203]	; 0xcb
   12210:	strb	lr, [sp, #197]	; 0xc5
   12214:	strb	ip, [sp, #193]	; 0xc1
   12218:	strb	r2, [sp, #192]	; 0xc0
   1221c:	strb	r0, [sp, #191]	; 0xbf
   12220:	strb	r3, [sp, #157]	; 0x9d
   12224:	strb	r1, [sp, #189]	; 0xbd
   12228:	beq	127d4 <__snprintf_chk@plt+0x14d0>
   1222c:	sub	r3, r4, #48	; 0x30
   12230:	cmp	r3, #9
   12234:	addls	sl, sl, #1
   12238:	bhi	12258 <__snprintf_chk@plt+0xf54>
   1223c:	ldrb	r4, [sl]
   12240:	mov	r8, sl
   12244:	add	r9, r9, #1
   12248:	add	sl, sl, #1
   1224c:	sub	r3, r4, #48	; 0x30
   12250:	cmp	r3, #9
   12254:	bls	1223c <__snprintf_chk@plt+0xf38>
   12258:	mov	ip, #0
   1225c:	str	ip, [sp, #36]	; 0x24
   12260:	cmp	r4, #46	; 0x2e
   12264:	beq	12780 <__snprintf_chk@plt+0x147c>
   12268:	mov	ip, #0
   1226c:	str	ip, [sp, #32]
   12270:	b	12278 <__snprintf_chk@plt+0xf74>
   12274:	ldrb	r4, [r8, #1]!
   12278:	and	r3, r4, #223	; 0xdf
   1227c:	mov	sl, r8
   12280:	cmp	r3, #76	; 0x4c
   12284:	beq	12274 <__snprintf_chk@plt+0xf70>
   12288:	and	r3, r4, #253	; 0xfd
   1228c:	cmp	r3, #104	; 0x68
   12290:	beq	12274 <__snprintf_chk@plt+0xf70>
   12294:	cmp	r4, #116	; 0x74
   12298:	beq	12274 <__snprintf_chk@plt+0xf70>
   1229c:	cmp	r4, #122	; 0x7a
   122a0:	beq	12274 <__snprintf_chk@plt+0xf70>
   122a4:	add	r0, sp, #352	; 0x160
   122a8:	add	r3, r0, r4
   122ac:	ldrb	r5, [r3, #-260]	; 0xfffffefc
   122b0:	cmp	r5, #0
   122b4:	beq	1272c <__snprintf_chk@plt+0x1428>
   122b8:	add	ip, r8, #1
   122bc:	str	ip, [sp, #28]
   122c0:	ldr	ip, [sp, #20]
   122c4:	cmp	ip, #0
   122c8:	ble	12774 <__snprintf_chk@plt+0x1470>
   122cc:	sub	ip, ip, #1
   122d0:	str	ip, [sp, #20]
   122d4:	ldr	ip, [sp, #24]
   122d8:	add	ip, ip, #4
   122dc:	ldr	r8, [ip, #-4]
   122e0:	str	ip, [sp, #24]
   122e4:	sub	r5, r4, #65	; 0x41
   122e8:	cmp	r5, #55	; 0x37
   122ec:	addls	pc, pc, r5, lsl #2
   122f0:	b	125bc <__snprintf_chk@plt+0x12b8>
   122f4:	b	123d4 <__snprintf_chk@plt+0x10d0>
   122f8:	b	125bc <__snprintf_chk@plt+0x12b8>
   122fc:	b	125bc <__snprintf_chk@plt+0x12b8>
   12300:	b	125bc <__snprintf_chk@plt+0x12b8>
   12304:	b	123d4 <__snprintf_chk@plt+0x10d0>
   12308:	b	123d4 <__snprintf_chk@plt+0x10d0>
   1230c:	b	123d4 <__snprintf_chk@plt+0x10d0>
   12310:	b	125bc <__snprintf_chk@plt+0x12b8>
   12314:	b	125bc <__snprintf_chk@plt+0x12b8>
   12318:	b	125bc <__snprintf_chk@plt+0x12b8>
   1231c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12320:	b	125bc <__snprintf_chk@plt+0x12b8>
   12324:	b	125bc <__snprintf_chk@plt+0x12b8>
   12328:	b	125bc <__snprintf_chk@plt+0x12b8>
   1232c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12330:	b	125bc <__snprintf_chk@plt+0x12b8>
   12334:	b	125bc <__snprintf_chk@plt+0x12b8>
   12338:	b	125bc <__snprintf_chk@plt+0x12b8>
   1233c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12340:	b	125bc <__snprintf_chk@plt+0x12b8>
   12344:	b	125bc <__snprintf_chk@plt+0x12b8>
   12348:	b	125bc <__snprintf_chk@plt+0x12b8>
   1234c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12350:	b	125b0 <__snprintf_chk@plt+0x12ac>
   12354:	b	125bc <__snprintf_chk@plt+0x12b8>
   12358:	b	125bc <__snprintf_chk@plt+0x12b8>
   1235c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12360:	b	125bc <__snprintf_chk@plt+0x12b8>
   12364:	b	125bc <__snprintf_chk@plt+0x12b8>
   12368:	b	125bc <__snprintf_chk@plt+0x12b8>
   1236c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12370:	b	125bc <__snprintf_chk@plt+0x12b8>
   12374:	b	123d4 <__snprintf_chk@plt+0x10d0>
   12378:	b	125bc <__snprintf_chk@plt+0x12b8>
   1237c:	b	125bc <__snprintf_chk@plt+0x12b8>
   12380:	b	125b0 <__snprintf_chk@plt+0x12ac>
   12384:	b	123d4 <__snprintf_chk@plt+0x10d0>
   12388:	b	123d4 <__snprintf_chk@plt+0x10d0>
   1238c:	b	123d4 <__snprintf_chk@plt+0x10d0>
   12390:	b	125bc <__snprintf_chk@plt+0x12b8>
   12394:	b	125b0 <__snprintf_chk@plt+0x12ac>
   12398:	b	125bc <__snprintf_chk@plt+0x12b8>
   1239c:	b	125bc <__snprintf_chk@plt+0x12b8>
   123a0:	b	125bc <__snprintf_chk@plt+0x12b8>
   123a4:	b	125bc <__snprintf_chk@plt+0x12b8>
   123a8:	b	125bc <__snprintf_chk@plt+0x12b8>
   123ac:	b	125b0 <__snprintf_chk@plt+0x12ac>
   123b0:	b	125bc <__snprintf_chk@plt+0x12b8>
   123b4:	b	125bc <__snprintf_chk@plt+0x12b8>
   123b8:	b	125bc <__snprintf_chk@plt+0x12b8>
   123bc:	b	125bc <__snprintf_chk@plt+0x12b8>
   123c0:	b	125bc <__snprintf_chk@plt+0x12b8>
   123c4:	b	125b0 <__snprintf_chk@plt+0x12ac>
   123c8:	b	125bc <__snprintf_chk@plt+0x12b8>
   123cc:	b	125bc <__snprintf_chk@plt+0x12b8>
   123d0:	b	125b0 <__snprintf_chk@plt+0x12ac>
   123d4:	ldr	ip, [sp, #64]	; 0x40
   123d8:	mov	r3, #1
   123dc:	add	r0, r9, #2
   123e0:	str	r3, [sp, #16]
   123e4:	add	r0, r0, r3
   123e8:	str	ip, [sp, #12]
   123ec:	bl	15274 <fwrite_success_callback@@Base+0xa28>
   123f0:	mov	r1, fp
   123f4:	mov	r2, r9
   123f8:	mov	r6, r0
   123fc:	bl	111cc <mempcpy@plt>
   12400:	ldr	r3, [sp, #16]
   12404:	ldr	ip, [sp, #12]
   12408:	mov	r2, r3
   1240c:	mov	r1, ip
   12410:	bl	111cc <mempcpy@plt>
   12414:	mov	r3, #0
   12418:	strb	r4, [r0]
   1241c:	strb	r3, [r0, #1]
   12420:	cmp	r5, #55	; 0x37
   12424:	addls	pc, pc, r5, lsl #2
   12428:	b	12568 <__snprintf_chk@plt+0x1264>
   1242c:	b	1250c <__snprintf_chk@plt+0x1208>
   12430:	b	12568 <__snprintf_chk@plt+0x1264>
   12434:	b	12568 <__snprintf_chk@plt+0x1264>
   12438:	b	12568 <__snprintf_chk@plt+0x1264>
   1243c:	b	1250c <__snprintf_chk@plt+0x1208>
   12440:	b	1250c <__snprintf_chk@plt+0x1208>
   12444:	b	1250c <__snprintf_chk@plt+0x1208>
   12448:	b	12568 <__snprintf_chk@plt+0x1264>
   1244c:	b	12568 <__snprintf_chk@plt+0x1264>
   12450:	b	12568 <__snprintf_chk@plt+0x1264>
   12454:	b	12568 <__snprintf_chk@plt+0x1264>
   12458:	b	12568 <__snprintf_chk@plt+0x1264>
   1245c:	b	12568 <__snprintf_chk@plt+0x1264>
   12460:	b	12568 <__snprintf_chk@plt+0x1264>
   12464:	b	12568 <__snprintf_chk@plt+0x1264>
   12468:	b	12568 <__snprintf_chk@plt+0x1264>
   1246c:	b	12568 <__snprintf_chk@plt+0x1264>
   12470:	b	12568 <__snprintf_chk@plt+0x1264>
   12474:	b	12568 <__snprintf_chk@plt+0x1264>
   12478:	b	12568 <__snprintf_chk@plt+0x1264>
   1247c:	b	12568 <__snprintf_chk@plt+0x1264>
   12480:	b	12568 <__snprintf_chk@plt+0x1264>
   12484:	b	12568 <__snprintf_chk@plt+0x1264>
   12488:	b	12658 <__snprintf_chk@plt+0x1354>
   1248c:	b	12568 <__snprintf_chk@plt+0x1264>
   12490:	b	12568 <__snprintf_chk@plt+0x1264>
   12494:	b	12568 <__snprintf_chk@plt+0x1264>
   12498:	b	12568 <__snprintf_chk@plt+0x1264>
   1249c:	b	12568 <__snprintf_chk@plt+0x1264>
   124a0:	b	12568 <__snprintf_chk@plt+0x1264>
   124a4:	b	12568 <__snprintf_chk@plt+0x1264>
   124a8:	b	12568 <__snprintf_chk@plt+0x1264>
   124ac:	b	1250c <__snprintf_chk@plt+0x1208>
   124b0:	b	12568 <__snprintf_chk@plt+0x1264>
   124b4:	b	12630 <__snprintf_chk@plt+0x132c>
   124b8:	b	125f0 <__snprintf_chk@plt+0x12ec>
   124bc:	b	1250c <__snprintf_chk@plt+0x1208>
   124c0:	b	1250c <__snprintf_chk@plt+0x1208>
   124c4:	b	1250c <__snprintf_chk@plt+0x1208>
   124c8:	b	12568 <__snprintf_chk@plt+0x1264>
   124cc:	b	125f0 <__snprintf_chk@plt+0x12ec>
   124d0:	b	12568 <__snprintf_chk@plt+0x1264>
   124d4:	b	12568 <__snprintf_chk@plt+0x1264>
   124d8:	b	12568 <__snprintf_chk@plt+0x1264>
   124dc:	b	12568 <__snprintf_chk@plt+0x1264>
   124e0:	b	12568 <__snprintf_chk@plt+0x1264>
   124e4:	b	12658 <__snprintf_chk@plt+0x1354>
   124e8:	b	12568 <__snprintf_chk@plt+0x1264>
   124ec:	b	12568 <__snprintf_chk@plt+0x1264>
   124f0:	b	12568 <__snprintf_chk@plt+0x1264>
   124f4:	b	125c8 <__snprintf_chk@plt+0x12c4>
   124f8:	b	12568 <__snprintf_chk@plt+0x1264>
   124fc:	b	12658 <__snprintf_chk@plt+0x1354>
   12500:	b	12568 <__snprintf_chk@plt+0x1264>
   12504:	b	12568 <__snprintf_chk@plt+0x1264>
   12508:	b	12658 <__snprintf_chk@plt+0x1354>
   1250c:	ldrb	r3, [r8]
   12510:	cmp	r3, #34	; 0x22
   12514:	cmpne	r3, #39	; 0x27
   12518:	beq	12854 <__snprintf_chk@plt+0x1550>
   1251c:	bl	11214 <__errno_location@plt>
   12520:	mov	r3, #0
   12524:	add	r1, sp, #88	; 0x58
   12528:	str	r3, [r0]
   1252c:	mov	r0, r8
   12530:	bl	12d90 <__snprintf_chk@plt+0x1a8c>
   12534:	mov	r0, r8
   12538:	ldr	r1, [sp, #88]	; 0x58
   1253c:	vmov.f64	d8, d0
   12540:	bl	11c9c <__snprintf_chk@plt+0x998>
   12544:	ldr	ip, [sp, #36]	; 0x24
   12548:	cmp	ip, #0
   1254c:	ldr	ip, [sp, #32]
   12550:	bne	12930 <__snprintf_chk@plt+0x162c>
   12554:	cmp	ip, #0
   12558:	mov	r0, r6
   1255c:	bne	12998 <__snprintf_chk@plt+0x1694>
   12560:	vmov	r2, r3, d8
   12564:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12568:	mov	r0, r6
   1256c:	ldr	fp, [sp, #28]
   12570:	bl	11088 <free@plt>
   12574:	b	11f04 <__snprintf_chk@plt+0xc00>
   12578:	ldr	r3, [pc, #1388]	; 12aec <__snprintf_chk@plt+0x17e8>
   1257c:	ldr	r3, [r7, r3]
   12580:	ldr	r0, [r3]
   12584:	ldr	r3, [r0, #20]
   12588:	ldr	r2, [r0, #24]
   1258c:	cmp	r3, r2
   12590:	addcc	r2, r3, #1
   12594:	addcc	fp, fp, #2
   12598:	strcc	r2, [r0, #20]
   1259c:	strbcc	r1, [r3]
   125a0:	bcc	11f04 <__snprintf_chk@plt+0xc00>
   125a4:	bl	1128c <__overflow@plt>
   125a8:	add	fp, fp, #2
   125ac:	b	11f04 <__snprintf_chk@plt+0xc00>
   125b0:	mov	r3, #2
   125b4:	ldr	ip, [sp, #68]	; 0x44
   125b8:	b	123dc <__snprintf_chk@plt+0x10d8>
   125bc:	mov	ip, fp
   125c0:	mov	r3, #0
   125c4:	b	123dc <__snprintf_chk@plt+0x10d8>
   125c8:	ldr	ip, [sp, #36]	; 0x24
   125cc:	cmp	ip, #0
   125d0:	ldr	ip, [sp, #32]
   125d4:	bne	128ac <__snprintf_chk@plt+0x15a8>
   125d8:	cmp	ip, #0
   125dc:	bne	129a8 <__snprintf_chk@plt+0x16a4>
   125e0:	mov	r1, r8
   125e4:	mov	r0, r6
   125e8:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   125ec:	b	12568 <__snprintf_chk@plt+0x1264>
   125f0:	mov	r0, r8
   125f4:	bl	11d4c <__snprintf_chk@plt+0xa48>
   125f8:	ldr	ip, [sp, #36]	; 0x24
   125fc:	cmp	ip, #0
   12600:	ldr	ip, [sp, #32]
   12604:	mov	r2, r0
   12608:	mov	r3, r1
   1260c:	beq	1270c <__snprintf_chk@plt+0x1408>
   12610:	cmp	ip, #0
   12614:	beq	12914 <__snprintf_chk@plt+0x1610>
   12618:	strd	r2, [sp]
   1261c:	mov	r0, r6
   12620:	ldr	r1, [sp, #60]	; 0x3c
   12624:	ldr	r2, [sp, #56]	; 0x38
   12628:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   1262c:	b	12568 <__snprintf_chk@plt+0x1264>
   12630:	ldr	ip, [sp, #36]	; 0x24
   12634:	cmp	ip, #0
   12638:	bne	128e4 <__snprintf_chk@plt+0x15e0>
   1263c:	ldrb	r1, [r8]
   12640:	mov	r0, r6
   12644:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12648:	mov	r0, r6
   1264c:	ldr	fp, [sp, #28]
   12650:	bl	11088 <free@plt>
   12654:	b	11f04 <__snprintf_chk@plt+0xc00>
   12658:	ldrb	r3, [r8]
   1265c:	cmp	r3, #34	; 0x22
   12660:	cmpne	r3, #39	; 0x27
   12664:	bne	126c0 <__snprintf_chk@plt+0x13bc>
   12668:	ldrb	r4, [r8, #1]
   1266c:	cmp	r4, #0
   12670:	beq	126c0 <__snprintf_chk@plt+0x13bc>
   12674:	ldrb	r3, [r8, #2]
   12678:	uxtb	r4, r4
   1267c:	mov	r5, #0
   12680:	cmp	r3, #0
   12684:	beq	126f4 <__snprintf_chk@plt+0x13f0>
   12688:	ldr	ip, [sp, #80]	; 0x50
   1268c:	ldrb	r9, [ip, #4]
   12690:	cmp	r9, #0
   12694:	bne	126f4 <__snprintf_chk@plt+0x13f0>
   12698:	ldr	r1, [sp, #84]	; 0x54
   1269c:	mov	r0, r9
   126a0:	mov	r2, #5
   126a4:	bl	110dc <dcgettext@plt>
   126a8:	mov	r1, r9
   126ac:	add	r3, r8, #2
   126b0:	mov	r2, r0
   126b4:	mov	r0, r9
   126b8:	bl	11160 <error@plt>
   126bc:	b	126f4 <__snprintf_chk@plt+0x13f0>
   126c0:	bl	11214 <__errno_location@plt>
   126c4:	mov	r3, #0
   126c8:	mov	r2, r3
   126cc:	mov	r1, r0
   126d0:	mov	r0, r8
   126d4:	str	r3, [r1]
   126d8:	add	r1, sp, #88	; 0x58
   126dc:	bl	110b8 <__strtoull_internal@plt>
   126e0:	mov	r4, r0
   126e4:	mov	r5, r1
   126e8:	mov	r0, r8
   126ec:	ldr	r1, [sp, #88]	; 0x58
   126f0:	bl	11c9c <__snprintf_chk@plt+0x998>
   126f4:	ldr	ip, [sp, #36]	; 0x24
   126f8:	cmp	ip, #0
   126fc:	ldr	ip, [sp, #32]
   12700:	bne	12904 <__snprintf_chk@plt+0x1600>
   12704:	mov	r2, r4
   12708:	mov	r3, r5
   1270c:	cmp	ip, #0
   12710:	mov	r0, r6
   12714:	bne	128cc <__snprintf_chk@plt+0x15c8>
   12718:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   1271c:	mov	r0, r6
   12720:	ldr	fp, [sp, #28]
   12724:	bl	11088 <free@plt>
   12728:	b	11f04 <__snprintf_chk@plt+0xc00>
   1272c:	ldr	r1, [pc, #956]	; 12af0 <__snprintf_chk@plt+0x17ec>
   12730:	mov	r2, #5
   12734:	mov	r0, r5
   12738:	add	ip, r8, #1
   1273c:	add	r1, pc, r1
   12740:	str	ip, [sp, #28]
   12744:	bl	110dc <dcgettext@plt>
   12748:	ldr	ip, [sp, #28]
   1274c:	str	fp, [sp]
   12750:	mov	r1, r5
   12754:	rsb	r3, fp, ip
   12758:	mov	r2, r0
   1275c:	mov	r0, #1
   12760:	bl	11160 <error@plt>
   12764:	ldr	ip, [sp, #20]
   12768:	ldrb	r4, [r8]
   1276c:	cmp	ip, #0
   12770:	bgt	122cc <__snprintf_chk@plt+0xfc8>
   12774:	ldr	r8, [pc, #888]	; 12af4 <__snprintf_chk@plt+0x17f0>
   12778:	add	r8, pc, r8
   1277c:	b	122e4 <__snprintf_chk@plt+0xfe0>
   12780:	ldrb	r4, [r8, #1]
   12784:	mov	r6, #0
   12788:	strb	r6, [sp, #191]	; 0xbf
   1278c:	cmp	r4, #42	; 0x2a
   12790:	beq	1294c <__snprintf_chk@plt+0x1648>
   12794:	sub	r3, r4, #48	; 0x30
   12798:	add	r9, r9, #1
   1279c:	cmp	r3, #9
   127a0:	add	r3, r8, #1
   127a4:	strhi	r6, [sp, #32]
   127a8:	movhi	r8, r3
   127ac:	bhi	12278 <__snprintf_chk@plt+0xf74>
   127b0:	add	r3, r8, #2
   127b4:	ldrb	r4, [r3]
   127b8:	mov	r8, r3
   127bc:	add	r9, r9, #1
   127c0:	add	r3, r3, #1
   127c4:	sub	r2, r4, #48	; 0x30
   127c8:	cmp	r2, #9
   127cc:	bls	127b4 <__snprintf_chk@plt+0x14b0>
   127d0:	b	12268 <__snprintf_chk@plt+0xf64>
   127d4:	ldr	ip, [sp, #20]
   127d8:	add	r9, r9, #1
   127dc:	add	r8, sl, #1
   127e0:	cmp	ip, #0
   127e4:	ble	1283c <__snprintf_chk@plt+0x1538>
   127e8:	ldr	ip, [sp, #24]
   127ec:	mvn	r4, #0
   127f0:	mov	r5, #0
   127f4:	ldr	r0, [ip]
   127f8:	bl	11d4c <__snprintf_chk@plt+0xa48>
   127fc:	adds	r2, r0, #-2147483648	; 0x80000000
   12800:	adc	r3, r1, #0
   12804:	cmp	r3, r5
   12808:	cmpeq	r2, r4
   1280c:	strls	r0, [sp, #60]	; 0x3c
   12810:	bhi	129d4 <__snprintf_chk@plt+0x16d0>
   12814:	ldr	ip, [sp, #24]
   12818:	ldrb	r4, [sl, #1]
   1281c:	add	ip, ip, #4
   12820:	str	ip, [sp, #24]
   12824:	ldr	ip, [sp, #20]
   12828:	sub	ip, ip, #1
   1282c:	str	ip, [sp, #20]
   12830:	mov	ip, #1
   12834:	str	ip, [sp, #36]	; 0x24
   12838:	b	12260 <__snprintf_chk@plt+0xf5c>
   1283c:	mov	ip, #0
   12840:	ldrb	r4, [sl, #1]
   12844:	str	ip, [sp, #60]	; 0x3c
   12848:	mov	ip, #1
   1284c:	str	ip, [sp, #36]	; 0x24
   12850:	b	12260 <__snprintf_chk@plt+0xf5c>
   12854:	ldrb	r3, [r8, #1]
   12858:	cmp	r3, #0
   1285c:	beq	1251c <__snprintf_chk@plt+0x1218>
   12860:	ldrb	r2, [r8, #2]
   12864:	vmov	s15, r3
   12868:	cmp	r2, #0
   1286c:	vcvt.f64.u32	d8, s15
   12870:	beq	12544 <__snprintf_chk@plt+0x1240>
   12874:	ldr	ip, [sp, #72]	; 0x48
   12878:	ldrb	r4, [ip, #4]
   1287c:	cmp	r4, #0
   12880:	bne	12544 <__snprintf_chk@plt+0x1240>
   12884:	ldr	r1, [sp, #76]	; 0x4c
   12888:	mov	r0, r4
   1288c:	mov	r2, #5
   12890:	bl	110dc <dcgettext@plt>
   12894:	mov	r1, r4
   12898:	add	r3, r8, #2
   1289c:	mov	r2, r0
   128a0:	mov	r0, r4
   128a4:	bl	11160 <error@plt>
   128a8:	b	12544 <__snprintf_chk@plt+0x1240>
   128ac:	cmp	ip, #0
   128b0:	beq	12a64 <__snprintf_chk@plt+0x1760>
   128b4:	mov	r3, r8
   128b8:	mov	r0, r6
   128bc:	ldr	r1, [sp, #60]	; 0x3c
   128c0:	ldr	r2, [sp, #56]	; 0x38
   128c4:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   128c8:	b	12568 <__snprintf_chk@plt+0x1264>
   128cc:	ldr	r1, [sp, #56]	; 0x38
   128d0:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   128d4:	mov	r0, r6
   128d8:	ldr	fp, [sp, #28]
   128dc:	bl	11088 <free@plt>
   128e0:	b	11f04 <__snprintf_chk@plt+0xc00>
   128e4:	ldrb	r2, [r8]
   128e8:	mov	r0, r6
   128ec:	ldr	r1, [sp, #60]	; 0x3c
   128f0:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   128f4:	mov	r0, r6
   128f8:	ldr	fp, [sp, #28]
   128fc:	bl	11088 <free@plt>
   12900:	b	11f04 <__snprintf_chk@plt+0xc00>
   12904:	cmp	ip, #0
   12908:	bne	12980 <__snprintf_chk@plt+0x167c>
   1290c:	mov	r2, r4
   12910:	mov	r3, r5
   12914:	mov	r0, r6
   12918:	ldr	r1, [sp, #60]	; 0x3c
   1291c:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12920:	mov	r0, r6
   12924:	ldr	fp, [sp, #28]
   12928:	bl	11088 <free@plt>
   1292c:	b	11f04 <__snprintf_chk@plt+0xc00>
   12930:	cmp	ip, #0
   12934:	bne	129bc <__snprintf_chk@plt+0x16b8>
   12938:	mov	r0, r6
   1293c:	ldr	r1, [sp, #60]	; 0x3c
   12940:	vmov	r2, r3, d8
   12944:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12948:	b	12568 <__snprintf_chk@plt+0x1264>
   1294c:	ldr	ip, [sp, #20]
   12950:	add	r9, r9, #2
   12954:	add	r5, r8, #2
   12958:	cmp	ip, #0
   1295c:	bgt	12a04 <__snprintf_chk@plt+0x1700>
   12960:	ldrb	r4, [r8, #2]
   12964:	mov	ip, #1
   12968:	str	r6, [sp, #56]	; 0x38
   1296c:	mov	r8, r5
   12970:	str	ip, [sp, #32]
   12974:	b	12278 <__snprintf_chk@plt+0xf74>
   12978:	mov	r0, r1
   1297c:	b	11f68 <__snprintf_chk@plt+0xc64>
   12980:	strd	r4, [sp]
   12984:	mov	r0, r6
   12988:	ldr	r1, [sp, #60]	; 0x3c
   1298c:	ldr	r2, [sp, #56]	; 0x38
   12990:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12994:	b	12568 <__snprintf_chk@plt+0x1264>
   12998:	ldr	r1, [sp, #56]	; 0x38
   1299c:	vmov	r2, r3, d8
   129a0:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   129a4:	b	12568 <__snprintf_chk@plt+0x1264>
   129a8:	mov	r2, r8
   129ac:	mov	r0, r6
   129b0:	ldr	r1, [sp, #56]	; 0x38
   129b4:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   129b8:	b	12568 <__snprintf_chk@plt+0x1264>
   129bc:	vstr	d8, [sp]
   129c0:	mov	r0, r6
   129c4:	ldr	r1, [sp, #60]	; 0x3c
   129c8:	ldr	r2, [sp, #56]	; 0x38
   129cc:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   129d0:	b	12568 <__snprintf_chk@plt+0x1264>
   129d4:	ldr	r1, [pc, #284]	; 12af8 <__snprintf_chk@plt+0x17f4>
   129d8:	mov	r2, #5
   129dc:	mov	r0, #0
   129e0:	add	r1, pc, r1
   129e4:	bl	110dc <dcgettext@plt>
   129e8:	ldr	ip, [sp, #24]
   129ec:	mov	r1, #0
   129f0:	ldr	r3, [ip]
   129f4:	mov	r2, r0
   129f8:	mov	r0, #1
   129fc:	bl	11160 <error@plt>
   12a00:	b	12814 <__snprintf_chk@plt+0x1510>
   12a04:	ldr	ip, [sp, #24]
   12a08:	ldr	r0, [ip]
   12a0c:	bl	11d4c <__snprintf_chk@plt+0xa48>
   12a10:	cmp	r0, #0
   12a14:	sbcs	r2, r1, #0
   12a18:	blt	12a58 <__snprintf_chk@plt+0x1754>
   12a1c:	cmp	r0, #-2147483648	; 0x80000000
   12a20:	sbcs	r3, r1, #0
   12a24:	strlt	r0, [sp, #56]	; 0x38
   12a28:	bge	12a78 <__snprintf_chk@plt+0x1774>
   12a2c:	ldr	ip, [sp, #24]
   12a30:	ldrb	r4, [r8, #2]
   12a34:	mov	r8, r5
   12a38:	add	ip, ip, #4
   12a3c:	str	ip, [sp, #24]
   12a40:	ldr	ip, [sp, #20]
   12a44:	sub	ip, ip, #1
   12a48:	str	ip, [sp, #20]
   12a4c:	mov	ip, #1
   12a50:	str	ip, [sp, #32]
   12a54:	b	12278 <__snprintf_chk@plt+0xf74>
   12a58:	mvn	ip, #0
   12a5c:	str	ip, [sp, #56]	; 0x38
   12a60:	b	12a2c <__snprintf_chk@plt+0x1728>
   12a64:	mov	r2, r8
   12a68:	mov	r0, r6
   12a6c:	ldr	r1, [sp, #60]	; 0x3c
   12a70:	bl	15564 <fwrite_success_callback@@Base+0xd18>
   12a74:	b	12568 <__snprintf_chk@plt+0x1264>
   12a78:	ldr	r1, [pc, #124]	; 12afc <__snprintf_chk@plt+0x17f8>
   12a7c:	mov	r0, r6
   12a80:	mov	r2, #5
   12a84:	add	r1, pc, r1
   12a88:	bl	110dc <dcgettext@plt>
   12a8c:	ldr	ip, [sp, #24]
   12a90:	mov	r1, r6
   12a94:	ldr	r3, [ip]
   12a98:	mov	r2, r0
   12a9c:	mov	r0, #1
   12aa0:	bl	11160 <error@plt>
   12aa4:	b	12a2c <__snprintf_chk@plt+0x1728>
   12aa8:	bl	110e8 <__stack_chk_fail@plt>
   12aac:	mov	r0, r3
   12ab0:	bl	1128c <__overflow@plt>
   12ab4:	mov	r0, r4
   12ab8:	b	11ff0 <__snprintf_chk@plt+0xcec>
   12abc:	mov	sl, fp
   12ac0:	bl	1128c <__overflow@plt>
   12ac4:	add	fp, fp, #1
   12ac8:	b	11f04 <__snprintf_chk@plt+0xc00>
   12acc:	muleq	r1, r8, r1
   12ad0:	andeq	r0, r0, r4, lsl #2
   12ad4:	andeq	r7, r1, ip, ror #5
   12ad8:			; <UNDEFINED> instruction: 0x00005eb4
   12adc:	andeq	r7, r1, r0, asr #5
   12ae0:	muleq	r0, r4, lr
   12ae4:	ldrdeq	r5, [r0], -r8
   12ae8:	andeq	r5, r0, r8, asr #29
   12aec:	andeq	r0, r0, ip, lsl r1
   12af0:	andeq	r5, r0, r8, lsr #13
   12af4:	andeq	r5, r0, r8, lsr r7
   12af8:	ldrdeq	r5, [r0], -r4
   12afc:	andeq	r5, r0, r8, asr #6
   12b00:	push	{r4, r5, r6, lr}
   12b04:	subs	r4, r0, #0
   12b08:	ldr	r5, [pc, #556]	; 12d3c <__snprintf_chk@plt+0x1a38>
   12b0c:	add	r5, pc, r5
   12b10:	beq	12b58 <__snprintf_chk@plt+0x1854>
   12b14:	ldr	r3, [pc, #548]	; 12d40 <__snprintf_chk@plt+0x1a3c>
   12b18:	mov	r2, #5
   12b1c:	ldr	r1, [pc, #544]	; 12d44 <__snprintf_chk@plt+0x1a40>
   12b20:	mov	r0, #0
   12b24:	ldr	r3, [r5, r3]
   12b28:	add	r1, pc, r1
   12b2c:	ldr	r6, [r3]
   12b30:	bl	110dc <dcgettext@plt>
   12b34:	ldr	r3, [pc, #524]	; 12d48 <__snprintf_chk@plt+0x1a44>
   12b38:	mov	r1, #1
   12b3c:	ldr	r3, [r5, r3]
   12b40:	ldr	r3, [r3]
   12b44:	mov	r2, r0
   12b48:	mov	r0, r6
   12b4c:	bl	1125c <__fprintf_chk@plt>
   12b50:	mov	r0, r4
   12b54:	bl	111e4 <exit@plt>
   12b58:	ldr	r1, [pc, #492]	; 12d4c <__snprintf_chk@plt+0x1a48>
   12b5c:	mov	r2, #5
   12b60:	add	r1, pc, r1
   12b64:	bl	110dc <dcgettext@plt>
   12b68:	ldr	r3, [pc, #472]	; 12d48 <__snprintf_chk@plt+0x1a44>
   12b6c:	ldr	r6, [r5, r3]
   12b70:	ldr	r2, [r6]
   12b74:	mov	r3, r2
   12b78:	mov	r1, r0
   12b7c:	mov	r0, #1
   12b80:	bl	11244 <__printf_chk@plt>
   12b84:	ldr	r1, [pc, #452]	; 12d50 <__snprintf_chk@plt+0x1a4c>
   12b88:	mov	r2, #5
   12b8c:	mov	r0, r4
   12b90:	add	r1, pc, r1
   12b94:	bl	110dc <dcgettext@plt>
   12b98:	ldr	r3, [pc, #436]	; 12d54 <__snprintf_chk@plt+0x1a50>
   12b9c:	ldr	r5, [r5, r3]
   12ba0:	ldr	r1, [r5]
   12ba4:	bl	1104c <fputs_unlocked@plt>
   12ba8:	ldr	r1, [pc, #424]	; 12d58 <__snprintf_chk@plt+0x1a54>
   12bac:	mov	r2, #5
   12bb0:	mov	r0, r4
   12bb4:	add	r1, pc, r1
   12bb8:	bl	110dc <dcgettext@plt>
   12bbc:	ldr	r1, [r5]
   12bc0:	bl	1104c <fputs_unlocked@plt>
   12bc4:	ldr	r1, [pc, #400]	; 12d5c <__snprintf_chk@plt+0x1a58>
   12bc8:	mov	r2, #5
   12bcc:	mov	r0, r4
   12bd0:	add	r1, pc, r1
   12bd4:	bl	110dc <dcgettext@plt>
   12bd8:	ldr	r1, [r5]
   12bdc:	bl	1104c <fputs_unlocked@plt>
   12be0:	ldr	r1, [pc, #376]	; 12d60 <__snprintf_chk@plt+0x1a5c>
   12be4:	mov	r2, #5
   12be8:	mov	r0, r4
   12bec:	add	r1, pc, r1
   12bf0:	bl	110dc <dcgettext@plt>
   12bf4:	ldr	r1, [r5]
   12bf8:	bl	1104c <fputs_unlocked@plt>
   12bfc:	ldr	r1, [pc, #352]	; 12d64 <__snprintf_chk@plt+0x1a60>
   12c00:	mov	r2, #5
   12c04:	mov	r0, r4
   12c08:	add	r1, pc, r1
   12c0c:	bl	110dc <dcgettext@plt>
   12c10:	ldr	r1, [r5]
   12c14:	bl	1104c <fputs_unlocked@plt>
   12c18:	ldr	r1, [pc, #328]	; 12d68 <__snprintf_chk@plt+0x1a64>
   12c1c:	mov	r2, #5
   12c20:	mov	r0, r4
   12c24:	add	r1, pc, r1
   12c28:	bl	110dc <dcgettext@plt>
   12c2c:	ldr	r1, [r5]
   12c30:	bl	1104c <fputs_unlocked@plt>
   12c34:	ldr	r1, [pc, #304]	; 12d6c <__snprintf_chk@plt+0x1a68>
   12c38:	mov	r2, #5
   12c3c:	mov	r0, r4
   12c40:	add	r1, pc, r1
   12c44:	bl	110dc <dcgettext@plt>
   12c48:	ldr	r1, [r5]
   12c4c:	bl	1104c <fputs_unlocked@plt>
   12c50:	ldr	r1, [pc, #280]	; 12d70 <__snprintf_chk@plt+0x1a6c>
   12c54:	mov	r2, #5
   12c58:	mov	r0, r4
   12c5c:	add	r1, pc, r1
   12c60:	bl	110dc <dcgettext@plt>
   12c64:	ldr	r2, [pc, #264]	; 12d74 <__snprintf_chk@plt+0x1a70>
   12c68:	add	r2, pc, r2
   12c6c:	mov	r1, r0
   12c70:	mov	r0, #1
   12c74:	bl	11244 <__printf_chk@plt>
   12c78:	ldr	r1, [pc, #248]	; 12d78 <__snprintf_chk@plt+0x1a74>
   12c7c:	mov	r2, #5
   12c80:	mov	r0, r4
   12c84:	add	r1, pc, r1
   12c88:	bl	110dc <dcgettext@plt>
   12c8c:	ldr	r2, [pc, #232]	; 12d7c <__snprintf_chk@plt+0x1a78>
   12c90:	ldr	r3, [pc, #232]	; 12d80 <__snprintf_chk@plt+0x1a7c>
   12c94:	add	r2, pc, r2
   12c98:	add	r3, pc, r3
   12c9c:	mov	r1, r0
   12ca0:	mov	r0, #1
   12ca4:	bl	11244 <__printf_chk@plt>
   12ca8:	mov	r0, #5
   12cac:	mov	r1, r4
   12cb0:	bl	11298 <setlocale@plt>
   12cb4:	cmp	r0, #0
   12cb8:	beq	12cd4 <__snprintf_chk@plt+0x19d0>
   12cbc:	ldr	r1, [pc, #192]	; 12d84 <__snprintf_chk@plt+0x1a80>
   12cc0:	mov	r2, #3
   12cc4:	add	r1, pc, r1
   12cc8:	bl	112e0 <strncmp@plt>
   12ccc:	cmp	r0, #0
   12cd0:	bne	12d08 <__snprintf_chk@plt+0x1a04>
   12cd4:	ldr	r1, [pc, #172]	; 12d88 <__snprintf_chk@plt+0x1a84>
   12cd8:	mov	r2, #5
   12cdc:	mov	r0, #0
   12ce0:	add	r1, pc, r1
   12ce4:	bl	110dc <dcgettext@plt>
   12ce8:	mov	r5, r0
   12cec:	ldr	r0, [r6]
   12cf0:	bl	12f4c <close_stdout@@Base+0x118>
   12cf4:	mov	r1, r5
   12cf8:	mov	r2, r0
   12cfc:	mov	r0, #1
   12d00:	bl	11244 <__printf_chk@plt>
   12d04:	b	12b50 <__snprintf_chk@plt+0x184c>
   12d08:	ldr	r1, [pc, #124]	; 12d8c <__snprintf_chk@plt+0x1a88>
   12d0c:	mov	r2, #5
   12d10:	mov	r0, r4
   12d14:	add	r1, pc, r1
   12d18:	bl	110dc <dcgettext@plt>
   12d1c:	mov	r5, r0
   12d20:	ldr	r0, [r6]
   12d24:	bl	12f4c <close_stdout@@Base+0x118>
   12d28:	mov	r1, r5
   12d2c:	mov	r2, r0
   12d30:	mov	r0, #1
   12d34:	bl	11244 <__printf_chk@plt>
   12d38:	b	12cd4 <__snprintf_chk@plt+0x19d0>
   12d3c:	andeq	r6, r1, ip, ror #9
   12d40:	andeq	r0, r0, ip, lsl #2
   12d44:	andeq	r5, r0, r4, ror #5
   12d48:	andeq	r0, r0, r8, lsr #2
   12d4c:	ldrdeq	r5, [r0], -r4
   12d50:	ldrdeq	r5, [r0], -r8
   12d54:	andeq	r0, r0, ip, lsl r1
   12d58:	andeq	r5, r0, r0, lsl #6
   12d5c:	andeq	r5, r0, r4, lsl r3
   12d60:	andeq	r5, r0, r0, lsr r3
   12d64:	andeq	r5, r0, r8, ror r3
   12d68:	andeq	r5, r0, r4, asr #8
   12d6c:	andeq	r5, r0, r4, lsr #10
   12d70:	andeq	r5, r0, ip, lsr #12
   12d74:	andeq	r5, r0, r0, ror #13
   12d78:	andeq	r5, r0, ip, asr #13
   12d7c:	ldrdeq	r5, [r0], -r4
   12d80:	andeq	r5, r0, r0, ror #13
   12d84:	ldrdeq	r5, [r0], -ip
   12d88:	andeq	r5, r0, ip, lsl #14
   12d8c:	muleq	r0, r0, r6
   12d90:	push	{r4, r5, r6, lr}
   12d94:	mov	r6, r0
   12d98:	ldr	r5, [pc, #96]	; 12e00 <__snprintf_chk@plt+0x1afc>
   12d9c:	mov	r4, r1
   12da0:	add	r5, pc, r5
   12da4:	ldr	r2, [r5]
   12da8:	cmp	r2, #0
   12dac:	beq	12de0 <__snprintf_chk@plt+0x1adc>
   12db0:	ldr	r3, [pc, #76]	; 12e04 <__snprintf_chk@plt+0x1b00>
   12db4:	ldr	r2, [pc, r3]
   12db8:	cmp	r2, #0
   12dbc:	beq	12dd0 <__snprintf_chk@plt+0x1acc>
   12dc0:	mov	r0, r6
   12dc4:	mov	r1, r4
   12dc8:	pop	{r4, r5, r6, lr}
   12dcc:	b	11184 <strtold_l@plt>
   12dd0:	cmp	r4, #0
   12dd4:	vldr	d0, [pc, #28]	; 12df8 <__snprintf_chk@plt+0x1af4>
   12dd8:	strne	r6, [r4]
   12ddc:	pop	{r4, r5, r6, pc}
   12de0:	ldr	r1, [pc, #32]	; 12e08 <__snprintf_chk@plt+0x1b04>
   12de4:	movw	r0, #8127	; 0x1fbf
   12de8:	add	r1, pc, r1
   12dec:	bl	112bc <newlocale@plt>
   12df0:	str	r0, [r5]
   12df4:	b	12db0 <__snprintf_chk@plt+0x1aac>
	...
   12e00:	andeq	r6, r1, r8, ror #7
   12e04:	ldrdeq	r6, [r1], -r4
   12e08:	andeq	r5, r0, r0, ror #13
   12e0c:	ldr	r3, [pc, #8]	; 12e1c <__snprintf_chk@plt+0x1b18>
   12e10:	add	r3, pc, r3
   12e14:	str	r0, [r3]
   12e18:	bx	lr
   12e1c:	andeq	r6, r1, ip, ror r3
   12e20:	ldr	r3, [pc, #8]	; 12e30 <__snprintf_chk@plt+0x1b2c>
   12e24:	add	r3, pc, r3
   12e28:	strb	r0, [r3, #4]
   12e2c:	bx	lr
   12e30:	andeq	r6, r1, r8, ror #6

00012e34 <close_stdout@@Base>:
   12e34:	push	{r4, r5, r6, r7, lr}
   12e38:	sub	sp, sp, #12
   12e3c:	ldr	r4, [pc, #228]	; 12f28 <close_stdout@@Base+0xf4>
   12e40:	ldr	r3, [pc, #228]	; 12f2c <close_stdout@@Base+0xf8>
   12e44:	add	r4, pc, r4
   12e48:	ldr	r3, [r4, r3]
   12e4c:	ldr	r0, [r3]
   12e50:	bl	157c4 <fwrite_success_callback@@Base+0xf78>
   12e54:	cmp	r0, #0
   12e58:	beq	12e80 <close_stdout@@Base+0x4c>
   12e5c:	ldr	r3, [pc, #204]	; 12f30 <close_stdout@@Base+0xfc>
   12e60:	add	r3, pc, r3
   12e64:	ldrb	r3, [r3, #4]
   12e68:	cmp	r3, #0
   12e6c:	beq	12ea0 <close_stdout@@Base+0x6c>
   12e70:	bl	11214 <__errno_location@plt>
   12e74:	ldr	r3, [r0]
   12e78:	cmp	r3, #32
   12e7c:	bne	12ea0 <close_stdout@@Base+0x6c>
   12e80:	ldr	r3, [pc, #172]	; 12f34 <close_stdout@@Base+0x100>
   12e84:	ldr	r3, [r4, r3]
   12e88:	ldr	r0, [r3]
   12e8c:	bl	157c4 <fwrite_success_callback@@Base+0xf78>
   12e90:	cmp	r0, #0
   12e94:	bne	12ef4 <close_stdout@@Base+0xc0>
   12e98:	add	sp, sp, #12
   12e9c:	pop	{r4, r5, r6, r7, pc}
   12ea0:	ldr	r1, [pc, #144]	; 12f38 <close_stdout@@Base+0x104>
   12ea4:	mov	r0, #0
   12ea8:	mov	r2, #5
   12eac:	add	r1, pc, r1
   12eb0:	bl	110dc <dcgettext@plt>
   12eb4:	ldr	r3, [pc, #128]	; 12f3c <close_stdout@@Base+0x108>
   12eb8:	ldr	r5, [pc, r3]
   12ebc:	cmp	r5, #0
   12ec0:	mov	r6, r0
   12ec4:	beq	12f04 <close_stdout@@Base+0xd0>
   12ec8:	bl	11214 <__errno_location@plt>
   12ecc:	ldr	r7, [r0]
   12ed0:	mov	r0, r5
   12ed4:	bl	146ec <close_stdout@@Base+0x18b8>
   12ed8:	ldr	r2, [pc, #96]	; 12f40 <close_stdout@@Base+0x10c>
   12edc:	str	r6, [sp]
   12ee0:	mov	r1, r7
   12ee4:	add	r2, pc, r2
   12ee8:	mov	r3, r0
   12eec:	mov	r0, #0
   12ef0:	bl	11160 <error@plt>
   12ef4:	ldr	r3, [pc, #72]	; 12f44 <close_stdout@@Base+0x110>
   12ef8:	ldr	r3, [r4, r3]
   12efc:	ldr	r0, [r3]
   12f00:	bl	110a0 <_exit@plt>
   12f04:	bl	11214 <__errno_location@plt>
   12f08:	ldr	r2, [pc, #56]	; 12f48 <close_stdout@@Base+0x114>
   12f0c:	add	r2, pc, r2
   12f10:	mov	r3, r0
   12f14:	mov	r0, r5
   12f18:	ldr	r1, [r3]
   12f1c:	mov	r3, r6
   12f20:	bl	11160 <error@plt>
   12f24:	b	12ef4 <close_stdout@@Base+0xc0>
   12f28:			; <UNDEFINED> instruction: 0x000161b4
   12f2c:	andeq	r0, r0, ip, lsl r1
   12f30:	andeq	r6, r1, ip, lsr #6
   12f34:	andeq	r0, r0, ip, lsl #2
   12f38:	andeq	r5, r0, r0, lsr #12
   12f3c:	ldrdeq	r6, [r1], -r4
   12f40:	strdeq	r5, [r0], -r4
   12f44:	andeq	r0, r0, r0, lsr #2
   12f48:	ldrdeq	r5, [r0], -r0
   12f4c:	ldrb	r3, [r0]
   12f50:	cmp	r3, #47	; 0x2f
   12f54:	bne	12f70 <close_stdout@@Base+0x13c>
   12f58:	add	r2, r0, #1
   12f5c:	mov	r0, r2
   12f60:	add	r2, r2, #1
   12f64:	ldrb	r3, [r0]
   12f68:	cmp	r3, #47	; 0x2f
   12f6c:	beq	12f5c <close_stdout@@Base+0x128>
   12f70:	cmp	r3, #0
   12f74:	bxeq	lr
   12f78:	mov	r2, r0
   12f7c:	mov	r1, #0
   12f80:	cmp	r3, #47	; 0x2f
   12f84:	moveq	r1, #1
   12f88:	beq	12f98 <close_stdout@@Base+0x164>
   12f8c:	cmp	r1, #0
   12f90:	movne	r0, r2
   12f94:	movne	r1, #0
   12f98:	ldrb	r3, [r2, #1]!
   12f9c:	cmp	r3, #0
   12fa0:	bne	12f80 <close_stdout@@Base+0x14c>
   12fa4:	bx	lr
   12fa8:	push	{r4, lr}
   12fac:	mov	r4, r0
   12fb0:	bl	111f0 <strlen@plt>
   12fb4:	cmp	r0, #1
   12fb8:	popls	{r4, pc}
   12fbc:	sub	r3, r0, #1
   12fc0:	ldrb	r2, [r4, r3]
   12fc4:	cmp	r2, #47	; 0x2f
   12fc8:	popne	{r4, pc}
   12fcc:	mov	r0, r3
   12fd0:	cmp	r0, #1
   12fd4:	sub	r3, r3, #1
   12fd8:	beq	12fec <close_stdout@@Base+0x1b8>
   12fdc:	ldrb	r2, [r4, r3]
   12fe0:	cmp	r2, #47	; 0x2f
   12fe4:	popne	{r4, pc}
   12fe8:	b	12fcc <close_stdout@@Base+0x198>
   12fec:	pop	{r4, pc}
   12ff0:	push	{r3, r4, r5, r6, r7, lr}
   12ff4:	subs	r4, r0, #0
   12ff8:	ldr	r5, [pc, #172]	; 130ac <close_stdout@@Base+0x278>
   12ffc:	add	r5, pc, r5
   13000:	beq	13088 <close_stdout@@Base+0x254>
   13004:	mov	r1, #47	; 0x2f
   13008:	bl	112a4 <strrchr@plt>
   1300c:	subs	r6, r0, #0
   13010:	beq	1306c <close_stdout@@Base+0x238>
   13014:	add	r7, r6, #1
   13018:	rsb	r3, r4, r7
   1301c:	cmp	r3, #6
   13020:	ble	1306c <close_stdout@@Base+0x238>
   13024:	ldr	r1, [pc, #132]	; 130b0 <close_stdout@@Base+0x27c>
   13028:	sub	r0, r6, #6
   1302c:	mov	r2, #7
   13030:	add	r1, pc, r1
   13034:	bl	112e0 <strncmp@plt>
   13038:	cmp	r0, #0
   1303c:	bne	1306c <close_stdout@@Base+0x238>
   13040:	ldr	r1, [pc, #108]	; 130b4 <close_stdout@@Base+0x280>
   13044:	mov	r0, r7
   13048:	mov	r2, #3
   1304c:	add	r1, pc, r1
   13050:	bl	112e0 <strncmp@plt>
   13054:	cmp	r0, #0
   13058:	movne	r4, r7
   1305c:	ldreq	r3, [pc, #84]	; 130b8 <close_stdout@@Base+0x284>
   13060:	addeq	r4, r6, #4
   13064:	ldreq	r3, [r5, r3]
   13068:	streq	r4, [r3]
   1306c:	ldr	r2, [pc, #72]	; 130bc <close_stdout@@Base+0x288>
   13070:	ldr	r3, [pc, #72]	; 130c0 <close_stdout@@Base+0x28c>
   13074:	ldr	r2, [r5, r2]
   13078:	str	r4, [r2]
   1307c:	ldr	r3, [r5, r3]
   13080:	str	r4, [r3]
   13084:	pop	{r3, r4, r5, r6, r7, pc}
   13088:	ldr	r3, [pc, #52]	; 130c4 <close_stdout@@Base+0x290>
   1308c:	mov	r1, #1
   13090:	ldr	r0, [pc, #48]	; 130c8 <close_stdout@@Base+0x294>
   13094:	mov	r2, #55	; 0x37
   13098:	ldr	r3, [r5, r3]
   1309c:	add	r0, pc, r0
   130a0:	ldr	r3, [r3]
   130a4:	bl	11118 <fwrite@plt>
   130a8:	bl	112ec <abort@plt>
   130ac:	strdeq	r5, [r1], -ip
   130b0:	andeq	r5, r0, r8, ror #9
   130b4:	ldrdeq	r5, [r0], -r4
   130b8:	andeq	r0, r0, r0, lsr r1
   130bc:	andeq	r0, r0, r8, lsr #2
   130c0:	andeq	r0, r0, r4, lsr #2
   130c4:	andeq	r0, r0, ip, lsl #2
   130c8:	andeq	r5, r0, r4, asr #8
   130cc:	push	{r3, lr}
   130d0:	mov	r3, r0
   130d4:	mov	r2, #0
   130d8:	cmp	r1, #8
   130dc:	str	r2, [r3], #4
   130e0:	add	r3, r3, #4
   130e4:	str	r2, [r0, #4]
   130e8:	str	r2, [r3], #4
   130ec:	str	r2, [r3], #4
   130f0:	str	r2, [r3], #4
   130f4:	str	r2, [r3], #4
   130f8:	str	r2, [r3], #4
   130fc:	str	r2, [r3], #4
   13100:	str	r2, [r3], #4
   13104:	str	r2, [r3], #4
   13108:	str	r2, [r3], #4
   1310c:	str	r2, [r3]
   13110:	beq	1311c <close_stdout@@Base+0x2e8>
   13114:	str	r1, [r0]
   13118:	pop	{r3, pc}
   1311c:	bl	112ec <abort@plt>
   13120:	push	{r4, r5, r6, lr}
   13124:	mov	r4, r0
   13128:	mov	r6, r1
   1312c:	mov	r0, #0
   13130:	mov	r1, r4
   13134:	mov	r2, #5
   13138:	bl	110dc <dcgettext@plt>
   1313c:	cmp	r0, r4
   13140:	mov	r5, r0
   13144:	beq	1314c <close_stdout@@Base+0x318>
   13148:	pop	{r4, r5, r6, pc}
   1314c:	bl	15844 <fwrite_success_callback@@Base+0xff8>
   13150:	ldrb	r3, [r0]
   13154:	bic	r3, r3, #32
   13158:	cmp	r3, #85	; 0x55
   1315c:	bne	131d0 <close_stdout@@Base+0x39c>
   13160:	ldrb	r3, [r0, #1]
   13164:	bic	r3, r3, #32
   13168:	cmp	r3, #84	; 0x54
   1316c:	bne	131bc <close_stdout@@Base+0x388>
   13170:	ldrb	r3, [r0, #2]
   13174:	bic	r3, r3, #32
   13178:	cmp	r3, #70	; 0x46
   1317c:	bne	131bc <close_stdout@@Base+0x388>
   13180:	ldrb	r3, [r0, #3]
   13184:	cmp	r3, #45	; 0x2d
   13188:	bne	131bc <close_stdout@@Base+0x388>
   1318c:	ldrb	r3, [r0, #4]
   13190:	cmp	r3, #56	; 0x38
   13194:	bne	131bc <close_stdout@@Base+0x388>
   13198:	ldrb	r3, [r0, #5]
   1319c:	cmp	r3, #0
   131a0:	bne	131bc <close_stdout@@Base+0x388>
   131a4:	ldrb	r3, [r5]
   131a8:	cmp	r3, #96	; 0x60
   131ac:	beq	13248 <close_stdout@@Base+0x414>
   131b0:	ldr	r0, [pc, #180]	; 1326c <close_stdout@@Base+0x438>
   131b4:	add	r0, pc, r0
   131b8:	pop	{r4, r5, r6, pc}
   131bc:	cmp	r6, #7
   131c0:	beq	13254 <close_stdout@@Base+0x420>
   131c4:	ldr	r0, [pc, #164]	; 13270 <close_stdout@@Base+0x43c>
   131c8:	add	r0, pc, r0
   131cc:	pop	{r4, r5, r6, pc}
   131d0:	cmp	r3, #71	; 0x47
   131d4:	bne	131bc <close_stdout@@Base+0x388>
   131d8:	ldrb	r3, [r0, #1]
   131dc:	bic	r3, r3, #32
   131e0:	cmp	r3, #66	; 0x42
   131e4:	bne	131bc <close_stdout@@Base+0x388>
   131e8:	ldrb	r3, [r0, #2]
   131ec:	cmp	r3, #49	; 0x31
   131f0:	bne	131bc <close_stdout@@Base+0x388>
   131f4:	ldrb	r3, [r0, #3]
   131f8:	cmp	r3, #56	; 0x38
   131fc:	bne	131bc <close_stdout@@Base+0x388>
   13200:	ldrb	r3, [r0, #4]
   13204:	cmp	r3, #48	; 0x30
   13208:	bne	131bc <close_stdout@@Base+0x388>
   1320c:	ldrb	r3, [r0, #5]
   13210:	cmp	r3, #51	; 0x33
   13214:	bne	131bc <close_stdout@@Base+0x388>
   13218:	ldrb	r3, [r0, #6]
   1321c:	cmp	r3, #48	; 0x30
   13220:	bne	131bc <close_stdout@@Base+0x388>
   13224:	ldrb	r3, [r0, #7]
   13228:	cmp	r3, #0
   1322c:	bne	131bc <close_stdout@@Base+0x388>
   13230:	ldrb	r3, [r5]
   13234:	cmp	r3, #96	; 0x60
   13238:	beq	13260 <close_stdout@@Base+0x42c>
   1323c:	ldr	r0, [pc, #48]	; 13274 <close_stdout@@Base+0x440>
   13240:	add	r0, pc, r0
   13244:	pop	{r4, r5, r6, pc}
   13248:	ldr	r0, [pc, #40]	; 13278 <close_stdout@@Base+0x444>
   1324c:	add	r0, pc, r0
   13250:	pop	{r4, r5, r6, pc}
   13254:	ldr	r0, [pc, #32]	; 1327c <close_stdout@@Base+0x448>
   13258:	add	r0, pc, r0
   1325c:	pop	{r4, r5, r6, pc}
   13260:	ldr	r0, [pc, #24]	; 13280 <close_stdout@@Base+0x44c>
   13264:	add	r0, pc, r0
   13268:	pop	{r4, r5, r6, pc}
   1326c:	muleq	r0, r0, r3
   13270:	andeq	r5, r0, r4, lsl #7
   13274:	andeq	r5, r0, r8, lsl #6
   13278:	andeq	r5, r0, ip, lsl #6
   1327c:	strdeq	r5, [r0], -r8
   13280:	strdeq	r5, [r0], -r0
   13284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13288:	sub	sp, sp, #124	; 0x7c
   1328c:	ldr	ip, [pc, #3304]	; 13f7c <close_stdout@@Base+0x1148>
   13290:	mov	sl, r1
   13294:	str	r0, [sp, #40]	; 0x28
   13298:	mov	r8, r3
   1329c:	ldr	r0, [pc, #3292]	; 13f80 <close_stdout@@Base+0x114c>
   132a0:	add	ip, pc, ip
   132a4:	str	r2, [sp, #32]
   132a8:	ldr	r1, [sp, #164]	; 0xa4
   132ac:	mov	r3, ip
   132b0:	ldr	r0, [ip, r0]
   132b4:	ldr	r2, [sp, #172]	; 0xac
   132b8:	ubfx	r1, r1, #1, #1
   132bc:	str	r1, [sp, #36]	; 0x24
   132c0:	str	r0, [sp, #56]	; 0x38
   132c4:	ldr	r0, [sp, #168]	; 0xa8
   132c8:	ldr	r1, [sp, #176]	; 0xb0
   132cc:	str	r2, [sp, #72]	; 0x48
   132d0:	str	r0, [sp, #48]	; 0x30
   132d4:	ldr	r0, [sp, #56]	; 0x38
   132d8:	str	r1, [sp, #68]	; 0x44
   132dc:	ldr	r3, [r0]
   132e0:	str	r3, [sp, #116]	; 0x74
   132e4:	bl	11130 <__ctype_get_mb_cur_max@plt>
   132e8:	ldr	r2, [sp, #160]	; 0xa0
   132ec:	str	r0, [sp, #64]	; 0x40
   132f0:	cmp	r2, #8
   132f4:	addls	pc, pc, r2, lsl #2
   132f8:	b	13e58 <close_stdout@@Base+0x1024>
   132fc:	b	13320 <close_stdout@@Base+0x4ec>
   13300:	b	13b70 <close_stdout@@Base+0xd3c>
   13304:	b	13ba0 <close_stdout@@Base+0xd6c>
   13308:	b	13a50 <close_stdout@@Base+0xc1c>
   1330c:	b	13a90 <close_stdout@@Base+0xc5c>
   13310:	b	13abc <close_stdout@@Base+0xc88>
   13314:	b	13adc <close_stdout@@Base+0xca8>
   13318:	b	13adc <close_stdout@@Base+0xca8>
   1331c:	b	13adc <close_stdout@@Base+0xca8>
   13320:	mov	r2, #0
   13324:	str	r2, [sp, #36]	; 0x24
   13328:	mov	r9, r2
   1332c:	str	r2, [sp, #24]
   13330:	str	r2, [sp, #28]
   13334:	str	r2, [sp, #52]	; 0x34
   13338:	ldr	r0, [sp, #36]	; 0x24
   1333c:	mov	fp, #0
   13340:	ldr	r1, [sp, #24]
   13344:	eor	r2, r0, #1
   13348:	eor	r3, r1, #1
   1334c:	and	r3, r2, r3
   13350:	and	r2, r1, r0
   13354:	str	r3, [sp, #44]	; 0x2c
   13358:	str	r2, [sp, #76]	; 0x4c
   1335c:	cmn	r8, #1
   13360:	beq	136e0 <close_stdout@@Base+0x8ac>
   13364:	subs	r3, fp, r8
   13368:	movne	r3, #1
   1336c:	cmp	r3, #0
   13370:	beq	136f8 <close_stdout@@Base+0x8c4>
   13374:	ldr	r3, [sp, #28]
   13378:	ldr	r0, [sp, #24]
   1337c:	adds	r7, r3, #0
   13380:	movne	r7, #1
   13384:	ands	r6, r7, r0
   13388:	bne	13be4 <close_stdout@@Base+0xdb0>
   1338c:	ldr	r1, [sp, #32]
   13390:	add	r5, r1, fp
   13394:	ldrb	r4, [r5]
   13398:	cmp	r4, #126	; 0x7e
   1339c:	addls	pc, pc, r4, lsl #2
   133a0:	b	13964 <close_stdout@@Base+0xb30>
   133a4:	b	13870 <close_stdout@@Base+0xa3c>
   133a8:	b	13964 <close_stdout@@Base+0xb30>
   133ac:	b	13964 <close_stdout@@Base+0xb30>
   133b0:	b	13964 <close_stdout@@Base+0xb30>
   133b4:	b	13964 <close_stdout@@Base+0xb30>
   133b8:	b	13964 <close_stdout@@Base+0xb30>
   133bc:	b	13964 <close_stdout@@Base+0xb30>
   133c0:	b	13858 <close_stdout@@Base+0xa24>
   133c4:	b	13840 <close_stdout@@Base+0xa0c>
   133c8:	b	13868 <close_stdout@@Base+0xa34>
   133cc:	b	13860 <close_stdout@@Base+0xa2c>
   133d0:	b	13850 <close_stdout@@Base+0xa1c>
   133d4:	b	13848 <close_stdout@@Base+0xa14>
   133d8:	b	1380c <close_stdout@@Base+0x9d8>
   133dc:	b	13964 <close_stdout@@Base+0xb30>
   133e0:	b	13964 <close_stdout@@Base+0xb30>
   133e4:	b	13964 <close_stdout@@Base+0xb30>
   133e8:	b	13964 <close_stdout@@Base+0xb30>
   133ec:	b	13964 <close_stdout@@Base+0xb30>
   133f0:	b	13964 <close_stdout@@Base+0xb30>
   133f4:	b	13964 <close_stdout@@Base+0xb30>
   133f8:	b	13964 <close_stdout@@Base+0xb30>
   133fc:	b	13964 <close_stdout@@Base+0xb30>
   13400:	b	13964 <close_stdout@@Base+0xb30>
   13404:	b	13964 <close_stdout@@Base+0xb30>
   13408:	b	13964 <close_stdout@@Base+0xb30>
   1340c:	b	13964 <close_stdout@@Base+0xb30>
   13410:	b	13964 <close_stdout@@Base+0xb30>
   13414:	b	13964 <close_stdout@@Base+0xb30>
   13418:	b	13964 <close_stdout@@Base+0xb30>
   1341c:	b	13964 <close_stdout@@Base+0xb30>
   13420:	b	13964 <close_stdout@@Base+0xb30>
   13424:	b	13798 <close_stdout@@Base+0x964>
   13428:	b	13798 <close_stdout@@Base+0x964>
   1342c:	b	13798 <close_stdout@@Base+0x964>
   13430:	b	13790 <close_stdout@@Base+0x95c>
   13434:	b	13798 <close_stdout@@Base+0x964>
   13438:	b	1366c <close_stdout@@Base+0x838>
   1343c:	b	13798 <close_stdout@@Base+0x964>
   13440:	b	1390c <close_stdout@@Base+0xad8>
   13444:	b	13798 <close_stdout@@Base+0x964>
   13448:	b	13798 <close_stdout@@Base+0x964>
   1344c:	b	13798 <close_stdout@@Base+0x964>
   13450:	b	1366c <close_stdout@@Base+0x838>
   13454:	b	1366c <close_stdout@@Base+0x838>
   13458:	b	1366c <close_stdout@@Base+0x838>
   1345c:	b	1366c <close_stdout@@Base+0x838>
   13460:	b	1366c <close_stdout@@Base+0x838>
   13464:	b	1366c <close_stdout@@Base+0x838>
   13468:	b	1366c <close_stdout@@Base+0x838>
   1346c:	b	1366c <close_stdout@@Base+0x838>
   13470:	b	1366c <close_stdout@@Base+0x838>
   13474:	b	1366c <close_stdout@@Base+0x838>
   13478:	b	1366c <close_stdout@@Base+0x838>
   1347c:	b	1366c <close_stdout@@Base+0x838>
   13480:	b	1366c <close_stdout@@Base+0x838>
   13484:	b	1366c <close_stdout@@Base+0x838>
   13488:	b	1366c <close_stdout@@Base+0x838>
   1348c:	b	1366c <close_stdout@@Base+0x838>
   13490:	b	13798 <close_stdout@@Base+0x964>
   13494:	b	13798 <close_stdout@@Base+0x964>
   13498:	b	13798 <close_stdout@@Base+0x964>
   1349c:	b	13798 <close_stdout@@Base+0x964>
   134a0:	b	135a0 <close_stdout@@Base+0x76c>
   134a4:	b	13964 <close_stdout@@Base+0xb30>
   134a8:	b	1366c <close_stdout@@Base+0x838>
   134ac:	b	1366c <close_stdout@@Base+0x838>
   134b0:	b	1366c <close_stdout@@Base+0x838>
   134b4:	b	1366c <close_stdout@@Base+0x838>
   134b8:	b	1366c <close_stdout@@Base+0x838>
   134bc:	b	1366c <close_stdout@@Base+0x838>
   134c0:	b	1366c <close_stdout@@Base+0x838>
   134c4:	b	1366c <close_stdout@@Base+0x838>
   134c8:	b	1366c <close_stdout@@Base+0x838>
   134cc:	b	1366c <close_stdout@@Base+0x838>
   134d0:	b	1366c <close_stdout@@Base+0x838>
   134d4:	b	1366c <close_stdout@@Base+0x838>
   134d8:	b	1366c <close_stdout@@Base+0x838>
   134dc:	b	1366c <close_stdout@@Base+0x838>
   134e0:	b	1366c <close_stdout@@Base+0x838>
   134e4:	b	1366c <close_stdout@@Base+0x838>
   134e8:	b	1366c <close_stdout@@Base+0x838>
   134ec:	b	1366c <close_stdout@@Base+0x838>
   134f0:	b	1366c <close_stdout@@Base+0x838>
   134f4:	b	1366c <close_stdout@@Base+0x838>
   134f8:	b	1366c <close_stdout@@Base+0x838>
   134fc:	b	1366c <close_stdout@@Base+0x838>
   13500:	b	1366c <close_stdout@@Base+0x838>
   13504:	b	1366c <close_stdout@@Base+0x838>
   13508:	b	1366c <close_stdout@@Base+0x838>
   1350c:	b	1366c <close_stdout@@Base+0x838>
   13510:	b	13798 <close_stdout@@Base+0x964>
   13514:	b	138f0 <close_stdout@@Base+0xabc>
   13518:	b	1366c <close_stdout@@Base+0x838>
   1351c:	b	13798 <close_stdout@@Base+0x964>
   13520:	b	1366c <close_stdout@@Base+0x838>
   13524:	b	13798 <close_stdout@@Base+0x964>
   13528:	b	1366c <close_stdout@@Base+0x838>
   1352c:	b	1366c <close_stdout@@Base+0x838>
   13530:	b	1366c <close_stdout@@Base+0x838>
   13534:	b	1366c <close_stdout@@Base+0x838>
   13538:	b	1366c <close_stdout@@Base+0x838>
   1353c:	b	1366c <close_stdout@@Base+0x838>
   13540:	b	1366c <close_stdout@@Base+0x838>
   13544:	b	1366c <close_stdout@@Base+0x838>
   13548:	b	1366c <close_stdout@@Base+0x838>
   1354c:	b	1366c <close_stdout@@Base+0x838>
   13550:	b	1366c <close_stdout@@Base+0x838>
   13554:	b	1366c <close_stdout@@Base+0x838>
   13558:	b	1366c <close_stdout@@Base+0x838>
   1355c:	b	1366c <close_stdout@@Base+0x838>
   13560:	b	1366c <close_stdout@@Base+0x838>
   13564:	b	1366c <close_stdout@@Base+0x838>
   13568:	b	1366c <close_stdout@@Base+0x838>
   1356c:	b	1366c <close_stdout@@Base+0x838>
   13570:	b	1366c <close_stdout@@Base+0x838>
   13574:	b	1366c <close_stdout@@Base+0x838>
   13578:	b	1366c <close_stdout@@Base+0x838>
   1357c:	b	1366c <close_stdout@@Base+0x838>
   13580:	b	1366c <close_stdout@@Base+0x838>
   13584:	b	1366c <close_stdout@@Base+0x838>
   13588:	b	1366c <close_stdout@@Base+0x838>
   1358c:	b	1366c <close_stdout@@Base+0x838>
   13590:	b	13778 <close_stdout@@Base+0x944>
   13594:	b	13798 <close_stdout@@Base+0x964>
   13598:	b	13778 <close_stdout@@Base+0x944>
   1359c:	b	13790 <close_stdout@@Base+0x95c>
   135a0:	ldr	r3, [sp, #160]	; 0xa0
   135a4:	cmp	r3, #2
   135a8:	beq	13e34 <close_stdout@@Base+0x1000>
   135ac:	cmp	r3, #3
   135b0:	bne	1366c <close_stdout@@Base+0x838>
   135b4:	ldr	r1, [sp, #164]	; 0xa4
   135b8:	tst	r1, #4
   135bc:	beq	1366c <close_stdout@@Base+0x838>
   135c0:	add	r3, fp, #2
   135c4:	cmp	r8, r3
   135c8:	bls	1366c <close_stdout@@Base+0x838>
   135cc:	ldrb	r2, [r5, #1]
   135d0:	mov	r1, #1
   135d4:	cmp	r2, #63	; 0x3f
   135d8:	bne	1366c <close_stdout@@Base+0x838>
   135dc:	ldr	r0, [sp, #32]
   135e0:	ldrb	ip, [r0, r3]
   135e4:	sub	r0, ip, #33	; 0x21
   135e8:	uxtb	r0, r0
   135ec:	cmp	r0, #29
   135f0:	bhi	1366c <close_stdout@@Base+0x838>
   135f4:	lsl	r1, r1, r0
   135f8:	movw	r0, #20929	; 0x51c1
   135fc:	movt	r0, #14336	; 0x3800
   13600:	and	r0, r1, r0
   13604:	cmp	r0, #0
   13608:	beq	1366c <close_stdout@@Base+0x838>
   1360c:	ldr	r1, [sp, #36]	; 0x24
   13610:	cmp	r1, #0
   13614:	bne	137b4 <close_stdout@@Base+0x980>
   13618:	cmp	r9, sl
   1361c:	mov	r4, ip
   13620:	mov	fp, r3
   13624:	ldrcc	r0, [sp, #40]	; 0x28
   13628:	strbcc	r2, [r0, r9]
   1362c:	add	r2, r9, #1
   13630:	cmp	sl, r2
   13634:	ldrhi	r0, [sp, #40]	; 0x28
   13638:	movhi	r1, #34	; 0x22
   1363c:	strbhi	r1, [r0, r2]
   13640:	add	r2, r9, #2
   13644:	cmp	sl, r2
   13648:	ldrhi	r0, [sp, #40]	; 0x28
   1364c:	movhi	r1, #34	; 0x22
   13650:	strbhi	r1, [r0, r2]
   13654:	add	r2, r9, #3
   13658:	cmp	sl, r2
   1365c:	add	r9, r9, #4
   13660:	ldrhi	r0, [sp, #40]	; 0x28
   13664:	movhi	r1, #63	; 0x3f
   13668:	strbhi	r1, [r0, r2]
   1366c:	ldr	r0, [sp, #44]	; 0x2c
   13670:	cmp	r0, #0
   13674:	bne	1369c <close_stdout@@Base+0x868>
   13678:	ldr	r1, [sp, #48]	; 0x30
   1367c:	cmp	r1, #0
   13680:	beq	1369c <close_stdout@@Base+0x868>
   13684:	ubfx	r2, r4, #5, #8
   13688:	and	r3, r4, #31
   1368c:	ldr	r2, [r1, r2, lsl #2]
   13690:	lsr	r3, r2, r3
   13694:	tst	r3, #1
   13698:	bne	136a4 <close_stdout@@Base+0x870>
   1369c:	cmp	r6, #0
   136a0:	beq	136c4 <close_stdout@@Base+0x890>
   136a4:	ldr	r2, [sp, #36]	; 0x24
   136a8:	cmp	r2, #0
   136ac:	bne	137b4 <close_stdout@@Base+0x980>
   136b0:	cmp	r9, sl
   136b4:	ldrcc	r0, [sp, #40]	; 0x28
   136b8:	movcc	r3, #92	; 0x5c
   136bc:	strbcc	r3, [r0, r9]
   136c0:	add	r9, r9, #1
   136c4:	add	fp, fp, #1
   136c8:	cmp	r9, sl
   136cc:	ldrcc	r1, [sp, #40]	; 0x28
   136d0:	strbcc	r4, [r1, r9]
   136d4:	cmn	r8, #1
   136d8:	add	r9, r9, #1
   136dc:	bne	13364 <close_stdout@@Base+0x530>
   136e0:	ldr	r2, [sp, #32]
   136e4:	ldrb	r3, [r2, fp]
   136e8:	adds	r3, r3, #0
   136ec:	movne	r3, #1
   136f0:	cmp	r3, #0
   136f4:	bne	13374 <close_stdout@@Base+0x540>
   136f8:	ldr	r3, [sp, #160]	; 0xa0
   136fc:	cmp	r9, #0
   13700:	cmpeq	r3, #2
   13704:	bne	13714 <close_stdout@@Base+0x8e0>
   13708:	ldr	r0, [sp, #36]	; 0x24
   1370c:	cmp	r0, #0
   13710:	bne	137b4 <close_stdout@@Base+0x980>
   13714:	ldr	r1, [sp, #36]	; 0x24
   13718:	ldr	r2, [sp, #52]	; 0x34
   1371c:	eor	r3, r1, #1
   13720:	cmp	r2, #0
   13724:	moveq	r3, #0
   13728:	andne	r3, r3, #1
   1372c:	cmp	r3, #0
   13730:	beq	1375c <close_stdout@@Base+0x928>
   13734:	ldrb	r3, [r2]
   13738:	cmp	r3, #0
   1373c:	beq	1375c <close_stdout@@Base+0x928>
   13740:	ldr	r1, [sp, #40]	; 0x28
   13744:	cmp	sl, r9
   13748:	strbhi	r3, [r1, r9]
   1374c:	ldrb	r3, [r2, #1]!
   13750:	add	r9, r9, #1
   13754:	cmp	r3, #0
   13758:	bne	13744 <close_stdout@@Base+0x910>
   1375c:	cmp	r9, sl
   13760:	movcs	r0, r9
   13764:	ldrcc	r1, [sp, #40]	; 0x28
   13768:	movcc	r3, #0
   1376c:	movcc	r0, r9
   13770:	strbcc	r3, [r1, r9]
   13774:	b	137f0 <close_stdout@@Base+0x9bc>
   13778:	cmn	r8, #1
   1377c:	beq	13e44 <close_stdout@@Base+0x1010>
   13780:	subs	r3, r8, #1
   13784:	movne	r3, #1
   13788:	cmp	r3, #0
   1378c:	bne	1366c <close_stdout@@Base+0x838>
   13790:	cmp	fp, #0
   13794:	bne	1366c <close_stdout@@Base+0x838>
   13798:	ldr	r3, [sp, #36]	; 0x24
   1379c:	ldr	r0, [sp, #160]	; 0xa0
   137a0:	cmp	r0, #2
   137a4:	movne	r3, #0
   137a8:	andeq	r3, r3, #1
   137ac:	cmp	r3, #0
   137b0:	beq	1366c <close_stdout@@Base+0x838>
   137b4:	ldr	r2, [sp, #164]	; 0xa4
   137b8:	mov	ip, #0
   137bc:	ldr	r0, [sp, #160]	; 0xa0
   137c0:	bic	r3, r2, #2
   137c4:	ldr	r1, [sp, #72]	; 0x48
   137c8:	ldr	r2, [sp, #68]	; 0x44
   137cc:	stm	sp, {r0, r3}
   137d0:	mov	r3, r8
   137d4:	str	r1, [sp, #12]
   137d8:	mov	r1, sl
   137dc:	str	r2, [sp, #16]
   137e0:	ldr	r0, [sp, #40]	; 0x28
   137e4:	ldr	r2, [sp, #32]
   137e8:	str	ip, [sp, #8]
   137ec:	bl	13284 <close_stdout@@Base+0x450>
   137f0:	ldr	r1, [sp, #56]	; 0x38
   137f4:	ldr	r2, [sp, #116]	; 0x74
   137f8:	ldr	r3, [r1]
   137fc:	cmp	r2, r3
   13800:	bne	13f34 <close_stdout@@Base+0x1100>
   13804:	add	sp, sp, #124	; 0x7c
   13808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1380c:	mov	r3, #114	; 0x72
   13810:	ldr	r2, [sp, #36]	; 0x24
   13814:	ldr	r0, [sp, #160]	; 0xa0
   13818:	cmp	r0, #2
   1381c:	movne	r2, #0
   13820:	andeq	r2, r2, #1
   13824:	cmp	r2, #0
   13828:	bne	137b4 <close_stdout@@Base+0x980>
   1382c:	ldr	r1, [sp, #24]
   13830:	cmp	r1, #0
   13834:	beq	1366c <close_stdout@@Base+0x838>
   13838:	mov	r4, r3
   1383c:	b	136a4 <close_stdout@@Base+0x870>
   13840:	mov	r3, #98	; 0x62
   13844:	b	1382c <close_stdout@@Base+0x9f8>
   13848:	mov	r3, #102	; 0x66
   1384c:	b	1382c <close_stdout@@Base+0x9f8>
   13850:	mov	r3, #118	; 0x76
   13854:	b	1382c <close_stdout@@Base+0x9f8>
   13858:	mov	r3, #97	; 0x61
   1385c:	b	1382c <close_stdout@@Base+0x9f8>
   13860:	mov	r3, #110	; 0x6e
   13864:	b	13810 <close_stdout@@Base+0x9dc>
   13868:	mov	r3, #116	; 0x74
   1386c:	b	13810 <close_stdout@@Base+0x9dc>
   13870:	ldr	r2, [sp, #24]
   13874:	cmp	r2, #0
   13878:	beq	13e20 <close_stdout@@Base+0xfec>
   1387c:	ldr	r3, [sp, #36]	; 0x24
   13880:	cmp	r3, #0
   13884:	bne	137b4 <close_stdout@@Base+0x980>
   13888:	cmp	r9, sl
   1388c:	add	r2, r9, #1
   13890:	ldrcc	r0, [sp, #40]	; 0x28
   13894:	movcc	r3, #92	; 0x5c
   13898:	strbcc	r3, [r0, r9]
   1389c:	add	r3, fp, #1
   138a0:	cmp	r8, r3
   138a4:	bls	138e4 <close_stdout@@Base+0xab0>
   138a8:	ldr	r1, [sp, #32]
   138ac:	ldrb	r3, [r1, r3]
   138b0:	sub	r3, r3, #48	; 0x30
   138b4:	cmp	r3, #9
   138b8:	bhi	138e4 <close_stdout@@Base+0xab0>
   138bc:	cmp	sl, r2
   138c0:	ldrhi	r0, [sp, #40]	; 0x28
   138c4:	movhi	r3, #48	; 0x30
   138c8:	strbhi	r3, [r0, r2]
   138cc:	add	r3, r9, #2
   138d0:	cmp	sl, r3
   138d4:	ldrhi	r1, [sp, #40]	; 0x28
   138d8:	movhi	r2, #48	; 0x30
   138dc:	strbhi	r2, [r1, r3]
   138e0:	add	r2, r9, #3
   138e4:	mov	r9, r2
   138e8:	mov	r4, #48	; 0x30
   138ec:	b	13678 <close_stdout@@Base+0x844>
   138f0:	ldr	r1, [sp, #76]	; 0x4c
   138f4:	cmp	r1, #0
   138f8:	beq	13904 <close_stdout@@Base+0xad0>
   138fc:	cmp	r7, #0
   13900:	bne	136c4 <close_stdout@@Base+0x890>
   13904:	mov	r3, r4
   13908:	b	13810 <close_stdout@@Base+0x9dc>
   1390c:	ldr	r1, [sp, #160]	; 0xa0
   13910:	cmp	r1, #2
   13914:	bne	1366c <close_stdout@@Base+0x838>
   13918:	ldr	r2, [sp, #36]	; 0x24
   1391c:	cmp	r2, #0
   13920:	bne	137b4 <close_stdout@@Base+0x980>
   13924:	cmp	r9, sl
   13928:	ldrcc	r0, [sp, #40]	; 0x28
   1392c:	movcc	r3, #39	; 0x27
   13930:	strbcc	r3, [r0, r9]
   13934:	add	r3, r9, #1
   13938:	cmp	sl, r3
   1393c:	ldrhi	r1, [sp, #40]	; 0x28
   13940:	movhi	r2, #92	; 0x5c
   13944:	strbhi	r2, [r1, r3]
   13948:	add	r3, r9, #2
   1394c:	cmp	sl, r3
   13950:	add	r9, r9, #3
   13954:	ldrhi	r0, [sp, #40]	; 0x28
   13958:	movhi	r2, #39	; 0x27
   1395c:	strbhi	r2, [r0, r3]
   13960:	b	1366c <close_stdout@@Base+0x838>
   13964:	ldr	r1, [sp, #64]	; 0x40
   13968:	cmp	r1, #1
   1396c:	bne	13c64 <close_stdout@@Base+0xe30>
   13970:	bl	111d8 <__ctype_b_loc@plt>
   13974:	ldr	r2, [sp, #64]	; 0x40
   13978:	sxth	r3, r4
   1397c:	str	r2, [sp, #60]	; 0x3c
   13980:	lsl	r3, r3, #1
   13984:	ldr	r2, [r0]
   13988:	ldrh	r2, [r2, r3]
   1398c:	eor	r2, r2, #16384	; 0x4000
   13990:	ubfx	r2, r2, #14, #1
   13994:	ldr	r1, [sp, #24]
   13998:	ands	r2, r2, r1
   1399c:	beq	1366c <close_stdout@@Base+0x838>
   139a0:	ldr	r3, [sp, #60]	; 0x3c
   139a4:	mov	r0, #92	; 0x5c
   139a8:	ldr	r7, [sp, #36]	; 0x24
   139ac:	add	r1, r3, fp
   139b0:	str	r8, [sp, #60]	; 0x3c
   139b4:	ldr	r3, [sp, #40]	; 0x28
   139b8:	b	13a1c <close_stdout@@Base+0xbe8>
   139bc:	cmp	r7, #0
   139c0:	bne	13e5c <close_stdout@@Base+0x1028>
   139c4:	add	ip, r9, #1
   139c8:	cmp	r9, sl
   139cc:	strbcc	r0, [r3, r9]
   139d0:	cmp	sl, ip
   139d4:	lsrhi	r8, r4, #6
   139d8:	addhi	r8, r8, #48	; 0x30
   139dc:	strbhi	r8, [r3, ip]
   139e0:	add	ip, r9, #2
   139e4:	add	r9, r9, #3
   139e8:	cmp	sl, ip
   139ec:	ubfxhi	r8, r4, #3, #3
   139f0:	and	r4, r4, #7
   139f4:	add	r4, r4, #48	; 0x30
   139f8:	addhi	r8, r8, #48	; 0x30
   139fc:	strbhi	r8, [r3, ip]
   13a00:	add	fp, fp, #1
   13a04:	cmp	r1, fp
   13a08:	bls	13a48 <close_stdout@@Base+0xc14>
   13a0c:	cmp	r9, sl
   13a10:	strbcc	r4, [r3, r9]
   13a14:	ldrb	r4, [r5, #1]!
   13a18:	add	r9, r9, #1
   13a1c:	cmp	r2, #0
   13a20:	bne	139bc <close_stdout@@Base+0xb88>
   13a24:	cmp	r6, #0
   13a28:	beq	13a00 <close_stdout@@Base+0xbcc>
   13a2c:	add	fp, fp, #1
   13a30:	cmp	r9, sl
   13a34:	strbcc	r0, [r3, r9]
   13a38:	cmp	r1, fp
   13a3c:	add	r9, r9, #1
   13a40:	mov	r6, #0
   13a44:	bhi	13a0c <close_stdout@@Base+0xbd8>
   13a48:	ldr	r8, [sp, #60]	; 0x3c
   13a4c:	b	136c8 <close_stdout@@Base+0x894>
   13a50:	ldr	r3, [sp, #36]	; 0x24
   13a54:	cmp	r3, #0
   13a58:	bne	13f5c <close_stdout@@Base+0x1128>
   13a5c:	cmp	sl, #0
   13a60:	beq	13e74 <close_stdout@@Base+0x1040>
   13a64:	ldr	r1, [sp, #40]	; 0x28
   13a68:	mov	r0, #1
   13a6c:	ldr	r2, [pc, #1296]	; 13f84 <close_stdout@@Base+0x1150>
   13a70:	mov	r3, #34	; 0x22
   13a74:	str	r0, [sp, #24]
   13a78:	mov	r9, r0
   13a7c:	add	r2, pc, r2
   13a80:	str	r0, [sp, #28]
   13a84:	strb	r3, [r1]
   13a88:	str	r2, [sp, #52]	; 0x34
   13a8c:	b	13338 <close_stdout@@Base+0x504>
   13a90:	ldr	r3, [pc, #1264]	; 13f88 <close_stdout@@Base+0x1154>
   13a94:	mov	r2, #1
   13a98:	mov	r0, #3
   13a9c:	str	r2, [sp, #36]	; 0x24
   13aa0:	add	r3, pc, r3
   13aa4:	str	r2, [sp, #24]
   13aa8:	str	r3, [sp, #52]	; 0x34
   13aac:	mov	r9, #0
   13ab0:	str	r2, [sp, #28]
   13ab4:	str	r0, [sp, #160]	; 0xa0
   13ab8:	b	13338 <close_stdout@@Base+0x504>
   13abc:	mov	r0, #0
   13ac0:	mov	r1, #1
   13ac4:	str	r0, [sp, #36]	; 0x24
   13ac8:	mov	r9, r0
   13acc:	str	r1, [sp, #24]
   13ad0:	str	r0, [sp, #28]
   13ad4:	str	r0, [sp, #52]	; 0x34
   13ad8:	b	13338 <close_stdout@@Base+0x504>
   13adc:	ldr	r3, [sp, #160]	; 0xa0
   13ae0:	cmp	r3, #8
   13ae4:	beq	13b10 <close_stdout@@Base+0xcdc>
   13ae8:	ldr	r0, [pc, #1180]	; 13f8c <close_stdout@@Base+0x1158>
   13aec:	mov	r1, r3
   13af0:	add	r0, pc, r0
   13af4:	bl	13120 <close_stdout@@Base+0x2ec>
   13af8:	ldr	r1, [sp, #160]	; 0xa0
   13afc:	str	r0, [sp, #72]	; 0x48
   13b00:	ldr	r0, [pc, #1160]	; 13f90 <close_stdout@@Base+0x115c>
   13b04:	add	r0, pc, r0
   13b08:	bl	13120 <close_stdout@@Base+0x2ec>
   13b0c:	str	r0, [sp, #68]	; 0x44
   13b10:	ldr	r0, [sp, #36]	; 0x24
   13b14:	cmp	r0, #0
   13b18:	movne	r9, #0
   13b1c:	bne	13b54 <close_stdout@@Base+0xd20>
   13b20:	ldr	r1, [sp, #72]	; 0x48
   13b24:	ldrb	r3, [r1]
   13b28:	cmp	r3, #0
   13b2c:	beq	13f2c <close_stdout@@Base+0x10f8>
   13b30:	mov	r2, r1
   13b34:	ldr	r1, [sp, #40]	; 0x28
   13b38:	mov	r9, r0
   13b3c:	cmp	r9, sl
   13b40:	strbcc	r3, [r1, r9]
   13b44:	ldrb	r3, [r2, #1]!
   13b48:	add	r9, r9, #1
   13b4c:	cmp	r3, #0
   13b50:	bne	13b3c <close_stdout@@Base+0xd08>
   13b54:	ldr	r0, [sp, #68]	; 0x44
   13b58:	str	r0, [sp, #52]	; 0x34
   13b5c:	bl	111f0 <strlen@plt>
   13b60:	mov	r2, #1
   13b64:	str	r2, [sp, #24]
   13b68:	str	r0, [sp, #28]
   13b6c:	b	13338 <close_stdout@@Base+0x504>
   13b70:	ldr	r3, [pc, #1052]	; 13f94 <close_stdout@@Base+0x1160>
   13b74:	mov	r2, #0
   13b78:	mov	r1, #1
   13b7c:	mov	r0, #2
   13b80:	add	r3, pc, r3
   13b84:	str	r1, [sp, #36]	; 0x24
   13b88:	str	r2, [sp, #24]
   13b8c:	mov	r9, r2
   13b90:	str	r1, [sp, #28]
   13b94:	str	r3, [sp, #52]	; 0x34
   13b98:	str	r0, [sp, #160]	; 0xa0
   13b9c:	b	13338 <close_stdout@@Base+0x504>
   13ba0:	ldr	r3, [sp, #36]	; 0x24
   13ba4:	cmp	r3, #0
   13ba8:	bne	13f38 <close_stdout@@Base+0x1104>
   13bac:	cmp	sl, #0
   13bb0:	beq	13e94 <close_stdout@@Base+0x1060>
   13bb4:	ldr	r1, [sp, #40]	; 0x28
   13bb8:	mov	r3, #39	; 0x27
   13bbc:	ldr	r2, [sp, #36]	; 0x24
   13bc0:	mov	r0, #1
   13bc4:	mov	r9, r0
   13bc8:	str	r0, [sp, #28]
   13bcc:	strb	r3, [r1]
   13bd0:	ldr	r3, [pc, #960]	; 13f98 <close_stdout@@Base+0x1164>
   13bd4:	str	r2, [sp, #24]
   13bd8:	add	r3, pc, r3
   13bdc:	str	r3, [sp, #52]	; 0x34
   13be0:	b	13338 <close_stdout@@Base+0x504>
   13be4:	ldr	r2, [sp, #28]
   13be8:	cmp	r2, #1
   13bec:	add	r4, fp, r2
   13bf0:	movls	r3, #0
   13bf4:	movhi	r3, #1
   13bf8:	cmn	r8, #1
   13bfc:	movne	r3, #0
   13c00:	cmp	r3, #0
   13c04:	beq	13c14 <close_stdout@@Base+0xde0>
   13c08:	ldr	r0, [sp, #32]
   13c0c:	bl	111f0 <strlen@plt>
   13c10:	mov	r8, r0
   13c14:	cmp	r8, r4
   13c18:	ldrcc	r3, [sp, #32]
   13c1c:	movcc	r6, #0
   13c20:	addcc	r5, r3, fp
   13c24:	bcc	13394 <close_stdout@@Base+0x560>
   13c28:	ldr	r0, [sp, #32]
   13c2c:	ldr	r1, [sp, #52]	; 0x34
   13c30:	add	r5, r0, fp
   13c34:	ldr	r2, [sp, #28]
   13c38:	mov	r0, r5
   13c3c:	bl	110d0 <memcmp@plt>
   13c40:	cmp	r0, #0
   13c44:	bne	13c5c <close_stdout@@Base+0xe28>
   13c48:	ldr	r1, [sp, #36]	; 0x24
   13c4c:	cmp	r1, #0
   13c50:	bne	137b4 <close_stdout@@Base+0x980>
   13c54:	mov	r6, #1
   13c58:	b	13394 <close_stdout@@Base+0x560>
   13c5c:	mov	r6, #0
   13c60:	b	13394 <close_stdout@@Base+0x560>
   13c64:	add	r7, sp, #108	; 0x6c
   13c68:	cmn	r8, #1
   13c6c:	mov	r3, #0
   13c70:	str	r3, [sp, #108]	; 0x6c
   13c74:	str	r3, [r7, #4]
   13c78:	beq	13e64 <close_stdout@@Base+0x1030>
   13c7c:	mov	r1, #0
   13c80:	ldr	r0, [sp, #32]
   13c84:	mov	ip, #1
   13c88:	str	r9, [sp, #88]	; 0x58
   13c8c:	str	r6, [sp, #96]	; 0x60
   13c90:	mov	r9, r1
   13c94:	str	r5, [sp, #100]	; 0x64
   13c98:	mov	r6, ip
   13c9c:	mov	r5, r7
   13ca0:	add	r3, sp, #104	; 0x68
   13ca4:	sub	r0, r0, #1
   13ca8:	str	r3, [sp, #80]	; 0x50
   13cac:	str	r0, [sp, #84]	; 0x54
   13cb0:	str	r1, [sp, #60]	; 0x3c
   13cb4:	str	r4, [sp, #92]	; 0x5c
   13cb8:	ldr	r2, [sp, #32]
   13cbc:	add	r7, r9, fp
   13cc0:	add	r0, sp, #104	; 0x68
   13cc4:	mov	r3, r5
   13cc8:	add	r4, r2, r7
   13ccc:	rsb	r2, r7, r8
   13cd0:	mov	r1, r4
   13cd4:	bl	11154 <mbrtowc@plt>
   13cd8:	subs	r2, r0, #0
   13cdc:	beq	13de8 <close_stdout@@Base+0xfb4>
   13ce0:	cmn	r2, #1
   13ce4:	beq	13f10 <close_stdout@@Base+0x10dc>
   13ce8:	cmn	r2, #2
   13cec:	beq	13eb4 <close_stdout@@Base+0x1080>
   13cf0:	ldr	r3, [sp, #36]	; 0x24
   13cf4:	ldr	r0, [sp, #160]	; 0xa0
   13cf8:	cmp	r0, #2
   13cfc:	movne	r3, #0
   13d00:	andeq	r3, r3, #1
   13d04:	cmp	r3, #0
   13d08:	beq	13dc4 <close_stdout@@Base+0xf90>
   13d0c:	cmp	r2, #1
   13d10:	beq	13dc4 <close_stdout@@Base+0xf90>
   13d14:	ldr	r1, [sp, #84]	; 0x54
   13d18:	add	r3, r1, r2
   13d1c:	add	r7, r3, r7
   13d20:	ldrb	r3, [r4, #1]!
   13d24:	sub	r3, r3, #91	; 0x5b
   13d28:	cmp	r3, #33	; 0x21
   13d2c:	addls	pc, pc, r3, lsl #2
   13d30:	b	13dbc <close_stdout@@Base+0xf88>
   13d34:	b	137b4 <close_stdout@@Base+0x980>
   13d38:	b	137b4 <close_stdout@@Base+0x980>
   13d3c:	b	13dbc <close_stdout@@Base+0xf88>
   13d40:	b	137b4 <close_stdout@@Base+0x980>
   13d44:	b	13dbc <close_stdout@@Base+0xf88>
   13d48:	b	137b4 <close_stdout@@Base+0x980>
   13d4c:	b	13dbc <close_stdout@@Base+0xf88>
   13d50:	b	13dbc <close_stdout@@Base+0xf88>
   13d54:	b	13dbc <close_stdout@@Base+0xf88>
   13d58:	b	13dbc <close_stdout@@Base+0xf88>
   13d5c:	b	13dbc <close_stdout@@Base+0xf88>
   13d60:	b	13dbc <close_stdout@@Base+0xf88>
   13d64:	b	13dbc <close_stdout@@Base+0xf88>
   13d68:	b	13dbc <close_stdout@@Base+0xf88>
   13d6c:	b	13dbc <close_stdout@@Base+0xf88>
   13d70:	b	13dbc <close_stdout@@Base+0xf88>
   13d74:	b	13dbc <close_stdout@@Base+0xf88>
   13d78:	b	13dbc <close_stdout@@Base+0xf88>
   13d7c:	b	13dbc <close_stdout@@Base+0xf88>
   13d80:	b	13dbc <close_stdout@@Base+0xf88>
   13d84:	b	13dbc <close_stdout@@Base+0xf88>
   13d88:	b	13dbc <close_stdout@@Base+0xf88>
   13d8c:	b	13dbc <close_stdout@@Base+0xf88>
   13d90:	b	13dbc <close_stdout@@Base+0xf88>
   13d94:	b	13dbc <close_stdout@@Base+0xf88>
   13d98:	b	13dbc <close_stdout@@Base+0xf88>
   13d9c:	b	13dbc <close_stdout@@Base+0xf88>
   13da0:	b	13dbc <close_stdout@@Base+0xf88>
   13da4:	b	13dbc <close_stdout@@Base+0xf88>
   13da8:	b	13dbc <close_stdout@@Base+0xf88>
   13dac:	b	13dbc <close_stdout@@Base+0xf88>
   13db0:	b	13dbc <close_stdout@@Base+0xf88>
   13db4:	b	13dbc <close_stdout@@Base+0xf88>
   13db8:	b	137b4 <close_stdout@@Base+0x980>
   13dbc:	cmp	r4, r7
   13dc0:	bne	13d20 <close_stdout@@Base+0xeec>
   13dc4:	ldr	r0, [sp, #104]	; 0x68
   13dc8:	add	r9, r9, r2
   13dcc:	bl	1110c <iswprint@plt>
   13dd0:	cmp	r0, #0
   13dd4:	mov	r0, r5
   13dd8:	moveq	r6, #0
   13ddc:	bl	110c4 <mbsinit@plt>
   13de0:	cmp	r0, #0
   13de4:	beq	13cb8 <close_stdout@@Base+0xe84>
   13de8:	mov	ip, r6
   13dec:	eor	r2, ip, #1
   13df0:	str	r9, [sp, #60]	; 0x3c
   13df4:	ldr	r4, [sp, #92]	; 0x5c
   13df8:	uxtb	r2, r2
   13dfc:	ldr	r9, [sp, #88]	; 0x58
   13e00:	ldr	r6, [sp, #96]	; 0x60
   13e04:	ldr	r5, [sp, #100]	; 0x64
   13e08:	ldr	r3, [sp, #60]	; 0x3c
   13e0c:	cmp	r3, #1
   13e10:	bls	13994 <close_stdout@@Base+0xb60>
   13e14:	ldr	r0, [sp, #24]
   13e18:	and	r2, r2, r0
   13e1c:	b	139a0 <close_stdout@@Base+0xb6c>
   13e20:	ldr	r2, [sp, #164]	; 0xa4
   13e24:	tst	r2, #1
   13e28:	addne	fp, fp, #1
   13e2c:	bne	1335c <close_stdout@@Base+0x528>
   13e30:	b	1366c <close_stdout@@Base+0x838>
   13e34:	ldr	r0, [sp, #36]	; 0x24
   13e38:	cmp	r0, #0
   13e3c:	beq	1366c <close_stdout@@Base+0x838>
   13e40:	b	137b4 <close_stdout@@Base+0x980>
   13e44:	ldr	r2, [sp, #32]
   13e48:	ldrb	r3, [r2, #1]
   13e4c:	adds	r3, r3, #0
   13e50:	movne	r3, #1
   13e54:	b	13788 <close_stdout@@Base+0x954>
   13e58:	bl	112ec <abort@plt>
   13e5c:	ldr	r8, [sp, #60]	; 0x3c
   13e60:	b	137b4 <close_stdout@@Base+0x980>
   13e64:	ldr	r0, [sp, #32]
   13e68:	bl	111f0 <strlen@plt>
   13e6c:	mov	r8, r0
   13e70:	b	13c7c <close_stdout@@Base+0xe48>
   13e74:	ldr	r2, [pc, #288]	; 13f9c <close_stdout@@Base+0x1168>
   13e78:	mov	r1, #1
   13e7c:	mov	r9, r1
   13e80:	str	r1, [sp, #24]
   13e84:	add	r2, pc, r2
   13e88:	str	r1, [sp, #28]
   13e8c:	str	r2, [sp, #52]	; 0x34
   13e90:	b	13338 <close_stdout@@Base+0x504>
   13e94:	ldr	r2, [pc, #260]	; 13fa0 <close_stdout@@Base+0x116c>
   13e98:	mov	r3, #1
   13e9c:	mov	r9, r3
   13ea0:	str	r3, [sp, #28]
   13ea4:	add	r2, pc, r2
   13ea8:	str	sl, [sp, #24]
   13eac:	str	r2, [sp, #52]	; 0x34
   13eb0:	b	13338 <close_stdout@@Base+0x504>
   13eb4:	cmp	r8, r7
   13eb8:	str	r9, [sp, #60]	; 0x3c
   13ebc:	mov	ip, r4
   13ec0:	ldr	r6, [sp, #96]	; 0x60
   13ec4:	ldr	r9, [sp, #88]	; 0x58
   13ec8:	ldr	r4, [sp, #92]	; 0x5c
   13ecc:	ldr	r5, [sp, #100]	; 0x64
   13ed0:	bls	13f08 <close_stdout@@Base+0x10d4>
   13ed4:	ldrb	r3, [ip]
   13ed8:	cmp	r3, #0
   13edc:	beq	13f08 <close_stdout@@Base+0x10d4>
   13ee0:	ldr	r3, [sp, #60]	; 0x3c
   13ee4:	b	13ef4 <close_stdout@@Base+0x10c0>
   13ee8:	ldrb	r2, [r5, r3]
   13eec:	cmp	r2, #0
   13ef0:	beq	13f04 <close_stdout@@Base+0x10d0>
   13ef4:	add	r3, r3, #1
   13ef8:	add	r2, fp, r3
   13efc:	cmp	r8, r2
   13f00:	bhi	13ee8 <close_stdout@@Base+0x10b4>
   13f04:	str	r3, [sp, #60]	; 0x3c
   13f08:	mov	r2, #1
   13f0c:	b	13e08 <close_stdout@@Base+0xfd4>
   13f10:	str	r9, [sp, #60]	; 0x3c
   13f14:	mov	r2, #1
   13f18:	ldr	r4, [sp, #92]	; 0x5c
   13f1c:	ldr	r6, [sp, #96]	; 0x60
   13f20:	ldr	r9, [sp, #88]	; 0x58
   13f24:	ldr	r5, [sp, #100]	; 0x64
   13f28:	b	13e08 <close_stdout@@Base+0xfd4>
   13f2c:	ldr	r9, [sp, #36]	; 0x24
   13f30:	b	13b54 <close_stdout@@Base+0xd20>
   13f34:	bl	110e8 <__stack_chk_fail@plt>
   13f38:	ldr	r1, [pc, #100]	; 13fa4 <close_stdout@@Base+0x1170>
   13f3c:	mov	r3, #0
   13f40:	mov	r0, #1
   13f44:	str	r3, [sp, #24]
   13f48:	add	r1, pc, r1
   13f4c:	str	r0, [sp, #28]
   13f50:	mov	r9, r3
   13f54:	str	r1, [sp, #52]	; 0x34
   13f58:	b	13338 <close_stdout@@Base+0x504>
   13f5c:	ldr	r0, [pc, #68]	; 13fa8 <close_stdout@@Base+0x1174>
   13f60:	mov	r3, #1
   13f64:	mov	r9, #0
   13f68:	str	r3, [sp, #24]
   13f6c:	add	r0, pc, r0
   13f70:	str	r3, [sp, #28]
   13f74:	str	r0, [sp, #52]	; 0x34
   13f78:	b	13338 <close_stdout@@Base+0x504>
   13f7c:	andeq	r5, r1, r8, asr sp
   13f80:	andeq	r0, r0, r4, lsl #2
   13f84:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   13f88:			; <UNDEFINED> instruction: 0x00004ab0
   13f8c:	andeq	r4, r0, ip, ror #20
   13f90:	andeq	r4, r0, r8, asr #20
   13f94:	andeq	r4, r0, ip, asr #19
   13f98:	andeq	r4, r0, r4, ror r9
   13f9c:	andeq	r4, r0, ip, asr #13
   13fa0:	andeq	r4, r0, r8, lsr #13
   13fa4:	andeq	r4, r0, r4, lsl #12
   13fa8:	andeq	r4, r0, r4, ror #11
   13fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fb0:	sub	sp, sp, #44	; 0x2c
   13fb4:	mov	r6, r0
   13fb8:	mov	r9, r1
   13fbc:	mov	sl, r2
   13fc0:	mov	r4, r3
   13fc4:	bl	11214 <__errno_location@plt>
   13fc8:	ldr	fp, [pc, #412]	; 1416c <close_stdout@@Base+0x1338>
   13fcc:	cmp	r6, #0
   13fd0:	add	fp, pc, fp
   13fd4:	ldr	r5, [fp]
   13fd8:	ldr	r1, [r0]
   13fdc:	mov	r8, r0
   13fe0:	str	r1, [sp, #36]	; 0x24
   13fe4:	blt	14164 <close_stdout@@Base+0x1330>
   13fe8:	ldr	r3, [pc, #384]	; 14170 <close_stdout@@Base+0x133c>
   13fec:	add	r3, pc, r3
   13ff0:	ldr	r3, [r3]
   13ff4:	cmp	r6, r3
   13ff8:	bcc	1404c <close_stdout@@Base+0x1218>
   13ffc:	add	r7, r6, #1
   14000:	cmn	r7, #-536870911	; 0xe0000001
   14004:	bhi	14168 <close_stdout@@Base+0x1334>
   14008:	add	r3, fp, #4
   1400c:	cmp	r5, r3
   14010:	beq	1413c <close_stdout@@Base+0x1308>
   14014:	mov	r0, r5
   14018:	lsl	r1, r7, #3
   1401c:	bl	152cc <fwrite_success_callback@@Base+0xa80>
   14020:	mov	r5, r0
   14024:	str	r0, [fp]
   14028:	ldr	fp, [pc, #324]	; 14174 <close_stdout@@Base+0x1340>
   1402c:	mov	r1, #0
   14030:	add	fp, pc, fp
   14034:	ldr	r0, [fp]
   14038:	rsb	r2, r0, r7
   1403c:	add	r0, r5, r0, lsl #3
   14040:	lsl	r2, r2, #3
   14044:	bl	1122c <memset@plt>
   14048:	str	r7, [fp]
   1404c:	add	r2, r4, #8
   14050:	str	r2, [sp, #32]
   14054:	ldr	r1, [r4]
   14058:	add	fp, r5, r6, lsl #3
   1405c:	ldr	lr, [sp, #32]
   14060:	mov	r2, r9
   14064:	ldr	r3, [r4, #4]
   14068:	ldr	ip, [r5, r6, lsl #3]
   1406c:	ldr	r7, [fp, #4]
   14070:	orr	r3, r3, #1
   14074:	str	r1, [sp]
   14078:	str	r3, [sp, #4]
   1407c:	mov	r1, ip
   14080:	str	lr, [sp, #8]
   14084:	mov	r0, r7
   14088:	ldr	lr, [r4, #40]	; 0x28
   1408c:	str	r3, [sp, #28]
   14090:	mov	r3, sl
   14094:	str	lr, [sp, #12]
   14098:	ldr	lr, [r4, #44]	; 0x2c
   1409c:	str	ip, [sp, #24]
   140a0:	str	lr, [sp, #16]
   140a4:	bl	13284 <close_stdout@@Base+0x450>
   140a8:	ldr	ip, [sp, #24]
   140ac:	cmp	ip, r0
   140b0:	bhi	14128 <close_stdout@@Base+0x12f4>
   140b4:	ldr	r3, [pc, #188]	; 14178 <close_stdout@@Base+0x1344>
   140b8:	add	r1, r0, #1
   140bc:	str	r1, [r5, r6, lsl #3]
   140c0:	add	r3, pc, r3
   140c4:	cmp	r7, r3
   140c8:	beq	140dc <close_stdout@@Base+0x12a8>
   140cc:	mov	r0, r7
   140d0:	str	r1, [sp, #24]
   140d4:	bl	11088 <free@plt>
   140d8:	ldr	r1, [sp, #24]
   140dc:	mov	r0, r1
   140e0:	str	r1, [sp, #24]
   140e4:	bl	15274 <fwrite_success_callback@@Base+0xa28>
   140e8:	ldr	r3, [sp, #28]
   140ec:	ldr	lr, [sp, #32]
   140f0:	mov	r2, r9
   140f4:	str	r0, [fp, #4]
   140f8:	mov	r7, r0
   140fc:	ldr	ip, [r4]
   14100:	str	r3, [sp, #4]
   14104:	mov	r3, sl
   14108:	str	lr, [sp, #8]
   1410c:	str	ip, [sp]
   14110:	ldr	ip, [r4, #40]	; 0x28
   14114:	ldr	r1, [sp, #24]
   14118:	str	ip, [sp, #12]
   1411c:	ldr	ip, [r4, #44]	; 0x2c
   14120:	str	ip, [sp, #16]
   14124:	bl	13284 <close_stdout@@Base+0x450>
   14128:	ldr	r1, [sp, #36]	; 0x24
   1412c:	mov	r0, r7
   14130:	str	r1, [r8]
   14134:	add	sp, sp, #44	; 0x2c
   14138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1413c:	lsl	r1, r7, #3
   14140:	mov	r0, #0
   14144:	str	r3, [sp, #24]
   14148:	bl	152cc <fwrite_success_callback@@Base+0xa80>
   1414c:	ldr	r3, [sp, #24]
   14150:	mov	r5, r0
   14154:	ldm	r3, {r0, r1}
   14158:	str	r5, [fp]
   1415c:	stm	r5, {r0, r1}
   14160:	b	14028 <close_stdout@@Base+0x11f4>
   14164:	bl	112ec <abort@plt>
   14168:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   1416c:	andeq	r5, r1, r0, lsr #3
   14170:	andeq	r5, r1, r0, asr r1
   14174:	andeq	r5, r1, ip, lsl #2
   14178:	ldrdeq	r5, [r1], -r8
   1417c:	push	{r4, r5, r6, lr}
   14180:	mov	r5, r0
   14184:	bl	11214 <__errno_location@plt>
   14188:	cmp	r5, #0
   1418c:	mov	r1, #48	; 0x30
   14190:	mov	r4, r0
   14194:	ldr	r0, [pc, #24]	; 141b4 <close_stdout@@Base+0x1380>
   14198:	ldr	r6, [r4]
   1419c:	add	r0, pc, r0
   141a0:	add	r0, r0, #256	; 0x100
   141a4:	movne	r0, r5
   141a8:	bl	15448 <fwrite_success_callback@@Base+0xbfc>
   141ac:	str	r6, [r4]
   141b0:	pop	{r4, r5, r6, pc}
   141b4:	strdeq	r4, [r1], -ip
   141b8:	cmp	r0, #0
   141bc:	beq	141c8 <close_stdout@@Base+0x1394>
   141c0:	ldr	r0, [r0]
   141c4:	bx	lr
   141c8:	ldr	r0, [pc, #12]	; 141dc <close_stdout@@Base+0x13a8>
   141cc:	add	r0, pc, r0
   141d0:	add	r0, r0, #256	; 0x100
   141d4:	ldr	r0, [r0]
   141d8:	bx	lr
   141dc:	andeq	r4, r1, ip, asr #31
   141e0:	cmp	r0, #0
   141e4:	beq	141f0 <close_stdout@@Base+0x13bc>
   141e8:	str	r1, [r0]
   141ec:	bx	lr
   141f0:	ldr	r0, [pc, #12]	; 14204 <close_stdout@@Base+0x13d0>
   141f4:	add	r0, pc, r0
   141f8:	add	r0, r0, #256	; 0x100
   141fc:	str	r1, [r0]
   14200:	bx	lr
   14204:	andeq	r4, r1, r4, lsr #31
   14208:	cmp	r0, #0
   1420c:	movne	r3, r0
   14210:	beq	14240 <close_stdout@@Base+0x140c>
   14214:	lsr	ip, r1, #5
   14218:	and	r1, r1, #31
   1421c:	add	r3, r3, ip, lsl #2
   14220:	ldr	ip, [r3, #8]
   14224:	lsr	r0, ip, r1
   14228:	eor	r2, r0, r2
   1422c:	and	r0, r0, #1
   14230:	and	r2, r2, #1
   14234:	eor	ip, ip, r2, lsl r1
   14238:	str	ip, [r3, #8]
   1423c:	bx	lr
   14240:	ldr	r3, [pc, #8]	; 14250 <close_stdout@@Base+0x141c>
   14244:	add	r3, pc, r3
   14248:	add	r3, r3, #256	; 0x100
   1424c:	b	14214 <close_stdout@@Base+0x13e0>
   14250:	andeq	r4, r1, r4, asr pc
   14254:	subs	r3, r0, #0
   14258:	beq	14268 <close_stdout@@Base+0x1434>
   1425c:	ldr	r0, [r3, #4]
   14260:	str	r1, [r3, #4]
   14264:	bx	lr
   14268:	ldr	r3, [pc, #8]	; 14278 <close_stdout@@Base+0x1444>
   1426c:	add	r3, pc, r3
   14270:	add	r3, r3, #256	; 0x100
   14274:	b	1425c <close_stdout@@Base+0x1428>
   14278:	andeq	r4, r1, ip, lsr #30
   1427c:	cmp	r0, #0
   14280:	push	{r3, lr}
   14284:	beq	142a8 <close_stdout@@Base+0x1474>
   14288:	cmp	r2, #0
   1428c:	cmpne	r1, #0
   14290:	mov	r3, #8
   14294:	strne	r1, [r0, #40]	; 0x28
   14298:	str	r3, [r0]
   1429c:	strne	r2, [r0, #44]	; 0x2c
   142a0:	popne	{r3, pc}
   142a4:	bl	112ec <abort@plt>
   142a8:	ldr	r0, [pc, #8]	; 142b8 <close_stdout@@Base+0x1484>
   142ac:	add	r0, pc, r0
   142b0:	add	r0, r0, #256	; 0x100
   142b4:	b	14288 <close_stdout@@Base+0x1454>
   142b8:	andeq	r4, r1, ip, ror #29
   142bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142c0:	sub	sp, sp, #24
   142c4:	mov	r7, r0
   142c8:	mov	sl, r1
   142cc:	ldr	r4, [sp, #56]	; 0x38
   142d0:	mov	r9, r2
   142d4:	mov	r8, r3
   142d8:	cmp	r4, #0
   142dc:	beq	14330 <close_stdout@@Base+0x14fc>
   142e0:	bl	11214 <__errno_location@plt>
   142e4:	ldr	r3, [r4]
   142e8:	add	lr, r4, #8
   142ec:	mov	r1, sl
   142f0:	mov	r2, r9
   142f4:	ldr	r6, [r0]
   142f8:	mov	r5, r0
   142fc:	str	r3, [sp]
   14300:	mov	r0, r7
   14304:	ldr	ip, [r4, #4]
   14308:	mov	r3, r8
   1430c:	stmib	sp, {ip, lr}
   14310:	ldr	ip, [r4, #40]	; 0x28
   14314:	str	ip, [sp, #12]
   14318:	ldr	ip, [r4, #44]	; 0x2c
   1431c:	str	ip, [sp, #16]
   14320:	bl	13284 <close_stdout@@Base+0x450>
   14324:	str	r6, [r5]
   14328:	add	sp, sp, #24
   1432c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14330:	ldr	r4, [pc, #8]	; 14340 <close_stdout@@Base+0x150c>
   14334:	add	r4, pc, r4
   14338:	add	r4, r4, #256	; 0x100
   1433c:	b	142e0 <close_stdout@@Base+0x14ac>
   14340:	andeq	r4, r1, r4, ror #28
   14344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14348:	subs	r4, r3, #0
   1434c:	sub	sp, sp, #36	; 0x24
   14350:	mov	r7, r0
   14354:	mov	r6, r1
   14358:	mov	r5, r2
   1435c:	beq	14418 <close_stdout@@Base+0x15e4>
   14360:	bl	11214 <__errno_location@plt>
   14364:	ldr	r3, [r4]
   14368:	ldr	sl, [r4, #4]
   1436c:	add	r9, r4, #8
   14370:	mov	r8, r0
   14374:	mov	r0, #0
   14378:	ldr	r2, [r8]
   1437c:	cmp	r5, r0
   14380:	orreq	sl, sl, #1
   14384:	str	r9, [sp, #8]
   14388:	mov	r1, r0
   1438c:	stm	sp, {r3, sl}
   14390:	mov	r3, r6
   14394:	ldr	ip, [r4, #40]	; 0x28
   14398:	str	r2, [sp, #28]
   1439c:	mov	r2, r7
   143a0:	str	ip, [sp, #12]
   143a4:	ldr	ip, [r4, #44]	; 0x2c
   143a8:	str	ip, [sp, #16]
   143ac:	bl	13284 <close_stdout@@Base+0x450>
   143b0:	add	r1, r0, #1
   143b4:	mov	fp, r0
   143b8:	str	r1, [sp, #24]
   143bc:	mov	r0, r1
   143c0:	bl	15274 <fwrite_success_callback@@Base+0xa28>
   143c4:	ldr	lr, [r4]
   143c8:	str	sl, [sp, #4]
   143cc:	mov	r3, r6
   143d0:	str	r9, [sp, #8]
   143d4:	mov	r2, r7
   143d8:	str	lr, [sp]
   143dc:	ldr	lr, [r4, #40]	; 0x28
   143e0:	ldr	r1, [sp, #24]
   143e4:	str	lr, [sp, #12]
   143e8:	ldr	lr, [r4, #44]	; 0x2c
   143ec:	str	lr, [sp, #16]
   143f0:	str	r0, [sp, #24]
   143f4:	bl	13284 <close_stdout@@Base+0x450>
   143f8:	ldr	r3, [sp, #28]
   143fc:	cmp	r5, #0
   14400:	str	r3, [r8]
   14404:	ldr	ip, [sp, #24]
   14408:	strne	fp, [r5]
   1440c:	mov	r0, ip
   14410:	add	sp, sp, #36	; 0x24
   14414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14418:	ldr	r4, [pc, #8]	; 14428 <close_stdout@@Base+0x15f4>
   1441c:	add	r4, pc, r4
   14420:	add	r4, r4, #256	; 0x100
   14424:	b	14360 <close_stdout@@Base+0x152c>
   14428:	andeq	r4, r1, ip, ror sp
   1442c:	mov	r3, r2
   14430:	mov	r2, #0
   14434:	b	14344 <close_stdout@@Base+0x1510>
   14438:	ldr	r2, [pc, #152]	; 144d8 <close_stdout@@Base+0x16a4>
   1443c:	push	{r3, r4, r5, r6, r7, lr}
   14440:	add	r2, pc, r2
   14444:	ldr	r3, [pc, #144]	; 144dc <close_stdout@@Base+0x16a8>
   14448:	ldr	r6, [r2]
   1444c:	add	r3, pc, r3
   14450:	cmp	r6, #1
   14454:	ldr	r7, [r3]
   14458:	movhi	r4, #1
   1445c:	movhi	r5, r7
   14460:	bls	1447c <close_stdout@@Base+0x1648>
   14464:	ldr	r0, [r5, #12]
   14468:	add	r4, r4, #1
   1446c:	bl	11088 <free@plt>
   14470:	cmp	r4, r6
   14474:	add	r5, r5, #8
   14478:	bne	14464 <close_stdout@@Base+0x1630>
   1447c:	ldr	r4, [pc, #92]	; 144e0 <close_stdout@@Base+0x16ac>
   14480:	ldr	r0, [r7, #4]
   14484:	add	r4, pc, r4
   14488:	cmp	r0, r4
   1448c:	beq	144a4 <close_stdout@@Base+0x1670>
   14490:	bl	11088 <free@plt>
   14494:	ldr	r3, [pc, #72]	; 144e4 <close_stdout@@Base+0x16b0>
   14498:	mov	r2, #256	; 0x100
   1449c:	add	r3, pc, r3
   144a0:	stmib	r3, {r2, r4}
   144a4:	ldr	r4, [pc, #60]	; 144e8 <close_stdout@@Base+0x16b4>
   144a8:	add	r4, pc, r4
   144ac:	add	r5, r4, #4
   144b0:	cmp	r7, r5
   144b4:	beq	144c4 <close_stdout@@Base+0x1690>
   144b8:	mov	r0, r7
   144bc:	bl	11088 <free@plt>
   144c0:	str	r5, [r4]
   144c4:	ldr	r3, [pc, #32]	; 144ec <close_stdout@@Base+0x16b8>
   144c8:	mov	r2, #1
   144cc:	add	r3, pc, r3
   144d0:	str	r2, [r3]
   144d4:	pop	{r3, r4, r5, r6, r7, pc}
   144d8:	strdeq	r4, [r1], -ip
   144dc:	andeq	r4, r1, r4, lsr #26
   144e0:	andeq	r4, r1, r4, lsl sp
   144e4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144e8:	andeq	r4, r1, r8, asr #25
   144ec:	andeq	r4, r1, r0, ror ip
   144f0:	ldr	r3, [pc, #12]	; 14504 <close_stdout@@Base+0x16d0>
   144f4:	mvn	r2, #0
   144f8:	add	r3, pc, r3
   144fc:	add	r3, r3, #256	; 0x100
   14500:	b	13fac <close_stdout@@Base+0x1178>
   14504:	andeq	r4, r1, r0, lsr #25
   14508:	ldr	r3, [pc, #8]	; 14518 <close_stdout@@Base+0x16e4>
   1450c:	add	r3, pc, r3
   14510:	add	r3, r3, #256	; 0x100
   14514:	b	13fac <close_stdout@@Base+0x1178>
   14518:	andeq	r4, r1, ip, lsl #25
   1451c:	mov	r1, r0
   14520:	mov	r0, #0
   14524:	b	144f0 <close_stdout@@Base+0x16bc>
   14528:	mov	r2, r1
   1452c:	mov	r1, r0
   14530:	mov	r0, #0
   14534:	b	14508 <close_stdout@@Base+0x16d4>
   14538:	ldr	r3, [pc, #92]	; 1459c <close_stdout@@Base+0x1768>
   1453c:	ldr	ip, [pc, #92]	; 145a0 <close_stdout@@Base+0x176c>
   14540:	add	r3, pc, r3
   14544:	push	{r4, r5, r6, r7, lr}
   14548:	sub	sp, sp, #60	; 0x3c
   1454c:	ldr	r4, [r3, ip]
   14550:	add	r5, sp, #4
   14554:	mov	r7, r2
   14558:	mov	r6, r0
   1455c:	mov	r0, r5
   14560:	ldr	r3, [r4]
   14564:	str	r3, [sp, #52]	; 0x34
   14568:	bl	130cc <close_stdout@@Base+0x298>
   1456c:	mov	r3, r5
   14570:	mvn	r2, #0
   14574:	mov	r0, r6
   14578:	mov	r1, r7
   1457c:	bl	13fac <close_stdout@@Base+0x1178>
   14580:	ldr	r2, [sp, #52]	; 0x34
   14584:	ldr	r3, [r4]
   14588:	cmp	r2, r3
   1458c:	bne	14598 <close_stdout@@Base+0x1764>
   14590:	add	sp, sp, #60	; 0x3c
   14594:	pop	{r4, r5, r6, r7, pc}
   14598:	bl	110e8 <__stack_chk_fail@plt>
   1459c:			; <UNDEFINED> instruction: 0x00014ab8
   145a0:	andeq	r0, r0, r4, lsl #2
   145a4:	ldr	ip, [pc, #96]	; 1460c <close_stdout@@Base+0x17d8>
   145a8:	push	{r4, r5, r6, r7, r8, lr}
   145ac:	add	ip, pc, ip
   145b0:	ldr	lr, [pc, #88]	; 14610 <close_stdout@@Base+0x17dc>
   145b4:	sub	sp, sp, #56	; 0x38
   145b8:	mov	r8, r3
   145bc:	add	r5, sp, #4
   145c0:	mov	r7, r2
   145c4:	mov	r6, r0
   145c8:	ldr	r4, [ip, lr]
   145cc:	mov	r0, r5
   145d0:	ldr	r3, [r4]
   145d4:	str	r3, [sp, #52]	; 0x34
   145d8:	bl	130cc <close_stdout@@Base+0x298>
   145dc:	mov	r2, r8
   145e0:	mov	r3, r5
   145e4:	mov	r0, r6
   145e8:	mov	r1, r7
   145ec:	bl	13fac <close_stdout@@Base+0x1178>
   145f0:	ldr	r2, [sp, #52]	; 0x34
   145f4:	ldr	r3, [r4]
   145f8:	cmp	r2, r3
   145fc:	bne	14608 <close_stdout@@Base+0x17d4>
   14600:	add	sp, sp, #56	; 0x38
   14604:	pop	{r4, r5, r6, r7, r8, pc}
   14608:	bl	110e8 <__stack_chk_fail@plt>
   1460c:	andeq	r4, r1, ip, asr #20
   14610:	andeq	r0, r0, r4, lsl #2
   14614:	mov	r2, r1
   14618:	mov	r1, r0
   1461c:	mov	r0, #0
   14620:	b	14538 <close_stdout@@Base+0x1704>
   14624:	mov	ip, r1
   14628:	mov	r3, r2
   1462c:	mov	r1, r0
   14630:	mov	r2, ip
   14634:	mov	r0, #0
   14638:	b	145a4 <close_stdout@@Base+0x1770>
   1463c:	push	{r4, r5, r6, r7, r8, lr}
   14640:	mov	r5, r2
   14644:	ldr	lr, [pc, #136]	; 146d4 <close_stdout@@Base+0x18a0>
   14648:	mov	r7, r0
   1464c:	mov	r6, r1
   14650:	ldr	r4, [pc, #128]	; 146d8 <close_stdout@@Base+0x18a4>
   14654:	add	lr, pc, lr
   14658:	sub	sp, sp, #56	; 0x38
   1465c:	add	lr, lr, #256	; 0x100
   14660:	ldr	r8, [pc, #116]	; 146dc <close_stdout@@Base+0x18a8>
   14664:	add	r4, pc, r4
   14668:	add	ip, sp, #4
   1466c:	ldm	lr!, {r0, r1, r2, r3}
   14670:	ldr	r4, [r4, r8]
   14674:	stmia	ip!, {r0, r1, r2, r3}
   14678:	ldm	lr!, {r0, r1, r2, r3}
   1467c:	ldr	r8, [r4]
   14680:	stmia	ip!, {r0, r1, r2, r3}
   14684:	ldm	lr, {r0, r1, r2, r3}
   14688:	str	r8, [sp, #52]	; 0x34
   1468c:	stm	ip, {r0, r1, r2, r3}
   14690:	mov	r1, r5
   14694:	add	r5, sp, #4
   14698:	mov	r2, #1
   1469c:	mov	r0, r5
   146a0:	bl	14208 <close_stdout@@Base+0x13d4>
   146a4:	mov	r2, r6
   146a8:	mov	r3, r5
   146ac:	mov	r1, r7
   146b0:	mov	r0, #0
   146b4:	bl	13fac <close_stdout@@Base+0x1178>
   146b8:	ldr	r2, [sp, #52]	; 0x34
   146bc:	ldr	r3, [r4]
   146c0:	cmp	r2, r3
   146c4:	bne	146d0 <close_stdout@@Base+0x189c>
   146c8:	add	sp, sp, #56	; 0x38
   146cc:	pop	{r4, r5, r6, r7, r8, pc}
   146d0:	bl	110e8 <__stack_chk_fail@plt>
   146d4:	andeq	r4, r1, r4, asr #22
   146d8:	muleq	r1, r4, r9
   146dc:	andeq	r0, r0, r4, lsl #2
   146e0:	mov	r2, r1
   146e4:	mvn	r1, #0
   146e8:	b	1463c <close_stdout@@Base+0x1808>
   146ec:	mov	r1, #58	; 0x3a
   146f0:	b	146e0 <close_stdout@@Base+0x18ac>
   146f4:	mov	r2, #58	; 0x3a
   146f8:	b	1463c <close_stdout@@Base+0x1808>
   146fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14700:	mov	r5, r2
   14704:	ldr	lr, [pc, #144]	; 1479c <close_stdout@@Base+0x1968>
   14708:	mov	r8, r0
   1470c:	mov	r9, r1
   14710:	mov	r7, r3
   14714:	add	lr, pc, lr
   14718:	ldr	r4, [pc, #128]	; 147a0 <close_stdout@@Base+0x196c>
   1471c:	add	lr, lr, #256	; 0x100
   14720:	sub	sp, sp, #56	; 0x38
   14724:	ldr	sl, [pc, #120]	; 147a4 <close_stdout@@Base+0x1970>
   14728:	add	r4, pc, r4
   1472c:	ldm	lr!, {r0, r1, r2, r3}
   14730:	add	ip, sp, #4
   14734:	ldr	r4, [r4, sl]
   14738:	ldr	r6, [sp, #88]	; 0x58
   1473c:	stmia	ip!, {r0, r1, r2, r3}
   14740:	ldm	lr!, {r0, r1, r2, r3}
   14744:	ldr	sl, [r4]
   14748:	stmia	ip!, {r0, r1, r2, r3}
   1474c:	ldm	lr, {r0, r1, r2, r3}
   14750:	str	sl, [sp, #52]	; 0x34
   14754:	stm	ip, {r0, r1, r2, r3}
   14758:	mov	r2, r5
   1475c:	add	r5, sp, #4
   14760:	mov	r1, r9
   14764:	mov	r0, r5
   14768:	bl	1427c <close_stdout@@Base+0x1448>
   1476c:	mov	r2, r6
   14770:	mov	r3, r5
   14774:	mov	r0, r8
   14778:	mov	r1, r7
   1477c:	bl	13fac <close_stdout@@Base+0x1178>
   14780:	ldr	r2, [sp, #52]	; 0x34
   14784:	ldr	r3, [r4]
   14788:	cmp	r2, r3
   1478c:	bne	14798 <close_stdout@@Base+0x1964>
   14790:	add	sp, sp, #56	; 0x38
   14794:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14798:	bl	110e8 <__stack_chk_fail@plt>
   1479c:	andeq	r4, r1, r4, lsl #21
   147a0:	ldrdeq	r4, [r1], -r0
   147a4:	andeq	r0, r0, r4, lsl #2
   147a8:	push	{lr}		; (str lr, [sp, #-4]!)
   147ac:	sub	sp, sp, #12
   147b0:	mvn	ip, #0
   147b4:	str	ip, [sp]
   147b8:	bl	146fc <close_stdout@@Base+0x18c8>
   147bc:	add	sp, sp, #12
   147c0:	pop	{pc}		; (ldr pc, [sp], #4)
   147c4:	mov	ip, r1
   147c8:	mov	r3, r2
   147cc:	mov	r1, r0
   147d0:	mov	r2, ip
   147d4:	mov	r0, #0
   147d8:	b	147a8 <close_stdout@@Base+0x1974>
   147dc:	push	{lr}		; (str lr, [sp, #-4]!)
   147e0:	sub	sp, sp, #12
   147e4:	mov	lr, r1
   147e8:	mov	ip, r2
   147ec:	mov	r1, r0
   147f0:	str	r3, [sp]
   147f4:	mov	r2, lr
   147f8:	mov	r3, ip
   147fc:	mov	r0, #0
   14800:	bl	146fc <close_stdout@@Base+0x18c8>
   14804:	add	sp, sp, #12
   14808:	pop	{pc}		; (ldr pc, [sp], #4)
   1480c:	ldr	r3, [pc, #12]	; 14820 <close_stdout@@Base+0x19ec>
   14810:	ldr	ip, [pc, #12]	; 14824 <close_stdout@@Base+0x19f0>
   14814:	add	r3, pc, r3
   14818:	ldr	r3, [r3, ip]
   1481c:	b	13fac <close_stdout@@Base+0x1178>
   14820:	andeq	r4, r1, r4, ror #15
   14824:	andeq	r0, r0, r0, lsl #2
   14828:	mov	r2, r1
   1482c:	mov	r1, r0
   14830:	mov	r0, #0
   14834:	b	1480c <close_stdout@@Base+0x19d8>
   14838:	mvn	r2, #0
   1483c:	b	1480c <close_stdout@@Base+0x19d8>
   14840:	mov	r1, r0
   14844:	mov	r0, #0
   14848:	b	14838 <close_stdout@@Base+0x1a04>

0001484c <fwrite_success_callback@@Base>:
   1484c:	push	{r3, lr}
   14850:	mov	r3, r2
   14854:	mov	r2, r1
   14858:	mov	r1, #1
   1485c:	bl	11118 <fwrite@plt>
   14860:	mov	r0, #0
   14864:	pop	{r3, pc}
   14868:	push	{r3, lr}
   1486c:	mov	r3, r0
   14870:	cmp	r3, #65536	; 0x10000
   14874:	mov	r0, r2
   14878:	mov	r1, #1
   1487c:	bcc	14894 <fwrite_success_callback@@Base+0x48>
   14880:	ldr	r2, [pc, #32]	; 148a8 <fwrite_success_callback@@Base+0x5c>
   14884:	add	r2, pc, r2
   14888:	bl	1125c <__fprintf_chk@plt>
   1488c:	mvn	r0, #0
   14890:	pop	{r3, pc}
   14894:	ldr	r2, [pc, #16]	; 148ac <fwrite_success_callback@@Base+0x60>
   14898:	add	r2, pc, r2
   1489c:	bl	1125c <__fprintf_chk@plt>
   148a0:	mvn	r0, #0
   148a4:	pop	{r3, pc}
   148a8:	andeq	r3, r0, r8, lsr #26
   148ac:	andeq	r3, r0, ip, lsl #26
   148b0:	push	{r4, r5, r6, lr}
   148b4:	subs	r4, r1, #0
   148b8:	sub	sp, sp, #8
   148bc:	mov	r5, r0
   148c0:	beq	14910 <fwrite_success_callback@@Base+0xc4>
   148c4:	ldr	r1, [pc, #120]	; 14944 <fwrite_success_callback@@Base+0xf8>
   148c8:	mov	r2, #5
   148cc:	mov	r0, #0
   148d0:	add	r1, pc, r1
   148d4:	bl	110dc <dcgettext@plt>
   148d8:	mov	r1, r4
   148dc:	mov	r2, #5
   148e0:	mov	r6, r0
   148e4:	mov	r0, #0
   148e8:	bl	110dc <dcgettext@plt>
   148ec:	mov	r2, r6
   148f0:	mov	r3, r5
   148f4:	mov	r1, #0
   148f8:	str	r0, [sp]
   148fc:	mov	r0, #1
   14900:	bl	11160 <error@plt>
   14904:	mvn	r0, #0
   14908:	add	sp, sp, #8
   1490c:	pop	{r4, r5, r6, pc}
   14910:	ldr	r1, [pc, #48]	; 14948 <fwrite_success_callback@@Base+0xfc>
   14914:	mov	r0, r4
   14918:	mov	r2, #5
   1491c:	add	r1, pc, r1
   14920:	bl	110dc <dcgettext@plt>
   14924:	mov	r1, r4
   14928:	mov	r3, r5
   1492c:	mov	r2, r0
   14930:	mov	r0, #1
   14934:	bl	11160 <error@plt>
   14938:	mvn	r0, #0
   1493c:	add	sp, sp, #8
   14940:	pop	{r4, r5, r6, pc}
   14944:	andeq	r3, r0, r4, lsl sp
   14948:	muleq	r0, r8, ip
   1494c:	ldr	ip, [pc, #588]	; 14ba0 <fwrite_success_callback@@Base+0x354>
   14950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14954:	mov	r5, r0
   14958:	ldr	r0, [pc, #580]	; 14ba4 <fwrite_success_callback@@Base+0x358>
   1495c:	add	ip, pc, ip
   14960:	ldr	r9, [pc, #576]	; 14ba8 <fwrite_success_callback@@Base+0x35c>
   14964:	mov	r8, r2
   14968:	mov	r6, r3
   1496c:	mov	r3, ip
   14970:	ldr	r0, [ip, r0]
   14974:	add	r9, pc, r9
   14978:	sub	sp, sp, #76	; 0x4c
   1497c:	mov	r7, r1
   14980:	ldr	r2, [r9]
   14984:	ldr	r3, [r0]
   14988:	cmp	r2, #0
   1498c:	str	r0, [sp, #12]
   14990:	str	r3, [sp, #68]	; 0x44
   14994:	beq	14ad8 <fwrite_success_callback@@Base+0x28c>
   14998:	ldr	r4, [r9, #4]
   1499c:	cmp	r4, #0
   149a0:	bne	149b8 <fwrite_success_callback@@Base+0x16c>
   149a4:	ldr	r3, [pc, #512]	; 14bac <fwrite_success_callback@@Base+0x360>
   149a8:	add	r3, pc, r3
   149ac:	ldr	r3, [r3, #8]
   149b0:	cmn	r3, #1
   149b4:	beq	14b68 <fwrite_success_callback@@Base+0x31c>
   149b8:	cmp	r5, #127	; 0x7f
   149bc:	bhi	14aa8 <fwrite_success_callback@@Base+0x25c>
   149c0:	add	fp, sp, #72	; 0x48
   149c4:	mov	lr, #1
   149c8:	strb	r5, [fp, #-40]!	; 0xffffffd8
   149cc:	cmp	r4, #0
   149d0:	beq	14a00 <fwrite_success_callback@@Base+0x1b4>
   149d4:	mov	r0, fp
   149d8:	mov	r1, lr
   149dc:	mov	r2, r6
   149e0:	blx	r7
   149e4:	ldr	r1, [sp, #12]
   149e8:	ldr	r2, [sp, #68]	; 0x44
   149ec:	ldr	r3, [r1]
   149f0:	cmp	r2, r3
   149f4:	bne	14b9c <fwrite_success_callback@@Base+0x350>
   149f8:	add	sp, sp, #76	; 0x4c
   149fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a00:	ldr	ip, [pc, #424]	; 14bb0 <fwrite_success_callback@@Base+0x364>
   14a04:	add	sl, sp, #24
   14a08:	add	r9, sp, #28
   14a0c:	add	r1, sp, #16
   14a10:	add	ip, pc, ip
   14a14:	mov	r3, sl
   14a18:	str	r9, [sp]
   14a1c:	add	r2, sp, #20
   14a20:	ldr	r0, [ip, #8]
   14a24:	str	fp, [sp, #16]
   14a28:	add	fp, sp, #40	; 0x28
   14a2c:	str	lr, [sp, #20]
   14a30:	mov	lr, #25
   14a34:	str	ip, [sp, #8]
   14a38:	str	fp, [sp, #24]
   14a3c:	str	lr, [sp, #28]
   14a40:	bl	11064 <iconv@plt>
   14a44:	ldr	r3, [sp, #20]
   14a48:	ldr	ip, [sp, #8]
   14a4c:	cmp	r3, #0
   14a50:	bne	14a94 <fwrite_success_callback@@Base+0x248>
   14a54:	cmn	r0, #1
   14a58:	beq	14a94 <fwrite_success_callback@@Base+0x248>
   14a5c:	ldr	r0, [ip, #8]
   14a60:	mov	r3, sl
   14a64:	str	r9, [sp]
   14a68:	mov	r1, r4
   14a6c:	mov	r2, r4
   14a70:	bl	11064 <iconv@plt>
   14a74:	cmn	r0, #1
   14a78:	beq	14b54 <fwrite_success_callback@@Base+0x308>
   14a7c:	ldr	r1, [sp, #24]
   14a80:	mov	r0, fp
   14a84:	mov	r2, r6
   14a88:	rsb	r1, fp, r1
   14a8c:	blx	r7
   14a90:	b	149e4 <fwrite_success_callback@@Base+0x198>
   14a94:	mov	r0, r5
   14a98:	mov	r2, r6
   14a9c:	mov	r1, #0
   14aa0:	blx	r8
   14aa4:	b	149e4 <fwrite_success_callback@@Base+0x198>
   14aa8:	add	fp, sp, #32
   14aac:	mov	r1, r5
   14ab0:	mov	r2, #6
   14ab4:	mov	r0, fp
   14ab8:	bl	14c1c <fwrite_success_callback@@Base+0x3d0>
   14abc:	cmp	r0, #0
   14ac0:	blt	14b1c <fwrite_success_callback@@Base+0x2d0>
   14ac4:	ldr	r3, [pc, #232]	; 14bb4 <fwrite_success_callback@@Base+0x368>
   14ac8:	mov	lr, r0
   14acc:	add	r3, pc, r3
   14ad0:	ldr	r4, [r3, #4]
   14ad4:	b	149cc <fwrite_success_callback@@Base+0x180>
   14ad8:	bl	15844 <fwrite_success_callback@@Base+0xff8>
   14adc:	ldr	r4, [pc, #212]	; 14bb8 <fwrite_success_callback@@Base+0x36c>
   14ae0:	add	r4, pc, r4
   14ae4:	mov	r1, r4
   14ae8:	mov	sl, r0
   14aec:	bl	11070 <strcmp@plt>
   14af0:	rsbs	r0, r0, #1
   14af4:	movcc	r0, #0
   14af8:	cmp	r0, #0
   14afc:	str	r0, [r9, #4]
   14b00:	movne	r4, #1
   14b04:	beq	14b34 <fwrite_success_callback@@Base+0x2e8>
   14b08:	ldr	r3, [pc, #172]	; 14bbc <fwrite_success_callback@@Base+0x370>
   14b0c:	mov	r2, #1
   14b10:	add	r3, pc, r3
   14b14:	str	r2, [r3]
   14b18:	b	1499c <fwrite_success_callback@@Base+0x150>
   14b1c:	ldr	r1, [pc, #156]	; 14bc0 <fwrite_success_callback@@Base+0x374>
   14b20:	mov	r0, r5
   14b24:	mov	r2, r6
   14b28:	add	r1, pc, r1
   14b2c:	blx	r8
   14b30:	b	149e4 <fwrite_success_callback@@Base+0x198>
   14b34:	mov	r0, sl
   14b38:	mov	r1, r4
   14b3c:	bl	1119c <iconv_open@plt>
   14b40:	cmn	r0, #1
   14b44:	str	r0, [r9, #8]
   14b48:	beq	14b80 <fwrite_success_callback@@Base+0x334>
   14b4c:	ldr	r4, [r9, #4]
   14b50:	b	14b08 <fwrite_success_callback@@Base+0x2bc>
   14b54:	mov	r0, r5
   14b58:	mov	r1, r4
   14b5c:	mov	r2, r6
   14b60:	blx	r8
   14b64:	b	149e4 <fwrite_success_callback@@Base+0x198>
   14b68:	ldr	r1, [pc, #84]	; 14bc4 <fwrite_success_callback@@Base+0x378>
   14b6c:	mov	r0, r5
   14b70:	mov	r2, r6
   14b74:	add	r1, pc, r1
   14b78:	blx	r8
   14b7c:	b	149e4 <fwrite_success_callback@@Base+0x198>
   14b80:	ldr	r0, [pc, #64]	; 14bc8 <fwrite_success_callback@@Base+0x37c>
   14b84:	mov	r1, r4
   14b88:	add	r0, pc, r0
   14b8c:	bl	1119c <iconv_open@plt>
   14b90:	ldr	r4, [r9, #4]
   14b94:	str	r0, [r9, #8]
   14b98:	b	14b08 <fwrite_success_callback@@Base+0x2bc>
   14b9c:	bl	110e8 <__stack_chk_fail@plt>
   14ba0:	muleq	r1, ip, r6
   14ba4:	andeq	r0, r0, r4, lsl #2
   14ba8:	andeq	r4, r1, r4, asr r9
   14bac:	andeq	r4, r1, r0, lsr #18
   14bb0:			; <UNDEFINED> instruction: 0x000148b8
   14bb4:	strdeq	r4, [r1], -ip
   14bb8:	andeq	r3, r0, r8, lsr fp
   14bbc:			; <UNDEFINED> instruction: 0x000147b8
   14bc0:	andeq	r3, r0, ip, lsl fp
   14bc4:			; <UNDEFINED> instruction: 0x00003ab4
   14bc8:	muleq	r0, r8, sl
   14bcc:	cmp	r2, #0
   14bd0:	ldr	ip, [pc, #52]	; 14c0c <fwrite_success_callback@@Base+0x3c0>
   14bd4:	push	{r4}		; (str r4, [sp, #-4]!)
   14bd8:	mov	r3, r0
   14bdc:	add	ip, pc, ip
   14be0:	bne	14c00 <fwrite_success_callback@@Base+0x3b4>
   14be4:	ldr	r2, [pc, #36]	; 14c10 <fwrite_success_callback@@Base+0x3c4>
   14be8:	add	r2, pc, r2
   14bec:	ldr	r4, [pc, #32]	; 14c14 <fwrite_success_callback@@Base+0x3c8>
   14bf0:	mov	r0, r1
   14bf4:	ldr	r1, [ip, r4]
   14bf8:	pop	{r4}		; (ldr r4, [sp], #4)
   14bfc:	b	1494c <fwrite_success_callback@@Base+0x100>
   14c00:	ldr	r2, [pc, #16]	; 14c18 <fwrite_success_callback@@Base+0x3cc>
   14c04:	add	r2, pc, r2
   14c08:	b	14bec <fwrite_success_callback@@Base+0x3a0>
   14c0c:	andeq	r4, r1, ip, lsl r4
   14c10:			; <UNDEFINED> instruction: 0xfffffc78
   14c14:	andeq	r0, r0, r4, lsr r1
   14c18:			; <UNDEFINED> instruction: 0xfffffca4
   14c1c:	cmp	r1, #127	; 0x7f
   14c20:	mov	r3, r0
   14c24:	bls	14cc4 <fwrite_success_callback@@Base+0x478>
   14c28:	cmp	r1, #2048	; 0x800
   14c2c:	bcc	14cb8 <fwrite_success_callback@@Base+0x46c>
   14c30:	cmp	r1, #65536	; 0x10000
   14c34:	bcs	14c54 <fwrite_success_callback@@Base+0x408>
   14c38:	sub	r0, r1, #55296	; 0xd800
   14c3c:	cmp	r0, #2048	; 0x800
   14c40:	bcc	14ccc <fwrite_success_callback@@Base+0x480>
   14c44:	cmp	r2, #2
   14c48:	ble	14cc4 <fwrite_success_callback@@Base+0x478>
   14c4c:	mov	r0, #3
   14c50:	b	14c80 <fwrite_success_callback@@Base+0x434>
   14c54:	cmp	r1, #1114112	; 0x110000
   14c58:	bcs	14ccc <fwrite_success_callback@@Base+0x480>
   14c5c:	cmp	r2, #3
   14c60:	ble	14cc4 <fwrite_success_callback@@Base+0x478>
   14c64:	and	r2, r1, #63	; 0x3f
   14c68:	lsr	r1, r1, #6
   14c6c:	orr	r1, r1, #65536	; 0x10000
   14c70:	mov	r0, #4
   14c74:	mvn	r2, r2, lsl #25
   14c78:	mvn	r2, r2, lsr #25
   14c7c:	strb	r2, [r3, #3]
   14c80:	and	r2, r1, #63	; 0x3f
   14c84:	lsr	r1, r1, #6
   14c88:	orr	r1, r1, #2048	; 0x800
   14c8c:	mvn	r2, r2, lsl #25
   14c90:	mvn	r2, r2, lsr #25
   14c94:	strb	r2, [r3, #2]
   14c98:	and	r2, r1, #63	; 0x3f
   14c9c:	lsr	r1, r1, #6
   14ca0:	orr	r1, r1, #192	; 0xc0
   14ca4:	strb	r1, [r3]
   14ca8:	mvn	r2, r2, lsl #25
   14cac:	mvn	r2, r2, lsr #25
   14cb0:	strb	r2, [r3, #1]
   14cb4:	bx	lr
   14cb8:	cmp	r2, #1
   14cbc:	movgt	r0, #2
   14cc0:	bgt	14c98 <fwrite_success_callback@@Base+0x44c>
   14cc4:	mvn	r0, #1
   14cc8:	bx	lr
   14ccc:	mvn	r0, #0
   14cd0:	bx	lr
   14cd4:	push	{r4, r5, r6, r7, lr}
   14cd8:	cmp	r1, #0
   14cdc:	sub	sp, sp, #36	; 0x24
   14ce0:	ldr	r7, [pc, #896]	; 15068 <fwrite_success_callback@@Base+0x81c>
   14ce4:	mov	ip, r3
   14ce8:	mov	r5, r0
   14cec:	add	r7, pc, r7
   14cf0:	ldr	r4, [sp, #56]	; 0x38
   14cf4:	ldr	r6, [sp, #60]	; 0x3c
   14cf8:	beq	1503c <fwrite_success_callback@@Base+0x7f0>
   14cfc:	str	r2, [sp]
   14d00:	mov	r3, r1
   14d04:	ldr	r2, [pc, #864]	; 1506c <fwrite_success_callback@@Base+0x820>
   14d08:	mov	r1, #1
   14d0c:	str	ip, [sp, #4]
   14d10:	add	r2, pc, r2
   14d14:	bl	1125c <__fprintf_chk@plt>
   14d18:	ldr	r1, [pc, #848]	; 15070 <fwrite_success_callback@@Base+0x824>
   14d1c:	mov	r2, #5
   14d20:	mov	r0, #0
   14d24:	add	r1, pc, r1
   14d28:	bl	110dc <dcgettext@plt>
   14d2c:	ldr	r2, [pc, #832]	; 15074 <fwrite_success_callback@@Base+0x828>
   14d30:	movw	ip, #2013	; 0x7dd
   14d34:	mov	r1, #1
   14d38:	ldr	r2, [r7, r2]
   14d3c:	str	ip, [sp]
   14d40:	mov	r3, r0
   14d44:	mov	r0, r5
   14d48:	bl	1125c <__fprintf_chk@plt>
   14d4c:	ldr	r1, [pc, #804]	; 15078 <fwrite_success_callback@@Base+0x82c>
   14d50:	mov	r0, #0
   14d54:	mov	r2, #5
   14d58:	add	r1, pc, r1
   14d5c:	bl	110dc <dcgettext@plt>
   14d60:	mov	r1, r5
   14d64:	bl	1104c <fputs_unlocked@plt>
   14d68:	cmp	r6, #9
   14d6c:	addls	pc, pc, r6, lsl #2
   14d70:	b	15058 <fwrite_success_callback@@Base+0x80c>
   14d74:	b	14e08 <fwrite_success_callback@@Base+0x5bc>
   14d78:	b	14e0c <fwrite_success_callback@@Base+0x5c0>
   14d7c:	b	14e3c <fwrite_success_callback@@Base+0x5f0>
   14d80:	b	14e70 <fwrite_success_callback@@Base+0x624>
   14d84:	b	14eac <fwrite_success_callback@@Base+0x660>
   14d88:	b	14eec <fwrite_success_callback@@Base+0x6a0>
   14d8c:	b	14f34 <fwrite_success_callback@@Base+0x6e8>
   14d90:	b	14f84 <fwrite_success_callback@@Base+0x738>
   14d94:	b	14fdc <fwrite_success_callback@@Base+0x790>
   14d98:	b	14d9c <fwrite_success_callback@@Base+0x550>
   14d9c:	ldr	r1, [pc, #728]	; 1507c <fwrite_success_callback@@Base+0x830>
   14da0:	mov	r0, #0
   14da4:	add	r1, pc, r1
   14da8:	mov	r2, #5
   14dac:	bl	110dc <dcgettext@plt>
   14db0:	ldm	r4, {r3, ip}
   14db4:	mov	r1, #1
   14db8:	str	ip, [sp]
   14dbc:	ldr	ip, [r4, #8]
   14dc0:	str	ip, [sp, #4]
   14dc4:	ldr	ip, [r4, #12]
   14dc8:	str	ip, [sp, #8]
   14dcc:	ldr	ip, [r4, #16]
   14dd0:	str	ip, [sp, #12]
   14dd4:	ldr	ip, [r4, #20]
   14dd8:	str	ip, [sp, #16]
   14ddc:	ldr	ip, [r4, #24]
   14de0:	str	ip, [sp, #20]
   14de4:	ldr	ip, [r4, #28]
   14de8:	str	ip, [sp, #24]
   14dec:	ldr	ip, [r4, #32]
   14df0:	str	ip, [sp, #28]
   14df4:	mov	r2, r0
   14df8:	mov	r0, r5
   14dfc:	bl	1125c <__fprintf_chk@plt>
   14e00:	add	sp, sp, #36	; 0x24
   14e04:	pop	{r4, r5, r6, r7, pc}
   14e08:	bl	112ec <abort@plt>
   14e0c:	ldr	r1, [pc, #620]	; 15080 <fwrite_success_callback@@Base+0x834>
   14e10:	mov	r2, #5
   14e14:	mov	r0, #0
   14e18:	add	r1, pc, r1
   14e1c:	bl	110dc <dcgettext@plt>
   14e20:	ldr	r3, [r4]
   14e24:	mov	r1, #1
   14e28:	mov	r2, r0
   14e2c:	mov	r0, r5
   14e30:	add	sp, sp, #36	; 0x24
   14e34:	pop	{r4, r5, r6, r7, lr}
   14e38:	b	1125c <__fprintf_chk@plt>
   14e3c:	ldr	r1, [pc, #576]	; 15084 <fwrite_success_callback@@Base+0x838>
   14e40:	mov	r2, #5
   14e44:	mov	r0, #0
   14e48:	add	r1, pc, r1
   14e4c:	bl	110dc <dcgettext@plt>
   14e50:	ldm	r4, {r3, ip}
   14e54:	mov	r1, #1
   14e58:	str	ip, [sp, #56]	; 0x38
   14e5c:	mov	r2, r0
   14e60:	mov	r0, r5
   14e64:	add	sp, sp, #36	; 0x24
   14e68:	pop	{r4, r5, r6, r7, lr}
   14e6c:	b	1125c <__fprintf_chk@plt>
   14e70:	ldr	r1, [pc, #528]	; 15088 <fwrite_success_callback@@Base+0x83c>
   14e74:	mov	r2, #5
   14e78:	mov	r0, #0
   14e7c:	add	r1, pc, r1
   14e80:	bl	110dc <dcgettext@plt>
   14e84:	ldm	r4, {r3, ip}
   14e88:	mov	r1, #1
   14e8c:	str	ip, [sp, #56]	; 0x38
   14e90:	ldr	ip, [r4, #8]
   14e94:	str	ip, [sp, #60]	; 0x3c
   14e98:	mov	r2, r0
   14e9c:	mov	r0, r5
   14ea0:	add	sp, sp, #36	; 0x24
   14ea4:	pop	{r4, r5, r6, r7, lr}
   14ea8:	b	1125c <__fprintf_chk@plt>
   14eac:	ldr	r1, [pc, #472]	; 1508c <fwrite_success_callback@@Base+0x840>
   14eb0:	mov	r2, #5
   14eb4:	mov	r0, #0
   14eb8:	add	r1, pc, r1
   14ebc:	bl	110dc <dcgettext@plt>
   14ec0:	ldm	r4, {r3, ip}
   14ec4:	mov	r1, #1
   14ec8:	str	ip, [sp]
   14ecc:	ldr	ip, [r4, #8]
   14ed0:	str	ip, [sp, #4]
   14ed4:	ldr	ip, [r4, #12]
   14ed8:	str	ip, [sp, #8]
   14edc:	mov	r2, r0
   14ee0:	mov	r0, r5
   14ee4:	bl	1125c <__fprintf_chk@plt>
   14ee8:	b	14e00 <fwrite_success_callback@@Base+0x5b4>
   14eec:	ldr	r1, [pc, #412]	; 15090 <fwrite_success_callback@@Base+0x844>
   14ef0:	mov	r2, #5
   14ef4:	mov	r0, #0
   14ef8:	add	r1, pc, r1
   14efc:	bl	110dc <dcgettext@plt>
   14f00:	ldm	r4, {r3, ip}
   14f04:	mov	r1, #1
   14f08:	str	ip, [sp]
   14f0c:	ldr	ip, [r4, #8]
   14f10:	str	ip, [sp, #4]
   14f14:	ldr	ip, [r4, #12]
   14f18:	str	ip, [sp, #8]
   14f1c:	ldr	ip, [r4, #16]
   14f20:	str	ip, [sp, #12]
   14f24:	mov	r2, r0
   14f28:	mov	r0, r5
   14f2c:	bl	1125c <__fprintf_chk@plt>
   14f30:	b	14e00 <fwrite_success_callback@@Base+0x5b4>
   14f34:	ldr	r1, [pc, #344]	; 15094 <fwrite_success_callback@@Base+0x848>
   14f38:	mov	r2, #5
   14f3c:	mov	r0, #0
   14f40:	add	r1, pc, r1
   14f44:	bl	110dc <dcgettext@plt>
   14f48:	ldm	r4, {r3, ip}
   14f4c:	mov	r1, #1
   14f50:	str	ip, [sp]
   14f54:	ldr	ip, [r4, #8]
   14f58:	str	ip, [sp, #4]
   14f5c:	ldr	ip, [r4, #12]
   14f60:	str	ip, [sp, #8]
   14f64:	ldr	ip, [r4, #16]
   14f68:	str	ip, [sp, #12]
   14f6c:	ldr	ip, [r4, #20]
   14f70:	str	ip, [sp, #16]
   14f74:	mov	r2, r0
   14f78:	mov	r0, r5
   14f7c:	bl	1125c <__fprintf_chk@plt>
   14f80:	b	14e00 <fwrite_success_callback@@Base+0x5b4>
   14f84:	ldr	r1, [pc, #268]	; 15098 <fwrite_success_callback@@Base+0x84c>
   14f88:	mov	r2, #5
   14f8c:	mov	r0, #0
   14f90:	add	r1, pc, r1
   14f94:	bl	110dc <dcgettext@plt>
   14f98:	ldm	r4, {r3, ip}
   14f9c:	mov	r1, #1
   14fa0:	str	ip, [sp]
   14fa4:	ldr	ip, [r4, #8]
   14fa8:	str	ip, [sp, #4]
   14fac:	ldr	ip, [r4, #12]
   14fb0:	str	ip, [sp, #8]
   14fb4:	ldr	ip, [r4, #16]
   14fb8:	str	ip, [sp, #12]
   14fbc:	ldr	ip, [r4, #20]
   14fc0:	str	ip, [sp, #16]
   14fc4:	ldr	ip, [r4, #24]
   14fc8:	str	ip, [sp, #20]
   14fcc:	mov	r2, r0
   14fd0:	mov	r0, r5
   14fd4:	bl	1125c <__fprintf_chk@plt>
   14fd8:	b	14e00 <fwrite_success_callback@@Base+0x5b4>
   14fdc:	ldr	r1, [pc, #184]	; 1509c <fwrite_success_callback@@Base+0x850>
   14fe0:	mov	r2, #5
   14fe4:	mov	r0, #0
   14fe8:	add	r1, pc, r1
   14fec:	bl	110dc <dcgettext@plt>
   14ff0:	ldm	r4, {r3, ip}
   14ff4:	mov	r1, #1
   14ff8:	str	ip, [sp]
   14ffc:	ldr	ip, [r4, #8]
   15000:	str	ip, [sp, #4]
   15004:	ldr	ip, [r4, #12]
   15008:	str	ip, [sp, #8]
   1500c:	ldr	ip, [r4, #16]
   15010:	str	ip, [sp, #12]
   15014:	ldr	ip, [r4, #20]
   15018:	str	ip, [sp, #16]
   1501c:	ldr	ip, [r4, #24]
   15020:	str	ip, [sp, #20]
   15024:	ldr	ip, [r4, #28]
   15028:	str	ip, [sp, #24]
   1502c:	mov	r2, r0
   15030:	mov	r0, r5
   15034:	bl	1125c <__fprintf_chk@plt>
   15038:	b	14e00 <fwrite_success_callback@@Base+0x5b4>
   1503c:	str	r3, [sp]
   15040:	mov	r3, r2
   15044:	ldr	r2, [pc, #84]	; 150a0 <fwrite_success_callback@@Base+0x854>
   15048:	mov	r1, #1
   1504c:	add	r2, pc, r2
   15050:	bl	1125c <__fprintf_chk@plt>
   15054:	b	14d18 <fwrite_success_callback@@Base+0x4cc>
   15058:	ldr	r1, [pc, #68]	; 150a4 <fwrite_success_callback@@Base+0x858>
   1505c:	mov	r0, #0
   15060:	add	r1, pc, r1
   15064:	b	14da8 <fwrite_success_callback@@Base+0x55c>
   15068:	andeq	r4, r1, ip, lsl #6
   1506c:	andeq	r3, r0, ip, asr #18
   15070:	andeq	r3, r0, ip, asr #18
   15074:	andeq	r0, r0, ip, lsr #2
   15078:	andeq	r3, r0, ip, lsl r9
   1507c:	andeq	r3, r0, r8, lsr #21
   15080:	andeq	r3, r0, r8, lsr #18
   15084:	andeq	r3, r0, r8, lsl #18
   15088:	andeq	r3, r0, ip, ror #17
   1508c:	andeq	r3, r0, ip, asr #17
   15090:	andeq	r3, r0, ip, lsr #17
   15094:	andeq	r3, r0, r8, lsl #17
   15098:	andeq	r3, r0, r0, ror #16
   1509c:	andeq	r3, r0, r4, lsr r8
   150a0:	andeq	r3, r0, ip, lsl r6
   150a4:	andeq	r3, r0, r0, lsr #16
   150a8:	push	{r4, r5, lr}
   150ac:	sub	sp, sp, #12
   150b0:	ldr	r5, [sp, #24]
   150b4:	ldr	ip, [r5]
   150b8:	cmp	ip, #0
   150bc:	beq	150d8 <fwrite_success_callback@@Base+0x88c>
   150c0:	mov	lr, r5
   150c4:	mov	ip, #0
   150c8:	ldr	r4, [lr, #4]!
   150cc:	add	ip, ip, #1
   150d0:	cmp	r4, #0
   150d4:	bne	150c8 <fwrite_success_callback@@Base+0x87c>
   150d8:	stm	sp, {r5, ip}
   150dc:	bl	14cd4 <fwrite_success_callback@@Base+0x488>
   150e0:	add	sp, sp, #12
   150e4:	pop	{r4, r5, pc}
   150e8:	push	{r4, r5, r6, r7, lr}
   150ec:	sub	sp, sp, #60	; 0x3c
   150f0:	ldr	r4, [pc, #100]	; 1515c <fwrite_success_callback@@Base+0x910>
   150f4:	mov	ip, #0
   150f8:	ldr	r5, [pc, #96]	; 15160 <fwrite_success_callback@@Base+0x914>
   150fc:	mov	lr, ip
   15100:	add	r4, pc, r4
   15104:	ldr	r6, [sp, #80]	; 0x50
   15108:	ldr	r7, [r4, r5]
   1510c:	add	r5, sp, #12
   15110:	ldr	r4, [r7]
   15114:	str	r4, [sp, #52]	; 0x34
   15118:	ldr	r4, [r6, ip]
   1511c:	cmp	r4, #0
   15120:	str	r4, [r5, ip]
   15124:	beq	15138 <fwrite_success_callback@@Base+0x8ec>
   15128:	add	lr, lr, #1
   1512c:	add	ip, ip, #4
   15130:	cmp	lr, #10
   15134:	bne	15118 <fwrite_success_callback@@Base+0x8cc>
   15138:	stm	sp, {r5, lr}
   1513c:	bl	14cd4 <fwrite_success_callback@@Base+0x488>
   15140:	ldr	r2, [sp, #52]	; 0x34
   15144:	ldr	r3, [r7]
   15148:	cmp	r2, r3
   1514c:	bne	15158 <fwrite_success_callback@@Base+0x90c>
   15150:	add	sp, sp, #60	; 0x3c
   15154:	pop	{r4, r5, r6, r7, pc}
   15158:	bl	110e8 <__stack_chk_fail@plt>
   1515c:	strdeq	r3, [r1], -r8
   15160:	andeq	r0, r0, r4, lsl #2
   15164:	push	{r3}		; (str r3, [sp, #-4]!)
   15168:	push	{r4, lr}
   1516c:	sub	sp, sp, #20
   15170:	ldr	lr, [pc, #72]	; 151c0 <fwrite_success_callback@@Base+0x974>
   15174:	add	ip, sp, #32
   15178:	ldr	r4, [pc, #68]	; 151c4 <fwrite_success_callback@@Base+0x978>
   1517c:	add	lr, pc, lr
   15180:	ldr	r3, [sp, #28]
   15184:	ldr	r4, [lr, r4]
   15188:	str	ip, [sp]
   1518c:	str	ip, [sp, #8]
   15190:	ldr	ip, [r4]
   15194:	str	ip, [sp, #12]
   15198:	bl	150e8 <fwrite_success_callback@@Base+0x89c>
   1519c:	ldr	r2, [sp, #12]
   151a0:	ldr	r3, [r4]
   151a4:	cmp	r2, r3
   151a8:	bne	151bc <fwrite_success_callback@@Base+0x970>
   151ac:	add	sp, sp, #20
   151b0:	pop	{r4, lr}
   151b4:	add	sp, sp, #4
   151b8:	bx	lr
   151bc:	bl	110e8 <__stack_chk_fail@plt>
   151c0:	andeq	r3, r1, ip, ror lr
   151c4:	andeq	r0, r0, r4, lsl #2
   151c8:	ldr	r1, [pc, #132]	; 15254 <fwrite_success_callback@@Base+0xa08>
   151cc:	mov	r2, #5
   151d0:	push	{r4, lr}
   151d4:	add	r1, pc, r1
   151d8:	mov	r0, #0
   151dc:	ldr	r4, [pc, #116]	; 15258 <fwrite_success_callback@@Base+0xa0c>
   151e0:	bl	110dc <dcgettext@plt>
   151e4:	ldr	r2, [pc, #112]	; 1525c <fwrite_success_callback@@Base+0xa10>
   151e8:	add	r4, pc, r4
   151ec:	add	r2, pc, r2
   151f0:	mov	r1, r0
   151f4:	mov	r0, #1
   151f8:	bl	11244 <__printf_chk@plt>
   151fc:	ldr	r1, [pc, #92]	; 15260 <fwrite_success_callback@@Base+0xa14>
   15200:	mov	r2, #5
   15204:	mov	r0, #0
   15208:	add	r1, pc, r1
   1520c:	bl	110dc <dcgettext@plt>
   15210:	ldr	r2, [pc, #76]	; 15264 <fwrite_success_callback@@Base+0xa18>
   15214:	ldr	r3, [pc, #76]	; 15268 <fwrite_success_callback@@Base+0xa1c>
   15218:	add	r2, pc, r2
   1521c:	add	r3, pc, r3
   15220:	mov	r1, r0
   15224:	mov	r0, #1
   15228:	bl	11244 <__printf_chk@plt>
   1522c:	ldr	r1, [pc, #56]	; 1526c <fwrite_success_callback@@Base+0xa20>
   15230:	mov	r0, #0
   15234:	mov	r2, #5
   15238:	add	r1, pc, r1
   1523c:	bl	110dc <dcgettext@plt>
   15240:	ldr	r3, [pc, #40]	; 15270 <fwrite_success_callback@@Base+0xa24>
   15244:	ldr	r3, [r4, r3]
   15248:	pop	{r4, lr}
   1524c:	ldr	r1, [r3]
   15250:	b	1104c <fputs_unlocked@plt>
   15254:	andeq	r3, r0, r8, ror #13
   15258:	andeq	r3, r1, r0, lsl lr
   1525c:	andeq	r3, r0, r8, ror #13
   15260:	andeq	r3, r0, r4, ror #13
   15264:	andeq	r3, r0, r0, asr r1
   15268:	andeq	r3, r0, ip, asr r1
   1526c:	andeq	r3, r0, r8, asr #13
   15270:	andeq	r0, r0, ip, lsl r1
   15274:	push	{r4, lr}
   15278:	mov	r4, r0
   1527c:	bl	11190 <malloc@plt>
   15280:	rsbs	r3, r0, #1
   15284:	movcc	r3, #0
   15288:	cmp	r4, #0
   1528c:	moveq	r3, #0
   15290:	cmp	r3, #0
   15294:	popeq	{r4, pc}
   15298:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   1529c:	push	{r3, r4, r5, lr}
   152a0:	mov	r4, r0
   152a4:	mvn	r0, #0
   152a8:	mov	r5, r1
   152ac:	bl	17a04 <fwrite_success_callback@@Base+0x31b8>
   152b0:	cmp	r0, r4
   152b4:	bcc	152c4 <fwrite_success_callback@@Base+0xa78>
   152b8:	mul	r0, r4, r5
   152bc:	pop	{r3, r4, r5, lr}
   152c0:	b	15274 <fwrite_success_callback@@Base+0xa28>
   152c4:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   152c8:	b	15274 <fwrite_success_callback@@Base+0xa28>
   152cc:	rsbs	r3, r1, #1
   152d0:	push	{r4, lr}
   152d4:	movcc	r3, #0
   152d8:	cmp	r0, #0
   152dc:	mov	r4, r1
   152e0:	moveq	r3, #0
   152e4:	cmp	r3, #0
   152e8:	bne	1530c <fwrite_success_callback@@Base+0xac0>
   152ec:	bl	110f4 <realloc@plt>
   152f0:	rsbs	r3, r0, #1
   152f4:	movcc	r3, #0
   152f8:	cmp	r4, #0
   152fc:	moveq	r3, #0
   15300:	cmp	r3, #0
   15304:	popeq	{r4, pc}
   15308:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   1530c:	bl	11088 <free@plt>
   15310:	mov	r0, #0
   15314:	pop	{r4, pc}
   15318:	push	{r4, r5, r6, lr}
   1531c:	mov	r5, r1
   15320:	mov	r6, r0
   15324:	mov	r1, r2
   15328:	mvn	r0, #0
   1532c:	mov	r4, r2
   15330:	bl	17a04 <fwrite_success_callback@@Base+0x31b8>
   15334:	cmp	r0, r5
   15338:	bcc	1534c <fwrite_success_callback@@Base+0xb00>
   1533c:	mov	r0, r6
   15340:	mul	r1, r5, r4
   15344:	pop	{r4, r5, r6, lr}
   15348:	b	152cc <fwrite_success_callback@@Base+0xa80>
   1534c:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   15350:	push	{r3, r4, r5, r6, r7, lr}
   15354:	subs	r7, r0, #0
   15358:	mov	r5, r1
   1535c:	mov	r6, r2
   15360:	ldr	r4, [r1]
   15364:	beq	1539c <fwrite_success_callback@@Base+0xb50>
   15368:	movw	r0, #43690	; 0xaaaa
   1536c:	mov	r1, r2
   15370:	bfi	r0, r0, #16, #16
   15374:	bl	17a04 <fwrite_success_callback@@Base+0x31b8>
   15378:	cmp	r4, r0
   1537c:	addcc	r3, r4, #1
   15380:	addcc	r4, r4, r3, lsr #1
   15384:	bcs	153c0 <fwrite_success_callback@@Base+0xb74>
   15388:	str	r4, [r5]
   1538c:	mov	r0, r7
   15390:	mul	r1, r6, r4
   15394:	pop	{r3, r4, r5, r6, r7, lr}
   15398:	b	152cc <fwrite_success_callback@@Base+0xa80>
   1539c:	cmp	r4, #0
   153a0:	bne	15388 <fwrite_success_callback@@Base+0xb3c>
   153a4:	mov	r0, #64	; 0x40
   153a8:	mov	r1, r2
   153ac:	bl	17a04 <fwrite_success_callback@@Base+0x31b8>
   153b0:	cmp	r0, #0
   153b4:	movne	r4, r0
   153b8:	addeq	r4, r0, #1
   153bc:	b	15388 <fwrite_success_callback@@Base+0xb3c>
   153c0:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   153c4:	cmp	r0, #0
   153c8:	push	{r3, lr}
   153cc:	ldr	r3, [r1]
   153d0:	beq	153fc <fwrite_success_callback@@Base+0xbb0>
   153d4:	movw	r2, #43689	; 0xaaa9
   153d8:	movt	r2, #43690	; 0xaaaa
   153dc:	cmp	r3, r2
   153e0:	addls	r2, r3, #1
   153e4:	addls	r3, r3, r2, lsr #1
   153e8:	bhi	15414 <fwrite_success_callback@@Base+0xbc8>
   153ec:	str	r3, [r1]
   153f0:	mov	r1, r3
   153f4:	pop	{r3, lr}
   153f8:	b	152cc <fwrite_success_callback@@Base+0xa80>
   153fc:	cmp	r3, #0
   15400:	moveq	r3, #64	; 0x40
   15404:	str	r3, [r1]
   15408:	mov	r1, r3
   1540c:	pop	{r3, lr}
   15410:	b	152cc <fwrite_success_callback@@Base+0xa80>
   15414:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   15418:	push	{r4, lr}
   1541c:	mov	r4, r0
   15420:	bl	15274 <fwrite_success_callback@@Base+0xa28>
   15424:	mov	r2, r4
   15428:	mov	r1, #0
   1542c:	pop	{r4, lr}
   15430:	b	1122c <memset@plt>
   15434:	push	{r3, lr}
   15438:	bl	11040 <calloc@plt>
   1543c:	cmp	r0, #0
   15440:	popne	{r3, pc}
   15444:	bl	15488 <fwrite_success_callback@@Base+0xc3c>
   15448:	push	{r3, r4, r5, lr}
   1544c:	mov	r4, r1
   15450:	mov	r5, r0
   15454:	mov	r0, r1
   15458:	bl	15274 <fwrite_success_callback@@Base+0xa28>
   1545c:	mov	r1, r5
   15460:	mov	r2, r4
   15464:	pop	{r3, r4, r5, lr}
   15468:	b	110ac <memcpy@plt>
   1546c:	push	{r4, lr}
   15470:	mov	r4, r0
   15474:	bl	111f0 <strlen@plt>
   15478:	add	r1, r0, #1
   1547c:	mov	r0, r4
   15480:	pop	{r4, lr}
   15484:	b	15448 <fwrite_success_callback@@Base+0xbfc>
   15488:	ldr	r3, [pc, #64]	; 154d0 <fwrite_success_callback@@Base+0xc84>
   1548c:	mov	r2, #5
   15490:	ldr	ip, [pc, #60]	; 154d4 <fwrite_success_callback@@Base+0xc88>
   15494:	mov	r0, #0
   15498:	add	r3, pc, r3
   1549c:	ldr	r1, [pc, #52]	; 154d8 <fwrite_success_callback@@Base+0xc8c>
   154a0:	push	{r4, lr}
   154a4:	add	r1, pc, r1
   154a8:	ldr	r3, [r3, ip]
   154ac:	ldr	r4, [r3]
   154b0:	bl	110dc <dcgettext@plt>
   154b4:	ldr	r2, [pc, #32]	; 154dc <fwrite_success_callback@@Base+0xc90>
   154b8:	mov	r1, #0
   154bc:	add	r2, pc, r2
   154c0:	mov	r3, r0
   154c4:	mov	r0, r4
   154c8:	bl	11160 <error@plt>
   154cc:	bl	112ec <abort@plt>
   154d0:	andeq	r3, r1, r0, ror #22
   154d4:	andeq	r0, r0, r0, lsr #2
   154d8:	andeq	r3, r0, ip, asr #9
   154dc:	andeq	r3, r0, r0, lsr #32
   154e0:	push	{r3, r4, r5, r6, r7, lr}
   154e4:	bl	1579c <fwrite_success_callback@@Base+0xf50>
   154e8:	ldr	r4, [pc, #100]	; 15554 <fwrite_success_callback@@Base+0xd08>
   154ec:	add	r4, pc, r4
   154f0:	subs	r5, r0, #0
   154f4:	blt	15500 <fwrite_success_callback@@Base+0xcb4>
   154f8:	mov	r0, r5
   154fc:	pop	{r3, r4, r5, r6, r7, pc}
   15500:	ldr	r3, [pc, #80]	; 15558 <fwrite_success_callback@@Base+0xd0c>
   15504:	ldr	r3, [r4, r3]
   15508:	ldr	r0, [r3]
   1550c:	bl	11094 <ferror@plt>
   15510:	subs	r6, r0, #0
   15514:	bne	154f8 <fwrite_success_callback@@Base+0xcac>
   15518:	ldr	r3, [pc, #60]	; 1555c <fwrite_success_callback@@Base+0xd10>
   1551c:	ldr	r3, [r4, r3]
   15520:	ldr	r7, [r3]
   15524:	bl	11214 <__errno_location@plt>
   15528:	ldr	r1, [pc, #48]	; 15560 <fwrite_success_callback@@Base+0xd14>
   1552c:	mov	r2, #5
   15530:	add	r1, pc, r1
   15534:	ldr	r4, [r0]
   15538:	mov	r0, r6
   1553c:	bl	110dc <dcgettext@plt>
   15540:	mov	r1, r4
   15544:	mov	r2, r0
   15548:	mov	r0, r7
   1554c:	bl	11160 <error@plt>
   15550:	b	154f8 <fwrite_success_callback@@Base+0xcac>
   15554:	andeq	r3, r1, ip, lsl #22
   15558:	andeq	r0, r0, ip, lsl r1
   1555c:	andeq	r0, r0, r0, lsr #2
   15560:	andeq	r3, r0, r4, asr r4
   15564:	push	{r0, r1, r2, r3}
   15568:	ldr	r2, [pc, #80]	; 155c0 <fwrite_success_callback@@Base+0xd74>
   1556c:	ldr	ip, [pc, #80]	; 155c4 <fwrite_success_callback@@Base+0xd78>
   15570:	add	r2, pc, r2
   15574:	push	{r4, lr}
   15578:	sub	sp, sp, #8
   1557c:	ldr	r4, [r2, ip]
   15580:	add	r3, sp, #20
   15584:	str	r3, [sp]
   15588:	mov	r1, r3
   1558c:	ldr	r0, [sp, #16]
   15590:	ldr	r3, [r4]
   15594:	str	r3, [sp, #4]
   15598:	bl	154e0 <fwrite_success_callback@@Base+0xc94>
   1559c:	ldr	r2, [sp, #4]
   155a0:	ldr	r3, [r4]
   155a4:	cmp	r2, r3
   155a8:	bne	155bc <fwrite_success_callback@@Base+0xd70>
   155ac:	add	sp, sp, #8
   155b0:	pop	{r4, lr}
   155b4:	add	sp, sp, #16
   155b8:	bx	lr
   155bc:	bl	110e8 <__stack_chk_fail@plt>
   155c0:	andeq	r3, r1, r8, lsl #21
   155c4:	andeq	r0, r0, r4, lsl #2
   155c8:	push	{r3, r4, r5, r6, r7, lr}
   155cc:	mov	r6, r0
   155d0:	bl	156a8 <fwrite_success_callback@@Base+0xe5c>
   155d4:	ldr	r4, [pc, #92]	; 15638 <fwrite_success_callback@@Base+0xdec>
   155d8:	add	r4, pc, r4
   155dc:	subs	r5, r0, #0
   155e0:	blt	155ec <fwrite_success_callback@@Base+0xda0>
   155e4:	mov	r0, r5
   155e8:	pop	{r3, r4, r5, r6, r7, pc}
   155ec:	mov	r0, r6
   155f0:	bl	11094 <ferror@plt>
   155f4:	subs	r6, r0, #0
   155f8:	bne	155e4 <fwrite_success_callback@@Base+0xd98>
   155fc:	ldr	r3, [pc, #56]	; 1563c <fwrite_success_callback@@Base+0xdf0>
   15600:	ldr	r3, [r4, r3]
   15604:	ldr	r7, [r3]
   15608:	bl	11214 <__errno_location@plt>
   1560c:	ldr	r1, [pc, #44]	; 15640 <fwrite_success_callback@@Base+0xdf4>
   15610:	mov	r2, #5
   15614:	add	r1, pc, r1
   15618:	ldr	r4, [r0]
   1561c:	mov	r0, r6
   15620:	bl	110dc <dcgettext@plt>
   15624:	mov	r1, r4
   15628:	mov	r2, r0
   1562c:	mov	r0, r7
   15630:	bl	11160 <error@plt>
   15634:	b	155e4 <fwrite_success_callback@@Base+0xd98>
   15638:	andeq	r3, r1, r0, lsr #20
   1563c:	andeq	r0, r0, r0, lsr #2
   15640:	andeq	r3, r0, r0, ror r3
   15644:	ldr	ip, [pc, #84]	; 156a0 <fwrite_success_callback@@Base+0xe54>
   15648:	push	{r1, r2, r3}
   1564c:	add	ip, pc, ip
   15650:	push	{r4, lr}
   15654:	sub	sp, sp, #12
   15658:	ldr	lr, [pc, #68]	; 156a4 <fwrite_success_callback@@Base+0xe58>
   1565c:	add	r3, sp, #24
   15660:	ldr	r1, [sp, #20]
   15664:	mov	r2, r3
   15668:	ldr	r4, [ip, lr]
   1566c:	str	r3, [sp]
   15670:	ldr	r3, [r4]
   15674:	str	r3, [sp, #4]
   15678:	bl	155c8 <fwrite_success_callback@@Base+0xd7c>
   1567c:	ldr	r2, [sp, #4]
   15680:	ldr	r3, [r4]
   15684:	cmp	r2, r3
   15688:	bne	1569c <fwrite_success_callback@@Base+0xe50>
   1568c:	add	sp, sp, #12
   15690:	pop	{r4, lr}
   15694:	add	sp, sp, #12
   15698:	bx	lr
   1569c:	bl	110e8 <__stack_chk_fail@plt>
   156a0:	andeq	r3, r1, ip, lsr #19
   156a4:	andeq	r0, r0, r4, lsl #2
   156a8:	ldr	ip, [pc, #228]	; 15794 <fwrite_success_callback@@Base+0xf48>
   156ac:	mov	r3, r2
   156b0:	push	{r4, r5, r6, r7, r8, lr}
   156b4:	add	ip, pc, ip
   156b8:	ldr	r4, [pc, #216]	; 15798 <fwrite_success_callback@@Base+0xf4c>
   156bc:	sub	sp, sp, #2000	; 0x7d0
   156c0:	sub	sp, sp, #8
   156c4:	mov	r2, r1
   156c8:	add	r6, sp, #4
   156cc:	mov	r8, r0
   156d0:	ldr	r5, [ip, r4]
   156d4:	mov	ip, #2000	; 0x7d0
   156d8:	str	ip, [sp]
   156dc:	mov	r1, sp
   156e0:	mov	r0, r6
   156e4:	ldr	ip, [r5]
   156e8:	str	ip, [sp, #2004]	; 0x7d4
   156ec:	bl	15e1c <fwrite_success_callback@@Base+0x15d0>
   156f0:	ldr	r4, [sp]
   156f4:	subs	r7, r0, #0
   156f8:	beq	15780 <fwrite_success_callback@@Base+0xf34>
   156fc:	mov	r1, #1
   15700:	mov	r2, r4
   15704:	mov	r3, r8
   15708:	bl	11118 <fwrite@plt>
   1570c:	cmp	r4, r0
   15710:	bhi	1574c <fwrite_success_callback@@Base+0xf00>
   15714:	cmp	r7, r6
   15718:	beq	15724 <fwrite_success_callback@@Base+0xed8>
   1571c:	mov	r0, r7
   15720:	bl	11088 <free@plt>
   15724:	cmp	r4, #0
   15728:	movge	r0, r4
   1572c:	blt	15774 <fwrite_success_callback@@Base+0xf28>
   15730:	ldr	r2, [sp, #2004]	; 0x7d4
   15734:	ldr	r3, [r5]
   15738:	cmp	r2, r3
   1573c:	bne	15790 <fwrite_success_callback@@Base+0xf44>
   15740:	add	sp, sp, #2000	; 0x7d0
   15744:	add	sp, sp, #8
   15748:	pop	{r4, r5, r6, r7, r8, pc}
   1574c:	cmp	r7, r6
   15750:	beq	15788 <fwrite_success_callback@@Base+0xf3c>
   15754:	bl	11214 <__errno_location@plt>
   15758:	ldr	r6, [r0]
   1575c:	mov	r4, r0
   15760:	mov	r0, r7
   15764:	bl	11088 <free@plt>
   15768:	mvn	r0, #0
   1576c:	str	r6, [r4]
   15770:	b	15730 <fwrite_success_callback@@Base+0xee4>
   15774:	bl	11214 <__errno_location@plt>
   15778:	mov	r3, #75	; 0x4b
   1577c:	str	r3, [r0]
   15780:	mov	r0, r8
   15784:	bl	15e0c <fwrite_success_callback@@Base+0x15c0>
   15788:	mvn	r0, #0
   1578c:	b	15730 <fwrite_success_callback@@Base+0xee4>
   15790:	bl	110e8 <__stack_chk_fail@plt>
   15794:	andeq	r3, r1, r4, asr #18
   15798:	andeq	r0, r0, r4, lsl #2
   1579c:	ldr	r3, [pc, #24]	; 157bc <fwrite_success_callback@@Base+0xf70>
   157a0:	mov	r2, r1
   157a4:	ldr	ip, [pc, #20]	; 157c0 <fwrite_success_callback@@Base+0xf74>
   157a8:	mov	r1, r0
   157ac:	add	r3, pc, r3
   157b0:	ldr	r3, [r3, ip]
   157b4:	ldr	r0, [r3]
   157b8:	b	156a8 <fwrite_success_callback@@Base+0xe5c>
   157bc:	andeq	r3, r1, ip, asr #16
   157c0:	andeq	r0, r0, ip, lsl r1
   157c4:	push	{r4, r5, r6, lr}
   157c8:	mov	r4, r0
   157cc:	bl	11148 <__fpending@plt>
   157d0:	mov	r6, r0
   157d4:	mov	r0, r4
   157d8:	ldr	r4, [r4]
   157dc:	bl	15c64 <fwrite_success_callback@@Base+0x1418>
   157e0:	and	r4, r4, #32
   157e4:	adds	r5, r0, #0
   157e8:	movne	r5, #1
   157ec:	cmp	r4, #0
   157f0:	bne	15810 <fwrite_success_callback@@Base+0xfc4>
   157f4:	cmp	r5, #0
   157f8:	beq	15808 <fwrite_success_callback@@Base+0xfbc>
   157fc:	cmp	r6, #0
   15800:	beq	1582c <fwrite_success_callback@@Base+0xfe0>
   15804:	mvn	r4, #0
   15808:	mov	r0, r4
   1580c:	pop	{r4, r5, r6, pc}
   15810:	cmp	r5, #0
   15814:	bne	15804 <fwrite_success_callback@@Base+0xfb8>
   15818:	bl	11214 <__errno_location@plt>
   1581c:	mvn	r4, #0
   15820:	str	r5, [r0]
   15824:	mov	r0, r4
   15828:	pop	{r4, r5, r6, pc}
   1582c:	bl	11214 <__errno_location@plt>
   15830:	ldr	r4, [r0]
   15834:	subs	r4, r4, #9
   15838:	mvnne	r4, #0
   1583c:	mov	r0, r4
   15840:	pop	{r4, r5, r6, pc}
   15844:	ldr	r3, [pc, #984]	; 15c24 <fwrite_success_callback@@Base+0x13d8>
   15848:	mov	r0, #14
   1584c:	ldr	r2, [pc, #980]	; 15c28 <fwrite_success_callback@@Base+0x13dc>
   15850:	add	r3, pc, r3
   15854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15858:	sub	sp, sp, #132	; 0x84
   1585c:	ldr	r6, [r3, r2]
   15860:	ldr	r3, [r6]
   15864:	str	r3, [sp, #124]	; 0x7c
   15868:	bl	112b0 <nl_langinfo@plt>
   1586c:	subs	r5, r0, #0
   15870:	beq	15924 <fwrite_success_callback@@Base+0x10d8>
   15874:	ldr	r3, [pc, #944]	; 15c2c <fwrite_success_callback@@Base+0x13e0>
   15878:	ldr	r4, [pc, r3]
   1587c:	cmp	r4, #0
   15880:	beq	15930 <fwrite_success_callback@@Base+0x10e4>
   15884:	ldrb	r7, [r4]
   15888:	cmp	r7, #0
   1588c:	bne	158c0 <fwrite_success_callback@@Base+0x1074>
   15890:	b	158f8 <fwrite_success_callback@@Base+0x10ac>
   15894:	mov	r0, r4
   15898:	bl	111f0 <strlen@plt>
   1589c:	add	r0, r0, #1
   158a0:	add	r7, r4, r0
   158a4:	mov	r0, r7
   158a8:	bl	111f0 <strlen@plt>
   158ac:	add	r0, r0, #1
   158b0:	add	r4, r7, r0
   158b4:	ldrb	r7, [r7, r0]
   158b8:	cmp	r7, #0
   158bc:	beq	158f8 <fwrite_success_callback@@Base+0x10ac>
   158c0:	mov	r0, r5
   158c4:	mov	r1, r4
   158c8:	bl	11070 <strcmp@plt>
   158cc:	cmp	r0, #0
   158d0:	beq	158e8 <fwrite_success_callback@@Base+0x109c>
   158d4:	cmp	r7, #42	; 0x2a
   158d8:	bne	15894 <fwrite_success_callback@@Base+0x1048>
   158dc:	ldrb	r3, [r4, #1]
   158e0:	cmp	r3, #0
   158e4:	bne	15894 <fwrite_success_callback@@Base+0x1048>
   158e8:	mov	r0, r4
   158ec:	bl	111f0 <strlen@plt>
   158f0:	add	r0, r0, #1
   158f4:	add	r5, r4, r0
   158f8:	ldrb	r3, [r5]
   158fc:	cmp	r3, #0
   15900:	ldreq	r5, [pc, #808]	; 15c30 <fwrite_success_callback@@Base+0x13e4>
   15904:	addeq	r5, pc, r5
   15908:	ldr	r2, [sp, #124]	; 0x7c
   1590c:	mov	r0, r5
   15910:	ldr	r3, [r6]
   15914:	cmp	r2, r3
   15918:	bne	15bf8 <fwrite_success_callback@@Base+0x13ac>
   1591c:	add	sp, sp, #132	; 0x84
   15920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15924:	ldr	r5, [pc, #776]	; 15c34 <fwrite_success_callback@@Base+0x13e8>
   15928:	add	r5, pc, r5
   1592c:	b	15874 <fwrite_success_callback@@Base+0x1028>
   15930:	ldr	r0, [pc, #768]	; 15c38 <fwrite_success_callback@@Base+0x13ec>
   15934:	add	r0, pc, r0
   15938:	bl	11178 <getenv@plt>
   1593c:	subs	r8, r0, #0
   15940:	beq	15bd0 <fwrite_success_callback@@Base+0x1384>
   15944:	ldrb	r3, [r8]
   15948:	cmp	r3, #0
   1594c:	beq	15b64 <fwrite_success_callback@@Base+0x1318>
   15950:	bl	111f0 <strlen@plt>
   15954:	subs	sl, r0, #0
   15958:	subne	r3, sl, #1
   1595c:	bne	15b74 <fwrite_success_callback@@Base+0x1328>
   15960:	mov	r9, #0
   15964:	mov	fp, r9
   15968:	add	r9, sl, r9
   1596c:	add	r0, r9, #14
   15970:	bl	11190 <malloc@plt>
   15974:	subs	r7, r0, #0
   15978:	beq	15bc4 <fwrite_success_callback@@Base+0x1378>
   1597c:	mov	r1, r8
   15980:	mov	r2, sl
   15984:	bl	110ac <memcpy@plt>
   15988:	cmp	fp, #0
   1598c:	add	ip, r7, r9
   15990:	movne	r3, #47	; 0x2f
   15994:	strbne	r3, [r7, sl]
   15998:	ldr	r3, [pc, #668]	; 15c3c <fwrite_success_callback@@Base+0x13f0>
   1599c:	add	r3, pc, r3
   159a0:	ldm	r3!, {r0, r1, r2}
   159a4:	ldrh	r3, [r3]
   159a8:	str	r0, [r7, r9]
   159ac:	mov	r0, r7
   159b0:	str	r1, [ip, #4]
   159b4:	mov	r1, #32768	; 0x8000
   159b8:	strh	r3, [ip, #12]
   159bc:	str	r2, [ip, #8]
   159c0:	bl	1116c <open64@plt>
   159c4:	subs	r8, r0, #0
   159c8:	blt	15b8c <fwrite_success_callback@@Base+0x1340>
   159cc:	ldr	r1, [pc, #620]	; 15c40 <fwrite_success_callback@@Base+0x13f4>
   159d0:	add	r1, pc, r1
   159d4:	bl	11034 <fdopen@plt>
   159d8:	subs	fp, r0, #0
   159dc:	beq	15be4 <fwrite_success_callback@@Base+0x1398>
   159e0:	ldr	r0, [pc, #604]	; 15c44 <fwrite_success_callback@@Base+0x13f8>
   159e4:	add	sl, sp, #20
   159e8:	add	r9, sp, #72	; 0x48
   159ec:	mov	r8, #0
   159f0:	add	r0, pc, r0
   159f4:	str	r0, [sp, #12]
   159f8:	ldr	r3, [fp, #4]
   159fc:	ldr	r2, [fp, #8]
   15a00:	cmp	r3, r2
   15a04:	bcs	15af0 <fwrite_success_callback@@Base+0x12a4>
   15a08:	add	r2, r3, #1
   15a0c:	str	r2, [fp, #4]
   15a10:	ldrb	r0, [r3]
   15a14:	cmp	r0, #32
   15a18:	beq	159f8 <fwrite_success_callback@@Base+0x11ac>
   15a1c:	sub	r3, r0, #9
   15a20:	cmp	r3, #1
   15a24:	bls	159f8 <fwrite_success_callback@@Base+0x11ac>
   15a28:	cmp	r0, #35	; 0x23
   15a2c:	beq	15b04 <fwrite_success_callback@@Base+0x12b8>
   15a30:	mov	r1, fp
   15a34:	bl	11208 <ungetc@plt>
   15a38:	mov	r0, fp
   15a3c:	ldr	r1, [sp, #12]
   15a40:	mov	r2, sl
   15a44:	mov	r3, r9
   15a48:	bl	11238 <fscanf@plt>
   15a4c:	cmp	r0, #1
   15a50:	ble	15b34 <fwrite_success_callback@@Base+0x12e8>
   15a54:	mov	r0, sl
   15a58:	bl	111f0 <strlen@plt>
   15a5c:	str	r0, [sp, #8]
   15a60:	mov	r0, r9
   15a64:	bl	111f0 <strlen@plt>
   15a68:	cmp	r8, #0
   15a6c:	mov	r2, r0
   15a70:	bne	15b98 <fwrite_success_callback@@Base+0x134c>
   15a74:	ldr	r3, [sp, #8]
   15a78:	str	r2, [sp]
   15a7c:	add	r8, r0, r3
   15a80:	add	r0, r8, #3
   15a84:	add	r8, r8, #2
   15a88:	bl	11190 <malloc@plt>
   15a8c:	ldr	r2, [sp]
   15a90:	mov	r3, r0
   15a94:	cmp	r3, #0
   15a98:	beq	15bfc <fwrite_success_callback@@Base+0x13b0>
   15a9c:	ldr	r0, [sp, #8]
   15aa0:	movw	r1, #65534	; 0xfffe
   15aa4:	movt	r1, #65535	; 0xffff
   15aa8:	rsb	r2, r2, r8
   15aac:	rsb	r1, r0, r1
   15ab0:	stm	sp, {r2, r3}
   15ab4:	add	r0, r1, r2
   15ab8:	mov	r1, sl
   15abc:	add	r0, r3, r0
   15ac0:	mov	r4, r3
   15ac4:	bl	1113c <strcpy@plt>
   15ac8:	ldr	r2, [sp]
   15acc:	ldr	r3, [sp, #4]
   15ad0:	mov	r1, r9
   15ad4:	sub	r0, r2, #1
   15ad8:	add	r0, r3, r0
   15adc:	bl	1113c <strcpy@plt>
   15ae0:	ldr	r3, [fp, #4]
   15ae4:	ldr	r2, [fp, #8]
   15ae8:	cmp	r3, r2
   15aec:	bcc	15a08 <fwrite_success_callback@@Base+0x11bc>
   15af0:	mov	r0, fp
   15af4:	bl	11280 <__uflow@plt>
   15af8:	cmn	r0, #1
   15afc:	beq	15b34 <fwrite_success_callback@@Base+0x12e8>
   15b00:	b	15a14 <fwrite_success_callback@@Base+0x11c8>
   15b04:	ldr	r3, [fp, #4]
   15b08:	ldr	r2, [fp, #8]
   15b0c:	cmp	r3, r2
   15b10:	bcs	15c18 <fwrite_success_callback@@Base+0x13cc>
   15b14:	add	r2, r3, #1
   15b18:	str	r2, [fp, #4]
   15b1c:	ldrb	r0, [r3]
   15b20:	cmp	r0, #10
   15b24:	cmnne	r0, #1
   15b28:	bne	15b04 <fwrite_success_callback@@Base+0x12b8>
   15b2c:	cmn	r0, #1
   15b30:	bne	159f8 <fwrite_success_callback@@Base+0x11ac>
   15b34:	mov	r0, fp
   15b38:	bl	15c64 <fwrite_success_callback@@Base+0x1418>
   15b3c:	cmp	r8, #0
   15b40:	beq	15b8c <fwrite_success_callback@@Base+0x1340>
   15b44:	mov	r3, #0
   15b48:	strb	r3, [r4, r8]
   15b4c:	mov	r0, r7
   15b50:	bl	11088 <free@plt>
   15b54:	ldr	r3, [pc, #236]	; 15c48 <fwrite_success_callback@@Base+0x13fc>
   15b58:	add	r3, pc, r3
   15b5c:	str	r4, [r3]
   15b60:	b	15884 <fwrite_success_callback@@Base+0x1038>
   15b64:	ldr	r8, [pc, #224]	; 15c4c <fwrite_success_callback@@Base+0x1400>
   15b68:	mov	r3, #7
   15b6c:	mov	sl, #8
   15b70:	add	r8, pc, r8
   15b74:	ldrb	r3, [r8, r3]
   15b78:	cmp	r3, #47	; 0x2f
   15b7c:	movne	r9, #1
   15b80:	movne	fp, r9
   15b84:	bne	15968 <fwrite_success_callback@@Base+0x111c>
   15b88:	b	15960 <fwrite_success_callback@@Base+0x1114>
   15b8c:	ldr	r4, [pc, #188]	; 15c50 <fwrite_success_callback@@Base+0x1404>
   15b90:	add	r4, pc, r4
   15b94:	b	15b4c <fwrite_success_callback@@Base+0x1300>
   15b98:	ldr	r0, [sp, #8]
   15b9c:	str	r2, [sp]
   15ba0:	add	r3, r0, r2
   15ba4:	mov	r0, r4
   15ba8:	add	r8, r3, r8
   15bac:	add	r1, r8, #3
   15bb0:	add	r8, r8, #2
   15bb4:	bl	110f4 <realloc@plt>
   15bb8:	ldr	r2, [sp]
   15bbc:	mov	r3, r0
   15bc0:	b	15a94 <fwrite_success_callback@@Base+0x1248>
   15bc4:	ldr	r4, [pc, #136]	; 15c54 <fwrite_success_callback@@Base+0x1408>
   15bc8:	add	r4, pc, r4
   15bcc:	b	15b54 <fwrite_success_callback@@Base+0x1308>
   15bd0:	ldr	r8, [pc, #128]	; 15c58 <fwrite_success_callback@@Base+0x140c>
   15bd4:	mov	r3, #7
   15bd8:	mov	sl, #8
   15bdc:	add	r8, pc, r8
   15be0:	b	15b74 <fwrite_success_callback@@Base+0x1328>
   15be4:	ldr	r4, [pc, #112]	; 15c5c <fwrite_success_callback@@Base+0x1410>
   15be8:	mov	r0, r8
   15bec:	add	r4, pc, r4
   15bf0:	bl	112f8 <close@plt>
   15bf4:	b	15b4c <fwrite_success_callback@@Base+0x1300>
   15bf8:	bl	110e8 <__stack_chk_fail@plt>
   15bfc:	mov	r0, r4
   15c00:	ldr	r4, [pc, #88]	; 15c60 <fwrite_success_callback@@Base+0x1414>
   15c04:	bl	11088 <free@plt>
   15c08:	mov	r0, fp
   15c0c:	add	r4, pc, r4
   15c10:	bl	15c64 <fwrite_success_callback@@Base+0x1418>
   15c14:	b	15b4c <fwrite_success_callback@@Base+0x1300>
   15c18:	mov	r0, fp
   15c1c:	bl	11280 <__uflow@plt>
   15c20:	b	15b20 <fwrite_success_callback@@Base+0x12d4>
   15c24:	andeq	r3, r1, r8, lsr #15
   15c28:	andeq	r0, r0, r4, lsl #2
   15c2c:	andeq	r3, r1, ip, asr sl
   15c30:	andeq	r2, r0, ip, lsl sp
   15c34:	andeq	r2, r0, r8, lsl #11
   15c38:	andeq	r3, r0, ip, ror r0
   15c3c:	andeq	r3, r0, r4, lsr #32
   15c40:	andeq	r3, r0, r0
   15c44:	andeq	r2, r0, r4, ror #31
   15c48:	andeq	r3, r1, ip, ror r7
   15c4c:	andeq	r2, r0, r4, lsr lr
   15c50:	andeq	r2, r0, r0, lsr #6
   15c54:	andeq	r2, r0, r8, ror #5
   15c58:	andeq	r2, r0, r8, asr #27
   15c5c:	andeq	r2, r0, r4, asr #5
   15c60:	andeq	r2, r0, r4, lsr #5
   15c64:	push	{r4, r5, r6, lr}
   15c68:	sub	sp, sp, #8
   15c6c:	mov	r4, r0
   15c70:	bl	11250 <fileno@plt>
   15c74:	cmp	r0, #0
   15c78:	mov	r0, r4
   15c7c:	blt	15cf8 <fwrite_success_callback@@Base+0x14ac>
   15c80:	bl	111b4 <__freading@plt>
   15c84:	cmp	r0, #0
   15c88:	bne	15cc4 <fwrite_success_callback@@Base+0x1478>
   15c8c:	mov	r0, r4
   15c90:	bl	15d04 <fwrite_success_callback@@Base+0x14b8>
   15c94:	cmp	r0, #0
   15c98:	beq	15cf4 <fwrite_success_callback@@Base+0x14a8>
   15c9c:	bl	11214 <__errno_location@plt>
   15ca0:	ldr	r6, [r0]
   15ca4:	mov	r5, r0
   15ca8:	mov	r0, r4
   15cac:	bl	11268 <fclose@plt>
   15cb0:	cmp	r6, #0
   15cb4:	mvnne	r0, #0
   15cb8:	strne	r6, [r5]
   15cbc:	add	sp, sp, #8
   15cc0:	pop	{r4, r5, r6, pc}
   15cc4:	mov	r0, r4
   15cc8:	bl	11250 <fileno@plt>
   15ccc:	mov	r1, #1
   15cd0:	mov	r2, #0
   15cd4:	mov	r3, #0
   15cd8:	str	r1, [sp]
   15cdc:	bl	11124 <lseek64@plt>
   15ce0:	mvn	r2, #0
   15ce4:	mvn	r3, #0
   15ce8:	cmp	r1, r3
   15cec:	cmpeq	r0, r2
   15cf0:	bne	15c8c <fwrite_success_callback@@Base+0x1440>
   15cf4:	mov	r0, r4
   15cf8:	add	sp, sp, #8
   15cfc:	pop	{r4, r5, r6, lr}
   15d00:	b	11268 <fclose@plt>
   15d04:	push	{r4, lr}
   15d08:	subs	r4, r0, #0
   15d0c:	sub	sp, sp, #8
   15d10:	beq	15d20 <fwrite_success_callback@@Base+0x14d4>
   15d14:	bl	111b4 <__freading@plt>
   15d18:	cmp	r0, #0
   15d1c:	bne	15d30 <fwrite_success_callback@@Base+0x14e4>
   15d20:	mov	r0, r4
   15d24:	add	sp, sp, #8
   15d28:	pop	{r4, lr}
   15d2c:	b	1107c <fflush@plt>
   15d30:	ldr	r3, [r4]
   15d34:	tst	r3, #256	; 0x100
   15d38:	beq	15d20 <fwrite_success_callback@@Base+0x14d4>
   15d3c:	mov	r3, #1
   15d40:	mov	r0, r4
   15d44:	str	r3, [sp]
   15d48:	mov	r2, #0
   15d4c:	mov	r3, #0
   15d50:	bl	15d64 <fwrite_success_callback@@Base+0x1518>
   15d54:	mov	r0, r4
   15d58:	add	sp, sp, #8
   15d5c:	pop	{r4, lr}
   15d60:	b	1107c <fflush@plt>
   15d64:	push	{r4, r5, r6, r7, lr}
   15d68:	sub	sp, sp, #20
   15d6c:	ldmib	r0, {r1, ip}
   15d70:	mov	r6, r0
   15d74:	ldr	r4, [sp, #40]	; 0x28
   15d78:	cmp	ip, r1
   15d7c:	beq	15d94 <fwrite_success_callback@@Base+0x1548>
   15d80:	str	r4, [sp, #40]	; 0x28
   15d84:	mov	r0, r6
   15d88:	add	sp, sp, #20
   15d8c:	pop	{r4, r5, r6, r7, lr}
   15d90:	b	11274 <fseeko64@plt>
   15d94:	ldr	ip, [r0, #20]
   15d98:	ldr	r1, [r0, #16]
   15d9c:	cmp	ip, r1
   15da0:	bne	15d80 <fwrite_success_callback@@Base+0x1534>
   15da4:	ldr	r7, [r0, #36]	; 0x24
   15da8:	cmp	r7, #0
   15dac:	bne	15d80 <fwrite_success_callback@@Base+0x1534>
   15db0:	str	r2, [sp, #12]
   15db4:	mvn	r5, #0
   15db8:	str	r3, [sp, #8]
   15dbc:	bl	11250 <fileno@plt>
   15dc0:	str	r4, [sp]
   15dc4:	mvn	r4, #0
   15dc8:	ldr	r2, [sp, #12]
   15dcc:	ldr	r3, [sp, #8]
   15dd0:	bl	11124 <lseek64@plt>
   15dd4:	mov	r2, r0
   15dd8:	mov	r3, r1
   15ddc:	cmp	r3, r5
   15de0:	cmpeq	r2, r4
   15de4:	beq	15e04 <fwrite_success_callback@@Base+0x15b8>
   15de8:	ldr	r1, [r6]
   15dec:	mov	r0, r7
   15df0:	strd	r2, [r6, #80]	; 0x50
   15df4:	bic	r3, r1, #16
   15df8:	str	r3, [r6]
   15dfc:	add	sp, sp, #20
   15e00:	pop	{r4, r5, r6, r7, pc}
   15e04:	mvn	r0, #0
   15e08:	b	15dfc <fwrite_success_callback@@Base+0x15b0>
   15e0c:	ldr	r3, [r0]
   15e10:	orr	r3, r3, #32
   15e14:	str	r3, [r0]
   15e18:	bx	lr
   15e1c:	ldr	ip, [pc, #3636]	; 16c58 <fwrite_success_callback@@Base+0x240c>
   15e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e24:	add	fp, sp, #32
   15e28:	ldr	lr, [pc, #3628]	; 16c5c <fwrite_success_callback@@Base+0x2410>
   15e2c:	sub	sp, sp, #564	; 0x234
   15e30:	add	ip, pc, ip
   15e34:	str	r0, [fp, #-504]	; 0xfffffe08
   15e38:	sub	r4, fp, #484	; 0x1e4
   15e3c:	str	r1, [fp, #-536]	; 0xfffffde8
   15e40:	mov	r0, r2
   15e44:	ldr	lr, [ip, lr]
   15e48:	mov	r5, r2
   15e4c:	sub	r1, fp, #364	; 0x16c
   15e50:	mov	r2, r4
   15e54:	mov	r6, r3
   15e58:	ldr	ip, [lr]
   15e5c:	str	lr, [fp, #-528]	; 0xfffffdf0
   15e60:	str	ip, [fp, #-40]	; 0xffffffd8
   15e64:	bl	16db0 <fwrite_success_callback@@Base+0x2564>
   15e68:	cmp	r0, #0
   15e6c:	blt	1695c <fwrite_success_callback@@Base+0x2110>
   15e70:	mov	r0, r6
   15e74:	mov	r1, r4
   15e78:	bl	16c60 <fwrite_success_callback@@Base+0x2414>
   15e7c:	cmp	r0, #0
   15e80:	blt	16a1c <fwrite_success_callback@@Base+0x21d0>
   15e84:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   15e88:	ldr	r2, [fp, #-352]	; 0xfffffea0
   15e8c:	add	r3, r3, #7
   15e90:	cmp	r3, #6
   15e94:	mvnls	r3, #0
   15e98:	adds	r3, r3, r2
   15e9c:	bcs	161b8 <fwrite_success_callback@@Base+0x196c>
   15ea0:	adds	r0, r3, #6
   15ea4:	bcs	161b8 <fwrite_success_callback@@Base+0x196c>
   15ea8:	cmp	r0, #4000	; 0xfa0
   15eac:	bcs	16900 <fwrite_success_callback@@Base+0x20b4>
   15eb0:	add	r3, r3, #20
   15eb4:	mov	r1, #0
   15eb8:	bic	r3, r3, #7
   15ebc:	str	r1, [fp, #-548]	; 0xfffffddc
   15ec0:	sub	sp, sp, r3
   15ec4:	add	r2, sp, #32
   15ec8:	str	r2, [fp, #-512]	; 0xfffffe00
   15ecc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15ed0:	sub	r2, fp, #496	; 0x1f0
   15ed4:	str	r2, [fp, #-532]	; 0xfffffdec
   15ed8:	mov	ip, #0
   15edc:	cmp	r3, #0
   15ee0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   15ee4:	ldr	r2, [fp, #-504]	; 0xfffffe08
   15ee8:	mov	r6, ip
   15eec:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   15ef0:	add	r7, r3, #44	; 0x2c
   15ef4:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   15ef8:	str	ip, [fp, #-520]	; 0xfffffdf8
   15efc:	ldrne	r4, [r1]
   15f00:	ldr	sl, [r7, #-44]	; 0xffffffd4
   15f04:	sub	r3, r7, #44	; 0x2c
   15f08:	str	r3, [fp, #-540]	; 0xfffffde4
   15f0c:	cmp	sl, r5
   15f10:	beq	167cc <fwrite_success_callback@@Base+0x1f80>
   15f14:	rsb	r3, r5, sl
   15f18:	adds	r9, r3, r6
   15f1c:	mvncs	r9, #0
   15f20:	cmp	r4, r9
   15f24:	bcs	1675c <fwrite_success_callback@@Base+0x1f10>
   15f28:	cmp	r4, #0
   15f2c:	beq	16628 <fwrite_success_callback@@Base+0x1ddc>
   15f30:	blt	16a58 <fwrite_success_callback@@Base+0x220c>
   15f34:	lsl	r4, r4, #1
   15f38:	cmp	r4, r9
   15f3c:	movcc	r4, r9
   15f40:	cmn	r4, #1
   15f44:	beq	16a58 <fwrite_success_callback@@Base+0x220c>
   15f48:	ldr	r1, [fp, #-504]	; 0xfffffe08
   15f4c:	subs	lr, r2, r1
   15f50:	rsbs	r8, lr, #0
   15f54:	adcs	r8, r8, lr
   15f58:	cmp	r2, r1
   15f5c:	cmpne	r2, #0
   15f60:	bne	16630 <fwrite_success_callback@@Base+0x1de4>
   15f64:	mov	r0, r4
   15f68:	str	r2, [fp, #-560]	; 0xfffffdd0
   15f6c:	str	r3, [fp, #-556]	; 0xfffffdd4
   15f70:	bl	11190 <malloc@plt>
   15f74:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15f78:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   15f7c:	mov	sl, r0
   15f80:	cmp	sl, #0
   15f84:	beq	16a58 <fwrite_success_callback@@Base+0x220c>
   15f88:	cmp	r6, #0
   15f8c:	moveq	r8, #0
   15f90:	andne	r8, r8, #1
   15f94:	cmp	r8, #0
   15f98:	bne	167b0 <fwrite_success_callback@@Base+0x1f64>
   15f9c:	add	r0, sl, r6
   15fa0:	mov	r1, r5
   15fa4:	mov	r2, r3
   15fa8:	bl	110ac <memcpy@plt>
   15fac:	ldr	r3, [fp, #-364]	; 0xfffffe94
   15fb0:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   15fb4:	cmp	r3, r2
   15fb8:	beq	16a6c <fwrite_success_callback@@Base+0x2220>
   15fbc:	ldrb	r3, [r7, #-8]
   15fc0:	cmp	r3, #37	; 0x25
   15fc4:	beq	16654 <fwrite_success_callback@@Base+0x1e08>
   15fc8:	ldr	r2, [r7, #-4]
   15fcc:	cmn	r2, #1
   15fd0:	beq	1693c <fwrite_success_callback@@Base+0x20f0>
   15fd4:	cmp	r3, #110	; 0x6e
   15fd8:	beq	16780 <fwrite_success_callback@@Base+0x1f34>
   15fdc:	ldr	r1, [fp, #-480]	; 0xfffffe20
   15fe0:	ldr	r3, [r7, #-36]	; 0xffffffdc
   15fe4:	ldr	r8, [r1, r2, lsl #4]
   15fe8:	tst	r3, #1
   15fec:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15ff0:	mov	r2, #37	; 0x25
   15ff4:	addeq	r5, r1, #1
   15ff8:	strb	r2, [r1]
   15ffc:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   16000:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   16004:	addne	r5, r2, #2
   16008:	movne	r2, #39	; 0x27
   1600c:	strbne	r2, [r1, #1]
   16010:	tst	r3, #2
   16014:	movne	r2, #45	; 0x2d
   16018:	strbne	r2, [r5]
   1601c:	addne	r5, r5, #1
   16020:	tst	r3, #4
   16024:	movne	r2, #43	; 0x2b
   16028:	strbne	r2, [r5]
   1602c:	addne	r5, r5, #1
   16030:	tst	r3, #8
   16034:	movne	r2, #32
   16038:	strbne	r2, [r5]
   1603c:	addne	r5, r5, #1
   16040:	tst	r3, #16
   16044:	movne	r2, #35	; 0x23
   16048:	strbne	r2, [r5]
   1604c:	addne	r5, r5, #1
   16050:	tst	r3, #64	; 0x40
   16054:	movne	r2, #73	; 0x49
   16058:	strbne	r2, [r5]
   1605c:	addne	r5, r5, #1
   16060:	tst	r3, #32
   16064:	movne	r3, #48	; 0x30
   16068:	strbne	r3, [r5]
   1606c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16070:	addne	r5, r5, #1
   16074:	ldr	r2, [r7, #-28]	; 0xffffffe4
   16078:	cmp	r1, r2
   1607c:	beq	16090 <fwrite_success_callback@@Base+0x1844>
   16080:	rsb	r2, r1, r2
   16084:	mov	r0, r5
   16088:	add	r5, r5, r2
   1608c:	bl	110ac <memcpy@plt>
   16090:	ldr	r1, [r7, #-20]	; 0xffffffec
   16094:	ldr	r2, [r7, #-16]
   16098:	cmp	r1, r2
   1609c:	beq	160b0 <fwrite_success_callback@@Base+0x1864>
   160a0:	rsb	r2, r1, r2
   160a4:	mov	r0, r5
   160a8:	add	r5, r5, r2
   160ac:	bl	110ac <memcpy@plt>
   160b0:	sub	r3, r8, #7
   160b4:	cmp	r3, #9
   160b8:	bhi	160e0 <fwrite_success_callback@@Base+0x1894>
   160bc:	mov	r2, #1
   160c0:	lsl	r3, r2, r3
   160c4:	movw	r2, #643	; 0x283
   160c8:	and	r2, r3, r2
   160cc:	cmp	r2, #0
   160d0:	beq	167d8 <fwrite_success_callback@@Base+0x1f8c>
   160d4:	mov	r3, #108	; 0x6c
   160d8:	add	r5, r5, #1
   160dc:	strb	r3, [r5, #-1]
   160e0:	ldrb	r3, [r7, #-8]
   160e4:	mov	r1, #0
   160e8:	strb	r1, [r5, #1]
   160ec:	strb	r3, [r5]
   160f0:	ldr	r3, [r7, #-24]	; 0xffffffe8
   160f4:	cmn	r3, #1
   160f8:	beq	168f8 <fwrite_success_callback@@Base+0x20ac>
   160fc:	ldr	r2, [fp, #-480]	; 0xfffffe20
   16100:	add	r1, r2, r3, lsl #4
   16104:	ldr	r3, [r2, r3, lsl #4]
   16108:	cmp	r3, #5
   1610c:	bne	1693c <fwrite_success_callback@@Base+0x20f0>
   16110:	ldr	r3, [r1, #8]
   16114:	mov	r6, #1
   16118:	str	r3, [fp, #-492]	; 0xfffffe14
   1611c:	ldr	r3, [r7, #-12]
   16120:	cmn	r3, #1
   16124:	beq	16150 <fwrite_success_callback@@Base+0x1904>
   16128:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1612c:	add	r1, r2, r3, lsl #4
   16130:	ldr	r3, [r2, r3, lsl #4]
   16134:	cmp	r3, #5
   16138:	bne	1693c <fwrite_success_callback@@Base+0x20f0>
   1613c:	ldr	r2, [r1, #8]
   16140:	sub	r1, fp, #36	; 0x24
   16144:	add	r3, r1, r6, lsl #2
   16148:	add	r6, r6, #1
   1614c:	str	r2, [r3, #-456]	; 0xfffffe38
   16150:	adds	r2, r9, #2
   16154:	str	r2, [fp, #-524]	; 0xfffffdf4
   16158:	mov	r3, r2
   1615c:	mvncs	r3, #0
   16160:	cmp	r4, r3
   16164:	bcs	162a0 <fwrite_success_callback@@Base+0x1a54>
   16168:	cmp	r4, #0
   1616c:	beq	16218 <fwrite_success_callback@@Base+0x19cc>
   16170:	blt	16c44 <fwrite_success_callback@@Base+0x23f8>
   16174:	cmp	r9, r2
   16178:	lsl	r4, r4, #1
   1617c:	bls	16228 <fwrite_success_callback@@Base+0x19dc>
   16180:	str	sl, [fp, #-560]	; 0xfffffdd0
   16184:	bl	11214 <__errno_location@plt>
   16188:	str	r0, [fp, #-516]	; 0xfffffdfc
   1618c:	mov	r2, sl
   16190:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16194:	cmp	r2, #0
   16198:	cmpne	r2, r3
   1619c:	bne	16be4 <fwrite_success_callback@@Base+0x2398>
   161a0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   161a4:	cmp	r1, #0
   161a8:	beq	161b8 <fwrite_success_callback@@Base+0x196c>
   161ac:	mov	r0, r1
   161b0:	bl	11088 <free@plt>
   161b4:	b	161c0 <fwrite_success_callback@@Base+0x1974>
   161b8:	bl	11214 <__errno_location@plt>
   161bc:	str	r0, [fp, #-516]	; 0xfffffdfc
   161c0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   161c4:	sub	r3, fp, #348	; 0x15c
   161c8:	cmp	r0, r3
   161cc:	beq	161d4 <fwrite_success_callback@@Base+0x1988>
   161d0:	bl	11088 <free@plt>
   161d4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   161d8:	sub	r3, fp, #476	; 0x1dc
   161dc:	cmp	r0, r3
   161e0:	beq	161e8 <fwrite_success_callback@@Base+0x199c>
   161e4:	bl	11088 <free@plt>
   161e8:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   161ec:	mov	r3, #0
   161f0:	mov	r2, #12
   161f4:	str	r2, [r1]
   161f8:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   161fc:	mov	r0, r3
   16200:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16204:	ldr	r3, [r1]
   16208:	cmp	r2, r3
   1620c:	bne	16c40 <fwrite_success_callback@@Base+0x23f4>
   16210:	sub	sp, fp, #32
   16214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16218:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   1621c:	cmp	r9, r3
   16220:	bhi	16180 <fwrite_success_callback@@Base+0x1934>
   16224:	mov	r4, #12
   16228:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   1622c:	cmp	r3, r4
   16230:	movcs	r4, r3
   16234:	cmn	r4, #1
   16238:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   1623c:	ldr	r1, [fp, #-504]	; 0xfffffe08
   16240:	subs	r0, sl, r1
   16244:	rsbs	r2, r0, #0
   16248:	adcs	r2, r2, r0
   1624c:	cmp	sl, r1
   16250:	cmpne	sl, #0
   16254:	bne	16920 <fwrite_success_callback@@Base+0x20d4>
   16258:	mov	r0, r4
   1625c:	str	r2, [fp, #-560]	; 0xfffffdd0
   16260:	bl	11190 <malloc@plt>
   16264:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   16268:	mov	r3, r0
   1626c:	cmp	r3, #0
   16270:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   16274:	cmp	r9, #0
   16278:	moveq	r2, #0
   1627c:	andne	r2, r2, #1
   16280:	cmp	r2, #0
   16284:	moveq	sl, r3
   16288:	beq	162a0 <fwrite_success_callback@@Base+0x1a54>
   1628c:	mov	r1, sl
   16290:	mov	r0, r3
   16294:	mov	r2, r9
   16298:	mov	sl, r3
   1629c:	bl	110ac <memcpy@plt>
   162a0:	mov	r2, #0
   162a4:	strb	r2, [sl, r9]
   162a8:	sub	r8, r8, #1
   162ac:	str	r8, [fp, #-508]	; 0xfffffe04
   162b0:	bl	11214 <__errno_location@plt>
   162b4:	rsb	ip, r9, r4
   162b8:	str	r5, [fp, #-544]	; 0xfffffde0
   162bc:	mov	r5, ip
   162c0:	ldr	r3, [r0]
   162c4:	str	r0, [fp, #-516]	; 0xfffffdfc
   162c8:	str	r3, [fp, #-552]	; 0xfffffdd8
   162cc:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   162d0:	mvn	r1, #0
   162d4:	cmp	r5, #0
   162d8:	str	r1, [fp, #-496]	; 0xfffffe10
   162dc:	ldr	r1, [fp, #-508]	; 0xfffffe04
   162e0:	mov	r3, #0
   162e4:	movge	r8, r5
   162e8:	mvnlt	r8, #-2147483648	; 0x80000000
   162ec:	str	r3, [r2]
   162f0:	cmp	r1, #16
   162f4:	addls	pc, pc, r1, lsl #2
   162f8:	b	1693c <fwrite_success_callback@@Base+0x20f0>
   162fc:	b	16830 <fwrite_success_callback@@Base+0x1fe4>
   16300:	b	16710 <fwrite_success_callback@@Base+0x1ec4>
   16304:	b	16814 <fwrite_success_callback@@Base+0x1fc8>
   16308:	b	167f8 <fwrite_success_callback@@Base+0x1fac>
   1630c:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16310:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16314:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16318:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   1631c:	b	16498 <fwrite_success_callback@@Base+0x1c4c>
   16320:	b	16498 <fwrite_success_callback@@Base+0x1c4c>
   16324:	b	164f4 <fwrite_success_callback@@Base+0x1ca8>
   16328:	b	164f4 <fwrite_success_callback@@Base+0x1ca8>
   1632c:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16330:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16334:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16338:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   1633c:	b	16340 <fwrite_success_callback@@Base+0x1af4>
   16340:	ldr	r2, [r7, #-4]
   16344:	cmp	r6, #1
   16348:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1634c:	add	r3, r3, r2, lsl #4
   16350:	ldr	r3, [r3, #8]
   16354:	beq	16728 <fwrite_success_callback@@Base+0x1edc>
   16358:	cmp	r6, #2
   1635c:	bne	16550 <fwrite_success_callback@@Base+0x1d04>
   16360:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16364:	add	r0, sl, r9
   16368:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1636c:	mov	r1, r8
   16370:	ldr	ip, [fp, #-488]	; 0xfffffe18
   16374:	str	r2, [sp]
   16378:	mov	r2, #1
   1637c:	str	r3, [sp, #12]
   16380:	sub	r3, fp, #496	; 0x1f0
   16384:	str	lr, [sp, #4]
   16388:	str	r3, [sp, #16]
   1638c:	mvn	r3, #0
   16390:	str	ip, [sp, #8]
   16394:	bl	11304 <__snprintf_chk@plt>
   16398:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1639c:	cmp	r3, #0
   163a0:	blt	16584 <fwrite_success_callback@@Base+0x1d38>
   163a4:	cmp	r8, r3
   163a8:	bls	163bc <fwrite_success_callback@@Base+0x1b70>
   163ac:	add	r2, sl, r3
   163b0:	ldrb	r2, [r2, r9]
   163b4:	cmp	r2, #0
   163b8:	bne	1693c <fwrite_success_callback@@Base+0x20f0>
   163bc:	cmp	r0, r3
   163c0:	movle	r0, r3
   163c4:	ble	163cc <fwrite_success_callback@@Base+0x1b80>
   163c8:	str	r0, [fp, #-496]	; 0xfffffe10
   163cc:	add	r3, r0, #1
   163d0:	cmp	r8, r3
   163d4:	bhi	16b6c <fwrite_success_callback@@Base+0x2320>
   163d8:	cmn	r8, #-2147483647	; 0x80000001
   163dc:	beq	16b84 <fwrite_success_callback@@Base+0x2338>
   163e0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   163e4:	add	r0, r0, r2
   163e8:	cmp	r9, r0
   163ec:	mvnhi	r0, #0
   163f0:	cmp	r4, #0
   163f4:	mvnlt	r0, #0
   163f8:	blt	16408 <fwrite_success_callback@@Base+0x1bbc>
   163fc:	lsl	r3, r4, #1
   16400:	cmp	r0, r3
   16404:	movcc	r0, r3
   16408:	cmp	r4, r0
   1640c:	bcs	162cc <fwrite_success_callback@@Base+0x1a80>
   16410:	cmp	r4, #0
   16414:	beq	16764 <fwrite_success_callback@@Base+0x1f18>
   16418:	blt	1618c <fwrite_success_callback@@Base+0x1940>
   1641c:	lsl	r4, r4, #1
   16420:	cmp	r4, r0
   16424:	movcc	r4, r0
   16428:	cmn	r4, #1
   1642c:	beq	1618c <fwrite_success_callback@@Base+0x1940>
   16430:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16434:	subs	r2, sl, r3
   16438:	rsbs	r5, r2, #0
   1643c:	adcs	r5, r5, r2
   16440:	cmp	sl, r3
   16444:	cmpne	sl, #0
   16448:	bne	1676c <fwrite_success_callback@@Base+0x1f20>
   1644c:	mov	r0, r4
   16450:	bl	11190 <malloc@plt>
   16454:	mov	r3, r0
   16458:	cmp	r3, #0
   1645c:	beq	1618c <fwrite_success_callback@@Base+0x1940>
   16460:	cmp	r9, #0
   16464:	moveq	r5, #0
   16468:	andne	r5, r5, #1
   1646c:	cmp	r5, #0
   16470:	rsbeq	r5, r9, r4
   16474:	moveq	sl, r3
   16478:	beq	162cc <fwrite_success_callback@@Base+0x1a80>
   1647c:	mov	r1, sl
   16480:	mov	r0, r3
   16484:	mov	r2, r9
   16488:	mov	sl, r3
   1648c:	rsb	r5, r9, r4
   16490:	bl	110ac <memcpy@plt>
   16494:	b	162cc <fwrite_success_callback@@Base+0x1a80>
   16498:	ldr	r2, [r7, #-4]
   1649c:	cmp	r6, #1
   164a0:	ldr	r3, [fp, #-480]	; 0xfffffe20
   164a4:	add	r3, r3, r2, lsl #4
   164a8:	ldrd	r2, [r3, #8]
   164ac:	beq	168c4 <fwrite_success_callback@@Base+0x2078>
   164b0:	cmp	r6, #2
   164b4:	bne	169a0 <fwrite_success_callback@@Base+0x2154>
   164b8:	ldr	r1, [fp, #-512]	; 0xfffffe00
   164bc:	add	r0, sl, r9
   164c0:	ldr	lr, [fp, #-492]	; 0xfffffe14
   164c4:	ldr	ip, [fp, #-488]	; 0xfffffe18
   164c8:	strd	r2, [sp, #16]
   164cc:	sub	r2, fp, #496	; 0x1f0
   164d0:	str	r1, [sp]
   164d4:	mvn	r3, #0
   164d8:	str	r2, [sp, #24]
   164dc:	mov	r1, r8
   164e0:	mov	r2, #1
   164e4:	str	lr, [sp, #4]
   164e8:	str	ip, [sp, #8]
   164ec:	bl	11304 <__snprintf_chk@plt>
   164f0:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   164f4:	ldr	r2, [r7, #-4]
   164f8:	cmp	r6, #1
   164fc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16500:	add	r3, r3, r2, lsl #4
   16504:	ldrd	r0, [r3, #8]
   16508:	beq	16890 <fwrite_success_callback@@Base+0x2044>
   1650c:	cmp	r6, #2
   16510:	bne	16974 <fwrite_success_callback@@Base+0x2128>
   16514:	ldr	r3, [fp, #-492]	; 0xfffffe14
   16518:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1651c:	ldr	lr, [fp, #-488]	; 0xfffffe18
   16520:	strd	r0, [sp, #16]
   16524:	add	r0, sl, r9
   16528:	str	r2, [sp]
   1652c:	mov	r1, r8
   16530:	sub	r2, fp, #496	; 0x1f0
   16534:	str	r3, [sp, #4]
   16538:	str	r2, [sp, #24]
   1653c:	mvn	r3, #0
   16540:	mov	r2, #1
   16544:	str	lr, [sp, #8]
   16548:	bl	11304 <__snprintf_chk@plt>
   1654c:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   16550:	ldr	r1, [fp, #-512]	; 0xfffffe00
   16554:	sub	r2, fp, #496	; 0x1f0
   16558:	str	r3, [sp, #4]
   1655c:	add	r0, sl, r9
   16560:	str	r2, [sp, #8]
   16564:	mvn	r3, #0
   16568:	str	r1, [sp]
   1656c:	mov	r2, #1
   16570:	mov	r1, r8
   16574:	bl	11304 <__snprintf_chk@plt>
   16578:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1657c:	cmp	r3, #0
   16580:	bge	163a4 <fwrite_success_callback@@Base+0x1b58>
   16584:	ldr	r1, [fp, #-544]	; 0xfffffde0
   16588:	ldrb	r3, [r1, #1]
   1658c:	cmp	r3, #0
   16590:	movne	r2, #0
   16594:	strbne	r2, [r1, #1]
   16598:	bne	162cc <fwrite_success_callback@@Base+0x1a80>
   1659c:	cmp	r0, #0
   165a0:	bge	163c8 <fwrite_success_callback@@Base+0x1b7c>
   165a4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   165a8:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   165ac:	cmp	sl, #0
   165b0:	cmpne	r3, sl
   165b4:	ldr	r4, [r1]
   165b8:	bne	16a10 <fwrite_success_callback@@Base+0x21c4>
   165bc:	ldr	r2, [fp, #-548]	; 0xfffffddc
   165c0:	cmp	r2, #0
   165c4:	beq	165d0 <fwrite_success_callback@@Base+0x1d84>
   165c8:	mov	r0, r2
   165cc:	bl	11088 <free@plt>
   165d0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   165d4:	sub	r3, fp, #348	; 0x15c
   165d8:	cmp	r0, r3
   165dc:	beq	165e4 <fwrite_success_callback@@Base+0x1d98>
   165e0:	bl	11088 <free@plt>
   165e4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   165e8:	sub	r3, fp, #476	; 0x1dc
   165ec:	cmp	r0, r3
   165f0:	beq	165f8 <fwrite_success_callback@@Base+0x1dac>
   165f4:	bl	11088 <free@plt>
   165f8:	cmp	r4, #0
   165fc:	bne	16618 <fwrite_success_callback@@Base+0x1dcc>
   16600:	ldr	r3, [fp, #-540]	; 0xfffffde4
   16604:	ldrb	r4, [r3, #36]	; 0x24
   16608:	and	r4, r4, #239	; 0xef
   1660c:	cmp	r4, #99	; 0x63
   16610:	movne	r4, #22
   16614:	moveq	r4, #84	; 0x54
   16618:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   1661c:	mov	r3, #0
   16620:	str	r4, [r1]
   16624:	b	161f8 <fwrite_success_callback@@Base+0x19ac>
   16628:	mov	r4, #12
   1662c:	b	15f38 <fwrite_success_callback@@Base+0x16ec>
   16630:	mov	r0, r2
   16634:	mov	r1, r4
   16638:	str	r2, [fp, #-560]	; 0xfffffdd0
   1663c:	str	r3, [fp, #-556]	; 0xfffffdd4
   16640:	bl	110f4 <realloc@plt>
   16644:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   16648:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1664c:	mov	sl, r0
   16650:	b	15f80 <fwrite_success_callback@@Base+0x1734>
   16654:	ldr	r3, [r7, #-4]
   16658:	cmn	r3, #1
   1665c:	bne	1693c <fwrite_success_callback@@Base+0x20f0>
   16660:	adds	r6, r9, #1
   16664:	mvncs	r6, #0
   16668:	cmp	r4, r6
   1666c:	bcs	166ec <fwrite_success_callback@@Base+0x1ea0>
   16670:	cmp	r4, #0
   16674:	beq	16940 <fwrite_success_callback@@Base+0x20f4>
   16678:	blt	16180 <fwrite_success_callback@@Base+0x1934>
   1667c:	lsl	r4, r4, #1
   16680:	cmp	r4, r6
   16684:	movcc	r4, r6
   16688:	cmn	r4, #1
   1668c:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   16690:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16694:	subs	ip, sl, r3
   16698:	rsbs	r5, ip, #0
   1669c:	adcs	r5, r5, ip
   166a0:	cmp	sl, r3
   166a4:	cmpne	sl, #0
   166a8:	bne	16948 <fwrite_success_callback@@Base+0x20fc>
   166ac:	mov	r0, r4
   166b0:	bl	11190 <malloc@plt>
   166b4:	mov	r3, r0
   166b8:	cmp	r3, #0
   166bc:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   166c0:	cmp	r9, #0
   166c4:	moveq	r5, #0
   166c8:	andne	r5, r5, #1
   166cc:	cmp	r5, #0
   166d0:	moveq	sl, r3
   166d4:	beq	166ec <fwrite_success_callback@@Base+0x1ea0>
   166d8:	mov	r1, sl
   166dc:	mov	r0, r3
   166e0:	mov	r2, r9
   166e4:	mov	sl, r3
   166e8:	bl	110ac <memcpy@plt>
   166ec:	mov	r2, sl
   166f0:	mov	r1, #37	; 0x25
   166f4:	strb	r1, [sl, r9]
   166f8:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   166fc:	add	r7, r7, #44	; 0x2c
   16700:	ldr	r5, [r7, #-84]	; 0xffffffac
   16704:	add	r1, r1, #1
   16708:	str	r1, [fp, #-520]	; 0xfffffdf8
   1670c:	b	15f00 <fwrite_success_callback@@Base+0x16b4>
   16710:	ldr	r2, [r7, #-4]
   16714:	cmp	r6, #1
   16718:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1671c:	add	r3, r3, r2, lsl #4
   16720:	ldrb	r3, [r3, #8]
   16724:	bne	16358 <fwrite_success_callback@@Base+0x1b0c>
   16728:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1672c:	add	r0, sl, r9
   16730:	ldr	lr, [fp, #-492]	; 0xfffffe14
   16734:	mov	r2, r6
   16738:	str	r3, [sp, #8]
   1673c:	sub	r3, fp, #496	; 0x1f0
   16740:	str	r1, [sp]
   16744:	mov	r1, r8
   16748:	str	r3, [sp, #12]
   1674c:	mvn	r3, #0
   16750:	str	lr, [sp, #4]
   16754:	bl	11304 <__snprintf_chk@plt>
   16758:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   1675c:	mov	sl, r2
   16760:	b	15f9c <fwrite_success_callback@@Base+0x1750>
   16764:	mov	r4, #12
   16768:	b	16420 <fwrite_success_callback@@Base+0x1bd4>
   1676c:	mov	r0, sl
   16770:	mov	r1, r4
   16774:	bl	110f4 <realloc@plt>
   16778:	mov	r3, r0
   1677c:	b	16458 <fwrite_success_callback@@Base+0x1c0c>
   16780:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16784:	add	r1, r3, r2, lsl #4
   16788:	ldr	r3, [r3, r2, lsl #4]
   1678c:	sub	r3, r3, #18
   16790:	cmp	r3, #4
   16794:	addls	pc, pc, r3, lsl #2
   16798:	b	1693c <fwrite_success_callback@@Base+0x20f0>
   1679c:	b	169cc <fwrite_success_callback@@Base+0x2180>
   167a0:	b	169e0 <fwrite_success_callback@@Base+0x2194>
   167a4:	b	1687c <fwrite_success_callback@@Base+0x2030>
   167a8:	b	1687c <fwrite_success_callback@@Base+0x2030>
   167ac:	b	169f4 <fwrite_success_callback@@Base+0x21a8>
   167b0:	mov	r1, r2
   167b4:	mov	r0, sl
   167b8:	mov	r2, r6
   167bc:	str	r3, [fp, #-556]	; 0xfffffdd4
   167c0:	bl	110ac <memcpy@plt>
   167c4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   167c8:	b	15f9c <fwrite_success_callback@@Base+0x1750>
   167cc:	mov	r9, r6
   167d0:	mov	sl, r2
   167d4:	b	15fac <fwrite_success_callback@@Base+0x1760>
   167d8:	tst	r3, #32
   167dc:	bne	16964 <fwrite_success_callback@@Base+0x2118>
   167e0:	tst	r3, #12
   167e4:	beq	160e0 <fwrite_success_callback@@Base+0x1894>
   167e8:	mov	r3, #108	; 0x6c
   167ec:	add	r5, r5, #1
   167f0:	strb	r3, [r5, #-1]
   167f4:	b	160d4 <fwrite_success_callback@@Base+0x1888>
   167f8:	ldr	r2, [r7, #-4]
   167fc:	cmp	r6, #1
   16800:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16804:	add	r3, r3, r2, lsl #4
   16808:	ldrh	r3, [r3, #8]
   1680c:	bne	16358 <fwrite_success_callback@@Base+0x1b0c>
   16810:	b	16728 <fwrite_success_callback@@Base+0x1edc>
   16814:	ldr	r2, [r7, #-4]
   16818:	cmp	r6, #1
   1681c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16820:	add	r3, r3, r2, lsl #4
   16824:	ldrsh	r3, [r3, #8]
   16828:	bne	16358 <fwrite_success_callback@@Base+0x1b0c>
   1682c:	b	16728 <fwrite_success_callback@@Base+0x1edc>
   16830:	ldr	r2, [r7, #-4]
   16834:	cmp	r6, #1
   16838:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1683c:	add	r3, r3, r2, lsl #4
   16840:	ldrsb	r3, [r3, #8]
   16844:	beq	16728 <fwrite_success_callback@@Base+0x1edc>
   16848:	cmp	r6, #2
   1684c:	beq	16360 <fwrite_success_callback@@Base+0x1b14>
   16850:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16854:	add	r0, sl, r9
   16858:	str	r3, [sp, #4]
   1685c:	mov	r1, r8
   16860:	sub	r3, fp, #496	; 0x1f0
   16864:	str	r3, [sp, #8]
   16868:	str	r2, [sp]
   1686c:	mvn	r3, #0
   16870:	mov	r2, #1
   16874:	bl	11304 <__snprintf_chk@plt>
   16878:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   1687c:	ldr	r3, [r1, #8]
   16880:	mov	r2, sl
   16884:	mov	r6, r9
   16888:	str	r9, [r3]
   1688c:	b	166f8 <fwrite_success_callback@@Base+0x1eac>
   16890:	ldr	r3, [fp, #-492]	; 0xfffffe14
   16894:	ldr	r2, [fp, #-512]	; 0xfffffe00
   16898:	strd	r0, [sp, #8]
   1689c:	sub	r1, fp, #496	; 0x1f0
   168a0:	str	r3, [sp, #4]
   168a4:	add	r0, sl, r9
   168a8:	str	r2, [sp]
   168ac:	mvn	r3, #0
   168b0:	str	r1, [sp, #16]
   168b4:	mov	r2, r6
   168b8:	mov	r1, r8
   168bc:	bl	11304 <__snprintf_chk@plt>
   168c0:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   168c4:	ldr	r1, [fp, #-512]	; 0xfffffe00
   168c8:	add	r0, sl, r9
   168cc:	ldr	lr, [fp, #-492]	; 0xfffffe14
   168d0:	strd	r2, [sp, #8]
   168d4:	sub	r3, fp, #496	; 0x1f0
   168d8:	str	r1, [sp]
   168dc:	mov	r2, r6
   168e0:	str	r3, [sp, #16]
   168e4:	mov	r1, r8
   168e8:	mvn	r3, #0
   168ec:	str	lr, [sp, #4]
   168f0:	bl	11304 <__snprintf_chk@plt>
   168f4:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   168f8:	mov	r6, #0
   168fc:	b	1611c <fwrite_success_callback@@Base+0x18d0>
   16900:	cmn	r0, #1
   16904:	beq	161b8 <fwrite_success_callback@@Base+0x196c>
   16908:	bl	11190 <malloc@plt>
   1690c:	cmp	r0, #0
   16910:	str	r0, [fp, #-512]	; 0xfffffe00
   16914:	beq	161b8 <fwrite_success_callback@@Base+0x196c>
   16918:	str	r0, [fp, #-548]	; 0xfffffddc
   1691c:	b	15ecc <fwrite_success_callback@@Base+0x1680>
   16920:	mov	r0, sl
   16924:	mov	r1, r4
   16928:	str	r2, [fp, #-560]	; 0xfffffdd0
   1692c:	bl	110f4 <realloc@plt>
   16930:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   16934:	mov	r3, r0
   16938:	b	1626c <fwrite_success_callback@@Base+0x1a20>
   1693c:	bl	112ec <abort@plt>
   16940:	mov	r4, #12
   16944:	b	16680 <fwrite_success_callback@@Base+0x1e34>
   16948:	mov	r0, sl
   1694c:	mov	r1, r4
   16950:	bl	110f4 <realloc@plt>
   16954:	mov	r3, r0
   16958:	b	166b8 <fwrite_success_callback@@Base+0x1e6c>
   1695c:	mov	r3, #0
   16960:	b	161f8 <fwrite_success_callback@@Base+0x19ac>
   16964:	mov	r3, #76	; 0x4c
   16968:	add	r5, r5, #1
   1696c:	strb	r3, [r5, #-1]
   16970:	b	160e0 <fwrite_success_callback@@Base+0x1894>
   16974:	ldr	r3, [fp, #-512]	; 0xfffffe00
   16978:	mov	r2, #1
   1697c:	strd	r0, [sp, #8]
   16980:	sub	r1, fp, #496	; 0x1f0
   16984:	add	r0, sl, r9
   16988:	str	r1, [sp, #16]
   1698c:	str	r3, [sp]
   16990:	mov	r1, r8
   16994:	mvn	r3, #0
   16998:	bl	11304 <__snprintf_chk@plt>
   1699c:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   169a0:	ldr	r1, [fp, #-512]	; 0xfffffe00
   169a4:	add	r0, sl, r9
   169a8:	strd	r2, [sp, #8]
   169ac:	sub	r2, fp, #496	; 0x1f0
   169b0:	mvn	r3, #0
   169b4:	str	r2, [sp, #16]
   169b8:	str	r1, [sp]
   169bc:	mov	r2, #1
   169c0:	mov	r1, r8
   169c4:	bl	11304 <__snprintf_chk@plt>
   169c8:	b	16398 <fwrite_success_callback@@Base+0x1b4c>
   169cc:	ldr	r3, [r1, #8]
   169d0:	mov	r2, sl
   169d4:	mov	r6, r9
   169d8:	strb	r9, [r3]
   169dc:	b	166f8 <fwrite_success_callback@@Base+0x1eac>
   169e0:	ldr	r3, [r1, #8]
   169e4:	mov	r2, sl
   169e8:	mov	r6, r9
   169ec:	strh	r9, [r3]
   169f0:	b	166f8 <fwrite_success_callback@@Base+0x1eac>
   169f4:	ldr	r3, [r1, #8]
   169f8:	mov	r2, sl
   169fc:	mov	r1, #0
   16a00:	mov	r6, r9
   16a04:	str	r9, [r3]
   16a08:	str	r1, [r3, #4]
   16a0c:	b	166f8 <fwrite_success_callback@@Base+0x1eac>
   16a10:	mov	r0, sl
   16a14:	bl	11088 <free@plt>
   16a18:	b	165bc <fwrite_success_callback@@Base+0x1d70>
   16a1c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16a20:	sub	r3, fp, #348	; 0x15c
   16a24:	cmp	r0, r3
   16a28:	beq	16a30 <fwrite_success_callback@@Base+0x21e4>
   16a2c:	bl	11088 <free@plt>
   16a30:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16a34:	sub	r3, fp, #476	; 0x1dc
   16a38:	cmp	r0, r3
   16a3c:	beq	16a44 <fwrite_success_callback@@Base+0x21f8>
   16a40:	bl	11088 <free@plt>
   16a44:	bl	11214 <__errno_location@plt>
   16a48:	mov	r2, #22
   16a4c:	mov	r3, #0
   16a50:	str	r2, [r0]
   16a54:	b	161f8 <fwrite_success_callback@@Base+0x19ac>
   16a58:	str	r2, [fp, #-560]	; 0xfffffdd0
   16a5c:	bl	11214 <__errno_location@plt>
   16a60:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   16a64:	str	r0, [fp, #-516]	; 0xfffffdfc
   16a68:	b	16190 <fwrite_success_callback@@Base+0x1944>
   16a6c:	adds	r5, r9, #1
   16a70:	movcc	r3, r5
   16a74:	mvncs	r3, #0
   16a78:	cmp	r3, r4
   16a7c:	bls	16b04 <fwrite_success_callback@@Base+0x22b8>
   16a80:	cmp	r4, #0
   16a84:	moveq	r4, #12
   16a88:	beq	16a94 <fwrite_success_callback@@Base+0x2248>
   16a8c:	lslge	r4, r4, #1
   16a90:	mvnlt	r4, #0
   16a94:	cmp	r5, r9
   16a98:	movcs	r3, r5
   16a9c:	mvncc	r3, #0
   16aa0:	cmp	r4, r3
   16aa4:	bcs	16ab4 <fwrite_success_callback@@Base+0x2268>
   16aa8:	cmp	r5, r9
   16aac:	bcc	16180 <fwrite_success_callback@@Base+0x1934>
   16ab0:	mov	r4, r5
   16ab4:	cmn	r4, #1
   16ab8:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   16abc:	ldr	r2, [fp, #-504]	; 0xfffffe08
   16ac0:	subs	r3, sl, r2
   16ac4:	rsbs	r6, r3, #0
   16ac8:	adcs	r6, r6, r3
   16acc:	cmp	sl, r2
   16ad0:	cmpne	sl, #0
   16ad4:	bne	16c14 <fwrite_success_callback@@Base+0x23c8>
   16ad8:	mov	r0, r4
   16adc:	bl	11190 <malloc@plt>
   16ae0:	mov	r3, r0
   16ae4:	cmp	r3, #0
   16ae8:	beq	16180 <fwrite_success_callback@@Base+0x1934>
   16aec:	cmp	r9, #0
   16af0:	moveq	r6, #0
   16af4:	andne	r6, r6, #1
   16af8:	cmp	r6, #0
   16afc:	moveq	sl, r3
   16b00:	bne	16c28 <fwrite_success_callback@@Base+0x23dc>
   16b04:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16b08:	cmp	sl, r3
   16b0c:	mov	r3, #0
   16b10:	strb	r3, [sl, r9]
   16b14:	beq	16b20 <fwrite_success_callback@@Base+0x22d4>
   16b18:	cmp	r4, r5
   16b1c:	bhi	16bfc <fwrite_success_callback@@Base+0x23b0>
   16b20:	ldr	r1, [fp, #-548]	; 0xfffffddc
   16b24:	cmp	r1, #0
   16b28:	beq	16b34 <fwrite_success_callback@@Base+0x22e8>
   16b2c:	mov	r0, r1
   16b30:	bl	11088 <free@plt>
   16b34:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16b38:	sub	r3, fp, #348	; 0x15c
   16b3c:	cmp	r0, r3
   16b40:	beq	16b48 <fwrite_success_callback@@Base+0x22fc>
   16b44:	bl	11088 <free@plt>
   16b48:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16b4c:	sub	r3, fp, #476	; 0x1dc
   16b50:	cmp	r0, r3
   16b54:	beq	16b5c <fwrite_success_callback@@Base+0x2310>
   16b58:	bl	11088 <free@plt>
   16b5c:	ldr	r2, [fp, #-536]	; 0xfffffde8
   16b60:	mov	r3, sl
   16b64:	str	r9, [r2]
   16b68:	b	161f8 <fwrite_success_callback@@Base+0x19ac>
   16b6c:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   16b70:	add	r6, r0, r9
   16b74:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   16b78:	str	r1, [r2]
   16b7c:	mov	r2, sl
   16b80:	b	166f8 <fwrite_success_callback@@Base+0x1eac>
   16b84:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16b88:	cmp	sl, #0
   16b8c:	cmpne	sl, r3
   16b90:	bne	16bf0 <fwrite_success_callback@@Base+0x23a4>
   16b94:	ldr	r3, [fp, #-548]	; 0xfffffddc
   16b98:	cmp	r3, #0
   16b9c:	beq	16ba8 <fwrite_success_callback@@Base+0x235c>
   16ba0:	mov	r0, r3
   16ba4:	bl	11088 <free@plt>
   16ba8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16bac:	sub	r3, fp, #348	; 0x15c
   16bb0:	cmp	r0, r3
   16bb4:	beq	16bbc <fwrite_success_callback@@Base+0x2370>
   16bb8:	bl	11088 <free@plt>
   16bbc:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16bc0:	sub	r3, fp, #476	; 0x1dc
   16bc4:	cmp	r0, r3
   16bc8:	beq	16bd0 <fwrite_success_callback@@Base+0x2384>
   16bcc:	bl	11088 <free@plt>
   16bd0:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   16bd4:	mov	r2, #75	; 0x4b
   16bd8:	mov	r3, #0
   16bdc:	str	r2, [r1]
   16be0:	b	161f8 <fwrite_success_callback@@Base+0x19ac>
   16be4:	mov	r0, r2
   16be8:	bl	11088 <free@plt>
   16bec:	b	161a0 <fwrite_success_callback@@Base+0x1954>
   16bf0:	mov	r0, sl
   16bf4:	bl	11088 <free@plt>
   16bf8:	b	16b94 <fwrite_success_callback@@Base+0x2348>
   16bfc:	mov	r0, sl
   16c00:	mov	r1, r5
   16c04:	bl	110f4 <realloc@plt>
   16c08:	cmp	r0, #0
   16c0c:	movne	sl, r0
   16c10:	b	16b20 <fwrite_success_callback@@Base+0x22d4>
   16c14:	mov	r0, sl
   16c18:	mov	r1, r4
   16c1c:	bl	110f4 <realloc@plt>
   16c20:	mov	r3, r0
   16c24:	b	16ae4 <fwrite_success_callback@@Base+0x2298>
   16c28:	mov	r1, sl
   16c2c:	mov	r0, r3
   16c30:	mov	r2, r9
   16c34:	mov	sl, r3
   16c38:	bl	110ac <memcpy@plt>
   16c3c:	b	16b04 <fwrite_success_callback@@Base+0x22b8>
   16c40:	bl	110e8 <__stack_chk_fail@plt>
   16c44:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16c48:	cmp	r9, r2
   16c4c:	bhi	16180 <fwrite_success_callback@@Base+0x1934>
   16c50:	mvn	r4, #0
   16c54:	b	16228 <fwrite_success_callback@@Base+0x19dc>
   16c58:	andeq	r3, r1, r8, asr #3
   16c5c:	andeq	r0, r0, r4, lsl #2
   16c60:	push	{r4, r5, r6}
   16c64:	ldm	r1, {r3, ip}
   16c68:	cmp	r3, #0
   16c6c:	beq	16d14 <fwrite_success_callback@@Base+0x24c8>
   16c70:	ldr	r6, [pc, #304]	; 16da8 <fwrite_success_callback@@Base+0x255c>
   16c74:	add	ip, ip, #16
   16c78:	ldr	r5, [pc, #300]	; 16dac <fwrite_success_callback@@Base+0x2560>
   16c7c:	mov	r4, #0
   16c80:	add	r6, pc, r6
   16c84:	add	r5, pc, r5
   16c88:	ldr	r3, [ip, #-16]
   16c8c:	sub	r3, r3, #1
   16c90:	cmp	r3, #21
   16c94:	addls	pc, pc, r3, lsl #2
   16c98:	b	16da0 <fwrite_success_callback@@Base+0x2554>
   16c9c:	b	16d60 <fwrite_success_callback@@Base+0x2514>
   16ca0:	b	16d60 <fwrite_success_callback@@Base+0x2514>
   16ca4:	b	16d50 <fwrite_success_callback@@Base+0x2504>
   16ca8:	b	16d50 <fwrite_success_callback@@Base+0x2504>
   16cac:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cb0:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cb4:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cb8:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cbc:	b	16d20 <fwrite_success_callback@@Base+0x24d4>
   16cc0:	b	16d20 <fwrite_success_callback@@Base+0x24d4>
   16cc4:	b	16d38 <fwrite_success_callback@@Base+0x24ec>
   16cc8:	b	16d38 <fwrite_success_callback@@Base+0x24ec>
   16ccc:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cd0:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cd4:	b	16d70 <fwrite_success_callback@@Base+0x2524>
   16cd8:	b	16d88 <fwrite_success_callback@@Base+0x253c>
   16cdc:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16ce0:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16ce4:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16ce8:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cec:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cf0:	b	16cf4 <fwrite_success_callback@@Base+0x24a8>
   16cf4:	ldr	r3, [r0]
   16cf8:	add	r0, r0, #4
   16cfc:	str	r3, [ip, #-8]
   16d00:	ldr	r3, [r1]
   16d04:	add	r4, r4, #1
   16d08:	add	ip, ip, #16
   16d0c:	cmp	r3, r4
   16d10:	bhi	16c88 <fwrite_success_callback@@Base+0x243c>
   16d14:	mov	r0, #0
   16d18:	pop	{r4, r5, r6}
   16d1c:	bx	lr
   16d20:	add	r3, r0, #7
   16d24:	bic	r3, r3, #7
   16d28:	add	r0, r3, #8
   16d2c:	ldrd	r2, [r3]
   16d30:	strd	r2, [ip, #-8]
   16d34:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16d38:	add	r0, r0, #7
   16d3c:	bic	r0, r0, #7
   16d40:	add	r0, r0, #8
   16d44:	ldrd	r2, [r0, #-8]
   16d48:	strd	r2, [ip, #-8]
   16d4c:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16d50:	ldr	r3, [r0]
   16d54:	add	r0, r0, #4
   16d58:	strh	r3, [ip, #-8]
   16d5c:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16d60:	ldr	r3, [r0]
   16d64:	add	r0, r0, #4
   16d68:	strb	r3, [ip, #-8]
   16d6c:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16d70:	ldr	r3, [r0]
   16d74:	add	r0, r0, #4
   16d78:	cmp	r3, #0
   16d7c:	str	r3, [ip, #-8]
   16d80:	streq	r5, [ip, #-8]
   16d84:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16d88:	ldr	r3, [r0]
   16d8c:	add	r0, r0, #4
   16d90:	cmp	r3, #0
   16d94:	str	r3, [ip, #-8]
   16d98:	streq	r6, [ip, #-8]
   16d9c:	b	16d00 <fwrite_success_callback@@Base+0x24b4>
   16da0:	mvn	r0, #0
   16da4:	b	16d18 <fwrite_success_callback@@Base+0x24cc>
   16da8:	andeq	r1, r0, r0, ror #26
   16dac:	andeq	r1, r0, r8, ror sp
   16db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16db4:	mov	r7, r1
   16db8:	sub	sp, sp, #44	; 0x2c
   16dbc:	mov	r5, r2
   16dc0:	movw	sl, #39321	; 0x9999
   16dc4:	mov	r2, r7
   16dc8:	movt	sl, #6553	; 0x1999
   16dcc:	mov	r3, #0
   16dd0:	str	r3, [r2], #16
   16dd4:	mov	r1, #7
   16dd8:	str	r2, [r7, #4]
   16ddc:	mov	r9, r0
   16de0:	str	r2, [sp, #16]
   16de4:	mov	r2, r5
   16de8:	str	r3, [r2], #8
   16dec:	mov	r6, r3
   16df0:	str	r2, [r5, #4]
   16df4:	movw	r0, #29789	; 0x745d
   16df8:	str	r3, [sp, #8]
   16dfc:	movt	r0, #1489	; 0x5d1
   16e00:	str	r1, [sp, #20]
   16e04:	mov	ip, sl
   16e08:	str	r3, [sp, #24]
   16e0c:	str	r3, [sp, #36]	; 0x24
   16e10:	mov	r3, #7
   16e14:	str	r2, [sp, #12]
   16e18:	str	r3, [sp, #28]
   16e1c:	ldr	r1, [r7]
   16e20:	ldr	r3, [r7, #4]
   16e24:	str	r0, [sp, #32]
   16e28:	b	16e34 <fwrite_success_callback@@Base+0x25e8>
   16e2c:	cmp	r0, #37	; 0x25
   16e30:	beq	16e74 <fwrite_success_callback@@Base+0x2628>
   16e34:	mov	r8, r9
   16e38:	ldrb	r0, [r9], #1
   16e3c:	cmp	r0, #0
   16e40:	mov	r2, r9
   16e44:	bne	16e2c <fwrite_success_callback@@Base+0x25e0>
   16e48:	mov	r4, #44	; 0x2c
   16e4c:	mov	r2, r0
   16e50:	mul	r1, r4, r1
   16e54:	str	r8, [r3, r1]
   16e58:	ldr	r3, [sp, #24]
   16e5c:	str	r3, [r7, #8]
   16e60:	ldr	r3, [sp, #8]
   16e64:	str	r3, [r7, #12]
   16e68:	mov	r0, r2
   16e6c:	add	sp, sp, #44	; 0x2c
   16e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e74:	mov	r0, #44	; 0x2c
   16e78:	mul	r1, r0, r1
   16e7c:	add	r4, r3, r1
   16e80:	str	r8, [r3, r1]
   16e84:	mvn	r1, #0
   16e88:	str	r6, [r4, #8]
   16e8c:	str	r1, [r4, #20]
   16e90:	str	r1, [r4, #32]
   16e94:	str	r1, [r4, #40]	; 0x28
   16e98:	str	r6, [r4, #12]
   16e9c:	str	r6, [r4, #16]
   16ea0:	str	r6, [r4, #24]
   16ea4:	str	r6, [r4, #28]
   16ea8:	ldrb	r3, [r8, #1]
   16eac:	sub	sl, r3, #48	; 0x30
   16eb0:	uxtb	r1, sl
   16eb4:	cmp	r1, #9
   16eb8:	bls	1724c <fwrite_success_callback@@Base+0x2a00>
   16ebc:	mvn	r8, #0
   16ec0:	b	16f04 <fwrite_success_callback@@Base+0x26b8>
   16ec4:	cmp	r3, #45	; 0x2d
   16ec8:	beq	16f20 <fwrite_success_callback@@Base+0x26d4>
   16ecc:	cmp	r3, #43	; 0x2b
   16ed0:	beq	16f30 <fwrite_success_callback@@Base+0x26e4>
   16ed4:	cmp	r3, #32
   16ed8:	beq	16f40 <fwrite_success_callback@@Base+0x26f4>
   16edc:	cmp	r3, #35	; 0x23
   16ee0:	beq	16f50 <fwrite_success_callback@@Base+0x2704>
   16ee4:	cmp	r3, #48	; 0x30
   16ee8:	beq	16f60 <fwrite_success_callback@@Base+0x2714>
   16eec:	cmp	r3, #73	; 0x49
   16ef0:	bne	16f70 <fwrite_success_callback@@Base+0x2724>
   16ef4:	ldr	r3, [r4, #8]
   16ef8:	orr	r3, r3, #64	; 0x40
   16efc:	str	r3, [r4, #8]
   16f00:	ldrb	r3, [r2, #1]!
   16f04:	cmp	r3, #39	; 0x27
   16f08:	mov	r9, r2
   16f0c:	bne	16ec4 <fwrite_success_callback@@Base+0x2678>
   16f10:	ldr	r3, [r4, #8]
   16f14:	orr	r3, r3, #1
   16f18:	str	r3, [r4, #8]
   16f1c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f20:	ldr	r3, [r4, #8]
   16f24:	orr	r3, r3, #2
   16f28:	str	r3, [r4, #8]
   16f2c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f30:	ldr	r3, [r4, #8]
   16f34:	orr	r3, r3, #4
   16f38:	str	r3, [r4, #8]
   16f3c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f40:	ldr	r3, [r4, #8]
   16f44:	orr	r3, r3, #8
   16f48:	str	r3, [r4, #8]
   16f4c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f50:	ldr	r3, [r4, #8]
   16f54:	orr	r3, r3, #16
   16f58:	str	r3, [r4, #8]
   16f5c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f60:	ldr	r3, [r4, #8]
   16f64:	orr	r3, r3, #32
   16f68:	str	r3, [r4, #8]
   16f6c:	b	16f00 <fwrite_success_callback@@Base+0x26b4>
   16f70:	cmp	r3, #42	; 0x2a
   16f74:	beq	173e8 <fwrite_success_callback@@Base+0x2b9c>
   16f78:	sub	r1, r3, #48	; 0x30
   16f7c:	uxtb	r1, r1
   16f80:	cmp	r1, #9
   16f84:	bls	172c4 <fwrite_success_callback@@Base+0x2a78>
   16f88:	cmp	r3, #46	; 0x2e
   16f8c:	beq	17318 <fwrite_success_callback@@Base+0x2acc>
   16f90:	mov	sl, #0
   16f94:	mov	r0, #1
   16f98:	b	16fa4 <fwrite_success_callback@@Base+0x2758>
   16f9c:	ldrb	r3, [r2, #1]
   16fa0:	add	r9, r9, #1
   16fa4:	cmp	r3, #104	; 0x68
   16fa8:	mov	r2, r9
   16fac:	andeq	r3, sl, #1
   16fb0:	orreq	sl, sl, r0, lsl r3
   16fb4:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16fb8:	cmp	r3, #76	; 0x4c
   16fbc:	orreq	sl, sl, #4
   16fc0:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16fc4:	cmp	r3, #108	; 0x6c
   16fc8:	addeq	sl, sl, #8
   16fcc:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16fd0:	cmp	r3, #106	; 0x6a
   16fd4:	addeq	sl, sl, #16
   16fd8:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16fdc:	and	r1, r3, #223	; 0xdf
   16fe0:	cmp	r1, #90	; 0x5a
   16fe4:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16fe8:	cmp	r3, #116	; 0x74
   16fec:	beq	16f9c <fwrite_success_callback@@Base+0x2750>
   16ff0:	sub	r2, r3, #37	; 0x25
   16ff4:	add	r9, r9, #1
   16ff8:	mov	fp, r3
   16ffc:	cmp	r2, #83	; 0x53
   17000:	addls	pc, pc, r2, lsl #2
   17004:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17008:	b	171b8 <fwrite_success_callback@@Base+0x296c>
   1700c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17010:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17014:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17018:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1701c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17020:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17024:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17028:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1702c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17030:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17034:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17038:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1703c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17040:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17044:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17048:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1704c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17050:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17054:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17058:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1705c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17060:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17064:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17068:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1706c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17070:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17074:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17078:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   1707c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17080:	b	17528 <fwrite_success_callback@@Base+0x2cdc>
   17084:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17088:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   1708c:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   17090:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   17094:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17098:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1709c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170a0:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170a4:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170a8:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170ac:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170b0:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170b4:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170b8:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170bc:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170c0:	b	17534 <fwrite_success_callback@@Base+0x2ce8>
   170c4:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170c8:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170cc:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170d0:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170d4:	b	17540 <fwrite_success_callback@@Base+0x2cf4>
   170d8:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170dc:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170e0:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170e4:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170e8:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170ec:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170f0:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170f4:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   170f8:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   170fc:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17100:	b	175c8 <fwrite_success_callback@@Base+0x2d7c>
   17104:	b	17584 <fwrite_success_callback@@Base+0x2d38>
   17108:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   1710c:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   17110:	b	17504 <fwrite_success_callback@@Base+0x2cb8>
   17114:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17118:	b	17584 <fwrite_success_callback@@Base+0x2d38>
   1711c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17120:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17124:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17128:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1712c:	b	175d8 <fwrite_success_callback@@Base+0x2d8c>
   17130:	b	17540 <fwrite_success_callback@@Base+0x2cf4>
   17134:	b	17158 <fwrite_success_callback@@Base+0x290c>
   17138:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   1713c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17140:	b	174f4 <fwrite_success_callback@@Base+0x2ca8>
   17144:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17148:	b	17540 <fwrite_success_callback@@Base+0x2cf4>
   1714c:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17150:	b	17728 <fwrite_success_callback@@Base+0x2edc>
   17154:	b	17540 <fwrite_success_callback@@Base+0x2cf4>
   17158:	mov	sl, #17
   1715c:	cmn	r8, #1
   17160:	strne	r8, [r4, #40]	; 0x28
   17164:	beq	17884 <fwrite_success_callback@@Base+0x3038>
   17168:	ldr	r3, [sp, #20]
   1716c:	cmp	r3, r8
   17170:	bls	177b0 <fwrite_success_callback@@Base+0x2f64>
   17174:	ldr	r0, [r5, #4]
   17178:	ldr	r3, [r5]
   1717c:	cmp	r3, r8
   17180:	bhi	171a0 <fwrite_success_callback@@Base+0x2954>
   17184:	add	r2, r3, #1
   17188:	str	r2, [r5]
   1718c:	str	r6, [r0, r3, lsl #4]
   17190:	ldr	r3, [r5]
   17194:	ldr	r0, [r5, #4]
   17198:	cmp	r3, r8
   1719c:	bls	17184 <fwrite_success_callback@@Base+0x2938>
   171a0:	ldr	r3, [r0, r8, lsl #4]
   171a4:	cmp	r3, #0
   171a8:	streq	sl, [r0, r8, lsl #4]
   171ac:	beq	171b8 <fwrite_success_callback@@Base+0x296c>
   171b0:	cmp	sl, r3
   171b4:	bne	1772c <fwrite_success_callback@@Base+0x2ee0>
   171b8:	strb	fp, [r4, #36]	; 0x24
   171bc:	str	r9, [r4, #4]
   171c0:	ldr	r1, [r7]
   171c4:	ldr	r3, [sp, #28]
   171c8:	add	r1, r1, #1
   171cc:	str	r1, [r7]
   171d0:	cmp	r3, r1
   171d4:	bhi	172bc <fwrite_success_callback@@Base+0x2a70>
   171d8:	ldr	r3, [sp, #28]
   171dc:	cmp	r3, #0
   171e0:	blt	173a8 <fwrite_success_callback@@Base+0x2b5c>
   171e4:	ldr	r3, [sp, #28]
   171e8:	ldr	r0, [sp, #32]
   171ec:	lsl	r3, r3, #1
   171f0:	str	r3, [sp, #28]
   171f4:	cmp	r3, r0
   171f8:	bhi	173a8 <fwrite_success_callback@@Base+0x2b5c>
   171fc:	mov	r2, #44	; 0x2c
   17200:	ldr	r0, [r7, #4]
   17204:	mul	r1, r2, r3
   17208:	ldr	r3, [sp, #16]
   1720c:	cmp	r3, r0
   17210:	beq	178a4 <fwrite_success_callback@@Base+0x3058>
   17214:	str	ip, [sp, #4]
   17218:	bl	110f4 <realloc@plt>
   1721c:	ldr	ip, [sp, #4]
   17220:	mov	r4, r0
   17224:	cmp	r4, #0
   17228:	beq	173a8 <fwrite_success_callback@@Base+0x2b5c>
   1722c:	ldr	r3, [r7, #4]
   17230:	ldr	r0, [sp, #16]
   17234:	cmp	r0, r3
   17238:	beq	17960 <fwrite_success_callback@@Base+0x3114>
   1723c:	ldr	r1, [r7]
   17240:	mov	r3, r4
   17244:	str	r4, [r7, #4]
   17248:	b	16e34 <fwrite_success_callback@@Base+0x25e8>
   1724c:	mov	r0, r9
   17250:	ldrb	r1, [r0, #1]!
   17254:	sub	r8, r1, #48	; 0x30
   17258:	cmp	r8, #9
   1725c:	bls	17250 <fwrite_success_callback@@Base+0x2a04>
   17260:	cmp	r1, #36	; 0x24
   17264:	bne	16ebc <fwrite_success_callback@@Base+0x2670>
   17268:	mov	r8, #0
   1726c:	b	17274 <fwrite_success_callback@@Base+0x2a28>
   17270:	mov	r9, r2
   17274:	add	r3, r8, r8, lsl #2
   17278:	cmp	r8, ip
   1727c:	mvn	r8, #0
   17280:	add	r2, r9, #1
   17284:	lslls	r8, r3, #1
   17288:	adds	r8, r8, sl
   1728c:	ldrb	sl, [r9, #1]
   17290:	sub	sl, sl, #48	; 0x30
   17294:	mvncs	r8, #0
   17298:	uxtb	r3, sl
   1729c:	cmp	r3, #9
   172a0:	bls	17270 <fwrite_success_callback@@Base+0x2a24>
   172a4:	sub	r8, r8, #1
   172a8:	cmn	r8, #3
   172ac:	bhi	17728 <fwrite_success_callback@@Base+0x2edc>
   172b0:	add	r2, r2, #1
   172b4:	ldrb	r3, [r9, #2]
   172b8:	b	16f04 <fwrite_success_callback@@Base+0x26b8>
   172bc:	ldr	r3, [r7, #4]
   172c0:	b	16e34 <fwrite_success_callback@@Base+0x25e8>
   172c4:	str	r2, [r4, #12]
   172c8:	ldrb	r3, [r2]
   172cc:	sub	r3, r3, #48	; 0x30
   172d0:	cmp	r3, #9
   172d4:	bhi	17958 <fwrite_success_callback@@Base+0x310c>
   172d8:	add	r3, r2, #1
   172dc:	mov	r9, r3
   172e0:	add	r3, r3, #1
   172e4:	ldrb	r1, [r9]
   172e8:	sub	r1, r1, #48	; 0x30
   172ec:	cmp	r1, #9
   172f0:	bls	172dc <fwrite_success_callback@@Base+0x2a90>
   172f4:	rsb	r2, r2, r9
   172f8:	ldr	r3, [sp, #24]
   172fc:	str	r9, [r4, #16]
   17300:	cmp	r3, r2
   17304:	movcc	r3, r2
   17308:	str	r3, [sp, #24]
   1730c:	ldrb	r3, [r9]
   17310:	cmp	r3, #46	; 0x2e
   17314:	bne	16f90 <fwrite_success_callback@@Base+0x2744>
   17318:	ldrb	r3, [r9, #1]
   1731c:	str	r9, [r4, #24]
   17320:	cmp	r3, #42	; 0x2a
   17324:	beq	17610 <fwrite_success_callback@@Base+0x2dc4>
   17328:	ldrb	r3, [r9, #1]
   1732c:	add	r2, r9, #1
   17330:	sub	r3, r3, #48	; 0x30
   17334:	cmp	r3, #9
   17338:	bhi	17358 <fwrite_success_callback@@Base+0x2b0c>
   1733c:	add	r3, r9, #2
   17340:	mov	r2, r3
   17344:	add	r3, r3, #1
   17348:	ldrb	r1, [r2]
   1734c:	sub	r1, r1, #48	; 0x30
   17350:	cmp	r1, #9
   17354:	bls	17340 <fwrite_success_callback@@Base+0x2af4>
   17358:	ldr	r0, [sp, #8]
   1735c:	rsb	r9, r9, r2
   17360:	str	r2, [r4, #28]
   17364:	cmp	r0, r9
   17368:	movcc	r0, r9
   1736c:	ldrb	r3, [r2]
   17370:	str	r0, [sp, #8]
   17374:	mov	r9, r2
   17378:	b	16f90 <fwrite_success_callback@@Base+0x2744>
   1737c:	ldr	r3, [sp, #20]
   17380:	cmp	r3, #0
   17384:	lslge	r3, r3, #1
   17388:	mvnlt	r3, #0
   1738c:	str	r3, [sp, #20]
   17390:	ldr	r3, [sp, #20]
   17394:	cmp	r3, sl
   17398:	bhi	17834 <fwrite_success_callback@@Base+0x2fe8>
   1739c:	adds	r3, sl, #1
   173a0:	str	r3, [sp, #20]
   173a4:	bcc	17834 <fwrite_success_callback@@Base+0x2fe8>
   173a8:	ldr	r2, [r5, #4]
   173ac:	ldr	r3, [sp, #12]
   173b0:	cmp	r3, r2
   173b4:	beq	173c0 <fwrite_success_callback@@Base+0x2b74>
   173b8:	mov	r0, r2
   173bc:	bl	11088 <free@plt>
   173c0:	ldr	r0, [r7, #4]
   173c4:	ldr	r3, [sp, #16]
   173c8:	cmp	r3, r0
   173cc:	beq	173d4 <fwrite_success_callback@@Base+0x2b88>
   173d0:	bl	11088 <free@plt>
   173d4:	bl	11214 <__errno_location@plt>
   173d8:	mov	r3, #12
   173dc:	mvn	r2, #0
   173e0:	str	r3, [r0]
   173e4:	b	16e68 <fwrite_success_callback@@Base+0x261c>
   173e8:	ldr	r3, [sp, #24]
   173ec:	add	r9, r2, #1
   173f0:	str	r2, [r4, #12]
   173f4:	str	r9, [r4, #16]
   173f8:	cmp	r3, #0
   173fc:	ldrb	sl, [r2, #1]
   17400:	moveq	r3, #1
   17404:	str	r3, [sp, #24]
   17408:	sub	sl, sl, #48	; 0x30
   1740c:	uxtb	r3, sl
   17410:	cmp	r3, #9
   17414:	bls	17488 <fwrite_success_callback@@Base+0x2c3c>
   17418:	ldr	r3, [sp, #36]	; 0x24
   1741c:	cmn	r3, #1
   17420:	str	r3, [r4, #20]
   17424:	add	r3, r3, #1
   17428:	beq	17728 <fwrite_success_callback@@Base+0x2edc>
   1742c:	ldr	sl, [sp, #36]	; 0x24
   17430:	str	r3, [sp, #36]	; 0x24
   17434:	ldr	r3, [sp, #20]
   17438:	cmp	r3, sl
   1743c:	bls	1737c <fwrite_success_callback@@Base+0x2b30>
   17440:	ldr	r0, [r5, #4]
   17444:	ldr	r3, [r5]
   17448:	cmp	r3, sl
   1744c:	bhi	1746c <fwrite_success_callback@@Base+0x2c20>
   17450:	add	r2, r3, #1
   17454:	str	r2, [r5]
   17458:	str	r6, [r0, r3, lsl #4]
   1745c:	ldr	r3, [r5]
   17460:	ldr	r0, [r5, #4]
   17464:	cmp	r3, sl
   17468:	bls	17450 <fwrite_success_callback@@Base+0x2c04>
   1746c:	ldr	r3, [r0, sl, lsl #4]
   17470:	cmp	r3, #0
   17474:	bne	17828 <fwrite_success_callback@@Base+0x2fdc>
   17478:	mov	r1, #5
   1747c:	str	r1, [r0, sl, lsl #4]
   17480:	ldrb	r3, [r9]
   17484:	b	16f88 <fwrite_success_callback@@Base+0x273c>
   17488:	mov	r1, r9
   1748c:	ldrb	r3, [r1, #1]!
   17490:	sub	r0, r3, #48	; 0x30
   17494:	cmp	r0, #9
   17498:	bls	1748c <fwrite_success_callback@@Base+0x2c40>
   1749c:	cmp	r3, #36	; 0x24
   174a0:	bne	17418 <fwrite_success_callback@@Base+0x2bcc>
   174a4:	add	r2, r2, #2
   174a8:	mov	r3, #0
   174ac:	add	r1, r3, r3, lsl #2
   174b0:	cmp	r3, ip
   174b4:	mvn	r3, #0
   174b8:	lslls	r3, r1, #1
   174bc:	adds	r3, r3, sl
   174c0:	ldrb	sl, [r2], #1
   174c4:	sub	sl, sl, #48	; 0x30
   174c8:	mvncs	r3, #0
   174cc:	uxtb	r1, sl
   174d0:	cmp	r1, #9
   174d4:	bls	174ac <fwrite_success_callback@@Base+0x2c60>
   174d8:	sub	r3, r3, #1
   174dc:	cmn	r3, #3
   174e0:	bhi	17728 <fwrite_success_callback@@Base+0x2edc>
   174e4:	str	r3, [r4, #20]
   174e8:	mov	r9, r2
   174ec:	mov	sl, r3
   174f0:	b	17434 <fwrite_success_callback@@Base+0x2be8>
   174f4:	cmp	sl, #7
   174f8:	movle	sl, #15
   174fc:	movgt	sl, #16
   17500:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17504:	cmp	sl, #15
   17508:	movgt	fp, r3
   1750c:	movgt	sl, #12
   17510:	bgt	1715c <fwrite_success_callback@@Base+0x2910>
   17514:	tst	sl, #4
   17518:	mov	fp, r3
   1751c:	moveq	sl, #11
   17520:	movne	sl, #12
   17524:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17528:	mov	sl, #14
   1752c:	mov	fp, #99	; 0x63
   17530:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17534:	mov	sl, #16
   17538:	mov	fp, #115	; 0x73
   1753c:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17540:	cmp	sl, #15
   17544:	bgt	17764 <fwrite_success_callback@@Base+0x2f18>
   17548:	tst	sl, #4
   1754c:	bne	17764 <fwrite_success_callback@@Base+0x2f18>
   17550:	cmp	sl, #7
   17554:	movgt	fp, r3
   17558:	movgt	sl, #8
   1755c:	bgt	1715c <fwrite_success_callback@@Base+0x2910>
   17560:	tst	sl, #2
   17564:	movne	fp, r3
   17568:	movne	sl, #2
   1756c:	bne	1715c <fwrite_success_callback@@Base+0x2910>
   17570:	tst	sl, #1
   17574:	mov	fp, r3
   17578:	moveq	sl, #6
   1757c:	movne	sl, #4
   17580:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17584:	cmp	sl, #15
   17588:	bgt	17770 <fwrite_success_callback@@Base+0x2f24>
   1758c:	tst	sl, #4
   17590:	bne	17770 <fwrite_success_callback@@Base+0x2f24>
   17594:	cmp	sl, #7
   17598:	movgt	fp, r3
   1759c:	movgt	sl, #7
   175a0:	bgt	1715c <fwrite_success_callback@@Base+0x2910>
   175a4:	tst	sl, #2
   175a8:	movne	fp, r3
   175ac:	movne	sl, #1
   175b0:	bne	1715c <fwrite_success_callback@@Base+0x2910>
   175b4:	tst	sl, #1
   175b8:	mov	fp, r3
   175bc:	moveq	sl, #5
   175c0:	movne	sl, #3
   175c4:	b	1715c <fwrite_success_callback@@Base+0x2910>
   175c8:	cmp	sl, #7
   175cc:	movle	sl, #13
   175d0:	movgt	sl, #14
   175d4:	b	1715c <fwrite_success_callback@@Base+0x2910>
   175d8:	cmp	sl, #15
   175dc:	bgt	1777c <fwrite_success_callback@@Base+0x2f30>
   175e0:	tst	sl, #4
   175e4:	bne	1777c <fwrite_success_callback@@Base+0x2f30>
   175e8:	cmp	sl, #7
   175ec:	movgt	sl, #21
   175f0:	bgt	1715c <fwrite_success_callback@@Base+0x2910>
   175f4:	tst	sl, #2
   175f8:	movne	sl, #18
   175fc:	bne	1715c <fwrite_success_callback@@Base+0x2910>
   17600:	tst	sl, #1
   17604:	moveq	sl, #20
   17608:	movne	sl, #19
   1760c:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17610:	ldr	r3, [sp, #8]
   17614:	add	sl, r9, #2
   17618:	str	sl, [r4, #28]
   1761c:	ldrb	r0, [r9, #2]
   17620:	cmp	r3, #1
   17624:	sub	r0, r0, #48	; 0x30
   17628:	movls	r3, #2
   1762c:	str	r3, [sp, #8]
   17630:	uxtb	r3, r0
   17634:	cmp	r3, #9
   17638:	bhi	17784 <fwrite_success_callback@@Base+0x2f38>
   1763c:	mov	r2, sl
   17640:	ldrb	r3, [r2, #1]!
   17644:	sub	r1, r3, #48	; 0x30
   17648:	cmp	r1, #9
   1764c:	bls	17640 <fwrite_success_callback@@Base+0x2df4>
   17650:	cmp	r3, #36	; 0x24
   17654:	bne	17784 <fwrite_success_callback@@Base+0x2f38>
   17658:	add	r9, r9, #3
   1765c:	mov	r3, #0
   17660:	add	r2, r3, r3, lsl #2
   17664:	cmp	r3, ip
   17668:	mvn	r3, #0
   1766c:	lslls	r3, r2, #1
   17670:	adds	r3, r3, r0
   17674:	ldrb	r0, [r9], #1
   17678:	sub	r0, r0, #48	; 0x30
   1767c:	mvncs	r3, #0
   17680:	uxtb	r2, r0
   17684:	cmp	r2, #9
   17688:	bls	17660 <fwrite_success_callback@@Base+0x2e14>
   1768c:	sub	r3, r3, #1
   17690:	cmn	r3, #3
   17694:	bhi	17728 <fwrite_success_callback@@Base+0x2edc>
   17698:	mov	sl, r9
   1769c:	mov	r9, r3
   176a0:	str	r3, [r4, #32]
   176a4:	ldr	r3, [sp, #20]
   176a8:	cmp	r3, r9
   176ac:	bhi	178bc <fwrite_success_callback@@Base+0x3070>
   176b0:	ldr	r3, [sp, #20]
   176b4:	cmp	r3, #0
   176b8:	blt	173a8 <fwrite_success_callback@@Base+0x2b5c>
   176bc:	lsl	r3, r3, #1
   176c0:	str	r3, [sp, #20]
   176c4:	cmp	r3, r9
   176c8:	bhi	176d8 <fwrite_success_callback@@Base+0x2e8c>
   176cc:	adds	r3, r9, #1
   176d0:	str	r3, [sp, #20]
   176d4:	bcs	173a8 <fwrite_success_callback@@Base+0x2b5c>
   176d8:	ldr	r3, [sp, #20]
   176dc:	cmn	r3, #-268435455	; 0xf0000001
   176e0:	bhi	173a8 <fwrite_success_callback@@Base+0x2b5c>
   176e4:	ldr	r0, [r5, #4]
   176e8:	lsl	r1, r3, #4
   176ec:	ldr	r3, [sp, #12]
   176f0:	cmp	r3, r0
   176f4:	beq	179c0 <fwrite_success_callback@@Base+0x3174>
   176f8:	str	ip, [sp, #4]
   176fc:	bl	110f4 <realloc@plt>
   17700:	ldr	r2, [r5, #4]
   17704:	ldr	ip, [sp, #4]
   17708:	subs	r3, r0, #0
   1770c:	beq	173ac <fwrite_success_callback@@Base+0x2b60>
   17710:	ldr	r0, [sp, #12]
   17714:	cmp	r0, r2
   17718:	beq	179d8 <fwrite_success_callback@@Base+0x318c>
   1771c:	mov	r0, r3
   17720:	str	r3, [r5, #4]
   17724:	b	178c0 <fwrite_success_callback@@Base+0x3074>
   17728:	ldr	r0, [r5, #4]
   1772c:	ldr	r3, [sp, #12]
   17730:	cmp	r3, r0
   17734:	beq	1773c <fwrite_success_callback@@Base+0x2ef0>
   17738:	bl	11088 <free@plt>
   1773c:	ldr	r0, [r7, #4]
   17740:	ldr	r3, [sp, #16]
   17744:	cmp	r3, r0
   17748:	beq	17750 <fwrite_success_callback@@Base+0x2f04>
   1774c:	bl	11088 <free@plt>
   17750:	bl	11214 <__errno_location@plt>
   17754:	mov	r3, #22
   17758:	mvn	r2, #0
   1775c:	str	r3, [r0]
   17760:	b	16e68 <fwrite_success_callback@@Base+0x261c>
   17764:	mov	fp, r3
   17768:	mov	sl, #10
   1776c:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17770:	mov	fp, r3
   17774:	mov	sl, #9
   17778:	b	1715c <fwrite_success_callback@@Base+0x2910>
   1777c:	mov	sl, #22
   17780:	b	1715c <fwrite_success_callback@@Base+0x2910>
   17784:	ldr	r9, [r4, #32]
   17788:	cmn	r9, #1
   1778c:	bne	176a4 <fwrite_success_callback@@Base+0x2e58>
   17790:	ldr	r3, [sp, #36]	; 0x24
   17794:	cmn	r3, #1
   17798:	str	r3, [r4, #32]
   1779c:	add	r3, r3, #1
   177a0:	beq	17728 <fwrite_success_callback@@Base+0x2edc>
   177a4:	ldr	r9, [sp, #36]	; 0x24
   177a8:	str	r3, [sp, #36]	; 0x24
   177ac:	b	176a4 <fwrite_success_callback@@Base+0x2e58>
   177b0:	ldr	r3, [sp, #20]
   177b4:	cmp	r3, #0
   177b8:	blt	173a8 <fwrite_success_callback@@Base+0x2b5c>
   177bc:	lsl	r3, r3, #1
   177c0:	str	r3, [sp, #20]
   177c4:	cmp	r3, r8
   177c8:	bhi	177d8 <fwrite_success_callback@@Base+0x2f8c>
   177cc:	adds	r3, r8, #1
   177d0:	str	r3, [sp, #20]
   177d4:	bcs	173a8 <fwrite_success_callback@@Base+0x2b5c>
   177d8:	ldr	r3, [sp, #20]
   177dc:	cmn	r3, #-268435455	; 0xf0000001
   177e0:	bhi	173a8 <fwrite_success_callback@@Base+0x2b5c>
   177e4:	ldr	r0, [r5, #4]
   177e8:	lsl	r1, r3, #4
   177ec:	ldr	r3, [sp, #12]
   177f0:	cmp	r3, r0
   177f4:	beq	1791c <fwrite_success_callback@@Base+0x30d0>
   177f8:	str	ip, [sp, #4]
   177fc:	bl	110f4 <realloc@plt>
   17800:	ldr	r2, [r5, #4]
   17804:	ldr	ip, [sp, #4]
   17808:	subs	r3, r0, #0
   1780c:	beq	173ac <fwrite_success_callback@@Base+0x2b60>
   17810:	ldr	r0, [sp, #12]
   17814:	cmp	r0, r2
   17818:	beq	17934 <fwrite_success_callback@@Base+0x30e8>
   1781c:	mov	r0, r3
   17820:	str	r3, [r5, #4]
   17824:	b	17178 <fwrite_success_callback@@Base+0x292c>
   17828:	cmp	r3, #5
   1782c:	beq	1730c <fwrite_success_callback@@Base+0x2ac0>
   17830:	b	1772c <fwrite_success_callback@@Base+0x2ee0>
   17834:	ldr	r3, [sp, #20]
   17838:	cmn	r3, #-268435455	; 0xf0000001
   1783c:	bhi	173a8 <fwrite_success_callback@@Base+0x2b5c>
   17840:	ldr	r0, [r5, #4]
   17844:	lsl	r1, r3, #4
   17848:	ldr	r3, [sp, #12]
   1784c:	cmp	r3, r0
   17850:	beq	17984 <fwrite_success_callback@@Base+0x3138>
   17854:	str	ip, [sp, #4]
   17858:	bl	110f4 <realloc@plt>
   1785c:	ldr	r2, [r5, #4]
   17860:	ldr	ip, [sp, #4]
   17864:	subs	r3, r0, #0
   17868:	beq	173ac <fwrite_success_callback@@Base+0x2b60>
   1786c:	ldr	r0, [sp, #12]
   17870:	cmp	r0, r2
   17874:	beq	1799c <fwrite_success_callback@@Base+0x3150>
   17878:	mov	r0, r3
   1787c:	str	r3, [r5, #4]
   17880:	b	17444 <fwrite_success_callback@@Base+0x2bf8>
   17884:	ldr	r3, [sp, #36]	; 0x24
   17888:	cmn	r3, #1
   1788c:	str	r3, [r4, #40]	; 0x28
   17890:	add	r3, r3, #1
   17894:	beq	17728 <fwrite_success_callback@@Base+0x2edc>
   17898:	ldr	r8, [sp, #36]	; 0x24
   1789c:	str	r3, [sp, #36]	; 0x24
   178a0:	b	17168 <fwrite_success_callback@@Base+0x291c>
   178a4:	mov	r0, r1
   178a8:	str	ip, [sp, #4]
   178ac:	bl	11190 <malloc@plt>
   178b0:	ldr	ip, [sp, #4]
   178b4:	mov	r4, r0
   178b8:	b	17224 <fwrite_success_callback@@Base+0x29d8>
   178bc:	ldr	r0, [r5, #4]
   178c0:	ldr	r3, [r5]
   178c4:	cmp	r3, r9
   178c8:	bhi	178e8 <fwrite_success_callback@@Base+0x309c>
   178cc:	add	r2, r3, #1
   178d0:	str	r2, [r5]
   178d4:	str	r6, [r0, r3, lsl #4]
   178d8:	ldr	r3, [r5]
   178dc:	ldr	r0, [r5, #4]
   178e0:	cmp	r3, r9
   178e4:	bls	178cc <fwrite_success_callback@@Base+0x3080>
   178e8:	ldr	r3, [r0, r9, lsl #4]
   178ec:	cmp	r3, #0
   178f0:	bne	17908 <fwrite_success_callback@@Base+0x30bc>
   178f4:	mov	r1, #5
   178f8:	str	r1, [r0, r9, lsl #4]
   178fc:	mov	r9, sl
   17900:	ldrb	r3, [sl]
   17904:	b	16f90 <fwrite_success_callback@@Base+0x2744>
   17908:	cmp	r3, #5
   1790c:	bne	1772c <fwrite_success_callback@@Base+0x2ee0>
   17910:	ldrb	r3, [sl]
   17914:	mov	r9, sl
   17918:	b	16f90 <fwrite_success_callback@@Base+0x2744>
   1791c:	mov	r0, r1
   17920:	str	ip, [sp, #4]
   17924:	bl	11190 <malloc@plt>
   17928:	ldr	ip, [sp, #4]
   1792c:	subs	r3, r0, #0
   17930:	beq	179fc <fwrite_success_callback@@Base+0x31b0>
   17934:	ldr	r2, [r5]
   17938:	mov	r0, r3
   1793c:	ldr	r1, [sp, #12]
   17940:	str	ip, [sp, #4]
   17944:	lsl	r2, r2, #4
   17948:	bl	110ac <memcpy@plt>
   1794c:	ldr	ip, [sp, #4]
   17950:	mov	r3, r0
   17954:	b	1781c <fwrite_success_callback@@Base+0x2fd0>
   17958:	mov	r2, #0
   1795c:	b	172f8 <fwrite_success_callback@@Base+0x2aac>
   17960:	ldr	r2, [r7]
   17964:	mov	r3, #44	; 0x2c
   17968:	mov	r0, r4
   1796c:	ldr	r1, [sp, #16]
   17970:	str	ip, [sp, #4]
   17974:	mul	r2, r3, r2
   17978:	bl	110ac <memcpy@plt>
   1797c:	ldr	ip, [sp, #4]
   17980:	b	1723c <fwrite_success_callback@@Base+0x29f0>
   17984:	mov	r0, r1
   17988:	str	ip, [sp, #4]
   1798c:	bl	11190 <malloc@plt>
   17990:	ldr	ip, [sp, #4]
   17994:	subs	r3, r0, #0
   17998:	beq	179fc <fwrite_success_callback@@Base+0x31b0>
   1799c:	ldr	r2, [r5]
   179a0:	mov	r0, r3
   179a4:	ldr	r1, [sp, #12]
   179a8:	str	ip, [sp, #4]
   179ac:	lsl	r2, r2, #4
   179b0:	bl	110ac <memcpy@plt>
   179b4:	ldr	ip, [sp, #4]
   179b8:	mov	r3, r0
   179bc:	b	17878 <fwrite_success_callback@@Base+0x302c>
   179c0:	mov	r0, r1
   179c4:	str	ip, [sp, #4]
   179c8:	bl	11190 <malloc@plt>
   179cc:	ldr	ip, [sp, #4]
   179d0:	subs	r3, r0, #0
   179d4:	beq	179fc <fwrite_success_callback@@Base+0x31b0>
   179d8:	ldr	r2, [r5]
   179dc:	mov	r0, r3
   179e0:	ldr	r1, [sp, #12]
   179e4:	str	ip, [sp, #4]
   179e8:	lsl	r2, r2, #4
   179ec:	bl	110ac <memcpy@plt>
   179f0:	ldr	ip, [sp, #4]
   179f4:	mov	r3, r0
   179f8:	b	1771c <fwrite_success_callback@@Base+0x2ed0>
   179fc:	ldr	r2, [sp, #12]
   17a00:	b	173ac <fwrite_success_callback@@Base+0x2b60>
   17a04:	subs	r2, r1, #1
   17a08:	bxeq	lr
   17a0c:	bcc	17be4 <fwrite_success_callback@@Base+0x3398>
   17a10:	cmp	r0, r1
   17a14:	bls	17bc8 <fwrite_success_callback@@Base+0x337c>
   17a18:	tst	r1, r2
   17a1c:	beq	17bd4 <fwrite_success_callback@@Base+0x3388>
   17a20:	clz	r3, r0
   17a24:	clz	r2, r1
   17a28:	sub	r3, r2, r3
   17a2c:	rsbs	r3, r3, #31
   17a30:	addne	r3, r3, r3, lsl #1
   17a34:	mov	r2, #0
   17a38:	addne	pc, pc, r3, lsl #2
   17a3c:	nop	{0}
   17a40:	cmp	r0, r1, lsl #31
   17a44:	adc	r2, r2, r2
   17a48:	subcs	r0, r0, r1, lsl #31
   17a4c:	cmp	r0, r1, lsl #30
   17a50:	adc	r2, r2, r2
   17a54:	subcs	r0, r0, r1, lsl #30
   17a58:	cmp	r0, r1, lsl #29
   17a5c:	adc	r2, r2, r2
   17a60:	subcs	r0, r0, r1, lsl #29
   17a64:	cmp	r0, r1, lsl #28
   17a68:	adc	r2, r2, r2
   17a6c:	subcs	r0, r0, r1, lsl #28
   17a70:	cmp	r0, r1, lsl #27
   17a74:	adc	r2, r2, r2
   17a78:	subcs	r0, r0, r1, lsl #27
   17a7c:	cmp	r0, r1, lsl #26
   17a80:	adc	r2, r2, r2
   17a84:	subcs	r0, r0, r1, lsl #26
   17a88:	cmp	r0, r1, lsl #25
   17a8c:	adc	r2, r2, r2
   17a90:	subcs	r0, r0, r1, lsl #25
   17a94:	cmp	r0, r1, lsl #24
   17a98:	adc	r2, r2, r2
   17a9c:	subcs	r0, r0, r1, lsl #24
   17aa0:	cmp	r0, r1, lsl #23
   17aa4:	adc	r2, r2, r2
   17aa8:	subcs	r0, r0, r1, lsl #23
   17aac:	cmp	r0, r1, lsl #22
   17ab0:	adc	r2, r2, r2
   17ab4:	subcs	r0, r0, r1, lsl #22
   17ab8:	cmp	r0, r1, lsl #21
   17abc:	adc	r2, r2, r2
   17ac0:	subcs	r0, r0, r1, lsl #21
   17ac4:	cmp	r0, r1, lsl #20
   17ac8:	adc	r2, r2, r2
   17acc:	subcs	r0, r0, r1, lsl #20
   17ad0:	cmp	r0, r1, lsl #19
   17ad4:	adc	r2, r2, r2
   17ad8:	subcs	r0, r0, r1, lsl #19
   17adc:	cmp	r0, r1, lsl #18
   17ae0:	adc	r2, r2, r2
   17ae4:	subcs	r0, r0, r1, lsl #18
   17ae8:	cmp	r0, r1, lsl #17
   17aec:	adc	r2, r2, r2
   17af0:	subcs	r0, r0, r1, lsl #17
   17af4:	cmp	r0, r1, lsl #16
   17af8:	adc	r2, r2, r2
   17afc:	subcs	r0, r0, r1, lsl #16
   17b00:	cmp	r0, r1, lsl #15
   17b04:	adc	r2, r2, r2
   17b08:	subcs	r0, r0, r1, lsl #15
   17b0c:	cmp	r0, r1, lsl #14
   17b10:	adc	r2, r2, r2
   17b14:	subcs	r0, r0, r1, lsl #14
   17b18:	cmp	r0, r1, lsl #13
   17b1c:	adc	r2, r2, r2
   17b20:	subcs	r0, r0, r1, lsl #13
   17b24:	cmp	r0, r1, lsl #12
   17b28:	adc	r2, r2, r2
   17b2c:	subcs	r0, r0, r1, lsl #12
   17b30:	cmp	r0, r1, lsl #11
   17b34:	adc	r2, r2, r2
   17b38:	subcs	r0, r0, r1, lsl #11
   17b3c:	cmp	r0, r1, lsl #10
   17b40:	adc	r2, r2, r2
   17b44:	subcs	r0, r0, r1, lsl #10
   17b48:	cmp	r0, r1, lsl #9
   17b4c:	adc	r2, r2, r2
   17b50:	subcs	r0, r0, r1, lsl #9
   17b54:	cmp	r0, r1, lsl #8
   17b58:	adc	r2, r2, r2
   17b5c:	subcs	r0, r0, r1, lsl #8
   17b60:	cmp	r0, r1, lsl #7
   17b64:	adc	r2, r2, r2
   17b68:	subcs	r0, r0, r1, lsl #7
   17b6c:	cmp	r0, r1, lsl #6
   17b70:	adc	r2, r2, r2
   17b74:	subcs	r0, r0, r1, lsl #6
   17b78:	cmp	r0, r1, lsl #5
   17b7c:	adc	r2, r2, r2
   17b80:	subcs	r0, r0, r1, lsl #5
   17b84:	cmp	r0, r1, lsl #4
   17b88:	adc	r2, r2, r2
   17b8c:	subcs	r0, r0, r1, lsl #4
   17b90:	cmp	r0, r1, lsl #3
   17b94:	adc	r2, r2, r2
   17b98:	subcs	r0, r0, r1, lsl #3
   17b9c:	cmp	r0, r1, lsl #2
   17ba0:	adc	r2, r2, r2
   17ba4:	subcs	r0, r0, r1, lsl #2
   17ba8:	cmp	r0, r1, lsl #1
   17bac:	adc	r2, r2, r2
   17bb0:	subcs	r0, r0, r1, lsl #1
   17bb4:	cmp	r0, r1
   17bb8:	adc	r2, r2, r2
   17bbc:	subcs	r0, r0, r1
   17bc0:	mov	r0, r2
   17bc4:	bx	lr
   17bc8:	moveq	r0, #1
   17bcc:	movne	r0, #0
   17bd0:	bx	lr
   17bd4:	clz	r2, r1
   17bd8:	rsb	r2, r2, #31
   17bdc:	lsr	r0, r0, r2
   17be0:	bx	lr
   17be4:	cmp	r0, #0
   17be8:	mvnne	r0, #0
   17bec:	b	17c10 <fwrite_success_callback@@Base+0x33c4>
   17bf0:	cmp	r1, #0
   17bf4:	beq	17be4 <fwrite_success_callback@@Base+0x3398>
   17bf8:	push	{r0, r1, lr}
   17bfc:	bl	17a04 <fwrite_success_callback@@Base+0x31b8>
   17c00:	pop	{r1, r2, lr}
   17c04:	mul	r3, r2, r0
   17c08:	sub	r1, r1, r3
   17c0c:	bx	lr
   17c10:	push	{r1, lr}
   17c14:	mov	r0, #8
   17c18:	bl	11058 <raise@plt>
   17c1c:	pop	{r1, pc}
   17c20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17c24:	mov	r7, r0
   17c28:	ldr	r6, [pc, #76]	; 17c7c <fwrite_success_callback@@Base+0x3430>
   17c2c:	mov	r8, r1
   17c30:	ldr	r5, [pc, #72]	; 17c80 <fwrite_success_callback@@Base+0x3434>
   17c34:	mov	r9, r2
   17c38:	add	r6, pc, r6
   17c3c:	bl	11014 <fdopen@plt-0x20>
   17c40:	add	r5, pc, r5
   17c44:	rsb	r6, r5, r6
   17c48:	asrs	r6, r6, #2
   17c4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   17c50:	sub	r5, r5, #4
   17c54:	mov	r4, #0
   17c58:	add	r4, r4, #1
   17c5c:	ldr	r3, [r5, #4]!
   17c60:	mov	r0, r7
   17c64:	mov	r1, r8
   17c68:	mov	r2, r9
   17c6c:	blx	r3
   17c70:	cmp	r4, r6
   17c74:	bne	17c58 <fwrite_success_callback@@Base+0x340c>
   17c78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17c7c:	muleq	r1, ip, r2
   17c80:	muleq	r1, r0, r2
   17c84:	bx	lr
   17c88:	ldr	r3, [pc, #28]	; 17cac <fwrite_success_callback@@Base+0x3460>
   17c8c:	mov	r1, #0
   17c90:	ldr	r2, [pc, #24]	; 17cb0 <fwrite_success_callback@@Base+0x3464>
   17c94:	add	r3, pc, r3
   17c98:	ldr	r3, [r3, r2]
   17c9c:	cmp	r3, #0
   17ca0:	ldrne	r2, [r3]
   17ca4:	moveq	r2, r3
   17ca8:	b	11220 <__cxa_atexit@plt>
   17cac:	andeq	r1, r1, r4, ror #6
   17cb0:	andeq	r0, r0, r8, lsl r1

Disassembly of section .fini:

00017cb4 <.fini>:
   17cb4:	push	{r3, lr}
   17cb8:	pop	{r3, pc}
