
centos-preinstalled/cvt:     file format elf32-littlearm


Disassembly of section .init:

00010930 <_init@@Base>:
   10930:	push	{r3, lr}
   10934:	bl	112a4 <abort@plt+0x84c>
   10938:	pop	{r3, pc}

Disassembly of section .plt:

0001093c <calloc@plt-0x14>:
   1093c:	push	{lr}		; (str lr, [sp, #-4]!)
   10940:	ldr	lr, [pc, #4]	; 1094c <_init@@Base+0x1c>
   10944:	add	lr, pc, lr
   10948:	ldr	pc, [lr, #8]!
   1094c:			; <UNDEFINED> instruction: 0x000126b4

00010950 <calloc@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #73728	; 0x12000
   10958:	ldr	pc, [ip, #1716]!	; 0x6b4

0001095c <raise@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #73728	; 0x12000
   10964:	ldr	pc, [ip, #1708]!	; 0x6ac

00010968 <strcmp@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #73728	; 0x12000
   10970:	ldr	pc, [ip, #1700]!	; 0x6a4

00010974 <strtol@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #73728	; 0x12000
   1097c:	ldr	pc, [ip, #1692]!	; 0x69c

00010980 <__vsnprintf_chk@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1684]!	; 0x694

0001098c <__stack_chk_fail@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1676]!	; 0x68c

00010998 <perror@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1668]!	; 0x684

000109a4 <fwrite@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1660]!	; 0x67c

000109b0 <floor@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1652]!	; 0x674

000109bc <malloc@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1644]!	; 0x66c

000109c8 <__libc_start_main@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1636]!	; 0x664

000109d4 <strerror@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1628]!	; 0x65c

000109e0 <__vfprintf_chk@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1620]!	; 0x654

000109ec <__gmon_start__@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1612]!	; 0x64c

000109f8 <exit@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1604]!	; 0x644

00010a04 <__errno_location@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1596]!	; 0x63c

00010a10 <__vasprintf_chk@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1588]!	; 0x634

00010a1c <putchar@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1580]!	; 0x62c

00010a28 <__printf_chk@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1572]!	; 0x624

00010a34 <strtod@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1564]!	; 0x61c

00010a40 <__fprintf_chk@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1556]!	; 0x614

00010a4c <fputc@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1548]!	; 0x60c

00010a58 <abort@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1540]!	; 0x604

Disassembly of section .text:

00010a68 <.text>:
   10a68:	sub	r3, r0, #3
   10a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a70:	vpush	{d8-d9}
   10a74:	cmp	r3, #4
   10a78:	sub	sp, sp, #52	; 0x34
   10a7c:	mov	sl, r0
   10a80:	str	r1, [sp, #40]	; 0x28
   10a84:	bhi	11134 <abort@plt+0x6dc>
   10a88:	ldr	fp, [sp, #40]	; 0x28
   10a8c:	mov	r7, #0
   10a90:	mov	r6, r7
   10a94:	mov	r8, r7
   10a98:	mov	r9, r7
   10a9c:	mov	r5, #1
   10aa0:	str	r7, [sp, #44]	; 0x2c
   10aa4:	vldr	s18, [pc, #956]	; 10e68 <abort@plt+0x410>
   10aa8:	ldr	r4, [fp, #4]!
   10aac:	ldrb	r2, [r4]
   10ab0:	cmp	r2, #45	; 0x2d
   10ab4:	beq	10b0c <abort@plt+0xb4>
   10ab8:	movw	r1, #9044	; 0x2354
   10abc:	mov	r0, r4
   10ac0:	movt	r1, #1
   10ac4:	bl	10968 <strcmp@plt>
   10ac8:	cmp	r0, #0
   10acc:	beq	10b38 <abort@plt+0xe0>
   10ad0:	movw	r1, #8636	; 0x21bc
   10ad4:	mov	r0, r4
   10ad8:	movt	r1, #1
   10adc:	bl	10968 <strcmp@plt>
   10ae0:	cmp	r0, #0
   10ae4:	beq	10f44 <abort@plt+0x4ec>
   10ae8:	movw	r1, #9056	; 0x2360
   10aec:	mov	r0, r4
   10af0:	movt	r1, #1
   10af4:	bl	10968 <strcmp@plt>
   10af8:	cmp	r0, #0
   10afc:	bne	10ed4 <abort@plt+0x47c>
   10b00:	mov	r3, #1
   10b04:	str	r3, [sp, #44]	; 0x2c
   10b08:	b	10b3c <abort@plt+0xe4>
   10b0c:	ldrb	r2, [r4, #1]
   10b10:	cmp	r2, #114	; 0x72
   10b14:	beq	10e44 <abort@plt+0x3ec>
   10b18:	movw	r1, #9044	; 0x2354
   10b1c:	mov	r0, r4
   10b20:	movt	r1, #1
   10b24:	str	r2, [sp, #36]	; 0x24
   10b28:	bl	10968 <strcmp@plt>
   10b2c:	ldr	r2, [sp, #36]	; 0x24
   10b30:	cmp	r0, #0
   10b34:	bne	10e7c <abort@plt+0x424>
   10b38:	mov	r6, #1
   10b3c:	add	r5, r5, #1
   10b40:	cmp	r5, sl
   10b44:	bne	10aa8 <abort@plt+0x50>
   10b48:	cmp	r9, #0
   10b4c:	cmpne	r8, #0
   10b50:	beq	110f4 <abort@plt+0x69c>
   10b54:	vcmp.f32	s18, #0.0
   10b58:	vldr	s15, [pc, #780]	; 10e6c <abort@plt+0x414>
   10b5c:	vmrs	APSR_nzcv, fpscr
   10b60:	vmoveq.f32	s18, s15
   10b64:	tst	r9, #7
   10b68:	bicne	r9, r9, #7
   10b6c:	addne	r9, r9, #8
   10b70:	cmp	r6, #0
   10b74:	beq	10b98 <abort@plt+0x140>
   10b78:	vcvt.f64.f32	d8, s18
   10b7c:	vldr	d7, [pc, #724]	; 10e58 <abort@plt+0x400>
   10b80:	vdiv.f64	d8, d8, d7
   10b84:	vmov.f64	d0, d8
   10b88:	bl	109b0 <floor@plt>
   10b8c:	vcmp.f64	d8, d0
   10b90:	vmrs	APSR_nzcv, fpscr
   10b94:	bne	110d4 <abort@plt+0x67c>
   10b98:	mov	r0, r8
   10b9c:	mov	r1, #3
   10ba0:	bl	11f24 <abort@plt+0x14cc>
   10ba4:	cmp	r1, #0
   10ba8:	beq	10f5c <abort@plt+0x504>
   10bac:	mov	r0, r8
   10bb0:	mov	r1, #9
   10bb4:	bl	11f24 <abort@plt+0x14cc>
   10bb8:	subs	r4, r1, #0
   10bbc:	bne	10bd4 <abort@plt+0x17c>
   10bc0:	lsl	r0, r8, #4
   10bc4:	mov	r1, #9
   10bc8:	bl	11d04 <abort@plt+0x12ac>
   10bcc:	cmp	r9, r0
   10bd0:	beq	10f70 <abort@plt+0x518>
   10bd4:	mov	r0, r8
   10bd8:	mov	r1, #10
   10bdc:	bl	11f24 <abort@plt+0x14cc>
   10be0:	cmp	r1, #0
   10be4:	bne	10bfc <abort@plt+0x1a4>
   10be8:	lsl	r0, r8, #4
   10bec:	mov	r1, #10
   10bf0:	bl	11d04 <abort@plt+0x12ac>
   10bf4:	cmp	r9, r0
   10bf8:	beq	10f70 <abort@plt+0x518>
   10bfc:	tst	r8, #3
   10c00:	bne	10c1c <abort@plt+0x1c4>
   10c04:	add	r3, r8, r8, lsl #2
   10c08:	cmp	r3, #0
   10c0c:	add	r2, r3, #3
   10c10:	movlt	r3, r2
   10c14:	cmp	r9, r3, asr #2
   10c18:	beq	10f70 <abort@plt+0x518>
   10c1c:	cmp	r4, #0
   10c20:	bne	10c3c <abort@plt+0x1e4>
   10c24:	mov	r0, #15
   10c28:	mov	r1, #9
   10c2c:	mul	r0, r0, r8
   10c30:	bl	11d04 <abort@plt+0x12ac>
   10c34:	cmp	r9, r0
   10c38:	beq	10f70 <abort@plt+0x518>
   10c3c:	ldr	r3, [sp, #44]	; 0x2c
   10c40:	cmp	r3, #0
   10c44:	ldreq	r5, [sp, #44]	; 0x2c
   10c48:	bne	11198 <abort@plt+0x740>
   10c4c:	vldr	s15, [pc, #540]	; 10e70 <abort@plt+0x418>
   10c50:	vcmp.f32	s18, s15
   10c54:	vldr	s15, [pc, #528]	; 10e6c <abort@plt+0x414>
   10c58:	vmrs	APSR_nzcv, fpscr
   10c5c:	vcmp.f32	s18, s15
   10c60:	moveq	r3, #0
   10c64:	movne	r3, #1
   10c68:	vmrs	APSR_nzcv, fpscr
   10c6c:	moveq	r3, #0
   10c70:	andne	r3, r3, #1
   10c74:	cmp	r3, #0
   10c78:	beq	10f78 <abort@plt+0x520>
   10c7c:	vldr	s15, [pc, #496]	; 10e74 <abort@plt+0x41c>
   10c80:	vcmp.f32	s18, s15
   10c84:	vldr	s15, [pc, #492]	; 10e78 <abort@plt+0x420>
   10c88:	vmrs	APSR_nzcv, fpscr
   10c8c:	vcmp.f32	s18, s15
   10c90:	moveq	r3, #0
   10c94:	movne	r3, #1
   10c98:	vmrs	APSR_nzcv, fpscr
   10c9c:	moveq	r3, #0
   10ca0:	andne	r3, r3, #1
   10ca4:	cmp	r3, #0
   10ca8:	beq	10f78 <abort@plt+0x520>
   10cac:	ldr	r3, [sp, #44]	; 0x2c
   10cb0:	cmp	r3, #0
   10cb4:	beq	10cd8 <abort@plt+0x280>
   10cb8:	movw	r3, #12404	; 0x3074
   10cbc:	movt	r3, #2
   10cc0:	movw	r0, #8776	; 0x2248
   10cc4:	mov	r1, #1
   10cc8:	ldr	r3, [r3]
   10ccc:	movt	r0, #1
   10cd0:	mov	r2, #64	; 0x40
   10cd4:	bl	109a4 <fwrite@plt>
   10cd8:	mov	r3, r7
   10cdc:	mov	r1, r8
   10ce0:	mov	r2, r6
   10ce4:	mov	r0, r9
   10ce8:	vmov.f32	s0, s18
   10cec:	bl	11510 <abort@plt+0xab8>
   10cf0:	movw	r1, #8844	; 0x228c
   10cf4:	movt	r1, #1
   10cf8:	vldr	s14, [r0, #152]	; 0x98
   10cfc:	vcvt.f64.f32	d7, s14
   10d00:	mov	r4, r0
   10d04:	mov	r0, #1
   10d08:	vstr	d7, [sp]
   10d0c:	ldr	r2, [r4, #24]
   10d10:	ldr	r3, [r4, #44]	; 0x2c
   10d14:	bl	10a28 <__printf_chk@plt>
   10d18:	movw	r1, #8880	; 0x22b0
   10d1c:	mov	r0, #1
   10d20:	movt	r1, #1
   10d24:	bl	10a28 <__printf_chk@plt>
   10d28:	vldr	s15, [r4, #148]	; 0x94
   10d2c:	vcvt.f64.f32	d6, s15
   10d30:	movw	r1, #8888	; 0x22b8
   10d34:	mov	r0, #1
   10d38:	movt	r1, #1
   10d3c:	vmov	r2, r3, d6
   10d40:	bl	10a28 <__printf_chk@plt>
   10d44:	vldr	s13, [r4, #20]
   10d48:	vcvt.f32.s32	s12, s13
   10d4c:	vldr	d7, [pc, #268]	; 10e60 <abort@plt+0x408>
   10d50:	movw	r1, #8908	; 0x22cc
   10d54:	mov	r0, #1
   10d58:	movt	r1, #1
   10d5c:	vcvt.f64.f32	d6, s12
   10d60:	vdiv.f64	d5, d6, d7
   10d64:	vmov	r2, r3, d5
   10d68:	bl	10a28 <__printf_chk@plt>
   10d6c:	mov	r0, #10
   10d70:	bl	10a1c <putchar@plt>
   10d74:	cmp	r6, #0
   10d78:	beq	11110 <abort@plt+0x6b8>
   10d7c:	movw	r1, #8924	; 0x22dc
   10d80:	mov	r2, r9
   10d84:	mov	r3, r8
   10d88:	mov	r0, #1
   10d8c:	movt	r1, #1
   10d90:	bl	10a28 <__printf_chk@plt>
   10d94:	vldr	s12, [r4, #20]
   10d98:	vcvt.f64.s32	d6, s12
   10d9c:	vldr	d7, [pc, #188]	; 10e60 <abort@plt+0x408>
   10da0:	ldr	r3, [r4, #24]
   10da4:	movw	r1, #8968	; 0x2308
   10da8:	mov	r0, #1
   10dac:	movt	r1, #1
   10db0:	str	r3, [sp]
   10db4:	ldr	r3, [r4, #28]
   10db8:	vdiv.f64	d5, d6, d7
   10dbc:	str	r3, [sp, #4]
   10dc0:	ldr	r3, [r4, #32]
   10dc4:	str	r3, [sp, #8]
   10dc8:	ldr	ip, [r4, #36]	; 0x24
   10dcc:	str	ip, [sp, #12]
   10dd0:	ldr	ip, [r4, #44]	; 0x2c
   10dd4:	str	ip, [sp, #16]
   10dd8:	ldr	ip, [r4, #48]	; 0x30
   10ddc:	str	ip, [sp, #20]
   10de0:	ldr	ip, [r4, #52]	; 0x34
   10de4:	str	ip, [sp, #24]
   10de8:	ldr	ip, [r4, #56]	; 0x38
   10dec:	str	ip, [sp, #28]
   10df0:	vmov	r2, r3, d5
   10df4:	bl	10a28 <__printf_chk@plt>
   10df8:	ldr	r3, [r4, #64]	; 0x40
   10dfc:	tst	r3, #16
   10e00:	bne	11208 <abort@plt+0x7b0>
   10e04:	tst	r3, #1
   10e08:	bne	111f0 <abort@plt+0x798>
   10e0c:	tst	r3, #2
   10e10:	bne	111d8 <abort@plt+0x780>
   10e14:	tst	r3, #4
   10e18:	bne	111c0 <abort@plt+0x768>
   10e1c:	tst	r3, #8
   10e20:	beq	10e34 <abort@plt+0x3dc>
   10e24:	movw	r1, #9036	; 0x234c
   10e28:	mov	r0, #1
   10e2c:	movt	r1, #1
   10e30:	bl	10a28 <__printf_chk@plt>
   10e34:	mov	r0, #10
   10e38:	bl	10a1c <putchar@plt>
   10e3c:	mov	r0, #0
   10e40:	b	11104 <abort@plt+0x6ac>
   10e44:	ldrb	r1, [r4, #2]
   10e48:	cmp	r1, #0
   10e4c:	beq	10b38 <abort@plt+0xe0>
   10e50:	b	10b18 <abort@plt+0xc0>
   10e54:	nop	{0}
   10e58:	andeq	r0, r0, r0
   10e5c:	submi	r0, lr, r0
   10e60:	andeq	r0, r0, r0
   10e64:	addmi	r4, pc, r0
   10e68:	andeq	r0, r0, r0
   10e6c:	rsbsmi	r0, r0, #0
   10e70:	submi	r0, r8, #0
   10e74:	addsmi	r0, r6, #0
   10e78:	adcmi	r0, sl, #0
   10e7c:	cmp	r2, #105	; 0x69
   10e80:	beq	10f38 <abort@plt+0x4e0>
   10e84:	movw	r1, #8636	; 0x21bc
   10e88:	mov	r0, r4
   10e8c:	movt	r1, #1
   10e90:	str	r2, [sp, #36]	; 0x24
   10e94:	bl	10968 <strcmp@plt>
   10e98:	ldr	r2, [sp, #36]	; 0x24
   10e9c:	cmp	r0, #0
   10ea0:	beq	10f44 <abort@plt+0x4ec>
   10ea4:	cmp	r2, #118	; 0x76
   10ea8:	beq	10f4c <abort@plt+0x4f4>
   10eac:	movw	r1, #9056	; 0x2360
   10eb0:	mov	r0, r4
   10eb4:	movt	r1, #1
   10eb8:	str	r2, [sp, #36]	; 0x24
   10ebc:	bl	10968 <strcmp@plt>
   10ec0:	ldr	r2, [sp, #36]	; 0x24
   10ec4:	cmp	r0, #0
   10ec8:	beq	10b00 <abort@plt+0xa8>
   10ecc:	cmp	r2, #104	; 0x68
   10ed0:	beq	11160 <abort@plt+0x708>
   10ed4:	movw	r1, #8652	; 0x21cc
   10ed8:	mov	r0, r4
   10edc:	movt	r1, #1
   10ee0:	bl	10968 <strcmp@plt>
   10ee4:	cmp	r0, #0
   10ee8:	beq	110f4 <abort@plt+0x69c>
   10eec:	cmp	r9, #0
   10ef0:	beq	11144 <abort@plt+0x6ec>
   10ef4:	cmp	r8, #0
   10ef8:	beq	11220 <abort@plt+0x7c8>
   10efc:	vcmp.f32	s18, #0.0
   10f00:	vmrs	APSR_nzcv, fpscr
   10f04:	bne	10f24 <abort@plt+0x4cc>
   10f08:	mov	r0, r4
   10f0c:	mov	r1, #0
   10f10:	bl	10a34 <strtod@plt>
   10f14:	vcvt.f32.f64	s18, d0
   10f18:	vcmp.f32	s18, #0.0
   10f1c:	vmrs	APSR_nzcv, fpscr
   10f20:	bne	10b3c <abort@plt+0xe4>
   10f24:	ldr	r3, [sp, #40]	; 0x28
   10f28:	ldr	r0, [r3]
   10f2c:	bl	1139c <abort@plt+0x944>
   10f30:	mov	r0, #1
   10f34:	b	11104 <abort@plt+0x6ac>
   10f38:	ldrb	r1, [r4, #2]
   10f3c:	cmp	r1, #0
   10f40:	bne	10e84 <abort@plt+0x42c>
   10f44:	mov	r7, #1
   10f48:	b	10b3c <abort@plt+0xe4>
   10f4c:	ldrb	r1, [r4, #2]
   10f50:	cmp	r1, #0
   10f54:	beq	10b00 <abort@plt+0xa8>
   10f58:	b	10eac <abort@plt+0x454>
   10f5c:	lsl	r0, r8, #2
   10f60:	mov	r1, #3
   10f64:	bl	11d04 <abort@plt+0x12ac>
   10f68:	cmp	r9, r0
   10f6c:	bne	10bac <abort@plt+0x154>
   10f70:	mov	r5, #1
   10f74:	b	10c4c <abort@plt+0x1f4>
   10f78:	mov	r3, r7
   10f7c:	mov	r1, r8
   10f80:	vmov.f32	s0, s18
   10f84:	mov	r2, r6
   10f88:	mov	r0, r9
   10f8c:	bl	11510 <abort@plt+0xab8>
   10f90:	movw	r1, #8844	; 0x228c
   10f94:	movt	r1, #1
   10f98:	vldr	s14, [r0, #152]	; 0x98
   10f9c:	vcvt.f64.f32	d7, s14
   10fa0:	mov	r4, r0
   10fa4:	mov	r0, #1
   10fa8:	vstr	d7, [sp]
   10fac:	ldr	r2, [r4, #24]
   10fb0:	ldr	r3, [r4, #44]	; 0x2c
   10fb4:	bl	10a28 <__printf_chk@plt>
   10fb8:	cmp	r5, #0
   10fbc:	beq	10d18 <abort@plt+0x2c0>
   10fc0:	vldr	s10, [r4, #24]
   10fc4:	vldr	s11, [r4, #44]	; 0x2c
   10fc8:	vcvt.f32.s32	s14, s10
   10fcc:	vldr	d6, [pc, #652]	; 11260 <abort@plt+0x808>
   10fd0:	movw	r1, #8864	; 0x22a0
   10fd4:	mov	r0, #1
   10fd8:	movt	r1, #1
   10fdc:	vcvt.f32.s32	s15, s11
   10fe0:	vmul.f32	s14, s14, s15
   10fe4:	vcvt.f64.f32	d7, s14
   10fe8:	vdiv.f64	d5, d7, d6
   10fec:	vmov	r2, r3, d5
   10ff0:	bl	10a28 <__printf_chk@plt>
   10ff4:	ldr	r5, [r4, #44]	; 0x2c
   10ff8:	mov	r1, #3
   10ffc:	mov	r0, r5
   11000:	bl	11f24 <abort@plt+0x14cc>
   11004:	cmp	r1, #0
   11008:	bne	11024 <abort@plt+0x5cc>
   1100c:	lsl	r0, r5, #2
   11010:	mov	r1, #3
   11014:	bl	11d04 <abort@plt+0x12ac>
   11018:	ldr	r3, [r4, #24]
   1101c:	cmp	r0, r3
   11020:	beq	1123c <abort@plt+0x7e4>
   11024:	mov	r0, r5
   11028:	mov	r1, #9
   1102c:	bl	11f24 <abort@plt+0x14cc>
   11030:	subs	r7, r1, #0
   11034:	bne	11050 <abort@plt+0x5f8>
   11038:	lsl	r0, r5, #4
   1103c:	mov	r1, #9
   11040:	bl	11d04 <abort@plt+0x12ac>
   11044:	ldr	r3, [r4, #24]
   11048:	cmp	r0, r3
   1104c:	beq	11248 <abort@plt+0x7f0>
   11050:	mov	r0, r5
   11054:	mov	r1, #10
   11058:	bl	11f24 <abort@plt+0x14cc>
   1105c:	cmp	r1, #0
   11060:	bne	1107c <abort@plt+0x624>
   11064:	lsl	r0, r5, #4
   11068:	mov	r1, #10
   1106c:	bl	11d04 <abort@plt+0x12ac>
   11070:	ldr	r3, [r4, #24]
   11074:	cmp	r0, r3
   11078:	beq	11254 <abort@plt+0x7fc>
   1107c:	tst	r5, #3
   11080:	beq	11170 <abort@plt+0x718>
   11084:	cmp	r7, #0
   11088:	bne	110a8 <abort@plt+0x650>
   1108c:	mov	r0, #15
   11090:	mov	r1, #9
   11094:	mul	r0, r0, r5
   11098:	bl	11d04 <abort@plt+0x12ac>
   1109c:	ldr	r3, [r4, #24]
   110a0:	cmp	r0, r3
   110a4:	beq	11248 <abort@plt+0x7f0>
   110a8:	cmp	r6, #0
   110ac:	beq	110c0 <abort@plt+0x668>
   110b0:	movw	r1, #8876	; 0x22ac
   110b4:	mov	r0, #1
   110b8:	movt	r1, #1
   110bc:	bl	10a28 <__printf_chk@plt>
   110c0:	movw	r1, #8884	; 0x22b4
   110c4:	mov	r0, #1
   110c8:	movt	r1, #1
   110cc:	bl	10a28 <__printf_chk@plt>
   110d0:	b	10d28 <abort@plt+0x2d0>
   110d4:	movw	r3, #12404	; 0x3074
   110d8:	movt	r3, #2
   110dc:	movw	r0, #8660	; 0x21d4
   110e0:	mov	r1, #1
   110e4:	ldr	r3, [r3]
   110e8:	movt	r0, #1
   110ec:	mov	r2, #70	; 0x46
   110f0:	bl	109a4 <fwrite@plt>
   110f4:	ldr	r3, [sp, #40]	; 0x28
   110f8:	ldr	r0, [r3]
   110fc:	bl	1139c <abort@plt+0x944>
   11100:	mov	r0, #0
   11104:	add	sp, sp, #52	; 0x34
   11108:	vpop	{d8-d9}
   1110c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11110:	vcvt.f64.f32	d7, s18
   11114:	mov	r2, r9
   11118:	mov	r3, r8
   1111c:	movw	r1, #8944	; 0x22f0
   11120:	mov	r0, #1
   11124:	movt	r1, #1
   11128:	vstr	d7, [sp]
   1112c:	bl	10a28 <__printf_chk@plt>
   11130:	b	10d94 <abort@plt+0x33c>
   11134:	ldr	r0, [r1]
   11138:	bl	1139c <abort@plt+0x944>
   1113c:	mov	r0, #1
   11140:	b	11104 <abort@plt+0x6ac>
   11144:	mov	r1, r9
   11148:	mov	r0, r4
   1114c:	mov	r2, #10
   11150:	bl	10974 <strtol@plt>
   11154:	subs	r9, r0, #0
   11158:	bne	10b3c <abort@plt+0xe4>
   1115c:	b	10f24 <abort@plt+0x4cc>
   11160:	ldrb	r2, [r4, #2]
   11164:	cmp	r2, #0
   11168:	bne	10ed4 <abort@plt+0x47c>
   1116c:	b	110f4 <abort@plt+0x69c>
   11170:	add	r3, r5, r5, lsl #2
   11174:	ldr	r2, [r4, #24]
   11178:	cmp	r3, #0
   1117c:	add	r1, r3, #3
   11180:	movlt	r3, r1
   11184:	cmp	r2, r3, asr #2
   11188:	bne	11084 <abort@plt+0x62c>
   1118c:	mov	r0, #52	; 0x34
   11190:	bl	10a1c <putchar@plt>
   11194:	b	110a8 <abort@plt+0x650>
   11198:	movw	r3, #12404	; 0x3074
   1119c:	movt	r3, #2
   111a0:	movw	r0, #8732	; 0x221c
   111a4:	mov	r1, #1
   111a8:	ldr	r3, [r3]
   111ac:	mov	r2, #43	; 0x2b
   111b0:	movt	r0, #1
   111b4:	mov	r5, #0
   111b8:	bl	109a4 <fwrite@plt>
   111bc:	b	10c4c <abort@plt+0x1f4>
   111c0:	movw	r1, #9028	; 0x2344
   111c4:	mov	r0, #1
   111c8:	movt	r1, #1
   111cc:	bl	10a28 <__printf_chk@plt>
   111d0:	ldr	r3, [r4, #64]	; 0x40
   111d4:	b	10e1c <abort@plt+0x3c4>
   111d8:	movw	r1, #9020	; 0x233c
   111dc:	mov	r0, #1
   111e0:	movt	r1, #1
   111e4:	bl	10a28 <__printf_chk@plt>
   111e8:	ldr	r3, [r4, #64]	; 0x40
   111ec:	b	10e14 <abort@plt+0x3bc>
   111f0:	movw	r1, #9012	; 0x2334
   111f4:	mov	r0, #1
   111f8:	movt	r1, #1
   111fc:	bl	10a28 <__printf_chk@plt>
   11200:	ldr	r3, [r4, #64]	; 0x40
   11204:	b	10e0c <abort@plt+0x3b4>
   11208:	movw	r1, #9000	; 0x2328
   1120c:	mov	r0, #1
   11210:	movt	r1, #1
   11214:	bl	10a28 <__printf_chk@plt>
   11218:	ldr	r3, [r4, #64]	; 0x40
   1121c:	b	10e04 <abort@plt+0x3ac>
   11220:	mov	r1, r8
   11224:	mov	r0, r4
   11228:	mov	r2, #10
   1122c:	bl	10974 <strtol@plt>
   11230:	subs	r8, r0, #0
   11234:	bne	10b3c <abort@plt+0xe4>
   11238:	b	10f24 <abort@plt+0x4cc>
   1123c:	mov	r0, #51	; 0x33
   11240:	bl	10a1c <putchar@plt>
   11244:	b	110a8 <abort@plt+0x650>
   11248:	mov	r0, #57	; 0x39
   1124c:	bl	10a1c <putchar@plt>
   11250:	b	110a8 <abort@plt+0x650>
   11254:	mov	r0, #65	; 0x41
   11258:	bl	10a1c <putchar@plt>
   1125c:	b	110a8 <abort@plt+0x650>
   11260:	andeq	r0, r0, r0
   11264:	smlawbmi	lr, r0, r4, r8
   11268:	mov	fp, #0
   1126c:	mov	lr, #0
   11270:	pop	{r1}		; (ldr r1, [sp], #4)
   11274:	mov	r2, sp
   11278:	push	{r2}		; (str r2, [sp, #-4]!)
   1127c:	push	{r0}		; (str r0, [sp, #-4]!)
   11280:	ldr	ip, [pc, #16]	; 11298 <abort@plt+0x840>
   11284:	push	{ip}		; (str ip, [sp, #-4]!)
   11288:	ldr	r0, [pc, #12]	; 1129c <abort@plt+0x844>
   1128c:	ldr	r3, [pc, #12]	; 112a0 <abort@plt+0x848>
   11290:	bl	109c8 <__libc_start_main@plt>
   11294:	bl	10a58 <abort@plt>
   11298:			; <UNDEFINED> instruction: 0x00011fb8
   1129c:	andeq	r0, r1, r8, ror #20
   112a0:	andeq	r1, r1, r4, asr pc
   112a4:	ldr	r3, [pc, #20]	; 112c0 <abort@plt+0x868>
   112a8:	ldr	r2, [pc, #20]	; 112c4 <abort@plt+0x86c>
   112ac:	add	r3, pc, r3
   112b0:	ldr	r2, [r3, r2]
   112b4:	cmp	r2, #0
   112b8:	bxeq	lr
   112bc:	b	109ec <__gmon_start__@plt>
   112c0:	andeq	r1, r1, ip, asr #26
   112c4:	andeq	r0, r0, r8, rrx
   112c8:	push	{r3, lr}
   112cc:	movw	r0, #12400	; 0x3070
   112d0:	ldr	r3, [pc, #36]	; 112fc <abort@plt+0x8a4>
   112d4:	movt	r0, #2
   112d8:	rsb	r3, r0, r3
   112dc:	cmp	r3, #6
   112e0:	popls	{r3, pc}
   112e4:	movw	r3, #0
   112e8:	movt	r3, #0
   112ec:	cmp	r3, #0
   112f0:	popeq	{r3, pc}
   112f4:	blx	r3
   112f8:	pop	{r3, pc}
   112fc:	andeq	r3, r2, r3, ror r0
   11300:	push	{r3, lr}
   11304:	movw	r0, #12400	; 0x3070
   11308:	movw	r3, #12400	; 0x3070
   1130c:	movt	r0, #2
   11310:	movt	r3, #2
   11314:	rsb	r3, r0, r3
   11318:	asr	r3, r3, #2
   1131c:	add	r3, r3, r3, lsr #31
   11320:	asrs	r1, r3, #1
   11324:	popeq	{r3, pc}
   11328:	movw	r2, #0
   1132c:	movt	r2, #0
   11330:	cmp	r2, #0
   11334:	popeq	{r3, pc}
   11338:	blx	r2
   1133c:	pop	{r3, pc}
   11340:	push	{r4, lr}
   11344:	movw	r4, #12408	; 0x3078
   11348:	movt	r4, #2
   1134c:	ldrb	r3, [r4]
   11350:	cmp	r3, #0
   11354:	popne	{r4, pc}
   11358:	bl	112c8 <abort@plt+0x870>
   1135c:	mov	r3, #1
   11360:	strb	r3, [r4]
   11364:	pop	{r4, pc}
   11368:	movw	r0, #12012	; 0x2eec
   1136c:	movt	r0, #2
   11370:	push	{r3, lr}
   11374:	ldr	r3, [r0]
   11378:	cmp	r3, #0
   1137c:	beq	11394 <abort@plt+0x93c>
   11380:	movw	r3, #0
   11384:	movt	r3, #0
   11388:	cmp	r3, #0
   1138c:	beq	11394 <abort@plt+0x93c>
   11390:	blx	r3
   11394:	pop	{r3, lr}
   11398:	b	11300 <abort@plt+0x8a8>
   1139c:	push	{r4, r5, r6, lr}
   113a0:	movw	r4, #12404	; 0x3074
   113a4:	movt	r4, #2
   113a8:	mov	r5, r0
   113ac:	mov	r0, #10
   113b0:	ldr	r1, [r4]
   113b4:	bl	10a4c <fputc@plt>
   113b8:	mov	r3, r5
   113bc:	ldr	r0, [r4]
   113c0:	mov	r1, #1
   113c4:	movw	r2, #8140	; 0x1fcc
   113c8:	movt	r2, #1
   113cc:	bl	10a40 <__fprintf_chk@plt>
   113d0:	ldr	r1, [r4]
   113d4:	mov	r0, #10
   113d8:	bl	10a4c <fputc@plt>
   113dc:	ldr	r3, [r4]
   113e0:	mov	r1, #1
   113e4:	mov	r2, #51	; 0x33
   113e8:	movw	r0, #8196	; 0x2004
   113ec:	movt	r0, #1
   113f0:	bl	109a4 <fwrite@plt>
   113f4:	ldr	r3, [r4]
   113f8:	mov	r1, #1
   113fc:	mov	r2, #80	; 0x50
   11400:	movw	r0, #8248	; 0x2038
   11404:	movt	r0, #1
   11408:	bl	109a4 <fwrite@plt>
   1140c:	ldr	r3, [r4]
   11410:	mov	r1, #1
   11414:	mov	r2, #73	; 0x49
   11418:	movw	r0, #8332	; 0x208c
   1141c:	movt	r0, #1
   11420:	bl	109a4 <fwrite@plt>
   11424:	ldr	r3, [r4]
   11428:	mov	r1, #1
   1142c:	mov	r2, #56	; 0x38
   11430:	movw	r0, #8408	; 0x20d8
   11434:	movt	r0, #1
   11438:	bl	109a4 <fwrite@plt>
   1143c:	ldr	r3, [r4]
   11440:	mov	r2, #56	; 0x38
   11444:	mov	r1, #1
   11448:	movw	r0, #8468	; 0x2114
   1144c:	movt	r0, #1
   11450:	bl	109a4 <fwrite@plt>
   11454:	ldr	r1, [r4]
   11458:	mov	r0, #10
   1145c:	bl	10a4c <fputc@plt>
   11460:	ldr	r3, [r4]
   11464:	movw	r0, #8528	; 0x2150
   11468:	mov	r1, #1
   1146c:	movt	r0, #1
   11470:	mov	r2, #73	; 0x49
   11474:	pop	{r4, r5, r6, lr}
   11478:	b	109a4 <fwrite@plt>
   1147c:	push	{r0, r1, r2, r3}
   11480:	movw	r3, #12400	; 0x3070
   11484:	movt	r3, #2
   11488:	movw	r0, #12404	; 0x3074
   1148c:	push	{lr}		; (str lr, [sp, #-4]!)
   11490:	sub	sp, sp, #12
   11494:	ldr	lr, [r3]
   11498:	add	ip, sp, #20
   1149c:	movt	r0, #2
   114a0:	ldr	r2, [sp, #16]
   114a4:	mov	r1, #1
   114a8:	mov	r3, ip
   114ac:	ldr	r0, [r0]
   114b0:	str	lr, [sp, #4]
   114b4:	str	ip, [sp]
   114b8:	bl	109e0 <__vfprintf_chk@plt>
   114bc:	mov	r0, #1
   114c0:	bl	109f8 <exit@plt>
   114c4:	push	{r3, lr}
   114c8:	bl	109bc <malloc@plt>
   114cc:	cmp	r0, #0
   114d0:	popne	{r3, pc}
   114d4:	movw	r0, #8604	; 0x219c
   114d8:	movt	r0, #1
   114dc:	bl	10998 <perror@plt>
   114e0:	mov	r0, #1
   114e4:	bl	109f8 <exit@plt>
   114e8:	push	{r3, lr}
   114ec:	bl	10950 <calloc@plt>
   114f0:	cmp	r0, #0
   114f4:	popne	{r3, pc}
   114f8:	movw	r0, #8620	; 0x21ac
   114fc:	movt	r0, #1
   11500:	bl	10998 <perror@plt>
   11504:	mov	r0, #1
   11508:	bl	109f8 <exit@plt>
   1150c:	andeq	r0, r0, r0
   11510:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11514:	vpush	{d8}
   11518:	movw	r7, #12400	; 0x3070
   1151c:	movt	r7, #2
   11520:	sub	sp, sp, #8
   11524:	mov	r6, r0
   11528:	mov	r5, r1
   1152c:	ldr	ip, [r7]
   11530:	mov	r0, #1
   11534:	mov	r1, #156	; 0x9c
   11538:	vmov.f32	s16, s0
   1153c:	mov	r8, r3
   11540:	mov	r9, r2
   11544:	str	ip, [sp, #4]
   11548:	bl	114e8 <abort@plt+0xa90>
   1154c:	vldr	s15, [pc, #932]	; 118f8 <abort@plt+0xea0>
   11550:	vcmp.f32	s16, #0.0
   11554:	vmrs	APSR_nzcv, fpscr
   11558:	vmoveq.f32	s16, s15
   1155c:	cmp	r8, #0
   11560:	mov	r4, r0
   11564:	beq	118a4 <abort@plt+0xe4c>
   11568:	vadd.f32	s16, s16, s16
   1156c:	asr	r2, r6, #31
   11570:	add	ip, r5, r5, lsr #31
   11574:	str	r5, [r0, #44]	; 0x2c
   11578:	lsr	r2, r2, #29
   1157c:	add	r3, r6, r2
   11580:	asr	ip, ip, #1
   11584:	and	r3, r3, #7
   11588:	rsb	r3, r2, r3
   1158c:	rsb	r3, r3, r6
   11590:	str	r3, [r0, #24]
   11594:	vmov.f32	s5, #96	; 0x3f000000  0.5
   11598:	movw	r2, #21846	; 0x5556
   1159c:	movt	r2, #21845	; 0x5555
   115a0:	asr	r1, r5, #31
   115a4:	smull	sl, r0, r2, r5
   115a8:	rsb	r0, r1, r0
   115ac:	add	r0, r0, r0, lsl #1
   115b0:	cmp	r5, r0
   115b4:	bne	115d0 <abort@plt+0xb78>
   115b8:	lsl	r0, r5, #2
   115bc:	smull	lr, r2, r2, r0
   115c0:	sub	r0, r2, r0, asr #31
   115c4:	cmp	r0, r6
   115c8:	moveq	r1, #4
   115cc:	beq	11670 <abort@plt+0xc18>
   115d0:	movw	r0, #36409	; 0x8e39
   115d4:	movt	r0, #14563	; 0x38e3
   115d8:	smull	sl, r2, r0, r5
   115dc:	rsb	r2, r1, r2, asr #1
   115e0:	add	r2, r2, r2, lsl #3
   115e4:	subs	r2, r5, r2
   115e8:	bne	11608 <abort@plt+0xbb0>
   115ec:	lsl	lr, r5, #4
   115f0:	smull	sl, r0, r0, lr
   115f4:	asr	lr, lr, #31
   115f8:	rsb	r0, lr, r0, asr #1
   115fc:	cmp	r0, r6
   11600:	moveq	r1, #5
   11604:	beq	11670 <abort@plt+0xc18>
   11608:	movw	r0, #26215	; 0x6667
   1160c:	movt	r0, #26214	; 0x6666
   11610:	smull	sl, lr, r0, r5
   11614:	rsb	r1, r1, lr, asr #2
   11618:	add	r1, r1, r1, lsl #2
   1161c:	cmp	r5, r1, lsl #1
   11620:	bne	11640 <abort@plt+0xbe8>
   11624:	lsl	r1, r5, #4
   11628:	smull	lr, r0, r0, r1
   1162c:	asr	r1, r1, #31
   11630:	rsb	r1, r1, r0, asr #2
   11634:	cmp	r1, r6
   11638:	moveq	r1, #6
   1163c:	beq	11670 <abort@plt+0xc18>
   11640:	tst	r5, #3
   11644:	bne	11664 <abort@plt+0xc0c>
   11648:	add	r1, r5, r5, lsl #2
   1164c:	cmp	r1, #0
   11650:	add	r0, r1, #3
   11654:	movlt	r1, r0
   11658:	cmp	r6, r1, asr #2
   1165c:	moveq	r1, #7
   11660:	beq	11670 <abort@plt+0xc18>
   11664:	cmp	r2, #0
   11668:	movne	r1, #10
   1166c:	beq	119b8 <abort@plt+0xf60>
   11670:	cmp	r9, #0
   11674:	vcvt.f64.f32	d0, s16
   11678:	vldr	d6, [pc, #592]	; 118d0 <abort@plt+0xe78>
   1167c:	bne	11904 <abort@plt+0xeac>
   11680:	add	r2, ip, #3
   11684:	vldr	d7, [pc, #588]	; 118d8 <abort@plt+0xe80>
   11688:	add	r0, r1, #1
   1168c:	vmov	s9, r2
   11690:	vdiv.f64	d0, d6, d0
   11694:	vcvt.f32.s32	s13, s9
   11698:	vsub.f64	d0, d0, d7
   1169c:	vadd.f32	s13, s13, s5
   116a0:	vcvt.f32.f64	s0, d0
   116a4:	vdiv.f32	s0, s0, s13
   116a8:	vcvt.f64.f32	d6, s0
   116ac:	vdiv.f64	d7, d7, d6
   116b0:	vcvt.s32.f64	s11, d7
   116b4:	vldr	s14, [pc, #576]	; 118fc <abort@plt+0xea4>
   116b8:	vmul.f32	s14, s0, s14
   116bc:	vmov	r2, s11
   116c0:	vldr	d5, [pc, #536]	; 118e0 <abort@plt+0xe88>
   116c4:	vcvt.f64.f32	d7, s14
   116c8:	vdiv.f64	d7, d7, d5
   116cc:	cmp	r0, r2
   116d0:	add	r0, r5, #3
   116d4:	addge	r2, r1, #3
   116d8:	addlt	r2, r2, #1
   116dc:	add	r2, ip, r2
   116e0:	add	r1, r1, r0
   116e4:	str	r1, [r4, #52]	; 0x34
   116e8:	movw	ip, #34079	; 0x851f
   116ec:	vmov	s11, r2
   116f0:	str	r0, [r4, #48]	; 0x30
   116f4:	movt	ip, #20971	; 0x51eb
   116f8:	vcvt.f32.s32	s9, s11
   116fc:	vmov.f64	d5, #62	; 0x41f00000  30.0
   11700:	vsub.f64	d7, d5, d7
   11704:	vmov.f32	s11, #52	; 0x41a00000  20.0
   11708:	vcvt.f32.f64	s14, d7
   1170c:	vcmpe.f32	s14, s11
   11710:	vadd.f32	s5, s9, s5
   11714:	vmrs	APSR_nzcv, fpscr
   11718:	vmov.f32	s9, #8	; 0x40400000  3.0
   1171c:	vcvtpl.f64.f32	d5, s14
   11720:	vadd.f32	s5, s5, s9
   11724:	vldrpl	d4, [pc, #444]	; 118e8 <abort@plt+0xe90>
   11728:	vsubpl.f64	d5, d4, d5
   1172c:	vmov	s9, r3
   11730:	vcvt.f32.s32	s15, s9
   11734:	vmovmi.f32	s14, s11
   11738:	vldrmi	d5, [pc, #432]	; 118f0 <abort@plt+0xe98>
   1173c:	vmul.f32	s14, s15, s14
   11740:	vcvt.f64.f32	d7, s14
   11744:	vdiv.f64	d7, d7, d5
   11748:	vcvt.s32.f64	s11, d7
   1174c:	vmov	r1, s11
   11750:	vcvt.s32.f32	s5, s5
   11754:	vmov	r2, s5
   11758:	vstr	s5, [r4, #56]	; 0x38
   1175c:	asr	lr, r1, #31
   11760:	lsr	lr, lr, #28
   11764:	add	r0, r1, lr
   11768:	and	r0, r0, #15
   1176c:	rsb	r0, lr, r0
   11770:	rsb	r0, r0, r1
   11774:	add	r1, r3, r0
   11778:	str	r1, [r4, #36]	; 0x24
   1177c:	add	r0, r0, r0, lsr #31
   11780:	lsl	lr, r1, #3
   11784:	add	r3, r3, r0, asr #1
   11788:	str	r3, [r4, #32]
   1178c:	smull	r0, ip, ip, lr
   11790:	asr	lr, lr, #31
   11794:	sub	ip, lr, ip, asr #5
   11798:	add	r3, r3, ip
   1179c:	asr	r0, r3, #31
   117a0:	lsr	r0, r0, #29
   117a4:	add	ip, r3, r0
   117a8:	and	ip, ip, #7
   117ac:	rsb	r0, r0, ip
   117b0:	rsb	r0, r0, #8
   117b4:	add	r3, r3, r0
   117b8:	str	r3, [r4, #28]
   117bc:	vmov	s9, r1
   117c0:	vldr	d7, [pc, #280]	; 118e0 <abort@plt+0xe88>
   117c4:	movw	r3, #19923	; 0x4dd3
   117c8:	movt	r3, #4194	; 0x1062
   117cc:	vcvt.f64.s32	d5, s9
   117d0:	mov	ip, #250	; 0xfa
   117d4:	mul	sl, r2, r1
   117d8:	cmp	r8, #0
   117dc:	lslne	r2, r2, #1
   117e0:	strne	r2, [r4, #56]	; 0x38
   117e4:	mov	r2, r6
   117e8:	vmul.f64	d5, d5, d7
   117ec:	vmov	s9, sl
   117f0:	vdiv.f64	d5, d5, d6
   117f4:	vcvt.s32.f64	s12, d5
   117f8:	vmov	r0, s12
   117fc:	vcvt.f32.s32	s12, s9
   11800:	vcvt.f64.f32	d6, s12
   11804:	smull	lr, r3, r3, r0
   11808:	asr	lr, r0, #31
   1180c:	rsb	r3, lr, r3, asr #4
   11810:	mls	r3, ip, r3, r0
   11814:	rsb	r0, r3, r0
   11818:	mov	r3, r5
   1181c:	str	r0, [r4, #20]
   11820:	vmov	s11, r0
   11824:	mov	r0, sp
   11828:	vcvt.f32.s32	s9, s11
   1182c:	vcvt.f64.f32	d5, s9
   11830:	vmul.f64	d7, d5, d7
   11834:	vdiv.f64	d7, d7, d6
   11838:	vmov	s12, r1
   1183c:	movw	r1, #9068	; 0x236c
   11840:	movt	r1, #1
   11844:	vcvt.f32.s32	s13, s12
   11848:	vdiv.f32	s9, s9, s13
   1184c:	vcvt.f32.f64	s14, d7
   11850:	vstr	s9, [r4, #148]	; 0x94
   11854:	vstr	s14, [r4, #152]	; 0x98
   11858:	bl	11ac4 <abort@plt+0x106c>
   1185c:	ldr	r2, [r4, #64]	; 0x40
   11860:	ldr	r3, [sp]
   11864:	cmp	r9, #0
   11868:	orrne	r2, r2, #9
   1186c:	orreq	r2, r2, #6
   11870:	cmp	r8, #0
   11874:	str	r2, [r4, #64]	; 0x40
   11878:	str	r3, [r4, #8]
   1187c:	orrne	r2, r2, #16
   11880:	strne	r2, [r4, #64]	; 0x40
   11884:	mov	r0, r4
   11888:	ldr	r2, [sp, #4]
   1188c:	ldr	r3, [r7]
   11890:	cmp	r2, r3
   11894:	bne	119e0 <abort@plt+0xf88>
   11898:	add	sp, sp, #8
   1189c:	vpop	{d8}
   118a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118a4:	asr	r2, r6, #31
   118a8:	str	r5, [r0, #44]	; 0x2c
   118ac:	mov	ip, r5
   118b0:	vldr	s5, [pc, #72]	; 11900 <abort@plt+0xea8>
   118b4:	lsr	r2, r2, #29
   118b8:	add	r3, r6, r2
   118bc:	and	r3, r3, #7
   118c0:	rsb	r3, r2, r3
   118c4:	rsb	r3, r3, r6
   118c8:	str	r3, [r0, #24]
   118cc:	b	11598 <abort@plt+0xb40>
   118d0:	andeq	r0, r0, r0
   118d4:	smlawbmi	lr, r0, r4, r8
   118d8:	andeq	r0, r0, r0
   118dc:	addmi	r3, r1, r0
   118e0:	andeq	r0, r0, r0
   118e4:	addmi	r4, pc, r0
   118e8:	andeq	r0, r0, r0
   118ec:	subsmi	r0, r9, r0
   118f0:	andeq	r0, r0, r0
   118f4:	subsmi	r0, r4, r0
   118f8:	rsbsmi	r0, r0, #0
   118fc:	orrsmi	r0, r6, #0
   11900:	andeq	r0, r0, r0
   11904:	vdiv.f64	d6, d6, d0
   11908:	vldr	d7, [pc, #216]	; 119e8 <abort@plt+0xf90>
   1190c:	vmov	s9, ip
   11910:	vldr	s11, [pc, #240]	; 11a08 <abort@plt+0xfb0>
   11914:	add	r2, r1, #8
   11918:	vldr	d3, [pc, #208]	; 119f0 <abort@plt+0xf98>
   1191c:	vsub.f64	d6, d6, d7
   11920:	vcvt.f32.s32	s4, s9
   11924:	vmov	s9, r3
   11928:	add	r3, r5, #3
   1192c:	str	r3, [r4, #48]	; 0x30
   11930:	vcvt.f32.f64	s12, d6
   11934:	vdiv.f32	s12, s12, s4
   11938:	vdiv.f32	s13, s11, s12
   1193c:	vldr	d5, [pc, #180]	; 119f8 <abort@plt+0xfa0>
   11940:	vmov.f32	s15, #112	; 0x3f800000  1.0
   11944:	vadd.f32	s13, s13, s15
   11948:	vcvt.s32.f32	s13, s13
   1194c:	vmov	r0, s13
   11950:	vcvt.f64.s32	d7, s9
   11954:	vldr	d4, [pc, #164]	; 11a00 <abort@plt+0xfa8>
   11958:	vadd.f64	d5, d7, d5
   1195c:	vcvt.s32.f64	s10, d5
   11960:	cmp	r0, r2
   11964:	addle	r2, r1, #9
   11968:	add	r1, r1, r3
   1196c:	str	r1, [r4, #52]	; 0x34
   11970:	vmovle	s13, r2
   11974:	vadd.f32	s5, s5, s4
   11978:	vstr	s10, [r4, #32]
   1197c:	vcvt.f32.s32	s13, s13
   11980:	vcvt.f64.s32	d5, s10
   11984:	vadd.f32	s13, s5, s13
   11988:	vsub.f64	d5, d5, d4
   1198c:	vadd.f64	d7, d7, d3
   11990:	vcvt.s32.f32	s13, s13
   11994:	vcvt.s32.f64	s10, d5
   11998:	vstr	s13, [r4, #56]	; 0x38
   1199c:	vmov	r2, s13
   119a0:	vcvt.s32.f64	s11, d7
   119a4:	vstr	s10, [r4, #28]
   119a8:	vmov	r1, s11
   119ac:	vstr	s11, [r4, #36]	; 0x24
   119b0:	vcvt.f64.f32	d6, s12
   119b4:	b	117bc <abort@plt+0xd64>
   119b8:	rsb	r0, r5, r5, lsl #4
   119bc:	movw	r2, #36409	; 0x8e39
   119c0:	movt	r2, #14563	; 0x38e3
   119c4:	asr	lr, r0, #31
   119c8:	smull	sl, r1, r2, r0
   119cc:	rsb	r1, lr, r1, asr #1
   119d0:	cmp	r1, r6
   119d4:	moveq	r1, #7
   119d8:	movne	r1, #10
   119dc:	b	11670 <abort@plt+0xc18>
   119e0:	bl	1098c <__stack_chk_fail@plt>
   119e4:	nop	{0}
   119e8:	andeq	r0, r0, r0
   119ec:	rsbsmi	ip, ip, r0
   119f0:	andeq	r0, r0, r0
   119f4:	rsbmi	r0, r4, r0
   119f8:	andeq	r0, r0, r0
   119fc:	subsmi	r0, r4, r0
   11a00:	andeq	r0, r0, r0
   11a04:	submi	r0, r0, r0
   11a08:	mvnmi	r0, #0
   11a0c:	push	{r3, lr}
   11a10:	mov	r3, r2
   11a14:	mov	r2, r1
   11a18:	mov	r1, #1
   11a1c:	bl	10a10 <__vasprintf_chk@plt>
   11a20:	pop	{r3, pc}
   11a24:	push	{r1, r2, r3}
   11a28:	mov	r1, #1
   11a2c:	push	{r4, lr}
   11a30:	movw	r4, #12400	; 0x3070
   11a34:	movt	r4, #2
   11a38:	sub	sp, sp, #12
   11a3c:	add	ip, sp, #24
   11a40:	ldr	lr, [r4]
   11a44:	ldr	r2, [sp, #20]
   11a48:	mov	r3, ip
   11a4c:	str	ip, [sp]
   11a50:	str	lr, [sp, #4]
   11a54:	bl	10a10 <__vasprintf_chk@plt>
   11a58:	ldr	r2, [sp, #4]
   11a5c:	ldr	r3, [r4]
   11a60:	cmp	r2, r3
   11a64:	bne	11a78 <abort@plt+0x1020>
   11a68:	add	sp, sp, #12
   11a6c:	pop	{r4, lr}
   11a70:	add	sp, sp, #12
   11a74:	bx	lr
   11a78:	bl	1098c <__stack_chk_fail@plt>
   11a7c:	push	{r4, lr}
   11a80:	mov	r3, r2
   11a84:	mov	r2, r1
   11a88:	mov	r1, #1
   11a8c:	mov	r4, r0
   11a90:	bl	10a10 <__vasprintf_chk@plt>
   11a94:	cmn	r0, #1
   11a98:	beq	11aa8 <abort@plt+0x1050>
   11a9c:	ldr	r3, [r4]
   11aa0:	cmp	r3, #0
   11aa4:	popne	{r4, pc}
   11aa8:	bl	10a04 <__errno_location@plt>
   11aac:	ldr	r0, [r0]
   11ab0:	bl	109d4 <strerror@plt>
   11ab4:	mov	r1, r0
   11ab8:	movw	r0, #9076	; 0x2374
   11abc:	movt	r0, #1
   11ac0:	bl	1147c <abort@plt+0xa24>
   11ac4:	push	{r1, r2, r3}
   11ac8:	push	{r4, lr}
   11acc:	movw	r4, #12400	; 0x3070
   11ad0:	movt	r4, #2
   11ad4:	sub	sp, sp, #12
   11ad8:	add	r3, sp, #24
   11adc:	ldr	ip, [r4]
   11ae0:	mov	r2, r3
   11ae4:	ldr	r1, [sp, #20]
   11ae8:	str	r3, [sp]
   11aec:	str	ip, [sp, #4]
   11af0:	bl	11a7c <abort@plt+0x1024>
   11af4:	ldr	r2, [sp, #4]
   11af8:	ldr	r3, [r4]
   11afc:	cmp	r2, r3
   11b00:	bne	11b14 <abort@plt+0x10bc>
   11b04:	add	sp, sp, #12
   11b08:	pop	{r4, lr}
   11b0c:	add	sp, sp, #12
   11b10:	bx	lr
   11b14:	bl	1098c <__stack_chk_fail@plt>
   11b18:	push	{r4, lr}
   11b1c:	subs	r4, r1, #0
   11b20:	sub	sp, sp, #8
   11b24:	moveq	r0, r4
   11b28:	beq	11b48 <abort@plt+0x10f0>
   11b2c:	str	r2, [sp]
   11b30:	mov	r2, #1
   11b34:	str	r3, [sp, #4]
   11b38:	mvn	r3, #0
   11b3c:	bl	10980 <__vsnprintf_chk@plt>
   11b40:	cmp	r4, r0
   11b44:	suble	r0, r4, #1
   11b48:	add	sp, sp, #8
   11b4c:	pop	{r4, pc}
   11b50:	push	{r2, r3}
   11b54:	push	{r4, lr}
   11b58:	movw	r4, #12400	; 0x3070
   11b5c:	movt	r4, #2
   11b60:	sub	sp, sp, #8
   11b64:	add	ip, sp, #20
   11b68:	ldr	lr, [r4]
   11b6c:	ldr	r2, [sp, #16]
   11b70:	mov	r3, ip
   11b74:	str	ip, [sp]
   11b78:	str	lr, [sp, #4]
   11b7c:	bl	11b18 <abort@plt+0x10c0>
   11b80:	ldr	r2, [sp, #4]
   11b84:	ldr	r3, [r4]
   11b88:	cmp	r2, r3
   11b8c:	bne	11ba0 <abort@plt+0x1148>
   11b90:	add	sp, sp, #8
   11b94:	pop	{r4, lr}
   11b98:	add	sp, sp, #8
   11b9c:	bx	lr
   11ba0:	bl	1098c <__stack_chk_fail@plt>
   11ba4:	push	{r4, lr}
   11ba8:	movw	r4, #12400	; 0x3070
   11bac:	movt	r4, #2
   11bb0:	sub	sp, sp, #8
   11bb4:	mov	r2, r0
   11bb8:	mov	r3, r1
   11bbc:	ldr	ip, [r4]
   11bc0:	mov	r0, sp
   11bc4:	mov	r1, #1
   11bc8:	str	ip, [sp, #4]
   11bcc:	bl	10a10 <__vasprintf_chk@plt>
   11bd0:	ldr	r2, [sp, #4]
   11bd4:	ldr	r3, [r4]
   11bd8:	cmn	r0, #1
   11bdc:	ldrne	r0, [sp]
   11be0:	moveq	r0, #0
   11be4:	cmp	r2, r3
   11be8:	bne	11bf4 <abort@plt+0x119c>
   11bec:	add	sp, sp, #8
   11bf0:	pop	{r4, pc}
   11bf4:	bl	1098c <__stack_chk_fail@plt>
   11bf8:	push	{r0, r1, r2, r3}
   11bfc:	mov	r1, #1
   11c00:	push	{r4, lr}
   11c04:	movw	r4, #12400	; 0x3070
   11c08:	movt	r4, #2
   11c0c:	sub	sp, sp, #16
   11c10:	add	ip, sp, #28
   11c14:	add	r0, sp, #4
   11c18:	ldr	lr, [r4]
   11c1c:	ldr	r2, [sp, #24]
   11c20:	mov	r3, ip
   11c24:	str	ip, [sp, #8]
   11c28:	str	lr, [sp, #12]
   11c2c:	bl	10a10 <__vasprintf_chk@plt>
   11c30:	ldr	r2, [sp, #12]
   11c34:	ldr	r3, [r4]
   11c38:	cmn	r0, #1
   11c3c:	ldrne	r0, [sp, #4]
   11c40:	moveq	r0, #0
   11c44:	cmp	r2, r3
   11c48:	bne	11c5c <abort@plt+0x1204>
   11c4c:	add	sp, sp, #16
   11c50:	pop	{r4, lr}
   11c54:	add	sp, sp, #16
   11c58:	bx	lr
   11c5c:	bl	1098c <__stack_chk_fail@plt>
   11c60:	push	{r4, lr}
   11c64:	movw	r4, #12400	; 0x3070
   11c68:	movt	r4, #2
   11c6c:	sub	sp, sp, #8
   11c70:	mov	r2, r1
   11c74:	mov	r1, r0
   11c78:	ldr	r3, [r4]
   11c7c:	mov	r0, sp
   11c80:	str	r3, [sp, #4]
   11c84:	bl	11a7c <abort@plt+0x1024>
   11c88:	ldr	r2, [sp, #4]
   11c8c:	ldr	r3, [r4]
   11c90:	ldr	r0, [sp]
   11c94:	cmp	r2, r3
   11c98:	bne	11ca4 <abort@plt+0x124c>
   11c9c:	add	sp, sp, #8
   11ca0:	pop	{r4, pc}
   11ca4:	bl	1098c <__stack_chk_fail@plt>
   11ca8:	push	{r0, r1, r2, r3}
   11cac:	push	{r4, lr}
   11cb0:	movw	r4, #12400	; 0x3070
   11cb4:	movt	r4, #2
   11cb8:	sub	sp, sp, #16
   11cbc:	add	r3, sp, #28
   11cc0:	add	r0, sp, #4
   11cc4:	ldr	ip, [r4]
   11cc8:	mov	r2, r3
   11ccc:	ldr	r1, [sp, #24]
   11cd0:	str	r3, [sp, #8]
   11cd4:	str	ip, [sp, #12]
   11cd8:	bl	11a7c <abort@plt+0x1024>
   11cdc:	ldr	r2, [sp, #12]
   11ce0:	ldr	r3, [r4]
   11ce4:	ldr	r0, [sp, #4]
   11ce8:	cmp	r2, r3
   11cec:	bne	11d00 <abort@plt+0x12a8>
   11cf0:	add	sp, sp, #16
   11cf4:	pop	{r4, lr}
   11cf8:	add	sp, sp, #16
   11cfc:	bx	lr
   11d00:	bl	1098c <__stack_chk_fail@plt>
   11d04:	cmp	r1, #0
   11d08:	beq	11f14 <abort@plt+0x14bc>
   11d0c:	eor	ip, r0, r1
   11d10:	rsbmi	r1, r1, #0
   11d14:	subs	r2, r1, #1
   11d18:	beq	11ee0 <abort@plt+0x1488>
   11d1c:	movs	r3, r0
   11d20:	rsbmi	r3, r0, #0
   11d24:	cmp	r3, r1
   11d28:	bls	11eec <abort@plt+0x1494>
   11d2c:	tst	r1, r2
   11d30:	beq	11efc <abort@plt+0x14a4>
   11d34:	clz	r2, r3
   11d38:	clz	r0, r1
   11d3c:	sub	r2, r0, r2
   11d40:	rsbs	r2, r2, #31
   11d44:	addne	r2, r2, r2, lsl #1
   11d48:	mov	r0, #0
   11d4c:	addne	pc, pc, r2, lsl #2
   11d50:	nop	{0}
   11d54:	cmp	r3, r1, lsl #31
   11d58:	adc	r0, r0, r0
   11d5c:	subcs	r3, r3, r1, lsl #31
   11d60:	cmp	r3, r1, lsl #30
   11d64:	adc	r0, r0, r0
   11d68:	subcs	r3, r3, r1, lsl #30
   11d6c:	cmp	r3, r1, lsl #29
   11d70:	adc	r0, r0, r0
   11d74:	subcs	r3, r3, r1, lsl #29
   11d78:	cmp	r3, r1, lsl #28
   11d7c:	adc	r0, r0, r0
   11d80:	subcs	r3, r3, r1, lsl #28
   11d84:	cmp	r3, r1, lsl #27
   11d88:	adc	r0, r0, r0
   11d8c:	subcs	r3, r3, r1, lsl #27
   11d90:	cmp	r3, r1, lsl #26
   11d94:	adc	r0, r0, r0
   11d98:	subcs	r3, r3, r1, lsl #26
   11d9c:	cmp	r3, r1, lsl #25
   11da0:	adc	r0, r0, r0
   11da4:	subcs	r3, r3, r1, lsl #25
   11da8:	cmp	r3, r1, lsl #24
   11dac:	adc	r0, r0, r0
   11db0:	subcs	r3, r3, r1, lsl #24
   11db4:	cmp	r3, r1, lsl #23
   11db8:	adc	r0, r0, r0
   11dbc:	subcs	r3, r3, r1, lsl #23
   11dc0:	cmp	r3, r1, lsl #22
   11dc4:	adc	r0, r0, r0
   11dc8:	subcs	r3, r3, r1, lsl #22
   11dcc:	cmp	r3, r1, lsl #21
   11dd0:	adc	r0, r0, r0
   11dd4:	subcs	r3, r3, r1, lsl #21
   11dd8:	cmp	r3, r1, lsl #20
   11ddc:	adc	r0, r0, r0
   11de0:	subcs	r3, r3, r1, lsl #20
   11de4:	cmp	r3, r1, lsl #19
   11de8:	adc	r0, r0, r0
   11dec:	subcs	r3, r3, r1, lsl #19
   11df0:	cmp	r3, r1, lsl #18
   11df4:	adc	r0, r0, r0
   11df8:	subcs	r3, r3, r1, lsl #18
   11dfc:	cmp	r3, r1, lsl #17
   11e00:	adc	r0, r0, r0
   11e04:	subcs	r3, r3, r1, lsl #17
   11e08:	cmp	r3, r1, lsl #16
   11e0c:	adc	r0, r0, r0
   11e10:	subcs	r3, r3, r1, lsl #16
   11e14:	cmp	r3, r1, lsl #15
   11e18:	adc	r0, r0, r0
   11e1c:	subcs	r3, r3, r1, lsl #15
   11e20:	cmp	r3, r1, lsl #14
   11e24:	adc	r0, r0, r0
   11e28:	subcs	r3, r3, r1, lsl #14
   11e2c:	cmp	r3, r1, lsl #13
   11e30:	adc	r0, r0, r0
   11e34:	subcs	r3, r3, r1, lsl #13
   11e38:	cmp	r3, r1, lsl #12
   11e3c:	adc	r0, r0, r0
   11e40:	subcs	r3, r3, r1, lsl #12
   11e44:	cmp	r3, r1, lsl #11
   11e48:	adc	r0, r0, r0
   11e4c:	subcs	r3, r3, r1, lsl #11
   11e50:	cmp	r3, r1, lsl #10
   11e54:	adc	r0, r0, r0
   11e58:	subcs	r3, r3, r1, lsl #10
   11e5c:	cmp	r3, r1, lsl #9
   11e60:	adc	r0, r0, r0
   11e64:	subcs	r3, r3, r1, lsl #9
   11e68:	cmp	r3, r1, lsl #8
   11e6c:	adc	r0, r0, r0
   11e70:	subcs	r3, r3, r1, lsl #8
   11e74:	cmp	r3, r1, lsl #7
   11e78:	adc	r0, r0, r0
   11e7c:	subcs	r3, r3, r1, lsl #7
   11e80:	cmp	r3, r1, lsl #6
   11e84:	adc	r0, r0, r0
   11e88:	subcs	r3, r3, r1, lsl #6
   11e8c:	cmp	r3, r1, lsl #5
   11e90:	adc	r0, r0, r0
   11e94:	subcs	r3, r3, r1, lsl #5
   11e98:	cmp	r3, r1, lsl #4
   11e9c:	adc	r0, r0, r0
   11ea0:	subcs	r3, r3, r1, lsl #4
   11ea4:	cmp	r3, r1, lsl #3
   11ea8:	adc	r0, r0, r0
   11eac:	subcs	r3, r3, r1, lsl #3
   11eb0:	cmp	r3, r1, lsl #2
   11eb4:	adc	r0, r0, r0
   11eb8:	subcs	r3, r3, r1, lsl #2
   11ebc:	cmp	r3, r1, lsl #1
   11ec0:	adc	r0, r0, r0
   11ec4:	subcs	r3, r3, r1, lsl #1
   11ec8:	cmp	r3, r1
   11ecc:	adc	r0, r0, r0
   11ed0:	subcs	r3, r3, r1
   11ed4:	cmp	ip, #0
   11ed8:	rsbmi	r0, r0, #0
   11edc:	bx	lr
   11ee0:	teq	ip, r0
   11ee4:	rsbmi	r0, r0, #0
   11ee8:	bx	lr
   11eec:	movcc	r0, #0
   11ef0:	asreq	r0, ip, #31
   11ef4:	orreq	r0, r0, #1
   11ef8:	bx	lr
   11efc:	clz	r2, r1
   11f00:	rsb	r2, r2, #31
   11f04:	cmp	ip, #0
   11f08:	lsr	r0, r3, r2
   11f0c:	rsbmi	r0, r0, #0
   11f10:	bx	lr
   11f14:	cmp	r0, #0
   11f18:	mvngt	r0, #-2147483648	; 0x80000000
   11f1c:	movlt	r0, #-2147483648	; 0x80000000
   11f20:	b	11f44 <abort@plt+0x14ec>
   11f24:	cmp	r1, #0
   11f28:	beq	11f14 <abort@plt+0x14bc>
   11f2c:	push	{r0, r1, lr}
   11f30:	bl	11d0c <abort@plt+0x12b4>
   11f34:	pop	{r1, r2, lr}
   11f38:	mul	r3, r2, r0
   11f3c:	sub	r1, r1, r3
   11f40:	bx	lr
   11f44:	push	{r1, lr}
   11f48:	mov	r0, #8
   11f4c:	bl	1095c <raise@plt>
   11f50:	pop	{r1, pc}
   11f54:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11f58:	mov	r7, r0
   11f5c:	ldr	r6, [pc, #76]	; 11fb0 <abort@plt+0x1558>
   11f60:	mov	r8, r1
   11f64:	ldr	r5, [pc, #72]	; 11fb4 <abort@plt+0x155c>
   11f68:	mov	r9, r2
   11f6c:	add	r6, pc, r6
   11f70:	bl	10930 <_init@@Base>
   11f74:	add	r5, pc, r5
   11f78:	rsb	r6, r5, r6
   11f7c:	asrs	r6, r6, #2
   11f80:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11f84:	sub	r5, r5, #4
   11f88:	mov	r4, #0
   11f8c:	add	r4, r4, #1
   11f90:	ldr	r3, [r5, #4]!
   11f94:	mov	r0, r7
   11f98:	mov	r1, r8
   11f9c:	mov	r2, r9
   11fa0:	blx	r3
   11fa4:	cmp	r4, r6
   11fa8:	bne	11f8c <abort@plt+0x1534>
   11fac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11fb0:	andeq	r0, r1, r4, ror pc
   11fb4:	andeq	r0, r1, r8, ror #30
   11fb8:	bx	lr

Disassembly of section .fini:

00011fbc <_fini@@Base>:
   11fbc:	push	{r3, lr}
   11fc0:	pop	{r3, pc}
