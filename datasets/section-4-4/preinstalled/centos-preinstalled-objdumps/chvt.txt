
centos-preinstalled/chvt:     file format elf32-littlearm


Disassembly of section .init:

00010690 <.init>:
   10690:	push	{r3, lr}
   10694:	bl	10940 <close@plt+0x1c4>
   10698:	pop	{r3, pc}

Disassembly of section .plt:

0001069c <strtol@plt-0x14>:
   1069c:	push	{lr}		; (str lr, [sp, #-4]!)
   106a0:	ldr	lr, [pc, #4]	; 106ac <strtol@plt-0x4>
   106a4:	add	lr, pc, lr
   106a8:	ldr	pc, [lr, #8]!
   106ac:	andeq	r0, r1, r4, asr r9

000106b0 <strtol@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2388]!	; 0x954

000106bc <dcgettext@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2380]!	; 0x94c

000106c8 <__stack_chk_fail@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2372]!	; 0x944

000106d4 <textdomain@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2364]!	; 0x93c

000106e0 <perror@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2356]!	; 0x934

000106ec <ioctl@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2348]!	; 0x92c

000106f8 <__libc_start_main@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2340]!	; 0x924

00010704 <__gmon_start__@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2332]!	; 0x91c

00010710 <open@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2324]!	; 0x914

0001071c <exit@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2316]!	; 0x90c

00010728 <__printf_chk@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2308]!	; 0x904

00010734 <__fprintf_chk@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010740 <setlocale@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2292]!	; 0x8f4

0001074c <strrchr@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2284]!	; 0x8ec

00010758 <bindtextdomain@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2276]!	; 0x8e4

00010764 <isatty@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010770 <abort@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2260]!	; 0x8d4

0001077c <close@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2252]!	; 0x8cc

Disassembly of section .text:

00010788 <.text>:
   10788:	push	{r4, r5, r6, lr}
   1078c:	mov	r6, r0
   10790:	ldr	r4, [r1]
   10794:	mov	r5, r1
   10798:	mov	r1, #47	; 0x2f
   1079c:	mov	r0, r4
   107a0:	bl	1074c <strrchr@plt>
   107a4:	movw	r1, #3412	; 0xd54
   107a8:	movt	r1, #1
   107ac:	cmp	r0, #0
   107b0:	addne	r3, r0, #1
   107b4:	mov	r0, #6
   107b8:	moveq	r3, r4
   107bc:	movw	r4, #4204	; 0x106c
   107c0:	movt	r4, #2
   107c4:	str	r3, [r4]
   107c8:	bl	10740 <setlocale@plt>
   107cc:	movw	r0, #3192	; 0xc78
   107d0:	movw	r1, #3196	; 0xc7c
   107d4:	movt	r0, #1
   107d8:	movt	r1, #1
   107dc:	bl	10758 <bindtextdomain@plt>
   107e0:	movw	r0, #3192	; 0xc78
   107e4:	movt	r0, #1
   107e8:	bl	106d4 <textdomain@plt>
   107ec:	cmp	r6, #2
   107f0:	beq	1082c <close@plt+0xb0>
   107f4:	movw	r3, #4196	; 0x1064
   107f8:	movt	r3, #2
   107fc:	mov	r2, #5
   10800:	movw	r1, #3240	; 0xca8
   10804:	mov	r0, #0
   10808:	movt	r1, #1
   1080c:	ldr	r4, [r3]
   10810:	bl	106bc <dcgettext@plt>
   10814:	mov	r1, #1
   10818:	mov	r2, r0
   1081c:	mov	r0, r4
   10820:	bl	10734 <__fprintf_chk@plt>
   10824:	mov	r0, #1
   10828:	bl	1071c <exit@plt>
   1082c:	ldr	r3, [r5, #4]
   10830:	ldrb	r2, [r3]
   10834:	cmp	r2, #45	; 0x2d
   10838:	bne	10888 <close@plt+0x10c>
   1083c:	ldrb	r2, [r3, #1]
   10840:	cmp	r2, #86	; 0x56
   10844:	bne	10888 <close@plt+0x10c>
   10848:	ldrb	r6, [r3, #2]
   1084c:	cmp	r6, #0
   10850:	bne	10888 <close@plt+0x10c>
   10854:	mov	r2, #5
   10858:	movw	r1, #3216	; 0xc90
   1085c:	mov	r0, r6
   10860:	movt	r1, #1
   10864:	bl	106bc <dcgettext@plt>
   10868:	ldr	r2, [r4]
   1086c:	movw	r3, #3228	; 0xc9c
   10870:	movt	r3, #1
   10874:	mov	r1, r0
   10878:	mov	r0, #1
   1087c:	bl	10728 <__printf_chk@plt>
   10880:	mov	r0, r6
   10884:	bl	1071c <exit@plt>
   10888:	mov	r0, #0
   1088c:	bl	10af8 <close@plt+0x37c>
   10890:	mov	r1, #0
   10894:	mov	r2, #10
   10898:	mov	r4, r0
   1089c:	ldr	r0, [r5, #4]
   108a0:	bl	106b0 <strtol@plt>
   108a4:	movw	r1, #22022	; 0x5606
   108a8:	mov	r5, r0
   108ac:	mov	r0, r4
   108b0:	mov	r2, r5
   108b4:	bl	106ec <ioctl@plt>
   108b8:	cmp	r0, #0
   108bc:	bne	108ec <close@plt+0x170>
   108c0:	mov	r0, r4
   108c4:	mov	r2, r5
   108c8:	movw	r1, #22023	; 0x5607
   108cc:	bl	106ec <ioctl@plt>
   108d0:	cmp	r0, #0
   108d4:	beq	10900 <close@plt+0x184>
   108d8:	movw	r0, #3276	; 0xccc
   108dc:	movt	r0, #1
   108e0:	bl	106e0 <perror@plt>
   108e4:	mov	r0, #1
   108e8:	bl	1071c <exit@plt>
   108ec:	movw	r0, #3256	; 0xcb8
   108f0:	movt	r0, #1
   108f4:	bl	106e0 <perror@plt>
   108f8:	mov	r0, #1
   108fc:	bl	1071c <exit@plt>
   10900:	bl	1071c <exit@plt>
   10904:	mov	fp, #0
   10908:	mov	lr, #0
   1090c:	pop	{r1}		; (ldr r1, [sp], #4)
   10910:	mov	r2, sp
   10914:	push	{r2}		; (str r2, [sp, #-4]!)
   10918:	push	{r0}		; (str r0, [sp, #-4]!)
   1091c:	ldr	ip, [pc, #16]	; 10934 <close@plt+0x1b8>
   10920:	push	{ip}		; (str ip, [sp, #-4]!)
   10924:	ldr	r0, [pc, #12]	; 10938 <close@plt+0x1bc>
   10928:	ldr	r3, [pc, #12]	; 1093c <close@plt+0x1c0>
   1092c:	bl	106f8 <__libc_start_main@plt>
   10930:	bl	10770 <abort@plt>
   10934:	andeq	r0, r1, r4, ror #24
   10938:	andeq	r0, r1, r8, lsl #15
   1093c:	andeq	r0, r1, r0, lsl #24
   10940:	ldr	r3, [pc, #20]	; 1095c <close@plt+0x1e0>
   10944:	ldr	r2, [pc, #20]	; 10960 <close@plt+0x1e4>
   10948:	add	r3, pc, r3
   1094c:	ldr	r2, [r3, r2]
   10950:	cmp	r2, #0
   10954:	bxeq	lr
   10958:	b	10704 <__gmon_start__@plt>
   1095c:			; <UNDEFINED> instruction: 0x000106b0
   10960:	andeq	r0, r0, r4, asr r0
   10964:	push	{r3, lr}
   10968:	movw	r0, #4188	; 0x105c
   1096c:	ldr	r3, [pc, #36]	; 10998 <close@plt+0x21c>
   10970:	movt	r0, #2
   10974:	rsb	r3, r0, r3
   10978:	cmp	r3, #6
   1097c:	popls	{r3, pc}
   10980:	movw	r3, #0
   10984:	movt	r3, #0
   10988:	cmp	r3, #0
   1098c:	popeq	{r3, pc}
   10990:	blx	r3
   10994:	pop	{r3, pc}
   10998:	andeq	r1, r2, pc, asr r0
   1099c:	push	{r3, lr}
   109a0:	movw	r0, #4188	; 0x105c
   109a4:	movw	r3, #4188	; 0x105c
   109a8:	movt	r0, #2
   109ac:	movt	r3, #2
   109b0:	rsb	r3, r0, r3
   109b4:	asr	r3, r3, #2
   109b8:	add	r3, r3, r3, lsr #31
   109bc:	asrs	r1, r3, #1
   109c0:	popeq	{r3, pc}
   109c4:	movw	r2, #0
   109c8:	movt	r2, #0
   109cc:	cmp	r2, #0
   109d0:	popeq	{r3, pc}
   109d4:	blx	r2
   109d8:	pop	{r3, pc}
   109dc:	push	{r4, lr}
   109e0:	movw	r4, #4200	; 0x1068
   109e4:	movt	r4, #2
   109e8:	ldrb	r3, [r4]
   109ec:	cmp	r3, #0
   109f0:	popne	{r4, pc}
   109f4:	bl	10964 <close@plt+0x1e8>
   109f8:	mov	r3, #1
   109fc:	strb	r3, [r4]
   10a00:	pop	{r4, pc}
   10a04:	movw	r0, #3844	; 0xf04
   10a08:	movt	r0, #2
   10a0c:	push	{r3, lr}
   10a10:	ldr	r3, [r0]
   10a14:	cmp	r3, #0
   10a18:	beq	10a30 <close@plt+0x2b4>
   10a1c:	movw	r3, #0
   10a20:	movt	r3, #0
   10a24:	cmp	r3, #0
   10a28:	beq	10a30 <close@plt+0x2b4>
   10a2c:	blx	r3
   10a30:	pop	{r3, lr}
   10a34:	b	1099c <close@plt+0x220>
   10a38:	push	{r4, lr}
   10a3c:	mov	r1, #2
   10a40:	mov	r4, r0
   10a44:	bl	10710 <open@plt>
   10a48:	cmp	r0, #0
   10a4c:	popge	{r4, pc}
   10a50:	mov	r0, r4
   10a54:	mov	r1, #1
   10a58:	bl	10710 <open@plt>
   10a5c:	cmp	r0, #0
   10a60:	popge	{r4, pc}
   10a64:	mov	r0, r4
   10a68:	mov	r1, #0
   10a6c:	bl	10710 <open@plt>
   10a70:	orr	r0, r0, r0, asr #31
   10a74:	pop	{r4, pc}
   10a78:	push	{r4, r5, lr}
   10a7c:	movw	r4, #4192	; 0x1060
   10a80:	movt	r4, #2
   10a84:	sub	sp, sp, #12
   10a88:	mov	r2, #0
   10a8c:	mov	r5, r0
   10a90:	ldr	r3, [r4]
   10a94:	strb	r2, [sp, #3]
   10a98:	str	r3, [sp, #4]
   10a9c:	bl	10764 <isatty@plt>
   10aa0:	cmp	r0, #0
   10aa4:	bne	10ac4 <close@plt+0x348>
   10aa8:	mov	r0, #0
   10aac:	ldr	r2, [sp, #4]
   10ab0:	ldr	r3, [r4]
   10ab4:	cmp	r2, r3
   10ab8:	bne	10af4 <close@plt+0x378>
   10abc:	add	sp, sp, #12
   10ac0:	pop	{r4, r5, pc}
   10ac4:	mov	r0, r5
   10ac8:	movw	r1, #19251	; 0x4b33
   10acc:	add	r2, sp, #3
   10ad0:	bl	106ec <ioctl@plt>
   10ad4:	cmp	r0, #0
   10ad8:	bne	10aa8 <close@plt+0x32c>
   10adc:	ldrb	r0, [sp, #3]
   10ae0:	sub	r0, r0, #1
   10ae4:	cmp	r0, #1
   10ae8:	movhi	r0, #0
   10aec:	movls	r0, #1
   10af0:	b	10aac <close@plt+0x330>
   10af4:	bl	106c8 <__stack_chk_fail@plt>
   10af8:	push	{r3, r4, r5, lr}
   10afc:	subs	r4, r0, #0
   10b00:	beq	10b24 <close@plt+0x3a8>
   10b04:	bl	10a38 <close@plt+0x2bc>
   10b08:	subs	r5, r0, #0
   10b0c:	blt	10bc4 <close@plt+0x448>
   10b10:	bl	10a78 <close@plt+0x2fc>
   10b14:	cmp	r0, #0
   10b18:	mov	r0, r5
   10b1c:	beq	10bc0 <close@plt+0x444>
   10b20:	pop	{r3, r4, r5, pc}
   10b24:	movw	r4, #3292	; 0xcdc
   10b28:	movw	r0, #3320	; 0xcf8
   10b2c:	movt	r4, #1
   10b30:	movt	r0, #1
   10b34:	bl	10a38 <close@plt+0x2bc>
   10b38:	subs	r5, r0, #0
   10b3c:	blt	10b54 <close@plt+0x3d8>
   10b40:	bl	10a78 <close@plt+0x2fc>
   10b44:	cmp	r0, #0
   10b48:	mov	r0, r5
   10b4c:	bne	10bb4 <close@plt+0x438>
   10b50:	bl	1077c <close@plt>
   10b54:	ldr	r0, [r4, #4]!
   10b58:	cmp	r0, #0
   10b5c:	bne	10b34 <close@plt+0x3b8>
   10b60:	mov	r5, r0
   10b64:	mov	r0, r5
   10b68:	bl	10a78 <close@plt+0x2fc>
   10b6c:	cmp	r0, #0
   10b70:	bne	10bb8 <close@plt+0x43c>
   10b74:	add	r5, r5, #1
   10b78:	cmp	r5, #3
   10b7c:	bne	10b64 <close@plt+0x3e8>
   10b80:	movw	r3, #4196	; 0x1064
   10b84:	movt	r3, #2
   10b88:	mov	r2, #5
   10b8c:	movw	r1, #3356	; 0xd1c
   10b90:	movt	r1, #1
   10b94:	ldr	r4, [r3]
   10b98:	bl	106bc <dcgettext@plt>
   10b9c:	mov	r1, #1
   10ba0:	mov	r2, r0
   10ba4:	mov	r0, r4
   10ba8:	bl	10734 <__fprintf_chk@plt>
   10bac:	mov	r0, #1
   10bb0:	bl	1071c <exit@plt>
   10bb4:	pop	{r3, r4, r5, pc}
   10bb8:	mov	r0, r5
   10bbc:	pop	{r3, r4, r5, pc}
   10bc0:	bl	1077c <close@plt>
   10bc4:	movw	r3, #4196	; 0x1064
   10bc8:	movt	r3, #2
   10bcc:	mov	r2, #5
   10bd0:	movw	r1, #3336	; 0xd08
   10bd4:	mov	r0, #0
   10bd8:	movt	r1, #1
   10bdc:	ldr	r5, [r3]
   10be0:	bl	106bc <dcgettext@plt>
   10be4:	mov	r3, r4
   10be8:	mov	r1, #1
   10bec:	mov	r2, r0
   10bf0:	mov	r0, r5
   10bf4:	bl	10734 <__fprintf_chk@plt>
   10bf8:	mov	r0, #1
   10bfc:	bl	1071c <exit@plt>
   10c00:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10c04:	mov	r7, r0
   10c08:	ldr	r6, [pc, #76]	; 10c5c <close@plt+0x4e0>
   10c0c:	mov	r8, r1
   10c10:	ldr	r5, [pc, #72]	; 10c60 <close@plt+0x4e4>
   10c14:	mov	r9, r2
   10c18:	add	r6, pc, r6
   10c1c:	bl	10690 <strtol@plt-0x20>
   10c20:	add	r5, pc, r5
   10c24:	rsb	r6, r5, r6
   10c28:	asrs	r6, r6, #2
   10c2c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c30:	sub	r5, r5, #4
   10c34:	mov	r4, #0
   10c38:	add	r4, r4, #1
   10c3c:	ldr	r3, [r5, #4]!
   10c40:	mov	r0, r7
   10c44:	mov	r1, r8
   10c48:	mov	r2, r9
   10c4c:	blx	r3
   10c50:	cmp	r4, r6
   10c54:	bne	10c38 <close@plt+0x4bc>
   10c58:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10c5c:	andeq	r0, r1, r0, ror #5
   10c60:	ldrdeq	r0, [r1], -r4
   10c64:	bx	lr

Disassembly of section .fini:

00010c68 <.fini>:
   10c68:	push	{r3, lr}
   10c6c:	pop	{r3, pc}
