
centos-preinstalled/cairo-sphinx:     file format elf32-littlearm


Disassembly of section .init:

00012fec <_init@@Base>:
   12fec:	push	{r3, lr}
   12ff0:	bl	14ed8 <xcb_depth_next@plt+0x1578>
   12ff4:	pop	{r3, pc}

Disassembly of section .plt:

00012ff8 <g_free@plt-0x14>:
   12ff8:	push	{lr}		; (str lr, [sp, #-4]!)
   12ffc:	ldr	lr, [pc, #4]	; 13008 <_init@@Base+0x1c>
   13000:	add	lr, pc, lr
   13004:	ldr	pc, [lr, #8]!
   13008:	strdeq	r9, [r1], -r8

0001300c <g_free@plt>:
   1300c:	add	ip, pc, #0, 12
   13010:	add	ip, ip, #102400	; 0x19000
   13014:	ldr	pc, [ip, #4088]!	; 0xff8

00013018 <XRenderFindVisualFormat@plt>:
   13018:	add	ip, pc, #0, 12
   1301c:	add	ip, ip, #102400	; 0x19000
   13020:	ldr	pc, [ip, #4080]!	; 0xff0

00013024 <qsort@plt>:
   13024:	add	ip, pc, #0, 12
   13028:	add	ip, ip, #102400	; 0x19000
   1302c:	ldr	pc, [ip, #4072]!	; 0xfe8

00013030 <strerror@plt>:
   13030:	add	ip, pc, #0, 12
   13034:	add	ip, ip, #102400	; 0x19000
   13038:	ldr	pc, [ip, #4064]!	; 0xfe0

0001303c <XFree@plt>:
   1303c:	add	ip, pc, #0, 12
   13040:	add	ip, ip, #102400	; 0x19000
   13044:	ldr	pc, [ip, #4056]!	; 0xfd8

00013048 <mkdir@plt>:
   13048:	add	ip, pc, #0, 12
   1304c:	add	ip, ip, #102400	; 0x19000
   13050:	ldr	pc, [ip, #4048]!	; 0xfd0

00013054 <cairo_set_operator@plt>:
   13054:	add	ip, pc, #0, 12
   13058:	add	ip, ip, #102400	; 0x19000
   1305c:	ldr	pc, [ip, #4040]!	; 0xfc8

00013060 <xcb_depth_visuals_iterator@plt>:
   13060:	add	ip, pc, #0, 12
   13064:	add	ip, ip, #102400	; 0x19000
   13068:	ldr	pc, [ip, #4032]!	; 0xfc0

0001306c <cairo_xcb_device_get_connection@plt>:
   1306c:	add	ip, pc, #0, 12
   13070:	add	ip, ip, #102400	; 0x19000
   13074:	ldr	pc, [ip, #4024]!	; 0xfb8

00013078 <abort@plt>:
   13078:	add	ip, pc, #0, 12
   1307c:	add	ip, ip, #102400	; 0x19000
   13080:	ldr	pc, [ip, #4016]!	; 0xfb0

00013084 <connect@plt>:
   13084:	add	ip, pc, #0, 12
   13088:	add	ip, ip, #102400	; 0x19000
   1308c:	ldr	pc, [ip, #4008]!	; 0xfa8

00013090 <xcb_connection_has_error@plt>:
   13090:	add	ip, pc, #0, 12
   13094:	add	ip, ip, #102400	; 0x19000
   13098:	ldr	pc, [ip, #4000]!	; 0xfa0

0001309c <XRenderFindStandardFormat@plt>:
   1309c:	add	ip, pc, #0, 12
   130a0:	add	ip, ip, #102400	; 0x19000
   130a4:	ldr	pc, [ip, #3992]!	; 0xf98

000130a8 <xcb_destroy_window@plt>:
   130a8:	add	ip, pc, #0, 12
   130ac:	add	ip, ip, #102400	; 0x19000
   130b0:	ldr	pc, [ip, #3984]!	; 0xf90

000130b4 <memcmp@plt>:
   130b4:	add	ip, pc, #0, 12
   130b8:	add	ip, ip, #102400	; 0x19000
   130bc:	ldr	pc, [ip, #3976]!	; 0xf88

000130c0 <__libc_start_main@plt>:
   130c0:	add	ip, pc, #0, 12
   130c4:	add	ip, ip, #102400	; 0x19000
   130c8:	ldr	pc, [ip, #3968]!	; 0xf80

000130cc <cairo_clip_extents@plt>:
   130cc:	add	ip, pc, #0, 12
   130d0:	add	ip, ip, #102400	; 0x19000
   130d4:	ldr	pc, [ip, #3960]!	; 0xf78

000130d8 <signal@plt>:
   130d8:	add	ip, pc, #0, 12
   130dc:	add	ip, ip, #102400	; 0x19000
   130e0:	ldr	pc, [ip, #3952]!	; 0xf70

000130e4 <cairo_device_destroy@plt>:
   130e4:	add	ip, pc, #0, 12
   130e8:	add	ip, ip, #102400	; 0x19000
   130ec:	ldr	pc, [ip, #3944]!	; 0xf68

000130f0 <cairo_recording_surface_create@plt>:
   130f0:	add	ip, pc, #0, 12
   130f4:	add	ip, ip, #102400	; 0x19000
   130f8:	ldr	pc, [ip, #3936]!	; 0xf60

000130fc <xcb_create_pixmap@plt>:
   130fc:	add	ip, pc, #0, 12
   13100:	add	ip, ip, #102400	; 0x19000
   13104:	ldr	pc, [ip, #3928]!	; 0xf58

00013108 <__gmon_start__@plt>:
   13108:	add	ip, pc, #0, 12
   1310c:	add	ip, ip, #102400	; 0x19000
   13110:	ldr	pc, [ip, #3920]!	; 0xf50

00013114 <cairo_destroy@plt>:
   13114:	add	ip, pc, #0, 12
   13118:	add	ip, ip, #102400	; 0x19000
   1311c:	ldr	pc, [ip, #3912]!	; 0xf48

00013120 <cairo_surface_set_device_offset@plt>:
   13120:	add	ip, pc, #0, 12
   13124:	add	ip, ip, #102400	; 0x19000
   13128:	ldr	pc, [ip, #3904]!	; 0xf40

0001312c <xcb_render_pictforminfo_next@plt>:
   1312c:	add	ip, pc, #0, 12
   13130:	add	ip, ip, #102400	; 0x19000
   13134:	ldr	pc, [ip, #3896]!	; 0xf38

00013138 <rename@plt>:
   13138:	add	ip, pc, #0, 12
   1313c:	add	ip, ip, #102400	; 0x19000
   13140:	ldr	pc, [ip, #3888]!	; 0xf30

00013144 <recv@plt>:
   13144:	add	ip, pc, #0, 12
   13148:	add	ip, ip, #102400	; 0x19000
   1314c:	ldr	pc, [ip, #3880]!	; 0xf28

00013150 <getenv@plt>:
   13150:	add	ip, pc, #0, 12
   13154:	add	ip, ip, #102400	; 0x19000
   13158:	ldr	pc, [ip, #3872]!	; 0xf20

0001315c <cairo_surface_get_user_data@plt>:
   1315c:	add	ip, pc, #0, 12
   13160:	add	ip, ip, #102400	; 0x19000
   13164:	ldr	pc, [ip, #3864]!	; 0xf18

00013168 <__printf_chk@plt>:
   13168:	add	ip, pc, #0, 12
   1316c:	add	ip, ip, #102400	; 0x19000
   13170:	ldr	pc, [ip, #3856]!	; 0xf10

00013174 <system@plt>:
   13174:	add	ip, pc, #0, 12
   13178:	add	ip, ip, #102400	; 0x19000
   1317c:	ldr	pc, [ip, #3848]!	; 0xf08

00013180 <strchr@plt>:
   13180:	add	ip, pc, #0, 12
   13184:	add	ip, ip, #102400	; 0x19000
   13188:	ldr	pc, [ip, #3840]!	; 0xf00

0001318c <cairo_get_target@plt>:
   1318c:	add	ip, pc, #0, 12
   13190:	add	ip, ip, #102400	; 0x19000
   13194:	ldr	pc, [ip, #3832]!	; 0xef8

00013198 <listen@plt>:
   13198:	add	ip, pc, #0, 12
   1319c:	add	ip, ip, #102400	; 0x19000
   131a0:	ldr	pc, [ip, #3824]!	; 0xef0

000131a4 <calloc@plt>:
   131a4:	add	ip, pc, #0, 12
   131a8:	add	ip, ip, #102400	; 0x19000
   131ac:	ldr	pc, [ip, #3816]!	; 0xee8

000131b0 <cairo_surface_get_content@plt>:
   131b0:	add	ip, pc, #0, 12
   131b4:	add	ip, ip, #102400	; 0x19000
   131b8:	ldr	pc, [ip, #3808]!	; 0xee0

000131bc <cairo_set_source_surface@plt>:
   131bc:	add	ip, pc, #0, 12
   131c0:	add	ip, ip, #102400	; 0x19000
   131c4:	ldr	pc, [ip, #3800]!	; 0xed8

000131c8 <eglInitialize@plt>:
   131c8:	add	ip, pc, #0, 12
   131cc:	add	ip, ip, #102400	; 0x19000
   131d0:	ldr	pc, [ip, #3792]!	; 0xed0

000131d4 <glXDestroyContext@plt>:
   131d4:	add	ip, pc, #0, 12
   131d8:	add	ip, ip, #102400	; 0x19000
   131dc:	ldr	pc, [ip, #3784]!	; 0xec8

000131e0 <xcb_get_image_reply@plt>:
   131e0:	add	ip, pc, #0, 12
   131e4:	add	ip, ip, #102400	; 0x19000
   131e8:	ldr	pc, [ip, #3776]!	; 0xec0

000131ec <memset@plt>:
   131ec:	add	ip, pc, #0, 12
   131f0:	add	ip, ip, #102400	; 0x19000
   131f4:	ldr	pc, [ip, #3768]!	; 0xeb8

000131f8 <cairo_glx_device_create@plt>:
   131f8:	add	ip, pc, #0, 12
   131fc:	add	ip, ip, #102400	; 0x19000
   13200:	ldr	pc, [ip, #3760]!	; 0xeb0

00013204 <glXCreateContext@plt>:
   13204:	add	ip, pc, #0, 12
   13208:	add	ip, ip, #102400	; 0x19000
   1320c:	ldr	pc, [ip, #3752]!	; 0xea8

00013210 <XCreateWindow@plt>:
   13210:	add	ip, pc, #0, 12
   13214:	add	ip, ip, #102400	; 0x19000
   13218:	ldr	pc, [ip, #3744]!	; 0xea0

0001321c <setsid@plt>:
   1321c:	add	ip, pc, #0, 12
   13220:	add	ip, ip, #102400	; 0x19000
   13224:	ldr	pc, [ip, #3736]!	; 0xe98

00013228 <execvp@plt>:
   13228:	add	ip, pc, #0, 12
   1322c:	add	ip, ip, #102400	; 0x19000
   13230:	ldr	pc, [ip, #3728]!	; 0xe90

00013234 <cairo_script_interpreter_destroy@plt>:
   13234:	add	ip, pc, #0, 12
   13238:	add	ip, ip, #102400	; 0x19000
   1323c:	ldr	pc, [ip, #3720]!	; 0xe88

00013240 <cairo_script_interpreter_install_hooks@plt>:
   13240:	add	ip, pc, #0, 12
   13244:	add	ip, ip, #102400	; 0x19000
   13248:	ldr	pc, [ip, #3712]!	; 0xe80

0001324c <XCreateColormap@plt>:
   1324c:	add	ip, pc, #0, 12
   13250:	add	ip, ip, #102400	; 0x19000
   13254:	ldr	pc, [ip, #3704]!	; 0xe78

00013258 <eglDestroyContext@plt>:
   13258:	add	ip, pc, #0, 12
   1325c:	add	ip, ip, #102400	; 0x19000
   13260:	ldr	pc, [ip, #3696]!	; 0xe70

00013264 <__assert_fail@plt>:
   13264:	add	ip, pc, #0, 12
   13268:	add	ip, ip, #102400	; 0x19000
   1326c:	ldr	pc, [ip, #3688]!	; 0xe68

00013270 <cairo_xlib_device_debug_set_precision@plt>:
   13270:	add	ip, pc, #0, 12
   13274:	add	ip, ip, #102400	; 0x19000
   13278:	ldr	pc, [ip, #3680]!	; 0xe60

0001327c <xcb_connect@plt>:
   1327c:	add	ip, pc, #0, 12
   13280:	add	ip, ip, #102400	; 0x19000
   13284:	ldr	pc, [ip, #3672]!	; 0xe58

00013288 <cairo_xcb_device_debug_set_precision@plt>:
   13288:	add	ip, pc, #0, 12
   1328c:	add	ip, ip, #102400	; 0x19000
   13290:	ldr	pc, [ip, #3664]!	; 0xe50

00013294 <eglCreateContext@plt>:
   13294:	add	ip, pc, #0, 12
   13298:	add	ip, ip, #102400	; 0x19000
   1329c:	ldr	pc, [ip, #3656]!	; 0xe48

000132a0 <XOpenDisplay@plt>:
   132a0:	add	ip, pc, #0, 12
   132a4:	add	ip, ip, #102400	; 0x19000
   132a8:	ldr	pc, [ip, #3648]!	; 0xe40

000132ac <eglMakeCurrent@plt>:
   132ac:	add	ip, pc, #0, 12
   132b0:	add	ip, ip, #102400	; 0x19000
   132b4:	ldr	pc, [ip, #3640]!	; 0xe38

000132b8 <cairo_xlib_surface_create_with_xrender_format@plt>:
   132b8:	add	ip, pc, #0, 12
   132bc:	add	ip, ip, #102400	; 0x19000
   132c0:	ldr	pc, [ip, #3632]!	; 0xe30

000132c4 <xcb_map_window@plt>:
   132c4:	add	ip, pc, #0, 12
   132c8:	add	ip, ip, #102400	; 0x19000
   132cc:	ldr	pc, [ip, #3624]!	; 0xe28

000132d0 <_exit@plt>:
   132d0:	add	ip, pc, #0, 12
   132d4:	add	ip, ip, #102400	; 0x19000
   132d8:	ldr	pc, [ip, #3616]!	; 0xe20

000132dc <cairo_paint@plt>:
   132dc:	add	ip, pc, #0, 12
   132e0:	add	ip, ip, #102400	; 0x19000
   132e4:	ldr	pc, [ip, #3608]!	; 0xe18

000132e8 <xcb_setup_roots_iterator@plt>:
   132e8:	add	ip, pc, #0, 12
   132ec:	add	ip, ip, #102400	; 0x19000
   132f0:	ldr	pc, [ip, #3600]!	; 0xe10

000132f4 <cairo_surface_mark_dirty@plt>:
   132f4:	add	ip, pc, #0, 12
   132f8:	add	ip, ip, #102400	; 0x19000
   132fc:	ldr	pc, [ip, #3592]!	; 0xe08

00013300 <free@plt>:
   13300:	add	ip, pc, #0, 12
   13304:	add	ip, ip, #102400	; 0x19000
   13308:	ldr	pc, [ip, #3584]!	; 0xe00

0001330c <read@plt>:
   1330c:	add	ip, pc, #0, 12
   13310:	add	ip, ip, #102400	; 0x19000
   13314:	ldr	pc, [ip, #3576]!	; 0xdf8

00013318 <write@plt>:
   13318:	add	ip, pc, #0, 12
   1331c:	add	ip, ip, #102400	; 0x19000
   13320:	ldr	pc, [ip, #3568]!	; 0xdf0

00013324 <cairo_set_source_rgb@plt>:
   13324:	add	ip, pc, #0, 12
   13328:	add	ip, ip, #102400	; 0x19000
   1332c:	ldr	pc, [ip, #3560]!	; 0xde8

00013330 <XSynchronize@plt>:
   13330:	add	ip, pc, #0, 12
   13334:	add	ip, ip, #102400	; 0x19000
   13338:	ldr	pc, [ip, #3552]!	; 0xde0

0001333c <XDestroyWindow@plt>:
   1333c:	add	ip, pc, #0, 12
   13340:	add	ip, ip, #102400	; 0x19000
   13344:	ldr	pc, [ip, #3544]!	; 0xdd8

00013348 <pixman_version_string@plt>:
   13348:	add	ip, pc, #0, 12
   1334c:	add	ip, ip, #102400	; 0x19000
   13350:	ldr	pc, [ip, #3536]!	; 0xdd0

00013354 <XCloseDisplay@plt>:
   13354:	add	ip, pc, #0, 12
   13358:	add	ip, ip, #102400	; 0x19000
   1335c:	ldr	pc, [ip, #3528]!	; 0xdc8

00013360 <accept@plt>:
   13360:	add	ip, pc, #0, 12
   13364:	add	ip, ip, #102400	; 0x19000
   13368:	ldr	pc, [ip, #3520]!	; 0xdc0

0001336c <socket@plt>:
   1336c:	add	ip, pc, #0, 12
   13370:	add	ip, ip, #102400	; 0x19000
   13374:	ldr	pc, [ip, #3512]!	; 0xdb8

00013378 <xcb_get_setup@plt>:
   13378:	add	ip, pc, #0, 12
   1337c:	add	ip, ip, #102400	; 0x19000
   13380:	ldr	pc, [ip, #3504]!	; 0xdb0

00013384 <cairo_image_surface_create_from_png@plt>:
   13384:	add	ip, pc, #0, 12
   13388:	add	ip, ip, #102400	; 0x19000
   1338c:	ldr	pc, [ip, #3496]!	; 0xda8

00013390 <cairo_device_release@plt>:
   13390:	add	ip, pc, #0, 12
   13394:	add	ip, ip, #102400	; 0x19000
   13398:	ldr	pc, [ip, #3488]!	; 0xda0

0001339c <shm_unlink@plt>:
   1339c:	add	ip, pc, #0, 12
   133a0:	add	ip, ip, #102400	; 0x19000
   133a4:	ldr	pc, [ip, #3480]!	; 0xd98

000133a8 <cairo_script_interpreter_feed_string@plt>:
   133a8:	add	ip, pc, #0, 12
   133ac:	add	ip, ip, #102400	; 0x19000
   133b0:	ldr	pc, [ip, #3472]!	; 0xd90

000133b4 <cairo_gl_surface_swapbuffers@plt>:
   133b4:	add	ip, pc, #0, 12
   133b8:	add	ip, ip, #102400	; 0x19000
   133bc:	ldr	pc, [ip, #3464]!	; 0xd88

000133c0 <xcb_create_pixmap_checked@plt>:
   133c0:	add	ip, pc, #0, 12
   133c4:	add	ip, ip, #102400	; 0x19000
   133c8:	ldr	pc, [ip, #3456]!	; 0xd80

000133cc <strlen@plt>:
   133cc:	add	ip, pc, #0, 12
   133d0:	add	ip, ip, #102400	; 0x19000
   133d4:	ldr	pc, [ip, #3448]!	; 0xd78

000133d8 <sscanf@plt>:
   133d8:	add	ip, pc, #0, 12
   133dc:	add	ip, ip, #102400	; 0x19000
   133e0:	ldr	pc, [ip, #3440]!	; 0xd70

000133e4 <XDisplayName@plt>:
   133e4:	add	ip, pc, #0, 12
   133e8:	add	ip, ip, #102400	; 0x19000
   133ec:	ldr	pc, [ip, #3432]!	; 0xd68

000133f0 <unlink@plt>:
   133f0:	add	ip, pc, #0, 12
   133f4:	add	ip, ip, #102400	; 0x19000
   133f8:	ldr	pc, [ip, #3424]!	; 0xd60

000133fc <cairo_device_acquire@plt>:
   133fc:	add	ip, pc, #0, 12
   13400:	add	ip, ip, #102400	; 0x19000
   13404:	ldr	pc, [ip, #3416]!	; 0xd58

00013408 <cairo_gl_surface_create@plt>:
   13408:	add	ip, pc, #0, 12
   1340c:	add	ip, ip, #102400	; 0x19000
   13410:	ldr	pc, [ip, #3408]!	; 0xd50

00013414 <cairo_gl_surface_create_for_window@plt>:
   13414:	add	ip, pc, #0, 12
   13418:	add	ip, ip, #102400	; 0x19000
   1341c:	ldr	pc, [ip, #3400]!	; 0xd48

00013420 <cairo_xcb_surface_create@plt>:
   13420:	add	ip, pc, #0, 12
   13424:	add	ip, ip, #102400	; 0x19000
   13428:	ldr	pc, [ip, #3392]!	; 0xd40

0001342c <pthread_create@plt>:
   1342c:	add	ip, pc, #0, 12
   13430:	add	ip, ip, #102400	; 0x19000
   13434:	ldr	pc, [ip, #3384]!	; 0xd38

00013438 <shm_open@plt>:
   13438:	add	ip, pc, #0, 12
   1343c:	add	ip, ip, #102400	; 0x19000
   13440:	ldr	pc, [ip, #3376]!	; 0xd30

00013444 <memcpy@plt>:
   13444:	add	ip, pc, #0, 12
   13448:	add	ip, ip, #102400	; 0x19000
   1344c:	ldr	pc, [ip, #3368]!	; 0xd28

00013450 <cairo_create@plt>:
   13450:	add	ip, pc, #0, 12
   13454:	add	ip, ip, #102400	; 0x19000
   13458:	ldr	pc, [ip, #3360]!	; 0xd20

0001345c <cairo_script_interpreter_create@plt>:
   1345c:	add	ip, pc, #0, 12
   13460:	add	ip, ip, #102400	; 0x19000
   13464:	ldr	pc, [ip, #3352]!	; 0xd18

00013468 <cairo_xlib_surface_create@plt>:
   13468:	add	ip, pc, #0, 12
   1346c:	add	ip, ip, #102400	; 0x19000
   13470:	ldr	pc, [ip, #3344]!	; 0xd10

00013474 <feof@plt>:
   13474:	add	ip, pc, #0, 12
   13478:	add	ip, ip, #102400	; 0x19000
   1347c:	ldr	pc, [ip, #3336]!	; 0xd08

00013480 <strtol@plt>:
   13480:	add	ip, pc, #0, 12
   13484:	add	ip, ip, #102400	; 0x19000
   13488:	ldr	pc, [ip, #3328]!	; 0xd00

0001348c <xcb_flush@plt>:
   1348c:	add	ip, pc, #0, 12
   13490:	add	ip, ip, #102400	; 0x19000
   13494:	ldr	pc, [ip, #3320]!	; 0xcf8

00013498 <cairo_surface_status@plt>:
   13498:	add	ip, pc, #0, 12
   1349c:	add	ip, ip, #102400	; 0x19000
   134a0:	ldr	pc, [ip, #3312]!	; 0xcf0

000134a4 <__vsnprintf_chk@plt>:
   134a4:	add	ip, pc, #0, 12
   134a8:	add	ip, ip, #102400	; 0x19000
   134ac:	ldr	pc, [ip, #3304]!	; 0xce8

000134b0 <cairo_device_finish@plt>:
   134b0:	add	ip, pc, #0, 12
   134b4:	add	ip, ip, #102400	; 0x19000
   134b8:	ldr	pc, [ip, #3296]!	; 0xce0

000134bc <open64@plt>:
   134bc:	add	ip, pc, #0, 12
   134c0:	add	ip, ip, #102400	; 0x19000
   134c4:	ldr	pc, [ip, #3288]!	; 0xcd8

000134c8 <xcb_poll_for_event@plt>:
   134c8:	add	ip, pc, #0, 12
   134cc:	add	ip, ip, #102400	; 0x19000
   134d0:	ldr	pc, [ip, #3280]!	; 0xcd0

000134d4 <cairo_script_surface_create@plt>:
   134d4:	add	ip, pc, #0, 12
   134d8:	add	ip, ip, #102400	; 0x19000
   134dc:	ldr	pc, [ip, #3272]!	; 0xcc8

000134e0 <XMapWindow@plt>:
   134e0:	add	ip, pc, #0, 12
   134e4:	add	ip, ip, #102400	; 0x19000
   134e8:	ldr	pc, [ip, #3264]!	; 0xcc0

000134ec <cairo_image_surface_get_data@plt>:
   134ec:	add	ip, pc, #0, 12
   134f0:	add	ip, ip, #102400	; 0x19000
   134f4:	ldr	pc, [ip, #3256]!	; 0xcb8

000134f8 <cairo_image_surface_get_format@plt>:
   134f8:	add	ip, pc, #0, 12
   134fc:	add	ip, ip, #102400	; 0x19000
   13500:	ldr	pc, [ip, #3248]!	; 0xcb0

00013504 <putenv@plt>:
   13504:	add	ip, pc, #0, 12
   13508:	add	ip, ip, #102400	; 0x19000
   1350c:	ldr	pc, [ip, #3240]!	; 0xca8

00013510 <__snprintf_chk@plt>:
   13510:	add	ip, pc, #0, 12
   13514:	add	ip, ip, #102400	; 0x19000
   13518:	ldr	pc, [ip, #3232]!	; 0xca0

0001351c <bind@plt>:
   1351c:	add	ip, pc, #0, 12
   13520:	add	ip, ip, #102400	; 0x19000
   13524:	ldr	pc, [ip, #3224]!	; 0xc98

00013528 <fdopen@plt>:
   13528:	add	ip, pc, #0, 12
   1352c:	add	ip, ip, #102400	; 0x19000
   13530:	ldr	pc, [ip, #3216]!	; 0xc90

00013534 <strstr@plt>:
   13534:	add	ip, pc, #0, 12
   13538:	add	ip, ip, #102400	; 0x19000
   1353c:	ldr	pc, [ip, #3208]!	; 0xc88

00013540 <close@plt>:
   13540:	add	ip, pc, #0, 12
   13544:	add	ip, ip, #102400	; 0x19000
   13548:	ldr	pc, [ip, #3200]!	; 0xc80

0001354c <cairo_xcb_device_debug_cap_xrender_version@plt>:
   1354c:	add	ip, pc, #0, 12
   13550:	add	ip, ip, #102400	; 0x19000
   13554:	ldr	pc, [ip, #3192]!	; 0xc78

00013558 <glXChooseVisual@plt>:
   13558:	add	ip, pc, #0, 12
   1355c:	add	ip, ip, #102400	; 0x19000
   13560:	ldr	pc, [ip, #3184]!	; 0xc70

00013564 <cairo_status@plt>:
   13564:	add	ip, pc, #0, 12
   13568:	add	ip, ip, #102400	; 0x19000
   1356c:	ldr	pc, [ip, #3176]!	; 0xc68

00013570 <fwrite@plt>:
   13570:	add	ip, pc, #0, 12
   13574:	add	ip, ip, #102400	; 0x19000
   13578:	ldr	pc, [ip, #3168]!	; 0xc60

0001357c <cairo_xlib_surface_get_display@plt>:
   1357c:	add	ip, pc, #0, 12
   13580:	add	ip, ip, #102400	; 0x19000
   13584:	ldr	pc, [ip, #3160]!	; 0xc58

00013588 <XScreenOfDisplay@plt>:
   13588:	add	ip, pc, #0, 12
   1358c:	add	ip, ip, #102400	; 0x19000
   13590:	ldr	pc, [ip, #3152]!	; 0xc50

00013594 <cairo_format_stride_for_width@plt>:
   13594:	add	ip, pc, #0, 12
   13598:	add	ip, ip, #102400	; 0x19000
   1359c:	ldr	pc, [ip, #3144]!	; 0xc48

000135a0 <__ctype_b_loc@plt>:
   135a0:	add	ip, pc, #0, 12
   135a4:	add	ip, ip, #102400	; 0x19000
   135a8:	ldr	pc, [ip, #3136]!	; 0xc40

000135ac <__xstat64@plt>:
   135ac:	add	ip, pc, #0, 12
   135b0:	add	ip, ip, #102400	; 0x19000
   135b4:	ldr	pc, [ip, #3128]!	; 0xc38

000135b8 <cairo_surface_finish@plt>:
   135b8:	add	ip, pc, #0, 12
   135bc:	add	ip, ip, #102400	; 0x19000
   135c0:	ldr	pc, [ip, #3120]!	; 0xc30

000135c4 <cairo_image_surface_create_for_data@plt>:
   135c4:	add	ip, pc, #0, 12
   135c8:	add	ip, ip, #102400	; 0x19000
   135cc:	ldr	pc, [ip, #3112]!	; 0xc28

000135d0 <cairo_device_get_user_data@plt>:
   135d0:	add	ip, pc, #0, 12
   135d4:	add	ip, ip, #102400	; 0x19000
   135d8:	ldr	pc, [ip, #3104]!	; 0xc20

000135dc <xcb_screen_allowed_depths_iterator@plt>:
   135dc:	add	ip, pc, #0, 12
   135e0:	add	ip, ip, #102400	; 0x19000
   135e4:	ldr	pc, [ip, #3096]!	; 0xc18

000135e8 <cairo_script_interpreter_finish@plt>:
   135e8:	add	ip, pc, #0, 12
   135ec:	add	ip, ip, #102400	; 0x19000
   135f0:	ldr	pc, [ip, #3088]!	; 0xc10

000135f4 <malloc@plt>:
   135f4:	add	ip, pc, #0, 12
   135f8:	add	ip, ip, #102400	; 0x19000
   135fc:	ldr	pc, [ip, #3080]!	; 0xc08

00013600 <mmap64@plt>:
   13600:	add	ip, pc, #0, 12
   13604:	add	ip, ip, #102400	; 0x19000
   13608:	ldr	pc, [ip, #3072]!	; 0xc00

0001360c <cairo_image_surface_get_height@plt>:
   1360c:	add	ip, pc, #0, 12
   13610:	add	ip, ip, #102400	; 0x19000
   13614:	ldr	pc, [ip, #3064]!	; 0xbf8

00013618 <__stack_chk_fail@plt>:
   13618:	add	ip, pc, #0, 12
   1361c:	add	ip, ip, #102400	; 0x19000
   13620:	ldr	pc, [ip, #3056]!	; 0xbf0

00013624 <xcb_render_query_pict_formats@plt>:
   13624:	add	ip, pc, #0, 12
   13628:	add	ip, ip, #102400	; 0x19000
   1362c:	ldr	pc, [ip, #3048]!	; 0xbe8

00013630 <xcb_get_image@plt>:
   13630:	add	ip, pc, #0, 12
   13634:	add	ip, ip, #102400	; 0x19000
   13638:	ldr	pc, [ip, #3040]!	; 0xbe0

0001363c <__fprintf_chk@plt>:
   1363c:	add	ip, pc, #0, 12
   13640:	add	ip, ip, #102400	; 0x19000
   13644:	ldr	pc, [ip, #3032]!	; 0xbd8

00013648 <poll@plt>:
   13648:	add	ip, pc, #0, 12
   1364c:	add	ip, ip, #102400	; 0x19000
   13650:	ldr	pc, [ip, #3024]!	; 0xbd0

00013654 <xcb_render_query_pict_formats_reply@plt>:
   13654:	add	ip, pc, #0, 12
   13658:	add	ip, ip, #102400	; 0x19000
   1365c:	ldr	pc, [ip, #3016]!	; 0xbc8

00013660 <fputc@plt>:
   13660:	add	ip, pc, #0, 12
   13664:	add	ip, ip, #102400	; 0x19000
   13668:	ldr	pc, [ip, #3008]!	; 0xbc0

0001366c <cairo_script_from_recording_surface@plt>:
   1366c:	add	ip, pc, #0, 12
   13670:	add	ip, ip, #102400	; 0x19000
   13674:	ldr	pc, [ip, #3000]!	; 0xbb8

00013678 <xcb_create_window_checked@plt>:
   13678:	add	ip, pc, #0, 12
   1367c:	add	ip, ip, #102400	; 0x19000
   13680:	ldr	pc, [ip, #2992]!	; 0xbb0

00013684 <memmove@plt>:
   13684:	add	ip, pc, #0, 12
   13688:	add	ip, ip, #102400	; 0x19000
   1368c:	ldr	pc, [ip, #2984]!	; 0xba8

00013690 <popen@plt>:
   13690:	add	ip, pc, #0, 12
   13694:	add	ip, ip, #102400	; 0x19000
   13698:	ldr	pc, [ip, #2976]!	; 0xba0

0001369c <dup2@plt>:
   1369c:	add	ip, pc, #0, 12
   136a0:	add	ip, ip, #102400	; 0x19000
   136a4:	ldr	pc, [ip, #2968]!	; 0xb98

000136a8 <xcb_free_pixmap@plt>:
   136a8:	add	ip, pc, #0, 12
   136ac:	add	ip, ip, #102400	; 0x19000
   136b0:	ldr	pc, [ip, #2960]!	; 0xb90

000136b4 <XGetImage@plt>:
   136b4:	add	ip, pc, #0, 12
   136b8:	add	ip, ip, #102400	; 0x19000
   136bc:	ldr	pc, [ip, #2952]!	; 0xb88

000136c0 <g_file_get_contents@plt>:
   136c0:	add	ip, pc, #0, 12
   136c4:	add	ip, ip, #102400	; 0x19000
   136c8:	ldr	pc, [ip, #2944]!	; 0xb80

000136cc <glGetString@plt>:
   136cc:	add	ip, pc, #0, 12
   136d0:	add	ip, ip, #102400	; 0x19000
   136d4:	ldr	pc, [ip, #2936]!	; 0xb78

000136d8 <xcb_render_query_pict_formats_formats_iterator@plt>:
   136d8:	add	ip, pc, #0, 12
   136dc:	add	ip, ip, #102400	; 0x19000
   136e0:	ldr	pc, [ip, #2928]!	; 0xb70

000136e4 <cairo_script_create@plt>:
   136e4:	add	ip, pc, #0, 12
   136e8:	add	ip, ip, #102400	; 0x19000
   136ec:	ldr	pc, [ip, #2920]!	; 0xb68

000136f0 <cairo_xcb_surface_create_with_xrender_format@plt>:
   136f0:	add	ip, pc, #0, 12
   136f4:	add	ip, ip, #102400	; 0x19000
   136f8:	ldr	pc, [ip, #2912]!	; 0xb60

000136fc <fcntl@plt>:
   136fc:	add	ip, pc, #0, 12
   13700:	add	ip, ip, #102400	; 0x19000
   13704:	ldr	pc, [ip, #2904]!	; 0xb58

00013708 <cairo_surface_destroy@plt>:
   13708:	add	ip, pc, #0, 12
   1370c:	add	ip, ip, #102400	; 0x19000
   13710:	ldr	pc, [ip, #2896]!	; 0xb50

00013714 <fork@plt>:
   13714:	add	ip, pc, #0, 12
   13718:	add	ip, ip, #102400	; 0x19000
   1371c:	ldr	pc, [ip, #2888]!	; 0xb48

00013720 <cairo_device_reference@plt>:
   13720:	add	ip, pc, #0, 12
   13724:	add	ip, ip, #102400	; 0x19000
   13728:	ldr	pc, [ip, #2880]!	; 0xb40

0001372c <xcb_request_check@plt>:
   1372c:	add	ip, pc, #0, 12
   13730:	add	ip, ip, #102400	; 0x19000
   13734:	ldr	pc, [ip, #2872]!	; 0xb38

00013738 <xcb_generate_id@plt>:
   13738:	add	ip, pc, #0, 12
   1373c:	add	ip, ip, #102400	; 0x19000
   13740:	ldr	pc, [ip, #2864]!	; 0xb30

00013744 <cairo_append_path@plt>:
   13744:	add	ip, pc, #0, 12
   13748:	add	ip, ip, #102400	; 0x19000
   1374c:	ldr	pc, [ip, #2856]!	; 0xb28

00013750 <cairo_xlib_device_debug_cap_xrender_version@plt>:
   13750:	add	ip, pc, #0, 12
   13754:	add	ip, ip, #102400	; 0x19000
   13758:	ldr	pc, [ip, #2848]!	; 0xb20

0001375c <xcb_get_input_focus@plt>:
   1375c:	add	ip, pc, #0, 12
   13760:	add	ip, ip, #102400	; 0x19000
   13764:	ldr	pc, [ip, #2840]!	; 0xb18

00013768 <munmap@plt>:
   13768:	add	ip, pc, #0, 12
   1376c:	add	ip, ip, #102400	; 0x19000
   13770:	ldr	pc, [ip, #2832]!	; 0xb10

00013774 <xcb_disconnect@plt>:
   13774:	add	ip, pc, #0, 12
   13778:	add	ip, ip, #102400	; 0x19000
   1377c:	ldr	pc, [ip, #2824]!	; 0xb08

00013780 <XFreePixmap@plt>:
   13780:	add	ip, pc, #0, 12
   13784:	add	ip, ip, #102400	; 0x19000
   13788:	ldr	pc, [ip, #2816]!	; 0xb00

0001378c <cairo_image_surface_get_width@plt>:
   1378c:	add	ip, pc, #0, 12
   13790:	add	ip, ip, #102400	; 0x19000
   13794:	ldr	pc, [ip, #2808]!	; 0xaf8

00013798 <eglBindAPI@plt>:
   13798:	add	ip, pc, #0, 12
   1379c:	add	ip, ip, #102400	; 0x19000
   137a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000137a4 <cairo_surface_write_to_png@plt>:
   137a4:	add	ip, pc, #0, 12
   137a8:	add	ip, ip, #102400	; 0x19000
   137ac:	ldr	pc, [ip, #2792]!	; 0xae8

000137b0 <xcb_visualtype_next@plt>:
   137b0:	add	ip, pc, #0, 12
   137b4:	add	ip, ip, #102400	; 0x19000
   137b8:	ldr	pc, [ip, #2784]!	; 0xae0

000137bc <cairo_surface_set_user_data@plt>:
   137bc:	add	ip, pc, #0, 12
   137c0:	add	ip, ip, #102400	; 0x19000
   137c4:	ldr	pc, [ip, #2776]!	; 0xad8

000137c8 <__sprintf_chk@plt>:
   137c8:	add	ip, pc, #0, 12
   137cc:	add	ip, ip, #102400	; 0x19000
   137d0:	ldr	pc, [ip, #2768]!	; 0xad0

000137d4 <fread@plt>:
   137d4:	add	ip, pc, #0, 12
   137d8:	add	ip, ip, #102400	; 0x19000
   137dc:	ldr	pc, [ip, #2760]!	; 0xac8

000137e0 <cairo_device_set_user_data@plt>:
   137e0:	add	ip, pc, #0, 12
   137e4:	add	ip, ip, #102400	; 0x19000
   137e8:	ldr	pc, [ip, #2752]!	; 0xac0

000137ec <strncmp@plt>:
   137ec:	add	ip, pc, #0, 12
   137f0:	add	ip, ip, #102400	; 0x19000
   137f4:	ldr	pc, [ip, #2744]!	; 0xab8

000137f8 <XCreatePixmap@plt>:
   137f8:	add	ip, pc, #0, 12
   137fc:	add	ip, ip, #102400	; 0x19000
   13800:	ldr	pc, [ip, #2736]!	; 0xab0

00013804 <kill@plt>:
   13804:	add	ip, pc, #0, 12
   13808:	add	ip, ip, #102400	; 0x19000
   1380c:	ldr	pc, [ip, #2728]!	; 0xaa8

00013810 <ferror@plt>:
   13810:	add	ip, pc, #0, 12
   13814:	add	ip, ip, #102400	; 0x19000
   13818:	ldr	pc, [ip, #2720]!	; 0xaa0

0001381c <cairo_image_surface_create@plt>:
   1381c:	add	ip, pc, #0, 12
   13820:	add	ip, ip, #102400	; 0x19000
   13824:	ldr	pc, [ip, #2712]!	; 0xa98

00013828 <g_compute_checksum_for_data@plt>:
   13828:	add	ip, pc, #0, 12
   1382c:	add	ip, ip, #102400	; 0x19000
   13830:	ldr	pc, [ip, #2704]!	; 0xa90

00013834 <eglGetDisplay@plt>:
   13834:	add	ip, pc, #0, 12
   13838:	add	ip, ip, #102400	; 0x19000
   1383c:	ldr	pc, [ip, #2696]!	; 0xa88

00013840 <realloc@plt>:
   13840:	add	ip, pc, #0, 12
   13844:	add	ip, ip, #102400	; 0x19000
   13848:	ldr	pc, [ip, #2688]!	; 0xa80

0001384c <eglTerminate@plt>:
   1384c:	add	ip, pc, #0, 12
   13850:	add	ip, ip, #102400	; 0x19000
   13854:	ldr	pc, [ip, #2680]!	; 0xa78

00013858 <ftruncate64@plt>:
   13858:	add	ip, pc, #0, 12
   1385c:	add	ip, ip, #102400	; 0x19000
   13860:	ldr	pc, [ip, #2672]!	; 0xa70

00013864 <cairo_surface_get_device@plt>:
   13864:	add	ip, pc, #0, 12
   13868:	add	ip, ip, #102400	; 0x19000
   1386c:	ldr	pc, [ip, #2664]!	; 0xa68

00013870 <cairo_egl_device_create@plt>:
   13870:	add	ip, pc, #0, 12
   13874:	add	ip, ip, #102400	; 0x19000
   13878:	ldr	pc, [ip, #2656]!	; 0xa60

0001387c <__strdup@plt>:
   1387c:	add	ip, pc, #0, 12
   13880:	add	ip, ip, #102400	; 0x19000
   13884:	ldr	pc, [ip, #2648]!	; 0xa58

00013888 <cairo_script_surface_create_for_target@plt>:
   13888:	add	ip, pc, #0, 12
   1388c:	add	ip, ip, #102400	; 0x19000
   13890:	ldr	pc, [ip, #2640]!	; 0xa50

00013894 <cairo_surface_get_type@plt>:
   13894:	add	ip, pc, #0, 12
   13898:	add	ip, ip, #102400	; 0x19000
   1389c:	ldr	pc, [ip, #2632]!	; 0xa48

000138a0 <cairo_surface_create_similar@plt>:
   138a0:	add	ip, pc, #0, 12
   138a4:	add	ip, ip, #102400	; 0x19000
   138a8:	ldr	pc, [ip, #2624]!	; 0xa40

000138ac <strpbrk@plt>:
   138ac:	add	ip, pc, #0, 12
   138b0:	add	ip, ip, #102400	; 0x19000
   138b4:	ldr	pc, [ip, #2616]!	; 0xa38

000138b8 <cairo_gl_device_set_thread_aware@plt>:
   138b8:	add	ip, pc, #0, 12
   138bc:	add	ip, ip, #102400	; 0x19000
   138c0:	ldr	pc, [ip, #2608]!	; 0xa30

000138c4 <cairo_image_surface_get_stride@plt>:
   138c4:	add	ip, pc, #0, 12
   138c8:	add	ip, ip, #102400	; 0x19000
   138cc:	ldr	pc, [ip, #2600]!	; 0xa28

000138d0 <setenv@plt>:
   138d0:	add	ip, pc, #0, 12
   138d4:	add	ip, ip, #102400	; 0x19000
   138d8:	ldr	pc, [ip, #2592]!	; 0xa20

000138dc <strcmp@plt>:
   138dc:	add	ip, pc, #0, 12
   138e0:	add	ip, ip, #102400	; 0x19000
   138e4:	ldr	pc, [ip, #2584]!	; 0xa18

000138e8 <exit@plt>:
   138e8:	add	ip, pc, #0, 12
   138ec:	add	ip, ip, #102400	; 0x19000
   138f0:	ldr	pc, [ip, #2576]!	; 0xa10

000138f4 <g_file_test@plt>:
   138f4:	add	ip, pc, #0, 12
   138f8:	add	ip, ip, #102400	; 0x19000
   138fc:	ldr	pc, [ip, #2568]!	; 0xa08

00013900 <cairo_surface_flush@plt>:
   13900:	add	ip, pc, #0, 12
   13904:	add	ip, ip, #102400	; 0x19000
   13908:	ldr	pc, [ip, #2560]!	; 0xa00

0001390c <__errno_location@plt>:
   1390c:	add	ip, pc, #0, 12
   13910:	add	ip, ip, #102400	; 0x19000
   13914:	ldr	pc, [ip, #2552]!	; 0x9f8

00013918 <ceil@plt>:
   13918:	add	ip, pc, #0, 12
   1391c:	add	ip, ip, #102400	; 0x19000
   13920:	ldr	pc, [ip, #2544]!	; 0x9f0

00013924 <glFinish@plt>:
   13924:	add	ip, pc, #0, 12
   13928:	add	ip, ip, #102400	; 0x19000
   1392c:	ldr	pc, [ip, #2536]!	; 0x9e8

00013930 <fscanf@plt>:
   13930:	add	ip, pc, #0, 12
   13934:	add	ip, ip, #102400	; 0x19000
   13938:	ldr	pc, [ip, #2528]!	; 0x9e0

0001393c <eglChooseConfig@plt>:
   1393c:	add	ip, pc, #0, 12
   13940:	add	ip, ip, #102400	; 0x19000
   13944:	ldr	pc, [ip, #2520]!	; 0x9d8

00013948 <xcb_get_input_focus_reply@plt>:
   13948:	add	ip, pc, #0, 12
   1394c:	add	ip, ip, #102400	; 0x19000
   13950:	ldr	pc, [ip, #2512]!	; 0x9d0

00013954 <cairo_surface_reference@plt>:
   13954:	add	ip, pc, #0, 12
   13958:	add	ip, ip, #102400	; 0x19000
   1395c:	ldr	pc, [ip, #2504]!	; 0x9c8

00013960 <xcb_depth_next@plt>:
   13960:	add	ip, pc, #0, 12
   13964:	add	ip, ip, #102400	; 0x19000
   13968:	ldr	pc, [ip, #2496]!	; 0x9c0

Disassembly of section .text:

00013970 <.text>:
   13970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13974:	sub	sp, sp, #44	; 0x2c
   13978:	sub	ip, r1, #2
   1397c:	add	r3, r3, r0, lsl #2
   13980:	ldr	r8, [sp, #88]	; 0x58
   13984:	movw	lr, #54096	; 0xd350
   13988:	movt	lr, #2
   1398c:	ldr	r7, [sp, #80]	; 0x50
   13990:	mov	r4, #0
   13994:	lsl	r2, r2, #3
   13998:	mla	fp, r8, ip, r3
   1399c:	ldr	r5, [lr]
   139a0:	add	r1, r1, #3
   139a4:	add	r6, r0, #3
   139a8:	str	r5, [sp, #36]	; 0x24
   139ac:	mov	r5, r4
   139b0:	cmp	ip, r1
   139b4:	beq	13a24 <xcb_depth_next@plt+0xc4>
   139b8:	cmp	ip, #0
   139bc:	blt	13a18 <xcb_depth_next@plt+0xb8>
   139c0:	ldr	r3, [sp, #84]	; 0x54
   139c4:	cmp	ip, r3
   139c8:	bge	13a18 <xcb_depth_next@plt+0xb8>
   139cc:	sub	r3, r0, #2
   139d0:	add	lr, r4, fp
   139d4:	str	r1, [sp, #4]
   139d8:	cmp	r3, r6
   139dc:	beq	13a14 <xcb_depth_next@plt+0xb4>
   139e0:	cmp	r3, #0
   139e4:	blt	13a08 <xcb_depth_next@plt+0xa8>
   139e8:	cmp	r3, r7
   139ec:	bge	13a08 <xcb_depth_next@plt+0xa8>
   139f0:	ldr	sl, [lr, #-8]
   139f4:	add	r1, sp, #40	; 0x28
   139f8:	add	r9, r1, r5
   139fc:	add	r5, r5, #1
   13a00:	lsr	sl, sl, r2
   13a04:	strb	sl, [r9, #-32]	; 0xffffffe0
   13a08:	add	r3, r3, #1
   13a0c:	add	lr, lr, #4
   13a10:	b	139d8 <xcb_depth_next@plt+0x78>
   13a14:	ldr	r1, [sp, #4]
   13a18:	add	ip, ip, #1
   13a1c:	add	r4, r4, r8
   13a20:	b	139b0 <xcb_depth_next@plt+0x50>
   13a24:	mov	r1, r5
   13a28:	add	r0, sp, #8
   13a2c:	mov	r2, #1
   13a30:	movw	r3, #20432	; 0x4fd0
   13a34:	movt	r3, #1
   13a38:	bl	13024 <qsort@plt>
   13a3c:	movw	r1, #54096	; 0xd350
   13a40:	movt	r1, #2
   13a44:	ldr	r2, [sp, #36]	; 0x24
   13a48:	ldr	r3, [r1]
   13a4c:	add	r1, sp, #40	; 0x28
   13a50:	add	r5, r1, r5, asr #1
   13a54:	cmp	r2, r3
   13a58:	ldrb	r0, [r5, #-32]	; 0xffffffe0
   13a5c:	beq	13a64 <xcb_depth_next@plt+0x104>
   13a60:	bl	13618 <__stack_chk_fail@plt>
   13a64:	add	sp, sp, #44	; 0x2c
   13a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a70:	sub	sp, sp, #44	; 0x2c
   13a74:	sub	lr, r1, #2
   13a78:	movw	ip, #54096	; 0xd350
   13a7c:	ldr	r7, [sp, #84]	; 0x54
   13a80:	movt	ip, #2
   13a84:	ldr	fp, [sp, #80]	; 0x50
   13a88:	mov	r4, #0
   13a8c:	ldr	r5, [ip]
   13a90:	add	r1, r1, #3
   13a94:	mla	r2, r7, lr, r2
   13a98:	add	r6, r0, #3
   13a9c:	str	r5, [sp, #36]	; 0x24
   13aa0:	mov	r5, r4
   13aa4:	cmp	lr, r1
   13aa8:	beq	13b08 <xcb_depth_next@plt+0x1a8>
   13aac:	cmp	lr, #0
   13ab0:	blt	13afc <xcb_depth_next@plt+0x19c>
   13ab4:	cmp	lr, fp
   13ab8:	bge	13afc <xcb_depth_next@plt+0x19c>
   13abc:	sub	ip, r0, #2
   13ac0:	add	sl, r4, r2
   13ac4:	str	r2, [sp, #4]
   13ac8:	cmp	ip, r6
   13acc:	beq	13af8 <xcb_depth_next@plt+0x198>
   13ad0:	cmp	ip, #0
   13ad4:	blt	13af0 <xcb_depth_next@plt+0x190>
   13ad8:	cmp	ip, r3
   13adc:	addlt	r2, sp, #40	; 0x28
   13ae0:	ldrblt	r9, [sl, ip]
   13ae4:	addlt	r8, r2, r5
   13ae8:	addlt	r5, r5, #1
   13aec:	strblt	r9, [r8, #-32]	; 0xffffffe0
   13af0:	add	ip, ip, #1
   13af4:	b	13ac8 <xcb_depth_next@plt+0x168>
   13af8:	ldr	r2, [sp, #4]
   13afc:	add	lr, lr, #1
   13b00:	add	r4, r4, r7
   13b04:	b	13aa4 <xcb_depth_next@plt+0x144>
   13b08:	mov	r1, r5
   13b0c:	add	r0, sp, #8
   13b10:	mov	r2, #1
   13b14:	movw	r3, #20432	; 0x4fd0
   13b18:	movt	r3, #1
   13b1c:	bl	13024 <qsort@plt>
   13b20:	movw	r1, #54096	; 0xd350
   13b24:	movt	r1, #2
   13b28:	ldr	r2, [sp, #36]	; 0x24
   13b2c:	ldr	r3, [r1]
   13b30:	add	r1, sp, #40	; 0x28
   13b34:	add	r5, r1, r5, asr #1
   13b38:	cmp	r2, r3
   13b3c:	ldrb	r0, [r5, #-32]	; 0xffffffe0
   13b40:	beq	13b48 <xcb_depth_next@plt+0x1e8>
   13b44:	bl	13618 <__stack_chk_fail@plt>
   13b48:	add	sp, sp, #44	; 0x2c
   13b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b54:	movw	r8, #54096	; 0xd350
   13b58:	movt	r8, #2
   13b5c:	sub	sp, sp, #8448	; 0x2100
   13b60:	sub	sp, sp, #12
   13b64:	cmp	r0, #1
   13b68:	ldr	r3, [r8]
   13b6c:	add	ip, sp, #8192	; 0x2000
   13b70:	str	r8, [sp, #44]	; 0x2c
   13b74:	mov	r6, r0
   13b78:	mov	r4, r1
   13b7c:	str	r3, [ip, #260]	; 0x104
   13b80:	beq	13db4 <xcb_depth_next@plt+0x454>
   13b84:	bl	155a8 <xcb_depth_next@plt+0x1c48>
   13b88:	subs	r5, r0, #0
   13b8c:	blt	13d8c <xcb_depth_next@plt+0x42c>
   13b90:	ldr	r6, [r4, #4]
   13b94:	movw	r1, #44556	; 0xae0c
   13b98:	movt	r1, #1
   13b9c:	mov	r0, r6
   13ba0:	bl	138dc <strcmp@plt>
   13ba4:	subs	sl, r0, #0
   13ba8:	beq	13c3c <xcb_depth_next@plt+0x2dc>
   13bac:	movw	r1, #44448	; 0xada0
   13bb0:	mov	r0, r6
   13bb4:	movt	r1, #1
   13bb8:	bl	138dc <strcmp@plt>
   13bbc:	cmp	r0, #0
   13bc0:	beq	142a0 <xcb_depth_next@plt+0x940>
   13bc4:	movw	r1, #44768	; 0xaee0
   13bc8:	mov	r0, r6
   13bcc:	movt	r1, #1
   13bd0:	bl	138dc <strcmp@plt>
   13bd4:	cmp	r0, #0
   13bd8:	beq	149d4 <xcb_depth_next@plt+0x1074>
   13bdc:	mov	r0, r6
   13be0:	movw	r1, #44876	; 0xaf4c
   13be4:	movt	r1, #1
   13be8:	bl	138dc <strcmp@plt>
   13bec:	cmp	r0, #0
   13bf0:	movne	r0, #0
   13bf4:	bne	13d90 <xcb_depth_next@plt+0x430>
   13bf8:	movw	r3, #44884	; 0xaf54
   13bfc:	movt	r3, #1
   13c00:	str	r3, [sp]
   13c04:	mov	r1, #4096	; 0x1000
   13c08:	ldr	ip, [r4, #8]
   13c0c:	mov	r3, r1
   13c10:	mov	r2, #1
   13c14:	add	r0, sp, #260	; 0x104
   13c18:	str	ip, [sp, #4]
   13c1c:	bl	13510 <__snprintf_chk@plt>
   13c20:	add	r1, sp, #260	; 0x104
   13c24:	mov	r2, r0
   13c28:	mov	r0, r5
   13c2c:	bl	15148 <xcb_depth_next@plt+0x17e8>
   13c30:	rsbs	r0, r0, #1
   13c34:	movcc	r0, #0
   13c38:	b	13d90 <xcb_depth_next@plt+0x430>
   13c3c:	add	fp, sp, #112	; 0x70
   13c40:	ldr	r8, [r4, #8]
   13c44:	mov	r1, sl
   13c48:	mov	r2, #32
   13c4c:	mov	r0, fp
   13c50:	ldr	r7, [r4, #12]
   13c54:	ldr	r9, [r4, #16]
   13c58:	bl	131ec <memset@plt>
   13c5c:	movw	r2, #21448	; 0x53c8
   13c60:	movt	r2, #1
   13c64:	str	r2, [fp, #12]
   13c68:	add	r2, sp, #8448	; 0x2100
   13c6c:	add	r2, r2, #8
   13c70:	movw	r4, #57192	; 0xdf68
   13c74:	movw	ip, #57164	; 0xdf4c
   13c78:	movt	r4, #65535	; 0xffff
   13c7c:	movt	ip, #65535	; 0xffff
   13c80:	mov	r1, #12288	; 0x3000
   13c84:	mov	r0, r8
   13c88:	add	r6, sp, #84	; 0x54
   13c8c:	str	r5, [r2, ip]
   13c90:	movw	r3, #20448	; 0x4fe0
   13c94:	str	r6, [r2, r4]
   13c98:	movt	r3, #1
   13c9c:	str	r3, [fp, #4]
   13ca0:	movw	r3, #25364	; 0x6314
   13ca4:	movt	r3, #1
   13ca8:	str	r3, [fp, #16]
   13cac:	bl	17628 <xcb_depth_next@plt+0x3cc8>
   13cb0:	vmov.f64	d0, #112	; 0x3f800000  1.0
   13cb4:	str	sl, [r6, #24]
   13cb8:	mov	r2, sl
   13cbc:	mov	r1, #12288	; 0x3000
   13cc0:	vmov.f64	d1, d0
   13cc4:	vmov.f64	d2, d0
   13cc8:	vmov.f64	d3, d0
   13ccc:	mov	r3, r0
   13cd0:	mov	r0, sl
   13cd4:	str	r3, [r6, #4]
   13cd8:	ldr	ip, [r3, #32]
   13cdc:	add	r3, sp, #72	; 0x48
   13ce0:	blx	ip
   13ce4:	cmp	r0, #0
   13ce8:	str	r0, [r6, #8]
   13cec:	beq	14e18 <xcb_depth_next@plt+0x14b8>
   13cf0:	mov	r0, #65536	; 0x10000
   13cf4:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   13cf8:	cmp	r9, #0
   13cfc:	str	r7, [sp]
   13d00:	mov	r4, r0
   13d04:	beq	14dd4 <xcb_depth_next@plt+0x1474>
   13d08:	movw	r3, #44604	; 0xae3c
   13d0c:	str	r8, [sp, #4]
   13d10:	movt	r3, #1
   13d14:	str	r9, [sp, #8]
   13d18:	mov	r1, #1
   13d1c:	mvn	r2, #0
   13d20:	bl	137c8 <__sprintf_chk@plt>
   13d24:	mov	r2, r0
   13d28:	mov	r1, r4
   13d2c:	mov	r0, r5
   13d30:	bl	15148 <xcb_depth_next@plt+0x17e8>
   13d34:	cmp	r0, #0
   13d38:	beq	13d8c <xcb_depth_next@plt+0x42c>
   13d3c:	mov	r1, r4
   13d40:	mov	r2, #65536	; 0x10000
   13d44:	mov	r0, r5
   13d48:	bl	150d8 <xcb_depth_next@plt+0x1778>
   13d4c:	mov	r0, r4
   13d50:	mov	r1, #2
   13d54:	mov	r2, #0
   13d58:	bl	13438 <shm_open@plt>
   13d5c:	cmn	r0, #1
   13d60:	mov	r8, r0
   13d64:	bne	14ba4 <xcb_depth_next@plt+0x1244>
   13d68:	str	r0, [r6, #12]
   13d6c:	movw	r1, #54100	; 0xd354
   13d70:	movt	r1, #2
   13d74:	movw	r2, #44688	; 0xae90
   13d78:	mov	r3, r4
   13d7c:	ldr	r0, [r1]
   13d80:	movt	r2, #1
   13d84:	mov	r1, #1
   13d88:	bl	1363c <__fprintf_chk@plt>
   13d8c:	mov	r0, #1
   13d90:	ldr	r8, [sp, #44]	; 0x2c
   13d94:	add	r1, sp, #8192	; 0x2000
   13d98:	ldr	r2, [r1, #260]	; 0x104
   13d9c:	ldr	r3, [r8]
   13da0:	cmp	r2, r3
   13da4:	bne	14e84 <xcb_depth_next@plt+0x1524>
   13da8:	add	sp, sp, #8448	; 0x2100
   13dac:	add	sp, sp, #12
   13db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db4:	mov	r1, r6
   13db8:	mov	r0, #13
   13dbc:	bl	130d8 <signal@plt>
   13dc0:	add	lr, sp, #8448	; 0x2100
   13dc4:	add	lr, lr, #8
   13dc8:	add	fp, sp, #112	; 0x70
   13dcc:	movw	r3, #57192	; 0xdf68
   13dd0:	movt	r3, #65535	; 0xffff
   13dd4:	mov	r0, #160	; 0xa0
   13dd8:	mov	r8, #0
   13ddc:	mov	r7, #4
   13de0:	str	r8, [lr, r3]
   13de4:	str	r8, [fp, #8]
   13de8:	movw	r4, #44264	; 0xace8
   13dec:	str	r7, [fp, #4]
   13df0:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   13df4:	movt	r4, #1
   13df8:	str	r4, [sp, #136]	; 0x88
   13dfc:	str	r0, [fp, #20]
   13e00:	mov	r0, r4
   13e04:	bl	1339c <shm_unlink@plt>
   13e08:	mov	r0, r4
   13e0c:	mov	r1, #194	; 0xc2
   13e10:	movw	r2, #511	; 0x1ff
   13e14:	bl	13438 <shm_open@plt>
   13e18:	cmn	r0, #1
   13e1c:	mov	r9, r0
   13e20:	beq	14304 <xcb_depth_next@plt+0x9a4>
   13e24:	mov	r2, #268435456	; 0x10000000
   13e28:	mov	r3, #0
   13e2c:	bl	13858 <ftruncate64@plt>
   13e30:	cmn	r0, #1
   13e34:	beq	142fc <xcb_depth_next@plt+0x99c>
   13e38:	mov	r4, #0
   13e3c:	mov	r1, #268435456	; 0x10000000
   13e40:	mov	r2, #3
   13e44:	mov	r3, r6
   13e48:	str	r9, [sp]
   13e4c:	mov	r5, #0
   13e50:	mov	r0, r8
   13e54:	strd	r4, [sp, #8]
   13e58:	bl	13600 <mmap64@plt>
   13e5c:	mov	r4, r0
   13e60:	mov	r0, r9
   13e64:	bl	13540 <close@plt>
   13e68:	cmn	r4, #1
   13e6c:	str	r4, [fp, #32]
   13e70:	beq	1430c <xcb_depth_next@plt+0x9ac>
   13e74:	movw	r0, #43904	; 0xab80
   13e78:	movt	r0, #1
   13e7c:	str	r8, [fp, #28]
   13e80:	str	r8, [fp, #12]
   13e84:	str	r8, [fp, #16]
   13e88:	bl	133f0 <unlink@plt>
   13e8c:	mov	r0, r6
   13e90:	mov	r1, r6
   13e94:	mov	r2, r8
   13e98:	bl	1336c <socket@plt>
   13e9c:	cmn	r0, #1
   13ea0:	mov	r4, r0
   13ea4:	beq	14dac <xcb_depth_next@plt+0x144c>
   13ea8:	mov	r1, r8
   13eac:	mov	r2, #110	; 0x6e
   13eb0:	add	r0, sp, #148	; 0x94
   13eb4:	add	r8, sp, #8448	; 0x2100
   13eb8:	bl	131ec <memset@plt>
   13ebc:	movw	ip, #43904	; 0xab80
   13ec0:	movt	ip, #1
   13ec4:	add	lr, sp, #150	; 0x96
   13ec8:	movw	r5, #57228	; 0xdf8c
   13ecc:	add	r8, r8, #8
   13ed0:	ldm	ip!, {r0, r1, r2, r3}
   13ed4:	movt	r5, #65535	; 0xffff
   13ed8:	strh	r6, [r8, r5]
   13edc:	ldrh	ip, [ip]
   13ee0:	str	r0, [sp, #150]	; 0x96
   13ee4:	mov	r0, r4
   13ee8:	str	r1, [lr, #4]
   13eec:	add	r1, sp, #148	; 0x94
   13ef0:	str	r2, [lr, #8]
   13ef4:	mov	r2, #110	; 0x6e
   13ef8:	strh	ip, [lr, #16]
   13efc:	str	r3, [lr, #12]
   13f00:	bl	1351c <bind@plt>
   13f04:	cmn	r0, #1
   13f08:	mov	r0, r4
   13f0c:	beq	14da8 <xcb_depth_next@plt+0x1448>
   13f10:	mov	r1, #3
   13f14:	bl	136fc <fcntl@plt>
   13f18:	cmn	r0, #1
   13f1c:	beq	14da4 <xcb_depth_next@plt+0x1444>
   13f20:	orr	r2, r0, #2048	; 0x800
   13f24:	mov	r1, r7
   13f28:	mov	r0, r4
   13f2c:	bl	136fc <fcntl@plt>
   13f30:	cmn	r0, #1
   13f34:	beq	14da4 <xcb_depth_next@plt+0x1444>
   13f38:	mov	r0, r4
   13f3c:	mov	r1, #5
   13f40:	bl	13198 <listen@plt>
   13f44:	cmn	r0, #1
   13f48:	beq	14da4 <xcb_depth_next@plt+0x1444>
   13f4c:	cmp	r4, #0
   13f50:	blt	14dac <xcb_depth_next@plt+0x144c>
   13f54:	bl	154e0 <xcb_depth_next@plt+0x1b80>
   13f58:	cmp	r0, #0
   13f5c:	blt	13d8c <xcb_depth_next@plt+0x42c>
   13f60:	mov	r1, #0
   13f64:	add	r0, sp, #64	; 0x40
   13f68:	mov	r3, r1
   13f6c:	movw	r2, #22104	; 0x5658
   13f70:	movt	r2, #1
   13f74:	bl	1342c <pthread_create@plt>
   13f78:	cmp	r0, #0
   13f7c:	blt	14df0 <xcb_depth_next@plt+0x1490>
   13f80:	mov	r0, #32
   13f84:	mvn	r8, #0
   13f88:	str	r8, [sp, #48]	; 0x30
   13f8c:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   13f90:	ldr	ip, [sp, #48]	; 0x30
   13f94:	mov	r3, #1
   13f98:	mov	r8, r3
   13f9c:	str	ip, [sp, #24]
   13fa0:	add	ip, sp, #4352	; 0x1100
   13fa4:	add	ip, ip, #8
   13fa8:	add	ip, ip, r3
   13fac:	str	ip, [sp, #56]	; 0x38
   13fb0:	mov	ip, #0
   13fb4:	str	ip, [sp, #52]	; 0x34
   13fb8:	mov	ip, #4
   13fbc:	str	ip, [sp, #28]
   13fc0:	str	r0, [sp, #32]
   13fc4:	str	r4, [r0]
   13fc8:	strh	r3, [r0, #4]
   13fcc:	ldr	r0, [sp, #32]
   13fd0:	mov	r1, r8
   13fd4:	mvn	r2, #0
   13fd8:	bl	13648 <poll@plt>
   13fdc:	subs	sl, r0, #0
   13fe0:	ble	14b34 <xcb_depth_next@plt+0x11d4>
   13fe4:	ldr	ip, [sp, #32]
   13fe8:	ldrsh	r3, [ip, #6]
   13fec:	cmp	r3, #0
   13ff0:	beq	14524 <xcb_depth_next@plt+0xbc4>
   13ff4:	add	ip, sp, #260	; 0x104
   13ff8:	ldr	r6, [sp, #32]
   13ffc:	str	ip, [sp, #36]	; 0x24
   14000:	b	1404c <xcb_depth_next@plt+0x6ec>
   14004:	ldr	ip, [sp, #24]
   14008:	cmn	ip, #1
   1400c:	bne	14e7c <xcb_depth_next@plt+0x151c>
   14010:	mov	r0, r4
   14014:	bl	15058 <xcb_depth_next@plt+0x16f8>
   14018:	cmp	r0, #0
   1401c:	strge	r4, [sp, #24]
   14020:	blt	14800 <xcb_depth_next@plt+0xea0>
   14024:	ldr	ip, [sp, #28]
   14028:	cmp	r8, ip
   1402c:	beq	144a4 <xcb_depth_next@plt+0xb44>
   14030:	add	r3, r6, r8, lsl #3
   14034:	str	r4, [r6, r8, lsl #3]
   14038:	mov	r2, #1
   1403c:	add	r8, r8, r2
   14040:	strh	r2, [r3, #4]
   14044:	mov	r2, #0
   14048:	strh	r2, [r3, #6]
   1404c:	mov	r1, #0
   14050:	ldr	r0, [r6]
   14054:	mov	r2, r1
   14058:	bl	13360 <accept@plt>
   1405c:	cmn	r0, #1
   14060:	mov	r4, r0
   14064:	beq	1451c <xcb_depth_next@plt+0xbbc>
   14068:	add	lr, sp, #4352	; 0x1100
   1406c:	mov	r2, #4096	; 0x1000
   14070:	add	lr, lr, #8
   14074:	sub	r5, lr, #4
   14078:	mov	r1, r5
   1407c:	bl	150d8 <xcb_depth_next@plt+0x1778>
   14080:	mov	r0, r5
   14084:	movw	r1, #44360	; 0xad48
   14088:	movt	r1, #1
   1408c:	bl	138dc <strcmp@plt>
   14090:	cmp	r0, #0
   14094:	beq	14004 <xcb_depth_next@plt+0x6a4>
   14098:	movw	r1, #44368	; 0xad50
   1409c:	mov	r0, r5
   140a0:	movt	r1, #1
   140a4:	mov	r2, #14
   140a8:	bl	137ec <strncmp@plt>
   140ac:	cmp	r0, #0
   140b0:	bne	14334 <xcb_depth_next@plt+0x9d4>
   140b4:	ldr	ip, [sp, #24]
   140b8:	cmn	ip, #1
   140bc:	bne	14024 <xcb_depth_next@plt+0x6c4>
   140c0:	add	lr, sp, #8448	; 0x2100
   140c4:	movw	r3, #57192	; 0xdf68
   140c8:	add	lr, lr, #8
   140cc:	movt	r3, #65535	; 0xffff
   140d0:	ldr	r2, [fp, #4]
   140d4:	ldr	r3, [lr, r3]
   140d8:	cmp	r3, r2
   140dc:	beq	14adc <xcb_depth_next@plt+0x117c>
   140e0:	add	r2, sp, #8448	; 0x2100
   140e4:	movw	r3, #57192	; 0xdf68
   140e8:	add	r2, r2, #8
   140ec:	movt	r3, #65535	; 0xffff
   140f0:	add	lr, sp, #8448	; 0x2100
   140f4:	mov	r0, #40	; 0x28
   140f8:	ldr	r1, [r2, r3]
   140fc:	add	lr, lr, #8
   14100:	mov	r2, #8192	; 0x2000
   14104:	mov	r9, #0
   14108:	add	ip, r1, #1
   1410c:	str	ip, [lr, r3]
   14110:	mul	r3, r0, r1
   14114:	ldr	r1, [fp, #20]
   14118:	mvn	ip, #0
   1411c:	mov	r0, r2
   14120:	add	r7, r1, r3
   14124:	str	r4, [r1, r3]
   14128:	str	ip, [r7, #4]
   1412c:	str	r9, [r7, #8]
   14130:	str	r9, [r7, #12]
   14134:	str	r9, [r7, #24]
   14138:	str	r9, [r7, #20]
   1413c:	str	r9, [r7, #16]
   14140:	str	r2, [r7, #36]	; 0x24
   14144:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   14148:	str	r9, [r7, #32]
   1414c:	movw	r1, #44384	; 0xad60
   14150:	movt	r1, #1
   14154:	str	r0, [r7, #28]
   14158:	mov	r0, r5
   1415c:	bl	13534 <strstr@plt>
   14160:	subs	r9, r0, #0
   14164:	beq	141b0 <xcb_depth_next@plt+0x850>
   14168:	add	r2, r9, #5
   1416c:	mov	r1, #32
   14170:	str	r2, [sp, #40]	; 0x28
   14174:	mov	r0, r2
   14178:	bl	13180 <strchr@plt>
   1417c:	cmp	r0, #0
   14180:	beq	14b84 <xcb_depth_next@plt+0x1224>
   14184:	rsb	r3, r9, r0
   14188:	sub	r9, r3, #5
   1418c:	add	r0, r9, #1
   14190:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   14194:	ldr	r1, [sp, #40]	; 0x28
   14198:	mov	r2, r9
   1419c:	str	r0, [r7, #16]
   141a0:	bl	13444 <memcpy@plt>
   141a4:	ldr	r2, [r7, #16]
   141a8:	mov	r1, #0
   141ac:	strb	r1, [r2, r9]
   141b0:	movw	r1, #44392	; 0xad68
   141b4:	mov	r0, r5
   141b8:	movt	r1, #1
   141bc:	bl	13534 <strstr@plt>
   141c0:	subs	r9, r0, #0
   141c4:	beq	14210 <xcb_depth_next@plt+0x8b0>
   141c8:	add	r3, r9, #7
   141cc:	mov	r1, #32
   141d0:	str	r3, [sp, #40]	; 0x28
   141d4:	mov	r0, r3
   141d8:	bl	13180 <strchr@plt>
   141dc:	cmp	r0, #0
   141e0:	beq	14b0c <xcb_depth_next@plt+0x11ac>
   141e4:	rsb	r3, r9, r0
   141e8:	sub	r9, r3, #7
   141ec:	add	r0, r9, #1
   141f0:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   141f4:	ldr	r1, [sp, #40]	; 0x28
   141f8:	mov	r2, r9
   141fc:	str	r0, [r7, #20]
   14200:	bl	13444 <memcpy@plt>
   14204:	ldr	r2, [r7, #20]
   14208:	mov	r1, #0
   1420c:	strb	r1, [r2, r9]
   14210:	mov	r0, r5
   14214:	movw	r1, #44400	; 0xad70
   14218:	movt	r1, #1
   1421c:	bl	13534 <strstr@plt>
   14220:	subs	r9, r0, #0
   14224:	beq	1426c <xcb_depth_next@plt+0x90c>
   14228:	add	r5, r9, #10
   1422c:	mov	r1, #32
   14230:	mov	r0, r5
   14234:	bl	13180 <strchr@plt>
   14238:	cmp	r0, #0
   1423c:	beq	14afc <xcb_depth_next@plt+0x119c>
   14240:	rsb	r9, r9, r0
   14244:	sub	r9, r9, #10
   14248:	add	r0, r9, #1
   1424c:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   14250:	mov	r2, r9
   14254:	mov	r1, r5
   14258:	str	r0, [r7, #24]
   1425c:	bl	13444 <memcpy@plt>
   14260:	ldr	r3, [r7, #24]
   14264:	mov	r2, #0
   14268:	strb	r2, [r3, r9]
   1426c:	ldr	ip, [sp, #136]	; 0x88
   14270:	mov	r1, #1
   14274:	ldr	r0, [sp, #36]	; 0x24
   14278:	mov	r2, #1024	; 0x400
   1427c:	movw	r3, #46792	; 0xb6c8
   14280:	movt	r3, #1
   14284:	str	ip, [sp]
   14288:	bl	137c8 <__sprintf_chk@plt>
   1428c:	ldr	r1, [sp, #36]	; 0x24
   14290:	mov	r2, r0
   14294:	mov	r0, r4
   14298:	bl	15148 <xcb_depth_next@plt+0x17e8>
   1429c:	b	14024 <xcb_depth_next@plt+0x6c4>
   142a0:	movw	r3, #44756	; 0xaed4
   142a4:	movt	r3, #1
   142a8:	str	r3, [sp]
   142ac:	mov	r1, #4096	; 0x1000
   142b0:	ldr	ip, [r4, #8]
   142b4:	mov	r3, r1
   142b8:	mov	r2, #1
   142bc:	add	r0, sp, #260	; 0x104
   142c0:	str	ip, [sp, #4]
   142c4:	bl	13510 <__snprintf_chk@plt>
   142c8:	add	r1, sp, #260	; 0x104
   142cc:	mov	r2, r0
   142d0:	mov	r0, r5
   142d4:	bl	15148 <xcb_depth_next@plt+0x17e8>
   142d8:	cmp	r0, #0
   142dc:	beq	13d8c <xcb_depth_next@plt+0x42c>
   142e0:	mov	r0, r5
   142e4:	add	r1, sp, #112	; 0x70
   142e8:	mov	r2, #1
   142ec:	bl	1330c <read@plt>
   142f0:	adds	r0, r0, #0
   142f4:	movne	r0, #1
   142f8:	b	13d90 <xcb_depth_next@plt+0x430>
   142fc:	mov	r0, r9
   14300:	bl	13540 <close@plt>
   14304:	mvn	r3, #0
   14308:	str	r3, [fp, #32]
   1430c:	movw	r3, #54100	; 0xd354
   14310:	movt	r3, #2
   14314:	movw	r0, #44896	; 0xaf60
   14318:	mov	r1, #1
   1431c:	ldr	r3, [r3]
   14320:	movt	r0, #1
   14324:	mov	r2, #39	; 0x27
   14328:	bl	13570 <fwrite@plt>
   1432c:	mvn	r0, #0
   14330:	b	13d90 <xcb_depth_next@plt+0x430>
   14334:	movw	r1, #44412	; 0xad7c
   14338:	mov	r0, r5
   1433c:	movt	r1, #1
   14340:	mov	r2, #12
   14344:	bl	137ec <strncmp@plt>
   14348:	cmp	r0, #0
   1434c:	bne	144c0 <xcb_depth_next@plt+0xb60>
   14350:	ldr	ip, [sp, #24]
   14354:	cmn	ip, #1
   14358:	bne	14024 <xcb_depth_next@plt+0x6c4>
   1435c:	mov	r0, r5
   14360:	movw	r1, #44384	; 0xad60
   14364:	movt	r1, #1
   14368:	bl	13534 <strstr@plt>
   1436c:	subs	r5, r0, #0
   14370:	beq	14e60 <xcb_depth_next@plt+0x1500>
   14374:	add	r7, r5, #5
   14378:	mov	r1, #32
   1437c:	mov	r0, r7
   14380:	bl	13180 <strchr@plt>
   14384:	cmp	r0, #0
   14388:	beq	14b94 <xcb_depth_next@plt+0x1234>
   1438c:	rsb	r0, r5, r0
   14390:	sub	r9, r0, #5
   14394:	add	r0, r9, #1
   14398:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   1439c:	mov	r2, r9
   143a0:	mov	r1, r7
   143a4:	mov	r5, r0
   143a8:	bl	13444 <memcpy@plt>
   143ac:	add	lr, sp, #8448	; 0x2100
   143b0:	movw	r2, #57192	; 0xdf68
   143b4:	add	lr, lr, #8
   143b8:	movt	r2, #65535	; 0xffff
   143bc:	mov	r3, #0
   143c0:	strb	r3, [r5, r9]
   143c4:	ldr	r2, [lr, r2]
   143c8:	cmp	r2, r3
   143cc:	ble	14410 <xcb_depth_next@plt+0xab0>
   143d0:	str	r4, [sp, #40]	; 0x28
   143d4:	mov	r7, r2
   143d8:	ldr	r9, [fp, #20]
   143dc:	mov	r4, r3
   143e0:	b	143f4 <xcb_depth_next@plt+0xa94>
   143e4:	add	r4, r4, #1
   143e8:	add	r9, r9, #40	; 0x28
   143ec:	cmp	r4, r7
   143f0:	beq	149cc <xcb_depth_next@plt+0x106c>
   143f4:	mov	r0, r5
   143f8:	ldr	r1, [r9, #16]
   143fc:	bl	138dc <strcmp@plt>
   14400:	cmp	r0, #0
   14404:	bne	143e4 <xcb_depth_next@plt+0xa84>
   14408:	ldr	r4, [sp, #40]	; 0x28
   1440c:	str	r4, [r9, #4]
   14410:	mov	r0, r5
   14414:	bl	13300 <free@plt>
   14418:	mov	r0, r4
   1441c:	bl	15058 <xcb_depth_next@plt+0x16f8>
   14420:	cmp	r0, #0
   14424:	blt	14510 <xcb_depth_next@plt+0xbb0>
   14428:	add	r1, sp, #8448	; 0x2100
   1442c:	movw	r3, #57192	; 0xdf68
   14430:	add	r1, r1, #8
   14434:	movt	r3, #65535	; 0xffff
   14438:	ldr	ip, [sp, #52]	; 0x34
   1443c:	ldr	r3, [r1, r3]
   14440:	cmp	r3, ip
   14444:	bne	14024 <xcb_depth_next@plt+0x6c4>
   14448:	cmp	r8, #1
   1444c:	beq	14490 <xcb_depth_next@plt+0xb30>
   14450:	ldr	r3, [r6, #8]
   14454:	ldr	ip, [sp, #48]	; 0x30
   14458:	cmp	r3, ip
   1445c:	addeq	r0, r6, #8
   14460:	beq	14d98 <xcb_depth_next@plt+0x1438>
   14464:	add	r2, r6, #16
   14468:	mov	r3, #1
   1446c:	ldr	ip, [sp, #48]	; 0x30
   14470:	b	14484 <xcb_depth_next@plt+0xb24>
   14474:	mov	r0, r2
   14478:	ldr	r1, [r2], #8
   1447c:	cmp	r1, ip
   14480:	beq	14d98 <xcb_depth_next@plt+0x1438>
   14484:	add	r3, r3, #1
   14488:	cmp	r3, r8
   1448c:	bne	14474 <xcb_depth_next@plt+0xb14>
   14490:	ldr	r0, [sp, #48]	; 0x30
   14494:	mvn	ip, #0
   14498:	str	ip, [sp, #52]	; 0x34
   1449c:	bl	13540 <close@plt>
   144a0:	b	14024 <xcb_depth_next@plt+0x6c4>
   144a4:	mov	r0, r6
   144a8:	lsl	r1, r8, #4
   144ac:	lsl	ip, r8, #1
   144b0:	str	ip, [sp, #28]
   144b4:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   144b8:	mov	r6, r0
   144bc:	b	14030 <xcb_depth_next@plt+0x6d0>
   144c0:	mov	r0, r5
   144c4:	movw	r1, #44448	; 0xada0
   144c8:	mov	r2, #4
   144cc:	movt	r1, #1
   144d0:	bl	137ec <strncmp@plt>
   144d4:	subs	r1, r0, #0
   144d8:	bne	14024 <xcb_depth_next@plt+0x6c4>
   144dc:	ldr	r0, [sp, #56]	; 0x38
   144e0:	mov	r2, #10
   144e4:	bl	13480 <strtol@plt>
   144e8:	add	lr, sp, #8448	; 0x2100
   144ec:	movw	r3, #57192	; 0xdf68
   144f0:	add	lr, lr, #8
   144f4:	movt	r3, #65535	; 0xffff
   144f8:	ldr	r3, [lr, r3]
   144fc:	add	r0, r0, #1
   14500:	cmp	r0, r3
   14504:	strne	r0, [sp, #52]	; 0x34
   14508:	strne	r4, [sp, #48]	; 0x30
   1450c:	bne	14024 <xcb_depth_next@plt+0x6c4>
   14510:	mov	r0, r4
   14514:	bl	13540 <close@plt>
   14518:	b	1404c <xcb_depth_next@plt+0x6ec>
   1451c:	sub	sl, sl, #1
   14520:	str	r6, [sp, #32]
   14524:	cmp	r8, #1
   14528:	movle	r3, #0
   1452c:	movgt	r3, #1
   14530:	cmp	sl, #0
   14534:	cmpne	r8, #1
   14538:	ble	149bc <xcb_depth_next@plt+0x105c>
   1453c:	add	r9, sp, #68	; 0x44
   14540:	mov	ip, #0
   14544:	str	r9, [sp, #40]	; 0x28
   14548:	mov	r5, #1
   1454c:	ldr	r4, [sp, #32]
   14550:	str	ip, [sp, #36]	; 0x24
   14554:	ldr	r9, [sp, #24]
   14558:	b	14624 <xcb_depth_next@plt+0xcc4>
   1455c:	add	lr, sp, #4352	; 0x1100
   14560:	mov	r2, #4096	; 0x1000
   14564:	add	lr, lr, #8
   14568:	sub	r6, lr, #4
   1456c:	mov	r1, r6
   14570:	bl	150d8 <xcb_depth_next@plt+0x1778>
   14574:	cmp	r0, #0
   14578:	addlt	r1, fp, #20
   1457c:	movlt	r0, fp
   14580:	ldrlt	r2, [r4, #8]
   14584:	blt	1485c <xcb_depth_next@plt+0xefc>
   14588:	movw	r1, #44456	; 0xada8
   1458c:	mov	r0, r6
   14590:	movt	r1, #1
   14594:	mov	r2, #6
   14598:	bl	137ec <strncmp@plt>
   1459c:	cmp	r0, #0
   145a0:	beq	14874 <xcb_depth_next@plt+0xf14>
   145a4:	movw	r1, #44504	; 0xadd8
   145a8:	mov	r0, r6
   145ac:	movt	r1, #1
   145b0:	mov	r2, #9
   145b4:	bl	137ec <strncmp@plt>
   145b8:	cmp	r0, #0
   145bc:	beq	148e8 <xcb_depth_next@plt+0xf88>
   145c0:	movw	r1, #44516	; 0xade4
   145c4:	mov	r0, r6
   145c8:	movt	r1, #1
   145cc:	mov	r2, #10
   145d0:	bl	137ec <strncmp@plt>
   145d4:	cmp	r0, #0
   145d8:	bne	148d0 <xcb_depth_next@plt+0xf70>
   145dc:	ldr	r6, [r4, #8]
   145e0:	add	r2, sp, #4352	; 0x1100
   145e4:	add	r2, r2, #8
   145e8:	add	r3, sp, #136	; 0x88
   145ec:	add	r0, r2, #2
   145f0:	movw	r1, #44528	; 0xadf0
   145f4:	add	r2, sp, #124	; 0x7c
   145f8:	movt	r1, #1
   145fc:	sub	r3, r3, #8
   14600:	bl	133d8 <sscanf@plt>
   14604:	mov	r0, fp
   14608:	mov	r1, r6
   1460c:	bl	15a90 <xcb_depth_next@plt+0x2130>
   14610:	add	r5, r5, #1
   14614:	add	r4, r4, #8
   14618:	cmp	sl, #0
   1461c:	cmpne	r5, r8
   14620:	bge	14650 <xcb_depth_next@plt+0xcf0>
   14624:	ldrsh	r3, [r4, #14]
   14628:	cmp	r3, #0
   1462c:	beq	14610 <xcb_depth_next@plt+0xcb0>
   14630:	ldr	r0, [r4, #8]
   14634:	sub	sl, sl, #1
   14638:	cmn	r0, #1
   1463c:	beq	14610 <xcb_depth_next@plt+0xcb0>
   14640:	cmp	r0, r9
   14644:	bne	1455c <xcb_depth_next@plt+0xbfc>
   14648:	str	r5, [sp, #36]	; 0x24
   1464c:	b	14610 <xcb_depth_next@plt+0xcb0>
   14650:	ldr	ip, [sp, #36]	; 0x24
   14654:	cmp	ip, #0
   14658:	beq	147b8 <xcb_depth_next@plt+0xe58>
   1465c:	add	sl, sp, #4352	; 0x1100
   14660:	movw	r9, #57192	; 0xdf68
   14664:	add	sl, sl, #4
   14668:	movt	r9, #65535	; 0xffff
   1466c:	str	r8, [sp, #40]	; 0x28
   14670:	ldr	r0, [sp, #24]
   14674:	mov	r1, sl
   14678:	mov	r2, #4096	; 0x1000
   1467c:	bl	1330c <read@plt>
   14680:	subs	r7, r0, #0
   14684:	ble	147b0 <xcb_depth_next@plt+0xe50>
   14688:	add	lr, sp, #8448	; 0x2100
   1468c:	add	lr, lr, #8
   14690:	ldr	r3, [lr, r9]
   14694:	cmp	r3, #0
   14698:	ble	14670 <xcb_depth_next@plt+0xd10>
   1469c:	mov	r5, #0
   146a0:	mov	r6, r5
   146a4:	b	146e0 <xcb_depth_next@plt+0xd80>
   146a8:	mov	r1, sl
   146ac:	mov	r2, r7
   146b0:	bl	13318 <write@plt>
   146b4:	cmp	r0, #0
   146b8:	ble	147a4 <xcb_depth_next@plt+0xe44>
   146bc:	subs	r8, r7, r0
   146c0:	bne	14e88 <xcb_depth_next@plt+0x1528>
   146c4:	add	r1, sp, #8448	; 0x2100
   146c8:	add	r6, r6, #1
   146cc:	add	r1, r1, #8
   146d0:	add	r5, r5, #40	; 0x28
   146d4:	ldr	r3, [r1, r9]
   146d8:	cmp	r6, r3
   146dc:	bge	14670 <xcb_depth_next@plt+0xd10>
   146e0:	ldr	r4, [fp, #20]
   146e4:	add	r4, r4, r5
   146e8:	ldr	r0, [r4, #4]
   146ec:	cmn	r0, #1
   146f0:	beq	146c4 <xcb_depth_next@plt+0xd64>
   146f4:	ldr	r2, [r4, #32]
   146f8:	cmp	r2, #0
   146fc:	beq	146a8 <xcb_depth_next@plt+0xd48>
   14700:	ldr	r1, [r4, #28]
   14704:	bl	13318 <write@plt>
   14708:	subs	r1, r0, #0
   1470c:	ble	14738 <xcb_depth_next@plt+0xdd8>
   14710:	ldr	r2, [r4, #32]
   14714:	rsb	r2, r1, r2
   14718:	str	r2, [r4, #32]
   1471c:	cmp	r2, #0
   14720:	bne	1472c <xcb_depth_next@plt+0xdcc>
   14724:	ldr	r0, [r4, #4]
   14728:	b	146a8 <xcb_depth_next@plt+0xd48>
   1472c:	ldr	r0, [r4, #28]
   14730:	add	r1, r0, r1
   14734:	bl	13684 <memmove@plt>
   14738:	ldr	r3, [r4, #32]
   1473c:	cmp	r3, #0
   14740:	movne	r2, r7
   14744:	beq	14724 <xcb_depth_next@plt+0xdc4>
   14748:	mov	r8, r7
   1474c:	ldr	r1, [r4, #36]	; 0x24
   14750:	add	r0, r3, r8
   14754:	cmp	r0, r1
   14758:	bgt	1477c <xcb_depth_next@plt+0xe1c>
   1475c:	ldr	r1, [r4, #28]
   14760:	add	r0, r1, r3
   14764:	mov	r1, sl
   14768:	bl	13444 <memcpy@plt>
   1476c:	ldr	r3, [r4, #32]
   14770:	add	r8, r3, r8
   14774:	str	r8, [r4, #32]
   14778:	b	146c4 <xcb_depth_next@plt+0xd64>
   1477c:	lsl	r1, r1, #1
   14780:	ldr	r0, [r4, #28]
   14784:	str	r1, [r4, #36]	; 0x24
   14788:	str	r2, [sp, #20]
   1478c:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   14790:	ldr	r3, [r4, #32]
   14794:	str	r0, [r4, #28]
   14798:	mov	r1, r0
   1479c:	ldr	r2, [sp, #20]
   147a0:	b	14760 <xcb_depth_next@plt+0xe00>
   147a4:	ldr	r3, [r4, #32]
   147a8:	mov	r2, r7
   147ac:	b	14748 <xcb_depth_next@plt+0xde8>
   147b0:	ldr	r8, [sp, #40]	; 0x28
   147b4:	beq	14b1c <xcb_depth_next@plt+0x11bc>
   147b8:	ldr	r2, [sp, #32]
   147bc:	mov	ip, #1
   147c0:	mov	r3, ip
   147c4:	mov	r4, r2
   147c8:	ldr	r1, [r2, #8]
   147cc:	add	r2, r2, #8
   147d0:	cmn	r1, #1
   147d4:	beq	147ec <xcb_depth_next@plt+0xe8c>
   147d8:	cmp	r3, ip
   147dc:	addne	lr, r4, ip, lsl #3
   147e0:	add	ip, ip, #1
   147e4:	ldmne	r2, {r0, r1}
   147e8:	stmne	lr, {r0, r1}
   147ec:	add	r3, r3, #1
   147f0:	cmp	r8, r3
   147f4:	bgt	147c8 <xcb_depth_next@plt+0xe68>
   147f8:	mov	r8, ip
   147fc:	b	13fcc <xcb_depth_next@plt+0x66c>
   14800:	mov	r0, r4
   14804:	str	r4, [sp, #24]
   14808:	bl	13540 <close@plt>
   1480c:	b	1404c <xcb_depth_next@plt+0x6ec>
   14810:	add	r2, sp, #76	; 0x4c
   14814:	add	r3, sp, #84	; 0x54
   14818:	stmib	sp, {r2, r3}
   1481c:	add	r2, sp, #4352	; 0x1100
   14820:	add	r2, r2, #8
   14824:	add	ip, sp, #72	; 0x48
   14828:	add	r0, r2, #3
   1482c:	str	ip, [sp]
   14830:	movw	r1, #44936	; 0xaf88
   14834:	add	r2, r6, #8
   14838:	movt	r1, #1
   1483c:	ldr	r3, [sp, #40]	; 0x28
   14840:	bl	133d8 <sscanf@plt>
   14844:	cmp	r0, #5
   14848:	beq	148f8 <xcb_depth_next@plt+0xf98>
   1484c:	ldr	r7, [r4, #8]
   14850:	add	r1, sp, #132	; 0x84
   14854:	mov	r2, r7
   14858:	mov	r0, fp
   1485c:	bl	151b4 <xcb_depth_next@plt+0x1854>
   14860:	ldr	r0, [r4, #8]
   14864:	bl	13540 <close@plt>
   14868:	mvn	r3, #0
   1486c:	str	r3, [r4, #8]
   14870:	b	14610 <xcb_depth_next@plt+0xcb0>
   14874:	add	r1, sp, #8448	; 0x2100
   14878:	movw	r2, #57192	; 0xdf68
   1487c:	add	r1, r1, #8
   14880:	movt	r2, #65535	; 0xffff
   14884:	ldr	r7, [r4, #8]
   14888:	ldr	ip, [r1, r2]
   1488c:	cmp	ip, #0
   14890:	ble	14850 <xcb_depth_next@plt+0xef0>
   14894:	ldr	r6, [fp, #20]
   14898:	ldr	r2, [r6]
   1489c:	cmp	r7, r2
   148a0:	beq	14810 <xcb_depth_next@plt+0xeb0>
   148a4:	add	r2, r6, #40	; 0x28
   148a8:	mov	r3, r0
   148ac:	b	148c0 <xcb_depth_next@plt+0xf60>
   148b0:	mov	r6, r2
   148b4:	ldr	r1, [r2], #40	; 0x28
   148b8:	cmp	r7, r1
   148bc:	beq	14810 <xcb_depth_next@plt+0xeb0>
   148c0:	add	r3, r3, #1
   148c4:	cmp	r3, ip
   148c8:	bne	148b0 <xcb_depth_next@plt+0xf50>
   148cc:	b	14850 <xcb_depth_next@plt+0xef0>
   148d0:	mov	r2, r6
   148d4:	movw	r1, #44536	; 0xadf8
   148d8:	mov	r0, #1
   148dc:	movt	r1, #1
   148e0:	bl	13168 <__printf_chk@plt>
   148e4:	b	14610 <xcb_depth_next@plt+0xcb0>
   148e8:	mov	r0, fp
   148ec:	ldr	r1, [r4, #8]
   148f0:	bl	15a90 <xcb_depth_next@plt+0x2130>
   148f4:	b	14610 <xcb_depth_next@plt+0xcb0>
   148f8:	add	lr, sp, #8448	; 0x2100
   148fc:	movw	r3, #57156	; 0xdf44
   14900:	add	lr, lr, #8
   14904:	movw	r2, #57164	; 0xdf4c
   14908:	movt	r3, #65535	; 0xffff
   1490c:	movt	r2, #65535	; 0xffff
   14910:	add	ip, fp, #28
   14914:	str	ip, [sp, #60]	; 0x3c
   14918:	ldr	r2, [lr, r2]
   1491c:	ldr	r3, [lr, r3]
   14920:	ldr	r0, [fp, #28]
   14924:	str	r2, [sp, #16]
   14928:	mul	ip, r2, r3
   1492c:	add	ip, ip, #4080	; 0xff0
   14930:	add	ip, ip, #15
   14934:	bic	ip, ip, #4080	; 0xff0
   14938:	bic	ip, ip, #15
   1493c:	add	r2, ip, r0
   14940:	cmp	r2, #268435456	; 0x10000000
   14944:	bhi	14e44 <xcb_depth_next@plt+0x14e4>
   14948:	ldr	lr, [sp, #16]
   1494c:	movw	r1, #57148	; 0xdf3c
   14950:	movt	r1, #65535	; 0xffff
   14954:	movw	r2, #57152	; 0xdf40
   14958:	movt	r2, #65535	; 0xffff
   1495c:	str	lr, [sp]
   14960:	add	lr, sp, #8448	; 0x2100
   14964:	add	lr, lr, #8
   14968:	ldr	r1, [lr, r1]
   1496c:	ldr	lr, [fp, #32]
   14970:	add	r0, lr, r0
   14974:	add	lr, sp, #8448	; 0x2100
   14978:	add	lr, lr, #8
   1497c:	ldr	r2, [lr, r2]
   14980:	str	ip, [sp, #20]
   14984:	bl	135c4 <cairo_image_surface_create_for_data@plt>
   14988:	add	r1, sp, #140	; 0x8c
   1498c:	mov	r2, #4
   14990:	str	r0, [r6, #12]
   14994:	mov	r0, r7
   14998:	bl	15148 <xcb_depth_next@plt+0x17e8>
   1499c:	ldr	ip, [sp, #20]
   149a0:	cmp	r0, #0
   149a4:	beq	1484c <xcb_depth_next@plt+0xeec>
   149a8:	ldr	lr, [sp, #60]	; 0x3c
   149ac:	ldr	r3, [lr]
   149b0:	add	ip, ip, r3
   149b4:	str	ip, [lr]
   149b8:	b	14610 <xcb_depth_next@plt+0xcb0>
   149bc:	cmp	r3, #0
   149c0:	bne	147b8 <xcb_depth_next@plt+0xe58>
   149c4:	mov	ip, #1
   149c8:	b	147f8 <xcb_depth_next@plt+0xe98>
   149cc:	ldr	r4, [sp, #40]	; 0x28
   149d0:	b	14410 <xcb_depth_next@plt+0xab0>
   149d4:	movw	r3, #44776	; 0xaee8
   149d8:	movt	r3, #1
   149dc:	add	ip, sp, #260	; 0x104
   149e0:	mov	r2, #7
   149e4:	ldm	r3, {r0, r1}
   149e8:	stm	ip, {r0, r1}
   149ec:	mov	r1, ip
   149f0:	mov	r0, r5
   149f4:	bl	15148 <xcb_depth_next@plt+0x17e8>
   149f8:	cmp	r0, #0
   149fc:	beq	13d8c <xcb_depth_next@plt+0x42c>
   14a00:	ldr	r0, [r4, #8]
   14a04:	add	r7, r4, #8
   14a08:	cmp	r0, #0
   14a0c:	beq	13d90 <xcb_depth_next@plt+0x430>
   14a10:	mov	r1, #4096	; 0x1000
   14a14:	add	r0, sp, #4352	; 0x1100
   14a18:	movw	r3, #44784	; 0xaef0
   14a1c:	movw	r2, #44804	; 0xaf04
   14a20:	movt	r3, #1
   14a24:	movt	r2, #1
   14a28:	str	r3, [sp]
   14a2c:	add	r0, r0, #4
   14a30:	mov	r3, r1
   14a34:	str	r2, [sp, #4]
   14a38:	mov	r2, #1
   14a3c:	add	r6, sp, #4352	; 0x1100
   14a40:	bl	13510 <__snprintf_chk@plt>
   14a44:	add	r1, sp, #4352	; 0x1100
   14a48:	add	r6, r6, #8
   14a4c:	add	r1, r1, #4
   14a50:	mov	r2, #1
   14a54:	movw	r0, #44820	; 0xaf14
   14a58:	movt	r0, #1
   14a5c:	bl	138d0 <setenv@plt>
   14a60:	add	r1, sp, #4352	; 0x1100
   14a64:	mov	r3, #48	; 0x30
   14a68:	add	r1, r1, #4
   14a6c:	strh	r3, [r6, #-4]
   14a70:	mov	r2, #1
   14a74:	movw	r0, #44832	; 0xaf20
   14a78:	movt	r0, #1
   14a7c:	bl	138d0 <setenv@plt>
   14a80:	mov	r1, #4096	; 0x1000
   14a84:	add	r0, sp, #4352	; 0x1100
   14a88:	mov	r3, r1
   14a8c:	str	r5, [sp, #4]
   14a90:	mov	r2, #1
   14a94:	add	r0, r0, #4
   14a98:	movw	ip, #44856	; 0xaf38
   14a9c:	movt	ip, #1
   14aa0:	str	ip, [sp]
   14aa4:	bl	13510 <__snprintf_chk@plt>
   14aa8:	add	r1, sp, #4352	; 0x1100
   14aac:	add	r1, r1, #4
   14ab0:	mov	r2, #1
   14ab4:	movw	r0, #44860	; 0xaf3c
   14ab8:	movt	r0, #1
   14abc:	bl	138d0 <setenv@plt>
   14ac0:	add	r0, sp, #4352	; 0x1100
   14ac4:	add	r0, r0, #4
   14ac8:	bl	13504 <putenv@plt>
   14acc:	ldr	r0, [r4, #8]
   14ad0:	mov	r1, r7
   14ad4:	bl	13228 <execvp@plt>
   14ad8:	b	13d90 <xcb_depth_next@plt+0x430>
   14adc:	lsl	r3, r3, #1
   14ae0:	mov	r1, #40	; 0x28
   14ae4:	ldr	r0, [fp, #20]
   14ae8:	mul	r1, r1, r3
   14aec:	str	r3, [fp, #4]
   14af0:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   14af4:	str	r0, [fp, #20]
   14af8:	b	140e0 <xcb_depth_next@plt+0x780>
   14afc:	mov	r0, r5
   14b00:	bl	133cc <strlen@plt>
   14b04:	mov	r9, r0
   14b08:	b	14248 <xcb_depth_next@plt+0x8e8>
   14b0c:	ldr	r0, [sp, #40]	; 0x28
   14b10:	bl	133cc <strlen@plt>
   14b14:	mov	r9, r0
   14b18:	b	141ec <xcb_depth_next@plt+0x88c>
   14b1c:	ldr	r0, [sp, #24]
   14b20:	bl	13540 <close@plt>
   14b24:	ldr	ip, [sp, #36]	; 0x24
   14b28:	ldr	lr, [sp, #32]
   14b2c:	mvn	r3, #0
   14b30:	str	r3, [lr, ip, lsl #3]
   14b34:	ldr	r5, [sp, #32]
   14b38:	mov	r4, #0
   14b3c:	ldr	r0, [r5, r4, lsl #3]
   14b40:	cmn	r0, #1
   14b44:	beq	14b4c <xcb_depth_next@plt+0x11ec>
   14b48:	bl	13540 <close@plt>
   14b4c:	add	r4, r4, #1
   14b50:	cmp	r4, r8
   14b54:	blt	14b3c <xcb_depth_next@plt+0x11dc>
   14b58:	ldr	r0, [sp, #32]
   14b5c:	bl	13300 <free@plt>
   14b60:	ldr	r0, [sp, #136]	; 0x88
   14b64:	bl	1339c <shm_unlink@plt>
   14b68:	mov	r1, #268435456	; 0x10000000
   14b6c:	ldr	r0, [fp, #32]
   14b70:	bl	13768 <munmap@plt>
   14b74:	ldr	r0, [fp, #20]
   14b78:	bl	13300 <free@plt>
   14b7c:	mov	r0, #0
   14b80:	b	13d90 <xcb_depth_next@plt+0x430>
   14b84:	ldr	r0, [sp, #40]	; 0x28
   14b88:	bl	133cc <strlen@plt>
   14b8c:	mov	r9, r0
   14b90:	b	1418c <xcb_depth_next@plt+0x82c>
   14b94:	mov	r0, r7
   14b98:	bl	133cc <strlen@plt>
   14b9c:	mov	r9, r0
   14ba0:	b	14394 <xcb_depth_next@plt+0xa34>
   14ba4:	str	r0, [sp]
   14ba8:	mov	r2, #0
   14bac:	mov	r3, #0
   14bb0:	mov	r1, #268435456	; 0x10000000
   14bb4:	strd	r2, [sp, #8]
   14bb8:	mov	r0, #0
   14bbc:	mov	r2, #3
   14bc0:	movw	r3, #16385	; 0x4001
   14bc4:	bl	13600 <mmap64@plt>
   14bc8:	mov	r9, r0
   14bcc:	mov	r0, r8
   14bd0:	bl	13540 <close@plt>
   14bd4:	cmn	r9, #1
   14bd8:	str	r9, [r6, #12]
   14bdc:	beq	13d6c <xcb_depth_next@plt+0x40c>
   14be0:	bl	154e0 <xcb_depth_next@plt+0x1b80>
   14be4:	cmp	r0, #0
   14be8:	blt	13d8c <xcb_depth_next@plt+0x42c>
   14bec:	bl	155a8 <xcb_depth_next@plt+0x1c48>
   14bf0:	add	r3, sp, #8448	; 0x2100
   14bf4:	movw	r9, #57156	; 0xdf44
   14bf8:	add	r3, r3, #8
   14bfc:	movt	r9, #65535	; 0xffff
   14c00:	cmp	r0, #0
   14c04:	str	r0, [r3, r9]
   14c08:	blt	13d8c <xcb_depth_next@plt+0x42c>
   14c0c:	mov	r1, #1
   14c10:	mvn	r2, #0
   14c14:	str	r7, [sp]
   14c18:	movw	r3, #44732	; 0xaebc
   14c1c:	mov	r0, r4
   14c20:	movt	r3, #1
   14c24:	bl	137c8 <__sprintf_chk@plt>
   14c28:	add	r8, sp, #8448	; 0x2100
   14c2c:	add	r8, r8, #8
   14c30:	mov	r1, r4
   14c34:	mov	r2, r0
   14c38:	ldr	r0, [r8, r9]
   14c3c:	bl	15148 <xcb_depth_next@plt+0x17e8>
   14c40:	cmp	r0, #0
   14c44:	beq	13d8c <xcb_depth_next@plt+0x42c>
   14c48:	bl	1345c <cairo_script_interpreter_create@plt>
   14c4c:	mov	r1, fp
   14c50:	mov	fp, #0
   14c54:	mov	r8, r9
   14c58:	mov	sl, fp
   14c5c:	mov	r7, #65536	; 0x10000
   14c60:	str	r0, [r6, #16]
   14c64:	bl	13240 <cairo_script_interpreter_install_hooks@plt>
   14c68:	add	ip, sp, #8448	; 0x2100
   14c6c:	add	ip, ip, #8
   14c70:	ldr	r0, [ip, r9]
   14c74:	bl	15058 <xcb_depth_next@plt+0x16f8>
   14c78:	mov	r3, #1
   14c7c:	strh	r3, [sp, #80]	; 0x50
   14c80:	add	r0, sp, #76	; 0x4c
   14c84:	mov	r1, #1
   14c88:	mvn	r2, #0
   14c8c:	bl	13648 <poll@plt>
   14c90:	cmp	r0, #0
   14c94:	ble	14d70 <xcb_depth_next@plt+0x1410>
   14c98:	add	lr, sp, #8448	; 0x2100
   14c9c:	rsb	r9, fp, r7
   14ca0:	add	lr, lr, #8
   14ca4:	add	r1, r4, fp
   14ca8:	mov	r2, r9
   14cac:	ldr	r0, [lr, r8]
   14cb0:	bl	1330c <read@plt>
   14cb4:	subs	r3, r0, #0
   14cb8:	ble	14d58 <xcb_depth_next@plt+0x13f8>
   14cbc:	cmp	r9, r3
   14cc0:	beq	14d38 <xcb_depth_next@plt+0x13d8>
   14cc4:	add	fp, fp, r3
   14cc8:	cmp	fp, #0
   14ccc:	ble	14c98 <xcb_depth_next@plt+0x1338>
   14cd0:	sub	r9, fp, #1
   14cd4:	ldrb	r3, [r4, r9]
   14cd8:	cmp	r3, #10
   14cdc:	beq	14cf8 <xcb_depth_next@plt+0x1398>
   14ce0:	cmp	r9, #0
   14ce4:	beq	14c98 <xcb_depth_next@plt+0x1338>
   14ce8:	sub	r9, r9, #1
   14cec:	ldrb	r3, [r4, r9]
   14cf0:	cmp	r3, #10
   14cf4:	bne	14ce0 <xcb_depth_next@plt+0x1380>
   14cf8:	cmp	r9, #0
   14cfc:	beq	14c98 <xcb_depth_next@plt+0x1338>
   14d00:	strb	sl, [r4, r9]
   14d04:	mov	r1, r4
   14d08:	ldr	r0, [r6, #16]
   14d0c:	mov	r2, r9
   14d10:	bl	133a8 <cairo_script_interpreter_feed_string@plt>
   14d14:	mvn	r3, r9
   14d18:	adds	fp, fp, r3
   14d1c:	beq	14c98 <xcb_depth_next@plt+0x1338>
   14d20:	add	r1, r9, #1
   14d24:	mov	r0, r4
   14d28:	add	r1, r4, r1
   14d2c:	mov	r2, fp
   14d30:	bl	13684 <memmove@plt>
   14d34:	b	14c98 <xcb_depth_next@plt+0x1338>
   14d38:	lsl	r7, r7, #1
   14d3c:	mov	r0, r4
   14d40:	str	r3, [sp, #20]
   14d44:	mov	r1, r7
   14d48:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   14d4c:	ldr	r3, [sp, #20]
   14d50:	mov	r4, r0
   14d54:	b	14cc4 <xcb_depth_next@plt+0x1364>
   14d58:	beq	14d70 <xcb_depth_next@plt+0x1410>
   14d5c:	bl	1390c <__errno_location@plt>
   14d60:	ldr	r3, [r0]
   14d64:	cmp	r3, #4
   14d68:	cmpne	r3, #11
   14d6c:	beq	14c80 <xcb_depth_next@plt+0x1320>
   14d70:	ldr	r0, [r6, #16]
   14d74:	bl	135e8 <cairo_script_interpreter_finish@plt>
   14d78:	ldr	r0, [r6, #16]
   14d7c:	bl	13234 <cairo_script_interpreter_destroy@plt>
   14d80:	ldr	r0, [r6, #8]
   14d84:	bl	13708 <cairo_surface_destroy@plt>
   14d88:	mov	r0, r5
   14d8c:	bl	13540 <close@plt>
   14d90:	mov	r0, #0
   14d94:	b	13d90 <xcb_depth_next@plt+0x430>
   14d98:	mvn	r3, #0
   14d9c:	str	r3, [r0]
   14da0:	b	14490 <xcb_depth_next@plt+0xb30>
   14da4:	mov	r0, r4
   14da8:	bl	13540 <close@plt>
   14dac:	movw	r3, #54100	; 0xd354
   14db0:	movt	r3, #2
   14db4:	movw	r0, #44284	; 0xacfc
   14db8:	mov	r1, #1
   14dbc:	ldr	r3, [r3]
   14dc0:	movt	r0, #1
   14dc4:	mov	r2, #31
   14dc8:	bl	13570 <fwrite@plt>
   14dcc:	mov	r0, #1
   14dd0:	b	13d90 <xcb_depth_next@plt+0x430>
   14dd4:	movw	r3, #44652	; 0xae6c
   14dd8:	str	r8, [sp, #4]
   14ddc:	movt	r3, #1
   14de0:	mov	r1, #1
   14de4:	mvn	r2, #0
   14de8:	bl	137c8 <__sprintf_chk@plt>
   14dec:	b	13d24 <xcb_depth_next@plt+0x3c4>
   14df0:	movw	r3, #54100	; 0xd354
   14df4:	movt	r3, #2
   14df8:	movw	r0, #44316	; 0xad1c
   14dfc:	mov	r1, #1
   14e00:	ldr	r3, [r3]
   14e04:	movt	r0, #1
   14e08:	mov	r2, #40	; 0x28
   14e0c:	bl	13570 <fwrite@plt>
   14e10:	mov	r0, #1
   14e14:	b	13d90 <xcb_depth_next@plt+0x430>
   14e18:	ldr	r3, [r6, #4]
   14e1c:	movw	r0, #54100	; 0xd354
   14e20:	movt	r0, #2
   14e24:	movw	r2, #44564	; 0xae14
   14e28:	mov	r1, #1
   14e2c:	movt	r2, #1
   14e30:	ldr	r3, [r3]
   14e34:	ldr	r0, [r0]
   14e38:	bl	1363c <__fprintf_chk@plt>
   14e3c:	mov	r0, #1
   14e40:	b	13d90 <xcb_depth_next@plt+0x430>
   14e44:	movw	r0, #44464	; 0xadb0
   14e48:	movw	r1, #44132	; 0xac64
   14e4c:	movt	r0, #1
   14e50:	movt	r1, #1
   14e54:	mov	r2, #420	; 0x1a4
   14e58:	ldr	r3, [pc, #52]	; 14e94 <xcb_depth_next@plt+0x1534>
   14e5c:	bl	13264 <__assert_fail@plt>
   14e60:	movw	r0, #44428	; 0xad8c
   14e64:	movw	r1, #44132	; 0xac64
   14e68:	movt	r0, #1
   14e6c:	movt	r1, #1
   14e70:	movw	r2, #373	; 0x175
   14e74:	ldr	r3, [pc, #28]	; 14e98 <xcb_depth_next@plt+0x1538>
   14e78:	bl	13264 <__assert_fail@plt>
   14e7c:	mov	r0, #1
   14e80:	bl	138e8 <exit@plt>
   14e84:	bl	13618 <__stack_chk_fail@plt>
   14e88:	ldr	r3, [r4, #32]
   14e8c:	mov	r2, r8
   14e90:	b	1474c <xcb_depth_next@plt+0xdec>
   14e94:	andeq	sl, r1, r4, ror #22
   14e98:	andeq	sl, r1, r0, asr fp
   14e9c:	mov	fp, #0
   14ea0:	mov	lr, #0
   14ea4:	pop	{r1}		; (ldr r1, [sp], #4)
   14ea8:	mov	r2, sp
   14eac:	push	{r2}		; (str r2, [sp, #-4]!)
   14eb0:	push	{r0}		; (str r0, [sp, #-4]!)
   14eb4:	ldr	ip, [pc, #16]	; 14ecc <xcb_depth_next@plt+0x156c>
   14eb8:	push	{ip}		; (str ip, [sp, #-4]!)
   14ebc:	ldr	r0, [pc, #12]	; 14ed0 <xcb_depth_next@plt+0x1570>
   14ec0:	ldr	r3, [pc, #12]	; 14ed4 <xcb_depth_next@plt+0x1574>
   14ec4:	bl	130c0 <__libc_start_main@plt>
   14ec8:	bl	13078 <abort@plt>
   14ecc:	andeq	sl, r1, ip, lsl fp
   14ed0:	andeq	r3, r1, r0, asr fp
   14ed4:			; <UNDEFINED> instruction: 0x0001aab8
   14ed8:	ldr	r3, [pc, #20]	; 14ef4 <xcb_depth_next@plt+0x1594>
   14edc:	ldr	r2, [pc, #20]	; 14ef8 <xcb_depth_next@plt+0x1598>
   14ee0:	add	r3, pc, r3
   14ee4:	ldr	r2, [r3, r2]
   14ee8:	cmp	r2, #0
   14eec:	bxeq	lr
   14ef0:	b	13108 <__gmon_start__@plt>
   14ef4:	andeq	r8, r1, r8, lsl r1
   14ef8:	andeq	r0, r0, ip, lsr #6
   14efc:	push	{r3, lr}
   14f00:	movw	r0, #54092	; 0xd34c
   14f04:	ldr	r3, [pc, #36]	; 14f30 <xcb_depth_next@plt+0x15d0>
   14f08:	movt	r0, #2
   14f0c:	rsb	r3, r0, r3
   14f10:	cmp	r3, #6
   14f14:	popls	{r3, pc}
   14f18:	movw	r3, #0
   14f1c:	movt	r3, #0
   14f20:	cmp	r3, #0
   14f24:	popeq	{r3, pc}
   14f28:	blx	r3
   14f2c:	pop	{r3, pc}
   14f30:	andeq	sp, r2, pc, asr #6
   14f34:	push	{r3, lr}
   14f38:	movw	r0, #54092	; 0xd34c
   14f3c:	movw	r3, #54092	; 0xd34c
   14f40:	movt	r0, #2
   14f44:	movt	r3, #2
   14f48:	rsb	r3, r0, r3
   14f4c:	asr	r3, r3, #2
   14f50:	add	r3, r3, r3, lsr #31
   14f54:	asrs	r1, r3, #1
   14f58:	popeq	{r3, pc}
   14f5c:	movw	r2, #0
   14f60:	movt	r2, #0
   14f64:	cmp	r2, #0
   14f68:	popeq	{r3, pc}
   14f6c:	blx	r2
   14f70:	pop	{r3, pc}
   14f74:	push	{r4, lr}
   14f78:	movw	r4, #54104	; 0xd358
   14f7c:	movt	r4, #2
   14f80:	ldrb	r3, [r4]
   14f84:	cmp	r3, #0
   14f88:	popne	{r4, pc}
   14f8c:	bl	14efc <xcb_depth_next@plt+0x159c>
   14f90:	mov	r3, #1
   14f94:	strb	r3, [r4]
   14f98:	pop	{r4, pc}
   14f9c:	movw	r0, #50916	; 0xc6e4
   14fa0:	movt	r0, #2
   14fa4:	push	{r3, lr}
   14fa8:	ldr	r3, [r0]
   14fac:	cmp	r3, #0
   14fb0:	beq	14fc8 <xcb_depth_next@plt+0x1668>
   14fb4:	movw	r3, #0
   14fb8:	movt	r3, #0
   14fbc:	cmp	r3, #0
   14fc0:	beq	14fc8 <xcb_depth_next@plt+0x1668>
   14fc4:	blx	r3
   14fc8:	pop	{r3, lr}
   14fcc:	b	14f34 <xcb_depth_next@plt+0x15d4>
   14fd0:	ldrb	r3, [r0]
   14fd4:	ldrb	r0, [r1]
   14fd8:	rsb	r0, r0, r3
   14fdc:	bx	lr
   14fe0:	vcvt.s32.f64	s0, d0
   14fe4:	push	{r4, r5, r6, lr}
   14fe8:	ldr	r0, [r0, #8]
   14fec:	vcvt.s32.f64	s2, d1
   14ff0:	vmov	r2, s0
   14ff4:	vmov	r5, s0
   14ff8:	vmov	r3, s2
   14ffc:	vmov	r4, s2
   15000:	bl	138a0 <cairo_surface_create_similar@plt>
   15004:	mov	r6, r0
   15008:	bl	13894 <cairo_surface_get_type@plt>
   1500c:	cmp	r0, #0
   15010:	bne	1501c <xcb_depth_next@plt+0x16bc>
   15014:	mov	r0, r6
   15018:	pop	{r4, r5, r6, pc}
   1501c:	mov	r0, #8
   15020:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   15024:	movw	r1, #54108	; 0xd35c
   15028:	movw	r3, #13056	; 0x3300
   1502c:	movt	r1, #2
   15030:	movt	r3, #1
   15034:	str	r5, [r0]
   15038:	mov	r2, r0
   1503c:	str	r4, [r0, #4]
   15040:	mov	r0, r6
   15044:	bl	137bc <cairo_surface_set_user_data@plt>
   15048:	cmp	r0, #0
   1504c:	beq	15014 <xcb_depth_next@plt+0x16b4>
   15050:	mvn	r0, #0
   15054:	bl	138e8 <exit@plt>
   15058:	push	{r4, lr}
   1505c:	mov	r1, #3
   15060:	mov	r4, r0
   15064:	bl	136fc <fcntl@plt>
   15068:	cmn	r0, #1
   1506c:	mov	r2, r0
   15070:	popeq	{r4, pc}
   15074:	mov	r0, r4
   15078:	orr	r2, r2, #2048	; 0x800
   1507c:	mov	r1, #4
   15080:	pop	{r4, lr}
   15084:	b	136fc <fcntl@plt>
   15088:	push	{r3, r4, r5, lr}
   1508c:	mov	r4, r1
   15090:	mov	r5, r0
   15094:	bl	13540 <close@plt>
   15098:	orr	r1, r4, #64	; 0x40
   1509c:	movw	r0, #43892	; 0xab74
   150a0:	mov	r2, #448	; 0x1c0
   150a4:	movt	r0, #1
   150a8:	bl	134bc <open64@plt>
   150ac:	cmn	r0, #1
   150b0:	mov	r4, r0
   150b4:	beq	150d0 <xcb_depth_next@plt+0x1770>
   150b8:	mov	r1, r5
   150bc:	bl	1369c <dup2@plt>
   150c0:	mov	r3, r0
   150c4:	mov	r0, r4
   150c8:	mov	r4, r3
   150cc:	bl	13540 <close@plt>
   150d0:	mov	r0, r4
   150d4:	pop	{r3, r4, r5, pc}
   150d8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   150dc:	mov	r9, r1
   150e0:	mov	r7, r0
   150e4:	mov	r8, r2
   150e8:	mov	r4, r1
   150ec:	mov	r5, #0
   150f0:	b	1510c <xcb_depth_next@plt+0x17ac>
   150f4:	ldrb	r3, [r6]
   150f8:	cmp	r3, #10
   150fc:	beq	15138 <xcb_depth_next@plt+0x17d8>
   15100:	add	r5, r5, #1
   15104:	cmp	r5, r8
   15108:	bge	15134 <xcb_depth_next@plt+0x17d4>
   1510c:	mov	r1, r4
   15110:	mov	r0, r7
   15114:	mov	r2, #1
   15118:	mov	r6, r4
   1511c:	bl	1330c <read@plt>
   15120:	add	r4, r4, #1
   15124:	cmp	r0, #0
   15128:	bgt	150f4 <xcb_depth_next@plt+0x1794>
   1512c:	mvn	r0, #0
   15130:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15134:	add	r6, r9, r5
   15138:	mov	r3, #0
   1513c:	mov	r0, r5
   15140:	strb	r3, [r6]
   15144:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15148:	push	{r4, r5, r6, lr}
   1514c:	subs	r4, r2, #0
   15150:	mov	r6, r0
   15154:	mov	r5, r1
   15158:	bne	15174 <xcb_depth_next@plt+0x1814>
   1515c:	b	151ac <xcb_depth_next@plt+0x184c>
   15160:	rsb	r4, r0, r4
   15164:	add	r5, r5, r0
   15168:	popeq	{r4, r5, r6, pc}
   1516c:	cmp	r4, #0
   15170:	beq	151ac <xcb_depth_next@plt+0x184c>
   15174:	mov	r0, r6
   15178:	mov	r1, r5
   1517c:	mov	r2, r4
   15180:	bl	13318 <write@plt>
   15184:	cmp	r0, #0
   15188:	bge	15160 <xcb_depth_next@plt+0x1800>
   1518c:	bl	1390c <__errno_location@plt>
   15190:	ldr	r3, [r0]
   15194:	cmp	r3, #4
   15198:	beq	1516c <xcb_depth_next@plt+0x180c>
   1519c:	cmp	r3, #11
   151a0:	beq	1516c <xcb_depth_next@plt+0x180c>
   151a4:	mov	r0, #0
   151a8:	pop	{r4, r5, r6, pc}
   151ac:	mov	r0, #1
   151b0:	pop	{r4, r5, r6, pc}
   151b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151b8:	mov	r8, r0
   151bc:	ldr	ip, [r0]
   151c0:	mov	r9, r1
   151c4:	cmp	ip, #0
   151c8:	ble	15274 <xcb_depth_next@plt+0x1914>
   151cc:	ldr	r1, [r1]
   151d0:	ldr	r3, [r1]
   151d4:	cmp	r3, r2
   151d8:	addne	r3, r1, #40	; 0x28
   151dc:	movne	r5, #0
   151e0:	bne	151f4 <xcb_depth_next@plt+0x1894>
   151e4:	b	1527c <xcb_depth_next@plt+0x191c>
   151e8:	ldr	r0, [r3], #40	; 0x28
   151ec:	cmp	r0, r2
   151f0:	beq	15260 <xcb_depth_next@plt+0x1900>
   151f4:	add	r5, r5, #1
   151f8:	mov	r1, r3
   151fc:	cmp	r5, ip
   15200:	bne	151e8 <xcb_depth_next@plt+0x1888>
   15204:	add	r6, r5, #1
   15208:	cmp	r6, ip
   1520c:	addlt	sl, r5, r5, lsl #2
   15210:	addlt	r7, r6, r6, lsl #2
   15214:	lsllt	sl, sl, #3
   15218:	lsllt	r7, r7, #3
   1521c:	bge	15258 <xcb_depth_next@plt+0x18f8>
   15220:	ldr	ip, [r9]
   15224:	add	r6, r6, #1
   15228:	add	r4, ip, r7
   1522c:	add	ip, ip, sl
   15230:	add	r7, r7, #40	; 0x28
   15234:	ldm	r4!, {r0, r1, r2, r3}
   15238:	stmia	ip!, {r0, r1, r2, r3}
   1523c:	ldm	r4!, {r0, r1, r2, r3}
   15240:	stmia	ip!, {r0, r1, r2, r3}
   15244:	ldm	r4, {r0, r1}
   15248:	stm	ip, {r0, r1}
   1524c:	ldr	r3, [r8]
   15250:	cmp	r6, r3
   15254:	blt	15220 <xcb_depth_next@plt+0x18c0>
   15258:	str	r5, [r8]
   1525c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15260:	add	r6, r5, #1
   15264:	ldr	r0, [r1, #28]
   15268:	bl	13300 <free@plt>
   1526c:	ldr	ip, [r8]
   15270:	b	15208 <xcb_depth_next@plt+0x18a8>
   15274:	mov	r5, #0
   15278:	b	15258 <xcb_depth_next@plt+0x18f8>
   1527c:	mov	r6, #1
   15280:	mov	r5, #0
   15284:	b	15264 <xcb_depth_next@plt+0x1904>
   15288:	push	{r4, r5, r6, r7, r8, lr}
   1528c:	movw	r4, #54096	; 0xd350
   15290:	movt	r4, #2
   15294:	sub	sp, sp, #48	; 0x30
   15298:	mov	r7, r1
   1529c:	mov	r6, r2
   152a0:	ldr	ip, [r4]
   152a4:	mov	r8, r3
   152a8:	mov	r5, r0
   152ac:	str	ip, [sp, #44]	; 0x2c
   152b0:	bl	13894 <cairo_surface_get_type@plt>
   152b4:	cmp	r0, #0
   152b8:	beq	152fc <xcb_depth_next@plt+0x199c>
   152bc:	movw	r1, #54108	; 0xd35c
   152c0:	mov	r0, r5
   152c4:	movt	r1, #2
   152c8:	bl	1315c <cairo_surface_get_user_data@plt>
   152cc:	cmp	r0, #0
   152d0:	beq	15324 <xcb_depth_next@plt+0x19c4>
   152d4:	ldr	r3, [r0]
   152d8:	str	r3, [r7]
   152dc:	ldr	r3, [r0, #4]
   152e0:	str	r3, [r6]
   152e4:	ldr	r2, [sp, #44]	; 0x2c
   152e8:	ldr	r3, [r4]
   152ec:	cmp	r2, r3
   152f0:	bne	153c4 <xcb_depth_next@plt+0x1a64>
   152f4:	add	sp, sp, #48	; 0x30
   152f8:	pop	{r4, r5, r6, r7, r8, pc}
   152fc:	mov	r0, r5
   15300:	bl	1378c <cairo_image_surface_get_width@plt>
   15304:	str	r0, [r7]
   15308:	mov	r0, r5
   1530c:	bl	1360c <cairo_image_surface_get_height@plt>
   15310:	str	r0, [r6]
   15314:	mov	r0, r5
   15318:	bl	134f8 <cairo_image_surface_get_format@plt>
   1531c:	str	r0, [r8]
   15320:	b	152e4 <xcb_depth_next@plt+0x1984>
   15324:	mov	r0, r5
   15328:	bl	13450 <cairo_create@plt>
   1532c:	add	r1, sp, #8
   15330:	add	r2, sp, #24
   15334:	add	r3, sp, #32
   15338:	str	r3, [sp]
   1533c:	add	r3, sp, #16
   15340:	mov	r8, r0
   15344:	bl	130cc <cairo_clip_extents@plt>
   15348:	mov	r0, r8
   1534c:	bl	13114 <cairo_destroy@plt>
   15350:	mov	r0, #8
   15354:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   15358:	vldr	d7, [sp, #8]
   1535c:	vldr	d0, [sp, #16]
   15360:	vsub.f64	d0, d0, d7
   15364:	mov	r8, r0
   15368:	bl	13918 <ceil@plt>
   1536c:	vcvt.s32.f64	s0, d0
   15370:	vmov	r3, s0
   15374:	vstr	s0, [r8]
   15378:	vldr	d6, [sp, #32]
   1537c:	vldr	d0, [sp, #24]
   15380:	vsub.f64	d0, d6, d0
   15384:	str	r3, [r7]
   15388:	bl	13918 <ceil@plt>
   1538c:	mov	r0, r5
   15390:	mov	r2, r8
   15394:	movw	r1, #54108	; 0xd35c
   15398:	movw	r3, #13056	; 0x3300
   1539c:	movt	r1, #2
   153a0:	movt	r3, #1
   153a4:	vcvt.s32.f64	s0, d0
   153a8:	vstr	s0, [r8, #4]
   153ac:	vstr	s0, [r6]
   153b0:	bl	137bc <cairo_surface_set_user_data@plt>
   153b4:	cmp	r0, #0
   153b8:	beq	152e4 <xcb_depth_next@plt+0x1984>
   153bc:	mvn	r0, #0
   153c0:	bl	138e8 <exit@plt>
   153c4:	bl	13618 <__stack_chk_fail@plt>
   153c8:	push	{r4, r5, r6, r7, lr}
   153cc:	movw	r6, #54096	; 0xd350
   153d0:	movt	r6, #2
   153d4:	sub	sp, sp, #20
   153d8:	mov	r5, r0
   153dc:	mov	r0, #20
   153e0:	ldr	r3, [r6]
   153e4:	mov	r7, r1
   153e8:	str	r3, [sp, #12]
   153ec:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   153f0:	ldr	r3, [r5, #20]
   153f4:	mov	r4, r0
   153f8:	mov	r0, r7
   153fc:	str	r3, [r4]
   15400:	str	r7, [r4, #12]
   15404:	bl	13954 <cairo_surface_reference@plt>
   15408:	str	r0, [r4, #16]
   1540c:	ldr	r3, [r5, #24]
   15410:	add	r3, r3, #1
   15414:	str	r3, [r5, #24]
   15418:	cmp	r3, #0
   1541c:	str	r3, [r4, #4]
   15420:	ldreq	r3, [r5, #24]
   15424:	addeq	r3, r3, #1
   15428:	streq	r3, [r5, #24]
   1542c:	streq	r3, [r4, #4]
   15430:	ldr	r3, [r5, #4]
   15434:	str	r4, [r5, #20]
   15438:	cmp	r3, #0
   1543c:	beq	15464 <xcb_depth_next@plt+0x1b04>
   15440:	ldr	r0, [r4, #12]
   15444:	bl	13450 <cairo_create@plt>
   15448:	str	r0, [r4, #8]
   1544c:	ldr	r2, [sp, #12]
   15450:	ldr	r3, [r6]
   15454:	cmp	r2, r3
   15458:	bne	154d0 <xcb_depth_next@plt+0x1b70>
   1545c:	add	sp, sp, #20
   15460:	pop	{r4, r5, r6, r7, pc}
   15464:	mov	r0, r7
   15468:	bl	13894 <cairo_surface_get_type@plt>
   1546c:	cmp	r0, #16
   15470:	beq	15440 <xcb_depth_next@plt+0x1ae0>
   15474:	add	r1, sp, #4
   15478:	add	r2, sp, #8
   1547c:	mov	r3, sp
   15480:	mov	r0, r7
   15484:	bl	15288 <xcb_depth_next@plt+0x1928>
   15488:	mov	r0, r7
   1548c:	ldr	r5, [r5, #8]
   15490:	bl	131b0 <cairo_surface_get_content@plt>
   15494:	ldmib	sp, {r2, r3}
   15498:	mov	r1, r0
   1549c:	mov	r0, r5
   154a0:	bl	138a0 <cairo_surface_create_similar@plt>
   154a4:	str	r0, [r4, #12]
   154a8:	bl	13450 <cairo_create@plt>
   154ac:	vldr	d0, [pc, #36]	; 154d8 <xcb_depth_next@plt+0x1b78>
   154b0:	mov	r1, r7
   154b4:	vmov.f64	d1, d0
   154b8:	str	r0, [r4, #8]
   154bc:	bl	131bc <cairo_set_source_surface@plt>
   154c0:	ldr	r0, [r4, #8]
   154c4:	bl	132dc <cairo_paint@plt>
   154c8:	ldr	r0, [r4, #8]
   154cc:	b	1544c <xcb_depth_next@plt+0x1aec>
   154d0:	bl	13618 <__stack_chk_fail@plt>
   154d4:	nop	{0}
	...
   154e0:	push	{r4, r5, r6, lr}
   154e4:	bl	13714 <fork@plt>
   154e8:	cmn	r0, #1
   154ec:	mov	r4, r0
   154f0:	mov	r5, r0
   154f4:	beq	15588 <xcb_depth_next@plt+0x1c28>
   154f8:	cmp	r0, #0
   154fc:	bne	15590 <xcb_depth_next@plt+0x1c30>
   15500:	bl	1321c <setsid@plt>
   15504:	cmn	r0, #1
   15508:	mov	r4, r0
   1550c:	beq	15588 <xcb_depth_next@plt+0x1c28>
   15510:	mov	r0, #1
   15514:	mov	r1, r0
   15518:	bl	130d8 <signal@plt>
   1551c:	mov	r6, r0
   15520:	bl	13714 <fork@plt>
   15524:	cmn	r0, #1
   15528:	mov	r4, r0
   1552c:	beq	15588 <xcb_depth_next@plt+0x1c28>
   15530:	cmp	r0, #0
   15534:	bne	15598 <xcb_depth_next@plt+0x1c38>
   15538:	mov	r1, r6
   1553c:	mov	r0, #1
   15540:	bl	130d8 <signal@plt>
   15544:	mov	r0, r4
   15548:	mov	r1, r4
   1554c:	bl	15088 <xcb_depth_next@plt+0x1728>
   15550:	cmn	r0, #1
   15554:	beq	155a0 <xcb_depth_next@plt+0x1c40>
   15558:	mov	r0, #1
   1555c:	movw	r1, #1025	; 0x401
   15560:	bl	15088 <xcb_depth_next@plt+0x1728>
   15564:	cmn	r0, #1
   15568:	beq	155a0 <xcb_depth_next@plt+0x1c40>
   1556c:	mov	r0, #1
   15570:	mov	r1, #2
   15574:	bl	1369c <dup2@plt>
   15578:	cmn	r0, #1
   1557c:	movne	r0, #0
   15580:	moveq	r0, #1
   15584:	rsb	r4, r0, #0
   15588:	mov	r0, r4
   1558c:	pop	{r4, r5, r6, pc}
   15590:	mov	r0, #0
   15594:	bl	132d0 <_exit@plt>
   15598:	mov	r0, r5
   1559c:	bl	132d0 <_exit@plt>
   155a0:	mvn	r4, #0
   155a4:	b	15588 <xcb_depth_next@plt+0x1c28>
   155a8:	push	{r4, r5, lr}
   155ac:	movw	r4, #54096	; 0xd350
   155b0:	movt	r4, #2
   155b4:	sub	sp, sp, #124	; 0x7c
   155b8:	mov	r0, #1
   155bc:	mov	r2, #0
   155c0:	ldr	r3, [r4]
   155c4:	mov	r1, r0
   155c8:	str	r3, [sp, #116]	; 0x74
   155cc:	bl	1336c <socket@plt>
   155d0:	cmn	r0, #1
   155d4:	mov	r5, r0
   155d8:	beq	1564c <xcb_depth_next@plt+0x1cec>
   155dc:	mov	r1, #0
   155e0:	mov	r2, #110	; 0x6e
   155e4:	add	r0, sp, #4
   155e8:	bl	131ec <memset@plt>
   155ec:	movw	ip, #43904	; 0xab80
   155f0:	movt	ip, #1
   155f4:	mov	r3, #1
   155f8:	strh	r3, [sp, #4]
   155fc:	ldm	ip!, {r0, r1, r2, r3}
   15600:	ldrh	ip, [ip]
   15604:	str	r0, [sp, #6]
   15608:	mov	r0, r5
   1560c:	str	r1, [sp, #10]
   15610:	add	r1, sp, #4
   15614:	str	r2, [sp, #14]
   15618:	mov	r2, #110	; 0x6e
   1561c:	strh	ip, [sp, #22]
   15620:	str	r3, [sp, #18]
   15624:	bl	13084 <connect@plt>
   15628:	cmn	r0, #1
   1562c:	beq	1564c <xcb_depth_next@plt+0x1cec>
   15630:	mov	r0, r5
   15634:	ldr	r2, [sp, #116]	; 0x74
   15638:	ldr	r3, [r4]
   1563c:	cmp	r2, r3
   15640:	bne	15654 <xcb_depth_next@plt+0x1cf4>
   15644:	add	sp, sp, #124	; 0x7c
   15648:	pop	{r4, r5, pc}
   1564c:	mvn	r0, #0
   15650:	b	15634 <xcb_depth_next@plt+0x1cd4>
   15654:	bl	13618 <__stack_chk_fail@plt>
   15658:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1565c:	movw	r8, #54096	; 0xd350
   15660:	movt	r8, #2
   15664:	sub	sp, sp, #72	; 0x48
   15668:	movw	r2, #20448	; 0x4fe0
   1566c:	movw	r3, #21448	; 0x53c8
   15670:	ldr	r1, [r8]
   15674:	movt	r2, #1
   15678:	movt	r3, #1
   1567c:	str	r2, [sp, #40]	; 0x28
   15680:	str	r3, [sp, #48]	; 0x30
   15684:	movw	r2, #25364	; 0x6314
   15688:	mov	r3, #0
   1568c:	movt	r2, #1
   15690:	str	r1, [sp, #68]	; 0x44
   15694:	str	r2, [sp, #52]	; 0x34
   15698:	add	r2, sp, #8
   1569c:	str	r3, [sp, #44]	; 0x2c
   156a0:	str	r3, [sp, #56]	; 0x38
   156a4:	str	r3, [sp, #60]	; 0x3c
   156a8:	str	r3, [sp, #64]	; 0x40
   156ac:	str	r3, [sp, #12]
   156b0:	str	r2, [sp, #36]	; 0x24
   156b4:	bl	155a8 <xcb_depth_next@plt+0x1c48>
   156b8:	cmp	r0, #0
   156bc:	str	r0, [sp, #8]
   156c0:	blt	158ac <xcb_depth_next@plt+0x1f4c>
   156c4:	mov	r0, #65536	; 0x10000
   156c8:	movw	r4, #43924	; 0xab94
   156cc:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   156d0:	movt	r4, #1
   156d4:	add	r6, r4, #48	; 0x30
   156d8:	mov	r5, r0
   156dc:	mov	lr, r0
   156e0:	mov	ip, r4
   156e4:	add	lr, lr, #16
   156e8:	ldm	ip!, {r0, r1, r2, r3}
   156ec:	add	r4, r4, #16
   156f0:	cmp	ip, r6
   156f4:	str	r0, [lr, #-16]
   156f8:	str	r1, [lr, #-12]
   156fc:	str	r2, [lr, #-8]
   15700:	str	r3, [lr, #-4]
   15704:	bne	156e0 <xcb_depth_next@plt+0x1d80>
   15708:	ldr	r0, [sp, #8]
   1570c:	mov	r1, r5
   15710:	mov	r2, #47	; 0x2f
   15714:	bl	15148 <xcb_depth_next@plt+0x17e8>
   15718:	cmp	r0, #0
   1571c:	beq	158ac <xcb_depth_next@plt+0x1f4c>
   15720:	mov	r1, r5
   15724:	mov	r2, #65536	; 0x10000
   15728:	ldr	r0, [sp, #8]
   1572c:	bl	150d8 <xcb_depth_next@plt+0x1778>
   15730:	bl	155a8 <xcb_depth_next@plt+0x1c48>
   15734:	cmp	r0, #0
   15738:	str	r0, [sp]
   1573c:	blt	158ac <xcb_depth_next@plt+0x1f4c>
   15740:	movw	ip, #43972	; 0xabc4
   15744:	movt	ip, #1
   15748:	ldm	ip!, {r0, r1, r2, r3}
   1574c:	str	r0, [r5]
   15750:	str	r1, [r5, #4]
   15754:	str	r2, [r5, #8]
   15758:	ldm	ip!, {r0, r1, r2}
   1575c:	str	r3, [r5, #12]
   15760:	ldrb	r3, [ip]
   15764:	str	r0, [r5, #16]
   15768:	str	r1, [r5, #20]
   1576c:	mov	r1, r5
   15770:	str	r2, [r5, #24]
   15774:	mov	r2, #28
   15778:	strb	r3, [r5, #28]
   1577c:	ldr	r0, [sp]
   15780:	bl	15148 <xcb_depth_next@plt+0x17e8>
   15784:	cmp	r0, #0
   15788:	beq	158ac <xcb_depth_next@plt+0x1f4c>
   1578c:	mov	r1, #0
   15790:	mov	r0, #12288	; 0x3000
   15794:	bl	130f0 <cairo_recording_surface_create@plt>
   15798:	mov	r6, #0
   1579c:	str	r6, [sp, #32]
   157a0:	mov	r9, r6
   157a4:	mov	r7, #65536	; 0x10000
   157a8:	str	r0, [sp, #16]
   157ac:	bl	1345c <cairo_script_interpreter_create@plt>
   157b0:	add	r1, sp, #36	; 0x24
   157b4:	str	r0, [sp, #24]
   157b8:	bl	13240 <cairo_script_interpreter_install_hooks@plt>
   157bc:	ldr	r0, [sp]
   157c0:	bl	15058 <xcb_depth_next@plt+0x16f8>
   157c4:	mov	r3, #1
   157c8:	strh	r3, [sp, #4]
   157cc:	mov	r0, sp
   157d0:	mov	r1, #1
   157d4:	mvn	r2, #0
   157d8:	bl	13648 <poll@plt>
   157dc:	cmp	r0, #0
   157e0:	ble	15894 <xcb_depth_next@plt+0x1f34>
   157e4:	rsb	r4, r6, r7
   157e8:	ldr	r0, [sp]
   157ec:	add	r1, r5, r6
   157f0:	mov	r2, r4
   157f4:	bl	1330c <read@plt>
   157f8:	subs	sl, r0, #0
   157fc:	ble	1587c <xcb_depth_next@plt+0x1f1c>
   15800:	cmp	r4, sl
   15804:	beq	158c8 <xcb_depth_next@plt+0x1f68>
   15808:	add	r6, r6, sl
   1580c:	cmp	r6, #0
   15810:	ble	157e4 <xcb_depth_next@plt+0x1e84>
   15814:	sub	r4, r6, #1
   15818:	ldrb	r3, [r5, r4]
   1581c:	cmp	r3, #10
   15820:	beq	1583c <xcb_depth_next@plt+0x1edc>
   15824:	cmp	r4, #0
   15828:	beq	157e4 <xcb_depth_next@plt+0x1e84>
   1582c:	sub	r4, r4, #1
   15830:	ldrb	r3, [r5, r4]
   15834:	cmp	r3, #10
   15838:	bne	15824 <xcb_depth_next@plt+0x1ec4>
   1583c:	cmp	r4, #0
   15840:	beq	157e4 <xcb_depth_next@plt+0x1e84>
   15844:	strb	r9, [r5, r4]
   15848:	mov	r1, r5
   1584c:	ldr	r0, [sp, #24]
   15850:	mov	r2, r4
   15854:	bl	133a8 <cairo_script_interpreter_feed_string@plt>
   15858:	mvn	r3, r4
   1585c:	adds	r6, r6, r3
   15860:	beq	157e4 <xcb_depth_next@plt+0x1e84>
   15864:	add	r1, r4, #1
   15868:	mov	r0, r5
   1586c:	add	r1, r5, r1
   15870:	mov	r2, r6
   15874:	bl	13684 <memmove@plt>
   15878:	b	157e4 <xcb_depth_next@plt+0x1e84>
   1587c:	beq	15894 <xcb_depth_next@plt+0x1f34>
   15880:	bl	1390c <__errno_location@plt>
   15884:	ldr	r3, [r0]
   15888:	cmp	r3, #4
   1588c:	cmpne	r3, #11
   15890:	beq	157cc <xcb_depth_next@plt+0x1e6c>
   15894:	ldr	r0, [sp, #24]
   15898:	bl	135e8 <cairo_script_interpreter_finish@plt>
   1589c:	ldr	r0, [sp, #24]
   158a0:	bl	13234 <cairo_script_interpreter_destroy@plt>
   158a4:	ldr	r0, [sp, #16]
   158a8:	bl	13708 <cairo_surface_destroy@plt>
   158ac:	ldr	r2, [sp, #68]	; 0x44
   158b0:	mov	r0, #0
   158b4:	ldr	r3, [r8]
   158b8:	cmp	r2, r3
   158bc:	bne	158e0 <xcb_depth_next@plt+0x1f80>
   158c0:	add	sp, sp, #72	; 0x48
   158c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158c8:	lsl	r7, r7, #1
   158cc:	mov	r0, r5
   158d0:	mov	r1, r7
   158d4:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   158d8:	mov	r5, r0
   158dc:	b	15808 <xcb_depth_next@plt+0x1ea8>
   158e0:	bl	13618 <__stack_chk_fail@plt>
   158e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   158e8:	movw	r9, #54096	; 0xd350
   158ec:	movt	r9, #2
   158f0:	sub	sp, sp, #4096	; 0x1000
   158f4:	sub	sp, sp, #28
   158f8:	movw	r1, #511	; 0x1ff
   158fc:	ldr	r3, [r9]
   15900:	add	r2, sp, #8192	; 0x2000
   15904:	mov	r7, r0
   15908:	movw	r0, #44004	; 0xabe4
   1590c:	movt	r0, #1
   15910:	str	r3, [r2, #-4076]	; 0xfffff014
   15914:	bl	13048 <mkdir@plt>
   15918:	movw	r0, #44012	; 0xabec
   1591c:	movt	r0, #1
   15920:	bl	136e4 <cairo_script_create@plt>
   15924:	ldr	r1, [r7, #12]
   15928:	mov	r4, r0
   1592c:	bl	1366c <cairo_script_from_recording_surface@plt>
   15930:	mov	r0, r4
   15934:	bl	130e4 <cairo_device_destroy@plt>
   15938:	add	r1, sp, #12
   1593c:	add	r2, sp, #16
   15940:	movw	r0, #44012	; 0xabec
   15944:	mov	r3, #0
   15948:	movt	r0, #1
   1594c:	bl	136c0 <g_file_get_contents@plt>
   15950:	cmp	r0, #0
   15954:	moveq	r8, r0
   15958:	beq	15998 <xcb_depth_next@plt+0x2038>
   1595c:	add	ip, sp, #4096	; 0x1000
   15960:	movw	r4, #61428	; 0xeff4
   15964:	add	ip, ip, #24
   15968:	movt	r4, #65535	; 0xffff
   1596c:	movw	r3, #61432	; 0xeff8
   15970:	movt	r3, #65535	; 0xffff
   15974:	mov	r0, #1
   15978:	ldr	r1, [ip, r4]
   1597c:	ldr	r2, [ip, r3]
   15980:	bl	13828 <g_compute_checksum_for_data@plt>
   15984:	add	r2, sp, #4096	; 0x1000
   15988:	add	r2, r2, #24
   1598c:	mov	r8, r0
   15990:	ldr	r0, [r2, r4]
   15994:	bl	1300c <g_free@plt>
   15998:	mov	r1, #1
   1599c:	mov	r2, #4096	; 0x1000
   159a0:	str	r8, [sp]
   159a4:	movw	r3, #44040	; 0xac08
   159a8:	add	r0, sp, #20
   159ac:	movt	r3, #1
   159b0:	bl	137c8 <__sprintf_chk@plt>
   159b4:	add	r0, sp, #20
   159b8:	mov	r1, #16
   159bc:	bl	138f4 <g_file_test@plt>
   159c0:	subs	r5, r0, #0
   159c4:	beq	159e8 <xcb_depth_next@plt+0x2088>
   159c8:	add	r3, sp, #8192	; 0x2000
   159cc:	ldr	r2, [r3, #-4076]	; 0xfffff014
   159d0:	ldr	r3, [r9]
   159d4:	cmp	r2, r3
   159d8:	bne	15a8c <xcb_depth_next@plt+0x212c>
   159dc:	add	sp, sp, #4096	; 0x1000
   159e0:	add	sp, sp, #28
   159e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   159e8:	add	r1, sp, #20
   159ec:	movw	r0, #44012	; 0xabec
   159f0:	movt	r0, #1
   159f4:	bl	13138 <rename@plt>
   159f8:	mov	r2, #4096	; 0x1000
   159fc:	mov	r1, #1
   15a00:	str	r8, [sp]
   15a04:	movw	r3, #44056	; 0xac18
   15a08:	add	r0, sp, #20
   15a0c:	movt	r3, #1
   15a10:	bl	137c8 <__sprintf_chk@plt>
   15a14:	ldr	r0, [r7, #12]
   15a18:	add	r1, sp, #20
   15a1c:	bl	137a4 <cairo_surface_write_to_png@plt>
   15a20:	ldr	r2, [r7]
   15a24:	cmp	r2, #0
   15a28:	ble	159c8 <xcb_depth_next@plt+0x2068>
   15a2c:	mov	r6, r5
   15a30:	ldr	r4, [r7, #20]
   15a34:	add	r4, r4, r5
   15a38:	ldr	r3, [r4, #12]
   15a3c:	cmp	r3, #0
   15a40:	beq	15a78 <xcb_depth_next@plt+0x2118>
   15a44:	str	r8, [sp]
   15a48:	mov	r2, #4096	; 0x1000
   15a4c:	ldr	ip, [r4, #16]
   15a50:	mov	r1, #1
   15a54:	movw	r3, #44080	; 0xac30
   15a58:	add	r0, sp, #20
   15a5c:	movt	r3, #1
   15a60:	str	ip, [sp, #4]
   15a64:	bl	137c8 <__sprintf_chk@plt>
   15a68:	ldr	r0, [r4, #12]
   15a6c:	add	r1, sp, #20
   15a70:	bl	137a4 <cairo_surface_write_to_png@plt>
   15a74:	ldr	r2, [r7]
   15a78:	add	r6, r6, #1
   15a7c:	add	r5, r5, #40	; 0x28
   15a80:	cmp	r2, r6
   15a84:	bgt	15a30 <xcb_depth_next@plt+0x20d0>
   15a88:	b	159c8 <xcb_depth_next@plt+0x2068>
   15a8c:	bl	13618 <__stack_chk_fail@plt>
   15a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a94:	mov	sl, r0
   15a98:	ldr	ip, [r0]
   15a9c:	sub	sp, sp, #60	; 0x3c
   15aa0:	cmp	ip, #0
   15aa4:	ble	15ae0 <xcb_depth_next@plt+0x2180>
   15aa8:	ldr	r2, [r0, #20]
   15aac:	ldr	r3, [r2]
   15ab0:	cmp	r3, r1
   15ab4:	beq	15ae4 <xcb_depth_next@plt+0x2184>
   15ab8:	mov	r3, #0
   15abc:	b	15acc <xcb_depth_next@plt+0x216c>
   15ac0:	ldr	r0, [r2, #40]!	; 0x28
   15ac4:	cmp	r0, r1
   15ac8:	beq	15ae4 <xcb_depth_next@plt+0x2184>
   15acc:	add	r3, r3, #1
   15ad0:	cmp	r3, ip
   15ad4:	bne	15ac0 <xcb_depth_next@plt+0x2160>
   15ad8:	add	sp, sp, #60	; 0x3c
   15adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ae0:	beq	15ad8 <xcb_depth_next@plt+0x2178>
   15ae4:	ldr	r3, [sl, #8]
   15ae8:	add	r3, r3, #1
   15aec:	str	r3, [sl, #8]
   15af0:	cmp	r3, ip
   15af4:	bne	15ad8 <xcb_depth_next@plt+0x2178>
   15af8:	cmp	ip, #0
   15afc:	mov	r2, #0
   15b00:	str	r2, [sl, #28]
   15b04:	str	r2, [sl, #8]
   15b08:	ble	15bf0 <xcb_depth_next@plt+0x2290>
   15b0c:	mov	r9, r2
   15b10:	mov	fp, r2
   15b14:	ldr	r7, [sl, #20]
   15b18:	add	r8, r7, r9
   15b1c:	ldr	r0, [r8, #24]
   15b20:	cmp	r0, #0
   15b24:	beq	15d08 <xcb_depth_next@plt+0x23a8>
   15b28:	cmp	r3, #0
   15b2c:	ble	15bf0 <xcb_depth_next@plt+0x2290>
   15b30:	mov	r4, #0
   15b34:	str	fp, [sp, #20]
   15b38:	mov	r5, r4
   15b3c:	mov	fp, r9
   15b40:	b	15b60 <xcb_depth_next@plt+0x2200>
   15b44:	ldr	r3, [sl]
   15b48:	add	r5, r5, #1
   15b4c:	add	r4, r4, #40	; 0x28
   15b50:	cmp	r5, r3
   15b54:	bge	15d00 <xcb_depth_next@plt+0x23a0>
   15b58:	ldr	r7, [sl, #20]
   15b5c:	ldr	r0, [r8, #24]
   15b60:	add	r7, r7, r4
   15b64:	ldr	r1, [r7, #16]
   15b68:	bl	138dc <strcmp@plt>
   15b6c:	cmp	r0, #0
   15b70:	bne	15b44 <xcb_depth_next@plt+0x21e4>
   15b74:	ldr	r6, [r8, #12]
   15b78:	ldr	r7, [r7, #12]
   15b7c:	mov	r0, r6
   15b80:	bl	13498 <cairo_surface_status@plt>
   15b84:	cmp	r0, #0
   15b88:	beq	15c04 <xcb_depth_next@plt+0x22a4>
   15b8c:	mov	r0, sl
   15b90:	bl	158e4 <xcb_depth_next@plt+0x1f84>
   15b94:	ldr	r3, [sl]
   15b98:	cmp	r3, #0
   15b9c:	addgt	r9, sl, #16
   15ba0:	movgt	r4, #0
   15ba4:	movgt	r6, r4
   15ba8:	movgt	r8, r4
   15bac:	ble	15bf0 <xcb_depth_next@plt+0x2290>
   15bb0:	ldr	r7, [sl, #20]
   15bb4:	add	r6, r6, #1
   15bb8:	add	r5, r7, r4
   15bbc:	ldr	r0, [r5, #12]
   15bc0:	bl	13708 <cairo_surface_destroy@plt>
   15bc4:	str	r8, [r5, #12]
   15bc8:	mov	r1, r9
   15bcc:	ldr	r0, [r7, r4]
   15bd0:	mov	r2, #4
   15bd4:	add	r4, r4, #40	; 0x28
   15bd8:	bl	15148 <xcb_depth_next@plt+0x17e8>
   15bdc:	cmp	r0, #0
   15be0:	strne	r8, [r5, #8]
   15be4:	ldr	r3, [sl]
   15be8:	cmp	r6, r3
   15bec:	blt	15bb0 <xcb_depth_next@plt+0x2250>
   15bf0:	mov	r3, #0
   15bf4:	str	r3, [sl, #12]
   15bf8:	str	r3, [sl, #16]
   15bfc:	add	sp, sp, #60	; 0x3c
   15c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c04:	mov	r0, r7
   15c08:	bl	13498 <cairo_surface_status@plt>
   15c0c:	cmp	r0, #0
   15c10:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15c14:	mov	r0, r6
   15c18:	bl	13894 <cairo_surface_get_type@plt>
   15c1c:	mov	r9, r0
   15c20:	mov	r0, r7
   15c24:	bl	13894 <cairo_surface_get_type@plt>
   15c28:	cmp	r9, r0
   15c2c:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15c30:	mov	r0, r6
   15c34:	bl	134f8 <cairo_image_surface_get_format@plt>
   15c38:	mov	r9, r0
   15c3c:	mov	r0, r7
   15c40:	bl	134f8 <cairo_image_surface_get_format@plt>
   15c44:	cmp	r9, r0
   15c48:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15c4c:	mov	r0, r6
   15c50:	bl	1378c <cairo_image_surface_get_width@plt>
   15c54:	mov	r9, r0
   15c58:	mov	r0, r7
   15c5c:	bl	1378c <cairo_image_surface_get_width@plt>
   15c60:	cmp	r9, r0
   15c64:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15c68:	mov	r0, r6
   15c6c:	bl	1360c <cairo_image_surface_get_height@plt>
   15c70:	mov	r9, r0
   15c74:	mov	r0, r7
   15c78:	bl	1360c <cairo_image_surface_get_height@plt>
   15c7c:	cmp	r9, r0
   15c80:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15c84:	mov	r0, r6
   15c88:	bl	138c4 <cairo_image_surface_get_stride@plt>
   15c8c:	mov	r9, r0
   15c90:	mov	r0, r7
   15c94:	bl	138c4 <cairo_image_surface_get_stride@plt>
   15c98:	cmp	r9, r0
   15c9c:	bne	15b8c <xcb_depth_next@plt+0x222c>
   15ca0:	mov	r0, r6
   15ca4:	bl	1378c <cairo_image_surface_get_width@plt>
   15ca8:	str	r0, [sp, #24]
   15cac:	mov	r0, r6
   15cb0:	bl	1360c <cairo_image_surface_get_height@plt>
   15cb4:	str	r0, [sp, #32]
   15cb8:	mov	r0, r6
   15cbc:	bl	138c4 <cairo_image_surface_get_stride@plt>
   15cc0:	str	r0, [sp, #36]	; 0x24
   15cc4:	mov	r0, r6
   15cc8:	bl	134ec <cairo_image_surface_get_data@plt>
   15ccc:	mov	r9, r0
   15cd0:	mov	r0, r7
   15cd4:	bl	134ec <cairo_image_surface_get_data@plt>
   15cd8:	str	r0, [sp, #28]
   15cdc:	mov	r0, r6
   15ce0:	bl	134f8 <cairo_image_surface_get_format@plt>
   15ce4:	cmp	r0, #3
   15ce8:	ldrls	pc, [pc, r0, lsl #2]
   15cec:	b	15b44 <xcb_depth_next@plt+0x21e4>
   15cf0:	andeq	r5, r1, r4, lsl lr
   15cf4:	andeq	r5, r1, r8, ror #31
   15cf8:	andeq	r5, r1, ip, lsl sp
   15cfc:	andeq	r5, r1, ip, ror #30
   15d00:	mov	r9, fp
   15d04:	ldr	fp, [sp, #20]
   15d08:	add	fp, fp, #1
   15d0c:	add	r9, r9, #40	; 0x28
   15d10:	cmp	fp, r3
   15d14:	blt	15b14 <xcb_depth_next@plt+0x21b4>
   15d18:	b	15b98 <xcb_depth_next@plt+0x2238>
   15d1c:	ldr	ip, [sp, #32]
   15d20:	cmp	ip, #0
   15d24:	ble	15b44 <xcb_depth_next@plt+0x21e4>
   15d28:	mov	ip, sl
   15d2c:	mov	r7, #0
   15d30:	mov	sl, r4
   15d34:	ldr	r3, [sp, #24]
   15d38:	cmp	r3, #0
   15d3c:	ble	15de4 <xcb_depth_next@plt+0x2484>
   15d40:	mov	r6, #0
   15d44:	ldr	r1, [sp, #28]
   15d48:	ldrb	r2, [r9, r6]
   15d4c:	ldrb	r3, [r1, r6]
   15d50:	cmp	r2, r3
   15d54:	rsb	r4, r3, r2
   15d58:	beq	15dd4 <xcb_depth_next@plt+0x2474>
   15d5c:	cmp	r4, #0
   15d60:	rsblt	r4, r4, #0
   15d64:	mov	r0, r6
   15d68:	cmp	r4, #1
   15d6c:	mov	r1, r7
   15d70:	mov	r2, r9
   15d74:	ldr	r3, [sp, #24]
   15d78:	bls	15dd4 <xcb_depth_next@plt+0x2474>
   15d7c:	ldr	lr, [sp, #32]
   15d80:	str	ip, [sp, #16]
   15d84:	str	lr, [sp]
   15d88:	ldr	lr, [sp, #36]	; 0x24
   15d8c:	str	lr, [sp, #4]
   15d90:	bl	13a6c <xcb_depth_next@plt+0x10c>
   15d94:	ldr	r1, [sp, #32]
   15d98:	ldr	r2, [sp, #36]	; 0x24
   15d9c:	ldr	r3, [sp, #24]
   15da0:	str	r1, [sp]
   15da4:	mov	r1, r7
   15da8:	str	r2, [sp, #4]
   15dac:	ldr	r2, [sp, #28]
   15db0:	mov	r4, r0
   15db4:	mov	r0, r6
   15db8:	bl	13a6c <xcb_depth_next@plt+0x10c>
   15dbc:	ldr	ip, [sp, #16]
   15dc0:	rsb	r0, r0, r4
   15dc4:	eor	r3, r0, r0, asr #31
   15dc8:	sub	r3, r3, r0, asr #31
   15dcc:	cmp	r3, #1
   15dd0:	bhi	16134 <xcb_depth_next@plt+0x27d4>
   15dd4:	ldr	r2, [sp, #24]
   15dd8:	add	r6, r6, #1
   15ddc:	cmp	r6, r2
   15de0:	bne	15d44 <xcb_depth_next@plt+0x23e4>
   15de4:	ldr	r1, [sp, #32]
   15de8:	add	r7, r7, #1
   15dec:	ldr	r3, [sp, #36]	; 0x24
   15df0:	ldr	r2, [sp, #28]
   15df4:	cmp	r7, r1
   15df8:	add	r9, r9, r3
   15dfc:	add	r2, r2, r3
   15e00:	str	r2, [sp, #28]
   15e04:	bne	15d34 <xcb_depth_next@plt+0x23d4>
   15e08:	mov	r4, sl
   15e0c:	mov	sl, ip
   15e10:	b	15b44 <xcb_depth_next@plt+0x21e4>
   15e14:	ldr	ip, [sp, #32]
   15e18:	cmp	ip, #0
   15e1c:	ble	15b44 <xcb_depth_next@plt+0x21e4>
   15e20:	mov	r3, #0
   15e24:	str	r4, [sp, #52]	; 0x34
   15e28:	ldr	r4, [sp, #28]
   15e2c:	str	sl, [sp, #28]
   15e30:	mov	sl, r3
   15e34:	str	r8, [sp, #40]	; 0x28
   15e38:	str	fp, [sp, #44]	; 0x2c
   15e3c:	str	r5, [sp, #48]	; 0x30
   15e40:	ldr	ip, [sp, #24]
   15e44:	cmp	ip, #0
   15e48:	ble	15f34 <xcb_depth_next@plt+0x25d4>
   15e4c:	mov	r5, #0
   15e50:	mov	r7, r5
   15e54:	ldr	ip, [r9, r5]
   15e58:	ldr	r8, [r4, r5]
   15e5c:	cmp	ip, r8
   15e60:	movne	r6, #0
   15e64:	bne	15e80 <xcb_depth_next@plt+0x2520>
   15e68:	b	15f20 <xcb_depth_next@plt+0x25c0>
   15e6c:	add	r6, r6, #1
   15e70:	cmp	r6, #4
   15e74:	beq	15f20 <xcb_depth_next@plt+0x25c0>
   15e78:	ldr	ip, [r9, r5]
   15e7c:	ldr	r8, [r4, r5]
   15e80:	lsl	fp, r6, #3
   15e84:	mov	r1, sl
   15e88:	lsr	ip, ip, fp
   15e8c:	lsr	r8, r8, fp
   15e90:	mov	r2, r6
   15e94:	mov	r3, r9
   15e98:	uxtb	ip, ip
   15e9c:	uxtb	r8, r8
   15ea0:	rsb	ip, r8, ip
   15ea4:	mov	r0, r7
   15ea8:	cmp	ip, #0
   15eac:	rsblt	ip, ip, #0
   15eb0:	cmp	ip, #1
   15eb4:	bls	15e6c <xcb_depth_next@plt+0x250c>
   15eb8:	ldr	ip, [sp, #24]
   15ebc:	str	ip, [sp]
   15ec0:	ldr	ip, [sp, #32]
   15ec4:	str	ip, [sp, #4]
   15ec8:	ldr	ip, [sp, #36]	; 0x24
   15ecc:	str	ip, [sp, #8]
   15ed0:	bl	13970 <xcb_depth_next@plt+0x10>
   15ed4:	ldr	ip, [sp, #24]
   15ed8:	mov	r3, r4
   15edc:	mov	r1, sl
   15ee0:	mov	r2, r6
   15ee4:	str	ip, [sp]
   15ee8:	ldr	ip, [sp, #32]
   15eec:	str	ip, [sp, #4]
   15ef0:	ldr	ip, [sp, #36]	; 0x24
   15ef4:	str	ip, [sp, #8]
   15ef8:	mov	r8, r0
   15efc:	mov	r0, r7
   15f00:	bl	13970 <xcb_depth_next@plt+0x10>
   15f04:	rsb	r0, r0, r8
   15f08:	eor	r3, r0, r0, asr #31
   15f0c:	sub	r3, r3, r0, asr #31
   15f10:	cmp	r3, #1
   15f14:	bls	15e6c <xcb_depth_next@plt+0x250c>
   15f18:	ldr	sl, [sp, #28]
   15f1c:	b	15b8c <xcb_depth_next@plt+0x222c>
   15f20:	ldr	ip, [sp, #24]
   15f24:	add	r7, r7, #1
   15f28:	add	r5, r5, #4
   15f2c:	cmp	r7, ip
   15f30:	bne	15e54 <xcb_depth_next@plt+0x24f4>
   15f34:	ldr	ip, [sp, #36]	; 0x24
   15f38:	add	sl, sl, #1
   15f3c:	add	r9, r9, ip
   15f40:	ldr	ip, [sp, #32]
   15f44:	cmp	sl, ip
   15f48:	ldr	ip, [sp, #36]	; 0x24
   15f4c:	add	r4, r4, ip
   15f50:	bne	15e40 <xcb_depth_next@plt+0x24e0>
   15f54:	ldr	r8, [sp, #40]	; 0x28
   15f58:	ldr	fp, [sp, #44]	; 0x2c
   15f5c:	ldr	r5, [sp, #48]	; 0x30
   15f60:	ldr	r4, [sp, #52]	; 0x34
   15f64:	ldr	sl, [sp, #28]
   15f68:	b	15b44 <xcb_depth_next@plt+0x21e4>
   15f6c:	ldr	ip, [sp, #24]
   15f70:	cmp	ip, #0
   15f74:	add	r7, ip, #7
   15f78:	movge	r7, ip
   15f7c:	ldr	ip, [sp, #32]
   15f80:	asr	r7, r7, #3
   15f84:	cmp	ip, #0
   15f88:	ble	15b44 <xcb_depth_next@plt+0x21e4>
   15f8c:	mov	r3, sl
   15f90:	mov	r6, #0
   15f94:	mov	sl, r4
   15f98:	mov	r4, r3
   15f9c:	ldr	r1, [sp, #28]
   15fa0:	mov	r0, r9
   15fa4:	mov	r2, r7
   15fa8:	add	r6, r6, #1
   15fac:	bl	130b4 <memcmp@plt>
   15fb0:	ldr	ip, [sp, #36]	; 0x24
   15fb4:	ldr	r1, [sp, #28]
   15fb8:	add	r9, r9, ip
   15fbc:	add	r1, r1, ip
   15fc0:	str	r1, [sp, #28]
   15fc4:	cmp	r0, #0
   15fc8:	bne	1613c <xcb_depth_next@plt+0x27dc>
   15fcc:	ldr	ip, [sp, #32]
   15fd0:	cmp	r6, ip
   15fd4:	bne	15f9c <xcb_depth_next@plt+0x263c>
   15fd8:	mov	r3, r4
   15fdc:	mov	r4, sl
   15fe0:	mov	sl, r3
   15fe4:	b	15b44 <xcb_depth_next@plt+0x21e4>
   15fe8:	ldr	ip, [sp, #32]
   15fec:	cmp	ip, #0
   15ff0:	ble	15b44 <xcb_depth_next@plt+0x21e4>
   15ff4:	mov	r3, #0
   15ff8:	str	r4, [sp, #52]	; 0x34
   15ffc:	ldr	r4, [sp, #28]
   16000:	str	sl, [sp, #28]
   16004:	mov	sl, r3
   16008:	str	r8, [sp, #40]	; 0x28
   1600c:	str	fp, [sp, #44]	; 0x2c
   16010:	str	r5, [sp, #48]	; 0x30
   16014:	ldr	ip, [sp, #24]
   16018:	cmp	ip, #0
   1601c:	ble	16110 <xcb_depth_next@plt+0x27b0>
   16020:	mov	r5, #0
   16024:	mov	r7, r5
   16028:	b	16040 <xcb_depth_next@plt+0x26e0>
   1602c:	ldr	ip, [sp, #24]
   16030:	add	r7, r7, #1
   16034:	add	r5, r5, #4
   16038:	cmp	r7, ip
   1603c:	beq	16110 <xcb_depth_next@plt+0x27b0>
   16040:	ldr	ip, [r9, r5]
   16044:	ldr	r8, [r4, r5]
   16048:	eor	r3, r8, ip
   1604c:	bic	r3, r3, #-16777216	; 0xff000000
   16050:	cmp	r3, #0
   16054:	beq	1602c <xcb_depth_next@plt+0x26cc>
   16058:	mov	r6, #0
   1605c:	b	16074 <xcb_depth_next@plt+0x2714>
   16060:	add	r6, r6, #1
   16064:	cmp	r6, #3
   16068:	beq	1602c <xcb_depth_next@plt+0x26cc>
   1606c:	ldr	ip, [r9, r5]
   16070:	ldr	r8, [r4, r5]
   16074:	lsl	fp, r6, #3
   16078:	mov	r1, sl
   1607c:	lsr	ip, ip, fp
   16080:	lsr	r8, r8, fp
   16084:	mov	r2, r6
   16088:	mov	r3, r9
   1608c:	uxtb	ip, ip
   16090:	uxtb	r8, r8
   16094:	rsb	ip, r8, ip
   16098:	mov	r0, r7
   1609c:	cmp	ip, #0
   160a0:	rsblt	ip, ip, #0
   160a4:	cmp	ip, #1
   160a8:	bls	16060 <xcb_depth_next@plt+0x2700>
   160ac:	ldr	ip, [sp, #24]
   160b0:	str	ip, [sp]
   160b4:	ldr	ip, [sp, #32]
   160b8:	str	ip, [sp, #4]
   160bc:	ldr	ip, [sp, #36]	; 0x24
   160c0:	str	ip, [sp, #8]
   160c4:	bl	13970 <xcb_depth_next@plt+0x10>
   160c8:	ldr	ip, [sp, #24]
   160cc:	mov	r3, r4
   160d0:	mov	r1, sl
   160d4:	mov	r2, r6
   160d8:	str	ip, [sp]
   160dc:	ldr	ip, [sp, #32]
   160e0:	str	ip, [sp, #4]
   160e4:	ldr	ip, [sp, #36]	; 0x24
   160e8:	str	ip, [sp, #8]
   160ec:	mov	r8, r0
   160f0:	mov	r0, r7
   160f4:	bl	13970 <xcb_depth_next@plt+0x10>
   160f8:	rsb	r0, r0, r8
   160fc:	eor	r3, r0, r0, asr #31
   16100:	sub	r3, r3, r0, asr #31
   16104:	cmp	r3, #1
   16108:	bls	16060 <xcb_depth_next@plt+0x2700>
   1610c:	b	15f18 <xcb_depth_next@plt+0x25b8>
   16110:	ldr	ip, [sp, #36]	; 0x24
   16114:	add	sl, sl, #1
   16118:	add	r9, r9, ip
   1611c:	ldr	ip, [sp, #32]
   16120:	cmp	sl, ip
   16124:	ldr	ip, [sp, #36]	; 0x24
   16128:	add	r4, r4, ip
   1612c:	bne	16014 <xcb_depth_next@plt+0x26b4>
   16130:	b	15f54 <xcb_depth_next@plt+0x25f4>
   16134:	mov	sl, ip
   16138:	b	15b8c <xcb_depth_next@plt+0x222c>
   1613c:	mov	sl, r4
   16140:	b	15b8c <xcb_depth_next@plt+0x222c>
   16144:	push	{r3, lr}
   16148:	mov	r2, #4
   1614c:	mov	r3, #256	; 0x100
   16150:	bl	13144 <recv@plt>
   16154:	subs	r3, r0, #4
   16158:	rsbs	r0, r3, #0
   1615c:	adcs	r0, r0, r3
   16160:	pop	{r3, pc}
   16164:	push	{r4, r5, r6, lr}
   16168:	movw	r4, #54096	; 0xd350
   1616c:	movt	r4, #2
   16170:	sub	sp, sp, #1056	; 0x420
   16174:	cmn	r3, #1
   16178:	mov	r5, r0
   1617c:	ldr	ip, [r4]
   16180:	mvn	r0, #0
   16184:	mov	r6, r1
   16188:	str	r0, [sp, #24]
   1618c:	str	ip, [sp, #1052]	; 0x41c
   16190:	beq	1621c <xcb_depth_next@plt+0x28bc>
   16194:	ldr	r2, [r2]
   16198:	add	r0, sp, #28
   1619c:	ldr	r1, [sp, #1072]	; 0x430
   161a0:	str	r3, [sp, #4]
   161a4:	movw	r3, #44144	; 0xac70
   161a8:	str	r2, [sp]
   161ac:	movt	r3, #1
   161b0:	ldr	r2, [sp, #1076]	; 0x434
   161b4:	str	r1, [sp, #8]
   161b8:	ldr	r1, [sp, #1080]	; 0x438
   161bc:	str	r2, [sp, #12]
   161c0:	mov	r2, #1024	; 0x400
   161c4:	str	r1, [sp, #16]
   161c8:	mov	r1, #1
   161cc:	bl	137c8 <__sprintf_chk@plt>
   161d0:	add	r1, sp, #28
   161d4:	mov	r2, r0
   161d8:	ldr	r0, [r5]
   161dc:	bl	15148 <xcb_depth_next@plt+0x17e8>
   161e0:	add	r1, sp, #24
   161e4:	ldr	r0, [r5]
   161e8:	bl	16144 <xcb_depth_next@plt+0x27e4>
   161ec:	ldr	r3, [sp, #24]
   161f0:	ldr	r2, [sp, #1052]	; 0x41c
   161f4:	cmn	r3, #1
   161f8:	ldrne	r0, [r6]
   161fc:	moveq	r0, #0
   16200:	addne	r0, r0, r3
   16204:	ldr	r3, [r4]
   16208:	cmp	r2, r3
   1620c:	bne	16218 <xcb_depth_next@plt+0x28b8>
   16210:	add	sp, sp, #1056	; 0x420
   16214:	pop	{r4, r5, r6, pc}
   16218:	bl	13618 <__stack_chk_fail@plt>
   1621c:	movw	r0, #44100	; 0xac44
   16220:	movw	r1, #44132	; 0xac64
   16224:	movw	r3, #43824	; 0xab30
   16228:	movt	r0, #1
   1622c:	movt	r1, #1
   16230:	movw	r2, #854	; 0x356
   16234:	movt	r3, #1
   16238:	bl	13264 <__assert_fail@plt>
   1623c:	push	{r4, r5, r6, r7, lr}
   16240:	movw	r4, #54096	; 0xd350
   16244:	movt	r4, #2
   16248:	sub	sp, sp, #1040	; 0x410
   1624c:	sub	sp, sp, #4
   16250:	mov	r7, r0
   16254:	ldr	r3, [r4]
   16258:	mov	r0, r2
   1625c:	mov	r5, r2
   16260:	mov	r6, r1
   16264:	str	r3, [sp, #1036]	; 0x40c
   16268:	bl	13894 <cairo_surface_get_type@plt>
   1626c:	cmp	r0, #16
   16270:	bne	162e8 <xcb_depth_next@plt+0x2988>
   16274:	ldr	r2, [r6]
   16278:	mov	r1, #1
   1627c:	str	r5, [sp]
   16280:	movw	r3, #44232	; 0xacc8
   16284:	add	r0, sp, #12
   16288:	movt	r3, #1
   1628c:	str	r2, [sp, #4]
   16290:	mov	r2, #1024	; 0x400
   16294:	bl	137c8 <__sprintf_chk@plt>
   16298:	add	r1, sp, #12
   1629c:	mov	r2, r0
   162a0:	ldr	r0, [r7]
   162a4:	bl	15148 <xcb_depth_next@plt+0x17e8>
   162a8:	add	r1, sp, #8
   162ac:	ldr	r0, [r7]
   162b0:	mov	r3, #0
   162b4:	str	r3, [sp, #8]
   162b8:	bl	16144 <xcb_depth_next@plt+0x27e4>
   162bc:	ldr	r2, [r6]
   162c0:	ldr	r3, [sp, #8]
   162c4:	cmp	r2, r3
   162c8:	bne	16308 <xcb_depth_next@plt+0x29a8>
   162cc:	ldr	r2, [sp, #1036]	; 0x40c
   162d0:	ldr	r3, [r4]
   162d4:	cmp	r2, r3
   162d8:	bne	16304 <xcb_depth_next@plt+0x29a4>
   162dc:	add	sp, sp, #1040	; 0x410
   162e0:	add	sp, sp, #4
   162e4:	pop	{r4, r5, r6, r7, pc}
   162e8:	movw	r0, #44168	; 0xac88
   162ec:	movw	r1, #44132	; 0xac64
   162f0:	movt	r0, #1
   162f4:	movt	r1, #1
   162f8:	movw	r2, #970	; 0x3ca
   162fc:	ldr	r3, [pc, #12]	; 16310 <xcb_depth_next@plt+0x29b0>
   16300:	bl	13264 <__assert_fail@plt>
   16304:	bl	13618 <__stack_chk_fail@plt>
   16308:	mvn	r0, #0
   1630c:	bl	138e8 <exit@plt>
   16310:	andeq	sl, r1, r0, asr #22
   16314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16318:	movw	r5, #54096	; 0xd350
   1631c:	movt	r5, #2
   16320:	ldr	r3, [r0, #20]
   16324:	sub	sp, sp, #40	; 0x28
   16328:	mov	r6, r0
   1632c:	ldr	r2, [r5]
   16330:	cmp	r3, #0
   16334:	str	r2, [sp, #36]	; 0x24
   16338:	beq	16370 <xcb_depth_next@plt+0x2a10>
   1633c:	ldr	r2, [r3, #8]
   16340:	cmp	r2, r1
   16344:	addeq	r9, r0, #20
   16348:	moveq	r4, r3
   1634c:	bne	16364 <xcb_depth_next@plt+0x2a04>
   16350:	b	1638c <xcb_depth_next@plt+0x2a2c>
   16354:	ldr	r2, [r4, #8]
   16358:	cmp	r2, r1
   1635c:	beq	16388 <xcb_depth_next@plt+0x2a28>
   16360:	mov	r3, r4
   16364:	ldr	r4, [r3]
   16368:	cmp	r4, #0
   1636c:	bne	16354 <xcb_depth_next@plt+0x29f4>
   16370:	ldr	r2, [sp, #36]	; 0x24
   16374:	ldr	r3, [r5]
   16378:	cmp	r2, r3
   1637c:	bne	164f4 <xcb_depth_next@plt+0x2b94>
   16380:	add	sp, sp, #40	; 0x28
   16384:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16388:	mov	r9, r3
   1638c:	ldr	r0, [r4, #12]
   16390:	bl	13498 <cairo_surface_status@plt>
   16394:	cmp	r0, #0
   16398:	bne	164f8 <xcb_depth_next@plt+0x2b98>
   1639c:	ldr	r3, [r6, #4]
   163a0:	cmp	r3, #0
   163a4:	beq	164b8 <xcb_depth_next@plt+0x2b58>
   163a8:	ldr	r8, [r4, #12]
   163ac:	mvn	r0, #0
   163b0:	add	r1, sp, #24
   163b4:	str	r0, [sp, #20]
   163b8:	add	r2, sp, #28
   163bc:	add	r3, sp, #20
   163c0:	mov	r0, r8
   163c4:	bl	15288 <xcb_depth_next@plt+0x1928>
   163c8:	ldr	r0, [sp, #20]
   163cc:	cmn	r0, #1
   163d0:	beq	164cc <xcb_depth_next@plt+0x2b6c>
   163d4:	ldr	r1, [sp, #24]
   163d8:	bl	13594 <cairo_format_stride_for_width@plt>
   163dc:	ldr	lr, [sp, #24]
   163e0:	ldr	ip, [sp, #28]
   163e4:	add	r1, r6, #12
   163e8:	ldr	r3, [sp, #20]
   163ec:	add	r2, r4, #4
   163f0:	str	lr, [sp]
   163f4:	str	ip, [sp, #4]
   163f8:	mov	r7, r0
   163fc:	mov	r0, r6
   16400:	str	r7, [sp, #8]
   16404:	bl	16164 <xcb_depth_next@plt+0x2804>
   16408:	cmp	r0, #0
   1640c:	beq	164f8 <xcb_depth_next@plt+0x2b98>
   16410:	add	r1, sp, #20
   16414:	ldm	r1, {r1, r2, r3}
   16418:	str	r7, [sp]
   1641c:	bl	135c4 <cairo_image_surface_create_for_data@plt>
   16420:	mov	sl, r0
   16424:	bl	13450 <cairo_create@plt>
   16428:	mov	r7, r0
   1642c:	mov	r0, sl
   16430:	bl	13708 <cairo_surface_destroy@plt>
   16434:	mov	r0, r7
   16438:	mov	r1, #1
   1643c:	bl	13054 <cairo_set_operator@plt>
   16440:	vldr	d0, [pc, #184]	; 16500 <xcb_depth_next@plt+0x2ba0>
   16444:	mov	r1, r8
   16448:	vmov.f64	d1, d0
   1644c:	mov	r0, r7
   16450:	bl	131bc <cairo_set_source_surface@plt>
   16454:	mov	r0, r7
   16458:	bl	132dc <cairo_paint@plt>
   1645c:	mov	r0, r7
   16460:	bl	13114 <cairo_destroy@plt>
   16464:	mov	r2, #10
   16468:	movw	r1, #44252	; 0xacdc
   1646c:	ldr	r0, [r6]
   16470:	movt	r1, #1
   16474:	bl	15148 <xcb_depth_next@plt+0x17e8>
   16478:	add	r1, sp, #40	; 0x28
   1647c:	mov	r3, #0
   16480:	ldr	r0, [r6]
   16484:	str	r3, [r1, #-8]!
   16488:	bl	16144 <xcb_depth_next@plt+0x27e4>
   1648c:	ldr	r2, [r4, #4]
   16490:	ldr	r3, [sp, #32]
   16494:	cmp	r2, r3
   16498:	bne	164f8 <xcb_depth_next@plt+0x2b98>
   1649c:	ldr	r0, [r4, #16]
   164a0:	bl	13708 <cairo_surface_destroy@plt>
   164a4:	ldr	r3, [r4]
   164a8:	mov	r0, r4
   164ac:	str	r3, [r9]
   164b0:	bl	13300 <free@plt>
   164b4:	b	16370 <xcb_depth_next@plt+0x2a10>
   164b8:	mov	r0, r6
   164bc:	add	r1, r4, #4
   164c0:	ldr	r2, [r4, #12]
   164c4:	bl	1623c <xcb_depth_next@plt+0x28dc>
   164c8:	b	1649c <xcb_depth_next@plt+0x2b3c>
   164cc:	mov	r0, r8
   164d0:	bl	131b0 <cairo_surface_get_content@plt>
   164d4:	cmp	r0, #4096	; 0x1000
   164d8:	moveq	r0, #1
   164dc:	beq	164ec <xcb_depth_next@plt+0x2b8c>
   164e0:	cmp	r0, #8192	; 0x2000
   164e4:	moveq	r0, #2
   164e8:	movne	r0, #0
   164ec:	str	r0, [sp, #20]
   164f0:	b	163d4 <xcb_depth_next@plt+0x2a74>
   164f4:	bl	13618 <__stack_chk_fail@plt>
   164f8:	mvn	r0, #0
   164fc:	bl	138e8 <exit@plt>
	...
   16508:	push	{r4, lr}
   1650c:	subs	r3, r0, #0
   16510:	ldr	r4, [pc, #64]	; 16558 <xcb_depth_next@plt+0x2bf8>
   16514:	add	r4, pc, r4
   16518:	beq	16550 <xcb_depth_next@plt+0x2bf0>
   1651c:	bl	135f4 <malloc@plt>
   16520:	cmp	r0, #0
   16524:	popne	{r4, pc}
   16528:	ldr	r3, [pc, #44]	; 1655c <xcb_depth_next@plt+0x2bfc>
   1652c:	mov	r1, #1
   16530:	ldr	r0, [pc, #40]	; 16560 <xcb_depth_next@plt+0x2c00>
   16534:	mov	r2, #31
   16538:	ldr	r3, [r4, r3]
   1653c:	add	r0, pc, r0
   16540:	ldr	r3, [r3]
   16544:	bl	13570 <fwrite@plt>
   16548:	mov	r0, #1
   1654c:	bl	138e8 <exit@plt>
   16550:	mov	r0, r3
   16554:	pop	{r4, pc}
   16558:	andeq	r6, r1, r4, ror #21
   1655c:	andeq	r0, r0, r4, asr #6
   16560:	andeq	r4, r0, r4, asr sl
   16564:	push	{r4, lr}
   16568:	cmp	r1, #0
   1656c:	cmpne	r0, #0
   16570:	ldr	r4, [pc, #64]	; 165b8 <xcb_depth_next@plt+0x2c58>
   16574:	add	r4, pc, r4
   16578:	beq	165b0 <xcb_depth_next@plt+0x2c50>
   1657c:	bl	131a4 <calloc@plt>
   16580:	cmp	r0, #0
   16584:	popne	{r4, pc}
   16588:	ldr	r3, [pc, #44]	; 165bc <xcb_depth_next@plt+0x2c5c>
   1658c:	mov	r1, #1
   16590:	ldr	r0, [pc, #40]	; 165c0 <xcb_depth_next@plt+0x2c60>
   16594:	mov	r2, #30
   16598:	ldr	r3, [r4, r3]
   1659c:	add	r0, pc, r0
   165a0:	ldr	r3, [r3]
   165a4:	bl	13570 <fwrite@plt>
   165a8:	mov	r0, #1
   165ac:	bl	138e8 <exit@plt>
   165b0:	mov	r0, #0
   165b4:	pop	{r4, pc}
   165b8:	andeq	r6, r1, r4, lsl #21
   165bc:	andeq	r0, r0, r4, asr #6
   165c0:	andeq	r4, r0, r4, lsl sl
   165c4:	push	{r4, lr}
   165c8:	mov	r4, r1
   165cc:	bl	13840 <realloc@plt>
   165d0:	ldr	r3, [pc, #64]	; 16618 <xcb_depth_next@plt+0x2cb8>
   165d4:	add	r3, pc, r3
   165d8:	rsbs	r2, r0, #1
   165dc:	movcc	r2, #0
   165e0:	cmp	r4, #0
   165e4:	moveq	r2, #0
   165e8:	cmp	r2, #0
   165ec:	popeq	{r4, pc}
   165f0:	ldr	ip, [pc, #36]	; 1661c <xcb_depth_next@plt+0x2cbc>
   165f4:	mov	r1, #1
   165f8:	ldr	r0, [pc, #32]	; 16620 <xcb_depth_next@plt+0x2cc0>
   165fc:	mov	r2, #30
   16600:	ldr	r3, [r3, ip]
   16604:	add	r0, pc, r0
   16608:	ldr	r3, [r3]
   1660c:	bl	13570 <fwrite@plt>
   16610:	mov	r0, #1
   16614:	bl	138e8 <exit@plt>
   16618:	andeq	r6, r1, r4, lsr #20
   1661c:	andeq	r0, r0, r4, asr #6
   16620:	andeq	r4, r0, ip, lsr #19
   16624:	push	{r1, r2, r3}
   16628:	mov	r1, #1024	; 0x400
   1662c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16630:	sub	sp, sp, #1040	; 0x410
   16634:	ldr	r7, [pc, #316]	; 16778 <xcb_depth_next@plt+0x2e18>
   16638:	add	r5, sp, #1072	; 0x430
   1663c:	ldr	r2, [pc, #312]	; 1677c <xcb_depth_next@plt+0x2e1c>
   16640:	add	r5, r5, #8
   16644:	add	r7, pc, r7
   16648:	ldr	sl, [sp, #1076]	; 0x434
   1664c:	add	fp, sp, #12
   16650:	mov	r9, r0
   16654:	ldr	r8, [r7, r2]
   16658:	mov	r3, r1
   1665c:	str	sl, [sp]
   16660:	mov	r0, fp
   16664:	str	r5, [sp, #4]
   16668:	mov	r2, #1
   1666c:	ldr	ip, [r8]
   16670:	str	r5, [sp, #8]
   16674:	str	ip, [sp, #1036]	; 0x40c
   16678:	bl	134a4 <__vsnprintf_chk@plt>
   1667c:	subs	r4, r0, #0
   16680:	blt	1673c <xcb_depth_next@plt+0x2ddc>
   16684:	add	r6, r4, #4
   16688:	bic	r6, r6, #3
   1668c:	mov	r0, r6
   16690:	bl	135f4 <malloc@plt>
   16694:	cmp	r0, #0
   16698:	str	r0, [r9]
   1669c:	beq	16714 <xcb_depth_next@plt+0x2db4>
   166a0:	cmp	r4, #1024	; 0x400
   166a4:	bcc	16704 <xcb_depth_next@plt+0x2da4>
   166a8:	str	sl, [sp]
   166ac:	mov	r1, r6
   166b0:	str	r5, [sp, #4]
   166b4:	mov	r2, #1
   166b8:	mvn	r3, #0
   166bc:	str	r5, [sp, #8]
   166c0:	bl	134a4 <__vsnprintf_chk@plt>
   166c4:	cmp	r6, r0
   166c8:	mov	r4, r0
   166cc:	ble	16758 <xcb_depth_next@plt+0x2df8>
   166d0:	ldr	r0, [r9]
   166d4:	rsb	r2, r4, r6
   166d8:	mov	r1, #0
   166dc:	add	r0, r0, r4
   166e0:	bl	131ec <memset@plt>
   166e4:	ldr	r2, [sp, #1036]	; 0x40c
   166e8:	ldr	r3, [r8]
   166ec:	cmp	r2, r3
   166f0:	bne	16754 <xcb_depth_next@plt+0x2df4>
   166f4:	add	sp, sp, #1040	; 0x410
   166f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166fc:	add	sp, sp, #12
   16700:	bx	lr
   16704:	mov	r1, fp
   16708:	mov	r2, r4
   1670c:	bl	13444 <memcpy@plt>
   16710:	b	166d0 <xcb_depth_next@plt+0x2d70>
   16714:	ldr	r0, [pc, #100]	; 16780 <xcb_depth_next@plt+0x2e20>
   16718:	mov	r1, #1
   1671c:	ldr	r3, [pc, #96]	; 16784 <xcb_depth_next@plt+0x2e24>
   16720:	mov	r2, #14
   16724:	add	r0, pc, r0
   16728:	ldr	r3, [r7, r3]
   1672c:	ldr	r3, [r3]
   16730:	bl	13570 <fwrite@plt>
   16734:	mov	r0, #1
   16738:	bl	138e8 <exit@plt>
   1673c:	ldr	r0, [pc, #68]	; 16788 <xcb_depth_next@plt+0x2e28>
   16740:	mov	r1, #1
   16744:	ldr	r3, [pc, #56]	; 16784 <xcb_depth_next@plt+0x2e24>
   16748:	mov	r2, #21
   1674c:	add	r0, pc, r0
   16750:	b	16728 <xcb_depth_next@plt+0x2dc8>
   16754:	bl	13618 <__stack_chk_fail@plt>
   16758:	ldr	r0, [r9]
   1675c:	bl	13300 <free@plt>
   16760:	ldr	r0, [pc, #36]	; 1678c <xcb_depth_next@plt+0x2e2c>
   16764:	ldr	r3, [pc, #24]	; 16784 <xcb_depth_next@plt+0x2e24>
   16768:	mov	r1, #1
   1676c:	add	r0, pc, r0
   16770:	mov	r2, #26
   16774:	b	16728 <xcb_depth_next@plt+0x2dc8>
   16778:			; <UNDEFINED> instruction: 0x000169b4
   1677c:	andeq	r0, r0, r0, asr #6
   16780:	andeq	r4, r0, r4, asr #17
   16784:	andeq	r0, r0, r4, asr #6
   16788:	andeq	r4, r0, r4, lsl #17
   1678c:	andeq	r4, r0, ip, lsl #17
   16790:	push	{r4, r5, lr}
   16794:	sub	sp, sp, #12
   16798:	mov	r5, r0
   1679c:	bl	133f0 <unlink@plt>
   167a0:	ldr	r4, [pc, #84]	; 167fc <xcb_depth_next@plt+0x2e9c>
   167a4:	add	r4, pc, r4
   167a8:	cmp	r0, #0
   167ac:	blt	167b8 <xcb_depth_next@plt+0x2e58>
   167b0:	add	sp, sp, #12
   167b4:	pop	{r4, r5, pc}
   167b8:	bl	1390c <__errno_location@plt>
   167bc:	ldr	r0, [r0]
   167c0:	cmp	r0, #2
   167c4:	beq	167b0 <xcb_depth_next@plt+0x2e50>
   167c8:	ldr	r3, [pc, #48]	; 16800 <xcb_depth_next@plt+0x2ea0>
   167cc:	ldr	r3, [r4, r3]
   167d0:	ldr	r4, [r3]
   167d4:	bl	13030 <strerror@plt>
   167d8:	ldr	r2, [pc, #36]	; 16804 <xcb_depth_next@plt+0x2ea4>
   167dc:	mov	r3, r5
   167e0:	mov	r1, #1
   167e4:	add	r2, pc, r2
   167e8:	str	r0, [sp]
   167ec:	mov	r0, r4
   167f0:	bl	1363c <__fprintf_chk@plt>
   167f4:	mov	r0, #1
   167f8:	bl	138e8 <exit@plt>
   167fc:	andeq	r6, r1, r4, asr r8
   16800:	andeq	r0, r0, r4, asr #6
   16804:	andeq	r4, r0, r0, lsr r8
   16808:	push	{r4, lr}
   1680c:	subs	r3, r0, #0
   16810:	ldr	r4, [pc, #64]	; 16858 <xcb_depth_next@plt+0x2ef8>
   16814:	add	r4, pc, r4
   16818:	beq	16850 <xcb_depth_next@plt+0x2ef0>
   1681c:	bl	1387c <__strdup@plt>
   16820:	cmp	r0, #0
   16824:	popne	{r4, pc}
   16828:	ldr	r3, [pc, #44]	; 1685c <xcb_depth_next@plt+0x2efc>
   1682c:	mov	r1, #1
   16830:	ldr	r0, [pc, #40]	; 16860 <xcb_depth_next@plt+0x2f00>
   16834:	mov	r2, #31
   16838:	ldr	r3, [r4, r3]
   1683c:	add	r0, pc, r0
   16840:	ldr	r3, [r3]
   16844:	bl	13570 <fwrite@plt>
   16848:	mov	r0, #1
   1684c:	bl	138e8 <exit@plt>
   16850:	mov	r0, r3
   16854:	pop	{r4, pc}
   16858:	andeq	r6, r1, r4, ror #15
   1685c:	andeq	r0, r0, r4, asr #6
   16860:	andeq	r4, r0, r4, asr r7
   16864:	andeq	r0, r0, r0
   16868:	push	{r4, lr}
   1686c:	mov	r4, r0
   16870:	bl	135b8 <cairo_surface_finish@plt>
   16874:	mov	r0, r4
   16878:	pop	{r4, lr}
   1687c:	b	13708 <cairo_surface_destroy@plt>
   16880:	ldr	ip, [pc, #100]	; 168ec <xcb_depth_next@plt+0x2f8c>
   16884:	mov	r2, #0
   16888:	push	{r4, r5, lr}
   1688c:	add	ip, pc, ip
   16890:	ldr	lr, [pc, #88]	; 168f0 <xcb_depth_next@plt+0x2f90>
   16894:	sub	sp, sp, #44	; 0x2c
   16898:	mov	r5, r3
   1689c:	mov	r3, #0
   168a0:	mov	r0, r1
   168a4:	mov	r1, sp
   168a8:	ldr	r4, [ip, lr]
   168ac:	vstr	d0, [sp, #16]
   168b0:	strd	r2, [sp]
   168b4:	vstr	d1, [sp, #24]
   168b8:	strd	r2, [sp, #8]
   168bc:	ldr	r3, [r4]
   168c0:	str	r3, [sp, #36]	; 0x24
   168c4:	bl	130f0 <cairo_recording_surface_create@plt>
   168c8:	bl	13954 <cairo_surface_reference@plt>
   168cc:	ldr	r2, [sp, #36]	; 0x24
   168d0:	str	r0, [r5]
   168d4:	ldr	r3, [r4]
   168d8:	cmp	r2, r3
   168dc:	bne	168e8 <xcb_depth_next@plt+0x2f88>
   168e0:	add	sp, sp, #44	; 0x2c
   168e4:	pop	{r4, r5, pc}
   168e8:	bl	13618 <__stack_chk_fail@plt>
   168ec:	andeq	r6, r1, ip, ror #14
   168f0:	andeq	r0, r0, r0, asr #6
   168f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   168f8:	cmp	r1, #4096	; 0x1000
   168fc:	ldr	r4, [pc, #120]	; 1697c <xcb_depth_next@plt+0x301c>
   16900:	sub	sp, sp, #12
   16904:	mov	r6, r2
   16908:	mov	r5, r3
   1690c:	add	r4, pc, r4
   16910:	moveq	r7, #4
   16914:	beq	16924 <xcb_depth_next@plt+0x2fc4>
   16918:	cmp	r1, #8192	; 0x2000
   1691c:	moveq	r7, #2
   16920:	movne	r7, #0
   16924:	mov	r1, r6
   16928:	mov	r0, r7
   1692c:	bl	13594 <cairo_format_stride_for_width@plt>
   16930:	mov	r8, r0
   16934:	mul	r0, r5, r0
   16938:	bl	135f4 <malloc@plt>
   1693c:	mov	r1, r7
   16940:	mov	r2, r6
   16944:	mov	r3, r5
   16948:	str	r8, [sp]
   1694c:	mov	r9, r0
   16950:	bl	135c4 <cairo_image_surface_create_for_data@plt>
   16954:	ldr	r3, [pc, #36]	; 16980 <xcb_depth_next@plt+0x3020>
   16958:	mov	r2, r9
   1695c:	ldr	r1, [pc, #32]	; 16984 <xcb_depth_next@plt+0x3024>
   16960:	ldr	r3, [r4, r3]
   16964:	add	r1, pc, r1
   16968:	mov	r5, r0
   1696c:	bl	137bc <cairo_surface_set_user_data@plt>
   16970:	mov	r0, r5
   16974:	add	sp, sp, #12
   16978:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1697c:	andeq	r6, r1, ip, ror #13
   16980:	andeq	r0, r0, r8, lsr r3
   16984:	strdeq	r6, [r1], -r4
   16988:	push	{r4, r5, r6, r7, r8, r9, lr}
   1698c:	cmp	r1, #4096	; 0x1000
   16990:	ldr	r4, [pc, #120]	; 16a10 <xcb_depth_next@plt+0x30b0>
   16994:	sub	sp, sp, #12
   16998:	mov	r6, r2
   1699c:	mov	r5, r3
   169a0:	add	r4, pc, r4
   169a4:	moveq	r7, #1
   169a8:	beq	169b8 <xcb_depth_next@plt+0x3058>
   169ac:	cmp	r1, #8192	; 0x2000
   169b0:	moveq	r7, #2
   169b4:	movne	r7, #0
   169b8:	mov	r1, r6
   169bc:	mov	r0, r7
   169c0:	bl	13594 <cairo_format_stride_for_width@plt>
   169c4:	mov	r8, r0
   169c8:	mul	r0, r5, r0
   169cc:	bl	135f4 <malloc@plt>
   169d0:	mov	r1, r7
   169d4:	mov	r2, r6
   169d8:	mov	r3, r5
   169dc:	str	r8, [sp]
   169e0:	mov	r9, r0
   169e4:	bl	135c4 <cairo_image_surface_create_for_data@plt>
   169e8:	ldr	r3, [pc, #36]	; 16a14 <xcb_depth_next@plt+0x30b4>
   169ec:	mov	r2, r9
   169f0:	ldr	r1, [pc, #32]	; 16a18 <xcb_depth_next@plt+0x30b8>
   169f4:	ldr	r3, [r4, r3]
   169f8:	add	r1, pc, r1
   169fc:	mov	r5, r0
   16a00:	bl	137bc <cairo_surface_set_user_data@plt>
   16a04:	mov	r0, r5
   16a08:	add	sp, sp, #12
   16a0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16a10:	andeq	r6, r1, r8, asr r6
   16a14:	andeq	r0, r0, r8, lsr r3
   16a18:	andeq	r6, r1, r0, ror #18
   16a1c:	push	{lr}		; (str lr, [sp, #-4]!)
   16a20:	vpush	{d8}
   16a24:	mov	r2, #0
   16a28:	sub	sp, sp, #12
   16a2c:	str	r2, [r3]
   16a30:	vmov.f64	d8, d1
   16a34:	bl	13918 <ceil@plt>
   16a38:	vcvt.s32.f64	s0, d0
   16a3c:	vmov	r1, s0
   16a40:	vmov.f64	d0, d8
   16a44:	str	r1, [sp, #4]
   16a48:	bl	13918 <ceil@plt>
   16a4c:	mov	r0, #4
   16a50:	ldr	r1, [sp, #4]
   16a54:	vcvt.s32.f64	s0, d0
   16a58:	vmov	r2, s0
   16a5c:	add	sp, sp, #12
   16a60:	vpop	{d8}
   16a64:	pop	{lr}		; (ldr lr, [sp], #4)
   16a68:	b	1381c <cairo_image_surface_create@plt>
   16a6c:	ldr	r3, [pc, #80]	; 16ac4 <xcb_depth_next@plt+0x3164>
   16a70:	ldr	r2, [pc, #80]	; 16ac8 <xcb_depth_next@plt+0x3168>
   16a74:	add	r3, pc, r3
   16a78:	push	{r4, lr}
   16a7c:	sub	sp, sp, #8
   16a80:	ldr	r4, [r3, r2]
   16a84:	ldr	r3, [r4]
   16a88:	str	r3, [sp, #4]
   16a8c:	bl	13348 <pixman_version_string@plt>
   16a90:	ldr	r1, [pc, #52]	; 16acc <xcb_depth_next@plt+0x316c>
   16a94:	add	r1, pc, r1
   16a98:	mov	r2, r0
   16a9c:	mov	r0, sp
   16aa0:	bl	16624 <xcb_depth_next@plt+0x2cc4>
   16aa4:	ldr	r2, [sp, #4]
   16aa8:	ldr	r3, [r4]
   16aac:	ldr	r0, [sp]
   16ab0:	cmp	r2, r3
   16ab4:	bne	16ac0 <xcb_depth_next@plt+0x3160>
   16ab8:	add	sp, sp, #8
   16abc:	pop	{r4, pc}
   16ac0:	bl	13618 <__stack_chk_fail@plt>
   16ac4:	andeq	r6, r1, r4, lsl #11
   16ac8:	andeq	r0, r0, r0, asr #6
   16acc:	andeq	r4, r0, r0, ror #12
   16ad0:	push	{r4, r5, r6, lr}
   16ad4:	subs	r4, r1, #0
   16ad8:	mov	r6, r0
   16adc:	mov	r5, r2
   16ae0:	beq	16b34 <xcb_depth_next@plt+0x31d4>
   16ae4:	mov	r1, #1
   16ae8:	mov	r2, r4
   16aec:	mov	r0, r6
   16af0:	mov	r3, r5
   16af4:	bl	137d4 <fread@plt>
   16af8:	mov	r1, r0
   16afc:	cmp	r1, r4
   16b00:	mov	r0, r5
   16b04:	rsb	r4, r1, r4
   16b08:	beq	16b34 <xcb_depth_next@plt+0x31d4>
   16b0c:	bl	13810 <ferror@plt>
   16b10:	add	r6, r6, r4
   16b14:	cmp	r0, #0
   16b18:	mov	r0, r5
   16b1c:	bne	16b3c <xcb_depth_next@plt+0x31dc>
   16b20:	bl	13474 <feof@plt>
   16b24:	cmp	r0, #0
   16b28:	bne	16b3c <xcb_depth_next@plt+0x31dc>
   16b2c:	cmp	r4, #0
   16b30:	bne	16ae4 <xcb_depth_next@plt+0x3184>
   16b34:	mov	r0, #1
   16b38:	pop	{r4, r5, r6, pc}
   16b3c:	mov	r0, #0
   16b40:	pop	{r4, r5, r6, pc}
   16b44:	cmp	r1, #12288	; 0x3000
   16b48:	mov	r0, #0
   16b4c:	push	{r4, lr}
   16b50:	vpush	{d8}
   16b54:	vmov.f64	d8, d1
   16b58:	sub	sp, sp, #8
   16b5c:	str	r0, [r3]
   16b60:	beq	16ba8 <xcb_depth_next@plt+0x3248>
   16b64:	cmp	r1, #4096	; 0x1000
   16b68:	moveq	r4, #1
   16b6c:	bne	16bb0 <xcb_depth_next@plt+0x3250>
   16b70:	bl	13918 <ceil@plt>
   16b74:	vcvt.s32.f64	s0, d0
   16b78:	vmov	r1, s0
   16b7c:	vmov.f64	d0, d8
   16b80:	str	r1, [sp, #4]
   16b84:	bl	13918 <ceil@plt>
   16b88:	mov	r0, r4
   16b8c:	ldr	r1, [sp, #4]
   16b90:	vcvt.s32.f64	s0, d0
   16b94:	vmov	r2, s0
   16b98:	add	sp, sp, #8
   16b9c:	vpop	{d8}
   16ba0:	pop	{r4, lr}
   16ba4:	b	1381c <cairo_image_surface_create@plt>
   16ba8:	mov	r4, r0
   16bac:	b	16b70 <xcb_depth_next@plt+0x3210>
   16bb0:	ldr	r0, [pc, #24]	; 16bd0 <xcb_depth_next@plt+0x3270>
   16bb4:	mov	r2, #153	; 0x99
   16bb8:	ldr	r1, [pc, #20]	; 16bd4 <xcb_depth_next@plt+0x3274>
   16bbc:	ldr	r3, [pc, #20]	; 16bd8 <xcb_depth_next@plt+0x3278>
   16bc0:	add	r0, pc, r0
   16bc4:	add	r1, pc, r1
   16bc8:	add	r3, pc, r3
   16bcc:	bl	13264 <__assert_fail@plt>
   16bd0:	andeq	r4, r0, r0, asr #10
   16bd4:	andeq	r4, r0, r0, asr #10
   16bd8:	andeq	r4, r0, ip, ror #8
   16bdc:	cmn	r0, #1
   16be0:	moveq	r0, #12288	; 0x3000
   16be4:	bx	lr
   16be8:	push	{r3, lr}
   16bec:	bl	16bdc <xcb_depth_next@plt+0x327c>
   16bf0:	cmp	r0, #8192	; 0x2000
   16bf4:	beq	16c44 <xcb_depth_next@plt+0x32e4>
   16bf8:	cmp	r0, #12288	; 0x3000
   16bfc:	beq	16c38 <xcb_depth_next@plt+0x32d8>
   16c00:	cmp	r0, #4096	; 0x1000
   16c04:	beq	16c2c <xcb_depth_next@plt+0x32cc>
   16c08:	ldr	r3, [pc, #64]	; 16c50 <xcb_depth_next@plt+0x32f0>
   16c0c:	mov	r2, #105	; 0x69
   16c10:	ldr	r0, [pc, #60]	; 16c54 <xcb_depth_next@plt+0x32f4>
   16c14:	ldr	r1, [pc, #60]	; 16c58 <xcb_depth_next@plt+0x32f8>
   16c18:	add	r3, pc, r3
   16c1c:	add	r0, pc, r0
   16c20:	add	r3, r3, #40	; 0x28
   16c24:	add	r1, pc, r1
   16c28:	bl	13264 <__assert_fail@plt>
   16c2c:	ldr	r0, [pc, #40]	; 16c5c <xcb_depth_next@plt+0x32fc>
   16c30:	add	r0, pc, r0
   16c34:	pop	{r3, pc}
   16c38:	ldr	r0, [pc, #32]	; 16c60 <xcb_depth_next@plt+0x3300>
   16c3c:	add	r0, pc, r0
   16c40:	pop	{r3, pc}
   16c44:	ldr	r0, [pc, #24]	; 16c64 <xcb_depth_next@plt+0x3304>
   16c48:	add	r0, pc, r0
   16c4c:	pop	{r3, pc}
   16c50:	andeq	r4, r0, ip, lsl r4
   16c54:	andeq	r4, r0, r4, ror #9
   16c58:	andeq	r4, r0, r0, ror #9
   16c5c:	andeq	r4, r0, r8, ror #9
   16c60:	andeq	r4, r0, r0, ror #9
   16c64:	ldrdeq	r4, [r0], -ip
   16c68:	push	{r4, r5, r6, lr}
   16c6c:	mov	r4, r2
   16c70:	mov	r5, r1
   16c74:	bl	16be8 <xcb_depth_next@plt+0x3288>
   16c78:	cmp	r4, #0
   16c7c:	mov	r6, r0
   16c80:	beq	16cbc <xcb_depth_next@plt+0x335c>
   16c84:	rsb	r4, r5, r4
   16c88:	mov	r0, r6
   16c8c:	bl	133cc <strlen@plt>
   16c90:	cmp	r0, r4
   16c94:	beq	16ca0 <xcb_depth_next@plt+0x3340>
   16c98:	mov	r0, #0
   16c9c:	pop	{r4, r5, r6, pc}
   16ca0:	mov	r0, r6
   16ca4:	mov	r1, r5
   16ca8:	mov	r2, r4
   16cac:	bl	137ec <strncmp@plt>
   16cb0:	rsbs	r0, r0, #1
   16cb4:	movcc	r0, #0
   16cb8:	pop	{r4, r5, r6, pc}
   16cbc:	mov	r0, r5
   16cc0:	bl	133cc <strlen@plt>
   16cc4:	mov	r4, r0
   16cc8:	b	16c88 <xcb_depth_next@plt+0x3328>
   16ccc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16cd0:	mov	r7, r0
   16cd4:	mov	r9, r1
   16cd8:	mov	r0, r2
   16cdc:	mov	r1, #46	; 0x2e
   16ce0:	mov	r6, r3
   16ce4:	mov	r4, r2
   16ce8:	bl	13180 <strchr@plt>
   16cec:	cmp	r0, r6
   16cf0:	movcs	r0, r6
   16cf4:	movcs	r8, #0
   16cf8:	bcs	16d0c <xcb_depth_next@plt+0x33ac>
   16cfc:	cmp	r0, #0
   16d00:	addne	r8, r0, #1
   16d04:	moveq	r8, r0
   16d08:	moveq	r0, r6
   16d0c:	rsb	r5, r4, r0
   16d10:	cmp	r5, #1
   16d14:	beq	16d7c <xcb_depth_next@plt+0x341c>
   16d18:	ldr	r7, [r7]
   16d1c:	mov	r1, r4
   16d20:	mov	r2, r5
   16d24:	mov	r0, r7
   16d28:	bl	137ec <strncmp@plt>
   16d2c:	cmp	r0, #0
   16d30:	bne	16d74 <xcb_depth_next@plt+0x3414>
   16d34:	bl	135a0 <__ctype_b_loc@plt>
   16d38:	ldrb	r3, [r7, r5]
   16d3c:	lsl	r3, r3, #1
   16d40:	ldr	r2, [r0]
   16d44:	ldrh	r3, [r2, r3]
   16d48:	tst	r3, #8
   16d4c:	bne	16d74 <xcb_depth_next@plt+0x3414>
   16d50:	cmp	r8, #0
   16d54:	beq	16da8 <xcb_depth_next@plt+0x3448>
   16d58:	ldr	r0, [r9]
   16d5c:	rsb	r6, r8, r6
   16d60:	bl	16be8 <xcb_depth_next@plt+0x3288>
   16d64:	mov	r4, r0
   16d68:	bl	133cc <strlen@plt>
   16d6c:	cmp	r6, r0
   16d70:	beq	16d8c <xcb_depth_next@plt+0x342c>
   16d74:	mov	r0, #0
   16d78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16d7c:	ldrb	r3, [r4]
   16d80:	cmp	r3, #63	; 0x3f
   16d84:	bne	16d18 <xcb_depth_next@plt+0x33b8>
   16d88:	b	16d50 <xcb_depth_next@plt+0x33f0>
   16d8c:	mov	r0, r4
   16d90:	mov	r1, r8
   16d94:	mov	r2, r6
   16d98:	bl	137ec <strncmp@plt>
   16d9c:	rsbs	r0, r0, #1
   16da0:	movcc	r0, #0
   16da4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16da8:	mov	r0, #1
   16dac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16db0:	push	{r3, lr}
   16db4:	bl	16bdc <xcb_depth_next@plt+0x327c>
   16db8:	cmp	r0, #4096	; 0x1000
   16dbc:	beq	16df8 <xcb_depth_next@plt+0x3498>
   16dc0:	cmp	r0, #12288	; 0x3000
   16dc4:	bne	16dd4 <xcb_depth_next@plt+0x3474>
   16dc8:	ldr	r0, [pc, #52]	; 16e04 <xcb_depth_next@plt+0x34a4>
   16dcc:	add	r0, pc, r0
   16dd0:	pop	{r3, pc}
   16dd4:	ldr	r3, [pc, #44]	; 16e08 <xcb_depth_next@plt+0x34a8>
   16dd8:	mov	r2, #89	; 0x59
   16ddc:	ldr	r0, [pc, #40]	; 16e0c <xcb_depth_next@plt+0x34ac>
   16de0:	ldr	r1, [pc, #40]	; 16e10 <xcb_depth_next@plt+0x34b0>
   16de4:	add	r3, pc, r3
   16de8:	add	r0, pc, r0
   16dec:	add	r3, r3, #80	; 0x50
   16df0:	add	r1, pc, r1
   16df4:	bl	13264 <__assert_fail@plt>
   16df8:	ldr	r0, [pc, #20]	; 16e14 <xcb_depth_next@plt+0x34b4>
   16dfc:	add	r0, pc, r0
   16e00:	pop	{r3, pc}
   16e04:	andeq	r4, r0, r4, ror #6
   16e08:	andeq	r4, r0, r0, asr r2
   16e0c:	andeq	r4, r0, r8, lsl r3
   16e10:	andeq	r4, r0, r4, lsl r3
   16e14:	andeq	r4, r0, ip, lsr #6
   16e18:	cmp	r0, #8192	; 0x2000
   16e1c:	push	{r3, lr}
   16e20:	beq	16e68 <xcb_depth_next@plt+0x3508>
   16e24:	cmp	r0, #12288	; 0x3000
   16e28:	beq	16e60 <xcb_depth_next@plt+0x3500>
   16e2c:	cmp	r0, #4096	; 0x1000
   16e30:	beq	16e58 <xcb_depth_next@plt+0x34f8>
   16e34:	ldr	r3, [pc, #52]	; 16e70 <xcb_depth_next@plt+0x3510>
   16e38:	mov	r2, #126	; 0x7e
   16e3c:	ldr	r0, [pc, #48]	; 16e74 <xcb_depth_next@plt+0x3514>
   16e40:	ldr	r1, [pc, #48]	; 16e78 <xcb_depth_next@plt+0x3518>
   16e44:	add	r3, pc, r3
   16e48:	add	r0, pc, r0
   16e4c:	add	r3, r3, #112	; 0x70
   16e50:	add	r1, pc, r1
   16e54:	bl	13264 <__assert_fail@plt>
   16e58:	mov	r0, #1
   16e5c:	pop	{r3, pc}
   16e60:	mov	r0, #0
   16e64:	pop	{r3, pc}
   16e68:	mov	r0, #2
   16e6c:	pop	{r3, pc}
   16e70:	strdeq	r4, [r0], -r0
   16e74:			; <UNDEFINED> instruction: 0x000042b8
   16e78:			; <UNDEFINED> instruction: 0x000042b4
   16e7c:	push	{r4, r5, r6, r7, r8, lr}
   16e80:	mov	r5, r1
   16e84:	mov	r6, r2
   16e88:	mov	r7, r3
   16e8c:	bl	13384 <cairo_image_surface_create_from_png@plt>
   16e90:	mov	r4, r0
   16e94:	bl	13498 <cairo_surface_status@plt>
   16e98:	cmp	r0, #0
   16e9c:	bne	16f4c <xcb_depth_next@plt+0x35ec>
   16ea0:	cmp	r7, #0
   16ea4:	mov	r0, r4
   16ea8:	bne	16f54 <xcb_depth_next@plt+0x35f4>
   16eac:	bl	1378c <cairo_image_surface_get_width@plt>
   16eb0:	cmp	r5, r0
   16eb4:	beq	16fd0 <xcb_depth_next@plt+0x3670>
   16eb8:	mov	r0, r4
   16ebc:	bl	134f8 <cairo_image_surface_get_format@plt>
   16ec0:	mov	r1, r5
   16ec4:	mov	r2, r6
   16ec8:	bl	1381c <cairo_image_surface_create@plt>
   16ecc:	mov	r8, r0
   16ed0:	bl	13450 <cairo_create@plt>
   16ed4:	mov	r7, r0
   16ed8:	mov	r0, r8
   16edc:	bl	13708 <cairo_surface_destroy@plt>
   16ee0:	mov	r0, r4
   16ee4:	bl	1378c <cairo_image_surface_get_width@plt>
   16ee8:	mov	r8, r0
   16eec:	mov	r0, r4
   16ef0:	bl	1360c <cairo_image_surface_get_height@plt>
   16ef4:	rsb	r5, r8, r5
   16ef8:	mov	r1, r4
   16efc:	vmov	s0, r5
   16f00:	vcvt.f64.s32	d0, s0
   16f04:	rsb	r6, r0, r6
   16f08:	mov	r0, r7
   16f0c:	vmov	s2, r6
   16f10:	vcvt.f64.s32	d1, s2
   16f14:	bl	131bc <cairo_set_source_surface@plt>
   16f18:	mov	r0, r7
   16f1c:	mov	r1, #1
   16f20:	bl	13054 <cairo_set_operator@plt>
   16f24:	mov	r0, r7
   16f28:	bl	132dc <cairo_paint@plt>
   16f2c:	mov	r0, r4
   16f30:	bl	13708 <cairo_surface_destroy@plt>
   16f34:	mov	r0, r7
   16f38:	bl	1318c <cairo_get_target@plt>
   16f3c:	bl	13954 <cairo_surface_reference@plt>
   16f40:	mov	r4, r0
   16f44:	mov	r0, r7
   16f48:	bl	13114 <cairo_destroy@plt>
   16f4c:	mov	r0, r4
   16f50:	pop	{r4, r5, r6, r7, r8, pc}
   16f54:	bl	134f8 <cairo_image_surface_get_format@plt>
   16f58:	mov	r1, r5
   16f5c:	mov	r2, r6
   16f60:	bl	1381c <cairo_image_surface_create@plt>
   16f64:	mov	r8, r0
   16f68:	bl	13450 <cairo_create@plt>
   16f6c:	mov	r7, r0
   16f70:	mov	r0, r8
   16f74:	bl	13708 <cairo_surface_destroy@plt>
   16f78:	vmov.f64	d0, #112	; 0x3f800000  1.0
   16f7c:	mov	r0, r7
   16f80:	vmov.f64	d1, d0
   16f84:	vmov.f64	d2, d0
   16f88:	bl	13324 <cairo_set_source_rgb@plt>
   16f8c:	mov	r0, r7
   16f90:	bl	132dc <cairo_paint@plt>
   16f94:	mov	r0, r4
   16f98:	bl	1378c <cairo_image_surface_get_width@plt>
   16f9c:	mov	r8, r0
   16fa0:	mov	r0, r4
   16fa4:	bl	1360c <cairo_image_surface_get_height@plt>
   16fa8:	rsb	r5, r8, r5
   16fac:	mov	r1, r4
   16fb0:	vmov	s0, r5
   16fb4:	vcvt.f64.s32	d0, s0
   16fb8:	rsb	r6, r0, r6
   16fbc:	mov	r0, r7
   16fc0:	vmov	s2, r6
   16fc4:	vcvt.f64.s32	d1, s2
   16fc8:	bl	131bc <cairo_set_source_surface@plt>
   16fcc:	b	16f24 <xcb_depth_next@plt+0x35c4>
   16fd0:	mov	r0, r4
   16fd4:	bl	1360c <cairo_image_surface_get_height@plt>
   16fd8:	cmp	r6, r0
   16fdc:	bne	16eb8 <xcb_depth_next@plt+0x3558>
   16fe0:	b	16f4c <xcb_depth_next@plt+0x35ec>
   16fe4:	push	{r4, r5, r6, lr}
   16fe8:	cmp	r1, #0
   16fec:	add	r4, r1, r1, lsl #2
   16ff0:	add	r4, r0, r4, lsl #4
   16ff4:	popeq	{r4, r5, r6, pc}
   16ff8:	ldr	r6, [pc, #44]	; 1702c <xcb_depth_next@plt+0x36cc>
   16ffc:	mov	r5, r1
   17000:	add	r6, pc, r6
   17004:	mov	r0, #8
   17008:	sub	r4, r4, #80	; 0x50
   1700c:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   17010:	ldr	r3, [r6, #4]
   17014:	subs	r5, r5, #1
   17018:	str	r4, [r0, #4]
   1701c:	str	r0, [r6, #4]
   17020:	str	r3, [r0]
   17024:	bne	17004 <xcb_depth_next@plt+0x36a4>
   17028:	pop	{r4, r5, r6, pc}
   1702c:	andeq	r6, r1, r8, asr r3
   17030:	ldr	r0, [pc, #8]	; 17040 <xcb_depth_next@plt+0x36e0>
   17034:	mov	r1, #5
   17038:	add	r0, pc, r0
   1703c:	b	16fe4 <xcb_depth_next@plt+0x3684>
   17040:	andeq	r5, r1, r8, lsr #13
   17044:	ldr	r3, [pc, #1308]	; 17568 <xcb_depth_next@plt+0x3c08>
   17048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1704c:	add	r3, pc, r3
   17050:	sub	sp, sp, #44	; 0x2c
   17054:	ldr	ip, [pc, #1296]	; 1756c <xcb_depth_next@plt+0x3c0c>
   17058:	ldr	r3, [r3, #4]
   1705c:	add	ip, pc, ip
   17060:	str	r0, [sp, #32]
   17064:	cmp	r3, #0
   17068:	str	ip, [sp, #36]	; 0x24
   1706c:	str	r1, [sp, #28]
   17070:	beq	17530 <xcb_depth_next@plt+0x3bd0>
   17074:	ldr	r0, [pc, #1268]	; 17570 <xcb_depth_next@plt+0x3c10>
   17078:	add	r0, pc, r0
   1707c:	bl	13150 <getenv@plt>
   17080:	subs	r8, r0, #0
   17084:	beq	172c8 <xcb_depth_next@plt+0x3968>
   17088:	ldrb	r3, [r8]
   1708c:	cmp	r3, #0
   17090:	beq	172c8 <xcb_depth_next@plt+0x3968>
   17094:	ldr	ip, [pc, #1240]	; 17574 <xcb_depth_next@plt+0x3c14>
   17098:	mov	r7, #0
   1709c:	ldr	sl, [pc, #1236]	; 17578 <xcb_depth_next@plt+0x3c18>
   170a0:	mov	r6, r7
   170a4:	add	ip, pc, ip
   170a8:	str	ip, [sp, #16]
   170ac:	ldr	ip, [pc, #1224]	; 1757c <xcb_depth_next@plt+0x3c1c>
   170b0:	add	sl, pc, sl
   170b4:	add	ip, pc, ip
   170b8:	str	ip, [sp, #24]
   170bc:	ldr	ip, [pc, #1212]	; 17580 <xcb_depth_next@plt+0x3c20>
   170c0:	add	ip, pc, ip
   170c4:	str	ip, [sp, #12]
   170c8:	b	170dc <xcb_depth_next@plt+0x377c>
   170cc:	ldrb	r3, [r9, #1]
   170d0:	add	r8, r8, #1
   170d4:	cmp	r3, #0
   170d8:	beq	17204 <xcb_depth_next@plt+0x38a4>
   170dc:	mov	r0, r8
   170e0:	ldr	r1, [sp, #16]
   170e4:	bl	138ac <strpbrk@plt>
   170e8:	subs	r9, r0, #0
   170ec:	beq	17404 <xcb_depth_next@plt+0x3aa4>
   170f0:	cmp	r9, r8
   170f4:	beq	170cc <xcb_depth_next@plt+0x376c>
   170f8:	ldr	ip, [sp, #24]
   170fc:	ldr	r5, [ip, #4]
   17100:	cmp	r5, #0
   17104:	beq	17488 <xcb_depth_next@plt+0x3b28>
   17108:	mov	ip, #0
   1710c:	str	ip, [sp, #8]
   17110:	b	17120 <xcb_depth_next@plt+0x37c0>
   17114:	ldr	r5, [r5]
   17118:	cmp	r5, #0
   1711c:	beq	171ec <xcb_depth_next@plt+0x388c>
   17120:	ldr	r4, [r5, #4]
   17124:	mov	r2, r8
   17128:	mov	r3, r9
   1712c:	add	r1, r4, #20
   17130:	mov	r0, r4
   17134:	bl	16ccc <xcb_depth_next@plt+0x336c>
   17138:	cmp	r0, #0
   1713c:	beq	17114 <xcb_depth_next@plt+0x37b4>
   17140:	ldr	r0, [sp, #12]
   17144:	bl	13150 <getenv@plt>
   17148:	subs	fp, r0, #0
   1714c:	beq	173b8 <xcb_depth_next@plt+0x3a58>
   17150:	ldrb	r2, [fp]
   17154:	cmp	r2, #0
   17158:	beq	173b8 <xcb_depth_next@plt+0x3a58>
   1715c:	str	r5, [sp, #20]
   17160:	b	17178 <xcb_depth_next@plt+0x3818>
   17164:	cmp	r5, #0
   17168:	beq	171dc <xcb_depth_next@plt+0x387c>
   1716c:	add	fp, r5, #1
   17170:	cmp	fp, #0
   17174:	beq	171dc <xcb_depth_next@plt+0x387c>
   17178:	mov	r0, fp
   1717c:	mov	r1, sl
   17180:	bl	138ac <strpbrk@plt>
   17184:	cmp	fp, r0
   17188:	mov	r5, r0
   1718c:	addeq	fp, fp, #1
   17190:	beq	17170 <xcb_depth_next@plt+0x3810>
   17194:	mov	r1, fp
   17198:	ldr	r0, [r4, #20]
   1719c:	mov	r2, r5
   171a0:	bl	16c68 <xcb_depth_next@plt+0x3308>
   171a4:	cmp	r0, #0
   171a8:	beq	17164 <xcb_depth_next@plt+0x3804>
   171ac:	add	r6, r6, #1
   171b0:	mov	r0, r7
   171b4:	mov	ip, #1
   171b8:	str	ip, [sp, #8]
   171bc:	lsl	fp, r6, #2
   171c0:	mov	r1, fp
   171c4:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   171c8:	cmp	r5, #0
   171cc:	add	fp, r0, fp
   171d0:	mov	r7, r0
   171d4:	str	r4, [fp, #-4]
   171d8:	bne	1716c <xcb_depth_next@plt+0x380c>
   171dc:	ldr	r5, [sp, #20]
   171e0:	ldr	r5, [r5]
   171e4:	cmp	r5, #0
   171e8:	bne	17120 <xcb_depth_next@plt+0x37c0>
   171ec:	ldr	ip, [sp, #8]
   171f0:	cmp	ip, #0
   171f4:	beq	17488 <xcb_depth_next@plt+0x3b28>
   171f8:	ldrb	r3, [r9]
   171fc:	cmp	r3, #0
   17200:	bne	173f8 <xcb_depth_next@plt+0x3a98>
   17204:	mov	r9, #1
   17208:	ldr	r0, [pc, #884]	; 17584 <xcb_depth_next@plt+0x3c24>
   1720c:	add	r0, pc, r0
   17210:	bl	13150 <getenv@plt>
   17214:	subs	sl, r0, #0
   17218:	beq	172a4 <xcb_depth_next@plt+0x3944>
   1721c:	ldrb	r3, [sl]
   17220:	cmp	r3, #0
   17224:	beq	172a4 <xcb_depth_next@plt+0x3944>
   17228:	ldr	r9, [pc, #856]	; 17588 <xcb_depth_next@plt+0x3c28>
   1722c:	add	r9, pc, r9
   17230:	mov	r0, sl
   17234:	mov	r1, r9
   17238:	bl	138ac <strpbrk@plt>
   1723c:	subs	fp, r0, #0
   17240:	beq	17420 <xcb_depth_next@plt+0x3ac0>
   17244:	cmp	fp, sl
   17248:	beq	17414 <xcb_depth_next@plt+0x3ab4>
   1724c:	cmp	r6, #0
   17250:	movne	r8, #0
   17254:	movne	r5, r7
   17258:	movne	r4, r8
   1725c:	beq	17294 <xcb_depth_next@plt+0x3934>
   17260:	ldr	r0, [r5], #4
   17264:	mov	r3, fp
   17268:	mov	r2, sl
   1726c:	add	r4, r4, #1
   17270:	add	r1, r0, #20
   17274:	bl	16ccc <xcb_depth_next@plt+0x336c>
   17278:	cmp	r0, #0
   1727c:	ldreq	r3, [r5, #-4]
   17280:	streq	r3, [r7, r8, lsl #2]
   17284:	addeq	r8, r8, #1
   17288:	cmp	r4, r6
   1728c:	bne	17260 <xcb_depth_next@plt+0x3900>
   17290:	mov	r6, r8
   17294:	ldrb	r3, [fp]
   17298:	cmp	r3, #0
   1729c:	bne	173e4 <xcb_depth_next@plt+0x3a84>
   172a0:	mov	r9, #1
   172a4:	ldr	ip, [sp, #32]
   172a8:	mov	r0, r7
   172ac:	cmp	ip, #0
   172b0:	strne	r6, [ip]
   172b4:	ldr	ip, [sp, #28]
   172b8:	cmp	ip, #0
   172bc:	strne	r9, [ip]
   172c0:	add	sp, sp, #44	; 0x2c
   172c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172c8:	mov	r0, #0
   172cc:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   172d0:	ldr	r3, [pc, #692]	; 1758c <xcb_depth_next@plt+0x3c2c>
   172d4:	add	r3, pc, r3
   172d8:	ldr	r9, [r3, #4]
   172dc:	cmp	r9, #0
   172e0:	mov	r7, r0
   172e4:	beq	17528 <xcb_depth_next@plt+0x3bc8>
   172e8:	ldr	r3, [pc, #672]	; 17590 <xcb_depth_next@plt+0x3c30>
   172ec:	mov	r5, #0
   172f0:	ldr	r8, [pc, #668]	; 17594 <xcb_depth_next@plt+0x3c34>
   172f4:	mov	r6, r5
   172f8:	add	r3, pc, r3
   172fc:	str	r5, [sp, #12]
   17300:	str	r3, [sp, #8]
   17304:	add	r8, pc, r8
   17308:	b	1731c <xcb_depth_next@plt+0x39bc>
   1730c:	add	r6, r6, #1
   17310:	ldr	r9, [r9]
   17314:	cmp	r9, #0
   17318:	beq	17430 <xcb_depth_next@plt+0x3ad0>
   1731c:	ldr	r0, [sp, #8]
   17320:	ldr	r4, [r9, #4]
   17324:	bl	13150 <getenv@plt>
   17328:	subs	fp, r0, #0
   1732c:	beq	1730c <xcb_depth_next@plt+0x39ac>
   17330:	ldrb	r2, [fp]
   17334:	cmp	r2, #0
   17338:	beq	1730c <xcb_depth_next@plt+0x39ac>
   1733c:	b	1737c <xcb_depth_next@plt+0x3a1c>
   17340:	add	r6, r6, #1
   17344:	mov	r0, r7
   17348:	mov	ip, #1
   1734c:	str	ip, [sp, #12]
   17350:	lsl	fp, r6, #2
   17354:	mov	r1, fp
   17358:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   1735c:	add	fp, r0, fp
   17360:	mov	r7, r0
   17364:	str	r4, [fp, #-4]
   17368:	cmp	sl, #0
   1736c:	beq	17310 <xcb_depth_next@plt+0x39b0>
   17370:	add	fp, sl, #1
   17374:	cmp	fp, #0
   17378:	beq	17310 <xcb_depth_next@plt+0x39b0>
   1737c:	mov	r0, fp
   17380:	mov	r1, r8
   17384:	bl	138ac <strpbrk@plt>
   17388:	cmp	fp, r0
   1738c:	mov	sl, r0
   17390:	addeq	fp, fp, #1
   17394:	beq	17374 <xcb_depth_next@plt+0x3a14>
   17398:	mov	r1, fp
   1739c:	ldr	r0, [r4, #20]
   173a0:	mov	r2, sl
   173a4:	bl	16c68 <xcb_depth_next@plt+0x3308>
   173a8:	cmp	r0, #0
   173ac:	addeq	r5, r5, #1
   173b0:	beq	17368 <xcb_depth_next@plt+0x3a08>
   173b4:	b	17340 <xcb_depth_next@plt+0x39e0>
   173b8:	add	r6, r6, #1
   173bc:	mov	r0, r7
   173c0:	mov	ip, #1
   173c4:	str	ip, [sp, #8]
   173c8:	lsl	fp, r6, #2
   173cc:	mov	r1, fp
   173d0:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   173d4:	add	r3, r0, fp
   173d8:	mov	r7, r0
   173dc:	str	r4, [r3, #-4]
   173e0:	b	17114 <xcb_depth_next@plt+0x37b4>
   173e4:	ldrb	r3, [fp, #1]
   173e8:	add	sl, fp, #1
   173ec:	cmp	r3, #0
   173f0:	bne	17230 <xcb_depth_next@plt+0x38d0>
   173f4:	b	172a0 <xcb_depth_next@plt+0x3940>
   173f8:	ldrb	r3, [r9, #1]
   173fc:	add	r8, r9, #1
   17400:	b	170d4 <xcb_depth_next@plt+0x3774>
   17404:	mov	r0, r8
   17408:	bl	133cc <strlen@plt>
   1740c:	add	r9, r8, r0
   17410:	b	170f0 <xcb_depth_next@plt+0x3790>
   17414:	add	sl, sl, #1
   17418:	ldrb	r3, [fp, #1]
   1741c:	b	173ec <xcb_depth_next@plt+0x3a8c>
   17420:	mov	r0, sl
   17424:	bl	133cc <strlen@plt>
   17428:	add	fp, sl, r0
   1742c:	b	17244 <xcb_depth_next@plt+0x38e4>
   17430:	ldr	r3, [sp, #12]
   17434:	cmp	r3, #0
   17438:	addeq	r1, r5, r6
   1743c:	lsleq	r1, r1, #2
   17440:	bne	17208 <xcb_depth_next@plt+0x38a8>
   17444:	mov	r0, r7
   17448:	bl	165c4 <xcb_depth_next@plt+0x2c64>
   1744c:	ldr	r3, [pc, #324]	; 17598 <xcb_depth_next@plt+0x3c38>
   17450:	add	r3, pc, r3
   17454:	ldr	r9, [r3, #4]
   17458:	cmp	r9, #0
   1745c:	mov	r7, r0
   17460:	beq	17538 <xcb_depth_next@plt+0x3bd8>
   17464:	sub	r3, r0, #4
   17468:	mov	r6, #0
   1746c:	ldr	r2, [r9, #4]
   17470:	add	r6, r6, #1
   17474:	str	r2, [r3, #4]!
   17478:	ldr	r9, [r9]
   1747c:	cmp	r9, #0
   17480:	bne	1746c <xcb_depth_next@plt+0x3b0c>
   17484:	b	17208 <xcb_depth_next@plt+0x38a8>
   17488:	ldr	ip, [sp, #36]	; 0x24
   1748c:	rsb	r3, r8, r9
   17490:	ldr	r0, [pc, #260]	; 1759c <xcb_depth_next@plt+0x3c3c>
   17494:	mov	r1, #1
   17498:	ldr	r2, [pc, #256]	; 175a0 <xcb_depth_next@plt+0x3c40>
   1749c:	mov	r7, #0
   174a0:	ldr	r4, [ip, r0]
   174a4:	add	r2, pc, r2
   174a8:	str	r8, [sp]
   174ac:	ldr	r8, [pc, #240]	; 175a4 <xcb_depth_next@plt+0x3c44>
   174b0:	ldr	r0, [r4]
   174b4:	bl	1363c <__fprintf_chk@plt>
   174b8:	ldr	r0, [pc, #232]	; 175a8 <xcb_depth_next@plt+0x3c48>
   174bc:	ldr	r3, [r4]
   174c0:	mov	r1, #1
   174c4:	add	r0, pc, r0
   174c8:	mov	r2, #14
   174cc:	bl	13570 <fwrite@plt>
   174d0:	ldr	r3, [pc, #212]	; 175ac <xcb_depth_next@plt+0x3c4c>
   174d4:	add	r8, pc, r8
   174d8:	add	r3, pc, r3
   174dc:	ldr	r5, [r3, #4]
   174e0:	cmp	r5, #0
   174e4:	beq	17514 <xcb_depth_next@plt+0x3bb4>
   174e8:	cmp	r7, #0
   174ec:	ldr	r6, [r5, #4]
   174f0:	beq	1754c <xcb_depth_next@plt+0x3bec>
   174f4:	ldr	r0, [r6]
   174f8:	mov	r1, r7
   174fc:	bl	138dc <strcmp@plt>
   17500:	cmp	r0, #0
   17504:	bne	17540 <xcb_depth_next@plt+0x3be0>
   17508:	ldr	r5, [r5]
   1750c:	cmp	r5, #0
   17510:	bne	174e8 <xcb_depth_next@plt+0x3b88>
   17514:	ldr	r1, [r4]
   17518:	mov	r0, #10
   1751c:	bl	13660 <fputc@plt>
   17520:	mvn	r0, #0
   17524:	bl	138e8 <exit@plt>
   17528:	mov	r1, r9
   1752c:	b	17444 <xcb_depth_next@plt+0x3ae4>
   17530:	bl	17f68 <xcb_depth_next@plt+0x4608>
   17534:	b	17074 <xcb_depth_next@plt+0x3714>
   17538:	mov	r6, r9
   1753c:	b	17208 <xcb_depth_next@plt+0x38a8>
   17540:	mov	r0, #44	; 0x2c
   17544:	ldr	r1, [r4]
   17548:	bl	13660 <fputc@plt>
   1754c:	ldr	r0, [r4]
   17550:	mov	r1, #1
   17554:	mov	r2, r8
   17558:	ldr	r3, [r6]
   1755c:	bl	1363c <__fprintf_chk@plt>
   17560:	ldr	r7, [r6]
   17564:	b	17508 <xcb_depth_next@plt+0x3ba8>
   17568:	andeq	r6, r1, ip, lsl #6
   1756c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17570:	andeq	r4, r0, r0, asr #1
   17574:	andeq	r4, r0, r8, lsr #1
   17578:	muleq	r0, ip, r0
   1757c:	andeq	r6, r1, r4, lsr #5
   17580:	andeq	r4, r0, r0, asr #1
   17584:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   17588:	andeq	r3, r0, r0, lsr #30
   1758c:	andeq	r6, r1, r4, lsl #1
   17590:	andeq	r3, r0, r8, lsl #29
   17594:	andeq	r3, r0, r8, asr #28
   17598:	andeq	r5, r1, r8, lsl #30
   1759c:	andeq	r0, r0, r4, asr #6
   175a0:			; <UNDEFINED> instruction: 0x00003cb0
   175a4:	andeq	r3, r0, r8, asr #25
   175a8:	andeq	r3, r0, ip, lsr #25
   175ac:	andeq	r5, r1, r0, lsl #29
   175b0:	ldr	r3, [pc, #100]	; 1761c <xcb_depth_next@plt+0x3cbc>
   175b4:	push	{lr}		; (str lr, [sp, #-4]!)
   175b8:	add	r3, pc, r3
   175bc:	sub	sp, sp, #12
   175c0:	ldr	r3, [r3, #4]
   175c4:	cmp	r3, #0
   175c8:	beq	1760c <xcb_depth_next@plt+0x3cac>
   175cc:	cmp	r0, #4096	; 0x1000
   175d0:	beq	175f8 <xcb_depth_next@plt+0x3c98>
   175d4:	cmp	r0, #12288	; 0x3000
   175d8:	beq	175e8 <xcb_depth_next@plt+0x3c88>
   175dc:	mov	r0, #0
   175e0:	add	sp, sp, #12
   175e4:	pop	{pc}		; (ldr pc, [sp], #4)
   175e8:	ldr	r0, [pc, #48]	; 17620 <xcb_depth_next@plt+0x3cc0>
   175ec:	add	r0, pc, r0
   175f0:	add	sp, sp, #12
   175f4:	pop	{pc}		; (ldr pc, [sp], #4)
   175f8:	ldr	r0, [pc, #36]	; 17624 <xcb_depth_next@plt+0x3cc4>
   175fc:	add	r0, pc, r0
   17600:	add	r0, r0, #80	; 0x50
   17604:	add	sp, sp, #12
   17608:	pop	{pc}		; (ldr pc, [sp], #4)
   1760c:	str	r0, [sp, #4]
   17610:	bl	17f68 <xcb_depth_next@plt+0x4608>
   17614:	ldr	r0, [sp, #4]
   17618:	b	175cc <xcb_depth_next@plt+0x3c6c>
   1761c:	andeq	r5, r1, r0, lsr #27
   17620:	strdeq	r5, [r1], -r4
   17624:	andeq	r5, r1, r4, ror #1
   17628:	push	{r4, r5, r6, r7, r8, lr}
   1762c:	mov	r7, r0
   17630:	ldr	r4, [pc, #140]	; 176c4 <xcb_depth_next@plt+0x3d64>
   17634:	mov	r8, r1
   17638:	add	r4, pc, r4
   1763c:	ldr	r6, [r4, #4]
   17640:	cmp	r6, #0
   17644:	beq	176ac <xcb_depth_next@plt+0x3d4c>
   17648:	mov	r4, r6
   1764c:	ldr	r5, [r4, #4]
   17650:	mov	r1, r7
   17654:	ldr	r0, [r5]
   17658:	bl	138dc <strcmp@plt>
   1765c:	cmp	r0, #0
   17660:	bne	17670 <xcb_depth_next@plt+0x3d10>
   17664:	ldr	r3, [r5, #20]
   17668:	cmp	r3, r8
   1766c:	beq	176a4 <xcb_depth_next@plt+0x3d44>
   17670:	ldr	r4, [r4]
   17674:	cmp	r4, #0
   17678:	bne	1764c <xcb_depth_next@plt+0x3cec>
   1767c:	b	1768c <xcb_depth_next@plt+0x3d2c>
   17680:	ldr	r6, [r6]
   17684:	cmp	r6, #0
   17688:	beq	176bc <xcb_depth_next@plt+0x3d5c>
   1768c:	ldr	r5, [r6, #4]
   17690:	mov	r1, r7
   17694:	ldr	r0, [r5]
   17698:	bl	138dc <strcmp@plt>
   1769c:	cmp	r0, #0
   176a0:	bne	17680 <xcb_depth_next@plt+0x3d20>
   176a4:	mov	r0, r5
   176a8:	pop	{r4, r5, r6, r7, r8, pc}
   176ac:	bl	17f68 <xcb_depth_next@plt+0x4608>
   176b0:	ldr	r6, [r4, #4]
   176b4:	cmp	r6, #0
   176b8:	bne	17648 <xcb_depth_next@plt+0x3ce8>
   176bc:	mov	r0, #0
   176c0:	pop	{r4, r5, r6, r7, r8, pc}
   176c4:	andeq	r5, r1, r0, lsr #26
   176c8:	b	13300 <free@plt>
   176cc:	ldr	r3, [pc, #176]	; 17784 <xcb_depth_next@plt+0x3e24>
   176d0:	ldr	r2, [pc, #176]	; 17788 <xcb_depth_next@plt+0x3e28>
   176d4:	add	r3, pc, r3
   176d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176dc:	sub	sp, sp, #16
   176e0:	ldr	sl, [r3, r2]
   176e4:	mov	r7, r0
   176e8:	mov	r6, #5
   176ec:	mov	r5, #0
   176f0:	ldr	r3, [sl]
   176f4:	str	r3, [sp, #12]
   176f8:	mov	r1, #0
   176fc:	mov	r0, #2
   17700:	mov	r2, r1
   17704:	bl	1381c <cairo_image_surface_create@plt>
   17708:	mov	r8, r0
   1770c:	bl	13450 <cairo_create@plt>
   17710:	mov	r4, r0
   17714:	mov	r0, r8
   17718:	bl	13708 <cairo_surface_destroy@plt>
   1771c:	mov	r1, sp
   17720:	mov	r0, r4
   17724:	str	r7, [sp]
   17728:	bl	13744 <cairo_append_path@plt>
   1772c:	mov	r0, r5
   17730:	bl	13708 <cairo_surface_destroy@plt>
   17734:	mov	r0, r4
   17738:	bl	1318c <cairo_get_target@plt>
   1773c:	bl	13954 <cairo_surface_reference@plt>
   17740:	mov	r5, r0
   17744:	mov	r0, r4
   17748:	bl	13114 <cairo_destroy@plt>
   1774c:	mov	r0, r5
   17750:	bl	13498 <cairo_surface_status@plt>
   17754:	cmp	r7, r0
   17758:	beq	17764 <xcb_depth_next@plt+0x3e04>
   1775c:	subs	r6, r6, #1
   17760:	bne	176f8 <xcb_depth_next@plt+0x3d98>
   17764:	ldr	r2, [sp, #12]
   17768:	mov	r0, r5
   1776c:	ldr	r3, [sl]
   17770:	cmp	r2, r3
   17774:	bne	17780 <xcb_depth_next@plt+0x3e20>
   17778:	add	sp, sp, #16
   1777c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17780:	bl	13618 <__stack_chk_fail@plt>
   17784:	andeq	r5, r1, r4, lsr #18
   17788:	andeq	r0, r0, r0, asr #6
   1778c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17790:	sub	sp, sp, #12
   17794:	ldr	r5, [pc, #452]	; 17960 <xcb_depth_next@plt+0x4000>
   17798:	mov	r9, r1
   1779c:	ldr	ip, [pc, #448]	; 17964 <xcb_depth_next@plt+0x4004>
   177a0:	mov	r8, r2
   177a4:	add	r5, pc, r5
   177a8:	mov	r7, r3
   177ac:	mov	r4, r0
   177b0:	ldr	r6, [r5, ip]
   177b4:	ldr	ip, [r6]
   177b8:	str	ip, [sp, #4]
   177bc:	bl	13498 <cairo_surface_status@plt>
   177c0:	cmp	r0, #0
   177c4:	bne	178a4 <xcb_depth_next@plt+0x3f44>
   177c8:	cmp	r9, #0
   177cc:	bne	17898 <xcb_depth_next@plt+0x3f38>
   177d0:	mov	r0, r4
   177d4:	bl	131b0 <cairo_surface_get_content@plt>
   177d8:	cmp	r0, #4096	; 0x1000
   177dc:	moveq	r0, #1
   177e0:	beq	177f0 <xcb_depth_next@plt+0x3e90>
   177e4:	cmp	r0, #8192	; 0x2000
   177e8:	moveq	r0, #2
   177ec:	movne	r0, #0
   177f0:	mov	r1, r8
   177f4:	mov	r2, r7
   177f8:	bl	1381c <cairo_image_surface_create@plt>
   177fc:	mov	r7, r0
   17800:	bl	131b0 <cairo_surface_get_content@plt>
   17804:	mov	r8, r0
   17808:	mov	r0, r4
   1780c:	bl	131b0 <cairo_surface_get_content@plt>
   17810:	cmp	r8, r0
   17814:	bne	17930 <xcb_depth_next@plt+0x3fd0>
   17818:	mov	r0, r7
   1781c:	bl	13954 <cairo_surface_reference@plt>
   17820:	mov	r8, r0
   17824:	mov	r0, r4
   17828:	bl	13894 <cairo_surface_get_type@plt>
   1782c:	cmp	r0, #16
   17830:	beq	178cc <xcb_depth_next@plt+0x3f6c>
   17834:	mov	r0, r7
   17838:	bl	13450 <cairo_create@plt>
   1783c:	mov	r5, r0
   17840:	mov	r0, r7
   17844:	bl	13708 <cairo_surface_destroy@plt>
   17848:	vldr	d0, [pc, #264]	; 17958 <xcb_depth_next@plt+0x3ff8>
   1784c:	mov	r1, r4
   17850:	vmov.f64	d1, d0
   17854:	mov	r0, r5
   17858:	bl	131bc <cairo_set_source_surface@plt>
   1785c:	mov	r0, r5
   17860:	bl	132dc <cairo_paint@plt>
   17864:	mov	r0, r5
   17868:	bl	13564 <cairo_status@plt>
   1786c:	cmp	r0, #0
   17870:	bne	178b0 <xcb_depth_next@plt+0x3f50>
   17874:	mov	r0, r5
   17878:	bl	13114 <cairo_destroy@plt>
   1787c:	mov	r0, r8
   17880:	ldr	r2, [sp, #4]
   17884:	ldr	r3, [r6]
   17888:	cmp	r2, r3
   1788c:	bne	1792c <xcb_depth_next@plt+0x3fcc>
   17890:	add	sp, sp, #12
   17894:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17898:	mov	r0, #13
   1789c:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   178a0:	b	17880 <xcb_depth_next@plt+0x3f20>
   178a4:	mov	r0, r4
   178a8:	bl	13954 <cairo_surface_reference@plt>
   178ac:	b	17880 <xcb_depth_next@plt+0x3f20>
   178b0:	mov	r0, r8
   178b4:	bl	13708 <cairo_surface_destroy@plt>
   178b8:	mov	r0, r5
   178bc:	bl	1318c <cairo_get_target@plt>
   178c0:	bl	13954 <cairo_surface_reference@plt>
   178c4:	mov	r8, r0
   178c8:	b	17874 <xcb_depth_next@plt+0x3f14>
   178cc:	ldr	r3, [pc, #148]	; 17968 <xcb_depth_next@plt+0x4008>
   178d0:	mov	r0, r4
   178d4:	ldr	r1, [r5, r3]
   178d8:	bl	1315c <cairo_surface_get_user_data@plt>
   178dc:	subs	r5, r0, #0
   178e0:	beq	17834 <xcb_depth_next@plt+0x3ed4>
   178e4:	mov	r0, r7
   178e8:	bl	13708 <cairo_surface_destroy@plt>
   178ec:	ldr	r1, [pc, #120]	; 1796c <xcb_depth_next@plt+0x400c>
   178f0:	mov	r2, r5
   178f4:	mov	r0, sp
   178f8:	add	r1, pc, r1
   178fc:	bl	16624 <xcb_depth_next@plt+0x2cc4>
   17900:	ldr	r0, [sp]
   17904:	bl	136e4 <cairo_script_create@plt>
   17908:	mov	r1, r8
   1790c:	mov	r5, r0
   17910:	bl	13888 <cairo_script_surface_create_for_target@plt>
   17914:	mov	r7, r0
   17918:	mov	r0, r5
   1791c:	bl	130e4 <cairo_device_destroy@plt>
   17920:	ldr	r0, [sp]
   17924:	bl	13300 <free@plt>
   17928:	b	17834 <xcb_depth_next@plt+0x3ed4>
   1792c:	bl	13618 <__stack_chk_fail@plt>
   17930:	ldr	r3, [pc, #56]	; 17970 <xcb_depth_next@plt+0x4010>
   17934:	movw	r2, #315	; 0x13b
   17938:	ldr	r0, [pc, #52]	; 17974 <xcb_depth_next@plt+0x4014>
   1793c:	ldr	r1, [pc, #52]	; 17978 <xcb_depth_next@plt+0x4018>
   17940:	add	r3, pc, r3
   17944:	add	r0, pc, r0
   17948:	add	r3, r3, #152	; 0x98
   1794c:	add	r1, pc, r1
   17950:	bl	13264 <__assert_fail@plt>
   17954:	nop	{0}
	...
   17960:	andeq	r5, r1, r4, asr r8
   17964:	andeq	r0, r0, r0, asr #6
   17968:	andeq	r0, r0, ip, lsr r3
   1796c:	andeq	r3, r0, ip, lsl #18
   17970:	strdeq	r3, [r0], -r4
   17974:	andeq	r3, r0, r8, ror r8
   17978:			; <UNDEFINED> instruction: 0x000037b8
   1797c:	bx	lr
   17980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17984:	sub	sp, sp, #4352	; 0x1100
   17988:	ldr	r4, [pc, #620]	; 17bfc <xcb_depth_next@plt+0x429c>
   1798c:	sub	sp, sp, #4
   17990:	ldr	ip, [pc, #616]	; 17c00 <xcb_depth_next@plt+0x42a0>
   17994:	mov	r7, r0
   17998:	add	r4, pc, r4
   1799c:	ldr	r0, [pc, #608]	; 17c04 <xcb_depth_next@plt+0x42a4>
   179a0:	mov	r9, r3
   179a4:	mov	r8, r1
   179a8:	ldr	ip, [r4, ip]
   179ac:	add	r1, sp, #8192	; 0x2000
   179b0:	add	r0, pc, r0
   179b4:	mov	sl, r2
   179b8:	ldr	r3, [ip]
   179bc:	str	ip, [sp, #28]
   179c0:	str	r3, [r1, #-3844]	; 0xfffff0fc
   179c4:	bl	13150 <getenv@plt>
   179c8:	subs	r6, r0, #0
   179cc:	beq	17bcc <xcb_depth_next@plt+0x426c>
   179d0:	ands	sl, sl, #1
   179d4:	addne	r5, sp, #252	; 0xfc
   179d8:	bne	17b60 <xcb_depth_next@plt+0x4200>
   179dc:	ldr	r1, [pc, #548]	; 17c08 <xcb_depth_next@plt+0x42a8>
   179e0:	mov	r0, #3
   179e4:	add	r2, sp, #32
   179e8:	add	r1, pc, r1
   179ec:	bl	135ac <__xstat64@plt>
   179f0:	cmp	r0, #0
   179f4:	blt	17a70 <xcb_depth_next@plt+0x4110>
   179f8:	ldr	r0, [pc, #524]	; 17c0c <xcb_depth_next@plt+0x42ac>
   179fc:	mov	r1, sl
   17a00:	add	r0, pc, r0
   17a04:	bl	134bc <open64@plt>
   17a08:	subs	fp, r0, #0
   17a0c:	blt	17a70 <xcb_depth_next@plt+0x4110>
   17a10:	add	r5, sp, #252	; 0xfc
   17a14:	mov	r2, #79	; 0x4f
   17a18:	mov	r1, r5
   17a1c:	bl	1330c <read@plt>
   17a20:	subs	r3, r0, #0
   17a24:	ble	17bc0 <xcb_depth_next@plt+0x4260>
   17a28:	mov	r1, sl
   17a2c:	mov	r2, #10
   17a30:	mov	r0, r5
   17a34:	strb	sl, [r5, r3]
   17a38:	bl	13480 <strtol@plt>
   17a3c:	mov	r3, r0
   17a40:	mov	r0, fp
   17a44:	str	r3, [sp, #24]
   17a48:	bl	13540 <close@plt>
   17a4c:	ldr	r3, [sp, #24]
   17a50:	cmp	r3, #0
   17a54:	ble	17a74 <xcb_depth_next@plt+0x4114>
   17a58:	mov	r0, r3
   17a5c:	mov	r1, sl
   17a60:	bl	13804 <kill@plt>
   17a64:	cmn	r0, #1
   17a68:	bne	17a84 <xcb_depth_next@plt+0x4124>
   17a6c:	b	17a74 <xcb_depth_next@plt+0x4114>
   17a70:	add	r5, sp, #252	; 0xfc
   17a74:	mov	r0, r6
   17a78:	bl	13174 <system@plt>
   17a7c:	cmp	r0, #0
   17a80:	bne	17b60 <xcb_depth_next@plt+0x4200>
   17a84:	mov	r0, #1
   17a88:	mov	r2, #0
   17a8c:	mov	r1, r0
   17a90:	bl	1336c <socket@plt>
   17a94:	cmn	r0, #1
   17a98:	mov	sl, r0
   17a9c:	beq	17b60 <xcb_depth_next@plt+0x4200>
   17aa0:	add	r3, sp, #140	; 0x8c
   17aa4:	mov	r1, #0
   17aa8:	mov	r2, #110	; 0x6e
   17aac:	str	r3, [sp, #24]
   17ab0:	mov	r0, r3
   17ab4:	add	fp, sp, #192	; 0xc0
   17ab8:	bl	131ec <memset@plt>
   17abc:	ldr	r2, [pc, #332]	; 17c10 <xcb_depth_next@plt+0x42b0>
   17ac0:	movw	ip, #61324	; 0xef8c
   17ac4:	movt	ip, #65535	; 0xffff
   17ac8:	add	r2, pc, r2
   17acc:	sub	lr, fp, #50	; 0x32
   17ad0:	ldm	r2!, {r0, r1}
   17ad4:	str	r0, [fp, #-50]	; 0xffffffce
   17ad8:	mov	r0, sl
   17adc:	str	r1, [fp, #-46]	; 0xffffffd2
   17ae0:	ldr	r3, [sp, #24]
   17ae4:	ldrb	fp, [r2, #2]
   17ae8:	mov	r1, r3
   17aec:	ldrh	r3, [r2]
   17af0:	mov	r2, #1
   17af4:	strb	fp, [lr, #10]
   17af8:	str	r3, [sp, #20]
   17afc:	add	r3, sp, #4352	; 0x1100
   17b00:	strh	r2, [r3, ip]
   17b04:	mov	r2, #110	; 0x6e
   17b08:	ldr	r3, [sp, #20]
   17b0c:	strh	r3, [lr, #8]
   17b10:	bl	13084 <connect@plt>
   17b14:	cmn	r0, #1
   17b18:	beq	17b58 <xcb_depth_next@plt+0x41f8>
   17b1c:	ldr	r3, [pc, #240]	; 17c14 <xcb_depth_next@plt+0x42b4>
   17b20:	mov	r1, #1
   17b24:	mov	r2, #4096	; 0x1000
   17b28:	str	r7, [sp]
   17b2c:	add	r3, pc, r3
   17b30:	str	r8, [sp, #4]
   17b34:	mov	r0, r5
   17b38:	bl	137c8 <__sprintf_chk@plt>
   17b3c:	mov	r1, r5
   17b40:	mov	fp, r0
   17b44:	mov	r0, sl
   17b48:	mov	r2, fp
   17b4c:	bl	13318 <write@plt>
   17b50:	cmp	r0, fp
   17b54:	beq	17bd8 <xcb_depth_next@plt+0x4278>
   17b58:	mov	r0, sl
   17b5c:	bl	13540 <close@plt>
   17b60:	ldr	ip, [pc, #176]	; 17c18 <xcb_depth_next@plt+0x42b8>
   17b64:	mov	r1, #1
   17b68:	ldr	r3, [pc, #172]	; 17c1c <xcb_depth_next@plt+0x42bc>
   17b6c:	mov	r0, r5
   17b70:	mov	r2, #4096	; 0x1000
   17b74:	ldr	ip, [r4, ip]
   17b78:	add	r3, pc, r3
   17b7c:	stm	sp, {r6, r7}
   17b80:	str	ip, [r9]
   17b84:	str	r8, [sp, #8]
   17b88:	bl	137c8 <__sprintf_chk@plt>
   17b8c:	ldr	r1, [pc, #140]	; 17c20 <xcb_depth_next@plt+0x42c0>
   17b90:	mov	r0, r5
   17b94:	add	r1, pc, r1
   17b98:	bl	13690 <popen@plt>
   17b9c:	add	r1, sp, #8192	; 0x2000
   17ba0:	ldr	r2, [r1, #-3844]	; 0xfffff0fc
   17ba4:	ldr	r1, [sp, #28]
   17ba8:	ldr	r3, [r1]
   17bac:	cmp	r2, r3
   17bb0:	bne	17bf8 <xcb_depth_next@plt+0x4298>
   17bb4:	add	sp, sp, #4352	; 0x1100
   17bb8:	add	sp, sp, #4
   17bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bc0:	mov	r0, fp
   17bc4:	bl	13540 <close@plt>
   17bc8:	b	17a74 <xcb_depth_next@plt+0x4114>
   17bcc:	ldr	r6, [pc, #80]	; 17c24 <xcb_depth_next@plt+0x42c4>
   17bd0:	add	r6, pc, r6
   17bd4:	b	179d0 <xcb_depth_next@plt+0x4070>
   17bd8:	ldr	r3, [pc, #72]	; 17c28 <xcb_depth_next@plt+0x42c8>
   17bdc:	mov	r0, sl
   17be0:	ldr	r1, [pc, #68]	; 17c2c <xcb_depth_next@plt+0x42cc>
   17be4:	ldr	r3, [r4, r3]
   17be8:	add	r1, pc, r1
   17bec:	str	r3, [r9]
   17bf0:	bl	13528 <fdopen@plt>
   17bf4:	b	17b9c <xcb_depth_next@plt+0x423c>
   17bf8:	bl	13618 <__stack_chk_fail@plt>
   17bfc:	andeq	r5, r1, r0, ror #12
   17c00:	andeq	r0, r0, r0, asr #6
   17c04:	andeq	r3, r0, r0, ror r8
   17c08:	andeq	r3, r0, r0, asr #16
   17c0c:	andeq	r3, r0, r4, lsr r8
   17c10:	andeq	r3, r0, r0, ror #14
   17c14:	andeq	r3, r0, r8, lsl r7
   17c18:	andeq	r0, r0, r4, lsr r3
   17c1c:	ldrdeq	r3, [r0], -r8
   17c20:			; <UNDEFINED> instruction: 0x000036b8
   17c24:	andeq	r3, r0, r4, asr #12
   17c28:	andeq	r0, r0, r0, lsr r3
   17c2c:	andeq	r3, r0, r4, ror #12
   17c30:	ldr	ip, [pc, #508]	; 17e34 <xcb_depth_next@plt+0x44d4>
   17c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c38:	add	ip, pc, ip
   17c3c:	ldr	lr, [pc, #500]	; 17e38 <xcb_depth_next@plt+0x44d8>
   17c40:	sub	sp, sp, #28
   17c44:	ldr	r1, [pc, #496]	; 17e3c <xcb_depth_next@plt+0x44dc>
   17c48:	add	r2, sp, #11
   17c4c:	add	r3, sp, #12
   17c50:	mov	r5, r0
   17c54:	ldr	r7, [ip, lr]
   17c58:	add	ip, sp, #16
   17c5c:	str	ip, [sp]
   17c60:	add	r1, pc, r1
   17c64:	ldr	ip, [r7]
   17c68:	str	ip, [sp, #20]
   17c6c:	bl	13930 <fscanf@plt>
   17c70:	cmp	r0, #3
   17c74:	beq	17ca4 <xcb_depth_next@plt+0x4344>
   17c78:	mov	r8, #0
   17c7c:	mov	r0, r8
   17c80:	bl	13708 <cairo_surface_destroy@plt>
   17c84:	mov	r0, #10
   17c88:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   17c8c:	ldr	r2, [sp, #20]
   17c90:	ldr	r3, [r7]
   17c94:	cmp	r2, r3
   17c98:	bne	17e30 <xcb_depth_next@plt+0x44d0>
   17c9c:	add	sp, sp, #28
   17ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ca4:	ldrb	r3, [sp, #11]
   17ca8:	cmp	r3, #54	; 0x36
   17cac:	beq	17e08 <xcb_depth_next@plt+0x44a8>
   17cb0:	cmp	r3, #55	; 0x37
   17cb4:	beq	17df0 <xcb_depth_next@plt+0x4490>
   17cb8:	cmp	r3, #53	; 0x35
   17cbc:	bne	17c78 <xcb_depth_next@plt+0x4318>
   17cc0:	mov	r0, #2
   17cc4:	ldr	r1, [sp, #12]
   17cc8:	ldr	r2, [sp, #16]
   17ccc:	bl	1381c <cairo_image_surface_create@plt>
   17cd0:	mov	r8, r0
   17cd4:	mov	r0, r8
   17cd8:	bl	13498 <cairo_surface_status@plt>
   17cdc:	subs	r9, r0, #0
   17ce0:	mov	r0, r8
   17ce4:	bne	17c8c <xcb_depth_next@plt+0x432c>
   17ce8:	bl	134ec <cairo_image_surface_get_data@plt>
   17cec:	mov	r4, r0
   17cf0:	mov	r0, r8
   17cf4:	bl	138c4 <cairo_image_surface_get_stride@plt>
   17cf8:	ldr	r3, [sp, #16]
   17cfc:	cmp	r3, #0
   17d00:	movgt	sl, r9
   17d04:	mov	r6, r0
   17d08:	bgt	17d30 <xcb_depth_next@plt+0x43d0>
   17d0c:	b	17e20 <xcb_depth_next@plt+0x44c0>
   17d10:	cmp	r2, #55	; 0x37
   17d14:	beq	17dcc <xcb_depth_next@plt+0x446c>
   17d18:	cmp	r2, #53	; 0x35
   17d1c:	beq	17dac <xcb_depth_next@plt+0x444c>
   17d20:	add	sl, sl, #1
   17d24:	add	r9, r9, r6
   17d28:	cmp	r3, sl
   17d2c:	ble	17e20 <xcb_depth_next@plt+0x44c0>
   17d30:	ldrb	r2, [sp, #11]
   17d34:	add	fp, r4, r9
   17d38:	cmp	r2, #54	; 0x36
   17d3c:	bne	17d10 <xcb_depth_next@plt+0x43b0>
   17d40:	ldr	r1, [sp, #12]
   17d44:	mov	r0, fp
   17d48:	mov	r2, r5
   17d4c:	add	r1, r1, r1, lsl #1
   17d50:	bl	16ad0 <xcb_depth_next@plt+0x3170>
   17d54:	cmp	r0, #0
   17d58:	beq	17c7c <xcb_depth_next@plt+0x431c>
   17d5c:	ldr	ip, [sp, #12]
   17d60:	cmp	ip, #0
   17d64:	sub	r1, ip, #1
   17d68:	add	r3, ip, ip, lsl #1
   17d6c:	addne	ip, r9, ip, lsl #2
   17d70:	add	r3, fp, r3
   17d74:	addne	ip, r4, ip
   17d78:	beq	17da4 <xcb_depth_next@plt+0x4444>
   17d7c:	ldrb	lr, [r3, #-3]!
   17d80:	sub	r1, r1, #1
   17d84:	cmn	r1, #1
   17d88:	ldrb	r2, [r3, #1]
   17d8c:	ldrb	r0, [r3, #2]
   17d90:	lsl	r2, r2, #8
   17d94:	orr	r2, r2, lr, lsl #16
   17d98:	orr	r2, r2, r0
   17d9c:	str	r2, [ip, #-4]!
   17da0:	bne	17d7c <xcb_depth_next@plt+0x441c>
   17da4:	ldr	r3, [sp, #16]
   17da8:	b	17d20 <xcb_depth_next@plt+0x43c0>
   17dac:	mov	r0, fp
   17db0:	ldr	r1, [sp, #12]
   17db4:	mov	r2, r5
   17db8:	bl	16ad0 <xcb_depth_next@plt+0x3170>
   17dbc:	cmp	r0, #0
   17dc0:	beq	17c7c <xcb_depth_next@plt+0x431c>
   17dc4:	ldr	r3, [sp, #16]
   17dc8:	b	17d20 <xcb_depth_next@plt+0x43c0>
   17dcc:	ldr	r1, [sp, #12]
   17dd0:	mov	r0, fp
   17dd4:	mov	r2, r5
   17dd8:	lsl	r1, r1, #2
   17ddc:	bl	16ad0 <xcb_depth_next@plt+0x3170>
   17de0:	cmp	r0, #0
   17de4:	beq	17c7c <xcb_depth_next@plt+0x431c>
   17de8:	ldr	r3, [sp, #16]
   17dec:	b	17d20 <xcb_depth_next@plt+0x43c0>
   17df0:	mov	r0, #0
   17df4:	ldr	r1, [sp, #12]
   17df8:	ldr	r2, [sp, #16]
   17dfc:	bl	1381c <cairo_image_surface_create@plt>
   17e00:	mov	r8, r0
   17e04:	b	17cd4 <xcb_depth_next@plt+0x4374>
   17e08:	mov	r0, #1
   17e0c:	ldr	r1, [sp, #12]
   17e10:	ldr	r2, [sp, #16]
   17e14:	bl	1381c <cairo_image_surface_create@plt>
   17e18:	mov	r8, r0
   17e1c:	b	17cd4 <xcb_depth_next@plt+0x4374>
   17e20:	mov	r0, r8
   17e24:	bl	132f4 <cairo_surface_mark_dirty@plt>
   17e28:	mov	r0, r8
   17e2c:	b	17c8c <xcb_depth_next@plt+0x432c>
   17e30:	bl	13618 <__stack_chk_fail@plt>
   17e34:	andeq	r5, r1, r0, asr #7
   17e38:	andeq	r0, r0, r0, asr #6
   17e3c:	strdeq	r3, [r0], -ip
   17e40:	ldr	r3, [pc, #200]	; 17f10 <xcb_depth_next@plt+0x45b0>
   17e44:	ldr	r2, [pc, #200]	; 17f14 <xcb_depth_next@plt+0x45b4>
   17e48:	add	r3, pc, r3
   17e4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17e50:	sub	sp, sp, #8
   17e54:	ldr	sl, [r3, r2]
   17e58:	mov	r8, r0
   17e5c:	mov	r7, r1
   17e60:	mov	r4, #0
   17e64:	ldr	r3, [sl]
   17e68:	str	r3, [sp, #4]
   17e6c:	mov	r0, r8
   17e70:	mov	r1, r7
   17e74:	mov	r2, r4
   17e78:	mov	r3, sp
   17e7c:	bl	17980 <xcb_depth_next@plt+0x4020>
   17e80:	subs	r6, r0, #0
   17e84:	beq	17ef0 <xcb_depth_next@plt+0x4590>
   17e88:	bl	17c30 <xcb_depth_next@plt+0x42d0>
   17e8c:	ldr	r2, [sp]
   17e90:	mov	r5, r0
   17e94:	mov	r0, r6
   17e98:	blx	r2
   17e9c:	cmp	r0, #0
   17ea0:	mov	r0, r5
   17ea4:	bne	17ecc <xcb_depth_next@plt+0x456c>
   17ea8:	bl	13498 <cairo_surface_status@plt>
   17eac:	cmp	r0, #10
   17eb0:	mov	r0, r5
   17eb4:	bne	17ed8 <xcb_depth_next@plt+0x4578>
   17eb8:	cmp	r4, #0
   17ebc:	bne	17ed8 <xcb_depth_next@plt+0x4578>
   17ec0:	mov	r4, #1
   17ec4:	bl	13708 <cairo_surface_destroy@plt>
   17ec8:	b	17e6c <xcb_depth_next@plt+0x450c>
   17ecc:	bl	13708 <cairo_surface_destroy@plt>
   17ed0:	mov	r0, #6
   17ed4:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   17ed8:	ldr	r2, [sp, #4]
   17edc:	ldr	r3, [sl]
   17ee0:	cmp	r2, r3
   17ee4:	bne	17f0c <xcb_depth_next@plt+0x45ac>
   17ee8:	add	sp, sp, #8
   17eec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ef0:	bl	1390c <__errno_location@plt>
   17ef4:	ldr	r3, [r0]
   17ef8:	cmp	r3, #12
   17efc:	moveq	r0, #1
   17f00:	movne	r0, #10
   17f04:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   17f08:	b	17ed8 <xcb_depth_next@plt+0x4578>
   17f0c:	bl	13618 <__stack_chk_fail@plt>
   17f10:			; <UNDEFINED> instruction: 0x000151b0
   17f14:	andeq	r0, r0, r0, asr #6
   17f18:	movw	r0, #11512	; 0x2cf8
   17f1c:	bx	lr
   17f20:	ldr	r0, [pc, #4]	; 17f2c <xcb_depth_next@plt+0x45cc>
   17f24:	add	r0, pc, r0
   17f28:	bx	lr
   17f2c:	andeq	r3, r0, r8, asr #6
   17f30:	push	{r3, r4, r5, lr}
   17f34:	ldr	r5, [pc, #40]	; 17f64 <xcb_depth_next@plt+0x4604>
   17f38:	add	r5, pc, r5
   17f3c:	ldr	r0, [r5, #4]
   17f40:	cmp	r0, #0
   17f44:	popeq	{r3, r4, r5, pc}
   17f48:	ldr	r4, [r0]
   17f4c:	bl	13300 <free@plt>
   17f50:	cmp	r4, #0
   17f54:	mov	r0, r4
   17f58:	str	r4, [r5, #4]
   17f5c:	bne	17f48 <xcb_depth_next@plt+0x45e8>
   17f60:	pop	{r3, r4, r5, pc}
   17f64:	andeq	r5, r1, r0, lsr #8
   17f68:	push	{r3, lr}
   17f6c:	bl	17030 <xcb_depth_next@plt+0x36d0>
   17f70:	bl	18aec <xcb_depth_next@plt+0x518c>
   17f74:	bl	19d74 <xcb_depth_next@plt+0x6414>
   17f78:	bl	19ff4 <xcb_depth_next@plt+0x6694>
   17f7c:	bl	1a8f4 <xcb_depth_next@plt+0x6f94>
   17f80:	bl	1aa98 <xcb_depth_next@plt+0x7138>
   17f84:	bl	1aaac <xcb_depth_next@plt+0x714c>
   17f88:	bl	1aab0 <xcb_depth_next@plt+0x7150>
   17f8c:	pop	{r3, lr}
   17f90:	b	1aab4 <xcb_depth_next@plt+0x7154>
   17f94:	push	{r3, lr}
   17f98:	bl	13864 <cairo_surface_get_device@plt>
   17f9c:	mov	r1, #0
   17fa0:	pop	{r3, lr}
   17fa4:	b	13270 <cairo_xlib_device_debug_set_precision@plt>
   17fa8:	push	{r4, lr}
   17fac:	mov	r4, r0
   17fb0:	ldm	r0, {r0, r1}
   17fb4:	bl	13780 <XFreePixmap@plt>
   17fb8:	mov	r0, r4
   17fbc:	pop	{r4, lr}
   17fc0:	b	13300 <free@plt>
   17fc4:	push	{r4, r5, r6, r7, r8, lr}
   17fc8:	sub	sp, sp, #8
   17fcc:	mov	r6, r1
   17fd0:	mov	r4, r0
   17fd4:	ldr	r5, [sp, #32]
   17fd8:	mov	r1, #1
   17fdc:	mov	r8, r2
   17fe0:	mov	r7, r3
   17fe4:	ldr	r0, [r5]
   17fe8:	bl	13330 <XSynchronize@plt>
   17fec:	cmp	r6, #4096	; 0x1000
   17ff0:	beq	18088 <xcb_depth_next@plt+0x4728>
   17ff4:	cmp	r6, #12288	; 0x3000
   17ff8:	movne	r0, #0
   17ffc:	bne	18080 <xcb_depth_next@plt+0x4720>
   18000:	mov	r0, r4
   18004:	mov	r1, #0
   18008:	bl	1309c <XRenderFindStandardFormat@plt>
   1800c:	mov	r6, r0
   18010:	cmp	r6, #0
   18014:	beq	1809c <xcb_depth_next@plt+0x473c>
   18018:	ldr	r1, [r4, #132]	; 0x84
   1801c:	mov	r2, r8
   18020:	ldr	lr, [r4, #140]	; 0x8c
   18024:	mov	r3, r7
   18028:	ldr	ip, [r6, #8]
   1802c:	mov	r0, r4
   18030:	add	r1, r1, r1, lsl #2
   18034:	add	r1, lr, r1, lsl #4
   18038:	ldr	r1, [r1, #8]
   1803c:	str	ip, [sp]
   18040:	bl	137f8 <XCreatePixmap@plt>
   18044:	mov	r3, #1
   18048:	mov	r1, r0
   1804c:	stmib	r5, {r1, r3}
   18050:	ldr	ip, [r4, #132]	; 0x84
   18054:	mov	r3, r6
   18058:	ldr	r2, [r4, #140]	; 0x8c
   1805c:	mov	r0, r4
   18060:	str	r8, [sp]
   18064:	add	ip, ip, ip, lsl #2
   18068:	str	r7, [sp, #4]
   1806c:	add	r2, r2, ip, lsl #4
   18070:	bl	132b8 <cairo_xlib_surface_create_with_xrender_format@plt>
   18074:	mov	r6, r0
   18078:	bl	17f94 <xcb_depth_next@plt+0x4634>
   1807c:	mov	r0, r6
   18080:	add	sp, sp, #8
   18084:	pop	{r4, r5, r6, r7, r8, pc}
   18088:	mov	r0, r4
   1808c:	mov	r1, #1
   18090:	bl	1309c <XRenderFindStandardFormat@plt>
   18094:	mov	r6, r0
   18098:	b	18010 <xcb_depth_next@plt+0x46b0>
   1809c:	mov	r0, r6
   180a0:	b	18080 <xcb_depth_next@plt+0x4720>
   180a4:	push	{lr}		; (str lr, [sp, #-4]!)
   180a8:	sub	sp, sp, #20
   180ac:	mov	r1, r0
   180b0:	mov	r2, #0
   180b4:	ldr	r0, [r0]
   180b8:	mov	ip, #1
   180bc:	ldr	r1, [r1, #4]
   180c0:	mov	r3, r2
   180c4:	mvn	lr, #0
   180c8:	str	ip, [sp]
   180cc:	stmib	sp, {ip, lr}
   180d0:	mov	ip, #2
   180d4:	str	ip, [sp, #12]
   180d8:	bl	136b4 <XGetImage@plt>
   180dc:	subs	r3, r0, #0
   180e0:	beq	180ec <xcb_depth_next@plt+0x478c>
   180e4:	ldr	r3, [r3, #68]	; 0x44
   180e8:	blx	r3
   180ec:	add	sp, sp, #20
   180f0:	pop	{pc}		; (ldr pc, [sp], #4)
   180f4:	push	{r4, lr}
   180f8:	mov	r4, r0
   180fc:	ldr	r1, [r0, #4]
   18100:	cmp	r1, #0
   18104:	beq	1811c <xcb_depth_next@plt+0x47bc>
   18108:	ldr	r3, [r0, #8]
   1810c:	ldr	r0, [r0]
   18110:	cmp	r3, #0
   18114:	bne	18130 <xcb_depth_next@plt+0x47d0>
   18118:	bl	1333c <XDestroyWindow@plt>
   1811c:	ldr	r0, [r4]
   18120:	bl	13354 <XCloseDisplay@plt>
   18124:	mov	r0, r4
   18128:	pop	{r4, lr}
   1812c:	b	13300 <free@plt>
   18130:	bl	13780 <XFreePixmap@plt>
   18134:	b	1811c <xcb_depth_next@plt+0x47bc>
   18138:	ldr	r0, [pc, #580]	; 18384 <xcb_depth_next@plt+0x4a24>
   1813c:	cmp	r2, #1
   18140:	ldr	ip, [pc, #576]	; 18388 <xcb_depth_next@plt+0x4a28>
   18144:	add	r0, pc, r0
   18148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1814c:	vpush	{d8-d10}
   18150:	mov	r2, r0
   18154:	ldr	r6, [r0, ip]
   18158:	sub	sp, sp, #100	; 0x64
   1815c:	vmov.f64	d8, d0
   18160:	mov	r4, r3
   18164:	ldr	r2, [r6]
   18168:	vmov.f64	d10, d1
   1816c:	str	r2, [sp, #92]	; 0x5c
   18170:	beq	18368 <xcb_depth_next@plt+0x4a08>
   18174:	cmp	r1, #12288	; 0x3000
   18178:	beq	18368 <xcb_depth_next@plt+0x4a08>
   1817c:	mov	r0, #12
   18180:	vmov.f64	d9, #112	; 0x3f800000  1.0
   18184:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   18188:	vmov.f64	d0, d8
   1818c:	str	r0, [r4]
   18190:	mov	r5, r0
   18194:	bl	13918 <ceil@plt>
   18198:	vmov.f64	d8, d0
   1819c:	vcmp.f64	d8, d9
   181a0:	vmov.f64	d0, d10
   181a4:	vmrs	APSR_nzcv, fpscr
   181a8:	vmovmi.f64	d8, d9
   181ac:	bl	13918 <ceil@plt>
   181b0:	mov	r0, #0
   181b4:	vmov.f64	d10, d0
   181b8:	vcmp.f64	d0, d9
   181bc:	vmrs	APSR_nzcv, fpscr
   181c0:	vmovmi.f64	d10, d9
   181c4:	bl	132a0 <XOpenDisplay@plt>
   181c8:	cmp	r0, #0
   181cc:	mov	r4, r0
   181d0:	str	r0, [r5]
   181d4:	beq	18370 <xcb_depth_next@plt+0x4a10>
   181d8:	mov	r1, #1
   181dc:	bl	13330 <XSynchronize@plt>
   181e0:	vcvt.s32.f64	s15, d8
   181e4:	ldr	r7, [r4, #132]	; 0x84
   181e8:	mov	r0, r4
   181ec:	mov	r1, r7
   181f0:	vmov	r8, s15
   181f4:	bl	13588 <XScreenOfDisplay@plt>
   181f8:	ldr	r3, [r0, #12]
   181fc:	cmp	r8, r3
   18200:	ble	18234 <xcb_depth_next@plt+0x48d4>
   18204:	mov	r0, r4
   18208:	bl	13354 <XCloseDisplay@plt>
   1820c:	mov	r0, r5
   18210:	bl	13300 <free@plt>
   18214:	mov	r0, #0
   18218:	ldr	r2, [sp, #92]	; 0x5c
   1821c:	ldr	r3, [r6]
   18220:	cmp	r2, r3
   18224:	bne	18380 <xcb_depth_next@plt+0x4a20>
   18228:	add	sp, sp, #100	; 0x64
   1822c:	vpop	{d8-d10}
   18230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18234:	vcvt.s32.f64	s15, d10
   18238:	ldr	r3, [r0, #16]
   1823c:	vmov	fp, s15
   18240:	cmp	fp, r3
   18244:	bgt	18204 <xcb_depth_next@plt+0x48a4>
   18248:	ldr	r2, [r4, #132]	; 0x84
   1824c:	vcvt.u32.f64	s16, d8
   18250:	add	r7, r7, r7, lsl #2
   18254:	ldr	r3, [r4, #140]	; 0x8c
   18258:	mov	r9, #0
   1825c:	mov	lr, #1
   18260:	add	r2, r2, r2, lsl #2
   18264:	lsl	r7, r7, #4
   18268:	add	ip, r3, r7
   1826c:	str	lr, [sp, #80]	; 0x50
   18270:	add	r1, r3, r2, lsl #4
   18274:	mov	r0, r4
   18278:	mov	r2, r9
   1827c:	mov	r3, r9
   18280:	vcvt.u32.f64	s20, d10
   18284:	ldr	r1, [r1, #8]
   18288:	str	r9, [sp, #8]
   1828c:	vstr	s16, [sp]
   18290:	vstr	s20, [sp, #4]
   18294:	ldr	sl, [ip, #36]	; 0x24
   18298:	str	lr, [sp, #16]
   1829c:	mov	lr, #512	; 0x200
   182a0:	str	sl, [sp, #12]
   182a4:	ldr	ip, [ip, #40]	; 0x28
   182a8:	str	lr, [sp, #24]
   182ac:	add	lr, sp, #32
   182b0:	str	lr, [sp, #28]
   182b4:	str	ip, [sp, #20]
   182b8:	bl	13210 <XCreateWindow@plt>
   182bc:	mov	r1, r0
   182c0:	str	r0, [r5, #4]
   182c4:	mov	r0, r4
   182c8:	bl	134e0 <XMapWindow@plt>
   182cc:	str	r9, [r5, #8]
   182d0:	ldr	r2, [r4, #140]	; 0x8c
   182d4:	mov	r3, r8
   182d8:	ldr	r1, [r5, #4]
   182dc:	mov	r0, r4
   182e0:	add	r2, r2, r7
   182e4:	ldr	r2, [r2, #40]	; 0x28
   182e8:	str	fp, [sp]
   182ec:	bl	13468 <cairo_xlib_surface_create@plt>
   182f0:	mov	r9, r0
   182f4:	bl	13864 <cairo_surface_get_device@plt>
   182f8:	mvn	r1, #0
   182fc:	mov	r2, r1
   18300:	bl	13750 <cairo_xlib_device_debug_cap_xrender_version@plt>
   18304:	ldr	r2, [r4, #140]	; 0x8c
   18308:	ldr	r1, [r5, #4]
   1830c:	mov	r3, r8
   18310:	add	r7, r2, r7
   18314:	mov	r0, r4
   18318:	ldr	r2, [r7, #40]	; 0x28
   1831c:	str	fp, [sp]
   18320:	bl	13468 <cairo_xlib_surface_create@plt>
   18324:	mov	r4, r0
   18328:	mov	r0, r9
   1832c:	bl	13708 <cairo_surface_destroy@plt>
   18330:	mov	r0, r4
   18334:	bl	13498 <cairo_surface_status@plt>
   18338:	cmp	r0, #0
   1833c:	bne	18350 <xcb_depth_next@plt+0x49f0>
   18340:	mov	r0, r4
   18344:	bl	17f94 <xcb_depth_next@plt+0x4634>
   18348:	mov	r0, r4
   1834c:	b	18218 <xcb_depth_next@plt+0x48b8>
   18350:	mov	r0, r5
   18354:	bl	180f4 <xcb_depth_next@plt+0x4794>
   18358:	mov	r0, r4
   1835c:	bl	17f94 <xcb_depth_next@plt+0x4634>
   18360:	mov	r0, r4
   18364:	b	18218 <xcb_depth_next@plt+0x48b8>
   18368:	mov	r0, #0
   1836c:	b	18218 <xcb_depth_next@plt+0x48b8>
   18370:	mov	r0, r5
   18374:	bl	13300 <free@plt>
   18378:	mov	r0, r4
   1837c:	b	18218 <xcb_depth_next@plt+0x48b8>
   18380:	bl	13618 <__stack_chk_fail@plt>
   18384:			; <UNDEFINED> instruction: 0x00014eb4
   18388:	andeq	r0, r0, r0, asr #6
   1838c:	ldr	r0, [pc, #516]	; 18598 <xcb_depth_next@plt+0x4c38>
   18390:	cmp	r2, #1
   18394:	ldr	ip, [pc, #512]	; 1859c <xcb_depth_next@plt+0x4c3c>
   18398:	add	r0, pc, r0
   1839c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183a0:	vpush	{d8-d10}
   183a4:	mov	r2, r0
   183a8:	ldr	r6, [r0, ip]
   183ac:	sub	sp, sp, #100	; 0x64
   183b0:	vmov.f64	d8, d0
   183b4:	mov	r4, r3
   183b8:	ldr	r2, [r6]
   183bc:	vmov.f64	d10, d1
   183c0:	str	r2, [sp, #92]	; 0x5c
   183c4:	beq	1857c <xcb_depth_next@plt+0x4c1c>
   183c8:	cmp	r1, #12288	; 0x3000
   183cc:	beq	1857c <xcb_depth_next@plt+0x4c1c>
   183d0:	mov	r0, #12
   183d4:	vmov.f64	d9, #112	; 0x3f800000  1.0
   183d8:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   183dc:	vmov.f64	d0, d8
   183e0:	str	r0, [r4]
   183e4:	mov	r5, r0
   183e8:	bl	13918 <ceil@plt>
   183ec:	vmov.f64	d8, d0
   183f0:	vcmp.f64	d8, d9
   183f4:	vmov.f64	d0, d10
   183f8:	vmrs	APSR_nzcv, fpscr
   183fc:	vmovmi.f64	d8, d9
   18400:	bl	13918 <ceil@plt>
   18404:	mov	r0, #0
   18408:	vmov.f64	d10, d0
   1840c:	vcmp.f64	d0, d9
   18410:	vmrs	APSR_nzcv, fpscr
   18414:	vmovmi.f64	d10, d9
   18418:	bl	132a0 <XOpenDisplay@plt>
   1841c:	cmp	r0, #0
   18420:	mov	r4, r0
   18424:	str	r0, [r5]
   18428:	beq	18584 <xcb_depth_next@plt+0x4c24>
   1842c:	mov	r1, #1
   18430:	bl	13330 <XSynchronize@plt>
   18434:	vcvt.s32.f64	s15, d8
   18438:	ldr	r7, [r4, #132]	; 0x84
   1843c:	mov	r0, r4
   18440:	mov	r1, r7
   18444:	vmov	r8, s15
   18448:	bl	13588 <XScreenOfDisplay@plt>
   1844c:	ldr	r3, [r0, #12]
   18450:	cmp	r8, r3
   18454:	ble	18488 <xcb_depth_next@plt+0x4b28>
   18458:	mov	r0, r4
   1845c:	bl	13354 <XCloseDisplay@plt>
   18460:	mov	r0, r5
   18464:	bl	13300 <free@plt>
   18468:	mov	r0, #0
   1846c:	ldr	r2, [sp, #92]	; 0x5c
   18470:	ldr	r3, [r6]
   18474:	cmp	r2, r3
   18478:	bne	18594 <xcb_depth_next@plt+0x4c34>
   1847c:	add	sp, sp, #100	; 0x64
   18480:	vpop	{d8-d10}
   18484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18488:	vcvt.s32.f64	s15, d10
   1848c:	ldr	r3, [r0, #16]
   18490:	vmov	fp, s15
   18494:	cmp	fp, r3
   18498:	bgt	18458 <xcb_depth_next@plt+0x4af8>
   1849c:	ldr	r2, [r4, #132]	; 0x84
   184a0:	vcvt.u32.f64	s16, d8
   184a4:	add	r7, r7, r7, lsl #2
   184a8:	ldr	r3, [r4, #140]	; 0x8c
   184ac:	mov	r9, #0
   184b0:	mov	lr, #1
   184b4:	add	r2, r2, r2, lsl #2
   184b8:	lsl	r7, r7, #4
   184bc:	add	ip, r3, r7
   184c0:	str	lr, [sp, #80]	; 0x50
   184c4:	add	r1, r3, r2, lsl #4
   184c8:	mov	r0, r4
   184cc:	mov	r2, r9
   184d0:	mov	r3, r9
   184d4:	vcvt.u32.f64	s20, d10
   184d8:	ldr	r1, [r1, #8]
   184dc:	vstr	s16, [sp]
   184e0:	str	r9, [sp, #8]
   184e4:	vstr	s20, [sp, #4]
   184e8:	ldr	sl, [ip, #36]	; 0x24
   184ec:	str	lr, [sp, #16]
   184f0:	mov	lr, #512	; 0x200
   184f4:	str	sl, [sp, #12]
   184f8:	ldr	ip, [ip, #40]	; 0x28
   184fc:	str	lr, [sp, #24]
   18500:	add	lr, sp, #32
   18504:	str	lr, [sp, #28]
   18508:	str	ip, [sp, #20]
   1850c:	bl	13210 <XCreateWindow@plt>
   18510:	mov	r1, r0
   18514:	str	r0, [r5, #4]
   18518:	mov	r0, r4
   1851c:	bl	134e0 <XMapWindow@plt>
   18520:	str	r9, [r5, #8]
   18524:	ldr	r2, [r4, #140]	; 0x8c
   18528:	mov	r3, r8
   1852c:	ldr	r1, [r5, #4]
   18530:	mov	r0, r4
   18534:	add	r7, r2, r7
   18538:	ldr	r2, [r7, #40]	; 0x28
   1853c:	str	fp, [sp]
   18540:	bl	13468 <cairo_xlib_surface_create@plt>
   18544:	mov	r4, r0
   18548:	bl	13498 <cairo_surface_status@plt>
   1854c:	cmp	r0, r9
   18550:	bne	18564 <xcb_depth_next@plt+0x4c04>
   18554:	mov	r0, r4
   18558:	bl	17f94 <xcb_depth_next@plt+0x4634>
   1855c:	mov	r0, r4
   18560:	b	1846c <xcb_depth_next@plt+0x4b0c>
   18564:	mov	r0, r5
   18568:	bl	180f4 <xcb_depth_next@plt+0x4794>
   1856c:	mov	r0, r4
   18570:	bl	17f94 <xcb_depth_next@plt+0x4634>
   18574:	mov	r0, r4
   18578:	b	1846c <xcb_depth_next@plt+0x4b0c>
   1857c:	mov	r0, #0
   18580:	b	1846c <xcb_depth_next@plt+0x4b0c>
   18584:	mov	r0, r5
   18588:	bl	13300 <free@plt>
   1858c:	mov	r0, r4
   18590:	b	1846c <xcb_depth_next@plt+0x4b0c>
   18594:	bl	13618 <__stack_chk_fail@plt>
   18598:	andeq	r4, r1, r0, ror #24
   1859c:	andeq	r0, r0, r0, asr #6
   185a0:	push	{r4, r5, r6, r7, r8, lr}
   185a4:	mov	r8, r0
   185a8:	sub	sp, sp, #8
   185ac:	mov	r0, #8
   185b0:	mov	r7, r1
   185b4:	mov	r6, r2
   185b8:	mov	r5, r3
   185bc:	bl	135f4 <malloc@plt>
   185c0:	mov	r4, r0
   185c4:	mov	r0, r8
   185c8:	bl	1357c <cairo_xlib_surface_get_display@plt>
   185cc:	cmp	r7, #4096	; 0x1000
   185d0:	moveq	r1, #1
   185d4:	str	r0, [r4]
   185d8:	beq	185e8 <xcb_depth_next@plt+0x4c88>
   185dc:	cmp	r7, #8192	; 0x2000
   185e0:	moveq	r1, #2
   185e4:	movne	r1, #0
   185e8:	bl	1309c <XRenderFindStandardFormat@plt>
   185ec:	ldr	r1, [r4]
   185f0:	mov	r2, r6
   185f4:	mov	r3, r5
   185f8:	ldr	ip, [r1, #132]	; 0x84
   185fc:	add	ip, ip, ip, lsl #2
   18600:	ldr	lr, [r0, #8]
   18604:	mov	r7, r0
   18608:	mov	r0, r1
   1860c:	ldr	r1, [r1, #140]	; 0x8c
   18610:	add	ip, r1, ip, lsl #4
   18614:	ldr	r1, [ip, #8]
   18618:	str	lr, [sp]
   1861c:	bl	137f8 <XCreatePixmap@plt>
   18620:	ldr	ip, [r4]
   18624:	mov	r3, r7
   18628:	str	r0, [r4, #4]
   1862c:	mov	r1, r0
   18630:	ldr	lr, [ip, #132]	; 0x84
   18634:	mov	r0, ip
   18638:	ldr	r2, [ip, #140]	; 0x8c
   1863c:	str	r5, [sp, #4]
   18640:	add	lr, lr, lr, lsl #2
   18644:	str	r6, [sp]
   18648:	add	r2, r2, lr, lsl #4
   1864c:	bl	132b8 <cairo_xlib_surface_create_with_xrender_format@plt>
   18650:	ldr	r1, [pc, #32]	; 18678 <xcb_depth_next@plt+0x4d18>
   18654:	ldr	r3, [pc, #32]	; 1867c <xcb_depth_next@plt+0x4d1c>
   18658:	mov	r2, r4
   1865c:	add	r1, pc, r1
   18660:	add	r3, pc, r3
   18664:	mov	r5, r0
   18668:	bl	137bc <cairo_surface_set_user_data@plt>
   1866c:	mov	r0, r5
   18670:	add	sp, sp, #8
   18674:	pop	{r4, r5, r6, r7, r8, pc}
   18678:	andeq	r4, r1, r8, lsl #26
   1867c:			; <UNDEFINED> instruction: 0xfffff940
   18680:	ldr	ip, [pc, #396]	; 18814 <xcb_depth_next@plt+0x4eb4>
   18684:	cmp	r1, #4096	; 0x1000
   18688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1868c:	add	ip, pc, ip
   18690:	ldr	r5, [pc, #384]	; 18818 <xcb_depth_next@plt+0x4eb8>
   18694:	mov	r7, r3
   18698:	mov	r3, ip
   1869c:	sub	sp, sp, #108	; 0x6c
   186a0:	mov	r6, r2
   186a4:	mov	r4, r0
   186a8:	ldr	r5, [ip, r5]
   186ac:	ldr	r8, [sp, #144]	; 0x90
   186b0:	ldr	r9, [sp, #148]	; 0x94
   186b4:	ldr	r3, [r5]
   186b8:	str	r3, [sp, #100]	; 0x64
   186bc:	beq	18738 <xcb_depth_next@plt+0x4dd8>
   186c0:	cmp	r1, #12288	; 0x3000
   186c4:	bne	1874c <xcb_depth_next@plt+0x4dec>
   186c8:	mov	r1, #0
   186cc:	bl	1309c <XRenderFindStandardFormat@plt>
   186d0:	subs	sl, r0, #0
   186d4:	beq	1874c <xcb_depth_next@plt+0x4dec>
   186d8:	ldr	r1, [r4, #132]	; 0x84
   186dc:	mov	r3, r7
   186e0:	ldr	lr, [r4, #140]	; 0x8c
   186e4:	mov	r0, r4
   186e8:	ldr	ip, [sl, #8]
   186ec:	mov	r2, r6
   186f0:	add	r1, r1, r1, lsl #2
   186f4:	add	r1, lr, r1, lsl #4
   186f8:	ldr	r1, [r1, #8]
   186fc:	str	ip, [sp]
   18700:	bl	137f8 <XCreatePixmap@plt>
   18704:	mov	r3, #1
   18708:	str	r0, [r8]
   1870c:	str	r3, [r9]
   18710:	ldr	ip, [r4, #132]	; 0x84
   18714:	mov	r3, sl
   18718:	ldr	r2, [r4, #140]	; 0x8c
   1871c:	mov	r0, r4
   18720:	ldr	r1, [r8]
   18724:	add	ip, ip, ip, lsl #2
   18728:	stm	sp, {r6, r7}
   1872c:	add	r2, r2, ip, lsl #4
   18730:	bl	132b8 <cairo_xlib_surface_create_with_xrender_format@plt>
   18734:	b	18750 <xcb_depth_next@plt+0x4df0>
   18738:	ldr	r1, [r0, #132]	; 0x84
   1873c:	bl	13588 <XScreenOfDisplay@plt>
   18740:	ldr	r3, [r0, #12]
   18744:	cmp	r6, r3
   18748:	ble	18768 <xcb_depth_next@plt+0x4e08>
   1874c:	mov	r0, #0
   18750:	ldr	r2, [sp, #100]	; 0x64
   18754:	ldr	r3, [r5]
   18758:	cmp	r2, r3
   1875c:	bne	18810 <xcb_depth_next@plt+0x4eb0>
   18760:	add	sp, sp, #108	; 0x6c
   18764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18768:	ldr	r3, [r0, #16]
   1876c:	cmp	r7, r3
   18770:	bgt	1874c <xcb_depth_next@plt+0x4dec>
   18774:	ldr	r3, [r4, #132]	; 0x84
   18778:	mov	r0, r4
   1877c:	ldr	r2, [r4, #140]	; 0x8c
   18780:	add	r3, r3, r3, lsl #2
   18784:	add	r3, r2, r3, lsl #4
   18788:	ldr	r3, [r3, #40]	; 0x28
   1878c:	mov	r1, r3
   18790:	str	r3, [sp, #32]
   18794:	bl	13018 <XRenderFindVisualFormat@plt>
   18798:	subs	sl, r0, #0
   1879c:	beq	1874c <xcb_depth_next@plt+0x4dec>
   187a0:	ldr	r3, [r4, #132]	; 0x84
   187a4:	mov	fp, #0
   187a8:	ldr	r1, [r4, #140]	; 0x8c
   187ac:	mov	r0, #1
   187b0:	str	r0, [sp, #88]	; 0x58
   187b4:	mov	r2, fp
   187b8:	add	lr, r3, r3, lsl #2
   187bc:	mov	r3, fp
   187c0:	add	r1, r1, lr, lsl #4
   187c4:	mov	lr, #512	; 0x200
   187c8:	ldr	r1, [r1, #8]
   187cc:	stm	sp, {r6, r7, fp}
   187d0:	ldr	ip, [sl, #8]
   187d4:	str	r0, [sp, #16]
   187d8:	mov	r0, r4
   187dc:	str	lr, [sp, #24]
   187e0:	str	ip, [sp, #12]
   187e4:	ldr	ip, [sp, #32]
   187e8:	str	ip, [sp, #20]
   187ec:	add	ip, sp, #40	; 0x28
   187f0:	str	ip, [sp, #28]
   187f4:	bl	13210 <XCreateWindow@plt>
   187f8:	mov	r1, r0
   187fc:	str	r0, [r8]
   18800:	mov	r0, r4
   18804:	bl	134e0 <XMapWindow@plt>
   18808:	str	fp, [r9]
   1880c:	b	18710 <xcb_depth_next@plt+0x4db0>
   18810:	bl	13618 <__stack_chk_fail@plt>
   18814:	andeq	r4, r1, ip, ror #18
   18818:	andeq	r0, r0, r0, asr #6
   1881c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18820:	vpush	{d8-d10}
   18824:	mov	r8, r1
   18828:	sub	sp, sp, #8
   1882c:	mov	r1, #12
   18830:	mov	r0, #1
   18834:	mov	r4, r3
   18838:	vmov.f64	d9, d1
   1883c:	mov	r9, r2
   18840:	vmov.f64	d10, d0
   18844:	bl	16564 <xcb_depth_next@plt+0x2c04>
   18848:	vmov.f64	d0, d10
   1884c:	vmov.f64	d8, #112	; 0x3f800000  1.0
   18850:	str	r0, [r4]
   18854:	mov	r5, r0
   18858:	bl	13918 <ceil@plt>
   1885c:	vmov.f64	d10, d0
   18860:	vcmp.f64	d10, d8
   18864:	vmov.f64	d0, d9
   18868:	vmrs	APSR_nzcv, fpscr
   1886c:	vmovmi.f64	d10, d8
   18870:	bl	13918 <ceil@plt>
   18874:	mov	r0, #0
   18878:	vmov.f64	d9, d0
   1887c:	vcmp.f64	d0, d8
   18880:	vmrs	APSR_nzcv, fpscr
   18884:	vmovmi.f64	d9, d8
   18888:	bl	132a0 <XOpenDisplay@plt>
   1888c:	cmp	r0, #0
   18890:	mov	r4, r0
   18894:	str	r0, [r5]
   18898:	beq	189b4 <xcb_depth_next@plt+0x5054>
   1889c:	ldr	r6, [r0, #132]	; 0x84
   188a0:	mov	r2, #1
   188a4:	ldr	ip, [r0, #140]	; 0x8c
   188a8:	mov	r3, r2
   188ac:	add	r6, r6, r6, lsl #2
   188b0:	lsl	r6, r6, #4
   188b4:	add	ip, ip, r6
   188b8:	ldr	r1, [ip, #8]
   188bc:	ldr	ip, [ip, #36]	; 0x24
   188c0:	str	ip, [sp]
   188c4:	bl	137f8 <XCreatePixmap@plt>
   188c8:	ldr	r2, [r4, #140]	; 0x8c
   188cc:	mov	ip, #1
   188d0:	add	r6, r2, r6
   188d4:	mov	r3, ip
   188d8:	ldr	r2, [r6, #40]	; 0x28
   188dc:	str	ip, [sp]
   188e0:	mov	r1, r0
   188e4:	mov	r7, r0
   188e8:	mov	r0, r4
   188ec:	bl	13468 <cairo_xlib_surface_create@plt>
   188f0:	mov	sl, r0
   188f4:	bl	13864 <cairo_surface_get_device@plt>
   188f8:	mov	r1, #0
   188fc:	mov	r2, r1
   18900:	bl	13750 <cairo_xlib_device_debug_cap_xrender_version@plt>
   18904:	cmp	r9, #0
   18908:	beq	18974 <xcb_depth_next@plt+0x5014>
   1890c:	vcvt.s32.f64	s15, d10
   18910:	add	r2, r5, #4
   18914:	add	r3, r5, #8
   18918:	stm	sp, {r2, r3}
   1891c:	mov	r1, r8
   18920:	mov	r0, r4
   18924:	vmov	r2, s15
   18928:	vcvt.s32.f64	s15, d9
   1892c:	vmov	r3, s15
   18930:	bl	18680 <xcb_depth_next@plt+0x4d20>
   18934:	mov	r6, r0
   18938:	mov	r0, sl
   1893c:	bl	13708 <cairo_surface_destroy@plt>
   18940:	mov	r0, r4
   18944:	mov	r1, r7
   18948:	bl	13780 <XFreePixmap@plt>
   1894c:	cmp	r6, #0
   18950:	beq	1899c <xcb_depth_next@plt+0x503c>
   18954:	mov	r0, r6
   18958:	bl	13498 <cairo_surface_status@plt>
   1895c:	cmp	r0, #0
   18960:	bne	1899c <xcb_depth_next@plt+0x503c>
   18964:	mov	r0, r6
   18968:	add	sp, sp, #8
   1896c:	vpop	{d8-d10}
   18970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18974:	vcvt.s32.f64	s15, d10
   18978:	str	r5, [sp]
   1897c:	mov	r1, r8
   18980:	mov	r0, r4
   18984:	vmov	r2, s15
   18988:	vcvt.s32.f64	s15, d9
   1898c:	vmov	r3, s15
   18990:	bl	17fc4 <xcb_depth_next@plt+0x4664>
   18994:	mov	r6, r0
   18998:	b	18938 <xcb_depth_next@plt+0x4fd8>
   1899c:	mov	r0, r5
   189a0:	bl	180f4 <xcb_depth_next@plt+0x4794>
   189a4:	mov	r0, r6
   189a8:	add	sp, sp, #8
   189ac:	vpop	{d8-d10}
   189b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   189b4:	mov	r0, r5
   189b8:	bl	13300 <free@plt>
   189bc:	mov	r0, r4
   189c0:	b	18968 <xcb_depth_next@plt+0x5008>
   189c4:	push	{r4, r5, r6, r7, lr}
   189c8:	vpush	{d8-d10}
   189cc:	mov	r6, r1
   189d0:	sub	sp, sp, #12
   189d4:	mov	r1, #12
   189d8:	mov	r0, #1
   189dc:	mov	r5, r3
   189e0:	vmov.f64	d9, d1
   189e4:	mov	r7, r2
   189e8:	vmov.f64	d10, d0
   189ec:	bl	16564 <xcb_depth_next@plt+0x2c04>
   189f0:	vmov.f64	d0, d10
   189f4:	vmov.f64	d8, #112	; 0x3f800000  1.0
   189f8:	str	r0, [r5]
   189fc:	mov	r4, r0
   18a00:	bl	13918 <ceil@plt>
   18a04:	vmov.f64	d10, d0
   18a08:	vcmp.f64	d10, d8
   18a0c:	vmov.f64	d0, d9
   18a10:	vmrs	APSR_nzcv, fpscr
   18a14:	vmovmi.f64	d10, d8
   18a18:	bl	13918 <ceil@plt>
   18a1c:	mov	r0, #0
   18a20:	vmov.f64	d9, d0
   18a24:	vcmp.f64	d0, d8
   18a28:	vmrs	APSR_nzcv, fpscr
   18a2c:	vmovmi.f64	d9, d8
   18a30:	bl	132a0 <XOpenDisplay@plt>
   18a34:	cmp	r0, #0
   18a38:	mov	r5, r0
   18a3c:	str	r0, [r4]
   18a40:	beq	18adc <xcb_depth_next@plt+0x517c>
   18a44:	cmp	r7, #0
   18a48:	beq	18a9c <xcb_depth_next@plt+0x513c>
   18a4c:	vcvt.s32.f64	s15, d10
   18a50:	add	r2, r4, #4
   18a54:	add	r3, r4, #8
   18a58:	stm	sp, {r2, r3}
   18a5c:	mov	r1, r6
   18a60:	vmov	r2, s15
   18a64:	vcvt.s32.f64	s15, d9
   18a68:	vmov	r3, s15
   18a6c:	bl	18680 <xcb_depth_next@plt+0x4d20>
   18a70:	mov	r5, r0
   18a74:	cmp	r5, #0
   18a78:	beq	18ac4 <xcb_depth_next@plt+0x5164>
   18a7c:	mov	r0, r5
   18a80:	bl	13498 <cairo_surface_status@plt>
   18a84:	cmp	r0, #0
   18a88:	bne	18ac4 <xcb_depth_next@plt+0x5164>
   18a8c:	mov	r0, r5
   18a90:	add	sp, sp, #12
   18a94:	vpop	{d8-d10}
   18a98:	pop	{r4, r5, r6, r7, pc}
   18a9c:	vcvt.s32.f64	s15, d10
   18aa0:	str	r4, [sp]
   18aa4:	mov	r1, r6
   18aa8:	vmov	r2, s15
   18aac:	vcvt.s32.f64	s15, d9
   18ab0:	vmov	r3, s15
   18ab4:	bl	17fc4 <xcb_depth_next@plt+0x4664>
   18ab8:	mov	r5, r0
   18abc:	cmp	r5, #0
   18ac0:	bne	18a7c <xcb_depth_next@plt+0x511c>
   18ac4:	mov	r0, r4
   18ac8:	bl	180f4 <xcb_depth_next@plt+0x4794>
   18acc:	mov	r0, r5
   18ad0:	add	sp, sp, #12
   18ad4:	vpop	{d8-d10}
   18ad8:	pop	{r4, r5, r6, r7, pc}
   18adc:	mov	r0, r4
   18ae0:	bl	13300 <free@plt>
   18ae4:	mov	r0, r5
   18ae8:	b	18a90 <xcb_depth_next@plt+0x5130>
   18aec:	ldr	r0, [pc, #8]	; 18afc <xcb_depth_next@plt+0x519c>
   18af0:	mov	r1, #5
   18af4:	add	r0, pc, r0
   18af8:	b	16fe4 <xcb_depth_next@plt+0x3684>
   18afc:	andeq	r3, r1, ip, ror sp
   18b00:	ldr	r3, [pc, #196]	; 18bcc <xcb_depth_next@plt+0x526c>
   18b04:	mov	ip, r0
   18b08:	ldr	r2, [pc, #192]	; 18bd0 <xcb_depth_next@plt+0x5270>
   18b0c:	add	r3, pc, r3
   18b10:	push	{r4, r5, r6, r7, lr}
   18b14:	sub	sp, sp, #52	; 0x34
   18b18:	ldr	r7, [r3, r2]
   18b1c:	mov	r5, r1
   18b20:	mov	r0, sp
   18b24:	mov	r1, ip
   18b28:	add	r6, sp, #20
   18b2c:	mov	r4, sp
   18b30:	ldr	r3, [r7]
   18b34:	str	r3, [sp, #44]	; 0x2c
   18b38:	bl	135dc <xcb_screen_allowed_depths_iterator@plt>
   18b3c:	ldm	sp, {r0, r1, r2}
   18b40:	stm	r6, {r0, r1, r2}
   18b44:	ldr	r3, [sp, #24]
   18b48:	cmp	r3, #0
   18b4c:	addne	r4, sp, #32
   18b50:	beq	18bc0 <xcb_depth_next@plt+0x5260>
   18b54:	mov	r0, r4
   18b58:	ldr	r1, [sp, #20]
   18b5c:	bl	13060 <xcb_depth_visuals_iterator@plt>
   18b60:	ldr	r3, [sp, #36]	; 0x24
   18b64:	cmp	r3, #0
   18b68:	bne	18b84 <xcb_depth_next@plt+0x5224>
   18b6c:	b	18bac <xcb_depth_next@plt+0x524c>
   18b70:	mov	r0, r4
   18b74:	bl	137b0 <xcb_visualtype_next@plt>
   18b78:	ldr	r3, [sp, #36]	; 0x24
   18b7c:	cmp	r3, #0
   18b80:	beq	18bac <xcb_depth_next@plt+0x524c>
   18b84:	ldr	r0, [sp, #32]
   18b88:	ldr	r2, [r0]
   18b8c:	cmp	r2, r5
   18b90:	bne	18b70 <xcb_depth_next@plt+0x5210>
   18b94:	ldr	r2, [sp, #44]	; 0x2c
   18b98:	ldr	r3, [r7]
   18b9c:	cmp	r2, r3
   18ba0:	bne	18bc8 <xcb_depth_next@plt+0x5268>
   18ba4:	add	sp, sp, #52	; 0x34
   18ba8:	pop	{r4, r5, r6, r7, pc}
   18bac:	mov	r0, r6
   18bb0:	bl	13960 <xcb_depth_next@plt>
   18bb4:	ldr	r3, [sp, #24]
   18bb8:	cmp	r3, #0
   18bbc:	bne	18b54 <xcb_depth_next@plt+0x51f4>
   18bc0:	mov	r0, #0
   18bc4:	b	18b94 <xcb_depth_next@plt+0x5234>
   18bc8:	bl	13618 <__stack_chk_fail@plt>
   18bcc:	andeq	r4, r1, ip, ror #9
   18bd0:	andeq	r0, r0, r0, asr #6
   18bd4:	push	{r4, lr}
   18bd8:	mov	r4, r0
   18bdc:	ldm	r0, {r0, r1}
   18be0:	bl	136a8 <xcb_free_pixmap@plt>
   18be4:	mov	r0, r4
   18be8:	pop	{r4, lr}
   18bec:	b	13300 <free@plt>
   18bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18bf4:	sub	sp, sp, #24
   18bf8:	mov	r7, r1
   18bfc:	mov	r6, r2
   18c00:	mov	r5, r3
   18c04:	mov	r8, r0
   18c08:	bl	13864 <cairo_surface_get_device@plt>
   18c0c:	ldr	r1, [pc, #216]	; 18cec <xcb_depth_next@plt+0x538c>
   18c10:	add	r1, pc, r1
   18c14:	bl	135d0 <cairo_device_get_user_data@plt>
   18c18:	mov	r9, r0
   18c1c:	mov	r0, #8
   18c20:	bl	135f4 <malloc@plt>
   18c24:	cmp	r7, #4096	; 0x1000
   18c28:	mov	r4, r0
   18c2c:	beq	18ce0 <xcb_depth_next@plt+0x5380>
   18c30:	cmp	r7, #8192	; 0x2000
   18c34:	beq	18cd4 <xcb_depth_next@plt+0x5374>
   18c38:	ldr	r9, [r9, #4]
   18c3c:	mov	sl, #32
   18c40:	mov	r0, r8
   18c44:	bl	13864 <cairo_surface_get_device@plt>
   18c48:	bl	1306c <cairo_xcb_device_get_connection@plt>
   18c4c:	str	r0, [r4]
   18c50:	bl	13738 <xcb_generate_id@plt>
   18c54:	str	r0, [r4, #4]
   18c58:	ldr	r0, [r4]
   18c5c:	bl	13378 <xcb_get_setup@plt>
   18c60:	mov	r1, r0
   18c64:	add	r0, sp, #12
   18c68:	bl	132e8 <xcb_setup_roots_iterator@plt>
   18c6c:	ldr	r7, [sp, #12]
   18c70:	uxth	ip, r5
   18c74:	uxth	lr, r6
   18c78:	mov	r1, sl
   18c7c:	ldr	r2, [r4, #4]
   18c80:	ldr	r3, [r7]
   18c84:	ldr	r0, [r4]
   18c88:	str	lr, [sp]
   18c8c:	str	ip, [sp, #4]
   18c90:	bl	130fc <xcb_create_pixmap@plt>
   18c94:	ldm	r4, {r0, r2}
   18c98:	mov	r1, r7
   18c9c:	mov	r3, r9
   18ca0:	str	r5, [sp, #4]
   18ca4:	str	r6, [sp]
   18ca8:	bl	136f0 <cairo_xcb_surface_create_with_xrender_format@plt>
   18cac:	ldr	r1, [pc, #60]	; 18cf0 <xcb_depth_next@plt+0x5390>
   18cb0:	ldr	r3, [pc, #60]	; 18cf4 <xcb_depth_next@plt+0x5394>
   18cb4:	mov	r2, r4
   18cb8:	add	r1, pc, r1
   18cbc:	add	r3, pc, r3
   18cc0:	mov	r5, r0
   18cc4:	bl	137bc <cairo_surface_set_user_data@plt>
   18cc8:	mov	r0, r5
   18ccc:	add	sp, sp, #24
   18cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18cd4:	ldr	r9, [r9, #12]
   18cd8:	mov	sl, #8
   18cdc:	b	18c40 <xcb_depth_next@plt+0x52e0>
   18ce0:	ldr	r9, [r9, #8]
   18ce4:	mov	sl, #24
   18ce8:	b	18c40 <xcb_depth_next@plt+0x52e0>
   18cec:	andeq	r4, r1, r8, asr r7
   18cf0:			; <UNDEFINED> instruction: 0x000146b0
   18cf4:			; <UNDEFINED> instruction: 0xffffff10
   18cf8:	push	{r4, r5, r6, lr}
   18cfc:	mov	r5, r0
   18d00:	ldr	r6, [pc, #208]	; 18dd8 <xcb_depth_next@plt+0x5478>
   18d04:	sub	sp, sp, #16
   18d08:	mov	r4, #0
   18d0c:	add	r6, pc, r6
   18d10:	b	18d20 <xcb_depth_next@plt+0x53c0>
   18d14:	ldrb	r3, [r4]
   18d18:	cmp	r3, #34	; 0x22
   18d1c:	bne	18d44 <xcb_depth_next@plt+0x53e4>
   18d20:	mov	r0, r4
   18d24:	bl	13300 <free@plt>
   18d28:	ldr	r0, [r5]
   18d2c:	bl	134c8 <xcb_poll_for_event@plt>
   18d30:	subs	r4, r0, #0
   18d34:	bne	18d14 <xcb_depth_next@plt+0x53b4>
   18d38:	mov	r0, r4
   18d3c:	add	sp, sp, #16
   18d40:	pop	{r4, r5, r6, pc}
   18d44:	cmp	r3, #0
   18d48:	bne	18db0 <xcb_depth_next@plt+0x5450>
   18d4c:	ldrh	r0, [r4, #2]
   18d50:	mov	r1, #1
   18d54:	ldr	r2, [pc, #128]	; 18ddc <xcb_depth_next@plt+0x547c>
   18d58:	ldrb	r3, [r4, #1]
   18d5c:	ldr	r2, [r6, r2]
   18d60:	str	r0, [sp]
   18d64:	ldrb	ip, [r4, #10]
   18d68:	ldr	r0, [r2]
   18d6c:	ldr	r2, [pc, #108]	; 18de0 <xcb_depth_next@plt+0x5480>
   18d70:	str	ip, [sp, #4]
   18d74:	ldrh	ip, [r4, #8]
   18d78:	add	r2, pc, r2
   18d7c:	str	ip, [sp, #8]
   18d80:	bl	1363c <__fprintf_chk@plt>
   18d84:	mov	r0, r4
   18d88:	bl	13300 <free@plt>
   18d8c:	b	18d94 <xcb_depth_next@plt+0x5434>
   18d90:	bl	13300 <free@plt>
   18d94:	ldr	r0, [r5]
   18d98:	bl	134c8 <xcb_poll_for_event@plt>
   18d9c:	cmp	r0, #0
   18da0:	bne	18d90 <xcb_depth_next@plt+0x5430>
   18da4:	mov	r0, #11
   18da8:	add	sp, sp, #16
   18dac:	pop	{r4, r5, r6, pc}
   18db0:	ldr	r0, [pc, #36]	; 18ddc <xcb_depth_next@plt+0x547c>
   18db4:	mov	r1, #1
   18db8:	ldrh	ip, [r4, #2]
   18dbc:	ldr	r2, [pc, #32]	; 18de4 <xcb_depth_next@plt+0x5484>
   18dc0:	ldr	r0, [r6, r0]
   18dc4:	add	r2, pc, r2
   18dc8:	str	ip, [sp]
   18dcc:	ldr	r0, [r0]
   18dd0:	bl	1363c <__fprintf_chk@plt>
   18dd4:	b	18d84 <xcb_depth_next@plt+0x5424>
   18dd8:	andeq	r4, r1, ip, ror #5
   18ddc:	andeq	r0, r0, r4, asr #6
   18de0:	andeq	r2, r0, r0, ror #12
   18de4:	andeq	r2, r0, r0, ror #12
   18de8:	push	{r4, r5, r6, lr}
   18dec:	sub	sp, sp, #16
   18df0:	ldr	r6, [r0]
   18df4:	mov	r5, #0
   18df8:	ldr	r2, [r0, #8]
   18dfc:	mvn	ip, #0
   18e00:	mov	r3, r5
   18e04:	str	ip, [sp, #12]
   18e08:	mov	r1, #1
   18e0c:	mov	r4, r0
   18e10:	str	r1, [sp, #4]
   18e14:	mov	r0, r6
   18e18:	str	r1, [sp, #8]
   18e1c:	mov	r1, #2
   18e20:	str	r5, [sp]
   18e24:	bl	13630 <xcb_get_image@plt>
   18e28:	mov	r2, r5
   18e2c:	mov	r1, r0
   18e30:	mov	r0, r6
   18e34:	bl	131e0 <xcb_get_image_reply@plt>
   18e38:	bl	13300 <free@plt>
   18e3c:	mov	r0, r4
   18e40:	bl	18cf8 <xcb_depth_next@plt+0x5398>
   18e44:	cmp	r0, r5
   18e48:	bne	18e54 <xcb_depth_next@plt+0x54f4>
   18e4c:	add	sp, sp, #16
   18e50:	pop	{r4, r5, r6, pc}
   18e54:	ldr	r0, [pc, #24]	; 18e74 <xcb_depth_next@plt+0x5514>
   18e58:	mov	r2, #139	; 0x8b
   18e5c:	ldr	r1, [pc, #20]	; 18e78 <xcb_depth_next@plt+0x5518>
   18e60:	ldr	r3, [pc, #20]	; 18e7c <xcb_depth_next@plt+0x551c>
   18e64:	add	r0, pc, r0
   18e68:	add	r1, pc, r1
   18e6c:	add	r3, pc, r3
   18e70:	bl	13264 <__assert_fail@plt>
   18e74:	andeq	r2, r0, r4, lsl #12
   18e78:	andeq	r2, r0, r0, lsr #12
   18e7c:	ldrdeq	r2, [r0], -r4
   18e80:	push	{r4, lr}
   18e84:	mov	r4, r0
   18e88:	bl	1375c <xcb_get_input_focus@plt>
   18e8c:	mov	r2, #0
   18e90:	mov	r1, r0
   18e94:	mov	r0, r4
   18e98:	bl	13948 <xcb_get_input_focus_reply@plt>
   18e9c:	pop	{r4, lr}
   18ea0:	b	13300 <free@plt>
   18ea4:	push	{r4, lr}
   18ea8:	mov	r4, r0
   18eac:	ldr	r0, [r0, #16]
   18eb0:	bl	135b8 <cairo_surface_finish@plt>
   18eb4:	ldr	r3, [r4, #12]
   18eb8:	ldr	r0, [r4]
   18ebc:	cmp	r3, #0
   18ec0:	ldr	r1, [r4, #8]
   18ec4:	beq	18f10 <xcb_depth_next@plt+0x55b0>
   18ec8:	bl	136a8 <xcb_free_pixmap@plt>
   18ecc:	ldr	r0, [r4, #16]
   18ed0:	bl	13708 <cairo_surface_destroy@plt>
   18ed4:	ldr	r0, [r4, #4]
   18ed8:	bl	134b0 <cairo_device_finish@plt>
   18edc:	ldr	r0, [r4, #4]
   18ee0:	bl	130e4 <cairo_device_destroy@plt>
   18ee4:	ldr	r0, [r4]
   18ee8:	bl	18e80 <xcb_depth_next@plt+0x5520>
   18eec:	mov	r0, r4
   18ef0:	bl	18cf8 <xcb_depth_next@plt+0x5398>
   18ef4:	cmp	r0, #0
   18ef8:	bne	18f18 <xcb_depth_next@plt+0x55b8>
   18efc:	ldr	r0, [r4]
   18f00:	bl	13774 <xcb_disconnect@plt>
   18f04:	mov	r0, r4
   18f08:	pop	{r4, lr}
   18f0c:	b	13300 <free@plt>
   18f10:	bl	130a8 <xcb_destroy_window@plt>
   18f14:	b	18ecc <xcb_depth_next@plt+0x556c>
   18f18:	ldr	r3, [pc, #28]	; 18f3c <xcb_depth_next@plt+0x55dc>
   18f1c:	mov	r2, #121	; 0x79
   18f20:	ldr	r0, [pc, #24]	; 18f40 <xcb_depth_next@plt+0x55e0>
   18f24:	ldr	r1, [pc, #24]	; 18f44 <xcb_depth_next@plt+0x55e4>
   18f28:	add	r3, pc, r3
   18f2c:	add	r0, pc, r0
   18f30:	add	r3, r3, #36	; 0x24
   18f34:	add	r1, pc, r1
   18f38:	bl	13264 <__assert_fail@plt>
   18f3c:	andeq	r2, r0, r8, lsl r4
   18f40:	andeq	r2, r0, ip, lsr r5
   18f44:	andeq	r2, r0, r4, asr r5
   18f48:	ldr	r2, [pc, #584]	; 19198 <xcb_depth_next@plt+0x5838>
   18f4c:	mov	r0, #20
   18f50:	push	{r4, r5, r6, r7, r8, r9, lr}
   18f54:	vpush	{d8-d9}
   18f58:	mov	r5, r3
   18f5c:	ldr	r3, [pc, #568]	; 1919c <xcb_depth_next@plt+0x583c>
   18f60:	add	r2, pc, r2
   18f64:	sub	sp, sp, #68	; 0x44
   18f68:	vmov.f64	d8, d0
   18f6c:	mov	r9, #1
   18f70:	ldr	r8, [r2, r3]
   18f74:	str	r9, [sp, #44]	; 0x2c
   18f78:	vmov.f64	d9, d1
   18f7c:	ldr	r3, [r8]
   18f80:	str	r3, [sp, #60]	; 0x3c
   18f84:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   18f88:	vmov.f64	d7, #112	; 0x3f800000  1.0
   18f8c:	vcmp.f64	d8, #0.0
   18f90:	vmrs	APSR_nzcv, fpscr
   18f94:	vcmp.f64	d9, #0.0
   18f98:	vmoveq.f64	d8, d7
   18f9c:	vmrs	APSR_nzcv, fpscr
   18fa0:	vmoveq.f64	d9, d7
   18fa4:	mov	r4, r0
   18fa8:	mov	r0, #0
   18fac:	str	r4, [r5]
   18fb0:	mov	r1, r0
   18fb4:	bl	1327c <xcb_connect@plt>
   18fb8:	str	r0, [r4]
   18fbc:	mov	r5, r0
   18fc0:	bl	13090 <xcb_connection_has_error@plt>
   18fc4:	subs	r7, r0, #0
   18fc8:	bne	19184 <xcb_depth_next@plt+0x5824>
   18fcc:	mov	r0, r5
   18fd0:	bl	13378 <xcb_get_setup@plt>
   18fd4:	mov	r1, r0
   18fd8:	add	r0, sp, #48	; 0x30
   18fdc:	bl	132e8 <xcb_setup_roots_iterator@plt>
   18fe0:	ldr	r6, [sp, #48]	; 0x30
   18fe4:	ldrh	r3, [r6, #20]
   18fe8:	vmov	s14, r3
   18fec:	vcvt.f64.s32	d7, s14
   18ff0:	vcmpe.f64	d8, d7
   18ff4:	vmrs	APSR_nzcv, fpscr
   18ff8:	bgt	1917c <xcb_depth_next@plt+0x581c>
   18ffc:	ldrh	r3, [r6, #22]
   19000:	vmov	s14, r3
   19004:	vcvt.f64.s32	d7, s14
   19008:	vcmpe.f64	d9, d7
   1900c:	vmrs	APSR_nzcv, fpscr
   19010:	bgt	1917c <xcb_depth_next@plt+0x581c>
   19014:	str	r7, [r4, #16]
   19018:	mov	r0, r5
   1901c:	str	r7, [r4, #12]
   19020:	bl	13738 <xcb_generate_id@plt>
   19024:	vcvt.u32.f64	s15, d8
   19028:	mov	lr, #512	; 0x200
   1902c:	vmov	ip, s15
   19030:	vcvt.u32.f64	s15, d9
   19034:	uxth	ip, ip
   19038:	str	r0, [r4, #8]
   1903c:	mov	r2, r0
   19040:	ldr	r3, [r6]
   19044:	mov	r0, r5
   19048:	ldrb	r1, [r6, #38]	; 0x26
   1904c:	str	ip, [sp, #8]
   19050:	vmov	ip, s15
   19054:	str	r9, [sp, #20]
   19058:	str	r7, [sp]
   1905c:	str	r7, [sp, #4]
   19060:	str	r7, [sp, #16]
   19064:	uxth	ip, ip
   19068:	str	ip, [sp, #12]
   1906c:	ldr	ip, [r6, #32]
   19070:	str	lr, [sp, #28]
   19074:	add	lr, sp, #44	; 0x2c
   19078:	str	lr, [sp, #32]
   1907c:	str	ip, [sp, #24]
   19080:	bl	13678 <xcb_create_window_checked@plt>
   19084:	ldr	r1, [r4, #8]
   19088:	mov	r9, r0
   1908c:	mov	r0, r5
   19090:	bl	132c4 <xcb_map_window@plt>
   19094:	mov	r0, r5
   19098:	mov	r1, r9
   1909c:	bl	1372c <xcb_request_check@plt>
   190a0:	cmp	r0, #0
   190a4:	bne	1914c <xcb_depth_next@plt+0x57ec>
   190a8:	mov	r0, r6
   190ac:	ldr	r6, [r4, #8]
   190b0:	ldr	r1, [r0, #32]
   190b4:	bl	18b00 <xcb_depth_next@plt+0x51a0>
   190b8:	vcvt.s32.f64	s15, d8
   190bc:	mov	r1, r6
   190c0:	vcvt.s32.f64	s18, d9
   190c4:	vmov	r3, s15
   190c8:	vstr	s18, [sp]
   190cc:	mov	r2, r0
   190d0:	mov	r0, r5
   190d4:	bl	13420 <cairo_xcb_surface_create@plt>
   190d8:	mov	r7, r0
   190dc:	bl	13498 <cairo_surface_status@plt>
   190e0:	subs	r6, r0, #0
   190e4:	bne	1914c <xcb_depth_next@plt+0x57ec>
   190e8:	mov	r0, r7
   190ec:	bl	13864 <cairo_surface_get_device@plt>
   190f0:	mvn	r1, #0
   190f4:	mov	r2, r1
   190f8:	bl	1354c <cairo_xcb_device_debug_cap_xrender_version@plt>
   190fc:	mov	r0, r7
   19100:	bl	13864 <cairo_surface_get_device@plt>
   19104:	bl	13720 <cairo_device_reference@plt>
   19108:	ldr	r1, [pc, #144]	; 191a0 <xcb_depth_next@plt+0x5840>
   1910c:	mov	r3, r6
   19110:	mov	r2, r4
   19114:	add	r1, pc, r1
   19118:	add	r1, r1, #4
   1911c:	str	r0, [r4, #4]
   19120:	mov	r0, r7
   19124:	bl	137bc <cairo_surface_set_user_data@plt>
   19128:	subs	r5, r0, #0
   1912c:	mov	r0, r7
   19130:	beq	19160 <xcb_depth_next@plt+0x5800>
   19134:	bl	13708 <cairo_surface_destroy@plt>
   19138:	mov	r0, r4
   1913c:	bl	18ea4 <xcb_depth_next@plt+0x5544>
   19140:	mov	r0, r5
   19144:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   19148:	b	19160 <xcb_depth_next@plt+0x5800>
   1914c:	mov	r0, r5
   19150:	bl	13774 <xcb_disconnect@plt>
   19154:	mov	r0, r4
   19158:	bl	13300 <free@plt>
   1915c:	mov	r0, r7
   19160:	ldr	r2, [sp, #60]	; 0x3c
   19164:	ldr	r3, [r8]
   19168:	cmp	r2, r3
   1916c:	bne	19194 <xcb_depth_next@plt+0x5834>
   19170:	add	sp, sp, #68	; 0x44
   19174:	vpop	{d8-d9}
   19178:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1917c:	mov	r0, r5
   19180:	bl	13774 <xcb_disconnect@plt>
   19184:	mov	r0, r4
   19188:	bl	13300 <free@plt>
   1918c:	mov	r0, #0
   19190:	b	19160 <xcb_depth_next@plt+0x5800>
   19194:	bl	13618 <__stack_chk_fail@plt>
   19198:	muleq	r1, r8, r0
   1919c:	andeq	r0, r0, r0, asr #6
   191a0:	andeq	r4, r1, r4, asr r2
   191a4:	ldr	r2, [pc, #732]	; 19488 <xcb_depth_next@plt+0x5b28>
   191a8:	mov	r0, #20
   191ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191b0:	vpush	{d8-d9}
   191b4:	mov	r5, r3
   191b8:	ldr	r3, [pc, #716]	; 1948c <xcb_depth_next@plt+0x5b2c>
   191bc:	add	r2, pc, r2
   191c0:	sub	sp, sp, #60	; 0x3c
   191c4:	vmov.f64	d9, d0
   191c8:	mov	r6, r1
   191cc:	ldr	r7, [r2, r3]
   191d0:	vmov.f64	d8, d1
   191d4:	ldr	r3, [r7]
   191d8:	str	r3, [sp, #52]	; 0x34
   191dc:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   191e0:	vmov.f64	d7, #112	; 0x3f800000  1.0
   191e4:	vcmp.f64	d9, #0.0
   191e8:	vmrs	APSR_nzcv, fpscr
   191ec:	vcmp.f64	d8, #0.0
   191f0:	vmoveq.f64	d9, d7
   191f4:	vmrs	APSR_nzcv, fpscr
   191f8:	vmoveq.f64	d8, d7
   191fc:	mov	r4, r0
   19200:	mov	r0, #0
   19204:	str	r4, [r5]
   19208:	mov	r1, r0
   1920c:	bl	1327c <xcb_connect@plt>
   19210:	str	r0, [r4]
   19214:	mov	r5, r0
   19218:	bl	13090 <xcb_connection_has_error@plt>
   1921c:	subs	r9, r0, #0
   19220:	bne	1941c <xcb_depth_next@plt+0x5abc>
   19224:	mov	r0, r5
   19228:	bl	13378 <xcb_get_setup@plt>
   1922c:	mov	r1, r0
   19230:	add	r0, sp, #28
   19234:	bl	132e8 <xcb_setup_roots_iterator@plt>
   19238:	mov	r3, #1
   1923c:	str	r9, [r4, #16]
   19240:	mov	r0, r5
   19244:	str	r3, [r4, #12]
   19248:	ldr	r8, [sp, #28]
   1924c:	bl	13738 <xcb_generate_id@plt>
   19250:	cmp	r6, #4096	; 0x1000
   19254:	str	r0, [r4, #8]
   19258:	beq	1942c <xcb_depth_next@plt+0x5acc>
   1925c:	cmp	r6, #12288	; 0x3000
   19260:	bne	193e8 <xcb_depth_next@plt+0x5a88>
   19264:	ldr	r3, [r8]
   19268:	mov	r2, r0
   1926c:	mov	r1, #32
   19270:	mov	r0, r5
   19274:	vcvt.u32.f64	s15, d9
   19278:	mov	r9, r1
   1927c:	vmov	ip, s15
   19280:	vcvt.u32.f64	s15, d8
   19284:	uxth	ip, ip
   19288:	str	ip, [sp]
   1928c:	vmov	ip, s15
   19290:	uxth	ip, ip
   19294:	str	ip, [sp, #4]
   19298:	bl	133c0 <xcb_create_pixmap_checked@plt>
   1929c:	mov	r1, r0
   192a0:	mov	r0, r5
   192a4:	bl	1372c <xcb_request_check@plt>
   192a8:	subs	r6, r0, #0
   192ac:	mov	r0, r5
   192b0:	bne	19418 <xcb_depth_next@plt+0x5ab8>
   192b4:	bl	1348c <xcb_flush@plt>
   192b8:	mov	r0, r5
   192bc:	bl	13624 <xcb_render_query_pict_formats@plt>
   192c0:	mov	sl, r0
   192c4:	mov	r0, r5
   192c8:	bl	1348c <xcb_flush@plt>
   192cc:	mov	r1, sl
   192d0:	mov	r0, r5
   192d4:	mov	r2, r6
   192d8:	bl	13654 <xcb_render_query_pict_formats_reply@plt>
   192dc:	subs	sl, r0, #0
   192e0:	beq	19448 <xcb_depth_next@plt+0x5ae8>
   192e4:	add	fp, sp, #8
   192e8:	mov	r1, sl
   192ec:	add	r6, sp, #40	; 0x28
   192f0:	mov	r0, fp
   192f4:	bl	136d8 <xcb_render_query_pict_formats_formats_iterator@plt>
   192f8:	ldm	fp, {r0, r1, r2}
   192fc:	stm	r6, {r0, r1, r2}
   19300:	ldr	r3, [sp, #44]	; 0x2c
   19304:	cmp	r3, #0
   19308:	bne	19324 <xcb_depth_next@plt+0x59c4>
   1930c:	b	19440 <xcb_depth_next@plt+0x5ae0>
   19310:	mov	r0, r6
   19314:	bl	1312c <xcb_render_pictforminfo_next@plt>
   19318:	ldr	r3, [sp, #44]	; 0x2c
   1931c:	cmp	r3, #0
   19320:	beq	19440 <xcb_depth_next@plt+0x5ae0>
   19324:	ldr	r3, [sp, #40]	; 0x28
   19328:	ldrb	r2, [r3, #4]
   1932c:	cmp	r2, #1
   19330:	bne	19310 <xcb_depth_next@plt+0x59b0>
   19334:	ldrb	r2, [r3, #5]
   19338:	cmp	r9, r2
   1933c:	bne	19310 <xcb_depth_next@plt+0x59b0>
   19340:	vcvt.s32.f64	s18, d9
   19344:	ldr	r2, [r4, #8]
   19348:	mov	r1, r8
   1934c:	mov	r0, r5
   19350:	vcvt.s32.f64	s16, d8
   19354:	vstr	s18, [sp]
   19358:	vstr	s16, [sp, #4]
   1935c:	bl	136f0 <cairo_xcb_surface_create_with_xrender_format@plt>
   19360:	mov	r9, r0
   19364:	bl	13498 <cairo_surface_status@plt>
   19368:	subs	r6, r0, #0
   1936c:	bne	193e0 <xcb_depth_next@plt+0x5a80>
   19370:	mov	r0, r9
   19374:	bl	13864 <cairo_surface_get_device@plt>
   19378:	bl	13720 <cairo_device_reference@plt>
   1937c:	mov	r1, r6
   19380:	mov	r2, r6
   19384:	str	r0, [r4, #4]
   19388:	bl	1354c <cairo_xcb_device_debug_cap_xrender_version@plt>
   1938c:	mov	r0, r9
   19390:	bl	13864 <cairo_surface_get_device@plt>
   19394:	ldr	r3, [r4, #4]
   19398:	cmp	r3, r0
   1939c:	bne	19464 <xcb_depth_next@plt+0x5b04>
   193a0:	ldr	r1, [pc, #232]	; 19490 <xcb_depth_next@plt+0x5b30>
   193a4:	mov	r3, r6
   193a8:	mov	r0, r9
   193ac:	mov	r2, r4
   193b0:	add	r1, pc, r1
   193b4:	add	r1, r1, #4
   193b8:	bl	137bc <cairo_surface_set_user_data@plt>
   193bc:	subs	r5, r0, #0
   193c0:	mov	r0, r9
   193c4:	beq	193fc <xcb_depth_next@plt+0x5a9c>
   193c8:	bl	13708 <cairo_surface_destroy@plt>
   193cc:	mov	r0, r4
   193d0:	bl	18ea4 <xcb_depth_next@plt+0x5544>
   193d4:	mov	r0, r5
   193d8:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   193dc:	b	193fc <xcb_depth_next@plt+0x5a9c>
   193e0:	mov	r0, sl
   193e4:	bl	13300 <free@plt>
   193e8:	mov	r0, r5
   193ec:	bl	13774 <xcb_disconnect@plt>
   193f0:	mov	r0, r4
   193f4:	bl	13300 <free@plt>
   193f8:	mov	r0, r9
   193fc:	ldr	r2, [sp, #52]	; 0x34
   19400:	ldr	r3, [r7]
   19404:	cmp	r2, r3
   19408:	bne	19460 <xcb_depth_next@plt+0x5b00>
   1940c:	add	sp, sp, #60	; 0x3c
   19410:	vpop	{d8-d9}
   19414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19418:	bl	13774 <xcb_disconnect@plt>
   1941c:	mov	r0, r4
   19420:	bl	13300 <free@plt>
   19424:	mov	r0, #0
   19428:	b	193fc <xcb_depth_next@plt+0x5a9c>
   1942c:	mov	r2, r0
   19430:	ldr	r3, [r8]
   19434:	mov	r0, r5
   19438:	mov	r1, #24
   1943c:	b	19274 <xcb_depth_next@plt+0x5914>
   19440:	mov	r0, sl
   19444:	bl	13300 <free@plt>
   19448:	mov	r0, r5
   1944c:	bl	13774 <xcb_disconnect@plt>
   19450:	mov	r0, r4
   19454:	bl	13300 <free@plt>
   19458:	mov	r0, #0
   1945c:	b	193fc <xcb_depth_next@plt+0x5a9c>
   19460:	bl	13618 <__stack_chk_fail@plt>
   19464:	ldr	r3, [pc, #40]	; 19494 <xcb_depth_next@plt+0x5b34>
   19468:	mov	r2, #636	; 0x27c
   1946c:	ldr	r0, [pc, #36]	; 19498 <xcb_depth_next@plt+0x5b38>
   19470:	ldr	r1, [pc, #36]	; 1949c <xcb_depth_next@plt+0x5b3c>
   19474:	add	r3, pc, r3
   19478:	add	r0, pc, r0
   1947c:	add	r3, r3, #68	; 0x44
   19480:	add	r1, pc, r1
   19484:	bl	13264 <__assert_fail@plt>
   19488:	andeq	r3, r1, ip, lsr lr
   1948c:	andeq	r0, r0, r0, asr #6
   19490:			; <UNDEFINED> instruction: 0x00013fb8
   19494:	andeq	r1, r0, ip, asr #29
   19498:	andeq	r2, r0, r8, lsr #32
   1949c:	andeq	r2, r0, r8
   194a0:	ldr	r2, [pc, #556]	; 196d4 <xcb_depth_next@plt+0x5d74>
   194a4:	mov	r0, #20
   194a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   194ac:	vpush	{d8-d9}
   194b0:	mov	r5, r3
   194b4:	ldr	r3, [pc, #540]	; 196d8 <xcb_depth_next@plt+0x5d78>
   194b8:	add	r2, pc, r2
   194bc:	sub	sp, sp, #64	; 0x40
   194c0:	vmov.f64	d8, d0
   194c4:	mov	sl, r1
   194c8:	mov	r9, #1
   194cc:	ldr	r8, [r2, r3]
   194d0:	str	r9, [sp, #44]	; 0x2c
   194d4:	vmov.f64	d9, d1
   194d8:	ldr	r3, [r8]
   194dc:	str	r3, [sp, #60]	; 0x3c
   194e0:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   194e4:	vmov.f64	d7, #112	; 0x3f800000  1.0
   194e8:	vcmp.f64	d8, #0.0
   194ec:	vmrs	APSR_nzcv, fpscr
   194f0:	vcmp.f64	d9, #0.0
   194f4:	vmoveq.f64	d8, d7
   194f8:	vmrs	APSR_nzcv, fpscr
   194fc:	vmoveq.f64	d9, d7
   19500:	mov	r4, r0
   19504:	mov	r0, #0
   19508:	str	r4, [r5]
   1950c:	mov	r1, r0
   19510:	bl	1327c <xcb_connect@plt>
   19514:	str	r0, [r4]
   19518:	mov	r5, r0
   1951c:	bl	13090 <xcb_connection_has_error@plt>
   19520:	subs	r7, r0, #0
   19524:	bne	196a8 <xcb_depth_next@plt+0x5d48>
   19528:	str	r7, [r4, #16]
   1952c:	mov	r0, r5
   19530:	bl	13378 <xcb_get_setup@plt>
   19534:	mov	r1, r0
   19538:	add	r0, sp, #48	; 0x30
   1953c:	bl	132e8 <xcb_setup_roots_iterator@plt>
   19540:	ldr	r6, [sp, #48]	; 0x30
   19544:	ldrh	r3, [r6, #20]
   19548:	vmov	s14, r3
   1954c:	vcvt.f64.s32	d7, s14
   19550:	vcmpe.f64	d8, d7
   19554:	vmrs	APSR_nzcv, fpscr
   19558:	bgt	196a0 <xcb_depth_next@plt+0x5d40>
   1955c:	ldrh	r3, [r6, #22]
   19560:	vmov	s14, r3
   19564:	vcvt.f64.s32	d7, s14
   19568:	vcmpe.f64	d9, d7
   1956c:	vmrs	APSR_nzcv, fpscr
   19570:	bgt	196a0 <xcb_depth_next@plt+0x5d40>
   19574:	str	r7, [r4, #12]
   19578:	mov	r0, r5
   1957c:	bl	13738 <xcb_generate_id@plt>
   19580:	vcvt.u32.f64	s15, d8
   19584:	mov	lr, #512	; 0x200
   19588:	vmov	ip, s15
   1958c:	vcvt.u32.f64	s15, d9
   19590:	uxth	ip, ip
   19594:	str	r0, [r4, #8]
   19598:	mov	r2, r0
   1959c:	ldr	r3, [r6]
   195a0:	mov	r0, r5
   195a4:	ldrb	r1, [r6, #38]	; 0x26
   195a8:	str	ip, [sp, #8]
   195ac:	vmov	ip, s15
   195b0:	str	r9, [sp, #20]
   195b4:	str	r7, [sp]
   195b8:	str	r7, [sp, #4]
   195bc:	str	r7, [sp, #16]
   195c0:	uxth	ip, ip
   195c4:	str	ip, [sp, #12]
   195c8:	ldr	ip, [r6, #32]
   195cc:	str	lr, [sp, #28]
   195d0:	add	lr, sp, #44	; 0x2c
   195d4:	str	lr, [sp, #32]
   195d8:	str	ip, [sp, #24]
   195dc:	bl	13678 <xcb_create_window_checked@plt>
   195e0:	ldr	r1, [r4, #8]
   195e4:	mov	r9, r0
   195e8:	mov	r0, r5
   195ec:	bl	132c4 <xcb_map_window@plt>
   195f0:	mov	r1, r9
   195f4:	mov	r0, r5
   195f8:	bl	1372c <xcb_request_check@plt>
   195fc:	subs	r9, r0, #0
   19600:	bne	196a0 <xcb_depth_next@plt+0x5d40>
   19604:	ldr	r1, [r6, #32]
   19608:	mov	r0, r6
   1960c:	ldr	r7, [r4, #8]
   19610:	bl	18b00 <xcb_depth_next@plt+0x51a0>
   19614:	vcvt.s32.f64	s15, d8
   19618:	mov	r1, r7
   1961c:	vmov	r6, s15
   19620:	vcvt.s32.f64	s15, d9
   19624:	vstr	s15, [sp]
   19628:	mov	r3, r6
   1962c:	mov	r2, r0
   19630:	mov	r0, r5
   19634:	vmov	r5, s15
   19638:	bl	13420 <cairo_xcb_surface_create@plt>
   1963c:	mov	r2, r6
   19640:	mov	r1, sl
   19644:	mov	r3, r5
   19648:	str	r0, [r4, #16]
   1964c:	bl	138a0 <cairo_surface_create_similar@plt>
   19650:	mov	r7, r0
   19654:	bl	13864 <cairo_surface_get_device@plt>
   19658:	bl	13720 <cairo_device_reference@plt>
   1965c:	ldr	r1, [pc, #120]	; 196dc <xcb_depth_next@plt+0x5d7c>
   19660:	mov	r3, r9
   19664:	mov	r2, r4
   19668:	add	r1, pc, r1
   1966c:	add	r1, r1, #4
   19670:	str	r0, [r4, #4]
   19674:	mov	r0, r7
   19678:	bl	137bc <cairo_surface_set_user_data@plt>
   1967c:	subs	r5, r0, #0
   19680:	mov	r0, r7
   19684:	beq	196b4 <xcb_depth_next@plt+0x5d54>
   19688:	bl	13708 <cairo_surface_destroy@plt>
   1968c:	mov	r0, r4
   19690:	bl	18ea4 <xcb_depth_next@plt+0x5544>
   19694:	mov	r0, r5
   19698:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   1969c:	b	196b4 <xcb_depth_next@plt+0x5d54>
   196a0:	mov	r0, r5
   196a4:	bl	13774 <xcb_disconnect@plt>
   196a8:	mov	r0, r4
   196ac:	bl	13300 <free@plt>
   196b0:	mov	r0, #0
   196b4:	ldr	r2, [sp, #60]	; 0x3c
   196b8:	ldr	r3, [r8]
   196bc:	cmp	r2, r3
   196c0:	bne	196d0 <xcb_depth_next@plt+0x5d70>
   196c4:	add	sp, sp, #64	; 0x40
   196c8:	vpop	{d8-d9}
   196cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   196d0:	bl	13618 <__stack_chk_fail@plt>
   196d4:	andeq	r3, r1, r0, asr #22
   196d8:	andeq	r0, r0, r0, asr #6
   196dc:	andeq	r3, r1, r0, lsl #26
   196e0:	ldr	r2, [pc, #524]	; 198f4 <xcb_depth_next@plt+0x5f94>
   196e4:	mov	r0, #20
   196e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   196ec:	vpush	{d8-d9}
   196f0:	mov	r5, r3
   196f4:	ldr	r3, [pc, #508]	; 198f8 <xcb_depth_next@plt+0x5f98>
   196f8:	add	r2, pc, r2
   196fc:	sub	sp, sp, #68	; 0x44
   19700:	vmov.f64	d8, d0
   19704:	mov	r9, #1
   19708:	ldr	r8, [r2, r3]
   1970c:	str	r9, [sp, #44]	; 0x2c
   19710:	vmov.f64	d9, d1
   19714:	ldr	r3, [r8]
   19718:	str	r3, [sp, #60]	; 0x3c
   1971c:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   19720:	vmov.f64	d7, #112	; 0x3f800000  1.0
   19724:	vcmp.f64	d8, #0.0
   19728:	vmrs	APSR_nzcv, fpscr
   1972c:	vcmp.f64	d9, #0.0
   19730:	vmoveq.f64	d8, d7
   19734:	vmrs	APSR_nzcv, fpscr
   19738:	vmoveq.f64	d9, d7
   1973c:	mov	r4, r0
   19740:	mov	r0, #0
   19744:	str	r4, [r5]
   19748:	mov	r1, r0
   1974c:	bl	1327c <xcb_connect@plt>
   19750:	str	r0, [r4]
   19754:	mov	r5, r0
   19758:	bl	13090 <xcb_connection_has_error@plt>
   1975c:	subs	r7, r0, #0
   19760:	bne	198c8 <xcb_depth_next@plt+0x5f68>
   19764:	str	r7, [r4, #16]
   19768:	mov	r0, r5
   1976c:	bl	13378 <xcb_get_setup@plt>
   19770:	mov	r1, r0
   19774:	add	r0, sp, #48	; 0x30
   19778:	bl	132e8 <xcb_setup_roots_iterator@plt>
   1977c:	ldr	r6, [sp, #48]	; 0x30
   19780:	ldrh	r3, [r6, #20]
   19784:	vmov	s14, r3
   19788:	vcvt.f64.s32	d7, s14
   1978c:	vcmpe.f64	d8, d7
   19790:	vmrs	APSR_nzcv, fpscr
   19794:	bgt	198c0 <xcb_depth_next@plt+0x5f60>
   19798:	ldrh	r3, [r6, #22]
   1979c:	vmov	s14, r3
   197a0:	vcvt.f64.s32	d7, s14
   197a4:	vcmpe.f64	d9, d7
   197a8:	vmrs	APSR_nzcv, fpscr
   197ac:	bgt	198c0 <xcb_depth_next@plt+0x5f60>
   197b0:	str	r7, [r4, #12]
   197b4:	mov	r0, r5
   197b8:	bl	13738 <xcb_generate_id@plt>
   197bc:	vcvt.u32.f64	s15, d8
   197c0:	mov	lr, #512	; 0x200
   197c4:	vmov	ip, s15
   197c8:	vcvt.u32.f64	s15, d9
   197cc:	uxth	ip, ip
   197d0:	str	r0, [r4, #8]
   197d4:	mov	r2, r0
   197d8:	ldr	r3, [r6]
   197dc:	mov	r0, r5
   197e0:	ldrb	r1, [r6, #38]	; 0x26
   197e4:	str	ip, [sp, #8]
   197e8:	vmov	ip, s15
   197ec:	str	r9, [sp, #20]
   197f0:	str	r7, [sp]
   197f4:	str	r7, [sp, #4]
   197f8:	str	r7, [sp, #16]
   197fc:	uxth	ip, ip
   19800:	str	ip, [sp, #12]
   19804:	ldr	ip, [r6, #32]
   19808:	str	lr, [sp, #28]
   1980c:	add	lr, sp, #44	; 0x2c
   19810:	str	lr, [sp, #32]
   19814:	str	ip, [sp, #24]
   19818:	bl	13678 <xcb_create_window_checked@plt>
   1981c:	ldr	r1, [r4, #8]
   19820:	mov	r9, r0
   19824:	mov	r0, r5
   19828:	bl	132c4 <xcb_map_window@plt>
   1982c:	mov	r1, r9
   19830:	mov	r0, r5
   19834:	bl	1372c <xcb_request_check@plt>
   19838:	subs	r9, r0, #0
   1983c:	bne	198c0 <xcb_depth_next@plt+0x5f60>
   19840:	mov	r0, r6
   19844:	ldr	r6, [r4, #8]
   19848:	ldr	r1, [r0, #32]
   1984c:	bl	18b00 <xcb_depth_next@plt+0x51a0>
   19850:	vcvt.s32.f64	s15, d8
   19854:	mov	r1, r6
   19858:	vcvt.s32.f64	s18, d9
   1985c:	vmov	r3, s15
   19860:	vstr	s18, [sp]
   19864:	mov	r2, r0
   19868:	mov	r0, r5
   1986c:	bl	13420 <cairo_xcb_surface_create@plt>
   19870:	mov	r7, r0
   19874:	bl	13864 <cairo_surface_get_device@plt>
   19878:	bl	13720 <cairo_device_reference@plt>
   1987c:	ldr	r1, [pc, #120]	; 198fc <xcb_depth_next@plt+0x5f9c>
   19880:	mov	r3, r9
   19884:	mov	r2, r4
   19888:	add	r1, pc, r1
   1988c:	add	r1, r1, #4
   19890:	str	r0, [r4, #4]
   19894:	mov	r0, r7
   19898:	bl	137bc <cairo_surface_set_user_data@plt>
   1989c:	subs	r5, r0, #0
   198a0:	mov	r0, r7
   198a4:	beq	198d4 <xcb_depth_next@plt+0x5f74>
   198a8:	bl	13708 <cairo_surface_destroy@plt>
   198ac:	mov	r0, r4
   198b0:	bl	18ea4 <xcb_depth_next@plt+0x5544>
   198b4:	mov	r0, r5
   198b8:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   198bc:	b	198d4 <xcb_depth_next@plt+0x5f74>
   198c0:	mov	r0, r5
   198c4:	bl	13774 <xcb_disconnect@plt>
   198c8:	mov	r0, r4
   198cc:	bl	13300 <free@plt>
   198d0:	mov	r0, #0
   198d4:	ldr	r2, [sp, #60]	; 0x3c
   198d8:	ldr	r3, [r8]
   198dc:	cmp	r2, r3
   198e0:	bne	198f0 <xcb_depth_next@plt+0x5f90>
   198e4:	add	sp, sp, #68	; 0x44
   198e8:	vpop	{d8-d9}
   198ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   198f0:	bl	13618 <__stack_chk_fail@plt>
   198f4:	andeq	r3, r1, r0, lsl #18
   198f8:	andeq	r0, r0, r0, asr #6
   198fc:	andeq	r3, r1, r0, ror #21
   19900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19904:	vpush	{d8-d9}
   19908:	mov	r4, r3
   1990c:	ldr	r6, [pc, #872]	; 19c7c <xcb_depth_next@plt+0x631c>
   19910:	sub	sp, sp, #76	; 0x4c
   19914:	ldr	r3, [pc, #868]	; 19c80 <xcb_depth_next@plt+0x6320>
   19918:	mov	r0, #20
   1991c:	add	r6, pc, r6
   19920:	vmov.f64	d9, d0
   19924:	mov	fp, r2
   19928:	mov	r8, r1
   1992c:	ldr	r3, [r6, r3]
   19930:	vmov.f64	d8, d1
   19934:	str	r3, [sp, #16]
   19938:	ldr	r3, [r3]
   1993c:	str	r3, [sp, #68]	; 0x44
   19940:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   19944:	mov	r1, #16
   19948:	mov	r5, r0
   1994c:	mov	r0, #1
   19950:	str	r5, [r4]
   19954:	bl	16564 <xcb_depth_next@plt+0x2c04>
   19958:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1995c:	vcmp.f64	d9, #0.0
   19960:	vmrs	APSR_nzcv, fpscr
   19964:	vcmp.f64	d8, #0.0
   19968:	vmoveq.f64	d9, d7
   1996c:	vmrs	APSR_nzcv, fpscr
   19970:	vmoveq.f64	d8, d7
   19974:	mov	r7, r0
   19978:	mov	r0, #0
   1997c:	mov	r1, r0
   19980:	bl	1327c <xcb_connect@plt>
   19984:	cmp	r0, #0
   19988:	mov	r4, r0
   1998c:	str	r0, [r5]
   19990:	beq	19ad8 <xcb_depth_next@plt+0x6178>
   19994:	bl	13090 <xcb_connection_has_error@plt>
   19998:	subs	r9, r0, #0
   1999c:	bne	19ad8 <xcb_depth_next@plt+0x6178>
   199a0:	mov	r0, r4
   199a4:	bl	13378 <xcb_get_setup@plt>
   199a8:	mov	r1, r0
   199ac:	add	r0, sp, #56	; 0x38
   199b0:	bl	132e8 <xcb_setup_roots_iterator@plt>
   199b4:	mov	r0, r4
   199b8:	ldr	sl, [sp, #56]	; 0x38
   199bc:	bl	13624 <xcb_render_query_pict_formats@plt>
   199c0:	mov	r3, #1
   199c4:	str	r9, [r5, #16]
   199c8:	str	r3, [r5, #12]
   199cc:	str	r0, [sp, #20]
   199d0:	mov	r0, r4
   199d4:	bl	13738 <xcb_generate_id@plt>
   199d8:	cmp	r8, #4096	; 0x1000
   199dc:	str	r0, [r5, #8]
   199e0:	beq	19be4 <xcb_depth_next@plt+0x6284>
   199e4:	cmp	r8, #12288	; 0x3000
   199e8:	bne	19ad0 <xcb_depth_next@plt+0x6170>
   199ec:	mov	r1, #32
   199f0:	vcvt.u32.f64	s15, d9
   199f4:	ldr	r3, [sl]
   199f8:	mov	r2, r0
   199fc:	mov	r0, r4
   19a00:	vmov	ip, s15
   19a04:	vcvt.u32.f64	s15, d8
   19a08:	uxth	ip, ip
   19a0c:	str	ip, [sp]
   19a10:	vmov	ip, s15
   19a14:	uxth	ip, ip
   19a18:	str	ip, [sp, #4]
   19a1c:	bl	133c0 <xcb_create_pixmap_checked@plt>
   19a20:	mov	r1, r0
   19a24:	mov	r0, r4
   19a28:	bl	1372c <xcb_request_check@plt>
   19a2c:	subs	r2, r0, #0
   19a30:	bne	19ad0 <xcb_depth_next@plt+0x6170>
   19a34:	ldr	r1, [sp, #20]
   19a38:	mov	r0, r4
   19a3c:	bl	13654 <xcb_render_query_pict_formats_reply@plt>
   19a40:	cmp	r0, #0
   19a44:	str	r0, [r7]
   19a48:	beq	19ae4 <xcb_depth_next@plt+0x6184>
   19a4c:	add	r3, sp, #24
   19a50:	mov	r1, r0
   19a54:	str	r3, [sp, #12]
   19a58:	add	r9, sp, #44	; 0x2c
   19a5c:	mov	r0, r3
   19a60:	bl	136d8 <xcb_render_query_pict_formats_formats_iterator@plt>
   19a64:	ldr	r3, [sp, #12]
   19a68:	ldm	r3, {r0, r1, r2}
   19a6c:	stm	r9, {r0, r1, r2}
   19a70:	ldr	r3, [sp, #48]	; 0x30
   19a74:	cmp	r3, #0
   19a78:	bne	19a94 <xcb_depth_next@plt+0x6134>
   19a7c:	b	19b04 <xcb_depth_next@plt+0x61a4>
   19a80:	mov	r0, r9
   19a84:	bl	1312c <xcb_render_pictforminfo_next@plt>
   19a88:	ldr	r3, [sp, #48]	; 0x30
   19a8c:	cmp	r3, #0
   19a90:	beq	19b04 <xcb_depth_next@plt+0x61a4>
   19a94:	ldr	r3, [sp, #44]	; 0x2c
   19a98:	ldrb	r2, [r3, #4]
   19a9c:	cmp	r2, #1
   19aa0:	bne	19a80 <xcb_depth_next@plt+0x6120>
   19aa4:	ldrb	r2, [r3, #5]
   19aa8:	cmp	r2, #32
   19aac:	beq	19bec <xcb_depth_next@plt+0x628c>
   19ab0:	cmp	r2, #24
   19ab4:	beq	19bfc <xcb_depth_next@plt+0x629c>
   19ab8:	cmp	r2, #8
   19abc:	bne	19a80 <xcb_depth_next@plt+0x6120>
   19ac0:	ldr	r2, [r7, #12]
   19ac4:	cmp	r2, #0
   19ac8:	streq	r3, [r7, #12]
   19acc:	b	19a80 <xcb_depth_next@plt+0x6120>
   19ad0:	mov	r0, r4
   19ad4:	bl	13774 <xcb_disconnect@plt>
   19ad8:	mov	r0, r5
   19adc:	bl	13300 <free@plt>
   19ae0:	mov	r0, #0
   19ae4:	ldr	r1, [sp, #16]
   19ae8:	ldr	r2, [sp, #68]	; 0x44
   19aec:	ldr	r3, [r1]
   19af0:	cmp	r2, r3
   19af4:	bne	19c0c <xcb_depth_next@plt+0x62ac>
   19af8:	add	sp, sp, #76	; 0x4c
   19afc:	vpop	{d8-d9}
   19b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b04:	ldr	r2, [r7, #4]
   19b08:	cmp	r2, #0
   19b0c:	beq	19c10 <xcb_depth_next@plt+0x62b0>
   19b10:	ldr	r3, [r7, #8]
   19b14:	cmp	r3, #0
   19b18:	beq	19c34 <xcb_depth_next@plt+0x62d4>
   19b1c:	ldr	r1, [r7, #12]
   19b20:	cmp	r1, #0
   19b24:	beq	19c58 <xcb_depth_next@plt+0x62f8>
   19b28:	cmp	r8, #4096	; 0x1000
   19b2c:	beq	19b3c <xcb_depth_next@plt+0x61dc>
   19b30:	cmp	r8, #8192	; 0x2000
   19b34:	moveq	r3, r1
   19b38:	movne	r3, r2
   19b3c:	vcvt.s32.f64	s18, d9
   19b40:	ldr	r2, [r5, #8]
   19b44:	mov	r1, sl
   19b48:	mov	r0, r4
   19b4c:	vcvt.s32.f64	s16, d8
   19b50:	vstr	s18, [sp]
   19b54:	vstr	s16, [sp, #4]
   19b58:	bl	136f0 <cairo_xcb_surface_create_with_xrender_format@plt>
   19b5c:	mov	r9, r0
   19b60:	bl	13864 <cairo_surface_get_device@plt>
   19b64:	ldr	r3, [pc, #280]	; 19c84 <xcb_depth_next@plt+0x6324>
   19b68:	mov	r2, r7
   19b6c:	ldr	r1, [pc, #276]	; 19c88 <xcb_depth_next@plt+0x6328>
   19b70:	ldr	r3, [r6, r3]
   19b74:	add	r1, pc, r1
   19b78:	bl	137e0 <cairo_device_set_user_data@plt>
   19b7c:	cmp	fp, #1
   19b80:	beq	19b94 <xcb_depth_next@plt+0x6234>
   19b84:	mov	r0, r9
   19b88:	bl	13864 <cairo_surface_get_device@plt>
   19b8c:	mov	r1, #0
   19b90:	bl	13288 <cairo_xcb_device_debug_set_precision@plt>
   19b94:	mov	r0, r9
   19b98:	bl	13864 <cairo_surface_get_device@plt>
   19b9c:	bl	13720 <cairo_device_reference@plt>
   19ba0:	ldr	r1, [pc, #228]	; 19c8c <xcb_depth_next@plt+0x632c>
   19ba4:	mov	r2, r5
   19ba8:	mov	r3, #0
   19bac:	add	r1, pc, r1
   19bb0:	add	r1, r1, #4
   19bb4:	str	r0, [r5, #4]
   19bb8:	mov	r0, r9
   19bbc:	bl	137bc <cairo_surface_set_user_data@plt>
   19bc0:	subs	r4, r0, #0
   19bc4:	mov	r0, r9
   19bc8:	beq	19ae4 <xcb_depth_next@plt+0x6184>
   19bcc:	bl	13708 <cairo_surface_destroy@plt>
   19bd0:	mov	r0, r5
   19bd4:	bl	18ea4 <xcb_depth_next@plt+0x5544>
   19bd8:	mov	r0, r4
   19bdc:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   19be0:	b	19ae4 <xcb_depth_next@plt+0x6184>
   19be4:	mov	r1, #24
   19be8:	b	199f0 <xcb_depth_next@plt+0x6090>
   19bec:	ldr	r2, [r7, #4]
   19bf0:	cmp	r2, #0
   19bf4:	streq	r3, [r7, #4]
   19bf8:	b	19a80 <xcb_depth_next@plt+0x6120>
   19bfc:	ldr	r2, [r7, #8]
   19c00:	cmp	r2, #0
   19c04:	streq	r3, [r7, #8]
   19c08:	b	19a80 <xcb_depth_next@plt+0x6120>
   19c0c:	bl	13618 <__stack_chk_fail@plt>
   19c10:	ldr	r3, [pc, #120]	; 19c90 <xcb_depth_next@plt+0x6330>
   19c14:	movw	r2, #338	; 0x152
   19c18:	ldr	r0, [pc, #116]	; 19c94 <xcb_depth_next@plt+0x6334>
   19c1c:	ldr	r1, [pc, #116]	; 19c98 <xcb_depth_next@plt+0x6338>
   19c20:	add	r3, pc, r3
   19c24:	add	r0, pc, r0
   19c28:	add	r3, r3, #112	; 0x70
   19c2c:	add	r1, pc, r1
   19c30:	bl	13264 <__assert_fail@plt>
   19c34:	ldr	r3, [pc, #96]	; 19c9c <xcb_depth_next@plt+0x633c>
   19c38:	movw	r2, #339	; 0x153
   19c3c:	ldr	r0, [pc, #92]	; 19ca0 <xcb_depth_next@plt+0x6340>
   19c40:	ldr	r1, [pc, #92]	; 19ca4 <xcb_depth_next@plt+0x6344>
   19c44:	add	r3, pc, r3
   19c48:	add	r0, pc, r0
   19c4c:	add	r3, r3, #112	; 0x70
   19c50:	add	r1, pc, r1
   19c54:	bl	13264 <__assert_fail@plt>
   19c58:	ldr	r3, [pc, #72]	; 19ca8 <xcb_depth_next@plt+0x6348>
   19c5c:	mov	r2, #340	; 0x154
   19c60:	ldr	r0, [pc, #68]	; 19cac <xcb_depth_next@plt+0x634c>
   19c64:	ldr	r1, [pc, #68]	; 19cb0 <xcb_depth_next@plt+0x6350>
   19c68:	add	r3, pc, r3
   19c6c:	add	r0, pc, r0
   19c70:	add	r3, r3, #112	; 0x70
   19c74:	add	r1, pc, r1
   19c78:	bl	13264 <__assert_fail@plt>
   19c7c:	ldrdeq	r3, [r1], -ip
   19c80:	andeq	r0, r0, r0, asr #6
   19c84:	andeq	r0, r0, r8, lsr r3
   19c88:	strdeq	r3, [r1], -r4
   19c8c:			; <UNDEFINED> instruction: 0x000137bc
   19c90:	andeq	r1, r0, r0, lsr #14
   19c94:			; <UNDEFINED> instruction: 0x000018b0
   19c98:	andeq	r1, r0, ip, asr r8
   19c9c:	strdeq	r1, [r0], -ip
   19ca0:	andeq	r1, r0, r4, lsr #17
   19ca4:	andeq	r1, r0, r8, lsr r8
   19ca8:	ldrdeq	r1, [r0], -r8
   19cac:	muleq	r0, r8, r8
   19cb0:	andeq	r1, r0, r4, lsl r8
   19cb4:	ldr	r1, [pc, #180]	; 19d70 <xcb_depth_next@plt+0x6410>
   19cb8:	push	{r4, r5, r6, lr}
   19cbc:	add	r1, pc, r1
   19cc0:	add	r1, r1, #4
   19cc4:	mov	r4, r0
   19cc8:	bl	1315c <cairo_surface_get_user_data@plt>
   19ccc:	mov	r5, r0
   19cd0:	ldr	r0, [r0, #16]
   19cd4:	cmp	r0, #0
   19cd8:	beq	19d14 <xcb_depth_next@plt+0x63b4>
   19cdc:	bl	13450 <cairo_create@plt>
   19ce0:	vldr	d0, [pc, #128]	; 19d68 <xcb_depth_next@plt+0x6408>
   19ce4:	mov	r1, r4
   19ce8:	vmov.f64	d1, d0
   19cec:	mov	r6, r0
   19cf0:	bl	131bc <cairo_set_source_surface@plt>
   19cf4:	mov	r1, #1
   19cf8:	mov	r0, r6
   19cfc:	bl	13054 <cairo_set_operator@plt>
   19d00:	mov	r0, r6
   19d04:	bl	132dc <cairo_paint@plt>
   19d08:	mov	r0, r6
   19d0c:	bl	13114 <cairo_destroy@plt>
   19d10:	ldr	r4, [r5, #16]
   19d14:	mov	r0, r4
   19d18:	bl	13900 <cairo_surface_flush@plt>
   19d1c:	mov	r0, r4
   19d20:	bl	13498 <cairo_surface_status@plt>
   19d24:	cmp	r0, #0
   19d28:	bne	19d5c <xcb_depth_next@plt+0x63fc>
   19d2c:	ldr	r0, [r5]
   19d30:	bl	18e80 <xcb_depth_next@plt+0x5520>
   19d34:	mov	r0, r5
   19d38:	bl	18cf8 <xcb_depth_next@plt+0x5398>
   19d3c:	cmp	r0, #0
   19d40:	popne	{r4, r5, r6, pc}
   19d44:	ldr	r0, [r5]
   19d48:	bl	13090 <xcb_connection_has_error@plt>
   19d4c:	cmp	r0, #0
   19d50:	movne	r0, #11
   19d54:	moveq	r0, #0
   19d58:	pop	{r4, r5, r6, pc}
   19d5c:	mov	r0, r4
   19d60:	pop	{r4, r5, r6, lr}
   19d64:	b	13498 <cairo_surface_status@plt>
	...
   19d70:	andeq	r3, r1, ip, lsr #13
   19d74:	ldr	r0, [pc, #8]	; 19d84 <xcb_depth_next@plt+0x6424>
   19d78:	mov	r1, #7
   19d7c:	add	r0, pc, r0
   19d80:	b	16fe4 <xcb_depth_next@plt+0x3684>
   19d84:	andeq	r2, r1, r4, lsl #25
   19d88:	push	{r4, lr}
   19d8c:	mov	r4, r0
   19d90:	ldr	r0, [r0, #8]
   19d94:	bl	134b0 <cairo_device_finish@plt>
   19d98:	ldr	r0, [r4, #8]
   19d9c:	bl	130e4 <cairo_device_destroy@plt>
   19da0:	ldm	r4, {r0, r1}
   19da4:	bl	13258 <eglDestroyContext@plt>
   19da8:	mov	r1, #0
   19dac:	ldr	r0, [r4]
   19db0:	mov	r2, r1
   19db4:	mov	r3, r1
   19db8:	bl	132ac <eglMakeCurrent@plt>
   19dbc:	ldr	r0, [r4]
   19dc0:	bl	1384c <eglTerminate@plt>
   19dc4:	mov	r0, r4
   19dc8:	pop	{r4, lr}
   19dcc:	b	13300 <free@plt>
   19dd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19dd4:	vpush	{d8-d9}
   19dd8:	mov	r5, r3
   19ddc:	ldr	lr, [pc, #476]	; 19fc0 <xcb_depth_next@plt+0x6660>
   19de0:	mov	r7, r1
   19de4:	mov	r8, r2
   19de8:	sub	sp, sp, #96	; 0x60
   19dec:	add	lr, pc, lr
   19df0:	ldr	r4, [pc, #460]	; 19fc4 <xcb_depth_next@plt+0x6664>
   19df4:	add	r9, sp, #40	; 0x28
   19df8:	ldr	r6, [pc, #456]	; 19fc8 <xcb_depth_next@plt+0x6668>
   19dfc:	ldm	lr!, {r0, r1, r2, r3}
   19e00:	add	r4, pc, r4
   19e04:	mov	ip, r9
   19e08:	vmov.f64	d9, d0
   19e0c:	ldr	r6, [r4, r6]
   19e10:	movw	sl, #12344	; 0x3038
   19e14:	str	sl, [sp, #36]	; 0x24
   19e18:	stmia	ip!, {r0, r1, r2, r3}
   19e1c:	vmov.f64	d8, d1
   19e20:	ldm	lr!, {r0, r1, r2, r3}
   19e24:	ldr	r4, [r6]
   19e28:	stmia	ip!, {r0, r1, r2, r3}
   19e2c:	ldm	lr!, {r0, r1, r2, r3}
   19e30:	str	r4, [sp, #92]	; 0x5c
   19e34:	ldr	lr, [lr]
   19e38:	stmia	ip!, {r0, r1, r2, r3}
   19e3c:	mov	r1, #16
   19e40:	mov	r0, #1
   19e44:	str	lr, [ip]
   19e48:	bl	16564 <xcb_depth_next@plt+0x2c04>
   19e4c:	mov	r4, r0
   19e50:	mov	r0, #0
   19e54:	str	r4, [r5]
   19e58:	bl	13834 <eglGetDisplay@plt>
   19e5c:	add	r1, sp, #20
   19e60:	add	r2, sp, #24
   19e64:	str	r0, [r4]
   19e68:	bl	131c8 <eglInitialize@plt>
   19e6c:	subs	r5, r0, #0
   19e70:	beq	19f80 <xcb_depth_next@plt+0x6620>
   19e74:	ldr	r0, [r4]
   19e78:	add	r3, sp, #32
   19e7c:	mov	r1, r9
   19e80:	str	r3, [sp]
   19e84:	add	r2, sp, #28
   19e88:	mov	r3, #1
   19e8c:	bl	1393c <eglChooseConfig@plt>
   19e90:	ldr	r5, [sp, #32]
   19e94:	cmp	r5, #0
   19e98:	beq	19f80 <xcb_depth_next@plt+0x6620>
   19e9c:	movw	r0, #12450	; 0x30a2
   19ea0:	bl	13798 <eglBindAPI@plt>
   19ea4:	ldr	r1, [sp, #28]
   19ea8:	ldr	r0, [r4]
   19eac:	mov	r2, #0
   19eb0:	add	r3, sp, #36	; 0x24
   19eb4:	bl	13294 <eglCreateContext@plt>
   19eb8:	cmp	r0, #0
   19ebc:	mov	r1, r0
   19ec0:	str	r0, [r4, #4]
   19ec4:	ldr	r0, [r4]
   19ec8:	beq	19fa0 <xcb_depth_next@plt+0x6640>
   19ecc:	bl	13870 <cairo_egl_device_create@plt>
   19ed0:	cmp	r8, #1
   19ed4:	mov	r5, r0
   19ed8:	str	r0, [r4, #8]
   19edc:	beq	19f90 <xcb_depth_next@plt+0x6630>
   19ee0:	vmov.f64	d7, #112	; 0x3f800000  1.0
   19ee4:	vcmpe.f64	d9, d7
   19ee8:	vmrs	APSR_nzcv, fpscr
   19eec:	movmi	r2, #1
   19ef0:	bmi	19f04 <xcb_depth_next@plt+0x65a4>
   19ef4:	vmov.f64	d0, d9
   19ef8:	bl	13918 <ceil@plt>
   19efc:	vcvt.s32.f64	s0, d0
   19f00:	vmov	r2, s0
   19f04:	vmov.f64	d7, #112	; 0x3f800000  1.0
   19f08:	vcmpe.f64	d8, d7
   19f0c:	vmrs	APSR_nzcv, fpscr
   19f10:	movmi	r3, #1
   19f14:	bmi	19f30 <xcb_depth_next@plt+0x65d0>
   19f18:	vmov.f64	d0, d8
   19f1c:	str	r2, [sp, #12]
   19f20:	bl	13918 <ceil@plt>
   19f24:	ldr	r2, [sp, #12]
   19f28:	vcvt.s32.f64	s0, d0
   19f2c:	vmov	r3, s0
   19f30:	mov	r0, r5
   19f34:	mov	r1, r7
   19f38:	bl	13408 <cairo_gl_surface_create@plt>
   19f3c:	str	r0, [r4, #12]
   19f40:	mov	r5, r0
   19f44:	bl	13498 <cairo_surface_status@plt>
   19f48:	cmp	r0, #0
   19f4c:	moveq	r0, r5
   19f50:	bne	19f70 <xcb_depth_next@plt+0x6610>
   19f54:	ldr	r2, [sp, #92]	; 0x5c
   19f58:	ldr	r3, [r6]
   19f5c:	cmp	r2, r3
   19f60:	bne	19fbc <xcb_depth_next@plt+0x665c>
   19f64:	add	sp, sp, #96	; 0x60
   19f68:	vpop	{d8-d9}
   19f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f70:	mov	r0, r4
   19f74:	bl	19d88 <xcb_depth_next@plt+0x6428>
   19f78:	mov	r0, r5
   19f7c:	b	19f54 <xcb_depth_next@plt+0x65f4>
   19f80:	mov	r0, r4
   19f84:	bl	13300 <free@plt>
   19f88:	mov	r0, r5
   19f8c:	b	19f54 <xcb_depth_next@plt+0x65f4>
   19f90:	mov	r1, #0
   19f94:	bl	138b8 <cairo_gl_device_set_thread_aware@plt>
   19f98:	ldr	r5, [r4, #8]
   19f9c:	b	19ee0 <xcb_depth_next@plt+0x6580>
   19fa0:	str	r1, [sp, #12]
   19fa4:	bl	1384c <eglTerminate@plt>
   19fa8:	mov	r0, r4
   19fac:	bl	13300 <free@plt>
   19fb0:	ldr	r1, [sp, #12]
   19fb4:	mov	r0, r1
   19fb8:	b	19f54 <xcb_depth_next@plt+0x65f4>
   19fbc:	bl	13618 <__stack_chk_fail@plt>
   19fc0:	muleq	r0, ip, r7
   19fc4:	strdeq	r3, [r1], -r8
   19fc8:	andeq	r0, r0, r0, asr #6
   19fcc:	push	{r4, lr}
   19fd0:	mov	r4, r0
   19fd4:	ldr	r0, [r0, #8]
   19fd8:	bl	133fc <cairo_device_acquire@plt>
   19fdc:	cmp	r0, #0
   19fe0:	popne	{r4, pc}
   19fe4:	bl	13924 <glFinish@plt>
   19fe8:	ldr	r0, [r4, #8]
   19fec:	pop	{r4, lr}
   19ff0:	b	13390 <cairo_device_release@plt>
   19ff4:	ldr	r0, [pc, #8]	; 1a004 <xcb_depth_next@plt+0x66a4>
   19ff8:	mov	r1, #1
   19ffc:	add	r0, pc, r0
   1a000:	b	16fe4 <xcb_depth_next@plt+0x3684>
   1a004:	andeq	r2, r1, r4, lsr ip
   1a008:	ldr	r1, [pc, #136]	; 1a098 <xcb_depth_next@plt+0x6738>
   1a00c:	push	{r4, r5, r6, lr}
   1a010:	add	r1, pc, r1
   1a014:	mov	r4, r0
   1a018:	bl	1315c <cairo_surface_get_user_data@plt>
   1a01c:	subs	r6, r0, #0
   1a020:	beq	1a07c <xcb_depth_next@plt+0x671c>
   1a024:	ldr	r0, [r6, #20]
   1a028:	cmp	r0, #0
   1a02c:	beq	1a07c <xcb_depth_next@plt+0x671c>
   1a030:	bl	13450 <cairo_create@plt>
   1a034:	vldr	d0, [pc, #84]	; 1a090 <xcb_depth_next@plt+0x6730>
   1a038:	vmov.f64	d1, d0
   1a03c:	mov	r5, r0
   1a040:	mov	r0, r4
   1a044:	bl	13120 <cairo_surface_set_device_offset@plt>
   1a048:	vldr	d0, [pc, #64]	; 1a090 <xcb_depth_next@plt+0x6730>
   1a04c:	mov	r1, r4
   1a050:	vmov.f64	d1, d0
   1a054:	mov	r0, r5
   1a058:	bl	131bc <cairo_set_source_surface@plt>
   1a05c:	mov	r1, #1
   1a060:	mov	r0, r5
   1a064:	bl	13054 <cairo_set_operator@plt>
   1a068:	mov	r0, r5
   1a06c:	bl	132dc <cairo_paint@plt>
   1a070:	mov	r0, r5
   1a074:	bl	13114 <cairo_destroy@plt>
   1a078:	ldr	r4, [r6, #20]
   1a07c:	mov	r0, r4
   1a080:	bl	133b4 <cairo_gl_surface_swapbuffers@plt>
   1a084:	mov	r0, #0
   1a088:	pop	{r4, r5, r6, pc}
   1a08c:	nop	{0}
	...
   1a098:	andeq	r3, r1, r0, ror #6
   1a09c:	ldr	r3, [pc, #148]	; 1a138 <xcb_depth_next@plt+0x67d8>
   1a0a0:	ldr	r2, [pc, #148]	; 1a13c <xcb_depth_next@plt+0x67dc>
   1a0a4:	add	r3, pc, r3
   1a0a8:	push	{r4, r5, r6, r7, lr}
   1a0ac:	sub	sp, sp, #20
   1a0b0:	ldr	r4, [r3, r2]
   1a0b4:	mov	r5, r0
   1a0b8:	ldr	r0, [r0, #16]
   1a0bc:	ldr	r3, [r4]
   1a0c0:	str	r3, [sp, #12]
   1a0c4:	bl	133fc <cairo_device_acquire@plt>
   1a0c8:	cmp	r0, #0
   1a0cc:	movne	r0, #0
   1a0d0:	bne	1a11c <xcb_depth_next@plt+0x67bc>
   1a0d4:	mov	r0, #7936	; 0x1f00
   1a0d8:	bl	136cc <glGetString@plt>
   1a0dc:	mov	r7, r0
   1a0e0:	movw	r0, #7937	; 0x1f01
   1a0e4:	bl	136cc <glGetString@plt>
   1a0e8:	mov	r6, r0
   1a0ec:	movw	r0, #7938	; 0x1f02
   1a0f0:	bl	136cc <glGetString@plt>
   1a0f4:	ldr	r1, [pc, #68]	; 1a140 <xcb_depth_next@plt+0x67e0>
   1a0f8:	mov	r2, r7
   1a0fc:	mov	r3, r6
   1a100:	add	r1, pc, r1
   1a104:	str	r0, [sp]
   1a108:	add	r0, sp, #8
   1a10c:	bl	16624 <xcb_depth_next@plt+0x2cc4>
   1a110:	ldr	r0, [r5, #16]
   1a114:	bl	13390 <cairo_device_release@plt>
   1a118:	ldr	r0, [sp, #8]
   1a11c:	ldr	r2, [sp, #12]
   1a120:	ldr	r3, [r4]
   1a124:	cmp	r2, r3
   1a128:	bne	1a134 <xcb_depth_next@plt+0x67d4>
   1a12c:	add	sp, sp, #20
   1a130:	pop	{r4, r5, r6, r7, pc}
   1a134:	bl	13618 <__stack_chk_fail@plt>
   1a138:	andeq	r2, r1, r4, asr pc
   1a13c:	andeq	r0, r0, r0, asr #6
   1a140:	muleq	r0, ip, r5
   1a144:	push	{r4, lr}
   1a148:	mov	r4, r0
   1a14c:	ldr	r0, [r0, #16]
   1a150:	bl	134b0 <cairo_device_finish@plt>
   1a154:	ldr	r0, [r4, #16]
   1a158:	bl	130e4 <cairo_device_destroy@plt>
   1a15c:	ldr	r1, [r4, #12]
   1a160:	ldr	r0, [r4]
   1a164:	bl	131d4 <glXDestroyContext@plt>
   1a168:	ldr	r1, [r4, #8]
   1a16c:	cmp	r1, #0
   1a170:	beq	1a17c <xcb_depth_next@plt+0x681c>
   1a174:	ldr	r0, [r4]
   1a178:	bl	1333c <XDestroyWindow@plt>
   1a17c:	ldr	r0, [r4]
   1a180:	bl	13354 <XCloseDisplay@plt>
   1a184:	mov	r0, r4
   1a188:	pop	{r4, lr}
   1a18c:	b	13300 <free@plt>
   1a190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a194:	vpush	{d8-d9}
   1a198:	sub	sp, sp, #108	; 0x6c
   1a19c:	ldr	r5, [pc, #576]	; 1a3e4 <xcb_depth_next@plt+0x6a84>
   1a1a0:	mov	r7, r1
   1a1a4:	str	r3, [sp, #12]
   1a1a8:	mov	r8, r2
   1a1ac:	add	r5, pc, r5
   1a1b0:	ldr	r6, [pc, #560]	; 1a3e8 <xcb_depth_next@plt+0x6a88>
   1a1b4:	add	r9, sp, #56	; 0x38
   1a1b8:	ldr	r4, [pc, #556]	; 1a3ec <xcb_depth_next@plt+0x6a8c>
   1a1bc:	mov	lr, r5
   1a1c0:	add	r6, pc, r6
   1a1c4:	ldm	lr!, {r0, r1, r2, r3}
   1a1c8:	mov	ip, r9
   1a1cc:	ldr	r4, [r6, r4]
   1a1d0:	add	r5, r5, #44	; 0x2c
   1a1d4:	add	sl, sp, #20
   1a1d8:	vmov.f64	d8, d1
   1a1dc:	stmia	ip!, {r0, r1, r2, r3}
   1a1e0:	ldm	lr!, {r0, r1, r2, r3}
   1a1e4:	vmov.f64	d9, d0
   1a1e8:	str	r4, [sp, #8]
   1a1ec:	mov	r4, sl
   1a1f0:	ldr	fp, [sp, #8]
   1a1f4:	stmia	ip!, {r0, r1, r2, r3}
   1a1f8:	ldm	lr, {r0, r1, r2}
   1a1fc:	ldr	fp, [fp]
   1a200:	stm	ip, {r0, r1, r2}
   1a204:	ldm	r5!, {r0, r1, r2, r3}
   1a208:	str	fp, [sp, #100]	; 0x64
   1a20c:	stmia	r4!, {r0, r1, r2, r3}
   1a210:	ldm	r5!, {r0, r1, r2, r3}
   1a214:	stmia	r4!, {r0, r1, r2, r3}
   1a218:	mov	r1, #24
   1a21c:	ldr	r3, [r5]
   1a220:	mov	r0, #1
   1a224:	str	r3, [r4]
   1a228:	bl	131a4 <calloc@plt>
   1a22c:	ldr	fp, [sp, #12]
   1a230:	vmov.f64	d0, d9
   1a234:	str	r0, [fp]
   1a238:	mov	r4, r0
   1a23c:	bl	13918 <ceil@plt>
   1a240:	vmov.f64	d9, d0
   1a244:	vmov.f64	d0, d8
   1a248:	bl	13918 <ceil@plt>
   1a24c:	mov	r0, #0
   1a250:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1a254:	vcmp.f64	d9, #0.0
   1a258:	vmrs	APSR_nzcv, fpscr
   1a25c:	vmoveq.f64	d9, d7
   1a260:	vmov.f64	d8, d0
   1a264:	vcmp.f64	d0, #0.0
   1a268:	vmrs	APSR_nzcv, fpscr
   1a26c:	vmoveq.f64	d8, d7
   1a270:	bl	132a0 <XOpenDisplay@plt>
   1a274:	cmp	r0, #0
   1a278:	mov	r5, r0
   1a27c:	str	r0, [r4]
   1a280:	beq	1a3a8 <xcb_depth_next@plt+0x6a48>
   1a284:	cmp	r8, #0
   1a288:	beq	1a344 <xcb_depth_next@plt+0x69e4>
   1a28c:	cmp	r7, #4096	; 0x1000
   1a290:	mov	r0, r5
   1a294:	ldr	r1, [r5, #132]	; 0x84
   1a298:	movne	r2, r9
   1a29c:	moveq	r2, sl
   1a2a0:	bl	13558 <glXChooseVisual@plt>
   1a2a4:	cmp	r0, #0
   1a2a8:	mov	r9, r0
   1a2ac:	beq	1a370 <xcb_depth_next@plt+0x6a10>
   1a2b0:	mov	r3, #1
   1a2b4:	mov	r1, r9
   1a2b8:	mov	r2, #0
   1a2bc:	mov	r0, r5
   1a2c0:	bl	13204 <glXCreateContext@plt>
   1a2c4:	mov	r6, r0
   1a2c8:	mov	r0, r9
   1a2cc:	bl	1303c <XFree@plt>
   1a2d0:	mov	r1, r6
   1a2d4:	mov	r0, r5
   1a2d8:	str	r6, [r4, #12]
   1a2dc:	bl	131f8 <cairo_glx_device_create@plt>
   1a2e0:	cmp	r8, #1
   1a2e4:	mov	r3, r0
   1a2e8:	str	r0, [r4, #16]
   1a2ec:	beq	1a360 <xcb_depth_next@plt+0x6a00>
   1a2f0:	vcvt.s32.f64	s15, d9
   1a2f4:	mov	r0, r3
   1a2f8:	mov	r1, r7
   1a2fc:	vmov	r2, s15
   1a300:	vcvt.s32.f64	s15, d8
   1a304:	vmov	r3, s15
   1a308:	bl	13408 <cairo_gl_surface_create@plt>
   1a30c:	str	r0, [r4, #20]
   1a310:	mov	r9, r0
   1a314:	bl	13498 <cairo_surface_status@plt>
   1a318:	cmp	r0, #0
   1a31c:	moveq	r0, r9
   1a320:	bne	1a350 <xcb_depth_next@plt+0x69f0>
   1a324:	ldr	fp, [sp, #8]
   1a328:	ldr	r2, [sp, #100]	; 0x64
   1a32c:	ldr	r3, [fp]
   1a330:	cmp	r2, r3
   1a334:	bne	1a3e0 <xcb_depth_next@plt+0x6a80>
   1a338:	add	sp, sp, #108	; 0x6c
   1a33c:	vpop	{d8-d9}
   1a340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a344:	mov	r1, #1
   1a348:	bl	13330 <XSynchronize@plt>
   1a34c:	b	1a28c <xcb_depth_next@plt+0x692c>
   1a350:	mov	r0, r4
   1a354:	bl	1a144 <xcb_depth_next@plt+0x67e4>
   1a358:	mov	r0, r9
   1a35c:	b	1a324 <xcb_depth_next@plt+0x69c4>
   1a360:	mov	r1, #0
   1a364:	bl	138b8 <cairo_gl_device_set_thread_aware@plt>
   1a368:	ldr	r3, [r4, #16]
   1a36c:	b	1a2f0 <xcb_depth_next@plt+0x6990>
   1a370:	ldr	r3, [pc, #120]	; 1a3f0 <xcb_depth_next@plt+0x6a90>
   1a374:	mov	r1, #1
   1a378:	ldr	r0, [pc, #116]	; 1a3f4 <xcb_depth_next@plt+0x6a94>
   1a37c:	mov	r2, #45	; 0x2d
   1a380:	ldr	r3, [r6, r3]
   1a384:	add	r0, pc, r0
   1a388:	ldr	r3, [r3]
   1a38c:	bl	13570 <fwrite@plt>
   1a390:	mov	r0, r5
   1a394:	bl	13354 <XCloseDisplay@plt>
   1a398:	mov	r0, r4
   1a39c:	bl	13300 <free@plt>
   1a3a0:	mov	r0, r9
   1a3a4:	b	1a324 <xcb_depth_next@plt+0x69c4>
   1a3a8:	ldr	r3, [pc, #64]	; 1a3f0 <xcb_depth_next@plt+0x6a90>
   1a3ac:	ldr	r3, [r6, r3]
   1a3b0:	ldr	r6, [r3]
   1a3b4:	bl	133e4 <XDisplayName@plt>
   1a3b8:	ldr	r2, [pc, #56]	; 1a3f8 <xcb_depth_next@plt+0x6a98>
   1a3bc:	mov	r1, #1
   1a3c0:	add	r2, pc, r2
   1a3c4:	mov	r3, r0
   1a3c8:	mov	r0, r6
   1a3cc:	bl	1363c <__fprintf_chk@plt>
   1a3d0:	mov	r0, r4
   1a3d4:	bl	13300 <free@plt>
   1a3d8:	mov	r0, r5
   1a3dc:	b	1a324 <xcb_depth_next@plt+0x69c4>
   1a3e0:	bl	13618 <__stack_chk_fail@plt>
   1a3e4:	andeq	r1, r0, r0, lsr r4
   1a3e8:	andeq	r2, r1, r8, lsr lr
   1a3ec:	andeq	r0, r0, r0, asr #6
   1a3f0:	andeq	r0, r0, r4, asr #6
   1a3f4:	andeq	r1, r0, r0, asr #6
   1a3f8:	andeq	r1, r0, r8, ror #5
   1a3fc:	push	{r4, lr}
   1a400:	mov	r4, r0
   1a404:	ldr	r0, [r0, #16]
   1a408:	bl	133fc <cairo_device_acquire@plt>
   1a40c:	cmp	r0, #0
   1a410:	popne	{r4, pc}
   1a414:	bl	13924 <glFinish@plt>
   1a418:	ldr	r0, [r4, #16]
   1a41c:	pop	{r4, lr}
   1a420:	b	13390 <cairo_device_release@plt>
   1a424:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a428:	vpush	{d8-d9}
   1a42c:	sub	sp, sp, #96	; 0x60
   1a430:	ldr	r7, [pc, #576]	; 1a678 <xcb_depth_next@plt+0x6d18>
   1a434:	vmov.f64	d8, d1
   1a438:	ldr	r3, [pc, #572]	; 1a67c <xcb_depth_next@plt+0x6d1c>
   1a43c:	mov	r5, r2
   1a440:	add	r7, pc, r7
   1a444:	mov	r6, r0
   1a448:	mov	r8, r1
   1a44c:	ldr	r9, [r7, r3]
   1a450:	ldr	r3, [r9]
   1a454:	str	r3, [sp, #92]	; 0x5c
   1a458:	bl	13918 <ceil@plt>
   1a45c:	vmov.f64	d9, d0
   1a460:	vmov.f64	d0, d8
   1a464:	bl	13918 <ceil@plt>
   1a468:	mov	r0, #0
   1a46c:	vmov.f64	d7, #112	; 0x3f800000  1.0
   1a470:	vcmp.f64	d9, #0.0
   1a474:	vmrs	APSR_nzcv, fpscr
   1a478:	vmoveq.f64	d9, d7
   1a47c:	vmov.f64	d8, d0
   1a480:	vcmp.f64	d0, #0.0
   1a484:	vmrs	APSR_nzcv, fpscr
   1a488:	vmoveq.f64	d8, d7
   1a48c:	bl	132a0 <XOpenDisplay@plt>
   1a490:	cmp	r0, #0
   1a494:	mov	r4, r0
   1a498:	str	r0, [r5]
   1a49c:	beq	1a63c <xcb_depth_next@plt+0x6cdc>
   1a4a0:	cmp	r8, #0
   1a4a4:	beq	1a5e8 <xcb_depth_next@plt+0x6c88>
   1a4a8:	mov	r2, r6
   1a4ac:	mov	r0, r4
   1a4b0:	ldr	r1, [r4, #132]	; 0x84
   1a4b4:	bl	13558 <glXChooseVisual@plt>
   1a4b8:	subs	r6, r0, #0
   1a4bc:	beq	1a604 <xcb_depth_next@plt+0x6ca4>
   1a4c0:	ldr	r1, [r6, #8]
   1a4c4:	mov	r3, #0
   1a4c8:	ldr	ip, [r4, #140]	; 0x8c
   1a4cc:	mov	r0, r4
   1a4d0:	ldr	r2, [r6]
   1a4d4:	mov	r7, r3
   1a4d8:	add	r1, r1, r1, lsl #2
   1a4dc:	mov	r8, #1
   1a4e0:	add	r1, ip, r1, lsl #4
   1a4e4:	ldr	r1, [r1, #8]
   1a4e8:	bl	1324c <XCreateColormap@plt>
   1a4ec:	vcvt.u32.f64	s15, d9
   1a4f0:	ldr	r3, [r4, #132]	; 0x84
   1a4f4:	mov	r2, r7
   1a4f8:	ldr	r1, [r4, #140]	; 0x8c
   1a4fc:	movw	lr, #8712	; 0x2208
   1a500:	str	r8, [sp, #80]	; 0x50
   1a504:	add	ip, r3, r3, lsl #2
   1a508:	str	r7, [sp, #44]	; 0x2c
   1a50c:	mov	r3, r7
   1a510:	add	r1, r1, ip, lsl #4
   1a514:	vmov	sl, s15
   1a518:	vcvt.u32.f64	s15, d8
   1a51c:	vmov	ip, s15
   1a520:	str	r0, [sp, #84]	; 0x54
   1a524:	mov	r0, r4
   1a528:	ldr	r1, [r1, #8]
   1a52c:	str	r7, [sp, #8]
   1a530:	stm	sp, {sl, ip}
   1a534:	ldr	ip, [r6, #12]
   1a538:	str	r8, [sp, #16]
   1a53c:	str	ip, [sp, #12]
   1a540:	ldr	ip, [r6]
   1a544:	str	lr, [sp, #24]
   1a548:	add	lr, sp, #32
   1a54c:	str	lr, [sp, #28]
   1a550:	str	ip, [sp, #20]
   1a554:	bl	13210 <XCreateWindow@plt>
   1a558:	mov	r1, r0
   1a55c:	str	r0, [r5, #8]
   1a560:	mov	r0, r4
   1a564:	bl	134e0 <XMapWindow@plt>
   1a568:	mov	r3, r8
   1a56c:	mov	r1, r6
   1a570:	mov	r2, r7
   1a574:	mov	r0, r4
   1a578:	bl	13204 <glXCreateContext@plt>
   1a57c:	mov	r8, r0
   1a580:	mov	r0, r6
   1a584:	bl	1303c <XFree@plt>
   1a588:	mov	r1, r8
   1a58c:	str	r8, [r5, #12]
   1a590:	mov	r0, r4
   1a594:	bl	131f8 <cairo_glx_device_create@plt>
   1a598:	vcvt.s32.f64	s15, d9
   1a59c:	ldr	r1, [r5, #8]
   1a5a0:	vmov	r2, s15
   1a5a4:	vcvt.s32.f64	s15, d8
   1a5a8:	vmov	r3, s15
   1a5ac:	str	r0, [r5, #16]
   1a5b0:	bl	13414 <cairo_gl_surface_create_for_window@plt>
   1a5b4:	str	r0, [r5, #20]
   1a5b8:	mov	r6, r0
   1a5bc:	bl	13498 <cairo_surface_status@plt>
   1a5c0:	cmp	r0, r7
   1a5c4:	moveq	r0, r6
   1a5c8:	bne	1a5f4 <xcb_depth_next@plt+0x6c94>
   1a5cc:	ldr	r2, [sp, #92]	; 0x5c
   1a5d0:	ldr	r3, [r9]
   1a5d4:	cmp	r2, r3
   1a5d8:	bne	1a674 <xcb_depth_next@plt+0x6d14>
   1a5dc:	add	sp, sp, #96	; 0x60
   1a5e0:	vpop	{d8-d9}
   1a5e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a5e8:	mov	r1, #1
   1a5ec:	bl	13330 <XSynchronize@plt>
   1a5f0:	b	1a4a8 <xcb_depth_next@plt+0x6b48>
   1a5f4:	mov	r0, r5
   1a5f8:	bl	1a144 <xcb_depth_next@plt+0x67e4>
   1a5fc:	mov	r0, r7
   1a600:	b	1a5cc <xcb_depth_next@plt+0x6c6c>
   1a604:	ldr	r3, [pc, #116]	; 1a680 <xcb_depth_next@plt+0x6d20>
   1a608:	mov	r1, #1
   1a60c:	ldr	r0, [pc, #112]	; 1a684 <xcb_depth_next@plt+0x6d24>
   1a610:	mov	r2, #46	; 0x2e
   1a614:	ldr	r3, [r7, r3]
   1a618:	add	r0, pc, r0
   1a61c:	ldr	r3, [r3]
   1a620:	bl	13570 <fwrite@plt>
   1a624:	mov	r0, r4
   1a628:	bl	13354 <XCloseDisplay@plt>
   1a62c:	mov	r0, r5
   1a630:	bl	13300 <free@plt>
   1a634:	mov	r0, r6
   1a638:	b	1a5cc <xcb_depth_next@plt+0x6c6c>
   1a63c:	ldr	r3, [pc, #60]	; 1a680 <xcb_depth_next@plt+0x6d20>
   1a640:	ldr	r3, [r7, r3]
   1a644:	ldr	r6, [r3]
   1a648:	bl	133e4 <XDisplayName@plt>
   1a64c:	ldr	r2, [pc, #52]	; 1a688 <xcb_depth_next@plt+0x6d28>
   1a650:	mov	r1, #1
   1a654:	add	r2, pc, r2
   1a658:	mov	r3, r0
   1a65c:	mov	r0, r6
   1a660:	bl	1363c <__fprintf_chk@plt>
   1a664:	mov	r0, r5
   1a668:	bl	13300 <free@plt>
   1a66c:	mov	r0, r4
   1a670:	b	1a5cc <xcb_depth_next@plt+0x6c6c>
   1a674:	bl	13618 <__stack_chk_fail@plt>
   1a678:			; <UNDEFINED> instruction: 0x00012bb8
   1a67c:	andeq	r0, r0, r0, asr #6
   1a680:	andeq	r0, r0, r4, asr #6
   1a684:	ldrdeq	r1, [r0], -ip
   1a688:	andeq	r1, r0, r4, asr r0
   1a68c:	push	{r4, r5, r6, r7, r8, lr}
   1a690:	vpush	{d8-d9}
   1a694:	mov	r7, r2
   1a698:	ldr	lr, [pc, #244]	; 1a794 <xcb_depth_next@plt+0x6e34>
   1a69c:	mov	r6, r3
   1a6a0:	mov	r8, r1
   1a6a4:	ldr	r4, [pc, #236]	; 1a798 <xcb_depth_next@plt+0x6e38>
   1a6a8:	add	lr, pc, lr
   1a6ac:	sub	sp, sp, #48	; 0x30
   1a6b0:	add	lr, lr, #80	; 0x50
   1a6b4:	ldr	r5, [pc, #224]	; 1a79c <xcb_depth_next@plt+0x6e3c>
   1a6b8:	add	r4, pc, r4
   1a6bc:	mov	ip, sp
   1a6c0:	ldm	lr!, {r0, r1, r2, r3}
   1a6c4:	vmov.f64	d9, d0
   1a6c8:	ldr	r5, [r4, r5]
   1a6cc:	stmia	ip!, {r0, r1, r2, r3}
   1a6d0:	vmov.f64	d8, d1
   1a6d4:	ldm	lr!, {r0, r1, r2, r3}
   1a6d8:	ldr	r4, [r5]
   1a6dc:	stmia	ip!, {r0, r1, r2, r3}
   1a6e0:	ldm	lr, {r0, r1, r2}
   1a6e4:	str	r4, [sp, #44]	; 0x2c
   1a6e8:	stm	ip, {r0, r1, r2}
   1a6ec:	mov	r1, #24
   1a6f0:	mov	r0, #1
   1a6f4:	bl	131a4 <calloc@plt>
   1a6f8:	mov	r1, r7
   1a6fc:	vmov.f64	d0, d9
   1a700:	vmov.f64	d1, d8
   1a704:	str	r0, [r6]
   1a708:	mov	r2, r0
   1a70c:	mov	r4, r0
   1a710:	mov	r0, sp
   1a714:	bl	1a424 <xcb_depth_next@plt+0x6ac4>
   1a718:	cmp	r0, #0
   1a71c:	beq	1a774 <xcb_depth_next@plt+0x6e14>
   1a720:	vcvt.s32.f64	s15, d9
   1a724:	mov	r1, r8
   1a728:	ldr	r0, [r4, #20]
   1a72c:	vmov	r2, s15
   1a730:	vcvt.s32.f64	s15, d8
   1a734:	vmov	r3, s15
   1a738:	bl	138a0 <cairo_surface_create_similar@plt>
   1a73c:	ldr	r1, [pc, #92]	; 1a7a0 <xcb_depth_next@plt+0x6e40>
   1a740:	mov	r2, r4
   1a744:	mov	r3, #0
   1a748:	add	r1, pc, r1
   1a74c:	mov	r6, r0
   1a750:	bl	137bc <cairo_surface_set_user_data@plt>
   1a754:	subs	r7, r0, #0
   1a758:	mov	r0, r6
   1a75c:	beq	1a774 <xcb_depth_next@plt+0x6e14>
   1a760:	bl	13708 <cairo_surface_destroy@plt>
   1a764:	mov	r0, r4
   1a768:	bl	1a144 <xcb_depth_next@plt+0x67e4>
   1a76c:	mov	r0, r7
   1a770:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   1a774:	ldr	r2, [sp, #44]	; 0x2c
   1a778:	ldr	r3, [r5]
   1a77c:	cmp	r2, r3
   1a780:	bne	1a790 <xcb_depth_next@plt+0x6e30>
   1a784:	add	sp, sp, #48	; 0x30
   1a788:	vpop	{d8-d9}
   1a78c:	pop	{r4, r5, r6, r7, r8, pc}
   1a790:	bl	13618 <__stack_chk_fail@plt>
   1a794:	andeq	r0, r0, r4, lsr pc
   1a798:	andeq	r2, r1, r0, asr #18
   1a79c:	andeq	r0, r0, r0, asr #6
   1a7a0:	andeq	r2, r1, r8, lsr #24
   1a7a4:	ldr	ip, [pc, #140]	; 1a838 <xcb_depth_next@plt+0x6ed8>
   1a7a8:	push	{r4, r5, r6, r7, lr}
   1a7ac:	vpush	{d8-d9}
   1a7b0:	add	ip, pc, ip
   1a7b4:	ldr	lr, [pc, #128]	; 1a83c <xcb_depth_next@plt+0x6edc>
   1a7b8:	sub	sp, sp, #76	; 0x4c
   1a7bc:	ldr	r1, [pc, #124]	; 1a840 <xcb_depth_next@plt+0x6ee0>
   1a7c0:	mov	r7, r3
   1a7c4:	mov	r6, r2
   1a7c8:	mov	r0, sp
   1a7cc:	ldr	r4, [ip, lr]
   1a7d0:	add	r1, pc, r1
   1a7d4:	mov	r2, #68	; 0x44
   1a7d8:	add	r1, r1, #124	; 0x7c
   1a7dc:	vmov.f64	d9, d0
   1a7e0:	ldr	r3, [r4]
   1a7e4:	vmov.f64	d8, d1
   1a7e8:	str	r3, [sp, #68]	; 0x44
   1a7ec:	bl	13444 <memcpy@plt>
   1a7f0:	mov	r1, #24
   1a7f4:	mov	r0, #1
   1a7f8:	bl	131a4 <calloc@plt>
   1a7fc:	mov	r1, r6
   1a800:	vmov.f64	d0, d9
   1a804:	vmov.f64	d1, d8
   1a808:	mov	r2, r0
   1a80c:	str	r0, [r7]
   1a810:	mov	r0, sp
   1a814:	bl	1a424 <xcb_depth_next@plt+0x6ac4>
   1a818:	ldr	r2, [sp, #68]	; 0x44
   1a81c:	ldr	r3, [r4]
   1a820:	cmp	r2, r3
   1a824:	bne	1a834 <xcb_depth_next@plt+0x6ed4>
   1a828:	add	sp, sp, #76	; 0x4c
   1a82c:	vpop	{d8-d9}
   1a830:	pop	{r4, r5, r6, r7, pc}
   1a834:	bl	13618 <__stack_chk_fail@plt>
   1a838:	andeq	r2, r1, r8, asr #16
   1a83c:	andeq	r0, r0, r0, asr #6
   1a840:	andeq	r0, r0, ip, lsl #28
   1a844:	push	{r4, r5, r6, r7, lr}
   1a848:	vpush	{d8-d9}
   1a84c:	mov	r5, r2
   1a850:	ldr	lr, [pc, #144]	; 1a8e8 <xcb_depth_next@plt+0x6f88>
   1a854:	mov	r6, r3
   1a858:	ldr	r4, [pc, #140]	; 1a8ec <xcb_depth_next@plt+0x6f8c>
   1a85c:	sub	sp, sp, #52	; 0x34
   1a860:	add	lr, pc, lr
   1a864:	ldr	r7, [pc, #132]	; 1a8f0 <xcb_depth_next@plt+0x6f90>
   1a868:	add	lr, lr, #80	; 0x50
   1a86c:	add	r4, pc, r4
   1a870:	mov	ip, sp
   1a874:	vmov.f64	d9, d0
   1a878:	ldm	lr!, {r0, r1, r2, r3}
   1a87c:	ldr	r4, [r4, r7]
   1a880:	vmov.f64	d8, d1
   1a884:	stmia	ip!, {r0, r1, r2, r3}
   1a888:	ldm	lr!, {r0, r1, r2, r3}
   1a88c:	ldr	r7, [r4]
   1a890:	stmia	ip!, {r0, r1, r2, r3}
   1a894:	ldm	lr, {r0, r1, r2}
   1a898:	str	r7, [sp, #44]	; 0x2c
   1a89c:	stm	ip, {r0, r1, r2}
   1a8a0:	mov	r1, #24
   1a8a4:	mov	r0, #1
   1a8a8:	bl	131a4 <calloc@plt>
   1a8ac:	vmov.f64	d0, d9
   1a8b0:	mov	r1, r5
   1a8b4:	vmov.f64	d1, d8
   1a8b8:	mov	r2, r0
   1a8bc:	str	r0, [r6]
   1a8c0:	mov	r0, sp
   1a8c4:	bl	1a424 <xcb_depth_next@plt+0x6ac4>
   1a8c8:	ldr	r2, [sp, #44]	; 0x2c
   1a8cc:	ldr	r3, [r4]
   1a8d0:	cmp	r2, r3
   1a8d4:	bne	1a8e4 <xcb_depth_next@plt+0x6f84>
   1a8d8:	add	sp, sp, #52	; 0x34
   1a8dc:	vpop	{d8-d9}
   1a8e0:	pop	{r4, r5, r6, r7, pc}
   1a8e4:	bl	13618 <__stack_chk_fail@plt>
   1a8e8:	andeq	r0, r0, ip, ror sp
   1a8ec:	andeq	r2, r1, ip, lsl #15
   1a8f0:	andeq	r0, r0, r0, asr #6
   1a8f4:	ldr	r0, [pc, #8]	; 1a904 <xcb_depth_next@plt+0x6fa4>
   1a8f8:	mov	r1, #5
   1a8fc:	add	r0, pc, r0
   1a900:	b	16fe4 <xcb_depth_next@plt+0x3684>
   1a904:	andeq	r2, r1, r4, lsl #7
   1a908:	mov	r0, #11
   1a90c:	bx	lr
   1a910:	push	{r4, lr}
   1a914:	mov	r4, r0
   1a918:	ldr	r0, [r0]
   1a91c:	bl	13300 <free@plt>
   1a920:	mov	r0, r4
   1a924:	pop	{r4, lr}
   1a928:	b	13300 <free@plt>
   1a92c:	push	{r3, r4, r5, r6, r7, lr}
   1a930:	mov	r4, r1
   1a934:	ldr	r1, [pc, #116]	; 1a9b0 <xcb_depth_next@plt+0x7050>
   1a938:	mov	r6, r2
   1a93c:	mov	r5, r3
   1a940:	add	r1, pc, r1
   1a944:	bl	1315c <cairo_surface_get_user_data@plt>
   1a948:	mov	r1, r4
   1a94c:	ldr	r0, [r0]
   1a950:	bl	17e40 <xcb_depth_next@plt+0x44e0>
   1a954:	mov	r4, r0
   1a958:	bl	1378c <cairo_image_surface_get_width@plt>
   1a95c:	mov	r7, r0
   1a960:	mov	r0, r4
   1a964:	bl	1360c <cairo_image_surface_get_height@plt>
   1a968:	rsb	r7, r6, r7
   1a96c:	vmov	s0, r7
   1a970:	vcvt.f64.s32	d0, s0
   1a974:	rsb	r0, r5, r0
   1a978:	vmov	s2, r0
   1a97c:	mov	r0, r4
   1a980:	vcvt.f64.s32	d1, s2
   1a984:	bl	13120 <cairo_surface_set_device_offset@plt>
   1a988:	mov	r3, r5
   1a98c:	mov	r2, r6
   1a990:	mov	r1, #0
   1a994:	mov	r0, r4
   1a998:	bl	1778c <xcb_depth_next@plt+0x3e2c>
   1a99c:	mov	r5, r0
   1a9a0:	mov	r0, r4
   1a9a4:	bl	13708 <cairo_surface_destroy@plt>
   1a9a8:	mov	r0, r5
   1a9ac:	pop	{r3, r4, r5, r6, r7, pc}
   1a9b0:	andeq	r2, r1, r4, lsr sl
   1a9b4:	push	{r4, lr}
   1a9b8:	mov	r4, r0
   1a9bc:	bl	135b8 <cairo_surface_finish@plt>
   1a9c0:	mov	r0, r4
   1a9c4:	pop	{r4, lr}
   1a9c8:	b	13498 <cairo_surface_status@plt>
   1a9cc:	push	{r3, r4, r5, r6, r7, lr}
   1a9d0:	vpush	{d8-d9}
   1a9d4:	mov	r7, r0
   1a9d8:	mov	r0, #24
   1a9dc:	mov	r6, r3
   1a9e0:	vmov.f64	d9, d0
   1a9e4:	mov	r5, r1
   1a9e8:	vmov.f64	d8, d1
   1a9ec:	bl	16508 <xcb_depth_next@plt+0x2ba8>
   1a9f0:	ldr	r1, [pc, #152]	; 1aa90 <xcb_depth_next@plt+0x7130>
   1a9f4:	mov	r2, r7
   1a9f8:	add	r1, pc, r1
   1a9fc:	str	r0, [r6]
   1aa00:	mov	r4, r0
   1aa04:	vstr	d9, [r0, #8]
   1aa08:	vstr	d8, [r0, #16]
   1aa0c:	bl	16624 <xcb_depth_next@plt+0x2cc4>
   1aa10:	ldr	r0, [r4]
   1aa14:	bl	16790 <xcb_depth_next@plt+0x2e30>
   1aa18:	ldr	r0, [r4]
   1aa1c:	bl	136e4 <cairo_script_create@plt>
   1aa20:	mov	r1, r5
   1aa24:	vmov.f64	d0, d9
   1aa28:	vmov.f64	d1, d8
   1aa2c:	mov	r6, r0
   1aa30:	bl	134d4 <cairo_script_surface_create@plt>
   1aa34:	mov	r5, r0
   1aa38:	mov	r0, r6
   1aa3c:	bl	130e4 <cairo_device_destroy@plt>
   1aa40:	ldr	r1, [pc, #76]	; 1aa94 <xcb_depth_next@plt+0x7134>
   1aa44:	mov	r0, r5
   1aa48:	mov	r2, r4
   1aa4c:	add	r1, pc, r1
   1aa50:	mov	r3, #0
   1aa54:	bl	137bc <cairo_surface_set_user_data@plt>
   1aa58:	subs	r6, r0, #0
   1aa5c:	mov	r0, r5
   1aa60:	beq	1aa88 <xcb_depth_next@plt+0x7128>
   1aa64:	bl	13708 <cairo_surface_destroy@plt>
   1aa68:	mov	r0, r6
   1aa6c:	bl	176cc <xcb_depth_next@plt+0x3d6c>
   1aa70:	mov	r5, r0
   1aa74:	ldr	r0, [r4]
   1aa78:	bl	13300 <free@plt>
   1aa7c:	mov	r0, r4
   1aa80:	bl	13300 <free@plt>
   1aa84:	mov	r0, r5
   1aa88:	vpop	{d8-d9}
   1aa8c:	pop	{r3, r4, r5, r6, r7, pc}
   1aa90:	muleq	r0, r0, sp
   1aa94:	andeq	r2, r1, r8, lsr #18
   1aa98:	ldr	r0, [pc, #8]	; 1aaa8 <xcb_depth_next@plt+0x7148>
   1aa9c:	mov	r1, #1
   1aaa0:	add	r0, pc, r0
   1aaa4:	b	16fe4 <xcb_depth_next@plt+0x3684>
   1aaa8:	andeq	r2, r1, r0, ror r3
   1aaac:	bx	lr
   1aab0:	bx	lr
   1aab4:	bx	lr
   1aab8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1aabc:	mov	r7, r0
   1aac0:	ldr	r6, [pc, #76]	; 1ab14 <xcb_depth_next@plt+0x71b4>
   1aac4:	mov	r8, r1
   1aac8:	ldr	r5, [pc, #72]	; 1ab18 <xcb_depth_next@plt+0x71b8>
   1aacc:	mov	r9, r2
   1aad0:	add	r6, pc, r6
   1aad4:	bl	12fec <_init@@Base>
   1aad8:	add	r5, pc, r5
   1aadc:	rsb	r6, r5, r6
   1aae0:	asrs	r6, r6, #2
   1aae4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aae8:	sub	r5, r5, #4
   1aaec:	mov	r4, #0
   1aaf0:	add	r4, r4, #1
   1aaf4:	ldr	r3, [r5, #4]!
   1aaf8:	mov	r0, r7
   1aafc:	mov	r1, r8
   1ab00:	mov	r2, r9
   1ab04:	blx	r3
   1ab08:	cmp	r4, r6
   1ab0c:	bne	1aaf0 <xcb_depth_next@plt+0x7190>
   1ab10:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ab14:	andeq	r1, r1, r8, lsl #24
   1ab18:	strdeq	r1, [r1], -ip
   1ab1c:	bx	lr

Disassembly of section .fini:

0001ab20 <_fini@@Base>:
   1ab20:	push	{r3, lr}
   1ab24:	pop	{r3, pc}
