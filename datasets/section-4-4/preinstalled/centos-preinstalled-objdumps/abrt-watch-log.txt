
centos-preinstalled/abrt-watch-log:     file format elf32-littlearm


Disassembly of section .init:

00000cc0 <_init@@Base>:
 cc0:	push	{r3, lr}
 cc4:	bl	15c4 <main@@Base+0x6f8>
 cc8:	pop	{r3, pc}

Disassembly of section .plt:

00000ccc <libreport_show_usage_and_die@plt-0x14>:
 ccc:	push	{lr}		; (str lr, [sp, #-4]!)
 cd0:	ldr	lr, [pc, #4]	; cdc <_init@@Base+0x1c>
 cd4:	add	lr, pc, lr
 cd8:	ldr	pc, [lr, #8]!
 cdc:	andeq	r2, r1, ip, lsr r2

00000ce0 <libreport_show_usage_and_die@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #572]!	; 0x23c

00000cec <__xstat64@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #564]!	; 0x234

00000cf8 <log_and_die_wrapper@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #556]!	; 0x22c

00000d04 <strncmp@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #548]!	; 0x224

00000d10 <libreport_parse_opts@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #540]!	; 0x21c

00000d1c <inotify_rm_watch@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #532]!	; 0x214

00000d28 <g_list_append@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #524]!	; 0x20c

00000d34 <inotify_add_watch@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #516]!	; 0x204

00000d40 <libreport_export_abrt_envvars@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #508]!	; 0x1fc

00000d4c <textdomain@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #500]!	; 0x1f4

00000d58 <memset@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #492]!	; 0x1ec

00000d64 <__fxstat64@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #484]!	; 0x1e4

00000d70 <mmap64@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #476]!	; 0x1dc

00000d7c <close@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #468]!	; 0x1d4

00000d88 <read@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #460]!	; 0x1cc

00000d94 <abort@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #452]!	; 0x1c4

00000da0 <open64@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #444]!	; 0x1bc

00000dac <libreport_safe_waitpid@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #436]!	; 0x1b4

00000db8 <vfork@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #428]!	; 0x1ac

00000dc4 <dcgettext@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #420]!	; 0x1a4

00000dd0 <log_wrapper@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #412]!	; 0x19c

00000ddc <sleep@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #404]!	; 0x194

00000de8 <bindtextdomain@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #396]!	; 0x18c

00000df4 <sysconf@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #388]!	; 0x184

00000e00 <setlocale@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #380]!	; 0x17c

00000e0c <libreport_xmove_fd@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #372]!	; 0x174

00000e18 <strlen@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #364]!	; 0x16c

00000e24 <munmap@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #356]!	; 0x164

00000e30 <lseek64@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #348]!	; 0x15c

00000e3c <libreport_close_on_exec_on@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #73728	; 0x12000
 e44:	ldr	pc, [ip, #340]!	; 0x154

00000e48 <abrt_init@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #73728	; 0x12000
 e50:	ldr	pc, [ip, #332]!	; 0x14c

00000e54 <__errno_location@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #73728	; 0x12000
 e5c:	ldr	pc, [ip, #324]!	; 0x144

00000e60 <memchr@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #73728	; 0x12000
 e68:	ldr	pc, [ip, #316]!	; 0x13c

00000e6c <fflush@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #73728	; 0x12000
 e74:	ldr	pc, [ip, #308]!	; 0x134

00000e78 <inotify_init@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #73728	; 0x12000
 e80:	ldr	pc, [ip, #300]!	; 0x12c

00000e84 <getenv@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #73728	; 0x12000
 e8c:	ldr	pc, [ip, #292]!	; 0x124

00000e90 <__libc_start_main@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #73728	; 0x12000
 e98:	ldr	pc, [ip, #284]!	; 0x11c

00000e9c <execvp@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #73728	; 0x12000
 ea4:	ldr	pc, [ip, #276]!	; 0x114

00000ea8 <__gmon_start__@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #73728	; 0x12000
 eb0:	ldr	pc, [ip, #268]!	; 0x10c

00000eb4 <strchr@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #73728	; 0x12000
 ebc:	ldr	pc, [ip, #260]!	; 0x104

00000ec0 <__cxa_finalize@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #73728	; 0x12000
 ec8:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00000ecc <main@@Base>:
     ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ed0:	sub	sp, sp, #4352	; 0x1100
     ed4:	ldr	r5, [pc, #1536]	; 14dc <main@@Base+0x610>
     ed8:	sub	sp, sp, #4
     edc:	ldr	r3, [pc, #1532]	; 14e0 <main@@Base+0x614>
     ee0:	mov	r8, r1
     ee4:	add	r5, pc, r5
     ee8:	ldr	r1, [pc, #1524]	; 14e4 <main@@Base+0x618>
     eec:	add	r2, sp, #8192	; 0x2000
     ef0:	ldr	r6, [pc, #1520]	; 14e8 <main@@Base+0x61c>
     ef4:	ldr	r3, [r5, r3]
     ef8:	mov	sl, r0
     efc:	add	r1, pc, r1
     f00:	mov	r0, #6
     f04:	add	r6, pc, r6
     f08:	mov	r7, #0
     f0c:	ldr	r3, [r3]
     f10:	add	r4, sp, #48	; 0x30
     f14:	str	r3, [r2, #-3844]	; 0xfffff0fc
     f18:	bl	e00 <setlocale@plt>
     f1c:	ldr	r1, [pc, #1480]	; 14ec <main@@Base+0x620>
     f20:	mov	r0, r6
     f24:	add	r1, pc, r1
     f28:	bl	de8 <bindtextdomain@plt>
     f2c:	mov	r0, r6
     f30:	bl	d4c <textdomain@plt>
     f34:	mov	r0, r8
     f38:	bl	e48 <abrt_init@plt>
     f3c:	mov	r0, #30
     f40:	bl	df4 <sysconf@plt>
     f44:	ldr	ip, [pc, #1444]	; 14f0 <main@@Base+0x624>
     f48:	ldr	r1, [pc, #1444]	; 14f4 <main@@Base+0x628>
     f4c:	add	lr, sp, #4352	; 0x1100
     f50:	add	ip, pc, ip
     f54:	movw	r3, #61228	; 0xef2c
     f58:	movt	r3, #65535	; 0xffff
     f5c:	add	r1, pc, r1
     f60:	mov	r2, #5
     f64:	str	r7, [lr, r3]
     f68:	str	r0, [ip]
     f6c:	mov	r0, r6
     f70:	bl	dc4 <dcgettext@plt>
     f74:	mov	r1, r7
     f78:	mov	r2, #96	; 0x60
     f7c:	mov	r9, r0
     f80:	mov	r0, r4
     f84:	bl	d58 <memset@plt>
     f88:	ldr	r3, [pc, #1384]	; 14f8 <main@@Base+0x62c>
     f8c:	ldr	r2, [pc, #1384]	; 14fc <main@@Base+0x630>
     f90:	mov	r1, #118	; 0x76
     f94:	str	r1, [r4, #4]
     f98:	mov	r0, r6
     f9c:	add	r2, pc, r2
     fa0:	str	r2, [r4, #8]
     fa4:	ldr	r3, [r5, r3]
     fa8:	mov	r2, #5
     fac:	ldr	r1, [pc, #1356]	; 1500 <main@@Base+0x634>
     fb0:	str	r3, [r4, #12]
     fb4:	add	r1, pc, r1
     fb8:	bl	dc4 <dcgettext@plt>
     fbc:	ldr	r1, [pc, #1344]	; 1504 <main@@Base+0x638>
     fc0:	mov	r3, #115	; 0x73
     fc4:	mov	r2, #5
     fc8:	add	r1, pc, r1
     fcc:	str	r3, [r4, #28]
     fd0:	str	r0, [r4, #20]
     fd4:	mov	r0, r6
     fd8:	bl	dc4 <dcgettext@plt>
     fdc:	ldr	ip, [pc, #1316]	; 1508 <main@@Base+0x63c>
     fe0:	ldr	r1, [pc, #1316]	; 150c <main@@Base+0x640>
     fe4:	mov	r3, #5
     fe8:	add	lr, sp, #44	; 0x2c
     fec:	mov	r2, r3
     ff0:	str	lr, [r4, #60]	; 0x3c
     ff4:	add	ip, pc, ip
     ff8:	add	r1, pc, r1
     ffc:	str	ip, [r4, #64]	; 0x40
    1000:	str	r3, [r4, #48]	; 0x30
    1004:	mov	ip, #70	; 0x46
    1008:	str	ip, [r4, #52]	; 0x34
    100c:	str	r0, [r4, #44]	; 0x2c
    1010:	mov	r0, r6
    1014:	bl	dc4 <dcgettext@plt>
    1018:	mov	r2, r4
    101c:	mov	r3, r9
    1020:	mov	ip, #6
    1024:	mov	r1, r8
    1028:	str	ip, [r4, #72]	; 0x48
    102c:	str	r0, [r4, #68]	; 0x44
    1030:	mov	r0, sl
    1034:	bl	d10 <libreport_parse_opts@plt>
    1038:	mov	r6, r0
    103c:	mov	r0, r7
    1040:	bl	d40 <libreport_export_abrt_envvars@plt>
    1044:	ldr	r2, [pc, #1220]	; 1510 <main@@Base+0x644>
    1048:	ldr	r3, [pc, #1220]	; 1514 <main@@Base+0x648>
    104c:	tst	r6, #2
    1050:	ldr	r2, [r5, r2]
    1054:	ldr	r3, [r5, r3]
    1058:	ldr	r2, [r2]
    105c:	str	r2, [r3]
    1060:	beq	1480 <main@@Base+0x5b4>
    1064:	ldr	r3, [pc, #1196]	; 1518 <main@@Base+0x64c>
    1068:	mov	r2, #8
    106c:	ldr	r3, [r5, r3]
    1070:	str	r2, [r3]
    1074:	ldr	r3, [pc, #1184]	; 151c <main@@Base+0x650>
    1078:	ldr	r3, [r5, r3]
    107c:	ldr	r5, [r3]
    1080:	ldr	r7, [r8, r5, lsl #2]
    1084:	add	r6, r8, r5, lsl #2
    1088:	cmp	r7, #0
    108c:	beq	1498 <main@@Base+0x5cc>
    1090:	ldr	r3, [r6, #4]
    1094:	cmp	r3, #0
    1098:	beq	1498 <main@@Base+0x5cc>
    109c:	movw	r3, #61228	; 0xef2c
    10a0:	add	r1, sp, #4352	; 0x1100
    10a4:	movt	r3, #65535	; 0xffff
    10a8:	ldr	r4, [r1, r3]
    10ac:	cmp	r4, #0
    10b0:	movne	r7, #0
    10b4:	bne	10c8 <main@@Base+0x1fc>
    10b8:	b	110c <main@@Base+0x240>
    10bc:	ldr	r4, [r4, #4]
    10c0:	cmp	r4, #0
    10c4:	beq	1108 <main@@Base+0x23c>
    10c8:	mov	r1, #10
    10cc:	ldr	r0, [r4]
    10d0:	bl	eb4 <strchr@plt>
    10d4:	subs	r1, r0, #0
    10d8:	beq	10bc <main@@Base+0x1f0>
    10dc:	ldrb	r3, [r1, #1]
    10e0:	strb	r7, [r1]
    10e4:	cmp	r3, #0
    10e8:	beq	10bc <main@@Base+0x1f0>
    10ec:	mov	r0, r4
    10f0:	add	r1, r1, #1
    10f4:	bl	d28 <g_list_append@plt>
    10f8:	mov	r4, r0
    10fc:	ldr	r4, [r4, #4]
    1100:	cmp	r4, #0
    1104:	bne	10c8 <main@@Base+0x1fc>
    1108:	ldr	r7, [r8, r5, lsl #2]
    110c:	bl	e78 <inotify_init@plt>
    1110:	add	r6, r6, #4
    1114:	str	r6, [sp, #28]
    1118:	cmn	r0, #1
    111c:	mov	sl, r0
    1120:	beq	14a4 <main@@Base+0x5d8>
    1124:	ldr	fp, [pc, #1012]	; 1520 <main@@Base+0x654>
    1128:	bl	e3c <libreport_close_on_exec_on@plt>
    112c:	ldr	r2, [pc, #1008]	; 1524 <main@@Base+0x658>
    1130:	mvn	r8, #0
    1134:	ldr	r3, [pc, #1004]	; 1528 <main@@Base+0x65c>
    1138:	add	fp, pc, fp
    113c:	add	fp, fp, #20
    1140:	add	r9, sp, #144	; 0x90
    1144:	add	r2, pc, r2
    1148:	add	r3, pc, r3
    114c:	mov	r6, r8
    1150:	add	ip, sp, #192	; 0xc0
    1154:	add	r2, r2, #20
    1158:	add	r3, r3, #20
    115c:	str	ip, [sp, #24]
    1160:	add	ip, sp, #252	; 0xfc
    1164:	str	r2, [sp, #36]	; 0x24
    1168:	str	r3, [sp, #32]
    116c:	str	ip, [sp, #20]
    1170:	cmp	r6, #0
    1174:	blt	1248 <main@@Base+0x37c>
    1178:	mov	r1, #0
    117c:	mov	r2, #104	; 0x68
    1180:	mov	r0, r9
    1184:	bl	d58 <memset@plt>
    1188:	mov	r0, #3
    118c:	mov	r1, r6
    1190:	mov	r2, r9
    1194:	bl	d64 <__fxstat64@plt>
    1198:	cmp	r0, #0
    119c:	bne	1224 <main@@Base+0x358>
    11a0:	ldr	ip, [sp, #28]
    11a4:	add	lr, sp, #4352	; 0x1100
    11a8:	movw	r3, #61228	; 0xef2c
    11ac:	movt	r3, #65535	; 0xffff
    11b0:	add	r1, sp, #192	; 0xc0
    11b4:	mov	r0, r6
    11b8:	str	ip, [sp]
    11bc:	add	r2, r1, #48	; 0x30
    11c0:	ldr	r3, [lr, r3]
    11c4:	bl	1748 <main@@Base+0x87c>
    11c8:	mov	r0, #3
    11cc:	mov	r1, r7
    11d0:	mov	r2, r9
    11d4:	ldrd	r4, [r9, #96]	; 0x60
    11d8:	bl	cec <__xstat64@plt>
    11dc:	cmp	r0, #0
    11e0:	bne	11f4 <main@@Base+0x328>
    11e4:	ldrd	r2, [r9, #96]	; 0x60
    11e8:	cmp	r3, r5
    11ec:	cmpeq	r2, r4
    11f0:	beq	12fc <main@@Base+0x430>
    11f4:	ldr	r1, [pc, #816]	; 152c <main@@Base+0x660>
    11f8:	mov	r3, #0
    11fc:	mov	r0, #6
    1200:	str	r3, [sp]
    1204:	add	r1, pc, r1
    1208:	str	r1, [sp, #8]
    120c:	ldr	r1, [pc, #796]	; 1530 <main@@Base+0x664>
    1210:	mov	r2, #212	; 0xd4
    1214:	str	r3, [sp, #4]
    1218:	add	r1, pc, r1
    121c:	ldr	r3, [sp, #32]
    1220:	bl	dd0 <log_wrapper@plt>
    1224:	mov	r0, r6
    1228:	bl	d7c <close@plt>
    122c:	cmp	r8, #0
    1230:	mvnlt	r8, #0
    1234:	blt	1248 <main@@Base+0x37c>
    1238:	mov	r1, r8
    123c:	mov	r0, sl
    1240:	bl	d1c <inotify_rm_watch@plt>
    1244:	mvn	r8, #0
    1248:	mov	r0, r7
    124c:	mov	r1, #0
    1250:	bl	da0 <open64@plt>
    1254:	subs	r6, r0, #0
    1258:	movlt	r0, #59	; 0x3b
    125c:	blt	1300 <main@@Base+0x434>
    1260:	ldr	r5, [pc, #716]	; 1534 <main@@Base+0x668>
    1264:	mov	r4, #0
    1268:	ldr	r3, [pc, #712]	; 1538 <main@@Base+0x66c>
    126c:	mov	r0, #6
    1270:	add	r5, pc, r5
    1274:	str	r7, [sp, #12]
    1278:	add	r3, pc, r3
    127c:	mov	r2, #228	; 0xe4
    1280:	str	r3, [sp, #8]
    1284:	mov	r1, r5
    1288:	str	r4, [sp]
    128c:	ldr	r3, [sp, #36]	; 0x24
    1290:	str	r4, [sp, #4]
    1294:	bl	dd0 <log_wrapper@plt>
    1298:	cmp	r8, r4
    129c:	blt	1404 <main@@Base+0x538>
    12a0:	mov	r0, #3
    12a4:	mov	r1, r6
    12a8:	mov	r2, r9
    12ac:	bl	d64 <__fxstat64@plt>
    12b0:	cmp	r0, #0
    12b4:	bne	12fc <main@@Base+0x430>
    12b8:	ldrd	r4, [sp, #192]	; 0xc0
    12bc:	mov	r2, #55296	; 0xd800
    12c0:	movt	r2, #63	; 0x3f
    12c4:	mov	r3, #0
    12c8:	cmp	r2, r4
    12cc:	sbcs	r1, r3, r5
    12d0:	blt	13ec <main@@Base+0x520>
    12d4:	ldr	ip, [sp, #28]
    12d8:	movw	r3, #61228	; 0xef2c
    12dc:	add	lr, sp, #4352	; 0x1100
    12e0:	movt	r3, #65535	; 0xffff
    12e4:	add	r1, sp, #192	; 0xc0
    12e8:	mov	r0, r6
    12ec:	str	ip, [sp]
    12f0:	add	r2, r1, #48	; 0x30
    12f4:	ldr	r3, [lr, r3]
    12f8:	bl	1748 <main@@Base+0x87c>
    12fc:	mov	r0, #1
    1300:	bl	ddc <sleep@plt>
    1304:	cmp	r8, #0
    1308:	blt	1170 <main@@Base+0x2a4>
    130c:	ldr	r4, [pc, #552]	; 153c <main@@Base+0x670>
    1310:	mov	ip, #0
    1314:	ldr	r3, [pc, #548]	; 1540 <main@@Base+0x674>
    1318:	mov	r0, #7
    131c:	add	r4, pc, r4
    1320:	movw	r2, #265	; 0x109
    1324:	add	r3, pc, r3
    1328:	str	ip, [sp]
    132c:	mov	r1, r4
    1330:	str	r3, [sp, #8]
    1334:	str	ip, [sp, #4]
    1338:	mov	r3, fp
    133c:	str	r7, [sp, #12]
    1340:	bl	dd0 <log_wrapper@plt>
    1344:	mov	r0, sl
    1348:	add	r1, sp, #252	; 0xfc
    134c:	mov	r2, #4096	; 0x1000
    1350:	bl	d88 <read@plt>
    1354:	cmp	r0, #0
    1358:	blt	13ac <main@@Base+0x4e0>
    135c:	ldr	r3, [pc, #480]	; 1544 <main@@Base+0x678>
    1360:	mov	r1, #0
    1364:	ldr	ip, [pc, #476]	; 1548 <main@@Base+0x67c>
    1368:	mov	r0, #7
    136c:	str	r1, [sp]
    1370:	add	r3, pc, r3
    1374:	str	r1, [sp, #4]
    1378:	add	ip, pc, ip
    137c:	ldr	r1, [pc, #456]	; 154c <main@@Base+0x680>
    1380:	movw	r2, #273	; 0x111
    1384:	str	ip, [sp, #8]
    1388:	add	r3, r3, #20
    138c:	add	r1, pc, r1
    1390:	str	r7, [sp, #12]
    1394:	bl	dd0 <log_wrapper@plt>
    1398:	mov	r0, #1
    139c:	bl	ddc <sleep@plt>
    13a0:	cmp	r6, #0
    13a4:	bge	1178 <main@@Base+0x2ac>
    13a8:	b	1248 <main@@Base+0x37c>
    13ac:	bl	e54 <__errno_location@plt>
    13b0:	ldr	r3, [r0]
    13b4:	cmp	r3, #4
    13b8:	beq	135c <main@@Base+0x490>
    13bc:	ldr	r3, [pc, #396]	; 1550 <main@@Base+0x684>
    13c0:	mov	ip, #1
    13c4:	mov	r1, r4
    13c8:	mov	r0, #3
    13cc:	add	r3, pc, r3
    13d0:	str	ip, [sp]
    13d4:	str	r3, [sp, #8]
    13d8:	movw	r2, #269	; 0x10d
    13dc:	mov	r3, fp
    13e0:	str	ip, [sp, #4]
    13e4:	bl	dd0 <log_wrapper@plt>
    13e8:	b	135c <main@@Base+0x490>
    13ec:	str	r0, [sp]
    13f0:	subs	r2, r4, r2
    13f4:	sbc	r3, r5, r3
    13f8:	mov	r0, r6
    13fc:	bl	e30 <lseek64@plt>
    1400:	b	12d4 <main@@Base+0x408>
    1404:	mov	r0, sl
    1408:	mov	r1, r7
    140c:	movw	r2, #3074	; 0xc02
    1410:	bl	d34 <inotify_add_watch@plt>
    1414:	subs	r8, r0, #0
    1418:	blt	144c <main@@Base+0x580>
    141c:	ldr	ip, [pc, #304]	; 1554 <main@@Base+0x688>
    1420:	mov	r1, r5
    1424:	str	r4, [sp]
    1428:	mov	r0, #6
    142c:	add	ip, pc, ip
    1430:	str	r4, [sp, #4]
    1434:	mov	r2, #236	; 0xec
    1438:	str	r7, [sp, #12]
    143c:	ldr	r3, [sp, #36]	; 0x24
    1440:	str	ip, [sp, #8]
    1444:	bl	dd0 <log_wrapper@plt>
    1448:	b	12a0 <main@@Base+0x3d4>
    144c:	ldr	r2, [pc, #260]	; 1558 <main@@Base+0x68c>
    1450:	mov	r3, #1
    1454:	mov	r1, r5
    1458:	str	r3, [sp]
    145c:	add	r2, pc, r2
    1460:	str	r3, [sp, #4]
    1464:	str	r2, [sp, #8]
    1468:	mov	r0, #3
    146c:	str	r7, [sp, #12]
    1470:	mov	r2, #234	; 0xea
    1474:	ldr	r3, [sp, #36]	; 0x24
    1478:	bl	dd0 <log_wrapper@plt>
    147c:	b	12a0 <main@@Base+0x3d4>
    1480:	ldr	r0, [pc, #212]	; 155c <main@@Base+0x690>
    1484:	add	r0, pc, r0
    1488:	bl	e84 <getenv@plt>
    148c:	cmp	r0, #0
    1490:	bne	1064 <main@@Base+0x198>
    1494:	b	1074 <main@@Base+0x1a8>
    1498:	mov	r0, r9
    149c:	mov	r1, r4
    14a0:	bl	ce0 <libreport_show_usage_and_die@plt>
    14a4:	ldr	r3, [pc, #180]	; 1560 <main@@Base+0x694>
    14a8:	mov	r1, #1
    14ac:	ldr	ip, [pc, #176]	; 1564 <main@@Base+0x698>
    14b0:	mov	r0, #3
    14b4:	str	r1, [sp]
    14b8:	add	r3, pc, r3
    14bc:	str	r1, [sp, #4]
    14c0:	add	ip, pc, ip
    14c4:	ldr	r1, [pc, #156]	; 1568 <main@@Base+0x69c>
    14c8:	mov	r2, #191	; 0xbf
    14cc:	str	ip, [sp, #8]
    14d0:	add	r3, r3, #20
    14d4:	add	r1, pc, r1
    14d8:	bl	cf8 <log_and_die_wrapper@plt>
    14dc:	andeq	r2, r1, ip, lsr #32
    14e0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    14e4:	andeq	r0, r0, r4, lsr lr
    14e8:	andeq	r0, r0, r8, ror lr
    14ec:	andeq	r0, r0, r0, ror #28
    14f0:	strheq	r2, [r1], -r0
    14f4:	andeq	r0, r0, ip, lsr lr
    14f8:	andeq	r0, r0, r8, asr #1
    14fc:	andeq	r0, r0, r0, ror #28
    1500:	andeq	r0, r0, r0, asr lr
    1504:	andeq	r0, r0, r8, asr #28
    1508:	andeq	r0, r0, ip, lsr #28
    150c:	andeq	r0, r0, ip, lsr #28
    1510:	andeq	r0, r0, r4, ror #1
    1514:	andeq	r0, r0, r4, asr #1
    1518:	strheq	r0, [r0], -ip
    151c:	strheq	r0, [r0], -r4
    1520:	andeq	r0, r0, ip, asr fp
    1524:	andeq	r0, r0, r0, asr fp
    1528:	andeq	r0, r0, ip, asr #22
    152c:	andeq	r0, r0, r4, ror #24
    1530:	muleq	r0, r8, sl
    1534:	andeq	r0, r0, r0, asr #20
    1538:	andeq	r0, r0, ip, lsl #24
    153c:	muleq	r0, r4, r9
    1540:			; <UNDEFINED> instruction: 0x00000bb0
    1544:	andeq	r0, r0, r4, lsr #18
    1548:	muleq	r0, r4, fp
    154c:	andeq	r0, r0, r4, lsr #18
    1550:	andeq	r0, r0, r4, lsr #22
    1554:	andeq	r0, r0, r8, lsl #21
    1558:	andeq	r0, r0, r4, lsr sl
    155c:	andeq	r0, r0, r4, asr #19
    1560:	ldrdeq	r0, [r0], -ip
    1564:	muleq	r0, r4, r9
    1568:	ldrdeq	r0, [r0], -ip
    156c:	mov	fp, #0
    1570:	mov	lr, #0
    1574:	pop	{r1}		; (ldr r1, [sp], #4)
    1578:	mov	r2, sp
    157c:	push	{r2}		; (str r2, [sp, #-4]!)
    1580:	push	{r0}		; (str r0, [sp, #-4]!)
    1584:	ldr	sl, [pc, #40]	; 15b4 <main@@Base+0x6e8>
    1588:	add	r3, pc, #36	; 0x24
    158c:	add	sl, sl, r3
    1590:	ldr	ip, [pc, #32]	; 15b8 <main@@Base+0x6ec>
    1594:	ldr	ip, [sl, ip]
    1598:	push	{ip}		; (str ip, [sp, #-4]!)
    159c:	ldr	r3, [pc, #24]	; 15bc <main@@Base+0x6f0>
    15a0:	ldr	r3, [sl, r3]
    15a4:	ldr	r0, [pc, #20]	; 15c0 <main@@Base+0x6f4>
    15a8:	ldr	r0, [sl, r0]
    15ac:	bl	e90 <__libc_start_main@plt>
    15b0:	bl	d94 <abort@plt>
    15b4:	andeq	r1, r1, r4, ror #18
    15b8:	ldrdeq	r0, [r0], -r4
    15bc:	andeq	r0, r0, ip, asr #1
    15c0:	strheq	r0, [r0], -r8
    15c4:	ldr	r3, [pc, #20]	; 15e0 <main@@Base+0x714>
    15c8:	ldr	r2, [pc, #20]	; 15e4 <main@@Base+0x718>
    15cc:	add	r3, pc, r3
    15d0:	ldr	r2, [r3, r2]
    15d4:	cmp	r2, #0
    15d8:	bxeq	lr
    15dc:	b	ea8 <__gmon_start__@plt>
    15e0:	andeq	r1, r1, r4, asr #18
    15e4:	ldrdeq	r0, [r0], -r8
    15e8:	ldr	r2, [pc, #60]	; 162c <main@@Base+0x760>
    15ec:	ldr	r0, [pc, #60]	; 1630 <main@@Base+0x764>
    15f0:	add	r2, pc, r2
    15f4:	add	r0, pc, r0
    15f8:	add	r2, r2, #3
    15fc:	rsb	r2, r0, r2
    1600:	push	{r3, lr}
    1604:	cmp	r2, #6
    1608:	ldr	r3, [pc, #36]	; 1634 <main@@Base+0x768>
    160c:	add	r3, pc, r3
    1610:	popls	{r3, pc}
    1614:	ldr	r2, [pc, #28]	; 1638 <main@@Base+0x76c>
    1618:	ldr	r3, [r3, r2]
    161c:	cmp	r3, #0
    1620:	popeq	{r3, pc}
    1624:	blx	r3
    1628:	pop	{r3, pc}
    162c:	andeq	r1, r1, ip, lsl #20
    1630:	andeq	r1, r1, r8, lsl #20
    1634:	andeq	r1, r1, r4, lsl #18
    1638:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    163c:	push	{r3, lr}
    1640:	ldr	r0, [pc, #64]	; 1688 <main@@Base+0x7bc>
    1644:	ldr	r3, [pc, #64]	; 168c <main@@Base+0x7c0>
    1648:	add	r0, pc, r0
    164c:	ldr	r2, [pc, #60]	; 1690 <main@@Base+0x7c4>
    1650:	add	r3, pc, r3
    1654:	rsb	r3, r0, r3
    1658:	add	r2, pc, r2
    165c:	asr	r3, r3, #2
    1660:	add	r3, r3, r3, lsr #31
    1664:	asrs	r3, r3, #1
    1668:	popeq	{r3, pc}
    166c:	ldr	r1, [pc, #32]	; 1694 <main@@Base+0x7c8>
    1670:	ldr	r2, [r2, r1]
    1674:	cmp	r2, #0
    1678:	popeq	{r3, pc}
    167c:	mov	r1, r3
    1680:	blx	r2
    1684:	pop	{r3, pc}
    1688:			; <UNDEFINED> instruction: 0x000119b4
    168c:	andeq	r1, r1, ip, lsr #19
    1690:			; <UNDEFINED> instruction: 0x000118b8
    1694:	ldrdeq	r0, [r0], -ip
    1698:	ldr	r2, [pc, #76]	; 16ec <main@@Base+0x820>
    169c:	push	{r3, lr}
    16a0:	add	r2, pc, r2
    16a4:	ldr	r3, [pc, #68]	; 16f0 <main@@Base+0x824>
    16a8:	ldrb	r2, [r2]
    16ac:	add	r3, pc, r3
    16b0:	cmp	r2, #0
    16b4:	popne	{r3, pc}
    16b8:	ldr	r2, [pc, #52]	; 16f4 <main@@Base+0x828>
    16bc:	ldr	r3, [r3, r2]
    16c0:	cmp	r3, #0
    16c4:	beq	16d4 <main@@Base+0x808>
    16c8:	ldr	r0, [pc, #40]	; 16f8 <main@@Base+0x82c>
    16cc:	add	r0, pc, r0
    16d0:	bl	ec0 <__cxa_finalize@plt>
    16d4:	bl	15e8 <main@@Base+0x71c>
    16d8:	ldr	r3, [pc, #28]	; 16fc <main@@Base+0x830>
    16dc:	mov	r2, #1
    16e0:	add	r3, pc, r3
    16e4:	strb	r2, [r3]
    16e8:	pop	{r3, pc}
    16ec:	andeq	r1, r1, ip, asr r9
    16f0:	andeq	r1, r1, r4, ror #16
    16f4:	andeq	r0, r0, r0, ror #1
    16f8:	andeq	r1, r1, r8, lsl #14
    16fc:	andeq	r1, r1, ip, lsl r9
    1700:	ldr	r0, [pc, #52]	; 173c <main@@Base+0x870>
    1704:	push	{r3, lr}
    1708:	add	r0, pc, r0
    170c:	ldr	r3, [pc, #44]	; 1740 <main@@Base+0x874>
    1710:	ldr	r2, [r0]
    1714:	add	r3, pc, r3
    1718:	cmp	r2, #0
    171c:	beq	1734 <main@@Base+0x868>
    1720:	ldr	r2, [pc, #28]	; 1744 <main@@Base+0x878>
    1724:	ldr	r3, [r3, r2]
    1728:	cmp	r3, #0
    172c:	beq	1734 <main@@Base+0x868>
    1730:	blx	r3
    1734:	pop	{r3, lr}
    1738:	b	163c <main@@Base+0x770>
    173c:	andeq	r1, r1, r8, asr #13
    1740:	strdeq	r1, [r1], -ip
    1744:	andeq	r0, r0, r0, asr #1
    1748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    174c:	sub	sp, sp, #108	; 0x6c
    1750:	mov	r6, r2
    1754:	mov	r8, #1
    1758:	str	r3, [sp, #52]	; 0x34
    175c:	mov	r2, #0
    1760:	mov	r3, #0
    1764:	str	r8, [sp]
    1768:	str	r1, [sp, #60]	; 0x3c
    176c:	str	r0, [sp, #68]	; 0x44
    1770:	bl	e30 <lseek64@plt>
    1774:	strd	r0, [sp, #40]	; 0x28
    1778:	ldr	r0, [sp, #60]	; 0x3c
    177c:	ldrd	r2, [sp, #40]	; 0x28
    1780:	ldrd	r4, [r0]
    1784:	cmp	r2, r4
    1788:	sbcs	r3, r3, r5
    178c:	blt	17b8 <main@@Base+0x8ec>
    1790:	ldrd	r0, [sp, #40]	; 0x28
    1794:	cmp	r4, r0
    1798:	sbcs	r1, r5, r1
    179c:	bge	17b0 <main@@Base+0x8e4>
    17a0:	ldrd	r0, [r6]
    17a4:	adds	r0, r0, #1
    17a8:	adc	r1, r1, #0
    17ac:	strd	r0, [r6]
    17b0:	add	sp, sp, #108	; 0x6c
    17b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17b8:	ldr	sl, [pc, #1044]	; 1bd4 <main@@Base+0xd08>
    17bc:	mov	r9, #0
    17c0:	ldr	fp, [pc, #1040]	; 1bd8 <main@@Base+0xd0c>
    17c4:	ldrd	r0, [sp, #40]	; 0x28
    17c8:	add	sl, pc, sl
    17cc:	ldrd	r6, [sp, #40]	; 0x28
    17d0:	add	fp, pc, fp
    17d4:	ldr	r2, [pc, #1024]	; 1bdc <main@@Base+0xd10>
    17d8:	strd	r0, [sp, #24]
    17dc:	subs	r6, r4, r6
    17e0:	sbc	r7, r5, r7
    17e4:	add	r2, pc, r2
    17e8:	mov	r1, sl
    17ec:	str	r2, [sp, #8]
    17f0:	mov	r3, fp
    17f4:	strd	r4, [sp, #32]
    17f8:	mov	r0, #6
    17fc:	strd	r6, [sp, #16]
    1800:	mov	r2, #65	; 0x41
    1804:	str	r9, [sp]
    1808:	str	r9, [sp, #4]
    180c:	bl	dd0 <log_wrapper@plt>
    1810:	ldr	r1, [sp, #52]	; 0x34
    1814:	cmp	r1, r9
    1818:	beq	183c <main@@Base+0x970>
    181c:	ldr	r2, [sp, #60]	; 0x3c
    1820:	ldrd	r4, [r2]
    1824:	ldrd	r2, [sp, #40]	; 0x28
    1828:	subs	r2, r4, r2
    182c:	sbc	r3, r5, r3
    1830:	cmp	r2, #4194304	; 0x400000
    1834:	sbcs	lr, r3, #0
    1838:	blt	18e4 <main@@Base+0xa18>
    183c:	mov	r0, #0
    1840:	bl	e6c <fflush@plt>
    1844:	bl	db8 <vfork@plt>
    1848:	subs	r4, r0, #0
    184c:	blt	1b0c <main@@Base+0xc40>
    1850:	beq	1b40 <main@@Base+0xc74>
    1854:	mov	r1, #0
    1858:	mov	r2, r1
    185c:	bl	dac <libreport_safe_waitpid@plt>
    1860:	mov	r3, #1
    1864:	mov	r2, #0
    1868:	str	r3, [sp]
    186c:	ldr	r0, [sp, #68]	; 0x44
    1870:	mov	r3, #0
    1874:	bl	e30 <lseek64@plt>
    1878:	ldrd	r2, [sp, #40]	; 0x28
    187c:	cmp	r2, r0
    1880:	sbcs	r3, r3, r1
    1884:	blt	17b0 <main@@Base+0x8e4>
    1888:	ldr	lr, [sp, #144]	; 0x90
    188c:	mov	r4, #0
    1890:	ldr	r1, [pc, #840]	; 1be0 <main@@Base+0xd14>
    1894:	mov	r0, #4
    1898:	mov	r2, #120	; 0x78
    189c:	ldr	r3, [lr]
    18a0:	add	r1, pc, r1
    18a4:	str	r1, [sp, #8]
    18a8:	ldr	r1, [pc, #820]	; 1be4 <main@@Base+0xd18>
    18ac:	str	r3, [sp, #12]
    18b0:	ldr	r3, [pc, #816]	; 1be8 <main@@Base+0xd1c>
    18b4:	add	r1, pc, r1
    18b8:	str	r4, [sp]
    18bc:	str	r4, [sp, #4]
    18c0:	add	r3, pc, r3
    18c4:	bl	dd0 <log_wrapper@plt>
    18c8:	ldr	r0, [sp, #60]	; 0x3c
    18cc:	ldrd	r2, [r0]
    18d0:	str	r4, [sp]
    18d4:	ldr	r0, [sp, #68]	; 0x44
    18d8:	bl	e30 <lseek64@plt>
    18dc:	add	sp, sp, #108	; 0x6c
    18e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18e4:	ldr	r1, [pc, #768]	; 1bec <main@@Base+0xd20>
    18e8:	mov	r2, r8
    18ec:	ldr	r0, [sp, #68]	; 0x44
    18f0:	mov	r3, r8
    18f4:	add	r1, pc, r1
    18f8:	ldrd	r6, [sp, #40]	; 0x28
    18fc:	str	r0, [sp]
    1900:	mov	r0, r9
    1904:	ldr	r5, [r1]
    1908:	ldr	r1, [sp, #40]	; 0x28
    190c:	sub	r5, r5, #1
    1910:	bic	r6, r6, r5
    1914:	rsb	r1, r1, r4
    1918:	rsb	lr, r6, r4
    191c:	str	r1, [sp, #72]	; 0x48
    1920:	strd	r6, [sp, #8]
    1924:	mov	r1, lr
    1928:	str	lr, [sp, #100]	; 0x64
    192c:	bl	d70 <mmap64@plt>
    1930:	cmn	r0, #1
    1934:	str	r0, [sp, #96]	; 0x60
    1938:	beq	183c <main@@Base+0x970>
    193c:	ldr	r0, [sp, #40]	; 0x28
    1940:	ldr	lr, [sp, #72]	; 0x48
    1944:	ldr	r1, [pc, #676]	; 1bf0 <main@@Base+0xd24>
    1948:	and	r5, r5, r0
    194c:	ldr	r2, [sp, #96]	; 0x60
    1950:	ldr	r3, [sp, #72]	; 0x48
    1954:	add	r1, pc, r1
    1958:	add	r5, r2, r5
    195c:	str	r1, [sp, #92]	; 0x5c
    1960:	cmp	r3, #20
    1964:	movcs	r3, #20
    1968:	str	r5, [sp, #64]	; 0x40
    196c:	str	r3, [sp, #76]	; 0x4c
    1970:	str	sl, [sp, #84]	; 0x54
    1974:	str	fp, [sp, #88]	; 0x58
    1978:	str	lr, [sp, #80]	; 0x50
    197c:	ldr	r2, [sp, #92]	; 0x5c
    1980:	mov	r0, #0
    1984:	ldr	r3, [sp, #52]	; 0x34
    1988:	mov	r1, #0
    198c:	ldr	lr, [sp, #76]	; 0x4c
    1990:	str	r0, [sp]
    1994:	mov	r0, #7
    1998:	str	r1, [sp, #4]
    199c:	str	r2, [sp, #8]
    19a0:	mov	r2, #83	; 0x53
    19a4:	ldr	ip, [r3]
    19a8:	str	lr, [sp, #16]
    19ac:	ldr	lr, [sp, #64]	; 0x40
    19b0:	ldr	r1, [sp, #84]	; 0x54
    19b4:	ldr	r3, [sp, #88]	; 0x58
    19b8:	str	lr, [sp, #20]
    19bc:	str	ip, [sp, #12]
    19c0:	bl	dd0 <log_wrapper@plt>
    19c4:	ldr	r3, [sp, #52]	; 0x34
    19c8:	ldr	r3, [r3]
    19cc:	mov	r0, r3
    19d0:	str	r3, [sp, #56]	; 0x38
    19d4:	bl	e18 <strlen@plt>
    19d8:	ldr	lr, [sp, #80]	; 0x50
    19dc:	cmp	lr, r0
    19e0:	mov	r6, r0
    19e4:	blt	1a54 <main@@Base+0xb88>
    19e8:	ldr	r7, [sp, #56]	; 0x38
    19ec:	rsb	r9, r0, #1
    19f0:	sub	sl, r0, #1
    19f4:	ldr	r5, [sp, #64]	; 0x40
    19f8:	ldr	r4, [sp, #72]	; 0x48
    19fc:	ldrb	r8, [r7], #1
    1a00:	b	1a3c <main@@Base+0xb70>
    1a04:	cmp	r6, #1
    1a08:	add	fp, r0, #1
    1a0c:	ble	1ac0 <main@@Base+0xbf4>
    1a10:	mov	r0, fp
    1a14:	mov	r1, r7
    1a18:	mov	r2, sl
    1a1c:	bl	d04 <strncmp@plt>
    1a20:	cmp	r0, #0
    1a24:	beq	1ac0 <main@@Base+0xbf4>
    1a28:	rsb	r5, fp, r5
    1a2c:	add	r4, r4, r5
    1a30:	cmp	r6, r4
    1a34:	bgt	1a54 <main@@Base+0xb88>
    1a38:	mov	r5, fp
    1a3c:	mov	r0, r5
    1a40:	mov	r1, r8
    1a44:	add	r2, r4, r9
    1a48:	bl	e60 <memchr@plt>
    1a4c:	cmp	r0, #0
    1a50:	bne	1a04 <main@@Base+0xb38>
    1a54:	ldr	r3, [sp, #52]	; 0x34
    1a58:	ldr	r3, [r3, #4]
    1a5c:	cmp	r3, #0
    1a60:	str	r3, [sp, #52]	; 0x34
    1a64:	bne	197c <main@@Base+0xab0>
    1a68:	ldr	r1, [sp, #52]	; 0x34
    1a6c:	mov	r2, #91	; 0x5b
    1a70:	ldr	r3, [pc, #380]	; 1bf4 <main@@Base+0xd28>
    1a74:	mov	r0, #7
    1a78:	str	r1, [sp]
    1a7c:	add	r3, pc, r3
    1a80:	stmib	sp, {r1, r3}
    1a84:	ldr	r1, [pc, #364]	; 1bf8 <main@@Base+0xd2c>
    1a88:	ldr	r3, [pc, #364]	; 1bfc <main@@Base+0xd30>
    1a8c:	add	r1, pc, r1
    1a90:	add	r3, pc, r3
    1a94:	bl	dd0 <log_wrapper@plt>
    1a98:	ldr	r0, [sp, #96]	; 0x60
    1a9c:	ldr	r1, [sp, #100]	; 0x64
    1aa0:	bl	e24 <munmap@plt>
    1aa4:	ldr	r0, [sp, #52]	; 0x34
    1aa8:	ldr	lr, [sp, #60]	; 0x3c
    1aac:	ldrd	r2, [lr]
    1ab0:	str	r0, [sp]
    1ab4:	ldr	r0, [sp, #68]	; 0x44
    1ab8:	bl	e30 <lseek64@plt>
    1abc:	b	17b0 <main@@Base+0x8e4>
    1ac0:	ldr	r1, [pc, #312]	; 1c00 <main@@Base+0xd34>
    1ac4:	mov	r3, #0
    1ac8:	ldr	r2, [sp, #56]	; 0x38
    1acc:	mov	r0, #7
    1ad0:	str	r3, [sp]
    1ad4:	add	r1, pc, r1
    1ad8:	str	r3, [sp, #4]
    1adc:	str	r1, [sp, #8]
    1ae0:	ldr	r3, [pc, #284]	; 1c04 <main@@Base+0xd38>
    1ae4:	ldr	r1, [pc, #284]	; 1c08 <main@@Base+0xd3c>
    1ae8:	str	r2, [sp, #12]
    1aec:	add	r3, pc, r3
    1af0:	mov	r2, #86	; 0x56
    1af4:	add	r1, pc, r1
    1af8:	bl	dd0 <log_wrapper@plt>
    1afc:	ldr	r0, [sp, #96]	; 0x60
    1b00:	ldr	r1, [sp, #100]	; 0x64
    1b04:	bl	e24 <munmap@plt>
    1b08:	b	183c <main@@Base+0x970>
    1b0c:	ldr	r1, [pc, #248]	; 1c0c <main@@Base+0xd40>
    1b10:	mov	r3, #1
    1b14:	str	r3, [sp]
    1b18:	mov	r0, #3
    1b1c:	add	r1, pc, r1
    1b20:	str	r3, [sp, #4]
    1b24:	str	r1, [sp, #8]
    1b28:	mov	r2, #103	; 0x67
    1b2c:	ldr	r1, [pc, #220]	; 1c10 <main@@Base+0xd44>
    1b30:	ldr	r3, [pc, #220]	; 1c14 <main@@Base+0xd48>
    1b34:	add	r1, pc, r1
    1b38:	add	r3, pc, r3
    1b3c:	bl	cf8 <log_and_die_wrapper@plt>
    1b40:	ldr	r0, [sp, #68]	; 0x44
    1b44:	mov	r1, r4
    1b48:	bl	e0c <libreport_xmove_fd@plt>
    1b4c:	ldr	r1, [sp, #144]	; 0x90
    1b50:	ldr	r6, [pc, #192]	; 1c18 <main@@Base+0xd4c>
    1b54:	mov	r0, #7
    1b58:	ldr	r5, [pc, #188]	; 1c1c <main@@Base+0xd50>
    1b5c:	mov	r2, #107	; 0x6b
    1b60:	ldr	ip, [r1]
    1b64:	add	r6, pc, r6
    1b68:	add	r5, pc, r5
    1b6c:	ldr	lr, [pc, #172]	; 1c20 <main@@Base+0xd54>
    1b70:	mov	r1, r6
    1b74:	str	r4, [sp]
    1b78:	add	lr, pc, lr
    1b7c:	mov	r3, r5
    1b80:	str	ip, [sp, #12]
    1b84:	stmib	sp, {r4, lr}
    1b88:	bl	dd0 <log_wrapper@plt>
    1b8c:	ldr	r2, [sp, #144]	; 0x90
    1b90:	mov	r1, r2
    1b94:	ldr	r0, [r2]
    1b98:	bl	e9c <execvp@plt>
    1b9c:	ldr	r3, [sp, #144]	; 0x90
    1ba0:	ldr	r0, [pc, #124]	; 1c24 <main@@Base+0xd58>
    1ba4:	mov	ip, #1
    1ba8:	mov	r1, r6
    1bac:	ldr	r2, [r3]
    1bb0:	add	r0, pc, r0
    1bb4:	mov	r3, r5
    1bb8:	str	r0, [sp, #8]
    1bbc:	str	ip, [sp]
    1bc0:	mov	r0, #3
    1bc4:	str	r2, [sp, #12]
    1bc8:	mov	r2, #109	; 0x6d
    1bcc:	str	ip, [sp, #4]
    1bd0:	bl	cf8 <log_and_die_wrapper@plt>
    1bd4:	andeq	r0, r0, r8, ror #9
    1bd8:	andeq	r0, r0, r4, asr #9
    1bdc:	andeq	r0, r0, r0, ror #9
    1be0:	andeq	r0, r0, r8, lsr #9
    1be4:	strdeq	r0, [r0], -ip
    1be8:	ldrdeq	r0, [r0], -r4
    1bec:	andeq	r1, r1, ip, lsl #14
    1bf0:	muleq	r0, ip, r3
    1bf4:	muleq	r0, r4, r2
    1bf8:	andeq	r0, r0, r4, lsr #4
    1bfc:	andeq	r0, r0, r4, lsl #4
    1c00:	muleq	r0, ip, r2
    1c04:	andeq	r0, r0, r8, lsr #3
    1c08:			; <UNDEFINED> instruction: 0x000001bc
    1c0c:	andeq	r0, r0, r0, lsl #4
    1c10:	andeq	r0, r0, ip, ror r1
    1c14:	andeq	r0, r0, ip, asr r1
    1c18:	andeq	r0, r0, ip, asr #2
    1c1c:	andeq	r0, r0, ip, lsr #2
    1c20:	andeq	r0, r0, ip, lsr #3
    1c24:	andeq	r0, r0, r4, lsl #3

00001c28 <__libc_csu_init@@Base>:
    1c28:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1c2c:	mov	r7, r0
    1c30:	ldr	r6, [pc, #76]	; 1c84 <__libc_csu_init@@Base+0x5c>
    1c34:	mov	r8, r1
    1c38:	ldr	r5, [pc, #72]	; 1c88 <__libc_csu_init@@Base+0x60>
    1c3c:	mov	r9, r2
    1c40:	add	r6, pc, r6
    1c44:	bl	cc0 <_init@@Base>
    1c48:	add	r5, pc, r5
    1c4c:	rsb	r6, r5, r6
    1c50:	asrs	r6, r6, #2
    1c54:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    1c58:	sub	r5, r5, #4
    1c5c:	mov	r4, #0
    1c60:	add	r4, r4, #1
    1c64:	ldr	r3, [r5, #4]!
    1c68:	mov	r0, r7
    1c6c:	mov	r1, r8
    1c70:	mov	r2, r9
    1c74:	blx	r3
    1c78:	cmp	r4, r6
    1c7c:	bne	1c60 <__libc_csu_init@@Base+0x38>
    1c80:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1c84:	andeq	r1, r1, ip, lsl #3
    1c88:	andeq	r1, r1, r0, lsl #3

00001c8c <__libc_csu_fini@@Base>:
    1c8c:	bx	lr

Disassembly of section .fini:

00001c90 <_fini@@Base>:
    1c90:	push	{r3, lr}
    1c94:	pop	{r3, pc}
