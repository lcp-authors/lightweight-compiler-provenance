
centos-preinstalled/raw:     file format elf32-littlearm


Disassembly of section .init:

000108c4 <.init>:
   108c4:	push	{r3, lr}
   108c8:	bl	10e88 <abort@plt+0x460>
   108cc:	pop	{r3, pc}

Disassembly of section .plt:

000108d0 <strtol@plt-0x14>:
   108d0:	push	{lr}		; (str lr, [sp, #-4]!)
   108d4:	ldr	lr, [pc, #4]	; 108e0 <strtol@plt-0x4>
   108d8:	add	lr, pc, lr
   108dc:	ldr	pc, [lr, #8]!
   108e0:	andeq	r1, r1, r0, lsr #14

000108e4 <strtol@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1824]!	; 0x720

000108f0 <ferror@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1816]!	; 0x718

000108fc <_exit@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1808]!	; 0x710

00010908 <dcgettext@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1800]!	; 0x708

00010914 <__stack_chk_fail@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1792]!	; 0x700

00010920 <textdomain@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1784]!	; 0x6f8

0001092c <err@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1776]!	; 0x6f0

00010938 <ioctl@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1768]!	; 0x6e8

00010944 <__fpending@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1760]!	; 0x6e0

00010950 <open64@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1752]!	; 0x6d8

0001095c <__libc_start_main@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1744]!	; 0x6d0

00010968 <__gmon_start__@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1736]!	; 0x6c8

00010974 <getopt_long@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1728]!	; 0x6c0

00010980 <exit@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1720]!	; 0x6b8

0001098c <warnx@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1712]!	; 0x6b0

00010998 <__errno_location@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1704]!	; 0x6a8

000109a4 <__cxa_atexit@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1696]!	; 0x6a0

000109b0 <__printf_chk@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1688]!	; 0x698

000109bc <__fprintf_chk@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1680]!	; 0x690

000109c8 <fclose@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1672]!	; 0x688

000109d4 <setlocale@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1664]!	; 0x680

000109e0 <errx@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1656]!	; 0x678

000109ec <warn@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1648]!	; 0x670

000109f8 <sscanf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1640]!	; 0x668

00010a04 <bindtextdomain@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1632]!	; 0x660

00010a10 <__xstat64@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1624]!	; 0x658

00010a1c <fputs@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1616]!	; 0x650

00010a28 <abort@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00010a34 <.text>:
   10a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a38:	movw	r8, #8336	; 0x2090
   10a3c:	movt	r8, #2
   10a40:	sub	sp, sp, #148	; 0x94
   10a44:	mov	r7, r1
   10a48:	mov	r5, r0
   10a4c:	ldr	r3, [r8]
   10a50:	movw	r1, #5852	; 0x16dc
   10a54:	mov	r0, #5
   10a58:	movt	r1, #1
   10a5c:	movw	r4, #8360	; 0x20a8
   10a60:	mov	r6, #0
   10a64:	str	r3, [sp, #140]	; 0x8c
   10a68:	bl	109d4 <setlocale@plt>
   10a6c:	movw	r0, #6248	; 0x1868
   10a70:	movw	r1, #6260	; 0x1874
   10a74:	movt	r0, #1
   10a78:	movt	r1, #1
   10a7c:	bl	10a04 <bindtextdomain@plt>
   10a80:	movw	r0, #6248	; 0x1868
   10a84:	movt	r0, #1
   10a88:	movt	r4, #2
   10a8c:	bl	10920 <textdomain@plt>
   10a90:	movw	r0, #4972	; 0x136c
   10a94:	movt	r0, #1
   10a98:	mov	r9, #1
   10a9c:	bl	11584 <abort@plt+0xb5c>
   10aa0:	str	r6, [sp]
   10aa4:	movw	r2, #6312	; 0x18a8
   10aa8:	movw	r3, #5568	; 0x15c0
   10aac:	movt	r2, #1
   10ab0:	movt	r3, #1
   10ab4:	mov	r0, r5
   10ab8:	mov	r1, r7
   10abc:	bl	10974 <getopt_long@plt>
   10ac0:	cmn	r0, #1
   10ac4:	beq	10bb8 <abort@plt+0x190>
   10ac8:	sub	r3, r0, #86	; 0x56
   10acc:	cmp	r3, #27
   10ad0:	ldrls	pc, [pc, r3, lsl #2]
   10ad4:	b	10bb0 <abort@plt+0x188>
   10ad8:	andeq	r0, r1, r0, ror #22
   10adc:			; <UNDEFINED> instruction: 0x00010bb0
   10ae0:			; <UNDEFINED> instruction: 0x00010bb0
   10ae4:			; <UNDEFINED> instruction: 0x00010bb0
   10ae8:			; <UNDEFINED> instruction: 0x00010bb0
   10aec:			; <UNDEFINED> instruction: 0x00010bb0
   10af0:			; <UNDEFINED> instruction: 0x00010bb0
   10af4:			; <UNDEFINED> instruction: 0x00010bb0
   10af8:			; <UNDEFINED> instruction: 0x00010bb0
   10afc:			; <UNDEFINED> instruction: 0x00010bb0
   10b00:			; <UNDEFINED> instruction: 0x00010bb0
   10b04:	andeq	r0, r1, r8, asr fp
   10b08:			; <UNDEFINED> instruction: 0x00010bb0
   10b0c:			; <UNDEFINED> instruction: 0x00010bb0
   10b10:			; <UNDEFINED> instruction: 0x00010bb0
   10b14:			; <UNDEFINED> instruction: 0x00010bb0
   10b18:			; <UNDEFINED> instruction: 0x00010bb0
   10b1c:			; <UNDEFINED> instruction: 0x00010bb0
   10b20:	andeq	r0, r1, r0, asr fp
   10b24:			; <UNDEFINED> instruction: 0x00010bb0
   10b28:			; <UNDEFINED> instruction: 0x00010bb0
   10b2c:			; <UNDEFINED> instruction: 0x00010bb0
   10b30:			; <UNDEFINED> instruction: 0x00010bb0
   10b34:			; <UNDEFINED> instruction: 0x00010bb0
   10b38:			; <UNDEFINED> instruction: 0x00010bb0
   10b3c:			; <UNDEFINED> instruction: 0x00010bb0
   10b40:			; <UNDEFINED> instruction: 0x00010bb0
   10b44:	andeq	r0, r1, r8, asr #22
   10b48:	str	r9, [r4, #8]
   10b4c:	b	10aa0 <abort@plt+0x78>
   10b50:	mov	r0, #0
   10b54:	bl	11234 <abort@plt+0x80c>
   10b58:	str	r9, [r4, #12]
   10b5c:	b	10aa0 <abort@plt+0x78>
   10b60:	mov	r2, #5
   10b64:	movw	r1, #6280	; 0x1888
   10b68:	mov	r0, #0
   10b6c:	movt	r1, #1
   10b70:	bl	10908 <dcgettext@plt>
   10b74:	movw	r2, #8328	; 0x2088
   10b78:	movt	r2, #2
   10b7c:	movw	r3, #6292	; 0x1894
   10b80:	movt	r3, #1
   10b84:	ldr	r2, [r2]
   10b88:	mov	r1, r0
   10b8c:	mov	r0, #1
   10b90:	bl	109b0 <__printf_chk@plt>
   10b94:	mov	r0, #0
   10b98:	ldr	r2, [sp, #140]	; 0x8c
   10b9c:	ldr	r3, [r8]
   10ba0:	cmp	r2, r3
   10ba4:	bne	10dc0 <abort@plt+0x398>
   10ba8:	add	sp, sp, #148	; 0x94
   10bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bb0:	mov	r0, #1
   10bb4:	bl	11234 <abort@plt+0x80c>
   10bb8:	movw	r9, #8360	; 0x20a8
   10bbc:	movt	r9, #2
   10bc0:	bl	114a8 <abort@plt+0xa80>
   10bc4:	ldr	r6, [r9, #12]
   10bc8:	cmp	r6, #0
   10bcc:	beq	10c0c <abort@plt+0x1e4>
   10bd0:	movw	r3, #8344	; 0x2098
   10bd4:	movt	r3, #2
   10bd8:	ldr	r3, [r3]
   10bdc:	cmp	r5, r3
   10be0:	movle	r4, #1
   10be4:	bgt	10bb0 <abort@plt+0x188>
   10be8:	mov	r0, r4
   10bec:	mov	r1, #0
   10bf0:	add	r4, r4, #1
   10bf4:	mov	r2, #1
   10bf8:	bl	10f80 <abort@plt+0x558>
   10bfc:	cmp	r4, #8192	; 0x2000
   10c00:	bne	10be8 <abort@plt+0x1c0>
   10c04:	mov	r0, #0
   10c08:	bl	10980 <exit@plt>
   10c0c:	movw	r4, #8344	; 0x2098
   10c10:	movt	r4, #2
   10c14:	ldr	r3, [r4]
   10c18:	cmp	r5, r3
   10c1c:	ble	10bb0 <abort@plt+0x188>
   10c20:	ldr	fp, [r7, r3, lsl #2]
   10c24:	movw	r1, #6320	; 0x18b0
   10c28:	add	r2, r9, #16
   10c2c:	movt	r1, #1
   10c30:	add	r3, r3, #1
   10c34:	str	r3, [r4]
   10c38:	mov	r0, fp
   10c3c:	bl	109f8 <sscanf@plt>
   10c40:	cmp	r0, #1
   10c44:	bne	10bb0 <abort@plt+0x188>
   10c48:	ldr	r3, [r9, #16]
   10c4c:	cmp	r3, #0
   10c50:	beq	10de4 <abort@plt+0x3bc>
   10c54:	ldr	sl, [r9, #8]
   10c58:	cmp	sl, #0
   10c5c:	bne	10dac <abort@plt+0x384>
   10c60:	ldr	r3, [r4]
   10c64:	rsb	r5, r3, r5
   10c68:	cmp	r5, #1
   10c6c:	beq	10d4c <abort@plt+0x324>
   10c70:	cmp	r5, #2
   10c74:	bne	10da8 <abort@plt+0x380>
   10c78:	mov	r2, #5
   10c7c:	movw	r1, #6488	; 0x1958
   10c80:	mov	r0, sl
   10c84:	movt	r1, #1
   10c88:	ldr	r5, [r7, r3, lsl #2]
   10c8c:	bl	10908 <dcgettext@plt>
   10c90:	mov	r1, r0
   10c94:	mov	r0, r5
   10c98:	bl	11158 <abort@plt+0x730>
   10c9c:	ldr	r3, [r4]
   10ca0:	mov	r2, #5
   10ca4:	movw	r1, #6488	; 0x1958
   10ca8:	add	r3, r3, #1
   10cac:	movt	r1, #1
   10cb0:	ldr	r4, [r7, r3, lsl #2]
   10cb4:	mov	r6, r0
   10cb8:	mov	r0, sl
   10cbc:	bl	10908 <dcgettext@plt>
   10cc0:	mov	r1, r0
   10cc4:	mov	r0, r4
   10cc8:	bl	11158 <abort@plt+0x730>
   10ccc:	mov	r4, r0
   10cd0:	ldr	r3, [r9, #16]
   10cd4:	mov	r1, #44032	; 0xac00
   10cd8:	ldr	r0, [r9]
   10cdc:	add	r2, sp, #8
   10ce0:	asr	r7, r6, #31
   10ce4:	asr	r5, r4, #31
   10ce8:	str	r3, [sp, #8]
   10cec:	movw	r9, #8360	; 0x20a8
   10cf0:	strd	r6, [sp, #16]
   10cf4:	movt	r9, #2
   10cf8:	strd	r4, [sp, #24]
   10cfc:	bl	10938 <ioctl@plt>
   10d00:	cmp	r0, #0
   10d04:	blt	10dc4 <abort@plt+0x39c>
   10d08:	mov	r2, #5
   10d0c:	movw	r1, #5780	; 0x1694
   10d10:	mov	r0, #0
   10d14:	movt	r1, #1
   10d18:	bl	10908 <dcgettext@plt>
   10d1c:	ldr	lr, [sp, #16]
   10d20:	ldr	ip, [sp, #24]
   10d24:	movw	r2, #5820	; 0x16bc
   10d28:	ldr	r3, [r9, #16]
   10d2c:	movt	r2, #1
   10d30:	str	lr, [sp]
   10d34:	str	ip, [sp, #4]
   10d38:	mov	r1, r0
   10d3c:	mov	r0, #1
   10d40:	bl	109b0 <__printf_chk@plt>
   10d44:	mov	r0, #0
   10d48:	b	10b98 <abort@plt+0x170>
   10d4c:	ldr	r4, [r7, r3, lsl #2]
   10d50:	mov	r0, #3
   10d54:	add	r2, sp, #32
   10d58:	mov	r1, r4
   10d5c:	bl	10a10 <__xstat64@plt>
   10d60:	cmp	r0, #0
   10d64:	bne	10e28 <abort@plt+0x400>
   10d68:	ldr	r3, [sp, #48]	; 0x30
   10d6c:	and	r3, r3, #61440	; 0xf000
   10d70:	cmp	r3, #24576	; 0x6000
   10d74:	bne	10e08 <abort@plt+0x3e0>
   10d78:	ldr	r2, [sp, #64]	; 0x40
   10d7c:	ldr	r0, [sp, #68]	; 0x44
   10d80:	ubfx	r6, r2, #8, #12
   10d84:	lsr	r1, r2, #12
   10d88:	bic	r3, r0, #4080	; 0xff0
   10d8c:	orr	r1, r1, r0, lsl #20
   10d90:	bic	r3, r3, #15
   10d94:	bic	r1, r1, #255	; 0xff
   10d98:	uxtb	r2, r2
   10d9c:	orr	r4, r1, r2
   10da0:	orr	r6, r3, r6
   10da4:	b	10cd0 <abort@plt+0x2a8>
   10da8:	bl	11234 <abort@plt+0x80c>
   10dac:	mov	r0, r3
   10db0:	mov	r1, fp
   10db4:	mov	r2, r6
   10db8:	bl	10f80 <abort@plt+0x558>
   10dbc:	b	10b98 <abort@plt+0x170>
   10dc0:	bl	10914 <__stack_chk_fail@plt>
   10dc4:	movw	r1, #6516	; 0x1974
   10dc8:	mov	r0, #0
   10dcc:	movt	r1, #1
   10dd0:	mov	r2, #5
   10dd4:	bl	10908 <dcgettext@plt>
   10dd8:	mov	r1, r0
   10ddc:	mov	r0, #4
   10de0:	bl	1092c <err@plt>
   10de4:	mov	r2, #5
   10de8:	mov	r0, r3
   10dec:	movw	r1, #6336	; 0x18c0
   10df0:	movt	r1, #1
   10df4:	bl	10908 <dcgettext@plt>
   10df8:	mov	r2, fp
   10dfc:	mov	r1, r0
   10e00:	mov	r0, #3
   10e04:	bl	109e0 <errx@plt>
   10e08:	mov	r2, #5
   10e0c:	movw	r1, #6452	; 0x1934
   10e10:	movt	r1, #1
   10e14:	bl	10908 <dcgettext@plt>
   10e18:	mov	r2, r4
   10e1c:	mov	r1, r0
   10e20:	mov	r0, #3
   10e24:	bl	109e0 <errx@plt>
   10e28:	mov	r2, #5
   10e2c:	mov	r0, sl
   10e30:	movw	r1, #6420	; 0x1914
   10e34:	movt	r1, #1
   10e38:	bl	10908 <dcgettext@plt>
   10e3c:	mov	r2, r4
   10e40:	mov	r1, r0
   10e44:	mov	r0, #3
   10e48:	bl	1092c <err@plt>
   10e4c:	mov	fp, #0
   10e50:	mov	lr, #0
   10e54:	pop	{r1}		; (ldr r1, [sp], #4)
   10e58:	mov	r2, sp
   10e5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e60:	push	{r0}		; (str r0, [sp, #-4]!)
   10e64:	ldr	ip, [pc, #16]	; 10e7c <abort@plt+0x454>
   10e68:	push	{ip}		; (str ip, [sp, #-4]!)
   10e6c:	ldr	r0, [pc, #12]	; 10e80 <abort@plt+0x458>
   10e70:	ldr	r3, [pc, #12]	; 10e84 <abort@plt+0x45c>
   10e74:	bl	1095c <__libc_start_main@plt>
   10e78:	bl	10a28 <abort@plt>
   10e7c:	andeq	r1, r1, r0, lsl #11
   10e80:	andeq	r0, r1, r4, lsr sl
   10e84:	andeq	r1, r1, ip, lsl r5
   10e88:	ldr	r3, [pc, #20]	; 10ea4 <abort@plt+0x47c>
   10e8c:	ldr	r2, [pc, #20]	; 10ea8 <abort@plt+0x480>
   10e90:	add	r3, pc, r3
   10e94:	ldr	r2, [r3, r2]
   10e98:	cmp	r2, #0
   10e9c:	bxeq	lr
   10ea0:	b	10968 <__gmon_start__@plt>
   10ea4:	andeq	r1, r1, r8, ror #2
   10ea8:	andeq	r0, r0, ip, ror r0
   10eac:	push	{r3, lr}
   10eb0:	movw	r0, #8328	; 0x2088
   10eb4:	ldr	r3, [pc, #36]	; 10ee0 <abort@plt+0x4b8>
   10eb8:	movt	r0, #2
   10ebc:	rsb	r3, r0, r3
   10ec0:	cmp	r3, #6
   10ec4:	popls	{r3, pc}
   10ec8:	movw	r3, #0
   10ecc:	movt	r3, #0
   10ed0:	cmp	r3, #0
   10ed4:	popeq	{r3, pc}
   10ed8:	blx	r3
   10edc:	pop	{r3, pc}
   10ee0:	andeq	r2, r2, fp, lsl #1
   10ee4:	push	{r3, lr}
   10ee8:	movw	r0, #8328	; 0x2088
   10eec:	movw	r3, #8328	; 0x2088
   10ef0:	movt	r0, #2
   10ef4:	movt	r3, #2
   10ef8:	rsb	r3, r0, r3
   10efc:	asr	r3, r3, #2
   10f00:	add	r3, r3, r3, lsr #31
   10f04:	asrs	r1, r3, #1
   10f08:	popeq	{r3, pc}
   10f0c:	movw	r2, #0
   10f10:	movt	r2, #0
   10f14:	cmp	r2, #0
   10f18:	popeq	{r3, pc}
   10f1c:	blx	r2
   10f20:	pop	{r3, pc}
   10f24:	push	{r4, lr}
   10f28:	movw	r4, #8356	; 0x20a4
   10f2c:	movt	r4, #2
   10f30:	ldrb	r3, [r4]
   10f34:	cmp	r3, #0
   10f38:	popne	{r4, pc}
   10f3c:	bl	10eac <abort@plt+0x484>
   10f40:	mov	r3, #1
   10f44:	strb	r3, [r4]
   10f48:	pop	{r4, pc}
   10f4c:	movw	r0, #7940	; 0x1f04
   10f50:	movt	r0, #2
   10f54:	push	{r3, lr}
   10f58:	ldr	r3, [r0]
   10f5c:	cmp	r3, #0
   10f60:	beq	10f78 <abort@plt+0x550>
   10f64:	movw	r3, #0
   10f68:	movt	r3, #0
   10f6c:	cmp	r3, #0
   10f70:	beq	10f78 <abort@plt+0x550>
   10f74:	blx	r3
   10f78:	pop	{r3, lr}
   10f7c:	b	10ee4 <abort@plt+0x4bc>
   10f80:	push	{r4, r5, r6, r7, r8, lr}
   10f84:	movw	r4, #8336	; 0x2090
   10f88:	movt	r4, #2
   10f8c:	sub	sp, sp, #120	; 0x78
   10f90:	subs	r5, r1, #0
   10f94:	add	r7, sp, #8
   10f98:	ldr	r3, [r4]
   10f9c:	mov	r6, r0
   10fa0:	mov	r8, r2
   10fa4:	str	r3, [sp, #116]	; 0x74
   10fa8:	beq	11010 <abort@plt+0x5e8>
   10fac:	mov	r0, #3
   10fb0:	mov	r2, r7
   10fb4:	bl	10a10 <__xstat64@plt>
   10fb8:	cmp	r0, #0
   10fbc:	bne	11134 <abort@plt+0x70c>
   10fc0:	ldr	r3, [sp, #24]
   10fc4:	and	r3, r3, #61440	; 0xf000
   10fc8:	cmp	r3, #8192	; 0x2000
   10fcc:	movwne	r1, #5680	; 0x1630
   10fd0:	movne	r2, #5
   10fd4:	movtne	r1, #1
   10fd8:	bne	11120 <abort@plt+0x6f8>
   10fdc:	ldr	ip, [sp, #44]	; 0x2c
   10fe0:	ldr	r3, [sp, #40]	; 0x28
   10fe4:	bic	r2, ip, #4080	; 0xff0
   10fe8:	bic	r2, r2, #15
   10fec:	ubfx	r1, r3, #8, #12
   10ff0:	orr	r2, r2, r1
   10ff4:	cmp	r2, #162	; 0xa2
   10ff8:	bne	11114 <abort@plt+0x6ec>
   10ffc:	lsr	r1, r3, #12
   11000:	uxtb	r3, r3
   11004:	orr	r1, r1, ip, lsl #20
   11008:	bic	r6, r1, #255	; 0xff
   1100c:	orr	r6, r6, r3
   11010:	movw	r5, #8360	; 0x20a8
   11014:	movt	r5, #2
   11018:	mov	r2, r7
   1101c:	movw	r1, #44033	; 0xac01
   11020:	ldr	r0, [r5]
   11024:	str	r6, [sp, #8]
   11028:	bl	10938 <ioctl@plt>
   1102c:	cmp	r0, #0
   11030:	blt	110b8 <abort@plt+0x690>
   11034:	cmp	r8, #0
   11038:	mov	r3, #1
   1103c:	str	r3, [r5, #4]
   11040:	beq	11050 <abort@plt+0x628>
   11044:	ldrd	r2, [sp, #16]
   11048:	orrs	r1, r2, r3
   1104c:	beq	110a8 <abort@plt+0x680>
   11050:	mov	r2, #5
   11054:	movw	r1, #5780	; 0x1694
   11058:	mov	r0, #0
   1105c:	movt	r1, #1
   11060:	bl	10908 <dcgettext@plt>
   11064:	ldr	lr, [sp, #16]
   11068:	ldr	ip, [sp, #24]
   1106c:	movw	r2, #5820	; 0x16bc
   11070:	mov	r3, r6
   11074:	movt	r2, #1
   11078:	str	lr, [sp]
   1107c:	str	ip, [sp, #4]
   11080:	mov	r1, r0
   11084:	mov	r0, #1
   11088:	bl	109b0 <__printf_chk@plt>
   1108c:	mov	r0, #0
   11090:	ldr	r2, [sp, #116]	; 0x74
   11094:	ldr	r3, [r4]
   11098:	cmp	r2, r3
   1109c:	bne	11110 <abort@plt+0x6e8>
   110a0:	add	sp, sp, #120	; 0x78
   110a4:	pop	{r4, r5, r6, r7, r8, pc}
   110a8:	ldrd	r2, [sp, #24]
   110ac:	orrs	r1, r2, r3
   110b0:	bne	11050 <abort@plt+0x628>
   110b4:	b	1108c <abort@plt+0x664>
   110b8:	cmp	r8, #0
   110bc:	beq	110d4 <abort@plt+0x6ac>
   110c0:	bl	10998 <__errno_location@plt>
   110c4:	ldr	r3, [r0]
   110c8:	cmp	r3, #19
   110cc:	moveq	r0, #3
   110d0:	beq	11090 <abort@plt+0x668>
   110d4:	ldr	r3, [r5, #4]
   110d8:	cmp	r3, #0
   110dc:	beq	110f0 <abort@plt+0x6c8>
   110e0:	bl	10998 <__errno_location@plt>
   110e4:	ldr	r3, [r0]
   110e8:	cmp	r3, #22
   110ec:	beq	1108c <abort@plt+0x664>
   110f0:	movw	r1, #5752	; 0x1678
   110f4:	mov	r0, #0
   110f8:	movt	r1, #1
   110fc:	mov	r2, #5
   11100:	bl	10908 <dcgettext@plt>
   11104:	mov	r1, r0
   11108:	mov	r0, #4
   1110c:	bl	1092c <err@plt>
   11110:	bl	10914 <__stack_chk_fail@plt>
   11114:	movw	r1, #5720	; 0x1658
   11118:	movt	r1, #1
   1111c:	mov	r2, #5
   11120:	bl	10908 <dcgettext@plt>
   11124:	mov	r2, r5
   11128:	mov	r1, r0
   1112c:	mov	r0, #3
   11130:	bl	109e0 <errx@plt>
   11134:	mov	r2, #5
   11138:	movw	r1, #5648	; 0x1610
   1113c:	mov	r0, #0
   11140:	movt	r1, #1
   11144:	bl	10908 <dcgettext@plt>
   11148:	mov	r2, r5
   1114c:	mov	r1, r0
   11150:	mov	r0, #3
   11154:	bl	1092c <err@plt>
   11158:	push	{r4, r5, r6, r7, r8, lr}
   1115c:	movw	r4, #8336	; 0x2090
   11160:	movt	r4, #2
   11164:	sub	sp, sp, #8
   11168:	subs	r5, r0, #0
   1116c:	mov	r6, #0
   11170:	ldr	r3, [r4]
   11174:	mov	r7, r1
   11178:	str	r6, [sp]
   1117c:	str	r3, [sp, #4]
   11180:	beq	11190 <abort@plt+0x768>
   11184:	ldrsb	r3, [r5]
   11188:	cmp	r3, r6
   1118c:	bne	111b8 <abort@plt+0x790>
   11190:	bl	10998 <__errno_location@plt>
   11194:	ldr	r3, [r0]
   11198:	cmp	r3, #0
   1119c:	bne	111e0 <abort@plt+0x7b8>
   111a0:	movw	r1, #5832	; 0x16c8
   111a4:	mov	r2, r7
   111a8:	mov	r3, r5
   111ac:	mov	r0, #1
   111b0:	movt	r1, #1
   111b4:	bl	109e0 <errx@plt>
   111b8:	bl	10998 <__errno_location@plt>
   111bc:	mov	r2, r6
   111c0:	mov	r1, sp
   111c4:	mov	r8, r0
   111c8:	str	r6, [r0]
   111cc:	mov	r0, r5
   111d0:	bl	108e4 <strtol@plt>
   111d4:	ldr	r3, [r8]
   111d8:	cmp	r3, r6
   111dc:	beq	111f8 <abort@plt+0x7d0>
   111e0:	movw	r1, #5832	; 0x16c8
   111e4:	mov	r2, r7
   111e8:	mov	r3, r5
   111ec:	mov	r0, #1
   111f0:	movt	r1, #1
   111f4:	bl	1092c <err@plt>
   111f8:	ldr	r3, [sp]
   111fc:	cmp	r5, r3
   11200:	beq	111a0 <abort@plt+0x778>
   11204:	cmp	r3, #0
   11208:	beq	11218 <abort@plt+0x7f0>
   1120c:	ldrsb	r3, [r3]
   11210:	cmp	r3, #0
   11214:	bne	111a0 <abort@plt+0x778>
   11218:	ldr	r2, [sp, #4]
   1121c:	ldr	r3, [r4]
   11220:	cmp	r2, r3
   11224:	bne	11230 <abort@plt+0x808>
   11228:	add	sp, sp, #8
   1122c:	pop	{r4, r5, r6, r7, r8, pc}
   11230:	bl	10914 <__stack_chk_fail@plt>
   11234:	push	{r4, r5, lr}
   11238:	subs	r5, r0, #0
   1123c:	sub	sp, sp, #12
   11240:	mov	r2, #5
   11244:	movweq	r3, #8352	; 0x20a0
   11248:	movwne	r3, #8348	; 0x209c
   1124c:	movteq	r3, #2
   11250:	movtne	r3, #2
   11254:	movw	r1, #5844	; 0x16d4
   11258:	mov	r0, #0
   1125c:	ldr	r4, [r3]
   11260:	movt	r1, #1
   11264:	bl	10908 <dcgettext@plt>
   11268:	mov	r1, r4
   1126c:	bl	10a1c <fputs@plt>
   11270:	mov	r2, #5
   11274:	movw	r1, #5856	; 0x16e0
   11278:	mov	r0, #0
   1127c:	movt	r1, #1
   11280:	bl	10908 <dcgettext@plt>
   11284:	movw	r3, #8328	; 0x2088
   11288:	movt	r3, #2
   1128c:	movw	r1, #5820	; 0x16bc
   11290:	movt	r1, #1
   11294:	ldr	r3, [r3]
   11298:	str	r1, [sp]
   1129c:	mov	r1, #1
   112a0:	mov	r2, r0
   112a4:	mov	r0, r4
   112a8:	bl	109bc <__fprintf_chk@plt>
   112ac:	mov	r2, #5
   112b0:	movw	r1, #5952	; 0x1740
   112b4:	mov	r0, #0
   112b8:	movt	r1, #1
   112bc:	bl	10908 <dcgettext@plt>
   112c0:	mov	r1, r4
   112c4:	bl	10a1c <fputs@plt>
   112c8:	mov	r2, #5
   112cc:	movw	r1, #5964	; 0x174c
   112d0:	mov	r0, #0
   112d4:	movt	r1, #1
   112d8:	bl	10908 <dcgettext@plt>
   112dc:	mov	r1, r4
   112e0:	bl	10a1c <fputs@plt>
   112e4:	mov	r2, #5
   112e8:	movw	r1, #5996	; 0x176c
   112ec:	mov	r0, #0
   112f0:	movt	r1, #1
   112f4:	bl	10908 <dcgettext@plt>
   112f8:	mov	r1, r4
   112fc:	bl	10a1c <fputs@plt>
   11300:	mov	r2, #5
   11304:	movw	r1, #6036	; 0x1794
   11308:	mov	r0, #0
   1130c:	movt	r1, #1
   11310:	bl	10908 <dcgettext@plt>
   11314:	mov	r1, r4
   11318:	bl	10a1c <fputs@plt>
   1131c:	mov	r2, #5
   11320:	movw	r1, #6080	; 0x17c0
   11324:	mov	r0, #0
   11328:	movt	r1, #1
   1132c:	bl	10908 <dcgettext@plt>
   11330:	mov	r1, r4
   11334:	bl	10a1c <fputs@plt>
   11338:	mov	r2, #5
   1133c:	movw	r1, #6136	; 0x17f8
   11340:	mov	r0, #0
   11344:	movt	r1, #1
   11348:	bl	10908 <dcgettext@plt>
   1134c:	movw	r3, #6164	; 0x1814
   11350:	mov	r1, #1
   11354:	movt	r3, #1
   11358:	mov	r2, r0
   1135c:	mov	r0, r4
   11360:	bl	109bc <__fprintf_chk@plt>
   11364:	mov	r0, r5
   11368:	bl	10980 <exit@plt>
   1136c:	movw	r3, #8352	; 0x20a0
   11370:	movt	r3, #2
   11374:	push	{r4, r5, r6, lr}
   11378:	ldr	r4, [r3]
   1137c:	mov	r0, r4
   11380:	bl	10944 <__fpending@plt>
   11384:	mov	r6, r0
   11388:	mov	r0, r4
   1138c:	bl	108f0 <ferror@plt>
   11390:	mov	r5, r0
   11394:	mov	r0, r4
   11398:	bl	109c8 <fclose@plt>
   1139c:	adds	r4, r0, #0
   113a0:	movne	r4, #1
   113a4:	cmp	r5, #0
   113a8:	bne	11420 <abort@plt+0x9f8>
   113ac:	cmp	r4, #0
   113b0:	beq	113cc <abort@plt+0x9a4>
   113b4:	cmp	r6, #0
   113b8:	beq	11470 <abort@plt+0xa48>
   113bc:	bl	10998 <__errno_location@plt>
   113c0:	ldr	r3, [r0]
   113c4:	cmp	r3, #32
   113c8:	bne	11484 <abort@plt+0xa5c>
   113cc:	movw	r3, #8348	; 0x209c
   113d0:	movt	r3, #2
   113d4:	ldr	r4, [r3]
   113d8:	mov	r0, r4
   113dc:	bl	10944 <__fpending@plt>
   113e0:	mov	r6, r0
   113e4:	mov	r0, r4
   113e8:	bl	108f0 <ferror@plt>
   113ec:	mov	r5, r0
   113f0:	mov	r0, r4
   113f4:	bl	109c8 <fclose@plt>
   113f8:	adds	r4, r0, #0
   113fc:	movne	r4, #1
   11400:	cmp	r5, #0
   11404:	beq	1144c <abort@plt+0xa24>
   11408:	cmp	r4, #0
   1140c:	bne	11418 <abort@plt+0x9f0>
   11410:	bl	10998 <__errno_location@plt>
   11414:	str	r4, [r0]
   11418:	mov	r0, #1
   1141c:	bl	108fc <_exit@plt>
   11420:	cmp	r4, #0
   11424:	bne	113bc <abort@plt+0x994>
   11428:	bl	10998 <__errno_location@plt>
   1142c:	str	r4, [r0]
   11430:	mov	r2, #5
   11434:	movw	r1, #6172	; 0x181c
   11438:	mov	r0, #0
   1143c:	movt	r1, #1
   11440:	bl	10908 <dcgettext@plt>
   11444:	bl	1098c <warnx@plt>
   11448:	b	11418 <abort@plt+0x9f0>
   1144c:	cmp	r4, #0
   11450:	popeq	{r4, r5, r6, pc}
   11454:	cmp	r6, #0
   11458:	bne	11418 <abort@plt+0x9f0>
   1145c:	bl	10998 <__errno_location@plt>
   11460:	ldr	r3, [r0]
   11464:	cmp	r3, #9
   11468:	bne	11418 <abort@plt+0x9f0>
   1146c:	pop	{r4, r5, r6, pc}
   11470:	bl	10998 <__errno_location@plt>
   11474:	ldr	r3, [r0]
   11478:	cmp	r3, #9
   1147c:	bne	113c4 <abort@plt+0x99c>
   11480:	b	113cc <abort@plt+0x9a4>
   11484:	cmp	r3, #0
   11488:	beq	11430 <abort@plt+0xa08>
   1148c:	mov	r2, #5
   11490:	movw	r1, #6172	; 0x181c
   11494:	mov	r0, #0
   11498:	movt	r1, #1
   1149c:	bl	10908 <dcgettext@plt>
   114a0:	bl	109ec <warn@plt>
   114a4:	b	11418 <abort@plt+0x9f0>
   114a8:	push	{r4, lr}
   114ac:	movw	r0, #6184	; 0x1828
   114b0:	mov	r1, #2
   114b4:	movt	r0, #1
   114b8:	mov	r2, #0
   114bc:	movw	r4, #8360	; 0x20a8
   114c0:	bl	10950 <open64@plt>
   114c4:	movt	r4, #2
   114c8:	cmp	r0, #0
   114cc:	str	r0, [r4]
   114d0:	popge	{r4, pc}
   114d4:	movw	r0, #6200	; 0x1838
   114d8:	mov	r1, #2
   114dc:	movt	r0, #1
   114e0:	mov	r2, #0
   114e4:	bl	10950 <open64@plt>
   114e8:	cmp	r0, #0
   114ec:	str	r0, [r4]
   114f0:	popge	{r4, pc}
   114f4:	mov	r2, #5
   114f8:	movw	r1, #6212	; 0x1844
   114fc:	mov	r0, #0
   11500:	movt	r1, #1
   11504:	bl	10908 <dcgettext@plt>
   11508:	movw	r2, #6184	; 0x1828
   1150c:	movt	r2, #1
   11510:	mov	r1, r0
   11514:	mov	r0, #3
   11518:	bl	1092c <err@plt>
   1151c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11520:	mov	r7, r0
   11524:	ldr	r6, [pc, #76]	; 11578 <abort@plt+0xb50>
   11528:	mov	r8, r1
   1152c:	ldr	r5, [pc, #72]	; 1157c <abort@plt+0xb54>
   11530:	mov	r9, r2
   11534:	add	r6, pc, r6
   11538:	bl	108c4 <strtol@plt-0x20>
   1153c:	add	r5, pc, r5
   11540:	rsb	r6, r5, r6
   11544:	asrs	r6, r6, #2
   11548:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1154c:	sub	r5, r5, #4
   11550:	mov	r4, #0
   11554:	add	r4, r4, #1
   11558:	ldr	r3, [r5, #4]!
   1155c:	mov	r0, r7
   11560:	mov	r1, r8
   11564:	mov	r2, r9
   11568:	blx	r3
   1156c:	cmp	r4, r6
   11570:	bne	11554 <abort@plt+0xb2c>
   11574:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11578:	andeq	r0, r1, r4, asr #19
   1157c:			; <UNDEFINED> instruction: 0x000109b8
   11580:	bx	lr
   11584:	ldr	r3, [pc, #28]	; 115a8 <abort@plt+0xb80>
   11588:	mov	r1, #0
   1158c:	ldr	r2, [pc, #24]	; 115ac <abort@plt+0xb84>
   11590:	add	r3, pc, r3
   11594:	ldr	r3, [r3, r2]
   11598:	cmp	r3, #0
   1159c:	ldrne	r2, [r3]
   115a0:	moveq	r2, r3
   115a4:	b	109a4 <__cxa_atexit@plt>
   115a8:	andeq	r0, r1, r8, ror #20
   115ac:	andeq	r0, r0, r0, lsl #1

Disassembly of section .fini:

000115b0 <.fini>:
   115b0:	push	{r3, lr}
   115b4:	pop	{r3, pc}
