
centos-preinstalled/bootctl:     file format elf32-littlearm


Disassembly of section .init:

000011d0 <.init>:
    11d0:	push	{r3, lr}
    11d4:	bl	26f4 <__snprintf_chk@plt+0x1174>
    11d8:	pop	{r3, pc}

Disassembly of section .plt:

000011dc <calloc@plt-0x14>:
    11dc:	push	{lr}		; (str lr, [sp, #-4]!)
    11e0:	ldr	lr, [pc, #4]	; 11ec <calloc@plt-0x4>
    11e4:	add	lr, pc, lr
    11e8:	ldr	pc, [lr, #8]!
    11ec:	muleq	r1, ip, ip

000011f0 <calloc@plt>:
    11f0:	add	ip, pc, #0, 12
    11f4:	add	ip, ip, #126976	; 0x1f000
    11f8:	ldr	pc, [ip, #3228]!	; 0xc9c

000011fc <raise@plt>:
    11fc:	add	ip, pc, #0, 12
    1200:	add	ip, ip, #126976	; 0x1f000
    1204:	ldr	pc, [ip, #3220]!	; 0xc94

00001208 <strcmp@plt>:
    1208:	add	ip, pc, #0, 12
    120c:	add	ip, ip, #126976	; 0x1f000
    1210:	ldr	pc, [ip, #3212]!	; 0xc8c

00001214 <__cxa_finalize@plt>:
    1214:	add	ip, pc, #0, 12
    1218:	add	ip, ip, #126976	; 0x1f000
    121c:	ldr	pc, [ip, #3204]!	; 0xc84

00001220 <basename@plt>:
    1220:	add	ip, pc, #0, 12
    1224:	add	ip, ip, #126976	; 0x1f000
    1228:	ldr	pc, [ip, #3196]!	; 0xc7c

0000122c <setsockopt@plt>:
    122c:	add	ip, pc, #0, 12
    1230:	add	ip, ip, #126976	; 0x1f000
    1234:	ldr	pc, [ip, #3188]!	; 0xc74

00001238 <secure_getenv@plt>:
    1238:	add	ip, pc, #0, 12
    123c:	add	ip, ip, #126976	; 0x1f000
    1240:	ldr	pc, [ip, #3180]!	; 0xc6c

00001244 <read@plt>:
    1244:	add	ip, pc, #0, 12
    1248:	add	ip, ip, #126976	; 0x1f000
    124c:	ldr	pc, [ip, #3172]!	; 0xc64

00001250 <free@plt>:
    1250:	add	ip, pc, #0, 12
    1254:	add	ip, ip, #126976	; 0x1f000
    1258:	ldr	pc, [ip, #3164]!	; 0xc5c

0000125c <fgets@plt>:
    125c:	add	ip, pc, #0, 12
    1260:	add	ip, ip, #126976	; 0x1f000
    1264:	ldr	pc, [ip, #3156]!	; 0xc54

00001268 <__vsnprintf_chk@plt>:
    1268:	add	ip, pc, #0, 12
    126c:	add	ip, ip, #126976	; 0x1f000
    1270:	ldr	pc, [ip, #3148]!	; 0xc4c

00001274 <memcpy@plt>:
    1274:	add	ip, pc, #0, 12
    1278:	add	ip, ip, #126976	; 0x1f000
    127c:	ldr	pc, [ip, #3140]!	; 0xc44

00001280 <sendmsg@plt>:
    1280:	add	ip, pc, #0, 12
    1284:	add	ip, ip, #126976	; 0x1f000
    1288:	ldr	pc, [ip, #3132]!	; 0xc3c

0000128c <_IO_getc@plt>:
    128c:	add	ip, pc, #0, 12
    1290:	add	ip, ip, #126976	; 0x1f000
    1294:	ldr	pc, [ip, #3124]!	; 0xc34

00001298 <memcmp@plt>:
    1298:	add	ip, pc, #0, 12
    129c:	add	ip, ip, #126976	; 0x1f000
    12a0:	ldr	pc, [ip, #3116]!	; 0xc2c

000012a4 <stpcpy@plt>:
    12a4:	add	ip, pc, #0, 12
    12a8:	add	ip, ip, #126976	; 0x1f000
    12ac:	ldr	pc, [ip, #3108]!	; 0xc24

000012b0 <__stack_chk_fail@plt>:
    12b0:	add	ip, pc, #0, 12
    12b4:	add	ip, ip, #126976	; 0x1f000
    12b8:	ldr	pc, [ip, #3100]!	; 0xc1c

000012bc <realloc@plt>:
    12bc:	add	ip, pc, #0, 12
    12c0:	add	ip, ip, #126976	; 0x1f000
    12c4:	ldr	pc, [ip, #3092]!	; 0xc14

000012c8 <strcasecmp@plt>:
    12c8:	add	ip, pc, #0, 12
    12cc:	add	ip, ip, #126976	; 0x1f000
    12d0:	ldr	pc, [ip, #3084]!	; 0xc0c

000012d4 <__strndup@plt>:
    12d4:	add	ip, pc, #0, 12
    12d8:	add	ip, ip, #126976	; 0x1f000
    12dc:	ldr	pc, [ip, #3076]!	; 0xc04

000012e0 <funlockfile@plt>:
    12e0:	add	ip, pc, #0, 12
    12e4:	add	ip, ip, #126976	; 0x1f000
    12e8:	ldr	pc, [ip, #3068]!	; 0xbfc

000012ec <__fxstat64@plt>:
    12ec:	add	ip, pc, #0, 12
    12f0:	add	ip, ip, #126976	; 0x1f000
    12f4:	ldr	pc, [ip, #3060]!	; 0xbf4

000012f8 <getsockopt@plt>:
    12f8:	add	ip, pc, #0, 12
    12fc:	add	ip, ip, #126976	; 0x1f000
    1300:	ldr	pc, [ip, #3052]!	; 0xbec

00001304 <usleep@plt>:
    1304:	add	ip, pc, #0, 12
    1308:	add	ip, ip, #126976	; 0x1f000
    130c:	ldr	pc, [ip, #3044]!	; 0xbe4

00001310 <opendir@plt>:
    1310:	add	ip, pc, #0, 12
    1314:	add	ip, ip, #126976	; 0x1f000
    1318:	ldr	pc, [ip, #3036]!	; 0xbdc

0000131c <open64@plt>:
    131c:	add	ip, pc, #0, 12
    1320:	add	ip, ip, #126976	; 0x1f000
    1324:	ldr	pc, [ip, #3028]!	; 0xbd4

00001328 <__asprintf_chk@plt>:
    1328:	add	ip, pc, #0, 12
    132c:	add	ip, ip, #126976	; 0x1f000
    1330:	ldr	pc, [ip, #3020]!	; 0xbcc

00001334 <getenv@plt>:
    1334:	add	ip, pc, #0, 12
    1338:	add	ip, ip, #126976	; 0x1f000
    133c:	ldr	pc, [ip, #3012]!	; 0xbc4

00001340 <ppoll@plt>:
    1340:	add	ip, pc, #0, 12
    1344:	add	ip, ip, #126976	; 0x1f000
    1348:	ldr	pc, [ip, #3004]!	; 0xbbc

0000134c <puts@plt>:
    134c:	add	ip, pc, #0, 12
    1350:	add	ip, ip, #126976	; 0x1f000
    1354:	ldr	pc, [ip, #2996]!	; 0xbb4

00001358 <malloc@plt>:
    1358:	add	ip, pc, #0, 12
    135c:	add	ip, ip, #126976	; 0x1f000
    1360:	ldr	pc, [ip, #2988]!	; 0xbac

00001364 <__libc_start_main@plt>:
    1364:	add	ip, pc, #0, 12
    1368:	add	ip, ip, #126976	; 0x1f000
    136c:	ldr	pc, [ip, #2980]!	; 0xba4

00001370 <strftime@plt>:
    1370:	add	ip, pc, #0, 12
    1374:	add	ip, ip, #126976	; 0x1f000
    1378:	ldr	pc, [ip, #2972]!	; 0xb9c

0000137c <localtime@plt>:
    137c:	add	ip, pc, #0, 12
    1380:	add	ip, ip, #126976	; 0x1f000
    1384:	ldr	pc, [ip, #2964]!	; 0xb94

00001388 <__gmon_start__@plt>:
    1388:	add	ip, pc, #0, 12
    138c:	add	ip, ip, #126976	; 0x1f000
    1390:	ldr	pc, [ip, #2956]!	; 0xb8c

00001394 <getopt_long@plt>:
    1394:	add	ip, pc, #0, 12
    1398:	add	ip, ip, #126976	; 0x1f000
    139c:	ldr	pc, [ip, #2948]!	; 0xb84

000013a0 <__ctype_b_loc@plt>:
    13a0:	add	ip, pc, #0, 12
    13a4:	add	ip, ip, #126976	; 0x1f000
    13a8:	ldr	pc, [ip, #2940]!	; 0xb7c

000013ac <getpid@plt>:
    13ac:	add	ip, pc, #0, 12
    13b0:	add	ip, ip, #126976	; 0x1f000
    13b4:	ldr	pc, [ip, #2932]!	; 0xb74

000013b8 <syscall@plt>:
    13b8:	add	ip, pc, #0, 12
    13bc:	add	ip, ip, #126976	; 0x1f000
    13c0:	ldr	pc, [ip, #2924]!	; 0xb6c

000013c4 <strtoul@plt>:
    13c4:	add	ip, pc, #0, 12
    13c8:	add	ip, ip, #126976	; 0x1f000
    13cc:	ldr	pc, [ip, #2916]!	; 0xb64

000013d0 <strlen@plt>:
    13d0:	add	ip, pc, #0, 12
    13d4:	add	ip, ip, #126976	; 0x1f000
    13d8:	ldr	pc, [ip, #2908]!	; 0xb5c

000013dc <strchr@plt>:
    13dc:	add	ip, pc, #0, 12
    13e0:	add	ip, ip, #126976	; 0x1f000
    13e4:	ldr	pc, [ip, #2900]!	; 0xb54

000013e8 <srand@plt>:
    13e8:	add	ip, pc, #0, 12
    13ec:	add	ip, ip, #126976	; 0x1f000
    13f0:	ldr	pc, [ip, #2892]!	; 0xb4c

000013f4 <__gcc_personality_v0@plt>:
    13f4:	add	ip, pc, #0, 12
    13f8:	add	ip, ip, #126976	; 0x1f000
    13fc:	ldr	pc, [ip, #2884]!	; 0xb44

00001400 <__errno_location@plt>:
    1400:	add	ip, pc, #0, 12
    1404:	add	ip, ip, #126976	; 0x1f000
    1408:	ldr	pc, [ip, #2876]!	; 0xb3c

0000140c <__sprintf_chk@plt>:
    140c:	add	ip, pc, #0, 12
    1410:	add	ip, ip, #126976	; 0x1f000
    1414:	ldr	pc, [ip, #2868]!	; 0xb34

00001418 <__strdup@plt>:
    1418:	add	ip, pc, #0, 12
    141c:	add	ip, ip, #126976	; 0x1f000
    1420:	ldr	pc, [ip, #2860]!	; 0xb2c

00001424 <memset@plt>:
    1424:	add	ip, pc, #0, 12
    1428:	add	ip, ip, #126976	; 0x1f000
    142c:	ldr	pc, [ip, #2852]!	; 0xb24

00001430 <putchar@plt>:
    1430:	add	ip, pc, #0, 12
    1434:	add	ip, ip, #126976	; 0x1f000
    1438:	ldr	pc, [ip, #2844]!	; 0xb1c

0000143c <__printf_chk@plt>:
    143c:	add	ip, pc, #0, 12
    1440:	add	ip, ip, #126976	; 0x1f000
    1444:	ldr	pc, [ip, #2836]!	; 0xb14

00001448 <access@plt>:
    1448:	add	ip, pc, #0, 12
    144c:	add	ip, ip, #126976	; 0x1f000
    1450:	ldr	pc, [ip, #2828]!	; 0xb0c

00001454 <rand@plt>:
    1454:	add	ip, pc, #0, 12
    1458:	add	ip, ip, #126976	; 0x1f000
    145c:	ldr	pc, [ip, #2820]!	; 0xb04

00001460 <writev@plt>:
    1460:	add	ip, pc, #0, 12
    1464:	add	ip, ip, #126976	; 0x1f000
    1468:	ldr	pc, [ip, #2812]!	; 0xafc

0000146c <fclose@plt>:
    146c:	add	ip, pc, #0, 12
    1470:	add	ip, ip, #126976	; 0x1f000
    1474:	ldr	pc, [ip, #2804]!	; 0xaf4

00001478 <getauxval@plt>:
    1478:	add	ip, pc, #0, 12
    147c:	add	ip, ip, #126976	; 0x1f000
    1480:	ldr	pc, [ip, #2796]!	; 0xaec

00001484 <__uflow@plt>:
    1484:	add	ip, pc, #0, 12
    1488:	add	ip, ip, #126976	; 0x1f000
    148c:	ldr	pc, [ip, #2788]!	; 0xae4

00001490 <setlocale@plt>:
    1490:	add	ip, pc, #0, 12
    1494:	add	ip, ip, #126976	; 0x1f000
    1498:	ldr	pc, [ip, #2780]!	; 0xadc

0000149c <strrchr@plt>:
    149c:	add	ip, pc, #0, 12
    14a0:	add	ip, ip, #126976	; 0x1f000
    14a4:	ldr	pc, [ip, #2772]!	; 0xad4

000014a8 <statfs64@plt>:
    14a8:	add	ip, pc, #0, 12
    14ac:	add	ip, ip, #126976	; 0x1f000
    14b0:	ldr	pc, [ip, #2764]!	; 0xacc

000014b4 <nl_langinfo@plt>:
    14b4:	add	ip, pc, #0, 12
    14b8:	add	ip, ip, #126976	; 0x1f000
    14bc:	ldr	pc, [ip, #2756]!	; 0xac4

000014c0 <sscanf@plt>:
    14c0:	add	ip, pc, #0, 12
    14c4:	add	ip, ip, #126976	; 0x1f000
    14c8:	ldr	pc, [ip, #2748]!	; 0xabc

000014cc <readdir64@plt>:
    14cc:	add	ip, pc, #0, 12
    14d0:	add	ip, ip, #126976	; 0x1f000
    14d4:	ldr	pc, [ip, #2740]!	; 0xab4

000014d8 <flockfile@plt>:
    14d8:	add	ip, pc, #0, 12
    14dc:	add	ip, ip, #126976	; 0x1f000
    14e0:	ldr	pc, [ip, #2732]!	; 0xaac

000014e4 <canonicalize_file_name@plt>:
    14e4:	add	ip, pc, #0, 12
    14e8:	add	ip, ip, #126976	; 0x1f000
    14ec:	ldr	pc, [ip, #2724]!	; 0xaa4

000014f0 <fopen64@plt>:
    14f0:	add	ip, pc, #0, 12
    14f4:	add	ip, ip, #126976	; 0x1f000
    14f8:	ldr	pc, [ip, #2716]!	; 0xa9c

000014fc <qsort@plt>:
    14fc:	add	ip, pc, #0, 12
    1500:	add	ip, ip, #126976	; 0x1f000
    1504:	ldr	pc, [ip, #2708]!	; 0xa94

00001508 <socket@plt>:
    1508:	add	ip, pc, #0, 12
    150c:	add	ip, ip, #126976	; 0x1f000
    1510:	ldr	pc, [ip, #2700]!	; 0xa8c

00001514 <clock_gettime@plt>:
    1514:	add	ip, pc, #0, 12
    1518:	add	ip, ip, #126976	; 0x1f000
    151c:	ldr	pc, [ip, #2692]!	; 0xa84

00001520 <__tls_get_addr@plt>:
    1520:	add	ip, pc, #0, 12
    1524:	add	ip, ip, #126976	; 0x1f000
    1528:	ldr	pc, [ip, #2684]!	; 0xa7c

0000152c <isatty@plt>:
    152c:	add	ip, pc, #0, 12
    1530:	add	ip, ip, #126976	; 0x1f000
    1534:	ldr	pc, [ip, #2676]!	; 0xa74

00001538 <_Unwind_Resume@plt>:
    1538:	add	ip, pc, #0, 12
    153c:	add	ip, ip, #126976	; 0x1f000
    1540:	ldr	pc, [ip, #2668]!	; 0xa6c

00001544 <strncmp@plt>:
    1544:	add	ip, pc, #0, 12
    1548:	add	ip, ip, #126976	; 0x1f000
    154c:	ldr	pc, [ip, #2660]!	; 0xa64

00001550 <abort@plt>:
    1550:	add	ip, pc, #0, 12
    1554:	add	ip, ip, #126976	; 0x1f000
    1558:	ldr	pc, [ip, #2652]!	; 0xa5c

0000155c <close@plt>:
    155c:	add	ip, pc, #0, 12
    1560:	add	ip, ip, #126976	; 0x1f000
    1564:	ldr	pc, [ip, #2644]!	; 0xa54

00001568 <connect@plt>:
    1568:	add	ip, pc, #0, 12
    156c:	add	ip, ip, #126976	; 0x1f000
    1570:	ldr	pc, [ip, #2636]!	; 0xa4c

00001574 <closedir@plt>:
    1574:	add	ip, pc, #0, 12
    1578:	add	ip, ip, #126976	; 0x1f000
    157c:	ldr	pc, [ip, #2628]!	; 0xa44

00001580 <__snprintf_chk@plt>:
    1580:	add	ip, pc, #0, 12
    1584:	add	ip, ip, #126976	; 0x1f000
    1588:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

00001590 <__libc_csu_init@@Base-0xa9fc>:
    1590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1594:	cmp	r3, #0
    1598:	sub	sp, sp, #132	; 0x84
    159c:	ldr	r7, [pc, #736]	; 1884 <__snprintf_chk@plt+0x304>
    15a0:	mov	ip, r2
    15a4:	moveq	r4, #1
    15a8:	and	r2, r1, #7
    15ac:	add	r7, pc, r7
    15b0:	ubfx	r1, r1, #3, #7
    15b4:	ldr	lr, [sp, #172]	; 0xac
    15b8:	ldr	r5, [sp, #180]	; 0xb4
    15bc:	beq	15cc <__snprintf_chk@plt+0x4c>
    15c0:	ldrb	r4, [r3]
    15c4:	rsbs	r4, r4, #1
    15c8:	movcc	r4, #0
    15cc:	cmp	r4, #0
    15d0:	ldrne	fp, [pc, #688]	; 1888 <__snprintf_chk@plt+0x308>
    15d4:	addne	fp, pc, fp
    15d8:	ldreq	fp, [pc, #684]	; 188c <__snprintf_chk@plt+0x30c>
    15dc:	addeq	fp, pc, fp
    15e0:	cmp	r3, #0
    15e4:	moveq	r4, #1
    15e8:	beq	15f8 <__snprintf_chk@plt+0x78>
    15ec:	ldrb	r4, [r3]
    15f0:	rsbs	r4, r4, #1
    15f4:	movcc	r4, #0
    15f8:	cmp	r4, #0
    15fc:	streq	r3, [sp, #100]	; 0x64
    1600:	ldrne	r4, [pc, #648]	; 1890 <__snprintf_chk@plt+0x310>
    1604:	addne	r4, pc, r4
    1608:	strne	r4, [sp, #100]	; 0x64
    160c:	cmp	r3, #0
    1610:	moveq	r3, #1
    1614:	beq	1624 <__snprintf_chk@plt+0xa4>
    1618:	ldrb	r3, [r3]
    161c:	rsbs	r3, r3, #1
    1620:	movcc	r3, #0
    1624:	cmp	r3, #0
    1628:	ldrne	r4, [pc, #612]	; 1894 <__snprintf_chk@plt+0x314>
    162c:	addne	r4, pc, r4
    1630:	strne	r4, [sp, #104]	; 0x68
    1634:	ldreq	r4, [pc, #604]	; 1898 <__snprintf_chk@plt+0x318>
    1638:	addeq	r4, pc, r4
    163c:	streq	r4, [sp, #104]	; 0x68
    1640:	ldr	r4, [sp, #168]	; 0xa8
    1644:	cmp	r4, #0
    1648:	ldrne	r4, [pc, #588]	; 189c <__snprintf_chk@plt+0x31c>
    164c:	addne	r4, pc, r4
    1650:	strne	r4, [sp, #108]	; 0x6c
    1654:	ldreq	r4, [pc, #580]	; 18a0 <__snprintf_chk@plt+0x320>
    1658:	addeq	r4, pc, r4
    165c:	streq	r4, [sp, #108]	; 0x6c
    1660:	ldr	r3, [sp, #168]	; 0xa8
    1664:	adds	r4, r3, #0
    1668:	movne	r4, #1
    166c:	cmp	r4, #0
    1670:	ldreq	r3, [pc, #556]	; 18a4 <__snprintf_chk@plt+0x324>
    1674:	addeq	r3, pc, r3
    1678:	streq	r3, [sp, #112]	; 0x70
    167c:	ldrne	r3, [pc, #548]	; 18a8 <__snprintf_chk@plt+0x328>
    1680:	addne	r3, pc, r3
    1684:	strne	r3, [sp, #112]	; 0x70
    1688:	cmp	lr, #0
    168c:	moveq	r3, #1
    1690:	beq	16a0 <__snprintf_chk@plt+0x120>
    1694:	ldrb	r3, [lr]
    1698:	rsbs	r3, r3, #1
    169c:	movcc	r3, #0
    16a0:	cmp	r3, #0
    16a4:	ldrne	r3, [pc, #512]	; 18ac <__snprintf_chk@plt+0x32c>
    16a8:	addne	r3, pc, r3
    16ac:	strne	r3, [sp, #116]	; 0x74
    16b0:	ldreq	r3, [pc, #504]	; 18b0 <__snprintf_chk@plt+0x330>
    16b4:	addeq	r3, pc, r3
    16b8:	streq	r3, [sp, #116]	; 0x74
    16bc:	cmp	lr, #0
    16c0:	moveq	r3, #1
    16c4:	beq	16d4 <__snprintf_chk@plt+0x154>
    16c8:	ldrb	r3, [lr]
    16cc:	rsbs	r3, r3, #1
    16d0:	movcc	r3, #0
    16d4:	cmp	r3, #0
    16d8:	streq	lr, [sp, #120]	; 0x78
    16dc:	ldrne	r3, [pc, #464]	; 18b4 <__snprintf_chk@plt+0x334>
    16e0:	addne	r3, pc, r3
    16e4:	strne	r3, [sp, #120]	; 0x78
    16e8:	cmp	lr, #0
    16ec:	moveq	r3, #1
    16f0:	beq	1700 <__snprintf_chk@plt+0x180>
    16f4:	ldrb	r3, [lr]
    16f8:	rsbs	r3, r3, #1
    16fc:	movcc	r3, #0
    1700:	cmp	r3, #0
    1704:	ldrne	lr, [pc, #428]	; 18b8 <__snprintf_chk@plt+0x338>
    1708:	addne	lr, pc, lr
    170c:	strne	lr, [sp, #124]	; 0x7c
    1710:	ldreq	lr, [pc, #420]	; 18bc <__snprintf_chk@plt+0x33c>
    1714:	addeq	lr, pc, lr
    1718:	streq	lr, [sp, #124]	; 0x7c
    171c:	cmp	ip, #0
    1720:	ldrne	lr, [pc, #408]	; 18c0 <__snprintf_chk@plt+0x340>
    1724:	addne	lr, pc, lr
    1728:	strne	lr, [sp, #88]	; 0x58
    172c:	ldreq	lr, [pc, #400]	; 18c4 <__snprintf_chk@plt+0x344>
    1730:	addeq	lr, pc, lr
    1734:	streq	lr, [sp, #88]	; 0x58
    1738:	adds	lr, ip, #0
    173c:	movne	lr, #1
    1740:	cmp	lr, #0
    1744:	ldreq	sl, [pc, #380]	; 18c8 <__snprintf_chk@plt+0x348>
    1748:	addeq	sl, pc, sl
    174c:	ldrne	sl, [pc, #376]	; 18cc <__snprintf_chk@plt+0x34c>
    1750:	addne	sl, pc, sl
    1754:	cmp	r5, #0
    1758:	moveq	r3, #1
    175c:	beq	176c <__snprintf_chk@plt+0x1ec>
    1760:	ldrb	r3, [r5]
    1764:	rsbs	r3, r3, #1
    1768:	movcc	r3, #0
    176c:	cmp	r3, #0
    1770:	ldreq	r9, [sp, #176]	; 0xb0
    1774:	ldrne	r9, [pc, #340]	; 18d0 <__snprintf_chk@plt+0x350>
    1778:	addne	r9, pc, r9
    177c:	cmp	r5, #0
    1780:	moveq	r3, #1
    1784:	beq	1794 <__snprintf_chk@plt+0x214>
    1788:	ldrb	r3, [r5]
    178c:	rsbs	r3, r3, #1
    1790:	movcc	r3, #0
    1794:	cmp	r3, #0
    1798:	moveq	r8, r5
    179c:	ldrne	r8, [pc, #304]	; 18d4 <__snprintf_chk@plt+0x354>
    17a0:	addne	r8, pc, r8
    17a4:	cmp	r5, #0
    17a8:	moveq	r3, #1
    17ac:	beq	17bc <__snprintf_chk@plt+0x23c>
    17b0:	ldrb	r3, [r5]
    17b4:	rsbs	r3, r3, #1
    17b8:	movcc	r3, #0
    17bc:	cmp	r3, #0
    17c0:	ldrne	r3, [pc, #272]	; 18d8 <__snprintf_chk@plt+0x358>
    17c4:	addne	r3, pc, r3
    17c8:	strne	r3, [sp, #92]	; 0x5c
    17cc:	ldreq	r3, [pc, #264]	; 18dc <__snprintf_chk@plt+0x35c>
    17d0:	addeq	r3, pc, r3
    17d4:	streq	r3, [sp, #92]	; 0x5c
    17d8:	str	fp, [sp, #12]
    17dc:	mvn	r3, #0
    17e0:	ldr	fp, [sp, #100]	; 0x64
    17e4:	str	r4, [sp, #28]
    17e8:	ldr	r4, [sp, #168]	; 0xa8
    17ec:	str	fp, [sp, #16]
    17f0:	ldr	fp, [sp, #104]	; 0x68
    17f4:	str	r4, [sp, #32]
    17f8:	ldr	r4, [sp, #116]	; 0x74
    17fc:	str	fp, [sp, #20]
    1800:	ldr	fp, [sp, #108]	; 0x6c
    1804:	str	r4, [sp, #40]	; 0x28
    1808:	str	ip, [sp, #60]	; 0x3c
    180c:	str	fp, [sp, #24]
    1810:	ldr	fp, [sp, #112]	; 0x70
    1814:	ldr	ip, [sp, #92]	; 0x5c
    1818:	ldr	r4, [sp, #124]	; 0x7c
    181c:	str	fp, [sp, #36]	; 0x24
    1820:	ldr	fp, [sp, #120]	; 0x78
    1824:	ldr	r5, [pc, #180]	; 18e0 <__snprintf_chk@plt+0x360>
    1828:	ldr	r6, [pc, #180]	; 18e4 <__snprintf_chk@plt+0x364>
    182c:	str	fp, [sp, #44]	; 0x2c
    1830:	ldr	fp, [sp, #88]	; 0x58
    1834:	add	r6, pc, r6
    1838:	str	r2, [sp, #4]
    183c:	mov	r2, #1
    1840:	str	r1, [sp, #8]
    1844:	mov	r1, #2048	; 0x800
    1848:	str	r4, [sp, #48]	; 0x30
    184c:	str	fp, [sp, #52]	; 0x34
    1850:	str	lr, [sp, #56]	; 0x38
    1854:	str	sl, [sp, #64]	; 0x40
    1858:	str	r9, [sp, #68]	; 0x44
    185c:	str	r8, [sp, #72]	; 0x48
    1860:	str	ip, [sp, #76]	; 0x4c
    1864:	str	r6, [sp]
    1868:	ldr	ip, [r7, r5]
    186c:	ldr	ip, [ip]
    1870:	str	ip, [sp, #80]	; 0x50
    1874:	bl	1580 <__snprintf_chk@plt>
    1878:	mov	r0, #0
    187c:	add	sp, sp, #132	; 0x84
    1880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1884:	ldrdeq	pc, [r1], -r4
    1888:	andeq	sl, r0, ip, lsl #23
    188c:	andeq	sp, r0, r8, asr #16
    1890:	andeq	sl, r0, ip, asr fp
    1894:	andeq	sl, r0, r4, lsr fp
    1898:	andeq	sp, r0, r0, rrx
    189c:	andeq	sp, r0, r4, ror #15
    18a0:	andeq	sl, r0, r8, lsl #22
    18a4:	andeq	sl, r0, ip, ror #21
    18a8:	andeq	sp, r0, r8, lsl r0
    18ac:			; <UNDEFINED> instruction: 0x0000aab8
    18b0:	andeq	sp, r0, r8, lsl #15
    18b4:	andeq	sl, r0, r0, lsl #21
    18b8:	andeq	sl, r0, r8, asr sl
    18bc:	andeq	ip, r0, r4, lsl #31
    18c0:	andeq	sp, r0, r8, lsr #14
    18c4:	andeq	sl, r0, r0, lsr sl
    18c8:	andeq	sl, r0, r8, lsl sl
    18cc:	andeq	ip, r0, r8, asr #30
    18d0:	andeq	sl, r0, r8, ror #19
    18d4:	andeq	sl, r0, r0, asr #19
    18d8:	muleq	r0, ip, r9
    18dc:	andeq	ip, r0, r8, asr #29
    18e0:	andeq	r0, r0, r0, ror r1
    18e4:	andeq	sp, r0, r0, lsr #12
    18e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18ec:	sub	sp, sp, #2144	; 0x860
    18f0:	ldr	lr, [pc, #328]	; 1a40 <__snprintf_chk@plt+0x4c0>
    18f4:	sub	sp, sp, #4
    18f8:	ldr	ip, [pc, #324]	; 1a44 <__snprintf_chk@plt+0x4c4>
    18fc:	add	r4, sp, #60	; 0x3c
    1900:	add	lr, pc, lr
    1904:	str	r0, [sp, #20]
    1908:	ldr	sl, [pc, #312]	; 1a48 <__snprintf_chk@plt+0x4c8>
    190c:	add	r5, sp, #32
    1910:	ldr	r7, [lr, ip]
    1914:	mov	r9, r1
    1918:	ldr	ip, [sp, #2188]	; 0x88c
    191c:	mov	r1, #0
    1920:	mov	r8, r2
    1924:	mov	r0, r4
    1928:	ldr	lr, [r7]
    192c:	mov	r2, #32
    1930:	str	ip, [sp, #24]
    1934:	add	sl, pc, sl
    1938:	ldr	ip, [sp, #2192]	; 0x890
    193c:	str	r3, [sp, #16]
    1940:	str	lr, [sp, #2140]	; 0x85c
    1944:	str	ip, [sp, #28]
    1948:	ldr	fp, [sp, #2184]	; 0x888
    194c:	ldr	r6, [sp, #2196]	; 0x894
    1950:	bl	1424 <memset@plt>
    1954:	mov	r2, #28
    1958:	mov	r0, r5
    195c:	mov	r1, #0
    1960:	bl	1424 <memset@plt>
    1964:	ldr	r2, [sl]
    1968:	ldr	r3, [sp, #16]
    196c:	cmp	r2, #0
    1970:	movlt	r0, #0
    1974:	blt	1a20 <__snprintf_chk@plt+0x4a0>
    1978:	stm	sp, {r3, fp}
    197c:	mov	r2, r9
    1980:	ldr	r3, [sp, #24]
    1984:	mov	r9, #1
    1988:	ldr	ip, [sp, #28]
    198c:	ldr	r1, [sp, #20]
    1990:	str	r3, [sp, #8]
    1994:	mov	r3, r8
    1998:	add	r8, sp, #92	; 0x5c
    199c:	str	ip, [sp, #12]
    19a0:	mov	r0, r8
    19a4:	bl	1590 <__snprintf_chk@plt+0x10>
    19a8:	mov	r0, r8
    19ac:	str	r8, [sp, #60]	; 0x3c
    19b0:	bl	13d0 <strlen@plt>
    19b4:	ldr	r3, [pc, #144]	; 1a4c <__snprintf_chk@plt+0x4cc>
    19b8:	mov	r2, #8
    19bc:	str	r6, [sp, #76]	; 0x4c
    19c0:	add	r3, pc, r3
    19c4:	str	r2, [sp, #72]	; 0x48
    19c8:	str	r3, [sp, #68]	; 0x44
    19cc:	str	r0, [sp, #64]	; 0x40
    19d0:	mov	r0, r6
    19d4:	bl	13d0 <strlen@plt>
    19d8:	ldr	lr, [pc, #112]	; 1a50 <__snprintf_chk@plt+0x4d0>
    19dc:	mov	r1, r5
    19e0:	mov	r2, #16384	; 0x4000
    19e4:	add	lr, pc, lr
    19e8:	mov	r3, #4
    19ec:	str	r4, [sp, #40]	; 0x28
    19f0:	str	lr, [sp, #84]	; 0x54
    19f4:	str	r9, [sp, #88]	; 0x58
    19f8:	str	r3, [sp, #44]	; 0x2c
    19fc:	str	r0, [sp, #80]	; 0x50
    1a00:	ldr	r0, [sl]
    1a04:	bl	1280 <sendmsg@plt>
    1a08:	cmp	r0, #0
    1a0c:	movge	r0, r9
    1a10:	bge	1a20 <__snprintf_chk@plt+0x4a0>
    1a14:	bl	1400 <__errno_location@plt>
    1a18:	ldr	r0, [r0]
    1a1c:	rsb	r0, r0, #0
    1a20:	ldr	r2, [sp, #2140]	; 0x85c
    1a24:	ldr	r3, [r7]
    1a28:	cmp	r2, r3
    1a2c:	beq	1a34 <__snprintf_chk@plt+0x4b4>
    1a30:	bl	12b0 <__stack_chk_fail@plt>
    1a34:	add	sp, sp, #2144	; 0x860
    1a38:	add	sp, sp, #4
    1a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1a40:	andeq	pc, r1, r0, lsl #11
    1a44:	andeq	r0, r0, r4, asr r1
    1a48:	andeq	pc, r1, ip, lsl #14
    1a4c:	andeq	sp, r0, ip, ror #9
    1a50:			; <UNDEFINED> instruction: 0x0000ccb4
    1a54:	push	{r3, lr}
    1a58:	movw	r2, #299	; 0x12b
    1a5c:	ldr	r0, [pc, #20]	; 1a78 <__snprintf_chk@plt+0x4f8>
    1a60:	ldr	r1, [pc, #20]	; 1a7c <__snprintf_chk@plt+0x4fc>
    1a64:	ldr	r3, [pc, #20]	; 1a80 <__snprintf_chk@plt+0x500>
    1a68:	add	r0, pc, r0
    1a6c:	add	r1, pc, r1
    1a70:	add	r3, pc, r3
    1a74:	bl	9700 <__snprintf_chk@plt+0x8180>
    1a78:	andeq	sp, r0, r8, asr #9
    1a7c:	muleq	r0, r4, r4
    1a80:	andeq	sp, r0, r4, ror r3
    1a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a88:	sub	sp, sp, #252	; 0xfc
    1a8c:	ldr	ip, [pc, #2076]	; 22b0 <__snprintf_chk@plt+0xd30>
    1a90:	mov	r9, r0
    1a94:	ldr	r0, [pc, #2072]	; 22b4 <__snprintf_chk@plt+0xd34>
    1a98:	add	ip, pc, ip
    1a9c:	str	ip, [sp, #52]	; 0x34
    1aa0:	ldr	ip, [sp, #288]	; 0x120
    1aa4:	str	r2, [sp, #32]
    1aa8:	str	r3, [sp, #36]	; 0x24
    1aac:	str	ip, [sp, #40]	; 0x28
    1ab0:	ldr	ip, [sp, #52]	; 0x34
    1ab4:	ldr	r6, [sp, #300]	; 0x12c
    1ab8:	ldr	r3, [ip, r0]
    1abc:	cmp	r6, #0
    1ac0:	ldr	ip, [sp, #292]	; 0x124
    1ac4:	ldr	r2, [r3]
    1ac8:	str	ip, [sp, #44]	; 0x2c
    1acc:	ldr	ip, [sp, #296]	; 0x128
    1ad0:	str	r3, [sp, #60]	; 0x3c
    1ad4:	str	r2, [sp, #244]	; 0xf4
    1ad8:	str	ip, [sp, #48]	; 0x30
    1adc:	bne	1b00 <__snprintf_chk@plt+0x580>
    1ae0:	ldr	r0, [pc, #2000]	; 22b8 <__snprintf_chk@plt+0xd38>
    1ae4:	movw	r2, #545	; 0x221
    1ae8:	ldr	r1, [pc, #1996]	; 22bc <__snprintf_chk@plt+0xd3c>
    1aec:	ldr	r3, [pc, #1996]	; 22c0 <__snprintf_chk@plt+0xd40>
    1af0:	add	r0, pc, r0
    1af4:	add	r1, pc, r1
    1af8:	add	r3, pc, r3
    1afc:	bl	9700 <__snprintf_chk@plt+0x8180>
    1b00:	ldr	r3, [pc, #1980]	; 22c4 <__snprintf_chk@plt+0xd44>
    1b04:	add	r3, pc, r3
    1b08:	ldr	r3, [r3]
    1b0c:	cmp	r3, #9
    1b10:	rsbeq	r0, r1, #0
    1b14:	beq	2290 <__snprintf_chk@plt+0xd10>
    1b18:	tst	r9, #1016	; 0x3f8
    1b1c:	bne	1b34 <__snprintf_chk@plt+0x5b4>
    1b20:	ldr	r3, [pc, #1952]	; 22c8 <__snprintf_chk@plt+0xd48>
    1b24:	and	r9, r9, #7
    1b28:	add	r3, pc, r3
    1b2c:	ldr	r3, [r3]
    1b30:	orr	r9, r9, r3
    1b34:	eor	ip, r1, r1, asr #31
    1b38:	sub	ip, ip, r1, asr #31
    1b3c:	ldr	r7, [pc, #1928]	; 22cc <__snprintf_chk@plt+0xd4c>
    1b40:	str	ip, [sp, #24]
    1b44:	mov	sl, r9
    1b48:	ldr	ip, [pc, #1920]	; 22d0 <__snprintf_chk@plt+0xd50>
    1b4c:	add	r7, pc, r7
    1b50:	ldr	fp, [pc, #1916]	; 22d4 <__snprintf_chk@plt+0xd54>
    1b54:	add	ip, pc, ip
    1b58:	str	ip, [sp, #56]	; 0x38
    1b5c:	add	fp, pc, fp
    1b60:	ldr	ip, [pc, #1904]	; 22d8 <__snprintf_chk@plt+0xd58>
    1b64:	add	ip, pc, ip
    1b68:	str	ip, [sp, #20]
    1b6c:	mov	r4, r6
    1b70:	add	r6, r6, #1
    1b74:	ldrb	r3, [r4]
    1b78:	cmp	r3, #10
    1b7c:	beq	1b6c <__snprintf_chk@plt+0x5ec>
    1b80:	cmp	r3, #13
    1b84:	beq	1b6c <__snprintf_chk@plt+0x5ec>
    1b88:	cmp	r3, #0
    1b8c:	beq	1c48 <__snprintf_chk@plt+0x6c8>
    1b90:	mov	r3, r4
    1b94:	b	1c64 <__snprintf_chk@plt+0x6e4>
    1b98:	add	r0, sp, #144	; 0x90
    1b9c:	str	ip, [sp, #16]
    1ba0:	str	r0, [sp, #96]	; 0x60
    1ba4:	bl	13d0 <strlen@plt>
    1ba8:	str	r9, [sp, #104]	; 0x68
    1bac:	str	r0, [sp, #100]	; 0x64
    1bb0:	mov	r0, r9
    1bb4:	bl	13d0 <strlen@plt>
    1bb8:	ldr	lr, [sp, #52]	; 0x34
    1bbc:	ldr	r3, [pc, #1816]	; 22dc <__snprintf_chk@plt+0xd5c>
    1bc0:	str	r0, [sp, #108]	; 0x6c
    1bc4:	ldr	r3, [lr, r3]
    1bc8:	ldr	r3, [r3]
    1bcc:	mov	r0, r3
    1bd0:	str	r3, [sp, #112]	; 0x70
    1bd4:	bl	13d0 <strlen@plt>
    1bd8:	ldr	ip, [sp, #16]
    1bdc:	str	ip, [sp, #120]	; 0x78
    1be0:	str	r0, [sp, #116]	; 0x74
    1be4:	mov	r0, ip
    1be8:	bl	13d0 <strlen@plt>
    1bec:	str	r4, [sp, #128]	; 0x80
    1bf0:	str	r0, [sp, #124]	; 0x7c
    1bf4:	mov	r0, r4
    1bf8:	bl	13d0 <strlen@plt>
    1bfc:	ldr	r3, [pc, #1756]	; 22e0 <__snprintf_chk@plt+0xd60>
    1c00:	add	r3, pc, r3
    1c04:	ldrb	r3, [r3]
    1c08:	cmp	r3, #0
    1c0c:	str	r0, [sp, #132]	; 0x84
    1c10:	addne	r0, r0, #1
    1c14:	strne	r0, [sp, #132]	; 0x84
    1c18:	ldr	r0, [fp]
    1c1c:	mov	r1, r8
    1c20:	mov	r2, #16384	; 0x4000
    1c24:	bl	1280 <sendmsg@plt>
    1c28:	cmp	r0, #0
    1c2c:	blt	1e58 <__snprintf_chk@plt+0x8d8>
    1c30:	ldr	ip, [sp, #20]
    1c34:	ldrb	r3, [ip]
    1c38:	cmp	r3, #0
    1c3c:	bne	1e70 <__snprintf_chk@plt+0x8f0>
    1c40:	cmp	r6, #0
    1c44:	bne	1b6c <__snprintf_chk@plt+0x5ec>
    1c48:	ldr	ip, [sp, #24]
    1c4c:	rsb	r0, ip, #0
    1c50:	b	2290 <__snprintf_chk@plt+0xd10>
    1c54:	cmp	r6, #10
    1c58:	beq	1c78 <__snprintf_chk@plt+0x6f8>
    1c5c:	cmp	r6, #13
    1c60:	beq	1c78 <__snprintf_chk@plt+0x6f8>
    1c64:	mov	r2, r3
    1c68:	ldrb	r6, [r3], #1
    1c6c:	cmp	r6, #0
    1c70:	bne	1c54 <__snprintf_chk@plt+0x6d4>
    1c74:	b	1c84 <__snprintf_chk@plt+0x704>
    1c78:	add	r6, r2, #1
    1c7c:	mov	r3, #0
    1c80:	strb	r3, [r2]
    1c84:	ldr	r3, [r7]
    1c88:	cmp	r3, #7
    1c8c:	beq	1ca0 <__snprintf_chk@plt+0x720>
    1c90:	sub	r3, r3, #3
    1c94:	cmp	r3, #1
    1c98:	movhi	r5, #0
    1c9c:	bhi	1cf8 <__snprintf_chk@plt+0x778>
    1ca0:	ldr	ip, [sp, #40]	; 0x28
    1ca4:	mov	r0, sl
    1ca8:	ldr	r1, [sp, #24]
    1cac:	ldr	r2, [sp, #32]
    1cb0:	str	ip, [sp]
    1cb4:	ldr	ip, [sp, #44]	; 0x2c
    1cb8:	str	r4, [sp, #12]
    1cbc:	ldr	r3, [sp, #36]	; 0x24
    1cc0:	str	ip, [sp, #4]
    1cc4:	ldr	ip, [sp, #48]	; 0x30
    1cc8:	str	ip, [sp, #8]
    1ccc:	bl	18e8 <__snprintf_chk@plt+0x368>
    1cd0:	subs	r5, r0, #0
    1cd4:	bge	1cf8 <__snprintf_chk@plt+0x778>
    1cd8:	cmn	r5, #11
    1cdc:	beq	1cf4 <__snprintf_chk@plt+0x774>
    1ce0:	ldr	ip, [sp, #56]	; 0x38
    1ce4:	ldr	r0, [ip]
    1ce8:	bl	3aec <__snprintf_chk@plt+0x256c>
    1cec:	ldr	ip, [sp, #56]	; 0x38
    1cf0:	str	r0, [ip]
    1cf4:	bl	91f4 <__snprintf_chk@plt+0x7c74>
    1cf8:	ldr	r3, [pc, #1508]	; 22e4 <__snprintf_chk@plt+0xd64>
    1cfc:	add	r3, pc, r3
    1d00:	ldr	r3, [r3]
    1d04:	sub	r3, r3, #5
    1d08:	cmp	r3, #1
    1d0c:	bhi	1f08 <__snprintf_chk@plt+0x988>
    1d10:	add	r5, sp, #96	; 0x60
    1d14:	add	r8, sp, #68	; 0x44
    1d18:	mov	r1, #0
    1d1c:	mov	r2, #40	; 0x28
    1d20:	mov	r0, r5
    1d24:	bl	1424 <memset@plt>
    1d28:	mov	r2, #28
    1d2c:	mov	r0, r8
    1d30:	mov	r1, #0
    1d34:	bl	1424 <memset@plt>
    1d38:	ldr	r3, [pc, #1448]	; 22e8 <__snprintf_chk@plt+0xd68>
    1d3c:	mov	r2, #5
    1d40:	str	r5, [sp, #76]	; 0x4c
    1d44:	add	r3, pc, r3
    1d48:	str	r2, [sp, #80]	; 0x50
    1d4c:	ldr	r3, [r3]
    1d50:	cmp	r3, #0
    1d54:	blt	1f10 <__snprintf_chk@plt+0x990>
    1d58:	add	ip, sp, #144	; 0x90
    1d5c:	ldr	r2, [pc, #1416]	; 22ec <__snprintf_chk@plt+0xd6c>
    1d60:	mov	r1, #15
    1d64:	str	sl, [sp, #4]
    1d68:	add	r2, pc, r2
    1d6c:	mov	r0, ip
    1d70:	str	r2, [sp]
    1d74:	mov	r3, r1
    1d78:	mov	r2, #1
    1d7c:	str	ip, [sp, #28]
    1d80:	bl	1580 <__snprintf_chk@plt>
    1d84:	cmp	r0, #14
    1d88:	bls	1dac <__snprintf_chk@plt+0x82c>
    1d8c:	ldr	r0, [pc, #1372]	; 22f0 <__snprintf_chk@plt+0xd70>
    1d90:	mov	r2, #392	; 0x188
    1d94:	ldr	r1, [pc, #1368]	; 22f4 <__snprintf_chk@plt+0xd74>
    1d98:	ldr	r3, [pc, #1368]	; 22f8 <__snprintf_chk@plt+0xd78>
    1d9c:	add	r0, pc, r0
    1da0:	add	r1, pc, r1
    1da4:	add	r3, pc, r3
    1da8:	bl	9700 <__snprintf_chk@plt+0x8180>
    1dac:	mov	r0, #0
    1db0:	bl	6c60 <__snprintf_chk@plt+0x56e0>
    1db4:	mov	r3, #0
    1db8:	movw	r2, #16960	; 0x4240
    1dbc:	movt	r2, #15
    1dc0:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    1dc4:	add	r3, sp, #248	; 0xf8
    1dc8:	str	r0, [r3, #-184]!	; 0xffffff48
    1dcc:	mov	r0, r3
    1dd0:	bl	137c <localtime@plt>
    1dd4:	subs	r3, r0, #0
    1dd8:	beq	1eec <__snprintf_chk@plt+0x96c>
    1ddc:	add	r9, sp, #180	; 0xb4
    1de0:	ldr	r2, [pc, #1300]	; 22fc <__snprintf_chk@plt+0xd7c>
    1de4:	mov	r1, #64	; 0x40
    1de8:	add	r2, pc, r2
    1dec:	mov	r0, r9
    1df0:	bl	1370 <strftime@plt>
    1df4:	cmp	r0, #0
    1df8:	beq	1eec <__snprintf_chk@plt+0x96c>
    1dfc:	bl	13ac <getpid@plt>
    1e00:	add	ip, sp, #160	; 0xa0
    1e04:	ldr	lr, [pc, #1268]	; 2300 <__snprintf_chk@plt+0xd80>
    1e08:	mov	r1, #17
    1e0c:	mov	r3, r1
    1e10:	mov	r2, #1
    1e14:	add	lr, pc, lr
    1e18:	str	lr, [sp]
    1e1c:	str	ip, [sp, #16]
    1e20:	str	r0, [sp, #4]
    1e24:	mov	r0, ip
    1e28:	bl	1580 <__snprintf_chk@plt>
    1e2c:	ldr	ip, [sp, #16]
    1e30:	cmp	r0, #16
    1e34:	bls	1b98 <__snprintf_chk@plt+0x618>
    1e38:	ldr	r0, [pc, #1220]	; 2304 <__snprintf_chk@plt+0xd84>
    1e3c:	movw	r2, #402	; 0x192
    1e40:	ldr	r1, [pc, #1216]	; 2308 <__snprintf_chk@plt+0xd88>
    1e44:	ldr	r3, [pc, #1216]	; 230c <__snprintf_chk@plt+0xd8c>
    1e48:	add	r0, pc, r0
    1e4c:	add	r1, pc, r1
    1e50:	add	r3, pc, r3
    1e54:	bl	9700 <__snprintf_chk@plt+0x8180>
    1e58:	bl	1400 <__errno_location@plt>
    1e5c:	ldr	r5, [r0]
    1e60:	rsb	r5, r5, #0
    1e64:	cmp	r5, #0
    1e68:	bge	1f08 <__snprintf_chk@plt+0x988>
    1e6c:	b	1ee4 <__snprintf_chk@plt+0x964>
    1e70:	ldr	r1, [sp, #108]	; 0x6c
    1e74:	ldr	r3, [sp, #100]	; 0x64
    1e78:	ldr	r2, [sp, #116]	; 0x74
    1e7c:	add	r3, r1, r3
    1e80:	ldr	r1, [sp, #124]	; 0x7c
    1e84:	add	r3, r3, r2
    1e88:	ldr	r2, [sp, #132]	; 0x84
    1e8c:	add	r3, r3, r1
    1e90:	add	r3, r3, r2
    1e94:	cmp	r0, r3
    1e98:	bcs	1c40 <__snprintf_chk@plt+0x6c0>
    1e9c:	mov	r3, #0
    1ea0:	cmp	r0, #0
    1ea4:	beq	1c18 <__snprintf_chk@plt+0x698>
    1ea8:	add	r1, r5, r3
    1eac:	ldr	ip, [r1, #4]
    1eb0:	cmp	ip, r0
    1eb4:	movcc	r2, ip
    1eb8:	movcs	r2, r0
    1ebc:	rsb	ip, r2, ip
    1ec0:	str	ip, [r1, #4]
    1ec4:	ldr	r1, [r5, r3]
    1ec8:	rsb	r0, r2, r0
    1ecc:	add	r2, r1, r2
    1ed0:	str	r2, [r5, r3]
    1ed4:	add	r3, r3, #8
    1ed8:	cmp	r3, #40	; 0x28
    1edc:	bne	1ea0 <__snprintf_chk@plt+0x920>
    1ee0:	b	1c18 <__snprintf_chk@plt+0x698>
    1ee4:	cmn	r5, #11
    1ee8:	beq	1f00 <__snprintf_chk@plt+0x980>
    1eec:	ldr	r5, [pc, #1052]	; 2310 <__snprintf_chk@plt+0xd90>
    1ef0:	add	r5, pc, r5
    1ef4:	ldr	r0, [r5]
    1ef8:	bl	3aec <__snprintf_chk@plt+0x256c>
    1efc:	str	r0, [r5]
    1f00:	bl	91f4 <__snprintf_chk@plt+0x7c74>
    1f04:	b	1f10 <__snprintf_chk@plt+0x990>
    1f08:	cmp	r5, #0
    1f0c:	bgt	1c40 <__snprintf_chk@plt+0x6c0>
    1f10:	ldr	r3, [pc, #1020]	; 2314 <__snprintf_chk@plt+0xd94>
    1f14:	add	r5, sp, #96	; 0x60
    1f18:	add	r3, pc, r3
    1f1c:	ldr	r3, [r3]
    1f20:	sub	r2, r3, #6
    1f24:	cmp	r3, #4
    1f28:	cmpne	r2, #2
    1f2c:	bls	1f38 <__snprintf_chk@plt+0x9b8>
    1f30:	cmp	r3, #2
    1f34:	bne	20c0 <__snprintf_chk@plt+0xb40>
    1f38:	ldr	r8, [pc, #984]	; 2318 <__snprintf_chk@plt+0xd98>
    1f3c:	mov	r0, r5
    1f40:	mov	r1, #0
    1f44:	mov	r2, #40	; 0x28
    1f48:	add	r8, pc, r8
    1f4c:	bl	1424 <memset@plt>
    1f50:	ldr	r3, [r8]
    1f54:	cmp	r3, #0
    1f58:	blt	20ac <__snprintf_chk@plt+0xb2c>
    1f5c:	ldr	r2, [pc, #952]	; 231c <__snprintf_chk@plt+0xd9c>
    1f60:	add	r9, sp, #160	; 0xa0
    1f64:	mov	r1, #15
    1f68:	str	sl, [sp, #4]
    1f6c:	add	r2, pc, r2
    1f70:	mov	r0, r9
    1f74:	str	r2, [sp]
    1f78:	mov	r3, r1
    1f7c:	mov	r2, #1
    1f80:	bl	1580 <__snprintf_chk@plt>
    1f84:	cmp	r0, #14
    1f88:	bls	1fac <__snprintf_chk@plt+0xa2c>
    1f8c:	ldr	r0, [pc, #908]	; 2320 <__snprintf_chk@plt+0xda0>
    1f90:	mov	r2, #448	; 0x1c0
    1f94:	ldr	r1, [pc, #904]	; 2324 <__snprintf_chk@plt+0xda4>
    1f98:	ldr	r3, [pc, #904]	; 2328 <__snprintf_chk@plt+0xda8>
    1f9c:	add	r0, pc, r0
    1fa0:	add	r1, pc, r1
    1fa4:	add	r3, pc, r3
    1fa8:	bl	9700 <__snprintf_chk@plt+0x8180>
    1fac:	bl	13ac <getpid@plt>
    1fb0:	add	lr, sp, #180	; 0xb4
    1fb4:	ldr	ip, [pc, #880]	; 232c <__snprintf_chk@plt+0xdac>
    1fb8:	mov	r1, #17
    1fbc:	mov	r3, r1
    1fc0:	mov	r2, #1
    1fc4:	add	ip, pc, ip
    1fc8:	str	ip, [sp]
    1fcc:	str	lr, [sp, #28]
    1fd0:	str	r0, [sp, #4]
    1fd4:	mov	r0, lr
    1fd8:	bl	1580 <__snprintf_chk@plt>
    1fdc:	cmp	r0, #16
    1fe0:	bls	2004 <__snprintf_chk@plt+0xa84>
    1fe4:	ldr	r0, [pc, #836]	; 2330 <__snprintf_chk@plt+0xdb0>
    1fe8:	movw	r2, #449	; 0x1c1
    1fec:	ldr	r1, [pc, #832]	; 2334 <__snprintf_chk@plt+0xdb4>
    1ff0:	ldr	r3, [pc, #832]	; 2338 <__snprintf_chk@plt+0xdb8>
    1ff4:	add	r0, pc, r0
    1ff8:	add	r1, pc, r1
    1ffc:	add	r3, pc, r3
    2000:	bl	9700 <__snprintf_chk@plt+0x8180>
    2004:	mov	r0, r9
    2008:	str	r9, [sp, #96]	; 0x60
    200c:	bl	13d0 <strlen@plt>
    2010:	ldr	ip, [sp, #52]	; 0x34
    2014:	ldr	r3, [pc, #704]	; 22dc <__snprintf_chk@plt+0xd5c>
    2018:	mov	r9, #1
    201c:	str	r0, [sp, #100]	; 0x64
    2020:	ldr	r3, [ip, r3]
    2024:	ldr	r3, [r3]
    2028:	mov	r0, r3
    202c:	str	r3, [sp, #104]	; 0x68
    2030:	bl	13d0 <strlen@plt>
    2034:	add	lr, sp, #180	; 0xb4
    2038:	str	lr, [sp, #112]	; 0x70
    203c:	str	r0, [sp, #108]	; 0x6c
    2040:	mov	r0, lr
    2044:	bl	13d0 <strlen@plt>
    2048:	str	r4, [sp, #120]	; 0x78
    204c:	str	r0, [sp, #116]	; 0x74
    2050:	mov	r0, r4
    2054:	bl	13d0 <strlen@plt>
    2058:	ldr	r3, [pc, #732]	; 233c <__snprintf_chk@plt+0xdbc>
    205c:	mov	r1, r5
    2060:	mov	r2, #5
    2064:	add	r3, pc, r3
    2068:	str	r9, [sp, #132]	; 0x84
    206c:	str	r3, [sp, #128]	; 0x80
    2070:	str	r0, [sp, #124]	; 0x7c
    2074:	ldr	r0, [r8]
    2078:	bl	1460 <writev@plt>
    207c:	cmp	r0, #0
    2080:	bge	20b8 <__snprintf_chk@plt+0xb38>
    2084:	bl	1400 <__errno_location@plt>
    2088:	ldr	r3, [r0]
    208c:	rsb	r3, r3, #0
    2090:	cmp	r3, #0
    2094:	bge	20bc <__snprintf_chk@plt+0xb3c>
    2098:	ldr	r0, [r8]
    209c:	bl	3aec <__snprintf_chk@plt+0x256c>
    20a0:	str	r0, [r8]
    20a4:	bl	9304 <__snprintf_chk@plt+0x7d84>
    20a8:	b	20c0 <__snprintf_chk@plt+0xb40>
    20ac:	mov	r3, #0
    20b0:	cmp	r3, r3
    20b4:	b	20bc <__snprintf_chk@plt+0xb3c>
    20b8:	cmp	r9, #0
    20bc:	bne	1c40 <__snprintf_chk@plt+0x6c0>
    20c0:	mov	r0, r5
    20c4:	mov	r1, #0
    20c8:	mov	r2, #48	; 0x30
    20cc:	bl	1424 <memset@plt>
    20d0:	ldr	r3, [pc, #616]	; 2340 <__snprintf_chk@plt+0xdc0>
    20d4:	add	r3, pc, r3
    20d8:	ldr	r3, [r3]
    20dc:	cmp	r3, #0
    20e0:	blt	1c40 <__snprintf_chk@plt+0x6c0>
    20e4:	ldr	r3, [pc, #600]	; 2344 <__snprintf_chk@plt+0xdc4>
    20e8:	ldr	r8, [pc, r3]
    20ec:	cmp	r8, #1
    20f0:	movne	r8, #0
    20f4:	bne	2128 <__snprintf_chk@plt+0xba8>
    20f8:	add	r9, sp, #160	; 0xa0
    20fc:	ldr	r3, [pc, #580]	; 2348 <__snprintf_chk@plt+0xdc8>
    2100:	mov	r1, r8
    2104:	mov	r2, #15
    2108:	add	r3, pc, r3
    210c:	str	sl, [sp]
    2110:	mov	r0, r9
    2114:	bl	140c <__sprintf_chk@plt>
    2118:	mov	r0, r9
    211c:	str	r9, [sp, #96]	; 0x60
    2120:	bl	13d0 <strlen@plt>
    2124:	str	r0, [sp, #100]	; 0x64
    2128:	and	r3, sl, #7
    212c:	cmp	r3, #3
    2130:	movgt	r9, #0
    2134:	ldrle	r3, [pc, #528]	; 234c <__snprintf_chk@plt+0xdcc>
    2138:	addle	r3, pc, r3
    213c:	ldrble	r9, [r3]
    2140:	ldr	r3, [pc, #520]	; 2350 <__snprintf_chk@plt+0xdd0>
    2144:	and	r9, r9, #1
    2148:	add	r3, pc, r3
    214c:	ldrb	r3, [r3]
    2150:	cmp	r3, #0
    2154:	beq	21b4 <__snprintf_chk@plt+0xc34>
    2158:	ldr	ip, [sp, #32]
    215c:	mov	r1, #64	; 0x40
    2160:	ldr	r3, [pc, #492]	; 2354 <__snprintf_chk@plt+0xdd4>
    2164:	mov	r2, #1
    2168:	add	lr, r8, r2
    216c:	str	lr, [sp, #28]
    2170:	str	ip, [sp, #4]
    2174:	add	r3, pc, r3
    2178:	ldr	ip, [sp, #36]	; 0x24
    217c:	str	r3, [sp]
    2180:	mov	r3, r1
    2184:	str	ip, [sp, #8]
    2188:	add	ip, sp, #180	; 0xb4
    218c:	str	ip, [sp, #16]
    2190:	mov	r0, ip
    2194:	bl	1580 <__snprintf_chk@plt>
    2198:	ldr	ip, [sp, #16]
    219c:	str	ip, [r5, r8, lsl #3]
    21a0:	mov	r0, ip
    21a4:	bl	13d0 <strlen@plt>
    21a8:	add	r3, r5, r8, lsl #3
    21ac:	ldr	r8, [sp, #28]
    21b0:	str	r0, [r3, #4]
    21b4:	cmp	r9, #0
    21b8:	beq	21d8 <__snprintf_chk@plt+0xc58>
    21bc:	ldr	r1, [pc, #404]	; 2358 <__snprintf_chk@plt+0xdd8>
    21c0:	add	r3, r5, r8, lsl #3
    21c4:	mov	r2, #7
    21c8:	add	r1, pc, r1
    21cc:	str	r1, [r5, r8, lsl #3]
    21d0:	add	r8, r8, #1
    21d4:	str	r2, [r3, #4]
    21d8:	mov	r0, r4
    21dc:	str	r4, [r5, r8, lsl #3]
    21e0:	bl	13d0 <strlen@plt>
    21e4:	add	r2, r5, r8, lsl #3
    21e8:	cmp	r9, #0
    21ec:	add	r3, r8, #1
    21f0:	str	r0, [r2, #4]
    21f4:	beq	2214 <__snprintf_chk@plt+0xc94>
    21f8:	ldr	r0, [pc, #348]	; 235c <__snprintf_chk@plt+0xddc>
    21fc:	add	r2, r5, r3, lsl #3
    2200:	mov	r1, #4
    2204:	add	r0, pc, r0
    2208:	str	r0, [r5, r3, lsl #3]
    220c:	add	r3, r8, #2
    2210:	str	r1, [r2, #4]
    2214:	ldr	r8, [pc, #324]	; 2360 <__snprintf_chk@plt+0xde0>
    2218:	add	ip, r5, r3, lsl #3
    221c:	add	r4, r3, #1
    2220:	ldr	r0, [pc, #316]	; 2364 <__snprintf_chk@plt+0xde4>
    2224:	add	r8, pc, r8
    2228:	mov	r1, r5
    222c:	add	r0, pc, r0
    2230:	mov	r2, r4
    2234:	str	r0, [r5, r3, lsl #3]
    2238:	mov	r3, #1
    223c:	ldr	r0, [r8]
    2240:	str	r3, [ip, #4]
    2244:	bl	1460 <writev@plt>
    2248:	cmp	r0, #0
    224c:	bge	1c40 <__snprintf_chk@plt+0x6c0>
    2250:	bl	1400 <__errno_location@plt>
    2254:	ldr	r3, [r0]
    2258:	cmp	r3, #5
    225c:	bne	1c40 <__snprintf_chk@plt+0x6c0>
    2260:	bl	13ac <getpid@plt>
    2264:	cmp	r0, #1
    2268:	bne	1c40 <__snprintf_chk@plt+0x6c0>
    226c:	bl	9370 <__snprintf_chk@plt+0x7df0>
    2270:	bl	9304 <__snprintf_chk@plt+0x7d84>
    2274:	ldr	r0, [r8]
    2278:	cmp	r0, #0
    227c:	blt	1c40 <__snprintf_chk@plt+0x6c0>
    2280:	mov	r1, r5
    2284:	mov	r2, r4
    2288:	bl	1460 <writev@plt>
    228c:	b	1c40 <__snprintf_chk@plt+0x6c0>
    2290:	ldr	ip, [sp, #60]	; 0x3c
    2294:	ldr	r2, [sp, #244]	; 0xf4
    2298:	ldr	r3, [ip]
    229c:	cmp	r2, r3
    22a0:	beq	22a8 <__snprintf_chk@plt+0xd28>
    22a4:	bl	12b0 <__stack_chk_fail@plt>
    22a8:	add	sp, sp, #252	; 0xfc
    22ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22b0:	andeq	pc, r1, r8, ror #7
    22b4:	andeq	r0, r0, r4, asr r1
    22b8:	andeq	sp, r0, r8, asr r4
    22bc:	andeq	sp, r0, ip, lsl #8
    22c0:	andeq	sp, r0, r0, lsl #17
    22c4:	andeq	pc, r1, r4, ror #10
    22c8:	andeq	pc, r1, r4, lsl #10
    22cc:	andeq	pc, r1, ip, lsl r5	; <UNPREDICTABLE>
    22d0:	andeq	pc, r1, ip, ror #9
    22d4:	andeq	pc, r1, r0, ror #9
    22d8:	andeq	pc, r1, lr, lsl #10
    22dc:	andeq	r0, r0, r0, ror r1
    22e0:	andeq	pc, r1, r2, ror r4	; <UNPREDICTABLE>
    22e4:	andeq	pc, r1, ip, ror #6
    22e8:	strdeq	pc, [r1], -r8
    22ec:	andeq	sp, r0, r8, ror #3
    22f0:			; <UNDEFINED> instruction: 0x0000d1bc
    22f4:	andeq	sp, r0, r0, ror #2
    22f8:	andeq	sp, r0, r4, asr r0
    22fc:	andeq	sp, r0, r0, ror #3
    2300:	andeq	sp, r0, r0, asr #3
    2304:	muleq	r0, r4, r1
    2308:	strheq	sp, [r0], -r4
    230c:	andeq	ip, r0, r8, lsr #31
    2310:	andeq	pc, r1, ip, asr #2
    2314:	andeq	pc, r1, r0, asr r1	; <UNPREDICTABLE>
    2318:	andeq	pc, r1, ip, ror #1
    231c:	andeq	ip, r0, r4, ror #31
    2320:			; <UNDEFINED> instruction: 0x0000cfbc
    2324:	andeq	ip, r0, r0, ror #30
    2328:	andeq	ip, r0, r4, ror #28
    232c:	andeq	sp, r0, r0, lsl r0
    2330:	andeq	ip, r0, r8, ror #31
    2334:	andeq	ip, r0, r8, lsl #30
    2338:	andeq	ip, r0, ip, lsl #28
    233c:	andeq	ip, r0, r4, lsr r6
    2340:	andeq	lr, r1, ip, asr pc
    2344:	andeq	lr, r1, r0, lsl #31
    2348:	andeq	ip, r0, r8, asr #28
    234c:	andeq	lr, r1, ip, lsr pc
    2350:	andeq	lr, r1, r8, lsr #30
    2354:	ldrdeq	ip, [r0], -r4
    2358:	andeq	ip, r0, ip, lsl #29
    235c:			; <UNDEFINED> instruction: 0x0000a9b0
    2360:	andeq	lr, r1, ip, lsl #28
    2364:	andeq	ip, r0, ip, ror #8
    2368:	push	{r4, r5, r6, r7, r8, lr}
    236c:	sub	sp, sp, #24
    2370:	ldr	r4, [pc, #120]	; 23f0 <__snprintf_chk@plt+0xe70>
    2374:	mov	r6, r3
    2378:	ldr	r5, [sp, #48]	; 0x30
    237c:	mov	r8, r0
    2380:	ldr	ip, [sp, #52]	; 0x34
    2384:	add	r4, pc, r4
    2388:	str	r1, [sp, #4]
    238c:	mov	r1, #2048	; 0x800
    2390:	mov	r7, r2
    2394:	str	r2, [sp, #8]
    2398:	mov	r3, r1
    239c:	str	ip, [sp]
    23a0:	str	r6, [sp, #12]
    23a4:	mov	r0, r4
    23a8:	str	r5, [sp, #16]
    23ac:	mov	r2, #1
    23b0:	bl	1580 <__snprintf_chk@plt>
    23b4:	ldr	lr, [pc, #56]	; 23f4 <__snprintf_chk@plt+0xe74>
    23b8:	mov	ip, #0
    23bc:	str	r5, [sp]
    23c0:	add	lr, pc, lr
    23c4:	str	r4, [sp, #12]
    23c8:	str	ip, [sp, #4]
    23cc:	mov	r0, r8
    23d0:	str	ip, [sp, #8]
    23d4:	mov	r2, r7
    23d8:	mov	r3, r6
    23dc:	mov	r1, ip
    23e0:	str	r4, [lr]
    23e4:	bl	1a84 <__snprintf_chk@plt+0x504>
    23e8:	add	sp, sp, #24
    23ec:	pop	{r4, r5, r6, r7, r8, pc}
    23f0:	strdeq	lr, [r1], -r4
    23f4:	andeq	lr, r1, ip, lsr #25
    23f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    23fc:	sub	sp, sp, #16
    2400:	mov	r5, r0
    2404:	mov	r4, r1
    2408:	ldr	r6, [pc, #548]	; 2634 <__snprintf_chk@plt+0x10b4>
    240c:	bl	9e0c <__snprintf_chk@plt+0x888c>
    2410:	bl	93c0 <__snprintf_chk@plt+0x7e40>
    2414:	cmp	r5, #0
    2418:	add	r6, pc, r6
    241c:	blt	25f4 <__snprintf_chk@plt+0x1074>
    2420:	cmp	r4, #0
    2424:	beq	2614 <__snprintf_chk@plt+0x1094>
    2428:	ldr	r2, [pc, #520]	; 2638 <__snprintf_chk@plt+0x10b8>
    242c:	mov	r7, #0
    2430:	ldr	r3, [pc, #516]	; 263c <__snprintf_chk@plt+0x10bc>
    2434:	mov	r0, r5
    2438:	str	r7, [sp]
    243c:	mov	r1, r4
    2440:	add	r2, pc, r2
    2444:	add	r3, pc, r3
    2448:	bl	1394 <getopt_long@plt>
    244c:	cmp	r0, #0
    2450:	blt	248c <__snprintf_chk@plt+0xf0c>
    2454:	cmp	r0, #104	; 0x68
    2458:	beq	2570 <__snprintf_chk@plt+0xff0>
    245c:	cmp	r0, #256	; 0x100
    2460:	beq	2540 <__snprintf_chk@plt+0xfc0>
    2464:	cmp	r0, #63	; 0x3f
    2468:	beq	24e4 <__snprintf_chk@plt+0xf64>
    246c:	ldr	r0, [pc, #460]	; 2640 <__snprintf_chk@plt+0x10c0>
    2470:	mov	r2, #78	; 0x4e
    2474:	ldr	r1, [pc, #456]	; 2644 <__snprintf_chk@plt+0x10c4>
    2478:	ldr	r3, [pc, #456]	; 2648 <__snprintf_chk@plt+0x10c8>
    247c:	add	r0, pc, r0
    2480:	add	r1, pc, r1
    2484:	add	r3, pc, r3
    2488:	bl	9998 <__snprintf_chk@plt+0x8418>
    248c:	ldr	r3, [pc, #440]	; 264c <__snprintf_chk@plt+0x10cc>
    2490:	ldr	r3, [r6, r3]
    2494:	ldr	r9, [r3]
    2498:	rsb	r5, r9, r5
    249c:	cmp	r5, #0
    24a0:	ble	2560 <__snprintf_chk@plt+0xfe0>
    24a4:	ldr	r8, [r4, r9, lsl #2]
    24a8:	ldr	r1, [pc, #416]	; 2650 <__snprintf_chk@plt+0x10d0>
    24ac:	mov	r0, r8
    24b0:	add	r1, pc, r1
    24b4:	bl	1208 <strcmp@plt>
    24b8:	subs	sl, r0, #0
    24bc:	beq	2594 <__snprintf_chk@plt+0x1014>
    24c0:	ldr	r1, [pc, #396]	; 2654 <__snprintf_chk@plt+0x10d4>
    24c4:	mov	r0, r8
    24c8:	add	r1, pc, r1
    24cc:	bl	1208 <strcmp@plt>
    24d0:	subs	r6, r0, #0
    24d4:	beq	24f4 <__snprintf_chk@plt+0xf74>
    24d8:	bl	a078 <__snprintf_chk@plt+0x8af8>
    24dc:	cmp	r0, #2
    24e0:	bgt	25b8 <__snprintf_chk@plt+0x1038>
    24e4:	mvn	r0, #21
    24e8:	lsr	r0, r0, #31
    24ec:	add	sp, sp, #16
    24f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    24f4:	cmp	r5, #1
    24f8:	ble	2560 <__snprintf_chk@plt+0xfe0>
    24fc:	bl	a078 <__snprintf_chk@plt+0x8af8>
    2500:	cmp	r0, #2
    2504:	ble	24e4 <__snprintf_chk@plt+0xf64>
    2508:	ldr	lr, [pc, #328]	; 2658 <__snprintf_chk@plt+0x10d8>
    250c:	mov	r1, r6
    2510:	ldr	ip, [pc, #324]	; 265c <__snprintf_chk@plt+0x10dc>
    2514:	mov	r0, #3
    2518:	ldr	r2, [pc, #320]	; 2660 <__snprintf_chk@plt+0x10e0>
    251c:	add	lr, pc, lr
    2520:	add	ip, pc, ip
    2524:	mov	r3, #255	; 0xff
    2528:	add	r2, pc, r2
    252c:	str	lr, [sp]
    2530:	str	ip, [sp, #4]
    2534:	bl	9934 <__snprintf_chk@plt+0x83b4>
    2538:	mvn	r0, #21
    253c:	b	24e8 <__snprintf_chk@plt+0xf68>
    2540:	ldr	r0, [pc, #284]	; 2664 <__snprintf_chk@plt+0x10e4>
    2544:	add	r0, pc, r0
    2548:	bl	134c <puts@plt>
    254c:	ldr	r0, [pc, #276]	; 2668 <__snprintf_chk@plt+0x10e8>
    2550:	add	r0, pc, r0
    2554:	bl	134c <puts@plt>
    2558:	mov	r0, r7
    255c:	b	24e8 <__snprintf_chk@plt+0xf68>
    2560:	add	r0, r4, r9, lsl #2
    2564:	mov	r1, r5
    2568:	bl	28bc <__snprintf_chk@plt+0x133c>
    256c:	b	24e8 <__snprintf_chk@plt+0xf68>
    2570:	ldr	r3, [pc, #244]	; 266c <__snprintf_chk@plt+0x10ec>
    2574:	mov	r0, #1
    2578:	ldr	r1, [pc, #240]	; 2670 <__snprintf_chk@plt+0x10f0>
    257c:	ldr	r3, [r6, r3]
    2580:	add	r1, pc, r1
    2584:	ldr	r2, [r3]
    2588:	bl	143c <__printf_chk@plt>
    258c:	mov	r0, r7
    2590:	b	24e8 <__snprintf_chk@plt+0xf68>
    2594:	ldr	r3, [pc, #208]	; 266c <__snprintf_chk@plt+0x10ec>
    2598:	mov	r0, #1
    259c:	ldr	r1, [pc, #208]	; 2674 <__snprintf_chk@plt+0x10f4>
    25a0:	ldr	r3, [r6, r3]
    25a4:	add	r1, pc, r1
    25a8:	ldr	r2, [r3]
    25ac:	bl	143c <__printf_chk@plt>
    25b0:	mov	r0, sl
    25b4:	b	24e8 <__snprintf_chk@plt+0xf68>
    25b8:	ldr	r2, [pc, #184]	; 2678 <__snprintf_chk@plt+0x10f8>
    25bc:	mov	r1, r7
    25c0:	ldr	ip, [pc, #180]	; 267c <__snprintf_chk@plt+0x10fc>
    25c4:	mov	r0, #3
    25c8:	add	r2, pc, r2
    25cc:	str	r2, [sp, #4]
    25d0:	ldr	r2, [pc, #168]	; 2680 <__snprintf_chk@plt+0x1100>
    25d4:	add	ip, pc, ip
    25d8:	str	r8, [sp, #8]
    25dc:	mov	r3, #232	; 0xe8
    25e0:	str	ip, [sp]
    25e4:	add	r2, pc, r2
    25e8:	bl	9934 <__snprintf_chk@plt+0x83b4>
    25ec:	mvn	r0, #21
    25f0:	b	24e8 <__snprintf_chk@plt+0xf68>
    25f4:	ldr	r0, [pc, #136]	; 2684 <__snprintf_chk@plt+0x1104>
    25f8:	mov	r2, #58	; 0x3a
    25fc:	ldr	r1, [pc, #132]	; 2688 <__snprintf_chk@plt+0x1108>
    2600:	ldr	r3, [pc, #132]	; 268c <__snprintf_chk@plt+0x110c>
    2604:	add	r0, pc, r0
    2608:	add	r1, pc, r1
    260c:	add	r3, pc, r3
    2610:	bl	9700 <__snprintf_chk@plt+0x8180>
    2614:	ldr	r0, [pc, #116]	; 2690 <__snprintf_chk@plt+0x1110>
    2618:	mov	r2, #59	; 0x3b
    261c:	ldr	r1, [pc, #112]	; 2694 <__snprintf_chk@plt+0x1114>
    2620:	ldr	r3, [pc, #112]	; 2698 <__snprintf_chk@plt+0x1118>
    2624:	add	r0, pc, r0
    2628:	add	r1, pc, r1
    262c:	add	r3, pc, r3
    2630:	bl	9700 <__snprintf_chk@plt+0x8180>
    2634:	andeq	lr, r1, r8, ror #20
    2638:	andeq	fp, r0, ip, lsr #27
    263c:	andeq	lr, r1, r8, lsr #16
    2640:	andeq	r9, r0, r8, asr #31
    2644:	andeq	r9, r0, r4, lsr #28
    2648:	andeq	r9, r0, r4, ror fp
    264c:	andeq	r0, r0, r8, asr r1
    2650:	andeq	r9, r0, r8, lsr #31
    2654:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    2658:	andeq	r9, r0, r0, lsl #31
    265c:	andeq	r9, r0, r0, ror #30
    2660:	andeq	r9, r0, ip, ror sp
    2664:	andeq	r9, r0, r4, ror #28
    2668:	andeq	r9, r0, r4, ror #28
    266c:	andeq	r0, r0, r0, ror r1
    2670:	andeq	r9, r0, r0, asr #26
    2674:	andeq	r9, r0, ip, lsl sp
    2678:	andeq	r9, r0, r0, lsr #29
    267c:	andeq	r9, r0, r8, asr #29
    2680:	andeq	r9, r0, r0, asr #25
    2684:	muleq	r0, r4, ip
    2688:	muleq	r0, ip, ip
    268c:	andeq	r9, r0, ip, ror #19
    2690:	muleq	r0, r4, ip
    2694:	andeq	r9, r0, ip, ror ip
    2698:	andeq	r9, r0, ip, asr #19
    269c:	mov	fp, #0
    26a0:	mov	lr, #0
    26a4:	pop	{r1}		; (ldr r1, [sp], #4)
    26a8:	mov	r2, sp
    26ac:	push	{r2}		; (str r2, [sp, #-4]!)
    26b0:	push	{r0}		; (str r0, [sp, #-4]!)
    26b4:	ldr	sl, [pc, #40]	; 26e4 <__snprintf_chk@plt+0x1164>
    26b8:	add	r3, pc, #36	; 0x24
    26bc:	add	sl, sl, r3
    26c0:	ldr	ip, [pc, #32]	; 26e8 <__snprintf_chk@plt+0x1168>
    26c4:	ldr	ip, [sl, ip]
    26c8:	push	{ip}		; (str ip, [sp, #-4]!)
    26cc:	ldr	r3, [pc, #24]	; 26ec <__snprintf_chk@plt+0x116c>
    26d0:	ldr	r3, [sl, r3]
    26d4:	ldr	r0, [pc, #20]	; 26f0 <__snprintf_chk@plt+0x1170>
    26d8:	ldr	r0, [sl, r0]
    26dc:	bl	1364 <__libc_start_main@plt>
    26e0:	bl	1550 <abort@plt>
    26e4:	andeq	lr, r1, r4, lsr #15
    26e8:	andeq	r0, r0, r8, asr #2
    26ec:	andeq	r0, r0, r0, ror #2
    26f0:	andeq	r0, r0, r4, ror #2
    26f4:	ldr	r3, [pc, #20]	; 2710 <__snprintf_chk@plt+0x1190>
    26f8:	ldr	r2, [pc, #20]	; 2714 <__snprintf_chk@plt+0x1194>
    26fc:	add	r3, pc, r3
    2700:	ldr	r2, [r3, r2]
    2704:	cmp	r2, #0
    2708:	bxeq	lr
    270c:	b	1388 <__gmon_start__@plt>
    2710:	andeq	lr, r1, r4, lsl #15
    2714:	andeq	r0, r0, ip, asr r1
    2718:	ldr	r2, [pc, #60]	; 275c <__snprintf_chk@plt+0x11dc>
    271c:	ldr	r0, [pc, #60]	; 2760 <__snprintf_chk@plt+0x11e0>
    2720:	add	r2, pc, r2
    2724:	add	r0, pc, r0
    2728:	add	r2, r2, #3
    272c:	rsb	r2, r0, r2
    2730:	push	{r3, lr}
    2734:	cmp	r2, #6
    2738:	ldr	r3, [pc, #36]	; 2764 <__snprintf_chk@plt+0x11e4>
    273c:	add	r3, pc, r3
    2740:	popls	{r3, pc}
    2744:	ldr	r2, [pc, #28]	; 2768 <__snprintf_chk@plt+0x11e8>
    2748:	ldr	r3, [r3, r2]
    274c:	cmp	r3, #0
    2750:	popeq	{r3, pc}
    2754:	blx	r3
    2758:	pop	{r3, pc}
    275c:	andeq	lr, r1, r4, lsr #18
    2760:	andeq	lr, r1, r0, lsr #18
    2764:	andeq	lr, r1, r4, asr #14
    2768:	andeq	r0, r0, r0, asr r1
    276c:	push	{r3, lr}
    2770:	ldr	r0, [pc, #64]	; 27b8 <__snprintf_chk@plt+0x1238>
    2774:	ldr	r3, [pc, #64]	; 27bc <__snprintf_chk@plt+0x123c>
    2778:	add	r0, pc, r0
    277c:	ldr	r2, [pc, #60]	; 27c0 <__snprintf_chk@plt+0x1240>
    2780:	add	r3, pc, r3
    2784:	rsb	r3, r0, r3
    2788:	add	r2, pc, r2
    278c:	asr	r3, r3, #2
    2790:	add	r3, r3, r3, lsr #31
    2794:	asrs	r3, r3, #1
    2798:	popeq	{r3, pc}
    279c:	ldr	r1, [pc, #32]	; 27c4 <__snprintf_chk@plt+0x1244>
    27a0:	ldr	r2, [r2, r1]
    27a4:	cmp	r2, #0
    27a8:	popeq	{r3, pc}
    27ac:	mov	r1, r3
    27b0:	blx	r2
    27b4:	pop	{r3, pc}
    27b8:	andeq	lr, r1, ip, asr #17
    27bc:	andeq	lr, r1, r4, asr #17
    27c0:	strdeq	lr, [r1], -r8
    27c4:	andeq	r0, r0, r4, ror r1
    27c8:	ldr	r2, [pc, #76]	; 281c <__snprintf_chk@plt+0x129c>
    27cc:	push	{r3, lr}
    27d0:	add	r2, pc, r2
    27d4:	ldr	r3, [pc, #68]	; 2820 <__snprintf_chk@plt+0x12a0>
    27d8:	ldrb	r2, [r2]
    27dc:	add	r3, pc, r3
    27e0:	cmp	r2, #0
    27e4:	popne	{r3, pc}
    27e8:	ldr	r2, [pc, #52]	; 2824 <__snprintf_chk@plt+0x12a4>
    27ec:	ldr	r3, [r3, r2]
    27f0:	cmp	r3, #0
    27f4:	beq	2804 <__snprintf_chk@plt+0x1284>
    27f8:	ldr	r0, [pc, #40]	; 2828 <__snprintf_chk@plt+0x12a8>
    27fc:	add	r0, pc, r0
    2800:	bl	1214 <__cxa_finalize@plt>
    2804:	bl	2718 <__snprintf_chk@plt+0x1198>
    2808:	ldr	r3, [pc, #28]	; 282c <__snprintf_chk@plt+0x12ac>
    280c:	mov	r2, #1
    2810:	add	r3, pc, r3
    2814:	strb	r2, [r3]
    2818:	pop	{r3, pc}
    281c:	andeq	lr, r1, r4, ror r8
    2820:	andeq	lr, r1, r4, lsr #13
    2824:	andeq	r0, r0, ip, asr #2
    2828:	andeq	lr, r1, r8, lsr #10
    282c:	andeq	lr, r1, r4, lsr r8
    2830:	ldr	r0, [pc, #52]	; 286c <__snprintf_chk@plt+0x12ec>
    2834:	push	{r3, lr}
    2838:	add	r0, pc, r0
    283c:	ldr	r3, [pc, #44]	; 2870 <__snprintf_chk@plt+0x12f0>
    2840:	ldr	r2, [r0]
    2844:	add	r3, pc, r3
    2848:	cmp	r2, #0
    284c:	beq	2864 <__snprintf_chk@plt+0x12e4>
    2850:	ldr	r2, [pc, #28]	; 2874 <__snprintf_chk@plt+0x12f4>
    2854:	ldr	r3, [r3, r2]
    2858:	cmp	r3, #0
    285c:	beq	2864 <__snprintf_chk@plt+0x12e4>
    2860:	blx	r3
    2864:	pop	{r3, lr}
    2868:	b	276c <__snprintf_chk@plt+0x11ec>
    286c:	andeq	lr, r1, r0, lsr r4
    2870:	andeq	lr, r1, ip, lsr r6
    2874:	andeq	r0, r0, r8, ror #2
    2878:	push	{r3, r4, r5, r6, r7, lr}
    287c:	subs	r6, r1, #0
    2880:	mov	r7, r0
    2884:	movne	r4, r0
    2888:	movne	r5, #0
    288c:	beq	28b0 <__snprintf_chk@plt+0x1330>
    2890:	ldr	r0, [r4, #4]
    2894:	add	r5, r5, #1
    2898:	bl	1250 <free@plt>
    289c:	ldr	r0, [r4, #24]
    28a0:	bl	1250 <free@plt>
    28a4:	cmp	r5, r6
    28a8:	add	r4, r4, #32
    28ac:	bne	2890 <__snprintf_chk@plt+0x1310>
    28b0:	mov	r0, r7
    28b4:	pop	{r3, r4, r5, r6, r7, lr}
    28b8:	b	1250 <free@plt>
    28bc:	ldr	r3, [pc, #1316]	; 2de8 <__snprintf_chk@plt+0x1868>
    28c0:	mov	r0, #1
    28c4:	ldr	r2, [pc, #1312]	; 2dec <__snprintf_chk@plt+0x186c>
    28c8:	mov	r1, #112	; 0x70
    28cc:	add	r3, pc, r3
    28d0:	push	{r4, r5, r6, r7, r8, r9, lr}
    28d4:	sub	sp, sp, #196	; 0xc4
    28d8:	ldr	r8, [r3, r2]
    28dc:	ldr	r3, [r8]
    28e0:	str	r3, [sp, #188]	; 0xbc
    28e4:	bl	11f0 <calloc@plt>
    28e8:	subs	r6, r0, #0
    28ec:	beq	2d50 <__snprintf_chk@plt+0x17d0>
    28f0:	bl	abd4 <__snprintf_chk@plt+0x9654>
    28f4:	cmp	r0, #0
    28f8:	blt	2d48 <__snprintf_chk@plt+0x17c8>
    28fc:	add	r4, r6, #16
    2900:	mov	r0, r4
    2904:	bl	adac <__snprintf_chk@plt+0x982c>
    2908:	cmp	r0, #0
    290c:	blt	2d48 <__snprintf_chk@plt+0x17c8>
    2910:	mvn	r3, #0
    2914:	mov	r0, r6
    2918:	str	r3, [r6, #64]	; 0x40
    291c:	add	r5, sp, #124	; 0x7c
    2920:	str	r3, [r6, #104]	; 0x68
    2924:	bl	328c <__snprintf_chk@plt+0x1d0c>
    2928:	mov	r9, r0
    292c:	ldr	r0, [pc, #1212]	; 2df0 <__snprintf_chk@plt+0x1870>
    2930:	add	r0, pc, r0
    2934:	bl	134c <puts@plt>
    2938:	str	r5, [sp]
    293c:	ldm	r6, {r0, r1, r2, r3}
    2940:	bl	ab40 <__snprintf_chk@plt+0x95c0>
    2944:	ldr	r1, [pc, #1192]	; 2df4 <__snprintf_chk@plt+0x1874>
    2948:	add	r1, pc, r1
    294c:	mov	r2, r0
    2950:	mov	r0, #1
    2954:	bl	143c <__printf_chk@plt>
    2958:	str	r5, [sp]
    295c:	ldm	r4, {r0, r1, r2, r3}
    2960:	bl	ab40 <__snprintf_chk@plt+0x95c0>
    2964:	ldr	r1, [pc, #1164]	; 2df8 <__snprintf_chk@plt+0x1878>
    2968:	add	r1, pc, r1
    296c:	mov	r2, r0
    2970:	mov	r0, #1
    2974:	bl	143c <__printf_chk@plt>
    2978:	ldr	r2, [r6, #32]
    297c:	cmp	r2, #0
    2980:	beq	29a0 <__snprintf_chk@plt+0x1420>
    2984:	ldr	r3, [r6, #36]	; 0x24
    2988:	cmp	r3, #0
    298c:	beq	2db4 <__snprintf_chk@plt+0x1834>
    2990:	ldr	r1, [pc, #1124]	; 2dfc <__snprintf_chk@plt+0x187c>
    2994:	mov	r0, #1
    2998:	add	r1, pc, r1
    299c:	bl	143c <__printf_chk@plt>
    29a0:	ldr	r3, [r6, #40]	; 0x28
    29a4:	cmp	r3, #0
    29a8:	blt	29c8 <__snprintf_chk@plt+0x1448>
    29ac:	beq	2d7c <__snprintf_chk@plt+0x17fc>
    29b0:	ldr	r2, [pc, #1096]	; 2e00 <__snprintf_chk@plt+0x1880>
    29b4:	add	r2, pc, r2
    29b8:	ldr	r1, [pc, #1092]	; 2e04 <__snprintf_chk@plt+0x1884>
    29bc:	mov	r0, #1
    29c0:	add	r1, pc, r1
    29c4:	bl	143c <__printf_chk@plt>
    29c8:	ldr	r3, [r6, #44]	; 0x2c
    29cc:	cmp	r3, #0
    29d0:	blt	29f0 <__snprintf_chk@plt+0x1470>
    29d4:	beq	2d88 <__snprintf_chk@plt+0x1808>
    29d8:	ldr	r2, [pc, #1064]	; 2e08 <__snprintf_chk@plt+0x1888>
    29dc:	add	r2, pc, r2
    29e0:	ldr	r1, [pc, #1060]	; 2e0c <__snprintf_chk@plt+0x188c>
    29e4:	mov	r0, #1
    29e8:	add	r1, pc, r1
    29ec:	bl	143c <__printf_chk@plt>
    29f0:	mov	r0, #10
    29f4:	bl	1430 <putchar@plt>
    29f8:	ldr	r3, [r6, #64]	; 0x40
    29fc:	cmp	r3, #0
    2a00:	blt	2b48 <__snprintf_chk@plt+0x15c8>
    2a04:	ldr	r0, [pc, #1028]	; 2e10 <__snprintf_chk@plt+0x1890>
    2a08:	add	r0, pc, r0
    2a0c:	bl	134c <puts@plt>
    2a10:	ldr	r2, [r6, #64]	; 0x40
    2a14:	ldr	r3, [r6, #48]	; 0x30
    2a18:	add	r3, r3, r2, lsl #5
    2a1c:	ldr	r2, [r3, #4]
    2a20:	cmp	r2, #0
    2a24:	beq	2dcc <__snprintf_chk@plt+0x184c>
    2a28:	ldr	r1, [pc, #996]	; 2e14 <__snprintf_chk@plt+0x1894>
    2a2c:	mov	r0, #1
    2a30:	mov	r4, #0
    2a34:	mov	r5, #0
    2a38:	add	r1, pc, r1
    2a3c:	bl	143c <__printf_chk@plt>
    2a40:	ldr	r7, [r6, #64]	; 0x40
    2a44:	ldr	r3, [r6, #48]	; 0x30
    2a48:	add	ip, sp, #56	; 0x38
    2a4c:	strd	r4, [sp, #72]	; 0x48
    2a50:	add	r7, r3, r7, lsl #5
    2a54:	add	r3, r7, #8
    2a58:	ldm	r3, {r0, r1, r2, r3}
    2a5c:	strd	r4, [sp, #80]	; 0x50
    2a60:	stm	ip, {r0, r1, r2, r3}
    2a64:	mov	r0, ip
    2a68:	add	r1, sp, #72	; 0x48
    2a6c:	mov	r2, #16
    2a70:	bl	1298 <memcmp@plt>
    2a74:	cmp	r0, #0
    2a78:	beq	2d94 <__snprintf_chk@plt+0x1814>
    2a7c:	ldrb	r1, [r7, #10]
    2a80:	mov	r0, #1
    2a84:	ldrb	r2, [r7, #8]
    2a88:	ldrb	r3, [r7, #9]
    2a8c:	str	r1, [sp]
    2a90:	ldrb	ip, [r7, #11]
    2a94:	ldr	r1, [pc, #892]	; 2e18 <__snprintf_chk@plt+0x1898>
    2a98:	str	ip, [sp, #4]
    2a9c:	add	r1, pc, r1
    2aa0:	ldrb	ip, [r7, #12]
    2aa4:	str	ip, [sp, #8]
    2aa8:	ldrb	ip, [r7, #13]
    2aac:	str	ip, [sp, #12]
    2ab0:	ldrb	ip, [r7, #14]
    2ab4:	str	ip, [sp, #16]
    2ab8:	ldrb	ip, [r7, #15]
    2abc:	str	ip, [sp, #20]
    2ac0:	ldrb	ip, [r7, #16]
    2ac4:	str	ip, [sp, #24]
    2ac8:	ldrb	ip, [r7, #17]
    2acc:	str	ip, [sp, #28]
    2ad0:	ldrb	ip, [r7, #18]
    2ad4:	str	ip, [sp, #32]
    2ad8:	ldrb	ip, [r7, #19]
    2adc:	str	ip, [sp, #36]	; 0x24
    2ae0:	ldrb	ip, [r7, #20]
    2ae4:	str	ip, [sp, #40]	; 0x28
    2ae8:	ldrb	ip, [r7, #21]
    2aec:	str	ip, [sp, #44]	; 0x2c
    2af0:	ldrb	ip, [r7, #22]
    2af4:	str	ip, [sp, #48]	; 0x30
    2af8:	ldrb	ip, [r7, #23]
    2afc:	str	ip, [sp, #52]	; 0x34
    2b00:	bl	143c <__printf_chk@plt>
    2b04:	ldr	r2, [r6, #64]	; 0x40
    2b08:	ldr	r3, [r6, #48]	; 0x30
    2b0c:	add	r3, r3, r2, lsl #5
    2b10:	ldr	r3, [r3, #24]
    2b14:	cmp	r3, #0
    2b18:	beq	2b48 <__snprintf_chk@plt+0x15c8>
    2b1c:	mov	r0, #2
    2b20:	bl	4da4 <__snprintf_chk@plt+0x3824>
    2b24:	ldr	ip, [r6, #64]	; 0x40
    2b28:	ldr	r3, [r6, #48]	; 0x30
    2b2c:	ldr	r1, [pc, #744]	; 2e1c <__snprintf_chk@plt+0x189c>
    2b30:	add	r3, r3, ip, lsl #5
    2b34:	add	r1, pc, r1
    2b38:	ldr	r3, [r3, #24]
    2b3c:	mov	r2, r0
    2b40:	mov	r0, #1
    2b44:	bl	143c <__printf_chk@plt>
    2b48:	mov	r0, #10
    2b4c:	bl	1430 <putchar@plt>
    2b50:	ldr	r3, [r6, #68]	; 0x44
    2b54:	cmp	r3, #0
    2b58:	beq	2da4 <__snprintf_chk@plt+0x1824>
    2b5c:	ldr	r0, [pc, #700]	; 2e20 <__snprintf_chk@plt+0x18a0>
    2b60:	mov	r4, #0
    2b64:	mov	r5, #0
    2b68:	add	r0, pc, r0
    2b6c:	bl	134c <puts@plt>
    2b70:	ldr	r1, [pc, #684]	; 2e24 <__snprintf_chk@plt+0x18a4>
    2b74:	ldr	r2, [r6, #68]	; 0x44
    2b78:	mov	r0, #1
    2b7c:	add	r1, pc, r1
    2b80:	bl	143c <__printf_chk@plt>
    2b84:	add	r3, r6, #80	; 0x50
    2b88:	add	ip, sp, #88	; 0x58
    2b8c:	strd	r4, [sp, #104]	; 0x68
    2b90:	ldm	r3, {r0, r1, r2, r3}
    2b94:	strd	r4, [sp, #112]	; 0x70
    2b98:	stm	ip, {r0, r1, r2, r3}
    2b9c:	mov	r0, ip
    2ba0:	add	r1, sp, #104	; 0x68
    2ba4:	mov	r2, #16
    2ba8:	bl	1298 <memcmp@plt>
    2bac:	cmp	r0, #0
    2bb0:	beq	2d6c <__snprintf_chk@plt+0x17ec>
    2bb4:	ldrb	r1, [r6, #82]	; 0x52
    2bb8:	mov	r0, #1
    2bbc:	ldrb	r2, [r6, #80]	; 0x50
    2bc0:	ldrb	r3, [r6, #81]	; 0x51
    2bc4:	str	r1, [sp]
    2bc8:	ldrb	ip, [r6, #83]	; 0x53
    2bcc:	ldr	r1, [pc, #596]	; 2e28 <__snprintf_chk@plt+0x18a8>
    2bd0:	str	ip, [sp, #4]
    2bd4:	add	r1, pc, r1
    2bd8:	ldrb	ip, [r6, #84]	; 0x54
    2bdc:	str	ip, [sp, #8]
    2be0:	ldrb	ip, [r6, #85]	; 0x55
    2be4:	str	ip, [sp, #12]
    2be8:	ldrb	ip, [r6, #86]	; 0x56
    2bec:	str	ip, [sp, #16]
    2bf0:	ldrb	ip, [r6, #87]	; 0x57
    2bf4:	str	ip, [sp, #20]
    2bf8:	ldrb	ip, [r6, #88]	; 0x58
    2bfc:	str	ip, [sp, #24]
    2c00:	ldrb	ip, [r6, #89]	; 0x59
    2c04:	str	ip, [sp, #28]
    2c08:	ldrb	ip, [r6, #90]	; 0x5a
    2c0c:	str	ip, [sp, #32]
    2c10:	ldrb	ip, [r6, #91]	; 0x5b
    2c14:	str	ip, [sp, #36]	; 0x24
    2c18:	ldrb	ip, [r6, #92]	; 0x5c
    2c1c:	str	ip, [sp, #40]	; 0x28
    2c20:	ldrb	ip, [r6, #93]	; 0x5d
    2c24:	str	ip, [sp, #44]	; 0x2c
    2c28:	ldrb	ip, [r6, #94]	; 0x5e
    2c2c:	str	ip, [sp, #48]	; 0x30
    2c30:	ldrb	ip, [r6, #95]	; 0x5f
    2c34:	str	ip, [sp, #52]	; 0x34
    2c38:	bl	143c <__printf_chk@plt>
    2c3c:	mov	r0, #2
    2c40:	bl	4da4 <__snprintf_chk@plt+0x3824>
    2c44:	ldr	r3, [r6, #72]	; 0x48
    2c48:	cmp	r3, #0
    2c4c:	mov	r2, r0
    2c50:	beq	2dc0 <__snprintf_chk@plt+0x1840>
    2c54:	ldr	r1, [pc, #464]	; 2e2c <__snprintf_chk@plt+0x18ac>
    2c58:	mov	r0, #1
    2c5c:	add	r1, pc, r1
    2c60:	bl	143c <__printf_chk@plt>
    2c64:	mov	r0, #10
    2c68:	bl	1430 <putchar@plt>
    2c6c:	ldr	r3, [r6, #104]	; 0x68
    2c70:	cmp	r3, #0
    2c74:	blt	2ce8 <__snprintf_chk@plt+0x1768>
    2c78:	ldr	r0, [pc, #432]	; 2e30 <__snprintf_chk@plt+0x18b0>
    2c7c:	add	r0, pc, r0
    2c80:	bl	134c <puts@plt>
    2c84:	ldr	r2, [r6, #104]	; 0x68
    2c88:	ldr	r3, [r6, #96]	; 0x60
    2c8c:	add	r3, r3, r2, lsl #5
    2c90:	ldr	r2, [r3, #4]
    2c94:	cmp	r2, #0
    2c98:	beq	2dd8 <__snprintf_chk@plt+0x1858>
    2c9c:	ldr	r1, [pc, #400]	; 2e34 <__snprintf_chk@plt+0x18b4>
    2ca0:	mov	r0, #1
    2ca4:	add	r1, pc, r1
    2ca8:	bl	143c <__printf_chk@plt>
    2cac:	ldr	r2, [r6, #104]	; 0x68
    2cb0:	ldr	r3, [r6, #96]	; 0x60
    2cb4:	mov	r0, #1
    2cb8:	ldr	r1, [pc, #376]	; 2e38 <__snprintf_chk@plt+0x18b8>
    2cbc:	add	r3, r3, r2, lsl #5
    2cc0:	add	r1, pc, r1
    2cc4:	ldr	r2, [r3, #24]
    2cc8:	bl	143c <__printf_chk@plt>
    2ccc:	ldr	r2, [r6, #108]	; 0x6c
    2cd0:	cmp	r2, #0
    2cd4:	beq	2ce8 <__snprintf_chk@plt+0x1768>
    2cd8:	ldr	r1, [pc, #348]	; 2e3c <__snprintf_chk@plt+0x18bc>
    2cdc:	mov	r0, #1
    2ce0:	add	r1, pc, r1
    2ce4:	bl	143c <__printf_chk@plt>
    2ce8:	mov	r0, #10
    2cec:	bl	1430 <putchar@plt>
    2cf0:	ldr	r0, [r6, #32]
    2cf4:	bl	1250 <free@plt>
    2cf8:	ldr	r0, [r6, #36]	; 0x24
    2cfc:	bl	1250 <free@plt>
    2d00:	ldr	r1, [r6, #52]	; 0x34
    2d04:	ldr	r0, [r6, #48]	; 0x30
    2d08:	bl	2878 <__snprintf_chk@plt+0x12f8>
    2d0c:	ldr	r0, [r6, #56]	; 0x38
    2d10:	bl	1250 <free@plt>
    2d14:	ldr	r0, [r6, #68]	; 0x44
    2d18:	bl	1250 <free@plt>
    2d1c:	ldr	r0, [r6, #72]	; 0x48
    2d20:	bl	1250 <free@plt>
    2d24:	ldr	r0, [r6, #108]	; 0x6c
    2d28:	bl	1250 <free@plt>
    2d2c:	ldr	r0, [r6, #96]	; 0x60
    2d30:	ldr	r1, [r6, #100]	; 0x64
    2d34:	bl	2878 <__snprintf_chk@plt+0x12f8>
    2d38:	mov	r0, r6
    2d3c:	bl	1250 <free@plt>
    2d40:	mov	r0, r9
    2d44:	b	2d54 <__snprintf_chk@plt+0x17d4>
    2d48:	mov	r0, r6
    2d4c:	bl	1250 <free@plt>
    2d50:	mvn	r0, #11
    2d54:	ldr	r2, [sp, #188]	; 0xbc
    2d58:	ldr	r3, [r8]
    2d5c:	cmp	r2, r3
    2d60:	bne	2de4 <__snprintf_chk@plt+0x1864>
    2d64:	add	sp, sp, #196	; 0xc4
    2d68:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2d6c:	ldr	r0, [pc, #204]	; 2e40 <__snprintf_chk@plt+0x18c0>
    2d70:	add	r0, pc, r0
    2d74:	bl	134c <puts@plt>
    2d78:	b	2c3c <__snprintf_chk@plt+0x16bc>
    2d7c:	ldr	r2, [pc, #192]	; 2e44 <__snprintf_chk@plt+0x18c4>
    2d80:	add	r2, pc, r2
    2d84:	b	29b8 <__snprintf_chk@plt+0x1438>
    2d88:	ldr	r2, [pc, #184]	; 2e48 <__snprintf_chk@plt+0x18c8>
    2d8c:	add	r2, pc, r2
    2d90:	b	29e0 <__snprintf_chk@plt+0x1460>
    2d94:	ldr	r0, [pc, #176]	; 2e4c <__snprintf_chk@plt+0x18cc>
    2d98:	add	r0, pc, r0
    2d9c:	bl	134c <puts@plt>
    2da0:	b	2b04 <__snprintf_chk@plt+0x1584>
    2da4:	ldr	r0, [pc, #164]	; 2e50 <__snprintf_chk@plt+0x18d0>
    2da8:	add	r0, pc, r0
    2dac:	bl	134c <puts@plt>
    2db0:	b	2ce8 <__snprintf_chk@plt+0x1768>
    2db4:	ldr	r3, [pc, #152]	; 2e54 <__snprintf_chk@plt+0x18d4>
    2db8:	add	r3, pc, r3
    2dbc:	b	2990 <__snprintf_chk@plt+0x1410>
    2dc0:	ldr	r3, [pc, #144]	; 2e58 <__snprintf_chk@plt+0x18d8>
    2dc4:	add	r3, pc, r3
    2dc8:	b	2c54 <__snprintf_chk@plt+0x16d4>
    2dcc:	ldr	r2, [pc, #136]	; 2e5c <__snprintf_chk@plt+0x18dc>
    2dd0:	add	r2, pc, r2
    2dd4:	b	2a28 <__snprintf_chk@plt+0x14a8>
    2dd8:	ldr	r2, [pc, #128]	; 2e60 <__snprintf_chk@plt+0x18e0>
    2ddc:	add	r2, pc, r2
    2de0:	b	2c9c <__snprintf_chk@plt+0x171c>
    2de4:	bl	12b0 <__stack_chk_fail@plt>
    2de8:			; <UNDEFINED> instruction: 0x0001e5b4
    2dec:	andeq	r0, r0, r4, asr r1
    2df0:	strdeq	r9, [r0], -ip
    2df4:	andeq	r9, r0, ip, ror #13
    2df8:	andeq	r9, r0, r0, ror #13
    2dfc:	andeq	r9, r0, r4, asr #13
    2e00:	andeq	r9, r0, r4, asr r6
    2e04:			; <UNDEFINED> instruction: 0x000096b4
    2e08:	andeq	r9, r0, r0, asr #12
    2e0c:	andeq	r9, r0, r0, lsr #13
    2e10:	muleq	r0, r4, r6
    2e14:	andeq	r9, r0, r0, lsl #13
    2e18:	andeq	r9, r0, r0, lsr r6
    2e1c:	andeq	r9, r0, r8, lsl r6
    2e20:	strdeq	r9, [r0], -ip
    2e24:	strdeq	r9, [r0], -r8
    2e28:	strdeq	r9, [r0], -r8
    2e2c:	strdeq	r9, [r0], -r0
    2e30:	andeq	r9, r0, ip, lsl #10
    2e34:	andeq	r9, r0, r4, lsl r4
    2e38:	andeq	r9, r0, r4, ror #9
    2e3c:	ldrdeq	r9, [r0], -r8
    2e40:	andeq	r9, r0, r8, asr #7
    2e44:	muleq	r0, r0, r2
    2e48:	muleq	r0, r8, r2
    2e4c:	andeq	r9, r0, r0, lsr #7
    2e50:	andeq	r9, r0, r4, lsr #8
    2e54:	andeq	r9, r0, ip, asr #4
    2e58:	andeq	r9, r0, r0, asr #4
    2e5c:	andeq	r9, r0, r4, lsr r2
    2e60:	andeq	r9, r0, r8, lsr #4
    2e64:	ldr	r3, [pc, #324]	; 2fb0 <__snprintf_chk@plt+0x1a30>
    2e68:	ldr	r2, [pc, #324]	; 2fb4 <__snprintf_chk@plt+0x1a34>
    2e6c:	add	r3, pc, r3
    2e70:	ldr	r1, [pc, #320]	; 2fb8 <__snprintf_chk@plt+0x1a38>
    2e74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2e78:	sub	sp, sp, #2048	; 0x800
    2e7c:	ldr	r6, [r3, r2]
    2e80:	sub	sp, sp, #8
    2e84:	add	r1, pc, r1
    2e88:	ldr	r3, [r6]
    2e8c:	str	r3, [sp, #2052]	; 0x804
    2e90:	bl	14f0 <fopen64@plt>
    2e94:	subs	r5, r0, #0
    2e98:	beq	2fa4 <__snprintf_chk@plt+0x1a24>
    2e9c:	ldr	r7, [pc, #280]	; 2fbc <__snprintf_chk@plt+0x1a3c>
    2ea0:	add	r4, sp, #4
    2ea4:	mov	r8, #0
    2ea8:	add	r7, pc, r7
    2eac:	mov	r0, r4
    2eb0:	mov	r1, #2048	; 0x800
    2eb4:	mov	r2, r5
    2eb8:	bl	125c <fgets@plt>
    2ebc:	cmp	r0, #0
    2ec0:	beq	2f9c <__snprintf_chk@plt+0x1a1c>
    2ec4:	mov	r0, r4
    2ec8:	bl	13d0 <strlen@plt>
    2ecc:	cmp	r0, #0
    2ed0:	beq	2eac <__snprintf_chk@plt+0x192c>
    2ed4:	add	r3, sp, #2048	; 0x800
    2ed8:	sub	r0, r0, #1
    2edc:	add	r3, r3, #8
    2ee0:	add	r0, r3, r0
    2ee4:	ldrb	r3, [r0, #-2052]	; 0xfffff7fc
    2ee8:	cmp	r3, #10
    2eec:	strbeq	r8, [r0, #-2052]	; 0xfffff7fc
    2ef0:	bl	13a0 <__ctype_b_loc@plt>
    2ef4:	mov	r3, r4
    2ef8:	ldr	r9, [r0]
    2efc:	mov	sl, r3
    2f00:	ldrb	ip, [r3], #1
    2f04:	lsl	r2, ip, #1
    2f08:	ldrh	lr, [r9, r2]
    2f0c:	tst	lr, #8192	; 0x2000
    2f10:	bne	2efc <__snprintf_chk@plt+0x197c>
    2f14:	cmp	ip, #35	; 0x23
    2f18:	beq	2eac <__snprintf_chk@plt+0x192c>
    2f1c:	mov	r0, sl
    2f20:	mov	r1, r7
    2f24:	mov	r2, #5
    2f28:	bl	1544 <strncmp@plt>
    2f2c:	cmp	r0, #0
    2f30:	bne	2eac <__snprintf_chk@plt+0x192c>
    2f34:	cmn	sl, #5
    2f38:	beq	2eac <__snprintf_chk@plt+0x192c>
    2f3c:	ldrb	r3, [sl, #5]
    2f40:	lsl	r3, r3, #1
    2f44:	ldrh	r3, [r9, r3]
    2f48:	tst	r3, #8192	; 0x2000
    2f4c:	beq	2eac <__snprintf_chk@plt+0x192c>
    2f50:	add	sl, sl, #6
    2f54:	mov	r0, sl
    2f58:	ldrb	r3, [sl], #1
    2f5c:	lsl	r3, r3, #1
    2f60:	ldrh	r3, [r9, r3]
    2f64:	tst	r3, #8192	; 0x2000
    2f68:	bne	2f54 <__snprintf_chk@plt+0x19d4>
    2f6c:	bl	1418 <__strdup@plt>
    2f70:	mov	r4, r0
    2f74:	mov	r0, r5
    2f78:	bl	146c <fclose@plt>
    2f7c:	mov	r0, r4
    2f80:	ldr	r2, [sp, #2052]	; 0x804
    2f84:	ldr	r3, [r6]
    2f88:	cmp	r2, r3
    2f8c:	bne	2fac <__snprintf_chk@plt+0x1a2c>
    2f90:	add	sp, sp, #2048	; 0x800
    2f94:	add	sp, sp, #8
    2f98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2f9c:	mov	r4, r0
    2fa0:	b	2f74 <__snprintf_chk@plt+0x19f4>
    2fa4:	mov	r0, r5
    2fa8:	b	2f80 <__snprintf_chk@plt+0x1a00>
    2fac:	bl	12b0 <__stack_chk_fail@plt>
    2fb0:	andeq	lr, r1, r4, lsl r0
    2fb4:	andeq	r0, r0, r4, asr r1
    2fb8:	andeq	r9, r0, r8, lsr #12
    2fbc:	andeq	r9, r0, r8, lsl #12
    2fc0:	ldr	r3, [pc, #404]	; 315c <__snprintf_chk@plt+0x1bdc>
    2fc4:	push	{r4, r5, r6, r7, r8, r9, lr}
    2fc8:	add	r3, pc, r3
    2fcc:	ldr	r4, [pc, #396]	; 3160 <__snprintf_chk@plt+0x1be0>
    2fd0:	sub	sp, sp, #12
    2fd4:	add	ip, sp, #8
    2fd8:	mov	lr, #0
    2fdc:	ldr	r1, [pc, #384]	; 3164 <__snprintf_chk@plt+0x1be4>
    2fe0:	mov	r5, r0
    2fe4:	ldr	r8, [r3, r4]
    2fe8:	mov	r2, lr
    2fec:	ldr	r3, [pc, #372]	; 3168 <__snprintf_chk@plt+0x1be8>
    2ff0:	add	r1, pc, r1
    2ff4:	str	lr, [ip, #-8]!
    2ff8:	mov	r0, sp
    2ffc:	ldr	ip, [r8]
    3000:	add	r3, pc, r3
    3004:	str	ip, [sp, #4]
    3008:	bl	a77c <__snprintf_chk@plt+0x91fc>
    300c:	cmp	r0, #0
    3010:	blt	30fc <__snprintf_chk@plt+0x1b7c>
    3014:	ldr	r4, [sp]
    3018:	mov	r0, r4
    301c:	bl	90d0 <__snprintf_chk@plt+0x7b50>
    3020:	mov	r1, #32
    3024:	mov	r7, r0
    3028:	bl	11f0 <calloc@plt>
    302c:	cmp	r0, #0
    3030:	str	r0, [r5, #96]	; 0x60
    3034:	beq	311c <__snprintf_chk@plt+0x1b9c>
    3038:	cmp	r7, #0
    303c:	beq	3114 <__snprintf_chk@plt+0x1b94>
    3040:	mov	r2, r4
    3044:	mov	r3, r0
    3048:	mov	r4, #0
    304c:	b	3078 <__snprintf_chk@plt+0x1af8>
    3050:	ldr	r2, [r2, #24]
    3054:	cmp	r2, #0
    3058:	beq	30b8 <__snprintf_chk@plt+0x1b38>
    305c:	add	r4, r4, #1
    3060:	ldr	r2, [r5, #100]	; 0x64
    3064:	cmp	r4, r7
    3068:	add	r2, r2, #1
    306c:	str	r2, [r5, #100]	; 0x64
    3070:	beq	3108 <__snprintf_chk@plt+0x1b88>
    3074:	ldr	r2, [sp]
    3078:	lsl	r6, r4, #5
    307c:	ldr	r0, [r2, r4, lsl #2]
    3080:	add	r9, r3, r6
    3084:	bl	2e64 <__snprintf_chk@plt+0x18e4>
    3088:	ldr	r3, [sp]
    308c:	str	r0, [r9, #4]
    3090:	ldr	r9, [r5, #96]	; 0x60
    3094:	ldr	r0, [r3, r4, lsl #2]
    3098:	bl	1418 <__strdup@plt>
    309c:	add	r9, r9, r6
    30a0:	str	r0, [r9, #24]
    30a4:	ldr	r3, [r5, #96]	; 0x60
    30a8:	add	r2, r3, r6
    30ac:	ldr	r0, [r2, #4]
    30b0:	cmp	r0, #0
    30b4:	bne	3050 <__snprintf_chk@plt+0x1ad0>
    30b8:	bl	1250 <free@plt>
    30bc:	ldr	r3, [r5, #96]	; 0x60
    30c0:	mvn	r7, #11
    30c4:	add	r6, r3, r6
    30c8:	ldr	r0, [r6, #24]
    30cc:	bl	1250 <free@plt>
    30d0:	ldr	r0, [sp]
    30d4:	cmp	r0, #0
    30d8:	beq	30e0 <__snprintf_chk@plt+0x1b60>
    30dc:	bl	8fb8 <__snprintf_chk@plt+0x7a38>
    30e0:	ldr	r2, [sp, #4]
    30e4:	mov	r0, r7
    30e8:	ldr	r3, [r8]
    30ec:	cmp	r2, r3
    30f0:	bne	3128 <__snprintf_chk@plt+0x1ba8>
    30f4:	add	sp, sp, #12
    30f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    30fc:	mov	r7, r0
    3100:	ldr	r0, [sp]
    3104:	b	30d4 <__snprintf_chk@plt+0x1b54>
    3108:	ldr	r0, [sp]
    310c:	mov	r7, #0
    3110:	b	30d4 <__snprintf_chk@plt+0x1b54>
    3114:	mov	r0, r4
    3118:	b	30d4 <__snprintf_chk@plt+0x1b54>
    311c:	mov	r0, r4
    3120:	mvn	r7, #11
    3124:	b	30d4 <__snprintf_chk@plt+0x1b54>
    3128:	bl	12b0 <__stack_chk_fail@plt>
    312c:	ldr	r4, [sp]
    3130:	mov	r5, r0
    3134:	cmp	r4, #0
    3138:	beq	3144 <__snprintf_chk@plt+0x1bc4>
    313c:	mov	r0, r4
    3140:	bl	8fb8 <__snprintf_chk@plt+0x7a38>
    3144:	mov	r0, r5
    3148:	bl	1538 <_Unwind_Resume@plt>
    314c:	mov	r5, r0
    3150:	b	3134 <__snprintf_chk@plt+0x1bb4>
    3154:	ldr	r4, [sp]
    3158:	b	314c <__snprintf_chk@plt+0x1bcc>
    315c:			; <UNDEFINED> instruction: 0x0001deb8
    3160:	andeq	r0, r0, r4, asr r1
    3164:	andeq	r9, r0, r8, asr #9
    3168:	strdeq	sp, [r1], -r8
    316c:	ldr	r2, [pc, #200]	; 323c <__snprintf_chk@plt+0x1cbc>
    3170:	subs	r3, r1, #0
    3174:	ldr	ip, [pc, #196]	; 3240 <__snprintf_chk@plt+0x1cc0>
    3178:	add	r2, pc, r2
    317c:	push	{r4, r5, r6, r7, r8, r9, lr}
    3180:	sub	sp, sp, #12
    3184:	ldr	r9, [r2, ip]
    3188:	mov	r8, r0
    318c:	ldr	r2, [r9]
    3190:	str	r2, [sp, #4]
    3194:	beq	3228 <__snprintf_chk@plt+0x1ca8>
    3198:	ldr	r2, [r0, #100]	; 0x64
    319c:	cmp	r2, #0
    31a0:	beq	3228 <__snprintf_chk@plt+0x1ca8>
    31a4:	ldr	r2, [pc, #152]	; 3244 <__snprintf_chk@plt+0x1cc4>
    31a8:	mov	r0, sp
    31ac:	mov	r1, #1
    31b0:	add	r2, pc, r2
    31b4:	bl	1328 <__asprintf_chk@plt>
    31b8:	cmp	r0, #0
    31bc:	blt	3230 <__snprintf_chk@plt+0x1cb0>
    31c0:	ldr	r7, [r8, #100]	; 0x64
    31c4:	ldr	r6, [sp]
    31c8:	cmp	r7, #0
    31cc:	movne	r4, #0
    31d0:	ldrne	r5, [r8, #96]	; 0x60
    31d4:	bne	31ec <__snprintf_chk@plt+0x1c6c>
    31d8:	b	3204 <__snprintf_chk@plt+0x1c84>
    31dc:	add	r4, r4, #1
    31e0:	add	r5, r5, #32
    31e4:	cmp	r4, r7
    31e8:	beq	3204 <__snprintf_chk@plt+0x1c84>
    31ec:	mov	r0, r6
    31f0:	ldr	r1, [r5, #24]
    31f4:	bl	1208 <strcmp@plt>
    31f8:	cmp	r0, #0
    31fc:	bne	31dc <__snprintf_chk@plt+0x1c5c>
    3200:	str	r4, [r8, #104]	; 0x68
    3204:	mov	r0, r6
    3208:	bl	1250 <free@plt>
    320c:	mov	r0, #0
    3210:	ldr	r2, [sp, #4]
    3214:	ldr	r3, [r9]
    3218:	cmp	r2, r3
    321c:	bne	3238 <__snprintf_chk@plt+0x1cb8>
    3220:	add	sp, sp, #12
    3224:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3228:	mvn	r0, #1
    322c:	b	3210 <__snprintf_chk@plt+0x1c90>
    3230:	mvn	r0, #11
    3234:	b	3210 <__snprintf_chk@plt+0x1c90>
    3238:	bl	12b0 <__stack_chk_fail@plt>
    323c:	andeq	sp, r1, r8, lsl #26
    3240:	andeq	r0, r0, r4, asr r1
    3244:	andeq	r9, r0, r0, lsl r3
    3248:	ldrh	r3, [r0, #2]
    324c:	cmp	r3, #0
    3250:	beq	3268 <__snprintf_chk@plt+0x1ce8>
    3254:	ldrh	r0, [r1, #2]
    3258:	cmp	r0, #0
    325c:	bne	3284 <__snprintf_chk@plt+0x1d04>
    3260:	mov	r0, #1
    3264:	bx	lr
    3268:	ldrh	r3, [r1, #2]
    326c:	cmp	r3, #0
    3270:	ldrheq	r0, [r0]
    3274:	ldrheq	r3, [r1]
    3278:	rsbeq	r0, r3, r0
    327c:	mvnne	r0, #0
    3280:	bx	lr
    3284:	rsb	r0, r0, r3
    3288:	bx	lr
    328c:	ldr	r3, [pc, #1060]	; 36b8 <__snprintf_chk@plt+0x2138>
    3290:	ldr	r2, [pc, #1060]	; 36bc <__snprintf_chk@plt+0x213c>
    3294:	add	r3, pc, r3
    3298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    329c:	sub	sp, sp, #180	; 0xb4
    32a0:	ldr	r2, [r3, r2]
    32a4:	mov	r5, r0
    32a8:	mov	r7, #0
    32ac:	str	r7, [sp, #32]
    32b0:	ldr	r3, [r2]
    32b4:	str	r2, [sp, #20]
    32b8:	str	r3, [sp, #172]	; 0xac
    32bc:	bl	5efc <__snprintf_chk@plt+0x497c>
    32c0:	str	r0, [r5, #40]	; 0x28
    32c4:	bl	5f0c <__snprintf_chk@plt+0x498c>
    32c8:	ldr	r3, [pc, #1008]	; 36c0 <__snprintf_chk@plt+0x2140>
    32cc:	ldr	ip, [pc, #1008]	; 36c4 <__snprintf_chk@plt+0x2144>
    32d0:	add	r2, r5, #68	; 0x44
    32d4:	add	r3, pc, r3
    32d8:	add	ip, pc, ip
    32dc:	str	r0, [r5, #44]	; 0x2c
    32e0:	str	r2, [sp, #4]
    32e4:	str	ip, [sp]
    32e8:	ldm	r3, {r0, r1, r2, r3}
    32ec:	bl	5f1c <__snprintf_chk@plt+0x499c>
    32f0:	add	r0, sp, #176	; 0xb0
    32f4:	str	r7, [r0, #-136]!	; 0xffffff78
    32f8:	str	r0, [sp, #16]
    32fc:	bl	63cc <__snprintf_chk@plt+0x4e4c>
    3300:	cmp	r0, #0
    3304:	blt	340c <__snprintf_chk@plt+0x1e8c>
    3308:	lslne	fp, r0, #1
    330c:	movne	r6, r7
    3310:	movne	r9, #47	; 0x2f
    3314:	beq	3404 <__snprintf_chk@plt+0x1e84>
    3318:	ldr	r1, [r5, #52]	; 0x34
    331c:	ldr	r0, [r5, #48]	; 0x30
    3320:	add	r1, r1, #1
    3324:	lsl	r1, r1, #5
    3328:	bl	12bc <realloc@plt>
    332c:	subs	r8, r0, #0
    3330:	beq	3404 <__snprintf_chk@plt+0x1e84>
    3334:	ldr	r3, [r5, #52]	; 0x34
    3338:	str	r8, [r5, #48]	; 0x30
    333c:	lsl	r4, r3, #5
    3340:	str	r6, [r8, r3, lsl #5]
    3344:	add	sl, r8, r4
    3348:	add	r0, sl, #8
    334c:	add	r1, sl, #4
    3350:	str	r6, [sl, #4]
    3354:	add	r3, sl, #24
    3358:	mov	r2, r0
    335c:	str	r6, [r0], #4
    3360:	str	r6, [r0], #4
    3364:	str	r6, [r0], #4
    3368:	str	r6, [r0], #4
    336c:	str	r6, [r0], #4
    3370:	str	r6, [r0]
    3374:	mvn	r0, #0
    3378:	strh	r0, [sl, #2]
    337c:	ldr	r0, [sp, #40]	; 0x28
    3380:	ldrh	r0, [r0, r7]
    3384:	bl	5ff0 <__snprintf_chk@plt+0x4a70>
    3388:	cmp	r0, #0
    338c:	blt	33f8 <__snprintf_chk@plt+0x1e78>
    3390:	ldr	r0, [sl, #4]
    3394:	cmp	r0, #0
    3398:	beq	33a8 <__snprintf_chk@plt+0x1e28>
    339c:	ldrb	r3, [r0]
    33a0:	cmp	r3, #0
    33a4:	bne	33b0 <__snprintf_chk@plt+0x1e30>
    33a8:	bl	1250 <free@plt>
    33ac:	str	r6, [sl, #4]
    33b0:	ldr	r2, [sl, #24]
    33b4:	cmp	r2, #0
    33b8:	beq	33e0 <__snprintf_chk@plt+0x1e60>
    33bc:	ldrb	r3, [r2]
    33c0:	cmp	r3, #0
    33c4:	beq	33e0 <__snprintf_chk@plt+0x1e60>
    33c8:	add	r2, r2, #1
    33cc:	cmp	r3, #92	; 0x5c
    33d0:	strbeq	r9, [r2, #-1]
    33d4:	ldrb	r3, [r2], #1
    33d8:	cmp	r3, #0
    33dc:	bne	33cc <__snprintf_chk@plt+0x1e4c>
    33e0:	ldr	r3, [sp, #40]	; 0x28
    33e4:	ldrh	r3, [r3, r7]
    33e8:	strh	r3, [r8, r4]
    33ec:	ldr	r3, [r5, #52]	; 0x34
    33f0:	add	r3, r3, #1
    33f4:	str	r3, [r5, #52]	; 0x34
    33f8:	add	r7, r7, #2
    33fc:	cmp	r7, fp
    3400:	bne	3318 <__snprintf_chk@plt+0x1d98>
    3404:	ldr	r0, [sp, #40]	; 0x28
    3408:	bl	1250 <free@plt>
    340c:	ldr	r3, [r5, #52]	; 0x34
    3410:	cmp	r3, #0
    3414:	bne	357c <__snprintf_chk@plt+0x1ffc>
    3418:	ldr	r3, [pc, #680]	; 36c8 <__snprintf_chk@plt+0x2148>
    341c:	add	r2, r5, #32
    3420:	ldr	ip, [pc, #676]	; 36cc <__snprintf_chk@plt+0x214c>
    3424:	add	r3, pc, r3
    3428:	str	r2, [sp, #4]
    342c:	add	ip, pc, ip
    3430:	str	ip, [sp]
    3434:	ldm	r3, {r0, r1, r2, r3}
    3438:	bl	5f1c <__snprintf_chk@plt+0x499c>
    343c:	add	r2, r5, #36	; 0x24
    3440:	ldr	r3, [pc, #648]	; 36d0 <__snprintf_chk@plt+0x2150>
    3444:	ldr	ip, [pc, #648]	; 36d4 <__snprintf_chk@plt+0x2154>
    3448:	add	r3, pc, r3
    344c:	str	r2, [sp, #4]
    3450:	add	ip, pc, ip
    3454:	str	ip, [sp]
    3458:	ldm	r3, {r0, r1, r2, r3}
    345c:	bl	5f1c <__snprintf_chk@plt+0x499c>
    3460:	add	r2, r5, #72	; 0x48
    3464:	ldr	r3, [pc, #620]	; 36d8 <__snprintf_chk@plt+0x2158>
    3468:	ldr	ip, [pc, #620]	; 36dc <__snprintf_chk@plt+0x215c>
    346c:	add	r3, pc, r3
    3470:	str	r2, [sp, #4]
    3474:	add	ip, pc, ip
    3478:	str	ip, [sp]
    347c:	ldm	r3, {r0, r1, r2, r3}
    3480:	bl	5f1c <__snprintf_chk@plt+0x499c>
    3484:	ldr	r2, [r5, #72]	; 0x48
    3488:	cmp	r2, #0
    348c:	beq	34b8 <__snprintf_chk@plt+0x1f38>
    3490:	ldrb	r3, [r2]
    3494:	cmp	r3, #0
    3498:	beq	34b8 <__snprintf_chk@plt+0x1f38>
    349c:	add	r2, r2, #1
    34a0:	mov	r1, #47	; 0x2f
    34a4:	cmp	r3, #92	; 0x5c
    34a8:	strbeq	r1, [r2, #-1]
    34ac:	ldrb	r3, [r2], #1
    34b0:	cmp	r3, #0
    34b4:	bne	34a4 <__snprintf_chk@plt+0x1f24>
    34b8:	add	r0, r5, #80	; 0x50
    34bc:	bl	6610 <__snprintf_chk@plt+0x5090>
    34c0:	mov	r0, r5
    34c4:	bl	2fc0 <__snprintf_chk@plt+0x1a40>
    34c8:	ldr	r3, [pc, #528]	; 36e0 <__snprintf_chk@plt+0x2160>
    34cc:	ldr	ip, [pc, #528]	; 36e4 <__snprintf_chk@plt+0x2164>
    34d0:	add	r2, sp, #32
    34d4:	add	r3, pc, r3
    34d8:	str	r2, [sp, #4]
    34dc:	add	ip, pc, ip
    34e0:	str	ip, [sp]
    34e4:	ldm	r3, {r0, r1, r2, r3}
    34e8:	bl	5f1c <__snprintf_chk@plt+0x499c>
    34ec:	ldr	r1, [sp, #32]
    34f0:	cmp	r1, #0
    34f4:	beq	3508 <__snprintf_chk@plt+0x1f88>
    34f8:	mov	r0, r5
    34fc:	bl	316c <__snprintf_chk@plt+0x1bec>
    3500:	ldr	r0, [sp, #32]
    3504:	bl	1250 <free@plt>
    3508:	add	r3, sp, #108	; 0x6c
    350c:	str	r3, [sp]
    3510:	ldm	r5, {r0, r1, r2, r3}
    3514:	bl	ab40 <__snprintf_chk@plt+0x95c0>
    3518:	add	r4, sp, #44	; 0x2c
    351c:	ldr	ip, [pc, #452]	; 36e8 <__snprintf_chk@plt+0x2168>
    3520:	mov	r1, #64	; 0x40
    3524:	mov	r3, r1
    3528:	mov	r2, #1
    352c:	add	ip, pc, ip
    3530:	str	ip, [sp]
    3534:	add	r5, r5, #108	; 0x6c
    3538:	str	r0, [sp, #4]
    353c:	mov	r0, r4
    3540:	bl	1580 <__snprintf_chk@plt>
    3544:	ldr	r3, [pc, #416]	; 36ec <__snprintf_chk@plt+0x216c>
    3548:	str	r4, [sp]
    354c:	add	r3, pc, r3
    3550:	str	r5, [sp, #4]
    3554:	ldm	r3, {r0, r1, r2, r3}
    3558:	bl	5f1c <__snprintf_chk@plt+0x499c>
    355c:	mov	r0, #0
    3560:	ldr	r1, [sp, #20]
    3564:	ldr	r2, [sp, #172]	; 0xac
    3568:	ldr	r3, [r1]
    356c:	cmp	r2, r3
    3570:	bne	36b4 <__snprintf_chk@plt+0x2134>
    3574:	add	sp, sp, #180	; 0xb4
    3578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    357c:	add	r0, r5, #56	; 0x38
    3580:	bl	6304 <__snprintf_chk@plt+0x4d84>
    3584:	cmp	r0, #0
    3588:	blt	36a8 <__snprintf_chk@plt+0x2128>
    358c:	str	r0, [r5, #60]	; 0x3c
    3590:	movne	ip, #0
    3594:	ldr	r0, [r5, #48]	; 0x30
    3598:	ldrne	r1, [r5, #52]	; 0x34
    359c:	beq	36ac <__snprintf_chk@plt+0x212c>
    35a0:	cmp	r1, #0
    35a4:	beq	35f0 <__snprintf_chk@plt+0x2070>
    35a8:	ldr	lr, [r5, #56]	; 0x38
    35ac:	lsl	r2, ip, #1
    35b0:	ldrh	r3, [r0]
    35b4:	ldrh	r4, [lr, r2]
    35b8:	cmp	r3, r4
    35bc:	beq	36a0 <__snprintf_chk@plt+0x2120>
    35c0:	add	r2, r0, #32
    35c4:	mov	r3, #0
    35c8:	add	r3, r3, #1
    35cc:	cmp	r3, r1
    35d0:	beq	35f0 <__snprintf_chk@plt+0x2070>
    35d4:	mov	r6, r2
    35d8:	ldrh	lr, [r2], #32
    35dc:	cmp	lr, r4
    35e0:	bne	35c8 <__snprintf_chk@plt+0x2048>
    35e4:	strh	ip, [r6, #2]
    35e8:	ldr	r0, [r5, #48]	; 0x30
    35ec:	ldr	r1, [r5, #52]	; 0x34
    35f0:	ldr	r3, [r5, #60]	; 0x3c
    35f4:	add	ip, ip, #1
    35f8:	cmp	ip, r3
    35fc:	bcc	35a0 <__snprintf_chk@plt+0x2020>
    3600:	ldr	r3, [pc, #232]	; 36f0 <__snprintf_chk@plt+0x2170>
    3604:	mov	r2, #32
    3608:	mov	r4, #0
    360c:	add	r3, pc, r3
    3610:	bl	14fc <qsort@plt>
    3614:	ldr	r3, [pc, #216]	; 36f4 <__snprintf_chk@plt+0x2174>
    3618:	ldr	r1, [sp, #16]
    361c:	add	r3, pc, r3
    3620:	ldr	ip, [pc, #208]	; 36f8 <__snprintf_chk@plt+0x2178>
    3624:	str	r4, [sp, #4]
    3628:	add	ip, pc, ip
    362c:	str	r1, [sp, #12]
    3630:	str	ip, [sp]
    3634:	add	ip, sp, #36	; 0x24
    3638:	ldm	r3, {r0, r1, r2, r3}
    363c:	str	ip, [sp, #8]
    3640:	bl	5b14 <__snprintf_chk@plt+0x4594>
    3644:	cmp	r0, r4
    3648:	blt	3418 <__snprintf_chk@plt+0x1e98>
    364c:	ldr	r0, [sp, #36]	; 0x24
    3650:	ldr	r1, [r5, #52]	; 0x34
    3654:	ldrh	r3, [r0]
    3658:	cmp	r1, r4
    365c:	strh	r3, [sp, #30]
    3660:	beq	3698 <__snprintf_chk@plt+0x2118>
    3664:	ldr	r2, [r5, #48]	; 0x30
    3668:	ldrh	ip, [sp, #30]
    366c:	ldrh	r3, [r2]
    3670:	cmp	r3, ip
    3674:	mov	r3, r4
    3678:	beq	3694 <__snprintf_chk@plt+0x2114>
    367c:	add	r3, r3, #1
    3680:	cmp	r3, r1
    3684:	beq	3698 <__snprintf_chk@plt+0x2118>
    3688:	ldrh	lr, [r2, #32]!
    368c:	cmp	lr, ip
    3690:	bne	367c <__snprintf_chk@plt+0x20fc>
    3694:	str	r3, [r5, #64]	; 0x40
    3698:	bl	1250 <free@plt>
    369c:	b	3418 <__snprintf_chk@plt+0x1e98>
    36a0:	mov	r6, r0
    36a4:	b	35e4 <__snprintf_chk@plt+0x2064>
    36a8:	ldr	r0, [r5, #48]	; 0x30
    36ac:	ldr	r1, [r5, #52]	; 0x34
    36b0:	b	3600 <__snprintf_chk@plt+0x2080>
    36b4:	bl	12b0 <__stack_chk_fail@plt>
    36b8:	andeq	sp, r1, ip, ror #23
    36bc:	andeq	r0, r0, r4, asr r1
    36c0:	andeq	r9, r0, r4, asr #4
    36c4:	andeq	r9, r0, r0, ror r2
    36c8:	andeq	r9, r0, ip, lsr #3
    36cc:	andeq	r9, r0, r4, lsr r1
    36d0:	muleq	r0, r8, r1
    36d4:	andeq	r9, r0, r4, lsr #2
    36d8:	andeq	r9, r0, ip, lsl #1
    36dc:	andeq	r9, r0, r4, lsl r1
    36e0:	andeq	r9, r0, r4, asr r0
    36e4:	andeq	r9, r0, r4, asr #1
    36e8:	andeq	r9, r0, r8, lsl #1
    36ec:			; <UNDEFINED> instruction: 0x00008fbc
    36f0:			; <UNDEFINED> instruction: 0xfffffc34
    36f4:	andeq	r8, r0, ip, lsl pc
    36f8:	andeq	r8, r0, ip, lsr #30
    36fc:	ldr	r3, [pc, #164]	; 37a8 <__snprintf_chk@plt+0x2228>
    3700:	mov	r1, #0
    3704:	ldr	r2, [pc, #160]	; 37ac <__snprintf_chk@plt+0x222c>
    3708:	add	r3, pc, r3
    370c:	ldr	r0, [pc, #156]	; 37b0 <__snprintf_chk@plt+0x2230>
    3710:	push	{r4, lr}
    3714:	sub	sp, sp, #96	; 0x60
    3718:	ldr	r4, [r3, r2]
    371c:	add	r0, pc, r0
    3720:	ldr	r3, [r4]
    3724:	str	r3, [sp, #92]	; 0x5c
    3728:	bl	1448 <access@plt>
    372c:	cmp	r0, #0
    3730:	blt	3778 <__snprintf_chk@plt+0x21f8>
    3734:	ldr	r0, [pc, #120]	; 37b4 <__snprintf_chk@plt+0x2234>
    3738:	mov	r1, sp
    373c:	add	r0, pc, r0
    3740:	bl	14a8 <statfs64@plt>
    3744:	cmp	r0, #0
    3748:	blt	3778 <__snprintf_chk@plt+0x21f8>
    374c:	ldr	r0, [sp]
    3750:	movw	r2, #22774	; 0x58f6
    3754:	movw	r3, #6548	; 0x1994
    3758:	movt	r2, #34180	; 0x8584
    375c:	movt	r3, #258	; 0x102
    3760:	cmp	r0, r3
    3764:	cmpne	r0, r2
    3768:	movne	r0, #0
    376c:	moveq	r0, #1
    3770:	mov	ip, r0
    3774:	b	3780 <__snprintf_chk@plt+0x2200>
    3778:	mov	r0, #0
    377c:	mov	ip, r0
    3780:	ldr	r1, [sp, #92]	; 0x5c
    3784:	ldr	r3, [pc, #44]	; 37b8 <__snprintf_chk@plt+0x2238>
    3788:	ldr	r2, [r4]
    378c:	add	r3, pc, r3
    3790:	cmp	r1, r2
    3794:	str	ip, [r3]
    3798:	bne	37a4 <__snprintf_chk@plt+0x2224>
    379c:	add	sp, sp, #96	; 0x60
    37a0:	pop	{r4, pc}
    37a4:	bl	12b0 <__stack_chk_fail@plt>
    37a8:	andeq	sp, r1, r8, ror r7
    37ac:	andeq	r0, r0, r4, asr r1
    37b0:	andeq	r8, r0, r4, asr #30
    37b4:	andeq	r9, r0, ip, lsl r3
    37b8:	andeq	sp, r1, ip, ror r8
    37bc:	cmp	r0, #0
    37c0:	cmpne	r1, #0
    37c4:	push	{r3, lr}
    37c8:	bne	37e0 <__snprintf_chk@plt+0x2260>
    37cc:	cmp	r0, #0
    37d0:	cmpeq	r1, #0
    37d4:	movne	r0, #0
    37d8:	moveq	r0, #1
    37dc:	pop	{r3, pc}
    37e0:	bl	1208 <strcmp@plt>
    37e4:	rsbs	r0, r0, #1
    37e8:	movcc	r0, #0
    37ec:	pop	{r3, pc}
    37f0:	push	{r4, r5, r6, lr}
    37f4:	subs	r6, r0, #0
    37f8:	mov	r4, r1
    37fc:	beq	385c <__snprintf_chk@plt+0x22dc>
    3800:	cmp	r1, #0
    3804:	beq	387c <__snprintf_chk@plt+0x22fc>
    3808:	bl	13d0 <strlen@plt>
    380c:	mov	r5, r0
    3810:	mov	r0, r4
    3814:	bl	13d0 <strlen@plt>
    3818:	subs	r2, r0, #0
    381c:	beq	384c <__snprintf_chk@plt+0x22cc>
    3820:	cmp	r5, r2
    3824:	bcc	3854 <__snprintf_chk@plt+0x22d4>
    3828:	rsb	r5, r2, r5
    382c:	mov	r1, r4
    3830:	add	r6, r6, r5
    3834:	mov	r0, r6
    3838:	bl	1298 <memcmp@plt>
    383c:	cmp	r0, #0
    3840:	moveq	r0, r6
    3844:	movne	r0, #0
    3848:	pop	{r4, r5, r6, pc}
    384c:	add	r0, r6, r5
    3850:	pop	{r4, r5, r6, pc}
    3854:	mov	r0, #0
    3858:	pop	{r4, r5, r6, pc}
    385c:	ldr	r0, [pc, #56]	; 389c <__snprintf_chk@plt+0x231c>
    3860:	mov	r2, #137	; 0x89
    3864:	ldr	r1, [pc, #52]	; 38a0 <__snprintf_chk@plt+0x2320>
    3868:	ldr	r3, [pc, #52]	; 38a4 <__snprintf_chk@plt+0x2324>
    386c:	add	r0, pc, r0
    3870:	add	r1, pc, r1
    3874:	add	r3, pc, r3
    3878:	bl	9700 <__snprintf_chk@plt+0x8180>
    387c:	ldr	r0, [pc, #36]	; 38a8 <__snprintf_chk@plt+0x2328>
    3880:	mov	r2, #138	; 0x8a
    3884:	ldr	r1, [pc, #32]	; 38ac <__snprintf_chk@plt+0x232c>
    3888:	ldr	r3, [pc, #32]	; 38b0 <__snprintf_chk@plt+0x2330>
    388c:	add	r0, pc, r0
    3890:	add	r1, pc, r1
    3894:	add	r3, pc, r3
    3898:	bl	9700 <__snprintf_chk@plt+0x8180>
    389c:	andeq	r9, r0, r0, lsr sp
    38a0:	ldrdeq	r8, [r0], -ip
    38a4:	strdeq	sl, [r0], -ip
    38a8:	strdeq	r8, [r0], -r0
    38ac:			; <UNDEFINED> instruction: 0x00008dbc
    38b0:	ldrdeq	sl, [r0], -ip
    38b4:	push	{r4, lr}
    38b8:	subs	r4, r0, #0
    38bc:	beq	3a24 <__snprintf_chk@plt+0x24a4>
    38c0:	ldrb	r3, [r4]
    38c4:	cmp	r3, #46	; 0x2e
    38c8:	beq	3928 <__snprintf_chk@plt+0x23a8>
    38cc:	ldr	r1, [pc, #368]	; 3a44 <__snprintf_chk@plt+0x24c4>
    38d0:	add	r1, pc, r1
    38d4:	bl	1208 <strcmp@plt>
    38d8:	cmp	r0, #0
    38dc:	beq	3928 <__snprintf_chk@plt+0x23a8>
    38e0:	ldr	r1, [pc, #352]	; 3a48 <__snprintf_chk@plt+0x24c8>
    38e4:	mov	r0, r4
    38e8:	add	r1, pc, r1
    38ec:	bl	1208 <strcmp@plt>
    38f0:	cmp	r0, #0
    38f4:	beq	3928 <__snprintf_chk@plt+0x23a8>
    38f8:	ldr	r1, [pc, #332]	; 3a4c <__snprintf_chk@plt+0x24cc>
    38fc:	mov	r0, r4
    3900:	add	r1, pc, r1
    3904:	bl	1208 <strcmp@plt>
    3908:	cmp	r0, #0
    390c:	beq	3928 <__snprintf_chk@plt+0x23a8>
    3910:	ldr	r1, [pc, #312]	; 3a50 <__snprintf_chk@plt+0x24d0>
    3914:	mov	r0, r4
    3918:	add	r1, pc, r1
    391c:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3920:	cmp	r0, #0
    3924:	beq	3930 <__snprintf_chk@plt+0x23b0>
    3928:	mov	r0, #1
    392c:	pop	{r4, pc}
    3930:	ldr	r1, [pc, #284]	; 3a54 <__snprintf_chk@plt+0x24d4>
    3934:	mov	r0, r4
    3938:	add	r1, pc, r1
    393c:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3940:	cmp	r0, #0
    3944:	bne	3928 <__snprintf_chk@plt+0x23a8>
    3948:	ldr	r1, [pc, #264]	; 3a58 <__snprintf_chk@plt+0x24d8>
    394c:	mov	r0, r4
    3950:	add	r1, pc, r1
    3954:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3958:	cmp	r0, #0
    395c:	bne	3928 <__snprintf_chk@plt+0x23a8>
    3960:	ldr	r1, [pc, #244]	; 3a5c <__snprintf_chk@plt+0x24dc>
    3964:	mov	r0, r4
    3968:	add	r1, pc, r1
    396c:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3970:	cmp	r0, #0
    3974:	bne	3928 <__snprintf_chk@plt+0x23a8>
    3978:	ldr	r1, [pc, #224]	; 3a60 <__snprintf_chk@plt+0x24e0>
    397c:	mov	r0, r4
    3980:	add	r1, pc, r1
    3984:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3988:	cmp	r0, #0
    398c:	bne	3928 <__snprintf_chk@plt+0x23a8>
    3990:	ldr	r1, [pc, #204]	; 3a64 <__snprintf_chk@plt+0x24e4>
    3994:	mov	r0, r4
    3998:	add	r1, pc, r1
    399c:	bl	37f0 <__snprintf_chk@plt+0x2270>
    39a0:	cmp	r0, #0
    39a4:	bne	3928 <__snprintf_chk@plt+0x23a8>
    39a8:	ldr	r1, [pc, #184]	; 3a68 <__snprintf_chk@plt+0x24e8>
    39ac:	mov	r0, r4
    39b0:	add	r1, pc, r1
    39b4:	bl	37f0 <__snprintf_chk@plt+0x2270>
    39b8:	cmp	r0, #0
    39bc:	bne	3928 <__snprintf_chk@plt+0x23a8>
    39c0:	ldr	r1, [pc, #164]	; 3a6c <__snprintf_chk@plt+0x24ec>
    39c4:	mov	r0, r4
    39c8:	add	r1, pc, r1
    39cc:	bl	37f0 <__snprintf_chk@plt+0x2270>
    39d0:	cmp	r0, #0
    39d4:	bne	3928 <__snprintf_chk@plt+0x23a8>
    39d8:	ldr	r1, [pc, #144]	; 3a70 <__snprintf_chk@plt+0x24f0>
    39dc:	mov	r0, r4
    39e0:	add	r1, pc, r1
    39e4:	bl	37f0 <__snprintf_chk@plt+0x2270>
    39e8:	cmp	r0, #0
    39ec:	bne	3928 <__snprintf_chk@plt+0x23a8>
    39f0:	ldr	r1, [pc, #124]	; 3a74 <__snprintf_chk@plt+0x24f4>
    39f4:	mov	r0, r4
    39f8:	add	r1, pc, r1
    39fc:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3a00:	cmp	r0, #0
    3a04:	bne	3928 <__snprintf_chk@plt+0x23a8>
    3a08:	ldr	r1, [pc, #104]	; 3a78 <__snprintf_chk@plt+0x24f8>
    3a0c:	mov	r0, r4
    3a10:	add	r1, pc, r1
    3a14:	bl	37f0 <__snprintf_chk@plt+0x2270>
    3a18:	adds	r0, r0, #0
    3a1c:	movne	r0, #1
    3a20:	pop	{r4, pc}
    3a24:	ldr	r0, [pc, #80]	; 3a7c <__snprintf_chk@plt+0x24fc>
    3a28:	movw	r2, #1779	; 0x6f3
    3a2c:	ldr	r1, [pc, #76]	; 3a80 <__snprintf_chk@plt+0x2500>
    3a30:	ldr	r3, [pc, #76]	; 3a84 <__snprintf_chk@plt+0x2504>
    3a34:	add	r0, pc, r0
    3a38:	add	r1, pc, r1
    3a3c:	add	r3, pc, r3
    3a40:	bl	9700 <__snprintf_chk@plt+0x8180>
    3a44:	andeq	r8, r0, r0, asr #27
    3a48:			; <UNDEFINED> instruction: 0x00008db4
    3a4c:	andeq	r8, r0, r8, lsr #27
    3a50:	andeq	r8, r0, r0, lsr #27
    3a54:	andeq	r8, r0, r8, lsl #27
    3a58:	andeq	r8, r0, ip, ror sp
    3a5c:	andeq	r8, r0, r0, ror sp
    3a60:	andeq	r8, r0, r4, ror #26
    3a64:	andeq	r8, r0, r8, asr sp
    3a68:	andeq	r8, r0, ip, asr #26
    3a6c:	andeq	r8, r0, r0, asr #26
    3a70:	andeq	r8, r0, r4, lsr sp
    3a74:	andeq	r8, r0, ip, lsr #26
    3a78:	andeq	r8, r0, r4, lsr #26
    3a7c:	andeq	r8, r0, r0, asr ip
    3a80:	andeq	r8, r0, r4, lsl ip
    3a84:	strdeq	sl, [r0], -r0
    3a88:	cmp	r0, #0
    3a8c:	push	{r3, lr}
    3a90:	blt	3ac0 <__snprintf_chk@plt+0x2540>
    3a94:	bl	155c <close@plt>
    3a98:	cmp	r0, #0
    3a9c:	blt	3aa8 <__snprintf_chk@plt+0x2528>
    3aa0:	mov	r0, #0
    3aa4:	pop	{r3, pc}
    3aa8:	bl	1400 <__errno_location@plt>
    3aac:	ldr	r0, [r0]
    3ab0:	cmp	r0, #4
    3ab4:	beq	3aa0 <__snprintf_chk@plt+0x2520>
    3ab8:	rsb	r0, r0, #0
    3abc:	pop	{r3, pc}
    3ac0:	ldr	r0, [pc, #24]	; 3ae0 <__snprintf_chk@plt+0x2560>
    3ac4:	mov	r2, #253	; 0xfd
    3ac8:	ldr	r1, [pc, #20]	; 3ae4 <__snprintf_chk@plt+0x2564>
    3acc:	ldr	r3, [pc, #20]	; 3ae8 <__snprintf_chk@plt+0x2568>
    3ad0:	add	r0, pc, r0
    3ad4:	add	r1, pc, r1
    3ad8:	add	r3, pc, r3
    3adc:	bl	9700 <__snprintf_chk@plt+0x8180>
    3ae0:	andeq	r8, r0, ip, ror ip
    3ae4:	andeq	r8, r0, r8, ror fp
    3ae8:			; <UNDEFINED> instruction: 0x0000a2bc
    3aec:	push	{r3, r4, r5, lr}
    3af0:	subs	r5, r0, #0
    3af4:	blt	3b18 <__snprintf_chk@plt+0x2598>
    3af8:	bl	1400 <__errno_location@plt>
    3afc:	mov	r4, r0
    3b00:	mov	r0, r5
    3b04:	ldr	r5, [r4]
    3b08:	bl	3a88 <__snprintf_chk@plt+0x2508>
    3b0c:	cmn	r0, #9
    3b10:	strne	r5, [r4]
    3b14:	beq	3b20 <__snprintf_chk@plt+0x25a0>
    3b18:	mvn	r0, #0
    3b1c:	pop	{r3, r4, r5, pc}
    3b20:	ldr	r0, [pc, #32]	; 3b48 <__snprintf_chk@plt+0x25c8>
    3b24:	movw	r2, #291	; 0x123
    3b28:	ldr	r1, [pc, #28]	; 3b4c <__snprintf_chk@plt+0x25cc>
    3b2c:	ldr	r3, [pc, #28]	; 3b50 <__snprintf_chk@plt+0x25d0>
    3b30:	add	r0, pc, r0
    3b34:	add	r1, pc, r1
    3b38:	add	r3, pc, r3
    3b3c:	bl	9700 <__snprintf_chk@plt+0x8180>
    3b40:	str	r5, [r4]
    3b44:	bl	1538 <_Unwind_Resume@plt>
    3b48:	andeq	r8, r0, r4, lsr #24
    3b4c:	andeq	r8, r0, r8, lsl fp
    3b50:	andeq	sl, r0, r0, lsl #5
    3b54:	push	{r3, r4, r5, lr}
    3b58:	subs	r4, r0, #0
    3b5c:	beq	3c8c <__snprintf_chk@plt+0x270c>
    3b60:	ldrb	r5, [r4]
    3b64:	cmp	r5, #49	; 0x31
    3b68:	bne	3b80 <__snprintf_chk@plt+0x2600>
    3b6c:	ldrb	r3, [r4, #1]
    3b70:	cmp	r3, #0
    3b74:	bne	3b80 <__snprintf_chk@plt+0x2600>
    3b78:	mov	r0, #1
    3b7c:	pop	{r3, r4, r5, pc}
    3b80:	ldr	r1, [pc, #292]	; 3cac <__snprintf_chk@plt+0x272c>
    3b84:	mov	r0, r4
    3b88:	add	r1, pc, r1
    3b8c:	bl	12c8 <strcasecmp@plt>
    3b90:	cmp	r0, #0
    3b94:	beq	3b78 <__snprintf_chk@plt+0x25f8>
    3b98:	ldr	r1, [pc, #272]	; 3cb0 <__snprintf_chk@plt+0x2730>
    3b9c:	mov	r0, r4
    3ba0:	add	r1, pc, r1
    3ba4:	bl	12c8 <strcasecmp@plt>
    3ba8:	cmp	r0, #0
    3bac:	beq	3b78 <__snprintf_chk@plt+0x25f8>
    3bb0:	ldr	r1, [pc, #252]	; 3cb4 <__snprintf_chk@plt+0x2734>
    3bb4:	mov	r0, r4
    3bb8:	add	r1, pc, r1
    3bbc:	bl	12c8 <strcasecmp@plt>
    3bc0:	cmp	r0, #0
    3bc4:	beq	3b78 <__snprintf_chk@plt+0x25f8>
    3bc8:	ldr	r1, [pc, #232]	; 3cb8 <__snprintf_chk@plt+0x2738>
    3bcc:	mov	r0, r4
    3bd0:	add	r1, pc, r1
    3bd4:	bl	12c8 <strcasecmp@plt>
    3bd8:	cmp	r0, #0
    3bdc:	beq	3b78 <__snprintf_chk@plt+0x25f8>
    3be0:	ldr	r1, [pc, #212]	; 3cbc <__snprintf_chk@plt+0x273c>
    3be4:	mov	r0, r4
    3be8:	add	r1, pc, r1
    3bec:	bl	12c8 <strcasecmp@plt>
    3bf0:	cmp	r0, #0
    3bf4:	beq	3b78 <__snprintf_chk@plt+0x25f8>
    3bf8:	cmp	r5, #48	; 0x30
    3bfc:	beq	3c7c <__snprintf_chk@plt+0x26fc>
    3c00:	ldr	r1, [pc, #184]	; 3cc0 <__snprintf_chk@plt+0x2740>
    3c04:	mov	r0, r4
    3c08:	add	r1, pc, r1
    3c0c:	bl	12c8 <strcasecmp@plt>
    3c10:	cmp	r0, #0
    3c14:	popeq	{r3, r4, r5, pc}
    3c18:	ldr	r1, [pc, #164]	; 3cc4 <__snprintf_chk@plt+0x2744>
    3c1c:	mov	r0, r4
    3c20:	add	r1, pc, r1
    3c24:	bl	12c8 <strcasecmp@plt>
    3c28:	cmp	r0, #0
    3c2c:	popeq	{r3, r4, r5, pc}
    3c30:	ldr	r1, [pc, #144]	; 3cc8 <__snprintf_chk@plt+0x2748>
    3c34:	mov	r0, r4
    3c38:	add	r1, pc, r1
    3c3c:	bl	12c8 <strcasecmp@plt>
    3c40:	cmp	r0, #0
    3c44:	popeq	{r3, r4, r5, pc}
    3c48:	ldr	r1, [pc, #124]	; 3ccc <__snprintf_chk@plt+0x274c>
    3c4c:	mov	r0, r4
    3c50:	add	r1, pc, r1
    3c54:	bl	12c8 <strcasecmp@plt>
    3c58:	cmp	r0, #0
    3c5c:	popeq	{r3, r4, r5, pc}
    3c60:	ldr	r1, [pc, #104]	; 3cd0 <__snprintf_chk@plt+0x2750>
    3c64:	mov	r0, r4
    3c68:	add	r1, pc, r1
    3c6c:	bl	12c8 <strcasecmp@plt>
    3c70:	cmp	r0, #0
    3c74:	mvnne	r0, #21
    3c78:	pop	{r3, r4, r5, pc}
    3c7c:	ldrb	r0, [r4, #1]
    3c80:	cmp	r0, #0
    3c84:	popeq	{r3, r4, r5, pc}
    3c88:	b	3c00 <__snprintf_chk@plt+0x2680>
    3c8c:	ldr	r0, [pc, #64]	; 3cd4 <__snprintf_chk@plt+0x2754>
    3c90:	movw	r2, #318	; 0x13e
    3c94:	ldr	r1, [pc, #60]	; 3cd8 <__snprintf_chk@plt+0x2758>
    3c98:	ldr	r3, [pc, #60]	; 3cdc <__snprintf_chk@plt+0x275c>
    3c9c:	add	r0, pc, r0
    3ca0:	add	r1, pc, r1
    3ca4:	add	r3, pc, r3
    3ca8:	bl	9700 <__snprintf_chk@plt+0x8180>
    3cac:	andeq	r8, r0, r0, lsl #24
    3cb0:	andeq	sl, r0, r4, ror #22
    3cb4:	ldrdeq	r8, [r0], -r4
    3cb8:	andeq	r8, r0, r0, lsr ip
    3cbc:	andeq	r9, r0, ip, asr #4
    3cc0:	andeq	r8, r0, ip, lsl #23
    3cc4:	andeq	sl, r0, r8, lsl r8
    3cc8:	muleq	r0, r0, lr
    3ccc:	andeq	r8, r0, ip, ror #16
    3cd0:	andeq	r8, r0, r0, lsr fp
    3cd4:	andeq	r8, r0, r8, ror #21
    3cd8:	andeq	r8, r0, ip, lsr #19
    3cdc:	andeq	sl, r0, r8, ror r1
    3ce0:	ldr	r3, [pc, #248]	; 3de0 <__snprintf_chk@plt+0x2860>
    3ce4:	ldr	r2, [pc, #248]	; 3de4 <__snprintf_chk@plt+0x2864>
    3ce8:	add	r3, pc, r3
    3cec:	push	{r4, r5, r6, r7, r8, lr}
    3cf0:	subs	r7, r0, #0
    3cf4:	ldr	r5, [r3, r2]
    3cf8:	sub	sp, sp, #8
    3cfc:	mov	r4, #0
    3d00:	mov	r8, r1
    3d04:	str	r4, [sp]
    3d08:	ldr	r3, [r5]
    3d0c:	str	r3, [sp, #4]
    3d10:	beq	3dc0 <__snprintf_chk@plt+0x2840>
    3d14:	cmp	r1, #0
    3d18:	beq	3da0 <__snprintf_chk@plt+0x2820>
    3d1c:	bl	1400 <__errno_location@plt>
    3d20:	mov	r2, r4
    3d24:	mov	r1, sp
    3d28:	str	r4, [r0]
    3d2c:	mov	r6, r0
    3d30:	mov	r0, r7
    3d34:	bl	13c4 <strtoul@plt>
    3d38:	ldr	r3, [sp]
    3d3c:	cmp	r3, #0
    3d40:	beq	3d94 <__snprintf_chk@plt+0x2814>
    3d44:	cmp	r7, r3
    3d48:	beq	3d94 <__snprintf_chk@plt+0x2814>
    3d4c:	ldrb	r3, [r3]
    3d50:	cmp	r3, #0
    3d54:	ldr	r3, [r6]
    3d58:	beq	3d84 <__snprintf_chk@plt+0x2804>
    3d5c:	cmp	r3, #0
    3d60:	rsbgt	r3, r3, #0
    3d64:	mvnle	r3, #21
    3d68:	ldr	r2, [sp, #4]
    3d6c:	mov	r0, r3
    3d70:	ldr	r3, [r5]
    3d74:	cmp	r2, r3
    3d78:	bne	3d9c <__snprintf_chk@plt+0x281c>
    3d7c:	add	sp, sp, #8
    3d80:	pop	{r4, r5, r6, r7, r8, pc}
    3d84:	cmp	r3, #0
    3d88:	streq	r0, [r8]
    3d8c:	beq	3d68 <__snprintf_chk@plt+0x27e8>
    3d90:	b	3d5c <__snprintf_chk@plt+0x27dc>
    3d94:	ldr	r3, [r6]
    3d98:	b	3d5c <__snprintf_chk@plt+0x27dc>
    3d9c:	bl	12b0 <__stack_chk_fail@plt>
    3da0:	ldr	r0, [pc, #64]	; 3de8 <__snprintf_chk@plt+0x2868>
    3da4:	movw	r2, #386	; 0x182
    3da8:	ldr	r1, [pc, #60]	; 3dec <__snprintf_chk@plt+0x286c>
    3dac:	ldr	r3, [pc, #60]	; 3df0 <__snprintf_chk@plt+0x2870>
    3db0:	add	r0, pc, r0
    3db4:	add	r1, pc, r1
    3db8:	add	r3, pc, r3
    3dbc:	bl	9700 <__snprintf_chk@plt+0x8180>
    3dc0:	ldr	r0, [pc, #44]	; 3df4 <__snprintf_chk@plt+0x2874>
    3dc4:	movw	r2, #385	; 0x181
    3dc8:	ldr	r1, [pc, #40]	; 3df8 <__snprintf_chk@plt+0x2878>
    3dcc:	ldr	r3, [pc, #40]	; 3dfc <__snprintf_chk@plt+0x287c>
    3dd0:	add	r0, pc, r0
    3dd4:	add	r1, pc, r1
    3dd8:	add	r3, pc, r3
    3ddc:	bl	9700 <__snprintf_chk@plt+0x8180>
    3de0:	muleq	r1, r8, r1
    3de4:	andeq	r0, r0, r4, asr r1
    3de8:	andeq	r8, r0, ip, ror #19
    3dec:	muleq	r0, r8, r8
    3df0:	andeq	r9, r0, ip, lsr #31
    3df4:	andeq	r9, r0, ip, asr #15
    3df8:	andeq	r8, r0, r8, ror r8
    3dfc:	andeq	r9, r0, ip, lsl #31
    3e00:	ldr	r3, [pc, #208]	; 3ed8 <__snprintf_chk@plt+0x2958>
    3e04:	push	{r4, r5, r6, fp, lr}
    3e08:	add	fp, sp, #16
    3e0c:	ldr	r2, [pc, #200]	; 3edc <__snprintf_chk@plt+0x295c>
    3e10:	sub	sp, sp, #20
    3e14:	add	r3, pc, r3
    3e18:	subs	r6, r1, #0
    3e1c:	ldr	r4, [r3, r2]
    3e20:	ldr	r3, [r4]
    3e24:	str	r3, [fp, #-24]	; 0xffffffe8
    3e28:	beq	3eb8 <__snprintf_chk@plt+0x2938>
    3e2c:	cmp	r0, #0
    3e30:	blt	3e98 <__snprintf_chk@plt+0x2918>
    3e34:	bne	3e6c <__snprintf_chk@plt+0x28ec>
    3e38:	ldr	r5, [pc, #160]	; 3ee0 <__snprintf_chk@plt+0x2960>
    3e3c:	add	r5, pc, r5
    3e40:	mov	r0, r5
    3e44:	mov	r1, r6
    3e48:	bl	aa60 <__snprintf_chk@plt+0x94e0>
    3e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e50:	ldr	r3, [r4]
    3e54:	cmn	r0, #2
    3e58:	mvneq	r0, #2
    3e5c:	cmp	r2, r3
    3e60:	bne	3e94 <__snprintf_chk@plt+0x2914>
    3e64:	sub	sp, fp, #16
    3e68:	pop	{r4, r5, r6, fp, pc}
    3e6c:	sub	sp, sp, #32
    3e70:	ldr	r3, [pc, #108]	; 3ee4 <__snprintf_chk@plt+0x2964>
    3e74:	add	r5, sp, #8
    3e78:	mov	r1, #1
    3e7c:	str	r0, [sp]
    3e80:	mov	r2, #24
    3e84:	mov	r0, r5
    3e88:	add	r3, pc, r3
    3e8c:	bl	140c <__sprintf_chk@plt>
    3e90:	b	3e40 <__snprintf_chk@plt+0x28c0>
    3e94:	bl	12b0 <__stack_chk_fail@plt>
    3e98:	ldr	r0, [pc, #72]	; 3ee8 <__snprintf_chk@plt+0x2968>
    3e9c:	movw	r2, #706	; 0x2c2
    3ea0:	ldr	r1, [pc, #68]	; 3eec <__snprintf_chk@plt+0x296c>
    3ea4:	ldr	r3, [pc, #68]	; 3ef0 <__snprintf_chk@plt+0x2970>
    3ea8:	add	r0, pc, r0
    3eac:	add	r1, pc, r1
    3eb0:	add	r3, pc, r3
    3eb4:	bl	9700 <__snprintf_chk@plt+0x8180>
    3eb8:	ldr	r0, [pc, #52]	; 3ef4 <__snprintf_chk@plt+0x2974>
    3ebc:	movw	r2, #705	; 0x2c1
    3ec0:	ldr	r1, [pc, #48]	; 3ef8 <__snprintf_chk@plt+0x2978>
    3ec4:	ldr	r3, [pc, #48]	; 3efc <__snprintf_chk@plt+0x297c>
    3ec8:	add	r0, pc, r0
    3ecc:	add	r1, pc, r1
    3ed0:	add	r3, pc, r3
    3ed4:	bl	9700 <__snprintf_chk@plt+0x8180>
    3ed8:	andeq	sp, r1, ip, rrx
    3edc:	andeq	r0, r0, r4, asr r1
    3ee0:	andeq	r8, r0, r8, ror #19
    3ee4:	andeq	r8, r0, ip, lsr #19
    3ee8:	andeq	r8, r0, r8, lsr r9
    3eec:	andeq	r8, r0, r0, lsr #15
    3ef0:	andeq	r9, r0, r4, lsl pc
    3ef4:	andeq	r8, r0, r0, asr #15
    3ef8:	andeq	r8, r0, r0, lsl #15
    3efc:	strdeq	r9, [r0], -r4
    3f00:	rsbs	r3, r0, #1
    3f04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3f08:	movcc	r3, #0
    3f0c:	rsbs	r4, r1, #1
    3f10:	mov	r7, r1
    3f14:	mov	r6, r2
    3f18:	mov	sl, r0
    3f1c:	movcc	r4, #0
    3f20:	tst	r3, r4
    3f24:	bne	3f88 <__snprintf_chk@plt+0x2a08>
    3f28:	cmp	r3, #0
    3f2c:	bne	3fa0 <__snprintf_chk@plt+0x2a20>
    3f30:	cmp	r4, #0
    3f34:	bne	3fb0 <__snprintf_chk@plt+0x2a30>
    3f38:	bl	13d0 <strlen@plt>
    3f3c:	mvn	r3, r0
    3f40:	cmp	r6, r3
    3f44:	mov	r5, r0
    3f48:	bhi	3f98 <__snprintf_chk@plt+0x2a18>
    3f4c:	add	r9, r0, r6
    3f50:	add	r0, r9, #1
    3f54:	bl	1358 <malloc@plt>
    3f58:	subs	r8, r0, #0
    3f5c:	beq	3fb8 <__snprintf_chk@plt+0x2a38>
    3f60:	mov	r1, sl
    3f64:	mov	r2, r5
    3f68:	bl	1274 <memcpy@plt>
    3f6c:	add	r0, r8, r5
    3f70:	mov	r1, r7
    3f74:	mov	r2, r6
    3f78:	bl	1274 <memcpy@plt>
    3f7c:	strb	r4, [r8, r9]
    3f80:	mov	r0, r8
    3f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3f88:	mov	r0, #1
    3f8c:	mov	r1, r0
    3f90:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    3f94:	b	11f0 <calloc@plt>
    3f98:	mov	r0, r4
    3f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3fa0:	mov	r0, r1
    3fa4:	mov	r1, r2
    3fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    3fac:	b	12d4 <__strndup@plt>
    3fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    3fb4:	b	1418 <__strdup@plt>
    3fb8:	mov	r0, r8
    3fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3fc0:	push	{r3, r4, r5, lr}
    3fc4:	subs	r4, r1, #0
    3fc8:	mov	r5, r0
    3fcc:	beq	3fec <__snprintf_chk@plt+0x2a6c>
    3fd0:	mov	r0, r4
    3fd4:	bl	13d0 <strlen@plt>
    3fd8:	mov	r1, r4
    3fdc:	mov	r2, r0
    3fe0:	mov	r0, r5
    3fe4:	pop	{r3, r4, r5, lr}
    3fe8:	b	3f00 <__snprintf_chk@plt+0x2980>
    3fec:	mov	r2, r4
    3ff0:	mov	r0, r5
    3ff4:	mov	r1, r4
    3ff8:	pop	{r3, r4, r5, lr}
    3ffc:	b	3f00 <__snprintf_chk@plt+0x2980>
    4000:	ldr	r3, [pc, #12]	; 4014 <__snprintf_chk@plt+0x2a94>
    4004:	and	r0, r0, #15
    4008:	add	r3, pc, r3
    400c:	ldrb	r0, [r3, r0]
    4010:	bx	lr
    4014:	andeq	r9, r0, r4, lsl #28
    4018:	sub	r3, r0, #48	; 0x30
    401c:	uxtb	r2, r3
    4020:	cmp	r2, #9
    4024:	bls	4050 <__snprintf_chk@plt+0x2ad0>
    4028:	sub	r3, r0, #97	; 0x61
    402c:	cmp	r3, #5
    4030:	bls	4048 <__snprintf_chk@plt+0x2ac8>
    4034:	sub	r3, r0, #65	; 0x41
    4038:	cmp	r3, #5
    403c:	subls	r0, r0, #55	; 0x37
    4040:	mvnhi	r0, #21
    4044:	bx	lr
    4048:	sub	r0, r0, #87	; 0x57
    404c:	bx	lr
    4050:	mov	r0, r3
    4054:	bx	lr
    4058:	push	{r4, lr}
    405c:	subs	r4, r0, #0
    4060:	beq	408c <__snprintf_chk@plt+0x2b0c>
    4064:	ldr	r1, [pc, #64]	; 40ac <__snprintf_chk@plt+0x2b2c>
    4068:	add	r1, pc, r1
    406c:	bl	37f0 <__snprintf_chk@plt+0x2270>
    4070:	cmp	r0, #0
    4074:	beq	4080 <__snprintf_chk@plt+0x2b00>
    4078:	mov	r0, #1
    407c:	pop	{r4, pc}
    4080:	mov	r0, r4
    4084:	pop	{r4, lr}
    4088:	b	38b4 <__snprintf_chk@plt+0x2334>
    408c:	ldr	r0, [pc, #28]	; 40b0 <__snprintf_chk@plt+0x2b30>
    4090:	movw	r2, #1800	; 0x708
    4094:	ldr	r1, [pc, #24]	; 40b4 <__snprintf_chk@plt+0x2b34>
    4098:	ldr	r3, [pc, #24]	; 40b8 <__snprintf_chk@plt+0x2b38>
    409c:	add	r0, pc, r0
    40a0:	add	r1, pc, r1
    40a4:	add	r3, pc, r3
    40a8:	bl	9700 <__snprintf_chk@plt+0x8180>
    40ac:	andeq	r8, r0, r4, ror #17
    40b0:	andeq	r8, r0, r8, ror #11
    40b4:	andeq	r8, r0, ip, lsr #11
    40b8:	andeq	r9, r0, r8, lsl #27
    40bc:	tst	r1, #64	; 0x40
    40c0:	push	{r3, r4, r5, r6, r7, lr}
    40c4:	mov	r5, r1
    40c8:	mov	r7, r0
    40cc:	moveq	r4, #21
    40d0:	beq	40e0 <__snprintf_chk@plt+0x2b60>
    40d4:	b	4160 <__snprintf_chk@plt+0x2be0>
    40d8:	movw	r0, #50000	; 0xc350
    40dc:	bl	1304 <usleep@plt>
    40e0:	mov	r0, r7
    40e4:	mov	r1, r5
    40e8:	mov	r2, #0
    40ec:	bl	131c <open64@plt>
    40f0:	subs	r6, r0, #0
    40f4:	bge	411c <__snprintf_chk@plt+0x2b9c>
    40f8:	bl	1400 <__errno_location@plt>
    40fc:	ldr	r3, [r0]
    4100:	cmp	r3, #5
    4104:	bne	413c <__snprintf_chk@plt+0x2bbc>
    4108:	subs	r4, r4, #1
    410c:	bne	40d8 <__snprintf_chk@plt+0x2b58>
    4110:	mvn	r6, #4
    4114:	mov	r0, r6
    4118:	pop	{r3, r4, r5, r6, r7, pc}
    411c:	bl	152c <isatty@plt>
    4120:	cmp	r0, #0
    4124:	blt	4148 <__snprintf_chk@plt+0x2bc8>
    4128:	bne	4114 <__snprintf_chk@plt+0x2b94>
    412c:	mov	r0, r6
    4130:	mvn	r6, #24
    4134:	bl	3aec <__snprintf_chk@plt+0x256c>
    4138:	b	4114 <__snprintf_chk@plt+0x2b94>
    413c:	rsb	r6, r3, #0
    4140:	mov	r0, r6
    4144:	pop	{r3, r4, r5, r6, r7, pc}
    4148:	mov	r0, r6
    414c:	bl	3aec <__snprintf_chk@plt+0x256c>
    4150:	bl	1400 <__errno_location@plt>
    4154:	ldr	r6, [r0]
    4158:	rsb	r6, r6, #0
    415c:	b	4114 <__snprintf_chk@plt+0x2b94>
    4160:	ldr	r0, [pc, #24]	; 4180 <__snprintf_chk@plt+0x2c00>
    4164:	movw	r2, #2231	; 0x8b7
    4168:	ldr	r1, [pc, #20]	; 4184 <__snprintf_chk@plt+0x2c04>
    416c:	ldr	r3, [pc, #20]	; 4188 <__snprintf_chk@plt+0x2c08>
    4170:	add	r0, pc, r0
    4174:	add	r1, pc, r1
    4178:	add	r3, pc, r3
    417c:	bl	9700 <__snprintf_chk@plt+0x8180>
    4180:	andeq	r8, r0, ip, lsr #16
    4184:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    4188:	andeq	r8, r0, r8, ror r4
    418c:	push	{r3, r4, r5, lr}
    4190:	ldr	r3, [pc, #84]	; 41ec <__snprintf_chk@plt+0x2c6c>
    4194:	add	r3, pc, r3
    4198:	ldrb	r3, [r3]
    419c:	cmp	r3, #0
    41a0:	popne	{r3, r4, r5, pc}
    41a4:	mov	r0, #25
    41a8:	bl	1478 <getauxval@plt>
    41ac:	cmp	r0, #0
    41b0:	ldrne	r5, [r0]
    41b4:	moveq	r5, r0
    41b8:	mov	r0, #0
    41bc:	bl	6c60 <__snprintf_chk@plt+0x56e0>
    41c0:	mov	r4, r0
    41c4:	mov	r0, #224	; 0xe0
    41c8:	bl	13b8 <syscall@plt>
    41cc:	eor	r0, r0, r4
    41d0:	eor	r0, r0, r5
    41d4:	bl	13e8 <srand@plt>
    41d8:	ldr	r3, [pc, #16]	; 41f0 <__snprintf_chk@plt+0x2c70>
    41dc:	mov	r2, #1
    41e0:	add	r3, pc, r3
    41e4:	strb	r2, [r3]
    41e8:	pop	{r3, r4, r5, pc}
    41ec:			; <UNDEFINED> instruction: 0x0001ceb1
    41f0:	andeq	ip, r1, r5, ror #28
    41f4:	ldr	r3, [pc, #368]	; 436c <__snprintf_chk@plt+0x2dec>
    41f8:	cmp	r0, #0
    41fc:	push	{r4, r5, r6, fp, lr}
    4200:	add	fp, sp, #16
    4204:	ldr	r2, [pc, #356]	; 4370 <__snprintf_chk@plt+0x2df0>
    4208:	sub	sp, sp, #28
    420c:	add	r3, pc, r3
    4210:	mov	r4, r1
    4214:	mov	r1, #0
    4218:	ldr	r5, [r3, r2]
    421c:	str	r1, [fp, #-32]	; 0xffffffe0
    4220:	ldr	r3, [r5]
    4224:	str	r3, [fp, #-24]	; 0xffffffe8
    4228:	blt	4338 <__snprintf_chk@plt+0x2db8>
    422c:	bne	42f4 <__snprintf_chk@plt+0x2d74>
    4230:	ldr	r6, [pc, #316]	; 4374 <__snprintf_chk@plt+0x2df4>
    4234:	add	r6, pc, r6
    4238:	mov	r0, r6
    423c:	sub	r1, fp, #32
    4240:	bl	aa60 <__snprintf_chk@plt+0x94e0>
    4244:	cmp	r0, #0
    4248:	blt	431c <__snprintf_chk@plt+0x2d9c>
    424c:	ldr	r6, [fp, #-32]	; 0xffffffe0
    4250:	mov	r1, #41	; 0x29
    4254:	mov	r0, r6
    4258:	bl	149c <strrchr@plt>
    425c:	cmp	r0, #0
    4260:	beq	4328 <__snprintf_chk@plt+0x2da8>
    4264:	ldr	r1, [pc, #268]	; 4378 <__snprintf_chk@plt+0x2df8>
    4268:	add	r0, r0, #1
    426c:	sub	r2, fp, #28
    4270:	add	r1, pc, r1
    4274:	bl	14c0 <sscanf@plt>
    4278:	cmp	r0, #1
    427c:	ldrne	r0, [fp, #-32]	; 0xffffffe0
    4280:	mvnne	r6, #4
    4284:	bne	42b4 <__snprintf_chk@plt+0x2d34>
    4288:	ldr	r3, [fp, #-28]	; 0xffffffe4
    428c:	mov	r1, #0
    4290:	ubfx	r2, r3, #8, #12
    4294:	cmp	r2, r1
    4298:	beq	42d4 <__snprintf_chk@plt+0x2d54>
    429c:	cmp	r4, #0
    42a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    42a4:	strne	r3, [r4]
    42a8:	moveq	r6, r4
    42ac:	movne	r6, #0
    42b0:	strne	r1, [r4, #4]
    42b4:	bl	1250 <free@plt>
    42b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42bc:	ldr	r3, [r5]
    42c0:	mov	r0, r6
    42c4:	cmp	r2, r3
    42c8:	bne	4334 <__snprintf_chk@plt+0x2db4>
    42cc:	sub	sp, fp, #16
    42d0:	pop	{r4, r5, r6, fp, pc}
    42d4:	lsr	r0, r3, #12
    42d8:	uxtb	r2, r3
    42dc:	bic	r0, r0, #255	; 0xff
    42e0:	orrs	r2, r0, r2
    42e4:	ldreq	r0, [fp, #-32]	; 0xffffffe0
    42e8:	mvneq	r6, #1
    42ec:	bne	429c <__snprintf_chk@plt+0x2d1c>
    42f0:	b	42b4 <__snprintf_chk@plt+0x2d34>
    42f4:	sub	sp, sp, #32
    42f8:	ldr	r3, [pc, #124]	; 437c <__snprintf_chk@plt+0x2dfc>
    42fc:	add	r6, sp, #8
    4300:	mov	r1, #1
    4304:	str	r0, [sp]
    4308:	mov	r2, #24
    430c:	mov	r0, r6
    4310:	add	r3, pc, r3
    4314:	bl	140c <__sprintf_chk@plt>
    4318:	b	4238 <__snprintf_chk@plt+0x2cb8>
    431c:	mov	r6, r0
    4320:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4324:	b	42b4 <__snprintf_chk@plt+0x2d34>
    4328:	mov	r0, r6
    432c:	mvn	r6, #4
    4330:	b	42b4 <__snprintf_chk@plt+0x2d34>
    4334:	bl	12b0 <__stack_chk_fail@plt>
    4338:	ldr	r0, [pc, #64]	; 4380 <__snprintf_chk@plt+0x2e00>
    433c:	movw	r2, #3177	; 0xc69
    4340:	ldr	r1, [pc, #60]	; 4384 <__snprintf_chk@plt+0x2e04>
    4344:	ldr	r3, [pc, #60]	; 4388 <__snprintf_chk@plt+0x2e08>
    4348:	add	r0, pc, r0
    434c:	add	r1, pc, r1
    4350:	add	r3, pc, r3
    4354:	bl	9700 <__snprintf_chk@plt+0x8180>
    4358:	mov	r4, r0
    435c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4360:	bl	1250 <free@plt>
    4364:	mov	r0, r4
    4368:	bl	1538 <_Unwind_Resume@plt>
    436c:	andeq	ip, r1, r4, ror ip
    4370:	andeq	r0, r0, r4, asr r1
    4374:	ldrdeq	r8, [r0], -ip
    4378:	andeq	r8, r0, r0, ror #16
    437c:	andeq	r8, r0, r4, ror #9
    4380:	muleq	r0, r8, r4
    4384:	andeq	r8, r0, r0, lsl #6
    4388:	andeq	r8, r0, r4, asr #5
    438c:	cmp	r0, #0
    4390:	push	{r3, r4, r5, lr}
    4394:	mov	r5, r1
    4398:	beq	43e4 <__snprintf_chk@plt+0x2e64>
    439c:	ldrb	r3, [r0, #18]
    43a0:	cmp	r3, #10
    43a4:	beq	43b0 <__snprintf_chk@plt+0x2e30>
    43a8:	tst	r3, #247	; 0xf7
    43ac:	bne	43dc <__snprintf_chk@plt+0x2e5c>
    43b0:	add	r4, r0, #19
    43b4:	mov	r0, r4
    43b8:	bl	38b4 <__snprintf_chk@plt+0x2334>
    43bc:	cmp	r0, #0
    43c0:	bne	43dc <__snprintf_chk@plt+0x2e5c>
    43c4:	mov	r0, r4
    43c8:	mov	r1, r5
    43cc:	bl	37f0 <__snprintf_chk@plt+0x2270>
    43d0:	adds	r0, r0, #0
    43d4:	movne	r0, #1
    43d8:	pop	{r3, r4, r5, pc}
    43dc:	mov	r0, #0
    43e0:	pop	{r3, r4, r5, pc}
    43e4:	ldr	r0, [pc, #24]	; 4404 <__snprintf_chk@plt+0x2e84>
    43e8:	movw	r2, #4426	; 0x114a
    43ec:	ldr	r1, [pc, #20]	; 4408 <__snprintf_chk@plt+0x2e88>
    43f0:	ldr	r3, [pc, #20]	; 440c <__snprintf_chk@plt+0x2e8c>
    43f4:	add	r0, pc, r0
    43f8:	add	r1, pc, r1
    43fc:	add	r3, pc, r3
    4400:	bl	9700 <__snprintf_chk@plt+0x8180>
    4404:	andeq	r8, r0, r0, lsl #17
    4408:	andeq	r8, r0, r4, asr r2
    440c:	andeq	r9, r0, ip, asr #18
    4410:	ldr	ip, [pc, #144]	; 44a8 <__snprintf_chk@plt+0x2f28>
    4414:	push	{r4, r5, r6, lr}
    4418:	add	ip, pc, ip
    441c:	ldr	r6, [pc, #136]	; 44ac <__snprintf_chk@plt+0x2f2c>
    4420:	mvn	r4, #0
    4424:	mvn	r5, #0
    4428:	cmp	r3, r5
    442c:	cmpeq	r2, r4
    4430:	sub	sp, sp, #24
    4434:	mov	lr, #0
    4438:	ldr	r4, [ip, r6]
    443c:	moveq	r2, lr
    4440:	stmib	sp, {r0, lr}
    4444:	strh	r1, [sp, #8]
    4448:	ldr	r0, [r4]
    444c:	str	r0, [sp, #20]
    4450:	beq	4460 <__snprintf_chk@plt+0x2ee0>
    4454:	add	r0, sp, #12
    4458:	bl	6cec <__snprintf_chk@plt+0x576c>
    445c:	mov	r2, r0
    4460:	add	r0, sp, #4
    4464:	mov	r1, #1
    4468:	mov	r3, #0
    446c:	bl	1340 <ppoll@plt>
    4470:	cmp	r0, #0
    4474:	blt	4494 <__snprintf_chk@plt+0x2f14>
    4478:	ldrshne	r0, [sp, #10]
    447c:	ldr	r2, [sp, #20]
    4480:	ldr	r3, [r4]
    4484:	cmp	r2, r3
    4488:	bne	44a4 <__snprintf_chk@plt+0x2f24>
    448c:	add	sp, sp, #24
    4490:	pop	{r4, r5, r6, pc}
    4494:	bl	1400 <__errno_location@plt>
    4498:	ldr	r0, [r0]
    449c:	rsb	r0, r0, #0
    44a0:	b	447c <__snprintf_chk@plt+0x2efc>
    44a4:	bl	12b0 <__stack_chk_fail@plt>
    44a8:	andeq	ip, r1, r8, ror #20
    44ac:	andeq	r0, r0, r4, asr r1
    44b0:	push	{r4, r5, r6, r7, r8, lr}
    44b4:	subs	r7, r0, #0
    44b8:	mov	r5, r1
    44bc:	mov	r4, r2
    44c0:	mov	r8, r3
    44c4:	blt	4588 <__snprintf_chk@plt+0x3008>
    44c8:	cmp	r1, #0
    44cc:	beq	4568 <__snprintf_chk@plt+0x2fe8>
    44d0:	cmp	r2, #0
    44d4:	movne	r6, #0
    44d8:	bne	44f8 <__snprintf_chk@plt+0x2f78>
    44dc:	b	4560 <__snprintf_chk@plt+0x2fe0>
    44e0:	beq	4538 <__snprintf_chk@plt+0x2fb8>
    44e4:	add	r5, r5, r0
    44e8:	rsb	r4, r0, r4
    44ec:	add	r6, r6, r0
    44f0:	cmp	r4, #0
    44f4:	beq	4538 <__snprintf_chk@plt+0x2fb8>
    44f8:	mov	r0, r7
    44fc:	mov	r1, r5
    4500:	mov	r2, r4
    4504:	bl	1244 <read@plt>
    4508:	cmp	r0, #0
    450c:	bge	44e0 <__snprintf_chk@plt+0x2f60>
    4510:	bl	1400 <__errno_location@plt>
    4514:	ldr	r0, [r0]
    4518:	cmp	r0, #4
    451c:	beq	44f0 <__snprintf_chk@plt+0x2f70>
    4520:	cmp	r0, #11
    4524:	bne	4530 <__snprintf_chk@plt+0x2fb0>
    4528:	cmp	r8, #0
    452c:	bne	4548 <__snprintf_chk@plt+0x2fc8>
    4530:	cmp	r6, #0
    4534:	beq	4540 <__snprintf_chk@plt+0x2fc0>
    4538:	mov	r0, r6
    453c:	pop	{r4, r5, r6, r7, r8, pc}
    4540:	rsb	r0, r0, #0
    4544:	pop	{r4, r5, r6, r7, r8, pc}
    4548:	mov	r0, r7
    454c:	mov	r1, #1
    4550:	mvn	r2, #0
    4554:	mvn	r3, #0
    4558:	bl	4410 <__snprintf_chk@plt+0x2e90>
    455c:	b	44f0 <__snprintf_chk@plt+0x2f70>
    4560:	mov	r0, r2
    4564:	pop	{r4, r5, r6, r7, r8, pc}
    4568:	ldr	r0, [pc, #56]	; 45a8 <__snprintf_chk@plt+0x3028>
    456c:	movw	r2, #2567	; 0xa07
    4570:	ldr	r1, [pc, #52]	; 45ac <__snprintf_chk@plt+0x302c>
    4574:	ldr	r3, [pc, #52]	; 45b0 <__snprintf_chk@plt+0x3030>
    4578:	add	r0, pc, r0
    457c:	add	r1, pc, r1
    4580:	add	r3, pc, r3
    4584:	bl	9700 <__snprintf_chk@plt+0x8180>
    4588:	ldr	r0, [pc, #36]	; 45b4 <__snprintf_chk@plt+0x3034>
    458c:	movw	r2, #2566	; 0xa06
    4590:	ldr	r1, [pc, #32]	; 45b8 <__snprintf_chk@plt+0x3038>
    4594:	ldr	r3, [pc, #32]	; 45bc <__snprintf_chk@plt+0x303c>
    4598:	add	r0, pc, r0
    459c:	add	r1, pc, r1
    45a0:	add	r3, pc, r3
    45a4:	bl	9700 <__snprintf_chk@plt+0x8180>
    45a8:	andeq	r8, r0, r0, lsr #15
    45ac:	ldrdeq	r8, [r0], -r0
    45b0:			; <UNDEFINED> instruction: 0x000098b8
    45b4:			; <UNDEFINED> instruction: 0x000081b4
    45b8:	strheq	r8, [r0], -r0
    45bc:	muleq	r0, r8, r8
    45c0:	push	{r3, r4, r5, r6, r7, lr}
    45c4:	mov	r6, r0
    45c8:	ldr	r5, [pc, #236]	; 46bc <__snprintf_chk@plt+0x313c>
    45cc:	mov	r4, r1
    45d0:	add	r5, pc, r5
    45d4:	ldr	r3, [r5]
    45d8:	cmp	r3, #0
    45dc:	beq	462c <__snprintf_chk@plt+0x30ac>
    45e0:	mov	r0, #384	; 0x180
    45e4:	mov	r1, r6
    45e8:	mov	r2, r4
    45ec:	mov	r3, #1
    45f0:	bl	13b8 <syscall@plt>
    45f4:	cmp	r4, r0
    45f8:	beq	4694 <__snprintf_chk@plt+0x3114>
    45fc:	cmp	r0, #0
    4600:	bge	46ac <__snprintf_chk@plt+0x312c>
    4604:	bl	1400 <__errno_location@plt>
    4608:	ldr	r0, [r0]
    460c:	cmp	r0, #38	; 0x26
    4610:	moveq	r3, #0
    4614:	streq	r3, [r5]
    4618:	beq	462c <__snprintf_chk@plt+0x30ac>
    461c:	cmp	r0, #11
    4620:	bne	468c <__snprintf_chk@plt+0x310c>
    4624:	mov	r3, #1
    4628:	str	r3, [r5]
    462c:	ldr	r0, [pc, #140]	; 46c0 <__snprintf_chk@plt+0x3140>
    4630:	mov	r1, #256	; 0x100
    4634:	movt	r1, #8
    4638:	add	r0, pc, r0
    463c:	bl	131c <open64@plt>
    4640:	subs	r7, r0, #0
    4644:	blt	467c <__snprintf_chk@plt+0x30fc>
    4648:	mov	r1, r6
    464c:	mov	r2, r4
    4650:	mov	r3, #1
    4654:	bl	44b0 <__snprintf_chk@plt+0x2f30>
    4658:	mov	r5, r0
    465c:	mov	r0, r7
    4660:	bl	3aec <__snprintf_chk@plt+0x256c>
    4664:	cmp	r5, #0
    4668:	blt	46a4 <__snprintf_chk@plt+0x3124>
    466c:	cmp	r5, r4
    4670:	bne	46ac <__snprintf_chk@plt+0x312c>
    4674:	mov	r0, #0
    4678:	pop	{r3, r4, r5, r6, r7, pc}
    467c:	bl	1400 <__errno_location@plt>
    4680:	ldr	r0, [r0]
    4684:	cmp	r0, #2
    4688:	beq	46b4 <__snprintf_chk@plt+0x3134>
    468c:	rsb	r0, r0, #0
    4690:	pop	{r3, r4, r5, r6, r7, pc}
    4694:	mov	r3, #1
    4698:	mov	r0, #0
    469c:	str	r3, [r5]
    46a0:	pop	{r3, r4, r5, r6, r7, pc}
    46a4:	mov	r0, r5
    46a8:	pop	{r3, r4, r5, r6, r7, pc}
    46ac:	mvn	r0, #4
    46b0:	pop	{r3, r4, r5, r6, r7, pc}
    46b4:	mvn	r0, #37	; 0x25
    46b8:	pop	{r3, r4, r5, r6, r7, pc}
    46bc:	andeq	ip, r1, r0, lsr sl
    46c0:	andeq	r8, r0, r4, ror #13
    46c4:	push	{r3, r4, r5, lr}
    46c8:	mov	r4, r0
    46cc:	mov	r5, r1
    46d0:	bl	45c0 <__snprintf_chk@plt+0x3040>
    46d4:	cmp	r0, #0
    46d8:	popge	{r3, r4, r5, pc}
    46dc:	add	r5, r4, r5
    46e0:	bl	418c <__snprintf_chk@plt+0x2c0c>
    46e4:	cmp	r4, r5
    46e8:	popcs	{r3, r4, r5, pc}
    46ec:	bl	1454 <rand@plt>
    46f0:	strb	r0, [r4], #1
    46f4:	cmp	r4, r5
    46f8:	bne	46ec <__snprintf_chk@plt+0x316c>
    46fc:	pop	{r3, r4, r5, pc}
    4700:	push	{r0, r1, r2, r3}
    4704:	ldr	r3, [pc, #272]	; 481c <__snprintf_chk@plt+0x329c>
    4708:	ldr	r2, [pc, #272]	; 4820 <__snprintf_chk@plt+0x32a0>
    470c:	add	r3, pc, r3
    4710:	push	{r4, r5, r6, r7, r8, lr}
    4714:	sub	sp, sp, #8
    4718:	ldr	r6, [r3, r2]
    471c:	add	r7, sp, #36	; 0x24
    4720:	ldr	r5, [sp, #32]
    4724:	str	r7, [sp]
    4728:	ldr	r3, [r6]
    472c:	cmp	r5, #0
    4730:	str	r3, [sp, #4]
    4734:	beq	47fc <__snprintf_chk@plt+0x327c>
    4738:	mov	r0, r5
    473c:	add	r8, sp, #40	; 0x28
    4740:	bl	13d0 <strlen@plt>
    4744:	str	r8, [sp]
    4748:	mov	r4, r0
    474c:	ldr	r0, [sp, #36]	; 0x24
    4750:	cmp	r0, #0
    4754:	bne	4778 <__snprintf_chk@plt+0x31f8>
    4758:	b	47ac <__snprintf_chk@plt+0x322c>
    475c:	ldr	r3, [sp]
    4760:	add	r4, r4, r0
    4764:	add	r2, r3, #4
    4768:	str	r2, [sp]
    476c:	ldr	r0, [r3]
    4770:	cmp	r0, #0
    4774:	beq	47ac <__snprintf_chk@plt+0x322c>
    4778:	bl	13d0 <strlen@plt>
    477c:	mvn	r3, r4
    4780:	cmp	r0, r3
    4784:	bls	475c <__snprintf_chk@plt+0x31dc>
    4788:	mov	r0, #0
    478c:	ldr	r2, [sp, #4]
    4790:	ldr	r3, [r6]
    4794:	cmp	r2, r3
    4798:	bne	4818 <__snprintf_chk@plt+0x3298>
    479c:	add	sp, sp, #8
    47a0:	pop	{r4, r5, r6, r7, r8, lr}
    47a4:	add	sp, sp, #16
    47a8:	bx	lr
    47ac:	adds	r0, r4, #1
    47b0:	bl	1358 <malloc@plt>
    47b4:	subs	r4, r0, #0
    47b8:	beq	4788 <__snprintf_chk@plt+0x3208>
    47bc:	mov	r1, r5
    47c0:	mov	r0, r4
    47c4:	bl	12a4 <stpcpy@plt>
    47c8:	ldr	r1, [sp, #36]	; 0x24
    47cc:	str	r8, [sp]
    47d0:	cmp	r1, #0
    47d4:	addne	r7, r7, #8
    47d8:	beq	47f4 <__snprintf_chk@plt+0x3274>
    47dc:	bl	12a4 <stpcpy@plt>
    47e0:	str	r7, [sp]
    47e4:	add	r7, r7, #4
    47e8:	ldr	r1, [r7, #-8]
    47ec:	cmp	r1, #0
    47f0:	bne	47dc <__snprintf_chk@plt+0x325c>
    47f4:	mov	r0, r4
    47f8:	b	478c <__snprintf_chk@plt+0x320c>
    47fc:	mov	r0, #1
    4800:	bl	1358 <malloc@plt>
    4804:	subs	r3, r0, #0
    4808:	strbne	r5, [r3]
    480c:	movne	r0, r3
    4810:	bne	478c <__snprintf_chk@plt+0x320c>
    4814:	b	4788 <__snprintf_chk@plt+0x3208>
    4818:	bl	12b0 <__stack_chk_fail@plt>
    481c:	andeq	ip, r1, r4, ror r7
    4820:	andeq	r0, r0, r4, asr r1
    4824:	ldr	r3, [pc, #200]	; 48f4 <__snprintf_chk@plt+0x3374>
    4828:	ldr	r2, [pc, #200]	; 48f8 <__snprintf_chk@plt+0x3378>
    482c:	add	r3, pc, r3
    4830:	push	{r4, r5, r6, r7, lr}
    4834:	subs	r6, r0, #0
    4838:	ldr	r7, [r3, r2]
    483c:	sub	sp, sp, #12
    4840:	ldr	r5, [pc, #180]	; 48fc <__snprintf_chk@plt+0x337c>
    4844:	mov	r4, #0
    4848:	str	r4, [sp]
    484c:	ldr	r3, [r7]
    4850:	add	r5, pc, r5
    4854:	sub	r5, r5, #4
    4858:	str	r3, [sp, #4]
    485c:	beq	48d0 <__snprintf_chk@plt+0x3350>
    4860:	ldr	r0, [r5, #4]!
    4864:	cmp	r0, #0
    4868:	beq	487c <__snprintf_chk@plt+0x32fc>
    486c:	mov	r1, r6
    4870:	bl	1208 <strcmp@plt>
    4874:	cmp	r0, #0
    4878:	beq	48c0 <__snprintf_chk@plt+0x3340>
    487c:	add	r4, r4, #1
    4880:	cmp	r4, #8
    4884:	bne	4860 <__snprintf_chk@plt+0x32e0>
    4888:	mov	r0, r6
    488c:	mov	r1, sp
    4890:	bl	3ce0 <__snprintf_chk@plt+0x2760>
    4894:	cmp	r0, #0
    4898:	blt	48c8 <__snprintf_chk@plt+0x3348>
    489c:	ldr	r0, [sp]
    48a0:	cmp	r0, #7
    48a4:	mvnhi	r0, #0
    48a8:	ldr	r2, [sp, #4]
    48ac:	ldr	r3, [r7]
    48b0:	cmp	r2, r3
    48b4:	bne	48f0 <__snprintf_chk@plt+0x3370>
    48b8:	add	sp, sp, #12
    48bc:	pop	{r4, r5, r6, r7, pc}
    48c0:	mov	r0, r4
    48c4:	b	48a8 <__snprintf_chk@plt+0x3328>
    48c8:	mvn	r0, #0
    48cc:	b	48a8 <__snprintf_chk@plt+0x3328>
    48d0:	ldr	r0, [pc, #40]	; 4900 <__snprintf_chk@plt+0x3380>
    48d4:	movw	r2, #5501	; 0x157d
    48d8:	ldr	r1, [pc, #36]	; 4904 <__snprintf_chk@plt+0x3384>
    48dc:	ldr	r3, [pc, #36]	; 4908 <__snprintf_chk@plt+0x3388>
    48e0:	add	r0, pc, r0
    48e4:	add	r1, pc, r1
    48e8:	add	r3, pc, r3
    48ec:	bl	9700 <__snprintf_chk@plt+0x8180>
    48f0:	bl	12b0 <__stack_chk_fail@plt>
    48f4:	andeq	ip, r1, r4, asr r6
    48f8:	andeq	r0, r0, r4, asr r1
    48fc:	andeq	ip, r1, ip, asr #8
    4900:			; <UNDEFINED> instruction: 0x00008cbc
    4904:	andeq	r7, r0, r8, ror #26
    4908:	muleq	r0, r4, r4
    490c:	ldr	ip, [pc, #228]	; 49f8 <__snprintf_chk@plt+0x3478>
    4910:	mov	r2, #7
    4914:	push	{r4, r5, r6, r7, r8, lr}
    4918:	add	ip, pc, ip
    491c:	ldr	lr, [pc, #216]	; 49fc <__snprintf_chk@plt+0x347c>
    4920:	sub	sp, sp, #24
    4924:	add	r4, sp, #12
    4928:	mov	r6, r1
    492c:	mov	r1, #1
    4930:	mov	r7, r0
    4934:	ldr	r5, [ip, lr]
    4938:	mov	ip, #4
    493c:	add	lr, sp, #16
    4940:	str	ip, [sp, #16]
    4944:	str	lr, [sp]
    4948:	mov	r3, r4
    494c:	ldr	ip, [r5]
    4950:	str	ip, [sp, #20]
    4954:	bl	12f8 <getsockopt@plt>
    4958:	cmp	r0, #0
    495c:	blt	496c <__snprintf_chk@plt+0x33ec>
    4960:	ldr	r3, [sp, #16]
    4964:	cmp	r3, #4
    4968:	beq	49b0 <__snprintf_chk@plt+0x3430>
    496c:	mov	r8, #4
    4970:	mov	r0, r7
    4974:	str	r8, [sp]
    4978:	mov	r1, #1
    497c:	mov	r2, #32
    4980:	mov	r3, r4
    4984:	str	r6, [sp, #12]
    4988:	bl	122c <setsockopt@plt>
    498c:	cmp	r0, #0
    4990:	blt	49c4 <__snprintf_chk@plt+0x3444>
    4994:	mov	r0, #1
    4998:	ldr	r2, [sp, #20]
    499c:	ldr	r3, [r5]
    49a0:	cmp	r2, r3
    49a4:	bne	49f4 <__snprintf_chk@plt+0x3474>
    49a8:	add	sp, sp, #24
    49ac:	pop	{r4, r5, r6, r7, r8, pc}
    49b0:	ldr	r3, [sp, #12]
    49b4:	cmp	r3, r6, lsl #1
    49b8:	movcs	r0, #0
    49bc:	bcc	496c <__snprintf_chk@plt+0x33ec>
    49c0:	b	4998 <__snprintf_chk@plt+0x3418>
    49c4:	str	r8, [sp]
    49c8:	mov	r0, r7
    49cc:	mov	r3, r4
    49d0:	mov	r1, #1
    49d4:	mov	r2, #7
    49d8:	bl	122c <setsockopt@plt>
    49dc:	cmp	r0, #0
    49e0:	bge	4994 <__snprintf_chk@plt+0x3414>
    49e4:	bl	1400 <__errno_location@plt>
    49e8:	ldr	r0, [r0]
    49ec:	rsb	r0, r0, #0
    49f0:	b	4998 <__snprintf_chk@plt+0x3418>
    49f4:	bl	12b0 <__stack_chk_fail@plt>
    49f8:	andeq	ip, r1, r8, ror #10
    49fc:	andeq	r0, r0, r4, asr r1
    4a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4a04:	add	fp, sp, #32
    4a08:	ldr	r3, [pc, #572]	; 4c4c <__snprintf_chk@plt+0x36cc>
    4a0c:	sub	sp, sp, #2080	; 0x820
    4a10:	sub	sp, sp, #4
    4a14:	ldr	ip, [pc, #564]	; 4c50 <__snprintf_chk@plt+0x36d0>
    4a18:	add	r3, pc, r3
    4a1c:	str	r2, [fp, #-2104]	; 0xfffff7c8
    4a20:	cmp	r0, #0
    4a24:	ldr	ip, [r3, ip]
    4a28:	mov	r9, r1
    4a2c:	ldr	r3, [ip]
    4a30:	str	ip, [fp, #-2108]	; 0xfffff7c4
    4a34:	str	r3, [fp, #-40]	; 0xffffffd8
    4a38:	blt	4bdc <__snprintf_chk@plt+0x365c>
    4a3c:	cmp	r1, #0
    4a40:	beq	4bfc <__snprintf_chk@plt+0x367c>
    4a44:	ldr	r1, [fp, #-2104]	; 0xfffff7c8
    4a48:	cmp	r1, #0
    4a4c:	beq	4c1c <__snprintf_chk@plt+0x369c>
    4a50:	ldr	r4, [pc, #508]	; 4c54 <__snprintf_chk@plt+0x36d4>
    4a54:	cmp	r0, #0
    4a58:	add	r4, pc, r4
    4a5c:	bne	4b5c <__snprintf_chk@plt+0x35dc>
    4a60:	ldr	r1, [pc, #496]	; 4c58 <__snprintf_chk@plt+0x36d8>
    4a64:	mov	r0, r4
    4a68:	add	r1, pc, r1
    4a6c:	bl	14f0 <fopen64@plt>
    4a70:	subs	r5, r0, #0
    4a74:	beq	4bb8 <__snprintf_chk@plt+0x3638>
    4a78:	mov	r0, r9
    4a7c:	sub	r7, fp, #2080	; 0x820
    4a80:	bl	13d0 <strlen@plt>
    4a84:	sub	r7, r7, #4
    4a88:	sub	r2, fp, #36	; 0x24
    4a8c:	movw	r6, #2047	; 0x7ff
    4a90:	add	r2, r2, r0
    4a94:	str	r0, [fp, #-2096]	; 0xfffff7d0
    4a98:	str	r2, [fp, #-2100]	; 0xfffff7cc
    4a9c:	mov	r4, #0
    4aa0:	b	4ab8 <__snprintf_chk@plt+0x3538>
    4aa4:	sub	sl, r7, #4
    4aa8:	strb	r0, [sl, r4]
    4aac:	add	r4, r4, #1
    4ab0:	cmp	r4, r6
    4ab4:	beq	4b54 <__snprintf_chk@plt+0x35d4>
    4ab8:	mov	r0, r5
    4abc:	bl	128c <_IO_getc@plt>
    4ac0:	cmn	r0, #1
    4ac4:	beq	4ba8 <__snprintf_chk@plt+0x3628>
    4ac8:	cmp	r0, #0
    4acc:	bne	4aa4 <__snprintf_chk@plt+0x3524>
    4ad0:	sub	sl, fp, #2080	; 0x820
    4ad4:	mov	r8, r0
    4ad8:	sub	sl, sl, #8
    4adc:	sub	r3, fp, #36	; 0x24
    4ae0:	mov	r0, sl
    4ae4:	add	r4, r3, r4
    4ae8:	mov	r1, r9
    4aec:	ldr	r2, [fp, #-2096]	; 0xfffff7d0
    4af0:	mov	r3, #0
    4af4:	strb	r3, [r4, #-2052]	; 0xfffff7fc
    4af8:	bl	1298 <memcmp@plt>
    4afc:	cmp	r0, #0
    4b00:	bne	4b14 <__snprintf_chk@plt+0x3594>
    4b04:	ldr	r1, [fp, #-2100]	; 0xfffff7cc
    4b08:	ldrb	r2, [r1, #-2052]	; 0xfffff7fc
    4b0c:	cmp	r2, #61	; 0x3d
    4b10:	beq	4b84 <__snprintf_chk@plt+0x3604>
    4b14:	cmp	r8, #0
    4b18:	beq	4a9c <__snprintf_chk@plt+0x351c>
    4b1c:	mov	r4, #0
    4b20:	mov	r0, r4
    4b24:	ldr	r3, [fp, #-2104]	; 0xfffff7c8
    4b28:	str	r0, [r3]
    4b2c:	mov	r0, r5
    4b30:	bl	146c <fclose@plt>
    4b34:	ldr	r1, [fp, #-2108]	; 0xfffff7c4
    4b38:	mov	r0, r4
    4b3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    4b40:	ldr	r3, [r1]
    4b44:	cmp	r2, r3
    4b48:	bne	4c44 <__snprintf_chk@plt+0x36c4>
    4b4c:	sub	sp, fp, #32
    4b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4b54:	mov	r8, #0
    4b58:	b	4adc <__snprintf_chk@plt+0x355c>
    4b5c:	sub	sp, sp, #40	; 0x28
    4b60:	ldr	r3, [pc, #244]	; 4c5c <__snprintf_chk@plt+0x36dc>
    4b64:	add	r4, sp, #8
    4b68:	mov	r1, #1
    4b6c:	str	r0, [sp]
    4b70:	mov	r2, #27
    4b74:	mov	r0, r4
    4b78:	add	r3, pc, r3
    4b7c:	bl	140c <__sprintf_chk@plt>
    4b80:	b	4a60 <__snprintf_chk@plt+0x34e0>
    4b84:	ldr	r2, [fp, #-2096]	; 0xfffff7d0
    4b88:	add	r0, r2, #1
    4b8c:	add	r0, sl, r0
    4b90:	bl	1418 <__strdup@plt>
    4b94:	cmp	r0, #0
    4b98:	mvneq	r4, #11
    4b9c:	beq	4b2c <__snprintf_chk@plt+0x35ac>
    4ba0:	mov	r4, #1
    4ba4:	b	4b24 <__snprintf_chk@plt+0x35a4>
    4ba8:	sub	sl, fp, #2080	; 0x820
    4bac:	mov	r8, #1
    4bb0:	sub	sl, sl, #8
    4bb4:	b	4adc <__snprintf_chk@plt+0x355c>
    4bb8:	bl	1400 <__errno_location@plt>
    4bbc:	ldr	r4, [r0]
    4bc0:	rsb	r4, r4, #0
    4bc4:	b	4b34 <__snprintf_chk@plt+0x35b4>
    4bc8:	mov	r4, r0
    4bcc:	mov	r0, r5
    4bd0:	bl	146c <fclose@plt>
    4bd4:	mov	r0, r4
    4bd8:	bl	1538 <_Unwind_Resume@plt>
    4bdc:	ldr	r0, [pc, #124]	; 4c60 <__snprintf_chk@plt+0x36e0>
    4be0:	movw	r2, #5869	; 0x16ed
    4be4:	ldr	r1, [pc, #120]	; 4c64 <__snprintf_chk@plt+0x36e4>
    4be8:	ldr	r3, [pc, #120]	; 4c68 <__snprintf_chk@plt+0x36e8>
    4bec:	add	r0, pc, r0
    4bf0:	add	r1, pc, r1
    4bf4:	add	r3, pc, r3
    4bf8:	bl	9700 <__snprintf_chk@plt+0x8180>
    4bfc:	ldr	r0, [pc, #104]	; 4c6c <__snprintf_chk@plt+0x36ec>
    4c00:	movw	r2, #5870	; 0x16ee
    4c04:	ldr	r1, [pc, #100]	; 4c70 <__snprintf_chk@plt+0x36f0>
    4c08:	ldr	r3, [pc, #100]	; 4c74 <__snprintf_chk@plt+0x36f4>
    4c0c:	add	r0, pc, r0
    4c10:	add	r1, pc, r1
    4c14:	add	r3, pc, r3
    4c18:	bl	9700 <__snprintf_chk@plt+0x8180>
    4c1c:	ldr	r0, [pc, #84]	; 4c78 <__snprintf_chk@plt+0x36f8>
    4c20:	movw	r2, #5871	; 0x16ef
    4c24:	ldr	r1, [pc, #80]	; 4c7c <__snprintf_chk@plt+0x36fc>
    4c28:	ldr	r3, [pc, #80]	; 4c80 <__snprintf_chk@plt+0x3700>
    4c2c:	add	r0, pc, r0
    4c30:	add	r1, pc, r1
    4c34:	add	r3, pc, r3
    4c38:	bl	9700 <__snprintf_chk@plt+0x8180>
    4c3c:	mov	r4, r0
    4c40:	b	4bd4 <__snprintf_chk@plt+0x3654>
    4c44:	bl	12b0 <__stack_chk_fail@plt>
    4c48:	b	4c3c <__snprintf_chk@plt+0x36bc>
    4c4c:	andeq	ip, r1, r8, ror #8
    4c50:	andeq	r0, r0, r4, asr r1
    4c54:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    4c58:	andeq	r7, r0, r4, asr #20
    4c5c:	ldrdeq	r8, [r0], -r4
    4c60:	strdeq	r7, [r0], -r4
    4c64:	andeq	r7, r0, ip, asr sl
    4c68:	andeq	r7, r0, r0, lsr sl
    4c6c:	andeq	r7, r0, r4, lsl #26
    4c70:	andeq	r7, r0, ip, lsr sl
    4c74:	andeq	r7, r0, r0, lsl sl
    4c78:	andeq	r8, r0, r8, lsl r5
    4c7c:	andeq	r7, r0, ip, lsl sl
    4c80:	strdeq	r7, [r0], -r0
    4c84:	push	{r3, lr}
    4c88:	ldr	r3, [pc, #244]	; 4d84 <__snprintf_chk@plt+0x3804>
    4c8c:	add	r3, pc, r3
    4c90:	ldr	r3, [r3]
    4c94:	cmp	r3, #0
    4c98:	blt	4ca8 <__snprintf_chk@plt+0x3728>
    4c9c:	moveq	r0, #0
    4ca0:	movne	r0, #1
    4ca4:	pop	{r3, pc}
    4ca8:	ldr	r1, [pc, #216]	; 4d88 <__snprintf_chk@plt+0x3808>
    4cac:	mov	r0, #6
    4cb0:	add	r1, pc, r1
    4cb4:	bl	1490 <setlocale@plt>
    4cb8:	cmp	r0, #0
    4cbc:	beq	4ce4 <__snprintf_chk@plt+0x3764>
    4cc0:	mov	r0, #14
    4cc4:	bl	14b4 <nl_langinfo@plt>
    4cc8:	cmp	r0, #0
    4ccc:	beq	4ce4 <__snprintf_chk@plt+0x3764>
    4cd0:	ldr	r1, [pc, #180]	; 4d8c <__snprintf_chk@plt+0x380c>
    4cd4:	add	r1, pc, r1
    4cd8:	bl	1208 <strcmp@plt>
    4cdc:	cmp	r0, #0
    4ce0:	bne	4cfc <__snprintf_chk@plt+0x377c>
    4ce4:	ldr	r2, [pc, #164]	; 4d90 <__snprintf_chk@plt+0x3810>
    4ce8:	mov	r3, #1
    4cec:	mov	r0, r3
    4cf0:	add	r2, pc, r2
    4cf4:	str	r3, [r2]
    4cf8:	pop	{r3, pc}
    4cfc:	mov	r0, #0
    4d00:	mov	r1, r0
    4d04:	bl	1490 <setlocale@plt>
    4d08:	cmp	r0, #0
    4d0c:	beq	4ce4 <__snprintf_chk@plt+0x3764>
    4d10:	ldrb	r3, [r0]
    4d14:	cmp	r3, #67	; 0x43
    4d18:	bne	4d3c <__snprintf_chk@plt+0x37bc>
    4d1c:	ldrb	r3, [r0, #1]
    4d20:	cmp	r3, #0
    4d24:	bne	4d3c <__snprintf_chk@plt+0x37bc>
    4d28:	ldr	r0, [pc, #100]	; 4d94 <__snprintf_chk@plt+0x3814>
    4d2c:	add	r0, pc, r0
    4d30:	bl	1334 <getenv@plt>
    4d34:	cmp	r0, #0
    4d38:	beq	4d54 <__snprintf_chk@plt+0x37d4>
    4d3c:	mov	r0, #0
    4d40:	mov	r3, r0
    4d44:	ldr	r2, [pc, #76]	; 4d98 <__snprintf_chk@plt+0x3818>
    4d48:	add	r2, pc, r2
    4d4c:	str	r3, [r2]
    4d50:	pop	{r3, pc}
    4d54:	ldr	r0, [pc, #64]	; 4d9c <__snprintf_chk@plt+0x381c>
    4d58:	add	r0, pc, r0
    4d5c:	bl	1334 <getenv@plt>
    4d60:	cmp	r0, #0
    4d64:	bne	4d3c <__snprintf_chk@plt+0x37bc>
    4d68:	ldr	r0, [pc, #48]	; 4da0 <__snprintf_chk@plt+0x3820>
    4d6c:	add	r0, pc, r0
    4d70:	bl	1334 <getenv@plt>
    4d74:	rsbs	r0, r0, #1
    4d78:	movcc	r0, #0
    4d7c:	mov	r3, r0
    4d80:	b	4d44 <__snprintf_chk@plt+0x37c4>
    4d84:	andeq	ip, r1, r8, ror r3
    4d88:			; <UNDEFINED> instruction: 0x000074b0
    4d8c:	andeq	r8, r0, r8, lsr r5
    4d90:	andeq	ip, r1, r4, lsl r3
    4d94:	andeq	r8, r0, r8, ror #9
    4d98:			; <UNDEFINED> instruction: 0x0001c2bc
    4d9c:	andeq	r8, r0, r4, asr #9
    4da0:			; <UNDEFINED> instruction: 0x000084bc
    4da4:	push	{r4, lr}
    4da8:	mov	r4, r0
    4dac:	bl	4c84 <__snprintf_chk@plt+0x3704>
    4db0:	ldr	r3, [pc, #20]	; 4dcc <__snprintf_chk@plt+0x384c>
    4db4:	add	r3, pc, r3
    4db8:	eor	r0, r0, #1
    4dbc:	uxtb	r0, r0
    4dc0:	add	r4, r4, r0, lsl #3
    4dc4:	ldr	r0, [r3, r4, lsl #2]
    4dc8:	pop	{r4, pc}
    4dcc:	andeq	fp, r1, r8, lsl #30
    4dd0:	push	{r4, r5, r6, r7, r8, lr}
    4dd4:	subs	r7, r0, #0
    4dd8:	mov	r4, r1
    4ddc:	mov	r5, r2
    4de0:	mov	r6, r3
    4de4:	beq	4e4c <__snprintf_chk@plt+0x38cc>
    4de8:	cmp	r1, #0
    4dec:	beq	4e6c <__snprintf_chk@plt+0x38ec>
    4df0:	ldr	r3, [r1]
    4df4:	cmp	r3, r2
    4df8:	bcs	4e3c <__snprintf_chk@plt+0x38bc>
    4dfc:	mov	r1, r6
    4e00:	mov	r0, #64	; 0x40
    4e04:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    4e08:	lsl	r8, r5, #1
    4e0c:	mul	r5, r6, r5
    4e10:	cmp	r8, r0
    4e14:	movcc	r8, r0
    4e18:	mul	r1, r6, r8
    4e1c:	cmp	r1, r5
    4e20:	bcc	4e44 <__snprintf_chk@plt+0x38c4>
    4e24:	ldr	r0, [r7]
    4e28:	bl	12bc <realloc@plt>
    4e2c:	cmp	r0, #0
    4e30:	strne	r0, [r7]
    4e34:	strne	r8, [r4]
    4e38:	pop	{r4, r5, r6, r7, r8, pc}
    4e3c:	ldr	r0, [r7]
    4e40:	pop	{r4, r5, r6, r7, r8, pc}
    4e44:	mov	r0, #0
    4e48:	pop	{r4, r5, r6, r7, r8, pc}
    4e4c:	ldr	r0, [pc, #56]	; 4e8c <__snprintf_chk@plt+0x390c>
    4e50:	movw	r2, #6664	; 0x1a08
    4e54:	ldr	r1, [pc, #52]	; 4e90 <__snprintf_chk@plt+0x3910>
    4e58:	ldr	r3, [pc, #52]	; 4e94 <__snprintf_chk@plt+0x3914>
    4e5c:	add	r0, pc, r0
    4e60:	add	r1, pc, r1
    4e64:	add	r3, pc, r3
    4e68:	bl	9700 <__snprintf_chk@plt+0x8180>
    4e6c:	ldr	r0, [pc, #36]	; 4e98 <__snprintf_chk@plt+0x3918>
    4e70:	movw	r2, #6665	; 0x1a09
    4e74:	ldr	r1, [pc, #32]	; 4e9c <__snprintf_chk@plt+0x391c>
    4e78:	ldr	r3, [pc, #32]	; 4ea0 <__snprintf_chk@plt+0x3920>
    4e7c:	add	r0, pc, r0
    4e80:	add	r1, pc, r1
    4e84:	add	r3, pc, r3
    4e88:	bl	9700 <__snprintf_chk@plt+0x8180>
    4e8c:	strdeq	r9, [r0], -r8
    4e90:	andeq	r7, r0, ip, ror #15
    4e94:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    4e98:	andeq	r8, r0, r0, lsl r4
    4e9c:	andeq	r7, r0, ip, asr #15
    4ea0:	andeq	r8, r0, r8, ror pc
    4ea4:	ldr	ip, [pc, #852]	; 5200 <__snprintf_chk@plt+0x3c80>
    4ea8:	cmp	r3, #0
    4eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4eb0:	add	fp, sp, #32
    4eb4:	ldr	lr, [pc, #840]	; 5204 <__snprintf_chk@plt+0x3c84>
    4eb8:	sub	sp, sp, #44	; 0x2c
    4ebc:	add	ip, pc, ip
    4ec0:	str	r3, [fp, #-64]	; 0xffffffc0
    4ec4:	mov	r4, r1
    4ec8:	str	r2, [fp, #-68]	; 0xffffffbc
    4ecc:	mov	r3, ip
    4ed0:	str	r0, [fp, #-60]	; 0xffffffc4
    4ed4:	mov	r2, #0
    4ed8:	ldr	lr, [ip, lr]
    4edc:	str	r2, [fp, #-48]	; 0xffffffd0
    4ee0:	ldr	r3, [lr]
    4ee4:	str	lr, [fp, #-56]	; 0xffffffc8
    4ee8:	str	r3, [fp, #-40]	; 0xffffffd8
    4eec:	beq	50d8 <__snprintf_chk@plt+0x3b58>
    4ef0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4ef4:	cmp	r2, #0
    4ef8:	blt	5110 <__snprintf_chk@plt+0x3b90>
    4efc:	bne	5060 <__snprintf_chk@plt+0x3ae0>
    4f00:	ldr	r5, [pc, #768]	; 5208 <__snprintf_chk@plt+0x3c88>
    4f04:	add	r5, pc, r5
    4f08:	ldr	r1, [pc, #764]	; 520c <__snprintf_chk@plt+0x3c8c>
    4f0c:	mov	r0, r5
    4f10:	add	r1, pc, r1
    4f14:	bl	14f0 <fopen64@plt>
    4f18:	subs	r6, r0, #0
    4f1c:	beq	50b0 <__snprintf_chk@plt+0x3b30>
    4f20:	cmp	r4, #0
    4f24:	bne	5138 <__snprintf_chk@plt+0x3bb8>
    4f28:	str	r4, [fp, #-44]	; 0xffffffd4
    4f2c:	sub	r7, fp, #48	; 0x30
    4f30:	sub	r8, fp, #44	; 0x2c
    4f34:	b	4f84 <__snprintf_chk@plt+0x3a04>
    4f38:	mov	r0, r7
    4f3c:	mov	r1, r8
    4f40:	add	r2, r4, #2
    4f44:	mov	r3, #1
    4f48:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    4f4c:	cmp	r0, #0
    4f50:	beq	5050 <__snprintf_chk@plt+0x3ad0>
    4f54:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4f58:	add	r9, r4, #1
    4f5c:	add	sl, r3, r4
    4f60:	bl	13a0 <__ctype_b_loc@plt>
    4f64:	lsl	r1, r5, #1
    4f68:	mov	r4, r9
    4f6c:	ldr	r0, [r0]
    4f70:	ldrh	r1, [r0, r1]
    4f74:	tst	r1, #16384	; 0x4000
    4f78:	uxtbne	r5, r5
    4f7c:	moveq	r5, #32
    4f80:	strb	r5, [sl]
    4f84:	mov	r0, r6
    4f88:	bl	128c <_IO_getc@plt>
    4f8c:	cmn	r0, #1
    4f90:	mov	r5, r0
    4f94:	bne	4f38 <__snprintf_chk@plt+0x39b8>
    4f98:	cmp	r4, #0
    4f9c:	bne	509c <__snprintf_chk@plt+0x3b1c>
    4fa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4fa4:	cmp	r0, #0
    4fa8:	beq	4fb8 <__snprintf_chk@plt+0x3a38>
    4fac:	ldrb	r3, [r0]
    4fb0:	cmp	r3, #0
    4fb4:	bne	501c <__snprintf_chk@plt+0x3a9c>
    4fb8:	mov	r3, #0
    4fbc:	str	r3, [fp, #-44]	; 0xffffffd4
    4fc0:	bl	1250 <free@plt>
    4fc4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    4fc8:	cmp	r2, #0
    4fcc:	mvneq	r4, #1
    4fd0:	beq	5090 <__snprintf_chk@plt+0x3b10>
    4fd4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4fd8:	sub	r1, fp, #44	; 0x2c
    4fdc:	bl	3e00 <__snprintf_chk@plt+0x2880>
    4fe0:	cmp	r0, #0
    4fe4:	blt	50c0 <__snprintf_chk@plt+0x3b40>
    4fe8:	ldr	r0, [pc, #544]	; 5210 <__snprintf_chk@plt+0x3c90>
    4fec:	mov	r3, #0
    4ff0:	ldr	r2, [pc, #540]	; 5214 <__snprintf_chk@plt+0x3c94>
    4ff4:	add	r0, pc, r0
    4ff8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4ffc:	add	r2, pc, r2
    5000:	bl	4700 <__snprintf_chk@plt+0x3180>
    5004:	cmp	r0, #0
    5008:	str	r0, [fp, #-48]	; 0xffffffd0
    500c:	beq	508c <__snprintf_chk@plt+0x3b0c>
    5010:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5014:	bl	1250 <free@plt>
    5018:	ldr	r0, [fp, #-48]	; 0xffffffd0
    501c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    5020:	mov	r4, #0
    5024:	str	r0, [r1]
    5028:	mov	r0, r6
    502c:	bl	146c <fclose@plt>
    5030:	ldr	r1, [fp, #-56]	; 0xffffffc8
    5034:	mov	r0, r4
    5038:	ldr	r2, [fp, #-40]	; 0xffffffd8
    503c:	ldr	r3, [r1]
    5040:	cmp	r2, r3
    5044:	bne	50c8 <__snprintf_chk@plt+0x3b48>
    5048:	sub	sp, fp, #32
    504c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5050:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5054:	mvn	r4, #11
    5058:	bl	1250 <free@plt>
    505c:	b	5028 <__snprintf_chk@plt+0x3aa8>
    5060:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5064:	sub	sp, sp, #40	; 0x28
    5068:	add	r5, sp, #8
    506c:	mov	r1, #1
    5070:	mov	r2, #27
    5074:	str	r3, [sp]
    5078:	mov	r0, r5
    507c:	ldr	r3, [pc, #404]	; 5218 <__snprintf_chk@plt+0x3c98>
    5080:	add	r3, pc, r3
    5084:	bl	140c <__sprintf_chk@plt>
    5088:	b	4f08 <__snprintf_chk@plt+0x3988>
    508c:	mvn	r4, #11
    5090:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5094:	bl	1250 <free@plt>
    5098:	b	5028 <__snprintf_chk@plt+0x3aa8>
    509c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    50a0:	mov	r3, #0
    50a4:	add	r4, r2, r4
    50a8:	strb	r3, [r4, #-1]
    50ac:	b	4fa0 <__snprintf_chk@plt+0x3a20>
    50b0:	bl	1400 <__errno_location@plt>
    50b4:	ldr	r4, [r0]
    50b8:	rsb	r4, r4, #0
    50bc:	b	5030 <__snprintf_chk@plt+0x3ab0>
    50c0:	mov	r4, r0
    50c4:	b	5090 <__snprintf_chk@plt+0x3b10>
    50c8:	bl	12b0 <__stack_chk_fail@plt>
    50cc:	mov	r4, r0
    50d0:	mov	r0, r4
    50d4:	bl	1538 <_Unwind_Resume@plt>
    50d8:	ldr	r0, [pc, #316]	; 521c <__snprintf_chk@plt+0x3c9c>
    50dc:	movw	r2, #723	; 0x2d3
    50e0:	ldr	r1, [pc, #312]	; 5220 <__snprintf_chk@plt+0x3ca0>
    50e4:	ldr	r3, [pc, #312]	; 5224 <__snprintf_chk@plt+0x3ca4>
    50e8:	add	r0, pc, r0
    50ec:	add	r1, pc, r1
    50f0:	add	r3, pc, r3
    50f4:	bl	9700 <__snprintf_chk@plt+0x8180>
    50f8:	mov	r4, r0
    50fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5100:	bl	1250 <free@plt>
    5104:	mov	r0, r6
    5108:	bl	146c <fclose@plt>
    510c:	b	50d0 <__snprintf_chk@plt+0x3b50>
    5110:	ldr	r0, [pc, #272]	; 5228 <__snprintf_chk@plt+0x3ca8>
    5114:	mov	r2, #724	; 0x2d4
    5118:	ldr	r1, [pc, #268]	; 522c <__snprintf_chk@plt+0x3cac>
    511c:	ldr	r3, [pc, #268]	; 5230 <__snprintf_chk@plt+0x3cb0>
    5120:	add	r0, pc, r0
    5124:	add	r1, pc, r1
    5128:	add	r3, pc, r3
    512c:	bl	9700 <__snprintf_chk@plt+0x8180>
    5130:	mov	r4, r0
    5134:	b	5104 <__snprintf_chk@plt+0x3b84>
    5138:	mov	r0, r4
    513c:	bl	1358 <malloc@plt>
    5140:	cmp	r0, #0
    5144:	mov	r7, r0
    5148:	str	r0, [fp, #-48]	; 0xffffffd0
    514c:	beq	51f4 <__snprintf_chk@plt+0x3c74>
    5150:	mov	r9, #32
    5154:	mov	r5, #0
    5158:	b	5178 <__snprintf_chk@plt+0x3bf8>
    515c:	bl	13a0 <__ctype_b_loc@plt>
    5160:	lsl	r2, r8, #1
    5164:	ldr	r1, [r0]
    5168:	ldrh	r2, [r1, r2]
    516c:	tst	r2, #16384	; 0x4000
    5170:	bne	51c0 <__snprintf_chk@plt+0x3c40>
    5174:	mov	r5, #1
    5178:	mov	r0, r6
    517c:	bl	128c <_IO_getc@plt>
    5180:	cmn	r0, #1
    5184:	mov	r8, r0
    5188:	bne	515c <__snprintf_chk@plt+0x3bdc>
    518c:	cmp	r4, #4
    5190:	movhi	r3, #0
    5194:	strbhi	r3, [r7]
    5198:	bhi	4fa0 <__snprintf_chk@plt+0x3a20>
    519c:	sub	r4, r4, #1
    51a0:	ldr	r1, [pc, #140]	; 5234 <__snprintf_chk@plt+0x3cb4>
    51a4:	mov	r0, r7
    51a8:	add	r1, pc, r1
    51ac:	mov	r2, r4
    51b0:	bl	1274 <memcpy@plt>
    51b4:	mov	r3, #0
    51b8:	strb	r3, [r7, r4]
    51bc:	b	4fa0 <__snprintf_chk@plt+0x3a20>
    51c0:	cmp	r5, #0
    51c4:	beq	51dc <__snprintf_chk@plt+0x3c5c>
    51c8:	cmp	r4, #4
    51cc:	bls	519c <__snprintf_chk@plt+0x3c1c>
    51d0:	strb	r9, [r7]
    51d4:	sub	r4, r4, #1
    51d8:	add	r7, r7, #1
    51dc:	cmp	r4, #4
    51e0:	bls	519c <__snprintf_chk@plt+0x3c1c>
    51e4:	strb	r8, [r7]
    51e8:	sub	r4, r4, #1
    51ec:	add	r7, r7, #1
    51f0:	b	5154 <__snprintf_chk@plt+0x3bd4>
    51f4:	mvn	r4, #11
    51f8:	b	5028 <__snprintf_chk@plt+0x3aa8>
    51fc:	b	50cc <__snprintf_chk@plt+0x3b4c>
    5200:	andeq	fp, r1, r4, asr #31
    5204:	andeq	r0, r0, r4, asr r1
    5208:	muleq	r0, r4, r3
    520c:	muleq	r0, ip, r5
    5210:	andeq	r8, r0, r4, ror r0
    5214:			; <UNDEFINED> instruction: 0x000082b4
    5218:	andeq	r7, r0, ip, asr #15
    521c:	andeq	r7, r0, r0, ror r7
    5220:	andeq	r7, r0, r0, ror #10
    5224:	andeq	r7, r0, r0, lsl r5
    5228:	andeq	r7, r0, r0, asr #13
    522c:	andeq	r7, r0, r8, lsr #10
    5230:	ldrdeq	r7, [r0], -r8
    5234:	andeq	r8, r0, r4, lsl #2
    5238:	push	{r4, lr}
    523c:	subs	r4, r0, #0
    5240:	beq	5280 <__snprintf_chk@plt+0x3d00>
    5244:	mov	r0, #0
    5248:	bl	5870 <__snprintf_chk@plt+0x42f0>
    524c:	cmp	r0, #0
    5250:	ble	526c <__snprintf_chk@plt+0x3cec>
    5254:	mov	r1, #0
    5258:	mov	r3, r4
    525c:	mov	r2, r1
    5260:	mov	r0, #1
    5264:	pop	{r4, lr}
    5268:	b	4ea4 <__snprintf_chk@plt+0x3924>
    526c:	ldr	r0, [pc, #44]	; 52a0 <__snprintf_chk@plt+0x3d20>
    5270:	mov	r1, r4
    5274:	pop	{r4, lr}
    5278:	add	r0, pc, r0
    527c:	b	aa60 <__snprintf_chk@plt+0x94e0>
    5280:	ldr	r0, [pc, #28]	; 52a4 <__snprintf_chk@plt+0x3d24>
    5284:	movw	r2, #6791	; 0x1a87
    5288:	ldr	r1, [pc, #24]	; 52a8 <__snprintf_chk@plt+0x3d28>
    528c:	ldr	r3, [pc, #24]	; 52ac <__snprintf_chk@plt+0x3d2c>
    5290:	add	r0, pc, r0
    5294:	add	r1, pc, r1
    5298:	add	r3, pc, r3
    529c:	bl	9700 <__snprintf_chk@plt+0x8180>
    52a0:	andeq	r8, r0, r4, asr #32
    52a4:	andeq	r7, r0, ip, lsr #10
    52a8:			; <UNDEFINED> instruction: 0x000073b8
    52ac:	andeq	r8, r0, r0, asr #22
    52b0:	ldr	r3, [pc, #868]	; 561c <__snprintf_chk@plt+0x409c>
    52b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    52b8:	subs	r7, r0, #0
    52bc:	ldr	r0, [pc, #860]	; 5620 <__snprintf_chk@plt+0x40a0>
    52c0:	sub	sp, sp, #44	; 0x2c
    52c4:	add	r3, pc, r3
    52c8:	mov	r6, #0
    52cc:	str	r1, [sp, #16]
    52d0:	str	r2, [sp, #20]
    52d4:	ldr	r0, [r3, r0]
    52d8:	str	r6, [sp, #28]
    52dc:	str	r6, [sp, #32]
    52e0:	ldr	r3, [r0]
    52e4:	str	r0, [sp, #8]
    52e8:	str	r3, [sp, #36]	; 0x24
    52ec:	beq	55dc <__snprintf_chk@plt+0x405c>
    52f0:	ldr	sl, [r7]
    52f4:	cmp	sl, #0
    52f8:	beq	55bc <__snprintf_chk@plt+0x403c>
    52fc:	ldr	r2, [sp, #16]
    5300:	cmp	r2, #0
    5304:	beq	55fc <__snprintf_chk@plt+0x407c>
    5308:	ldr	fp, [pc, #788]	; 5624 <__snprintf_chk@plt+0x40a4>
    530c:	add	r8, sp, #28
    5310:	ldr	r3, [pc, #784]	; 5628 <__snprintf_chk@plt+0x40a8>
    5314:	add	r9, sp, #32
    5318:	ldr	r1, [pc, #780]	; 562c <__snprintf_chk@plt+0x40ac>
    531c:	add	fp, pc, fp
    5320:	mvn	r5, #0
    5324:	add	r3, pc, r3
    5328:	add	r1, pc, r1
    532c:	str	r3, [sp, #4]
    5330:	str	r1, [sp, #12]
    5334:	ldrb	r4, [sl]
    5338:	cmp	r5, #6
    533c:	addls	pc, pc, r5, lsl #2
    5340:	b	5498 <__snprintf_chk@plt+0x3f18>
    5344:	b	545c <__snprintf_chk@plt+0x3edc>
    5348:	b	5420 <__snprintf_chk@plt+0x3ea0>
    534c:	b	5400 <__snprintf_chk@plt+0x3e80>
    5350:	b	53c4 <__snprintf_chk@plt+0x3e44>
    5354:	b	53a4 <__snprintf_chk@plt+0x3e24>
    5358:	b	5360 <__snprintf_chk@plt+0x3de0>
    535c:	b	54c8 <__snprintf_chk@plt+0x3f48>
    5360:	cmp	r4, #0
    5364:	beq	5580 <__snprintf_chk@plt+0x4000>
    5368:	mov	r0, r8
    536c:	mov	r1, r9
    5370:	add	r2, r6, #2
    5374:	mov	r3, #1
    5378:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    537c:	cmp	r0, #0
    5380:	beq	5598 <__snprintf_chk@plt+0x4018>
    5384:	ldr	r3, [sp, #28]
    5388:	mov	r5, #4
    538c:	strb	r4, [r3, r6]
    5390:	add	r6, r6, #1
    5394:	ldr	sl, [r7]
    5398:	add	sl, sl, #1
    539c:	str	sl, [r7]
    53a0:	b	5334 <__snprintf_chk@plt+0x3db4>
    53a4:	cmp	r4, #0
    53a8:	beq	558c <__snprintf_chk@plt+0x400c>
    53ac:	cmp	r4, #34	; 0x22
    53b0:	beq	5568 <__snprintf_chk@plt+0x3fe8>
    53b4:	cmp	r4, #92	; 0x5c
    53b8:	bne	5538 <__snprintf_chk@plt+0x3fb8>
    53bc:	mov	r5, #5
    53c0:	b	5398 <__snprintf_chk@plt+0x3e18>
    53c4:	cmp	r4, #0
    53c8:	beq	5580 <__snprintf_chk@plt+0x4000>
    53cc:	mov	r0, r8
    53d0:	mov	r1, r9
    53d4:	add	r2, r6, #2
    53d8:	mov	r3, #1
    53dc:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    53e0:	cmp	r0, #0
    53e4:	beq	5598 <__snprintf_chk@plt+0x4018>
    53e8:	ldr	r3, [sp, #28]
    53ec:	mov	r5, #2
    53f0:	strb	r4, [r3, r6]
    53f4:	add	r6, r6, #1
    53f8:	ldr	sl, [r7]
    53fc:	b	5398 <__snprintf_chk@plt+0x3e18>
    5400:	cmp	r4, #0
    5404:	beq	5580 <__snprintf_chk@plt+0x4000>
    5408:	cmp	r4, #39	; 0x27
    540c:	beq	5568 <__snprintf_chk@plt+0x3fe8>
    5410:	cmp	r4, #92	; 0x5c
    5414:	bne	5538 <__snprintf_chk@plt+0x3fb8>
    5418:	mov	r5, #3
    541c:	b	5398 <__snprintf_chk@plt+0x3e18>
    5420:	cmp	r4, #0
    5424:	beq	5580 <__snprintf_chk@plt+0x4000>
    5428:	mov	r0, r8
    542c:	mov	r1, r9
    5430:	add	r2, r6, #2
    5434:	mov	r3, #1
    5438:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    543c:	cmp	r0, #0
    5440:	beq	5598 <__snprintf_chk@plt+0x4018>
    5444:	ldr	r3, [sp, #28]
    5448:	mov	r5, #0
    544c:	strb	r4, [r3, r6]
    5450:	add	r6, r6, #1
    5454:	ldr	sl, [r7]
    5458:	b	5398 <__snprintf_chk@plt+0x3e18>
    545c:	cmp	r4, #0
    5460:	beq	54e4 <__snprintf_chk@plt+0x3f64>
    5464:	cmp	r4, #39	; 0x27
    5468:	beq	54c0 <__snprintf_chk@plt+0x3f40>
    546c:	cmp	r4, #92	; 0x5c
    5470:	beq	5570 <__snprintf_chk@plt+0x3ff0>
    5474:	cmp	r4, #34	; 0x22
    5478:	beq	5578 <__snprintf_chk@plt+0x3ff8>
    547c:	ldr	r0, [sp, #12]
    5480:	mov	r1, r4
    5484:	bl	13dc <strchr@plt>
    5488:	cmp	r0, #0
    548c:	movne	r5, #6
    5490:	bne	5398 <__snprintf_chk@plt+0x3e18>
    5494:	b	5428 <__snprintf_chk@plt+0x3ea8>
    5498:	cmp	r4, #0
    549c:	beq	54e4 <__snprintf_chk@plt+0x3f64>
    54a0:	mov	r0, fp
    54a4:	mov	r1, r4
    54a8:	bl	13dc <strchr@plt>
    54ac:	cmp	r0, #0
    54b0:	mvnne	r5, #0
    54b4:	bne	5398 <__snprintf_chk@plt+0x3e18>
    54b8:	cmp	r4, #39	; 0x27
    54bc:	bne	546c <__snprintf_chk@plt+0x3eec>
    54c0:	mov	r5, #2
    54c4:	b	5398 <__snprintf_chk@plt+0x3e18>
    54c8:	cmp	r4, #0
    54cc:	beq	54e4 <__snprintf_chk@plt+0x3f64>
    54d0:	mov	r1, r4
    54d4:	ldr	r0, [sp, #4]
    54d8:	bl	13dc <strchr@plt>
    54dc:	cmp	r0, #0
    54e0:	bne	5398 <__snprintf_chk@plt+0x3e18>
    54e4:	ldr	r3, [sp, #28]
    54e8:	cmp	r3, #0
    54ec:	ldreq	r1, [sp, #16]
    54f0:	movne	r0, #0
    54f4:	ldrne	r2, [sp, #16]
    54f8:	moveq	r0, r3
    54fc:	strbne	r0, [r3, r6]
    5500:	moveq	r4, r0
    5504:	ldrne	r3, [sp, #28]
    5508:	movne	r4, #1
    550c:	streq	r3, [r1]
    5510:	strne	r3, [r2]
    5514:	bl	1250 <free@plt>
    5518:	ldr	r1, [sp, #8]
    551c:	ldr	r2, [sp, #36]	; 0x24
    5520:	mov	r0, r4
    5524:	ldr	r3, [r1]
    5528:	cmp	r2, r3
    552c:	bne	55a4 <__snprintf_chk@plt+0x4024>
    5530:	add	sp, sp, #44	; 0x2c
    5534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5538:	mov	r0, r8
    553c:	mov	r1, r9
    5540:	add	r2, r6, #2
    5544:	mov	r3, #1
    5548:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    554c:	cmp	r0, #0
    5550:	beq	5598 <__snprintf_chk@plt+0x4018>
    5554:	ldr	r3, [sp, #28]
    5558:	strb	r4, [r3, r6]
    555c:	add	r6, r6, #1
    5560:	ldr	sl, [r7]
    5564:	b	5398 <__snprintf_chk@plt+0x3e18>
    5568:	mov	r5, #0
    556c:	b	5398 <__snprintf_chk@plt+0x3e18>
    5570:	mov	r5, #1
    5574:	b	5398 <__snprintf_chk@plt+0x3e18>
    5578:	mov	r5, #4
    557c:	b	5398 <__snprintf_chk@plt+0x3e18>
    5580:	ldr	r2, [sp, #20]
    5584:	cmp	r2, #0
    5588:	bne	54e4 <__snprintf_chk@plt+0x3f64>
    558c:	ldr	r0, [sp, #28]
    5590:	mvn	r4, #21
    5594:	b	5514 <__snprintf_chk@plt+0x3f94>
    5598:	ldr	r0, [sp, #28]
    559c:	mvn	r4, #11
    55a0:	b	5514 <__snprintf_chk@plt+0x3f94>
    55a4:	bl	12b0 <__stack_chk_fail@plt>
    55a8:	mov	r4, r0
    55ac:	ldr	r0, [sp, #28]
    55b0:	bl	1250 <free@plt>
    55b4:	mov	r0, r4
    55b8:	bl	1538 <_Unwind_Resume@plt>
    55bc:	ldr	r0, [pc, #108]	; 5630 <__snprintf_chk@plt+0x40b0>
    55c0:	movw	r2, #7766	; 0x1e56
    55c4:	ldr	r1, [pc, #104]	; 5634 <__snprintf_chk@plt+0x40b4>
    55c8:	ldr	r3, [pc, #104]	; 5638 <__snprintf_chk@plt+0x40b8>
    55cc:	add	r0, pc, r0
    55d0:	add	r1, pc, r1
    55d4:	add	r3, pc, r3
    55d8:	bl	9700 <__snprintf_chk@plt+0x8180>
    55dc:	ldr	r0, [pc, #88]	; 563c <__snprintf_chk@plt+0x40bc>
    55e0:	movw	r2, #7765	; 0x1e55
    55e4:	ldr	r1, [pc, #84]	; 5640 <__snprintf_chk@plt+0x40c0>
    55e8:	ldr	r3, [pc, #84]	; 5644 <__snprintf_chk@plt+0x40c4>
    55ec:	add	r0, pc, r0
    55f0:	add	r1, pc, r1
    55f4:	add	r3, pc, r3
    55f8:	bl	9700 <__snprintf_chk@plt+0x8180>
    55fc:	ldr	r0, [pc, #68]	; 5648 <__snprintf_chk@plt+0x40c8>
    5600:	movw	r2, #7767	; 0x1e57
    5604:	ldr	r1, [pc, #64]	; 564c <__snprintf_chk@plt+0x40cc>
    5608:	ldr	r3, [pc, #64]	; 5650 <__snprintf_chk@plt+0x40d0>
    560c:	add	r0, pc, r0
    5610:	add	r1, pc, r1
    5614:	add	r3, pc, r3
    5618:	bl	9700 <__snprintf_chk@plt+0x8180>
    561c:			; <UNDEFINED> instruction: 0x0001bbbc
    5620:	andeq	r0, r0, r4, asr r1
    5624:	andeq	r7, r0, r8, lsr #8
    5628:	andeq	r7, r0, r0, lsr #8
    562c:	andeq	r7, r0, ip, lsl r4
    5630:	andeq	r7, r0, ip, ror #6
    5634:	andeq	r7, r0, ip, ror r0
    5638:	ldrdeq	r8, [r0], -r0
    563c:	andeq	r8, r0, r8, ror #28
    5640:	andeq	r7, r0, ip, asr r0
    5644:			; <UNDEFINED> instruction: 0x000087b0
    5648:			; <UNDEFINED> instruction: 0x000071b0
    564c:	andeq	r7, r0, ip, lsr r0
    5650:	muleq	r0, r0, r7
    5654:	ldr	r3, [pc, #420]	; 5800 <__snprintf_chk@plt+0x4280>
    5658:	mov	r2, #0
    565c:	ldr	r1, [pc, #416]	; 5804 <__snprintf_chk@plt+0x4284>
    5660:	add	r3, pc, r3
    5664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5668:	subs	r9, r0, #0
    566c:	ldr	fp, [r3, r1]
    5670:	sub	sp, sp, #20
    5674:	str	r2, [sp]
    5678:	ldr	r3, [fp]
    567c:	str	r3, [sp, #12]
    5680:	beq	57e0 <__snprintf_chk@plt+0x4260>
    5684:	mov	r0, sp
    5688:	bl	5238 <__snprintf_chk@plt+0x3cb8>
    568c:	cmp	r0, #0
    5690:	blt	57b0 <__snprintf_chk@plt+0x4230>
    5694:	ldr	r8, [pc, #364]	; 5808 <__snprintf_chk@plt+0x4288>
    5698:	add	r6, sp, #16
    569c:	ldr	sl, [pc, #360]	; 580c <__snprintf_chk@plt+0x428c>
    56a0:	add	r7, sp, #8
    56a4:	ldr	r3, [sp]
    56a8:	add	r8, pc, r8
    56ac:	add	sl, pc, sl
    56b0:	mov	r5, #0
    56b4:	str	r3, [r6, #-12]!
    56b8:	mov	r0, r6
    56bc:	mov	r1, r7
    56c0:	mov	r2, #1
    56c4:	str	r5, [sp, #8]
    56c8:	bl	52b0 <__snprintf_chk@plt+0x3d30>
    56cc:	subs	r3, r0, #0
    56d0:	blt	5768 <__snprintf_chk@plt+0x41e8>
    56d4:	beq	5798 <__snprintf_chk@plt+0x4218>
    56d8:	ldr	r3, [r8]
    56dc:	cmp	r3, #0
    56e0:	blt	5760 <__snprintf_chk@plt+0x41e0>
    56e4:	moveq	r0, #0
    56e8:	movne	r0, #1
    56ec:	cmp	r0, #0
    56f0:	ldr	r4, [sp, #8]
    56f4:	bne	5724 <__snprintf_chk@plt+0x41a4>
    56f8:	mov	r1, sl
    56fc:	mov	r2, #3
    5700:	mov	r0, r4
    5704:	bl	1544 <strncmp@plt>
    5708:	cmp	r0, #0
    570c:	bne	5724 <__snprintf_chk@plt+0x41a4>
    5710:	cmn	r4, #3
    5714:	beq	5724 <__snprintf_chk@plt+0x41a4>
    5718:	mov	r0, r4
    571c:	bl	1250 <free@plt>
    5720:	b	56b8 <__snprintf_chk@plt+0x4138>
    5724:	mov	r1, #61	; 0x3d
    5728:	mov	r0, r4
    572c:	bl	13dc <strchr@plt>
    5730:	cmp	r0, #0
    5734:	strbne	r5, [r0]
    5738:	addne	r1, r0, #1
    573c:	ldrne	r4, [sp, #8]
    5740:	moveq	r1, r0
    5744:	mov	r0, r4
    5748:	blx	r9
    574c:	cmp	r0, #0
    5750:	blt	57a8 <__snprintf_chk@plt+0x4228>
    5754:	ldr	r0, [sp, #8]
    5758:	bl	1250 <free@plt>
    575c:	b	56b8 <__snprintf_chk@plt+0x4138>
    5760:	bl	36fc <__snprintf_chk@plt+0x217c>
    5764:	b	56ec <__snprintf_chk@plt+0x416c>
    5768:	mov	r4, r3
    576c:	ldr	r0, [sp, #8]
    5770:	bl	1250 <free@plt>
    5774:	ldr	r0, [sp]
    5778:	bl	1250 <free@plt>
    577c:	ldr	r2, [sp, #12]
    5780:	ldr	r3, [fp]
    5784:	mov	r0, r4
    5788:	cmp	r2, r3
    578c:	bne	57b8 <__snprintf_chk@plt+0x4238>
    5790:	add	sp, sp, #20
    5794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5798:	ldr	r0, [sp, #8]
    579c:	mov	r4, r3
    57a0:	bl	1250 <free@plt>
    57a4:	b	5774 <__snprintf_chk@plt+0x41f4>
    57a8:	mov	r4, r0
    57ac:	b	576c <__snprintf_chk@plt+0x41ec>
    57b0:	mov	r4, r0
    57b4:	b	5774 <__snprintf_chk@plt+0x41f4>
    57b8:	bl	12b0 <__stack_chk_fail@plt>
    57bc:	mov	r4, r0
    57c0:	ldr	r0, [sp, #8]
    57c4:	bl	1250 <free@plt>
    57c8:	ldr	r0, [sp]
    57cc:	bl	1250 <free@plt>
    57d0:	mov	r0, r4
    57d4:	bl	1538 <_Unwind_Resume@plt>
    57d8:	mov	r4, r0
    57dc:	b	57c8 <__snprintf_chk@plt+0x4248>
    57e0:	ldr	r0, [pc, #40]	; 5810 <__snprintf_chk@plt+0x4290>
    57e4:	movw	r2, #6804	; 0x1a94
    57e8:	ldr	r1, [pc, #36]	; 5814 <__snprintf_chk@plt+0x4294>
    57ec:	ldr	r3, [pc, #36]	; 5818 <__snprintf_chk@plt+0x4298>
    57f0:	add	r0, pc, r0
    57f4:	add	r1, pc, r1
    57f8:	add	r3, pc, r3
    57fc:	bl	9700 <__snprintf_chk@plt+0x8180>
    5800:	andeq	fp, r1, r0, lsr #16
    5804:	andeq	r0, r0, r4, asr r1
    5808:	andeq	fp, r1, r0, ror #18
    580c:	andeq	r8, r0, r0, lsr r0
    5810:	andeq	r7, r0, r0, ror #29
    5814:	andeq	r6, r0, r8, asr lr
    5818:	strdeq	r8, [r0], -r0
    581c:	push	{r3, r4, r5, r6, r7, lr}
    5820:	subs	r7, r2, #0
    5824:	mov	r6, r1
    5828:	beq	5868 <__snprintf_chk@plt+0x42e8>
    582c:	cmp	r1, #0
    5830:	beq	5868 <__snprintf_chk@plt+0x42e8>
    5834:	sub	r5, r0, #4
    5838:	mov	r4, #0
    583c:	b	584c <__snprintf_chk@plt+0x42cc>
    5840:	add	r4, r4, #1
    5844:	cmp	r4, r6
    5848:	beq	5868 <__snprintf_chk@plt+0x42e8>
    584c:	ldr	r0, [r5, #4]!
    5850:	mov	r1, r7
    5854:	bl	37bc <__snprintf_chk@plt+0x223c>
    5858:	cmp	r0, #0
    585c:	beq	5840 <__snprintf_chk@plt+0x42c0>
    5860:	mov	r0, r4
    5864:	pop	{r3, r4, r5, r6, r7, pc}
    5868:	mvn	r0, #0
    586c:	pop	{r3, r4, r5, r6, r7, pc}
    5870:	ldr	r3, [pc, #584]	; 5ac0 <__snprintf_chk@plt+0x4540>
    5874:	ldr	r2, [pc, #584]	; 5ac4 <__snprintf_chk@plt+0x4544>
    5878:	add	r3, pc, r3
    587c:	push	{r4, r5, r6, r7, r8, r9, lr}
    5880:	mov	r5, r0
    5884:	ldr	r4, [r3, r2]
    5888:	sub	sp, sp, #12
    588c:	ldr	r0, [pc, #564]	; 5ac8 <__snprintf_chk@plt+0x4548>
    5890:	mov	r6, #0
    5894:	str	r6, [sp]
    5898:	ldr	r3, [r4]
    589c:	add	r0, pc, r0
    58a0:	ldr	r8, [pc, #548]	; 5acc <__snprintf_chk@plt+0x454c>
    58a4:	str	r3, [sp, #4]
    58a8:	bl	1520 <__tls_get_addr@plt>
    58ac:	ldr	r3, [r8, r0]
    58b0:	mov	r2, r0
    58b4:	cmp	r3, r6
    58b8:	blt	5908 <__snprintf_chk@plt+0x4388>
    58bc:	cmp	r5, r6
    58c0:	beq	58f8 <__snprintf_chk@plt+0x4378>
    58c4:	ldr	r1, [pc, #516]	; 5ad0 <__snprintf_chk@plt+0x4550>
    58c8:	mov	r7, r3
    58cc:	mov	r0, r6
    58d0:	ldr	r3, [r2, r1]
    58d4:	str	r3, [r5]
    58d8:	bl	1250 <free@plt>
    58dc:	ldr	r2, [sp, #4]
    58e0:	ldr	r3, [r4]
    58e4:	mov	r0, r7
    58e8:	cmp	r2, r3
    58ec:	bne	5904 <__snprintf_chk@plt+0x4384>
    58f0:	add	sp, sp, #12
    58f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    58f8:	mov	r7, r3
    58fc:	mov	r0, r5
    5900:	b	58d8 <__snprintf_chk@plt+0x4358>
    5904:	bl	12b0 <__stack_chk_fail@plt>
    5908:	ldr	r0, [pc, #452]	; 5ad4 <__snprintf_chk@plt+0x4554>
    590c:	mov	r1, r6
    5910:	add	r0, pc, r0
    5914:	bl	1448 <access@plt>
    5918:	cmp	r0, #0
    591c:	blt	5938 <__snprintf_chk@plt+0x43b8>
    5920:	ldr	r0, [pc, #432]	; 5ad8 <__snprintf_chk@plt+0x4558>
    5924:	mov	r1, r6
    5928:	add	r0, pc, r0
    592c:	bl	1448 <access@plt>
    5930:	cmp	r0, #0
    5934:	blt	59d8 <__snprintf_chk@plt+0x4458>
    5938:	bl	13ac <getpid@plt>
    593c:	cmp	r0, #1
    5940:	beq	5a58 <__snprintf_chk@plt+0x44d8>
    5944:	ldr	r0, [pc, #400]	; 5adc <__snprintf_chk@plt+0x455c>
    5948:	mov	r1, sp
    594c:	add	r0, pc, r0
    5950:	bl	aa60 <__snprintf_chk@plt+0x94e0>
    5954:	cmn	r0, #2
    5958:	beq	5a8c <__snprintf_chk@plt+0x450c>
    595c:	cmp	r0, #0
    5960:	movlt	r7, r0
    5964:	ldrlt	r0, [sp]
    5968:	blt	58d8 <__snprintf_chk@plt+0x4358>
    596c:	ldr	r9, [sp]
    5970:	mov	r6, r9
    5974:	ldrb	r3, [r6]
    5978:	cmp	r3, #108	; 0x6c
    597c:	bne	59ec <__snprintf_chk@plt+0x446c>
    5980:	ldrb	r3, [r6, #1]
    5984:	cmp	r3, #120	; 0x78
    5988:	bne	59ec <__snprintf_chk@plt+0x446c>
    598c:	ldrb	r3, [r6, #2]
    5990:	cmp	r3, #99	; 0x63
    5994:	bne	59ec <__snprintf_chk@plt+0x446c>
    5998:	ldrb	r3, [r6, #3]
    599c:	cmp	r3, #0
    59a0:	bne	59ec <__snprintf_chk@plt+0x446c>
    59a4:	ldr	r6, [pc, #308]	; 5ae0 <__snprintf_chk@plt+0x4560>
    59a8:	mov	r7, #1
    59ac:	add	r6, pc, r6
    59b0:	ldr	r0, [pc, #300]	; 5ae4 <__snprintf_chk@plt+0x4564>
    59b4:	add	r0, pc, r0
    59b8:	bl	1520 <__tls_get_addr@plt>
    59bc:	ldr	r3, [pc, #268]	; 5ad0 <__snprintf_chk@plt+0x4550>
    59c0:	cmp	r5, #0
    59c4:	strne	r6, [r5]
    59c8:	str	r7, [r8, r0]
    59cc:	str	r6, [r0, r3]
    59d0:	mov	r0, r9
    59d4:	b	58d8 <__snprintf_chk@plt+0x4358>
    59d8:	ldr	r6, [pc, #264]	; 5ae8 <__snprintf_chk@plt+0x4568>
    59dc:	mov	r7, #1
    59e0:	ldr	r9, [sp]
    59e4:	add	r6, pc, r6
    59e8:	b	59b0 <__snprintf_chk@plt+0x4430>
    59ec:	ldr	r7, [pc, #248]	; 5aec <__snprintf_chk@plt+0x456c>
    59f0:	mov	r0, r6
    59f4:	add	r7, pc, r7
    59f8:	mov	r1, r7
    59fc:	bl	1208 <strcmp@plt>
    5a00:	cmp	r0, #0
    5a04:	beq	5a4c <__snprintf_chk@plt+0x44cc>
    5a08:	ldr	r7, [pc, #224]	; 5af0 <__snprintf_chk@plt+0x4570>
    5a0c:	mov	r0, r6
    5a10:	add	r7, pc, r7
    5a14:	mov	r1, r7
    5a18:	bl	1208 <strcmp@plt>
    5a1c:	cmp	r0, #0
    5a20:	beq	5a4c <__snprintf_chk@plt+0x44cc>
    5a24:	ldr	r7, [pc, #200]	; 5af4 <__snprintf_chk@plt+0x4574>
    5a28:	mov	r0, r6
    5a2c:	add	r7, pc, r7
    5a30:	mov	r1, r7
    5a34:	bl	1208 <strcmp@plt>
    5a38:	cmp	r0, #0
    5a3c:	ldrne	r6, [pc, #180]	; 5af8 <__snprintf_chk@plt+0x4578>
    5a40:	movne	r7, #1
    5a44:	addne	r6, pc, r6
    5a48:	bne	59b0 <__snprintf_chk@plt+0x4430>
    5a4c:	mov	r6, r7
    5a50:	mov	r7, #1
    5a54:	b	59b0 <__snprintf_chk@plt+0x4430>
    5a58:	ldr	r0, [pc, #156]	; 5afc <__snprintf_chk@plt+0x457c>
    5a5c:	add	r0, pc, r0
    5a60:	bl	1334 <getenv@plt>
    5a64:	subs	r6, r0, #0
    5a68:	beq	5a7c <__snprintf_chk@plt+0x44fc>
    5a6c:	ldrb	r3, [r6]
    5a70:	cmp	r3, #0
    5a74:	ldrne	r9, [sp]
    5a78:	bne	5974 <__snprintf_chk@plt+0x43f4>
    5a7c:	mov	r7, #0
    5a80:	ldr	r9, [sp]
    5a84:	mov	r6, r7
    5a88:	b	59b0 <__snprintf_chk@plt+0x4430>
    5a8c:	ldr	r1, [pc, #108]	; 5b00 <__snprintf_chk@plt+0x4580>
    5a90:	mov	r2, sp
    5a94:	mov	r0, #1
    5a98:	add	r1, pc, r1
    5a9c:	bl	4a00 <__snprintf_chk@plt+0x3480>
    5aa0:	cmp	r0, #0
    5aa4:	bgt	596c <__snprintf_chk@plt+0x43ec>
    5aa8:	b	5a7c <__snprintf_chk@plt+0x44fc>
    5aac:	mov	r4, r0
    5ab0:	ldr	r0, [sp]
    5ab4:	bl	1250 <free@plt>
    5ab8:	mov	r0, r4
    5abc:	bl	1538 <_Unwind_Resume@plt>
    5ac0:	andeq	fp, r1, r8, lsl #12
    5ac4:	andeq	r0, r0, r4, asr r1
    5ac8:	andeq	fp, r1, r4, lsr #14
    5acc:	andeq	r0, r0, r0
    5ad0:	andeq	r0, r0, r8
    5ad4:	andeq	r8, r0, r0, lsr #13
    5ad8:	muleq	r0, r4, r6
    5adc:	andeq	r8, r0, ip, ror r6
    5ae0:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    5ae4:	andeq	fp, r1, ip, lsl #12
    5ae8:	muleq	r0, ip, r5
    5aec:	andeq	r8, r0, r4, lsr #11
    5af0:	andeq	r8, r0, r8, ror r5
    5af4:	andeq	r8, r0, ip, ror r5
    5af8:	andeq	r8, r0, r8, lsr #3
    5afc:	andeq	r7, r0, r4, lsr #17
    5b00:	andeq	r7, r0, r8, ror #16
    5b04:	ldrh	r3, [r0]
    5b08:	ldrh	r0, [r1]
    5b0c:	rsb	r0, r0, r3
    5b10:	bx	lr
    5b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5b18:	sub	sp, sp, #212	; 0xd4
    5b1c:	ldr	lr, [pc, #740]	; 5e08 <__snprintf_chk@plt+0x4888>
    5b20:	add	ip, sp, #72	; 0x48
    5b24:	ldr	r5, [pc, #736]	; 5e0c <__snprintf_chk@plt+0x488c>
    5b28:	mov	r4, #0
    5b2c:	add	lr, pc, lr
    5b30:	ldr	r8, [sp, #252]	; 0xfc
    5b34:	stm	ip, {r0, r1, r2, r3}
    5b38:	ldr	r5, [lr, r5]
    5b3c:	ldr	r3, [sp, #248]	; 0xf8
    5b40:	str	r4, [sp, #88]	; 0x58
    5b44:	ldr	r2, [r5]
    5b48:	cmp	r3, r4
    5b4c:	str	r5, [sp, #68]	; 0x44
    5b50:	ldr	r4, [sp, #260]	; 0x104
    5b54:	ldr	r5, [sp, #256]	; 0x100
    5b58:	str	r2, [sp, #204]	; 0xcc
    5b5c:	beq	5d74 <__snprintf_chk@plt+0x47f4>
    5b60:	cmp	r5, #0
    5b64:	beq	5dd8 <__snprintf_chk@plt+0x4858>
    5b68:	cmp	r4, #0
    5b6c:	beq	5db4 <__snprintf_chk@plt+0x4834>
    5b70:	ldrb	r2, [sp, #79]	; 0x4f
    5b74:	add	r0, sp, #88	; 0x58
    5b78:	ldrb	fp, [sp, #72]	; 0x48
    5b7c:	mov	r1, #1
    5b80:	ldrb	sl, [sp, #73]	; 0x49
    5b84:	ldrb	r9, [sp, #74]	; 0x4a
    5b88:	ldrb	r7, [sp, #75]	; 0x4b
    5b8c:	ldrb	r6, [sp, #76]	; 0x4c
    5b90:	ldrb	lr, [sp, #77]	; 0x4d
    5b94:	ldrb	ip, [sp, #78]	; 0x4e
    5b98:	str	r2, [sp, #28]
    5b9c:	ldrb	r2, [sp, #87]	; 0x57
    5ba0:	str	fp, [sp]
    5ba4:	str	sl, [sp, #4]
    5ba8:	ldrb	fp, [sp, #80]	; 0x50
    5bac:	ldrb	sl, [sp, #81]	; 0x51
    5bb0:	str	r9, [sp, #8]
    5bb4:	str	r7, [sp, #12]
    5bb8:	ldrb	r9, [sp, #82]	; 0x52
    5bbc:	ldrb	r7, [sp, #83]	; 0x53
    5bc0:	str	r6, [sp, #16]
    5bc4:	str	lr, [sp, #20]
    5bc8:	ldrb	r6, [sp, #84]	; 0x54
    5bcc:	ldrb	lr, [sp, #85]	; 0x55
    5bd0:	str	ip, [sp, #24]
    5bd4:	ldrb	ip, [sp, #86]	; 0x56
    5bd8:	str	r2, [sp, #60]	; 0x3c
    5bdc:	ldr	r2, [pc, #556]	; 5e10 <__snprintf_chk@plt+0x4890>
    5be0:	str	fp, [sp, #32]
    5be4:	str	sl, [sp, #36]	; 0x24
    5be8:	add	r2, pc, r2
    5bec:	str	r9, [sp, #40]	; 0x28
    5bf0:	str	r7, [sp, #44]	; 0x2c
    5bf4:	str	r6, [sp, #48]	; 0x30
    5bf8:	str	lr, [sp, #52]	; 0x34
    5bfc:	str	ip, [sp, #56]	; 0x38
    5c00:	bl	1328 <__asprintf_chk@plt>
    5c04:	cmp	r0, #0
    5c08:	blt	5d4c <__snprintf_chk@plt+0x47cc>
    5c0c:	mov	r1, #256	; 0x100
    5c10:	ldr	r0, [sp, #88]	; 0x58
    5c14:	movt	r1, #8
    5c18:	bl	131c <open64@plt>
    5c1c:	subs	r6, r0, #0
    5c20:	blt	5cf8 <__snprintf_chk@plt+0x4778>
    5c24:	mov	r0, #3
    5c28:	mov	r1, r6
    5c2c:	add	r2, sp, #96	; 0x60
    5c30:	bl	12ec <__fxstat64@plt>
    5c34:	cmp	r0, #0
    5c38:	blt	5cf8 <__snprintf_chk@plt+0x4778>
    5c3c:	ldrd	r2, [sp, #144]	; 0x90
    5c40:	cmp	r2, #4
    5c44:	sbcs	ip, r3, #0
    5c48:	blt	5d34 <__snprintf_chk@plt+0x47b4>
    5c4c:	mov	r0, #4
    5c50:	movt	r0, #64	; 0x40
    5c54:	mov	r1, #0
    5c58:	cmp	r0, r2
    5c5c:	sbcs	ip, r1, r3
    5c60:	blt	5d3c <__snprintf_chk@plt+0x47bc>
    5c64:	mov	r0, r6
    5c68:	add	r1, sp, #92	; 0x5c
    5c6c:	mov	r2, #4
    5c70:	bl	1244 <read@plt>
    5c74:	cmp	r0, #0
    5c78:	blt	5cf8 <__snprintf_chk@plt+0x4778>
    5c7c:	cmp	r0, #4
    5c80:	bne	5d34 <__snprintf_chk@plt+0x47b4>
    5c84:	ldr	r9, [sp, #144]	; 0x90
    5c88:	sub	r0, r9, #2
    5c8c:	bl	1358 <malloc@plt>
    5c90:	subs	r7, r0, #0
    5c94:	beq	5d68 <__snprintf_chk@plt+0x47e8>
    5c98:	sub	r2, r9, #4
    5c9c:	mov	r0, r6
    5ca0:	mov	r1, r7
    5ca4:	bl	1244 <read@plt>
    5ca8:	cmp	r0, #0
    5cac:	blt	5cf0 <__snprintf_chk@plt+0x4770>
    5cb0:	ldr	r3, [sp, #144]	; 0x90
    5cb4:	sub	r2, r3, #4
    5cb8:	cmp	r2, r0
    5cbc:	bne	5d58 <__snprintf_chk@plt+0x47d8>
    5cc0:	add	r1, r7, r3
    5cc4:	cmp	r8, #0
    5cc8:	mov	r3, #0
    5ccc:	strb	r3, [r1, #-4]
    5cd0:	strb	r3, [r1, #-3]
    5cd4:	str	r7, [r5]
    5cd8:	str	r2, [r4]
    5cdc:	beq	5d44 <__snprintf_chk@plt+0x47c4>
    5ce0:	ldr	r2, [sp, #92]	; 0x5c
    5ce4:	mov	r4, r3
    5ce8:	str	r2, [r8]
    5cec:	b	5d04 <__snprintf_chk@plt+0x4784>
    5cf0:	mov	r0, r7
    5cf4:	bl	1250 <free@plt>
    5cf8:	bl	1400 <__errno_location@plt>
    5cfc:	ldr	r4, [r0]
    5d00:	rsb	r4, r4, #0
    5d04:	ldr	r0, [sp, #88]	; 0x58
    5d08:	bl	1250 <free@plt>
    5d0c:	mov	r0, r6
    5d10:	bl	3aec <__snprintf_chk@plt+0x256c>
    5d14:	ldr	r1, [sp, #68]	; 0x44
    5d18:	ldr	r2, [sp, #204]	; 0xcc
    5d1c:	mov	r0, r4
    5d20:	ldr	r3, [r1]
    5d24:	cmp	r2, r3
    5d28:	bne	5d70 <__snprintf_chk@plt+0x47f0>
    5d2c:	add	sp, sp, #212	; 0xd4
    5d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d34:	mvn	r4, #4
    5d38:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d3c:	mvn	r4, #6
    5d40:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d44:	mov	r4, r8
    5d48:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d4c:	mvn	r6, #0
    5d50:	mvn	r4, #11
    5d54:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d58:	mov	r0, r7
    5d5c:	mvn	r4, #4
    5d60:	bl	1250 <free@plt>
    5d64:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d68:	mvn	r4, #11
    5d6c:	b	5d04 <__snprintf_chk@plt+0x4784>
    5d70:	bl	12b0 <__stack_chk_fail@plt>
    5d74:	ldr	r0, [pc, #152]	; 5e14 <__snprintf_chk@plt+0x4894>
    5d78:	mov	r2, #78	; 0x4e
    5d7c:	ldr	r1, [pc, #148]	; 5e18 <__snprintf_chk@plt+0x4898>
    5d80:	ldr	r3, [pc, #148]	; 5e1c <__snprintf_chk@plt+0x489c>
    5d84:	add	r0, pc, r0
    5d88:	add	r1, pc, r1
    5d8c:	add	r3, pc, r3
    5d90:	bl	9700 <__snprintf_chk@plt+0x8180>
    5d94:	mov	r4, r0
    5d98:	mvn	r6, #0
    5d9c:	ldr	r0, [sp, #88]	; 0x58
    5da0:	bl	1250 <free@plt>
    5da4:	mov	r0, r6
    5da8:	bl	3aec <__snprintf_chk@plt+0x256c>
    5dac:	mov	r0, r4
    5db0:	bl	1538 <_Unwind_Resume@plt>
    5db4:	ldr	r0, [pc, #100]	; 5e20 <__snprintf_chk@plt+0x48a0>
    5db8:	mov	r2, #80	; 0x50
    5dbc:	ldr	r1, [pc, #96]	; 5e24 <__snprintf_chk@plt+0x48a4>
    5dc0:	ldr	r3, [pc, #96]	; 5e28 <__snprintf_chk@plt+0x48a8>
    5dc4:	add	r0, pc, r0
    5dc8:	add	r1, pc, r1
    5dcc:	add	r3, pc, r3
    5dd0:	bl	9700 <__snprintf_chk@plt+0x8180>
    5dd4:	b	5d94 <__snprintf_chk@plt+0x4814>
    5dd8:	ldr	r0, [pc, #76]	; 5e2c <__snprintf_chk@plt+0x48ac>
    5ddc:	mov	r2, #79	; 0x4f
    5de0:	ldr	r1, [pc, #72]	; 5e30 <__snprintf_chk@plt+0x48b0>
    5de4:	ldr	r3, [pc, #72]	; 5e34 <__snprintf_chk@plt+0x48b4>
    5de8:	add	r0, pc, r0
    5dec:	add	r1, pc, r1
    5df0:	add	r3, pc, r3
    5df4:	bl	9700 <__snprintf_chk@plt+0x8180>
    5df8:	b	5d94 <__snprintf_chk@plt+0x4814>
    5dfc:	b	5d94 <__snprintf_chk@plt+0x4814>
    5e00:	mov	r4, r0
    5e04:	b	5d9c <__snprintf_chk@plt+0x481c>
    5e08:	andeq	fp, r1, r4, asr r3
    5e0c:	andeq	r0, r0, r4, asr r1
    5e10:	andeq	r8, r0, r4, lsl #10
    5e14:	andeq	r6, r0, r4, lsl #18
    5e18:	andeq	r8, r0, r4, asr #6
    5e1c:	andeq	r8, r0, r4, ror #5
    5e20:	andeq	r6, r0, r4, ror ip
    5e24:	andeq	r8, r0, r4, lsl #6
    5e28:	andeq	r8, r0, r4, lsr #5
    5e2c:	strdeq	r8, [r0], -ip
    5e30:	andeq	r8, r0, r0, ror #5
    5e34:	andeq	r8, r0, r0, lsl #5
    5e38:	ldr	ip, [pc, #176]	; 5ef0 <__snprintf_chk@plt+0x4970>
    5e3c:	mov	r1, #0
    5e40:	push	{r4, r5, lr}
    5e44:	add	ip, pc, ip
    5e48:	ldr	lr, [pc, #164]	; 5ef4 <__snprintf_chk@plt+0x4974>
    5e4c:	sub	sp, sp, #36	; 0x24
    5e50:	ldr	r3, [pc, #160]	; 5ef8 <__snprintf_chk@plt+0x4978>
    5e54:	add	r2, sp, #32
    5e58:	ldr	r4, [ip, lr]
    5e5c:	add	r3, pc, r3
    5e60:	str	r0, [sp]
    5e64:	add	lr, sp, #24
    5e68:	str	r1, [r2, #-12]!
    5e6c:	ldr	ip, [r4]
    5e70:	stmib	sp, {r1, r2}
    5e74:	str	lr, [sp, #12]
    5e78:	ldm	r3, {r0, r1, r2, r3}
    5e7c:	str	ip, [sp, #28]
    5e80:	bl	5b14 <__snprintf_chk@plt+0x4594>
    5e84:	cmp	r0, #0
    5e88:	blt	5ecc <__snprintf_chk@plt+0x494c>
    5e8c:	ldr	r3, [sp, #24]
    5e90:	ldr	r0, [sp, #20]
    5e94:	cmp	r3, #1
    5e98:	mvnne	r5, #21
    5e9c:	bne	5eac <__snprintf_chk@plt+0x492c>
    5ea0:	ldrb	r5, [r0]
    5ea4:	adds	r5, r5, #0
    5ea8:	movne	r5, #1
    5eac:	bl	1250 <free@plt>
    5eb0:	ldr	r2, [sp, #28]
    5eb4:	ldr	r3, [r4]
    5eb8:	mov	r0, r5
    5ebc:	cmp	r2, r3
    5ec0:	bne	5ed8 <__snprintf_chk@plt+0x4958>
    5ec4:	add	sp, sp, #36	; 0x24
    5ec8:	pop	{r4, r5, pc}
    5ecc:	mov	r5, r0
    5ed0:	ldr	r0, [sp, #20]
    5ed4:	b	5eac <__snprintf_chk@plt+0x492c>
    5ed8:	bl	12b0 <__stack_chk_fail@plt>
    5edc:	mov	r4, r0
    5ee0:	ldr	r0, [sp, #20]
    5ee4:	bl	1250 <free@plt>
    5ee8:	mov	r0, r4
    5eec:	bl	1538 <_Unwind_Resume@plt>
    5ef0:	andeq	fp, r1, ip, lsr r0
    5ef4:	andeq	r0, r0, r4, asr r1
    5ef8:	andeq	r8, r0, ip, lsr r2
    5efc:	ldr	r0, [pc, #4]	; 5f08 <__snprintf_chk@plt+0x4988>
    5f00:	add	r0, pc, r0
    5f04:	b	5e38 <__snprintf_chk@plt+0x48b8>
    5f08:	andeq	r8, r0, r0, asr r2
    5f0c:	ldr	r0, [pc, #4]	; 5f18 <__snprintf_chk@plt+0x4998>
    5f10:	add	r0, pc, r0
    5f14:	b	5e38 <__snprintf_chk@plt+0x48b8>
    5f18:	andeq	r8, r0, ip, asr #4
    5f1c:	push	{r4, r5, r6, lr}
    5f20:	sub	sp, sp, #48	; 0x30
    5f24:	ldr	r5, [pc, #188]	; 5fe8 <__snprintf_chk@plt+0x4a68>
    5f28:	add	ip, sp, #16
    5f2c:	ldr	r4, [pc, #184]	; 5fec <__snprintf_chk@plt+0x4a6c>
    5f30:	mov	lr, #0
    5f34:	add	r5, pc, r5
    5f38:	ldr	r6, [sp, #68]	; 0x44
    5f3c:	stm	ip, {r0, r1, r2, r3}
    5f40:	mov	r3, r5
    5f44:	ldr	r4, [r5, r4]
    5f48:	ldr	r5, [sp, #64]	; 0x40
    5f4c:	ldm	ip, {r0, r1, r2, r3}
    5f50:	ldr	ip, [r4]
    5f54:	stm	sp, {r5, lr}
    5f58:	add	r5, sp, #36	; 0x24
    5f5c:	str	r5, [sp, #8]
    5f60:	add	r5, sp, #40	; 0x28
    5f64:	str	r5, [sp, #12]
    5f68:	str	ip, [sp, #44]	; 0x2c
    5f6c:	str	lr, [sp, #36]	; 0x24
    5f70:	str	lr, [sp, #40]	; 0x28
    5f74:	bl	5b14 <__snprintf_chk@plt+0x4594>
    5f78:	cmp	r0, #0
    5f7c:	blt	5fc0 <__snprintf_chk@plt+0x4a40>
    5f80:	ldr	r0, [sp, #36]	; 0x24
    5f84:	ldr	r1, [sp, #40]	; 0x28
    5f88:	bl	a1a8 <__snprintf_chk@plt+0x8c28>
    5f8c:	cmp	r0, #0
    5f90:	beq	5fc8 <__snprintf_chk@plt+0x4a48>
    5f94:	mov	r5, #0
    5f98:	str	r0, [r6]
    5f9c:	ldr	r0, [sp, #36]	; 0x24
    5fa0:	bl	1250 <free@plt>
    5fa4:	ldr	r2, [sp, #44]	; 0x2c
    5fa8:	ldr	r3, [r4]
    5fac:	mov	r0, r5
    5fb0:	cmp	r2, r3
    5fb4:	bne	5fd0 <__snprintf_chk@plt+0x4a50>
    5fb8:	add	sp, sp, #48	; 0x30
    5fbc:	pop	{r4, r5, r6, pc}
    5fc0:	mov	r5, r0
    5fc4:	b	5f9c <__snprintf_chk@plt+0x4a1c>
    5fc8:	mvn	r5, #11
    5fcc:	b	5f9c <__snprintf_chk@plt+0x4a1c>
    5fd0:	bl	12b0 <__stack_chk_fail@plt>
    5fd4:	mov	r4, r0
    5fd8:	ldr	r0, [sp, #36]	; 0x24
    5fdc:	bl	1250 <free@plt>
    5fe0:	mov	r0, r4
    5fe4:	bl	1538 <_Unwind_Resume@plt>
    5fe8:	andeq	sl, r1, ip, asr #30
    5fec:	andeq	r0, r0, r4, asr r1
    5ff0:	ldr	ip, [pc, #764]	; 62f4 <__snprintf_chk@plt+0x4d74>
    5ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ff8:	add	ip, pc, ip
    5ffc:	ldr	r4, [pc, #756]	; 62f8 <__snprintf_chk@plt+0x4d78>
    6000:	sub	sp, sp, #84	; 0x54
    6004:	ldr	lr, [pc, #752]	; 62fc <__snprintf_chk@plt+0x4d7c>
    6008:	add	fp, sp, #64	; 0x40
    600c:	mov	r7, r1
    6010:	mov	r1, #9
    6014:	ldr	r9, [ip, r4]
    6018:	add	lr, pc, lr
    601c:	str	r0, [sp, #4]
    6020:	mov	r6, r2
    6024:	str	lr, [sp]
    6028:	mov	r2, #1
    602c:	ldr	lr, [r9]
    6030:	mov	r8, r3
    6034:	mov	r0, fp
    6038:	mov	r3, r1
    603c:	mov	sl, #0
    6040:	mov	r4, #0
    6044:	mov	r5, #0
    6048:	str	sl, [sp, #40]	; 0x28
    604c:	strd	r4, [sp, #48]	; 0x30
    6050:	str	lr, [sp, #76]	; 0x4c
    6054:	strd	r4, [sp, #56]	; 0x38
    6058:	bl	1580 <__snprintf_chk@plt>
    605c:	ldr	r3, [pc, #668]	; 6300 <__snprintf_chk@plt+0x4d80>
    6060:	add	ip, sp, #40	; 0x28
    6064:	str	fp, [sp]
    6068:	add	r3, pc, r3
    606c:	str	ip, [sp, #8]
    6070:	str	sl, [sp, #4]
    6074:	add	ip, sp, #44	; 0x2c
    6078:	ldm	r3, {r0, r1, r2, r3}
    607c:	str	ip, [sp, #12]
    6080:	bl	5b14 <__snprintf_chk@plt+0x4594>
    6084:	cmp	r0, #0
    6088:	movlt	r8, r0
    608c:	ldrlt	r0, [sp, #40]	; 0x28
    6090:	blt	61dc <__snprintf_chk@plt+0x4c5c>
    6094:	ldr	ip, [sp, #44]	; 0x2c
    6098:	cmp	ip, #5
    609c:	ldrls	r0, [sp, #40]	; 0x28
    60a0:	mvnls	r8, #1
    60a4:	bls	61dc <__snprintf_chk@plt+0x4c5c>
    60a8:	ldr	r5, [sp, #40]	; 0x28
    60ac:	add	r0, r5, #6
    60b0:	ldrh	r3, [r5, #6]
    60b4:	mov	sl, r5
    60b8:	cmp	r3, #0
    60bc:	beq	62bc <__snprintf_chk@plt+0x4d3c>
    60c0:	mov	r2, r0
    60c4:	mov	r3, #0
    60c8:	ldrh	r1, [r2, #2]!
    60cc:	add	r3, r3, #1
    60d0:	cmp	r1, #0
    60d4:	bne	60c8 <__snprintf_chk@plt+0x4b48>
    60d8:	add	r3, r3, #1
    60dc:	lsl	r4, r3, #1
    60e0:	sub	ip, ip, #6
    60e4:	cmp	ip, r4
    60e8:	bcc	62c4 <__snprintf_chk@plt+0x4d44>
    60ec:	cmp	r7, #0
    60f0:	beq	62b4 <__snprintf_chk@plt+0x4d34>
    60f4:	mov	r1, r4
    60f8:	bl	a1a8 <__snprintf_chk@plt+0x8c28>
    60fc:	subs	fp, r0, #0
    6100:	beq	62d0 <__snprintf_chk@plt+0x4d50>
    6104:	ldr	r5, [sp, #40]	; 0x28
    6108:	ldrh	r3, [sl, #4]
    610c:	cmp	r3, #0
    6110:	beq	61ac <__snprintf_chk@plt+0x4c2c>
    6114:	add	r2, r4, #6
    6118:	mov	r4, #0
    611c:	add	r5, r5, r2
    6120:	mov	ip, r4
    6124:	add	r1, sp, #56	; 0x38
    6128:	str	r1, [sp, #24]
    612c:	cmp	r4, r3
    6130:	bcs	61a4 <__snprintf_chk@plt+0x4c24>
    6134:	add	lr, r5, r4
    6138:	ldrh	r1, [lr, #2]
    613c:	cmp	r1, #3
    6140:	bls	61a4 <__snprintf_chk@plt+0x4c24>
    6144:	ldrb	r2, [r5, r4]
    6148:	cmp	r2, #127	; 0x7f
    614c:	beq	61fc <__snprintf_chk@plt+0x4c7c>
    6150:	cmp	r2, #4
    6154:	add	r4, r4, r1
    6158:	bne	612c <__snprintf_chk@plt+0x4bac>
    615c:	ldrb	r2, [lr, #1]
    6160:	cmp	r2, #1
    6164:	beq	6210 <__snprintf_chk@plt+0x4c90>
    6168:	cmp	r2, #4
    616c:	bne	612c <__snprintf_chk@plt+0x4bac>
    6170:	rsbs	r2, ip, #1
    6174:	movcc	r2, #0
    6178:	cmp	r8, #0
    617c:	moveq	r2, #0
    6180:	cmp	r2, #0
    6184:	beq	612c <__snprintf_chk@plt+0x4bac>
    6188:	add	r0, lr, #4
    618c:	sub	r1, r1, #4
    6190:	bl	a1a8 <__snprintf_chk@plt+0x8c28>
    6194:	ldrh	r3, [sl, #4]
    6198:	mov	ip, r0
    619c:	cmp	r4, r3
    61a0:	bcc	6134 <__snprintf_chk@plt+0x4bb4>
    61a4:	ldr	r5, [sp, #40]	; 0x28
    61a8:	b	61b0 <__snprintf_chk@plt+0x4c30>
    61ac:	mov	ip, r3
    61b0:	cmp	r7, #0
    61b4:	strne	fp, [r7]
    61b8:	cmp	r6, #0
    61bc:	addne	r3, sp, #48	; 0x30
    61c0:	ldmne	r3, {r0, r1, r2, r3}
    61c4:	stmne	r6, {r0, r1, r2, r3}
    61c8:	cmp	r8, #0
    61cc:	strne	ip, [r8]
    61d0:	moveq	r0, r5
    61d4:	movne	r0, r5
    61d8:	movne	r8, #0
    61dc:	bl	1250 <free@plt>
    61e0:	ldr	r2, [sp, #76]	; 0x4c
    61e4:	ldr	r3, [r9]
    61e8:	mov	r0, r8
    61ec:	cmp	r2, r3
    61f0:	bne	62dc <__snprintf_chk@plt+0x4d5c>
    61f4:	add	sp, sp, #84	; 0x54
    61f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61fc:	ldrb	r2, [lr, #1]
    6200:	cmp	r2, #255	; 0xff
    6204:	beq	61a4 <__snprintf_chk@plt+0x4c24>
    6208:	add	r4, r4, r1
    620c:	b	612c <__snprintf_chk@plt+0x4bac>
    6210:	ldrb	r2, [lr, #40]	; 0x28
    6214:	cmp	r2, #2
    6218:	bne	612c <__snprintf_chk@plt+0x4bac>
    621c:	ldrb	r2, [lr, #41]	; 0x29
    6220:	cmp	r2, #2
    6224:	bne	612c <__snprintf_chk@plt+0x4bac>
    6228:	cmp	r6, #0
    622c:	beq	612c <__snprintf_chk@plt+0x4bac>
    6230:	mov	r1, lr
    6234:	ldr	r2, [lr, #24]
    6238:	ldr	r0, [r1, #32]!
    623c:	strb	r2, [sp, #51]	; 0x33
    6240:	str	r1, [sp, #20]
    6244:	add	r1, sp, #56	; 0x38
    6248:	str	r1, [sp, #28]
    624c:	ldrh	r1, [lr, #28]
    6250:	ldrh	lr, [lr, #30]
    6254:	str	r1, [sp, #32]
    6258:	str	lr, [sp, #36]	; 0x24
    625c:	lsr	lr, r2, #24
    6260:	str	lr, [sp, #16]
    6264:	ldr	lr, [sp, #20]
    6268:	ldr	r1, [lr, #4]
    626c:	ldr	lr, [sp, #16]
    6270:	strb	lr, [sp, #48]	; 0x30
    6274:	lsr	lr, r2, #16
    6278:	lsr	r2, r2, #8
    627c:	strb	r2, [sp, #50]	; 0x32
    6280:	ldr	r2, [sp, #32]
    6284:	strb	lr, [sp, #49]	; 0x31
    6288:	strb	r2, [sp, #53]	; 0x35
    628c:	lsr	lr, r2, #8
    6290:	ldr	r2, [sp, #36]	; 0x24
    6294:	strb	lr, [sp, #52]	; 0x34
    6298:	ldr	lr, [sp, #36]	; 0x24
    629c:	lsr	r2, r2, #8
    62a0:	strb	r2, [sp, #54]	; 0x36
    62a4:	ldr	r2, [sp, #28]
    62a8:	strb	lr, [sp, #55]	; 0x37
    62ac:	stmia	r2!, {r0, r1}
    62b0:	b	612c <__snprintf_chk@plt+0x4bac>
    62b4:	mov	fp, r7
    62b8:	b	6108 <__snprintf_chk@plt+0x4b88>
    62bc:	mov	r4, #2
    62c0:	b	60e0 <__snprintf_chk@plt+0x4b60>
    62c4:	mov	r0, r5
    62c8:	mvn	r8, #21
    62cc:	b	61dc <__snprintf_chk@plt+0x4c5c>
    62d0:	ldr	r0, [sp, #40]	; 0x28
    62d4:	mvn	r8, #11
    62d8:	b	61dc <__snprintf_chk@plt+0x4c5c>
    62dc:	bl	12b0 <__stack_chk_fail@plt>
    62e0:	mov	r4, r0
    62e4:	ldr	r0, [sp, #40]	; 0x28
    62e8:	bl	1250 <free@plt>
    62ec:	mov	r0, r4
    62f0:	bl	1538 <_Unwind_Resume@plt>
    62f4:	andeq	sl, r1, r8, lsl #29
    62f8:	andeq	r0, r0, r4, asr r1
    62fc:	andeq	r8, r0, r0, asr r1
    6300:	andeq	r8, r0, r0, asr #32
    6304:	ldr	r2, [pc, #176]	; 63bc <__snprintf_chk@plt+0x4e3c>
    6308:	ldr	r1, [pc, #176]	; 63c0 <__snprintf_chk@plt+0x4e40>
    630c:	add	r2, pc, r2
    6310:	ldr	r3, [pc, #172]	; 63c4 <__snprintf_chk@plt+0x4e44>
    6314:	push	{r4, r5, r6, lr}
    6318:	sub	sp, sp, #32
    631c:	ldr	r4, [r2, r1]
    6320:	add	r3, pc, r3
    6324:	ldr	r6, [pc, #156]	; 63c8 <__snprintf_chk@plt+0x4e48>
    6328:	mov	lr, #0
    632c:	mov	r5, r0
    6330:	ldr	ip, [r4]
    6334:	add	r6, pc, r6
    6338:	ldm	r3, {r0, r1, r2, r3}
    633c:	stm	sp, {r6, lr}
    6340:	add	lr, sp, #20
    6344:	str	lr, [sp, #8]
    6348:	add	lr, sp, #24
    634c:	str	lr, [sp, #12]
    6350:	str	ip, [sp, #28]
    6354:	bl	5b14 <__snprintf_chk@plt+0x4594>
    6358:	cmp	r0, #0
    635c:	blt	6380 <__snprintf_chk@plt+0x4e00>
    6360:	ldr	r3, [sp, #24]
    6364:	cmp	r3, #0
    6368:	beq	6398 <__snprintf_chk@plt+0x4e18>
    636c:	tst	r3, #1
    6370:	bne	63a8 <__snprintf_chk@plt+0x4e28>
    6374:	ldr	r2, [sp, #20]
    6378:	lsr	r0, r3, #1
    637c:	str	r2, [r5]
    6380:	ldr	r2, [sp, #28]
    6384:	ldr	r3, [r4]
    6388:	cmp	r2, r3
    638c:	bne	63b8 <__snprintf_chk@plt+0x4e38>
    6390:	add	sp, sp, #32
    6394:	pop	{r4, r5, r6, pc}
    6398:	ldr	r0, [sp, #20]
    639c:	bl	1250 <free@plt>
    63a0:	mvn	r0, #1
    63a4:	b	6380 <__snprintf_chk@plt+0x4e00>
    63a8:	ldr	r0, [sp, #20]
    63ac:	bl	1250 <free@plt>
    63b0:	mvn	r0, #21
    63b4:	b	6380 <__snprintf_chk@plt+0x4e00>
    63b8:	bl	12b0 <__stack_chk_fail@plt>
    63bc:	andeq	sl, r1, r4, ror fp
    63c0:	andeq	r0, r0, r4, asr r1
    63c4:	andeq	r7, r0, r8, ror #26
    63c8:	andeq	r7, r0, r0, asr #28
    63cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63d0:	cmp	r0, #0
    63d4:	sub	sp, sp, #12
    63d8:	str	r0, [sp, #4]
    63dc:	beq	65c8 <__snprintf_chk@plt+0x5048>
    63e0:	ldr	r0, [pc, #512]	; 65e8 <__snprintf_chk@plt+0x5068>
    63e4:	add	r0, pc, r0
    63e8:	bl	1310 <opendir@plt>
    63ec:	subs	r6, r0, #0
    63f0:	beq	6540 <__snprintf_chk@plt+0x4fc0>
    63f4:	bl	1400 <__errno_location@plt>
    63f8:	mov	r3, #0
    63fc:	mov	r7, r0
    6400:	mov	r0, r6
    6404:	str	r3, [r7]
    6408:	bl	14cc <readdir64@plt>
    640c:	subs	r5, r0, #0
    6410:	beq	650c <__snprintf_chk@plt+0x4f8c>
    6414:	ldr	r9, [pc, #464]	; 65ec <__snprintf_chk@plt+0x506c>
    6418:	mov	sl, #0
    641c:	ldr	r3, [pc, #460]	; 65f0 <__snprintf_chk@plt+0x5070>
    6420:	mov	fp, sl
    6424:	add	r9, pc, r9
    6428:	mov	r8, sl
    642c:	add	r3, pc, r3
    6430:	str	r3, [sp]
    6434:	b	644c <__snprintf_chk@plt+0x4ecc>
    6438:	str	r8, [r7]
    643c:	mov	r0, r6
    6440:	bl	14cc <readdir64@plt>
    6444:	subs	r5, r0, #0
    6448:	beq	6514 <__snprintf_chk@plt+0x4f94>
    644c:	add	r4, r5, #19
    6450:	mov	r0, r4
    6454:	bl	4058 <__snprintf_chk@plt+0x2ad8>
    6458:	cmp	r0, #0
    645c:	bne	6438 <__snprintf_chk@plt+0x4eb8>
    6460:	mov	r0, r4
    6464:	mov	r1, r9
    6468:	mov	r2, #4
    646c:	bl	1544 <strncmp@plt>
    6470:	cmp	r0, #0
    6474:	bne	6438 <__snprintf_chk@plt+0x4eb8>
    6478:	mov	r0, r4
    647c:	bl	13d0 <strlen@plt>
    6480:	cmp	r0, #45	; 0x2d
    6484:	bne	6438 <__snprintf_chk@plt+0x4eb8>
    6488:	add	r0, r5, #27
    648c:	ldr	r1, [sp]
    6490:	bl	1208 <strcmp@plt>
    6494:	cmp	r0, #0
    6498:	bne	6438 <__snprintf_chk@plt+0x4eb8>
    649c:	add	r5, r5, #22
    64a0:	mov	r4, r0
    64a4:	mov	r3, #12
    64a8:	ldrb	r2, [r5, #1]!
    64ac:	sub	r1, r2, #48	; 0x30
    64b0:	uxtb	r0, r1
    64b4:	cmp	r0, #9
    64b8:	orrls	r4, r4, r1, lsl r3
    64bc:	bls	64d4 <__snprintf_chk@plt+0x4f54>
    64c0:	sub	r1, r2, #65	; 0x41
    64c4:	cmp	r1, #5
    64c8:	bhi	6438 <__snprintf_chk@plt+0x4eb8>
    64cc:	sub	r2, r2, #55	; 0x37
    64d0:	orr	r4, r4, r2, lsl r3
    64d4:	sub	r3, r3, #4
    64d8:	cmn	r3, #4
    64dc:	bne	64a8 <__snprintf_chk@plt+0x4f28>
    64e0:	add	sl, sl, #1
    64e4:	mov	r0, fp
    64e8:	lsl	r5, sl, #1
    64ec:	mov	r1, r5
    64f0:	bl	12bc <realloc@plt>
    64f4:	cmp	r0, #0
    64f8:	beq	658c <__snprintf_chk@plt+0x500c>
    64fc:	add	r5, r0, r5
    6500:	mov	fp, r0
    6504:	strh	r4, [r5, #-2]
    6508:	b	6438 <__snprintf_chk@plt+0x4eb8>
    650c:	mov	sl, r5
    6510:	mov	fp, r5
    6514:	ldr	r3, [r7]
    6518:	cmp	r3, #0
    651c:	rsbgt	sl, r3, #0
    6520:	ble	6558 <__snprintf_chk@plt+0x4fd8>
    6524:	mov	r0, fp
    6528:	bl	1250 <free@plt>
    652c:	mov	r0, r6
    6530:	bl	1574 <closedir@plt>
    6534:	mov	r0, sl
    6538:	add	sp, sp, #12
    653c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6540:	bl	1400 <__errno_location@plt>
    6544:	ldr	sl, [r0]
    6548:	rsb	sl, sl, #0
    654c:	mov	r0, sl
    6550:	add	sp, sp, #12
    6554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6558:	cmp	sl, #0
    655c:	beq	6580 <__snprintf_chk@plt+0x5000>
    6560:	cmp	fp, #0
    6564:	beq	65a8 <__snprintf_chk@plt+0x5028>
    6568:	ldr	r3, [pc, #132]	; 65f4 <__snprintf_chk@plt+0x5074>
    656c:	mov	r0, fp
    6570:	mov	r1, sl
    6574:	mov	r2, #2
    6578:	add	r3, pc, r3
    657c:	bl	14fc <qsort@plt>
    6580:	ldr	r3, [sp, #4]
    6584:	str	fp, [r3]
    6588:	b	652c <__snprintf_chk@plt+0x4fac>
    658c:	mvn	sl, #11
    6590:	b	6524 <__snprintf_chk@plt+0x4fa4>
    6594:	mov	r4, r0
    6598:	mov	r0, r6
    659c:	bl	1574 <closedir@plt>
    65a0:	mov	r0, r4
    65a4:	bl	1538 <_Unwind_Resume@plt>
    65a8:	ldr	r0, [pc, #72]	; 65f8 <__snprintf_chk@plt+0x5078>
    65ac:	movw	r2, #978	; 0x3d2
    65b0:	ldr	r1, [pc, #68]	; 65fc <__snprintf_chk@plt+0x507c>
    65b4:	ldr	r3, [pc, #68]	; 6600 <__snprintf_chk@plt+0x5080>
    65b8:	add	r0, pc, r0
    65bc:	add	r1, pc, r1
    65c0:	add	r3, pc, r3
    65c4:	bl	9700 <__snprintf_chk@plt+0x8180>
    65c8:	ldr	r0, [pc, #52]	; 6604 <__snprintf_chk@plt+0x5084>
    65cc:	movw	r2, #350	; 0x15e
    65d0:	ldr	r1, [pc, #48]	; 6608 <__snprintf_chk@plt+0x5088>
    65d4:	ldr	r3, [pc, #48]	; 660c <__snprintf_chk@plt+0x508c>
    65d8:	add	r0, pc, r0
    65dc:	add	r1, pc, r1
    65e0:	add	r3, pc, r3
    65e4:	bl	9700 <__snprintf_chk@plt+0x8180>
    65e8:	andeq	r7, r0, r4, lsr #27
    65ec:	andeq	r7, r0, r0, lsl #27
    65f0:	andeq	r7, r0, r0, lsl #27
    65f4:			; <UNDEFINED> instruction: 0xfffff584
    65f8:	andeq	r7, r0, ip, lsl ip
    65fc:	andeq	r7, r0, r0, lsr #24
    6600:	andeq	r7, r0, r4, ror #25
    6604:	andeq	r7, r0, r8, lsr #23
    6608:	strdeq	r7, [r0], -r0
    660c:	andeq	r7, r0, ip, lsr #25
    6610:	ldr	r3, [pc, #332]	; 6764 <__snprintf_chk@plt+0x51e4>
    6614:	ldr	r1, [pc, #332]	; 6768 <__snprintf_chk@plt+0x51e8>
    6618:	add	r3, pc, r3
    661c:	ldr	r2, [pc, #328]	; 676c <__snprintf_chk@plt+0x51ec>
    6620:	push	{r4, r5, r6, r7, lr}
    6624:	sub	sp, sp, #132	; 0x84
    6628:	ldr	r6, [r3, r1]
    662c:	add	r5, sp, #128	; 0x80
    6630:	add	r2, pc, r2
    6634:	ldr	lr, [pc, #308]	; 6770 <__snprintf_chk@plt+0x51f0>
    6638:	mov	r7, r0
    663c:	mov	r4, #0
    6640:	ldr	ip, [r6]
    6644:	add	lr, pc, lr
    6648:	str	r4, [r5, #-72]!	; 0xffffffb8
    664c:	ldm	r2, {r0, r1, r2, r3}
    6650:	str	lr, [sp]
    6654:	str	r5, [sp, #4]
    6658:	str	ip, [sp, #124]	; 0x7c
    665c:	bl	5f1c <__snprintf_chk@plt+0x499c>
    6660:	cmp	r0, #0
    6664:	movlt	r4, r0
    6668:	blt	6720 <__snprintf_chk@plt+0x51a0>
    666c:	ldr	r1, [pc, #256]	; 6774 <__snprintf_chk@plt+0x51f4>
    6670:	add	r3, sp, #68	; 0x44
    6674:	ldr	r0, [sp, #56]	; 0x38
    6678:	add	r4, sp, #120	; 0x78
    667c:	str	r3, [sp]
    6680:	add	r2, sp, #60	; 0x3c
    6684:	add	r3, sp, #72	; 0x48
    6688:	str	r4, [sp, #52]	; 0x34
    668c:	str	r3, [sp, #4]
    6690:	add	r1, pc, r1
    6694:	add	r3, sp, #76	; 0x4c
    6698:	str	r3, [sp, #8]
    669c:	add	r3, sp, #80	; 0x50
    66a0:	str	r3, [sp, #12]
    66a4:	add	r3, sp, #84	; 0x54
    66a8:	str	r3, [sp, #16]
    66ac:	add	r3, sp, #88	; 0x58
    66b0:	str	r3, [sp, #20]
    66b4:	add	r3, sp, #92	; 0x5c
    66b8:	str	r3, [sp, #24]
    66bc:	add	r3, sp, #96	; 0x60
    66c0:	str	r3, [sp, #28]
    66c4:	add	r3, sp, #100	; 0x64
    66c8:	str	r3, [sp, #32]
    66cc:	add	r3, sp, #104	; 0x68
    66d0:	str	r3, [sp, #36]	; 0x24
    66d4:	add	r3, sp, #108	; 0x6c
    66d8:	str	r3, [sp, #40]	; 0x28
    66dc:	add	r3, sp, #112	; 0x70
    66e0:	str	r3, [sp, #44]	; 0x2c
    66e4:	add	r3, sp, #116	; 0x74
    66e8:	str	r3, [sp, #48]	; 0x30
    66ec:	add	r3, sp, #64	; 0x40
    66f0:	bl	14c0 <sscanf@plt>
    66f4:	cmp	r0, #16
    66f8:	bne	6744 <__snprintf_chk@plt+0x51c4>
    66fc:	cmp	r7, #0
    6700:	subne	r0, r7, #1
    6704:	movne	r3, r5
    6708:	beq	671c <__snprintf_chk@plt+0x519c>
    670c:	ldr	r2, [r3, #4]!
    6710:	cmp	r3, r4
    6714:	strb	r2, [r0, #1]!
    6718:	bne	670c <__snprintf_chk@plt+0x518c>
    671c:	mov	r4, #0
    6720:	ldr	r0, [sp, #56]	; 0x38
    6724:	bl	1250 <free@plt>
    6728:	ldr	r2, [sp, #124]	; 0x7c
    672c:	ldr	r3, [r6]
    6730:	mov	r0, r4
    6734:	cmp	r2, r3
    6738:	bne	674c <__snprintf_chk@plt+0x51cc>
    673c:	add	sp, sp, #132	; 0x84
    6740:	pop	{r4, r5, r6, r7, pc}
    6744:	mvn	r4, #4
    6748:	b	6720 <__snprintf_chk@plt+0x51a0>
    674c:	bl	12b0 <__stack_chk_fail@plt>
    6750:	mov	r4, r0
    6754:	ldr	r0, [sp, #56]	; 0x38
    6758:	bl	1250 <free@plt>
    675c:	mov	r0, r4
    6760:	bl	1538 <_Unwind_Resume@plt>
    6764:	andeq	sl, r1, r8, ror #16
    6768:	andeq	r0, r0, r4, asr r1
    676c:	andeq	r7, r0, r0, lsr sl
    6770:	andeq	r7, r0, r8, ror #23
    6774:			; <UNDEFINED> instruction: 0x00007bb4
    6778:	push	{r3, r4, r5, r6, r7, lr}
    677c:	subs	r7, r0, #0
    6780:	mov	r6, r1
    6784:	beq	68f8 <__snprintf_chk@plt+0x5378>
    6788:	cmp	r1, #0
    678c:	beq	6918 <__snprintf_chk@plt+0x5398>
    6790:	ldrb	r3, [r1]
    6794:	ldrb	ip, [r7]
    6798:	subs	r1, r3, #47	; 0x2f
    679c:	rsbs	r2, r1, #0
    67a0:	adcs	r2, r2, r1
    67a4:	cmp	ip, #47	; 0x2f
    67a8:	eoreq	r2, r2, #1
    67ac:	cmp	r2, #0
    67b0:	bne	68b8 <__snprintf_chk@plt+0x5338>
    67b4:	cmp	ip, #47	; 0x2f
    67b8:	bne	6898 <__snprintf_chk@plt+0x5318>
    67bc:	add	r2, r7, #1
    67c0:	mov	r0, r2
    67c4:	ldrb	ip, [r2], #1
    67c8:	cmp	ip, #47	; 0x2f
    67cc:	beq	67c0 <__snprintf_chk@plt+0x5240>
    67d0:	cmp	r3, #47	; 0x2f
    67d4:	bne	68a4 <__snprintf_chk@plt+0x5324>
    67d8:	add	r3, r6, #1
    67dc:	mov	r1, r3
    67e0:	ldrb	r2, [r3], #1
    67e4:	cmp	r2, #47	; 0x2f
    67e8:	beq	67dc <__snprintf_chk@plt+0x525c>
    67ec:	cmp	r2, #0
    67f0:	popeq	{r3, r4, r5, r6, r7, pc}
    67f4:	cmp	ip, #0
    67f8:	beq	68f0 <__snprintf_chk@plt+0x5370>
    67fc:	ldrb	r2, [r0]
    6800:	cmp	r2, #0
    6804:	beq	68c0 <__snprintf_chk@plt+0x5340>
    6808:	cmp	r2, #47	; 0x2f
    680c:	beq	68d8 <__snprintf_chk@plt+0x5358>
    6810:	add	r3, r0, #1
    6814:	mov	r2, #0
    6818:	b	6824 <__snprintf_chk@plt+0x52a4>
    681c:	cmp	ip, #47	; 0x2f
    6820:	beq	6838 <__snprintf_chk@plt+0x52b8>
    6824:	mov	r7, r3
    6828:	ldrb	ip, [r3], #1
    682c:	add	r2, r2, #1
    6830:	cmp	ip, #0
    6834:	bne	681c <__snprintf_chk@plt+0x529c>
    6838:	ldrb	r5, [r1]
    683c:	cmp	r5, #0
    6840:	beq	68d0 <__snprintf_chk@plt+0x5350>
    6844:	cmp	r5, #47	; 0x2f
    6848:	beq	68e4 <__snprintf_chk@plt+0x5364>
    684c:	add	ip, r1, #1
    6850:	mov	r5, #0
    6854:	b	6860 <__snprintf_chk@plt+0x52e0>
    6858:	cmp	r4, #47	; 0x2f
    685c:	beq	6874 <__snprintf_chk@plt+0x52f4>
    6860:	mov	r6, ip
    6864:	ldrb	r4, [ip], #1
    6868:	add	r5, r5, #1
    686c:	cmp	r4, #0
    6870:	bne	6858 <__snprintf_chk@plt+0x52d8>
    6874:	cmp	r2, r5
    6878:	bne	68b8 <__snprintf_chk@plt+0x5338>
    687c:	bl	1298 <memcmp@plt>
    6880:	cmp	r0, #0
    6884:	bne	68b8 <__snprintf_chk@plt+0x5338>
    6888:	ldrb	ip, [r7]
    688c:	ldrb	r3, [r6]
    6890:	cmp	ip, #47	; 0x2f
    6894:	beq	67bc <__snprintf_chk@plt+0x523c>
    6898:	cmp	r3, #47	; 0x2f
    689c:	mov	r0, r7
    68a0:	beq	67d8 <__snprintf_chk@plt+0x5258>
    68a4:	mov	r2, r3
    68a8:	cmp	r2, #0
    68ac:	mov	r1, r6
    68b0:	bne	67f4 <__snprintf_chk@plt+0x5274>
    68b4:	pop	{r3, r4, r5, r6, r7, pc}
    68b8:	mov	r0, #0
    68bc:	pop	{r3, r4, r5, r6, r7, pc}
    68c0:	ldrb	r5, [r1]
    68c4:	mov	r7, r0
    68c8:	cmp	r5, #0
    68cc:	bne	6844 <__snprintf_chk@plt+0x52c4>
    68d0:	mov	r6, r1
    68d4:	b	6874 <__snprintf_chk@plt+0x52f4>
    68d8:	mov	r7, r0
    68dc:	mov	r2, #0
    68e0:	b	6838 <__snprintf_chk@plt+0x52b8>
    68e4:	mov	r6, r1
    68e8:	mov	r5, #0
    68ec:	b	6874 <__snprintf_chk@plt+0x52f4>
    68f0:	mov	r0, ip
    68f4:	pop	{r3, r4, r5, r6, r7, pc}
    68f8:	ldr	r0, [pc, #56]	; 6938 <__snprintf_chk@plt+0x53b8>
    68fc:	movw	r2, #375	; 0x177
    6900:	ldr	r1, [pc, #52]	; 693c <__snprintf_chk@plt+0x53bc>
    6904:	ldr	r3, [pc, #52]	; 6940 <__snprintf_chk@plt+0x53c0>
    6908:	add	r0, pc, r0
    690c:	add	r1, pc, r1
    6910:	add	r3, pc, r3
    6914:	bl	9700 <__snprintf_chk@plt+0x8180>
    6918:	ldr	r0, [pc, #36]	; 6944 <__snprintf_chk@plt+0x53c4>
    691c:	mov	r2, #376	; 0x178
    6920:	ldr	r1, [pc, #32]	; 6948 <__snprintf_chk@plt+0x53c8>
    6924:	ldr	r3, [pc, #32]	; 694c <__snprintf_chk@plt+0x53cc>
    6928:	add	r0, pc, r0
    692c:	add	r1, pc, r1
    6930:	add	r3, pc, r3
    6934:	bl	9700 <__snprintf_chk@plt+0x8180>
    6938:	andeq	r6, r0, r0, lsr #32
    693c:	andeq	r7, r0, r0, lsl sl
    6940:	andeq	r7, r0, r0, lsr #19
    6944:	andeq	r7, r0, ip, lsr #21
    6948:	strdeq	r7, [r0], -r0
    694c:	andeq	r7, r0, r0, lsl #19
    6950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6954:	subs	r8, r0, #0
    6958:	sub	sp, sp, #12
    695c:	mov	r6, r1
    6960:	beq	6a98 <__snprintf_chk@plt+0x5518>
    6964:	ldr	r4, [r8]
    6968:	cmp	r4, #0
    696c:	beq	6a98 <__snprintf_chk@plt+0x5518>
    6970:	mov	sl, #0
    6974:	add	r5, r8, #4
    6978:	mov	r7, sl
    697c:	b	69a8 <__snprintf_chk@plt+0x5428>
    6980:	mov	r0, r4
    6984:	mov	r4, #0
    6988:	bl	1250 <free@plt>
    698c:	mov	r0, r4
    6990:	bl	1250 <free@plt>
    6994:	cmp	r5, #0
    6998:	beq	6a64 <__snprintf_chk@plt+0x54e4>
    699c:	ldr	r4, [r5], #4
    69a0:	cmp	r4, #0
    69a4:	beq	6a64 <__snprintf_chk@plt+0x54e4>
    69a8:	ldrb	r3, [r4]
    69ac:	cmp	r3, #47	; 0x2f
    69b0:	bne	6980 <__snprintf_chk@plt+0x5400>
    69b4:	cmp	r6, #0
    69b8:	beq	6b18 <__snprintf_chk@plt+0x5598>
    69bc:	mov	r0, r6
    69c0:	mov	r1, r4
    69c4:	bl	3fc0 <__snprintf_chk@plt+0x2a40>
    69c8:	subs	r3, r0, #0
    69cc:	beq	6a80 <__snprintf_chk@plt+0x5500>
    69d0:	str	r3, [sp]
    69d4:	bl	1400 <__errno_location@plt>
    69d8:	mov	r1, #0
    69dc:	str	r1, [r0]
    69e0:	ldr	r3, [sp]
    69e4:	str	r0, [sp, #4]
    69e8:	mov	r0, r3
    69ec:	bl	14e4 <canonicalize_file_name@plt>
    69f0:	ldr	r3, [sp]
    69f4:	subs	r9, r0, #0
    69f8:	beq	6ac0 <__snprintf_chk@plt+0x5540>
    69fc:	mov	r0, r3
    6a00:	bl	1250 <free@plt>
    6a04:	mov	r0, r9
    6a08:	mov	r1, r6
    6a0c:	bl	6778 <__snprintf_chk@plt+0x51f8>
    6a10:	subs	r3, r0, #0
    6a14:	beq	6aa4 <__snprintf_chk@plt+0x5524>
    6a18:	ldrb	r2, [r3]
    6a1c:	cmp	r2, #47	; 0x2f
    6a20:	bne	6a88 <__snprintf_chk@plt+0x5508>
    6a24:	cmn	r3, #1
    6a28:	beq	6a88 <__snprintf_chk@plt+0x5508>
    6a2c:	mov	r0, r3
    6a30:	bl	1418 <__strdup@plt>
    6a34:	mov	fp, r0
    6a38:	mov	r0, r9
    6a3c:	bl	1250 <free@plt>
    6a40:	cmp	fp, #0
    6a44:	beq	6a80 <__snprintf_chk@plt+0x5500>
    6a48:	add	r3, r7, #1
    6a4c:	str	fp, [r8, r7, lsl #2]
    6a50:	mov	r0, r4
    6a54:	mov	r7, r3
    6a58:	bl	1250 <free@plt>
    6a5c:	cmp	r5, #0
    6a60:	bne	699c <__snprintf_chk@plt+0x541c>
    6a64:	cmp	sl, #0
    6a68:	mov	r3, #0
    6a6c:	str	r3, [r8, r7, lsl #2]
    6a70:	moveq	r0, r8
    6a74:	movne	r0, #0
    6a78:	add	sp, sp, #12
    6a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a80:	mov	sl, #1
    6a84:	b	698c <__snprintf_chk@plt+0x540c>
    6a88:	mov	r2, #47	; 0x2f
    6a8c:	sub	r3, r3, #1
    6a90:	strb	r2, [r3]
    6a94:	b	6a2c <__snprintf_chk@plt+0x54ac>
    6a98:	mov	r0, r8
    6a9c:	add	sp, sp, #12
    6aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6aa4:	mov	r0, r9
    6aa8:	str	r3, [sp]
    6aac:	bl	1250 <free@plt>
    6ab0:	ldr	r3, [sp]
    6ab4:	mov	fp, r4
    6ab8:	mov	r4, r3
    6abc:	b	6a48 <__snprintf_chk@plt+0x54c8>
    6ac0:	ldr	r1, [sp, #4]
    6ac4:	ldr	r2, [r1]
    6ac8:	cmp	r2, #2
    6acc:	bne	6ae4 <__snprintf_chk@plt+0x5564>
    6ad0:	mov	r0, r3
    6ad4:	mov	fp, r4
    6ad8:	bl	1250 <free@plt>
    6adc:	mov	r4, r9
    6ae0:	b	6a48 <__snprintf_chk@plt+0x54c8>
    6ae4:	mov	r0, r3
    6ae8:	bl	1250 <free@plt>
    6aec:	ldr	r1, [sp, #4]
    6af0:	ldr	r3, [r1]
    6af4:	cmp	r3, #12
    6af8:	cmpne	r3, #0
    6afc:	moveq	sl, #1
    6b00:	b	698c <__snprintf_chk@plt+0x540c>
    6b04:	mov	r5, r0
    6b08:	mov	r0, r4
    6b0c:	bl	1250 <free@plt>
    6b10:	mov	r0, r5
    6b14:	bl	1538 <_Unwind_Resume@plt>
    6b18:	bl	1400 <__errno_location@plt>
    6b1c:	str	r0, [sp, #4]
    6b20:	str	r6, [r0]
    6b24:	mov	r0, r4
    6b28:	bl	14e4 <canonicalize_file_name@plt>
    6b2c:	subs	fp, r0, #0
    6b30:	beq	6b44 <__snprintf_chk@plt+0x55c4>
    6b34:	mov	r0, r4
    6b38:	mov	r4, r6
    6b3c:	bl	1250 <free@plt>
    6b40:	b	6a48 <__snprintf_chk@plt+0x54c8>
    6b44:	ldr	r2, [sp, #4]
    6b48:	ldr	r3, [r2]
    6b4c:	cmp	r3, #2
    6b50:	movne	r3, r4
    6b54:	movne	r4, r6
    6b58:	bne	6ae4 <__snprintf_chk@plt+0x5564>
    6b5c:	mov	fp, r4
    6b60:	mov	r4, r6
    6b64:	b	6a48 <__snprintf_chk@plt+0x54c8>
    6b68:	push	{r4, lr}
    6b6c:	subs	r4, r0, #0
    6b70:	beq	6b9c <__snprintf_chk@plt+0x561c>
    6b74:	ldr	r3, [r4]
    6b78:	cmp	r3, #0
    6b7c:	beq	6b9c <__snprintf_chk@plt+0x561c>
    6b80:	bl	6950 <__snprintf_chk@plt+0x53d0>
    6b84:	cmp	r0, #0
    6b88:	beq	6b98 <__snprintf_chk@plt+0x5618>
    6b8c:	mov	r0, r4
    6b90:	pop	{r4, lr}
    6b94:	b	91b0 <__snprintf_chk@plt+0x7c30>
    6b98:	pop	{r4, pc}
    6b9c:	mov	r0, r4
    6ba0:	pop	{r4, pc}
    6ba4:	cmp	r0, #0
    6ba8:	push	{r4, r5, r6, lr}
    6bac:	beq	6c34 <__snprintf_chk@plt+0x56b4>
    6bb0:	ldr	r6, [r0]
    6bb4:	ldr	r0, [r0, #4]
    6bb8:	cmn	r6, #1
    6bbc:	beq	6c28 <__snprintf_chk@plt+0x56a8>
    6bc0:	mov	r2, #1000	; 0x3e8
    6bc4:	mov	r3, #0
    6bc8:	asr	r1, r0, #31
    6bcc:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6bd0:	mov	r3, #0
    6bd4:	movw	r2, #16960	; 0x4240
    6bd8:	movt	r2, #15
    6bdc:	mov	r4, r0
    6be0:	mov	r5, r1
    6be4:	mvn	r0, r0
    6be8:	mvn	r1, r1
    6bec:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6bf0:	asr	r3, r6, #31
    6bf4:	mov	r2, r6
    6bf8:	cmp	r3, r1
    6bfc:	cmpeq	r2, r0
    6c00:	bls	6c10 <__snprintf_chk@plt+0x5690>
    6c04:	mvn	r0, #0
    6c08:	mvn	r1, #0
    6c0c:	pop	{r4, r5, r6, pc}
    6c10:	movw	r3, #16960	; 0x4240
    6c14:	movt	r3, #15
    6c18:	mov	r0, r4
    6c1c:	mov	r1, r5
    6c20:	smlal	r0, r1, r3, r6
    6c24:	pop	{r4, r5, r6, pc}
    6c28:	cmn	r0, #1
    6c2c:	bne	6bc0 <__snprintf_chk@plt+0x5640>
    6c30:	b	6c04 <__snprintf_chk@plt+0x5684>
    6c34:	ldr	r0, [pc, #24]	; 6c54 <__snprintf_chk@plt+0x56d4>
    6c38:	mov	r2, #92	; 0x5c
    6c3c:	ldr	r1, [pc, #20]	; 6c58 <__snprintf_chk@plt+0x56d8>
    6c40:	ldr	r3, [pc, #20]	; 6c5c <__snprintf_chk@plt+0x56dc>
    6c44:	add	r0, pc, r0
    6c48:	add	r1, pc, r1
    6c4c:	add	r3, pc, r3
    6c50:	bl	9700 <__snprintf_chk@plt+0x8180>
    6c54:	andeq	r7, r0, ip, lsr #18
    6c58:	ldrdeq	r7, [r0], -r0
    6c5c:	muleq	r0, r8, r8
    6c60:	ldr	r3, [pc, #112]	; 6cd8 <__snprintf_chk@plt+0x5758>
    6c64:	ldr	r2, [pc, #112]	; 6cdc <__snprintf_chk@plt+0x575c>
    6c68:	add	r3, pc, r3
    6c6c:	push	{r4, r5, lr}
    6c70:	sub	sp, sp, #20
    6c74:	ldr	r4, [r3, r2]
    6c78:	add	r5, sp, #4
    6c7c:	mov	r1, r5
    6c80:	ldr	r3, [r4]
    6c84:	str	r3, [sp, #12]
    6c88:	bl	1514 <clock_gettime@plt>
    6c8c:	cmp	r0, #0
    6c90:	bne	6cb8 <__snprintf_chk@plt+0x5738>
    6c94:	mov	r0, r5
    6c98:	bl	6ba4 <__snprintf_chk@plt+0x5624>
    6c9c:	ldr	r2, [sp, #12]
    6ca0:	ldr	r3, [r4]
    6ca4:	cmp	r2, r3
    6ca8:	bne	6cb4 <__snprintf_chk@plt+0x5734>
    6cac:	add	sp, sp, #20
    6cb0:	pop	{r4, r5, pc}
    6cb4:	bl	12b0 <__stack_chk_fail@plt>
    6cb8:	ldr	r0, [pc, #32]	; 6ce0 <__snprintf_chk@plt+0x5760>
    6cbc:	mov	r2, #34	; 0x22
    6cc0:	ldr	r1, [pc, #28]	; 6ce4 <__snprintf_chk@plt+0x5764>
    6cc4:	ldr	r3, [pc, #28]	; 6ce8 <__snprintf_chk@plt+0x5768>
    6cc8:	add	r0, pc, r0
    6ccc:	add	r1, pc, r1
    6cd0:	add	r3, pc, r3
    6cd4:	bl	9700 <__snprintf_chk@plt+0x8180>
    6cd8:	andeq	sl, r1, r8, lsl r2
    6cdc:	andeq	r0, r0, r4, asr r1
    6ce0:	andeq	r7, r0, ip, lsr #17
    6ce4:	andeq	r7, r0, ip, asr #16
    6ce8:	andeq	r7, r0, r4, asr #16
    6cec:	push	{r4, r5, r6, lr}
    6cf0:	subs	r6, r0, #0
    6cf4:	mov	r4, r2
    6cf8:	mov	r5, r3
    6cfc:	beq	6d68 <__snprintf_chk@plt+0x57e8>
    6d00:	mvn	r3, #0
    6d04:	mvn	r2, #0
    6d08:	cmp	r5, r3
    6d0c:	cmpeq	r4, r2
    6d10:	mvneq	r3, #0
    6d14:	streq	r3, [r6]
    6d18:	streq	r3, [r6, #4]
    6d1c:	beq	6d60 <__snprintf_chk@plt+0x57e0>
    6d20:	mov	r3, #0
    6d24:	mov	r0, r4
    6d28:	mov	r1, r5
    6d2c:	movw	r2, #16960	; 0x4240
    6d30:	movt	r2, #15
    6d34:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6d38:	movw	r2, #16960	; 0x4240
    6d3c:	mov	r3, #0
    6d40:	movt	r2, #15
    6d44:	mov	r1, r5
    6d48:	str	r0, [r6]
    6d4c:	mov	r0, r4
    6d50:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6d54:	mov	r3, #1000	; 0x3e8
    6d58:	mul	r2, r3, r2
    6d5c:	str	r2, [r6, #4]
    6d60:	mov	r0, r6
    6d64:	pop	{r4, r5, r6, pc}
    6d68:	ldr	r0, [pc, #24]	; 6d88 <__snprintf_chk@plt+0x5808>
    6d6c:	mov	r2, #107	; 0x6b
    6d70:	ldr	r1, [pc, #20]	; 6d8c <__snprintf_chk@plt+0x580c>
    6d74:	ldr	r3, [pc, #20]	; 6d90 <__snprintf_chk@plt+0x5810>
    6d78:	add	r0, pc, r0
    6d7c:	add	r1, pc, r1
    6d80:	add	r3, pc, r3
    6d84:	bl	9700 <__snprintf_chk@plt+0x8180>
    6d88:	strdeq	r7, [r0], -r8
    6d8c:	muleq	r0, ip, r7
    6d90:	andeq	r7, r0, r4, lsl #15
    6d94:	push	{r4, r5, r6, lr}
    6d98:	subs	r6, r0, #0
    6d9c:	mov	r4, r2
    6da0:	mov	r5, r3
    6da4:	beq	6e08 <__snprintf_chk@plt+0x5888>
    6da8:	mvn	r3, #0
    6dac:	mvn	r2, #0
    6db0:	cmp	r5, r3
    6db4:	cmpeq	r4, r2
    6db8:	mvneq	r3, #0
    6dbc:	streq	r3, [r6]
    6dc0:	streq	r3, [r6, #4]
    6dc4:	beq	6e00 <__snprintf_chk@plt+0x5880>
    6dc8:	mov	r3, #0
    6dcc:	mov	r0, r4
    6dd0:	mov	r1, r5
    6dd4:	movw	r2, #16960	; 0x4240
    6dd8:	movt	r2, #15
    6ddc:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6de0:	movw	r2, #16960	; 0x4240
    6de4:	mov	r3, #0
    6de8:	movt	r2, #15
    6dec:	mov	r1, r5
    6df0:	str	r0, [r6]
    6df4:	mov	r0, r4
    6df8:	bl	b5c0 <__snprintf_chk@plt+0xa040>
    6dfc:	str	r2, [r6, #4]
    6e00:	mov	r0, r6
    6e04:	pop	{r4, r5, r6, pc}
    6e08:	ldr	r0, [pc, #24]	; 6e28 <__snprintf_chk@plt+0x58a8>
    6e0c:	mov	r2, #137	; 0x89
    6e10:	ldr	r1, [pc, #20]	; 6e2c <__snprintf_chk@plt+0x58ac>
    6e14:	ldr	r3, [pc, #20]	; 6e30 <__snprintf_chk@plt+0x58b0>
    6e18:	add	r0, pc, r0
    6e1c:	add	r1, pc, r1
    6e20:	add	r3, pc, r3
    6e24:	bl	9700 <__snprintf_chk@plt+0x8180>
    6e28:	andeq	r7, r0, r0, lsl #15
    6e2c:	strdeq	r7, [r0], -ip
    6e30:	ldrdeq	r7, [r0], -r4
    6e34:	cmp	r0, r1
    6e38:	bcc	6e48 <__snprintf_chk@plt+0x58c8>
    6e3c:	movls	r0, #0
    6e40:	movhi	r0, #1
    6e44:	bx	lr
    6e48:	mvn	r0, #0
    6e4c:	bx	lr
    6e50:	push	{r4, lr}
    6e54:	mov	r4, r0
    6e58:	ldrb	r2, [r0, #39]	; 0x27
    6e5c:	ldr	r3, [r0]
    6e60:	tst	r2, #4
    6e64:	addne	r2, r0, #8
    6e68:	ldr	r3, [r3]
    6e6c:	ldreq	r2, [pc, #64]	; 6eb4 <__snprintf_chk@plt+0x5934>
    6e70:	addeq	r2, pc, r2
    6e74:	mov	r0, r1
    6e78:	mov	r1, r2
    6e7c:	blx	r3
    6e80:	ldrb	r3, [r4, #39]	; 0x27
    6e84:	tst	r3, #4
    6e88:	bne	6eac <__snprintf_chk@plt+0x592c>
    6e8c:	ldr	r2, [pc, #36]	; 6eb8 <__snprintf_chk@plt+0x5938>
    6e90:	and	r3, r3, #3
    6e94:	add	r2, pc, r2
    6e98:	add	r3, r2, r3, lsl #4
    6e9c:	ldr	r1, [r3, #12]
    6ea0:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    6ea4:	mov	r0, r1
    6ea8:	pop	{r4, pc}
    6eac:	ldr	r1, [r4, #28]
    6eb0:	b	6ea0 <__snprintf_chk@plt+0x5920>
    6eb4:	ldrdeq	sl, [r1], -r8
    6eb8:	muleq	r1, r4, lr
    6ebc:	push	{r4, r5, r6}
    6ec0:	ldrb	r3, [r0, #39]	; 0x27
    6ec4:	ubfx	r2, r3, #2, #1
    6ec8:	and	r3, r3, #3
    6ecc:	cmp	r2, #0
    6ed0:	beq	6f34 <__snprintf_chk@plt+0x59b4>
    6ed4:	ldr	ip, [pc, #132]	; 6f60 <__snprintf_chk@plt+0x59e0>
    6ed8:	lsl	r3, r3, #4
    6edc:	ldr	r5, [r0, #4]
    6ee0:	add	ip, pc, ip
    6ee4:	ldr	r6, [r0, #28]
    6ee8:	add	ip, ip, r3
    6eec:	ldr	ip, [ip, #4]
    6ef0:	ldr	r4, [pc, #108]	; 6f64 <__snprintf_chk@plt+0x59e4>
    6ef4:	mla	ip, r6, ip, r5
    6ef8:	add	r4, pc, r4
    6efc:	add	r4, r4, r3
    6f00:	b	6f14 <__snprintf_chk@plt+0x5994>
    6f04:	ldrb	r3, [ip, r1]
    6f08:	cmp	r3, #255	; 0xff
    6f0c:	bne	6f54 <__snprintf_chk@plt+0x59d4>
    6f10:	add	r1, r1, #1
    6f14:	cmp	r2, #0
    6f18:	ldrne	r3, [r0, #28]
    6f1c:	ldreq	r3, [r4, #12]
    6f20:	cmp	r1, r3
    6f24:	bcc	6f04 <__snprintf_chk@plt+0x5984>
    6f28:	mvn	r0, #0
    6f2c:	pop	{r4, r5, r6}
    6f30:	bx	lr
    6f34:	ldr	r4, [pc, #44]	; 6f68 <__snprintf_chk@plt+0x59e8>
    6f38:	lsl	r3, r3, #4
    6f3c:	add	r5, r0, #4
    6f40:	add	r4, pc, r4
    6f44:	add	r4, r4, r3
    6f48:	ldr	ip, [r4, #4]
    6f4c:	ldr	r6, [r4, #12]
    6f50:	b	6ef0 <__snprintf_chk@plt+0x5970>
    6f54:	mov	r0, r1
    6f58:	pop	{r4, r5, r6}
    6f5c:	bx	lr
    6f60:	andeq	r9, r1, r8, asr #28
    6f64:	andeq	r9, r1, r0, lsr lr
    6f68:	andeq	r9, r1, r8, ror #27
    6f6c:	ldr	r2, [pc, #88]	; 6fcc <__snprintf_chk@plt+0x5a4c>
    6f70:	ldr	r3, [pc, #88]	; 6fd0 <__snprintf_chk@plt+0x5a50>
    6f74:	add	r2, pc, r2
    6f78:	push	{r4, r5, r6, lr}
    6f7c:	sub	sp, sp, #16
    6f80:	ldr	r4, [r2, r3]
    6f84:	mov	r5, r1
    6f88:	mov	r6, r0
    6f8c:	ldr	r3, [r4]
    6f90:	str	r3, [sp, #12]
    6f94:	bl	13d0 <strlen@plt>
    6f98:	mov	r3, r5
    6f9c:	mov	r1, r6
    6fa0:	mov	r2, r0
    6fa4:	mov	r0, sp
    6fa8:	bl	8558 <__snprintf_chk@plt+0x6fd8>
    6fac:	ldr	r2, [sp, #12]
    6fb0:	ldr	r3, [r4]
    6fb4:	ldr	r0, [sp]
    6fb8:	cmp	r2, r3
    6fbc:	bne	6fc8 <__snprintf_chk@plt+0x5a48>
    6fc0:	add	sp, sp, #16
    6fc4:	pop	{r4, r5, r6, pc}
    6fc8:	bl	12b0 <__stack_chk_fail@plt>
    6fcc:	andeq	r9, r1, ip, lsl #30
    6fd0:	andeq	r0, r0, r4, asr r1
    6fd4:	ldr	ip, [pc, #80]	; 702c <__snprintf_chk@plt+0x5aac>
    6fd8:	mov	r3, r1
    6fdc:	push	{r4, lr}
    6fe0:	add	ip, pc, ip
    6fe4:	ldr	lr, [pc, #68]	; 7030 <__snprintf_chk@plt+0x5ab0>
    6fe8:	sub	sp, sp, #24
    6fec:	mov	r2, #4
    6ff0:	add	r1, sp, #4
    6ff4:	str	r0, [sp, #4]
    6ff8:	add	r0, sp, #8
    6ffc:	ldr	r4, [ip, lr]
    7000:	ldr	ip, [r4]
    7004:	str	ip, [sp, #20]
    7008:	bl	8558 <__snprintf_chk@plt+0x6fd8>
    700c:	ldr	r2, [sp, #20]
    7010:	ldr	r3, [r4]
    7014:	ldr	r0, [sp, #8]
    7018:	cmp	r2, r3
    701c:	bne	7028 <__snprintf_chk@plt+0x5aa8>
    7020:	add	sp, sp, #24
    7024:	pop	{r4, pc}
    7028:	bl	12b0 <__stack_chk_fail@plt>
    702c:	andeq	r9, r1, r0, lsr #29
    7030:	andeq	r0, r0, r4, asr r1
    7034:	b	1208 <strcmp@plt>
    7038:	push	{r4, r5, r6, r7, r8, lr}
    703c:	subs	r6, r0, #0
    7040:	mov	r5, r1
    7044:	beq	7158 <__snprintf_chk@plt+0x5bd8>
    7048:	ldrb	r3, [r6, #39]	; 0x27
    704c:	and	r2, r3, #3
    7050:	cmp	r2, #1
    7054:	beq	7168 <__snprintf_chk@plt+0x5be8>
    7058:	cmp	r1, #0
    705c:	beq	7290 <__snprintf_chk@plt+0x5d10>
    7060:	ldr	r4, [r1]
    7064:	cmn	r4, #1
    7068:	beq	7158 <__snprintf_chk@plt+0x5bd8>
    706c:	cmn	r4, #2
    7070:	beq	7138 <__snprintf_chk@plt+0x5bb8>
    7074:	cmp	r4, #0
    7078:	beq	72b0 <__snprintf_chk@plt+0x5d30>
    707c:	tst	r3, #4
    7080:	ldr	r3, [pc, #648]	; 7310 <__snprintf_chk@plt+0x5d90>
    7084:	addeq	r0, r6, #4
    7088:	ldr	r1, [r1, #4]
    708c:	add	r3, pc, r3
    7090:	ldrne	r0, [r6, #4]
    7094:	add	r2, r3, r2, lsl #4
    7098:	ldr	r3, [r2, #4]
    709c:	mul	r3, r3, r4
    70a0:	ldr	r3, [r0, r3]
    70a4:	cmp	r3, r1
    70a8:	beq	70e8 <__snprintf_chk@plt+0x5b68>
    70ac:	sub	r4, r4, #1
    70b0:	str	r4, [r5]
    70b4:	ldrb	r3, [r6, #39]	; 0x27
    70b8:	ldr	r2, [pc, #596]	; 7314 <__snprintf_chk@plt+0x5d94>
    70bc:	tst	r3, #4
    70c0:	and	r3, r3, #3
    70c4:	add	r2, pc, r2
    70c8:	addeq	r0, r6, #4
    70cc:	add	r3, r2, r3, lsl #4
    70d0:	ldrne	r0, [r6, #4]
    70d4:	ldr	r3, [r3, #4]
    70d8:	mul	r3, r3, r4
    70dc:	ldr	r3, [r0, r3]
    70e0:	cmp	r1, r3
    70e4:	bne	7250 <__snprintf_chk@plt+0x5cd0>
    70e8:	mov	r0, r6
    70ec:	add	r1, r4, #1
    70f0:	bl	6ebc <__snprintf_chk@plt+0x593c>
    70f4:	cmn	r0, #1
    70f8:	str	r0, [r5]
    70fc:	beq	7160 <__snprintf_chk@plt+0x5be0>
    7100:	ldrb	r3, [r6, #39]	; 0x27
    7104:	ldr	r2, [pc, #524]	; 7318 <__snprintf_chk@plt+0x5d98>
    7108:	tst	r3, #4
    710c:	and	r3, r3, #3
    7110:	add	r2, pc, r2
    7114:	addeq	r6, r6, #4
    7118:	add	r3, r2, r3, lsl #4
    711c:	ldrne	r6, [r6, #4]
    7120:	ldr	r3, [r3, #4]
    7124:	mul	r0, r3, r0
    7128:	ldr	r3, [r6, r0]
    712c:	mov	r0, r4
    7130:	str	r3, [r5, #4]
    7134:	pop	{r4, r5, r6, r7, r8, pc}
    7138:	ubfx	r1, r3, #2, #1
    713c:	cmp	r1, #0
    7140:	bne	7204 <__snprintf_chk@plt+0x5c84>
    7144:	bl	6ebc <__snprintf_chk@plt+0x593c>
    7148:	mov	r4, r0
    714c:	str	r0, [r5]
    7150:	cmn	r4, #1
    7154:	bne	70e8 <__snprintf_chk@plt+0x5b68>
    7158:	mvn	r4, #0
    715c:	str	r4, [r5]
    7160:	mov	r0, r4
    7164:	pop	{r4, r5, r6, r7, r8, pc}
    7168:	cmp	r1, #0
    716c:	beq	72d0 <__snprintf_chk@plt+0x5d50>
    7170:	ldr	r4, [r1]
    7174:	cmn	r4, #1
    7178:	beq	7158 <__snprintf_chk@plt+0x5bd8>
    717c:	cmn	r4, #2
    7180:	beq	7270 <__snprintf_chk@plt+0x5cf0>
    7184:	tst	r3, #4
    7188:	bne	721c <__snprintf_chk@plt+0x5c9c>
    718c:	add	r2, r6, #4
    7190:	ldr	r7, [r1, #4]
    7194:	add	r3, r2, r4, lsl #4
    7198:	ldr	r1, [r2, r4, lsl #4]
    719c:	cmp	r1, r7
    71a0:	addne	r4, r4, #1
    71a4:	movne	r3, r2
    71a8:	andne	r4, r4, #1
    71ac:	beq	71c0 <__snprintf_chk@plt+0x5c40>
    71b0:	ldr	r2, [r3, r4, lsl #4]
    71b4:	add	r3, r3, r4, lsl #4
    71b8:	cmp	r2, r7
    71bc:	bne	72f0 <__snprintf_chk@plt+0x5d70>
    71c0:	ldr	r2, [r3, #8]
    71c4:	cmn	r2, #1
    71c8:	str	r2, [r5]
    71cc:	beq	7160 <__snprintf_chk@plt+0x5be0>
    71d0:	ldrb	r3, [r6, #39]	; 0x27
    71d4:	ldr	r1, [pc, #320]	; 731c <__snprintf_chk@plt+0x5d9c>
    71d8:	and	r0, r3, #3
    71dc:	tst	r3, #4
    71e0:	add	r1, pc, r1
    71e4:	addeq	r6, r6, #4
    71e8:	add	r3, r1, r0, lsl #4
    71ec:	ldrne	r6, [r6, #4]
    71f0:	ldr	r3, [r3, #4]
    71f4:	mul	r2, r3, r2
    71f8:	ldr	r3, [r6, r2]
    71fc:	str	r3, [r5, #4]
    7200:	b	7160 <__snprintf_chk@plt+0x5be0>
    7204:	ldr	r1, [r6, #32]
    7208:	bl	6ebc <__snprintf_chk@plt+0x593c>
    720c:	str	r0, [r5]
    7210:	str	r0, [r6, #32]
    7214:	ldr	r4, [r5]
    7218:	b	7150 <__snprintf_chk@plt+0x5bd0>
    721c:	ldr	r8, [r6, #4]
    7220:	ldr	r7, [r1, #4]
    7224:	add	r3, r8, r4, lsl #4
    7228:	ldr	r2, [r8, r4, lsl #4]
    722c:	cmp	r2, r7
    7230:	beq	71c0 <__snprintf_chk@plt+0x5c40>
    7234:	ldr	r1, [r6, #28]
    7238:	add	r0, r4, r1
    723c:	sub	r0, r0, #1
    7240:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    7244:	mov	r3, r8
    7248:	mov	r4, r1
    724c:	b	71b0 <__snprintf_chk@plt+0x5c30>
    7250:	ldr	r0, [pc, #200]	; 7320 <__snprintf_chk@plt+0x5da0>
    7254:	movw	r2, #687	; 0x2af
    7258:	ldr	r1, [pc, #196]	; 7324 <__snprintf_chk@plt+0x5da4>
    725c:	ldr	r3, [pc, #196]	; 7328 <__snprintf_chk@plt+0x5da8>
    7260:	add	r0, pc, r0
    7264:	add	r1, pc, r1
    7268:	add	r3, pc, r3
    726c:	bl	9700 <__snprintf_chk@plt+0x8180>
    7270:	ldr	r4, [r6, #40]	; 0x28
    7274:	cmn	r4, #1
    7278:	beq	7158 <__snprintf_chk@plt+0x5bd8>
    727c:	tst	r3, #4
    7280:	addeq	r3, r6, #4
    7284:	ldrne	r3, [r6, #4]
    7288:	add	r3, r3, r4, lsl #4
    728c:	b	71c0 <__snprintf_chk@plt+0x5c40>
    7290:	ldr	r0, [pc, #148]	; 732c <__snprintf_chk@plt+0x5dac>
    7294:	movw	r2, #657	; 0x291
    7298:	ldr	r1, [pc, #144]	; 7330 <__snprintf_chk@plt+0x5db0>
    729c:	ldr	r3, [pc, #144]	; 7334 <__snprintf_chk@plt+0x5db4>
    72a0:	add	r0, pc, r0
    72a4:	add	r1, pc, r1
    72a8:	add	r3, pc, r3
    72ac:	bl	9700 <__snprintf_chk@plt+0x8180>
    72b0:	ldr	r0, [pc, #128]	; 7338 <__snprintf_chk@plt+0x5db8>
    72b4:	movw	r2, #675	; 0x2a3
    72b8:	ldr	r1, [pc, #124]	; 733c <__snprintf_chk@plt+0x5dbc>
    72bc:	ldr	r3, [pc, #124]	; 7340 <__snprintf_chk@plt+0x5dc0>
    72c0:	add	r0, pc, r0
    72c4:	add	r1, pc, r1
    72c8:	add	r3, pc, r3
    72cc:	bl	9700 <__snprintf_chk@plt+0x8180>
    72d0:	ldr	r0, [pc, #108]	; 7344 <__snprintf_chk@plt+0x5dc4>
    72d4:	movw	r2, #607	; 0x25f
    72d8:	ldr	r1, [pc, #104]	; 7348 <__snprintf_chk@plt+0x5dc8>
    72dc:	ldr	r3, [pc, #104]	; 734c <__snprintf_chk@plt+0x5dcc>
    72e0:	add	r0, pc, r0
    72e4:	add	r1, pc, r1
    72e8:	add	r3, pc, r3
    72ec:	bl	9700 <__snprintf_chk@plt+0x8180>
    72f0:	ldr	r0, [pc, #88]	; 7350 <__snprintf_chk@plt+0x5dd0>
    72f4:	movw	r2, #631	; 0x277
    72f8:	ldr	r1, [pc, #84]	; 7354 <__snprintf_chk@plt+0x5dd4>
    72fc:	ldr	r3, [pc, #84]	; 7358 <__snprintf_chk@plt+0x5dd8>
    7300:	add	r0, pc, r0
    7304:	add	r1, pc, r1
    7308:	add	r3, pc, r3
    730c:	bl	9700 <__snprintf_chk@plt+0x8180>
    7310:	muleq	r1, ip, ip
    7314:	andeq	r9, r1, r4, ror #24
    7318:	andeq	r9, r1, r8, lsl ip
    731c:	andeq	r9, r1, r8, asr #22
    7320:	andeq	r7, r0, r4, lsl r7
    7324:	ldrdeq	r7, [r0], -r0
    7328:	andeq	r7, r0, ip, asr #21
    732c:	andeq	r5, r0, r8, lsl r5
    7330:	muleq	r0, r0, r6
    7334:	andeq	r7, r0, ip, lsl #21
    7338:	andeq	r7, r0, r8, lsr #13
    733c:	andeq	r7, r0, r0, ror r6
    7340:	andeq	r7, r0, ip, ror #20
    7344:	ldrdeq	r5, [r0], -r8
    7348:	andeq	r7, r0, r0, asr r6
    734c:	andeq	r7, r0, r8, lsr #20
    7350:	andeq	r7, r0, ip, asr #12
    7354:	andeq	r7, r0, r0, lsr r6
    7358:	andeq	r7, r0, r8, lsl #20
    735c:	push	{r4, r5, r6, lr}
    7360:	mov	r5, r1
    7364:	ldrb	r3, [r0, #39]	; 0x27
    7368:	mov	r4, r0
    736c:	ldr	r6, [pc, #88]	; 73cc <__snprintf_chk@plt+0x5e4c>
    7370:	tst	r3, #4
    7374:	and	r3, r3, #3
    7378:	add	r6, pc, r6
    737c:	addeq	r2, r0, #4
    7380:	add	r3, r6, r3, lsl #4
    7384:	ldrne	r2, [r0, #4]
    7388:	ldr	r3, [r3, #4]
    738c:	mul	r3, r3, r1
    7390:	ldr	r1, [r2, r3]
    7394:	bl	6e50 <__snprintf_chk@plt+0x58d0>
    7398:	cmp	r5, r0
    739c:	bcc	73a8 <__snprintf_chk@plt+0x5e28>
    73a0:	rsb	r0, r0, r5
    73a4:	pop	{r4, r5, r6, pc}
    73a8:	ldrb	r3, [r4, #39]	; 0x27
    73ac:	rsb	r0, r0, r5
    73b0:	tst	r3, #4
    73b4:	andeq	r3, r3, #3
    73b8:	ldrne	r3, [r4, #28]
    73bc:	addeq	r6, r6, r3, lsl #4
    73c0:	ldreq	r3, [r6, #12]
    73c4:	add	r0, r0, r3
    73c8:	pop	{r4, r5, r6, pc}
    73cc:			; <UNDEFINED> instruction: 0x000199b0
    73d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    73d4:	mov	r6, r0
    73d8:	ldrb	r3, [r0, #39]	; 0x27
    73dc:	mov	r4, r1
    73e0:	mov	r9, r2
    73e4:	tst	r3, #4
    73e8:	and	r3, r3, #3
    73ec:	beq	74dc <__snprintf_chk@plt+0x5f5c>
    73f0:	ldr	r1, [pc, #312]	; 7530 <__snprintf_chk@plt+0x5fb0>
    73f4:	ldr	r2, [r0, #28]
    73f8:	add	r1, pc, r1
    73fc:	add	r3, r1, r3, lsl #4
    7400:	ldr	r1, [r0, #4]
    7404:	ldr	r7, [r3, #4]
    7408:	mov	r3, r2
    740c:	mla	r7, r7, r2, r1
    7410:	cmp	r4, r3
    7414:	bcs	7510 <__snprintf_chk@plt+0x5f90>
    7418:	ldrb	r3, [r7, r4]
    741c:	cmp	r3, #255	; 0xff
    7420:	beq	74d4 <__snprintf_chk@plt+0x5f54>
    7424:	ldr	sl, [pc, #264]	; 7534 <__snprintf_chk@plt+0x5fb4>
    7428:	mov	r5, #0
    742c:	ldr	r8, [pc, #260]	; 7538 <__snprintf_chk@plt+0x5fb8>
    7430:	add	sl, pc, sl
    7434:	add	r8, pc, r8
    7438:	b	7458 <__snprintf_chk@plt+0x5ed8>
    743c:	ldr	r1, [r6, #28]
    7440:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    7444:	add	r5, r5, #1
    7448:	ldrb	r3, [r7, r1]
    744c:	mov	r4, r1
    7450:	cmp	r3, #255	; 0xff
    7454:	beq	74d4 <__snprintf_chk@plt+0x5f54>
    7458:	cmp	r3, #252	; 0xfc
    745c:	bhi	7500 <__snprintf_chk@plt+0x5f80>
    7460:	mov	r0, r3
    7464:	cmp	r5, r0
    7468:	bhi	74d4 <__snprintf_chk@plt+0x5f54>
    746c:	beq	7490 <__snprintf_chk@plt+0x5f10>
    7470:	ldrb	r3, [r6, #39]	; 0x27
    7474:	add	r0, r4, #1
    7478:	tst	r3, #4
    747c:	bne	743c <__snprintf_chk@plt+0x5ebc>
    7480:	and	r3, r3, #3
    7484:	add	r3, r8, r3, lsl #4
    7488:	ldr	r1, [r3, #12]
    748c:	b	7440 <__snprintf_chk@plt+0x5ec0>
    7490:	ldrb	r3, [r6, #39]	; 0x27
    7494:	mov	r1, r9
    7498:	ldr	r2, [r6]
    749c:	tst	r3, #4
    74a0:	and	r3, r3, #3
    74a4:	addeq	r0, r6, #4
    74a8:	add	r3, sl, r3, lsl #4
    74ac:	ldrne	r0, [r6, #4]
    74b0:	ldr	r2, [r2, #4]
    74b4:	ldr	r3, [r3, #4]
    74b8:	mul	r3, r3, r4
    74bc:	ldr	r0, [r0, r3]
    74c0:	blx	r2
    74c4:	cmp	r0, #0
    74c8:	bne	7470 <__snprintf_chk@plt+0x5ef0>
    74cc:	mov	r0, r4
    74d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    74d4:	mvn	r0, #0
    74d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    74dc:	ldr	r2, [pc, #88]	; 753c <__snprintf_chk@plt+0x5fbc>
    74e0:	add	r7, r0, #4
    74e4:	add	r2, pc, r2
    74e8:	add	r3, r2, r3, lsl #4
    74ec:	ldr	r2, [r3, #12]
    74f0:	ldr	r1, [r3, #4]
    74f4:	mov	r3, r2
    74f8:	mla	r7, r1, r2, r7
    74fc:	b	7410 <__snprintf_chk@plt+0x5e90>
    7500:	mov	r0, r6
    7504:	mov	r1, r4
    7508:	bl	735c <__snprintf_chk@plt+0x5ddc>
    750c:	b	7464 <__snprintf_chk@plt+0x5ee4>
    7510:	ldr	r0, [pc, #40]	; 7540 <__snprintf_chk@plt+0x5fc0>
    7514:	mov	r2, #1216	; 0x4c0
    7518:	ldr	r1, [pc, #36]	; 7544 <__snprintf_chk@plt+0x5fc4>
    751c:	ldr	r3, [pc, #36]	; 7548 <__snprintf_chk@plt+0x5fc8>
    7520:	add	r0, pc, r0
    7524:	add	r1, pc, r1
    7528:	add	r3, pc, r3
    752c:	bl	9700 <__snprintf_chk@plt+0x8180>
    7530:	andeq	r9, r1, r0, lsr r9
    7534:	strdeq	r9, [r1], -r8
    7538:	strdeq	r9, [r1], -r4
    753c:	andeq	r9, r1, r4, asr #16
    7540:	andeq	r7, r0, ip, ror #8
    7544:	andeq	r7, r0, r0, lsl r4
    7548:	muleq	r0, r8, r3
    754c:	push	{r3, lr}
    7550:	mov	r2, #544	; 0x220
    7554:	ldr	r0, [pc, #20]	; 7570 <__snprintf_chk@plt+0x5ff0>
    7558:	ldr	r1, [pc, #20]	; 7574 <__snprintf_chk@plt+0x5ff4>
    755c:	ldr	r3, [pc, #20]	; 7578 <__snprintf_chk@plt+0x5ff8>
    7560:	add	r0, pc, r0
    7564:	add	r1, pc, r1
    7568:	add	r3, pc, r3
    756c:	bl	9998 <__snprintf_chk@plt+0x8418>
    7570:	andeq	r7, r0, r0, asr #8
    7574:	ldrdeq	r7, [r0], -r0
    7578:	strdeq	r7, [r0], -r0
    757c:	cmn	r2, #5
    7580:	push	{r3, lr}
    7584:	bhi	75b4 <__snprintf_chk@plt+0x6034>
    7588:	ldrb	r3, [r0, #39]	; 0x27
    758c:	ldr	r1, [pc, #84]	; 75e8 <__snprintf_chk@plt+0x6068>
    7590:	tst	r3, #4
    7594:	and	r3, r3, #3
    7598:	add	r1, pc, r1
    759c:	addeq	r0, r0, #4
    75a0:	add	r3, r1, r3, lsl #4
    75a4:	ldrne	r0, [r0, #4]
    75a8:	ldr	r3, [r3, #4]
    75ac:	mla	r0, r3, r2, r0
    75b0:	pop	{r3, pc}
    75b4:	cmn	r2, #3
    75b8:	bhi	75c8 <__snprintf_chk@plt+0x6048>
    75bc:	add	r2, r2, #4
    75c0:	add	r0, r1, r2, lsl #4
    75c4:	pop	{r3, pc}
    75c8:	ldr	r0, [pc, #28]	; 75ec <__snprintf_chk@plt+0x606c>
    75cc:	mov	r2, #432	; 0x1b0
    75d0:	ldr	r1, [pc, #24]	; 75f0 <__snprintf_chk@plt+0x6070>
    75d4:	ldr	r3, [pc, #24]	; 75f4 <__snprintf_chk@plt+0x6074>
    75d8:	add	r0, pc, r0
    75dc:	add	r1, pc, r1
    75e0:	add	r3, pc, r3
    75e4:	bl	9998 <__snprintf_chk@plt+0x8418>
    75e8:	muleq	r1, r0, r7
    75ec:	andeq	r7, r0, r0, ror #7
    75f0:	andeq	r7, r0, r8, asr r3
    75f4:	andeq	r7, r0, r8, lsr #6
    75f8:	cmp	r2, r3
    75fc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    7600:	mov	r5, r3
    7604:	mov	r6, r2
    7608:	mov	r4, r0
    760c:	mov	r7, r1
    7610:	beq	76b4 <__snprintf_chk@plt+0x6134>
    7614:	bl	757c <__snprintf_chk@plt+0x5ffc>
    7618:	mov	r1, r7
    761c:	mov	r2, r5
    7620:	mov	r8, r0
    7624:	mov	r0, r4
    7628:	bl	757c <__snprintf_chk@plt+0x5ffc>
    762c:	ldrb	r2, [r4, #39]	; 0x27
    7630:	ldr	r3, [pc, #156]	; 76d4 <__snprintf_chk@plt+0x6154>
    7634:	mov	r1, r8
    7638:	and	r2, r2, #3
    763c:	add	r3, pc, r3
    7640:	add	r3, r3, r2, lsl #4
    7644:	ldr	r2, [r3, #4]
    7648:	mov	r9, r0
    764c:	bl	1274 <memcpy@plt>
    7650:	ldrb	r3, [r4, #39]	; 0x27
    7654:	and	r3, r3, #3
    7658:	cmp	r3, #1
    765c:	popne	{r3, r4, r5, r6, r7, r8, r9, pc}
    7660:	ldr	r2, [r9, #8]
    7664:	cmn	r2, #1
    7668:	beq	767c <__snprintf_chk@plt+0x60fc>
    766c:	mov	r0, r4
    7670:	mov	r1, r7
    7674:	bl	757c <__snprintf_chk@plt+0x5ffc>
    7678:	str	r5, [r0, #12]
    767c:	ldr	r2, [r9, #12]
    7680:	cmn	r2, #1
    7684:	beq	7698 <__snprintf_chk@plt+0x6118>
    7688:	mov	r1, r7
    768c:	mov	r0, r4
    7690:	bl	757c <__snprintf_chk@plt+0x5ffc>
    7694:	str	r5, [r0, #8]
    7698:	ldr	r3, [r4, #40]	; 0x28
    769c:	cmp	r3, r6
    76a0:	ldr	r3, [r4, #44]	; 0x2c
    76a4:	streq	r5, [r4, #40]	; 0x28
    76a8:	cmp	r3, r6
    76ac:	streq	r5, [r4, #44]	; 0x2c
    76b0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    76b4:	ldr	r0, [pc, #28]	; 76d8 <__snprintf_chk@plt+0x6158>
    76b8:	movw	r2, #493	; 0x1ed
    76bc:	ldr	r1, [pc, #24]	; 76dc <__snprintf_chk@plt+0x615c>
    76c0:	ldr	r3, [pc, #24]	; 76e0 <__snprintf_chk@plt+0x6160>
    76c4:	add	r0, pc, r0
    76c8:	add	r1, pc, r1
    76cc:	add	r3, pc, r3
    76d0:	bl	9700 <__snprintf_chk@plt+0x8180>
    76d4:	andeq	r9, r1, ip, ror #13
    76d8:	andeq	r7, r0, r4, lsl #6
    76dc:	andeq	r7, r0, ip, ror #4
    76e0:	andeq	r7, r0, r0, lsr r6
    76e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    76e8:	mov	r5, r0
    76ec:	ldrb	fp, [r0, #39]	; 0x27
    76f0:	sub	sp, sp, #20
    76f4:	mov	r4, r1
    76f8:	mov	r8, r2
    76fc:	tst	fp, #4
    7700:	beq	78f8 <__snprintf_chk@plt+0x6378>
    7704:	ldr	r0, [pc, #624]	; 797c <__snprintf_chk@plt+0x63fc>
    7708:	and	r1, fp, #3
    770c:	ldr	r2, [r5, #4]
    7710:	add	r0, pc, r0
    7714:	ldr	r9, [r5, #28]
    7718:	add	r1, r0, r1, lsl #4
    771c:	ldr	r1, [r1, #4]
    7720:	mla	r9, r9, r1, r2
    7724:	ldrb	r6, [r9, r4]
    7728:	add	r2, r6, #2
    772c:	uxtb	r2, r2
    7730:	cmp	r2, #1
    7734:	bls	7850 <__snprintf_chk@plt+0x62d0>
    7738:	ldr	r0, [pc, #576]	; 7980 <__snprintf_chk@plt+0x6400>
    773c:	mov	ip, #0
    7740:	ldr	r1, [pc, #572]	; 7984 <__snprintf_chk@plt+0x6404>
    7744:	ldr	sl, [pc, #572]	; 7988 <__snprintf_chk@plt+0x6408>
    7748:	add	r0, pc, r0
    774c:	add	r1, pc, r1
    7750:	str	r0, [sp, #8]
    7754:	str	r1, [sp, #12]
    7758:	add	sl, pc, sl
    775c:	b	7814 <__snprintf_chk@plt+0x6294>
    7760:	and	r1, fp, #3
    7764:	ldr	r0, [sp, #12]
    7768:	ldr	r2, [r5, #4]
    776c:	add	r1, r0, r1, lsl #4
    7770:	ldr	r3, [r5, #28]
    7774:	ldr	r1, [r1, #4]
    7778:	mla	r3, r3, r1, r2
    777c:	cmn	ip, #1
    7780:	moveq	ip, #255	; 0xff
    7784:	add	r3, r3, r4
    7788:	beq	7798 <__snprintf_chk@plt+0x6218>
    778c:	cmp	ip, #253	; 0xfd
    7790:	movcs	ip, #253	; 0xfd
    7794:	uxtb	ip, ip
    7798:	strb	ip, [r3]
    779c:	mov	r0, r5
    77a0:	mov	r1, r8
    77a4:	mov	r2, r4
    77a8:	mvn	r3, #2
    77ac:	bl	75f8 <__snprintf_chk@plt+0x6078>
    77b0:	mov	r0, r5
    77b4:	mov	r1, r8
    77b8:	mvn	r2, #3
    77bc:	mov	r3, r4
    77c0:	bl	75f8 <__snprintf_chk@plt+0x6078>
    77c4:	mov	r0, r5
    77c8:	mov	r1, r8
    77cc:	mvn	r2, #2
    77d0:	mvn	r3, #3
    77d4:	bl	75f8 <__snprintf_chk@plt+0x6078>
    77d8:	ldrb	fp, [r5, #39]	; 0x27
    77dc:	tst	fp, #4
    77e0:	add	r0, r4, #1
    77e4:	andeq	r2, fp, #3
    77e8:	ldrne	r1, [r5, #28]
    77ec:	addeq	r2, sl, r2, lsl #4
    77f0:	ldreq	r1, [r2, #12]
    77f4:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    77f8:	add	ip, r7, #1
    77fc:	ldrb	r6, [r9, r1]
    7800:	mov	r4, r1
    7804:	add	r2, r6, #2
    7808:	uxtb	r2, r2
    780c:	cmp	r2, #1
    7810:	bls	7854 <__snprintf_chk@plt+0x62d4>
    7814:	cmp	r6, #253	; 0xfd
    7818:	beq	795c <__snprintf_chk@plt+0x63dc>
    781c:	mov	r7, r6
    7820:	cmp	r7, ip
    7824:	movcs	r7, ip
    7828:	bcs	77dc <__snprintf_chk@plt+0x625c>
    782c:	tst	fp, #4
    7830:	bne	7760 <__snprintf_chk@plt+0x61e0>
    7834:	ldr	r1, [sp, #8]
    7838:	and	r3, fp, #3
    783c:	add	r2, r5, #4
    7840:	add	r3, r1, r3, lsl #4
    7844:	ldr	r1, [r3, #4]
    7848:	ldr	r3, [r3, #12]
    784c:	b	7778 <__snprintf_chk@plt+0x61f8>
    7850:	mov	ip, #0
    7854:	cmp	r6, #254	; 0xfe
    7858:	beq	7918 <__snprintf_chk@plt+0x6398>
    785c:	tst	fp, #4
    7860:	beq	78d8 <__snprintf_chk@plt+0x6358>
    7864:	ldr	r2, [r5, #32]
    7868:	and	r1, fp, #3
    786c:	ldr	r0, [r5, #4]
    7870:	cmp	r2, r4
    7874:	ldr	r2, [pc, #272]	; 798c <__snprintf_chk@plt+0x640c>
    7878:	strhi	r4, [r5, #32]
    787c:	add	r2, pc, r2
    7880:	add	r3, r2, r1, lsl #4
    7884:	ldr	r2, [r5, #28]
    7888:	ldr	r1, [r3, #4]
    788c:	mla	r2, r2, r1, r0
    7890:	cmn	ip, #1
    7894:	moveq	ip, #255	; 0xff
    7898:	add	r2, r2, r4
    789c:	beq	78ac <__snprintf_chk@plt+0x632c>
    78a0:	cmp	ip, #253	; 0xfd
    78a4:	movcs	ip, #253	; 0xfd
    78a8:	uxtb	ip, ip
    78ac:	strb	ip, [r2]
    78b0:	mov	r0, r5
    78b4:	mov	r3, r4
    78b8:	mov	r1, r8
    78bc:	mvn	r2, #3
    78c0:	bl	75f8 <__snprintf_chk@plt+0x6078>
    78c4:	cmp	r6, #254	; 0xfe
    78c8:	movne	r0, #0
    78cc:	beq	793c <__snprintf_chk@plt+0x63bc>
    78d0:	add	sp, sp, #20
    78d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    78d8:	ldr	r2, [pc, #176]	; 7990 <__snprintf_chk@plt+0x6410>
    78dc:	and	r1, fp, #3
    78e0:	add	r0, r5, #4
    78e4:	add	r2, pc, r2
    78e8:	add	r3, r2, r1, lsl #4
    78ec:	ldr	r1, [r3, #4]
    78f0:	ldr	r2, [r3, #12]
    78f4:	b	788c <__snprintf_chk@plt+0x630c>
    78f8:	ldr	r1, [pc, #148]	; 7994 <__snprintf_chk@plt+0x6414>
    78fc:	and	ip, fp, #3
    7900:	add	r2, r0, #4
    7904:	add	r1, pc, r1
    7908:	add	r0, r1, ip, lsl #4
    790c:	ldr	r1, [r0, #4]
    7910:	ldr	r9, [r0, #12]
    7914:	b	7720 <__snprintf_chk@plt+0x61a0>
    7918:	mov	r0, r5
    791c:	mov	r1, r8
    7920:	mov	r2, r4
    7924:	mvn	r3, #2
    7928:	str	ip, [sp, #4]
    792c:	bl	75f8 <__snprintf_chk@plt+0x6078>
    7930:	ldrb	fp, [r5, #39]	; 0x27
    7934:	ldr	ip, [sp, #4]
    7938:	b	785c <__snprintf_chk@plt+0x62dc>
    793c:	mov	r0, r5
    7940:	mov	r1, r8
    7944:	mvn	r2, #2
    7948:	mvn	r3, #3
    794c:	bl	75f8 <__snprintf_chk@plt+0x6078>
    7950:	mov	r0, #1
    7954:	add	sp, sp, #20
    7958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    795c:	mov	r0, r5
    7960:	mov	r1, r4
    7964:	str	ip, [sp, #4]
    7968:	bl	735c <__snprintf_chk@plt+0x5ddc>
    796c:	ldrb	fp, [r5, #39]	; 0x27
    7970:	ldr	ip, [sp, #4]
    7974:	mov	r7, r0
    7978:	b	7820 <__snprintf_chk@plt+0x62a0>
    797c:	andeq	r9, r1, r8, lsl r6
    7980:	andeq	r9, r1, r0, ror #11
    7984:	ldrdeq	r9, [r1], -ip
    7988:	ldrdeq	r9, [r1], -r0
    798c:	andeq	r9, r1, ip, lsr #9
    7990:	andeq	r9, r1, r4, asr #8
    7994:	andeq	r9, r1, r4, lsr #8
    7998:	ldr	r3, [pc, #1164]	; 7e2c <__snprintf_chk@plt+0x68ac>
    799c:	ldr	r2, [pc, #1164]	; 7e30 <__snprintf_chk@plt+0x68b0>
    79a0:	add	r3, pc, r3
    79a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    79a8:	subs	r5, r0, #0
    79ac:	ldr	r4, [r3, r2]
    79b0:	sub	sp, sp, #60	; 0x3c
    79b4:	ldr	r3, [r4]
    79b8:	str	r3, [sp, #52]	; 0x34
    79bc:	beq	7a80 <__snprintf_chk@plt+0x6500>
    79c0:	ldrb	r3, [r5, #39]	; 0x27
    79c4:	ldr	r6, [pc, #1128]	; 7e34 <__snprintf_chk@plt+0x68b4>
    79c8:	and	r7, r3, #3
    79cc:	ubfx	r9, r3, #2, #1
    79d0:	cmp	r9, #0
    79d4:	add	r6, pc, r6
    79d8:	lsl	r7, r7, #4
    79dc:	add	r6, r6, r7
    79e0:	bne	7a54 <__snprintf_chk@plt+0x64d4>
    79e4:	ubfx	r3, r3, #3, #3
    79e8:	adds	r1, r1, r3
    79ec:	bcs	7a60 <__snprintf_chk@plt+0x64e0>
    79f0:	ldr	r3, [r6, #12]
    79f4:	cmp	r1, r3
    79f8:	bls	7a38 <__snprintf_chk@plt+0x64b8>
    79fc:	add	r8, r1, r1, lsr #2
    7a00:	cmp	r8, r1
    7a04:	bcc	7a60 <__snprintf_chk@plt+0x64e0>
    7a08:	ldr	sl, [r6, #4]
    7a0c:	mvn	r0, #0
    7a10:	add	sl, sl, #1
    7a14:	mov	r1, sl
    7a18:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    7a1c:	cmp	r8, r0
    7a20:	bhi	7a60 <__snprintf_chk@plt+0x64e0>
    7a24:	cmp	r9, #0
    7a28:	beq	7a68 <__snprintf_chk@plt+0x64e8>
    7a2c:	ldr	r7, [r5, #28]
    7a30:	cmp	r8, r7
    7a34:	bhi	7aa0 <__snprintf_chk@plt+0x6520>
    7a38:	mov	r0, #0
    7a3c:	ldr	r2, [sp, #52]	; 0x34
    7a40:	ldr	r3, [r4]
    7a44:	cmp	r2, r3
    7a48:	bne	7a7c <__snprintf_chk@plt+0x64fc>
    7a4c:	add	sp, sp, #60	; 0x3c
    7a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7a54:	ldr	r3, [r5, #24]
    7a58:	adds	r1, r1, r3
    7a5c:	bcc	79fc <__snprintf_chk@plt+0x647c>
    7a60:	mvn	r0, #11
    7a64:	b	7a3c <__snprintf_chk@plt+0x64bc>
    7a68:	ldr	r3, [pc, #968]	; 7e38 <__snprintf_chk@plt+0x68b8>
    7a6c:	add	r3, pc, r3
    7a70:	add	r7, r3, r7
    7a74:	ldr	r7, [r7, #12]
    7a78:	b	7a30 <__snprintf_chk@plt+0x64b0>
    7a7c:	bl	12b0 <__stack_chk_fail@plt>
    7a80:	ldr	r0, [pc, #948]	; 7e3c <__snprintf_chk@plt+0x68bc>
    7a84:	movw	r2, #1083	; 0x43b
    7a88:	ldr	r1, [pc, #944]	; 7e40 <__snprintf_chk@plt+0x68c0>
    7a8c:	ldr	r3, [pc, #944]	; 7e44 <__snprintf_chk@plt+0x68c4>
    7a90:	add	r0, pc, r0
    7a94:	add	r1, pc, r1
    7a98:	add	r3, pc, r3
    7a9c:	bl	9700 <__snprintf_chk@plt+0x8180>
    7aa0:	mul	r8, sl, r8
    7aa4:	mov	sl, #1
    7aa8:	cmp	r8, #70	; 0x46
    7aac:	movcc	r8, #70	; 0x46
    7ab0:	cmp	r9, #0
    7ab4:	sub	r3, r8, #1
    7ab8:	clz	r3, r3
    7abc:	ldrne	r0, [r5, #4]
    7ac0:	rsb	r3, r3, #32
    7ac4:	moveq	r0, r9
    7ac8:	uxtb	r3, r3
    7acc:	lsl	sl, sl, r3
    7ad0:	mov	r1, sl
    7ad4:	bl	12bc <realloc@plt>
    7ad8:	subs	r9, r0, #0
    7adc:	beq	7a60 <__snprintf_chk@plt+0x64e0>
    7ae0:	ldrb	fp, [r5, #39]	; 0x27
    7ae4:	ubfx	fp, fp, #2, #1
    7ae8:	cmp	fp, #0
    7aec:	addne	r8, r5, #8
    7af0:	beq	7da8 <__snprintf_chk@plt+0x6828>
    7af4:	ldr	r0, [pc, #844]	; 7e48 <__snprintf_chk@plt+0x68c8>
    7af8:	mov	r1, #16
    7afc:	add	r0, pc, r0
    7b00:	bl	46c4 <__snprintf_chk@plt+0x3144>
    7b04:	ldr	r3, [pc, #832]	; 7e4c <__snprintf_chk@plt+0x68cc>
    7b08:	mov	r2, #1
    7b0c:	add	r3, pc, r3
    7b10:	strb	r2, [r3]
    7b14:	ldr	ip, [pc, #820]	; 7e50 <__snprintf_chk@plt+0x68d0>
    7b18:	add	ip, pc, ip
    7b1c:	ldm	ip!, {r0, r1, r2, r3}
    7b20:	str	r0, [r8]
    7b24:	mov	r0, sl
    7b28:	str	r2, [r8, #8]
    7b2c:	str	r1, [r8, #4]
    7b30:	str	r3, [r8, #12]
    7b34:	ldrb	r3, [r5, #39]	; 0x27
    7b38:	str	r9, [r5, #4]
    7b3c:	orr	r3, r3, #4
    7b40:	strb	r3, [r5, #39]	; 0x27
    7b44:	ldr	r1, [r6, #4]
    7b48:	add	r1, r1, #1
    7b4c:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    7b50:	ldrb	r3, [r5, #39]	; 0x27
    7b54:	ldr	r1, [pc, #760]	; 7e54 <__snprintf_chk@plt+0x68d4>
    7b58:	cmp	r7, #0
    7b5c:	and	ip, r3, #3
    7b60:	add	r1, pc, r1
    7b64:	add	r1, r1, ip, lsl #4
    7b68:	ldr	sl, [r1, #4]
    7b6c:	str	r0, [r5, #28]
    7b70:	ldr	r2, [r6, #4]
    7b74:	mla	sl, sl, r0, r9
    7b78:	mul	ip, r2, r7
    7b7c:	add	r1, r9, ip
    7b80:	beq	7dfc <__snprintf_chk@plt+0x687c>
    7b84:	ldrb	r3, [r9, ip]
    7b88:	cmp	r3, #254	; 0xfe
    7b8c:	addne	r8, r7, sl
    7b90:	movne	r2, sl
    7b94:	bne	7ba8 <__snprintf_chk@plt+0x6628>
    7b98:	b	7e0c <__snprintf_chk@plt+0x688c>
    7b9c:	ldrb	r3, [r1, #1]!
    7ba0:	cmp	r3, #254	; 0xfe
    7ba4:	beq	7e0c <__snprintf_chk@plt+0x688c>
    7ba8:	cmp	r3, #255	; 0xff
    7bac:	movne	r3, #254	; 0xfe
    7bb0:	moveq	r3, #255	; 0xff
    7bb4:	strb	r3, [r2], #1
    7bb8:	cmp	r2, r8
    7bbc:	bne	7b9c <__snprintf_chk@plt+0x661c>
    7bc0:	ldrb	r3, [r5, #39]	; 0x27
    7bc4:	ldr	r2, [r6, #4]
    7bc8:	tst	r3, #4
    7bcc:	beq	7d84 <__snprintf_chk@plt+0x6804>
    7bd0:	ldr	r0, [pc, #640]	; 7e58 <__snprintf_chk@plt+0x68d8>
    7bd4:	and	r3, r3, #3
    7bd8:	ldr	r1, [r5, #4]
    7bdc:	add	r0, pc, r0
    7be0:	add	r0, r0, r3, lsl #4
    7be4:	ldr	r3, [r5, #28]
    7be8:	ldr	r0, [r0, #4]
    7bec:	mla	r0, r0, r7, r1
    7bf0:	rsb	r3, r7, r3
    7bf4:	mov	r1, #0
    7bf8:	mul	r2, r2, r3
    7bfc:	bl	1424 <memset@plt>
    7c00:	ldrb	r3, [r5, #39]	; 0x27
    7c04:	tst	r3, #4
    7c08:	ldrne	r2, [r5, #28]
    7c0c:	bne	7c24 <__snprintf_chk@plt+0x66a4>
    7c10:	ldr	r2, [pc, #580]	; 7e5c <__snprintf_chk@plt+0x68dc>
    7c14:	and	r3, r3, #3
    7c18:	add	r2, pc, r2
    7c1c:	add	r3, r2, r3, lsl #4
    7c20:	ldr	r2, [r3, #12]
    7c24:	mov	r0, r8
    7c28:	rsb	r2, r7, r2
    7c2c:	mov	r1, #255	; 0xff
    7c30:	bl	1424 <memset@plt>
    7c34:	cmp	r7, #0
    7c38:	beq	7e04 <__snprintf_chk@plt+0x6884>
    7c3c:	ldr	ip, [pc, #540]	; 7e60 <__snprintf_chk@plt+0x68e0>
    7c40:	mov	r8, #0
    7c44:	add	fp, sp, #20
    7c48:	mov	r9, r8
    7c4c:	add	ip, pc, ip
    7c50:	str	ip, [sp, #4]
    7c54:	ldr	ip, [pc, #520]	; 7e64 <__snprintf_chk@plt+0x68e4>
    7c58:	str	r4, [sp, #12]
    7c5c:	add	ip, pc, ip
    7c60:	str	ip, [sp, #8]
    7c64:	b	7c74 <__snprintf_chk@plt+0x66f4>
    7c68:	add	r9, r9, #1
    7c6c:	cmp	r9, r7
    7c70:	beq	7d44 <__snprintf_chk@plt+0x67c4>
    7c74:	ldrb	r3, [sl], #1
    7c78:	cmp	r3, #254	; 0xfe
    7c7c:	bne	7c68 <__snprintf_chk@plt+0x66e8>
    7c80:	ldrb	r3, [r5, #39]	; 0x27
    7c84:	mov	r0, r5
    7c88:	ldr	ip, [sp, #4]
    7c8c:	tst	r3, #4
    7c90:	and	r3, r3, #3
    7c94:	addeq	r2, r5, #4
    7c98:	add	r3, ip, r3, lsl #4
    7c9c:	ldrne	r2, [r5, #4]
    7ca0:	ldr	r3, [r3, #4]
    7ca4:	mul	r3, r3, r9
    7ca8:	ldr	r1, [r2, r3]
    7cac:	bl	6e50 <__snprintf_chk@plt+0x58d0>
    7cb0:	cmp	r9, r0
    7cb4:	mov	r4, r0
    7cb8:	moveq	r1, #0
    7cbc:	addeq	r8, r8, #1
    7cc0:	strbeq	r1, [sl, #-1]
    7cc4:	beq	7c68 <__snprintf_chk@plt+0x66e8>
    7cc8:	mov	r0, r5
    7ccc:	mvn	r3, #0
    7cd0:	mov	r1, fp
    7cd4:	strb	r3, [sl, #-1]
    7cd8:	mov	r2, r9
    7cdc:	mvn	r3, #3
    7ce0:	bl	75f8 <__snprintf_chk@plt+0x6078>
    7ce4:	ldrb	r3, [r5, #39]	; 0x27
    7ce8:	ldr	ip, [sp, #8]
    7cec:	mov	r1, #0
    7cf0:	tst	r3, #4
    7cf4:	and	r3, r3, #3
    7cf8:	addeq	r0, r5, #4
    7cfc:	ldr	r2, [r6, #4]
    7d00:	add	r3, ip, r3, lsl #4
    7d04:	ldrne	r0, [r5, #4]
    7d08:	ldr	r3, [r3, #4]
    7d0c:	mla	r0, r3, r9, r0
    7d10:	bl	1424 <memset@plt>
    7d14:	mov	r1, r4
    7d18:	mov	r0, r5
    7d1c:	mov	r2, fp
    7d20:	bl	76e4 <__snprintf_chk@plt+0x6164>
    7d24:	add	r8, r8, #1
    7d28:	cmp	r0, #0
    7d2c:	beq	7c68 <__snprintf_chk@plt+0x66e8>
    7d30:	ldr	r1, [sp, #20]
    7d34:	mov	r0, r5
    7d38:	bl	6e50 <__snprintf_chk@plt+0x58d0>
    7d3c:	mov	r1, r0
    7d40:	b	7d18 <__snprintf_chk@plt+0x6798>
    7d44:	ldr	r4, [sp, #12]
    7d48:	ldrb	r3, [r5, #39]	; 0x27
    7d4c:	tst	r3, #4
    7d50:	ubfxeq	r3, r3, #3, #3
    7d54:	ldrne	r3, [r5, #24]
    7d58:	cmp	r8, r3
    7d5c:	moveq	r0, #1
    7d60:	beq	7a3c <__snprintf_chk@plt+0x64bc>
    7d64:	ldr	r0, [pc, #252]	; 7e68 <__snprintf_chk@plt+0x68e8>
    7d68:	movw	r2, #1202	; 0x4b2
    7d6c:	ldr	r1, [pc, #248]	; 7e6c <__snprintf_chk@plt+0x68ec>
    7d70:	ldr	r3, [pc, #248]	; 7e70 <__snprintf_chk@plt+0x68f0>
    7d74:	add	r0, pc, r0
    7d78:	add	r1, pc, r1
    7d7c:	add	r3, pc, r3
    7d80:	bl	9700 <__snprintf_chk@plt+0x8180>
    7d84:	ldr	r0, [pc, #232]	; 7e74 <__snprintf_chk@plt+0x68f4>
    7d88:	and	r3, r3, #3
    7d8c:	add	r1, r5, #4
    7d90:	add	r0, pc, r0
    7d94:	add	r3, r0, r3, lsl #4
    7d98:	ldr	r0, [r3, #4]
    7d9c:	ldr	r3, [r3, #12]
    7da0:	mla	r0, r0, r7, r1
    7da4:	b	7bf0 <__snprintf_chk@plt+0x6670>
    7da8:	ldr	r2, [r6, #4]
    7dac:	add	r1, r5, #4
    7db0:	add	r8, r5, #8
    7db4:	add	r2, r2, #1
    7db8:	mul	r2, r2, r7
    7dbc:	bl	1274 <memcpy@plt>
    7dc0:	ldr	r2, [pc, #176]	; 7e78 <__snprintf_chk@plt+0x68f8>
    7dc4:	ldrb	r3, [r5, #39]	; 0x27
    7dc8:	add	r2, pc, r2
    7dcc:	str	fp, [r5, #32]
    7dd0:	ldrb	r1, [r2]
    7dd4:	ubfx	r2, r3, #3, #3
    7dd8:	bfi	r3, fp, #3, #3
    7ddc:	str	r2, [r5, #24]
    7de0:	cmp	r1, #0
    7de4:	strb	r3, [r5, #39]	; 0x27
    7de8:	ubfx	r3, r3, #2, #1
    7dec:	beq	7af4 <__snprintf_chk@plt+0x6574>
    7df0:	cmp	r3, #0
    7df4:	bne	7af4 <__snprintf_chk@plt+0x6574>
    7df8:	b	7b14 <__snprintf_chk@plt+0x6594>
    7dfc:	mov	r8, sl
    7e00:	b	7bc8 <__snprintf_chk@plt+0x6648>
    7e04:	mov	r8, r7
    7e08:	b	7d48 <__snprintf_chk@plt+0x67c8>
    7e0c:	ldr	r0, [pc, #104]	; 7e7c <__snprintf_chk@plt+0x68fc>
    7e10:	mov	r2, #1152	; 0x480
    7e14:	ldr	r1, [pc, #100]	; 7e80 <__snprintf_chk@plt+0x6900>
    7e18:	ldr	r3, [pc, #100]	; 7e84 <__snprintf_chk@plt+0x6904>
    7e1c:	add	r0, pc, r0
    7e20:	add	r1, pc, r1
    7e24:	add	r3, pc, r3
    7e28:	bl	9700 <__snprintf_chk@plt+0x8180>
    7e2c:	andeq	r9, r1, r0, ror #9
    7e30:	andeq	r0, r0, r4, asr r1
    7e34:	andeq	r9, r1, r4, asr r3
    7e38:			; <UNDEFINED> instruction: 0x000192bc
    7e3c:	andeq	r6, r0, ip, asr r7
    7e40:	andeq	r6, r0, r0, lsr #29
    7e44:	andeq	r6, r0, r4, asr lr
    7e48:	andeq	r9, r1, ip, asr r5
    7e4c:	andeq	r9, r1, fp, lsr r5
    7e50:	andeq	r9, r1, r0, asr #10
    7e54:	andeq	r9, r1, r8, asr #3
    7e58:	andeq	r9, r1, ip, asr #2
    7e5c:	andeq	r9, r1, r0, lsl r1
    7e60:	ldrdeq	r9, [r1], -ip
    7e64:	andeq	r9, r1, ip, asr #1
    7e68:	andeq	r6, r0, r0, asr #25
    7e6c:			; <UNDEFINED> instruction: 0x00006bbc
    7e70:	andeq	r6, r0, r0, ror fp
    7e74:	muleq	r1, r8, pc	; <UNPREDICTABLE>
    7e78:	andeq	r9, r1, pc, ror r2
    7e7c:	strdeq	r6, [r0], -r4
    7e80:	andeq	r6, r0, r4, lsl fp
    7e84:	andeq	r6, r0, r8, asr #21
    7e88:	push	{r4, r5, r6, lr}
    7e8c:	mov	r4, r0
    7e90:	ldrb	ip, [r0, #39]	; 0x27
    7e94:	mov	r5, r1
    7e98:	mov	r6, r2
    7e9c:	ubfx	lr, ip, #2, #1
    7ea0:	cmp	lr, #0
    7ea4:	beq	7fa4 <__snprintf_chk@plt+0x6a24>
    7ea8:	ldr	r2, [r0, #28]
    7eac:	cmp	r5, r2
    7eb0:	bcs	801c <__snprintf_chk@plt+0x6a9c>
    7eb4:	cmp	r3, #0
    7eb8:	bne	7fc8 <__snprintf_chk@plt+0x6a48>
    7ebc:	cmp	lr, #0
    7ec0:	bne	7fbc <__snprintf_chk@plt+0x6a3c>
    7ec4:	ldr	r1, [pc, #432]	; 807c <__snprintf_chk@plt+0x6afc>
    7ec8:	and	r3, ip, #3
    7ecc:	ubfx	r2, ip, #3, #3
    7ed0:	add	r1, pc, r1
    7ed4:	add	r3, r1, r3, lsl #4
    7ed8:	ldr	r3, [r3, #12]
    7edc:	cmp	r2, r3
    7ee0:	bcs	803c <__snprintf_chk@plt+0x6abc>
    7ee4:	and	ip, ip, #3
    7ee8:	cmp	ip, #1
    7eec:	bne	7f5c <__snprintf_chk@plt+0x69dc>
    7ef0:	mvn	r3, #0
    7ef4:	str	r3, [r6, #8]
    7ef8:	ldr	r3, [r4, #44]	; 0x2c
    7efc:	str	r3, [r6, #12]
    7f00:	ldr	r3, [r4, #44]	; 0x2c
    7f04:	cmn	r3, #1
    7f08:	beq	7f48 <__snprintf_chk@plt+0x69c8>
    7f0c:	ldrb	ip, [r4, #39]	; 0x27
    7f10:	ldr	r2, [pc, #360]	; 8080 <__snprintf_chk@plt+0x6b00>
    7f14:	tst	ip, #4
    7f18:	and	ip, ip, #3
    7f1c:	add	r2, pc, r2
    7f20:	addeq	r1, r4, #4
    7f24:	add	ip, r2, ip, lsl #4
    7f28:	ldrne	r1, [r4, #4]
    7f2c:	ldr	r2, [ip, #4]
    7f30:	mla	r3, r2, r3, r1
    7f34:	ldr	r2, [r3, #8]
    7f38:	cmn	r2, #1
    7f3c:	mvneq	r2, #3
    7f40:	streq	r2, [r3, #8]
    7f44:	bne	805c <__snprintf_chk@plt+0x6adc>
    7f48:	ldr	r2, [r4, #40]	; 0x28
    7f4c:	mvn	r3, #3
    7f50:	str	r3, [r4, #44]	; 0x2c
    7f54:	cmn	r2, #1
    7f58:	streq	r3, [r4, #40]	; 0x28
    7f5c:	mov	r1, r5
    7f60:	mov	r2, r6
    7f64:	mov	r0, r4
    7f68:	bl	76e4 <__snprintf_chk@plt+0x6164>
    7f6c:	cmp	r0, #0
    7f70:	bne	7ffc <__snprintf_chk@plt+0x6a7c>
    7f74:	ldrb	r3, [r4, #39]	; 0x27
    7f78:	tst	r3, #4
    7f7c:	ubfxeq	r2, r3, #3, #3
    7f80:	ldrne	r3, [r4, #24]
    7f84:	addeq	r2, r2, #1
    7f88:	movne	r0, #1
    7f8c:	bfieq	r3, r2, #3, #3
    7f90:	addne	r3, r3, r0
    7f94:	strbeq	r3, [r4, #39]	; 0x27
    7f98:	strne	r3, [r4, #24]
    7f9c:	moveq	r0, #1
    7fa0:	pop	{r4, r5, r6, pc}
    7fa4:	ldr	r2, [pc, #216]	; 8084 <__snprintf_chk@plt+0x6b04>
    7fa8:	and	r1, ip, #3
    7fac:	add	r2, pc, r2
    7fb0:	add	r2, r2, r1, lsl #4
    7fb4:	ldr	r2, [r2, #12]
    7fb8:	b	7eac <__snprintf_chk@plt+0x692c>
    7fbc:	ldr	r2, [r4, #24]
    7fc0:	ldr	r3, [r4, #28]
    7fc4:	b	7edc <__snprintf_chk@plt+0x695c>
    7fc8:	mov	r0, r4
    7fcc:	mov	r1, #1
    7fd0:	bl	7998 <__snprintf_chk@plt+0x6418>
    7fd4:	cmp	r0, #0
    7fd8:	poplt	{r4, r5, r6, pc}
    7fdc:	beq	7ff0 <__snprintf_chk@plt+0x6a70>
    7fe0:	mov	r0, r4
    7fe4:	ldr	r1, [r6]
    7fe8:	bl	6e50 <__snprintf_chk@plt+0x58d0>
    7fec:	mov	r5, r0
    7ff0:	ldrb	ip, [r4, #39]	; 0x27
    7ff4:	ubfx	lr, ip, #2, #1
    7ff8:	b	7ebc <__snprintf_chk@plt+0x693c>
    7ffc:	ldr	r0, [pc, #132]	; 8088 <__snprintf_chk@plt+0x6b08>
    8000:	mov	r2, #1056	; 0x420
    8004:	ldr	r1, [pc, #128]	; 808c <__snprintf_chk@plt+0x6b0c>
    8008:	ldr	r3, [pc, #128]	; 8090 <__snprintf_chk@plt+0x6b10>
    800c:	add	r0, pc, r0
    8010:	add	r1, pc, r1
    8014:	add	r3, pc, r3
    8018:	bl	9700 <__snprintf_chk@plt+0x8180>
    801c:	ldr	r0, [pc, #112]	; 8094 <__snprintf_chk@plt+0x6b14>
    8020:	mov	r2, #1024	; 0x400
    8024:	ldr	r1, [pc, #108]	; 8098 <__snprintf_chk@plt+0x6b18>
    8028:	ldr	r3, [pc, #108]	; 809c <__snprintf_chk@plt+0x6b1c>
    802c:	add	r0, pc, r0
    8030:	add	r1, pc, r1
    8034:	add	r3, pc, r3
    8038:	bl	9700 <__snprintf_chk@plt+0x8180>
    803c:	ldr	r0, [pc, #92]	; 80a0 <__snprintf_chk@plt+0x6b20>
    8040:	movw	r2, #1035	; 0x40b
    8044:	ldr	r1, [pc, #88]	; 80a4 <__snprintf_chk@plt+0x6b24>
    8048:	ldr	r3, [pc, #88]	; 80a8 <__snprintf_chk@plt+0x6b28>
    804c:	add	r0, pc, r0
    8050:	add	r1, pc, r1
    8054:	add	r3, pc, r3
    8058:	bl	9700 <__snprintf_chk@plt+0x8180>
    805c:	ldr	r0, [pc, #72]	; 80ac <__snprintf_chk@plt+0x6b2c>
    8060:	movw	r2, #1047	; 0x417
    8064:	ldr	r1, [pc, #68]	; 80b0 <__snprintf_chk@plt+0x6b30>
    8068:	ldr	r3, [pc, #68]	; 80b4 <__snprintf_chk@plt+0x6b34>
    806c:	add	r0, pc, r0
    8070:	add	r1, pc, r1
    8074:	add	r3, pc, r3
    8078:	bl	9700 <__snprintf_chk@plt+0x8180>
    807c:	andeq	r8, r1, r8, asr lr
    8080:	andeq	r8, r1, ip, lsl #28
    8084:	andeq	r8, r1, ip, ror sp
    8088:	muleq	r0, r4, sl
    808c:	andeq	r6, r0, r4, lsr #18
    8090:	ldrdeq	r6, [r0], -r0
    8094:	andeq	r6, r0, r0, ror #18
    8098:	andeq	r6, r0, r4, lsl #18
    809c:			; <UNDEFINED> instruction: 0x00006cb0
    80a0:	andeq	r6, r0, r4, lsl #20
    80a4:	andeq	r6, r0, r4, ror #17
    80a8:	muleq	r0, r0, ip
    80ac:	andeq	r6, r0, r0, lsl #20
    80b0:	andeq	r6, r0, r4, asr #17
    80b4:	andeq	r6, r0, r0, ror ip
    80b8:	push	{r3, lr}
    80bc:	mov	r1, r0
    80c0:	ldrb	r3, [r0, #39]	; 0x27
    80c4:	tst	r3, #4
    80c8:	bne	8120 <__snprintf_chk@plt+0x6ba0>
    80cc:	tst	r3, #56	; 0x38
    80d0:	bne	8100 <__snprintf_chk@plt+0x6b80>
    80d4:	tst	r3, #64	; 0x40
    80d8:	bne	80e4 <__snprintf_chk@plt+0x6b64>
    80dc:	pop	{r3, lr}
    80e0:	b	1250 <free@plt>
    80e4:	ldr	r2, [pc, #84]	; 8140 <__snprintf_chk@plt+0x6bc0>
    80e8:	and	r0, r3, #3
    80ec:	add	r2, pc, r2
    80f0:	add	r3, r2, r0, lsl #4
    80f4:	ldr	r0, [r3, #8]
    80f8:	pop	{r3, lr}
    80fc:	b	ab30 <__snprintf_chk@plt+0x95b0>
    8100:	ldr	r0, [pc, #60]	; 8144 <__snprintf_chk@plt+0x6bc4>
    8104:	mov	r2, #856	; 0x358
    8108:	ldr	r1, [pc, #56]	; 8148 <__snprintf_chk@plt+0x6bc8>
    810c:	ldr	r3, [pc, #56]	; 814c <__snprintf_chk@plt+0x6bcc>
    8110:	add	r0, pc, r0
    8114:	add	r1, pc, r1
    8118:	add	r3, pc, r3
    811c:	bl	9700 <__snprintf_chk@plt+0x8180>
    8120:	ldr	r0, [pc, #40]	; 8150 <__snprintf_chk@plt+0x6bd0>
    8124:	movw	r2, #855	; 0x357
    8128:	ldr	r1, [pc, #36]	; 8154 <__snprintf_chk@plt+0x6bd4>
    812c:	ldr	r3, [pc, #36]	; 8158 <__snprintf_chk@plt+0x6bd8>
    8130:	add	r0, pc, r0
    8134:	add	r1, pc, r1
    8138:	add	r3, pc, r3
    813c:	bl	9700 <__snprintf_chk@plt+0x8180>
    8140:	andeq	r8, r1, ip, lsr ip
    8144:	ldrdeq	r6, [r0], -r4
    8148:	andeq	r6, r0, r0, lsr #16
    814c:	andeq	r6, r0, r4, lsl #16
    8150:	andeq	r6, r0, r0, lsr #19
    8154:	andeq	r6, r0, r0, lsl #16
    8158:	andeq	r6, r0, r4, ror #15
    815c:	push	{r4, r5, r6, lr}
    8160:	ldrb	r3, [r0, #39]	; 0x27
    8164:	ldr	r4, [pc, #100]	; 81d0 <__snprintf_chk@plt+0x6c50>
    8168:	ubfx	r1, r3, #2, #1
    816c:	and	r3, r3, #3
    8170:	cmp	r1, #0
    8174:	add	r4, pc, r4
    8178:	add	r4, r4, r3, lsl #4
    817c:	bne	81b0 <__snprintf_chk@plt+0x6c30>
    8180:	ldr	r3, [r4, #12]
    8184:	add	r6, r0, #4
    8188:	ldr	r5, [r4, #4]
    818c:	mov	r0, r6
    8190:	mul	r5, r5, r3
    8194:	mov	r2, r5
    8198:	bl	1424 <memset@plt>
    819c:	add	r0, r6, r5
    81a0:	ldr	r2, [r4, #12]
    81a4:	mov	r1, #255	; 0xff
    81a8:	pop	{r4, r5, r6, lr}
    81ac:	b	1424 <memset@plt>
    81b0:	ldr	r0, [pc, #28]	; 81d4 <__snprintf_chk@plt+0x6c54>
    81b4:	mov	r2, #768	; 0x300
    81b8:	ldr	r1, [pc, #24]	; 81d8 <__snprintf_chk@plt+0x6c58>
    81bc:	ldr	r3, [pc, #24]	; 81dc <__snprintf_chk@plt+0x6c5c>
    81c0:	add	r0, pc, r0
    81c4:	add	r1, pc, r1
    81c8:	add	r3, pc, r3
    81cc:	bl	9700 <__snprintf_chk@plt+0x8180>
    81d0:			; <UNDEFINED> instruction: 0x00018bb4
    81d4:	andeq	r6, r0, r0, lsl r9
    81d8:	andeq	r6, r0, r0, ror r7
    81dc:	andeq	r6, r0, ip, lsl #14
    81e0:	ldr	r3, [pc, #156]	; 8284 <__snprintf_chk@plt+0x6d04>
    81e4:	push	{r4, r5, r6, lr}
    81e8:	add	r3, pc, r3
    81ec:	mov	r5, r1
    81f0:	mov	r6, r0
    81f4:	mov	r1, #1
    81f8:	ldr	r0, [r3, r5, lsl #4]
    81fc:	bl	11f0 <calloc@plt>
    8200:	subs	r4, r0, #0
    8204:	beq	8250 <__snprintf_chk@plt+0x6cd0>
    8208:	ldrb	r3, [r4, #39]	; 0x27
    820c:	cmp	r6, #0
    8210:	bfi	r3, r5, #0, #2
    8214:	bfc	r3, #6, #1
    8218:	strb	r3, [r4, #39]	; 0x27
    821c:	beq	8278 <__snprintf_chk@plt+0x6cf8>
    8220:	cmp	r5, #1
    8224:	ldr	r5, [pc, #92]	; 8288 <__snprintf_chk@plt+0x6d08>
    8228:	str	r6, [r4]
    822c:	mov	r0, r4
    8230:	add	r5, pc, r5
    8234:	mvneq	r3, #0
    8238:	streq	r3, [r4, #44]	; 0x2c
    823c:	streq	r3, [r4, #40]	; 0x28
    8240:	bl	815c <__snprintf_chk@plt+0x6bdc>
    8244:	ldrb	r3, [r5]
    8248:	cmp	r3, #0
    824c:	beq	8258 <__snprintf_chk@plt+0x6cd8>
    8250:	mov	r0, r4
    8254:	pop	{r4, r5, r6, pc}
    8258:	ldr	r0, [pc, #44]	; 828c <__snprintf_chk@plt+0x6d0c>
    825c:	mov	r1, #16
    8260:	add	r0, pc, r0
    8264:	bl	46c4 <__snprintf_chk@plt+0x3144>
    8268:	mov	r3, #1
    826c:	mov	r0, r4
    8270:	strb	r3, [r5]
    8274:	pop	{r4, r5, r6, pc}
    8278:	ldr	r6, [pc, #16]	; 8290 <__snprintf_chk@plt+0x6d10>
    827c:	add	r6, pc, r6
    8280:	b	8220 <__snprintf_chk@plt+0x6ca0>
    8284:	andeq	r8, r1, r0, asr #22
    8288:	andeq	r8, r1, r6, lsl lr
    828c:	andeq	r8, r1, r8, ror #27
    8290:	ldrdeq	r8, [r1], -ip
    8294:	mov	r1, #0
    8298:	b	81e0 <__snprintf_chk@plt+0x6c60>
    829c:	push	{r4, lr}
    82a0:	subs	r4, r0, #0
    82a4:	popeq	{r4, pc}
    82a8:	ldrb	r3, [r4, #39]	; 0x27
    82ac:	tst	r3, #4
    82b0:	bne	82e4 <__snprintf_chk@plt+0x6d64>
    82b4:	ldrb	r3, [r4, #39]	; 0x27
    82b8:	mov	r0, r4
    82bc:	bfc	r3, #3, #3
    82c0:	strb	r3, [r4, #39]	; 0x27
    82c4:	bl	815c <__snprintf_chk@plt+0x6bdc>
    82c8:	ldrb	r3, [r4, #39]	; 0x27
    82cc:	and	r3, r3, #3
    82d0:	cmp	r3, #1
    82d4:	mvneq	r3, #0
    82d8:	streq	r3, [r4, #44]	; 0x2c
    82dc:	streq	r3, [r4, #40]	; 0x28
    82e0:	pop	{r4, pc}
    82e4:	ldr	r0, [r4, #4]
    82e8:	bl	1250 <free@plt>
    82ec:	ldrb	r3, [r4, #39]	; 0x27
    82f0:	bfc	r3, #2, #1
    82f4:	strb	r3, [r4, #39]	; 0x27
    82f8:	b	82b4 <__snprintf_chk@plt+0x6d34>
    82fc:	push	{r4, lr}
    8300:	subs	r4, r0, #0
    8304:	popeq	{r4, pc}
    8308:	bl	829c <__snprintf_chk@plt+0x6d1c>
    830c:	mov	r0, r4
    8310:	pop	{r4, lr}
    8314:	b	80b8 <__snprintf_chk@plt+0x6b38>
    8318:	ldr	r3, [pc, #216]	; 83f8 <__snprintf_chk@plt+0x6e78>
    831c:	ldr	ip, [pc, #216]	; 83fc <__snprintf_chk@plt+0x6e7c>
    8320:	add	r3, pc, r3
    8324:	push	{r4, r5, r6, r7, r8, lr}
    8328:	subs	r4, r0, #0
    832c:	ldr	r5, [r3, ip]
    8330:	sub	sp, sp, #40	; 0x28
    8334:	mov	r8, r2
    8338:	mov	r6, r1
    833c:	ldr	r3, [r5]
    8340:	str	r3, [sp, #36]	; 0x24
    8344:	beq	83d8 <__snprintf_chk@plt+0x6e58>
    8348:	bl	6e50 <__snprintf_chk@plt+0x58d0>
    834c:	mov	r2, r6
    8350:	mov	r7, r0
    8354:	mov	r0, r4
    8358:	mov	r1, r7
    835c:	bl	73d0 <__snprintf_chk@plt+0x5e50>
    8360:	cmn	r0, #1
    8364:	beq	83b8 <__snprintf_chk@plt+0x6e38>
    8368:	ldrb	r1, [r4, #39]	; 0x27
    836c:	ldr	r2, [pc, #140]	; 8400 <__snprintf_chk@plt+0x6e80>
    8370:	tst	r1, #4
    8374:	and	r1, r1, #3
    8378:	add	r2, pc, r2
    837c:	addeq	r4, r4, #4
    8380:	add	r1, r2, r1, lsl #4
    8384:	ldrne	r4, [r4, #4]
    8388:	ldr	r2, [r1, #4]
    838c:	mla	r3, r2, r0, r4
    8390:	ldr	r3, [r3, #4]
    8394:	cmp	r3, r8
    8398:	mvnne	r0, #16
    839c:	moveq	r0, #0
    83a0:	ldr	r2, [sp, #36]	; 0x24
    83a4:	ldr	r3, [r5]
    83a8:	cmp	r2, r3
    83ac:	bne	83d4 <__snprintf_chk@plt+0x6e54>
    83b0:	add	sp, sp, #40	; 0x28
    83b4:	pop	{r4, r5, r6, r7, r8, pc}
    83b8:	mov	r0, r4
    83bc:	mov	r1, r7
    83c0:	add	r2, sp, #4
    83c4:	mov	r3, #1
    83c8:	stmib	sp, {r6, r8}
    83cc:	bl	7e88 <__snprintf_chk@plt+0x6908>
    83d0:	b	83a0 <__snprintf_chk@plt+0x6e20>
    83d4:	bl	12b0 <__stack_chk_fail@plt>
    83d8:	ldr	r0, [pc, #36]	; 8404 <__snprintf_chk@plt+0x6e84>
    83dc:	movw	r2, #1242	; 0x4da
    83e0:	ldr	r1, [pc, #32]	; 8408 <__snprintf_chk@plt+0x6e88>
    83e4:	ldr	r3, [pc, #32]	; 840c <__snprintf_chk@plt+0x6e8c>
    83e8:	add	r0, pc, r0
    83ec:	add	r1, pc, r1
    83f0:	add	r3, pc, r3
    83f4:	bl	9700 <__snprintf_chk@plt+0x8180>
    83f8:	andeq	r8, r1, r0, ror #22
    83fc:	andeq	r0, r0, r4, asr r1
    8400:			; <UNDEFINED> instruction: 0x000189b0
    8404:	andeq	r5, r0, r4, lsl #28
    8408:	andeq	r6, r0, r8, asr #10
    840c:	andeq	r6, r0, ip, lsl #10
    8410:	cmp	r0, #0
    8414:	bxeq	lr
    8418:	ldrb	r3, [r0, #39]	; 0x27
    841c:	tst	r3, #4
    8420:	ldrne	r0, [r0, #24]
    8424:	ubfxeq	r0, r3, #3, #3
    8428:	bx	lr
    842c:	ldr	r3, [pc, #280]	; 854c <__snprintf_chk@plt+0x6fcc>
    8430:	ldr	r2, [pc, #280]	; 8550 <__snprintf_chk@plt+0x6fd0>
    8434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8438:	add	r3, pc, r3
    843c:	mov	r4, r0
    8440:	ldrb	r0, [r0, #39]	; 0x27
    8444:	ldr	r6, [r3, r2]
    8448:	sub	sp, sp, #16
    844c:	tst	r0, #4
    8450:	ubfxeq	r0, r0, #3, #3
    8454:	ldrne	r0, [r4, #24]
    8458:	ldr	r3, [r6]
    845c:	adds	r5, r0, #1
    8460:	str	r3, [sp, #12]
    8464:	bne	852c <__snprintf_chk@plt+0x6fac>
    8468:	lsl	r0, r5, #2
    846c:	bl	1358 <malloc@plt>
    8470:	subs	r7, r0, #0
    8474:	beq	8540 <__snprintf_chk@plt+0x6fc0>
    8478:	add	r5, sp, #4
    847c:	mov	r0, r4
    8480:	mvn	r3, #1
    8484:	mov	r8, #0
    8488:	mov	r1, r5
    848c:	stmib	sp, {r3, r8}
    8490:	bl	7038 <__snprintf_chk@plt+0x5ab8>
    8494:	cmn	r0, #1
    8498:	beq	84fc <__snprintf_chk@plt+0x6f7c>
    849c:	ldr	sl, [pc, #176]	; 8554 <__snprintf_chk@plt+0x6fd4>
    84a0:	sub	r9, r7, #4
    84a4:	add	sl, pc, sl
    84a8:	ldrb	r3, [r4, #39]	; 0x27
    84ac:	tst	r3, #4
    84b0:	and	r3, r3, #3
    84b4:	addeq	ip, r4, #4
    84b8:	add	r1, sl, r3, lsl #4
    84bc:	ldrne	ip, [r4, #4]
    84c0:	cmp	r3, #1
    84c4:	ldr	r2, [r1, #4]
    84c8:	mla	r0, r2, r0, ip
    84cc:	ble	8520 <__snprintf_chk@plt+0x6fa0>
    84d0:	cmp	r3, #2
    84d4:	bne	8528 <__snprintf_chk@plt+0x6fa8>
    84d8:	ldr	r3, [r0]
    84dc:	str	r3, [r9, #4]!
    84e0:	mov	r0, r4
    84e4:	mov	r1, r5
    84e8:	add	r8, r8, #1
    84ec:	bl	7038 <__snprintf_chk@plt+0x5ab8>
    84f0:	cmn	r0, #1
    84f4:	bne	84a8 <__snprintf_chk@plt+0x6f28>
    84f8:	lsl	r8, r8, #2
    84fc:	mov	r0, r7
    8500:	mov	r3, #0
    8504:	str	r3, [r7, r8]
    8508:	ldr	r2, [sp, #12]
    850c:	ldr	r3, [r6]
    8510:	cmp	r2, r3
    8514:	bne	8548 <__snprintf_chk@plt+0x6fc8>
    8518:	add	sp, sp, #16
    851c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8520:	ldr	r3, [r0, #4]
    8524:	b	84dc <__snprintf_chk@plt+0x6f5c>
    8528:	bl	754c <__snprintf_chk@plt+0x5fcc>
    852c:	mvn	r0, #0
    8530:	mov	r1, r5
    8534:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    8538:	cmp	r0, #3
    853c:	bhi	8468 <__snprintf_chk@plt+0x6ee8>
    8540:	mov	r0, #0
    8544:	b	8508 <__snprintf_chk@plt+0x6f88>
    8548:	bl	12b0 <__stack_chk_fail@plt>
    854c:	andeq	r8, r1, r8, asr #20
    8550:	andeq	r0, r0, r4, asr r1
    8554:	andeq	r8, r1, r4, lsl #17
    8558:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    855c:	sub	sp, sp, #208	; 0xd0
    8560:	ldrb	r6, [r3, #1]
    8564:	mov	r7, #0
    8568:	ldrb	sl, [r3, #9]
    856c:	mov	ip, r3
    8570:	ldrb	r8, [r3, #10]
    8574:	mov	r4, #0
    8578:	strd	r6, [sp, #160]	; 0xa0
    857c:	mov	r7, #0
    8580:	ldrb	r6, [r3, #2]
    8584:	str	r1, [sp, #192]	; 0xc0
    8588:	lsl	r1, sl, #8
    858c:	str	r1, [sp, #16]
    8590:	strd	r6, [sp, #40]	; 0x28
    8594:	lsr	r7, sl, #24
    8598:	str	r7, [sp, #20]
    859c:	lsl	r6, r8, #16
    85a0:	lsr	r7, r8, #16
    85a4:	ldrd	r8, [sp, #16]
    85a8:	ldrb	r5, [r3, #4]
    85ac:	orr	r6, r6, r8
    85b0:	orr	r7, r7, r9
    85b4:	ldrb	r8, [ip, #8]
    85b8:	ldr	r9, [sp, #40]	; 0x28
    85bc:	str	r2, [sp, #32]
    85c0:	ldr	r2, [sp, #160]	; 0xa0
    85c4:	lsr	r3, r9, #16
    85c8:	mov	r9, #0
    85cc:	strd	r8, [sp, #168]	; 0xa8
    85d0:	ldr	r9, [sp, #40]	; 0x28
    85d4:	lsr	fp, r2, #24
    85d8:	ldrb	r8, [ip, #11]
    85dc:	lsl	sl, r2, #8
    85e0:	lsl	r2, r9, #16
    85e4:	mov	r9, #0
    85e8:	strd	r8, [sp, #160]	; 0xa0
    85ec:	orr	r8, sl, r2
    85f0:	orr	r9, fp, r3
    85f4:	ldrd	r2, [sp, #168]	; 0xa8
    85f8:	ldr	fp, [sp, #160]	; 0xa0
    85fc:	ldrb	sl, [ip, #12]
    8600:	orr	r6, r6, r2
    8604:	ldrb	r2, [ip, #3]
    8608:	orr	r7, r7, r3
    860c:	strd	r8, [sp, #40]	; 0x28
    8610:	lsl	r8, fp, #24
    8614:	lsr	r9, fp, #8
    8618:	str	sl, [sp, #20]
    861c:	orr	fp, r9, r7
    8620:	orr	sl, r8, r6
    8624:	ldrd	r8, [sp, #40]	; 0x28
    8628:	mov	r3, #0
    862c:	ldrb	r6, [ip, #13]
    8630:	mov	r7, #0
    8634:	strd	sl, [sp, #168]	; 0xa8
    8638:	lsr	fp, r2, #8
    863c:	lsl	sl, r2, #24
    8640:	ldrb	r2, [ip]
    8644:	orr	r3, r3, r9
    8648:	mov	r9, #0
    864c:	orr	r3, r3, fp
    8650:	orr	r2, r2, r8
    8654:	lsl	fp, r6, #8
    8658:	ldrb	r8, [ip, #5]
    865c:	ldrb	r6, [ip, #14]
    8660:	orr	r2, r2, sl
    8664:	strd	r8, [sp, #40]	; 0x28
    8668:	orr	r8, r2, r4
    866c:	strd	r6, [sp, #184]	; 0xb8
    8670:	orr	r9, r3, r5
    8674:	str	r4, [sp, #16]
    8678:	mov	r7, #0
    867c:	ldr	r6, [sp, #40]	; 0x28
    8680:	ldrd	r2, [sp, #16]
    8684:	strd	r8, [sp, #160]	; 0xa0
    8688:	ldrd	r8, [sp, #168]	; 0xa8
    868c:	ldr	r1, [sp, #192]	; 0xc0
    8690:	orr	r9, r9, r3
    8694:	lsl	r3, r6, #8
    8698:	ldrb	r6, [ip, #6]
    869c:	orr	r8, r8, r2
    86a0:	ldrb	r2, [ip, #7]
    86a4:	strd	r6, [sp, #40]	; 0x28
    86a8:	orr	r6, r8, r4
    86ac:	orr	r7, r9, fp
    86b0:	strd	r6, [sp, #176]	; 0xb0
    86b4:	ldr	r7, [sp, #184]	; 0xb8
    86b8:	mov	r9, #0
    86bc:	ldrb	r8, [ip, #15]
    86c0:	ldr	ip, [sp, #32]
    86c4:	lsl	fp, r7, #16
    86c8:	ldrd	r6, [sp, #160]	; 0xa0
    86cc:	strd	r8, [sp, #184]	; 0xb8
    86d0:	orr	r6, r6, r4
    86d4:	orr	r7, r7, r3
    86d8:	strd	r6, [sp, #16]
    86dc:	bic	r3, ip, #7
    86e0:	ldr	r7, [sp, #40]	; 0x28
    86e4:	add	r3, r1, r3
    86e8:	ldr	sl, [sp, #184]	; 0xb8
    86ec:	cmp	r1, r3
    86f0:	str	r0, [sp, #184]	; 0xb8
    86f4:	movw	r1, #25698	; 0x6462
    86f8:	lsl	r9, r7, #16
    86fc:	ldrd	r6, [sp, #176]	; 0xb0
    8700:	movw	r0, #25971	; 0x6573
    8704:	movt	r1, #29797	; 0x7465
    8708:	orr	r6, r6, r4
    870c:	orr	r7, r7, fp
    8710:	strd	r6, [sp, #40]	; 0x28
    8714:	lsl	r7, sl, #24
    8718:	ldrd	sl, [sp, #16]
    871c:	movt	r0, #31092	; 0x7974
    8720:	str	r3, [sp, #168]	; 0xa8
    8724:	lsl	r3, ip, #24
    8728:	orr	sl, sl, r4
    872c:	orr	fp, fp, r9
    8730:	strd	sl, [sp, #16]
    8734:	lsl	r9, r2, #24
    8738:	ldrd	sl, [sp, #40]	; 0x28
    873c:	movw	r2, #28525	; 0x6f6d
    8740:	str	r3, [sp, #180]	; 0xb4
    8744:	movt	r2, #28260	; 0x6e64
    8748:	orr	r6, r4, sl
    874c:	orr	r7, r7, fp
    8750:	ldrd	sl, [sp, #16]
    8754:	eor	r0, r0, r6
    8758:	eor	r1, r1, r7
    875c:	movw	r3, #29281	; 0x7261
    8760:	orr	r8, r4, sl
    8764:	orr	r9, r9, fp
    8768:	strd	r0, [sp, #160]	; 0xa0
    876c:	movt	r3, #25711	; 0x646f
    8770:	movw	sl, #29281	; 0x7261
    8774:	movw	fp, #26469	; 0x6765
    8778:	movt	sl, #28261	; 0x6e65
    877c:	movt	fp, #27769	; 0x6c79
    8780:	movw	r0, #25973	; 0x6575
    8784:	movw	r1, #28005	; 0x6d65
    8788:	movt	r0, #28787	; 0x7073
    878c:	movt	r1, #29551	; 0x736f
    8790:	eor	r5, r9, fp
    8794:	str	r4, [sp, #176]	; 0xb0
    8798:	eor	r2, r2, r6
    879c:	eor	r4, r8, sl
    87a0:	eor	r3, r3, r7
    87a4:	strd	r4, [sp, #16]
    87a8:	eor	sl, r8, r0
    87ac:	and	r5, ip, #7
    87b0:	eor	fp, r9, r1
    87b4:	str	r5, [sp, #196]	; 0xc4
    87b8:	beq	8a7c <__snprintf_chk@plt+0x74fc>
    87bc:	ldr	ip, [sp, #192]	; 0xc0
    87c0:	strd	sl, [sp, #40]	; 0x28
    87c4:	ldrb	r4, [ip, #1]
    87c8:	add	ip, ip, #8
    87cc:	ldrb	r0, [ip, #-6]
    87d0:	lsr	r7, r4, #24
    87d4:	lsl	sl, r4, #8
    87d8:	lsr	r8, r0, #16
    87dc:	str	sl, [sp]
    87e0:	str	r8, [sp, #12]
    87e4:	lsl	fp, r0, #16
    87e8:	str	r7, [sp, #4]
    87ec:	mov	sl, #0
    87f0:	str	fp, [sp, #8]
    87f4:	ldrd	r4, [sp, #8]
    87f8:	ldrd	r6, [sp]
    87fc:	ldrb	r8, [ip, #-5]
    8800:	orr	r6, r6, r4
    8804:	ldrb	r4, [ip, #-8]
    8808:	orr	r7, r7, r5
    880c:	mov	r5, #0
    8810:	lsr	r0, r8, #8
    8814:	orr	r4, r4, r6
    8818:	str	r0, [sp, #28]
    881c:	lsl	r6, r8, #24
    8820:	ldrb	r0, [ip, #-3]
    8824:	orr	r5, r5, r7
    8828:	str	r6, [sp, #24]
    882c:	ldrd	r6, [sp, #24]
    8830:	ldrb	r8, [ip, #-2]
    8834:	orr	r5, r5, r7
    8838:	lsl	r7, r0, #8
    883c:	ldrb	r0, [ip, #-1]
    8840:	orr	r4, r4, r6
    8844:	ldrb	fp, [ip, #-4]
    8848:	lsl	r6, r8, #16
    884c:	str	r7, [sp, #140]	; 0x8c
    8850:	orr	r4, r4, sl
    8854:	str	sl, [sp, #136]	; 0x88
    8858:	lsl	r7, r0, #24
    885c:	ldrd	r8, [sp, #136]	; 0x88
    8860:	orr	r5, r5, fp
    8864:	str	r6, [sp, #148]	; 0x94
    8868:	str	sl, [sp, #144]	; 0x90
    886c:	orr	r4, r4, r8
    8870:	str	r7, [sp, #156]	; 0x9c
    8874:	orr	r5, r5, r9
    8878:	ldrd	r6, [sp, #144]	; 0x90
    887c:	str	sl, [sp, #152]	; 0x98
    8880:	ldrd	r8, [sp, #152]	; 0x98
    8884:	orr	r4, r4, r6
    8888:	orr	r5, r5, r7
    888c:	ldrd	r6, [sp, #160]	; 0xa0
    8890:	orr	r8, r8, r4
    8894:	orr	r9, r9, r5
    8898:	ldrd	r0, [sp, #40]	; 0x28
    889c:	lsl	r4, r2, #13
    88a0:	eor	r6, r6, r8
    88a4:	eor	r7, r7, r9
    88a8:	orr	r4, r4, r3, lsr #19
    88ac:	str	r4, [sp, #48]	; 0x30
    88b0:	ldrd	r4, [sp, #16]
    88b4:	adds	r0, r0, r2
    88b8:	adc	r1, r1, r3
    88bc:	strd	r8, [sp, #32]
    88c0:	adds	r4, r4, r6
    88c4:	lsl	r9, r6, #16
    88c8:	lsl	r8, r7, #16
    88cc:	lsl	r3, r3, #13
    88d0:	adc	r5, r5, r7
    88d4:	orr	r9, r9, r7, lsr #16
    88d8:	orr	r8, r8, r6, lsr #16
    88dc:	str	r9, [sp, #64]	; 0x40
    88e0:	str	r8, [sp, #68]	; 0x44
    88e4:	orr	r3, r3, r2, lsr #19
    88e8:	str	r3, [sp, #52]	; 0x34
    88ec:	ldrd	r6, [sp, #64]	; 0x40
    88f0:	ldrd	r2, [sp, #48]	; 0x30
    88f4:	eor	r6, r6, r4
    88f8:	eor	r7, r7, r5
    88fc:	eor	r2, r2, r0
    8900:	eor	r3, r3, r1
    8904:	str	r0, [sp, #60]	; 0x3c
    8908:	lsl	r0, r6, #21
    890c:	adds	r4, r4, r2
    8910:	orr	r0, r0, r7, lsr #11
    8914:	str	r1, [sp, #56]	; 0x38
    8918:	lsl	r8, r2, #17
    891c:	str	r0, [sp, #72]	; 0x48
    8920:	lsl	r0, r7, #21
    8924:	adc	r5, r5, r3
    8928:	orr	r8, r8, r3, lsr #15
    892c:	orr	r0, r0, r6, lsr #11
    8930:	str	r8, [sp, #80]	; 0x50
    8934:	str	r0, [sp, #76]	; 0x4c
    8938:	lsl	r3, r3, #17
    893c:	ldrd	r8, [sp, #56]	; 0x38
    8940:	orr	r3, r3, r2, lsr #15
    8944:	str	r3, [sp, #84]	; 0x54
    8948:	ldrd	r2, [sp, #72]	; 0x48
    894c:	adds	r6, r6, r8
    8950:	adc	r7, r7, r9
    8954:	ldrd	r0, [sp, #80]	; 0x50
    8958:	eor	r2, r2, r6
    895c:	eor	r3, r3, r7
    8960:	eor	r0, r0, r4
    8964:	str	r4, [sp, #92]	; 0x5c
    8968:	lsl	r4, r2, #16
    896c:	str	r5, [sp, #88]	; 0x58
    8970:	orr	r4, r4, r3, lsr #16
    8974:	str	r4, [sp, #112]	; 0x70
    8978:	lsl	r4, r3, #16
    897c:	eor	r1, r1, r5
    8980:	orr	r4, r4, r2, lsr #16
    8984:	str	r4, [sp, #116]	; 0x74
    8988:	ldrd	r4, [sp, #88]	; 0x58
    898c:	adds	r6, r6, r0
    8990:	adc	r7, r7, r1
    8994:	lsl	r8, r0, #13
    8998:	adds	r2, r2, r4
    899c:	orr	r8, r8, r1, lsr #19
    89a0:	adc	r3, r3, r5
    89a4:	lsl	r1, r1, #13
    89a8:	ldrd	r4, [sp, #112]	; 0x70
    89ac:	orr	r1, r1, r0, lsr #19
    89b0:	str	r8, [sp, #96]	; 0x60
    89b4:	str	r1, [sp, #100]	; 0x64
    89b8:	eor	r4, r4, r2
    89bc:	ldrd	r0, [sp, #96]	; 0x60
    89c0:	eor	r5, r5, r3
    89c4:	str	r6, [sp, #108]	; 0x6c
    89c8:	eor	r0, r0, r6
    89cc:	str	r7, [sp, #104]	; 0x68
    89d0:	lsl	r6, r4, #21
    89d4:	eor	r1, r1, r7
    89d8:	orr	r6, r6, r5, lsr #11
    89dc:	str	r6, [sp, #120]	; 0x78
    89e0:	ldrd	r6, [sp, #104]	; 0x68
    89e4:	adds	r2, r2, r0
    89e8:	lsl	r9, r0, #17
    89ec:	lsl	r8, r5, #21
    89f0:	adc	r3, r3, r1
    89f4:	orr	r9, r9, r1, lsr #15
    89f8:	adds	r6, r6, r4
    89fc:	orr	r8, r8, r4, lsr #11
    8a00:	lsl	r1, r1, #17
    8a04:	str	r8, [sp, #124]	; 0x7c
    8a08:	adc	r7, r7, r5
    8a0c:	str	r9, [sp, #128]	; 0x80
    8a10:	ldrd	r4, [sp, #120]	; 0x78
    8a14:	orr	r1, r1, r0, lsr #15
    8a18:	ldr	r9, [sp, #168]	; 0xa8
    8a1c:	str	r1, [sp, #132]	; 0x84
    8a20:	eor	r4, r4, r6
    8a24:	ldrd	r0, [sp, #32]
    8a28:	eor	r5, r5, r7
    8a2c:	str	r2, [sp, #20]
    8a30:	cmp	r9, ip
    8a34:	eor	r0, r0, r6
    8a38:	eor	r1, r1, r7
    8a3c:	strd	r4, [sp, #160]	; 0xa0
    8a40:	strd	r0, [sp, #40]	; 0x28
    8a44:	str	r3, [sp, #16]
    8a48:	ldrd	r6, [sp, #128]	; 0x80
    8a4c:	eor	r2, r2, r6
    8a50:	eor	r3, r3, r7
    8a54:	bne	87c4 <__snprintf_chk@plt+0x7244>
    8a58:	ldr	r7, [sp, #192]	; 0xc0
    8a5c:	mov	fp, r1
    8a60:	mov	sl, r0
    8a64:	add	r1, r7, #8
    8a68:	rsb	r1, r1, r9
    8a6c:	bic	r1, r1, #7
    8a70:	add	r1, r1, #8
    8a74:	add	r7, r7, r1
    8a78:	str	r7, [sp, #192]	; 0xc0
    8a7c:	ldr	r8, [sp, #196]	; 0xc4
    8a80:	sub	r1, r8, #1
    8a84:	cmp	r1, #6
    8a88:	addls	pc, pc, r1, lsl #2
    8a8c:	b	8b84 <__snprintf_chk@plt+0x7604>
    8a90:	b	8b68 <__snprintf_chk@plt+0x75e8>
    8a94:	b	8b48 <__snprintf_chk@plt+0x75c8>
    8a98:	b	8b28 <__snprintf_chk@plt+0x75a8>
    8a9c:	b	8b08 <__snprintf_chk@plt+0x7588>
    8aa0:	b	8aec <__snprintf_chk@plt+0x756c>
    8aa4:	b	8acc <__snprintf_chk@plt+0x754c>
    8aa8:	b	8aac <__snprintf_chk@plt+0x752c>
    8aac:	ldr	r9, [sp, #192]	; 0xc0
    8ab0:	mov	r0, #0
    8ab4:	ldrb	r4, [r9, #6]
    8ab8:	lsl	r1, r4, #16
    8abc:	ldrd	r4, [sp, #176]	; 0xb0
    8ac0:	orr	r4, r4, r0
    8ac4:	orr	r5, r5, r1
    8ac8:	strd	r4, [sp, #176]	; 0xb0
    8acc:	ldr	r6, [sp, #192]	; 0xc0
    8ad0:	mov	r0, #0
    8ad4:	ldrd	r8, [sp, #176]	; 0xb0
    8ad8:	ldrb	r4, [r6, #5]
    8adc:	orr	r8, r8, r0
    8ae0:	lsl	r1, r4, #8
    8ae4:	orr	r9, r9, r1
    8ae8:	strd	r8, [sp, #176]	; 0xb0
    8aec:	ldr	r9, [sp, #192]	; 0xc0
    8af0:	mov	r0, #0
    8af4:	ldrd	r4, [sp, #176]	; 0xb0
    8af8:	ldrb	r1, [r9, #4]
    8afc:	orr	r4, r4, r0
    8b00:	orr	r5, r5, r1
    8b04:	strd	r4, [sp, #176]	; 0xb0
    8b08:	ldr	r6, [sp, #192]	; 0xc0
    8b0c:	ldrd	r8, [sp, #176]	; 0xb0
    8b10:	ldrb	r4, [r6, #3]
    8b14:	lsr	r1, r4, #8
    8b18:	lsl	r0, r4, #24
    8b1c:	orr	r8, r8, r0
    8b20:	orr	r9, r9, r1
    8b24:	strd	r8, [sp, #176]	; 0xb0
    8b28:	ldr	r9, [sp, #192]	; 0xc0
    8b2c:	ldrb	r4, [r9, #2]
    8b30:	lsr	r1, r4, #16
    8b34:	lsl	r0, r4, #16
    8b38:	ldrd	r4, [sp, #176]	; 0xb0
    8b3c:	orr	r4, r4, r0
    8b40:	orr	r5, r5, r1
    8b44:	strd	r4, [sp, #176]	; 0xb0
    8b48:	ldr	r6, [sp, #192]	; 0xc0
    8b4c:	ldrd	r8, [sp, #176]	; 0xb0
    8b50:	ldrb	r4, [r6, #1]
    8b54:	lsr	r1, r4, #24
    8b58:	lsl	r0, r4, #8
    8b5c:	orr	r8, r8, r0
    8b60:	orr	r9, r9, r1
    8b64:	strd	r8, [sp, #176]	; 0xb0
    8b68:	ldr	r9, [sp, #192]	; 0xc0
    8b6c:	mov	r1, #0
    8b70:	ldrd	r4, [sp, #176]	; 0xb0
    8b74:	ldrb	r0, [r9]
    8b78:	orr	r5, r5, r1
    8b7c:	orr	r4, r4, r0
    8b80:	strd	r4, [sp, #176]	; 0xb0
    8b84:	ldrd	r6, [sp, #160]	; 0xa0
    8b88:	lsl	ip, r2, #13
    8b8c:	ldrd	r0, [sp, #176]	; 0xb0
    8b90:	ldrd	r4, [sp, #16]
    8b94:	eor	r1, r1, r7
    8b98:	eor	r0, r0, r6
    8b9c:	adds	r4, r4, r0
    8ba0:	lsl	r8, r1, #16
    8ba4:	adc	r5, r5, r1
    8ba8:	lsl	r9, r0, #16
    8bac:	strd	r4, [sp]
    8bb0:	orr	r7, r8, r0, lsr #16
    8bb4:	adds	r8, r2, sl
    8bb8:	orr	r6, r9, r1, lsr #16
    8bbc:	orr	r4, ip, r3, lsr #19
    8bc0:	adc	r9, r3, fp
    8bc4:	lsl	r1, r3, #13
    8bc8:	ldrd	sl, [sp]
    8bcc:	eor	r4, r4, r8
    8bd0:	orr	r5, r1, r2, lsr #19
    8bd4:	mov	r3, r8
    8bd8:	eor	r6, r6, sl
    8bdc:	eor	r7, r7, fp
    8be0:	eor	r5, r5, r9
    8be4:	lsl	r8, r4, #17
    8be8:	lsl	r1, r6, #21
    8bec:	lsl	ip, r7, #21
    8bf0:	orr	r0, r8, r5, lsr #15
    8bf4:	adds	r8, r6, r9
    8bf8:	adc	r9, r7, r3
    8bfc:	orr	sl, r1, r7, lsr #11
    8c00:	orr	fp, ip, r6, lsr #11
    8c04:	ldrd	r6, [sp]
    8c08:	lsl	ip, r5, #17
    8c0c:	eor	r2, r8, sl
    8c10:	adds	r6, r6, r4
    8c14:	orr	r1, ip, r4, lsr #15
    8c18:	adc	r7, r7, r5
    8c1c:	eor	r0, r0, r6
    8c20:	eor	r3, r9, fp
    8c24:	eor	r1, r1, r7
    8c28:	strd	r8, [sp, #8]
    8c2c:	lsl	r4, r2, #16
    8c30:	mov	r9, r6
    8c34:	lsl	r6, r0, #13
    8c38:	orr	sl, r4, r3, lsr #16
    8c3c:	lsl	ip, r3, #16
    8c40:	orr	r4, r6, r1, lsr #19
    8c44:	adds	r6, r2, r7
    8c48:	adc	r7, r3, r9
    8c4c:	orr	fp, ip, r2, lsr #16
    8c50:	ldrd	r2, [sp, #8]
    8c54:	lsl	ip, r1, #13
    8c58:	orr	r5, ip, r0, lsr #19
    8c5c:	eor	r8, r6, sl
    8c60:	adds	r2, r2, r0
    8c64:	eor	r9, r7, fp
    8c68:	adc	r3, r3, r1
    8c6c:	eor	r4, r4, r2
    8c70:	eor	r5, r5, r3
    8c74:	strd	r6, [sp]
    8c78:	mov	r7, r2
    8c7c:	lsl	r2, r4, #17
    8c80:	lsl	r1, r8, #21
    8c84:	lsl	ip, r9, #21
    8c88:	orr	r0, r2, r5, lsr #15
    8c8c:	adds	r2, r8, r3
    8c90:	adc	r3, r9, r7
    8c94:	orr	sl, r1, r9, lsr #11
    8c98:	orr	fp, ip, r8, lsr #11
    8c9c:	strd	r2, [sp, #8]
    8ca0:	eor	r6, r2, sl
    8ca4:	eor	r7, r3, fp
    8ca8:	ldrd	r2, [sp]
    8cac:	lsl	ip, r5, #17
    8cb0:	orr	r1, ip, r4, lsr #15
    8cb4:	ldrd	r8, [sp, #8]
    8cb8:	adds	r2, r2, r4
    8cbc:	lsl	ip, r6, #16
    8cc0:	adc	r3, r3, r5
    8cc4:	eor	r0, r0, r2
    8cc8:	eor	r1, r1, r3
    8ccc:	mov	r4, #255	; 0xff
    8cd0:	mov	r5, #0
    8cd4:	eor	r4, r4, r3
    8cd8:	eor	r5, r5, r2
    8cdc:	ldrd	r2, [sp, #176]	; 0xb0
    8ce0:	orr	sl, ip, r7, lsr #16
    8ce4:	lsl	ip, r7, #16
    8ce8:	str	ip, [sp]
    8cec:	eor	r9, r9, r3
    8cf0:	ldr	r3, [sp]
    8cf4:	lsl	ip, r0, #13
    8cf8:	eor	r8, r8, r2
    8cfc:	adds	r2, r4, r6
    8d00:	orr	fp, r3, r6, lsr #16
    8d04:	adc	r3, r5, r7
    8d08:	adds	r8, r8, r0
    8d0c:	strd	r2, [sp]
    8d10:	orr	r2, ip, r1, lsr #19
    8d14:	lsl	ip, r1, #13
    8d18:	ldrd	r4, [sp]
    8d1c:	adc	r9, r9, r1
    8d20:	eor	r2, r2, r8
    8d24:	orr	r3, ip, r0, lsr #19
    8d28:	eor	r3, r3, r9
    8d2c:	eor	r4, r4, sl
    8d30:	mov	r7, r8
    8d34:	lsl	r8, r2, #17
    8d38:	eor	r5, r5, fp
    8d3c:	orr	r0, r8, r3, lsr #15
    8d40:	adds	r8, r4, r9
    8d44:	lsl	r1, r4, #21
    8d48:	adc	r9, r5, r7
    8d4c:	ldrd	r6, [sp]
    8d50:	lsl	ip, r5, #21
    8d54:	orr	sl, r1, r5, lsr #11
    8d58:	adds	r6, r6, r2
    8d5c:	orr	fp, ip, r4, lsr #11
    8d60:	lsl	ip, r3, #17
    8d64:	adc	r7, r7, r3
    8d68:	eor	r0, r0, r6
    8d6c:	orr	r1, ip, r2, lsr #15
    8d70:	eor	r4, r8, sl
    8d74:	eor	r5, r9, fp
    8d78:	eor	r1, r1, r7
    8d7c:	strd	r8, [sp, #8]
    8d80:	mov	r9, r6
    8d84:	lsl	r6, r0, #13
    8d88:	lsl	r3, r4, #16
    8d8c:	lsl	ip, r5, #16
    8d90:	orr	r2, r6, r1, lsr #19
    8d94:	adds	r6, r7, r4
    8d98:	adc	r7, r9, r5
    8d9c:	orr	sl, r3, r5, lsr #16
    8da0:	orr	fp, ip, r4, lsr #16
    8da4:	strd	r6, [sp]
    8da8:	eor	r4, r6, sl
    8dac:	eor	r5, r7, fp
    8db0:	ldrd	r6, [sp, #8]
    8db4:	lsl	ip, r1, #13
    8db8:	orr	r3, ip, r0, lsr #19
    8dbc:	lsl	ip, r5, #21
    8dc0:	adds	r6, r6, r0
    8dc4:	orr	fp, ip, r4, lsr #11
    8dc8:	adc	r7, r7, r1
    8dcc:	eor	r2, r2, r6
    8dd0:	eor	r3, r3, r7
    8dd4:	mov	r9, r6
    8dd8:	lsl	r6, r2, #17
    8ddc:	lsl	r1, r4, #21
    8de0:	orr	r0, r6, r3, lsr #15
    8de4:	adds	r6, r4, r7
    8de8:	adc	r7, r5, r9
    8dec:	ldrd	r8, [sp]
    8df0:	lsl	ip, r3, #17
    8df4:	orr	sl, r1, r5, lsr #11
    8df8:	adds	r8, r8, r2
    8dfc:	orr	r1, ip, r2, lsr #15
    8e00:	adc	r9, r9, r3
    8e04:	eor	r0, r0, r8
    8e08:	eor	r4, r6, sl
    8e0c:	eor	r5, r7, fp
    8e10:	eor	r1, r1, r9
    8e14:	strd	r6, [sp, #8]
    8e18:	mov	r7, r8
    8e1c:	lsl	r8, r0, #13
    8e20:	lsl	r3, r4, #16
    8e24:	lsl	ip, r5, #16
    8e28:	orr	r2, r8, r1, lsr #19
    8e2c:	adds	r8, r9, r4
    8e30:	adc	r9, r7, r5
    8e34:	orr	sl, r3, r5, lsr #16
    8e38:	orr	fp, ip, r4, lsr #16
    8e3c:	ldrd	r4, [sp, #8]
    8e40:	lsl	ip, r1, #13
    8e44:	eor	r6, r8, sl
    8e48:	adds	r4, r4, r0
    8e4c:	orr	r3, ip, r0, lsr #19
    8e50:	adc	r5, r5, r1
    8e54:	eor	r2, r2, r4
    8e58:	eor	r7, r9, fp
    8e5c:	eor	r3, r3, r5
    8e60:	strd	r8, [sp]
    8e64:	mov	r9, r4
    8e68:	lsl	r4, r2, #17
    8e6c:	lsl	r1, r6, #21
    8e70:	lsl	ip, r7, #21
    8e74:	orr	r0, r4, r3, lsr #15
    8e78:	adds	r4, r6, r5
    8e7c:	orr	sl, r1, r7, lsr #11
    8e80:	adc	r5, r7, r9
    8e84:	orr	fp, ip, r6, lsr #11
    8e88:	ldrd	r6, [sp]
    8e8c:	lsl	ip, r3, #17
    8e90:	strd	r4, [sp, #8]
    8e94:	eor	r4, r4, sl
    8e98:	adds	r6, r6, r2
    8e9c:	eor	r5, r5, fp
    8ea0:	adc	r7, r7, r3
    8ea4:	eor	r0, r0, r6
    8ea8:	orr	r1, ip, r2, lsr #15
    8eac:	lsl	ip, r4, #16
    8eb0:	eor	r1, r1, r7
    8eb4:	orr	sl, ip, r5, lsr #16
    8eb8:	mov	r3, r6
    8ebc:	lsl	ip, r5, #16
    8ec0:	lsl	r6, r0, #13
    8ec4:	orr	fp, ip, r4, lsr #16
    8ec8:	orr	r8, r6, r1, lsr #19
    8ecc:	adds	r4, r4, r7
    8ed0:	ldrd	r6, [sp, #8]
    8ed4:	eor	r2, sl, r4
    8ed8:	adc	r5, r5, r3
    8edc:	lsl	ip, r1, #13
    8ee0:	adds	r6, r6, r0
    8ee4:	eor	r3, fp, r5
    8ee8:	eor	r6, r6, r8
    8eec:	orr	r9, ip, r0, lsr #19
    8ef0:	adc	r7, r7, r1
    8ef4:	lsl	ip, r2, #21
    8ef8:	eor	r7, r7, r9
    8efc:	adds	r4, r4, r6
    8f00:	orr	r0, ip, r3, lsr #11
    8f04:	lsl	ip, r3, #21
    8f08:	lsl	r3, r6, #17
    8f0c:	adc	r5, r5, r7
    8f10:	orr	r1, ip, r2, lsr #11
    8f14:	orr	r8, r3, r7, lsr #15
    8f18:	lsl	ip, r7, #17
    8f1c:	eor	r0, r0, r4
    8f20:	eor	r0, r0, r8
    8f24:	eor	r1, r1, r5
    8f28:	orr	r9, ip, r6, lsr #15
    8f2c:	eor	r2, r5, r0
    8f30:	eor	r1, r1, r9
    8f34:	ldr	r5, [sp, #184]	; 0xb8
    8f38:	eor	r3, r4, r1
    8f3c:	lsr	r0, r2, #8
    8f40:	lsr	r1, r2, #16
    8f44:	strb	r2, [r5]
    8f48:	strb	r3, [r5, #4]
    8f4c:	strb	r1, [r5, #2]
    8f50:	lsr	r1, r2, #24
    8f54:	strb	r0, [r5, #1]
    8f58:	lsr	r2, r3, #8
    8f5c:	strb	r1, [r5, #3]
    8f60:	strb	r2, [r5, #5]
    8f64:	lsr	r2, r3, #16
    8f68:	lsr	r3, r3, #24
    8f6c:	strb	r2, [r5, #6]
    8f70:	strb	r3, [r5, #7]
    8f74:	add	sp, sp, #208	; 0xd0
    8f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    8f7c:	bx	lr
    8f80:	push	{r3, r4, r5, lr}
    8f84:	subs	r5, r0, #0
    8f88:	popeq	{r3, r4, r5, pc}
    8f8c:	ldr	r0, [r5]
    8f90:	cmp	r0, #0
    8f94:	movne	r4, r5
    8f98:	beq	8fac <__snprintf_chk@plt+0x7a2c>
    8f9c:	bl	1250 <free@plt>
    8fa0:	ldr	r0, [r4, #4]!
    8fa4:	cmp	r0, #0
    8fa8:	bne	8f9c <__snprintf_chk@plt+0x7a1c>
    8fac:	mov	r3, #0
    8fb0:	str	r3, [r5]
    8fb4:	pop	{r3, r4, r5, pc}
    8fb8:	push	{r4, lr}
    8fbc:	mov	r4, r0
    8fc0:	bl	8f80 <__snprintf_chk@plt+0x7a00>
    8fc4:	mov	r0, r4
    8fc8:	pop	{r4, lr}
    8fcc:	b	1250 <free@plt>
    8fd0:	push	{r3, r4, r5, r6, r7, lr}
    8fd4:	subs	r6, r0, #0
    8fd8:	beq	9070 <__snprintf_chk@plt+0x7af0>
    8fdc:	ldr	r3, [r6]
    8fe0:	cmp	r3, #0
    8fe4:	beq	9094 <__snprintf_chk@plt+0x7b14>
    8fe8:	mov	r2, r6
    8fec:	mov	r3, #0
    8ff0:	b	8ff8 <__snprintf_chk@plt+0x7a78>
    8ff4:	mov	r3, ip
    8ff8:	ldr	r1, [r2, #4]!
    8ffc:	add	ip, r3, #1
    9000:	cmp	r1, #0
    9004:	bne	8ff4 <__snprintf_chk@plt+0x7a74>
    9008:	adds	r4, r3, #2
    900c:	bne	90b8 <__snprintf_chk@plt+0x7b38>
    9010:	mov	r0, r4
    9014:	bl	1358 <malloc@plt>
    9018:	subs	r7, r0, #0
    901c:	beq	90a8 <__snprintf_chk@plt+0x7b28>
    9020:	ldr	r0, [r6]
    9024:	cmp	r0, #0
    9028:	beq	90b0 <__snprintf_chk@plt+0x7b30>
    902c:	mov	r4, r7
    9030:	b	9040 <__snprintf_chk@plt+0x7ac0>
    9034:	ldr	r0, [r6, #4]!
    9038:	cmp	r0, #0
    903c:	beq	9084 <__snprintf_chk@plt+0x7b04>
    9040:	bl	1418 <__strdup@plt>
    9044:	cmp	r0, #0
    9048:	str	r0, [r4], #4
    904c:	mov	r5, r0
    9050:	mov	r3, r4
    9054:	bne	9034 <__snprintf_chk@plt+0x7ab4>
    9058:	mov	r0, r7
    905c:	bl	8f80 <__snprintf_chk@plt+0x7a00>
    9060:	mov	r0, r7
    9064:	bl	1250 <free@plt>
    9068:	mov	r0, r5
    906c:	pop	{r3, r4, r5, r6, r7, pc}
    9070:	mov	r0, #4
    9074:	bl	1358 <malloc@plt>
    9078:	subs	r3, r0, #0
    907c:	beq	90a8 <__snprintf_chk@plt+0x7b28>
    9080:	mov	r7, r3
    9084:	mov	r2, #0
    9088:	mov	r0, r7
    908c:	str	r2, [r3]
    9090:	pop	{r3, r4, r5, r6, r7, pc}
    9094:	mov	r4, #1
    9098:	lsl	r0, r4, #2
    909c:	bl	1358 <malloc@plt>
    90a0:	subs	r7, r0, #0
    90a4:	bne	9020 <__snprintf_chk@plt+0x7aa0>
    90a8:	mov	r0, #0
    90ac:	pop	{r3, r4, r5, r6, r7, pc}
    90b0:	mov	r3, r7
    90b4:	b	9084 <__snprintf_chk@plt+0x7b04>
    90b8:	mvn	r0, #0
    90bc:	mov	r1, r4
    90c0:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    90c4:	cmp	r0, #3
    90c8:	bhi	9098 <__snprintf_chk@plt+0x7b18>
    90cc:	b	90a8 <__snprintf_chk@plt+0x7b28>
    90d0:	subs	r3, r0, #0
    90d4:	beq	90fc <__snprintf_chk@plt+0x7b7c>
    90d8:	ldr	r0, [r3]
    90dc:	cmp	r0, #0
    90e0:	bxeq	lr
    90e4:	mov	r0, #0
    90e8:	ldr	r2, [r3, #4]!
    90ec:	add	r0, r0, #1
    90f0:	cmp	r2, #0
    90f4:	bne	90e8 <__snprintf_chk@plt+0x7b68>
    90f8:	bx	lr
    90fc:	mov	r0, r3
    9100:	bx	lr
    9104:	push	{r4, r5, r6, r7, r8, lr}
    9108:	subs	r8, r0, #0
    910c:	mov	r7, r1
    9110:	beq	917c <__snprintf_chk@plt+0x7bfc>
    9114:	cmp	r1, #0
    9118:	beq	9184 <__snprintf_chk@plt+0x7c04>
    911c:	ldr	r4, [r8]
    9120:	cmp	r4, #0
    9124:	moveq	r5, r8
    9128:	beq	9174 <__snprintf_chk@plt+0x7bf4>
    912c:	mov	r6, r8
    9130:	mov	r5, r8
    9134:	b	9144 <__snprintf_chk@plt+0x7bc4>
    9138:	ldr	r4, [r6, #4]!
    913c:	cmp	r4, #0
    9140:	beq	9174 <__snprintf_chk@plt+0x7bf4>
    9144:	mov	r0, r4
    9148:	mov	r1, r7
    914c:	bl	1208 <strcmp@plt>
    9150:	cmp	r0, #0
    9154:	strne	r4, [r5]
    9158:	addne	r5, r5, #4
    915c:	bne	9138 <__snprintf_chk@plt+0x7bb8>
    9160:	mov	r0, r4
    9164:	bl	1250 <free@plt>
    9168:	ldr	r4, [r6, #4]!
    916c:	cmp	r4, #0
    9170:	bne	9144 <__snprintf_chk@plt+0x7bc4>
    9174:	mov	r3, #0
    9178:	str	r3, [r5]
    917c:	mov	r0, r8
    9180:	pop	{r4, r5, r6, r7, r8, pc}
    9184:	ldr	r0, [pc, #24]	; 91a4 <__snprintf_chk@plt+0x7c24>
    9188:	movw	r2, #543	; 0x21f
    918c:	ldr	r1, [pc, #20]	; 91a8 <__snprintf_chk@plt+0x7c28>
    9190:	ldr	r3, [pc, #20]	; 91ac <__snprintf_chk@plt+0x7c2c>
    9194:	add	r0, pc, r0
    9198:	add	r1, pc, r1
    919c:	add	r3, pc, r3
    91a0:	bl	9700 <__snprintf_chk@plt+0x8180>
    91a4:	andeq	r4, r0, r8, lsl #8
    91a8:	ldrdeq	r5, [r0], -r8
    91ac:	andeq	r5, r0, r8, asr #23
    91b0:	push	{r3, r4, r5, lr}
    91b4:	subs	r5, r0, #0
    91b8:	beq	91ec <__snprintf_chk@plt+0x7c6c>
    91bc:	ldr	r1, [r5]
    91c0:	cmp	r1, #0
    91c4:	beq	91ec <__snprintf_chk@plt+0x7c6c>
    91c8:	add	r4, r5, #4
    91cc:	b	91dc <__snprintf_chk@plt+0x7c5c>
    91d0:	ldr	r1, [r4], #4
    91d4:	cmp	r1, #0
    91d8:	beq	91ec <__snprintf_chk@plt+0x7c6c>
    91dc:	mov	r0, r4
    91e0:	bl	9104 <__snprintf_chk@plt+0x7b84>
    91e4:	cmp	r4, #0
    91e8:	bne	91d0 <__snprintf_chk@plt+0x7c50>
    91ec:	mov	r0, r5
    91f0:	pop	{r3, r4, r5, pc}
    91f4:	push	{r4, lr}
    91f8:	ldr	r4, [pc, #68]	; 9244 <__snprintf_chk@plt+0x7cc4>
    91fc:	add	r4, pc, r4
    9200:	ldr	r3, [r4]
    9204:	cmp	r3, #0
    9208:	blt	9214 <__snprintf_chk@plt+0x7c94>
    920c:	mov	r0, #0
    9210:	pop	{r4, pc}
    9214:	ldr	r0, [pc, #44]	; 9248 <__snprintf_chk@plt+0x7cc8>
    9218:	movw	r1, #257	; 0x101
    921c:	movt	r1, #8
    9220:	add	r0, pc, r0
    9224:	bl	131c <open64@plt>
    9228:	cmp	r0, #0
    922c:	str	r0, [r4]
    9230:	bge	920c <__snprintf_chk@plt+0x7c8c>
    9234:	bl	1400 <__errno_location@plt>
    9238:	ldr	r0, [r0]
    923c:	rsb	r0, r0, #0
    9240:	pop	{r4, pc}
    9244:	andeq	r7, r1, r8, lsr lr
    9248:	strdeq	r5, [r0], -r8
    924c:	ldr	r3, [pc, #168]	; 92fc <__snprintf_chk@plt+0x7d7c>
    9250:	orr	r1, r0, #524288	; 0x80000
    9254:	ldr	ip, [pc, #164]	; 9300 <__snprintf_chk@plt+0x7d80>
    9258:	mov	r0, #1
    925c:	add	r3, pc, r3
    9260:	mov	r2, #0
    9264:	push	{r4, r5, r6, lr}
    9268:	sub	sp, sp, #24
    926c:	ldr	r4, [r3, ip]
    9270:	ldr	r3, [r4]
    9274:	str	r3, [sp, #20]
    9278:	bl	1508 <socket@plt>
    927c:	subs	r5, r0, #0
    9280:	blt	92e8 <__snprintf_chk@plt+0x7d68>
    9284:	mov	r1, #8388608	; 0x800000
    9288:	add	r6, sp, #12
    928c:	bl	490c <__snprintf_chk@plt+0x338c>
    9290:	bl	13ac <getpid@plt>
    9294:	mov	r3, #0
    9298:	cmp	r0, #1
    929c:	mov	r0, r6
    92a0:	movwne	r2, #38528	; 0x9680
    92a4:	movweq	r2, #10000	; 0x2710
    92a8:	movtne	r2, #152	; 0x98
    92ac:	bl	6d94 <__snprintf_chk@plt+0x5814>
    92b0:	mov	r2, #8
    92b4:	mov	r3, r6
    92b8:	str	r2, [sp]
    92bc:	mov	r0, r5
    92c0:	mov	r1, #1
    92c4:	mov	r2, #21
    92c8:	bl	122c <setsockopt@plt>
    92cc:	mov	r0, r5
    92d0:	ldr	r2, [sp, #20]
    92d4:	ldr	r3, [r4]
    92d8:	cmp	r2, r3
    92dc:	bne	92f8 <__snprintf_chk@plt+0x7d78>
    92e0:	add	sp, sp, #24
    92e4:	pop	{r4, r5, r6, pc}
    92e8:	bl	1400 <__errno_location@plt>
    92ec:	ldr	r0, [r0]
    92f0:	rsb	r0, r0, #0
    92f4:	b	92d0 <__snprintf_chk@plt+0x7d50>
    92f8:	bl	12b0 <__stack_chk_fail@plt>
    92fc:	andeq	r7, r1, r4, lsr #24
    9300:	andeq	r0, r0, r4, asr r1
    9304:	push	{r4, lr}
    9308:	ldr	r4, [pc, #84]	; 9364 <__snprintf_chk@plt+0x7de4>
    930c:	add	r4, pc, r4
    9310:	ldr	r3, [r4]
    9314:	cmp	r3, #0
    9318:	blt	9324 <__snprintf_chk@plt+0x7da4>
    931c:	mov	r0, #0
    9320:	pop	{r4, pc}
    9324:	ldr	r3, [pc, #60]	; 9368 <__snprintf_chk@plt+0x7de8>
    9328:	add	r3, pc, r3
    932c:	ldrb	r0, [r3]
    9330:	cmp	r0, #0
    9334:	bne	9344 <__snprintf_chk@plt+0x7dc4>
    9338:	mov	r3, #2
    933c:	str	r3, [r4]
    9340:	pop	{r4, pc}
    9344:	ldr	r0, [pc, #32]	; 936c <__snprintf_chk@plt+0x7dec>
    9348:	movw	r1, #257	; 0x101
    934c:	movt	r1, #8
    9350:	add	r0, pc, r0
    9354:	bl	40bc <__snprintf_chk@plt+0x2b3c>
    9358:	str	r0, [r4]
    935c:	and	r0, r0, r0, asr #31
    9360:	pop	{r4, pc}
    9364:	andeq	r7, r1, r4, lsr #26
    9368:	andeq	r7, r1, fp, asr #26
    936c:	andeq	r3, r0, r0, lsl #26
    9370:	ldr	r3, [pc, #64]	; 93b8 <__snprintf_chk@plt+0x7e38>
    9374:	push	{r4, lr}
    9378:	ldr	r4, [pc, r3]
    937c:	cmp	r4, #0
    9380:	poplt	{r4, pc}
    9384:	bl	13ac <getpid@plt>
    9388:	cmp	r0, #1
    938c:	popne	{r4, pc}
    9390:	cmp	r4, #2
    9394:	bgt	93ac <__snprintf_chk@plt+0x7e2c>
    9398:	ldr	r3, [pc, #28]	; 93bc <__snprintf_chk@plt+0x7e3c>
    939c:	mvn	r2, #0
    93a0:	add	r3, pc, r3
    93a4:	str	r2, [r3]
    93a8:	pop	{r4, pc}
    93ac:	mov	r0, r4
    93b0:	bl	3aec <__snprintf_chk@plt+0x256c>
    93b4:	b	9398 <__snprintf_chk@plt+0x7e18>
    93b8:			; <UNDEFINED> instruction: 0x00017cb8
    93bc:	muleq	r1, r0, ip
    93c0:	push	{r3, r4, r5, r6, r7, lr}
    93c4:	ldr	r3, [pc, #740]	; 96b0 <__snprintf_chk@plt+0x8130>
    93c8:	ldr	r4, [pc, r3]
    93cc:	cmp	r4, #9
    93d0:	beq	94e8 <__snprintf_chk@plt+0x7f68>
    93d4:	sub	r3, r4, #7
    93d8:	cmp	r3, #1
    93dc:	bls	948c <__snprintf_chk@plt+0x7f0c>
    93e0:	sub	r3, r4, #3
    93e4:	cmp	r3, #1
    93e8:	movhi	r3, r4
    93ec:	bls	94b0 <__snprintf_chk@plt+0x7f30>
    93f0:	sub	r4, r4, #5
    93f4:	cmp	r4, #1
    93f8:	bls	9500 <__snprintf_chk@plt+0x7f80>
    93fc:	cmp	r3, #4
    9400:	beq	9448 <__snprintf_chk@plt+0x7ec8>
    9404:	sub	r2, r3, #6
    9408:	cmp	r2, #2
    940c:	bls	9448 <__snprintf_chk@plt+0x7ec8>
    9410:	cmp	r3, #2
    9414:	beq	9448 <__snprintf_chk@plt+0x7ec8>
    9418:	ldr	r5, [pc, #660]	; 96b4 <__snprintf_chk@plt+0x8134>
    941c:	ldr	r4, [pc, #660]	; 96b8 <__snprintf_chk@plt+0x8138>
    9420:	add	r5, pc, r5
    9424:	add	r4, pc, r4
    9428:	ldr	r0, [r5]
    942c:	bl	3aec <__snprintf_chk@plt+0x256c>
    9430:	str	r0, [r5]
    9434:	ldr	r0, [r4]
    9438:	bl	3aec <__snprintf_chk@plt+0x256c>
    943c:	str	r0, [r4]
    9440:	pop	{r3, r4, r5, r6, r7, lr}
    9444:	b	9304 <__snprintf_chk@plt+0x7d84>
    9448:	bl	91f4 <__snprintf_chk@plt+0x7c74>
    944c:	cmp	r0, #0
    9450:	blt	9418 <__snprintf_chk@plt+0x7e98>
    9454:	ldr	r6, [pc, #608]	; 96bc <__snprintf_chk@plt+0x813c>
    9458:	mov	r4, r0
    945c:	ldr	r5, [pc, #604]	; 96c0 <__snprintf_chk@plt+0x8140>
    9460:	add	r6, pc, r6
    9464:	add	r5, pc, r5
    9468:	ldr	r0, [r6]
    946c:	bl	3aec <__snprintf_chk@plt+0x256c>
    9470:	str	r0, [r6]
    9474:	ldr	r0, [r5]
    9478:	bl	3aec <__snprintf_chk@plt+0x256c>
    947c:	str	r0, [r5]
    9480:	bl	9370 <__snprintf_chk@plt+0x7df0>
    9484:	mov	r0, r4
    9488:	pop	{r3, r4, r5, r6, r7, pc}
    948c:	bl	13ac <getpid@plt>
    9490:	cmp	r0, #1
    9494:	beq	94a8 <__snprintf_chk@plt+0x7f28>
    9498:	mov	r0, #2
    949c:	bl	152c <isatty@plt>
    94a0:	cmp	r0, #0
    94a4:	bgt	9418 <__snprintf_chk@plt+0x7e98>
    94a8:	cmp	r4, #7
    94ac:	bne	93e0 <__snprintf_chk@plt+0x7e60>
    94b0:	ldr	r5, [pc, #524]	; 96c4 <__snprintf_chk@plt+0x8144>
    94b4:	add	r5, pc, r5
    94b8:	ldr	r3, [r5]
    94bc:	cmp	r3, #0
    94c0:	blt	9534 <__snprintf_chk@plt+0x7fb4>
    94c4:	mov	r4, #0
    94c8:	ldr	r5, [pc, #504]	; 96c8 <__snprintf_chk@plt+0x8148>
    94cc:	add	r5, pc, r5
    94d0:	ldr	r0, [r5]
    94d4:	bl	3aec <__snprintf_chk@plt+0x256c>
    94d8:	str	r0, [r5]
    94dc:	bl	9370 <__snprintf_chk@plt+0x7df0>
    94e0:	mov	r0, r4
    94e4:	pop	{r3, r4, r5, r6, r7, pc}
    94e8:	ldr	r6, [pc, #476]	; 96cc <__snprintf_chk@plt+0x814c>
    94ec:	mov	r4, #0
    94f0:	ldr	r5, [pc, #472]	; 96d0 <__snprintf_chk@plt+0x8150>
    94f4:	add	r6, pc, r6
    94f8:	add	r5, pc, r5
    94fc:	b	9468 <__snprintf_chk@plt+0x7ee8>
    9500:	ldr	r5, [pc, #460]	; 96d4 <__snprintf_chk@plt+0x8154>
    9504:	add	r5, pc, r5
    9508:	ldr	r3, [r5]
    950c:	cmp	r3, #0
    9510:	blt	95c4 <__snprintf_chk@plt+0x8044>
    9514:	mov	r4, #0
    9518:	ldr	r5, [pc, #440]	; 96d8 <__snprintf_chk@plt+0x8158>
    951c:	add	r5, pc, r5
    9520:	ldr	r0, [r5]
    9524:	bl	3aec <__snprintf_chk@plt+0x256c>
    9528:	str	r0, [r5]
    952c:	bl	9370 <__snprintf_chk@plt+0x7df0>
    9530:	b	94e0 <__snprintf_chk@plt+0x7f60>
    9534:	mov	r0, #2
    9538:	bl	924c <__snprintf_chk@plt+0x7ccc>
    953c:	cmp	r0, #0
    9540:	mov	r4, r0
    9544:	str	r0, [r5]
    9548:	blt	95a8 <__snprintf_chk@plt+0x8028>
    954c:	ldr	r6, [pc, #392]	; 96dc <__snprintf_chk@plt+0x815c>
    9550:	add	r6, pc, r6
    9554:	add	r0, r6, #2
    9558:	bl	13d0 <strlen@plt>
    955c:	mov	r1, r6
    9560:	add	r2, r0, #2
    9564:	mov	r0, r4
    9568:	bl	1568 <connect@plt>
    956c:	cmp	r0, #0
    9570:	bge	94c4 <__snprintf_chk@plt+0x7f44>
    9574:	bl	1400 <__errno_location@plt>
    9578:	ldr	r4, [r0]
    957c:	ldr	r0, [r5]
    9580:	bl	3aec <__snprintf_chk@plt+0x256c>
    9584:	rsb	r4, r4, #0
    9588:	cmp	r4, #0
    958c:	str	r0, [r5]
    9590:	bge	94c8 <__snprintf_chk@plt+0x7f48>
    9594:	ldr	r3, [pc, #324]	; 96e0 <__snprintf_chk@plt+0x8160>
    9598:	add	r3, pc, r3
    959c:	ldr	r3, [r3]
    95a0:	mov	r4, r3
    95a4:	b	93f0 <__snprintf_chk@plt+0x7e70>
    95a8:	bl	3aec <__snprintf_chk@plt+0x256c>
    95ac:	ldr	r3, [pc, #304]	; 96e4 <__snprintf_chk@plt+0x8164>
    95b0:	add	r3, pc, r3
    95b4:	ldr	r3, [r3]
    95b8:	mov	r4, r3
    95bc:	str	r0, [r5]
    95c0:	b	93f0 <__snprintf_chk@plt+0x7e70>
    95c4:	mov	r0, #2
    95c8:	bl	924c <__snprintf_chk@plt+0x7ccc>
    95cc:	cmp	r0, #0
    95d0:	mov	r4, r0
    95d4:	str	r0, [r5]
    95d8:	blt	961c <__snprintf_chk@plt+0x809c>
    95dc:	ldr	r6, [pc, #260]	; 96e8 <__snprintf_chk@plt+0x8168>
    95e0:	add	r6, pc, r6
    95e4:	add	r0, r6, #2
    95e8:	bl	13d0 <strlen@plt>
    95ec:	mov	r1, r6
    95f0:	add	r7, r0, #2
    95f4:	mov	r0, r4
    95f8:	mov	r2, r7
    95fc:	bl	1568 <connect@plt>
    9600:	cmp	r0, #0
    9604:	blt	963c <__snprintf_chk@plt+0x80bc>
    9608:	ldr	r3, [pc, #220]	; 96ec <__snprintf_chk@plt+0x816c>
    960c:	mov	r2, #0
    9610:	add	r3, pc, r3
    9614:	strb	r2, [r3]
    9618:	b	9514 <__snprintf_chk@plt+0x7f94>
    961c:	bl	3aec <__snprintf_chk@plt+0x256c>
    9620:	ldr	r2, [pc, #200]	; 96f0 <__snprintf_chk@plt+0x8170>
    9624:	ldr	r3, [pc, #200]	; 96f4 <__snprintf_chk@plt+0x8174>
    9628:	add	r2, pc, r2
    962c:	add	r3, pc, r3
    9630:	ldr	r3, [r3]
    9634:	str	r0, [r2]
    9638:	b	93fc <__snprintf_chk@plt+0x7e7c>
    963c:	ldr	r0, [r5]
    9640:	bl	3aec <__snprintf_chk@plt+0x256c>
    9644:	mov	r0, #1
    9648:	bl	924c <__snprintf_chk@plt+0x7ccc>
    964c:	cmp	r0, #0
    9650:	str	r0, [r5]
    9654:	blt	961c <__snprintf_chk@plt+0x809c>
    9658:	mov	r1, r6
    965c:	mov	r2, r7
    9660:	bl	1568 <connect@plt>
    9664:	cmp	r0, #0
    9668:	blt	9680 <__snprintf_chk@plt+0x8100>
    966c:	ldr	r3, [pc, #132]	; 96f8 <__snprintf_chk@plt+0x8178>
    9670:	mov	r2, #1
    9674:	add	r3, pc, r3
    9678:	strb	r2, [r3]
    967c:	b	9514 <__snprintf_chk@plt+0x7f94>
    9680:	bl	1400 <__errno_location@plt>
    9684:	ldr	r4, [r0]
    9688:	ldr	r0, [r5]
    968c:	bl	3aec <__snprintf_chk@plt+0x256c>
    9690:	rsb	r4, r4, #0
    9694:	cmp	r4, #0
    9698:	str	r0, [r5]
    969c:	bge	9518 <__snprintf_chk@plt+0x7f98>
    96a0:	ldr	r3, [pc, #84]	; 96fc <__snprintf_chk@plt+0x817c>
    96a4:	add	r3, pc, r3
    96a8:	ldr	r3, [r3]
    96ac:	b	93fc <__snprintf_chk@plt+0x7e7c>
    96b0:	andeq	r7, r1, r0, lsr #25
    96b4:	andeq	r7, r1, r0, lsr #24
    96b8:	andeq	r7, r1, r8, lsl ip
    96bc:	andeq	r7, r1, r0, ror #23
    96c0:	ldrdeq	r7, [r1], -r8
    96c4:	andeq	r7, r1, ip, lsl #23
    96c8:	andeq	r7, r1, r0, ror fp
    96cc:	andeq	r7, r1, ip, asr #22
    96d0:	andeq	r7, r1, r4, asr #22
    96d4:	andeq	r7, r1, r8, lsr fp
    96d8:	andeq	r7, r1, r4, lsr #22
    96dc:			; <UNDEFINED> instruction: 0x00005eb8
    96e0:	ldrdeq	r7, [r1], -r0
    96e4:			; <UNDEFINED> instruction: 0x00017ab8
    96e8:	andeq	r5, r0, r8, lsr #27
    96ec:	andeq	r7, r1, r2, ror #20
    96f0:	andeq	r7, r1, r4, lsl sl
    96f4:	andeq	r7, r1, ip, lsr sl
    96f8:	strdeq	r7, [r1], -lr
    96fc:	andeq	r7, r1, r4, asr #19
    9700:	ldr	ip, [pc, #72]	; 9750 <__snprintf_chk@plt+0x81d0>
    9704:	push	{r4, lr}
    9708:	add	ip, pc, ip
    970c:	sub	sp, sp, #8
    9710:	mov	r4, r1
    9714:	ldr	ip, [ip]
    9718:	mov	lr, r2
    971c:	cmp	ip, #1
    9720:	bgt	9728 <__snprintf_chk@plt+0x81a8>
    9724:	bl	1550 <abort@plt>
    9728:	ldr	ip, [pc, #36]	; 9754 <__snprintf_chk@plt+0x81d4>
    972c:	mov	r1, r0
    9730:	str	r3, [sp]
    9734:	mov	r2, r4
    9738:	add	ip, pc, ip
    973c:	mov	r3, lr
    9740:	mov	r0, #2
    9744:	str	ip, [sp, #4]
    9748:	bl	2368 <__snprintf_chk@plt+0xde8>
    974c:	b	9724 <__snprintf_chk@plt+0x81a4>
    9750:	andeq	r7, r1, r0, lsr r9
    9754:	andeq	r5, r0, r0, lsl #15
    9758:	cmp	r0, #0
    975c:	push	{r3, lr}
    9760:	blt	97c4 <__snprintf_chk@plt+0x8244>
    9764:	cmp	r0, #9
    9768:	bgt	97a4 <__snprintf_chk@plt+0x8224>
    976c:	ldr	r3, [pc, #112]	; 97e4 <__snprintf_chk@plt+0x8264>
    9770:	add	r3, pc, r3
    9774:	ldrb	r3, [r3]
    9778:	cmp	r3, #0
    977c:	beq	9794 <__snprintf_chk@plt+0x8214>
    9780:	cmp	r0, #5
    9784:	moveq	r0, #3
    9788:	beq	9794 <__snprintf_chk@plt+0x8214>
    978c:	cmp	r0, #6
    9790:	moveq	r0, #4
    9794:	ldr	r3, [pc, #76]	; 97e8 <__snprintf_chk@plt+0x8268>
    9798:	add	r3, pc, r3
    979c:	str	r0, [r3]
    97a0:	pop	{r3, pc}
    97a4:	ldr	r0, [pc, #64]	; 97ec <__snprintf_chk@plt+0x826c>
    97a8:	movw	r2, #275	; 0x113
    97ac:	ldr	r1, [pc, #60]	; 97f0 <__snprintf_chk@plt+0x8270>
    97b0:	ldr	r3, [pc, #60]	; 97f4 <__snprintf_chk@plt+0x8274>
    97b4:	add	r0, pc, r0
    97b8:	add	r1, pc, r1
    97bc:	add	r3, pc, r3
    97c0:	bl	9700 <__snprintf_chk@plt+0x8180>
    97c4:	ldr	r0, [pc, #44]	; 97f8 <__snprintf_chk@plt+0x8278>
    97c8:	movw	r2, #274	; 0x112
    97cc:	ldr	r1, [pc, #40]	; 97fc <__snprintf_chk@plt+0x827c>
    97d0:	ldr	r3, [pc, #40]	; 9800 <__snprintf_chk@plt+0x8280>
    97d4:	add	r0, pc, r0
    97d8:	add	r1, pc, r1
    97dc:	add	r3, pc, r3
    97e0:	bl	9700 <__snprintf_chk@plt+0x8180>
    97e4:	andeq	r7, r1, r1, lsl #18
    97e8:	ldrdeq	r7, [r1], -r0
    97ec:	andeq	r5, r0, r0, ror #14
    97f0:	andeq	r5, r0, r8, asr #14
    97f4:	andeq	r5, r0, r0, lsl #12
    97f8:	andeq	r5, r0, r0, lsr #14
    97fc:	andeq	r5, r0, r8, lsr #14
    9800:	andeq	r5, r0, r0, ror #11
    9804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9808:	mov	r6, r0
    980c:	ldr	lr, [pc, #272]	; 9924 <__snprintf_chk@plt+0x83a4>
    9810:	sub	sp, sp, #2080	; 0x820
    9814:	ldr	r0, [pc, #268]	; 9928 <__snprintf_chk@plt+0x83a8>
    9818:	mov	r8, r3
    981c:	add	lr, pc, lr
    9820:	sub	sp, sp, #4
    9824:	mov	r4, r1
    9828:	mov	r9, r2
    982c:	ldr	r0, [lr, r0]
    9830:	mov	r3, lr
    9834:	ldr	sl, [sp, #2120]	; 0x848
    9838:	ldr	fp, [sp, #2124]	; 0x84c
    983c:	ldr	r3, [r0]
    9840:	str	r0, [sp, #20]
    9844:	str	r3, [sp, #2076]	; 0x81c
    9848:	bl	1400 <__errno_location@plt>
    984c:	cmp	r4, #0
    9850:	mov	r5, r0
    9854:	ldr	r7, [r0]
    9858:	blt	989c <__snprintf_chk@plt+0x831c>
    985c:	ldr	r3, [pc, #200]	; 992c <__snprintf_chk@plt+0x83ac>
    9860:	and	r2, r6, #7
    9864:	add	r3, pc, r3
    9868:	ldr	r3, [r3]
    986c:	cmp	r2, r3
    9870:	ble	9910 <__snprintf_chk@plt+0x8390>
    9874:	rsb	r0, r4, #0
    9878:	ldr	r1, [sp, #20]
    987c:	ldr	r2, [sp, #2076]	; 0x81c
    9880:	str	r7, [r5]
    9884:	ldr	r3, [r1]
    9888:	cmp	r2, r3
    988c:	bne	990c <__snprintf_chk@plt+0x838c>
    9890:	add	sp, sp, #2080	; 0x820
    9894:	add	sp, sp, #4
    9898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    989c:	ldr	r3, [pc, #140]	; 9930 <__snprintf_chk@plt+0x83b0>
    98a0:	and	r2, r6, #7
    98a4:	rsb	r4, r4, #0
    98a8:	add	r3, pc, r3
    98ac:	ldr	r3, [r3]
    98b0:	cmp	r2, r3
    98b4:	bgt	9874 <__snprintf_chk@plt+0x82f4>
    98b8:	str	r4, [r5]
    98bc:	ldr	r2, [sp, #2128]	; 0x850
    98c0:	mov	r1, #2048	; 0x800
    98c4:	str	fp, [sp]
    98c8:	add	fp, sp, #28
    98cc:	mov	r3, r1
    98d0:	str	r2, [sp, #4]
    98d4:	mov	r0, fp
    98d8:	mov	r2, #1
    98dc:	bl	1268 <__vsnprintf_chk@plt>
    98e0:	mov	ip, #0
    98e4:	str	fp, [sp, #12]
    98e8:	mov	r0, r6
    98ec:	str	sl, [sp]
    98f0:	mov	r1, r4
    98f4:	mov	r2, r9
    98f8:	mov	r3, r8
    98fc:	str	ip, [sp, #4]
    9900:	str	ip, [sp, #8]
    9904:	bl	1a84 <__snprintf_chk@plt+0x504>
    9908:	b	9878 <__snprintf_chk@plt+0x82f8>
    990c:	bl	12b0 <__stack_chk_fail@plt>
    9910:	cmp	r4, #0
    9914:	beq	98bc <__snprintf_chk@plt+0x833c>
    9918:	b	98b8 <__snprintf_chk@plt+0x8338>
    991c:	str	r7, [r5]
    9920:	bl	1538 <_Unwind_Resume@plt>
    9924:	andeq	r7, r1, r4, ror #12
    9928:	andeq	r0, r0, r4, asr r1
    992c:	ldrdeq	r7, [r1], -r4
    9930:	muleq	r1, r0, r7
    9934:	push	{r4, r5, r6, lr}
    9938:	sub	sp, sp, #24
    993c:	ldr	lr, [pc, #76]	; 9990 <__snprintf_chk@plt+0x8410>
    9940:	add	ip, sp, #48	; 0x30
    9944:	ldr	r4, [pc, #72]	; 9994 <__snprintf_chk@plt+0x8414>
    9948:	add	lr, pc, lr
    994c:	ldr	r6, [sp, #40]	; 0x28
    9950:	ldr	r5, [sp, #44]	; 0x2c
    9954:	ldr	r4, [lr, r4]
    9958:	str	r6, [sp]
    995c:	str	r5, [sp, #4]
    9960:	ldr	lr, [r4]
    9964:	str	ip, [sp, #8]
    9968:	str	ip, [sp, #16]
    996c:	str	lr, [sp, #20]
    9970:	bl	9804 <__snprintf_chk@plt+0x8284>
    9974:	ldr	r2, [sp, #20]
    9978:	ldr	r3, [r4]
    997c:	cmp	r2, r3
    9980:	bne	998c <__snprintf_chk@plt+0x840c>
    9984:	add	sp, sp, #24
    9988:	pop	{r4, r5, r6, pc}
    998c:	bl	12b0 <__stack_chk_fail@plt>
    9990:	andeq	r7, r1, r8, lsr r5
    9994:	andeq	r0, r0, r4, asr r1
    9998:	ldr	ip, [pc, #72]	; 99e8 <__snprintf_chk@plt+0x8468>
    999c:	push	{r4, lr}
    99a0:	add	ip, pc, ip
    99a4:	sub	sp, sp, #8
    99a8:	mov	r4, r1
    99ac:	ldr	ip, [ip]
    99b0:	mov	lr, r2
    99b4:	cmp	ip, #1
    99b8:	bgt	99c0 <__snprintf_chk@plt+0x8440>
    99bc:	bl	1550 <abort@plt>
    99c0:	ldr	ip, [pc, #36]	; 99ec <__snprintf_chk@plt+0x846c>
    99c4:	mov	r1, r0
    99c8:	str	r3, [sp]
    99cc:	mov	r2, r4
    99d0:	add	ip, pc, ip
    99d4:	mov	r3, lr
    99d8:	mov	r0, #2
    99dc:	str	ip, [sp, #4]
    99e0:	bl	2368 <__snprintf_chk@plt+0xde8>
    99e4:	b	99bc <__snprintf_chk@plt+0x843c>
    99e8:	muleq	r1, r8, r6
    99ec:	andeq	r5, r0, ip, lsl #13
    99f0:	push	{r4, r5, r6, r7, r8, r9, lr}
    99f4:	sub	sp, sp, #12
    99f8:	mov	r9, r0
    99fc:	mov	r7, r1
    9a00:	mov	r6, r2
    9a04:	mov	r8, r3
    9a08:	bl	1400 <__errno_location@plt>
    9a0c:	ldr	ip, [pc, #80]	; 9a64 <__snprintf_chk@plt+0x84e4>
    9a10:	add	ip, pc, ip
    9a14:	ldr	ip, [ip]
    9a18:	cmp	ip, #6
    9a1c:	mov	r4, r0
    9a20:	ldr	r5, [r0]
    9a24:	bgt	9a34 <__snprintf_chk@plt+0x84b4>
    9a28:	str	r5, [r4]
    9a2c:	add	sp, sp, #12
    9a30:	pop	{r4, r5, r6, r7, r8, r9, pc}
    9a34:	ldr	ip, [pc, #44]	; 9a68 <__snprintf_chk@plt+0x84e8>
    9a38:	mov	r1, r9
    9a3c:	str	r8, [sp]
    9a40:	mov	r2, r7
    9a44:	add	ip, pc, ip
    9a48:	mov	r3, r6
    9a4c:	mov	r0, #7
    9a50:	str	ip, [sp, #4]
    9a54:	bl	2368 <__snprintf_chk@plt+0xde8>
    9a58:	b	9a28 <__snprintf_chk@plt+0x84a8>
    9a5c:	str	r5, [r4]
    9a60:	bl	1538 <_Unwind_Resume@plt>
    9a64:	andeq	r7, r1, r8, lsr #12
    9a68:	andeq	r5, r0, ip, asr r6
    9a6c:	mov	r2, r0
    9a70:	ldr	r0, [pc, #40]	; 9aa0 <__snprintf_chk@plt+0x8520>
    9a74:	push	{r3, lr}
    9a78:	mov	r1, #10
    9a7c:	add	r0, pc, r0
    9a80:	bl	581c <__snprintf_chk@plt+0x429c>
    9a84:	cmp	r0, #0
    9a88:	blt	9a98 <__snprintf_chk@plt+0x8518>
    9a8c:	bl	9758 <__snprintf_chk@plt+0x81d8>
    9a90:	mov	r0, #0
    9a94:	pop	{r3, pc}
    9a98:	mvn	r0, #21
    9a9c:	pop	{r3, pc}
    9aa0:	andeq	r7, r1, r0, lsl #5
    9aa4:	push	{r3, lr}
    9aa8:	bl	4824 <__snprintf_chk@plt+0x32a4>
    9aac:	subs	r3, r0, #0
    9ab0:	blt	9ad4 <__snprintf_chk@plt+0x8554>
    9ab4:	and	r2, r3, #7
    9ab8:	cmp	r3, r2
    9abc:	bne	9adc <__snprintf_chk@plt+0x855c>
    9ac0:	ldr	r2, [pc, #24]	; 9ae0 <__snprintf_chk@plt+0x8560>
    9ac4:	mov	r0, #0
    9ac8:	add	r2, pc, r2
    9acc:	str	r3, [r2]
    9ad0:	pop	{r3, pc}
    9ad4:	mov	r0, r3
    9ad8:	pop	{r3, pc}
    9adc:	bl	1a54 <__snprintf_chk@plt+0x4d4>
    9ae0:	andeq	r7, r1, r0, ror r5
    9ae4:	push	{r4, r5, r6, lr}
    9ae8:	mov	r4, r1
    9aec:	ldr	r1, [pc, #684]	; 9da0 <__snprintf_chk@plt+0x8820>
    9af0:	sub	sp, sp, #16
    9af4:	mov	r5, r0
    9af8:	add	r1, pc, r1
    9afc:	bl	1208 <strcmp@plt>
    9b00:	cmp	r0, #0
    9b04:	bne	9b90 <__snprintf_chk@plt+0x8610>
    9b08:	cmp	r4, #0
    9b0c:	beq	9ca8 <__snprintf_chk@plt+0x8728>
    9b10:	ldr	r1, [pc, #652]	; 9da4 <__snprintf_chk@plt+0x8824>
    9b14:	mov	r0, r5
    9b18:	add	r1, pc, r1
    9b1c:	bl	1208 <strcmp@plt>
    9b20:	cmp	r0, #0
    9b24:	beq	9bb0 <__snprintf_chk@plt+0x8630>
    9b28:	ldr	r1, [pc, #632]	; 9da8 <__snprintf_chk@plt+0x8828>
    9b2c:	mov	r0, r5
    9b30:	add	r1, pc, r1
    9b34:	bl	1208 <strcmp@plt>
    9b38:	cmp	r0, #0
    9b3c:	beq	9bec <__snprintf_chk@plt+0x866c>
    9b40:	ldr	r1, [pc, #612]	; 9dac <__snprintf_chk@plt+0x882c>
    9b44:	mov	r0, r5
    9b48:	add	r1, pc, r1
    9b4c:	bl	1208 <strcmp@plt>
    9b50:	subs	r6, r0, #0
    9b54:	bne	9c60 <__snprintf_chk@plt+0x86e0>
    9b58:	cmp	r4, #0
    9b5c:	beq	9bc0 <__snprintf_chk@plt+0x8640>
    9b60:	mov	r0, r4
    9b64:	bl	3b54 <__snprintf_chk@plt+0x25d4>
    9b68:	cmp	r0, #0
    9b6c:	blt	9d08 <__snprintf_chk@plt+0x8788>
    9b70:	ldr	r3, [pc, #568]	; 9db0 <__snprintf_chk@plt+0x8830>
    9b74:	moveq	r2, #0
    9b78:	movne	r2, #1
    9b7c:	mov	r0, #0
    9b80:	add	r3, pc, r3
    9b84:	strb	r2, [r3]
    9b88:	add	sp, sp, #16
    9b8c:	pop	{r4, r5, r6, pc}
    9b90:	ldr	r1, [pc, #540]	; 9db4 <__snprintf_chk@plt+0x8834>
    9b94:	mov	r0, r5
    9b98:	add	r1, pc, r1
    9b9c:	bl	1208 <strcmp@plt>
    9ba0:	cmp	r0, #0
    9ba4:	bne	9bcc <__snprintf_chk@plt+0x864c>
    9ba8:	cmp	r4, #0
    9bac:	beq	9c48 <__snprintf_chk@plt+0x86c8>
    9bb0:	mov	r0, r4
    9bb4:	bl	9a6c <__snprintf_chk@plt+0x84ec>
    9bb8:	cmp	r0, #0
    9bbc:	blt	9cbc <__snprintf_chk@plt+0x873c>
    9bc0:	mov	r0, #0
    9bc4:	add	sp, sp, #16
    9bc8:	pop	{r4, r5, r6, pc}
    9bcc:	ldr	r1, [pc, #484]	; 9db8 <__snprintf_chk@plt+0x8838>
    9bd0:	mov	r0, r5
    9bd4:	add	r1, pc, r1
    9bd8:	bl	1208 <strcmp@plt>
    9bdc:	cmp	r0, #0
    9be0:	bne	9b40 <__snprintf_chk@plt+0x85c0>
    9be4:	cmp	r4, #0
    9be8:	beq	9bc0 <__snprintf_chk@plt+0x8640>
    9bec:	mov	r0, r4
    9bf0:	bl	9aa4 <__snprintf_chk@plt+0x8524>
    9bf4:	cmp	r0, #0
    9bf8:	bge	9bc0 <__snprintf_chk@plt+0x8640>
    9bfc:	ldr	r3, [pc, #440]	; 9dbc <__snprintf_chk@plt+0x883c>
    9c00:	add	r3, pc, r3
    9c04:	ldr	r3, [r3]
    9c08:	cmp	r3, #3
    9c0c:	ble	9bc0 <__snprintf_chk@plt+0x8640>
    9c10:	ldr	r2, [pc, #424]	; 9dc0 <__snprintf_chk@plt+0x8840>
    9c14:	mov	r1, #0
    9c18:	ldr	ip, [pc, #420]	; 9dc4 <__snprintf_chk@plt+0x8844>
    9c1c:	movw	r3, #934	; 0x3a6
    9c20:	add	r2, pc, r2
    9c24:	str	r2, [sp, #4]
    9c28:	ldr	r2, [pc, #408]	; 9dc8 <__snprintf_chk@plt+0x8848>
    9c2c:	add	ip, pc, ip
    9c30:	str	r4, [sp, #8]
    9c34:	mov	r0, #4
    9c38:	str	ip, [sp]
    9c3c:	add	r2, pc, r2
    9c40:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9c44:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9c48:	ldr	r1, [pc, #380]	; 9dcc <__snprintf_chk@plt+0x884c>
    9c4c:	mov	r0, r5
    9c50:	add	r1, pc, r1
    9c54:	bl	1208 <strcmp@plt>
    9c58:	cmp	r0, #0
    9c5c:	beq	9bc0 <__snprintf_chk@plt+0x8640>
    9c60:	ldr	r1, [pc, #360]	; 9dd0 <__snprintf_chk@plt+0x8850>
    9c64:	mov	r0, r5
    9c68:	add	r1, pc, r1
    9c6c:	bl	1208 <strcmp@plt>
    9c70:	subs	r5, r0, #0
    9c74:	bne	9bc0 <__snprintf_chk@plt+0x8640>
    9c78:	cmp	r4, #0
    9c7c:	beq	9bc0 <__snprintf_chk@plt+0x8640>
    9c80:	mov	r0, r4
    9c84:	bl	3b54 <__snprintf_chk@plt+0x25d4>
    9c88:	cmp	r0, #0
    9c8c:	blt	9d54 <__snprintf_chk@plt+0x87d4>
    9c90:	ldr	r3, [pc, #316]	; 9dd4 <__snprintf_chk@plt+0x8854>
    9c94:	moveq	r2, #0
    9c98:	movne	r2, #1
    9c9c:	add	r3, pc, r3
    9ca0:	strb	r2, [r3]
    9ca4:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9ca8:	ldr	r3, [pc, #296]	; 9dd8 <__snprintf_chk@plt+0x8858>
    9cac:	mov	r2, #7
    9cb0:	add	r3, pc, r3
    9cb4:	str	r2, [r3]
    9cb8:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9cbc:	ldr	r3, [pc, #280]	; 9ddc <__snprintf_chk@plt+0x885c>
    9cc0:	add	r3, pc, r3
    9cc4:	ldr	r3, [r3]
    9cc8:	cmp	r3, #3
    9ccc:	ble	9bc0 <__snprintf_chk@plt+0x8640>
    9cd0:	ldr	r2, [pc, #264]	; 9de0 <__snprintf_chk@plt+0x8860>
    9cd4:	mov	r1, #0
    9cd8:	ldr	ip, [pc, #260]	; 9de4 <__snprintf_chk@plt+0x8864>
    9cdc:	movw	r3, #929	; 0x3a1
    9ce0:	add	r2, pc, r2
    9ce4:	str	r2, [sp, #4]
    9ce8:	ldr	r2, [pc, #248]	; 9de8 <__snprintf_chk@plt+0x8868>
    9cec:	add	ip, pc, ip
    9cf0:	str	r4, [sp, #8]
    9cf4:	mov	r0, #4
    9cf8:	str	ip, [sp]
    9cfc:	add	r2, pc, r2
    9d00:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9d04:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9d08:	ldr	r3, [pc, #220]	; 9dec <__snprintf_chk@plt+0x886c>
    9d0c:	add	r3, pc, r3
    9d10:	ldr	r3, [r3]
    9d14:	cmp	r3, #3
    9d18:	ble	9bc0 <__snprintf_chk@plt+0x8640>
    9d1c:	ldr	r2, [pc, #204]	; 9df0 <__snprintf_chk@plt+0x8870>
    9d20:	mov	r1, r6
    9d24:	ldr	ip, [pc, #200]	; 9df4 <__snprintf_chk@plt+0x8874>
    9d28:	movw	r3, #939	; 0x3ab
    9d2c:	add	r2, pc, r2
    9d30:	str	r2, [sp, #4]
    9d34:	ldr	r2, [pc, #188]	; 9df8 <__snprintf_chk@plt+0x8878>
    9d38:	add	ip, pc, ip
    9d3c:	str	r4, [sp, #8]
    9d40:	mov	r0, #4
    9d44:	str	ip, [sp]
    9d48:	add	r2, pc, r2
    9d4c:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9d50:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9d54:	ldr	r3, [pc, #160]	; 9dfc <__snprintf_chk@plt+0x887c>
    9d58:	add	r3, pc, r3
    9d5c:	ldr	r3, [r3]
    9d60:	cmp	r3, #3
    9d64:	ble	9bc0 <__snprintf_chk@plt+0x8640>
    9d68:	ldr	r2, [pc, #144]	; 9e00 <__snprintf_chk@plt+0x8880>
    9d6c:	mov	r1, r5
    9d70:	ldr	ip, [pc, #140]	; 9e04 <__snprintf_chk@plt+0x8884>
    9d74:	mov	r3, #944	; 0x3b0
    9d78:	add	r2, pc, r2
    9d7c:	str	r2, [sp, #4]
    9d80:	ldr	r2, [pc, #128]	; 9e08 <__snprintf_chk@plt+0x8888>
    9d84:	add	ip, pc, ip
    9d88:	str	r4, [sp, #8]
    9d8c:	mov	r0, #4
    9d90:	str	ip, [sp]
    9d94:	add	r2, pc, r2
    9d98:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9d9c:	b	9bc0 <__snprintf_chk@plt+0x8640>
    9da0:	andeq	r4, r0, r4, asr #2
    9da4:	andeq	r5, r0, r4, lsr #12
    9da8:	andeq	r5, r0, ip, asr #12
    9dac:	andeq	r5, r0, r4, ror r6
    9db0:	strdeq	r7, [r1], -r4
    9db4:	andeq	r5, r0, r4, lsr #11
    9db8:	andeq	r5, r0, r8, lsr #11
    9dbc:	andeq	r7, r1, r8, lsr r4
    9dc0:	andeq	r5, r0, r0, ror r5
    9dc4:	andeq	r5, r0, r0, lsr #3
    9dc8:	andeq	r5, r0, r4, asr #5
    9dcc:	andeq	r5, r0, ip, ror #10
    9dd0:	muleq	r0, ip, r5
    9dd4:	ldrdeq	r7, [r1], -r4
    9dd8:	andeq	r7, r1, r8, lsl #7
    9ddc:	andeq	r7, r1, r8, ror r3
    9de0:	andeq	r5, r0, r0, ror r4
    9de4:	andeq	r5, r0, r0, ror #1
    9de8:	andeq	r5, r0, r4, lsl #4
    9dec:	andeq	r7, r1, ip, lsr #6
    9df0:	andeq	r5, r0, r4, lsr #9
    9df4:	muleq	r0, r4, r0
    9df8:			; <UNDEFINED> instruction: 0x000051b8
    9dfc:	andeq	r7, r1, r0, ror #5
    9e00:	andeq	r5, r0, r4, lsr #9
    9e04:	andeq	r5, r0, r8, asr #32
    9e08:	andeq	r5, r0, ip, ror #2
    9e0c:	mov	r0, #0
    9e10:	push	{r4, lr}
    9e14:	mov	r1, r0
    9e18:	sub	sp, sp, #16
    9e1c:	bl	41f4 <__snprintf_chk@plt+0x2c74>
    9e20:	cmp	r0, #0
    9e24:	blt	a00c <__snprintf_chk@plt+0x8a8c>
    9e28:	ldr	r0, [pc, #492]	; a01c <__snprintf_chk@plt+0x8a9c>
    9e2c:	add	r0, pc, r0
    9e30:	bl	1238 <secure_getenv@plt>
    9e34:	subs	r4, r0, #0
    9e38:	beq	9e48 <__snprintf_chk@plt+0x88c8>
    9e3c:	bl	9a6c <__snprintf_chk@plt+0x84ec>
    9e40:	cmp	r0, #0
    9e44:	blt	9fc0 <__snprintf_chk@plt+0x8a40>
    9e48:	ldr	r0, [pc, #464]	; a020 <__snprintf_chk@plt+0x8aa0>
    9e4c:	add	r0, pc, r0
    9e50:	bl	1238 <secure_getenv@plt>
    9e54:	subs	r4, r0, #0
    9e58:	beq	9e68 <__snprintf_chk@plt+0x88e8>
    9e5c:	bl	9aa4 <__snprintf_chk@plt+0x8524>
    9e60:	cmp	r0, #0
    9e64:	blt	9f74 <__snprintf_chk@plt+0x89f4>
    9e68:	ldr	r0, [pc, #436]	; a024 <__snprintf_chk@plt+0x8aa4>
    9e6c:	add	r0, pc, r0
    9e70:	bl	1238 <secure_getenv@plt>
    9e74:	subs	r4, r0, #0
    9e78:	beq	9e9c <__snprintf_chk@plt+0x891c>
    9e7c:	bl	3b54 <__snprintf_chk@plt+0x25d4>
    9e80:	cmp	r0, #0
    9e84:	blt	9f28 <__snprintf_chk@plt+0x89a8>
    9e88:	ldr	r3, [pc, #408]	; a028 <__snprintf_chk@plt+0x8aa8>
    9e8c:	moveq	r2, #0
    9e90:	movne	r2, #1
    9e94:	add	r3, pc, r3
    9e98:	strb	r2, [r3]
    9e9c:	ldr	r0, [pc, #392]	; a02c <__snprintf_chk@plt+0x8aac>
    9ea0:	add	r0, pc, r0
    9ea4:	bl	1238 <secure_getenv@plt>
    9ea8:	subs	r4, r0, #0
    9eac:	beq	9ed0 <__snprintf_chk@plt+0x8950>
    9eb0:	bl	3b54 <__snprintf_chk@plt+0x25d4>
    9eb4:	cmp	r0, #0
    9eb8:	blt	9ed8 <__snprintf_chk@plt+0x8958>
    9ebc:	ldr	r3, [pc, #364]	; a030 <__snprintf_chk@plt+0x8ab0>
    9ec0:	moveq	r2, #0
    9ec4:	movne	r2, #1
    9ec8:	add	r3, pc, r3
    9ecc:	strb	r2, [r3]
    9ed0:	add	sp, sp, #16
    9ed4:	pop	{r4, pc}
    9ed8:	ldr	r3, [pc, #340]	; a034 <__snprintf_chk@plt+0x8ab4>
    9edc:	add	r3, pc, r3
    9ee0:	ldr	r3, [r3]
    9ee4:	cmp	r3, #3
    9ee8:	ble	9ed0 <__snprintf_chk@plt+0x8950>
    9eec:	ldr	r2, [pc, #324]	; a038 <__snprintf_chk@plt+0x8ab8>
    9ef0:	mov	r1, #0
    9ef4:	ldr	ip, [pc, #320]	; a03c <__snprintf_chk@plt+0x8abc>
    9ef8:	movw	r3, #973	; 0x3cd
    9efc:	add	r2, pc, r2
    9f00:	str	r2, [sp, #4]
    9f04:	ldr	r2, [pc, #308]	; a040 <__snprintf_chk@plt+0x8ac0>
    9f08:	add	ip, pc, ip
    9f0c:	str	r4, [sp, #8]
    9f10:	mov	r0, #4
    9f14:	str	ip, [sp]
    9f18:	add	r2, pc, r2
    9f1c:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9f20:	add	sp, sp, #16
    9f24:	pop	{r4, pc}
    9f28:	ldr	r3, [pc, #276]	; a044 <__snprintf_chk@plt+0x8ac4>
    9f2c:	add	r3, pc, r3
    9f30:	ldr	r3, [r3]
    9f34:	cmp	r3, #3
    9f38:	ble	9e9c <__snprintf_chk@plt+0x891c>
    9f3c:	ldr	r2, [pc, #260]	; a048 <__snprintf_chk@plt+0x8ac8>
    9f40:	mov	r1, #0
    9f44:	ldr	ip, [pc, #256]	; a04c <__snprintf_chk@plt+0x8acc>
    9f48:	movw	r3, #969	; 0x3c9
    9f4c:	add	r2, pc, r2
    9f50:	str	r2, [sp, #4]
    9f54:	ldr	r2, [pc, #244]	; a050 <__snprintf_chk@plt+0x8ad0>
    9f58:	add	ip, pc, ip
    9f5c:	str	r4, [sp, #8]
    9f60:	mov	r0, #4
    9f64:	str	ip, [sp]
    9f68:	add	r2, pc, r2
    9f6c:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9f70:	b	9e9c <__snprintf_chk@plt+0x891c>
    9f74:	ldr	r3, [pc, #216]	; a054 <__snprintf_chk@plt+0x8ad4>
    9f78:	add	r3, pc, r3
    9f7c:	ldr	r3, [r3]
    9f80:	cmp	r3, #3
    9f84:	ble	9e68 <__snprintf_chk@plt+0x88e8>
    9f88:	ldr	r2, [pc, #200]	; a058 <__snprintf_chk@plt+0x8ad8>
    9f8c:	mov	r1, #0
    9f90:	ldr	ip, [pc, #196]	; a05c <__snprintf_chk@plt+0x8adc>
    9f94:	movw	r3, #965	; 0x3c5
    9f98:	add	r2, pc, r2
    9f9c:	str	r2, [sp, #4]
    9fa0:	ldr	r2, [pc, #184]	; a060 <__snprintf_chk@plt+0x8ae0>
    9fa4:	add	ip, pc, ip
    9fa8:	str	r4, [sp, #8]
    9fac:	mov	r0, #4
    9fb0:	str	ip, [sp]
    9fb4:	add	r2, pc, r2
    9fb8:	bl	9934 <__snprintf_chk@plt+0x83b4>
    9fbc:	b	9e68 <__snprintf_chk@plt+0x88e8>
    9fc0:	ldr	r3, [pc, #156]	; a064 <__snprintf_chk@plt+0x8ae4>
    9fc4:	add	r3, pc, r3
    9fc8:	ldr	r3, [r3]
    9fcc:	cmp	r3, #3
    9fd0:	ble	9e48 <__snprintf_chk@plt+0x88c8>
    9fd4:	ldr	r2, [pc, #140]	; a068 <__snprintf_chk@plt+0x8ae8>
    9fd8:	mov	r1, #0
    9fdc:	ldr	ip, [pc, #136]	; a06c <__snprintf_chk@plt+0x8aec>
    9fe0:	movw	r3, #961	; 0x3c1
    9fe4:	add	r2, pc, r2
    9fe8:	str	r2, [sp, #4]
    9fec:	ldr	r2, [pc, #124]	; a070 <__snprintf_chk@plt+0x8af0>
    9ff0:	add	ip, pc, ip
    9ff4:	str	r4, [sp, #8]
    9ff8:	mov	r0, #4
    9ffc:	str	ip, [sp]
    a000:	add	r2, pc, r2
    a004:	bl	9934 <__snprintf_chk@plt+0x83b4>
    a008:	b	9e48 <__snprintf_chk@plt+0x88c8>
    a00c:	ldr	r0, [pc, #96]	; a074 <__snprintf_chk@plt+0x8af4>
    a010:	add	r0, pc, r0
    a014:	bl	5654 <__snprintf_chk@plt+0x40d4>
    a018:	b	9e28 <__snprintf_chk@plt+0x88a8>
    a01c:	andeq	r5, r0, r8, lsr #8
    a020:	andeq	r5, r0, ip, lsl r4
    a024:	andeq	r5, r0, r0, lsl r4
    a028:	andeq	r7, r1, r0, ror #3
    a02c:	andeq	r5, r0, r8, lsl r4
    a030:	andeq	r7, r1, r8, lsr #3
    a034:	andeq	r7, r1, ip, asr r1
    a038:	muleq	r0, r4, r3
    a03c:	andeq	r5, r0, r8, asr r4
    a040:	andeq	r4, r0, r8, ror #31
    a044:	andeq	r7, r1, ip, lsl #2
    a048:	andeq	r5, r0, r4, asr #6
    a04c:	andeq	r5, r0, r8, lsl #8
    a050:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    a054:	andeq	r7, r1, r0, asr #1
    a058:	strdeq	r5, [r0], -r8
    a05c:			; <UNDEFINED> instruction: 0x000053bc
    a060:	andeq	r4, r0, ip, asr #30
    a064:	andeq	r7, r1, r4, ror r0
    a068:	andeq	r5, r0, ip, ror #2
    a06c:	andeq	r5, r0, r0, ror r3
    a070:	andeq	r4, r0, r0, lsl #30
    a074:			; <UNDEFINED> instruction: 0xfffffacc
    a078:	ldr	r3, [pc, #4]	; a084 <__snprintf_chk@plt+0x8b04>
    a07c:	ldr	r0, [pc, r3]
    a080:	bx	lr
    a084:			; <UNDEFINED> instruction: 0x00016fbc
    a088:	cmp	r1, #127	; 0x7f
    a08c:	mov	r3, r0
    a090:	bhi	a0a8 <__snprintf_chk@plt+0x8b28>
    a094:	cmp	r0, #0
    a098:	beq	a180 <__snprintf_chk@plt+0x8c00>
    a09c:	strb	r1, [r0]
    a0a0:	mov	r0, #1
    a0a4:	bx	lr
    a0a8:	cmp	r1, #2048	; 0x800
    a0ac:	bcs	a0e0 <__snprintf_chk@plt+0x8b60>
    a0b0:	cmp	r0, #0
    a0b4:	beq	a190 <__snprintf_chk@plt+0x8c10>
    a0b8:	lsr	r2, r1, #6
    a0bc:	and	r1, r1, #63	; 0x3f
    a0c0:	mov	r0, #2
    a0c4:	mvn	r2, r2, lsl #26
    a0c8:	mvn	r1, r1, lsl #25
    a0cc:	mvn	r2, r2, lsr #26
    a0d0:	mvn	r1, r1, lsr #25
    a0d4:	strb	r2, [r3]
    a0d8:	strb	r1, [r3, #1]
    a0dc:	bx	lr
    a0e0:	cmp	r1, #65536	; 0x10000
    a0e4:	bcc	a140 <__snprintf_chk@plt+0x8bc0>
    a0e8:	cmp	r1, #2097152	; 0x200000
    a0ec:	bcs	a188 <__snprintf_chk@plt+0x8c08>
    a0f0:	cmp	r0, #0
    a0f4:	beq	a1a0 <__snprintf_chk@plt+0x8c20>
    a0f8:	lsr	ip, r1, #18
    a0fc:	ubfx	r0, r1, #12, #6
    a100:	ubfx	r2, r1, #6, #6
    a104:	and	r1, r1, #63	; 0x3f
    a108:	mvn	ip, ip, lsl #28
    a10c:	mvn	r0, r0, lsl #25
    a110:	mvn	r2, r2, lsl #25
    a114:	mvn	r1, r1, lsl #25
    a118:	mvn	ip, ip, lsr #28
    a11c:	mvn	r0, r0, lsr #25
    a120:	mvn	r2, r2, lsr #25
    a124:	strb	r0, [r3, #1]
    a128:	mvn	r1, r1, lsr #25
    a12c:	strb	ip, [r3]
    a130:	strb	r2, [r3, #2]
    a134:	mov	r0, #4
    a138:	strb	r1, [r3, #3]
    a13c:	bx	lr
    a140:	cmp	r0, #0
    a144:	beq	a198 <__snprintf_chk@plt+0x8c18>
    a148:	lsr	ip, r1, #12
    a14c:	ubfx	r2, r1, #6, #6
    a150:	and	r1, r1, #63	; 0x3f
    a154:	mov	r0, #3
    a158:	mvn	ip, ip, lsl #27
    a15c:	mvn	r2, r2, lsl #25
    a160:	mvn	r1, r1, lsl #25
    a164:	mvn	ip, ip, lsr #27
    a168:	mvn	r2, r2, lsr #25
    a16c:	mvn	r1, r1, lsr #25
    a170:	strb	ip, [r3]
    a174:	strb	r2, [r3, #1]
    a178:	strb	r1, [r3, #2]
    a17c:	bx	lr
    a180:	mov	r0, #1
    a184:	bx	lr
    a188:	mov	r0, #0
    a18c:	bx	lr
    a190:	mov	r0, #2
    a194:	bx	lr
    a198:	mov	r0, #3
    a19c:	bx	lr
    a1a0:	mov	r0, #4
    a1a4:	bx	lr
    a1a8:	push	{r4, r5, r6, r7, r8, lr}
    a1ac:	mov	r4, r0
    a1b0:	lsl	r0, r1, #2
    a1b4:	mov	r7, r1
    a1b8:	lsr	r0, r0, #1
    a1bc:	add	r0, r0, #1
    a1c0:	bl	1358 <malloc@plt>
    a1c4:	subs	r6, r0, #0
    a1c8:	beq	a270 <__snprintf_chk@plt+0x8cf0>
    a1cc:	add	r7, r4, r7
    a1d0:	mov	r8, r6
    a1d4:	b	a208 <__snprintf_chk@plt+0x8c88>
    a1d8:	cmp	r2, #1024	; 0x400
    a1dc:	bcc	a204 <__snprintf_chk@plt+0x8c84>
    a1e0:	cmp	r5, r7
    a1e4:	bcs	a268 <__snprintf_chk@plt+0x8ce8>
    a1e8:	ldrb	r2, [r4, #3]
    a1ec:	ldrb	r3, [r4, #2]
    a1f0:	orr	r3, r3, r2, lsl #8
    a1f4:	add	r2, r3, #9216	; 0x2400
    a1f8:	uxth	r2, r2
    a1fc:	cmp	r2, #1024	; 0x400
    a200:	bcc	a248 <__snprintf_chk@plt+0x8cc8>
    a204:	mov	r4, r5
    a208:	cmp	r4, r7
    a20c:	mov	r5, r4
    a210:	bcs	a268 <__snprintf_chk@plt+0x8ce8>
    a214:	ldrb	r1, [r4, #1]
    a218:	ldrb	r3, [r5], #2
    a21c:	orr	r1, r3, r1, lsl #8
    a220:	add	r3, r1, #10240	; 0x2800
    a224:	add	r2, r1, #9216	; 0x2400
    a228:	uxth	r3, r3
    a22c:	uxth	r2, r2
    a230:	cmp	r3, #2048	; 0x800
    a234:	bcc	a1d8 <__snprintf_chk@plt+0x8c58>
    a238:	mov	r0, r8
    a23c:	bl	a088 <__snprintf_chk@plt+0x8b08>
    a240:	add	r8, r8, r0
    a244:	b	a204 <__snprintf_chk@plt+0x8c84>
    a248:	sub	r1, r1, #55296	; 0xd800
    a24c:	mov	r0, r8
    a250:	add	r5, r4, #4
    a254:	add	r1, r3, r1, lsl #10
    a258:	add	r1, r1, #9216	; 0x2400
    a25c:	bl	a088 <__snprintf_chk@plt+0x8b08>
    a260:	add	r8, r8, r0
    a264:	b	a204 <__snprintf_chk@plt+0x8c84>
    a268:	mov	r3, #0
    a26c:	strb	r3, [r8]
    a270:	mov	r0, r6
    a274:	pop	{r4, r5, r6, r7, r8, pc}
    a278:	push	{r3, r4, r5, lr}
    a27c:	ldr	r0, [r0]
    a280:	ldr	r5, [r1]
    a284:	bl	1220 <basename@plt>
    a288:	mov	r4, r0
    a28c:	mov	r0, r5
    a290:	bl	1220 <basename@plt>
    a294:	mov	r1, r0
    a298:	mov	r0, r4
    a29c:	pop	{r3, r4, r5, lr}
    a2a0:	b	1208 <strcmp@plt>
    a2a4:	ldr	ip, [pc, #684]	; a558 <__snprintf_chk@plt+0x8fd8>
    a2a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a2ac:	subs	r4, r2, #0
    a2b0:	add	fp, sp, #32
    a2b4:	ldr	r2, [pc, #672]	; a55c <__snprintf_chk@plt+0x8fdc>
    a2b8:	sub	sp, sp, #68	; 0x44
    a2bc:	add	ip, pc, ip
    a2c0:	mov	r8, r3
    a2c4:	mov	r3, ip
    a2c8:	mov	sl, r0
    a2cc:	ldr	r2, [ip, r2]
    a2d0:	ldr	r3, [r2]
    a2d4:	str	r2, [fp, #-60]	; 0xffffffc4
    a2d8:	str	r3, [fp, #-40]	; 0xffffffd8
    a2dc:	beq	a538 <__snprintf_chk@plt+0x8fb8>
    a2e0:	cmp	r8, #0
    a2e4:	beq	a518 <__snprintf_chk@plt+0x8f98>
    a2e8:	ldr	r5, [pc, #624]	; a560 <__snprintf_chk@plt+0x8fe0>
    a2ec:	cmp	r1, #0
    a2f0:	str	r4, [fp, #-44]	; 0xffffffd4
    a2f4:	add	r5, pc, r5
    a2f8:	movne	r5, r1
    a2fc:	mov	r0, r5
    a300:	bl	13d0 <strlen@plt>
    a304:	mov	r6, r0
    a308:	mov	r0, r4
    a30c:	bl	13d0 <strlen@plt>
    a310:	mov	r1, r5
    a314:	add	r0, r0, r6
    a318:	add	r3, r0, #15
    a31c:	bic	r3, r3, #7
    a320:	sub	sp, sp, r3
    a324:	add	r9, sp, #16
    a328:	mov	r0, r9
    a32c:	bl	12a4 <stpcpy@plt>
    a330:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a334:	cmp	r1, #0
    a338:	mov	r3, r0
    a33c:	beq	a348 <__snprintf_chk@plt+0x8dc8>
    a340:	bl	12a4 <stpcpy@plt>
    a344:	mov	r3, r0
    a348:	mov	r2, #0
    a34c:	mov	r0, r9
    a350:	strb	r2, [r3]
    a354:	bl	1310 <opendir@plt>
    a358:	subs	r6, r0, #0
    a35c:	beq	a4d0 <__snprintf_chk@plt+0x8f50>
    a360:	bl	1400 <__errno_location@plt>
    a364:	ldr	r1, [pc, #504]	; a564 <__snprintf_chk@plt+0x8fe4>
    a368:	ldr	r2, [pc, #504]	; a568 <__snprintf_chk@plt+0x8fe8>
    a36c:	ldr	r3, [pc, #504]	; a56c <__snprintf_chk@plt+0x8fec>
    a370:	add	r1, pc, r1
    a374:	add	r2, pc, r2
    a378:	str	r1, [fp, #-56]	; 0xffffffc8
    a37c:	add	r3, pc, r3
    a380:	str	r2, [fp, #-64]	; 0xffffffc0
    a384:	str	r3, [fp, #-68]	; 0xffffffbc
    a388:	ldr	r1, [pc, #480]	; a570 <__snprintf_chk@plt+0x8ff0>
    a38c:	ldr	r2, [pc, #480]	; a574 <__snprintf_chk@plt+0x8ff4>
    a390:	ldr	r3, [pc, #480]	; a578 <__snprintf_chk@plt+0x8ff8>
    a394:	add	r1, pc, r1
    a398:	add	r2, pc, r2
    a39c:	str	r1, [fp, #-72]	; 0xffffffb8
    a3a0:	add	r3, pc, r3
    a3a4:	str	r2, [fp, #-76]	; 0xffffffb4
    a3a8:	str	r3, [fp, #-80]	; 0xffffffb0
    a3ac:	mov	r7, r0
    a3b0:	mov	r4, #0
    a3b4:	str	r4, [r7]
    a3b8:	mov	r0, r6
    a3bc:	bl	14cc <readdir64@plt>
    a3c0:	subs	r5, r0, #0
    a3c4:	beq	a460 <__snprintf_chk@plt+0x8ee0>
    a3c8:	mov	r1, r8
    a3cc:	bl	438c <__snprintf_chk@plt+0x2e0c>
    a3d0:	cmp	r0, #0
    a3d4:	beq	a3b4 <__snprintf_chk@plt+0x8e34>
    a3d8:	add	r2, r5, #19
    a3dc:	mov	r0, r9
    a3e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    a3e4:	mov	r3, #0
    a3e8:	bl	4700 <__snprintf_chk@plt+0x3180>
    a3ec:	subs	r4, r0, #0
    a3f0:	beq	a4e8 <__snprintf_chk@plt+0x8f68>
    a3f4:	bl	1220 <basename@plt>
    a3f8:	mov	r2, r4
    a3fc:	mov	r1, r0
    a400:	mov	r0, sl
    a404:	bl	8318 <__snprintf_chk@plt+0x6d98>
    a408:	cmn	r0, #17
    a40c:	mov	r3, r0
    a410:	beq	a494 <__snprintf_chk@plt+0x8f14>
    a414:	cmp	r0, #0
    a418:	blt	a4f0 <__snprintf_chk@plt+0x8f70>
    a41c:	bne	a3b0 <__snprintf_chk@plt+0x8e30>
    a420:	bl	a078 <__snprintf_chk@plt+0x8af8>
    a424:	cmp	r0, #6
    a428:	ble	a454 <__snprintf_chk@plt+0x8ed4>
    a42c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    a430:	mov	r0, #7
    a434:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a438:	mov	r1, #0
    a43c:	str	r4, [sp, #8]
    a440:	str	r2, [sp]
    a444:	str	r3, [sp, #4]
    a448:	mov	r3, #84	; 0x54
    a44c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a450:	bl	9934 <__snprintf_chk@plt+0x83b4>
    a454:	mov	r0, r4
    a458:	bl	1250 <free@plt>
    a45c:	b	a3b0 <__snprintf_chk@plt+0x8e30>
    a460:	ldr	r4, [r7]
    a464:	cmp	r4, #0
    a468:	rsbne	r4, r4, #0
    a46c:	mov	r0, r6
    a470:	bl	1574 <closedir@plt>
    a474:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a478:	mov	r0, r4
    a47c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a480:	ldr	r3, [r1]
    a484:	cmp	r2, r3
    a488:	bne	a514 <__snprintf_chk@plt+0x8f94>
    a48c:	sub	sp, fp, #32
    a490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a494:	bl	a078 <__snprintf_chk@plt+0x8af8>
    a498:	cmp	r0, #6
    a49c:	ble	a454 <__snprintf_chk@plt+0x8ed4>
    a4a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a4a4:	mov	r0, #7
    a4a8:	ldr	r3, [pc, #204]	; a57c <__snprintf_chk@plt+0x8ffc>
    a4ac:	str	r4, [sp, #8]
    a4b0:	add	r3, pc, r3
    a4b4:	str	r1, [sp]
    a4b8:	str	r3, [sp, #4]
    a4bc:	mov	r1, #0
    a4c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
    a4c4:	mov	r3, #78	; 0x4e
    a4c8:	bl	9934 <__snprintf_chk@plt+0x83b4>
    a4cc:	b	a454 <__snprintf_chk@plt+0x8ed4>
    a4d0:	bl	1400 <__errno_location@plt>
    a4d4:	ldr	r4, [r0]
    a4d8:	cmp	r4, #2
    a4dc:	rsbne	r4, r4, #0
    a4e0:	moveq	r4, r6
    a4e4:	b	a474 <__snprintf_chk@plt+0x8ef4>
    a4e8:	mvn	r4, #11
    a4ec:	b	a46c <__snprintf_chk@plt+0x8eec>
    a4f0:	mov	r0, r4
    a4f4:	mov	r4, r3
    a4f8:	bl	1250 <free@plt>
    a4fc:	b	a46c <__snprintf_chk@plt+0x8eec>
    a500:	mov	r4, r0
    a504:	mov	r0, r6
    a508:	bl	1574 <closedir@plt>
    a50c:	mov	r0, r4
    a510:	bl	1538 <_Unwind_Resume@plt>
    a514:	bl	12b0 <__stack_chk_fail@plt>
    a518:	ldr	r0, [pc, #96]	; a580 <__snprintf_chk@plt+0x9000>
    a51c:	mov	r2, #45	; 0x2d
    a520:	ldr	r1, [pc, #92]	; a584 <__snprintf_chk@plt+0x9004>
    a524:	ldr	r3, [pc, #92]	; a588 <__snprintf_chk@plt+0x9008>
    a528:	add	r0, pc, r0
    a52c:	add	r1, pc, r1
    a530:	add	r3, pc, r3
    a534:	bl	9700 <__snprintf_chk@plt+0x8180>
    a538:	ldr	r0, [pc, #76]	; a58c <__snprintf_chk@plt+0x900c>
    a53c:	mov	r2, #44	; 0x2c
    a540:	ldr	r1, [pc, #72]	; a590 <__snprintf_chk@plt+0x9010>
    a544:	ldr	r3, [pc, #72]	; a594 <__snprintf_chk@plt+0x9014>
    a548:	add	r0, pc, r0
    a54c:	add	r1, pc, r1
    a550:	add	r3, pc, r3
    a554:	bl	9700 <__snprintf_chk@plt+0x8180>
    a558:	andeq	r6, r1, r4, asr #23
    a55c:	andeq	r0, r0, r4, asr r1
    a560:	andeq	r1, r0, ip, ror #28
    a564:	andeq	r2, r0, r8, ror #13
    a568:	andeq	r5, r0, ip, asr #2
    a56c:	andeq	r5, r0, ip, lsl #2
    a570:	andeq	r5, r0, ip, ror #2
    a574:	andeq	r5, r0, r8, lsr #2
    a578:	andeq	r5, r0, r8, ror #1
    a57c:	andeq	r5, r0, r0, lsr r0
    a580:			; <UNDEFINED> instruction: 0x00004fb0
    a584:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    a588:	andeq	r4, r0, r4, lsl #31
    a58c:	andeq	r2, r0, r0, ror #7
    a590:	andeq	r4, r0, r4, ror pc
    a594:	andeq	r4, r0, r4, ror #30
    a598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a59c:	cmp	r0, #0
    a5a0:	sub	sp, sp, #28
    a5a4:	ldr	r4, [pc, #416]	; a74c <__snprintf_chk@plt+0x91cc>
    a5a8:	mov	r7, r1
    a5ac:	mov	r8, r2
    a5b0:	str	r0, [sp, #20]
    a5b4:	mov	r5, r3
    a5b8:	add	r4, pc, r4
    a5bc:	beq	a72c <__snprintf_chk@plt+0x91ac>
    a5c0:	cmp	r1, #0
    a5c4:	beq	a70c <__snprintf_chk@plt+0x918c>
    a5c8:	mov	r0, r3
    a5cc:	mov	r1, r2
    a5d0:	bl	6b68 <__snprintf_chk@plt+0x55e8>
    a5d4:	cmp	r0, #0
    a5d8:	beq	a6f0 <__snprintf_chk@plt+0x9170>
    a5dc:	ldr	r3, [pc, #364]	; a750 <__snprintf_chk@plt+0x91d0>
    a5e0:	ldr	r0, [r4, r3]
    a5e4:	bl	8294 <__snprintf_chk@plt+0x6d14>
    a5e8:	subs	r6, r0, #0
    a5ec:	beq	a6f0 <__snprintf_chk@plt+0x9170>
    a5f0:	cmp	r5, #0
    a5f4:	beq	a694 <__snprintf_chk@plt+0x9114>
    a5f8:	ldr	r2, [r5]
    a5fc:	cmp	r2, #0
    a600:	beq	a694 <__snprintf_chk@plt+0x9114>
    a604:	ldr	r9, [pc, #328]	; a754 <__snprintf_chk@plt+0x91d4>
    a608:	add	r5, r5, #4
    a60c:	ldr	sl, [pc, #324]	; a758 <__snprintf_chk@plt+0x91d8>
    a610:	ldr	fp, [pc, #324]	; a75c <__snprintf_chk@plt+0x91dc>
    a614:	add	r9, pc, r9
    a618:	add	sl, pc, sl
    a61c:	add	fp, pc, fp
    a620:	b	a638 <__snprintf_chk@plt+0x90b8>
    a624:	cmp	r5, #0
    a628:	beq	a694 <__snprintf_chk@plt+0x9114>
    a62c:	ldr	r2, [r5], #4
    a630:	cmp	r2, #0
    a634:	beq	a694 <__snprintf_chk@plt+0x9114>
    a638:	mov	r0, r6
    a63c:	mov	r1, r8
    a640:	mov	r3, r7
    a644:	bl	a2a4 <__snprintf_chk@plt+0x8d24>
    a648:	cmn	r0, #12
    a64c:	mov	r4, r0
    a650:	beq	a6e8 <__snprintf_chk@plt+0x9168>
    a654:	cmp	r0, #0
    a658:	bge	a624 <__snprintf_chk@plt+0x90a4>
    a65c:	bl	a078 <__snprintf_chk@plt+0x8af8>
    a660:	cmp	r0, #6
    a664:	ble	a624 <__snprintf_chk@plt+0x90a4>
    a668:	str	sl, [sp]
    a66c:	mov	r1, r4
    a670:	str	fp, [sp, #4]
    a674:	mov	r0, #7
    a678:	ldr	ip, [r5, #-4]
    a67c:	mov	r2, r9
    a680:	mov	r3, #122	; 0x7a
    a684:	str	ip, [sp, #8]
    a688:	bl	9934 <__snprintf_chk@plt+0x83b4>
    a68c:	cmp	r5, #0
    a690:	bne	a62c <__snprintf_chk@plt+0x90ac>
    a694:	mov	r0, r6
    a698:	bl	842c <__snprintf_chk@plt+0x6eac>
    a69c:	subs	r4, r0, #0
    a6a0:	beq	a6e8 <__snprintf_chk@plt+0x9168>
    a6a4:	mov	r0, r6
    a6a8:	bl	8410 <__snprintf_chk@plt+0x6e90>
    a6ac:	subs	r1, r0, #0
    a6b0:	beq	a6c8 <__snprintf_chk@plt+0x9148>
    a6b4:	ldr	r3, [pc, #164]	; a760 <__snprintf_chk@plt+0x91e0>
    a6b8:	mov	r0, r4
    a6bc:	mov	r2, #4
    a6c0:	add	r3, pc, r3
    a6c4:	bl	14fc <qsort@plt>
    a6c8:	ldr	r3, [sp, #20]
    a6cc:	str	r4, [r3]
    a6d0:	mov	r4, #0
    a6d4:	mov	r0, r6
    a6d8:	bl	82fc <__snprintf_chk@plt+0x6d7c>
    a6dc:	mov	r0, r4
    a6e0:	add	sp, sp, #28
    a6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a6e8:	mvn	r4, #11
    a6ec:	b	a6d4 <__snprintf_chk@plt+0x9154>
    a6f0:	mvn	r4, #11
    a6f4:	b	a6dc <__snprintf_chk@plt+0x915c>
    a6f8:	mov	r4, r0
    a6fc:	mov	r0, r6
    a700:	bl	82fc <__snprintf_chk@plt+0x6d7c>
    a704:	mov	r0, r4
    a708:	bl	1538 <_Unwind_Resume@plt>
    a70c:	ldr	r0, [pc, #80]	; a764 <__snprintf_chk@plt+0x91e4>
    a710:	mov	r2, #106	; 0x6a
    a714:	ldr	r1, [pc, #76]	; a768 <__snprintf_chk@plt+0x91e8>
    a718:	ldr	r3, [pc, #76]	; a76c <__snprintf_chk@plt+0x91ec>
    a71c:	add	r0, pc, r0
    a720:	add	r1, pc, r1
    a724:	add	r3, pc, r3
    a728:	bl	9700 <__snprintf_chk@plt+0x8180>
    a72c:	ldr	r0, [pc, #60]	; a770 <__snprintf_chk@plt+0x91f0>
    a730:	mov	r2, #105	; 0x69
    a734:	ldr	r1, [pc, #56]	; a774 <__snprintf_chk@plt+0x91f4>
    a738:	ldr	r3, [pc, #56]	; a778 <__snprintf_chk@plt+0x91f8>
    a73c:	add	r0, pc, r0
    a740:	add	r1, pc, r1
    a744:	add	r3, pc, r3
    a748:	bl	9700 <__snprintf_chk@plt+0x8180>
    a74c:	andeq	r6, r1, r8, asr #17
    a750:	andeq	r0, r0, ip, ror #2
    a754:	andeq	r4, r0, ip, lsr #29
    a758:	andeq	r4, r0, r4, asr #30
    a75c:	andeq	r4, r0, r0, lsl #30
    a760:			; <UNDEFINED> instruction: 0xfffffbb0
    a764:			; <UNDEFINED> instruction: 0x00004dbc
    a768:	andeq	r4, r0, r0, lsr #27
    a76c:	andeq	r4, r0, r0, ror sp
    a770:	ldrdeq	r4, [r0], -r8
    a774:	andeq	r4, r0, r0, lsl #27
    a778:	andeq	r4, r0, r0, asr sp
    a77c:	push	{r3, r4, r5, r6, r7, lr}
    a780:	subs	r6, r0, #0
    a784:	mov	r4, r1
    a788:	mov	r7, r2
    a78c:	beq	a7f8 <__snprintf_chk@plt+0x9278>
    a790:	cmp	r1, #0
    a794:	beq	a7d8 <__snprintf_chk@plt+0x9258>
    a798:	mov	r0, r3
    a79c:	bl	8fd0 <__snprintf_chk@plt+0x7a50>
    a7a0:	subs	r5, r0, #0
    a7a4:	beq	a7d0 <__snprintf_chk@plt+0x9250>
    a7a8:	mov	r0, r6
    a7ac:	mov	r1, r4
    a7b0:	mov	r2, r7
    a7b4:	mov	r3, r5
    a7b8:	bl	a598 <__snprintf_chk@plt+0x9018>
    a7bc:	mov	r4, r0
    a7c0:	mov	r0, r5
    a7c4:	bl	8fb8 <__snprintf_chk@plt+0x7a38>
    a7c8:	mov	r0, r4
    a7cc:	pop	{r3, r4, r5, r6, r7, pc}
    a7d0:	mvn	r4, #11
    a7d4:	b	a7c8 <__snprintf_chk@plt+0x9248>
    a7d8:	ldr	r0, [pc, #76]	; a82c <__snprintf_chk@plt+0x92ac>
    a7dc:	mov	r2, #140	; 0x8c
    a7e0:	ldr	r1, [pc, #72]	; a830 <__snprintf_chk@plt+0x92b0>
    a7e4:	ldr	r3, [pc, #72]	; a834 <__snprintf_chk@plt+0x92b4>
    a7e8:	add	r0, pc, r0
    a7ec:	add	r1, pc, r1
    a7f0:	add	r3, pc, r3
    a7f4:	bl	9700 <__snprintf_chk@plt+0x8180>
    a7f8:	ldr	r0, [pc, #56]	; a838 <__snprintf_chk@plt+0x92b8>
    a7fc:	mov	r2, #139	; 0x8b
    a800:	ldr	r1, [pc, #52]	; a83c <__snprintf_chk@plt+0x92bc>
    a804:	ldr	r3, [pc, #52]	; a840 <__snprintf_chk@plt+0x92c0>
    a808:	add	r0, pc, r0
    a80c:	add	r1, pc, r1
    a810:	add	r3, pc, r3
    a814:	bl	9700 <__snprintf_chk@plt+0x8180>
    a818:	mov	r4, r0
    a81c:	mov	r0, r5
    a820:	bl	8fb8 <__snprintf_chk@plt+0x7a38>
    a824:	mov	r0, r4
    a828:	bl	1538 <_Unwind_Resume@plt>
    a82c:	strdeq	r4, [r0], -r0
    a830:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    a834:	andeq	r4, r0, r4, asr sp
    a838:	andeq	r4, r0, ip, lsl #26
    a83c:			; <UNDEFINED> instruction: 0x00004cb4
    a840:	andeq	r4, r0, r4, lsr sp
    a844:	ldr	r3, [pc, #512]	; aa4c <__snprintf_chk@plt+0x94cc>
    a848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a84c:	add	r3, pc, r3
    a850:	subs	r6, r0, #0
    a854:	ldr	r0, [pc, #500]	; aa50 <__snprintf_chk@plt+0x94d0>
    a858:	mov	r8, r2
    a85c:	mov	r2, r3
    a860:	sub	sp, sp, #36	; 0x24
    a864:	mov	r3, #0
    a868:	ldr	r0, [r2, r0]
    a86c:	mov	r9, r1
    a870:	str	r3, [sp, #20]
    a874:	str	r3, [sp, #24]
    a878:	ldr	r3, [r0]
    a87c:	str	r0, [sp, #12]
    a880:	str	r3, [sp, #28]
    a884:	beq	aa18 <__snprintf_chk@plt+0x9498>
    a888:	cmp	r8, #0
    a88c:	beq	a8b4 <__snprintf_chk@plt+0x9334>
    a890:	mov	r2, #1
    a894:	add	r0, sp, #20
    a898:	mov	r3, r2
    a89c:	add	r1, sp, #24
    a8a0:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    a8a4:	cmp	r0, #0
    a8a8:	ldreq	r0, [sp, #20]
    a8ac:	mvneq	r7, #11
    a8b0:	beq	a97c <__snprintf_chk@plt+0x93fc>
    a8b4:	mov	r0, r6
    a8b8:	bl	14d8 <flockfile@plt>
    a8bc:	cmp	r9, #0
    a8c0:	beq	a9a0 <__snprintf_chk@plt+0x9420>
    a8c4:	add	r2, sp, #20
    a8c8:	add	r3, sp, #24
    a8cc:	str	r2, [sp, #4]
    a8d0:	mov	r5, #0
    a8d4:	str	r3, [sp, #8]
    a8d8:	bl	1400 <__errno_location@plt>
    a8dc:	mov	fp, r5
    a8e0:	mov	sl, r0
    a8e4:	b	a928 <__snprintf_chk@plt+0x93a8>
    a8e8:	cmp	r4, #0
    a8ec:	beq	a954 <__snprintf_chk@plt+0x93d4>
    a8f0:	cmp	r8, #0
    a8f4:	beq	a91c <__snprintf_chk@plt+0x939c>
    a8f8:	add	r0, sp, #20
    a8fc:	add	r1, sp, #24
    a900:	add	r2, r5, #2
    a904:	mov	r3, #1
    a908:	bl	4dd0 <__snprintf_chk@plt+0x3850>
    a90c:	cmp	r0, #0
    a910:	beq	a9b4 <__snprintf_chk@plt+0x9434>
    a914:	ldr	r3, [sp, #20]
    a918:	strb	r4, [r3, r5]
    a91c:	cmp	r7, r9
    a920:	beq	a9a0 <__snprintf_chk@plt+0x9420>
    a924:	mov	r5, r7
    a928:	str	fp, [sl]
    a92c:	ldr	r3, [r6, #4]
    a930:	ldr	r2, [r6, #8]
    a934:	cmp	r3, r2
    a938:	bcs	a9bc <__snprintf_chk@plt+0x943c>
    a93c:	add	r2, r3, #1
    a940:	str	r2, [r6, #4]
    a944:	ldrb	r4, [r3]
    a948:	cmp	r4, #10
    a94c:	add	r7, r5, #1
    a950:	bne	a8e8 <__snprintf_chk@plt+0x9368>
    a954:	mov	r0, r6
    a958:	bl	12e0 <funlockfile@plt>
    a95c:	cmp	r8, #0
    a960:	beq	a9ac <__snprintf_chk@plt+0x942c>
    a964:	ldr	r2, [sp, #20]
    a968:	mov	r3, #0
    a96c:	mov	r0, r3
    a970:	strb	r3, [r2, r5]
    a974:	ldr	r3, [sp, #20]
    a978:	str	r3, [r8]
    a97c:	bl	1250 <free@plt>
    a980:	ldr	r1, [sp, #12]
    a984:	ldr	r2, [sp, #28]
    a988:	mov	r0, r7
    a98c:	ldr	r3, [r1]
    a990:	cmp	r2, r3
    a994:	bne	aa48 <__snprintf_chk@plt+0x94c8>
    a998:	add	sp, sp, #36	; 0x24
    a99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9a0:	mvn	r7, #104	; 0x68
    a9a4:	mov	r0, r6
    a9a8:	bl	12e0 <funlockfile@plt>
    a9ac:	ldr	r0, [sp, #20]
    a9b0:	b	a97c <__snprintf_chk@plt+0x93fc>
    a9b4:	mvn	r7, #11
    a9b8:	b	a9a4 <__snprintf_chk@plt+0x9424>
    a9bc:	mov	r0, r6
    a9c0:	bl	1484 <__uflow@plt>
    a9c4:	cmn	r0, #1
    a9c8:	bne	a9fc <__snprintf_chk@plt+0x947c>
    a9cc:	ldr	r3, [r6]
    a9d0:	tst	r3, #32
    a9d4:	beq	a9f4 <__snprintf_chk@plt+0x9474>
    a9d8:	cmp	r5, #0
    a9dc:	bne	a9f4 <__snprintf_chk@plt+0x9474>
    a9e0:	ldr	r7, [sl]
    a9e4:	cmp	r7, #0
    a9e8:	rsbgt	r7, r7, #0
    a9ec:	mvnle	r7, #4
    a9f0:	b	a9a4 <__snprintf_chk@plt+0x9424>
    a9f4:	mov	r7, r5
    a9f8:	b	a954 <__snprintf_chk@plt+0x93d4>
    a9fc:	mov	r4, r0
    aa00:	b	a948 <__snprintf_chk@plt+0x93c8>
    aa04:	mov	r4, r0
    aa08:	ldr	r0, [sp, #20]
    aa0c:	bl	1250 <free@plt>
    aa10:	mov	r0, r4
    aa14:	bl	1538 <_Unwind_Resume@plt>
    aa18:	ldr	r0, [pc, #52]	; aa54 <__snprintf_chk@plt+0x94d4>
    aa1c:	movw	r2, #815	; 0x32f
    aa20:	ldr	r1, [pc, #48]	; aa58 <__snprintf_chk@plt+0x94d8>
    aa24:	ldr	r3, [pc, #48]	; aa5c <__snprintf_chk@plt+0x94dc>
    aa28:	add	r0, pc, r0
    aa2c:	add	r1, pc, r1
    aa30:	add	r3, pc, r3
    aa34:	bl	9700 <__snprintf_chk@plt+0x8180>
    aa38:	mov	r4, r0
    aa3c:	mov	r0, r6
    aa40:	bl	12e0 <funlockfile@plt>
    aa44:	b	aa08 <__snprintf_chk@plt+0x9488>
    aa48:	bl	12b0 <__stack_chk_fail@plt>
    aa4c:	andeq	r6, r1, r4, lsr r6
    aa50:	andeq	r0, r0, r4, asr r1
    aa54:	muleq	r0, r4, sl
    aa58:	andeq	r4, r0, r4, ror #22
    aa5c:	andeq	r4, r0, r0, asr #24
    aa60:	cmp	r0, #0
    aa64:	push	{r3, r4, r5, lr}
    aa68:	mov	r4, r1
    aa6c:	beq	aae0 <__snprintf_chk@plt+0x9560>
    aa70:	cmp	r1, #0
    aa74:	beq	aac0 <__snprintf_chk@plt+0x9540>
    aa78:	ldr	r1, [pc, #148]	; ab14 <__snprintf_chk@plt+0x9594>
    aa7c:	add	r1, pc, r1
    aa80:	bl	14f0 <fopen64@plt>
    aa84:	subs	r5, r0, #0
    aa88:	beq	aaac <__snprintf_chk@plt+0x952c>
    aa8c:	mov	r2, r4
    aa90:	mov	r1, #1048576	; 0x100000
    aa94:	bl	a844 <__snprintf_chk@plt+0x92c4>
    aa98:	and	r4, r0, r0, asr #31
    aa9c:	mov	r0, r5
    aaa0:	bl	146c <fclose@plt>
    aaa4:	mov	r0, r4
    aaa8:	pop	{r3, r4, r5, pc}
    aaac:	bl	1400 <__errno_location@plt>
    aab0:	ldr	r4, [r0]
    aab4:	rsb	r4, r4, #0
    aab8:	mov	r0, r4
    aabc:	pop	{r3, r4, r5, pc}
    aac0:	ldr	r0, [pc, #80]	; ab18 <__snprintf_chk@plt+0x9598>
    aac4:	mov	r2, #115	; 0x73
    aac8:	ldr	r1, [pc, #76]	; ab1c <__snprintf_chk@plt+0x959c>
    aacc:	ldr	r3, [pc, #76]	; ab20 <__snprintf_chk@plt+0x95a0>
    aad0:	add	r0, pc, r0
    aad4:	add	r1, pc, r1
    aad8:	add	r3, pc, r3
    aadc:	bl	9700 <__snprintf_chk@plt+0x8180>
    aae0:	ldr	r0, [pc, #60]	; ab24 <__snprintf_chk@plt+0x95a4>
    aae4:	mov	r2, #114	; 0x72
    aae8:	ldr	r1, [pc, #56]	; ab28 <__snprintf_chk@plt+0x95a8>
    aaec:	ldr	r3, [pc, #56]	; ab2c <__snprintf_chk@plt+0x95ac>
    aaf0:	add	r0, pc, r0
    aaf4:	add	r1, pc, r1
    aaf8:	add	r3, pc, r3
    aafc:	bl	9700 <__snprintf_chk@plt+0x8180>
    ab00:	mov	r4, r0
    ab04:	mov	r0, r5
    ab08:	bl	146c <fclose@plt>
    ab0c:	mov	r0, r4
    ab10:	bl	1538 <_Unwind_Resume@plt>
    ab14:	andeq	r1, r0, r0, lsr sl
    ab18:	andeq	r1, r0, r8, lsl #27
    ab1c:			; <UNDEFINED> instruction: 0x00004abc
    ab20:	andeq	r4, r0, r4, lsr #21
    ab24:	andeq	r2, r0, r0, lsl #2
    ab28:	muleq	r0, ip, sl
    ab2c:	andeq	r4, r0, r4, lsl #21
    ab30:	ldr	r3, [r0, #4]
    ab34:	str	r3, [r1]
    ab38:	str	r1, [r0, #4]
    ab3c:	bx	lr
    ab40:	push	{r4, r5, r6, r7, r8, lr}
    ab44:	sub	sp, sp, #16
    ab48:	add	ip, sp, #16
    ab4c:	ldr	r8, [sp, #40]	; 0x28
    ab50:	stmdb	ip, {r0, r1, r2, r3}
    ab54:	cmp	r8, #0
    ab58:	subne	r5, sp, #1
    ab5c:	addne	r7, sp, #15
    ab60:	movne	r4, r8
    ab64:	beq	aba4 <__snprintf_chk@plt+0x9624>
    ab68:	ldrb	r6, [r5, #1]!
    ab6c:	add	r4, r4, #2
    ab70:	lsr	r0, r6, #4
    ab74:	bl	4000 <__snprintf_chk@plt+0x2a80>
    ab78:	strb	r0, [r4, #-2]
    ab7c:	and	r0, r6, #15
    ab80:	bl	4000 <__snprintf_chk@plt+0x2a80>
    ab84:	cmp	r5, r7
    ab88:	strb	r0, [r4, #-1]
    ab8c:	bne	ab68 <__snprintf_chk@plt+0x95e8>
    ab90:	mov	r3, #0
    ab94:	strb	r3, [r8, #32]
    ab98:	mov	r0, r8
    ab9c:	add	sp, sp, #16
    aba0:	pop	{r4, r5, r6, r7, r8, pc}
    aba4:	ldr	r0, [pc, #28]	; abc8 <__snprintf_chk@plt+0x9648>
    aba8:	mov	r2, #33	; 0x21
    abac:	ldr	r1, [pc, #24]	; abcc <__snprintf_chk@plt+0x964c>
    abb0:	ldr	r3, [pc, #24]	; abd0 <__snprintf_chk@plt+0x9650>
    abb4:	add	r0, pc, r0
    abb8:	add	r1, pc, r1
    abbc:	add	r3, pc, r3
    abc0:	bl	99f0 <__snprintf_chk@plt+0x8470>
    abc4:	b	ab98 <__snprintf_chk@plt+0x9618>
    abc8:	andeq	r2, r0, r8, ror #19
    abcc:	andeq	r4, r0, ip, ror #21
    abd0:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    abd4:	ldr	r3, [pc, #424]	; ad84 <__snprintf_chk@plt+0x9804>
    abd8:	ldr	r2, [pc, #424]	; ad88 <__snprintf_chk@plt+0x9808>
    abdc:	add	r3, pc, r3
    abe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    abe4:	subs	r6, r0, #0
    abe8:	ldr	r8, [r3, r2]
    abec:	sub	sp, sp, #60	; 0x3c
    abf0:	ldr	r3, [r8]
    abf4:	str	r3, [sp, #52]	; 0x34
    abf8:	beq	ad34 <__snprintf_chk@plt+0x97b4>
    abfc:	ldr	r0, [pc, #392]	; ad8c <__snprintf_chk@plt+0x980c>
    ac00:	ldr	r9, [pc, #392]	; ad90 <__snprintf_chk@plt+0x9810>
    ac04:	add	r0, pc, r0
    ac08:	bl	1520 <__tls_get_addr@plt>
    ac0c:	ldrb	r3, [r9, r0]
    ac10:	cmp	r3, #0
    ac14:	beq	ac54 <__snprintf_chk@plt+0x96d4>
    ac18:	ldr	r3, [pc, #372]	; ad94 <__snprintf_chk@plt+0x9814>
    ac1c:	mvn	fp, #0
    ac20:	mov	r4, #0
    ac24:	add	r2, r0, r3
    ac28:	ldm	r2, {r0, r1, r2, r3}
    ac2c:	stm	r6, {r0, r1, r2, r3}
    ac30:	mov	r0, fp
    ac34:	bl	3aec <__snprintf_chk@plt+0x256c>
    ac38:	ldr	r2, [sp, #52]	; 0x34
    ac3c:	ldr	r3, [r8]
    ac40:	mov	r0, r4
    ac44:	cmp	r2, r3
    ac48:	bne	ad30 <__snprintf_chk@plt+0x97b0>
    ac4c:	add	sp, sp, #60	; 0x3c
    ac50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ac54:	ldr	r0, [pc, #316]	; ad98 <__snprintf_chk@plt+0x9818>
    ac58:	mov	r1, #256	; 0x100
    ac5c:	movt	r1, #8
    ac60:	add	r0, pc, r0
    ac64:	bl	131c <open64@plt>
    ac68:	subs	fp, r0, #0
    ac6c:	blt	ad10 <__snprintf_chk@plt+0x9790>
    ac70:	add	r4, sp, #16
    ac74:	mov	r2, #33	; 0x21
    ac78:	mov	r3, #0
    ac7c:	mov	r1, r4
    ac80:	bl	44b0 <__snprintf_chk@plt+0x2f30>
    ac84:	cmp	r0, #0
    ac88:	blt	ad28 <__snprintf_chk@plt+0x97a8>
    ac8c:	cmp	r0, #33	; 0x21
    ac90:	bne	ad20 <__snprintf_chk@plt+0x97a0>
    ac94:	ldrb	r3, [sp, #48]	; 0x30
    ac98:	cmp	r3, #10
    ac9c:	bne	ad20 <__snprintf_chk@plt+0x97a0>
    aca0:	sub	r7, sp, #1
    aca4:	add	sl, sp, #48	; 0x30
    aca8:	ldrb	r0, [r4]
    acac:	bl	4018 <__snprintf_chk@plt+0x2a98>
    acb0:	mov	r5, r0
    acb4:	ldrb	r0, [r4, #1]
    acb8:	bl	4018 <__snprintf_chk@plt+0x2a98>
    acbc:	lsr	r3, r5, #31
    acc0:	orrs	r3, r3, r0, lsr #31
    acc4:	bne	ad20 <__snprintf_chk@plt+0x97a0>
    acc8:	add	r4, r4, #2
    accc:	orr	r5, r0, r5, lsl #4
    acd0:	cmp	r4, sl
    acd4:	strb	r5, [r7, #1]!
    acd8:	bne	aca8 <__snprintf_chk@plt+0x9728>
    acdc:	ldr	r0, [pc, #184]	; ad9c <__snprintf_chk@plt+0x981c>
    ace0:	mov	r4, r3
    ace4:	ldr	r5, [pc, #168]	; ad94 <__snprintf_chk@plt+0x9814>
    ace8:	add	r0, pc, r0
    acec:	bl	1520 <__tls_get_addr@plt>
    acf0:	mov	r3, #1
    acf4:	mov	lr, r0
    acf8:	strb	r3, [r9, r0]
    acfc:	ldm	sp, {r0, r1, r2, r3}
    ad00:	add	lr, lr, r5
    ad04:	stm	r6, {r0, r1, r2, r3}
    ad08:	stm	lr, {r0, r1, r2, r3}
    ad0c:	b	ac30 <__snprintf_chk@plt+0x96b0>
    ad10:	bl	1400 <__errno_location@plt>
    ad14:	ldr	r4, [r0]
    ad18:	rsb	r4, r4, #0
    ad1c:	b	ac30 <__snprintf_chk@plt+0x96b0>
    ad20:	mvn	r4, #4
    ad24:	b	ac30 <__snprintf_chk@plt+0x96b0>
    ad28:	mov	r4, r0
    ad2c:	b	ac30 <__snprintf_chk@plt+0x96b0>
    ad30:	bl	12b0 <__stack_chk_fail@plt>
    ad34:	ldr	r0, [pc, #100]	; ada0 <__snprintf_chk@plt+0x9820>
    ad38:	mov	r2, #115	; 0x73
    ad3c:	ldr	r1, [pc, #96]	; ada4 <__snprintf_chk@plt+0x9824>
    ad40:	ldr	r3, [pc, #96]	; ada8 <__snprintf_chk@plt+0x9828>
    ad44:	add	r0, pc, r0
    ad48:	add	r1, pc, r1
    ad4c:	add	r3, pc, r3
    ad50:	bl	99f0 <__snprintf_chk@plt+0x8470>
    ad54:	mvn	fp, #0
    ad58:	mvn	r4, #21
    ad5c:	b	ac30 <__snprintf_chk@plt+0x96b0>
    ad60:	mov	r4, r0
    ad64:	mov	r0, fp
    ad68:	bl	3aec <__snprintf_chk@plt+0x256c>
    ad6c:	mov	r0, r4
    ad70:	bl	1538 <_Unwind_Resume@plt>
    ad74:	mov	r4, r0
    ad78:	mvn	fp, #0
    ad7c:	b	ad64 <__snprintf_chk@plt+0x97e4>
    ad80:	b	ad74 <__snprintf_chk@plt+0x97f4>
    ad84:	andeq	r6, r1, r4, lsr #5
    ad88:	andeq	r0, r0, r4, asr r1
    ad8c:			; <UNDEFINED> instruction: 0x000163bc
    ad90:	andeq	r0, r0, sp
    ad94:	andeq	r0, r0, r0, lsl r0
    ad98:	andeq	r4, r0, r8, ror #20
    ad9c:	ldrdeq	r6, [r1], -r8
    ada0:	andeq	r1, r0, r8, ror sl
    ada4:	andeq	r4, r0, ip, asr r9
    ada8:	andeq	r4, r0, ip, lsr #19
    adac:	ldr	r3, [pc, #472]	; af8c <__snprintf_chk@plt+0x9a0c>
    adb0:	ldr	r2, [pc, #472]	; af90 <__snprintf_chk@plt+0x9a10>
    adb4:	add	r3, pc, r3
    adb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    adbc:	subs	r7, r0, #0
    adc0:	ldr	r2, [r3, r2]
    adc4:	sub	sp, sp, #68	; 0x44
    adc8:	ldr	r3, [r2]
    adcc:	str	r2, [sp, #4]
    add0:	str	r3, [sp, #60]	; 0x3c
    add4:	beq	af3c <__snprintf_chk@plt+0x99bc>
    add8:	ldr	r0, [pc, #436]	; af94 <__snprintf_chk@plt+0x9a14>
    addc:	ldr	r9, [pc, #436]	; af98 <__snprintf_chk@plt+0x9a18>
    ade0:	add	r0, pc, r0
    ade4:	bl	1520 <__tls_get_addr@plt>
    ade8:	ldrb	r3, [r9, r0]
    adec:	cmp	r3, #0
    adf0:	beq	ae34 <__snprintf_chk@plt+0x98b4>
    adf4:	ldr	r3, [pc, #416]	; af9c <__snprintf_chk@plt+0x9a1c>
    adf8:	mvn	sl, #0
    adfc:	mov	r4, #0
    ae00:	add	r2, r0, r3
    ae04:	ldm	r2, {r0, r1, r2, r3}
    ae08:	stm	r7, {r0, r1, r2, r3}
    ae0c:	mov	r0, sl
    ae10:	bl	3aec <__snprintf_chk@plt+0x256c>
    ae14:	ldr	r1, [sp, #4]
    ae18:	ldr	r2, [sp, #60]	; 0x3c
    ae1c:	mov	r0, r4
    ae20:	ldr	r3, [r1]
    ae24:	cmp	r2, r3
    ae28:	bne	af38 <__snprintf_chk@plt+0x99b8>
    ae2c:	add	sp, sp, #68	; 0x44
    ae30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ae34:	ldr	r0, [pc, #356]	; afa0 <__snprintf_chk@plt+0x9a20>
    ae38:	mov	r1, #256	; 0x100
    ae3c:	movt	r1, #8
    ae40:	add	r0, pc, r0
    ae44:	bl	131c <open64@plt>
    ae48:	subs	sl, r0, #0
    ae4c:	blt	aee0 <__snprintf_chk@plt+0x9960>
    ae50:	add	r4, sp, #24
    ae54:	mov	r2, #36	; 0x24
    ae58:	mov	r3, #0
    ae5c:	mov	r1, r4
    ae60:	bl	44b0 <__snprintf_chk@plt+0x2f30>
    ae64:	cmp	r0, #0
    ae68:	blt	af30 <__snprintf_chk@plt+0x99b0>
    ae6c:	cmp	r0, #36	; 0x24
    ae70:	bne	af28 <__snprintf_chk@plt+0x99a8>
    ae74:	add	r8, sp, #59	; 0x3b
    ae78:	add	r5, sp, #7
    ae7c:	add	fp, sp, #23
    ae80:	b	aebc <__snprintf_chk@plt+0x993c>
    ae84:	bl	4018 <__snprintf_chk@plt+0x2a98>
    ae88:	mov	r6, r0
    ae8c:	ldrb	r0, [r4, #1]
    ae90:	bl	4018 <__snprintf_chk@plt+0x2a98>
    ae94:	lsr	r3, r6, #31
    ae98:	orrs	r3, r3, r0, lsr #31
    ae9c:	bne	af28 <__snprintf_chk@plt+0x99a8>
    aea0:	orr	r6, r0, r6, lsl #4
    aea4:	strb	r6, [r5, #1]!
    aea8:	cmp	r5, fp
    aeac:	add	r4, r4, #2
    aeb0:	beq	aef0 <__snprintf_chk@plt+0x9970>
    aeb4:	cmp	r4, r8
    aeb8:	bcs	af28 <__snprintf_chk@plt+0x99a8>
    aebc:	ldrb	r0, [r4]
    aec0:	cmp	r0, #45	; 0x2d
    aec4:	bne	ae84 <__snprintf_chk@plt+0x9904>
    aec8:	add	r3, r4, #1
    aecc:	cmp	r3, r8
    aed0:	bcs	af28 <__snprintf_chk@plt+0x99a8>
    aed4:	ldrb	r0, [r4, #1]
    aed8:	mov	r4, r3
    aedc:	b	ae84 <__snprintf_chk@plt+0x9904>
    aee0:	bl	1400 <__errno_location@plt>
    aee4:	ldr	r4, [r0]
    aee8:	rsb	r4, r4, #0
    aeec:	b	ae0c <__snprintf_chk@plt+0x988c>
    aef0:	ldr	r0, [pc, #172]	; afa4 <__snprintf_chk@plt+0x9a24>
    aef4:	mov	r4, r3
    aef8:	ldr	r5, [pc, #156]	; af9c <__snprintf_chk@plt+0x9a1c>
    aefc:	add	r0, pc, r0
    af00:	bl	1520 <__tls_get_addr@plt>
    af04:	add	ip, sp, #8
    af08:	mov	r3, #1
    af0c:	mov	lr, r0
    af10:	strb	r3, [r9, r0]
    af14:	ldm	ip, {r0, r1, r2, r3}
    af18:	add	lr, lr, r5
    af1c:	stm	r7, {r0, r1, r2, r3}
    af20:	stm	lr, {r0, r1, r2, r3}
    af24:	b	ae0c <__snprintf_chk@plt+0x988c>
    af28:	mvn	r4, #4
    af2c:	b	ae0c <__snprintf_chk@plt+0x988c>
    af30:	mov	r4, r0
    af34:	b	ae0c <__snprintf_chk@plt+0x988c>
    af38:	bl	12b0 <__stack_chk_fail@plt>
    af3c:	ldr	r0, [pc, #100]	; afa8 <__snprintf_chk@plt+0x9a28>
    af40:	mov	r2, #165	; 0xa5
    af44:	ldr	r1, [pc, #96]	; afac <__snprintf_chk@plt+0x9a2c>
    af48:	ldr	r3, [pc, #96]	; afb0 <__snprintf_chk@plt+0x9a30>
    af4c:	add	r0, pc, r0
    af50:	add	r1, pc, r1
    af54:	add	r3, pc, r3
    af58:	bl	99f0 <__snprintf_chk@plt+0x8470>
    af5c:	mvn	sl, #0
    af60:	mvn	r4, #21
    af64:	b	ae0c <__snprintf_chk@plt+0x988c>
    af68:	mov	r4, r0
    af6c:	mvn	sl, #0
    af70:	mov	r0, sl
    af74:	bl	3aec <__snprintf_chk@plt+0x256c>
    af78:	mov	r0, r4
    af7c:	bl	1538 <_Unwind_Resume@plt>
    af80:	mov	r4, r0
    af84:	b	af70 <__snprintf_chk@plt+0x99f0>
    af88:	b	af68 <__snprintf_chk@plt+0x99e8>
    af8c:	andeq	r6, r1, ip, asr #1
    af90:	andeq	r0, r0, r4, asr r1
    af94:	andeq	r6, r1, r0, ror #3
    af98:	andeq	r0, r0, ip
    af9c:	andeq	r0, r0, r0, lsr #32
    afa0:	muleq	r0, r8, r8
    afa4:	andeq	r6, r1, r4, asr #1
    afa8:	andeq	r1, r0, r0, ror r8
    afac:	andeq	r4, r0, r4, asr r7
    afb0:	andeq	r4, r0, r8, lsr #14
    afb4:	subs	r2, r1, #1
    afb8:	bxeq	lr
    afbc:	bcc	b194 <__snprintf_chk@plt+0x9c14>
    afc0:	cmp	r0, r1
    afc4:	bls	b178 <__snprintf_chk@plt+0x9bf8>
    afc8:	tst	r1, r2
    afcc:	beq	b184 <__snprintf_chk@plt+0x9c04>
    afd0:	clz	r3, r0
    afd4:	clz	r2, r1
    afd8:	sub	r3, r2, r3
    afdc:	rsbs	r3, r3, #31
    afe0:	addne	r3, r3, r3, lsl #1
    afe4:	mov	r2, #0
    afe8:	addne	pc, pc, r3, lsl #2
    afec:	nop	{0}
    aff0:	cmp	r0, r1, lsl #31
    aff4:	adc	r2, r2, r2
    aff8:	subcs	r0, r0, r1, lsl #31
    affc:	cmp	r0, r1, lsl #30
    b000:	adc	r2, r2, r2
    b004:	subcs	r0, r0, r1, lsl #30
    b008:	cmp	r0, r1, lsl #29
    b00c:	adc	r2, r2, r2
    b010:	subcs	r0, r0, r1, lsl #29
    b014:	cmp	r0, r1, lsl #28
    b018:	adc	r2, r2, r2
    b01c:	subcs	r0, r0, r1, lsl #28
    b020:	cmp	r0, r1, lsl #27
    b024:	adc	r2, r2, r2
    b028:	subcs	r0, r0, r1, lsl #27
    b02c:	cmp	r0, r1, lsl #26
    b030:	adc	r2, r2, r2
    b034:	subcs	r0, r0, r1, lsl #26
    b038:	cmp	r0, r1, lsl #25
    b03c:	adc	r2, r2, r2
    b040:	subcs	r0, r0, r1, lsl #25
    b044:	cmp	r0, r1, lsl #24
    b048:	adc	r2, r2, r2
    b04c:	subcs	r0, r0, r1, lsl #24
    b050:	cmp	r0, r1, lsl #23
    b054:	adc	r2, r2, r2
    b058:	subcs	r0, r0, r1, lsl #23
    b05c:	cmp	r0, r1, lsl #22
    b060:	adc	r2, r2, r2
    b064:	subcs	r0, r0, r1, lsl #22
    b068:	cmp	r0, r1, lsl #21
    b06c:	adc	r2, r2, r2
    b070:	subcs	r0, r0, r1, lsl #21
    b074:	cmp	r0, r1, lsl #20
    b078:	adc	r2, r2, r2
    b07c:	subcs	r0, r0, r1, lsl #20
    b080:	cmp	r0, r1, lsl #19
    b084:	adc	r2, r2, r2
    b088:	subcs	r0, r0, r1, lsl #19
    b08c:	cmp	r0, r1, lsl #18
    b090:	adc	r2, r2, r2
    b094:	subcs	r0, r0, r1, lsl #18
    b098:	cmp	r0, r1, lsl #17
    b09c:	adc	r2, r2, r2
    b0a0:	subcs	r0, r0, r1, lsl #17
    b0a4:	cmp	r0, r1, lsl #16
    b0a8:	adc	r2, r2, r2
    b0ac:	subcs	r0, r0, r1, lsl #16
    b0b0:	cmp	r0, r1, lsl #15
    b0b4:	adc	r2, r2, r2
    b0b8:	subcs	r0, r0, r1, lsl #15
    b0bc:	cmp	r0, r1, lsl #14
    b0c0:	adc	r2, r2, r2
    b0c4:	subcs	r0, r0, r1, lsl #14
    b0c8:	cmp	r0, r1, lsl #13
    b0cc:	adc	r2, r2, r2
    b0d0:	subcs	r0, r0, r1, lsl #13
    b0d4:	cmp	r0, r1, lsl #12
    b0d8:	adc	r2, r2, r2
    b0dc:	subcs	r0, r0, r1, lsl #12
    b0e0:	cmp	r0, r1, lsl #11
    b0e4:	adc	r2, r2, r2
    b0e8:	subcs	r0, r0, r1, lsl #11
    b0ec:	cmp	r0, r1, lsl #10
    b0f0:	adc	r2, r2, r2
    b0f4:	subcs	r0, r0, r1, lsl #10
    b0f8:	cmp	r0, r1, lsl #9
    b0fc:	adc	r2, r2, r2
    b100:	subcs	r0, r0, r1, lsl #9
    b104:	cmp	r0, r1, lsl #8
    b108:	adc	r2, r2, r2
    b10c:	subcs	r0, r0, r1, lsl #8
    b110:	cmp	r0, r1, lsl #7
    b114:	adc	r2, r2, r2
    b118:	subcs	r0, r0, r1, lsl #7
    b11c:	cmp	r0, r1, lsl #6
    b120:	adc	r2, r2, r2
    b124:	subcs	r0, r0, r1, lsl #6
    b128:	cmp	r0, r1, lsl #5
    b12c:	adc	r2, r2, r2
    b130:	subcs	r0, r0, r1, lsl #5
    b134:	cmp	r0, r1, lsl #4
    b138:	adc	r2, r2, r2
    b13c:	subcs	r0, r0, r1, lsl #4
    b140:	cmp	r0, r1, lsl #3
    b144:	adc	r2, r2, r2
    b148:	subcs	r0, r0, r1, lsl #3
    b14c:	cmp	r0, r1, lsl #2
    b150:	adc	r2, r2, r2
    b154:	subcs	r0, r0, r1, lsl #2
    b158:	cmp	r0, r1, lsl #1
    b15c:	adc	r2, r2, r2
    b160:	subcs	r0, r0, r1, lsl #1
    b164:	cmp	r0, r1
    b168:	adc	r2, r2, r2
    b16c:	subcs	r0, r0, r1
    b170:	mov	r0, r2
    b174:	bx	lr
    b178:	moveq	r0, #1
    b17c:	movne	r0, #0
    b180:	bx	lr
    b184:	clz	r2, r1
    b188:	rsb	r2, r2, #31
    b18c:	lsr	r0, r0, r2
    b190:	bx	lr
    b194:	cmp	r0, #0
    b198:	mvnne	r0, #0
    b19c:	b	b5fc <__snprintf_chk@plt+0xa07c>
    b1a0:	cmp	r1, #0
    b1a4:	beq	b194 <__snprintf_chk@plt+0x9c14>
    b1a8:	push	{r0, r1, lr}
    b1ac:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b1b0:	pop	{r1, r2, lr}
    b1b4:	mul	r3, r2, r0
    b1b8:	sub	r1, r1, r3
    b1bc:	bx	lr
    b1c0:	eor	r1, r1, #-2147483648	; 0x80000000
    b1c4:	b	b1cc <__snprintf_chk@plt+0x9c4c>
    b1c8:	eor	r3, r3, #-2147483648	; 0x80000000
    b1cc:	push	{r4, r5, lr}
    b1d0:	lsl	r4, r1, #1
    b1d4:	lsl	r5, r3, #1
    b1d8:	teq	r4, r5
    b1dc:	teqeq	r0, r2
    b1e0:	orrsne	ip, r4, r0
    b1e4:	orrsne	ip, r5, r2
    b1e8:	mvnsne	ip, r4, asr #21
    b1ec:	mvnsne	ip, r5, asr #21
    b1f0:	beq	b3dc <__snprintf_chk@plt+0x9e5c>
    b1f4:	lsr	r4, r4, #21
    b1f8:	rsbs	r5, r4, r5, lsr #21
    b1fc:	rsblt	r5, r5, #0
    b200:	ble	b220 <__snprintf_chk@plt+0x9ca0>
    b204:	add	r4, r4, r5
    b208:	eor	r2, r0, r2
    b20c:	eor	r3, r1, r3
    b210:	eor	r0, r2, r0
    b214:	eor	r1, r3, r1
    b218:	eor	r2, r0, r2
    b21c:	eor	r3, r1, r3
    b220:	cmp	r5, #54	; 0x36
    b224:	pophi	{r4, r5, pc}
    b228:	tst	r1, #-2147483648	; 0x80000000
    b22c:	lsl	r1, r1, #12
    b230:	mov	ip, #1048576	; 0x100000
    b234:	orr	r1, ip, r1, lsr #12
    b238:	beq	b244 <__snprintf_chk@plt+0x9cc4>
    b23c:	rsbs	r0, r0, #0
    b240:	rsc	r1, r1, #0
    b244:	tst	r3, #-2147483648	; 0x80000000
    b248:	lsl	r3, r3, #12
    b24c:	orr	r3, ip, r3, lsr #12
    b250:	beq	b25c <__snprintf_chk@plt+0x9cdc>
    b254:	rsbs	r2, r2, #0
    b258:	rsc	r3, r3, #0
    b25c:	teq	r4, r5
    b260:	beq	b3c4 <__snprintf_chk@plt+0x9e44>
    b264:	sub	r4, r4, #1
    b268:	rsbs	lr, r5, #32
    b26c:	blt	b288 <__snprintf_chk@plt+0x9d08>
    b270:	lsl	ip, r2, lr
    b274:	adds	r0, r0, r2, lsr r5
    b278:	adc	r1, r1, #0
    b27c:	adds	r0, r0, r3, lsl lr
    b280:	adcs	r1, r1, r3, asr r5
    b284:	b	b2a4 <__snprintf_chk@plt+0x9d24>
    b288:	sub	r5, r5, #32
    b28c:	add	lr, lr, #32
    b290:	cmp	r2, #1
    b294:	lsl	ip, r3, lr
    b298:	orrcs	ip, ip, #2
    b29c:	adds	r0, r0, r3, asr r5
    b2a0:	adcs	r1, r1, r3, asr #31
    b2a4:	and	r5, r1, #-2147483648	; 0x80000000
    b2a8:	bpl	b2b8 <__snprintf_chk@plt+0x9d38>
    b2ac:	rsbs	ip, ip, #0
    b2b0:	rscs	r0, r0, #0
    b2b4:	rsc	r1, r1, #0
    b2b8:	cmp	r1, #1048576	; 0x100000
    b2bc:	bcc	b2fc <__snprintf_chk@plt+0x9d7c>
    b2c0:	cmp	r1, #2097152	; 0x200000
    b2c4:	bcc	b2e4 <__snprintf_chk@plt+0x9d64>
    b2c8:	lsrs	r1, r1, #1
    b2cc:	rrxs	r0, r0
    b2d0:	rrx	ip, ip
    b2d4:	add	r4, r4, #1
    b2d8:	lsl	r2, r4, #21
    b2dc:	cmn	r2, #4194304	; 0x400000
    b2e0:	bcs	b43c <__snprintf_chk@plt+0x9ebc>
    b2e4:	cmp	ip, #-2147483648	; 0x80000000
    b2e8:	lsrseq	ip, r0, #1
    b2ec:	adcs	r0, r0, #0
    b2f0:	adc	r1, r1, r4, lsl #20
    b2f4:	orr	r1, r1, r5
    b2f8:	pop	{r4, r5, pc}
    b2fc:	lsls	ip, ip, #1
    b300:	adcs	r0, r0, r0
    b304:	adc	r1, r1, r1
    b308:	tst	r1, #1048576	; 0x100000
    b30c:	sub	r4, r4, #1
    b310:	bne	b2e4 <__snprintf_chk@plt+0x9d64>
    b314:	teq	r1, #0
    b318:	moveq	r1, r0
    b31c:	moveq	r0, #0
    b320:	clz	r3, r1
    b324:	addeq	r3, r3, #32
    b328:	sub	r3, r3, #11
    b32c:	subs	r2, r3, #32
    b330:	bge	b354 <__snprintf_chk@plt+0x9dd4>
    b334:	adds	r2, r2, #12
    b338:	ble	b350 <__snprintf_chk@plt+0x9dd0>
    b33c:	add	ip, r2, #20
    b340:	rsb	r2, r2, #12
    b344:	lsl	r0, r1, ip
    b348:	lsr	r1, r1, r2
    b34c:	b	b364 <__snprintf_chk@plt+0x9de4>
    b350:	add	r2, r2, #20
    b354:	rsble	ip, r2, #32
    b358:	lsl	r1, r1, r2
    b35c:	orrle	r1, r1, r0, lsr ip
    b360:	lslle	r0, r0, r2
    b364:	subs	r4, r4, r3
    b368:	addge	r1, r1, r4, lsl #20
    b36c:	orrge	r1, r1, r5
    b370:	popge	{r4, r5, pc}
    b374:	mvn	r4, r4
    b378:	subs	r4, r4, #31
    b37c:	bge	b3b8 <__snprintf_chk@plt+0x9e38>
    b380:	adds	r4, r4, #12
    b384:	bgt	b3a0 <__snprintf_chk@plt+0x9e20>
    b388:	add	r4, r4, #20
    b38c:	rsb	r2, r4, #32
    b390:	lsr	r0, r0, r4
    b394:	orr	r0, r0, r1, lsl r2
    b398:	orr	r1, r5, r1, lsr r4
    b39c:	pop	{r4, r5, pc}
    b3a0:	rsb	r4, r4, #12
    b3a4:	rsb	r2, r4, #32
    b3a8:	lsr	r0, r0, r2
    b3ac:	orr	r0, r0, r1, lsl r4
    b3b0:	mov	r1, r5
    b3b4:	pop	{r4, r5, pc}
    b3b8:	lsr	r0, r1, r4
    b3bc:	mov	r1, r5
    b3c0:	pop	{r4, r5, pc}
    b3c4:	teq	r4, #0
    b3c8:	eor	r3, r3, #1048576	; 0x100000
    b3cc:	eoreq	r1, r1, #1048576	; 0x100000
    b3d0:	addeq	r4, r4, #1
    b3d4:	subne	r5, r5, #1
    b3d8:	b	b264 <__snprintf_chk@plt+0x9ce4>
    b3dc:	mvns	ip, r4, asr #21
    b3e0:	mvnsne	ip, r5, asr #21
    b3e4:	beq	b44c <__snprintf_chk@plt+0x9ecc>
    b3e8:	teq	r4, r5
    b3ec:	teqeq	r0, r2
    b3f0:	beq	b404 <__snprintf_chk@plt+0x9e84>
    b3f4:	orrs	ip, r4, r0
    b3f8:	moveq	r1, r3
    b3fc:	moveq	r0, r2
    b400:	pop	{r4, r5, pc}
    b404:	teq	r1, r3
    b408:	movne	r1, #0
    b40c:	movne	r0, #0
    b410:	popne	{r4, r5, pc}
    b414:	lsrs	ip, r4, #21
    b418:	bne	b42c <__snprintf_chk@plt+0x9eac>
    b41c:	lsls	r0, r0, #1
    b420:	adcs	r1, r1, r1
    b424:	orrcs	r1, r1, #-2147483648	; 0x80000000
    b428:	pop	{r4, r5, pc}
    b42c:	adds	r4, r4, #4194304	; 0x400000
    b430:	addcc	r1, r1, #1048576	; 0x100000
    b434:	popcc	{r4, r5, pc}
    b438:	and	r5, r1, #-2147483648	; 0x80000000
    b43c:	orr	r1, r5, #2130706432	; 0x7f000000
    b440:	orr	r1, r1, #15728640	; 0xf00000
    b444:	mov	r0, #0
    b448:	pop	{r4, r5, pc}
    b44c:	mvns	ip, r4, asr #21
    b450:	movne	r1, r3
    b454:	movne	r0, r2
    b458:	mvnseq	ip, r5, asr #21
    b45c:	movne	r3, r1
    b460:	movne	r2, r0
    b464:	orrs	r4, r0, r1, lsl #12
    b468:	orrseq	r5, r2, r3, lsl #12
    b46c:	teqeq	r1, r3
    b470:	orrne	r1, r1, #524288	; 0x80000
    b474:	pop	{r4, r5, pc}
    b478:	teq	r0, #0
    b47c:	moveq	r1, #0
    b480:	bxeq	lr
    b484:	push	{r4, r5, lr}
    b488:	mov	r4, #1024	; 0x400
    b48c:	add	r4, r4, #50	; 0x32
    b490:	mov	r5, #0
    b494:	mov	r1, #0
    b498:	b	b314 <__snprintf_chk@plt+0x9d94>
    b49c:	teq	r0, #0
    b4a0:	moveq	r1, #0
    b4a4:	bxeq	lr
    b4a8:	push	{r4, r5, lr}
    b4ac:	mov	r4, #1024	; 0x400
    b4b0:	add	r4, r4, #50	; 0x32
    b4b4:	ands	r5, r0, #-2147483648	; 0x80000000
    b4b8:	rsbmi	r0, r0, #0
    b4bc:	mov	r1, #0
    b4c0:	b	b314 <__snprintf_chk@plt+0x9d94>
    b4c4:	lsls	r2, r0, #1
    b4c8:	asr	r1, r2, #3
    b4cc:	rrx	r1, r1
    b4d0:	lsl	r0, r2, #28
    b4d4:	andsne	r3, r2, #-16777216	; 0xff000000
    b4d8:	teqne	r3, #-16777216	; 0xff000000
    b4dc:	eorne	r1, r1, #939524096	; 0x38000000
    b4e0:	bxne	lr
    b4e4:	teq	r2, #0
    b4e8:	teqne	r3, #-16777216	; 0xff000000
    b4ec:	bxeq	lr
    b4f0:	push	{r4, r5, lr}
    b4f4:	mov	r4, #896	; 0x380
    b4f8:	and	r5, r1, #-2147483648	; 0x80000000
    b4fc:	bic	r1, r1, #-2147483648	; 0x80000000
    b500:	b	b314 <__snprintf_chk@plt+0x9d94>
    b504:	orrs	r2, r0, r1
    b508:	bxeq	lr
    b50c:	push	{r4, r5, lr}
    b510:	mov	r5, #0
    b514:	b	b534 <__snprintf_chk@plt+0x9fb4>
    b518:	orrs	r2, r0, r1
    b51c:	bxeq	lr
    b520:	push	{r4, r5, lr}
    b524:	ands	r5, r1, #-2147483648	; 0x80000000
    b528:	bpl	b534 <__snprintf_chk@plt+0x9fb4>
    b52c:	rsbs	r0, r0, #0
    b530:	rsc	r1, r1, #0
    b534:	mov	r4, #1024	; 0x400
    b538:	add	r4, r4, #50	; 0x32
    b53c:	lsrs	ip, r1, #22
    b540:	beq	b2b8 <__snprintf_chk@plt+0x9d38>
    b544:	mov	r2, #3
    b548:	lsrs	ip, ip, #3
    b54c:	addne	r2, r2, #3
    b550:	lsrs	ip, ip, #3
    b554:	addne	r2, r2, #3
    b558:	add	r2, r2, ip, lsr #3
    b55c:	rsb	r3, r2, #32
    b560:	lsl	ip, r0, r3
    b564:	lsr	r0, r0, r2
    b568:	orr	r0, r0, r1, lsl r3
    b56c:	lsr	r1, r1, r2
    b570:	add	r4, r4, r2
    b574:	b	b2b8 <__snprintf_chk@plt+0x9d38>
    b578:	cmp	r3, #0
    b57c:	cmpeq	r2, #0
    b580:	bne	b5a4 <__snprintf_chk@plt+0xa024>
    b584:	cmp	r1, #0
    b588:	movlt	r1, #-2147483648	; 0x80000000
    b58c:	movlt	r0, #0
    b590:	blt	b5a0 <__snprintf_chk@plt+0xa020>
    b594:	cmpeq	r0, #0
    b598:	mvnne	r1, #-2147483648	; 0x80000000
    b59c:	mvnne	r0, #0
    b5a0:	b	b5fc <__snprintf_chk@plt+0xa07c>
    b5a4:	sub	sp, sp, #8
    b5a8:	push	{sp, lr}
    b5ac:	bl	b658 <__snprintf_chk@plt+0xa0d8>
    b5b0:	ldr	lr, [sp, #4]
    b5b4:	add	sp, sp, #8
    b5b8:	pop	{r2, r3}
    b5bc:	bx	lr
    b5c0:	cmp	r3, #0
    b5c4:	cmpeq	r2, #0
    b5c8:	bne	b5e0 <__snprintf_chk@plt+0xa060>
    b5cc:	cmp	r1, #0
    b5d0:	cmpeq	r0, #0
    b5d4:	mvnne	r1, #0
    b5d8:	mvnne	r0, #0
    b5dc:	b	b5fc <__snprintf_chk@plt+0xa07c>
    b5e0:	sub	sp, sp, #8
    b5e4:	push	{sp, lr}
    b5e8:	bl	b694 <__snprintf_chk@plt+0xa114>
    b5ec:	ldr	lr, [sp, #4]
    b5f0:	add	sp, sp, #8
    b5f4:	pop	{r2, r3}
    b5f8:	bx	lr
    b5fc:	push	{r1, lr}
    b600:	mov	r0, #8
    b604:	bl	11fc <raise@plt>
    b608:	pop	{r1, pc}
    b60c:	andeq	r0, r0, r0
    b610:	vmov	d7, r0, r1
    b614:	vldr	d5, [pc, #44]	; b648 <__snprintf_chk@plt+0xa0c8>
    b618:	vldr	d6, [pc, #48]	; b650 <__snprintf_chk@plt+0xa0d0>
    b61c:	mov	r0, #0
    b620:	vmul.f64	d5, d7, d5
    b624:	vcvt.u32.f64	s9, d5
    b628:	vcvt.f64.u32	d5, s9
    b62c:	vmov	r1, s9
    b630:	vmls.f64	d7, d5, d6
    b634:	vcvt.u32.f64	s14, d7
    b638:	vmov	r3, s14
    b63c:	orr	r0, r0, r3
    b640:	bx	lr
    b644:	nop	{0}
    b648:	andeq	r0, r0, r0
    b64c:	ldclcc	0, cr0, [r0]
    b650:	andeq	r0, r0, r0
    b654:	mvnsmi	r0, r0
    b658:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b65c:	mov	r8, r2
    b660:	mov	r6, r0
    b664:	mov	r7, r1
    b668:	mov	sl, r3
    b66c:	ldr	r9, [sp, #32]
    b670:	bl	b6d0 <__snprintf_chk@plt+0xa150>
    b674:	umull	r4, r5, r8, r0
    b678:	mul	r8, r8, r1
    b67c:	mla	r2, r0, sl, r8
    b680:	add	r5, r2, r5
    b684:	subs	r4, r6, r4
    b688:	sbc	r5, r7, r5
    b68c:	strd	r4, [r9]
    b690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b694:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    b698:	mov	r8, r2
    b69c:	mov	r6, r0
    b6a0:	mov	r7, r1
    b6a4:	mov	r5, r3
    b6a8:	ldr	r9, [sp, #32]
    b6ac:	bl	bb5c <__snprintf_chk@plt+0xa5dc>
    b6b0:	mul	r3, r0, r5
    b6b4:	umull	r4, r5, r0, r8
    b6b8:	mla	r8, r8, r1, r3
    b6bc:	add	r5, r8, r5
    b6c0:	subs	r4, r6, r4
    b6c4:	sbc	r5, r7, r5
    b6c8:	strd	r4, [r9]
    b6cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    b6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6d4:	rsbs	r4, r0, #0
    b6d8:	rsc	r5, r1, #0
    b6dc:	cmp	r1, #0
    b6e0:	mvn	r6, #0
    b6e4:	sub	sp, sp, #12
    b6e8:	movge	r4, r0
    b6ec:	movge	r5, r1
    b6f0:	movge	r6, #0
    b6f4:	cmp	r3, #0
    b6f8:	blt	b930 <__snprintf_chk@plt+0xa3b0>
    b6fc:	cmp	r3, #0
    b700:	mov	sl, r4
    b704:	mov	ip, r5
    b708:	mov	r0, r2
    b70c:	mov	r1, r3
    b710:	mov	r8, r2
    b714:	mov	r7, r4
    b718:	mov	r9, r5
    b71c:	bne	b814 <__snprintf_chk@plt+0xa294>
    b720:	cmp	r2, r5
    b724:	bls	b850 <__snprintf_chk@plt+0xa2d0>
    b728:	clz	r3, r2
    b72c:	cmp	r3, #0
    b730:	rsbne	r2, r3, #32
    b734:	lslne	r8, r0, r3
    b738:	lsrne	r2, r4, r2
    b73c:	lslne	r7, r4, r3
    b740:	orrne	r9, r2, r5, lsl r3
    b744:	lsr	r4, r8, #16
    b748:	uxth	sl, r8
    b74c:	mov	r1, r4
    b750:	mov	r0, r9
    b754:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b758:	mov	r1, r4
    b75c:	mov	fp, r0
    b760:	mov	r0, r9
    b764:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b768:	mul	r0, sl, fp
    b76c:	lsr	r2, r7, #16
    b770:	orr	r1, r2, r1, lsl #16
    b774:	cmp	r0, r1
    b778:	bls	b79c <__snprintf_chk@plt+0xa21c>
    b77c:	adds	r1, r1, r8
    b780:	sub	r3, fp, #1
    b784:	bcs	b798 <__snprintf_chk@plt+0xa218>
    b788:	cmp	r0, r1
    b78c:	subhi	fp, fp, #2
    b790:	addhi	r1, r1, r8
    b794:	bhi	b79c <__snprintf_chk@plt+0xa21c>
    b798:	mov	fp, r3
    b79c:	rsb	r9, r0, r1
    b7a0:	mov	r1, r4
    b7a4:	uxth	r7, r7
    b7a8:	mov	r0, r9
    b7ac:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b7b0:	mov	r1, r4
    b7b4:	mov	r5, r0
    b7b8:	mov	r0, r9
    b7bc:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b7c0:	mul	sl, sl, r5
    b7c4:	orr	r1, r7, r1, lsl #16
    b7c8:	cmp	sl, r1
    b7cc:	bls	b7ec <__snprintf_chk@plt+0xa26c>
    b7d0:	adds	r8, r1, r8
    b7d4:	sub	r3, r5, #1
    b7d8:	bcs	b7e8 <__snprintf_chk@plt+0xa268>
    b7dc:	cmp	sl, r8
    b7e0:	subhi	r5, r5, #2
    b7e4:	bhi	b7ec <__snprintf_chk@plt+0xa26c>
    b7e8:	mov	r5, r3
    b7ec:	orr	r3, r5, fp, lsl #16
    b7f0:	mov	r4, #0
    b7f4:	cmp	r6, #0
    b7f8:	mov	r0, r3
    b7fc:	mov	r1, r4
    b800:	beq	b80c <__snprintf_chk@plt+0xa28c>
    b804:	rsbs	r0, r0, #0
    b808:	rsc	r1, r1, #0
    b80c:	add	sp, sp, #12
    b810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b814:	cmp	r3, r5
    b818:	movhi	r4, #0
    b81c:	movhi	r3, r4
    b820:	bhi	b7f4 <__snprintf_chk@plt+0xa274>
    b824:	clz	r5, r1
    b828:	cmp	r5, #0
    b82c:	bne	ba1c <__snprintf_chk@plt+0xa49c>
    b830:	cmp	r1, ip
    b834:	cmpcs	r2, sl
    b838:	movhi	r4, #0
    b83c:	movls	r4, #1
    b840:	movls	r3, #1
    b844:	movls	r4, r5
    b848:	movhi	r3, r4
    b84c:	b	b7f4 <__snprintf_chk@plt+0xa274>
    b850:	cmp	r2, #0
    b854:	bne	b868 <__snprintf_chk@plt+0xa2e8>
    b858:	mov	r1, r2
    b85c:	mov	r0, #1
    b860:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b864:	mov	r8, r0
    b868:	clz	r3, r8
    b86c:	cmp	r3, #0
    b870:	bne	b940 <__snprintf_chk@plt+0xa3c0>
    b874:	rsb	r9, r8, r9
    b878:	lsr	r5, r8, #16
    b87c:	uxth	sl, r8
    b880:	mov	r4, #1
    b884:	mov	r1, r5
    b888:	mov	r0, r9
    b88c:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b890:	mov	r1, r5
    b894:	mov	fp, r0
    b898:	mov	r0, r9
    b89c:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b8a0:	mul	r0, sl, fp
    b8a4:	lsr	r2, r7, #16
    b8a8:	orr	r1, r2, r1, lsl #16
    b8ac:	cmp	r0, r1
    b8b0:	bls	b8d0 <__snprintf_chk@plt+0xa350>
    b8b4:	adds	r1, r1, r8
    b8b8:	sub	r3, fp, #1
    b8bc:	bcs	bb3c <__snprintf_chk@plt+0xa5bc>
    b8c0:	cmp	r0, r1
    b8c4:	subhi	fp, fp, #2
    b8c8:	addhi	r1, r1, r8
    b8cc:	bls	bb3c <__snprintf_chk@plt+0xa5bc>
    b8d0:	rsb	r2, r0, r1
    b8d4:	mov	r1, r5
    b8d8:	str	r2, [sp]
    b8dc:	uxth	r7, r7
    b8e0:	mov	r0, r2
    b8e4:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b8e8:	ldr	r2, [sp]
    b8ec:	mov	r1, r5
    b8f0:	mov	r9, r0
    b8f4:	mov	r0, r2
    b8f8:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b8fc:	mul	sl, sl, r9
    b900:	orr	r1, r7, r1, lsl #16
    b904:	cmp	sl, r1
    b908:	bls	b928 <__snprintf_chk@plt+0xa3a8>
    b90c:	adds	r8, r1, r8
    b910:	sub	r3, r9, #1
    b914:	bcs	b924 <__snprintf_chk@plt+0xa3a4>
    b918:	cmp	sl, r8
    b91c:	subhi	r9, r9, #2
    b920:	bhi	b928 <__snprintf_chk@plt+0xa3a8>
    b924:	mov	r9, r3
    b928:	orr	r3, r9, fp, lsl #16
    b92c:	b	b7f4 <__snprintf_chk@plt+0xa274>
    b930:	mvn	r6, r6
    b934:	rsbs	r2, r2, #0
    b938:	rsc	r3, r3, #0
    b93c:	b	b6fc <__snprintf_chk@plt+0xa17c>
    b940:	lsl	r8, r8, r3
    b944:	rsb	fp, r3, #32
    b948:	lsr	r4, r9, fp
    b94c:	lsr	fp, r7, fp
    b950:	lsr	r5, r8, #16
    b954:	orr	fp, fp, r9, lsl r3
    b958:	mov	r0, r4
    b95c:	lsl	r7, r7, r3
    b960:	mov	r1, r5
    b964:	uxth	sl, r8
    b968:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b96c:	mov	r1, r5
    b970:	mov	r3, r0
    b974:	mov	r0, r4
    b978:	str	r3, [sp]
    b97c:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b980:	ldr	r3, [sp]
    b984:	lsr	r2, fp, #16
    b988:	mul	r0, sl, r3
    b98c:	orr	r1, r2, r1, lsl #16
    b990:	cmp	r0, r1
    b994:	bls	b9b4 <__snprintf_chk@plt+0xa434>
    b998:	adds	r1, r1, r8
    b99c:	sub	r2, r3, #1
    b9a0:	bcs	bb54 <__snprintf_chk@plt+0xa5d4>
    b9a4:	cmp	r0, r1
    b9a8:	subhi	r3, r3, #2
    b9ac:	addhi	r1, r1, r8
    b9b0:	bls	bb54 <__snprintf_chk@plt+0xa5d4>
    b9b4:	rsb	r9, r0, r1
    b9b8:	mov	r1, r5
    b9bc:	str	r3, [sp]
    b9c0:	uxth	fp, fp
    b9c4:	mov	r0, r9
    b9c8:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    b9cc:	mov	r1, r5
    b9d0:	mov	r4, r0
    b9d4:	mov	r0, r9
    b9d8:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    b9dc:	mul	r9, sl, r4
    b9e0:	ldr	r3, [sp]
    b9e4:	orr	r1, fp, r1, lsl #16
    b9e8:	cmp	r9, r1
    b9ec:	bls	ba10 <__snprintf_chk@plt+0xa490>
    b9f0:	adds	r1, r1, r8
    b9f4:	sub	r2, r4, #1
    b9f8:	bcs	ba0c <__snprintf_chk@plt+0xa48c>
    b9fc:	cmp	r9, r1
    ba00:	subhi	r4, r4, #2
    ba04:	addhi	r1, r1, r8
    ba08:	bhi	ba10 <__snprintf_chk@plt+0xa490>
    ba0c:	mov	r4, r2
    ba10:	rsb	r9, r9, r1
    ba14:	orr	r4, r4, r3, lsl #16
    ba18:	b	b884 <__snprintf_chk@plt+0xa304>
    ba1c:	rsb	sl, r5, #32
    ba20:	lsl	r3, r2, r5
    ba24:	lsr	r0, r2, sl
    ba28:	lsr	r2, ip, sl
    ba2c:	orr	r4, r0, r1, lsl r5
    ba30:	lsr	sl, r7, sl
    ba34:	mov	r0, r2
    ba38:	orr	sl, sl, ip, lsl r5
    ba3c:	lsr	r9, r4, #16
    ba40:	str	r3, [sp, #4]
    ba44:	str	r2, [sp]
    ba48:	uxth	fp, r4
    ba4c:	mov	r1, r9
    ba50:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    ba54:	ldr	r2, [sp]
    ba58:	mov	r1, r9
    ba5c:	mov	r8, r0
    ba60:	mov	r0, r2
    ba64:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    ba68:	mul	r0, fp, r8
    ba6c:	lsr	r2, sl, #16
    ba70:	orr	r1, r2, r1, lsl #16
    ba74:	cmp	r0, r1
    ba78:	bls	ba98 <__snprintf_chk@plt+0xa518>
    ba7c:	adds	r1, r1, r4
    ba80:	sub	r2, r8, #1
    ba84:	bcs	bb4c <__snprintf_chk@plt+0xa5cc>
    ba88:	cmp	r0, r1
    ba8c:	subhi	r8, r8, #2
    ba90:	addhi	r1, r1, r4
    ba94:	bls	bb4c <__snprintf_chk@plt+0xa5cc>
    ba98:	rsb	ip, r0, r1
    ba9c:	mov	r1, r9
    baa0:	str	ip, [sp]
    baa4:	mov	r0, ip
    baa8:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    baac:	ldr	ip, [sp]
    bab0:	mov	r1, r9
    bab4:	mov	r2, r0
    bab8:	mov	r0, ip
    babc:	str	r2, [sp]
    bac0:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bac4:	ldr	r2, [sp]
    bac8:	uxth	ip, sl
    bacc:	mul	fp, fp, r2
    bad0:	orr	ip, ip, r1, lsl #16
    bad4:	cmp	fp, ip
    bad8:	bls	baf8 <__snprintf_chk@plt+0xa578>
    badc:	adds	ip, ip, r4
    bae0:	sub	r1, r2, #1
    bae4:	bcs	bb44 <__snprintf_chk@plt+0xa5c4>
    bae8:	cmp	fp, ip
    baec:	subhi	r2, r2, #2
    baf0:	addhi	ip, ip, r4
    baf4:	bls	bb44 <__snprintf_chk@plt+0xa5c4>
    baf8:	ldr	r0, [sp, #4]
    bafc:	orr	r1, r2, r8, lsl #16
    bb00:	rsb	fp, fp, ip
    bb04:	umull	r2, r3, r1, r0
    bb08:	cmp	fp, r3
    bb0c:	bcc	bb30 <__snprintf_chk@plt+0xa5b0>
    bb10:	movne	r4, #0
    bb14:	moveq	r4, #1
    bb18:	cmp	r2, r7, lsl r5
    bb1c:	movls	r4, #0
    bb20:	andhi	r4, r4, #1
    bb24:	cmp	r4, #0
    bb28:	moveq	r3, r1
    bb2c:	beq	b7f4 <__snprintf_chk@plt+0xa274>
    bb30:	sub	r3, r1, #1
    bb34:	mov	r4, #0
    bb38:	b	b7f4 <__snprintf_chk@plt+0xa274>
    bb3c:	mov	fp, r3
    bb40:	b	b8d0 <__snprintf_chk@plt+0xa350>
    bb44:	mov	r2, r1
    bb48:	b	baf8 <__snprintf_chk@plt+0xa578>
    bb4c:	mov	r8, r2
    bb50:	b	ba98 <__snprintf_chk@plt+0xa518>
    bb54:	mov	r3, r2
    bb58:	b	b9b4 <__snprintf_chk@plt+0xa434>
    bb5c:	cmp	r3, #0
    bb60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb64:	mov	r6, r0
    bb68:	sub	sp, sp, #12
    bb6c:	mov	r5, r1
    bb70:	mov	r7, r0
    bb74:	mov	r4, r2
    bb78:	mov	r8, r1
    bb7c:	bne	bc5c <__snprintf_chk@plt+0xa6dc>
    bb80:	cmp	r2, r1
    bb84:	bls	bc98 <__snprintf_chk@plt+0xa718>
    bb88:	clz	r3, r2
    bb8c:	cmp	r3, #0
    bb90:	rsbne	r8, r3, #32
    bb94:	lslne	r4, r2, r3
    bb98:	lsrne	r8, r0, r8
    bb9c:	lslne	r7, r0, r3
    bba0:	orrne	r8, r8, r1, lsl r3
    bba4:	lsr	r5, r4, #16
    bba8:	uxth	sl, r4
    bbac:	mov	r1, r5
    bbb0:	mov	r0, r8
    bbb4:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bbb8:	mov	r1, r5
    bbbc:	mov	r9, r0
    bbc0:	mov	r0, r8
    bbc4:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bbc8:	mul	r0, sl, r9
    bbcc:	lsr	r3, r7, #16
    bbd0:	orr	r1, r3, r1, lsl #16
    bbd4:	cmp	r0, r1
    bbd8:	bls	bbfc <__snprintf_chk@plt+0xa67c>
    bbdc:	adds	r1, r1, r4
    bbe0:	sub	r2, r9, #1
    bbe4:	bcs	bbf8 <__snprintf_chk@plt+0xa678>
    bbe8:	cmp	r0, r1
    bbec:	subhi	r9, r9, #2
    bbf0:	addhi	r1, r1, r4
    bbf4:	bhi	bbfc <__snprintf_chk@plt+0xa67c>
    bbf8:	mov	r9, r2
    bbfc:	rsb	r8, r0, r1
    bc00:	mov	r1, r5
    bc04:	uxth	r7, r7
    bc08:	mov	r0, r8
    bc0c:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bc10:	mov	r1, r5
    bc14:	mov	r6, r0
    bc18:	mov	r0, r8
    bc1c:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bc20:	mul	sl, sl, r6
    bc24:	orr	r1, r7, r1, lsl #16
    bc28:	cmp	sl, r1
    bc2c:	bls	bc48 <__snprintf_chk@plt+0xa6c8>
    bc30:	adds	r4, r1, r4
    bc34:	sub	r3, r6, #1
    bc38:	bcs	bf44 <__snprintf_chk@plt+0xa9c4>
    bc3c:	cmp	sl, r4
    bc40:	subhi	r6, r6, #2
    bc44:	bls	bf44 <__snprintf_chk@plt+0xa9c4>
    bc48:	orr	r0, r6, r9, lsl #16
    bc4c:	mov	r6, #0
    bc50:	mov	r1, r6
    bc54:	add	sp, sp, #12
    bc58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc5c:	cmp	r3, r1
    bc60:	movhi	r6, #0
    bc64:	movhi	r0, r6
    bc68:	bhi	bc50 <__snprintf_chk@plt+0xa6d0>
    bc6c:	clz	r7, r3
    bc70:	cmp	r7, #0
    bc74:	bne	bd74 <__snprintf_chk@plt+0xa7f4>
    bc78:	cmp	r3, r1
    bc7c:	cmpcs	r2, r6
    bc80:	movhi	r6, #0
    bc84:	movls	r6, #1
    bc88:	movls	r0, #1
    bc8c:	movls	r6, r7
    bc90:	movhi	r0, r6
    bc94:	b	bc50 <__snprintf_chk@plt+0xa6d0>
    bc98:	cmp	r2, #0
    bc9c:	bne	bcb0 <__snprintf_chk@plt+0xa730>
    bca0:	mov	r1, r2
    bca4:	mov	r0, #1
    bca8:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bcac:	mov	r4, r0
    bcb0:	clz	r3, r4
    bcb4:	cmp	r3, #0
    bcb8:	bne	be70 <__snprintf_chk@plt+0xa8f0>
    bcbc:	rsb	r5, r4, r5
    bcc0:	lsr	r8, r4, #16
    bcc4:	uxth	sl, r4
    bcc8:	mov	r6, #1
    bccc:	mov	r1, r8
    bcd0:	mov	r0, r5
    bcd4:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bcd8:	mov	r1, r8
    bcdc:	mov	r9, r0
    bce0:	mov	r0, r5
    bce4:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bce8:	mul	r0, sl, r9
    bcec:	lsr	r3, r7, #16
    bcf0:	orr	r1, r3, r1, lsl #16
    bcf4:	cmp	r0, r1
    bcf8:	bls	bd18 <__snprintf_chk@plt+0xa798>
    bcfc:	adds	r1, r1, r4
    bd00:	sub	r2, r9, #1
    bd04:	bcs	bf4c <__snprintf_chk@plt+0xa9cc>
    bd08:	cmp	r0, r1
    bd0c:	subhi	r9, r9, #2
    bd10:	addhi	r1, r1, r4
    bd14:	bls	bf4c <__snprintf_chk@plt+0xa9cc>
    bd18:	rsb	fp, r0, r1
    bd1c:	mov	r1, r8
    bd20:	uxth	r7, r7
    bd24:	mov	r0, fp
    bd28:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bd2c:	mov	r1, r8
    bd30:	mov	r5, r0
    bd34:	mov	r0, fp
    bd38:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bd3c:	mul	sl, sl, r5
    bd40:	orr	r1, r7, r1, lsl #16
    bd44:	cmp	sl, r1
    bd48:	bls	bd64 <__snprintf_chk@plt+0xa7e4>
    bd4c:	adds	r4, r1, r4
    bd50:	sub	r3, r5, #1
    bd54:	bcs	bf54 <__snprintf_chk@plt+0xa9d4>
    bd58:	cmp	sl, r4
    bd5c:	subhi	r5, r5, #2
    bd60:	bls	bf54 <__snprintf_chk@plt+0xa9d4>
    bd64:	orr	r0, r5, r9, lsl #16
    bd68:	mov	r1, r6
    bd6c:	add	sp, sp, #12
    bd70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd74:	rsb	r1, r7, #32
    bd78:	lsl	r0, r2, r7
    bd7c:	lsr	r2, r2, r1
    bd80:	lsr	fp, r5, r1
    bd84:	orr	r8, r2, r3, lsl r7
    bd88:	lsr	r1, r6, r1
    bd8c:	str	r0, [sp, #4]
    bd90:	orr	r5, r1, r5, lsl r7
    bd94:	lsr	r9, r8, #16
    bd98:	mov	r0, fp
    bd9c:	uxth	sl, r8
    bda0:	mov	r1, r9
    bda4:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bda8:	mov	r1, r9
    bdac:	mov	r4, r0
    bdb0:	mov	r0, fp
    bdb4:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bdb8:	mul	r0, sl, r4
    bdbc:	lsr	ip, r5, #16
    bdc0:	orr	r1, ip, r1, lsl #16
    bdc4:	cmp	r0, r1
    bdc8:	bls	bddc <__snprintf_chk@plt+0xa85c>
    bdcc:	adds	r1, r1, r8
    bdd0:	sub	r2, r4, #1
    bdd4:	bcc	bf70 <__snprintf_chk@plt+0xa9f0>
    bdd8:	mov	r4, r2
    bddc:	rsb	ip, r0, r1
    bde0:	mov	r1, r9
    bde4:	str	ip, [sp]
    bde8:	uxth	r5, r5
    bdec:	mov	r0, ip
    bdf0:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bdf4:	ldr	ip, [sp]
    bdf8:	mov	r1, r9
    bdfc:	mov	fp, r0
    be00:	mov	r0, ip
    be04:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    be08:	mul	sl, sl, fp
    be0c:	orr	r1, r5, r1, lsl #16
    be10:	cmp	sl, r1
    be14:	bls	be28 <__snprintf_chk@plt+0xa8a8>
    be18:	adds	r1, r1, r8
    be1c:	sub	r2, fp, #1
    be20:	bcc	bf5c <__snprintf_chk@plt+0xa9dc>
    be24:	mov	fp, r2
    be28:	ldr	r3, [sp, #4]
    be2c:	orr	r0, fp, r4, lsl #16
    be30:	rsb	sl, sl, r1
    be34:	umull	r4, r5, r0, r3
    be38:	cmp	sl, r5
    be3c:	bcc	be5c <__snprintf_chk@plt+0xa8dc>
    be40:	movne	r3, #0
    be44:	moveq	r3, #1
    be48:	cmp	r4, r6, lsl r7
    be4c:	movls	r6, #0
    be50:	andhi	r6, r3, #1
    be54:	cmp	r6, #0
    be58:	beq	bc50 <__snprintf_chk@plt+0xa6d0>
    be5c:	mov	r6, #0
    be60:	sub	r0, r0, #1
    be64:	mov	r1, r6
    be68:	add	sp, sp, #12
    be6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be70:	lsl	r4, r4, r3
    be74:	rsb	r9, r3, #32
    be78:	lsr	r2, r5, r9
    be7c:	lsr	r9, r6, r9
    be80:	lsr	r8, r4, #16
    be84:	orr	r9, r9, r5, lsl r3
    be88:	mov	r0, r2
    be8c:	lsl	r7, r6, r3
    be90:	mov	r1, r8
    be94:	str	r2, [sp]
    be98:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    be9c:	ldr	r2, [sp]
    bea0:	mov	r1, r8
    bea4:	uxth	sl, r4
    bea8:	mov	fp, r0
    beac:	mov	r0, r2
    beb0:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    beb4:	mul	r0, sl, fp
    beb8:	lsr	r3, r9, #16
    bebc:	orr	r1, r3, r1, lsl #16
    bec0:	cmp	r0, r1
    bec4:	bls	bee4 <__snprintf_chk@plt+0xa964>
    bec8:	adds	r1, r1, r4
    becc:	sub	r3, fp, #1
    bed0:	bcs	bf84 <__snprintf_chk@plt+0xaa04>
    bed4:	cmp	r0, r1
    bed8:	subhi	fp, fp, #2
    bedc:	addhi	r1, r1, r4
    bee0:	bls	bf84 <__snprintf_chk@plt+0xaa04>
    bee4:	rsb	r5, r0, r1
    bee8:	mov	r1, r8
    beec:	uxth	r9, r9
    bef0:	mov	r0, r5
    bef4:	bl	afb4 <__snprintf_chk@plt+0x9a34>
    bef8:	mov	r1, r8
    befc:	mov	r6, r0
    bf00:	mov	r0, r5
    bf04:	bl	b1a0 <__snprintf_chk@plt+0x9c20>
    bf08:	mul	r5, sl, r6
    bf0c:	orr	r1, r9, r1, lsl #16
    bf10:	cmp	r5, r1
    bf14:	bls	bf38 <__snprintf_chk@plt+0xa9b8>
    bf18:	adds	r1, r1, r4
    bf1c:	sub	r3, r6, #1
    bf20:	bcs	bf34 <__snprintf_chk@plt+0xa9b4>
    bf24:	cmp	r5, r1
    bf28:	subhi	r6, r6, #2
    bf2c:	addhi	r1, r1, r4
    bf30:	bhi	bf38 <__snprintf_chk@plt+0xa9b8>
    bf34:	mov	r6, r3
    bf38:	rsb	r5, r5, r1
    bf3c:	orr	r6, r6, fp, lsl #16
    bf40:	b	bccc <__snprintf_chk@plt+0xa74c>
    bf44:	mov	r6, r3
    bf48:	b	bc48 <__snprintf_chk@plt+0xa6c8>
    bf4c:	mov	r9, r2
    bf50:	b	bd18 <__snprintf_chk@plt+0xa798>
    bf54:	mov	r5, r3
    bf58:	b	bd64 <__snprintf_chk@plt+0xa7e4>
    bf5c:	cmp	sl, r1
    bf60:	subhi	fp, fp, #2
    bf64:	addhi	r1, r1, r8
    bf68:	bhi	be28 <__snprintf_chk@plt+0xa8a8>
    bf6c:	b	be24 <__snprintf_chk@plt+0xa8a4>
    bf70:	cmp	r0, r1
    bf74:	subhi	r4, r4, #2
    bf78:	addhi	r1, r1, r8
    bf7c:	bhi	bddc <__snprintf_chk@plt+0xa85c>
    bf80:	b	bdd8 <__snprintf_chk@plt+0xa858>
    bf84:	mov	fp, r3
    bf88:	b	bee4 <__snprintf_chk@plt+0xa964>

0000bf8c <__libc_csu_init@@Base>:
    bf8c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    bf90:	mov	r7, r0
    bf94:	ldr	r6, [pc, #76]	; bfe8 <__libc_csu_init@@Base+0x5c>
    bf98:	mov	r8, r1
    bf9c:	ldr	r5, [pc, #72]	; bfec <__libc_csu_init@@Base+0x60>
    bfa0:	mov	r9, r2
    bfa4:	add	r6, pc, r6
    bfa8:	bl	11d0 <calloc@plt-0x20>
    bfac:	add	r5, pc, r5
    bfb0:	rsb	r6, r5, r6
    bfb4:	asrs	r6, r6, #2
    bfb8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    bfbc:	sub	r5, r5, #4
    bfc0:	mov	r4, #0
    bfc4:	add	r4, r4, #1
    bfc8:	ldr	r3, [r5, #4]!
    bfcc:	mov	r0, r7
    bfd0:	mov	r1, r8
    bfd4:	mov	r2, r9
    bfd8:	blx	r3
    bfdc:	cmp	r4, r6
    bfe0:	bne	bfc4 <__libc_csu_init@@Base+0x38>
    bfe4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    bfe8:	andeq	r4, r1, r0, asr #25
    bfec:			; <UNDEFINED> instruction: 0x00014cb4

0000bff0 <__libc_csu_fini@@Base>:
    bff0:	bx	lr

Disassembly of section .fini:

0000bff4 <.fini>:
    bff4:	push	{r3, lr}
    bff8:	pop	{r3, pc}
