
centos-preinstalled/write:     file format elf32-littlearm


Disassembly of section .init:

00000cec <.init>:
 cec:	push	{r3, lr}
 cf0:	bl	1394 <main@@Base+0x3dc>
 cf4:	pop	{r3, pc}

Disassembly of section .plt:

00000cf8 <strcmp@plt-0x14>:
 cf8:	push	{lr}		; (str lr, [sp, #-4]!)
 cfc:	ldr	lr, [pc, #4]	; d08 <strcmp@plt-0x4>
 d00:	add	lr, pc, lr
 d04:	ldr	pc, [lr, #8]!
 d08:	ldrdeq	r2, [r1], -r0

00000d0c <strcmp@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #73728	; 0x12000
 d14:	ldr	pc, [ip, #464]!	; 0x1d0

00000d18 <__cxa_finalize@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #73728	; 0x12000
 d20:	ldr	pc, [ip, #456]!	; 0x1c8

00000d24 <getlogin@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #73728	; 0x12000
 d2c:	ldr	pc, [ip, #448]!	; 0x1c0

00000d30 <getpwuid@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #440]!	; 0x1b8

00000d3c <endutent@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #432]!	; 0x1b0

00000d48 <getuid@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #424]!	; 0x1a8

00000d54 <free@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #416]!	; 0x1a0

00000d60 <fgets@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #408]!	; 0x198

00000d6c <ferror@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #400]!	; 0x190

00000d78 <_exit@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #392]!	; 0x188

00000d84 <memcpy@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #384]!	; 0x180

00000d90 <signal@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #376]!	; 0x178

00000d9c <time@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #368]!	; 0x170

00000da8 <ctime@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #360]!	; 0x168

00000db4 <dcgettext@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #352]!	; 0x160

00000dc0 <__stack_chk_fail@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #344]!	; 0x158

00000dcc <sysconf@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #336]!	; 0x150

00000dd8 <textdomain@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #328]!	; 0x148

00000de4 <err@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #320]!	; 0x140

00000df0 <getegid@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #312]!	; 0x138

00000dfc <_IO_putc@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #304]!	; 0x130

00000e08 <strcpy@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #296]!	; 0x128

00000e14 <__fpending@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #288]!	; 0x120

00000e20 <gethostname@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #280]!	; 0x118

00000e2c <puts@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #272]!	; 0x110

00000e38 <malloc@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #264]!	; 0x108

00000e44 <__libc_start_main@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #256]!	; 0x100

00000e50 <__gmon_start__@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #248]!	; 0xf8

00000e5c <freopen64@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #240]!	; 0xf0

00000e68 <getopt_long@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #232]!	; 0xe8

00000e74 <__ctype_b_loc@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #224]!	; 0xe0

00000e80 <exit@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #216]!	; 0xd8

00000e8c <ttyname@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #208]!	; 0xd0

00000e98 <strlen@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #200]!	; 0xc8

00000ea4 <warnx@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #192]!	; 0xc0

00000eb0 <__errno_location@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #184]!	; 0xb8

00000ebc <__sprintf_chk@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #73728	; 0x12000
 ec4:	ldr	pc, [ip, #176]!	; 0xb0

00000ec8 <__cxa_atexit@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #73728	; 0x12000
 ed0:	ldr	pc, [ip, #168]!	; 0xa8

00000ed4 <__strdup@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #73728	; 0x12000
 edc:	ldr	pc, [ip, #160]!	; 0xa0

00000ee0 <strncpy@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #73728	; 0x12000
 ee8:	ldr	pc, [ip, #152]!	; 0x98

00000eec <setutent@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #73728	; 0x12000
 ef4:	ldr	pc, [ip, #144]!	; 0x90

00000ef8 <getutent@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #73728	; 0x12000
 f00:	ldr	pc, [ip, #136]!	; 0x88

00000f04 <__printf_chk@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #73728	; 0x12000
 f0c:	ldr	pc, [ip, #128]!	; 0x80

00000f10 <fileno@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #73728	; 0x12000
 f18:	ldr	pc, [ip, #120]!	; 0x78

00000f1c <__fprintf_chk@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #73728	; 0x12000
 f24:	ldr	pc, [ip, #112]!	; 0x70

00000f28 <fclose@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #73728	; 0x12000
 f30:	ldr	pc, [ip, #104]!	; 0x68

00000f34 <setlocale@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #73728	; 0x12000
 f3c:	ldr	pc, [ip, #96]!	; 0x60

00000f40 <errx@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #73728	; 0x12000
 f48:	ldr	pc, [ip, #88]!	; 0x58

00000f4c <warn@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #73728	; 0x12000
 f54:	ldr	pc, [ip, #80]!	; 0x50

00000f58 <utmpname@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #73728	; 0x12000
 f60:	ldr	pc, [ip, #72]!	; 0x48

00000f64 <bindtextdomain@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #73728	; 0x12000
 f6c:	ldr	pc, [ip, #64]!	; 0x40

00000f70 <__xstat64@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #73728	; 0x12000
 f78:	ldr	pc, [ip, #56]!	; 0x38

00000f7c <isatty@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #73728	; 0x12000
 f84:	ldr	pc, [ip, #48]!	; 0x30

00000f88 <fputs@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #73728	; 0x12000
 f90:	ldr	pc, [ip, #40]!	; 0x28

00000f94 <strncmp@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #73728	; 0x12000
 f9c:	ldr	pc, [ip, #32]!

00000fa0 <abort@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #73728	; 0x12000
 fa8:	ldr	pc, [ip, #24]!

00000fac <__snprintf_chk@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #73728	; 0x12000
 fb4:	ldr	pc, [ip, #16]!

Disassembly of section .text:

00000fb8 <main@@Base>:
     fb8:	push	{r4, r5, r6, r7, r8, r9, lr}
     fbc:	sub	sp, sp, #4096	; 0x1000
     fc0:	ldr	r4, [pc, #796]	; 12e4 <main@@Base+0x32c>
     fc4:	sub	sp, sp, #28
     fc8:	ldr	r3, [pc, #792]	; 12e8 <main@@Base+0x330>
     fcc:	mov	r7, r1
     fd0:	add	r4, pc, r4
     fd4:	ldr	r1, [pc, #784]	; 12ec <main@@Base+0x334>
     fd8:	add	r2, sp, #8192	; 0x2000
     fdc:	ldr	r5, [pc, #780]	; 12f0 <main@@Base+0x338>
     fe0:	ldr	r8, [r4, r3]
     fe4:	mov	r9, r0
     fe8:	add	r1, pc, r1
     fec:	mov	r0, #6
     ff0:	add	r5, pc, r5
     ff4:	mov	r6, #0
     ff8:	ldr	r3, [r8]
     ffc:	str	r3, [r2, #-4076]	; 0xfffff014
    1000:	bl	f34 <setlocale@plt>
    1004:	ldr	r1, [pc, #744]	; 12f4 <main@@Base+0x33c>
    1008:	mov	r0, r5
    100c:	add	r1, pc, r1
    1010:	bl	f64 <bindtextdomain@plt>
    1014:	mov	r0, r5
    1018:	bl	dd8 <textdomain@plt>
    101c:	ldr	r0, [pc, #724]	; 12f8 <main@@Base+0x340>
    1020:	add	r0, pc, r0
    1024:	bl	2078 <__libc_csu_fini@@Base+0x4>
    1028:	ldr	r2, [pc, #716]	; 12fc <main@@Base+0x344>
    102c:	ldr	r3, [pc, #716]	; 1300 <main@@Base+0x348>
    1030:	mov	r0, r9
    1034:	mov	r1, r7
    1038:	str	r6, [sp]
    103c:	add	r2, pc, r2
    1040:	add	r3, pc, r3
    1044:	bl	e68 <getopt_long@plt>
    1048:	cmn	r0, #1
    104c:	beq	1070 <main@@Base+0xb8>
    1050:	cmp	r0, #86	; 0x56
    1054:	beq	1154 <main@@Base+0x19c>
    1058:	cmp	r0, #104	; 0x68
    105c:	bne	1144 <main@@Base+0x18c>
    1060:	ldr	r3, [pc, #668]	; 1304 <main@@Base+0x34c>
    1064:	ldr	r3, [r4, r3]
    1068:	ldr	r0, [r3]
    106c:	bl	1534 <main@@Base+0x57c>
    1070:	bl	df0 <getegid@plt>
    1074:	ldr	r2, [pc, #652]	; 1308 <main@@Base+0x350>
    1078:	ldr	r3, [pc, #652]	; 130c <main@@Base+0x354>
    107c:	add	r2, pc, r2
    1080:	str	r0, [r2]
    1084:	ldr	r5, [r4, r3]
    1088:	ldr	r0, [r5]
    108c:	bl	f10 <fileno@plt>
    1090:	bl	f7c <isatty@plt>
    1094:	cmp	r0, #0
    1098:	bne	10b8 <main@@Base+0x100>
    109c:	ldr	r3, [pc, #608]	; 1304 <main@@Base+0x34c>
    10a0:	ldr	r5, [r4, r3]
    10a4:	ldr	r0, [r5]
    10a8:	bl	f10 <fileno@plt>
    10ac:	bl	f7c <isatty@plt>
    10b0:	cmp	r0, #0
    10b4:	beq	1238 <main@@Base+0x280>
    10b8:	ldr	r0, [r5]
    10bc:	bl	f10 <fileno@plt>
    10c0:	cmn	r0, #1
    10c4:	beq	1254 <main@@Base+0x29c>
    10c8:	bl	e8c <ttyname@plt>
    10cc:	ldr	r1, [pc, #572]	; 1310 <main@@Base+0x358>
    10d0:	add	r1, pc, r1
    10d4:	subs	r5, r0, #0
    10d8:	beq	12b8 <main@@Base+0x300>
    10dc:	ldr	r1, [pc, #560]	; 1314 <main@@Base+0x35c>
    10e0:	mov	r2, #5
    10e4:	add	r1, pc, r1
    10e8:	bl	f94 <strncmp@plt>
    10ec:	add	r1, sp, #16
    10f0:	add	r2, sp, #12
    10f4:	mov	r3, #1
    10f8:	cmp	r0, #0
    10fc:	addeq	r5, r5, #5
    1100:	mov	r0, r5
    1104:	bl	1928 <main@@Base+0x970>
    1108:	cmp	r0, #0
    110c:	bne	12dc <main@@Base+0x324>
    1110:	add	r2, sp, #4096	; 0x1000
    1114:	movw	r3, #61432	; 0xeff8
    1118:	add	r2, r2, #24
    111c:	movt	r3, #65535	; 0xffff
    1120:	ldr	r3, [r2, r3]
    1124:	cmp	r3, #0
    1128:	beq	12b0 <main@@Base+0x2f8>
    112c:	bl	d48 <getuid@plt>
    1130:	cmp	r9, #2
    1134:	mov	r6, r0
    1138:	beq	1260 <main@@Base+0x2a8>
    113c:	cmp	r9, #3
    1140:	beq	11ac <main@@Base+0x1f4>
    1144:	ldr	r3, [pc, #460]	; 1318 <main@@Base+0x360>
    1148:	ldr	r3, [r4, r3]
    114c:	ldr	r0, [r3]
    1150:	bl	1534 <main@@Base+0x57c>
    1154:	ldr	r1, [pc, #448]	; 131c <main@@Base+0x364>
    1158:	mov	r2, #5
    115c:	mov	r0, r6
    1160:	add	r1, pc, r1
    1164:	bl	db4 <dcgettext@plt>
    1168:	ldr	r2, [pc, #432]	; 1320 <main@@Base+0x368>
    116c:	ldr	r3, [pc, #432]	; 1324 <main@@Base+0x36c>
    1170:	ldr	r2, [r4, r2]
    1174:	add	r3, pc, r3
    1178:	ldr	r2, [r2]
    117c:	mov	r1, r0
    1180:	mov	r0, #1
    1184:	bl	f04 <__printf_chk@plt>
    1188:	add	r3, sp, #8192	; 0x2000
    118c:	mov	r0, r6
    1190:	ldr	r2, [r3, #-4076]	; 0xfffff014
    1194:	ldr	r3, [r8]
    1198:	cmp	r2, r3
    119c:	bne	12ac <main@@Base+0x2f4>
    11a0:	add	sp, sp, #4096	; 0x1000
    11a4:	add	sp, sp, #28
    11a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    11ac:	ldr	r4, [r7, #8]
    11b0:	mov	r2, #5
    11b4:	ldr	r1, [pc, #364]	; 1328 <main@@Base+0x370>
    11b8:	mov	r0, r4
    11bc:	add	r1, pc, r1
    11c0:	bl	f94 <strncmp@plt>
    11c4:	cmp	r0, #0
    11c8:	addeq	r4, r4, #5
    11cc:	streq	r4, [r7, #8]
    11d0:	ldmib	r7, {r0, r1}
    11d4:	bl	1860 <main@@Base+0x8a8>
    11d8:	cmp	r0, #0
    11dc:	bne	12cc <main@@Base+0x314>
    11e0:	ldr	r0, [r7, #8]
    11e4:	add	r1, sp, #16
    11e8:	add	r2, sp, #12
    11ec:	mov	r3, #1
    11f0:	bl	1928 <main@@Base+0x970>
    11f4:	cmp	r0, #0
    11f8:	bne	12dc <main@@Base+0x324>
    11fc:	cmp	r6, #0
    1200:	beq	1220 <main@@Base+0x268>
    1204:	add	r2, sp, #4096	; 0x1000
    1208:	movw	r3, #61432	; 0xeff8
    120c:	add	r2, r2, #24
    1210:	movt	r3, #65535	; 0xffff
    1214:	ldr	r3, [r2, r3]
    1218:	cmp	r3, #0
    121c:	beq	128c <main@@Base+0x2d4>
    1220:	ldr	r0, [r7, #8]
    1224:	mov	r1, r5
    1228:	mov	r2, r6
    122c:	bl	1d0c <main@@Base+0xd54>
    1230:	mov	r0, #0
    1234:	bl	1518 <main@@Base+0x560>
    1238:	ldr	r3, [pc, #216]	; 1318 <main@@Base+0x360>
    123c:	ldr	r5, [r4, r3]
    1240:	ldr	r0, [r5]
    1244:	bl	f10 <fileno@plt>
    1248:	bl	f7c <isatty@plt>
    124c:	cmp	r0, #0
    1250:	bne	10b8 <main@@Base+0x100>
    1254:	ldr	r5, [pc, #208]	; 132c <main@@Base+0x374>
    1258:	add	r5, pc, r5
    125c:	b	112c <main@@Base+0x174>
    1260:	add	r4, sp, #20
    1264:	ldr	r0, [r7, #4]
    1268:	mov	r2, r5
    126c:	mov	r3, r6
    1270:	mov	r1, r4
    1274:	bl	196c <main@@Base+0x9b4>
    1278:	mov	r0, r4
    127c:	mov	r1, r5
    1280:	mov	r2, r6
    1284:	bl	1d0c <main@@Base+0xd54>
    1288:	b	1230 <main@@Base+0x278>
    128c:	ldr	r1, [pc, #156]	; 1330 <main@@Base+0x378>
    1290:	add	r1, pc, r1
    1294:	mov	r2, #5
    1298:	bl	db4 <dcgettext@plt>
    129c:	ldmib	r7, {r2, r3}
    12a0:	mov	r1, r0
    12a4:	mov	r0, #1
    12a8:	bl	f40 <errx@plt>
    12ac:	bl	dc0 <__stack_chk_fail@plt>
    12b0:	ldr	r1, [pc, #124]	; 1334 <main@@Base+0x37c>
    12b4:	add	r1, pc, r1
    12b8:	mov	r2, #5
    12bc:	bl	db4 <dcgettext@plt>
    12c0:	mov	r1, r0
    12c4:	mov	r0, #1
    12c8:	bl	f40 <errx@plt>
    12cc:	ldr	r1, [pc, #100]	; 1338 <main@@Base+0x380>
    12d0:	mov	r0, #0
    12d4:	add	r1, pc, r1
    12d8:	b	1294 <main@@Base+0x2dc>
    12dc:	mov	r0, #1
    12e0:	bl	e80 <exit@plt>
    12e4:	andeq	r1, r1, r0, lsl #30
    12e8:	strdeq	r0, [r0], -ip
    12ec:	andeq	r1, r0, r8, ror #2
    12f0:	andeq	r1, r0, r0, asr #5
    12f4:			; <UNDEFINED> instruction: 0x000012b0
    12f8:	andeq	r0, r0, r0, ror #13
    12fc:	muleq	r0, r4, r2
    1300:	andeq	r1, r1, r4, asr sp
    1304:	andeq	r0, r0, r4, lsl r1
    1308:	andeq	r1, r1, r4, lsl #31
    130c:	andeq	r0, r0, ip, lsl #2
    1310:	andeq	r1, r0, r4, lsr #4
    1314:	andeq	r1, r0, ip, lsr #4
    1318:	andeq	r0, r0, r0, lsl #2
    131c:	andeq	r1, r0, r4, ror r1
    1320:	andeq	r0, r0, r0, lsr #2
    1324:	andeq	r1, r0, ip, ror #2
    1328:	andeq	r1, r0, r4, asr r1
    132c:	andeq	r1, r0, ip, asr #32
    1330:	andeq	r1, r0, ip, asr #1
    1334:	andeq	r1, r0, r4, rrx
    1338:	andeq	r1, r0, ip, rrx
    133c:	mov	fp, #0
    1340:	mov	lr, #0
    1344:	pop	{r1}		; (ldr r1, [sp], #4)
    1348:	mov	r2, sp
    134c:	push	{r2}		; (str r2, [sp, #-4]!)
    1350:	push	{r0}		; (str r0, [sp, #-4]!)
    1354:	ldr	sl, [pc, #40]	; 1384 <main@@Base+0x3cc>
    1358:	add	r3, pc, #36	; 0x24
    135c:	add	sl, sl, r3
    1360:	ldr	ip, [pc, #32]	; 1388 <main@@Base+0x3d0>
    1364:	ldr	ip, [sl, ip]
    1368:	push	{ip}		; (str ip, [sp, #-4]!)
    136c:	ldr	r3, [pc, #24]	; 138c <main@@Base+0x3d4>
    1370:	ldr	r3, [sl, r3]
    1374:	ldr	r0, [pc, #20]	; 1390 <main@@Base+0x3d8>
    1378:	ldr	r0, [sl, r0]
    137c:	bl	e44 <__libc_start_main@plt>
    1380:	bl	fa0 <abort@plt>
    1384:	andeq	r1, r1, r4, asr fp
    1388:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    138c:	andeq	r0, r0, r0, lsl r1
    1390:	andeq	r0, r0, r8, lsl r1
    1394:	ldr	r3, [pc, #20]	; 13b0 <main@@Base+0x3f8>
    1398:	ldr	r2, [pc, #20]	; 13b4 <main@@Base+0x3fc>
    139c:	add	r3, pc, r3
    13a0:	ldr	r2, [r3, r2]
    13a4:	cmp	r2, #0
    13a8:	bxeq	lr
    13ac:	b	e50 <__gmon_start__@plt>
    13b0:	andeq	r1, r1, r4, lsr fp
    13b4:	andeq	r0, r0, r4, lsl #2
    13b8:	ldr	r2, [pc, #60]	; 13fc <main@@Base+0x444>
    13bc:	ldr	r0, [pc, #60]	; 1400 <main@@Base+0x448>
    13c0:	add	r2, pc, r2
    13c4:	add	r0, pc, r0
    13c8:	add	r2, r2, #3
    13cc:	rsb	r2, r0, r2
    13d0:	push	{r3, lr}
    13d4:	cmp	r2, #6
    13d8:	ldr	r3, [pc, #36]	; 1404 <main@@Base+0x44c>
    13dc:	add	r3, pc, r3
    13e0:	popls	{r3, pc}
    13e4:	ldr	r2, [pc, #28]	; 1408 <main@@Base+0x450>
    13e8:	ldr	r3, [r3, r2]
    13ec:	cmp	r3, #0
    13f0:	popeq	{r3, pc}
    13f4:	blx	r3
    13f8:	pop	{r3, pc}
    13fc:	andeq	r1, r1, ip, lsr ip
    1400:	andeq	r1, r1, r8, lsr ip
    1404:	strdeq	r1, [r1], -r4
    1408:	strdeq	r0, [r0], -r8
    140c:	push	{r3, lr}
    1410:	ldr	r0, [pc, #64]	; 1458 <main@@Base+0x4a0>
    1414:	ldr	r3, [pc, #64]	; 145c <main@@Base+0x4a4>
    1418:	add	r0, pc, r0
    141c:	ldr	r2, [pc, #60]	; 1460 <main@@Base+0x4a8>
    1420:	add	r3, pc, r3
    1424:	rsb	r3, r0, r3
    1428:	add	r2, pc, r2
    142c:	asr	r3, r3, #2
    1430:	add	r3, r3, r3, lsr #31
    1434:	asrs	r3, r3, #1
    1438:	popeq	{r3, pc}
    143c:	ldr	r1, [pc, #32]	; 1464 <main@@Base+0x4ac>
    1440:	ldr	r2, [r2, r1]
    1444:	cmp	r2, #0
    1448:	popeq	{r3, pc}
    144c:	mov	r1, r3
    1450:	blx	r2
    1454:	pop	{r3, pc}
    1458:	andeq	r1, r1, r4, ror #23
    145c:	ldrdeq	r1, [r1], -ip
    1460:	andeq	r1, r1, r8, lsr #21
    1464:	andeq	r0, r0, r4, lsr #2
    1468:	ldr	r2, [pc, #76]	; 14bc <main@@Base+0x504>
    146c:	push	{r3, lr}
    1470:	add	r2, pc, r2
    1474:	ldr	r3, [pc, #68]	; 14c0 <main@@Base+0x508>
    1478:	ldrb	r2, [r2]
    147c:	add	r3, pc, r3
    1480:	cmp	r2, #0
    1484:	popne	{r3, pc}
    1488:	ldr	r2, [pc, #52]	; 14c4 <main@@Base+0x50c>
    148c:	ldr	r3, [r3, r2]
    1490:	cmp	r3, #0
    1494:	beq	14a4 <main@@Base+0x4ec>
    1498:	ldr	r0, [pc, #40]	; 14c8 <main@@Base+0x510>
    149c:	add	r0, pc, r0
    14a0:	bl	d18 <__cxa_finalize@plt>
    14a4:	bl	13b8 <main@@Base+0x400>
    14a8:	ldr	r3, [pc, #28]	; 14cc <main@@Base+0x514>
    14ac:	mov	r2, #1
    14b0:	add	r3, pc, r3
    14b4:	strb	r2, [r3]
    14b8:	pop	{r3, pc}
    14bc:	andeq	r1, r1, ip, lsl #23
    14c0:	andeq	r1, r1, r4, asr sl
    14c4:	strdeq	r0, [r0], -r4
    14c8:	andeq	r1, r1, r8, lsr #18
    14cc:	andeq	r1, r1, ip, asr #22
    14d0:	ldr	r0, [pc, #52]	; 150c <main@@Base+0x554>
    14d4:	push	{r3, lr}
    14d8:	add	r0, pc, r0
    14dc:	ldr	r3, [pc, #44]	; 1510 <main@@Base+0x558>
    14e0:	ldr	r2, [r0]
    14e4:	add	r3, pc, r3
    14e8:	cmp	r2, #0
    14ec:	beq	1504 <main@@Base+0x54c>
    14f0:	ldr	r2, [pc, #28]	; 1514 <main@@Base+0x55c>
    14f4:	ldr	r3, [r3, r2]
    14f8:	cmp	r3, #0
    14fc:	beq	1504 <main@@Base+0x54c>
    1500:	blx	r3
    1504:	pop	{r3, lr}
    1508:	b	140c <main@@Base+0x454>
    150c:			; <UNDEFINED> instruction: 0x000118b8
    1510:	andeq	r1, r1, ip, ror #19
    1514:	andeq	r0, r0, ip, lsl r1
    1518:	ldr	r0, [pc, #16]	; 1530 <main@@Base+0x578>
    151c:	push	{r3, lr}
    1520:	add	r0, pc, r0
    1524:	bl	e2c <puts@plt>
    1528:	mov	r0, #0
    152c:	bl	d78 <_exit@plt>
    1530:	andeq	r0, r0, r8, lsl #23
    1534:	ldr	r1, [pc, #168]	; 15e4 <main@@Base+0x62c>
    1538:	mov	r2, #5
    153c:	push	{r3, r4, r5, lr}
    1540:	add	r1, pc, r1
    1544:	mov	r4, r0
    1548:	mov	r0, #0
    154c:	bl	db4 <dcgettext@plt>
    1550:	mov	r1, r4
    1554:	bl	f88 <fputs@plt>
    1558:	ldr	r1, [pc, #136]	; 15e8 <main@@Base+0x630>
    155c:	mov	r2, #5
    1560:	mov	r0, #0
    1564:	add	r1, pc, r1
    1568:	ldr	r5, [pc, #124]	; 15ec <main@@Base+0x634>
    156c:	bl	db4 <dcgettext@plt>
    1570:	ldr	r3, [pc, #120]	; 15f0 <main@@Base+0x638>
    1574:	add	r5, pc, r5
    1578:	mov	r1, #1
    157c:	ldr	r3, [r5, r3]
    1580:	ldr	r3, [r3]
    1584:	mov	r2, r0
    1588:	mov	r0, r4
    158c:	bl	f1c <__fprintf_chk@plt>
    1590:	ldr	r1, [pc, #92]	; 15f4 <main@@Base+0x63c>
    1594:	mov	r2, #5
    1598:	mov	r0, #0
    159c:	add	r1, pc, r1
    15a0:	bl	db4 <dcgettext@plt>
    15a4:	mov	r1, r4
    15a8:	bl	f88 <fputs@plt>
    15ac:	ldr	r1, [pc, #68]	; 15f8 <main@@Base+0x640>
    15b0:	mov	r2, #5
    15b4:	mov	r0, #0
    15b8:	add	r1, pc, r1
    15bc:	bl	db4 <dcgettext@plt>
    15c0:	mov	r1, r4
    15c4:	bl	f88 <fputs@plt>
    15c8:	ldr	r3, [pc, #44]	; 15fc <main@@Base+0x644>
    15cc:	ldr	r3, [r5, r3]
    15d0:	ldr	r0, [r3]
    15d4:	subs	r3, r4, r0
    15d8:	rsbs	r0, r3, #0
    15dc:	adcs	r0, r0, r3
    15e0:	bl	e80 <exit@plt>
    15e4:	andeq	r0, r0, r0, ror fp
    15e8:	andeq	r0, r0, r8, asr fp
    15ec:	andeq	r1, r1, ip, asr r9
    15f0:	andeq	r0, r0, r0, lsr #2
    15f4:	andeq	r0, r0, r4, asr #22
    15f8:	andeq	r0, r0, r4, lsr fp
    15fc:	andeq	r0, r0, r0, lsl #2
    1600:	ldr	ip, [pc, #236]	; 16f4 <main@@Base+0x73c>
    1604:	push	{r4, r5, r6, r7, r8, r9, lr}
    1608:	add	ip, pc, ip
    160c:	ldr	lr, [pc, #228]	; 16f8 <main@@Base+0x740>
    1610:	sub	sp, sp, #4160	; 0x1040
    1614:	sub	sp, sp, #60	; 0x3c
    1618:	mov	r9, r3
    161c:	add	r5, sp, #116	; 0x74
    1620:	ldr	r3, [pc, #212]	; 16fc <main@@Base+0x744>
    1624:	ldr	r6, [ip, lr]
    1628:	add	lr, sp, #8192	; 0x2000
    162c:	str	r0, [sp]
    1630:	add	r4, sp, #8
    1634:	add	r3, pc, r3
    1638:	mov	r8, r1
    163c:	ldr	ip, [r6]
    1640:	mov	r1, #1
    1644:	mov	r7, r2
    1648:	mov	r0, r5
    164c:	mov	r2, #4096	; 0x1000
    1650:	str	ip, [lr, #-3980]	; 0xfffff074
    1654:	bl	ebc <__sprintf_chk@plt>
    1658:	mov	r1, r5
    165c:	mov	r0, #3
    1660:	mov	r2, r4
    1664:	bl	f70 <__xstat64@plt>
    1668:	cmp	r0, #0
    166c:	blt	16cc <main@@Base+0x714>
    1670:	ldr	r3, [r4, #16]
    1674:	ands	r3, r3, #16
    1678:	bne	16ac <main@@Base+0x6f4>
    167c:	ldr	r2, [r4, #72]	; 0x48
    1680:	mov	r0, #0
    1684:	str	r3, [r8]
    1688:	str	r2, [r7]
    168c:	add	r3, sp, #8192	; 0x2000
    1690:	ldr	r2, [r3, #-3980]	; 0xfffff074
    1694:	ldr	r3, [r6]
    1698:	cmp	r2, r3
    169c:	bne	16f0 <main@@Base+0x738>
    16a0:	add	sp, sp, #4160	; 0x1040
    16a4:	add	sp, sp, #60	; 0x3c
    16a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    16ac:	ldr	r3, [pc, #76]	; 1700 <main@@Base+0x748>
    16b0:	ldr	r2, [r4, #28]
    16b4:	add	r3, pc, r3
    16b8:	ldr	r3, [r3]
    16bc:	subs	r2, r2, r3
    16c0:	rsbs	r3, r2, #0
    16c4:	adcs	r3, r3, r2
    16c8:	b	167c <main@@Base+0x6c4>
    16cc:	cmp	r9, #0
    16d0:	moveq	r0, #1
    16d4:	beq	168c <main@@Base+0x6d4>
    16d8:	ldr	r0, [pc, #36]	; 1704 <main@@Base+0x74c>
    16dc:	mov	r1, r5
    16e0:	add	r0, pc, r0
    16e4:	bl	f4c <warn@plt>
    16e8:	mov	r0, #1
    16ec:	b	168c <main@@Base+0x6d4>
    16f0:	bl	dc0 <__stack_chk_fail@plt>
    16f4:	andeq	r1, r1, r8, asr #17
    16f8:	strdeq	r0, [r0], -ip
    16fc:	andeq	r0, r0, r0, lsr #22
    1700:	andeq	r1, r1, ip, asr #18
    1704:	muleq	r0, r8, ip
    1708:	push	{r3, r4, r5, r6, r7, lr}
    170c:	ldr	r5, [pc, #312]	; 184c <main@@Base+0x894>
    1710:	ldr	r3, [pc, #312]	; 1850 <main@@Base+0x898>
    1714:	add	r5, pc, r5
    1718:	ldr	r3, [r5, r3]
    171c:	ldr	r4, [r3]
    1720:	mov	r0, r4
    1724:	bl	e14 <__fpending@plt>
    1728:	mov	r7, r0
    172c:	mov	r0, r4
    1730:	bl	d6c <ferror@plt>
    1734:	mov	r6, r0
    1738:	mov	r0, r4
    173c:	bl	f28 <fclose@plt>
    1740:	adds	r4, r0, #0
    1744:	movne	r4, #1
    1748:	cmp	r6, #0
    174c:	bne	17c4 <main@@Base+0x80c>
    1750:	cmp	r4, #0
    1754:	beq	1770 <main@@Base+0x7b8>
    1758:	cmp	r7, #0
    175c:	beq	1814 <main@@Base+0x85c>
    1760:	bl	eb0 <__errno_location@plt>
    1764:	ldr	r3, [r0]
    1768:	cmp	r3, #32
    176c:	bne	1828 <main@@Base+0x870>
    1770:	ldr	r3, [pc, #220]	; 1854 <main@@Base+0x89c>
    1774:	ldr	r3, [r5, r3]
    1778:	ldr	r4, [r3]
    177c:	mov	r0, r4
    1780:	bl	e14 <__fpending@plt>
    1784:	mov	r6, r0
    1788:	mov	r0, r4
    178c:	bl	d6c <ferror@plt>
    1790:	mov	r5, r0
    1794:	mov	r0, r4
    1798:	bl	f28 <fclose@plt>
    179c:	adds	r4, r0, #0
    17a0:	movne	r4, #1
    17a4:	cmp	r5, #0
    17a8:	beq	17f0 <main@@Base+0x838>
    17ac:	cmp	r4, #0
    17b0:	bne	17bc <main@@Base+0x804>
    17b4:	bl	eb0 <__errno_location@plt>
    17b8:	str	r4, [r0]
    17bc:	mov	r0, #1
    17c0:	bl	d78 <_exit@plt>
    17c4:	cmp	r4, #0
    17c8:	bne	1760 <main@@Base+0x7a8>
    17cc:	bl	eb0 <__errno_location@plt>
    17d0:	str	r4, [r0]
    17d4:	ldr	r1, [pc, #124]	; 1858 <main@@Base+0x8a0>
    17d8:	mov	r2, #5
    17dc:	mov	r0, #0
    17e0:	add	r1, pc, r1
    17e4:	bl	db4 <dcgettext@plt>
    17e8:	bl	ea4 <warnx@plt>
    17ec:	b	17bc <main@@Base+0x804>
    17f0:	cmp	r4, #0
    17f4:	popeq	{r3, r4, r5, r6, r7, pc}
    17f8:	cmp	r6, #0
    17fc:	bne	17bc <main@@Base+0x804>
    1800:	bl	eb0 <__errno_location@plt>
    1804:	ldr	r3, [r0]
    1808:	cmp	r3, #9
    180c:	bne	17bc <main@@Base+0x804>
    1810:	pop	{r3, r4, r5, r6, r7, pc}
    1814:	bl	eb0 <__errno_location@plt>
    1818:	ldr	r3, [r0]
    181c:	cmp	r3, #9
    1820:	bne	1768 <main@@Base+0x7b0>
    1824:	b	1770 <main@@Base+0x7b8>
    1828:	cmp	r3, #0
    182c:	beq	17d4 <main@@Base+0x81c>
    1830:	ldr	r1, [pc, #36]	; 185c <main@@Base+0x8a4>
    1834:	mov	r2, #5
    1838:	mov	r0, #0
    183c:	add	r1, pc, r1
    1840:	bl	db4 <dcgettext@plt>
    1844:	bl	f4c <warn@plt>
    1848:	b	17bc <main@@Base+0x804>
    184c:			; <UNDEFINED> instruction: 0x000117bc
    1850:	andeq	r0, r0, r4, lsl r1
    1854:	andeq	r0, r0, r0, lsl #2
    1858:	andeq	r0, r0, ip, ror r9
    185c:	andeq	r0, r0, r0, lsr #18
    1860:	ldr	r3, [pc, #180]	; 191c <main@@Base+0x964>
    1864:	ldr	r2, [pc, #180]	; 1920 <main@@Base+0x968>
    1868:	add	r3, pc, r3
    186c:	push	{r4, r5, r6, r7, r8, r9, lr}
    1870:	mov	r6, r0
    1874:	ldr	r9, [r3, r2]
    1878:	sub	sp, sp, #396	; 0x18c
    187c:	ldr	r0, [pc, #160]	; 1924 <main@@Base+0x96c>
    1880:	mov	r8, r1
    1884:	add	r5, sp, #4
    1888:	add	r4, sp, #48	; 0x30
    188c:	ldr	r3, [r9]
    1890:	add	r0, pc, r0
    1894:	add	r7, sp, #12
    1898:	str	r3, [sp, #388]	; 0x184
    189c:	bl	f58 <utmpname@plt>
    18a0:	bl	eec <setutent@plt>
    18a4:	bl	ef8 <getutent@plt>
    18a8:	subs	r1, r0, #0
    18ac:	beq	18f4 <main@@Base+0x93c>
    18b0:	mov	r2, #384	; 0x180
    18b4:	mov	r0, r5
    18b8:	bl	d84 <memcpy@plt>
    18bc:	mov	r0, r6
    18c0:	mov	r1, r4
    18c4:	mov	r2, #32
    18c8:	bl	f94 <strncmp@plt>
    18cc:	cmp	r0, #0
    18d0:	bne	18a4 <main@@Base+0x8ec>
    18d4:	mov	r0, r8
    18d8:	mov	r1, r7
    18dc:	mov	r2, #32
    18e0:	bl	f94 <strncmp@plt>
    18e4:	cmp	r0, #0
    18e8:	bne	18a4 <main@@Base+0x8ec>
    18ec:	mov	r4, r0
    18f0:	b	18f8 <main@@Base+0x940>
    18f4:	mov	r4, #1
    18f8:	bl	d3c <endutent@plt>
    18fc:	ldr	r2, [sp, #388]	; 0x184
    1900:	ldr	r3, [r9]
    1904:	mov	r0, r4
    1908:	cmp	r2, r3
    190c:	bne	1918 <main@@Base+0x960>
    1910:	add	sp, sp, #396	; 0x18c
    1914:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1918:	bl	dc0 <__stack_chk_fail@plt>
    191c:	andeq	r1, r1, r8, ror #12
    1920:	strdeq	r0, [r0], -ip
    1924:	ldrdeq	r0, [r0], -r8
    1928:	push	{r4, r5, r6, r7, r8, lr}
    192c:	mov	r6, r1
    1930:	mov	r5, r2
    1934:	mov	r4, r3
    1938:	mov	r7, r0
    193c:	bl	e98 <strlen@plt>
    1940:	add	r0, r0, #6
    1944:	cmp	r0, #4096	; 0x1000
    1948:	bls	1954 <main@@Base+0x99c>
    194c:	mov	r0, #1
    1950:	pop	{r4, r5, r6, r7, r8, pc}
    1954:	mov	r0, r7
    1958:	mov	r1, r6
    195c:	mov	r2, r5
    1960:	mov	r3, r4
    1964:	pop	{r4, r5, r6, r7, r8, lr}
    1968:	b	1600 <main@@Base+0x648>
    196c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1970:	sub	sp, sp, #460	; 0x1cc
    1974:	ldr	lr, [pc, #512]	; 1b7c <main@@Base+0xbc4>
    1978:	mov	r4, r0
    197c:	ldr	ip, [pc, #508]	; 1b80 <main@@Base+0xbc8>
    1980:	mov	r7, #0
    1984:	add	lr, pc, lr
    1988:	str	r1, [sp, #12]
    198c:	str	r2, [sp, #8]
    1990:	mov	sl, r7
    1994:	str	r3, [sp, #16]
    1998:	mov	r3, lr
    199c:	ldr	ip, [lr, ip]
    19a0:	mov	r8, r7
    19a4:	ldr	r0, [pc, #472]	; 1b84 <main@@Base+0xbcc>
    19a8:	movw	fp, #65112	; 0xfe58
    19ac:	str	r7, [sp, #20]
    19b0:	add	r6, sp, #32
    19b4:	ldr	r3, [ip]
    19b8:	add	r0, pc, r0
    19bc:	str	ip, [sp, #4]
    19c0:	movt	fp, #65535	; 0xffff
    19c4:	add	r5, sp, #76	; 0x4c
    19c8:	add	r9, sp, #416	; 0x1a0
    19cc:	str	r3, [sp, #452]	; 0x1c4
    19d0:	bl	f58 <utmpname@plt>
    19d4:	bl	eec <setutent@plt>
    19d8:	b	1a00 <main@@Base+0xa48>
    19dc:	mov	r2, #384	; 0x180
    19e0:	mov	r0, r6
    19e4:	bl	d84 <memcpy@plt>
    19e8:	mov	r0, r4
    19ec:	mov	r1, r5
    19f0:	mov	r2, #32
    19f4:	bl	f94 <strncmp@plt>
    19f8:	subs	ip, r0, #0
    19fc:	beq	1a58 <main@@Base+0xaa0>
    1a00:	bl	ef8 <getutent@plt>
    1a04:	subs	r1, r0, #0
    1a08:	bne	19dc <main@@Base+0xa24>
    1a0c:	str	r1, [sp]
    1a10:	bl	d3c <endutent@plt>
    1a14:	cmp	r8, #0
    1a18:	ldr	r1, [sp]
    1a1c:	beq	1b44 <main@@Base+0xb8c>
    1a20:	cmp	sl, #0
    1a24:	bne	1b00 <main@@Base+0xb48>
    1a28:	cmp	r7, #0
    1a2c:	beq	1b6c <main@@Base+0xbb4>
    1a30:	ldr	r1, [sp, #4]
    1a34:	ldr	r2, [sp, #452]	; 0x1c4
    1a38:	ldr	r3, [r1]
    1a3c:	cmp	r2, r3
    1a40:	bne	1b68 <main@@Base+0xbb0>
    1a44:	ldr	r0, [sp, #12]
    1a48:	ldr	r1, [sp, #8]
    1a4c:	add	sp, sp, #460	; 0x1cc
    1a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a54:	b	e08 <strcpy@plt>
    1a58:	add	r1, sp, #40	; 0x28
    1a5c:	mov	r2, #32
    1a60:	mov	r0, r9
    1a64:	str	ip, [sp]
    1a68:	bl	ee0 <strncpy@plt>
    1a6c:	ldr	ip, [sp]
    1a70:	mov	r0, r9
    1a74:	add	r1, sp, #28
    1a78:	add	r2, sp, #24
    1a7c:	add	r8, r8, #1
    1a80:	mov	r3, ip
    1a84:	strb	ip, [sp, #448]	; 0x1c0
    1a88:	bl	1928 <main@@Base+0x970>
    1a8c:	cmp	r0, #0
    1a90:	bne	1a00 <main@@Base+0xa48>
    1a94:	ldr	r1, [sp, #16]
    1a98:	cmp	r1, #0
    1a9c:	beq	1aac <main@@Base+0xaf4>
    1aa0:	ldr	r3, [sp, #28]
    1aa4:	cmp	r3, #0
    1aa8:	beq	1a00 <main@@Base+0xa48>
    1aac:	mov	r0, r9
    1ab0:	ldr	r1, [sp, #8]
    1ab4:	bl	d0c <strcmp@plt>
    1ab8:	cmp	r0, #0
    1abc:	moveq	r7, #1
    1ac0:	beq	1a00 <main@@Base+0xa48>
    1ac4:	add	r2, sp, #456	; 0x1c8
    1ac8:	ldrh	r2, [r2, fp]
    1acc:	sxth	r3, r2
    1ad0:	cmp	r3, #7
    1ad4:	bne	1a00 <main@@Base+0xa48>
    1ad8:	ldr	r3, [sp, #24]
    1adc:	add	sl, sl, #1
    1ae0:	ldr	r1, [sp, #20]
    1ae4:	cmp	r3, r1
    1ae8:	ble	1a00 <main@@Base+0xa48>
    1aec:	ldr	r0, [sp, #12]
    1af0:	mov	r1, r9
    1af4:	str	r3, [sp, #20]
    1af8:	bl	e08 <strcpy@plt>
    1afc:	b	1a00 <main@@Base+0xa48>
    1b00:	cmp	sl, #1
    1b04:	beq	1b28 <main@@Base+0xb70>
    1b08:	mov	r0, r1
    1b0c:	ldr	r1, [pc, #116]	; 1b88 <main@@Base+0xbd0>
    1b10:	mov	r2, #5
    1b14:	add	r1, pc, r1
    1b18:	bl	db4 <dcgettext@plt>
    1b1c:	mov	r1, r4
    1b20:	ldr	r2, [sp, #12]
    1b24:	bl	ea4 <warnx@plt>
    1b28:	ldr	r1, [sp, #4]
    1b2c:	ldr	r2, [sp, #452]	; 0x1c4
    1b30:	ldr	r3, [r1]
    1b34:	cmp	r2, r3
    1b38:	bne	1b68 <main@@Base+0xbb0>
    1b3c:	add	sp, sp, #460	; 0x1cc
    1b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b44:	ldr	r1, [pc, #64]	; 1b8c <main@@Base+0xbd4>
    1b48:	mov	r0, r8
    1b4c:	add	r1, pc, r1
    1b50:	mov	r2, #5
    1b54:	bl	db4 <dcgettext@plt>
    1b58:	mov	r2, r4
    1b5c:	mov	r1, r0
    1b60:	mov	r0, #1
    1b64:	bl	f40 <errx@plt>
    1b68:	bl	dc0 <__stack_chk_fail@plt>
    1b6c:	ldr	r1, [pc, #28]	; 1b90 <main@@Base+0xbd8>
    1b70:	mov	r0, r7
    1b74:	add	r1, pc, r1
    1b78:	b	1b50 <main@@Base+0xb98>
    1b7c:	andeq	r1, r1, ip, asr #10
    1b80:	strdeq	r0, [r0], -ip
    1b84:			; <UNDEFINED> instruction: 0x000007b0
    1b88:	muleq	r0, r4, r6
    1b8c:	andeq	r0, r0, ip, lsr #12
    1b90:	andeq	r0, r0, r8, lsl r6
    1b94:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1b98:	sub	r6, r0, #1
    1b9c:	ldr	r8, [pc, #340]	; 1cf8 <main@@Base+0xd40>
    1ba0:	ldr	r9, [pc, #340]	; 1cfc <main@@Base+0xd44>
    1ba4:	add	r8, pc, r8
    1ba8:	add	r9, pc, r9
    1bac:	b	1c34 <main@@Base+0xc7c>
    1bb0:	cmp	r4, #13
    1bb4:	beq	1c64 <main@@Base+0xcac>
    1bb8:	and	r3, r5, #127	; 0x7f
    1bbc:	cmp	r3, #31
    1bc0:	ble	1bec <main@@Base+0xc34>
    1bc4:	cmp	r4, #127	; 0x7f
    1bc8:	beq	1bf4 <main@@Base+0xc3c>
    1bcc:	bl	e74 <__ctype_b_loc@plt>
    1bd0:	sxtb	r3, r5
    1bd4:	sxth	r3, r3
    1bd8:	lsl	r3, r3, #1
    1bdc:	ldr	r2, [r0]
    1be0:	ldrh	r3, [r2, r3]
    1be4:	tst	r3, #24576	; 0x6000
    1be8:	bne	1c64 <main@@Base+0xcac>
    1bec:	tst	r4, #128	; 0x80
    1bf0:	bne	1c18 <main@@Base+0xc60>
    1bf4:	bl	e74 <__ctype_b_loc@plt>
    1bf8:	eor	r5, r5, #64	; 0x40
    1bfc:	sxtb	r3, r5
    1c00:	sxth	r3, r3
    1c04:	lsl	r3, r3, #1
    1c08:	ldr	r2, [r0]
    1c0c:	ldrh	r3, [r2, r3]
    1c10:	tst	r3, #16384	; 0x4000
    1c14:	bne	1ca0 <main@@Base+0xce8>
    1c18:	mov	r0, r7
    1c1c:	uxtb	r3, r4
    1c20:	mov	r1, #1
    1c24:	mov	r2, r9
    1c28:	bl	f1c <__fprintf_chk@plt>
    1c2c:	cmp	r0, #0
    1c30:	blt	1cc8 <main@@Base+0xd10>
    1c34:	ldrb	r5, [r6, #1]!
    1c38:	cmp	r5, #0
    1c3c:	beq	1cc4 <main@@Base+0xd0c>
    1c40:	sxtb	r4, r5
    1c44:	ldr	r3, [pc, #180]	; 1d00 <main@@Base+0xd48>
    1c48:	cmp	r4, #10
    1c4c:	beq	1c74 <main@@Base+0xcbc>
    1c50:	ldr	r3, [r8, r3]
    1c54:	cmp	r4, #7
    1c58:	cmpne	r4, #9
    1c5c:	ldr	r7, [r3]
    1c60:	bne	1bb0 <main@@Base+0xbf8>
    1c64:	mov	r0, r4
    1c68:	mov	r1, r7
    1c6c:	bl	dfc <_IO_putc@plt>
    1c70:	b	1c2c <main@@Base+0xc74>
    1c74:	ldr	r5, [r8, r3]
    1c78:	mov	r0, #13
    1c7c:	ldr	r1, [r5]
    1c80:	bl	dfc <_IO_putc@plt>
    1c84:	cmp	r0, #0
    1c88:	blt	1ce8 <main@@Base+0xd30>
    1c8c:	ldr	r7, [r5]
    1c90:	mov	r0, r4
    1c94:	mov	r1, r7
    1c98:	bl	dfc <_IO_putc@plt>
    1c9c:	b	1c2c <main@@Base+0xc74>
    1ca0:	mov	r0, #94	; 0x5e
    1ca4:	mov	r1, r7
    1ca8:	bl	dfc <_IO_putc@plt>
    1cac:	cmn	r0, #1
    1cb0:	beq	1cc8 <main@@Base+0xd10>
    1cb4:	sxtb	r0, r5
    1cb8:	mov	r1, r7
    1cbc:	bl	dfc <_IO_putc@plt>
    1cc0:	b	1c2c <main@@Base+0xc74>
    1cc4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1cc8:	ldr	r1, [pc, #52]	; 1d04 <main@@Base+0xd4c>
    1ccc:	mov	r0, #0
    1cd0:	add	r1, pc, r1
    1cd4:	mov	r2, #5
    1cd8:	bl	db4 <dcgettext@plt>
    1cdc:	mov	r1, r0
    1ce0:	mov	r0, #1
    1ce4:	bl	de4 <err@plt>
    1ce8:	ldr	r1, [pc, #24]	; 1d08 <main@@Base+0xd50>
    1cec:	mov	r0, #0
    1cf0:	add	r1, pc, r1
    1cf4:	b	1cd4 <main@@Base+0xd1c>
    1cf8:	andeq	r1, r1, ip, lsr #6
    1cfc:	andeq	r0, r0, r0, lsr r6
    1d00:	andeq	r0, r0, r4, lsl r1
    1d04:	andeq	r0, r0, r0, lsl r5
    1d08:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d10:	sub	sp, sp, #4608	; 0x1200
    1d14:	ldr	r5, [pc, #688]	; 1fcc <main@@Base+0x1014>
    1d18:	sub	sp, sp, #28
    1d1c:	ldr	r3, [pc, #684]	; 1fd0 <main@@Base+0x1018>
    1d20:	mov	r7, r0
    1d24:	add	r5, pc, r5
    1d28:	mov	r0, r2
    1d2c:	add	r2, sp, #8192	; 0x2000
    1d30:	mov	sl, r1
    1d34:	ldr	r8, [r5, r3]
    1d38:	ldr	r3, [r8]
    1d3c:	str	r3, [r2, #-3564]	; 0xfffff214
    1d40:	bl	d30 <getpwuid@plt>
    1d44:	cmp	r0, #0
    1d48:	beq	1f44 <main@@Base+0xf8c>
    1d4c:	ldr	r6, [r0]
    1d50:	bl	d24 <getlogin@plt>
    1d54:	cmp	r0, #0
    1d58:	movne	r9, r0
    1d5c:	mov	r0, r7
    1d60:	moveq	r9, r6
    1d64:	bl	e98 <strlen@plt>
    1d68:	add	r0, r0, #6
    1d6c:	cmp	r0, #4096	; 0x1000
    1d70:	bhi	1fa8 <main@@Base+0xff0>
    1d74:	add	r4, sp, #532	; 0x214
    1d78:	ldr	r2, [pc, #596]	; 1fd4 <main@@Base+0x101c>
    1d7c:	mov	r1, #4096	; 0x1000
    1d80:	str	r7, [sp, #4]
    1d84:	mov	r3, r1
    1d88:	add	r2, pc, r2
    1d8c:	mov	r0, r4
    1d90:	str	r2, [sp]
    1d94:	mov	r2, #1
    1d98:	bl	fac <__snprintf_chk@plt>
    1d9c:	ldr	r3, [pc, #564]	; 1fd8 <main@@Base+0x1020>
    1da0:	ldr	r1, [pc, #564]	; 1fdc <main@@Base+0x1024>
    1da4:	mov	r0, r4
    1da8:	ldr	r3, [r5, r3]
    1dac:	add	r1, pc, r1
    1db0:	ldr	r2, [r3]
    1db4:	bl	e5c <freopen64@plt>
    1db8:	cmp	r0, #0
    1dbc:	beq	1f90 <main@@Base+0xfd8>
    1dc0:	ldr	r4, [pc, #536]	; 1fe0 <main@@Base+0x1028>
    1dc4:	mov	r0, #2
    1dc8:	add	r4, pc, r4
    1dcc:	mov	r1, r4
    1dd0:	bl	d90 <signal@plt>
    1dd4:	mov	r1, r4
    1dd8:	mov	r0, #1
    1ddc:	bl	d90 <signal@plt>
    1de0:	mov	r0, #180	; 0xb4
    1de4:	bl	dcc <sysconf@plt>
    1de8:	cmp	r0, #0
    1dec:	movgt	fp, r0
    1df0:	addgt	r7, fp, #1
    1df4:	movle	r7, #65	; 0x41
    1df8:	movle	fp, #64	; 0x40
    1dfc:	mov	r0, r7
    1e00:	bl	e38 <malloc@plt>
    1e04:	subs	r4, r0, #0
    1e08:	beq	1f7c <main@@Base+0xfc4>
    1e0c:	mov	r1, r7
    1e10:	bl	e20 <gethostname@plt>
    1e14:	cmp	r0, #0
    1e18:	strbeq	r0, [r4, fp]
    1e1c:	bne	1f50 <main@@Base+0xf98>
    1e20:	mov	r0, #0
    1e24:	mov	fp, r0
    1e28:	bl	d9c <time@plt>
    1e2c:	add	r2, sp, #4608	; 0x1200
    1e30:	movw	r3, #60920	; 0xedf8
    1e34:	add	r2, r2, #24
    1e38:	movt	r3, #65535	; 0xffff
    1e3c:	str	r0, [r2, r3]
    1e40:	add	r0, sp, #16
    1e44:	bl	da8 <ctime@plt>
    1e48:	ldr	r1, [pc, #404]	; 1fe4 <main@@Base+0x102c>
    1e4c:	add	r1, pc, r1
    1e50:	strb	fp, [r0, #16]
    1e54:	mov	r7, r0
    1e58:	mov	r0, #1
    1e5c:	bl	f04 <__printf_chk@plt>
    1e60:	mov	r0, r9
    1e64:	mov	r1, r6
    1e68:	bl	d0c <strcmp@plt>
    1e6c:	cmp	r0, fp
    1e70:	beq	1f10 <main@@Base+0xf58>
    1e74:	ldr	r1, [pc, #364]	; 1fe8 <main@@Base+0x1030>
    1e78:	mov	r2, #5
    1e7c:	mov	r0, fp
    1e80:	add	r7, r7, #11
    1e84:	add	r1, pc, r1
    1e88:	bl	db4 <dcgettext@plt>
    1e8c:	str	r6, [sp]
    1e90:	mov	r2, r9
    1e94:	str	r7, [sp, #8]
    1e98:	str	sl, [sp, #4]
    1e9c:	mov	r3, r4
    1ea0:	mov	r1, r0
    1ea4:	mov	r0, #1
    1ea8:	bl	f04 <__printf_chk@plt>
    1eac:	mov	r0, r4
    1eb0:	add	r4, sp, #20
    1eb4:	bl	d54 <free@plt>
    1eb8:	ldr	r0, [pc, #300]	; 1fec <main@@Base+0x1034>
    1ebc:	add	r0, pc, r0
    1ec0:	bl	e2c <puts@plt>
    1ec4:	ldr	r3, [pc, #292]	; 1ff0 <main@@Base+0x1038>
    1ec8:	ldr	r5, [r5, r3]
    1ecc:	b	1ed8 <main@@Base+0xf20>
    1ed0:	mov	r0, r4
    1ed4:	bl	1b94 <main@@Base+0xbdc>
    1ed8:	mov	r0, r4
    1edc:	mov	r1, #512	; 0x200
    1ee0:	ldr	r2, [r5]
    1ee4:	bl	d60 <fgets@plt>
    1ee8:	cmp	r0, #0
    1eec:	bne	1ed0 <main@@Base+0xf18>
    1ef0:	add	r3, sp, #8192	; 0x2000
    1ef4:	ldr	r2, [r3, #-3564]	; 0xfffff214
    1ef8:	ldr	r3, [r8]
    1efc:	cmp	r2, r3
    1f00:	bne	1fa4 <main@@Base+0xfec>
    1f04:	add	sp, sp, #4608	; 0x1200
    1f08:	add	sp, sp, #28
    1f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f10:	ldr	r1, [pc, #220]	; 1ff4 <main@@Base+0x103c>
    1f14:	mov	r2, #5
    1f18:	add	r7, r7, #11
    1f1c:	add	r1, pc, r1
    1f20:	bl	db4 <dcgettext@plt>
    1f24:	str	sl, [sp]
    1f28:	mov	r2, r9
    1f2c:	str	r7, [sp, #4]
    1f30:	mov	r3, r4
    1f34:	mov	r1, r0
    1f38:	mov	r0, #1
    1f3c:	bl	f04 <__printf_chk@plt>
    1f40:	b	1eac <main@@Base+0xef4>
    1f44:	ldr	r6, [pc, #172]	; 1ff8 <main@@Base+0x1040>
    1f48:	add	r6, pc, r6
    1f4c:	b	1d50 <main@@Base+0xd98>
    1f50:	mov	r0, r4
    1f54:	bl	d54 <free@plt>
    1f58:	ldr	r0, [pc, #156]	; 1ffc <main@@Base+0x1044>
    1f5c:	add	r0, pc, r0
    1f60:	bl	ed4 <__strdup@plt>
    1f64:	subs	r4, r0, #0
    1f68:	bne	1e20 <main@@Base+0xe68>
    1f6c:	ldr	r1, [pc, #140]	; 2000 <main@@Base+0x1048>
    1f70:	mov	r0, #1
    1f74:	add	r1, pc, r1
    1f78:	bl	de4 <err@plt>
    1f7c:	ldr	r1, [pc, #128]	; 2004 <main@@Base+0x104c>
    1f80:	mov	r2, r7
    1f84:	mov	r0, #1
    1f88:	add	r1, pc, r1
    1f8c:	bl	de4 <err@plt>
    1f90:	ldr	r1, [pc, #112]	; 2008 <main@@Base+0x1050>
    1f94:	mov	r2, r4
    1f98:	mov	r0, #1
    1f9c:	add	r1, pc, r1
    1fa0:	bl	de4 <err@plt>
    1fa4:	bl	dc0 <__stack_chk_fail@plt>
    1fa8:	ldr	r1, [pc, #92]	; 200c <main@@Base+0x1054>
    1fac:	mov	r2, #5
    1fb0:	mov	r0, #0
    1fb4:	add	r1, pc, r1
    1fb8:	bl	db4 <dcgettext@plt>
    1fbc:	mov	r2, r7
    1fc0:	mov	r1, r0
    1fc4:	mov	r0, #1
    1fc8:	bl	f40 <errx@plt>
    1fcc:	andeq	r1, r1, ip, lsr #3
    1fd0:	strdeq	r0, [r0], -ip
    1fd4:	andeq	r0, r0, ip, asr #7
    1fd8:	andeq	r0, r0, r4, lsl r1
    1fdc:	andeq	r0, r0, r4, ror #8
    1fe0:			; <UNDEFINED> instruction: 0xfffff748
    1fe4:	strdeq	r0, [r0], -ip
    1fe8:	andeq	r0, r0, ip, asr #7
    1fec:	andeq	r0, r0, r4, ror #7
    1ff0:	andeq	r0, r0, ip, lsl #2
    1ff4:	andeq	r0, r0, r0, ror #6
    1ff8:	andeq	r0, r0, ip, lsr #5
    1ffc:	muleq	r0, r8, r2
    2000:			; <UNDEFINED> instruction: 0x000002bc
    2004:	andeq	r0, r0, ip, lsl #5
    2008:	ldrdeq	r0, [r0], -ip
    200c:	andeq	r0, r0, r4, asr #4

00002010 <__libc_csu_init@@Base>:
    2010:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    2014:	mov	r7, r0
    2018:	ldr	r6, [pc, #76]	; 206c <__libc_csu_init@@Base+0x5c>
    201c:	mov	r8, r1
    2020:	ldr	r5, [pc, #72]	; 2070 <__libc_csu_init@@Base+0x60>
    2024:	mov	r9, r2
    2028:	add	r6, pc, r6
    202c:	bl	cec <strcmp@plt-0x20>
    2030:	add	r5, pc, r5
    2034:	rsb	r6, r5, r6
    2038:	asrs	r6, r6, #2
    203c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    2040:	sub	r5, r5, #4
    2044:	mov	r4, #0
    2048:	add	r4, r4, #1
    204c:	ldr	r3, [r5, #4]!
    2050:	mov	r0, r7
    2054:	mov	r1, r8
    2058:	mov	r2, r9
    205c:	blx	r3
    2060:	cmp	r4, r6
    2064:	bne	2048 <__libc_csu_init@@Base+0x38>
    2068:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    206c:	andeq	r0, r1, r4, ror #26
    2070:	andeq	r0, r1, r8, asr sp

00002074 <__libc_csu_fini@@Base>:
    2074:	bx	lr
    2078:	ldr	r3, [pc, #28]	; 209c <__libc_csu_fini@@Base+0x28>
    207c:	mov	r1, #0
    2080:	ldr	r2, [pc, #24]	; 20a0 <__libc_csu_fini@@Base+0x2c>
    2084:	add	r3, pc, r3
    2088:	ldr	r3, [r3, r2]
    208c:	cmp	r3, #0
    2090:	ldrne	r2, [r3]
    2094:	moveq	r2, r3
    2098:	b	ec8 <__cxa_atexit@plt>
    209c:	andeq	r0, r1, ip, asr #28
    20a0:	andeq	r0, r0, r8, lsl #2

Disassembly of section .fini:

000020a4 <.fini>:
    20a4:	push	{r3, lr}
    20a8:	pop	{r3, pc}
