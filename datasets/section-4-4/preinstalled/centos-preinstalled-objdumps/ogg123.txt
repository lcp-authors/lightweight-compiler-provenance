
centos-preinstalled/ogg123:     file format elf32-littlearm


Disassembly of section .init:

00012404 <_init@@Base>:
   12404:	push	{r3, lr}
   12408:	bl	12fdc <__printf_chk@plt+0x474>
   1240c:	pop	{r3, pc}

Disassembly of section .plt:

00012410 <signal@plt-0x14>:
   12410:	push	{lr}		; (str lr, [sp, #-4]!)
   12414:	ldr	lr, [pc, #4]	; 12420 <_init@@Base+0x1c>
   12418:	add	lr, pc, lr
   1241c:	ldr	pc, [lr, #8]!
   12420:	andeq	sp, r1, r0, ror #23

00012424 <signal@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #118784	; 0x1d000
   1242c:	ldr	pc, [ip, #3040]!	; 0xbe0

00012430 <pthread_cond_init@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #118784	; 0x1d000
   12438:	ldr	pc, [ip, #3032]!	; 0xbd8

0001243c <ao_open_file@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #118784	; 0x1d000
   12444:	ldr	pc, [ip, #3024]!	; 0xbd0

00012448 <ao_driver_info_list@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #118784	; 0x1d000
   12450:	ldr	pc, [ip, #3016]!	; 0xbc8

00012454 <sem_destroy@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #118784	; 0x1d000
   1245c:	ldr	pc, [ip, #3008]!	; 0xbc0

00012460 <curl_easy_perform@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #118784	; 0x1d000
   12468:	ldr	pc, [ip, #3000]!	; 0xbb8

0001246c <ov_time_seek@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #118784	; 0x1d000
   12474:	ldr	pc, [ip, #2992]!	; 0xbb0

00012478 <pthread_mutex_lock@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #118784	; 0x1d000
   12480:	ldr	pc, [ip, #2984]!	; 0xba8

00012484 <ao_driver_info@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #118784	; 0x1d000
   1248c:	ldr	pc, [ip, #2976]!	; 0xba0

00012490 <pthread_mutex_init@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #118784	; 0x1d000
   12498:	ldr	pc, [ip, #2968]!	; 0xb98

0001249c <ao_initialize@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #118784	; 0x1d000
   124a4:	ldr	pc, [ip, #2960]!	; 0xb90

000124a8 <speex_packet_to_header@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #118784	; 0x1d000
   124b0:	ldr	pc, [ip, #2952]!	; 0xb88

000124b4 <__pow_finite@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #118784	; 0x1d000
   124bc:	ldr	pc, [ip, #2944]!	; 0xb80

000124c0 <getpid@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #118784	; 0x1d000
   124c8:	ldr	pc, [ip, #2936]!	; 0xb78

000124cc <ao_append_option@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #118784	; 0x1d000
   124d4:	ldr	pc, [ip, #2928]!	; 0xb70

000124d8 <gettimeofday@plt>:
   124d8:	add	ip, pc, #0, 12
   124dc:	add	ip, ip, #118784	; 0x1d000
   124e0:	ldr	pc, [ip, #2920]!	; 0xb68

000124e4 <pthread_cond_destroy@plt>:
   124e4:	add	ip, pc, #0, 12
   124e8:	add	ip, ip, #118784	; 0x1d000
   124ec:	ldr	pc, [ip, #2912]!	; 0xb60

000124f0 <strcasecmp@plt>:
   124f0:	add	ip, pc, #0, 12
   124f4:	add	ip, ip, #118784	; 0x1d000
   124f8:	ldr	pc, [ip, #2904]!	; 0xb58

000124fc <FLAC__stream_decoder_process_until_end_of_metadata@plt>:
   124fc:	add	ip, pc, #0, 12
   12500:	add	ip, ip, #118784	; 0x1d000
   12504:	ldr	pc, [ip, #2896]!	; 0xb50

00012508 <strtol@plt>:
   12508:	add	ip, pc, #0, 12
   1250c:	add	ip, ip, #118784	; 0x1d000
   12510:	ldr	pc, [ip, #2888]!	; 0xb48

00012514 <curl_easy_init@plt>:
   12514:	add	ip, pc, #0, 12
   12518:	add	ip, ip, #118784	; 0x1d000
   1251c:	ldr	pc, [ip, #2880]!	; 0xb40

00012520 <free@plt>:
   12520:	add	ip, pc, #0, 12
   12524:	add	ip, ip, #118784	; 0x1d000
   12528:	ldr	pc, [ip, #2872]!	; 0xb38

0001252c <fseek@plt>:
   1252c:	add	ip, pc, #0, 12
   12530:	add	ip, ip, #118784	; 0x1d000
   12534:	ldr	pc, [ip, #2864]!	; 0xb30

00012538 <__xstat64@plt>:
   12538:	add	ip, pc, #0, 12
   1253c:	add	ip, ip, #118784	; 0x1d000
   12540:	ldr	pc, [ip, #2856]!	; 0xb28

00012544 <__gcc_personality_v0@plt>:
   12544:	add	ip, pc, #0, 12
   12548:	add	ip, ip, #118784	; 0x1d000
   1254c:	ldr	pc, [ip, #2848]!	; 0xb20

00012550 <strncmp@plt>:
   12550:	add	ip, pc, #0, 12
   12554:	add	ip, ip, #118784	; 0x1d000
   12558:	ldr	pc, [ip, #2840]!	; 0xb18

0001255c <ao_append_global_option@plt>:
   1255c:	add	ip, pc, #0, 12
   12560:	add	ip, ip, #118784	; 0x1d000
   12564:	ldr	pc, [ip, #2832]!	; 0xb10

00012568 <curl_slist_append@plt>:
   12568:	add	ip, pc, #0, 12
   1256c:	add	ip, ip, #118784	; 0x1d000
   12570:	ldr	pc, [ip, #2824]!	; 0xb08

00012574 <pthread_join@plt>:
   12574:	add	ip, pc, #0, 12
   12578:	add	ip, ip, #118784	; 0x1d000
   1257c:	ldr	pc, [ip, #2816]!	; 0xb00

00012580 <fgetc@plt>:
   12580:	add	ip, pc, #0, 12
   12584:	add	ip, ip, #118784	; 0x1d000
   12588:	ldr	pc, [ip, #2808]!	; 0xaf8

0001258c <ogg_sync_init@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #118784	; 0x1d000
   12594:	ldr	pc, [ip, #2800]!	; 0xaf0

00012598 <exit@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #118784	; 0x1d000
   125a0:	ldr	pc, [ip, #2792]!	; 0xae8

000125a4 <strerror@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #118784	; 0x1d000
   125ac:	ldr	pc, [ip, #2784]!	; 0xae0

000125b0 <scandir64@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #118784	; 0x1d000
   125b8:	ldr	pc, [ip, #2776]!	; 0xad8

000125bc <speex_decoder_init@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #118784	; 0x1d000
   125c4:	ldr	pc, [ip, #2768]!	; 0xad0

000125c8 <__vsnprintf_chk@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #118784	; 0x1d000
   125d0:	ldr	pc, [ip, #2760]!	; 0xac8

000125d4 <feof@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #118784	; 0x1d000
   125dc:	ldr	pc, [ip, #2752]!	; 0xac0

000125e0 <puts@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #118784	; 0x1d000
   125e8:	ldr	pc, [ip, #2744]!	; 0xab8

000125ec <pthread_cond_signal@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #118784	; 0x1d000
   125f4:	ldr	pc, [ip, #2736]!	; 0xab0

000125f8 <ov_clear@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #118784	; 0x1d000
   12600:	ldr	pc, [ip, #2728]!	; 0xaa8

00012604 <perror@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #118784	; 0x1d000
   1260c:	ldr	pc, [ip, #2720]!	; 0xaa0

00012610 <nl_langinfo@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #118784	; 0x1d000
   12618:	ldr	pc, [ip, #2712]!	; 0xa98

0001261c <ov_pcm_total@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #118784	; 0x1d000
   12624:	ldr	pc, [ip, #2704]!	; 0xa90

00012628 <FLAC__metadata_object_clone@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #118784	; 0x1d000
   12630:	ldr	pc, [ip, #2696]!	; 0xa88

00012634 <sigfillset@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #118784	; 0x1d000
   1263c:	ldr	pc, [ip, #2688]!	; 0xa80

00012640 <alphasort64@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #118784	; 0x1d000
   12648:	ldr	pc, [ip, #2680]!	; 0xa78

0001264c <textdomain@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #118784	; 0x1d000
   12654:	ldr	pc, [ip, #2672]!	; 0xa70

00012658 <__fprintf_chk@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #118784	; 0x1d000
   12660:	ldr	pc, [ip, #2664]!	; 0xa68

00012664 <vorbis_comment_query@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #118784	; 0x1d000
   1266c:	ldr	pc, [ip, #2656]!	; 0xa60

00012670 <putchar@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #118784	; 0x1d000
   12678:	ldr	pc, [ip, #2648]!	; 0xa58

0001267c <memset@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #118784	; 0x1d000
   12684:	ldr	pc, [ip, #2640]!	; 0xa50

00012688 <srandom@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #118784	; 0x1d000
   12690:	ldr	pc, [ip, #2632]!	; 0xa48

00012694 <ov_bitrate@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #118784	; 0x1d000
   1269c:	ldr	pc, [ip, #2624]!	; 0xa40

000126a0 <fcntl@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #118784	; 0x1d000
   126a8:	ldr	pc, [ip, #2616]!	; 0xa38

000126ac <pthread_sigmask@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #118784	; 0x1d000
   126b4:	ldr	pc, [ip, #2608]!	; 0xa30

000126b8 <speex_decode@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #118784	; 0x1d000
   126c0:	ldr	pc, [ip, #2600]!	; 0xa28

000126c4 <__strdup@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #118784	; 0x1d000
   126cc:	ldr	pc, [ip, #2592]!	; 0xa20

000126d0 <sigaddset@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #118784	; 0x1d000
   126d8:	ldr	pc, [ip, #2584]!	; 0xa18

000126dc <pthread_mutex_trylock@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #118784	; 0x1d000
   126e4:	ldr	pc, [ip, #2576]!	; 0xa10

000126e8 <setlinebuf@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #118784	; 0x1d000
   126f0:	ldr	pc, [ip, #2568]!	; 0xa08

000126f4 <FLAC__stream_decoder_finish@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #118784	; 0x1d000
   126fc:	ldr	pc, [ip, #2560]!	; 0xa00

00012700 <abort@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #118784	; 0x1d000
   12708:	ldr	pc, [ip, #2552]!	; 0x9f8

0001270c <ogg_page_serialno@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #118784	; 0x1d000
   12714:	ldr	pc, [ip, #2544]!	; 0x9f0

00012718 <__ctype_toupper_loc@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #118784	; 0x1d000
   12720:	ldr	pc, [ip, #2536]!	; 0x9e8

00012724 <ao_play@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #118784	; 0x1d000
   1272c:	ldr	pc, [ip, #2528]!	; 0x9e0

00012730 <ov_read_filter@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #118784	; 0x1d000
   12738:	ldr	pc, [ip, #2520]!	; 0x9d8

0001273c <kill@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #118784	; 0x1d000
   12744:	ldr	pc, [ip, #2512]!	; 0x9d0

00012748 <FLAC__stream_decoder_set_md5_checking@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #118784	; 0x1d000
   12750:	ldr	pc, [ip, #2504]!	; 0x9c8

00012754 <realloc@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #118784	; 0x1d000
   1275c:	ldr	pc, [ip, #2496]!	; 0x9c0

00012760 <strcpy@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #118784	; 0x1d000
   12768:	ldr	pc, [ip, #2488]!	; 0x9b8

0001276c <ov_comment@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #118784	; 0x1d000
   12774:	ldr	pc, [ip, #2480]!	; 0x9b0

00012778 <__assert_fail@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #118784	; 0x1d000
   12780:	ldr	pc, [ip, #2472]!	; 0x9a8

00012784 <curl_easy_cleanup@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #118784	; 0x1d000
   1278c:	ldr	pc, [ip, #2464]!	; 0x9a0

00012790 <strtod@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #118784	; 0x1d000
   12798:	ldr	pc, [ip, #2456]!	; 0x998

0001279c <FLAC__stream_decoder_new@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #118784	; 0x1d000
   127a4:	ldr	pc, [ip, #2448]!	; 0x990

000127a8 <pthread_mutex_destroy@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #118784	; 0x1d000
   127b0:	ldr	pc, [ip, #2440]!	; 0x988

000127b4 <ao_driver_id@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #118784	; 0x1d000
   127bc:	ldr	pc, [ip, #2432]!	; 0x980

000127c0 <FLAC__stream_decoder_set_metadata_respond@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #118784	; 0x1d000
   127c8:	ldr	pc, [ip, #2424]!	; 0x978

000127cc <fread@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #118784	; 0x1d000
   127d4:	ldr	pc, [ip, #2416]!	; 0x970

000127d8 <ao_close@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #118784	; 0x1d000
   127e0:	ldr	pc, [ip, #2408]!	; 0x968

000127e4 <__stack_chk_fail@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #118784	; 0x1d000
   127ec:	ldr	pc, [ip, #2400]!	; 0x960

000127f0 <dcgettext@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #118784	; 0x1d000
   127f8:	ldr	pc, [ip, #2392]!	; 0x958

000127fc <__strcpy_chk@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #118784	; 0x1d000
   12804:	ldr	pc, [ip, #2384]!	; 0x950

00012808 <curl_slist_free_all@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #118784	; 0x1d000
   12810:	ldr	pc, [ip, #2376]!	; 0x948

00012814 <FLAC__stream_decoder_delete@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #118784	; 0x1d000
   1281c:	ldr	pc, [ip, #2368]!	; 0x940

00012820 <ao_default_driver_id@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #118784	; 0x1d000
   12828:	ldr	pc, [ip, #2360]!	; 0x938

0001282c <sem_init@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #118784	; 0x1d000
   12834:	ldr	pc, [ip, #2352]!	; 0x930

00012838 <ogg_sync_wrote@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #118784	; 0x1d000
   12840:	ldr	pc, [ip, #2344]!	; 0x928

00012844 <strncasecmp@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #118784	; 0x1d000
   1284c:	ldr	pc, [ip, #2336]!	; 0x920

00012850 <FLAC__stream_decoder_init_ogg_stream@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #118784	; 0x1d000
   12858:	ldr	pc, [ip, #2328]!	; 0x918

0001285c <getopt_long@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #118784	; 0x1d000
   12864:	ldr	pc, [ip, #2320]!	; 0x910

00012868 <select@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #118784	; 0x1d000
   12870:	ldr	pc, [ip, #2312]!	; 0x908

00012874 <raise@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #118784	; 0x1d000
   1287c:	ldr	pc, [ip, #2304]!	; 0x900

00012880 <__ctype_b_loc@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #118784	; 0x1d000
   12888:	ldr	pc, [ip, #2296]!	; 0x8f8

0001288c <pthread_cond_wait@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #118784	; 0x1d000
   12894:	ldr	pc, [ip, #2288]!	; 0x8f0

00012898 <bindtextdomain@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #118784	; 0x1d000
   128a0:	ldr	pc, [ip, #2280]!	; 0x8e8

000128a4 <calloc@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #118784	; 0x1d000
   128ac:	ldr	pc, [ip, #2272]!	; 0x8e0

000128b0 <ftell@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #118784	; 0x1d000
   128b8:	ldr	pc, [ip, #2264]!	; 0x8d8

000128bc <__vfprintf_chk@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #118784	; 0x1d000
   128c4:	ldr	pc, [ip, #2256]!	; 0x8d0

000128c8 <setlocale@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #118784	; 0x1d000
   128d0:	ldr	pc, [ip, #2248]!	; 0x8c8

000128d4 <ov_open_callbacks@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #118784	; 0x1d000
   128dc:	ldr	pc, [ip, #2240]!	; 0x8c0

000128e0 <curl_easy_setopt@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #118784	; 0x1d000
   128e8:	ldr	pc, [ip, #2232]!	; 0x8b8

000128ec <speex_std_stereo_request_handler@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #118784	; 0x1d000
   128f4:	ldr	pc, [ip, #2224]!	; 0x8b0

000128f8 <iconv_close@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #118784	; 0x1d000
   12900:	ldr	pc, [ip, #2216]!	; 0x8a8

00012904 <fgets@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #118784	; 0x1d000
   1290c:	ldr	pc, [ip, #2208]!	; 0x8a0

00012910 <sem_post@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #118784	; 0x1d000
   12918:	ldr	pc, [ip, #2200]!	; 0x898

0001291c <fputc@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #118784	; 0x1d000
   12924:	ldr	pc, [ip, #2192]!	; 0x890

00012928 <ao_open_live@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #118784	; 0x1d000
   12930:	ldr	pc, [ip, #2184]!	; 0x888

00012934 <memcpy@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #118784	; 0x1d000
   1293c:	ldr	pc, [ip, #2176]!	; 0x880

00012940 <ogg_stream_pagein@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #118784	; 0x1d000
   12948:	ldr	pc, [ip, #2168]!	; 0x878

0001294c <FLAC__stream_decoder_process_single@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #118784	; 0x1d000
   12954:	ldr	pc, [ip, #2160]!	; 0x870

00012958 <malloc@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #118784	; 0x1d000
   12960:	ldr	pc, [ip, #2152]!	; 0x868

00012964 <ov_info@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #118784	; 0x1d000
   1296c:	ldr	pc, [ip, #2144]!	; 0x860

00012970 <ao_shutdown@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #118784	; 0x1d000
   12978:	ldr	pc, [ip, #2136]!	; 0x858

0001297c <strlen@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #118784	; 0x1d000
   12984:	ldr	pc, [ip, #2128]!	; 0x850

00012988 <speex_decoder_ctl@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #118784	; 0x1d000
   12990:	ldr	pc, [ip, #2120]!	; 0x848

00012994 <ogg_stream_packetout@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #118784	; 0x1d000
   1299c:	ldr	pc, [ip, #2112]!	; 0x840

000129a0 <pthread_testcancel@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #118784	; 0x1d000
   129a8:	ldr	pc, [ip, #2104]!	; 0x838

000129ac <tanh@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #118784	; 0x1d000
   129b4:	ldr	pc, [ip, #2096]!	; 0x830

000129b8 <fclose@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #118784	; 0x1d000
   129c0:	ldr	pc, [ip, #2088]!	; 0x828

000129c4 <ao_is_big_endian@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #118784	; 0x1d000
   129cc:	ldr	pc, [ip, #2080]!	; 0x820

000129d0 <ogg_sync_buffer@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #118784	; 0x1d000
   129d8:	ldr	pc, [ip, #2072]!	; 0x818

000129dc <__stpcpy_chk@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #118784	; 0x1d000
   129e4:	ldr	pc, [ip, #2064]!	; 0x810

000129e8 <speex_decode_stereo@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #118784	; 0x1d000
   129f0:	ldr	pc, [ip, #2056]!	; 0x808

000129f4 <random@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #118784	; 0x1d000
   129fc:	ldr	pc, [ip, #2048]!	; 0x800

00012a00 <iconv_open@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #118784	; 0x1d000
   12a08:	ldr	pc, [ip, #2040]!	; 0x7f8

00012a0c <ogg_sync_pageout@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #118784	; 0x1d000
   12a14:	ldr	pc, [ip, #2032]!	; 0x7f0

00012a18 <pthread_create@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #118784	; 0x1d000
   12a20:	ldr	pc, [ip, #2024]!	; 0x7e8

00012a24 <strcmp@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #118784	; 0x1d000
   12a2c:	ldr	pc, [ip, #2016]!	; 0x7e0

00012a30 <time@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #118784	; 0x1d000
   12a38:	ldr	pc, [ip, #2008]!	; 0x7d8

00012a3c <iconv@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #118784	; 0x1d000
   12a44:	ldr	pc, [ip, #2000]!	; 0x7d0

00012a48 <__errno_location@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #118784	; 0x1d000
   12a50:	ldr	pc, [ip, #1992]!	; 0x7c8

00012a54 <strncpy@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #118784	; 0x1d000
   12a5c:	ldr	pc, [ip, #1984]!	; 0x7c0

00012a60 <__strcat_chk@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #118784	; 0x1d000
   12a68:	ldr	pc, [ip, #1976]!	; 0x7b8

00012a6c <_Unwind_Resume@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #118784	; 0x1d000
   12a74:	ldr	pc, [ip, #1968]!	; 0x7b0

00012a78 <fopen64@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #118784	; 0x1d000
   12a80:	ldr	pc, [ip, #1960]!	; 0x7a8

00012a84 <memcmp@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #118784	; 0x1d000
   12a8c:	ldr	pc, [ip, #1952]!	; 0x7a0

00012a90 <__sprintf_chk@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #118784	; 0x1d000
   12a98:	ldr	pc, [ip, #1944]!	; 0x798

00012a9c <strrchr@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #118784	; 0x1d000
   12aa4:	ldr	pc, [ip, #1936]!	; 0x790

00012aa8 <ogg_stream_init@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #118784	; 0x1d000
   12ab0:	ldr	pc, [ip, #1928]!	; 0x788

00012ab4 <ov_bitrate_instant@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #118784	; 0x1d000
   12abc:	ldr	pc, [ip, #1920]!	; 0x780

00012ac0 <speex_bits_init@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #118784	; 0x1d000
   12ac8:	ldr	pc, [ip, #1912]!	; 0x778

00012acc <__ctype_tolower_loc@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #118784	; 0x1d000
   12ad4:	ldr	pc, [ip, #1904]!	; 0x770

00012ad8 <speex_bits_read_from@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #118784	; 0x1d000
   12ae0:	ldr	pc, [ip, #1896]!	; 0x768

00012ae4 <fputs@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #118784	; 0x1d000
   12aec:	ldr	pc, [ip, #1888]!	; 0x760

00012af0 <getenv@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #118784	; 0x1d000
   12af8:	ldr	pc, [ip, #1880]!	; 0x758

00012afc <__libc_start_main@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #118784	; 0x1d000
   12b04:	ldr	pc, [ip, #1872]!	; 0x750

00012b08 <FLAC__stream_decoder_get_state@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #118784	; 0x1d000
   12b10:	ldr	pc, [ip, #1864]!	; 0x748

00012b14 <ov_pcm_tell@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #118784	; 0x1d000
   12b1c:	ldr	pc, [ip, #1856]!	; 0x740

00012b20 <__gmon_start__@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #118784	; 0x1d000
   12b28:	ldr	pc, [ip, #1848]!	; 0x738

00012b2c <FLAC__stream_decoder_init_stream@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #118784	; 0x1d000
   12b34:	ldr	pc, [ip, #1840]!	; 0x730

00012b38 <sem_wait@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #118784	; 0x1d000
   12b40:	ldr	pc, [ip, #1832]!	; 0x728

00012b44 <strchr@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #118784	; 0x1d000
   12b4c:	ldr	pc, [ip, #1824]!	; 0x720

00012b50 <pthread_mutex_unlock@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #118784	; 0x1d000
   12b58:	ldr	pc, [ip, #1816]!	; 0x718

00012b5c <ov_time_tell@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #118784	; 0x1d000
   12b64:	ldr	pc, [ip, #1808]!	; 0x710

00012b68 <__printf_chk@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #118784	; 0x1d000
   12b70:	ldr	pc, [ip, #1800]!	; 0x708

Disassembly of section .text:

00012b78 <.text>:
   12b78:	movw	r3, #1408	; 0x580
   12b7c:	movt	r3, #3
   12b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b84:	sub	sp, sp, #132	; 0x84
   12b88:	ldr	r3, [r3]
   12b8c:	mov	r9, r1
   12b90:	mov	r7, r0
   12b94:	movw	r1, #53056	; 0xcf40
   12b98:	mov	r0, #6
   12b9c:	movt	r1, #1
   12ba0:	str	r3, [sp, #124]	; 0x7c
   12ba4:	bl	128c8 <setlocale@plt>
   12ba8:	movw	r0, #52956	; 0xcedc
   12bac:	movw	r1, #56788	; 0xddd4
   12bb0:	movt	r0, #1
   12bb4:	movt	r1, #1
   12bb8:	bl	12898 <bindtextdomain@plt>
   12bbc:	movw	r0, #52956	; 0xcedc
   12bc0:	movt	r0, #1
   12bc4:	movw	r8, #31984	; 0x7cf0
   12bc8:	bl	1264c <textdomain@plt>
   12bcc:	movt	r8, #3
   12bd0:	bl	1249c <ao_initialize@plt>
   12bd4:	movw	r6, #31888	; 0x7c90
   12bd8:	bl	18ad0 <__printf_chk@plt+0x5f68>
   12bdc:	movt	r6, #3
   12be0:	mov	r2, #0
   12be4:	mov	r1, #2
   12be8:	mov	r4, #500	; 0x1f4
   12bec:	mov	r5, #0
   12bf0:	str	r1, [r6]
   12bf4:	mov	ip, #0
   12bf8:	strd	r4, [r6, #16]
   12bfc:	mov	r1, #131072	; 0x20000
   12c00:	str	ip, [r6, #56]	; 0x38
   12c04:	mov	r4, #0
   12c08:	str	r1, [r6, #52]	; 0x34
   12c0c:	mov	r3, #0
   12c10:	mov	r1, #65536	; 0x10000
   12c14:	movt	r3, #49136	; 0xbff0
   12c18:	str	r1, [r6, #60]	; 0x3c
   12c1c:	mov	sl, #0
   12c20:	mov	r1, #0
   12c24:	strd	r2, [r6, #40]	; 0x28
   12c28:	str	r1, [r6, #4]
   12c2c:	mov	fp, #0
   12c30:	str	r1, [r6, #48]	; 0x30
   12c34:	mov	ip, #0
   12c38:	str	r1, [r6, #68]	; 0x44
   12c3c:	movt	ip, #16968	; 0x4248
   12c40:	str	r1, [r6, #92]	; 0x5c
   12c44:	mov	r5, #0
   12c48:	str	r1, [r6, #88]	; 0x58
   12c4c:	movt	r5, #16420	; 0x4024
   12c50:	str	r1, [r6, #8]
   12c54:	strd	r4, [r6, #80]	; 0x50
   12c58:	str	ip, [r6, #64]	; 0x40
   12c5c:	mov	ip, #1
   12c60:	strd	sl, [r6, #32]
   12c64:	str	ip, [r6, #24]
   12c68:	str	ip, [r6, #28]
   12c6c:	str	r0, [r8]
   12c70:	ldr	r0, [pc, #804]	; 12f9c <__printf_chk@plt+0x434>
   12c74:	bl	148a0 <__printf_chk@plt+0x1d38>
   12c78:	ldr	r0, [pc, #796]	; 12f9c <__printf_chk@plt+0x434>
   12c7c:	bl	1543c <__printf_chk@plt+0x28d4>
   12c80:	bl	18078 <__printf_chk@plt+0x5510>
   12c84:	mov	r1, r9
   12c88:	mov	r2, r6
   12c8c:	ldr	r3, [pc, #776]	; 12f9c <__printf_chk@plt+0x434>
   12c90:	str	r0, [r6, #92]	; 0x5c
   12c94:	mov	r0, r7
   12c98:	bl	15ab8 <__printf_chk@plt+0x2f50>
   12c9c:	ldr	r1, [r8]
   12ca0:	ldr	r2, [r6, #72]	; 0x48
   12ca4:	movw	r3, #31880	; 0x7c88
   12ca8:	movt	r3, #3
   12cac:	stm	r3, {r1, r2}
   12cb0:	cmp	r7, r0
   12cb4:	mov	r4, r0
   12cb8:	addgt	r9, r9, r0, lsl #2
   12cbc:	movwgt	r5, #1428	; 0x594
   12cc0:	movtgt	r5, #3
   12cc4:	bgt	12cf4 <__printf_chk@plt+0x18c>
   12cc8:	b	12d50 <__printf_chk@plt+0x1e8>
   12ccc:	ldr	r3, [sp, #32]
   12cd0:	ldr	r0, [r6, #92]	; 0x5c
   12cd4:	and	r3, r3, #61440	; 0xf000
   12cd8:	ldr	r1, [r9, #-4]
   12cdc:	cmp	r3, #16384	; 0x4000
   12ce0:	beq	12d18 <__printf_chk@plt+0x1b0>
   12ce4:	bl	180e4 <__printf_chk@plt+0x557c>
   12ce8:	add	r4, r4, #1
   12cec:	cmp	r4, r7
   12cf0:	beq	12d50 <__printf_chk@plt+0x1e8>
   12cf4:	mov	r0, #3
   12cf8:	ldr	r1, [r9], #4
   12cfc:	add	r2, sp, #16
   12d00:	bl	12538 <__xstat64@plt>
   12d04:	cmp	r0, #0
   12d08:	beq	12ccc <__printf_chk@plt+0x164>
   12d0c:	ldr	r0, [r6, #92]	; 0x5c
   12d10:	ldr	r1, [r9, #-4]
   12d14:	b	12ce4 <__printf_chk@plt+0x17c>
   12d18:	bl	18110 <__printf_chk@plt+0x55a8>
   12d1c:	cmp	r0, #0
   12d20:	bne	12ce8 <__printf_chk@plt+0x180>
   12d24:	mov	r2, #5
   12d28:	movw	r1, #56808	; 0xdde8
   12d2c:	movt	r1, #1
   12d30:	ldr	r8, [r5]
   12d34:	bl	127f0 <dcgettext@plt>
   12d38:	mov	r1, #1
   12d3c:	ldr	r3, [r9, #-4]
   12d40:	mov	r2, r0
   12d44:	mov	r0, r8
   12d48:	bl	12658 <__fprintf_chk@plt>
   12d4c:	b	12ce8 <__printf_chk@plt+0x180>
   12d50:	ldr	r0, [r6, #92]	; 0x5c
   12d54:	movw	r4, #31888	; 0x7c90
   12d58:	bl	184fc <__printf_chk@plt+0x5994>
   12d5c:	movt	r4, #3
   12d60:	cmp	r0, #0
   12d64:	bne	12d74 <__printf_chk@plt+0x20c>
   12d68:	bl	154f0 <__printf_chk@plt+0x2988>
   12d6c:	mov	r0, #1
   12d70:	bl	12598 <exit@plt>
   12d74:	add	r1, sp, #12
   12d78:	ldr	r0, [r4, #92]	; 0x5c
   12d7c:	bl	1852c <__printf_chk@plt+0x59c4>
   12d80:	mov	r5, #0
   12d84:	mov	r8, r0
   12d88:	ldr	r0, [r4, #92]	; 0x5c
   12d8c:	bl	180a4 <__printf_chk@plt+0x553c>
   12d90:	ldr	r0, [r4]
   12d94:	str	r5, [r4, #92]	; 0x5c
   12d98:	bl	18d74 <__printf_chk@plt+0x620c>
   12d9c:	ldr	r0, [r4, #72]	; 0x48
   12da0:	bl	171fc <__printf_chk@plt+0x4694>
   12da4:	ldr	r3, [r4, #52]	; 0x34
   12da8:	cmp	r3, r5
   12dac:	ble	12f10 <__printf_chk@plt+0x3a8>
   12db0:	add	r0, r3, #15104	; 0x3b00
   12db4:	movw	r1, #15120	; 0x3b10
   12db8:	add	r0, r0, #15
   12dbc:	movw	r7, #1456	; 0x5b0
   12dc0:	bl	1c3b4 <__printf_chk@plt+0x984c>
   12dc4:	movw	r1, #15120	; 0x3b10
   12dc8:	vldr	s14, [r4, #56]	; 0x38
   12dcc:	vldr	s15, [pc, #452]	; 12f98 <__printf_chk@plt+0x430>
   12dd0:	vmul.f32	s14, s14, s15
   12dd4:	movw	r3, #30240	; 0x7620
   12dd8:	movw	r2, #16660	; 0x4114
   12ddc:	str	r3, [sp]
   12de0:	movt	r2, #1
   12de4:	movw	r3, #31880	; 0x7c88
   12de8:	movt	r3, #3
   12dec:	movt	r7, #3
   12df0:	mul	r1, r1, r0
   12df4:	vmov	s13, r1
   12df8:	mov	r0, r1
   12dfc:	str	r1, [r4, #52]	; 0x34
   12e00:	vcvt.f32.s32	s15, s13
   12e04:	vmul.f32	s15, s14, s15
   12e08:	vcvt.s32.f32	s15, s15
   12e0c:	vmov	r1, s15
   12e10:	bl	13760 <__printf_chk@plt+0xbf8>
   12e14:	cmp	r0, r5
   12e18:	str	r0, [r7, #24]
   12e1c:	beq	12f7c <__printf_chk@plt+0x414>
   12e20:	movw	r1, #27800	; 0x6c98
   12e24:	mov	r0, #2
   12e28:	movt	r1, #1
   12e2c:	bl	12424 <signal@plt>
   12e30:	movw	r1, #27800	; 0x6c98
   12e34:	mov	r0, #20
   12e38:	movt	r1, #1
   12e3c:	bl	12424 <signal@plt>
   12e40:	movw	r1, #27800	; 0x6c98
   12e44:	mov	r0, #18
   12e48:	movt	r1, #1
   12e4c:	bl	12424 <signal@plt>
   12e50:	movw	r1, #27800	; 0x6c98
   12e54:	mov	r0, #15
   12e58:	movt	r1, #1
   12e5c:	bl	12424 <signal@plt>
   12e60:	ldr	r3, [r6, #88]	; 0x58
   12e64:	cmp	r3, #0
   12e68:	bne	12f74 <__printf_chk@plt+0x40c>
   12e6c:	ldr	r3, [r6, #4]
   12e70:	cmp	r3, #0
   12e74:	bne	12f20 <__printf_chk@plt+0x3b8>
   12e78:	ldr	r9, [sp, #12]
   12e7c:	cmp	r9, #0
   12e80:	ble	12ebc <__printf_chk@plt+0x354>
   12e84:	ldr	r4, [r7, #8]
   12e88:	cmp	r4, #0
   12e8c:	subeq	r5, r8, #4
   12e90:	beq	12ea4 <__printf_chk@plt+0x33c>
   12e94:	b	12ebc <__printf_chk@plt+0x354>
   12e98:	ldr	r3, [r7, #8]
   12e9c:	cmp	r3, #0
   12ea0:	bne	12ebc <__printf_chk@plt+0x354>
   12ea4:	ldr	r0, [r5, #4]!
   12ea8:	add	r4, r4, #1
   12eac:	bl	172a0 <__printf_chk@plt+0x4738>
   12eb0:	ldr	r3, [sp, #12]
   12eb4:	cmp	r3, r4
   12eb8:	bgt	12e98 <__printf_chk@plt+0x330>
   12ebc:	ldr	r3, [r6, #8]
   12ec0:	cmp	r3, #0
   12ec4:	bne	12e6c <__printf_chk@plt+0x304>
   12ec8:	mov	r0, r8
   12ecc:	ldr	r1, [sp, #12]
   12ed0:	bl	1861c <__printf_chk@plt+0x5ab4>
   12ed4:	movw	r4, #1456	; 0x5b0
   12ed8:	bl	18da8 <__printf_chk@plt+0x6240>
   12edc:	ldr	r0, [r7, #24]
   12ee0:	movt	r4, #3
   12ee4:	cmp	r0, #0
   12ee8:	beq	12ef8 <__printf_chk@plt+0x390>
   12eec:	bl	13908 <__printf_chk@plt+0xda0>
   12ef0:	mov	r3, #0
   12ef4:	str	r3, [r4, #24]
   12ef8:	ldr	r0, [r6, #72]	; 0x48
   12efc:	bl	132c0 <__printf_chk@plt+0x758>
   12f00:	movw	r3, #1548	; 0x60c
   12f04:	movt	r3, #3
   12f08:	ldr	r0, [r3]
   12f0c:	bl	12598 <exit@plt>
   12f10:	movw	r7, #1456	; 0x5b0
   12f14:	movt	r7, #3
   12f18:	str	r5, [r7, #24]
   12f1c:	b	12e20 <__printf_chk@plt+0x2b8>
   12f20:	mov	r0, #0
   12f24:	bl	12a30 <time@plt>
   12f28:	bl	12688 <srandom@plt>
   12f2c:	ldr	r3, [sp, #12]
   12f30:	cmp	r3, #0
   12f34:	ble	12ebc <__printf_chk@plt+0x354>
   12f38:	mov	r5, r8
   12f3c:	mov	r4, #0
   12f40:	bl	129f4 <random@plt>
   12f44:	ldr	r9, [sp, #12]
   12f48:	ldr	sl, [r5]
   12f4c:	rsb	r1, r4, r9
   12f50:	bl	1c5d4 <__printf_chk@plt+0x9a6c>
   12f54:	add	r1, r1, r4
   12f58:	add	r4, r4, #1
   12f5c:	cmp	r9, r4
   12f60:	ldr	r3, [r8, r1, lsl #2]
   12f64:	str	r3, [r5], #4
   12f68:	str	sl, [r8, r1, lsl #2]
   12f6c:	bgt	12f40 <__printf_chk@plt+0x3d8>
   12f70:	b	12e7c <__printf_chk@plt+0x314>
   12f74:	bl	19570 <__printf_chk@plt+0x6a08>
   12f78:	b	12ec8 <__printf_chk@plt+0x360>
   12f7c:	mov	r2, #5
   12f80:	movw	r1, #56848	; 0xde10
   12f84:	movt	r1, #1
   12f88:	bl	127f0 <dcgettext@plt>
   12f8c:	bl	19028 <__printf_chk@plt+0x64c0>
   12f90:	mov	r0, #1
   12f94:	bl	12598 <exit@plt>
   12f98:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   12f9c:	andeq	r0, r3, r4, asr #8
   12fa0:	mov	fp, #0
   12fa4:	mov	lr, #0
   12fa8:	pop	{r1}		; (ldr r1, [sp], #4)
   12fac:	mov	r2, sp
   12fb0:	push	{r2}		; (str r2, [sp, #-4]!)
   12fb4:	push	{r0}		; (str r0, [sp, #-4]!)
   12fb8:	ldr	ip, [pc, #16]	; 12fd0 <__printf_chk@plt+0x468>
   12fbc:	push	{ip}		; (str ip, [sp, #-4]!)
   12fc0:	ldr	r0, [pc, #12]	; 12fd4 <__printf_chk@plt+0x46c>
   12fc4:	ldr	r3, [pc, #12]	; 12fd8 <__printf_chk@plt+0x470>
   12fc8:	bl	12afc <__libc_start_main@plt>
   12fcc:	bl	12700 <abort@plt>
   12fd0:	andeq	ip, r1, r0, lsr #20
   12fd4:	andeq	r2, r1, r8, ror fp
   12fd8:			; <UNDEFINED> instruction: 0x0001c9bc
   12fdc:	ldr	r3, [pc, #20]	; 12ff8 <__printf_chk@plt+0x490>
   12fe0:	ldr	r2, [pc, #20]	; 12ffc <__printf_chk@plt+0x494>
   12fe4:	add	r3, pc, r3
   12fe8:	ldr	r2, [r3, r2]
   12fec:	cmp	r2, #0
   12ff0:	bxeq	lr
   12ff4:	b	12b20 <__gmon_start__@plt>
   12ff8:	andeq	sp, r1, r4, lsl r0
   12ffc:	andeq	r0, r0, ip, ror r2
   13000:	push	{r3, lr}
   13004:	movw	r0, #1400	; 0x578
   13008:	ldr	r3, [pc, #36]	; 13034 <__printf_chk@plt+0x4cc>
   1300c:	movt	r0, #3
   13010:	rsb	r3, r0, r3
   13014:	cmp	r3, #6
   13018:	popls	{r3, pc}
   1301c:	movw	r3, #0
   13020:	movt	r3, #0
   13024:	cmp	r3, #0
   13028:	popeq	{r3, pc}
   1302c:	blx	r3
   13030:	pop	{r3, pc}
   13034:	andeq	r0, r3, fp, ror r5
   13038:	push	{r3, lr}
   1303c:	movw	r0, #1400	; 0x578
   13040:	movw	r3, #1400	; 0x578
   13044:	movt	r0, #3
   13048:	movt	r3, #3
   1304c:	rsb	r3, r0, r3
   13050:	asr	r3, r3, #2
   13054:	add	r3, r3, r3, lsr #31
   13058:	asrs	r1, r3, #1
   1305c:	popeq	{r3, pc}
   13060:	movw	r2, #0
   13064:	movt	r2, #0
   13068:	cmp	r2, #0
   1306c:	popeq	{r3, pc}
   13070:	blx	r2
   13074:	pop	{r3, pc}
   13078:	push	{r4, lr}
   1307c:	movw	r4, #1452	; 0x5ac
   13080:	movt	r4, #3
   13084:	ldrb	r3, [r4]
   13088:	cmp	r3, #0
   1308c:	popne	{r4, pc}
   13090:	bl	13000 <__printf_chk@plt+0x498>
   13094:	mov	r3, #1
   13098:	strb	r3, [r4]
   1309c:	pop	{r4, pc}
   130a0:	movw	r0, #65204	; 0xfeb4
   130a4:	movt	r0, #2
   130a8:	push	{r3, lr}
   130ac:	ldr	r3, [r0]
   130b0:	cmp	r3, #0
   130b4:	beq	130cc <__printf_chk@plt+0x564>
   130b8:	movw	r3, #0
   130bc:	movt	r3, #0
   130c0:	cmp	r3, #0
   130c4:	beq	130cc <__printf_chk@plt+0x564>
   130c8:	blx	r3
   130cc:	pop	{r3, lr}
   130d0:	b	13038 <__printf_chk@plt+0x4d0>
   130d4:	push	{r3, lr}
   130d8:	ldr	r2, [r0]
   130dc:	ldr	r3, [r1]
   130e0:	cmp	r2, r3
   130e4:	beq	130f0 <__printf_chk@plt+0x588>
   130e8:	mov	r0, #0
   130ec:	pop	{r3, pc}
   130f0:	ldr	r2, [r0, #4]
   130f4:	ldr	r3, [r1, #4]
   130f8:	cmp	r2, r3
   130fc:	bne	130e8 <__printf_chk@plt+0x580>
   13100:	ldr	r2, [r0, #8]
   13104:	ldr	r3, [r1, #8]
   13108:	cmp	r2, r3
   1310c:	bne	130e8 <__printf_chk@plt+0x580>
   13110:	ldr	r2, [r0, #12]
   13114:	ldr	r3, [r1, #12]
   13118:	cmp	r2, r3
   1311c:	bne	130e8 <__printf_chk@plt+0x580>
   13120:	ldr	r2, [r0, #16]
   13124:	ldr	r3, [r1, #16]
   13128:	cmp	r2, r3
   1312c:	bne	130e8 <__printf_chk@plt+0x580>
   13130:	ldr	r0, [r0, #20]
   13134:	ldr	r1, [r1, #20]
   13138:	cmp	r0, #0
   1313c:	beq	13150 <__printf_chk@plt+0x5e8>
   13140:	bl	12a24 <strcmp@plt>
   13144:	rsbs	r0, r0, #1
   13148:	movcc	r0, #0
   1314c:	pop	{r3, pc}
   13150:	cmp	r1, #0
   13154:	bne	13140 <__printf_chk@plt+0x5d8>
   13158:	mov	r0, #1
   1315c:	pop	{r3, pc}
   13160:	push	{r3, r4, r5, r6, r7, lr}
   13164:	subs	r4, r0, #0
   13168:	mov	r5, r1
   1316c:	mov	r6, r2
   13170:	mov	r7, r3
   13174:	bne	13180 <__printf_chk@plt+0x618>
   13178:	b	131bc <__printf_chk@plt+0x654>
   1317c:	mov	r4, ip
   13180:	ldr	ip, [r4, #16]
   13184:	cmp	ip, #0
   13188:	bne	1317c <__printf_chk@plt+0x614>
   1318c:	mov	r0, #20
   13190:	bl	12958 <malloc@plt>
   13194:	mov	ip, r0
   13198:	str	r0, [r4, #16]
   1319c:	mov	r1, #0
   131a0:	str	r5, [ip]
   131a4:	str	r6, [ip, #8]
   131a8:	mov	r0, ip
   131ac:	str	r7, [ip, #12]
   131b0:	str	r1, [ip, #4]
   131b4:	str	r1, [ip, #16]
   131b8:	pop	{r3, r4, r5, r6, r7, pc}
   131bc:	mov	r0, #20
   131c0:	bl	12958 <malloc@plt>
   131c4:	mov	ip, r0
   131c8:	b	1319c <__printf_chk@plt+0x634>
   131cc:	push	{r4, r5, r6, lr}
   131d0:	subs	r4, r0, #0
   131d4:	mov	r6, r1
   131d8:	mov	r5, r2
   131dc:	beq	13204 <__printf_chk@plt+0x69c>
   131e0:	ldr	r0, [r4, #4]
   131e4:	mov	r1, r6
   131e8:	mov	r2, r5
   131ec:	bl	12724 <ao_play@plt>
   131f0:	cmp	r0, #0
   131f4:	popeq	{r4, r5, r6, pc}
   131f8:	ldr	r4, [r4, #16]
   131fc:	cmp	r4, #0
   13200:	bne	131e0 <__printf_chk@plt+0x678>
   13204:	mov	r0, #1
   13208:	pop	{r4, r5, r6, pc}
   1320c:	push	{r3, r4, r5, lr}
   13210:	mov	r5, r0
   13214:	mov	r0, r1
   13218:	bl	126c4 <__strdup@plt>
   1321c:	subs	r4, r0, #0
   13220:	beq	13260 <__printf_chk@plt+0x6f8>
   13224:	mov	r1, #58	; 0x3a
   13228:	bl	12b44 <strchr@plt>
   1322c:	cmp	r0, #0
   13230:	addne	r2, r0, #1
   13234:	movne	r1, #0
   13238:	moveq	r2, r0
   1323c:	strbne	r1, [r0]
   13240:	mov	r1, r4
   13244:	mov	r0, r5
   13248:	bl	124cc <ao_append_option@plt>
   1324c:	mov	r5, r0
   13250:	mov	r0, r4
   13254:	bl	12520 <free@plt>
   13258:	mov	r0, r5
   1325c:	pop	{r3, r4, r5, pc}
   13260:	mov	r0, r4
   13264:	pop	{r3, r4, r5, pc}
   13268:	push	{r3, r4, r5, lr}
   1326c:	subs	r4, r0, #0
   13270:	popeq	{r3, r4, r5, pc}
   13274:	mov	r5, #0
   13278:	ldr	r0, [r4, #4]
   1327c:	cmp	r0, #0
   13280:	beq	13288 <__printf_chk@plt+0x720>
   13284:	bl	127d8 <ao_close@plt>
   13288:	str	r5, [r4, #4]
   1328c:	ldr	r4, [r4, #16]
   13290:	cmp	r4, #0
   13294:	bne	13278 <__printf_chk@plt+0x710>
   13298:	pop	{r3, r4, r5, pc}
   1329c:	cmp	r0, #0
   132a0:	push	{r4, lr}
   132a4:	popeq	{r4, pc}
   132a8:	ldr	r4, [r0, #16]
   132ac:	bl	12520 <free@plt>
   132b0:	cmp	r4, #0
   132b4:	mov	r0, r4
   132b8:	bne	132a8 <__printf_chk@plt+0x740>
   132bc:	pop	{r4, pc}
   132c0:	push	{r3, r4, r5, lr}
   132c4:	mov	r4, r0
   132c8:	bl	13268 <__printf_chk@plt+0x700>
   132cc:	cmp	r4, #0
   132d0:	beq	132ec <__printf_chk@plt+0x784>
   132d4:	ldr	r5, [r4, #16]
   132d8:	mov	r0, r4
   132dc:	bl	12520 <free@plt>
   132e0:	cmp	r5, #0
   132e4:	mov	r4, r5
   132e8:	bne	132d4 <__printf_chk@plt+0x76c>
   132ec:	pop	{r3, r4, r5, lr}
   132f0:	b	12970 <ao_shutdown@plt>
   132f4:	andeq	r0, r0, r0
   132f8:	ldr	ip, [r0, #140]	; 0x8c
   132fc:	mov	r1, #0
   13300:	mov	r2, #0
   13304:	mov	r3, #0
   13308:	cmp	ip, r1
   1330c:	str	r1, [r0, #156]	; 0x9c
   13310:	str	r1, [r0, #160]	; 0xa0
   13314:	movle	ip, #0
   13318:	movgt	ip, #1
   1331c:	str	r1, [r0, #164]	; 0xa4
   13320:	str	ip, [r0, #152]	; 0x98
   13324:	str	r1, [r0, #148]	; 0x94
   13328:	str	r1, [r0, #168]	; 0xa8
   1332c:	str	r1, [r0, #172]	; 0xac
   13330:	strd	r2, [r0, #176]	; 0xb0
   13334:	strd	r2, [r0, #184]	; 0xb8
   13338:	bx	lr
   1333c:	push	{r4, lr}
   13340:	movw	r4, #1408	; 0x580
   13344:	movt	r4, #3
   13348:	sub	sp, sp, #136	; 0x88
   1334c:	add	r0, sp, #4
   13350:	ldr	r3, [r4]
   13354:	str	r3, [sp, #132]	; 0x84
   13358:	bl	12634 <sigfillset@plt>
   1335c:	mov	r1, #2
   13360:	add	r0, sp, #4
   13364:	bl	126d0 <sigaddset@plt>
   13368:	mov	r1, #20
   1336c:	add	r0, sp, #4
   13370:	bl	126d0 <sigaddset@plt>
   13374:	mov	r1, #18
   13378:	add	r0, sp, #4
   1337c:	bl	126d0 <sigaddset@plt>
   13380:	mov	r0, #0
   13384:	mov	r2, r0
   13388:	add	r1, sp, #4
   1338c:	bl	126ac <pthread_sigmask@plt>
   13390:	ldr	r2, [sp, #132]	; 0x84
   13394:	ldr	r3, [r4]
   13398:	cmp	r2, r3
   1339c:	bne	133a8 <__printf_chk@plt+0x840>
   133a0:	add	sp, sp, #136	; 0x88
   133a4:	pop	{r4, pc}
   133a8:	bl	127e4 <__stack_chk_fail@plt>
   133ac:	bx	lr
   133b0:	add	r0, r0, #12
   133b4:	b	12b50 <pthread_mutex_unlock@plt>
   133b8:	push	{r3, r4, r5, lr}
   133bc:	mov	r4, r0
   133c0:	mov	r0, #24
   133c4:	mov	r5, r1
   133c8:	bl	12958 <malloc@plt>
   133cc:	subs	ip, r0, #0
   133d0:	beq	133f4 <__printf_chk@plt+0x88c>
   133d4:	mov	r2, #0
   133d8:	mov	r3, #0
   133dc:	mov	r1, #0
   133e0:	str	r4, [ip, #8]
   133e4:	str	r5, [ip, #12]
   133e8:	strd	r2, [ip]
   133ec:	str	r1, [ip, #16]
   133f0:	pop	{r3, r4, r5, pc}
   133f4:	movw	r3, #1428	; 0x594
   133f8:	movt	r3, #3
   133fc:	mov	r2, #5
   13400:	movw	r1, #51764	; 0xca34
   13404:	movt	r1, #1
   13408:	ldr	r4, [r3]
   1340c:	bl	127f0 <dcgettext@plt>
   13410:	mov	r1, #1
   13414:	mov	r2, r0
   13418:	mov	r0, r4
   1341c:	bl	12658 <__fprintf_chk@plt>
   13420:	mov	r0, #1
   13424:	bl	12598 <exit@plt>
   13428:	cmp	r2, #0
   1342c:	ldr	ip, [r0]
   13430:	push	{r4, r5, r6, r7}
   13434:	movle	r2, #0
   13438:	movgt	r2, #1
   1343c:	cmp	ip, #0
   13440:	beq	1348c <__printf_chk@plt+0x924>
   13444:	ldrd	r6, [r1]
   13448:	uxtb	r4, r2
   1344c:	ldrd	r2, [ip]
   13450:	mov	r5, #0
   13454:	adds	r4, r4, r6
   13458:	adc	r5, r5, r7
   1345c:	cmp	r4, r2
   13460:	sbcs	r6, r5, r3
   13464:	bge	1347c <__printf_chk@plt+0x914>
   13468:	b	1348c <__printf_chk@plt+0x924>
   1346c:	ldrd	r2, [ip]
   13470:	cmp	r4, r2
   13474:	sbcs	r6, r5, r3
   13478:	blt	1348c <__printf_chk@plt+0x924>
   1347c:	add	r0, ip, #16
   13480:	ldr	ip, [ip, #16]
   13484:	cmp	ip, #0
   13488:	bne	1346c <__printf_chk@plt+0x904>
   1348c:	str	ip, [r1, #16]
   13490:	pop	{r4, r5, r6, r7}
   13494:	str	r1, [r0]
   13498:	bx	lr
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134a0:	mov	sl, r1
   134a4:	ldr	r8, [r1]
   134a8:	mov	r9, r0
   134ac:	mov	r6, r2
   134b0:	mov	r7, r3
   134b4:	cmp	r8, #0
   134b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   134bc:	ldrd	r2, [r8]
   134c0:	cmp	r6, r2
   134c4:	sbcs	r1, r7, r3
   134c8:	poplt	{r4, r5, r6, r7, r8, r9, sl, pc}
   134cc:	ldr	r3, [r8, #8]
   134d0:	mov	r0, r9
   134d4:	ldr	r1, [r8, #12]
   134d8:	blx	r3
   134dc:	ldr	r3, [sl]
   134e0:	mov	r0, r8
   134e4:	ldr	r3, [r3, #16]
   134e8:	str	r3, [sl]
   134ec:	bl	12520 <free@plt>
   134f0:	ldr	r8, [sl]
   134f4:	cmp	r8, #0
   134f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   134fc:	ldrd	r4, [r8]
   13500:	cmp	r6, r4
   13504:	sbcs	r3, r7, r5
   13508:	bge	134cc <__printf_chk@plt+0x964>
   1350c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13510:	b	12520 <free@plt>
   13514:	ldr	r3, [r0, #192]	; 0xc0
   13518:	mov	ip, r1
   1351c:	push	{r4, r5, r6, r7}
   13520:	cmp	r3, #0
   13524:	beq	13584 <__printf_chk@plt+0xa1c>
   13528:	ldr	r1, [r0, #172]	; 0xac
   1352c:	ldr	r6, [r0, #144]	; 0x90
   13530:	ldrd	r4, [r0, #176]	; 0xb0
   13534:	rsb	r6, r1, r6
   13538:	ldrd	r2, [r3]
   1353c:	asr	r7, r6, #31
   13540:	subs	r2, r2, r4
   13544:	sbc	r3, r3, r5
   13548:	cmp	r2, r6
   1354c:	sbcs	r1, r3, r7
   13550:	movlt	r6, r2
   13554:	ldr	r2, [r0, #168]	; 0xa8
   13558:	movlt	r7, r3
   1355c:	mov	r0, r6
   13560:	cmp	r2, ip
   13564:	movge	r2, ip
   13568:	mov	r1, r7
   1356c:	pop	{r4, r5, r6, r7}
   13570:	asr	r3, r2, #31
   13574:	cmp	r2, r0
   13578:	sbcs	ip, r3, r1
   1357c:	movlt	r0, r2
   13580:	bx	lr
   13584:	ldr	r1, [r0, #144]	; 0x90
   13588:	ldr	r2, [r0, #172]	; 0xac
   1358c:	ldr	r3, [r0, #168]	; 0xa8
   13590:	rsb	r0, r2, r1
   13594:	cmp	r0, r3
   13598:	movge	r0, r3
   1359c:	cmp	r0, ip
   135a0:	movge	r0, ip
   135a4:	pop	{r4, r5, r6, r7}
   135a8:	bx	lr
   135ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135b0:	subs	r5, r2, #0
   135b4:	mov	r4, r0
   135b8:	sub	sp, sp, #12
   135bc:	mov	r7, r1
   135c0:	ldr	r0, [r0, #164]	; 0xa4
   135c4:	beq	136f4 <__printf_chk@plt+0xb8c>
   135c8:	cmp	r0, #0
   135cc:	bne	136f4 <__printf_chk@plt+0xb8c>
   135d0:	movw	r8, #1456	; 0x5b0
   135d4:	add	r3, r4, #40	; 0x28
   135d8:	add	r6, r4, #12
   135dc:	movt	r8, #3
   135e0:	add	r9, r4, #88	; 0x58
   135e4:	str	r3, [sp, #4]
   135e8:	b	13698 <__printf_chk@plt+0xb30>
   135ec:	ldr	r0, [r4, #172]	; 0xac
   135f0:	mov	r1, sl
   135f4:	add	r0, r3, r0
   135f8:	bl	1c5d4 <__printf_chk@plt+0x9a6c>
   135fc:	rsb	r3, r1, sl
   13600:	add	r0, r4, r1
   13604:	cmp	r3, fp
   13608:	movge	r3, fp
   1360c:	mov	r1, r7
   13610:	cmp	r5, r3
   13614:	movcc	fp, r5
   13618:	movcs	fp, r3
   1361c:	add	r0, r0, #196	; 0xc4
   13620:	rsb	r5, fp, r5
   13624:	add	r7, r7, fp
   13628:	mov	r2, fp
   1362c:	bl	12934 <memcpy@plt>
   13630:	ldrd	r0, [r4, #184]	; 0xb8
   13634:	ldr	r2, [r4, #168]	; 0xa8
   13638:	adds	r0, r0, fp
   1363c:	add	r2, r2, fp
   13640:	adc	r1, r1, #0
   13644:	str	r2, [r4, #168]	; 0xa8
   13648:	strd	r0, [r4, #184]	; 0xb8
   1364c:	ldr	r3, [r4, #152]	; 0x98
   13650:	cmp	r3, #0
   13654:	beq	13670 <__printf_chk@plt+0xb08>
   13658:	ldr	r3, [r4, #168]	; 0xa8
   1365c:	ldr	r2, [r4, #140]	; 0x8c
   13660:	cmp	r2, r3
   13664:	movle	r3, #0
   13668:	strle	r3, [r4, #152]	; 0x98
   1366c:	bgt	1367c <__printf_chk@plt+0xb14>
   13670:	ldr	r3, [r4, #156]	; 0x9c
   13674:	cmp	r3, #0
   13678:	beq	136dc <__printf_chk@plt+0xb74>
   1367c:	mov	r0, r6
   13680:	bl	12b50 <pthread_mutex_unlock@plt>
   13684:	cmp	r5, #0
   13688:	ldr	r0, [r4, #164]	; 0xa4
   1368c:	beq	136f4 <__printf_chk@plt+0xb8c>
   13690:	cmp	r0, #0
   13694:	bne	136f4 <__printf_chk@plt+0xb8c>
   13698:	mov	r0, r6
   1369c:	bl	12478 <pthread_mutex_lock@plt>
   136a0:	ldr	sl, [r4, #144]	; 0x90
   136a4:	ldr	r3, [r4, #168]	; 0xa8
   136a8:	rsb	fp, r3, sl
   136ac:	cmp	fp, #0
   136b0:	bgt	135ec <__printf_chk@plt+0xa84>
   136b4:	ldr	r3, [r4, #148]	; 0x94
   136b8:	cmp	r3, #0
   136bc:	bne	136e8 <__printf_chk@plt+0xb80>
   136c0:	ldr	r3, [r8]
   136c4:	cmp	r3, #0
   136c8:	bne	136e8 <__printf_chk@plt+0xb80>
   136cc:	mov	r0, r9
   136d0:	mov	r1, r6
   136d4:	bl	1288c <pthread_cond_wait@plt>
   136d8:	b	1364c <__printf_chk@plt+0xae4>
   136dc:	ldr	r0, [sp, #4]
   136e0:	bl	125ec <pthread_cond_signal@plt>
   136e4:	b	1367c <__printf_chk@plt+0xb14>
   136e8:	mov	r0, r6
   136ec:	bl	12b50 <pthread_mutex_unlock@plt>
   136f0:	ldr	r0, [r4, #164]	; 0xa4
   136f4:	rsbs	r0, r0, #1
   136f8:	movcc	r0, #0
   136fc:	add	sp, sp, #12
   13700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13704:	mov	r4, r0
   13708:	mov	r0, r6
   1370c:	bl	12b50 <pthread_mutex_unlock@plt>
   13710:	mov	r0, r4
   13714:	bl	12a6c <_Unwind_Resume@plt>
   13718:	push	{r4, lr}
   1371c:	mov	r0, #40	; 0x28
   13720:	bl	12958 <malloc@plt>
   13724:	cmp	r0, #0
   13728:	popne	{r4, pc}
   1372c:	movw	r3, #1428	; 0x594
   13730:	movt	r3, #3
   13734:	mov	r2, #5
   13738:	movw	r1, #51808	; 0xca60
   1373c:	movt	r1, #1
   13740:	ldr	r4, [r3]
   13744:	bl	127f0 <dcgettext@plt>
   13748:	mov	r1, #1
   1374c:	mov	r2, r0
   13750:	mov	r0, r4
   13754:	bl	12658 <__fprintf_chk@plt>
   13758:	mov	r0, #1
   1375c:	bl	12598 <exit@plt>
   13760:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13764:	mov	r5, r0
   13768:	add	r0, r0, #199	; 0xc7
   1376c:	mov	r6, r1
   13770:	mov	r9, r2
   13774:	mov	r8, r3
   13778:	ldr	r7, [sp, #32]
   1377c:	bl	12958 <malloc@plt>
   13780:	subs	r4, r0, #0
   13784:	beq	1383c <__printf_chk@plt+0xcd4>
   13788:	mov	r2, #200	; 0xc8
   1378c:	mov	r1, #0
   13790:	bl	1267c <memset@plt>
   13794:	mov	r0, r4
   13798:	str	r9, [r4, #4]
   1379c:	mov	r1, #0
   137a0:	str	r8, [r0], #12
   137a4:	bl	12490 <pthread_mutex_init@plt>
   137a8:	add	r0, r4, #88	; 0x58
   137ac:	mov	r1, #0
   137b0:	bl	12430 <pthread_cond_init@plt>
   137b4:	add	r0, r4, #40	; 0x28
   137b8:	mov	r1, #0
   137bc:	bl	12430 <pthread_cond_init@plt>
   137c0:	rsbs	r3, r7, #1
   137c4:	mov	r1, #0
   137c8:	mov	r2, #0
   137cc:	movcc	r3, #0
   137d0:	cmp	r7, r5
   137d4:	orrgt	r3, r3, #1
   137d8:	cmp	r3, #0
   137dc:	str	r5, [r4, #144]	; 0x90
   137e0:	addne	r7, r5, r5, lsr #31
   137e4:	mov	r0, r4
   137e8:	str	r1, [r4, #192]	; 0xc0
   137ec:	asrne	r7, r7, #1
   137f0:	cmp	r5, r6
   137f4:	addlt	r6, r6, r6, lsr #31
   137f8:	str	r7, [r4, #136]	; 0x88
   137fc:	str	r1, [r4, #156]	; 0x9c
   13800:	asrlt	r6, r6, #1
   13804:	str	r1, [r4, #160]	; 0xa0
   13808:	cmp	r6, #0
   1380c:	str	r6, [r4, #140]	; 0x8c
   13810:	str	r1, [r4, #164]	; 0xa4
   13814:	movle	r3, #0
   13818:	movgt	r3, #1
   1381c:	str	r1, [r4, #148]	; 0x94
   13820:	str	r3, [r4, #152]	; 0x98
   13824:	mov	r3, #0
   13828:	str	r1, [r4, #168]	; 0xa8
   1382c:	str	r1, [r4, #172]	; 0xac
   13830:	strd	r2, [r4, #176]	; 0xb0
   13834:	strd	r2, [r4, #184]	; 0xb8
   13838:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1383c:	movw	r0, #51868	; 0xca9c
   13840:	movt	r0, #1
   13844:	bl	12604 <perror@plt>
   13848:	mov	r0, #1
   1384c:	bl	12598 <exit@plt>
   13850:	push	{r3, r4, r5, r6, r7, lr}
   13854:	add	r7, r0, #12
   13858:	add	r6, r0, #88	; 0x58
   1385c:	add	r5, r0, #40	; 0x28
   13860:	mov	r4, r0
   13864:	mov	r0, r7
   13868:	bl	127a8 <pthread_mutex_destroy@plt>
   1386c:	mov	r0, r6
   13870:	bl	124e4 <pthread_cond_destroy@plt>
   13874:	mov	r0, r5
   13878:	bl	124e4 <pthread_cond_destroy@plt>
   1387c:	mov	r1, #0
   13880:	mov	r0, r7
   13884:	bl	12490 <pthread_mutex_init@plt>
   13888:	mov	r1, #0
   1388c:	mov	r0, r6
   13890:	bl	12430 <pthread_cond_init@plt>
   13894:	mov	r0, r5
   13898:	mov	r1, #0
   1389c:	bl	12430 <pthread_cond_init@plt>
   138a0:	ldr	r0, [r4, #192]	; 0xc0
   138a4:	cmp	r0, #0
   138a8:	beq	138c4 <__printf_chk@plt+0xd5c>
   138ac:	ldr	r3, [r0, #16]
   138b0:	str	r3, [r4, #192]	; 0xc0
   138b4:	bl	12520 <free@plt>
   138b8:	ldr	r0, [r4, #192]	; 0xc0
   138bc:	cmp	r0, #0
   138c0:	bne	138ac <__printf_chk@plt+0xd44>
   138c4:	ldr	r0, [r4, #140]	; 0x8c
   138c8:	mov	r1, #0
   138cc:	mov	r2, #0
   138d0:	mov	r3, #0
   138d4:	cmp	r0, r1
   138d8:	str	r1, [r4, #156]	; 0x9c
   138dc:	str	r1, [r4, #160]	; 0xa0
   138e0:	movle	r0, #0
   138e4:	movgt	r0, #1
   138e8:	str	r1, [r4, #164]	; 0xa4
   138ec:	str	r0, [r4, #152]	; 0x98
   138f0:	str	r1, [r4, #148]	; 0x94
   138f4:	str	r1, [r4, #168]	; 0xa8
   138f8:	str	r1, [r4, #172]	; 0xac
   138fc:	strd	r2, [r4, #176]	; 0xb0
   13900:	strd	r2, [r4, #184]	; 0xb8
   13904:	pop	{r3, r4, r5, r6, r7, pc}
   13908:	push	{r4, r5, r6, lr}
   1390c:	add	r6, r0, #88	; 0x58
   13910:	mov	r4, r0
   13914:	add	r0, r0, #12
   13918:	add	r5, r4, #40	; 0x28
   1391c:	bl	127a8 <pthread_mutex_destroy@plt>
   13920:	mov	r0, r6
   13924:	bl	125ec <pthread_cond_signal@plt>
   13928:	mov	r0, r6
   1392c:	bl	124e4 <pthread_cond_destroy@plt>
   13930:	mov	r0, r5
   13934:	bl	125ec <pthread_cond_signal@plt>
   13938:	mov	r0, r5
   1393c:	bl	124e4 <pthread_cond_destroy@plt>
   13940:	mov	r0, r4
   13944:	pop	{r4, r5, r6, lr}
   13948:	b	12520 <free@plt>
   1394c:	mov	r3, r0
   13950:	movw	r2, #15288	; 0x3bb8
   13954:	add	r0, r0, #8
   13958:	movt	r2, #1
   1395c:	mov	r1, #0
   13960:	b	12a18 <pthread_create@plt>
   13964:	push	{r3, r4, r5, lr}
   13968:	add	r5, r0, #12
   1396c:	mov	r4, r0
   13970:	mov	r0, r5
   13974:	bl	12478 <pthread_mutex_lock@plt>
   13978:	mov	r3, #1
   1397c:	mov	r0, r5
   13980:	str	r3, [r4, #156]	; 0x9c
   13984:	pop	{r3, r4, r5, lr}
   13988:	b	12b50 <pthread_mutex_unlock@plt>
   1398c:	push	{r3, r4, r5, lr}
   13990:	add	r5, r0, #12
   13994:	mov	r4, r0
   13998:	mov	r0, r5
   1399c:	bl	12478 <pthread_mutex_lock@plt>
   139a0:	mov	r3, #0
   139a4:	add	r0, r4, #40	; 0x28
   139a8:	str	r3, [r4, #156]	; 0x9c
   139ac:	bl	125ec <pthread_cond_signal@plt>
   139b0:	mov	r0, r5
   139b4:	pop	{r3, r4, r5, lr}
   139b8:	b	12b50 <pthread_mutex_unlock@plt>
   139bc:	push	{r4, lr}
   139c0:	mov	r4, r0
   139c4:	mov	r3, #1
   139c8:	add	r0, r0, #40	; 0x28
   139cc:	str	r3, [r4, #148]	; 0x94
   139d0:	bl	125ec <pthread_cond_signal@plt>
   139d4:	ldr	r0, [r4, #8]
   139d8:	mov	r1, #0
   139dc:	pop	{r4, lr}
   139e0:	b	12574 <pthread_join@plt>
   139e4:	b	135ac <__printf_chk@plt+0xa44>
   139e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139ec:	add	r8, r0, #12
   139f0:	sub	sp, sp, #12
   139f4:	mov	r4, r0
   139f8:	mov	r0, r8
   139fc:	mov	r7, r1
   13a00:	str	r2, [sp, #4]
   13a04:	bl	12478 <pthread_mutex_lock@plt>
   13a08:	ldr	r3, [sp, #4]
   13a0c:	cmp	r3, #0
   13a10:	ble	13b2c <__printf_chk@plt+0xfc4>
   13a14:	ldr	r3, [r4, #164]	; 0xa4
   13a18:	cmp	r3, #0
   13a1c:	bne	13b2c <__printf_chk@plt+0xfc4>
   13a20:	ldr	r6, [sp, #4]
   13a24:	add	fp, r4, #40	; 0x28
   13a28:	add	sl, r4, #192	; 0xc0
   13a2c:	add	r9, r4, #88	; 0x58
   13a30:	b	13ae4 <__printf_chk@plt+0xf7c>
   13a34:	ldr	r3, [r4, #160]	; 0xa0
   13a38:	cmp	r3, #0
   13a3c:	bne	13b0c <__printf_chk@plt+0xfa4>
   13a40:	mov	r0, fp
   13a44:	mov	r1, r8
   13a48:	bl	1288c <pthread_cond_wait@plt>
   13a4c:	ldr	r3, [r4, #164]	; 0xa4
   13a50:	cmp	r3, #0
   13a54:	bne	13b0c <__printf_chk@plt+0xfa4>
   13a58:	mov	r1, r6
   13a5c:	mov	r0, r4
   13a60:	bl	13514 <__printf_chk@plt+0x9ac>
   13a64:	mov	r5, r0
   13a68:	mov	r0, r8
   13a6c:	bl	12b50 <pthread_mutex_unlock@plt>
   13a70:	mov	r0, r4
   13a74:	mov	r1, sl
   13a78:	ldrd	r2, [r4, #176]	; 0xb0
   13a7c:	bl	1349c <__printf_chk@plt+0x934>
   13a80:	ldr	r1, [r4, #172]	; 0xac
   13a84:	mov	r2, r5
   13a88:	mov	r0, r7
   13a8c:	rsb	r6, r5, r6
   13a90:	add	r1, r4, r1
   13a94:	add	r7, r7, r5
   13a98:	add	r1, r1, #196	; 0xc4
   13a9c:	bl	12934 <memcpy@plt>
   13aa0:	mov	r0, r8
   13aa4:	bl	12478 <pthread_mutex_lock@plt>
   13aa8:	ldr	r3, [r4, #168]	; 0xa8
   13aac:	ldr	r0, [r4, #172]	; 0xac
   13ab0:	rsb	r3, r5, r3
   13ab4:	ldr	r1, [r4, #144]	; 0x90
   13ab8:	str	r3, [r4, #168]	; 0xa8
   13abc:	add	r0, r5, r0
   13ac0:	bl	1c5d4 <__printf_chk@plt+0x9a6c>
   13ac4:	mov	r0, r9
   13ac8:	str	r1, [r4, #172]	; 0xac
   13acc:	bl	125ec <pthread_cond_signal@plt>
   13ad0:	cmp	r6, #0
   13ad4:	ble	13b0c <__printf_chk@plt+0xfa4>
   13ad8:	ldr	r3, [r4, #164]	; 0xa4
   13adc:	cmp	r3, #0
   13ae0:	bne	13b0c <__printf_chk@plt+0xfa4>
   13ae4:	ldr	r3, [r4, #168]	; 0xa8
   13ae8:	cmp	r3, #0
   13aec:	beq	13a34 <__printf_chk@plt+0xecc>
   13af0:	ldr	r3, [r4, #152]	; 0x98
   13af4:	cmp	r3, #0
   13af8:	beq	13a58 <__printf_chk@plt+0xef0>
   13afc:	ldr	r3, [r4, #160]	; 0xa0
   13b00:	cmp	r3, #0
   13b04:	bne	13a58 <__printf_chk@plt+0xef0>
   13b08:	b	13a40 <__printf_chk@plt+0xed8>
   13b0c:	ldr	r3, [sp, #4]
   13b10:	rsb	r6, r6, r3
   13b14:	mov	r0, r8
   13b18:	bl	12b50 <pthread_mutex_unlock@plt>
   13b1c:	bl	129a0 <pthread_testcancel@plt>
   13b20:	mov	r0, r6
   13b24:	add	sp, sp, #12
   13b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b2c:	mov	r6, #0
   13b30:	b	13b14 <__printf_chk@plt+0xfac>
   13b34:	mov	r4, r0
   13b38:	mov	r0, r8
   13b3c:	bl	12b50 <pthread_mutex_unlock@plt>
   13b40:	mov	r0, r4
   13b44:	bl	12a6c <_Unwind_Resume@plt>
   13b48:	push	{r3, r4, r5, lr}
   13b4c:	add	r5, r0, #12
   13b50:	mov	r4, r0
   13b54:	mov	r0, r5
   13b58:	bl	12478 <pthread_mutex_lock@plt>
   13b5c:	mov	r3, #0
   13b60:	mov	r2, #1
   13b64:	str	r3, [r4, #152]	; 0x98
   13b68:	str	r2, [r4, #160]	; 0xa0
   13b6c:	add	r0, r4, #40	; 0x28
   13b70:	bl	125ec <pthread_cond_signal@plt>
   13b74:	mov	r0, r5
   13b78:	pop	{r3, r4, r5, lr}
   13b7c:	b	12b50 <pthread_mutex_unlock@plt>
   13b80:	push	{r3, r4, r5, lr}
   13b84:	add	r5, r0, #12
   13b88:	mov	r4, r0
   13b8c:	mov	r0, r5
   13b90:	bl	12478 <pthread_mutex_lock@plt>
   13b94:	mov	r3, #1
   13b98:	add	r0, r4, #88	; 0x58
   13b9c:	str	r3, [r4, #164]	; 0xa4
   13ba0:	bl	125ec <pthread_cond_signal@plt>
   13ba4:	add	r0, r4, #40	; 0x28
   13ba8:	bl	125ec <pthread_cond_signal@plt>
   13bac:	mov	r0, r5
   13bb0:	pop	{r3, r4, r5, lr}
   13bb4:	b	12b50 <pthread_mutex_unlock@plt>
   13bb8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bbc:	mov	r4, r0
   13bc0:	bl	1333c <__printf_chk@plt+0x7d4>
   13bc4:	movw	r6, #1456	; 0x5b0
   13bc8:	add	r5, r4, #12
   13bcc:	add	r9, r4, #40	; 0x28
   13bd0:	add	r8, r4, #192	; 0xc0
   13bd4:	add	r7, r4, #88	; 0x58
   13bd8:	movt	r6, #3
   13bdc:	b	13c54 <__printf_chk@plt+0x10ec>
   13be0:	mov	r0, r5
   13be4:	bl	12478 <pthread_mutex_lock@plt>
   13be8:	ldrd	r2, [r4, #176]	; 0xb0
   13bec:	ldr	sl, [r4, #168]	; 0xa8
   13bf0:	ldr	r0, [r4, #172]	; 0xac
   13bf4:	adds	r2, r2, fp
   13bf8:	adc	r3, r3, #0
   13bfc:	rsb	sl, fp, sl
   13c00:	strd	r2, [r4, #176]	; 0xb0
   13c04:	add	r0, fp, r0
   13c08:	str	sl, [r4, #168]	; 0xa8
   13c0c:	ldr	r1, [r4, #144]	; 0x90
   13c10:	bl	1c394 <__printf_chk@plt+0x982c>
   13c14:	ldr	r3, [r4, #160]	; 0xa0
   13c18:	cmp	r3, #0
   13c1c:	str	r1, [r4, #172]	; 0xac
   13c20:	bne	13c44 <__printf_chk@plt+0x10dc>
   13c24:	ldr	r3, [r4, #136]	; 0x88
   13c28:	cmp	sl, r3
   13c2c:	bge	13c44 <__printf_chk@plt+0x10dc>
   13c30:	ldr	r3, [r4, #140]	; 0x8c
   13c34:	cmp	r3, #0
   13c38:	movle	r3, #0
   13c3c:	movgt	r3, #1
   13c40:	str	r3, [r4, #152]	; 0x98
   13c44:	mov	r0, r7
   13c48:	bl	125ec <pthread_cond_signal@plt>
   13c4c:	mov	r0, r5
   13c50:	bl	12b50 <pthread_mutex_unlock@plt>
   13c54:	ldr	r3, [r4, #160]	; 0xa0
   13c58:	cmp	r3, #0
   13c5c:	beq	13c6c <__printf_chk@plt+0x1104>
   13c60:	ldr	r3, [r4, #168]	; 0xa8
   13c64:	cmp	r3, #0
   13c68:	beq	13d70 <__printf_chk@plt+0x1208>
   13c6c:	ldr	r3, [r4, #164]	; 0xa4
   13c70:	cmp	r3, #0
   13c74:	bne	13d70 <__printf_chk@plt+0x1208>
   13c78:	ldr	r3, [r4, #148]	; 0x94
   13c7c:	cmp	r3, #0
   13c80:	bne	13d70 <__printf_chk@plt+0x1208>
   13c84:	ldr	r3, [r6]
   13c88:	cmp	r3, #0
   13c8c:	bne	13d70 <__printf_chk@plt+0x1208>
   13c90:	mov	r0, r5
   13c94:	bl	12478 <pthread_mutex_lock@plt>
   13c98:	ldr	r3, [r4, #152]	; 0x98
   13c9c:	cmp	r3, #0
   13ca0:	bne	13ccc <__printf_chk@plt+0x1164>
   13ca4:	ldr	r3, [r4, #156]	; 0x9c
   13ca8:	cmp	r3, #0
   13cac:	bne	13ccc <__printf_chk@plt+0x1164>
   13cb0:	ldr	r2, [r4, #168]	; 0xa8
   13cb4:	ldr	r3, [r4, #136]	; 0x88
   13cb8:	cmp	r2, r3
   13cbc:	bge	13cd8 <__printf_chk@plt+0x1170>
   13cc0:	ldr	r3, [r4, #160]	; 0xa0
   13cc4:	cmp	r3, #0
   13cc8:	bne	13cd8 <__printf_chk@plt+0x1170>
   13ccc:	mov	r0, r9
   13cd0:	mov	r1, r5
   13cd4:	bl	1288c <pthread_cond_wait@plt>
   13cd8:	mov	r0, r5
   13cdc:	bl	12b50 <pthread_mutex_unlock@plt>
   13ce0:	ldr	r3, [r4, #148]	; 0x94
   13ce4:	cmp	r3, #0
   13ce8:	bne	13d70 <__printf_chk@plt+0x1208>
   13cec:	ldr	fp, [r6]
   13cf0:	cmp	fp, #0
   13cf4:	bne	13d70 <__printf_chk@plt+0x1208>
   13cf8:	ldrd	r2, [r4, #176]	; 0xb0
   13cfc:	mov	r1, r8
   13d00:	mov	r0, r4
   13d04:	bl	1349c <__printf_chk@plt+0x934>
   13d08:	mov	r0, r5
   13d0c:	bl	12478 <pthread_mutex_lock@plt>
   13d10:	ldr	r1, [r4, #136]	; 0x88
   13d14:	mov	r0, r4
   13d18:	bl	13514 <__printf_chk@plt+0x9ac>
   13d1c:	mov	sl, r0
   13d20:	mov	r0, r5
   13d24:	bl	12b50 <pthread_mutex_unlock@plt>
   13d28:	cmp	sl, #0
   13d2c:	beq	13c44 <__printf_chk@plt+0x10dc>
   13d30:	ldr	r3, [r4, #168]	; 0xa8
   13d34:	mov	r1, sl
   13d38:	ldr	r0, [r4, #172]	; 0xac
   13d3c:	cmp	r3, sl
   13d40:	ldr	ip, [r4, #4]
   13d44:	add	r0, r4, r0
   13d48:	ldr	r3, [r4]
   13d4c:	ldreq	r2, [r4, #160]	; 0xa0
   13d50:	movne	r2, fp
   13d54:	add	r0, r0, #196	; 0xc4
   13d58:	blx	ip
   13d5c:	subs	fp, r0, #0
   13d60:	bne	13be0 <__printf_chk@plt+0x1078>
   13d64:	mov	r0, r4
   13d68:	bl	13b80 <__printf_chk@plt+0x1018>
   13d6c:	b	13be0 <__printf_chk@plt+0x1078>
   13d70:	mov	r0, #0
   13d74:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d78:	push	{r4, r5, r6, lr}
   13d7c:	mov	r4, r0
   13d80:	add	r6, r0, #12
   13d84:	mov	r0, r1
   13d88:	mov	r1, r2
   13d8c:	bl	133b8 <__printf_chk@plt+0x850>
   13d90:	mov	r5, r0
   13d94:	mov	r0, r6
   13d98:	bl	12478 <pthread_mutex_lock@plt>
   13d9c:	ldr	r1, [r4, #192]	; 0xc0
   13da0:	ldrd	r2, [r4, #176]	; 0xb0
   13da4:	mov	r0, r6
   13da8:	str	r1, [r5, #16]
   13dac:	strd	r2, [r5]
   13db0:	str	r5, [r4, #192]	; 0xc0
   13db4:	pop	{r4, r5, r6, lr}
   13db8:	b	12b50 <pthread_mutex_unlock@plt>
   13dbc:	push	{r4, r5, r6, r7, r8, lr}
   13dc0:	mov	r8, r0
   13dc4:	add	r6, r0, #12
   13dc8:	mov	r0, r1
   13dcc:	mov	r1, r2
   13dd0:	bl	133b8 <__printf_chk@plt+0x850>
   13dd4:	mov	r7, r0
   13dd8:	mov	r0, r6
   13ddc:	bl	12478 <pthread_mutex_lock@plt>
   13de0:	ldr	r1, [r8, #192]	; 0xc0
   13de4:	ldrd	r4, [r8, #184]	; 0xb8
   13de8:	add	ip, r8, #192	; 0xc0
   13dec:	cmp	r1, #0
   13df0:	strd	r4, [r7]
   13df4:	beq	13e34 <__printf_chk@plt+0x12cc>
   13df8:	adds	r4, r4, #1
   13dfc:	ldrd	r2, [r1]
   13e00:	adc	r5, r5, #0
   13e04:	cmp	r4, r2
   13e08:	sbcs	r0, r5, r3
   13e0c:	bge	13e24 <__printf_chk@plt+0x12bc>
   13e10:	b	13e34 <__printf_chk@plt+0x12cc>
   13e14:	ldrd	r2, [r1]
   13e18:	cmp	r4, r2
   13e1c:	sbcs	r0, r5, r3
   13e20:	blt	13e34 <__printf_chk@plt+0x12cc>
   13e24:	add	ip, r1, #16
   13e28:	ldr	r1, [r1, #16]
   13e2c:	cmp	r1, #0
   13e30:	bne	13e14 <__printf_chk@plt+0x12ac>
   13e34:	str	r1, [r7, #16]
   13e38:	mov	r0, r6
   13e3c:	str	r7, [ip]
   13e40:	pop	{r4, r5, r6, r7, r8, lr}
   13e44:	b	12b50 <pthread_mutex_unlock@plt>
   13e48:	push	{r4, r5, r6, r7, r8, lr}
   13e4c:	mov	r7, r0
   13e50:	add	r6, r0, #12
   13e54:	mov	r0, r1
   13e58:	mov	r1, r2
   13e5c:	bl	133b8 <__printf_chk@plt+0x850>
   13e60:	mov	r8, r0
   13e64:	mov	r0, r6
   13e68:	bl	12478 <pthread_mutex_lock@plt>
   13e6c:	ldr	r1, [r7, #192]	; 0xc0
   13e70:	ldrd	r4, [r7, #184]	; 0xb8
   13e74:	add	ip, r7, #192	; 0xc0
   13e78:	cmp	r1, #0
   13e7c:	strd	r4, [r8]
   13e80:	bne	13e98 <__printf_chk@plt+0x1330>
   13e84:	b	13ea8 <__printf_chk@plt+0x1340>
   13e88:	add	ip, r1, #16
   13e8c:	ldr	r1, [r1, #16]
   13e90:	cmp	r1, #0
   13e94:	beq	13ea8 <__printf_chk@plt+0x1340>
   13e98:	ldrd	r2, [r1]
   13e9c:	cmp	r4, r2
   13ea0:	sbcs	r0, r5, r3
   13ea4:	bge	13e88 <__printf_chk@plt+0x1320>
   13ea8:	str	r1, [r8, #16]
   13eac:	mov	r0, r6
   13eb0:	str	r8, [ip]
   13eb4:	pop	{r4, r5, r6, r7, r8, lr}
   13eb8:	b	12b50 <pthread_mutex_unlock@plt>
   13ebc:	push	{r4, r5, r6, r7, r8, lr}
   13ec0:	mov	r8, r0
   13ec4:	add	r6, r0, #12
   13ec8:	mov	r0, r1
   13ecc:	mov	r1, r2
   13ed0:	ldrd	r4, [sp, #24]
   13ed4:	bl	133b8 <__printf_chk@plt+0x850>
   13ed8:	mov	r7, r0
   13edc:	mov	r0, r6
   13ee0:	bl	12478 <pthread_mutex_lock@plt>
   13ee4:	ldr	r1, [r8, #192]	; 0xc0
   13ee8:	add	ip, r8, #192	; 0xc0
   13eec:	strd	r4, [r7]
   13ef0:	cmp	r1, #0
   13ef4:	beq	13f34 <__printf_chk@plt+0x13cc>
   13ef8:	adds	r4, r4, #1
   13efc:	ldrd	r2, [r1]
   13f00:	adc	r5, r5, #0
   13f04:	cmp	r4, r2
   13f08:	sbcs	r0, r5, r3
   13f0c:	bge	13f24 <__printf_chk@plt+0x13bc>
   13f10:	b	13f34 <__printf_chk@plt+0x13cc>
   13f14:	ldrd	r2, [r1]
   13f18:	cmp	r4, r2
   13f1c:	sbcs	r0, r5, r3
   13f20:	blt	13f34 <__printf_chk@plt+0x13cc>
   13f24:	add	ip, r1, #16
   13f28:	ldr	r1, [r1, #16]
   13f2c:	cmp	r1, #0
   13f30:	bne	13f14 <__printf_chk@plt+0x13ac>
   13f34:	str	r1, [r7, #16]
   13f38:	mov	r0, r6
   13f3c:	str	r7, [ip]
   13f40:	pop	{r4, r5, r6, r7, r8, lr}
   13f44:	b	12b50 <pthread_mutex_unlock@plt>
   13f48:	push	{r4, r5, r6, r7, r8, lr}
   13f4c:	mov	r7, r0
   13f50:	add	r6, r0, #12
   13f54:	mov	r0, r1
   13f58:	mov	r1, r2
   13f5c:	ldrd	r4, [sp, #24]
   13f60:	bl	133b8 <__printf_chk@plt+0x850>
   13f64:	mov	r8, r0
   13f68:	mov	r0, r6
   13f6c:	bl	12478 <pthread_mutex_lock@plt>
   13f70:	ldr	r1, [r7, #192]	; 0xc0
   13f74:	add	ip, r7, #192	; 0xc0
   13f78:	strd	r4, [r8]
   13f7c:	cmp	r1, #0
   13f80:	bne	13f98 <__printf_chk@plt+0x1430>
   13f84:	b	13fa8 <__printf_chk@plt+0x1440>
   13f88:	add	ip, r1, #16
   13f8c:	ldr	r1, [r1, #16]
   13f90:	cmp	r1, #0
   13f94:	beq	13fa8 <__printf_chk@plt+0x1440>
   13f98:	ldrd	r2, [r1]
   13f9c:	cmp	r4, r2
   13fa0:	sbcs	r0, r5, r3
   13fa4:	bge	13f88 <__printf_chk@plt+0x1420>
   13fa8:	str	r1, [r8, #16]
   13fac:	mov	r0, r6
   13fb0:	str	r8, [ip]
   13fb4:	pop	{r4, r5, r6, r7, r8, lr}
   13fb8:	b	12b50 <pthread_mutex_unlock@plt>
   13fbc:	push	{r4, r5, r6, lr}
   13fc0:	add	r5, r0, #12
   13fc4:	mov	r4, r0
   13fc8:	add	r6, r0, #88	; 0x58
   13fcc:	mov	r0, r5
   13fd0:	bl	12478 <pthread_mutex_lock@plt>
   13fd4:	b	13fe4 <__printf_chk@plt+0x147c>
   13fd8:	mov	r0, r6
   13fdc:	mov	r1, r5
   13fe0:	bl	1288c <pthread_cond_wait@plt>
   13fe4:	ldr	r3, [r4, #164]	; 0xa4
   13fe8:	cmp	r3, #0
   13fec:	bne	13ffc <__printf_chk@plt+0x1494>
   13ff0:	ldr	r3, [r4, #168]	; 0xa8
   13ff4:	cmp	r3, #0
   13ff8:	bgt	13fd8 <__printf_chk@plt+0x1470>
   13ffc:	mov	r0, r5
   14000:	pop	{r4, r5, r6, lr}
   14004:	b	12b50 <pthread_mutex_unlock@plt>
   14008:	mov	r4, r0
   1400c:	mov	r0, r5
   14010:	bl	12b50 <pthread_mutex_unlock@plt>
   14014:	mov	r0, r4
   14018:	bl	12a6c <_Unwind_Resume@plt>
   1401c:	ldr	r0, [r0, #168]	; 0xa8
   14020:	bx	lr
   14024:	push	{r4, r5, r6, lr}
   14028:	add	r6, r0, #12
   1402c:	mov	r5, r0
   14030:	mov	r0, r6
   14034:	bl	12478 <pthread_mutex_lock@plt>
   14038:	bl	13718 <__printf_chk@plt+0xbb0>
   1403c:	ldr	r3, [r5, #144]	; 0x90
   14040:	vldr	s12, [r5, #168]	; 0xa8
   14044:	vldr	s8, [r5, #140]	; 0x8c
   14048:	vcvt.f64.s32	d4, s8
   1404c:	vldr	d5, [pc, #92]	; 140b0 <__printf_chk@plt+0x1548>
   14050:	add	r1, r5, #152	; 0x98
   14054:	vmov	s13, r3
   14058:	mov	r4, r0
   1405c:	str	r3, [r4]
   14060:	mov	r0, r6
   14064:	ldm	r1, {r1, r2, r3}
   14068:	vcvt.f64.s32	d7, s13
   1406c:	str	r1, [r4, #24]
   14070:	str	r2, [r4, #28]
   14074:	str	r3, [r4, #32]
   14078:	vcvt.f64.s32	d6, s12
   1407c:	vdiv.f64	d6, d6, d7
   14080:	vdiv.f64	d7, d4, d7
   14084:	vmul.f64	d6, d6, d5
   14088:	vstr	d7, [r4, #16]
   1408c:	vstr	d6, [r4, #8]
   14090:	bl	12b50 <pthread_mutex_unlock@plt>
   14094:	mov	r0, r4
   14098:	pop	{r4, r5, r6, pc}
   1409c:	mov	r4, r0
   140a0:	mov	r0, r6
   140a4:	bl	12b50 <pthread_mutex_unlock@plt>
   140a8:	mov	r0, r4
   140ac:	bl	12a6c <_Unwind_Resume@plt>
   140b0:	andeq	r0, r0, r0
   140b4:	subsmi	r0, r9, r0
   140b8:	push	{r4, lr}
   140bc:	movw	r0, #57112	; 0xdf18
   140c0:	mov	r4, r1
   140c4:	movt	r0, #1
   140c8:	ldr	r1, [r1, #4]
   140cc:	bl	19028 <__printf_chk@plt+0x64c0>
   140d0:	ldr	r0, [r4, #4]
   140d4:	bl	12520 <free@plt>
   140d8:	mov	r0, r4
   140dc:	pop	{r4, lr}
   140e0:	b	12520 <free@plt>
   140e4:	push	{r4, lr}
   140e8:	mov	r4, r1
   140ec:	ldr	r0, [r4]
   140f0:	movw	r1, #57112	; 0xdf18
   140f4:	ldr	r2, [r4, #4]
   140f8:	movt	r1, #1
   140fc:	bl	18f2c <__printf_chk@plt+0x63c4>
   14100:	ldr	r0, [r4, #4]
   14104:	bl	12520 <free@plt>
   14108:	mov	r0, r4
   1410c:	pop	{r4, lr}
   14110:	b	12520 <free@plt>
   14114:	push	{r4, lr}
   14118:	mov	r2, r0
   1411c:	mov	r4, r1
   14120:	ldr	r0, [r3, #4]
   14124:	mov	r1, r2
   14128:	mov	r2, r4
   1412c:	bl	131cc <__printf_chk@plt+0x664>
   14130:	cmp	r0, #0
   14134:	movne	r0, r4
   14138:	moveq	r0, #0
   1413c:	pop	{r4, pc}
   14140:	push	{r4, r5, r6, r7, r8, lr}
   14144:	movw	r8, #1408	; 0x580
   14148:	movt	r8, #3
   1414c:	sub	sp, sp, #32
   14150:	mov	r7, r1
   14154:	ldr	r0, [r1]
   14158:	ldr	r3, [r8]
   1415c:	str	r3, [sp, #28]
   14160:	bl	13268 <__printf_chk@plt+0x700>
   14164:	ldr	r0, [r7, #4]
   14168:	ldr	r4, [r7]
   1416c:	ldr	lr, [r0]
   14170:	ldr	ip, [r0, #4]
   14174:	cmp	lr, #0
   14178:	ldr	r1, [r0, #12]
   1417c:	ldr	r2, [r0, #16]
   14180:	ldr	r3, [r0, #20]
   14184:	moveq	lr, #1
   14188:	movne	lr, #2
   1418c:	cmp	r4, #0
   14190:	lsl	ip, ip, #3
   14194:	str	lr, [sp, #20]
   14198:	str	ip, [sp, #8]
   1419c:	str	r1, [sp, #12]
   141a0:	str	r2, [sp, #16]
   141a4:	str	r3, [sp, #24]
   141a8:	bne	141e0 <__printf_chk@plt+0x1678>
   141ac:	b	1421c <__printf_chk@plt+0x16b4>
   141b0:	ldr	ip, [r4, #8]
   141b4:	mov	r2, #1
   141b8:	add	r3, sp, #8
   141bc:	str	ip, [sp]
   141c0:	bl	1243c <ao_open_file@plt>
   141c4:	mov	r5, r0
   141c8:	str	r0, [r4, #4]
   141cc:	cmp	r5, #0
   141d0:	beq	14254 <__printf_chk@plt+0x16ec>
   141d4:	ldr	r4, [r4, #16]
   141d8:	cmp	r4, #0
   141dc:	beq	14214 <__printf_chk@plt+0x16ac>
   141e0:	ldr	r0, [r4]
   141e4:	bl	12484 <ao_driver_info@plt>
   141e8:	ldr	r1, [r4, #12]
   141ec:	cmp	r1, #0
   141f0:	mov	r6, r0
   141f4:	ldr	r0, [r4]
   141f8:	bne	141b0 <__printf_chk@plt+0x1648>
   141fc:	add	r1, sp, #8
   14200:	ldr	r2, [r4, #8]
   14204:	bl	12928 <ao_open_live@plt>
   14208:	mov	r5, r0
   1420c:	str	r0, [r4, #4]
   14210:	b	141cc <__printf_chk@plt+0x1664>
   14214:	ldr	r0, [r7, #4]
   14218:	ldr	r3, [r0, #20]
   1421c:	cmp	r3, #0
   14220:	beq	14230 <__printf_chk@plt+0x16c8>
   14224:	mov	r0, r3
   14228:	bl	12520 <free@plt>
   1422c:	ldr	r0, [r7, #4]
   14230:	bl	12520 <free@plt>
   14234:	ldr	r2, [sp, #28]
   14238:	ldr	r3, [r8]
   1423c:	cmp	r2, r3
   14240:	bne	142fc <__printf_chk@plt+0x1794>
   14244:	mov	r0, r7
   14248:	add	sp, sp, #32
   1424c:	pop	{r4, r5, r6, r7, r8, lr}
   14250:	b	12520 <free@plt>
   14254:	bl	12a48 <__errno_location@plt>
   14258:	ldr	r3, [r0]
   1425c:	mov	r7, r0
   14260:	cmp	r3, #4
   14264:	beq	142dc <__printf_chk@plt+0x1774>
   14268:	ble	142ac <__printf_chk@plt+0x1744>
   1426c:	cmp	r3, #6
   14270:	beq	143a0 <__printf_chk@plt+0x1838>
   14274:	blt	14380 <__printf_chk@plt+0x1818>
   14278:	cmp	r3, #7
   1427c:	beq	14360 <__printf_chk@plt+0x17f8>
   14280:	cmp	r3, #100	; 0x64
   14284:	bne	14340 <__printf_chk@plt+0x17d8>
   14288:	mov	r0, r5
   1428c:	movw	r1, #52052	; 0xcb54
   14290:	mov	r2, #5
   14294:	movt	r1, #1
   14298:	bl	127f0 <dcgettext@plt>
   1429c:	ldr	r1, [r6, #8]
   142a0:	bl	19028 <__printf_chk@plt+0x64c0>
   142a4:	mov	r0, #1
   142a8:	bl	12598 <exit@plt>
   142ac:	cmp	r3, #2
   142b0:	beq	14320 <__printf_chk@plt+0x17b8>
   142b4:	bgt	14300 <__printf_chk@plt+0x1798>
   142b8:	cmp	r3, #1
   142bc:	bne	14340 <__printf_chk@plt+0x17d8>
   142c0:	mov	r2, #5
   142c4:	mov	r0, r5
   142c8:	movw	r1, #51876	; 0xcaa4
   142cc:	movt	r1, #1
   142d0:	bl	127f0 <dcgettext@plt>
   142d4:	bl	19028 <__printf_chk@plt+0x64c0>
   142d8:	b	142a4 <__printf_chk@plt+0x173c>
   142dc:	mov	r0, r5
   142e0:	mov	r2, #5
   142e4:	movw	r1, #51972	; 0xcb04
   142e8:	movt	r1, #1
   142ec:	bl	127f0 <dcgettext@plt>
   142f0:	ldr	r1, [r6, #8]
   142f4:	bl	19028 <__printf_chk@plt+0x64c0>
   142f8:	b	142a4 <__printf_chk@plt+0x173c>
   142fc:	bl	127e4 <__stack_chk_fail@plt>
   14300:	mov	r0, r5
   14304:	mov	r2, #5
   14308:	movw	r1, #51908	; 0xcac4
   1430c:	movt	r1, #1
   14310:	bl	127f0 <dcgettext@plt>
   14314:	ldr	r1, [r6, #8]
   14318:	bl	19028 <__printf_chk@plt+0x64c0>
   1431c:	b	142a4 <__printf_chk@plt+0x173c>
   14320:	mov	r0, r5
   14324:	mov	r2, #5
   14328:	movw	r1, #52080	; 0xcb70
   1432c:	movt	r1, #1
   14330:	bl	127f0 <dcgettext@plt>
   14334:	ldr	r1, [r6, #8]
   14338:	bl	19028 <__printf_chk@plt+0x64c0>
   1433c:	b	142a4 <__printf_chk@plt+0x173c>
   14340:	mov	r2, #5
   14344:	movw	r1, #52212	; 0xcbf4
   14348:	mov	r0, #0
   1434c:	movt	r1, #1
   14350:	bl	127f0 <dcgettext@plt>
   14354:	ldr	r1, [r7]
   14358:	bl	19028 <__printf_chk@plt+0x64c0>
   1435c:	b	142a4 <__printf_chk@plt+0x173c>
   14360:	mov	r0, r5
   14364:	mov	r2, #5
   14368:	movw	r1, #52180	; 0xcbd4
   1436c:	movt	r1, #1
   14370:	bl	127f0 <dcgettext@plt>
   14374:	ldr	r1, [r4, #12]
   14378:	bl	19028 <__printf_chk@plt+0x64c0>
   1437c:	b	142a4 <__printf_chk@plt+0x173c>
   14380:	mov	r0, r5
   14384:	mov	r2, #5
   14388:	movw	r1, #52020	; 0xcb34
   1438c:	movt	r1, #1
   14390:	bl	127f0 <dcgettext@plt>
   14394:	ldr	r1, [r6, #8]
   14398:	bl	19028 <__printf_chk@plt+0x64c0>
   1439c:	b	142a4 <__printf_chk@plt+0x173c>
   143a0:	mov	r0, r5
   143a4:	mov	r2, #5
   143a8:	movw	r1, #52136	; 0xcba8
   143ac:	movt	r1, #1
   143b0:	bl	127f0 <dcgettext@plt>
   143b4:	ldr	r1, [r4, #12]
   143b8:	bl	19028 <__printf_chk@plt+0x64c0>
   143bc:	b	142a4 <__printf_chk@plt+0x173c>
   143c0:	push	{r4, r5, r6, r7, r8, lr}
   143c4:	mov	r8, r0
   143c8:	mov	r7, r1
   143cc:	mov	r0, #1
   143d0:	mov	r1, #8
   143d4:	bl	128a4 <calloc@plt>
   143d8:	subs	r6, r0, #0
   143dc:	beq	14434 <__printf_chk@plt+0x18cc>
   143e0:	mov	r0, #1
   143e4:	mov	r1, #24
   143e8:	bl	128a4 <calloc@plt>
   143ec:	cmp	r0, #0
   143f0:	mov	r5, r0
   143f4:	str	r0, [r6, #4]
   143f8:	beq	14434 <__printf_chk@plt+0x18cc>
   143fc:	mov	r4, r7
   14400:	mov	ip, r0
   14404:	ldm	r4!, {r0, r1, r2, r3}
   14408:	str	r8, [r6]
   1440c:	stmia	ip!, {r0, r1, r2, r3}
   14410:	ldm	r4, {r0, r1}
   14414:	stm	ip, {r0, r1}
   14418:	ldr	r0, [r7, #20]
   1441c:	cmp	r0, #0
   14420:	beq	1442c <__printf_chk@plt+0x18c4>
   14424:	bl	126c4 <__strdup@plt>
   14428:	str	r0, [r5, #20]
   1442c:	mov	r0, r6
   14430:	pop	{r4, r5, r6, r7, r8, pc}
   14434:	mov	r2, #5
   14438:	movw	r1, #52268	; 0xcc2c
   1443c:	movt	r1, #1
   14440:	bl	127f0 <dcgettext@plt>
   14444:	bl	19028 <__printf_chk@plt+0x64c0>
   14448:	mov	r0, #1
   1444c:	bl	12598 <exit@plt>
   14450:	push	{r3, r4, r5, lr}
   14454:	subs	r5, r0, #0
   14458:	mov	r4, r1
   1445c:	beq	14468 <__printf_chk@plt+0x1900>
   14460:	bl	14024 <__printf_chk@plt+0x14bc>
   14464:	mov	r5, r0
   14468:	mov	r1, r5
   1446c:	ldmib	r4, {r2, r3}
   14470:	ldr	r0, [r4]
   14474:	bl	18e18 <__printf_chk@plt+0x62b0>
   14478:	ldr	r0, [r4, #4]
   1447c:	bl	12520 <free@plt>
   14480:	ldr	r0, [r4, #8]
   14484:	bl	12520 <free@plt>
   14488:	mov	r0, r4
   1448c:	bl	12520 <free@plt>
   14490:	mov	r0, r5
   14494:	pop	{r3, r4, r5, lr}
   14498:	b	12520 <free@plt>
   1449c:	push	{r4, r5, r6, lr}
   144a0:	mov	r5, r0
   144a4:	mov	r4, r1
   144a8:	mov	r0, #1
   144ac:	mov	r1, #12
   144b0:	mov	r6, r2
   144b4:	bl	128a4 <calloc@plt>
   144b8:	subs	r3, r0, #0
   144bc:	beq	144cc <__printf_chk@plt+0x1964>
   144c0:	str	r5, [r3]
   144c4:	stmib	r3, {r4, r6}
   144c8:	pop	{r4, r5, r6, pc}
   144cc:	mov	r2, #5
   144d0:	movw	r1, #52320	; 0xcc60
   144d4:	movt	r1, #1
   144d8:	bl	127f0 <dcgettext@plt>
   144dc:	bl	19028 <__printf_chk@plt+0x64c0>
   144e0:	mov	r0, #1
   144e4:	bl	12598 <exit@plt>
   144e8:	push	{r2, r3}
   144ec:	cmp	r1, #1
   144f0:	push	{r4, lr}
   144f4:	movw	r4, #1408	; 0x580
   144f8:	movt	r4, #3
   144fc:	sub	sp, sp, #8
   14500:	add	r2, sp, #20
   14504:	ldr	r3, [r4]
   14508:	ldr	r0, [sp, #16]
   1450c:	str	r2, [sp]
   14510:	str	r3, [sp, #4]
   14514:	beq	14564 <__printf_chk@plt+0x19fc>
   14518:	cmp	r1, #2
   1451c:	beq	14554 <__printf_chk@plt+0x19ec>
   14520:	cmp	r1, #0
   14524:	beq	14548 <__printf_chk@plt+0x19e0>
   14528:	ldr	r2, [sp, #4]
   1452c:	ldr	r3, [r4]
   14530:	cmp	r2, r3
   14534:	bne	14574 <__printf_chk@plt+0x1a0c>
   14538:	add	sp, sp, #8
   1453c:	pop	{r4, lr}
   14540:	add	sp, sp, #8
   14544:	bx	lr
   14548:	mov	r1, r2
   1454c:	bl	190c0 <__printf_chk@plt+0x6558>
   14550:	b	14528 <__printf_chk@plt+0x19c0>
   14554:	mov	r1, r0
   14558:	mov	r0, #3
   1455c:	bl	18fc8 <__printf_chk@plt+0x6460>
   14560:	b	14528 <__printf_chk@plt+0x19c0>
   14564:	mov	r1, r0
   14568:	mov	r0, #2
   1456c:	bl	18fc8 <__printf_chk@plt+0x6460>
   14570:	b	14528 <__printf_chk@plt+0x19c0>
   14574:	bl	127e4 <__stack_chk_fail@plt>
   14578:	push	{r2, r3}
   1457c:	mov	r0, r1
   14580:	push	{r4, lr}
   14584:	sub	sp, sp, #8
   14588:	movw	r4, #1408	; 0x580
   1458c:	movt	r4, #3
   14590:	ldr	lr, [sp, #16]
   14594:	add	r3, sp, #20
   14598:	ldr	ip, [r4]
   1459c:	mov	r2, r3
   145a0:	str	r3, [sp]
   145a4:	mov	r1, lr
   145a8:	str	ip, [sp, #4]
   145ac:	bl	18fc8 <__printf_chk@plt+0x6460>
   145b0:	ldr	r2, [sp, #4]
   145b4:	ldr	r3, [r4]
   145b8:	cmp	r2, r3
   145bc:	bne	145d0 <__printf_chk@plt+0x1a68>
   145c0:	add	sp, sp, #8
   145c4:	pop	{r4, lr}
   145c8:	add	sp, sp, #8
   145cc:	bx	lr
   145d0:	bl	127e4 <__stack_chk_fail@plt>
   145d4:	push	{r4, lr}
   145d8:	mov	r1, #8
   145dc:	mov	r4, r0
   145e0:	mov	r0, #1
   145e4:	bl	128a4 <calloc@plt>
   145e8:	subs	r3, r0, #0
   145ec:	beq	145f8 <__printf_chk@plt+0x1a90>
   145f0:	str	r4, [r3]
   145f4:	pop	{r4, pc}
   145f8:	mov	r2, #5
   145fc:	movw	r1, #52376	; 0xcc98
   14600:	movt	r1, #1
   14604:	bl	127f0 <dcgettext@plt>
   14608:	bl	19028 <__printf_chk@plt+0x64c0>
   1460c:	mov	r0, #1
   14610:	bl	12598 <exit@plt>
   14614:	push	{r2, r3}
   14618:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1461c:	movw	r8, #1408	; 0x580
   14620:	movt	r8, #3
   14624:	sub	sp, sp, #16
   14628:	mov	sl, r0
   1462c:	mov	r0, #0
   14630:	ldr	r3, [r8]
   14634:	mov	r9, r1
   14638:	ldr	r7, [sp, #48]	; 0x30
   1463c:	str	r3, [sp, #12]
   14640:	bl	145d4 <__printf_chk@plt+0x1a6c>
   14644:	mov	r1, #1
   14648:	mov	r5, r0
   1464c:	mov	r0, #80	; 0x50
   14650:	bl	128a4 <calloc@plt>
   14654:	cmp	r0, #0
   14658:	str	r0, [r5, #4]
   1465c:	addne	r6, sp, #52	; 0x34
   14660:	movne	r4, #80	; 0x50
   14664:	bne	14690 <__printf_chk@plt+0x1b28>
   14668:	b	1473c <__printf_chk@plt+0x1bd4>
   1466c:	cmp	r3, #0
   14670:	addne	r4, r0, #1
   14674:	lsleq	r4, r4, #1
   14678:	ldr	r0, [r5, #4]
   1467c:	mov	r1, r4
   14680:	bl	12754 <realloc@plt>
   14684:	cmp	r0, #0
   14688:	str	r0, [r5, #4]
   1468c:	beq	1473c <__printf_chk@plt+0x1bd4>
   14690:	ldr	r0, [r5, #4]
   14694:	mvn	r3, #0
   14698:	mov	r1, r4
   1469c:	str	r7, [sp]
   146a0:	mov	r2, #1
   146a4:	str	r6, [sp, #4]
   146a8:	str	r6, [sp, #8]
   146ac:	bl	125c8 <__vsnprintf_chk@plt>
   146b0:	cmp	r0, #0
   146b4:	cmpge	r4, r0
   146b8:	mvn	r3, r0
   146bc:	lsr	r3, r3, #31
   146c0:	ble	1466c <__printf_chk@plt+0x1b04>
   146c4:	cmp	r9, #1
   146c8:	beq	14730 <__printf_chk@plt+0x1bc8>
   146cc:	cmp	r9, #2
   146d0:	beq	14710 <__printf_chk@plt+0x1ba8>
   146d4:	cmp	r9, #0
   146d8:	bne	146f0 <__printf_chk@plt+0x1b88>
   146dc:	movw	r1, #16568	; 0x40b8
   146e0:	mov	r0, sl
   146e4:	mov	r2, r5
   146e8:	movt	r1, #1
   146ec:	bl	13e48 <__printf_chk@plt+0x12e0>
   146f0:	ldr	r2, [sp, #12]
   146f4:	ldr	r3, [r8]
   146f8:	cmp	r2, r3
   146fc:	bne	14758 <__printf_chk@plt+0x1bf0>
   14700:	add	sp, sp, #16
   14704:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14708:	add	sp, sp, #8
   1470c:	bx	lr
   14710:	mov	r0, sl
   14714:	mov	r3, #3
   14718:	mov	r2, r5
   1471c:	str	r3, [r5]
   14720:	movw	r1, #16612	; 0x40e4
   14724:	movt	r1, #1
   14728:	bl	13e48 <__printf_chk@plt+0x12e0>
   1472c:	b	146f0 <__printf_chk@plt+0x1b88>
   14730:	mov	r0, sl
   14734:	mov	r3, #2
   14738:	b	14718 <__printf_chk@plt+0x1bb0>
   1473c:	mov	r2, #5
   14740:	movw	r1, #52428	; 0xcccc
   14744:	movt	r1, #1
   14748:	bl	127f0 <dcgettext@plt>
   1474c:	bl	19028 <__printf_chk@plt+0x64c0>
   14750:	mov	r0, #1
   14754:	bl	12598 <exit@plt>
   14758:	bl	127e4 <__stack_chk_fail@plt>
   1475c:	push	{r2, r3}
   14760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14764:	movw	r8, #1408	; 0x580
   14768:	movt	r8, #3
   1476c:	sub	sp, sp, #16
   14770:	mov	r9, r0
   14774:	mov	r0, #0
   14778:	ldr	r3, [r8]
   1477c:	mov	sl, r1
   14780:	ldr	r7, [sp, #48]	; 0x30
   14784:	str	r3, [sp, #12]
   14788:	bl	145d4 <__printf_chk@plt+0x1a6c>
   1478c:	mov	r1, #1
   14790:	mov	r5, r0
   14794:	mov	r0, #80	; 0x50
   14798:	bl	128a4 <calloc@plt>
   1479c:	cmp	r0, #0
   147a0:	str	r0, [r5, #4]
   147a4:	addne	r6, sp, #52	; 0x34
   147a8:	movne	r4, #80	; 0x50
   147ac:	bne	147d8 <__printf_chk@plt+0x1c70>
   147b0:	b	14844 <__printf_chk@plt+0x1cdc>
   147b4:	cmp	r3, #0
   147b8:	addne	r4, r0, #1
   147bc:	lsleq	r4, r4, #1
   147c0:	ldr	r0, [r5, #4]
   147c4:	mov	r1, r4
   147c8:	bl	12754 <realloc@plt>
   147cc:	cmp	r0, #0
   147d0:	str	r0, [r5, #4]
   147d4:	beq	14844 <__printf_chk@plt+0x1cdc>
   147d8:	ldr	r0, [r5, #4]
   147dc:	mvn	r3, #0
   147e0:	mov	r1, r4
   147e4:	str	r7, [sp]
   147e8:	mov	r2, #1
   147ec:	str	r6, [sp, #4]
   147f0:	str	r6, [sp, #8]
   147f4:	bl	125c8 <__vsnprintf_chk@plt>
   147f8:	cmp	r0, #0
   147fc:	cmpge	r4, r0
   14800:	mvn	r3, r0
   14804:	lsr	r3, r3, #31
   14808:	ble	147b4 <__printf_chk@plt+0x1c4c>
   1480c:	mov	r2, r5
   14810:	str	sl, [r5]
   14814:	mov	r0, r9
   14818:	movw	r1, #16612	; 0x40e4
   1481c:	movt	r1, #1
   14820:	bl	13e48 <__printf_chk@plt+0x12e0>
   14824:	ldr	r2, [sp, #12]
   14828:	ldr	r3, [r8]
   1482c:	cmp	r2, r3
   14830:	bne	14860 <__printf_chk@plt+0x1cf8>
   14834:	add	sp, sp, #16
   14838:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1483c:	add	sp, sp, #8
   14840:	bx	lr
   14844:	mov	r2, #5
   14848:	movw	r1, #52492	; 0xcd0c
   1484c:	movt	r1, #1
   14850:	bl	127f0 <dcgettext@plt>
   14854:	bl	19028 <__printf_chk@plt+0x64c0>
   14858:	mov	r0, #1
   1485c:	bl	12598 <exit@plt>
   14860:	bl	127e4 <__stack_chk_fail@plt>
   14864:	push	{r3, r4, r5, r6, r7, lr}
   14868:	mov	r7, r1
   1486c:	mov	r6, r0
   14870:	mov	r5, r2
   14874:	mov	r4, r1
   14878:	sub	r4, r4, #1
   1487c:	mov	r0, r5
   14880:	mov	r1, r6
   14884:	bl	1291c <fputc@plt>
   14888:	cmp	r4, #0
   1488c:	bgt	14878 <__printf_chk@plt+0x1d10>
   14890:	cmp	r7, #1
   14894:	movge	r0, r7
   14898:	movlt	r0, #1
   1489c:	pop	{r3, r4, r5, r6, r7, pc}
   148a0:	cmp	r0, #0
   148a4:	bxeq	lr
   148a8:	ldr	r3, [r0, #4]
   148ac:	cmp	r3, #0
   148b0:	bxeq	lr
   148b4:	add	r1, r0, #24
   148b8:	mov	r0, #0
   148bc:	ldr	r3, [r1, #-4]
   148c0:	strb	r0, [r1, #-24]	; 0xffffffe8
   148c4:	cmp	r3, #0
   148c8:	beq	14904 <__printf_chk@plt+0x1d9c>
   148cc:	ldr	r2, [r1, #-12]
   148d0:	sub	r2, r2, #1
   148d4:	cmp	r2, #5
   148d8:	ldrls	pc, [pc, r2, lsl #2]
   148dc:	b	14904 <__printf_chk@plt+0x1d9c>
   148e0:	strdeq	r4, [r1], -r8
   148e4:	andeq	r4, r1, r0, asr #18
   148e8:	strdeq	r4, [r1], -r8
   148ec:	strdeq	r4, [r1], -r8
   148f0:	andeq	r4, r1, r0, lsr r9
   148f4:	andeq	r4, r1, r0, lsr #18
   148f8:	ldr	r2, [r3]
   148fc:	ldr	r3, [r1, #-8]
   14900:	str	r2, [r3]
   14904:	cmp	r1, #0
   14908:	add	r1, r1, #24
   1490c:	bxeq	lr
   14910:	ldr	r3, [r1, #-20]	; 0xffffffec
   14914:	cmp	r3, #0
   14918:	bne	148bc <__printf_chk@plt+0x1d54>
   1491c:	bx	lr
   14920:	ldr	ip, [r1, #-8]
   14924:	ldrd	r2, [r3]
   14928:	strd	r2, [ip]
   1492c:	b	14904 <__printf_chk@plt+0x1d9c>
   14930:	ldr	r2, [r3]
   14934:	ldr	r3, [r1, #-8]
   14938:	str	r2, [r3]
   1493c:	b	14904 <__printf_chk@plt+0x1d9c>
   14940:	ldrb	r2, [r3]
   14944:	ldr	r3, [r1, #-8]
   14948:	strb	r2, [r3]
   1494c:	b	14904 <__printf_chk@plt+0x1d9c>
   14950:	push	{r4, r5, r6, r7, r8, r9, lr}
   14954:	mov	r7, r0
   14958:	ldr	r9, [r0, #4]
   1495c:	sub	sp, sp, #12
   14960:	mov	r6, r1
   14964:	cmp	r9, #0
   14968:	beq	14d0c <__printf_chk@plt+0x21a4>
   1496c:	mov	r4, r0
   14970:	mov	r8, #0
   14974:	mov	r0, r9
   14978:	add	r4, r4, #24
   1497c:	bl	1297c <strlen@plt>
   14980:	ldr	r9, [r4, #4]
   14984:	add	r0, r0, #1
   14988:	cmp	r8, r0
   1498c:	movlt	r8, r0
   14990:	cmp	r9, #0
   14994:	bne	14974 <__printf_chk@plt+0x1e0c>
   14998:	mov	r4, r7
   1499c:	ldr	r0, [r4, #8]
   149a0:	add	r4, r4, #24
   149a4:	bl	1297c <strlen@plt>
   149a8:	ldr	r3, [r4, #4]
   149ac:	add	r0, r0, #1
   149b0:	cmp	r9, r0
   149b4:	movlt	r9, r0
   149b8:	cmp	r3, #0
   149bc:	bne	1499c <__printf_chk@plt+0x1e34>
   149c0:	mov	r2, #5
   149c4:	movw	r1, #52556	; 0xcd4c
   149c8:	mov	r0, #0
   149cc:	movt	r1, #1
   149d0:	bl	127f0 <dcgettext@plt>
   149d4:	mov	r3, r8
   149d8:	mov	r1, #1
   149dc:	movw	r2, #52564	; 0xcd54
   149e0:	movt	r2, #1
   149e4:	str	r0, [sp]
   149e8:	mov	r0, r6
   149ec:	bl	12658 <__fprintf_chk@plt>
   149f0:	mov	r2, #5
   149f4:	movw	r1, #52572	; 0xcd5c
   149f8:	movt	r1, #1
   149fc:	mov	r4, r0
   14a00:	mov	r0, #0
   14a04:	bl	127f0 <dcgettext@plt>
   14a08:	mov	r3, r9
   14a0c:	mov	r1, #1
   14a10:	movw	r2, #52564	; 0xcd54
   14a14:	movt	r2, #1
   14a18:	str	r0, [sp]
   14a1c:	mov	r0, r6
   14a20:	bl	12658 <__fprintf_chk@plt>
   14a24:	mov	r2, #5
   14a28:	movw	r1, #52584	; 0xcd68
   14a2c:	movt	r1, #1
   14a30:	add	r4, r4, r0
   14a34:	mov	r0, #0
   14a38:	bl	127f0 <dcgettext@plt>
   14a3c:	mov	r3, #7
   14a40:	mov	r1, #1
   14a44:	movw	r2, #52564	; 0xcd54
   14a48:	movt	r2, #1
   14a4c:	str	r0, [sp]
   14a50:	mov	r0, r6
   14a54:	bl	12658 <__fprintf_chk@plt>
   14a58:	mov	r2, #5
   14a5c:	movw	r1, #52592	; 0xcd70
   14a60:	movt	r1, #1
   14a64:	add	r4, r4, r0
   14a68:	mov	r0, #0
   14a6c:	bl	127f0 <dcgettext@plt>
   14a70:	mov	r1, #1
   14a74:	movw	r2, #52564	; 0xcd54
   14a78:	mov	r3, #7
   14a7c:	movt	r2, #1
   14a80:	str	r0, [sp]
   14a84:	mov	r0, r6
   14a88:	bl	12658 <__fprintf_chk@plt>
   14a8c:	mov	r1, r6
   14a90:	add	r4, r4, r0
   14a94:	mov	r0, #10
   14a98:	bl	1291c <fputc@plt>
   14a9c:	sub	r4, r4, #1
   14aa0:	mov	r0, #45	; 0x2d
   14aa4:	mov	r1, r6
   14aa8:	bl	1291c <fputc@plt>
   14aac:	cmp	r4, #0
   14ab0:	bgt	14a9c <__printf_chk@plt+0x1f34>
   14ab4:	mov	r0, #10
   14ab8:	mov	r1, r6
   14abc:	bl	1291c <fputc@plt>
   14ac0:	ldr	r3, [r7, #4]
   14ac4:	cmp	r3, #0
   14ac8:	beq	14ce8 <__printf_chk@plt+0x2180>
   14acc:	movw	r2, #57112	; 0xdf18
   14ad0:	mov	r0, r6
   14ad4:	movt	r2, #1
   14ad8:	mov	r1, #1
   14adc:	bl	12658 <__fprintf_chk@plt>
   14ae0:	rsb	r4, r0, r8
   14ae4:	sub	r4, r4, #1
   14ae8:	mov	r0, #32
   14aec:	mov	r1, r6
   14af0:	bl	1291c <fputc@plt>
   14af4:	cmp	r4, #0
   14af8:	bgt	14ae4 <__printf_chk@plt+0x1f7c>
   14afc:	movw	r2, #57112	; 0xdf18
   14b00:	mov	r0, r6
   14b04:	movt	r2, #1
   14b08:	mov	r1, #1
   14b0c:	ldr	r3, [r7, #8]
   14b10:	bl	12658 <__fprintf_chk@plt>
   14b14:	rsb	r4, r0, r9
   14b18:	sub	r4, r4, #1
   14b1c:	mov	r0, #32
   14b20:	mov	r1, r6
   14b24:	bl	1291c <fputc@plt>
   14b28:	cmp	r4, #0
   14b2c:	bgt	14b18 <__printf_chk@plt+0x1fb0>
   14b30:	ldr	r3, [r7, #12]
   14b34:	cmp	r3, #6
   14b38:	ldrls	pc, [pc, r3, lsl #2]
   14b3c:	b	14cd8 <__printf_chk@plt+0x2170>
   14b40:	andeq	r4, r1, r8, asr #25
   14b44:			; <UNDEFINED> instruction: 0x00014cb8
   14b48:	andeq	r4, r1, r8, lsr #25
   14b4c:	muleq	r1, r8, ip
   14b50:	andeq	r4, r1, r8, lsl #25
   14b54:	andeq	r4, r1, r8, ror ip
   14b58:	andeq	r4, r1, ip, asr fp
   14b5c:	movw	r1, #52644	; 0xcda4
   14b60:	movt	r1, #1
   14b64:	mov	r0, #0
   14b68:	mov	r2, #5
   14b6c:	bl	127f0 <dcgettext@plt>
   14b70:	mov	r1, #1
   14b74:	mov	r2, r0
   14b78:	mov	r0, r6
   14b7c:	bl	12658 <__fprintf_chk@plt>
   14b80:	rsb	r4, r0, #7
   14b84:	sub	r4, r4, #1
   14b88:	mov	r0, #32
   14b8c:	mov	r1, r6
   14b90:	bl	1291c <fputc@plt>
   14b94:	cmp	r4, #0
   14b98:	bgt	14b84 <__printf_chk@plt+0x201c>
   14b9c:	ldr	r0, [r7, #20]
   14ba0:	cmp	r0, #0
   14ba4:	beq	14cf0 <__printf_chk@plt+0x2188>
   14ba8:	ldr	r3, [r7, #12]
   14bac:	cmp	r3, #6
   14bb0:	ldrls	pc, [pc, r3, lsl #2]
   14bb4:	b	14bf0 <__printf_chk@plt+0x2088>
   14bb8:	andeq	r4, r1, r4, lsl ip
   14bbc:	strdeq	r4, [r1], -r8
   14bc0:	andeq	r4, r1, r4, asr #24
   14bc4:	andeq	r4, r1, r4, lsr ip
   14bc8:	strdeq	r4, [r1], -r8
   14bcc:	andeq	r4, r1, r4, asr ip
   14bd0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bd4:	ldrd	r4, [r0]
   14bd8:	movw	r2, #52680	; 0xcdc8
   14bdc:	mov	r0, r6
   14be0:	movt	r2, #1
   14be4:	mov	r1, #1
   14be8:	strd	r4, [sp]
   14bec:	bl	12658 <__fprintf_chk@plt>
   14bf0:	add	r7, r7, #24
   14bf4:	b	14ab4 <__printf_chk@plt+0x1f4c>
   14bf8:	ldr	r3, [r0]
   14bfc:	movw	r2, #52676	; 0xcdc4
   14c00:	mov	r0, r6
   14c04:	movt	r2, #1
   14c08:	mov	r1, #1
   14c0c:	bl	12658 <__fprintf_chk@plt>
   14c10:	b	14bf0 <__printf_chk@plt+0x2088>
   14c14:	mov	r2, #5
   14c18:	movw	r1, #52668	; 0xcdbc
   14c1c:	mov	r0, #0
   14c20:	movt	r1, #1
   14c24:	bl	127f0 <dcgettext@plt>
   14c28:	mov	r1, r6
   14c2c:	bl	12ae4 <fputs@plt>
   14c30:	b	14bf0 <__printf_chk@plt+0x2088>
   14c34:	mov	r1, r6
   14c38:	ldr	r0, [r0]
   14c3c:	bl	12ae4 <fputs@plt>
   14c40:	b	14bf0 <__printf_chk@plt+0x2088>
   14c44:	mov	r1, r6
   14c48:	ldrsb	r0, [r0]
   14c4c:	bl	1291c <fputc@plt>
   14c50:	b	14bf0 <__printf_chk@plt+0x2088>
   14c54:	vldr	s14, [r0]
   14c58:	vcvt.f64.f32	d7, s14
   14c5c:	movw	r2, #52680	; 0xcdc8
   14c60:	mov	r0, r6
   14c64:	movt	r2, #1
   14c68:	mov	r1, #1
   14c6c:	vstr	d7, [sp]
   14c70:	bl	12658 <__fprintf_chk@plt>
   14c74:	b	14bf0 <__printf_chk@plt+0x2088>
   14c78:	movw	r1, #52636	; 0xcd9c
   14c7c:	mov	r0, #0
   14c80:	movt	r1, #1
   14c84:	b	14b68 <__printf_chk@plt+0x2000>
   14c88:	movw	r1, #52632	; 0xcd98
   14c8c:	mov	r0, #0
   14c90:	movt	r1, #1
   14c94:	b	14b68 <__printf_chk@plt+0x2000>
   14c98:	movw	r1, #52624	; 0xcd90
   14c9c:	mov	r0, #0
   14ca0:	movt	r1, #1
   14ca4:	b	14b68 <__printf_chk@plt+0x2000>
   14ca8:	movw	r1, #52616	; 0xcd88
   14cac:	mov	r0, #0
   14cb0:	movt	r1, #1
   14cb4:	b	14b68 <__printf_chk@plt+0x2000>
   14cb8:	movw	r1, #52608	; 0xcd80
   14cbc:	mov	r0, #0
   14cc0:	movt	r1, #1
   14cc4:	b	14b68 <__printf_chk@plt+0x2000>
   14cc8:	movw	r1, #52600	; 0xcd78
   14ccc:	mov	r0, #0
   14cd0:	movt	r1, #1
   14cd4:	b	14b68 <__printf_chk@plt+0x2000>
   14cd8:	movw	r1, #52652	; 0xcdac
   14cdc:	mov	r0, #0
   14ce0:	movt	r1, #1
   14ce4:	b	14b68 <__printf_chk@plt+0x2000>
   14ce8:	add	sp, sp, #12
   14cec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14cf0:	mov	r2, #5
   14cf4:	movw	r1, #52660	; 0xcdb4
   14cf8:	movt	r1, #1
   14cfc:	bl	127f0 <dcgettext@plt>
   14d00:	mov	r1, r6
   14d04:	bl	12ae4 <fputs@plt>
   14d08:	b	14bf0 <__printf_chk@plt+0x2088>
   14d0c:	mov	r8, r9
   14d10:	b	149c0 <__printf_chk@plt+0x1e58>
   14d14:	push	{r4, r5, r6, r7, r8, lr}
   14d18:	movw	r6, #1408	; 0x580
   14d1c:	movt	r6, #3
   14d20:	ldrsb	r3, [r1]
   14d24:	sub	sp, sp, #8
   14d28:	mov	r4, r1
   14d2c:	ldr	r2, [r6]
   14d30:	cmp	r3, #32
   14d34:	mov	r7, r0
   14d38:	str	r2, [sp, #4]
   14d3c:	bne	14d58 <__printf_chk@plt+0x21f0>
   14d40:	add	r3, r1, #1
   14d44:	mov	r4, r3
   14d48:	add	r3, r3, #1
   14d4c:	ldrsb	r2, [r4]
   14d50:	cmp	r2, #32
   14d54:	beq	14d44 <__printf_chk@plt+0x21dc>
   14d58:	mov	r0, r4
   14d5c:	mov	r1, #35	; 0x23
   14d60:	bl	12b44 <strchr@plt>
   14d64:	cmp	r0, #0
   14d68:	movne	r3, #0
   14d6c:	strbne	r3, [r0]
   14d70:	ldrsb	r3, [r4]
   14d74:	cmp	r3, #0
   14d78:	cmpne	r3, #35	; 0x23
   14d7c:	movne	r5, #0
   14d80:	moveq	r5, #1
   14d84:	beq	14ec0 <__printf_chk@plt+0x2358>
   14d88:	mov	r0, r4
   14d8c:	mov	r1, #61	; 0x3d
   14d90:	bl	12b44 <strchr@plt>
   14d94:	mov	r8, #0
   14d98:	cmp	r0, #0
   14d9c:	strbne	r5, [r0]
   14da0:	addne	r5, r0, #1
   14da4:	movweq	r5, #53056	; 0xcf40
   14da8:	movteq	r5, #1
   14dac:	b	14db4 <__printf_chk@plt+0x224c>
   14db0:	strb	r8, [r0]
   14db4:	mov	r0, r4
   14db8:	mov	r1, #32
   14dbc:	bl	12a9c <strrchr@plt>
   14dc0:	cmp	r0, #0
   14dc4:	bne	14db0 <__printf_chk@plt+0x2248>
   14dc8:	ldrsb	r3, [r4]
   14dcc:	cmp	r3, #0
   14dd0:	moveq	r3, #3
   14dd4:	bne	14df4 <__printf_chk@plt+0x228c>
   14dd8:	ldr	r2, [sp, #4]
   14ddc:	mov	r0, r3
   14de0:	ldr	r3, [r6]
   14de4:	cmp	r2, r3
   14de8:	bne	1512c <__printf_chk@plt+0x25c4>
   14dec:	add	sp, sp, #8
   14df0:	pop	{r4, r5, r6, r7, r8, pc}
   14df4:	cmp	r5, #0
   14df8:	beq	14e60 <__printf_chk@plt+0x22f8>
   14dfc:	ldrsb	r3, [r5]
   14e00:	cmp	r3, #32
   14e04:	bne	14e20 <__printf_chk@plt+0x22b8>
   14e08:	add	r3, r5, #1
   14e0c:	mov	r5, r3
   14e10:	add	r3, r3, #1
   14e14:	ldrsb	r2, [r5]
   14e18:	cmp	r2, #32
   14e1c:	beq	14e0c <__printf_chk@plt+0x22a4>
   14e20:	mov	r0, r5
   14e24:	bl	1297c <strlen@plt>
   14e28:	cmp	r0, #0
   14e2c:	ble	14e60 <__printf_chk@plt+0x22f8>
   14e30:	add	r3, r5, r0
   14e34:	ldrsb	r2, [r3, #-1]
   14e38:	cmp	r2, #32
   14e3c:	bne	14e60 <__printf_chk@plt+0x22f8>
   14e40:	mov	r1, #0
   14e44:	b	14e54 <__printf_chk@plt+0x22ec>
   14e48:	ldrsb	r2, [r3, #-1]
   14e4c:	cmp	r2, #32
   14e50:	bne	14e60 <__printf_chk@plt+0x22f8>
   14e54:	strb	r1, [r3, #-1]!
   14e58:	cmp	r3, r5
   14e5c:	bne	14e48 <__printf_chk@plt+0x22e0>
   14e60:	ldr	r0, [r7, #4]
   14e64:	cmp	r0, #0
   14e68:	bne	14e84 <__printf_chk@plt+0x231c>
   14e6c:	mov	r3, #2
   14e70:	b	14dd8 <__printf_chk@plt+0x2270>
   14e74:	add	r7, r7, #24
   14e78:	ldr	r0, [r7, #4]
   14e7c:	cmp	r0, #0
   14e80:	beq	14e6c <__printf_chk@plt+0x2304>
   14e84:	mov	r1, r4
   14e88:	bl	124f0 <strcasecmp@plt>
   14e8c:	cmp	r0, #0
   14e90:	bne	14e74 <__printf_chk@plt+0x230c>
   14e94:	ldr	r3, [r7, #12]
   14e98:	cmp	r3, #6
   14e9c:	ldrls	pc, [pc, r3, lsl #2]
   14ea0:	b	15130 <__printf_chk@plt+0x25c8>
   14ea4:	andeq	r5, r1, r8, asr #1
   14ea8:	strdeq	r4, [r1], -ip
   14eac:	andeq	r4, r1, ip, asr #31
   14eb0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   14eb4:	andeq	r4, r1, r4, lsr #30
   14eb8:	andeq	r4, r1, r4, ror #29
   14ebc:	andeq	r4, r1, r8, asr #29
   14ec0:	mov	r3, #0
   14ec4:	b	14dd8 <__printf_chk@plt+0x2270>
   14ec8:	cmp	r5, #0
   14ecc:	beq	14edc <__printf_chk@plt+0x2374>
   14ed0:	ldrsb	r3, [r5]
   14ed4:	cmp	r3, #0
   14ed8:	bne	150f0 <__printf_chk@plt+0x2588>
   14edc:	mov	r3, #4
   14ee0:	b	14dd8 <__printf_chk@plt+0x2270>
   14ee4:	cmp	r5, #0
   14ee8:	beq	14edc <__printf_chk@plt+0x2374>
   14eec:	ldrsb	r3, [r5]
   14ef0:	cmp	r3, #0
   14ef4:	beq	14edc <__printf_chk@plt+0x2374>
   14ef8:	ldrb	r3, [r7]
   14efc:	mov	r0, r5
   14f00:	mov	r1, #0
   14f04:	ldr	r4, [r7, #16]
   14f08:	add	r3, r3, #1
   14f0c:	strb	r3, [r7]
   14f10:	bl	12790 <strtod@plt>
   14f14:	mov	r3, #0
   14f18:	vcvt.f32.f64	s0, d0
   14f1c:	vstr	s0, [r4]
   14f20:	b	14dd8 <__printf_chk@plt+0x2270>
   14f24:	cmp	r5, #0
   14f28:	beq	14edc <__printf_chk@plt+0x2374>
   14f2c:	ldrsb	r3, [r5]
   14f30:	cmp	r3, #0
   14f34:	beq	14edc <__printf_chk@plt+0x2374>
   14f38:	bl	12a48 <__errno_location@plt>
   14f3c:	mov	r2, #0
   14f40:	mov	r1, sp
   14f44:	mov	r4, r0
   14f48:	mov	r0, r5
   14f4c:	str	r2, [r4]
   14f50:	bl	12508 <strtol@plt>
   14f54:	sub	r3, r0, #-2147483647	; 0x80000001
   14f58:	cmn	r3, #3
   14f5c:	bls	14f6c <__printf_chk@plt+0x2404>
   14f60:	ldr	r3, [r4]
   14f64:	cmp	r3, #34	; 0x22
   14f68:	beq	14edc <__printf_chk@plt+0x2374>
   14f6c:	ldr	r3, [sp]
   14f70:	ldrsb	r3, [r3]
   14f74:	cmp	r3, #0
   14f78:	bne	14edc <__printf_chk@plt+0x2374>
   14f7c:	ldr	r2, [r7, #16]
   14f80:	ldrb	r1, [r7]
   14f84:	add	r1, r1, #1
   14f88:	strb	r1, [r7]
   14f8c:	str	r0, [r2]
   14f90:	b	14dd8 <__printf_chk@plt+0x2270>
   14f94:	ldr	r4, [r7, #16]
   14f98:	ldrb	r3, [r7]
   14f9c:	add	r3, r3, #1
   14fa0:	strb	r3, [r7]
   14fa4:	ldr	r0, [r4]
   14fa8:	cmp	r0, #0
   14fac:	beq	14fb8 <__printf_chk@plt+0x2450>
   14fb0:	bl	12520 <free@plt>
   14fb4:	ldr	r4, [r7, #16]
   14fb8:	mov	r0, r5
   14fbc:	bl	126c4 <__strdup@plt>
   14fc0:	mov	r3, #0
   14fc4:	str	r0, [r4]
   14fc8:	b	14dd8 <__printf_chk@plt+0x2270>
   14fcc:	mov	r0, r5
   14fd0:	bl	1297c <strlen@plt>
   14fd4:	cmp	r0, #1
   14fd8:	bne	14edc <__printf_chk@plt+0x2374>
   14fdc:	ldrb	r1, [r7]
   14fe0:	mov	r3, #0
   14fe4:	ldr	r2, [r7, #16]
   14fe8:	add	r1, r1, #1
   14fec:	strb	r1, [r7]
   14ff0:	ldrb	r1, [r5]
   14ff4:	strb	r1, [r2]
   14ff8:	b	14dd8 <__printf_chk@plt+0x2270>
   14ffc:	cmp	r5, #0
   15000:	beq	14edc <__printf_chk@plt+0x2374>
   15004:	ldrsb	r3, [r5]
   15008:	cmp	r3, #0
   1500c:	beq	14edc <__printf_chk@plt+0x2374>
   15010:	mov	r1, sp
   15014:	mov	r2, #0
   15018:	mov	r0, r5
   1501c:	bl	12508 <strtol@plt>
   15020:	movw	r1, #56072	; 0xdb08
   15024:	mov	r2, #1
   15028:	movt	r1, #1
   1502c:	mov	r4, r0
   15030:	mov	r0, r5
   15034:	bl	12844 <strncasecmp@plt>
   15038:	cmp	r0, #0
   1503c:	beq	15118 <__printf_chk@plt+0x25b0>
   15040:	movw	r1, #52684	; 0xcdcc
   15044:	mov	r0, r5
   15048:	movt	r1, #1
   1504c:	bl	124f0 <strcasecmp@plt>
   15050:	cmp	r0, #0
   15054:	beq	15118 <__printf_chk@plt+0x25b0>
   15058:	ldr	r3, [sp]
   1505c:	ldrb	r8, [r3]
   15060:	cmp	r8, #0
   15064:	bne	15070 <__printf_chk@plt+0x2508>
   15068:	cmp	r4, #0
   1506c:	bne	15118 <__printf_chk@plt+0x25b0>
   15070:	movw	r1, #59620	; 0xe8e4
   15074:	mov	r0, r5
   15078:	movt	r1, #1
   1507c:	mov	r2, #1
   15080:	bl	12844 <strncasecmp@plt>
   15084:	cmp	r0, #0
   15088:	beq	150b4 <__printf_chk@plt+0x254c>
   1508c:	mov	r0, r5
   15090:	movw	r1, #52692	; 0xcdd4
   15094:	movt	r1, #1
   15098:	bl	124f0 <strcasecmp@plt>
   1509c:	cmp	r0, #0
   150a0:	beq	150b4 <__printf_chk@plt+0x254c>
   150a4:	cmp	r8, #0
   150a8:	bne	14edc <__printf_chk@plt+0x2374>
   150ac:	cmp	r4, #0
   150b0:	bne	14edc <__printf_chk@plt+0x2374>
   150b4:	ldr	r1, [r7, #16]
   150b8:	mov	r2, #0
   150bc:	mov	r3, r2
   150c0:	str	r2, [r1]
   150c4:	b	14dd8 <__printf_chk@plt+0x2270>
   150c8:	cmp	r5, #0
   150cc:	bne	14edc <__printf_chk@plt+0x2374>
   150d0:	ldrsb	r3, [r5]
   150d4:	cmp	r3, #0
   150d8:	bne	14edc <__printf_chk@plt+0x2374>
   150dc:	ldrb	r2, [r7]
   150e0:	mov	r3, r5
   150e4:	add	r2, r2, #1
   150e8:	strb	r2, [r7]
   150ec:	b	14dd8 <__printf_chk@plt+0x2270>
   150f0:	ldrb	r3, [r7]
   150f4:	mov	r0, r5
   150f8:	mov	r1, #0
   150fc:	ldr	r4, [r7, #16]
   15100:	add	r3, r3, #1
   15104:	strb	r3, [r7]
   15108:	bl	12790 <strtod@plt>
   1510c:	mov	r3, #0
   15110:	vstr	d0, [r4]
   15114:	b	14dd8 <__printf_chk@plt+0x2270>
   15118:	ldr	r2, [r7, #16]
   1511c:	mov	r1, #1
   15120:	mov	r3, #0
   15124:	str	r1, [r2]
   15128:	b	14dd8 <__printf_chk@plt+0x2270>
   1512c:	bl	127e4 <__stack_chk_fail@plt>
   15130:	mov	r3, #5
   15134:	b	14dd8 <__printf_chk@plt+0x2270>
   15138:	push	{r3, lr}
   1513c:	cmp	r0, #5
   15140:	ldrls	pc, [pc, r0, lsl #2]
   15144:	b	151e8 <__printf_chk@plt+0x2680>
   15148:	andeq	r5, r1, r8, ror r1
   1514c:	muleq	r1, r0, r1
   15150:	andeq	r5, r1, r0, lsr #3
   15154:			; <UNDEFINED> instruction: 0x000151b8
   15158:	ldrdeq	r5, [r1], -r0
   1515c:	andeq	r5, r1, r0, ror #2
   15160:	movw	r1, #52744	; 0xce08
   15164:	mov	r0, #0
   15168:	movt	r1, #1
   1516c:	mov	r2, #5
   15170:	pop	{r3, lr}
   15174:	b	127f0 <dcgettext@plt>
   15178:	movw	r1, #52700	; 0xcddc
   1517c:	mov	r0, #0
   15180:	movt	r1, #1
   15184:	mov	r2, #5
   15188:	pop	{r3, lr}
   1518c:	b	127f0 <dcgettext@plt>
   15190:	bl	12a48 <__errno_location@plt>
   15194:	pop	{r3, lr}
   15198:	ldr	r0, [r0]
   1519c:	b	125a4 <strerror@plt>
   151a0:	movw	r1, #52708	; 0xcde4
   151a4:	mov	r0, #0
   151a8:	movt	r1, #1
   151ac:	mov	r2, #5
   151b0:	pop	{r3, lr}
   151b4:	b	127f0 <dcgettext@plt>
   151b8:	movw	r1, #52724	; 0xcdf4
   151bc:	mov	r0, #0
   151c0:	movt	r1, #1
   151c4:	mov	r2, #5
   151c8:	pop	{r3, lr}
   151cc:	b	127f0 <dcgettext@plt>
   151d0:	movw	r1, #52732	; 0xcdfc
   151d4:	mov	r0, #0
   151d8:	movt	r1, #1
   151dc:	mov	r2, #5
   151e0:	pop	{r3, lr}
   151e4:	b	127f0 <dcgettext@plt>
   151e8:	movw	r1, #52772	; 0xce24
   151ec:	mov	r0, #0
   151f0:	movt	r1, #1
   151f4:	mov	r2, #5
   151f8:	pop	{r3, lr}
   151fc:	b	127f0 <dcgettext@plt>
   15200:	cmp	r0, #1
   15204:	push	{r4, r5, r6, r7, r8, lr}
   15208:	mov	r4, r0
   1520c:	sub	sp, sp, #8
   15210:	mov	r6, r1
   15214:	mov	r5, r2
   15218:	mov	r7, r3
   1521c:	beq	15264 <__printf_chk@plt+0x26fc>
   15220:	mov	r2, #5
   15224:	movw	r1, #52804	; 0xce44
   15228:	mov	r0, #0
   1522c:	movt	r1, #1
   15230:	bl	127f0 <dcgettext@plt>
   15234:	mov	r8, r0
   15238:	mov	r0, r4
   1523c:	bl	15138 <__printf_chk@plt+0x25d0>
   15240:	str	r7, [sp]
   15244:	mov	r2, r6
   15248:	mov	r3, r5
   1524c:	mov	r1, r0
   15250:	mov	r0, r8
   15254:	bl	19028 <__printf_chk@plt+0x64c0>
   15258:	mov	r0, #0
   1525c:	add	sp, sp, #8
   15260:	pop	{r4, r5, r6, r7, r8, pc}
   15264:	bl	12a48 <__errno_location@plt>
   15268:	ldr	r3, [r0]
   1526c:	cmp	r3, #2
   15270:	cmpne	r3, #17
   15274:	mvneq	r0, #0
   15278:	beq	1525c <__printf_chk@plt+0x26f4>
   1527c:	mov	r2, #5
   15280:	movw	r1, #52788	; 0xce34
   15284:	mov	r0, #0
   15288:	movt	r1, #1
   1528c:	bl	127f0 <dcgettext@plt>
   15290:	bl	12604 <perror@plt>
   15294:	mvn	r0, #0
   15298:	add	sp, sp, #8
   1529c:	pop	{r4, r5, r6, r7, r8, pc}
   152a0:	movw	r2, #1408	; 0x580
   152a4:	movt	r2, #3
   152a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152ac:	sub	sp, sp, #20
   152b0:	ldr	r3, [r2]
   152b4:	mov	r9, r0
   152b8:	mov	r0, #80	; 0x50
   152bc:	str	r2, [sp]
   152c0:	str	r1, [sp, #4]
   152c4:	mov	r8, #0
   152c8:	str	r3, [sp, #12]
   152cc:	bl	12958 <malloc@plt>
   152d0:	strb	r8, [sp, #8]
   152d4:	subs	r6, r0, #0
   152d8:	beq	153f8 <__printf_chk@plt+0x2890>
   152dc:	movw	r1, #56100	; 0xdb24
   152e0:	ldr	r0, [sp, #4]
   152e4:	movt	r1, #1
   152e8:	bl	12a78 <fopen64@plt>
   152ec:	subs	r7, r0, #0
   152f0:	beq	15414 <__printf_chk@plt+0x28ac>
   152f4:	mov	r5, #80	; 0x50
   152f8:	mov	r0, r7
   152fc:	bl	125d4 <feof@plt>
   15300:	subs	r4, r0, #0
   15304:	mov	r0, r6
   15308:	bne	153ec <__printf_chk@plt+0x2884>
   1530c:	mov	r1, r4
   15310:	mov	r2, r5
   15314:	add	r8, r8, #1
   15318:	bl	1267c <memset@plt>
   1531c:	b	15334 <__printf_chk@plt+0x27cc>
   15320:	cmp	fp, #10
   15324:	beq	153a8 <__printf_chk@plt+0x2840>
   15328:	add	r1, r6, sl
   1532c:	mov	r4, sl
   15330:	strb	fp, [r1, #-1]
   15334:	mov	r0, r7
   15338:	bl	12580 <fgetc@plt>
   1533c:	cmn	r0, #1
   15340:	mov	fp, r0
   15344:	beq	153b0 <__printf_chk@plt+0x2848>
   15348:	add	sl, r4, #1
   1534c:	cmp	r5, sl
   15350:	bcs	15320 <__printf_chk@plt+0x27b8>
   15354:	lsl	r5, r5, #1
   15358:	mov	r0, r6
   1535c:	mov	r1, r5
   15360:	bl	12754 <realloc@plt>
   15364:	subs	r6, r0, #0
   15368:	bne	15320 <__printf_chk@plt+0x27b8>
   1536c:	add	r2, sp, #8
   15370:	mov	r1, r6
   15374:	mov	r0, #1
   15378:	mov	r3, r2
   1537c:	bl	15200 <__printf_chk@plt+0x2698>
   15380:	mov	r0, r7
   15384:	bl	129b8 <fclose@plt>
   15388:	mov	r0, #1
   1538c:	ldr	r1, [sp]
   15390:	ldr	r2, [sp, #12]
   15394:	ldr	r3, [r1]
   15398:	cmp	r2, r3
   1539c:	bne	15438 <__printf_chk@plt+0x28d0>
   153a0:	add	sp, sp, #20
   153a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153a8:	mov	r3, #0
   153ac:	strb	r3, [r6, r4]
   153b0:	mov	r0, r9
   153b4:	mov	r1, r6
   153b8:	bl	14d14 <__printf_chk@plt+0x21ac>
   153bc:	subs	r4, r0, #0
   153c0:	beq	152f8 <__printf_chk@plt+0x2790>
   153c4:	mov	r1, r8
   153c8:	ldr	r2, [sp, #4]
   153cc:	mov	r3, r6
   153d0:	bl	15200 <__printf_chk@plt+0x2698>
   153d4:	cmp	r0, #0
   153d8:	bne	152f8 <__printf_chk@plt+0x2790>
   153dc:	mov	r0, r6
   153e0:	bl	12520 <free@plt>
   153e4:	mov	r0, r4
   153e8:	b	1538c <__printf_chk@plt+0x2824>
   153ec:	bl	12520 <free@plt>
   153f0:	mov	r0, #0
   153f4:	b	1538c <__printf_chk@plt+0x2824>
   153f8:	add	r2, sp, #8
   153fc:	mov	r1, r6
   15400:	mov	r0, #1
   15404:	mov	r3, r2
   15408:	bl	15200 <__printf_chk@plt+0x2698>
   1540c:	mov	r0, #1
   15410:	b	1538c <__printf_chk@plt+0x2824>
   15414:	add	r2, sp, #8
   15418:	mov	r1, r7
   1541c:	mov	r0, #1
   15420:	mov	r3, r2
   15424:	bl	15200 <__printf_chk@plt+0x2698>
   15428:	mov	r0, r6
   1542c:	bl	12520 <free@plt>
   15430:	mov	r0, #1
   15434:	b	1538c <__printf_chk@plt+0x2824>
   15438:	bl	127e4 <__stack_chk_fail@plt>
   1543c:	push	{r4, r5, r6, lr}
   15440:	movw	r4, #1408	; 0x580
   15444:	movt	r4, #3
   15448:	sub	sp, sp, #4096	; 0x1000
   1544c:	sub	sp, sp, #8
   15450:	mov	r6, r0
   15454:	ldr	r3, [r4]
   15458:	add	r2, sp, #8192	; 0x2000
   1545c:	movw	r0, #52848	; 0xce70
   15460:	movt	r0, #1
   15464:	str	r3, [r2, #-4092]	; 0xfffff004
   15468:	bl	12af0 <getenv@plt>
   1546c:	movw	r1, #52856	; 0xce78
   15470:	movt	r1, #1
   15474:	mov	r5, r0
   15478:	mov	r0, r6
   1547c:	bl	152a0 <__printf_chk@plt+0x2738>
   15480:	cmp	r5, #0
   15484:	beq	154cc <__printf_chk@plt+0x2964>
   15488:	mov	r0, r5
   1548c:	bl	1297c <strlen@plt>
   15490:	movw	r3, #4085	; 0xff5
   15494:	cmp	r0, r3
   15498:	bhi	154cc <__printf_chk@plt+0x2964>
   1549c:	mov	r1, r5
   154a0:	mov	r2, #4096	; 0x1000
   154a4:	add	r0, sp, #4
   154a8:	bl	12a54 <strncpy@plt>
   154ac:	add	r0, sp, #4
   154b0:	movw	r1, #52872	; 0xce88
   154b4:	mov	r2, #4096	; 0x1000
   154b8:	movt	r1, #1
   154bc:	bl	12a60 <__strcat_chk@plt>
   154c0:	mov	r0, r6
   154c4:	add	r1, sp, #4
   154c8:	bl	152a0 <__printf_chk@plt+0x2738>
   154cc:	add	r3, sp, #8192	; 0x2000
   154d0:	ldr	r2, [r3, #-4092]	; 0xfffff004
   154d4:	ldr	r3, [r4]
   154d8:	cmp	r2, r3
   154dc:	bne	154ec <__printf_chk@plt+0x2984>
   154e0:	add	sp, sp, #4096	; 0x1000
   154e4:	add	sp, sp, #8
   154e8:	pop	{r4, r5, r6, pc}
   154ec:	bl	127e4 <__stack_chk_fail@plt>
   154f0:	push	{r4, r5, r6, r7, r8, lr}
   154f4:	movw	r6, #1408	; 0x580
   154f8:	movt	r6, #3
   154fc:	sub	sp, sp, #8
   15500:	ldr	r3, [r6]
   15504:	mov	r0, sp
   15508:	str	r3, [sp, #4]
   1550c:	bl	12448 <ao_driver_info_list@plt>
   15510:	mov	r2, #5
   15514:	movw	r1, #52884	; 0xce94
   15518:	movt	r1, #1
   1551c:	mov	r5, r0
   15520:	mov	r0, #0
   15524:	bl	127f0 <dcgettext@plt>
   15528:	movw	r2, #52956	; 0xcedc
   1552c:	movw	r3, #52972	; 0xceec
   15530:	movt	r2, #1
   15534:	movt	r3, #1
   15538:	mov	r1, r0
   1553c:	mov	r0, #1
   15540:	bl	12b68 <__printf_chk@plt>
   15544:	mov	r2, #5
   15548:	movw	r1, #52980	; 0xcef4
   1554c:	mov	r0, #0
   15550:	movt	r1, #1
   15554:	bl	127f0 <dcgettext@plt>
   15558:	mov	r1, r0
   1555c:	mov	r0, #1
   15560:	bl	12b68 <__printf_chk@plt>
   15564:	mov	r2, #5
   15568:	movw	r1, #53060	; 0xcf44
   1556c:	mov	r0, #0
   15570:	movt	r1, #1
   15574:	bl	127f0 <dcgettext@plt>
   15578:	mov	r1, r0
   1557c:	mov	r0, #1
   15580:	bl	12b68 <__printf_chk@plt>
   15584:	mov	r2, #5
   15588:	movw	r1, #53080	; 0xcf58
   1558c:	mov	r0, #0
   15590:	movt	r1, #1
   15594:	bl	127f0 <dcgettext@plt>
   15598:	mov	r1, r0
   1559c:	mov	r0, #1
   155a0:	bl	12b68 <__printf_chk@plt>
   155a4:	mov	r2, #5
   155a8:	movw	r1, #53088	; 0xcf60
   155ac:	mov	r0, #0
   155b0:	movt	r1, #1
   155b4:	bl	127f0 <dcgettext@plt>
   155b8:	mov	r1, r0
   155bc:	mov	r0, #1
   155c0:	bl	12b68 <__printf_chk@plt>
   155c4:	mov	r2, #5
   155c8:	movw	r1, #53096	; 0xcf68
   155cc:	mov	r0, #0
   155d0:	movt	r1, #1
   155d4:	bl	127f0 <dcgettext@plt>
   155d8:	mov	r1, r0
   155dc:	mov	r0, #1
   155e0:	bl	12b68 <__printf_chk@plt>
   155e4:	mov	r2, #5
   155e8:	movw	r1, #53112	; 0xcf78
   155ec:	mov	r0, #0
   155f0:	movt	r1, #1
   155f4:	bl	127f0 <dcgettext@plt>
   155f8:	mov	r1, r0
   155fc:	mov	r0, #1
   15600:	bl	12b68 <__printf_chk@plt>
   15604:	mov	r2, #5
   15608:	movw	r1, #53128	; 0xcf88
   1560c:	mov	r0, #0
   15610:	movt	r1, #1
   15614:	bl	127f0 <dcgettext@plt>
   15618:	mov	r1, r0
   1561c:	mov	r0, #1
   15620:	bl	12b68 <__printf_chk@plt>
   15624:	movw	r1, #53200	; 0xcfd0
   15628:	mov	r0, #1
   1562c:	movt	r1, #1
   15630:	bl	12b68 <__printf_chk@plt>
   15634:	mov	r2, #5
   15638:	movw	r1, #53228	; 0xcfec
   1563c:	mov	r0, #0
   15640:	movt	r1, #1
   15644:	bl	127f0 <dcgettext@plt>
   15648:	mov	r1, r0
   1564c:	mov	r0, #1
   15650:	bl	12b68 <__printf_chk@plt>
   15654:	ldr	r3, [sp]
   15658:	cmp	r3, #0
   1565c:	subgt	r7, r5, #4
   15660:	movgt	r8, #0
   15664:	movgt	r4, r8
   15668:	bgt	1567c <__printf_chk@plt+0x2b14>
   1566c:	b	156bc <__printf_chk@plt+0x2b54>
   15670:	add	r4, r4, #1
   15674:	cmp	r3, r4
   15678:	ble	156bc <__printf_chk@plt+0x2b54>
   1567c:	ldr	r2, [r7, #4]!
   15680:	ldr	r0, [r2]
   15684:	cmp	r0, #1
   15688:	bne	15670 <__printf_chk@plt+0x2b08>
   1568c:	cmp	r8, #0
   15690:	ldr	r3, [r2, #8]
   15694:	movw	r1, #53272	; 0xd018
   15698:	movt	r1, #1
   1569c:	movne	r2, #44	; 0x2c
   156a0:	moveq	r2, #32
   156a4:	bl	12b68 <__printf_chk@plt>
   156a8:	ldr	r3, [sp]
   156ac:	add	r4, r4, #1
   156b0:	add	r8, r8, #1
   156b4:	cmp	r3, r4
   156b8:	bgt	1567c <__printf_chk@plt+0x2b14>
   156bc:	movw	r1, #53236	; 0xcff4
   156c0:	mov	r0, #1
   156c4:	movt	r1, #1
   156c8:	bl	12b68 <__printf_chk@plt>
   156cc:	mov	r2, #5
   156d0:	movw	r1, #53264	; 0xd010
   156d4:	mov	r0, #0
   156d8:	movt	r1, #1
   156dc:	bl	127f0 <dcgettext@plt>
   156e0:	mov	r1, r0
   156e4:	mov	r0, #1
   156e8:	bl	12b68 <__printf_chk@plt>
   156ec:	ldr	r3, [sp]
   156f0:	cmp	r3, #0
   156f4:	subgt	r5, r5, #4
   156f8:	movgt	r7, #0
   156fc:	movgt	r4, r7
   15700:	bgt	15714 <__printf_chk@plt+0x2bac>
   15704:	b	15758 <__printf_chk@plt+0x2bf0>
   15708:	add	r4, r4, #1
   1570c:	cmp	r3, r4
   15710:	ble	15758 <__printf_chk@plt+0x2bf0>
   15714:	ldr	r2, [r5, #4]!
   15718:	ldr	r1, [r2]
   1571c:	cmp	r1, #2
   15720:	bne	15708 <__printf_chk@plt+0x2ba0>
   15724:	cmp	r7, #0
   15728:	ldr	r3, [r2, #8]
   1572c:	mov	r0, #1
   15730:	movw	r1, #53272	; 0xd018
   15734:	movne	r2, #44	; 0x2c
   15738:	moveq	r2, #32
   1573c:	movt	r1, #1
   15740:	add	r7, r7, r0
   15744:	bl	12b68 <__printf_chk@plt>
   15748:	ldr	r3, [sp]
   1574c:	add	r4, r4, #1
   15750:	cmp	r3, r4
   15754:	bgt	15714 <__printf_chk@plt+0x2bac>
   15758:	movw	r0, #53108	; 0xcf74
   1575c:	movt	r0, #1
   15760:	bl	125e0 <puts@plt>
   15764:	mov	r2, #5
   15768:	movw	r1, #53280	; 0xd020
   1576c:	mov	r0, #0
   15770:	movt	r1, #1
   15774:	bl	127f0 <dcgettext@plt>
   15778:	mov	r1, r0
   1577c:	mov	r0, #1
   15780:	bl	12b68 <__printf_chk@plt>
   15784:	mov	r0, #10
   15788:	bl	12670 <putchar@plt>
   1578c:	mov	r2, #5
   15790:	movw	r1, #53412	; 0xd0a4
   15794:	mov	r0, #0
   15798:	movt	r1, #1
   1579c:	bl	127f0 <dcgettext@plt>
   157a0:	mov	r1, r0
   157a4:	mov	r0, #1
   157a8:	bl	12b68 <__printf_chk@plt>
   157ac:	mov	r2, #5
   157b0:	movw	r1, #53484	; 0xd0ec
   157b4:	mov	r0, #0
   157b8:	movt	r1, #1
   157bc:	bl	127f0 <dcgettext@plt>
   157c0:	mov	r1, r0
   157c4:	mov	r0, #1
   157c8:	bl	12b68 <__printf_chk@plt>
   157cc:	mov	r0, #10
   157d0:	bl	12670 <putchar@plt>
   157d4:	mov	r2, #5
   157d8:	movw	r1, #53736	; 0xd1e8
   157dc:	mov	r0, #0
   157e0:	movt	r1, #1
   157e4:	bl	127f0 <dcgettext@plt>
   157e8:	mov	r1, r0
   157ec:	mov	r0, #1
   157f0:	bl	12b68 <__printf_chk@plt>
   157f4:	mov	r2, #5
   157f8:	movw	r1, #53756	; 0xd1fc
   157fc:	mov	r0, #0
   15800:	movt	r1, #1
   15804:	bl	127f0 <dcgettext@plt>
   15808:	mov	r1, r0
   1580c:	mov	r0, #1
   15810:	bl	12b68 <__printf_chk@plt>
   15814:	mov	r2, #5
   15818:	movw	r1, #53828	; 0xd244
   1581c:	mov	r0, #0
   15820:	movt	r1, #1
   15824:	bl	127f0 <dcgettext@plt>
   15828:	mov	r1, r0
   1582c:	mov	r0, #1
   15830:	bl	12b68 <__printf_chk@plt>
   15834:	mov	r2, #5
   15838:	movw	r1, #53884	; 0xd27c
   1583c:	mov	r0, #0
   15840:	movt	r1, #1
   15844:	bl	127f0 <dcgettext@plt>
   15848:	mov	r1, r0
   1584c:	mov	r0, #1
   15850:	bl	12b68 <__printf_chk@plt>
   15854:	mov	r2, #5
   15858:	movw	r1, #53940	; 0xd2b4
   1585c:	mov	r0, #0
   15860:	movt	r1, #1
   15864:	bl	127f0 <dcgettext@plt>
   15868:	mov	r1, r0
   1586c:	mov	r0, #1
   15870:	bl	12b68 <__printf_chk@plt>
   15874:	mov	r2, #5
   15878:	movw	r1, #54004	; 0xd2f4
   1587c:	mov	r0, #0
   15880:	movt	r1, #1
   15884:	bl	127f0 <dcgettext@plt>
   15888:	mov	r1, r0
   1588c:	mov	r0, #1
   15890:	bl	12b68 <__printf_chk@plt>
   15894:	mov	r0, #10
   15898:	bl	12670 <putchar@plt>
   1589c:	mov	r2, #5
   158a0:	movw	r1, #54072	; 0xd338
   158a4:	mov	r0, #0
   158a8:	movt	r1, #1
   158ac:	bl	127f0 <dcgettext@plt>
   158b0:	mov	r1, r0
   158b4:	mov	r0, #1
   158b8:	bl	12b68 <__printf_chk@plt>
   158bc:	mov	r2, #5
   158c0:	movw	r1, #54088	; 0xd348
   158c4:	mov	r0, #0
   158c8:	movt	r1, #1
   158cc:	bl	127f0 <dcgettext@plt>
   158d0:	mov	r1, r0
   158d4:	mov	r0, #1
   158d8:	bl	12b68 <__printf_chk@plt>
   158dc:	mov	r2, #5
   158e0:	movw	r1, #54152	; 0xd388
   158e4:	mov	r0, #0
   158e8:	movt	r1, #1
   158ec:	bl	127f0 <dcgettext@plt>
   158f0:	mov	r1, r0
   158f4:	mov	r0, #1
   158f8:	bl	12b68 <__printf_chk@plt>
   158fc:	mov	r0, #10
   15900:	bl	12670 <putchar@plt>
   15904:	mov	r2, #5
   15908:	movw	r1, #54224	; 0xd3d0
   1590c:	mov	r0, #0
   15910:	movt	r1, #1
   15914:	bl	127f0 <dcgettext@plt>
   15918:	mov	r1, r0
   1591c:	mov	r0, #1
   15920:	bl	12b68 <__printf_chk@plt>
   15924:	mov	r2, #5
   15928:	movw	r1, #54240	; 0xd3e0
   1592c:	mov	r0, #0
   15930:	movt	r1, #1
   15934:	bl	127f0 <dcgettext@plt>
   15938:	mov	r1, r0
   1593c:	mov	r0, #1
   15940:	bl	12b68 <__printf_chk@plt>
   15944:	mov	r2, #5
   15948:	movw	r1, #54316	; 0xd42c
   1594c:	mov	r0, #0
   15950:	movt	r1, #1
   15954:	bl	127f0 <dcgettext@plt>
   15958:	mov	r1, r0
   1595c:	mov	r0, #1
   15960:	bl	12b68 <__printf_chk@plt>
   15964:	mov	r2, #5
   15968:	movw	r1, #54384	; 0xd470
   1596c:	mov	r0, #0
   15970:	movt	r1, #1
   15974:	bl	127f0 <dcgettext@plt>
   15978:	mov	r1, r0
   1597c:	mov	r0, #1
   15980:	bl	12b68 <__printf_chk@plt>
   15984:	mov	r2, #5
   15988:	movw	r1, #54436	; 0xd4a4
   1598c:	mov	r0, #0
   15990:	movt	r1, #1
   15994:	bl	127f0 <dcgettext@plt>
   15998:	mov	r1, r0
   1599c:	mov	r0, #1
   159a0:	bl	12b68 <__printf_chk@plt>
   159a4:	mov	r0, #10
   159a8:	bl	12670 <putchar@plt>
   159ac:	mov	r2, #5
   159b0:	movw	r1, #54500	; 0xd4e4
   159b4:	mov	r0, #0
   159b8:	movt	r1, #1
   159bc:	bl	127f0 <dcgettext@plt>
   159c0:	mov	r1, r0
   159c4:	mov	r0, #1
   159c8:	bl	12b68 <__printf_chk@plt>
   159cc:	mov	r2, #5
   159d0:	movw	r1, #54524	; 0xd4fc
   159d4:	mov	r0, #0
   159d8:	movt	r1, #1
   159dc:	bl	127f0 <dcgettext@plt>
   159e0:	mov	r1, r0
   159e4:	mov	r0, #1
   159e8:	bl	12b68 <__printf_chk@plt>
   159ec:	mov	r2, #5
   159f0:	movw	r1, #54588	; 0xd53c
   159f4:	mov	r0, #0
   159f8:	movt	r1, #1
   159fc:	bl	127f0 <dcgettext@plt>
   15a00:	mov	r1, r0
   15a04:	mov	r0, #1
   15a08:	bl	12b68 <__printf_chk@plt>
   15a0c:	mov	r0, #10
   15a10:	bl	12670 <putchar@plt>
   15a14:	mov	r2, #5
   15a18:	movw	r1, #54884	; 0xd664
   15a1c:	mov	r0, #0
   15a20:	movt	r1, #1
   15a24:	bl	127f0 <dcgettext@plt>
   15a28:	mov	r1, r0
   15a2c:	mov	r0, #1
   15a30:	bl	12b68 <__printf_chk@plt>
   15a34:	mov	r2, #5
   15a38:	movw	r1, #54932	; 0xd694
   15a3c:	mov	r0, #0
   15a40:	movt	r1, #1
   15a44:	bl	127f0 <dcgettext@plt>
   15a48:	mov	r1, r0
   15a4c:	mov	r0, #1
   15a50:	bl	12b68 <__printf_chk@plt>
   15a54:	mov	r2, #5
   15a58:	movw	r1, #54996	; 0xd6d4
   15a5c:	mov	r0, #0
   15a60:	movt	r1, #1
   15a64:	bl	127f0 <dcgettext@plt>
   15a68:	mov	r1, r0
   15a6c:	mov	r0, #1
   15a70:	bl	12b68 <__printf_chk@plt>
   15a74:	mov	r2, #5
   15a78:	movw	r1, #55072	; 0xd720
   15a7c:	mov	r0, #0
   15a80:	movt	r1, #1
   15a84:	bl	127f0 <dcgettext@plt>
   15a88:	mov	r1, r0
   15a8c:	mov	r0, #1
   15a90:	bl	12b68 <__printf_chk@plt>
   15a94:	mov	r0, #10
   15a98:	bl	12670 <putchar@plt>
   15a9c:	ldr	r2, [sp, #4]
   15aa0:	ldr	r3, [r6]
   15aa4:	cmp	r2, r3
   15aa8:	bne	15ab4 <__printf_chk@plt+0x2f4c>
   15aac:	add	sp, sp, #8
   15ab0:	pop	{r4, r5, r6, r7, r8, pc}
   15ab4:	bl	127e4 <__stack_chk_fail@plt>
   15ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15abc:	vpush	{d8}
   15ac0:	movw	r9, #1408	; 0x580
   15ac4:	vldr	s17, [pc, #996]	; 15eb0 <__printf_chk@plt+0x3348>
   15ac8:	movt	r9, #3
   15acc:	sub	sp, sp, #52	; 0x34
   15ad0:	mov	r7, r0
   15ad4:	add	sl, sp, #48	; 0x30
   15ad8:	ldr	r0, [r9]
   15adc:	movw	fp, #644	; 0x284
   15ae0:	movw	r8, #1424	; 0x590
   15ae4:	movt	fp, #3
   15ae8:	movt	r8, #3
   15aec:	add	r5, sp, #36	; 0x24
   15af0:	mov	r6, r1
   15af4:	mov	r4, r2
   15af8:	str	r3, [sp, #24]
   15afc:	mov	r2, #0
   15b00:	mov	r3, #1
   15b04:	str	r0, [sp, #44]	; 0x2c
   15b08:	str	r3, [sp, #36]	; 0x24
   15b0c:	vldr	s16, [pc, #928]	; 15eb4 <__printf_chk@plt+0x334c>
   15b10:	mvn	r3, #0
   15b14:	str	r2, [sl, #-8]!
   15b18:	str	r3, [sp, #20]
   15b1c:	str	r5, [sp]
   15b20:	movw	r2, #55760	; 0xd9d0
   15b24:	movw	r3, #644	; 0x284
   15b28:	movt	r2, #1
   15b2c:	movt	r3, #3
   15b30:	mov	r0, r7
   15b34:	mov	r1, r6
   15b38:	bl	1285c <getopt_long@plt>
   15b3c:	cmn	r0, #1
   15b40:	beq	160b8 <__printf_chk@plt+0x3550>
   15b44:	cmp	r0, #122	; 0x7a
   15b48:	ldrls	pc, [pc, r0, lsl #2]
   15b4c:	b	160ac <__printf_chk@plt+0x3544>
   15b50:	andeq	r6, r1, r8, ror r0
   15b54:	andeq	r6, r1, ip, lsr #1
   15b58:	andeq	r6, r1, ip, lsr #1
   15b5c:	andeq	r6, r1, ip, lsr #1
   15b60:	andeq	r6, r1, ip, lsr #1
   15b64:	andeq	r6, r1, ip, lsr #1
   15b68:	andeq	r6, r1, ip, lsr #1
   15b6c:	andeq	r6, r1, ip, lsr #1
   15b70:	andeq	r6, r1, ip, lsr #1
   15b74:	andeq	r6, r1, ip, lsr #1
   15b78:	andeq	r6, r1, ip, lsr #1
   15b7c:	andeq	r6, r1, ip, lsr #1
   15b80:	andeq	r6, r1, ip, lsr #1
   15b84:	andeq	r6, r1, ip, lsr #1
   15b88:	andeq	r6, r1, ip, lsr #1
   15b8c:	andeq	r6, r1, ip, lsr #1
   15b90:	andeq	r6, r1, ip, lsr #1
   15b94:	andeq	r6, r1, ip, lsr #1
   15b98:	andeq	r6, r1, ip, lsr #1
   15b9c:	andeq	r6, r1, ip, lsr #1
   15ba0:	andeq	r6, r1, ip, lsr #1
   15ba4:	andeq	r6, r1, ip, lsr #1
   15ba8:	andeq	r6, r1, ip, lsr #1
   15bac:	andeq	r6, r1, ip, lsr #1
   15bb0:	andeq	r6, r1, ip, lsr #1
   15bb4:	andeq	r6, r1, ip, lsr #1
   15bb8:	andeq	r6, r1, ip, lsr #1
   15bbc:	andeq	r6, r1, ip, lsr #1
   15bc0:	andeq	r6, r1, ip, lsr #1
   15bc4:	andeq	r6, r1, ip, lsr #1
   15bc8:	andeq	r6, r1, ip, lsr #1
   15bcc:	andeq	r6, r1, ip, lsr #1
   15bd0:	andeq	r6, r1, ip, lsr #1
   15bd4:	andeq	r6, r1, ip, lsr #1
   15bd8:	andeq	r6, r1, ip, lsr #1
   15bdc:	andeq	r6, r1, ip, lsr #1
   15be0:	andeq	r6, r1, ip, lsr #1
   15be4:	andeq	r6, r1, ip, lsr #1
   15be8:	andeq	r6, r1, ip, lsr #1
   15bec:	andeq	r6, r1, ip, lsr #1
   15bf0:	andeq	r6, r1, ip, lsr #1
   15bf4:	andeq	r6, r1, ip, lsr #1
   15bf8:	andeq	r6, r1, ip, lsr #1
   15bfc:	andeq	r6, r1, ip, lsr #1
   15c00:	andeq	r6, r1, ip, lsr #1
   15c04:	andeq	r6, r1, ip, lsr #1
   15c08:	andeq	r6, r1, ip, lsr #1
   15c0c:	andeq	r6, r1, ip, lsr #1
   15c10:	andeq	r6, r1, ip, lsr #1
   15c14:	andeq	r6, r1, ip, lsr #1
   15c18:	andeq	r6, r1, ip, lsr #1
   15c1c:	andeq	r6, r1, ip, lsr #1
   15c20:	andeq	r6, r1, ip, lsr #1
   15c24:	andeq	r6, r1, ip, lsr #1
   15c28:	andeq	r6, r1, ip, lsr #1
   15c2c:	andeq	r6, r1, ip, lsr #1
   15c30:	andeq	r6, r1, ip, lsr #1
   15c34:	andeq	r6, r1, ip, lsr #1
   15c38:	andeq	r6, r1, ip, lsr #1
   15c3c:	andeq	r6, r1, ip, lsr #1
   15c40:	andeq	r6, r1, ip, lsr #1
   15c44:	andeq	r6, r1, ip, lsr #1
   15c48:	andeq	r6, r1, ip, lsr #1
   15c4c:	andeq	r5, r1, ip, lsl fp
   15c50:	andeq	r6, r1, r8, asr #32
   15c54:	andeq	r6, r1, ip, lsr #1
   15c58:	andeq	r6, r1, ip, lsr #1
   15c5c:	andeq	r6, r1, ip, lsr #1
   15c60:	andeq	r6, r1, ip, lsr #1
   15c64:	andeq	r6, r1, ip, lsr #1
   15c68:	andeq	r6, r1, ip, lsr #1
   15c6c:	andeq	r6, r1, ip, lsr #1
   15c70:	andeq	r6, r1, ip, lsr #1
   15c74:	andeq	r6, r1, ip, lsr #1
   15c78:	andeq	r6, r1, ip, lsr #1
   15c7c:	andeq	r6, r1, r8, lsr r0
   15c80:	andeq	r6, r1, ip, lsr #1
   15c84:	andeq	r6, r1, ip, lsr #1
   15c88:	andeq	r6, r1, ip, lsr #1
   15c8c:	andeq	r6, r1, ip, lsr #1
   15c90:	andeq	r6, r1, ip, lsr #1
   15c94:	andeq	r6, r1, ip, lsr #1
   15c98:	andeq	r6, r1, r4, lsr #32
   15c9c:	andeq	r6, r1, ip, lsr #1
   15ca0:	andeq	r6, r1, ip, lsr #1
   15ca4:	andeq	r6, r1, ip, lsr #1
   15ca8:	strdeq	r5, [r1], -r4
   15cac:	andeq	r6, r1, ip, lsr #1
   15cb0:	andeq	r6, r1, ip, lsr #1
   15cb4:	andeq	r6, r1, ip, lsr #1
   15cb8:	andeq	r5, r1, r4, ror #31
   15cbc:	andeq	r6, r1, ip, lsr #1
   15cc0:	andeq	r6, r1, ip, lsr #1
   15cc4:	andeq	r6, r1, ip, lsr #1
   15cc8:	andeq	r6, r1, ip, lsr #1
   15ccc:	andeq	r6, r1, ip, lsr #1
   15cd0:	andeq	r6, r1, ip, lsr #1
   15cd4:	andeq	r6, r1, ip, lsr #1
   15cd8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15cdc:	andeq	r5, r1, r0, ror #30
   15ce0:	andeq	r5, r1, r4, lsl pc
   15ce4:	andeq	r6, r1, ip, lsr #1
   15ce8:	ldrdeq	r5, [r1], -r4
   15cec:	andeq	r6, r1, ip, lsr #1
   15cf0:	andeq	r5, r1, r8, asr #29
   15cf4:	andeq	r6, r1, ip, lsr #1
   15cf8:	andeq	r6, r1, ip, lsr #1
   15cfc:			; <UNDEFINED> instruction: 0x00015eb8
   15d00:	muleq	r1, r4, lr
   15d04:	andeq	r6, r1, ip, lsr #1
   15d08:	andeq	r6, r1, ip, lsr #1
   15d0c:	andeq	r5, r1, r8, asr #28
   15d10:	andeq	r5, r1, r8, ror #27
   15d14:	ldrdeq	r5, [r1], -ip
   15d18:	ldrdeq	r5, [r1], -r0
   15d1c:	andeq	r6, r1, ip, lsr #1
   15d20:	andeq	r6, r1, ip, lsr #1
   15d24:	andeq	r6, r1, ip, lsr #1
   15d28:	andeq	r5, r1, r0, asr #27
   15d2c:	andeq	r6, r1, ip, lsr #1
   15d30:	andeq	r5, r1, r4, lsl #27
   15d34:	andeq	r5, r1, r8, asr #26
   15d38:	andeq	r5, r1, ip, lsr sp
   15d3c:	mov	r3, #1
   15d40:	str	r3, [r4, #4]
   15d44:	b	15b1c <__printf_chk@plt+0x2fb4>
   15d48:	ldr	r0, [r8]
   15d4c:	mov	r1, #0
   15d50:	mov	r2, #10
   15d54:	bl	12508 <strtol@plt>
   15d58:	cmp	r0, #0
   15d5c:	str	r0, [r4, #28]
   15d60:	bne	15b1c <__printf_chk@plt+0x2fb4>
   15d64:	mov	r2, #5
   15d68:	movw	r1, #55620	; 0xd944
   15d6c:	movt	r1, #1
   15d70:	bl	127f0 <dcgettext@plt>
   15d74:	bl	19028 <__printf_chk@plt+0x64c0>
   15d78:	mov	r3, #1
   15d7c:	str	r3, [r4, #28]
   15d80:	b	15b1c <__printf_chk@plt+0x2fb4>
   15d84:	ldr	r0, [r8]
   15d88:	mov	r1, #0
   15d8c:	mov	r2, #10
   15d90:	bl	12508 <strtol@plt>
   15d94:	cmp	r0, #0
   15d98:	str	r0, [r4, #24]
   15d9c:	bne	15b1c <__printf_chk@plt+0x2fb4>
   15da0:	mov	r2, #5
   15da4:	movw	r1, #55584	; 0xd920
   15da8:	movt	r1, #1
   15dac:	bl	127f0 <dcgettext@plt>
   15db0:	bl	19028 <__printf_chk@plt+0x64c0>
   15db4:	mov	r3, #1
   15db8:	str	r3, [r4, #24]
   15dbc:	b	15b1c <__printf_chk@plt+0x2fb4>
   15dc0:	ldr	r3, [r4]
   15dc4:	add	r3, r3, #1
   15dc8:	str	r3, [r4]
   15dcc:	b	15b1c <__printf_chk@plt+0x2fb4>
   15dd0:	mov	r3, #1
   15dd4:	str	r3, [r4, #8]
   15dd8:	b	15b1c <__printf_chk@plt+0x2fb4>
   15ddc:	mov	r3, #0
   15de0:	str	r3, [r4]
   15de4:	b	15b1c <__printf_chk@plt+0x2fb4>
   15de8:	ldr	r0, [r8]
   15dec:	mov	r1, #0
   15df0:	bl	12790 <strtod@plt>
   15df4:	vcvt.f32.f64	s0, d0
   15df8:	vcmpe.f32	s0, #0.0
   15dfc:	vstr	s0, [r4, #64]	; 0x40
   15e00:	vmrs	APSR_nzcv, fpscr
   15e04:	bmi	15e14 <__printf_chk@plt+0x32ac>
   15e08:	vcmpe.f32	s0, s16
   15e0c:	vmrs	APSR_nzcv, fpscr
   15e10:	ble	15b1c <__printf_chk@plt+0x2fb4>
   15e14:	mov	r2, #5
   15e18:	movw	r1, #55516	; 0xd8dc
   15e1c:	mov	r0, #0
   15e20:	movt	r1, #1
   15e24:	bl	127f0 <dcgettext@plt>
   15e28:	bl	19028 <__printf_chk@plt+0x64c0>
   15e2c:	vldr	s15, [r4, #64]	; 0x40
   15e30:	vcmpe.f32	s15, #0.0
   15e34:	vmrs	APSR_nzcv, fpscr
   15e38:	vmovpl.f32	s15, s16
   15e3c:	vmovmi.f32	s15, s17
   15e40:	vstr	s15, [r4, #64]	; 0x40
   15e44:	b	15b1c <__printf_chk@plt+0x2fb4>
   15e48:	ldr	r1, [r8]
   15e4c:	movw	r3, #1424	; 0x590
   15e50:	movt	r3, #3
   15e54:	cmp	r1, #0
   15e58:	beq	15b1c <__printf_chk@plt+0x2fb4>
   15e5c:	mov	r0, sl
   15e60:	str	r3, [sp, #12]
   15e64:	bl	1320c <__printf_chk@plt+0x6a4>
   15e68:	cmp	r0, #0
   15e6c:	bne	15b1c <__printf_chk@plt+0x2fb4>
   15e70:	mov	r2, #5
   15e74:	movw	r1, #55480	; 0xd8b8
   15e78:	movt	r1, #1
   15e7c:	bl	127f0 <dcgettext@plt>
   15e80:	ldr	r3, [sp, #12]
   15e84:	ldr	r1, [r3]
   15e88:	bl	19028 <__printf_chk@plt+0x64c0>
   15e8c:	mov	r0, #1
   15e90:	bl	12598 <exit@plt>
   15e94:	mov	r1, #0
   15e98:	ldr	r0, [r8]
   15e9c:	mov	r2, #10
   15ea0:	bl	12508 <strtol@plt>
   15ea4:	asr	r1, r0, #31
   15ea8:	strd	r0, [r4, #16]
   15eac:	b	15b1c <__printf_chk@plt+0x2fb4>
   15eb0:	andeq	r0, r0, r0
   15eb4:	sbcmi	r0, r8, #0
   15eb8:	mov	r0, r4
   15ebc:	ldr	r1, [r8]
   15ec0:	bl	16e88 <__printf_chk@plt+0x4320>
   15ec4:	b	15b1c <__printf_chk@plt+0x2fb4>
   15ec8:	bl	154f0 <__printf_chk@plt+0x2988>
   15ecc:	mov	r0, #0
   15ed0:	bl	12598 <exit@plt>
   15ed4:	ldr	r3, [sp, #20]
   15ed8:	cmn	r3, #1
   15edc:	beq	1625c <__printf_chk@plt+0x36f4>
   15ee0:	mov	r0, r3
   15ee4:	bl	12484 <ao_driver_info@plt>
   15ee8:	ldr	r3, [r0]
   15eec:	cmp	r3, #2
   15ef0:	bne	1626c <__printf_chk@plt+0x3704>
   15ef4:	ldr	r3, [sp, #28]
   15ef8:	ldr	r0, [r3, #12]
   15efc:	bl	12520 <free@plt>
   15f00:	ldr	r0, [r8]
   15f04:	bl	126c4 <__strdup@plt>
   15f08:	ldr	r3, [sp, #28]
   15f0c:	str	r0, [r3, #12]
   15f10:	b	15b1c <__printf_chk@plt+0x2fb4>
   15f14:	ldr	r0, [r8]
   15f18:	movw	sl, #1424	; 0x590
   15f1c:	bl	127b4 <ao_driver_id@plt>
   15f20:	movt	sl, #3
   15f24:	cmp	r0, #0
   15f28:	str	r0, [sp, #20]
   15f2c:	blt	1629c <__printf_chk@plt+0x3734>
   15f30:	mov	r2, #0
   15f34:	ldr	r0, [r4, #72]	; 0x48
   15f38:	mov	r3, r2
   15f3c:	ldr	r1, [sp, #20]
   15f40:	bl	13160 <__printf_chk@plt+0x5f8>
   15f44:	ldr	r3, [r4, #72]	; 0x48
   15f48:	cmp	r3, #0
   15f4c:	str	r0, [sp, #28]
   15f50:	ldr	r3, [sp, #28]
   15f54:	streq	r0, [r4, #72]	; 0x48
   15f58:	add	sl, r3, #8
   15f5c:	b	15b1c <__printf_chk@plt+0x2fb4>
   15f60:	ldr	r0, [r8]
   15f64:	cmp	r0, #0
   15f68:	beq	162c0 <__printf_chk@plt+0x3758>
   15f6c:	bl	126c4 <__strdup@plt>
   15f70:	mov	r3, r0
   15f74:	ldr	r0, [sp, #24]
   15f78:	mov	r1, r3
   15f7c:	str	r3, [sp, #12]
   15f80:	bl	14d14 <__printf_chk@plt+0x21ac>
   15f84:	ldr	r3, [sp, #12]
   15f88:	subs	ip, r0, #0
   15f8c:	bne	16198 <__printf_chk@plt+0x3630>
   15f90:	mov	r0, r3
   15f94:	bl	12520 <free@plt>
   15f98:	b	15b1c <__printf_chk@plt+0x2fb4>
   15f9c:	ldr	r0, [r8]
   15fa0:	mov	r1, #0
   15fa4:	mov	r2, #10
   15fa8:	bl	12508 <strtol@plt>
   15fac:	lsl	r0, r0, #10
   15fb0:	str	r0, [r4, #60]	; 0x3c
   15fb4:	cmp	r0, #8192	; 0x2000
   15fb8:	bge	15b1c <__printf_chk@plt+0x2fb4>
   15fbc:	mov	r2, #5
   15fc0:	movw	r1, #55188	; 0xd794
   15fc4:	mov	r0, #0
   15fc8:	movt	r1, #1
   15fcc:	bl	127f0 <dcgettext@plt>
   15fd0:	mov	r1, #8
   15fd4:	bl	19028 <__printf_chk@plt+0x64c0>
   15fd8:	mov	r3, #8192	; 0x2000
   15fdc:	str	r3, [r4, #60]	; 0x3c
   15fe0:	b	15b1c <__printf_chk@plt+0x2fb4>
   15fe4:	mov	r3, #1
   15fe8:	str	r3, [r4, #4]
   15fec:	str	r3, [r4, #8]
   15ff0:	b	15b1c <__printf_chk@plt+0x2fb4>
   15ff4:	mov	r2, #5
   15ff8:	movw	r1, #55564	; 0xd90c
   15ffc:	mov	r0, #0
   16000:	movt	r1, #1
   16004:	bl	127f0 <dcgettext@plt>
   16008:	movw	r1, #52956	; 0xcedc
   1600c:	movw	r2, #52972	; 0xceec
   16010:	movt	r1, #1
   16014:	movt	r2, #1
   16018:	bl	19028 <__printf_chk@plt+0x64c0>
   1601c:	mov	r0, #0
   16020:	bl	12598 <exit@plt>
   16024:	mov	r2, #1
   16028:	mov	r3, #0
   1602c:	str	r2, [r4, #88]	; 0x58
   16030:	str	r3, [r4]
   16034:	b	15b1c <__printf_chk@plt+0x2fb4>
   16038:	ldr	r0, [r8]
   1603c:	bl	16e1c <__printf_chk@plt+0x42b4>
   16040:	vstr	d0, [r4, #40]	; 0x28
   16044:	b	15b1c <__printf_chk@plt+0x2fb4>
   16048:	ldr	r0, [r4, #92]	; 0x5c
   1604c:	ldr	r1, [r8]
   16050:	bl	182ec <__printf_chk@plt+0x5784>
   16054:	cmp	r0, #0
   16058:	bne	15b1c <__printf_chk@plt+0x2fb4>
   1605c:	mov	r2, #5
   16060:	movw	r1, #55712	; 0xd9a0
   16064:	movt	r1, #1
   16068:	bl	127f0 <dcgettext@plt>
   1606c:	ldr	r1, [r8]
   16070:	bl	19028 <__printf_chk@plt+0x64c0>
   16074:	b	15b1c <__printf_chk@plt+0x2fb4>
   16078:	ldr	r3, [sp, #36]	; 0x24
   1607c:	movw	r1, #55124	; 0xd754
   16080:	movt	r1, #1
   16084:	ldr	r0, [fp, r3, lsl #4]
   16088:	bl	12a24 <strcmp@plt>
   1608c:	subs	r1, r0, #0
   16090:	bne	1630c <__printf_chk@plt+0x37a4>
   16094:	ldr	r0, [r8]
   16098:	mov	r2, #10
   1609c:	bl	12508 <strtol@plt>
   160a0:	lsl	r0, r0, #10
   160a4:	str	r0, [r4, #52]	; 0x34
   160a8:	b	15b1c <__printf_chk@plt+0x2fb4>
   160ac:	bl	154f0 <__printf_chk@plt+0x2988>
   160b0:	mov	r0, #1
   160b4:	bl	12598 <exit@plt>
   160b8:	vldr	d7, [r4, #40]	; 0x28
   160bc:	vcmpe.f64	d7, #0.0
   160c0:	vmrs	APSR_nzcv, fpscr
   160c4:	ble	160e4 <__printf_chk@plt+0x357c>
   160c8:	vldr	d6, [r4, #32]
   160cc:	vcmpe.f64	d7, d6
   160d0:	vmrs	APSR_nzcv, fpscr
   160d4:	movwmi	r1, #55796	; 0xd9f4
   160d8:	movmi	r0, #0
   160dc:	movtmi	r1, #1
   160e0:	bmi	16248 <__printf_chk@plt+0x36e0>
   160e4:	ldr	r3, [sp, #20]
   160e8:	cmn	r3, #1
   160ec:	beq	161e0 <__printf_chk@plt+0x3678>
   160f0:	ldr	r5, [r4, #72]	; 0x48
   160f4:	b	1610c <__printf_chk@plt+0x35a4>
   160f8:	cmp	r2, #2
   160fc:	bgt	1613c <__printf_chk@plt+0x35d4>
   16100:	cmp	r2, #0
   16104:	beq	1615c <__printf_chk@plt+0x35f4>
   16108:	ldr	r5, [r5, #16]
   1610c:	cmp	r5, #0
   16110:	beq	16170 <__printf_chk@plt+0x3608>
   16114:	ldr	r2, [r4]
   16118:	cmp	r2, #3
   1611c:	ble	160f8 <__printf_chk@plt+0x3590>
   16120:	movw	r0, #55992	; 0xdab8
   16124:	mov	r1, #0
   16128:	movt	r0, #1
   1612c:	bl	1255c <ao_append_global_option@plt>
   16130:	ldr	r2, [r4]
   16134:	cmp	r2, #2
   16138:	ble	16100 <__printf_chk@plt+0x3598>
   1613c:	mov	r2, #0
   16140:	movw	r1, #56000	; 0xdac0
   16144:	add	r0, r5, #8
   16148:	movt	r1, #1
   1614c:	bl	124cc <ao_append_option@plt>
   16150:	ldr	r2, [r4]
   16154:	cmp	r2, #0
   16158:	bne	16108 <__printf_chk@plt+0x35a0>
   1615c:	movw	r1, #56008	; 0xdac8
   16160:	add	r0, r5, #8
   16164:	movt	r1, #1
   16168:	bl	124cc <ao_append_option@plt>
   1616c:	b	16108 <__printf_chk@plt+0x35a0>
   16170:	ldr	r1, [sp, #44]	; 0x2c
   16174:	movw	r3, #1416	; 0x588
   16178:	ldr	r2, [r9]
   1617c:	movt	r3, #3
   16180:	cmp	r1, r2
   16184:	ldr	r0, [r3]
   16188:	bne	1631c <__printf_chk@plt+0x37b4>
   1618c:	add	sp, sp, #52	; 0x34
   16190:	vpop	{d8}
   16194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16198:	mov	r2, #5
   1619c:	movw	r1, #55244	; 0xd7cc
   161a0:	mov	r0, #0
   161a4:	movt	r1, #1
   161a8:	str	ip, [sp, #16]
   161ac:	bl	127f0 <dcgettext@plt>
   161b0:	ldr	ip, [sp, #16]
   161b4:	mov	r2, r0
   161b8:	mov	r0, ip
   161bc:	str	r2, [sp, #16]
   161c0:	bl	15138 <__printf_chk@plt+0x25d0>
   161c4:	ldr	r2, [sp, #16]
   161c8:	mov	r1, r0
   161cc:	mov	r0, r2
   161d0:	ldr	r2, [r8]
   161d4:	bl	19028 <__printf_chk@plt+0x64c0>
   161d8:	ldr	r3, [sp, #12]
   161dc:	b	15f90 <__printf_chk@plt+0x3428>
   161e0:	ldr	r0, [r4, #68]	; 0x44
   161e4:	cmp	r0, #0
   161e8:	beq	16230 <__printf_chk@plt+0x36c8>
   161ec:	bl	127b4 <ao_driver_id@plt>
   161f0:	subs	r1, r0, #0
   161f4:	blt	16214 <__printf_chk@plt+0x36ac>
   161f8:	ldr	r0, [r4, #72]	; 0x48
   161fc:	mov	r3, #0
   16200:	ldr	r2, [sp, #40]	; 0x28
   16204:	bl	13160 <__printf_chk@plt+0x5f8>
   16208:	mov	r5, r0
   1620c:	str	r0, [r4, #72]	; 0x48
   16210:	b	1610c <__printf_chk@plt+0x35a4>
   16214:	movw	r1, #55852	; 0xda2c
   16218:	mov	r0, #0
   1621c:	movt	r1, #1
   16220:	mov	r2, #5
   16224:	bl	127f0 <dcgettext@plt>
   16228:	ldr	r1, [r4, #68]	; 0x44
   1622c:	bl	19028 <__printf_chk@plt+0x64c0>
   16230:	bl	12820 <ao_default_driver_id@plt>
   16234:	subs	r1, r0, #0
   16238:	bge	161f8 <__printf_chk@plt+0x3690>
   1623c:	movw	r1, #55908	; 0xda64
   16240:	movt	r1, #1
   16244:	mov	r0, #0
   16248:	mov	r2, #5
   1624c:	bl	127f0 <dcgettext@plt>
   16250:	bl	19028 <__printf_chk@plt+0x64c0>
   16254:	mov	r0, #1
   16258:	bl	12598 <exit@plt>
   1625c:	movw	r1, #55416	; 0xd878
   16260:	mov	r0, #0
   16264:	movt	r1, #1
   16268:	b	16248 <__printf_chk@plt+0x36e0>
   1626c:	mov	r3, r0
   16270:	mov	r2, #5
   16274:	movw	r1, #55372	; 0xd84c
   16278:	mov	r0, #0
   1627c:	movt	r1, #1
   16280:	str	r3, [sp, #12]
   16284:	bl	127f0 <dcgettext@plt>
   16288:	ldr	r3, [sp, #12]
   1628c:	ldr	r1, [r3, #8]
   16290:	bl	19028 <__printf_chk@plt+0x64c0>
   16294:	mov	r0, #1
   16298:	bl	12598 <exit@plt>
   1629c:	mov	r2, #5
   162a0:	movw	r1, #55348	; 0xd834
   162a4:	mov	r0, #0
   162a8:	movt	r1, #1
   162ac:	bl	127f0 <dcgettext@plt>
   162b0:	ldr	r1, [sl]
   162b4:	bl	19028 <__printf_chk@plt+0x64c0>
   162b8:	mov	r0, #1
   162bc:	bl	12598 <exit@plt>
   162c0:	movw	r4, #1448	; 0x5a8
   162c4:	movt	r4, #3
   162c8:	mov	r2, #5
   162cc:	movw	r1, #55328	; 0xd820
   162d0:	movt	r1, #1
   162d4:	mov	r3, r0
   162d8:	ldr	r5, [r4]
   162dc:	str	r3, [sp, #12]
   162e0:	bl	127f0 <dcgettext@plt>
   162e4:	mov	r1, #1
   162e8:	mov	r2, r0
   162ec:	mov	r0, r5
   162f0:	bl	12658 <__fprintf_chk@plt>
   162f4:	ldr	r0, [sp, #24]
   162f8:	ldr	r1, [r4]
   162fc:	bl	14950 <__printf_chk@plt+0x1de8>
   16300:	ldr	r3, [sp, #12]
   16304:	mov	r0, r3
   16308:	bl	12598 <exit@plt>
   1630c:	movw	r1, #55140	; 0xd764
   16310:	mov	r0, #0
   16314:	movt	r1, #1
   16318:	b	16248 <__printf_chk@plt+0x36e0>
   1631c:	bl	127e4 <__stack_chk_fail@plt>
   16320:	mov	r0, #1
   16324:	bx	lr
   16328:	push	{r4, r5, r6, lr}
   1632c:	mov	r6, r0
   16330:	mov	r0, #12
   16334:	bl	12958 <malloc@plt>
   16338:	mov	r5, r0
   1633c:	mov	r0, #72	; 0x48
   16340:	bl	12958 <malloc@plt>
   16344:	cmp	r0, #0
   16348:	cmpne	r5, #0
   1634c:	mov	r4, r0
   16350:	moveq	r0, #0
   16354:	movne	r0, #1
   16358:	beq	1640c <__printf_chk@plt+0x38a4>
   1635c:	mov	r0, r6
   16360:	bl	126c4 <__strdup@plt>
   16364:	mov	r1, #0
   16368:	mov	r3, #1
   1636c:	str	r1, [r4, #20]
   16370:	str	r3, [r4, #64]	; 0x40
   16374:	mov	r2, #0
   16378:	mov	r3, #0
   1637c:	str	r1, [r4, #16]
   16380:	strd	r2, [r4, #8]
   16384:	movw	r1, #996	; 0x3e4
   16388:	ldrb	r3, [r6]
   1638c:	movt	r1, #3
   16390:	str	r4, [r5, #8]
   16394:	cmp	r3, #45	; 0x2d
   16398:	stm	r5, {r0, r1}
   1639c:	bne	163d0 <__printf_chk@plt+0x3868>
   163a0:	ldrb	r2, [r6, #1]
   163a4:	cmp	r2, #0
   163a8:	bne	163d0 <__printf_chk@plt+0x3868>
   163ac:	movw	r3, #1400	; 0x578
   163b0:	movt	r3, #3
   163b4:	str	r2, [r4, #64]	; 0x40
   163b8:	ldr	r6, [r3]
   163bc:	str	r6, [r4]
   163c0:	cmp	r6, #0
   163c4:	beq	163ec <__printf_chk@plt+0x3884>
   163c8:	mov	r0, r5
   163cc:	pop	{r4, r5, r6, pc}
   163d0:	mov	r0, r6
   163d4:	movw	r1, #56100	; 0xdb24
   163d8:	movt	r1, #1
   163dc:	bl	12a78 <fopen64@plt>
   163e0:	mov	r6, r0
   163e4:	str	r0, [r4]
   163e8:	b	163c0 <__printf_chk@plt+0x3858>
   163ec:	ldr	r0, [r5]
   163f0:	bl	12520 <free@plt>
   163f4:	mov	r0, r4
   163f8:	bl	12520 <free@plt>
   163fc:	mov	r0, r5
   16400:	bl	12520 <free@plt>
   16404:	mov	r0, r6
   16408:	pop	{r4, r5, r6, pc}
   1640c:	movw	r3, #1428	; 0x594
   16410:	movt	r3, #3
   16414:	mov	r2, #5
   16418:	movw	r1, #56148	; 0xdb54
   1641c:	movt	r1, #1
   16420:	ldr	r4, [r3]
   16424:	bl	127f0 <dcgettext@plt>
   16428:	mov	r1, #1
   1642c:	mov	r2, r0
   16430:	mov	r0, r4
   16434:	bl	12658 <__fprintf_chk@plt>
   16438:	mov	r0, #1
   1643c:	bl	12598 <exit@plt>
   16440:	ldr	r3, [r0, #8]
   16444:	ldr	r2, [r3, #64]	; 0x40
   16448:	ldr	r0, [r3]
   1644c:	cmp	r2, #0
   16450:	beq	16458 <__printf_chk@plt+0x38f0>
   16454:	b	128b0 <ftell@plt>
   16458:	mvn	r0, #0
   1645c:	bx	lr
   16460:	ldr	r3, [r0, #8]
   16464:	ldr	ip, [r3, #64]	; 0x40
   16468:	ldr	r0, [r3]
   1646c:	cmp	ip, #0
   16470:	beq	16478 <__printf_chk@plt+0x3910>
   16474:	b	1252c <fseek@plt>
   16478:	mvn	r0, #0
   1647c:	bx	lr
   16480:	push	{r4, lr}
   16484:	ldr	r4, [r0, #8]
   16488:	mov	r0, r1
   1648c:	mov	r1, r2
   16490:	mov	r2, r3
   16494:	ldr	r3, [r4]
   16498:	bl	127cc <fread@plt>
   1649c:	cmp	r0, #0
   164a0:	pople	{r4, pc}
   164a4:	ldrd	r2, [r4, #8]
   164a8:	adds	r2, r2, r0
   164ac:	adc	r3, r3, r0, asr #31
   164b0:	strd	r2, [r4, #8]
   164b4:	pop	{r4, pc}
   164b8:	ldr	ip, [r0, #8]
   164bc:	push	{r4, r5, r6, r7, r8, lr}
   164c0:	mov	r5, r1
   164c4:	ldr	r0, [ip, #64]	; 0x40
   164c8:	mov	r7, r2
   164cc:	mov	r6, r3
   164d0:	ldr	r4, [ip]
   164d4:	cmp	r0, #0
   164d8:	popeq	{r4, r5, r6, r7, r8, pc}
   164dc:	mov	r0, r4
   164e0:	bl	128b0 <ftell@plt>
   164e4:	mov	r1, r7
   164e8:	mov	r2, r6
   164ec:	mov	r3, r4
   164f0:	mov	r8, r0
   164f4:	mov	r0, r5
   164f8:	bl	127cc <fread@plt>
   164fc:	mov	r1, r8
   16500:	mov	r2, #0
   16504:	mov	r5, r0
   16508:	mov	r0, r4
   1650c:	bl	1252c <fseek@plt>
   16510:	cmp	r0, #0
   16514:	moveq	r0, r5
   16518:	movne	r0, #0
   1651c:	pop	{r4, r5, r6, r7, r8, pc}
   16520:	ldr	r0, [r0, #8]
   16524:	add	r0, r0, #8
   16528:	b	198a8 <__printf_chk@plt+0x6d40>
   1652c:	ldr	r3, [r0, #8]
   16530:	push	{r4, lr}
   16534:	mov	r4, r0
   16538:	ldr	r0, [r3]
   1653c:	bl	129b8 <fclose@plt>
   16540:	ldr	r0, [r4]
   16544:	bl	12520 <free@plt>
   16548:	ldr	r0, [r4, #8]
   1654c:	bl	12520 <free@plt>
   16550:	mov	r0, r4
   16554:	pop	{r4, lr}
   16558:	b	12520 <free@plt>
   1655c:	push	{r4, r5, r6, lr}
   16560:	movw	r5, #1032	; 0x408
   16564:	movt	r5, #3
   16568:	mov	r6, r0
   1656c:	ldr	r4, [r5]
   16570:	cmp	r4, #0
   16574:	bne	16588 <__printf_chk@plt+0x3a20>
   16578:	b	1659c <__printf_chk@plt+0x3a34>
   1657c:	ldr	r4, [r5, #4]!
   16580:	cmp	r4, #0
   16584:	beq	1659c <__printf_chk@plt+0x3a34>
   16588:	mov	r0, r6
   1658c:	ldr	r1, [r4]
   16590:	bl	12a24 <strcmp@plt>
   16594:	cmp	r0, #0
   16598:	bne	1657c <__printf_chk@plt+0x3a14>
   1659c:	mov	r0, r4
   165a0:	pop	{r4, r5, r6, pc}
   165a4:	push	{r3, r4, r5, r6, r7, lr}
   165a8:	movw	r7, #1032	; 0x408
   165ac:	movt	r7, #3
   165b0:	mov	r6, r0
   165b4:	ldr	r0, [r7]
   165b8:	cmp	r0, #0
   165bc:	popeq	{r3, r4, r5, r6, r7, pc}
   165c0:	mov	r5, r7
   165c4:	mov	r4, #0
   165c8:	b	165dc <__printf_chk@plt+0x3a74>
   165cc:	ldr	r0, [r5, #4]!
   165d0:	add	r4, r4, #1
   165d4:	cmp	r0, #0
   165d8:	popeq	{r3, r4, r5, r6, r7, pc}
   165dc:	ldr	r3, [r0, #4]
   165e0:	mov	r0, r6
   165e4:	blx	r3
   165e8:	cmp	r0, #0
   165ec:	beq	165cc <__printf_chk@plt+0x3a64>
   165f0:	ldr	r0, [r7, r4, lsl #2]
   165f4:	pop	{r3, r4, r5, r6, r7, pc}
   165f8:	push	{r3, r4, r5, lr}
   165fc:	mov	r4, r0
   16600:	mov	r0, #24
   16604:	bl	12958 <malloc@plt>
   16608:	subs	r5, r0, #0
   1660c:	beq	1662c <__printf_chk@plt+0x3ac4>
   16610:	ldm	r4!, {r0, r1, r2, r3}
   16614:	mov	ip, r5
   16618:	stmia	ip!, {r0, r1, r2, r3}
   1661c:	ldm	r4, {r0, r1}
   16620:	stm	ip, {r0, r1}
   16624:	mov	r0, r5
   16628:	pop	{r3, r4, r5, pc}
   1662c:	movw	r3, #1428	; 0x594
   16630:	movt	r3, #3
   16634:	mov	r2, #5
   16638:	movw	r1, #56172	; 0xdb6c
   1663c:	movt	r1, #1
   16640:	ldr	r4, [r3]
   16644:	bl	127f0 <dcgettext@plt>
   16648:	mov	r1, #1
   1664c:	mov	r2, r0
   16650:	mov	r0, r4
   16654:	bl	12658 <__fprintf_chk@plt>
   16658:	mov	r0, #1
   1665c:	bl	12598 <exit@plt>
   16660:	bx	lr
   16664:	mov	r0, #0
   16668:	bx	lr
   1666c:	mvn	r0, #0
   16670:	bx	lr
   16674:	mov	r0, #0
   16678:	bx	lr
   1667c:	push	{r3, r4, r5, r6, r7, lr}
   16680:	mov	r5, r0
   16684:	ldr	r3, [r0]
   16688:	ldr	r0, [r0, #276]	; 0x114
   1668c:	cmp	r3, #0
   16690:	bne	166f8 <__printf_chk@plt+0x3b90>
   16694:	movw	r4, #1456	; 0x5b0
   16698:	movt	r4, #3
   1669c:	ldr	r6, [r4]
   166a0:	cmp	r6, #0
   166a4:	bne	166f8 <__printf_chk@plt+0x3b90>
   166a8:	ldr	r2, [r0, #4]
   166ac:	movw	r3, #31984	; 0x7cf0
   166b0:	movt	r3, #3
   166b4:	ldr	r7, [r3]
   166b8:	ldr	r3, [r2, #24]
   166bc:	blx	r3
   166c0:	mov	r2, r6
   166c4:	mov	r1, r0
   166c8:	mov	r0, r7
   166cc:	bl	1449c <__printf_chk@plt+0x1934>
   166d0:	mov	r1, r0
   166d4:	mov	r0, r6
   166d8:	bl	14450 <__printf_chk@plt+0x18e8>
   166dc:	ldr	r3, [r5]
   166e0:	cmp	r3, #0
   166e4:	bne	166f8 <__printf_chk@plt+0x3b90>
   166e8:	ldr	r0, [r4]
   166ec:	subs	r0, r0, #0
   166f0:	mvnne	r0, #0
   166f4:	pop	{r3, r4, r5, r6, r7, pc}
   166f8:	mvn	r0, #0
   166fc:	pop	{r3, r4, r5, r6, r7, pc}
   16700:	push	{r4, r5, r6, r7, lr}
   16704:	movw	r5, #1408	; 0x580
   16708:	movt	r5, #3
   1670c:	sub	sp, sp, #140	; 0x8c
   16710:	mov	r4, r0
   16714:	add	r0, sp, #4
   16718:	ldr	r3, [r5]
   1671c:	str	r3, [sp, #132]	; 0x84
   16720:	bl	12634 <sigfillset@plt>
   16724:	mov	r1, #2
   16728:	add	r0, sp, #4
   1672c:	bl	126d0 <sigaddset@plt>
   16730:	mov	r1, #20
   16734:	add	r0, sp, #4
   16738:	bl	126d0 <sigaddset@plt>
   1673c:	mov	r1, #18
   16740:	add	r0, sp, #4
   16744:	bl	126d0 <sigaddset@plt>
   16748:	mov	r0, #0
   1674c:	add	r1, sp, #4
   16750:	mov	r2, r0
   16754:	bl	126ac <pthread_sigmask@plt>
   16758:	cmp	r0, #0
   1675c:	bne	167d0 <__printf_chk@plt+0x3c68>
   16760:	ldr	r0, [r4, #12]
   16764:	bl	12460 <curl_easy_perform@plt>
   16768:	ldr	r3, [r4]
   1676c:	cmp	r3, #0
   16770:	mov	r7, r0
   16774:	ldr	r0, [r4, #4]
   16778:	bne	16790 <__printf_chk@plt+0x3c28>
   1677c:	movw	r3, #1456	; 0x5b0
   16780:	movt	r3, #3
   16784:	ldr	r3, [r3]
   16788:	cmp	r3, #0
   1678c:	beq	167ec <__printf_chk@plt+0x3c84>
   16790:	mov	r7, #0
   16794:	bl	13b80 <__printf_chk@plt+0x1018>
   16798:	ldr	r0, [r4, #12]
   1679c:	mov	r6, #0
   167a0:	bl	12784 <curl_easy_cleanup@plt>
   167a4:	ldr	r0, [r4, #16]
   167a8:	str	r6, [r4, #12]
   167ac:	bl	12808 <curl_slist_free_all@plt>
   167b0:	ldr	r2, [sp, #132]	; 0x84
   167b4:	ldr	r3, [r5]
   167b8:	mov	r0, r7
   167bc:	str	r6, [r4, #16]
   167c0:	cmp	r2, r3
   167c4:	bne	16804 <__printf_chk@plt+0x3c9c>
   167c8:	add	sp, sp, #140	; 0x8c
   167cc:	pop	{r4, r5, r6, r7, pc}
   167d0:	mov	r2, #5
   167d4:	movw	r1, #56232	; 0xdba8
   167d8:	mov	r0, #0
   167dc:	movt	r1, #1
   167e0:	bl	127f0 <dcgettext@plt>
   167e4:	bl	19028 <__printf_chk@plt+0x64c0>
   167e8:	b	16760 <__printf_chk@plt+0x3bf8>
   167ec:	bl	13b48 <__printf_chk@plt+0xfe0>
   167f0:	cmp	r7, #0
   167f4:	beq	16798 <__printf_chk@plt+0x3c30>
   167f8:	add	r0, r4, #20
   167fc:	bl	19028 <__printf_chk@plt+0x64c0>
   16800:	b	16798 <__printf_chk@plt+0x3c30>
   16804:	bl	127e4 <__stack_chk_fail@plt>
   16808:	push	{r3, r4, r5, lr}
   1680c:	mov	r1, #58	; 0x3a
   16810:	mov	r4, r0
   16814:	bl	12b44 <strchr@plt>
   16818:	rsb	r5, r4, r0
   1681c:	cmp	r5, #9
   16820:	bgt	16858 <__printf_chk@plt+0x3cf0>
   16824:	mov	r0, r4
   16828:	bl	1297c <strlen@plt>
   1682c:	add	r3, r5, #2
   16830:	cmp	r3, r0
   16834:	bcs	16858 <__printf_chk@plt+0x3cf0>
   16838:	add	r0, r4, r5
   1683c:	mov	r2, #3
   16840:	movw	r1, #56268	; 0xdbcc
   16844:	movt	r1, #1
   16848:	bl	12550 <strncmp@plt>
   1684c:	rsbs	r0, r0, #1
   16850:	movcc	r0, #0
   16854:	pop	{r3, r4, r5, pc}
   16858:	mov	r0, #0
   1685c:	pop	{r3, r4, r5, pc}
   16860:	push	{r4, lr}
   16864:	ldr	r4, [r0, #8]
   16868:	ldr	r0, [r4]
   1686c:	cmp	r0, #0
   16870:	bne	168b0 <__printf_chk@plt+0x3d48>
   16874:	movw	ip, #1456	; 0x5b0
   16878:	movt	ip, #3
   1687c:	ldr	ip, [ip]
   16880:	cmp	ip, #0
   16884:	popne	{r4, pc}
   16888:	mul	r2, r3, r2
   1688c:	ldr	r0, [r4, #4]
   16890:	bl	139e8 <__printf_chk@plt+0xe80>
   16894:	mov	r1, #280	; 0x118
   16898:	ldrd	r2, [r4, r1]
   1689c:	mov	ip, r0
   168a0:	adds	r2, r2, ip
   168a4:	adc	r3, r3, ip, asr #31
   168a8:	strd	r2, [r4, r1]
   168ac:	pop	{r4, pc}
   168b0:	mov	r0, #0
   168b4:	pop	{r4, pc}
   168b8:	push	{r3, r4, r5, lr}
   168bc:	ldr	r5, [r0, #8]
   168c0:	add	r0, r5, #280	; 0x118
   168c4:	bl	198a8 <__printf_chk@plt+0x6d40>
   168c8:	mov	r3, #1
   168cc:	mov	r4, r0
   168d0:	ldr	r0, [r5, #4]
   168d4:	str	r3, [r4, #8]
   168d8:	mov	r3, #0
   168dc:	str	r3, [r4, #12]
   168e0:	bl	14024 <__printf_chk@plt+0x14bc>
   168e4:	add	ip, r4, #16
   168e8:	mov	lr, r0
   168ec:	mov	r5, r0
   168f0:	ldm	lr!, {r0, r1, r2, r3}
   168f4:	stmia	ip!, {r0, r1, r2, r3}
   168f8:	ldm	lr!, {r0, r1, r2, r3}
   168fc:	stmia	ip!, {r0, r1, r2, r3}
   16900:	ldm	lr, {r0, r1}
   16904:	stm	ip, {r0, r1}
   16908:	mov	r0, r5
   1690c:	bl	12520 <free@plt>
   16910:	mov	r0, r4
   16914:	pop	{r3, r4, r5, pc}
   16918:	push	{r3, r4, r5, lr}
   1691c:	mov	r5, r0
   16920:	ldr	r4, [r0, #8]
   16924:	mov	r3, #1
   16928:	ldr	r0, [r4, #4]
   1692c:	str	r3, [r4]
   16930:	bl	13b80 <__printf_chk@plt+0x1018>
   16934:	mov	r1, #0
   16938:	ldr	r0, [r4, #8]
   1693c:	bl	12574 <pthread_join@plt>
   16940:	ldr	r0, [r4, #4]
   16944:	bl	13908 <__printf_chk@plt+0xda0>
   16948:	mov	r3, #0
   1694c:	ldr	r0, [r5]
   16950:	str	r3, [r4, #4]
   16954:	bl	12520 <free@plt>
   16958:	ldr	r0, [r5, #8]
   1695c:	bl	12520 <free@plt>
   16960:	mov	r0, r5
   16964:	pop	{r3, r4, r5, lr}
   16968:	b	12520 <free@plt>
   1696c:	push	{r3, r4, r5, r6, r7, lr}
   16970:	mov	r5, r3
   16974:	ldr	r3, [r3]
   16978:	cmp	r3, #0
   1697c:	bne	169d8 <__printf_chk@plt+0x3e70>
   16980:	movw	r4, #1456	; 0x5b0
   16984:	movt	r4, #3
   16988:	ldr	r6, [r4]
   1698c:	cmp	r6, #0
   16990:	beq	1699c <__printf_chk@plt+0x3e34>
   16994:	mov	r0, r3
   16998:	pop	{r3, r4, r5, r6, r7, pc}
   1699c:	mul	r7, r2, r1
   169a0:	mov	r1, r0
   169a4:	ldr	r0, [r5, #4]
   169a8:	mov	r2, r7
   169ac:	bl	139e4 <__printf_chk@plt+0xe7c>
   169b0:	cmp	r0, #0
   169b4:	popeq	{r3, r4, r5, r6, r7, pc}
   169b8:	ldr	r3, [r5]
   169bc:	cmp	r3, #0
   169c0:	bne	169e0 <__printf_chk@plt+0x3e78>
   169c4:	ldr	r0, [r4]
   169c8:	cmp	r0, #0
   169cc:	moveq	r0, r7
   169d0:	movne	r0, #0
   169d4:	pop	{r3, r4, r5, r6, r7, pc}
   169d8:	mov	r0, #0
   169dc:	pop	{r3, r4, r5, r6, r7, pc}
   169e0:	mov	r0, r6
   169e4:	pop	{r3, r4, r5, r6, r7, pc}
   169e8:	push	{r3, r4, r5, lr}
   169ec:	mov	r2, r0
   169f0:	ldr	r4, [r0, #12]
   169f4:	mov	r5, r0
   169f8:	movw	r1, #10001	; 0x2711
   169fc:	mov	r0, r4
   16a00:	bl	128e0 <curl_easy_setopt@plt>
   16a04:	mov	r0, r4
   16a08:	movw	r1, #20011	; 0x4e2b
   16a0c:	movw	r2, #26988	; 0x696c
   16a10:	movt	r2, #1
   16a14:	bl	128e0 <curl_easy_setopt@plt>
   16a18:	ldr	r3, [r5, #276]	; 0x114
   16a1c:	mov	r0, r4
   16a20:	movw	r1, #10002	; 0x2712
   16a24:	ldr	r2, [r3]
   16a28:	bl	128e0 <curl_easy_setopt@plt>
   16a2c:	add	r2, r5, #20
   16a30:	movw	r1, #10010	; 0x271a
   16a34:	mov	r0, r4
   16a38:	bl	128e0 <curl_easy_setopt@plt>
   16a3c:	bl	16660 <__printf_chk@plt+0x3af8>
   16a40:	mov	r0, r4
   16a44:	movw	r1, #20056	; 0x4e58
   16a48:	movw	r2, #26236	; 0x667c
   16a4c:	movt	r2, #1
   16a50:	bl	128e0 <curl_easy_setopt@plt>
   16a54:	mov	r2, r5
   16a58:	mov	r0, r4
   16a5c:	movw	r1, #10057	; 0x2749
   16a60:	bl	128e0 <curl_easy_setopt@plt>
   16a64:	mov	r0, r4
   16a68:	mov	r1, #43	; 0x2b
   16a6c:	mov	r2, #0
   16a70:	bl	128e0 <curl_easy_setopt@plt>
   16a74:	mov	r0, r4
   16a78:	movw	r1, #10018	; 0x2722
   16a7c:	movw	r2, #56272	; 0xdbd0
   16a80:	movt	r2, #1
   16a84:	bl	128e0 <curl_easy_setopt@plt>
   16a88:	ldr	r2, [r5, #16]
   16a8c:	mov	r0, r4
   16a90:	movw	r1, #10023	; 0x2727
   16a94:	bl	128e0 <curl_easy_setopt@plt>
   16a98:	mov	r0, r4
   16a9c:	mov	r1, #52	; 0x34
   16aa0:	mov	r2, #1
   16aa4:	pop	{r3, r4, r5, lr}
   16aa8:	b	128e0 <curl_easy_setopt@plt>
   16aac:	push	{r4, r5, r6, r7, r8, lr}
   16ab0:	mov	r5, r0
   16ab4:	sub	sp, sp, #8
   16ab8:	mov	r0, #12
   16abc:	mov	r4, r1
   16ac0:	bl	12958 <malloc@plt>
   16ac4:	mov	r8, r0
   16ac8:	mov	r0, #336	; 0x150
   16acc:	bl	12958 <malloc@plt>
   16ad0:	cmp	r0, #0
   16ad4:	cmpne	r8, #0
   16ad8:	mov	r6, r0
   16adc:	moveq	r0, #0
   16ae0:	movne	r0, #1
   16ae4:	beq	16c3c <__printf_chk@plt+0x40d4>
   16ae8:	mov	r0, r5
   16aec:	mov	r7, #0
   16af0:	bl	126c4 <__strdup@plt>
   16af4:	ldr	ip, [r4, #60]	; 0x3c
   16af8:	vldr	s15, [r4, #64]	; 0x40
   16afc:	vldr	d6, [pc, #396]	; 16c90 <__printf_chk@plt+0x4128>
   16b00:	str	r7, [sp]
   16b04:	mov	r2, r7
   16b08:	vmov	s11, ip
   16b0c:	mov	r3, r7
   16b10:	movw	r1, #1052	; 0x41c
   16b14:	movt	r1, #3
   16b18:	vcvt.f32.s32	s14, s11
   16b1c:	str	r1, [r8, #4]
   16b20:	str	r6, [r8, #8]
   16b24:	vmul.f32	s14, s14, s15
   16b28:	vcvt.f64.f32	d7, s14
   16b2c:	vmul.f64	d7, d7, d6
   16b30:	str	r0, [r8]
   16b34:	mov	r0, ip
   16b38:	vcvt.s32.f64	s13, d7
   16b3c:	vmov	r1, s13
   16b40:	bl	13760 <__printf_chk@plt+0xbf8>
   16b44:	cmp	r0, r7
   16b48:	str	r0, [r6, #4]
   16b4c:	beq	16c70 <__printf_chk@plt+0x4108>
   16b50:	mov	r3, #280	; 0x118
   16b54:	str	r7, [r6, #12]
   16b58:	str	r7, [r6, #16]
   16b5c:	mov	r4, #0
   16b60:	str	r8, [r6, #276]	; 0x114
   16b64:	mov	r5, #0
   16b68:	str	r7, [r6, #292]	; 0x124
   16b6c:	movw	r1, #56328	; 0xdc08
   16b70:	str	r7, [r6, #288]	; 0x120
   16b74:	movt	r1, #1
   16b78:	str	r7, [r6]
   16b7c:	mov	r0, r7
   16b80:	strd	r4, [r6, r3]
   16b84:	bl	12568 <curl_slist_append@plt>
   16b88:	cmp	r0, #0
   16b8c:	str	r0, [r6, #16]
   16b90:	beq	16bf8 <__printf_chk@plt+0x4090>
   16b94:	bl	12514 <curl_easy_init@plt>
   16b98:	cmp	r0, #0
   16b9c:	str	r0, [r6, #12]
   16ba0:	beq	16c08 <__printf_chk@plt+0x40a0>
   16ba4:	mov	r0, r6
   16ba8:	bl	169e8 <__printf_chk@plt+0x3e80>
   16bac:	mov	r1, r7
   16bb0:	movw	r2, #26368	; 0x6700
   16bb4:	add	r0, r6, #8
   16bb8:	movt	r2, #1
   16bbc:	mov	r3, r6
   16bc0:	bl	12a18 <pthread_create@plt>
   16bc4:	subs	r2, r0, #0
   16bc8:	bne	16bf8 <__printf_chk@plt+0x4090>
   16bcc:	movw	r3, #31984	; 0x7cf0
   16bd0:	movt	r3, #3
   16bd4:	mov	r1, #1
   16bd8:	mov	r0, r8
   16bdc:	ldr	r3, [r3]
   16be0:	strb	r2, [r3, #52]	; 0x34
   16be4:	strb	r2, [r3, #76]	; 0x4c
   16be8:	strb	r1, [r3, #148]	; 0x94
   16bec:	strb	r1, [r3, #172]	; 0xac
   16bf0:	add	sp, sp, #8
   16bf4:	pop	{r4, r5, r6, r7, r8, pc}
   16bf8:	ldr	r0, [r6, #12]
   16bfc:	cmp	r0, #0
   16c00:	beq	16c08 <__printf_chk@plt+0x40a0>
   16c04:	bl	12784 <curl_easy_cleanup@plt>
   16c08:	ldr	r0, [r6, #16]
   16c0c:	cmp	r0, #0
   16c10:	beq	16c18 <__printf_chk@plt+0x40b0>
   16c14:	bl	12808 <curl_slist_free_all@plt>
   16c18:	ldr	r0, [r8]
   16c1c:	bl	12520 <free@plt>
   16c20:	mov	r0, r6
   16c24:	bl	12520 <free@plt>
   16c28:	mov	r0, r8
   16c2c:	bl	12520 <free@plt>
   16c30:	mov	r0, #0
   16c34:	add	sp, sp, #8
   16c38:	pop	{r4, r5, r6, r7, r8, pc}
   16c3c:	movw	r3, #1428	; 0x594
   16c40:	movt	r3, #3
   16c44:	mov	r2, #5
   16c48:	movw	r1, #56148	; 0xdb54
   16c4c:	movt	r1, #1
   16c50:	ldr	r4, [r3]
   16c54:	bl	127f0 <dcgettext@plt>
   16c58:	mov	r1, #1
   16c5c:	mov	r2, r0
   16c60:	mov	r0, r4
   16c64:	bl	12658 <__fprintf_chk@plt>
   16c68:	mov	r0, #1
   16c6c:	bl	12598 <exit@plt>
   16c70:	mov	r2, #5
   16c74:	movw	r1, #56288	; 0xdbe0
   16c78:	movt	r1, #1
   16c7c:	bl	127f0 <dcgettext@plt>
   16c80:	bl	19028 <__printf_chk@plt+0x64c0>
   16c84:	mov	r0, #1
   16c88:	bl	12598 <exit@plt>
   16c8c:	nop	{0}
   16c90:			; <UNDEFINED> instruction: 0x47ae147b
   16c94:	svccc	0x00847ae1
   16c98:	push	{r4, r5, r6, r7, r8, r9, lr}
   16c9c:	movw	r6, #1408	; 0x580
   16ca0:	movt	r6, #3
   16ca4:	sub	sp, sp, #20
   16ca8:	cmp	r0, #15
   16cac:	ldr	r3, [r6]
   16cb0:	str	r3, [sp, #12]
   16cb4:	beq	16d6c <__printf_chk@plt+0x4204>
   16cb8:	cmp	r0, #20
   16cbc:	beq	16d58 <__printf_chk@plt+0x41f0>
   16cc0:	cmp	r0, #2
   16cc4:	beq	16ce0 <__printf_chk@plt+0x4178>
   16cc8:	ldr	r2, [sp, #12]
   16ccc:	ldr	r3, [r6]
   16cd0:	cmp	r2, r3
   16cd4:	bne	16d80 <__printf_chk@plt+0x4218>
   16cd8:	add	sp, sp, #20
   16cdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16ce0:	mov	r1, #0
   16ce4:	add	r0, sp, #4
   16ce8:	bl	124d8 <gettimeofday@plt>
   16cec:	ldr	r3, [sp, #8]
   16cf0:	movw	r2, #19923	; 0x4dd3
   16cf4:	movt	r2, #4194	; 0x1062
   16cf8:	ldr	r8, [sp, #4]
   16cfc:	mov	r7, #1000	; 0x3e8
   16d00:	smull	r1, r2, r2, r3
   16d04:	asr	r9, r3, #31
   16d08:	movw	r3, #31888	; 0x7c90
   16d0c:	movt	r3, #3
   16d10:	movw	ip, #1456	; 0x5b0
   16d14:	movt	ip, #3
   16d18:	ldrd	r4, [r3, #16]
   16d1c:	ldrd	r0, [ip, #16]
   16d20:	rsb	r2, r9, r2, asr #6
   16d24:	asr	r3, r2, #31
   16d28:	smlal	r2, r3, r7, r8
   16d2c:	subs	r0, r2, r0
   16d30:	sbc	r1, r3, r1
   16d34:	cmp	r4, r0
   16d38:	sbcs	r7, r5, r1
   16d3c:	mov	r1, #1
   16d40:	strge	r1, [ip, #8]
   16d44:	strd	r2, [ip, #16]
   16d48:	mov	r3, #1
   16d4c:	strlt	r1, [ip, #4]
   16d50:	str	r3, [ip]
   16d54:	b	16cc8 <__printf_chk@plt+0x4160>
   16d58:	movw	r3, #1456	; 0x5b0
   16d5c:	movt	r3, #3
   16d60:	mov	r2, #1
   16d64:	str	r2, [r3, #12]
   16d68:	b	16cc8 <__printf_chk@plt+0x4160>
   16d6c:	movw	r3, #1456	; 0x5b0
   16d70:	movt	r3, #3
   16d74:	mov	r2, #1
   16d78:	str	r2, [r3, #8]
   16d7c:	b	16cc8 <__printf_chk@plt+0x4160>
   16d80:	bl	127e4 <__stack_chk_fail@plt>
   16d84:	push	{r4, r5, r6, r7}
   16d88:	mov	r1, #2
   16d8c:	mov	r4, #0
   16d90:	mov	r2, #500	; 0x1f4
   16d94:	mov	r3, #0
   16d98:	mov	r6, #0
   16d9c:	mov	r7, #0
   16da0:	strd	r2, [r0, #16]
   16da4:	mov	ip, #1
   16da8:	mov	r3, #131072	; 0x20000
   16dac:	mov	r2, #0
   16db0:	mov	r5, #0
   16db4:	str	r1, [r0]
   16db8:	movt	r5, #49136	; 0xbff0
   16dbc:	mov	r1, #0
   16dc0:	strd	r6, [r0, #32]
   16dc4:	str	r3, [r0, #52]	; 0x34
   16dc8:	mov	r3, #65536	; 0x10000
   16dcc:	str	r2, [r0, #56]	; 0x38
   16dd0:	mov	r2, #0
   16dd4:	str	r3, [r0, #60]	; 0x3c
   16dd8:	movt	r2, #16968	; 0x4248
   16ddc:	mov	r3, #0
   16de0:	str	r2, [r0, #64]	; 0x40
   16de4:	movt	r3, #16420	; 0x4024
   16de8:	mov	r2, #0
   16dec:	strd	r4, [r0, #40]	; 0x28
   16df0:	str	r1, [r0, #4]
   16df4:	str	r1, [r0, #48]	; 0x30
   16df8:	str	r1, [r0, #68]	; 0x44
   16dfc:	str	r1, [r0, #92]	; 0x5c
   16e00:	str	r1, [r0, #88]	; 0x58
   16e04:	str	r1, [r0, #8]
   16e08:	str	ip, [r0, #24]
   16e0c:	str	ip, [r0, #28]
   16e10:	strd	r2, [r0, #80]	; 0x50
   16e14:	pop	{r4, r5, r6, r7}
   16e18:	bx	lr
   16e1c:	push	{r4, lr}
   16e20:	vpush	{d8-d9}
   16e24:	sub	sp, sp, #8
   16e28:	add	r4, sp, #8
   16e2c:	str	r0, [r4, #-4]!
   16e30:	mov	r1, r4
   16e34:	bl	12790 <strtod@plt>
   16e38:	ldr	r0, [sp, #4]
   16e3c:	ldrsb	r3, [r0]
   16e40:	cmp	r3, #58	; 0x3a
   16e44:	bne	16e70 <__printf_chk@plt+0x4308>
   16e48:	vldr	d9, [pc, #48]	; 16e80 <__printf_chk@plt+0x4318>
   16e4c:	add	r0, r0, #1
   16e50:	mov	r1, r4
   16e54:	vmul.f64	d8, d0, d9
   16e58:	bl	12790 <strtod@plt>
   16e5c:	ldr	r0, [sp, #4]
   16e60:	ldrsb	r3, [r0]
   16e64:	cmp	r3, #58	; 0x3a
   16e68:	vadd.f64	d0, d0, d8
   16e6c:	beq	16e4c <__printf_chk@plt+0x42e4>
   16e70:	add	sp, sp, #8
   16e74:	vpop	{d8-d9}
   16e78:	pop	{r4, pc}
   16e7c:	nop	{0}
   16e80:	andeq	r0, r0, r0
   16e84:	submi	r0, lr, r0
   16e88:	push	{r4, lr}
   16e8c:	mov	r4, r0
   16e90:	ldrsb	r2, [r1]
   16e94:	cmp	r2, #32
   16e98:	bne	16eb0 <__printf_chk@plt+0x4348>
   16e9c:	add	r3, r1, #1
   16ea0:	mov	r1, r3
   16ea4:	ldrsb	r2, [r3], #1
   16ea8:	cmp	r2, #32
   16eac:	beq	16ea0 <__printf_chk@plt+0x4338>
   16eb0:	cmp	r2, #45	; 0x2d
   16eb4:	beq	16ef0 <__printf_chk@plt+0x4388>
   16eb8:	cmp	r2, #43	; 0x2b
   16ebc:	beq	16ed8 <__printf_chk@plt+0x4370>
   16ec0:	mov	r0, r1
   16ec4:	bl	16e1c <__printf_chk@plt+0x42b4>
   16ec8:	mov	r3, #1
   16ecc:	str	r3, [r4, #48]	; 0x30
   16ed0:	vstr	d0, [r4, #32]
   16ed4:	pop	{r4, pc}
   16ed8:	add	r0, r1, #1
   16edc:	bl	16e1c <__printf_chk@plt+0x42b4>
   16ee0:	mov	r3, #2
   16ee4:	str	r3, [r4, #48]	; 0x30
   16ee8:	vstr	d0, [r4, #32]
   16eec:	pop	{r4, pc}
   16ef0:	add	r0, r1, #1
   16ef4:	bl	16e1c <__printf_chk@plt+0x42b4>
   16ef8:	mov	r3, #2
   16efc:	str	r3, [r4, #48]	; 0x30
   16f00:	vneg.f64	d0, d0
   16f04:	vstr	d0, [r4, #32]
   16f08:	pop	{r4, pc}
   16f0c:	ldr	r3, [r1, #52]	; 0x34
   16f10:	push	{r4, r5, r6, lr}
   16f14:	vpush	{d8}
   16f18:	mov	r5, r0
   16f1c:	ldr	r3, [r3, #20]
   16f20:	mov	r0, r1
   16f24:	mov	r4, r1
   16f28:	mov	r6, r2
   16f2c:	blx	r3
   16f30:	ldr	r3, [r5, #48]	; 0x30
   16f34:	cmp	r3, #0
   16f38:	vldr	d7, [r0, #8]
   16f3c:	beq	16fac <__printf_chk@plt+0x4444>
   16f40:	cmp	r3, #1
   16f44:	vldrne	d6, [r5, #32]
   16f48:	vldreq	d6, [r5, #32]
   16f4c:	vldr	s16, [pc, #188]	; 17010 <__printf_chk@plt+0x44a8>
   16f50:	vcvtne.f32.f64	s14, d7
   16f54:	ldr	r3, [r4, #52]	; 0x34
   16f58:	mov	r0, r4
   16f5c:	ldr	r3, [r3, #20]
   16f60:	vcvtne.f64.f32	d7, s14
   16f64:	vaddne.f64	d6, d7, d6
   16f68:	vcvt.f32.f64	s12, d6
   16f6c:	vcmpe.f32	s12, s16
   16f70:	vmrs	APSR_nzcv, fpscr
   16f74:	vmovlt.f32	s12, s16
   16f78:	vcvt.f64.f32	d8, s12
   16f7c:	blx	r3
   16f80:	vldr	d7, [r0]
   16f84:	vcmpe.f64	d8, d7
   16f88:	vmrs	APSR_nzcv, fpscr
   16f8c:	bgt	16fdc <__printf_chk@plt+0x4474>
   16f90:	ldr	r3, [r6, #16]
   16f94:	mov	r0, r4
   16f98:	vmov.f64	d0, d8
   16f9c:	mov	r1, #1
   16fa0:	blx	r3
   16fa4:	cmp	r0, #0
   16fa8:	beq	16fc0 <__printf_chk@plt+0x4458>
   16fac:	vpop	{d8}
   16fb0:	mov	r3, #0
   16fb4:	mov	r0, #1
   16fb8:	str	r3, [r5, #48]	; 0x30
   16fbc:	pop	{r4, r5, r6, pc}
   16fc0:	mov	r2, #5
   16fc4:	movw	r1, #56404	; 0xdc54
   16fc8:	movt	r1, #1
   16fcc:	bl	127f0 <dcgettext@plt>
   16fd0:	ldrd	r2, [r5, #32]
   16fd4:	bl	19028 <__printf_chk@plt+0x64c0>
   16fd8:	b	16fac <__printf_chk@plt+0x4444>
   16fdc:	ldr	r3, [r4, #52]	; 0x34
   16fe0:	mov	r0, r4
   16fe4:	ldr	r3, [r3, #20]
   16fe8:	blx	r3
   16fec:	vldr	d7, [pc, #20]	; 17008 <__printf_chk@plt+0x44a0>
   16ff0:	vldr	d8, [r0]
   16ff4:	vsub.f64	d8, d8, d7
   16ff8:	vcvt.f32.f64	s16, d8
   16ffc:	vcvt.f64.f32	d8, s16
   17000:	b	16f90 <__printf_chk@plt+0x4428>
   17004:	nop	{0}
   17008:			; <UNDEFINED> instruction: 0x47ae147b
   1700c:	svccc	0x00847ae1
   17010:	andeq	r0, r0, r0
   17014:	push	{r4, lr}
   17018:	mov	r4, r0
   1701c:	ldr	r3, [sp, #8]
   17020:	cmp	r3, #0
   17024:	movne	r3, #1
   17028:	strb	r3, [r0, #196]	; 0xc4
   1702c:	strb	r3, [r0, #220]	; 0xdc
   17030:	mov	r0, r2
   17034:	ldr	r3, [r2, #4]
   17038:	ldr	r3, [r3, #24]
   1703c:	blx	r3
   17040:	ldr	r3, [r0, #8]
   17044:	cmp	r3, #0
   17048:	movne	r3, #1
   1704c:	strb	r3, [r4, #148]	; 0x94
   17050:	strb	r3, [r4, #172]	; 0xac
   17054:	bl	12520 <free@plt>
   17058:	mov	r3, #1
   1705c:	strb	r3, [r4, #52]	; 0x34
   17060:	strb	r3, [r4, #76]	; 0x4c
   17064:	pop	{r4, pc}
   17068:	ldr	ip, [r2, #4]
   1706c:	push	{r3, r4, r5, r6, r7, lr}
   17070:	mov	r6, r3
   17074:	mov	r4, r0
   17078:	ldr	r3, [ip, #24]
   1707c:	mov	r0, r2
   17080:	mov	r5, r1
   17084:	blx	r3
   17088:	ldr	r3, [r6, #52]	; 0x34
   1708c:	ldr	r3, [r3, #20]
   17090:	mov	r7, r0
   17094:	mov	r0, r6
   17098:	blx	r3
   1709c:	mov	r1, r7
   170a0:	mov	r2, r0
   170a4:	mov	r0, r4
   170a8:	bl	1449c <__printf_chk@plt+0x1934>
   170ac:	movw	r3, #31888	; 0x7c90
   170b0:	movt	r3, #3
   170b4:	ldr	r3, [r3, #88]	; 0x58
   170b8:	cmp	r3, #0
   170bc:	mov	r2, r0
   170c0:	bne	1715c <__printf_chk@plt+0x45f4>
   170c4:	ldr	r1, [r0, #8]
   170c8:	vldr	d6, [r1]
   170cc:	vldr	d7, [r1, #8]
   170d0:	vcmpe.f64	d6, d7
   170d4:	vmrs	APSR_nzcv, fpscr
   170d8:	strbmi	r3, [r4, #52]	; 0x34
   170dc:	strbmi	r3, [r4, #76]	; 0x4c
   170e0:	ldr	r3, [r0, #4]
   170e4:	ldr	r3, [r3, #8]
   170e8:	cmp	r3, #0
   170ec:	movne	r3, #1
   170f0:	strbne	r3, [r4, #148]	; 0x94
   170f4:	strbne	r3, [r4, #172]	; 0xac
   170f8:	cmp	r5, #0
   170fc:	beq	17170 <__printf_chk@plt+0x4608>
   17100:	mov	r0, r5
   17104:	movw	r1, #17488	; 0x4450
   17108:	movt	r1, #1
   1710c:	bl	13e48 <__printf_chk@plt+0x12e0>
   17110:	mov	r0, r5
   17114:	bl	14024 <__printf_chk@plt+0x14bc>
   17118:	ldr	r3, [r0, #28]
   1711c:	mov	r6, r0
   17120:	cmp	r3, #0
   17124:	bne	17134 <__printf_chk@plt+0x45cc>
   17128:	ldr	r3, [r0, #24]
   1712c:	cmp	r3, #0
   17130:	beq	17150 <__printf_chk@plt+0x45e8>
   17134:	mov	r1, #0
   17138:	mov	r0, r4
   1713c:	mov	r2, r1
   17140:	bl	1449c <__printf_chk@plt+0x1934>
   17144:	mov	r1, r0
   17148:	mov	r0, r5
   1714c:	bl	14450 <__printf_chk@plt+0x18e8>
   17150:	mov	r0, r6
   17154:	pop	{r3, r4, r5, r6, r7, lr}
   17158:	b	12520 <free@plt>
   1715c:	ldr	r3, [r0, #8]
   17160:	vldr	d0, [r3, #8]
   17164:	vldr	d1, [r3]
   17168:	pop	{r3, r4, r5, r6, r7, lr}
   1716c:	b	197e4 <__printf_chk@plt+0x6c7c>
   17170:	mov	r0, r5
   17174:	mov	r1, r2
   17178:	pop	{r3, r4, r5, r6, r7, lr}
   1717c:	b	14450 <__printf_chk@plt+0x18e8>
   17180:	ldr	ip, [r2, #4]
   17184:	push	{r3, r4, r5, r6, r7, lr}
   17188:	mov	r4, r3
   1718c:	mov	r6, r0
   17190:	ldr	r3, [ip, #24]
   17194:	mov	r0, r2
   17198:	mov	r5, r1
   1719c:	blx	r3
   171a0:	ldr	r3, [r4, #52]	; 0x34
   171a4:	ldr	r3, [r3, #20]
   171a8:	mov	r7, r0
   171ac:	mov	r0, r4
   171b0:	blx	r3
   171b4:	mov	r1, r7
   171b8:	mov	r2, r0
   171bc:	mov	r0, r6
   171c0:	bl	1449c <__printf_chk@plt+0x1934>
   171c4:	mov	r1, r0
   171c8:	mov	r0, r5
   171cc:	pop	{r3, r4, r5, r6, r7, lr}
   171d0:	b	14450 <__printf_chk@plt+0x18e8>
   171d4:	push	{r3, lr}
   171d8:	vpush	{d8}
   171dc:	ldr	r3, [r0, #52]	; 0x34
   171e0:	ldr	r3, [r3, #20]
   171e4:	blx	r3
   171e8:	vldr	d8, [r0, #8]
   171ec:	bl	12520 <free@plt>
   171f0:	vmov.f64	d0, d8
   171f4:	vpop	{d8}
   171f8:	pop	{r3, pc}
   171fc:	push	{r3, r4, r5, lr}
   17200:	subs	r4, r0, #0
   17204:	popeq	{r3, r4, r5, pc}
   17208:	ldr	r0, [r4]
   1720c:	bl	12484 <ao_driver_info@plt>
   17210:	mov	r2, #5
   17214:	movw	r1, #56444	; 0xdc7c
   17218:	movt	r1, #1
   1721c:	mov	r5, r0
   17220:	mov	r0, #0
   17224:	bl	127f0 <dcgettext@plt>
   17228:	ldr	r2, [r5, #4]
   1722c:	mov	r1, r0
   17230:	mov	r0, #2
   17234:	bl	18f2c <__printf_chk@plt+0x63c4>
   17238:	mov	r2, #5
   1723c:	movw	r1, #56464	; 0xdc90
   17240:	mov	r0, #0
   17244:	movt	r1, #1
   17248:	bl	127f0 <dcgettext@plt>
   1724c:	ldr	r2, [r5, #12]
   17250:	mov	r1, r0
   17254:	mov	r0, #3
   17258:	bl	18f2c <__printf_chk@plt+0x63c4>
   1725c:	mov	r2, #5
   17260:	movw	r1, #56480	; 0xdca0
   17264:	mov	r0, #0
   17268:	movt	r1, #1
   1726c:	bl	127f0 <dcgettext@plt>
   17270:	ldr	r2, [r5, #16]
   17274:	mov	r1, r0
   17278:	mov	r0, #3
   1727c:	bl	18f2c <__printf_chk@plt+0x63c4>
   17280:	movw	r1, #53056	; 0xcf40
   17284:	mov	r0, #2
   17288:	movt	r1, #1
   1728c:	bl	18f2c <__printf_chk@plt+0x63c4>
   17290:	ldr	r4, [r4, #16]
   17294:	cmp	r4, #0
   17298:	bne	17208 <__printf_chk@plt+0x46a0>
   1729c:	pop	{r3, r4, r5, pc}
   172a0:	movw	r1, #1408	; 0x580
   172a4:	movt	r1, #3
   172a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172ac:	vpush	{d8}
   172b0:	movw	r6, #1456	; 0x5b0
   172b4:	ldr	r2, [r1]
   172b8:	sub	sp, sp, #84	; 0x54
   172bc:	movt	r6, #3
   172c0:	mov	r3, #0
   172c4:	str	r1, [sp, #32]
   172c8:	mov	r4, r0
   172cc:	str	r3, [r6]
   172d0:	str	r3, [r6, #4]
   172d4:	str	r2, [sp, #76]	; 0x4c
   172d8:	str	r3, [r6, #8]
   172dc:	str	r3, [r6, #12]
   172e0:	str	r3, [sp, #40]	; 0x28
   172e4:	bl	129c4 <ao_is_big_endian@plt>
   172e8:	ldr	r5, [r6, #24]
   172ec:	mov	r2, #1
   172f0:	mov	r3, #2
   172f4:	str	r2, [sp, #60]	; 0x3c
   172f8:	cmp	r5, #0
   172fc:	str	r3, [sp, #56]	; 0x38
   17300:	movwne	r2, #17940	; 0x4614
   17304:	movwne	r3, #18268	; 0x475c
   17308:	movweq	r2, #17640	; 0x44e8
   1730c:	movweq	r3, #17784	; 0x4578
   17310:	movtne	r2, #1
   17314:	movtne	r3, #1
   17318:	movteq	r2, #1
   1731c:	movteq	r3, #1
   17320:	str	r2, [sp, #44]	; 0x2c
   17324:	str	r3, [sp, #48]	; 0x30
   17328:	str	r0, [sp, #52]	; 0x34
   1732c:	mov	r0, r4
   17330:	bl	19854 <__printf_chk@plt+0x6cec>
   17334:	subs	r2, r0, #0
   17338:	str	r2, [sp, #36]	; 0x24
   1733c:	beq	1782c <__printf_chk@plt+0x4cc4>
   17340:	ldr	r2, [sp, #36]	; 0x24
   17344:	movw	r1, #31888	; 0x7c90
   17348:	mov	r0, r4
   1734c:	movt	r1, #3
   17350:	ldr	r3, [r2, #8]
   17354:	blx	r3
   17358:	subs	r3, r0, #0
   1735c:	str	r3, [sp, #24]
   17360:	beq	17848 <__printf_chk@plt+0x4ce0>
   17364:	bl	165a4 <__printf_chk@plt+0x3a3c>
   17368:	subs	r1, r0, #0
   1736c:	str	r1, [sp, #16]
   17370:	beq	17864 <__printf_chk@plt+0x4cfc>
   17374:	ldr	r2, [sp, #16]
   17378:	add	r9, sp, #52	; 0x34
   1737c:	str	r5, [sp]
   17380:	add	r3, sp, #44	; 0x2c
   17384:	movw	r1, #31888	; 0x7c90
   17388:	ldr	r0, [sp, #24]
   1738c:	ldr	ip, [r2, #8]
   17390:	movt	r1, #3
   17394:	mov	r2, r9
   17398:	blx	ip
   1739c:	subs	r3, r0, #0
   173a0:	str	r3, [sp, #12]
   173a4:	beq	175d8 <__printf_chk@plt+0x4a70>
   173a8:	movw	r1, #31984	; 0x7cf0
   173ac:	movt	r1, #3
   173b0:	str	r1, [sp, #28]
   173b4:	movw	r1, #31888	; 0x7c90
   173b8:	ldr	r2, [sp, #28]
   173bc:	movt	r1, #3
   173c0:	ldr	ip, [r6, #24]
   173c4:	movw	r7, #1456	; 0x5b0
   173c8:	ldr	r3, [sp, #12]
   173cc:	movt	r7, #3
   173d0:	ldr	r0, [r2]
   173d4:	ldr	r2, [sp, #24]
   173d8:	str	ip, [sp]
   173dc:	bl	17014 <__printf_chk@plt+0x44ac>
   173e0:	ldr	r0, [r6, #24]
   173e4:	cmp	r0, #0
   173e8:	beq	173f8 <__printf_chk@plt+0x4890>
   173ec:	bl	13850 <__printf_chk@plt+0xce8>
   173f0:	ldr	r0, [r7, #24]
   173f4:	bl	1394c <__printf_chk@plt+0xde4>
   173f8:	mov	r2, #5
   173fc:	movw	r1, #56672	; 0xdd60
   17400:	mov	r0, #0
   17404:	movt	r1, #1
   17408:	ldr	r8, [sp, #48]	; 0x30
   1740c:	bl	127f0 <dcgettext@plt>
   17410:	mov	r3, r4
   17414:	mov	r1, #1
   17418:	movw	r7, #31888	; 0x7c90
   1741c:	movt	r7, #3
   17420:	mov	r2, r0
   17424:	mov	r0, r5
   17428:	blx	r8
   1742c:	vldr	d0, [r7, #32]
   17430:	vcmpe.f64	d0, #0.0
   17434:	vmrs	APSR_nzcv, fpscr
   17438:	ble	17458 <__printf_chk@plt+0x48f0>
   1743c:	ldr	r1, [sp, #16]
   17440:	ldr	r0, [sp, #12]
   17444:	ldr	r3, [r1, #16]
   17448:	mov	r1, #1
   1744c:	blx	r3
   17450:	cmp	r0, #0
   17454:	beq	177dc <__printf_chk@plt+0x4c74>
   17458:	mov	sl, #0
   1745c:	movw	fp, #1456	; 0x5b0
   17460:	movt	fp, #3
   17464:	mov	r5, sl
   17468:	movw	r3, #1088	; 0x440
   1746c:	movt	r3, #3
   17470:	str	r3, [sp, #20]
   17474:	ldr	r3, [r6, #8]
   17478:	cmp	r3, #0
   1747c:	bne	17630 <__printf_chk@plt+0x4ac8>
   17480:	str	r3, [sp, #40]	; 0x28
   17484:	ldr	r3, [r6, #4]
   17488:	cmp	r3, #0
   1748c:	bne	17628 <__printf_chk@plt+0x4ac0>
   17490:	ldr	r3, [r7, #88]	; 0x58
   17494:	cmp	r3, #0
   17498:	bne	176ec <__printf_chk@plt+0x4b84>
   1749c:	ldr	r3, [r6, #12]
   174a0:	cmp	r3, #0
   174a4:	beq	174dc <__printf_chk@plt+0x4974>
   174a8:	ldr	r0, [fp, #24]
   174ac:	cmp	r0, #0
   174b0:	beq	174b8 <__printf_chk@plt+0x4950>
   174b4:	bl	13964 <__printf_chk@plt+0xdfc>
   174b8:	bl	124c0 <getpid@plt>
   174bc:	mov	r1, #19
   174c0:	bl	1273c <kill@plt>
   174c4:	ldr	r0, [r6, #24]
   174c8:	cmp	r0, #0
   174cc:	beq	174d4 <__printf_chk@plt+0x496c>
   174d0:	bl	1398c <__printf_chk@plt+0xe24>
   174d4:	mov	r3, #0
   174d8:	str	r3, [r6, #12]
   174dc:	ldr	r3, [sp, #20]
   174e0:	movw	r1, #1640	; 0x668
   174e4:	ldr	r0, [sp, #12]
   174e8:	movt	r1, #3
   174ec:	ldr	r2, [r3]
   174f0:	ldr	r3, [sp, #16]
   174f4:	str	r9, [sp]
   174f8:	ldr	r4, [r3, #12]
   174fc:	add	r3, sp, #40	; 0x28
   17500:	blx	r4
   17504:	subs	r8, r0, #0
   17508:	beq	17628 <__printf_chk@plt+0x4ac0>
   1750c:	blt	177c0 <__printf_chk@plt+0x4c58>
   17510:	mov	r0, r9
   17514:	ldr	r1, [pc, #872]	; 17884 <__printf_chk@plt+0x4d1c>
   17518:	bl	130d4 <__printf_chk@plt+0x56c>
   1751c:	cmp	r0, #0
   17520:	beq	17710 <__printf_chk@plt+0x4ba8>
   17524:	cmp	sl, #0
   17528:	rsbgt	sl, r8, sl
   1752c:	ble	1777c <__printf_chk@plt+0x4c14>
   17530:	vldr	d8, [r7, #40]	; 0x28
   17534:	vcmpe.f64	d8, #0.0
   17538:	vmrs	APSR_nzcv, fpscr
   1753c:	ble	17554 <__printf_chk@plt+0x49ec>
   17540:	ldr	r0, [sp, #12]
   17544:	bl	171d4 <__printf_chk@plt+0x466c>
   17548:	vcmpe.f64	d8, d0
   1754c:	vmrs	APSR_nzcv, fpscr
   17550:	bls	17628 <__printf_chk@plt+0x4ac0>
   17554:	mov	r4, #0
   17558:	b	175a4 <__printf_chk@plt+0x4a3c>
   1755c:	movw	r1, #1640	; 0x668
   17560:	mov	r2, r8
   17564:	movt	r1, #3
   17568:	bl	139e4 <__printf_chk@plt+0xe7c>
   1756c:	cmp	r0, #0
   17570:	beq	1779c <__printf_chk@plt+0x4c34>
   17574:	ldr	r5, [r7, #24]
   17578:	ldr	r3, [r6, #8]
   1757c:	sub	r5, r5, #1
   17580:	cmp	r3, #0
   17584:	bne	17604 <__printf_chk@plt+0x4a9c>
   17588:	ldr	r3, [fp, #4]
   1758c:	cmp	r3, #0
   17590:	bne	17604 <__printf_chk@plt+0x4a9c>
   17594:	ldr	r3, [r7, #28]
   17598:	add	r4, r4, #1
   1759c:	cmp	r4, r3
   175a0:	bge	17604 <__printf_chk@plt+0x4a9c>
   175a4:	cmp	r5, #0
   175a8:	bne	17578 <__printf_chk@plt+0x4a10>
   175ac:	ldr	r0, [r6, #24]
   175b0:	cmp	r0, #0
   175b4:	bne	1755c <__printf_chk@plt+0x49f4>
   175b8:	movw	r0, #1640	; 0x668
   175bc:	movw	r3, #31880	; 0x7c88
   175c0:	mov	r1, r8
   175c4:	movt	r3, #3
   175c8:	ldr	r2, [sp, #40]	; 0x28
   175cc:	movt	r0, #3
   175d0:	bl	14114 <__printf_chk@plt+0x15ac>
   175d4:	b	17574 <__printf_chk@plt+0x4a0c>
   175d8:	ldr	r3, [r6]
   175dc:	cmp	r3, #0
   175e0:	beq	17808 <__printf_chk@plt+0x4ca0>
   175e4:	ldr	r1, [sp, #32]
   175e8:	ldr	r2, [sp, #76]	; 0x4c
   175ec:	ldr	r3, [r1]
   175f0:	cmp	r2, r3
   175f4:	bne	17880 <__printf_chk@plt+0x4d18>
   175f8:	add	sp, sp, #84	; 0x54
   175fc:	vpop	{d8}
   17600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17604:	ldr	r3, [sp, #40]	; 0x28
   17608:	cmp	r3, #0
   1760c:	bne	17474 <__printf_chk@plt+0x490c>
   17610:	ldr	r3, [r6, #8]
   17614:	cmp	r3, #0
   17618:	bne	17474 <__printf_chk@plt+0x490c>
   1761c:	ldr	r3, [r6, #4]
   17620:	cmp	r3, #0
   17624:	beq	17490 <__printf_chk@plt+0x4928>
   17628:	mov	r3, #1
   1762c:	str	r3, [sp, #40]	; 0x28
   17630:	ldr	r0, [r6, #24]
   17634:	movw	r4, #1456	; 0x5b0
   17638:	movt	r4, #3
   1763c:	cmp	r0, #0
   17640:	moveq	r1, r0
   17644:	beq	17678 <__printf_chk@plt+0x4b10>
   17648:	ldr	r3, [r4, #8]
   1764c:	cmp	r3, #0
   17650:	bne	17670 <__printf_chk@plt+0x4b08>
   17654:	ldr	r3, [r4, #4]
   17658:	cmp	r3, #0
   1765c:	bne	17670 <__printf_chk@plt+0x4b08>
   17660:	bl	13b48 <__printf_chk@plt+0xfe0>
   17664:	ldr	r0, [r4, #24]
   17668:	bl	13fbc <__printf_chk@plt+0x1454>
   1766c:	ldr	r0, [r4, #24]
   17670:	bl	139bc <__printf_chk@plt+0xe54>
   17674:	ldr	r1, [r6, #24]
   17678:	ldr	r2, [sp, #28]
   1767c:	ldr	r3, [sp, #12]
   17680:	ldr	r0, [r2]
   17684:	ldr	r2, [sp, #24]
   17688:	bl	17180 <__printf_chk@plt+0x4618>
   1768c:	ldr	r1, [sp, #16]
   17690:	ldr	r0, [sp, #12]
   17694:	ldr	r3, [r1, #24]
   17698:	blx	r3
   1769c:	ldr	r2, [sp, #36]	; 0x24
   176a0:	ldr	r0, [sp, #24]
   176a4:	ldr	r3, [r2, #32]
   176a8:	blx	r3
   176ac:	bl	18dcc <__printf_chk@plt+0x6264>
   176b0:	mov	r2, #5
   176b4:	movw	r1, #56780	; 0xddcc
   176b8:	mov	r0, #0
   176bc:	movt	r1, #1
   176c0:	bl	127f0 <dcgettext@plt>
   176c4:	mov	r1, r0
   176c8:	mov	r0, #1
   176cc:	bl	18f2c <__printf_chk@plt+0x63c4>
   176d0:	ldr	r3, [r6, #8]
   176d4:	cmp	r3, #0
   176d8:	beq	175e4 <__printf_chk@plt+0x4a7c>
   176dc:	movw	r3, #1548	; 0x60c
   176e0:	movt	r3, #3
   176e4:	ldr	r0, [r3]
   176e8:	bl	12598 <exit@plt>
   176ec:	bl	1971c <__printf_chk@plt+0x6bb4>
   176f0:	cmp	r0, #0
   176f4:	bne	17628 <__printf_chk@plt+0x4ac0>
   176f8:	movw	r0, #31888	; 0x7c90
   176fc:	ldr	r1, [sp, #12]
   17700:	ldr	r2, [sp, #16]
   17704:	movt	r0, #3
   17708:	bl	16f0c <__printf_chk@plt+0x43a4>
   1770c:	b	1749c <__printf_chk@plt+0x4934>
   17710:	ldr	r3, [sp, #56]	; 0x38
   17714:	vldr	d7, [r7, #80]	; 0x50
   17718:	ldr	sl, [sp, #68]	; 0x44
   1771c:	mov	r4, r9
   17720:	ldr	ip, [sp, #64]	; 0x40
   17724:	ldr	lr, [pc, #344]	; 17884 <__printf_chk@plt+0x4d1c>
   17728:	mul	sl, sl, r3
   1772c:	ldm	r4!, {r0, r1, r2, r3}
   17730:	mul	sl, ip, sl
   17734:	stmia	lr!, {r0, r1, r2, r3}
   17738:	ldm	r4, {r0, r1}
   1773c:	vmov	s11, sl
   17740:	stm	lr, {r0, r1}
   17744:	mov	r1, r9
   17748:	vcvt.f64.s32	d6, s11
   1774c:	ldr	r0, [r7, #72]	; 0x48
   17750:	vdiv.f64	d7, d6, d7
   17754:	vcvt.s32.f64	s14, d7
   17758:	vstr	s14, [fp, #52]	; 0x34
   1775c:	bl	143c0 <__printf_chk@plt+0x1858>
   17760:	mov	r2, r0
   17764:	ldr	r0, [fp, #24]
   17768:	cmp	r0, #0
   1776c:	beq	177b4 <__printf_chk@plt+0x4c4c>
   17770:	movw	r1, #16704	; 0x4140
   17774:	movt	r1, #1
   17778:	bl	13dbc <__printf_chk@plt+0x1254>
   1777c:	ldr	r1, [sp, #28]
   17780:	ldr	r2, [sp, #24]
   17784:	ldr	r3, [sp, #12]
   17788:	ldr	r0, [r1]
   1778c:	ldr	r1, [r6, #24]
   17790:	bl	17068 <__printf_chk@plt+0x4500>
   17794:	ldr	sl, [r6, #52]	; 0x34
   17798:	b	17530 <__printf_chk@plt+0x49c8>
   1779c:	mov	r2, #5
   177a0:	movw	r1, #56748	; 0xddac
   177a4:	movt	r1, #1
   177a8:	bl	127f0 <dcgettext@plt>
   177ac:	bl	19028 <__printf_chk@plt+0x64c0>
   177b0:	b	17628 <__printf_chk@plt+0x4ac0>
   177b4:	mov	r1, r2
   177b8:	bl	14140 <__printf_chk@plt+0x15d8>
   177bc:	b	1777c <__printf_chk@plt+0x4c14>
   177c0:	mov	r2, #5
   177c4:	movw	r1, #56720	; 0xdd90
   177c8:	mov	r0, #0
   177cc:	movt	r1, #1
   177d0:	bl	127f0 <dcgettext@plt>
   177d4:	bl	19028 <__printf_chk@plt+0x64c0>
   177d8:	b	17474 <__printf_chk@plt+0x490c>
   177dc:	mov	r2, #5
   177e0:	movw	r1, #56684	; 0xdd6c
   177e4:	movt	r1, #1
   177e8:	bl	127f0 <dcgettext@plt>
   177ec:	ldrd	r2, [r7, #32]
   177f0:	bl	19028 <__printf_chk@plt+0x64c0>
   177f4:	ldr	r0, [r6, #24]
   177f8:	cmp	r0, #0
   177fc:	beq	175e4 <__printf_chk@plt+0x4a7c>
   17800:	bl	139bc <__printf_chk@plt+0xe54>
   17804:	b	175e4 <__printf_chk@plt+0x4a7c>
   17808:	mov	r2, #5
   1780c:	movw	r1, #56604	; 0xdd1c
   17810:	movt	r1, #1
   17814:	bl	127f0 <dcgettext@plt>
   17818:	ldr	r3, [sp, #16]
   1781c:	mov	r1, r4
   17820:	ldr	r2, [r3]
   17824:	bl	19028 <__printf_chk@plt+0x64c0>
   17828:	b	175e4 <__printf_chk@plt+0x4a7c>
   1782c:	mov	r2, #5
   17830:	movw	r1, #56496	; 0xdcb0
   17834:	movt	r1, #1
   17838:	bl	127f0 <dcgettext@plt>
   1783c:	mov	r1, r4
   17840:	bl	19028 <__printf_chk@plt+0x64c0>
   17844:	b	175e4 <__printf_chk@plt+0x4a7c>
   17848:	mov	r2, #5
   1784c:	movw	r1, #56540	; 0xdcdc
   17850:	movt	r1, #1
   17854:	bl	127f0 <dcgettext@plt>
   17858:	mov	r1, r4
   1785c:	bl	19028 <__printf_chk@plt+0x64c0>
   17860:	b	175e4 <__printf_chk@plt+0x4a7c>
   17864:	mov	r2, #5
   17868:	movw	r1, #56560	; 0xdcf0
   1786c:	movt	r1, #1
   17870:	bl	127f0 <dcgettext@plt>
   17874:	mov	r1, r4
   17878:	bl	19028 <__printf_chk@plt+0x64c0>
   1787c:	b	175e4 <__printf_chk@plt+0x4a7c>
   17880:	bl	127e4 <__stack_chk_fail@plt>
   17884:	andeq	r0, r3, ip, asr #11
   17888:	mov	r0, #1
   1788c:	bx	lr
   17890:	ldr	ip, [r3]
   17894:	push	{r3, lr}
   17898:	mov	lr, r1
   1789c:	mov	r3, r2
   178a0:	mov	r2, lr
   178a4:	ldr	lr, [ip, #4]
   178a8:	mov	r1, r0
   178ac:	mov	r0, ip
   178b0:	ldr	ip, [lr, #16]
   178b4:	blx	ip
   178b8:	pop	{r3, pc}
   178bc:	ldr	r0, [r0]
   178c0:	mov	r1, r2
   178c4:	push	{r3, lr}
   178c8:	ldr	r3, [r0, #4]
   178cc:	ldr	r2, [sp, #8]
   178d0:	ldr	r3, [r3, #20]
   178d4:	blx	r3
   178d8:	pop	{r3, pc}
   178dc:	mov	r0, #1
   178e0:	bx	lr
   178e4:	ldr	r0, [r0]
   178e8:	push	{r3, lr}
   178ec:	ldr	r3, [r0, #4]
   178f0:	ldr	r3, [r3, #28]
   178f4:	blx	r3
   178f8:	pop	{r3, pc}
   178fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17900:	mov	r8, r0
   17904:	sub	sp, sp, #20
   17908:	mov	r0, #68	; 0x44
   1790c:	mov	r6, r2
   17910:	mov	r9, r3
   17914:	bl	12958 <malloc@plt>
   17918:	mov	r5, r0
   1791c:	mov	r0, #768	; 0x300
   17920:	bl	12958 <malloc@plt>
   17924:	cmp	r0, #0
   17928:	cmpne	r5, #0
   1792c:	mov	r4, r0
   17930:	moveq	r0, #0
   17934:	movne	r0, #1
   17938:	beq	17a00 <__printf_chk@plt+0x4e98>
   1793c:	ldm	r6!, {r0, r1, r2, r3}
   17940:	vldr	d7, [pc, #240]	; 17a38 <__printf_chk@plt+0x4ed0>
   17944:	mov	ip, r5
   17948:	str	r8, [ip], #4
   1794c:	add	r7, r5, #4
   17950:	vmov.f32	s13, #112	; 0x3f800000  1.0
   17954:	add	lr, r5, #28
   17958:	movw	sl, #1192	; 0x4a8
   1795c:	movt	sl, #3
   17960:	stmia	ip!, {r0, r1, r2, r3}
   17964:	mov	r3, #1
   17968:	ldm	r6, {r0, r1}
   1796c:	add	r8, sl, #28
   17970:	str	r3, [r4, #732]	; 0x2dc
   17974:	vstr	d7, [r4, #736]	; 0x2e0
   17978:	vstr	d7, [r4, #744]	; 0x2e8
   1797c:	mvn	fp, #0
   17980:	stm	ip, {r0, r1}
   17984:	mov	r6, #0
   17988:	ldm	r7!, {r0, r1, r2, r3}
   1798c:	str	fp, [r4, #728]	; 0x2d8
   17990:	stmia	lr!, {r0, r1, r2, r3}
   17994:	ldm	ip, {r0, r1}
   17998:	ldr	r3, [sp, #56]	; 0x38
   1799c:	stm	lr, {r0, r1}
   179a0:	str	r3, [r5, #60]	; 0x3c
   179a4:	str	r9, [r5, #56]	; 0x38
   179a8:	str	r4, [r5, #64]	; 0x40
   179ac:	str	sl, [r5, #52]	; 0x34
   179b0:	vstr	s13, [r4, #760]	; 0x2f8
   179b4:	ldm	r8, {r0, r1, r2, r3}
   179b8:	vstr	s13, [r4, #764]	; 0x2fc
   179bc:	str	r6, [r4, #752]	; 0x2f0
   179c0:	str	r6, [r4, #756]	; 0x2f4
   179c4:	stm	sp, {r0, r1, r2, r3}
   179c8:	mov	r2, r6
   179cc:	mov	r3, r6
   179d0:	mov	r0, r5
   179d4:	mov	r1, r4
   179d8:	bl	128d4 <ov_open_callbacks@plt>
   179dc:	cmp	r0, r6
   179e0:	blt	179f0 <__printf_chk@plt+0x4e88>
   179e4:	mov	r0, r5
   179e8:	add	sp, sp, #20
   179ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179f0:	mov	r0, r4
   179f4:	bl	12520 <free@plt>
   179f8:	mov	r0, r6
   179fc:	b	179e8 <__printf_chk@plt+0x4e80>
   17a00:	movw	r3, #1428	; 0x594
   17a04:	movt	r3, #3
   17a08:	mov	r2, #5
   17a0c:	movw	r1, #56148	; 0xdb54
   17a10:	movt	r1, #1
   17a14:	ldr	r4, [r3]
   17a18:	bl	127f0 <dcgettext@plt>
   17a1c:	mov	r1, #1
   17a20:	mov	r2, r0
   17a24:	mov	r0, r4
   17a28:	bl	12658 <__fprintf_chk@plt>
   17a2c:	mov	r0, #1
   17a30:	bl	12598 <exit@plt>
   17a34:	nop	{0}
	...
   17a40:	cmp	r1, #2
   17a44:	push	{r4, lr}
   17a48:	vpush	{d8}
   17a4c:	vmov.f64	d8, d0
   17a50:	ldr	r4, [r0, #64]	; 0x40
   17a54:	beq	17a74 <__printf_chk@plt+0x4f0c>
   17a58:	mov	r0, r4
   17a5c:	vmov.f64	d0, d8
   17a60:	bl	1246c <ov_time_seek@plt>
   17a64:	rsbs	r0, r0, #1
   17a68:	movcc	r0, #0
   17a6c:	vpop	{d8}
   17a70:	pop	{r4, pc}
   17a74:	mov	r0, r4
   17a78:	bl	12b5c <ov_time_tell@plt>
   17a7c:	vcmpe.f64	d0, #0.0
   17a80:	vmrs	APSR_nzcv, fpscr
   17a84:	movlt	r0, #0
   17a88:	blt	17a6c <__printf_chk@plt+0x4f04>
   17a8c:	vadd.f64	d8, d8, d0
   17a90:	b	17a58 <__printf_chk@plt+0x4ef0>
   17a94:	push	{r3, r4, r5, lr}
   17a98:	mvn	r1, #0
   17a9c:	ldr	r4, [r0, #64]	; 0x40
   17aa0:	mov	r5, r0
   17aa4:	mov	r0, r4
   17aa8:	bl	1261c <ov_pcm_total@plt>
   17aac:	bl	1c94c <__printf_chk@plt+0x9de4>
   17ab0:	vldr	s12, [r5, #40]	; 0x28
   17ab4:	vcvt.f64.s32	d7, s12
   17ab8:	vmov	d6, r0, r1
   17abc:	mov	r0, r4
   17ac0:	vdiv.f64	d7, d6, d7
   17ac4:	vstr	d7, [r4, #736]	; 0x2e0
   17ac8:	bl	12b14 <ov_pcm_tell@plt>
   17acc:	bl	1c94c <__printf_chk@plt+0x9de4>
   17ad0:	vldr	s14, [r5, #40]	; 0x28
   17ad4:	vcvt.f64.s32	d7, s14
   17ad8:	vmov	d6, r0, r1
   17adc:	mov	r0, r4
   17ae0:	vdiv.f64	d7, d6, d7
   17ae4:	vstr	d7, [r4, #744]	; 0x2e8
   17ae8:	bl	12ab4 <ov_bitrate_instant@plt>
   17aec:	ldr	r1, [r4, #728]	; 0x2d8
   17af0:	cmp	r0, #0
   17af4:	strgt	r0, [r4, #752]	; 0x2f0
   17af8:	mov	r0, r4
   17afc:	bl	12694 <ov_bitrate@plt>
   17b00:	bic	r3, r0, r0, asr #31
   17b04:	add	r0, r4, #736	; 0x2e0
   17b08:	str	r3, [r4, #756]	; 0x2f4
   17b0c:	pop	{r3, r4, r5, lr}
   17b10:	b	165f8 <__printf_chk@plt+0x3a90>
   17b14:	push	{r4, lr}
   17b18:	mov	r4, r0
   17b1c:	ldr	r0, [r0, #64]	; 0x40
   17b20:	bl	125f8 <ov_clear@plt>
   17b24:	ldr	r0, [r4, #64]	; 0x40
   17b28:	bl	12520 <free@plt>
   17b2c:	mov	r0, r4
   17b30:	pop	{r4, lr}
   17b34:	b	12520 <free@plt>
   17b38:	push	{r4, r5, r6, r7, r8, lr}
   17b3c:	mov	r4, r0
   17b40:	ldr	r5, [r0, #56]	; 0x38
   17b44:	sub	sp, sp, #16
   17b48:	ldr	r6, [r0, #64]	; 0x40
   17b4c:	cmp	r5, #0
   17b50:	beq	17c48 <__printf_chk@plt+0x50e0>
   17b54:	ldr	r7, [r5, #4]
   17b58:	cmp	r7, #0
   17b5c:	beq	17c48 <__printf_chk@plt+0x50e0>
   17b60:	mov	r2, #5
   17b64:	movw	r1, #56972	; 0xde8c
   17b68:	mov	r0, #0
   17b6c:	movt	r1, #1
   17b70:	ldr	r8, [r4, #60]	; 0x3c
   17b74:	bl	127f0 <dcgettext@plt>
   17b78:	ldr	ip, [r6, #724]	; 0x2d4
   17b7c:	mov	r1, #2
   17b80:	ldmib	ip, {r3, ip}
   17b84:	str	ip, [sp]
   17b88:	mov	r2, r0
   17b8c:	mov	r0, r8
   17b90:	blx	r7
   17b94:	mov	r2, #5
   17b98:	movw	r1, #57012	; 0xdeb4
   17b9c:	mov	r0, #0
   17ba0:	movt	r1, #1
   17ba4:	ldr	r7, [r5, #4]
   17ba8:	ldr	r8, [r4, #60]	; 0x3c
   17bac:	bl	127f0 <dcgettext@plt>
   17bb0:	ldr	r3, [r6, #724]	; 0x2d4
   17bb4:	mov	r1, #3
   17bb8:	ldr	r3, [r3]
   17bbc:	mov	r2, r0
   17bc0:	mov	r0, r8
   17bc4:	blx	r7
   17bc8:	mov	r2, #5
   17bcc:	movw	r1, #57040	; 0xded0
   17bd0:	mov	r0, #0
   17bd4:	movt	r1, #1
   17bd8:	ldr	r7, [r5, #4]
   17bdc:	ldr	r8, [r4, #60]	; 0x3c
   17be0:	bl	127f0 <dcgettext@plt>
   17be4:	ldr	ip, [r6, #724]	; 0x2d4
   17be8:	mov	r1, #3
   17bec:	ldr	lr, [ip, #16]
   17bf0:	ldr	r3, [ip, #12]
   17bf4:	str	lr, [sp]
   17bf8:	ldr	lr, [ip, #20]
   17bfc:	str	lr, [sp, #4]
   17c00:	ldr	ip, [ip, #24]
   17c04:	str	ip, [sp, #8]
   17c08:	mov	r2, r0
   17c0c:	mov	r0, r8
   17c10:	blx	r7
   17c14:	mov	r2, #5
   17c18:	movw	r1, #57100	; 0xdf0c
   17c1c:	mov	r0, #0
   17c20:	movt	r1, #1
   17c24:	ldr	r4, [r4, #60]	; 0x3c
   17c28:	ldr	r5, [r5, #4]
   17c2c:	bl	127f0 <dcgettext@plt>
   17c30:	ldr	r3, [r6, #720]	; 0x2d0
   17c34:	mov	r1, #3
   17c38:	ldr	r3, [r3, #12]
   17c3c:	mov	r2, r0
   17c40:	mov	r0, r4
   17c44:	blx	r5
   17c48:	add	sp, sp, #16
   17c4c:	pop	{r4, r5, r6, r7, r8, pc}
   17c50:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c54:	mov	r5, r0
   17c58:	ldr	r3, [r0, #8]
   17c5c:	mov	r8, r1
   17c60:	mov	r9, r2
   17c64:	cmp	r3, #0
   17c68:	ble	17cf0 <__printf_chk@plt+0x5188>
   17c6c:	mov	r7, #0
   17c70:	mov	r6, r7
   17c74:	mov	r4, r7
   17c78:	mov	sl, r7
   17c7c:	b	17cbc <__printf_chk@plt+0x5154>
   17c80:	ldr	r3, [r5]
   17c84:	mov	r0, r6
   17c88:	add	r4, r4, #1
   17c8c:	ldr	r1, [r3, fp]
   17c90:	bl	12a54 <strncpy@plt>
   17c94:	ldr	r3, [r5, #4]
   17c98:	mov	r0, r6
   17c9c:	mov	r1, r8
   17ca0:	mov	r2, r9
   17ca4:	ldr	r3, [r3, fp]
   17ca8:	strb	sl, [r6, r3]
   17cac:	bl	19ab8 <__printf_chk@plt+0x6f50>
   17cb0:	ldr	r3, [r5, #8]
   17cb4:	cmp	r3, r4
   17cb8:	ble	17cf4 <__printf_chk@plt+0x518c>
   17cbc:	ldr	r3, [r5, #4]
   17cc0:	lsl	fp, r4, #2
   17cc4:	ldr	r2, [r3, r4, lsl #2]
   17cc8:	cmp	r2, r7
   17ccc:	blt	17c80 <__printf_chk@plt+0x5118>
   17cd0:	add	r7, r2, #1
   17cd4:	mov	r0, r6
   17cd8:	mov	r1, r7
   17cdc:	bl	12754 <realloc@plt>
   17ce0:	ldr	r3, [r5, #4]
   17ce4:	ldr	r2, [r3, r4, lsl #2]
   17ce8:	mov	r6, r0
   17cec:	b	17c80 <__printf_chk@plt+0x5118>
   17cf0:	mov	r6, #0
   17cf4:	mov	r0, r6
   17cf8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17cfc:	b	12520 <free@plt>
   17d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d04:	sub	sp, sp, #52	; 0x34
   17d08:	ldr	r6, [r0, #64]	; 0x40
   17d0c:	mov	r7, r1
   17d10:	str	r3, [sp, #44]	; 0x2c
   17d14:	mov	r5, r2
   17d18:	ldr	sl, [r0, #56]	; 0x38
   17d1c:	ldr	r3, [r6, #732]	; 0x2dc
   17d20:	str	r0, [sp, #36]	; 0x24
   17d24:	cmp	r3, #0
   17d28:	str	sl, [sp, #40]	; 0x28
   17d2c:	ldr	r4, [sp, #88]	; 0x58
   17d30:	bne	17e9c <__printf_chk@plt+0x5334>
   17d34:	ldr	sl, [sp, #36]	; 0x24
   17d38:	mov	ip, r4
   17d3c:	movw	r9, #46164	; 0xb454
   17d40:	movt	r9, #1
   17d44:	add	fp, sl, #28
   17d48:	add	sl, r6, #728	; 0x2d8
   17d4c:	str	sl, [sp, #32]
   17d50:	add	sl, r6, #760	; 0x2f8
   17d54:	ldm	fp!, {r0, r1, r2, r3}
   17d58:	mov	r8, #0
   17d5c:	stmia	ip!, {r0, r1, r2, r3}
   17d60:	ldm	fp, {r0, r1}
   17d64:	stm	ip, {r0, r1}
   17d68:	ldr	r3, [r4, #4]
   17d6c:	mov	r1, r7
   17d70:	ldr	ip, [r4, #16]
   17d74:	mov	r2, r5
   17d78:	mov	r0, r6
   17d7c:	mul	ip, ip, r3
   17d80:	cmp	r5, ip
   17d84:	blt	17df4 <__printf_chk@plt+0x528c>
   17d88:	ldr	fp, [r6, #728]	; 0x2d8
   17d8c:	ldr	lr, [sp, #32]
   17d90:	str	r3, [sp]
   17d94:	ldr	ip, [r4, #8]
   17d98:	ldr	r3, [r4]
   17d9c:	str	r9, [sp, #12]
   17da0:	stmib	sp, {ip, lr}
   17da4:	str	sl, [sp, #16]
   17da8:	bl	12730 <ov_read_filter@plt>
   17dac:	cmp	r0, #0
   17db0:	beq	17e84 <__printf_chk@plt+0x531c>
   17db4:	cmn	r0, #3
   17db8:	beq	17e00 <__printf_chk@plt+0x5298>
   17dbc:	cmp	r0, #0
   17dc0:	add	r7, r7, r0
   17dc4:	rsb	r5, r0, r5
   17dc8:	blt	17e48 <__printf_chk@plt+0x52e0>
   17dcc:	ldr	r2, [r6, #728]	; 0x2d8
   17dd0:	add	r8, r8, r0
   17dd4:	cmp	r2, fp
   17dd8:	beq	17d68 <__printf_chk@plt+0x5200>
   17ddc:	cmn	fp, #1
   17de0:	beq	17d68 <__printf_chk@plt+0x5200>
   17de4:	ldr	ip, [sp, #44]	; 0x2c
   17de8:	mov	r3, #1
   17dec:	str	r3, [ip]
   17df0:	str	r3, [r6, #732]	; 0x2dc
   17df4:	mov	r0, r8
   17df8:	add	sp, sp, #52	; 0x34
   17dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e00:	ldr	ip, [sp, #40]	; 0x28
   17e04:	mov	r0, #0
   17e08:	movw	r1, #57216	; 0xdf80
   17e0c:	mov	r2, #5
   17e10:	movt	r1, #1
   17e14:	ldr	fp, [ip]
   17e18:	cmp	fp, r0
   17e1c:	beq	17d68 <__printf_chk@plt+0x5200>
   17e20:	ldr	ip, [sp, #36]	; 0x24
   17e24:	ldr	r3, [ip, #60]	; 0x3c
   17e28:	str	r3, [sp, #28]
   17e2c:	bl	127f0 <dcgettext@plt>
   17e30:	ldr	r3, [sp, #28]
   17e34:	mov	r1, #2
   17e38:	mov	r2, r0
   17e3c:	mov	r0, r3
   17e40:	blx	fp
   17e44:	b	17d68 <__printf_chk@plt+0x5200>
   17e48:	ldr	sl, [sp, #40]	; 0x28
   17e4c:	ldr	r4, [sl]
   17e50:	cmp	r4, #0
   17e54:	beq	17e84 <__printf_chk@plt+0x531c>
   17e58:	ldr	ip, [sp, #36]	; 0x24
   17e5c:	mov	r2, #5
   17e60:	movw	r1, #57260	; 0xdfac
   17e64:	mov	r0, #0
   17e68:	movt	r1, #1
   17e6c:	ldr	r5, [ip, #60]	; 0x3c
   17e70:	bl	127f0 <dcgettext@plt>
   17e74:	mov	r1, #0
   17e78:	mov	r2, r0
   17e7c:	mov	r0, r5
   17e80:	blx	r4
   17e84:	ldr	sl, [sp, #44]	; 0x2c
   17e88:	mov	r3, #1
   17e8c:	mov	r0, r8
   17e90:	str	r3, [sl]
   17e94:	add	sp, sp, #52	; 0x34
   17e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e9c:	mvn	r1, #0
   17ea0:	mov	r0, r6
   17ea4:	bl	1276c <ov_comment@plt>
   17ea8:	mvn	r1, #0
   17eac:	str	r0, [r6, #720]	; 0x2d0
   17eb0:	mov	r0, r6
   17eb4:	bl	12964 <ov_info@plt>
   17eb8:	ldr	ip, [sp, #36]	; 0x24
   17ebc:	ldr	r2, [r0, #4]
   17ec0:	ldr	r1, [r0, #8]
   17ec4:	sub	r3, r2, #1
   17ec8:	str	r0, [r6, #724]	; 0x2d4
   17ecc:	str	r2, [ip, #44]	; 0x2c
   17ed0:	str	r1, [ip, #40]	; 0x28
   17ed4:	cmp	r3, #7
   17ed8:	ldrls	pc, [pc, r3, lsl #2]
   17edc:	b	17fd0 <__printf_chk@plt+0x5468>
   17ee0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   17ee4:	andeq	r7, r1, r8, lsr #31
   17ee8:	andeq	r7, r1, r4, asr #30
   17eec:	andeq	r7, r1, r8, asr pc
   17ef0:	andeq	r7, r1, ip, ror #30
   17ef4:	andeq	r7, r1, r0, lsl #31
   17ef8:			; <UNDEFINED> instruction: 0x00017fbc
   17efc:	andeq	r7, r1, r0, lsl #30
   17f00:	ldr	ip, [sp, #36]	; 0x24
   17f04:	movw	r3, #57192	; 0xdf68
   17f08:	movt	r3, #1
   17f0c:	str	r3, [ip, #48]	; 0x30
   17f10:	ldr	r1, [r6, #720]	; 0x2d0
   17f14:	add	r0, r6, #760	; 0x2f8
   17f18:	bl	1b2e8 <__printf_chk@plt+0x8780>
   17f1c:	ldr	r0, [sp, #36]	; 0x24
   17f20:	bl	17b38 <__printf_chk@plt+0x4fd0>
   17f24:	ldr	ip, [sp, #36]	; 0x24
   17f28:	ldr	r0, [r6, #720]	; 0x2d0
   17f2c:	ldr	r1, [sp, #40]	; 0x28
   17f30:	ldr	r2, [ip, #60]	; 0x3c
   17f34:	bl	17c50 <__printf_chk@plt+0x50e8>
   17f38:	mov	r3, #0
   17f3c:	str	r3, [r6, #732]	; 0x2dc
   17f40:	b	17d34 <__printf_chk@plt+0x51cc>
   17f44:	ldr	sl, [sp, #36]	; 0x24
   17f48:	movw	r3, #57124	; 0xdf24
   17f4c:	movt	r3, #1
   17f50:	str	r3, [sl, #48]	; 0x30
   17f54:	b	17f10 <__printf_chk@plt+0x53a8>
   17f58:	ldr	ip, [sp, #36]	; 0x24
   17f5c:	movw	r3, #57132	; 0xdf2c
   17f60:	movt	r3, #1
   17f64:	str	r3, [ip, #48]	; 0x30
   17f68:	b	17f10 <__printf_chk@plt+0x53a8>
   17f6c:	ldr	sl, [sp, #36]	; 0x24
   17f70:	movw	r3, #57144	; 0xdf38
   17f74:	movt	r3, #1
   17f78:	str	r3, [sl, #48]	; 0x30
   17f7c:	b	17f10 <__printf_chk@plt+0x53a8>
   17f80:	ldr	ip, [sp, #36]	; 0x24
   17f84:	movw	r3, #57156	; 0xdf44
   17f88:	movt	r3, #1
   17f8c:	str	r3, [ip, #48]	; 0x30
   17f90:	b	17f10 <__printf_chk@plt+0x53a8>
   17f94:	ldr	sl, [sp, #36]	; 0x24
   17f98:	movw	r3, #57116	; 0xdf1c
   17f9c:	movt	r3, #1
   17fa0:	str	r3, [sl, #48]	; 0x30
   17fa4:	b	17f10 <__printf_chk@plt+0x53a8>
   17fa8:	ldr	ip, [sp, #36]	; 0x24
   17fac:	movw	r3, #57120	; 0xdf20
   17fb0:	movt	r3, #1
   17fb4:	str	r3, [ip, #48]	; 0x30
   17fb8:	b	17f10 <__printf_chk@plt+0x53a8>
   17fbc:	ldr	sl, [sp, #36]	; 0x24
   17fc0:	movw	r3, #57172	; 0xdf54
   17fc4:	movt	r3, #1
   17fc8:	str	r3, [sl, #48]	; 0x30
   17fcc:	b	17f10 <__printf_chk@plt+0x53a8>
   17fd0:	ldr	sl, [sp, #36]	; 0x24
   17fd4:	mov	r3, #0
   17fd8:	str	r3, [sl, #48]	; 0x30
   17fdc:	b	17f10 <__printf_chk@plt+0x53a8>
   17fe0:	push	{r3, r4, r5, lr}
   17fe4:	mov	r5, r0
   17fe8:	mov	r0, #8
   17fec:	bl	12958 <malloc@plt>
   17ff0:	subs	r4, r0, #0
   17ff4:	beq	18028 <__printf_chk@plt+0x54c0>
   17ff8:	cmp	r5, #0
   17ffc:	streq	r5, [r4]
   18000:	beq	18018 <__printf_chk@plt+0x54b0>
   18004:	mov	r0, r5
   18008:	bl	126c4 <__strdup@plt>
   1800c:	cmp	r0, #0
   18010:	str	r0, [r4]
   18014:	beq	18028 <__printf_chk@plt+0x54c0>
   18018:	mov	r3, #0
   1801c:	mov	r0, r4
   18020:	str	r3, [r4, #4]
   18024:	pop	{r3, r4, r5, pc}
   18028:	movw	r3, #1428	; 0x594
   1802c:	movt	r3, #3
   18030:	mov	r2, #5
   18034:	movw	r1, #57320	; 0xdfe8
   18038:	movt	r1, #1
   1803c:	ldr	r4, [r3]
   18040:	bl	127f0 <dcgettext@plt>
   18044:	mov	r1, #1
   18048:	mov	r2, r0
   1804c:	mov	r0, r4
   18050:	bl	12658 <__fprintf_chk@plt>
   18054:	mov	r0, #1
   18058:	bl	12598 <exit@plt>
   1805c:	push	{r4, lr}
   18060:	mov	r4, r0
   18064:	ldr	r0, [r0]
   18068:	bl	12520 <free@plt>
   1806c:	mov	r0, r4
   18070:	pop	{r4, lr}
   18074:	b	12520 <free@plt>
   18078:	push	{r4, lr}
   1807c:	mov	r0, #8
   18080:	bl	12958 <malloc@plt>
   18084:	subs	r4, r0, #0
   18088:	beq	1809c <__printf_chk@plt+0x5534>
   1808c:	mov	r0, #0
   18090:	bl	17fe0 <__printf_chk@plt+0x5478>
   18094:	str	r0, [r4]
   18098:	str	r0, [r4, #4]
   1809c:	mov	r0, r4
   180a0:	pop	{r4, pc}
   180a4:	push	{r4, r5, r6, lr}
   180a8:	mov	r6, r0
   180ac:	ldr	r4, [r0]
   180b0:	cmp	r4, #0
   180b4:	beq	180d8 <__printf_chk@plt+0x5570>
   180b8:	ldm	r4, {r0, r5}
   180bc:	bl	12520 <free@plt>
   180c0:	mov	r0, r4
   180c4:	bl	12520 <free@plt>
   180c8:	cmp	r5, #0
   180cc:	mov	r4, r5
   180d0:	str	r5, [r6]
   180d4:	bne	180b8 <__printf_chk@plt+0x5550>
   180d8:	mov	r0, r6
   180dc:	pop	{r4, r5, r6, lr}
   180e0:	b	12520 <free@plt>
   180e4:	push	{r3, r4, r5, lr}
   180e8:	mov	r4, r0
   180ec:	mov	r0, r1
   180f0:	ldr	r5, [r4, #4]
   180f4:	bl	17fe0 <__printf_chk@plt+0x5478>
   180f8:	ldr	r3, [r4, #4]
   180fc:	str	r0, [r5, #4]
   18100:	mov	r0, #1
   18104:	ldr	r3, [r3, #4]
   18108:	str	r3, [r4, #4]
   1810c:	pop	{r3, r4, r5, pc}
   18110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18114:	movw	r8, #1408	; 0x580
   18118:	movt	r8, #3
   1811c:	sub	sp, sp, #404	; 0x194
   18120:	ldr	r3, [r8]
   18124:	str	r0, [sp, #16]
   18128:	mov	r0, r1
   1812c:	str	r1, [sp, #4]
   18130:	str	r3, [sp, #396]	; 0x18c
   18134:	bl	1297c <strlen@plt>
   18138:	movw	r3, #9792	; 0x2640
   1813c:	add	r1, sp, #28
   18140:	movt	r3, #1
   18144:	mov	r2, #0
   18148:	mov	r6, r0
   1814c:	ldr	r0, [sp, #4]
   18150:	bl	125b0 <scandir64@plt>
   18154:	subs	r7, r0, #0
   18158:	movlt	r0, #0
   1815c:	blt	18260 <__printf_chk@plt+0x56f8>
   18160:	beq	18254 <__printf_chk@plt+0x56ec>
   18164:	add	sl, sp, #140	; 0x8c
   18168:	mov	fp, #0
   1816c:	movw	r1, #57372	; 0xe01c
   18170:	rsb	r2, sl, #1
   18174:	movt	r1, #1
   18178:	movw	r3, #1428	; 0x594
   1817c:	str	r2, [sp, #20]
   18180:	movt	r3, #3
   18184:	str	r1, [sp, #8]
   18188:	str	r3, [sp, #12]
   1818c:	ldr	r4, [sp, #28]
   18190:	lsl	r5, fp, #2
   18194:	ldr	r9, [r4, fp, lsl #2]
   18198:	add	r0, r9, #19
   1819c:	bl	1297c <strlen@plt>
   181a0:	add	r0, r6, r0
   181a4:	cmp	r0, #253	; 0xfd
   181a8:	bgt	18240 <__printf_chk@plt+0x56d8>
   181ac:	ldrb	r2, [r9, #19]
   181b0:	cmp	r2, #46	; 0x2e
   181b4:	beq	18278 <__printf_chk@plt+0x5710>
   181b8:	ldr	r1, [sp, #4]
   181bc:	mov	r2, #256	; 0x100
   181c0:	mov	r0, sl
   181c4:	bl	129dc <__stpcpy_chk@plt>
   181c8:	ldr	r1, [sp, #8]
   181cc:	mov	r2, #256	; 0x100
   181d0:	ldrh	r3, [r1]
   181d4:	ldr	r1, [sp, #20]
   181d8:	strh	r3, [r0], r1
   181dc:	add	r0, sl, r0
   181e0:	ldr	r1, [r4, r5]
   181e4:	add	r1, r1, #19
   181e8:	bl	127fc <__strcpy_chk@plt>
   181ec:	mov	r0, #3
   181f0:	mov	r1, sl
   181f4:	add	r2, sp, #32
   181f8:	bl	12538 <__xstat64@plt>
   181fc:	cmp	r0, #0
   18200:	bne	182dc <__printf_chk@plt+0x5774>
   18204:	ldr	r3, [sp, #48]	; 0x30
   18208:	and	r3, r3, #61440	; 0xf000
   1820c:	cmp	r3, #16384	; 0x4000
   18210:	beq	1829c <__printf_chk@plt+0x5734>
   18214:	ldr	r3, [sp, #16]
   18218:	mov	r0, sl
   1821c:	ldr	r4, [r3, #4]
   18220:	bl	17fe0 <__printf_chk@plt+0x5478>
   18224:	ldr	r1, [sp, #16]
   18228:	ldr	r3, [sp, #28]
   1822c:	ldr	r2, [r1, #4]
   18230:	str	r0, [r4, #4]
   18234:	ldr	r2, [r2, #4]
   18238:	str	r2, [r1, #4]
   1823c:	ldr	r9, [r3, r5]
   18240:	mov	r0, r9
   18244:	add	fp, fp, #1
   18248:	bl	12520 <free@plt>
   1824c:	cmp	fp, r7
   18250:	bne	1818c <__printf_chk@plt+0x5624>
   18254:	ldr	r0, [sp, #28]
   18258:	bl	12520 <free@plt>
   1825c:	mov	r0, #1
   18260:	ldr	r2, [sp, #396]	; 0x18c
   18264:	ldr	r3, [r8]
   18268:	cmp	r2, r3
   1826c:	bne	182e8 <__printf_chk@plt+0x5780>
   18270:	add	sp, sp, #404	; 0x194
   18274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18278:	ldrb	r2, [r9, #20]
   1827c:	cmp	r2, #0
   18280:	beq	18240 <__printf_chk@plt+0x56d8>
   18284:	cmp	r2, #46	; 0x2e
   18288:	bne	181b8 <__printf_chk@plt+0x5650>
   1828c:	ldrb	r2, [r9, #21]
   18290:	cmp	r2, #0
   18294:	beq	18240 <__printf_chk@plt+0x56d8>
   18298:	b	181b8 <__printf_chk@plt+0x5650>
   1829c:	ldr	r0, [sp, #16]
   182a0:	mov	r1, sl
   182a4:	bl	18110 <__printf_chk@plt+0x55a8>
   182a8:	cmp	r0, #0
   182ac:	bne	182dc <__printf_chk@plt+0x5774>
   182b0:	ldr	r2, [sp, #12]
   182b4:	movw	r1, #57376	; 0xe020
   182b8:	movt	r1, #1
   182bc:	ldr	r4, [r2]
   182c0:	mov	r2, #5
   182c4:	bl	127f0 <dcgettext@plt>
   182c8:	mov	r1, #1
   182cc:	mov	r3, sl
   182d0:	mov	r2, r0
   182d4:	mov	r0, r4
   182d8:	bl	12658 <__fprintf_chk@plt>
   182dc:	ldr	r3, [sp, #28]
   182e0:	ldr	r9, [r3, r5]
   182e4:	b	18240 <__printf_chk@plt+0x56d8>
   182e8:	bl	127e4 <__stack_chk_fail@plt>
   182ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182f0:	movw	r6, #1408	; 0x580
   182f4:	movt	r6, #3
   182f8:	ldrb	r3, [r1]
   182fc:	sub	sp, sp, #388	; 0x184
   18300:	mov	r9, r1
   18304:	ldr	r2, [r6]
   18308:	cmp	r3, #45	; 0x2d
   1830c:	mov	r5, r0
   18310:	str	r2, [sp, #380]	; 0x17c
   18314:	beq	184c8 <__printf_chk@plt+0x5960>
   18318:	movw	r1, #56100	; 0xdb24
   1831c:	mov	r0, r9
   18320:	movt	r1, #1
   18324:	bl	12a78 <fopen64@plt>
   18328:	mov	r4, r0
   1832c:	cmp	r4, #0
   18330:	beq	184e8 <__printf_chk@plt+0x5980>
   18334:	add	sl, sp, #124	; 0x7c
   18338:	mov	r7, #0
   1833c:	movw	r3, #1428	; 0x594
   18340:	movt	r3, #3
   18344:	str	r3, [sp, #12]
   18348:	mov	r0, r4
   1834c:	bl	125d4 <feof@plt>
   18350:	subs	fp, r0, #0
   18354:	bne	18440 <__printf_chk@plt+0x58d8>
   18358:	mov	r0, sl
   1835c:	mov	r1, #256	; 0x100
   18360:	mov	r2, r4
   18364:	bl	12904 <fgets@plt>
   18368:	cmp	r0, #0
   1836c:	beq	18348 <__printf_chk@plt+0x57e0>
   18370:	mov	r0, sl
   18374:	strb	fp, [sp, #379]	; 0x17b
   18378:	bl	1297c <strlen@plt>
   1837c:	subs	r8, r0, #0
   18380:	ble	184f0 <__printf_chk@plt+0x5988>
   18384:	bl	12880 <__ctype_b_loc@plt>
   18388:	mov	ip, fp
   1838c:	ldr	r1, [r0]
   18390:	b	183a0 <__printf_chk@plt+0x5838>
   18394:	add	ip, ip, #1
   18398:	cmp	r8, ip
   1839c:	beq	18348 <__printf_chk@plt+0x57e0>
   183a0:	ldrsb	r3, [sl, ip]
   183a4:	lsl	r3, r3, #1
   183a8:	ldrh	lr, [r1, r3]
   183ac:	tst	lr, #8192	; 0x2000
   183b0:	bne	18394 <__printf_chk@plt+0x582c>
   183b4:	add	r3, sp, #384	; 0x180
   183b8:	sub	r1, r8, #2
   183bc:	add	r1, r3, r1
   183c0:	ldrb	r3, [r1, #-260]	; 0xfffffefc
   183c4:	cmp	r3, #13
   183c8:	beq	1845c <__printf_chk@plt+0x58f4>
   183cc:	add	r3, sp, #384	; 0x180
   183d0:	sub	r2, r8, #1
   183d4:	add	r2, r3, r2
   183d8:	ldrb	r3, [r2, #-260]	; 0xfffffefc
   183dc:	sxtb	r3, r3
   183e0:	cmp	r3, #10
   183e4:	cmpne	r3, #13
   183e8:	strbeq	r7, [r2, #-260]	; 0xfffffefc
   183ec:	mov	r0, #3
   183f0:	mov	r1, sl
   183f4:	add	r2, sp, #16
   183f8:	bl	12538 <__xstat64@plt>
   183fc:	cmp	r0, #0
   18400:	bne	18414 <__printf_chk@plt+0x58ac>
   18404:	ldr	r3, [sp, #32]
   18408:	and	r3, r3, #61440	; 0xf000
   1840c:	cmp	r3, #16384	; 0x4000
   18410:	beq	18480 <__printf_chk@plt+0x5918>
   18414:	mov	r0, sl
   18418:	ldr	fp, [r5, #4]
   1841c:	bl	17fe0 <__printf_chk@plt+0x5478>
   18420:	ldr	r3, [r5, #4]
   18424:	str	r0, [fp, #4]
   18428:	mov	r0, r4
   1842c:	ldr	r3, [r3, #4]
   18430:	str	r3, [r5, #4]
   18434:	bl	125d4 <feof@plt>
   18438:	subs	fp, r0, #0
   1843c:	beq	18358 <__printf_chk@plt+0x57f0>
   18440:	mov	r0, #1
   18444:	ldr	r2, [sp, #380]	; 0x17c
   18448:	ldr	r3, [r6]
   1844c:	cmp	r2, r3
   18450:	bne	184f8 <__printf_chk@plt+0x5990>
   18454:	add	sp, sp, #388	; 0x184
   18458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1845c:	add	r3, sp, #384	; 0x180
   18460:	sub	r2, r8, #1
   18464:	add	r2, r3, r2
   18468:	ldrb	r3, [r2, #-260]	; 0xfffffefc
   1846c:	sxtb	r3, r3
   18470:	cmp	r3, #10
   18474:	strbeq	r7, [r1, #-260]	; 0xfffffefc
   18478:	bne	183e0 <__printf_chk@plt+0x5878>
   1847c:	b	183ec <__printf_chk@plt+0x5884>
   18480:	mov	r0, r5
   18484:	mov	r1, sl
   18488:	bl	18110 <__printf_chk@plt+0x55a8>
   1848c:	cmp	r0, #0
   18490:	bne	18348 <__printf_chk@plt+0x57e0>
   18494:	ldr	r3, [sp, #12]
   18498:	mov	r2, #5
   1849c:	movw	r1, #57416	; 0xe048
   184a0:	movt	r1, #1
   184a4:	ldr	fp, [r3]
   184a8:	bl	127f0 <dcgettext@plt>
   184ac:	str	sl, [sp]
   184b0:	mov	r1, #1
   184b4:	mov	r3, r9
   184b8:	mov	r2, r0
   184bc:	mov	r0, fp
   184c0:	bl	12658 <__fprintf_chk@plt>
   184c4:	b	18348 <__printf_chk@plt+0x57e0>
   184c8:	ldrb	r3, [r1, #1]
   184cc:	cmp	r3, #0
   184d0:	bne	18318 <__printf_chk@plt+0x57b0>
   184d4:	movw	r3, #1400	; 0x578
   184d8:	movt	r3, #3
   184dc:	ldr	r4, [r3]
   184e0:	cmp	r4, #0
   184e4:	bne	18334 <__printf_chk@plt+0x57cc>
   184e8:	mov	r0, r4
   184ec:	b	18444 <__printf_chk@plt+0x58dc>
   184f0:	bne	183b4 <__printf_chk@plt+0x584c>
   184f4:	b	18348 <__printf_chk@plt+0x57e0>
   184f8:	bl	127e4 <__stack_chk_fail@plt>
   184fc:	ldr	r3, [r0]
   18500:	ldr	r3, [r3, #4]
   18504:	cmp	r3, #0
   18508:	beq	18524 <__printf_chk@plt+0x59bc>
   1850c:	mov	r0, #0
   18510:	ldr	r3, [r3, #4]
   18514:	add	r0, r0, #1
   18518:	cmp	r3, #0
   1851c:	bne	18510 <__printf_chk@plt+0x59a8>
   18520:	bx	lr
   18524:	mov	r0, r3
   18528:	bx	lr
   1852c:	ldr	r3, [r0]
   18530:	push	{r4, r5, r6, r7, r8, lr}
   18534:	mov	r8, r1
   18538:	ldr	r4, [r3, #4]
   1853c:	cmp	r4, #0
   18540:	beq	185e4 <__printf_chk@plt+0x5a7c>
   18544:	mov	r5, r4
   18548:	mov	r6, #0
   1854c:	ldr	r5, [r5, #4]
   18550:	add	r6, r6, #1
   18554:	cmp	r5, #0
   18558:	bne	1854c <__printf_chk@plt+0x59e4>
   1855c:	str	r6, [r8]
   18560:	mov	r0, r6
   18564:	mov	r1, #4
   18568:	bl	128a4 <calloc@plt>
   1856c:	subs	r7, r0, #0
   18570:	beq	185fc <__printf_chk@plt+0x5a94>
   18574:	cmp	r6, #0
   18578:	beq	185a8 <__printf_chk@plt+0x5a40>
   1857c:	sub	r6, r7, #4
   18580:	ldr	r0, [r4]
   18584:	bl	126c4 <__strdup@plt>
   18588:	cmp	r0, #0
   1858c:	str	r0, [r6, #4]!
   18590:	beq	185b0 <__printf_chk@plt+0x5a48>
   18594:	ldr	r3, [r8]
   18598:	add	r5, r5, #1
   1859c:	ldr	r4, [r4, #4]
   185a0:	cmp	r3, r5
   185a4:	bgt	18580 <__printf_chk@plt+0x5a18>
   185a8:	mov	r0, r7
   185ac:	pop	{r4, r5, r6, r7, r8, pc}
   185b0:	movw	r3, #1428	; 0x594
   185b4:	movt	r3, #3
   185b8:	movw	r1, #57472	; 0xe080
   185bc:	movt	r1, #1
   185c0:	ldr	r4, [r3]
   185c4:	mov	r2, #5
   185c8:	bl	127f0 <dcgettext@plt>
   185cc:	mov	r1, #1
   185d0:	mov	r2, r0
   185d4:	mov	r0, r4
   185d8:	bl	12658 <__fprintf_chk@plt>
   185dc:	mov	r0, #1
   185e0:	bl	12598 <exit@plt>
   185e4:	str	r4, [r1]
   185e8:	mov	r0, r4
   185ec:	mov	r1, #4
   185f0:	bl	128a4 <calloc@plt>
   185f4:	subs	r7, r0, #0
   185f8:	bne	185a8 <__printf_chk@plt+0x5a40>
   185fc:	movw	r3, #1428	; 0x594
   18600:	movt	r3, #3
   18604:	movw	r1, #57472	; 0xe080
   18608:	mov	r0, #0
   1860c:	ldr	r4, [r3]
   18610:	movt	r1, #1
   18614:	mov	r2, #5
   18618:	b	185c8 <__printf_chk@plt+0x5a60>
   1861c:	push	{r3, r4, r5, r6, r7, lr}
   18620:	subs	r6, r1, #0
   18624:	mov	r7, r0
   18628:	subgt	r5, r0, #4
   1862c:	movgt	r4, #0
   18630:	ble	18648 <__printf_chk@plt+0x5ae0>
   18634:	add	r4, r4, #1
   18638:	ldr	r0, [r5, #4]!
   1863c:	bl	12520 <free@plt>
   18640:	cmp	r4, r6
   18644:	bne	18634 <__printf_chk@plt+0x5acc>
   18648:	mov	r0, r7
   1864c:	pop	{r3, r4, r5, r6, r7, lr}
   18650:	b	12520 <free@plt>
   18654:	andeq	r0, r0, r0
   18658:	movw	r0, #1516	; 0x5ec
   1865c:	movt	r0, #3
   18660:	b	12b50 <pthread_mutex_unlock@plt>
   18664:	ldr	r3, [r1, #24]
   18668:	push	{r4, r5, r6, r7, lr}
   1866c:	cmp	r3, #0
   18670:	sub	sp, sp, #20
   18674:	mov	r6, r1
   18678:	movweq	r5, #57520	; 0xe0b0
   1867c:	mov	r7, r0
   18680:	movteq	r5, #1
   18684:	moveq	r4, r0
   18688:	bne	186c8 <__printf_chk@plt+0x5b60>
   1868c:	ldr	r3, [r6, #28]
   18690:	cmp	r3, #0
   18694:	bne	18724 <__printf_chk@plt+0x5bbc>
   18698:	ldr	r3, [r6, #32]
   1869c:	cmp	r3, #0
   186a0:	bne	18768 <__printf_chk@plt+0x5c00>
   186a4:	cmp	r4, r7
   186a8:	movwne	r3, #60276	; 0xeb74
   186ac:	movtne	r3, #1
   186b0:	moveq	r3, #0
   186b4:	strbeq	r3, [r4]
   186b8:	ldrhne	r3, [r3]
   186bc:	strhne	r3, [r4]
   186c0:	add	sp, sp, #20
   186c4:	pop	{r4, r5, r6, r7, pc}
   186c8:	mov	r2, #5
   186cc:	movw	r1, #57524	; 0xe0b4
   186d0:	mov	r0, #0
   186d4:	movt	r1, #1
   186d8:	bl	127f0 <dcgettext@plt>
   186dc:	vldr	d6, [pc, #188]	; 187a0 <__printf_chk@plt+0x5c38>
   186e0:	movw	r2, #57520	; 0xe0b0
   186e4:	movt	r2, #1
   186e8:	str	r2, [sp]
   186ec:	vldr	d7, [r6, #16]
   186f0:	vmul.f64	d7, d7, d6
   186f4:	mov	r1, #1
   186f8:	mvn	r2, #0
   186fc:	movw	r5, #53084	; 0xcf5c
   18700:	movt	r5, #1
   18704:	vstr	d7, [sp, #8]
   18708:	mov	r3, r0
   1870c:	mov	r0, r7
   18710:	bl	12a90 <__sprintf_chk@plt>
   18714:	ldr	r3, [r6, #28]
   18718:	cmp	r3, #0
   1871c:	add	r4, r7, r0
   18720:	beq	18698 <__printf_chk@plt+0x5b30>
   18724:	mov	r2, #5
   18728:	movw	r1, #57544	; 0xe0c8
   1872c:	mov	r0, #0
   18730:	movt	r1, #1
   18734:	bl	127f0 <dcgettext@plt>
   18738:	str	r5, [sp]
   1873c:	mov	r1, #1
   18740:	mvn	r2, #0
   18744:	movw	r5, #53084	; 0xcf5c
   18748:	movt	r5, #1
   1874c:	mov	r3, r0
   18750:	mov	r0, r4
   18754:	bl	12a90 <__sprintf_chk@plt>
   18758:	ldr	r3, [r6, #32]
   1875c:	cmp	r3, #0
   18760:	add	r4, r4, r0
   18764:	beq	186a4 <__printf_chk@plt+0x5b3c>
   18768:	mov	r2, #5
   1876c:	movw	r1, #57556	; 0xe0d4
   18770:	mov	r0, #0
   18774:	movt	r1, #1
   18778:	bl	127f0 <dcgettext@plt>
   1877c:	str	r5, [sp]
   18780:	mov	r1, #1
   18784:	mvn	r2, #0
   18788:	mov	r3, r0
   1878c:	mov	r0, r4
   18790:	bl	12a90 <__sprintf_chk@plt>
   18794:	add	r4, r4, r0
   18798:	b	186a4 <__printf_chk@plt+0x5b3c>
   1879c:	nop	{0}
   187a0:	andeq	r0, r0, r0
   187a4:	subsmi	r0, r9, r0
   187a8:	vcvt.s32.f64	s13, d0
   187ac:	vldr	s15, [pc, #88]	; 1880c <__printf_chk@plt+0x5ca4>
   187b0:	push	{r4, lr}
   187b4:	movw	lr, #34953	; 0x8889
   187b8:	movt	lr, #34952	; 0x8888
   187bc:	sub	sp, sp, #16
   187c0:	mov	r1, #1
   187c4:	mvn	r2, #0
   187c8:	movw	r3, #57564	; 0xe0dc
   187cc:	movt	r3, #1
   187d0:	vmov	ip, s13
   187d4:	smull	r4, lr, lr, ip
   187d8:	asr	r4, ip, #31
   187dc:	add	ip, lr, ip
   187e0:	rsb	ip, r4, ip, asr #5
   187e4:	str	ip, [sp]
   187e8:	vmov	s13, ip
   187ec:	vcvt.f32.s32	s14, s13
   187f0:	vmul.f32	s14, s14, s15
   187f4:	vcvt.f64.f32	d7, s14
   187f8:	vsub.f64	d0, d0, d7
   187fc:	vstr	d0, [sp, #8]
   18800:	bl	12a90 <__sprintf_chk@plt>
   18804:	add	sp, sp, #16
   18808:	pop	{r4, pc}
   1880c:	rsbsmi	r0, r0, #0
   18810:	push	{r3, r4, r5, lr}
   18814:	movw	r5, #1428	; 0x594
   18818:	movt	r5, #3
   1881c:	mov	r4, r0
   18820:	mov	r0, #13
   18824:	ldr	r1, [r5]
   18828:	bl	1291c <fputc@plt>
   1882c:	cmp	r4, #0
   18830:	ble	18848 <__printf_chk@plt+0x5ce0>
   18834:	mov	r0, #32
   18838:	ldr	r1, [r5]
   1883c:	bl	1291c <fputc@plt>
   18840:	subs	r4, r4, #1
   18844:	bne	18834 <__printf_chk@plt+0x5ccc>
   18848:	ldr	r1, [r5]
   1884c:	mov	r0, #13
   18850:	pop	{r3, r4, r5, lr}
   18854:	b	1291c <fputc@plt>
   18858:	push	{r4}		; (str r4, [sp, #-4]!)
   1885c:	subs	r4, r0, #0
   18860:	mov	r3, #13
   18864:	strb	r3, [r1]
   18868:	ble	188a8 <__printf_chk@plt+0x5d40>
   1886c:	add	ip, r4, r1
   18870:	mov	r3, r1
   18874:	mov	r2, #32
   18878:	strb	r2, [r3, #1]!
   1887c:	cmp	r3, ip
   18880:	bne	18878 <__printf_chk@plt+0x5d10>
   18884:	add	r0, r4, #2
   18888:	add	r4, r4, #1
   1888c:	mov	r3, r0
   18890:	mov	ip, #13
   18894:	mov	r2, #0
   18898:	strb	ip, [r1, r4]
   1889c:	strb	r2, [r1, r3]
   188a0:	pop	{r4}		; (ldr r4, [sp], #4)
   188a4:	bx	lr
   188a8:	mov	r3, #2
   188ac:	mov	r4, #1
   188b0:	mov	r0, r3
   188b4:	b	18890 <__printf_chk@plt+0x5d28>
   188b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   188bc:	movw	r5, #1516	; 0x5ec
   188c0:	movt	r5, #3
   188c4:	sub	sp, sp, #8
   188c8:	ldr	r3, [r5, #24]
   188cc:	cmp	r3, #0
   188d0:	moveq	r0, r3
   188d4:	beq	189f4 <__printf_chk@plt+0x5e8c>
   188d8:	ldr	lr, [r5, #28]
   188dc:	movw	ip, #31988	; 0x7cf4
   188e0:	movt	ip, #3
   188e4:	mov	r3, #13
   188e8:	cmp	lr, #0
   188ec:	strb	r3, [ip]
   188f0:	ble	18a64 <__printf_chk@plt+0x5efc>
   188f4:	add	r1, ip, lr
   188f8:	mov	r3, ip
   188fc:	mov	r2, #32
   18900:	strb	r2, [r3, #1]!
   18904:	cmp	r3, r1
   18908:	bne	18900 <__printf_chk@plt+0x5d98>
   1890c:	add	r1, lr, #1
   18910:	add	lr, lr, #2
   18914:	add	r4, r0, #24
   18918:	mov	r3, #0
   1891c:	mov	r2, #13
   18920:	mov	r6, r3
   18924:	strb	r2, [ip, r1]
   18928:	movw	r7, #57580	; 0xe0ec
   1892c:	strb	r3, [ip, lr]
   18930:	add	r8, ip, lr
   18934:	ldr	r3, [r4, #-16]
   18938:	movt	r7, #1
   1893c:	cmp	r3, #0
   18940:	beq	189c4 <__printf_chk@plt+0x5e5c>
   18944:	ldr	r2, [r4, #-24]	; 0xffffffe8
   18948:	ldr	r3, [r5, #24]
   1894c:	cmp	r2, r3
   18950:	bgt	189b4 <__printf_chk@plt+0x5e4c>
   18954:	ldrsb	r3, [r4, #-20]	; 0xffffffec
   18958:	cmp	r3, #0
   1895c:	beq	189b4 <__printf_chk@plt+0x5e4c>
   18960:	cmp	r6, #0
   18964:	ldrhne	r3, [r7]
   18968:	strhne	r3, [r8, r6]
   1896c:	addne	r6, r6, #1
   18970:	ldr	r3, [r4, #-12]
   18974:	cmp	r3, #4
   18978:	ldrls	pc, [pc, r3, lsl #2]
   1897c:	b	189b4 <__printf_chk@plt+0x5e4c>
   18980:	andeq	r8, r1, r8, asr #20
   18984:	muleq	r1, r4, r9
   18988:	muleq	r1, r4, r9
   1898c:	strdeq	r8, [r1], -ip
   18990:	andeq	r8, r1, r4, lsr #20
   18994:	ldr	ip, [r4, #-8]
   18998:	add	r0, r8, r6
   1899c:	ldr	r3, [r4, #-16]
   189a0:	mov	r1, #1
   189a4:	mvn	r2, #0
   189a8:	str	ip, [sp]
   189ac:	bl	12a90 <__sprintf_chk@plt>
   189b0:	add	r6, r6, r0
   189b4:	add	r4, r4, #24
   189b8:	ldr	r3, [r4, #-16]
   189bc:	cmp	r3, #0
   189c0:	bne	18944 <__printf_chk@plt+0x5ddc>
   189c4:	movw	r2, #57584	; 0xe0f0
   189c8:	movt	r2, #1
   189cc:	movw	r3, #1428	; 0x594
   189d0:	movt	r3, #3
   189d4:	ldrh	r2, [r2]
   189d8:	add	r4, r6, #1
   189dc:	ldr	r1, [r3]
   189e0:	movw	r0, #31988	; 0x7cf4
   189e4:	movt	r0, #3
   189e8:	strh	r2, [r8, r6]
   189ec:	bl	12ae4 <fputs@plt>
   189f0:	mov	r0, r4
   189f4:	add	sp, sp, #8
   189f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   189fc:	vldr	s14, [r4, #-8]
   18a00:	vcvt.f64.f32	d7, s14
   18a04:	ldr	r3, [r4, #-16]
   18a08:	add	r0, r8, r6
   18a0c:	mov	r1, #1
   18a10:	mvn	r2, #0
   18a14:	vstr	d7, [sp]
   18a18:	bl	12a90 <__sprintf_chk@plt>
   18a1c:	add	r6, r6, r0
   18a20:	b	189b4 <__printf_chk@plt+0x5e4c>
   18a24:	ldrd	sl, [r4, #-8]
   18a28:	add	r0, r8, r6
   18a2c:	ldr	r3, [r4, #-16]
   18a30:	mov	r1, #1
   18a34:	mvn	r2, #0
   18a38:	strd	sl, [sp]
   18a3c:	bl	12a90 <__sprintf_chk@plt>
   18a40:	add	r6, r6, r0
   18a44:	b	189b4 <__printf_chk@plt+0x5e4c>
   18a48:	add	r0, r8, r6
   18a4c:	mov	r1, #1
   18a50:	mvn	r2, #0
   18a54:	ldr	r3, [r4, #-16]
   18a58:	bl	12a90 <__sprintf_chk@plt>
   18a5c:	add	r6, r6, r0
   18a60:	b	189b4 <__printf_chk@plt+0x5e4c>
   18a64:	mov	lr, #2
   18a68:	mov	r1, #1
   18a6c:	b	18914 <__printf_chk@plt+0x5dac>
   18a70:	push	{r3, r4, r5, r6, r7, lr}
   18a74:	movw	r5, #1516	; 0x5ec
   18a78:	movt	r5, #3
   18a7c:	movw	r4, #1428	; 0x594
   18a80:	mov	r7, r0
   18a84:	mov	r6, r1
   18a88:	ldr	r3, [r5, #28]
   18a8c:	movt	r4, #3
   18a90:	cmp	r3, #0
   18a94:	beq	18aa4 <__printf_chk@plt+0x5f3c>
   18a98:	mov	r0, #10
   18a9c:	ldr	r1, [r4]
   18aa0:	bl	1291c <fputc@plt>
   18aa4:	mov	r3, r6
   18aa8:	mov	r2, r7
   18aac:	mov	r1, #1
   18ab0:	ldr	r0, [r4]
   18ab4:	bl	128bc <__vfprintf_chk@plt>
   18ab8:	ldr	r1, [r4]
   18abc:	mov	r0, #10
   18ac0:	bl	1291c <fputc@plt>
   18ac4:	mov	r3, #0
   18ac8:	str	r3, [r5, #28]
   18acc:	pop	{r3, r4, r5, r6, r7, pc}
   18ad0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18ad4:	mov	r0, #11
   18ad8:	mov	r1, #24
   18adc:	bl	128a4 <calloc@plt>
   18ae0:	subs	r4, r0, #0
   18ae4:	beq	18cfc <__printf_chk@plt+0x6194>
   18ae8:	mov	r6, #0
   18aec:	mov	r3, #3
   18af0:	mov	r2, #5
   18af4:	str	r3, [r4]
   18af8:	strb	r6, [r4, #4]
   18afc:	mov	r0, r6
   18b00:	movw	r1, #57632	; 0xe120
   18b04:	movt	r1, #1
   18b08:	bl	127f0 <dcgettext@plt>
   18b0c:	mov	r5, #1
   18b10:	mov	r7, #2
   18b14:	mov	r2, #5
   18b18:	str	r7, [r4, #12]
   18b1c:	movw	r1, #57644	; 0xe12c
   18b20:	str	r5, [r4, #24]
   18b24:	movt	r1, #1
   18b28:	strb	r5, [r4, #28]
   18b2c:	str	r0, [r4, #8]
   18b30:	mov	r0, r6
   18b34:	bl	127f0 <dcgettext@plt>
   18b38:	str	r7, [r4, #36]	; 0x24
   18b3c:	mov	r1, r5
   18b40:	str	r0, [r4, #32]
   18b44:	mov	r0, #20
   18b48:	bl	128a4 <calloc@plt>
   18b4c:	cmp	r0, r6
   18b50:	str	r0, [r4, #40]	; 0x28
   18b54:	beq	18cc8 <__printf_chk@plt+0x6160>
   18b58:	vldr	d0, [pc, #464]	; 18d30 <__printf_chk@plt+0x61c8>
   18b5c:	bl	187a8 <__printf_chk@plt+0x5c40>
   18b60:	str	r5, [r4, #48]	; 0x30
   18b64:	strb	r5, [r4, #52]	; 0x34
   18b68:	movw	r3, #57656	; 0xe138
   18b6c:	str	r7, [r4, #60]	; 0x3c
   18b70:	movt	r3, #1
   18b74:	mov	r0, #20
   18b78:	str	r3, [r4, #56]	; 0x38
   18b7c:	mov	r1, r5
   18b80:	bl	128a4 <calloc@plt>
   18b84:	cmp	r0, #0
   18b88:	str	r0, [r4, #64]	; 0x40
   18b8c:	beq	18cc8 <__printf_chk@plt+0x6160>
   18b90:	vldr	d0, [pc, #408]	; 18d30 <__printf_chk@plt+0x61c8>
   18b94:	bl	187a8 <__printf_chk@plt+0x5c40>
   18b98:	mov	r2, #5
   18b9c:	str	r5, [r4, #72]	; 0x48
   18ba0:	movw	r1, #57664	; 0xe140
   18ba4:	strb	r5, [r4, #76]	; 0x4c
   18ba8:	movt	r1, #1
   18bac:	mov	r0, r6
   18bb0:	bl	127f0 <dcgettext@plt>
   18bb4:	str	r7, [r4, #84]	; 0x54
   18bb8:	mov	r1, r5
   18bbc:	str	r0, [r4, #80]	; 0x50
   18bc0:	mov	r0, #20
   18bc4:	bl	128a4 <calloc@plt>
   18bc8:	cmp	r0, #0
   18bcc:	str	r0, [r4, #88]	; 0x58
   18bd0:	beq	18cc8 <__printf_chk@plt+0x6160>
   18bd4:	vldr	d0, [pc, #340]	; 18d30 <__printf_chk@plt+0x61c8>
   18bd8:	mov	r9, #4
   18bdc:	bl	187a8 <__printf_chk@plt+0x5c40>
   18be0:	mov	r2, #5
   18be4:	str	r7, [r4, #96]	; 0x60
   18be8:	movw	r3, #57672	; 0xe148
   18bec:	strb	r5, [r4, #100]	; 0x64
   18bf0:	movt	r3, #1
   18bf4:	str	r7, [r4, #120]	; 0x78
   18bf8:	movw	r1, #57688	; 0xe158
   18bfc:	str	r3, [r4, #104]	; 0x68
   18c00:	movt	r1, #1
   18c04:	strb	r6, [r4, #124]	; 0x7c
   18c08:	mov	r0, r6
   18c0c:	str	r9, [r4, #108]	; 0x6c
   18c10:	movw	r8, #57112	; 0xdf18
   18c14:	bl	127f0 <dcgettext@plt>
   18c18:	mov	r2, #5
   18c1c:	str	r9, [r4, #132]	; 0x84
   18c20:	movw	r1, #57708	; 0xe16c
   18c24:	str	r7, [r4, #144]	; 0x90
   18c28:	movt	r1, #1
   18c2c:	strb	r6, [r4, #148]	; 0x94
   18c30:	movt	r8, #1
   18c34:	str	r0, [r4, #128]	; 0x80
   18c38:	mov	r0, r6
   18c3c:	bl	127f0 <dcgettext@plt>
   18c40:	str	r9, [r4, #156]	; 0x9c
   18c44:	str	r7, [r4, #168]	; 0xa8
   18c48:	mov	r1, r5
   18c4c:	strb	r6, [r4, #172]	; 0xac
   18c50:	str	r7, [r4, #180]	; 0xb4
   18c54:	str	r8, [r4, #176]	; 0xb0
   18c58:	str	r0, [r4, #152]	; 0x98
   18c5c:	mov	r0, #25
   18c60:	bl	128a4 <calloc@plt>
   18c64:	cmp	r0, #0
   18c68:	str	r0, [r4, #184]	; 0xb8
   18c6c:	beq	18cc8 <__printf_chk@plt+0x6160>
   18c70:	mov	r2, #5
   18c74:	str	r7, [r4, #192]	; 0xc0
   18c78:	movw	r1, #57732	; 0xe184
   18c7c:	strb	r6, [r4, #196]	; 0xc4
   18c80:	movt	r1, #1
   18c84:	mov	r0, r6
   18c88:	bl	127f0 <dcgettext@plt>
   18c8c:	str	r9, [r4, #204]	; 0xcc
   18c90:	str	r5, [r4, #216]	; 0xd8
   18c94:	mov	r1, r5
   18c98:	strb	r6, [r4, #220]	; 0xdc
   18c9c:	str	r8, [r4, #224]	; 0xe0
   18ca0:	str	r7, [r4, #228]	; 0xe4
   18ca4:	str	r0, [r4, #200]	; 0xc8
   18ca8:	mov	r0, #25
   18cac:	bl	128a4 <calloc@plt>
   18cb0:	cmp	r0, #0
   18cb4:	str	r0, [r4, #232]	; 0xe8
   18cb8:	beq	18cc8 <__printf_chk@plt+0x6160>
   18cbc:	str	r6, [r4, #248]	; 0xf8
   18cc0:	mov	r0, r4
   18cc4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18cc8:	movw	r3, #1428	; 0x594
   18ccc:	movt	r3, #3
   18cd0:	mov	r2, #5
   18cd4:	movw	r1, #57588	; 0xe0f4
   18cd8:	movt	r1, #1
   18cdc:	ldr	r4, [r3]
   18ce0:	bl	127f0 <dcgettext@plt>
   18ce4:	mov	r1, r5
   18ce8:	mov	r2, r0
   18cec:	mov	r0, r4
   18cf0:	bl	12658 <__fprintf_chk@plt>
   18cf4:	mov	r0, r5
   18cf8:	bl	12598 <exit@plt>
   18cfc:	movw	r3, #1428	; 0x594
   18d00:	movt	r3, #3
   18d04:	mov	r2, #5
   18d08:	movw	r1, #57588	; 0xe0f4
   18d0c:	movt	r1, #1
   18d10:	ldr	r4, [r3]
   18d14:	bl	127f0 <dcgettext@plt>
   18d18:	mov	r1, #1
   18d1c:	mov	r2, r0
   18d20:	mov	r0, r4
   18d24:	bl	12658 <__fprintf_chk@plt>
   18d28:	mov	r0, #1
   18d2c:	bl	12598 <exit@plt>
	...
   18d38:	push	{r4, lr}
   18d3c:	mov	r4, r0
   18d40:	ldr	r0, [r0, #40]	; 0x28
   18d44:	bl	12520 <free@plt>
   18d48:	ldr	r0, [r4, #64]	; 0x40
   18d4c:	bl	12520 <free@plt>
   18d50:	ldr	r0, [r4, #88]	; 0x58
   18d54:	bl	12520 <free@plt>
   18d58:	ldr	r0, [r4, #184]	; 0xb8
   18d5c:	bl	12520 <free@plt>
   18d60:	ldr	r0, [r4, #232]	; 0xe8
   18d64:	bl	12520 <free@plt>
   18d68:	mov	r0, r4
   18d6c:	pop	{r4, lr}
   18d70:	b	12520 <free@plt>
   18d74:	push	{r4, lr}
   18d78:	mov	r1, #3
   18d7c:	mov	r4, r0
   18d80:	mov	r0, #2
   18d84:	bl	126a0 <fcntl@plt>
   18d88:	mov	r1, #4
   18d8c:	orr	r2, r0, #2048	; 0x800
   18d90:	mov	r0, #2
   18d94:	bl	126a0 <fcntl@plt>
   18d98:	movw	r3, #1516	; 0x5ec
   18d9c:	movt	r3, #3
   18da0:	str	r4, [r3, #24]
   18da4:	pop	{r4, pc}
   18da8:	push	{r3, lr}
   18dac:	mov	r1, #3
   18db0:	mov	r0, #2
   18db4:	bl	126a0 <fcntl@plt>
   18db8:	mov	r1, #4
   18dbc:	pop	{r3, lr}
   18dc0:	bic	r2, r0, #2048	; 0x800
   18dc4:	mov	r0, #2
   18dc8:	b	126a0 <fcntl@plt>
   18dcc:	movw	r0, #1516	; 0x5ec
   18dd0:	movt	r0, #3
   18dd4:	b	12b50 <pthread_mutex_unlock@plt>
   18dd8:	push	{r4, lr}
   18ddc:	movw	r4, #1516	; 0x5ec
   18de0:	movt	r4, #3
   18de4:	mov	r0, r4
   18de8:	bl	12478 <pthread_mutex_lock@plt>
   18dec:	ldr	r0, [r4, #28]
   18df0:	bl	18810 <__printf_chk@plt+0x5ca8>
   18df4:	mov	r0, r4
   18df8:	pop	{r4, lr}
   18dfc:	b	12b50 <pthread_mutex_unlock@plt>
   18e00:	mov	r4, r0
   18e04:	movw	r0, #1516	; 0x5ec
   18e08:	movt	r0, #3
   18e0c:	bl	12b50 <pthread_mutex_unlock@plt>
   18e10:	mov	r0, r4
   18e14:	bl	12a6c <_Unwind_Resume@plt>
   18e18:	push	{r4, r5, r6, r7, r8, lr}
   18e1c:	mov	r6, r0
   18e20:	movw	r0, #1516	; 0x5ec
   18e24:	movt	r0, #3
   18e28:	mov	r7, r1
   18e2c:	mov	r8, r2
   18e30:	mov	r4, r3
   18e34:	bl	126dc <pthread_mutex_trylock@plt>
   18e38:	cmp	r0, #0
   18e3c:	popne	{r4, r5, r6, r7, r8, pc}
   18e40:	cmp	r4, #0
   18e44:	beq	18ea0 <__printf_chk@plt+0x6338>
   18e48:	vldr	d0, [r4, #8]
   18e4c:	ldr	r0, [r6, #40]	; 0x28
   18e50:	bl	187a8 <__printf_chk@plt+0x5c40>
   18e54:	vldr	d7, [r4, #8]
   18e58:	vldr	d0, [r4]
   18e5c:	ldr	r0, [r6, #64]	; 0x40
   18e60:	vsub.f64	d0, d0, d7
   18e64:	bl	187a8 <__printf_chk@plt+0x5c40>
   18e68:	ldr	r0, [r6, #88]	; 0x58
   18e6c:	vldr	d0, [r4]
   18e70:	bl	187a8 <__printf_chk@plt+0x5c40>
   18e74:	vldr	s14, [r4, #16]
   18e78:	vldr	s15, [pc, #168]	; 18f28 <__printf_chk@plt+0x63c0>
   18e7c:	vcvt.f32.s32	s12, s14
   18e80:	vmul.f32	s12, s12, s15
   18e84:	vcvt.f64.f32	d6, s12
   18e88:	vstr	d6, [r6, #112]	; 0x70
   18e8c:	vldr	s14, [r4, #20]
   18e90:	vcvt.f32.s32	s14, s14
   18e94:	vmul.f32	s14, s14, s15
   18e98:	vcvt.f64.f32	d7, s14
   18e9c:	vstr	d7, [r6, #136]	; 0x88
   18ea0:	cmp	r8, #0
   18ea4:	beq	18eb4 <__printf_chk@plt+0x634c>
   18ea8:	ldr	r3, [r8, #8]
   18eac:	cmp	r3, #0
   18eb0:	bne	18ef0 <__printf_chk@plt+0x6388>
   18eb4:	cmp	r7, #0
   18eb8:	beq	18ed0 <__printf_chk@plt+0x6368>
   18ebc:	ldrd	r2, [r7, #8]
   18ec0:	mov	r1, r7
   18ec4:	ldr	r0, [r6, #232]	; 0xe8
   18ec8:	strd	r2, [r6, #208]	; 0xd0
   18ecc:	bl	18664 <__printf_chk@plt+0x5afc>
   18ed0:	mov	r0, r6
   18ed4:	bl	188b8 <__printf_chk@plt+0x5d50>
   18ed8:	movw	r3, #1516	; 0x5ec
   18edc:	movt	r3, #3
   18ee0:	pop	{r4, r5, r6, r7, r8, lr}
   18ee4:	str	r0, [r3, #28]
   18ee8:	mov	r0, r3
   18eec:	b	12b50 <pthread_mutex_unlock@plt>
   18ef0:	ldrd	r4, [r8, #24]
   18ef4:	add	r1, r8, #16
   18ef8:	ldr	r0, [r6, #184]	; 0xb8
   18efc:	strd	r4, [r6, #160]	; 0xa0
   18f00:	bl	18664 <__printf_chk@plt+0x5afc>
   18f04:	cmp	r7, #0
   18f08:	bne	18ebc <__printf_chk@plt+0x6354>
   18f0c:	b	18ed0 <__printf_chk@plt+0x6368>
   18f10:	mov	r4, r0
   18f14:	movw	r0, #1516	; 0x5ec
   18f18:	movt	r0, #3
   18f1c:	bl	12b50 <pthread_mutex_unlock@plt>
   18f20:	mov	r0, r4
   18f24:	bl	12a6c <_Unwind_Resume@plt>
   18f28:	bcc	fe0dd8ec <__bss_end__@@Base+0xfe0a5b30>
   18f2c:	push	{r1, r2, r3}
   18f30:	push	{r4, r5, r6, lr}
   18f34:	movw	r5, #1516	; 0x5ec
   18f38:	movt	r5, #3
   18f3c:	movw	r4, #1408	; 0x580
   18f40:	movt	r4, #3
   18f44:	sub	sp, sp, #12
   18f48:	ldr	r2, [r5, #24]
   18f4c:	ldr	r3, [r4]
   18f50:	cmp	r2, r0
   18f54:	ldr	r6, [sp, #28]
   18f58:	str	r3, [sp, #4]
   18f5c:	bge	18f80 <__printf_chk@plt+0x6418>
   18f60:	ldr	r2, [sp, #4]
   18f64:	ldr	r3, [r4]
   18f68:	cmp	r2, r3
   18f6c:	bne	18fac <__printf_chk@plt+0x6444>
   18f70:	add	sp, sp, #12
   18f74:	pop	{r4, r5, r6, lr}
   18f78:	add	sp, sp, #12
   18f7c:	bx	lr
   18f80:	mov	r0, r5
   18f84:	bl	12478 <pthread_mutex_lock@plt>
   18f88:	ldr	r0, [r5, #28]
   18f8c:	bl	18810 <__printf_chk@plt+0x5ca8>
   18f90:	add	r1, sp, #32
   18f94:	mov	r0, r6
   18f98:	str	r1, [sp]
   18f9c:	bl	18a70 <__printf_chk@plt+0x5f08>
   18fa0:	mov	r0, r5
   18fa4:	bl	12b50 <pthread_mutex_unlock@plt>
   18fa8:	b	18f60 <__printf_chk@plt+0x63f8>
   18fac:	bl	127e4 <__stack_chk_fail@plt>
   18fb0:	mov	r4, r0
   18fb4:	movw	r0, #1516	; 0x5ec
   18fb8:	movt	r0, #3
   18fbc:	bl	12b50 <pthread_mutex_unlock@plt>
   18fc0:	mov	r0, r4
   18fc4:	bl	12a6c <_Unwind_Resume@plt>
   18fc8:	push	{r4, r5, r6, lr}
   18fcc:	movw	r4, #1516	; 0x5ec
   18fd0:	movt	r4, #3
   18fd4:	mov	r6, r1
   18fd8:	mov	r5, r2
   18fdc:	ldr	r3, [r4, #24]
   18fe0:	cmp	r3, r0
   18fe4:	poplt	{r4, r5, r6, pc}
   18fe8:	mov	r0, r4
   18fec:	bl	12478 <pthread_mutex_lock@plt>
   18ff0:	ldr	r0, [r4, #28]
   18ff4:	bl	18810 <__printf_chk@plt+0x5ca8>
   18ff8:	mov	r0, r6
   18ffc:	mov	r1, r5
   19000:	bl	18a70 <__printf_chk@plt+0x5f08>
   19004:	mov	r0, r4
   19008:	pop	{r4, r5, r6, lr}
   1900c:	b	12b50 <pthread_mutex_unlock@plt>
   19010:	mov	r4, r0
   19014:	movw	r0, #1516	; 0x5ec
   19018:	movt	r0, #3
   1901c:	bl	12b50 <pthread_mutex_unlock@plt>
   19020:	mov	r0, r4
   19024:	bl	12a6c <_Unwind_Resume@plt>
   19028:	push	{r0, r1, r2, r3}
   1902c:	push	{r4, r5, r6, lr}
   19030:	movw	r5, #1408	; 0x580
   19034:	movt	r5, #3
   19038:	movw	r4, #1516	; 0x5ec
   1903c:	movt	r4, #3
   19040:	sub	sp, sp, #8
   19044:	ldr	r3, [r5]
   19048:	mov	r0, r4
   1904c:	ldr	r6, [sp, #24]
   19050:	str	r3, [sp, #4]
   19054:	bl	12478 <pthread_mutex_lock@plt>
   19058:	ldr	r0, [r4, #28]
   1905c:	add	r3, sp, #28
   19060:	str	r3, [sp]
   19064:	bl	18810 <__printf_chk@plt+0x5ca8>
   19068:	mov	r0, r6
   1906c:	ldr	r1, [sp]
   19070:	bl	18a70 <__printf_chk@plt+0x5f08>
   19074:	mov	r0, r4
   19078:	bl	12b50 <pthread_mutex_unlock@plt>
   1907c:	ldr	r2, [sp, #4]
   19080:	ldr	r3, [r5]
   19084:	mov	r1, #1
   19088:	str	r1, [r4, #32]
   1908c:	cmp	r2, r3
   19090:	bne	190a4 <__printf_chk@plt+0x653c>
   19094:	add	sp, sp, #8
   19098:	pop	{r4, r5, r6, lr}
   1909c:	add	sp, sp, #16
   190a0:	bx	lr
   190a4:	bl	127e4 <__stack_chk_fail@plt>
   190a8:	mov	r4, r0
   190ac:	movw	r0, #1516	; 0x5ec
   190b0:	movt	r0, #3
   190b4:	bl	12b50 <pthread_mutex_unlock@plt>
   190b8:	mov	r0, r4
   190bc:	bl	12a6c <_Unwind_Resume@plt>
   190c0:	push	{r4, r5, r6, lr}
   190c4:	movw	r4, #1516	; 0x5ec
   190c8:	movt	r4, #3
   190cc:	mov	r6, r0
   190d0:	mov	r5, r1
   190d4:	mov	r0, r4
   190d8:	bl	12478 <pthread_mutex_lock@plt>
   190dc:	ldr	r0, [r4, #28]
   190e0:	bl	18810 <__printf_chk@plt+0x5ca8>
   190e4:	mov	r0, r6
   190e8:	mov	r1, r5
   190ec:	bl	18a70 <__printf_chk@plt+0x5f08>
   190f0:	mov	r0, r4
   190f4:	bl	12b50 <pthread_mutex_unlock@plt>
   190f8:	mov	r3, #1
   190fc:	str	r3, [r4, #32]
   19100:	pop	{r4, r5, r6, pc}
   19104:	mov	r4, r0
   19108:	movw	r0, #1516	; 0x5ec
   1910c:	movt	r0, #3
   19110:	bl	12b50 <pthread_mutex_unlock@plt>
   19114:	mov	r0, r4
   19118:	bl	12a6c <_Unwind_Resume@plt>
   1911c:	push	{r0, r1, r2, r3}
   19120:	movw	r0, #1552	; 0x610
   19124:	push	{r4, r5, r6, lr}
   19128:	movw	r5, #1408	; 0x580
   1912c:	movt	r5, #3
   19130:	sub	sp, sp, #8
   19134:	movw	r4, #1428	; 0x594
   19138:	movt	r4, #3
   1913c:	ldr	r3, [r5]
   19140:	movt	r0, #3
   19144:	ldr	r6, [sp, #24]
   19148:	str	r3, [sp, #4]
   1914c:	bl	12478 <pthread_mutex_lock@plt>
   19150:	ldr	r1, [r4]
   19154:	mov	r0, #64	; 0x40
   19158:	bl	1291c <fputc@plt>
   1915c:	add	ip, sp, #28
   19160:	mov	r2, r6
   19164:	mov	r1, #1
   19168:	mov	r3, ip
   1916c:	ldr	r0, [r4]
   19170:	str	ip, [sp]
   19174:	bl	128bc <__vfprintf_chk@plt>
   19178:	ldr	r1, [r4]
   1917c:	mov	r0, #10
   19180:	bl	1291c <fputc@plt>
   19184:	movw	r0, #1552	; 0x610
   19188:	movt	r0, #3
   1918c:	bl	12b50 <pthread_mutex_unlock@plt>
   19190:	ldr	r2, [sp, #4]
   19194:	ldr	r3, [r5]
   19198:	cmp	r2, r3
   1919c:	bne	191b0 <__printf_chk@plt+0x6648>
   191a0:	add	sp, sp, #8
   191a4:	pop	{r4, r5, r6, lr}
   191a8:	add	sp, sp, #16
   191ac:	bx	lr
   191b0:	bl	127e4 <__stack_chk_fail@plt>
   191b4:	push	{r0, r1, r2, r3}
   191b8:	movw	r0, #1552	; 0x610
   191bc:	push	{r4, r5, r6, lr}
   191c0:	movw	r5, #1408	; 0x580
   191c4:	movt	r5, #3
   191c8:	sub	sp, sp, #8
   191cc:	movw	r4, #1448	; 0x5a8
   191d0:	movt	r4, #3
   191d4:	ldr	r3, [r5]
   191d8:	movt	r0, #3
   191dc:	ldr	r6, [sp, #24]
   191e0:	str	r3, [sp, #4]
   191e4:	bl	12478 <pthread_mutex_lock@plt>
   191e8:	ldr	r1, [r4]
   191ec:	mov	r0, #64	; 0x40
   191f0:	bl	1291c <fputc@plt>
   191f4:	add	ip, sp, #28
   191f8:	mov	r2, r6
   191fc:	mov	r1, #1
   19200:	mov	r3, ip
   19204:	ldr	r0, [r4]
   19208:	str	ip, [sp]
   1920c:	bl	128bc <__vfprintf_chk@plt>
   19210:	ldr	r1, [r4]
   19214:	mov	r0, #10
   19218:	bl	1291c <fputc@plt>
   1921c:	movw	r0, #1552	; 0x610
   19220:	movt	r0, #3
   19224:	bl	12b50 <pthread_mutex_unlock@plt>
   19228:	ldr	r2, [sp, #4]
   1922c:	ldr	r3, [r5]
   19230:	cmp	r2, r3
   19234:	bne	19248 <__printf_chk@plt+0x66e0>
   19238:	add	sp, sp, #8
   1923c:	pop	{r4, r5, r6, lr}
   19240:	add	sp, sp, #16
   19244:	bx	lr
   19248:	bl	127e4 <__stack_chk_fail@plt>
   1924c:	push	{r4, r5, r6, r7, r8, lr}
   19250:	movw	r7, #1408	; 0x580
   19254:	movt	r7, #3
   19258:	sub	sp, sp, #1168	; 0x490
   1925c:	movw	r5, #1400	; 0x578
   19260:	movw	r6, #1236	; 0x4d4
   19264:	ldr	r3, [r7]
   19268:	movt	r5, #3
   1926c:	movt	r6, #3
   19270:	mov	r8, r0
   19274:	str	r3, [sp, #1164]	; 0x48c
   19278:	mov	r3, #0
   1927c:	strb	r3, [sp, #1160]	; 0x488
   19280:	add	r2, sp, #16
   19284:	mov	r0, #0
   19288:	add	r1, sp, #4
   1928c:	add	r2, r2, #116	; 0x74
   19290:	mov	r3, r0
   19294:	strb	r0, [sp, #136]	; 0x88
   19298:	str	r3, [r1, #4]!
   1929c:	cmp	r1, r2
   192a0:	mov	r4, #0
   192a4:	bne	19298 <__printf_chk@plt+0x6730>
   192a8:	ldr	ip, [sp, #8]
   192ac:	mov	r3, r4
   192b0:	mov	r2, r4
   192b4:	mov	r0, #1
   192b8:	str	r4, [sp]
   192bc:	add	r1, sp, #8
   192c0:	orr	ip, ip, r0
   192c4:	str	ip, [sp, #8]
   192c8:	bl	12868 <select@plt>
   192cc:	mov	r1, #1024	; 0x400
   192d0:	ldr	r2, [r5]
   192d4:	add	r0, sp, #136	; 0x88
   192d8:	bl	12904 <fgets@plt>
   192dc:	add	r0, sp, #136	; 0x88
   192e0:	bl	1297c <strlen@plt>
   192e4:	add	r2, sp, #1168	; 0x490
   192e8:	add	r3, r2, r0
   192ec:	ldr	r0, [pc, #624]	; 19564 <__printf_chk@plt+0x69fc>
   192f0:	strb	r4, [r3, #-1033]	; 0xfffffbf7
   192f4:	bl	12478 <pthread_mutex_lock@plt>
   192f8:	add	r0, sp, #136	; 0x88
   192fc:	movw	r1, #57756	; 0xe19c
   19300:	mov	r2, #1
   19304:	movt	r1, #1
   19308:	bl	12844 <strncasecmp@plt>
   1930c:	subs	r4, r0, #0
   19310:	bne	19378 <__printf_chk@plt+0x6810>
   19314:	mov	r1, #32
   19318:	add	r0, sp, #136	; 0x88
   1931c:	bl	12b44 <strchr@plt>
   19320:	subs	r1, r0, #0
   19324:	beq	19458 <__printf_chk@plt+0x68f0>
   19328:	add	r1, r1, #1
   1932c:	mov	r0, r8
   19330:	bl	12760 <strcpy@plt>
   19334:	mov	r3, #3
   19338:	str	r3, [r6]
   1933c:	ldr	r0, [pc, #548]	; 19568 <__printf_chk@plt+0x6a00>
   19340:	bl	12910 <sem_post@plt>
   19344:	ldr	r0, [pc, #536]	; 19564 <__printf_chk@plt+0x69fc>
   19348:	bl	12b50 <pthread_mutex_unlock@plt>
   1934c:	ldr	r0, [pc, #536]	; 1956c <__printf_chk@plt+0x6a04>
   19350:	bl	12b38 <sem_wait@plt>
   19354:	cmp	r4, #0
   19358:	beq	19280 <__printf_chk@plt+0x6718>
   1935c:	ldr	r2, [sp, #1164]	; 0x48c
   19360:	mov	r0, #0
   19364:	ldr	r3, [r7]
   19368:	cmp	r2, r3
   1936c:	bne	19560 <__printf_chk@plt+0x69f8>
   19370:	add	sp, sp, #1168	; 0x490
   19374:	pop	{r4, r5, r6, r7, r8, pc}
   19378:	movw	r1, #57760	; 0xe1a0
   1937c:	add	r0, sp, #136	; 0x88
   19380:	movt	r1, #1
   19384:	mov	r2, #1
   19388:	bl	12844 <strncasecmp@plt>
   1938c:	cmp	r0, #0
   19390:	bne	193b8 <__printf_chk@plt+0x6850>
   19394:	ldr	r2, [r6]
   19398:	movw	r3, #1236	; 0x4d4
   1939c:	movt	r3, #3
   193a0:	cmp	r2, #0
   193a4:	bne	19498 <__printf_chk@plt+0x6930>
   193a8:	mov	r4, r2
   193ac:	mov	r2, #2
   193b0:	str	r2, [r3]
   193b4:	b	1933c <__printf_chk@plt+0x67d4>
   193b8:	movw	r1, #57764	; 0xe1a4
   193bc:	add	r0, sp, #136	; 0x88
   193c0:	movt	r1, #1
   193c4:	mov	r2, #1
   193c8:	bl	12844 <strncasecmp@plt>
   193cc:	cmp	r0, #0
   193d0:	bne	1946c <__printf_chk@plt+0x6904>
   193d4:	mov	r1, #32
   193d8:	add	r0, sp, #136	; 0x88
   193dc:	bl	12b44 <strchr@plt>
   193e0:	subs	r1, r0, #0
   193e4:	beq	193f8 <__printf_chk@plt+0x6890>
   193e8:	movw	r0, #31888	; 0x7c90
   193ec:	add	r1, r1, #1
   193f0:	movt	r0, #3
   193f4:	bl	16e88 <__printf_chk@plt+0x4320>
   193f8:	ldr	r0, [pc, #356]	; 19564 <__printf_chk@plt+0x69fc>
   193fc:	bl	12b50 <pthread_mutex_unlock@plt>
   19400:	b	19280 <__printf_chk@plt+0x6718>
   19404:	movw	r1, #56100	; 0xdb24
   19408:	add	r0, sp, #136	; 0x88
   1940c:	movt	r1, #1
   19410:	mov	r2, #1
   19414:	bl	12844 <strncasecmp@plt>
   19418:	cmp	r0, #0
   1941c:	beq	194ac <__printf_chk@plt+0x6944>
   19420:	movw	r1, #57768	; 0xe1a8
   19424:	add	r0, sp, #136	; 0x88
   19428:	movt	r1, #1
   1942c:	mov	r2, #1
   19430:	bl	12844 <strncasecmp@plt>
   19434:	cmp	r0, #0
   19438:	beq	194cc <__printf_chk@plt+0x6964>
   1943c:	movw	r1, #58372	; 0xe404
   19440:	add	r0, sp, #136	; 0x88
   19444:	movt	r1, #1
   19448:	mov	r2, #1
   1944c:	bl	12844 <strncasecmp@plt>
   19450:	cmp	r0, #0
   19454:	beq	194bc <__printf_chk@plt+0x6954>
   19458:	movw	r0, #58376	; 0xe408
   1945c:	add	r1, sp, #136	; 0x88
   19460:	movt	r0, #1
   19464:	bl	1911c <__printf_chk@plt+0x65b4>
   19468:	b	193f8 <__printf_chk@plt+0x6890>
   1946c:	movw	r1, #59228	; 0xe75c
   19470:	add	r0, sp, #136	; 0x88
   19474:	movt	r1, #1
   19478:	mov	r2, #1
   1947c:	bl	12844 <strncasecmp@plt>
   19480:	cmp	r0, #0
   19484:	bne	19404 <__printf_chk@plt+0x689c>
   19488:	mov	r3, #1
   1948c:	mov	r4, r0
   19490:	str	r3, [r6]
   19494:	b	1933c <__printf_chk@plt+0x67d4>
   19498:	cmp	r2, #2
   1949c:	streq	r0, [r3]
   194a0:	moveq	r4, r0
   194a4:	movne	r4, r0
   194a8:	b	1933c <__printf_chk@plt+0x67d4>
   194ac:	mov	r3, #3
   194b0:	mov	r4, r0
   194b4:	str	r3, [r6]
   194b8:	b	1933c <__printf_chk@plt+0x67d4>
   194bc:	mov	r3, #4
   194c0:	mov	r4, #1
   194c4:	str	r3, [r6]
   194c8:	b	1933c <__printf_chk@plt+0x67d4>
   194cc:	movw	r0, #57772	; 0xe1ac
   194d0:	movt	r0, #1
   194d4:	bl	191b4 <__printf_chk@plt+0x664c>
   194d8:	movw	r0, #57832	; 0xe1e8
   194dc:	movt	r0, #1
   194e0:	bl	191b4 <__printf_chk@plt+0x664c>
   194e4:	movw	r0, #57892	; 0xe224
   194e8:	movt	r0, #1
   194ec:	bl	191b4 <__printf_chk@plt+0x664c>
   194f0:	movw	r0, #57952	; 0xe260
   194f4:	movt	r0, #1
   194f8:	bl	191b4 <__printf_chk@plt+0x664c>
   194fc:	movw	r0, #58012	; 0xe29c
   19500:	movt	r0, #1
   19504:	bl	191b4 <__printf_chk@plt+0x664c>
   19508:	movw	r0, #58072	; 0xe2d8
   1950c:	movt	r0, #1
   19510:	bl	191b4 <__printf_chk@plt+0x664c>
   19514:	movw	r0, #58132	; 0xe314
   19518:	movt	r0, #1
   1951c:	bl	191b4 <__printf_chk@plt+0x664c>
   19520:	movw	r0, #58192	; 0xe350
   19524:	movt	r0, #1
   19528:	bl	191b4 <__printf_chk@plt+0x664c>
   1952c:	movw	r0, #58252	; 0xe38c
   19530:	movt	r0, #1
   19534:	bl	191b4 <__printf_chk@plt+0x664c>
   19538:	movw	r0, #57892	; 0xe224
   1953c:	movt	r0, #1
   19540:	bl	191b4 <__printf_chk@plt+0x664c>
   19544:	movw	r0, #58312	; 0xe3c8
   19548:	movt	r0, #1
   1954c:	bl	191b4 <__printf_chk@plt+0x664c>
   19550:	movw	r0, #57772	; 0xe1ac
   19554:	movt	r0, #1
   19558:	bl	191b4 <__printf_chk@plt+0x664c>
   1955c:	b	193f8 <__printf_chk@plt+0x6890>
   19560:	bl	127e4 <__stack_chk_fail@plt>
   19564:	andeq	r0, r3, r8, lsr #12
   19568:	andeq	r0, r3, r0, asr #12
   1956c:	andeq	r0, r3, r0, asr r6
   19570:	push	{r4, r5, r6, lr}
   19574:	movw	r6, #1408	; 0x580
   19578:	movt	r6, #3
   1957c:	movw	r3, #1448	; 0x5a8
   19580:	movt	r3, #3
   19584:	sub	sp, sp, #1040	; 0x410
   19588:	ldr	r2, [r6]
   1958c:	ldr	r0, [r3]
   19590:	str	r2, [sp, #1036]	; 0x40c
   19594:	bl	126e8 <setlinebuf@plt>
   19598:	movw	r0, #58400	; 0xe420
   1959c:	movt	r0, #1
   195a0:	bl	191b4 <__printf_chk@plt+0x664c>
   195a4:	mov	r1, #0
   195a8:	ldr	r0, [pc, #352]	; 19710 <__printf_chk@plt+0x6ba8>
   195ac:	bl	12490 <pthread_mutex_init@plt>
   195b0:	mov	r1, #0
   195b4:	mov	r2, r1
   195b8:	ldr	r0, [pc, #340]	; 19714 <__printf_chk@plt+0x6bac>
   195bc:	bl	1282c <sem_init@plt>
   195c0:	mov	r1, #0
   195c4:	mov	r2, r1
   195c8:	ldr	r0, [pc, #328]	; 19718 <__printf_chk@plt+0x6bb0>
   195cc:	bl	1282c <sem_init@plt>
   195d0:	mov	r1, #0
   195d4:	add	r0, sp, #4
   195d8:	movw	r2, #37452	; 0x924c
   195dc:	add	r3, sp, #8
   195e0:	movt	r2, #1
   195e4:	bl	12a18 <pthread_create@plt>
   195e8:	subs	r1, r0, #0
   195ec:	bne	196fc <__printf_chk@plt+0x6b94>
   195f0:	movw	r5, #1236	; 0x4d4
   195f4:	ldr	r0, [pc, #276]	; 19710 <__printf_chk@plt+0x6ba8>
   195f8:	movt	r5, #3
   195fc:	bl	12478 <pthread_mutex_lock@plt>
   19600:	ldr	r0, [pc, #264]	; 19710 <__printf_chk@plt+0x6ba8>
   19604:	ldr	r4, [r5]
   19608:	bl	12b50 <pthread_mutex_unlock@plt>
   1960c:	cmp	r4, #4
   19610:	beq	19698 <__printf_chk@plt+0x6b30>
   19614:	cmp	r4, #3
   19618:	bne	196cc <__printf_chk@plt+0x6b64>
   1961c:	add	r1, sp, #8
   19620:	movw	r0, #58480	; 0xe470
   19624:	movt	r0, #1
   19628:	bl	191b4 <__printf_chk@plt+0x664c>
   1962c:	movw	r0, #58488	; 0xe478
   19630:	movt	r0, #1
   19634:	bl	191b4 <__printf_chk@plt+0x664c>
   19638:	movw	r0, #58528	; 0xe4a0
   1963c:	movt	r0, #1
   19640:	bl	191b4 <__printf_chk@plt+0x664c>
   19644:	ldr	r0, [pc, #196]	; 19710 <__printf_chk@plt+0x6ba8>
   19648:	bl	12478 <pthread_mutex_lock@plt>
   1964c:	ldr	r0, [pc, #196]	; 19718 <__printf_chk@plt+0x6bb0>
   19650:	mov	r3, #0
   19654:	str	r3, [r5]
   19658:	bl	12910 <sem_post@plt>
   1965c:	ldr	r0, [pc, #172]	; 19710 <__printf_chk@plt+0x6ba8>
   19660:	bl	12b50 <pthread_mutex_unlock@plt>
   19664:	ldr	r0, [pc, #164]	; 19710 <__printf_chk@plt+0x6ba8>
   19668:	bl	12478 <pthread_mutex_lock@plt>
   1966c:	ldr	r0, [pc, #156]	; 19710 <__printf_chk@plt+0x6ba8>
   19670:	bl	12b50 <pthread_mutex_unlock@plt>
   19674:	add	r0, sp, #8
   19678:	bl	172a0 <__printf_chk@plt+0x4738>
   1967c:	ldr	r0, [pc, #140]	; 19710 <__printf_chk@plt+0x6ba8>
   19680:	bl	12478 <pthread_mutex_lock@plt>
   19684:	ldr	r4, [r5]
   19688:	ldr	r0, [pc, #128]	; 19710 <__printf_chk@plt+0x6ba8>
   1968c:	bl	12b50 <pthread_mutex_unlock@plt>
   19690:	cmp	r4, #4
   19694:	bne	19614 <__printf_chk@plt+0x6aac>
   19698:	movw	r0, #58476	; 0xe46c
   1969c:	movt	r0, #1
   196a0:	bl	191b4 <__printf_chk@plt+0x664c>
   196a4:	ldr	r0, [pc, #104]	; 19714 <__printf_chk@plt+0x6bac>
   196a8:	bl	12454 <sem_destroy@plt>
   196ac:	ldr	r0, [pc, #100]	; 19718 <__printf_chk@plt+0x6bb0>
   196b0:	bl	12454 <sem_destroy@plt>
   196b4:	ldr	r2, [sp, #1036]	; 0x40c
   196b8:	ldr	r3, [r6]
   196bc:	cmp	r2, r3
   196c0:	bne	1970c <__printf_chk@plt+0x6ba4>
   196c4:	add	sp, sp, #1040	; 0x410
   196c8:	pop	{r4, r5, r6, pc}
   196cc:	ldr	r0, [pc, #64]	; 19714 <__printf_chk@plt+0x6bac>
   196d0:	bl	12b38 <sem_wait@plt>
   196d4:	ldr	r0, [pc, #52]	; 19710 <__printf_chk@plt+0x6ba8>
   196d8:	bl	12478 <pthread_mutex_lock@plt>
   196dc:	ldr	r4, [r5]
   196e0:	ldr	r0, [pc, #40]	; 19710 <__printf_chk@plt+0x6ba8>
   196e4:	bl	12b50 <pthread_mutex_unlock@plt>
   196e8:	cmp	r4, #3
   196ec:	beq	1961c <__printf_chk@plt+0x6ab4>
   196f0:	ldr	r0, [pc, #32]	; 19718 <__printf_chk@plt+0x6bb0>
   196f4:	bl	12910 <sem_post@plt>
   196f8:	b	1960c <__printf_chk@plt+0x6aa4>
   196fc:	movw	r0, #58436	; 0xe444
   19700:	movt	r0, #1
   19704:	bl	1911c <__printf_chk@plt+0x65b4>
   19708:	b	196b4 <__printf_chk@plt+0x6b4c>
   1970c:	bl	127e4 <__stack_chk_fail@plt>
   19710:	andeq	r0, r3, r8, lsr #12
   19714:	andeq	r0, r3, r0, asr #12
   19718:	andeq	r0, r3, r0, asr r6
   1971c:	push	{r4, r5, r6, lr}
   19720:	movw	r5, #1236	; 0x4d4
   19724:	movt	r5, #3
   19728:	ldr	r0, [pc, #168]	; 197d8 <__printf_chk@plt+0x6c70>
   1972c:	bl	12478 <pthread_mutex_lock@plt>
   19730:	ldr	r0, [pc, #160]	; 197d8 <__printf_chk@plt+0x6c70>
   19734:	ldr	r4, [r5]
   19738:	bl	12b50 <pthread_mutex_unlock@plt>
   1973c:	cmp	r4, #2
   19740:	beq	19790 <__printf_chk@plt+0x6c28>
   19744:	subs	r3, r4, #1
   19748:	rsbs	r6, r3, #0
   1974c:	adcs	r6, r6, r3
   19750:	subs	r2, r4, #4
   19754:	rsbs	r5, r2, #0
   19758:	adcs	r5, r5, r2
   1975c:	orrs	r3, r5, r6
   19760:	bne	19780 <__printf_chk@plt+0x6c18>
   19764:	cmp	r4, #3
   19768:	movne	r0, r6
   1976c:	orreq	r0, r6, #1
   19770:	cmp	r0, #0
   19774:	moveq	r0, r5
   19778:	movne	r0, #1
   1977c:	pop	{r4, r5, r6, pc}
   19780:	movw	r0, #58536	; 0xe4a8
   19784:	movt	r0, #1
   19788:	bl	191b4 <__printf_chk@plt+0x664c>
   1978c:	b	19764 <__printf_chk@plt+0x6bfc>
   19790:	movw	r0, #58532	; 0xe4a4
   19794:	movt	r0, #1
   19798:	bl	191b4 <__printf_chk@plt+0x664c>
   1979c:	ldr	r0, [pc, #56]	; 197dc <__printf_chk@plt+0x6c74>
   197a0:	bl	12910 <sem_post@plt>
   197a4:	ldr	r0, [pc, #52]	; 197e0 <__printf_chk@plt+0x6c78>
   197a8:	bl	12b38 <sem_wait@plt>
   197ac:	ldr	r0, [pc, #36]	; 197d8 <__printf_chk@plt+0x6c70>
   197b0:	bl	12478 <pthread_mutex_lock@plt>
   197b4:	ldr	r4, [r5]
   197b8:	ldr	r0, [pc, #24]	; 197d8 <__printf_chk@plt+0x6c70>
   197bc:	bl	12b50 <pthread_mutex_unlock@plt>
   197c0:	cmp	r4, #2
   197c4:	beq	1979c <__printf_chk@plt+0x6c34>
   197c8:	movw	r0, #58528	; 0xe4a0
   197cc:	movt	r0, #1
   197d0:	bl	191b4 <__printf_chk@plt+0x664c>
   197d4:	b	19744 <__printf_chk@plt+0x6bdc>
   197d8:	andeq	r0, r3, r8, lsr #12
   197dc:	andeq	r0, r3, r0, asr r6
   197e0:	andeq	r0, r3, r0, asr #12
   197e4:	vsub.f64	d1, d1, d0
   197e8:	movw	r0, #58540	; 0xe4ac
   197ec:	push	{lr}		; (str lr, [sp, #-4]!)
   197f0:	movt	r0, #1
   197f4:	sub	sp, sp, #12
   197f8:	vmov	r2, r3, d0
   197fc:	vstr	d1, [sp]
   19800:	bl	191b4 <__printf_chk@plt+0x664c>
   19804:	add	sp, sp, #12
   19808:	pop	{pc}		; (ldr pc, [sp], #4)
   1980c:	push	{r4, r5, r6, lr}
   19810:	movw	r5, #1240	; 0x4d8
   19814:	movt	r5, #3
   19818:	mov	r6, r0
   1981c:	ldr	r4, [r5]
   19820:	cmp	r4, #0
   19824:	bne	19838 <__printf_chk@plt+0x6cd0>
   19828:	b	1984c <__printf_chk@plt+0x6ce4>
   1982c:	ldr	r4, [r5, #4]!
   19830:	cmp	r4, #0
   19834:	beq	1984c <__printf_chk@plt+0x6ce4>
   19838:	mov	r0, r6
   1983c:	ldr	r1, [r4]
   19840:	bl	12a24 <strcmp@plt>
   19844:	cmp	r0, #0
   19848:	bne	1982c <__printf_chk@plt+0x6cc4>
   1984c:	mov	r0, r4
   19850:	pop	{r4, r5, r6, pc}
   19854:	push	{r3, r4, r5, r6, r7, lr}
   19858:	movw	r7, #1240	; 0x4d8
   1985c:	movt	r7, #3
   19860:	mov	r6, r0
   19864:	ldr	r0, [r7]
   19868:	cmp	r0, #0
   1986c:	popeq	{r3, r4, r5, r6, r7, pc}
   19870:	mov	r5, r7
   19874:	mov	r4, #0
   19878:	b	1988c <__printf_chk@plt+0x6d24>
   1987c:	ldr	r0, [r5, #4]!
   19880:	add	r4, r4, #1
   19884:	cmp	r0, #0
   19888:	popeq	{r3, r4, r5, r6, r7, pc}
   1988c:	ldr	r3, [r0, #4]
   19890:	mov	r0, r6
   19894:	blx	r3
   19898:	cmp	r0, #0
   1989c:	beq	1987c <__printf_chk@plt+0x6d14>
   198a0:	ldr	r0, [r7, r4, lsl #2]
   198a4:	pop	{r3, r4, r5, r6, r7, pc}
   198a8:	push	{r3, r4, r5, lr}
   198ac:	mov	r4, r0
   198b0:	mov	r0, #56	; 0x38
   198b4:	bl	12958 <malloc@plt>
   198b8:	subs	r5, r0, #0
   198bc:	beq	198ec <__printf_chk@plt+0x6d84>
   198c0:	ldm	r4!, {r0, r1, r2, r3}
   198c4:	mov	ip, r5
   198c8:	stmia	ip!, {r0, r1, r2, r3}
   198cc:	ldm	r4!, {r0, r1, r2, r3}
   198d0:	stmia	ip!, {r0, r1, r2, r3}
   198d4:	ldm	r4!, {r0, r1, r2, r3}
   198d8:	stmia	ip!, {r0, r1, r2, r3}
   198dc:	ldm	r4, {r0, r1}
   198e0:	stm	ip, {r0, r1}
   198e4:	mov	r0, r5
   198e8:	pop	{r3, r4, r5, pc}
   198ec:	movw	r3, #1428	; 0x594
   198f0:	movt	r3, #3
   198f4:	mov	r2, #5
   198f8:	movw	r1, #58556	; 0xe4bc
   198fc:	movt	r1, #1
   19900:	ldr	r4, [r3]
   19904:	bl	127f0 <dcgettext@plt>
   19908:	mov	r1, #1
   1990c:	mov	r2, r0
   19910:	mov	r0, r4
   19914:	bl	12658 <__fprintf_chk@plt>
   19918:	mov	r0, #1
   1991c:	bl	12598 <exit@plt>
   19920:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19924:	movw	r7, #1252	; 0x4e4
   19928:	movt	r7, #3
   1992c:	mov	r8, r0
   19930:	mov	r9, r1
   19934:	ldr	r4, [r7]
   19938:	cmp	r4, #0
   1993c:	beq	199b8 <__printf_chk@plt+0x6e50>
   19940:	mov	r5, #0
   19944:	b	19958 <__printf_chk@plt+0x6df0>
   19948:	add	r5, r5, #1
   1994c:	ldr	r4, [r7, r5, lsl #3]
   19950:	cmp	r4, #0
   19954:	beq	199bc <__printf_chk@plt+0x6e54>
   19958:	mov	r0, r4
   1995c:	bl	1297c <strlen@plt>
   19960:	mov	r1, r8
   19964:	mov	r6, r0
   19968:	mov	r0, r4
   1996c:	mov	r2, r6
   19970:	bl	12844 <strncasecmp@plt>
   19974:	cmp	r0, #0
   19978:	bne	19948 <__printf_chk@plt+0x6de0>
   1997c:	add	r5, r7, r5, lsl #3
   19980:	str	r6, [r9]
   19984:	ldr	r5, [r5, #4]
   19988:	mov	r0, r5
   1998c:	bl	1297c <strlen@plt>
   19990:	add	r4, r0, #1
   19994:	mov	r0, r4
   19998:	bl	12958 <malloc@plt>
   1999c:	subs	r6, r0, #0
   199a0:	beq	19a84 <__printf_chk@plt+0x6f1c>
   199a4:	mov	r1, r5
   199a8:	mov	r2, r4
   199ac:	bl	12934 <memcpy@plt>
   199b0:	mov	r0, r6
   199b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   199b8:	mov	r5, r4
   199bc:	ldrb	r3, [r8]
   199c0:	cmp	r3, #0
   199c4:	beq	19a74 <__printf_chk@plt+0x6f0c>
   199c8:	cmp	r3, #61	; 0x3d
   199cc:	beq	19a74 <__printf_chk@plt+0x6f0c>
   199d0:	mov	r2, r8
   199d4:	mov	r4, #0
   199d8:	b	199e4 <__printf_chk@plt+0x6e7c>
   199dc:	cmp	r3, #61	; 0x3d
   199e0:	beq	199f4 <__printf_chk@plt+0x6e8c>
   199e4:	ldrb	r3, [r2, #1]!
   199e8:	add	r4, r4, #1
   199ec:	cmp	r3, #0
   199f0:	bne	199dc <__printf_chk@plt+0x6e74>
   199f4:	add	r3, r4, #1
   199f8:	add	r0, r4, #2
   199fc:	str	r3, [r9]
   19a00:	bl	12958 <malloc@plt>
   19a04:	subs	r5, r0, #0
   19a08:	beq	19a84 <__printf_chk@plt+0x6f1c>
   19a0c:	mov	r2, r4
   19a10:	mov	r1, r8
   19a14:	bl	12a54 <strncpy@plt>
   19a18:	movw	r3, #55792	; 0xd9f0
   19a1c:	movt	r3, #1
   19a20:	ldrh	r3, [r3]
   19a24:	strh	r3, [r5, r4]
   19a28:	bl	12718 <__ctype_toupper_loc@plt>
   19a2c:	ldrsb	r3, [r5]
   19a30:	cmp	r4, #1
   19a34:	ldr	r2, [r0]
   19a38:	ldr	r3, [r2, r3, lsl #2]
   19a3c:	strb	r3, [r5]
   19a40:	ble	19a6c <__printf_chk@plt+0x6f04>
   19a44:	bl	12acc <__ctype_tolower_loc@plt>
   19a48:	mov	r2, r5
   19a4c:	mov	r3, #1
   19a50:	ldrsb	ip, [r2, #1]
   19a54:	add	r3, r3, #1
   19a58:	ldr	r1, [r0]
   19a5c:	cmp	r4, r3
   19a60:	ldr	r1, [r1, ip, lsl #2]
   19a64:	strb	r1, [r2, #1]!
   19a68:	bne	19a50 <__printf_chk@plt+0x6ee8>
   19a6c:	mov	r0, r5
   19a70:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19a74:	mov	r3, #0
   19a78:	add	r5, r7, r5, lsl #3
   19a7c:	str	r3, [r9]
   19a80:	b	19984 <__printf_chk@plt+0x6e1c>
   19a84:	movw	r3, #1428	; 0x594
   19a88:	movt	r3, #3
   19a8c:	mov	r2, #5
   19a90:	movw	r1, #56148	; 0xdb54
   19a94:	movt	r1, #1
   19a98:	ldr	r4, [r3]
   19a9c:	bl	127f0 <dcgettext@plt>
   19aa0:	mov	r1, #1
   19aa4:	mov	r2, r0
   19aa8:	mov	r0, r4
   19aac:	bl	12658 <__fprintf_chk@plt>
   19ab0:	mov	r0, #1
   19ab4:	bl	12598 <exit@plt>
   19ab8:	push	{r4, r5, r6, r7, r8, lr}
   19abc:	movw	r4, #1408	; 0x580
   19ac0:	movt	r4, #3
   19ac4:	sub	sp, sp, #24
   19ac8:	subs	r5, r1, #0
   19acc:	mov	r8, r2
   19ad0:	ldr	r3, [r4]
   19ad4:	mov	r7, r0
   19ad8:	str	r3, [sp, #20]
   19adc:	beq	19b44 <__printf_chk@plt+0x6fdc>
   19ae0:	ldr	r3, [r5, #4]
   19ae4:	cmp	r3, #0
   19ae8:	beq	19b44 <__printf_chk@plt+0x6fdc>
   19aec:	add	r1, sp, #16
   19af0:	bl	19920 <__printf_chk@plt+0x6db8>
   19af4:	add	r1, sp, #12
   19af8:	mov	r6, r0
   19afc:	ldr	r0, [sp, #16]
   19b00:	add	r0, r7, r0
   19b04:	bl	1b72c <__printf_chk@plt+0x8bc4>
   19b08:	cmp	r0, #0
   19b0c:	blt	19b5c <__printf_chk@plt+0x6ff4>
   19b10:	ldr	ip, [sp, #12]
   19b14:	mov	r0, r8
   19b18:	movw	r2, #55576	; 0xd918
   19b1c:	mov	r1, #1
   19b20:	movt	r2, #1
   19b24:	mov	r3, r6
   19b28:	str	ip, [sp]
   19b2c:	ldr	ip, [r5, #4]
   19b30:	blx	ip
   19b34:	ldr	r0, [sp, #12]
   19b38:	bl	12520 <free@plt>
   19b3c:	mov	r0, r6
   19b40:	bl	12520 <free@plt>
   19b44:	ldr	r2, [sp, #20]
   19b48:	ldr	r3, [r4]
   19b4c:	cmp	r2, r3
   19b50:	bne	19b88 <__printf_chk@plt+0x7020>
   19b54:	add	sp, sp, #24
   19b58:	pop	{r4, r5, r6, r7, r8, pc}
   19b5c:	ldr	r3, [sp, #16]
   19b60:	mov	r0, r8
   19b64:	movw	r2, #55576	; 0xd918
   19b68:	mov	r1, #1
   19b6c:	add	r7, r7, r3
   19b70:	movt	r2, #1
   19b74:	str	r7, [sp]
   19b78:	mov	r3, r6
   19b7c:	ldr	ip, [r5, #4]
   19b80:	blx	ip
   19b84:	b	19b3c <__printf_chk@plt+0x6fd4>
   19b88:	bl	127e4 <__stack_chk_fail@plt>
   19b8c:	andeq	r0, r0, r0
   19b90:	mov	r0, #0
   19b94:	bx	lr
   19b98:	ldr	r0, [r3]
   19b9c:	push	{r3, r4, r5, lr}
   19ba0:	mov	r5, r2
   19ba4:	ldr	ip, [r0, #4]
   19ba8:	mov	r2, #1
   19bac:	ldr	r4, [r3, #64]	; 0x40
   19bb0:	ldr	r3, [r5]
   19bb4:	ldr	ip, [ip, #16]
   19bb8:	blx	ip
   19bbc:	ldr	r2, [r4, #36]	; 0x24
   19bc0:	mov	r3, r0
   19bc4:	rsbs	r0, r0, #1
   19bc8:	str	r3, [r5]
   19bcc:	add	r3, r2, r3
   19bd0:	movcc	r0, #0
   19bd4:	str	r3, [r4, #36]	; 0x24
   19bd8:	pop	{r3, r4, r5, pc}
   19bdc:	bx	lr
   19be0:	ldr	r3, [r1, #64]	; 0x40
   19be4:	ldr	r0, [r3, #52]	; 0x34
   19be8:	bx	lr
   19bec:	push	{r4, lr}
   19bf0:	movw	r4, #1408	; 0x580
   19bf4:	movt	r4, #3
   19bf8:	ldr	ip, [r0, #4]
   19bfc:	sub	sp, sp, #8
   19c00:	mov	r2, #1
   19c04:	ldr	lr, [r4]
   19c08:	mov	r3, #4
   19c0c:	mov	r1, sp
   19c10:	ldr	ip, [ip, #12]
   19c14:	str	lr, [sp, #4]
   19c18:	blx	ip
   19c1c:	cmp	r0, #3
   19c20:	movle	r0, #0
   19c24:	ble	19c44 <__printf_chk@plt+0x70dc>
   19c28:	mov	r0, sp
   19c2c:	movw	r1, #58884	; 0xe604
   19c30:	mov	r2, #4
   19c34:	movt	r1, #1
   19c38:	bl	12a84 <memcmp@plt>
   19c3c:	rsbs	r0, r0, #1
   19c40:	movcc	r0, #0
   19c44:	ldr	r2, [sp, #4]
   19c48:	ldr	r3, [r4]
   19c4c:	cmp	r2, r3
   19c50:	bne	19c5c <__printf_chk@plt+0x70f4>
   19c54:	add	sp, sp, #8
   19c58:	pop	{r4, pc}
   19c5c:	bl	127e4 <__stack_chk_fail@plt>
   19c60:	push	{r4, r5, lr}
   19c64:	movw	r4, #1408	; 0x580
   19c68:	movt	r4, #3
   19c6c:	ldr	ip, [r0, #4]
   19c70:	sub	sp, sp, #44	; 0x2c
   19c74:	mov	r2, #1
   19c78:	ldr	lr, [r4]
   19c7c:	mov	r3, #36	; 0x24
   19c80:	mov	r1, sp
   19c84:	ldr	ip, [ip, #12]
   19c88:	str	lr, [sp, #36]	; 0x24
   19c8c:	blx	ip
   19c90:	cmp	r0, #35	; 0x23
   19c94:	ble	19cb4 <__printf_chk@plt+0x714c>
   19c98:	mov	r0, sp
   19c9c:	movw	r1, #58892	; 0xe60c
   19ca0:	mov	r2, #4
   19ca4:	movt	r1, #1
   19ca8:	bl	12a84 <memcmp@plt>
   19cac:	subs	r5, r0, #0
   19cb0:	beq	19cd4 <__printf_chk@plt+0x716c>
   19cb4:	mov	r5, #0
   19cb8:	ldr	r2, [sp, #36]	; 0x24
   19cbc:	mov	r0, r5
   19cc0:	ldr	r3, [r4]
   19cc4:	cmp	r2, r3
   19cc8:	bne	19d3c <__printf_chk@plt+0x71d4>
   19ccc:	add	sp, sp, #44	; 0x2c
   19cd0:	pop	{r4, r5, pc}
   19cd4:	movw	r1, #58884	; 0xe604
   19cd8:	add	r0, sp, #28
   19cdc:	movt	r1, #1
   19ce0:	mov	r2, #4
   19ce4:	bl	12a84 <memcmp@plt>
   19ce8:	cmp	r0, #0
   19cec:	beq	19d34 <__printf_chk@plt+0x71cc>
   19cf0:	ldrsb	r3, [sp, #28]
   19cf4:	cmp	r3, #127	; 0x7f
   19cf8:	bne	19cb8 <__printf_chk@plt+0x7150>
   19cfc:	movw	r1, #58900	; 0xe614
   19d00:	add	r0, sp, #29
   19d04:	movt	r1, #1
   19d08:	mov	r2, #4
   19d0c:	bl	12a84 <memcmp@plt>
   19d10:	cmp	r0, #0
   19d14:	bne	19cb8 <__printf_chk@plt+0x7150>
   19d18:	ldrsb	r3, [sp, #33]	; 0x21
   19d1c:	cmp	r3, #1
   19d20:	bne	19cb8 <__printf_chk@plt+0x7150>
   19d24:	ldrsb	r5, [sp, #34]	; 0x22
   19d28:	rsbs	r5, r5, #1
   19d2c:	movcc	r5, #0
   19d30:	b	19cb8 <__printf_chk@plt+0x7150>
   19d34:	mov	r5, #1
   19d38:	b	19cb8 <__printf_chk@plt+0x7150>
   19d3c:	bl	127e4 <__stack_chk_fail@plt>
   19d40:	ldr	r3, [r1]
   19d44:	push	{r4, lr}
   19d48:	cmp	r3, #0
   19d4c:	ldr	r4, [r2, #64]	; 0x40
   19d50:	beq	19d6c <__printf_chk@plt+0x7204>
   19d54:	cmp	r3, #4
   19d58:	popne	{r4, pc}
   19d5c:	mov	r0, r1
   19d60:	bl	12628 <FLAC__metadata_object_clone@plt>
   19d64:	str	r0, [r4, #44]	; 0x2c
   19d68:	pop	{r4, pc}
   19d6c:	ldr	r3, [r1, #48]	; 0x30
   19d70:	str	r3, [r4, #20]
   19d74:	ldr	r3, [r1, #32]
   19d78:	str	r3, [r4, #12]
   19d7c:	pop	{r4, pc}
   19d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d84:	mov	r8, r0
   19d88:	sub	sp, sp, #28
   19d8c:	mov	r0, #68	; 0x44
   19d90:	mov	r7, r2
   19d94:	mov	r9, r3
   19d98:	bl	12958 <malloc@plt>
   19d9c:	mov	r5, r0
   19da0:	mov	r0, #96	; 0x60
   19da4:	bl	12958 <malloc@plt>
   19da8:	cmp	r0, #0
   19dac:	cmpne	r5, #0
   19db0:	mov	r4, r0
   19db4:	moveq	r0, #0
   19db8:	movne	r0, #1
   19dbc:	beq	19f7c <__printf_chk@plt+0x7414>
   19dc0:	ldm	r7!, {r0, r1, r2, r3}
   19dc4:	vldr	d7, [pc, #484]	; 19fb0 <__printf_chk@plt+0x7448>
   19dc8:	mov	lr, r5
   19dcc:	str	r8, [lr], #4
   19dd0:	add	fp, r5, #4
   19dd4:	add	r6, r5, #28
   19dd8:	mov	ip, #0
   19ddc:	mov	sl, #1
   19de0:	stmia	lr!, {r0, r1, r2, r3}
   19de4:	ldm	r7, {r0, r1}
   19de8:	vstr	d7, [r4, #72]	; 0x48
   19dec:	vstr	d7, [r4, #80]	; 0x50
   19df0:	str	ip, [r4, #88]	; 0x58
   19df4:	str	ip, [r4, #92]	; 0x5c
   19df8:	stm	lr, {r0, r1}
   19dfc:	ldm	fp!, {r0, r1, r2, r3}
   19e00:	str	sl, [r4, #48]	; 0x30
   19e04:	stmia	r6!, {r0, r1, r2, r3}
   19e08:	ldm	lr, {r0, r1}
   19e0c:	ldr	r3, [sp, #64]	; 0x40
   19e10:	stm	r6, {r0, r1}
   19e14:	mov	r0, r8
   19e18:	str	r3, [r5, #60]	; 0x3c
   19e1c:	str	r9, [r5, #56]	; 0x38
   19e20:	str	r4, [r5, #64]	; 0x40
   19e24:	str	ip, [r4, #52]	; 0x34
   19e28:	str	ip, [r4, #44]	; 0x2c
   19e2c:	str	ip, [r4, #32]
   19e30:	str	ip, [r4, #28]
   19e34:	str	ip, [r4, #40]	; 0x28
   19e38:	str	ip, [r4, #36]	; 0x24
   19e3c:	str	ip, [r4, #24]
   19e40:	strh	ip, [r4, #8]
   19e44:	str	ip, [r4, #56]	; 0x38
   19e48:	str	ip, [r4, #60]	; 0x3c
   19e4c:	str	ip, [r4, #68]	; 0x44
   19e50:	str	ip, [r4, #64]	; 0x40
   19e54:	bl	19c60 <__printf_chk@plt+0x70f8>
   19e58:	cmp	r0, #0
   19e5c:	bne	19f18 <__printf_chk@plt+0x73b0>
   19e60:	ldr	r3, [pc, #336]	; 19fb8 <__printf_chk@plt+0x7450>
   19e64:	str	r0, [r4, #4]
   19e68:	str	r3, [r5, #52]	; 0x34
   19e6c:	bl	1279c <FLAC__stream_decoder_new@plt>
   19e70:	mov	r1, #0
   19e74:	str	r0, [r4]
   19e78:	bl	12748 <FLAC__stream_decoder_set_md5_checking@plt>
   19e7c:	mov	r1, #0
   19e80:	ldr	r0, [r4]
   19e84:	bl	127c0 <FLAC__stream_decoder_set_metadata_respond@plt>
   19e88:	ldr	r0, [r4]
   19e8c:	mov	r1, #4
   19e90:	bl	127c0 <FLAC__stream_decoder_set_metadata_respond@plt>
   19e94:	ldm	r4, {r0, r3}
   19e98:	cmp	r3, #0
   19e9c:	bne	19f2c <__printf_chk@plt+0x73c4>
   19ea0:	mov	r2, r3
   19ea4:	movw	r1, #39904	; 0x9be0
   19ea8:	str	r3, [sp]
   19eac:	movt	r1, #1
   19eb0:	movw	r3, #40256	; 0x9d40
   19eb4:	str	r1, [sp, #4]
   19eb8:	movt	r3, #1
   19ebc:	movw	r1, #41336	; 0xa178
   19ec0:	str	r3, [sp, #12]
   19ec4:	movt	r1, #1
   19ec8:	str	r5, [sp, #20]
   19ecc:	mov	r3, r2
   19ed0:	str	r1, [sp, #8]
   19ed4:	movw	r1, #39900	; 0x9bdc
   19ed8:	movt	r1, #1
   19edc:	str	r1, [sp, #16]
   19ee0:	movw	r1, #39832	; 0x9b98
   19ee4:	movt	r1, #1
   19ee8:	bl	12b2c <FLAC__stream_decoder_init_stream@plt>
   19eec:	ldr	r0, [r4]
   19ef0:	bl	124fc <FLAC__stream_decoder_process_until_end_of_metadata@plt>
   19ef4:	ldr	r0, [r4]
   19ef8:	bl	1294c <FLAC__stream_decoder_process_single@plt>
   19efc:	mov	r3, #1
   19f00:	str	r3, [r5, #36]	; 0x24
   19f04:	bl	129c4 <ao_is_big_endian@plt>
   19f08:	str	r0, [r5, #28]
   19f0c:	mov	r0, r5
   19f10:	add	sp, sp, #28
   19f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f18:	movw	r3, #1316	; 0x524
   19f1c:	str	sl, [r4, #4]
   19f20:	movt	r3, #3
   19f24:	str	r3, [r5, #52]	; 0x34
   19f28:	b	19e6c <__printf_chk@plt+0x7304>
   19f2c:	mov	r3, #0
   19f30:	str	r5, [sp, #20]
   19f34:	mov	r2, r3
   19f38:	str	r3, [sp]
   19f3c:	movw	ip, #39904	; 0x9be0
   19f40:	movw	r1, #41336	; 0xa178
   19f44:	movt	ip, #1
   19f48:	movt	r1, #1
   19f4c:	str	ip, [sp, #4]
   19f50:	movw	ip, #40256	; 0x9d40
   19f54:	str	r1, [sp, #8]
   19f58:	movt	ip, #1
   19f5c:	movw	r1, #39900	; 0x9bdc
   19f60:	str	ip, [sp, #12]
   19f64:	movt	r1, #1
   19f68:	str	r1, [sp, #16]
   19f6c:	movw	r1, #39832	; 0x9b98
   19f70:	movt	r1, #1
   19f74:	bl	12850 <FLAC__stream_decoder_init_ogg_stream@plt>
   19f78:	b	19eec <__printf_chk@plt+0x7384>
   19f7c:	movw	r3, #1428	; 0x594
   19f80:	movt	r3, #3
   19f84:	mov	r2, #5
   19f88:	movw	r1, #58908	; 0xe61c
   19f8c:	movt	r1, #1
   19f90:	ldr	r4, [r3]
   19f94:	bl	127f0 <dcgettext@plt>
   19f98:	mov	r1, #1
   19f9c:	mov	r2, r0
   19fa0:	mov	r0, r4
   19fa4:	bl	12658 <__fprintf_chk@plt>
   19fa8:	mov	r0, #1
   19fac:	bl	12598 <exit@plt>
	...
   19fb8:	andeq	r0, r3, r0, asr #10
   19fbc:	ldr	r3, [r0, #64]	; 0x40
   19fc0:	vldr	s14, [r0, #40]	; 0x28
   19fc4:	vldr	s9, [r3, #20]
   19fc8:	vcvt.f64.s32	d7, s14
   19fcc:	ldr	r2, [r3, #36]	; 0x24
   19fd0:	ldr	r0, [r3, #40]	; 0x28
   19fd4:	cmp	r2, r0
   19fd8:	vcvt.f64.s32	d5, s9
   19fdc:	vldr	s9, [r3, #24]
   19fe0:	vcvt.f64.s32	d6, s9
   19fe4:	vdiv.f64	d5, d5, d7
   19fe8:	vdiv.f64	d6, d6, d7
   19fec:	vstr	d5, [r3, #72]	; 0x48
   19ff0:	vstr	d6, [r3, #80]	; 0x50
   19ff4:	beq	1a05c <__printf_chk@plt+0x74f4>
   19ff8:	ldr	r1, [r3, #28]
   19ffc:	ldr	ip, [r3, #32]
   1a000:	cmp	r1, ip
   1a004:	beq	1a05c <__printf_chk@plt+0x74f4>
   1a008:	vmov.f64	d4, #32	; 0x41000000  8.0
   1a00c:	rsb	r0, r0, r2
   1a010:	rsb	ip, ip, r1
   1a014:	str	r2, [r3, #40]	; 0x28
   1a018:	vmov	s10, r0
   1a01c:	str	r1, [r3, #32]
   1a020:	vmul.f64	d4, d7, d4
   1a024:	vmov	s15, ip
   1a028:	vcvt.f64.s32	d5, s10
   1a02c:	vmul.f64	d5, d4, d5
   1a030:	vldr	s9, [r3, #88]	; 0x58
   1a034:	vcvt.f64.s32	d6, s15
   1a038:	vdiv.f64	d7, d5, d6
   1a03c:	vcvt.s32.f64	s14, d7
   1a040:	vcvt.f64.s32	d5, s9
   1a044:	vcvt.f64.s32	d7, s14
   1a048:	vmov.f64	d6, #96	; 0x3f000000  0.5
   1a04c:	vadd.f64	d7, d7, d5
   1a050:	vmul.f64	d7, d7, d6
   1a054:	vcvt.s32.f64	s14, d7
   1a058:	vstr	s14, [r3, #88]	; 0x58
   1a05c:	mov	r2, #0
   1a060:	add	r0, r3, #72	; 0x48
   1a064:	str	r2, [r3, #92]	; 0x5c
   1a068:	b	165f8 <__printf_chk@plt+0x3a90>
   1a06c:	push	{r4, r5, r6, lr}
   1a070:	mov	r6, r0
   1a074:	ldr	r5, [r0, #64]	; 0x40
   1a078:	ldrsh	r3, [r5, #8]
   1a07c:	cmp	r3, #0
   1a080:	movgt	r4, #0
   1a084:	ble	1a0a4 <__printf_chk@plt+0x753c>
   1a088:	ldr	r3, [r5, #56]	; 0x38
   1a08c:	ldr	r0, [r3, r4, lsl #2]
   1a090:	add	r4, r4, #1
   1a094:	bl	12520 <free@plt>
   1a098:	ldrsh	r3, [r5, #8]
   1a09c:	cmp	r3, r4
   1a0a0:	bgt	1a088 <__printf_chk@plt+0x7520>
   1a0a4:	ldr	r0, [r5, #56]	; 0x38
   1a0a8:	bl	12520 <free@plt>
   1a0ac:	ldr	r0, [r5]
   1a0b0:	bl	126f4 <FLAC__stream_decoder_finish@plt>
   1a0b4:	ldr	r0, [r5]
   1a0b8:	bl	12814 <FLAC__stream_decoder_delete@plt>
   1a0bc:	ldr	r0, [r6, #64]	; 0x40
   1a0c0:	bl	12520 <free@plt>
   1a0c4:	mov	r0, r6
   1a0c8:	pop	{r4, r5, r6, lr}
   1a0cc:	b	12520 <free@plt>
   1a0d0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a0d4:	mov	r5, r0
   1a0d8:	ldrsh	r3, [r0, #8]
   1a0dc:	mov	r7, r1
   1a0e0:	mov	r8, r2
   1a0e4:	cmp	r3, r1
   1a0e8:	beq	1a168 <__printf_chk@plt+0x7600>
   1a0ec:	cmp	r3, #0
   1a0f0:	movgt	r4, #0
   1a0f4:	ble	1a114 <__printf_chk@plt+0x75ac>
   1a0f8:	ldr	r3, [r5, #56]	; 0x38
   1a0fc:	ldr	r0, [r3, r4, lsl #2]
   1a100:	add	r4, r4, #1
   1a104:	bl	12520 <free@plt>
   1a108:	ldrsh	r3, [r5, #8]
   1a10c:	cmp	r3, r4
   1a110:	bgt	1a0f8 <__printf_chk@plt+0x7590>
   1a114:	ldr	r0, [r5, #56]	; 0x38
   1a118:	lsl	r1, r7, #2
   1a11c:	bl	12754 <realloc@plt>
   1a120:	strh	r7, [r5, #8]
   1a124:	str	r0, [r5, #56]	; 0x38
   1a128:	cmp	r7, #0
   1a12c:	lslgt	r9, r8, #2
   1a130:	movgt	r4, #0
   1a134:	ble	1a154 <__printf_chk@plt+0x75ec>
   1a138:	mov	r0, r9
   1a13c:	ldr	r6, [r5, #56]	; 0x38
   1a140:	bl	12958 <malloc@plt>
   1a144:	str	r0, [r6, r4, lsl #2]
   1a148:	add	r4, r4, #1
   1a14c:	cmp	r4, r7
   1a150:	bne	1a138 <__printf_chk@plt+0x75d0>
   1a154:	str	r8, [r5, #60]	; 0x3c
   1a158:	mov	r3, #0
   1a15c:	str	r3, [r5, #64]	; 0x40
   1a160:	str	r3, [r5, #68]	; 0x44
   1a164:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a168:	ldr	r3, [r0, #60]	; 0x3c
   1a16c:	cmp	r3, r2
   1a170:	bne	1a128 <__printf_chk@plt+0x75c0>
   1a174:	b	1a158 <__printf_chk@plt+0x75f0>
   1a178:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a17c:	mov	fp, r2
   1a180:	ldr	r8, [r3, #64]	; 0x40
   1a184:	ldr	r9, [r1]
   1a188:	ldr	sl, [r1, #8]
   1a18c:	ldr	r3, [r1, #16]
   1a190:	mov	r0, r8
   1a194:	mov	r2, r9
   1a198:	mov	r1, sl
   1a19c:	str	r3, [r8, #16]
   1a1a0:	bl	1a0d0 <__printf_chk@plt+0x7568>
   1a1a4:	cmp	sl, #0
   1a1a8:	ble	1a1f4 <__printf_chk@plt+0x768c>
   1a1ac:	mov	r7, #0
   1a1b0:	lsl	r6, r9, #2
   1a1b4:	mov	r2, r7
   1a1b8:	cmp	r9, #0
   1a1bc:	ble	1a1e4 <__printf_chk@plt+0x767c>
   1a1c0:	ldr	r1, [r8, #56]	; 0x38
   1a1c4:	mov	r3, #0
   1a1c8:	ldr	r5, [fp, r7]
   1a1cc:	ldr	r4, [r1, r7]
   1a1d0:	ldr	ip, [r5, r3]
   1a1d4:	str	ip, [r4, r3]
   1a1d8:	add	r3, r3, #4
   1a1dc:	cmp	r3, r6
   1a1e0:	bne	1a1d0 <__printf_chk@plt+0x7668>
   1a1e4:	add	r2, r2, #1
   1a1e8:	add	r7, r7, #4
   1a1ec:	cmp	sl, r2
   1a1f0:	bne	1a1b8 <__printf_chk@plt+0x7650>
   1a1f4:	ldr	r2, [r8, #28]
   1a1f8:	mov	r3, #0
   1a1fc:	str	r9, [r8, #68]	; 0x44
   1a200:	mov	r0, r3
   1a204:	add	r9, r2, r9
   1a208:	str	r3, [r8, #64]	; 0x40
   1a20c:	str	r9, [r8, #28]
   1a210:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a214:	ldr	r2, [r0, #56]	; 0x38
   1a218:	mov	r3, r0
   1a21c:	push	{r4, r5, r6, lr}
   1a220:	cmp	r2, #0
   1a224:	sub	sp, sp, #8
   1a228:	ldr	r4, [r0, #64]	; 0x40
   1a22c:	beq	1a28c <__printf_chk@plt+0x7724>
   1a230:	ldr	r5, [r2, #4]
   1a234:	cmp	r5, #0
   1a238:	beq	1a28c <__printf_chk@plt+0x7724>
   1a23c:	ldr	r0, [r4, #4]
   1a240:	ldr	r6, [r3, #60]	; 0x3c
   1a244:	cmp	r0, #0
   1a248:	movwne	r1, #58932	; 0xe634
   1a24c:	movweq	r1, #58936	; 0xe638
   1a250:	movtne	r1, #1
   1a254:	movne	r2, #5
   1a258:	moveq	r2, #5
   1a25c:	movteq	r1, #1
   1a260:	movne	r0, #0
   1a264:	bl	127f0 <dcgettext@plt>
   1a268:	ldrsh	ip, [r4, #8]
   1a26c:	ldr	r3, [r4, #16]
   1a270:	mov	r1, #2
   1a274:	str	ip, [sp]
   1a278:	ldr	ip, [r4, #12]
   1a27c:	str	ip, [sp, #4]
   1a280:	mov	r2, r0
   1a284:	mov	r0, r6
   1a288:	blx	r5
   1a28c:	add	sp, sp, #8
   1a290:	pop	{r4, r5, r6, pc}
   1a294:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a298:	mov	r7, r0
   1a29c:	ldr	r5, [r0, #8]
   1a2a0:	mov	r9, r1
   1a2a4:	mov	sl, r2
   1a2a8:	cmp	r5, #0
   1a2ac:	beq	1a344 <__printf_chk@plt+0x77dc>
   1a2b0:	mov	r6, #0
   1a2b4:	mov	r8, r6
   1a2b8:	mov	r5, r6
   1a2bc:	mov	r4, r6
   1a2c0:	b	1a304 <__printf_chk@plt+0x779c>
   1a2c4:	ldr	r1, [r1, #4]
   1a2c8:	mov	r0, r5
   1a2cc:	bl	12a54 <strncpy@plt>
   1a2d0:	ldr	ip, [r7, #12]
   1a2d4:	mov	r0, r5
   1a2d8:	mov	r1, r9
   1a2dc:	mov	r2, sl
   1a2e0:	add	r4, r4, #1
   1a2e4:	ldr	r3, [ip, fp]
   1a2e8:	mov	ip, #0
   1a2ec:	mov	r6, r4
   1a2f0:	strb	ip, [r5, r3]
   1a2f4:	bl	19ab8 <__printf_chk@plt+0x6f50>
   1a2f8:	ldr	r3, [r7, #8]
   1a2fc:	cmp	r4, r3
   1a300:	bcs	1a344 <__printf_chk@plt+0x77dc>
   1a304:	ldr	r2, [r7, #12]
   1a308:	lsl	fp, r6, #3
   1a30c:	add	r1, r2, fp
   1a310:	ldr	r2, [r2, r6, lsl #3]
   1a314:	add	r0, r2, #1
   1a318:	cmp	r8, r0
   1a31c:	bcs	1a2c4 <__printf_chk@plt+0x775c>
   1a320:	mov	r8, r0
   1a324:	mov	r0, r5
   1a328:	mov	r1, r8
   1a32c:	bl	12754 <realloc@plt>
   1a330:	ldr	r2, [r7, #12]
   1a334:	add	r1, r2, fp
   1a338:	ldr	r2, [r2, r6, lsl #3]
   1a33c:	mov	r5, r0
   1a340:	b	1a2c4 <__printf_chk@plt+0x775c>
   1a344:	mov	r0, r5
   1a348:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a34c:	b	12520 <free@plt>
   1a350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a354:	sub	sp, sp, #20
   1a358:	ldr	r4, [r0, #64]	; 0x40
   1a35c:	mov	r5, r0
   1a360:	mov	fp, r1
   1a364:	mov	r6, r2
   1a368:	ldr	r7, [r0, #56]	; 0x38
   1a36c:	ldr	r3, [r4, #48]	; 0x30
   1a370:	ldr	r9, [sp, #56]	; 0x38
   1a374:	cmp	r3, #0
   1a378:	beq	1a40c <__printf_chk@plt+0x78a4>
   1a37c:	ldr	r3, [r4, #16]
   1a380:	ldrsh	r1, [r4, #8]
   1a384:	ldr	r0, [r4, #12]
   1a388:	adds	r2, r3, #7
   1a38c:	addmi	r3, r3, #14
   1a390:	movpl	r3, r2
   1a394:	sub	r2, r1, #1
   1a398:	str	r1, [r5, #44]	; 0x2c
   1a39c:	asr	r3, r3, #3
   1a3a0:	str	r0, [r5, #40]	; 0x28
   1a3a4:	str	r3, [r5, #32]
   1a3a8:	cmp	r2, #7
   1a3ac:	ldrls	pc, [pc, r2, lsl #2]
   1a3b0:	b	1a694 <__printf_chk@plt+0x7b2c>
   1a3b4:	andeq	sl, r1, r4, lsr #12
   1a3b8:	andeq	sl, r1, r4, lsr r6
   1a3bc:	andeq	sl, r1, r4, asr #12
   1a3c0:	andeq	sl, r1, r4, asr r6
   1a3c4:	andeq	sl, r1, r4, ror #12
   1a3c8:	andeq	sl, r1, r4, ror r6
   1a3cc:	andeq	sl, r1, r4, lsl #13
   1a3d0:	ldrdeq	sl, [r1], -r4
   1a3d4:	movw	r3, #59036	; 0xe69c
   1a3d8:	movt	r3, #1
   1a3dc:	str	r3, [r5, #48]	; 0x30
   1a3e0:	mov	r0, r5
   1a3e4:	bl	1a214 <__printf_chk@plt+0x76ac>
   1a3e8:	ldr	r0, [r4, #44]	; 0x2c
   1a3ec:	cmp	r0, #0
   1a3f0:	beq	1a404 <__printf_chk@plt+0x789c>
   1a3f4:	add	r0, r0, #16
   1a3f8:	mov	r1, r7
   1a3fc:	ldr	r2, [r5, #60]	; 0x3c
   1a400:	bl	1a294 <__printf_chk@plt+0x772c>
   1a404:	mov	r3, #0
   1a408:	str	r3, [r4, #48]	; 0x30
   1a40c:	add	r5, r5, #28
   1a410:	mov	ip, r9
   1a414:	ldm	r5!, {r0, r1, r2, r3}
   1a418:	stmia	ip!, {r0, r1, r2, r3}
   1a41c:	ldm	r5, {r0, r1}
   1a420:	cmp	r0, #0
   1a424:	stm	ip, {r0, r1}
   1a428:	mov	r3, r0
   1a42c:	beq	1a6ac <__printf_chk@plt+0x7b44>
   1a430:	ldr	r1, [r9, #4]
   1a434:	cmp	r1, #0
   1a438:	beq	1a6ac <__printf_chk@plt+0x7b44>
   1a43c:	mov	r0, r6
   1a440:	mul	r1, r1, r3
   1a444:	bl	1c3b4 <__printf_chk@plt+0x984c>
   1a448:	cmp	r0, #0
   1a44c:	str	r0, [sp]
   1a450:	ble	1a6a0 <__printf_chk@plt+0x7b38>
   1a454:	mov	sl, #0
   1a458:	b	1a4ac <__printf_chk@plt+0x7944>
   1a45c:	ldr	r1, [sp]
   1a460:	ldr	r3, [r9, #4]
   1a464:	rsb	r0, sl, r1
   1a468:	cmp	r0, r8
   1a46c:	movge	r0, r8
   1a470:	cmp	r3, #1
   1a474:	beq	1a50c <__printf_chk@plt+0x79a4>
   1a478:	cmp	r3, #2
   1a47c:	beq	1a584 <__printf_chk@plt+0x7a1c>
   1a480:	ldr	r2, [r4, #64]	; 0x40
   1a484:	add	r2, r2, r0
   1a488:	str	r2, [sp, #4]
   1a48c:	ldr	r2, [sp, #4]
   1a490:	add	sl, sl, r0
   1a494:	rsb	r8, r0, r8
   1a498:	str	r8, [r4, #68]	; 0x44
   1a49c:	str	r2, [r4, #64]	; 0x40
   1a4a0:	ldr	r1, [sp]
   1a4a4:	cmp	r1, sl
   1a4a8:	ble	1a4e8 <__printf_chk@plt+0x7980>
   1a4ac:	ldr	r8, [r4, #68]	; 0x44
   1a4b0:	cmp	r8, #0
   1a4b4:	bgt	1a45c <__printf_chk@plt+0x78f4>
   1a4b8:	ldr	r3, [r4, #52]	; 0x34
   1a4bc:	cmp	r3, #0
   1a4c0:	bne	1a4e8 <__printf_chk@plt+0x7980>
   1a4c4:	ldr	r0, [r4]
   1a4c8:	bl	1294c <FLAC__stream_decoder_process_single@plt>
   1a4cc:	cmp	r0, #0
   1a4d0:	bne	1a610 <__printf_chk@plt+0x7aa8>
   1a4d4:	ldr	r1, [sp]
   1a4d8:	mov	r3, #1
   1a4dc:	str	r3, [r4, #52]	; 0x34
   1a4e0:	cmp	r1, sl
   1a4e4:	bgt	1a4ac <__printf_chk@plt+0x7944>
   1a4e8:	ldr	r3, [r9, #16]
   1a4ec:	ldr	r0, [r9, #4]
   1a4f0:	mul	r3, r3, sl
   1a4f4:	mul	r0, r0, r3
   1a4f8:	ldr	r3, [r4, #24]
   1a4fc:	add	r3, r3, sl
   1a500:	str	r3, [r4, #24]
   1a504:	add	sp, sp, #20
   1a508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a50c:	ldrsh	r3, [r4, #8]
   1a510:	cmp	r3, #0
   1a514:	ble	1a480 <__printf_chk@plt+0x7918>
   1a518:	mov	r7, #0
   1a51c:	cmp	r0, #0
   1a520:	ble	1a564 <__printf_chk@plt+0x79fc>
   1a524:	lsl	r6, r7, #2
   1a528:	add	r5, fp, r7
   1a52c:	mov	r3, #0
   1a530:	ldr	r1, [r4, #56]	; 0x38
   1a534:	add	r2, r3, sl
   1a538:	ldr	r8, [r9, #16]
   1a53c:	ldr	ip, [r4, #64]	; 0x40
   1a540:	ldr	r1, [r1, r6]
   1a544:	mul	r2, r8, r2
   1a548:	add	ip, r3, ip
   1a54c:	add	r3, r3, #1
   1a550:	ldr	r1, [r1, ip, lsl #2]
   1a554:	cmp	r3, r0
   1a558:	strb	r1, [r5, r2]
   1a55c:	bne	1a530 <__printf_chk@plt+0x79c8>
   1a560:	ldrsh	r3, [r4, #8]
   1a564:	add	r7, r7, #1
   1a568:	cmp	r3, r7
   1a56c:	bgt	1a51c <__printf_chk@plt+0x79b4>
   1a570:	ldr	r2, [r4, #64]	; 0x40
   1a574:	ldr	r8, [r4, #68]	; 0x44
   1a578:	add	r2, r2, r0
   1a57c:	str	r2, [sp, #4]
   1a580:	b	1a48c <__printf_chk@plt+0x7924>
   1a584:	ldrsh	r3, [r4, #8]
   1a588:	ldr	r2, [r4, #64]	; 0x40
   1a58c:	cmp	r3, #0
   1a590:	ble	1a484 <__printf_chk@plt+0x791c>
   1a594:	add	r1, r2, r0
   1a598:	lsl	r2, r2, #2
   1a59c:	str	r2, [sp, #8]
   1a5a0:	mov	r7, #0
   1a5a4:	lsl	r2, r1, #2
   1a5a8:	str	r8, [sp, #12]
   1a5ac:	str	r1, [sp, #4]
   1a5b0:	mov	r8, r2
   1a5b4:	cmp	r0, #0
   1a5b8:	ble	1a5fc <__printf_chk@plt+0x7a94>
   1a5bc:	ldr	r6, [r9, #16]
   1a5c0:	mov	r2, #0
   1a5c4:	ldr	r3, [r4, #56]	; 0x38
   1a5c8:	ldr	r1, [sp, #8]
   1a5cc:	mla	ip, r6, sl, r7
   1a5d0:	ldr	r5, [r3, r7, lsl #2]
   1a5d4:	lsl	r6, r6, #1
   1a5d8:	add	r3, r5, r1
   1a5dc:	add	r5, r5, r8
   1a5e0:	add	ip, fp, ip, lsl #1
   1a5e4:	ldr	r1, [r3], #4
   1a5e8:	cmp	r3, r5
   1a5ec:	strh	r1, [ip, r2]
   1a5f0:	add	r2, r2, r6
   1a5f4:	bne	1a5e4 <__printf_chk@plt+0x7a7c>
   1a5f8:	ldrsh	r3, [r4, #8]
   1a5fc:	add	r7, r7, #1
   1a600:	cmp	r3, r7
   1a604:	bgt	1a5b4 <__printf_chk@plt+0x7a4c>
   1a608:	ldr	r8, [sp, #12]
   1a60c:	b	1a48c <__printf_chk@plt+0x7924>
   1a610:	ldr	r0, [r4]
   1a614:	bl	12b08 <FLAC__stream_decoder_get_state@plt>
   1a618:	cmp	r0, #4
   1a61c:	bne	1a4a0 <__printf_chk@plt+0x7938>
   1a620:	b	1a4d4 <__printf_chk@plt+0x796c>
   1a624:	movw	r3, #57116	; 0xdf1c
   1a628:	movt	r3, #1
   1a62c:	str	r3, [r5, #48]	; 0x30
   1a630:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a634:	movw	r3, #57120	; 0xdf20
   1a638:	movt	r3, #1
   1a63c:	str	r3, [r5, #48]	; 0x30
   1a640:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a644:	movw	r3, #58980	; 0xe664
   1a648:	movt	r3, #1
   1a64c:	str	r3, [r5, #48]	; 0x30
   1a650:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a654:	movw	r3, #57132	; 0xdf2c
   1a658:	movt	r3, #1
   1a65c:	str	r3, [r5, #48]	; 0x30
   1a660:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a664:	movw	r3, #58988	; 0xe66c
   1a668:	movt	r3, #1
   1a66c:	str	r3, [r5, #48]	; 0x30
   1a670:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a674:	movw	r3, #59000	; 0xe678
   1a678:	movt	r3, #1
   1a67c:	str	r3, [r5, #48]	; 0x30
   1a680:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a684:	movw	r3, #59016	; 0xe688
   1a688:	movt	r3, #1
   1a68c:	str	r3, [r5, #48]	; 0x30
   1a690:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a694:	mov	r3, #0
   1a698:	str	r3, [r5, #48]	; 0x30
   1a69c:	b	1a3e0 <__printf_chk@plt+0x7878>
   1a6a0:	mov	r0, #0
   1a6a4:	mov	sl, r0
   1a6a8:	b	1a4f8 <__printf_chk@plt+0x7990>
   1a6ac:	movw	r3, #1428	; 0x594
   1a6b0:	movt	r3, #3
   1a6b4:	mov	r2, #5
   1a6b8:	movw	r1, #59060	; 0xe6b4
   1a6bc:	mov	r0, #0
   1a6c0:	movt	r1, #1
   1a6c4:	ldr	r4, [r3]
   1a6c8:	bl	127f0 <dcgettext@plt>
   1a6cc:	mov	r1, #1
   1a6d0:	mov	r2, r0
   1a6d4:	mov	r0, r4
   1a6d8:	bl	12658 <__fprintf_chk@plt>
   1a6dc:	mov	r0, #1
   1a6e0:	bl	12598 <exit@plt>
   1a6e4:	andeq	r0, r0, r0
   1a6e8:	mov	r0, #0
   1a6ec:	bx	lr
   1a6f0:	push	{r4, lr}
   1a6f4:	movw	r4, #1408	; 0x580
   1a6f8:	movt	r4, #3
   1a6fc:	ldr	ip, [r0, #4]
   1a700:	sub	sp, sp, #40	; 0x28
   1a704:	mov	r2, #1
   1a708:	ldr	lr, [r4]
   1a70c:	mov	r3, #36	; 0x24
   1a710:	mov	r1, sp
   1a714:	ldr	ip, [ip, #12]
   1a718:	str	lr, [sp, #36]	; 0x24
   1a71c:	blx	ip
   1a720:	cmp	r0, #31
   1a724:	ble	1a744 <__printf_chk@plt+0x7bdc>
   1a728:	mov	r0, sp
   1a72c:	movw	r1, #58892	; 0xe60c
   1a730:	mov	r2, #4
   1a734:	movt	r1, #1
   1a738:	bl	12a84 <memcmp@plt>
   1a73c:	cmp	r0, #0
   1a740:	beq	1a760 <__printf_chk@plt+0x7bf8>
   1a744:	mov	r0, #0
   1a748:	ldr	r2, [sp, #36]	; 0x24
   1a74c:	ldr	r3, [r4]
   1a750:	cmp	r2, r3
   1a754:	bne	1a780 <__printf_chk@plt+0x7c18>
   1a758:	add	sp, sp, #40	; 0x28
   1a75c:	pop	{r4, pc}
   1a760:	movw	r1, #59100	; 0xe6dc
   1a764:	add	r0, sp, #28
   1a768:	movt	r1, #1
   1a76c:	mov	r2, #8
   1a770:	bl	12a84 <memcmp@plt>
   1a774:	rsbs	r0, r0, #1
   1a778:	movcc	r0, #0
   1a77c:	b	1a748 <__printf_chk@plt+0x7be0>
   1a780:	bl	127e4 <__stack_chk_fail@plt>
   1a784:	push	{r3, r4, r5, lr}
   1a788:	mov	r4, r0
   1a78c:	ldr	r5, [r0, #64]	; 0x40
   1a790:	ldr	r0, [r5, #508]	; 0x1fc
   1a794:	bl	12520 <free@plt>
   1a798:	ldr	r0, [r5, #516]	; 0x204
   1a79c:	bl	12520 <free@plt>
   1a7a0:	ldr	r0, [r4, #64]	; 0x40
   1a7a4:	bl	12520 <free@plt>
   1a7a8:	mov	r0, r4
   1a7ac:	pop	{r3, r4, r5, lr}
   1a7b0:	b	12520 <free@plt>
   1a7b4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7b8:	mov	sl, r0
   1a7bc:	mov	r0, #68	; 0x44
   1a7c0:	mov	r8, r2
   1a7c4:	mov	r9, r3
   1a7c8:	bl	12958 <malloc@plt>
   1a7cc:	mov	r7, r0
   1a7d0:	mov	r0, #600	; 0x258
   1a7d4:	bl	12958 <malloc@plt>
   1a7d8:	cmp	r0, #0
   1a7dc:	cmpne	r7, #0
   1a7e0:	mov	r6, r0
   1a7e4:	moveq	r0, #0
   1a7e8:	movne	r0, #1
   1a7ec:	beq	1a8a4 <__printf_chk@plt+0x7d3c>
   1a7f0:	ldm	r8!, {r0, r1, r2, r3}
   1a7f4:	mov	ip, r7
   1a7f8:	str	sl, [ip], #4
   1a7fc:	add	fp, r7, #4
   1a800:	add	lr, r7, #28
   1a804:	mov	r4, #0
   1a808:	mov	r5, #0
   1a80c:	movw	sl, #1372	; 0x55c
   1a810:	stmia	ip!, {r0, r1, r2, r3}
   1a814:	mov	r3, #1
   1a818:	ldm	r8, {r0, r1}
   1a81c:	movt	sl, #3
   1a820:	str	r3, [r6, #540]	; 0x21c
   1a824:	mov	r8, #0
   1a828:	str	r8, [r6, #544]	; 0x220
   1a82c:	stm	ip, {r0, r1}
   1a830:	ldm	fp!, {r0, r1, r2, r3}
   1a834:	str	r8, [r6, #552]	; 0x228
   1a838:	str	r8, [r6, #548]	; 0x224
   1a83c:	stmia	lr!, {r0, r1, r2, r3}
   1a840:	ldm	ip, {r0, r1}
   1a844:	ldr	r3, [sp, #40]	; 0x28
   1a848:	stm	lr, {r0, r1}
   1a84c:	mov	r0, r6
   1a850:	str	r3, [r7, #60]	; 0x3c
   1a854:	str	r9, [r7, #56]	; 0x38
   1a858:	str	r6, [r7, #64]	; 0x40
   1a85c:	str	sl, [r7, #52]	; 0x34
   1a860:	str	r8, [r6, #560]	; 0x230
   1a864:	str	r4, [r6, #576]	; 0x240
   1a868:	str	r5, [r6, #580]	; 0x244
   1a86c:	str	r8, [r6, #556]	; 0x22c
   1a870:	str	r4, [r6, #584]	; 0x248
   1a874:	str	r5, [r6, #588]	; 0x24c
   1a878:	str	r8, [r6, #568]	; 0x238
   1a87c:	str	r8, [r6, #508]	; 0x1fc
   1a880:	str	r8, [r6, #512]	; 0x200
   1a884:	str	r8, [r6, #500]	; 0x1f4
   1a888:	str	r8, [r6, #592]	; 0x250
   1a88c:	str	r8, [r6, #596]	; 0x254
   1a890:	bl	1258c <ogg_sync_init@plt>
   1a894:	add	r0, r6, #440	; 0x1b8
   1a898:	bl	12ac0 <speex_bits_init@plt>
   1a89c:	mov	r0, r7
   1a8a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8a4:	movw	r3, #1428	; 0x594
   1a8a8:	movt	r3, #3
   1a8ac:	mov	r2, #5
   1a8b0:	movw	r1, #56148	; 0xdb54
   1a8b4:	movt	r1, #1
   1a8b8:	ldr	r4, [r3]
   1a8bc:	bl	127f0 <dcgettext@plt>
   1a8c0:	mov	r1, #1
   1a8c4:	mov	r2, r0
   1a8c8:	mov	r0, r4
   1a8cc:	bl	12658 <__fprintf_chk@plt>
   1a8d0:	mov	r0, #1
   1a8d4:	bl	12598 <exit@plt>
   1a8d8:	ldr	r3, [r0, #64]	; 0x40
   1a8dc:	vldr	s14, [r0, #40]	; 0x28
   1a8e0:	vldr	s7, [r3, #564]	; 0x234
   1a8e4:	vcvt.f64.s32	d7, s14
   1a8e8:	vldr	s9, [r3, #568]	; 0x238
   1a8ec:	ldr	r2, [r3, #556]	; 0x22c
   1a8f0:	ldr	r0, [r3, #560]	; 0x230
   1a8f4:	cmp	r2, r0
   1a8f8:	vcvt.f64.s32	d5, s7
   1a8fc:	vcvt.f64.s32	d6, s9
   1a900:	vdiv.f64	d5, d5, d7
   1a904:	vdiv.f64	d6, d6, d7
   1a908:	vstr	d5, [r3, #576]	; 0x240
   1a90c:	vstr	d6, [r3, #584]	; 0x248
   1a910:	beq	1a97c <__printf_chk@plt+0x7e14>
   1a914:	ldr	r1, [r3, #548]	; 0x224
   1a918:	ldr	ip, [r3, #552]	; 0x228
   1a91c:	cmp	r1, ip
   1a920:	beq	1a97c <__printf_chk@plt+0x7e14>
   1a924:	vmov.f64	d2, #32	; 0x41000000  8.0
   1a928:	rsb	r0, r0, r2
   1a92c:	rsb	ip, ip, r1
   1a930:	vldr	d6, [pc, #88]	; 1a990 <__printf_chk@plt+0x7e28>
   1a934:	vmov	s6, r0
   1a938:	vldr	d5, [pc, #88]	; 1a998 <__printf_chk@plt+0x7e30>
   1a93c:	str	r2, [r3, #560]	; 0x230
   1a940:	str	r1, [r3, #552]	; 0x228
   1a944:	vmul.f64	d2, d7, d2
   1a948:	vmov	s15, ip
   1a94c:	vcvt.f64.s32	d3, s6
   1a950:	vmul.f64	d3, d2, d3
   1a954:	vcvt.f64.s32	d4, s15
   1a958:	vdiv.f64	d7, d3, d4
   1a95c:	vldr	s7, [r3, #592]	; 0x250
   1a960:	vcvt.f64.s32	d4, s7
   1a964:	vmul.f64	d6, d4, d6
   1a968:	vcvt.s32.f64	s14, d7
   1a96c:	vcvt.f64.s32	d7, s14
   1a970:	vmla.f64	d6, d7, d5
   1a974:	vcvt.s32.f64	s12, d6
   1a978:	vstr	s12, [r3, #592]	; 0x250
   1a97c:	mov	r2, #0
   1a980:	add	r0, r3, #576	; 0x240
   1a984:	str	r2, [r3, #596]	; 0x254
   1a988:	b	165f8 <__printf_chk@plt+0x3a90>
   1a98c:	nop	{0}
   1a990:	teqcc	r3, #52, 6	; 0xd0000000
   1a994:	svccc	0x00d33333
   1a998:	strbtvs	r6, [r6], -r6, ror #12
   1a99c:	svccc	0x00e66666
   1a9a0:	push	{r4, r5, r6, r7, r8, lr}
   1a9a4:	mov	r4, r0
   1a9a8:	ldr	r0, [r0, #60]	; 0x3c
   1a9ac:	mov	r6, r1
   1a9b0:	sub	sp, sp, #8
   1a9b4:	mov	r5, r2
   1a9b8:	cmp	r0, #0
   1a9bc:	ldr	r8, [r6, #4]
   1a9c0:	ldr	r7, [r4, #40]	; 0x28
   1a9c4:	movwne	r1, #59112	; 0xe6e8
   1a9c8:	movweq	r1, #59164	; 0xe71c
   1a9cc:	movtne	r1, #1
   1a9d0:	movne	r2, #5
   1a9d4:	moveq	r2, #5
   1a9d8:	movteq	r1, #1
   1a9dc:	movne	r0, #0
   1a9e0:	bl	127f0 <dcgettext@plt>
   1a9e4:	movw	r3, #1432	; 0x598
   1a9e8:	movt	r3, #3
   1a9ec:	ldr	lr, [r4, #36]	; 0x24
   1a9f0:	mov	r1, #2
   1a9f4:	ldr	ip, [r3, r7, lsl #2]
   1a9f8:	ldr	r3, [r4, #48]	; 0x30
   1a9fc:	str	lr, [sp]
   1aa00:	ldr	ip, [ip, #8]
   1aa04:	str	ip, [sp, #4]
   1aa08:	mov	r2, r0
   1aa0c:	mov	r0, r5
   1aa10:	blx	r8
   1aa14:	mov	r2, #5
   1aa18:	movw	r1, #59212	; 0xe74c
   1aa1c:	mov	r0, #0
   1aa20:	movt	r1, #1
   1aa24:	ldr	r6, [r6, #4]
   1aa28:	bl	127f0 <dcgettext@plt>
   1aa2c:	add	r3, r4, #8
   1aa30:	mov	r1, #3
   1aa34:	mov	r2, r0
   1aa38:	mov	r0, r5
   1aa3c:	blx	r6
   1aa40:	add	sp, sp, #8
   1aa44:	pop	{r4, r5, r6, r7, r8, pc}
   1aa48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa4c:	cmp	r1, #7
   1aa50:	sub	sp, sp, #20
   1aa54:	mov	r9, r3
   1aa58:	str	r2, [sp, #8]
   1aa5c:	ble	1abcc <__printf_chk@plt+0x8064>
   1aa60:	ldrsb	fp, [r0, #3]
   1aa64:	add	sl, r0, #4
   1aa68:	ldrb	lr, [r0]
   1aa6c:	add	r7, r0, r1
   1aa70:	ldrb	r2, [r0, #2]
   1aa74:	ldrb	r3, [r0, #1]
   1aa78:	orr	fp, lr, fp, lsl #24
   1aa7c:	orr	fp, fp, r2, lsl #16
   1aa80:	orr	fp, fp, r3, lsl #8
   1aa84:	add	r5, sl, fp
   1aa88:	cmp	r7, r5
   1aa8c:	bcc	1abcc <__printf_chk@plt+0x8064>
   1aa90:	add	r8, fp, #1
   1aa94:	add	r4, r5, #4
   1aa98:	mov	r0, r8
   1aa9c:	bl	12958 <malloc@plt>
   1aaa0:	mov	r1, sl
   1aaa4:	mov	r2, fp
   1aaa8:	mov	r6, r0
   1aaac:	bl	12a54 <strncpy@plt>
   1aab0:	mov	r3, #0
   1aab4:	strb	r3, [r6, fp]
   1aab8:	ldr	r3, [sp, #8]
   1aabc:	mov	r2, #5
   1aac0:	mov	r0, #0
   1aac4:	movw	r1, #57100	; 0xdf0c
   1aac8:	movt	r1, #1
   1aacc:	ldr	ip, [r3, #4]
   1aad0:	str	ip, [sp, #4]
   1aad4:	bl	127f0 <dcgettext@plt>
   1aad8:	mov	r3, r6
   1aadc:	mov	r1, #3
   1aae0:	ldr	ip, [sp, #4]
   1aae4:	mov	r2, r0
   1aae8:	mov	r0, r9
   1aaec:	blx	ip
   1aaf0:	cmp	r7, r4
   1aaf4:	bcc	1ac3c <__printf_chk@plt+0x80d4>
   1aaf8:	ldrsb	r0, [r5, #3]
   1aafc:	ldrb	r1, [sl, fp]
   1ab00:	ldrb	r2, [r5, #2]
   1ab04:	ldrb	r3, [r5, #1]
   1ab08:	orr	sl, r1, r0, lsl #24
   1ab0c:	orr	sl, sl, r2, lsl #16
   1ab10:	orr	r3, sl, r3, lsl #8
   1ab14:	str	r3, [sp, #12]
   1ab18:	cmp	r3, #0
   1ab1c:	ble	1ac2c <__printf_chk@plt+0x80c4>
   1ab20:	add	sl, r5, #8
   1ab24:	cmp	r7, sl
   1ab28:	movcs	fp, #0
   1ab2c:	movcs	r3, fp
   1ab30:	movcs	fp, sl
   1ab34:	movcs	sl, r3
   1ab38:	bcs	1ab80 <__printf_chk@plt+0x8018>
   1ab3c:	b	1ac00 <__printf_chk@plt+0x8098>
   1ab40:	mov	r1, fp
   1ab44:	mov	r2, r5
   1ab48:	mov	r0, r6
   1ab4c:	add	fp, r4, #4
   1ab50:	bl	12a54 <strncpy@plt>
   1ab54:	mov	r3, #0
   1ab58:	mov	r0, r6
   1ab5c:	strb	r3, [r6, r5]
   1ab60:	ldr	r1, [sp, #8]
   1ab64:	mov	r2, r9
   1ab68:	bl	19ab8 <__printf_chk@plt+0x6f50>
   1ab6c:	ldr	r3, [sp, #12]
   1ab70:	cmp	r3, sl
   1ab74:	beq	1ac2c <__printf_chk@plt+0x80c4>
   1ab78:	cmp	r7, fp
   1ab7c:	bcc	1ac00 <__printf_chk@plt+0x8098>
   1ab80:	ldrsb	r5, [r4, #3]
   1ab84:	add	sl, sl, #1
   1ab88:	ldrb	r0, [r4]
   1ab8c:	ldrb	r1, [r4, #2]
   1ab90:	ldrb	r2, [r4, #1]
   1ab94:	orr	r5, r0, r5, lsl #24
   1ab98:	orr	r5, r5, r1, lsl #16
   1ab9c:	orr	r5, r5, r2, lsl #8
   1aba0:	add	r4, fp, r5
   1aba4:	cmp	r7, r4
   1aba8:	bcc	1ac00 <__printf_chk@plt+0x8098>
   1abac:	cmp	r5, r8
   1abb0:	blt	1ab40 <__printf_chk@plt+0x7fd8>
   1abb4:	add	r8, r5, #1
   1abb8:	mov	r0, r6
   1abbc:	mov	r1, r8
   1abc0:	bl	12754 <realloc@plt>
   1abc4:	mov	r6, r0
   1abc8:	b	1ab40 <__printf_chk@plt+0x7fd8>
   1abcc:	ldr	r3, [sp, #8]
   1abd0:	mov	r2, #5
   1abd4:	movw	r1, #59232	; 0xe760
   1abd8:	mov	r0, #0
   1abdc:	movt	r1, #1
   1abe0:	ldr	r4, [r3]
   1abe4:	bl	127f0 <dcgettext@plt>
   1abe8:	mov	r1, #1
   1abec:	mov	r2, r0
   1abf0:	mov	r0, r9
   1abf4:	blx	r4
   1abf8:	add	sp, sp, #20
   1abfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac00:	movw	r1, #59232	; 0xe760
   1ac04:	movt	r1, #1
   1ac08:	mov	r0, #0
   1ac0c:	mov	r2, #5
   1ac10:	ldr	r3, [sp, #8]
   1ac14:	ldr	r4, [r3]
   1ac18:	bl	127f0 <dcgettext@plt>
   1ac1c:	mov	r1, #1
   1ac20:	mov	r2, r0
   1ac24:	mov	r0, r9
   1ac28:	blx	r4
   1ac2c:	mov	r0, r6
   1ac30:	add	sp, sp, #20
   1ac34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac38:	b	12520 <free@plt>
   1ac3c:	movw	r1, #59232	; 0xe760
   1ac40:	mov	r0, #0
   1ac44:	mov	r2, #5
   1ac48:	movt	r1, #1
   1ac4c:	b	1ac10 <__printf_chk@plt+0x80a8>
   1ac50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac54:	movw	r4, #1408	; 0x580
   1ac58:	movt	r4, #3
   1ac5c:	sub	sp, sp, #32
   1ac60:	mov	ip, r0
   1ac64:	mov	r8, r1
   1ac68:	ldr	lr, [r4]
   1ac6c:	mov	r6, r2
   1ac70:	ldr	r0, [r0]
   1ac74:	mov	r7, r3
   1ac78:	ldr	r1, [ip, #4]
   1ac7c:	mov	r3, #1
   1ac80:	str	lr, [sp, #28]
   1ac84:	str	r3, [sp, #4]
   1ac88:	ldr	sl, [sp, #64]	; 0x40
   1ac8c:	ldr	r9, [sp, #68]	; 0x44
   1ac90:	bl	124a8 <speex_packet_to_header@plt>
   1ac94:	cmp	r0, #0
   1ac98:	mov	r5, r0
   1ac9c:	str	r0, [r6]
   1aca0:	beq	1adc0 <__printf_chk@plt+0x8258>
   1aca4:	ldr	r3, [r0, #40]	; 0x28
   1aca8:	cmp	r3, #2
   1acac:	bhi	1ad88 <__printf_chk@plt+0x8220>
   1acb0:	movw	ip, #1432	; 0x598
   1acb4:	movt	ip, #3
   1acb8:	ldr	r2, [r0, #44]	; 0x2c
   1acbc:	ldr	r0, [ip, r3, lsl #2]
   1acc0:	ldr	r3, [r0, #16]
   1acc4:	cmp	r3, r2
   1acc8:	movwlt	r1, #59340	; 0xe7cc
   1accc:	movlt	r0, #0
   1acd0:	movtlt	r1, #1
   1acd4:	blt	1ad64 <__printf_chk@plt+0x81fc>
   1acd8:	bgt	1ad58 <__printf_chk@plt+0x81f0>
   1acdc:	bl	125bc <speex_decoder_init@plt>
   1ace0:	mov	r1, #0
   1ace4:	add	r2, sp, #4
   1ace8:	mov	r5, r0
   1acec:	bl	12988 <speex_decoder_ctl@plt>
   1acf0:	mov	r2, r8
   1acf4:	mov	r1, #3
   1acf8:	mov	r0, r5
   1acfc:	bl	12988 <speex_decoder_ctl@plt>
   1ad00:	mov	r1, #20
   1ad04:	add	r2, sp, #8
   1ad08:	mov	r0, r5
   1ad0c:	mov	ip, #9
   1ad10:	str	r7, [sp, #16]
   1ad14:	str	ip, [sp, #8]
   1ad18:	movw	r3, #10476	; 0x28ec
   1ad1c:	movt	r3, #1
   1ad20:	str	r3, [sp, #12]
   1ad24:	bl	12988 <speex_decoder_ctl@plt>
   1ad28:	ldr	r2, [r6]
   1ad2c:	mov	r0, r5
   1ad30:	mov	r1, #24
   1ad34:	add	r2, r2, #36	; 0x24
   1ad38:	bl	12988 <speex_decoder_ctl@plt>
   1ad3c:	mov	r0, r5
   1ad40:	ldr	r2, [sp, #28]
   1ad44:	ldr	r3, [r4]
   1ad48:	cmp	r2, r3
   1ad4c:	bne	1adec <__printf_chk@plt+0x8284>
   1ad50:	add	sp, sp, #32
   1ad54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad58:	movw	r1, #59436	; 0xe82c
   1ad5c:	movt	r1, #1
   1ad60:	mov	r0, #0
   1ad64:	mov	r2, #5
   1ad68:	ldr	r5, [sl]
   1ad6c:	bl	127f0 <dcgettext@plt>
   1ad70:	mov	r1, #0
   1ad74:	mov	r2, r0
   1ad78:	mov	r0, r9
   1ad7c:	blx	r5
   1ad80:	mov	r0, #0
   1ad84:	b	1ad40 <__printf_chk@plt+0x81d8>
   1ad88:	mov	r2, #5
   1ad8c:	movw	r1, #59280	; 0xe790
   1ad90:	mov	r0, #0
   1ad94:	movt	r1, #1
   1ad98:	ldr	r5, [sl]
   1ad9c:	bl	127f0 <dcgettext@plt>
   1ada0:	ldr	r3, [r6]
   1ada4:	mov	r1, #0
   1ada8:	ldr	r3, [r3, #40]	; 0x28
   1adac:	mov	r2, r0
   1adb0:	mov	r0, r9
   1adb4:	blx	r5
   1adb8:	mov	r0, #0
   1adbc:	b	1ad40 <__printf_chk@plt+0x81d8>
   1adc0:	mov	r2, #5
   1adc4:	movw	r1, #59260	; 0xe77c
   1adc8:	movt	r1, #1
   1adcc:	ldr	r6, [sl]
   1add0:	bl	127f0 <dcgettext@plt>
   1add4:	mov	r1, r5
   1add8:	mov	r2, r0
   1addc:	mov	r0, r9
   1ade0:	blx	r6
   1ade4:	mov	r0, r5
   1ade8:	b	1ad40 <__printf_chk@plt+0x81d8>
   1adec:	bl	127e4 <__stack_chk_fail@plt>
   1adf0:	ldr	r3, [r0]
   1adf4:	mov	r2, #0
   1adf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1adfc:	sub	sp, sp, #36	; 0x24
   1ae00:	ldr	r5, [r0, #64]	; 0x40
   1ae04:	mov	r7, r0
   1ae08:	ldr	r3, [r3, #4]
   1ae0c:	mov	r4, r2
   1ae10:	add	r8, r5, #80	; 0x50
   1ae14:	add	r6, r5, #48	; 0x30
   1ae18:	str	r2, [sp, #24]
   1ae1c:	add	r2, r5, #532	; 0x214
   1ae20:	str	r3, [sp, #28]
   1ae24:	add	r3, r5, #28
   1ae28:	str	r2, [sp, #12]
   1ae2c:	str	r3, [sp, #20]
   1ae30:	add	r3, r5, #500	; 0x1f4
   1ae34:	str	r3, [sp, #16]
   1ae38:	mov	r1, #200	; 0xc8
   1ae3c:	mov	r0, r5
   1ae40:	bl	129d0 <ogg_sync_buffer@plt>
   1ae44:	ldr	r2, [sp, #28]
   1ae48:	mov	r3, #200	; 0xc8
   1ae4c:	add	sl, r5, #476	; 0x1dc
   1ae50:	ldr	ip, [r2, #16]
   1ae54:	mov	r2, #1
   1ae58:	mov	r1, r0
   1ae5c:	ldr	r0, [r7]
   1ae60:	blx	ip
   1ae64:	mov	r1, r0
   1ae68:	mov	r0, r5
   1ae6c:	bl	12838 <ogg_sync_wrote@plt>
   1ae70:	mov	r0, r5
   1ae74:	ldr	r1, [sp, #20]
   1ae78:	bl	12a0c <ogg_sync_pageout@plt>
   1ae7c:	cmp	r0, #1
   1ae80:	mov	r3, r0
   1ae84:	bne	1afa4 <__printf_chk@plt+0x843c>
   1ae88:	ldr	r2, [sp, #24]
   1ae8c:	cmp	r2, #0
   1ae90:	beq	1af7c <__printf_chk@plt+0x8414>
   1ae94:	mov	r0, r8
   1ae98:	ldr	r1, [sp, #20]
   1ae9c:	bl	12940 <ogg_stream_pagein@plt>
   1aea0:	mov	r9, #0
   1aea4:	b	1aeb4 <__printf_chk@plt+0x834c>
   1aea8:	cmp	r4, #1
   1aeac:	beq	1af58 <__printf_chk@plt+0x83f0>
   1aeb0:	add	r4, r4, #1
   1aeb4:	mov	r0, r8
   1aeb8:	mov	r1, r6
   1aebc:	bl	12994 <ogg_stream_packetout@plt>
   1aec0:	cmp	r0, #1
   1aec4:	mov	fp, r0
   1aec8:	bne	1ae70 <__printf_chk@plt+0x8308>
   1aecc:	cmp	r4, #0
   1aed0:	bne	1aea8 <__printf_chk@plt+0x8340>
   1aed4:	ldr	lr, [r7, #56]	; 0x38
   1aed8:	mov	r0, r6
   1aedc:	ldr	r1, [sp, #12]
   1aee0:	mov	r3, sl
   1aee4:	ldr	r2, [sp, #16]
   1aee8:	str	lr, [sp]
   1aeec:	ldr	lr, [r7, #60]	; 0x3c
   1aef0:	str	lr, [sp, #4]
   1aef4:	bl	1ac50 <__printf_chk@plt+0x80e8>
   1aef8:	cmp	r0, #0
   1aefc:	str	r0, [r5, #504]	; 0x1f8
   1af00:	beq	1af98 <__printf_chk@plt+0x8430>
   1af04:	ldr	r3, [r5, #500]	; 0x1f4
   1af08:	ldr	r1, [r3, #64]	; 0x40
   1af0c:	ldr	r0, [r3, #36]	; 0x24
   1af10:	ldr	r2, [r3, #48]	; 0x30
   1af14:	cmp	r1, #0
   1af18:	ldr	r3, [r3, #60]	; 0x3c
   1af1c:	str	r0, [r7, #40]	; 0x28
   1af20:	str	r1, [r5, #528]	; 0x210
   1af24:	mov	r1, #4
   1af28:	str	r2, [r7, #44]	; 0x2c
   1af2c:	str	r3, [r5, #536]	; 0x218
   1af30:	ldr	r3, [r5, #532]	; 0x214
   1af34:	ldrne	fp, [r5, #528]	; 0x210
   1af38:	streq	fp, [r5, #528]	; 0x210
   1af3c:	mul	r0, r3, r2
   1af40:	mul	r0, fp, r0
   1af44:	bl	128a4 <calloc@plt>
   1af48:	str	r9, [r5, #520]	; 0x208
   1af4c:	str	r9, [r5, #524]	; 0x20c
   1af50:	str	r0, [r5, #516]	; 0x204
   1af54:	b	1aeb0 <__printf_chk@plt+0x8348>
   1af58:	ldr	fp, [r5, #52]	; 0x34
   1af5c:	str	fp, [r5, #512]	; 0x200
   1af60:	mov	r0, fp
   1af64:	bl	12958 <malloc@plt>
   1af68:	mov	r2, fp
   1af6c:	ldr	r1, [r5, #48]	; 0x30
   1af70:	str	r0, [r5, #508]	; 0x1fc
   1af74:	bl	12934 <memcpy@plt>
   1af78:	b	1aeb0 <__printf_chk@plt+0x8348>
   1af7c:	ldr	r0, [sp, #20]
   1af80:	str	r3, [sp, #24]
   1af84:	bl	1270c <ogg_page_serialno@plt>
   1af88:	mov	r1, r0
   1af8c:	mov	r0, r8
   1af90:	bl	12aa8 <ogg_stream_init@plt>
   1af94:	b	1ae94 <__printf_chk@plt+0x832c>
   1af98:	mov	r0, r4
   1af9c:	add	sp, sp, #36	; 0x24
   1afa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afa4:	cmp	r4, #1
   1afa8:	ble	1ae38 <__printf_chk@plt+0x82d0>
   1afac:	mov	r0, #1
   1afb0:	b	1af9c <__printf_chk@plt+0x8434>
   1afb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afb8:	vpush	{d8}
   1afbc:	sub	sp, sp, #36	; 0x24
   1afc0:	ldr	r8, [r0, #64]	; 0x40
   1afc4:	mov	r7, r0
   1afc8:	ldr	ip, [r0]
   1afcc:	mov	r5, r1
   1afd0:	str	r3, [sp, #24]
   1afd4:	ldr	r3, [r8, #540]	; 0x21c
   1afd8:	ldr	ip, [ip, #4]
   1afdc:	cmp	r3, #0
   1afe0:	str	r2, [sp, #4]
   1afe4:	ldr	r4, [r0, #56]	; 0x38
   1afe8:	str	ip, [sp, #20]
   1afec:	ldr	r6, [sp, #80]	; 0x50
   1aff0:	bne	1b250 <__printf_chk@plt+0x86e8>
   1aff4:	ldr	r3, [sp, #4]
   1aff8:	add	r4, r7, #28
   1affc:	mov	ip, r6
   1b000:	cmp	r3, #0
   1b004:	ldm	r4!, {r0, r1, r2, r3}
   1b008:	stmia	ip!, {r0, r1, r2, r3}
   1b00c:	ldm	r4, {r0, r1}
   1b010:	stm	ip, {r0, r1}
   1b014:	beq	1b0d8 <__printf_chk@plt+0x8570>
   1b018:	ldr	r4, [sp, #4]
   1b01c:	add	r2, r8, #80	; 0x50
   1b020:	add	r3, r8, #48	; 0x30
   1b024:	str	r2, [sp, #8]
   1b028:	str	r3, [sp, #12]
   1b02c:	add	r2, r8, #28
   1b030:	vldr	s16, [pc, #676]	; 1b2dc <__printf_chk@plt+0x8774>
   1b034:	str	r2, [sp, #16]
   1b038:	vldr	s17, [pc, #672]	; 1b2e0 <__printf_chk@plt+0x8778>
   1b03c:	ldr	sl, [r8, #524]	; 0x20c
   1b040:	cmp	sl, #0
   1b044:	ble	1b0f0 <__printf_chk@plt+0x8588>
   1b048:	ldr	fp, [r6, #16]
   1b04c:	mov	r0, r4
   1b050:	lsl	r1, fp, #1
   1b054:	bl	1c3b4 <__printf_chk@plt+0x984c>
   1b058:	mul	r0, r0, fp
   1b05c:	cmp	r0, sl
   1b060:	movlt	r9, r0
   1b064:	movge	r9, sl
   1b068:	ldr	r0, [r8, #520]	; 0x208
   1b06c:	cmp	r9, #0
   1b070:	lsl	lr, r9, #1
   1b074:	ble	1b0a0 <__printf_chk@plt+0x8538>
   1b078:	ldr	r2, [r8, #516]	; 0x204
   1b07c:	add	r1, r5, lr
   1b080:	mov	r3, r5
   1b084:	add	r2, r2, r0, lsl #2
   1b088:	vldmia	r2!, {s15}
   1b08c:	vcvt.s32.f32	s15, s15
   1b090:	vmov	ip, s15
   1b094:	strh	ip, [r3], #2
   1b098:	cmp	r3, r1
   1b09c:	bne	1b088 <__printf_chk@plt+0x8520>
   1b0a0:	add	r0, r0, r9
   1b0a4:	rsb	sl, r9, sl
   1b0a8:	str	r0, [r8, #520]	; 0x208
   1b0ac:	mov	r1, fp
   1b0b0:	str	sl, [r8, #524]	; 0x20c
   1b0b4:	mov	r0, r9
   1b0b8:	add	r5, r5, lr
   1b0bc:	bl	1c3b4 <__printf_chk@plt+0x984c>
   1b0c0:	sub	r4, r4, r9, lsl #1
   1b0c4:	ldr	r3, [r8, #568]	; 0x238
   1b0c8:	add	r0, r3, r0
   1b0cc:	str	r0, [r8, #568]	; 0x238
   1b0d0:	cmp	r4, #0
   1b0d4:	bne	1b03c <__printf_chk@plt+0x84d4>
   1b0d8:	mov	r4, #0
   1b0dc:	ldr	r3, [sp, #4]
   1b0e0:	rsb	r0, r4, r3
   1b0e4:	add	sp, sp, #36	; 0x24
   1b0e8:	vpop	{d8}
   1b0ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0f0:	ldr	r0, [sp, #8]
   1b0f4:	ldr	r1, [sp, #12]
   1b0f8:	bl	12994 <ogg_stream_packetout@plt>
   1b0fc:	cmp	r0, #1
   1b100:	beq	1b174 <__printf_chk@plt+0x860c>
   1b104:	mov	r0, r8
   1b108:	ldr	r1, [sp, #16]
   1b10c:	bl	12a0c <ogg_sync_pageout@plt>
   1b110:	cmp	r0, #1
   1b114:	beq	1b274 <__printf_chk@plt+0x870c>
   1b118:	ldr	r3, [r8, #544]	; 0x220
   1b11c:	cmp	r3, #0
   1b120:	bne	1b2bc <__printf_chk@plt+0x8754>
   1b124:	mov	r1, #200	; 0xc8
   1b128:	mov	r0, r8
   1b12c:	bl	129d0 <ogg_sync_buffer@plt>
   1b130:	ldr	r2, [sp, #20]
   1b134:	mov	r3, #200	; 0xc8
   1b138:	ldr	ip, [r2, #16]
   1b13c:	mov	r2, #1
   1b140:	mov	r1, r0
   1b144:	ldr	r0, [r7]
   1b148:	blx	ip
   1b14c:	subs	r9, r0, #0
   1b150:	mov	r0, r8
   1b154:	moveq	r3, #1
   1b158:	mov	r1, r9
   1b15c:	streq	r3, [r8, #544]	; 0x220
   1b160:	bl	12838 <ogg_sync_wrote@plt>
   1b164:	ldr	r3, [r8, #556]	; 0x22c
   1b168:	add	r9, r3, r9
   1b16c:	str	r9, [r8, #556]	; 0x22c
   1b170:	b	1b0d0 <__printf_chk@plt+0x8568>
   1b174:	add	r9, r8, #440	; 0x1b8
   1b178:	ldr	r1, [r8, #48]	; 0x30
   1b17c:	ldr	r2, [r8, #52]	; 0x34
   1b180:	mov	r0, r9
   1b184:	ldr	fp, [r8, #516]	; 0x204
   1b188:	bl	12ad8 <speex_bits_read_from@plt>
   1b18c:	ldr	r3, [r8, #528]	; 0x210
   1b190:	cmp	r3, #0
   1b194:	addgt	r3, r8, #476	; 0x1dc
   1b198:	strgt	r3, [sp, #28]
   1b19c:	movgt	sl, #0
   1b1a0:	ble	1b2cc <__printf_chk@plt+0x8764>
   1b1a4:	ldr	r0, [r8, #504]	; 0x1f8
   1b1a8:	mov	r1, r9
   1b1ac:	mov	r2, fp
   1b1b0:	bl	126b8 <speex_decode@plt>
   1b1b4:	ldr	r3, [r6, #16]
   1b1b8:	cmp	r3, #2
   1b1bc:	beq	1b238 <__printf_chk@plt+0x86d0>
   1b1c0:	ldr	r2, [r8, #532]	; 0x214
   1b1c4:	ldr	r0, [r8, #548]	; 0x224
   1b1c8:	mul	r1, r3, r2
   1b1cc:	add	r2, r0, r2
   1b1d0:	str	r2, [r8, #548]	; 0x224
   1b1d4:	cmp	r1, #0
   1b1d8:	lsl	r0, r1, #2
   1b1dc:	movgt	r3, fp
   1b1e0:	addgt	r2, fp, r0
   1b1e4:	ble	1b210 <__printf_chk@plt+0x86a8>
   1b1e8:	vldmia	r3!, {s15}
   1b1ec:	vcmpe.f32	s15, s16
   1b1f0:	vmrs	APSR_nzcv, fpscr
   1b1f4:	vstrgt	s16, [r3, #-4]
   1b1f8:	bgt	1b208 <__printf_chk@plt+0x86a0>
   1b1fc:	vcmpe.f32	s15, s17
   1b200:	vmrs	APSR_nzcv, fpscr
   1b204:	vstrmi	s17, [r3, #-4]
   1b208:	cmp	r3, r2
   1b20c:	bne	1b1e8 <__printf_chk@plt+0x8680>
   1b210:	ldr	r3, [r8, #528]	; 0x210
   1b214:	add	sl, sl, #1
   1b218:	add	fp, fp, r0
   1b21c:	cmp	r3, sl
   1b220:	bgt	1b1a4 <__printf_chk@plt+0x863c>
   1b224:	mul	r3, r1, r3
   1b228:	mov	r2, #0
   1b22c:	str	r2, [r8, #520]	; 0x208
   1b230:	str	r3, [r8, #524]	; 0x20c
   1b234:	b	1b0d0 <__printf_chk@plt+0x8568>
   1b238:	mov	r0, fp
   1b23c:	ldr	r1, [r8, #532]	; 0x214
   1b240:	ldr	r2, [sp, #28]
   1b244:	bl	129e8 <speex_decode_stereo@plt>
   1b248:	ldr	r3, [r6, #16]
   1b24c:	b	1b1c0 <__printf_chk@plt+0x8658>
   1b250:	bl	1adf0 <__printf_chk@plt+0x8288>
   1b254:	cmp	r0, #0
   1b258:	bne	1b284 <__printf_chk@plt+0x871c>
   1b25c:	ldr	r2, [sp, #24]
   1b260:	mov	r3, #1
   1b264:	str	r3, [r2]
   1b268:	add	sp, sp, #36	; 0x24
   1b26c:	vpop	{d8}
   1b270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b274:	ldr	r0, [sp, #8]
   1b278:	ldr	r1, [sp, #16]
   1b27c:	bl	12940 <ogg_stream_pagein@plt>
   1b280:	b	1b0d0 <__printf_chk@plt+0x8568>
   1b284:	ldr	r0, [r8, #500]	; 0x1f4
   1b288:	mov	r1, r4
   1b28c:	ldr	r2, [r7, #60]	; 0x3c
   1b290:	bl	1a9a0 <__printf_chk@plt+0x7e38>
   1b294:	ldr	r0, [r8, #508]	; 0x1fc
   1b298:	cmp	r0, #0
   1b29c:	beq	1b2b0 <__printf_chk@plt+0x8748>
   1b2a0:	mov	r2, r4
   1b2a4:	ldr	r1, [r8, #512]	; 0x200
   1b2a8:	ldr	r3, [r7, #60]	; 0x3c
   1b2ac:	bl	1aa48 <__printf_chk@plt+0x7ee0>
   1b2b0:	mov	r3, #0
   1b2b4:	str	r3, [r8, #540]	; 0x21c
   1b2b8:	b	1aff4 <__printf_chk@plt+0x848c>
   1b2bc:	ldr	r2, [sp, #24]
   1b2c0:	mov	r3, #1
   1b2c4:	str	r3, [r2]
   1b2c8:	b	1b0dc <__printf_chk@plt+0x8574>
   1b2cc:	ldr	r2, [r8, #532]	; 0x214
   1b2d0:	ldr	r1, [r6, #16]
   1b2d4:	mul	r1, r1, r2
   1b2d8:	b	1b224 <__printf_chk@plt+0x86bc>
   1b2dc:	ldrbtmi	r0, [sl], r0
   1b2e0:	ldrbtgt	r0, [sl], r0
   1b2e4:	andeq	r0, r0, r0
   1b2e8:	push	{r3, r4, r5, lr}
   1b2ec:	vpush	{d8-d9}
   1b2f0:	subs	r5, r1, #0
   1b2f4:	mov	r4, r0
   1b2f8:	beq	1b384 <__printf_chk@plt+0x881c>
   1b2fc:	movw	r1, #59560	; 0xe8a8
   1b300:	mov	r0, r5
   1b304:	movt	r1, #1
   1b308:	mov	r2, #0
   1b30c:	bl	12664 <vorbis_comment_query@plt>
   1b310:	cmp	r0, #0
   1b314:	beq	1b3ec <__printf_chk@plt+0x8884>
   1b318:	mov	r1, #0
   1b31c:	bl	12790 <strtod@plt>
   1b320:	vcvt.f32.f64	s18, d0
   1b324:	mov	r2, #0
   1b328:	movw	r1, #59636	; 0xe8f4
   1b32c:	mov	r0, r5
   1b330:	movt	r1, #1
   1b334:	bl	12664 <vorbis_comment_query@plt>
   1b338:	subs	r2, r0, #0
   1b33c:	beq	1b39c <__printf_chk@plt+0x8834>
   1b340:	mov	r0, r2
   1b344:	mov	r1, #0
   1b348:	bl	12790 <strtod@plt>
   1b34c:	vcvt.f64.f32	d1, s18
   1b350:	vldr	d7, [pc, #240]	; 1b448 <__printf_chk@plt+0x88e0>
   1b354:	vmul.f64	d1, d1, d7
   1b358:	vmov.f64	d8, d0
   1b35c:	vmov.f64	d0, #36	; 0x41200000  10.0
   1b360:	bl	124b4 <__pow_finite@plt>
   1b364:	vmov.f32	s15, #112	; 0x3f800000  1.0
   1b368:	vcvt.f32.f64	s16, d8
   1b36c:	vdiv.f32	s16, s15, s16
   1b370:	vcvt.f32.f64	s0, d0
   1b374:	vstr	s16, [r4, #4]
   1b378:	vpop	{d8-d9}
   1b37c:	vstr	s0, [r4]
   1b380:	pop	{r3, r4, r5, pc}
   1b384:	vmov.f32	s16, #112	; 0x3f800000  1.0
   1b388:	vmov.f32	s0, s16
   1b38c:	vstr	s16, [r4, #4]
   1b390:	vpop	{d8-d9}
   1b394:	vstr	s0, [r4]
   1b398:	pop	{r3, r4, r5, pc}
   1b39c:	movw	r1, #59660	; 0xe90c
   1b3a0:	mov	r0, r5
   1b3a4:	movt	r1, #1
   1b3a8:	bl	12664 <vorbis_comment_query@plt>
   1b3ac:	subs	r2, r0, #0
   1b3b0:	bne	1b340 <__printf_chk@plt+0x87d8>
   1b3b4:	mov	r0, r5
   1b3b8:	movw	r1, #59684	; 0xe924
   1b3bc:	movt	r1, #1
   1b3c0:	bl	12664 <vorbis_comment_query@plt>
   1b3c4:	subs	r2, r0, #0
   1b3c8:	bne	1b340 <__printf_chk@plt+0x87d8>
   1b3cc:	vcvt.f64.f32	d1, s18
   1b3d0:	vldr	d7, [pc, #112]	; 1b448 <__printf_chk@plt+0x88e0>
   1b3d4:	vmov.f64	d0, #36	; 0x41200000  10.0
   1b3d8:	vmul.f64	d1, d1, d7
   1b3dc:	bl	124b4 <__pow_finite@plt>
   1b3e0:	vmov.f32	s16, #112	; 0x3f800000  1.0
   1b3e4:	vcvt.f32.f64	s0, d0
   1b3e8:	b	1b374 <__printf_chk@plt+0x880c>
   1b3ec:	mov	r2, r0
   1b3f0:	movw	r1, #59584	; 0xe8c0
   1b3f4:	mov	r0, r5
   1b3f8:	movt	r1, #1
   1b3fc:	bl	12664 <vorbis_comment_query@plt>
   1b400:	cmp	r0, #0
   1b404:	bne	1b318 <__printf_chk@plt+0x87b0>
   1b408:	mov	r2, r0
   1b40c:	movw	r1, #59600	; 0xe8d0
   1b410:	mov	r0, r5
   1b414:	movt	r1, #1
   1b418:	bl	12664 <vorbis_comment_query@plt>
   1b41c:	cmp	r0, #0
   1b420:	bne	1b318 <__printf_chk@plt+0x87b0>
   1b424:	mov	r2, r0
   1b428:	movw	r1, #59624	; 0xe8e8
   1b42c:	mov	r0, r5
   1b430:	movt	r1, #1
   1b434:	bl	12664 <vorbis_comment_query@plt>
   1b438:	cmp	r0, #0
   1b43c:	bne	1b318 <__printf_chk@plt+0x87b0>
   1b440:	vldr	s18, [pc, #8]	; 1b450 <__printf_chk@plt+0x88e8>
   1b444:	b	1b324 <__printf_chk@plt+0x87bc>
   1b448:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1b44c:	svccc	0x00a99999
   1b450:	andeq	r0, r0, r0
   1b454:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b458:	vldr	s15, [r3, #4]
   1b45c:	vpush	{d8-d13}
   1b460:	vldr	s24, [r3]
   1b464:	vcmpe.f32	s24, s15
   1b468:	mov	r9, r0
   1b46c:	mov	r7, r1
   1b470:	mov	r8, r2
   1b474:	vmrs	APSR_nzcv, fpscr
   1b478:	ble	1b53c <__printf_chk@plt+0x89d4>
   1b47c:	cmp	r1, #0
   1b480:	ble	1b534 <__printf_chk@plt+0x89cc>
   1b484:	vmov.f32	s25, #224	; 0xbf000000 -0.5
   1b488:	lsl	sl, r2, #2
   1b48c:	mov	r6, #0
   1b490:	vmov.f32	s26, #96	; 0x3f000000  0.5
   1b494:	vmov.f64	d11, #224	; 0xbf000000 -0.5
   1b498:	vmov.f64	d10, #112	; 0x3f800000  1.0
   1b49c:	vmov.f64	d8, #96	; 0x3f000000  0.5
   1b4a0:	vmov.f64	d9, #240	; 0xbf800000 -1.0
   1b4a4:	cmp	r8, #0
   1b4a8:	ble	1b528 <__printf_chk@plt+0x89c0>
   1b4ac:	ldr	r4, [r9, r6, lsl #2]
   1b4b0:	add	r5, sl, r4
   1b4b4:	b	1b4e0 <__printf_chk@plt+0x8978>
   1b4b8:	vcvt.f64.f32	d0, s0
   1b4bc:	vadd.f64	d0, d0, d8
   1b4c0:	vadd.f64	d0, d0, d0
   1b4c4:	bl	129ac <tanh@plt>
   1b4c8:	vadd.f64	d0, d0, d9
   1b4cc:	vmul.f64	d0, d0, d8
   1b4d0:	vcvt.f32.f64	s0, d0
   1b4d4:	cmp	r4, r5
   1b4d8:	vstr	s0, [r4, #-4]
   1b4dc:	beq	1b528 <__printf_chk@plt+0x89c0>
   1b4e0:	vldmia	r4!, {s0}
   1b4e4:	vmul.f32	s0, s0, s24
   1b4e8:	vcmpe.f32	s0, s25
   1b4ec:	vmrs	APSR_nzcv, fpscr
   1b4f0:	bmi	1b4b8 <__printf_chk@plt+0x8950>
   1b4f4:	vcmpe.f32	s0, s26
   1b4f8:	vmrs	APSR_nzcv, fpscr
   1b4fc:	ble	1b4d4 <__printf_chk@plt+0x896c>
   1b500:	vcvt.f64.f32	d0, s0
   1b504:	vadd.f64	d0, d0, d11
   1b508:	vadd.f64	d0, d0, d0
   1b50c:	bl	129ac <tanh@plt>
   1b510:	cmp	r4, r5
   1b514:	vadd.f64	d0, d0, d10
   1b518:	vmul.f64	d0, d0, d8
   1b51c:	vcvt.f32.f64	s0, d0
   1b520:	vstr	s0, [r4, #-4]
   1b524:	bne	1b4e0 <__printf_chk@plt+0x8978>
   1b528:	add	r6, r6, #1
   1b52c:	cmp	r6, r7
   1b530:	bne	1b4a4 <__printf_chk@plt+0x893c>
   1b534:	vpop	{d8-d13}
   1b538:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b53c:	vcmpe.f32	s24, #0.0
   1b540:	vmrs	APSR_nzcv, fpscr
   1b544:	ble	1b534 <__printf_chk@plt+0x89cc>
   1b548:	cmp	r1, #0
   1b54c:	ble	1b534 <__printf_chk@plt+0x89cc>
   1b550:	lsl	r1, r2, #2
   1b554:	mov	r2, #0
   1b558:	cmp	r8, #0
   1b55c:	ble	1b57c <__printf_chk@plt+0x8a14>
   1b560:	ldr	r3, [r9, r2, lsl #2]
   1b564:	add	ip, r1, r3
   1b568:	vldr	s15, [r3]
   1b56c:	vmul.f32	s15, s15, s24
   1b570:	vstmia	r3!, {s15}
   1b574:	cmp	r3, ip
   1b578:	bne	1b568 <__printf_chk@plt+0x8a00>
   1b57c:	add	r2, r2, #1
   1b580:	cmp	r2, r7
   1b584:	bne	1b558 <__printf_chk@plt+0x89f0>
   1b588:	vpop	{d8-d13}
   1b58c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b590:	push	{r4, r5, r6, r7, r8, lr}
   1b594:	mov	r7, r0
   1b598:	sub	sp, sp, #8
   1b59c:	mov	r0, r2
   1b5a0:	mov	r6, r3
   1b5a4:	mov	r4, r2
   1b5a8:	mov	r8, r1
   1b5ac:	bl	1297c <strlen@plt>
   1b5b0:	mov	ip, #0
   1b5b4:	str	r6, [sp]
   1b5b8:	mov	r1, r8
   1b5bc:	mov	r2, r4
   1b5c0:	str	ip, [sp, #4]
   1b5c4:	mov	r5, r0
   1b5c8:	mov	r0, r7
   1b5cc:	mov	r3, r5
   1b5d0:	ldrsb	r7, [sp, #32]
   1b5d4:	bl	1b890 <__printf_chk@plt+0x8d28>
   1b5d8:	cmn	r0, #2
   1b5dc:	beq	1b63c <__printf_chk@plt+0x8ad4>
   1b5e0:	cmn	r0, #1
   1b5e4:	beq	1b5f0 <__printf_chk@plt+0x8a88>
   1b5e8:	add	sp, sp, #8
   1b5ec:	pop	{r4, r5, r6, r7, r8, pc}
   1b5f0:	add	r0, r5, #1
   1b5f4:	bl	12958 <malloc@plt>
   1b5f8:	subs	r5, r0, #0
   1b5fc:	beq	1b63c <__printf_chk@plt+0x8ad4>
   1b600:	mov	r1, r4
   1b604:	bl	12760 <strcpy@plt>
   1b608:	str	r5, [r6]
   1b60c:	ldrb	r3, [r5]
   1b610:	cmp	r3, #0
   1b614:	addne	r2, r5, #1
   1b618:	beq	1b630 <__printf_chk@plt+0x8ac8>
   1b61c:	tst	r3, #128	; 0x80
   1b620:	strbne	r7, [r2, #-1]
   1b624:	ldrb	r3, [r2], #1
   1b628:	cmp	r3, #0
   1b62c:	bne	1b61c <__printf_chk@plt+0x8ab4>
   1b630:	mov	r0, #3
   1b634:	add	sp, sp, #8
   1b638:	pop	{r4, r5, r6, r7, r8, pc}
   1b63c:	mvn	r0, #0
   1b640:	b	1b5e8 <__printf_chk@plt+0x8a80>
   1b644:	push	{r3, r4, r5, lr}
   1b648:	subs	r5, r0, #0
   1b64c:	movw	r4, #1632	; 0x660
   1b650:	movt	r4, #3
   1b654:	beq	1b684 <__printf_chk@plt+0x8b1c>
   1b658:	ldr	r0, [r4]
   1b65c:	bl	12520 <free@plt>
   1b660:	mov	r3, #0
   1b664:	str	r3, [r4]
   1b668:	ldrsb	r3, [r5]
   1b66c:	cmp	r3, #0
   1b670:	popeq	{r3, r4, r5, pc}
   1b674:	mov	r0, r5
   1b678:	bl	126c4 <__strdup@plt>
   1b67c:	str	r0, [r4]
   1b680:	pop	{r3, r4, r5, pc}
   1b684:	movw	r0, #59740	; 0xe95c
   1b688:	movt	r0, #1
   1b68c:	bl	12af0 <getenv@plt>
   1b690:	subs	r5, r0, #0
   1b694:	bne	1b658 <__printf_chk@plt+0x8af0>
   1b698:	mov	r0, #14
   1b69c:	bl	12610 <nl_langinfo@plt>
   1b6a0:	mov	r5, r0
   1b6a4:	ldr	r0, [r4]
   1b6a8:	bl	12520 <free@plt>
   1b6ac:	cmp	r5, #0
   1b6b0:	mov	r3, #0
   1b6b4:	str	r3, [r4]
   1b6b8:	popeq	{r3, r4, r5, pc}
   1b6bc:	b	1b668 <__printf_chk@plt+0x8b00>
   1b6c0:	push	{r4, lr}
   1b6c4:	movw	r4, #1632	; 0x660
   1b6c8:	movt	r4, #3
   1b6cc:	mov	r2, r0
   1b6d0:	sub	sp, sp, #16
   1b6d4:	mov	r3, r1
   1b6d8:	ldr	r0, [r4]
   1b6dc:	cmp	r0, #0
   1b6e0:	beq	1b700 <__printf_chk@plt+0x8b98>
   1b6e4:	mov	ip, #35	; 0x23
   1b6e8:	movw	r1, #59760	; 0xe970
   1b6ec:	str	ip, [sp]
   1b6f0:	movt	r1, #1
   1b6f4:	bl	1b590 <__printf_chk@plt+0x8a28>
   1b6f8:	add	sp, sp, #16
   1b6fc:	pop	{r4, pc}
   1b700:	str	r2, [sp, #12]
   1b704:	str	r1, [sp, #8]
   1b708:	bl	1b644 <__printf_chk@plt+0x8adc>
   1b70c:	ldr	r0, [r4]
   1b710:	movw	r1, #59748	; 0xe964
   1b714:	movt	r1, #1
   1b718:	ldr	r3, [sp, #8]
   1b71c:	cmp	r0, #0
   1b720:	ldr	r2, [sp, #12]
   1b724:	moveq	r0, r1
   1b728:	b	1b6e4 <__printf_chk@plt+0x8b7c>
   1b72c:	push	{r4, r5, lr}
   1b730:	mov	r2, r0
   1b734:	ldrsb	r4, [r0]
   1b738:	sub	sp, sp, #20
   1b73c:	mov	r5, r1
   1b740:	cmp	r4, #0
   1b744:	beq	1b77c <__printf_chk@plt+0x8c14>
   1b748:	movw	r4, #1632	; 0x660
   1b74c:	movt	r4, #3
   1b750:	ldr	r1, [r4]
   1b754:	cmp	r1, #0
   1b758:	beq	1b79c <__printf_chk@plt+0x8c34>
   1b75c:	mov	ip, #63	; 0x3f
   1b760:	mov	r3, r5
   1b764:	str	ip, [sp]
   1b768:	movw	r0, #59760	; 0xe970
   1b76c:	movt	r0, #1
   1b770:	bl	1b590 <__printf_chk@plt+0x8a28>
   1b774:	add	sp, sp, #20
   1b778:	pop	{r4, r5, pc}
   1b77c:	mov	r0, #1
   1b780:	bl	12958 <malloc@plt>
   1b784:	mov	r3, r0
   1b788:	strb	r4, [r0]
   1b78c:	mov	r0, #1
   1b790:	str	r3, [r5]
   1b794:	add	sp, sp, #20
   1b798:	pop	{r4, r5, pc}
   1b79c:	mov	r0, r1
   1b7a0:	str	r2, [sp, #12]
   1b7a4:	bl	1b644 <__printf_chk@plt+0x8adc>
   1b7a8:	ldr	r1, [r4]
   1b7ac:	movw	r3, #59748	; 0xe964
   1b7b0:	movt	r3, #1
   1b7b4:	cmp	r1, #0
   1b7b8:	ldr	r2, [sp, #12]
   1b7bc:	moveq	r1, r3
   1b7c0:	b	1b75c <__printf_chk@plt+0x8bf4>
   1b7c4:	push	{r4, r5, r6, lr}
   1b7c8:	mov	r6, r0
   1b7cc:	bl	1297c <strlen@plt>
   1b7d0:	cmp	r0, #0
   1b7d4:	movwne	r5, #59692	; 0xe92c
   1b7d8:	movtne	r5, #1
   1b7dc:	beq	1b888 <__printf_chk@plt+0x8d20>
   1b7e0:	ldrb	r4, [r6]
   1b7e4:	tst	r4, #128	; 0x80
   1b7e8:	beq	1b824 <__printf_chk@plt+0x8cbc>
   1b7ec:	movw	r3, #59692	; 0xe92c
   1b7f0:	movt	r3, #1
   1b7f4:	mov	r2, #1
   1b7f8:	ldrb	ip, [r3, #8]
   1b7fc:	add	r3, r3, #8
   1b800:	ldrb	r1, [r3, #1]
   1b804:	and	ip, ip, r4
   1b808:	cmp	ip, r1
   1b80c:	beq	1b828 <__printf_chk@plt+0x8cc0>
   1b810:	add	r2, r2, #1
   1b814:	cmp	r2, #6
   1b818:	bne	1b7f8 <__printf_chk@plt+0x8c90>
   1b81c:	mov	r0, #0
   1b820:	pop	{r4, r5, r6, pc}
   1b824:	mov	r2, #0
   1b828:	add	r2, r5, r2, lsl #3
   1b82c:	ldr	ip, [r2, #4]
   1b830:	add	r4, ip, #1
   1b834:	cmp	r4, r0
   1b838:	bhi	1b81c <__printf_chk@plt+0x8cb4>
   1b83c:	cmp	ip, #0
   1b840:	add	r3, r6, #1
   1b844:	ble	1b878 <__printf_chk@plt+0x8d10>
   1b848:	ldrsb	r2, [r6, #1]
   1b84c:	and	r2, r2, #192	; 0xc0
   1b850:	cmp	r2, #128	; 0x80
   1b854:	bne	1b81c <__printf_chk@plt+0x8cb4>
   1b858:	add	r1, r6, ip
   1b85c:	b	1b870 <__printf_chk@plt+0x8d08>
   1b860:	ldrsb	r2, [r3, #1]!
   1b864:	and	r2, r2, #192	; 0xc0
   1b868:	cmp	r2, #128	; 0x80
   1b86c:	bne	1b81c <__printf_chk@plt+0x8cb4>
   1b870:	cmp	r3, r1
   1b874:	bne	1b860 <__printf_chk@plt+0x8cf8>
   1b878:	rsb	r0, ip, r0
   1b87c:	add	r6, r6, r4
   1b880:	subs	r0, r0, #1
   1b884:	bne	1b7e0 <__printf_chk@plt+0x8c78>
   1b888:	mov	r0, #1
   1b88c:	pop	{r4, r5, r6, pc}
   1b890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b894:	sub	sp, sp, #2128	; 0x850
   1b898:	sub	sp, sp, #4
   1b89c:	movw	ip, #1408	; 0x580
   1b8a0:	movt	ip, #3
   1b8a4:	mov	r7, r0
   1b8a8:	str	ip, [sp, #24]
   1b8ac:	mov	r4, r1
   1b8b0:	ldr	ip, [ip]
   1b8b4:	mov	r1, r0
   1b8b8:	movw	r0, #59760	; 0xe970
   1b8bc:	movt	r0, #1
   1b8c0:	mov	r5, r2
   1b8c4:	mov	r8, r3
   1b8c8:	str	ip, [sp, #2124]	; 0x84c
   1b8cc:	ldr	ip, [sp, #2168]	; 0x878
   1b8d0:	str	ip, [sp, #32]
   1b8d4:	ldr	ip, [sp, #2172]	; 0x87c
   1b8d8:	str	ip, [sp, #36]	; 0x24
   1b8dc:	bl	12a00 <iconv_open@plt>
   1b8e0:	cmn	r0, #1
   1b8e4:	mov	fp, r0
   1b8e8:	beq	1bd64 <__printf_chk@plt+0x91fc>
   1b8ec:	movw	r0, #59780	; 0xe984
   1b8f0:	ldrsb	r1, [r4]
   1b8f4:	movt	r0, #1
   1b8f8:	bl	12b44 <strchr@plt>
   1b8fc:	cmp	r0, #0
   1b900:	beq	1b940 <__printf_chk@plt+0x8dd8>
   1b904:	movw	r0, #59784	; 0xe988
   1b908:	ldrsb	r1, [r4, #1]
   1b90c:	movt	r0, #1
   1b910:	bl	12b44 <strchr@plt>
   1b914:	cmp	r0, #0
   1b918:	beq	1b940 <__printf_chk@plt+0x8dd8>
   1b91c:	movw	r0, #59788	; 0xe98c
   1b920:	ldrsb	r1, [r4, #2]
   1b924:	movt	r0, #1
   1b928:	bl	12b44 <strchr@plt>
   1b92c:	cmp	r0, #0
   1b930:	beq	1b940 <__printf_chk@plt+0x8dd8>
   1b934:	ldrsb	r3, [r4, #3]
   1b938:	cmp	r3, #45	; 0x2d
   1b93c:	beq	1c018 <__printf_chk@plt+0x94b0>
   1b940:	mov	r0, r4
   1b944:	bl	1297c <strlen@plt>
   1b948:	mov	r6, r0
   1b94c:	add	r0, r0, #11
   1b950:	bl	12958 <malloc@plt>
   1b954:	subs	r9, r0, #0
   1b958:	beq	1bfa4 <__printf_chk@plt+0x943c>
   1b95c:	mov	r2, r6
   1b960:	mov	r1, r4
   1b964:	bl	12934 <memcpy@plt>
   1b968:	movw	r3, #59792	; 0xe990
   1b96c:	movt	r3, #1
   1b970:	add	r2, r9, r6
   1b974:	ldm	r3!, {r0, r1}
   1b978:	ldrh	ip, [r3]
   1b97c:	ldrb	r3, [r3, #2]
   1b980:	str	r0, [r9, r6]
   1b984:	mov	r0, r9
   1b988:	str	r1, [r2, #4]
   1b98c:	movw	r1, #59760	; 0xe970
   1b990:	strh	ip, [r2, #8]
   1b994:	movt	r1, #1
   1b998:	strb	r3, [r2, #10]
   1b99c:	bl	12a00 <iconv_open@plt>
   1b9a0:	mov	r6, r0
   1b9a4:	mov	r0, r9
   1b9a8:	bl	12520 <free@plt>
   1b9ac:	cmn	r6, #1
   1b9b0:	beq	1c0c4 <__printf_chk@plt+0x955c>
   1b9b4:	mov	r0, #1
   1b9b8:	bl	12958 <malloc@plt>
   1b9bc:	subs	r9, r0, #0
   1b9c0:	beq	1bfe4 <__printf_chk@plt+0x947c>
   1b9c4:	mov	r3, #1
   1b9c8:	add	r4, sp, #2128	; 0x850
   1b9cc:	str	r5, [sp, #52]	; 0x34
   1b9d0:	mov	r7, r3
   1b9d4:	str	r8, [sp, #60]	; 0x3c
   1b9d8:	mov	r5, #0
   1b9dc:	mov	r8, #35	; 0x23
   1b9e0:	str	r9, [sp, #56]	; 0x38
   1b9e4:	str	r3, [r4, #-2064]!	; 0xfffff7f0
   1b9e8:	str	r4, [sp]
   1b9ec:	mov	r0, fp
   1b9f0:	add	r1, sp, #52	; 0x34
   1b9f4:	add	r2, sp, #60	; 0x3c
   1b9f8:	add	r3, sp, #56	; 0x38
   1b9fc:	bl	12a3c <iconv@plt>
   1ba00:	cmn	r0, #1
   1ba04:	beq	1bafc <__printf_chk@plt+0x8f94>
   1ba08:	ldr	r8, [sp, #60]	; 0x3c
   1ba0c:	cmp	r8, #0
   1ba10:	beq	1ba34 <__printf_chk@plt+0x8ecc>
   1ba14:	movw	r0, #59804	; 0xe99c
   1ba18:	movw	r1, #60000	; 0xea60
   1ba1c:	movw	r3, #59768	; 0xe978
   1ba20:	movt	r0, #1
   1ba24:	movt	r1, #1
   1ba28:	mov	r2, #115	; 0x73
   1ba2c:	movt	r3, #1
   1ba30:	bl	12778 <__assert_fail@plt>
   1ba34:	cmn	r6, #1
   1ba38:	beq	1c058 <__printf_chk@plt+0x94f0>
   1ba3c:	ldr	r3, [sp, #56]	; 0x38
   1ba40:	mov	r0, r9
   1ba44:	rsb	r3, r9, r3
   1ba48:	str	r3, [sp, #28]
   1ba4c:	mov	r1, r3
   1ba50:	bl	12754 <realloc@plt>
   1ba54:	cmp	r0, #0
   1ba58:	str	r0, [sp, #44]	; 0x2c
   1ba5c:	beq	1c03c <__printf_chk@plt+0x94d4>
   1ba60:	ldr	ip, [sp, #28]
   1ba64:	str	r0, [sp, #52]	; 0x34
   1ba68:	cmp	ip, #0
   1ba6c:	str	ip, [sp, #60]	; 0x3c
   1ba70:	beq	1c114 <__printf_chk@plt+0x95ac>
   1ba74:	add	ip, sp, #80	; 0x50
   1ba78:	str	ip, [sp, #40]	; 0x28
   1ba7c:	ldr	ip, [sp, #40]	; 0x28
   1ba80:	add	r7, sp, #76	; 0x4c
   1ba84:	mov	r9, #2048	; 0x800
   1ba88:	sub	ip, ip, #12
   1ba8c:	str	ip, [sp, #16]
   1ba90:	ldr	ip, [sp, #40]	; 0x28
   1ba94:	sub	ip, ip, #8
   1ba98:	str	ip, [sp, #20]
   1ba9c:	movw	ip, #60164	; 0xeb04
   1baa0:	movt	ip, #1
   1baa4:	str	ip, [sp, #12]
   1baa8:	str	r4, [sp]
   1baac:	mov	r0, r6
   1bab0:	add	r1, sp, #52	; 0x34
   1bab4:	add	r2, sp, #60	; 0x3c
   1bab8:	add	r3, sp, #56	; 0x38
   1babc:	str	r7, [sp, #56]	; 0x38
   1bac0:	str	r9, [sp, #64]	; 0x40
   1bac4:	bl	12a3c <iconv@plt>
   1bac8:	cmn	r0, #1
   1bacc:	beq	1be74 <__printf_chk@plt+0x930c>
   1bad0:	ldr	r3, [sp, #60]	; 0x3c
   1bad4:	cmp	r3, #0
   1bad8:	beq	1bbbc <__printf_chk@plt+0x9054>
   1badc:	movw	r0, #60012	; 0xea6c
   1bae0:	movw	r1, #60000	; 0xea60
   1bae4:	movw	r3, #59768	; 0xe978
   1bae8:	movt	r0, #1
   1baec:	movt	r1, #1
   1baf0:	mov	r2, #173	; 0xad
   1baf4:	movt	r3, #1
   1baf8:	bl	12778 <__assert_fail@plt>
   1bafc:	bl	12a48 <__errno_location@plt>
   1bb00:	ldr	r3, [r0]
   1bb04:	cmp	r3, #7
   1bb08:	beq	1bb68 <__printf_chk@plt+0x9000>
   1bb0c:	cmp	r3, #22
   1bb10:	cmpne	r3, #84	; 0x54
   1bb14:	bne	1ba14 <__printf_chk@plt+0x8eac>
   1bb18:	ldr	r2, [sp, #60]	; 0x3c
   1bb1c:	cmp	r2, #0
   1bb20:	beq	1ba14 <__printf_chk@plt+0x8eac>
   1bb24:	ldr	r3, [sp, #64]	; 0x40
   1bb28:	cmp	r3, #5
   1bb2c:	bls	1bb80 <__printf_chk@plt+0x9018>
   1bb30:	ldr	r3, [sp, #56]	; 0x38
   1bb34:	sub	r1, r2, #1
   1bb38:	ldr	r2, [sp, #52]	; 0x34
   1bb3c:	mov	r5, #2
   1bb40:	str	r1, [sp, #60]	; 0x3c
   1bb44:	add	r1, r3, #1
   1bb48:	add	r2, r2, #1
   1bb4c:	str	r1, [sp, #56]	; 0x38
   1bb50:	str	r2, [sp, #52]	; 0x34
   1bb54:	strb	r8, [r3]
   1bb58:	ldr	r3, [sp, #64]	; 0x40
   1bb5c:	sub	r3, r3, #1
   1bb60:	str	r3, [sp, #64]	; 0x40
   1bb64:	b	1b9e8 <__printf_chk@plt+0x8e80>
   1bb68:	ldr	r3, [sp, #60]	; 0x3c
   1bb6c:	cmp	r3, #0
   1bb70:	beq	1ba14 <__printf_chk@plt+0x8eac>
   1bb74:	ldr	r3, [sp, #64]	; 0x40
   1bb78:	cmp	r3, #5
   1bb7c:	bhi	1ba14 <__printf_chk@plt+0x8eac>
   1bb80:	lsl	r7, r7, #1
   1bb84:	mov	r0, r9
   1bb88:	mov	r1, r7
   1bb8c:	bl	12754 <realloc@plt>
   1bb90:	cmp	r0, #0
   1bb94:	beq	1bfe4 <__printf_chk@plt+0x947c>
   1bb98:	ldr	r3, [sp, #56]	; 0x38
   1bb9c:	rsb	r3, r9, r3
   1bba0:	mov	r9, r0
   1bba4:	add	r3, r0, r3
   1bba8:	str	r3, [sp, #56]	; 0x38
   1bbac:	rsb	r3, r3, r0
   1bbb0:	add	r3, r3, r7
   1bbb4:	str	r3, [sp, #64]	; 0x40
   1bbb8:	b	1b9e8 <__printf_chk@plt+0x8e80>
   1bbbc:	ldr	r3, [sp, #56]	; 0x38
   1bbc0:	rsb	r3, r7, r3
   1bbc4:	add	r8, r8, r3
   1bbc8:	mov	r1, #0
   1bbcc:	str	r4, [sp]
   1bbd0:	mov	r2, r1
   1bbd4:	mov	r0, r6
   1bbd8:	add	r3, sp, #56	; 0x38
   1bbdc:	mov	ip, #2048	; 0x800
   1bbe0:	str	r7, [sp, #56]	; 0x38
   1bbe4:	str	ip, [sp, #64]	; 0x40
   1bbe8:	bl	12a3c <iconv@plt>
   1bbec:	cmn	r0, #1
   1bbf0:	beq	1c188 <__printf_chk@plt+0x9620>
   1bbf4:	ldr	r3, [sp, #56]	; 0x38
   1bbf8:	rsb	r7, r7, r3
   1bbfc:	add	r7, r8, r7
   1bc00:	str	r7, [sp, #16]
   1bc04:	add	r0, r7, #1
   1bc08:	bl	12958 <malloc@plt>
   1bc0c:	cmp	r0, #0
   1bc10:	str	r0, [sp, #20]
   1bc14:	beq	1c038 <__printf_chk@plt+0x94d0>
   1bc18:	ldr	ip, [sp, #44]	; 0x2c
   1bc1c:	movw	r7, #60164	; 0xeb04
   1bc20:	ldr	r8, [sp, #28]
   1bc24:	movt	r7, #1
   1bc28:	mov	sl, #1
   1bc2c:	str	r0, [sp, #56]	; 0x38
   1bc30:	str	ip, [sp, #52]	; 0x34
   1bc34:	ldr	ip, [sp, #16]
   1bc38:	str	r8, [sp, #60]	; 0x3c
   1bc3c:	str	ip, [sp, #64]	; 0x40
   1bc40:	ldr	ip, [sp, #40]	; 0x28
   1bc44:	sub	ip, ip, #12
   1bc48:	str	ip, [sp, #8]
   1bc4c:	ldr	ip, [sp, #40]	; 0x28
   1bc50:	sub	ip, ip, #8
   1bc54:	str	ip, [sp, #12]
   1bc58:	cmp	r8, #0
   1bc5c:	beq	1bcec <__printf_chk@plt+0x9184>
   1bc60:	str	r4, [sp]
   1bc64:	mov	r0, r6
   1bc68:	add	r1, sp, #52	; 0x34
   1bc6c:	add	r2, sp, #60	; 0x3c
   1bc70:	add	r3, sp, #56	; 0x38
   1bc74:	bl	12a3c <iconv@plt>
   1bc78:	cmn	r0, #1
   1bc7c:	mov	r9, r0
   1bc80:	beq	1bcb0 <__printf_chk@plt+0x9148>
   1bc84:	ldr	r8, [sp, #60]	; 0x3c
   1bc88:	cmp	r8, #0
   1bc8c:	beq	1bccc <__printf_chk@plt+0x9164>
   1bc90:	movw	r0, #60280	; 0xeb78
   1bc94:	movw	r1, #60000	; 0xea60
   1bc98:	movw	r3, #59768	; 0xe978
   1bc9c:	movt	r0, #1
   1bca0:	movt	r1, #1
   1bca4:	mov	r2, #207	; 0xcf
   1bca8:	movt	r3, #1
   1bcac:	bl	12778 <__assert_fail@plt>
   1bcb0:	bl	12a48 <__errno_location@plt>
   1bcb4:	ldr	r3, [r0]
   1bcb8:	cmp	r3, #84	; 0x54
   1bcbc:	bne	1bc90 <__printf_chk@plt+0x9128>
   1bcc0:	ldr	r8, [sp, #60]	; 0x3c
   1bcc4:	cmp	r8, #0
   1bcc8:	beq	1bc90 <__printf_chk@plt+0x9128>
   1bccc:	adds	r3, r9, #0
   1bcd0:	movne	r3, #1
   1bcd4:	cmp	r5, #0
   1bcd8:	movne	r3, #0
   1bcdc:	cmp	r3, #0
   1bce0:	movne	r5, #1
   1bce4:	cmp	r8, #0
   1bce8:	bne	1bd84 <__printf_chk@plt+0x921c>
   1bcec:	mov	r1, #0
   1bcf0:	str	r4, [sp]
   1bcf4:	add	r3, sp, #56	; 0x38
   1bcf8:	mov	r2, r1
   1bcfc:	mov	r0, r6
   1bd00:	bl	12a3c <iconv@plt>
   1bd04:	cmn	r0, #1
   1bd08:	beq	1c128 <__printf_chk@plt+0x95c0>
   1bd0c:	ldr	r3, [sp, #64]	; 0x40
   1bd10:	cmp	r3, #0
   1bd14:	bne	1c168 <__printf_chk@plt+0x9600>
   1bd18:	ldr	r3, [sp, #56]	; 0x38
   1bd1c:	ldr	r0, [sp, #44]	; 0x2c
   1bd20:	strb	r8, [r3]
   1bd24:	bl	12520 <free@plt>
   1bd28:	mov	r0, fp
   1bd2c:	bl	128f8 <iconv_close@plt>
   1bd30:	mov	r0, r6
   1bd34:	bl	128f8 <iconv_close@plt>
   1bd38:	ldr	ip, [sp, #36]	; 0x24
   1bd3c:	cmp	ip, #0
   1bd40:	ldrne	r1, [sp, #16]
   1bd44:	strne	r1, [ip]
   1bd48:	ldr	ip, [sp, #32]
   1bd4c:	cmp	ip, #0
   1bd50:	beq	1c0ec <__printf_chk@plt+0x9584>
   1bd54:	ldr	ip, [sp, #20]
   1bd58:	mov	r0, r5
   1bd5c:	ldr	r1, [sp, #32]
   1bd60:	str	ip, [r1]
   1bd64:	ldr	ip, [sp, #24]
   1bd68:	ldr	r2, [sp, #2124]	; 0x84c
   1bd6c:	ldr	r3, [ip]
   1bd70:	cmp	r2, r3
   1bd74:	bne	1c148 <__printf_chk@plt+0x95e0>
   1bd78:	add	sp, sp, #2128	; 0x850
   1bd7c:	add	sp, sp, #4
   1bd80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd84:	cmn	r9, #1
   1bd88:	bne	1bd9c <__printf_chk@plt+0x9234>
   1bd8c:	bl	12a48 <__errno_location@plt>
   1bd90:	ldr	r3, [r0]
   1bd94:	cmp	r3, #7
   1bd98:	beq	1bc58 <__printf_chk@plt+0x90f0>
   1bd9c:	str	r4, [sp]
   1bda0:	mov	r0, r6
   1bda4:	ldr	r1, [sp, #8]
   1bda8:	add	r3, sp, #56	; 0x38
   1bdac:	ldr	r2, [sp, #12]
   1bdb0:	str	r7, [sp, #68]	; 0x44
   1bdb4:	str	sl, [sp, #72]	; 0x48
   1bdb8:	bl	12a3c <iconv@plt>
   1bdbc:	cmn	r0, #1
   1bdc0:	beq	1bdf0 <__printf_chk@plt+0x9288>
   1bdc4:	ldr	r3, [sp, #72]	; 0x48
   1bdc8:	cmp	r3, #0
   1bdcc:	beq	1be0c <__printf_chk@plt+0x92a4>
   1bdd0:	movw	r0, #60168	; 0xeb08
   1bdd4:	movw	r1, #60000	; 0xea60
   1bdd8:	movw	r3, #59768	; 0xe978
   1bddc:	movt	r0, #1
   1bde0:	movt	r1, #1
   1bde4:	mov	r2, #217	; 0xd9
   1bde8:	movt	r3, #1
   1bdec:	bl	12778 <__assert_fail@plt>
   1bdf0:	bl	12a48 <__errno_location@plt>
   1bdf4:	ldr	r3, [r0]
   1bdf8:	cmp	r3, #84	; 0x54
   1bdfc:	bne	1bdd0 <__printf_chk@plt+0x9268>
   1be00:	ldr	r3, [sp, #72]	; 0x48
   1be04:	cmp	r3, #0
   1be08:	beq	1bdd0 <__printf_chk@plt+0x9268>
   1be0c:	ldr	r0, [sp, #60]	; 0x3c
   1be10:	ldr	r3, [sp, #52]	; 0x34
   1be14:	sub	r2, r0, #1
   1be18:	str	r2, [sp, #60]	; 0x3c
   1be1c:	cmp	r2, #0
   1be20:	add	r1, r3, #1
   1be24:	str	r1, [sp, #52]	; 0x34
   1be28:	beq	1c010 <__printf_chk@plt+0x94a8>
   1be2c:	ldrsb	r1, [r3, #1]
   1be30:	cmp	r1, #0
   1be34:	bge	1c050 <__printf_chk@plt+0x94e8>
   1be38:	sub	r8, r0, #2
   1be3c:	add	r0, r3, r0
   1be40:	add	r3, r3, #2
   1be44:	b	1be60 <__printf_chk@plt+0x92f8>
   1be48:	ldrsb	r2, [r3]
   1be4c:	sub	r1, r8, #1
   1be50:	add	r3, r3, #1
   1be54:	cmp	r2, #0
   1be58:	bge	1bc58 <__printf_chk@plt+0x90f0>
   1be5c:	mov	r8, r1
   1be60:	cmp	r3, r0
   1be64:	str	r3, [sp, #52]	; 0x34
   1be68:	str	r8, [sp, #60]	; 0x3c
   1be6c:	bne	1be48 <__printf_chk@plt+0x92e0>
   1be70:	b	1bc58 <__printf_chk@plt+0x90f0>
   1be74:	bl	12a48 <__errno_location@plt>
   1be78:	ldr	r3, [r0]
   1be7c:	str	r0, [sp, #8]
   1be80:	cmp	r3, #7
   1be84:	beq	1c14c <__printf_chk@plt+0x95e4>
   1be88:	cmp	r3, #84	; 0x54
   1be8c:	bne	1badc <__printf_chk@plt+0x8f74>
   1be90:	ldr	r3, [sp, #60]	; 0x3c
   1be94:	cmp	r3, #0
   1be98:	beq	1badc <__printf_chk@plt+0x8f74>
   1be9c:	ldr	lr, [sp, #12]
   1bea0:	mov	r0, r6
   1bea4:	ldr	ip, [sp, #56]	; 0x38
   1bea8:	add	r3, sp, #56	; 0x38
   1beac:	str	r4, [sp]
   1beb0:	ldr	r1, [sp, #16]
   1beb4:	rsb	sl, r7, ip
   1beb8:	ldr	r2, [sp, #20]
   1bebc:	mov	ip, #1
   1bec0:	str	lr, [sp, #68]	; 0x44
   1bec4:	str	ip, [sp, #72]	; 0x48
   1bec8:	str	r9, [sp, #64]	; 0x40
   1becc:	str	r7, [sp, #56]	; 0x38
   1bed0:	bl	12a3c <iconv@plt>
   1bed4:	cmn	r0, #1
   1bed8:	beq	1bf08 <__printf_chk@plt+0x93a0>
   1bedc:	ldr	r3, [sp, #72]	; 0x48
   1bee0:	cmp	r3, #0
   1bee4:	beq	1bf24 <__printf_chk@plt+0x93bc>
   1bee8:	movw	r0, #60168	; 0xeb08
   1beec:	movw	r1, #60000	; 0xea60
   1bef0:	movw	r3, #59768	; 0xe978
   1bef4:	movt	r0, #1
   1bef8:	movt	r1, #1
   1befc:	mov	r2, #184	; 0xb8
   1bf00:	movt	r3, #1
   1bf04:	bl	12778 <__assert_fail@plt>
   1bf08:	ldr	ip, [sp, #8]
   1bf0c:	ldr	r3, [ip]
   1bf10:	cmp	r3, #84	; 0x54
   1bf14:	bne	1bee8 <__printf_chk@plt+0x9380>
   1bf18:	ldr	r3, [sp, #72]	; 0x48
   1bf1c:	cmp	r3, #0
   1bf20:	beq	1bee8 <__printf_chk@plt+0x9380>
   1bf24:	ldr	lr, [sp, #60]	; 0x3c
   1bf28:	ldr	r3, [sp, #52]	; 0x34
   1bf2c:	sub	r2, lr, #1
   1bf30:	str	r2, [sp, #60]	; 0x3c
   1bf34:	cmp	r2, #0
   1bf38:	add	r2, r3, #1
   1bf3c:	str	r2, [sp, #52]	; 0x34
   1bf40:	beq	1bfbc <__printf_chk@plt+0x9454>
   1bf44:	ldrsb	r2, [r3, #1]
   1bf48:	cmp	r2, #0
   1bf4c:	bge	1bfd0 <__printf_chk@plt+0x9468>
   1bf50:	sub	r2, lr, #2
   1bf54:	add	lr, r3, lr
   1bf58:	add	r3, r3, #2
   1bf5c:	b	1bf78 <__printf_chk@plt+0x9410>
   1bf60:	ldrsb	r1, [r3]
   1bf64:	sub	r0, r2, #1
   1bf68:	add	r3, r3, #1
   1bf6c:	cmp	r1, #0
   1bf70:	bge	1bf88 <__printf_chk@plt+0x9420>
   1bf74:	mov	r2, r0
   1bf78:	cmp	r3, lr
   1bf7c:	str	r3, [sp, #52]	; 0x34
   1bf80:	str	r2, [sp, #60]	; 0x3c
   1bf84:	bne	1bf60 <__printf_chk@plt+0x93f8>
   1bf88:	ldr	r3, [sp, #56]	; 0x38
   1bf8c:	cmp	r2, #0
   1bf90:	rsb	r3, r7, r3
   1bf94:	add	ip, r3, sl
   1bf98:	add	r8, r8, ip
   1bf9c:	bne	1baa8 <__printf_chk@plt+0x8f40>
   1bfa0:	b	1bbc8 <__printf_chk@plt+0x9060>
   1bfa4:	mov	r0, r9
   1bfa8:	bl	12520 <free@plt>
   1bfac:	mov	r0, fp
   1bfb0:	bl	128f8 <iconv_close@plt>
   1bfb4:	mvn	r0, #1
   1bfb8:	b	1bd64 <__printf_chk@plt+0x91fc>
   1bfbc:	ldr	r3, [sp, #56]	; 0x38
   1bfc0:	rsb	r3, r7, r3
   1bfc4:	add	sl, r3, sl
   1bfc8:	add	r8, r8, sl
   1bfcc:	b	1bbc8 <__printf_chk@plt+0x9060>
   1bfd0:	ldr	r3, [sp, #56]	; 0x38
   1bfd4:	rsb	r3, r7, r3
   1bfd8:	add	ip, r3, sl
   1bfdc:	add	r8, r8, ip
   1bfe0:	b	1baa8 <__printf_chk@plt+0x8f40>
   1bfe4:	mov	r0, r9
   1bfe8:	bl	12520 <free@plt>
   1bfec:	mov	r0, fp
   1bff0:	bl	128f8 <iconv_close@plt>
   1bff4:	cmn	r6, #1
   1bff8:	mvneq	r0, #1
   1bffc:	beq	1bd64 <__printf_chk@plt+0x91fc>
   1c000:	mov	r0, r6
   1c004:	bl	128f8 <iconv_close@plt>
   1c008:	mvn	r0, #1
   1c00c:	b	1bd64 <__printf_chk@plt+0x91fc>
   1c010:	mov	r8, r2
   1c014:	b	1bcec <__printf_chk@plt+0x9184>
   1c018:	ldrsb	r3, [r4, #4]
   1c01c:	cmp	r3, #56	; 0x38
   1c020:	bne	1b940 <__printf_chk@plt+0x8dd8>
   1c024:	ldrsb	r3, [r4, #5]
   1c028:	cmp	r3, #0
   1c02c:	bne	1b940 <__printf_chk@plt+0x8dd8>
   1c030:	mvn	r6, #0
   1c034:	b	1b9b4 <__printf_chk@plt+0x8e4c>
   1c038:	ldr	r9, [sp, #44]	; 0x2c
   1c03c:	mov	r0, r9
   1c040:	bl	12520 <free@plt>
   1c044:	mov	r0, fp
   1c048:	bl	128f8 <iconv_close@plt>
   1c04c:	b	1c000 <__printf_chk@plt+0x9498>
   1c050:	mov	r8, r2
   1c054:	b	1bc58 <__printf_chk@plt+0x90f0>
   1c058:	ldr	ip, [sp, #36]	; 0x24
   1c05c:	cmp	ip, #0
   1c060:	ldrne	r3, [sp, #56]	; 0x38
   1c064:	rsbne	r3, r9, r3
   1c068:	strne	r3, [ip]
   1c06c:	ldr	ip, [sp, #32]
   1c070:	cmp	ip, #0
   1c074:	beq	1c0fc <__printf_chk@plt+0x9594>
   1c078:	ldr	r1, [sp, #56]	; 0x38
   1c07c:	mov	r0, r9
   1c080:	rsb	r1, r9, r1
   1c084:	add	r1, r1, #1
   1c088:	bl	12754 <realloc@plt>
   1c08c:	subs	r3, r0, #0
   1c090:	beq	1bfa4 <__printf_chk@plt+0x943c>
   1c094:	ldr	r1, [sp, #56]	; 0x38
   1c098:	mov	r2, #0
   1c09c:	ldr	ip, [sp, #32]
   1c0a0:	mov	r0, fp
   1c0a4:	rsb	r9, r9, r1
   1c0a8:	add	r1, r3, r9
   1c0ac:	str	r1, [sp, #56]	; 0x38
   1c0b0:	strb	r2, [r3, r9]
   1c0b4:	str	r3, [ip]
   1c0b8:	bl	128f8 <iconv_close@plt>
   1c0bc:	mov	r0, r5
   1c0c0:	b	1bd64 <__printf_chk@plt+0x91fc>
   1c0c4:	mov	r0, r4
   1c0c8:	mov	r1, r7
   1c0cc:	bl	12a00 <iconv_open@plt>
   1c0d0:	cmn	r0, #1
   1c0d4:	mov	r6, r0
   1c0d8:	bne	1b9b4 <__printf_chk@plt+0x8e4c>
   1c0dc:	mov	r0, fp
   1c0e0:	bl	128f8 <iconv_close@plt>
   1c0e4:	mov	r0, r6
   1c0e8:	b	1bd64 <__printf_chk@plt+0x91fc>
   1c0ec:	ldr	r0, [sp, #20]
   1c0f0:	bl	12520 <free@plt>
   1c0f4:	mov	r0, r5
   1c0f8:	b	1bd64 <__printf_chk@plt+0x91fc>
   1c0fc:	mov	r0, r9
   1c100:	bl	12520 <free@plt>
   1c104:	mov	r0, fp
   1c108:	bl	128f8 <iconv_close@plt>
   1c10c:	mov	r0, r5
   1c110:	b	1bd64 <__printf_chk@plt+0x91fc>
   1c114:	add	ip, sp, #80	; 0x50
   1c118:	add	r7, sp, #76	; 0x4c
   1c11c:	str	ip, [sp, #40]	; 0x28
   1c120:	ldr	r8, [sp, #28]
   1c124:	b	1bbc8 <__printf_chk@plt+0x9060>
   1c128:	movw	r0, #60260	; 0xeb64
   1c12c:	movw	r1, #60000	; 0xea60
   1c130:	movw	r3, #59768	; 0xe978
   1c134:	movt	r0, #1
   1c138:	movt	r1, #1
   1c13c:	mov	r2, #223	; 0xdf
   1c140:	movt	r3, #1
   1c144:	bl	12778 <__assert_fail@plt>
   1c148:	bl	127e4 <__stack_chk_fail@plt>
   1c14c:	ldr	r3, [sp, #60]	; 0x3c
   1c150:	cmp	r3, #0
   1c154:	beq	1badc <__printf_chk@plt+0x8f74>
   1c158:	ldr	r3, [sp, #56]	; 0x38
   1c15c:	rsb	r3, r7, r3
   1c160:	add	r8, r8, r3
   1c164:	b	1baa8 <__printf_chk@plt+0x8f40>
   1c168:	movw	r0, #60372	; 0xebd4
   1c16c:	movw	r1, #60000	; 0xea60
   1c170:	movw	r3, #59768	; 0xe978
   1c174:	movt	r0, #1
   1c178:	movt	r1, #1
   1c17c:	mov	r2, #224	; 0xe0
   1c180:	movt	r3, #1
   1c184:	bl	12778 <__assert_fail@plt>
   1c188:	movw	r0, #60260	; 0xeb64
   1c18c:	movw	r1, #60000	; 0xea60
   1c190:	movw	r3, #59768	; 0xe978
   1c194:	movt	r0, #1
   1c198:	movt	r1, #1
   1c19c:	mov	r2, #193	; 0xc1
   1c1a0:	movt	r3, #1
   1c1a4:	bl	12778 <__assert_fail@plt>
   1c1a8:	subs	r2, r1, #1
   1c1ac:	bxeq	lr
   1c1b0:	bcc	1c388 <__printf_chk@plt+0x9820>
   1c1b4:	cmp	r0, r1
   1c1b8:	bls	1c36c <__printf_chk@plt+0x9804>
   1c1bc:	tst	r1, r2
   1c1c0:	beq	1c378 <__printf_chk@plt+0x9810>
   1c1c4:	clz	r3, r0
   1c1c8:	clz	r2, r1
   1c1cc:	sub	r3, r2, r3
   1c1d0:	rsbs	r3, r3, #31
   1c1d4:	addne	r3, r3, r3, lsl #1
   1c1d8:	mov	r2, #0
   1c1dc:	addne	pc, pc, r3, lsl #2
   1c1e0:	nop	{0}
   1c1e4:	cmp	r0, r1, lsl #31
   1c1e8:	adc	r2, r2, r2
   1c1ec:	subcs	r0, r0, r1, lsl #31
   1c1f0:	cmp	r0, r1, lsl #30
   1c1f4:	adc	r2, r2, r2
   1c1f8:	subcs	r0, r0, r1, lsl #30
   1c1fc:	cmp	r0, r1, lsl #29
   1c200:	adc	r2, r2, r2
   1c204:	subcs	r0, r0, r1, lsl #29
   1c208:	cmp	r0, r1, lsl #28
   1c20c:	adc	r2, r2, r2
   1c210:	subcs	r0, r0, r1, lsl #28
   1c214:	cmp	r0, r1, lsl #27
   1c218:	adc	r2, r2, r2
   1c21c:	subcs	r0, r0, r1, lsl #27
   1c220:	cmp	r0, r1, lsl #26
   1c224:	adc	r2, r2, r2
   1c228:	subcs	r0, r0, r1, lsl #26
   1c22c:	cmp	r0, r1, lsl #25
   1c230:	adc	r2, r2, r2
   1c234:	subcs	r0, r0, r1, lsl #25
   1c238:	cmp	r0, r1, lsl #24
   1c23c:	adc	r2, r2, r2
   1c240:	subcs	r0, r0, r1, lsl #24
   1c244:	cmp	r0, r1, lsl #23
   1c248:	adc	r2, r2, r2
   1c24c:	subcs	r0, r0, r1, lsl #23
   1c250:	cmp	r0, r1, lsl #22
   1c254:	adc	r2, r2, r2
   1c258:	subcs	r0, r0, r1, lsl #22
   1c25c:	cmp	r0, r1, lsl #21
   1c260:	adc	r2, r2, r2
   1c264:	subcs	r0, r0, r1, lsl #21
   1c268:	cmp	r0, r1, lsl #20
   1c26c:	adc	r2, r2, r2
   1c270:	subcs	r0, r0, r1, lsl #20
   1c274:	cmp	r0, r1, lsl #19
   1c278:	adc	r2, r2, r2
   1c27c:	subcs	r0, r0, r1, lsl #19
   1c280:	cmp	r0, r1, lsl #18
   1c284:	adc	r2, r2, r2
   1c288:	subcs	r0, r0, r1, lsl #18
   1c28c:	cmp	r0, r1, lsl #17
   1c290:	adc	r2, r2, r2
   1c294:	subcs	r0, r0, r1, lsl #17
   1c298:	cmp	r0, r1, lsl #16
   1c29c:	adc	r2, r2, r2
   1c2a0:	subcs	r0, r0, r1, lsl #16
   1c2a4:	cmp	r0, r1, lsl #15
   1c2a8:	adc	r2, r2, r2
   1c2ac:	subcs	r0, r0, r1, lsl #15
   1c2b0:	cmp	r0, r1, lsl #14
   1c2b4:	adc	r2, r2, r2
   1c2b8:	subcs	r0, r0, r1, lsl #14
   1c2bc:	cmp	r0, r1, lsl #13
   1c2c0:	adc	r2, r2, r2
   1c2c4:	subcs	r0, r0, r1, lsl #13
   1c2c8:	cmp	r0, r1, lsl #12
   1c2cc:	adc	r2, r2, r2
   1c2d0:	subcs	r0, r0, r1, lsl #12
   1c2d4:	cmp	r0, r1, lsl #11
   1c2d8:	adc	r2, r2, r2
   1c2dc:	subcs	r0, r0, r1, lsl #11
   1c2e0:	cmp	r0, r1, lsl #10
   1c2e4:	adc	r2, r2, r2
   1c2e8:	subcs	r0, r0, r1, lsl #10
   1c2ec:	cmp	r0, r1, lsl #9
   1c2f0:	adc	r2, r2, r2
   1c2f4:	subcs	r0, r0, r1, lsl #9
   1c2f8:	cmp	r0, r1, lsl #8
   1c2fc:	adc	r2, r2, r2
   1c300:	subcs	r0, r0, r1, lsl #8
   1c304:	cmp	r0, r1, lsl #7
   1c308:	adc	r2, r2, r2
   1c30c:	subcs	r0, r0, r1, lsl #7
   1c310:	cmp	r0, r1, lsl #6
   1c314:	adc	r2, r2, r2
   1c318:	subcs	r0, r0, r1, lsl #6
   1c31c:	cmp	r0, r1, lsl #5
   1c320:	adc	r2, r2, r2
   1c324:	subcs	r0, r0, r1, lsl #5
   1c328:	cmp	r0, r1, lsl #4
   1c32c:	adc	r2, r2, r2
   1c330:	subcs	r0, r0, r1, lsl #4
   1c334:	cmp	r0, r1, lsl #3
   1c338:	adc	r2, r2, r2
   1c33c:	subcs	r0, r0, r1, lsl #3
   1c340:	cmp	r0, r1, lsl #2
   1c344:	adc	r2, r2, r2
   1c348:	subcs	r0, r0, r1, lsl #2
   1c34c:	cmp	r0, r1, lsl #1
   1c350:	adc	r2, r2, r2
   1c354:	subcs	r0, r0, r1, lsl #1
   1c358:	cmp	r0, r1
   1c35c:	adc	r2, r2, r2
   1c360:	subcs	r0, r0, r1
   1c364:	mov	r0, r2
   1c368:	bx	lr
   1c36c:	moveq	r0, #1
   1c370:	movne	r0, #0
   1c374:	bx	lr
   1c378:	clz	r2, r1
   1c37c:	rsb	r2, r2, #31
   1c380:	lsr	r0, r0, r2
   1c384:	bx	lr
   1c388:	cmp	r0, #0
   1c38c:	mvnne	r0, #0
   1c390:	b	1c9ac <__printf_chk@plt+0x9e44>
   1c394:	cmp	r1, #0
   1c398:	beq	1c388 <__printf_chk@plt+0x9820>
   1c39c:	push	{r0, r1, lr}
   1c3a0:	bl	1c1a8 <__printf_chk@plt+0x9640>
   1c3a4:	pop	{r1, r2, lr}
   1c3a8:	mul	r3, r2, r0
   1c3ac:	sub	r1, r1, r3
   1c3b0:	bx	lr
   1c3b4:	cmp	r1, #0
   1c3b8:	beq	1c5c4 <__printf_chk@plt+0x9a5c>
   1c3bc:	eor	ip, r0, r1
   1c3c0:	rsbmi	r1, r1, #0
   1c3c4:	subs	r2, r1, #1
   1c3c8:	beq	1c590 <__printf_chk@plt+0x9a28>
   1c3cc:	movs	r3, r0
   1c3d0:	rsbmi	r3, r0, #0
   1c3d4:	cmp	r3, r1
   1c3d8:	bls	1c59c <__printf_chk@plt+0x9a34>
   1c3dc:	tst	r1, r2
   1c3e0:	beq	1c5ac <__printf_chk@plt+0x9a44>
   1c3e4:	clz	r2, r3
   1c3e8:	clz	r0, r1
   1c3ec:	sub	r2, r0, r2
   1c3f0:	rsbs	r2, r2, #31
   1c3f4:	addne	r2, r2, r2, lsl #1
   1c3f8:	mov	r0, #0
   1c3fc:	addne	pc, pc, r2, lsl #2
   1c400:	nop	{0}
   1c404:	cmp	r3, r1, lsl #31
   1c408:	adc	r0, r0, r0
   1c40c:	subcs	r3, r3, r1, lsl #31
   1c410:	cmp	r3, r1, lsl #30
   1c414:	adc	r0, r0, r0
   1c418:	subcs	r3, r3, r1, lsl #30
   1c41c:	cmp	r3, r1, lsl #29
   1c420:	adc	r0, r0, r0
   1c424:	subcs	r3, r3, r1, lsl #29
   1c428:	cmp	r3, r1, lsl #28
   1c42c:	adc	r0, r0, r0
   1c430:	subcs	r3, r3, r1, lsl #28
   1c434:	cmp	r3, r1, lsl #27
   1c438:	adc	r0, r0, r0
   1c43c:	subcs	r3, r3, r1, lsl #27
   1c440:	cmp	r3, r1, lsl #26
   1c444:	adc	r0, r0, r0
   1c448:	subcs	r3, r3, r1, lsl #26
   1c44c:	cmp	r3, r1, lsl #25
   1c450:	adc	r0, r0, r0
   1c454:	subcs	r3, r3, r1, lsl #25
   1c458:	cmp	r3, r1, lsl #24
   1c45c:	adc	r0, r0, r0
   1c460:	subcs	r3, r3, r1, lsl #24
   1c464:	cmp	r3, r1, lsl #23
   1c468:	adc	r0, r0, r0
   1c46c:	subcs	r3, r3, r1, lsl #23
   1c470:	cmp	r3, r1, lsl #22
   1c474:	adc	r0, r0, r0
   1c478:	subcs	r3, r3, r1, lsl #22
   1c47c:	cmp	r3, r1, lsl #21
   1c480:	adc	r0, r0, r0
   1c484:	subcs	r3, r3, r1, lsl #21
   1c488:	cmp	r3, r1, lsl #20
   1c48c:	adc	r0, r0, r0
   1c490:	subcs	r3, r3, r1, lsl #20
   1c494:	cmp	r3, r1, lsl #19
   1c498:	adc	r0, r0, r0
   1c49c:	subcs	r3, r3, r1, lsl #19
   1c4a0:	cmp	r3, r1, lsl #18
   1c4a4:	adc	r0, r0, r0
   1c4a8:	subcs	r3, r3, r1, lsl #18
   1c4ac:	cmp	r3, r1, lsl #17
   1c4b0:	adc	r0, r0, r0
   1c4b4:	subcs	r3, r3, r1, lsl #17
   1c4b8:	cmp	r3, r1, lsl #16
   1c4bc:	adc	r0, r0, r0
   1c4c0:	subcs	r3, r3, r1, lsl #16
   1c4c4:	cmp	r3, r1, lsl #15
   1c4c8:	adc	r0, r0, r0
   1c4cc:	subcs	r3, r3, r1, lsl #15
   1c4d0:	cmp	r3, r1, lsl #14
   1c4d4:	adc	r0, r0, r0
   1c4d8:	subcs	r3, r3, r1, lsl #14
   1c4dc:	cmp	r3, r1, lsl #13
   1c4e0:	adc	r0, r0, r0
   1c4e4:	subcs	r3, r3, r1, lsl #13
   1c4e8:	cmp	r3, r1, lsl #12
   1c4ec:	adc	r0, r0, r0
   1c4f0:	subcs	r3, r3, r1, lsl #12
   1c4f4:	cmp	r3, r1, lsl #11
   1c4f8:	adc	r0, r0, r0
   1c4fc:	subcs	r3, r3, r1, lsl #11
   1c500:	cmp	r3, r1, lsl #10
   1c504:	adc	r0, r0, r0
   1c508:	subcs	r3, r3, r1, lsl #10
   1c50c:	cmp	r3, r1, lsl #9
   1c510:	adc	r0, r0, r0
   1c514:	subcs	r3, r3, r1, lsl #9
   1c518:	cmp	r3, r1, lsl #8
   1c51c:	adc	r0, r0, r0
   1c520:	subcs	r3, r3, r1, lsl #8
   1c524:	cmp	r3, r1, lsl #7
   1c528:	adc	r0, r0, r0
   1c52c:	subcs	r3, r3, r1, lsl #7
   1c530:	cmp	r3, r1, lsl #6
   1c534:	adc	r0, r0, r0
   1c538:	subcs	r3, r3, r1, lsl #6
   1c53c:	cmp	r3, r1, lsl #5
   1c540:	adc	r0, r0, r0
   1c544:	subcs	r3, r3, r1, lsl #5
   1c548:	cmp	r3, r1, lsl #4
   1c54c:	adc	r0, r0, r0
   1c550:	subcs	r3, r3, r1, lsl #4
   1c554:	cmp	r3, r1, lsl #3
   1c558:	adc	r0, r0, r0
   1c55c:	subcs	r3, r3, r1, lsl #3
   1c560:	cmp	r3, r1, lsl #2
   1c564:	adc	r0, r0, r0
   1c568:	subcs	r3, r3, r1, lsl #2
   1c56c:	cmp	r3, r1, lsl #1
   1c570:	adc	r0, r0, r0
   1c574:	subcs	r3, r3, r1, lsl #1
   1c578:	cmp	r3, r1
   1c57c:	adc	r0, r0, r0
   1c580:	subcs	r3, r3, r1
   1c584:	cmp	ip, #0
   1c588:	rsbmi	r0, r0, #0
   1c58c:	bx	lr
   1c590:	teq	ip, r0
   1c594:	rsbmi	r0, r0, #0
   1c598:	bx	lr
   1c59c:	movcc	r0, #0
   1c5a0:	asreq	r0, ip, #31
   1c5a4:	orreq	r0, r0, #1
   1c5a8:	bx	lr
   1c5ac:	clz	r2, r1
   1c5b0:	rsb	r2, r2, #31
   1c5b4:	cmp	ip, #0
   1c5b8:	lsr	r0, r3, r2
   1c5bc:	rsbmi	r0, r0, #0
   1c5c0:	bx	lr
   1c5c4:	cmp	r0, #0
   1c5c8:	mvngt	r0, #-2147483648	; 0x80000000
   1c5cc:	movlt	r0, #-2147483648	; 0x80000000
   1c5d0:	b	1c9ac <__printf_chk@plt+0x9e44>
   1c5d4:	cmp	r1, #0
   1c5d8:	beq	1c5c4 <__printf_chk@plt+0x9a5c>
   1c5dc:	push	{r0, r1, lr}
   1c5e0:	bl	1c3bc <__printf_chk@plt+0x9854>
   1c5e4:	pop	{r1, r2, lr}
   1c5e8:	mul	r3, r2, r0
   1c5ec:	sub	r1, r1, r3
   1c5f0:	bx	lr
   1c5f4:	eor	r1, r1, #-2147483648	; 0x80000000
   1c5f8:	b	1c600 <__printf_chk@plt+0x9a98>
   1c5fc:	eor	r3, r3, #-2147483648	; 0x80000000
   1c600:	push	{r4, r5, lr}
   1c604:	lsl	r4, r1, #1
   1c608:	lsl	r5, r3, #1
   1c60c:	teq	r4, r5
   1c610:	teqeq	r0, r2
   1c614:	orrsne	ip, r4, r0
   1c618:	orrsne	ip, r5, r2
   1c61c:	mvnsne	ip, r4, asr #21
   1c620:	mvnsne	ip, r5, asr #21
   1c624:	beq	1c810 <__printf_chk@plt+0x9ca8>
   1c628:	lsr	r4, r4, #21
   1c62c:	rsbs	r5, r4, r5, lsr #21
   1c630:	rsblt	r5, r5, #0
   1c634:	ble	1c654 <__printf_chk@plt+0x9aec>
   1c638:	add	r4, r4, r5
   1c63c:	eor	r2, r0, r2
   1c640:	eor	r3, r1, r3
   1c644:	eor	r0, r2, r0
   1c648:	eor	r1, r3, r1
   1c64c:	eor	r2, r0, r2
   1c650:	eor	r3, r1, r3
   1c654:	cmp	r5, #54	; 0x36
   1c658:	pophi	{r4, r5, pc}
   1c65c:	tst	r1, #-2147483648	; 0x80000000
   1c660:	lsl	r1, r1, #12
   1c664:	mov	ip, #1048576	; 0x100000
   1c668:	orr	r1, ip, r1, lsr #12
   1c66c:	beq	1c678 <__printf_chk@plt+0x9b10>
   1c670:	rsbs	r0, r0, #0
   1c674:	rsc	r1, r1, #0
   1c678:	tst	r3, #-2147483648	; 0x80000000
   1c67c:	lsl	r3, r3, #12
   1c680:	orr	r3, ip, r3, lsr #12
   1c684:	beq	1c690 <__printf_chk@plt+0x9b28>
   1c688:	rsbs	r2, r2, #0
   1c68c:	rsc	r3, r3, #0
   1c690:	teq	r4, r5
   1c694:	beq	1c7f8 <__printf_chk@plt+0x9c90>
   1c698:	sub	r4, r4, #1
   1c69c:	rsbs	lr, r5, #32
   1c6a0:	blt	1c6bc <__printf_chk@plt+0x9b54>
   1c6a4:	lsl	ip, r2, lr
   1c6a8:	adds	r0, r0, r2, lsr r5
   1c6ac:	adc	r1, r1, #0
   1c6b0:	adds	r0, r0, r3, lsl lr
   1c6b4:	adcs	r1, r1, r3, asr r5
   1c6b8:	b	1c6d8 <__printf_chk@plt+0x9b70>
   1c6bc:	sub	r5, r5, #32
   1c6c0:	add	lr, lr, #32
   1c6c4:	cmp	r2, #1
   1c6c8:	lsl	ip, r3, lr
   1c6cc:	orrcs	ip, ip, #2
   1c6d0:	adds	r0, r0, r3, asr r5
   1c6d4:	adcs	r1, r1, r3, asr #31
   1c6d8:	and	r5, r1, #-2147483648	; 0x80000000
   1c6dc:	bpl	1c6ec <__printf_chk@plt+0x9b84>
   1c6e0:	rsbs	ip, ip, #0
   1c6e4:	rscs	r0, r0, #0
   1c6e8:	rsc	r1, r1, #0
   1c6ec:	cmp	r1, #1048576	; 0x100000
   1c6f0:	bcc	1c730 <__printf_chk@plt+0x9bc8>
   1c6f4:	cmp	r1, #2097152	; 0x200000
   1c6f8:	bcc	1c718 <__printf_chk@plt+0x9bb0>
   1c6fc:	lsrs	r1, r1, #1
   1c700:	rrxs	r0, r0
   1c704:	rrx	ip, ip
   1c708:	add	r4, r4, #1
   1c70c:	lsl	r2, r4, #21
   1c710:	cmn	r2, #4194304	; 0x400000
   1c714:	bcs	1c870 <__printf_chk@plt+0x9d08>
   1c718:	cmp	ip, #-2147483648	; 0x80000000
   1c71c:	lsrseq	ip, r0, #1
   1c720:	adcs	r0, r0, #0
   1c724:	adc	r1, r1, r4, lsl #20
   1c728:	orr	r1, r1, r5
   1c72c:	pop	{r4, r5, pc}
   1c730:	lsls	ip, ip, #1
   1c734:	adcs	r0, r0, r0
   1c738:	adc	r1, r1, r1
   1c73c:	tst	r1, #1048576	; 0x100000
   1c740:	sub	r4, r4, #1
   1c744:	bne	1c718 <__printf_chk@plt+0x9bb0>
   1c748:	teq	r1, #0
   1c74c:	moveq	r1, r0
   1c750:	moveq	r0, #0
   1c754:	clz	r3, r1
   1c758:	addeq	r3, r3, #32
   1c75c:	sub	r3, r3, #11
   1c760:	subs	r2, r3, #32
   1c764:	bge	1c788 <__printf_chk@plt+0x9c20>
   1c768:	adds	r2, r2, #12
   1c76c:	ble	1c784 <__printf_chk@plt+0x9c1c>
   1c770:	add	ip, r2, #20
   1c774:	rsb	r2, r2, #12
   1c778:	lsl	r0, r1, ip
   1c77c:	lsr	r1, r1, r2
   1c780:	b	1c798 <__printf_chk@plt+0x9c30>
   1c784:	add	r2, r2, #20
   1c788:	rsble	ip, r2, #32
   1c78c:	lsl	r1, r1, r2
   1c790:	orrle	r1, r1, r0, lsr ip
   1c794:	lslle	r0, r0, r2
   1c798:	subs	r4, r4, r3
   1c79c:	addge	r1, r1, r4, lsl #20
   1c7a0:	orrge	r1, r1, r5
   1c7a4:	popge	{r4, r5, pc}
   1c7a8:	mvn	r4, r4
   1c7ac:	subs	r4, r4, #31
   1c7b0:	bge	1c7ec <__printf_chk@plt+0x9c84>
   1c7b4:	adds	r4, r4, #12
   1c7b8:	bgt	1c7d4 <__printf_chk@plt+0x9c6c>
   1c7bc:	add	r4, r4, #20
   1c7c0:	rsb	r2, r4, #32
   1c7c4:	lsr	r0, r0, r4
   1c7c8:	orr	r0, r0, r1, lsl r2
   1c7cc:	orr	r1, r5, r1, lsr r4
   1c7d0:	pop	{r4, r5, pc}
   1c7d4:	rsb	r4, r4, #12
   1c7d8:	rsb	r2, r4, #32
   1c7dc:	lsr	r0, r0, r2
   1c7e0:	orr	r0, r0, r1, lsl r4
   1c7e4:	mov	r1, r5
   1c7e8:	pop	{r4, r5, pc}
   1c7ec:	lsr	r0, r1, r4
   1c7f0:	mov	r1, r5
   1c7f4:	pop	{r4, r5, pc}
   1c7f8:	teq	r4, #0
   1c7fc:	eor	r3, r3, #1048576	; 0x100000
   1c800:	eoreq	r1, r1, #1048576	; 0x100000
   1c804:	addeq	r4, r4, #1
   1c808:	subne	r5, r5, #1
   1c80c:	b	1c698 <__printf_chk@plt+0x9b30>
   1c810:	mvns	ip, r4, asr #21
   1c814:	mvnsne	ip, r5, asr #21
   1c818:	beq	1c880 <__printf_chk@plt+0x9d18>
   1c81c:	teq	r4, r5
   1c820:	teqeq	r0, r2
   1c824:	beq	1c838 <__printf_chk@plt+0x9cd0>
   1c828:	orrs	ip, r4, r0
   1c82c:	moveq	r1, r3
   1c830:	moveq	r0, r2
   1c834:	pop	{r4, r5, pc}
   1c838:	teq	r1, r3
   1c83c:	movne	r1, #0
   1c840:	movne	r0, #0
   1c844:	popne	{r4, r5, pc}
   1c848:	lsrs	ip, r4, #21
   1c84c:	bne	1c860 <__printf_chk@plt+0x9cf8>
   1c850:	lsls	r0, r0, #1
   1c854:	adcs	r1, r1, r1
   1c858:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1c85c:	pop	{r4, r5, pc}
   1c860:	adds	r4, r4, #4194304	; 0x400000
   1c864:	addcc	r1, r1, #1048576	; 0x100000
   1c868:	popcc	{r4, r5, pc}
   1c86c:	and	r5, r1, #-2147483648	; 0x80000000
   1c870:	orr	r1, r5, #2130706432	; 0x7f000000
   1c874:	orr	r1, r1, #15728640	; 0xf00000
   1c878:	mov	r0, #0
   1c87c:	pop	{r4, r5, pc}
   1c880:	mvns	ip, r4, asr #21
   1c884:	movne	r1, r3
   1c888:	movne	r0, r2
   1c88c:	mvnseq	ip, r5, asr #21
   1c890:	movne	r3, r1
   1c894:	movne	r2, r0
   1c898:	orrs	r4, r0, r1, lsl #12
   1c89c:	orrseq	r5, r2, r3, lsl #12
   1c8a0:	teqeq	r1, r3
   1c8a4:	orrne	r1, r1, #524288	; 0x80000
   1c8a8:	pop	{r4, r5, pc}
   1c8ac:	teq	r0, #0
   1c8b0:	moveq	r1, #0
   1c8b4:	bxeq	lr
   1c8b8:	push	{r4, r5, lr}
   1c8bc:	mov	r4, #1024	; 0x400
   1c8c0:	add	r4, r4, #50	; 0x32
   1c8c4:	mov	r5, #0
   1c8c8:	mov	r1, #0
   1c8cc:	b	1c748 <__printf_chk@plt+0x9be0>
   1c8d0:	teq	r0, #0
   1c8d4:	moveq	r1, #0
   1c8d8:	bxeq	lr
   1c8dc:	push	{r4, r5, lr}
   1c8e0:	mov	r4, #1024	; 0x400
   1c8e4:	add	r4, r4, #50	; 0x32
   1c8e8:	ands	r5, r0, #-2147483648	; 0x80000000
   1c8ec:	rsbmi	r0, r0, #0
   1c8f0:	mov	r1, #0
   1c8f4:	b	1c748 <__printf_chk@plt+0x9be0>
   1c8f8:	lsls	r2, r0, #1
   1c8fc:	asr	r1, r2, #3
   1c900:	rrx	r1, r1
   1c904:	lsl	r0, r2, #28
   1c908:	andsne	r3, r2, #-16777216	; 0xff000000
   1c90c:	teqne	r3, #-16777216	; 0xff000000
   1c910:	eorne	r1, r1, #939524096	; 0x38000000
   1c914:	bxne	lr
   1c918:	teq	r2, #0
   1c91c:	teqne	r3, #-16777216	; 0xff000000
   1c920:	bxeq	lr
   1c924:	push	{r4, r5, lr}
   1c928:	mov	r4, #896	; 0x380
   1c92c:	and	r5, r1, #-2147483648	; 0x80000000
   1c930:	bic	r1, r1, #-2147483648	; 0x80000000
   1c934:	b	1c748 <__printf_chk@plt+0x9be0>
   1c938:	orrs	r2, r0, r1
   1c93c:	bxeq	lr
   1c940:	push	{r4, r5, lr}
   1c944:	mov	r5, #0
   1c948:	b	1c968 <__printf_chk@plt+0x9e00>
   1c94c:	orrs	r2, r0, r1
   1c950:	bxeq	lr
   1c954:	push	{r4, r5, lr}
   1c958:	ands	r5, r1, #-2147483648	; 0x80000000
   1c95c:	bpl	1c968 <__printf_chk@plt+0x9e00>
   1c960:	rsbs	r0, r0, #0
   1c964:	rsc	r1, r1, #0
   1c968:	mov	r4, #1024	; 0x400
   1c96c:	add	r4, r4, #50	; 0x32
   1c970:	lsrs	ip, r1, #22
   1c974:	beq	1c6ec <__printf_chk@plt+0x9b84>
   1c978:	mov	r2, #3
   1c97c:	lsrs	ip, ip, #3
   1c980:	addne	r2, r2, #3
   1c984:	lsrs	ip, ip, #3
   1c988:	addne	r2, r2, #3
   1c98c:	add	r2, r2, ip, lsr #3
   1c990:	rsb	r3, r2, #32
   1c994:	lsl	ip, r0, r3
   1c998:	lsr	r0, r0, r2
   1c99c:	orr	r0, r0, r1, lsl r3
   1c9a0:	lsr	r1, r1, r2
   1c9a4:	add	r4, r4, r2
   1c9a8:	b	1c6ec <__printf_chk@plt+0x9b84>
   1c9ac:	push	{r1, lr}
   1c9b0:	mov	r0, #8
   1c9b4:	bl	12874 <raise@plt>
   1c9b8:	pop	{r1, pc}
   1c9bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c9c0:	mov	r7, r0
   1c9c4:	ldr	r6, [pc, #76]	; 1ca18 <__printf_chk@plt+0x9eb0>
   1c9c8:	mov	r8, r1
   1c9cc:	ldr	r5, [pc, #72]	; 1ca1c <__printf_chk@plt+0x9eb4>
   1c9d0:	mov	r9, r2
   1c9d4:	add	r6, pc, r6
   1c9d8:	bl	12404 <_init@@Base>
   1c9dc:	add	r5, pc, r5
   1c9e0:	rsb	r6, r5, r6
   1c9e4:	asrs	r6, r6, #2
   1c9e8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c9ec:	sub	r5, r5, #4
   1c9f0:	mov	r4, #0
   1c9f4:	add	r4, r4, #1
   1c9f8:	ldr	r3, [r5, #4]!
   1c9fc:	mov	r0, r7
   1ca00:	mov	r1, r8
   1ca04:	mov	r2, r9
   1ca08:	blx	r3
   1ca0c:	cmp	r4, r6
   1ca10:	bne	1c9f4 <__printf_chk@plt+0x9e8c>
   1ca14:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ca18:	ldrdeq	r3, [r1], -r4
   1ca1c:	andeq	r3, r1, r8, asr #9
   1ca20:	bx	lr

Disassembly of section .fini:

0001ca24 <_fini@@Base>:
   1ca24:	push	{r3, lr}
   1ca28:	pop	{r3, pc}
