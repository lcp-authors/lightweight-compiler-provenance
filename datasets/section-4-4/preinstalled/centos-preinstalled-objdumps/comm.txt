
centos-preinstalled/comm:     file format elf32-littlearm


Disassembly of section .init:

00010f00 <.init>:
   10f00:	push	{r3, lr}
   10f04:	bl	11ac4 <close@plt+0x910>
   10f08:	pop	{r3, pc}

Disassembly of section .plt:

00010f0c <fdopen@plt-0x14>:
   10f0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f10:	ldr	lr, [pc, #4]	; 10f1c <fdopen@plt-0x4>
   10f14:	add	lr, pc, lr
   10f18:	ldr	pc, [lr, #8]!
   10f1c:	andeq	r6, r1, r4, ror #1

00010f20 <fdopen@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #228]!	; 0xe4

00010f2c <calloc@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #220]!	; 0xdc

00010f38 <fputs_unlocked@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #212]!	; 0xd4

00010f44 <raise@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #204]!	; 0xcc

00010f50 <strcmp@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #196]!	; 0xc4

00010f5c <posix_fadvise64@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #188]!	; 0xbc

00010f68 <fflush@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #180]!	; 0xb4

00010f74 <free@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #172]!	; 0xac

00010f80 <_exit@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #164]!	; 0xa4

00010f8c <memcpy@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #156]!	; 0x9c

00010f98 <mbsinit@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #148]!	; 0x94

00010fa4 <fwrite_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #140]!	; 0x8c

00010fb0 <memcmp@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #132]!	; 0x84

00010fbc <dcgettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #124]!	; 0x7c

00010fc8 <__stack_chk_fail@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #116]!	; 0x74

00010fd4 <realloc@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #108]!	; 0x6c

00010fe0 <textdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #100]!	; 0x64

00010fec <iswprint@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #92]!	; 0x5c

00010ff8 <fwrite@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #84]!	; 0x54

00011004 <lseek64@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #76]!	; 0x4c

00011010 <__ctype_get_mb_cur_max@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #68]!	; 0x44

0001101c <strcpy@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #60]!	; 0x3c

00011028 <__fpending@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #52]!	; 0x34

00011034 <mbrtowc@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #90112	; 0x16000
   1103c:	ldr	pc, [ip, #44]!	; 0x2c

00011040 <error@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #90112	; 0x16000
   11048:	ldr	pc, [ip, #36]!	; 0x24

0001104c <open64@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #28]!

00011058 <strcoll@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #20]!

00011064 <getenv@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #12]!

00011070 <malloc@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #4]!

0001107c <__libc_start_main@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #4092]!	; 0xffc

00011088 <__freading@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #4084]!	; 0xff4

00011094 <__gmon_start__@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #4076]!	; 0xfec

000110a0 <getopt_long@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #4068]!	; 0xfe4

000110ac <__ctype_b_loc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #4060]!	; 0xfdc

000110b8 <exit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #4052]!	; 0xfd4

000110c4 <strlen@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #4044]!	; 0xfcc

000110d0 <ungetc@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4036]!	; 0xfc4

000110dc <fcntl@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #4028]!	; 0xfbc

000110e8 <__errno_location@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110f4 <__cxa_atexit@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #4012]!	; 0xfac

00011100 <memset@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #4004]!	; 0xfa4

0001110c <fscanf@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #3996]!	; 0xf9c

00011118 <__printf_chk@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #3988]!	; 0xf94

00011124 <fileno@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #3980]!	; 0xf8c

00011130 <__fprintf_chk@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3972]!	; 0xf84

0001113c <fclose@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3964]!	; 0xf7c

00011148 <fseeko64@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3956]!	; 0xf74

00011154 <__uflow@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011160 <setlocale@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3940]!	; 0xf64

0001116c <strrchr@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3932]!	; 0xf5c

00011178 <nl_langinfo@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3924]!	; 0xf54

00011184 <fopen64@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011190 <bindtextdomain@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #86016	; 0x15000
   11198:	ldr	pc, [ip, #3908]!	; 0xf44

0001119c <strncmp@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #86016	; 0x15000
   111a4:	ldr	pc, [ip, #3900]!	; 0xf3c

000111a8 <abort@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #86016	; 0x15000
   111b0:	ldr	pc, [ip, #3892]!	; 0xf34

000111b4 <close@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #86016	; 0x15000
   111bc:	ldr	pc, [ip, #3884]!	; 0xf2c

Disassembly of section .text:

000111c0 <close_stdout@@Base-0xeb8>:
   111c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111c4:	sub	sp, sp, #300	; 0x12c
   111c8:	ldr	sl, [pc, #2068]	; 119e4 <close@plt+0x830>
   111cc:	mov	r5, r0
   111d0:	ldr	r3, [pc, #2064]	; 119e8 <close@plt+0x834>
   111d4:	mov	r4, r1
   111d8:	add	sl, pc, sl
   111dc:	ldr	ip, [pc, #2056]	; 119ec <close@plt+0x838>
   111e0:	ldr	r0, [r1]
   111e4:	ldr	r2, [sl, r3]
   111e8:	add	ip, pc, ip
   111ec:	str	ip, [sp, #24]
   111f0:	ldr	r6, [pc, #2040]	; 119f0 <close@plt+0x83c>
   111f4:	ldr	r2, [r2]
   111f8:	add	r6, pc, r6
   111fc:	ldr	fp, [pc, #2032]	; 119f4 <close@plt+0x840>
   11200:	ldr	r9, [pc, #2032]	; 119f8 <close@plt+0x844>
   11204:	str	r2, [sp, #292]	; 0x124
   11208:	bl	124b0 <close_stdout@@Base+0x438>
   1120c:	ldr	r1, [pc, #2024]	; 119fc <close@plt+0x848>
   11210:	mov	r0, #6
   11214:	ldr	r8, [pc, #2020]	; 11a00 <close@plt+0x84c>
   11218:	add	fp, pc, fp
   1121c:	add	r1, pc, r1
   11220:	ldr	r7, [pc, #2012]	; 11a04 <close@plt+0x850>
   11224:	bl	11160 <setlocale@plt>
   11228:	ldr	r1, [pc, #2008]	; 11a08 <close@plt+0x854>
   1122c:	mov	r0, r6
   11230:	add	r9, pc, r9
   11234:	add	r1, pc, r1
   11238:	add	r8, pc, r8
   1123c:	bl	11190 <bindtextdomain@plt>
   11240:	mov	r0, r6
   11244:	bl	10fe0 <textdomain@plt>
   11248:	mov	r0, #3
   1124c:	bl	12310 <close_stdout@@Base+0x298>
   11250:	ldr	r6, [pc, #1972]	; 11a0c <close@plt+0x858>
   11254:	ldr	r2, [pc, #1972]	; 11a10 <close@plt+0x85c>
   11258:	add	r7, pc, r7
   1125c:	ldr	ip, [pc, #1968]	; 11a14 <close@plt+0x860>
   11260:	add	r6, pc, r6
   11264:	add	ip, pc, ip
   11268:	str	ip, [sp, #28]
   1126c:	strb	r0, [fp, #22]
   11270:	ldr	r0, [sl, r2]
   11274:	bl	15250 <close_stdout@@Base+0x31d8>
   11278:	mov	r2, #0
   1127c:	mov	r1, #1
   11280:	strb	r2, [fp, #16]
   11284:	strb	r1, [fp]
   11288:	strb	r1, [fp, #1]
   1128c:	strb	r1, [fp, #8]
   11290:	strb	r2, [fp, #21]
   11294:	strb	r2, [fp, #20]
   11298:	str	r2, [fp, #12]
   1129c:	ldr	r2, [pc, #1908]	; 11a18 <close@plt+0x864>
   112a0:	mov	fp, #0
   112a4:	ldr	r3, [pc, #1904]	; 11a1c <close@plt+0x868>
   112a8:	mov	r0, r5
   112ac:	str	fp, [sp]
   112b0:	mov	r1, r4
   112b4:	add	r2, pc, r2
   112b8:	add	r3, pc, r3
   112bc:	bl	110a0 <getopt_long@plt>
   112c0:	cmn	r0, #1
   112c4:	beq	1145c <close@plt+0x2a8>
   112c8:	cmp	r0, #50	; 0x32
   112cc:	beq	11424 <close@plt+0x270>
   112d0:	ble	11374 <close@plt+0x1c0>
   112d4:	cmp	r0, #256	; 0x100
   112d8:	beq	113c8 <close@plt+0x214>
   112dc:	ble	113b0 <close@plt+0x1fc>
   112e0:	movw	r3, #257	; 0x101
   112e4:	cmp	r0, r3
   112e8:	beq	113a4 <close@plt+0x1f0>
   112ec:	add	r3, r3, #1
   112f0:	cmp	r0, r3
   112f4:	bne	1138c <close@plt+0x1d8>
   112f8:	ldr	r0, [r7, #4]
   112fc:	ldr	r3, [pc, #1820]	; 11a20 <close@plt+0x86c>
   11300:	cmp	r0, #0
   11304:	ldr	r3, [sl, r3]
   11308:	beq	11324 <close@plt+0x170>
   1130c:	ldr	r1, [r3]
   11310:	str	r3, [sp, #20]
   11314:	bl	10f50 <strcmp@plt>
   11318:	ldr	r3, [sp, #20]
   1131c:	cmp	r0, #0
   11320:	bne	11430 <close@plt+0x27c>
   11324:	ldr	r3, [r3]
   11328:	ldrb	fp, [r3]
   1132c:	str	r3, [r6, #4]
   11330:	cmp	fp, #0
   11334:	bne	1129c <close@plt+0xe8>
   11338:	ldr	r1, [sp, #28]
   1133c:	mov	r0, fp
   11340:	mov	r2, #5
   11344:	bl	10fbc <dcgettext@plt>
   11348:	mov	r2, r0
   1134c:	ldr	r0, [pc, #1744]	; 11a24 <close@plt+0x870>
   11350:	str	r2, [sp, #20]
   11354:	add	r0, pc, r0
   11358:	bl	13d00 <close_stdout@@Base+0x1c88>
   1135c:	ldr	r2, [sp, #20]
   11360:	mov	r1, fp
   11364:	mov	r3, r0
   11368:	mov	r0, #1
   1136c:	bl	11040 <error@plt>
   11370:	b	1129c <close@plt+0xe8>
   11374:	cmn	r0, #2
   11378:	beq	1141c <close@plt+0x268>
   1137c:	cmp	r0, #49	; 0x31
   11380:	beq	11394 <close@plt+0x1e0>
   11384:	cmn	r0, #3
   11388:	beq	113d4 <close@plt+0x220>
   1138c:	mov	r0, #1
   11390:	bl	11da8 <close@plt+0xbf4>
   11394:	ldr	r3, [pc, #1676]	; 11a28 <close@plt+0x874>
   11398:	add	r3, pc, r3
   1139c:	strb	fp, [r3]
   113a0:	b	1129c <close@plt+0xe8>
   113a4:	mov	r3, #2
   113a8:	str	r3, [r8, #12]
   113ac:	b	1129c <close@plt+0xe8>
   113b0:	cmp	r0, #51	; 0x33
   113b4:	bne	1138c <close@plt+0x1d8>
   113b8:	ldr	r3, [pc, #1644]	; 11a2c <close@plt+0x878>
   113bc:	add	r3, pc, r3
   113c0:	strb	fp, [r3, #8]
   113c4:	b	1129c <close@plt+0xe8>
   113c8:	mov	r3, #1
   113cc:	str	r3, [r9, #12]
   113d0:	b	1129c <close@plt+0xe8>
   113d4:	ldr	r2, [pc, #1620]	; 11a30 <close@plt+0x87c>
   113d8:	ldr	r3, [pc, #1620]	; 11a34 <close@plt+0x880>
   113dc:	ldr	r1, [pc, #1620]	; 11a38 <close@plt+0x884>
   113e0:	ldr	r0, [sl, r2]
   113e4:	ldr	r3, [sl, r3]
   113e8:	add	r1, pc, r1
   113ec:	ldr	r2, [pc, #1608]	; 11a3c <close@plt+0x888>
   113f0:	ldr	r0, [r0]
   113f4:	add	r2, pc, r2
   113f8:	ldr	r3, [r3]
   113fc:	stm	sp, {r1, r2, fp}
   11400:	ldr	r1, [pc, #1592]	; 11a40 <close@plt+0x88c>
   11404:	ldr	r2, [pc, #1592]	; 11a44 <close@plt+0x890>
   11408:	add	r1, pc, r1
   1140c:	add	r2, pc, r2
   11410:	bl	141a8 <close_stdout@@Base+0x2130>
   11414:	mov	r0, fp
   11418:	bl	110b8 <exit@plt>
   1141c:	mov	r0, fp
   11420:	bl	11da8 <close@plt+0xbf4>
   11424:	ldr	ip, [sp, #24]
   11428:	strb	fp, [ip, #1]
   1142c:	b	1129c <close@plt+0xe8>
   11430:	ldr	r1, [pc, #1552]	; 11a48 <close@plt+0x894>
   11434:	mov	r2, #5
   11438:	mov	r0, fp
   1143c:	add	r1, pc, r1
   11440:	bl	10fbc <dcgettext@plt>
   11444:	mov	r1, fp
   11448:	mov	r2, r0
   1144c:	mov	r0, #1
   11450:	bl	11040 <error@plt>
   11454:	ldr	r3, [sp, #20]
   11458:	b	11324 <close@plt+0x170>
   1145c:	ldr	r3, [pc, #1512]	; 11a4c <close@plt+0x898>
   11460:	ldr	r6, [sl, r3]
   11464:	ldr	r3, [r6]
   11468:	rsb	r2, r3, r5
   1146c:	cmp	r2, #1
   11470:	ble	11740 <close@plt+0x58c>
   11474:	cmp	r2, #2
   11478:	bne	11934 <close@plt+0x780>
   1147c:	ldr	r2, [pc, #1484]	; 11a50 <close@plt+0x89c>
   11480:	add	r2, pc, r2
   11484:	ldr	r1, [r2, #4]
   11488:	cmp	r1, #0
   1148c:	beq	119b4 <close@plt+0x800>
   11490:	add	ip, sp, #132	; 0x84
   11494:	str	ip, [sp, #28]
   11498:	add	ip, sp, #68	; 0x44
   1149c:	str	ip, [sp, #32]
   114a0:	add	ip, sp, #60	; 0x3c
   114a4:	str	ip, [sp, #36]	; 0x24
   114a8:	add	ip, sp, #100	; 0x64
   114ac:	str	ip, [sp, #24]
   114b0:	ldr	ip, [pc, #1436]	; 11a54 <close@plt+0x8a0>
   114b4:	add	r4, r4, r3, lsl #2
   114b8:	mov	r6, #0
   114bc:	str	r4, [sp, #40]	; 0x28
   114c0:	add	ip, pc, ip
   114c4:	str	ip, [sp, #44]	; 0x2c
   114c8:	ldr	ip, [pc, #1416]	; 11a58 <close@plt+0x8a4>
   114cc:	add	r4, sp, #76	; 0x4c
   114d0:	mov	r5, r6
   114d4:	add	ip, pc, ip
   114d8:	str	ip, [sp, #52]	; 0x34
   114dc:	ldr	ip, [pc, #1400]	; 11a5c <close@plt+0x8a8>
   114e0:	add	ip, pc, ip
   114e4:	str	ip, [sp, #48]	; 0x30
   114e8:	add	r1, sp, #132	; 0x84
   114ec:	mov	r7, #80	; 0x50
   114f0:	add	r0, sp, #100	; 0x64
   114f4:	mov	r9, #0
   114f8:	mla	r7, r7, r5, r1
   114fc:	add	r8, r0, r5, lsl #4
   11500:	add	fp, r9, r9, lsl #2
   11504:	add	fp, r7, fp
   11508:	mov	r0, fp
   1150c:	bl	12368 <close_stdout@@Base+0x2f0>
   11510:	str	fp, [r8, r9]
   11514:	add	r9, r9, #4
   11518:	cmp	r9, #16
   1151c:	bne	11500 <close@plt+0x34c>
   11520:	ldr	ip, [sp, #40]	; 0x28
   11524:	mov	r3, #0
   11528:	str	r3, [r4]
   1152c:	str	r3, [r4, #4]
   11530:	ldr	r0, [ip, r6]
   11534:	str	r3, [r4, #8]
   11538:	ldrb	r2, [r0]
   1153c:	cmp	r2, #45	; 0x2d
   11540:	beq	11884 <close@plt+0x6d0>
   11544:	ldr	r1, [sp, #44]	; 0x2c
   11548:	bl	12274 <close_stdout@@Base+0x1fc>
   1154c:	mov	r7, r0
   11550:	add	r0, sp, #68	; 0x44
   11554:	cmp	r7, #0
   11558:	str	r7, [r0, r6]
   1155c:	beq	119c4 <close@plt+0x810>
   11560:	mov	r0, r7
   11564:	mov	r1, #2
   11568:	bl	12238 <close_stdout@@Base+0x1c0>
   1156c:	ldr	r3, [r4]
   11570:	add	r0, sp, #296	; 0x128
   11574:	mov	r1, r7
   11578:	add	r3, r3, r5, lsl #2
   1157c:	add	r3, r0, r3, lsl #2
   11580:	ldr	r0, [r3, #-196]	; 0xffffff3c
   11584:	bl	1245c <close_stdout@@Base+0x3e4>
   11588:	ldr	r3, [r7]
   1158c:	add	r1, sp, #60	; 0x3c
   11590:	tst	r3, #32
   11594:	str	r0, [r1, r6]
   11598:	bne	11914 <close@plt+0x760>
   1159c:	add	r5, r5, #1
   115a0:	add	r4, r4, #12
   115a4:	cmp	r5, #2
   115a8:	add	r6, r6, #4
   115ac:	bne	114e8 <close@plt+0x334>
   115b0:	ldr	ip, [pc, #1192]	; 11a60 <close@plt+0x8ac>
   115b4:	mov	r8, #0
   115b8:	add	ip, pc, ip
   115bc:	str	ip, [sp, #24]
   115c0:	ldr	ip, [pc, #1180]	; 11a64 <close@plt+0x8b0>
   115c4:	add	ip, pc, ip
   115c8:	str	ip, [sp, #28]
   115cc:	ldr	ip, [pc, #1172]	; 11a68 <close@plt+0x8b4>
   115d0:	add	ip, pc, ip
   115d4:	str	ip, [sp, #44]	; 0x2c
   115d8:	b	115ec <close@plt+0x438>
   115dc:	cmp	r4, #2
   115e0:	add	r6, r6, #4
   115e4:	add	r5, r5, #12
   115e8:	bne	1169c <close@plt+0x4e8>
   115ec:	ldr	r4, [sp, #60]	; 0x3c
   115f0:	cmp	r4, #0
   115f4:	beq	11770 <close@plt+0x5bc>
   115f8:	ldr	r5, [sp, #64]	; 0x40
   115fc:	strb	r8, [sp, #56]	; 0x38
   11600:	cmp	r5, #0
   11604:	strb	r8, [sp, #57]	; 0x39
   11608:	beq	117c4 <close@plt+0x610>
   1160c:	ldr	ip, [sp, #24]
   11610:	ldrb	r3, [ip, #22]
   11614:	cmp	r3, #0
   11618:	bne	117cc <close@plt+0x618>
   1161c:	ldr	r9, [r5, #4]
   11620:	ldr	r7, [r4, #4]
   11624:	ldr	r0, [r4, #8]
   11628:	cmp	r7, r9
   1162c:	movcc	r2, r7
   11630:	movcs	r2, r9
   11634:	ldr	r1, [r5, #8]
   11638:	sub	r2, r2, #1
   1163c:	bl	10fb0 <memcmp@plt>
   11640:	subs	r6, r0, #0
   11644:	bne	11788 <close@plt+0x5d4>
   11648:	cmp	r9, r7
   1164c:	bhi	117c4 <close@plt+0x610>
   11650:	moveq	r6, #0
   11654:	movne	r6, #1
   11658:	cmp	r6, #0
   1165c:	bne	11788 <close@plt+0x5d4>
   11660:	ldr	r2, [pc, #968]	; 11a30 <close@plt+0x87c>
   11664:	mov	r3, #3
   11668:	add	r0, r5, #4
   1166c:	add	r1, r5, #8
   11670:	ldr	r2, [sl, r2]
   11674:	ldr	r2, [r2]
   11678:	bl	11bbc <close@plt+0xa08>
   1167c:	mov	r3, #1
   11680:	strb	r3, [sp, #57]	; 0x39
   11684:	mov	r3, #1
   11688:	strb	r3, [sp, #56]	; 0x38
   1168c:	mov	r6, #0
   11690:	add	r7, sp, #55	; 0x37
   11694:	add	r5, sp, #84	; 0x54
   11698:	mov	r4, r6
   1169c:	ldrb	r3, [r7, #1]!
   116a0:	mov	r2, r4
   116a4:	add	r4, r4, #1
   116a8:	cmp	r3, #0
   116ac:	beq	115dc <close@plt+0x428>
   116b0:	ldr	r1, [r5, #-8]
   116b4:	lsl	fp, r2, #2
   116b8:	add	r2, sp, #68	; 0x44
   116bc:	ldr	r0, [r5, #-4]
   116c0:	add	r3, r1, #1
   116c4:	add	ip, sp, #296	; 0x128
   116c8:	and	r3, r3, #3
   116cc:	ldr	r9, [r2, r6]
   116d0:	add	r2, fp, r3
   116d4:	str	r3, [r5, #-8]
   116d8:	str	r1, [r5, #-4]
   116dc:	add	r3, ip, r2, lsl #2
   116e0:	str	r0, [r5]
   116e4:	mov	r1, r9
   116e8:	ldr	r0, [r3, #-196]	; 0xffffff3c
   116ec:	bl	1245c <close_stdout@@Base+0x3e4>
   116f0:	add	r1, sp, #60	; 0x3c
   116f4:	cmp	r0, #0
   116f8:	str	r0, [r1, r6]
   116fc:	beq	11814 <close@plt+0x660>
   11700:	ldr	r1, [r5, #-4]
   11704:	add	ip, sp, #296	; 0x128
   11708:	str	r4, [sp]
   1170c:	add	r2, r0, #4
   11710:	add	fp, fp, r1
   11714:	add	r3, r0, #8
   11718:	add	fp, ip, fp, lsl #2
   1171c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   11720:	add	r0, r1, #4
   11724:	add	r1, r1, #8
   11728:	bl	11cb4 <close@plt+0xb00>
   1172c:	ldr	r3, [r9]
   11730:	tst	r3, #32
   11734:	bne	11864 <close@plt+0x6b0>
   11738:	strb	r8, [r7]
   1173c:	b	115dc <close@plt+0x428>
   11740:	cmp	r5, r3
   11744:	mov	r0, fp
   11748:	bgt	11978 <close@plt+0x7c4>
   1174c:	ldr	r1, [pc, #792]	; 11a6c <close@plt+0x8b8>
   11750:	mov	r2, #5
   11754:	add	r1, pc, r1
   11758:	bl	10fbc <dcgettext@plt>
   1175c:	mov	r1, fp
   11760:	mov	r2, r0
   11764:	mov	r0, fp
   11768:	bl	11040 <error@plt>
   1176c:	b	1138c <close@plt+0x1d8>
   11770:	ldr	r3, [sp, #64]	; 0x40
   11774:	cmp	r3, #0
   11778:	beq	118a0 <close@plt+0x6ec>
   1177c:	mov	r6, #1
   11780:	strb	r4, [sp, #56]	; 0x38
   11784:	strb	r4, [sp, #57]	; 0x39
   11788:	ldr	ip, [sp, #28]
   1178c:	cmp	r6, #0
   11790:	mov	r5, #1
   11794:	ldr	r2, [pc, #660]	; 11a30 <close@plt+0x87c>
   11798:	strb	r5, [ip, #16]
   1179c:	ble	117f0 <close@plt+0x63c>
   117a0:	ldr	r2, [sl, r2]
   117a4:	mov	r3, #2
   117a8:	ldr	r1, [sp, #64]	; 0x40
   117ac:	ldr	r2, [r2]
   117b0:	add	r0, r1, #4
   117b4:	add	r1, r1, #8
   117b8:	bl	11bbc <close@plt+0xa08>
   117bc:	strb	r5, [sp, #57]	; 0x39
   117c0:	b	1168c <close@plt+0x4d8>
   117c4:	mvn	r6, #0
   117c8:	b	11788 <close@plt+0x5d4>
   117cc:	ldr	r1, [r4, #4]
   117d0:	ldr	r3, [r5, #4]
   117d4:	sub	r1, r1, #1
   117d8:	ldr	r0, [r4, #8]
   117dc:	sub	r3, r3, #1
   117e0:	ldr	r2, [r5, #8]
   117e4:	bl	1460c <close_stdout@@Base+0x2594>
   117e8:	mov	r6, r0
   117ec:	b	11658 <close@plt+0x4a4>
   117f0:	ldr	r2, [sl, r2]
   117f4:	add	r0, r4, #4
   117f8:	add	r1, r4, #8
   117fc:	mov	r3, r5
   11800:	ldr	r2, [r2]
   11804:	bl	11bbc <close@plt+0xa08>
   11808:	cmp	r6, #0
   1180c:	strbeq	r5, [sp, #57]	; 0x39
   11810:	b	11684 <close@plt+0x4d0>
   11814:	ldr	r3, [r5]
   11818:	add	r0, sp, #296	; 0x128
   1181c:	add	r3, fp, r3
   11820:	add	r3, r0, r3, lsl #2
   11824:	ldr	r1, [r3, #-196]	; 0xffffff3c
   11828:	ldr	r3, [r1, #8]
   1182c:	cmp	r3, #0
   11830:	beq	1172c <close@plt+0x578>
   11834:	ldr	r3, [r5, #-4]
   11838:	add	r2, sp, #296	; 0x128
   1183c:	str	r4, [sp]
   11840:	add	r0, r1, #4
   11844:	add	fp, fp, r3
   11848:	add	r1, r1, #8
   1184c:	add	fp, r2, fp, lsl #2
   11850:	ldr	r3, [fp, #-196]	; 0xffffff3c
   11854:	add	r2, r3, #4
   11858:	add	r3, r3, #8
   1185c:	bl	11cb4 <close@plt+0xb00>
   11860:	b	1172c <close@plt+0x578>
   11864:	bl	110e8 <__errno_location@plt>
   11868:	ldr	ip, [sp, #40]	; 0x28
   1186c:	ldr	r2, [sp, #44]	; 0x2c
   11870:	ldr	r3, [ip, r6]
   11874:	ldr	r1, [r0]
   11878:	mov	r0, #1
   1187c:	bl	11040 <error@plt>
   11880:	b	11738 <close@plt+0x584>
   11884:	ldrb	r3, [r0, #1]
   11888:	cmp	r3, #0
   1188c:	bne	11544 <close@plt+0x390>
   11890:	ldr	r3, [pc, #472]	; 11a70 <close@plt+0x8bc>
   11894:	ldr	r3, [sl, r3]
   11898:	ldr	r7, [r3]
   1189c:	b	11550 <close@plt+0x39c>
   118a0:	ldr	r5, [pc, #460]	; 11a74 <close@plt+0x8c0>
   118a4:	add	r6, sp, #68	; 0x44
   118a8:	mov	r4, r3
   118ac:	add	r5, pc, r5
   118b0:	ldr	r0, [r6, r4]
   118b4:	bl	146b0 <close_stdout@@Base+0x2638>
   118b8:	cmp	r0, #0
   118bc:	bne	118f4 <close@plt+0x740>
   118c0:	add	r4, r4, #4
   118c4:	cmp	r4, #8
   118c8:	bne	118b0 <close@plt+0x6fc>
   118cc:	ldr	r3, [pc, #420]	; 11a78 <close@plt+0x8c4>
   118d0:	add	r3, pc, r3
   118d4:	ldrb	r2, [r3, #20]
   118d8:	cmp	r2, #0
   118dc:	bne	118ec <close@plt+0x738>
   118e0:	ldrb	r0, [r3, #21]
   118e4:	cmp	r0, #0
   118e8:	beq	119b0 <close@plt+0x7fc>
   118ec:	mov	r0, #1
   118f0:	bl	110b8 <exit@plt>
   118f4:	bl	110e8 <__errno_location@plt>
   118f8:	ldr	ip, [sp, #40]	; 0x28
   118fc:	mov	r2, r5
   11900:	ldr	r3, [ip, r4]
   11904:	ldr	r1, [r0]
   11908:	mov	r0, #1
   1190c:	bl	11040 <error@plt>
   11910:	b	118c0 <close@plt+0x70c>
   11914:	bl	110e8 <__errno_location@plt>
   11918:	ldr	ip, [sp, #40]	; 0x28
   1191c:	ldr	r2, [sp, #48]	; 0x30
   11920:	ldr	r3, [ip, r6]
   11924:	ldr	r1, [r0]
   11928:	mov	r0, #1
   1192c:	bl	11040 <error@plt>
   11930:	b	1159c <close@plt+0x3e8>
   11934:	ldr	r1, [pc, #320]	; 11a7c <close@plt+0x8c8>
   11938:	mov	r2, #5
   1193c:	mov	r0, fp
   11940:	add	r1, pc, r1
   11944:	bl	10fbc <dcgettext@plt>
   11948:	ldr	r3, [r6]
   1194c:	add	r3, r3, #2
   11950:	mov	r5, r0
   11954:	ldr	r0, [r4, r3, lsl #2]
   11958:	bl	13d00 <close_stdout@@Base+0x1c88>
   1195c:	mov	r1, fp
   11960:	mov	r2, r5
   11964:	mov	r3, r0
   11968:	mov	r0, fp
   1196c:	bl	11040 <error@plt>
   11970:	mov	r0, #1
   11974:	bl	11da8 <close@plt+0xbf4>
   11978:	ldr	r1, [pc, #256]	; 11a80 <close@plt+0x8cc>
   1197c:	mov	r2, #5
   11980:	sub	r5, r5, #-1073741823	; 0xc0000001
   11984:	add	r1, pc, r1
   11988:	bl	10fbc <dcgettext@plt>
   1198c:	mov	r6, r0
   11990:	ldr	r0, [r4, r5, lsl #2]
   11994:	bl	13d00 <close_stdout@@Base+0x1c88>
   11998:	mov	r1, fp
   1199c:	mov	r2, r6
   119a0:	mov	r3, r0
   119a4:	mov	r0, fp
   119a8:	bl	11040 <error@plt>
   119ac:	b	1138c <close@plt+0x1d8>
   119b0:	bl	110b8 <exit@plt>
   119b4:	ldr	r1, [pc, #200]	; 11a84 <close@plt+0x8d0>
   119b8:	add	r1, pc, r1
   119bc:	str	r1, [r2, #4]
   119c0:	b	11490 <close@plt+0x2dc>
   119c4:	bl	110e8 <__errno_location@plt>
   119c8:	ldr	ip, [sp, #40]	; 0x28
   119cc:	ldr	r2, [sp, #52]	; 0x34
   119d0:	ldr	r3, [ip, r6]
   119d4:	ldr	r1, [r0]
   119d8:	mov	r0, #1
   119dc:	bl	11040 <error@plt>
   119e0:	b	11560 <close@plt+0x3ac>
   119e4:	andeq	r5, r1, r0, lsr #28
   119e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   119ec:	andeq	r5, r1, ip, lsl #31
   119f0:	andeq	r4, r0, r4, lsl #10
   119f4:	andeq	r5, r1, ip, asr pc
   119f8:	andeq	r5, r1, r4, asr #30
   119fc:	andeq	r4, r0, r0, lsr #11
   11a00:	andeq	r5, r1, ip, lsr pc
   11a04:	andeq	r5, r1, ip, lsl pc
   11a08:	andeq	r4, r0, ip, lsl #11
   11a0c:	andeq	r5, r1, r4, lsl pc
   11a10:	andeq	r0, r0, r0, lsl #2
   11a14:	muleq	r0, r0, r5
   11a18:	muleq	r0, r8, r5
   11a1c:	andeq	r5, r1, r4, asr #23
   11a20:	andeq	r0, r0, r8, lsr #2
   11a24:			; <UNDEFINED> instruction: 0x000044b8
   11a28:	ldrdeq	r5, [r1], -ip
   11a2c:			; <UNDEFINED> instruction: 0x00015db8
   11a30:	andeq	r0, r0, r0, lsl r1
   11a34:	strdeq	r0, [r0], -r8
   11a38:	andeq	r4, r0, r0, asr #8
   11a3c:	andeq	r4, r0, r8, asr #8
   11a40:	andeq	r4, r0, r8, lsl r4
   11a44:	andeq	r4, r0, ip, ror #5
   11a48:	muleq	r0, r8, r3
   11a4c:	strdeq	r0, [r0], -r4
   11a50:	strdeq	r5, [r1], -r4
   11a54:	andeq	r4, r0, ip, ror #7
   11a58:	andeq	r4, r0, r8, lsl r4
   11a5c:	andeq	r4, r0, ip, lsl #8
   11a60:			; <UNDEFINED> instruction: 0x00015bbc
   11a64:			; <UNDEFINED> instruction: 0x00015bb0
   11a68:	andeq	r4, r0, ip, lsl r3
   11a6c:	strdeq	r4, [r0], -ip
   11a70:	andeq	r0, r0, ip, lsl #2
   11a74:	andeq	r4, r0, r0, asr #32
   11a78:	andeq	r5, r1, r4, lsr #17
   11a7c:	andeq	r3, r0, ip, lsr pc
   11a80:	ldrdeq	r3, [r0], -ip
   11a84:	ldrdeq	r3, [r0], -r8
   11a88:	mov	fp, #0
   11a8c:	mov	lr, #0
   11a90:	pop	{r1}		; (ldr r1, [sp], #4)
   11a94:	mov	r2, sp
   11a98:	push	{r2}		; (str r2, [sp, #-4]!)
   11a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11aa0:	ldr	ip, [pc, #16]	; 11ab8 <close@plt+0x904>
   11aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11aa8:	ldr	r0, [pc, #12]	; 11abc <close@plt+0x908>
   11aac:	ldr	r3, [pc, #12]	; 11ac0 <close@plt+0x90c>
   11ab0:	bl	1107c <__libc_start_main@plt>
   11ab4:	bl	111a8 <abort@plt>
   11ab8:	andeq	r5, r1, ip, asr #4
   11abc:	andeq	r1, r1, r0, asr #3
   11ac0:	andeq	r5, r1, r8, ror #3
   11ac4:	ldr	r3, [pc, #20]	; 11ae0 <close@plt+0x92c>
   11ac8:	ldr	r2, [pc, #20]	; 11ae4 <close@plt+0x930>
   11acc:	add	r3, pc, r3
   11ad0:	ldr	r2, [r3, r2]
   11ad4:	cmp	r2, #0
   11ad8:	bxeq	lr
   11adc:	b	11094 <__gmon_start__@plt>
   11ae0:	andeq	r5, r1, ip, lsr #10
   11ae4:	andeq	r0, r0, r4, lsl #2
   11ae8:	push	{r3, lr}
   11aec:	movw	r0, #29048	; 0x7178
   11af0:	ldr	r3, [pc, #36]	; 11b1c <close@plt+0x968>
   11af4:	movt	r0, #2
   11af8:	rsb	r3, r0, r3
   11afc:	cmp	r3, #6
   11b00:	popls	{r3, pc}
   11b04:	movw	r3, #0
   11b08:	movt	r3, #0
   11b0c:	cmp	r3, #0
   11b10:	popeq	{r3, pc}
   11b14:	blx	r3
   11b18:	pop	{r3, pc}
   11b1c:	andeq	r7, r2, fp, ror r1
   11b20:	push	{r3, lr}
   11b24:	movw	r0, #29048	; 0x7178
   11b28:	movw	r3, #29048	; 0x7178
   11b2c:	movt	r0, #2
   11b30:	movt	r3, #2
   11b34:	rsb	r3, r0, r3
   11b38:	asr	r3, r3, #2
   11b3c:	add	r3, r3, r3, lsr #31
   11b40:	asrs	r1, r3, #1
   11b44:	popeq	{r3, pc}
   11b48:	movw	r2, #0
   11b4c:	movt	r2, #0
   11b50:	cmp	r2, #0
   11b54:	popeq	{r3, pc}
   11b58:	blx	r2
   11b5c:	pop	{r3, pc}
   11b60:	push	{r4, lr}
   11b64:	movw	r4, #29048	; 0x7178
   11b68:	movt	r4, #2
   11b6c:	ldrb	r3, [r4]
   11b70:	cmp	r3, #0
   11b74:	popne	{r4, pc}
   11b78:	bl	11ae8 <close@plt+0x934>
   11b7c:	mov	r3, #1
   11b80:	strb	r3, [r4]
   11b84:	pop	{r4, pc}
   11b88:	movw	r0, #28288	; 0x6e80
   11b8c:	movt	r0, #2
   11b90:	push	{r3, lr}
   11b94:	ldr	r3, [r0]
   11b98:	cmp	r3, #0
   11b9c:	beq	11bb4 <close@plt+0xa00>
   11ba0:	movw	r3, #0
   11ba4:	movt	r3, #0
   11ba8:	cmp	r3, #0
   11bac:	beq	11bb4 <close@plt+0xa00>
   11bb0:	blx	r3
   11bb4:	pop	{r3, lr}
   11bb8:	b	11b20 <close@plt+0x96c>
   11bbc:	cmp	r3, #2
   11bc0:	push	{r4, r5, lr}
   11bc4:	mov	r4, r0
   11bc8:	sub	sp, sp, #12
   11bcc:	mov	r5, r1
   11bd0:	beq	11c68 <close@plt+0xab4>
   11bd4:	cmp	r3, #3
   11bd8:	beq	11c1c <close@plt+0xa68>
   11bdc:	cmp	r3, #1
   11be0:	beq	11c00 <close@plt+0xa4c>
   11be4:	mov	r3, r2
   11be8:	ldr	r0, [r5]
   11bec:	ldr	r2, [r4]
   11bf0:	mov	r1, #1
   11bf4:	add	sp, sp, #12
   11bf8:	pop	{r4, r5, lr}
   11bfc:	b	10fa4 <fwrite_unlocked@plt>
   11c00:	ldr	r3, [pc, #156]	; 11ca4 <close@plt+0xaf0>
   11c04:	add	r3, pc, r3
   11c08:	ldrb	r3, [r3]
   11c0c:	cmp	r3, #0
   11c10:	bne	11be4 <close@plt+0xa30>
   11c14:	add	sp, sp, #12
   11c18:	pop	{r4, r5, pc}
   11c1c:	ldr	r3, [pc, #132]	; 11ca8 <close@plt+0xaf4>
   11c20:	add	r3, pc, r3
   11c24:	ldrb	r1, [r3, #8]
   11c28:	cmp	r1, #0
   11c2c:	beq	11c14 <close@plt+0xa60>
   11c30:	ldrb	r1, [r3]
   11c34:	cmp	r1, #0
   11c38:	bne	11c8c <close@plt+0xad8>
   11c3c:	ldr	r3, [pc, #104]	; 11cac <close@plt+0xaf8>
   11c40:	add	r3, pc, r3
   11c44:	ldrb	r1, [r3, #1]
   11c48:	cmp	r1, #0
   11c4c:	beq	11be4 <close@plt+0xa30>
   11c50:	ldr	r0, [r3, #4]
   11c54:	mov	r1, r2
   11c58:	str	r2, [sp, #4]
   11c5c:	bl	10f38 <fputs_unlocked@plt>
   11c60:	ldr	r2, [sp, #4]
   11c64:	b	11be4 <close@plt+0xa30>
   11c68:	ldr	r3, [pc, #64]	; 11cb0 <close@plt+0xafc>
   11c6c:	add	r3, pc, r3
   11c70:	ldrb	r1, [r3, #1]
   11c74:	cmp	r1, #0
   11c78:	beq	11c14 <close@plt+0xa60>
   11c7c:	ldrb	r1, [r3]
   11c80:	cmp	r1, #0
   11c84:	beq	11be4 <close@plt+0xa30>
   11c88:	b	11c50 <close@plt+0xa9c>
   11c8c:	ldr	r0, [r3, #4]
   11c90:	mov	r1, r2
   11c94:	str	r2, [sp, #4]
   11c98:	bl	10f38 <fputs_unlocked@plt>
   11c9c:	ldr	r2, [sp, #4]
   11ca0:	b	11c3c <close@plt+0xa88>
   11ca4:	andeq	r5, r1, r0, ror r5
   11ca8:	andeq	r5, r1, r4, asr r5
   11cac:	andeq	r5, r1, r4, lsr r5
   11cb0:	andeq	r5, r1, r8, lsl #10
   11cb4:	push	{r4, r5, r6, lr}
   11cb8:	mov	r6, r1
   11cbc:	ldr	r4, [pc, #212]	; 11d98 <close@plt+0xbe4>
   11cc0:	mov	r5, r3
   11cc4:	add	r4, pc, r4
   11cc8:	ldr	ip, [r4, #12]
   11ccc:	cmp	ip, #2
   11cd0:	popeq	{r4, r5, r6, pc}
   11cd4:	cmp	ip, #1
   11cd8:	beq	11ce8 <close@plt+0xb34>
   11cdc:	ldrb	r3, [r4, #16]
   11ce0:	cmp	r3, #0
   11ce4:	popeq	{r4, r5, r6, pc}
   11ce8:	ldr	r3, [sp, #16]
   11cec:	ldr	ip, [pc, #168]	; 11d9c <close@plt+0xbe8>
   11cf0:	sub	r4, r3, #1
   11cf4:	add	ip, pc, ip
   11cf8:	add	r3, ip, r4
   11cfc:	ldrb	r3, [r3, #20]
   11d00:	cmp	r3, #0
   11d04:	popne	{r4, r5, r6, pc}
   11d08:	ldrb	r3, [ip, #22]
   11d0c:	ldr	r1, [r0]
   11d10:	cmp	r3, #0
   11d14:	ldr	r3, [r2]
   11d18:	sub	r1, r1, #1
   11d1c:	ldr	r0, [r6]
   11d20:	sub	r3, r3, #1
   11d24:	ldr	r2, [r5]
   11d28:	bne	11d88 <close@plt+0xbd4>
   11d2c:	bl	1246c <close_stdout@@Base+0x3f4>
   11d30:	cmp	r0, #0
   11d34:	pople	{r4, r5, r6, pc}
   11d38:	ldr	r5, [pc, #96]	; 11da0 <close@plt+0xbec>
   11d3c:	mov	r2, #5
   11d40:	ldr	r1, [pc, #92]	; 11da4 <close@plt+0xbf0>
   11d44:	mov	r0, #0
   11d48:	add	r5, pc, r5
   11d4c:	add	r1, pc, r1
   11d50:	add	r4, r5, r4
   11d54:	ldr	r6, [r5, #12]
   11d58:	subs	r3, r6, #1
   11d5c:	rsbs	r6, r3, #0
   11d60:	adcs	r6, r6, r3
   11d64:	bl	10fbc <dcgettext@plt>
   11d68:	ldr	r3, [sp, #16]
   11d6c:	mov	r1, #0
   11d70:	mov	r2, r0
   11d74:	mov	r0, r6
   11d78:	bl	11040 <error@plt>
   11d7c:	mov	r3, #1
   11d80:	strb	r3, [r4, #20]
   11d84:	pop	{r4, r5, r6, pc}
   11d88:	bl	1460c <close_stdout@@Base+0x2594>
   11d8c:	cmp	r0, #0
   11d90:	bgt	11d38 <close@plt+0xb84>
   11d94:	pop	{r4, r5, r6, pc}
   11d98:			; <UNDEFINED> instruction: 0x000154b0
   11d9c:	andeq	r5, r1, r0, lsl #9
   11da0:	andeq	r5, r1, ip, lsr #8
   11da4:	andeq	r3, r0, r8, lsr r5
   11da8:	push	{r4, r5, r6, lr}
   11dac:	subs	r4, r0, #0
   11db0:	ldr	r5, [pc, #580]	; 11ffc <close@plt+0xe48>
   11db4:	add	r5, pc, r5
   11db8:	beq	11e00 <close@plt+0xc4c>
   11dbc:	ldr	r3, [pc, #572]	; 12000 <close@plt+0xe4c>
   11dc0:	mov	r2, #5
   11dc4:	ldr	r1, [pc, #568]	; 12004 <close@plt+0xe50>
   11dc8:	mov	r0, #0
   11dcc:	ldr	r3, [r5, r3]
   11dd0:	add	r1, pc, r1
   11dd4:	ldr	r6, [r3]
   11dd8:	bl	10fbc <dcgettext@plt>
   11ddc:	ldr	r3, [pc, #548]	; 12008 <close@plt+0xe54>
   11de0:	mov	r1, #1
   11de4:	ldr	r3, [r5, r3]
   11de8:	ldr	r3, [r3]
   11dec:	mov	r2, r0
   11df0:	mov	r0, r6
   11df4:	bl	11130 <__fprintf_chk@plt>
   11df8:	mov	r0, r4
   11dfc:	bl	110b8 <exit@plt>
   11e00:	ldr	r1, [pc, #516]	; 1200c <close@plt+0xe58>
   11e04:	mov	r2, #5
   11e08:	add	r1, pc, r1
   11e0c:	bl	10fbc <dcgettext@plt>
   11e10:	ldr	r3, [pc, #496]	; 12008 <close@plt+0xe54>
   11e14:	ldr	r6, [r5, r3]
   11e18:	ldr	r2, [r6]
   11e1c:	mov	r1, r0
   11e20:	mov	r0, #1
   11e24:	bl	11118 <__printf_chk@plt>
   11e28:	ldr	r1, [pc, #480]	; 12010 <close@plt+0xe5c>
   11e2c:	mov	r2, #5
   11e30:	mov	r0, r4
   11e34:	add	r1, pc, r1
   11e38:	bl	10fbc <dcgettext@plt>
   11e3c:	ldr	r3, [pc, #464]	; 12014 <close@plt+0xe60>
   11e40:	ldr	r5, [r5, r3]
   11e44:	ldr	r1, [r5]
   11e48:	bl	10f38 <fputs_unlocked@plt>
   11e4c:	ldr	r1, [pc, #452]	; 12018 <close@plt+0xe64>
   11e50:	mov	r2, #5
   11e54:	mov	r0, r4
   11e58:	add	r1, pc, r1
   11e5c:	bl	10fbc <dcgettext@plt>
   11e60:	ldr	r1, [r5]
   11e64:	bl	10f38 <fputs_unlocked@plt>
   11e68:	ldr	r1, [pc, #428]	; 1201c <close@plt+0xe68>
   11e6c:	mov	r2, #5
   11e70:	mov	r0, r4
   11e74:	add	r1, pc, r1
   11e78:	bl	10fbc <dcgettext@plt>
   11e7c:	ldr	r1, [r5]
   11e80:	bl	10f38 <fputs_unlocked@plt>
   11e84:	ldr	r1, [pc, #404]	; 12020 <close@plt+0xe6c>
   11e88:	mov	r2, #5
   11e8c:	mov	r0, r4
   11e90:	add	r1, pc, r1
   11e94:	bl	10fbc <dcgettext@plt>
   11e98:	ldr	r1, [r5]
   11e9c:	bl	10f38 <fputs_unlocked@plt>
   11ea0:	ldr	r1, [pc, #380]	; 12024 <close@plt+0xe70>
   11ea4:	mov	r2, #5
   11ea8:	mov	r0, r4
   11eac:	add	r1, pc, r1
   11eb0:	bl	10fbc <dcgettext@plt>
   11eb4:	ldr	r1, [r5]
   11eb8:	bl	10f38 <fputs_unlocked@plt>
   11ebc:	ldr	r1, [pc, #356]	; 12028 <close@plt+0xe74>
   11ec0:	mov	r2, #5
   11ec4:	mov	r0, r4
   11ec8:	add	r1, pc, r1
   11ecc:	bl	10fbc <dcgettext@plt>
   11ed0:	ldr	r1, [r5]
   11ed4:	bl	10f38 <fputs_unlocked@plt>
   11ed8:	ldr	r1, [pc, #332]	; 1202c <close@plt+0xe78>
   11edc:	mov	r2, #5
   11ee0:	mov	r0, r4
   11ee4:	add	r1, pc, r1
   11ee8:	bl	10fbc <dcgettext@plt>
   11eec:	ldr	r1, [r5]
   11ef0:	bl	10f38 <fputs_unlocked@plt>
   11ef4:	ldr	r1, [pc, #308]	; 12030 <close@plt+0xe7c>
   11ef8:	mov	r2, #5
   11efc:	mov	r0, r4
   11f00:	add	r1, pc, r1
   11f04:	bl	10fbc <dcgettext@plt>
   11f08:	ldr	r1, [r5]
   11f0c:	bl	10f38 <fputs_unlocked@plt>
   11f10:	ldr	r1, [pc, #284]	; 12034 <close@plt+0xe80>
   11f14:	mov	r2, #5
   11f18:	mov	r0, r4
   11f1c:	add	r1, pc, r1
   11f20:	bl	10fbc <dcgettext@plt>
   11f24:	ldr	r2, [r6]
   11f28:	mov	r3, r2
   11f2c:	mov	r1, r0
   11f30:	mov	r0, #1
   11f34:	bl	11118 <__printf_chk@plt>
   11f38:	ldr	r1, [pc, #248]	; 12038 <close@plt+0xe84>
   11f3c:	mov	r2, #5
   11f40:	mov	r0, r4
   11f44:	add	r1, pc, r1
   11f48:	bl	10fbc <dcgettext@plt>
   11f4c:	ldr	r2, [pc, #232]	; 1203c <close@plt+0xe88>
   11f50:	ldr	r3, [pc, #232]	; 12040 <close@plt+0xe8c>
   11f54:	add	r2, pc, r2
   11f58:	add	r3, pc, r3
   11f5c:	mov	r1, r0
   11f60:	mov	r0, #1
   11f64:	bl	11118 <__printf_chk@plt>
   11f68:	mov	r0, #5
   11f6c:	mov	r1, r4
   11f70:	bl	11160 <setlocale@plt>
   11f74:	cmp	r0, #0
   11f78:	beq	11f94 <close@plt+0xde0>
   11f7c:	ldr	r1, [pc, #192]	; 12044 <close@plt+0xe90>
   11f80:	mov	r2, #3
   11f84:	add	r1, pc, r1
   11f88:	bl	1119c <strncmp@plt>
   11f8c:	cmp	r0, #0
   11f90:	bne	11fc8 <close@plt+0xe14>
   11f94:	ldr	r1, [pc, #172]	; 12048 <close@plt+0xe94>
   11f98:	mov	r2, #5
   11f9c:	mov	r0, #0
   11fa0:	add	r1, pc, r1
   11fa4:	bl	10fbc <dcgettext@plt>
   11fa8:	mov	r5, r0
   11fac:	ldr	r0, [r6]
   11fb0:	bl	12190 <close_stdout@@Base+0x118>
   11fb4:	mov	r1, r5
   11fb8:	mov	r2, r0
   11fbc:	mov	r0, #1
   11fc0:	bl	11118 <__printf_chk@plt>
   11fc4:	b	11df8 <close@plt+0xc44>
   11fc8:	ldr	r1, [pc, #124]	; 1204c <close@plt+0xe98>
   11fcc:	mov	r2, #5
   11fd0:	mov	r0, r4
   11fd4:	add	r1, pc, r1
   11fd8:	bl	10fbc <dcgettext@plt>
   11fdc:	mov	r5, r0
   11fe0:	ldr	r0, [r6]
   11fe4:	bl	12190 <close_stdout@@Base+0x118>
   11fe8:	mov	r1, r5
   11fec:	mov	r2, r0
   11ff0:	mov	r0, #1
   11ff4:	bl	11118 <__printf_chk@plt>
   11ff8:	b	11f94 <close@plt+0xde0>
   11ffc:	andeq	r5, r1, r4, asr #4
   12000:	strdeq	r0, [r0], -ip
   12004:	ldrdeq	r3, [r0], -r4
   12008:	andeq	r0, r0, ip, lsl r1
   1200c:	andeq	r3, r0, r4, asr #9
   12010:			; <UNDEFINED> instruction: 0x000034bc
   12014:	andeq	r0, r0, r0, lsl r1
   12018:	andeq	r3, r0, ip, asr #9
   1201c:	andeq	r3, r0, r0, ror r5
   12020:	andeq	r3, r0, r4, lsl r6
   12024:			; <UNDEFINED> instruction: 0x000036b8
   12028:	ldrdeq	r3, [r0], -r4
   1202c:	andeq	r3, r0, r8, ror #13
   12030:	andeq	r3, r0, r4, lsl #14
   12034:	andeq	r3, r0, r8, lsr #14
   12038:	muleq	r0, ip, r7
   1203c:	andeq	r3, r0, r4, lsr #15
   12040:			; <UNDEFINED> instruction: 0x000037b0
   12044:	andeq	r3, r0, ip, lsr #15
   12048:	ldrdeq	r3, [r0], -ip
   1204c:	andeq	r3, r0, r0, ror #14
   12050:	ldr	r3, [pc, #8]	; 12060 <close@plt+0xeac>
   12054:	add	r3, pc, r3
   12058:	str	r0, [r3]
   1205c:	bx	lr
   12060:	andeq	r5, r1, r8, lsr r1
   12064:	ldr	r3, [pc, #8]	; 12074 <close@plt+0xec0>
   12068:	add	r3, pc, r3
   1206c:	strb	r0, [r3, #4]
   12070:	bx	lr
   12074:	andeq	r5, r1, r4, lsr #2

00012078 <close_stdout@@Base>:
   12078:	push	{r4, r5, r6, r7, lr}
   1207c:	sub	sp, sp, #12
   12080:	ldr	r4, [pc, #228]	; 1216c <close_stdout@@Base+0xf4>
   12084:	ldr	r3, [pc, #228]	; 12170 <close_stdout@@Base+0xf8>
   12088:	add	r4, pc, r4
   1208c:	ldr	r3, [r4, r3]
   12090:	ldr	r0, [r3]
   12094:	bl	149cc <close_stdout@@Base+0x2954>
   12098:	cmp	r0, #0
   1209c:	beq	120c4 <close_stdout@@Base+0x4c>
   120a0:	ldr	r3, [pc, #204]	; 12174 <close_stdout@@Base+0xfc>
   120a4:	add	r3, pc, r3
   120a8:	ldrb	r3, [r3, #4]
   120ac:	cmp	r3, #0
   120b0:	beq	120e4 <close_stdout@@Base+0x6c>
   120b4:	bl	110e8 <__errno_location@plt>
   120b8:	ldr	r3, [r0]
   120bc:	cmp	r3, #32
   120c0:	bne	120e4 <close_stdout@@Base+0x6c>
   120c4:	ldr	r3, [pc, #172]	; 12178 <close_stdout@@Base+0x100>
   120c8:	ldr	r3, [r4, r3]
   120cc:	ldr	r0, [r3]
   120d0:	bl	149cc <close_stdout@@Base+0x2954>
   120d4:	cmp	r0, #0
   120d8:	bne	12138 <close_stdout@@Base+0xc0>
   120dc:	add	sp, sp, #12
   120e0:	pop	{r4, r5, r6, r7, pc}
   120e4:	ldr	r1, [pc, #144]	; 1217c <close_stdout@@Base+0x104>
   120e8:	mov	r0, #0
   120ec:	mov	r2, #5
   120f0:	add	r1, pc, r1
   120f4:	bl	10fbc <dcgettext@plt>
   120f8:	ldr	r3, [pc, #128]	; 12180 <close_stdout@@Base+0x108>
   120fc:	ldr	r5, [pc, r3]
   12100:	cmp	r5, #0
   12104:	mov	r6, r0
   12108:	beq	12148 <close_stdout@@Base+0xd0>
   1210c:	bl	110e8 <__errno_location@plt>
   12110:	ldr	r7, [r0]
   12114:	mov	r0, r5
   12118:	bl	13bac <close_stdout@@Base+0x1b34>
   1211c:	ldr	r2, [pc, #96]	; 12184 <close_stdout@@Base+0x10c>
   12120:	str	r6, [sp]
   12124:	mov	r1, r7
   12128:	add	r2, pc, r2
   1212c:	mov	r3, r0
   12130:	mov	r0, #0
   12134:	bl	11040 <error@plt>
   12138:	ldr	r3, [pc, #72]	; 12188 <close_stdout@@Base+0x110>
   1213c:	ldr	r3, [r4, r3]
   12140:	ldr	r0, [r3]
   12144:	bl	10f80 <_exit@plt>
   12148:	bl	110e8 <__errno_location@plt>
   1214c:	ldr	r2, [pc, #56]	; 1218c <close_stdout@@Base+0x114>
   12150:	add	r2, pc, r2
   12154:	mov	r3, r0
   12158:	mov	r0, r5
   1215c:	ldr	r1, [r3]
   12160:	mov	r3, r6
   12164:	bl	11040 <error@plt>
   12168:	b	12138 <close_stdout@@Base+0xc0>
   1216c:	andeq	r4, r1, r0, ror pc
   12170:	andeq	r0, r0, r0, lsl r1
   12174:	andeq	r5, r1, r8, ror #1
   12178:	strdeq	r0, [r0], -ip
   1217c:	andeq	r3, r0, ip, ror #15
   12180:	muleq	r1, r0, r0
   12184:	andeq	r3, r0, r0, asr #15
   12188:	andeq	r0, r0, r4, lsl r1
   1218c:	muleq	r0, ip, r7
   12190:	ldrb	r3, [r0]
   12194:	cmp	r3, #47	; 0x2f
   12198:	bne	121b4 <close_stdout@@Base+0x13c>
   1219c:	add	r2, r0, #1
   121a0:	mov	r0, r2
   121a4:	add	r2, r2, #1
   121a8:	ldrb	r3, [r0]
   121ac:	cmp	r3, #47	; 0x2f
   121b0:	beq	121a0 <close_stdout@@Base+0x128>
   121b4:	cmp	r3, #0
   121b8:	bxeq	lr
   121bc:	mov	r2, r0
   121c0:	mov	r1, #0
   121c4:	cmp	r3, #47	; 0x2f
   121c8:	moveq	r1, #1
   121cc:	beq	121dc <close_stdout@@Base+0x164>
   121d0:	cmp	r1, #0
   121d4:	movne	r0, r2
   121d8:	movne	r1, #0
   121dc:	ldrb	r3, [r2, #1]!
   121e0:	cmp	r3, #0
   121e4:	bne	121c4 <close_stdout@@Base+0x14c>
   121e8:	bx	lr
   121ec:	push	{r4, lr}
   121f0:	mov	r4, r0
   121f4:	bl	110c4 <strlen@plt>
   121f8:	cmp	r0, #1
   121fc:	popls	{r4, pc}
   12200:	sub	r3, r0, #1
   12204:	ldrb	r2, [r4, r3]
   12208:	cmp	r2, #47	; 0x2f
   1220c:	popne	{r4, pc}
   12210:	mov	r0, r3
   12214:	cmp	r0, #1
   12218:	sub	r3, r3, #1
   1221c:	beq	12230 <close_stdout@@Base+0x1b8>
   12220:	ldrb	r2, [r4, r3]
   12224:	cmp	r2, #47	; 0x2f
   12228:	popne	{r4, pc}
   1222c:	b	12210 <close_stdout@@Base+0x198>
   12230:	pop	{r4, pc}
   12234:	b	10f5c <posix_fadvise64@plt>
   12238:	cmp	r0, #0
   1223c:	push	{r4, r5, r6, lr}
   12240:	mov	r6, r1
   12244:	sub	sp, sp, #16
   12248:	beq	1226c <close_stdout@@Base+0x1f4>
   1224c:	mov	r4, #0
   12250:	mov	r5, #0
   12254:	bl	11124 <fileno@plt>
   12258:	str	r6, [sp, #8]
   1225c:	mov	r2, r4
   12260:	mov	r3, r5
   12264:	strd	r4, [sp]
   12268:	bl	12234 <close_stdout@@Base+0x1bc>
   1226c:	add	sp, sp, #16
   12270:	pop	{r4, r5, r6, pc}
   12274:	push	{r4, r5, r6, lr}
   12278:	mov	r5, r1
   1227c:	bl	11184 <fopen64@plt>
   12280:	subs	r4, r0, #0
   12284:	beq	12294 <close_stdout@@Base+0x21c>
   12288:	bl	11124 <fileno@plt>
   1228c:	cmp	r0, #2
   12290:	bls	1229c <close_stdout@@Base+0x224>
   12294:	mov	r0, r4
   12298:	pop	{r4, r5, r6, pc}
   1229c:	bl	13d0c <close_stdout@@Base+0x1c94>
   122a0:	subs	r6, r0, #0
   122a4:	blt	122d0 <close_stdout@@Base+0x258>
   122a8:	mov	r0, r4
   122ac:	bl	146b0 <close_stdout@@Base+0x2638>
   122b0:	cmp	r0, #0
   122b4:	bne	122f0 <close_stdout@@Base+0x278>
   122b8:	mov	r1, r5
   122bc:	mov	r0, r6
   122c0:	bl	10f20 <fdopen@plt>
   122c4:	cmp	r0, #0
   122c8:	beq	122f0 <close_stdout@@Base+0x278>
   122cc:	pop	{r4, r5, r6, pc}
   122d0:	bl	110e8 <__errno_location@plt>
   122d4:	ldr	r6, [r0]
   122d8:	mov	r5, r0
   122dc:	mov	r0, r4
   122e0:	bl	146b0 <close_stdout@@Base+0x2638>
   122e4:	mov	r0, #0
   122e8:	str	r6, [r5]
   122ec:	pop	{r4, r5, r6, pc}
   122f0:	bl	110e8 <__errno_location@plt>
   122f4:	ldr	r5, [r0]
   122f8:	mov	r4, r0
   122fc:	mov	r0, r6
   12300:	bl	111b4 <close@plt>
   12304:	mov	r0, #0
   12308:	str	r5, [r4]
   1230c:	pop	{r4, r5, r6, pc}
   12310:	push	{r3, lr}
   12314:	mov	r1, #0
   12318:	bl	11160 <setlocale@plt>
   1231c:	cmp	r0, #0
   12320:	beq	1235c <close_stdout@@Base+0x2e4>
   12324:	ldrb	r3, [r0]
   12328:	cmp	r3, #67	; 0x43
   1232c:	bne	12344 <close_stdout@@Base+0x2cc>
   12330:	ldrb	r3, [r0, #1]
   12334:	cmp	r3, #0
   12338:	bne	12344 <close_stdout@@Base+0x2cc>
   1233c:	mov	r0, r3
   12340:	pop	{r3, pc}
   12344:	ldr	r1, [pc, #24]	; 12364 <close_stdout@@Base+0x2ec>
   12348:	add	r1, pc, r1
   1234c:	bl	10f50 <strcmp@plt>
   12350:	adds	r0, r0, #0
   12354:	movne	r0, #1
   12358:	pop	{r3, pc}
   1235c:	mov	r0, #1
   12360:	pop	{r3, pc}
   12364:	andeq	r3, r0, r8, lsr #11
   12368:	mov	r1, #0
   1236c:	mov	r2, #20
   12370:	b	11100 <memset@plt>
   12374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12378:	mov	r5, r1
   1237c:	ldr	r3, [r1]
   12380:	mov	r9, r0
   12384:	ldr	sl, [r0, #8]
   12388:	mov	r7, r2
   1238c:	tst	r3, #16
   12390:	ldr	r8, [r0]
   12394:	moveq	r4, sl
   12398:	add	r8, sl, r8
   1239c:	beq	123b4 <close_stdout@@Base+0x33c>
   123a0:	b	12418 <close_stdout@@Base+0x3a0>
   123a4:	cmp	r6, r7
   123a8:	strb	r6, [r4]
   123ac:	add	r4, r4, #1
   123b0:	beq	12408 <close_stdout@@Base+0x390>
   123b4:	ldmib	r5, {r3, ip}
   123b8:	cmp	r3, ip
   123bc:	bcs	12420 <close_stdout@@Base+0x3a8>
   123c0:	add	ip, r3, #1
   123c4:	str	ip, [r5, #4]
   123c8:	ldrb	r6, [r3]
   123cc:	cmp	r4, r8
   123d0:	bne	123a4 <close_stdout@@Base+0x32c>
   123d4:	mov	r0, sl
   123d8:	mov	r1, r9
   123dc:	ldr	r4, [r9]
   123e0:	bl	14408 <close_stdout@@Base+0x2390>
   123e4:	ldr	r8, [r9]
   123e8:	cmp	r6, r7
   123ec:	add	r4, r0, r4
   123f0:	str	r0, [r9, #8]
   123f4:	mov	sl, r0
   123f8:	add	r8, r0, r8
   123fc:	strb	r6, [r4]
   12400:	add	r4, r4, #1
   12404:	bne	123b4 <close_stdout@@Base+0x33c>
   12408:	rsb	r4, sl, r4
   1240c:	mov	r0, r9
   12410:	str	r4, [r9, #4]
   12414:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12418:	mov	r0, #0
   1241c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12420:	mov	r0, r5
   12424:	bl	11154 <__uflow@plt>
   12428:	cmn	r0, #1
   1242c:	mov	r6, r0
   12430:	bne	123cc <close_stdout@@Base+0x354>
   12434:	cmp	r4, sl
   12438:	beq	12418 <close_stdout@@Base+0x3a0>
   1243c:	ldr	r3, [r5]
   12440:	tst	r3, #32
   12444:	bne	12418 <close_stdout@@Base+0x3a0>
   12448:	ldrb	r3, [r4, #-1]
   1244c:	cmp	r3, r7
   12450:	beq	12408 <close_stdout@@Base+0x390>
   12454:	mov	r6, r7
   12458:	b	123cc <close_stdout@@Base+0x354>
   1245c:	mov	r2, #10
   12460:	b	12374 <close_stdout@@Base+0x2fc>
   12464:	ldr	r0, [r0, #8]
   12468:	b	10f74 <free@plt>
   1246c:	push	{r3, r4, r5, lr}
   12470:	mov	r4, r1
   12474:	mov	r1, r2
   12478:	cmp	r4, r3
   1247c:	movcc	r2, r4
   12480:	movcs	r2, r3
   12484:	mov	r5, r3
   12488:	bl	10fb0 <memcmp@plt>
   1248c:	cmp	r0, #0
   12490:	popne	{r3, r4, r5, pc}
   12494:	cmp	r4, r5
   12498:	bcc	124a8 <close_stdout@@Base+0x430>
   1249c:	movls	r0, #0
   124a0:	movhi	r0, #1
   124a4:	pop	{r3, r4, r5, pc}
   124a8:	mvn	r0, #0
   124ac:	pop	{r3, r4, r5, pc}
   124b0:	push	{r3, r4, r5, r6, r7, lr}
   124b4:	subs	r4, r0, #0
   124b8:	ldr	r5, [pc, #172]	; 1256c <close_stdout@@Base+0x4f4>
   124bc:	add	r5, pc, r5
   124c0:	beq	12548 <close_stdout@@Base+0x4d0>
   124c4:	mov	r1, #47	; 0x2f
   124c8:	bl	1116c <strrchr@plt>
   124cc:	subs	r6, r0, #0
   124d0:	beq	1252c <close_stdout@@Base+0x4b4>
   124d4:	add	r7, r6, #1
   124d8:	rsb	r3, r4, r7
   124dc:	cmp	r3, #6
   124e0:	ble	1252c <close_stdout@@Base+0x4b4>
   124e4:	ldr	r1, [pc, #132]	; 12570 <close_stdout@@Base+0x4f8>
   124e8:	sub	r0, r6, #6
   124ec:	mov	r2, #7
   124f0:	add	r1, pc, r1
   124f4:	bl	1119c <strncmp@plt>
   124f8:	cmp	r0, #0
   124fc:	bne	1252c <close_stdout@@Base+0x4b4>
   12500:	ldr	r1, [pc, #108]	; 12574 <close_stdout@@Base+0x4fc>
   12504:	mov	r0, r7
   12508:	mov	r2, #3
   1250c:	add	r1, pc, r1
   12510:	bl	1119c <strncmp@plt>
   12514:	cmp	r0, #0
   12518:	movne	r4, r7
   1251c:	ldreq	r3, [pc, #84]	; 12578 <close_stdout@@Base+0x500>
   12520:	addeq	r4, r6, #4
   12524:	ldreq	r3, [r5, r3]
   12528:	streq	r4, [r3]
   1252c:	ldr	r2, [pc, #72]	; 1257c <close_stdout@@Base+0x504>
   12530:	ldr	r3, [pc, #72]	; 12580 <close_stdout@@Base+0x508>
   12534:	ldr	r2, [r5, r2]
   12538:	str	r4, [r2]
   1253c:	ldr	r3, [r5, r3]
   12540:	str	r4, [r3]
   12544:	pop	{r3, r4, r5, r6, r7, pc}
   12548:	ldr	r3, [pc, #52]	; 12584 <close_stdout@@Base+0x50c>
   1254c:	mov	r1, #1
   12550:	ldr	r0, [pc, #48]	; 12588 <close_stdout@@Base+0x510>
   12554:	mov	r2, #55	; 0x37
   12558:	ldr	r3, [r5, r3]
   1255c:	add	r0, pc, r0
   12560:	ldr	r3, [r3]
   12564:	bl	10ff8 <fwrite@plt>
   12568:	bl	111a8 <abort@plt>
   1256c:	andeq	r4, r1, ip, lsr fp
   12570:	andeq	r3, r0, r0, asr #8
   12574:	andeq	r3, r0, ip, lsr #8
   12578:	andeq	r0, r0, r4, lsr #2
   1257c:	andeq	r0, r0, ip, lsl r1
   12580:	andeq	r0, r0, r8, lsl r1
   12584:	strdeq	r0, [r0], -ip
   12588:	muleq	r0, ip, r3
   1258c:	push	{r3, lr}
   12590:	mov	r3, r0
   12594:	mov	r2, #0
   12598:	cmp	r1, #8
   1259c:	str	r2, [r3], #4
   125a0:	add	r3, r3, #4
   125a4:	str	r2, [r0, #4]
   125a8:	str	r2, [r3], #4
   125ac:	str	r2, [r3], #4
   125b0:	str	r2, [r3], #4
   125b4:	str	r2, [r3], #4
   125b8:	str	r2, [r3], #4
   125bc:	str	r2, [r3], #4
   125c0:	str	r2, [r3], #4
   125c4:	str	r2, [r3], #4
   125c8:	str	r2, [r3], #4
   125cc:	str	r2, [r3]
   125d0:	beq	125dc <close_stdout@@Base+0x564>
   125d4:	str	r1, [r0]
   125d8:	pop	{r3, pc}
   125dc:	bl	111a8 <abort@plt>
   125e0:	push	{r4, r5, r6, lr}
   125e4:	mov	r4, r0
   125e8:	mov	r6, r1
   125ec:	mov	r0, #0
   125f0:	mov	r1, r4
   125f4:	mov	r2, #5
   125f8:	bl	10fbc <dcgettext@plt>
   125fc:	cmp	r0, r4
   12600:	mov	r5, r0
   12604:	beq	1260c <close_stdout@@Base+0x594>
   12608:	pop	{r4, r5, r6, pc}
   1260c:	bl	14a4c <close_stdout@@Base+0x29d4>
   12610:	ldrb	r3, [r0]
   12614:	bic	r3, r3, #32
   12618:	cmp	r3, #85	; 0x55
   1261c:	bne	12690 <close_stdout@@Base+0x618>
   12620:	ldrb	r3, [r0, #1]
   12624:	bic	r3, r3, #32
   12628:	cmp	r3, #84	; 0x54
   1262c:	bne	1267c <close_stdout@@Base+0x604>
   12630:	ldrb	r3, [r0, #2]
   12634:	bic	r3, r3, #32
   12638:	cmp	r3, #70	; 0x46
   1263c:	bne	1267c <close_stdout@@Base+0x604>
   12640:	ldrb	r3, [r0, #3]
   12644:	cmp	r3, #45	; 0x2d
   12648:	bne	1267c <close_stdout@@Base+0x604>
   1264c:	ldrb	r3, [r0, #4]
   12650:	cmp	r3, #56	; 0x38
   12654:	bne	1267c <close_stdout@@Base+0x604>
   12658:	ldrb	r3, [r0, #5]
   1265c:	cmp	r3, #0
   12660:	bne	1267c <close_stdout@@Base+0x604>
   12664:	ldrb	r3, [r5]
   12668:	cmp	r3, #96	; 0x60
   1266c:	beq	12708 <close_stdout@@Base+0x690>
   12670:	ldr	r0, [pc, #180]	; 1272c <close_stdout@@Base+0x6b4>
   12674:	add	r0, pc, r0
   12678:	pop	{r4, r5, r6, pc}
   1267c:	cmp	r6, #7
   12680:	beq	12714 <close_stdout@@Base+0x69c>
   12684:	ldr	r0, [pc, #164]	; 12730 <close_stdout@@Base+0x6b8>
   12688:	add	r0, pc, r0
   1268c:	pop	{r4, r5, r6, pc}
   12690:	cmp	r3, #71	; 0x47
   12694:	bne	1267c <close_stdout@@Base+0x604>
   12698:	ldrb	r3, [r0, #1]
   1269c:	bic	r3, r3, #32
   126a0:	cmp	r3, #66	; 0x42
   126a4:	bne	1267c <close_stdout@@Base+0x604>
   126a8:	ldrb	r3, [r0, #2]
   126ac:	cmp	r3, #49	; 0x31
   126b0:	bne	1267c <close_stdout@@Base+0x604>
   126b4:	ldrb	r3, [r0, #3]
   126b8:	cmp	r3, #56	; 0x38
   126bc:	bne	1267c <close_stdout@@Base+0x604>
   126c0:	ldrb	r3, [r0, #4]
   126c4:	cmp	r3, #48	; 0x30
   126c8:	bne	1267c <close_stdout@@Base+0x604>
   126cc:	ldrb	r3, [r0, #5]
   126d0:	cmp	r3, #51	; 0x33
   126d4:	bne	1267c <close_stdout@@Base+0x604>
   126d8:	ldrb	r3, [r0, #6]
   126dc:	cmp	r3, #48	; 0x30
   126e0:	bne	1267c <close_stdout@@Base+0x604>
   126e4:	ldrb	r3, [r0, #7]
   126e8:	cmp	r3, #0
   126ec:	bne	1267c <close_stdout@@Base+0x604>
   126f0:	ldrb	r3, [r5]
   126f4:	cmp	r3, #96	; 0x60
   126f8:	beq	12720 <close_stdout@@Base+0x6a8>
   126fc:	ldr	r0, [pc, #48]	; 12734 <close_stdout@@Base+0x6bc>
   12700:	add	r0, pc, r0
   12704:	pop	{r4, r5, r6, pc}
   12708:	ldr	r0, [pc, #40]	; 12738 <close_stdout@@Base+0x6c0>
   1270c:	add	r0, pc, r0
   12710:	pop	{r4, r5, r6, pc}
   12714:	ldr	r0, [pc, #32]	; 1273c <close_stdout@@Base+0x6c4>
   12718:	add	r0, pc, r0
   1271c:	pop	{r4, r5, r6, pc}
   12720:	ldr	r0, [pc, #24]	; 12740 <close_stdout@@Base+0x6c8>
   12724:	add	r0, pc, r0
   12728:	pop	{r4, r5, r6, pc}
   1272c:	andeq	r3, r0, r8, ror #5
   12730:	ldrdeq	r3, [r0], -ip
   12734:	andeq	r3, r0, r0, ror #4
   12738:	andeq	r3, r0, r4, ror #4
   1273c:	andeq	r3, r0, r0, asr r2
   12740:	andeq	r3, r0, r8, asr #4
   12744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12748:	sub	sp, sp, #124	; 0x7c
   1274c:	ldr	ip, [pc, #3304]	; 1343c <close_stdout@@Base+0x13c4>
   12750:	mov	sl, r1
   12754:	str	r0, [sp, #40]	; 0x28
   12758:	mov	r8, r3
   1275c:	ldr	r0, [pc, #3292]	; 13440 <close_stdout@@Base+0x13c8>
   12760:	add	ip, pc, ip
   12764:	str	r2, [sp, #32]
   12768:	ldr	r1, [sp, #164]	; 0xa4
   1276c:	mov	r3, ip
   12770:	ldr	r0, [ip, r0]
   12774:	ldr	r2, [sp, #172]	; 0xac
   12778:	ubfx	r1, r1, #1, #1
   1277c:	str	r1, [sp, #36]	; 0x24
   12780:	str	r0, [sp, #56]	; 0x38
   12784:	ldr	r0, [sp, #168]	; 0xa8
   12788:	ldr	r1, [sp, #176]	; 0xb0
   1278c:	str	r2, [sp, #72]	; 0x48
   12790:	str	r0, [sp, #48]	; 0x30
   12794:	ldr	r0, [sp, #56]	; 0x38
   12798:	str	r1, [sp, #68]	; 0x44
   1279c:	ldr	r3, [r0]
   127a0:	str	r3, [sp, #116]	; 0x74
   127a4:	bl	11010 <__ctype_get_mb_cur_max@plt>
   127a8:	ldr	r2, [sp, #160]	; 0xa0
   127ac:	str	r0, [sp, #64]	; 0x40
   127b0:	cmp	r2, #8
   127b4:	addls	pc, pc, r2, lsl #2
   127b8:	b	13318 <close_stdout@@Base+0x12a0>
   127bc:	b	127e0 <close_stdout@@Base+0x768>
   127c0:	b	13030 <close_stdout@@Base+0xfb8>
   127c4:	b	13060 <close_stdout@@Base+0xfe8>
   127c8:	b	12f10 <close_stdout@@Base+0xe98>
   127cc:	b	12f50 <close_stdout@@Base+0xed8>
   127d0:	b	12f7c <close_stdout@@Base+0xf04>
   127d4:	b	12f9c <close_stdout@@Base+0xf24>
   127d8:	b	12f9c <close_stdout@@Base+0xf24>
   127dc:	b	12f9c <close_stdout@@Base+0xf24>
   127e0:	mov	r2, #0
   127e4:	str	r2, [sp, #36]	; 0x24
   127e8:	mov	r9, r2
   127ec:	str	r2, [sp, #24]
   127f0:	str	r2, [sp, #28]
   127f4:	str	r2, [sp, #52]	; 0x34
   127f8:	ldr	r0, [sp, #36]	; 0x24
   127fc:	mov	fp, #0
   12800:	ldr	r1, [sp, #24]
   12804:	eor	r2, r0, #1
   12808:	eor	r3, r1, #1
   1280c:	and	r3, r2, r3
   12810:	and	r2, r1, r0
   12814:	str	r3, [sp, #44]	; 0x2c
   12818:	str	r2, [sp, #76]	; 0x4c
   1281c:	cmn	r8, #1
   12820:	beq	12ba0 <close_stdout@@Base+0xb28>
   12824:	subs	r3, fp, r8
   12828:	movne	r3, #1
   1282c:	cmp	r3, #0
   12830:	beq	12bb8 <close_stdout@@Base+0xb40>
   12834:	ldr	r3, [sp, #28]
   12838:	ldr	r0, [sp, #24]
   1283c:	adds	r7, r3, #0
   12840:	movne	r7, #1
   12844:	ands	r6, r7, r0
   12848:	bne	130a4 <close_stdout@@Base+0x102c>
   1284c:	ldr	r1, [sp, #32]
   12850:	add	r5, r1, fp
   12854:	ldrb	r4, [r5]
   12858:	cmp	r4, #126	; 0x7e
   1285c:	addls	pc, pc, r4, lsl #2
   12860:	b	12e24 <close_stdout@@Base+0xdac>
   12864:	b	12d30 <close_stdout@@Base+0xcb8>
   12868:	b	12e24 <close_stdout@@Base+0xdac>
   1286c:	b	12e24 <close_stdout@@Base+0xdac>
   12870:	b	12e24 <close_stdout@@Base+0xdac>
   12874:	b	12e24 <close_stdout@@Base+0xdac>
   12878:	b	12e24 <close_stdout@@Base+0xdac>
   1287c:	b	12e24 <close_stdout@@Base+0xdac>
   12880:	b	12d18 <close_stdout@@Base+0xca0>
   12884:	b	12d00 <close_stdout@@Base+0xc88>
   12888:	b	12d28 <close_stdout@@Base+0xcb0>
   1288c:	b	12d20 <close_stdout@@Base+0xca8>
   12890:	b	12d10 <close_stdout@@Base+0xc98>
   12894:	b	12d08 <close_stdout@@Base+0xc90>
   12898:	b	12ccc <close_stdout@@Base+0xc54>
   1289c:	b	12e24 <close_stdout@@Base+0xdac>
   128a0:	b	12e24 <close_stdout@@Base+0xdac>
   128a4:	b	12e24 <close_stdout@@Base+0xdac>
   128a8:	b	12e24 <close_stdout@@Base+0xdac>
   128ac:	b	12e24 <close_stdout@@Base+0xdac>
   128b0:	b	12e24 <close_stdout@@Base+0xdac>
   128b4:	b	12e24 <close_stdout@@Base+0xdac>
   128b8:	b	12e24 <close_stdout@@Base+0xdac>
   128bc:	b	12e24 <close_stdout@@Base+0xdac>
   128c0:	b	12e24 <close_stdout@@Base+0xdac>
   128c4:	b	12e24 <close_stdout@@Base+0xdac>
   128c8:	b	12e24 <close_stdout@@Base+0xdac>
   128cc:	b	12e24 <close_stdout@@Base+0xdac>
   128d0:	b	12e24 <close_stdout@@Base+0xdac>
   128d4:	b	12e24 <close_stdout@@Base+0xdac>
   128d8:	b	12e24 <close_stdout@@Base+0xdac>
   128dc:	b	12e24 <close_stdout@@Base+0xdac>
   128e0:	b	12e24 <close_stdout@@Base+0xdac>
   128e4:	b	12c58 <close_stdout@@Base+0xbe0>
   128e8:	b	12c58 <close_stdout@@Base+0xbe0>
   128ec:	b	12c58 <close_stdout@@Base+0xbe0>
   128f0:	b	12c50 <close_stdout@@Base+0xbd8>
   128f4:	b	12c58 <close_stdout@@Base+0xbe0>
   128f8:	b	12b2c <close_stdout@@Base+0xab4>
   128fc:	b	12c58 <close_stdout@@Base+0xbe0>
   12900:	b	12dcc <close_stdout@@Base+0xd54>
   12904:	b	12c58 <close_stdout@@Base+0xbe0>
   12908:	b	12c58 <close_stdout@@Base+0xbe0>
   1290c:	b	12c58 <close_stdout@@Base+0xbe0>
   12910:	b	12b2c <close_stdout@@Base+0xab4>
   12914:	b	12b2c <close_stdout@@Base+0xab4>
   12918:	b	12b2c <close_stdout@@Base+0xab4>
   1291c:	b	12b2c <close_stdout@@Base+0xab4>
   12920:	b	12b2c <close_stdout@@Base+0xab4>
   12924:	b	12b2c <close_stdout@@Base+0xab4>
   12928:	b	12b2c <close_stdout@@Base+0xab4>
   1292c:	b	12b2c <close_stdout@@Base+0xab4>
   12930:	b	12b2c <close_stdout@@Base+0xab4>
   12934:	b	12b2c <close_stdout@@Base+0xab4>
   12938:	b	12b2c <close_stdout@@Base+0xab4>
   1293c:	b	12b2c <close_stdout@@Base+0xab4>
   12940:	b	12b2c <close_stdout@@Base+0xab4>
   12944:	b	12b2c <close_stdout@@Base+0xab4>
   12948:	b	12b2c <close_stdout@@Base+0xab4>
   1294c:	b	12b2c <close_stdout@@Base+0xab4>
   12950:	b	12c58 <close_stdout@@Base+0xbe0>
   12954:	b	12c58 <close_stdout@@Base+0xbe0>
   12958:	b	12c58 <close_stdout@@Base+0xbe0>
   1295c:	b	12c58 <close_stdout@@Base+0xbe0>
   12960:	b	12a60 <close_stdout@@Base+0x9e8>
   12964:	b	12e24 <close_stdout@@Base+0xdac>
   12968:	b	12b2c <close_stdout@@Base+0xab4>
   1296c:	b	12b2c <close_stdout@@Base+0xab4>
   12970:	b	12b2c <close_stdout@@Base+0xab4>
   12974:	b	12b2c <close_stdout@@Base+0xab4>
   12978:	b	12b2c <close_stdout@@Base+0xab4>
   1297c:	b	12b2c <close_stdout@@Base+0xab4>
   12980:	b	12b2c <close_stdout@@Base+0xab4>
   12984:	b	12b2c <close_stdout@@Base+0xab4>
   12988:	b	12b2c <close_stdout@@Base+0xab4>
   1298c:	b	12b2c <close_stdout@@Base+0xab4>
   12990:	b	12b2c <close_stdout@@Base+0xab4>
   12994:	b	12b2c <close_stdout@@Base+0xab4>
   12998:	b	12b2c <close_stdout@@Base+0xab4>
   1299c:	b	12b2c <close_stdout@@Base+0xab4>
   129a0:	b	12b2c <close_stdout@@Base+0xab4>
   129a4:	b	12b2c <close_stdout@@Base+0xab4>
   129a8:	b	12b2c <close_stdout@@Base+0xab4>
   129ac:	b	12b2c <close_stdout@@Base+0xab4>
   129b0:	b	12b2c <close_stdout@@Base+0xab4>
   129b4:	b	12b2c <close_stdout@@Base+0xab4>
   129b8:	b	12b2c <close_stdout@@Base+0xab4>
   129bc:	b	12b2c <close_stdout@@Base+0xab4>
   129c0:	b	12b2c <close_stdout@@Base+0xab4>
   129c4:	b	12b2c <close_stdout@@Base+0xab4>
   129c8:	b	12b2c <close_stdout@@Base+0xab4>
   129cc:	b	12b2c <close_stdout@@Base+0xab4>
   129d0:	b	12c58 <close_stdout@@Base+0xbe0>
   129d4:	b	12db0 <close_stdout@@Base+0xd38>
   129d8:	b	12b2c <close_stdout@@Base+0xab4>
   129dc:	b	12c58 <close_stdout@@Base+0xbe0>
   129e0:	b	12b2c <close_stdout@@Base+0xab4>
   129e4:	b	12c58 <close_stdout@@Base+0xbe0>
   129e8:	b	12b2c <close_stdout@@Base+0xab4>
   129ec:	b	12b2c <close_stdout@@Base+0xab4>
   129f0:	b	12b2c <close_stdout@@Base+0xab4>
   129f4:	b	12b2c <close_stdout@@Base+0xab4>
   129f8:	b	12b2c <close_stdout@@Base+0xab4>
   129fc:	b	12b2c <close_stdout@@Base+0xab4>
   12a00:	b	12b2c <close_stdout@@Base+0xab4>
   12a04:	b	12b2c <close_stdout@@Base+0xab4>
   12a08:	b	12b2c <close_stdout@@Base+0xab4>
   12a0c:	b	12b2c <close_stdout@@Base+0xab4>
   12a10:	b	12b2c <close_stdout@@Base+0xab4>
   12a14:	b	12b2c <close_stdout@@Base+0xab4>
   12a18:	b	12b2c <close_stdout@@Base+0xab4>
   12a1c:	b	12b2c <close_stdout@@Base+0xab4>
   12a20:	b	12b2c <close_stdout@@Base+0xab4>
   12a24:	b	12b2c <close_stdout@@Base+0xab4>
   12a28:	b	12b2c <close_stdout@@Base+0xab4>
   12a2c:	b	12b2c <close_stdout@@Base+0xab4>
   12a30:	b	12b2c <close_stdout@@Base+0xab4>
   12a34:	b	12b2c <close_stdout@@Base+0xab4>
   12a38:	b	12b2c <close_stdout@@Base+0xab4>
   12a3c:	b	12b2c <close_stdout@@Base+0xab4>
   12a40:	b	12b2c <close_stdout@@Base+0xab4>
   12a44:	b	12b2c <close_stdout@@Base+0xab4>
   12a48:	b	12b2c <close_stdout@@Base+0xab4>
   12a4c:	b	12b2c <close_stdout@@Base+0xab4>
   12a50:	b	12c38 <close_stdout@@Base+0xbc0>
   12a54:	b	12c58 <close_stdout@@Base+0xbe0>
   12a58:	b	12c38 <close_stdout@@Base+0xbc0>
   12a5c:	b	12c50 <close_stdout@@Base+0xbd8>
   12a60:	ldr	r3, [sp, #160]	; 0xa0
   12a64:	cmp	r3, #2
   12a68:	beq	132f4 <close_stdout@@Base+0x127c>
   12a6c:	cmp	r3, #3
   12a70:	bne	12b2c <close_stdout@@Base+0xab4>
   12a74:	ldr	r1, [sp, #164]	; 0xa4
   12a78:	tst	r1, #4
   12a7c:	beq	12b2c <close_stdout@@Base+0xab4>
   12a80:	add	r3, fp, #2
   12a84:	cmp	r8, r3
   12a88:	bls	12b2c <close_stdout@@Base+0xab4>
   12a8c:	ldrb	r2, [r5, #1]
   12a90:	mov	r1, #1
   12a94:	cmp	r2, #63	; 0x3f
   12a98:	bne	12b2c <close_stdout@@Base+0xab4>
   12a9c:	ldr	r0, [sp, #32]
   12aa0:	ldrb	ip, [r0, r3]
   12aa4:	sub	r0, ip, #33	; 0x21
   12aa8:	uxtb	r0, r0
   12aac:	cmp	r0, #29
   12ab0:	bhi	12b2c <close_stdout@@Base+0xab4>
   12ab4:	lsl	r1, r1, r0
   12ab8:	movw	r0, #20929	; 0x51c1
   12abc:	movt	r0, #14336	; 0x3800
   12ac0:	and	r0, r1, r0
   12ac4:	cmp	r0, #0
   12ac8:	beq	12b2c <close_stdout@@Base+0xab4>
   12acc:	ldr	r1, [sp, #36]	; 0x24
   12ad0:	cmp	r1, #0
   12ad4:	bne	12c74 <close_stdout@@Base+0xbfc>
   12ad8:	cmp	r9, sl
   12adc:	mov	r4, ip
   12ae0:	mov	fp, r3
   12ae4:	ldrcc	r0, [sp, #40]	; 0x28
   12ae8:	strbcc	r2, [r0, r9]
   12aec:	add	r2, r9, #1
   12af0:	cmp	sl, r2
   12af4:	ldrhi	r0, [sp, #40]	; 0x28
   12af8:	movhi	r1, #34	; 0x22
   12afc:	strbhi	r1, [r0, r2]
   12b00:	add	r2, r9, #2
   12b04:	cmp	sl, r2
   12b08:	ldrhi	r0, [sp, #40]	; 0x28
   12b0c:	movhi	r1, #34	; 0x22
   12b10:	strbhi	r1, [r0, r2]
   12b14:	add	r2, r9, #3
   12b18:	cmp	sl, r2
   12b1c:	add	r9, r9, #4
   12b20:	ldrhi	r0, [sp, #40]	; 0x28
   12b24:	movhi	r1, #63	; 0x3f
   12b28:	strbhi	r1, [r0, r2]
   12b2c:	ldr	r0, [sp, #44]	; 0x2c
   12b30:	cmp	r0, #0
   12b34:	bne	12b5c <close_stdout@@Base+0xae4>
   12b38:	ldr	r1, [sp, #48]	; 0x30
   12b3c:	cmp	r1, #0
   12b40:	beq	12b5c <close_stdout@@Base+0xae4>
   12b44:	ubfx	r2, r4, #5, #8
   12b48:	and	r3, r4, #31
   12b4c:	ldr	r2, [r1, r2, lsl #2]
   12b50:	lsr	r3, r2, r3
   12b54:	tst	r3, #1
   12b58:	bne	12b64 <close_stdout@@Base+0xaec>
   12b5c:	cmp	r6, #0
   12b60:	beq	12b84 <close_stdout@@Base+0xb0c>
   12b64:	ldr	r2, [sp, #36]	; 0x24
   12b68:	cmp	r2, #0
   12b6c:	bne	12c74 <close_stdout@@Base+0xbfc>
   12b70:	cmp	r9, sl
   12b74:	ldrcc	r0, [sp, #40]	; 0x28
   12b78:	movcc	r3, #92	; 0x5c
   12b7c:	strbcc	r3, [r0, r9]
   12b80:	add	r9, r9, #1
   12b84:	add	fp, fp, #1
   12b88:	cmp	r9, sl
   12b8c:	ldrcc	r1, [sp, #40]	; 0x28
   12b90:	strbcc	r4, [r1, r9]
   12b94:	cmn	r8, #1
   12b98:	add	r9, r9, #1
   12b9c:	bne	12824 <close_stdout@@Base+0x7ac>
   12ba0:	ldr	r2, [sp, #32]
   12ba4:	ldrb	r3, [r2, fp]
   12ba8:	adds	r3, r3, #0
   12bac:	movne	r3, #1
   12bb0:	cmp	r3, #0
   12bb4:	bne	12834 <close_stdout@@Base+0x7bc>
   12bb8:	ldr	r3, [sp, #160]	; 0xa0
   12bbc:	cmp	r9, #0
   12bc0:	cmpeq	r3, #2
   12bc4:	bne	12bd4 <close_stdout@@Base+0xb5c>
   12bc8:	ldr	r0, [sp, #36]	; 0x24
   12bcc:	cmp	r0, #0
   12bd0:	bne	12c74 <close_stdout@@Base+0xbfc>
   12bd4:	ldr	r1, [sp, #36]	; 0x24
   12bd8:	ldr	r2, [sp, #52]	; 0x34
   12bdc:	eor	r3, r1, #1
   12be0:	cmp	r2, #0
   12be4:	moveq	r3, #0
   12be8:	andne	r3, r3, #1
   12bec:	cmp	r3, #0
   12bf0:	beq	12c1c <close_stdout@@Base+0xba4>
   12bf4:	ldrb	r3, [r2]
   12bf8:	cmp	r3, #0
   12bfc:	beq	12c1c <close_stdout@@Base+0xba4>
   12c00:	ldr	r1, [sp, #40]	; 0x28
   12c04:	cmp	sl, r9
   12c08:	strbhi	r3, [r1, r9]
   12c0c:	ldrb	r3, [r2, #1]!
   12c10:	add	r9, r9, #1
   12c14:	cmp	r3, #0
   12c18:	bne	12c04 <close_stdout@@Base+0xb8c>
   12c1c:	cmp	r9, sl
   12c20:	movcs	r0, r9
   12c24:	ldrcc	r1, [sp, #40]	; 0x28
   12c28:	movcc	r3, #0
   12c2c:	movcc	r0, r9
   12c30:	strbcc	r3, [r1, r9]
   12c34:	b	12cb0 <close_stdout@@Base+0xc38>
   12c38:	cmn	r8, #1
   12c3c:	beq	13304 <close_stdout@@Base+0x128c>
   12c40:	subs	r3, r8, #1
   12c44:	movne	r3, #1
   12c48:	cmp	r3, #0
   12c4c:	bne	12b2c <close_stdout@@Base+0xab4>
   12c50:	cmp	fp, #0
   12c54:	bne	12b2c <close_stdout@@Base+0xab4>
   12c58:	ldr	r3, [sp, #36]	; 0x24
   12c5c:	ldr	r0, [sp, #160]	; 0xa0
   12c60:	cmp	r0, #2
   12c64:	movne	r3, #0
   12c68:	andeq	r3, r3, #1
   12c6c:	cmp	r3, #0
   12c70:	beq	12b2c <close_stdout@@Base+0xab4>
   12c74:	ldr	r2, [sp, #164]	; 0xa4
   12c78:	mov	ip, #0
   12c7c:	ldr	r0, [sp, #160]	; 0xa0
   12c80:	bic	r3, r2, #2
   12c84:	ldr	r1, [sp, #72]	; 0x48
   12c88:	ldr	r2, [sp, #68]	; 0x44
   12c8c:	stm	sp, {r0, r3}
   12c90:	mov	r3, r8
   12c94:	str	r1, [sp, #12]
   12c98:	mov	r1, sl
   12c9c:	str	r2, [sp, #16]
   12ca0:	ldr	r0, [sp, #40]	; 0x28
   12ca4:	ldr	r2, [sp, #32]
   12ca8:	str	ip, [sp, #8]
   12cac:	bl	12744 <close_stdout@@Base+0x6cc>
   12cb0:	ldr	r1, [sp, #56]	; 0x38
   12cb4:	ldr	r2, [sp, #116]	; 0x74
   12cb8:	ldr	r3, [r1]
   12cbc:	cmp	r2, r3
   12cc0:	bne	133f4 <close_stdout@@Base+0x137c>
   12cc4:	add	sp, sp, #124	; 0x7c
   12cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ccc:	mov	r3, #114	; 0x72
   12cd0:	ldr	r2, [sp, #36]	; 0x24
   12cd4:	ldr	r0, [sp, #160]	; 0xa0
   12cd8:	cmp	r0, #2
   12cdc:	movne	r2, #0
   12ce0:	andeq	r2, r2, #1
   12ce4:	cmp	r2, #0
   12ce8:	bne	12c74 <close_stdout@@Base+0xbfc>
   12cec:	ldr	r1, [sp, #24]
   12cf0:	cmp	r1, #0
   12cf4:	beq	12b2c <close_stdout@@Base+0xab4>
   12cf8:	mov	r4, r3
   12cfc:	b	12b64 <close_stdout@@Base+0xaec>
   12d00:	mov	r3, #98	; 0x62
   12d04:	b	12cec <close_stdout@@Base+0xc74>
   12d08:	mov	r3, #102	; 0x66
   12d0c:	b	12cec <close_stdout@@Base+0xc74>
   12d10:	mov	r3, #118	; 0x76
   12d14:	b	12cec <close_stdout@@Base+0xc74>
   12d18:	mov	r3, #97	; 0x61
   12d1c:	b	12cec <close_stdout@@Base+0xc74>
   12d20:	mov	r3, #110	; 0x6e
   12d24:	b	12cd0 <close_stdout@@Base+0xc58>
   12d28:	mov	r3, #116	; 0x74
   12d2c:	b	12cd0 <close_stdout@@Base+0xc58>
   12d30:	ldr	r2, [sp, #24]
   12d34:	cmp	r2, #0
   12d38:	beq	132e0 <close_stdout@@Base+0x1268>
   12d3c:	ldr	r3, [sp, #36]	; 0x24
   12d40:	cmp	r3, #0
   12d44:	bne	12c74 <close_stdout@@Base+0xbfc>
   12d48:	cmp	r9, sl
   12d4c:	add	r2, r9, #1
   12d50:	ldrcc	r0, [sp, #40]	; 0x28
   12d54:	movcc	r3, #92	; 0x5c
   12d58:	strbcc	r3, [r0, r9]
   12d5c:	add	r3, fp, #1
   12d60:	cmp	r8, r3
   12d64:	bls	12da4 <close_stdout@@Base+0xd2c>
   12d68:	ldr	r1, [sp, #32]
   12d6c:	ldrb	r3, [r1, r3]
   12d70:	sub	r3, r3, #48	; 0x30
   12d74:	cmp	r3, #9
   12d78:	bhi	12da4 <close_stdout@@Base+0xd2c>
   12d7c:	cmp	sl, r2
   12d80:	ldrhi	r0, [sp, #40]	; 0x28
   12d84:	movhi	r3, #48	; 0x30
   12d88:	strbhi	r3, [r0, r2]
   12d8c:	add	r3, r9, #2
   12d90:	cmp	sl, r3
   12d94:	ldrhi	r1, [sp, #40]	; 0x28
   12d98:	movhi	r2, #48	; 0x30
   12d9c:	strbhi	r2, [r1, r3]
   12da0:	add	r2, r9, #3
   12da4:	mov	r9, r2
   12da8:	mov	r4, #48	; 0x30
   12dac:	b	12b38 <close_stdout@@Base+0xac0>
   12db0:	ldr	r1, [sp, #76]	; 0x4c
   12db4:	cmp	r1, #0
   12db8:	beq	12dc4 <close_stdout@@Base+0xd4c>
   12dbc:	cmp	r7, #0
   12dc0:	bne	12b84 <close_stdout@@Base+0xb0c>
   12dc4:	mov	r3, r4
   12dc8:	b	12cd0 <close_stdout@@Base+0xc58>
   12dcc:	ldr	r1, [sp, #160]	; 0xa0
   12dd0:	cmp	r1, #2
   12dd4:	bne	12b2c <close_stdout@@Base+0xab4>
   12dd8:	ldr	r2, [sp, #36]	; 0x24
   12ddc:	cmp	r2, #0
   12de0:	bne	12c74 <close_stdout@@Base+0xbfc>
   12de4:	cmp	r9, sl
   12de8:	ldrcc	r0, [sp, #40]	; 0x28
   12dec:	movcc	r3, #39	; 0x27
   12df0:	strbcc	r3, [r0, r9]
   12df4:	add	r3, r9, #1
   12df8:	cmp	sl, r3
   12dfc:	ldrhi	r1, [sp, #40]	; 0x28
   12e00:	movhi	r2, #92	; 0x5c
   12e04:	strbhi	r2, [r1, r3]
   12e08:	add	r3, r9, #2
   12e0c:	cmp	sl, r3
   12e10:	add	r9, r9, #3
   12e14:	ldrhi	r0, [sp, #40]	; 0x28
   12e18:	movhi	r2, #39	; 0x27
   12e1c:	strbhi	r2, [r0, r3]
   12e20:	b	12b2c <close_stdout@@Base+0xab4>
   12e24:	ldr	r1, [sp, #64]	; 0x40
   12e28:	cmp	r1, #1
   12e2c:	bne	13124 <close_stdout@@Base+0x10ac>
   12e30:	bl	110ac <__ctype_b_loc@plt>
   12e34:	ldr	r2, [sp, #64]	; 0x40
   12e38:	sxth	r3, r4
   12e3c:	str	r2, [sp, #60]	; 0x3c
   12e40:	lsl	r3, r3, #1
   12e44:	ldr	r2, [r0]
   12e48:	ldrh	r2, [r2, r3]
   12e4c:	eor	r2, r2, #16384	; 0x4000
   12e50:	ubfx	r2, r2, #14, #1
   12e54:	ldr	r1, [sp, #24]
   12e58:	ands	r2, r2, r1
   12e5c:	beq	12b2c <close_stdout@@Base+0xab4>
   12e60:	ldr	r3, [sp, #60]	; 0x3c
   12e64:	mov	r0, #92	; 0x5c
   12e68:	ldr	r7, [sp, #36]	; 0x24
   12e6c:	add	r1, r3, fp
   12e70:	str	r8, [sp, #60]	; 0x3c
   12e74:	ldr	r3, [sp, #40]	; 0x28
   12e78:	b	12edc <close_stdout@@Base+0xe64>
   12e7c:	cmp	r7, #0
   12e80:	bne	1331c <close_stdout@@Base+0x12a4>
   12e84:	add	ip, r9, #1
   12e88:	cmp	r9, sl
   12e8c:	strbcc	r0, [r3, r9]
   12e90:	cmp	sl, ip
   12e94:	lsrhi	r8, r4, #6
   12e98:	addhi	r8, r8, #48	; 0x30
   12e9c:	strbhi	r8, [r3, ip]
   12ea0:	add	ip, r9, #2
   12ea4:	add	r9, r9, #3
   12ea8:	cmp	sl, ip
   12eac:	ubfxhi	r8, r4, #3, #3
   12eb0:	and	r4, r4, #7
   12eb4:	add	r4, r4, #48	; 0x30
   12eb8:	addhi	r8, r8, #48	; 0x30
   12ebc:	strbhi	r8, [r3, ip]
   12ec0:	add	fp, fp, #1
   12ec4:	cmp	r1, fp
   12ec8:	bls	12f08 <close_stdout@@Base+0xe90>
   12ecc:	cmp	r9, sl
   12ed0:	strbcc	r4, [r3, r9]
   12ed4:	ldrb	r4, [r5, #1]!
   12ed8:	add	r9, r9, #1
   12edc:	cmp	r2, #0
   12ee0:	bne	12e7c <close_stdout@@Base+0xe04>
   12ee4:	cmp	r6, #0
   12ee8:	beq	12ec0 <close_stdout@@Base+0xe48>
   12eec:	add	fp, fp, #1
   12ef0:	cmp	r9, sl
   12ef4:	strbcc	r0, [r3, r9]
   12ef8:	cmp	r1, fp
   12efc:	add	r9, r9, #1
   12f00:	mov	r6, #0
   12f04:	bhi	12ecc <close_stdout@@Base+0xe54>
   12f08:	ldr	r8, [sp, #60]	; 0x3c
   12f0c:	b	12b88 <close_stdout@@Base+0xb10>
   12f10:	ldr	r3, [sp, #36]	; 0x24
   12f14:	cmp	r3, #0
   12f18:	bne	1341c <close_stdout@@Base+0x13a4>
   12f1c:	cmp	sl, #0
   12f20:	beq	13334 <close_stdout@@Base+0x12bc>
   12f24:	ldr	r1, [sp, #40]	; 0x28
   12f28:	mov	r0, #1
   12f2c:	ldr	r2, [pc, #1296]	; 13444 <close_stdout@@Base+0x13cc>
   12f30:	mov	r3, #34	; 0x22
   12f34:	str	r0, [sp, #24]
   12f38:	mov	r9, r0
   12f3c:	add	r2, pc, r2
   12f40:	str	r0, [sp, #28]
   12f44:	strb	r3, [r1]
   12f48:	str	r2, [sp, #52]	; 0x34
   12f4c:	b	127f8 <close_stdout@@Base+0x780>
   12f50:	ldr	r3, [pc, #1264]	; 13448 <close_stdout@@Base+0x13d0>
   12f54:	mov	r2, #1
   12f58:	mov	r0, #3
   12f5c:	str	r2, [sp, #36]	; 0x24
   12f60:	add	r3, pc, r3
   12f64:	str	r2, [sp, #24]
   12f68:	str	r3, [sp, #52]	; 0x34
   12f6c:	mov	r9, #0
   12f70:	str	r2, [sp, #28]
   12f74:	str	r0, [sp, #160]	; 0xa0
   12f78:	b	127f8 <close_stdout@@Base+0x780>
   12f7c:	mov	r0, #0
   12f80:	mov	r1, #1
   12f84:	str	r0, [sp, #36]	; 0x24
   12f88:	mov	r9, r0
   12f8c:	str	r1, [sp, #24]
   12f90:	str	r0, [sp, #28]
   12f94:	str	r0, [sp, #52]	; 0x34
   12f98:	b	127f8 <close_stdout@@Base+0x780>
   12f9c:	ldr	r3, [sp, #160]	; 0xa0
   12fa0:	cmp	r3, #8
   12fa4:	beq	12fd0 <close_stdout@@Base+0xf58>
   12fa8:	ldr	r0, [pc, #1180]	; 1344c <close_stdout@@Base+0x13d4>
   12fac:	mov	r1, r3
   12fb0:	add	r0, pc, r0
   12fb4:	bl	125e0 <close_stdout@@Base+0x568>
   12fb8:	ldr	r1, [sp, #160]	; 0xa0
   12fbc:	str	r0, [sp, #72]	; 0x48
   12fc0:	ldr	r0, [pc, #1160]	; 13450 <close_stdout@@Base+0x13d8>
   12fc4:	add	r0, pc, r0
   12fc8:	bl	125e0 <close_stdout@@Base+0x568>
   12fcc:	str	r0, [sp, #68]	; 0x44
   12fd0:	ldr	r0, [sp, #36]	; 0x24
   12fd4:	cmp	r0, #0
   12fd8:	movne	r9, #0
   12fdc:	bne	13014 <close_stdout@@Base+0xf9c>
   12fe0:	ldr	r1, [sp, #72]	; 0x48
   12fe4:	ldrb	r3, [r1]
   12fe8:	cmp	r3, #0
   12fec:	beq	133ec <close_stdout@@Base+0x1374>
   12ff0:	mov	r2, r1
   12ff4:	ldr	r1, [sp, #40]	; 0x28
   12ff8:	mov	r9, r0
   12ffc:	cmp	r9, sl
   13000:	strbcc	r3, [r1, r9]
   13004:	ldrb	r3, [r2, #1]!
   13008:	add	r9, r9, #1
   1300c:	cmp	r3, #0
   13010:	bne	12ffc <close_stdout@@Base+0xf84>
   13014:	ldr	r0, [sp, #68]	; 0x44
   13018:	str	r0, [sp, #52]	; 0x34
   1301c:	bl	110c4 <strlen@plt>
   13020:	mov	r2, #1
   13024:	str	r2, [sp, #24]
   13028:	str	r0, [sp, #28]
   1302c:	b	127f8 <close_stdout@@Base+0x780>
   13030:	ldr	r3, [pc, #1052]	; 13454 <close_stdout@@Base+0x13dc>
   13034:	mov	r2, #0
   13038:	mov	r1, #1
   1303c:	mov	r0, #2
   13040:	add	r3, pc, r3
   13044:	str	r1, [sp, #36]	; 0x24
   13048:	str	r2, [sp, #24]
   1304c:	mov	r9, r2
   13050:	str	r1, [sp, #28]
   13054:	str	r3, [sp, #52]	; 0x34
   13058:	str	r0, [sp, #160]	; 0xa0
   1305c:	b	127f8 <close_stdout@@Base+0x780>
   13060:	ldr	r3, [sp, #36]	; 0x24
   13064:	cmp	r3, #0
   13068:	bne	133f8 <close_stdout@@Base+0x1380>
   1306c:	cmp	sl, #0
   13070:	beq	13354 <close_stdout@@Base+0x12dc>
   13074:	ldr	r1, [sp, #40]	; 0x28
   13078:	mov	r3, #39	; 0x27
   1307c:	ldr	r2, [sp, #36]	; 0x24
   13080:	mov	r0, #1
   13084:	mov	r9, r0
   13088:	str	r0, [sp, #28]
   1308c:	strb	r3, [r1]
   13090:	ldr	r3, [pc, #960]	; 13458 <close_stdout@@Base+0x13e0>
   13094:	str	r2, [sp, #24]
   13098:	add	r3, pc, r3
   1309c:	str	r3, [sp, #52]	; 0x34
   130a0:	b	127f8 <close_stdout@@Base+0x780>
   130a4:	ldr	r2, [sp, #28]
   130a8:	cmp	r2, #1
   130ac:	add	r4, fp, r2
   130b0:	movls	r3, #0
   130b4:	movhi	r3, #1
   130b8:	cmn	r8, #1
   130bc:	movne	r3, #0
   130c0:	cmp	r3, #0
   130c4:	beq	130d4 <close_stdout@@Base+0x105c>
   130c8:	ldr	r0, [sp, #32]
   130cc:	bl	110c4 <strlen@plt>
   130d0:	mov	r8, r0
   130d4:	cmp	r8, r4
   130d8:	ldrcc	r3, [sp, #32]
   130dc:	movcc	r6, #0
   130e0:	addcc	r5, r3, fp
   130e4:	bcc	12854 <close_stdout@@Base+0x7dc>
   130e8:	ldr	r0, [sp, #32]
   130ec:	ldr	r1, [sp, #52]	; 0x34
   130f0:	add	r5, r0, fp
   130f4:	ldr	r2, [sp, #28]
   130f8:	mov	r0, r5
   130fc:	bl	10fb0 <memcmp@plt>
   13100:	cmp	r0, #0
   13104:	bne	1311c <close_stdout@@Base+0x10a4>
   13108:	ldr	r1, [sp, #36]	; 0x24
   1310c:	cmp	r1, #0
   13110:	bne	12c74 <close_stdout@@Base+0xbfc>
   13114:	mov	r6, #1
   13118:	b	12854 <close_stdout@@Base+0x7dc>
   1311c:	mov	r6, #0
   13120:	b	12854 <close_stdout@@Base+0x7dc>
   13124:	add	r7, sp, #108	; 0x6c
   13128:	cmn	r8, #1
   1312c:	mov	r3, #0
   13130:	str	r3, [sp, #108]	; 0x6c
   13134:	str	r3, [r7, #4]
   13138:	beq	13324 <close_stdout@@Base+0x12ac>
   1313c:	mov	r1, #0
   13140:	ldr	r0, [sp, #32]
   13144:	mov	ip, #1
   13148:	str	r9, [sp, #88]	; 0x58
   1314c:	str	r6, [sp, #96]	; 0x60
   13150:	mov	r9, r1
   13154:	str	r5, [sp, #100]	; 0x64
   13158:	mov	r6, ip
   1315c:	mov	r5, r7
   13160:	add	r3, sp, #104	; 0x68
   13164:	sub	r0, r0, #1
   13168:	str	r3, [sp, #80]	; 0x50
   1316c:	str	r0, [sp, #84]	; 0x54
   13170:	str	r1, [sp, #60]	; 0x3c
   13174:	str	r4, [sp, #92]	; 0x5c
   13178:	ldr	r2, [sp, #32]
   1317c:	add	r7, r9, fp
   13180:	add	r0, sp, #104	; 0x68
   13184:	mov	r3, r5
   13188:	add	r4, r2, r7
   1318c:	rsb	r2, r7, r8
   13190:	mov	r1, r4
   13194:	bl	11034 <mbrtowc@plt>
   13198:	subs	r2, r0, #0
   1319c:	beq	132a8 <close_stdout@@Base+0x1230>
   131a0:	cmn	r2, #1
   131a4:	beq	133d0 <close_stdout@@Base+0x1358>
   131a8:	cmn	r2, #2
   131ac:	beq	13374 <close_stdout@@Base+0x12fc>
   131b0:	ldr	r3, [sp, #36]	; 0x24
   131b4:	ldr	r0, [sp, #160]	; 0xa0
   131b8:	cmp	r0, #2
   131bc:	movne	r3, #0
   131c0:	andeq	r3, r3, #1
   131c4:	cmp	r3, #0
   131c8:	beq	13284 <close_stdout@@Base+0x120c>
   131cc:	cmp	r2, #1
   131d0:	beq	13284 <close_stdout@@Base+0x120c>
   131d4:	ldr	r1, [sp, #84]	; 0x54
   131d8:	add	r3, r1, r2
   131dc:	add	r7, r3, r7
   131e0:	ldrb	r3, [r4, #1]!
   131e4:	sub	r3, r3, #91	; 0x5b
   131e8:	cmp	r3, #33	; 0x21
   131ec:	addls	pc, pc, r3, lsl #2
   131f0:	b	1327c <close_stdout@@Base+0x1204>
   131f4:	b	12c74 <close_stdout@@Base+0xbfc>
   131f8:	b	12c74 <close_stdout@@Base+0xbfc>
   131fc:	b	1327c <close_stdout@@Base+0x1204>
   13200:	b	12c74 <close_stdout@@Base+0xbfc>
   13204:	b	1327c <close_stdout@@Base+0x1204>
   13208:	b	12c74 <close_stdout@@Base+0xbfc>
   1320c:	b	1327c <close_stdout@@Base+0x1204>
   13210:	b	1327c <close_stdout@@Base+0x1204>
   13214:	b	1327c <close_stdout@@Base+0x1204>
   13218:	b	1327c <close_stdout@@Base+0x1204>
   1321c:	b	1327c <close_stdout@@Base+0x1204>
   13220:	b	1327c <close_stdout@@Base+0x1204>
   13224:	b	1327c <close_stdout@@Base+0x1204>
   13228:	b	1327c <close_stdout@@Base+0x1204>
   1322c:	b	1327c <close_stdout@@Base+0x1204>
   13230:	b	1327c <close_stdout@@Base+0x1204>
   13234:	b	1327c <close_stdout@@Base+0x1204>
   13238:	b	1327c <close_stdout@@Base+0x1204>
   1323c:	b	1327c <close_stdout@@Base+0x1204>
   13240:	b	1327c <close_stdout@@Base+0x1204>
   13244:	b	1327c <close_stdout@@Base+0x1204>
   13248:	b	1327c <close_stdout@@Base+0x1204>
   1324c:	b	1327c <close_stdout@@Base+0x1204>
   13250:	b	1327c <close_stdout@@Base+0x1204>
   13254:	b	1327c <close_stdout@@Base+0x1204>
   13258:	b	1327c <close_stdout@@Base+0x1204>
   1325c:	b	1327c <close_stdout@@Base+0x1204>
   13260:	b	1327c <close_stdout@@Base+0x1204>
   13264:	b	1327c <close_stdout@@Base+0x1204>
   13268:	b	1327c <close_stdout@@Base+0x1204>
   1326c:	b	1327c <close_stdout@@Base+0x1204>
   13270:	b	1327c <close_stdout@@Base+0x1204>
   13274:	b	1327c <close_stdout@@Base+0x1204>
   13278:	b	12c74 <close_stdout@@Base+0xbfc>
   1327c:	cmp	r4, r7
   13280:	bne	131e0 <close_stdout@@Base+0x1168>
   13284:	ldr	r0, [sp, #104]	; 0x68
   13288:	add	r9, r9, r2
   1328c:	bl	10fec <iswprint@plt>
   13290:	cmp	r0, #0
   13294:	mov	r0, r5
   13298:	moveq	r6, #0
   1329c:	bl	10f98 <mbsinit@plt>
   132a0:	cmp	r0, #0
   132a4:	beq	13178 <close_stdout@@Base+0x1100>
   132a8:	mov	ip, r6
   132ac:	eor	r2, ip, #1
   132b0:	str	r9, [sp, #60]	; 0x3c
   132b4:	ldr	r4, [sp, #92]	; 0x5c
   132b8:	uxtb	r2, r2
   132bc:	ldr	r9, [sp, #88]	; 0x58
   132c0:	ldr	r6, [sp, #96]	; 0x60
   132c4:	ldr	r5, [sp, #100]	; 0x64
   132c8:	ldr	r3, [sp, #60]	; 0x3c
   132cc:	cmp	r3, #1
   132d0:	bls	12e54 <close_stdout@@Base+0xddc>
   132d4:	ldr	r0, [sp, #24]
   132d8:	and	r2, r2, r0
   132dc:	b	12e60 <close_stdout@@Base+0xde8>
   132e0:	ldr	r2, [sp, #164]	; 0xa4
   132e4:	tst	r2, #1
   132e8:	addne	fp, fp, #1
   132ec:	bne	1281c <close_stdout@@Base+0x7a4>
   132f0:	b	12b2c <close_stdout@@Base+0xab4>
   132f4:	ldr	r0, [sp, #36]	; 0x24
   132f8:	cmp	r0, #0
   132fc:	beq	12b2c <close_stdout@@Base+0xab4>
   13300:	b	12c74 <close_stdout@@Base+0xbfc>
   13304:	ldr	r2, [sp, #32]
   13308:	ldrb	r3, [r2, #1]
   1330c:	adds	r3, r3, #0
   13310:	movne	r3, #1
   13314:	b	12c48 <close_stdout@@Base+0xbd0>
   13318:	bl	111a8 <abort@plt>
   1331c:	ldr	r8, [sp, #60]	; 0x3c
   13320:	b	12c74 <close_stdout@@Base+0xbfc>
   13324:	ldr	r0, [sp, #32]
   13328:	bl	110c4 <strlen@plt>
   1332c:	mov	r8, r0
   13330:	b	1313c <close_stdout@@Base+0x10c4>
   13334:	ldr	r2, [pc, #288]	; 1345c <close_stdout@@Base+0x13e4>
   13338:	mov	r1, #1
   1333c:	mov	r9, r1
   13340:	str	r1, [sp, #24]
   13344:	add	r2, pc, r2
   13348:	str	r1, [sp, #28]
   1334c:	str	r2, [sp, #52]	; 0x34
   13350:	b	127f8 <close_stdout@@Base+0x780>
   13354:	ldr	r2, [pc, #260]	; 13460 <close_stdout@@Base+0x13e8>
   13358:	mov	r3, #1
   1335c:	mov	r9, r3
   13360:	str	r3, [sp, #28]
   13364:	add	r2, pc, r2
   13368:	str	sl, [sp, #24]
   1336c:	str	r2, [sp, #52]	; 0x34
   13370:	b	127f8 <close_stdout@@Base+0x780>
   13374:	cmp	r8, r7
   13378:	str	r9, [sp, #60]	; 0x3c
   1337c:	mov	ip, r4
   13380:	ldr	r6, [sp, #96]	; 0x60
   13384:	ldr	r9, [sp, #88]	; 0x58
   13388:	ldr	r4, [sp, #92]	; 0x5c
   1338c:	ldr	r5, [sp, #100]	; 0x64
   13390:	bls	133c8 <close_stdout@@Base+0x1350>
   13394:	ldrb	r3, [ip]
   13398:	cmp	r3, #0
   1339c:	beq	133c8 <close_stdout@@Base+0x1350>
   133a0:	ldr	r3, [sp, #60]	; 0x3c
   133a4:	b	133b4 <close_stdout@@Base+0x133c>
   133a8:	ldrb	r2, [r5, r3]
   133ac:	cmp	r2, #0
   133b0:	beq	133c4 <close_stdout@@Base+0x134c>
   133b4:	add	r3, r3, #1
   133b8:	add	r2, fp, r3
   133bc:	cmp	r8, r2
   133c0:	bhi	133a8 <close_stdout@@Base+0x1330>
   133c4:	str	r3, [sp, #60]	; 0x3c
   133c8:	mov	r2, #1
   133cc:	b	132c8 <close_stdout@@Base+0x1250>
   133d0:	str	r9, [sp, #60]	; 0x3c
   133d4:	mov	r2, #1
   133d8:	ldr	r4, [sp, #92]	; 0x5c
   133dc:	ldr	r6, [sp, #96]	; 0x60
   133e0:	ldr	r9, [sp, #88]	; 0x58
   133e4:	ldr	r5, [sp, #100]	; 0x64
   133e8:	b	132c8 <close_stdout@@Base+0x1250>
   133ec:	ldr	r9, [sp, #36]	; 0x24
   133f0:	b	13014 <close_stdout@@Base+0xf9c>
   133f4:	bl	10fc8 <__stack_chk_fail@plt>
   133f8:	ldr	r1, [pc, #100]	; 13464 <close_stdout@@Base+0x13ec>
   133fc:	mov	r3, #0
   13400:	mov	r0, #1
   13404:	str	r3, [sp, #24]
   13408:	add	r1, pc, r1
   1340c:	str	r0, [sp, #28]
   13410:	mov	r9, r3
   13414:	str	r1, [sp, #52]	; 0x34
   13418:	b	127f8 <close_stdout@@Base+0x780>
   1341c:	ldr	r0, [pc, #68]	; 13468 <close_stdout@@Base+0x13f0>
   13420:	mov	r3, #1
   13424:	mov	r9, #0
   13428:	str	r3, [sp, #24]
   1342c:	add	r0, pc, r0
   13430:	str	r3, [sp, #28]
   13434:	str	r0, [sp, #52]	; 0x34
   13438:	b	127f8 <close_stdout@@Base+0x780>
   1343c:	muleq	r1, r8, r8
   13440:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13444:	andeq	r2, r0, ip, lsr #20
   13448:	andeq	r2, r0, r8, lsl #20
   1344c:	andeq	r2, r0, r4, asr #19
   13450:	andeq	r2, r0, r0, lsr #19
   13454:	andeq	r2, r0, r4, lsr #18
   13458:	andeq	r2, r0, ip, asr #17
   1345c:	andeq	r2, r0, r4, lsr #12
   13460:	andeq	r2, r0, r0, lsl #12
   13464:	andeq	r2, r0, ip, asr r5
   13468:	andeq	r2, r0, ip, lsr r5
   1346c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13470:	sub	sp, sp, #44	; 0x2c
   13474:	mov	r6, r0
   13478:	mov	r9, r1
   1347c:	mov	sl, r2
   13480:	mov	r4, r3
   13484:	bl	110e8 <__errno_location@plt>
   13488:	ldr	fp, [pc, #412]	; 1362c <close_stdout@@Base+0x15b4>
   1348c:	cmp	r6, #0
   13490:	add	fp, pc, fp
   13494:	ldr	r5, [fp]
   13498:	ldr	r1, [r0]
   1349c:	mov	r8, r0
   134a0:	str	r1, [sp, #36]	; 0x24
   134a4:	blt	13624 <close_stdout@@Base+0x15ac>
   134a8:	ldr	r3, [pc, #384]	; 13630 <close_stdout@@Base+0x15b8>
   134ac:	add	r3, pc, r3
   134b0:	ldr	r3, [r3]
   134b4:	cmp	r6, r3
   134b8:	bcc	1350c <close_stdout@@Base+0x1494>
   134bc:	add	r7, r6, #1
   134c0:	cmn	r7, #-536870911	; 0xe0000001
   134c4:	bhi	13628 <close_stdout@@Base+0x15b0>
   134c8:	add	r3, fp, #4
   134cc:	cmp	r5, r3
   134d0:	beq	135fc <close_stdout@@Base+0x1584>
   134d4:	mov	r0, r5
   134d8:	lsl	r1, r7, #3
   134dc:	bl	14310 <close_stdout@@Base+0x2298>
   134e0:	mov	r5, r0
   134e4:	str	r0, [fp]
   134e8:	ldr	fp, [pc, #324]	; 13634 <close_stdout@@Base+0x15bc>
   134ec:	mov	r1, #0
   134f0:	add	fp, pc, fp
   134f4:	ldr	r0, [fp]
   134f8:	rsb	r2, r0, r7
   134fc:	add	r0, r5, r0, lsl #3
   13500:	lsl	r2, r2, #3
   13504:	bl	11100 <memset@plt>
   13508:	str	r7, [fp]
   1350c:	add	r2, r4, #8
   13510:	str	r2, [sp, #32]
   13514:	ldr	r1, [r4]
   13518:	add	fp, r5, r6, lsl #3
   1351c:	ldr	lr, [sp, #32]
   13520:	mov	r2, r9
   13524:	ldr	r3, [r4, #4]
   13528:	ldr	ip, [r5, r6, lsl #3]
   1352c:	ldr	r7, [fp, #4]
   13530:	orr	r3, r3, #1
   13534:	str	r1, [sp]
   13538:	str	r3, [sp, #4]
   1353c:	mov	r1, ip
   13540:	str	lr, [sp, #8]
   13544:	mov	r0, r7
   13548:	ldr	lr, [r4, #40]	; 0x28
   1354c:	str	r3, [sp, #28]
   13550:	mov	r3, sl
   13554:	str	lr, [sp, #12]
   13558:	ldr	lr, [r4, #44]	; 0x2c
   1355c:	str	ip, [sp, #24]
   13560:	str	lr, [sp, #16]
   13564:	bl	12744 <close_stdout@@Base+0x6cc>
   13568:	ldr	ip, [sp, #24]
   1356c:	cmp	ip, r0
   13570:	bhi	135e8 <close_stdout@@Base+0x1570>
   13574:	ldr	r3, [pc, #188]	; 13638 <close_stdout@@Base+0x15c0>
   13578:	add	r1, r0, #1
   1357c:	str	r1, [r5, r6, lsl #3]
   13580:	add	r3, pc, r3
   13584:	cmp	r7, r3
   13588:	beq	1359c <close_stdout@@Base+0x1524>
   1358c:	mov	r0, r7
   13590:	str	r1, [sp, #24]
   13594:	bl	10f74 <free@plt>
   13598:	ldr	r1, [sp, #24]
   1359c:	mov	r0, r1
   135a0:	str	r1, [sp, #24]
   135a4:	bl	142b8 <close_stdout@@Base+0x2240>
   135a8:	ldr	r3, [sp, #28]
   135ac:	ldr	lr, [sp, #32]
   135b0:	mov	r2, r9
   135b4:	str	r0, [fp, #4]
   135b8:	mov	r7, r0
   135bc:	ldr	ip, [r4]
   135c0:	str	r3, [sp, #4]
   135c4:	mov	r3, sl
   135c8:	str	lr, [sp, #8]
   135cc:	str	ip, [sp]
   135d0:	ldr	ip, [r4, #40]	; 0x28
   135d4:	ldr	r1, [sp, #24]
   135d8:	str	ip, [sp, #12]
   135dc:	ldr	ip, [r4, #44]	; 0x2c
   135e0:	str	ip, [sp, #16]
   135e4:	bl	12744 <close_stdout@@Base+0x6cc>
   135e8:	ldr	r1, [sp, #36]	; 0x24
   135ec:	mov	r0, r7
   135f0:	str	r1, [r8]
   135f4:	add	sp, sp, #44	; 0x2c
   135f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135fc:	lsl	r1, r7, #3
   13600:	mov	r0, #0
   13604:	str	r3, [sp, #24]
   13608:	bl	14310 <close_stdout@@Base+0x2298>
   1360c:	ldr	r3, [sp, #24]
   13610:	mov	r5, r0
   13614:	ldm	r3, {r0, r1}
   13618:	str	r5, [fp]
   1361c:	stm	r5, {r0, r1}
   13620:	b	134e8 <close_stdout@@Base+0x1470>
   13624:	bl	111a8 <abort@plt>
   13628:	bl	144cc <close_stdout@@Base+0x2454>
   1362c:	ldrdeq	r3, [r1], -r4
   13630:	andeq	r3, r1, r4, lsl #25
   13634:	andeq	r3, r1, r0, asr #24
   13638:	andeq	r3, r1, r8, lsl ip
   1363c:	push	{r4, r5, r6, lr}
   13640:	mov	r5, r0
   13644:	bl	110e8 <__errno_location@plt>
   13648:	cmp	r5, #0
   1364c:	mov	r1, #48	; 0x30
   13650:	mov	r4, r0
   13654:	ldr	r0, [pc, #24]	; 13674 <close_stdout@@Base+0x15fc>
   13658:	ldr	r6, [r4]
   1365c:	add	r0, pc, r0
   13660:	add	r0, r0, #256	; 0x100
   13664:	movne	r0, r5
   13668:	bl	1448c <close_stdout@@Base+0x2414>
   1366c:	str	r6, [r4]
   13670:	pop	{r4, r5, r6, pc}
   13674:	andeq	r3, r1, ip, lsr fp
   13678:	cmp	r0, #0
   1367c:	beq	13688 <close_stdout@@Base+0x1610>
   13680:	ldr	r0, [r0]
   13684:	bx	lr
   13688:	ldr	r0, [pc, #12]	; 1369c <close_stdout@@Base+0x1624>
   1368c:	add	r0, pc, r0
   13690:	add	r0, r0, #256	; 0x100
   13694:	ldr	r0, [r0]
   13698:	bx	lr
   1369c:	andeq	r3, r1, ip, lsl #22
   136a0:	cmp	r0, #0
   136a4:	beq	136b0 <close_stdout@@Base+0x1638>
   136a8:	str	r1, [r0]
   136ac:	bx	lr
   136b0:	ldr	r0, [pc, #12]	; 136c4 <close_stdout@@Base+0x164c>
   136b4:	add	r0, pc, r0
   136b8:	add	r0, r0, #256	; 0x100
   136bc:	str	r1, [r0]
   136c0:	bx	lr
   136c4:	andeq	r3, r1, r4, ror #21
   136c8:	cmp	r0, #0
   136cc:	movne	r3, r0
   136d0:	beq	13700 <close_stdout@@Base+0x1688>
   136d4:	lsr	ip, r1, #5
   136d8:	and	r1, r1, #31
   136dc:	add	r3, r3, ip, lsl #2
   136e0:	ldr	ip, [r3, #8]
   136e4:	lsr	r0, ip, r1
   136e8:	eor	r2, r0, r2
   136ec:	and	r0, r0, #1
   136f0:	and	r2, r2, #1
   136f4:	eor	ip, ip, r2, lsl r1
   136f8:	str	ip, [r3, #8]
   136fc:	bx	lr
   13700:	ldr	r3, [pc, #8]	; 13710 <close_stdout@@Base+0x1698>
   13704:	add	r3, pc, r3
   13708:	add	r3, r3, #256	; 0x100
   1370c:	b	136d4 <close_stdout@@Base+0x165c>
   13710:	muleq	r1, r4, sl
   13714:	subs	r3, r0, #0
   13718:	beq	13728 <close_stdout@@Base+0x16b0>
   1371c:	ldr	r0, [r3, #4]
   13720:	str	r1, [r3, #4]
   13724:	bx	lr
   13728:	ldr	r3, [pc, #8]	; 13738 <close_stdout@@Base+0x16c0>
   1372c:	add	r3, pc, r3
   13730:	add	r3, r3, #256	; 0x100
   13734:	b	1371c <close_stdout@@Base+0x16a4>
   13738:	andeq	r3, r1, ip, ror #20
   1373c:	cmp	r0, #0
   13740:	push	{r3, lr}
   13744:	beq	13768 <close_stdout@@Base+0x16f0>
   13748:	cmp	r2, #0
   1374c:	cmpne	r1, #0
   13750:	mov	r3, #8
   13754:	strne	r1, [r0, #40]	; 0x28
   13758:	str	r3, [r0]
   1375c:	strne	r2, [r0, #44]	; 0x2c
   13760:	popne	{r3, pc}
   13764:	bl	111a8 <abort@plt>
   13768:	ldr	r0, [pc, #8]	; 13778 <close_stdout@@Base+0x1700>
   1376c:	add	r0, pc, r0
   13770:	add	r0, r0, #256	; 0x100
   13774:	b	13748 <close_stdout@@Base+0x16d0>
   13778:	andeq	r3, r1, ip, lsr #20
   1377c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13780:	sub	sp, sp, #24
   13784:	mov	r7, r0
   13788:	mov	sl, r1
   1378c:	ldr	r4, [sp, #56]	; 0x38
   13790:	mov	r9, r2
   13794:	mov	r8, r3
   13798:	cmp	r4, #0
   1379c:	beq	137f0 <close_stdout@@Base+0x1778>
   137a0:	bl	110e8 <__errno_location@plt>
   137a4:	ldr	r3, [r4]
   137a8:	add	lr, r4, #8
   137ac:	mov	r1, sl
   137b0:	mov	r2, r9
   137b4:	ldr	r6, [r0]
   137b8:	mov	r5, r0
   137bc:	str	r3, [sp]
   137c0:	mov	r0, r7
   137c4:	ldr	ip, [r4, #4]
   137c8:	mov	r3, r8
   137cc:	stmib	sp, {ip, lr}
   137d0:	ldr	ip, [r4, #40]	; 0x28
   137d4:	str	ip, [sp, #12]
   137d8:	ldr	ip, [r4, #44]	; 0x2c
   137dc:	str	ip, [sp, #16]
   137e0:	bl	12744 <close_stdout@@Base+0x6cc>
   137e4:	str	r6, [r5]
   137e8:	add	sp, sp, #24
   137ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137f0:	ldr	r4, [pc, #8]	; 13800 <close_stdout@@Base+0x1788>
   137f4:	add	r4, pc, r4
   137f8:	add	r4, r4, #256	; 0x100
   137fc:	b	137a0 <close_stdout@@Base+0x1728>
   13800:	andeq	r3, r1, r4, lsr #19
   13804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13808:	subs	r4, r3, #0
   1380c:	sub	sp, sp, #36	; 0x24
   13810:	mov	r7, r0
   13814:	mov	r6, r1
   13818:	mov	r5, r2
   1381c:	beq	138d8 <close_stdout@@Base+0x1860>
   13820:	bl	110e8 <__errno_location@plt>
   13824:	ldr	r3, [r4]
   13828:	ldr	sl, [r4, #4]
   1382c:	add	r9, r4, #8
   13830:	mov	r8, r0
   13834:	mov	r0, #0
   13838:	ldr	r2, [r8]
   1383c:	cmp	r5, r0
   13840:	orreq	sl, sl, #1
   13844:	str	r9, [sp, #8]
   13848:	mov	r1, r0
   1384c:	stm	sp, {r3, sl}
   13850:	mov	r3, r6
   13854:	ldr	ip, [r4, #40]	; 0x28
   13858:	str	r2, [sp, #28]
   1385c:	mov	r2, r7
   13860:	str	ip, [sp, #12]
   13864:	ldr	ip, [r4, #44]	; 0x2c
   13868:	str	ip, [sp, #16]
   1386c:	bl	12744 <close_stdout@@Base+0x6cc>
   13870:	add	r1, r0, #1
   13874:	mov	fp, r0
   13878:	str	r1, [sp, #24]
   1387c:	mov	r0, r1
   13880:	bl	142b8 <close_stdout@@Base+0x2240>
   13884:	ldr	lr, [r4]
   13888:	str	sl, [sp, #4]
   1388c:	mov	r3, r6
   13890:	str	r9, [sp, #8]
   13894:	mov	r2, r7
   13898:	str	lr, [sp]
   1389c:	ldr	lr, [r4, #40]	; 0x28
   138a0:	ldr	r1, [sp, #24]
   138a4:	str	lr, [sp, #12]
   138a8:	ldr	lr, [r4, #44]	; 0x2c
   138ac:	str	lr, [sp, #16]
   138b0:	str	r0, [sp, #24]
   138b4:	bl	12744 <close_stdout@@Base+0x6cc>
   138b8:	ldr	r3, [sp, #28]
   138bc:	cmp	r5, #0
   138c0:	str	r3, [r8]
   138c4:	ldr	ip, [sp, #24]
   138c8:	strne	fp, [r5]
   138cc:	mov	r0, ip
   138d0:	add	sp, sp, #36	; 0x24
   138d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138d8:	ldr	r4, [pc, #8]	; 138e8 <close_stdout@@Base+0x1870>
   138dc:	add	r4, pc, r4
   138e0:	add	r4, r4, #256	; 0x100
   138e4:	b	13820 <close_stdout@@Base+0x17a8>
   138e8:			; <UNDEFINED> instruction: 0x000138bc
   138ec:	mov	r3, r2
   138f0:	mov	r2, #0
   138f4:	b	13804 <close_stdout@@Base+0x178c>
   138f8:	ldr	r2, [pc, #152]	; 13998 <close_stdout@@Base+0x1920>
   138fc:	push	{r3, r4, r5, r6, r7, lr}
   13900:	add	r2, pc, r2
   13904:	ldr	r3, [pc, #144]	; 1399c <close_stdout@@Base+0x1924>
   13908:	ldr	r6, [r2]
   1390c:	add	r3, pc, r3
   13910:	cmp	r6, #1
   13914:	ldr	r7, [r3]
   13918:	movhi	r4, #1
   1391c:	movhi	r5, r7
   13920:	bls	1393c <close_stdout@@Base+0x18c4>
   13924:	ldr	r0, [r5, #12]
   13928:	add	r4, r4, #1
   1392c:	bl	10f74 <free@plt>
   13930:	cmp	r4, r6
   13934:	add	r5, r5, #8
   13938:	bne	13924 <close_stdout@@Base+0x18ac>
   1393c:	ldr	r4, [pc, #92]	; 139a0 <close_stdout@@Base+0x1928>
   13940:	ldr	r0, [r7, #4]
   13944:	add	r4, pc, r4
   13948:	cmp	r0, r4
   1394c:	beq	13964 <close_stdout@@Base+0x18ec>
   13950:	bl	10f74 <free@plt>
   13954:	ldr	r3, [pc, #72]	; 139a4 <close_stdout@@Base+0x192c>
   13958:	mov	r2, #256	; 0x100
   1395c:	add	r3, pc, r3
   13960:	stmib	r3, {r2, r4}
   13964:	ldr	r4, [pc, #60]	; 139a8 <close_stdout@@Base+0x1930>
   13968:	add	r4, pc, r4
   1396c:	add	r5, r4, #4
   13970:	cmp	r7, r5
   13974:	beq	13984 <close_stdout@@Base+0x190c>
   13978:	mov	r0, r7
   1397c:	bl	10f74 <free@plt>
   13980:	str	r5, [r4]
   13984:	ldr	r3, [pc, #32]	; 139ac <close_stdout@@Base+0x1934>
   13988:	mov	r2, #1
   1398c:	add	r3, pc, r3
   13990:	str	r2, [r3]
   13994:	pop	{r3, r4, r5, r6, r7, pc}
   13998:	andeq	r3, r1, r0, lsr r8
   1399c:	andeq	r3, r1, r8, asr r8
   139a0:	andeq	r3, r1, r4, asr r8
   139a4:	andeq	r3, r1, r8, lsl #16
   139a8:	strdeq	r3, [r1], -ip
   139ac:	andeq	r3, r1, r4, lsr #15
   139b0:	ldr	r3, [pc, #12]	; 139c4 <close_stdout@@Base+0x194c>
   139b4:	mvn	r2, #0
   139b8:	add	r3, pc, r3
   139bc:	add	r3, r3, #256	; 0x100
   139c0:	b	1346c <close_stdout@@Base+0x13f4>
   139c4:	andeq	r3, r1, r0, ror #15
   139c8:	ldr	r3, [pc, #8]	; 139d8 <close_stdout@@Base+0x1960>
   139cc:	add	r3, pc, r3
   139d0:	add	r3, r3, #256	; 0x100
   139d4:	b	1346c <close_stdout@@Base+0x13f4>
   139d8:	andeq	r3, r1, ip, asr #15
   139dc:	mov	r1, r0
   139e0:	mov	r0, #0
   139e4:	b	139b0 <close_stdout@@Base+0x1938>
   139e8:	mov	r2, r1
   139ec:	mov	r1, r0
   139f0:	mov	r0, #0
   139f4:	b	139c8 <close_stdout@@Base+0x1950>
   139f8:	ldr	r3, [pc, #92]	; 13a5c <close_stdout@@Base+0x19e4>
   139fc:	ldr	ip, [pc, #92]	; 13a60 <close_stdout@@Base+0x19e8>
   13a00:	add	r3, pc, r3
   13a04:	push	{r4, r5, r6, r7, lr}
   13a08:	sub	sp, sp, #60	; 0x3c
   13a0c:	ldr	r4, [r3, ip]
   13a10:	add	r5, sp, #4
   13a14:	mov	r7, r2
   13a18:	mov	r6, r0
   13a1c:	mov	r0, r5
   13a20:	ldr	r3, [r4]
   13a24:	str	r3, [sp, #52]	; 0x34
   13a28:	bl	1258c <close_stdout@@Base+0x514>
   13a2c:	mov	r3, r5
   13a30:	mvn	r2, #0
   13a34:	mov	r0, r6
   13a38:	mov	r1, r7
   13a3c:	bl	1346c <close_stdout@@Base+0x13f4>
   13a40:	ldr	r2, [sp, #52]	; 0x34
   13a44:	ldr	r3, [r4]
   13a48:	cmp	r2, r3
   13a4c:	bne	13a58 <close_stdout@@Base+0x19e0>
   13a50:	add	sp, sp, #60	; 0x3c
   13a54:	pop	{r4, r5, r6, r7, pc}
   13a58:	bl	10fc8 <__stack_chk_fail@plt>
   13a5c:	strdeq	r3, [r1], -r8
   13a60:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a64:	ldr	ip, [pc, #96]	; 13acc <close_stdout@@Base+0x1a54>
   13a68:	push	{r4, r5, r6, r7, r8, lr}
   13a6c:	add	ip, pc, ip
   13a70:	ldr	lr, [pc, #88]	; 13ad0 <close_stdout@@Base+0x1a58>
   13a74:	sub	sp, sp, #56	; 0x38
   13a78:	mov	r8, r3
   13a7c:	add	r5, sp, #4
   13a80:	mov	r7, r2
   13a84:	mov	r6, r0
   13a88:	ldr	r4, [ip, lr]
   13a8c:	mov	r0, r5
   13a90:	ldr	r3, [r4]
   13a94:	str	r3, [sp, #52]	; 0x34
   13a98:	bl	1258c <close_stdout@@Base+0x514>
   13a9c:	mov	r2, r8
   13aa0:	mov	r3, r5
   13aa4:	mov	r0, r6
   13aa8:	mov	r1, r7
   13aac:	bl	1346c <close_stdout@@Base+0x13f4>
   13ab0:	ldr	r2, [sp, #52]	; 0x34
   13ab4:	ldr	r3, [r4]
   13ab8:	cmp	r2, r3
   13abc:	bne	13ac8 <close_stdout@@Base+0x1a50>
   13ac0:	add	sp, sp, #56	; 0x38
   13ac4:	pop	{r4, r5, r6, r7, r8, pc}
   13ac8:	bl	10fc8 <__stack_chk_fail@plt>
   13acc:	andeq	r3, r1, ip, lsl #11
   13ad0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ad4:	mov	r2, r1
   13ad8:	mov	r1, r0
   13adc:	mov	r0, #0
   13ae0:	b	139f8 <close_stdout@@Base+0x1980>
   13ae4:	mov	ip, r1
   13ae8:	mov	r3, r2
   13aec:	mov	r1, r0
   13af0:	mov	r2, ip
   13af4:	mov	r0, #0
   13af8:	b	13a64 <close_stdout@@Base+0x19ec>
   13afc:	push	{r4, r5, r6, r7, r8, lr}
   13b00:	mov	r5, r2
   13b04:	ldr	lr, [pc, #136]	; 13b94 <close_stdout@@Base+0x1b1c>
   13b08:	mov	r7, r0
   13b0c:	mov	r6, r1
   13b10:	ldr	r4, [pc, #128]	; 13b98 <close_stdout@@Base+0x1b20>
   13b14:	add	lr, pc, lr
   13b18:	sub	sp, sp, #56	; 0x38
   13b1c:	add	lr, lr, #256	; 0x100
   13b20:	ldr	r8, [pc, #116]	; 13b9c <close_stdout@@Base+0x1b24>
   13b24:	add	r4, pc, r4
   13b28:	add	ip, sp, #4
   13b2c:	ldm	lr!, {r0, r1, r2, r3}
   13b30:	ldr	r4, [r4, r8]
   13b34:	stmia	ip!, {r0, r1, r2, r3}
   13b38:	ldm	lr!, {r0, r1, r2, r3}
   13b3c:	ldr	r8, [r4]
   13b40:	stmia	ip!, {r0, r1, r2, r3}
   13b44:	ldm	lr, {r0, r1, r2, r3}
   13b48:	str	r8, [sp, #52]	; 0x34
   13b4c:	stm	ip, {r0, r1, r2, r3}
   13b50:	mov	r1, r5
   13b54:	add	r5, sp, #4
   13b58:	mov	r2, #1
   13b5c:	mov	r0, r5
   13b60:	bl	136c8 <close_stdout@@Base+0x1650>
   13b64:	mov	r2, r6
   13b68:	mov	r3, r5
   13b6c:	mov	r1, r7
   13b70:	mov	r0, #0
   13b74:	bl	1346c <close_stdout@@Base+0x13f4>
   13b78:	ldr	r2, [sp, #52]	; 0x34
   13b7c:	ldr	r3, [r4]
   13b80:	cmp	r2, r3
   13b84:	bne	13b90 <close_stdout@@Base+0x1b18>
   13b88:	add	sp, sp, #56	; 0x38
   13b8c:	pop	{r4, r5, r6, r7, r8, pc}
   13b90:	bl	10fc8 <__stack_chk_fail@plt>
   13b94:	andeq	r3, r1, r4, lsl #13
   13b98:	ldrdeq	r3, [r1], -r4
   13b9c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ba0:	mov	r2, r1
   13ba4:	mvn	r1, #0
   13ba8:	b	13afc <close_stdout@@Base+0x1a84>
   13bac:	mov	r1, #58	; 0x3a
   13bb0:	b	13ba0 <close_stdout@@Base+0x1b28>
   13bb4:	mov	r2, #58	; 0x3a
   13bb8:	b	13afc <close_stdout@@Base+0x1a84>
   13bbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bc0:	mov	r5, r2
   13bc4:	ldr	lr, [pc, #144]	; 13c5c <close_stdout@@Base+0x1be4>
   13bc8:	mov	r8, r0
   13bcc:	mov	r9, r1
   13bd0:	mov	r7, r3
   13bd4:	add	lr, pc, lr
   13bd8:	ldr	r4, [pc, #128]	; 13c60 <close_stdout@@Base+0x1be8>
   13bdc:	add	lr, lr, #256	; 0x100
   13be0:	sub	sp, sp, #56	; 0x38
   13be4:	ldr	sl, [pc, #120]	; 13c64 <close_stdout@@Base+0x1bec>
   13be8:	add	r4, pc, r4
   13bec:	ldm	lr!, {r0, r1, r2, r3}
   13bf0:	add	ip, sp, #4
   13bf4:	ldr	r4, [r4, sl]
   13bf8:	ldr	r6, [sp, #88]	; 0x58
   13bfc:	stmia	ip!, {r0, r1, r2, r3}
   13c00:	ldm	lr!, {r0, r1, r2, r3}
   13c04:	ldr	sl, [r4]
   13c08:	stmia	ip!, {r0, r1, r2, r3}
   13c0c:	ldm	lr, {r0, r1, r2, r3}
   13c10:	str	sl, [sp, #52]	; 0x34
   13c14:	stm	ip, {r0, r1, r2, r3}
   13c18:	mov	r2, r5
   13c1c:	add	r5, sp, #4
   13c20:	mov	r1, r9
   13c24:	mov	r0, r5
   13c28:	bl	1373c <close_stdout@@Base+0x16c4>
   13c2c:	mov	r2, r6
   13c30:	mov	r3, r5
   13c34:	mov	r0, r8
   13c38:	mov	r1, r7
   13c3c:	bl	1346c <close_stdout@@Base+0x13f4>
   13c40:	ldr	r2, [sp, #52]	; 0x34
   13c44:	ldr	r3, [r4]
   13c48:	cmp	r2, r3
   13c4c:	bne	13c58 <close_stdout@@Base+0x1be0>
   13c50:	add	sp, sp, #56	; 0x38
   13c54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c58:	bl	10fc8 <__stack_chk_fail@plt>
   13c5c:	andeq	r3, r1, r4, asr #11
   13c60:	andeq	r3, r1, r0, lsl r4
   13c64:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13c68:	push	{lr}		; (str lr, [sp, #-4]!)
   13c6c:	sub	sp, sp, #12
   13c70:	mvn	ip, #0
   13c74:	str	ip, [sp]
   13c78:	bl	13bbc <close_stdout@@Base+0x1b44>
   13c7c:	add	sp, sp, #12
   13c80:	pop	{pc}		; (ldr pc, [sp], #4)
   13c84:	mov	ip, r1
   13c88:	mov	r3, r2
   13c8c:	mov	r1, r0
   13c90:	mov	r2, ip
   13c94:	mov	r0, #0
   13c98:	b	13c68 <close_stdout@@Base+0x1bf0>
   13c9c:	push	{lr}		; (str lr, [sp, #-4]!)
   13ca0:	sub	sp, sp, #12
   13ca4:	mov	lr, r1
   13ca8:	mov	ip, r2
   13cac:	mov	r1, r0
   13cb0:	str	r3, [sp]
   13cb4:	mov	r2, lr
   13cb8:	mov	r3, ip
   13cbc:	mov	r0, #0
   13cc0:	bl	13bbc <close_stdout@@Base+0x1b44>
   13cc4:	add	sp, sp, #12
   13cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13ccc:	ldr	r3, [pc, #12]	; 13ce0 <close_stdout@@Base+0x1c68>
   13cd0:	ldr	ip, [pc, #12]	; 13ce4 <close_stdout@@Base+0x1c6c>
   13cd4:	add	r3, pc, r3
   13cd8:	ldr	r3, [r3, ip]
   13cdc:	b	1346c <close_stdout@@Base+0x13f4>
   13ce0:	andeq	r3, r1, r4, lsr #6
   13ce4:	andeq	r0, r0, ip, ror #1
   13ce8:	mov	r2, r1
   13cec:	mov	r1, r0
   13cf0:	mov	r0, #0
   13cf4:	b	13ccc <close_stdout@@Base+0x1c54>
   13cf8:	mvn	r2, #0
   13cfc:	b	13ccc <close_stdout@@Base+0x1c54>
   13d00:	mov	r1, r0
   13d04:	mov	r0, #0
   13d08:	b	13cf8 <close_stdout@@Base+0x1c80>
   13d0c:	mov	r1, #0
   13d10:	mov	r2, #3
   13d14:	b	14750 <close_stdout@@Base+0x26d8>
   13d18:	push	{r4, r5, r6, r7, lr}
   13d1c:	cmp	r1, #0
   13d20:	sub	sp, sp, #36	; 0x24
   13d24:	ldr	r7, [pc, #896]	; 140ac <close_stdout@@Base+0x2034>
   13d28:	mov	ip, r3
   13d2c:	mov	r5, r0
   13d30:	add	r7, pc, r7
   13d34:	ldr	r4, [sp, #56]	; 0x38
   13d38:	ldr	r6, [sp, #60]	; 0x3c
   13d3c:	beq	14080 <close_stdout@@Base+0x2008>
   13d40:	str	r2, [sp]
   13d44:	mov	r3, r1
   13d48:	ldr	r2, [pc, #864]	; 140b0 <close_stdout@@Base+0x2038>
   13d4c:	mov	r1, #1
   13d50:	str	ip, [sp, #4]
   13d54:	add	r2, pc, r2
   13d58:	bl	11130 <__fprintf_chk@plt>
   13d5c:	ldr	r1, [pc, #848]	; 140b4 <close_stdout@@Base+0x203c>
   13d60:	mov	r2, #5
   13d64:	mov	r0, #0
   13d68:	add	r1, pc, r1
   13d6c:	bl	10fbc <dcgettext@plt>
   13d70:	ldr	r2, [pc, #832]	; 140b8 <close_stdout@@Base+0x2040>
   13d74:	movw	ip, #2013	; 0x7dd
   13d78:	mov	r1, #1
   13d7c:	ldr	r2, [r7, r2]
   13d80:	str	ip, [sp]
   13d84:	mov	r3, r0
   13d88:	mov	r0, r5
   13d8c:	bl	11130 <__fprintf_chk@plt>
   13d90:	ldr	r1, [pc, #804]	; 140bc <close_stdout@@Base+0x2044>
   13d94:	mov	r0, #0
   13d98:	mov	r2, #5
   13d9c:	add	r1, pc, r1
   13da0:	bl	10fbc <dcgettext@plt>
   13da4:	mov	r1, r5
   13da8:	bl	10f38 <fputs_unlocked@plt>
   13dac:	cmp	r6, #9
   13db0:	addls	pc, pc, r6, lsl #2
   13db4:	b	1409c <close_stdout@@Base+0x2024>
   13db8:	b	13e4c <close_stdout@@Base+0x1dd4>
   13dbc:	b	13e50 <close_stdout@@Base+0x1dd8>
   13dc0:	b	13e80 <close_stdout@@Base+0x1e08>
   13dc4:	b	13eb4 <close_stdout@@Base+0x1e3c>
   13dc8:	b	13ef0 <close_stdout@@Base+0x1e78>
   13dcc:	b	13f30 <close_stdout@@Base+0x1eb8>
   13dd0:	b	13f78 <close_stdout@@Base+0x1f00>
   13dd4:	b	13fc8 <close_stdout@@Base+0x1f50>
   13dd8:	b	14020 <close_stdout@@Base+0x1fa8>
   13ddc:	b	13de0 <close_stdout@@Base+0x1d68>
   13de0:	ldr	r1, [pc, #728]	; 140c0 <close_stdout@@Base+0x2048>
   13de4:	mov	r0, #0
   13de8:	add	r1, pc, r1
   13dec:	mov	r2, #5
   13df0:	bl	10fbc <dcgettext@plt>
   13df4:	ldm	r4, {r3, ip}
   13df8:	mov	r1, #1
   13dfc:	str	ip, [sp]
   13e00:	ldr	ip, [r4, #8]
   13e04:	str	ip, [sp, #4]
   13e08:	ldr	ip, [r4, #12]
   13e0c:	str	ip, [sp, #8]
   13e10:	ldr	ip, [r4, #16]
   13e14:	str	ip, [sp, #12]
   13e18:	ldr	ip, [r4, #20]
   13e1c:	str	ip, [sp, #16]
   13e20:	ldr	ip, [r4, #24]
   13e24:	str	ip, [sp, #20]
   13e28:	ldr	ip, [r4, #28]
   13e2c:	str	ip, [sp, #24]
   13e30:	ldr	ip, [r4, #32]
   13e34:	str	ip, [sp, #28]
   13e38:	mov	r2, r0
   13e3c:	mov	r0, r5
   13e40:	bl	11130 <__fprintf_chk@plt>
   13e44:	add	sp, sp, #36	; 0x24
   13e48:	pop	{r4, r5, r6, r7, pc}
   13e4c:	bl	111a8 <abort@plt>
   13e50:	ldr	r1, [pc, #620]	; 140c4 <close_stdout@@Base+0x204c>
   13e54:	mov	r2, #5
   13e58:	mov	r0, #0
   13e5c:	add	r1, pc, r1
   13e60:	bl	10fbc <dcgettext@plt>
   13e64:	ldr	r3, [r4]
   13e68:	mov	r1, #1
   13e6c:	mov	r2, r0
   13e70:	mov	r0, r5
   13e74:	add	sp, sp, #36	; 0x24
   13e78:	pop	{r4, r5, r6, r7, lr}
   13e7c:	b	11130 <__fprintf_chk@plt>
   13e80:	ldr	r1, [pc, #576]	; 140c8 <close_stdout@@Base+0x2050>
   13e84:	mov	r2, #5
   13e88:	mov	r0, #0
   13e8c:	add	r1, pc, r1
   13e90:	bl	10fbc <dcgettext@plt>
   13e94:	ldm	r4, {r3, ip}
   13e98:	mov	r1, #1
   13e9c:	str	ip, [sp, #56]	; 0x38
   13ea0:	mov	r2, r0
   13ea4:	mov	r0, r5
   13ea8:	add	sp, sp, #36	; 0x24
   13eac:	pop	{r4, r5, r6, r7, lr}
   13eb0:	b	11130 <__fprintf_chk@plt>
   13eb4:	ldr	r1, [pc, #528]	; 140cc <close_stdout@@Base+0x2054>
   13eb8:	mov	r2, #5
   13ebc:	mov	r0, #0
   13ec0:	add	r1, pc, r1
   13ec4:	bl	10fbc <dcgettext@plt>
   13ec8:	ldm	r4, {r3, ip}
   13ecc:	mov	r1, #1
   13ed0:	str	ip, [sp, #56]	; 0x38
   13ed4:	ldr	ip, [r4, #8]
   13ed8:	str	ip, [sp, #60]	; 0x3c
   13edc:	mov	r2, r0
   13ee0:	mov	r0, r5
   13ee4:	add	sp, sp, #36	; 0x24
   13ee8:	pop	{r4, r5, r6, r7, lr}
   13eec:	b	11130 <__fprintf_chk@plt>
   13ef0:	ldr	r1, [pc, #472]	; 140d0 <close_stdout@@Base+0x2058>
   13ef4:	mov	r2, #5
   13ef8:	mov	r0, #0
   13efc:	add	r1, pc, r1
   13f00:	bl	10fbc <dcgettext@plt>
   13f04:	ldm	r4, {r3, ip}
   13f08:	mov	r1, #1
   13f0c:	str	ip, [sp]
   13f10:	ldr	ip, [r4, #8]
   13f14:	str	ip, [sp, #4]
   13f18:	ldr	ip, [r4, #12]
   13f1c:	str	ip, [sp, #8]
   13f20:	mov	r2, r0
   13f24:	mov	r0, r5
   13f28:	bl	11130 <__fprintf_chk@plt>
   13f2c:	b	13e44 <close_stdout@@Base+0x1dcc>
   13f30:	ldr	r1, [pc, #412]	; 140d4 <close_stdout@@Base+0x205c>
   13f34:	mov	r2, #5
   13f38:	mov	r0, #0
   13f3c:	add	r1, pc, r1
   13f40:	bl	10fbc <dcgettext@plt>
   13f44:	ldm	r4, {r3, ip}
   13f48:	mov	r1, #1
   13f4c:	str	ip, [sp]
   13f50:	ldr	ip, [r4, #8]
   13f54:	str	ip, [sp, #4]
   13f58:	ldr	ip, [r4, #12]
   13f5c:	str	ip, [sp, #8]
   13f60:	ldr	ip, [r4, #16]
   13f64:	str	ip, [sp, #12]
   13f68:	mov	r2, r0
   13f6c:	mov	r0, r5
   13f70:	bl	11130 <__fprintf_chk@plt>
   13f74:	b	13e44 <close_stdout@@Base+0x1dcc>
   13f78:	ldr	r1, [pc, #344]	; 140d8 <close_stdout@@Base+0x2060>
   13f7c:	mov	r2, #5
   13f80:	mov	r0, #0
   13f84:	add	r1, pc, r1
   13f88:	bl	10fbc <dcgettext@plt>
   13f8c:	ldm	r4, {r3, ip}
   13f90:	mov	r1, #1
   13f94:	str	ip, [sp]
   13f98:	ldr	ip, [r4, #8]
   13f9c:	str	ip, [sp, #4]
   13fa0:	ldr	ip, [r4, #12]
   13fa4:	str	ip, [sp, #8]
   13fa8:	ldr	ip, [r4, #16]
   13fac:	str	ip, [sp, #12]
   13fb0:	ldr	ip, [r4, #20]
   13fb4:	str	ip, [sp, #16]
   13fb8:	mov	r2, r0
   13fbc:	mov	r0, r5
   13fc0:	bl	11130 <__fprintf_chk@plt>
   13fc4:	b	13e44 <close_stdout@@Base+0x1dcc>
   13fc8:	ldr	r1, [pc, #268]	; 140dc <close_stdout@@Base+0x2064>
   13fcc:	mov	r2, #5
   13fd0:	mov	r0, #0
   13fd4:	add	r1, pc, r1
   13fd8:	bl	10fbc <dcgettext@plt>
   13fdc:	ldm	r4, {r3, ip}
   13fe0:	mov	r1, #1
   13fe4:	str	ip, [sp]
   13fe8:	ldr	ip, [r4, #8]
   13fec:	str	ip, [sp, #4]
   13ff0:	ldr	ip, [r4, #12]
   13ff4:	str	ip, [sp, #8]
   13ff8:	ldr	ip, [r4, #16]
   13ffc:	str	ip, [sp, #12]
   14000:	ldr	ip, [r4, #20]
   14004:	str	ip, [sp, #16]
   14008:	ldr	ip, [r4, #24]
   1400c:	str	ip, [sp, #20]
   14010:	mov	r2, r0
   14014:	mov	r0, r5
   14018:	bl	11130 <__fprintf_chk@plt>
   1401c:	b	13e44 <close_stdout@@Base+0x1dcc>
   14020:	ldr	r1, [pc, #184]	; 140e0 <close_stdout@@Base+0x2068>
   14024:	mov	r2, #5
   14028:	mov	r0, #0
   1402c:	add	r1, pc, r1
   14030:	bl	10fbc <dcgettext@plt>
   14034:	ldm	r4, {r3, ip}
   14038:	mov	r1, #1
   1403c:	str	ip, [sp]
   14040:	ldr	ip, [r4, #8]
   14044:	str	ip, [sp, #4]
   14048:	ldr	ip, [r4, #12]
   1404c:	str	ip, [sp, #8]
   14050:	ldr	ip, [r4, #16]
   14054:	str	ip, [sp, #12]
   14058:	ldr	ip, [r4, #20]
   1405c:	str	ip, [sp, #16]
   14060:	ldr	ip, [r4, #24]
   14064:	str	ip, [sp, #20]
   14068:	ldr	ip, [r4, #28]
   1406c:	str	ip, [sp, #24]
   14070:	mov	r2, r0
   14074:	mov	r0, r5
   14078:	bl	11130 <__fprintf_chk@plt>
   1407c:	b	13e44 <close_stdout@@Base+0x1dcc>
   14080:	str	r3, [sp]
   14084:	mov	r3, r2
   14088:	ldr	r2, [pc, #84]	; 140e4 <close_stdout@@Base+0x206c>
   1408c:	mov	r1, #1
   14090:	add	r2, pc, r2
   14094:	bl	11130 <__fprintf_chk@plt>
   14098:	b	13d5c <close_stdout@@Base+0x1ce4>
   1409c:	ldr	r1, [pc, #68]	; 140e8 <close_stdout@@Base+0x2070>
   140a0:	mov	r0, #0
   140a4:	add	r1, pc, r1
   140a8:	b	13dec <close_stdout@@Base+0x1d74>
   140ac:	andeq	r3, r1, r8, asr #5
   140b0:	andeq	r1, r0, r8, ror #24
   140b4:	andeq	r1, r0, r8, ror #24
   140b8:	andeq	r0, r0, r0, lsr #2
   140bc:	andeq	r1, r0, r8, lsr ip
   140c0:	andeq	r1, r0, r4, asr #27
   140c4:	andeq	r1, r0, r4, asr #24
   140c8:	andeq	r1, r0, r4, lsr #24
   140cc:	andeq	r1, r0, r8, lsl #24
   140d0:	andeq	r1, r0, r8, ror #23
   140d4:	andeq	r1, r0, r8, asr #23
   140d8:	andeq	r1, r0, r4, lsr #23
   140dc:	andeq	r1, r0, ip, ror fp
   140e0:	andeq	r1, r0, r0, asr fp
   140e4:	andeq	r1, r0, r8, lsr r9
   140e8:	andeq	r1, r0, ip, lsr fp
   140ec:	push	{r4, r5, lr}
   140f0:	sub	sp, sp, #12
   140f4:	ldr	r5, [sp, #24]
   140f8:	ldr	ip, [r5]
   140fc:	cmp	ip, #0
   14100:	beq	1411c <close_stdout@@Base+0x20a4>
   14104:	mov	lr, r5
   14108:	mov	ip, #0
   1410c:	ldr	r4, [lr, #4]!
   14110:	add	ip, ip, #1
   14114:	cmp	r4, #0
   14118:	bne	1410c <close_stdout@@Base+0x2094>
   1411c:	stm	sp, {r5, ip}
   14120:	bl	13d18 <close_stdout@@Base+0x1ca0>
   14124:	add	sp, sp, #12
   14128:	pop	{r4, r5, pc}
   1412c:	push	{r4, r5, r6, r7, lr}
   14130:	sub	sp, sp, #60	; 0x3c
   14134:	ldr	r4, [pc, #100]	; 141a0 <close_stdout@@Base+0x2128>
   14138:	mov	ip, #0
   1413c:	ldr	r5, [pc, #96]	; 141a4 <close_stdout@@Base+0x212c>
   14140:	mov	lr, ip
   14144:	add	r4, pc, r4
   14148:	ldr	r6, [sp, #80]	; 0x50
   1414c:	ldr	r7, [r4, r5]
   14150:	add	r5, sp, #12
   14154:	ldr	r4, [r7]
   14158:	str	r4, [sp, #52]	; 0x34
   1415c:	ldr	r4, [r6, ip]
   14160:	cmp	r4, #0
   14164:	str	r4, [r5, ip]
   14168:	beq	1417c <close_stdout@@Base+0x2104>
   1416c:	add	lr, lr, #1
   14170:	add	ip, ip, #4
   14174:	cmp	lr, #10
   14178:	bne	1415c <close_stdout@@Base+0x20e4>
   1417c:	stm	sp, {r5, lr}
   14180:	bl	13d18 <close_stdout@@Base+0x1ca0>
   14184:	ldr	r2, [sp, #52]	; 0x34
   14188:	ldr	r3, [r7]
   1418c:	cmp	r2, r3
   14190:	bne	1419c <close_stdout@@Base+0x2124>
   14194:	add	sp, sp, #60	; 0x3c
   14198:	pop	{r4, r5, r6, r7, pc}
   1419c:	bl	10fc8 <__stack_chk_fail@plt>
   141a0:			; <UNDEFINED> instruction: 0x00012eb4
   141a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   141a8:	push	{r3}		; (str r3, [sp, #-4]!)
   141ac:	push	{r4, lr}
   141b0:	sub	sp, sp, #20
   141b4:	ldr	lr, [pc, #72]	; 14204 <close_stdout@@Base+0x218c>
   141b8:	add	ip, sp, #32
   141bc:	ldr	r4, [pc, #68]	; 14208 <close_stdout@@Base+0x2190>
   141c0:	add	lr, pc, lr
   141c4:	ldr	r3, [sp, #28]
   141c8:	ldr	r4, [lr, r4]
   141cc:	str	ip, [sp]
   141d0:	str	ip, [sp, #8]
   141d4:	ldr	ip, [r4]
   141d8:	str	ip, [sp, #12]
   141dc:	bl	1412c <close_stdout@@Base+0x20b4>
   141e0:	ldr	r2, [sp, #12]
   141e4:	ldr	r3, [r4]
   141e8:	cmp	r2, r3
   141ec:	bne	14200 <close_stdout@@Base+0x2188>
   141f0:	add	sp, sp, #20
   141f4:	pop	{r4, lr}
   141f8:	add	sp, sp, #4
   141fc:	bx	lr
   14200:	bl	10fc8 <__stack_chk_fail@plt>
   14204:	andeq	r2, r1, r8, lsr lr
   14208:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1420c:	ldr	r1, [pc, #132]	; 14298 <close_stdout@@Base+0x2220>
   14210:	mov	r2, #5
   14214:	push	{r4, lr}
   14218:	add	r1, pc, r1
   1421c:	mov	r0, #0
   14220:	ldr	r4, [pc, #116]	; 1429c <close_stdout@@Base+0x2224>
   14224:	bl	10fbc <dcgettext@plt>
   14228:	ldr	r2, [pc, #112]	; 142a0 <close_stdout@@Base+0x2228>
   1422c:	add	r4, pc, r4
   14230:	add	r2, pc, r2
   14234:	mov	r1, r0
   14238:	mov	r0, #1
   1423c:	bl	11118 <__printf_chk@plt>
   14240:	ldr	r1, [pc, #92]	; 142a4 <close_stdout@@Base+0x222c>
   14244:	mov	r2, #5
   14248:	mov	r0, #0
   1424c:	add	r1, pc, r1
   14250:	bl	10fbc <dcgettext@plt>
   14254:	ldr	r2, [pc, #76]	; 142a8 <close_stdout@@Base+0x2230>
   14258:	ldr	r3, [pc, #76]	; 142ac <close_stdout@@Base+0x2234>
   1425c:	add	r2, pc, r2
   14260:	add	r3, pc, r3
   14264:	mov	r1, r0
   14268:	mov	r0, #1
   1426c:	bl	11118 <__printf_chk@plt>
   14270:	ldr	r1, [pc, #56]	; 142b0 <close_stdout@@Base+0x2238>
   14274:	mov	r0, #0
   14278:	mov	r2, #5
   1427c:	add	r1, pc, r1
   14280:	bl	10fbc <dcgettext@plt>
   14284:	ldr	r3, [pc, #40]	; 142b4 <close_stdout@@Base+0x223c>
   14288:	ldr	r3, [r4, r3]
   1428c:	pop	{r4, lr}
   14290:	ldr	r1, [r3]
   14294:	b	10f38 <fputs_unlocked@plt>
   14298:	andeq	r1, r0, r4, lsl #20
   1429c:	andeq	r2, r1, ip, asr #27
   142a0:	andeq	r1, r0, r4, lsl #20
   142a4:	andeq	r1, r0, r0, lsl #20
   142a8:	muleq	r0, ip, r4
   142ac:	andeq	r1, r0, r8, lsr #9
   142b0:	andeq	r1, r0, r4, ror #19
   142b4:	andeq	r0, r0, r0, lsl r1
   142b8:	push	{r4, lr}
   142bc:	mov	r4, r0
   142c0:	bl	11070 <malloc@plt>
   142c4:	rsbs	r3, r0, #1
   142c8:	movcc	r3, #0
   142cc:	cmp	r4, #0
   142d0:	moveq	r3, #0
   142d4:	cmp	r3, #0
   142d8:	popeq	{r4, pc}
   142dc:	bl	144cc <close_stdout@@Base+0x2454>
   142e0:	push	{r3, r4, r5, lr}
   142e4:	mov	r4, r0
   142e8:	mvn	r0, #0
   142ec:	mov	r5, r1
   142f0:	bl	14fcc <close_stdout@@Base+0x2f54>
   142f4:	cmp	r0, r4
   142f8:	bcc	14308 <close_stdout@@Base+0x2290>
   142fc:	mul	r0, r4, r5
   14300:	pop	{r3, r4, r5, lr}
   14304:	b	142b8 <close_stdout@@Base+0x2240>
   14308:	bl	144cc <close_stdout@@Base+0x2454>
   1430c:	b	142b8 <close_stdout@@Base+0x2240>
   14310:	rsbs	r3, r1, #1
   14314:	push	{r4, lr}
   14318:	movcc	r3, #0
   1431c:	cmp	r0, #0
   14320:	mov	r4, r1
   14324:	moveq	r3, #0
   14328:	cmp	r3, #0
   1432c:	bne	14350 <close_stdout@@Base+0x22d8>
   14330:	bl	10fd4 <realloc@plt>
   14334:	rsbs	r3, r0, #1
   14338:	movcc	r3, #0
   1433c:	cmp	r4, #0
   14340:	moveq	r3, #0
   14344:	cmp	r3, #0
   14348:	popeq	{r4, pc}
   1434c:	bl	144cc <close_stdout@@Base+0x2454>
   14350:	bl	10f74 <free@plt>
   14354:	mov	r0, #0
   14358:	pop	{r4, pc}
   1435c:	push	{r4, r5, r6, lr}
   14360:	mov	r5, r1
   14364:	mov	r6, r0
   14368:	mov	r1, r2
   1436c:	mvn	r0, #0
   14370:	mov	r4, r2
   14374:	bl	14fcc <close_stdout@@Base+0x2f54>
   14378:	cmp	r0, r5
   1437c:	bcc	14390 <close_stdout@@Base+0x2318>
   14380:	mov	r0, r6
   14384:	mul	r1, r5, r4
   14388:	pop	{r4, r5, r6, lr}
   1438c:	b	14310 <close_stdout@@Base+0x2298>
   14390:	bl	144cc <close_stdout@@Base+0x2454>
   14394:	push	{r3, r4, r5, r6, r7, lr}
   14398:	subs	r7, r0, #0
   1439c:	mov	r5, r1
   143a0:	mov	r6, r2
   143a4:	ldr	r4, [r1]
   143a8:	beq	143e0 <close_stdout@@Base+0x2368>
   143ac:	movw	r0, #43690	; 0xaaaa
   143b0:	mov	r1, r2
   143b4:	bfi	r0, r0, #16, #16
   143b8:	bl	14fcc <close_stdout@@Base+0x2f54>
   143bc:	cmp	r4, r0
   143c0:	addcc	r3, r4, #1
   143c4:	addcc	r4, r4, r3, lsr #1
   143c8:	bcs	14404 <close_stdout@@Base+0x238c>
   143cc:	str	r4, [r5]
   143d0:	mov	r0, r7
   143d4:	mul	r1, r6, r4
   143d8:	pop	{r3, r4, r5, r6, r7, lr}
   143dc:	b	14310 <close_stdout@@Base+0x2298>
   143e0:	cmp	r4, #0
   143e4:	bne	143cc <close_stdout@@Base+0x2354>
   143e8:	mov	r0, #64	; 0x40
   143ec:	mov	r1, r2
   143f0:	bl	14fcc <close_stdout@@Base+0x2f54>
   143f4:	cmp	r0, #0
   143f8:	movne	r4, r0
   143fc:	addeq	r4, r0, #1
   14400:	b	143cc <close_stdout@@Base+0x2354>
   14404:	bl	144cc <close_stdout@@Base+0x2454>
   14408:	cmp	r0, #0
   1440c:	push	{r3, lr}
   14410:	ldr	r3, [r1]
   14414:	beq	14440 <close_stdout@@Base+0x23c8>
   14418:	movw	r2, #43689	; 0xaaa9
   1441c:	movt	r2, #43690	; 0xaaaa
   14420:	cmp	r3, r2
   14424:	addls	r2, r3, #1
   14428:	addls	r3, r3, r2, lsr #1
   1442c:	bhi	14458 <close_stdout@@Base+0x23e0>
   14430:	str	r3, [r1]
   14434:	mov	r1, r3
   14438:	pop	{r3, lr}
   1443c:	b	14310 <close_stdout@@Base+0x2298>
   14440:	cmp	r3, #0
   14444:	moveq	r3, #64	; 0x40
   14448:	str	r3, [r1]
   1444c:	mov	r1, r3
   14450:	pop	{r3, lr}
   14454:	b	14310 <close_stdout@@Base+0x2298>
   14458:	bl	144cc <close_stdout@@Base+0x2454>
   1445c:	push	{r4, lr}
   14460:	mov	r4, r0
   14464:	bl	142b8 <close_stdout@@Base+0x2240>
   14468:	mov	r2, r4
   1446c:	mov	r1, #0
   14470:	pop	{r4, lr}
   14474:	b	11100 <memset@plt>
   14478:	push	{r3, lr}
   1447c:	bl	10f2c <calloc@plt>
   14480:	cmp	r0, #0
   14484:	popne	{r3, pc}
   14488:	bl	144cc <close_stdout@@Base+0x2454>
   1448c:	push	{r3, r4, r5, lr}
   14490:	mov	r4, r1
   14494:	mov	r5, r0
   14498:	mov	r0, r1
   1449c:	bl	142b8 <close_stdout@@Base+0x2240>
   144a0:	mov	r1, r5
   144a4:	mov	r2, r4
   144a8:	pop	{r3, r4, r5, lr}
   144ac:	b	10f8c <memcpy@plt>
   144b0:	push	{r4, lr}
   144b4:	mov	r4, r0
   144b8:	bl	110c4 <strlen@plt>
   144bc:	add	r1, r0, #1
   144c0:	mov	r0, r4
   144c4:	pop	{r4, lr}
   144c8:	b	1448c <close_stdout@@Base+0x2414>
   144cc:	ldr	r3, [pc, #64]	; 14514 <close_stdout@@Base+0x249c>
   144d0:	mov	r2, #5
   144d4:	ldr	ip, [pc, #60]	; 14518 <close_stdout@@Base+0x24a0>
   144d8:	mov	r0, #0
   144dc:	add	r3, pc, r3
   144e0:	ldr	r1, [pc, #52]	; 1451c <close_stdout@@Base+0x24a4>
   144e4:	push	{r4, lr}
   144e8:	add	r1, pc, r1
   144ec:	ldr	r3, [r3, ip]
   144f0:	ldr	r4, [r3]
   144f4:	bl	10fbc <dcgettext@plt>
   144f8:	ldr	r2, [pc, #32]	; 14520 <close_stdout@@Base+0x24a8>
   144fc:	mov	r1, #0
   14500:	add	r2, pc, r2
   14504:	mov	r3, r0
   14508:	mov	r0, r4
   1450c:	bl	11040 <error@plt>
   14510:	bl	111a8 <abort@plt>
   14514:	andeq	r2, r1, ip, lsl fp
   14518:	andeq	r0, r0, r4, lsl r1
   1451c:	andeq	r1, r0, r8, ror #15
   14520:	andeq	r1, r0, ip, ror #7
   14524:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14528:	mov	r9, r1
   1452c:	ldr	r1, [pc, #196]	; 145f8 <close_stdout@@Base+0x2580>
   14530:	mov	r4, r0
   14534:	mov	r5, r2
   14538:	mov	r0, #0
   1453c:	add	r1, pc, r1
   14540:	mov	r2, #5
   14544:	mov	r8, r3
   14548:	ldr	r7, [sp, #32]
   1454c:	bl	10fbc <dcgettext@plt>
   14550:	mov	r1, r4
   14554:	ldr	r4, [pc, #160]	; 145fc <close_stdout@@Base+0x2584>
   14558:	add	r4, pc, r4
   1455c:	mov	r2, r0
   14560:	mov	r0, #0
   14564:	bl	11040 <error@plt>
   14568:	ldr	r1, [pc, #144]	; 14600 <close_stdout@@Base+0x2588>
   1456c:	mov	r2, #5
   14570:	mov	r0, #0
   14574:	add	r1, pc, r1
   14578:	bl	10fbc <dcgettext@plt>
   1457c:	mov	r2, r0
   14580:	mov	r0, #0
   14584:	mov	r1, r0
   14588:	bl	11040 <error@plt>
   1458c:	ldr	r3, [pc, #112]	; 14604 <close_stdout@@Base+0x258c>
   14590:	ldr	r1, [pc, #112]	; 14608 <close_stdout@@Base+0x2590>
   14594:	mov	r2, #5
   14598:	mov	r0, #0
   1459c:	ldr	r3, [r4, r3]
   145a0:	add	r1, pc, r1
   145a4:	ldr	r4, [r3]
   145a8:	bl	10fbc <dcgettext@plt>
   145ac:	mov	r2, r9
   145b0:	mov	r3, r5
   145b4:	mov	r1, #6
   145b8:	mov	r6, r0
   145bc:	mov	r0, #0
   145c0:	bl	13a64 <close_stdout@@Base+0x19ec>
   145c4:	mov	r2, r8
   145c8:	mov	r3, r7
   145cc:	mov	r1, #6
   145d0:	mov	r5, r0
   145d4:	mov	r0, #1
   145d8:	bl	13a64 <close_stdout@@Base+0x19ec>
   145dc:	mov	r2, r6
   145e0:	mov	r3, r5
   145e4:	mov	r1, #0
   145e8:	str	r0, [sp, #32]
   145ec:	mov	r0, r4
   145f0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   145f4:	b	11040 <error@plt>
   145f8:	andeq	r1, r0, r8, lsr #15
   145fc:	andeq	r2, r1, r0, lsr #21
   14600:	andeq	r1, r0, ip, lsl #15
   14604:	andeq	r0, r0, r4, lsl r1
   14608:	andeq	r1, r0, ip, lsl #15
   1460c:	push	{r4, r5, r6, r7, r8, lr}
   14610:	sub	sp, sp, #8
   14614:	mov	r6, r1
   14618:	mov	r5, r2
   1461c:	mov	r8, r3
   14620:	mov	r7, r0
   14624:	bl	14ef4 <close_stdout@@Base+0x2e7c>
   14628:	mov	r4, r0
   1462c:	bl	110e8 <__errno_location@plt>
   14630:	ldr	r0, [r0]
   14634:	cmp	r0, #0
   14638:	beq	14650 <close_stdout@@Base+0x25d8>
   1463c:	str	r8, [sp]
   14640:	mov	r1, r7
   14644:	mov	r2, r6
   14648:	mov	r3, r5
   1464c:	bl	14524 <close_stdout@@Base+0x24ac>
   14650:	mov	r0, r4
   14654:	add	sp, sp, #8
   14658:	pop	{r4, r5, r6, r7, r8, pc}
   1465c:	push	{r4, r5, r6, r7, r8, lr}
   14660:	sub	sp, sp, #8
   14664:	mov	r6, r1
   14668:	mov	r5, r2
   1466c:	mov	r8, r3
   14670:	mov	r7, r0
   14674:	bl	14f74 <close_stdout@@Base+0x2efc>
   14678:	mov	r4, r0
   1467c:	bl	110e8 <__errno_location@plt>
   14680:	ldr	r0, [r0]
   14684:	cmp	r0, #0
   14688:	beq	146a4 <close_stdout@@Base+0x262c>
   1468c:	sub	r8, r8, #1
   14690:	mov	r1, r7
   14694:	str	r8, [sp]
   14698:	sub	r2, r6, #1
   1469c:	mov	r3, r5
   146a0:	bl	14524 <close_stdout@@Base+0x24ac>
   146a4:	mov	r0, r4
   146a8:	add	sp, sp, #8
   146ac:	pop	{r4, r5, r6, r7, r8, pc}
   146b0:	push	{r4, r5, r6, lr}
   146b4:	sub	sp, sp, #8
   146b8:	mov	r4, r0
   146bc:	bl	11124 <fileno@plt>
   146c0:	cmp	r0, #0
   146c4:	mov	r0, r4
   146c8:	blt	14744 <close_stdout@@Base+0x26cc>
   146cc:	bl	11088 <__freading@plt>
   146d0:	cmp	r0, #0
   146d4:	bne	14710 <close_stdout@@Base+0x2698>
   146d8:	mov	r0, r4
   146dc:	bl	148c4 <close_stdout@@Base+0x284c>
   146e0:	cmp	r0, #0
   146e4:	beq	14740 <close_stdout@@Base+0x26c8>
   146e8:	bl	110e8 <__errno_location@plt>
   146ec:	ldr	r6, [r0]
   146f0:	mov	r5, r0
   146f4:	mov	r0, r4
   146f8:	bl	1113c <fclose@plt>
   146fc:	cmp	r6, #0
   14700:	mvnne	r0, #0
   14704:	strne	r6, [r5]
   14708:	add	sp, sp, #8
   1470c:	pop	{r4, r5, r6, pc}
   14710:	mov	r0, r4
   14714:	bl	11124 <fileno@plt>
   14718:	mov	r1, #1
   1471c:	mov	r2, #0
   14720:	mov	r3, #0
   14724:	str	r1, [sp]
   14728:	bl	11004 <lseek64@plt>
   1472c:	mvn	r2, #0
   14730:	mvn	r3, #0
   14734:	cmp	r1, r3
   14738:	cmpeq	r0, r2
   1473c:	bne	146d8 <close_stdout@@Base+0x2660>
   14740:	mov	r0, r4
   14744:	add	sp, sp, #8
   14748:	pop	{r4, r5, r6, lr}
   1474c:	b	1113c <fclose@plt>
   14750:	push	{r1, r2, r3}
   14754:	movw	ip, #1030	; 0x406
   14758:	ldr	r3, [pc, #336]	; 148b0 <close_stdout@@Base+0x2838>
   1475c:	push	{r4, r5, r6, r7, r8, lr}
   14760:	add	r3, pc, r3
   14764:	ldr	lr, [pc, #328]	; 148b4 <close_stdout@@Base+0x283c>
   14768:	sub	sp, sp, #12
   1476c:	add	r2, sp, #40	; 0x28
   14770:	mov	r6, r0
   14774:	ldr	r1, [sp, #36]	; 0x24
   14778:	ldr	r4, [r3, lr]
   1477c:	cmp	r1, ip
   14780:	str	r2, [sp]
   14784:	ldr	r3, [r4]
   14788:	str	r3, [sp, #4]
   1478c:	bne	14810 <close_stdout@@Base+0x2798>
   14790:	ldr	r8, [pc, #288]	; 148b8 <close_stdout@@Base+0x2840>
   14794:	add	r3, sp, #44	; 0x2c
   14798:	str	r3, [sp]
   1479c:	add	r8, pc, r8
   147a0:	ldr	r7, [sp, #40]	; 0x28
   147a4:	ldr	r3, [r8]
   147a8:	mov	r2, r7
   147ac:	cmp	r3, #0
   147b0:	blt	1489c <close_stdout@@Base+0x2824>
   147b4:	bl	110dc <fcntl@plt>
   147b8:	subs	r5, r0, #0
   147bc:	blt	14820 <close_stdout@@Base+0x27a8>
   147c0:	ldr	r3, [pc, #244]	; 148bc <close_stdout@@Base+0x2844>
   147c4:	mov	r2, #1
   147c8:	add	r3, pc, r3
   147cc:	str	r2, [r3]
   147d0:	cmp	r5, #0
   147d4:	blt	147ec <close_stdout@@Base+0x2774>
   147d8:	ldr	r3, [pc, #224]	; 148c0 <close_stdout@@Base+0x2848>
   147dc:	add	r3, pc, r3
   147e0:	ldr	r3, [r3]
   147e4:	cmn	r3, #1
   147e8:	beq	14850 <close_stdout@@Base+0x27d8>
   147ec:	ldr	r2, [sp, #4]
   147f0:	mov	r0, r5
   147f4:	ldr	r3, [r4]
   147f8:	cmp	r2, r3
   147fc:	bne	148ac <close_stdout@@Base+0x2834>
   14800:	add	sp, sp, #12
   14804:	pop	{r4, r5, r6, r7, r8, lr}
   14808:	add	sp, sp, #12
   1480c:	bx	lr
   14810:	ldr	r2, [sp, #40]	; 0x28
   14814:	bl	110dc <fcntl@plt>
   14818:	mov	r5, r0
   1481c:	b	147ec <close_stdout@@Base+0x2774>
   14820:	bl	110e8 <__errno_location@plt>
   14824:	ldr	r3, [r0]
   14828:	cmp	r3, #22
   1482c:	bne	147c0 <close_stdout@@Base+0x2748>
   14830:	mov	r0, r6
   14834:	mov	r2, r7
   14838:	mov	r1, #0
   1483c:	bl	14750 <close_stdout@@Base+0x26d8>
   14840:	subs	r5, r0, #0
   14844:	blt	147ec <close_stdout@@Base+0x2774>
   14848:	mvn	r3, #0
   1484c:	str	r3, [r8]
   14850:	mov	r0, r5
   14854:	mov	r1, #1
   14858:	bl	110dc <fcntl@plt>
   1485c:	subs	r2, r0, #0
   14860:	blt	1487c <close_stdout@@Base+0x2804>
   14864:	orr	r2, r2, #1
   14868:	mov	r0, r5
   1486c:	mov	r1, #2
   14870:	bl	110dc <fcntl@plt>
   14874:	cmn	r0, #1
   14878:	bne	147ec <close_stdout@@Base+0x2774>
   1487c:	bl	110e8 <__errno_location@plt>
   14880:	ldr	r7, [r0]
   14884:	mov	r6, r0
   14888:	mov	r0, r5
   1488c:	mvn	r5, #0
   14890:	bl	111b4 <close@plt>
   14894:	str	r7, [r6]
   14898:	b	147ec <close_stdout@@Base+0x2774>
   1489c:	mov	r1, #0
   148a0:	bl	14750 <close_stdout@@Base+0x26d8>
   148a4:	mov	r5, r0
   148a8:	b	147d0 <close_stdout@@Base+0x2758>
   148ac:	bl	10fc8 <__stack_chk_fail@plt>
   148b0:	muleq	r1, r8, r8
   148b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   148b8:	andeq	r2, r1, ip, lsr #22
   148bc:	andeq	r2, r1, r0, lsl #22
   148c0:	andeq	r2, r1, ip, ror #21
   148c4:	push	{r4, lr}
   148c8:	subs	r4, r0, #0
   148cc:	sub	sp, sp, #8
   148d0:	beq	148e0 <close_stdout@@Base+0x2868>
   148d4:	bl	11088 <__freading@plt>
   148d8:	cmp	r0, #0
   148dc:	bne	148f0 <close_stdout@@Base+0x2878>
   148e0:	mov	r0, r4
   148e4:	add	sp, sp, #8
   148e8:	pop	{r4, lr}
   148ec:	b	10f68 <fflush@plt>
   148f0:	ldr	r3, [r4]
   148f4:	tst	r3, #256	; 0x100
   148f8:	beq	148e0 <close_stdout@@Base+0x2868>
   148fc:	mov	r3, #1
   14900:	mov	r0, r4
   14904:	str	r3, [sp]
   14908:	mov	r2, #0
   1490c:	mov	r3, #0
   14910:	bl	14924 <close_stdout@@Base+0x28ac>
   14914:	mov	r0, r4
   14918:	add	sp, sp, #8
   1491c:	pop	{r4, lr}
   14920:	b	10f68 <fflush@plt>
   14924:	push	{r4, r5, r6, r7, lr}
   14928:	sub	sp, sp, #20
   1492c:	ldmib	r0, {r1, ip}
   14930:	mov	r6, r0
   14934:	ldr	r4, [sp, #40]	; 0x28
   14938:	cmp	ip, r1
   1493c:	beq	14954 <close_stdout@@Base+0x28dc>
   14940:	str	r4, [sp, #40]	; 0x28
   14944:	mov	r0, r6
   14948:	add	sp, sp, #20
   1494c:	pop	{r4, r5, r6, r7, lr}
   14950:	b	11148 <fseeko64@plt>
   14954:	ldr	ip, [r0, #20]
   14958:	ldr	r1, [r0, #16]
   1495c:	cmp	ip, r1
   14960:	bne	14940 <close_stdout@@Base+0x28c8>
   14964:	ldr	r7, [r0, #36]	; 0x24
   14968:	cmp	r7, #0
   1496c:	bne	14940 <close_stdout@@Base+0x28c8>
   14970:	str	r2, [sp, #12]
   14974:	mvn	r5, #0
   14978:	str	r3, [sp, #8]
   1497c:	bl	11124 <fileno@plt>
   14980:	str	r4, [sp]
   14984:	mvn	r4, #0
   14988:	ldr	r2, [sp, #12]
   1498c:	ldr	r3, [sp, #8]
   14990:	bl	11004 <lseek64@plt>
   14994:	mov	r2, r0
   14998:	mov	r3, r1
   1499c:	cmp	r3, r5
   149a0:	cmpeq	r2, r4
   149a4:	beq	149c4 <close_stdout@@Base+0x294c>
   149a8:	ldr	r1, [r6]
   149ac:	mov	r0, r7
   149b0:	strd	r2, [r6, #80]	; 0x50
   149b4:	bic	r3, r1, #16
   149b8:	str	r3, [r6]
   149bc:	add	sp, sp, #20
   149c0:	pop	{r4, r5, r6, r7, pc}
   149c4:	mvn	r0, #0
   149c8:	b	149bc <close_stdout@@Base+0x2944>
   149cc:	push	{r4, r5, r6, lr}
   149d0:	mov	r4, r0
   149d4:	bl	11028 <__fpending@plt>
   149d8:	mov	r6, r0
   149dc:	mov	r0, r4
   149e0:	ldr	r4, [r4]
   149e4:	bl	146b0 <close_stdout@@Base+0x2638>
   149e8:	and	r4, r4, #32
   149ec:	adds	r5, r0, #0
   149f0:	movne	r5, #1
   149f4:	cmp	r4, #0
   149f8:	bne	14a18 <close_stdout@@Base+0x29a0>
   149fc:	cmp	r5, #0
   14a00:	beq	14a10 <close_stdout@@Base+0x2998>
   14a04:	cmp	r6, #0
   14a08:	beq	14a34 <close_stdout@@Base+0x29bc>
   14a0c:	mvn	r4, #0
   14a10:	mov	r0, r4
   14a14:	pop	{r4, r5, r6, pc}
   14a18:	cmp	r5, #0
   14a1c:	bne	14a0c <close_stdout@@Base+0x2994>
   14a20:	bl	110e8 <__errno_location@plt>
   14a24:	mvn	r4, #0
   14a28:	str	r5, [r0]
   14a2c:	mov	r0, r4
   14a30:	pop	{r4, r5, r6, pc}
   14a34:	bl	110e8 <__errno_location@plt>
   14a38:	ldr	r4, [r0]
   14a3c:	subs	r4, r4, #9
   14a40:	mvnne	r4, #0
   14a44:	mov	r0, r4
   14a48:	pop	{r4, r5, r6, pc}
   14a4c:	ldr	r3, [pc, #984]	; 14e2c <close_stdout@@Base+0x2db4>
   14a50:	mov	r0, #14
   14a54:	ldr	r2, [pc, #980]	; 14e30 <close_stdout@@Base+0x2db8>
   14a58:	add	r3, pc, r3
   14a5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a60:	sub	sp, sp, #132	; 0x84
   14a64:	ldr	r6, [r3, r2]
   14a68:	ldr	r3, [r6]
   14a6c:	str	r3, [sp, #124]	; 0x7c
   14a70:	bl	11178 <nl_langinfo@plt>
   14a74:	subs	r5, r0, #0
   14a78:	beq	14b2c <close_stdout@@Base+0x2ab4>
   14a7c:	ldr	r3, [pc, #944]	; 14e34 <close_stdout@@Base+0x2dbc>
   14a80:	ldr	r4, [pc, r3]
   14a84:	cmp	r4, #0
   14a88:	beq	14b38 <close_stdout@@Base+0x2ac0>
   14a8c:	ldrb	r7, [r4]
   14a90:	cmp	r7, #0
   14a94:	bne	14ac8 <close_stdout@@Base+0x2a50>
   14a98:	b	14b00 <close_stdout@@Base+0x2a88>
   14a9c:	mov	r0, r4
   14aa0:	bl	110c4 <strlen@plt>
   14aa4:	add	r0, r0, #1
   14aa8:	add	r7, r4, r0
   14aac:	mov	r0, r7
   14ab0:	bl	110c4 <strlen@plt>
   14ab4:	add	r0, r0, #1
   14ab8:	add	r4, r7, r0
   14abc:	ldrb	r7, [r7, r0]
   14ac0:	cmp	r7, #0
   14ac4:	beq	14b00 <close_stdout@@Base+0x2a88>
   14ac8:	mov	r0, r5
   14acc:	mov	r1, r4
   14ad0:	bl	10f50 <strcmp@plt>
   14ad4:	cmp	r0, #0
   14ad8:	beq	14af0 <close_stdout@@Base+0x2a78>
   14adc:	cmp	r7, #42	; 0x2a
   14ae0:	bne	14a9c <close_stdout@@Base+0x2a24>
   14ae4:	ldrb	r3, [r4, #1]
   14ae8:	cmp	r3, #0
   14aec:	bne	14a9c <close_stdout@@Base+0x2a24>
   14af0:	mov	r0, r4
   14af4:	bl	110c4 <strlen@plt>
   14af8:	add	r0, r0, #1
   14afc:	add	r5, r4, r0
   14b00:	ldrb	r3, [r5]
   14b04:	cmp	r3, #0
   14b08:	ldreq	r5, [pc, #808]	; 14e38 <close_stdout@@Base+0x2dc0>
   14b0c:	addeq	r5, pc, r5
   14b10:	ldr	r2, [sp, #124]	; 0x7c
   14b14:	mov	r0, r5
   14b18:	ldr	r3, [r6]
   14b1c:	cmp	r2, r3
   14b20:	bne	14e00 <close_stdout@@Base+0x2d88>
   14b24:	add	sp, sp, #132	; 0x84
   14b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b2c:	ldr	r5, [pc, #776]	; 14e3c <close_stdout@@Base+0x2dc4>
   14b30:	add	r5, pc, r5
   14b34:	b	14a7c <close_stdout@@Base+0x2a04>
   14b38:	ldr	r0, [pc, #768]	; 14e40 <close_stdout@@Base+0x2dc8>
   14b3c:	add	r0, pc, r0
   14b40:	bl	11064 <getenv@plt>
   14b44:	subs	r8, r0, #0
   14b48:	beq	14dd8 <close_stdout@@Base+0x2d60>
   14b4c:	ldrb	r3, [r8]
   14b50:	cmp	r3, #0
   14b54:	beq	14d6c <close_stdout@@Base+0x2cf4>
   14b58:	bl	110c4 <strlen@plt>
   14b5c:	subs	sl, r0, #0
   14b60:	subne	r3, sl, #1
   14b64:	bne	14d7c <close_stdout@@Base+0x2d04>
   14b68:	mov	r9, #0
   14b6c:	mov	fp, r9
   14b70:	add	r9, sl, r9
   14b74:	add	r0, r9, #14
   14b78:	bl	11070 <malloc@plt>
   14b7c:	subs	r7, r0, #0
   14b80:	beq	14dcc <close_stdout@@Base+0x2d54>
   14b84:	mov	r1, r8
   14b88:	mov	r2, sl
   14b8c:	bl	10f8c <memcpy@plt>
   14b90:	cmp	fp, #0
   14b94:	add	ip, r7, r9
   14b98:	movne	r3, #47	; 0x2f
   14b9c:	strbne	r3, [r7, sl]
   14ba0:	ldr	r3, [pc, #668]	; 14e44 <close_stdout@@Base+0x2dcc>
   14ba4:	add	r3, pc, r3
   14ba8:	ldm	r3!, {r0, r1, r2}
   14bac:	ldrh	r3, [r3]
   14bb0:	str	r0, [r7, r9]
   14bb4:	mov	r0, r7
   14bb8:	str	r1, [ip, #4]
   14bbc:	mov	r1, #32768	; 0x8000
   14bc0:	strh	r3, [ip, #12]
   14bc4:	str	r2, [ip, #8]
   14bc8:	bl	1104c <open64@plt>
   14bcc:	subs	r8, r0, #0
   14bd0:	blt	14d94 <close_stdout@@Base+0x2d1c>
   14bd4:	ldr	r1, [pc, #620]	; 14e48 <close_stdout@@Base+0x2dd0>
   14bd8:	add	r1, pc, r1
   14bdc:	bl	10f20 <fdopen@plt>
   14be0:	subs	fp, r0, #0
   14be4:	beq	14dec <close_stdout@@Base+0x2d74>
   14be8:	ldr	r0, [pc, #604]	; 14e4c <close_stdout@@Base+0x2dd4>
   14bec:	add	sl, sp, #20
   14bf0:	add	r9, sp, #72	; 0x48
   14bf4:	mov	r8, #0
   14bf8:	add	r0, pc, r0
   14bfc:	str	r0, [sp, #12]
   14c00:	ldr	r3, [fp, #4]
   14c04:	ldr	r2, [fp, #8]
   14c08:	cmp	r3, r2
   14c0c:	bcs	14cf8 <close_stdout@@Base+0x2c80>
   14c10:	add	r2, r3, #1
   14c14:	str	r2, [fp, #4]
   14c18:	ldrb	r0, [r3]
   14c1c:	cmp	r0, #32
   14c20:	beq	14c00 <close_stdout@@Base+0x2b88>
   14c24:	sub	r3, r0, #9
   14c28:	cmp	r3, #1
   14c2c:	bls	14c00 <close_stdout@@Base+0x2b88>
   14c30:	cmp	r0, #35	; 0x23
   14c34:	beq	14d0c <close_stdout@@Base+0x2c94>
   14c38:	mov	r1, fp
   14c3c:	bl	110d0 <ungetc@plt>
   14c40:	mov	r0, fp
   14c44:	ldr	r1, [sp, #12]
   14c48:	mov	r2, sl
   14c4c:	mov	r3, r9
   14c50:	bl	1110c <fscanf@plt>
   14c54:	cmp	r0, #1
   14c58:	ble	14d3c <close_stdout@@Base+0x2cc4>
   14c5c:	mov	r0, sl
   14c60:	bl	110c4 <strlen@plt>
   14c64:	str	r0, [sp, #8]
   14c68:	mov	r0, r9
   14c6c:	bl	110c4 <strlen@plt>
   14c70:	cmp	r8, #0
   14c74:	mov	r2, r0
   14c78:	bne	14da0 <close_stdout@@Base+0x2d28>
   14c7c:	ldr	r3, [sp, #8]
   14c80:	str	r2, [sp]
   14c84:	add	r8, r0, r3
   14c88:	add	r0, r8, #3
   14c8c:	add	r8, r8, #2
   14c90:	bl	11070 <malloc@plt>
   14c94:	ldr	r2, [sp]
   14c98:	mov	r3, r0
   14c9c:	cmp	r3, #0
   14ca0:	beq	14e04 <close_stdout@@Base+0x2d8c>
   14ca4:	ldr	r0, [sp, #8]
   14ca8:	movw	r1, #65534	; 0xfffe
   14cac:	movt	r1, #65535	; 0xffff
   14cb0:	rsb	r2, r2, r8
   14cb4:	rsb	r1, r0, r1
   14cb8:	stm	sp, {r2, r3}
   14cbc:	add	r0, r1, r2
   14cc0:	mov	r1, sl
   14cc4:	add	r0, r3, r0
   14cc8:	mov	r4, r3
   14ccc:	bl	1101c <strcpy@plt>
   14cd0:	ldr	r2, [sp]
   14cd4:	ldr	r3, [sp, #4]
   14cd8:	mov	r1, r9
   14cdc:	sub	r0, r2, #1
   14ce0:	add	r0, r3, r0
   14ce4:	bl	1101c <strcpy@plt>
   14ce8:	ldr	r3, [fp, #4]
   14cec:	ldr	r2, [fp, #8]
   14cf0:	cmp	r3, r2
   14cf4:	bcc	14c10 <close_stdout@@Base+0x2b98>
   14cf8:	mov	r0, fp
   14cfc:	bl	11154 <__uflow@plt>
   14d00:	cmn	r0, #1
   14d04:	beq	14d3c <close_stdout@@Base+0x2cc4>
   14d08:	b	14c1c <close_stdout@@Base+0x2ba4>
   14d0c:	ldr	r3, [fp, #4]
   14d10:	ldr	r2, [fp, #8]
   14d14:	cmp	r3, r2
   14d18:	bcs	14e20 <close_stdout@@Base+0x2da8>
   14d1c:	add	r2, r3, #1
   14d20:	str	r2, [fp, #4]
   14d24:	ldrb	r0, [r3]
   14d28:	cmp	r0, #10
   14d2c:	cmnne	r0, #1
   14d30:	bne	14d0c <close_stdout@@Base+0x2c94>
   14d34:	cmn	r0, #1
   14d38:	bne	14c00 <close_stdout@@Base+0x2b88>
   14d3c:	mov	r0, fp
   14d40:	bl	146b0 <close_stdout@@Base+0x2638>
   14d44:	cmp	r8, #0
   14d48:	beq	14d94 <close_stdout@@Base+0x2d1c>
   14d4c:	mov	r3, #0
   14d50:	strb	r3, [r4, r8]
   14d54:	mov	r0, r7
   14d58:	bl	10f74 <free@plt>
   14d5c:	ldr	r3, [pc, #236]	; 14e50 <close_stdout@@Base+0x2dd8>
   14d60:	add	r3, pc, r3
   14d64:	str	r4, [r3]
   14d68:	b	14a8c <close_stdout@@Base+0x2a14>
   14d6c:	ldr	r8, [pc, #224]	; 14e54 <close_stdout@@Base+0x2ddc>
   14d70:	mov	r3, #7
   14d74:	mov	sl, #8
   14d78:	add	r8, pc, r8
   14d7c:	ldrb	r3, [r8, r3]
   14d80:	cmp	r3, #47	; 0x2f
   14d84:	movne	r9, #1
   14d88:	movne	fp, r9
   14d8c:	bne	14b70 <close_stdout@@Base+0x2af8>
   14d90:	b	14b68 <close_stdout@@Base+0x2af0>
   14d94:	ldr	r4, [pc, #188]	; 14e58 <close_stdout@@Base+0x2de0>
   14d98:	add	r4, pc, r4
   14d9c:	b	14d54 <close_stdout@@Base+0x2cdc>
   14da0:	ldr	r0, [sp, #8]
   14da4:	str	r2, [sp]
   14da8:	add	r3, r0, r2
   14dac:	mov	r0, r4
   14db0:	add	r8, r3, r8
   14db4:	add	r1, r8, #3
   14db8:	add	r8, r8, #2
   14dbc:	bl	10fd4 <realloc@plt>
   14dc0:	ldr	r2, [sp]
   14dc4:	mov	r3, r0
   14dc8:	b	14c9c <close_stdout@@Base+0x2c24>
   14dcc:	ldr	r4, [pc, #136]	; 14e5c <close_stdout@@Base+0x2de4>
   14dd0:	add	r4, pc, r4
   14dd4:	b	14d5c <close_stdout@@Base+0x2ce4>
   14dd8:	ldr	r8, [pc, #128]	; 14e60 <close_stdout@@Base+0x2de8>
   14ddc:	mov	r3, #7
   14de0:	mov	sl, #8
   14de4:	add	r8, pc, r8
   14de8:	b	14d7c <close_stdout@@Base+0x2d04>
   14dec:	ldr	r4, [pc, #112]	; 14e64 <close_stdout@@Base+0x2dec>
   14df0:	mov	r0, r8
   14df4:	add	r4, pc, r4
   14df8:	bl	111b4 <close@plt>
   14dfc:	b	14d54 <close_stdout@@Base+0x2cdc>
   14e00:	bl	10fc8 <__stack_chk_fail@plt>
   14e04:	mov	r0, r4
   14e08:	ldr	r4, [pc, #88]	; 14e68 <close_stdout@@Base+0x2df0>
   14e0c:	bl	10f74 <free@plt>
   14e10:	mov	r0, fp
   14e14:	add	r4, pc, r4
   14e18:	bl	146b0 <close_stdout@@Base+0x2638>
   14e1c:	b	14d54 <close_stdout@@Base+0x2cdc>
   14e20:	mov	r0, fp
   14e24:	bl	11154 <__uflow@plt>
   14e28:	b	14d28 <close_stdout@@Base+0x2cb0>
   14e2c:	andeq	r2, r1, r0, lsr #11
   14e30:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14e34:	andeq	r2, r1, ip, asr #16
   14e38:	andeq	r1, r0, r4, asr r2
   14e3c:	andeq	r0, r0, ip, lsl #25
   14e40:	andeq	r1, r0, ip, lsr #4
   14e44:	ldrdeq	r1, [r0], -r4
   14e48:	ldrdeq	r0, [r0], -r4
   14e4c:	muleq	r0, r0, r1
   14e50:	andeq	r2, r1, ip, ror #10
   14e54:	ldrdeq	r0, [r0], -ip
   14e58:	andeq	r0, r0, r4, lsr #20
   14e5c:	andeq	r0, r0, ip, ror #19
   14e60:	andeq	r0, r0, r0, ror pc
   14e64:	andeq	r0, r0, r8, asr #19
   14e68:	andeq	r0, r0, r8, lsr #19
   14e6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e70:	mov	r4, r0
   14e74:	mov	r8, r1
   14e78:	mov	r5, r2
   14e7c:	mov	r6, r3
   14e80:	bl	110e8 <__errno_location@plt>
   14e84:	mov	sl, #0
   14e88:	mov	r9, r0
   14e8c:	str	sl, [r9]
   14e90:	mov	r0, r4
   14e94:	mov	r1, r5
   14e98:	bl	11058 <strcoll@plt>
   14e9c:	subs	r3, r0, #0
   14ea0:	mov	r0, r4
   14ea4:	beq	14eb0 <close_stdout@@Base+0x2e38>
   14ea8:	mov	r0, r3
   14eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14eb0:	bl	110c4 <strlen@plt>
   14eb4:	add	r7, r0, #1
   14eb8:	mov	r0, r5
   14ebc:	bl	110c4 <strlen@plt>
   14ec0:	subs	r8, r8, r7
   14ec4:	add	r4, r4, r7
   14ec8:	add	r0, r0, #1
   14ecc:	add	r5, r5, r0
   14ed0:	rsb	r6, r0, r6
   14ed4:	beq	14ee8 <close_stdout@@Base+0x2e70>
   14ed8:	cmp	r6, #0
   14edc:	bne	14e8c <close_stdout@@Base+0x2e14>
   14ee0:	mov	r0, #1
   14ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ee8:	subs	r0, r6, #0
   14eec:	mvnne	r0, #0
   14ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ef4:	cmp	r1, r3
   14ef8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14efc:	mov	r4, r1
   14f00:	mov	r5, r3
   14f04:	mov	r6, r2
   14f08:	mov	r7, r0
   14f0c:	beq	14f4c <close_stdout@@Base+0x2ed4>
   14f10:	ldrb	r9, [r7, r4]
   14f14:	mov	r3, #0
   14f18:	ldrb	r8, [r6, r5]
   14f1c:	mov	r0, r7
   14f20:	strb	r3, [r7, r4]
   14f24:	add	r1, r4, #1
   14f28:	strb	r3, [r6, r5]
   14f2c:	mov	r2, r6
   14f30:	add	r3, r5, #1
   14f34:	bl	14e6c <close_stdout@@Base+0x2df4>
   14f38:	strb	r9, [r7, r4]
   14f3c:	strb	r8, [r6, r5]
   14f40:	mov	r3, r0
   14f44:	mov	r0, r3
   14f48:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14f4c:	mov	r1, r2
   14f50:	mov	r2, r4
   14f54:	bl	10fb0 <memcmp@plt>
   14f58:	subs	r8, r0, #0
   14f5c:	bne	14f10 <close_stdout@@Base+0x2e98>
   14f60:	bl	110e8 <__errno_location@plt>
   14f64:	mov	r3, r8
   14f68:	str	r8, [r0]
   14f6c:	mov	r0, r3
   14f70:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14f74:	cmp	r1, r3
   14f78:	push	{r4, r5, r6, r7, r8, lr}
   14f7c:	mov	r4, r1
   14f80:	mov	r5, r3
   14f84:	mov	r6, r2
   14f88:	mov	r7, r0
   14f8c:	beq	14fa8 <close_stdout@@Base+0x2f30>
   14f90:	mov	r0, r7
   14f94:	mov	r1, r4
   14f98:	mov	r2, r6
   14f9c:	mov	r3, r5
   14fa0:	pop	{r4, r5, r6, r7, r8, lr}
   14fa4:	b	14e6c <close_stdout@@Base+0x2df4>
   14fa8:	mov	r1, r2
   14fac:	mov	r2, r4
   14fb0:	bl	10fb0 <memcmp@plt>
   14fb4:	subs	r8, r0, #0
   14fb8:	bne	14f90 <close_stdout@@Base+0x2f18>
   14fbc:	bl	110e8 <__errno_location@plt>
   14fc0:	str	r8, [r0]
   14fc4:	mov	r0, r8
   14fc8:	pop	{r4, r5, r6, r7, r8, pc}
   14fcc:	subs	r2, r1, #1
   14fd0:	bxeq	lr
   14fd4:	bcc	151ac <close_stdout@@Base+0x3134>
   14fd8:	cmp	r0, r1
   14fdc:	bls	15190 <close_stdout@@Base+0x3118>
   14fe0:	tst	r1, r2
   14fe4:	beq	1519c <close_stdout@@Base+0x3124>
   14fe8:	clz	r3, r0
   14fec:	clz	r2, r1
   14ff0:	sub	r3, r2, r3
   14ff4:	rsbs	r3, r3, #31
   14ff8:	addne	r3, r3, r3, lsl #1
   14ffc:	mov	r2, #0
   15000:	addne	pc, pc, r3, lsl #2
   15004:	nop	{0}
   15008:	cmp	r0, r1, lsl #31
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #31
   15014:	cmp	r0, r1, lsl #30
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #30
   15020:	cmp	r0, r1, lsl #29
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #29
   1502c:	cmp	r0, r1, lsl #28
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #28
   15038:	cmp	r0, r1, lsl #27
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #27
   15044:	cmp	r0, r1, lsl #26
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #26
   15050:	cmp	r0, r1, lsl #25
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #25
   1505c:	cmp	r0, r1, lsl #24
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #24
   15068:	cmp	r0, r1, lsl #23
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #23
   15074:	cmp	r0, r1, lsl #22
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #22
   15080:	cmp	r0, r1, lsl #21
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #21
   1508c:	cmp	r0, r1, lsl #20
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #20
   15098:	cmp	r0, r1, lsl #19
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #19
   150a4:	cmp	r0, r1, lsl #18
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1, lsl #18
   150b0:	cmp	r0, r1, lsl #17
   150b4:	adc	r2, r2, r2
   150b8:	subcs	r0, r0, r1, lsl #17
   150bc:	cmp	r0, r1, lsl #16
   150c0:	adc	r2, r2, r2
   150c4:	subcs	r0, r0, r1, lsl #16
   150c8:	cmp	r0, r1, lsl #15
   150cc:	adc	r2, r2, r2
   150d0:	subcs	r0, r0, r1, lsl #15
   150d4:	cmp	r0, r1, lsl #14
   150d8:	adc	r2, r2, r2
   150dc:	subcs	r0, r0, r1, lsl #14
   150e0:	cmp	r0, r1, lsl #13
   150e4:	adc	r2, r2, r2
   150e8:	subcs	r0, r0, r1, lsl #13
   150ec:	cmp	r0, r1, lsl #12
   150f0:	adc	r2, r2, r2
   150f4:	subcs	r0, r0, r1, lsl #12
   150f8:	cmp	r0, r1, lsl #11
   150fc:	adc	r2, r2, r2
   15100:	subcs	r0, r0, r1, lsl #11
   15104:	cmp	r0, r1, lsl #10
   15108:	adc	r2, r2, r2
   1510c:	subcs	r0, r0, r1, lsl #10
   15110:	cmp	r0, r1, lsl #9
   15114:	adc	r2, r2, r2
   15118:	subcs	r0, r0, r1, lsl #9
   1511c:	cmp	r0, r1, lsl #8
   15120:	adc	r2, r2, r2
   15124:	subcs	r0, r0, r1, lsl #8
   15128:	cmp	r0, r1, lsl #7
   1512c:	adc	r2, r2, r2
   15130:	subcs	r0, r0, r1, lsl #7
   15134:	cmp	r0, r1, lsl #6
   15138:	adc	r2, r2, r2
   1513c:	subcs	r0, r0, r1, lsl #6
   15140:	cmp	r0, r1, lsl #5
   15144:	adc	r2, r2, r2
   15148:	subcs	r0, r0, r1, lsl #5
   1514c:	cmp	r0, r1, lsl #4
   15150:	adc	r2, r2, r2
   15154:	subcs	r0, r0, r1, lsl #4
   15158:	cmp	r0, r1, lsl #3
   1515c:	adc	r2, r2, r2
   15160:	subcs	r0, r0, r1, lsl #3
   15164:	cmp	r0, r1, lsl #2
   15168:	adc	r2, r2, r2
   1516c:	subcs	r0, r0, r1, lsl #2
   15170:	cmp	r0, r1, lsl #1
   15174:	adc	r2, r2, r2
   15178:	subcs	r0, r0, r1, lsl #1
   1517c:	cmp	r0, r1
   15180:	adc	r2, r2, r2
   15184:	subcs	r0, r0, r1
   15188:	mov	r0, r2
   1518c:	bx	lr
   15190:	moveq	r0, #1
   15194:	movne	r0, #0
   15198:	bx	lr
   1519c:	clz	r2, r1
   151a0:	rsb	r2, r2, #31
   151a4:	lsr	r0, r0, r2
   151a8:	bx	lr
   151ac:	cmp	r0, #0
   151b0:	mvnne	r0, #0
   151b4:	b	151d8 <close_stdout@@Base+0x3160>
   151b8:	cmp	r1, #0
   151bc:	beq	151ac <close_stdout@@Base+0x3134>
   151c0:	push	{r0, r1, lr}
   151c4:	bl	14fcc <close_stdout@@Base+0x2f54>
   151c8:	pop	{r1, r2, lr}
   151cc:	mul	r3, r2, r0
   151d0:	sub	r1, r1, r3
   151d4:	bx	lr
   151d8:	push	{r1, lr}
   151dc:	mov	r0, #8
   151e0:	bl	10f44 <raise@plt>
   151e4:	pop	{r1, pc}
   151e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   151ec:	mov	r7, r0
   151f0:	ldr	r6, [pc, #76]	; 15244 <close_stdout@@Base+0x31cc>
   151f4:	mov	r8, r1
   151f8:	ldr	r5, [pc, #72]	; 15248 <close_stdout@@Base+0x31d0>
   151fc:	mov	r9, r2
   15200:	add	r6, pc, r6
   15204:	bl	10f00 <fdopen@plt-0x20>
   15208:	add	r5, pc, r5
   1520c:	rsb	r6, r5, r6
   15210:	asrs	r6, r6, #2
   15214:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   15218:	sub	r5, r5, #4
   1521c:	mov	r4, #0
   15220:	add	r4, r4, #1
   15224:	ldr	r3, [r5, #4]!
   15228:	mov	r0, r7
   1522c:	mov	r1, r8
   15230:	mov	r2, r9
   15234:	blx	r3
   15238:	cmp	r4, r6
   1523c:	bne	15220 <close_stdout@@Base+0x31a8>
   15240:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15244:	andeq	r1, r1, r4, ror ip
   15248:	andeq	r1, r1, r8, ror #24
   1524c:	bx	lr
   15250:	ldr	r3, [pc, #28]	; 15274 <close_stdout@@Base+0x31fc>
   15254:	mov	r1, #0
   15258:	ldr	r2, [pc, #24]	; 15278 <close_stdout@@Base+0x3200>
   1525c:	add	r3, pc, r3
   15260:	ldr	r3, [r3, r2]
   15264:	cmp	r3, #0
   15268:	ldrne	r2, [r3]
   1526c:	moveq	r2, r3
   15270:	b	110f4 <__cxa_atexit@plt>
   15274:	muleq	r1, ip, sp
   15278:	andeq	r0, r0, r8, lsl #2

Disassembly of section .fini:

0001527c <.fini>:
   1527c:	push	{r3, lr}
   15280:	pop	{r3, pc}
