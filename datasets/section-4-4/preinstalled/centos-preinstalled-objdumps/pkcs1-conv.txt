
centos-preinstalled/pkcs1-conv:     file format elf32-littlearm


Disassembly of section .init:

00010f1c <_init@@Base>:
   10f1c:	push	{r3, lr}
   10f20:	bl	113bc <abort@plt+0x27c>
   10f24:	pop	{r3, pc}

Disassembly of section .plt:

00010f28 <nettle_dsa_params_from_der_iterator@plt-0x14>:
   10f28:	push	{lr}		; (str lr, [sp, #-4]!)
   10f2c:	ldr	lr, [pc, #4]	; 10f38 <_init@@Base+0x1c>
   10f30:	add	lr, pc, lr
   10f34:	ldr	pc, [lr, #8]!
   10f38:	andeq	r2, r1, r8, asr #1

00010f3c <nettle_dsa_params_from_der_iterator@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #200]!	; 0xc8

00010f48 <fopen@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #192]!	; 0xc0

00010f54 <nettle_rsa_public_key_clear@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #184]!	; 0xb8

00010f60 <ferror@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #176]!	; 0xb0

00010f6c <nettle_rsa_keypair_to_sexp@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #168]!	; 0xa8

00010f78 <nettle_buffer_grow@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #160]!	; 0xa0

00010f84 <_IO_getc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #152]!	; 0x98

00010f90 <memcmp@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #144]!	; 0x90

00010f9c <__stack_chk_fail@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #136]!	; 0x88

00010fa8 <nettle_rsa_public_key_from_der_iterator@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #73728	; 0x12000
   10fb0:	ldr	pc, [ip, #128]!	; 0x80

00010fb4 <nettle_asn1_der_iterator_first@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #73728	; 0x12000
   10fbc:	ldr	pc, [ip, #120]!	; 0x78

00010fc0 <fwrite@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #73728	; 0x12000
   10fc8:	ldr	pc, [ip, #112]!	; 0x70

00010fcc <puts@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #73728	; 0x12000
   10fd4:	ldr	pc, [ip, #104]!	; 0x68

00010fd8 <nettle_openssl_provate_key_from_der@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #73728	; 0x12000
   10fe0:	ldr	pc, [ip, #96]!	; 0x60

00010fe4 <malloc@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #73728	; 0x12000
   10fec:	ldr	pc, [ip, #88]!	; 0x58

00010ff0 <__libc_start_main@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #73728	; 0x12000
   10ff8:	ldr	pc, [ip, #80]!	; 0x50

00010ffc <strerror@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #73728	; 0x12000
   11004:	ldr	pc, [ip, #72]!	; 0x48

00011008 <__vfprintf_chk@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #73728	; 0x12000
   11010:	ldr	pc, [ip, #64]!	; 0x40

00011014 <nettle_rsa_private_key_clear@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #73728	; 0x12000
   1101c:	ldr	pc, [ip, #56]!	; 0x38

00011020 <nettle_dsa_public_key_clear@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #73728	; 0x12000
   11028:	ldr	pc, [ip, #48]!	; 0x30

0001102c <__gmon_start__@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #73728	; 0x12000
   11034:	ldr	pc, [ip, #40]!	; 0x28

00011038 <getopt_long@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #73728	; 0x12000
   11040:	ldr	pc, [ip, #32]!

00011044 <exit@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #73728	; 0x12000
   1104c:	ldr	pc, [ip, #24]!

00011050 <nettle_asn1_der_decode_constructed@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #73728	; 0x12000
   11058:	ldr	pc, [ip, #16]!

0001105c <nettle_base64_decode_final@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #73728	; 0x12000
   11064:	ldr	pc, [ip, #8]!

00011068 <nettle_dsa_private_key_init@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #73728	; 0x12000
   11070:	ldr	pc, [ip, #0]!

00011074 <__errno_location@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #69632	; 0x11000
   1107c:	ldr	pc, [ip, #4088]!	; 0xff8

00011080 <nettle_buffer_init_realloc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #69632	; 0x11000
   11088:	ldr	pc, [ip, #4080]!	; 0xff0

0001108c <fclose@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #69632	; 0x11000
   11094:	ldr	pc, [ip, #4072]!	; 0xfe8

00011098 <nettle_rsa_keypair_from_der@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #69632	; 0x11000
   110a0:	ldr	pc, [ip, #4064]!	; 0xfe0

000110a4 <nettle_base64_decode_update@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #69632	; 0x11000
   110ac:	ldr	pc, [ip, #4056]!	; 0xfd8

000110b0 <nettle_buffer_clear@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #69632	; 0x11000
   110b8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110bc <nettle_asn1_der_iterator_next@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #69632	; 0x11000
   110c4:	ldr	pc, [ip, #4040]!	; 0xfc8

000110c8 <nettle_asn1_der_decode_constructed_last@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #69632	; 0x11000
   110d0:	ldr	pc, [ip, #4032]!	; 0xfc0

000110d4 <nettle_dsa_public_key_init@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #69632	; 0x11000
   110dc:	ldr	pc, [ip, #4024]!	; 0xfb8

000110e0 <nettle_buffer_reset@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #69632	; 0x11000
   110e8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110ec <nettle_rsa_private_key_init@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #69632	; 0x11000
   110f4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110f8 <nettle_dsa_public_key_from_der_iterator@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #69632	; 0x11000
   11100:	ldr	pc, [ip, #4000]!	; 0xfa0

00011104 <nettle_dsa_keypair_to_sexp@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #69632	; 0x11000
   1110c:	ldr	pc, [ip, #3992]!	; 0xf98

00011110 <nettle_dsa_private_key_clear@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #69632	; 0x11000
   11118:	ldr	pc, [ip, #3984]!	; 0xf90

0001111c <nettle_rsa_public_key_init@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #69632	; 0x11000
   11124:	ldr	pc, [ip, #3976]!	; 0xf88

00011128 <nettle_asn1_der_decode_bitstring_last@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #69632	; 0x11000
   11130:	ldr	pc, [ip, #3968]!	; 0xf80

00011134 <nettle_base64_decode_init@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #69632	; 0x11000
   1113c:	ldr	pc, [ip, #3960]!	; 0xf78

00011140 <abort@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #69632	; 0x11000
   11148:	ldr	pc, [ip, #3952]!	; 0xf70

Disassembly of section .text:

0001114c <.text>:
   1114c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11150:	sub	sp, sp, #44	; 0x2c
   11154:	ldr	r6, [pc, #500]	; 11350 <abort@plt+0x210>
   11158:	mov	r4, #0
   1115c:	ldr	r3, [pc, #496]	; 11354 <abort@plt+0x214>
   11160:	mov	r5, r0
   11164:	add	r6, pc, r6
   11168:	ldr	sl, [pc, #488]	; 11358 <abort@plt+0x218>
   1116c:	ldr	r8, [pc, #488]	; 1135c <abort@plt+0x21c>
   11170:	mov	r9, r1
   11174:	ldr	r3, [r6, r3]
   11178:	add	sl, pc, sl
   1117c:	add	r8, pc, r8
   11180:	mov	r7, r4
   11184:	mov	fp, r4
   11188:	str	r3, [sp, #8]
   1118c:	ldr	r3, [r3]
   11190:	str	r3, [sp, #36]	; 0x24
   11194:	str	fp, [sp]
   11198:	mov	r0, r5
   1119c:	mov	r1, r9
   111a0:	mov	r2, sl
   111a4:	mov	r3, r8
   111a8:	bl	11038 <getopt_long@plt>
   111ac:	cmn	r0, #1
   111b0:	beq	11268 <abort@plt+0x128>
   111b4:	cmp	r0, #98	; 0x62
   111b8:	beq	11260 <abort@plt+0x120>
   111bc:	bgt	111fc <abort@plt+0xbc>
   111c0:	cmp	r0, #63	; 0x3f
   111c4:	beq	1124c <abort@plt+0x10c>
   111c8:	cmp	r0, #86	; 0x56
   111cc:	bne	1125c <abort@plt+0x11c>
   111d0:	ldr	r0, [pc, #392]	; 11360 <abort@plt+0x220>
   111d4:	add	r0, pc, r0
   111d8:	bl	10fcc <puts@plt>
   111dc:	mov	r0, #0
   111e0:	ldr	r1, [sp, #8]
   111e4:	ldr	r2, [sp, #36]	; 0x24
   111e8:	ldr	r3, [r1]
   111ec:	cmp	r2, r3
   111f0:	bne	11328 <abort@plt+0x1e8>
   111f4:	add	sp, sp, #44	; 0x2c
   111f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111fc:	cmp	r0, #512	; 0x200
   11200:	blt	1125c <abort@plt+0x11c>
   11204:	cmp	r0, #516	; 0x204
   11208:	blt	11254 <abort@plt+0x114>
   1120c:	cmp	r0, #768	; 0x300
   11210:	bne	1125c <abort@plt+0x11c>
   11214:	ldr	r0, [pc, #328]	; 11364 <abort@plt+0x224>
   11218:	add	r0, pc, r0
   1121c:	bl	10fcc <puts@plt>
   11220:	mov	r0, #0
   11224:	b	111e0 <abort@plt+0xa0>
   11228:	ldr	r1, [pc, #312]	; 11368 <abort@plt+0x228>
   1122c:	mov	r2, r7
   11230:	mov	r3, r4
   11234:	mov	r0, fp
   11238:	ldr	r1, [r6, r1]
   1123c:	ldr	r1, [r1]
   11240:	bl	11ad0 <abort@plt+0x990>
   11244:	cmp	r0, #0
   11248:	bne	11308 <abort@plt+0x1c8>
   1124c:	mov	r0, #1
   11250:	b	111e0 <abort@plt+0xa0>
   11254:	mov	r7, r0
   11258:	b	11194 <abort@plt+0x54>
   1125c:	bl	11140 <abort@plt>
   11260:	mov	r4, #1
   11264:	b	11194 <abort@plt+0x54>
   11268:	ldr	r3, [pc, #252]	; 1136c <abort@plt+0x22c>
   1126c:	add	fp, sp, #16
   11270:	mov	r1, #0
   11274:	mov	r0, fp
   11278:	ldr	r2, [r6, r3]
   1127c:	bl	11080 <nettle_buffer_init_realloc@plt>
   11280:	ldr	r3, [pc, #232]	; 11370 <abort@plt+0x230>
   11284:	ldr	r3, [r6, r3]
   11288:	ldr	r8, [r3]
   1128c:	cmp	r8, r5
   11290:	beq	11228 <abort@plt+0xe8>
   11294:	cmp	r7, #0
   11298:	moveq	r3, r4
   1129c:	orrne	r3, r4, #1
   112a0:	cmp	r3, #0
   112a4:	bne	11318 <abort@plt+0x1d8>
   112a8:	ldr	r1, [pc, #196]	; 11374 <abort@plt+0x234>
   112ac:	add	r1, pc, r1
   112b0:	str	r1, [sp, #12]
   112b4:	add	r9, r9, r8, lsl #2
   112b8:	b	11300 <abort@plt+0x1c0>
   112bc:	ldr	r0, [r9]
   112c0:	mov	sl, r9
   112c4:	ldr	r1, [sp, #12]
   112c8:	add	r9, r9, #4
   112cc:	bl	10f48 <fopen@plt>
   112d0:	subs	r6, r0, #0
   112d4:	beq	1132c <abort@plt+0x1ec>
   112d8:	mov	r0, fp
   112dc:	mov	r1, r6
   112e0:	mov	r2, r7
   112e4:	mov	r3, r4
   112e8:	bl	11ad0 <abort@plt+0x990>
   112ec:	cmp	r0, #0
   112f0:	beq	1124c <abort@plt+0x10c>
   112f4:	mov	r0, r6
   112f8:	add	r8, r8, #1
   112fc:	bl	1108c <fclose@plt>
   11300:	cmp	r8, r5
   11304:	blt	112bc <abort@plt+0x17c>
   11308:	mov	r0, fp
   1130c:	bl	110b0 <nettle_buffer_clear@plt>
   11310:	mov	r0, #0
   11314:	b	111e0 <abort@plt+0xa0>
   11318:	ldr	r2, [pc, #88]	; 11378 <abort@plt+0x238>
   1131c:	add	r2, pc, r2
   11320:	str	r2, [sp, #12]
   11324:	b	112b4 <abort@plt+0x174>
   11328:	bl	10f9c <__stack_chk_fail@plt>
   1132c:	bl	11074 <__errno_location@plt>
   11330:	ldr	r4, [sl]
   11334:	ldr	r0, [r0]
   11338:	bl	10ffc <strerror@plt>
   1133c:	mov	r1, r4
   11340:	mov	r2, r0
   11344:	ldr	r0, [pc, #48]	; 1137c <abort@plt+0x23c>
   11348:	add	r0, pc, r0
   1134c:	bl	1200c <abort@plt+0xecc>
   11350:	muleq	r1, r4, lr
   11354:	strheq	r0, [r0], -ip
   11358:	andeq	r1, r0, r8, ror r2
   1135c:	andeq	r1, r1, ip, ror #25
   11360:	andeq	r1, r0, r0, lsl #4
   11364:	andeq	r1, r0, r0, lsr #3
   11368:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1136c:	andeq	r0, r0, r8, asr #1
   11370:	andeq	r0, r0, r0, asr #1
   11374:	andeq	r1, r0, r8, lsl #2
   11378:	muleq	r0, r4, r0
   1137c:	andeq	r1, r0, ip, lsr #1
   11380:	mov	fp, #0
   11384:	mov	lr, #0
   11388:	pop	{r1}		; (ldr r1, [sp], #4)
   1138c:	mov	r2, sp
   11390:	push	{r2}		; (str r2, [sp, #-4]!)
   11394:	push	{r0}		; (str r0, [sp, #-4]!)
   11398:	ldr	ip, [pc, #16]	; 113b0 <abort@plt+0x270>
   1139c:	push	{ip}		; (str ip, [sp, #-4]!)
   113a0:	ldr	r0, [pc, #12]	; 113b4 <abort@plt+0x274>
   113a4:	ldr	r3, [pc, #12]	; 113b8 <abort@plt+0x278>
   113a8:	bl	10ff0 <__libc_start_main@plt>
   113ac:	bl	11140 <abort@plt>
   113b0:	andeq	r2, r1, ip, lsl #3
   113b4:	andeq	r1, r1, ip, asr #2
   113b8:	andeq	r2, r1, r8, lsr #2
   113bc:	ldr	r3, [pc, #20]	; 113d8 <abort@plt+0x298>
   113c0:	ldr	r2, [pc, #20]	; 113dc <abort@plt+0x29c>
   113c4:	add	r3, pc, r3
   113c8:	ldr	r2, [r3, r2]
   113cc:	cmp	r2, #0
   113d0:	bxeq	lr
   113d4:	b	1102c <__gmon_start__@plt>
   113d8:	andeq	r1, r1, r4, lsr ip
   113dc:	andeq	r0, r0, ip, asr #1
   113e0:	push	{r3, lr}
   113e4:	movw	r0, #12508	; 0x30dc
   113e8:	ldr	r3, [pc, #36]	; 11414 <abort@plt+0x2d4>
   113ec:	movt	r0, #2
   113f0:	rsb	r3, r0, r3
   113f4:	cmp	r3, #6
   113f8:	popls	{r3, pc}
   113fc:	movw	r3, #0
   11400:	movt	r3, #0
   11404:	cmp	r3, #0
   11408:	popeq	{r3, pc}
   1140c:	blx	r3
   11410:	pop	{r3, pc}
   11414:	ldrdeq	r3, [r2], -pc	; <UNPREDICTABLE>
   11418:	push	{r3, lr}
   1141c:	movw	r0, #12508	; 0x30dc
   11420:	movw	r3, #12508	; 0x30dc
   11424:	movt	r0, #2
   11428:	movt	r3, #2
   1142c:	rsb	r3, r0, r3
   11430:	asr	r3, r3, #2
   11434:	add	r3, r3, r3, lsr #31
   11438:	asrs	r1, r3, #1
   1143c:	popeq	{r3, pc}
   11440:	movw	r2, #0
   11444:	movt	r2, #0
   11448:	cmp	r2, #0
   1144c:	popeq	{r3, pc}
   11450:	blx	r2
   11454:	pop	{r3, pc}
   11458:	push	{r4, lr}
   1145c:	movw	r4, #12508	; 0x30dc
   11460:	movt	r4, #2
   11464:	ldrb	r3, [r4]
   11468:	cmp	r3, #0
   1146c:	popne	{r4, pc}
   11470:	bl	113e0 <abort@plt+0x2a0>
   11474:	mov	r3, #1
   11478:	strb	r3, [r4]
   1147c:	pop	{r4, pc}
   11480:	movw	r0, #11884	; 0x2e6c
   11484:	movt	r0, #2
   11488:	push	{r3, lr}
   1148c:	ldr	r3, [r0]
   11490:	cmp	r3, #0
   11494:	beq	114ac <abort@plt+0x36c>
   11498:	movw	r3, #0
   1149c:	movt	r3, #0
   114a0:	cmp	r3, #0
   114a4:	beq	114ac <abort@plt+0x36c>
   114a8:	blx	r3
   114ac:	pop	{r3, lr}
   114b0:	b	11418 <abort@plt+0x2d8>
   114b4:	push	{r4, r5, r6, lr}
   114b8:	mov	r4, r0
   114bc:	mov	r6, r1
   114c0:	b	114dc <abort@plt+0x39c>
   114c4:	ldr	r2, [r4]
   114c8:	cmp	r5, #10
   114cc:	add	ip, r3, #1
   114d0:	str	ip, [r4, #16]
   114d4:	strb	r5, [r2, r3]
   114d8:	beq	11550 <abort@plt+0x410>
   114dc:	mov	r0, r6
   114e0:	bl	10f84 <_IO_getc@plt>
   114e4:	cmn	r0, #1
   114e8:	mov	r5, r0
   114ec:	beq	1151c <abort@plt+0x3dc>
   114f0:	ldr	r3, [r4, #16]
   114f4:	ldr	r2, [r4, #4]
   114f8:	cmp	r3, r2
   114fc:	bcc	114c4 <abort@plt+0x384>
   11500:	mov	r0, r4
   11504:	mov	r1, #1
   11508:	bl	10f78 <nettle_buffer_grow@plt>
   1150c:	cmp	r0, #0
   11510:	popeq	{r4, r5, r6, pc}
   11514:	ldr	r3, [r4, #16]
   11518:	b	114c4 <abort@plt+0x384>
   1151c:	mov	r0, r6
   11520:	bl	10f60 <ferror@plt>
   11524:	cmp	r0, #0
   11528:	beq	11558 <abort@plt+0x418>
   1152c:	bl	11074 <__errno_location@plt>
   11530:	ldr	r0, [r0]
   11534:	bl	10ffc <strerror@plt>
   11538:	mov	r1, r0
   1153c:	ldr	r0, [pc, #28]	; 11560 <abort@plt+0x420>
   11540:	add	r0, pc, r0
   11544:	bl	12068 <abort@plt+0xf28>
   11548:	mov	r0, #0
   1154c:	pop	{r4, r5, r6, pc}
   11550:	mov	r0, #1
   11554:	pop	{r4, r5, r6, pc}
   11558:	mov	r0, r5
   1155c:	pop	{r4, r5, r6, pc}
   11560:			; <UNDEFINED> instruction: 0x00000cb0
   11564:	ldr	r3, [pc, #152]	; 11604 <abort@plt+0x4c4>
   11568:	ldr	ip, [pc, #152]	; 11608 <abort@plt+0x4c8>
   1156c:	add	r3, pc, r3
   11570:	push	{r4, r5, r6, r7, r8, lr}
   11574:	sub	sp, sp, #24
   11578:	ldr	r5, [r3, ip]
   1157c:	add	r4, sp, #8
   11580:	mov	r8, r0
   11584:	mov	r6, r2
   11588:	mov	r0, r4
   1158c:	mov	r7, r1
   11590:	ldr	r3, [r5]
   11594:	str	r3, [sp, #20]
   11598:	bl	11134 <nettle_base64_decode_init@plt>
   1159c:	ldr	r2, [r8]
   115a0:	mov	r1, r6
   115a4:	ldr	r3, [r6]
   115a8:	mov	r0, r4
   115ac:	add	r2, r2, r7
   115b0:	str	r2, [sp]
   115b4:	bl	110a4 <nettle_base64_decode_update@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	115d0 <abort@plt+0x490>
   115c0:	mov	r0, r4
   115c4:	bl	1105c <nettle_base64_decode_final@plt>
   115c8:	cmp	r0, #0
   115cc:	bne	115f8 <abort@plt+0x4b8>
   115d0:	ldr	r0, [pc, #52]	; 1160c <abort@plt+0x4cc>
   115d4:	add	r0, pc, r0
   115d8:	bl	12068 <abort@plt+0xf28>
   115dc:	mov	r0, #0
   115e0:	ldr	r2, [sp, #20]
   115e4:	ldr	r3, [r5]
   115e8:	cmp	r2, r3
   115ec:	bne	11600 <abort@plt+0x4c0>
   115f0:	add	sp, sp, #24
   115f4:	pop	{r4, r5, r6, r7, r8, pc}
   115f8:	mov	r0, #1
   115fc:	b	115e0 <abort@plt+0x4a0>
   11600:	bl	10f9c <__stack_chk_fail@plt>
   11604:	andeq	r1, r1, ip, lsl #21
   11608:	strheq	r0, [r0], -ip
   1160c:	andeq	r0, r0, r0, lsr ip
   11610:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11614:	mov	r5, r0
   11618:	ldr	r4, [pc, #1148]	; 11a9c <abort@plt+0x95c>
   1161c:	sub	sp, sp, #168	; 0xa8
   11620:	ldr	lr, [pc, #1144]	; 11aa0 <abort@plt+0x960>
   11624:	sub	r1, r1, #512	; 0x200
   11628:	add	r4, pc, r4
   1162c:	mov	r6, r2
   11630:	mov	r9, r3
   11634:	ldr	r7, [r4, lr]
   11638:	ldr	r0, [r7]
   1163c:	str	r0, [sp, #164]	; 0xa4
   11640:	cmp	r1, #3
   11644:	addls	pc, pc, r1, lsl #2
   11648:	b	117ec <abort@plt+0x6ac>
   1164c:	b	11728 <abort@plt+0x5e8>
   11650:	b	116e4 <abort@plt+0x5a4>
   11654:	b	1168c <abort@plt+0x54c>
   11658:	b	1165c <abort@plt+0x51c>
   1165c:	add	sl, sp, #12
   11660:	mov	r1, r2
   11664:	mov	r2, r3
   11668:	mov	r0, sl
   1166c:	bl	10fb4 <nettle_asn1_der_iterator_first@plt>
   11670:	cmp	r0, #2
   11674:	beq	117f0 <abort@plt+0x6b0>
   11678:	ldr	r0, [pc, #1060]	; 11aa4 <abort@plt+0x964>
   1167c:	mov	r6, #0
   11680:	add	r0, pc, r0
   11684:	bl	12068 <abort@plt+0xf28>
   11688:	b	117d0 <abort@plt+0x690>
   1168c:	add	r8, sp, #88	; 0x58
   11690:	add	sl, sp, #60	; 0x3c
   11694:	mov	r0, r8
   11698:	bl	110d4 <nettle_dsa_public_key_init@plt>
   1169c:	mov	r0, sl
   116a0:	bl	11068 <nettle_dsa_private_key_init@plt>
   116a4:	mov	r3, r6
   116a8:	str	r9, [sp]
   116ac:	mov	r0, r8
   116b0:	mov	r1, sl
   116b4:	mov	r2, #0
   116b8:	bl	10fd8 <nettle_openssl_provate_key_from_der@plt>
   116bc:	subs	r6, r0, #0
   116c0:	bne	11894 <abort@plt+0x754>
   116c4:	ldr	r0, [pc, #988]	; 11aa8 <abort@plt+0x968>
   116c8:	add	r0, pc, r0
   116cc:	bl	12068 <abort@plt+0xf28>
   116d0:	mov	r0, r8
   116d4:	bl	11020 <nettle_dsa_public_key_clear@plt>
   116d8:	mov	r0, sl
   116dc:	bl	11110 <nettle_dsa_private_key_clear@plt>
   116e0:	b	1177c <abort@plt+0x63c>
   116e4:	add	r8, sp, #88	; 0x58
   116e8:	mov	r0, r8
   116ec:	bl	1111c <nettle_rsa_public_key_init@plt>
   116f0:	mov	r1, #0
   116f4:	mov	r3, r6
   116f8:	str	r9, [sp]
   116fc:	mov	r0, r8
   11700:	mov	r2, r1
   11704:	bl	11098 <nettle_rsa_keypair_from_der@plt>
   11708:	subs	r6, r0, #0
   1170c:	bne	118dc <abort@plt+0x79c>
   11710:	ldr	r0, [pc, #916]	; 11aac <abort@plt+0x96c>
   11714:	add	r0, pc, r0
   11718:	bl	12068 <abort@plt+0xf28>
   1171c:	mov	r0, r8
   11720:	bl	10f54 <nettle_rsa_public_key_clear@plt>
   11724:	b	1177c <abort@plt+0x63c>
   11728:	add	sl, sp, #60	; 0x3c
   1172c:	add	r8, sp, #88	; 0x58
   11730:	mov	r0, sl
   11734:	bl	1111c <nettle_rsa_public_key_init@plt>
   11738:	mov	r0, r8
   1173c:	bl	110ec <nettle_rsa_private_key_init@plt>
   11740:	mov	r3, r6
   11744:	str	r9, [sp]
   11748:	mov	r0, sl
   1174c:	mov	r1, r8
   11750:	mov	r2, #0
   11754:	bl	11098 <nettle_rsa_keypair_from_der@plt>
   11758:	subs	r6, r0, #0
   1175c:	bne	118b8 <abort@plt+0x778>
   11760:	ldr	r0, [pc, #840]	; 11ab0 <abort@plt+0x970>
   11764:	add	r0, pc, r0
   11768:	bl	12068 <abort@plt+0xf28>
   1176c:	mov	r0, sl
   11770:	bl	10f54 <nettle_rsa_public_key_clear@plt>
   11774:	mov	r0, r8
   11778:	bl	11014 <nettle_rsa_private_key_clear@plt>
   1177c:	cmp	r6, #0
   11780:	ble	117d0 <abort@plt+0x690>
   11784:	ldr	r3, [pc, #808]	; 11ab4 <abort@plt+0x974>
   11788:	mov	r1, #1
   1178c:	ldr	r0, [r5]
   11790:	ldr	r2, [r5, #16]
   11794:	ldr	r3, [r4, r3]
   11798:	ldr	r3, [r3]
   1179c:	bl	10fc0 <fwrite@plt>
   117a0:	ldr	r3, [r5, #16]
   117a4:	cmp	r0, r3
   117a8:	movcs	r6, #1
   117ac:	bcs	117d0 <abort@plt+0x690>
   117b0:	bl	11074 <__errno_location@plt>
   117b4:	mov	r6, #0
   117b8:	ldr	r0, [r0]
   117bc:	bl	10ffc <strerror@plt>
   117c0:	mov	r1, r0
   117c4:	ldr	r0, [pc, #748]	; 11ab8 <abort@plt+0x978>
   117c8:	add	r0, pc, r0
   117cc:	bl	12068 <abort@plt+0xf28>
   117d0:	ldr	r2, [sp, #164]	; 0xa4
   117d4:	mov	r0, r6
   117d8:	ldr	r3, [r7]
   117dc:	cmp	r2, r3
   117e0:	bne	11900 <abort@plt+0x7c0>
   117e4:	add	sp, sp, #168	; 0xa8
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117ec:	bl	11140 <abort@plt>
   117f0:	ldr	r6, [sp, #24]
   117f4:	movw	r3, #4112	; 0x1010
   117f8:	cmp	r6, r3
   117fc:	bne	11678 <abort@plt+0x538>
   11800:	mov	r0, sl
   11804:	bl	110c8 <nettle_asn1_der_decode_constructed_last@plt>
   11808:	cmp	r0, #2
   1180c:	bne	11678 <abort@plt+0x538>
   11810:	ldr	r3, [sp, #24]
   11814:	cmp	r3, r6
   11818:	bne	11678 <abort@plt+0x538>
   1181c:	add	r6, sp, #36	; 0x24
   11820:	mov	r0, sl
   11824:	mov	r1, r6
   11828:	bl	11050 <nettle_asn1_der_decode_constructed@plt>
   1182c:	cmp	r0, #1
   11830:	bne	11678 <abort@plt+0x538>
   11834:	ldr	r3, [sp, #48]	; 0x30
   11838:	cmp	r3, #6
   1183c:	bne	11678 <abort@plt+0x538>
   11840:	mov	r0, sl
   11844:	bl	110bc <nettle_asn1_der_iterator_next@plt>
   11848:	cmp	r0, #1
   1184c:	bne	11678 <abort@plt+0x538>
   11850:	ldr	r3, [sp, #24]
   11854:	cmp	r3, #3
   11858:	bne	11678 <abort@plt+0x538>
   1185c:	mov	r0, sl
   11860:	bl	11128 <nettle_asn1_der_decode_bitstring_last@plt>
   11864:	cmp	r0, #0
   11868:	beq	11678 <abort@plt+0x538>
   1186c:	ldr	r2, [sp, #52]	; 0x34
   11870:	cmp	r2, #7
   11874:	beq	11944 <abort@plt+0x804>
   11878:	cmp	r2, #9
   1187c:	beq	11904 <abort@plt+0x7c4>
   11880:	ldr	r0, [pc, #564]	; 11abc <abort@plt+0x97c>
   11884:	mvn	r6, #0
   11888:	add	r0, pc, r0
   1188c:	bl	12068 <abort@plt+0xf28>
   11890:	b	117d0 <abort@plt+0x690>
   11894:	mov	r0, r5
   11898:	bl	110e0 <nettle_buffer_reset@plt>
   1189c:	mov	r0, r5
   118a0:	mov	r1, #0
   118a4:	mov	r2, r8
   118a8:	mov	r3, sl
   118ac:	bl	11104 <nettle_dsa_keypair_to_sexp@plt>
   118b0:	mov	r6, r0
   118b4:	b	116d0 <abort@plt+0x590>
   118b8:	mov	r0, r5
   118bc:	bl	110e0 <nettle_buffer_reset@plt>
   118c0:	mov	r0, r5
   118c4:	mov	r1, #0
   118c8:	mov	r2, sl
   118cc:	mov	r3, r8
   118d0:	bl	10f6c <nettle_rsa_keypair_to_sexp@plt>
   118d4:	mov	r6, r0
   118d8:	b	1176c <abort@plt+0x62c>
   118dc:	mov	r0, r5
   118e0:	bl	110e0 <nettle_buffer_reset@plt>
   118e4:	mov	r1, #0
   118e8:	mov	r0, r5
   118ec:	mov	r2, r8
   118f0:	mov	r3, r1
   118f4:	bl	10f6c <nettle_rsa_keypair_to_sexp@plt>
   118f8:	mov	r6, r0
   118fc:	b	1171c <abort@plt+0x5dc>
   11900:	bl	10f9c <__stack_chk_fail@plt>
   11904:	ldr	r1, [pc, #436]	; 11ac0 <abort@plt+0x980>
   11908:	ldr	r0, [sp, #56]	; 0x38
   1190c:	add	r1, pc, r1
   11910:	add	r1, r1, #8
   11914:	bl	10f90 <memcmp@plt>
   11918:	cmp	r0, #0
   1191c:	bne	11880 <abort@plt+0x740>
   11920:	mov	r0, r6
   11924:	bl	110bc <nettle_asn1_der_iterator_next@plt>
   11928:	cmp	r0, #1
   1192c:	beq	11984 <abort@plt+0x844>
   11930:	ldr	r0, [pc, #396]	; 11ac4 <abort@plt+0x984>
   11934:	mov	r6, #0
   11938:	add	r0, pc, r0
   1193c:	bl	12068 <abort@plt+0xf28>
   11940:	b	117d0 <abort@plt+0x690>
   11944:	ldr	r1, [pc, #380]	; 11ac8 <abort@plt+0x988>
   11948:	mov	r2, #7
   1194c:	ldr	r0, [sp, #56]	; 0x38
   11950:	add	r1, pc, r1
   11954:	bl	10f90 <memcmp@plt>
   11958:	subs	r9, r0, #0
   1195c:	bne	11880 <abort@plt+0x740>
   11960:	mov	r0, r6
   11964:	bl	110bc <nettle_asn1_der_iterator_next@plt>
   11968:	cmp	r0, #2
   1196c:	beq	119dc <abort@plt+0x89c>
   11970:	ldr	r0, [pc, #340]	; 11acc <abort@plt+0x98c>
   11974:	mov	r6, #0
   11978:	add	r0, pc, r0
   1197c:	bl	12068 <abort@plt+0xf28>
   11980:	b	117d0 <abort@plt+0x690>
   11984:	ldr	r3, [sp, #48]	; 0x30
   11988:	cmp	r3, #5
   1198c:	bne	11930 <abort@plt+0x7f0>
   11990:	ldr	r8, [sp, #52]	; 0x34
   11994:	cmp	r8, #0
   11998:	bne	11930 <abort@plt+0x7f0>
   1199c:	mov	r0, r6
   119a0:	bl	110bc <nettle_asn1_der_iterator_next@plt>
   119a4:	cmp	r0, #3
   119a8:	bne	11930 <abort@plt+0x7f0>
   119ac:	add	r6, sp, #88	; 0x58
   119b0:	mov	r0, r6
   119b4:	bl	1111c <nettle_rsa_public_key_init@plt>
   119b8:	mov	r0, r6
   119bc:	mov	r1, r8
   119c0:	mov	r2, sl
   119c4:	bl	10fa8 <nettle_rsa_public_key_from_der_iterator@plt>
   119c8:	cmp	r0, #0
   119cc:	bne	11a1c <abort@plt+0x8dc>
   119d0:	mov	r0, r6
   119d4:	bl	10f54 <nettle_rsa_public_key_clear@plt>
   119d8:	b	11930 <abort@plt+0x7f0>
   119dc:	mov	r0, r6
   119e0:	bl	110c8 <nettle_asn1_der_decode_constructed_last@plt>
   119e4:	cmp	r0, #1
   119e8:	bne	11970 <abort@plt+0x830>
   119ec:	add	r8, sp, #88	; 0x58
   119f0:	mov	r0, r8
   119f4:	bl	110d4 <nettle_dsa_public_key_init@plt>
   119f8:	mov	r0, r8
   119fc:	mov	r1, r9
   11a00:	mov	r2, sl
   11a04:	bl	10f3c <nettle_dsa_params_from_der_iterator@plt>
   11a08:	cmp	r0, #0
   11a0c:	bne	11a50 <abort@plt+0x910>
   11a10:	mov	r0, r8
   11a14:	bl	11020 <nettle_dsa_public_key_clear@plt>
   11a18:	b	11970 <abort@plt+0x830>
   11a1c:	mov	r0, r5
   11a20:	bl	110e0 <nettle_buffer_reset@plt>
   11a24:	mov	r1, r8
   11a28:	mov	r3, r8
   11a2c:	mov	r2, r6
   11a30:	mov	r0, r5
   11a34:	bl	10f6c <nettle_rsa_keypair_to_sexp@plt>
   11a38:	mov	r8, r0
   11a3c:	mov	r0, r6
   11a40:	bl	10f54 <nettle_rsa_public_key_clear@plt>
   11a44:	cmp	r8, #0
   11a48:	bgt	11784 <abort@plt+0x644>
   11a4c:	b	11930 <abort@plt+0x7f0>
   11a50:	mov	r2, r6
   11a54:	mov	r0, r8
   11a58:	mov	r1, r9
   11a5c:	bl	110f8 <nettle_dsa_public_key_from_der_iterator@plt>
   11a60:	cmp	r0, #0
   11a64:	beq	11a10 <abort@plt+0x8d0>
   11a68:	mov	r0, r5
   11a6c:	bl	110e0 <nettle_buffer_reset@plt>
   11a70:	mov	r1, r9
   11a74:	mov	r2, r8
   11a78:	mov	r3, r9
   11a7c:	mov	r0, r5
   11a80:	bl	11104 <nettle_dsa_keypair_to_sexp@plt>
   11a84:	mov	r6, r0
   11a88:	mov	r0, r8
   11a8c:	bl	11020 <nettle_dsa_public_key_clear@plt>
   11a90:	cmp	r6, #0
   11a94:	bgt	11784 <abort@plt+0x644>
   11a98:	b	11970 <abort@plt+0x830>
   11a9c:	ldrdeq	r1, [r1], -r0
   11aa0:	strheq	r0, [r0], -ip
   11aa4:	andeq	r0, r0, ip, lsl ip
   11aa8:	andeq	r0, r0, r8, lsr ip
   11aac:			; <UNDEFINED> instruction: 0x00000bb0
   11ab0:	andeq	r0, r0, ip, ror fp
   11ab4:	ldrdeq	r0, [r0], -r4
   11ab8:	andeq	r0, r0, r8, asr fp
   11abc:	muleq	r0, r4, r9
   11ac0:	andeq	r0, r0, ip, lsl #17
   11ac4:	andeq	r0, r0, ip, lsr r9
   11ac8:	andeq	r0, r0, r8, asr #16
   11acc:	ldrdeq	r0, [r0], -r4
   11ad0:	ldr	ip, [pc, #1272]	; 11fd0 <abort@plt+0xe90>
   11ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ad8:	subs	r5, r2, #0
   11adc:	ldr	r2, [pc, #1264]	; 11fd4 <abort@plt+0xe94>
   11ae0:	add	ip, pc, ip
   11ae4:	mov	r6, r3
   11ae8:	sub	sp, sp, #76	; 0x4c
   11aec:	mov	r3, ip
   11af0:	mov	r8, r0
   11af4:	ldr	r2, [ip, r2]
   11af8:	mov	r9, r1
   11afc:	ldr	r3, [r2]
   11b00:	str	r2, [sp, #16]
   11b04:	str	r3, [sp, #68]	; 0x44
   11b08:	bne	11d30 <abort@plt+0xbf0>
   11b0c:	ldr	r0, [pc, #1220]	; 11fd8 <abort@plt+0xe98>
   11b10:	ldr	sl, [pc, #1220]	; 11fdc <abort@plt+0xe9c>
   11b14:	add	r0, pc, r0
   11b18:	ldr	r4, [pc, #1216]	; 11fe0 <abort@plt+0xea0>
   11b1c:	ldr	r1, [pc, #1216]	; 11fe4 <abort@plt+0xea4>
   11b20:	add	ip, r0, #56	; 0x38
   11b24:	add	sl, pc, sl
   11b28:	add	r4, pc, r4
   11b2c:	add	r1, pc, r1
   11b30:	mov	fp, ip
   11b34:	add	r2, r1, #76	; 0x4c
   11b38:	str	r0, [sp, #28]
   11b3c:	str	r1, [sp, #8]
   11b40:	str	r2, [sp, #36]	; 0x24
   11b44:	ldr	r3, [sp, #28]
   11b48:	mov	r0, r8
   11b4c:	add	r5, r3, #68	; 0x44
   11b50:	bl	110e0 <nettle_buffer_reset@plt>
   11b54:	mov	r0, r8
   11b58:	bl	110e0 <nettle_buffer_reset@plt>
   11b5c:	mov	r0, r8
   11b60:	mov	r1, r9
   11b64:	bl	114b4 <abort@plt+0x374>
   11b68:	cmp	r0, #1
   11b6c:	bne	11d60 <abort@plt+0xc20>
   11b70:	ldr	r3, [r8, #16]
   11b74:	ldr	r7, [r8]
   11b78:	cmp	r3, #0
   11b7c:	beq	11b54 <abort@plt+0xa14>
   11b80:	sub	r6, r3, #1
   11b84:	ldrb	r2, [r7, r6]
   11b88:	cmp	r2, #32
   11b8c:	bhi	11d58 <abort@plt+0xc18>
   11b90:	add	r2, sl, r2
   11b94:	ldrb	r2, [r2, #20]
   11b98:	cmp	r2, #0
   11b9c:	bne	11bb8 <abort@plt+0xa78>
   11ba0:	b	11d58 <abort@plt+0xc18>
   11ba4:	add	r3, r4, r3
   11ba8:	ldrb	r3, [r3, #20]
   11bac:	cmp	r3, #0
   11bb0:	beq	11bd0 <abort@plt+0xa90>
   11bb4:	mov	r6, r2
   11bb8:	cmp	r6, #0
   11bbc:	beq	11b54 <abort@plt+0xa14>
   11bc0:	sub	r2, r6, #1
   11bc4:	ldrb	r3, [r7, r2]
   11bc8:	cmp	r3, #32
   11bcc:	bls	11ba4 <abort@plt+0xa64>
   11bd0:	cmp	r6, #16
   11bd4:	bls	11b54 <abort@plt+0xa14>
   11bd8:	mov	r0, r7
   11bdc:	mov	r1, fp
   11be0:	mov	r2, #11
   11be4:	bl	10f90 <memcmp@plt>
   11be8:	cmp	r0, #0
   11bec:	bne	11b54 <abort@plt+0xa14>
   11bf0:	sub	r0, r6, #5
   11bf4:	mov	r1, r5
   11bf8:	add	r0, r7, r0
   11bfc:	mov	r2, #5
   11c00:	bl	10f90 <memcmp@plt>
   11c04:	cmp	r0, #0
   11c08:	bne	11b54 <abort@plt+0xa14>
   11c0c:	add	r7, r7, r6
   11c10:	mov	r2, #11
   11c14:	sub	r6, r6, #16
   11c18:	str	r2, [sp, #52]	; 0x34
   11c1c:	str	r6, [sp, #56]	; 0x38
   11c20:	mov	r3, r0
   11c24:	strb	r0, [r7, #-5]
   11c28:	ldr	r6, [pc, #952]	; 11fe8 <abort@plt+0xea8>
   11c2c:	ldr	r2, [r8, #16]
   11c30:	ldr	lr, [sp, #8]
   11c34:	add	r6, pc, r6
   11c38:	ldr	r0, [pc, #940]	; 11fec <abort@plt+0xeac>
   11c3c:	str	sl, [sp, #24]
   11c40:	mov	sl, r3
   11c44:	mov	r3, r4
   11c48:	mov	r4, r2
   11c4c:	mov	ip, r3
   11c50:	add	lr, lr, #68	; 0x44
   11c54:	add	r0, pc, r0
   11c58:	str	lr, [sp, #20]
   11c5c:	str	r0, [sp, #12]
   11c60:	str	r2, [sp, #60]	; 0x3c
   11c64:	mov	r0, r8
   11c68:	mov	r1, r9
   11c6c:	str	ip, [sp]
   11c70:	bl	114b4 <abort@plt+0x374>
   11c74:	ldr	ip, [sp]
   11c78:	cmp	r0, #1
   11c7c:	bne	11fb0 <abort@plt+0xe70>
   11c80:	ldr	r1, [r8]
   11c84:	ldr	r3, [r8, #16]
   11c88:	ldr	r2, [sp, #56]	; 0x38
   11c8c:	str	r1, [sp, #32]
   11c90:	subs	r1, r3, r4
   11c94:	ldr	r0, [sp, #52]	; 0x34
   11c98:	ldr	lr, [sp, #32]
   11c9c:	str	r2, [sp, #40]	; 0x28
   11ca0:	add	r7, lr, r4
   11ca4:	str	r0, [sp, #44]	; 0x2c
   11ca8:	beq	11d00 <abort@plt+0xbc0>
   11cac:	sub	r5, r1, #1
   11cb0:	ldrb	r2, [r7, r5]
   11cb4:	cmp	r2, #32
   11cb8:	bhi	11d8c <abort@plt+0xc4c>
   11cbc:	ldr	lr, [sp, #12]
   11cc0:	add	r2, lr, r2
   11cc4:	ldrb	r2, [r2, #20]
   11cc8:	cmp	r2, #0
   11ccc:	bne	11cf8 <abort@plt+0xbb8>
   11cd0:	b	11d8c <abort@plt+0xc4c>
   11cd4:	sub	r1, r5, #1
   11cd8:	ldrb	r2, [r7, r1]
   11cdc:	cmp	r2, #32
   11ce0:	bhi	11d90 <abort@plt+0xc50>
   11ce4:	add	r2, r6, r2
   11ce8:	ldrb	r2, [r2, #20]
   11cec:	cmp	r2, #0
   11cf0:	beq	11d90 <abort@plt+0xc50>
   11cf4:	mov	r5, r1
   11cf8:	cmp	r5, #0
   11cfc:	bne	11cd4 <abort@plt+0xb94>
   11d00:	mov	r4, r3
   11d04:	b	11c64 <abort@plt+0xb24>
   11d08:	mov	r0, r8
   11d0c:	mov	r1, #1
   11d10:	bl	10f78 <nettle_buffer_grow@plt>
   11d14:	cmp	r0, #0
   11d18:	beq	11ec0 <abort@plt+0xd80>
   11d1c:	ldr	r3, [r8, #16]
   11d20:	ldr	r2, [r8]
   11d24:	add	r1, r3, #1
   11d28:	str	r1, [r8, #16]
   11d2c:	strb	r4, [r2, r3]
   11d30:	mov	r0, r9
   11d34:	bl	10f84 <_IO_getc@plt>
   11d38:	cmn	r0, #1
   11d3c:	mov	r4, r0
   11d40:	beq	11e94 <abort@plt+0xd54>
   11d44:	ldr	r3, [r8, #16]
   11d48:	ldr	r2, [r8, #4]
   11d4c:	cmp	r3, r2
   11d50:	bcc	11d20 <abort@plt+0xbe0>
   11d54:	b	11d08 <abort@plt+0xbc8>
   11d58:	mov	r6, r3
   11d5c:	b	11bd0 <abort@plt+0xa90>
   11d60:	cmn	r0, #1
   11d64:	movne	fp, #0
   11d68:	moveq	fp, #1
   11d6c:	ldr	r1, [sp, #16]
   11d70:	mov	r0, fp
   11d74:	ldr	r2, [sp, #68]	; 0x44
   11d78:	ldr	r3, [r1]
   11d7c:	cmp	r2, r3
   11d80:	bne	11fcc <abort@plt+0xe8c>
   11d84:	add	sp, sp, #76	; 0x4c
   11d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d8c:	mov	r5, r1
   11d90:	cmp	r5, #14
   11d94:	bls	11d00 <abort@plt+0xbc0>
   11d98:	mov	r0, r7
   11d9c:	ldr	r1, [sp, #36]	; 0x24
   11da0:	mov	r2, #9
   11da4:	str	r3, [sp, #4]
   11da8:	str	ip, [sp]
   11dac:	bl	10f90 <memcmp@plt>
   11db0:	ldr	r3, [sp, #4]
   11db4:	ldr	ip, [sp]
   11db8:	cmp	r0, #0
   11dbc:	bne	11d00 <abort@plt+0xbc0>
   11dc0:	sub	r0, r5, #5
   11dc4:	ldr	r1, [sp, #20]
   11dc8:	add	r0, r7, r0
   11dcc:	mov	r2, #5
   11dd0:	bl	10f90 <memcmp@plt>
   11dd4:	ldr	r3, [sp, #4]
   11dd8:	ldr	ip, [sp]
   11ddc:	cmp	r0, #0
   11de0:	bne	11d00 <abort@plt+0xbc0>
   11de4:	ldr	r0, [sp, #40]	; 0x28
   11de8:	mov	r2, ip
   11dec:	mov	ip, r4
   11df0:	mov	r4, r2
   11df4:	add	r2, r0, #14
   11df8:	mov	r3, sl
   11dfc:	cmp	r5, r2
   11e00:	ldr	sl, [sp, #24]
   11e04:	bne	11fb8 <abort@plt+0xe78>
   11e08:	ldr	r2, [sp, #32]
   11e0c:	add	r0, r7, #9
   11e10:	ldr	lr, [sp, #44]	; 0x2c
   11e14:	str	r3, [sp, #4]
   11e18:	add	r1, r2, lr
   11e1c:	ldr	r2, [sp, #40]	; 0x28
   11e20:	str	ip, [sp]
   11e24:	bl	10f90 <memcmp@plt>
   11e28:	ldr	r3, [sp, #4]
   11e2c:	ldr	ip, [sp]
   11e30:	cmp	r0, #0
   11e34:	bne	11fb8 <abort@plt+0xe78>
   11e38:	ldr	r1, [sp, #60]	; 0x3c
   11e3c:	add	r2, sp, #72	; 0x48
   11e40:	mov	r0, r8
   11e44:	rsb	r3, r1, ip
   11e48:	str	r3, [r2, #-8]!
   11e4c:	bl	11564 <abort@plt+0x424>
   11e50:	cmp	r0, #0
   11e54:	beq	11f5c <abort@plt+0xe1c>
   11e58:	ldr	r2, [sp, #56]	; 0x38
   11e5c:	ldr	r6, [r8]
   11e60:	ldr	r5, [sp, #52]	; 0x34
   11e64:	cmp	r2, #14
   11e68:	add	r5, r6, r5
   11e6c:	beq	11f64 <abort@plt+0xe24>
   11e70:	cmp	r2, #15
   11e74:	beq	11f04 <abort@plt+0xdc4>
   11e78:	cmp	r2, #10
   11e7c:	beq	11f88 <abort@plt+0xe48>
   11e80:	ldr	r0, [pc, #360]	; 11ff0 <abort@plt+0xeb0>
   11e84:	mov	r1, r5
   11e88:	add	r0, pc, r0
   11e8c:	bl	12068 <abort@plt+0xf28>
   11e90:	b	11b44 <abort@plt+0xa04>
   11e94:	mov	r0, r9
   11e98:	bl	10f60 <ferror@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11ec0 <abort@plt+0xd80>
   11ea4:	bl	11074 <__errno_location@plt>
   11ea8:	ldr	r0, [r0]
   11eac:	bl	10ffc <strerror@plt>
   11eb0:	mov	r1, r0
   11eb4:	ldr	r0, [pc, #312]	; 11ff4 <abort@plt+0xeb4>
   11eb8:	add	r0, pc, r0
   11ebc:	bl	12068 <abort@plt+0xf28>
   11ec0:	cmp	r6, #0
   11ec4:	beq	11ee0 <abort@plt+0xda0>
   11ec8:	mov	r0, r8
   11ecc:	mov	r1, #0
   11ed0:	add	r2, r8, #16
   11ed4:	bl	11564 <abort@plt+0x424>
   11ed8:	subs	fp, r0, #0
   11edc:	beq	11d6c <abort@plt+0xc2c>
   11ee0:	ldr	r3, [r8]
   11ee4:	mov	r0, r8
   11ee8:	mov	r1, r5
   11eec:	ldr	r2, [r8, #16]
   11ef0:	bl	11610 <abort@plt+0x4d0>
   11ef4:	subs	r3, r0, #1
   11ef8:	rsbs	fp, r3, #0
   11efc:	adcs	fp, fp, r3
   11f00:	b	11d6c <abort@plt+0xc2c>
   11f04:	ldr	r1, [pc, #236]	; 11ff8 <abort@plt+0xeb8>
   11f08:	mov	r0, r5
   11f0c:	mov	r2, #15
   11f10:	add	r1, pc, r1
   11f14:	bl	10f90 <memcmp@plt>
   11f18:	cmp	r0, #0
   11f1c:	beq	11fa8 <abort@plt+0xe68>
   11f20:	ldr	r1, [pc, #212]	; 11ffc <abort@plt+0xebc>
   11f24:	mov	r0, r5
   11f28:	mov	r2, #15
   11f2c:	add	r1, pc, r1
   11f30:	bl	10f90 <memcmp@plt>
   11f34:	cmp	r0, #0
   11f38:	bne	11e80 <abort@plt+0xd40>
   11f3c:	movw	r1, #514	; 0x202
   11f40:	ldr	r3, [sp, #60]	; 0x3c
   11f44:	mov	r0, r8
   11f48:	ldr	r2, [sp, #64]	; 0x40
   11f4c:	add	r3, r6, r3
   11f50:	bl	11610 <abort@plt+0x4d0>
   11f54:	cmp	r0, #1
   11f58:	beq	11b44 <abort@plt+0xa04>
   11f5c:	mov	fp, #0
   11f60:	b	11d6c <abort@plt+0xc2c>
   11f64:	ldr	r1, [pc, #148]	; 12000 <abort@plt+0xec0>
   11f68:	mov	r0, r5
   11f6c:	mov	r2, #14
   11f70:	add	r1, pc, r1
   11f74:	bl	10f90 <memcmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	bne	11f04 <abort@plt+0xdc4>
   11f80:	movw	r1, #513	; 0x201
   11f84:	b	11f40 <abort@plt+0xe00>
   11f88:	ldr	r1, [pc, #116]	; 12004 <abort@plt+0xec4>
   11f8c:	mov	r0, r5
   11f90:	add	r1, pc, r1
   11f94:	bl	10f90 <memcmp@plt>
   11f98:	cmp	r0, #0
   11f9c:	bne	11f64 <abort@plt+0xe24>
   11fa0:	movw	r1, #515	; 0x203
   11fa4:	b	11f40 <abort@plt+0xe00>
   11fa8:	mov	r1, #512	; 0x200
   11fac:	b	11f40 <abort@plt+0xe00>
   11fb0:	mov	fp, sl
   11fb4:	b	11d6c <abort@plt+0xc2c>
   11fb8:	ldr	r0, [pc, #72]	; 12008 <abort@plt+0xec8>
   11fbc:	mov	fp, r3
   11fc0:	add	r0, pc, r0
   11fc4:	bl	12068 <abort@plt+0xf28>
   11fc8:	b	11d6c <abort@plt+0xc2c>
   11fcc:	bl	10f9c <__stack_chk_fail@plt>
   11fd0:	andeq	r1, r1, r8, lsl r5
   11fd4:	strheq	r0, [r0], -ip
   11fd8:	andeq	r0, r0, r4, lsl #13
   11fdc:	andeq	r0, r0, r4, ror r6
   11fe0:	andeq	r0, r0, r0, ror r6
   11fe4:	andeq	r0, r0, ip, ror #12
   11fe8:	andeq	r0, r0, r4, ror #10
   11fec:	andeq	r0, r0, r4, asr #10
   11ff0:	andeq	r0, r0, r0, lsl #10
   11ff4:	andeq	r0, r0, r8, lsr r3
   11ff8:	andeq	r0, r0, r4, lsr r4
   11ffc:	andeq	r0, r0, r8, lsr #8
   12000:	andeq	r0, r0, r4, asr #7
   12004:	andeq	r0, r0, r8, lsr #7
   12008:	andeq	r0, r0, r4, lsr #7
   1200c:	push	{r0, r1, r2, r3}
   12010:	mov	r1, #1
   12014:	ldr	r0, [pc, #64]	; 1205c <abort@plt+0xf1c>
   12018:	push	{r4, lr}
   1201c:	add	r0, pc, r0
   12020:	ldr	r4, [pc, #56]	; 12060 <abort@plt+0xf20>
   12024:	sub	sp, sp, #8
   12028:	add	ip, sp, #20
   1202c:	ldr	lr, [pc, #48]	; 12064 <abort@plt+0xf24>
   12030:	ldr	r2, [sp, #16]
   12034:	ldr	r4, [r0, r4]
   12038:	mov	r3, ip
   1203c:	str	ip, [sp]
   12040:	ldr	ip, [r4]
   12044:	str	ip, [sp, #4]
   12048:	ldr	r0, [r0, lr]
   1204c:	ldr	r0, [r0]
   12050:	bl	11008 <__vfprintf_chk@plt>
   12054:	mov	r0, #1
   12058:	bl	11044 <exit@plt>
   1205c:	ldrdeq	r0, [r1], -ip
   12060:	strheq	r0, [r0], -ip
   12064:	andeq	r0, r0, r4, asr #1
   12068:	push	{r0, r1, r2, r3}
   1206c:	mov	r1, #1
   12070:	ldr	r0, [pc, #92]	; 120d4 <abort@plt+0xf94>
   12074:	push	{r4, lr}
   12078:	add	r0, pc, r0
   1207c:	ldr	r4, [pc, #84]	; 120d8 <abort@plt+0xf98>
   12080:	sub	sp, sp, #8
   12084:	add	ip, sp, #20
   12088:	ldr	lr, [pc, #76]	; 120dc <abort@plt+0xf9c>
   1208c:	ldr	r2, [sp, #16]
   12090:	ldr	r4, [r0, r4]
   12094:	mov	r3, ip
   12098:	str	ip, [sp]
   1209c:	ldr	ip, [r4]
   120a0:	str	ip, [sp, #4]
   120a4:	ldr	r0, [r0, lr]
   120a8:	ldr	r0, [r0]
   120ac:	bl	11008 <__vfprintf_chk@plt>
   120b0:	ldr	r2, [sp, #4]
   120b4:	ldr	r3, [r4]
   120b8:	cmp	r2, r3
   120bc:	bne	120d0 <abort@plt+0xf90>
   120c0:	add	sp, sp, #8
   120c4:	pop	{r4, lr}
   120c8:	add	sp, sp, #16
   120cc:	bx	lr
   120d0:	bl	10f9c <__stack_chk_fail@plt>
   120d4:	andeq	r0, r1, r0, lsl #31
   120d8:	strheq	r0, [r0], -ip
   120dc:	andeq	r0, r0, r4, asr #1
   120e0:	push	{r3, lr}
   120e4:	bl	10fe4 <malloc@plt>
   120e8:	ldr	r3, [pc, #44]	; 1211c <abort@plt+0xfdc>
   120ec:	add	r3, pc, r3
   120f0:	cmp	r0, #0
   120f4:	popne	{r3, pc}
   120f8:	ldr	ip, [pc, #32]	; 12120 <abort@plt+0xfe0>
   120fc:	mov	r1, #1
   12100:	ldr	r0, [pc, #28]	; 12124 <abort@plt+0xfe4>
   12104:	mov	r2, #26
   12108:	ldr	r3, [r3, ip]
   1210c:	add	r0, pc, r0
   12110:	ldr	r3, [r3]
   12114:	bl	10fc0 <fwrite@plt>
   12118:	bl	11140 <abort@plt>
   1211c:	andeq	r0, r1, ip, lsl #30
   12120:	andeq	r0, r0, r4, asr #1
   12124:	ldrdeq	r0, [r0], -ip
   12128:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1212c:	mov	r7, r0
   12130:	ldr	r6, [pc, #76]	; 12184 <abort@plt+0x1044>
   12134:	mov	r8, r1
   12138:	ldr	r5, [pc, #72]	; 12188 <abort@plt+0x1048>
   1213c:	mov	r9, r2
   12140:	add	r6, pc, r6
   12144:	bl	10f1c <_init@@Base>
   12148:	add	r5, pc, r5
   1214c:	rsb	r6, r5, r6
   12150:	asrs	r6, r6, #2
   12154:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   12158:	sub	r5, r5, #4
   1215c:	mov	r4, #0
   12160:	add	r4, r4, #1
   12164:	ldr	r3, [r5, #4]!
   12168:	mov	r0, r7
   1216c:	mov	r1, r8
   12170:	mov	r2, r9
   12174:	blx	r3
   12178:	cmp	r4, r6
   1217c:	bne	12160 <abort@plt+0x1020>
   12180:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12184:	andeq	r0, r1, r0, lsr #26
   12188:	andeq	r0, r1, r4, lsl sp
   1218c:	bx	lr

Disassembly of section .fini:

00012190 <_fini@@Base>:
   12190:	push	{r3, lr}
   12194:	pop	{r3, pc}
