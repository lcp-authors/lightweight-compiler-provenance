
centos-preinstalled/ldns-resolver:     file format elf32-littlearm


Disassembly of section .init:

00010798 <_init@@Base>:
   10798:	push	{r3, lr}
   1079c:	bl	10a00 <__errno_location@plt+0x1a0>
   107a0:	pop	{r3, pc}

Disassembly of section .plt:

000107a4 <strerror@plt-0x14>:
   107a4:	push	{lr}		; (str lr, [sp, #-4]!)
   107a8:	ldr	lr, [pc, #4]	; 107b4 <_init@@Base+0x1c>
   107ac:	add	lr, pc, lr
   107b0:	ldr	pc, [lr, #8]!
   107b4:	andeq	r0, r1, ip, asr #16

000107b8 <strerror@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2124]!	; 0x84c

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #16, 20	; 0x10000
   107cc:	ldr	pc, [ip, #2116]!	; 0x844

000107d0 <ldns_resolver_print@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #16, 20	; 0x10000
   107d8:	ldr	pc, [ip, #2108]!	; 0x83c

000107dc <__libc_start_main@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #16, 20	; 0x10000
   107e4:	ldr	pc, [ip, #2100]!	; 0x834

000107e8 <__gmon_start__@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #16, 20	; 0x10000
   107f0:	ldr	pc, [ip, #2092]!	; 0x82c

000107f4 <fclose@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #16, 20	; 0x10000
   107fc:	ldr	pc, [ip, #2084]!	; 0x824

00010800 <__printf_chk@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #16, 20	; 0x10000
   10808:	ldr	pc, [ip, #2076]!	; 0x81c

0001080c <fopen@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #16, 20	; 0x10000
   10814:	ldr	pc, [ip, #2068]!	; 0x814

00010818 <ldns_resolver_new_frm_fp_l@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #16, 20	; 0x10000
   10820:	ldr	pc, [ip, #2060]!	; 0x80c

00010824 <ldns_resolver_deep_free@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #16, 20	; 0x10000
   1082c:	ldr	pc, [ip, #2052]!	; 0x804

00010830 <__stack_chk_fail@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #16, 20	; 0x10000
   10838:	ldr	pc, [ip, #2044]!	; 0x7fc

0001083c <ldns_get_errorstr_by_id@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #16, 20	; 0x10000
   10844:	ldr	pc, [ip, #2036]!	; 0x7f4

00010848 <puts@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #16, 20	; 0x10000
   10850:	ldr	pc, [ip, #2028]!	; 0x7ec

00010854 <exit@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #16, 20	; 0x10000
   1085c:	ldr	pc, [ip, #2020]!	; 0x7e4

00010860 <__errno_location@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #16, 20	; 0x10000
   10868:	ldr	pc, [ip, #2012]!	; 0x7dc

Disassembly of section .text:

0001086c <.text>:
   1086c:	push	{r4, r5, r6, lr}
   10870:	movw	r4, #4176	; 0x1050
   10874:	movt	r4, #2
   10878:	sub	sp, sp, #16
   1087c:	cmp	r0, #2
   10880:	mov	r2, #1
   10884:	ldr	r3, [r4]
   10888:	mov	r5, r1
   1088c:	str	r2, [sp, #8]
   10890:	str	r3, [sp, #12]
   10894:	bne	1094c <__errno_location@plt+0xec>
   10898:	ldr	r0, [r1, #4]
   1089c:	ldrb	r3, [r0]
   108a0:	cmp	r3, #45	; 0x2d
   108a4:	beq	10934 <__errno_location@plt+0xd4>
   108a8:	movw	r1, #3020	; 0xbcc
   108ac:	movt	r1, #1
   108b0:	bl	1080c <fopen@plt>
   108b4:	subs	r6, r0, #0
   108b8:	beq	10994 <__errno_location@plt+0x134>
   108bc:	ldr	r2, [r5, #4]
   108c0:	movw	r1, #3048	; 0xbe8
   108c4:	mov	r0, #1
   108c8:	movt	r1, #1
   108cc:	bl	10800 <__printf_chk@plt>
   108d0:	add	r0, sp, #4
   108d4:	mov	r1, r6
   108d8:	add	r2, sp, #8
   108dc:	bl	10818 <ldns_resolver_new_frm_fp_l@plt>
   108e0:	subs	r5, r0, #0
   108e4:	bne	10970 <__errno_location@plt+0x110>
   108e8:	movw	r0, #3096	; 0xc18
   108ec:	movt	r0, #1
   108f0:	bl	10848 <puts@plt>
   108f4:	movw	r3, #4180	; 0x1054
   108f8:	movt	r3, #2
   108fc:	ldr	r1, [sp, #4]
   10900:	ldr	r0, [r3]
   10904:	bl	107d0 <ldns_resolver_print@plt>
   10908:	ldr	r0, [sp, #4]
   1090c:	bl	10824 <ldns_resolver_deep_free@plt>
   10910:	mov	r0, r6
   10914:	bl	107f4 <fclose@plt>
   10918:	ldr	r2, [sp, #12]
   1091c:	ldr	r3, [r4]
   10920:	mov	r0, r5
   10924:	cmp	r2, r3
   10928:	bne	1096c <__errno_location@plt+0x10c>
   1092c:	add	sp, sp, #16
   10930:	pop	{r4, r5, r6, pc}
   10934:	ldrb	r3, [r0, #1]
   10938:	cmp	r3, #104	; 0x68
   1093c:	bne	108a8 <__errno_location@plt+0x48>
   10940:	ldrb	r3, [r0, #2]
   10944:	cmp	r3, #0
   10948:	bne	108a8 <__errno_location@plt+0x48>
   1094c:	movw	r0, #2928	; 0xb70
   10950:	movt	r0, #1
   10954:	bl	10848 <puts@plt>
   10958:	movw	r0, #2956	; 0xb8c
   1095c:	movt	r0, #1
   10960:	bl	10848 <puts@plt>
   10964:	mov	r0, #1
   10968:	bl	10854 <exit@plt>
   1096c:	bl	10830 <__stack_chk_fail@plt>
   10970:	bl	1083c <ldns_get_errorstr_by_id@plt>
   10974:	movw	r1, #3072	; 0xc00
   10978:	ldr	r3, [sp, #8]
   1097c:	movt	r1, #1
   10980:	mov	r2, r0
   10984:	mov	r0, #1
   10988:	bl	10800 <__printf_chk@plt>
   1098c:	mov	r0, #1
   10990:	bl	10854 <exit@plt>
   10994:	bl	10860 <__errno_location@plt>
   10998:	ldr	r4, [r5, #4]
   1099c:	ldr	r0, [r0]
   109a0:	bl	107b8 <strerror@plt>
   109a4:	mov	r2, r4
   109a8:	movw	r1, #3024	; 0xbd0
   109ac:	movt	r1, #1
   109b0:	mov	r3, r0
   109b4:	mov	r0, #1
   109b8:	bl	10800 <__printf_chk@plt>
   109bc:	mov	r0, #1
   109c0:	bl	10854 <exit@plt>
   109c4:	mov	fp, #0
   109c8:	mov	lr, #0
   109cc:	pop	{r1}		; (ldr r1, [sp], #4)
   109d0:	mov	r2, sp
   109d4:	push	{r2}		; (str r2, [sp, #-4]!)
   109d8:	push	{r0}		; (str r0, [sp, #-4]!)
   109dc:	ldr	ip, [pc, #16]	; 109f4 <__errno_location@plt+0x194>
   109e0:	push	{ip}		; (str ip, [sp, #-4]!)
   109e4:	ldr	r0, [pc, #12]	; 109f8 <__errno_location@plt+0x198>
   109e8:	ldr	r3, [pc, #12]	; 109fc <__errno_location@plt+0x19c>
   109ec:	bl	107dc <__libc_start_main@plt>
   109f0:	bl	107c4 <abort@plt>
   109f4:	andeq	r0, r1, ip, asr fp
   109f8:	andeq	r0, r1, ip, ror #16
   109fc:	strdeq	r0, [r1], -r8
   10a00:	ldr	r3, [pc, #20]	; 10a1c <__errno_location@plt+0x1bc>
   10a04:	ldr	r2, [pc, #20]	; 10a20 <__errno_location@plt+0x1c0>
   10a08:	add	r3, pc, r3
   10a0c:	ldr	r2, [r3, r2]
   10a10:	cmp	r2, #0
   10a14:	bxeq	lr
   10a18:	b	107e8 <__gmon_start__@plt>
   10a1c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a20:	andeq	r0, r0, r8, asr #32
   10a24:	push	{r3, lr}
   10a28:	movw	r0, #4176	; 0x1050
   10a2c:	ldr	r3, [pc, #36]	; 10a58 <__errno_location@plt+0x1f8>
   10a30:	movt	r0, #2
   10a34:	rsb	r3, r0, r3
   10a38:	cmp	r3, #6
   10a3c:	popls	{r3, pc}
   10a40:	movw	r3, #0
   10a44:	movt	r3, #0
   10a48:	cmp	r3, #0
   10a4c:	popeq	{r3, pc}
   10a50:	blx	r3
   10a54:	pop	{r3, pc}
   10a58:	andeq	r1, r2, r3, asr r0
   10a5c:	push	{r3, lr}
   10a60:	movw	r0, #4176	; 0x1050
   10a64:	movw	r3, #4176	; 0x1050
   10a68:	movt	r0, #2
   10a6c:	movt	r3, #2
   10a70:	rsb	r3, r0, r3
   10a74:	asr	r3, r3, #2
   10a78:	add	r3, r3, r3, lsr #31
   10a7c:	asrs	r1, r3, #1
   10a80:	popeq	{r3, pc}
   10a84:	movw	r2, #0
   10a88:	movt	r2, #0
   10a8c:	cmp	r2, #0
   10a90:	popeq	{r3, pc}
   10a94:	blx	r2
   10a98:	pop	{r3, pc}
   10a9c:	push	{r4, lr}
   10aa0:	movw	r4, #4184	; 0x1058
   10aa4:	movt	r4, #2
   10aa8:	ldrb	r3, [r4]
   10aac:	cmp	r3, #0
   10ab0:	popne	{r4, pc}
   10ab4:	bl	10a24 <__errno_location@plt+0x1c4>
   10ab8:	mov	r3, #1
   10abc:	strb	r3, [r4]
   10ac0:	pop	{r4, pc}
   10ac4:	movw	r0, #3828	; 0xef4
   10ac8:	movt	r0, #2
   10acc:	push	{r3, lr}
   10ad0:	ldr	r3, [r0]
   10ad4:	cmp	r3, #0
   10ad8:	beq	10af0 <__errno_location@plt+0x290>
   10adc:	movw	r3, #0
   10ae0:	movt	r3, #0
   10ae4:	cmp	r3, #0
   10ae8:	beq	10af0 <__errno_location@plt+0x290>
   10aec:	blx	r3
   10af0:	pop	{r3, lr}
   10af4:	b	10a5c <__errno_location@plt+0x1fc>
   10af8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10afc:	mov	r7, r0
   10b00:	ldr	r6, [pc, #76]	; 10b54 <__errno_location@plt+0x2f4>
   10b04:	mov	r8, r1
   10b08:	ldr	r5, [pc, #72]	; 10b58 <__errno_location@plt+0x2f8>
   10b0c:	mov	r9, r2
   10b10:	add	r6, pc, r6
   10b14:	bl	10798 <_init@@Base>
   10b18:	add	r5, pc, r5
   10b1c:	rsb	r6, r5, r6
   10b20:	asrs	r6, r6, #2
   10b24:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10b28:	sub	r5, r5, #4
   10b2c:	mov	r4, #0
   10b30:	add	r4, r4, #1
   10b34:	ldr	r3, [r5, #4]!
   10b38:	mov	r0, r7
   10b3c:	mov	r1, r8
   10b40:	mov	r2, r9
   10b44:	blx	r3
   10b48:	cmp	r4, r6
   10b4c:	bne	10b30 <__errno_location@plt+0x2d0>
   10b50:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10b54:	ldrdeq	r0, [r1], -r8
   10b58:	andeq	r0, r1, ip, asr #7
   10b5c:	bx	lr

Disassembly of section .fini:

00010b60 <_fini@@Base>:
   10b60:	push	{r3, lr}
   10b64:	pop	{r3, pc}
