
centos-preinstalled/fit_info:     file format elf32-littlearm


Disassembly of section .init:

00012048 <_init@@Base>:
   12048:	push	{r3, lr}
   1204c:	bl	12a44 <__printf_chk@plt+0x2d4>
   12050:	pop	{r3, pc}

Disassembly of section .plt:

00012054 <ERR_error_string@plt-0x14>:
   12054:	push	{lr}		; (str lr, [sp, #-4]!)
   12058:	ldr	lr, [pc, #4]	; 12064 <_init@@Base+0x1c>
   1205c:	add	lr, pc, lr
   12060:	ldr	pc, [lr, #8]!
   12064:	muleq	r3, ip, pc	; <UNPREDICTABLE>

00012068 <ERR_error_string@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #60, 20	; 0x3c000
   12070:	ldr	pc, [ip, #3996]!	; 0xf9c

00012074 <fscanf@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #60, 20	; 0x3c000
   1207c:	ldr	pc, [ip, #3988]!	; 0xf94

00012080 <EVP_DigestInit@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #60, 20	; 0x3c000
   12088:	ldr	pc, [ip, #3980]!	; 0xf8c

0001208c <ftruncate@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #60, 20	; 0x3c000
   12094:	ldr	pc, [ip, #3972]!	; 0xf84

00012098 <ENGINE_load_private_key@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #60, 20	; 0x3c000
   120a0:	ldr	pc, [ip, #3964]!	; 0xf7c

000120a4 <popen@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #60, 20	; 0x3c000
   120ac:	ldr	pc, [ip, #3956]!	; 0xf74

000120b0 <EVP_PKEY_free@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #60, 20	; 0x3c000
   120b8:	ldr	pc, [ip, #3948]!	; 0xf6c

000120bc <PEM_read_X509@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #60, 20	; 0x3c000
   120c4:	ldr	pc, [ip, #3940]!	; 0xf64

000120c8 <EVP_CipherInit@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #60, 20	; 0x3c000
   120d0:	ldr	pc, [ip, #3932]!	; 0xf5c

000120d4 <OPENSSL_add_all_algorithms_noconf@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #60, 20	; 0x3c000
   120dc:	ldr	pc, [ip, #3924]!	; 0xf54

000120e0 <strcasecmp@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #60, 20	; 0x3c000
   120e8:	ldr	pc, [ip, #3916]!	; 0xf4c

000120ec <strnlen@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #60, 20	; 0x3c000
   120f4:	ldr	pc, [ip, #3908]!	; 0xf44

000120f8 <EVP_CipherUpdate@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #60, 20	; 0x3c000
   12100:	ldr	pc, [ip, #3900]!	; 0xf3c

00012104 <ENGINE_finish@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #60, 20	; 0x3c000
   1210c:	ldr	pc, [ip, #3892]!	; 0xf34

00012110 <ENGINE_load_public_key@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #60, 20	; 0x3c000
   12118:	ldr	pc, [ip, #3884]!	; 0xf2c

0001211c <strtol@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #60, 20	; 0x3c000
   12124:	ldr	pc, [ip, #3876]!	; 0xf24

00012128 <free@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #60, 20	; 0x3c000
   12130:	ldr	pc, [ip, #3868]!	; 0xf1c

00012134 <__getdelim@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #60, 20	; 0x3c000
   1213c:	ldr	pc, [ip, #3860]!	; 0xf14

00012140 <SSL_load_error_strings@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #60, 20	; 0x3c000
   12148:	ldr	pc, [ip, #3852]!	; 0xf0c

0001214c <EVP_aes_128_cbc@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #60, 20	; 0x3c000
   12154:	ldr	pc, [ip, #3844]!	; 0xf04

00012158 <fseek@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #60, 20	; 0x3c000
   12160:	ldr	pc, [ip, #3836]!	; 0xefc

00012164 <BN_dup@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #60, 20	; 0x3c000
   1216c:	ldr	pc, [ip, #3828]!	; 0xef4

00012170 <ENGINE_get_id@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #60, 20	; 0x3c000
   12178:	ldr	pc, [ip, #3820]!	; 0xeec

0001217c <strncmp@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #60, 20	; 0x3c000
   12184:	ldr	pc, [ip, #3812]!	; 0xee4

00012188 <__open_2@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #60, 20	; 0x3c000
   12190:	ldr	pc, [ip, #3804]!	; 0xedc

00012194 <EVP_PKEY_CTX_ctrl@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #60, 20	; 0x3c000
   1219c:	ldr	pc, [ip, #3796]!	; 0xed4

000121a0 <ENGINE_free@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #60, 20	; 0x3c000
   121a8:	ldr	pc, [ip, #3788]!	; 0xecc

000121ac <fgetc@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #60, 20	; 0x3c000
   121b4:	ldr	pc, [ip, #3780]!	; 0xec4

000121b8 <EVP_PKEY_CTX_new@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #60, 20	; 0x3c000
   121c0:	ldr	pc, [ip, #3772]!	; 0xebc

000121c4 <EVP_PKEY_size@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #60, 20	; 0x3c000
   121cc:	ldr	pc, [ip, #3764]!	; 0xeb4

000121d0 <ERR_remove_thread_state@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #60, 20	; 0x3c000
   121d8:	ldr	pc, [ip, #3756]!	; 0xeac

000121dc <OpenSSL_add_all_digests@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #60, 20	; 0x3c000
   121e4:	ldr	pc, [ip, #3748]!	; 0xea4

000121e8 <PEM_read_RSAPrivateKey@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #60, 20	; 0x3c000
   121f0:	ldr	pc, [ip, #3740]!	; 0xe9c

000121f4 <exit@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #60, 20	; 0x3c000
   121fc:	ldr	pc, [ip, #3732]!	; 0xe94

00012200 <strerror@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #60, 20	; 0x3c000
   12208:	ldr	pc, [ip, #3724]!	; 0xe8c

0001220c <EVP_sha1@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #60, 20	; 0x3c000
   12214:	ldr	pc, [ip, #3716]!	; 0xe84

00012218 <EVP_DigestSignFinal@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #60, 20	; 0x3c000
   12220:	ldr	pc, [ip, #3708]!	; 0xe7c

00012224 <__strtok_r@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #60, 20	; 0x3c000
   1222c:	ldr	pc, [ip, #3700]!	; 0xe74

00012230 <__vsnprintf_chk@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #60, 20	; 0x3c000
   12238:	ldr	pc, [ip, #3692]!	; 0xe6c

0001223c <ENGINE_init@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #60, 20	; 0x3c000
   12244:	ldr	pc, [ip, #3684]!	; 0xe64

00012248 <BN_free@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #60, 20	; 0x3c000
   12250:	ldr	pc, [ip, #3676]!	; 0xe5c

00012254 <ENGINE_cleanup@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #60, 20	; 0x3c000
   1225c:	ldr	pc, [ip, #3668]!	; 0xe54

00012260 <feof@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #60, 20	; 0x3c000
   12268:	ldr	pc, [ip, #3660]!	; 0xe4c

0001226c <puts@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #60, 20	; 0x3c000
   12274:	ldr	pc, [ip, #3652]!	; 0xe44

00012278 <strtok@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #60, 20	; 0x3c000
   12280:	ldr	pc, [ip, #3644]!	; 0xe3c

00012284 <perror@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #60, 20	; 0x3c000
   1228c:	ldr	pc, [ip, #3636]!	; 0xe34

00012290 <strtoll@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #60, 20	; 0x3c000
   12298:	ldr	pc, [ip, #3628]!	; 0xe2c

0001229c <EVP_PKEY_get1_RSA@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #60, 20	; 0x3c000
   122a4:	ldr	pc, [ip, #3620]!	; 0xe24

000122a8 <EVP_sha256@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #60, 20	; 0x3c000
   122b0:	ldr	pc, [ip, #3612]!	; 0xe1c

000122b4 <__fprintf_chk@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #60, 20	; 0x3c000
   122bc:	ldr	pc, [ip, #3604]!	; 0xe14

000122c0 <CRYPTO_malloc@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #60, 20	; 0x3c000
   122c8:	ldr	pc, [ip, #3596]!	; 0xe0c

000122cc <strtoul@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #60, 20	; 0x3c000
   122d4:	ldr	pc, [ip, #3588]!	; 0xe04

000122d8 <putchar@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #60, 20	; 0x3c000
   122e0:	ldr	pc, [ip, #3580]!	; 0xdfc

000122e4 <memset@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #60, 20	; 0x3c000
   122ec:	ldr	pc, [ip, #3572]!	; 0xdf4

000122f0 <EVP_MD_CTX_create@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #60, 20	; 0x3c000
   122f8:	ldr	pc, [ip, #3564]!	; 0xdec

000122fc <snprintf@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #60, 20	; 0x3c000
   12304:	ldr	pc, [ip, #3556]!	; 0xde4

00012308 <__strdup@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #60, 20	; 0x3c000
   12310:	ldr	pc, [ip, #3548]!	; 0xddc

00012314 <close@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #60, 20	; 0x3c000
   1231c:	ldr	pc, [ip, #3540]!	; 0xdd4

00012320 <gmtime@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #60, 20	; 0x3c000
   12328:	ldr	pc, [ip, #3532]!	; 0xdcc

0001232c <fopen@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #60, 20	; 0x3c000
   12334:	ldr	pc, [ip, #3524]!	; 0xdc4

00012338 <ENGINE_set_default_RSA@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #60, 20	; 0x3c000
   12340:	ldr	pc, [ip, #3516]!	; 0xdbc

00012344 <read@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #60, 20	; 0x3c000
   1234c:	ldr	pc, [ip, #3508]!	; 0xdb4

00012350 <BN_sub@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #60, 20	; 0x3c000
   12358:	ldr	pc, [ip, #3500]!	; 0xdac

0001235c <abort@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #60, 20	; 0x3c000
   12364:	ldr	pc, [ip, #3492]!	; 0xda4

00012368 <ENGINE_by_id@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #60, 20	; 0x3c000
   12370:	ldr	pc, [ip, #3484]!	; 0xd9c

00012374 <BN_div@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #60, 20	; 0x3c000
   1237c:	ldr	pc, [ip, #3476]!	; 0xd94

00012380 <memmove@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #60, 20	; 0x3c000
   12388:	ldr	pc, [ip, #3468]!	; 0xd8c

0001238c <ctime@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #60, 20	; 0x3c000
   12394:	ldr	pc, [ip, #3460]!	; 0xd84

00012398 <BN_CTX_new@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #60, 20	; 0x3c000
   123a0:	ldr	pc, [ip, #3452]!	; 0xd7c

000123a4 <unlink@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #60, 20	; 0x3c000
   123ac:	ldr	pc, [ip, #3444]!	; 0xd74

000123b0 <CRYPTO_cleanup_all_ex_data@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #60, 20	; 0x3c000
   123b8:	ldr	pc, [ip, #3436]!	; 0xd6c

000123bc <gmtime_r@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #60, 20	; 0x3c000
   123c4:	ldr	pc, [ip, #3428]!	; 0xd64

000123c8 <system@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #60, 20	; 0x3c000
   123d0:	ldr	pc, [ip, #3420]!	; 0xd5c

000123d4 <realloc@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #60, 20	; 0x3c000
   123dc:	ldr	pc, [ip, #3412]!	; 0xd54

000123e0 <strcpy@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #60, 20	; 0x3c000
   123e8:	ldr	pc, [ip, #3404]!	; 0xd4c

000123ec <mmap@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #60, 20	; 0x3c000
   123f4:	ldr	pc, [ip, #3396]!	; 0xd44

000123f8 <EVP_CIPHER_CTX_cleanup@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #60, 20	; 0x3c000
   12400:	ldr	pc, [ip, #3388]!	; 0xd3c

00012404 <__strncat_chk@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #60, 20	; 0x3c000
   1240c:	ldr	pc, [ip, #3380]!	; 0xd34

00012410 <getopt@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #60, 20	; 0x3c000
   12418:	ldr	pc, [ip, #3372]!	; 0xd2c

0001241c <BN_mod_inverse@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #60, 20	; 0x3c000
   12424:	ldr	pc, [ip, #3364]!	; 0xd24

00012428 <BN_exp@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #60, 20	; 0x3c000
   12430:	ldr	pc, [ip, #3356]!	; 0xd1c

00012434 <open@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #60, 20	; 0x3c000
   1243c:	ldr	pc, [ip, #3348]!	; 0xd14

00012440 <RSA_free@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #60, 20	; 0x3c000
   12448:	ldr	pc, [ip, #3340]!	; 0xd0c

0001244c <rewind@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #60, 20	; 0x3c000
   12454:	ldr	pc, [ip, #3332]!	; 0xd04

00012458 <ERR_free_strings@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #60, 20	; 0x3c000
   12460:	ldr	pc, [ip, #3324]!	; 0xcfc

00012464 <fread@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #60, 20	; 0x3c000
   1246c:	ldr	pc, [ip, #3316]!	; 0xcf4

00012470 <EVP_PKEY_new@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #60, 20	; 0x3c000
   12478:	ldr	pc, [ip, #3308]!	; 0xcec

0001247c <EVP_MD_CTX_destroy@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #60, 20	; 0x3c000
   12484:	ldr	pc, [ip, #3300]!	; 0xce4

00012488 <fileno@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #60, 20	; 0x3c000
   12490:	ldr	pc, [ip, #3292]!	; 0xcdc

00012494 <__stack_chk_fail@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #60, 20	; 0x3c000
   1249c:	ldr	pc, [ip, #3284]!	; 0xcd4

000124a0 <SSL_library_init@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #60, 20	; 0x3c000
   124a8:	ldr	pc, [ip, #3276]!	; 0xccc

000124ac <BN_set_word@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #60, 20	; 0x3c000
   124b4:	ldr	pc, [ip, #3268]!	; 0xcc4

000124b8 <CRYPTO_free@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #60, 20	; 0x3c000
   124c0:	ldr	pc, [ip, #3260]!	; 0xcbc

000124c4 <EVP_MD_CTX_cleanup@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #60, 20	; 0x3c000
   124cc:	ldr	pc, [ip, #3252]!	; 0xcb4

000124d0 <ERR_get_error@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #60, 20	; 0x3c000
   124d8:	ldr	pc, [ip, #3244]!	; 0xcac

000124dc <pclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #60, 20	; 0x3c000
   124e4:	ldr	pc, [ip, #3236]!	; 0xca4

000124e8 <BN_get_word@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #60, 20	; 0x3c000
   124f0:	ldr	pc, [ip, #3228]!	; 0xc9c

000124f4 <lseek@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #60, 20	; 0x3c000
   124fc:	ldr	pc, [ip, #3220]!	; 0xc94

00012500 <raise@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #60, 20	; 0x3c000
   12508:	ldr	pc, [ip, #3212]!	; 0xc8c

0001250c <X509_free@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #60, 20	; 0x3c000
   12514:	ldr	pc, [ip, #3204]!	; 0xc84

00012518 <calloc@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #60, 20	; 0x3c000
   12520:	ldr	pc, [ip, #3196]!	; 0xc7c

00012524 <ftell@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #60, 20	; 0x3c000
   1252c:	ldr	pc, [ip, #3188]!	; 0xc74

00012530 <__vfprintf_chk@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #60, 20	; 0x3c000
   12538:	ldr	pc, [ip, #3180]!	; 0xc6c

0001253c <EVP_DigestFinal@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #60, 20	; 0x3c000
   12544:	ldr	pc, [ip, #3172]!	; 0xc64

00012548 <fgets@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #60, 20	; 0x3c000
   12550:	ldr	pc, [ip, #3164]!	; 0xc5c

00012554 <__fxstat@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #60, 20	; 0x3c000
   1255c:	ldr	pc, [ip, #3156]!	; 0xc54

00012560 <EVP_PKEY_set1_RSA@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #60, 20	; 0x3c000
   12568:	ldr	pc, [ip, #3148]!	; 0xc4c

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #60, 20	; 0x3c000
   12574:	ldr	pc, [ip, #3140]!	; 0xc44

00012578 <fwrite@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #60, 20	; 0x3c000
   12580:	ldr	pc, [ip, #3132]!	; 0xc3c

00012584 <BN_num_bits@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #60, 20	; 0x3c000
   1258c:	ldr	pc, [ip, #3124]!	; 0xc34

00012590 <EVP_CIPHER_CTX_new@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #60, 20	; 0x3c000
   12598:	ldr	pc, [ip, #3116]!	; 0xc2c

0001259c <memcpy@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #60, 20	; 0x3c000
   125a4:	ldr	pc, [ip, #3108]!	; 0xc24

000125a8 <malloc@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #60, 20	; 0x3c000
   125b0:	ldr	pc, [ip, #3100]!	; 0xc1c

000125b4 <EVP_CIPHER_CTX_set_padding@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #60, 20	; 0x3c000
   125bc:	ldr	pc, [ip, #3092]!	; 0xc14

000125c0 <strlen@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #60, 20	; 0x3c000
   125c8:	ldr	pc, [ip, #3084]!	; 0xc0c

000125cc <__snprintf_chk@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #60, 20	; 0x3c000
   125d4:	ldr	pc, [ip, #3076]!	; 0xc04

000125d8 <getcwd@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #60, 20	; 0x3c000
   125e0:	ldr	pc, [ip, #3068]!	; 0xbfc

000125e4 <munmap@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #60, 20	; 0x3c000
   125ec:	ldr	pc, [ip, #3060]!	; 0xbf4

000125f0 <__memset_chk@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #60, 20	; 0x3c000
   125f8:	ldr	pc, [ip, #3052]!	; 0xbec

000125fc <fclose@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #60, 20	; 0x3c000
   12604:	ldr	pc, [ip, #3044]!	; 0xbe4

00012608 <write@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #60, 20	; 0x3c000
   12610:	ldr	pc, [ip, #3036]!	; 0xbdc

00012614 <EVP_DigestSignInit@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #60, 20	; 0x3c000
   1261c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012620 <__xstat@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #60, 20	; 0x3c000
   12628:	ldr	pc, [ip, #3020]!	; 0xbcc

0001262c <BN_mul@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #60, 20	; 0x3c000
   12634:	ldr	pc, [ip, #3012]!	; 0xbc4

00012638 <ENGINE_load_builtin_engines@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #60, 20	; 0x3c000
   12640:	ldr	pc, [ip, #3004]!	; 0xbbc

00012644 <BN_rshift@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #60, 20	; 0x3c000
   1264c:	ldr	pc, [ip, #2996]!	; 0xbb4

00012650 <EVP_DigestUpdate@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #60, 20	; 0x3c000
   12658:	ldr	pc, [ip, #2988]!	; 0xbac

0001265c <strcmp@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #60, 20	; 0x3c000
   12664:	ldr	pc, [ip, #2980]!	; 0xba4

00012668 <BN_mask_bits@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #60, 20	; 0x3c000
   12670:	ldr	pc, [ip, #2972]!	; 0xb9c

00012674 <time@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #60, 20	; 0x3c000
   1267c:	ldr	pc, [ip, #2964]!	; 0xb94

00012680 <EVP_MD_CTX_init@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #60, 20	; 0x3c000
   12688:	ldr	pc, [ip, #2956]!	; 0xb8c

0001268c <__errno_location@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #60, 20	; 0x3c000
   12694:	ldr	pc, [ip, #2948]!	; 0xb84

00012698 <memchr@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #60, 20	; 0x3c000
   126a0:	ldr	pc, [ip, #2940]!	; 0xb7c

000126a4 <sscanf@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #60, 20	; 0x3c000
   126ac:	ldr	pc, [ip, #2932]!	; 0xb74

000126b0 <X509_get_pubkey@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #60, 20	; 0x3c000
   126b8:	ldr	pc, [ip, #2924]!	; 0xb6c

000126bc <strncpy@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #60, 20	; 0x3c000
   126c4:	ldr	pc, [ip, #2916]!	; 0xb64

000126c8 <memcmp@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #60, 20	; 0x3c000
   126d0:	ldr	pc, [ip, #2908]!	; 0xb5c

000126d4 <OpenSSL_add_all_ciphers@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #60, 20	; 0x3c000
   126dc:	ldr	pc, [ip, #2900]!	; 0xb54

000126e0 <__sprintf_chk@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #60, 20	; 0x3c000
   126e8:	ldr	pc, [ip, #2892]!	; 0xb4c

000126ec <strrchr@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #60, 20	; 0x3c000
   126f4:	ldr	pc, [ip, #2884]!	; 0xb44

000126f8 <BN_copy@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #60, 20	; 0x3c000
   12700:	ldr	pc, [ip, #2876]!	; 0xb3c

00012704 <mktime@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #60, 20	; 0x3c000
   1270c:	ldr	pc, [ip, #2868]!	; 0xb34

00012710 <fputs@plt>:
   12710:	add	ip, pc, #0, 12
   12714:	add	ip, ip, #60, 20	; 0x3c000
   12718:	ldr	pc, [ip, #2860]!	; 0xb2c

0001271c <getenv@plt>:
   1271c:	add	ip, pc, #0, 12
   12720:	add	ip, ip, #60, 20	; 0x3c000
   12724:	ldr	pc, [ip, #2852]!	; 0xb24

00012728 <__libc_start_main@plt>:
   12728:	add	ip, pc, #0, 12
   1272c:	add	ip, ip, #60, 20	; 0x3c000
   12730:	ldr	pc, [ip, #2844]!	; 0xb1c

00012734 <EVP_cleanup@plt>:
   12734:	add	ip, pc, #0, 12
   12738:	add	ip, ip, #60, 20	; 0x3c000
   1273c:	ldr	pc, [ip, #2836]!	; 0xb14

00012740 <__gmon_start__@plt>:
   12740:	add	ip, pc, #0, 12
   12744:	add	ip, ip, #60, 20	; 0x3c000
   12748:	ldr	pc, [ip, #2828]!	; 0xb0c

0001274c <rename@plt>:
   1274c:	add	ip, pc, #0, 12
   12750:	add	ip, ip, #60, 20	; 0x3c000
   12754:	ldr	pc, [ip, #2820]!	; 0xb04

00012758 <BN_new@plt>:
   12758:	add	ip, pc, #0, 12
   1275c:	add	ip, ip, #60, 20	; 0x3c000
   12760:	ldr	pc, [ip, #2812]!	; 0xafc

00012764 <strchr@plt>:
   12764:	add	ip, pc, #0, 12
   12768:	add	ip, ip, #60, 20	; 0x3c000
   1276c:	ldr	pc, [ip, #2804]!	; 0xaf4

00012770 <__printf_chk@plt>:
   12770:	add	ip, pc, #0, 12
   12774:	add	ip, ip, #60, 20	; 0x3c000
   12778:	ldr	pc, [ip, #2796]!	; 0xaec

Disassembly of section .text:

00012780 <crc32@@Base-0x7024>:
   12780:	movw	r1, #65044	; 0xfe14
   12784:	movt	r1, #4
   12788:	mov	r3, r0
   1278c:	movw	r2, #37080	; 0x90d8
   12790:	ldr	r0, [r1]
   12794:	movt	r2, #3
   12798:	push	{r4, lr}
   1279c:	mov	r1, #1
   127a0:	bl	122b4 <__fprintf_chk@plt>
   127a4:	mov	r0, #1
   127a8:	bl	121f4 <exit@plt>
   127ac:	movw	r3, #61168	; 0xeef0
   127b0:	movt	r3, #4
   127b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127b8:	sub	sp, sp, #376	; 0x178
   127bc:	ldr	r3, [r3]
   127c0:	mov	r5, r1
   127c4:	mov	r7, r0
   127c8:	ldr	r1, [r1]
   127cc:	add	r0, sp, #116	; 0x74
   127d0:	mov	r2, #255	; 0xff
   127d4:	str	r3, [sp, #372]	; 0x174
   127d8:	movw	r4, #56008	; 0xdac8
   127dc:	bl	126bc <strncpy@plt>
   127e0:	movw	r6, #65040	; 0xfe10
   127e4:	mov	r3, #0
   127e8:	movt	r4, #3
   127ec:	movt	r6, #4
   127f0:	mov	r8, r3
   127f4:	mov	sl, r3
   127f8:	mov	r9, r3
   127fc:	strb	r3, [sp, #371]	; 0x173
   12800:	mov	r2, r4
   12804:	mov	r1, r5
   12808:	mov	r0, r7
   1280c:	bl	12410 <getopt@plt>
   12810:	cmn	r0, #1
   12814:	beq	12850 <__printf_chk@plt+0xe0>
   12818:	cmp	r0, #110	; 0x6e
   1281c:	beq	12838 <__printf_chk@plt+0xc8>
   12820:	cmp	r0, #112	; 0x70
   12824:	beq	12848 <__printf_chk@plt+0xd8>
   12828:	cmp	r0, #102	; 0x66
   1282c:	beq	12840 <__printf_chk@plt+0xd0>
   12830:	add	r0, sp, #116	; 0x74
   12834:	bl	35d00 <crc32@@Base+0x1c55c>
   12838:	ldr	sl, [r6]
   1283c:	b	12800 <__printf_chk@plt+0x90>
   12840:	ldr	r9, [r6]
   12844:	b	12800 <__printf_chk@plt+0x90>
   12848:	ldr	r8, [r6]
   1284c:	b	12800 <__printf_chk@plt+0x90>
   12850:	cmp	r9, #0
   12854:	beq	12958 <__printf_chk@plt+0x1e8>
   12858:	cmp	sl, #0
   1285c:	beq	12914 <__printf_chk@plt+0x1a4>
   12860:	cmp	r8, #0
   12864:	beq	128ec <__printf_chk@plt+0x17c>
   12868:	mov	r4, #0
   1286c:	add	r1, sp, #24
   12870:	add	r0, sp, #116	; 0x74
   12874:	str	r1, [sp]
   12878:	str	r4, [sp, #8]
   1287c:	mov	r2, r4
   12880:	str	r4, [sp, #4]
   12884:	add	r3, sp, #16
   12888:	mov	r1, r9
   1288c:	bl	13950 <__printf_chk@plt+0x11e0>
   12890:	subs	r6, r0, #0
   12894:	blt	12980 <__printf_chk@plt+0x210>
   12898:	mov	r1, sl
   1289c:	ldr	r0, [sp, #16]
   128a0:	bl	312a8 <crc32@@Base+0x17b04>
   128a4:	subs	r5, r0, #0
   128a8:	blt	1293c <__printf_chk@plt+0x1cc>
   128ac:	add	r3, sp, #20
   128b0:	mov	r2, r8
   128b4:	mov	r1, r5
   128b8:	ldr	r0, [sp, #16]
   128bc:	bl	30f4c <crc32@@Base+0x177a8>
   128c0:	ldr	r3, [sp, #20]
   128c4:	cmp	r3, #0
   128c8:	mov	r7, r0
   128cc:	bne	1299c <__printf_chk@plt+0x22c>
   128d0:	mov	r2, r8
   128d4:	movw	r1, #56128	; 0xdb40
   128d8:	mov	r0, #1
   128dc:	movt	r1, #3
   128e0:	bl	12770 <__printf_chk@plt>
   128e4:	mov	r0, #1
   128e8:	bl	121f4 <exit@plt>
   128ec:	movw	r1, #65044	; 0xfe14
   128f0:	movt	r1, #4
   128f4:	movw	r2, #56064	; 0xdb00
   128f8:	ldr	r3, [r5]
   128fc:	ldr	r0, [r1]
   12900:	movt	r2, #3
   12904:	mov	r1, #1
   12908:	bl	122b4 <__fprintf_chk@plt>
   1290c:	ldr	r0, [r5]
   12910:	bl	35d00 <crc32@@Base+0x1c55c>
   12914:	movw	r1, #65044	; 0xfe14
   12918:	movt	r1, #4
   1291c:	movw	r2, #56040	; 0xdae8
   12920:	ldr	r3, [r5]
   12924:	ldr	r0, [r1]
   12928:	movt	r2, #3
   1292c:	mov	r1, #1
   12930:	bl	122b4 <__fprintf_chk@plt>
   12934:	ldr	r0, [r5]
   12938:	bl	35d00 <crc32@@Base+0x1c55c>
   1293c:	mov	r2, sl
   12940:	movw	r1, #56112	; 0xdb30
   12944:	mov	r0, #1
   12948:	movt	r1, #3
   1294c:	bl	12770 <__printf_chk@plt>
   12950:	mov	r0, #1
   12954:	bl	121f4 <exit@plt>
   12958:	movw	r1, #65044	; 0xfe14
   1295c:	movt	r1, #4
   12960:	movw	r2, #56016	; 0xdad0
   12964:	ldr	r3, [r5]
   12968:	ldr	r0, [r1]
   1296c:	movt	r2, #3
   12970:	mov	r1, #1
   12974:	bl	122b4 <__fprintf_chk@plt>
   12978:	ldr	r0, [r5]
   1297c:	bl	35d00 <crc32@@Base+0x1c55c>
   12980:	mov	r2, r9
   12984:	movw	r1, #56092	; 0xdb1c
   12988:	mov	r0, #1
   1298c:	movt	r1, #3
   12990:	bl	12770 <__printf_chk@plt>
   12994:	mov	r0, #1
   12998:	bl	121f4 <exit@plt>
   1299c:	mov	r1, r5
   129a0:	mov	r2, r4
   129a4:	ldr	r0, [sp, #16]
   129a8:	bl	30c4c <crc32@@Base+0x174a8>
   129ac:	movw	r1, #56144	; 0xdb50
   129b0:	movt	r1, #3
   129b4:	mov	r2, r0
   129b8:	mov	r0, #1
   129bc:	bl	12770 <__printf_chk@plt>
   129c0:	ldr	r2, [sp, #20]
   129c4:	movw	r1, #56156	; 0xdb5c
   129c8:	mov	r0, #1
   129cc:	movt	r1, #3
   129d0:	bl	12770 <__printf_chk@plt>
   129d4:	ldr	r2, [sp, #16]
   129d8:	movw	r1, #56168	; 0xdb68
   129dc:	mov	r0, #1
   129e0:	sub	r2, r7, r2
   129e4:	movt	r1, #3
   129e8:	bl	12770 <__printf_chk@plt>
   129ec:	ldr	r1, [sp, #68]	; 0x44
   129f0:	ldr	r0, [sp, #16]
   129f4:	bl	125e4 <munmap@plt>
   129f8:	mov	r0, r6
   129fc:	bl	12314 <close@plt>
   12a00:	mov	r0, r4
   12a04:	bl	121f4 <exit@plt>
   12a08:	mov	fp, #0
   12a0c:	mov	lr, #0
   12a10:	pop	{r1}		; (ldr r1, [sp], #4)
   12a14:	mov	r2, sp
   12a18:	push	{r2}		; (str r2, [sp, #-4]!)
   12a1c:	push	{r0}		; (str r0, [sp, #-4]!)
   12a20:	ldr	ip, [pc, #16]	; 12a38 <__printf_chk@plt+0x2c8>
   12a24:	push	{ip}		; (str ip, [sp, #-4]!)
   12a28:	ldr	r0, [pc, #12]	; 12a3c <__printf_chk@plt+0x2cc>
   12a2c:	ldr	r3, [pc, #12]	; 12a40 <__printf_chk@plt+0x2d0>
   12a30:	bl	12728 <__libc_start_main@plt>
   12a34:	bl	1235c <abort@plt>
   12a38:	andeq	r6, r3, r4, ror r1
   12a3c:	andeq	r2, r1, ip, lsr #15
   12a40:	andeq	r6, r3, r0, lsl r1
   12a44:	ldr	r3, [pc, #20]	; 12a60 <__printf_chk@plt+0x2f0>
   12a48:	ldr	r2, [pc, #20]	; 12a64 <__printf_chk@plt+0x2f4>
   12a4c:	add	r3, pc, r3
   12a50:	ldr	r2, [r3, r2]
   12a54:	cmp	r2, #0
   12a58:	bxeq	lr
   12a5c:	b	12740 <__gmon_start__@plt>
   12a60:	andeq	ip, r3, ip, lsr #11
   12a64:	andeq	r0, r0, r8, ror #4
   12a68:	movw	r0, #64940	; 0xfdac
   12a6c:	movt	r0, #4
   12a70:	movw	r3, #64940	; 0xfdac
   12a74:	movt	r3, #4
   12a78:	cmp	r3, r0
   12a7c:	bxeq	lr
   12a80:	movw	r3, #0
   12a84:	movt	r3, #0
   12a88:	cmp	r3, #0
   12a8c:	bxeq	lr
   12a90:	bx	r3
   12a94:	movw	r0, #64940	; 0xfdac
   12a98:	movt	r0, #4
   12a9c:	movw	r1, #64940	; 0xfdac
   12aa0:	movt	r1, #4
   12aa4:	sub	r1, r1, r0
   12aa8:	asr	r1, r1, #2
   12aac:	add	r1, r1, r1, lsr #31
   12ab0:	asrs	r1, r1, #1
   12ab4:	bxeq	lr
   12ab8:	movw	r3, #0
   12abc:	movt	r3, #0
   12ac0:	cmp	r3, #0
   12ac4:	bxeq	lr
   12ac8:	bx	r3
   12acc:	push	{r4, lr}
   12ad0:	movw	r4, #65052	; 0xfe1c
   12ad4:	movt	r4, #4
   12ad8:	ldrb	r3, [r4]
   12adc:	cmp	r3, #0
   12ae0:	popne	{r4, pc}
   12ae4:	bl	12a68 <__printf_chk@plt+0x2f8>
   12ae8:	mov	r3, #1
   12aec:	strb	r3, [r4]
   12af0:	pop	{r4, pc}
   12af4:	b	12a94 <__printf_chk@plt+0x324>
   12af8:	subs	r0, r0, #13
   12afc:	movne	r0, #1
   12b00:	bx	lr
   12b04:	ldr	r2, [r0]
   12b08:	movw	r3, #18772	; 0x4954
   12b0c:	movt	r3, #16720	; 0x4150
   12b10:	cmp	r2, r3
   12b14:	movweq	r3, #65056	; 0xfe20
   12b18:	movteq	r3, #4
   12b1c:	moveq	r0, #0
   12b20:	mvnne	r0, #10
   12b24:	streq	r1, [r3]
   12b28:	bx	lr
   12b2c:	bx	lr
   12b30:	cmp	r0, #0
   12b34:	beq	12bb8 <__printf_chk@plt+0x448>
   12b38:	ldr	r3, [r0, #64]	; 0x40
   12b3c:	ldrb	r3, [r3]
   12b40:	cmp	r3, #0
   12b44:	beq	12b8c <__printf_chk@plt+0x41c>
   12b48:	ldr	r3, [r0]
   12b4c:	ldr	r2, [r0, #8]
   12b50:	cmp	r3, #0
   12b54:	beq	12b74 <__printf_chk@plt+0x404>
   12b58:	cmp	r2, #0
   12b5c:	bne	12b6c <__printf_chk@plt+0x3fc>
   12b60:	ldr	r3, [r0, #16]
   12b64:	cmp	r3, #0
   12b68:	beq	12b7c <__printf_chk@plt+0x40c>
   12b6c:	mov	r0, #1
   12b70:	bx	lr
   12b74:	cmp	r2, #0
   12b78:	bne	12b60 <__printf_chk@plt+0x3f0>
   12b7c:	ldr	r0, [r0, #28]
   12b80:	adds	r0, r0, #0
   12b84:	movne	r0, #1
   12b88:	bx	lr
   12b8c:	movw	r1, #65044	; 0xfe14
   12b90:	movt	r1, #4
   12b94:	ldr	r3, [r0, #80]	; 0x50
   12b98:	movw	r2, #25264	; 0x62b0
   12b9c:	push	{r4, lr}
   12ba0:	movt	r2, #3
   12ba4:	ldr	r0, [r1]
   12ba8:	mov	r1, #1
   12bac:	bl	122b4 <__fprintf_chk@plt>
   12bb0:	mvn	r0, #0
   12bb4:	pop	{r4, pc}
   12bb8:	mvn	r0, #0
   12bbc:	bx	lr
   12bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bc4:	movw	r3, #61168	; 0xeef0
   12bc8:	sub	sp, sp, #212	; 0xd4
   12bcc:	movt	r3, #4
   12bd0:	mov	r4, #0
   12bd4:	str	r0, [sp, #40]	; 0x28
   12bd8:	str	r3, [sp, #48]	; 0x30
   12bdc:	ldr	r0, [r0, #64]	; 0x40
   12be0:	ldr	r3, [r3]
   12be4:	str	r1, [sp, #44]	; 0x2c
   12be8:	movw	r1, #49540	; 0xc184
   12bec:	movt	r1, #3
   12bf0:	str	r0, [sp, #52]	; 0x34
   12bf4:	str	r3, [sp, #204]	; 0xcc
   12bf8:	str	r4, [sp, #56]	; 0x38
   12bfc:	bl	1232c <fopen@plt>
   12c00:	subs	r3, r0, #0
   12c04:	str	r3, [sp, #28]
   12c08:	beq	13130 <__printf_chk@plt+0x9c0>
   12c0c:	ldr	r3, [sp, #40]	; 0x28
   12c10:	mov	r1, r4
   12c14:	ldr	r6, [r3, #72]	; 0x48
   12c18:	ldr	r3, [sp, #44]	; 0x2c
   12c1c:	mov	r0, r6
   12c20:	str	r4, [r3, #4]
   12c24:	bl	12434 <open@plt>
   12c28:	subs	r5, r0, #0
   12c2c:	blt	130f8 <__printf_chk@plt+0x988>
   12c30:	mov	r1, r5
   12c34:	mov	r0, #3
   12c38:	add	r2, sp, #72	; 0x48
   12c3c:	bl	12554 <__fxstat@plt>
   12c40:	cmp	r0, #0
   12c44:	blt	130b0 <__printf_chk@plt+0x940>
   12c48:	ldr	r0, [sp, #116]	; 0x74
   12c4c:	movw	r3, #65056	; 0xfe20
   12c50:	movt	r3, #4
   12c54:	add	r0, r0, #3
   12c58:	bic	r0, r0, #3
   12c5c:	add	r0, r0, #4096	; 0x1000
   12c60:	str	r0, [r3]
   12c64:	bl	125a8 <malloc@plt>
   12c68:	subs	r6, r0, #0
   12c6c:	beq	1306c <__printf_chk@plt+0x8fc>
   12c70:	mov	r0, r5
   12c74:	str	r4, [sp, #24]
   12c78:	bl	12314 <close@plt>
   12c7c:	add	r3, r6, #4
   12c80:	str	r3, [sp, #32]
   12c84:	movw	fp, #24968	; 0x6188
   12c88:	ldr	r3, [sp, #44]	; 0x2c
   12c8c:	movt	fp, #3
   12c90:	str	r6, [r3, #8]
   12c94:	movw	r3, #18772	; 0x4954
   12c98:	movt	r3, #16720	; 0x4150
   12c9c:	str	r3, [r6]
   12ca0:	movw	r3, #22797	; 0x590d
   12ca4:	movt	r3, #22611	; 0x5853
   12ca8:	str	r3, [sp, #36]	; 0x24
   12cac:	ldr	r3, [sp, #28]
   12cb0:	mov	r2, #10
   12cb4:	add	r1, sp, #68	; 0x44
   12cb8:	add	r0, sp, #56	; 0x38
   12cbc:	bl	12134 <__getdelim@plt>
   12cc0:	cmp	r0, #0
   12cc4:	ble	12e34 <__printf_chk@plt+0x6c4>
   12cc8:	movw	r1, #25472	; 0x6380
   12ccc:	add	r2, sp, #60	; 0x3c
   12cd0:	movt	r1, #3
   12cd4:	ldr	r0, [sp, #56]	; 0x38
   12cd8:	bl	12224 <__strtok_r@plt>
   12cdc:	ldr	r3, [sp, #24]
   12ce0:	add	r3, r3, #1
   12ce4:	str	r3, [sp, #24]
   12ce8:	subs	r3, r0, #0
   12cec:	beq	12cac <__printf_chk@plt+0x53c>
   12cf0:	movw	r1, #25476	; 0x6384
   12cf4:	add	r2, sp, #64	; 0x40
   12cf8:	movt	r1, #3
   12cfc:	str	r3, [sp, #56]	; 0x38
   12d00:	bl	12224 <__strtok_r@plt>
   12d04:	subs	r4, r0, #0
   12d08:	beq	12cac <__printf_chk@plt+0x53c>
   12d0c:	ldrb	r3, [r4]
   12d10:	cmp	r3, #35	; 0x23
   12d14:	beq	12cac <__printf_chk@plt+0x53c>
   12d18:	movw	r1, #25480	; 0x6388
   12d1c:	movw	r0, #62064	; 0xf270
   12d20:	movt	r1, #3
   12d24:	movt	r0, #4
   12d28:	mov	r2, r4
   12d2c:	bl	1a620 <crc32@@Base+0xe7c>
   12d30:	subs	r9, r0, #0
   12d34:	blt	12f68 <__printf_chk@plt+0x7f8>
   12d38:	add	r7, sp, #164	; 0xa4
   12d3c:	mov	r3, #0
   12d40:	movw	r6, #25476	; 0x6384
   12d44:	movt	r6, #3
   12d48:	mov	r5, r3
   12d4c:	mov	sl, r3
   12d50:	mov	r8, r7
   12d54:	str	r3, [sp, #56]	; 0x38
   12d58:	str	r7, [sp, #20]
   12d5c:	add	r2, sp, #64	; 0x40
   12d60:	mov	r1, r6
   12d64:	mov	r0, #0
   12d68:	bl	12224 <__strtok_r@plt>
   12d6c:	subs	r4, r0, #0
   12d70:	beq	12dd0 <__printf_chk@plt+0x660>
   12d74:	ldrb	r3, [r4]
   12d78:	cmp	r3, #35	; 0x23
   12d7c:	beq	12dd0 <__printf_chk@plt+0x660>
   12d80:	bl	1268c <__errno_location@plt>
   12d84:	mov	r2, #16
   12d88:	add	r1, sp, #72	; 0x48
   12d8c:	mov	r7, r0
   12d90:	str	sl, [r0]
   12d94:	mov	r0, r4
   12d98:	bl	122cc <strtoul@plt>
   12d9c:	ldr	r3, [r7]
   12da0:	cmp	r3, #0
   12da4:	bne	12f30 <__printf_chk@plt+0x7c0>
   12da8:	ldr	r2, [sp, #72]	; 0x48
   12dac:	cmp	r4, r2
   12db0:	beq	12f34 <__printf_chk@plt+0x7c4>
   12db4:	ldr	r2, [fp, r9, lsl #3]
   12db8:	add	r5, r5, #1
   12dbc:	str	r0, [r8], #4
   12dc0:	cmp	r2, r5
   12dc4:	bcc	12f9c <__printf_chk@plt+0x82c>
   12dc8:	str	r3, [sp, #56]	; 0x38
   12dcc:	b	12d5c <__printf_chk@plt+0x5ec>
   12dd0:	cmp	r9, #0
   12dd4:	ldr	r7, [sp, #20]
   12dd8:	beq	12cac <__printf_chk@plt+0x53c>
   12ddc:	add	r9, fp, r9, lsl #3
   12de0:	ldr	r2, [sp, #36]	; 0x24
   12de4:	ldr	r3, [r9, #4]
   12de8:	cmp	r3, r2
   12dec:	ldr	r2, [sp, #32]
   12df0:	ldreq	r1, [sp, #32]
   12df4:	str	r3, [r2]
   12df8:	addne	r3, r2, #4
   12dfc:	ldreq	r2, [r9, #152]	; 0x98
   12e00:	addeq	r3, r1, #8
   12e04:	addeq	r2, r2, r5, lsl #16
   12e08:	streq	r2, [r1, #4]
   12e0c:	cmp	r5, #0
   12e10:	streq	r3, [sp, #32]
   12e14:	beq	12cac <__printf_chk@plt+0x53c>
   12e18:	add	r5, r3, r5, lsl #2
   12e1c:	ldr	r2, [r7], #4
   12e20:	str	r2, [r3], #4
   12e24:	cmp	r5, r3
   12e28:	bne	12e1c <__printf_chk@plt+0x6ac>
   12e2c:	str	r5, [sp, #32]
   12e30:	b	12cac <__printf_chk@plt+0x53c>
   12e34:	ldr	r0, [sp, #28]
   12e38:	bl	125fc <fclose@plt>
   12e3c:	ldr	r3, [sp, #40]	; 0x28
   12e40:	mov	r1, #0
   12e44:	ldr	r4, [r3, #72]	; 0x48
   12e48:	mov	r0, r4
   12e4c:	bl	12434 <open@plt>
   12e50:	subs	r7, r0, #0
   12e54:	blt	12fe8 <__printf_chk@plt+0x878>
   12e58:	add	r2, sp, #72	; 0x48
   12e5c:	mov	r1, r7
   12e60:	mov	r0, #3
   12e64:	bl	12554 <__fxstat@plt>
   12e68:	cmp	r0, #0
   12e6c:	blt	13034 <__printf_chk@plt+0x8c4>
   12e70:	mov	r6, #0
   12e74:	mov	r3, #1
   12e78:	mov	r2, r3
   12e7c:	ldr	r1, [sp, #116]	; 0x74
   12e80:	str	r7, [sp]
   12e84:	mov	r0, r6
   12e88:	str	r6, [sp, #4]
   12e8c:	bl	123ec <mmap@plt>
   12e90:	ldr	r9, [sp, #40]	; 0x28
   12e94:	ldr	r5, [sp, #116]	; 0x74
   12e98:	movw	r3, #22785	; 0x5901
   12e9c:	movt	r3, #22611	; 0x5853
   12ea0:	ldr	r2, [r9, #60]	; 0x3c
   12ea4:	mov	r4, r0
   12ea8:	ldr	r0, [sp, #32]
   12eac:	mov	r1, r4
   12eb0:	add	r8, r0, #12
   12eb4:	str	r3, [r0]
   12eb8:	stmib	r0, {r2, r5}
   12ebc:	mov	r2, r5
   12ec0:	mov	r0, r8
   12ec4:	bl	1259c <memcpy@plt>
   12ec8:	mov	r1, r5
   12ecc:	mov	r0, r4
   12ed0:	add	r4, r5, #3
   12ed4:	bl	125e4 <munmap@plt>
   12ed8:	mov	r0, r7
   12edc:	bl	12314 <close@plt>
   12ee0:	ldr	r3, [sp, #48]	; 0x30
   12ee4:	ldr	r5, [sp, #44]	; 0x2c
   12ee8:	bic	r4, r4, #3
   12eec:	ldr	r0, [sp, #204]	; 0xcc
   12ef0:	add	r2, r8, r4
   12ef4:	ldr	r1, [r3]
   12ef8:	add	r3, r2, #8
   12efc:	ldr	ip, [r9, #60]	; 0x3c
   12f00:	cmp	r0, r1
   12f04:	ldr	lr, [r5, #8]
   12f08:	movw	r1, #22790	; 0x5906
   12f0c:	mov	r0, r6
   12f10:	sub	r3, r3, lr
   12f14:	movt	r1, #22611	; 0x5853
   12f18:	str	r3, [r5, #4]
   12f1c:	str	r1, [r8, r4]
   12f20:	str	ip, [r2, #4]
   12f24:	bne	13030 <__printf_chk@plt+0x8c0>
   12f28:	add	sp, sp, #212	; 0xd4
   12f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f30:	mov	r2, r4
   12f34:	movw	r1, #65044	; 0xfe14
   12f38:	movt	r1, #4
   12f3c:	str	r2, [sp, #4]
   12f40:	movw	r2, #25540	; 0x63c4
   12f44:	ldr	r0, [r1]
   12f48:	movt	r2, #3
   12f4c:	ldr	r1, [sp, #24]
   12f50:	ldr	r3, [sp, #52]	; 0x34
   12f54:	str	r1, [sp]
   12f58:	mov	r1, #1
   12f5c:	bl	122b4 <__fprintf_chk@plt>
   12f60:	mov	r0, #1
   12f64:	bl	121f4 <exit@plt>
   12f68:	ldr	r1, [sp, #24]
   12f6c:	movw	r2, #65044	; 0xfe14
   12f70:	movt	r2, #4
   12f74:	str	r4, [sp, #4]
   12f78:	ldr	r3, [sp, #52]	; 0x34
   12f7c:	ldr	r0, [r2]
   12f80:	movw	r2, #25500	; 0x639c
   12f84:	str	r1, [sp]
   12f88:	movt	r2, #3
   12f8c:	mov	r1, #1
   12f90:	bl	122b4 <__fprintf_chk@plt>
   12f94:	mov	r0, #1
   12f98:	bl	121f4 <exit@plt>
   12f9c:	movw	r3, #62064	; 0xf270
   12fa0:	movt	r3, #4
   12fa4:	mov	r2, #12
   12fa8:	str	r4, [sp, #4]
   12fac:	mla	r9, r2, r9, r3
   12fb0:	ldr	r3, [sp, #24]
   12fb4:	movw	r1, #65044	; 0xfe14
   12fb8:	movt	r1, #4
   12fbc:	movw	r2, #25580	; 0x63ec
   12fc0:	movt	r2, #3
   12fc4:	str	r3, [sp]
   12fc8:	ldr	r3, [sp, #52]	; 0x34
   12fcc:	ldr	ip, [r9, #4]
   12fd0:	ldr	r0, [r1]
   12fd4:	mov	r1, #1
   12fd8:	str	ip, [sp, #8]
   12fdc:	bl	122b4 <__fprintf_chk@plt>
   12fe0:	mov	r0, #1
   12fe4:	bl	121f4 <exit@plt>
   12fe8:	ldr	r3, [sp, #40]	; 0x28
   12fec:	movw	r2, #65044	; 0xfe14
   12ff0:	movt	r2, #4
   12ff4:	ldr	r6, [r3, #80]	; 0x50
   12ff8:	ldr	r5, [r2]
   12ffc:	bl	1268c <__errno_location@plt>
   13000:	ldr	r0, [r0]
   13004:	bl	12200 <strerror@plt>
   13008:	movw	r2, #25392	; 0x6330
   1300c:	movt	r2, #3
   13010:	mov	r3, r6
   13014:	mov	r1, #1
   13018:	str	r4, [sp]
   1301c:	str	r0, [sp, #4]
   13020:	mov	r0, r5
   13024:	bl	122b4 <__fprintf_chk@plt>
   13028:	mov	r0, #1
   1302c:	bl	121f4 <exit@plt>
   13030:	bl	12494 <__stack_chk_fail@plt>
   13034:	ldr	r3, [sp, #40]	; 0x28
   13038:	movw	r2, #65044	; 0xfe14
   1303c:	movt	r2, #4
   13040:	ldr	r6, [r3, #80]	; 0x50
   13044:	ldr	r5, [r2]
   13048:	bl	1268c <__errno_location@plt>
   1304c:	ldr	r0, [r0]
   13050:	bl	12200 <strerror@plt>
   13054:	movw	r2, #25416	; 0x6348
   13058:	mov	r3, r6
   1305c:	str	r4, [sp]
   13060:	mov	r1, #1
   13064:	movt	r2, #3
   13068:	b	1301c <__printf_chk@plt+0x8ac>
   1306c:	ldr	r3, [sp, #40]	; 0x28
   13070:	movw	r2, #65044	; 0xfe14
   13074:	movt	r2, #4
   13078:	ldr	r5, [r3, #80]	; 0x50
   1307c:	ldr	r4, [r2]
   13080:	bl	1268c <__errno_location@plt>
   13084:	ldr	r0, [r0]
   13088:	bl	12200 <strerror@plt>
   1308c:	mov	r3, r5
   13090:	movw	r2, #25440	; 0x6360
   13094:	mov	r1, #1
   13098:	movt	r2, #3
   1309c:	str	r0, [sp]
   130a0:	mov	r0, r4
   130a4:	bl	122b4 <__fprintf_chk@plt>
   130a8:	mov	r0, #1
   130ac:	bl	121f4 <exit@plt>
   130b0:	ldr	r3, [sp, #40]	; 0x28
   130b4:	movw	r2, #65044	; 0xfe14
   130b8:	movt	r2, #4
   130bc:	ldr	r5, [r3, #80]	; 0x50
   130c0:	ldr	r4, [r2]
   130c4:	bl	1268c <__errno_location@plt>
   130c8:	ldr	r0, [r0]
   130cc:	bl	12200 <strerror@plt>
   130d0:	movw	r2, #25416	; 0x6348
   130d4:	movt	r2, #3
   130d8:	mov	r3, r5
   130dc:	mov	r1, #1
   130e0:	str	r6, [sp]
   130e4:	str	r0, [sp, #4]
   130e8:	mov	r0, r4
   130ec:	bl	122b4 <__fprintf_chk@plt>
   130f0:	mov	r0, #1
   130f4:	bl	121f4 <exit@plt>
   130f8:	ldr	r3, [sp, #40]	; 0x28
   130fc:	movw	r2, #65044	; 0xfe14
   13100:	movt	r2, #4
   13104:	ldr	r5, [r3, #80]	; 0x50
   13108:	ldr	r4, [r2]
   1310c:	bl	1268c <__errno_location@plt>
   13110:	ldr	r0, [r0]
   13114:	bl	12200 <strerror@plt>
   13118:	movw	r2, #25392	; 0x6330
   1311c:	mov	r3, r5
   13120:	str	r6, [sp]
   13124:	mov	r1, #1
   13128:	movt	r2, #3
   1312c:	b	130e4 <__printf_chk@plt+0x974>
   13130:	movw	r1, #65044	; 0xfe14
   13134:	movt	r1, #4
   13138:	ldr	r3, [sp, #52]	; 0x34
   1313c:	movw	r2, #25348	; 0x6304
   13140:	ldr	r0, [r1]
   13144:	movt	r2, #3
   13148:	mov	r1, #1
   1314c:	bl	122b4 <__fprintf_chk@plt>
   13150:	mov	r0, #1
   13154:	bl	121f4 <exit@plt>
   13158:	ldr	r2, [r0]
   1315c:	movw	r3, #18772	; 0x4954
   13160:	movt	r3, #16720	; 0x4150
   13164:	cmp	r2, r3
   13168:	beq	1318c <__printf_chk@plt+0xa1c>
   1316c:	movw	r3, #65044	; 0xfe14
   13170:	movt	r3, #4
   13174:	movw	r0, #25636	; 0x6424
   13178:	mov	r2, #36	; 0x24
   1317c:	ldr	r3, [r3]
   13180:	movt	r0, #3
   13184:	mov	r1, #1
   13188:	b	12578 <fwrite@plt>
   1318c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13190:	movw	sl, #65048	; 0xfe18
   13194:	sub	sp, sp, #28
   13198:	movt	sl, #4
   1319c:	ldr	r9, [pc, #432]	; 13354 <__printf_chk@plt+0xbe4>
   131a0:	mov	r6, r0
   131a4:	str	r0, [sp, #20]
   131a8:	mov	r2, #40	; 0x28
   131ac:	ldr	r3, [sl]
   131b0:	mov	r1, #1
   131b4:	movw	r0, #25676	; 0x644c
   131b8:	movw	fp, #22790	; 0x5906
   131bc:	movt	r0, #3
   131c0:	movw	r7, #22797	; 0x590d
   131c4:	movt	fp, #22611	; 0x5853
   131c8:	movt	r7, #22611	; 0x5853
   131cc:	bl	12578 <fwrite@plt>
   131d0:	ldr	r3, [r6], #4
   131d4:	ldr	r0, [sl]
   131d8:	movw	r2, #25720	; 0x6478
   131dc:	mov	r1, #1
   131e0:	movt	r2, #3
   131e4:	bl	122b4 <__fprintf_chk@plt>
   131e8:	movw	r3, #22785	; 0x5901
   131ec:	movt	r3, #22611	; 0x5853
   131f0:	str	r3, [sp, #16]
   131f4:	ldr	r5, [r6]
   131f8:	cmp	r5, fp
   131fc:	beq	1334c <__printf_chk@plt+0xbdc>
   13200:	ldr	r3, [sp, #16]
   13204:	cmp	r5, r3
   13208:	beq	13310 <__printf_chk@plt+0xba0>
   1320c:	movw	r8, #24968	; 0x6188
   13210:	movt	r8, #3
   13214:	mov	r2, #0
   13218:	mov	r3, r8
   1321c:	mov	r4, r2
   13220:	b	13234 <__printf_chk@plt+0xac4>
   13224:	add	r4, r4, #1
   13228:	cmp	r4, #19
   1322c:	beq	132e8 <__printf_chk@plt+0xb78>
   13230:	ldr	r2, [r3, #4]
   13234:	cmp	r5, r2
   13238:	add	r3, r3, #8
   1323c:	bne	13224 <__printf_chk@plt+0xab4>
   13240:	cmp	r5, r7
   13244:	bne	13258 <__printf_chk@plt+0xae8>
   13248:	ldrh	r2, [r6, #4]
   1324c:	ldr	r1, [r9, r4, lsl #3]
   13250:	cmp	r1, r2
   13254:	bne	13224 <__printf_chk@plt+0xab4>
   13258:	ldr	r3, [sl]
   1325c:	mov	r2, r4
   13260:	mov	r1, #0
   13264:	movw	r0, #62064	; 0xf270
   13268:	movt	r0, #4
   1326c:	str	r3, [sp, #12]
   13270:	bl	1a350 <crc32@@Base+0xbac>
   13274:	movw	r2, #25816	; 0x64d8
   13278:	mov	r1, #1
   1327c:	movt	r2, #3
   13280:	mov	r3, r0
   13284:	ldr	r0, [sp, #12]
   13288:	bl	122b4 <__fprintf_chk@plt>
   1328c:	ldr	r3, [r8, r4, lsl #3]
   13290:	movw	r2, #65056	; 0xfe20
   13294:	movt	r2, #4
   13298:	add	r3, r3, #1
   1329c:	cmp	r5, r7
   132a0:	movne	r5, r3
   132a4:	addeq	r5, r3, #1
   132a8:	ldr	r3, [r2]
   132ac:	ldr	r2, [sp, #20]
   132b0:	add	r6, r6, r5, lsl #2
   132b4:	sub	r2, r6, r2
   132b8:	cmp	r2, r3
   132bc:	bls	131f4 <__printf_chk@plt+0xa84>
   132c0:	movw	r3, #65044	; 0xfe14
   132c4:	movt	r3, #4
   132c8:	movw	r0, #25776	; 0x64b0
   132cc:	mov	r2, #37	; 0x25
   132d0:	ldr	r3, [r3]
   132d4:	movt	r0, #3
   132d8:	mov	r1, #1
   132dc:	add	sp, sp, #28
   132e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132e4:	b	12578 <fwrite@plt>
   132e8:	movw	r3, #65044	; 0xfe14
   132ec:	movt	r3, #4
   132f0:	movw	r0, #25836	; 0x64ec
   132f4:	mov	r2, #30
   132f8:	ldr	r3, [r3]
   132fc:	movt	r0, #3
   13300:	mov	r1, #1
   13304:	add	sp, sp, #28
   13308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1330c:	b	12578 <fwrite@plt>
   13310:	ldr	ip, [r6, #8]
   13314:	movw	r2, #25740	; 0x648c
   13318:	ldr	r3, [r6, #4]
   1331c:	movt	r2, #3
   13320:	ldr	r0, [sl]
   13324:	mov	r1, #1
   13328:	str	ip, [sp]
   1332c:	add	r6, r6, #12
   13330:	bl	122b4 <__fprintf_chk@plt>
   13334:	ldr	r3, [r6, #-4]
   13338:	bic	r3, r3, #3
   1333c:	add	r6, r6, r3
   13340:	ldr	r5, [r6]
   13344:	cmp	r5, fp
   13348:	bne	13200 <__printf_chk@plt+0xa90>
   1334c:	add	sp, sp, #28
   13350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13354:	andeq	r6, r3, r0, lsr #4
   13358:	subs	r0, r0, #18
   1335c:	movne	r0, #1
   13360:	bx	lr
   13364:	push	{r4, lr}
   13368:	sub	r2, r0, #4
   1336c:	add	ip, r0, #204	; 0xcc
   13370:	b	1337c <__printf_chk@plt+0xc0c>
   13374:	cmp	r2, ip
   13378:	beq	133ec <__printf_chk@plt+0xc7c>
   1337c:	ldr	r3, [r2, #4]!
   13380:	lsr	r3, r3, #28
   13384:	cmp	r3, #12
   13388:	beq	13374 <__printf_chk@plt+0xc04>
   1338c:	mov	ip, #61440	; 0xf000
   13390:	mov	r2, #0
   13394:	mov	lr, ip
   13398:	movt	ip, #65535	; 0xffff
   1339c:	movt	lr, #58783	; 0xe59f
   133a0:	cmp	r2, #5
   133a4:	beq	133cc <__printf_chk@plt+0xc5c>
   133a8:	ldr	r3, [r0, r2, lsl #2]
   133ac:	and	r4, r3, #-16777216	; 0xff000000
   133b0:	and	r3, r3, ip
   133b4:	cmp	r4, #-369098752	; 0xea000000
   133b8:	beq	133d4 <__printf_chk@plt+0xc64>
   133bc:	cmp	r3, lr
   133c0:	beq	133d4 <__printf_chk@plt+0xc64>
   133c4:	mov	r0, #1
   133c8:	pop	{r4, pc}
   133cc:	add	r2, r2, #1
   133d0:	b	133a0 <__printf_chk@plt+0xc30>
   133d4:	cmp	r2, #6
   133d8:	bne	133cc <__printf_chk@plt+0xc5c>
   133dc:	ldr	r0, [r0, #20]
   133e0:	subs	r0, r0, r1
   133e4:	movne	r0, #1
   133e8:	pop	{r4, pc}
   133ec:	add	r0, r0, #208	; 0xd0
   133f0:	sub	r1, r1, #208	; 0xd0
   133f4:	b	1338c <__printf_chk@plt+0xc1c>
   133f8:	ldr	ip, [r1, #44]	; 0x2c
   133fc:	sub	r2, r0, #4
   13400:	add	r1, r0, #204	; 0xcc
   13404:	b	13410 <__printf_chk@plt+0xca0>
   13408:	cmp	r2, r1
   1340c:	beq	1342c <__printf_chk@plt+0xcbc>
   13410:	ldr	r3, [r2, #4]!
   13414:	lsr	r3, r3, #28
   13418:	cmp	r3, #12
   1341c:	beq	13408 <__printf_chk@plt+0xc98>
   13420:	mov	r3, #20
   13424:	str	ip, [r0, r3]
   13428:	bx	lr
   1342c:	mov	r3, #228	; 0xe4
   13430:	sub	ip, ip, #208	; 0xd0
   13434:	str	ip, [r0, r3]
   13438:	bx	lr
   1343c:	push	{r4, r5, r6, lr}
   13440:	sub	r3, r0, #4
   13444:	mov	r5, r0
   13448:	add	r2, r0, #204	; 0xcc
   1344c:	b	13458 <__printf_chk@plt+0xce8>
   13450:	cmp	r2, r3
   13454:	beq	13490 <__printf_chk@plt+0xd20>
   13458:	ldr	r4, [r3, #4]!
   1345c:	lsr	r4, r4, #28
   13460:	cmp	r4, #12
   13464:	beq	13450 <__printf_chk@plt+0xce0>
   13468:	movw	r0, #26564	; 0x67c4
   1346c:	movt	r0, #3
   13470:	bl	1226c <puts@plt>
   13474:	mov	r3, #20
   13478:	ldr	r2, [r5, r3]
   1347c:	movw	r1, #26448	; 0x6750
   13480:	mov	r0, #1
   13484:	movt	r1, #3
   13488:	pop	{r4, r5, r6, lr}
   1348c:	b	12770 <__printf_chk@plt>
   13490:	movw	r0, #26476	; 0x676c
   13494:	movt	r0, #3
   13498:	bl	1226c <puts@plt>
   1349c:	ldr	r6, [r5]
   134a0:	movw	r0, #26528	; 0x67a0
   134a4:	movt	r0, #3
   134a8:	bl	1226c <puts@plt>
   134ac:	movw	r0, #26424	; 0x6738
   134b0:	movt	r0, #3
   134b4:	bl	1226c <puts@plt>
   134b8:	ubfx	r2, r6, #18, #9
   134bc:	movw	r1, #26544	; 0x67b0
   134c0:	mov	r0, #1
   134c4:	movt	r1, #3
   134c8:	bl	12770 <__printf_chk@plt>
   134cc:	tst	r6, #196608	; 0x30000
   134d0:	movw	r1, #26320	; 0x66d0
   134d4:	mov	r0, #1
   134d8:	movne	r2, #1024	; 0x400
   134dc:	moveq	r2, #512	; 0x200
   134e0:	movt	r1, #3
   134e4:	bl	12770 <__printf_chk@plt>
   134e8:	ubfx	r3, r6, #13, #3
   134ec:	cmp	r3, #2
   134f0:	subhi	r2, r3, #3
   134f4:	lslhi	r2, r4, r2
   134f8:	bls	13564 <__printf_chk@plt+0xdf4>
   134fc:	movw	r1, #26340	; 0x66e4
   13500:	mov	r0, #1
   13504:	movt	r1, #3
   13508:	bl	12770 <__printf_chk@plt>
   1350c:	ubfx	r2, r6, #4, #9
   13510:	mov	r0, #1
   13514:	movw	r1, #26360	; 0x66f8
   13518:	movt	r1, #3
   1351c:	mov	r4, r0
   13520:	bl	12770 <__printf_chk@plt>
   13524:	ubfx	r2, r6, #1, #2
   13528:	lsl	r2, r4, r2
   1352c:	mov	r0, r4
   13530:	movw	r1, #26380	; 0x670c
   13534:	movt	r1, #3
   13538:	bl	12770 <__printf_chk@plt>
   1353c:	and	r2, r6, r4
   13540:	mov	r0, r4
   13544:	movw	r1, #26404	; 0x6724
   13548:	movt	r1, #3
   1354c:	bl	12770 <__printf_chk@plt>
   13550:	movw	r0, #26424	; 0x6738
   13554:	movt	r0, #3
   13558:	bl	1226c <puts@plt>
   1355c:	mov	r3, #228	; 0xe4
   13560:	b	13478 <__printf_chk@plt+0xd08>
   13564:	mov	r2, #2
   13568:	lsl	r2, r2, r3
   1356c:	b	134fc <__printf_chk@plt+0xd8c>
   13570:	ldr	r3, [r0, #64]	; 0x40
   13574:	ldrb	r0, [r3]
   13578:	cmp	r0, #0
   1357c:	bxeq	lr
   13580:	movw	ip, #65060	; 0xfe24
   13584:	movt	ip, #4
   13588:	mov	r2, #0
   1358c:	movt	r2, #2044	; 0x7fc
   13590:	ldr	r3, [ip, #16]
   13594:	ldr	r0, [ip, #20]
   13598:	cmp	r3, #512	; 0x200
   1359c:	push	{r4, lr}
   135a0:	and	r2, r2, r0, lsl #18
   135a4:	beq	135dc <__printf_chk@plt+0xe6c>
   135a8:	cmp	r3, #1024	; 0x400
   135ac:	orreq	r0, r2, #-1073741824	; 0xc0000000
   135b0:	orreq	r0, r0, #65536	; 0x10000
   135b4:	beq	135e0 <__printf_chk@plt+0xe70>
   135b8:	movw	r1, #65044	; 0xfe14
   135bc:	movt	r1, #4
   135c0:	movw	r2, #26620	; 0x67fc
   135c4:	movt	r2, #3
   135c8:	ldr	r0, [r1]
   135cc:	mov	r1, #1
   135d0:	bl	122b4 <__fprintf_chk@plt>
   135d4:	mov	r0, #1
   135d8:	pop	{r4, pc}
   135dc:	orr	r0, r2, #-1073741824	; 0xc0000000
   135e0:	ldr	r3, [ip, #12]
   135e4:	sub	r2, r3, #2
   135e8:	cmp	r2, #22
   135ec:	ldrls	pc, [pc, r2, lsl #2]
   135f0:	b	1371c <__printf_chk@plt+0xfac>
   135f4:	andeq	r3, r1, r4, asr r6
   135f8:	andeq	r3, r1, ip, lsl r7
   135fc:	strdeq	r3, [r1], -r0
   13600:	andeq	r3, r1, ip, lsl r7
   13604:	andeq	r3, r1, ip, lsl r7
   13608:	andeq	r3, r1, ip, lsl r7
   1360c:	andeq	r3, r1, r8, ror #13
   13610:	andeq	r3, r1, ip, lsl r7
   13614:	andeq	r3, r1, ip, lsl r7
   13618:	andeq	r3, r1, ip, lsl r7
   1361c:	andeq	r3, r1, r0, asr r6
   13620:	andeq	r3, r1, ip, lsl r7
   13624:	andeq	r3, r1, ip, lsl r7
   13628:	andeq	r3, r1, ip, lsl r7
   1362c:	andeq	r3, r1, ip, lsl r7
   13630:	andeq	r3, r1, ip, lsl r7
   13634:	andeq	r3, r1, ip, lsl r7
   13638:	andeq	r3, r1, ip, lsl r7
   1363c:	andeq	r3, r1, ip, lsl r7
   13640:	andeq	r3, r1, ip, lsl r7
   13644:	andeq	r3, r1, ip, lsl r7
   13648:	andeq	r3, r1, ip, lsl r7
   1364c:	andeq	r3, r1, r0, ror #13
   13650:	orr	r0, r0, #24576	; 0x6000
   13654:	ldr	lr, [ip, #8]
   13658:	movw	r2, #8176	; 0x1ff0
   1365c:	ldr	r3, [ip, #4]
   13660:	and	r2, r2, lr, lsl #4
   13664:	sub	lr, r3, #1
   13668:	orr	r2, r2, r0
   1366c:	cmp	lr, #7
   13670:	ldrls	pc, [pc, lr, lsl #2]
   13674:	b	136f8 <__printf_chk@plt+0xf88>
   13678:	muleq	r1, ip, r6
   1367c:	ldrdeq	r3, [r1], -r8
   13680:	strdeq	r3, [r1], -r8
   13684:	muleq	r1, r8, r6
   13688:	strdeq	r3, [r1], -r8
   1368c:	strdeq	r3, [r1], -r8
   13690:	strdeq	r3, [r1], -r8
   13694:	ldrdeq	r3, [r1], -r0
   13698:	orr	r2, r2, #4
   1369c:	ldr	r3, [ip]
   136a0:	cmp	r3, #0
   136a4:	ldr	r3, [pc, #148]	; 13740 <__printf_chk@plt+0xfd0>
   136a8:	orrne	r2, r2, #1
   136ac:	add	r0, r3, #208	; 0xd0
   136b0:	str	r2, [r3, #4]!
   136b4:	cmp	r3, r0
   136b8:	bne	136b0 <__printf_chk@plt+0xf40>
   136bc:	ldr	r3, [pc, #128]	; 13744 <__printf_chk@plt+0xfd4>
   136c0:	mov	r2, #208	; 0xd0
   136c4:	mov	r0, #0
   136c8:	strd	r2, [r1, #4]
   136cc:	pop	{r4, pc}
   136d0:	orr	r2, r2, #6
   136d4:	b	1369c <__printf_chk@plt+0xf2c>
   136d8:	orr	r2, r2, #2
   136dc:	b	1369c <__printf_chk@plt+0xf2c>
   136e0:	orr	r0, r0, #32768	; 0x8000
   136e4:	b	13654 <__printf_chk@plt+0xee4>
   136e8:	orr	r0, r0, #16384	; 0x4000
   136ec:	b	13654 <__printf_chk@plt+0xee4>
   136f0:	orr	r0, r0, #8192	; 0x2000
   136f4:	b	13654 <__printf_chk@plt+0xee4>
   136f8:	movw	r1, #65044	; 0xfe14
   136fc:	movt	r1, #4
   13700:	movw	r2, #26736	; 0x6870
   13704:	movt	r2, #3
   13708:	ldr	r0, [r1]
   1370c:	mov	r1, #1
   13710:	bl	122b4 <__fprintf_chk@plt>
   13714:	mov	r0, #1
   13718:	pop	{r4, pc}
   1371c:	movw	r1, #65044	; 0xfe14
   13720:	movt	r1, #4
   13724:	movw	r2, #26680	; 0x6838
   13728:	movt	r2, #3
   1372c:	ldr	r0, [r1]
   13730:	mov	r1, #1
   13734:	bl	122b4 <__fprintf_chk@plt>
   13738:	mov	r0, #1
   1373c:	pop	{r4, pc}
   13740:	andeq	pc, r4, r8, lsr lr	; <UNPREDICTABLE>
   13744:	andeq	pc, r4, ip, lsr lr	; <UNPREDICTABLE>
   13748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1374c:	mov	r7, r0
   13750:	ldr	r0, [r0, #64]	; 0x40
   13754:	ldrb	r3, [r0]
   13758:	cmp	r3, #0
   1375c:	bne	137a8 <__printf_chk@plt+0x1038>
   13760:	ldr	r3, [r7, #4]
   13764:	cmp	r3, #0
   13768:	bne	137a0 <__printf_chk@plt+0x1030>
   1376c:	ldr	r3, [r7, #8]
   13770:	cmp	r3, #0
   13774:	bne	137a0 <__printf_chk@plt+0x1030>
   13778:	ldr	r3, [r7, #28]
   1377c:	cmp	r3, #0
   13780:	bne	137a0 <__printf_chk@plt+0x1030>
   13784:	ldr	r3, [r7]
   13788:	ldr	r0, [r7, #16]
   1378c:	cmp	r3, #0
   13790:	beq	13908 <__printf_chk@plt+0x1198>
   13794:	adds	r0, r0, #0
   13798:	movne	r0, #1
   1379c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137a0:	mov	r0, #1
   137a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137a8:	movw	r1, #26812	; 0x68bc
   137ac:	movt	r1, #3
   137b0:	bl	12278 <strtok@plt>
   137b4:	subs	r6, r0, #0
   137b8:	beq	13760 <__printf_chk@plt+0xff0>
   137bc:	movw	r8, #26800	; 0x68b0
   137c0:	movw	r9, #26296	; 0x66b8
   137c4:	movt	r8, #3
   137c8:	movt	r9, #3
   137cc:	mov	r2, #8
   137d0:	mov	r5, r8
   137d4:	mov	r4, #0
   137d8:	mov	r1, r5
   137dc:	mov	r0, r6
   137e0:	bl	1217c <strncmp@plt>
   137e4:	cmp	r0, #0
   137e8:	bne	138ac <__printf_chk@plt+0x113c>
   137ec:	mov	r1, #61	; 0x3d
   137f0:	mov	r0, r6
   137f4:	bl	12764 <strchr@plt>
   137f8:	cmp	r0, #0
   137fc:	beq	138cc <__printf_chk@plt+0x115c>
   13800:	sub	r4, r4, #1
   13804:	add	r0, r0, #1
   13808:	mov	r2, #10
   1380c:	mov	r1, #0
   13810:	cmp	r4, #4
   13814:	ldrls	pc, [pc, r4, lsl #2]
   13818:	b	13870 <__printf_chk@plt+0x1100>
   1381c:	andeq	r3, r1, ip, asr r8
   13820:	andeq	r3, r1, r0, lsr r8
   13824:	muleq	r1, r8, r8
   13828:	andeq	r3, r1, r4, lsl #17
   1382c:	strdeq	r3, [r1], -r4
   13830:	bl	1211c <strtol@plt>
   13834:	movw	r3, #65060	; 0xfe24
   13838:	movt	r3, #4
   1383c:	str	r0, [r3, #8]
   13840:	movw	r1, #26812	; 0x68bc
   13844:	mov	r0, #0
   13848:	movt	r1, #3
   1384c:	bl	12278 <strtok@plt>
   13850:	subs	r6, r0, #0
   13854:	bne	137cc <__printf_chk@plt+0x105c>
   13858:	b	13760 <__printf_chk@plt+0xff0>
   1385c:	bl	1211c <strtol@plt>
   13860:	movw	r3, #65060	; 0xfe24
   13864:	movt	r3, #4
   13868:	str	r0, [r3, #4]
   1386c:	b	13840 <__printf_chk@plt+0x10d0>
   13870:	bl	1211c <strtol@plt>
   13874:	movw	r3, #65060	; 0xfe24
   13878:	movt	r3, #4
   1387c:	str	r0, [r3]
   13880:	b	13840 <__printf_chk@plt+0x10d0>
   13884:	bl	1211c <strtol@plt>
   13888:	movw	r3, #65060	; 0xfe24
   1388c:	movt	r3, #4
   13890:	str	r0, [r3, #16]
   13894:	b	13840 <__printf_chk@plt+0x10d0>
   13898:	bl	1211c <strtol@plt>
   1389c:	movw	r3, #65060	; 0xfe24
   138a0:	movt	r3, #4
   138a4:	str	r0, [r3, #12]
   138a8:	b	13840 <__printf_chk@plt+0x10d0>
   138ac:	add	r4, r4, #1
   138b0:	cmp	r4, #6
   138b4:	beq	138cc <__printf_chk@plt+0x115c>
   138b8:	ldr	r5, [r9, r4, lsl #2]
   138bc:	mov	r0, r5
   138c0:	bl	125c0 <strlen@plt>
   138c4:	mov	r2, r0
   138c8:	b	137d8 <__printf_chk@plt+0x1068>
   138cc:	movw	r1, #65044	; 0xfe14
   138d0:	movt	r1, #4
   138d4:	mov	r3, r6
   138d8:	movw	r2, #26816	; 0x68c0
   138dc:	ldr	r0, [r1]
   138e0:	movt	r2, #3
   138e4:	mov	r1, #1
   138e8:	bl	122b4 <__fprintf_chk@plt>
   138ec:	mov	r0, #1
   138f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138f4:	bl	1211c <strtol@plt>
   138f8:	movw	r3, #65060	; 0xfe24
   138fc:	movt	r3, #4
   13900:	str	r0, [r3, #20]
   13904:	b	13840 <__printf_chk@plt+0x10d0>
   13908:	clz	r0, r0
   1390c:	lsr	r0, r0, #5
   13910:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13914:	push	{r4, lr}
   13918:	mov	r4, r0
   1391c:	bl	2d674 <crc32@@Base+0x13ed0>
   13920:	cmp	r0, #0
   13924:	beq	13930 <__printf_chk@plt+0x11c0>
   13928:	mov	r0, #1
   1392c:	pop	{r4, pc}
   13930:	mov	r0, r4
   13934:	bl	17d58 <__printf_chk@plt+0x55e8>
   13938:	clz	r0, r0
   1393c:	lsr	r0, r0, #5
   13940:	pop	{r4, pc}
   13944:	subs	r0, r0, #8
   13948:	movne	r0, #1
   1394c:	bx	lr
   13950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13954:	sub	sp, sp, #12
   13958:	mov	r5, r1
   1395c:	mov	r9, r0
   13960:	ldrb	r6, [sp, #56]	; 0x38
   13964:	mov	r0, r1
   13968:	mov	sl, r2
   1396c:	mov	fp, r3
   13970:	cmp	r6, #0
   13974:	ldrb	r8, [sp, #52]	; 0x34
   13978:	moveq	r1, #2
   1397c:	movne	r1, #0
   13980:	bl	12188 <__open_2@plt>
   13984:	mov	r4, r0
   13988:	bl	1268c <__errno_location@plt>
   1398c:	cmp	r4, #0
   13990:	mov	r7, r0
   13994:	blt	13a54 <__printf_chk@plt+0x12e4>
   13998:	ldr	r2, [sp, #48]	; 0x30
   1399c:	mov	r1, r4
   139a0:	mov	r0, #3
   139a4:	bl	12554 <__fxstat@plt>
   139a8:	cmp	r0, #0
   139ac:	blt	13ad0 <__printf_chk@plt+0x1360>
   139b0:	ldr	r3, [sp, #48]	; 0x30
   139b4:	cmp	sl, #0
   139b8:	ldr	r1, [r3, #44]	; 0x2c
   139bc:	bne	13aac <__printf_chk@plt+0x133c>
   139c0:	cmp	r6, #0
   139c4:	mov	r3, #0
   139c8:	mov	r0, r3
   139cc:	str	r3, [r7]
   139d0:	moveq	r2, #3
   139d4:	movne	r2, #1
   139d8:	str	r3, [sp, #4]
   139dc:	mov	r3, #1
   139e0:	str	r4, [sp]
   139e4:	bl	123ec <mmap@plt>
   139e8:	ldr	r2, [r7]
   139ec:	cmn	r0, #1
   139f0:	mov	r6, r0
   139f4:	beq	13a00 <__printf_chk@plt+0x1290>
   139f8:	cmp	r2, #0
   139fc:	beq	13b08 <__printf_chk@plt+0x1398>
   13a00:	movw	r3, #65044	; 0xfe14
   13a04:	movt	r3, #4
   13a08:	mov	r0, r2
   13a0c:	ldr	r6, [r3]
   13a10:	bl	12200 <strerror@plt>
   13a14:	movw	r2, #26996	; 0x6974
   13a18:	str	r5, [sp]
   13a1c:	mov	r3, r9
   13a20:	movt	r2, #3
   13a24:	mov	r1, #1
   13a28:	str	r0, [sp, #4]
   13a2c:	mov	r0, r6
   13a30:	bl	122b4 <__fprintf_chk@plt>
   13a34:	mov	r0, r4
   13a38:	bl	12314 <close@plt>
   13a3c:	cmp	r8, #0
   13a40:	mvneq	r4, #0
   13a44:	bne	13a94 <__printf_chk@plt+0x1324>
   13a48:	mov	r0, r4
   13a4c:	add	sp, sp, #12
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a54:	movw	r3, #65044	; 0xfe14
   13a58:	movt	r3, #4
   13a5c:	ldr	r0, [r0]
   13a60:	ldr	r4, [r3]
   13a64:	bl	12200 <strerror@plt>
   13a68:	str	r5, [sp]
   13a6c:	mov	r3, r9
   13a70:	movw	r2, #25392	; 0x6330
   13a74:	mov	r1, #1
   13a78:	movt	r2, #3
   13a7c:	str	r0, [sp, #4]
   13a80:	mov	r0, r4
   13a84:	bl	122b4 <__fprintf_chk@plt>
   13a88:	cmp	r8, #0
   13a8c:	mvneq	r4, #0
   13a90:	beq	13a48 <__printf_chk@plt+0x12d8>
   13a94:	mov	r0, r5
   13a98:	mvn	r4, #0
   13a9c:	bl	123a4 <unlink@plt>
   13aa0:	mov	r0, r4
   13aa4:	add	sp, sp, #12
   13aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aac:	add	r1, sl, r1
   13ab0:	mov	r0, r4
   13ab4:	str	r1, [r3, #44]	; 0x2c
   13ab8:	bl	1208c <ftruncate@plt>
   13abc:	cmp	r0, #0
   13ac0:	bne	13b24 <__printf_chk@plt+0x13b4>
   13ac4:	ldr	r3, [sp, #48]	; 0x30
   13ac8:	ldr	r1, [r3, #44]	; 0x2c
   13acc:	b	139c0 <__printf_chk@plt+0x1250>
   13ad0:	movw	r3, #65044	; 0xfe14
   13ad4:	movt	r3, #4
   13ad8:	ldr	r0, [r7]
   13adc:	ldr	r6, [r3]
   13ae0:	bl	12200 <strerror@plt>
   13ae4:	str	r5, [sp]
   13ae8:	mov	r3, r9
   13aec:	movw	r2, #25416	; 0x6348
   13af0:	mov	r1, #1
   13af4:	movt	r2, #3
   13af8:	str	r0, [sp, #4]
   13afc:	mov	r0, r6
   13b00:	bl	122b4 <__fprintf_chk@plt>
   13b04:	b	13a34 <__printf_chk@plt+0x12c4>
   13b08:	bl	2d674 <crc32@@Base+0x13ed0>
   13b0c:	cmp	r0, #0
   13b10:	bne	13b5c <__printf_chk@plt+0x13ec>
   13b14:	cmp	sl, #0
   13b18:	bne	13b80 <__printf_chk@plt+0x1410>
   13b1c:	str	r6, [fp]
   13b20:	b	13a48 <__printf_chk@plt+0x12d8>
   13b24:	movw	r3, #65044	; 0xfe14
   13b28:	movt	r3, #4
   13b2c:	ldr	r0, [r7]
   13b30:	ldr	r6, [r3]
   13b34:	bl	12200 <strerror@plt>
   13b38:	str	r5, [sp]
   13b3c:	mov	r3, r9
   13b40:	movw	r2, #26968	; 0x6958
   13b44:	mov	r1, #1
   13b48:	movt	r2, #3
   13b4c:	str	r0, [sp, #4]
   13b50:	mov	r0, r6
   13b54:	bl	122b4 <__fprintf_chk@plt>
   13b58:	b	13a34 <__printf_chk@plt+0x12c4>
   13b5c:	movw	r1, #65044	; 0xfe14
   13b60:	movt	r1, #4
   13b64:	mov	r3, r9
   13b68:	movw	r2, #27020	; 0x698c
   13b6c:	ldr	r0, [r1]
   13b70:	movt	r2, #3
   13b74:	mov	r1, #1
   13b78:	bl	122b4 <__fprintf_chk@plt>
   13b7c:	b	13a34 <__printf_chk@plt+0x12c4>
   13b80:	ldr	r3, [sp, #48]	; 0x30
   13b84:	mov	r1, r6
   13b88:	mov	r0, r6
   13b8c:	ldr	r2, [r3, #44]	; 0x2c
   13b90:	bl	2f3e8 <crc32@@Base+0x15c44>
   13b94:	cmp	r0, #0
   13b98:	beq	13b1c <__printf_chk@plt+0x13ac>
   13b9c:	movw	r3, #65044	; 0xfe14
   13ba0:	movt	r3, #4
   13ba4:	ldr	r6, [r3]
   13ba8:	bl	2f808 <crc32@@Base+0x16064>
   13bac:	mov	r3, r9
   13bb0:	movw	r2, #27044	; 0x69a4
   13bb4:	mov	r1, #1
   13bb8:	movt	r2, #3
   13bbc:	str	r0, [sp]
   13bc0:	mov	r0, r6
   13bc4:	bl	122b4 <__fprintf_chk@plt>
   13bc8:	b	13a34 <__printf_chk@plt+0x12c4>
   13bcc:	push	{r2, r3}
   13bd0:	mov	r3, #100	; 0x64
   13bd4:	push	{r4, r5, r6, lr}
   13bd8:	sub	sp, sp, #120	; 0x78
   13bdc:	movw	r4, #61168	; 0xeef0
   13be0:	movt	r4, #4
   13be4:	ldr	r2, [sp, #136]	; 0x88
   13be8:	add	ip, sp, #140	; 0x8c
   13bec:	ldr	lr, [r4]
   13bf0:	mov	r5, r0
   13bf4:	str	ip, [sp, #4]
   13bf8:	mov	r6, r1
   13bfc:	str	r2, [sp]
   13c00:	mov	r1, r3
   13c04:	mov	r2, #1
   13c08:	add	r0, sp, #16
   13c0c:	str	lr, [sp, #116]	; 0x74
   13c10:	str	ip, [sp, #12]
   13c14:	bl	12230 <__vsnprintf_chk@plt>
   13c18:	add	r0, sp, #16
   13c1c:	bl	125c0 <strlen@plt>
   13c20:	add	r2, sp, #16
   13c24:	mov	r1, r6
   13c28:	add	r3, r0, #1
   13c2c:	mov	r0, r5
   13c30:	bl	2e4b8 <crc32@@Base+0x14d14>
   13c34:	ldr	r2, [sp, #116]	; 0x74
   13c38:	ldr	r3, [r4]
   13c3c:	cmp	r2, r3
   13c40:	bne	13c54 <__printf_chk@plt+0x14e4>
   13c44:	add	sp, sp, #120	; 0x78
   13c48:	pop	{r4, r5, r6, lr}
   13c4c:	add	sp, sp, #8
   13c50:	bx	lr
   13c54:	bl	12494 <__stack_chk_fail@plt>
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c5c:	movw	r9, #61168	; 0xeef0
   13c60:	movt	r9, #4
   13c64:	sub	sp, sp, #24
   13c68:	mov	r8, r1
   13c6c:	mov	r7, r0
   13c70:	ldr	r3, [r9]
   13c74:	str	r3, [sp, #20]
   13c78:	bl	17d58 <__printf_chk@plt+0x55e8>
   13c7c:	cmp	r0, #0
   13c80:	beq	13dcc <__printf_chk@plt+0x165c>
   13c84:	movw	r1, #27112	; 0x69e8
   13c88:	mov	r0, r7
   13c8c:	movt	r1, #3
   13c90:	bl	312a8 <crc32@@Base+0x17b04>
   13c94:	subs	r4, r0, #0
   13c98:	blt	13de0 <__printf_chk@plt+0x1670>
   13c9c:	mov	r1, r4
   13ca0:	mov	r0, r7
   13ca4:	bl	16314 <__printf_chk@plt+0x3ba4>
   13ca8:	ldr	r2, [r8, #20]
   13cac:	cmp	r2, r0
   13cb0:	movlt	r0, #0
   13cb4:	movge	r0, #1
   13cb8:	orrs	r5, r0, r2, lsr #31
   13cbc:	bne	13db4 <__printf_chk@plt+0x1644>
   13cc0:	add	sl, sp, #24
   13cc4:	mov	r1, r4
   13cc8:	mov	r0, r7
   13ccc:	str	r5, [sl, #-16]!
   13cd0:	mov	r2, sl
   13cd4:	bl	2d9d0 <crc32@@Base+0x1422c>
   13cd8:	subs	r6, r0, #0
   13cdc:	bge	13d14 <__printf_chk@plt+0x15a4>
   13ce0:	b	13d20 <__printf_chk@plt+0x15b0>
   13ce4:	cmp	r4, #1
   13ce8:	bne	13cfc <__printf_chk@plt+0x158c>
   13cec:	ldr	r3, [r8, #20]
   13cf0:	cmp	r3, r5
   13cf4:	beq	13d3c <__printf_chk@plt+0x15cc>
   13cf8:	add	r5, r5, #1
   13cfc:	mov	r1, r6
   13d00:	mov	r2, sl
   13d04:	mov	r0, r7
   13d08:	bl	2d9d0 <crc32@@Base+0x1422c>
   13d0c:	subs	r6, r0, #0
   13d10:	blt	13d20 <__printf_chk@plt+0x15b0>
   13d14:	ldr	r4, [sp, #8]
   13d18:	cmp	r4, #0
   13d1c:	bgt	13ce4 <__printf_chk@plt+0x1574>
   13d20:	mov	r0, #0
   13d24:	ldr	r2, [sp, #20]
   13d28:	ldr	r3, [r9]
   13d2c:	cmp	r2, r3
   13d30:	bne	13e08 <__printf_chk@plt+0x1698>
   13d34:	add	sp, sp, #24
   13d38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d3c:	mov	r1, r6
   13d40:	mov	r2, #0
   13d44:	mov	r0, r7
   13d48:	bl	30c4c <crc32@@Base+0x174a8>
   13d4c:	mov	r3, r5
   13d50:	movw	r2, #46108	; 0xb41c
   13d54:	movw	r1, #27192	; 0x6a38
   13d58:	movt	r2, #3
   13d5c:	movt	r1, #3
   13d60:	str	r0, [sp]
   13d64:	mov	r0, r4
   13d68:	bl	12770 <__printf_chk@plt>
   13d6c:	mov	r1, r6
   13d70:	mov	r0, r7
   13d74:	movw	r2, #46108	; 0xb41c
   13d78:	movt	r2, #3
   13d7c:	bl	16b58 <__printf_chk@plt+0x43e8>
   13d80:	ldr	r4, [r8, #84]	; 0x54
   13d84:	add	r3, sp, #24
   13d88:	mov	r1, r6
   13d8c:	mov	ip, #0
   13d90:	add	r2, sp, #12
   13d94:	mov	r0, r7
   13d98:	str	ip, [r3, #-8]!
   13d9c:	bl	16920 <__printf_chk@plt+0x41b0>
   13da0:	mov	r0, r4
   13da4:	ldr	r2, [sp, #16]
   13da8:	ldr	r1, [sp, #12]
   13dac:	bl	1a8c4 <crc32@@Base+0x1120>
   13db0:	b	13d24 <__printf_chk@plt+0x15b4>
   13db4:	movw	r1, #27164	; 0x6a1c
   13db8:	mov	r0, #1
   13dbc:	movt	r1, #3
   13dc0:	bl	12770 <__printf_chk@plt>
   13dc4:	mvn	r0, #0
   13dc8:	b	13d24 <__printf_chk@plt+0x15b4>
   13dcc:	movw	r0, #27088	; 0x69d0
   13dd0:	movt	r0, #3
   13dd4:	bl	1226c <puts@plt>
   13dd8:	mvn	r0, #0
   13ddc:	b	13d24 <__printf_chk@plt+0x15b4>
   13de0:	bl	2f808 <crc32@@Base+0x16064>
   13de4:	movw	r2, #27112	; 0x69e8
   13de8:	movw	r1, #27120	; 0x69f0
   13dec:	movt	r2, #3
   13df0:	movt	r1, #3
   13df4:	mov	r3, r0
   13df8:	mov	r0, #1
   13dfc:	bl	12770 <__printf_chk@plt>
   13e00:	mvn	r0, #0
   13e04:	b	13d24 <__printf_chk@plt+0x15b4>
   13e08:	bl	12494 <__stack_chk_fail@plt>
   13e0c:	ldrb	r2, [r0, #112]	; 0x70
   13e10:	mov	r3, r0
   13e14:	cmp	r2, #0
   13e18:	bne	13e5c <__printf_chk@plt+0x16ec>
   13e1c:	ldr	r2, [r0]
   13e20:	ldr	r0, [r0, #8]
   13e24:	cmp	r2, #0
   13e28:	beq	13e44 <__printf_chk@plt+0x16d4>
   13e2c:	cmp	r0, #0
   13e30:	bne	13e64 <__printf_chk@plt+0x16f4>
   13e34:	ldr	r0, [r3, #16]
   13e38:	adds	r0, r0, #0
   13e3c:	movne	r0, #1
   13e40:	bx	lr
   13e44:	cmp	r0, #0
   13e48:	ldr	r3, [r3, #16]
   13e4c:	bxeq	lr
   13e50:	adds	r0, r3, #0
   13e54:	movne	r0, #1
   13e58:	bx	lr
   13e5c:	mov	r0, #0
   13e60:	bx	lr
   13e64:	mov	r0, #1
   13e68:	bx	lr
   13e6c:	push	{r4, r5, r6, r7, r8, lr}
   13e70:	movw	r4, #61168	; 0xeef0
   13e74:	movt	r4, #4
   13e78:	sub	sp, sp, #112	; 0x70
   13e7c:	mov	r8, r0
   13e80:	mov	r7, r1
   13e84:	ldr	r3, [r4]
   13e88:	mov	r0, r2
   13e8c:	mov	r1, #2
   13e90:	mov	r6, r2
   13e94:	str	r3, [sp, #108]	; 0x6c
   13e98:	bl	12434 <open@plt>
   13e9c:	subs	r5, r0, #0
   13ea0:	blt	13fa8 <__printf_chk@plt+0x1838>
   13ea4:	add	r2, sp, #16
   13ea8:	mov	r1, r5
   13eac:	mov	r0, #3
   13eb0:	bl	12554 <__fxstat@plt>
   13eb4:	cmp	r0, #0
   13eb8:	blt	13f1c <__printf_chk@plt+0x17ac>
   13ebc:	mov	r0, r7
   13ec0:	movw	r1, #40604	; 0x9e9c
   13ec4:	add	r3, sp, #12
   13ec8:	movt	r1, #3
   13ecc:	ldr	r2, [sp, #60]	; 0x3c
   13ed0:	bl	2e2ec <crc32@@Base+0x14b48>
   13ed4:	subs	r7, r0, #0
   13ed8:	bne	13f58 <__printf_chk@plt+0x17e8>
   13edc:	ldr	r2, [sp, #60]	; 0x3c
   13ee0:	mov	r0, r5
   13ee4:	ldr	r1, [sp, #12]
   13ee8:	bl	12344 <read@plt>
   13eec:	ldr	r3, [sp, #60]	; 0x3c
   13ef0:	cmp	r0, r3
   13ef4:	bne	13f68 <__printf_chk@plt+0x17f8>
   13ef8:	mov	r0, r5
   13efc:	bl	12314 <close@plt>
   13f00:	ldr	r2, [sp, #108]	; 0x6c
   13f04:	mov	r0, r7
   13f08:	ldr	r3, [r4]
   13f0c:	cmp	r2, r3
   13f10:	bne	13fec <__printf_chk@plt+0x187c>
   13f14:	add	sp, sp, #112	; 0x70
   13f18:	pop	{r4, r5, r6, r7, r8, pc}
   13f1c:	movw	r2, #65044	; 0xfe14
   13f20:	movt	r2, #4
   13f24:	ldr	r8, [r8]
   13f28:	ldr	r7, [r2]
   13f2c:	bl	1268c <__errno_location@plt>
   13f30:	ldr	r0, [r0]
   13f34:	bl	12200 <strerror@plt>
   13f38:	movw	r2, #25416	; 0x6348
   13f3c:	mov	r3, r8
   13f40:	str	r6, [sp]
   13f44:	movt	r2, #3
   13f48:	mov	r1, #1
   13f4c:	str	r0, [sp, #4]
   13f50:	mov	r0, r7
   13f54:	bl	122b4 <__fprintf_chk@plt>
   13f58:	mov	r0, r5
   13f5c:	mvn	r7, #0
   13f60:	bl	12314 <close@plt>
   13f64:	b	13f00 <__printf_chk@plt+0x1790>
   13f68:	movw	r2, #65044	; 0xfe14
   13f6c:	movt	r2, #4
   13f70:	ldr	r8, [r8]
   13f74:	ldr	r7, [r2]
   13f78:	bl	1268c <__errno_location@plt>
   13f7c:	ldr	r0, [r0]
   13f80:	bl	12200 <strerror@plt>
   13f84:	mov	r3, r8
   13f88:	str	r6, [sp]
   13f8c:	movw	r2, #26996	; 0x6974
   13f90:	mov	r1, #1
   13f94:	movt	r2, #3
   13f98:	str	r0, [sp, #4]
   13f9c:	mov	r0, r7
   13fa0:	bl	122b4 <__fprintf_chk@plt>
   13fa4:	b	13f58 <__printf_chk@plt+0x17e8>
   13fa8:	movw	r2, #65044	; 0xfe14
   13fac:	movt	r2, #4
   13fb0:	ldr	r8, [r8]
   13fb4:	mvn	r7, #0
   13fb8:	ldr	r5, [r2]
   13fbc:	bl	1268c <__errno_location@plt>
   13fc0:	ldr	r0, [r0]
   13fc4:	bl	12200 <strerror@plt>
   13fc8:	mov	r3, r8
   13fcc:	str	r6, [sp]
   13fd0:	movw	r2, #25392	; 0x6330
   13fd4:	mov	r1, #1
   13fd8:	movt	r2, #3
   13fdc:	str	r0, [sp, #4]
   13fe0:	mov	r0, r5
   13fe4:	bl	122b4 <__fprintf_chk@plt>
   13fe8:	b	13f00 <__printf_chk@plt+0x1790>
   13fec:	bl	12494 <__stack_chk_fail@plt>
   13ff0:	push	{r4, r5, r6, r7, r8, lr}
   13ff4:	mov	r6, r1
   13ff8:	mov	r7, r0
   13ffc:	mov	r1, #47	; 0x2f
   14000:	mov	r0, r6
   14004:	bl	126ec <strrchr@plt>
   14008:	mov	r1, #46	; 0x2e
   1400c:	cmp	r0, #0
   14010:	addne	r5, r0, #1
   14014:	mov	r0, r6
   14018:	moveq	r5, r6
   1401c:	bl	126ec <strrchr@plt>
   14020:	cmp	r0, #0
   14024:	beq	14050 <__printf_chk@plt+0x18e0>
   14028:	sub	r4, r0, r5
   1402c:	mov	r1, r5
   14030:	cmp	r4, #99	; 0x63
   14034:	mov	r0, r7
   14038:	movge	r4, #99	; 0x63
   1403c:	mov	r2, r4
   14040:	bl	1259c <memcpy@plt>
   14044:	mov	r3, #0
   14048:	strb	r3, [r7, r4]
   1404c:	pop	{r4, r5, r6, r7, r8, pc}
   14050:	mov	r0, r6
   14054:	bl	125c0 <strlen@plt>
   14058:	add	r0, r6, r0
   1405c:	b	14028 <__printf_chk@plt+0x18b8>
   14060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14064:	movw	r3, #61168	; 0xeef0
   14068:	sub	sp, sp, #1020	; 0x3fc
   1406c:	movt	r3, #4
   14070:	ldr	r5, [r0, #76]	; 0x4c
   14074:	mov	r4, r0
   14078:	str	r3, [sp, #28]
   1407c:	ldr	r3, [r3]
   14080:	mov	r0, r5
   14084:	str	r3, [sp, #1012]	; 0x3f4
   14088:	bl	125c0 <strlen@plt>
   1408c:	add	r0, r0, #5
   14090:	cmp	r0, #256	; 0x100
   14094:	bhi	141e8 <__printf_chk@plt+0x1a78>
   14098:	str	r5, [sp]
   1409c:	movw	r2, #27288	; 0x6a98
   140a0:	movw	r3, #27280	; 0x6a90
   140a4:	movt	r2, #3
   140a8:	movt	r3, #3
   140ac:	str	r2, [sp, #4]
   140b0:	add	r0, sp, #244	; 0xf4
   140b4:	mov	r2, #256	; 0x100
   140b8:	mov	r1, #1
   140bc:	bl	126e0 <__sprintf_chk@plt>
   140c0:	ldrb	r3, [r4, #112]	; 0x70
   140c4:	cmp	r3, #0
   140c8:	bne	14218 <__printf_chk@plt+0x1aa8>
   140cc:	ldr	r2, [r4, #72]	; 0x48
   140d0:	cmp	r2, #0
   140d4:	beq	145bc <__printf_chk@plt+0x1e4c>
   140d8:	ldr	ip, [r4, #52]	; 0x34
   140dc:	add	r6, sp, #500	; 0x1f4
   140e0:	mov	r3, #512	; 0x200
   140e4:	str	r2, [sp, #16]
   140e8:	movw	r1, #27656	; 0x6c08
   140ec:	add	r2, sp, #244	; 0xf4
   140f0:	movt	r1, #3
   140f4:	str	r2, [sp, #12]
   140f8:	str	r1, [sp, #4]
   140fc:	movw	r2, #27660	; 0x6c0c
   14100:	mov	r0, r6
   14104:	movt	r2, #3
   14108:	str	ip, [sp, #8]
   1410c:	mov	r1, r3
   14110:	str	r2, [sp]
   14114:	mov	r2, #1
   14118:	bl	125cc <__snprintf_chk@plt>
   1411c:	ldrb	r3, [sp, #500]	; 0x1f4
   14120:	cmp	r3, #0
   14124:	beq	14138 <__printf_chk@plt+0x19c8>
   14128:	mov	r0, r6
   1412c:	bl	123c8 <system@plt>
   14130:	cmn	r0, #1
   14134:	beq	14e14 <__printf_chk@plt+0x26a4>
   14138:	add	fp, sp, #64	; 0x40
   1413c:	ldr	r0, [r4, #80]	; 0x50
   14140:	mov	r2, #0
   14144:	add	r1, sp, #152	; 0x98
   14148:	mov	r3, fp
   1414c:	str	r1, [sp]
   14150:	str	r2, [sp, #8]
   14154:	add	r1, sp, #244	; 0xf4
   14158:	str	r2, [sp, #4]
   1415c:	bl	13950 <__printf_chk@plt+0x11e0>
   14160:	subs	r8, r0, #0
   14164:	blt	141bc <__printf_chk@plt+0x1a4c>
   14168:	ldr	r6, [sp, #196]	; 0xc4
   1416c:	ldr	r9, [sp, #64]	; 0x40
   14170:	add	r6, r6, #16384	; 0x4000
   14174:	mov	r0, r6
   14178:	ldr	r7, [r9, #4]
   1417c:	bl	125a8 <malloc@plt>
   14180:	subs	r5, r0, #0
   14184:	beq	14320 <__printf_chk@plt+0x1bb0>
   14188:	mov	r2, r6
   1418c:	mov	r0, r9
   14190:	mov	r1, r5
   14194:	bl	2f3e8 <crc32@@Base+0x15c44>
   14198:	cmp	r0, #0
   1419c:	beq	1434c <__printf_chk@plt+0x1bdc>
   141a0:	mov	r0, r8
   141a4:	bl	12314 <close@plt>
   141a8:	ldr	r1, [sp, #196]	; 0xc4
   141ac:	ldr	r0, [sp, #64]	; 0x40
   141b0:	bl	125e4 <munmap@plt>
   141b4:	mov	r0, r5
   141b8:	bl	12128 <free@plt>
   141bc:	add	r0, sp, #244	; 0xf4
   141c0:	mvn	r8, #0
   141c4:	bl	123a4 <unlink@plt>
   141c8:	ldr	r3, [sp, #28]
   141cc:	mov	r0, r8
   141d0:	ldr	r2, [sp, #1012]	; 0x3f4
   141d4:	ldr	r3, [r3]
   141d8:	cmp	r2, r3
   141dc:	bne	14e54 <__printf_chk@plt+0x26e4>
   141e0:	add	sp, sp, #1020	; 0x3fc
   141e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141e8:	ldr	ip, [r4, #80]	; 0x50
   141ec:	movw	r2, #65044	; 0xfe14
   141f0:	movt	r2, #4
   141f4:	mov	r1, #1
   141f8:	mov	r3, r5
   141fc:	mov	r8, r1
   14200:	ldr	r0, [r2]
   14204:	movw	r2, #27224	; 0x6a58
   14208:	str	ip, [sp]
   1420c:	movt	r2, #3
   14210:	bl	122b4 <__fprintf_chk@plt>
   14214:	b	141c8 <__printf_chk@plt+0x1a58>
   14218:	ldr	r1, [r4, #72]	; 0x48
   1421c:	mov	r0, r4
   14220:	bl	1a994 <crc32@@Base+0x11f0>
   14224:	subs	r6, r0, #0
   14228:	blt	14284 <__printf_chk@plt+0x1b14>
   1422c:	ldr	r1, [r4, #120]	; 0x78
   14230:	cmp	r1, #0
   14234:	beq	1424c <__printf_chk@plt+0x1adc>
   14238:	mov	r0, r4
   1423c:	bl	1a994 <crc32@@Base+0x11f0>
   14240:	cmp	r0, #0
   14244:	addge	r6, r6, r0
   14248:	blt	14284 <__printf_chk@plt+0x1b14>
   1424c:	ldr	r5, [r4, #124]	; 0x7c
   14250:	cmp	r5, #0
   14254:	bne	14270 <__printf_chk@plt+0x1b00>
   14258:	b	142ac <__printf_chk@plt+0x1b3c>
   1425c:	ldr	r5, [r5]
   14260:	add	r0, r0, #300	; 0x12c
   14264:	add	r6, r6, r0
   14268:	cmp	r5, #0
   1426c:	beq	142ac <__printf_chk@plt+0x1b3c>
   14270:	ldr	r1, [r5, #8]
   14274:	mov	r0, r4
   14278:	bl	1a994 <crc32@@Base+0x11f0>
   1427c:	cmp	r0, #0
   14280:	bge	1425c <__printf_chk@plt+0x1aec>
   14284:	movw	r7, #65044	; 0xfe14
   14288:	movt	r7, #4
   1428c:	mov	r1, #1
   14290:	ldr	r3, [r4, #80]	; 0x50
   14294:	movw	r2, #27628	; 0x6bec
   14298:	ldr	r0, [r7]
   1429c:	movt	r2, #3
   142a0:	mov	r8, r1
   142a4:	bl	122b4 <__fprintf_chk@plt>
   142a8:	b	141c8 <__printf_chk@plt+0x1a58>
   142ac:	add	r6, r6, #4096	; 0x1000
   142b0:	mov	r0, r6
   142b4:	bl	125a8 <malloc@plt>
   142b8:	subs	r5, r0, #0
   142bc:	beq	14dec <__printf_chk@plt+0x267c>
   142c0:	mov	r1, r6
   142c4:	bl	2df58 <crc32@@Base+0x147b4>
   142c8:	subs	r7, r0, #0
   142cc:	beq	145f4 <__printf_chk@plt+0x1e84>
   142d0:	cmp	r7, #0
   142d4:	blt	14d84 <__printf_chk@plt+0x2614>
   142d8:	movw	r2, #438	; 0x1b6
   142dc:	movw	r1, #578	; 0x242
   142e0:	add	r0, sp, #244	; 0xf4
   142e4:	bl	12434 <open@plt>
   142e8:	subs	r6, r0, #0
   142ec:	blt	14da8 <__printf_chk@plt+0x2638>
   142f0:	mov	r2, r7
   142f4:	mov	r1, r5
   142f8:	bl	12608 <write@plt>
   142fc:	cmp	r0, r7
   14300:	bne	14d28 <__printf_chk@plt+0x25b8>
   14304:	mov	r0, r6
   14308:	bl	12314 <close@plt>
   1430c:	mov	r0, r5
   14310:	bl	12128 <free@plt>
   14314:	mov	r3, #0
   14318:	strb	r3, [sp, #500]	; 0x1f4
   1431c:	b	14138 <__printf_chk@plt+0x19c8>
   14320:	movw	r2, #65044	; 0xfe14
   14324:	movt	r2, #4
   14328:	str	r6, [sp]
   1432c:	movw	r3, #27072	; 0x69c0
   14330:	ldr	r0, [r2]
   14334:	movt	r3, #3
   14338:	movw	r2, #27724	; 0x6c4c
   1433c:	mov	r1, #1
   14340:	movt	r2, #3
   14344:	bl	122b4 <__fprintf_chk@plt>
   14348:	b	141a0 <__printf_chk@plt+0x1a30>
   1434c:	movw	r1, #27112	; 0x69e8
   14350:	mov	r0, r5
   14354:	movt	r1, #3
   14358:	bl	312a8 <crc32@@Base+0x17b04>
   1435c:	subs	r1, r0, #0
   14360:	blt	141a0 <__printf_chk@plt+0x1a30>
   14364:	mov	r0, r5
   14368:	bl	2dac0 <crc32@@Base+0x1431c>
   1436c:	subs	r6, r0, #0
   14370:	blt	14424 <__printf_chk@plt+0x1cb4>
   14374:	lsr	r2, r7, #24
   14378:	ubfx	r3, r7, #8, #8
   1437c:	orr	r2, r2, r7, lsl #24
   14380:	ubfx	r7, r7, #16, #8
   14384:	orr	r3, r2, r3, lsl #16
   14388:	movw	sl, #27768	; 0x6c78
   1438c:	orr	r7, r3, r7, lsl #8
   14390:	movw	r9, #27780	; 0x6c84
   14394:	add	r3, r7, #3
   14398:	movt	sl, #3
   1439c:	bic	r3, r3, #3
   143a0:	movt	r9, #3
   143a4:	str	r4, [sp, #32]
   143a8:	mov	r4, r3
   143ac:	mvn	r3, #0
   143b0:	mov	r2, sl
   143b4:	mov	r1, r6
   143b8:	mov	r0, r5
   143bc:	bl	19af0 <crc32@@Base+0x34c>
   143c0:	mvn	r3, #0
   143c4:	mov	r2, r9
   143c8:	mov	r1, r6
   143cc:	mov	r7, r0
   143d0:	mov	r0, r5
   143d4:	bl	19af0 <crc32@@Base+0x34c>
   143d8:	cmn	r7, #1
   143dc:	cmnne	r0, #1
   143e0:	beq	1440c <__printf_chk@plt+0x1c9c>
   143e4:	add	r3, r7, r4
   143e8:	str	r0, [sp]
   143ec:	add	r3, r5, r3
   143f0:	movw	r2, #40604	; 0x9e9c
   143f4:	mov	r1, r6
   143f8:	movt	r2, #3
   143fc:	mov	r0, r5
   14400:	bl	2f000 <crc32@@Base+0x1585c>
   14404:	cmp	r0, #0
   14408:	bne	141a0 <__printf_chk@plt+0x1a30>
   1440c:	mov	r1, r6
   14410:	mov	r0, r5
   14414:	bl	2db20 <crc32@@Base+0x1437c>
   14418:	subs	r6, r0, #0
   1441c:	bge	143ac <__printf_chk@plt+0x1c3c>
   14420:	ldr	r4, [sp, #32]
   14424:	mov	r0, r8
   14428:	bl	12314 <close@plt>
   1442c:	mov	r0, r5
   14430:	bl	2f654 <crc32@@Base+0x15eb0>
   14434:	movw	r2, #438	; 0x1b6
   14438:	movw	r1, #578	; 0x242
   1443c:	add	r0, sp, #244	; 0xf4
   14440:	ldr	r7, [r5, #4]
   14444:	bl	12434 <open@plt>
   14448:	subs	r8, r0, #0
   1444c:	blt	14c58 <__printf_chk@plt+0x24e8>
   14450:	ubfx	r3, r7, #8, #8
   14454:	lsr	r6, r7, #24
   14458:	orr	r6, r6, r7, lsl #24
   1445c:	ubfx	r7, r7, #16, #8
   14460:	orr	r6, r6, r3, lsl #16
   14464:	mov	r1, r5
   14468:	orr	r6, r6, r7, lsl #8
   1446c:	mov	r2, r6
   14470:	bl	12608 <write@plt>
   14474:	cmp	r6, r0
   14478:	bne	141a0 <__printf_chk@plt+0x1a30>
   1447c:	mov	r0, r8
   14480:	mov	r6, #0
   14484:	bl	12314 <close@plt>
   14488:	ldr	r1, [sp, #196]	; 0xc4
   1448c:	ldr	r0, [sp, #64]	; 0x40
   14490:	mov	r7, r6
   14494:	bl	125e4 <munmap@plt>
   14498:	mov	r0, r5
   1449c:	bl	12128 <free@plt>
   144a0:	b	14570 <__printf_chk@plt+0x1e00>
   144a4:	add	r3, sp, #152	; 0x98
   144a8:	str	r7, [sp, #8]
   144ac:	str	r3, [sp]
   144b0:	mov	r2, r6
   144b4:	str	r7, [sp, #4]
   144b8:	add	r3, sp, #56	; 0x38
   144bc:	bl	13950 <__printf_chk@plt+0x11e0>
   144c0:	subs	r5, r0, #0
   144c4:	blt	1498c <__printf_chk@plt+0x221c>
   144c8:	ldr	sl, [sp, #196]	; 0xc4
   144cc:	ldr	r0, [r4, #80]	; 0x50
   144d0:	ldr	r3, [r4, #72]	; 0x48
   144d4:	cmp	r3, #0
   144d8:	beq	14500 <__printf_chk@plt+0x1d90>
   144dc:	ldr	r1, [sp, #128]	; 0x80
   144e0:	bl	1aa98 <crc32@@Base+0x12f4>
   144e4:	mov	r1, #0
   144e8:	mov	r2, r0
   144ec:	ldr	r0, [sp, #60]	; 0x3c
   144f0:	bl	17538 <__printf_chk@plt+0x4dc8>
   144f4:	subs	r8, r0, #0
   144f8:	bne	1452c <__printf_chk@plt+0x1dbc>
   144fc:	ldr	r0, [r4, #80]	; 0x50
   14500:	ldr	r8, [r4, #88]	; 0x58
   14504:	ldr	lr, [r4, #140]	; 0x8c
   14508:	ldr	ip, [r4, #100]	; 0x64
   1450c:	ldr	r3, [r4, #96]	; 0x60
   14510:	ldr	r2, [sp, #60]	; 0x3c
   14514:	str	r0, [sp, #8]
   14518:	mov	r0, r8
   1451c:	ldr	r1, [sp, #56]	; 0x38
   14520:	stm	sp, {ip, lr}
   14524:	bl	15e7c <__printf_chk@plt+0x370c>
   14528:	mov	r8, r0
   1452c:	ldr	r0, [sp, #56]	; 0x38
   14530:	cmp	r0, #0
   14534:	beq	14548 <__printf_chk@plt+0x1dd8>
   14538:	mov	r1, sl
   1453c:	bl	125e4 <munmap@plt>
   14540:	mov	r0, r5
   14544:	bl	12314 <close@plt>
   14548:	ldr	r1, [sp, #108]	; 0x6c
   1454c:	ldr	r0, [sp, #60]	; 0x3c
   14550:	bl	125e4 <munmap@plt>
   14554:	mov	r0, r9
   14558:	bl	12314 <close@plt>
   1455c:	cmn	r8, #28
   14560:	bne	14e58 <__printf_chk@plt+0x26e8>
   14564:	add	r6, r6, #1024	; 0x400
   14568:	cmp	r6, #65536	; 0x10000
   1456c:	beq	149a4 <__printf_chk@plt+0x2234>
   14570:	ldr	r0, [r4, #80]	; 0x50
   14574:	mov	r1, #1
   14578:	add	r3, sp, #60	; 0x3c
   1457c:	str	r1, [sp, #4]
   14580:	str	r7, [sp, #8]
   14584:	mov	r2, r6
   14588:	add	r1, sp, #244	; 0xf4
   1458c:	str	fp, [sp]
   14590:	str	r7, [sp, #56]	; 0x38
   14594:	bl	13950 <__printf_chk@plt+0x11e0>
   14598:	subs	r9, r0, #0
   1459c:	blt	149cc <__printf_chk@plt+0x225c>
   145a0:	ldr	r1, [r4, #92]	; 0x5c
   145a4:	ldr	r0, [r4, #80]	; 0x50
   145a8:	cmp	r1, #0
   145ac:	bne	144a4 <__printf_chk@plt+0x1d34>
   145b0:	mov	r5, r1
   145b4:	mov	sl, r1
   145b8:	b	144d0 <__printf_chk@plt+0x1d60>
   145bc:	ldr	r1, [r4, #76]	; 0x4c
   145c0:	add	r6, sp, #500	; 0x1f4
   145c4:	mov	r3, #512	; 0x200
   145c8:	add	r2, sp, #244	; 0xf4
   145cc:	mov	r0, r6
   145d0:	str	r2, [sp, #8]
   145d4:	str	r1, [sp, #4]
   145d8:	movw	r2, #27680	; 0x6c20
   145dc:	mov	r1, r3
   145e0:	movt	r2, #3
   145e4:	str	r2, [sp]
   145e8:	mov	r2, #1
   145ec:	bl	125cc <__snprintf_chk@plt>
   145f0:	b	1411c <__printf_chk@plt+0x19ac>
   145f4:	mov	r0, r5
   145f8:	add	r7, sp, #1016	; 0x3f8
   145fc:	bl	2e1e0 <crc32@@Base+0x14a3c>
   14600:	movw	r1, #46108	; 0xb41c
   14604:	mov	r0, r5
   14608:	movt	r1, #3
   1460c:	bl	2e200 <crc32@@Base+0x14a5c>
   14610:	ldrb	r0, [r4, #116]	; 0x74
   14614:	bl	1a428 <crc32@@Base+0xc84>
   14618:	movw	r2, #27328	; 0x6ac0
   1461c:	movw	r1, #27364	; 0x6ae4
   14620:	movt	r2, #3
   14624:	movt	r1, #3
   14628:	add	r6, sp, #500	; 0x1f4
   1462c:	add	sl, r4, #80	; 0x50
   14630:	mov	r3, r0
   14634:	mov	r0, r5
   14638:	bl	13bcc <__printf_chk@plt+0x145c>
   1463c:	movw	r3, #27376	; 0x6af0
   14640:	movw	r2, #27384	; 0x6af8
   14644:	movt	r3, #3
   14648:	movt	r2, #3
   1464c:	movw	r1, #27404	; 0x6b0c
   14650:	mov	r0, r5
   14654:	movt	r1, #3
   14658:	bl	13bcc <__printf_chk@plt+0x145c>
   1465c:	mov	r3, #16777216	; 0x1000000
   14660:	movw	r1, #27412	; 0x6b14
   14664:	str	r3, [r7, #-864]!	; 0xfffffca0
   14668:	movt	r1, #3
   1466c:	mov	r2, r7
   14670:	mov	r3, #4
   14674:	mov	r0, r5
   14678:	bl	2e4b8 <crc32@@Base+0x14d14>
   1467c:	movw	r1, #27428	; 0x6b24
   14680:	mov	r0, r5
   14684:	movt	r1, #3
   14688:	bl	2e200 <crc32@@Base+0x14a5c>
   1468c:	ldrb	r0, [r4, #116]	; 0x74
   14690:	bl	1a47c <crc32@@Base+0xcd8>
   14694:	mov	r3, #100	; 0x64
   14698:	mov	r1, r3
   1469c:	movw	r2, #27436	; 0x6b2c
   146a0:	movt	r2, #3
   146a4:	str	r2, [sp, #36]	; 0x24
   146a8:	str	r2, [sp]
   146ac:	mov	r2, #1
   146b0:	mov	r9, r0
   146b4:	str	r0, [sp, #4]
   146b8:	mov	r0, r6
   146bc:	bl	125cc <__snprintf_chk@plt>
   146c0:	mov	r1, r6
   146c4:	mov	r0, r5
   146c8:	bl	2e200 <crc32@@Base+0x14a5c>
   146cc:	ldr	r8, [r4, #64]	; 0x40
   146d0:	str	sl, [sp, #32]
   146d4:	mov	r0, r8
   146d8:	bl	125c0 <strlen@plt>
   146dc:	mov	r2, r8
   146e0:	movw	r1, #27364	; 0x6ae4
   146e4:	movt	r1, #3
   146e8:	add	r3, r0, #1
   146ec:	mov	r0, r5
   146f0:	bl	2e4b8 <crc32@@Base+0x14d14>
   146f4:	mov	r0, r9
   146f8:	bl	125c0 <strlen@plt>
   146fc:	mov	r2, r9
   14700:	movw	r1, #40544	; 0x9e60
   14704:	movt	r1, #3
   14708:	add	r3, r0, #1
   1470c:	mov	r0, r5
   14710:	bl	2e4b8 <crc32@@Base+0x14d14>
   14714:	ldrb	r0, [r4, #40]	; 0x28
   14718:	bl	1a5cc <crc32@@Base+0xe28>
   1471c:	mov	r8, r0
   14720:	ldrb	r0, [r4, #40]	; 0x28
   14724:	bl	1a5cc <crc32@@Base+0xe28>
   14728:	bl	125c0 <strlen@plt>
   1472c:	mov	r2, r8
   14730:	movw	r1, #27444	; 0x6b34
   14734:	movt	r1, #3
   14738:	add	r3, r0, #1
   1473c:	mov	r0, r5
   14740:	bl	2e4b8 <crc32@@Base+0x14d14>
   14744:	ldrb	r0, [r4, #36]	; 0x24
   14748:	bl	1a578 <crc32@@Base+0xdd4>
   1474c:	mov	r8, r0
   14750:	ldrb	r0, [r4, #36]	; 0x24
   14754:	bl	1a578 <crc32@@Base+0xdd4>
   14758:	bl	125c0 <strlen@plt>
   1475c:	mov	r2, r8
   14760:	movw	r1, #36064	; 0x8ce0
   14764:	movt	r1, #3
   14768:	add	r3, r0, #1
   1476c:	mov	r0, r5
   14770:	bl	2e4b8 <crc32@@Base+0x14d14>
   14774:	ldrb	r0, [r4, #48]	; 0x30
   14778:	bl	1a524 <crc32@@Base+0xd80>
   1477c:	mov	r8, r0
   14780:	ldrb	r0, [r4, #48]	; 0x30
   14784:	bl	1a524 <crc32@@Base+0xd80>
   14788:	bl	125c0 <strlen@plt>
   1478c:	mov	r2, r8
   14790:	movw	r1, #27452	; 0x6b3c
   14794:	movt	r1, #3
   14798:	add	r3, r0, #1
   1479c:	mov	r0, r5
   147a0:	bl	2e4b8 <crc32@@Base+0x14d14>
   147a4:	ldr	r1, [r4, #56]	; 0x38
   147a8:	mov	r2, r7
   147ac:	ubfx	ip, r1, #8, #8
   147b0:	ubfx	r3, r1, #16, #8
   147b4:	lsr	r0, r1, #24
   147b8:	orr	r0, r0, r1, lsl #24
   147bc:	movw	r1, #27464	; 0x6b48
   147c0:	orr	r0, r0, ip, lsl #16
   147c4:	movt	r1, #3
   147c8:	orr	r0, r0, r3, lsl #8
   147cc:	mov	r3, #4
   147d0:	str	r0, [sp, #152]	; 0x98
   147d4:	mov	r0, r5
   147d8:	bl	2e4b8 <crc32@@Base+0x14d14>
   147dc:	ldr	r3, [r4, #60]	; 0x3c
   147e0:	mov	r2, r7
   147e4:	movw	r1, #27472	; 0x6b50
   147e8:	ubfx	lr, r3, #8, #8
   147ec:	ubfx	r0, r3, #16, #8
   147f0:	lsr	ip, r3, #24
   147f4:	movt	r1, #3
   147f8:	orr	ip, ip, r3, lsl #24
   147fc:	mov	r3, #4
   14800:	orr	ip, ip, lr, lsl #16
   14804:	orr	ip, ip, r0, lsl #8
   14808:	mov	r0, r5
   1480c:	str	ip, [sp, #152]	; 0x98
   14810:	bl	2e4b8 <crc32@@Base+0x14d14>
   14814:	mov	r0, sl
   14818:	ldr	r2, [r4, #72]	; 0x48
   1481c:	mov	r1, r5
   14820:	bl	13e6c <__printf_chk@plt+0x16fc>
   14824:	subs	r7, r0, #0
   14828:	bne	142d0 <__printf_chk@plt+0x1b60>
   1482c:	mov	r0, r5
   14830:	bl	2e28c <crc32@@Base+0x14ae8>
   14834:	ldr	r8, [r4, #124]	; 0x7c
   14838:	cmp	r8, #0
   1483c:	beq	149d8 <__printf_chk@plt+0x2268>
   14840:	movw	r3, #27480	; 0x6b58
   14844:	movw	r2, #27484	; 0x6b5c
   14848:	movt	r3, #3
   1484c:	movt	r2, #3
   14850:	str	r3, [sp, #40]	; 0x28
   14854:	mov	fp, r7
   14858:	movw	r3, #27364	; 0x6ae4
   1485c:	str	r2, [sp, #44]	; 0x2c
   14860:	movt	r3, #3
   14864:	str	r7, [sp, #52]	; 0x34
   14868:	str	r3, [sp, #48]	; 0x30
   1486c:	b	1487c <__printf_chk@plt+0x210c>
   14870:	ldr	r8, [r8]
   14874:	cmp	r8, #0
   14878:	beq	149d4 <__printf_chk@plt+0x2264>
   1487c:	ldr	r3, [r8, #4]
   14880:	cmp	r3, #8
   14884:	bne	14870 <__printf_chk@plt+0x2100>
   14888:	ldr	r2, [sp, #40]	; 0x28
   1488c:	mov	r3, #100	; 0x64
   14890:	ldr	r0, [sp, #44]	; 0x2c
   14894:	mov	r1, r3
   14898:	add	fp, fp, #1
   1489c:	str	fp, [sp, #8]
   148a0:	str	r2, [sp, #4]
   148a4:	mov	r2, #1
   148a8:	str	r0, [sp]
   148ac:	mov	r0, r6
   148b0:	bl	125cc <__snprintf_chk@plt>
   148b4:	mov	r1, r6
   148b8:	mov	r0, r5
   148bc:	bl	2e200 <crc32@@Base+0x14a5c>
   148c0:	ldr	r1, [r8, #8]
   148c4:	mov	r0, r6
   148c8:	bl	13ff0 <__printf_chk@plt+0x1880>
   148cc:	mov	r0, r6
   148d0:	bl	125c0 <strlen@plt>
   148d4:	mov	r2, r6
   148d8:	ldr	r1, [sp, #48]	; 0x30
   148dc:	add	r3, r0, #1
   148e0:	mov	r0, r5
   148e4:	bl	2e4b8 <crc32@@Base+0x14d14>
   148e8:	ldr	r2, [r8, #8]
   148ec:	mov	r1, r5
   148f0:	ldr	r0, [sp, #32]
   148f4:	bl	13e6c <__printf_chk@plt+0x16fc>
   148f8:	subs	sl, r0, #0
   148fc:	bne	14d7c <__printf_chk@plt+0x260c>
   14900:	mov	r0, r9
   14904:	bl	125c0 <strlen@plt>
   14908:	mov	r2, r9
   1490c:	movw	r1, #40544	; 0x9e60
   14910:	movt	r1, #3
   14914:	add	r3, r0, #1
   14918:	mov	r0, r5
   1491c:	bl	2e4b8 <crc32@@Base+0x14d14>
   14920:	ldrb	r0, [r4, #40]	; 0x28
   14924:	bl	1a5cc <crc32@@Base+0xe28>
   14928:	mov	r7, r0
   1492c:	ldrb	r0, [r4, #40]	; 0x28
   14930:	bl	1a5cc <crc32@@Base+0xe28>
   14934:	bl	125c0 <strlen@plt>
   14938:	mov	r2, r7
   1493c:	movw	r1, #27444	; 0x6b34
   14940:	movt	r1, #3
   14944:	add	r3, r0, #1
   14948:	mov	r0, r5
   1494c:	bl	2e4b8 <crc32@@Base+0x14d14>
   14950:	mov	r0, sl
   14954:	bl	1a524 <crc32@@Base+0xd80>
   14958:	mov	r7, r0
   1495c:	mov	r0, sl
   14960:	bl	1a524 <crc32@@Base+0xd80>
   14964:	bl	125c0 <strlen@plt>
   14968:	mov	r2, r7
   1496c:	movw	r1, #27452	; 0x6b3c
   14970:	movt	r1, #3
   14974:	add	r3, r0, #1
   14978:	mov	r0, r5
   1497c:	bl	2e4b8 <crc32@@Base+0x14d14>
   14980:	mov	r0, r5
   14984:	bl	2e28c <crc32@@Base+0x14ae8>
   14988:	b	14870 <__printf_chk@plt+0x2100>
   1498c:	ldr	r1, [sp, #108]	; 0x6c
   14990:	mvn	r8, #4
   14994:	ldr	r0, [sp, #60]	; 0x3c
   14998:	bl	125e4 <munmap@plt>
   1499c:	mov	r0, r9
   149a0:	bl	12314 <close@plt>
   149a4:	movw	r1, #65044	; 0xfe14
   149a8:	movt	r1, #4
   149ac:	ldr	r3, [r4, #80]	; 0x50
   149b0:	movw	r2, #27792	; 0x6c90
   149b4:	ldr	r0, [r1]
   149b8:	movt	r2, #3
   149bc:	str	r8, [sp]
   149c0:	mov	r1, #1
   149c4:	bl	122b4 <__fprintf_chk@plt>
   149c8:	b	141bc <__printf_chk@plt+0x1a4c>
   149cc:	mvn	r8, #4
   149d0:	b	149a4 <__printf_chk@plt+0x2234>
   149d4:	ldr	r7, [sp, #52]	; 0x34
   149d8:	ldr	r3, [r4, #120]	; 0x78
   149dc:	cmp	r3, #0
   149e0:	beq	14a64 <__printf_chk@plt+0x22f4>
   149e4:	movw	r1, #27492	; 0x6b64
   149e8:	mov	r0, r5
   149ec:	movt	r1, #3
   149f0:	bl	2e200 <crc32@@Base+0x14a5c>
   149f4:	mov	r3, #8
   149f8:	movw	r2, #27504	; 0x6b70
   149fc:	movw	r1, #40544	; 0x9e60
   14a00:	movt	r2, #3
   14a04:	movt	r1, #3
   14a08:	mov	r0, r5
   14a0c:	bl	2e4b8 <crc32@@Base+0x14d14>
   14a10:	ldrb	r0, [r4, #36]	; 0x24
   14a14:	bl	1a578 <crc32@@Base+0xdd4>
   14a18:	mov	r8, r0
   14a1c:	ldrb	r0, [r4, #36]	; 0x24
   14a20:	bl	1a578 <crc32@@Base+0xdd4>
   14a24:	bl	125c0 <strlen@plt>
   14a28:	mov	r2, r8
   14a2c:	movw	r1, #36064	; 0x8ce0
   14a30:	movt	r1, #3
   14a34:	add	r3, r0, #1
   14a38:	mov	r0, r5
   14a3c:	bl	2e4b8 <crc32@@Base+0x14d14>
   14a40:	ldr	r0, [sp, #32]
   14a44:	ldr	r2, [r4, #120]	; 0x78
   14a48:	mov	r1, r5
   14a4c:	bl	13e6c <__printf_chk@plt+0x16fc>
   14a50:	cmp	r0, #0
   14a54:	movne	r7, r0
   14a58:	bne	142d0 <__printf_chk@plt+0x1b60>
   14a5c:	mov	r0, r5
   14a60:	bl	2e28c <crc32@@Base+0x14ae8>
   14a64:	mov	r0, r5
   14a68:	bl	2e28c <crc32@@Base+0x14ae8>
   14a6c:	movw	r1, #27512	; 0x6b78
   14a70:	mov	r0, r5
   14a74:	movt	r1, #3
   14a78:	bl	2e200 <crc32@@Base+0x14a5c>
   14a7c:	movw	r2, #27528	; 0x6b88
   14a80:	movw	r1, #27536	; 0x6b90
   14a84:	movt	r2, #3
   14a88:	movt	r1, #3
   14a8c:	mov	r3, #7
   14a90:	mov	r0, r5
   14a94:	bl	2e4b8 <crc32@@Base+0x14d14>
   14a98:	ldr	r8, [r4, #124]	; 0x7c
   14a9c:	cmp	r8, #0
   14aa0:	beq	14c9c <__printf_chk@plt+0x252c>
   14aa4:	movw	sl, #27544	; 0x6b98
   14aa8:	movw	fp, #27364	; 0x6ae4
   14aac:	movw	r3, #27552	; 0x6ba0
   14ab0:	movt	sl, #3
   14ab4:	movt	r3, #3
   14ab8:	movt	fp, #3
   14abc:	str	r3, [sp, #32]
   14ac0:	b	14ad0 <__printf_chk@plt+0x2360>
   14ac4:	ldr	r8, [r8]
   14ac8:	cmp	r8, #0
   14acc:	beq	14c10 <__printf_chk@plt+0x24a0>
   14ad0:	ldr	r0, [r8, #4]
   14ad4:	cmp	r0, #8
   14ad8:	bne	14ac4 <__printf_chk@plt+0x2354>
   14adc:	bl	1a47c <crc32@@Base+0xcd8>
   14ae0:	mov	r3, #100	; 0x64
   14ae4:	mov	r1, r3
   14ae8:	mov	r2, #1
   14aec:	add	r7, r7, #1
   14af0:	str	sl, [sp]
   14af4:	str	r7, [sp, #4]
   14af8:	mov	r0, r6
   14afc:	bl	125cc <__snprintf_chk@plt>
   14b00:	mov	r1, r6
   14b04:	mov	r0, r5
   14b08:	bl	2e200 <crc32@@Base+0x14a5c>
   14b0c:	ldr	r1, [r8, #8]
   14b10:	mov	r0, r6
   14b14:	bl	13ff0 <__printf_chk@plt+0x1880>
   14b18:	mov	r0, r6
   14b1c:	bl	125c0 <strlen@plt>
   14b20:	mov	r2, r6
   14b24:	mov	r1, fp
   14b28:	add	r3, r0, #1
   14b2c:	mov	r0, r5
   14b30:	bl	2e4b8 <crc32@@Base+0x14d14>
   14b34:	ldrb	r0, [r4, #116]	; 0x74
   14b38:	bl	1a47c <crc32@@Base+0xcd8>
   14b3c:	ldr	r2, [sp, #36]	; 0x24
   14b40:	mov	r3, #100	; 0x64
   14b44:	mov	r1, r3
   14b48:	str	r2, [sp]
   14b4c:	mov	r2, #1
   14b50:	mov	r9, r0
   14b54:	str	r0, [sp, #4]
   14b58:	mov	r0, r6
   14b5c:	bl	125cc <__snprintf_chk@plt>
   14b60:	mov	r0, r6
   14b64:	bl	125c0 <strlen@plt>
   14b68:	mov	r1, r9
   14b6c:	mov	r2, r6
   14b70:	add	r3, r0, #1
   14b74:	mov	r0, r5
   14b78:	bl	2e4b8 <crc32@@Base+0x14d14>
   14b7c:	mov	r0, r6
   14b80:	bl	125c0 <strlen@plt>
   14b84:	mov	r2, r6
   14b88:	ldr	r1, [sp, #32]
   14b8c:	add	r3, r0, #1
   14b90:	mov	r0, r5
   14b94:	bl	2e4b8 <crc32@@Base+0x14d14>
   14b98:	ldr	r3, [r4, #120]	; 0x78
   14b9c:	cmp	r3, #0
   14ba0:	beq	14bc0 <__printf_chk@plt+0x2450>
   14ba4:	movw	r2, #27492	; 0x6b64
   14ba8:	movw	r1, #27504	; 0x6b70
   14bac:	movt	r2, #3
   14bb0:	movt	r1, #3
   14bb4:	mov	r3, #10
   14bb8:	mov	r0, r5
   14bbc:	bl	2e4b8 <crc32@@Base+0x14d14>
   14bc0:	mov	r3, #100	; 0x64
   14bc4:	mov	r2, #1
   14bc8:	mov	r1, r3
   14bcc:	str	r7, [sp, #4]
   14bd0:	movw	r0, #27564	; 0x6bac
   14bd4:	movt	r0, #3
   14bd8:	str	r0, [sp]
   14bdc:	mov	r0, r6
   14be0:	bl	125cc <__snprintf_chk@plt>
   14be4:	mov	r0, r6
   14be8:	bl	125c0 <strlen@plt>
   14bec:	mov	r2, r6
   14bf0:	movw	r1, #27480	; 0x6b58
   14bf4:	movt	r1, #3
   14bf8:	add	r3, r0, #1
   14bfc:	mov	r0, r5
   14c00:	bl	2e4b8 <crc32@@Base+0x14d14>
   14c04:	mov	r0, r5
   14c08:	bl	2e28c <crc32@@Base+0x14ae8>
   14c0c:	b	14ac4 <__printf_chk@plt+0x2354>
   14c10:	cmp	r7, #0
   14c14:	beq	14c9c <__printf_chk@plt+0x252c>
   14c18:	mov	r0, r5
   14c1c:	bl	2e28c <crc32@@Base+0x14ae8>
   14c20:	mov	r0, r5
   14c24:	bl	2e28c <crc32@@Base+0x14ae8>
   14c28:	mov	r0, r5
   14c2c:	bl	2e51c <crc32@@Base+0x14d78>
   14c30:	subs	r7, r0, #0
   14c34:	bne	142d0 <__printf_chk@plt+0x1b60>
   14c38:	ldr	r3, [r5, #4]
   14c3c:	ubfx	r1, r3, #8, #8
   14c40:	ubfx	r2, r3, #16, #8
   14c44:	lsr	r7, r3, #24
   14c48:	orr	r7, r7, r3, lsl #24
   14c4c:	orr	r7, r7, r1, lsl #16
   14c50:	orr	r7, r7, r2, lsl #8
   14c54:	b	142d0 <__printf_chk@plt+0x1b60>
   14c58:	movw	r2, #65044	; 0xfe14
   14c5c:	movt	r2, #4
   14c60:	ldr	r6, [r4, #80]	; 0x50
   14c64:	ldr	r4, [r2]
   14c68:	bl	1268c <__errno_location@plt>
   14c6c:	ldr	r0, [r0]
   14c70:	bl	12200 <strerror@plt>
   14c74:	add	r2, sp, #244	; 0xf4
   14c78:	mov	r3, r6
   14c7c:	str	r2, [sp]
   14c80:	mov	r1, #1
   14c84:	movw	r2, #25392	; 0x6330
   14c88:	movt	r2, #3
   14c8c:	str	r0, [sp, #4]
   14c90:	mov	r0, r4
   14c94:	bl	122b4 <__fprintf_chk@plt>
   14c98:	b	141a8 <__printf_chk@plt+0x1a38>
   14c9c:	movw	r1, #27528	; 0x6b88
   14ca0:	mov	r0, r5
   14ca4:	movt	r1, #3
   14ca8:	bl	2e200 <crc32@@Base+0x14a5c>
   14cac:	ldrb	r0, [r4, #116]	; 0x74
   14cb0:	bl	1a47c <crc32@@Base+0xcd8>
   14cb4:	ldr	r2, [sp, #36]	; 0x24
   14cb8:	mov	r3, #100	; 0x64
   14cbc:	mov	r1, r3
   14cc0:	str	r2, [sp]
   14cc4:	mov	r2, #1
   14cc8:	mov	r7, r0
   14ccc:	str	r0, [sp, #4]
   14cd0:	mov	r0, r6
   14cd4:	bl	125cc <__snprintf_chk@plt>
   14cd8:	mov	r0, r6
   14cdc:	bl	125c0 <strlen@plt>
   14ce0:	mov	r1, r7
   14ce4:	mov	r2, r6
   14ce8:	add	r3, r0, #1
   14cec:	mov	r0, r5
   14cf0:	bl	2e4b8 <crc32@@Base+0x14d14>
   14cf4:	ldr	r3, [r4, #120]	; 0x78
   14cf8:	cmp	r3, #0
   14cfc:	beq	14d1c <__printf_chk@plt+0x25ac>
   14d00:	movw	r2, #27492	; 0x6b64
   14d04:	movw	r1, #27504	; 0x6b70
   14d08:	movt	r2, #3
   14d0c:	movt	r1, #3
   14d10:	mov	r3, #10
   14d14:	mov	r0, r5
   14d18:	bl	2e4b8 <crc32@@Base+0x14d14>
   14d1c:	mov	r0, r5
   14d20:	bl	2e28c <crc32@@Base+0x14ae8>
   14d24:	b	14c18 <__printf_chk@plt+0x24a8>
   14d28:	bl	1268c <__errno_location@plt>
   14d2c:	movw	r7, #65044	; 0xfe14
   14d30:	movt	r7, #4
   14d34:	ldr	r9, [r4, #80]	; 0x50
   14d38:	ldr	r8, [r7]
   14d3c:	ldr	r0, [r0]
   14d40:	bl	12200 <strerror@plt>
   14d44:	add	r2, sp, #244	; 0xf4
   14d48:	mov	r3, r9
   14d4c:	str	r2, [sp]
   14d50:	mov	r1, #1
   14d54:	movw	r2, #27604	; 0x6bd4
   14d58:	movt	r2, #3
   14d5c:	str	r0, [sp, #4]
   14d60:	mov	r0, r8
   14d64:	bl	122b4 <__fprintf_chk@plt>
   14d68:	mov	r0, r6
   14d6c:	bl	12314 <close@plt>
   14d70:	mov	r0, r5
   14d74:	bl	12128 <free@plt>
   14d78:	b	1428c <__printf_chk@plt+0x1b1c>
   14d7c:	mov	r7, sl
   14d80:	b	142d0 <__printf_chk@plt+0x1b60>
   14d84:	movw	r7, #65044	; 0xfe14
   14d88:	movt	r7, #4
   14d8c:	movw	r2, #27572	; 0x6bb4
   14d90:	ldr	r3, [r4, #80]	; 0x50
   14d94:	ldr	r0, [r7]
   14d98:	movt	r2, #3
   14d9c:	mov	r1, #1
   14da0:	bl	122b4 <__fprintf_chk@plt>
   14da4:	b	14d70 <__printf_chk@plt+0x2600>
   14da8:	bl	1268c <__errno_location@plt>
   14dac:	movw	r7, #65044	; 0xfe14
   14db0:	movt	r7, #4
   14db4:	ldr	r8, [r4, #80]	; 0x50
   14db8:	ldr	r6, [r7]
   14dbc:	ldr	r0, [r0]
   14dc0:	bl	12200 <strerror@plt>
   14dc4:	add	r2, sp, #244	; 0xf4
   14dc8:	mov	r3, r8
   14dcc:	str	r2, [sp]
   14dd0:	mov	r1, #1
   14dd4:	movw	r2, #25392	; 0x6330
   14dd8:	movt	r2, #3
   14ddc:	str	r0, [sp, #4]
   14de0:	mov	r0, r6
   14de4:	bl	122b4 <__fprintf_chk@plt>
   14de8:	b	14d70 <__printf_chk@plt+0x2600>
   14dec:	movw	r7, #65044	; 0xfe14
   14df0:	movt	r7, #4
   14df4:	ldr	r3, [r4, #80]	; 0x50
   14df8:	movw	r2, #27296	; 0x6aa0
   14dfc:	ldr	r0, [r7]
   14e00:	movt	r2, #3
   14e04:	str	r6, [sp]
   14e08:	mov	r1, #1
   14e0c:	bl	122b4 <__fprintf_chk@plt>
   14e10:	b	1428c <__printf_chk@plt+0x1b1c>
   14e14:	movw	r2, #65044	; 0xfe14
   14e18:	movt	r2, #4
   14e1c:	ldr	r5, [r4, #80]	; 0x50
   14e20:	ldr	r4, [r2]
   14e24:	bl	1268c <__errno_location@plt>
   14e28:	ldr	r0, [r0]
   14e2c:	bl	12200 <strerror@plt>
   14e30:	mov	r3, r5
   14e34:	str	r6, [sp]
   14e38:	movw	r2, #27696	; 0x6c30
   14e3c:	mov	r1, #1
   14e40:	movt	r2, #3
   14e44:	str	r0, [sp, #4]
   14e48:	mov	r0, r4
   14e4c:	bl	122b4 <__fprintf_chk@plt>
   14e50:	b	141bc <__printf_chk@plt+0x1a4c>
   14e54:	bl	12494 <__stack_chk_fail@plt>
   14e58:	cmp	r8, #0
   14e5c:	bne	149a4 <__printf_chk@plt+0x2234>
   14e60:	ldrb	r3, [r4, #132]	; 0x84
   14e64:	cmp	r3, #0
   14e68:	beq	14fac <__printf_chk@plt+0x283c>
   14e6c:	ldr	r0, [r4, #80]	; 0x50
   14e70:	add	r3, sp, #56	; 0x38
   14e74:	add	ip, sp, #152	; 0x98
   14e78:	str	r8, [sp, #8]
   14e7c:	mov	r2, r8
   14e80:	str	r8, [sp, #4]
   14e84:	add	r1, sp, #244	; 0xf4
   14e88:	str	ip, [sp]
   14e8c:	bl	13950 <__printf_chk@plt+0x11e0>
   14e90:	subs	r3, r0, #0
   14e94:	str	r3, [sp, #32]
   14e98:	blt	141bc <__printf_chk@plt+0x1a4c>
   14e9c:	ldr	r5, [sp, #56]	; 0x38
   14ea0:	ldr	r2, [r5, #4]
   14ea4:	ubfx	r1, r2, #8, #8
   14ea8:	ubfx	r0, r2, #16, #8
   14eac:	lsr	r3, r2, #24
   14eb0:	orr	r3, r3, r2, lsl #24
   14eb4:	orr	r3, r3, r1, lsl #16
   14eb8:	orr	r0, r3, r0, lsl #8
   14ebc:	bl	125a8 <malloc@plt>
   14ec0:	subs	r9, r0, #0
   14ec4:	mov	r0, r5
   14ec8:	beq	15164 <__printf_chk@plt+0x29f4>
   14ecc:	movw	r1, #27112	; 0x69e8
   14ed0:	movt	r1, #3
   14ed4:	bl	312a8 <crc32@@Base+0x17b04>
   14ed8:	subs	r1, r0, #0
   14edc:	bge	15020 <__printf_chk@plt+0x28b0>
   14ee0:	ldr	r1, [sp, #196]	; 0xc4
   14ee4:	ldr	r0, [sp, #56]	; 0x38
   14ee8:	bl	125e4 <munmap@plt>
   14eec:	mov	r0, r9
   14ef0:	bl	12128 <free@plt>
   14ef4:	ldr	r0, [sp, #32]
   14ef8:	bl	12314 <close@plt>
   14efc:	b	141bc <__printf_chk@plt+0x1a4c>
   14f00:	mov	r6, r8
   14f04:	ldr	r0, [sp, #56]	; 0x38
   14f08:	bl	2f654 <crc32@@Base+0x15eb0>
   14f0c:	ldr	r0, [sp, #56]	; 0x38
   14f10:	ldr	r1, [sp, #196]	; 0xc4
   14f14:	ldr	r3, [r0, #4]
   14f18:	ubfx	ip, r3, #8, #8
   14f1c:	ubfx	r2, r3, #16, #8
   14f20:	lsr	r5, r3, #24
   14f24:	orr	r5, r5, r3, lsl #24
   14f28:	orr	r5, r5, ip, lsl #16
   14f2c:	orr	r5, r5, r2, lsl #8
   14f30:	bl	125e4 <munmap@plt>
   14f34:	add	r5, r5, #3
   14f38:	ldr	r0, [sp, #32]
   14f3c:	bic	r5, r5, #3
   14f40:	mov	r1, r5
   14f44:	bl	1208c <ftruncate@plt>
   14f48:	cmp	r0, #0
   14f4c:	bne	14eec <__printf_chk@plt+0x277c>
   14f50:	ldr	r3, [r4, #136]	; 0x88
   14f54:	cmp	r3, #0
   14f58:	beq	14f68 <__printf_chk@plt+0x27f8>
   14f5c:	cmp	r3, r5
   14f60:	bcc	14eec <__printf_chk@plt+0x277c>
   14f64:	mov	r5, r3
   14f68:	mov	r1, r5
   14f6c:	ldr	r5, [sp, #32]
   14f70:	mov	r2, #0
   14f74:	mov	r0, r5
   14f78:	bl	124f4 <lseek@plt>
   14f7c:	cmp	r0, #0
   14f80:	blt	14eec <__printf_chk@plt+0x277c>
   14f84:	mov	r2, r6
   14f88:	mov	r1, r9
   14f8c:	mov	r0, r5
   14f90:	bl	12608 <write@plt>
   14f94:	cmp	r6, r0
   14f98:	bne	14eec <__printf_chk@plt+0x277c>
   14f9c:	mov	r0, r9
   14fa0:	bl	12128 <free@plt>
   14fa4:	ldr	r0, [sp, #32]
   14fa8:	bl	12314 <close@plt>
   14fac:	ldr	r1, [r4, #76]	; 0x4c
   14fb0:	add	r0, sp, #244	; 0xf4
   14fb4:	bl	1274c <rename@plt>
   14fb8:	cmn	r0, #1
   14fbc:	bne	141c8 <__printf_chk@plt+0x1a58>
   14fc0:	movw	r2, #65044	; 0xfe14
   14fc4:	movt	r2, #4
   14fc8:	ldr	r6, [r4, #80]	; 0x50
   14fcc:	mov	r8, #1
   14fd0:	ldr	r5, [r2]
   14fd4:	bl	1268c <__errno_location@plt>
   14fd8:	ldr	r7, [r4, #76]	; 0x4c
   14fdc:	ldr	r0, [r0]
   14fe0:	bl	12200 <strerror@plt>
   14fe4:	mov	r3, r6
   14fe8:	add	r2, sp, #244	; 0xf4
   14fec:	mov	r1, r8
   14ff0:	str	r2, [sp]
   14ff4:	movw	r2, #27848	; 0x6cc8
   14ff8:	str	r7, [sp, #4]
   14ffc:	movt	r2, #3
   15000:	str	r0, [sp, #8]
   15004:	mov	r0, r5
   15008:	bl	122b4 <__fprintf_chk@plt>
   1500c:	add	r0, sp, #244	; 0xf4
   15010:	bl	123a4 <unlink@plt>
   15014:	ldr	r0, [r4, #76]	; 0x4c
   15018:	bl	123a4 <unlink@plt>
   1501c:	b	141c8 <__printf_chk@plt+0x1a58>
   15020:	ldr	r0, [sp, #56]	; 0x38
   15024:	bl	2dac0 <crc32@@Base+0x1431c>
   15028:	subs	r5, r0, #0
   1502c:	blt	14f00 <__printf_chk@plt+0x2790>
   15030:	movw	r7, #40604	; 0x9e9c
   15034:	movw	sl, #27780	; 0x6c84
   15038:	movw	r3, #27768	; 0x6c78
   1503c:	movt	r7, #3
   15040:	movt	r3, #3
   15044:	movt	sl, #3
   15048:	str	r3, [sp, #36]	; 0x24
   1504c:	mov	r6, r8
   15050:	b	150dc <__printf_chk@plt+0x296c>
   15054:	add	ip, r6, r3
   15058:	movw	r2, #27832	; 0x6cb8
   1505c:	mov	r3, #4
   15060:	movt	r2, #3
   15064:	str	r3, [sp]
   15068:	mov	r1, r5
   1506c:	mov	r3, fp
   15070:	rev	ip, ip
   15074:	str	ip, [sp, #64]	; 0x40
   15078:	bl	2f000 <crc32@@Base+0x1585c>
   1507c:	ldr	r3, [sp, #60]	; 0x3c
   15080:	mov	r1, #4
   15084:	str	r1, [sp]
   15088:	ubfx	r2, r3, #8, #8
   1508c:	ubfx	r1, r3, #16, #8
   15090:	lsr	ip, r3, #24
   15094:	ldr	r0, [sp, #56]	; 0x38
   15098:	orr	ip, ip, r3, lsl #24
   1509c:	mov	r3, fp
   150a0:	orr	ip, ip, r2, lsl #16
   150a4:	mov	r2, sl
   150a8:	orr	ip, ip, r1, lsl #8
   150ac:	mov	r1, r5
   150b0:	str	ip, [sp, #64]	; 0x40
   150b4:	bl	2f000 <crc32@@Base+0x1585c>
   150b8:	ldr	r3, [sp, #60]	; 0x3c
   150bc:	add	r3, r3, #3
   150c0:	bic	r3, r3, #3
   150c4:	add	r6, r6, r3
   150c8:	mov	r1, r5
   150cc:	ldr	r0, [sp, #56]	; 0x38
   150d0:	bl	2db20 <crc32@@Base+0x1437c>
   150d4:	subs	r5, r0, #0
   150d8:	blt	14f04 <__printf_chk@plt+0x2794>
   150dc:	mov	r1, r5
   150e0:	add	r3, sp, #60	; 0x3c
   150e4:	mov	r2, r7
   150e8:	ldr	r0, [sp, #56]	; 0x38
   150ec:	bl	30f4c <crc32@@Base+0x177a8>
   150f0:	subs	r1, r0, #0
   150f4:	beq	150c8 <__printf_chk@plt+0x2958>
   150f8:	ldr	r2, [sp, #60]	; 0x3c
   150fc:	add	r0, r9, r6
   15100:	bl	1259c <memcpy@plt>
   15104:	mov	r2, r7
   15108:	mov	r1, r5
   1510c:	ldr	r0, [sp, #56]	; 0x38
   15110:	bl	2f190 <crc32@@Base+0x159ec>
   15114:	cmp	r0, #0
   15118:	bne	14ee0 <__printf_chk@plt+0x2770>
   1511c:	ldr	r3, [r4, #136]	; 0x88
   15120:	ldr	r0, [sp, #56]	; 0x38
   15124:	cmp	r3, #0
   15128:	bne	15054 <__printf_chk@plt+0x28e4>
   1512c:	ubfx	r2, r6, #8, #8
   15130:	lsr	r3, r6, #24
   15134:	orr	r3, r3, r6, lsl #24
   15138:	ubfx	r1, r6, #16, #8
   1513c:	orr	ip, r3, r2, lsl #16
   15140:	mov	r3, #4
   15144:	orr	ip, ip, r1, lsl #8
   15148:	str	r3, [sp]
   1514c:	ldr	r2, [sp, #36]	; 0x24
   15150:	mov	r3, fp
   15154:	mov	r1, r5
   15158:	str	ip, [sp, #64]	; 0x40
   1515c:	bl	2f000 <crc32@@Base+0x1585c>
   15160:	b	1507c <__printf_chk@plt+0x290c>
   15164:	ldr	r1, [sp, #196]	; 0xc4
   15168:	bl	125e4 <munmap@plt>
   1516c:	b	14ef4 <__printf_chk@plt+0x2784>
   15170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15174:	sub	sp, sp, #36	; 0x24
   15178:	movw	r7, #61168	; 0xeef0
   1517c:	movt	r7, #4
   15180:	ldr	r5, [sp, #72]	; 0x48
   15184:	mov	r6, r2
   15188:	ldr	ip, [r7]
   1518c:	mov	r4, r0
   15190:	mov	sl, r1
   15194:	mov	r0, r2
   15198:	mov	r1, r5
   1519c:	mov	r2, #0
   151a0:	str	r3, [sp, #20]
   151a4:	str	ip, [sp, #28]
   151a8:	ldr	r9, [sp, #76]	; 0x4c
   151ac:	ldr	fp, [sp, #80]	; 0x50
   151b0:	bl	30c4c <crc32@@Base+0x174a8>
   151b4:	mov	r1, r5
   151b8:	add	r2, sp, #24
   151bc:	str	r0, [sp, #16]
   151c0:	mov	r0, r6
   151c4:	bl	17454 <__printf_chk@plt+0x4ce4>
   151c8:	subs	r8, r0, #0
   151cc:	bne	15290 <__printf_chk@plt+0x2b20>
   151d0:	mov	r3, r8
   151d4:	mov	r1, r5
   151d8:	movw	r2, #27980	; 0x6d4c
   151dc:	mov	r0, r6
   151e0:	movt	r2, #3
   151e4:	bl	30f4c <crc32@@Base+0x177a8>
   151e8:	mov	r2, #44	; 0x2c
   151ec:	mov	r1, r8
   151f0:	str	r0, [sp, #12]
   151f4:	add	r0, r4, #4
   151f8:	bl	122e4 <memset@plt>
   151fc:	mov	r3, r8
   15200:	mov	r1, r5
   15204:	str	sl, [r4]
   15208:	movw	r2, #27988	; 0x6d54
   1520c:	mov	r0, r6
   15210:	movt	r2, #3
   15214:	bl	30f4c <crc32@@Base+0x177a8>
   15218:	str	r6, [r4, #8]
   1521c:	str	r5, [r4, #12]
   15220:	str	r0, [r4, #4]
   15224:	ldr	r0, [sp, #24]
   15228:	bl	12308 <__strdup@plt>
   1522c:	str	r0, [r4, #16]
   15230:	ldr	r0, [sp, #24]
   15234:	bl	188b0 <__printf_chk@plt+0x6140>
   15238:	str	r0, [r4, #20]
   1523c:	ldr	r0, [sp, #24]
   15240:	bl	1891c <__printf_chk@plt+0x61ac>
   15244:	str	r0, [r4, #28]
   15248:	ldr	r0, [sp, #12]
   1524c:	bl	18ae8 <__printf_chk@plt+0x6378>
   15250:	ldr	r3, [r4, #20]
   15254:	str	r9, [r4, #40]	; 0x28
   15258:	cmp	r3, #0
   1525c:	str	fp, [r4, #44]	; 0x2c
   15260:	str	r0, [r4, #24]
   15264:	beq	152ac <__printf_chk@plt+0x2b3c>
   15268:	ldr	r3, [r4, #28]
   1526c:	cmp	r3, #0
   15270:	beq	152ac <__printf_chk@plt+0x2b3c>
   15274:	ldr	r2, [sp, #28]
   15278:	mov	r0, r8
   1527c:	ldr	r3, [r7]
   15280:	cmp	r2, r3
   15284:	bne	152d4 <__printf_chk@plt+0x2b64>
   15288:	add	sp, sp, #36	; 0x24
   1528c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15290:	ldrd	r2, [sp, #16]
   15294:	movw	r1, #27912	; 0x6d08
   15298:	mov	r0, #1
   1529c:	movt	r1, #3
   152a0:	mvn	r8, #0
   152a4:	bl	12770 <__printf_chk@plt>
   152a8:	b	15274 <__printf_chk@plt+0x2b04>
   152ac:	ldr	r1, [sp, #20]
   152b0:	mov	r0, #1
   152b4:	ldr	r2, [sp, #24]
   152b8:	mvn	r8, #0
   152bc:	ldr	r3, [sp, #16]
   152c0:	str	r1, [sp]
   152c4:	movw	r1, #28004	; 0x6d64
   152c8:	movt	r1, #3
   152cc:	bl	12770 <__printf_chk@plt>
   152d0:	b	15274 <__printf_chk@plt+0x2b04>
   152d4:	bl	12494 <__stack_chk_fail@plt>
   152d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152dc:	movw	r4, #61168	; 0xeef0
   152e0:	movt	r4, #4
   152e4:	sub	sp, sp, #28
   152e8:	mov	r5, r0
   152ec:	mov	r7, r1
   152f0:	ldr	ip, [r4]
   152f4:	str	r3, [sp]
   152f8:	mov	r3, r2
   152fc:	movw	r2, #28088	; 0x6db8
   15300:	movt	r2, #3
   15304:	str	ip, [sp, #20]
   15308:	ldr	r6, [r0, #32]
   1530c:	ldrd	r8, [sp, #64]	; 0x40
   15310:	ldr	sl, [sp, #76]	; 0x4c
   15314:	bl	2f000 <crc32@@Base+0x1585c>
   15318:	cmp	r0, #0
   1531c:	beq	15338 <__printf_chk@plt+0x2bc8>
   15320:	ldr	r2, [sp, #20]
   15324:	ldr	r3, [r4]
   15328:	cmp	r2, r3
   1532c:	bne	15478 <__printf_chk@plt+0x2d08>
   15330:	add	sp, sp, #28
   15334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15338:	mov	fp, #8
   1533c:	movw	r3, #28096	; 0x6dc0
   15340:	str	fp, [sp]
   15344:	movt	r3, #3
   15348:	movw	r2, #28104	; 0x6dc8
   1534c:	mov	r1, r7
   15350:	movt	r2, #3
   15354:	mov	r0, r5
   15358:	bl	2f000 <crc32@@Base+0x1585c>
   1535c:	cmp	r0, #0
   15360:	bne	15320 <__printf_chk@plt+0x2bb0>
   15364:	str	fp, [sp]
   15368:	movw	r3, #27376	; 0x6af0
   1536c:	movw	r2, #28116	; 0x6dd4
   15370:	movt	r3, #3
   15374:	movt	r2, #3
   15378:	mov	r1, r7
   1537c:	mov	r0, r5
   15380:	bl	2f000 <crc32@@Base+0x1585c>
   15384:	cmp	r8, #0
   15388:	clz	r3, r0
   1538c:	lsr	r3, r3, #5
   15390:	moveq	r3, #0
   15394:	cmp	r3, #0
   15398:	beq	153c4 <__printf_chk@plt+0x2c54>
   1539c:	mov	r0, r8
   153a0:	bl	125c0 <strlen@plt>
   153a4:	movw	r2, #28132	; 0x6de4
   153a8:	mov	r3, r8
   153ac:	mov	r1, r7
   153b0:	movt	r2, #3
   153b4:	add	r0, r0, #1
   153b8:	str	r0, [sp]
   153bc:	mov	r0, r5
   153c0:	bl	2f000 <crc32@@Base+0x1585c>
   153c4:	cmp	r0, #0
   153c8:	bne	15320 <__printf_chk@plt+0x2bb0>
   153cc:	bl	12674 <time@plt>
   153d0:	mov	r1, r0
   153d4:	mov	r0, sl
   153d8:	bl	1aa98 <crc32@@Base+0x12f4>
   153dc:	mov	r1, r7
   153e0:	mov	r2, r0
   153e4:	mov	r0, r5
   153e8:	bl	17538 <__printf_chk@plt+0x4dc8>
   153ec:	cmp	r9, #0
   153f0:	clz	r3, r0
   153f4:	lsr	r3, r3, #5
   153f8:	moveq	r3, #0
   153fc:	cmp	r3, #0
   15400:	beq	15320 <__printf_chk@plt+0x2bb0>
   15404:	ldr	r3, [sp, #72]	; 0x48
   15408:	ubfx	r2, r6, #8, #8
   1540c:	lsr	ip, r6, #24
   15410:	mov	r1, r7
   15414:	orr	ip, ip, r6, lsl #24
   15418:	ubfx	r6, r6, #16, #8
   1541c:	orr	ip, ip, r2, lsl #16
   15420:	str	r3, [sp]
   15424:	movw	r2, #28140	; 0x6dec
   15428:	mov	r3, r9
   1542c:	movt	r2, #3
   15430:	mov	r0, r5
   15434:	orr	r6, ip, r6, lsl #8
   15438:	bl	2f000 <crc32@@Base+0x1585c>
   1543c:	rev	r6, r6
   15440:	mov	r3, #0
   15444:	str	r6, [sp, #16]
   15448:	str	r3, [sp, #12]
   1544c:	cmp	r0, #0
   15450:	bne	15320 <__printf_chk@plt+0x2bb0>
   15454:	mov	r3, #8
   15458:	mov	r1, r7
   1545c:	str	r3, [sp]
   15460:	mov	r0, r5
   15464:	movw	r2, #28156	; 0x6dfc
   15468:	add	r3, sp, #12
   1546c:	movt	r2, #3
   15470:	bl	2f000 <crc32@@Base+0x1585c>
   15474:	b	15320 <__printf_chk@plt+0x2bb0>
   15478:	bl	12494 <__stack_chk_fail@plt>
   1547c:	push	{r4, r5, r6, lr}
   15480:	mov	r4, r0
   15484:	mov	r0, r1
   15488:	bl	12308 <__strdup@plt>
   1548c:	ldr	r1, [r4]
   15490:	add	r1, r1, #1
   15494:	lsl	r1, r1, #2
   15498:	mov	r5, r0
   1549c:	ldr	r0, [r4, #4]
   154a0:	bl	123d4 <realloc@plt>
   154a4:	ldr	r2, [r4]
   154a8:	add	r1, r2, #1
   154ac:	str	r1, [r4]
   154b0:	mov	r3, r0
   154b4:	mov	r0, #0
   154b8:	str	r3, [r4, #4]
   154bc:	str	r5, [r3, r2, lsl #2]
   154c0:	pop	{r4, r5, r6, pc}
   154c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154c8:	sub	sp, sp, #1296	; 0x510
   154cc:	sub	sp, sp, #12
   154d0:	movw	fp, #61168	; 0xeef0
   154d4:	movt	fp, #4
   154d8:	mov	r4, r2
   154dc:	str	r3, [sp, #56]	; 0x38
   154e0:	movw	r3, #40604	; 0x9e9c
   154e4:	movt	r3, #3
   154e8:	str	r3, [sp, #96]	; 0x60
   154ec:	ldr	r3, [sp, #1344]	; 0x540
   154f0:	mov	r2, #0
   154f4:	ldr	ip, [fp]
   154f8:	mov	r5, r0
   154fc:	mov	r6, r1
   15500:	str	r1, [sp, #28]
   15504:	str	r3, [sp, #60]	; 0x3c
   15508:	movw	sl, #28172	; 0x6e0c
   1550c:	ldr	r3, [sp, #1348]	; 0x544
   15510:	movt	sl, #3
   15514:	str	ip, [sp, #1300]	; 0x514
   15518:	movw	r9, #28188	; 0x6e1c
   1551c:	movt	r9, #3
   15520:	str	r3, [sp, #64]	; 0x40
   15524:	ldr	r3, [sp, #1352]	; 0x548
   15528:	str	r3, [sp, #68]	; 0x44
   1552c:	bl	30c4c <crc32@@Base+0x174a8>
   15530:	mov	r1, r4
   15534:	mov	r2, #0
   15538:	str	r0, [sp, #72]	; 0x48
   1553c:	mov	r0, r5
   15540:	bl	30c4c <crc32@@Base+0x174a8>
   15544:	mov	r1, r6
   15548:	mov	r2, #0
   1554c:	str	r0, [sp, #76]	; 0x4c
   15550:	mov	r0, r5
   15554:	bl	30c4c <crc32@@Base+0x174a8>
   15558:	mov	r1, r4
   1555c:	mov	r2, #0
   15560:	mov	r6, r0
   15564:	str	r0, [sp, #24]
   15568:	mov	r0, r5
   1556c:	bl	30c4c <crc32@@Base+0x174a8>
   15570:	mov	r3, #200	; 0xc8
   15574:	mov	r1, r3
   15578:	mov	r2, #0
   1557c:	str	r6, [sp, #8]
   15580:	str	r2, [sp, #88]	; 0x58
   15584:	str	r2, [sp, #92]	; 0x5c
   15588:	mov	r2, #1
   1558c:	str	sl, [sp, #4]
   15590:	str	r9, [sp]
   15594:	str	r0, [sp, #32]
   15598:	add	r0, sp, #900	; 0x384
   1559c:	bl	125cc <__snprintf_chk@plt>
   155a0:	add	r0, sp, #88	; 0x58
   155a4:	movw	r1, #52496	; 0xcd10
   155a8:	movt	r1, #3
   155ac:	bl	1547c <__printf_chk@plt+0x2d0c>
   155b0:	cmp	r0, #0
   155b4:	bne	157b0 <__printf_chk@plt+0x3040>
   155b8:	add	r1, sp, #900	; 0x384
   155bc:	add	r0, sp, #88	; 0x58
   155c0:	bl	1547c <__printf_chk@plt+0x2d0c>
   155c4:	subs	r3, r0, #0
   155c8:	str	r3, [sp, #36]	; 0x24
   155cc:	bne	157b0 <__printf_chk@plt+0x3040>
   155d0:	mov	r1, r4
   155d4:	movw	r2, #28196	; 0x6e24
   155d8:	add	r3, sp, #84	; 0x54
   155dc:	movt	r2, #3
   155e0:	mov	r0, r5
   155e4:	bl	30f4c <crc32@@Base+0x177a8>
   155e8:	subs	r7, r0, #0
   155ec:	bne	15824 <__printf_chk@plt+0x30b4>
   155f0:	ldr	r2, [pc, #1132]	; 15a64 <__printf_chk@plt+0x32f4>
   155f4:	mov	r3, #11
   155f8:	str	r3, [sp, #84]	; 0x54
   155fc:	mov	r3, #1
   15600:	sub	r7, r2, #11
   15604:	str	r3, [sp, #48]	; 0x30
   15608:	str	r2, [sp, #40]	; 0x28
   1560c:	movw	r6, #28388	; 0x6ee4
   15610:	movt	r6, #3
   15614:	movw	r3, #28208	; 0x6e30
   15618:	movt	r3, #3
   1561c:	str	r3, [sp, #44]	; 0x2c
   15620:	mov	r3, #0
   15624:	str	r3, [sp, #52]	; 0x34
   15628:	mov	r2, r7
   1562c:	ldr	r1, [sp, #28]
   15630:	mov	r0, r5
   15634:	bl	18138 <__printf_chk@plt+0x59c8>
   15638:	subs	r4, r0, #0
   1563c:	bge	156b4 <__printf_chk@plt+0x2f44>
   15640:	ldr	r3, [sp, #32]
   15644:	mov	r2, r7
   15648:	ldr	r1, [sp, #44]	; 0x2c
   1564c:	mov	r0, #1
   15650:	str	r3, [sp]
   15654:	ldr	r3, [sp, #24]
   15658:	bl	12770 <__printf_chk@plt>
   1565c:	ldr	r3, [sp, #48]	; 0x30
   15660:	cmp	r3, #0
   15664:	beq	159c0 <__printf_chk@plt+0x3250>
   15668:	mov	r0, r7
   1566c:	bl	125c0 <strlen@plt>
   15670:	ldr	r3, [sp, #40]	; 0x28
   15674:	add	r0, r0, #1
   15678:	add	r7, r7, r0
   1567c:	cmp	r7, r3
   15680:	bcc	15628 <__printf_chk@plt+0x2eb8>
   15684:	ldr	r3, [sp, #52]	; 0x34
   15688:	cmp	r3, #0
   1568c:	bne	1584c <__printf_chk@plt+0x30dc>
   15690:	ldr	r3, [sp, #32]
   15694:	movw	r1, #28396	; 0x6eec
   15698:	ldr	r2, [sp, #24]
   1569c:	movt	r1, #3
   156a0:	mov	r0, #1
   156a4:	mvn	ip, #41	; 0x29
   156a8:	str	ip, [sp, #36]	; 0x24
   156ac:	bl	12770 <__printf_chk@plt>
   156b0:	b	157d0 <__printf_chk@plt+0x3060>
   156b4:	add	r2, sp, #1088	; 0x440
   156b8:	mov	r3, #200	; 0xc8
   156bc:	add	r2, r2, #12
   156c0:	mov	r1, r4
   156c4:	mov	r0, r5
   156c8:	bl	312f8 <crc32@@Base+0x17b54>
   156cc:	cmp	r0, #0
   156d0:	blt	157f0 <__printf_chk@plt+0x3080>
   156d4:	add	r1, sp, #1088	; 0x440
   156d8:	add	r0, sp, #88	; 0x58
   156dc:	add	r1, r1, #12
   156e0:	bl	1547c <__printf_chk@plt+0x2d0c>
   156e4:	subs	r8, r0, #0
   156e8:	bne	157b0 <__printf_chk@plt+0x3040>
   156ec:	ldr	r2, [sp, #24]
   156f0:	mov	r3, #200	; 0xc8
   156f4:	mov	r1, r3
   156f8:	str	sl, [sp, #4]
   156fc:	str	r9, [sp]
   15700:	add	r0, sp, #900	; 0x384
   15704:	str	r2, [sp, #8]
   15708:	mov	r2, #1
   1570c:	bl	125cc <__snprintf_chk@plt>
   15710:	mov	r1, r4
   15714:	mov	r0, r5
   15718:	bl	2dac0 <crc32@@Base+0x1431c>
   1571c:	subs	r4, r0, #0
   15720:	blt	15998 <__printf_chk@plt+0x3228>
   15724:	mov	r2, #0
   15728:	mov	r1, r4
   1572c:	mov	r0, r5
   15730:	bl	30c4c <crc32@@Base+0x174a8>
   15734:	mov	r2, #4
   15738:	mov	r1, r6
   1573c:	bl	1217c <strncmp@plt>
   15740:	cmp	r0, #0
   15744:	bne	15784 <__printf_chk@plt+0x3014>
   15748:	add	r2, sp, #1088	; 0x440
   1574c:	mov	r3, #200	; 0xc8
   15750:	add	r2, r2, #12
   15754:	mov	r1, r4
   15758:	mov	r0, r5
   1575c:	bl	312f8 <crc32@@Base+0x17b54>
   15760:	cmp	r0, #0
   15764:	blt	157f0 <__printf_chk@plt+0x3080>
   15768:	add	r1, sp, #1088	; 0x440
   1576c:	add	r0, sp, #88	; 0x58
   15770:	add	r1, r1, #12
   15774:	bl	1547c <__printf_chk@plt+0x2d0c>
   15778:	cmp	r0, #0
   1577c:	bne	157b0 <__printf_chk@plt+0x3040>
   15780:	add	r8, r8, #1
   15784:	mov	r1, r4
   15788:	mov	r0, r5
   1578c:	bl	2db20 <crc32@@Base+0x1437c>
   15790:	subs	r4, r0, #0
   15794:	bge	15724 <__printf_chk@plt+0x2fb4>
   15798:	cmp	r8, #0
   1579c:	beq	15998 <__printf_chk@plt+0x3228>
   157a0:	ldr	r3, [sp, #52]	; 0x34
   157a4:	add	r3, r3, #1
   157a8:	str	r3, [sp, #52]	; 0x34
   157ac:	b	15668 <__printf_chk@plt+0x2ef8>
   157b0:	movw	r1, #28452	; 0x6f24
   157b4:	ldr	r3, [sp, #32]
   157b8:	ldr	r2, [sp, #24]
   157bc:	mov	r0, #1
   157c0:	movt	r1, #3
   157c4:	mvn	ip, #11
   157c8:	str	ip, [sp, #36]	; 0x24
   157cc:	bl	12770 <__printf_chk@plt>
   157d0:	ldr	r2, [sp, #1300]	; 0x514
   157d4:	ldr	r3, [fp]
   157d8:	ldr	r0, [sp, #36]	; 0x24
   157dc:	cmp	r2, r3
   157e0:	bne	15a60 <__printf_chk@plt+0x32f0>
   157e4:	add	sp, sp, #1296	; 0x510
   157e8:	add	sp, sp, #12
   157ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f0:	mvn	r3, #1
   157f4:	str	r3, [sp, #36]	; 0x24
   157f8:	bl	2f808 <crc32@@Base+0x16064>
   157fc:	ldr	r3, [sp, #32]
   15800:	mov	r2, r7
   15804:	movw	r1, #28500	; 0x6f54
   15808:	movt	r1, #3
   1580c:	str	r3, [sp]
   15810:	ldr	r3, [sp, #24]
   15814:	str	r0, [sp, #4]
   15818:	mov	r0, #1
   1581c:	bl	12770 <__printf_chk@plt>
   15820:	b	157d0 <__printf_chk@plt+0x3060>
   15824:	ldr	r3, [sp, #84]	; 0x54
   15828:	cmp	r3, #0
   1582c:	beq	1584c <__printf_chk@plt+0x30dc>
   15830:	add	r3, r7, r3
   15834:	str	r3, [sp, #40]	; 0x28
   15838:	cmp	r7, r3
   1583c:	ldrcc	r3, [sp, #36]	; 0x24
   15840:	strcc	r3, [sp, #48]	; 0x30
   15844:	bcc	1560c <__printf_chk@plt+0x2e9c>
   15848:	b	15690 <__printf_chk@plt+0x2f20>
   1584c:	mov	r0, #200	; 0xc8
   15850:	add	r3, sp, #104	; 0x68
   15854:	str	r0, [sp, #16]
   15858:	add	r0, sp, #1088	; 0x440
   1585c:	mov	r4, #1
   15860:	add	r0, r0, #12
   15864:	ldr	r2, [sp, #88]	; 0x58
   15868:	add	r6, sp, #100	; 0x64
   1586c:	str	r0, [sp, #12]
   15870:	sub	r3, r3, #8
   15874:	mov	r0, #100	; 0x64
   15878:	ldr	r1, [sp, #92]	; 0x5c
   1587c:	str	r0, [sp, #8]
   15880:	mov	r0, r5
   15884:	str	r6, [sp, #4]
   15888:	str	r4, [sp, #20]
   1588c:	str	r4, [sp]
   15890:	bl	31be0 <crc32@@Base+0x1843c>
   15894:	subs	r9, r0, #0
   15898:	blt	159f4 <__printf_chk@plt+0x3284>
   1589c:	beq	159cc <__printf_chk@plt+0x325c>
   158a0:	mov	r1, r6
   158a4:	mov	r0, r5
   158a8:	mov	r3, #0
   158ac:	mov	r2, r9
   158b0:	bl	18af4 <__printf_chk@plt+0x6384>
   158b4:	subs	sl, r0, #0
   158b8:	beq	15a40 <__printf_chk@plt+0x32d0>
   158bc:	ldr	r4, [sp, #88]	; 0x58
   158c0:	cmp	r4, #0
   158c4:	ble	1597c <__printf_chk@plt+0x320c>
   158c8:	ldr	r7, [sp, #92]	; 0x5c
   158cc:	mov	r8, #0
   158d0:	add	r4, r7, r4, lsl #2
   158d4:	mov	r6, r7
   158d8:	mov	r5, r7
   158dc:	ldr	r0, [r5], #4
   158e0:	add	r8, r8, #1
   158e4:	bl	125c0 <strlen@plt>
   158e8:	cmp	r4, r5
   158ec:	add	r8, r8, r0
   158f0:	bne	158dc <__printf_chk@plt+0x316c>
   158f4:	mov	r0, r8
   158f8:	bl	125a8 <malloc@plt>
   158fc:	subs	r8, r0, #0
   15900:	beq	15a20 <__printf_chk@plt+0x32b0>
   15904:	mov	r4, #0
   15908:	ldr	r1, [r6]
   1590c:	add	r0, r8, r4
   15910:	bl	123e0 <strcpy@plt>
   15914:	ldr	r0, [r6], #4
   15918:	bl	125c0 <strlen@plt>
   1591c:	add	r4, r4, #1
   15920:	cmp	r5, r6
   15924:	add	r4, r4, r0
   15928:	bne	15908 <__printf_chk@plt+0x3198>
   1592c:	mov	r5, #0
   15930:	b	15938 <__printf_chk@plt+0x31c8>
   15934:	ldr	r7, [sp, #92]	; 0x5c
   15938:	ldr	r0, [r7, r5, lsl #2]
   1593c:	add	r5, r5, #1
   15940:	bl	12128 <free@plt>
   15944:	ldr	r3, [sp, #88]	; 0x58
   15948:	cmp	r5, r3
   1594c:	blt	15934 <__printf_chk@plt+0x31c4>
   15950:	ldr	r0, [sp, #92]	; 0x5c
   15954:	bl	12128 <free@plt>
   15958:	ldr	r3, [sp, #60]	; 0x3c
   1595c:	str	r9, [r3]
   15960:	ldr	r3, [sp, #56]	; 0x38
   15964:	str	sl, [r3]
   15968:	ldr	r3, [sp, #64]	; 0x40
   1596c:	str	r8, [r3]
   15970:	ldr	r3, [sp, #68]	; 0x44
   15974:	str	r4, [r3]
   15978:	b	157d0 <__printf_chk@plt+0x3060>
   1597c:	mov	r0, #0
   15980:	bl	125a8 <malloc@plt>
   15984:	subs	r8, r0, #0
   15988:	beq	15a20 <__printf_chk@plt+0x32b0>
   1598c:	ldr	r0, [sp, #92]	; 0x5c
   15990:	mov	r4, #0
   15994:	b	15954 <__printf_chk@plt+0x31e4>
   15998:	ldr	r3, [sp, #32]
   1599c:	movw	r1, #28264	; 0x6e68
   159a0:	str	r7, [sp]
   159a4:	mov	r0, #1
   159a8:	ldr	r2, [sp, #24]
   159ac:	movt	r1, #3
   159b0:	bl	12770 <__printf_chk@plt>
   159b4:	mvn	r3, #41	; 0x29
   159b8:	str	r3, [sp, #36]	; 0x24
   159bc:	b	157d0 <__printf_chk@plt+0x3060>
   159c0:	mvn	r3, #1
   159c4:	str	r3, [sp, #36]	; 0x24
   159c8:	b	157d0 <__printf_chk@plt+0x3060>
   159cc:	bl	2f808 <crc32@@Base+0x16064>
   159d0:	ldrd	r2, [sp, #72]	; 0x48
   159d4:	movw	r1, #28608	; 0x6fc0
   159d8:	movt	r1, #3
   159dc:	mvn	ip, #21
   159e0:	str	ip, [sp, #36]	; 0x24
   159e4:	str	r0, [sp]
   159e8:	mov	r0, r4
   159ec:	bl	12770 <__printf_chk@plt>
   159f0:	b	157d0 <__printf_chk@plt+0x3060>
   159f4:	mov	r0, #0
   159f8:	mvn	r3, #4
   159fc:	str	r3, [sp, #36]	; 0x24
   15a00:	bl	2f808 <crc32@@Base+0x16064>
   15a04:	ldrd	r2, [sp, #72]	; 0x48
   15a08:	movw	r1, #28564	; 0x6f94
   15a0c:	movt	r1, #3
   15a10:	str	r0, [sp]
   15a14:	mov	r0, r4
   15a18:	bl	12770 <__printf_chk@plt>
   15a1c:	b	157d0 <__printf_chk@plt+0x3060>
   15a20:	ldrd	r2, [sp, #72]	; 0x48
   15a24:	movw	r1, #28704	; 0x7020
   15a28:	mov	r0, #1
   15a2c:	movt	r1, #3
   15a30:	mvn	ip, #11
   15a34:	str	ip, [sp, #36]	; 0x24
   15a38:	bl	12770 <__printf_chk@plt>
   15a3c:	b	157d0 <__printf_chk@plt+0x3060>
   15a40:	ldrd	r2, [sp, #72]	; 0x48
   15a44:	mov	r0, r4
   15a48:	movw	r1, #28656	; 0x6ff0
   15a4c:	movt	r1, #3
   15a50:	mvn	ip, #11
   15a54:	str	ip, [sp, #36]	; 0x24
   15a58:	bl	12770 <__printf_chk@plt>
   15a5c:	b	157d0 <__printf_chk@plt+0x3060>
   15a60:	bl	12494 <__stack_chk_fail@plt>
   15a64:	andeq	r6, r3, r7, lsl #26
   15a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a6c:	movw	ip, #61168	; 0xeef0
   15a70:	sub	sp, sp, #172	; 0xac
   15a74:	movt	ip, #4
   15a78:	mov	r5, r2
   15a7c:	mov	r4, r3
   15a80:	str	ip, [sp, #36]	; 0x24
   15a84:	mov	r7, r0
   15a88:	ldr	ip, [ip]
   15a8c:	mov	r0, r2
   15a90:	str	r1, [sp, #48]	; 0x30
   15a94:	add	r2, sp, #60	; 0x3c
   15a98:	mov	r1, r3
   15a9c:	add	r3, sp, #64	; 0x40
   15aa0:	str	ip, [sp, #164]	; 0xa4
   15aa4:	ldr	ip, [sp, #208]	; 0xd0
   15aa8:	str	ip, [sp, #40]	; 0x28
   15aac:	ldr	ip, [sp, #216]	; 0xd8
   15ab0:	str	ip, [sp, #28]
   15ab4:	ldr	ip, [sp, #220]	; 0xdc
   15ab8:	str	ip, [sp, #44]	; 0x2c
   15abc:	bl	16920 <__printf_chk@plt+0x41b0>
   15ac0:	subs	r3, r0, #0
   15ac4:	str	r3, [sp, #20]
   15ac8:	bne	15e60 <__printf_chk@plt+0x36f0>
   15acc:	mov	r1, r4
   15ad0:	ldr	r2, [sp, #20]
   15ad4:	mov	r0, r5
   15ad8:	bl	30c4c <crc32@@Base+0x174a8>
   15adc:	mov	r1, r4
   15ae0:	str	r0, [sp, #24]
   15ae4:	mov	r0, r5
   15ae8:	bl	2dac0 <crc32@@Base+0x1431c>
   15aec:	subs	r4, r0, #0
   15af0:	blt	15c6c <__printf_chk@plt+0x34fc>
   15af4:	ldr	r3, [sp, #212]	; 0xd4
   15af8:	movw	r6, #28388	; 0x6ee4
   15afc:	movw	r8, #29040	; 0x7170
   15b00:	movt	r6, #3
   15b04:	cmp	r3, #0
   15b08:	movt	r8, #3
   15b0c:	movw	r3, #35368	; 0x8a28
   15b10:	movt	r3, #3
   15b14:	moveq	r3, #0
   15b18:	str	r3, [sp, #32]
   15b1c:	movw	r3, #27988	; 0x6d54
   15b20:	movt	r3, #3
   15b24:	str	r3, [sp, #52]	; 0x34
   15b28:	b	15b60 <__printf_chk@plt+0x33f0>
   15b2c:	cmp	r7, #0
   15b30:	beq	15b4c <__printf_chk@plt+0x33dc>
   15b34:	mov	r0, r9
   15b38:	mov	r2, #9
   15b3c:	mov	r1, r8
   15b40:	bl	1217c <strncmp@plt>
   15b44:	cmp	r0, #0
   15b48:	beq	15c8c <__printf_chk@plt+0x351c>
   15b4c:	mov	r1, r4
   15b50:	mov	r0, r5
   15b54:	bl	2db20 <crc32@@Base+0x1437c>
   15b58:	subs	r4, r0, #0
   15b5c:	blt	15c6c <__printf_chk@plt+0x34fc>
   15b60:	mov	r2, #0
   15b64:	mov	r1, r4
   15b68:	mov	r0, r5
   15b6c:	bl	30c4c <crc32@@Base+0x174a8>
   15b70:	mov	r2, #4
   15b74:	mov	r1, r6
   15b78:	mov	r9, r0
   15b7c:	bl	1217c <strncmp@plt>
   15b80:	subs	r2, r0, #0
   15b84:	bne	15b2c <__printf_chk@plt+0x33bc>
   15b88:	mov	r1, r4
   15b8c:	mov	r0, r5
   15b90:	ldr	r9, [sp, #60]	; 0x3c
   15b94:	ldr	sl, [sp, #64]	; 0x40
   15b98:	bl	30c4c <crc32@@Base+0x174a8>
   15b9c:	add	r2, sp, #84	; 0x54
   15ba0:	mov	r1, r4
   15ba4:	mov	fp, r0
   15ba8:	mov	r0, r5
   15bac:	bl	17454 <__printf_chk@plt+0x4ce4>
   15bb0:	cmp	r0, #0
   15bb4:	bne	15e10 <__printf_chk@plt+0x36a0>
   15bb8:	mov	r1, sl
   15bbc:	add	ip, sp, #76	; 0x4c
   15bc0:	ldr	r2, [sp, #84]	; 0x54
   15bc4:	mov	r0, r9
   15bc8:	add	r3, sp, #132	; 0x84
   15bcc:	str	ip, [sp]
   15bd0:	bl	175a0 <__printf_chk@plt+0x4e30>
   15bd4:	subs	sl, r0, #0
   15bd8:	bne	15e34 <__printf_chk@plt+0x36c4>
   15bdc:	ldr	ip, [sp, #76]	; 0x4c
   15be0:	add	r3, sp, #132	; 0x84
   15be4:	movw	r2, #28088	; 0x6db8
   15be8:	mov	r1, r4
   15bec:	movt	r2, #3
   15bf0:	mov	r0, r5
   15bf4:	str	ip, [sp]
   15bf8:	bl	2f000 <crc32@@Base+0x1585c>
   15bfc:	cmp	r0, #0
   15c00:	beq	15b4c <__printf_chk@plt+0x33dc>
   15c04:	mov	r1, r4
   15c08:	mov	r9, r0
   15c0c:	mov	r2, sl
   15c10:	mov	r0, r5
   15c14:	bl	30c4c <crc32@@Base+0x174a8>
   15c18:	mov	r4, r0
   15c1c:	mov	r0, r9
   15c20:	bl	2f808 <crc32@@Base+0x16064>
   15c24:	mov	r3, r4
   15c28:	movw	r2, #28088	; 0x6db8
   15c2c:	movw	r1, #28932	; 0x7104
   15c30:	movt	r2, #3
   15c34:	movt	r1, #3
   15c38:	str	r0, [sp]
   15c3c:	mov	r0, #1
   15c40:	bl	12770 <__printf_chk@plt>
   15c44:	cmn	r9, #3
   15c48:	movw	r1, #28980	; 0x7134
   15c4c:	ldr	r3, [sp, #24]
   15c50:	mov	r2, fp
   15c54:	mov	r0, #1
   15c58:	movt	r1, #3
   15c5c:	mvnne	ip, #4
   15c60:	mvneq	ip, #27
   15c64:	str	ip, [sp, #20]
   15c68:	bl	12770 <__printf_chk@plt>
   15c6c:	ldr	r3, [sp, #36]	; 0x24
   15c70:	ldr	r2, [sp, #164]	; 0xa4
   15c74:	ldr	r0, [sp, #20]
   15c78:	ldr	r3, [r3]
   15c7c:	cmp	r2, r3
   15c80:	bne	15e78 <__printf_chk@plt+0x3708>
   15c84:	add	sp, sp, #172	; 0xac
   15c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c8c:	ldr	r3, [sp, #28]
   15c90:	mov	r2, r5
   15c94:	str	r4, [sp]
   15c98:	add	r0, sp, #84	; 0x54
   15c9c:	mov	r1, r7
   15ca0:	ldr	sl, [sp, #60]	; 0x3c
   15ca4:	str	r3, [sp, #8]
   15ca8:	ldr	r3, [sp, #32]
   15cac:	ldr	r9, [sp, #64]	; 0x40
   15cb0:	str	r3, [sp, #4]
   15cb4:	ldr	r3, [sp, #24]
   15cb8:	bl	15170 <__printf_chk@plt+0x2a00>
   15cbc:	subs	r2, r0, #0
   15cc0:	bne	15d2c <__printf_chk@plt+0x35bc>
   15cc4:	mov	r1, r4
   15cc8:	mov	r0, r5
   15ccc:	bl	30c4c <crc32@@Base+0x174a8>
   15cd0:	add	r1, sp, #72	; 0x48
   15cd4:	str	r9, [sp, #80]	; 0x50
   15cd8:	add	r3, sp, #68	; 0x44
   15cdc:	str	r1, [sp]
   15ce0:	mov	r2, #1
   15ce4:	str	sl, [sp, #76]	; 0x4c
   15ce8:	add	r1, sp, #76	; 0x4c
   15cec:	mov	fp, r0
   15cf0:	ldr	r0, [sp, #112]	; 0x70
   15cf4:	ldr	r9, [r0, #8]
   15cf8:	add	r0, sp, #84	; 0x54
   15cfc:	blx	r9
   15d00:	subs	r9, r0, #0
   15d04:	beq	15d38 <__printf_chk@plt+0x35c8>
   15d08:	str	r9, [sp]
   15d0c:	mov	r2, fp
   15d10:	movw	r1, #29052	; 0x717c
   15d14:	ldr	r3, [sp, #24]
   15d18:	movt	r1, #3
   15d1c:	mov	r0, #1
   15d20:	bl	12770 <__printf_chk@plt>
   15d24:	cmn	r9, #2
   15d28:	beq	15b4c <__printf_chk@plt+0x33dc>
   15d2c:	mvn	r3, #0
   15d30:	str	r3, [sp, #20]
   15d34:	b	15c6c <__printf_chk@plt+0x34fc>
   15d38:	ldr	ip, [sp, #44]	; 0x2c
   15d3c:	mov	r1, r4
   15d40:	str	r9, [sp, #8]
   15d44:	mov	r0, r5
   15d48:	str	r9, [sp, #4]
   15d4c:	str	ip, [sp, #12]
   15d50:	ldr	ip, [sp, #40]	; 0x28
   15d54:	ldr	r3, [sp, #72]	; 0x48
   15d58:	ldr	r2, [sp, #68]	; 0x44
   15d5c:	str	ip, [sp]
   15d60:	bl	152d8 <__printf_chk@plt+0x2b68>
   15d64:	subs	r9, r0, #0
   15d68:	beq	15da8 <__printf_chk@plt+0x3638>
   15d6c:	cmn	r9, #3
   15d70:	mvneq	r3, #27
   15d74:	streq	r3, [sp, #20]
   15d78:	beq	15c6c <__printf_chk@plt+0x34fc>
   15d7c:	bl	2f808 <crc32@@Base+0x16064>
   15d80:	ldr	r3, [sp, #24]
   15d84:	mov	r2, fp
   15d88:	movw	r1, #29112	; 0x71b8
   15d8c:	movt	r1, #3
   15d90:	mvn	ip, #0
   15d94:	str	ip, [sp, #20]
   15d98:	str	r0, [sp]
   15d9c:	mov	r0, #1
   15da0:	bl	12770 <__printf_chk@plt>
   15da4:	b	15c6c <__printf_chk@plt+0x34fc>
   15da8:	ldr	r0, [sp, #68]	; 0x44
   15dac:	bl	12128 <free@plt>
   15db0:	mov	r1, r4
   15db4:	mov	r3, r9
   15db8:	ldr	r2, [sp, #52]	; 0x34
   15dbc:	mov	r0, r5
   15dc0:	bl	30f4c <crc32@@Base+0x177a8>
   15dc4:	ldr	r1, [sp, #48]	; 0x30
   15dc8:	cmp	r1, #0
   15dcc:	str	r0, [sp, #88]	; 0x58
   15dd0:	beq	15b4c <__printf_chk@plt+0x33dc>
   15dd4:	ldr	r3, [sp, #112]	; 0x70
   15dd8:	add	r0, sp, #84	; 0x54
   15ddc:	ldr	r3, [r3, #12]
   15de0:	blx	r3
   15de4:	cmp	r0, #0
   15de8:	beq	15b4c <__printf_chk@plt+0x33dc>
   15dec:	mov	ip, r0
   15df0:	ldr	r3, [sp, #24]
   15df4:	mov	r2, fp
   15df8:	movw	r1, #29184	; 0x7200
   15dfc:	mov	r0, #1
   15e00:	movt	r1, #3
   15e04:	str	ip, [sp, #20]
   15e08:	bl	12770 <__printf_chk@plt>
   15e0c:	b	15c6c <__printf_chk@plt+0x34fc>
   15e10:	ldr	r3, [sp, #24]
   15e14:	mov	r2, fp
   15e18:	movw	r1, #28792	; 0x7078
   15e1c:	mov	r0, #1
   15e20:	movt	r1, #3
   15e24:	mvn	ip, #1
   15e28:	str	ip, [sp, #20]
   15e2c:	bl	12770 <__printf_chk@plt>
   15e30:	b	15c6c <__printf_chk@plt+0x34fc>
   15e34:	ldr	r1, [sp, #24]
   15e38:	mov	r3, fp
   15e3c:	ldr	r2, [sp, #84]	; 0x54
   15e40:	mov	r0, #1
   15e44:	mvn	ip, #92	; 0x5c
   15e48:	str	ip, [sp, #20]
   15e4c:	str	r1, [sp]
   15e50:	movw	r1, #28860	; 0x70bc
   15e54:	movt	r1, #3
   15e58:	bl	12770 <__printf_chk@plt>
   15e5c:	b	15c6c <__printf_chk@plt+0x34fc>
   15e60:	movw	r0, #28764	; 0x705c
   15e64:	movt	r0, #3
   15e68:	bl	1226c <puts@plt>
   15e6c:	mvn	r3, #0
   15e70:	str	r3, [sp, #20]
   15e74:	b	15c6c <__printf_chk@plt+0x34fc>
   15e78:	bl	12494 <__stack_chk_fail@plt>
   15e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e80:	movw	ip, #61168	; 0xeef0
   15e84:	sub	sp, sp, #132	; 0x84
   15e88:	movt	ip, #4
   15e8c:	mov	r4, r2
   15e90:	mov	r8, r0
   15e94:	ldr	r2, [ip]
   15e98:	mov	r0, r4
   15e9c:	str	r3, [sp, #24]
   15ea0:	ldr	r3, [sp, #176]	; 0xb0
   15ea4:	str	r1, [sp, #36]	; 0x24
   15ea8:	movw	r1, #27112	; 0x69e8
   15eac:	movt	r1, #3
   15eb0:	str	ip, [sp, #40]	; 0x28
   15eb4:	str	r2, [sp, #124]	; 0x7c
   15eb8:	ldr	r5, [sp, #168]	; 0xa8
   15ebc:	ldr	r9, [sp, #172]	; 0xac
   15ec0:	str	r3, [sp, #28]
   15ec4:	bl	312a8 <crc32@@Base+0x17b04>
   15ec8:	subs	r6, r0, #0
   15ecc:	blt	1616c <__printf_chk@plt+0x39fc>
   15ed0:	mov	r1, r6
   15ed4:	mov	r0, r4
   15ed8:	bl	2dac0 <crc32@@Base+0x1431c>
   15edc:	subs	r7, r0, #0
   15ee0:	blt	15f58 <__printf_chk@plt+0x37e8>
   15ee4:	ldr	sl, [sp, #36]	; 0x24
   15ee8:	ldr	fp, [sp, #24]
   15eec:	ldr	r6, [sp, #28]
   15ef0:	b	15f08 <__printf_chk@plt+0x3798>
   15ef4:	mov	r1, r7
   15ef8:	mov	r0, r4
   15efc:	bl	2db20 <crc32@@Base+0x1437c>
   15f00:	subs	r7, r0, #0
   15f04:	blt	15f58 <__printf_chk@plt+0x37e8>
   15f08:	str	r6, [sp, #12]
   15f0c:	mov	r3, r7
   15f10:	str	r9, [sp, #8]
   15f14:	mov	r2, r4
   15f18:	str	r5, [sp, #4]
   15f1c:	mov	r1, sl
   15f20:	str	fp, [sp]
   15f24:	mov	r0, r8
   15f28:	bl	15a68 <__printf_chk@plt+0x32f8>
   15f2c:	cmp	r0, #0
   15f30:	beq	15ef4 <__printf_chk@plt+0x3784>
   15f34:	mov	r6, r0
   15f38:	ldr	r3, [sp, #40]	; 0x28
   15f3c:	mov	r0, r6
   15f40:	ldr	r2, [sp, #124]	; 0x7c
   15f44:	ldr	r3, [r3]
   15f48:	cmp	r2, r3
   15f4c:	bne	1622c <__printf_chk@plt+0x3abc>
   15f50:	add	sp, sp, #132	; 0x84
   15f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f58:	cmp	r8, #0
   15f5c:	beq	16164 <__printf_chk@plt+0x39f4>
   15f60:	movw	r1, #28172	; 0x6e0c
   15f64:	mov	r0, r4
   15f68:	movt	r1, #3
   15f6c:	bl	312a8 <crc32@@Base+0x17b04>
   15f70:	subs	r1, r0, #0
   15f74:	blt	16204 <__printf_chk@plt+0x3a94>
   15f78:	mov	r0, r4
   15f7c:	bl	2dac0 <crc32@@Base+0x1431c>
   15f80:	subs	fp, r0, #0
   15f84:	blt	16164 <__printf_chk@plt+0x39f4>
   15f88:	cmp	r5, #0
   15f8c:	movw	r7, #29040	; 0x7170
   15f90:	movt	r7, #3
   15f94:	movw	r3, #29260	; 0x724c
   15f98:	movw	r2, #29268	; 0x7254
   15f9c:	movt	r3, #3
   15fa0:	movt	r2, #3
   15fa4:	moveq	r3, #0
   15fa8:	str	r2, [sp, #32]
   15fac:	str	r3, [sp, #16]
   15fb0:	movw	r3, #27988	; 0x6d54
   15fb4:	str	r8, [sp, #20]
   15fb8:	movt	r3, #3
   15fbc:	str	r3, [sp, #44]	; 0x2c
   15fc0:	mov	r2, #0
   15fc4:	mov	r1, fp
   15fc8:	mov	r0, r4
   15fcc:	bl	30c4c <crc32@@Base+0x174a8>
   15fd0:	mov	r1, fp
   15fd4:	mov	sl, r0
   15fd8:	mov	r0, r4
   15fdc:	bl	2dac0 <crc32@@Base+0x1431c>
   15fe0:	subs	r5, r0, #0
   15fe4:	bge	1601c <__printf_chk@plt+0x38ac>
   15fe8:	b	16150 <__printf_chk@plt+0x39e0>
   15fec:	mov	r2, r8
   15ff0:	mov	r3, sl
   15ff4:	ldr	r1, [sp, #32]
   15ff8:	mov	r0, #1
   15ffc:	bl	12770 <__printf_chk@plt>
   16000:	cmn	r6, #2
   16004:	bne	161fc <__printf_chk@plt+0x3a8c>
   16008:	mov	r1, r5
   1600c:	mov	r0, r4
   16010:	bl	2db20 <crc32@@Base+0x1437c>
   16014:	subs	r5, r0, #0
   16018:	blt	16150 <__printf_chk@plt+0x39e0>
   1601c:	mov	r2, #0
   16020:	mov	r1, r5
   16024:	mov	r0, r4
   16028:	bl	30c4c <crc32@@Base+0x174a8>
   1602c:	mov	r2, #9
   16030:	mov	r1, r7
   16034:	bl	1217c <strncmp@plt>
   16038:	subs	r2, r0, #0
   1603c:	bne	16008 <__printf_chk@plt+0x3898>
   16040:	mov	r1, r5
   16044:	mov	r0, r4
   16048:	bl	30c4c <crc32@@Base+0x174a8>
   1604c:	add	r2, sp, #60	; 0x3c
   16050:	add	r3, sp, #56	; 0x38
   16054:	str	r2, [sp, #8]
   16058:	str	r3, [sp, #4]
   1605c:	add	r2, sp, #64	; 0x40
   16060:	add	r3, sp, #52	; 0x34
   16064:	str	r2, [sp]
   16068:	mov	r1, fp
   1606c:	mov	r2, r5
   16070:	mov	r8, r0
   16074:	mov	r0, r4
   16078:	bl	154c4 <__printf_chk@plt+0x2d54>
   1607c:	cmp	r0, #0
   16080:	bne	161fc <__printf_chk@plt+0x3a8c>
   16084:	ldr	r3, [sp, #16]
   16088:	add	r0, sp, #76	; 0x4c
   1608c:	str	r9, [sp, #8]
   16090:	mov	r2, r4
   16094:	str	r5, [sp]
   16098:	str	r3, [sp, #4]
   1609c:	mov	r3, sl
   160a0:	ldr	r1, [sp, #20]
   160a4:	bl	15170 <__printf_chk@plt+0x2a00>
   160a8:	cmp	r0, #0
   160ac:	bne	161fc <__printf_chk@plt+0x3a8c>
   160b0:	ldr	ip, [sp, #104]	; 0x68
   160b4:	add	lr, sp, #72	; 0x48
   160b8:	ldr	r2, [sp, #64]	; 0x40
   160bc:	add	r3, sp, #68	; 0x44
   160c0:	str	lr, [sp]
   160c4:	add	r0, sp, #76	; 0x4c
   160c8:	ldr	r6, [ip, #8]
   160cc:	ldr	r1, [sp, #52]	; 0x34
   160d0:	blx	r6
   160d4:	mov	r6, r0
   160d8:	ldr	r0, [sp, #52]	; 0x34
   160dc:	bl	12128 <free@plt>
   160e0:	cmp	r6, #0
   160e4:	bne	15fec <__printf_chk@plt+0x387c>
   160e8:	ldr	r6, [sp, #28]
   160ec:	mov	r1, r5
   160f0:	ldr	lr, [sp, #60]	; 0x3c
   160f4:	mov	r0, r4
   160f8:	ldr	ip, [sp, #56]	; 0x38
   160fc:	str	r6, [sp, #12]
   16100:	ldr	r6, [sp, #24]
   16104:	ldr	r3, [sp, #72]	; 0x48
   16108:	ldr	r2, [sp, #68]	; 0x44
   1610c:	stm	sp, {r6, ip, lr}
   16110:	bl	152d8 <__printf_chk@plt+0x2b68>
   16114:	subs	r6, r0, #0
   16118:	beq	16190 <__printf_chk@plt+0x3a20>
   1611c:	cmn	r6, #3
   16120:	mvneq	r6, #27
   16124:	beq	15f38 <__printf_chk@plt+0x37c8>
   16128:	bl	2f808 <crc32@@Base+0x16064>
   1612c:	mov	r3, sl
   16130:	mov	r2, r8
   16134:	movw	r1, #29112	; 0x71b8
   16138:	movt	r1, #3
   1613c:	mvn	r6, #0
   16140:	str	r0, [sp]
   16144:	mov	r0, #1
   16148:	bl	12770 <__printf_chk@plt>
   1614c:	b	15f38 <__printf_chk@plt+0x37c8>
   16150:	mov	r1, fp
   16154:	mov	r0, r4
   16158:	bl	2db20 <crc32@@Base+0x1437c>
   1615c:	subs	fp, r0, #0
   16160:	bge	15fc0 <__printf_chk@plt+0x3850>
   16164:	mov	r6, #0
   16168:	b	15f38 <__printf_chk@plt+0x37c8>
   1616c:	bl	2f808 <crc32@@Base+0x16064>
   16170:	movw	r2, #27112	; 0x69e8
   16174:	movw	r1, #27120	; 0x69f0
   16178:	movt	r2, #3
   1617c:	movt	r1, #3
   16180:	mov	r3, r0
   16184:	mov	r0, #1
   16188:	bl	12770 <__printf_chk@plt>
   1618c:	b	15f38 <__printf_chk@plt+0x37c8>
   16190:	ldr	r0, [sp, #68]	; 0x44
   16194:	bl	12128 <free@plt>
   16198:	ldr	r0, [sp, #56]	; 0x38
   1619c:	bl	12128 <free@plt>
   161a0:	mov	r1, r5
   161a4:	mov	r3, r6
   161a8:	ldr	r2, [sp, #44]	; 0x2c
   161ac:	mov	r0, r4
   161b0:	bl	30f4c <crc32@@Base+0x177a8>
   161b4:	ldr	r1, [sp, #36]	; 0x24
   161b8:	cmp	r1, #0
   161bc:	str	r0, [sp, #80]	; 0x50
   161c0:	beq	16008 <__printf_chk@plt+0x3898>
   161c4:	ldr	r3, [sp, #104]	; 0x68
   161c8:	add	r0, sp, #76	; 0x4c
   161cc:	ldr	r3, [r3, #12]
   161d0:	blx	r3
   161d4:	cmp	r0, #0
   161d8:	beq	16008 <__printf_chk@plt+0x3898>
   161dc:	mov	r6, r0
   161e0:	mov	r2, r8
   161e4:	mov	r3, sl
   161e8:	movw	r1, #29324	; 0x728c
   161ec:	mov	r0, #1
   161f0:	movt	r1, #3
   161f4:	bl	12770 <__printf_chk@plt>
   161f8:	b	15f38 <__printf_chk@plt+0x37c8>
   161fc:	mvn	r6, #0
   16200:	b	15f38 <__printf_chk@plt+0x37c8>
   16204:	bl	2f808 <crc32@@Base+0x16064>
   16208:	movw	r2, #28172	; 0x6e0c
   1620c:	movw	r1, #27120	; 0x69f0
   16210:	movt	r2, #3
   16214:	movt	r1, #3
   16218:	mvn	r6, #1
   1621c:	mov	r3, r0
   16220:	mov	r0, #1
   16224:	bl	12770 <__printf_chk@plt>
   16228:	b	15f38 <__printf_chk@plt+0x37c8>
   1622c:	bl	12494 <__stack_chk_fail@plt>
   16230:	push	{r4, r5, r6, lr}
   16234:	mov	r1, #0
   16238:	mov	r4, r0
   1623c:	bl	17fd8 <__printf_chk@plt+0x5868>
   16240:	subs	r5, r0, #0
   16244:	beq	1627c <__printf_chk@plt+0x3b0c>
   16248:	movw	r1, #29408	; 0x72e0
   1624c:	mov	r0, #1
   16250:	movt	r1, #3
   16254:	bl	12770 <__printf_chk@plt>
   16258:	mov	r1, r5
   1625c:	mov	r0, r4
   16260:	bl	19404 <__printf_chk@plt+0x6c94>
   16264:	cmp	r0, #0
   16268:	popne	{r4, r5, r6, pc}
   1626c:	mov	r1, r5
   16270:	mov	r0, r4
   16274:	pop	{r4, r5, r6, lr}
   16278:	b	19510 <__printf_chk@plt+0x6da0>
   1627c:	mvn	r0, #0
   16280:	pop	{r4, r5, r6, pc}
   16284:	push	{r4, r5, r6, lr}
   16288:	movw	r4, #61168	; 0xeef0
   1628c:	movt	r4, #4
   16290:	sub	sp, sp, #8
   16294:	mov	r5, r3
   16298:	mov	r6, r2
   1629c:	ldr	ip, [r4]
   162a0:	mov	r3, sp
   162a4:	str	ip, [sp, #4]
   162a8:	bl	30f4c <crc32@@Base+0x177a8>
   162ac:	cmp	r0, #0
   162b0:	beq	16308 <__printf_chk@plt+0x3b98>
   162b4:	ldr	r3, [sp]
   162b8:	cmp	r3, #4
   162bc:	bhi	162ec <__printf_chk@plt+0x3b7c>
   162c0:	asrs	r3, r3, #2
   162c4:	ldrne	r3, [r0]
   162c8:	mov	r0, #0
   162cc:	revne	r3, r3
   162d0:	str	r3, [r5]
   162d4:	ldr	r2, [sp, #4]
   162d8:	ldr	r3, [r4]
   162dc:	cmp	r2, r3
   162e0:	bne	16310 <__printf_chk@plt+0x3ba0>
   162e4:	add	sp, sp, #8
   162e8:	pop	{r4, r5, r6, pc}
   162ec:	mov	r2, r6
   162f0:	movw	r1, #29556	; 0x7374
   162f4:	mov	r0, #1
   162f8:	movt	r1, #3
   162fc:	bl	12770 <__printf_chk@plt>
   16300:	mvn	r0, #0
   16304:	b	162d4 <__printf_chk@plt+0x3b64>
   16308:	mvn	r0, #0
   1630c:	b	162d4 <__printf_chk@plt+0x3b64>
   16310:	bl	12494 <__stack_chk_fail@plt>
   16314:	push	{r4, r5, r6, r7, lr}
   16318:	movw	r7, #61168	; 0xeef0
   1631c:	movt	r7, #4
   16320:	sub	sp, sp, #12
   16324:	add	r4, sp, #8
   16328:	mov	r5, #0
   1632c:	ldr	r3, [r7]
   16330:	mov	r6, r0
   16334:	str	r5, [r4, #-8]!
   16338:	mov	r2, r4
   1633c:	str	r3, [sp, #4]
   16340:	bl	2d9d0 <crc32@@Base+0x1422c>
   16344:	subs	r1, r0, #0
   16348:	blt	16384 <__printf_chk@plt+0x3c14>
   1634c:	ldr	r3, [sp]
   16350:	cmp	r3, r5
   16354:	bgt	16368 <__printf_chk@plt+0x3bf8>
   16358:	b	16384 <__printf_chk@plt+0x3c14>
   1635c:	ldr	r3, [sp]
   16360:	cmp	r3, #0
   16364:	ble	16384 <__printf_chk@plt+0x3c14>
   16368:	cmp	r3, #1
   1636c:	mov	r2, r4
   16370:	mov	r0, r6
   16374:	addeq	r5, r5, #1
   16378:	bl	2d9d0 <crc32@@Base+0x1422c>
   1637c:	subs	r1, r0, #0
   16380:	bge	1635c <__printf_chk@plt+0x3bec>
   16384:	ldr	r2, [sp, #4]
   16388:	mov	r0, r5
   1638c:	ldr	r3, [r7]
   16390:	cmp	r2, r3
   16394:	bne	163a0 <__printf_chk@plt+0x3c30>
   16398:	add	sp, sp, #12
   1639c:	pop	{r4, r5, r6, r7, pc}
   163a0:	bl	12494 <__stack_chk_fail@plt>
   163a4:	push	{r4, r5, lr}
   163a8:	movw	r4, #61168	; 0xeef0
   163ac:	movt	r4, #4
   163b0:	sub	sp, sp, #12
   163b4:	mov	r5, r2
   163b8:	movw	r2, #27364	; 0x6ae4
   163bc:	ldr	ip, [r4]
   163c0:	mov	r3, sp
   163c4:	movt	r2, #3
   163c8:	str	ip, [sp, #4]
   163cc:	bl	30f4c <crc32@@Base+0x177a8>
   163d0:	ldr	r2, [sp, #4]
   163d4:	str	r0, [r5]
   163d8:	ldr	r3, [r4]
   163dc:	cmp	r2, r3
   163e0:	bne	163f8 <__printf_chk@plt+0x3c88>
   163e4:	clz	r0, r0
   163e8:	lsr	r0, r0, #5
   163ec:	rsb	r0, r0, #0
   163f0:	add	sp, sp, #12
   163f4:	pop	{r4, r5, pc}
   163f8:	bl	12494 <__stack_chk_fail@plt>
   163fc:	push	{r4, r5, lr}
   16400:	movw	r4, #61168	; 0xeef0
   16404:	movt	r4, #4
   16408:	sub	sp, sp, #12
   1640c:	mov	r5, r2
   16410:	movw	r2, #29588	; 0x7394
   16414:	ldr	ip, [r4]
   16418:	mov	r3, sp
   1641c:	movt	r2, #3
   16420:	str	ip, [sp, #4]
   16424:	bl	30f4c <crc32@@Base+0x177a8>
   16428:	cmp	r0, #0
   1642c:	beq	1646c <__printf_chk@plt+0x3cfc>
   16430:	ldr	r3, [sp]
   16434:	cmp	r3, #4
   16438:	bne	16464 <__printf_chk@plt+0x3cf4>
   1643c:	ldr	r3, [r0]
   16440:	mov	r0, #0
   16444:	rev	r3, r3
   16448:	str	r3, [r5]
   1644c:	ldr	r2, [sp, #4]
   16450:	ldr	r3, [r4]
   16454:	cmp	r2, r3
   16458:	bne	16474 <__printf_chk@plt+0x3d04>
   1645c:	add	sp, sp, #12
   16460:	pop	{r4, r5, pc}
   16464:	mvn	r0, #1
   16468:	b	1644c <__printf_chk@plt+0x3cdc>
   1646c:	mvn	r0, #0
   16470:	b	1644c <__printf_chk@plt+0x3cdc>
   16474:	bl	12494 <__stack_chk_fail@plt>
   16478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1647c:	movw	r7, #61168	; 0xeef0
   16480:	movt	r7, #4
   16484:	sub	sp, sp, #20
   16488:	mov	r6, r1
   1648c:	mov	r5, r0
   16490:	ldr	ip, [r7]
   16494:	movw	r1, #29600	; 0x73a0
   16498:	mov	r0, #1
   1649c:	movt	r1, #3
   164a0:	mov	sl, r2
   164a4:	mov	fp, r3
   164a8:	str	ip, [sp, #12]
   164ac:	bl	12770 <__printf_chk@plt>
   164b0:	mov	r1, r6
   164b4:	mov	r0, r5
   164b8:	add	r3, sp, #8
   164bc:	movw	r2, #29620	; 0x73b4
   164c0:	movt	r2, #3
   164c4:	bl	30f4c <crc32@@Base+0x177a8>
   164c8:	subs	r2, r0, #0
   164cc:	beq	16660 <__printf_chk@plt+0x3ef0>
   164d0:	movw	r1, #55508	; 0xd8d4
   164d4:	mov	r0, #1
   164d8:	movt	r1, #3
   164dc:	bl	12770 <__printf_chk@plt>
   164e0:	mov	r3, #0
   164e4:	mov	r1, r6
   164e8:	movw	r2, #27988	; 0x6d54
   164ec:	mov	r0, r5
   164f0:	movt	r2, #3
   164f4:	bl	30f4c <crc32@@Base+0x177a8>
   164f8:	movw	r2, #29628	; 0x73bc
   164fc:	mov	r3, #0
   16500:	movt	r2, #3
   16504:	mov	r1, r6
   16508:	mov	r9, r0
   1650c:	mov	r0, r5
   16510:	bl	30f4c <crc32@@Base+0x177a8>
   16514:	cmp	r9, #0
   16518:	mov	r4, r0
   1651c:	beq	16534 <__printf_chk@plt+0x3dc4>
   16520:	movw	r1, #29660	; 0x73dc
   16524:	mov	r2, r9
   16528:	movt	r1, #3
   1652c:	mov	r0, #1
   16530:	bl	12770 <__printf_chk@plt>
   16534:	cmp	r4, #0
   16538:	beq	1654c <__printf_chk@plt+0x3ddc>
   1653c:	movw	r1, #29664	; 0x73e0
   16540:	mov	r0, #1
   16544:	movt	r1, #3
   16548:	bl	12770 <__printf_chk@plt>
   1654c:	mov	r0, #10
   16550:	bl	122d8 <putchar@plt>
   16554:	movw	r2, #27980	; 0x6d4c
   16558:	mov	r3, #0
   1655c:	movt	r2, #3
   16560:	mov	r1, r6
   16564:	mov	r0, r5
   16568:	bl	30f4c <crc32@@Base+0x177a8>
   1656c:	cmp	r0, #0
   16570:	beq	16590 <__printf_chk@plt+0x3e20>
   16574:	str	r0, [sp]
   16578:	movw	r1, #29676	; 0x73ec
   1657c:	mov	r3, fp
   16580:	movt	r1, #3
   16584:	mov	r2, sl
   16588:	mov	r0, #1
   1658c:	bl	12770 <__printf_chk@plt>
   16590:	movw	r2, #28088	; 0x6db8
   16594:	add	r3, sp, #8
   16598:	movt	r2, #3
   1659c:	mov	r1, r6
   165a0:	mov	r0, r5
   165a4:	bl	30f4c <crc32@@Base+0x177a8>
   165a8:	subs	r8, r0, #0
   165ac:	beq	16670 <__printf_chk@plt+0x3f00>
   165b0:	ldr	r4, [sp, #8]
   165b4:	mov	r3, fp
   165b8:	movw	r1, #29696	; 0x7400
   165bc:	mov	r2, sl
   165c0:	movt	r1, #3
   165c4:	mov	r0, #1
   165c8:	bl	12770 <__printf_chk@plt>
   165cc:	cmp	r4, #0
   165d0:	ble	16600 <__printf_chk@plt+0x3e90>
   165d4:	sub	r3, r4, #1
   165d8:	movw	fp, #29728	; 0x7420
   165dc:	sub	r4, r8, #1
   165e0:	movt	fp, #3
   165e4:	add	r8, r8, r3
   165e8:	ldrb	r2, [r4, #1]!
   165ec:	mov	r1, fp
   165f0:	mov	r0, #1
   165f4:	bl	12770 <__printf_chk@plt>
   165f8:	cmp	r8, r4
   165fc:	bne	165e8 <__printf_chk@plt+0x3e78>
   16600:	mov	r0, #10
   16604:	bl	122d8 <putchar@plt>
   16608:	cmp	r9, #0
   1660c:	beq	16648 <__printf_chk@plt+0x3ed8>
   16610:	mov	r2, sl
   16614:	movw	r1, #29736	; 0x7428
   16618:	mov	r0, #1
   1661c:	movt	r1, #3
   16620:	bl	12770 <__printf_chk@plt>
   16624:	add	r2, sp, #8
   16628:	mov	r1, r6
   1662c:	mov	r0, r5
   16630:	bl	163fc <__printf_chk@plt+0x3c8c>
   16634:	cmp	r0, #0
   16638:	beq	16698 <__printf_chk@plt+0x3f28>
   1663c:	movw	r0, #29716	; 0x7414
   16640:	movt	r0, #3
   16644:	bl	1226c <puts@plt>
   16648:	ldr	r2, [sp, #12]
   1664c:	ldr	r3, [r7]
   16650:	cmp	r2, r3
   16654:	bne	166a4 <__printf_chk@plt+0x3f34>
   16658:	add	sp, sp, #20
   1665c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16660:	movw	r0, #29640	; 0x73c8
   16664:	movt	r0, #3
   16668:	bl	1226c <puts@plt>
   1666c:	b	16648 <__printf_chk@plt+0x3ed8>
   16670:	mov	r3, fp
   16674:	mov	r2, sl
   16678:	movw	r1, #29696	; 0x7400
   1667c:	mov	r0, #1
   16680:	movt	r1, #3
   16684:	bl	12770 <__printf_chk@plt>
   16688:	movw	r0, #29716	; 0x7414
   1668c:	movt	r0, #3
   16690:	bl	1226c <puts@plt>
   16694:	b	16608 <__printf_chk@plt+0x3e98>
   16698:	ldr	r0, [sp, #8]
   1669c:	bl	19de8 <crc32@@Base+0x644>
   166a0:	b	16648 <__printf_chk@plt+0x3ed8>
   166a4:	bl	12494 <__stack_chk_fail@plt>
   166a8:	push	{r4, r5, r6, r7, r8, lr}
   166ac:	mov	r7, r2
   166b0:	mov	r2, #0
   166b4:	mov	r6, r1
   166b8:	mov	r5, r0
   166bc:	bl	30c4c <crc32@@Base+0x174a8>
   166c0:	movw	r1, #28388	; 0x6ee4
   166c4:	mov	r2, #4
   166c8:	movt	r1, #3
   166cc:	mov	r4, r0
   166d0:	bl	1217c <strncmp@plt>
   166d4:	cmp	r0, #0
   166d8:	beq	16714 <__printf_chk@plt+0x3fa4>
   166dc:	mov	r0, r4
   166e0:	movw	r1, #29040	; 0x7170
   166e4:	mov	r2, #9
   166e8:	movt	r1, #3
   166ec:	bl	1217c <strncmp@plt>
   166f0:	cmp	r0, #0
   166f4:	popne	{r4, r5, r6, r7, r8, pc}
   166f8:	mov	r2, r7
   166fc:	mov	r1, r6
   16700:	mov	r0, r5
   16704:	movw	r3, #29764	; 0x7444
   16708:	pop	{r4, r5, r6, r7, r8, lr}
   1670c:	movt	r3, #3
   16710:	b	16478 <__printf_chk@plt+0x3d08>
   16714:	mov	r2, r7
   16718:	mov	r1, r6
   1671c:	mov	r0, r5
   16720:	movw	r3, #29756	; 0x743c
   16724:	pop	{r4, r5, r6, r7, r8, lr}
   16728:	movt	r3, #3
   1672c:	b	16478 <__printf_chk@plt+0x3d08>
   16730:	push	{r4, r5, r6, lr}
   16734:	mov	r5, r1
   16738:	movw	r1, #27112	; 0x69e8
   1673c:	movt	r1, #3
   16740:	mov	r4, r0
   16744:	bl	312a8 <crc32@@Base+0x17b04>
   16748:	subs	r1, r0, #0
   1674c:	poplt	{r4, r5, r6, pc}
   16750:	mov	r2, r5
   16754:	mov	r0, r4
   16758:	pop	{r4, r5, r6, lr}
   1675c:	b	30c1c <crc32@@Base+0x17478>
   16760:	push	{r4, r5, lr}
   16764:	movw	r4, #61168	; 0xeef0
   16768:	movt	r4, #4
   1676c:	sub	sp, sp, #12
   16770:	mov	r5, r2
   16774:	movw	r2, #36064	; 0x8ce0
   16778:	ldr	ip, [r4]
   1677c:	mov	r3, sp
   16780:	movt	r2, #3
   16784:	str	ip, [sp, #4]
   16788:	bl	30f4c <crc32@@Base+0x177a8>
   1678c:	cmp	r0, #0
   16790:	mvneq	r3, #0
   16794:	strbeq	r3, [r5]
   16798:	beq	167a8 <__printf_chk@plt+0x4038>
   1679c:	bl	1a66c <crc32@@Base+0xec8>
   167a0:	mov	r3, #0
   167a4:	strb	r0, [r5]
   167a8:	ldr	r2, [sp, #4]
   167ac:	mov	r0, r3
   167b0:	ldr	r3, [r4]
   167b4:	cmp	r2, r3
   167b8:	bne	167c4 <__printf_chk@plt+0x4054>
   167bc:	add	sp, sp, #12
   167c0:	pop	{r4, r5, pc}
   167c4:	bl	12494 <__stack_chk_fail@plt>
   167c8:	push	{r4, r5, lr}
   167cc:	movw	r4, #61168	; 0xeef0
   167d0:	movt	r4, #4
   167d4:	sub	sp, sp, #12
   167d8:	mov	r5, r2
   167dc:	movw	r2, #27444	; 0x6b34
   167e0:	ldr	ip, [r4]
   167e4:	mov	r3, sp
   167e8:	movt	r2, #3
   167ec:	str	ip, [sp, #4]
   167f0:	bl	30f4c <crc32@@Base+0x177a8>
   167f4:	cmp	r0, #0
   167f8:	mvneq	r3, #0
   167fc:	strbeq	r3, [r5]
   16800:	beq	16810 <__printf_chk@plt+0x40a0>
   16804:	bl	1a684 <crc32@@Base+0xee0>
   16808:	mov	r3, #0
   1680c:	strb	r0, [r5]
   16810:	ldr	r2, [sp, #4]
   16814:	mov	r0, r3
   16818:	ldr	r3, [r4]
   1681c:	cmp	r2, r3
   16820:	bne	1682c <__printf_chk@plt+0x40bc>
   16824:	add	sp, sp, #12
   16828:	pop	{r4, r5, pc}
   1682c:	bl	12494 <__stack_chk_fail@plt>
   16830:	push	{r4, r5, lr}
   16834:	movw	r4, #61168	; 0xeef0
   16838:	movt	r4, #4
   1683c:	sub	sp, sp, #12
   16840:	mov	r5, r2
   16844:	movw	r2, #40544	; 0x9e60
   16848:	ldr	ip, [r4]
   1684c:	mov	r3, sp
   16850:	movt	r2, #3
   16854:	str	ip, [sp, #4]
   16858:	bl	30f4c <crc32@@Base+0x177a8>
   1685c:	cmp	r0, #0
   16860:	mvneq	r3, #0
   16864:	strbeq	r3, [r5]
   16868:	beq	16878 <__printf_chk@plt+0x4108>
   1686c:	bl	1a69c <crc32@@Base+0xef8>
   16870:	mov	r3, #0
   16874:	strb	r0, [r5]
   16878:	ldr	r2, [sp, #4]
   1687c:	mov	r0, r3
   16880:	ldr	r3, [r4]
   16884:	cmp	r2, r3
   16888:	bne	16894 <__printf_chk@plt+0x4124>
   1688c:	add	sp, sp, #12
   16890:	pop	{r4, r5, pc}
   16894:	bl	12494 <__stack_chk_fail@plt>
   16898:	push	{r4, r5, lr}
   1689c:	movw	r4, #61168	; 0xeef0
   168a0:	movt	r4, #4
   168a4:	sub	sp, sp, #12
   168a8:	mov	r5, r2
   168ac:	movw	r2, #27452	; 0x6b3c
   168b0:	ldr	ip, [r4]
   168b4:	mov	r3, sp
   168b8:	movt	r2, #3
   168bc:	str	ip, [sp, #4]
   168c0:	bl	30f4c <crc32@@Base+0x177a8>
   168c4:	cmp	r0, #0
   168c8:	mvneq	r3, #0
   168cc:	strbeq	r3, [r5]
   168d0:	beq	168e0 <__printf_chk@plt+0x4170>
   168d4:	bl	1a6b4 <crc32@@Base+0xf10>
   168d8:	mov	r3, #0
   168dc:	strb	r0, [r5]
   168e0:	ldr	r2, [sp, #4]
   168e4:	mov	r0, r3
   168e8:	ldr	r3, [r4]
   168ec:	cmp	r2, r3
   168f0:	bne	168fc <__printf_chk@plt+0x418c>
   168f4:	add	sp, sp, #12
   168f8:	pop	{r4, r5, pc}
   168fc:	bl	12494 <__stack_chk_fail@plt>
   16900:	mov	r3, r2
   16904:	movw	r2, #27464	; 0x6b48
   16908:	movt	r2, #3
   1690c:	b	16284 <__printf_chk@plt+0x3b14>
   16910:	mov	r3, r2
   16914:	movw	r2, #27472	; 0x6b50
   16918:	movt	r2, #3
   1691c:	b	16284 <__printf_chk@plt+0x3b14>
   16920:	push	{r4, r5, r6, lr}
   16924:	movw	r4, #61168	; 0xeef0
   16928:	movt	r4, #4
   1692c:	sub	sp, sp, #8
   16930:	mov	r6, r3
   16934:	mov	r5, r2
   16938:	ldr	ip, [r4]
   1693c:	mov	r3, sp
   16940:	movw	r2, #40604	; 0x9e9c
   16944:	movt	r2, #3
   16948:	str	ip, [sp, #4]
   1694c:	bl	30f4c <crc32@@Base+0x177a8>
   16950:	ldr	r2, [sp, #4]
   16954:	cmp	r0, #0
   16958:	str	r0, [r5]
   1695c:	streq	r0, [r6]
   16960:	ldrne	r3, [sp]
   16964:	mvneq	r0, #0
   16968:	movne	r0, #0
   1696c:	strne	r3, [r6]
   16970:	ldr	r3, [r4]
   16974:	cmp	r2, r3
   16978:	bne	16984 <__printf_chk@plt+0x4214>
   1697c:	add	sp, sp, #8
   16980:	pop	{r4, r5, r6, pc}
   16984:	bl	12494 <__stack_chk_fail@plt>
   16988:	mov	r3, #0
   1698c:	push	{r4, lr}
   16990:	mov	r4, r2
   16994:	movw	r2, #27768	; 0x6c78
   16998:	movt	r2, #3
   1699c:	bl	30f4c <crc32@@Base+0x177a8>
   169a0:	cmp	r0, #0
   169a4:	ldrne	r2, [r0]
   169a8:	movne	r0, #0
   169ac:	mvneq	r0, #1
   169b0:	ubfxne	ip, r2, #8, #8
   169b4:	ubfxne	r1, r2, #16, #8
   169b8:	lsrne	r3, r2, #24
   169bc:	orrne	r3, r3, r2, lsl #24
   169c0:	orrne	r3, r3, ip, lsl #16
   169c4:	orrne	r3, r3, r1, lsl #8
   169c8:	strne	r3, [r4]
   169cc:	pop	{r4, pc}
   169d0:	mov	r3, #0
   169d4:	push	{r4, lr}
   169d8:	mov	r4, r2
   169dc:	movw	r2, #27832	; 0x6cb8
   169e0:	movt	r2, #3
   169e4:	bl	30f4c <crc32@@Base+0x177a8>
   169e8:	cmp	r0, #0
   169ec:	ldrne	r2, [r0]
   169f0:	movne	r0, #0
   169f4:	mvneq	r0, #1
   169f8:	ubfxne	ip, r2, #8, #8
   169fc:	ubfxne	r1, r2, #16, #8
   16a00:	lsrne	r3, r2, #24
   16a04:	orrne	r3, r3, r2, lsl #24
   16a08:	orrne	r3, r3, ip, lsl #16
   16a0c:	orrne	r3, r3, r1, lsl #8
   16a10:	strne	r3, [r4]
   16a14:	pop	{r4, pc}
   16a18:	mov	r3, #0
   16a1c:	push	{r4, lr}
   16a20:	mov	r4, r2
   16a24:	movw	r2, #27780	; 0x6c84
   16a28:	movt	r2, #3
   16a2c:	bl	30f4c <crc32@@Base+0x177a8>
   16a30:	cmp	r0, #0
   16a34:	ldrne	r2, [r0]
   16a38:	movne	r0, #0
   16a3c:	mvneq	r0, #1
   16a40:	ubfxne	ip, r2, #8, #8
   16a44:	ubfxne	r1, r2, #16, #8
   16a48:	lsrne	r3, r2, #24
   16a4c:	orrne	r3, r3, r2, lsl #24
   16a50:	orrne	r3, r3, ip, lsl #16
   16a54:	orrne	r3, r3, r1, lsl #8
   16a58:	strne	r3, [r4]
   16a5c:	pop	{r4, pc}
   16a60:	push	{r4, r5, r6, r7, r8, lr}
   16a64:	movw	r5, #61168	; 0xeef0
   16a68:	movt	r5, #4
   16a6c:	sub	sp, sp, #16
   16a70:	mov	r6, r2
   16a74:	add	r2, sp, #4
   16a78:	ldr	ip, [r5]
   16a7c:	mov	r7, r3
   16a80:	mov	r4, r0
   16a84:	mov	r8, r1
   16a88:	str	ip, [sp, #12]
   16a8c:	bl	169d0 <__printf_chk@plt+0x4260>
   16a90:	cmp	r0, #0
   16a94:	beq	16ae0 <__printf_chk@plt+0x4370>
   16a98:	add	r2, sp, #4
   16a9c:	mov	r1, r8
   16aa0:	mov	r0, r4
   16aa4:	bl	16988 <__printf_chk@plt+0x4218>
   16aa8:	cmp	r0, #0
   16aac:	bne	16b18 <__printf_chk@plt+0x43a8>
   16ab0:	ldr	r2, [r4, #4]
   16ab4:	ldr	r1, [sp, #4]
   16ab8:	ubfx	ip, r2, #8, #8
   16abc:	ubfx	r0, r2, #16, #8
   16ac0:	lsr	r3, r2, #24
   16ac4:	orr	r3, r3, r2, lsl #24
   16ac8:	orr	r3, r3, ip, lsl #16
   16acc:	orr	r3, r3, r0, lsl #8
   16ad0:	add	r3, r3, #3
   16ad4:	bic	r3, r3, #3
   16ad8:	add	r3, r1, r3
   16adc:	str	r3, [sp, #4]
   16ae0:	add	r2, sp, #8
   16ae4:	mov	r0, r4
   16ae8:	mov	r1, r8
   16aec:	bl	16a18 <__printf_chk@plt+0x42a8>
   16af0:	ldrd	r2, [sp, #4]
   16af4:	add	r4, r4, r2
   16af8:	str	r4, [r6]
   16afc:	str	r3, [r7]
   16b00:	ldr	r2, [sp, #12]
   16b04:	ldr	r3, [r5]
   16b08:	cmp	r2, r3
   16b0c:	bne	16b54 <__printf_chk@plt+0x43e4>
   16b10:	add	sp, sp, #16
   16b14:	pop	{r4, r5, r6, r7, r8, pc}
   16b18:	mov	r1, r8
   16b1c:	mov	r0, r4
   16b20:	movw	r2, #40604	; 0x9e9c
   16b24:	add	r3, sp, #8
   16b28:	movt	r2, #3
   16b2c:	bl	30f4c <crc32@@Base+0x177a8>
   16b30:	cmp	r0, #0
   16b34:	str	r0, [r6]
   16b38:	ldrne	r3, [sp, #8]
   16b3c:	movne	r0, #0
   16b40:	strne	r3, [r7]
   16b44:	bne	16b00 <__printf_chk@plt+0x4390>
   16b48:	str	r0, [r7]
   16b4c:	mvn	r0, #0
   16b50:	b	16b00 <__printf_chk@plt+0x4390>
   16b54:	bl	12494 <__stack_chk_fail@plt>
   16b58:	push	{r4, r5, r6, r7, r8, lr}
   16b5c:	movw	r7, #61168	; 0xeef0
   16b60:	movt	r7, #4
   16b64:	sub	sp, sp, #32
   16b68:	mov	r6, r2
   16b6c:	add	r3, sp, #24
   16b70:	ldr	ip, [r7]
   16b74:	movw	r2, #27364	; 0x6ae4
   16b78:	movt	r2, #3
   16b7c:	mov	r5, r1
   16b80:	mov	r4, r0
   16b84:	str	ip, [sp, #28]
   16b88:	bl	30f4c <crc32@@Base+0x177a8>
   16b8c:	movw	r1, #29772	; 0x744c
   16b90:	mov	r2, r6
   16b94:	movt	r1, #3
   16b98:	subs	r8, r0, #0
   16b9c:	mov	r0, #1
   16ba0:	beq	16df4 <__printf_chk@plt+0x4684>
   16ba4:	bl	12770 <__printf_chk@plt>
   16ba8:	mov	r0, r8
   16bac:	bl	1226c <puts@plt>
   16bb0:	add	r2, sp, #24
   16bb4:	mov	r1, #0
   16bb8:	mov	r0, r4
   16bbc:	bl	163fc <__printf_chk@plt+0x3c8c>
   16bc0:	mov	r2, r6
   16bc4:	movw	r1, #29792	; 0x7460
   16bc8:	movt	r1, #3
   16bcc:	mov	r8, r0
   16bd0:	mov	r0, #1
   16bd4:	bl	12770 <__printf_chk@plt>
   16bd8:	cmp	r8, #0
   16bdc:	beq	16de8 <__printf_chk@plt+0x4678>
   16be0:	movw	r0, #29716	; 0x7414
   16be4:	movt	r0, #3
   16be8:	bl	1226c <puts@plt>
   16bec:	add	r2, sp, #4
   16bf0:	mov	r1, r5
   16bf4:	mov	r0, r4
   16bf8:	bl	16830 <__printf_chk@plt+0x40c0>
   16bfc:	ldrb	r0, [sp, #4]
   16c00:	bl	1a428 <crc32@@Base+0xc84>
   16c04:	mov	r2, r6
   16c08:	movw	r1, #29812	; 0x7474
   16c0c:	movt	r1, #3
   16c10:	mov	r3, r0
   16c14:	mov	r0, #1
   16c18:	bl	12770 <__printf_chk@plt>
   16c1c:	add	r2, sp, #7
   16c20:	mov	r1, r5
   16c24:	mov	r0, r4
   16c28:	bl	16898 <__printf_chk@plt+0x4128>
   16c2c:	ldrb	r0, [sp, #7]
   16c30:	bl	1a4d0 <crc32@@Base+0xd2c>
   16c34:	mov	r2, r6
   16c38:	movw	r1, #29836	; 0x748c
   16c3c:	movt	r1, #3
   16c40:	mov	r3, r0
   16c44:	mov	r0, #1
   16c48:	bl	12770 <__printf_chk@plt>
   16c4c:	add	r3, sp, #8
   16c50:	add	r2, sp, #20
   16c54:	mov	r1, r5
   16c58:	mov	r0, r4
   16c5c:	bl	16a60 <__printf_chk@plt+0x42f0>
   16c60:	mov	r2, r6
   16c64:	movw	r1, #29860	; 0x74a4
   16c68:	movt	r1, #3
   16c6c:	mov	r8, r0
   16c70:	mov	r0, #1
   16c74:	bl	12770 <__printf_chk@plt>
   16c78:	cmp	r8, #0
   16c7c:	beq	16e08 <__printf_chk@plt+0x4698>
   16c80:	movw	r0, #29716	; 0x7414
   16c84:	movt	r0, #3
   16c88:	bl	1226c <puts@plt>
   16c8c:	ldrb	r3, [sp, #4]
   16c90:	sub	r2, r3, #1
   16c94:	uxtb	r2, r2
   16c98:	cmp	r2, #7
   16c9c:	bhi	16ce4 <__printf_chk@plt+0x4574>
   16ca0:	mov	r1, #151	; 0x97
   16ca4:	mvn	r2, r1, lsr r2
   16ca8:	tst	r2, #1
   16cac:	bne	16ce4 <__printf_chk@plt+0x4574>
   16cb0:	add	r2, sp, #5
   16cb4:	mov	r1, r5
   16cb8:	mov	r0, r4
   16cbc:	bl	167c8 <__printf_chk@plt+0x4058>
   16cc0:	ldrb	r0, [sp, #5]
   16cc4:	bl	1a3d4 <crc32@@Base+0xc30>
   16cc8:	mov	r2, r6
   16ccc:	movw	r1, #29880	; 0x74b8
   16cd0:	movt	r1, #3
   16cd4:	mov	r3, r0
   16cd8:	mov	r0, #1
   16cdc:	bl	12770 <__printf_chk@plt>
   16ce0:	ldrb	r3, [sp, #4]
   16ce4:	sub	r2, r3, #2
   16ce8:	cmp	r3, #5
   16cec:	cmpne	r2, #1
   16cf0:	bls	16eac <__printf_chk@plt+0x473c>
   16cf4:	cmp	r3, #29
   16cf8:	bhi	16d60 <__printf_chk@plt+0x45f0>
   16cfc:	mov	r2, #46	; 0x2e
   16d00:	movt	r2, #8192	; 0x2000
   16d04:	mvn	r2, r2, lsr r3
   16d08:	tst	r2, #1
   16d0c:	bne	16d58 <__printf_chk@plt+0x45e8>
   16d10:	add	r3, sp, #12
   16d14:	mov	r1, r5
   16d18:	movw	r2, #27464	; 0x6b48
   16d1c:	mov	r0, r4
   16d20:	movt	r2, #3
   16d24:	bl	16284 <__printf_chk@plt+0x3b14>
   16d28:	mov	r2, r6
   16d2c:	movw	r1, #29928	; 0x74e8
   16d30:	movt	r1, #3
   16d34:	mov	r8, r0
   16d38:	mov	r0, #1
   16d3c:	bl	12770 <__printf_chk@plt>
   16d40:	cmp	r8, #0
   16d44:	beq	16e14 <__printf_chk@plt+0x46a4>
   16d48:	movw	r0, #29716	; 0x7414
   16d4c:	movt	r0, #3
   16d50:	bl	1226c <puts@plt>
   16d54:	ldrb	r3, [sp, #4]
   16d58:	cmp	r3, #8
   16d5c:	beq	16e34 <__printf_chk@plt+0x46c4>
   16d60:	sub	r3, r3, #1
   16d64:	cmp	r3, #2
   16d68:	bls	16e64 <__printf_chk@plt+0x46f4>
   16d6c:	mov	r1, r5
   16d70:	add	r2, sp, #24
   16d74:	mov	r0, r4
   16d78:	mov	r3, #0
   16d7c:	str	r3, [sp, #24]
   16d80:	bl	2d9d0 <crc32@@Base+0x1422c>
   16d84:	subs	r5, r0, #0
   16d88:	bge	16da8 <__printf_chk@plt+0x4638>
   16d8c:	b	16dd0 <__printf_chk@plt+0x4660>
   16d90:	mov	r1, r5
   16d94:	add	r2, sp, #24
   16d98:	mov	r0, r4
   16d9c:	bl	2d9d0 <crc32@@Base+0x1422c>
   16da0:	subs	r5, r0, #0
   16da4:	blt	16dd0 <__printf_chk@plt+0x4660>
   16da8:	ldr	r3, [sp, #24]
   16dac:	cmp	r3, #0
   16db0:	ble	16dd0 <__printf_chk@plt+0x4660>
   16db4:	cmp	r3, #1
   16db8:	bne	16d90 <__printf_chk@plt+0x4620>
   16dbc:	mov	r2, r6
   16dc0:	mov	r1, r5
   16dc4:	mov	r0, r4
   16dc8:	bl	166a8 <__printf_chk@plt+0x3f38>
   16dcc:	b	16d90 <__printf_chk@plt+0x4620>
   16dd0:	ldr	r2, [sp, #28]
   16dd4:	ldr	r3, [r7]
   16dd8:	cmp	r2, r3
   16ddc:	bne	16f18 <__printf_chk@plt+0x47a8>
   16de0:	add	sp, sp, #32
   16de4:	pop	{r4, r5, r6, r7, r8, pc}
   16de8:	ldr	r0, [sp, #24]
   16dec:	bl	19de8 <crc32@@Base+0x644>
   16df0:	b	16bec <__printf_chk@plt+0x447c>
   16df4:	bl	12770 <__printf_chk@plt>
   16df8:	movw	r0, #29716	; 0x7414
   16dfc:	movt	r0, #3
   16e00:	bl	1226c <puts@plt>
   16e04:	b	16bb0 <__printf_chk@plt+0x4440>
   16e08:	ldr	r0, [sp, #8]
   16e0c:	bl	19d8c <crc32@@Base+0x5e8>
   16e10:	b	16c8c <__printf_chk@plt+0x451c>
   16e14:	movw	r1, #29948	; 0x74fc
   16e18:	ldr	r2, [sp, #12]
   16e1c:	movt	r1, #3
   16e20:	mov	r0, #1
   16e24:	bl	12770 <__printf_chk@plt>
   16e28:	ldrb	r3, [sp, #4]
   16e2c:	cmp	r3, #8
   16e30:	bne	16d60 <__printf_chk@plt+0x45f0>
   16e34:	movw	r2, #27464	; 0x6b48
   16e38:	add	r3, sp, #12
   16e3c:	movt	r2, #3
   16e40:	mov	r1, r5
   16e44:	mov	r0, r4
   16e48:	bl	16284 <__printf_chk@plt+0x3b14>
   16e4c:	cmp	r0, #0
   16e50:	beq	16efc <__printf_chk@plt+0x478c>
   16e54:	ldrb	r3, [sp, #4]
   16e58:	sub	r3, r3, #1
   16e5c:	cmp	r3, #2
   16e60:	bhi	16d6c <__printf_chk@plt+0x45fc>
   16e64:	add	r3, sp, #16
   16e68:	mov	r1, r5
   16e6c:	movw	r2, #27472	; 0x6b50
   16e70:	mov	r0, r4
   16e74:	movt	r2, #3
   16e78:	bl	16284 <__printf_chk@plt+0x3b14>
   16e7c:	mov	r2, r6
   16e80:	movw	r1, #29988	; 0x7524
   16e84:	movt	r1, #3
   16e88:	mov	r8, r0
   16e8c:	mov	r0, #1
   16e90:	bl	12770 <__printf_chk@plt>
   16e94:	cmp	r8, #0
   16e98:	beq	16ee4 <__printf_chk@plt+0x4774>
   16e9c:	movw	r0, #29716	; 0x7414
   16ea0:	movt	r0, #3
   16ea4:	bl	1226c <puts@plt>
   16ea8:	b	16d6c <__printf_chk@plt+0x45fc>
   16eac:	add	r2, sp, #6
   16eb0:	mov	r1, r5
   16eb4:	mov	r0, r4
   16eb8:	bl	16760 <__printf_chk@plt+0x3ff0>
   16ebc:	ldrb	r0, [sp, #6]
   16ec0:	bl	1a380 <crc32@@Base+0xbdc>
   16ec4:	mov	r2, r6
   16ec8:	movw	r1, #29904	; 0x74d0
   16ecc:	movt	r1, #3
   16ed0:	mov	r3, r0
   16ed4:	mov	r0, #1
   16ed8:	bl	12770 <__printf_chk@plt>
   16edc:	ldrb	r3, [sp, #4]
   16ee0:	b	16cf4 <__printf_chk@plt+0x4584>
   16ee4:	movw	r1, #29948	; 0x74fc
   16ee8:	ldr	r2, [sp, #16]
   16eec:	movt	r1, #3
   16ef0:	mov	r0, #1
   16ef4:	bl	12770 <__printf_chk@plt>
   16ef8:	b	16d6c <__printf_chk@plt+0x45fc>
   16efc:	movw	r1, #29960	; 0x7508
   16f00:	ldr	r3, [sp, #12]
   16f04:	movt	r1, #3
   16f08:	mov	r2, r6
   16f0c:	mov	r0, #1
   16f10:	bl	12770 <__printf_chk@plt>
   16f14:	b	16e54 <__printf_chk@plt+0x46e4>
   16f18:	bl	12494 <__stack_chk_fail@plt>
   16f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f20:	movw	sl, #61168	; 0xeef0
   16f24:	movt	sl, #4
   16f28:	sub	sp, sp, #44	; 0x2c
   16f2c:	mov	r1, #0
   16f30:	movw	r2, #27364	; 0x6ae4
   16f34:	ldr	ip, [sl]
   16f38:	movt	r2, #3
   16f3c:	add	r3, sp, #32
   16f40:	mov	r4, r0
   16f44:	str	ip, [sp, #36]	; 0x24
   16f48:	bl	30f4c <crc32@@Base+0x177a8>
   16f4c:	movw	r2, #46108	; 0xb41c
   16f50:	movw	r1, #30008	; 0x7538
   16f54:	movt	r2, #3
   16f58:	movt	r1, #3
   16f5c:	subs	r5, r0, #0
   16f60:	mov	r0, #1
   16f64:	beq	170c4 <__printf_chk@plt+0x4954>
   16f68:	bl	12770 <__printf_chk@plt>
   16f6c:	mov	r0, r5
   16f70:	bl	1226c <puts@plt>
   16f74:	add	r2, sp, #28
   16f78:	mov	r1, #0
   16f7c:	mov	r0, r4
   16f80:	bl	163fc <__printf_chk@plt+0x3c8c>
   16f84:	movw	r2, #46108	; 0xb41c
   16f88:	movw	r1, #30028	; 0x754c
   16f8c:	movt	r2, #3
   16f90:	movt	r1, #3
   16f94:	mov	r5, r0
   16f98:	mov	r0, #1
   16f9c:	bl	12770 <__printf_chk@plt>
   16fa0:	cmp	r5, #0
   16fa4:	beq	170b8 <__printf_chk@plt+0x4948>
   16fa8:	movw	r0, #29716	; 0x7414
   16fac:	movt	r0, #3
   16fb0:	bl	1226c <puts@plt>
   16fb4:	movw	r1, #27112	; 0x69e8
   16fb8:	mov	r0, r4
   16fbc:	movt	r1, #3
   16fc0:	bl	312a8 <crc32@@Base+0x17b04>
   16fc4:	subs	r1, r0, #0
   16fc8:	blt	17408 <__printf_chk@plt+0x4c98>
   16fcc:	add	r7, sp, #40	; 0x28
   16fd0:	mov	r8, #0
   16fd4:	mov	r0, r4
   16fd8:	str	r8, [r7, #-16]!
   16fdc:	mov	r2, r7
   16fe0:	bl	2d9d0 <crc32@@Base+0x1422c>
   16fe4:	subs	r6, r0, #0
   16fe8:	blt	17088 <__printf_chk@plt+0x4918>
   16fec:	ldr	r5, [sp, #24]
   16ff0:	cmp	r5, r8
   16ff4:	ble	17088 <__printf_chk@plt+0x4918>
   16ff8:	movw	fp, #30048	; 0x7560
   16ffc:	movt	fp, #3
   17000:	movw	r9, #46108	; 0xb41c
   17004:	str	sl, [sp, #8]
   17008:	movt	r9, #3
   1700c:	mov	sl, fp
   17010:	b	17038 <__printf_chk@plt+0x48c8>
   17014:	mov	r1, r6
   17018:	mov	r2, r7
   1701c:	mov	r0, r4
   17020:	bl	2d9d0 <crc32@@Base+0x1422c>
   17024:	subs	r6, r0, #0
   17028:	blt	17084 <__printf_chk@plt+0x4914>
   1702c:	ldr	r5, [sp, #24]
   17030:	cmp	r5, #0
   17034:	ble	17084 <__printf_chk@plt+0x4914>
   17038:	cmp	r5, #1
   1703c:	bne	17014 <__printf_chk@plt+0x48a4>
   17040:	mov	r1, r6
   17044:	mov	r2, #0
   17048:	mov	r0, r4
   1704c:	add	fp, r8, #1
   17050:	bl	30c4c <crc32@@Base+0x174a8>
   17054:	mov	r3, r8
   17058:	mov	r2, r9
   1705c:	mov	r1, sl
   17060:	mov	r8, fp
   17064:	str	r0, [sp]
   17068:	mov	r0, r5
   1706c:	bl	12770 <__printf_chk@plt>
   17070:	mov	r2, r9
   17074:	mov	r1, r6
   17078:	mov	r0, r4
   1707c:	bl	16b58 <__printf_chk@plt+0x43e8>
   17080:	b	17014 <__printf_chk@plt+0x48a4>
   17084:	ldr	sl, [sp, #8]
   17088:	movw	r1, #28172	; 0x6e0c
   1708c:	mov	r0, r4
   17090:	movt	r1, #3
   17094:	bl	312a8 <crc32@@Base+0x17b04>
   17098:	subs	r5, r0, #0
   1709c:	bge	170d8 <__printf_chk@plt+0x4968>
   170a0:	ldr	r2, [sp, #36]	; 0x24
   170a4:	ldr	r3, [sl]
   170a8:	cmp	r2, r3
   170ac:	bne	17450 <__printf_chk@plt+0x4ce0>
   170b0:	add	sp, sp, #44	; 0x2c
   170b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170b8:	ldr	r0, [sp, #28]
   170bc:	bl	19de8 <crc32@@Base+0x644>
   170c0:	b	16fb4 <__printf_chk@plt+0x4844>
   170c4:	bl	12770 <__printf_chk@plt>
   170c8:	movw	r0, #29716	; 0x7414
   170cc:	movt	r0, #3
   170d0:	bl	1226c <puts@plt>
   170d4:	b	16f74 <__printf_chk@plt+0x4804>
   170d8:	mov	r3, #0
   170dc:	mov	r1, r6
   170e0:	movw	r2, #27536	; 0x6b90
   170e4:	mov	r0, r4
   170e8:	movt	r2, #3
   170ec:	bl	30f4c <crc32@@Base+0x177a8>
   170f0:	subs	r3, r0, #0
   170f4:	beq	17110 <__printf_chk@plt+0x49a0>
   170f8:	movw	r2, #46108	; 0xb41c
   170fc:	movw	r1, #30068	; 0x7574
   17100:	movt	r2, #3
   17104:	movt	r1, #3
   17108:	mov	r0, #1
   1710c:	bl	12770 <__printf_chk@plt>
   17110:	mov	r1, r5
   17114:	mov	r2, r7
   17118:	mov	r0, r4
   1711c:	mov	r9, #0
   17120:	str	r9, [sp, #24]
   17124:	bl	2d9d0 <crc32@@Base+0x1422c>
   17128:	subs	r5, r0, #0
   1712c:	blt	170a0 <__printf_chk@plt+0x4930>
   17130:	ldr	r6, [sp, #24]
   17134:	cmp	r6, r9
   17138:	ble	170a0 <__printf_chk@plt+0x4930>
   1713c:	movw	r8, #46108	; 0xb41c
   17140:	movw	r3, #30100	; 0x7594
   17144:	movt	r8, #3
   17148:	movt	r3, #3
   1714c:	str	sl, [sp, #20]
   17150:	str	r3, [sp, #12]
   17154:	movw	r3, #27364	; 0x6ae4
   17158:	movt	r3, #3
   1715c:	str	r3, [sp, #16]
   17160:	b	17188 <__printf_chk@plt+0x4a18>
   17164:	mov	r1, r5
   17168:	mov	r2, r7
   1716c:	mov	r0, r4
   17170:	bl	2d9d0 <crc32@@Base+0x1422c>
   17174:	subs	r5, r0, #0
   17178:	blt	17434 <__printf_chk@plt+0x4cc4>
   1717c:	ldr	r6, [sp, #24]
   17180:	cmp	r6, #0
   17184:	ble	17434 <__printf_chk@plt+0x4cc4>
   17188:	cmp	r6, #1
   1718c:	bne	17164 <__printf_chk@plt+0x49f4>
   17190:	mov	r2, #0
   17194:	mov	r1, r5
   17198:	mov	r0, r4
   1719c:	add	r3, r9, #1
   171a0:	str	r3, [sp, #8]
   171a4:	bl	30c4c <crc32@@Base+0x174a8>
   171a8:	mov	r3, r9
   171ac:	mov	r2, r8
   171b0:	ldr	r1, [sp, #12]
   171b4:	str	r0, [sp]
   171b8:	mov	r0, r6
   171bc:	bl	12770 <__printf_chk@plt>
   171c0:	ldr	r2, [sp, #16]
   171c4:	mov	r1, r5
   171c8:	add	r3, sp, #32
   171cc:	mov	r0, r4
   171d0:	bl	30f4c <crc32@@Base+0x177a8>
   171d4:	movw	r1, #29772	; 0x744c
   171d8:	mov	r2, r8
   171dc:	movt	r1, #3
   171e0:	subs	r9, r0, #0
   171e4:	mov	r0, r6
   171e8:	beq	1743c <__printf_chk@plt+0x4ccc>
   171ec:	bl	12770 <__printf_chk@plt>
   171f0:	mov	r0, r9
   171f4:	bl	1226c <puts@plt>
   171f8:	mov	r3, #0
   171fc:	mov	r1, r5
   17200:	movw	r2, #30128	; 0x75b0
   17204:	mov	r0, r4
   17208:	movt	r2, #3
   1720c:	bl	30f4c <crc32@@Base+0x177a8>
   17210:	mov	r2, r8
   17214:	movw	r1, #30136	; 0x75b8
   17218:	movt	r1, #3
   1721c:	mov	r6, r0
   17220:	mov	r0, #1
   17224:	bl	12770 <__printf_chk@plt>
   17228:	cmp	r6, #0
   1722c:	movweq	r0, #29716	; 0x7414
   17230:	movne	r0, r6
   17234:	movteq	r0, #3
   17238:	bl	1226c <puts@plt>
   1723c:	mov	r3, #0
   17240:	movw	r2, #27504	; 0x6b70
   17244:	mov	r1, r5
   17248:	movt	r2, #3
   1724c:	mov	r0, r4
   17250:	bl	30f4c <crc32@@Base+0x177a8>
   17254:	subs	r3, r0, #0
   17258:	beq	17270 <__printf_chk@plt+0x4b00>
   1725c:	movw	r1, #30156	; 0x75cc
   17260:	mov	r2, r8
   17264:	movt	r1, #3
   17268:	mov	r0, #1
   1726c:	bl	12770 <__printf_chk@plt>
   17270:	mov	r3, #0
   17274:	movw	r2, #41740	; 0xa30c
   17278:	mov	r1, r5
   1727c:	movt	r2, #3
   17280:	mov	r0, r4
   17284:	bl	30f4c <crc32@@Base+0x177a8>
   17288:	subs	r3, r0, #0
   1728c:	beq	172a4 <__printf_chk@plt+0x4b34>
   17290:	movw	r1, #30180	; 0x75e4
   17294:	mov	r2, r8
   17298:	movt	r1, #3
   1729c:	mov	r0, #1
   172a0:	bl	12770 <__printf_chk@plt>
   172a4:	movw	r9, #27480	; 0x6b58
   172a8:	movw	fp, #30224	; 0x7610
   172ac:	movt	r9, #3
   172b0:	movt	fp, #3
   172b4:	mov	r6, #0
   172b8:	b	172e8 <__printf_chk@plt+0x4b78>
   172bc:	cmp	r6, #0
   172c0:	mov	r0, #1
   172c4:	add	r6, r6, #1
   172c8:	movweq	r1, #30204	; 0x75fc
   172cc:	moveq	r2, r8
   172d0:	movteq	r1, #3
   172d4:	movne	r2, r8
   172d8:	movne	r1, fp
   172dc:	bl	12770 <__printf_chk@plt>
   172e0:	mov	r0, sl
   172e4:	bl	1226c <puts@plt>
   172e8:	mov	r2, #0
   172ec:	mov	r3, r6
   172f0:	str	r2, [sp]
   172f4:	mov	r1, r5
   172f8:	mov	r2, r9
   172fc:	mov	r0, r4
   17300:	bl	31954 <crc32@@Base+0x181b0>
   17304:	subs	sl, r0, #0
   17308:	bne	172bc <__printf_chk@plt+0x4b4c>
   1730c:	mov	r3, sl
   17310:	movw	r2, #30244	; 0x7624
   17314:	mov	r1, r5
   17318:	movt	r2, #3
   1731c:	mov	r0, r4
   17320:	bl	30f4c <crc32@@Base+0x177a8>
   17324:	subs	r3, r0, #0
   17328:	beq	17340 <__printf_chk@plt+0x4bd0>
   1732c:	movw	r1, #30252	; 0x762c
   17330:	mov	r2, r8
   17334:	movt	r1, #3
   17338:	mov	r0, #1
   1733c:	bl	12770 <__printf_chk@plt>
   17340:	movw	r9, #27552	; 0x6ba0
   17344:	movw	fp, #30224	; 0x7610
   17348:	movt	r9, #3
   1734c:	movt	fp, #3
   17350:	mov	r6, #0
   17354:	b	17384 <__printf_chk@plt+0x4c14>
   17358:	cmp	r6, #0
   1735c:	mov	r0, #1
   17360:	add	r6, r6, #1
   17364:	movweq	r1, #30276	; 0x7644
   17368:	moveq	r2, r8
   1736c:	movteq	r1, #3
   17370:	movne	r2, r8
   17374:	movne	r1, fp
   17378:	bl	12770 <__printf_chk@plt>
   1737c:	mov	r0, sl
   17380:	bl	1226c <puts@plt>
   17384:	mov	r2, #0
   17388:	mov	r3, r6
   1738c:	str	r2, [sp]
   17390:	mov	r1, r5
   17394:	mov	r2, r9
   17398:	mov	r0, r4
   1739c:	bl	31954 <crc32@@Base+0x181b0>
   173a0:	subs	sl, r0, #0
   173a4:	bne	17358 <__printf_chk@plt+0x4be8>
   173a8:	add	r2, sp, #32
   173ac:	mov	r1, r5
   173b0:	mov	r0, r4
   173b4:	str	sl, [sp, #32]
   173b8:	bl	2d9d0 <crc32@@Base+0x1422c>
   173bc:	subs	r6, r0, #0
   173c0:	bge	173e0 <__printf_chk@plt+0x4c70>
   173c4:	b	1742c <__printf_chk@plt+0x4cbc>
   173c8:	mov	r1, r6
   173cc:	add	r2, sp, #32
   173d0:	mov	r0, r4
   173d4:	bl	2d9d0 <crc32@@Base+0x1422c>
   173d8:	subs	r6, r0, #0
   173dc:	blt	1742c <__printf_chk@plt+0x4cbc>
   173e0:	ldr	r3, [sp, #32]
   173e4:	cmp	r3, #0
   173e8:	ble	1742c <__printf_chk@plt+0x4cbc>
   173ec:	cmp	r3, #1
   173f0:	bne	173c8 <__printf_chk@plt+0x4c58>
   173f4:	mov	r2, r8
   173f8:	mov	r1, r6
   173fc:	mov	r0, r4
   17400:	bl	166a8 <__printf_chk@plt+0x3f38>
   17404:	b	173c8 <__printf_chk@plt+0x4c58>
   17408:	bl	2f808 <crc32@@Base+0x16064>
   1740c:	movw	r2, #27112	; 0x69e8
   17410:	movw	r1, #27120	; 0x69f0
   17414:	movt	r2, #3
   17418:	movt	r1, #3
   1741c:	mov	r3, r0
   17420:	mov	r0, #1
   17424:	bl	12770 <__printf_chk@plt>
   17428:	b	170a0 <__printf_chk@plt+0x4930>
   1742c:	ldr	r9, [sp, #8]
   17430:	b	17164 <__printf_chk@plt+0x49f4>
   17434:	ldr	sl, [sp, #20]
   17438:	b	170a0 <__printf_chk@plt+0x4930>
   1743c:	bl	12770 <__printf_chk@plt>
   17440:	movw	r0, #29716	; 0x7414
   17444:	movt	r0, #3
   17448:	bl	1226c <puts@plt>
   1744c:	b	171f8 <__printf_chk@plt+0x4a88>
   17450:	bl	12494 <__stack_chk_fail@plt>
   17454:	push	{r4, r5, lr}
   17458:	movw	r4, #61168	; 0xeef0
   1745c:	movt	r4, #4
   17460:	sub	sp, sp, #12
   17464:	mov	r5, r2
   17468:	movw	r2, #29620	; 0x73b4
   1746c:	ldr	ip, [r4]
   17470:	mov	r3, sp
   17474:	movt	r2, #3
   17478:	str	ip, [sp, #4]
   1747c:	bl	30f4c <crc32@@Base+0x177a8>
   17480:	ldr	r2, [sp, #4]
   17484:	str	r0, [r5]
   17488:	ldr	r3, [r4]
   1748c:	cmp	r2, r3
   17490:	bne	174a8 <__printf_chk@plt+0x4d38>
   17494:	clz	r0, r0
   17498:	lsr	r0, r0, #5
   1749c:	rsb	r0, r0, #0
   174a0:	add	sp, sp, #12
   174a4:	pop	{r4, r5, pc}
   174a8:	bl	12494 <__stack_chk_fail@plt>
   174ac:	push	{r4, r5, r6, lr}
   174b0:	movw	r4, #61168	; 0xeef0
   174b4:	movt	r4, #4
   174b8:	sub	sp, sp, #8
   174bc:	mov	r6, r3
   174c0:	mov	r5, r2
   174c4:	ldr	ip, [r4]
   174c8:	mov	r3, sp
   174cc:	movw	r2, #28088	; 0x6db8
   174d0:	movt	r2, #3
   174d4:	str	ip, [sp, #4]
   174d8:	bl	30f4c <crc32@@Base+0x177a8>
   174dc:	ldr	r2, [sp, #4]
   174e0:	cmp	r0, #0
   174e4:	str	r0, [r5]
   174e8:	streq	r0, [r6]
   174ec:	ldrne	r3, [sp]
   174f0:	mvneq	r0, #0
   174f4:	movne	r0, #0
   174f8:	strne	r3, [r6]
   174fc:	ldr	r3, [r4]
   17500:	cmp	r2, r3
   17504:	bne	17510 <__printf_chk@plt+0x4da0>
   17508:	add	sp, sp, #8
   1750c:	pop	{r4, r5, r6, pc}
   17510:	bl	12494 <__stack_chk_fail@plt>
   17514:	ldr	r2, [r0, #4]
   17518:	ubfx	ip, r2, #8, #8
   1751c:	ubfx	r1, r2, #16, #8
   17520:	lsr	r3, r2, #24
   17524:	orr	r3, r3, r2, lsl #24
   17528:	orr	r3, r3, ip, lsl #16
   1752c:	orr	r3, r3, r1, lsl #8
   17530:	add	r0, r0, r3
   17534:	bx	lr
   17538:	push	{r4, lr}
   1753c:	movw	r4, #61168	; 0xeef0
   17540:	movt	r4, #4
   17544:	sub	sp, sp, #16
   17548:	add	r3, sp, #16
   1754c:	rev	r2, r2
   17550:	ldr	ip, [r4]
   17554:	str	r2, [r3, #-8]!
   17558:	mov	r2, #4
   1755c:	str	r2, [sp]
   17560:	movw	r2, #29588	; 0x7394
   17564:	movt	r2, #3
   17568:	str	ip, [sp, #12]
   1756c:	bl	2f000 <crc32@@Base+0x1585c>
   17570:	cmp	r0, #0
   17574:	beq	17584 <__printf_chk@plt+0x4e14>
   17578:	cmn	r0, #3
   1757c:	mvnne	r0, #0
   17580:	mvneq	r0, #27
   17584:	ldr	r2, [sp, #12]
   17588:	ldr	r3, [r4]
   1758c:	cmp	r2, r3
   17590:	bne	1759c <__printf_chk@plt+0x4e2c>
   17594:	add	sp, sp, #16
   17598:	pop	{r4, pc}
   1759c:	bl	12494 <__stack_chk_fail@plt>
   175a0:	push	{r4, r5, r6, r7, r8, lr}
   175a4:	mov	r7, r1
   175a8:	mov	r6, r0
   175ac:	movw	r1, #30296	; 0x7658
   175b0:	mov	r0, r2
   175b4:	movt	r1, #3
   175b8:	mov	r5, r2
   175bc:	mov	r8, r3
   175c0:	bl	1265c <strcmp@plt>
   175c4:	subs	r4, r0, #0
   175c8:	beq	17688 <__printf_chk@plt+0x4f18>
   175cc:	movw	r1, #30304	; 0x7660
   175d0:	mov	r0, r5
   175d4:	movt	r1, #3
   175d8:	bl	1265c <strcmp@plt>
   175dc:	subs	r4, r0, #0
   175e0:	beq	17654 <__printf_chk@plt+0x4ee4>
   175e4:	movw	r1, #30312	; 0x7668
   175e8:	mov	r0, r5
   175ec:	movt	r1, #3
   175f0:	bl	1265c <strcmp@plt>
   175f4:	subs	r4, r0, #0
   175f8:	beq	176b4 <__printf_chk@plt+0x4f44>
   175fc:	ldrb	r3, [r5]
   17600:	cmp	r3, #109	; 0x6d
   17604:	bne	1767c <__printf_chk@plt+0x4f0c>
   17608:	ldrb	r3, [r5, #1]
   1760c:	cmp	r3, #100	; 0x64
   17610:	bne	1767c <__printf_chk@plt+0x4f0c>
   17614:	ldrb	r3, [r5, #2]
   17618:	cmp	r3, #53	; 0x35
   1761c:	bne	1767c <__printf_chk@plt+0x4f0c>
   17620:	ldrb	r4, [r5, #3]
   17624:	cmp	r4, #0
   17628:	bne	1767c <__printf_chk@plt+0x4f0c>
   1762c:	mov	r2, r8
   17630:	mov	r0, r6
   17634:	mov	r1, r7
   17638:	mov	r3, #65536	; 0x10000
   1763c:	bl	21848 <crc32@@Base+0x80a4>
   17640:	ldr	r2, [sp, #24]
   17644:	mov	r3, #16
   17648:	mov	r0, r4
   1764c:	str	r3, [r2]
   17650:	pop	{r4, r5, r6, r7, r8, pc}
   17654:	mov	r2, r8
   17658:	mov	r0, r6
   1765c:	mov	r1, r7
   17660:	mov	r3, #65536	; 0x10000
   17664:	bl	27d40 <crc32@@Base+0xe59c>
   17668:	ldr	r2, [sp, #24]
   1766c:	mov	r3, #20
   17670:	mov	r0, r4
   17674:	str	r3, [r2]
   17678:	pop	{r4, r5, r6, r7, r8, pc}
   1767c:	mvn	r4, #0
   17680:	mov	r0, r4
   17684:	pop	{r4, r5, r6, r7, r8, pc}
   17688:	mov	r2, r7
   1768c:	mov	r1, r6
   17690:	mov	r3, #65536	; 0x10000
   17694:	bl	197b8 <crc32@@Base+0x14>
   17698:	ldr	r2, [sp, #24]
   1769c:	mov	r3, #4
   176a0:	rev	r0, r0
   176a4:	str	r0, [r8]
   176a8:	str	r3, [r2]
   176ac:	mov	r0, r4
   176b0:	pop	{r4, r5, r6, r7, r8, pc}
   176b4:	mov	r2, r8
   176b8:	mov	r0, r6
   176bc:	mov	r1, r7
   176c0:	mov	r3, #65536	; 0x10000
   176c4:	bl	2a588 <crc32@@Base+0x10de4>
   176c8:	ldr	r2, [sp, #24]
   176cc:	mov	r3, #32
   176d0:	mov	r0, r4
   176d4:	str	r3, [r2]
   176d8:	pop	{r4, r5, r6, r7, r8, pc}
   176dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176e0:	movw	r6, #61168	; 0xeef0
   176e4:	movt	r6, #4
   176e8:	sub	sp, sp, #76	; 0x4c
   176ec:	mov	r5, r0
   176f0:	add	r4, sp, #72	; 0x48
   176f4:	ldr	r0, [r6]
   176f8:	mov	r9, r1
   176fc:	mov	fp, r2
   17700:	mov	r8, r3
   17704:	mov	r2, #1
   17708:	movw	r3, #46108	; 0xb41c
   1770c:	str	r2, [r4, #-44]!	; 0xffffffd4
   17710:	movt	r3, #3
   17714:	str	r0, [sp, #68]	; 0x44
   17718:	str	r3, [sp, #24]
   1771c:	bl	188a0 <__printf_chk@plt+0x6130>
   17720:	str	r4, [sp, #4]
   17724:	mov	r3, r8
   17728:	mov	r2, fp
   1772c:	mov	r1, r9
   17730:	str	r0, [sp]
   17734:	mov	r0, r5
   17738:	bl	18c88 <__printf_chk@plt+0x6518>
   1773c:	cmp	r0, #0
   17740:	beq	177b4 <__printf_chk@plt+0x5044>
   17744:	movw	r2, #30320	; 0x7670
   17748:	movt	r2, #3
   1774c:	mov	r4, #0
   17750:	str	r2, [sp, #24]
   17754:	mov	r7, r2
   17758:	mov	r1, r4
   1775c:	mov	r2, #0
   17760:	mov	r0, r5
   17764:	bl	30c4c <crc32@@Base+0x174a8>
   17768:	mov	r1, r9
   1776c:	mov	r2, #0
   17770:	mov	r4, r0
   17774:	mov	r0, r5
   17778:	bl	30c4c <crc32@@Base+0x174a8>
   1777c:	mov	r3, r4
   17780:	mov	r2, r7
   17784:	movw	r1, #30520	; 0x7738
   17788:	movt	r1, #3
   1778c:	str	r0, [sp]
   17790:	mov	r0, #1
   17794:	bl	12770 <__printf_chk@plt>
   17798:	mov	r0, #0
   1779c:	ldr	r2, [sp, #68]	; 0x44
   177a0:	ldr	r3, [r6]
   177a4:	cmp	r2, r3
   177a8:	bne	179f8 <__printf_chk@plt+0x5288>
   177ac:	add	sp, sp, #76	; 0x4c
   177b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177b4:	mov	r1, r9
   177b8:	mov	r0, r5
   177bc:	bl	2dac0 <crc32@@Base+0x1431c>
   177c0:	subs	r4, r0, #0
   177c4:	blt	17948 <__printf_chk@plt+0x51d8>
   177c8:	movw	r3, #29040	; 0x7170
   177cc:	movt	r3, #3
   177d0:	str	r3, [sp, #12]
   177d4:	movw	r3, #30512	; 0x7730
   177d8:	movt	r3, #3
   177dc:	movw	r7, #28388	; 0x6ee4
   177e0:	str	r6, [sp, #20]
   177e4:	movt	r7, #3
   177e8:	str	r9, [sp, #16]
   177ec:	mov	r6, r3
   177f0:	b	1782c <__printf_chk@plt+0x50bc>
   177f4:	ldr	r3, [sp, #28]
   177f8:	cmp	r3, #0
   177fc:	beq	17818 <__printf_chk@plt+0x50a8>
   17800:	mov	r0, r9
   17804:	mov	r2, #9
   17808:	ldr	r1, [sp, #12]
   1780c:	bl	1217c <strncmp@plt>
   17810:	cmp	r0, #0
   17814:	beq	17904 <__printf_chk@plt+0x5194>
   17818:	mov	r1, r4
   1781c:	mov	r0, r5
   17820:	bl	2db20 <crc32@@Base+0x1437c>
   17824:	subs	r4, r0, #0
   17828:	blt	17940 <__printf_chk@plt+0x51d0>
   1782c:	mov	r2, #0
   17830:	mov	r1, r4
   17834:	mov	r0, r5
   17838:	bl	30c4c <crc32@@Base+0x174a8>
   1783c:	mov	r2, #4
   17840:	mov	r1, r7
   17844:	mov	r9, r0
   17848:	bl	1217c <strncmp@plt>
   1784c:	subs	ip, r0, #0
   17850:	bne	177f4 <__printf_chk@plt+0x5084>
   17854:	movw	r2, #29620	; 0x73b4
   17858:	mov	r1, r4
   1785c:	movt	r2, #3
   17860:	add	r3, sp, #32
   17864:	mov	r0, r5
   17868:	str	ip, [sp, #24]
   1786c:	bl	30f4c <crc32@@Base+0x177a8>
   17870:	subs	r9, r0, #0
   17874:	beq	179c0 <__printf_chk@plt+0x5250>
   17878:	mov	r2, r9
   1787c:	movw	r1, #55508	; 0xd8d4
   17880:	mov	r0, #1
   17884:	movt	r1, #3
   17888:	bl	12770 <__printf_chk@plt>
   1788c:	add	r3, sp, #32
   17890:	movw	r2, #28088	; 0x6db8
   17894:	mov	r1, r4
   17898:	movt	r2, #3
   1789c:	mov	r0, r5
   178a0:	bl	30f4c <crc32@@Base+0x177a8>
   178a4:	subs	sl, r0, #0
   178a8:	beq	179dc <__printf_chk@plt+0x526c>
   178ac:	add	r3, sp, #32
   178b0:	mov	r2, r9
   178b4:	str	r3, [sp]
   178b8:	mov	r1, r8
   178bc:	add	r3, sp, #36	; 0x24
   178c0:	mov	r0, fp
   178c4:	ldr	r9, [sp, #32]
   178c8:	bl	175a0 <__printf_chk@plt+0x4e30>
   178cc:	cmp	r0, #0
   178d0:	bne	17988 <__printf_chk@plt+0x5218>
   178d4:	ldr	r3, [sp, #32]
   178d8:	cmp	r9, r3
   178dc:	bne	1796c <__printf_chk@plt+0x51fc>
   178e0:	mov	r2, r9
   178e4:	mov	r1, sl
   178e8:	add	r0, sp, #36	; 0x24
   178ec:	bl	126c8 <memcmp@plt>
   178f0:	cmp	r0, #0
   178f4:	bne	179a4 <__printf_chk@plt+0x5234>
   178f8:	mov	r0, r6
   178fc:	bl	1226c <puts@plt>
   17900:	b	17818 <__printf_chk@plt+0x50a8>
   17904:	add	r3, sp, #24
   17908:	mvn	r2, #0
   1790c:	str	r3, [sp, #4]
   17910:	mov	r1, r4
   17914:	str	r2, [sp]
   17918:	mov	r3, r8
   1791c:	mov	r2, fp
   17920:	mov	r0, r5
   17924:	bl	18b6c <__printf_chk@plt+0x63fc>
   17928:	cmp	r0, #0
   1792c:	beq	178f8 <__printf_chk@plt+0x5188>
   17930:	movw	r0, #30516	; 0x7734
   17934:	movt	r0, #3
   17938:	bl	1226c <puts@plt>
   1793c:	b	17818 <__printf_chk@plt+0x50a8>
   17940:	ldr	r9, [sp, #16]
   17944:	ldr	r6, [sp, #20]
   17948:	cmn	r4, #8
   1794c:	cmnne	r4, #11
   17950:	movne	r0, #1
   17954:	bne	1779c <__printf_chk@plt+0x502c>
   17958:	movw	r2, #30388	; 0x76b4
   1795c:	movt	r2, #3
   17960:	str	r2, [sp, #24]
   17964:	mov	r7, r2
   17968:	b	17758 <__printf_chk@plt+0x4fe8>
   1796c:	movw	r2, #30464	; 0x7700
   17970:	movt	r2, #3
   17974:	ldr	r9, [sp, #16]
   17978:	ldr	r6, [sp, #20]
   1797c:	mov	r7, r2
   17980:	str	r2, [sp, #24]
   17984:	b	17758 <__printf_chk@plt+0x4fe8>
   17988:	movw	r2, #30484	; 0x7714
   1798c:	movt	r2, #3
   17990:	ldr	r9, [sp, #16]
   17994:	ldr	r6, [sp, #20]
   17998:	mov	r7, r2
   1799c:	str	r2, [sp, #24]
   179a0:	b	17758 <__printf_chk@plt+0x4fe8>
   179a4:	movw	r2, #30448	; 0x76f0
   179a8:	movt	r2, #3
   179ac:	ldr	r9, [sp, #16]
   179b0:	ldr	r6, [sp, #20]
   179b4:	mov	r7, r2
   179b8:	str	r2, [sp, #24]
   179bc:	b	17758 <__printf_chk@plt+0x4fe8>
   179c0:	movw	r2, #30416	; 0x76d0
   179c4:	movt	r2, #3
   179c8:	ldr	r9, [sp, #16]
   179cc:	ldr	r6, [sp, #20]
   179d0:	mov	r7, r2
   179d4:	str	r2, [sp, #24]
   179d8:	b	17758 <__printf_chk@plt+0x4fe8>
   179dc:	movw	r2, #30356	; 0x7694
   179e0:	movt	r2, #3
   179e4:	ldr	r9, [sp, #16]
   179e8:	ldr	r6, [sp, #20]
   179ec:	mov	r7, r2
   179f0:	str	r2, [sp, #24]
   179f4:	b	17758 <__printf_chk@plt+0x4fe8>
   179f8:	bl	12494 <__stack_chk_fail@plt>
   179fc:	push	{r4, r5, r6, r7, lr}
   17a00:	movw	r4, #61168	; 0xeef0
   17a04:	movt	r4, #4
   17a08:	sub	sp, sp, #28
   17a0c:	add	r3, sp, #16
   17a10:	add	r2, sp, #12
   17a14:	ldr	ip, [r4]
   17a18:	mov	r5, r0
   17a1c:	mov	r6, r1
   17a20:	str	ip, [sp, #20]
   17a24:	bl	16a60 <__printf_chk@plt+0x42f0>
   17a28:	cmp	r0, #0
   17a2c:	bne	17a58 <__printf_chk@plt+0x52e8>
   17a30:	mov	r1, r6
   17a34:	mov	r0, r5
   17a38:	ldrd	r2, [sp, #12]
   17a3c:	bl	176dc <__printf_chk@plt+0x4f6c>
   17a40:	ldr	r2, [sp, #20]
   17a44:	ldr	r3, [r4]
   17a48:	cmp	r2, r3
   17a4c:	bne	17aa4 <__printf_chk@plt+0x5334>
   17a50:	add	sp, sp, #28
   17a54:	pop	{r4, r5, r6, r7, pc}
   17a58:	mov	r2, #0
   17a5c:	mov	r0, r5
   17a60:	mov	r1, r2
   17a64:	bl	30c4c <crc32@@Base+0x174a8>
   17a68:	mov	r1, r6
   17a6c:	mov	r2, #0
   17a70:	mov	r7, r0
   17a74:	mov	r0, r5
   17a78:	bl	30c4c <crc32@@Base+0x174a8>
   17a7c:	mov	r3, r7
   17a80:	movw	r2, #28764	; 0x705c
   17a84:	movw	r1, #30572	; 0x776c
   17a88:	movt	r2, #3
   17a8c:	movt	r1, #3
   17a90:	str	r0, [sp]
   17a94:	mov	r0, #1
   17a98:	bl	12770 <__printf_chk@plt>
   17a9c:	mov	r0, #0
   17aa0:	b	17a40 <__printf_chk@plt+0x52d0>
   17aa4:	bl	12494 <__stack_chk_fail@plt>
   17aa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17aac:	movw	r9, #61168	; 0xeef0
   17ab0:	movt	r9, #4
   17ab4:	sub	sp, sp, #8
   17ab8:	movw	r1, #27112	; 0x69e8
   17abc:	movt	r1, #3
   17ac0:	ldr	r3, [r9]
   17ac4:	mov	r6, r0
   17ac8:	str	r3, [sp, #4]
   17acc:	bl	312a8 <crc32@@Base+0x17b04>
   17ad0:	subs	r4, r0, #0
   17ad4:	blt	17bb8 <__printf_chk@plt+0x5448>
   17ad8:	add	r8, sp, #8
   17adc:	mov	r2, r6
   17ae0:	movw	r1, #30624	; 0x77a0
   17ae4:	mov	r0, #1
   17ae8:	movt	r1, #3
   17aec:	mov	r7, #0
   17af0:	bl	12770 <__printf_chk@plt>
   17af4:	str	r7, [r8, #-8]!
   17af8:	mov	r1, r4
   17afc:	mov	r0, r6
   17b00:	mov	r2, r8
   17b04:	bl	2d9d0 <crc32@@Base+0x1422c>
   17b08:	subs	r5, r0, #0
   17b0c:	blt	17b9c <__printf_chk@plt+0x542c>
   17b10:	ldr	r4, [sp]
   17b14:	cmp	r4, r7
   17b18:	ble	17b9c <__printf_chk@plt+0x542c>
   17b1c:	movw	sl, #30676	; 0x77d4
   17b20:	movt	sl, #3
   17b24:	b	17b4c <__printf_chk@plt+0x53dc>
   17b28:	mov	r1, r5
   17b2c:	mov	r2, r8
   17b30:	mov	r0, r6
   17b34:	bl	2d9d0 <crc32@@Base+0x1422c>
   17b38:	subs	r5, r0, #0
   17b3c:	blt	17b9c <__printf_chk@plt+0x542c>
   17b40:	ldr	r4, [sp]
   17b44:	cmp	r4, #0
   17b48:	ble	17b9c <__printf_chk@plt+0x542c>
   17b4c:	cmp	r4, #1
   17b50:	bne	17b28 <__printf_chk@plt+0x53b8>
   17b54:	mov	r2, #0
   17b58:	mov	r1, r5
   17b5c:	mov	r0, r6
   17b60:	bl	30c4c <crc32@@Base+0x174a8>
   17b64:	mov	r2, r7
   17b68:	mov	r1, sl
   17b6c:	add	r7, r7, #1
   17b70:	mov	r3, r0
   17b74:	mov	r0, r4
   17b78:	bl	12770 <__printf_chk@plt>
   17b7c:	mov	r1, r5
   17b80:	mov	r0, r6
   17b84:	bl	179fc <__printf_chk@plt+0x528c>
   17b88:	cmp	r0, #0
   17b8c:	beq	17ba0 <__printf_chk@plt+0x5430>
   17b90:	mov	r0, #10
   17b94:	bl	122d8 <putchar@plt>
   17b98:	b	17b28 <__printf_chk@plt+0x53b8>
   17b9c:	mov	r0, #1
   17ba0:	ldr	r2, [sp, #4]
   17ba4:	ldr	r3, [r9]
   17ba8:	cmp	r2, r3
   17bac:	bne	17be0 <__printf_chk@plt+0x5470>
   17bb0:	add	sp, sp, #8
   17bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bb8:	bl	2f808 <crc32@@Base+0x16064>
   17bbc:	movw	r2, #27112	; 0x69e8
   17bc0:	movw	r1, #27120	; 0x69f0
   17bc4:	movt	r2, #3
   17bc8:	movt	r1, #3
   17bcc:	mov	r3, r0
   17bd0:	mov	r0, #1
   17bd4:	bl	12770 <__printf_chk@plt>
   17bd8:	mov	r0, #0
   17bdc:	b	17ba0 <__printf_chk@plt+0x5430>
   17be0:	bl	12494 <__stack_chk_fail@plt>
   17be4:	push	{r4, r5, lr}
   17be8:	movw	r4, #61168	; 0xeef0
   17bec:	movt	r4, #4
   17bf0:	sub	sp, sp, #12
   17bf4:	mov	r5, r2
   17bf8:	add	r2, sp, #3
   17bfc:	ldr	r3, [r4]
   17c00:	str	r3, [sp, #4]
   17c04:	bl	16760 <__printf_chk@plt+0x3ff0>
   17c08:	ldr	r2, [sp, #4]
   17c0c:	ldr	r3, [r4]
   17c10:	cmp	r0, #0
   17c14:	ldrbeq	r0, [sp, #3]
   17c18:	movne	r0, #0
   17c1c:	subeq	r0, r0, r5
   17c20:	clzeq	r0, r0
   17c24:	lsreq	r0, r0, #5
   17c28:	cmp	r2, r3
   17c2c:	bne	17c38 <__printf_chk@plt+0x54c8>
   17c30:	add	sp, sp, #12
   17c34:	pop	{r4, r5, pc}
   17c38:	bl	12494 <__stack_chk_fail@plt>
   17c3c:	push	{r4, r5, lr}
   17c40:	movw	r4, #61168	; 0xeef0
   17c44:	movt	r4, #4
   17c48:	sub	sp, sp, #12
   17c4c:	mov	r5, r2
   17c50:	add	r2, sp, #3
   17c54:	ldr	r3, [r4]
   17c58:	str	r3, [sp, #4]
   17c5c:	bl	167c8 <__printf_chk@plt+0x4058>
   17c60:	cmp	r0, #0
   17c64:	movne	r0, #0
   17c68:	bne	17c8c <__printf_chk@plt+0x551c>
   17c6c:	ldrb	r0, [sp, #3]
   17c70:	cmp	r0, r5
   17c74:	moveq	r0, #1
   17c78:	beq	17c8c <__printf_chk@plt+0x551c>
   17c7c:	cmp	r5, #3
   17c80:	cmpeq	r0, #24
   17c84:	moveq	r0, #1
   17c88:	movne	r0, #0
   17c8c:	ldr	r2, [sp, #4]
   17c90:	ldr	r3, [r4]
   17c94:	cmp	r2, r3
   17c98:	bne	17ca4 <__printf_chk@plt+0x5534>
   17c9c:	add	sp, sp, #12
   17ca0:	pop	{r4, r5, pc}
   17ca4:	bl	12494 <__stack_chk_fail@plt>
   17ca8:	push	{r4, r5, lr}
   17cac:	movw	r4, #61168	; 0xeef0
   17cb0:	movt	r4, #4
   17cb4:	sub	sp, sp, #12
   17cb8:	mov	r5, r2
   17cbc:	add	r2, sp, #3
   17cc0:	ldr	r3, [r4]
   17cc4:	str	r3, [sp, #4]
   17cc8:	bl	16830 <__printf_chk@plt+0x40c0>
   17ccc:	ldr	r2, [sp, #4]
   17cd0:	ldr	r3, [r4]
   17cd4:	cmp	r0, #0
   17cd8:	ldrbeq	r0, [sp, #3]
   17cdc:	movne	r0, #0
   17ce0:	subeq	r0, r0, r5
   17ce4:	clzeq	r0, r0
   17ce8:	lsreq	r0, r0, #5
   17cec:	cmp	r2, r3
   17cf0:	bne	17cfc <__printf_chk@plt+0x558c>
   17cf4:	add	sp, sp, #12
   17cf8:	pop	{r4, r5, pc}
   17cfc:	bl	12494 <__stack_chk_fail@plt>
   17d00:	push	{r4, r5, lr}
   17d04:	movw	r4, #61168	; 0xeef0
   17d08:	movt	r4, #4
   17d0c:	sub	sp, sp, #12
   17d10:	mov	r5, r2
   17d14:	add	r2, sp, #3
   17d18:	ldr	r3, [r4]
   17d1c:	str	r3, [sp, #4]
   17d20:	bl	16898 <__printf_chk@plt+0x4128>
   17d24:	ldr	r2, [sp, #4]
   17d28:	ldr	r3, [r4]
   17d2c:	cmp	r0, #0
   17d30:	ldrbeq	r0, [sp, #3]
   17d34:	movne	r0, #0
   17d38:	subeq	r0, r0, r5
   17d3c:	clzeq	r0, r0
   17d40:	lsreq	r0, r0, #5
   17d44:	cmp	r2, r3
   17d48:	bne	17d54 <__printf_chk@plt+0x55e4>
   17d4c:	add	sp, sp, #12
   17d50:	pop	{r4, r5, pc}
   17d54:	bl	12494 <__stack_chk_fail@plt>
   17d58:	mov	r3, #0
   17d5c:	movw	r2, #27364	; 0x6ae4
   17d60:	push	{r4, lr}
   17d64:	mov	r1, r3
   17d68:	movt	r2, #3
   17d6c:	mov	r4, r0
   17d70:	bl	30f4c <crc32@@Base+0x177a8>
   17d74:	cmp	r0, #0
   17d78:	beq	17db8 <__printf_chk@plt+0x5648>
   17d7c:	mov	r3, #0
   17d80:	movw	r2, #29588	; 0x7394
   17d84:	mov	r1, r3
   17d88:	movt	r2, #3
   17d8c:	mov	r0, r4
   17d90:	bl	30f4c <crc32@@Base+0x177a8>
   17d94:	cmp	r0, #0
   17d98:	beq	17db8 <__printf_chk@plt+0x5648>
   17d9c:	mov	r0, r4
   17da0:	movw	r1, #27112	; 0x69e8
   17da4:	movt	r1, #3
   17da8:	bl	312a8 <crc32@@Base+0x17b04>
   17dac:	mvn	r0, r0
   17db0:	lsr	r0, r0, #31
   17db4:	pop	{r4, pc}
   17db8:	mov	r0, #0
   17dbc:	pop	{r4, pc}
   17dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dc4:	movw	sl, #61168	; 0xeef0
   17dc8:	movt	sl, #4
   17dcc:	sub	sp, sp, #52	; 0x34
   17dd0:	mov	r5, r1
   17dd4:	movw	r1, #28172	; 0x6e0c
   17dd8:	ldr	r3, [sl]
   17ddc:	movt	r1, #3
   17de0:	mov	r2, #0
   17de4:	mov	r7, r0
   17de8:	str	r2, [sp, #28]
   17dec:	str	r3, [sp, #44]	; 0x2c
   17df0:	bl	312a8 <crc32@@Base+0x17b04>
   17df4:	movw	r1, #27112	; 0x69e8
   17df8:	movt	r1, #3
   17dfc:	mov	r4, r0
   17e00:	mov	r0, r7
   17e04:	bl	312a8 <crc32@@Base+0x17b04>
   17e08:	lsr	r8, r0, #31
   17e0c:	str	r0, [sp, #8]
   17e10:	orrs	r8, r8, r4, lsr #31
   17e14:	bne	17fc0 <__printf_chk@plt+0x5850>
   17e18:	add	r3, sp, #32
   17e1c:	mov	r0, r5
   17e20:	movw	r2, #30708	; 0x77f4
   17e24:	mov	r1, r8
   17e28:	movt	r2, #3
   17e2c:	bl	30f4c <crc32@@Base+0x177a8>
   17e30:	subs	r3, r0, #0
   17e34:	str	r3, [sp, #20]
   17e38:	beq	17fc0 <__printf_chk@plt+0x5850>
   17e3c:	mov	r1, r4
   17e40:	mov	r0, r7
   17e44:	add	r2, sp, #28
   17e48:	bl	2d9d0 <crc32@@Base+0x1422c>
   17e4c:	subs	r6, r0, #0
   17e50:	blt	17fc0 <__printf_chk@plt+0x5850>
   17e54:	ldr	r3, [sp, #28]
   17e58:	cmp	r3, #0
   17e5c:	ble	17fc0 <__printf_chk@plt+0x5850>
   17e60:	movw	r2, #27480	; 0x6b58
   17e64:	movw	r1, #40604	; 0x9e9c
   17e68:	movt	r2, #3
   17e6c:	movt	r1, #3
   17e70:	str	r2, [sp, #4]
   17e74:	str	r1, [sp, #12]
   17e78:	str	r8, [sp]
   17e7c:	str	sl, [sp, #16]
   17e80:	b	17ea8 <__printf_chk@plt+0x5738>
   17e84:	mov	r1, r6
   17e88:	add	r2, sp, #28
   17e8c:	mov	r0, r7
   17e90:	bl	2d9d0 <crc32@@Base+0x1422c>
   17e94:	subs	r6, r0, #0
   17e98:	blt	17f94 <__printf_chk@plt+0x5824>
   17e9c:	ldr	r3, [sp, #28]
   17ea0:	cmp	r3, #0
   17ea4:	ble	17f94 <__printf_chk@plt+0x5824>
   17ea8:	cmp	r3, #1
   17eac:	bne	17e84 <__printf_chk@plt+0x5714>
   17eb0:	ldr	r2, [sp, #4]
   17eb4:	add	r3, sp, #36	; 0x24
   17eb8:	mov	r1, r6
   17ebc:	mov	r0, r7
   17ec0:	bl	30f4c <crc32@@Base+0x177a8>
   17ec4:	subs	r2, r0, #0
   17ec8:	beq	17e84 <__printf_chk@plt+0x5714>
   17ecc:	ldr	r1, [sp, #8]
   17ed0:	mov	r0, r7
   17ed4:	bl	30c1c <crc32@@Base+0x17478>
   17ed8:	subs	r1, r0, #0
   17edc:	blt	17e84 <__printf_chk@plt+0x5714>
   17ee0:	add	r3, sp, #40	; 0x28
   17ee4:	ldr	r2, [sp, #12]
   17ee8:	mov	r0, r7
   17eec:	bl	30f4c <crc32@@Base+0x177a8>
   17ef0:	subs	fp, r0, #0
   17ef4:	beq	17e84 <__printf_chk@plt+0x5714>
   17ef8:	ldr	r3, [sp, #32]
   17efc:	cmp	r3, #0
   17f00:	str	r3, [sp, #36]	; 0x24
   17f04:	ble	17e84 <__printf_chk@plt+0x5714>
   17f08:	ldr	r3, [sp]
   17f0c:	cmp	r8, #0
   17f10:	clz	r9, r3
   17f14:	lsr	r9, r9, #5
   17f18:	orrgt	r3, r9, #1
   17f1c:	movle	r3, r9
   17f20:	cmp	r3, #0
   17f24:	beq	17fcc <__printf_chk@plt+0x585c>
   17f28:	ldr	r5, [sp, #20]
   17f2c:	mov	sl, #0
   17f30:	b	17f64 <__printf_chk@plt+0x57f4>
   17f34:	ldr	r0, [sp, #36]	; 0x24
   17f38:	add	r5, r5, r4
   17f3c:	add	sl, sl, #1
   17f40:	sub	r0, r0, r4
   17f44:	str	r0, [sp, #36]	; 0x24
   17f48:	cmp	r0, #0
   17f4c:	ble	17e84 <__printf_chk@plt+0x5714>
   17f50:	cmp	sl, r8
   17f54:	movge	r3, r9
   17f58:	orrlt	r3, r9, #1
   17f5c:	cmp	r3, #0
   17f60:	beq	17e84 <__printf_chk@plt+0x5714>
   17f64:	mov	r0, r5
   17f68:	bl	125c0 <strlen@plt>
   17f6c:	mov	r2, r5
   17f70:	mov	r1, #0
   17f74:	add	r4, r0, #1
   17f78:	mov	r0, fp
   17f7c:	bl	31a40 <crc32@@Base+0x1829c>
   17f80:	cmp	r0, #0
   17f84:	bne	17f34 <__printf_chk@plt+0x57c4>
   17f88:	mov	r8, sl
   17f8c:	str	r6, [sp]
   17f90:	b	17e84 <__printf_chk@plt+0x5714>
   17f94:	ldr	r3, [sp]
   17f98:	ldr	sl, [sp, #16]
   17f9c:	cmp	r3, #0
   17fa0:	beq	17fc0 <__printf_chk@plt+0x5850>
   17fa4:	ldr	r2, [sp, #44]	; 0x2c
   17fa8:	ldr	r3, [sl]
   17fac:	ldr	r0, [sp]
   17fb0:	cmp	r2, r3
   17fb4:	bne	17fd4 <__printf_chk@plt+0x5864>
   17fb8:	add	sp, sp, #52	; 0x34
   17fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fc0:	mvn	r3, #0
   17fc4:	str	r3, [sp]
   17fc8:	b	17fa4 <__printf_chk@plt+0x5834>
   17fcc:	mov	r8, r3
   17fd0:	b	17e84 <__printf_chk@plt+0x5714>
   17fd4:	bl	12494 <__stack_chk_fail@plt>
   17fd8:	push	{r4, r5, r6, r7, r8, r9, lr}
   17fdc:	movw	r4, #61168	; 0xeef0
   17fe0:	movt	r4, #4
   17fe4:	sub	sp, sp, #12
   17fe8:	mov	r5, r1
   17fec:	movw	r1, #28172	; 0x6e0c
   17ff0:	ldr	r3, [r4]
   17ff4:	movt	r1, #3
   17ff8:	mov	r8, r0
   17ffc:	str	r3, [sp, #4]
   18000:	bl	312a8 <crc32@@Base+0x17b04>
   18004:	subs	r6, r0, #0
   18008:	blt	18074 <__printf_chk@plt+0x5904>
   1800c:	cmp	r5, #0
   18010:	beq	180a8 <__printf_chk@plt+0x5938>
   18014:	mov	r1, #35	; 0x23
   18018:	mov	r0, r5
   1801c:	bl	12764 <strchr@plt>
   18020:	cmp	r0, #0
   18024:	beq	18090 <__printf_chk@plt+0x5920>
   18028:	sub	r0, r0, r5
   1802c:	str	r0, [sp]
   18030:	add	r0, r0, #1
   18034:	bl	125a8 <malloc@plt>
   18038:	subs	r7, r0, #0
   1803c:	beq	180d0 <__printf_chk@plt+0x5960>
   18040:	ldr	r9, [sp]
   18044:	mov	r1, r5
   18048:	mov	r2, r9
   1804c:	bl	1259c <memcpy@plt>
   18050:	mov	r1, r6
   18054:	mov	r3, #0
   18058:	mov	r0, r8
   1805c:	mov	r2, r7
   18060:	strb	r3, [r7, r9]
   18064:	bl	30c1c <crc32@@Base+0x17478>
   18068:	mov	r6, r0
   1806c:	mov	r0, r7
   18070:	bl	12128 <free@plt>
   18074:	ldr	r2, [sp, #4]
   18078:	mov	r0, r6
   1807c:	ldr	r3, [r4]
   18080:	cmp	r2, r3
   18084:	bne	180d8 <__printf_chk@plt+0x5968>
   18088:	add	sp, sp, #12
   1808c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18090:	mov	r1, r6
   18094:	mov	r2, r5
   18098:	mov	r0, r8
   1809c:	bl	30c1c <crc32@@Base+0x17478>
   180a0:	mov	r6, r0
   180a4:	b	18074 <__printf_chk@plt+0x5904>
   180a8:	mov	r1, r6
   180ac:	movw	r2, #27536	; 0x6b90
   180b0:	mov	r3, sp
   180b4:	movt	r2, #3
   180b8:	mov	r0, r8
   180bc:	bl	30f4c <crc32@@Base+0x177a8>
   180c0:	subs	r5, r0, #0
   180c4:	ldreq	r6, [sp]
   180c8:	bne	18014 <__printf_chk@plt+0x58a4>
   180cc:	b	18074 <__printf_chk@plt+0x5904>
   180d0:	mvn	r6, #11
   180d4:	b	18074 <__printf_chk@plt+0x5904>
   180d8:	bl	12494 <__stack_chk_fail@plt>
   180dc:	b	317f0 <crc32@@Base+0x1804c>
   180e0:	push	{r4, r5, lr}
   180e4:	movw	r4, #61168	; 0xeef0
   180e8:	sub	sp, sp, #20
   180ec:	movt	r4, #4
   180f0:	add	ip, sp, #8
   180f4:	mov	r5, r0
   180f8:	str	ip, [sp]
   180fc:	ldr	ip, [r4]
   18100:	str	ip, [sp, #12]
   18104:	bl	31954 <crc32@@Base+0x181b0>
   18108:	subs	r1, r0, #0
   1810c:	ldreq	r0, [sp, #8]
   18110:	beq	1811c <__printf_chk@plt+0x59ac>
   18114:	mov	r0, r5
   18118:	bl	16730 <__printf_chk@plt+0x3fc0>
   1811c:	ldr	r2, [sp, #12]
   18120:	ldr	r3, [r4]
   18124:	cmp	r2, r3
   18128:	bne	18134 <__printf_chk@plt+0x59c4>
   1812c:	add	sp, sp, #20
   18130:	pop	{r4, r5, pc}
   18134:	bl	12494 <__stack_chk_fail@plt>
   18138:	mov	r3, #0
   1813c:	b	180e0 <__printf_chk@plt+0x5970>
   18140:	push	{r4, r5, r6, lr}
   18144:	mov	r5, r1
   18148:	ldr	r1, [r0, #72]	; 0x48
   1814c:	mov	r0, r2
   18150:	mov	r4, r2
   18154:	bl	17fd8 <__printf_chk@plt+0x5868>
   18158:	subs	r1, r0, #0
   1815c:	blt	1817c <__printf_chk@plt+0x5a0c>
   18160:	mov	r2, r5
   18164:	mov	r0, r4
   18168:	mov	r3, #0
   1816c:	bl	180e0 <__printf_chk@plt+0x5970>
   18170:	cmp	r0, #0
   18174:	mvnlt	r0, #1
   18178:	pop	{r4, r5, r6, pc}
   1817c:	mvn	r0, #21
   18180:	pop	{r4, r5, r6, pc}
   18184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18188:	sub	sp, sp, #60	; 0x3c
   1818c:	mov	r9, r3
   18190:	subs	ip, r2, #0
   18194:	ldr	r3, [sp, #112]	; 0x70
   18198:	movw	r6, #61168	; 0xeef0
   1819c:	str	ip, [sp, #8]
   181a0:	movt	r6, #4
   181a4:	ldrne	r7, [ip]
   181a8:	mov	r4, r1
   181ac:	str	r3, [sp, #16]
   181b0:	mov	sl, r0
   181b4:	ldr	r3, [sp, #116]	; 0x74
   181b8:	movw	r1, #30728	; 0x7808
   181bc:	ldreq	r7, [sp, #8]
   181c0:	cmp	r9, #0
   181c4:	ldr	fp, [sp, #100]	; 0x64
   181c8:	movt	r1, #3
   181cc:	str	r3, [sp, #20]
   181d0:	mov	r0, #1
   181d4:	ldrne	r3, [r9]
   181d8:	ldr	r2, [r6]
   181dc:	streq	r9, [sp, #12]
   181e0:	strne	r3, [sp, #12]
   181e4:	sub	r3, fp, #1
   181e8:	cmp	r3, #28
   181ec:	str	r2, [sp, #52]	; 0x34
   181f0:	movwls	r2, #29440	; 0x7300
   181f4:	movtls	r2, #3
   181f8:	movwhi	r8, #30720	; 0x7800
   181fc:	movthi	r8, #3
   18200:	ldrls	r8, [r2, r3, lsl #2]
   18204:	mov	r3, r4
   18208:	mov	r2, r8
   1820c:	bl	12770 <__printf_chk@plt>
   18210:	mov	r0, r4
   18214:	bl	17d58 <__printf_chk@plt+0x55e8>
   18218:	cmp	r0, #0
   1821c:	beq	186dc <__printf_chk@plt+0x5f6c>
   18220:	cmp	r7, #0
   18224:	beq	18470 <__printf_chk@plt+0x5d00>
   18228:	mov	r1, r7
   1822c:	mov	r0, r4
   18230:	bl	16730 <__printf_chk@plt+0x3fc0>
   18234:	mov	r3, #0
   18238:	str	r3, [sp, #24]
   1823c:	mov	r5, r0
   18240:	cmp	r5, #0
   18244:	blt	186c8 <__printf_chk@plt+0x5f58>
   18248:	mov	r3, r8
   1824c:	mov	r2, r7
   18250:	movw	r1, #30956	; 0x78ec
   18254:	mov	r0, #1
   18258:	movt	r1, #3
   1825c:	bl	12770 <__printf_chk@plt>
   18260:	ldr	sl, [sl, #124]	; 0x7c
   18264:	movw	r2, #30044	; 0x755c
   18268:	mov	r1, r5
   1826c:	movt	r2, #3
   18270:	mov	r0, r4
   18274:	bl	16b58 <__printf_chk@plt+0x43e8>
   18278:	cmp	sl, #0
   1827c:	bne	18400 <__printf_chk@plt+0x5c90>
   18280:	cmp	fp, #8
   18284:	add	sl, sp, #48	; 0x30
   18288:	beq	18438 <__printf_chk@plt+0x5cc8>
   1828c:	mov	r2, sl
   18290:	mov	r1, r5
   18294:	mov	r0, r4
   18298:	uxtb	r3, fp
   1829c:	str	r3, [sp, #28]
   182a0:	bl	16830 <__printf_chk@plt+0x40c0>
   182a4:	cmp	r0, #0
   182a8:	beq	18388 <__printf_chk@plt+0x5c18>
   182ac:	mov	r2, sl
   182b0:	mov	r1, r5
   182b4:	mov	r0, r4
   182b8:	bl	16830 <__printf_chk@plt+0x40c0>
   182bc:	cmp	r0, #0
   182c0:	beq	18520 <__printf_chk@plt+0x5db0>
   182c4:	cmp	fp, #2
   182c8:	beq	18530 <__printf_chk@plt+0x5dc0>
   182cc:	cmp	fp, #29
   182d0:	cmpne	fp, #8
   182d4:	moveq	r3, #1
   182d8:	movne	r3, #0
   182dc:	bne	18560 <__printf_chk@plt+0x5df0>
   182e0:	cmp	fp, #22
   182e4:	bne	1870c <__printf_chk@plt+0x5f9c>
   182e8:	add	r3, sp, #44	; 0x2c
   182ec:	add	r2, sp, #40	; 0x28
   182f0:	mov	r1, r5
   182f4:	mov	r0, r4
   182f8:	bl	16a60 <__printf_chk@plt+0x42f0>
   182fc:	cmp	r0, #0
   18300:	ldreq	r3, [sp, #44]	; 0x2c
   18304:	streq	r3, [sp, #32]
   18308:	bne	18764 <__printf_chk@plt+0x5ff4>
   1830c:	ldr	r3, [sp, #40]	; 0x28
   18310:	str	r3, [sp, #28]
   18314:	ldr	r3, [sp, #108]	; 0x6c
   18318:	cmp	r3, #0
   1831c:	ldr	r3, [sp, #28]
   18320:	str	r3, [sp, #36]	; 0x24
   18324:	bne	185e4 <__printf_chk@plt+0x5e74>
   18328:	ldr	r2, [sp, #16]
   1832c:	ldr	r1, [sp, #36]	; 0x24
   18330:	ldr	r3, [sp, #8]
   18334:	str	r1, [r2]
   18338:	cmp	r3, #0
   1833c:	ldr	r2, [sp, #20]
   18340:	ldr	r1, [sp, #32]
   18344:	str	r1, [r2]
   18348:	strne	r7, [r3]
   1834c:	cmp	r9, #0
   18350:	beq	1836c <__printf_chk@plt+0x5bfc>
   18354:	ldr	r2, [sp, #12]
   18358:	ldr	r1, [sp, #24]
   1835c:	cmp	r2, #0
   18360:	mov	r3, r2
   18364:	moveq	r3, r1
   18368:	str	r3, [r9]
   1836c:	ldr	r2, [sp, #52]	; 0x34
   18370:	mov	r0, r5
   18374:	ldr	r3, [r6]
   18378:	cmp	r2, r3
   1837c:	bne	18794 <__printf_chk@plt+0x6024>
   18380:	add	sp, sp, #60	; 0x3c
   18384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18388:	ldrb	r3, [sp, #48]	; 0x30
   1838c:	uxtb	r2, fp
   18390:	cmp	r2, r3
   18394:	bne	182ac <__printf_chk@plt+0x5b3c>
   18398:	cmp	fp, #29
   1839c:	cmpne	fp, #8
   183a0:	movne	r3, #1
   183a4:	strne	r3, [sp, #32]
   183a8:	bne	18564 <__printf_chk@plt+0x5df4>
   183ac:	add	r3, sp, #44	; 0x2c
   183b0:	add	r2, sp, #40	; 0x28
   183b4:	mov	r1, r5
   183b8:	mov	r0, r4
   183bc:	bl	16a60 <__printf_chk@plt+0x42f0>
   183c0:	cmp	r0, #0
   183c4:	bne	18764 <__printf_chk@plt+0x5ff4>
   183c8:	ldr	r3, [sp, #44]	; 0x2c
   183cc:	cmp	fp, #8
   183d0:	ldr	r0, [sp, #40]	; 0x28
   183d4:	str	r3, [sp, #32]
   183d8:	str	r0, [sp, #28]
   183dc:	bne	18314 <__printf_chk@plt+0x5ba4>
   183e0:	bl	2d674 <crc32@@Base+0x13ed0>
   183e4:	cmp	r0, #0
   183e8:	beq	1830c <__printf_chk@plt+0x5b9c>
   183ec:	movw	r0, #31064	; 0x7958
   183f0:	movt	r0, #3
   183f4:	bl	1226c <puts@plt>
   183f8:	mvn	r5, #7
   183fc:	b	1836c <__printf_chk@plt+0x5bfc>
   18400:	movw	r0, #30868	; 0x7894
   18404:	movt	r0, #3
   18408:	bl	1226c <puts@plt>
   1840c:	mov	r1, r5
   18410:	mov	r0, r4
   18414:	bl	179fc <__printf_chk@plt+0x528c>
   18418:	cmp	r0, #0
   1841c:	beq	186f8 <__printf_chk@plt+0x5f88>
   18420:	movw	r0, #30920	; 0x78c8
   18424:	movt	r0, #3
   18428:	bl	1226c <puts@plt>
   1842c:	cmp	fp, #8
   18430:	add	sl, sp, #48	; 0x30
   18434:	bne	1828c <__printf_chk@plt+0x5b1c>
   18438:	mov	r1, r5
   1843c:	mov	r0, r4
   18440:	mov	r2, sl
   18444:	bl	16898 <__printf_chk@plt+0x4128>
   18448:	cmp	r0, #0
   1844c:	bne	1845c <__printf_chk@plt+0x5cec>
   18450:	ldrb	r3, [sp, #48]	; 0x30
   18454:	cmp	r3, #0
   18458:	beq	1828c <__printf_chk@plt+0x5b1c>
   1845c:	movw	r0, #30984	; 0x7908
   18460:	movt	r0, #3
   18464:	bl	1226c <puts@plt>
   18468:	mvn	r5, #92	; 0x5c
   1846c:	b	1836c <__printf_chk@plt+0x5bfc>
   18470:	ldr	r1, [sp, #12]
   18474:	mov	r0, r4
   18478:	bl	17fd8 <__printf_chk@plt+0x5868>
   1847c:	subs	r5, r0, #0
   18480:	blt	18780 <__printf_chk@plt+0x6010>
   18484:	mov	r2, r7
   18488:	mov	r1, r5
   1848c:	mov	r0, r4
   18490:	bl	30c4c <crc32@@Base+0x174a8>
   18494:	movw	r1, #30836	; 0x7874
   18498:	movt	r1, #3
   1849c:	mov	r2, r0
   184a0:	str	r0, [sp, #24]
   184a4:	mov	r0, #1
   184a8:	bl	12770 <__printf_chk@plt>
   184ac:	cmp	fp, #2
   184b0:	ldreq	r3, [sp, #24]
   184b4:	streq	r3, [sl, #72]	; 0x48
   184b8:	ldr	r3, [sl, #124]	; 0x7c
   184bc:	cmp	r3, #0
   184c0:	beq	184f0 <__printf_chk@plt+0x5d80>
   184c4:	movw	r0, #30868	; 0x7894
   184c8:	movt	r0, #3
   184cc:	bl	1226c <puts@plt>
   184d0:	mov	r1, r5
   184d4:	mov	r0, r4
   184d8:	bl	19404 <__printf_chk@plt+0x6c94>
   184dc:	cmp	r0, #0
   184e0:	bne	186f8 <__printf_chk@plt+0x5f88>
   184e4:	movw	r0, #30920	; 0x78c8
   184e8:	movt	r0, #3
   184ec:	bl	1226c <puts@plt>
   184f0:	mov	r1, r5
   184f4:	mov	r3, #0
   184f8:	mov	r2, r8
   184fc:	mov	r0, r4
   18500:	bl	180e0 <__printf_chk@plt+0x5970>
   18504:	mov	r2, #0
   18508:	mov	r1, r0
   1850c:	mov	r5, r0
   18510:	mov	r0, r4
   18514:	bl	30c4c <crc32@@Base+0x174a8>
   18518:	mov	r7, r0
   1851c:	b	18240 <__printf_chk@plt+0x5ad0>
   18520:	ldrb	r3, [sp, #48]	; 0x30
   18524:	cmp	r3, #5
   18528:	beq	18398 <__printf_chk@plt+0x5c28>
   1852c:	b	182c4 <__printf_chk@plt+0x5b54>
   18530:	mov	r2, sl
   18534:	mov	r1, r5
   18538:	mov	r0, r4
   1853c:	bl	16830 <__printf_chk@plt+0x40c0>
   18540:	cmp	r0, #0
   18544:	movne	r3, #0
   18548:	strne	r3, [sp, #32]
   1854c:	bne	18564 <__printf_chk@plt+0x5df4>
   18550:	ldrb	r3, [sp, #48]	; 0x30
   18554:	sub	r3, r3, #14
   18558:	clz	r3, r3
   1855c:	lsr	r3, r3, #5
   18560:	str	r3, [sp, #32]
   18564:	mov	r2, sl
   18568:	mov	r1, r5
   1856c:	mov	r0, r4
   18570:	bl	16760 <__printf_chk@plt+0x3ff0>
   18574:	cmp	r0, #0
   18578:	bne	18588 <__printf_chk@plt+0x5e18>
   1857c:	ldrb	r3, [sp, #48]	; 0x30
   18580:	cmp	r3, #5
   18584:	beq	185ac <__printf_chk@plt+0x5e3c>
   18588:	mov	r2, sl
   1858c:	mov	r1, r5
   18590:	mov	r0, r4
   18594:	bl	16760 <__printf_chk@plt+0x3ff0>
   18598:	cmp	r0, #0
   1859c:	bne	185bc <__printf_chk@plt+0x5e4c>
   185a0:	ldrb	r3, [sp, #48]	; 0x30
   185a4:	cmp	r3, #17
   185a8:	bne	185bc <__printf_chk@plt+0x5e4c>
   185ac:	ldr	r3, [sp, #32]
   185b0:	cmp	r3, #1
   185b4:	bne	182e0 <__printf_chk@plt+0x5b70>
   185b8:	b	183ac <__printf_chk@plt+0x5c3c>
   185bc:	mov	r2, sl
   185c0:	mov	r1, r5
   185c4:	mov	r0, r4
   185c8:	bl	16760 <__printf_chk@plt+0x3ff0>
   185cc:	cmp	r0, #0
   185d0:	bne	182e0 <__printf_chk@plt+0x5b70>
   185d4:	ldrb	r3, [sp, #48]	; 0x30
   185d8:	cmp	r3, #24
   185dc:	beq	185ac <__printf_chk@plt+0x5e3c>
   185e0:	b	182e0 <__printf_chk@plt+0x5b70>
   185e4:	mov	r3, sl
   185e8:	movw	r2, #27464	; 0x6b48
   185ec:	mov	r1, r5
   185f0:	movt	r2, #3
   185f4:	mov	r0, r4
   185f8:	bl	16284 <__printf_chk@plt+0x3b14>
   185fc:	ldr	r3, [sp, #108]	; 0x6c
   18600:	cmp	r0, #0
   18604:	beq	1862c <__printf_chk@plt+0x5ebc>
   18608:	cmp	r3, #3
   1860c:	bne	18328 <__printf_chk@plt+0x5bb8>
   18610:	mov	r2, r8
   18614:	movw	r1, #31092	; 0x7974
   18618:	mov	r0, #1
   1861c:	movt	r1, #3
   18620:	bl	12770 <__printf_chk@plt>
   18624:	mvn	r5, #8
   18628:	b	1836c <__printf_chk@plt+0x5bfc>
   1862c:	cmp	r3, #2
   18630:	ldr	r2, [sp, #48]	; 0x30
   18634:	beq	186bc <__printf_chk@plt+0x5f4c>
   18638:	ldr	lr, [r4, #4]
   1863c:	ldr	r3, [sp, #32]
   18640:	ubfx	ip, lr, #8, #8
   18644:	ubfx	r0, lr, #16, #8
   18648:	add	r1, r2, r3
   1864c:	lsr	r3, lr, #24
   18650:	orr	r3, r3, lr, lsl #24
   18654:	orr	r3, r3, ip, lsl #16
   18658:	orr	r3, r3, r0, lsl #8
   1865c:	add	r3, r3, r4
   18660:	cmp	fp, #2
   18664:	cmpne	r2, r3
   18668:	movcc	r3, #1
   1866c:	movcs	r3, #0
   18670:	cmp	r4, r1
   18674:	movcs	r4, #0
   18678:	andcc	r4, r3, #1
   1867c:	cmp	r4, #0
   18680:	bne	18798 <__printf_chk@plt+0x6028>
   18684:	ldr	r3, [sp, #28]
   18688:	movw	r1, #31156	; 0x79b4
   1868c:	str	r2, [sp]
   18690:	movt	r1, #3
   18694:	mov	r2, r8
   18698:	mov	r0, #1
   1869c:	bl	12770 <__printf_chk@plt>
   186a0:	ldr	r2, [sp, #32]
   186a4:	ldr	r1, [sp, #40]	; 0x28
   186a8:	ldr	r0, [sp, #48]	; 0x30
   186ac:	bl	12380 <memmove@plt>
   186b0:	ldr	r3, [sp, #48]	; 0x30
   186b4:	str	r3, [sp, #36]	; 0x24
   186b8:	b	18328 <__printf_chk@plt+0x5bb8>
   186bc:	cmp	r2, #0
   186c0:	beq	18328 <__printf_chk@plt+0x5bb8>
   186c4:	b	18638 <__printf_chk@plt+0x5ec8>
   186c8:	movw	r0, #30924	; 0x78cc
   186cc:	movt	r0, #3
   186d0:	bl	1226c <puts@plt>
   186d4:	mvn	r5, #1
   186d8:	b	1836c <__printf_chk@plt+0x5bfc>
   186dc:	mov	r2, r8
   186e0:	movw	r1, #30772	; 0x7834
   186e4:	mov	r0, #1
   186e8:	movt	r1, #3
   186ec:	bl	12770 <__printf_chk@plt>
   186f0:	mvn	r5, #7
   186f4:	b	1836c <__printf_chk@plt+0x5bfc>
   186f8:	movw	r0, #30904	; 0x78b8
   186fc:	movt	r0, #3
   18700:	bl	1226c <puts@plt>
   18704:	mvn	r5, #12
   18708:	b	1836c <__printf_chk@plt+0x5bfc>
   1870c:	mov	r2, sl
   18710:	mov	r1, r5
   18714:	mov	r0, r4
   18718:	mvn	r5, #4
   1871c:	bl	16760 <__printf_chk@plt+0x3ff0>
   18720:	ldrb	r0, [sp, #48]	; 0x30
   18724:	bl	1a380 <crc32@@Base+0xbdc>
   18728:	ldr	r3, [sp, #96]	; 0x60
   1872c:	mov	r4, r0
   18730:	uxtb	r0, r3
   18734:	bl	1a3d4 <crc32@@Base+0xc30>
   18738:	mov	r7, r0
   1873c:	ldr	r0, [sp, #28]
   18740:	bl	1a428 <crc32@@Base+0xc84>
   18744:	mov	r3, r7
   18748:	mov	r2, r4
   1874c:	movw	r1, #31008	; 0x7920
   18750:	movt	r1, #3
   18754:	str	r0, [sp]
   18758:	mov	r0, #1
   1875c:	bl	12770 <__printf_chk@plt>
   18760:	b	1836c <__printf_chk@plt+0x5bfc>
   18764:	mov	r2, r8
   18768:	movw	r1, #31028	; 0x7934
   1876c:	mov	r0, #1
   18770:	movt	r1, #3
   18774:	bl	12770 <__printf_chk@plt>
   18778:	mvn	r5, #1
   1877c:	b	1836c <__printf_chk@plt+0x5bfc>
   18780:	movw	r0, #30800	; 0x7850
   18784:	movt	r0, #3
   18788:	bl	1226c <puts@plt>
   1878c:	mvn	r5, #1
   18790:	b	1836c <__printf_chk@plt+0x5bfc>
   18794:	bl	12494 <__stack_chk_fail@plt>
   18798:	mov	r2, r8
   1879c:	movw	r1, #31132	; 0x799c
   187a0:	mov	r0, #1
   187a4:	movt	r1, #3
   187a8:	bl	12770 <__printf_chk@plt>
   187ac:	mvn	r5, #17
   187b0:	b	1836c <__printf_chk@plt+0x5bfc>
   187b4:	push	{r4, r5, r6, r7, r8, lr}
   187b8:	movw	r4, #61168	; 0xeef0
   187bc:	movt	r4, #4
   187c0:	ldr	r6, [r0, #76]	; 0x4c
   187c4:	sub	sp, sp, #32
   187c8:	mov	r7, r1
   187cc:	ldr	r3, [r4]
   187d0:	mov	r8, r2
   187d4:	movw	r1, #26232	; 0x6678
   187d8:	mov	r2, r6
   187dc:	movt	r1, #3
   187e0:	mov	r5, r0
   187e4:	str	r3, [sp, #28]
   187e8:	bl	18140 <__printf_chk@plt+0x59d0>
   187ec:	cmp	r0, #0
   187f0:	blt	1882c <__printf_chk@plt+0x60bc>
   187f4:	mov	r3, #0
   187f8:	add	ip, sp, #24
   187fc:	str	r7, [sp]
   18800:	mov	r1, r6
   18804:	str	ip, [sp, #20]
   18808:	mov	r6, #130	; 0x82
   1880c:	mov	r7, #3
   18810:	mov	ip, #20
   18814:	str	r8, [sp, #16]
   18818:	mov	r0, r5
   1881c:	mov	r2, r3
   18820:	strd	r6, [sp, #8]
   18824:	str	ip, [sp, #4]
   18828:	bl	18184 <__printf_chk@plt+0x5a14>
   1882c:	ldr	r2, [sp, #28]
   18830:	ldr	r3, [r4]
   18834:	cmp	r2, r3
   18838:	bne	18844 <__printf_chk@plt+0x60d4>
   1883c:	add	sp, sp, #32
   18840:	pop	{r4, r5, r6, r7, r8, pc}
   18844:	bl	12494 <__stack_chk_fail@plt>
   18848:	push	{r4, r5, r6, lr}
   1884c:	movw	r4, #62424	; 0xf3d8
   18850:	movt	r4, #4
   18854:	mov	r1, r0
   18858:	mov	r5, r0
   1885c:	ldr	r0, [r4]
   18860:	bl	1265c <strcmp@plt>
   18864:	cmp	r0, #0
   18868:	beq	18888 <__printf_chk@plt+0x6118>
   1886c:	ldr	r0, [r4, #8]!
   18870:	mov	r1, r5
   18874:	bl	1265c <strcmp@plt>
   18878:	cmp	r0, #0
   1887c:	moveq	r0, r4
   18880:	movne	r0, #0
   18884:	pop	{r4, r5, r6, pc}
   18888:	mov	r0, r4
   1888c:	pop	{r4, r5, r6, pc}
   18890:	movw	r3, #43348	; 0xa954
   18894:	movt	r3, #30
   18898:	str	r0, [r3]
   1889c:	bx	lr
   188a0:	movw	r3, #43348	; 0xa954
   188a4:	movt	r3, #30
   188a8:	ldr	r0, [r3]
   188ac:	bx	lr
   188b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188b4:	mov	r9, r0
   188b8:	ldr	r7, [pc, #88]	; 18918 <__printf_chk@plt+0x61a8>
   188bc:	mov	r4, #0
   188c0:	mov	sl, #24
   188c4:	mul	r8, sl, r4
   188c8:	ldr	r5, [r7, r8]
   188cc:	mov	r0, r5
   188d0:	bl	125c0 <strlen@plt>
   188d4:	mov	r1, r9
   188d8:	mov	r2, r0
   188dc:	mov	r6, r0
   188e0:	mov	r0, r5
   188e4:	bl	1217c <strncmp@plt>
   188e8:	cmp	r0, #0
   188ec:	bne	188fc <__printf_chk@plt+0x618c>
   188f0:	ldrb	r3, [r9, r6]
   188f4:	cmp	r3, #44	; 0x2c
   188f8:	beq	18910 <__printf_chk@plt+0x61a0>
   188fc:	cmp	r4, #1
   18900:	mov	r4, #1
   18904:	bne	188c4 <__printf_chk@plt+0x6154>
   18908:	mov	r0, #0
   1890c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18910:	add	r0, r7, r8
   18914:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18918:	andeq	pc, r4, r8, ror #7
   1891c:	push	{r4, r5, r6, lr}
   18920:	mov	r1, #44	; 0x2c
   18924:	bl	12764 <strchr@plt>
   18928:	cmp	r0, #0
   1892c:	popeq	{r4, r5, r6, pc}
   18930:	add	r5, r0, #1
   18934:	movw	r4, #62424	; 0xf3d8
   18938:	movt	r4, #4
   1893c:	mov	r1, r5
   18940:	ldr	r0, [r4, #64]	; 0x40
   18944:	bl	1265c <strcmp@plt>
   18948:	cmp	r0, #0
   1894c:	beq	1896c <__printf_chk@plt+0x61fc>
   18950:	ldr	r0, [r4, #84]!	; 0x54
   18954:	mov	r1, r5
   18958:	bl	1265c <strcmp@plt>
   1895c:	cmp	r0, #0
   18960:	moveq	r0, r4
   18964:	movne	r0, #0
   18968:	pop	{r4, r5, r6, pc}
   1896c:	add	r0, r4, #64	; 0x40
   18970:	pop	{r4, r5, r6, pc}
   18974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18978:	movw	r6, #61168	; 0xeef0
   1897c:	sub	sp, sp, #20
   18980:	movt	r6, #4
   18984:	mov	sl, r3
   18988:	mov	r9, r1
   1898c:	ldr	ip, [r6]
   18990:	mov	r1, r2
   18994:	ldr	r3, [sp, #56]	; 0x38
   18998:	mov	r8, r2
   1899c:	mov	r4, r0
   189a0:	add	r2, sp, #8
   189a4:	mov	r0, r9
   189a8:	str	ip, [sp, #12]
   189ac:	str	r3, [sp, #4]
   189b0:	bl	17454 <__printf_chk@plt+0x4ce4>
   189b4:	subs	r7, r0, #0
   189b8:	bne	18ab4 <__printf_chk@plt+0x6344>
   189bc:	mov	r3, r7
   189c0:	mov	r1, r8
   189c4:	movw	r2, #27980	; 0x6d4c
   189c8:	mov	r0, r9
   189cc:	movt	r2, #3
   189d0:	movw	r5, #31208	; 0x79e8
   189d4:	bl	30f4c <crc32@@Base+0x177a8>
   189d8:	movt	r5, #3
   189dc:	mov	r2, #48	; 0x30
   189e0:	mov	r1, r7
   189e4:	cmp	r0, #0
   189e8:	movne	r5, r0
   189ec:	mov	r0, r4
   189f0:	bl	122e4 <memset@plt>
   189f4:	mov	r3, r7
   189f8:	mov	r1, r8
   189fc:	movw	r2, #27988	; 0x6d54
   18a00:	mov	r0, r9
   18a04:	movt	r2, #3
   18a08:	bl	30f4c <crc32@@Base+0x177a8>
   18a0c:	ldr	fp, [sp, #8]
   18a10:	str	r9, [r4, #8]
   18a14:	str	r8, [r4, #12]
   18a18:	str	fp, [r4, #16]
   18a1c:	str	r0, [r4, #4]
   18a20:	str	r0, [sp]
   18a24:	mov	r0, fp
   18a28:	bl	188b0 <__printf_chk@plt+0x6140>
   18a2c:	str	r0, [r4, #20]
   18a30:	mov	r0, fp
   18a34:	bl	1891c <__printf_chk@plt+0x61ac>
   18a38:	str	r0, [r4, #28]
   18a3c:	mov	r0, r5
   18a40:	bl	18848 <__printf_chk@plt+0x60d8>
   18a44:	movw	r1, #43348	; 0xa954
   18a48:	movt	r1, #30
   18a4c:	ldr	r3, [sp]
   18a50:	mov	r2, fp
   18a54:	str	sl, [r4, #36]	; 0x24
   18a58:	ldr	ip, [r1]
   18a5c:	movw	r1, #31248	; 0x7a10
   18a60:	movt	r1, #3
   18a64:	str	ip, [r4, #32]
   18a68:	str	r0, [r4, #24]
   18a6c:	mov	r0, #1
   18a70:	bl	12770 <__printf_chk@plt>
   18a74:	ldr	r3, [r4, #20]
   18a78:	cmp	r3, #0
   18a7c:	beq	18acc <__printf_chk@plt+0x635c>
   18a80:	ldr	r3, [r4, #28]
   18a84:	cmp	r3, #0
   18a88:	beq	18acc <__printf_chk@plt+0x635c>
   18a8c:	ldr	r3, [r4, #24]
   18a90:	cmp	r3, #0
   18a94:	beq	18acc <__printf_chk@plt+0x635c>
   18a98:	ldr	r2, [sp, #12]
   18a9c:	mov	r0, r7
   18aa0:	ldr	r3, [r6]
   18aa4:	cmp	r2, r3
   18aa8:	bne	18ae4 <__printf_chk@plt+0x6374>
   18aac:	add	sp, sp, #20
   18ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ab4:	ldr	r2, [sp, #4]
   18ab8:	movw	r3, #30416	; 0x76d0
   18abc:	mvn	r7, #0
   18ac0:	movt	r3, #3
   18ac4:	str	r3, [r2]
   18ac8:	b	18a98 <__printf_chk@plt+0x6328>
   18acc:	ldr	r2, [sp, #4]
   18ad0:	movw	r3, #31220	; 0x79f4
   18ad4:	mvn	r7, #0
   18ad8:	movt	r3, #3
   18adc:	str	r3, [r2]
   18ae0:	b	18a98 <__printf_chk@plt+0x6328>
   18ae4:	bl	12494 <__stack_chk_fail@plt>
   18ae8:	cmp	r0, #0
   18aec:	bxeq	lr
   18af0:	b	18848 <__printf_chk@plt+0x60d8>
   18af4:	cmp	r3, #0
   18af8:	push	{r4, r5, lr}
   18afc:	mov	r5, r0
   18b00:	sub	sp, sp, #12
   18b04:	mov	r4, r1
   18b08:	beq	18b4c <__printf_chk@plt+0x63dc>
   18b0c:	cmp	r2, #0
   18b10:	movgt	r0, #4
   18b14:	movgt	r1, #0
   18b18:	ble	18b40 <__printf_chk@plt+0x63d0>
   18b1c:	ldr	ip, [r4, r1, lsl #3]
   18b20:	ldr	lr, [r4, r0]
   18b24:	add	ip, r5, ip
   18b28:	str	ip, [r3, r1, lsl #3]
   18b2c:	add	r1, r1, #1
   18b30:	cmp	r2, r1
   18b34:	str	lr, [r3, r0]
   18b38:	add	r0, r0, #8
   18b3c:	bne	18b1c <__printf_chk@plt+0x63ac>
   18b40:	mov	r0, r3
   18b44:	add	sp, sp, #12
   18b48:	pop	{r4, r5, pc}
   18b4c:	mov	r1, r2
   18b50:	mov	r0, #8
   18b54:	str	r2, [sp, #4]
   18b58:	bl	12518 <calloc@plt>
   18b5c:	ldr	r2, [sp, #4]
   18b60:	subs	r3, r0, #0
   18b64:	bne	18b0c <__printf_chk@plt+0x639c>
   18b68:	b	18b40 <__printf_chk@plt+0x63d0>
   18b6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18b70:	mov	r6, r1
   18b74:	ldr	r1, [r0, #4]
   18b78:	mov	r8, r2
   18b7c:	mov	r7, r3
   18b80:	sub	sp, sp, #84	; 0x54
   18b84:	ubfx	r2, r1, #8, #8
   18b88:	movw	r4, #61168	; 0xeef0
   18b8c:	lsr	r3, r1, #24
   18b90:	movt	r4, #4
   18b94:	orr	r3, r3, r1, lsl #24
   18b98:	ubfx	r1, r1, #16, #8
   18b9c:	orr	r3, r3, r2, lsl #16
   18ba0:	ldr	r9, [sp, #116]	; 0x74
   18ba4:	ldr	r2, [r4]
   18ba8:	orr	r3, r3, r1, lsl #8
   18bac:	cmp	r3, #268435456	; 0x10000000
   18bb0:	mov	r3, #0
   18bb4:	str	r3, [r9]
   18bb8:	str	r2, [sp, #76]	; 0x4c
   18bbc:	bls	18be8 <__printf_chk@plt+0x6478>
   18bc0:	mvn	r0, #0
   18bc4:	movw	r3, #31256	; 0x7a18
   18bc8:	movt	r3, #3
   18bcc:	str	r3, [r9]
   18bd0:	ldr	r2, [sp, #76]	; 0x4c
   18bd4:	ldr	r3, [r4]
   18bd8:	cmp	r2, r3
   18bdc:	bne	18c84 <__printf_chk@plt+0x6514>
   18be0:	add	sp, sp, #84	; 0x54
   18be4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18be8:	mov	r5, r0
   18bec:	str	r9, [sp]
   18bf0:	ldr	r3, [sp, #112]	; 0x70
   18bf4:	mov	r2, r6
   18bf8:	add	r0, sp, #28
   18bfc:	mov	r1, r5
   18c00:	bl	18974 <__printf_chk@plt+0x6204>
   18c04:	cmp	r0, #0
   18c08:	bne	18c7c <__printf_chk@plt+0x650c>
   18c0c:	add	r3, sp, #16
   18c10:	mov	r1, r6
   18c14:	mov	r0, r5
   18c18:	add	r2, sp, #12
   18c1c:	bl	174ac <__printf_chk@plt+0x4d3c>
   18c20:	cmp	r0, #0
   18c24:	movwne	r3, #30356	; 0x7694
   18c28:	mvnne	r0, #0
   18c2c:	movtne	r3, #3
   18c30:	strne	r3, [r9]
   18c34:	bne	18bd0 <__printf_chk@plt+0x6460>
   18c38:	ldr	lr, [sp, #16]
   18c3c:	add	r0, sp, #28
   18c40:	ldr	ip, [sp, #56]	; 0x38
   18c44:	mov	r2, #1
   18c48:	ldr	r3, [sp, #12]
   18c4c:	add	r1, sp, #20
   18c50:	str	lr, [sp]
   18c54:	str	r8, [sp, #20]
   18c58:	str	r7, [sp, #24]
   18c5c:	ldr	r5, [ip, #16]
   18c60:	blx	r5
   18c64:	cmp	r0, #0
   18c68:	movwne	r3, #31280	; 0x7a30
   18c6c:	mvnne	r0, #0
   18c70:	movtne	r3, #3
   18c74:	strne	r3, [r9]
   18c78:	b	18bd0 <__printf_chk@plt+0x6460>
   18c7c:	mvn	r0, #0
   18c80:	b	18bd0 <__printf_chk@plt+0x6460>
   18c84:	bl	12494 <__stack_chk_fail@plt>
   18c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c8c:	sub	sp, sp, #52	; 0x34
   18c90:	movw	ip, #61168	; 0xeef0
   18c94:	movt	ip, #4
   18c98:	ldr	lr, [sp, #92]	; 0x5c
   18c9c:	mov	sl, r2
   18ca0:	ldr	r9, [sp, #88]	; 0x58
   18ca4:	mov	r2, #1
   18ca8:	str	ip, [sp, #32]
   18cac:	mov	r5, r0
   18cb0:	ldr	ip, [ip]
   18cb4:	mov	fp, r3
   18cb8:	str	r1, [sp, #24]
   18cbc:	mov	r0, r9
   18cc0:	str	r2, [lr]
   18cc4:	mov	r1, #0
   18cc8:	movw	r2, #29040	; 0x7170
   18ccc:	movt	r2, #3
   18cd0:	str	lr, [sp, #36]	; 0x24
   18cd4:	str	ip, [sp, #44]	; 0x2c
   18cd8:	bl	30c1c <crc32@@Base+0x17478>
   18cdc:	subs	r1, r0, #0
   18ce0:	blt	18e1c <__printf_chk@plt+0x66ac>
   18ce4:	mov	r0, r9
   18ce8:	bl	2dac0 <crc32@@Base+0x1431c>
   18cec:	subs	r7, r0, #0
   18cf0:	blt	18e1c <__printf_chk@plt+0x66ac>
   18cf4:	movw	r3, #29628	; 0x73bc
   18cf8:	movw	r2, #35368	; 0x8a28
   18cfc:	movt	r3, #3
   18d00:	movt	r2, #3
   18d04:	str	r3, [sp, #12]
   18d08:	movw	r3, #46108	; 0xb41c
   18d0c:	str	r2, [sp, #20]
   18d10:	movt	r3, #3
   18d14:	str	r3, [sp, #28]
   18d18:	mov	r3, #0
   18d1c:	str	r3, [sp, #16]
   18d20:	mov	r3, #0
   18d24:	ldr	r2, [sp, #12]
   18d28:	mov	r1, r7
   18d2c:	mov	r0, r9
   18d30:	bl	30f4c <crc32@@Base+0x177a8>
   18d34:	cmp	r0, #0
   18d38:	beq	18e54 <__printf_chk@plt+0x66e4>
   18d3c:	ldr	r1, [sp, #20]
   18d40:	bl	1265c <strcmp@plt>
   18d44:	cmp	r0, #0
   18d48:	bne	18e54 <__printf_chk@plt+0x66e4>
   18d4c:	ldr	r3, [sp, #28]
   18d50:	mov	r0, r5
   18d54:	ldr	r1, [sp, #24]
   18d58:	str	r3, [sp, #40]	; 0x28
   18d5c:	bl	2dac0 <crc32@@Base+0x1431c>
   18d60:	subs	r4, r0, #0
   18d64:	blt	18de4 <__printf_chk@plt+0x6674>
   18d68:	movw	r6, #29040	; 0x7170
   18d6c:	movw	r8, #30516	; 0x7734
   18d70:	movt	r6, #3
   18d74:	movt	r8, #3
   18d78:	mov	r2, #0
   18d7c:	mov	r1, r4
   18d80:	mov	r0, r5
   18d84:	bl	30c4c <crc32@@Base+0x174a8>
   18d88:	mov	r2, #9
   18d8c:	mov	r1, r6
   18d90:	bl	1217c <strncmp@plt>
   18d94:	cmp	r0, #0
   18d98:	bne	18dd0 <__printf_chk@plt+0x6660>
   18d9c:	add	r3, sp, #40	; 0x28
   18da0:	mvn	r2, #0
   18da4:	str	r3, [sp, #4]
   18da8:	mov	r1, r4
   18dac:	str	r2, [sp]
   18db0:	mov	r3, fp
   18db4:	mov	r2, sl
   18db8:	mov	r0, r5
   18dbc:	bl	18b6c <__printf_chk@plt+0x63fc>
   18dc0:	cmp	r0, #0
   18dc4:	beq	18e3c <__printf_chk@plt+0x66cc>
   18dc8:	mov	r0, r8
   18dcc:	bl	1226c <puts@plt>
   18dd0:	mov	r1, r4
   18dd4:	mov	r0, r5
   18dd8:	bl	2db20 <crc32@@Base+0x1437c>
   18ddc:	subs	r4, r0, #0
   18de0:	bge	18d78 <__printf_chk@plt+0x6608>
   18de4:	cmn	r4, #8
   18de8:	cmnne	r4, #11
   18dec:	beq	18e84 <__printf_chk@plt+0x6714>
   18df0:	mov	r1, r7
   18df4:	mov	r2, #0
   18df8:	mov	r0, r9
   18dfc:	bl	30c4c <crc32@@Base+0x174a8>
   18e00:	movw	r1, #31300	; 0x7a44
   18e04:	movt	r1, #3
   18e08:	mov	r2, r0
   18e0c:	mov	r0, #1
   18e10:	bl	12770 <__printf_chk@plt>
   18e14:	mvn	r0, #0
   18e18:	b	18e20 <__printf_chk@plt+0x66b0>
   18e1c:	mov	r0, #0
   18e20:	ldr	r3, [sp, #32]
   18e24:	ldr	r2, [sp, #44]	; 0x2c
   18e28:	ldr	r3, [r3]
   18e2c:	cmp	r2, r3
   18e30:	bne	18ed4 <__printf_chk@plt+0x6764>
   18e34:	add	sp, sp, #52	; 0x34
   18e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e3c:	ldr	r3, [sp, #16]
   18e40:	movw	r0, #30512	; 0x7730
   18e44:	movt	r0, #3
   18e48:	add	r3, r3, #1
   18e4c:	str	r3, [sp, #16]
   18e50:	bl	1226c <puts@plt>
   18e54:	mov	r1, r7
   18e58:	mov	r0, r9
   18e5c:	bl	2db20 <crc32@@Base+0x1437c>
   18e60:	subs	r7, r0, #0
   18e64:	bge	18d20 <__printf_chk@plt+0x65b0>
   18e68:	ldr	r3, [sp, #16]
   18e6c:	cmp	r3, #0
   18e70:	beq	18e1c <__printf_chk@plt+0x66ac>
   18e74:	ldr	r3, [sp, #36]	; 0x24
   18e78:	mov	r0, #0
   18e7c:	str	r0, [r3]
   18e80:	b	18e20 <__printf_chk@plt+0x66b0>
   18e84:	mov	r1, r4
   18e88:	mov	r2, #0
   18e8c:	mov	r0, r5
   18e90:	movw	r4, #30388	; 0x76b4
   18e94:	movt	r4, #3
   18e98:	str	r4, [sp, #40]	; 0x28
   18e9c:	bl	30c4c <crc32@@Base+0x174a8>
   18ea0:	ldr	r1, [sp, #24]
   18ea4:	mov	r2, #0
   18ea8:	mov	r6, r0
   18eac:	mov	r0, r5
   18eb0:	bl	30c4c <crc32@@Base+0x174a8>
   18eb4:	mov	r2, r4
   18eb8:	mov	r3, r6
   18ebc:	movw	r1, #30520	; 0x7738
   18ec0:	movt	r1, #3
   18ec4:	str	r0, [sp]
   18ec8:	mov	r0, #1
   18ecc:	bl	12770 <__printf_chk@plt>
   18ed0:	b	18df0 <__printf_chk@plt+0x6680>
   18ed4:	bl	12494 <__stack_chk_fail@plt>
   18ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18edc:	mov	r6, r0
   18ee0:	add	fp, sp, #32
   18ee4:	sub	sp, sp, #316	; 0x13c
   18ee8:	ldr	r0, [r0, #4]
   18eec:	str	r1, [fp, #-312]	; 0xfffffec8
   18ef0:	movw	r7, #61168	; 0xeef0
   18ef4:	ubfx	r4, r0, #8, #8
   18ef8:	ubfx	lr, r0, #16, #8
   18efc:	lsr	r1, r0, #24
   18f00:	movt	r7, #4
   18f04:	orr	r1, r1, r0, lsl #24
   18f08:	mov	r8, r3
   18f0c:	orr	r1, r1, r4, lsl #16
   18f10:	ldr	ip, [r7]
   18f14:	orr	r1, r1, lr, lsl #8
   18f18:	mov	r0, #0
   18f1c:	cmp	r1, #268435456	; 0x10000000
   18f20:	str	r0, [r3]
   18f24:	movw	r1, #40604	; 0x9e9c
   18f28:	str	ip, [fp, #-40]	; 0xffffffd8
   18f2c:	movt	r1, #3
   18f30:	str	r1, [fp, #-244]	; 0xffffff0c
   18f34:	bls	18f60 <__printf_chk@plt+0x67f0>
   18f38:	mvn	r0, #0
   18f3c:	movw	r3, #31256	; 0x7a18
   18f40:	movt	r3, #3
   18f44:	str	r3, [r8]
   18f48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f4c:	ldr	r3, [r7]
   18f50:	cmp	r2, r3
   18f54:	bne	19210 <__printf_chk@plt+0x6aa0>
   18f58:	sub	sp, fp, #32
   18f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f60:	str	r3, [sp]
   18f64:	sub	r0, fp, #292	; 0x124
   18f68:	ldr	r4, [fp, #-312]	; 0xfffffec8
   18f6c:	mov	r3, r2
   18f70:	mov	r1, r6
   18f74:	mov	r2, r4
   18f78:	bl	18974 <__printf_chk@plt+0x6204>
   18f7c:	cmp	r0, #0
   18f80:	bne	19208 <__printf_chk@plt+0x6a98>
   18f84:	sub	r3, fp, #300	; 0x12c
   18f88:	mov	r1, r4
   18f8c:	sub	r2, fp, #304	; 0x130
   18f90:	mov	r0, r6
   18f94:	bl	174ac <__printf_chk@plt+0x4d3c>
   18f98:	subs	r4, r0, #0
   18f9c:	movwne	r3, #30356	; 0x7694
   18fa0:	mvnne	r0, #0
   18fa4:	movtne	r3, #3
   18fa8:	strne	r3, [r8]
   18fac:	bne	18f48 <__printf_chk@plt+0x67d8>
   18fb0:	movw	r2, #28140	; 0x6dec
   18fb4:	sub	r3, fp, #296	; 0x128
   18fb8:	movt	r2, #3
   18fbc:	ldr	r1, [fp, #-312]	; 0xfffffec8
   18fc0:	mov	r0, r6
   18fc4:	bl	30f4c <crc32@@Base+0x177a8>
   18fc8:	subs	r9, r0, #0
   18fcc:	beq	191f4 <__printf_chk@plt+0x6a84>
   18fd0:	ldr	ip, [fp, #-296]	; 0xfffffed8
   18fd4:	add	r5, r9, ip
   18fd8:	cmp	r9, r5
   18fdc:	bcs	191f4 <__printf_chk@plt+0x6a84>
   18fe0:	sub	r2, r9, #1
   18fe4:	sub	r0, r5, #1
   18fe8:	ldrb	r1, [r2, #1]!
   18fec:	cmp	r1, #0
   18ff0:	addeq	r4, r4, #1
   18ff4:	cmp	r0, r2
   18ff8:	bne	18fe8 <__printf_chk@plt+0x6878>
   18ffc:	cmp	r4, #0
   19000:	beq	191f4 <__printf_chk@plt+0x6a84>
   19004:	cmp	ip, #0
   19008:	ble	19028 <__printf_chk@plt+0x68b8>
   1900c:	ldrb	r2, [r5, #-1]
   19010:	cmp	r2, #0
   19014:	movwne	r3, #31376	; 0x7a90
   19018:	mvnne	r0, #0
   1901c:	movtne	r3, #3
   19020:	strne	r3, [r8]
   19024:	bne	18f48 <__printf_chk@plt+0x67d8>
   19028:	cmp	r4, #100	; 0x64
   1902c:	movwgt	r3, #31424	; 0x7ac0
   19030:	mvngt	r0, #0
   19034:	movtgt	r3, #3
   19038:	strgt	r3, [r8]
   1903c:	bgt	18f48 <__printf_chk@plt+0x67d8>
   19040:	lsl	r2, r4, #2
   19044:	str	sp, [fp, #-316]	; 0xfffffec4
   19048:	add	r2, r2, #10
   1904c:	bic	r2, r2, #7
   19050:	sub	sp, sp, r2
   19054:	add	sl, sp, #20
   19058:	add	r3, sp, #24
   1905c:	str	r3, [fp, #-320]	; 0xfffffec0
   19060:	str	r9, [sl, #4]!
   19064:	mov	r0, r9
   19068:	bl	125c0 <strlen@plt>
   1906c:	add	r0, r0, #1
   19070:	add	r9, r9, r0
   19074:	cmp	r5, r9
   19078:	bhi	19060 <__printf_chk@plt+0x68f0>
   1907c:	rsb	r3, r4, r4, lsl #3
   19080:	mov	r2, r4
   19084:	add	r4, r3, #19
   19088:	ldr	r1, [fp, #-320]	; 0xfffffec0
   1908c:	lsl	r3, r3, #3
   19090:	mov	lr, #200	; 0xc8
   19094:	add	r3, r3, #168	; 0xa8
   19098:	sub	r0, fp, #240	; 0xf0
   1909c:	sub	sp, sp, r3
   190a0:	mov	ip, #1
   190a4:	sub	r3, fp, #244	; 0xf4
   190a8:	add	r5, sp, #24
   190ac:	str	r0, [sp, #12]
   190b0:	mov	sl, #0
   190b4:	str	r4, [sp, #8]
   190b8:	mov	r0, r6
   190bc:	str	lr, [sp, #16]
   190c0:	str	ip, [sp]
   190c4:	str	r5, [sp, #4]
   190c8:	str	sl, [sp, #20]
   190cc:	bl	31be0 <crc32@@Base+0x1843c>
   190d0:	subs	r3, r0, #0
   190d4:	mov	r9, r3
   190d8:	blt	190f8 <__printf_chk@plt+0x6988>
   190dc:	bne	1910c <__printf_chk@plt+0x699c>
   190e0:	mvn	r0, #0
   190e4:	movw	r3, #31496	; 0x7b08
   190e8:	movt	r3, #3
   190ec:	str	r3, [r8]
   190f0:	ldr	sp, [fp, #-316]	; 0xfffffec4
   190f4:	b	18f48 <__printf_chk@plt+0x67d8>
   190f8:	movw	r3, #31464	; 0x7ae8
   190fc:	mvn	r0, #0
   19100:	movt	r3, #3
   19104:	str	r3, [r8]
   19108:	b	190f0 <__printf_chk@plt+0x6980>
   1910c:	cmp	r4, r3
   19110:	bgt	19128 <__printf_chk@plt+0x69b8>
   19114:	movw	r3, #31512	; 0x7b18
   19118:	mvn	r0, #0
   1911c:	movt	r3, #3
   19120:	str	r3, [r8]
   19124:	b	190f0 <__printf_chk@plt+0x6980>
   19128:	mov	r3, sl
   1912c:	ldr	r1, [fp, #-312]	; 0xfffffec8
   19130:	movw	r2, #28156	; 0x6dfc
   19134:	mov	r0, r6
   19138:	movt	r2, #3
   1913c:	bl	30f4c <crc32@@Base+0x177a8>
   19140:	cmp	r0, #0
   19144:	beq	19194 <__printf_chk@plt+0x6a24>
   19148:	ldr	r1, [r6, #12]
   1914c:	add	r2, r5, r9, lsl #3
   19150:	ubfx	lr, r1, #8, #8
   19154:	ubfx	ip, r1, #16, #8
   19158:	lsr	r3, r1, #24
   1915c:	orr	r3, r3, r1, lsl #24
   19160:	orr	r3, r3, lr, lsl #16
   19164:	orr	r3, r3, ip, lsl #8
   19168:	str	r3, [r5, r9, lsl #3]
   1916c:	ldr	r1, [r0, #4]
   19170:	add	r3, r9, #1
   19174:	ubfx	ip, r1, #8, #8
   19178:	mov	r9, r3
   1917c:	lsr	r3, r1, #24
   19180:	ubfx	r0, r1, #16, #8
   19184:	orr	r3, r3, r1, lsl #24
   19188:	orr	r3, r3, ip, lsl #16
   1918c:	orr	r3, r3, r0, lsl #8
   19190:	str	r3, [r2, #4]
   19194:	lsl	r3, r9, #3
   19198:	mov	r2, r9
   1919c:	add	r3, r3, #8
   191a0:	mov	r1, r5
   191a4:	sub	sp, sp, r3
   191a8:	mov	r0, r6
   191ac:	add	r4, sp, #24
   191b0:	mov	r3, r4
   191b4:	bl	18af4 <__printf_chk@plt+0x6384>
   191b8:	ldr	ip, [fp, #-264]	; 0xfffffef8
   191bc:	ldr	lr, [fp, #-300]	; 0xfffffed4
   191c0:	mov	r1, r4
   191c4:	ldr	r3, [fp, #-304]	; 0xfffffed0
   191c8:	mov	r2, r9
   191cc:	sub	r0, fp, #292	; 0x124
   191d0:	str	lr, [sp]
   191d4:	ldr	r4, [ip, #16]
   191d8:	blx	r4
   191dc:	cmp	r0, #0
   191e0:	movwne	r3, #31280	; 0x7a30
   191e4:	mvnne	r0, #0
   191e8:	movtne	r3, #3
   191ec:	strne	r3, [r8]
   191f0:	b	190f0 <__printf_chk@plt+0x6980>
   191f4:	movw	r3, #31344	; 0x7a70
   191f8:	mvn	r0, #0
   191fc:	movt	r3, #3
   19200:	str	r3, [r8]
   19204:	b	18f48 <__printf_chk@plt+0x67d8>
   19208:	mvn	r0, #0
   1920c:	b	18f48 <__printf_chk@plt+0x67d8>
   19210:	bl	12494 <__stack_chk_fail@plt>
   19214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19218:	movw	r3, #61168	; 0xeef0
   1921c:	sub	sp, sp, #36	; 0x24
   19220:	movt	r3, #4
   19224:	mov	r9, r2
   19228:	mov	r5, r0
   1922c:	str	r3, [sp, #20]
   19230:	mov	r0, r2
   19234:	ldr	r3, [r3]
   19238:	movw	r2, #29040	; 0x7170
   1923c:	str	r1, [sp, #12]
   19240:	movt	r2, #3
   19244:	mov	r1, #0
   19248:	str	r3, [sp, #28]
   1924c:	bl	30c1c <crc32@@Base+0x17478>
   19250:	subs	r1, r0, #0
   19254:	blt	19390 <__printf_chk@plt+0x6c20>
   19258:	mov	r0, r9
   1925c:	bl	2dac0 <crc32@@Base+0x1431c>
   19260:	subs	r6, r0, #0
   19264:	blt	19390 <__printf_chk@plt+0x6c20>
   19268:	movw	sl, #29628	; 0x73bc
   1926c:	movw	fp, #29260	; 0x724c
   19270:	movt	sl, #3
   19274:	movt	fp, #3
   19278:	movw	r3, #46108	; 0xb41c
   1927c:	movt	r3, #3
   19280:	str	r3, [sp, #16]
   19284:	mov	r3, #0
   19288:	mov	r2, sl
   1928c:	mov	r1, r6
   19290:	mov	r0, r9
   19294:	bl	30f4c <crc32@@Base+0x177a8>
   19298:	cmp	r0, #0
   1929c:	beq	1937c <__printf_chk@plt+0x6c0c>
   192a0:	mov	r1, fp
   192a4:	bl	1265c <strcmp@plt>
   192a8:	cmp	r0, #0
   192ac:	bne	1937c <__printf_chk@plt+0x6c0c>
   192b0:	ldr	r3, [sp, #16]
   192b4:	mov	r0, r5
   192b8:	ldr	r1, [sp, #12]
   192bc:	str	r3, [sp, #24]
   192c0:	bl	2dac0 <crc32@@Base+0x1431c>
   192c4:	subs	r4, r0, #0
   192c8:	blt	19338 <__printf_chk@plt+0x6bc8>
   192cc:	movw	r7, #29040	; 0x7170
   192d0:	movw	r8, #30516	; 0x7734
   192d4:	movt	r7, #3
   192d8:	movt	r8, #3
   192dc:	mov	r2, #0
   192e0:	mov	r1, r4
   192e4:	mov	r0, r5
   192e8:	bl	30c4c <crc32@@Base+0x174a8>
   192ec:	mov	r2, #9
   192f0:	mov	r1, r7
   192f4:	bl	1217c <strncmp@plt>
   192f8:	cmp	r0, #0
   192fc:	bne	19324 <__printf_chk@plt+0x6bb4>
   19300:	add	r3, sp, #24
   19304:	mov	r2, r6
   19308:	mov	r1, r4
   1930c:	mov	r0, r5
   19310:	bl	18ed8 <__printf_chk@plt+0x6768>
   19314:	cmp	r0, #0
   19318:	beq	19370 <__printf_chk@plt+0x6c00>
   1931c:	mov	r0, r8
   19320:	bl	1226c <puts@plt>
   19324:	mov	r1, r4
   19328:	mov	r0, r5
   1932c:	bl	2db20 <crc32@@Base+0x1437c>
   19330:	subs	r4, r0, #0
   19334:	bge	192dc <__printf_chk@plt+0x6b6c>
   19338:	cmn	r4, #8
   1933c:	cmnne	r4, #11
   19340:	beq	193b0 <__printf_chk@plt+0x6c40>
   19344:	mov	r1, r6
   19348:	mov	r2, #0
   1934c:	mov	r0, r9
   19350:	bl	30c4c <crc32@@Base+0x174a8>
   19354:	movw	r1, #31300	; 0x7a44
   19358:	movt	r1, #3
   1935c:	mov	r2, r0
   19360:	mov	r0, #1
   19364:	bl	12770 <__printf_chk@plt>
   19368:	mvn	r0, #0
   1936c:	b	19394 <__printf_chk@plt+0x6c24>
   19370:	movw	r0, #30512	; 0x7730
   19374:	movt	r0, #3
   19378:	bl	1226c <puts@plt>
   1937c:	mov	r1, r6
   19380:	mov	r0, r9
   19384:	bl	2db20 <crc32@@Base+0x1437c>
   19388:	subs	r6, r0, #0
   1938c:	bge	19284 <__printf_chk@plt+0x6b14>
   19390:	mov	r0, #0
   19394:	ldr	r3, [sp, #20]
   19398:	ldr	r2, [sp, #28]
   1939c:	ldr	r3, [r3]
   193a0:	cmp	r2, r3
   193a4:	bne	19400 <__printf_chk@plt+0x6c90>
   193a8:	add	sp, sp, #36	; 0x24
   193ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193b0:	mov	r1, r4
   193b4:	mov	r2, #0
   193b8:	mov	r0, r5
   193bc:	movw	r4, #30388	; 0x76b4
   193c0:	movt	r4, #3
   193c4:	str	r4, [sp, #24]
   193c8:	bl	30c4c <crc32@@Base+0x174a8>
   193cc:	ldr	r1, [sp, #12]
   193d0:	mov	r2, #0
   193d4:	mov	r7, r0
   193d8:	mov	r0, r5
   193dc:	bl	30c4c <crc32@@Base+0x174a8>
   193e0:	mov	r2, r4
   193e4:	mov	r3, r7
   193e8:	movw	r1, #31536	; 0x7b30
   193ec:	movt	r1, #3
   193f0:	str	r0, [sp]
   193f4:	mov	r0, #1
   193f8:	bl	12770 <__printf_chk@plt>
   193fc:	b	19344 <__printf_chk@plt+0x6bd4>
   19400:	bl	12494 <__stack_chk_fail@plt>
   19404:	movw	r3, #43348	; 0xa954
   19408:	movt	r3, #30
   1940c:	ldr	r2, [r3]
   19410:	b	19214 <__printf_chk@plt+0x6aa4>
   19414:	push	{r4, r5, r6, r7, r8, lr}
   19418:	mov	r6, r0
   1941c:	ldr	r7, [sp, #40]	; 0x28
   19420:	uxtb	r0, r3
   19424:	mov	r4, r1
   19428:	mov	r8, r2
   1942c:	ldr	r5, [sp, #32]
   19430:	str	r1, [r7]
   19434:	bl	1a428 <crc32@@Base+0xc84>
   19438:	cmp	r6, #0
   1943c:	mov	r3, r0
   19440:	bne	194dc <__printf_chk@plt+0x6d6c>
   19444:	cmp	r4, r8
   19448:	beq	194c0 <__printf_chk@plt+0x6d50>
   1944c:	movw	r2, #31752	; 0x7c08
   19450:	movw	r1, #31760	; 0x7c10
   19454:	movt	r2, #3
   19458:	movt	r1, #3
   1945c:	mov	r0, #1
   19460:	bl	12770 <__printf_chk@plt>
   19464:	ldr	r3, [sp, #36]	; 0x24
   19468:	cmp	r5, r3
   1946c:	bhi	19498 <__printf_chk@plt+0x6d28>
   19470:	mov	r2, r5
   19474:	ldrd	r0, [sp, #24]
   19478:	bl	12380 <memmove@plt>
   1947c:	add	r4, r4, r5
   19480:	movw	r0, #30920	; 0x78c8
   19484:	str	r4, [r7]
   19488:	movt	r0, #3
   1948c:	bl	1226c <puts@plt>
   19490:	mov	r0, #0
   19494:	pop	{r4, r5, r6, r7, r8, pc}
   19498:	mov	r0, r6
   1949c:	bl	1a4d0 <crc32@@Base+0xd2c>
   194a0:	movw	r0, #31676	; 0x7bbc
   194a4:	movt	r0, #3
   194a8:	bl	1226c <puts@plt>
   194ac:	movw	r0, #31724	; 0x7bec
   194b0:	movt	r0, #3
   194b4:	bl	1226c <puts@plt>
   194b8:	mvn	r0, #0
   194bc:	pop	{r4, r5, r6, r7, r8, pc}
   194c0:	movw	r2, #31776	; 0x7c20
   194c4:	movw	r1, #31760	; 0x7c10
   194c8:	movt	r2, #3
   194cc:	movt	r1, #3
   194d0:	mov	r0, #1
   194d4:	bl	12770 <__printf_chk@plt>
   194d8:	b	1947c <__printf_chk@plt+0x6d0c>
   194dc:	mov	r2, r0
   194e0:	movw	r1, #31612	; 0x7b7c
   194e4:	mov	r0, #1
   194e8:	movt	r1, #3
   194ec:	bl	12770 <__printf_chk@plt>
   194f0:	mov	r2, r6
   194f4:	movw	r1, #31640	; 0x7b98
   194f8:	mov	r0, #1
   194fc:	movt	r1, #3
   19500:	bl	12770 <__printf_chk@plt>
   19504:	mvn	r0, #2
   19508:	pop	{r4, r5, r6, r7, r8, pc}
   1950c:	b	12380 <memmove@plt>
   19510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19514:	movw	r8, #61168	; 0xeef0
   19518:	movt	r8, #4
   1951c:	movw	r3, #31804	; 0x7c3c
   19520:	sub	sp, sp, #204	; 0xcc
   19524:	mov	r2, r3
   19528:	ldr	r3, [r8]
   1952c:	mov	r4, #0
   19530:	movw	r7, #31608	; 0x7b78
   19534:	add	sl, sp, #56	; 0x38
   19538:	movt	r7, #3
   1953c:	mov	r5, r0
   19540:	mov	r6, r4
   19544:	mov	r9, #2
   19548:	movt	r2, #3
   1954c:	str	r3, [sp, #196]	; 0xc4
   19550:	str	r2, [sp, #32]
   19554:	movw	r2, #31780	; 0x7c24
   19558:	str	r8, [sp, #28]
   1955c:	movt	r2, #3
   19560:	str	r2, [sp, #36]	; 0x24
   19564:	mov	fp, #0
   19568:	mov	r2, #132	; 0x84
   1956c:	mov	r1, fp
   19570:	add	r0, sp, #64	; 0x40
   19574:	str	fp, [sp, #48]	; 0x30
   19578:	bl	122e4 <memset@plt>
   1957c:	mvn	ip, #0
   19580:	add	r1, sp, #52	; 0x34
   19584:	str	r9, [sp, #4]
   19588:	mov	r2, fp
   1958c:	str	r1, [sp, #16]
   19590:	add	r3, sp, #48	; 0x30
   19594:	str	ip, [sp, #8]
   19598:	mov	r1, r5
   1959c:	str	fp, [sp, #12]
   195a0:	add	r0, sp, #64	; 0x40
   195a4:	str	fp, [sp]
   195a8:	mov	ip, #1
   195ac:	str	sl, [sp, #20]
   195b0:	str	ip, [sp, #188]	; 0xbc
   195b4:	bl	18184 <__printf_chk@plt+0x5a14>
   195b8:	subs	r9, r0, #0
   195bc:	blt	19660 <__printf_chk@plt+0x6ef0>
   195c0:	add	r2, sp, #46	; 0x2e
   195c4:	mov	r1, r9
   195c8:	mov	r0, r5
   195cc:	bl	16830 <__printf_chk@plt+0x40c0>
   195d0:	cmp	r0, fp
   195d4:	bne	1969c <__printf_chk@plt+0x6f2c>
   195d8:	mov	r1, r9
   195dc:	add	r2, sp, #47	; 0x2f
   195e0:	mov	r0, r5
   195e4:	bl	16898 <__printf_chk@plt+0x4128>
   195e8:	subs	r8, r0, #0
   195ec:	bne	196b4 <__printf_chk@plt+0x6f44>
   195f0:	ldr	r9, [sp, #56]	; 0x38
   195f4:	add	r0, r9, #262144	; 0x40000
   195f8:	lsl	r0, r0, #2
   195fc:	bl	125a8 <malloc@plt>
   19600:	ldr	ip, [sp, #52]	; 0x34
   19604:	add	lr, sp, #60	; 0x3c
   19608:	mov	r1, r8
   1960c:	ldrb	r3, [sp, #46]	; 0x2e
   19610:	mov	r2, ip
   19614:	str	r9, [sp, #8]
   19618:	str	lr, [sp, #16]
   1961c:	mov	fp, r0
   19620:	ldrb	r0, [sp, #47]	; 0x2f
   19624:	stm	sp, {fp, ip}
   19628:	mov	ip, #8388608	; 0x800000
   1962c:	str	ip, [sp, #12]
   19630:	bl	19414 <__printf_chk@plt+0x6ca4>
   19634:	mov	r9, r0
   19638:	mov	r0, fp
   1963c:	bl	12128 <free@plt>
   19640:	cmp	r9, #0
   19644:	cmnne	r9, #3
   19648:	bne	19660 <__printf_chk@plt+0x6ef0>
   1964c:	add	r4, r4, #1
   19650:	cmp	r4, #3
   19654:	beq	1967c <__printf_chk@plt+0x6f0c>
   19658:	ldrb	r9, [r4, r7]
   1965c:	b	19564 <__printf_chk@plt+0x6df4>
   19660:	cmp	r6, #0
   19664:	bne	1964c <__printf_chk@plt+0x6edc>
   19668:	cmn	r9, #2
   1966c:	add	r4, r4, #1
   19670:	movne	r6, r9
   19674:	cmp	r4, #3
   19678:	bne	19658 <__printf_chk@plt+0x6ee8>
   1967c:	ldr	r8, [sp, #28]
   19680:	mov	r0, r6
   19684:	ldr	r2, [sp, #196]	; 0xc4
   19688:	ldr	r3, [r8]
   1968c:	cmp	r2, r3
   19690:	bne	196c8 <__printf_chk@plt+0x6f58>
   19694:	add	sp, sp, #204	; 0xcc
   19698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1969c:	ldr	r0, [sp, #36]	; 0x24
   196a0:	bl	1226c <puts@plt>
   196a4:	cmp	r6, fp
   196a8:	bne	1964c <__printf_chk@plt+0x6edc>
   196ac:	mvn	r6, #21
   196b0:	b	1964c <__printf_chk@plt+0x6edc>
   196b4:	ldr	r0, [sp, #32]
   196b8:	bl	1226c <puts@plt>
   196bc:	cmp	r6, #0
   196c0:	beq	196ac <__printf_chk@plt+0x6f3c>
   196c4:	b	1964c <__printf_chk@plt+0x6edc>
   196c8:	bl	12494 <__stack_chk_fail@plt>
   196cc:	tst	r1, #3
   196d0:	beq	19708 <__printf_chk@plt+0x6f98>
   196d4:	cmp	r2, #0
   196d8:	bxeq	lr
   196dc:	movw	r3, #31836	; 0x7c5c
   196e0:	movt	r3, #3
   196e4:	ldrb	ip, [r1], #1
   196e8:	subs	r2, r2, #1
   196ec:	eor	ip, ip, r0
   196f0:	uxtb	ip, ip
   196f4:	ldr	ip, [r3, ip, lsl #2]
   196f8:	eor	r0, ip, r0, lsr #8
   196fc:	bxeq	lr
   19700:	tst	r1, #3
   19704:	bne	196e4 <__printf_chk@plt+0x6f74>
   19708:	lsrs	ip, r2, #2
   1970c:	and	r2, r2, #3
   19710:	push	{lr}		; (str lr, [sp, #-4]!)
   19714:	sub	lr, r1, #4
   19718:	beq	1976c <__printf_chk@plt+0x6ffc>
   1971c:	sub	ip, ip, #-1073741823	; 0xc0000001
   19720:	movw	r3, #31836	; 0x7c5c
   19724:	movt	r3, #3
   19728:	add	r1, r1, ip, lsl #2
   1972c:	ldr	ip, [lr, #4]!
   19730:	eor	r0, r0, ip
   19734:	cmp	lr, r1
   19738:	uxtb	ip, r0
   1973c:	ldr	ip, [r3, ip, lsl #2]
   19740:	eor	ip, ip, r0, lsr #8
   19744:	uxtb	r0, ip
   19748:	ldr	r0, [r3, r0, lsl #2]
   1974c:	eor	ip, r0, ip, lsr #8
   19750:	uxtb	r0, ip
   19754:	ldr	r0, [r3, r0, lsl #2]
   19758:	eor	r0, r0, ip, lsr #8
   1975c:	uxtb	ip, r0
   19760:	ldr	ip, [r3, ip, lsl #2]
   19764:	eor	r0, ip, r0, lsr #8
   19768:	bne	1972c <__printf_chk@plt+0x6fbc>
   1976c:	cmp	r2, #0
   19770:	popeq	{pc}		; (ldreq pc, [sp], #4)
   19774:	add	r1, lr, #3
   19778:	movw	r3, #31836	; 0x7c5c
   1977c:	add	lr, r1, r2
   19780:	movt	r3, #3
   19784:	ldrb	r2, [r1, #1]!
   19788:	eor	r2, r2, r0
   1978c:	cmp	r1, lr
   19790:	uxtb	r2, r2
   19794:	ldr	ip, [r3, r2, lsl #2]
   19798:	eor	r0, ip, r0, lsr #8
   1979c:	bne	19784 <__printf_chk@plt+0x7014>
   197a0:	pop	{pc}		; (ldr pc, [sp], #4)

000197a4 <crc32@@Base>:
   197a4:	push	{r4, lr}
   197a8:	mvn	r0, r0
   197ac:	bl	196cc <__printf_chk@plt+0x6f5c>
   197b0:	mvn	r0, r0
   197b4:	pop	{r4, pc}
   197b8:	push	{r4, lr}
   197bc:	mvn	r0, r0
   197c0:	bl	196cc <__printf_chk@plt+0x6f5c>
   197c4:	mvn	r0, r0
   197c8:	pop	{r4, pc}
   197cc:	push	{r4, lr}
   197d0:	mov	r4, r2
   197d4:	mov	r2, r1
   197d8:	mov	r1, r0
   197dc:	mvn	r0, #0
   197e0:	bl	196cc <__printf_chk@plt+0x6f5c>
   197e4:	mvn	r0, r0
   197e8:	rev	r0, r0
   197ec:	str	r0, [r4]
   197f0:	pop	{r4, pc}
   197f4:	sub	r0, r0, #1
   197f8:	uxtb	r0, r0
   197fc:	cmp	r0, #31
   19800:	movwls	r3, #8319	; 0x207f
   19804:	movtls	r3, #32768	; 0x8000
   19808:	mvnls	r0, r3, lsr r0
   1980c:	andls	r0, r0, #1
   19810:	movhi	r0, #1
   19814:	bx	lr
   19818:	ldr	r2, [r0]
   1981c:	ldr	r3, [r0, #8]
   19820:	cmp	r2, #0
   19824:	beq	19848 <crc32@@Base+0xa4>
   19828:	cmp	r3, #0
   1982c:	movne	r3, #1
   19830:	bne	19840 <crc32@@Base+0x9c>
   19834:	ldr	r3, [r0, #16]
   19838:	adds	r3, r3, #0
   1983c:	movne	r3, #1
   19840:	mov	r0, r3
   19844:	bx	lr
   19848:	cmp	r3, #0
   1984c:	ldr	r2, [r0, #16]
   19850:	beq	19840 <crc32@@Base+0x9c>
   19854:	adds	r3, r2, #0
   19858:	movne	r3, #1
   1985c:	mov	r0, r3
   19860:	bx	lr
   19864:	push	{r4, r5, r6, r7, r8, lr}
   19868:	movw	r5, #61168	; 0xeef0
   1986c:	movt	r5, #4
   19870:	ldrb	r2, [r0, #30]
   19874:	sub	sp, sp, #24
   19878:	mov	r4, r0
   1987c:	ldr	r3, [r5]
   19880:	cmp	r2, #4
   19884:	mov	r6, r1
   19888:	str	r3, [sp, #20]
   1988c:	beq	198c4 <crc32@@Base+0x120>
   19890:	ldr	r2, [r0, #12]
   19894:	add	r1, r0, #64	; 0x40
   19898:	str	r1, [sp, #12]
   1989c:	rev	r2, r2
   198a0:	str	r2, [sp, #16]
   198a4:	ldr	r0, [r6, #84]	; 0x54
   198a8:	bl	1a8c4 <crc32@@Base+0x1120>
   198ac:	ldr	r2, [sp, #20]
   198b0:	ldr	r3, [r5]
   198b4:	cmp	r2, r3
   198b8:	bne	1992c <crc32@@Base+0x188>
   198bc:	add	sp, sp, #24
   198c0:	pop	{r4, r5, r6, r7, r8, pc}
   198c4:	ldr	r7, [r1, #20]
   198c8:	bl	19ca8 <crc32@@Base+0x504>
   198cc:	add	r2, sp, #12
   198d0:	add	r3, sp, #16
   198d4:	mov	r1, r7
   198d8:	mov	r8, r0
   198dc:	mov	r0, r4
   198e0:	bl	19cd8 <crc32@@Base+0x534>
   198e4:	ldr	r2, [sp, #16]
   198e8:	cmp	r2, #0
   198ec:	cmpne	r7, r8
   198f0:	ldrcc	r1, [sp, #12]
   198f4:	bcc	198a4 <crc32@@Base+0x100>
   198f8:	ldr	ip, [r6, #76]	; 0x4c
   198fc:	movw	r1, #65044	; 0xfe14
   19900:	movt	r1, #4
   19904:	ldr	r3, [r6, #80]	; 0x50
   19908:	movw	r2, #32860	; 0x805c
   1990c:	movt	r2, #3
   19910:	ldr	r0, [r1]
   19914:	mov	r1, #1
   19918:	str	r7, [sp]
   1991c:	str	ip, [sp, #4]
   19920:	bl	122b4 <__fprintf_chk@plt>
   19924:	mvn	r0, #0
   19928:	b	198ac <crc32@@Base+0x108>
   1992c:	bl	12494 <__stack_chk_fail@plt>
   19930:	ldr	r2, [r1, #44]	; 0x2c
   19934:	push	{r4, r5, r6, r7, r8, lr}
   19938:	sub	r2, r2, #64	; 0x40
   1993c:	mov	r4, r0
   19940:	mov	r7, r1
   19944:	add	r1, r0, #64	; 0x40
   19948:	mov	r0, #0
   1994c:	mov	r5, r3
   19950:	bl	197a4 <crc32@@Base>
   19954:	ldr	r1, [r7, #64]	; 0x40
   19958:	mov	r6, r0
   1995c:	ldr	r0, [r5, #80]	; 0x50
   19960:	bl	1aa98 <crc32@@Base+0x12f4>
   19964:	ldr	r3, [r5, #44]	; 0x2c
   19968:	ldr	ip, [r5, #36]	; 0x24
   1996c:	rev	r6, r6
   19970:	cmp	r3, #32
   19974:	ldr	r3, [r7, #44]	; 0x2c
   19978:	ldr	r2, [r5, #60]	; 0x3c
   1997c:	addeq	r3, r3, #8064	; 0x1f80
   19980:	subne	r3, r3, #64	; 0x40
   19984:	addeq	r3, r3, #32
   19988:	cmp	ip, #26
   1998c:	ldr	r1, [r5, #56]	; 0x38
   19990:	rev	r3, r3
   19994:	ldreq	r2, [r4, #80]	; 0x50
   19998:	str	r3, [r4, #12]
   1999c:	movw	r3, #1319	; 0x527
   199a0:	subeq	r1, r2, #28
   199a4:	str	r6, [r4, #24]
   199a8:	rev	r1, r1
   199ac:	rev	r2, r2
   199b0:	str	r1, [r4, #16]
   199b4:	movt	r3, #22041	; 0x5619
   199b8:	str	r2, [r4, #20]
   199bc:	mov	r2, #32
   199c0:	str	r3, [r4]
   199c4:	rev	r0, r0
   199c8:	str	r0, [r4, #8]
   199cc:	ldr	r3, [r5, #36]	; 0x24
   199d0:	add	r0, r4, r2
   199d4:	strb	r3, [r4, #28]
   199d8:	ldr	r3, [r5, #40]	; 0x28
   199dc:	strb	r3, [r4, #29]
   199e0:	ldr	r3, [r5, #44]	; 0x2c
   199e4:	strb	r3, [r4, #30]
   199e8:	ldr	r3, [r5, #48]	; 0x30
   199ec:	strb	r3, [r4, #31]
   199f0:	ldr	r1, [r5, #64]	; 0x40
   199f4:	bl	126bc <strncpy@plt>
   199f8:	mov	r2, #64	; 0x40
   199fc:	mov	r1, r4
   19a00:	mov	r0, #0
   19a04:	bl	197a4 <crc32@@Base>
   19a08:	rev	r0, r0
   19a0c:	str	r0, [r4, #4]
   19a10:	pop	{r4, r5, r6, r7, r8, pc}
   19a14:	push	{r4, r5, r6, r7, r8, lr}
   19a18:	movw	r5, #61168	; 0xeef0
   19a1c:	movt	r5, #4
   19a20:	sub	sp, sp, #72	; 0x48
   19a24:	add	r6, r0, #64	; 0x40
   19a28:	add	lr, sp, #4
   19a2c:	ldr	r3, [r5]
   19a30:	mov	r4, r0
   19a34:	mov	r8, r1
   19a38:	str	r3, [sp, #68]	; 0x44
   19a3c:	ldr	r0, [r4]
   19a40:	add	r4, r4, #16
   19a44:	ldr	r1, [r4, #-12]
   19a48:	mov	ip, lr
   19a4c:	ldr	r2, [r4, #-8]
   19a50:	add	lr, lr, #16
   19a54:	ldr	r3, [r4, #-4]
   19a58:	cmp	r4, r6
   19a5c:	stmia	ip!, {r0, r1, r2, r3}
   19a60:	bne	19a3c <crc32@@Base+0x298>
   19a64:	ldr	r2, [sp, #4]
   19a68:	movw	r3, #1319	; 0x527
   19a6c:	movt	r3, #22041	; 0x5619
   19a70:	cmp	r2, r3
   19a74:	bne	19adc <crc32@@Base+0x338>
   19a78:	mov	r7, #0
   19a7c:	add	r1, sp, #4
   19a80:	mov	r0, r7
   19a84:	mov	r2, #64	; 0x40
   19a88:	ldr	r6, [sp, #8]
   19a8c:	str	r7, [sp, #8]
   19a90:	bl	197a4 <crc32@@Base>
   19a94:	rev	r6, r6
   19a98:	cmp	r6, r0
   19a9c:	bne	19ae4 <crc32@@Base+0x340>
   19aa0:	ldr	r3, [sp, #28]
   19aa4:	mov	r1, r4
   19aa8:	sub	r2, r8, #64	; 0x40
   19aac:	mov	r0, r7
   19ab0:	rev	r4, r3
   19ab4:	bl	197a4 <crc32@@Base>
   19ab8:	cmp	r4, r0
   19abc:	moveq	r0, r7
   19ac0:	mvnne	r0, #10
   19ac4:	ldr	r2, [sp, #68]	; 0x44
   19ac8:	ldr	r3, [r5]
   19acc:	cmp	r2, r3
   19ad0:	bne	19aec <crc32@@Base+0x348>
   19ad4:	add	sp, sp, #72	; 0x48
   19ad8:	pop	{r4, r5, r6, r7, r8, pc}
   19adc:	mvn	r0, #8
   19ae0:	b	19ac4 <crc32@@Base+0x320>
   19ae4:	mvn	r0, #6
   19ae8:	b	19ac4 <crc32@@Base+0x320>
   19aec:	bl	12494 <__stack_chk_fail@plt>
   19af0:	push	{r4, r5, lr}
   19af4:	movw	r4, #61168	; 0xeef0
   19af8:	movt	r4, #4
   19afc:	sub	sp, sp, #12
   19b00:	mov	r5, r3
   19b04:	ldr	ip, [r4]
   19b08:	mov	r3, sp
   19b0c:	str	ip, [sp, #4]
   19b10:	bl	30f4c <crc32@@Base+0x177a8>
   19b14:	cmp	r0, #0
   19b18:	beq	19b44 <crc32@@Base+0x3a0>
   19b1c:	ldr	r3, [sp]
   19b20:	cmp	r3, #3
   19b24:	bls	19b44 <crc32@@Base+0x3a0>
   19b28:	ldr	r3, [r0]
   19b2c:	ubfx	r1, r3, #8, #8
   19b30:	ubfx	r2, r3, #16, #8
   19b34:	lsr	r5, r3, #24
   19b38:	orr	r5, r5, r3, lsl #24
   19b3c:	orr	r5, r5, r1, lsl #16
   19b40:	orr	r5, r5, r2, lsl #8
   19b44:	ldr	r2, [sp, #4]
   19b48:	mov	r0, r5
   19b4c:	ldr	r3, [r4]
   19b50:	cmp	r2, r3
   19b54:	bne	19b60 <crc32@@Base+0x3bc>
   19b58:	add	sp, sp, #12
   19b5c:	pop	{r4, r5, pc}
   19b60:	bl	12494 <__stack_chk_fail@plt>
   19b64:	push	{r4, r5, lr}
   19b68:	movw	r4, #61168	; 0xeef0
   19b6c:	movt	r4, #4
   19b70:	sub	sp, sp, #12
   19b74:	mov	r5, r3
   19b78:	ldr	ip, [r4]
   19b7c:	mov	r3, sp
   19b80:	str	ip, [sp, #4]
   19b84:	bl	30f4c <crc32@@Base+0x177a8>
   19b88:	cmp	r0, #0
   19b8c:	beq	19bb8 <crc32@@Base+0x414>
   19b90:	ldr	r3, [sp]
   19b94:	cmp	r3, #3
   19b98:	bls	19bb8 <crc32@@Base+0x414>
   19b9c:	ldr	r3, [r0]
   19ba0:	ubfx	r1, r3, #8, #8
   19ba4:	ubfx	r2, r3, #16, #8
   19ba8:	lsr	r5, r3, #24
   19bac:	orr	r5, r5, r3, lsl #24
   19bb0:	orr	r5, r5, r1, lsl #16
   19bb4:	orr	r5, r5, r2, lsl #8
   19bb8:	ldr	r2, [sp, #4]
   19bbc:	mov	r0, r5
   19bc0:	ldr	r3, [r4]
   19bc4:	cmp	r2, r3
   19bc8:	bne	19bd4 <crc32@@Base+0x430>
   19bcc:	add	sp, sp, #12
   19bd0:	pop	{r4, r5, pc}
   19bd4:	bl	12494 <__stack_chk_fail@plt>
   19bd8:	push	{r4, r5, r6, r7, lr}
   19bdc:	movw	r4, #61168	; 0xeef0
   19be0:	movt	r4, #4
   19be4:	sub	sp, sp, #76	; 0x4c
   19be8:	add	r7, r0, #64	; 0x40
   19bec:	add	r5, sp, #4
   19bf0:	ldr	r3, [r4]
   19bf4:	mov	r6, r0
   19bf8:	mov	ip, r0
   19bfc:	str	r3, [sp, #68]	; 0x44
   19c00:	ldr	r0, [ip]
   19c04:	add	ip, ip, #16
   19c08:	ldr	r1, [ip, #-12]
   19c0c:	mov	lr, r5
   19c10:	ldr	r2, [ip, #-8]
   19c14:	add	r5, r5, #16
   19c18:	ldr	r3, [ip, #-4]
   19c1c:	cmp	ip, r7
   19c20:	stmia	lr!, {r0, r1, r2, r3}
   19c24:	bne	19c00 <crc32@@Base+0x45c>
   19c28:	mov	r3, #0
   19c2c:	add	r1, sp, #4
   19c30:	mov	r0, r3
   19c34:	mov	r2, #64	; 0x40
   19c38:	str	r3, [sp, #8]
   19c3c:	bl	197a4 <crc32@@Base>
   19c40:	ldr	r3, [r6, #4]
   19c44:	ldr	r1, [sp, #68]	; 0x44
   19c48:	rev	r3, r3
   19c4c:	ldr	r2, [r4]
   19c50:	cmp	r1, r2
   19c54:	sub	r0, r0, r3
   19c58:	clz	r0, r0
   19c5c:	lsr	r0, r0, #5
   19c60:	bne	19c6c <crc32@@Base+0x4c8>
   19c64:	add	sp, sp, #76	; 0x4c
   19c68:	pop	{r4, r5, r6, r7, pc}
   19c6c:	bl	12494 <__stack_chk_fail@plt>
   19c70:	ldr	r2, [r0, #12]
   19c74:	add	r1, r0, #64	; 0x40
   19c78:	push	{r4, lr}
   19c7c:	mov	r3, #65536	; 0x10000
   19c80:	mov	r4, r0
   19c84:	rev	r2, r2
   19c88:	mov	r0, #0
   19c8c:	bl	197b8 <crc32@@Base+0x14>
   19c90:	ldr	r3, [r4, #24]
   19c94:	rev	r3, r3
   19c98:	sub	r0, r0, r3
   19c9c:	clz	r0, r0
   19ca0:	lsr	r0, r0, #5
   19ca4:	pop	{r4, pc}
   19ca8:	ldr	r3, [r0, #64]	; 0x40
   19cac:	cmp	r3, #0
   19cb0:	beq	19cd0 <crc32@@Base+0x52c>
   19cb4:	add	r3, r0, #68	; 0x44
   19cb8:	mov	r0, #0
   19cbc:	ldr	r2, [r3], #4
   19cc0:	add	r0, r0, #1
   19cc4:	cmp	r2, #0
   19cc8:	bne	19cbc <crc32@@Base+0x518>
   19ccc:	bx	lr
   19cd0:	mov	r0, r3
   19cd4:	bx	lr
   19cd8:	ldr	ip, [r0, #64]	; 0x40
   19cdc:	cmp	ip, #0
   19ce0:	beq	19d7c <crc32@@Base+0x5d8>
   19ce4:	push	{r4, r5, r6, r7, r8, lr}
   19ce8:	add	r7, r0, #68	; 0x44
   19cec:	add	r8, r0, #64	; 0x40
   19cf0:	mov	r4, #0
   19cf4:	mov	r5, r7
   19cf8:	b	19d00 <crc32@@Base+0x55c>
   19cfc:	mov	r4, r6
   19d00:	ldr	lr, [r5], #4
   19d04:	add	r6, r4, #1
   19d08:	cmp	lr, #0
   19d0c:	bne	19cfc <crc32@@Base+0x558>
   19d10:	cmp	r1, r6
   19d14:	bcs	19d6c <crc32@@Base+0x5c8>
   19d18:	ldr	r5, [r8, r1, lsl #2]
   19d1c:	add	r4, r4, #2
   19d20:	cmp	r1, #0
   19d24:	lsl	r1, r1, #2
   19d28:	rev	r5, r5
   19d2c:	add	r4, r8, r4, lsl #2
   19d30:	str	r5, [r3]
   19d34:	beq	19d64 <crc32@@Base+0x5c0>
   19d38:	add	r1, r1, #64	; 0x40
   19d3c:	add	r0, r0, r1
   19d40:	b	19d48 <crc32@@Base+0x5a4>
   19d44:	ldr	ip, [r7], #4
   19d48:	rev	ip, ip
   19d4c:	cmp	r7, r0
   19d50:	add	ip, ip, #3
   19d54:	bic	ip, ip, #3
   19d58:	add	lr, lr, ip
   19d5c:	bne	19d44 <crc32@@Base+0x5a0>
   19d60:	add	r4, r4, lr
   19d64:	str	r4, [r2]
   19d68:	pop	{r4, r5, r6, r7, r8, pc}
   19d6c:	mov	r1, #0
   19d70:	str	r1, [r3]
   19d74:	str	r1, [r2]
   19d78:	pop	{r4, r5, r6, r7, r8, pc}
   19d7c:	mov	r1, #0
   19d80:	str	r1, [r3]
   19d84:	str	r1, [r2]
   19d88:	bx	lr
   19d8c:	mov	r2, r0
   19d90:	vldr	d5, [pc, #64]	; 19dd8 <crc32@@Base+0x634>
   19d94:	push	{lr}		; (str lr, [sp, #-4]!)
   19d98:	sub	sp, sp, #28
   19d9c:	vmov	s15, r2
   19da0:	movw	r1, #34156	; 0x856c
   19da4:	vldr	d6, [pc, #52]	; 19de0 <crc32@@Base+0x63c>
   19da8:	movt	r1, #3
   19dac:	str	r0, [sp, #20]
   19db0:	mov	r0, #1
   19db4:	vcvt.f64.u32	d7, s15
   19db8:	vmul.f64	d6, d7, d6
   19dbc:	vmul.f64	d7, d7, d5
   19dc0:	vstr	d6, [sp, #8]
   19dc4:	vstr	d7, [sp]
   19dc8:	bl	12770 <__printf_chk@plt>
   19dcc:	add	sp, sp, #28
   19dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   19dd4:	nop	{0}
   19dd8:	andeq	r0, r0, r0
   19ddc:	svccc	0x00500000
   19de0:	andeq	r0, r0, r0
   19de4:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   19de8:	push	{lr}		; (str lr, [sp, #-4]!)
   19dec:	sub	sp, sp, #12
   19df0:	add	r3, sp, #8
   19df4:	str	r0, [r3, #-4]!
   19df8:	mov	r0, r3
   19dfc:	bl	1238c <ctime@plt>
   19e00:	movw	r1, #55508	; 0xd8d4
   19e04:	movt	r1, #3
   19e08:	mov	r2, r0
   19e0c:	mov	r0, #1
   19e10:	bl	12770 <__printf_chk@plt>
   19e14:	add	sp, sp, #12
   19e18:	pop	{pc}		; (ldr pc, [sp], #4)
   19e1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19e20:	movw	r5, #61168	; 0xeef0
   19e24:	movt	r5, #4
   19e28:	sub	sp, sp, #24
   19e2c:	mov	r4, r0
   19e30:	add	r3, r0, #32
   19e34:	ldr	ip, [r5]
   19e38:	movw	r2, #46108	; 0xb41c
   19e3c:	str	r3, [sp]
   19e40:	movt	r2, #3
   19e44:	mov	r3, #32
   19e48:	movw	r1, #34324	; 0x8614
   19e4c:	mov	r0, #1
   19e50:	movt	r1, #3
   19e54:	str	ip, [sp, #20]
   19e58:	bl	12770 <__printf_chk@plt>
   19e5c:	movw	r2, #46108	; 0xb41c
   19e60:	movw	r1, #34348	; 0x862c
   19e64:	movt	r2, #3
   19e68:	movt	r1, #3
   19e6c:	mov	r0, #1
   19e70:	bl	12770 <__printf_chk@plt>
   19e74:	ldr	r0, [r4, #8]
   19e78:	rev	r0, r0
   19e7c:	bl	19de8 <crc32@@Base+0x644>
   19e80:	movw	r2, #46108	; 0xb41c
   19e84:	movw	r1, #34368	; 0x8640
   19e88:	movt	r2, #3
   19e8c:	movt	r1, #3
   19e90:	mov	r0, #1
   19e94:	bl	12770 <__printf_chk@plt>
   19e98:	ldrb	r0, [r4, #28]
   19e9c:	cmp	r0, #0
   19ea0:	beq	1a1c0 <crc32@@Base+0xa1c>
   19ea4:	movw	r1, #32920	; 0x8098
   19ea8:	mov	r3, #25
   19eac:	movt	r1, #3
   19eb0:	b	19ec4 <crc32@@Base+0x720>
   19eb4:	cmp	r3, r0
   19eb8:	beq	1a168 <crc32@@Base+0x9c4>
   19ebc:	ldr	r3, [r2, #12]
   19ec0:	mov	r1, r2
   19ec4:	cmp	r3, #0
   19ec8:	add	r2, r1, #12
   19ecc:	bge	19eb4 <crc32@@Base+0x710>
   19ed0:	movw	r3, #34188	; 0x858c
   19ed4:	movt	r3, #3
   19ed8:	ldrb	ip, [r4, #29]
   19edc:	cmp	ip, #0
   19ee0:	beq	1a1b4 <crc32@@Base+0xa10>
   19ee4:	mov	r2, #1
   19ee8:	ldr	r0, [pc, #736]	; 1a1d0 <crc32@@Base+0xa2c>
   19eec:	b	19f00 <crc32@@Base+0x75c>
   19ef0:	cmp	r2, ip
   19ef4:	beq	1a170 <crc32@@Base+0x9cc>
   19ef8:	ldr	r2, [r1, #12]
   19efc:	mov	r0, r1
   19f00:	cmp	r2, #0
   19f04:	add	r1, r0, #12
   19f08:	bge	19ef0 <crc32@@Base+0x74c>
   19f0c:	movw	r2, #34200	; 0x8598
   19f10:	movt	r2, #3
   19f14:	ldrb	lr, [r4, #30]
   19f18:	cmp	lr, #13
   19f1c:	beq	1a1a8 <crc32@@Base+0xa04>
   19f20:	mov	r1, #7
   19f24:	ldr	ip, [pc, #680]	; 1a1d4 <crc32@@Base+0xa30>
   19f28:	b	19f3c <crc32@@Base+0x798>
   19f2c:	cmp	lr, r1
   19f30:	beq	1a178 <crc32@@Base+0x9d4>
   19f34:	ldr	r1, [r0, #12]
   19f38:	mov	ip, r0
   19f3c:	cmp	r1, #0
   19f40:	add	r0, ip, #12
   19f44:	bge	19f2c <crc32@@Base+0x788>
   19f48:	movw	r6, #34224	; 0x85b0
   19f4c:	movt	r6, #3
   19f50:	ldrb	lr, [r4, #31]
   19f54:	cmp	lr, #0
   19f58:	beq	1a19c <crc32@@Base+0x9f8>
   19f5c:	mov	r1, #2
   19f60:	ldr	ip, [pc, #624]	; 1a1d8 <crc32@@Base+0xa34>
   19f64:	b	19f78 <crc32@@Base+0x7d4>
   19f68:	cmp	lr, r1
   19f6c:	beq	1a160 <crc32@@Base+0x9bc>
   19f70:	ldr	r1, [r0, #12]
   19f74:	mov	ip, r0
   19f78:	cmp	r1, #0
   19f7c:	add	r0, ip, #12
   19f80:	bge	19f68 <crc32@@Base+0x7c4>
   19f84:	movw	r1, #34240	; 0x85c0
   19f88:	movt	r1, #3
   19f8c:	str	r1, [sp, #4]
   19f90:	mov	r0, #1
   19f94:	str	r6, [sp]
   19f98:	movw	r1, #34388	; 0x8654
   19f9c:	movt	r1, #3
   19fa0:	bl	12770 <__printf_chk@plt>
   19fa4:	movw	r2, #46108	; 0xb41c
   19fa8:	movw	r1, #34404	; 0x8664
   19fac:	movt	r2, #3
   19fb0:	movt	r1, #3
   19fb4:	mov	r0, #1
   19fb8:	bl	12770 <__printf_chk@plt>
   19fbc:	ldr	r0, [r4, #12]
   19fc0:	rev	r0, r0
   19fc4:	bl	19d8c <crc32@@Base+0x5e8>
   19fc8:	ldr	r3, [r4, #16]
   19fcc:	movw	r2, #46108	; 0xb41c
   19fd0:	movw	r1, #34424	; 0x8678
   19fd4:	rev	r3, r3
   19fd8:	movt	r2, #3
   19fdc:	movt	r1, #3
   19fe0:	mov	r0, #1
   19fe4:	bl	12770 <__printf_chk@plt>
   19fe8:	ldr	r3, [r4, #20]
   19fec:	movw	r2, #46108	; 0xb41c
   19ff0:	movw	r1, #34448	; 0x8690
   19ff4:	rev	r3, r3
   19ff8:	movt	r2, #3
   19ffc:	movt	r1, #3
   1a000:	mov	r0, #1
   1a004:	bl	12770 <__printf_chk@plt>
   1a008:	ldrb	r3, [r4, #30]
   1a00c:	and	r2, r3, #253	; 0xfd
   1a010:	cmp	r2, #4
   1a014:	bne	1a128 <crc32@@Base+0x984>
   1a018:	ldr	r3, [r4, #64]	; 0x40
   1a01c:	cmp	r3, #0
   1a020:	beq	1a180 <crc32@@Base+0x9dc>
   1a024:	add	r3, r4, #68	; 0x44
   1a028:	mov	r7, #0
   1a02c:	ldr	r8, [r3], #4
   1a030:	add	r7, r7, #1
   1a034:	cmp	r8, #0
   1a038:	bne	1a02c <crc32@@Base+0x888>
   1a03c:	movw	r2, #46108	; 0xb41c
   1a040:	movw	r1, #34472	; 0x86a8
   1a044:	movt	r2, #3
   1a048:	movt	r1, #3
   1a04c:	mov	r0, #1
   1a050:	mov	r6, r8
   1a054:	bl	12770 <__printf_chk@plt>
   1a058:	mov	r1, r8
   1a05c:	add	r3, sp, #16
   1a060:	add	r2, sp, #12
   1a064:	mov	r0, r4
   1a068:	movw	r9, #34488	; 0x86b8
   1a06c:	bl	19cd8 <crc32@@Base+0x534>
   1a070:	mov	r3, r8
   1a074:	movw	r2, #46108	; 0xb41c
   1a078:	movw	r1, #34488	; 0x86b8
   1a07c:	movt	r2, #3
   1a080:	movt	r1, #3
   1a084:	mov	r0, #1
   1a088:	movw	r8, #46108	; 0xb41c
   1a08c:	bl	12770 <__printf_chk@plt>
   1a090:	ldr	r0, [sp, #16]
   1a094:	bl	19d8c <crc32@@Base+0x5e8>
   1a098:	movw	sl, #34504	; 0x86c8
   1a09c:	movt	r8, #3
   1a0a0:	movt	r9, #3
   1a0a4:	movt	sl, #3
   1a0a8:	add	r6, r6, #1
   1a0ac:	cmp	r7, r6
   1a0b0:	beq	1a110 <crc32@@Base+0x96c>
   1a0b4:	add	r3, sp, #16
   1a0b8:	add	r2, sp, #12
   1a0bc:	mov	r1, r6
   1a0c0:	mov	r0, r4
   1a0c4:	bl	19cd8 <crc32@@Base+0x534>
   1a0c8:	mov	r3, r6
   1a0cc:	mov	r2, r8
   1a0d0:	mov	r1, r9
   1a0d4:	mov	r0, #1
   1a0d8:	bl	12770 <__printf_chk@plt>
   1a0dc:	ldr	r0, [sp, #16]
   1a0e0:	bl	19d8c <crc32@@Base+0x5e8>
   1a0e4:	ldrb	r3, [r4, #30]
   1a0e8:	cmp	r3, #6
   1a0ec:	bne	1a0a8 <crc32@@Base+0x904>
   1a0f0:	ldr	r3, [sp, #12]
   1a0f4:	mov	r2, r8
   1a0f8:	mov	r1, sl
   1a0fc:	mov	r0, #1
   1a100:	add	r6, r6, #1
   1a104:	bl	12770 <__printf_chk@plt>
   1a108:	cmp	r7, r6
   1a10c:	bne	1a0b4 <crc32@@Base+0x910>
   1a110:	ldr	r2, [sp, #20]
   1a114:	ldr	r3, [r5]
   1a118:	cmp	r2, r3
   1a11c:	bne	1a1cc <crc32@@Base+0xa28>
   1a120:	add	sp, sp, #24
   1a124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a128:	cmp	r3, #32
   1a12c:	bne	1a110 <crc32@@Base+0x96c>
   1a130:	ldr	r3, [r4, #12]
   1a134:	movw	r1, #34528	; 0x86e0
   1a138:	ldr	r2, [r4, #16]
   1a13c:	movt	r1, #3
   1a140:	rev	r3, r3
   1a144:	mov	r0, #1
   1a148:	sub	r3, r3, #8064	; 0x1f80
   1a14c:	rev	r2, r2
   1a150:	sub	r3, r3, #32
   1a154:	sub	r2, r2, #64	; 0x40
   1a158:	bl	12770 <__printf_chk@plt>
   1a15c:	b	1a110 <crc32@@Base+0x96c>
   1a160:	ldr	r1, [ip, #20]
   1a164:	b	19f8c <crc32@@Base+0x7e8>
   1a168:	ldr	r3, [r1, #20]
   1a16c:	b	19ed8 <crc32@@Base+0x734>
   1a170:	ldr	r2, [r0, #20]
   1a174:	b	19f14 <crc32@@Base+0x770>
   1a178:	ldr	r6, [ip, #20]
   1a17c:	b	19f50 <crc32@@Base+0x7ac>
   1a180:	movw	r2, #46108	; 0xb41c
   1a184:	movw	r1, #34472	; 0x86a8
   1a188:	movt	r2, #3
   1a18c:	movt	r1, #3
   1a190:	mov	r0, #1
   1a194:	bl	12770 <__printf_chk@plt>
   1a198:	b	1a110 <crc32@@Base+0x96c>
   1a19c:	movw	r1, #34308	; 0x8604
   1a1a0:	movt	r1, #3
   1a1a4:	b	19f8c <crc32@@Base+0x7e8>
   1a1a8:	movw	r6, #34288	; 0x85f0
   1a1ac:	movt	r6, #3
   1a1b0:	b	19f50 <crc32@@Base+0x7ac>
   1a1b4:	movw	r2, #34272	; 0x85e0
   1a1b8:	movt	r2, #3
   1a1bc:	b	19f14 <crc32@@Base+0x770>
   1a1c0:	movw	r3, #34260	; 0x85d4
   1a1c4:	movt	r3, #3
   1a1c8:	b	19ed8 <crc32@@Base+0x734>
   1a1cc:	bl	12494 <__stack_chk_fail@plt>
   1a1d0:	ldrdeq	r8, [r3], -r0
   1a1d4:	andeq	r8, r3, r4, lsl r3
   1a1d8:	andeq	r8, r3, r8, ror #9
   1a1dc:	ldr	r3, [r0]
   1a1e0:	cmp	r3, #0
   1a1e4:	blt	1a208 <crc32@@Base+0xa64>
   1a1e8:	cmp	r1, r3
   1a1ec:	bne	1a1fc <crc32@@Base+0xa58>
   1a1f0:	bx	lr
   1a1f4:	cmp	r3, r1
   1a1f8:	bxeq	lr
   1a1fc:	ldr	r3, [r0, #12]!
   1a200:	cmp	r3, #0
   1a204:	bge	1a1f4 <crc32@@Base+0xa50>
   1a208:	mov	r0, #0
   1a20c:	bx	lr
   1a210:	push	{r4, r5, r6, lr}
   1a214:	movw	lr, #32920	; 0x8098
   1a218:	movt	lr, #3
   1a21c:	mov	r3, #12
   1a220:	mla	r3, r3, r0, lr
   1a224:	ldr	r2, [r3, #1196]	; 0x4ac
   1a228:	ldr	r3, [r2]
   1a22c:	cmp	r3, #0
   1a230:	bge	1a244 <crc32@@Base+0xaa0>
   1a234:	b	1a254 <crc32@@Base+0xab0>
   1a238:	ldr	r3, [r2, #12]!
   1a23c:	cmp	r3, #0
   1a240:	blt	1a254 <crc32@@Base+0xab0>
   1a244:	cmp	r1, r3
   1a248:	bne	1a238 <crc32@@Base+0xa94>
   1a24c:	ldr	r0, [r2, #8]
   1a250:	pop	{r4, r5, r6, pc}
   1a254:	movw	r3, #34568	; 0x8708
   1a258:	movt	r3, #3
   1a25c:	mov	ip, r0
   1a260:	mov	r5, #12
   1a264:	ldm	r3, {r0, r1, r2}
   1a268:	movw	r4, #65420	; 0xff8c
   1a26c:	mla	ip, r5, ip, lr
   1a270:	movt	r4, #4
   1a274:	mov	r3, #30
   1a278:	stmia	r4!, {r0, r1}
   1a27c:	mov	r0, r4
   1a280:	strb	r2, [r0], #-8
   1a284:	mov	r2, #21
   1a288:	ldr	r1, [ip, #1188]	; 0x4a4
   1a28c:	bl	12404 <__strncat_chk@plt>
   1a290:	sub	r0, r4, #8
   1a294:	pop	{r4, r5, r6, pc}
   1a298:	push	{r4, r5, r6, lr}
   1a29c:	movw	lr, #32920	; 0x8098
   1a2a0:	movt	lr, #3
   1a2a4:	mov	r3, #12
   1a2a8:	mla	r3, r3, r0, lr
   1a2ac:	ldr	r2, [r3, #1196]	; 0x4ac
   1a2b0:	ldr	r3, [r2]
   1a2b4:	cmp	r3, #0
   1a2b8:	bge	1a2cc <crc32@@Base+0xb28>
   1a2bc:	b	1a2dc <crc32@@Base+0xb38>
   1a2c0:	ldr	r3, [r2, #12]!
   1a2c4:	cmp	r3, #0
   1a2c8:	blt	1a2dc <crc32@@Base+0xb38>
   1a2cc:	cmp	r1, r3
   1a2d0:	bne	1a2c0 <crc32@@Base+0xb1c>
   1a2d4:	ldr	r0, [r2, #4]
   1a2d8:	pop	{r4, r5, r6, pc}
   1a2dc:	movw	r3, #34568	; 0x8708
   1a2e0:	movt	r3, #3
   1a2e4:	mov	ip, r0
   1a2e8:	mov	r5, #12
   1a2ec:	ldm	r3, {r0, r1, r2}
   1a2f0:	movw	r4, #65420	; 0xff8c
   1a2f4:	mla	ip, r5, ip, lr
   1a2f8:	movt	r4, #4
   1a2fc:	mov	r3, #30
   1a300:	stmia	r4!, {r0, r1}
   1a304:	mov	r0, r4
   1a308:	strb	r2, [r0], #-8
   1a30c:	mov	r2, #21
   1a310:	ldr	r1, [ip, #1188]	; 0x4a4
   1a314:	bl	12404 <__strncat_chk@plt>
   1a318:	sub	r0, r4, #8
   1a31c:	pop	{r4, r5, r6, pc}
   1a320:	movw	r2, #32920	; 0x8098
   1a324:	movt	r2, #3
   1a328:	mov	r3, #12
   1a32c:	mla	r0, r3, r0, r2
   1a330:	ldr	r0, [r0, #1192]	; 0x4a8
   1a334:	bx	lr
   1a338:	movw	r2, #32920	; 0x8098
   1a33c:	movt	r2, #3
   1a340:	mov	r3, #12
   1a344:	mla	r0, r3, r0, r2
   1a348:	ldr	r0, [r0, #1188]	; 0x4a4
   1a34c:	bx	lr
   1a350:	ldr	r3, [r0]
   1a354:	cmp	r3, #0
   1a358:	bge	1a36c <crc32@@Base+0xbc8>
   1a35c:	b	1a378 <crc32@@Base+0xbd4>
   1a360:	ldr	r3, [r0, #12]!
   1a364:	cmp	r3, #0
   1a368:	blt	1a378 <crc32@@Base+0xbd4>
   1a36c:	cmp	r2, r3
   1a370:	bne	1a360 <crc32@@Base+0xbbc>
   1a374:	ldr	r1, [r0, #8]
   1a378:	mov	r0, r1
   1a37c:	bx	lr
   1a380:	cmp	r0, #0
   1a384:	beq	1a3c8 <crc32@@Base+0xc24>
   1a388:	movw	r1, #32920	; 0x8098
   1a38c:	mov	r3, #25
   1a390:	movt	r1, #3
   1a394:	b	1a3a8 <crc32@@Base+0xc04>
   1a398:	cmp	r0, r3
   1a39c:	beq	1a3c0 <crc32@@Base+0xc1c>
   1a3a0:	ldr	r3, [r2, #12]
   1a3a4:	mov	r1, r2
   1a3a8:	cmp	r3, #0
   1a3ac:	add	r2, r1, #12
   1a3b0:	bge	1a398 <crc32@@Base+0xbf4>
   1a3b4:	movw	r0, #34188	; 0x858c
   1a3b8:	movt	r0, #3
   1a3bc:	bx	lr
   1a3c0:	ldr	r0, [r1, #20]
   1a3c4:	bx	lr
   1a3c8:	movw	r0, #34260	; 0x85d4
   1a3cc:	movt	r0, #3
   1a3d0:	bx	lr
   1a3d4:	cmp	r0, #0
   1a3d8:	beq	1a418 <crc32@@Base+0xc74>
   1a3dc:	mov	r3, #1
   1a3e0:	ldr	r1, [pc, #60]	; 1a424 <crc32@@Base+0xc80>
   1a3e4:	b	1a3f8 <crc32@@Base+0xc54>
   1a3e8:	cmp	r0, r3
   1a3ec:	beq	1a410 <crc32@@Base+0xc6c>
   1a3f0:	ldr	r3, [r2, #12]
   1a3f4:	mov	r1, r2
   1a3f8:	cmp	r3, #0
   1a3fc:	add	r2, r1, #12
   1a400:	bge	1a3e8 <crc32@@Base+0xc44>
   1a404:	movw	r0, #34200	; 0x8598
   1a408:	movt	r0, #3
   1a40c:	bx	lr
   1a410:	ldr	r0, [r1, #20]
   1a414:	bx	lr
   1a418:	movw	r0, #34272	; 0x85e0
   1a41c:	movt	r0, #3
   1a420:	bx	lr
   1a424:	ldrdeq	r8, [r3], -r0
   1a428:	cmp	r0, #13
   1a42c:	beq	1a46c <crc32@@Base+0xcc8>
   1a430:	mov	r3, #7
   1a434:	ldr	r1, [pc, #60]	; 1a478 <crc32@@Base+0xcd4>
   1a438:	b	1a44c <crc32@@Base+0xca8>
   1a43c:	cmp	r0, r3
   1a440:	beq	1a464 <crc32@@Base+0xcc0>
   1a444:	ldr	r3, [r2, #12]
   1a448:	mov	r1, r2
   1a44c:	cmp	r3, #0
   1a450:	add	r2, r1, #12
   1a454:	bge	1a43c <crc32@@Base+0xc98>
   1a458:	movw	r0, #34224	; 0x85b0
   1a45c:	movt	r0, #3
   1a460:	bx	lr
   1a464:	ldr	r0, [r1, #20]
   1a468:	bx	lr
   1a46c:	movw	r0, #34288	; 0x85f0
   1a470:	movt	r0, #3
   1a474:	bx	lr
   1a478:	andeq	r8, r3, r4, lsl r3
   1a47c:	cmp	r0, #13
   1a480:	beq	1a4c0 <crc32@@Base+0xd1c>
   1a484:	mov	r3, #7
   1a488:	ldr	r1, [pc, #60]	; 1a4cc <crc32@@Base+0xd28>
   1a48c:	b	1a4a0 <crc32@@Base+0xcfc>
   1a490:	cmp	r0, r3
   1a494:	beq	1a4b8 <crc32@@Base+0xd14>
   1a498:	ldr	r3, [r2, #12]
   1a49c:	mov	r1, r2
   1a4a0:	cmp	r3, #0
   1a4a4:	add	r2, r1, #12
   1a4a8:	bge	1a490 <crc32@@Base+0xcec>
   1a4ac:	movw	r0, #30720	; 0x7800
   1a4b0:	movt	r0, #3
   1a4b4:	bx	lr
   1a4b8:	ldr	r0, [r1, #16]
   1a4bc:	bx	lr
   1a4c0:	movw	r0, #34580	; 0x8714
   1a4c4:	movt	r0, #3
   1a4c8:	bx	lr
   1a4cc:	andeq	r8, r3, r4, lsl r3
   1a4d0:	cmp	r0, #0
   1a4d4:	beq	1a514 <crc32@@Base+0xd70>
   1a4d8:	mov	r3, #2
   1a4dc:	ldr	r1, [pc, #60]	; 1a520 <crc32@@Base+0xd7c>
   1a4e0:	b	1a4f4 <crc32@@Base+0xd50>
   1a4e4:	cmp	r0, r3
   1a4e8:	beq	1a50c <crc32@@Base+0xd68>
   1a4ec:	ldr	r3, [r2, #12]
   1a4f0:	mov	r1, r2
   1a4f4:	cmp	r3, #0
   1a4f8:	add	r2, r1, #12
   1a4fc:	bge	1a4e4 <crc32@@Base+0xd40>
   1a500:	movw	r0, #34240	; 0x85c0
   1a504:	movt	r0, #3
   1a508:	bx	lr
   1a50c:	ldr	r0, [r1, #20]
   1a510:	bx	lr
   1a514:	movw	r0, #34308	; 0x8604
   1a518:	movt	r0, #3
   1a51c:	bx	lr
   1a520:	andeq	r8, r3, r8, ror #9
   1a524:	cmp	r0, #0
   1a528:	beq	1a568 <crc32@@Base+0xdc4>
   1a52c:	mov	r3, #2
   1a530:	ldr	r1, [pc, #60]	; 1a574 <crc32@@Base+0xdd0>
   1a534:	b	1a548 <crc32@@Base+0xda4>
   1a538:	cmp	r0, r3
   1a53c:	beq	1a560 <crc32@@Base+0xdbc>
   1a540:	ldr	r3, [r2, #12]
   1a544:	mov	r1, r2
   1a548:	cmp	r3, #0
   1a54c:	add	r2, r1, #12
   1a550:	bge	1a538 <crc32@@Base+0xd94>
   1a554:	movw	r0, #30720	; 0x7800
   1a558:	movt	r0, #3
   1a55c:	bx	lr
   1a560:	ldr	r0, [r1, #16]
   1a564:	bx	lr
   1a568:	movw	r0, #34592	; 0x8720
   1a56c:	movt	r0, #3
   1a570:	bx	lr
   1a574:	andeq	r8, r3, r8, ror #9
   1a578:	cmp	r0, #0
   1a57c:	beq	1a5c0 <crc32@@Base+0xe1c>
   1a580:	movw	r1, #32920	; 0x8098
   1a584:	mov	r3, #25
   1a588:	movt	r1, #3
   1a58c:	b	1a5a0 <crc32@@Base+0xdfc>
   1a590:	cmp	r0, r3
   1a594:	beq	1a5b8 <crc32@@Base+0xe14>
   1a598:	ldr	r3, [r2, #12]
   1a59c:	mov	r1, r2
   1a5a0:	cmp	r3, #0
   1a5a4:	add	r2, r1, #12
   1a5a8:	bge	1a590 <crc32@@Base+0xdec>
   1a5ac:	movw	r0, #30720	; 0x7800
   1a5b0:	movt	r0, #3
   1a5b4:	bx	lr
   1a5b8:	ldr	r0, [r1, #16]
   1a5bc:	bx	lr
   1a5c0:	movw	r0, #34600	; 0x8728
   1a5c4:	movt	r0, #3
   1a5c8:	bx	lr
   1a5cc:	cmp	r0, #0
   1a5d0:	beq	1a610 <crc32@@Base+0xe6c>
   1a5d4:	mov	r3, #1
   1a5d8:	ldr	r1, [pc, #60]	; 1a61c <crc32@@Base+0xe78>
   1a5dc:	b	1a5f0 <crc32@@Base+0xe4c>
   1a5e0:	cmp	r0, r3
   1a5e4:	beq	1a608 <crc32@@Base+0xe64>
   1a5e8:	ldr	r3, [r2, #12]
   1a5ec:	mov	r1, r2
   1a5f0:	cmp	r3, #0
   1a5f4:	add	r2, r1, #12
   1a5f8:	bge	1a5e0 <crc32@@Base+0xe3c>
   1a5fc:	movw	r0, #30720	; 0x7800
   1a600:	movt	r0, #3
   1a604:	bx	lr
   1a608:	ldr	r0, [r1, #16]
   1a60c:	bx	lr
   1a610:	movw	r0, #34600	; 0x8728
   1a614:	movt	r0, #3
   1a618:	bx	lr
   1a61c:	ldrdeq	r8, [r3], -r0
   1a620:	push	{r4, r5, r6, lr}
   1a624:	ldr	r5, [r0]
   1a628:	cmp	r5, #0
   1a62c:	blt	1a660 <crc32@@Base+0xebc>
   1a630:	mov	r6, r2
   1a634:	mov	r4, r0
   1a638:	ldr	r0, [r4, #4]
   1a63c:	mov	r1, r6
   1a640:	cmp	r0, #0
   1a644:	beq	1a654 <crc32@@Base+0xeb0>
   1a648:	bl	120e0 <strcasecmp@plt>
   1a64c:	cmp	r0, #0
   1a650:	beq	1a664 <crc32@@Base+0xec0>
   1a654:	ldr	r5, [r4, #12]!
   1a658:	cmp	r5, #0
   1a65c:	bge	1a638 <crc32@@Base+0xe94>
   1a660:	mvn	r5, #0
   1a664:	mov	r0, r5
   1a668:	pop	{r4, r5, r6, pc}
   1a66c:	mov	r2, r0
   1a670:	movw	r1, #34268	; 0x85dc
   1a674:	movw	r0, #32920	; 0x8098
   1a678:	movt	r1, #3
   1a67c:	movt	r0, #3
   1a680:	b	1a620 <crc32@@Base+0xe7c>
   1a684:	mov	r2, r0
   1a688:	movw	r1, #34608	; 0x8730
   1a68c:	ldr	r0, [pc, #4]	; 1a698 <crc32@@Base+0xef4>
   1a690:	movt	r1, #3
   1a694:	b	1a620 <crc32@@Base+0xe7c>
   1a698:	ldrdeq	r8, [r3], -r0
   1a69c:	mov	r2, r0
   1a6a0:	movw	r1, #34860	; 0x882c
   1a6a4:	ldr	r0, [pc, #4]	; 1a6b0 <crc32@@Base+0xf0c>
   1a6a8:	movt	r1, #3
   1a6ac:	b	1a620 <crc32@@Base+0xe7c>
   1a6b0:	andeq	r8, r3, r4, lsl r3
   1a6b4:	mov	r2, r0
   1a6b8:	movw	r1, #34248	; 0x85c8
   1a6bc:	ldr	r0, [pc, #4]	; 1a6c8 <crc32@@Base+0xf24>
   1a6c0:	movt	r1, #3
   1a6c4:	b	1a620 <crc32@@Base+0xe7c>
   1a6c8:	andeq	r8, r3, r8, ror #9
   1a6cc:	push	{r4, r5, r6, r7, r8, lr}
   1a6d0:	movw	r4, #64940	; 0xfdac
   1a6d4:	movw	r7, #65040	; 0xfe10
   1a6d8:	movt	r4, #4
   1a6dc:	movt	r7, #4
   1a6e0:	cmp	r4, r7
   1a6e4:	beq	1a728 <crc32@@Base+0xf84>
   1a6e8:	uxtb	r6, r0
   1a6ec:	b	1a6f8 <crc32@@Base+0xf54>
   1a6f0:	cmp	r4, r7
   1a6f4:	beq	1a728 <crc32@@Base+0xf84>
   1a6f8:	ldr	r3, [r4]
   1a6fc:	mov	r5, r4
   1a700:	mov	r0, r6
   1a704:	add	r4, r4, #4
   1a708:	ldr	r3, [r3, #32]
   1a70c:	cmp	r3, #0
   1a710:	beq	1a6f0 <crc32@@Base+0xf4c>
   1a714:	blx	r3
   1a718:	cmp	r0, #0
   1a71c:	bne	1a6f0 <crc32@@Base+0xf4c>
   1a720:	ldr	r0, [r5]
   1a724:	pop	{r4, r5, r6, r7, r8, pc}
   1a728:	mov	r0, #0
   1a72c:	pop	{r4, r5, r6, r7, r8, pc}
   1a730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a734:	movw	r4, #64940	; 0xfdac
   1a738:	movw	r7, #65040	; 0xfe10
   1a73c:	movt	r4, #4
   1a740:	movt	r7, #4
   1a744:	sub	sp, sp, #12
   1a748:	cmp	r4, r7
   1a74c:	beq	1a7cc <crc32@@Base+0x1028>
   1a750:	mov	r8, r3
   1a754:	mov	sl, r1
   1a758:	mov	r9, r0
   1a75c:	mvn	fp, #0
   1a760:	b	1a76c <crc32@@Base+0xfc8>
   1a764:	cmp	r4, r7
   1a768:	beq	1a7c0 <crc32@@Base+0x101c>
   1a76c:	mov	r6, r4
   1a770:	mov	r2, r8
   1a774:	ldr	r3, [r6]
   1a778:	mov	r0, r9
   1a77c:	add	r4, r4, #4
   1a780:	ldr	r5, [r3, #16]
   1a784:	cmp	r5, #0
   1a788:	beq	1a764 <crc32@@Base+0xfc0>
   1a78c:	ldr	r1, [sl, #44]	; 0x2c
   1a790:	blx	r5
   1a794:	subs	fp, r0, #0
   1a798:	bne	1a764 <crc32@@Base+0xfc0>
   1a79c:	ldr	r1, [r6]
   1a7a0:	ldr	r3, [r1, #20]
   1a7a4:	cmp	r3, #0
   1a7a8:	beq	1a7d4 <crc32@@Base+0x1030>
   1a7ac:	ldrb	r2, [r8, #133]	; 0x85
   1a7b0:	cmp	r2, #0
   1a7b4:	bne	1a7c0 <crc32@@Base+0x101c>
   1a7b8:	mov	r0, r9
   1a7bc:	blx	r3
   1a7c0:	mov	r0, fp
   1a7c4:	add	sp, sp, #12
   1a7c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7cc:	mvn	fp, #0
   1a7d0:	b	1a7c0 <crc32@@Base+0x101c>
   1a7d4:	ldr	ip, [r1]
   1a7d8:	movw	r0, #65044	; 0xfe14
   1a7dc:	movt	r0, #4
   1a7e0:	ldr	r3, [r8, #80]	; 0x50
   1a7e4:	movw	r2, #36820	; 0x8fd4
   1a7e8:	mov	r1, #1
   1a7ec:	movt	r2, #3
   1a7f0:	ldr	r0, [r0]
   1a7f4:	str	ip, [sp]
   1a7f8:	bl	122b4 <__fprintf_chk@plt>
   1a7fc:	b	1a7c0 <crc32@@Base+0x101c>
   1a800:	push	{r4, r5, r6, r7, lr}
   1a804:	mov	r4, r2
   1a808:	sub	sp, sp, #12
   1a80c:	mov	r2, r3
   1a810:	mov	r5, r3
   1a814:	ldr	r1, [r1, #44]	; 0x2c
   1a818:	ldr	r3, [r4, #16]
   1a81c:	mov	r7, r0
   1a820:	blx	r3
   1a824:	subs	r6, r0, #0
   1a828:	bne	1a858 <crc32@@Base+0x10b4>
   1a82c:	ldr	r3, [r4, #20]
   1a830:	cmp	r3, #0
   1a834:	beq	1a890 <crc32@@Base+0x10ec>
   1a838:	ldrb	r2, [r5, #133]	; 0x85
   1a83c:	cmp	r2, #0
   1a840:	bne	1a84c <crc32@@Base+0x10a8>
   1a844:	mov	r0, r7
   1a848:	blx	r3
   1a84c:	mov	r0, r6
   1a850:	add	sp, sp, #12
   1a854:	pop	{r4, r5, r6, r7, pc}
   1a858:	ldr	ip, [r4]
   1a85c:	movw	r1, #65044	; 0xfe14
   1a860:	movt	r1, #4
   1a864:	ldr	r3, [r5, #80]	; 0x50
   1a868:	movw	r2, #36856	; 0x8ff8
   1a86c:	movt	r2, #3
   1a870:	ldr	r0, [r1]
   1a874:	mov	r1, #1
   1a878:	str	r6, [sp, #4]
   1a87c:	str	ip, [sp]
   1a880:	bl	122b4 <__fprintf_chk@plt>
   1a884:	mov	r0, r6
   1a888:	add	sp, sp, #12
   1a88c:	pop	{r4, r5, r6, r7, pc}
   1a890:	ldr	ip, [r4]
   1a894:	movw	r1, #65044	; 0xfe14
   1a898:	movt	r1, #4
   1a89c:	ldr	r3, [r5, #80]	; 0x50
   1a8a0:	movw	r2, #36820	; 0x8fd4
   1a8a4:	movt	r2, #3
   1a8a8:	ldr	r0, [r1]
   1a8ac:	mov	r1, #1
   1a8b0:	str	ip, [sp]
   1a8b4:	bl	122b4 <__fprintf_chk@plt>
   1a8b8:	mov	r0, r6
   1a8bc:	add	sp, sp, #12
   1a8c0:	pop	{r4, r5, r6, r7, pc}
   1a8c4:	push	{r4, r5, r6, r7, lr}
   1a8c8:	mov	r6, r1
   1a8cc:	sub	sp, sp, #12
   1a8d0:	mov	r4, r2
   1a8d4:	movw	r1, #578	; 0x242
   1a8d8:	mov	r2, #384	; 0x180
   1a8dc:	mov	r7, r0
   1a8e0:	bl	12434 <open@plt>
   1a8e4:	subs	r5, r0, #0
   1a8e8:	blt	1a958 <crc32@@Base+0x11b4>
   1a8ec:	mov	r1, r6
   1a8f0:	mov	r2, r4
   1a8f4:	bl	12608 <write@plt>
   1a8f8:	cmp	r4, r0
   1a8fc:	bne	1a914 <crc32@@Base+0x1170>
   1a900:	mov	r0, r5
   1a904:	bl	12314 <close@plt>
   1a908:	mov	r0, #0
   1a90c:	add	sp, sp, #12
   1a910:	pop	{r4, r5, r6, r7, pc}
   1a914:	movw	r3, #65044	; 0xfe14
   1a918:	movt	r3, #4
   1a91c:	ldr	r4, [r3]
   1a920:	bl	1268c <__errno_location@plt>
   1a924:	ldr	r0, [r0]
   1a928:	bl	12200 <strerror@plt>
   1a92c:	mov	r3, r7
   1a930:	mov	r1, #1
   1a934:	movw	r2, #36932	; 0x9044
   1a938:	movt	r2, #3
   1a93c:	str	r0, [sp]
   1a940:	mov	r0, r4
   1a944:	bl	122b4 <__fprintf_chk@plt>
   1a948:	mov	r0, r5
   1a94c:	bl	12314 <close@plt>
   1a950:	mvn	r0, #0
   1a954:	b	1a90c <crc32@@Base+0x1168>
   1a958:	movw	r3, #65044	; 0xfe14
   1a95c:	movt	r3, #4
   1a960:	ldr	r4, [r3]
   1a964:	bl	1268c <__errno_location@plt>
   1a968:	ldr	r0, [r0]
   1a96c:	bl	12200 <strerror@plt>
   1a970:	mov	r3, r7
   1a974:	movw	r2, #36908	; 0x902c
   1a978:	mov	r1, #1
   1a97c:	movt	r2, #3
   1a980:	str	r0, [sp]
   1a984:	mov	r0, r4
   1a988:	bl	122b4 <__fprintf_chk@plt>
   1a98c:	mvn	r0, #0
   1a990:	b	1a90c <crc32@@Base+0x1168>
   1a994:	push	{r4, r5, r6, r7, r8, lr}
   1a998:	movw	r4, #61168	; 0xeef0
   1a99c:	movt	r4, #4
   1a9a0:	sub	sp, sp, #104	; 0x68
   1a9a4:	mov	r6, r1
   1a9a8:	mov	r7, r0
   1a9ac:	ldr	r3, [r4]
   1a9b0:	mov	r0, r1
   1a9b4:	mov	r1, #0
   1a9b8:	str	r3, [sp, #100]	; 0x64
   1a9bc:	bl	12434 <open@plt>
   1a9c0:	subs	r5, r0, #0
   1a9c4:	blt	1aa04 <crc32@@Base+0x1260>
   1a9c8:	add	r2, sp, #8
   1a9cc:	mov	r1, r5
   1a9d0:	mov	r0, #3
   1a9d4:	bl	12554 <__fxstat@plt>
   1a9d8:	cmp	r0, #0
   1a9dc:	blt	1aa48 <crc32@@Base+0x12a4>
   1a9e0:	mov	r0, r5
   1a9e4:	bl	12314 <close@plt>
   1a9e8:	ldr	r0, [sp, #52]	; 0x34
   1a9ec:	ldr	r2, [sp, #100]	; 0x64
   1a9f0:	ldr	r3, [r4]
   1a9f4:	cmp	r2, r3
   1a9f8:	bne	1aa94 <crc32@@Base+0x12f0>
   1a9fc:	add	sp, sp, #104	; 0x68
   1aa00:	pop	{r4, r5, r6, r7, r8, pc}
   1aa04:	movw	r2, #65044	; 0xfe14
   1aa08:	movt	r2, #4
   1aa0c:	ldr	r7, [r7, #80]	; 0x50
   1aa10:	ldr	r5, [r2]
   1aa14:	bl	1268c <__errno_location@plt>
   1aa18:	ldr	r0, [r0]
   1aa1c:	bl	12200 <strerror@plt>
   1aa20:	mov	r3, r7
   1aa24:	str	r6, [sp]
   1aa28:	movw	r2, #25392	; 0x6330
   1aa2c:	mov	r1, #1
   1aa30:	movt	r2, #3
   1aa34:	str	r0, [sp, #4]
   1aa38:	mov	r0, r5
   1aa3c:	bl	122b4 <__fprintf_chk@plt>
   1aa40:	mvn	r0, #0
   1aa44:	b	1a9ec <crc32@@Base+0x1248>
   1aa48:	movw	r2, #65044	; 0xfe14
   1aa4c:	movt	r2, #4
   1aa50:	ldr	r8, [r7, #80]	; 0x50
   1aa54:	ldr	r7, [r2]
   1aa58:	bl	1268c <__errno_location@plt>
   1aa5c:	ldr	r0, [r0]
   1aa60:	bl	12200 <strerror@plt>
   1aa64:	mov	r3, r8
   1aa68:	mov	r1, #1
   1aa6c:	str	r6, [sp]
   1aa70:	movw	r2, #25416	; 0x6348
   1aa74:	movt	r2, #3
   1aa78:	str	r0, [sp, #4]
   1aa7c:	mov	r0, r7
   1aa80:	bl	122b4 <__fprintf_chk@plt>
   1aa84:	mov	r0, r5
   1aa88:	bl	12314 <close@plt>
   1aa8c:	mvn	r0, #0
   1aa90:	b	1a9ec <crc32@@Base+0x1248>
   1aa94:	bl	12494 <__stack_chk_fail@plt>
   1aa98:	push	{r4, r5, r6, lr}
   1aa9c:	movw	r4, #61168	; 0xeef0
   1aaa0:	movt	r4, #4
   1aaa4:	sub	sp, sp, #8
   1aaa8:	mov	r6, r0
   1aaac:	movw	r0, #36960	; 0x9060
   1aab0:	ldr	r3, [r4]
   1aab4:	movt	r0, #3
   1aab8:	mov	r5, r1
   1aabc:	str	r3, [sp, #4]
   1aac0:	bl	1271c <getenv@plt>
   1aac4:	cmp	r0, #0
   1aac8:	moveq	r0, r5
   1aacc:	beq	1aaf8 <crc32@@Base+0x1354>
   1aad0:	mov	r2, #10
   1aad4:	mov	r1, #0
   1aad8:	bl	1211c <strtol@plt>
   1aadc:	add	r3, sp, #8
   1aae0:	str	r0, [r3, #-8]!
   1aae4:	mov	r0, r3
   1aae8:	bl	12320 <gmtime@plt>
   1aaec:	subs	r5, r0, #0
   1aaf0:	beq	1ab10 <crc32@@Base+0x136c>
   1aaf4:	ldr	r0, [sp]
   1aaf8:	ldr	r2, [sp, #4]
   1aafc:	ldr	r3, [r4]
   1ab00:	cmp	r2, r3
   1ab04:	bne	1ab38 <crc32@@Base+0x1394>
   1ab08:	add	sp, sp, #8
   1ab0c:	pop	{r4, r5, r6, pc}
   1ab10:	movw	r1, #65044	; 0xfe14
   1ab14:	movt	r1, #4
   1ab18:	mov	r3, r6
   1ab1c:	movw	r2, #36980	; 0x9074
   1ab20:	ldr	r0, [r1]
   1ab24:	movt	r2, #3
   1ab28:	mov	r1, #1
   1ab2c:	bl	122b4 <__fprintf_chk@plt>
   1ab30:	mov	r0, r5
   1ab34:	b	1aaf8 <crc32@@Base+0x1354>
   1ab38:	bl	12494 <__stack_chk_fail@plt>
   1ab3c:	movw	ip, #65452	; 0xffac
   1ab40:	movt	ip, #4
   1ab44:	sub	r2, r2, #4
   1ab48:	ldr	r1, [ip]
   1ab4c:	cmp	r1, #0
   1ab50:	addeq	r1, r0, #48	; 0x30
   1ab54:	ldrh	r3, [r1, #1]
   1ab58:	rev16	r3, r3
   1ab5c:	uxth	r3, r3
   1ab60:	cmp	r3, #4
   1ab64:	addhi	r3, r1, r3
   1ab68:	movls	r3, r1
   1ab6c:	cmp	r2, #4
   1ab70:	ldrls	pc, [pc, r2, lsl #2]
   1ab74:	b	1abb4 <crc32@@Base+0x1410>
   1ab78:	andeq	sl, r1, ip, lsl #23
   1ab7c:	ldrdeq	sl, [r1], -r4
   1ab80:	andeq	sl, r1, r8, lsl #24
   1ab84:	andeq	sl, r1, ip, lsr ip
   1ab88:			; <UNDEFINED> instruction: 0x0001abbc
   1ab8c:	ldr	r2, [r1]
   1ab90:	mov	r0, #204	; 0xcc
   1ab94:	movt	r0, #1024	; 0x400
   1ab98:	bic	r2, r2, #16711680	; 0xff0000
   1ab9c:	bic	r2, r2, #65280	; 0xff00
   1aba0:	cmp	r2, r0
   1aba4:	movne	r1, r3
   1aba8:	movne	r2, #204	; 0xcc
   1abac:	movtne	r2, #1028	; 0x404
   1abb0:	strne	r2, [r3]
   1abb4:	str	r1, [ip]
   1abb8:	bx	lr
   1abbc:	mov	r1, r3
   1abc0:	mov	r2, #207	; 0xcf
   1abc4:	str	r1, [ip]
   1abc8:	movt	r2, #1028	; 0x404
   1abcc:	str	r2, [r3]
   1abd0:	bx	lr
   1abd4:	ldr	r2, [r1]
   1abd8:	mov	r0, #204	; 0xcc
   1abdc:	movt	r0, #3072	; 0xc00
   1abe0:	bic	r2, r2, #16711680	; 0xff0000
   1abe4:	bic	r2, r2, #65280	; 0xff00
   1abe8:	cmp	r2, r0
   1abec:	beq	1abb4 <crc32@@Base+0x1410>
   1abf0:	mov	r2, #204	; 0xcc
   1abf4:	mov	r1, r3
   1abf8:	movt	r2, #3076	; 0xc04
   1abfc:	str	r1, [ip]
   1ac00:	str	r2, [r3]
   1ac04:	bx	lr
   1ac08:	ldr	r2, [r1]
   1ac0c:	mov	r0, #204	; 0xcc
   1ac10:	movt	r0, #7168	; 0x1c00
   1ac14:	bic	r2, r2, #16711680	; 0xff0000
   1ac18:	bic	r2, r2, #65280	; 0xff00
   1ac1c:	cmp	r2, r0
   1ac20:	beq	1abb4 <crc32@@Base+0x1410>
   1ac24:	mov	r2, #204	; 0xcc
   1ac28:	mov	r1, r3
   1ac2c:	movt	r2, #7172	; 0x1c04
   1ac30:	str	r1, [ip]
   1ac34:	str	r2, [r3]
   1ac38:	bx	lr
   1ac3c:	mov	r2, #207	; 0xcf
   1ac40:	mov	r1, r3
   1ac44:	movt	r2, #5124	; 0x1404
   1ac48:	str	r1, [ip]
   1ac4c:	str	r2, [r3]
   1ac50:	bx	lr
   1ac54:	movw	r2, #65452	; 0xffac
   1ac58:	movt	r2, #4
   1ac5c:	cmp	r3, #2
   1ac60:	ldr	r1, [r2]
   1ac64:	ldrh	r2, [r1, #1]
   1ac68:	rev16	r2, r2
   1ac6c:	uxth	r2, r2
   1ac70:	sub	r2, r2, #4
   1ac74:	asr	r2, r2, #3
   1ac78:	beq	1acac <crc32@@Base+0x1508>
   1ac7c:	cmp	r3, #3
   1ac80:	bxne	lr
   1ac84:	lsl	r0, r2, #3
   1ac88:	ldr	r3, [sp]
   1ac8c:	add	r0, r0, #12
   1ac90:	add	r2, r1, r2, lsl #3
   1ac94:	ubfx	ip, r0, #8, #8
   1ac98:	rev	r3, r3
   1ac9c:	orr	r0, ip, r0, lsl #8
   1aca0:	str	r3, [r2, #8]
   1aca4:	strh	r0, [r1, #1]
   1aca8:	bx	lr
   1acac:	add	r2, r1, r2, lsl #3
   1acb0:	ldr	r3, [sp]
   1acb4:	rev	r3, r3
   1acb8:	str	r3, [r2, #4]
   1acbc:	bx	lr
   1acc0:	mov	r3, #12
   1acc4:	mul	r1, r3, r1
   1acc8:	movw	r3, #6633	; 0x19e9
   1accc:	movt	r3, #45426	; 0xb172
   1acd0:	str	r3, [r0, #28]
   1acd4:	str	r1, [r0, #32]
   1acd8:	bx	lr
   1acdc:	push	{r4, lr}
   1ace0:	mov	ip, #12
   1ace4:	movw	lr, #65452	; 0xffac
   1ace8:	movt	lr, #4
   1acec:	mla	ip, r1, ip, ip
   1acf0:	ldr	r1, [lr, #4]
   1acf4:	mov	r4, #177	; 0xb1
   1acf8:	str	r2, [r0]
   1acfc:	sub	r1, r2, r1
   1ad00:	str	r4, [r0, #4]
   1ad04:	add	r3, r1, r3
   1ad08:	add	ip, ip, #24
   1ad0c:	add	r2, r3, #20
   1ad10:	add	ip, r0, ip
   1ad14:	add	r3, r3, #28
   1ad18:	str	r2, [r0, #12]
   1ad1c:	str	r1, [r0, #24]
   1ad20:	mov	r2, #0
   1ad24:	str	ip, [lr, #8]
   1ad28:	str	r3, [r0, #20]
   1ad2c:	str	r2, [r0, #8]
   1ad30:	str	r2, [r0, #16]
   1ad34:	pop	{r4, pc}
   1ad38:	subs	r0, r0, #10
   1ad3c:	movne	r0, #1
   1ad40:	bx	lr
   1ad44:	ldr	r3, [r0, #4]
   1ad48:	cmp	r3, #177	; 0xb1
   1ad4c:	beq	1ad64 <crc32@@Base+0x15c0>
   1ad50:	ldrb	r3, [r0]
   1ad54:	cmp	r3, #209	; 0xd1
   1ad58:	beq	1ad80 <crc32@@Base+0x15dc>
   1ad5c:	mvn	r0, #10
   1ad60:	bx	lr
   1ad64:	ldr	r2, [r0, #28]
   1ad68:	movw	r3, #6633	; 0x19e9
   1ad6c:	movt	r3, #45426	; 0xb172
   1ad70:	cmp	r2, r3
   1ad74:	bne	1ad50 <crc32@@Base+0x15ac>
   1ad78:	mov	r0, #0
   1ad7c:	bx	lr
   1ad80:	ldrb	r3, [r0, #44]	; 0x2c
   1ad84:	cmp	r3, #210	; 0xd2
   1ad88:	beq	1ad78 <crc32@@Base+0x15d4>
   1ad8c:	ldr	r3, [r0, #40]	; 0x28
   1ad90:	cmp	r3, #0
   1ad94:	mvneq	r0, #10
   1ad98:	movne	r0, #0
   1ad9c:	bx	lr
   1ada0:	push	{r4, r5, r6, r7, r8, lr}
   1ada4:	mov	lr, #209	; 0xd1
   1ada8:	ldr	r4, [r0, #40]	; 0x28
   1adac:	movt	lr, #16416	; 0x4020
   1adb0:	str	lr, [r0]
   1adb4:	cmp	r4, #0
   1adb8:	bne	1ae10 <crc32@@Base+0x166c>
   1adbc:	movw	ip, #65452	; 0xffac
   1adc0:	movt	ip, #4
   1adc4:	str	r2, [r0, #4]
   1adc8:	cmp	r1, #0
   1adcc:	ldr	lr, [ip, #4]
   1add0:	str	r4, [r0, #8]
   1add4:	sub	r2, r2, lr
   1add8:	str	r2, [r0, #32]
   1addc:	add	r3, r2, r3
   1ade0:	mov	r2, #0
   1ade4:	str	r3, [r0, #20]
   1ade8:	addne	r1, r3, #44	; 0x2c
   1adec:	str	r2, [r0, #24]
   1adf0:	add	r3, r3, #32
   1adf4:	str	r1, [r0, #12]
   1adf8:	str	r3, [r0, #16]
   1adfc:	add	r3, r0, #36	; 0x24
   1ae00:	add	r0, r0, #24
   1ae04:	str	r3, [ip, #8]
   1ae08:	str	r0, [ip, #12]
   1ae0c:	pop	{r4, r5, r6, r7, r8, pc}
   1ae10:	movw	r1, #62572	; 0xf46c
   1ae14:	movt	r1, #4
   1ae18:	ldr	r1, [r1]
   1ae1c:	cmp	r1, #0
   1ae20:	bne	1aeb4 <crc32@@Base+0x1710>
   1ae24:	movw	r5, #65452	; 0xffac
   1ae28:	movt	r5, #4
   1ae2c:	sub	r4, r2, #65536	; 0x10000
   1ae30:	str	r1, [r0, #8]
   1ae34:	ldr	r6, [r5, #20]
   1ae38:	sub	r4, r4, #44	; 0x2c
   1ae3c:	ldr	r7, [r5, #16]
   1ae40:	add	ip, r0, r6
   1ae44:	str	r1, [r0, #28]
   1ae48:	add	r8, ip, #36	; 0x24
   1ae4c:	str	r8, [r5, #8]
   1ae50:	add	r5, r7, r3
   1ae54:	str	r7, [r0, #32]
   1ae58:	add	r7, r5, #44	; 0x2c
   1ae5c:	str	r7, [r0, #4]
   1ae60:	add	r7, r6, r4
   1ae64:	str	r5, [r0, #20]
   1ae68:	str	r1, [r0, #12]
   1ae6c:	add	r5, r5, #32
   1ae70:	str	r1, [r0, #24]
   1ae74:	sub	r3, r4, r3
   1ae78:	str	r5, [r0, #16]
   1ae7c:	add	r4, r7, #32
   1ae80:	mov	r5, #65536	; 0x10000
   1ae84:	str	r5, [r0, #36]	; 0x24
   1ae88:	str	lr, [r0, r6]
   1ae8c:	str	r2, [ip, #4]
   1ae90:	str	r1, [ip, #8]
   1ae94:	str	r1, [ip, #28]
   1ae98:	str	r1, [ip, #12]
   1ae9c:	str	r1, [ip, #40]	; 0x28
   1aea0:	str	r1, [ip, #24]
   1aea4:	str	r7, [ip, #20]
   1aea8:	str	r4, [ip, #16]
   1aeac:	str	r3, [ip, #32]
   1aeb0:	pop	{r4, r5, r6, r7, r8, pc}
   1aeb4:	movw	r3, #65044	; 0xfe14
   1aeb8:	movt	r3, #4
   1aebc:	movw	r0, #37016	; 0x9098
   1aec0:	mov	r2, #60	; 0x3c
   1aec4:	ldr	r3, [r3]
   1aec8:	movt	r0, #3
   1aecc:	mov	r1, #1
   1aed0:	bl	12578 <fwrite@plt>
   1aed4:	mov	r0, #1
   1aed8:	bl	121f4 <exit@plt>
   1aedc:	ldr	r2, [r0, #4]
   1aee0:	push	{r4, r5, r6, r7, lr}
   1aee4:	cmp	r2, #177	; 0xb1
   1aee8:	sub	sp, sp, #12
   1aeec:	mov	r4, r0
   1aef0:	beq	1af08 <crc32@@Base+0x1764>
   1aef4:	ldrb	r3, [r4]
   1aef8:	cmp	r3, #209	; 0xd1
   1aefc:	beq	1afb4 <crc32@@Base+0x1810>
   1af00:	mvn	r0, #0
   1af04:	bl	12780 <__printf_chk@plt+0x10>
   1af08:	ldr	r1, [r0, #28]
   1af0c:	movw	r3, #6633	; 0x19e9
   1af10:	movt	r3, #45426	; 0xb172
   1af14:	cmp	r1, r3
   1af18:	bne	1aef4 <crc32@@Base+0x1750>
   1af1c:	ldr	r2, [r0, #32]
   1af20:	movw	r3, #43691	; 0xaaab
   1af24:	movt	r3, #43690	; 0xaaaa
   1af28:	cmp	r2, #720	; 0x2d0
   1af2c:	umull	r2, r3, r2, r3
   1af30:	lsr	r5, r3, #3
   1af34:	bhi	1b294 <crc32@@Base+0x1af0>
   1af38:	movw	r0, #37172	; 0x9134
   1af3c:	movt	r0, #3
   1af40:	bl	1226c <puts@plt>
   1af44:	mov	r2, #1
   1af48:	mov	r0, r2
   1af4c:	movw	r1, #37212	; 0x915c
   1af50:	movt	r1, #3
   1af54:	bl	12770 <__printf_chk@plt>
   1af58:	mov	r2, #1
   1af5c:	mov	r1, #0
   1af60:	ldr	r0, [pc, #832]	; 1b2a8 <crc32@@Base+0x1b04>
   1af64:	bl	1a350 <crc32@@Base+0xbac>
   1af68:	bl	1226c <puts@plt>
   1af6c:	movw	r1, #29864	; 0x74a8
   1af70:	mov	r0, #1
   1af74:	movt	r1, #3
   1af78:	bl	12770 <__printf_chk@plt>
   1af7c:	mov	r3, #12
   1af80:	mla	r5, r3, r5, r4
   1af84:	ldr	r0, [r5, #36]	; 0x24
   1af88:	bl	19d8c <crc32@@Base+0x5e8>
   1af8c:	ldr	r2, [r4, #24]
   1af90:	movw	r1, #37232	; 0x9170
   1af94:	mov	r0, #1
   1af98:	movt	r1, #3
   1af9c:	bl	12770 <__printf_chk@plt>
   1afa0:	movw	r1, #37252	; 0x9184
   1afa4:	ldr	r2, [r4]
   1afa8:	mov	r0, #1
   1afac:	movt	r1, #3
   1afb0:	b	1b0d8 <crc32@@Base+0x1934>
   1afb4:	ldrb	r3, [r4, #44]	; 0x2c
   1afb8:	ldr	r5, [r4, #40]	; 0x28
   1afbc:	cmp	r3, #210	; 0xd2
   1afc0:	beq	1b11c <crc32@@Base+0x1978>
   1afc4:	cmp	r5, #0
   1afc8:	beq	1af00 <crc32@@Base+0x175c>
   1afcc:	cmp	r2, #177	; 0xb1
   1afd0:	bne	1afe8 <crc32@@Base+0x1844>
   1afd4:	ldr	r2, [r4, #28]
   1afd8:	movw	r3, #6633	; 0x19e9
   1afdc:	movt	r3, #45426	; 0xb172
   1afe0:	cmp	r2, r3
   1afe4:	beq	1b0e4 <crc32@@Base+0x1940>
   1afe8:	movw	r0, #37172	; 0x9134
   1afec:	movt	r0, #3
   1aff0:	bl	1226c <puts@plt>
   1aff4:	mov	r2, #2
   1aff8:	movw	r1, #37212	; 0x915c
   1affc:	mov	r0, #1
   1b000:	movt	r1, #3
   1b004:	bl	12770 <__printf_chk@plt>
   1b008:	mov	r2, #2
   1b00c:	mov	r1, #0
   1b010:	ldr	r0, [pc, #656]	; 1b2a8 <crc32@@Base+0x1b04>
   1b014:	bl	1a350 <crc32@@Base+0xbac>
   1b018:	bl	1226c <puts@plt>
   1b01c:	movw	r2, #37372	; 0x91fc
   1b020:	movw	r1, #37352	; 0x91e8
   1b024:	movt	r2, #3
   1b028:	movt	r1, #3
   1b02c:	mov	r0, #1
   1b030:	movw	r5, #65452	; 0xffac
   1b034:	bl	12770 <__printf_chk@plt>
   1b038:	movw	r1, #37380	; 0x9204
   1b03c:	mov	r0, #1
   1b040:	movt	r1, #3
   1b044:	bl	12770 <__printf_chk@plt>
   1b048:	movt	r5, #4
   1b04c:	ldr	r0, [r4, #36]	; 0x24
   1b050:	bl	19d8c <crc32@@Base+0x5e8>
   1b054:	movw	r1, #37404	; 0x921c
   1b058:	mov	r0, #1
   1b05c:	movt	r1, #3
   1b060:	bl	12770 <__printf_chk@plt>
   1b064:	ldr	r0, [r5, #20]
   1b068:	bl	19d8c <crc32@@Base+0x5e8>
   1b06c:	ldr	r2, [r4, #32]
   1b070:	movw	r1, #37428	; 0x9234
   1b074:	mov	r0, #1
   1b078:	movt	r1, #3
   1b07c:	bl	12770 <__printf_chk@plt>
   1b080:	ldr	r2, [r4, #4]
   1b084:	movw	r1, #37456	; 0x9250
   1b088:	mov	r0, #1
   1b08c:	movt	r1, #3
   1b090:	bl	12770 <__printf_chk@plt>
   1b094:	ldr	r3, [r5, #20]
   1b098:	movw	r1, #37484	; 0x926c
   1b09c:	mov	r0, #1
   1b0a0:	add	r4, r4, r3
   1b0a4:	movt	r1, #3
   1b0a8:	bl	12770 <__printf_chk@plt>
   1b0ac:	ldr	r0, [r4, #36]	; 0x24
   1b0b0:	bl	19d8c <crc32@@Base+0x5e8>
   1b0b4:	ldr	r2, [r4, #32]
   1b0b8:	movw	r1, #37508	; 0x9284
   1b0bc:	mov	r0, #1
   1b0c0:	movt	r1, #3
   1b0c4:	bl	12770 <__printf_chk@plt>
   1b0c8:	ldr	r2, [r4, #4]
   1b0cc:	movw	r1, #37536	; 0x92a0
   1b0d0:	movt	r1, #3
   1b0d4:	mov	r0, #1
   1b0d8:	add	sp, sp, #12
   1b0dc:	pop	{r4, r5, r6, r7, lr}
   1b0e0:	b	12770 <__printf_chk@plt>
   1b0e4:	movw	r0, #37172	; 0x9134
   1b0e8:	movt	r0, #3
   1b0ec:	bl	1226c <puts@plt>
   1b0f0:	mov	r2, #1
   1b0f4:	mov	r0, r2
   1b0f8:	movw	r1, #37212	; 0x915c
   1b0fc:	movt	r1, #3
   1b100:	bl	12770 <__printf_chk@plt>
   1b104:	mov	r2, #1
   1b108:	mov	r1, #0
   1b10c:	ldr	r0, [pc, #404]	; 1b2a8 <crc32@@Base+0x1b04>
   1b110:	bl	1a350 <crc32@@Base+0xbac>
   1b114:	bl	1226c <puts@plt>
   1b118:	b	1b01c <crc32@@Base+0x1878>
   1b11c:	cmp	r5, #0
   1b120:	bne	1b288 <crc32@@Base+0x1ae4>
   1b124:	ldrh	r3, [r4, #45]	; 0x2d
   1b128:	rev16	r3, r3
   1b12c:	uxth	r3, r3
   1b130:	cmp	r3, #1760	; 0x6e0
   1b134:	bhi	1b258 <crc32@@Base+0x1ab4>
   1b138:	cmp	r2, #177	; 0xb1
   1b13c:	bne	1b15c <crc32@@Base+0x19b8>
   1b140:	ldr	r2, [r4, #28]
   1b144:	movw	r3, #6633	; 0x19e9
   1b148:	movt	r3, #45426	; 0xb172
   1b14c:	cmp	r2, r3
   1b150:	moveq	r6, #1
   1b154:	moveq	r7, r6
   1b158:	beq	1b164 <crc32@@Base+0x19c0>
   1b15c:	mov	r6, #2
   1b160:	mov	r7, r6
   1b164:	movw	r0, #37172	; 0x9134
   1b168:	movt	r0, #3
   1b16c:	bl	1226c <puts@plt>
   1b170:	mov	r2, r7
   1b174:	movw	r1, #37212	; 0x915c
   1b178:	mov	r0, #1
   1b17c:	movt	r1, #3
   1b180:	bl	12770 <__printf_chk@plt>
   1b184:	mov	r2, r6
   1b188:	mov	r1, #0
   1b18c:	ldr	r0, [pc, #276]	; 1b2a8 <crc32@@Base+0x1b04>
   1b190:	bl	1a350 <crc32@@Base+0xbac>
   1b194:	bl	1226c <puts@plt>
   1b198:	cmp	r5, #0
   1b19c:	bne	1b01c <crc32@@Base+0x1878>
   1b1a0:	movw	r2, #37348	; 0x91e4
   1b1a4:	movw	r1, #37352	; 0x91e8
   1b1a8:	movt	r2, #3
   1b1ac:	movt	r1, #3
   1b1b0:	mov	r0, #1
   1b1b4:	bl	12770 <__printf_chk@plt>
   1b1b8:	movw	r1, #29864	; 0x74a8
   1b1bc:	mov	r0, #1
   1b1c0:	movt	r1, #3
   1b1c4:	bl	12770 <__printf_chk@plt>
   1b1c8:	ldr	r0, [r4, #36]	; 0x24
   1b1cc:	bl	19d8c <crc32@@Base+0x5e8>
   1b1d0:	ldr	r2, [r4, #16]
   1b1d4:	movw	r1, #37232	; 0x9170
   1b1d8:	mov	r0, #1
   1b1dc:	movt	r1, #3
   1b1e0:	bl	12770 <__printf_chk@plt>
   1b1e4:	movw	r1, #37252	; 0x9184
   1b1e8:	ldr	r2, [r4, #4]
   1b1ec:	movt	r1, #3
   1b1f0:	mov	r0, #1
   1b1f4:	bl	12770 <__printf_chk@plt>
   1b1f8:	ldr	r0, [r4, #24]
   1b1fc:	cmp	r0, #0
   1b200:	bne	1b20c <crc32@@Base+0x1a68>
   1b204:	add	sp, sp, #12
   1b208:	pop	{r4, r5, r6, r7, pc}
   1b20c:	ldr	r2, [r4, #20]
   1b210:	movw	r1, #37272	; 0x9198
   1b214:	ldrh	r3, [r4, #45]	; 0x2d
   1b218:	movt	r1, #3
   1b21c:	sub	r0, r0, r2
   1b220:	str	r0, [sp]
   1b224:	rev16	r4, r3
   1b228:	mov	r0, #1
   1b22c:	mov	r3, #0
   1b230:	bl	12770 <__printf_chk@plt>
   1b234:	uxth	r4, r4
   1b238:	movw	r1, #37308	; 0x91bc
   1b23c:	mov	r2, #44	; 0x2c
   1b240:	mov	r3, r4
   1b244:	movt	r1, #3
   1b248:	mov	r0, #1
   1b24c:	add	sp, sp, #12
   1b250:	pop	{r4, r5, r6, r7, lr}
   1b254:	b	12770 <__printf_chk@plt>
   1b258:	movw	r2, #65044	; 0xfe14
   1b25c:	lsr	r3, r3, #3
   1b260:	movt	r2, #4
   1b264:	mov	r1, #220	; 0xdc
   1b268:	ldr	r0, [r2]
   1b26c:	movw	r2, #37120	; 0x9100
   1b270:	str	r1, [sp]
   1b274:	movt	r2, #3
   1b278:	mov	r1, #1
   1b27c:	bl	122b4 <__fprintf_chk@plt>
   1b280:	mov	r0, #1
   1b284:	bl	121f4 <exit@plt>
   1b288:	cmp	r2, #177	; 0xb1
   1b28c:	beq	1b140 <crc32@@Base+0x199c>
   1b290:	b	1afe8 <crc32@@Base+0x1844>
   1b294:	movw	r2, #65044	; 0xfe14
   1b298:	mov	r3, r5
   1b29c:	movt	r2, #4
   1b2a0:	mov	r1, #60	; 0x3c
   1b2a4:	b	1b268 <crc32@@Base+0x1ac4>
   1b2a8:	andeq	pc, r4, r0, ror r4	; <UNPREDICTABLE>
   1b2ac:	ldr	r3, [r0, #40]	; 0x28
   1b2b0:	cmp	r3, #0
   1b2b4:	bxne	lr
   1b2b8:	movw	r3, #65452	; 0xffac
   1b2bc:	movt	r3, #4
   1b2c0:	mvn	r1, #45	; 0x2d
   1b2c4:	ldr	r3, [r3]
   1b2c8:	cmp	r3, #0
   1b2cc:	addeq	r3, r0, #48	; 0x30
   1b2d0:	ldrh	r2, [r3, #1]
   1b2d4:	rev16	r2, r2
   1b2d8:	uxth	r2, r2
   1b2dc:	cmp	r2, #4
   1b2e0:	addhi	r3, r3, r2
   1b2e4:	mov	r2, r0
   1b2e8:	strb	r1, [r2, #44]!	; 0x2c
   1b2ec:	sub	r3, r3, r2
   1b2f0:	rev16	r3, r3
   1b2f4:	mov	r2, #64	; 0x40
   1b2f8:	strh	r3, [r0, #45]	; 0x2d
   1b2fc:	strb	r2, [r0, #47]	; 0x2f
   1b300:	bx	lr
   1b304:	cmp	r0, #0
   1b308:	beq	1b38c <crc32@@Base+0x1be8>
   1b30c:	ldr	r3, [r0, #64]	; 0x40
   1b310:	ldrb	r3, [r3]
   1b314:	cmp	r3, #0
   1b318:	beq	1b360 <crc32@@Base+0x1bbc>
   1b31c:	ldr	r3, [r0]
   1b320:	ldr	r2, [r0, #8]
   1b324:	cmp	r3, #0
   1b328:	beq	1b348 <crc32@@Base+0x1ba4>
   1b32c:	cmp	r2, #0
   1b330:	bne	1b340 <crc32@@Base+0x1b9c>
   1b334:	ldr	r3, [r0, #16]
   1b338:	cmp	r3, #0
   1b33c:	beq	1b350 <crc32@@Base+0x1bac>
   1b340:	mov	r0, #1
   1b344:	bx	lr
   1b348:	cmp	r2, #0
   1b34c:	bne	1b334 <crc32@@Base+0x1b90>
   1b350:	ldr	r0, [r0, #28]
   1b354:	adds	r0, r0, #0
   1b358:	movne	r0, #1
   1b35c:	bx	lr
   1b360:	movw	r1, #65044	; 0xfe14
   1b364:	movt	r1, #4
   1b368:	ldr	r3, [r0, #80]	; 0x50
   1b36c:	movw	r2, #37564	; 0x92bc
   1b370:	push	{r4, lr}
   1b374:	movt	r2, #3
   1b378:	ldr	r0, [r1]
   1b37c:	mov	r1, #1
   1b380:	bl	122b4 <__fprintf_chk@plt>
   1b384:	mvn	r0, #0
   1b388:	pop	{r4, pc}
   1b38c:	mvn	r0, #0
   1b390:	bx	lr
   1b394:	push	{r4, lr}
   1b398:	cmp	r3, #2
   1b39c:	sub	sp, sp, #8
   1b3a0:	ldr	ip, [sp, #16]
   1b3a4:	beq	1b400 <crc32@@Base+0x1c5c>
   1b3a8:	cmp	r3, #3
   1b3ac:	beq	1b3e8 <crc32@@Base+0x1c44>
   1b3b0:	cmp	r3, #1
   1b3b4:	beq	1b3c0 <crc32@@Base+0x1c1c>
   1b3b8:	add	sp, sp, #8
   1b3bc:	pop	{r4, pc}
   1b3c0:	sub	lr, ip, #1
   1b3c4:	cmp	ip, #4
   1b3c8:	cmpne	lr, #1
   1b3cc:	bhi	1b418 <crc32@@Base+0x1c74>
   1b3d0:	ldr	r2, [sp, #20]
   1b3d4:	mov	r3, #12
   1b3d8:	mla	r0, r3, r2, r0
   1b3dc:	str	ip, [r0, #36]	; 0x24
   1b3e0:	add	sp, sp, #8
   1b3e4:	pop	{r4, pc}
   1b3e8:	ldr	r2, [sp, #20]
   1b3ec:	mov	r3, #12
   1b3f0:	mla	r0, r3, r2, r0
   1b3f4:	str	ip, [r0, #44]	; 0x2c
   1b3f8:	add	sp, sp, #8
   1b3fc:	pop	{r4, pc}
   1b400:	ldr	r2, [sp, #20]
   1b404:	mov	r3, #12
   1b408:	mla	r0, r3, r2, r0
   1b40c:	str	ip, [r0, #40]	; 0x28
   1b410:	add	sp, sp, #8
   1b414:	pop	{r4, pc}
   1b418:	movw	r0, #65044	; 0xfe14
   1b41c:	movt	r0, #4
   1b420:	mov	r4, r3
   1b424:	str	r2, [sp]
   1b428:	str	ip, [sp, #4]
   1b42c:	mov	r3, r1
   1b430:	movw	r2, #37648	; 0x9310
   1b434:	ldr	r0, [r0]
   1b438:	movt	r2, #3
   1b43c:	mov	r1, r4
   1b440:	bl	122b4 <__fprintf_chk@plt>
   1b444:	mov	r0, r4
   1b448:	bl	121f4 <exit@plt>
   1b44c:	movw	r3, #65452	; 0xffac
   1b450:	movt	r3, #4
   1b454:	ldr	r0, [r3, #24]
   1b458:	cmp	r0, #1
   1b45c:	beq	1b4ac <crc32@@Base+0x1d08>
   1b460:	cmp	r0, #2
   1b464:	bne	1b4e4 <crc32@@Base+0x1d40>
   1b468:	movw	r1, #44116	; 0xac54
   1b46c:	movw	r2, #43836	; 0xab3c
   1b470:	movt	r1, #1
   1b474:	movt	r2, #1
   1b478:	str	r1, [r3, #28]
   1b47c:	movw	r1, #45740	; 0xb2ac
   1b480:	str	r2, [r3, #32]
   1b484:	movt	r1, #1
   1b488:	movw	r2, #44448	; 0xada0
   1b48c:	str	r1, [r3, #36]	; 0x24
   1b490:	movt	r2, #1
   1b494:	mov	r1, #0
   1b498:	str	r2, [r3, #40]	; 0x28
   1b49c:	mov	r2, #220	; 0xdc
   1b4a0:	str	r1, [r3]
   1b4a4:	str	r2, [r3, #44]	; 0x2c
   1b4a8:	bx	lr
   1b4ac:	movw	r2, #45972	; 0xb394
   1b4b0:	movw	r1, #44224	; 0xacc0
   1b4b4:	movt	r2, #1
   1b4b8:	movt	r1, #1
   1b4bc:	str	r2, [r3, #28]
   1b4c0:	movw	r2, #44252	; 0xacdc
   1b4c4:	str	r1, [r3, #36]	; 0x24
   1b4c8:	movt	r2, #1
   1b4cc:	mov	r1, #0
   1b4d0:	str	r2, [r3, #40]	; 0x28
   1b4d4:	str	r1, [r3, #32]
   1b4d8:	mov	r2, #60	; 0x3c
   1b4dc:	str	r2, [r3, #44]	; 0x2c
   1b4e0:	bx	lr
   1b4e4:	push	{r4, lr}
   1b4e8:	bl	12780 <__printf_chk@plt+0x10>
   1b4ec:	push	{r4, r5, r6, r7, r8, lr}
   1b4f0:	movw	r4, #61168	; 0xeef0
   1b4f4:	movt	r4, #4
   1b4f8:	sub	sp, sp, #16
   1b4fc:	mov	r5, r0
   1b500:	mov	r8, r1
   1b504:	ldr	r3, [r4]
   1b508:	mov	r7, r2
   1b50c:	str	r3, [sp, #12]
   1b510:	bl	1268c <__errno_location@plt>
   1b514:	mov	r3, #0
   1b518:	mov	r2, #16
   1b51c:	add	r1, sp, #8
   1b520:	mov	r6, r0
   1b524:	mov	r0, r5
   1b528:	str	r3, [r6]
   1b52c:	bl	122cc <strtoul@plt>
   1b530:	ldr	r3, [r6]
   1b534:	cmp	r3, #0
   1b538:	bne	1b560 <crc32@@Base+0x1dbc>
   1b53c:	ldr	r3, [sp, #8]
   1b540:	cmp	r3, r5
   1b544:	beq	1b560 <crc32@@Base+0x1dbc>
   1b548:	ldr	r2, [sp, #12]
   1b54c:	ldr	r3, [r4]
   1b550:	cmp	r2, r3
   1b554:	bne	1b590 <crc32@@Base+0x1dec>
   1b558:	add	sp, sp, #16
   1b55c:	pop	{r4, r5, r6, r7, r8, pc}
   1b560:	movw	r1, #65044	; 0xfe14
   1b564:	movt	r1, #4
   1b568:	str	r5, [sp, #4]
   1b56c:	mov	r3, r8
   1b570:	str	r7, [sp]
   1b574:	movw	r2, #25540	; 0x63c4
   1b578:	ldr	r0, [r1]
   1b57c:	movt	r2, #3
   1b580:	mov	r1, #1
   1b584:	bl	122b4 <__fprintf_chk@plt>
   1b588:	mov	r0, #1
   1b58c:	bl	121f4 <exit@plt>
   1b590:	bl	12494 <__stack_chk_fail@plt>
   1b594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b598:	movw	r3, #61168	; 0xeef0
   1b59c:	sub	sp, sp, #156	; 0x9c
   1b5a0:	movt	r3, #4
   1b5a4:	mov	fp, r1
   1b5a8:	mov	r4, #0
   1b5ac:	str	r3, [sp, #32]
   1b5b0:	ldr	r3, [r3]
   1b5b4:	str	r0, [sp, #20]
   1b5b8:	mov	r0, r1
   1b5bc:	movw	r1, #49540	; 0xc184
   1b5c0:	movt	r1, #3
   1b5c4:	str	r3, [sp, #148]	; 0x94
   1b5c8:	str	r4, [sp, #40]	; 0x28
   1b5cc:	bl	1232c <fopen@plt>
   1b5d0:	subs	r3, r0, #0
   1b5d4:	str	r3, [sp, #24]
   1b5d8:	beq	1bd80 <crc32@@Base+0x25dc>
   1b5dc:	movw	r8, #62572	; 0xf46c
   1b5e0:	movt	r8, #4
   1b5e4:	str	fp, [sp, #12]
   1b5e8:	mov	r7, r4
   1b5ec:	mov	fp, r8
   1b5f0:	movw	r3, #25472	; 0x6380
   1b5f4:	str	r4, [sp, #16]
   1b5f8:	movt	r3, #3
   1b5fc:	str	r3, [sp, #28]
   1b600:	ldr	r3, [sp, #24]
   1b604:	mov	r2, #10
   1b608:	add	r1, sp, #52	; 0x34
   1b60c:	add	r0, sp, #40	; 0x28
   1b610:	bl	12134 <__getdelim@plt>
   1b614:	cmp	r0, #0
   1b618:	ble	1bb40 <crc32@@Base+0x239c>
   1b61c:	add	r2, sp, #44	; 0x2c
   1b620:	ldr	r1, [sp, #28]
   1b624:	ldr	r0, [sp, #40]	; 0x28
   1b628:	add	r7, r7, #1
   1b62c:	bl	12224 <__strtok_r@plt>
   1b630:	cmp	r0, #0
   1b634:	beq	1b600 <crc32@@Base+0x1e5c>
   1b638:	mov	r9, #0
   1b63c:	movw	r5, #25476	; 0x6384
   1b640:	movt	r5, #3
   1b644:	mov	r8, r9
   1b648:	str	r0, [sp, #40]	; 0x28
   1b64c:	add	r2, sp, #48	; 0x30
   1b650:	mov	r1, r5
   1b654:	bl	12224 <__strtok_r@plt>
   1b658:	subs	r4, r0, #0
   1b65c:	beq	1b600 <crc32@@Base+0x1e5c>
   1b660:	ldrb	r3, [r4]
   1b664:	cmp	r3, #35	; 0x23
   1b668:	beq	1b600 <crc32@@Base+0x1e5c>
   1b66c:	cmp	r8, #3
   1b670:	ldrls	pc, [pc, r8, lsl #2]
   1b674:	b	1b7ac <crc32@@Base+0x2008>
   1b678:	andeq	fp, r1, r8, lsl #13
   1b67c:			; <UNDEFINED> instruction: 0x0001b6b4
   1b680:	andeq	fp, r1, ip, ror #13
   1b684:	andeq	fp, r1, ip, ror #13
   1b688:	movw	r1, #37728	; 0x9360
   1b68c:	mov	r2, r4
   1b690:	movt	r1, #3
   1b694:	ldr	r0, [pc, #1804]	; 1bda8 <crc32@@Base+0x2604>
   1b698:	bl	1a620 <crc32@@Base+0xe7c>
   1b69c:	subs	r9, r0, #0
   1b6a0:	blt	1bbb4 <crc32@@Base+0x2410>
   1b6a4:	mov	r8, #1
   1b6a8:	mov	r0, #0
   1b6ac:	str	r0, [sp, #40]	; 0x28
   1b6b0:	b	1b64c <crc32@@Base+0x1ea8>
   1b6b4:	sub	r3, r9, #1
   1b6b8:	cmp	r3, #9
   1b6bc:	ldrls	pc, [pc, r3, lsl #2]
   1b6c0:	b	1b828 <crc32@@Base+0x2084>
   1b6c4:	andeq	fp, r1, r4, lsl #19
   1b6c8:	andeq	fp, r1, r4, asr #17
   1b6cc:	andeq	fp, r1, r0, lsr r8
   1b6d0:			; <UNDEFINED> instruction: 0x0001b7b4
   1b6d4:			; <UNDEFINED> instruction: 0x0001b7b4
   1b6d8:			; <UNDEFINED> instruction: 0x0001b7b4
   1b6dc:			; <UNDEFINED> instruction: 0x0001b7b4
   1b6e0:			; <UNDEFINED> instruction: 0x0001b7b4
   1b6e4:	andeq	fp, r1, ip, lsr r9
   1b6e8:	andeq	fp, r1, r8, asr #19
   1b6ec:	cmp	r9, #4
   1b6f0:	blt	1b7ac <crc32@@Base+0x2008>
   1b6f4:	cmp	r9, #8
   1b6f8:	bgt	1bb2c <crc32@@Base+0x2388>
   1b6fc:	mov	r0, r4
   1b700:	mov	r2, r7
   1b704:	ldr	r1, [sp, #12]
   1b708:	movw	r6, #65452	; 0xffac
   1b70c:	bl	1b4ec <crc32@@Base+0x1d48>
   1b710:	movt	r6, #4
   1b714:	ldr	r3, [r6, #32]
   1b718:	cmp	r3, #0
   1b71c:	mov	r4, r0
   1b720:	beq	1b734 <crc32@@Base+0x1f90>
   1b724:	mov	r2, r9
   1b728:	ldr	r1, [sp, #16]
   1b72c:	ldr	r0, [sp, #20]
   1b730:	blx	r3
   1b734:	ldr	r3, [sp, #16]
   1b738:	mov	r2, r7
   1b73c:	str	r4, [sp]
   1b740:	ldr	r1, [sp, #12]
   1b744:	str	r3, [sp, #4]
   1b748:	mov	r3, r8
   1b74c:	ldr	r4, [r6, #28]
   1b750:	ldr	r0, [sp, #20]
   1b754:	blx	r4
   1b758:	cmp	r8, #3
   1b75c:	movne	r8, #3
   1b760:	bne	1b6a8 <crc32@@Base+0x1f04>
   1b764:	ldr	r2, [sp, #16]
   1b768:	ldr	r3, [r6, #44]	; 0x2c
   1b76c:	add	r2, r2, #1
   1b770:	str	r2, [sp, #16]
   1b774:	cmp	r2, r3
   1b778:	bhi	1bce4 <crc32@@Base+0x2540>
   1b77c:	mov	r3, #0
   1b780:	add	r2, sp, #48	; 0x30
   1b784:	mov	r0, r3
   1b788:	mov	r1, r5
   1b78c:	str	r3, [sp, #40]	; 0x28
   1b790:	bl	12224 <__strtok_r@plt>
   1b794:	cmp	r0, #0
   1b798:	beq	1b600 <crc32@@Base+0x1e5c>
   1b79c:	ldrb	r3, [r0]
   1b7a0:	cmp	r3, #35	; 0x23
   1b7a4:	beq	1b600 <crc32@@Base+0x1e5c>
   1b7a8:	mov	r8, #4
   1b7ac:	add	r8, r8, #1
   1b7b0:	b	1b6a8 <crc32@@Base+0x1f04>
   1b7b4:	mov	r0, r4
   1b7b8:	mov	r2, r7
   1b7bc:	ldr	r1, [sp, #12]
   1b7c0:	movw	r6, #65452	; 0xffac
   1b7c4:	bl	1b4ec <crc32@@Base+0x1d48>
   1b7c8:	movt	r6, #4
   1b7cc:	ldr	r3, [r6, #32]
   1b7d0:	cmp	r3, #0
   1b7d4:	mov	r4, r0
   1b7d8:	beq	1b7ec <crc32@@Base+0x2048>
   1b7dc:	mov	r2, r9
   1b7e0:	ldr	r1, [sp, #16]
   1b7e4:	ldr	r0, [sp, #20]
   1b7e8:	blx	r3
   1b7ec:	ldr	r3, [sp, #16]
   1b7f0:	mov	r2, r7
   1b7f4:	str	r4, [sp]
   1b7f8:	ldr	r1, [sp, #12]
   1b7fc:	str	r3, [sp, #4]
   1b800:	mov	r3, #1
   1b804:	ldr	r4, [r6, #28]
   1b808:	ldr	r0, [sp, #20]
   1b80c:	blx	r4
   1b810:	ldr	r3, [fp, #172]	; 0xac
   1b814:	cmp	r3, #1
   1b818:	movne	r3, #0
   1b81c:	movne	r8, #2
   1b820:	strne	r3, [fp, #172]	; 0xac
   1b824:	bne	1b6a8 <crc32@@Base+0x1f04>
   1b828:	mov	r8, #2
   1b82c:	b	1b6a8 <crc32@@Base+0x1f04>
   1b830:	mov	r0, r4
   1b834:	mov	r2, r7
   1b838:	ldr	r1, [sp, #12]
   1b83c:	bl	1b4ec <crc32@@Base+0x1d48>
   1b840:	ldr	r3, [fp, #172]	; 0xac
   1b844:	cmp	r3, #1
   1b848:	addeq	r2, sp, #48	; 0x30
   1b84c:	moveq	r4, #0
   1b850:	str	r0, [fp, #272]	; 0x110
   1b854:	moveq	r0, r4
   1b858:	bne	1bba0 <crc32@@Base+0x23fc>
   1b85c:	mov	r1, r5
   1b860:	str	r4, [sp, #40]	; 0x28
   1b864:	bl	12224 <__strtok_r@plt>
   1b868:	cmp	r0, #0
   1b86c:	beq	1b600 <crc32@@Base+0x1e5c>
   1b870:	ldrb	r3, [r0]
   1b874:	cmp	r3, #35	; 0x23
   1b878:	beq	1b600 <crc32@@Base+0x1e5c>
   1b87c:	add	r2, sp, #48	; 0x30
   1b880:	mov	r1, r5
   1b884:	mov	r0, r4
   1b888:	str	r4, [sp, #40]	; 0x28
   1b88c:	bl	12224 <__strtok_r@plt>
   1b890:	cmp	r0, #0
   1b894:	beq	1b600 <crc32@@Base+0x1e5c>
   1b898:	ldrb	r3, [r0]
   1b89c:	cmp	r3, #35	; 0x23
   1b8a0:	beq	1b600 <crc32@@Base+0x1e5c>
   1b8a4:	mov	r0, r4
   1b8a8:	add	r2, sp, #48	; 0x30
   1b8ac:	mov	r1, r5
   1b8b0:	str	r4, [sp, #40]	; 0x28
   1b8b4:	bl	12224 <__strtok_r@plt>
   1b8b8:	cmp	r0, #0
   1b8bc:	bne	1b79c <crc32@@Base+0x1ff8>
   1b8c0:	b	1b600 <crc32@@Base+0x1e5c>
   1b8c4:	movw	r1, #37884	; 0x93fc
   1b8c8:	mov	r2, r4
   1b8cc:	movt	r1, #3
   1b8d0:	ldr	r0, [pc, #1236]	; 1bdac <crc32@@Base+0x2608>
   1b8d4:	bl	1a620 <crc32@@Base+0xe7c>
   1b8d8:	cmn	r0, #1
   1b8dc:	str	r0, [fp, #272]	; 0x110
   1b8e0:	beq	1bcb0 <crc32@@Base+0x250c>
   1b8e4:	movw	r1, #37884	; 0x93fc
   1b8e8:	mov	r2, r4
   1b8ec:	movt	r1, #3
   1b8f0:	ldr	r0, [pc, #1208]	; 1bdb0 <crc32@@Base+0x260c>
   1b8f4:	bl	1a620 <crc32@@Base+0xe7c>
   1b8f8:	movw	r6, #65452	; 0xffac
   1b8fc:	movt	r6, #4
   1b900:	cmn	r0, #1
   1b904:	str	r0, [r6, #4]
   1b908:	beq	1bcb0 <crc32@@Base+0x250c>
   1b90c:	ldr	r3, [fp, #272]	; 0x110
   1b910:	mov	r4, #0
   1b914:	add	r2, sp, #48	; 0x30
   1b918:	mov	r1, r5
   1b91c:	cmp	r0, r3
   1b920:	mov	r0, r4
   1b924:	strcc	r3, [r6, #4]
   1b928:	ldr	r3, [fp, #172]	; 0xac
   1b92c:	cmp	r3, #1
   1b930:	beq	1b860 <crc32@@Base+0x20bc>
   1b934:	str	r4, [fp, #172]	; 0xac
   1b938:	b	1b860 <crc32@@Base+0x20bc>
   1b93c:	movw	r6, #65452	; 0xffac
   1b940:	movt	r6, #4
   1b944:	ldr	r3, [r6, #24]
   1b948:	cmp	r3, #2
   1b94c:	bne	1bc7c <crc32@@Base+0x24d8>
   1b950:	mov	r0, r4
   1b954:	mov	r2, r7
   1b958:	ldr	r1, [sp, #12]
   1b95c:	mov	r4, #0
   1b960:	bl	1b4ec <crc32@@Base+0x1d48>
   1b964:	ldr	r3, [fp, #172]	; 0xac
   1b968:	add	r2, sp, #48	; 0x30
   1b96c:	mov	r1, r5
   1b970:	cmp	r3, #1
   1b974:	str	r0, [fp]
   1b978:	mov	r0, r4
   1b97c:	beq	1b860 <crc32@@Base+0x20bc>
   1b980:	b	1b934 <crc32@@Base+0x2190>
   1b984:	mov	r0, r4
   1b988:	mov	r2, r7
   1b98c:	ldr	r1, [sp, #12]
   1b990:	movw	r6, #65452	; 0xffac
   1b994:	bl	1b4ec <crc32@@Base+0x1d48>
   1b998:	ldr	r3, [fp, #172]	; 0xac
   1b99c:	movt	r6, #4
   1b9a0:	cmp	r3, #0
   1b9a4:	str	r0, [r6, #24]
   1b9a8:	beq	1bc4c <crc32@@Base+0x24a8>
   1b9ac:	mov	r4, #0
   1b9b0:	mov	r3, #1
   1b9b4:	str	r3, [fp, #172]	; 0xac
   1b9b8:	bl	1b44c <crc32@@Base+0x1ca8>
   1b9bc:	mov	r0, r4
   1b9c0:	add	r2, sp, #48	; 0x30
   1b9c4:	b	1b85c <crc32@@Base+0x20b8>
   1b9c8:	movw	r6, #65452	; 0xffac
   1b9cc:	movt	r6, #4
   1b9d0:	mov	r1, #0
   1b9d4:	mov	r0, r4
   1b9d8:	mov	sl, #1
   1b9dc:	str	sl, [r6, #48]	; 0x30
   1b9e0:	bl	12434 <open@plt>
   1b9e4:	ldr	r3, [sp, #20]
   1b9e8:	add	r3, r3, #44	; 0x2c
   1b9ec:	str	r3, [sp, #36]	; 0x24
   1b9f0:	subs	r9, r0, #0
   1b9f4:	blt	1bc24 <crc32@@Base+0x2480>
   1b9f8:	add	r2, sp, #56	; 0x38
   1b9fc:	mov	r1, r9
   1ba00:	mov	r0, #3
   1ba04:	bl	12554 <__fxstat@plt>
   1ba08:	cmp	r0, #0
   1ba0c:	blt	1bbe8 <crc32@@Base+0x2444>
   1ba10:	mov	r8, #0
   1ba14:	mov	r3, sl
   1ba18:	ldr	r1, [sp, #100]	; 0x64
   1ba1c:	mov	r0, r8
   1ba20:	str	r9, [sp]
   1ba24:	mov	r2, sl
   1ba28:	str	r8, [sp, #4]
   1ba2c:	bl	123ec <mmap@plt>
   1ba30:	cmn	r0, #1
   1ba34:	mov	r3, r0
   1ba38:	beq	1bd2c <crc32@@Base+0x2588>
   1ba3c:	ldr	r4, [sp, #100]	; 0x64
   1ba40:	cmp	r4, #65536	; 0x10000
   1ba44:	bgt	1bd18 <crc32@@Base+0x2574>
   1ba48:	mov	r2, r4
   1ba4c:	mov	r1, r3
   1ba50:	ldr	r0, [sp, #36]	; 0x24
   1ba54:	str	r3, [sp, #36]	; 0x24
   1ba58:	bl	1259c <memcpy@plt>
   1ba5c:	ldr	r3, [sp, #36]	; 0x24
   1ba60:	mov	r1, r4
   1ba64:	str	r4, [r6, #20]
   1ba68:	mov	r0, r3
   1ba6c:	bl	125e4 <munmap@plt>
   1ba70:	mov	r0, r9
   1ba74:	bl	12314 <close@plt>
   1ba78:	ldr	r3, [sp, #20]
   1ba7c:	mov	r0, r8
   1ba80:	add	r2, sp, #48	; 0x30
   1ba84:	mov	r1, r5
   1ba88:	str	r8, [sp, #40]	; 0x28
   1ba8c:	str	sl, [r3, #40]	; 0x28
   1ba90:	bl	12224 <__strtok_r@plt>
   1ba94:	subs	r4, r0, #0
   1ba98:	beq	1b600 <crc32@@Base+0x1e5c>
   1ba9c:	ldrb	r3, [r4]
   1baa0:	cmp	r3, #35	; 0x23
   1baa4:	beq	1b600 <crc32@@Base+0x1e5c>
   1baa8:	mov	r8, #2
   1baac:	mov	r9, #0
   1bab0:	mov	r0, r4
   1bab4:	mov	r2, r7
   1bab8:	ldr	r1, [sp, #12]
   1babc:	bl	1b4ec <crc32@@Base+0x1d48>
   1bac0:	add	r2, sp, #48	; 0x30
   1bac4:	mov	r1, r5
   1bac8:	str	r9, [sp, #40]	; 0x28
   1bacc:	add	r8, r8, #1
   1bad0:	str	r0, [r6, #16]
   1bad4:	mov	r0, #0
   1bad8:	bl	12224 <__strtok_r@plt>
   1badc:	cmp	r0, #0
   1bae0:	beq	1b600 <crc32@@Base+0x1e5c>
   1bae4:	ldrb	r3, [r0]
   1bae8:	cmp	r3, #35	; 0x23
   1baec:	beq	1b600 <crc32@@Base+0x1e5c>
   1baf0:	cmp	r8, #3
   1baf4:	beq	1bab4 <crc32@@Base+0x2310>
   1baf8:	add	r2, sp, #48	; 0x30
   1bafc:	mov	r1, r5
   1bb00:	mov	r0, #0
   1bb04:	str	r9, [sp, #40]	; 0x28
   1bb08:	bl	12224 <__strtok_r@plt>
   1bb0c:	cmp	r0, #0
   1bb10:	beq	1b600 <crc32@@Base+0x1e5c>
   1bb14:	ldrb	r3, [r0]
   1bb18:	cmp	r3, #35	; 0x23
   1bb1c:	beq	1b600 <crc32@@Base+0x1e5c>
   1bb20:	mov	r9, #10
   1bb24:	mov	r8, #5
   1bb28:	b	1b7ac <crc32@@Base+0x2008>
   1bb2c:	cmp	r9, #10
   1bb30:	bne	1b7ac <crc32@@Base+0x2008>
   1bb34:	movw	r6, #65452	; 0xffac
   1bb38:	movt	r6, #4
   1bb3c:	b	1baac <crc32@@Base+0x2308>
   1bb40:	ldr	fp, [sp, #12]
   1bb44:	movw	r2, #65452	; 0xffac
   1bb48:	movt	r2, #4
   1bb4c:	mov	r3, r7
   1bb50:	ldr	r0, [sp, #20]
   1bb54:	ldr	r4, [r2, #36]	; 0x24
   1bb58:	mov	r2, fp
   1bb5c:	ldr	r1, [sp, #16]
   1bb60:	blx	r4
   1bb64:	ldr	r0, [sp, #24]
   1bb68:	bl	125fc <fclose@plt>
   1bb6c:	movw	r3, #62572	; 0xf46c
   1bb70:	movt	r3, #4
   1bb74:	ldr	r3, [r3, #272]	; 0x110
   1bb78:	cmn	r3, #1
   1bb7c:	beq	1bd58 <crc32@@Base+0x25b4>
   1bb80:	ldr	r3, [sp, #32]
   1bb84:	ldr	r2, [sp, #148]	; 0x94
   1bb88:	ldr	r0, [sp, #16]
   1bb8c:	ldr	r3, [r3]
   1bb90:	cmp	r2, r3
   1bb94:	bne	1bd54 <crc32@@Base+0x25b0>
   1bb98:	add	sp, sp, #156	; 0x9c
   1bb9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bba0:	mov	r4, #0
   1bba4:	add	r2, sp, #48	; 0x30
   1bba8:	mov	r0, r4
   1bbac:	mov	r1, r5
   1bbb0:	b	1b934 <crc32@@Base+0x2190>
   1bbb4:	ldr	fp, [sp, #12]
   1bbb8:	movw	r2, #65044	; 0xfe14
   1bbbc:	movt	r2, #4
   1bbc0:	str	r4, [sp, #4]
   1bbc4:	mov	r1, #1
   1bbc8:	ldr	r0, [r2]
   1bbcc:	mov	r3, fp
   1bbd0:	movw	r2, #25500	; 0x639c
   1bbd4:	str	r7, [sp]
   1bbd8:	movt	r2, #3
   1bbdc:	bl	122b4 <__fprintf_chk@plt>
   1bbe0:	mov	r0, #1
   1bbe4:	bl	121f4 <exit@plt>
   1bbe8:	movw	r3, #65044	; 0xfe14
   1bbec:	movt	r3, #4
   1bbf0:	ldr	r5, [r3]
   1bbf4:	bl	1268c <__errno_location@plt>
   1bbf8:	ldr	r0, [r0]
   1bbfc:	bl	12200 <strerror@plt>
   1bc00:	movw	r2, #25420	; 0x634c
   1bc04:	movt	r2, #3
   1bc08:	mov	r3, r4
   1bc0c:	str	r0, [sp]
   1bc10:	mov	r1, sl
   1bc14:	mov	r0, r5
   1bc18:	bl	122b4 <__fprintf_chk@plt>
   1bc1c:	mov	r0, sl
   1bc20:	bl	121f4 <exit@plt>
   1bc24:	movw	r3, #65044	; 0xfe14
   1bc28:	movt	r3, #4
   1bc2c:	ldr	r5, [r3]
   1bc30:	bl	1268c <__errno_location@plt>
   1bc34:	ldr	r0, [r0]
   1bc38:	bl	12200 <strerror@plt>
   1bc3c:	movw	r2, #25396	; 0x6334
   1bc40:	mov	r3, r4
   1bc44:	movt	r2, #3
   1bc48:	b	1bc0c <crc32@@Base+0x2468>
   1bc4c:	ldr	fp, [sp, #12]
   1bc50:	movw	r2, #65044	; 0xfe14
   1bc54:	movt	r2, #4
   1bc58:	str	r7, [sp]
   1bc5c:	mov	r1, #1
   1bc60:	ldr	r0, [r2]
   1bc64:	mov	r3, fp
   1bc68:	movw	r2, #37748	; 0x9374
   1bc6c:	movt	r2, #3
   1bc70:	bl	122b4 <__fprintf_chk@plt>
   1bc74:	mov	r0, #1
   1bc78:	bl	121f4 <exit@plt>
   1bc7c:	ldr	fp, [sp, #12]
   1bc80:	movw	r1, #65044	; 0xfe14
   1bc84:	movt	r1, #4
   1bc88:	str	r4, [sp, #4]
   1bc8c:	str	r7, [sp]
   1bc90:	movw	r2, #37908	; 0x9414
   1bc94:	ldr	r0, [r1]
   1bc98:	mov	r3, fp
   1bc9c:	movt	r2, #3
   1bca0:	mov	r1, #1
   1bca4:	bl	122b4 <__fprintf_chk@plt>
   1bca8:	mov	r0, #1
   1bcac:	bl	121f4 <exit@plt>
   1bcb0:	ldr	fp, [sp, #12]
   1bcb4:	movw	r1, #65044	; 0xfe14
   1bcb8:	movt	r1, #4
   1bcbc:	str	r4, [sp, #4]
   1bcc0:	str	r7, [sp]
   1bcc4:	movw	r2, #37844	; 0x93d4
   1bcc8:	ldr	r0, [r1]
   1bccc:	mov	r3, fp
   1bcd0:	movt	r2, #3
   1bcd4:	mov	r1, #1
   1bcd8:	bl	122b4 <__fprintf_chk@plt>
   1bcdc:	mov	r0, #1
   1bce0:	bl	121f4 <exit@plt>
   1bce4:	ldr	fp, [sp, #12]
   1bce8:	movw	r1, #65044	; 0xfe14
   1bcec:	movt	r1, #4
   1bcf0:	str	r3, [sp, #4]
   1bcf4:	str	r7, [sp]
   1bcf8:	movw	r2, #37996	; 0x946c
   1bcfc:	ldr	r0, [r1]
   1bd00:	mov	r3, fp
   1bd04:	movt	r2, #3
   1bd08:	mov	r1, #1
   1bd0c:	bl	122b4 <__fprintf_chk@plt>
   1bd10:	mov	r0, #1
   1bd14:	bl	121f4 <exit@plt>
   1bd18:	movw	r0, #37964	; 0x944c
   1bd1c:	movt	r0, #3
   1bd20:	bl	1226c <puts@plt>
   1bd24:	mov	r0, sl
   1bd28:	bl	121f4 <exit@plt>
   1bd2c:	movw	r3, #65044	; 0xfe14
   1bd30:	movt	r3, #4
   1bd34:	ldr	r5, [r3]
   1bd38:	bl	1268c <__errno_location@plt>
   1bd3c:	ldr	r0, [r0]
   1bd40:	bl	12200 <strerror@plt>
   1bd44:	movw	r2, #27000	; 0x6978
   1bd48:	mov	r3, r4
   1bd4c:	movt	r2, #3
   1bd50:	b	1bc0c <crc32@@Base+0x2468>
   1bd54:	bl	12494 <__stack_chk_fail@plt>
   1bd58:	movw	r1, #65044	; 0xfe14
   1bd5c:	movt	r1, #4
   1bd60:	mov	r3, fp
   1bd64:	movw	r2, #38048	; 0x94a0
   1bd68:	ldr	r0, [r1]
   1bd6c:	movt	r2, #3
   1bd70:	mov	r1, #1
   1bd74:	bl	122b4 <__fprintf_chk@plt>
   1bd78:	mov	r0, #1
   1bd7c:	bl	121f4 <exit@plt>
   1bd80:	movw	r1, #65044	; 0xfe14
   1bd84:	movt	r1, #4
   1bd88:	mov	r3, fp
   1bd8c:	movw	r2, #37692	; 0x933c
   1bd90:	ldr	r0, [r1]
   1bd94:	movt	r2, #3
   1bd98:	mov	r1, #1
   1bd9c:	bl	122b4 <__fprintf_chk@plt>
   1bda0:	mov	r0, #1
   1bda4:	bl	121f4 <exit@plt>
   1bda8:	muleq	r4, r4, r4
   1bdac:	andeq	pc, r4, r0, lsl #11
   1bdb0:	andeq	pc, r4, ip, lsl r5	; <UNPREDICTABLE>
   1bdb4:	push	{r4, r5, r6, r7, r8, lr}
   1bdb8:	movw	r4, #65452	; 0xffac
   1bdbc:	movw	r5, #62572	; 0xf46c
   1bdc0:	movt	r4, #4
   1bdc4:	movt	r5, #4
   1bdc8:	mov	r8, r0
   1bdcc:	mov	r6, r3
   1bdd0:	mov	r2, #1
   1bdd4:	mov	r7, r1
   1bdd8:	str	r2, [r4, #24]
   1bddc:	mvn	r3, #0
   1bde0:	str	r3, [r5, #272]	; 0x110
   1bde4:	mov	r3, #0
   1bde8:	str	r3, [r5]
   1bdec:	bl	1b44c <crc32@@Base+0x1ca8>
   1bdf0:	ldr	r1, [r6, #64]	; 0x40
   1bdf4:	mov	r0, r8
   1bdf8:	bl	1b594 <crc32@@Base+0x1df0>
   1bdfc:	ldr	r3, [r4, #24]
   1be00:	cmp	r3, #1
   1be04:	moveq	r2, #28
   1be08:	mov	r1, r0
   1be0c:	beq	1be28 <crc32@@Base+0x2684>
   1be10:	ldr	r0, [r4, #48]	; 0x30
   1be14:	mov	r3, #44	; 0x2c
   1be18:	movt	r3, #1
   1be1c:	movw	r2, #1816	; 0x718
   1be20:	cmp	r0, #0
   1be24:	movne	r2, r3
   1be28:	ldr	r3, [r5, #272]	; 0x110
   1be2c:	ldr	r0, [r4, #4]
   1be30:	add	r2, r3, r2
   1be34:	cmp	r2, r0
   1be38:	mov	r0, r8
   1be3c:	strhi	r2, [r4, #4]
   1be40:	ldr	r8, [r4, #40]	; 0x28
   1be44:	ldr	r2, [r6, #60]	; 0x3c
   1be48:	blx	r8
   1be4c:	ldr	r3, [r5, #272]	; 0x110
   1be50:	ldr	r0, [r7, #44]	; 0x2c
   1be54:	add	r3, r3, #4080	; 0xff0
   1be58:	ldr	r1, [r4, #12]
   1be5c:	add	r3, r3, #15
   1be60:	ldr	r2, [r4, #8]
   1be64:	add	r3, r3, r0
   1be68:	cmp	r1, #0
   1be6c:	bic	r3, r3, #4080	; 0xff0
   1be70:	bic	r3, r3, #15
   1be74:	str	r3, [r2]
   1be78:	popeq	{r4, r5, r6, r7, r8, pc}
   1be7c:	ldr	ip, [r5]
   1be80:	cmp	ip, #0
   1be84:	popeq	{r4, r5, r6, r7, r8, pc}
   1be88:	ldr	r0, [r6, #60]	; 0x3c
   1be8c:	ldr	lr, [r4, #4]
   1be90:	sub	r0, r0, lr
   1be94:	add	r3, r0, r3
   1be98:	str	r3, [r1]
   1be9c:	ldr	r3, [r2]
   1bea0:	add	ip, r3, ip
   1bea4:	str	ip, [r2]
   1bea8:	pop	{r4, r5, r6, r7, r8, pc}
   1beac:	push	{r4, r5, r6, r7, r8, r9, lr}
   1beb0:	movw	r6, #61168	; 0xeef0
   1beb4:	movt	r6, #4
   1beb8:	sub	sp, sp, #108	; 0x6c
   1bebc:	movw	r4, #65452	; 0xffac
   1bec0:	movw	r5, #62572	; 0xf46c
   1bec4:	ldr	r3, [r6]
   1bec8:	movt	r4, #4
   1becc:	movt	r5, #4
   1bed0:	mov	r7, r0
   1bed4:	mov	r8, r1
   1bed8:	mov	r2, #44	; 0x2c
   1bedc:	mov	r1, #0
   1bee0:	movt	r2, #1
   1bee4:	movw	r0, #65504	; 0xffe0
   1bee8:	movt	r0, #4
   1beec:	str	r3, [sp, #100]	; 0x64
   1bef0:	ldr	r9, [r7, #72]	; 0x48
   1bef4:	bl	122e4 <memset@plt>
   1bef8:	mvn	r2, #0
   1befc:	mov	r3, #1
   1bf00:	str	r2, [r5, #272]	; 0x110
   1bf04:	str	r3, [r4, #24]
   1bf08:	mov	r3, #0
   1bf0c:	str	r3, [r5]
   1bf10:	bl	1b44c <crc32@@Base+0x1ca8>
   1bf14:	ldr	r1, [r7, #64]	; 0x40
   1bf18:	movw	r0, #65504	; 0xffe0
   1bf1c:	movt	r0, #4
   1bf20:	bl	1b594 <crc32@@Base+0x1df0>
   1bf24:	ldr	r3, [r4, #24]
   1bf28:	cmp	r3, #1
   1bf2c:	moveq	r2, #760	; 0x2f8
   1bf30:	beq	1bf4c <crc32@@Base+0x27a8>
   1bf34:	ldr	r1, [r4, #48]	; 0x30
   1bf38:	movw	r3, #1816	; 0x718
   1bf3c:	mov	r2, #44	; 0x2c
   1bf40:	movt	r2, #1
   1bf44:	cmp	r1, #0
   1bf48:	moveq	r2, r3
   1bf4c:	ldr	r0, [r5, #272]	; 0x110
   1bf50:	ldr	r3, [r4, #4]
   1bf54:	add	r1, r0, r2
   1bf58:	cmp	r1, r3
   1bf5c:	bhi	1bfd0 <crc32@@Base+0x282c>
   1bf60:	sub	r4, r3, r0
   1bf64:	cmp	r2, r4
   1bf68:	bhi	1bfdc <crc32@@Base+0x2838>
   1bf6c:	mov	r1, #1
   1bf70:	mov	r0, r4
   1bf74:	bl	12518 <calloc@plt>
   1bf78:	cmp	r0, #0
   1bf7c:	beq	1c04c <crc32@@Base+0x28a8>
   1bf80:	str	r0, [r8, #8]
   1bf84:	add	r2, sp, #8
   1bf88:	str	r4, [r8, #4]
   1bf8c:	mov	r1, r9
   1bf90:	mov	r0, #3
   1bf94:	bl	12620 <__xstat@plt>
   1bf98:	cmp	r0, #0
   1bf9c:	blt	1c008 <crc32@@Base+0x2864>
   1bfa0:	ldr	r0, [sp, #52]	; 0x34
   1bfa4:	ldr	r1, [sp, #100]	; 0x64
   1bfa8:	add	r3, r0, #4080	; 0xff0
   1bfac:	ldr	r2, [r6]
   1bfb0:	add	r3, r3, #15
   1bfb4:	bic	r3, r3, #4080	; 0xff0
   1bfb8:	cmp	r1, r2
   1bfbc:	bic	r3, r3, #15
   1bfc0:	sub	r0, r3, r0
   1bfc4:	bne	1c004 <crc32@@Base+0x2860>
   1bfc8:	add	sp, sp, #108	; 0x6c
   1bfcc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bfd0:	str	r1, [r4, #4]
   1bfd4:	mov	r4, r2
   1bfd8:	b	1bf6c <crc32@@Base+0x27c8>
   1bfdc:	movw	r1, #65044	; 0xfe14
   1bfe0:	movt	r1, #4
   1bfe4:	ldr	r3, [r7, #80]	; 0x50
   1bfe8:	movw	r2, #38080	; 0x94c0
   1bfec:	ldr	r0, [r1]
   1bff0:	movt	r2, #3
   1bff4:	mov	r1, #1
   1bff8:	bl	122b4 <__fprintf_chk@plt>
   1bffc:	mov	r0, #1
   1c000:	bl	121f4 <exit@plt>
   1c004:	bl	12494 <__stack_chk_fail@plt>
   1c008:	movw	r2, #65044	; 0xfe14
   1c00c:	movt	r2, #4
   1c010:	ldr	r5, [r7, #80]	; 0x50
   1c014:	ldr	r4, [r2]
   1c018:	bl	1268c <__errno_location@plt>
   1c01c:	ldr	r0, [r0]
   1c020:	bl	12200 <strerror@plt>
   1c024:	mov	r3, r5
   1c028:	str	r9, [sp]
   1c02c:	movw	r2, #25416	; 0x6348
   1c030:	mov	r1, #1
   1c034:	movt	r2, #3
   1c038:	str	r0, [sp, #4]
   1c03c:	mov	r0, r4
   1c040:	bl	122b4 <__fprintf_chk@plt>
   1c044:	mov	r0, #1
   1c048:	bl	121f4 <exit@plt>
   1c04c:	movw	r2, #65044	; 0xfe14
   1c050:	movt	r2, #4
   1c054:	ldr	r5, [r7, #80]	; 0x50
   1c058:	ldr	r4, [r2]
   1c05c:	bl	1268c <__errno_location@plt>
   1c060:	ldr	r0, [r0]
   1c064:	bl	12200 <strerror@plt>
   1c068:	mov	r3, r5
   1c06c:	movw	r2, #25440	; 0x6360
   1c070:	mov	r1, #1
   1c074:	movt	r2, #3
   1c078:	str	r0, [sp]
   1c07c:	mov	r0, r4
   1c080:	bl	122b4 <__fprintf_chk@plt>
   1c084:	mov	r0, #1
   1c088:	bl	121f4 <exit@plt>
   1c08c:	mov	r0, #0
   1c090:	bx	lr
   1c094:	bx	lr
   1c098:	bx	lr
   1c09c:	subs	r0, r0, #38	; 0x26
   1c0a0:	movne	r0, #1
   1c0a4:	bx	lr
   1c0a8:	push	{r4, r5, r6, lr}
   1c0ac:	mov	r5, r1
   1c0b0:	sub	sp, sp, #8
   1c0b4:	mov	r6, r0
   1c0b8:	mov	r1, #0
   1c0bc:	mov	r0, r5
   1c0c0:	bl	12434 <open@plt>
   1c0c4:	subs	r4, r0, #0
   1c0c8:	blt	1c0f4 <crc32@@Base+0x2950>
   1c0cc:	mov	r2, r6
   1c0d0:	mov	r1, r4
   1c0d4:	mov	r0, #3
   1c0d8:	bl	12554 <__fxstat@plt>
   1c0dc:	cmp	r0, #0
   1c0e0:	blt	1c130 <crc32@@Base+0x298c>
   1c0e4:	mov	r0, r4
   1c0e8:	add	sp, sp, #8
   1c0ec:	pop	{r4, r5, r6, lr}
   1c0f0:	b	12314 <close@plt>
   1c0f4:	movw	r3, #65044	; 0xfe14
   1c0f8:	movt	r3, #4
   1c0fc:	ldr	r4, [r3]
   1c100:	bl	1268c <__errno_location@plt>
   1c104:	ldr	r0, [r0]
   1c108:	bl	12200 <strerror@plt>
   1c10c:	movw	r2, #38632	; 0x96e8
   1c110:	movt	r2, #3
   1c114:	mov	r3, r5
   1c118:	mov	r1, #1
   1c11c:	str	r0, [sp]
   1c120:	mov	r0, r4
   1c124:	bl	122b4 <__fprintf_chk@plt>
   1c128:	mov	r0, #1
   1c12c:	bl	121f4 <exit@plt>
   1c130:	movw	r3, #65044	; 0xfe14
   1c134:	movt	r3, #4
   1c138:	ldr	r4, [r3]
   1c13c:	bl	1268c <__errno_location@plt>
   1c140:	ldr	r0, [r0]
   1c144:	bl	12200 <strerror@plt>
   1c148:	movw	r2, #38652	; 0x96fc
   1c14c:	mov	r3, r5
   1c150:	mov	r1, #1
   1c154:	movt	r2, #3
   1c158:	b	1c11c <crc32@@Base+0x2978>
   1c15c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c160:	movw	r4, #61168	; 0xeef0
   1c164:	sub	sp, sp, #16384	; 0x4000
   1c168:	movt	r4, #4
   1c16c:	sub	sp, sp, #108	; 0x6c
   1c170:	mov	sl, r1
   1c174:	mov	fp, r2
   1c178:	ldr	r1, [r4]
   1c17c:	add	r2, sp, #16384	; 0x4000
   1c180:	cmp	r3, #16384	; 0x4000
   1c184:	add	r2, r2, #100	; 0x64
   1c188:	str	r1, [r2]
   1c18c:	bgt	1c2a0 <crc32@@Base+0x2afc>
   1c190:	mov	r2, #16384	; 0x4000
   1c194:	mov	r1, #0
   1c198:	mov	r9, r0
   1c19c:	add	r0, sp, #100	; 0x64
   1c1a0:	mov	r6, r3
   1c1a4:	bl	122e4 <memset@plt>
   1c1a8:	mov	r1, #0
   1c1ac:	mov	r0, sl
   1c1b0:	bl	12434 <open@plt>
   1c1b4:	subs	r7, r0, #0
   1c1b8:	blt	1c304 <crc32@@Base+0x2b60>
   1c1bc:	add	r2, sp, #8
   1c1c0:	mov	r1, r7
   1c1c4:	mov	r0, #3
   1c1c8:	bl	12554 <__fxstat@plt>
   1c1cc:	cmp	r0, #0
   1c1d0:	blt	1c2c8 <crc32@@Base+0x2b24>
   1c1d4:	ldr	r1, [sp, #52]	; 0x34
   1c1d8:	cmp	r1, #0
   1c1dc:	beq	1c274 <crc32@@Base+0x2ad0>
   1c1e0:	mov	r5, #0
   1c1e4:	mov	r3, #1
   1c1e8:	str	r7, [sp]
   1c1ec:	mov	r0, r5
   1c1f0:	str	r5, [sp, #4]
   1c1f4:	mov	r2, r3
   1c1f8:	bl	123ec <mmap@plt>
   1c1fc:	cmn	r0, #1
   1c200:	mov	r8, r0
   1c204:	beq	1c330 <crc32@@Base+0x2b8c>
   1c208:	mov	r2, r5
   1c20c:	mov	r1, fp
   1c210:	mov	r0, r9
   1c214:	ldr	sl, [sp, #52]	; 0x34
   1c218:	bl	124f4 <lseek@plt>
   1c21c:	cmp	r0, #0
   1c220:	blt	1c3cc <crc32@@Base+0x2c28>
   1c224:	mov	r2, sl
   1c228:	mov	r1, r8
   1c22c:	mov	r0, r9
   1c230:	bl	12608 <write@plt>
   1c234:	cmp	sl, r0
   1c238:	bne	1c35c <crc32@@Base+0x2bb8>
   1c23c:	sub	r5, r6, #1
   1c240:	rsb	r6, r6, #0
   1c244:	add	r5, r5, sl
   1c248:	add	r1, sp, #100	; 0x64
   1c24c:	and	r5, r5, r6
   1c250:	mov	r0, r9
   1c254:	sub	r5, r5, sl
   1c258:	mov	r2, r5
   1c25c:	bl	12608 <write@plt>
   1c260:	cmp	r5, r0
   1c264:	bne	1c394 <crc32@@Base+0x2bf0>
   1c268:	ldr	r1, [sp, #52]	; 0x34
   1c26c:	mov	r0, r8
   1c270:	bl	125e4 <munmap@plt>
   1c274:	mov	r0, r7
   1c278:	bl	12314 <close@plt>
   1c27c:	add	r3, sp, #16384	; 0x4000
   1c280:	add	r3, r3, #100	; 0x64
   1c284:	ldr	r2, [r3]
   1c288:	ldr	r3, [r4]
   1c28c:	cmp	r2, r3
   1c290:	bne	1c2c4 <crc32@@Base+0x2b20>
   1c294:	add	sp, sp, #16384	; 0x4000
   1c298:	add	sp, sp, #108	; 0x6c
   1c29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2a0:	movw	r0, #65044	; 0xfe14
   1c2a4:	movt	r0, #4
   1c2a8:	movw	r2, #38672	; 0x9710
   1c2ac:	mov	r1, #1
   1c2b0:	ldr	r0, [r0]
   1c2b4:	movt	r2, #3
   1c2b8:	bl	122b4 <__fprintf_chk@plt>
   1c2bc:	mov	r0, #1
   1c2c0:	bl	121f4 <exit@plt>
   1c2c4:	bl	12494 <__stack_chk_fail@plt>
   1c2c8:	movw	r3, #65044	; 0xfe14
   1c2cc:	movt	r3, #4
   1c2d0:	ldr	r4, [r3]
   1c2d4:	bl	1268c <__errno_location@plt>
   1c2d8:	ldr	r0, [r0]
   1c2dc:	bl	12200 <strerror@plt>
   1c2e0:	movw	r2, #25420	; 0x634c
   1c2e4:	movt	r2, #3
   1c2e8:	mov	r3, sl
   1c2ec:	mov	r1, #1
   1c2f0:	str	r0, [sp]
   1c2f4:	mov	r0, r4
   1c2f8:	bl	122b4 <__fprintf_chk@plt>
   1c2fc:	mov	r0, #1
   1c300:	bl	121f4 <exit@plt>
   1c304:	movw	r3, #65044	; 0xfe14
   1c308:	movt	r3, #4
   1c30c:	ldr	r4, [r3]
   1c310:	bl	1268c <__errno_location@plt>
   1c314:	ldr	r0, [r0]
   1c318:	bl	12200 <strerror@plt>
   1c31c:	movw	r2, #25396	; 0x6334
   1c320:	mov	r3, sl
   1c324:	mov	r1, #1
   1c328:	movt	r2, #3
   1c32c:	b	1c2f0 <crc32@@Base+0x2b4c>
   1c330:	movw	r3, #65044	; 0xfe14
   1c334:	movt	r3, #4
   1c338:	ldr	r4, [r3]
   1c33c:	bl	1268c <__errno_location@plt>
   1c340:	ldr	r0, [r0]
   1c344:	bl	12200 <strerror@plt>
   1c348:	movw	r2, #27000	; 0x6978
   1c34c:	mov	r3, sl
   1c350:	mov	r1, #1
   1c354:	movt	r2, #3
   1c358:	b	1c2f0 <crc32@@Base+0x2b4c>
   1c35c:	movw	r3, #65044	; 0xfe14
   1c360:	movt	r3, #4
   1c364:	ldr	r4, [r3]
   1c368:	bl	1268c <__errno_location@plt>
   1c36c:	ldr	r0, [r0]
   1c370:	bl	12200 <strerror@plt>
   1c374:	movw	r2, #38724	; 0x9744
   1c378:	mov	r1, #1
   1c37c:	movt	r2, #3
   1c380:	mov	r3, r0
   1c384:	mov	r0, r4
   1c388:	bl	122b4 <__fprintf_chk@plt>
   1c38c:	mov	r0, #1
   1c390:	bl	121f4 <exit@plt>
   1c394:	movw	r3, #65044	; 0xfe14
   1c398:	movt	r3, #4
   1c39c:	ldr	r4, [r3]
   1c3a0:	bl	1268c <__errno_location@plt>
   1c3a4:	ldr	r0, [r0]
   1c3a8:	bl	12200 <strerror@plt>
   1c3ac:	movw	r2, #38740	; 0x9754
   1c3b0:	mov	r1, #1
   1c3b4:	movt	r2, #3
   1c3b8:	mov	r3, r0
   1c3bc:	mov	r0, r4
   1c3c0:	bl	122b4 <__fprintf_chk@plt>
   1c3c4:	mov	r0, #1
   1c3c8:	bl	121f4 <exit@plt>
   1c3cc:	movw	r3, #65044	; 0xfe14
   1c3d0:	movt	r3, #4
   1c3d4:	ldr	r4, [r3]
   1c3d8:	bl	1268c <__errno_location@plt>
   1c3dc:	ldr	r0, [r0]
   1c3e0:	bl	12200 <strerror@plt>
   1c3e4:	movw	r3, #38584	; 0x96b8
   1c3e8:	movw	r2, #38704	; 0x9730
   1c3ec:	movt	r3, #3
   1c3f0:	movt	r2, #3
   1c3f4:	mov	r1, #1
   1c3f8:	b	1c2f0 <crc32@@Base+0x2b4c>
   1c3fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c400:	movw	r8, #61168	; 0xeef0
   1c404:	movt	r8, #4
   1c408:	ldr	r3, [r0, #4]
   1c40c:	sub	sp, sp, #668	; 0x29c
   1c410:	mov	r4, r0
   1c414:	ldr	r2, [r8]
   1c418:	cmp	r3, #0
   1c41c:	mov	r6, r1
   1c420:	add	r5, sp, #148	; 0x94
   1c424:	str	r2, [sp, #660]	; 0x294
   1c428:	bne	1c500 <crc32@@Base+0x2d5c>
   1c42c:	mov	r2, #384	; 0x180
   1c430:	movw	r3, #38760	; 0x9768
   1c434:	str	r2, [sp]
   1c438:	mov	r0, r5
   1c43c:	movt	r3, #3
   1c440:	mov	r2, #512	; 0x200
   1c444:	mov	r1, #1
   1c448:	bl	126e0 <__sprintf_chk@plt>
   1c44c:	ldr	r3, [r4, #24]
   1c450:	add	r7, r4, #32
   1c454:	mov	r2, #64	; 0x40
   1c458:	mov	r1, #0
   1c45c:	orr	r3, r3, #256	; 0x100
   1c460:	mov	r0, r7
   1c464:	str	r3, [r4, #24]
   1c468:	bl	122e4 <memset@plt>
   1c46c:	mov	r0, r5
   1c470:	movw	r1, #49540	; 0xc184
   1c474:	movt	r1, #3
   1c478:	bl	120a4 <popen@plt>
   1c47c:	subs	r9, r0, #0
   1c480:	beq	1c578 <crc32@@Base+0x2dd4>
   1c484:	mov	r2, r9
   1c488:	mov	r1, #97	; 0x61
   1c48c:	add	r0, sp, #16
   1c490:	bl	12548 <fgets@plt>
   1c494:	cmp	r0, #0
   1c498:	beq	1c550 <crc32@@Base+0x2dac>
   1c49c:	movw	r6, #38952	; 0x9828
   1c4a0:	add	r5, sp, #16
   1c4a4:	movt	r6, #3
   1c4a8:	mov	r4, #0
   1c4ac:	b	1c4d0 <crc32@@Base+0x2d2c>
   1c4b0:	mov	r0, r5
   1c4b4:	add	r2, r7, r4
   1c4b8:	mov	r1, r6
   1c4bc:	add	r5, r5, #2
   1c4c0:	bl	126a4 <sscanf@plt>
   1c4c4:	cmp	r0, #0
   1c4c8:	blt	1c528 <crc32@@Base+0x2d84>
   1c4cc:	add	r4, r4, #1
   1c4d0:	add	r0, sp, #16
   1c4d4:	bl	125c0 <strlen@plt>
   1c4d8:	cmp	r4, r0, lsr #1
   1c4dc:	bcc	1c4b0 <crc32@@Base+0x2d0c>
   1c4e0:	mov	r0, r9
   1c4e4:	bl	124dc <pclose@plt>
   1c4e8:	ldr	r2, [sp, #660]	; 0x294
   1c4ec:	ldr	r3, [r8]
   1c4f0:	cmp	r2, r3
   1c4f4:	bne	1c5a0 <crc32@@Base+0x2dfc>
   1c4f8:	add	sp, sp, #668	; 0x29c
   1c4fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c500:	stm	sp, {r3, r6}
   1c504:	mov	r0, r5
   1c508:	mov	r3, #384	; 0x180
   1c50c:	mov	r2, #512	; 0x200
   1c510:	str	r3, [sp, #8]
   1c514:	mov	r1, #1
   1c518:	movw	r3, #38780	; 0x977c
   1c51c:	movt	r3, #3
   1c520:	bl	126e0 <__sprintf_chk@plt>
   1c524:	b	1c44c <crc32@@Base+0x2ca8>
   1c528:	movw	r1, #65044	; 0xfe14
   1c52c:	movt	r1, #4
   1c530:	mov	r3, r0
   1c534:	movw	r2, #38960	; 0x9830
   1c538:	ldr	r0, [r1]
   1c53c:	movt	r2, #3
   1c540:	mov	r1, #1
   1c544:	bl	122b4 <__fprintf_chk@plt>
   1c548:	mov	r0, #1
   1c54c:	bl	121f4 <exit@plt>
   1c550:	movw	r1, #65044	; 0xfe14
   1c554:	movt	r1, #4
   1c558:	mov	r3, r6
   1c55c:	movw	r2, #38924	; 0x980c
   1c560:	ldr	r0, [r1]
   1c564:	movt	r2, #3
   1c568:	mov	r1, #1
   1c56c:	bl	122b4 <__fprintf_chk@plt>
   1c570:	mov	r0, #1
   1c574:	bl	121f4 <exit@plt>
   1c578:	movw	r3, #65044	; 0xfe14
   1c57c:	movt	r3, #4
   1c580:	movw	r0, #38896	; 0x97f0
   1c584:	mov	r2, #27
   1c588:	ldr	r3, [r3]
   1c58c:	movt	r0, #3
   1c590:	mov	r1, #1
   1c594:	bl	12578 <fwrite@plt>
   1c598:	mov	r0, #1
   1c59c:	bl	121f4 <exit@plt>
   1c5a0:	bl	12494 <__stack_chk_fail@plt>
   1c5a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c5a8:	movw	r6, #61168	; 0xeef0
   1c5ac:	sub	sp, sp, #4160	; 0x1040
   1c5b0:	movt	r6, #4
   1c5b4:	sub	sp, sp, #52	; 0x34
   1c5b8:	mov	r4, #0
   1c5bc:	ldr	r3, [r6]
   1c5c0:	add	ip, sp, #4160	; 0x1040
   1c5c4:	add	ip, ip, #44	; 0x2c
   1c5c8:	mov	r9, r1
   1c5cc:	mov	r2, #4096	; 0x1000
   1c5d0:	mov	r1, r4
   1c5d4:	mov	r5, r0
   1c5d8:	add	r0, sp, #108	; 0x6c
   1c5dc:	str	r3, [ip]
   1c5e0:	str	r4, [sp, #12]
   1c5e4:	bl	122e4 <memset@plt>
   1c5e8:	mov	r1, r4
   1c5ec:	mov	r0, r9
   1c5f0:	bl	12434 <open@plt>
   1c5f4:	subs	r7, r0, #0
   1c5f8:	blt	1c850 <crc32@@Base+0x30ac>
   1c5fc:	mov	r1, r7
   1c600:	add	r2, sp, #16
   1c604:	mov	r0, #3
   1c608:	bl	12554 <__fxstat@plt>
   1c60c:	cmp	r0, #0
   1c610:	blt	1c824 <crc32@@Base+0x3080>
   1c614:	ldr	r1, [sp, #60]	; 0x3c
   1c618:	cmp	r1, #0
   1c61c:	beq	1c754 <crc32@@Base+0x2fb0>
   1c620:	mov	r3, #1
   1c624:	str	r4, [sp, #4]
   1c628:	str	r7, [sp]
   1c62c:	mov	r2, r3
   1c630:	mov	r0, r4
   1c634:	bl	123ec <mmap@plt>
   1c638:	cmn	r0, #1
   1c63c:	mov	r8, r0
   1c640:	beq	1c7f8 <crc32@@Base+0x3054>
   1c644:	mov	r2, r4
   1c648:	mov	r1, r4
   1c64c:	mov	r0, r5
   1c650:	ldr	r4, [sp, #60]	; 0x3c
   1c654:	bl	124f4 <lseek@plt>
   1c658:	cmp	r0, #0
   1c65c:	blt	1c7bc <crc32@@Base+0x3018>
   1c660:	mov	r2, r4
   1c664:	mov	r1, r8
   1c668:	mov	r0, r5
   1c66c:	bl	12608 <write@plt>
   1c670:	cmp	r4, r0
   1c674:	bne	1c784 <crc32@@Base+0x2fe0>
   1c678:	rsbs	r3, r4, #0
   1c67c:	and	r2, r4, #3
   1c680:	and	r3, r3, #3
   1c684:	rsbpl	r2, r3, #0
   1c688:	cmn	r4, #1
   1c68c:	moveq	r3, #1
   1c690:	movne	r3, #0
   1c694:	cmp	r2, #0
   1c698:	moveq	r3, #0
   1c69c:	cmp	r3, #0
   1c6a0:	bne	1c72c <crc32@@Base+0x2f88>
   1c6a4:	cmn	r4, #1
   1c6a8:	bge	1c748 <crc32@@Base+0x2fa4>
   1c6ac:	rsb	r4, r4, #0
   1c6b0:	b	1c6d4 <crc32@@Base+0x2f30>
   1c6b4:	mov	r2, #4096	; 0x1000
   1c6b8:	add	r1, sp, #108	; 0x6c
   1c6bc:	mov	r0, r5
   1c6c0:	bl	12608 <write@plt>
   1c6c4:	cmp	r0, #4096	; 0x1000
   1c6c8:	bne	1c6f4 <crc32@@Base+0x2f50>
   1c6cc:	subs	r4, r4, #4096	; 0x1000
   1c6d0:	beq	1c748 <crc32@@Base+0x2fa4>
   1c6d4:	cmp	r4, #4096	; 0x1000
   1c6d8:	bge	1c6b4 <crc32@@Base+0x2f10>
   1c6dc:	add	r1, sp, #108	; 0x6c
   1c6e0:	mov	r0, r5
   1c6e4:	mov	r2, r4
   1c6e8:	bl	12608 <write@plt>
   1c6ec:	cmp	r0, r4
   1c6f0:	beq	1c748 <crc32@@Base+0x2fa4>
   1c6f4:	movw	r3, #65044	; 0xfe14
   1c6f8:	movt	r3, #4
   1c6fc:	ldr	r4, [r3]
   1c700:	bl	1268c <__errno_location@plt>
   1c704:	ldr	r0, [r0]
   1c708:	bl	12200 <strerror@plt>
   1c70c:	movw	r2, #38740	; 0x9754
   1c710:	mov	r1, #1
   1c714:	movt	r2, #3
   1c718:	mov	r3, r0
   1c71c:	mov	r0, r4
   1c720:	bl	122b4 <__fprintf_chk@plt>
   1c724:	mov	r0, #1
   1c728:	bl	121f4 <exit@plt>
   1c72c:	rsb	r4, r2, #4
   1c730:	add	r1, sp, #12
   1c734:	mov	r0, r5
   1c738:	mov	r2, r4
   1c73c:	bl	12608 <write@plt>
   1c740:	cmp	r4, r0
   1c744:	bne	1c87c <crc32@@Base+0x30d8>
   1c748:	ldr	r1, [sp, #60]	; 0x3c
   1c74c:	mov	r0, r8
   1c750:	bl	125e4 <munmap@plt>
   1c754:	mov	r0, r7
   1c758:	bl	12314 <close@plt>
   1c75c:	add	r3, sp, #4160	; 0x1040
   1c760:	add	r3, r3, #44	; 0x2c
   1c764:	ldr	r2, [r3]
   1c768:	ldr	r3, [r6]
   1c76c:	cmp	r2, r3
   1c770:	bne	1c780 <crc32@@Base+0x2fdc>
   1c774:	add	sp, sp, #4160	; 0x1040
   1c778:	add	sp, sp, #52	; 0x34
   1c77c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c780:	bl	12494 <__stack_chk_fail@plt>
   1c784:	movw	r3, #65044	; 0xfe14
   1c788:	movt	r3, #4
   1c78c:	ldr	r4, [r3]
   1c790:	bl	1268c <__errno_location@plt>
   1c794:	ldr	r0, [r0]
   1c798:	bl	12200 <strerror@plt>
   1c79c:	movw	r2, #38724	; 0x9744
   1c7a0:	mov	r1, #1
   1c7a4:	movt	r2, #3
   1c7a8:	mov	r3, r0
   1c7ac:	mov	r0, r4
   1c7b0:	bl	122b4 <__fprintf_chk@plt>
   1c7b4:	mov	r0, #1
   1c7b8:	bl	121f4 <exit@plt>
   1c7bc:	movw	r3, #65044	; 0xfe14
   1c7c0:	movt	r3, #4
   1c7c4:	ldr	r4, [r3]
   1c7c8:	bl	1268c <__errno_location@plt>
   1c7cc:	ldr	r0, [r0]
   1c7d0:	bl	12200 <strerror@plt>
   1c7d4:	ldr	r3, [pc, #216]	; 1c8b4 <crc32@@Base+0x3110>
   1c7d8:	movw	r2, #38704	; 0x9730
   1c7dc:	movt	r2, #3
   1c7e0:	mov	r1, #1
   1c7e4:	str	r0, [sp]
   1c7e8:	mov	r0, r4
   1c7ec:	bl	122b4 <__fprintf_chk@plt>
   1c7f0:	mov	r0, #1
   1c7f4:	bl	121f4 <exit@plt>
   1c7f8:	movw	r3, #65044	; 0xfe14
   1c7fc:	movt	r3, #4
   1c800:	ldr	r4, [r3]
   1c804:	bl	1268c <__errno_location@plt>
   1c808:	ldr	r0, [r0]
   1c80c:	bl	12200 <strerror@plt>
   1c810:	movw	r2, #27000	; 0x6978
   1c814:	mov	r3, r9
   1c818:	mov	r1, #1
   1c81c:	movt	r2, #3
   1c820:	b	1c7e4 <crc32@@Base+0x3040>
   1c824:	movw	r3, #65044	; 0xfe14
   1c828:	movt	r3, #4
   1c82c:	ldr	r4, [r3]
   1c830:	bl	1268c <__errno_location@plt>
   1c834:	ldr	r0, [r0]
   1c838:	bl	12200 <strerror@plt>
   1c83c:	movw	r2, #25420	; 0x634c
   1c840:	mov	r3, r9
   1c844:	mov	r1, #1
   1c848:	movt	r2, #3
   1c84c:	b	1c7e4 <crc32@@Base+0x3040>
   1c850:	movw	r3, #65044	; 0xfe14
   1c854:	movt	r3, #4
   1c858:	ldr	r4, [r3]
   1c85c:	bl	1268c <__errno_location@plt>
   1c860:	ldr	r0, [r0]
   1c864:	bl	12200 <strerror@plt>
   1c868:	movw	r2, #25396	; 0x6334
   1c86c:	mov	r3, r9
   1c870:	mov	r1, #1
   1c874:	movt	r2, #3
   1c878:	b	1c7e4 <crc32@@Base+0x3040>
   1c87c:	movw	r3, #65044	; 0xfe14
   1c880:	movt	r3, #4
   1c884:	ldr	r4, [r3]
   1c888:	bl	1268c <__errno_location@plt>
   1c88c:	ldr	r0, [r0]
   1c890:	bl	12200 <strerror@plt>
   1c894:	movw	r2, #38984	; 0x9848
   1c898:	mov	r1, #1
   1c89c:	movt	r2, #3
   1c8a0:	mov	r3, r0
   1c8a4:	mov	r0, r4
   1c8a8:	bl	122b4 <__fprintf_chk@plt>
   1c8ac:	mov	r0, #1
   1c8b0:	bl	121f4 <exit@plt>
   1c8b4:	andeq	r9, r3, ip, asr #13
   1c8b8:	push	{r4, r5, r6, r7, lr}
   1c8bc:	movw	r4, #61168	; 0xeef0
   1c8c0:	movt	r4, #4
   1c8c4:	sub	sp, sp, #108	; 0x6c
   1c8c8:	mov	r1, #0
   1c8cc:	mov	r7, r0
   1c8d0:	ldr	r3, [r4]
   1c8d4:	str	r3, [sp, #100]	; 0x64
   1c8d8:	bl	12434 <open@plt>
   1c8dc:	subs	r5, r0, #0
   1c8e0:	blt	1c954 <crc32@@Base+0x31b0>
   1c8e4:	add	r2, sp, #8
   1c8e8:	mov	r1, r5
   1c8ec:	mov	r0, #3
   1c8f0:	bl	12554 <__fxstat@plt>
   1c8f4:	cmp	r0, #0
   1c8f8:	blt	1c9c0 <crc32@@Base+0x321c>
   1c8fc:	mov	r6, #0
   1c900:	mov	r3, #1
   1c904:	ldr	r1, [sp, #52]	; 0x34
   1c908:	mov	r0, r6
   1c90c:	stm	sp, {r5, r6}
   1c910:	mov	r2, r3
   1c914:	bl	123ec <mmap@plt>
   1c918:	cmn	r0, #1
   1c91c:	beq	1c994 <crc32@@Base+0x31f0>
   1c920:	ldr	r1, [sp, #52]	; 0x34
   1c924:	ldr	r7, [r0, #576]	; 0x240
   1c928:	bl	125e4 <munmap@plt>
   1c92c:	mov	r0, r5
   1c930:	bl	12314 <close@plt>
   1c934:	ldr	r2, [sp, #100]	; 0x64
   1c938:	ldr	r3, [r4]
   1c93c:	mov	r0, r7
   1c940:	mov	r1, r6
   1c944:	cmp	r2, r3
   1c948:	bne	1c990 <crc32@@Base+0x31ec>
   1c94c:	add	sp, sp, #108	; 0x6c
   1c950:	pop	{r4, r5, r6, r7, pc}
   1c954:	movw	r3, #65044	; 0xfe14
   1c958:	movt	r3, #4
   1c95c:	ldr	r4, [r3]
   1c960:	bl	1268c <__errno_location@plt>
   1c964:	ldr	r0, [r0]
   1c968:	bl	12200 <strerror@plt>
   1c96c:	movw	r2, #25396	; 0x6334
   1c970:	movt	r2, #3
   1c974:	mov	r3, r7
   1c978:	mov	r1, #1
   1c97c:	str	r0, [sp]
   1c980:	mov	r0, r4
   1c984:	bl	122b4 <__fprintf_chk@plt>
   1c988:	mov	r0, #1
   1c98c:	bl	121f4 <exit@plt>
   1c990:	bl	12494 <__stack_chk_fail@plt>
   1c994:	movw	r3, #65044	; 0xfe14
   1c998:	movt	r3, #4
   1c99c:	ldr	r4, [r3]
   1c9a0:	bl	1268c <__errno_location@plt>
   1c9a4:	ldr	r0, [r0]
   1c9a8:	bl	12200 <strerror@plt>
   1c9ac:	movw	r2, #27000	; 0x6978
   1c9b0:	mov	r3, r7
   1c9b4:	mov	r1, #1
   1c9b8:	movt	r2, #3
   1c9bc:	b	1c97c <crc32@@Base+0x31d8>
   1c9c0:	movw	r3, #65044	; 0xfe14
   1c9c4:	movt	r3, #4
   1c9c8:	ldr	r4, [r3]
   1c9cc:	bl	1268c <__errno_location@plt>
   1c9d0:	ldr	r0, [r0]
   1c9d4:	bl	12200 <strerror@plt>
   1c9d8:	movw	r2, #25420	; 0x634c
   1c9dc:	mov	r3, r7
   1c9e0:	mov	r1, #1
   1c9e4:	movt	r2, #3
   1c9e8:	b	1c97c <crc32@@Base+0x31d8>
   1c9ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9f0:	mov	r4, r0
   1c9f4:	ldrb	r0, [r0, #11]
   1c9f8:	sub	sp, sp, #20
   1c9fc:	ldr	sl, [r2]
   1ca00:	mov	r5, r3
   1ca04:	ldrd	r8, [r2, #24]
   1ca08:	lsl	fp, r0, #7
   1ca0c:	add	r0, r4, r0, lsl #7
   1ca10:	ldrd	r6, [r2, #32]
   1ca14:	mov	ip, r0
   1ca18:	str	r1, [sp, #12]
   1ca1c:	str	r3, [ip, #16]
   1ca20:	add	r0, r0, #16
   1ca24:	ldr	r3, [sp, #56]	; 0x38
   1ca28:	ldr	r1, [sp, #60]	; 0x3c
   1ca2c:	str	r3, [ip, #20]
   1ca30:	bl	1c3fc <crc32@@Base+0x2c58>
   1ca34:	sub	r2, sl, #2
   1ca38:	cmp	r2, #15
   1ca3c:	ldrls	pc, [pc, r2, lsl #2]
   1ca40:	b	1cdd4 <crc32@@Base+0x3630>
   1ca44:	andeq	ip, r1, r8, ror #21
   1ca48:	andeq	ip, r1, r4, asr #23
   1ca4c:	andeq	ip, r1, ip, lsr #24
   1ca50:	andeq	ip, r1, ip, lsr #24
   1ca54:	muleq	r1, ip, ip
   1ca58:	ldrdeq	ip, [r1], -r4
   1ca5c:	ldrdeq	ip, [r1], -r4
   1ca60:	ldrdeq	ip, [r1], -r4
   1ca64:	ldrdeq	ip, [r1], -r4
   1ca68:	ldrdeq	ip, [r1], -r4
   1ca6c:	ldrdeq	ip, [r1], -r4
   1ca70:	ldrdeq	ip, [r1], -r4
   1ca74:	andeq	ip, r1, ip, lsl sp
   1ca78:	ldrdeq	ip, [r1], -r4
   1ca7c:	ldrdeq	ip, [r1], -r4
   1ca80:	andeq	ip, r1, r4, lsl #21
   1ca84:	add	r2, r4, fp
   1ca88:	movw	r3, #39020	; 0x986c
   1ca8c:	movt	r3, #3
   1ca90:	lsl	r6, r6, #10
   1ca94:	ldr	r1, [r2, #40]	; 0x28
   1ca98:	str	r8, [r2, #24]
   1ca9c:	orr	r1, r1, #68	; 0x44
   1caa0:	str	r9, [r2, #28]
   1caa4:	str	r6, [r2, #44]	; 0x2c
   1caa8:	str	r1, [r2, #40]	; 0x28
   1caac:	ldr	r1, [sp, #56]	; 0x38
   1cab0:	movw	r2, #65048	; 0xfe18
   1cab4:	movt	r2, #4
   1cab8:	str	r1, [sp, #4]
   1cabc:	mov	r1, #1
   1cac0:	ldr	r0, [r2]
   1cac4:	movw	r2, #39216	; 0x9930
   1cac8:	str	r5, [sp]
   1cacc:	movt	r2, #3
   1cad0:	bl	122b4 <__fprintf_chk@plt>
   1cad4:	ldrb	r3, [r4, #11]
   1cad8:	add	r3, r3, #1
   1cadc:	strb	r3, [r4, #11]
   1cae0:	add	sp, sp, #20
   1cae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cae8:	movw	r1, #16
   1caec:	movt	r1, #6
   1caf0:	add	r3, r4, fp
   1caf4:	mov	r2, #0
   1caf8:	ldr	r1, [r1, #4]
   1cafc:	mvn	r6, #1
   1cb00:	ldr	lr, [r3, #40]	; 0x28
   1cb04:	strb	r2, [r3, #24]
   1cb08:	lsr	r1, r1, #16
   1cb0c:	strb	r2, [r3, #25]
   1cb10:	strb	r2, [r3, #28]
   1cb14:	lsl	r1, r1, #16
   1cb18:	strb	r2, [r3, #29]
   1cb1c:	orr	r1, r1, #19
   1cb20:	strb	r2, [r3, #30]
   1cb24:	strb	r2, [r3, #31]
   1cb28:	orr	r1, r1, lr
   1cb2c:	strb	r6, [r3, #26]
   1cb30:	mov	lr, #31
   1cb34:	str	r1, [r3, #40]	; 0x28
   1cb38:	movw	r1, #39172	; 0x9904
   1cb3c:	strb	lr, [r3, #27]
   1cb40:	movt	r1, #3
   1cb44:	strb	r2, [r3, #32]
   1cb48:	strb	r2, [r3, #33]	; 0x21
   1cb4c:	strb	r6, [r3, #34]	; 0x22
   1cb50:	strb	lr, [r3, #35]	; 0x23
   1cb54:	strb	r2, [r3, #36]	; 0x24
   1cb58:	strb	r2, [r3, #37]	; 0x25
   1cb5c:	strb	r2, [r3, #38]	; 0x26
   1cb60:	strb	r2, [r3, #39]	; 0x27
   1cb64:	ldrb	r0, [r4, #11]
   1cb68:	add	r0, r0, #1
   1cb6c:	uxtb	r0, r0
   1cb70:	strb	r0, [r4, #11]
   1cb74:	add	r6, r4, r0, lsl #7
   1cb78:	add	r0, r6, #16
   1cb7c:	ldr	r3, [r6, #40]	; 0x28
   1cb80:	orr	r3, r3, #21
   1cb84:	str	r3, [r6, #40]	; 0x28
   1cb88:	bl	1c3fc <crc32@@Base+0x2c58>
   1cb8c:	ldr	r3, [r6, #20]
   1cb90:	ldr	r0, [sp, #60]	; 0x3c
   1cb94:	add	r3, r3, r5
   1cb98:	str	r3, [r6, #16]
   1cb9c:	bl	1c8b8 <crc32@@Base+0x3114>
   1cba0:	movw	r3, #39032	; 0x9878
   1cba4:	movt	r3, #3
   1cba8:	subs	r8, r0, #1
   1cbac:	str	r0, [r6, #32]
   1cbb0:	sbc	r9, r1, #0
   1cbb4:	str	r1, [r6, #36]	; 0x24
   1cbb8:	str	r8, [r6, #24]
   1cbbc:	str	r9, [r6, #28]
   1cbc0:	b	1caac <crc32@@Base+0x3308>
   1cbc4:	add	ip, r4, fp
   1cbc8:	mov	r2, #0
   1cbcc:	mov	lr, #32
   1cbd0:	ldr	r3, [ip, #40]	; 0x28
   1cbd4:	strb	r2, [ip, #24]
   1cbd8:	orr	r3, r3, #102	; 0x66
   1cbdc:	strb	r2, [ip, #25]
   1cbe0:	str	r3, [ip, #40]	; 0x28
   1cbe4:	mvn	r3, #63	; 0x3f
   1cbe8:	strb	r2, [ip, #28]
   1cbec:	strb	r3, [ip, #26]
   1cbf0:	movw	r3, #39004	; 0x985c
   1cbf4:	strb	r2, [ip, #29]
   1cbf8:	movt	r3, #3
   1cbfc:	strb	r2, [ip, #30]
   1cc00:	strb	r2, [ip, #31]
   1cc04:	strb	lr, [ip, #27]
   1cc08:	strb	r2, [ip, #32]
   1cc0c:	strb	r2, [ip, #33]	; 0x21
   1cc10:	strb	r2, [ip, #34]	; 0x22
   1cc14:	strb	lr, [ip, #35]	; 0x23
   1cc18:	strb	r2, [ip, #36]	; 0x24
   1cc1c:	strb	r2, [ip, #37]	; 0x25
   1cc20:	strb	r2, [ip, #38]	; 0x26
   1cc24:	strb	r2, [ip, #39]	; 0x27
   1cc28:	b	1caac <crc32@@Base+0x3308>
   1cc2c:	orrs	r3, r6, r7
   1cc30:	bne	1cd8c <crc32@@Base+0x35e8>
   1cc34:	movw	r2, #16
   1cc38:	movt	r2, #6
   1cc3c:	movw	lr, #42262	; 0xa516
   1cc40:	movt	lr, #4
   1cc44:	ldr	r1, [r2]
   1cc48:	mov	r6, #32
   1cc4c:	orr	lr, lr, r1, lsl #20
   1cc50:	add	ip, r4, fp
   1cc54:	and	r0, r8, #7
   1cc58:	mov	r1, #0
   1cc5c:	orrs	r3, r0, r1
   1cc60:	ldr	r3, [ip, #40]	; 0x28
   1cc64:	orr	r3, r3, #3
   1cc68:	orr	r3, r3, r6
   1cc6c:	str	r3, [ip, #40]	; 0x28
   1cc70:	bne	1cdfc <crc32@@Base+0x3658>
   1cc74:	mov	r1, #0
   1cc78:	movw	r3, #39016	; 0x9868
   1cc7c:	str	r8, [ip, #24]
   1cc80:	movt	r3, #3
   1cc84:	str	r9, [ip, #28]
   1cc88:	str	r8, [ip, #32]
   1cc8c:	str	r9, [ip, #36]	; 0x24
   1cc90:	str	lr, [ip, #44]	; 0x2c
   1cc94:	str	r1, [r2]
   1cc98:	b	1caac <crc32@@Base+0x3308>
   1cc9c:	cmp	r7, #0
   1cca0:	ldr	r3, [sp, #12]
   1cca4:	cmpeq	r6, #4
   1cca8:	moveq	r2, #1
   1ccac:	movne	r2, #0
   1ccb0:	cmp	r3, #1
   1ccb4:	movne	r1, #0
   1ccb8:	andeq	r1, r2, #1
   1ccbc:	cmp	r1, #0
   1ccc0:	beq	1cd40 <crc32@@Base+0x359c>
   1ccc4:	movw	r2, #16
   1ccc8:	movt	r2, #6
   1cccc:	movw	r0, #22012	; 0x55fc
   1ccd0:	ldr	r1, [r2]
   1ccd4:	cmp	r1, #0
   1ccd8:	beq	1cd84 <crc32@@Base+0x35e0>
   1ccdc:	movt	r0, #3
   1cce0:	orr	r0, r0, r1, lsl #20
   1cce4:	add	r1, r4, fp
   1cce8:	mov	lr, #0
   1ccec:	movw	r3, #39012	; 0x9864
   1ccf0:	movt	r3, #3
   1ccf4:	ldr	ip, [r1, #40]	; 0x28
   1ccf8:	str	r0, [r1, #44]	; 0x2c
   1ccfc:	str	r8, [r1, #24]
   1cd00:	orr	r0, ip, #67	; 0x43
   1cd04:	str	r9, [r1, #28]
   1cd08:	str	r8, [r1, #32]
   1cd0c:	str	r9, [r1, #36]	; 0x24
   1cd10:	str	lr, [r2]
   1cd14:	str	r0, [r1, #40]	; 0x28
   1cd18:	b	1caac <crc32@@Base+0x3308>
   1cd1c:	add	r2, r4, fp
   1cd20:	movw	r3, #25904	; 0x6530
   1cd24:	movt	r3, #3
   1cd28:	ldr	r1, [r2, #40]	; 0x28
   1cd2c:	str	r8, [r2, #24]
   1cd30:	orr	r1, r1, #68	; 0x44
   1cd34:	str	r9, [r2, #28]
   1cd38:	str	r1, [r2, #40]	; 0x28
   1cd3c:	b	1caac <crc32@@Base+0x3308>
   1cd40:	ldr	r3, [sp, #12]
   1cd44:	sub	r3, r3, #2
   1cd48:	clz	r3, r3
   1cd4c:	lsr	r3, r3, #5
   1cd50:	tst	r2, r3
   1cd54:	bne	1cdb8 <crc32@@Base+0x3614>
   1cd58:	cmp	r7, #0
   1cd5c:	cmpeq	r6, #5
   1cd60:	movne	r3, #0
   1cd64:	cmp	r3, #0
   1cd68:	beq	1ce4c <crc32@@Base+0x36a8>
   1cd6c:	movw	r2, #16
   1cd70:	movt	r2, #6
   1cd74:	movw	r0, #21510	; 0x5406
   1cd78:	ldr	r1, [r2]
   1cd7c:	cmp	r1, #0
   1cd80:	bne	1ccdc <crc32@@Base+0x3538>
   1cd84:	movt	r0, #19
   1cd88:	b	1cce4 <crc32@@Base+0x3540>
   1cd8c:	cmp	r7, #0
   1cd90:	cmpeq	r6, #1
   1cd94:	bne	1ce24 <crc32@@Base+0x3680>
   1cd98:	movw	r2, #16
   1cd9c:	movt	r2, #6
   1cda0:	movw	lr, #62762	; 0xf52a
   1cda4:	movt	lr, #4
   1cda8:	ldr	r1, [r2]
   1cdac:	mov	r6, #48	; 0x30
   1cdb0:	orr	lr, lr, r1, lsl #20
   1cdb4:	b	1cc50 <crc32@@Base+0x34ac>
   1cdb8:	movw	r2, #16
   1cdbc:	movt	r2, #6
   1cdc0:	movw	r0, #21505	; 0x5401
   1cdc4:	ldr	r1, [r2]
   1cdc8:	cmp	r1, #0
   1cdcc:	bne	1ccdc <crc32@@Base+0x3538>
   1cdd0:	b	1cd84 <crc32@@Base+0x35e0>
   1cdd4:	movw	r1, #65044	; 0xfe14
   1cdd8:	movt	r1, #4
   1cddc:	mov	r3, sl
   1cde0:	movw	r2, #39184	; 0x9910
   1cde4:	ldr	r0, [r1]
   1cde8:	movt	r2, #3
   1cdec:	mov	r1, #1
   1cdf0:	bl	122b4 <__fprintf_chk@plt>
   1cdf4:	mov	r0, #1
   1cdf8:	bl	121f4 <exit@plt>
   1cdfc:	movw	r3, #65044	; 0xfe14
   1ce00:	movt	r3, #4
   1ce04:	movw	r0, #39112	; 0x98c8
   1ce08:	mov	r2, #57	; 0x39
   1ce0c:	ldr	r3, [r3]
   1ce10:	movt	r0, #3
   1ce14:	mov	r1, #1
   1ce18:	bl	12578 <fwrite@plt>
   1ce1c:	mov	r0, #1
   1ce20:	bl	121f4 <exit@plt>
   1ce24:	movw	r3, #65044	; 0xfe14
   1ce28:	movt	r3, #4
   1ce2c:	strd	r6, [sp]
   1ce30:	movw	r2, #39076	; 0x98a4
   1ce34:	ldr	r0, [r3]
   1ce38:	movt	r2, #3
   1ce3c:	mov	r1, #1
   1ce40:	bl	122b4 <__fprintf_chk@plt>
   1ce44:	mov	r0, #1
   1ce48:	bl	121f4 <exit@plt>
   1ce4c:	movw	r3, #65044	; 0xfe14
   1ce50:	movt	r3, #4
   1ce54:	strd	r6, [sp]
   1ce58:	movw	r2, #39040	; 0x9880
   1ce5c:	ldr	r0, [r3]
   1ce60:	movt	r2, #3
   1ce64:	mov	r1, #1
   1ce68:	bl	122b4 <__fprintf_chk@plt>
   1ce6c:	mov	r0, #1
   1ce70:	bl	121f4 <exit@plt>
   1ce74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce78:	movw	ip, #61168	; 0xeef0
   1ce7c:	sub	sp, sp, #956	; 0x3bc
   1ce80:	movt	ip, #4
   1ce84:	mov	fp, r0
   1ce88:	mov	sl, r1
   1ce8c:	str	ip, [sp, #36]	; 0x24
   1ce90:	mov	r1, #0
   1ce94:	ldr	ip, [ip]
   1ce98:	str	r2, [sp, #12]
   1ce9c:	mov	r2, #1616	; 0x650
   1cea0:	ldr	r0, [pc, #2200]	; 1d740 <crc32@@Base+0x3f9c>
   1cea4:	str	r3, [sp, #32]
   1cea8:	str	ip, [sp, #948]	; 0x3b4
   1ceac:	bl	122e4 <memset@plt>
   1ceb0:	cmp	fp, #1
   1ceb4:	beq	1d524 <crc32@@Base+0x3d80>
   1ceb8:	cmp	fp, #2
   1cebc:	beq	1d548 <crc32@@Base+0x3da4>
   1cec0:	movw	r9, #16
   1cec4:	movt	r9, #6
   1cec8:	mov	r2, #0
   1cecc:	mvn	r1, #120	; 0x78
   1ced0:	ldr	r3, [r9, #1624]	; 0x658
   1ced4:	strb	r1, [r9, #11]
   1ced8:	cmp	r3, r2
   1cedc:	strb	r1, [r9, #819]	; 0x333
   1cee0:	strb	r2, [r9, #8]
   1cee4:	strb	r2, [r9, #816]	; 0x330
   1cee8:	beq	1d5b8 <crc32@@Base+0x3e14>
   1ceec:	mov	r4, #8192	; 0x2000
   1cef0:	movw	r8, #49540	; 0xc184
   1cef4:	ldr	r5, [pc, #2120]	; 1d744 <crc32@@Base+0x3fa0>
   1cef8:	movt	r8, #3
   1cefc:	mov	r6, r4
   1cf00:	b	1cf10 <crc32@@Base+0x376c>
   1cf04:	ldr	r3, [r5, #40]!	; 0x28
   1cf08:	cmp	r3, #0
   1cf0c:	beq	1cf90 <crc32@@Base+0x37ec>
   1cf10:	cmp	r3, #13
   1cf14:	bne	1cf04 <crc32@@Base+0x3760>
   1cf18:	mov	r1, r8
   1cf1c:	ldr	r0, [r5, #4]
   1cf20:	bl	1232c <fopen@plt>
   1cf24:	subs	r4, r0, #0
   1cf28:	beq	1d618 <crc32@@Base+0x3e74>
   1cf2c:	mov	r3, r4
   1cf30:	mov	r2, #1
   1cf34:	mov	r1, #808	; 0x328
   1cf38:	add	r0, sp, #140	; 0x8c
   1cf3c:	bl	12464 <fread@plt>
   1cf40:	cmp	r0, #1
   1cf44:	mov	r7, r0
   1cf48:	bne	1d668 <crc32@@Base+0x3ec4>
   1cf4c:	mov	r0, r4
   1cf50:	bl	125fc <fclose@plt>
   1cf54:	ldrb	r3, [sp, #143]	; 0x8f
   1cf58:	cmp	r3, #135	; 0x87
   1cf5c:	bne	1d640 <crc32@@Base+0x3e9c>
   1cf60:	ldrb	r2, [sp, #151]	; 0x97
   1cf64:	add	r1, sp, #952	; 0x3b8
   1cf68:	sub	r3, sl, #1
   1cf6c:	rsb	r4, sl, #0
   1cf70:	add	r2, r1, r2, lsl #7
   1cf74:	ldr	r2, [r2, #-920]	; 0xfffffc68
   1cf78:	add	r6, r6, r2
   1cf7c:	add	r3, r3, r6
   1cf80:	and	r6, r4, r3
   1cf84:	ldr	r3, [r5, #40]!	; 0x28
   1cf88:	cmp	r3, #0
   1cf8c:	bne	1cf10 <crc32@@Base+0x376c>
   1cf90:	mov	r4, r6
   1cf94:	movw	r1, #65048	; 0xfe18
   1cf98:	movt	r1, #4
   1cf9c:	movw	r2, #39384	; 0x99d8
   1cfa0:	str	r1, [sp, #8]
   1cfa4:	ldr	r0, [r1]
   1cfa8:	mov	r3, r4
   1cfac:	movt	r2, #3
   1cfb0:	mov	r1, #1
   1cfb4:	bl	122b4 <__fprintf_chk@plt>
   1cfb8:	ldr	r6, [r9, #1624]	; 0x658
   1cfbc:	cmp	r6, #0
   1cfc0:	beq	1d5c0 <crc32@@Base+0x3e1c>
   1cfc4:	ldr	r5, [pc, #1912]	; 1d744 <crc32@@Base+0x3fa0>
   1cfc8:	subs	r0, sl, #1
   1cfcc:	mov	r3, #0
   1cfd0:	mvn	r8, #0
   1cfd4:	sbc	r1, r3, #0
   1cfd8:	rsbs	r2, sl, #0
   1cfdc:	rsc	r3, r3, #0
   1cfe0:	strd	r0, [sp, #16]
   1cfe4:	strd	r2, [sp, #24]
   1cfe8:	sub	r3, r6, #2
   1cfec:	cmp	r3, #15
   1cff0:	ldrls	pc, [pc, r3, lsl #2]
   1cff4:	b	1d590 <crc32@@Base+0x3dec>
   1cff8:	andeq	sp, r1, r0, asr #4
   1cffc:	ldrdeq	sp, [r1], -ip
   1d000:	andeq	sp, r1, r0, asr #4
   1d004:	andeq	sp, r1, r0, asr #4
   1d008:	andeq	sp, r1, r0, asr #4
   1d00c:	muleq	r1, r0, r5
   1d010:	muleq	r1, r0, r5
   1d014:	muleq	r1, r0, r5
   1d018:			; <UNDEFINED> instruction: 0x0001d1bc
   1d01c:	muleq	r1, r0, r5
   1d020:	andeq	sp, r1, ip, asr #2
   1d024:	andeq	sp, r1, r4, ror r0
   1d028:	andeq	sp, r1, r0, asr #4
   1d02c:			; <UNDEFINED> instruction: 0x0001d2bc
   1d030:	andeq	sp, r1, r8, lsr r0
   1d034:	andeq	sp, r1, r0, asr #4
   1d038:	ldrd	r2, [r5, #16]
   1d03c:	asr	r1, r4, #31
   1d040:	cmp	r1, r3
   1d044:	cmpeq	r4, r2
   1d048:	bhi	1d684 <crc32@@Base+0x3ee0>
   1d04c:	ldrd	r0, [sp, #16]
   1d050:	ldrd	r6, [sp, #24]
   1d054:	adds	r0, r0, r2
   1d058:	adc	r1, r1, r3
   1d05c:	and	r6, r6, r0
   1d060:	and	r7, r7, r1
   1d064:	cmp	r3, r7
   1d068:	cmpeq	r2, r6
   1d06c:	bne	1d5f0 <crc32@@Base+0x3e4c>
   1d070:	mov	r4, r2
   1d074:	ldr	r6, [r5, #40]!	; 0x28
   1d078:	cmp	r6, #0
   1d07c:	bne	1cfe8 <crc32@@Base+0x3844>
   1d080:	ldr	r6, [r9, #1624]	; 0x658
   1d084:	ldr	r4, [pc, #1720]	; 1d744 <crc32@@Base+0x3fa0>
   1d088:	mov	r7, #0
   1d08c:	mov	r5, r4
   1d090:	b	1d0a0 <crc32@@Base+0x38fc>
   1d094:	ldr	r6, [r5, #40]!	; 0x28
   1d098:	cmp	r6, #0
   1d09c:	beq	1d0c4 <crc32@@Base+0x3920>
   1d0a0:	cmp	r6, #13
   1d0a4:	bne	1d094 <crc32@@Base+0x38f0>
   1d0a8:	ldr	r1, [r5, #4]
   1d0ac:	add	r7, r7, #1024	; 0x400
   1d0b0:	ldr	r0, [sp, #992]	; 0x3e0
   1d0b4:	bl	1c5a4 <crc32@@Base+0x2e00>
   1d0b8:	ldr	r6, [r5, #40]!	; 0x28
   1d0bc:	cmp	r6, #0
   1d0c0:	bne	1d0a0 <crc32@@Base+0x38fc>
   1d0c4:	mov	r1, r7
   1d0c8:	mov	r2, r6
   1d0cc:	ldr	r0, [sp, #992]	; 0x3e0
   1d0d0:	str	r7, [sp, #12]
   1d0d4:	bl	124f4 <lseek@plt>
   1d0d8:	cmp	r0, #0
   1d0dc:	blt	1d6d4 <crc32@@Base+0x3f30>
   1d0e0:	cmn	r8, #1
   1d0e4:	bne	1d2d4 <crc32@@Base+0x3b30>
   1d0e8:	ldr	r3, [r9, #1624]	; 0x658
   1d0ec:	cmp	r3, #0
   1d0f0:	beq	1d12c <crc32@@Base+0x3988>
   1d0f4:	movw	r5, #16764	; 0x417c
   1d0f8:	movt	r5, #2
   1d0fc:	cmp	r3, #17
   1d100:	bhi	1d120 <crc32@@Base+0x397c>
   1d104:	mvn	r3, r5, lsr r3
   1d108:	tst	r3, #1
   1d10c:	bne	1d120 <crc32@@Base+0x397c>
   1d110:	mov	r3, sl
   1d114:	ldmib	r4, {r1, r2}
   1d118:	ldr	r0, [sp, #992]	; 0x3e0
   1d11c:	bl	1c15c <crc32@@Base+0x29b8>
   1d120:	ldr	r3, [r4, #40]!	; 0x28
   1d124:	cmp	r3, #0
   1d128:	bne	1d0fc <crc32@@Base+0x3958>
   1d12c:	ldr	r3, [sp, #36]	; 0x24
   1d130:	mov	r0, #0
   1d134:	ldr	r2, [sp, #948]	; 0x3b4
   1d138:	ldr	r3, [r3]
   1d13c:	cmp	r2, r3
   1d140:	bne	1d73c <crc32@@Base+0x3f98>
   1d144:	add	sp, sp, #956	; 0x3bc
   1d148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d14c:	add	r8, r8, #1
   1d150:	mov	ip, #808	; 0x328
   1d154:	ldr	r7, [sp, #32]
   1d158:	mov	lr, #16
   1d15c:	mla	ip, ip, r8, r9
   1d160:	ldr	r0, [sp, #8]
   1d164:	mvn	r6, #111	; 0x6f
   1d168:	movw	r2, #39444	; 0x9a14
   1d16c:	mov	r3, lr
   1d170:	movt	r2, #3
   1d174:	mov	r1, #1
   1d178:	ldr	r0, [r0]
   1d17c:	strh	r7, [ip, #16]
   1d180:	ldr	r7, [sp, #12]
   1d184:	strb	r6, [ip, #795]	; 0x31b
   1d188:	mov	r6, #1024	; 0x400
   1d18c:	strb	lr, [ip, #793]	; 0x319
   1d190:	str	r6, [ip, #812]	; 0x32c
   1d194:	mov	r6, #0
   1d198:	strb	r7, [ip, #18]
   1d19c:	strb	r6, [ip, #794]	; 0x31a
   1d1a0:	str	lr, [ip, #12]
   1d1a4:	bl	122b4 <__fprintf_chk@plt>
   1d1a8:	str	r6, [r9, #4]
   1d1ac:	ldr	r6, [r5, #40]!	; 0x28
   1d1b0:	cmp	r6, #0
   1d1b4:	bne	1cfe8 <crc32@@Base+0x3844>
   1d1b8:	b	1d080 <crc32@@Base+0x38dc>
   1d1bc:	ldr	r3, [r5, #24]
   1d1c0:	ldr	r6, [r5, #40]!	; 0x28
   1d1c4:	lsr	r3, r3, #16
   1d1c8:	cmp	r6, #0
   1d1cc:	lsl	r3, r3, #16
   1d1d0:	str	r3, [r9, #4]
   1d1d4:	bne	1cfe8 <crc32@@Base+0x3844>
   1d1d8:	b	1d080 <crc32@@Base+0x38dc>
   1d1dc:	cmn	r8, #1
   1d1e0:	beq	1d5c8 <crc32@@Base+0x3e24>
   1d1e4:	ldr	r1, [r5, #4]
   1d1e8:	add	r0, sp, #48	; 0x30
   1d1ec:	bl	1c0a8 <crc32@@Base+0x2904>
   1d1f0:	ldr	r1, [r5, #4]
   1d1f4:	ldr	r2, [sp, #92]	; 0x5c
   1d1f8:	mov	ip, #808	; 0x328
   1d1fc:	ldr	r0, [pc, #1340]	; 1d740 <crc32@@Base+0x3f9c>
   1d200:	mov	r3, r4
   1d204:	str	r1, [sp, #4]
   1d208:	mov	r1, fp
   1d20c:	str	r2, [sp]
   1d210:	mov	r2, r5
   1d214:	mla	r0, ip, r8, r0
   1d218:	bl	1c9ec <crc32@@Base+0x3248>
   1d21c:	mov	r0, r4
   1d220:	asr	r1, r4, #31
   1d224:	strd	r0, [r5, #8]
   1d228:	ldr	r6, [r5, #40]!	; 0x28
   1d22c:	ldr	r3, [sp, #92]	; 0x5c
   1d230:	cmp	r6, #0
   1d234:	add	r4, r4, r3
   1d238:	bne	1cfe8 <crc32@@Base+0x3844>
   1d23c:	b	1d080 <crc32@@Base+0x38dc>
   1d240:	cmn	r8, #1
   1d244:	beq	1d5c8 <crc32@@Base+0x3e24>
   1d248:	ldr	r1, [r5, #4]
   1d24c:	add	r0, sp, #48	; 0x30
   1d250:	bl	1c0a8 <crc32@@Base+0x2904>
   1d254:	ldr	r2, [r5, #4]
   1d258:	ldr	r3, [sp, #92]	; 0x5c
   1d25c:	sub	r6, sl, #1
   1d260:	ldr	r1, [pc, #1240]	; 1d740 <crc32@@Base+0x3f9c>
   1d264:	rsb	r7, sl, #0
   1d268:	add	r3, r6, r3
   1d26c:	mov	r0, #808	; 0x328
   1d270:	and	r3, r3, r7
   1d274:	str	r2, [sp, #4]
   1d278:	mla	r0, r0, r8, r1
   1d27c:	str	r3, [sp]
   1d280:	mov	r2, r5
   1d284:	mov	r3, r4
   1d288:	mov	r1, fp
   1d28c:	bl	1c9ec <crc32@@Base+0x3248>
   1d290:	ldr	r3, [sp, #92]	; 0x5c
   1d294:	mov	r0, r4
   1d298:	asr	r1, r4, #31
   1d29c:	add	r6, r6, r3
   1d2a0:	strd	r0, [r5, #8]
   1d2a4:	and	r7, r7, r6
   1d2a8:	ldr	r6, [r5, #40]!	; 0x28
   1d2ac:	add	r4, r4, r7
   1d2b0:	cmp	r6, #0
   1d2b4:	bne	1cfe8 <crc32@@Base+0x3844>
   1d2b8:	b	1d080 <crc32@@Base+0x38dc>
   1d2bc:	ldr	r3, [r5, #24]
   1d2c0:	ldr	r6, [r5, #40]!	; 0x28
   1d2c4:	cmp	r6, #0
   1d2c8:	str	r3, [r9]
   1d2cc:	bne	1cfe8 <crc32@@Base+0x3844>
   1d2d0:	b	1d080 <crc32@@Base+0x38dc>
   1d2d4:	add	r8, r8, #1
   1d2d8:	ands	r3, r8, #255	; 0xff
   1d2dc:	str	r3, [sp, #32]
   1d2e0:	beq	1d56c <crc32@@Base+0x3dc8>
   1d2e4:	movw	r3, #39616	; 0x9ac0
   1d2e8:	ldr	r8, [pc, #1104]	; 1d740 <crc32@@Base+0x3f9c>
   1d2ec:	movt	r3, #3
   1d2f0:	ldr	r7, [sp, #8]
   1d2f4:	str	sl, [sp, #40]	; 0x28
   1d2f8:	mov	fp, r6
   1d2fc:	mov	sl, r3
   1d300:	movw	r2, #39648	; 0x9ae0
   1d304:	str	r4, [sp, #24]
   1d308:	movt	r2, #3
   1d30c:	str	r2, [sp, #16]
   1d310:	mov	r3, #808	; 0x328
   1d314:	ldrb	r1, [r8, #11]
   1d318:	mla	r4, r3, r6, r9
   1d31c:	ldr	r3, [sp, #12]
   1d320:	lsl	r1, r1, #7
   1d324:	ldr	r0, [r7]
   1d328:	add	r5, fp, r3
   1d32c:	add	lr, r1, #16
   1d330:	str	r5, [sp]
   1d334:	add	ip, r1, #32
   1d338:	strh	lr, [r8, #12]
   1d33c:	mov	r3, r6
   1d340:	mov	r2, sl
   1d344:	mov	r1, #1
   1d348:	strh	ip, [r4, #9]
   1d34c:	add	r8, r8, #808	; 0x328
   1d350:	bl	122b4 <__fprintf_chk@plt>
   1d354:	ldrh	r2, [r4, #9]
   1d358:	mov	r3, r6
   1d35c:	ldr	r0, [r7]
   1d360:	add	r5, r2, r5
   1d364:	mov	r1, #1
   1d368:	ldr	r2, [sp, #16]
   1d36c:	sub	r5, r5, #16
   1d370:	str	r5, [sp]
   1d374:	add	r6, r6, #1
   1d378:	bl	122b4 <__fprintf_chk@plt>
   1d37c:	ldr	r2, [r8, #-4]
   1d380:	ldrh	r3, [r4, #9]
   1d384:	ldr	r1, [sp, #32]
   1d388:	uxth	r2, r2
   1d38c:	sub	r3, r3, #1
   1d390:	add	r3, r2, r3
   1d394:	rsb	r2, r2, #0
   1d398:	and	r3, r3, r2
   1d39c:	cmp	r6, r1
   1d3a0:	add	fp, fp, r3
   1d3a4:	uxth	fp, fp
   1d3a8:	blt	1d310 <crc32@@Base+0x3b6c>
   1d3ac:	mov	r0, fp
   1d3b0:	mov	r1, #1
   1d3b4:	ldr	r4, [sp, #24]
   1d3b8:	ldr	sl, [sp, #40]	; 0x28
   1d3bc:	str	fp, [sp, #24]
   1d3c0:	bl	12518 <calloc@plt>
   1d3c4:	subs	r3, r0, #0
   1d3c8:	str	r3, [sp, #8]
   1d3cc:	beq	1d714 <crc32@@Base+0x3f70>
   1d3d0:	ldr	r8, [pc, #872]	; 1d740 <crc32@@Base+0x3f9c>
   1d3d4:	mov	fp, #0
   1d3d8:	ldr	ip, [sp, #8]
   1d3dc:	mov	r3, #808	; 0x328
   1d3e0:	str	r4, [sp, #40]	; 0x28
   1d3e4:	str	r3, [sp, #16]
   1d3e8:	str	sl, [sp, #44]	; 0x2c
   1d3ec:	mov	lr, r8
   1d3f0:	ldrb	r7, [r8, #11]
   1d3f4:	ldm	lr!, {r0, r1, r2, r3}
   1d3f8:	cmp	r7, #0
   1d3fc:	ldr	lr, [sp, #8]
   1d400:	add	r6, ip, #16
   1d404:	sub	lr, ip, lr
   1d408:	str	r0, [ip]
   1d40c:	str	r1, [ip, #4]
   1d410:	str	r2, [ip, #8]
   1d414:	str	r3, [ip, #12]
   1d418:	beq	1d488 <crc32@@Base+0x3ce4>
   1d41c:	ldr	r3, [sp, #16]
   1d420:	lsl	r7, r7, #7
   1d424:	ldr	r2, [pc, #788]	; 1d740 <crc32@@Base+0x3f9c>
   1d428:	mla	r1, r3, fp, r2
   1d42c:	ldr	r3, [sp, #12]
   1d430:	add	lr, r3, lr
   1d434:	mov	r3, r8
   1d438:	add	r1, r1, r7
   1d43c:	ldr	r2, [r3, #16]
   1d440:	add	r3, r3, #128	; 0x80
   1d444:	sub	r2, r2, lr
   1d448:	str	r2, [r3, #-112]	; 0xffffff90
   1d44c:	cmp	r1, r3
   1d450:	bne	1d43c <crc32@@Base+0x3c98>
   1d454:	add	r4, r7, #16
   1d458:	add	sl, r8, #16
   1d45c:	add	r4, ip, r4
   1d460:	mov	r5, r6
   1d464:	mov	r2, #128	; 0x80
   1d468:	mov	r1, sl
   1d46c:	mov	r0, r5
   1d470:	add	r5, r5, r2
   1d474:	bl	1259c <memcpy@plt>
   1d478:	cmp	r4, r5
   1d47c:	add	sl, sl, #128	; 0x80
   1d480:	bne	1d464 <crc32@@Base+0x3cc0>
   1d484:	add	r6, r6, r7
   1d488:	mov	r2, r8
   1d48c:	ldr	r1, [sp, #16]
   1d490:	ldr	r0, [r2, #784]!	; 0x310
   1d494:	add	r8, r8, #808	; 0x328
   1d498:	ldr	r3, [r8, #-4]
   1d49c:	mla	r1, r1, fp, r9
   1d4a0:	str	r0, [r6]
   1d4a4:	ldr	r0, [sp, #32]
   1d4a8:	add	fp, fp, #1
   1d4ac:	ldr	ip, [r2, #4]
   1d4b0:	uxth	r3, r3
   1d4b4:	cmp	fp, r0
   1d4b8:	ldr	r0, [r2, #8]
   1d4bc:	ldr	r2, [r2, #12]
   1d4c0:	sub	r4, r3, #1
   1d4c4:	str	ip, [r6, #4]
   1d4c8:	rsb	r3, r3, #0
   1d4cc:	str	r0, [r6, #8]
   1d4d0:	mov	fp, #1
   1d4d4:	str	r2, [r6, #12]
   1d4d8:	ldrh	ip, [r1, #9]
   1d4dc:	add	r4, r4, ip
   1d4e0:	and	r4, r4, r3
   1d4e4:	sub	r4, r4, ip
   1d4e8:	add	r4, r4, #16
   1d4ec:	add	ip, r6, r4
   1d4f0:	blt	1d3ec <crc32@@Base+0x3c48>
   1d4f4:	ldr	r4, [sp, #40]	; 0x28
   1d4f8:	ldr	sl, [sp, #44]	; 0x2c
   1d4fc:	ldr	r5, [sp, #24]
   1d500:	ldr	r1, [sp, #8]
   1d504:	ldr	r0, [sp, #992]	; 0x3e0
   1d508:	mov	r2, r5
   1d50c:	bl	12608 <write@plt>
   1d510:	cmp	r0, r5
   1d514:	bne	1d6ac <crc32@@Base+0x3f08>
   1d518:	ldr	r0, [sp, #8]
   1d51c:	bl	12128 <free@plt>
   1d520:	b	1d0e8 <crc32@@Base+0x3944>
   1d524:	movw	r3, #65048	; 0xfe18
   1d528:	movt	r3, #4
   1d52c:	movw	r0, #39252	; 0x9954
   1d530:	mov	r2, #22
   1d534:	ldr	r3, [r3]
   1d538:	mov	r1, fp
   1d53c:	movt	r0, #3
   1d540:	bl	12578 <fwrite@plt>
   1d544:	b	1cec0 <crc32@@Base+0x371c>
   1d548:	movw	r3, #65048	; 0xfe18
   1d54c:	movt	r3, #4
   1d550:	movw	r0, #39276	; 0x996c
   1d554:	mov	r2, #21
   1d558:	ldr	r3, [r3]
   1d55c:	mov	r1, #1
   1d560:	movt	r0, #3
   1d564:	bl	12578 <fwrite@plt>
   1d568:	b	1cec0 <crc32@@Base+0x371c>
   1d56c:	ldr	r5, [sp, #32]
   1d570:	mov	r1, #1
   1d574:	mov	r0, r5
   1d578:	bl	12518 <calloc@plt>
   1d57c:	subs	r3, r0, #0
   1d580:	str	r3, [sp, #8]
   1d584:	beq	1d710 <crc32@@Base+0x3f6c>
   1d588:	str	r5, [sp, #24]
   1d58c:	b	1d4fc <crc32@@Base+0x3d58>
   1d590:	movw	r1, #65044	; 0xfe14
   1d594:	movt	r1, #4
   1d598:	mov	r3, r6
   1d59c:	movw	r2, #39572	; 0x9a94
   1d5a0:	ldr	r0, [r1]
   1d5a4:	movt	r2, #3
   1d5a8:	mov	r1, #1
   1d5ac:	bl	122b4 <__fprintf_chk@plt>
   1d5b0:	mov	r0, #1
   1d5b4:	bl	121f4 <exit@plt>
   1d5b8:	mov	r4, #8192	; 0x2000
   1d5bc:	b	1cf94 <crc32@@Base+0x37f0>
   1d5c0:	mvn	r8, #0
   1d5c4:	b	1d084 <crc32@@Base+0x38e0>
   1d5c8:	movw	r3, #65044	; 0xfe14
   1d5cc:	movt	r3, #4
   1d5d0:	movw	r0, #39424	; 0x9a00
   1d5d4:	mov	r2, #19
   1d5d8:	ldr	r3, [r3]
   1d5dc:	movt	r0, #3
   1d5e0:	mov	r1, #1
   1d5e4:	bl	12578 <fwrite@plt>
   1d5e8:	mov	r0, #1
   1d5ec:	bl	121f4 <exit@plt>
   1d5f0:	movw	r3, #65044	; 0xfe14
   1d5f4:	movt	r3, #4
   1d5f8:	movw	r0, #39520	; 0x9a60
   1d5fc:	mov	r2, #49	; 0x31
   1d600:	ldr	r3, [r3]
   1d604:	movt	r0, #3
   1d608:	mov	r1, #1
   1d60c:	bl	12578 <fwrite@plt>
   1d610:	mov	r0, #1
   1d614:	bl	121f4 <exit@plt>
   1d618:	movw	r1, #65044	; 0xfe14
   1d61c:	movt	r1, #4
   1d620:	ldr	r3, [r5, #4]
   1d624:	movw	r2, #39300	; 0x9984
   1d628:	ldr	r0, [r1]
   1d62c:	movt	r2, #3
   1d630:	mov	r1, #1
   1d634:	bl	122b4 <__fprintf_chk@plt>
   1d638:	mov	r0, #1
   1d63c:	bl	121f4 <exit@plt>
   1d640:	movw	r3, #65044	; 0xfe14
   1d644:	movt	r3, #4
   1d648:	movw	r0, #39360	; 0x99c0
   1d64c:	mov	r2, #23
   1d650:	ldr	r3, [r3]
   1d654:	movt	r0, #3
   1d658:	mov	r1, r7
   1d65c:	bl	12578 <fwrite@plt>
   1d660:	mov	r0, r7
   1d664:	bl	121f4 <exit@plt>
   1d668:	mov	r2, r0
   1d66c:	movw	r1, #39336	; 0x99a8
   1d670:	mov	r0, #1
   1d674:	movt	r1, #3
   1d678:	bl	12770 <__printf_chk@plt>
   1d67c:	mov	r0, #1
   1d680:	bl	121f4 <exit@plt>
   1d684:	movw	r3, #65044	; 0xfe14
   1d688:	movt	r3, #4
   1d68c:	movw	r0, #39468	; 0x9a2c
   1d690:	mov	r2, #49	; 0x31
   1d694:	ldr	r3, [r3]
   1d698:	movt	r0, #3
   1d69c:	mov	r1, #1
   1d6a0:	bl	12578 <fwrite@plt>
   1d6a4:	mov	r0, #1
   1d6a8:	bl	121f4 <exit@plt>
   1d6ac:	movw	r3, #65044	; 0xfe14
   1d6b0:	movt	r3, #4
   1d6b4:	movw	r0, #39736	; 0x9b38
   1d6b8:	mov	r2, #24
   1d6bc:	ldr	r3, [r3]
   1d6c0:	movt	r0, #3
   1d6c4:	mov	r1, #1
   1d6c8:	bl	12578 <fwrite@plt>
   1d6cc:	mov	r0, #1
   1d6d0:	bl	121f4 <exit@plt>
   1d6d4:	movw	r3, #65044	; 0xfe14
   1d6d8:	movt	r3, #4
   1d6dc:	ldr	r4, [r3]
   1d6e0:	bl	1268c <__errno_location@plt>
   1d6e4:	ldr	r0, [r0]
   1d6e8:	bl	12200 <strerror@plt>
   1d6ec:	movw	r2, #38704	; 0x9730
   1d6f0:	ldr	r3, [pc, #80]	; 1d748 <crc32@@Base+0x3fa4>
   1d6f4:	movt	r2, #3
   1d6f8:	mov	r1, #1
   1d6fc:	str	r0, [sp]
   1d700:	mov	r0, r4
   1d704:	bl	122b4 <__fprintf_chk@plt>
   1d708:	mov	r0, #1
   1d70c:	bl	121f4 <exit@plt>
   1d710:	ldr	fp, [sp, #8]
   1d714:	movw	r1, #65044	; 0xfe14
   1d718:	movt	r1, #4
   1d71c:	mov	r3, fp
   1d720:	movw	r2, #39704	; 0x9b18
   1d724:	ldr	r0, [r1]
   1d728:	movt	r2, #3
   1d72c:	mov	r1, #1
   1d730:	bl	122b4 <__fprintf_chk@plt>
   1d734:	mov	r0, #1
   1d738:	bl	121f4 <exit@plt>
   1d73c:	bl	12494 <__stack_chk_fail@plt>
   1d740:	andeq	r0, r6, r8, lsl r0
   1d744:	andeq	r0, r6, r8, ror #12
   1d748:	ldrdeq	r9, [r3], -r8
   1d74c:	push	{r4, r5, lr}
   1d750:	mov	ip, r0
   1d754:	ldrh	r4, [sp, #12]
   1d758:	movw	r0, #65048	; 0xfe18
   1d75c:	movt	r0, #4
   1d760:	mvn	r5, #111	; 0x6f
   1d764:	str	r2, [ip, #804]	; 0x324
   1d768:	movw	r2, #39444	; 0x9a14
   1d76c:	strb	r5, [ip, #787]	; 0x313
   1d770:	movt	r2, #3
   1d774:	mov	r5, #16
   1d778:	strh	r1, [ip, #8]
   1d77c:	strb	r5, [ip, #785]	; 0x311
   1d780:	mov	r1, #1
   1d784:	mov	r5, #0
   1d788:	strb	r4, [ip, #10]
   1d78c:	strb	r5, [ip, #786]	; 0x312
   1d790:	ldr	r0, [r0]
   1d794:	str	r3, [ip, #4]
   1d798:	pop	{r4, r5, lr}
   1d79c:	b	122b4 <__fprintf_chk@plt>
   1d7a0:	movw	r3, #61168	; 0xeef0
   1d7a4:	movt	r3, #4
   1d7a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7ac:	movw	r2, #65048	; 0xfe18
   1d7b0:	sub	sp, sp, #60	; 0x3c
   1d7b4:	ldr	ip, [r3]
   1d7b8:	movt	r2, #4
   1d7bc:	mov	r4, r1
   1d7c0:	str	r3, [sp, #24]
   1d7c4:	mov	r7, #0
   1d7c8:	ldr	r3, [r1, #64]	; 0x40
   1d7cc:	mov	r1, #1
   1d7d0:	str	r2, [sp, #16]
   1d7d4:	str	r0, [sp, #20]
   1d7d8:	ldr	r0, [r2]
   1d7dc:	movw	r2, #39764	; 0x9b54
   1d7e0:	movt	r2, #3
   1d7e4:	str	ip, [sp, #52]	; 0x34
   1d7e8:	bl	122b4 <__fprintf_chk@plt>
   1d7ec:	ldr	r3, [r4, #64]	; 0x40
   1d7f0:	movw	r1, #49540	; 0xc184
   1d7f4:	movt	r1, #3
   1d7f8:	str	r7, [sp, #36]	; 0x24
   1d7fc:	mov	r0, r3
   1d800:	str	r3, [sp, #28]
   1d804:	bl	1232c <fopen@plt>
   1d808:	subs	r3, r0, #0
   1d80c:	str	r3, [sp, #8]
   1d810:	beq	1e250 <crc32@@Base+0x4aac>
   1d814:	ldr	fp, [pc, #2776]	; 1e2f4 <crc32@@Base+0x4b50>
   1d818:	movw	r5, #25476	; 0x6384
   1d81c:	movt	r5, #3
   1d820:	movw	r3, #25472	; 0x6380
   1d824:	movt	r3, #3
   1d828:	str	r3, [sp, #12]
   1d82c:	ldr	r3, [sp, #8]
   1d830:	mov	r2, #10
   1d834:	add	r1, sp, #48	; 0x30
   1d838:	add	r0, sp, #36	; 0x24
   1d83c:	bl	12134 <__getdelim@plt>
   1d840:	cmp	r0, #0
   1d844:	ble	1db7c <crc32@@Base+0x43d8>
   1d848:	add	r2, sp, #40	; 0x28
   1d84c:	ldr	r1, [sp, #12]
   1d850:	ldr	r0, [sp, #36]	; 0x24
   1d854:	add	r7, r7, #1
   1d858:	bl	12224 <__strtok_r@plt>
   1d85c:	cmp	r0, #0
   1d860:	beq	1d82c <crc32@@Base+0x4088>
   1d864:	mvn	r6, #0
   1d868:	mov	r4, #0
   1d86c:	str	r0, [sp, #36]	; 0x24
   1d870:	add	r2, sp, #44	; 0x2c
   1d874:	mov	r1, r5
   1d878:	bl	12224 <__strtok_r@plt>
   1d87c:	subs	sl, r0, #0
   1d880:	beq	1d82c <crc32@@Base+0x4088>
   1d884:	ldrb	r3, [sl]
   1d888:	cmp	r3, #35	; 0x23
   1d88c:	beq	1d82c <crc32@@Base+0x4088>
   1d890:	cmp	r4, #3
   1d894:	ldrls	pc, [pc, r4, lsl #2]
   1d898:	b	1dab4 <crc32@@Base+0x4310>
   1d89c:	andeq	sp, r1, ip, lsr #17
   1d8a0:	andeq	sp, r1, r4, lsl #18
   1d8a4:	andeq	sp, r1, r0, ror #19
   1d8a8:	andeq	sp, r1, r4, ror #20
   1d8ac:	movw	r8, #62988	; 0xf60c
   1d8b0:	movt	r8, #4
   1d8b4:	movw	r1, #39812	; 0x9b84
   1d8b8:	mov	r2, sl
   1d8bc:	mov	r0, r8
   1d8c0:	movt	r1, #3
   1d8c4:	bl	1a620 <crc32@@Base+0xe7c>
   1d8c8:	subs	r6, r0, #0
   1d8cc:	blt	1e1f8 <crc32@@Base+0x4a54>
   1d8d0:	cmp	r6, #10
   1d8d4:	beq	1d944 <crc32@@Base+0x41a0>
   1d8d8:	mov	r3, #0
   1d8dc:	add	r2, sp, #44	; 0x2c
   1d8e0:	mov	r0, r3
   1d8e4:	mov	r1, r5
   1d8e8:	str	r3, [sp, #36]	; 0x24
   1d8ec:	bl	12224 <__strtok_r@plt>
   1d8f0:	subs	sl, r0, #0
   1d8f4:	beq	1d82c <crc32@@Base+0x4088>
   1d8f8:	ldrb	r3, [sl]
   1d8fc:	cmp	r3, #35	; 0x23
   1d900:	beq	1d82c <crc32@@Base+0x4088>
   1d904:	sub	r3, r6, #1
   1d908:	cmp	r3, #11
   1d90c:	ldrls	pc, [pc, r3, lsl #2]
   1d910:	b	1d9b4 <crc32@@Base+0x4210>
   1d914:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1d918:	andeq	lr, r1, r8, lsr #1
   1d91c:	andeq	sp, r1, ip, lsr pc
   1d920:	andeq	lr, r1, ip, ror r1
   1d924:	andeq	lr, r1, r0, lsr #32
   1d928:	ldrdeq	sp, [r1], -r4
   1d92c:	ldrdeq	sp, [r1], -r4
   1d930:	andeq	lr, r1, r8, lsl #1
   1d934:	andeq	lr, r1, r8, ror #1
   1d938:			; <UNDEFINED> instruction: 0x0001d9b4
   1d93c:	andeq	sp, r1, r4, asr #26
   1d940:	andeq	sp, r1, r4, asr #26
   1d944:	ldr	r1, [sp, #16]
   1d948:	movw	r4, #16
   1d94c:	ldr	r3, [r8, #156]	; 0x9c
   1d950:	movt	r4, #6
   1d954:	movw	r2, #39868	; 0x9bbc
   1d958:	movt	r2, #3
   1d95c:	add	r3, r3, #1
   1d960:	ldr	r0, [r1]
   1d964:	mov	r1, #1
   1d968:	str	r3, [r8, #156]	; 0x9c
   1d96c:	bl	122b4 <__fprintf_chk@plt>
   1d970:	ldr	r3, [r4, #2904]	; 0xb58
   1d974:	mov	r2, #40	; 0x28
   1d978:	mov	r0, #0
   1d97c:	add	r1, r3, #1
   1d980:	mov	ip, #12
   1d984:	mla	r3, r2, r3, r4
   1d988:	str	r1, [r4, #2904]	; 0xb58
   1d98c:	add	r2, sp, #44	; 0x2c
   1d990:	mov	r1, r5
   1d994:	str	r0, [sp, #36]	; 0x24
   1d998:	str	ip, [r3, #1624]	; 0x658
   1d99c:	bl	12224 <__strtok_r@plt>
   1d9a0:	cmp	r0, #0
   1d9a4:	beq	1d82c <crc32@@Base+0x4088>
   1d9a8:	ldrb	r3, [r0]
   1d9ac:	cmp	r3, #35	; 0x23
   1d9b0:	beq	1d82c <crc32@@Base+0x4088>
   1d9b4:	mov	r3, #0
   1d9b8:	add	r2, sp, #44	; 0x2c
   1d9bc:	mov	r0, r3
   1d9c0:	mov	r1, r5
   1d9c4:	str	r3, [sp, #36]	; 0x24
   1d9c8:	bl	12224 <__strtok_r@plt>
   1d9cc:	subs	sl, r0, #0
   1d9d0:	beq	1d82c <crc32@@Base+0x4088>
   1d9d4:	ldrb	r3, [sl]
   1d9d8:	cmp	r3, #35	; 0x23
   1d9dc:	beq	1d82c <crc32@@Base+0x4088>
   1d9e0:	cmp	r6, #4
   1d9e4:	bne	1df84 <crc32@@Base+0x47e0>
   1d9e8:	mov	r2, #4
   1d9ec:	movw	r1, #39980	; 0x9c2c
   1d9f0:	mov	r0, sl
   1d9f4:	movt	r1, #3
   1d9f8:	bl	1217c <strncmp@plt>
   1d9fc:	subs	r2, r0, #0
   1da00:	beq	1dc18 <crc32@@Base+0x4474>
   1da04:	movw	r1, #39988	; 0x9c34
   1da08:	mov	r2, #5
   1da0c:	movt	r1, #3
   1da10:	mov	r0, sl
   1da14:	bl	1217c <strncmp@plt>
   1da18:	subs	r3, r0, #0
   1da1c:	beq	1dd1c <crc32@@Base+0x4578>
   1da20:	movw	r1, #39996	; 0x9c3c
   1da24:	mov	r2, #5
   1da28:	movt	r1, #3
   1da2c:	mov	r0, sl
   1da30:	bl	1217c <strncmp@plt>
   1da34:	subs	r3, r0, #0
   1da38:	bne	1e27c <crc32@@Base+0x4ad8>
   1da3c:	movw	r4, #16
   1da40:	movt	r4, #6
   1da44:	str	r3, [sp, #36]	; 0x24
   1da48:	mov	ip, #40	; 0x28
   1da4c:	ldr	r3, [r4, #2904]	; 0xb58
   1da50:	add	r2, sp, #44	; 0x2c
   1da54:	mov	r1, r5
   1da58:	mov	r8, #236	; 0xec
   1da5c:	mla	r3, ip, r3, r4
   1da60:	b	1dc3c <crc32@@Base+0x4498>
   1da64:	movw	r4, #16
   1da68:	movt	r4, #6
   1da6c:	cmp	r6, #4
   1da70:	beq	1dc60 <crc32@@Base+0x44bc>
   1da74:	ldr	r3, [r4, #2920]	; 0xb68
   1da78:	sub	r3, r3, #2
   1da7c:	cmp	r3, #4
   1da80:	bls	1db24 <crc32@@Base+0x4380>
   1da84:	mov	r3, #0
   1da88:	add	r2, sp, #44	; 0x2c
   1da8c:	mov	r0, r3
   1da90:	mov	r1, r5
   1da94:	str	r3, [sp, #36]	; 0x24
   1da98:	bl	12224 <__strtok_r@plt>
   1da9c:	cmp	r0, #0
   1daa0:	beq	1d82c <crc32@@Base+0x4088>
   1daa4:	ldrb	r3, [r0]
   1daa8:	cmp	r3, #35	; 0x23
   1daac:	beq	1d82c <crc32@@Base+0x4088>
   1dab0:	mov	r4, #4
   1dab4:	mov	r0, #0
   1dab8:	add	r4, r4, #1
   1dabc:	str	r0, [sp, #36]	; 0x24
   1dac0:	b	1d870 <crc32@@Base+0x40cc>
   1dac4:	ldr	r3, [r4, #2904]	; 0xb58
   1dac8:	mov	r2, #40	; 0x28
   1dacc:	cmp	r6, #12
   1dad0:	mov	r1, r5
   1dad4:	mov	r8, #4
   1dad8:	mov	r9, #0
   1dadc:	mul	r3, r2, r3
   1dae0:	add	r2, sp, #44	; 0x2c
   1dae4:	movne	lr, #6
   1dae8:	moveq	lr, #14
   1daec:	mov	r0, #0
   1daf0:	str	r0, [sp, #36]	; 0x24
   1daf4:	add	ip, fp, r3
   1daf8:	strd	r8, [ip, #32]
   1dafc:	str	lr, [fp, r3]
   1db00:	str	sl, [ip, #4]
   1db04:	bl	12224 <__strtok_r@plt>
   1db08:	subs	sl, r0, #0
   1db0c:	beq	1d82c <crc32@@Base+0x4088>
   1db10:	ldrb	r3, [sl]
   1db14:	cmp	r3, #35	; 0x23
   1db18:	beq	1d82c <crc32@@Base+0x4088>
   1db1c:	cmp	r6, #4
   1db20:	beq	1dc60 <crc32@@Base+0x44bc>
   1db24:	mov	r2, #0
   1db28:	mov	r0, sl
   1db2c:	mov	r1, r2
   1db30:	mov	r9, #0
   1db34:	bl	12290 <strtoll@plt>
   1db38:	ldr	r2, [r4, #2904]	; 0xb58
   1db3c:	mov	r3, #40	; 0x28
   1db40:	mov	ip, #0
   1db44:	mov	r1, r5
   1db48:	str	ip, [sp, #36]	; 0x24
   1db4c:	mla	r3, r3, r2, r4
   1db50:	add	r2, r2, #1
   1db54:	str	r2, [r4, #2904]	; 0xb58
   1db58:	add	r2, sp, #44	; 0x2c
   1db5c:	add	r3, r3, #1616	; 0x650
   1db60:	mov	r8, r0
   1db64:	mov	r0, ip
   1db68:	strd	r8, [r3, #32]
   1db6c:	bl	12224 <__strtok_r@plt>
   1db70:	cmp	r0, #0
   1db74:	bne	1daa4 <crc32@@Base+0x4300>
   1db78:	b	1d82c <crc32@@Base+0x4088>
   1db7c:	movw	r4, #16
   1db80:	movt	r4, #6
   1db84:	ldr	r3, [r4, #2908]	; 0xb5c
   1db88:	cmp	r3, #0
   1db8c:	beq	1e228 <crc32@@Base+0x4a84>
   1db90:	ldr	r6, [sp, #16]
   1db94:	mov	r1, #1
   1db98:	movw	r2, #40048	; 0x9c70
   1db9c:	movt	r2, #3
   1dba0:	movw	r5, #2914	; 0xb62
   1dba4:	ldr	r0, [r6]
   1dba8:	bl	122b4 <__fprintf_chk@plt>
   1dbac:	ldrb	r3, [r4, #2912]	; 0xb60
   1dbb0:	mov	r1, #1
   1dbb4:	movw	r2, #40080	; 0x9c90
   1dbb8:	ldr	r0, [r6]
   1dbbc:	movt	r2, #3
   1dbc0:	bl	122b4 <__fprintf_chk@plt>
   1dbc4:	ldrh	r3, [r4, r5]
   1dbc8:	mov	r1, #1
   1dbcc:	ldr	r0, [r6]
   1dbd0:	movw	r2, #40112	; 0x9cb0
   1dbd4:	movt	r2, #3
   1dbd8:	bl	122b4 <__fprintf_chk@plt>
   1dbdc:	ldr	ip, [sp, #20]
   1dbe0:	ldrh	r3, [r4, r5]
   1dbe4:	ldrb	r2, [r4, #2912]	; 0xb60
   1dbe8:	ldr	r1, [r4, #2908]	; 0xb5c
   1dbec:	ldr	r0, [r4, #2916]	; 0xb64
   1dbf0:	str	ip, [sp]
   1dbf4:	bl	1ce74 <crc32@@Base+0x36d0>
   1dbf8:	ldr	r3, [sp, #24]
   1dbfc:	ldr	r2, [sp, #52]	; 0x34
   1dc00:	mov	r0, #0
   1dc04:	ldr	r3, [r3]
   1dc08:	cmp	r2, r3
   1dc0c:	bne	1e278 <crc32@@Base+0x4ad4>
   1dc10:	add	sp, sp, #60	; 0x3c
   1dc14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc18:	movw	r4, #16
   1dc1c:	movt	r4, #6
   1dc20:	mov	ip, #40	; 0x28
   1dc24:	str	r2, [sp, #36]	; 0x24
   1dc28:	ldr	r3, [r4, #2904]	; 0xb58
   1dc2c:	add	r2, sp, #44	; 0x2c
   1dc30:	mov	r1, r5
   1dc34:	movw	r8, #357	; 0x165
   1dc38:	mla	r3, ip, r3, r4
   1dc3c:	add	r3, r3, #1616	; 0x650
   1dc40:	mov	r9, #0
   1dc44:	strd	r8, [r3, #40]	; 0x28
   1dc48:	bl	12224 <__strtok_r@plt>
   1dc4c:	subs	sl, r0, #0
   1dc50:	beq	1d82c <crc32@@Base+0x4088>
   1dc54:	ldrb	r3, [sl]
   1dc58:	cmp	r3, #35	; 0x23
   1dc5c:	beq	1d82c <crc32@@Base+0x4088>
   1dc60:	mov	r2, #0
   1dc64:	mov	r0, sl
   1dc68:	mov	r1, r2
   1dc6c:	mov	r6, r2
   1dc70:	bl	12290 <strtoll@plt>
   1dc74:	ldr	r2, [r4, #2904]	; 0xb58
   1dc78:	mov	r3, #40	; 0x28
   1dc7c:	mov	r1, r5
   1dc80:	mov	r9, #0
   1dc84:	str	r6, [sp, #36]	; 0x24
   1dc88:	mla	r3, r3, r2, r4
   1dc8c:	add	r2, r2, #1
   1dc90:	str	r2, [r4, #2904]	; 0xb58
   1dc94:	add	r2, sp, #44	; 0x2c
   1dc98:	add	r3, r3, #1616	; 0x650
   1dc9c:	mov	r8, r0
   1dca0:	mov	r0, r6
   1dca4:	strd	r8, [r3, #32]
   1dca8:	bl	12224 <__strtok_r@plt>
   1dcac:	cmp	r0, #0
   1dcb0:	beq	1d82c <crc32@@Base+0x4088>
   1dcb4:	ldrb	r3, [r0]
   1dcb8:	cmp	r3, #35	; 0x23
   1dcbc:	beq	1d82c <crc32@@Base+0x4088>
   1dcc0:	add	r2, sp, #44	; 0x2c
   1dcc4:	mov	r1, r5
   1dcc8:	mov	r0, r6
   1dccc:	str	r6, [sp, #36]	; 0x24
   1dcd0:	bl	12224 <__strtok_r@plt>
   1dcd4:	cmp	r0, #0
   1dcd8:	beq	1d82c <crc32@@Base+0x4088>
   1dcdc:	ldrb	r3, [r0]
   1dce0:	cmp	r3, #35	; 0x23
   1dce4:	beq	1d82c <crc32@@Base+0x4088>
   1dce8:	mov	r0, r6
   1dcec:	add	r2, sp, #44	; 0x2c
   1dcf0:	mov	r1, r5
   1dcf4:	str	r6, [sp, #36]	; 0x24
   1dcf8:	bl	12224 <__strtok_r@plt>
   1dcfc:	cmp	r0, #0
   1dd00:	beq	1d82c <crc32@@Base+0x4088>
   1dd04:	ldrb	r3, [r0]
   1dd08:	cmp	r3, #35	; 0x23
   1dd0c:	beq	1d82c <crc32@@Base+0x4088>
   1dd10:	mov	r6, #4
   1dd14:	mov	r4, #6
   1dd18:	b	1dab4 <crc32@@Base+0x4310>
   1dd1c:	movw	r4, #16
   1dd20:	movt	r4, #6
   1dd24:	str	r3, [sp, #36]	; 0x24
   1dd28:	mov	ip, #40	; 0x28
   1dd2c:	ldr	r3, [r4, #2904]	; 0xb58
   1dd30:	add	r2, sp, #44	; 0x2c
   1dd34:	mov	r1, r5
   1dd38:	movw	r8, #354	; 0x162
   1dd3c:	mla	r3, ip, r3, r4
   1dd40:	b	1dc3c <crc32@@Base+0x4498>
   1dd44:	movw	r1, #39928	; 0x9bf8
   1dd48:	mov	r2, sl
   1dd4c:	movt	r1, #3
   1dd50:	ldr	r0, [pc, #1440]	; 1e2f8 <crc32@@Base+0x4b54>
   1dd54:	bl	1a620 <crc32@@Base+0xe7c>
   1dd58:	movw	r4, #16
   1dd5c:	movt	r4, #6
   1dd60:	cmp	r0, #0
   1dd64:	str	r0, [r4, #2920]	; 0xb68
   1dd68:	blt	1e2a4 <crc32@@Base+0x4b00>
   1dd6c:	mov	r3, #0
   1dd70:	add	r2, sp, #44	; 0x2c
   1dd74:	mov	r0, r3
   1dd78:	mov	r1, r5
   1dd7c:	str	r3, [sp, #36]	; 0x24
   1dd80:	bl	12224 <__strtok_r@plt>
   1dd84:	subs	sl, r0, #0
   1dd88:	beq	1d82c <crc32@@Base+0x4088>
   1dd8c:	ldrb	r3, [sl]
   1dd90:	cmp	r3, #35	; 0x23
   1dd94:	beq	1d82c <crc32@@Base+0x4088>
   1dd98:	ldr	r3, [r4, #2920]	; 0xb68
   1dd9c:	sub	r3, r3, #1
   1dda0:	cmp	r3, #5
   1dda4:	ldrls	pc, [pc, r3, lsl #2]
   1dda8:	b	1e14c <crc32@@Base+0x49a8>
   1ddac:	andeq	sp, r1, r0, asr #28
   1ddb0:	andeq	sp, r1, r4, asr #27
   1ddb4:	andeq	sp, r1, ip, lsl #28
   1ddb8:	andeq	sp, r1, r4, asr #21
   1ddbc:	andeq	sp, r1, r4, asr #21
   1ddc0:	muleq	r1, r8, lr
   1ddc4:	ldr	r2, [r4, #2904]	; 0xb58
   1ddc8:	mov	r3, #40	; 0x28
   1ddcc:	mov	r1, r5
   1ddd0:	mov	r8, #0
   1ddd4:	mov	r0, #0
   1ddd8:	mov	lr, #4
   1dddc:	mul	r3, r3, r2
   1dde0:	add	r2, sp, #44	; 0x2c
   1dde4:	str	r0, [sp, #36]	; 0x24
   1dde8:	add	ip, fp, r3
   1ddec:	str	lr, [fp, r3]
   1ddf0:	str	sl, [ip, #4]
   1ddf4:	mov	r9, #0
   1ddf8:	strd	r8, [ip, #32]
   1ddfc:	bl	12224 <__strtok_r@plt>
   1de00:	subs	sl, r0, #0
   1de04:	bne	1db10 <crc32@@Base+0x436c>
   1de08:	b	1d82c <crc32@@Base+0x4088>
   1de0c:	ldr	r2, [r4, #2904]	; 0xb58
   1de10:	mov	r3, #40	; 0x28
   1de14:	mov	r0, #0
   1de18:	mov	lr, #5
   1de1c:	str	r0, [sp, #36]	; 0x24
   1de20:	mov	r1, r5
   1de24:	mul	r3, r3, r2
   1de28:	mov	r8, #1
   1de2c:	add	r2, sp, #44	; 0x2c
   1de30:	add	ip, fp, r3
   1de34:	str	lr, [fp, r3]
   1de38:	str	sl, [ip, #4]
   1de3c:	b	1ddf4 <crc32@@Base+0x4650>
   1de40:	ldr	r2, [r4, #2904]	; 0xb58
   1de44:	mov	r3, #40	; 0x28
   1de48:	mov	r0, #0
   1de4c:	mov	lr, #2
   1de50:	mov	r1, r5
   1de54:	str	r0, [sp, #36]	; 0x24
   1de58:	mul	r3, r3, r2
   1de5c:	add	r2, r2, #1
   1de60:	str	r2, [r4, #2904]	; 0xb58
   1de64:	add	r2, sp, #44	; 0x2c
   1de68:	add	ip, fp, r3
   1de6c:	str	lr, [fp, r3]
   1de70:	str	sl, [ip, #4]
   1de74:	bl	12224 <__strtok_r@plt>
   1de78:	subs	sl, r0, #0
   1de7c:	beq	1d82c <crc32@@Base+0x4088>
   1de80:	ldrb	r3, [sl]
   1de84:	cmp	r3, #35	; 0x23
   1de88:	beq	1d82c <crc32@@Base+0x4088>
   1de8c:	cmp	r6, #4
   1de90:	bne	1da84 <crc32@@Base+0x42e0>
   1de94:	b	1dc60 <crc32@@Base+0x44bc>
   1de98:	ldr	r2, [r4, #2904]	; 0xb58
   1de9c:	mov	r3, #40	; 0x28
   1dea0:	cmp	r6, #12
   1dea4:	mov	r0, #0
   1dea8:	mov	r8, #5
   1deac:	mov	r9, #0
   1deb0:	mul	r3, r3, r2
   1deb4:	movne	lr, #6
   1deb8:	moveq	lr, #14
   1debc:	str	r0, [sp, #36]	; 0x24
   1dec0:	add	r2, sp, #44	; 0x2c
   1dec4:	mov	r1, r5
   1dec8:	add	ip, fp, r3
   1decc:	strd	r8, [ip, #32]
   1ded0:	b	1dafc <crc32@@Base+0x4358>
   1ded4:	movw	r4, #16
   1ded8:	movt	r4, #6
   1dedc:	mov	r3, #40	; 0x28
   1dee0:	mov	r2, #0
   1dee4:	ldr	r8, [r4, #2904]	; 0xb58
   1dee8:	mov	r0, sl
   1deec:	mov	ip, #10
   1def0:	mul	r3, r3, r8
   1def4:	mov	r1, r2
   1def8:	add	r8, r8, #1
   1defc:	mov	r9, #0
   1df00:	add	sl, fp, r3
   1df04:	str	ip, [fp, r3]
   1df08:	bl	12290 <strtoll@plt>
   1df0c:	mov	r3, #0
   1df10:	str	r8, [r4, #2904]	; 0xb58
   1df14:	add	r2, sp, #44	; 0x2c
   1df18:	str	r3, [sp, #36]	; 0x24
   1df1c:	mov	r1, r5
   1df20:	mov	r8, r0
   1df24:	mov	r0, r3
   1df28:	strd	r8, [sl, #24]
   1df2c:	bl	12224 <__strtok_r@plt>
   1df30:	subs	sl, r0, #0
   1df34:	bne	1dd8c <crc32@@Base+0x45e8>
   1df38:	b	1d82c <crc32@@Base+0x4088>
   1df3c:	mov	r2, #0
   1df40:	mov	r0, sl
   1df44:	mov	r1, r2
   1df48:	bl	12290 <strtoll@plt>
   1df4c:	ldr	ip, [pc, #936]	; 1e2fc <crc32@@Base+0x4b58>
   1df50:	mov	r3, #0
   1df54:	add	r2, sp, #44	; 0x2c
   1df58:	mov	r1, r5
   1df5c:	str	r3, [sp, #36]	; 0x24
   1df60:	uxtb	lr, r0
   1df64:	mov	r0, r3
   1df68:	strh	lr, [ip]
   1df6c:	bl	12224 <__strtok_r@plt>
   1df70:	subs	sl, r0, #0
   1df74:	beq	1d82c <crc32@@Base+0x4088>
   1df78:	ldrb	r3, [sl]
   1df7c:	cmp	r3, #35	; 0x23
   1df80:	beq	1d82c <crc32@@Base+0x4088>
   1df84:	movw	r4, #16
   1df88:	movt	r4, #6
   1df8c:	b	1dd98 <crc32@@Base+0x45f4>
   1df90:	mov	r2, sl
   1df94:	movw	r1, #37884	; 0x93fc
   1df98:	ldr	r0, [pc, #864]	; 1e300 <crc32@@Base+0x4b5c>
   1df9c:	movt	r1, #3
   1dfa0:	bl	1a620 <crc32@@Base+0xe7c>
   1dfa4:	movw	r4, #16
   1dfa8:	movt	r4, #6
   1dfac:	mov	r3, #0
   1dfb0:	add	r2, sp, #44	; 0x2c
   1dfb4:	mov	r1, r5
   1dfb8:	str	r3, [sp, #36]	; 0x24
   1dfbc:	str	r0, [r4, #2908]	; 0xb5c
   1dfc0:	mov	r0, r3
   1dfc4:	bl	12224 <__strtok_r@plt>
   1dfc8:	subs	sl, r0, #0
   1dfcc:	bne	1dd8c <crc32@@Base+0x45e8>
   1dfd0:	b	1d82c <crc32@@Base+0x4088>
   1dfd4:	movw	r4, #16
   1dfd8:	movt	r4, #6
   1dfdc:	mov	r3, #40	; 0x28
   1dfe0:	mov	r0, #0
   1dfe4:	ldr	r2, [r4, #2904]	; 0xb58
   1dfe8:	mov	lr, #13
   1dfec:	str	r0, [sp, #36]	; 0x24
   1dff0:	add	r1, r2, #1
   1dff4:	str	r1, [r4, #2904]	; 0xb58
   1dff8:	mul	r3, r3, r2
   1dffc:	mov	r1, r5
   1e000:	add	r2, sp, #44	; 0x2c
   1e004:	add	ip, fp, r3
   1e008:	str	lr, [fp, r3]
   1e00c:	str	sl, [ip, #4]
   1e010:	bl	12224 <__strtok_r@plt>
   1e014:	subs	sl, r0, #0
   1e018:	bne	1dd8c <crc32@@Base+0x45e8>
   1e01c:	b	1d82c <crc32@@Base+0x4088>
   1e020:	movw	r4, #16
   1e024:	movt	r4, #6
   1e028:	mov	r3, #40	; 0x28
   1e02c:	mov	r2, #0
   1e030:	ldr	r8, [r4, #2904]	; 0xb58
   1e034:	mov	ip, #16
   1e038:	mov	r0, sl
   1e03c:	mov	r1, r2
   1e040:	mov	r9, #0
   1e044:	mul	r3, r3, r8
   1e048:	add	r8, r8, #1
   1e04c:	add	sl, fp, r3
   1e050:	str	ip, [fp, r3]
   1e054:	bl	12290 <strtoll@plt>
   1e058:	mov	r3, #0
   1e05c:	str	r8, [r4, #2904]	; 0xb58
   1e060:	add	r2, sp, #44	; 0x2c
   1e064:	mov	r1, r5
   1e068:	str	r3, [sp, #36]	; 0x24
   1e06c:	mov	r8, r0
   1e070:	mov	r0, r3
   1e074:	strd	r8, [sl, #16]
   1e078:	bl	12224 <__strtok_r@plt>
   1e07c:	subs	sl, r0, #0
   1e080:	bne	1dd8c <crc32@@Base+0x45e8>
   1e084:	b	1d82c <crc32@@Base+0x4088>
   1e088:	movw	r4, #16
   1e08c:	movt	r4, #6
   1e090:	mov	r3, #40	; 0x28
   1e094:	mov	r2, #0
   1e098:	ldr	r8, [r4, #2904]	; 0xb58
   1e09c:	mov	r0, sl
   1e0a0:	mov	ip, #15
   1e0a4:	b	1def0 <crc32@@Base+0x474c>
   1e0a8:	mov	r2, #0
   1e0ac:	mov	r0, sl
   1e0b0:	mov	r1, r2
   1e0b4:	movw	r4, #16
   1e0b8:	bl	12290 <strtoll@plt>
   1e0bc:	movt	r4, #6
   1e0c0:	mov	r3, #0
   1e0c4:	add	r2, sp, #44	; 0x2c
   1e0c8:	mov	r1, r5
   1e0cc:	str	r3, [sp, #36]	; 0x24
   1e0d0:	strb	r0, [r4, #2912]	; 0xb60
   1e0d4:	mov	r0, r3
   1e0d8:	bl	12224 <__strtok_r@plt>
   1e0dc:	subs	sl, r0, #0
   1e0e0:	bne	1dd8c <crc32@@Base+0x45e8>
   1e0e4:	b	1d82c <crc32@@Base+0x4088>
   1e0e8:	movw	r1, #39888	; 0x9bd0
   1e0ec:	mov	r2, #6
   1e0f0:	movt	r1, #3
   1e0f4:	mov	r0, sl
   1e0f8:	bl	1217c <strncmp@plt>
   1e0fc:	subs	r3, r0, #0
   1e100:	beq	1e1cc <crc32@@Base+0x4a28>
   1e104:	mov	r0, sl
   1e108:	movw	r1, #39896	; 0x9bd8
   1e10c:	mov	r2, #6
   1e110:	movt	r1, #3
   1e114:	bl	1217c <strncmp@plt>
   1e118:	subs	r3, r0, #0
   1e11c:	bne	1e2cc <crc32@@Base+0x4b28>
   1e120:	movw	r4, #16
   1e124:	movt	r4, #6
   1e128:	add	r2, sp, #44	; 0x2c
   1e12c:	mov	r1, r5
   1e130:	str	r3, [sp, #36]	; 0x24
   1e134:	mov	r3, #2
   1e138:	str	r3, [r4, #2916]	; 0xb64
   1e13c:	bl	12224 <__strtok_r@plt>
   1e140:	subs	sl, r0, #0
   1e144:	bne	1dd8c <crc32@@Base+0x45e8>
   1e148:	b	1d82c <crc32@@Base+0x4088>
   1e14c:	mov	r3, #0
   1e150:	add	r2, sp, #44	; 0x2c
   1e154:	mov	r0, r3
   1e158:	mov	r1, r5
   1e15c:	str	r3, [sp, #36]	; 0x24
   1e160:	bl	12224 <__strtok_r@plt>
   1e164:	subs	sl, r0, #0
   1e168:	beq	1d82c <crc32@@Base+0x4088>
   1e16c:	ldrb	r3, [sl]
   1e170:	cmp	r3, #35	; 0x23
   1e174:	bne	1da6c <crc32@@Base+0x42c8>
   1e178:	b	1d82c <crc32@@Base+0x4088>
   1e17c:	movw	r4, #16
   1e180:	movt	r4, #6
   1e184:	mov	r3, #40	; 0x28
   1e188:	mov	r0, #0
   1e18c:	ldr	r2, [r4, #2904]	; 0xb58
   1e190:	mov	lr, #17
   1e194:	mov	r1, r5
   1e198:	str	r0, [sp, #36]	; 0x24
   1e19c:	mul	r3, r3, r2
   1e1a0:	add	r2, sp, #44	; 0x2c
   1e1a4:	add	ip, fp, r3
   1e1a8:	str	lr, [fp, r3]
   1e1ac:	str	sl, [ip, #4]
   1e1b0:	bl	12224 <__strtok_r@plt>
   1e1b4:	subs	sl, r0, #0
   1e1b8:	beq	1d82c <crc32@@Base+0x4088>
   1e1bc:	ldrb	r3, [sl]
   1e1c0:	cmp	r3, #35	; 0x23
   1e1c4:	bne	1d9e8 <crc32@@Base+0x4244>
   1e1c8:	b	1d82c <crc32@@Base+0x4088>
   1e1cc:	movw	r4, #16
   1e1d0:	movt	r4, #6
   1e1d4:	add	r2, sp, #44	; 0x2c
   1e1d8:	mov	r1, r5
   1e1dc:	str	r3, [sp, #36]	; 0x24
   1e1e0:	mov	r3, #1
   1e1e4:	str	r3, [r4, #2916]	; 0xb64
   1e1e8:	bl	12224 <__strtok_r@plt>
   1e1ec:	subs	sl, r0, #0
   1e1f0:	bne	1dd8c <crc32@@Base+0x45e8>
   1e1f4:	b	1d82c <crc32@@Base+0x4088>
   1e1f8:	movw	r2, #65044	; 0xfe14
   1e1fc:	movt	r2, #4
   1e200:	str	sl, [sp, #4]
   1e204:	mov	r1, #1
   1e208:	ldr	r0, [r2]
   1e20c:	movw	r2, #39828	; 0x9b94
   1e210:	ldr	r3, [sp, #28]
   1e214:	movt	r2, #3
   1e218:	str	r7, [sp]
   1e21c:	bl	122b4 <__fprintf_chk@plt>
   1e220:	mov	r0, #1
   1e224:	bl	121f4 <exit@plt>
   1e228:	movw	r3, #65044	; 0xfe14
   1e22c:	movt	r3, #4
   1e230:	movw	r0, #40028	; 0x9c5c
   1e234:	mov	r2, #18
   1e238:	ldr	r3, [r3]
   1e23c:	movt	r0, #3
   1e240:	mov	r1, #1
   1e244:	bl	12578 <fwrite@plt>
   1e248:	mov	r0, #1
   1e24c:	bl	121f4 <exit@plt>
   1e250:	movw	r1, #65044	; 0xfe14
   1e254:	movt	r1, #4
   1e258:	ldr	r3, [sp, #28]
   1e25c:	movw	r2, #39776	; 0x9b60
   1e260:	ldr	r0, [r1]
   1e264:	movt	r2, #3
   1e268:	mov	r1, #1
   1e26c:	bl	122b4 <__fprintf_chk@plt>
   1e270:	mov	r0, #1
   1e274:	bl	121f4 <exit@plt>
   1e278:	bl	12494 <__stack_chk_fail@plt>
   1e27c:	movw	r1, #65044	; 0xfe14
   1e280:	movt	r1, #4
   1e284:	mov	r3, sl
   1e288:	movw	r2, #40004	; 0x9c44
   1e28c:	ldr	r0, [r1]
   1e290:	movt	r2, #3
   1e294:	mov	r1, #1
   1e298:	bl	122b4 <__fprintf_chk@plt>
   1e29c:	mov	r0, #1
   1e2a0:	bl	121f4 <exit@plt>
   1e2a4:	movw	r1, #65044	; 0xfe14
   1e2a8:	movt	r1, #4
   1e2ac:	mov	r3, sl
   1e2b0:	movw	r2, #39952	; 0x9c10
   1e2b4:	ldr	r0, [r1]
   1e2b8:	movt	r2, #3
   1e2bc:	mov	r1, #1
   1e2c0:	bl	122b4 <__fprintf_chk@plt>
   1e2c4:	mov	r0, #1
   1e2c8:	bl	121f4 <exit@plt>
   1e2cc:	movw	r3, #65044	; 0xfe14
   1e2d0:	movt	r3, #4
   1e2d4:	movw	r0, #39904	; 0x9be0
   1e2d8:	mov	r2, #20
   1e2dc:	ldr	r3, [r3]
   1e2e0:	movt	r0, #3
   1e2e4:	mov	r1, #1
   1e2e8:	bl	12578 <fwrite@plt>
   1e2ec:	mov	r0, #1
   1e2f0:	bl	121f4 <exit@plt>
   1e2f4:	andeq	r0, r6, r8, ror #12
   1e2f8:	andeq	pc, r4, r0, lsl #14
   1e2fc:	andeq	r0, r6, r2, ror fp
   1e300:	andeq	pc, r4, ip, lsr #13
   1e304:	mov	r0, #0
   1e308:	bx	lr
   1e30c:	bx	lr
   1e310:	bx	lr
   1e314:	subs	r0, r0, #37	; 0x25
   1e318:	movne	r0, #1
   1e31c:	bx	lr
   1e320:	push	{r4, r5, r6, r7, r8, lr}
   1e324:	movw	r4, #61168	; 0xeef0
   1e328:	movt	r4, #4
   1e32c:	sub	sp, sp, #16
   1e330:	mov	r5, r0
   1e334:	mov	r8, r1
   1e338:	ldr	r3, [r4]
   1e33c:	mov	r7, r2
   1e340:	str	r3, [sp, #12]
   1e344:	bl	1268c <__errno_location@plt>
   1e348:	mov	r3, #0
   1e34c:	mov	r2, #16
   1e350:	add	r1, sp, #8
   1e354:	mov	r6, r0
   1e358:	mov	r0, r5
   1e35c:	str	r3, [r6]
   1e360:	bl	122cc <strtoul@plt>
   1e364:	ldr	r3, [r6]
   1e368:	cmp	r3, #0
   1e36c:	bne	1e394 <crc32@@Base+0x4bf0>
   1e370:	ldr	r3, [sp, #8]
   1e374:	cmp	r3, r5
   1e378:	beq	1e394 <crc32@@Base+0x4bf0>
   1e37c:	ldr	r2, [sp, #12]
   1e380:	ldr	r3, [r4]
   1e384:	cmp	r2, r3
   1e388:	bne	1e3c4 <crc32@@Base+0x4c20>
   1e38c:	add	sp, sp, #16
   1e390:	pop	{r4, r5, r6, r7, r8, pc}
   1e394:	movw	r1, #65044	; 0xfe14
   1e398:	movt	r1, #4
   1e39c:	str	r5, [sp, #4]
   1e3a0:	mov	r3, r8
   1e3a4:	str	r7, [sp]
   1e3a8:	movw	r2, #25540	; 0x63c4
   1e3ac:	ldr	r0, [r1]
   1e3b0:	movt	r2, #3
   1e3b4:	mov	r1, #1
   1e3b8:	bl	122b4 <__fprintf_chk@plt>
   1e3bc:	mov	r0, #1
   1e3c0:	bl	121f4 <exit@plt>
   1e3c4:	bl	12494 <__stack_chk_fail@plt>
   1e3c8:	push	{r4, r5, r6, r7, lr}
   1e3cc:	movw	r6, #61168	; 0xeef0
   1e3d0:	sub	sp, sp, #20
   1e3d4:	movt	r6, #4
   1e3d8:	add	r3, sp, #16
   1e3dc:	movw	r4, #65048	; 0xfe18
   1e3e0:	ldr	ip, [r6]
   1e3e4:	movt	r4, #4
   1e3e8:	add	r1, r3, r0, lsl #2
   1e3ec:	mov	r7, r0
   1e3f0:	movw	r2, #40648	; 0x9ec8
   1e3f4:	movw	r3, #40656	; 0x9ed0
   1e3f8:	movt	r2, #3
   1e3fc:	movt	r3, #3
   1e400:	ldr	r0, [r4]
   1e404:	strd	r2, [sp, #4]
   1e408:	movw	r2, #40672	; 0x9ee0
   1e40c:	ldr	r3, [r1, #-12]
   1e410:	movt	r2, #3
   1e414:	mov	r1, #1
   1e418:	str	ip, [sp, #12]
   1e41c:	bl	122b4 <__fprintf_chk@plt>
   1e420:	movw	r3, #2940	; 0xb7c
   1e424:	movt	r3, #6
   1e428:	mov	r1, #1
   1e42c:	add	r5, r3, r7, lsl #6
   1e430:	ldr	r0, [r4]
   1e434:	ldrb	r3, [r3, r7, lsl #6]
   1e438:	movw	r2, #40712	; 0x9f08
   1e43c:	movt	r2, #3
   1e440:	bl	122b4 <__fprintf_chk@plt>
   1e444:	ldrh	r3, [r5, #1]
   1e448:	mov	r1, #1
   1e44c:	ldr	r0, [r4]
   1e450:	movw	r2, #40732	; 0x9f1c
   1e454:	movt	r2, #3
   1e458:	bl	122b4 <__fprintf_chk@plt>
   1e45c:	ldrb	r3, [r5, #3]
   1e460:	mov	r1, #1
   1e464:	ldr	r0, [r4]
   1e468:	movw	r2, #40756	; 0x9f34
   1e46c:	movt	r2, #3
   1e470:	bl	122b4 <__fprintf_chk@plt>
   1e474:	ldr	r3, [r5, #4]
   1e478:	mov	r1, #1
   1e47c:	ldr	r0, [r4]
   1e480:	movw	r2, #40780	; 0x9f4c
   1e484:	movt	r2, #3
   1e488:	bl	122b4 <__fprintf_chk@plt>
   1e48c:	ldr	r3, [r5, #8]
   1e490:	mov	r1, #1
   1e494:	ldr	r0, [r4]
   1e498:	movw	r2, #40796	; 0x9f5c
   1e49c:	movt	r2, #3
   1e4a0:	bl	122b4 <__fprintf_chk@plt>
   1e4a4:	ldr	r3, [r5, #12]
   1e4a8:	mov	r1, #1
   1e4ac:	ldr	r0, [r4]
   1e4b0:	movw	r2, #40816	; 0x9f70
   1e4b4:	movt	r2, #3
   1e4b8:	bl	122b4 <__fprintf_chk@plt>
   1e4bc:	ldr	r3, [r5, #16]
   1e4c0:	mov	r1, #1
   1e4c4:	ldr	r0, [r4]
   1e4c8:	movw	r2, #40836	; 0x9f84
   1e4cc:	movt	r2, #3
   1e4d0:	bl	122b4 <__fprintf_chk@plt>
   1e4d4:	ldr	r3, [r5, #20]
   1e4d8:	mov	r1, #1
   1e4dc:	ldr	r0, [r4]
   1e4e0:	movw	r2, #40860	; 0x9f9c
   1e4e4:	movt	r2, #3
   1e4e8:	bl	122b4 <__fprintf_chk@plt>
   1e4ec:	ldr	r3, [r5, #24]
   1e4f0:	mov	r1, #1
   1e4f4:	ldr	r0, [r4]
   1e4f8:	movw	r2, #40876	; 0x9fac
   1e4fc:	movt	r2, #3
   1e500:	bl	122b4 <__fprintf_chk@plt>
   1e504:	ldr	r3, [r5, #28]
   1e508:	mov	r1, #1
   1e50c:	ldr	r0, [r4]
   1e510:	movw	r2, #40892	; 0x9fbc
   1e514:	movt	r2, #3
   1e518:	bl	122b4 <__fprintf_chk@plt>
   1e51c:	ldr	r3, [r5, #32]
   1e520:	mov	r1, #1
   1e524:	ldr	r0, [r4]
   1e528:	movw	r2, #40912	; 0x9fd0
   1e52c:	movt	r2, #3
   1e530:	bl	122b4 <__fprintf_chk@plt>
   1e534:	ldr	r3, [r5, #36]	; 0x24
   1e538:	ldr	r0, [r4]
   1e53c:	movw	r2, #40936	; 0x9fe8
   1e540:	mov	r1, #1
   1e544:	movt	r2, #3
   1e548:	bl	122b4 <__fprintf_chk@plt>
   1e54c:	ldr	r2, [sp, #12]
   1e550:	ldr	r3, [r6]
   1e554:	cmp	r2, r3
   1e558:	bne	1e57c <crc32@@Base+0x4dd8>
   1e55c:	ldr	r3, [r5, #40]	; 0x28
   1e560:	movw	r2, #40960	; 0xa000
   1e564:	ldr	r0, [r4]
   1e568:	movt	r2, #3
   1e56c:	mov	r1, #1
   1e570:	add	sp, sp, #20
   1e574:	pop	{r4, r5, r6, r7, lr}
   1e578:	b	122b4 <__fprintf_chk@plt>
   1e57c:	bl	12494 <__stack_chk_fail@plt>
   1e580:	push	{r4, r5, r6, r7, lr}
   1e584:	movw	r7, #61168	; 0xeef0
   1e588:	sub	sp, sp, #4096	; 0x1000
   1e58c:	movt	r7, #4
   1e590:	sub	sp, sp, #20
   1e594:	mov	r4, r1
   1e598:	ldr	r3, [r7]
   1e59c:	add	ip, sp, #4096	; 0x1000
   1e5a0:	add	ip, ip, #12
   1e5a4:	mov	r6, r0
   1e5a8:	mov	r2, #4096	; 0x1000
   1e5ac:	mov	r1, #0
   1e5b0:	add	r0, sp, #12
   1e5b4:	str	r3, [ip]
   1e5b8:	bl	122e4 <memset@plt>
   1e5bc:	mov	r1, r4
   1e5c0:	mov	r0, r6
   1e5c4:	mov	r2, #0
   1e5c8:	bl	124f4 <lseek@plt>
   1e5cc:	cmp	r0, #0
   1e5d0:	movge	r4, #8192	; 0x2000
   1e5d4:	blt	1e660 <crc32@@Base+0x4ebc>
   1e5d8:	cmp	r4, #4096	; 0x1000
   1e5dc:	add	r1, sp, #12
   1e5e0:	mov	r0, r6
   1e5e4:	movlt	r5, r4
   1e5e8:	movge	r5, #4096	; 0x1000
   1e5ec:	mov	r2, r5
   1e5f0:	bl	12608 <write@plt>
   1e5f4:	cmp	r0, r5
   1e5f8:	bne	1e628 <crc32@@Base+0x4e84>
   1e5fc:	subs	r4, r4, r0
   1e600:	bne	1e5d8 <crc32@@Base+0x4e34>
   1e604:	add	r3, sp, #4096	; 0x1000
   1e608:	add	r3, r3, #12
   1e60c:	ldr	r2, [r3]
   1e610:	ldr	r3, [r7]
   1e614:	cmp	r2, r3
   1e618:	bne	1e6a0 <crc32@@Base+0x4efc>
   1e61c:	add	sp, sp, #4096	; 0x1000
   1e620:	add	sp, sp, #20
   1e624:	pop	{r4, r5, r6, r7, pc}
   1e628:	movw	r3, #65044	; 0xfe14
   1e62c:	movt	r3, #4
   1e630:	ldr	r4, [r3]
   1e634:	bl	1268c <__errno_location@plt>
   1e638:	ldr	r0, [r0]
   1e63c:	bl	12200 <strerror@plt>
   1e640:	movw	r2, #38740	; 0x9754
   1e644:	mov	r1, #1
   1e648:	movt	r2, #3
   1e64c:	mov	r3, r0
   1e650:	mov	r0, r4
   1e654:	bl	122b4 <__fprintf_chk@plt>
   1e658:	mov	r0, #1
   1e65c:	bl	121f4 <exit@plt>
   1e660:	movw	r3, #65044	; 0xfe14
   1e664:	movt	r3, #4
   1e668:	ldr	r4, [r3]
   1e66c:	bl	1268c <__errno_location@plt>
   1e670:	ldr	r0, [r0]
   1e674:	bl	12200 <strerror@plt>
   1e678:	movw	r3, #40612	; 0x9ea4
   1e67c:	movw	r2, #40988	; 0xa01c
   1e680:	movt	r3, #3
   1e684:	movt	r2, #3
   1e688:	mov	r1, #1
   1e68c:	str	r0, [sp]
   1e690:	mov	r0, r4
   1e694:	bl	122b4 <__fprintf_chk@plt>
   1e698:	mov	r0, #1
   1e69c:	bl	121f4 <exit@plt>
   1e6a0:	bl	12494 <__stack_chk_fail@plt>
   1e6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6a8:	movw	r7, #61168	; 0xeef0
   1e6ac:	sub	sp, sp, #4160	; 0x1040
   1e6b0:	movt	r7, #4
   1e6b4:	sub	sp, sp, #52	; 0x34
   1e6b8:	mov	sl, r3
   1e6bc:	ldr	ip, [r7]
   1e6c0:	add	r3, sp, #4160	; 0x1040
   1e6c4:	mov	r6, #0
   1e6c8:	add	r3, r3, #44	; 0x2c
   1e6cc:	mov	r4, r1
   1e6d0:	mov	r5, r0
   1e6d4:	mov	r1, r6
   1e6d8:	mov	fp, r2
   1e6dc:	add	r0, sp, #108	; 0x6c
   1e6e0:	mov	r2, #4096	; 0x1000
   1e6e4:	str	ip, [r3]
   1e6e8:	str	r6, [sp, #12]
   1e6ec:	bl	122e4 <memset@plt>
   1e6f0:	mov	r1, r6
   1e6f4:	mov	r0, r4
   1e6f8:	bl	12434 <open@plt>
   1e6fc:	subs	r8, r0, #0
   1e700:	blt	1e94c <crc32@@Base+0x51a8>
   1e704:	mov	r1, r8
   1e708:	add	r2, sp, #16
   1e70c:	mov	r0, #3
   1e710:	bl	12554 <__fxstat@plt>
   1e714:	cmp	r0, #0
   1e718:	blt	1e920 <crc32@@Base+0x517c>
   1e71c:	mov	r3, #1
   1e720:	ldr	r1, [sp, #60]	; 0x3c
   1e724:	str	r6, [sp, #4]
   1e728:	mov	r2, r3
   1e72c:	str	r8, [sp]
   1e730:	mov	r0, r6
   1e734:	bl	123ec <mmap@plt>
   1e738:	cmn	r0, #1
   1e73c:	mov	r9, r0
   1e740:	beq	1e8e4 <crc32@@Base+0x5140>
   1e744:	mov	r2, r6
   1e748:	mov	r1, fp
   1e74c:	mov	r0, r5
   1e750:	ldr	r4, [sp, #60]	; 0x3c
   1e754:	bl	124f4 <lseek@plt>
   1e758:	sub	r4, r4, sl
   1e75c:	cmp	r0, #0
   1e760:	blt	1e8bc <crc32@@Base+0x5118>
   1e764:	add	r1, r9, sl
   1e768:	mov	r2, r4
   1e76c:	mov	r0, r5
   1e770:	bl	12608 <write@plt>
   1e774:	cmp	r4, r0
   1e778:	bne	1e884 <crc32@@Base+0x50e0>
   1e77c:	rsbs	r3, r4, #0
   1e780:	and	r2, r4, #3
   1e784:	and	r3, r3, #3
   1e788:	rsbpl	r2, r3, #0
   1e78c:	cmn	r4, #1
   1e790:	moveq	r3, #1
   1e794:	movne	r3, #0
   1e798:	cmp	r2, #0
   1e79c:	moveq	r3, #0
   1e7a0:	cmp	r3, #0
   1e7a4:	bne	1e830 <crc32@@Base+0x508c>
   1e7a8:	cmn	r4, #1
   1e7ac:	bge	1e84c <crc32@@Base+0x50a8>
   1e7b0:	rsb	r4, r4, #0
   1e7b4:	b	1e7d8 <crc32@@Base+0x5034>
   1e7b8:	mov	r2, #4096	; 0x1000
   1e7bc:	add	r1, sp, #108	; 0x6c
   1e7c0:	mov	r0, r5
   1e7c4:	bl	12608 <write@plt>
   1e7c8:	cmp	r0, #4096	; 0x1000
   1e7cc:	bne	1e7f8 <crc32@@Base+0x5054>
   1e7d0:	subs	r4, r4, #4096	; 0x1000
   1e7d4:	beq	1e84c <crc32@@Base+0x50a8>
   1e7d8:	cmp	r4, #4096	; 0x1000
   1e7dc:	bge	1e7b8 <crc32@@Base+0x5014>
   1e7e0:	add	r1, sp, #108	; 0x6c
   1e7e4:	mov	r0, r5
   1e7e8:	mov	r2, r4
   1e7ec:	bl	12608 <write@plt>
   1e7f0:	cmp	r0, r4
   1e7f4:	beq	1e84c <crc32@@Base+0x50a8>
   1e7f8:	movw	r3, #65044	; 0xfe14
   1e7fc:	movt	r3, #4
   1e800:	ldr	r4, [r3]
   1e804:	bl	1268c <__errno_location@plt>
   1e808:	ldr	r0, [r0]
   1e80c:	bl	12200 <strerror@plt>
   1e810:	movw	r2, #38740	; 0x9754
   1e814:	mov	r1, #1
   1e818:	movt	r2, #3
   1e81c:	mov	r3, r0
   1e820:	mov	r0, r4
   1e824:	bl	122b4 <__fprintf_chk@plt>
   1e828:	mov	r0, #1
   1e82c:	bl	121f4 <exit@plt>
   1e830:	rsb	r4, r2, #4
   1e834:	add	r1, sp, #12
   1e838:	mov	r0, r5
   1e83c:	mov	r2, r4
   1e840:	bl	12608 <write@plt>
   1e844:	cmp	r4, r0
   1e848:	bne	1e97c <crc32@@Base+0x51d8>
   1e84c:	ldr	r1, [sp, #60]	; 0x3c
   1e850:	mov	r0, r9
   1e854:	bl	125e4 <munmap@plt>
   1e858:	mov	r0, r8
   1e85c:	bl	12314 <close@plt>
   1e860:	add	r3, sp, #4160	; 0x1040
   1e864:	add	r3, r3, #44	; 0x2c
   1e868:	ldr	r2, [r3]
   1e86c:	ldr	r3, [r7]
   1e870:	cmp	r2, r3
   1e874:	bne	1e978 <crc32@@Base+0x51d4>
   1e878:	add	sp, sp, #4160	; 0x1040
   1e87c:	add	sp, sp, #52	; 0x34
   1e880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e884:	movw	r3, #65044	; 0xfe14
   1e888:	movt	r3, #4
   1e88c:	ldr	r4, [r3]
   1e890:	bl	1268c <__errno_location@plt>
   1e894:	ldr	r0, [r0]
   1e898:	bl	12200 <strerror@plt>
   1e89c:	movw	r2, #38724	; 0x9744
   1e8a0:	mov	r1, #1
   1e8a4:	movt	r2, #3
   1e8a8:	mov	r3, r0
   1e8ac:	mov	r0, r4
   1e8b0:	bl	122b4 <__fprintf_chk@plt>
   1e8b4:	mov	r0, #1
   1e8b8:	bl	121f4 <exit@plt>
   1e8bc:	movw	r3, #65044	; 0xfe14
   1e8c0:	movt	r3, #4
   1e8c4:	movw	r0, #41004	; 0xa02c
   1e8c8:	mov	r2, #15
   1e8cc:	ldr	r3, [r3]
   1e8d0:	movt	r0, #3
   1e8d4:	mov	r1, #1
   1e8d8:	bl	12578 <fwrite@plt>
   1e8dc:	mov	r0, #1
   1e8e0:	bl	121f4 <exit@plt>
   1e8e4:	movw	r3, #65044	; 0xfe14
   1e8e8:	movt	r3, #4
   1e8ec:	ldr	r5, [r3]
   1e8f0:	bl	1268c <__errno_location@plt>
   1e8f4:	ldr	r0, [r0]
   1e8f8:	bl	12200 <strerror@plt>
   1e8fc:	movw	r2, #27000	; 0x6978
   1e900:	movt	r2, #3
   1e904:	mov	r3, r4
   1e908:	mov	r1, #1
   1e90c:	str	r0, [sp]
   1e910:	mov	r0, r5
   1e914:	bl	122b4 <__fprintf_chk@plt>
   1e918:	mov	r0, #1
   1e91c:	bl	121f4 <exit@plt>
   1e920:	movw	r3, #65044	; 0xfe14
   1e924:	movt	r3, #4
   1e928:	ldr	r5, [r3]
   1e92c:	bl	1268c <__errno_location@plt>
   1e930:	ldr	r0, [r0]
   1e934:	bl	12200 <strerror@plt>
   1e938:	movw	r2, #25420	; 0x634c
   1e93c:	mov	r3, r4
   1e940:	mov	r1, #1
   1e944:	movt	r2, #3
   1e948:	b	1e90c <crc32@@Base+0x5168>
   1e94c:	movw	r3, #65044	; 0xfe14
   1e950:	movt	r3, #4
   1e954:	ldr	r5, [r3]
   1e958:	bl	1268c <__errno_location@plt>
   1e95c:	ldr	r0, [r0]
   1e960:	bl	12200 <strerror@plt>
   1e964:	movw	r2, #25396	; 0x6334
   1e968:	mov	r3, r4
   1e96c:	mov	r1, #1
   1e970:	movt	r2, #3
   1e974:	b	1e90c <crc32@@Base+0x5168>
   1e978:	bl	12494 <__stack_chk_fail@plt>
   1e97c:	movw	r3, #65044	; 0xfe14
   1e980:	movt	r3, #4
   1e984:	ldr	r4, [r3]
   1e988:	bl	1268c <__errno_location@plt>
   1e98c:	ldr	r0, [r0]
   1e990:	bl	12200 <strerror@plt>
   1e994:	movw	r2, #38984	; 0x9848
   1e998:	mov	r1, #1
   1e99c:	movt	r2, #3
   1e9a0:	mov	r3, r0
   1e9a4:	mov	r0, r4
   1e9a8:	bl	122b4 <__fprintf_chk@plt>
   1e9ac:	mov	r0, #1
   1e9b0:	bl	121f4 <exit@plt>
   1e9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9b8:	movw	r4, #2940	; 0xb7c
   1e9bc:	movt	r4, #6
   1e9c0:	movw	r9, #61168	; 0xeef0
   1e9c4:	movt	r9, #4
   1e9c8:	sub	sp, sp, #212	; 0xd4
   1e9cc:	ldr	r1, [r4, #128]	; 0x80
   1e9d0:	ldr	r3, [r9]
   1e9d4:	cmp	r1, #0
   1e9d8:	str	r3, [sp, #204]	; 0xcc
   1e9dc:	beq	1efdc <crc32@@Base+0x5838>
   1e9e0:	mov	r7, r0
   1e9e4:	ldr	r0, [r4, #132]	; 0x84
   1e9e8:	ldr	r6, [r4, #136]	; 0x88
   1e9ec:	cmp	r0, #0
   1e9f0:	beq	1ede8 <crc32@@Base+0x5644>
   1e9f4:	mov	r1, #0
   1e9f8:	mov	sl, r6
   1e9fc:	bl	12434 <open@plt>
   1ea00:	subs	r5, r0, #0
   1ea04:	movwlt	r2, #65044	; 0xfe14
   1ea08:	ldrlt	r5, [r4, #132]	; 0x84
   1ea0c:	movtlt	r2, #4
   1ea10:	blt	1ef50 <crc32@@Base+0x57ac>
   1ea14:	add	r2, sp, #48	; 0x30
   1ea18:	mov	r1, r5
   1ea1c:	mov	r0, #3
   1ea20:	bl	12554 <__fxstat@plt>
   1ea24:	cmp	r0, #0
   1ea28:	blt	1ef84 <crc32@@Base+0x57e0>
   1ea2c:	mov	r0, r5
   1ea30:	mov	r5, #106496	; 0x1a000
   1ea34:	bl	12314 <close@plt>
   1ea38:	ldr	r3, [sp, #92]	; 0x5c
   1ea3c:	movw	r2, #40959	; 0x9fff
   1ea40:	movt	r2, #1
   1ea44:	add	r2, r3, r2
   1ea48:	movw	r3, #60495	; 0xec4f
   1ea4c:	movt	r3, #20164	; 0x4ec4
   1ea50:	ldr	r6, [r4, #136]	; 0x88
   1ea54:	asr	r0, r2, #31
   1ea58:	ldr	r1, [r4, #128]	; 0x80
   1ea5c:	smull	r2, r3, r2, r3
   1ea60:	rsb	r0, r0, r3, asr #15
   1ea64:	mul	r5, r5, r0
   1ea68:	mov	r0, r1
   1ea6c:	mov	r1, #0
   1ea70:	add	r6, r6, r5
   1ea74:	bl	12434 <open@plt>
   1ea78:	subs	r8, r0, #0
   1ea7c:	blt	1ef44 <crc32@@Base+0x57a0>
   1ea80:	add	r2, sp, #48	; 0x30
   1ea84:	mov	r1, r8
   1ea88:	mov	r0, #3
   1ea8c:	bl	12554 <__fxstat@plt>
   1ea90:	cmp	r0, #0
   1ea94:	movwlt	r2, #65044	; 0xfe14
   1ea98:	ldrlt	r5, [r4, #128]	; 0x80
   1ea9c:	movtlt	r2, #4
   1eaa0:	blt	1ef90 <crc32@@Base+0x57ec>
   1eaa4:	mov	r0, r8
   1eaa8:	bl	12314 <close@plt>
   1eaac:	ldr	ip, [r4, #136]	; 0x88
   1eab0:	ldr	r3, [sp, #92]	; 0x5c
   1eab4:	mov	r1, #209	; 0xd1
   1eab8:	add	r8, ip, #572	; 0x23c
   1eabc:	ldr	r2, [r4, #140]	; 0x8c
   1eac0:	add	r8, r8, #3
   1eac4:	ldr	r0, [r4, #148]	; 0x94
   1eac8:	add	r8, r8, r3
   1eacc:	sub	r3, r2, #64	; 0x40
   1ead0:	bic	r8, r8, #508	; 0x1fc
   1ead4:	cmp	r0, #0
   1ead8:	bic	r8, r8, #3
   1eadc:	str	r3, [r4, #84]	; 0x54
   1eae0:	sub	r3, r3, ip
   1eae4:	movt	r1, #16672	; 0x4120
   1eae8:	str	r2, [r4, #68]	; 0x44
   1eaec:	sub	r2, r2, #32
   1eaf0:	str	r3, [r4, #96]	; 0x60
   1eaf4:	add	r3, r3, r8
   1eaf8:	str	r1, [r4, #64]	; 0x40
   1eafc:	mov	r1, #0
   1eb00:	str	r3, [r4, #88]	; 0x58
   1eb04:	add	r3, r8, #8192	; 0x2000
   1eb08:	str	r2, [r4, #80]	; 0x50
   1eb0c:	str	r3, [r4, #100]	; 0x64
   1eb10:	add	r3, r6, #64	; 0x40
   1eb14:	str	r1, [r4, #76]	; 0x4c
   1eb18:	str	r1, [r4, #104]	; 0x68
   1eb1c:	str	r3, [r4, #144]	; 0x90
   1eb20:	beq	1eb90 <crc32@@Base+0x53ec>
   1eb24:	ldr	r3, [r4, #152]	; 0x98
   1eb28:	cmp	r3, r1
   1eb2c:	beq	1f030 <crc32@@Base+0x588c>
   1eb30:	ldr	r2, [r4, #160]	; 0xa0
   1eb34:	ldr	r3, [r4, #156]	; 0x9c
   1eb38:	sub	r3, r3, r2
   1eb3c:	str	r3, [r4, #164]	; 0xa4
   1eb40:	sub	r3, r3, r6
   1eb44:	str	r3, [r4, #72]	; 0x48
   1eb48:	bl	12434 <open@plt>
   1eb4c:	subs	fp, r0, #0
   1eb50:	movwlt	r2, #65044	; 0xfe14
   1eb54:	ldrlt	r5, [r4, #148]	; 0x94
   1eb58:	movtlt	r2, #4
   1eb5c:	blt	1ef50 <crc32@@Base+0x57ac>
   1eb60:	add	r2, sp, #48	; 0x30
   1eb64:	mov	r1, fp
   1eb68:	mov	r0, #3
   1eb6c:	bl	12554 <__fxstat@plt>
   1eb70:	cmp	r0, #0
   1eb74:	movwlt	r2, #65044	; 0xfe14
   1eb78:	ldrlt	r5, [r4, #148]	; 0x94
   1eb7c:	movtlt	r2, #4
   1eb80:	blt	1ef90 <crc32@@Base+0x57ec>
   1eb84:	mov	r0, fp
   1eb88:	bl	12314 <close@plt>
   1eb8c:	ldr	ip, [r4, #136]	; 0x88
   1eb90:	ldr	fp, [r4, #132]	; 0x84
   1eb94:	cmp	fp, #0
   1eb98:	beq	1ebd0 <crc32@@Base+0x542c>
   1eb9c:	sub	sl, sl, ip
   1eba0:	mov	r2, #0
   1eba4:	mov	r0, r7
   1eba8:	mov	r1, sl
   1ebac:	bl	124f4 <lseek@plt>
   1ebb0:	cmp	r0, #0
   1ebb4:	blt	1f058 <crc32@@Base+0x58b4>
   1ebb8:	mov	r1, fp
   1ebbc:	mov	r3, #1024	; 0x400
   1ebc0:	mov	r2, sl
   1ebc4:	mov	r0, r7
   1ebc8:	bl	1e6a4 <crc32@@Base+0x4f00>
   1ebcc:	ldr	ip, [r4, #136]	; 0x88
   1ebd0:	sub	r6, r6, ip
   1ebd4:	ldr	r3, [r4, #144]	; 0x90
   1ebd8:	mov	r2, #0
   1ebdc:	mov	r0, r7
   1ebe0:	mov	r1, r6
   1ebe4:	sub	ip, r3, ip
   1ebe8:	str	ip, [r4, #144]	; 0x90
   1ebec:	bl	124f4 <lseek@plt>
   1ebf0:	cmp	r0, #0
   1ebf4:	blt	1efb4 <crc32@@Base+0x5810>
   1ebf8:	mov	r2, #64	; 0x40
   1ebfc:	ldr	r1, [pc, #1324]	; 1f130 <crc32@@Base+0x598c>
   1ec00:	mov	r0, r7
   1ec04:	bl	12608 <write@plt>
   1ec08:	cmp	r0, #64	; 0x40
   1ec0c:	mov	fp, r0
   1ec10:	bne	1f008 <crc32@@Base+0x5864>
   1ec14:	mov	r3, #0
   1ec18:	ldr	r2, [r4, #144]	; 0x90
   1ec1c:	ldr	r1, [r4, #128]	; 0x80
   1ec20:	mov	r0, r7
   1ec24:	bl	1e6a4 <crc32@@Base+0x4f00>
   1ec28:	ldr	r3, [r4, #136]	; 0x88
   1ec2c:	mov	r0, r7
   1ec30:	sub	r8, r8, r3
   1ec34:	add	r5, r8, r5
   1ec38:	mov	r1, r5
   1ec3c:	bl	1e580 <crc32@@Base+0x4ddc>
   1ec40:	ldr	r3, [r4, #148]	; 0x94
   1ec44:	cmp	r3, #0
   1ec48:	beq	1ec88 <crc32@@Base+0x54e4>
   1ec4c:	ldr	r8, [r4, #164]	; 0xa4
   1ec50:	mov	r2, #0
   1ec54:	ldr	r1, [r4, #136]	; 0x88
   1ec58:	mov	r0, r7
   1ec5c:	str	r3, [sp, #8]
   1ec60:	sub	r8, r8, r1
   1ec64:	str	r8, [r4, #164]	; 0xa4
   1ec68:	mov	r1, r8
   1ec6c:	bl	124f4 <lseek@plt>
   1ec70:	ldr	r3, [sp, #8]
   1ec74:	cmp	r0, #0
   1ec78:	blt	1f0a8 <crc32@@Base+0x5904>
   1ec7c:	ldr	r2, [r4, #152]	; 0x98
   1ec80:	cmp	r2, #0
   1ec84:	bne	1edf4 <crc32@@Base+0x5650>
   1ec88:	mov	fp, #0
   1ec8c:	mov	r8, fp
   1ec90:	ldr	r0, [r4, #132]	; 0x84
   1ec94:	cmp	r0, #0
   1ec98:	beq	1ef3c <crc32@@Base+0x5798>
   1ec9c:	movw	r7, #65048	; 0xfe18
   1eca0:	movt	r7, #4
   1eca4:	mov	r0, #1
   1eca8:	bl	1e3c8 <crc32@@Base+0x4c24>
   1ecac:	ldr	r3, [r7]
   1ecb0:	movw	r0, #41264	; 0xa130
   1ecb4:	mov	r2, #31
   1ecb8:	movt	r0, #3
   1ecbc:	mov	r1, #1
   1ecc0:	bl	12578 <fwrite@plt>
   1ecc4:	ldr	r3, [r4, #132]	; 0x84
   1ecc8:	cmp	r3, #0
   1eccc:	beq	1ed00 <crc32@@Base+0x555c>
   1ecd0:	ldr	r3, [r7]
   1ecd4:	mov	r2, #17
   1ecd8:	mov	r1, #1
   1ecdc:	movw	r0, #41296	; 0xa150
   1ece0:	movt	r0, #3
   1ece4:	bl	12578 <fwrite@plt>
   1ece8:	movw	r2, #41316	; 0xa164
   1ecec:	mov	r3, sl
   1ecf0:	mov	r1, #1
   1ecf4:	movt	r2, #3
   1ecf8:	ldr	r0, [r7]
   1ecfc:	bl	122b4 <__fprintf_chk@plt>
   1ed00:	ldr	r3, [r7]
   1ed04:	mov	r2, #15
   1ed08:	mov	r1, #1
   1ed0c:	movw	r0, #41340	; 0xa17c
   1ed10:	movt	r0, #3
   1ed14:	bl	12578 <fwrite@plt>
   1ed18:	ldr	r1, [r4, #144]	; 0x90
   1ed1c:	ldr	r0, [r7]
   1ed20:	mov	r3, r6
   1ed24:	str	r5, [sp, #4]
   1ed28:	movw	r2, #41356	; 0xa18c
   1ed2c:	str	r1, [sp]
   1ed30:	movt	r2, #3
   1ed34:	mov	r1, #1
   1ed38:	sub	r5, r5, r6
   1ed3c:	bl	122b4 <__fprintf_chk@plt>
   1ed40:	ldr	r3, [r4, #84]	; 0x54
   1ed44:	ldr	r0, [r7]
   1ed48:	mov	r1, #1
   1ed4c:	str	r6, [sp]
   1ed50:	movw	r2, #41416	; 0xa1c8
   1ed54:	str	r5, [sp, #4]
   1ed58:	movt	r2, #3
   1ed5c:	bl	122b4 <__fprintf_chk@plt>
   1ed60:	ldr	r3, [r7]
   1ed64:	mov	r2, #22
   1ed68:	mov	r1, #1
   1ed6c:	movw	r0, #41452	; 0xa1ec
   1ed70:	movt	r0, #3
   1ed74:	bl	12578 <fwrite@plt>
   1ed78:	ldr	r3, [r4, #164]	; 0xa4
   1ed7c:	mov	r1, #1
   1ed80:	movw	r2, #41476	; 0xa204
   1ed84:	ldr	r0, [r7]
   1ed88:	movt	r2, #3
   1ed8c:	bl	122b4 <__fprintf_chk@plt>
   1ed90:	mov	r3, r8
   1ed94:	mov	r1, #1
   1ed98:	movw	r2, #41500	; 0xa21c
   1ed9c:	ldr	r0, [r7]
   1eda0:	movt	r2, #3
   1eda4:	bl	122b4 <__fprintf_chk@plt>
   1eda8:	ldr	r1, [r4, #164]	; 0xa4
   1edac:	ldr	r0, [r7]
   1edb0:	mov	r3, fp
   1edb4:	sub	r8, r8, r1
   1edb8:	movw	r2, #41524	; 0xa234
   1edbc:	str	r1, [sp]
   1edc0:	movt	r2, #3
   1edc4:	str	r8, [sp, #4]
   1edc8:	mov	r1, #1
   1edcc:	bl	122b4 <__fprintf_chk@plt>
   1edd0:	ldr	r2, [sp, #204]	; 0xcc
   1edd4:	ldr	r3, [r9]
   1edd8:	cmp	r2, r3
   1eddc:	bne	1f004 <crc32@@Base+0x5860>
   1ede0:	add	sp, sp, #212	; 0xd4
   1ede4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ede8:	mov	r5, r0
   1edec:	mov	sl, r0
   1edf0:	b	1ea68 <crc32@@Base+0x52c4>
   1edf4:	mov	r2, r8
   1edf8:	mov	r1, r3
   1edfc:	mov	r0, r7
   1ee00:	mov	r3, #0
   1ee04:	bl	1e6a4 <crc32@@Base+0x4f00>
   1ee08:	ldr	r8, [r4, #164]	; 0xa4
   1ee0c:	ldr	r3, [r4, #168]	; 0xa8
   1ee10:	mov	r2, #0
   1ee14:	mov	r0, r7
   1ee18:	mov	r1, r8
   1ee1c:	str	r3, [sp, #8]
   1ee20:	bl	124f4 <lseek@plt>
   1ee24:	cmp	r0, #0
   1ee28:	blt	1f080 <crc32@@Base+0x58dc>
   1ee2c:	mov	r2, fp
   1ee30:	add	r1, sp, #140	; 0x8c
   1ee34:	mov	r0, r7
   1ee38:	bl	12344 <read@plt>
   1ee3c:	cmp	r0, #64	; 0x40
   1ee40:	bne	1f0f8 <crc32@@Base+0x5954>
   1ee44:	ldr	r2, [sp, #140]	; 0x8c
   1ee48:	mov	r3, #3536	; 0xdd0
   1ee4c:	movt	r3, #60926	; 0xedfe
   1ee50:	cmp	r2, r3
   1ee54:	bne	1f0d0 <crc32@@Base+0x592c>
   1ee58:	ldr	lr, [sp, #144]	; 0x90
   1ee5c:	mov	r2, #0
   1ee60:	mov	r0, r7
   1ee64:	ubfx	ip, lr, #8, #8
   1ee68:	ubfx	r1, lr, #16, #8
   1ee6c:	lsr	r3, lr, #24
   1ee70:	orr	r3, r3, lr, lsl #24
   1ee74:	orr	r3, r3, ip, lsl #16
   1ee78:	orr	r3, r3, r1, lsl #8
   1ee7c:	add	r3, r3, #3
   1ee80:	bic	r3, r3, #3
   1ee84:	add	r3, r3, #4080	; 0xff0
   1ee88:	add	r3, r3, #15
   1ee8c:	bic	r3, r3, #4080	; 0xff0
   1ee90:	bic	r3, r3, #15
   1ee94:	str	r3, [sp, #12]
   1ee98:	add	r8, r8, r3
   1ee9c:	mov	r1, r8
   1eea0:	bl	124f4 <lseek@plt>
   1eea4:	ldr	r3, [sp, #12]
   1eea8:	cmp	r0, #0
   1eeac:	blt	1f080 <crc32@@Base+0x58dc>
   1eeb0:	ldr	r2, [sp, #8]
   1eeb4:	mov	r0, r7
   1eeb8:	add	r1, sp, #16
   1eebc:	sub	fp, r2, #8704	; 0x2200
   1eec0:	mov	r2, #32
   1eec4:	sub	fp, fp, #63	; 0x3f
   1eec8:	sub	fp, fp, r3
   1eecc:	bic	fp, fp, #63	; 0x3f
   1eed0:	str	fp, [sp, #20]
   1eed4:	add	r3, r3, fp
   1eed8:	str	r3, [sp, #36]	; 0x24
   1eedc:	add	r3, r3, r2
   1eee0:	str	r3, [sp, #40]	; 0x28
   1eee4:	mov	r3, #209	; 0xd1
   1eee8:	movt	r3, #16416	; 0x4020
   1eeec:	str	r3, [sp, #16]
   1eef0:	mov	r3, #0
   1eef4:	str	r3, [sp, #24]
   1eef8:	str	r3, [sp, #28]
   1eefc:	str	r3, [sp, #32]
   1ef00:	str	r3, [sp, #44]	; 0x2c
   1ef04:	bl	12608 <write@plt>
   1ef08:	cmp	r0, #32
   1ef0c:	addeq	r8, r8, #32
   1ef10:	beq	1ec90 <crc32@@Base+0x54ec>
   1ef14:	movw	r3, #65044	; 0xfe14
   1ef18:	movt	r3, #4
   1ef1c:	movw	r0, #41232	; 0xa110
   1ef20:	mov	r2, #31
   1ef24:	ldr	r3, [r3]
   1ef28:	movt	r0, #3
   1ef2c:	mov	r1, #1
   1ef30:	bl	12578 <fwrite@plt>
   1ef34:	mov	r0, #1
   1ef38:	bl	121f4 <exit@plt>
   1ef3c:	bl	1e3c8 <crc32@@Base+0x4c24>
   1ef40:	b	1ec9c <crc32@@Base+0x54f8>
   1ef44:	ldr	r5, [r4, #128]	; 0x80
   1ef48:	movw	r2, #65044	; 0xfe14
   1ef4c:	movt	r2, #4
   1ef50:	ldr	r4, [r2]
   1ef54:	bl	1268c <__errno_location@plt>
   1ef58:	ldr	r0, [r0]
   1ef5c:	bl	12200 <strerror@plt>
   1ef60:	movw	r2, #38632	; 0x96e8
   1ef64:	movt	r2, #3
   1ef68:	mov	r3, r5
   1ef6c:	mov	r1, #1
   1ef70:	str	r0, [sp]
   1ef74:	mov	r0, r4
   1ef78:	bl	122b4 <__fprintf_chk@plt>
   1ef7c:	mov	r0, #1
   1ef80:	bl	121f4 <exit@plt>
   1ef84:	ldr	r5, [r4, #132]	; 0x84
   1ef88:	movw	r2, #65044	; 0xfe14
   1ef8c:	movt	r2, #4
   1ef90:	ldr	r4, [r2]
   1ef94:	bl	1268c <__errno_location@plt>
   1ef98:	ldr	r0, [r0]
   1ef9c:	bl	12200 <strerror@plt>
   1efa0:	movw	r2, #38652	; 0x96fc
   1efa4:	mov	r3, r5
   1efa8:	mov	r1, #1
   1efac:	movt	r2, #3
   1efb0:	b	1ef70 <crc32@@Base+0x57cc>
   1efb4:	movw	r3, #65044	; 0xfe14
   1efb8:	movt	r3, #4
   1efbc:	movw	r0, #41096	; 0xa088
   1efc0:	mov	r2, #15
   1efc4:	ldr	r3, [r3]
   1efc8:	movt	r0, #3
   1efcc:	mov	r1, #1
   1efd0:	bl	12578 <fwrite@plt>
   1efd4:	mov	r0, #1
   1efd8:	bl	121f4 <exit@plt>
   1efdc:	movw	r3, #65044	; 0xfe14
   1efe0:	movt	r3, #4
   1efe4:	movw	r0, #41020	; 0xa03c
   1efe8:	mov	r2, #27
   1efec:	ldr	r3, [r3]
   1eff0:	movt	r0, #3
   1eff4:	mov	r1, #1
   1eff8:	bl	12578 <fwrite@plt>
   1effc:	mov	r0, #1
   1f000:	bl	121f4 <exit@plt>
   1f004:	bl	12494 <__stack_chk_fail@plt>
   1f008:	movw	r3, #65044	; 0xfe14
   1f00c:	movt	r3, #4
   1f010:	movw	r0, #39736	; 0x9b38
   1f014:	mov	r2, #24
   1f018:	ldr	r3, [r3]
   1f01c:	movt	r0, #3
   1f020:	mov	r1, #1
   1f024:	bl	12578 <fwrite@plt>
   1f028:	mov	r0, #1
   1f02c:	bl	121f4 <exit@plt>
   1f030:	movw	r3, #65044	; 0xfe14
   1f034:	movt	r3, #4
   1f038:	movw	r0, #41048	; 0xa058
   1f03c:	mov	r2, #19
   1f040:	ldr	r3, [r3]
   1f044:	movt	r0, #3
   1f048:	mov	r1, #1
   1f04c:	bl	12578 <fwrite@plt>
   1f050:	mov	r0, #1
   1f054:	bl	121f4 <exit@plt>
   1f058:	movw	r3, #65044	; 0xfe14
   1f05c:	movt	r3, #4
   1f060:	movw	r0, #41068	; 0xa06c
   1f064:	mov	r2, #24
   1f068:	ldr	r3, [r3]
   1f06c:	movt	r0, #3
   1f070:	mov	r1, #1
   1f074:	bl	12578 <fwrite@plt>
   1f078:	mov	r0, #1
   1f07c:	bl	121f4 <exit@plt>
   1f080:	movw	r3, #65044	; 0xfe14
   1f084:	movt	r3, #4
   1f088:	movw	r0, #41140	; 0xa0b4
   1f08c:	mov	r2, #22
   1f090:	ldr	r3, [r3]
   1f094:	movt	r0, #3
   1f098:	mov	r1, #1
   1f09c:	bl	12578 <fwrite@plt>
   1f0a0:	mov	r0, #1
   1f0a4:	bl	121f4 <exit@plt>
   1f0a8:	movw	r3, #65044	; 0xfe14
   1f0ac:	movt	r3, #4
   1f0b0:	movw	r0, #41112	; 0xa098
   1f0b4:	mov	r2, #27
   1f0b8:	ldr	r3, [r3]
   1f0bc:	movt	r0, #3
   1f0c0:	mov	r1, #1
   1f0c4:	bl	12578 <fwrite@plt>
   1f0c8:	mov	r0, #1
   1f0cc:	bl	121f4 <exit@plt>
   1f0d0:	movw	r1, #65044	; 0xfe14
   1f0d4:	movt	r1, #4
   1f0d8:	movw	r2, #41204	; 0xa0f4
   1f0dc:	ldr	r3, [pc, #80]	; 1f134 <crc32@@Base+0x5990>
   1f0e0:	ldr	r0, [r1]
   1f0e4:	movt	r2, #3
   1f0e8:	mov	r1, #1
   1f0ec:	bl	122b4 <__fprintf_chk@plt>
   1f0f0:	mov	r0, #1
   1f0f4:	bl	121f4 <exit@plt>
   1f0f8:	movw	r3, #65044	; 0xfe14
   1f0fc:	movt	r3, #4
   1f100:	ldr	r4, [r3]
   1f104:	bl	1268c <__errno_location@plt>
   1f108:	ldr	r0, [r0]
   1f10c:	bl	12200 <strerror@plt>
   1f110:	movw	r2, #41164	; 0xa0cc
   1f114:	mov	r1, #1
   1f118:	movt	r2, #3
   1f11c:	mov	r3, r0
   1f120:	mov	r0, r4
   1f124:	bl	122b4 <__fprintf_chk@plt>
   1f128:	mov	r0, #1
   1f12c:	bl	121f4 <exit@plt>
   1f130:			; <UNDEFINED> instruction: 0x00060bbc
   1f134:			; <UNDEFINED> instruction: 0x00039eb0
   1f138:	movw	r3, #61168	; 0xeef0
   1f13c:	movt	r3, #4
   1f140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f144:	movw	r2, #65048	; 0xfe18
   1f148:	sub	sp, sp, #52	; 0x34
   1f14c:	ldr	ip, [r3]
   1f150:	movt	r2, #4
   1f154:	mov	r4, r1
   1f158:	str	r3, [sp, #20]
   1f15c:	mov	r6, #0
   1f160:	ldr	r3, [r1, #64]	; 0x40
   1f164:	mov	r1, #1
   1f168:	str	r0, [sp, #16]
   1f16c:	ldr	r0, [r2]
   1f170:	movw	r2, #39764	; 0x9b54
   1f174:	movt	r2, #3
   1f178:	str	ip, [sp, #44]	; 0x2c
   1f17c:	bl	122b4 <__fprintf_chk@plt>
   1f180:	ldr	r3, [r4, #64]	; 0x40
   1f184:	movw	r1, #49540	; 0xc184
   1f188:	movt	r1, #3
   1f18c:	str	r6, [sp, #28]
   1f190:	mov	r0, r3
   1f194:	str	r3, [sp, #12]
   1f198:	bl	1232c <fopen@plt>
   1f19c:	subs	r3, r0, #0
   1f1a0:	str	r3, [sp, #8]
   1f1a4:	movwne	sl, #25472	; 0x6380
   1f1a8:	movwne	r8, #2940	; 0xb7c
   1f1ac:	movtne	sl, #3
   1f1b0:	movtne	r8, #6
   1f1b4:	beq	1f6bc <crc32@@Base+0x5f18>
   1f1b8:	ldr	r3, [sp, #8]
   1f1bc:	mov	r2, #10
   1f1c0:	add	r1, sp, #40	; 0x28
   1f1c4:	add	r0, sp, #28
   1f1c8:	bl	12134 <__getdelim@plt>
   1f1cc:	cmp	r0, #0
   1f1d0:	ble	1f640 <crc32@@Base+0x5e9c>
   1f1d4:	add	r2, sp, #32
   1f1d8:	mov	r1, sl
   1f1dc:	ldr	r0, [sp, #28]
   1f1e0:	add	r6, r6, #1
   1f1e4:	bl	12224 <__strtok_r@plt>
   1f1e8:	cmp	r0, #0
   1f1ec:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f1f0:	movw	r5, #25476	; 0x6384
   1f1f4:	movw	r9, #41580	; 0xa26c
   1f1f8:	movt	r5, #3
   1f1fc:	movt	r9, #3
   1f200:	mvn	r7, #0
   1f204:	mov	fp, #0
   1f208:	str	r0, [sp, #28]
   1f20c:	add	r2, sp, #36	; 0x24
   1f210:	mov	r1, r5
   1f214:	bl	12224 <__strtok_r@plt>
   1f218:	subs	r4, r0, #0
   1f21c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f220:	ldrb	r3, [r4]
   1f224:	cmp	r3, #35	; 0x23
   1f228:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f22c:	cmp	fp, #3
   1f230:	ldrls	pc, [pc, fp, lsl #2]
   1f234:	b	1f374 <crc32@@Base+0x5bd0>
   1f238:	andeq	pc, r1, r8, asr #4
   1f23c:	muleq	r1, r4, r2
   1f240:	andeq	pc, r1, ip, lsr #12
   1f244:	andeq	pc, r1, ip, lsr r3	; <UNPREDICTABLE>
   1f248:	movw	r1, #41560	; 0xa258
   1f24c:	movw	r0, #63360	; 0xf780
   1f250:	movt	r1, #3
   1f254:	movt	r0, #4
   1f258:	mov	r2, r4
   1f25c:	bl	1a620 <crc32@@Base+0xe7c>
   1f260:	subs	r7, r0, #0
   1f264:	blt	1f68c <crc32@@Base+0x5ee8>
   1f268:	mov	r3, #0
   1f26c:	add	r2, sp, #36	; 0x24
   1f270:	mov	r0, r3
   1f274:	mov	r1, r5
   1f278:	str	r3, [sp, #28]
   1f27c:	bl	12224 <__strtok_r@plt>
   1f280:	subs	r4, r0, #0
   1f284:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f288:	ldrb	r3, [r4]
   1f28c:	cmp	r3, #35	; 0x23
   1f290:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f294:	sub	r3, r7, #2
   1f298:	cmp	r3, #12
   1f29c:	ldrls	pc, [pc, r3, lsl #2]
   1f2a0:	b	1f600 <crc32@@Base+0x5e5c>
   1f2a4:	andeq	pc, r1, r0, asr r4	; <UNPREDICTABLE>
   1f2a8:	andeq	pc, r1, r0, lsl #12
   1f2ac:	andeq	pc, r1, r0, lsl #12
   1f2b0:	andeq	pc, r1, r0, lsl #12
   1f2b4:	andeq	pc, r1, r0, lsl #12
   1f2b8:	andeq	pc, r1, r0, lsl #12
   1f2bc:	andeq	pc, r1, r0, lsl #12
   1f2c0:	andeq	pc, r1, r0, lsl #12
   1f2c4:	andeq	pc, r1, r0, lsl #12
   1f2c8:	ldrdeq	pc, [r1], -ip
   1f2cc:	ldrdeq	pc, [r1], -r8
   1f2d0:	andeq	pc, r1, r4, lsl #7
   1f2d4:	strdeq	pc, [r1], -r4
   1f2d8:	str	r4, [r8, #132]	; 0x84
   1f2dc:	mov	r3, #0
   1f2e0:	add	r2, sp, #36	; 0x24
   1f2e4:	mov	r0, r3
   1f2e8:	mov	r1, r5
   1f2ec:	str	r3, [sp, #28]
   1f2f0:	mov	r3, #1
   1f2f4:	str	r3, [r8, #152]	; 0x98
   1f2f8:	bl	12224 <__strtok_r@plt>
   1f2fc:	cmp	r0, #0
   1f300:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f304:	ldrb	r3, [r0]
   1f308:	cmp	r3, #35	; 0x23
   1f30c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f310:	mov	r3, #0
   1f314:	add	r2, sp, #36	; 0x24
   1f318:	mov	r0, r3
   1f31c:	mov	r1, r5
   1f320:	str	r3, [sp, #28]
   1f324:	bl	12224 <__strtok_r@plt>
   1f328:	subs	r4, r0, #0
   1f32c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f330:	ldrb	r3, [r4]
   1f334:	cmp	r3, #35	; 0x23
   1f338:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f33c:	cmp	r7, #14
   1f340:	beq	1f564 <crc32@@Base+0x5dc0>
   1f344:	mov	r3, #0
   1f348:	add	r2, sp, #36	; 0x24
   1f34c:	mov	r0, r3
   1f350:	mov	r1, r5
   1f354:	str	r3, [sp, #28]
   1f358:	bl	12224 <__strtok_r@plt>
   1f35c:	cmp	r0, #0
   1f360:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f364:	ldrb	r3, [r0]
   1f368:	cmp	r3, #35	; 0x23
   1f36c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f370:	mov	fp, #4
   1f374:	mov	r0, #0
   1f378:	add	fp, fp, #1
   1f37c:	str	r0, [sp, #28]
   1f380:	b	1f20c <crc32@@Base+0x5a68>
   1f384:	mov	r3, #0
   1f388:	add	r2, sp, #36	; 0x24
   1f38c:	mov	r0, r3
   1f390:	mov	r1, r5
   1f394:	str	r4, [r8, #128]	; 0x80
   1f398:	str	r3, [sp, #28]
   1f39c:	bl	12224 <__strtok_r@plt>
   1f3a0:	subs	r4, r0, #0
   1f3a4:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f3a8:	ldrb	r3, [r4]
   1f3ac:	cmp	r3, #35	; 0x23
   1f3b0:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f3b4:	mov	r0, r4
   1f3b8:	mov	r2, r6
   1f3bc:	ldr	r1, [sp, #12]
   1f3c0:	mov	r4, #0
   1f3c4:	bl	1e320 <crc32@@Base+0x4b7c>
   1f3c8:	add	r2, sp, #36	; 0x24
   1f3cc:	mov	r1, r5
   1f3d0:	str	r4, [sp, #28]
   1f3d4:	str	r0, [r8, #140]	; 0x8c
   1f3d8:	mov	r0, r4
   1f3dc:	bl	12224 <__strtok_r@plt>
   1f3e0:	cmp	r0, #0
   1f3e4:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f3e8:	ldrb	r3, [r0]
   1f3ec:	cmp	r3, #35	; 0x23
   1f3f0:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f3f4:	add	r2, sp, #36	; 0x24
   1f3f8:	mov	r1, r5
   1f3fc:	mov	r0, r4
   1f400:	str	r4, [sp, #28]
   1f404:	bl	12224 <__strtok_r@plt>
   1f408:	cmp	r0, #0
   1f40c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f410:	ldrb	r3, [r0]
   1f414:	cmp	r3, #35	; 0x23
   1f418:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f41c:	mov	r0, r4
   1f420:	add	r2, sp, #36	; 0x24
   1f424:	mov	r1, r5
   1f428:	str	r4, [sp, #28]
   1f42c:	bl	12224 <__strtok_r@plt>
   1f430:	cmp	r0, #0
   1f434:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f438:	ldrb	r3, [r0]
   1f43c:	cmp	r3, #35	; 0x23
   1f440:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f444:	mov	r7, #13
   1f448:	mov	fp, #5
   1f44c:	b	1f374 <crc32@@Base+0x5bd0>
   1f450:	mov	r2, r4
   1f454:	mov	r1, r9
   1f458:	ldr	r0, [pc, #648]	; 1f6e8 <crc32@@Base+0x5f44>
   1f45c:	bl	1a620 <crc32@@Base+0xe7c>
   1f460:	movw	r1, #36240	; 0x8d90
   1f464:	mov	r2, #2
   1f468:	movt	r1, #3
   1f46c:	str	r0, [r8, #136]	; 0x88
   1f470:	mov	r0, r4
   1f474:	bl	1217c <strncmp@plt>
   1f478:	subs	r4, r0, #0
   1f47c:	beq	1f668 <crc32@@Base+0x5ec4>
   1f480:	mov	r4, #0
   1f484:	add	r2, sp, #36	; 0x24
   1f488:	mov	r0, r4
   1f48c:	mov	r1, r5
   1f490:	str	r4, [sp, #28]
   1f494:	bl	12224 <__strtok_r@plt>
   1f498:	cmp	r0, #0
   1f49c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f4a0:	ldrb	r3, [r0]
   1f4a4:	cmp	r3, #35	; 0x23
   1f4a8:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f4ac:	add	r2, sp, #36	; 0x24
   1f4b0:	mov	r1, r5
   1f4b4:	mov	r0, r4
   1f4b8:	str	r4, [sp, #28]
   1f4bc:	bl	12224 <__strtok_r@plt>
   1f4c0:	cmp	r0, #0
   1f4c4:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f4c8:	ldrb	r3, [r0]
   1f4cc:	cmp	r3, #35	; 0x23
   1f4d0:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f4d4:	mov	r0, r4
   1f4d8:	add	r2, sp, #36	; 0x24
   1f4dc:	mov	r1, r5
   1f4e0:	str	r4, [sp, #28]
   1f4e4:	bl	12224 <__strtok_r@plt>
   1f4e8:	cmp	r0, #0
   1f4ec:	bne	1f364 <crc32@@Base+0x5bc0>
   1f4f0:	b	1f1b8 <crc32@@Base+0x5a14>
   1f4f4:	mov	r3, #0
   1f4f8:	add	r2, sp, #36	; 0x24
   1f4fc:	mov	r0, r3
   1f500:	mov	r1, r5
   1f504:	str	r4, [r8, #148]	; 0x94
   1f508:	str	r3, [sp, #28]
   1f50c:	bl	12224 <__strtok_r@plt>
   1f510:	subs	r4, r0, #0
   1f514:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f518:	ldrb	r3, [r4]
   1f51c:	cmp	r3, #35	; 0x23
   1f520:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f524:	mov	r0, r4
   1f528:	mov	r2, r6
   1f52c:	ldr	r1, [sp, #12]
   1f530:	bl	1e320 <crc32@@Base+0x4b7c>
   1f534:	mov	r3, #0
   1f538:	add	r2, sp, #36	; 0x24
   1f53c:	mov	r1, r5
   1f540:	str	r3, [sp, #28]
   1f544:	str	r0, [r8, #168]	; 0xa8
   1f548:	mov	r0, r3
   1f54c:	bl	12224 <__strtok_r@plt>
   1f550:	subs	r4, r0, #0
   1f554:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f558:	ldrb	r3, [r4]
   1f55c:	cmp	r3, #35	; 0x23
   1f560:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f564:	mov	r0, r4
   1f568:	mov	r2, r6
   1f56c:	ldr	r1, [sp, #12]
   1f570:	mov	r4, #0
   1f574:	bl	1e320 <crc32@@Base+0x4b7c>
   1f578:	add	r2, sp, #36	; 0x24
   1f57c:	mov	r1, r5
   1f580:	str	r4, [sp, #28]
   1f584:	str	r0, [r8, #156]	; 0x9c
   1f588:	mov	r0, r4
   1f58c:	bl	12224 <__strtok_r@plt>
   1f590:	cmp	r0, #0
   1f594:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f598:	ldrb	r3, [r0]
   1f59c:	cmp	r3, #35	; 0x23
   1f5a0:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f5a4:	add	r2, sp, #36	; 0x24
   1f5a8:	mov	r1, r5
   1f5ac:	mov	r0, r4
   1f5b0:	str	r4, [sp, #28]
   1f5b4:	bl	12224 <__strtok_r@plt>
   1f5b8:	cmp	r0, #0
   1f5bc:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f5c0:	ldrb	r3, [r0]
   1f5c4:	cmp	r3, #35	; 0x23
   1f5c8:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f5cc:	mov	r0, r4
   1f5d0:	add	r2, sp, #36	; 0x24
   1f5d4:	mov	r1, r5
   1f5d8:	str	r4, [sp, #28]
   1f5dc:	bl	12224 <__strtok_r@plt>
   1f5e0:	cmp	r0, #0
   1f5e4:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f5e8:	ldrb	r3, [r0]
   1f5ec:	cmp	r3, #35	; 0x23
   1f5f0:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f5f4:	mov	r7, #14
   1f5f8:	mov	fp, #6
   1f5fc:	b	1f374 <crc32@@Base+0x5bd0>
   1f600:	mov	r3, #0
   1f604:	add	r2, sp, #36	; 0x24
   1f608:	mov	r0, r3
   1f60c:	mov	r1, r5
   1f610:	str	r3, [sp, #28]
   1f614:	bl	12224 <__strtok_r@plt>
   1f618:	subs	r4, r0, #0
   1f61c:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f620:	ldrb	r3, [r4]
   1f624:	cmp	r3, #35	; 0x23
   1f628:	beq	1f1b8 <crc32@@Base+0x5a14>
   1f62c:	cmp	r7, #13
   1f630:	beq	1f3b4 <crc32@@Base+0x5c10>
   1f634:	cmp	r7, #14
   1f638:	beq	1f524 <crc32@@Base+0x5d80>
   1f63c:	b	1f310 <crc32@@Base+0x5b6c>
   1f640:	ldr	r0, [sp, #16]
   1f644:	bl	1e9b4 <crc32@@Base+0x5210>
   1f648:	ldr	r3, [sp, #20]
   1f64c:	ldr	r2, [sp, #44]	; 0x2c
   1f650:	mov	r0, #0
   1f654:	ldr	r3, [r3]
   1f658:	cmp	r2, r3
   1f65c:	bne	1f6e4 <crc32@@Base+0x5f40>
   1f660:	add	sp, sp, #52	; 0x34
   1f664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f668:	add	r2, sp, #36	; 0x24
   1f66c:	mov	r1, r5
   1f670:	mov	r3, #32768	; 0x8000
   1f674:	str	r4, [sp, #28]
   1f678:	str	r3, [r8, #160]	; 0xa0
   1f67c:	bl	12224 <__strtok_r@plt>
   1f680:	cmp	r0, #0
   1f684:	bne	1f4a0 <crc32@@Base+0x5cfc>
   1f688:	b	1f1b8 <crc32@@Base+0x5a14>
   1f68c:	movw	r2, #65044	; 0xfe14
   1f690:	movt	r2, #4
   1f694:	str	r4, [sp, #4]
   1f698:	mov	r1, #1
   1f69c:	ldr	r0, [r2]
   1f6a0:	movw	r2, #25500	; 0x639c
   1f6a4:	ldr	r3, [sp, #12]
   1f6a8:	movt	r2, #3
   1f6ac:	str	r6, [sp]
   1f6b0:	bl	122b4 <__fprintf_chk@plt>
   1f6b4:	mov	r0, #1
   1f6b8:	bl	121f4 <exit@plt>
   1f6bc:	movw	r1, #65044	; 0xfe14
   1f6c0:	movt	r1, #4
   1f6c4:	ldr	r3, [sp, #12]
   1f6c8:	movw	r2, #39776	; 0x9b60
   1f6cc:	ldr	r0, [r1]
   1f6d0:	movt	r2, #3
   1f6d4:	mov	r1, #1
   1f6d8:	bl	122b4 <__fprintf_chk@plt>
   1f6dc:	mov	r0, #1
   1f6e0:	bl	121f4 <exit@plt>
   1f6e4:	bl	12494 <__stack_chk_fail@plt>
   1f6e8:	ldrdeq	pc, [r4], -r4
   1f6ec:	subs	r0, r0, #9
   1f6f0:	movne	r0, #1
   1f6f4:	bx	lr
   1f6f8:	movw	r3, #63536	; 0xf830
   1f6fc:	movt	r3, #4
   1f700:	push	{r4, lr}
   1f704:	mov	r4, r0
   1f708:	ldr	r2, [r3, #4]
   1f70c:	ldrb	r0, [r0]
   1f710:	cmp	r2, #0
   1f714:	beq	1f740 <crc32@@Base+0x5f9c>
   1f718:	ldr	r1, [r3]
   1f71c:	cmp	r0, r1
   1f720:	bne	1f734 <crc32@@Base+0x5f90>
   1f724:	b	1f740 <crc32@@Base+0x5f9c>
   1f728:	ldr	r1, [r3, #8]!
   1f72c:	cmp	r0, r1
   1f730:	beq	1f740 <crc32@@Base+0x5f9c>
   1f734:	ldr	r2, [r3, #12]
   1f738:	cmp	r2, #0
   1f73c:	bne	1f728 <crc32@@Base+0x5f84>
   1f740:	movw	r1, #41848	; 0xa378
   1f744:	mov	r0, #1
   1f748:	movt	r1, #3
   1f74c:	bl	12770 <__printf_chk@plt>
   1f750:	ldrb	r2, [r4, #8]
   1f754:	movw	r1, #41888	; 0xa3a0
   1f758:	mov	r0, #1
   1f75c:	movt	r1, #3
   1f760:	bl	12770 <__printf_chk@plt>
   1f764:	movw	r1, #29864	; 0x74a8
   1f768:	mov	r0, #1
   1f76c:	movt	r1, #3
   1f770:	bl	12770 <__printf_chk@plt>
   1f774:	ldr	r0, [r4, #4]
   1f778:	sub	r0, r0, #4
   1f77c:	bl	19d8c <crc32@@Base+0x5e8>
   1f780:	ldr	r2, [r4, #16]
   1f784:	movw	r1, #37232	; 0x9170
   1f788:	mov	r0, #1
   1f78c:	movt	r1, #3
   1f790:	bl	12770 <__printf_chk@plt>
   1f794:	ldr	r2, [r4, #20]
   1f798:	movw	r1, #37252	; 0x9184
   1f79c:	mov	r0, #1
   1f7a0:	movt	r1, #3
   1f7a4:	pop	{r4, lr}
   1f7a8:	b	12770 <__printf_chk@plt>
   1f7ac:	add	r1, r0, r1
   1f7b0:	mov	r3, #0
   1f7b4:	ldrb	r2, [r0], #1
   1f7b8:	add	r3, r3, r2
   1f7bc:	cmp	r0, r1
   1f7c0:	uxtb	r3, r3
   1f7c4:	bne	1f7b4 <crc32@@Base+0x6010>
   1f7c8:	mov	r0, r3
   1f7cc:	bx	lr
   1f7d0:	ldr	r3, [r0, #64]	; 0x40
   1f7d4:	ldrb	r3, [r3]
   1f7d8:	cmp	r3, #0
   1f7dc:	beq	1f824 <crc32@@Base+0x6080>
   1f7e0:	ldr	r2, [r0]
   1f7e4:	ldr	r3, [r0, #8]
   1f7e8:	cmp	r2, #0
   1f7ec:	beq	1f80c <crc32@@Base+0x6068>
   1f7f0:	cmp	r3, #0
   1f7f4:	bne	1f804 <crc32@@Base+0x6060>
   1f7f8:	ldr	r3, [r0, #16]
   1f7fc:	cmp	r3, #0
   1f800:	beq	1f814 <crc32@@Base+0x6070>
   1f804:	mov	r0, #1
   1f808:	bx	lr
   1f80c:	cmp	r3, #0
   1f810:	bne	1f7f8 <crc32@@Base+0x6054>
   1f814:	ldr	r0, [r0, #28]
   1f818:	adds	r0, r0, #0
   1f81c:	movne	r0, #1
   1f820:	bx	lr
   1f824:	push	{lr}		; (str lr, [sp, #-4]!)
   1f828:	movw	r2, #65044	; 0xfe14
   1f82c:	sub	sp, sp, #12
   1f830:	movt	r2, #4
   1f834:	ldr	r3, [r0, #80]	; 0x50
   1f838:	movw	r1, #41924	; 0xa3c4
   1f83c:	ldr	r0, [r2]
   1f840:	movt	r1, #3
   1f844:	movw	r2, #41908	; 0xa3b4
   1f848:	str	r1, [sp]
   1f84c:	movt	r2, #3
   1f850:	mov	r1, #1
   1f854:	bl	122b4 <__fprintf_chk@plt>
   1f858:	mvn	r0, #0
   1f85c:	add	sp, sp, #12
   1f860:	pop	{pc}		; (ldr pc, [sp], #4)
   1f864:	push	{r4, r5, r6, r7, lr}
   1f868:	movw	lr, #3112	; 0xc28
   1f86c:	movt	lr, #6
   1f870:	sub	sp, sp, #4160	; 0x1040
   1f874:	movw	r4, #61168	; 0xeef0
   1f878:	movt	r4, #4
   1f87c:	sub	sp, sp, #44	; 0x2c
   1f880:	ldr	r6, [lr]
   1f884:	add	r2, sp, #4160	; 0x1040
   1f888:	ldr	r3, [r4]
   1f88c:	add	r2, r2, #36	; 0x24
   1f890:	cmp	r6, #0
   1f894:	str	r3, [r2]
   1f898:	ble	1f9a4 <crc32@@Base+0x6200>
   1f89c:	ldr	r2, [lr, #4]
   1f8a0:	mov	r5, r0
   1f8a4:	mov	r0, #44	; 0x2c
   1f8a8:	mov	ip, #0
   1f8ac:	mla	r0, r0, r6, r2
   1f8b0:	mov	r3, r2
   1f8b4:	ldr	r1, [r3]
   1f8b8:	add	r3, r3, #44	; 0x2c
   1f8bc:	cmp	r1, #9
   1f8c0:	addeq	ip, ip, #1
   1f8c4:	cmp	r3, r0
   1f8c8:	bne	1f8b4 <crc32@@Base+0x6110>
   1f8cc:	cmp	ip, #1
   1f8d0:	bls	1f91c <crc32@@Base+0x6178>
   1f8d4:	movw	r3, #65044	; 0xfe14
   1f8d8:	movt	r3, #4
   1f8dc:	movw	r0, #42004	; 0xa414
   1f8e0:	mov	r2, #41	; 0x29
   1f8e4:	ldr	r3, [r3]
   1f8e8:	movt	r0, #3
   1f8ec:	mov	r1, #1
   1f8f0:	bl	12578 <fwrite@plt>
   1f8f4:	mov	r0, #0
   1f8f8:	add	r3, sp, #4160	; 0x1040
   1f8fc:	add	r3, r3, #36	; 0x24
   1f900:	ldr	r2, [r3]
   1f904:	ldr	r3, [r4]
   1f908:	cmp	r2, r3
   1f90c:	bne	1fa64 <crc32@@Base+0x62c0>
   1f910:	add	sp, sp, #4160	; 0x1040
   1f914:	add	sp, sp, #44	; 0x2c
   1f918:	pop	{r4, r5, r6, r7, pc}
   1f91c:	mov	r0, #0
   1f920:	ldr	r1, [r2]
   1f924:	add	r2, r2, #44	; 0x2c
   1f928:	cmp	r1, #10
   1f92c:	addeq	r0, r0, #1
   1f930:	cmp	r3, r2
   1f934:	bne	1f920 <crc32@@Base+0x617c>
   1f938:	cmp	r0, #1
   1f93c:	bls	1f968 <crc32@@Base+0x61c4>
   1f940:	movw	r3, #65044	; 0xfe14
   1f944:	movt	r3, #4
   1f948:	movw	r0, #42048	; 0xa440
   1f94c:	mov	r2, #36	; 0x24
   1f950:	ldr	r3, [r3]
   1f954:	movt	r0, #3
   1f958:	mov	r1, #1
   1f95c:	bl	12578 <fwrite@plt>
   1f960:	mov	r0, #0
   1f964:	b	1f8f8 <crc32@@Base+0x6154>
   1f968:	ldr	r7, [lr, #4]
   1f96c:	ldr	r3, [r7]
   1f970:	cmp	r3, #9
   1f974:	beq	1f9ac <crc32@@Base+0x6208>
   1f978:	mov	r3, r7
   1f97c:	mov	r2, #0
   1f980:	b	1f998 <crc32@@Base+0x61f4>
   1f984:	add	r3, r3, #44	; 0x2c
   1f988:	ldr	r1, [r3]
   1f98c:	cmp	r1, #9
   1f990:	mov	r7, r3
   1f994:	beq	1f9ac <crc32@@Base+0x6208>
   1f998:	add	r2, r2, #1
   1f99c:	cmp	r6, r2
   1f9a0:	bne	1f984 <crc32@@Base+0x61e0>
   1f9a4:	mov	r0, #4096	; 0x1000
   1f9a8:	b	1f8f8 <crc32@@Base+0x6154>
   1f9ac:	add	r2, sp, #8
   1f9b0:	ldr	r1, [r7, #4]
   1f9b4:	mov	r0, #3
   1f9b8:	bl	12620 <__xstat@plt>
   1f9bc:	cmp	r0, #0
   1f9c0:	blt	1f9f8 <crc32@@Base+0x6254>
   1f9c4:	ldr	r0, [r7, #40]	; 0x28
   1f9c8:	cmp	r5, #0
   1f9cc:	ldr	r3, [sp, #52]	; 0x34
   1f9d0:	add	r0, r0, #2
   1f9d4:	movne	r2, #1
   1f9d8:	add	r3, r3, #4096	; 0x1000
   1f9dc:	strne	r2, [r5]
   1f9e0:	lsl	r0, r0, #2
   1f9e4:	add	r3, r3, #35	; 0x23
   1f9e8:	add	r0, r0, r3
   1f9ec:	bic	r0, r0, #4080	; 0xff0
   1f9f0:	bic	r0, r0, #15
   1f9f4:	b	1f8f8 <crc32@@Base+0x6154>
   1f9f8:	mov	r2, #4096	; 0x1000
   1f9fc:	mov	r1, #0
   1fa00:	add	r0, sp, #100	; 0x64
   1fa04:	bl	122e4 <memset@plt>
   1fa08:	mov	r1, #4096	; 0x1000
   1fa0c:	add	r0, sp, #100	; 0x64
   1fa10:	bl	125d8 <getcwd@plt>
   1fa14:	cmp	r0, #0
   1fa18:	addne	r1, sp, #100	; 0x64
   1fa1c:	beq	1fa4c <crc32@@Base+0x62a8>
   1fa20:	movw	r0, #65044	; 0xfe14
   1fa24:	movt	r0, #4
   1fa28:	ldr	r3, [r7, #4]
   1fa2c:	movw	r2, #42104	; 0xa478
   1fa30:	ldr	r0, [r0]
   1fa34:	movt	r2, #3
   1fa38:	str	r1, [sp]
   1fa3c:	mov	r1, #1
   1fa40:	bl	122b4 <__fprintf_chk@plt>
   1fa44:	mov	r0, #0
   1fa48:	b	1f8f8 <crc32@@Base+0x6154>
   1fa4c:	movw	r0, #42088	; 0xa468
   1fa50:	movt	r0, #3
   1fa54:	bl	12284 <perror@plt>
   1fa58:	movw	r1, #41976	; 0xa3f8
   1fa5c:	movt	r1, #3
   1fa60:	b	1fa20 <crc32@@Base+0x627c>
   1fa64:	bl	12494 <__stack_chk_fail@plt>
   1fa68:	push	{r4, r5, r6, lr}
   1fa6c:	mov	r4, r0
   1fa70:	ldrb	r5, [r0, #8]
   1fa74:	cmp	r5, #0
   1fa78:	beq	1faa0 <crc32@@Base+0x62fc>
   1fa7c:	ldrb	r3, [r0, #9]
   1fa80:	ldrh	r0, [r0, #10]
   1fa84:	orr	r0, r0, r3, lsl #16
   1fa88:	cmp	r0, r1
   1fa8c:	mov	r1, r0
   1fa90:	bhi	1faf8 <crc32@@Base+0x6354>
   1fa94:	cmp	r0, #0
   1fa98:	bne	1faac <crc32@@Base+0x6308>
   1fa9c:	b	1fab4 <crc32@@Base+0x6310>
   1faa0:	cmp	r1, #31
   1faa4:	bls	1faf8 <crc32@@Base+0x6354>
   1faa8:	mov	r1, #32
   1faac:	mov	r0, r4
   1fab0:	bl	1f7ac <crc32@@Base+0x6008>
   1fab4:	ldrb	r3, [r4, #31]
   1fab8:	sub	r0, r0, r3
   1fabc:	uxtb	r0, r0
   1fac0:	cmp	r3, r0
   1fac4:	bne	1faf8 <crc32@@Base+0x6354>
   1fac8:	cmp	r5, #0
   1facc:	bne	1faf0 <crc32@@Base+0x634c>
   1fad0:	movw	r1, #479	; 0x1df
   1fad4:	add	r0, r4, #32
   1fad8:	bl	1f7ac <crc32@@Base+0x6008>
   1fadc:	ldrb	r3, [r4, #511]	; 0x1ff
   1fae0:	cmp	r3, r0
   1fae4:	moveq	r0, #0
   1fae8:	mvnne	r0, #10
   1faec:	pop	{r4, r5, r6, pc}
   1faf0:	mov	r0, #0
   1faf4:	pop	{r4, r5, r6, pc}
   1faf8:	mvn	r0, #10
   1fafc:	pop	{r4, r5, r6, pc}
   1fb00:	push	{r4, r5, r6, r7, r8, lr}
   1fb04:	movw	r7, #63536	; 0xf830
   1fb08:	movt	r7, #4
   1fb0c:	mov	r6, r0
   1fb10:	ldr	r0, [r7, #4]
   1fb14:	cmp	r0, #0
   1fb18:	beq	1fb54 <crc32@@Base+0x63b0>
   1fb1c:	mov	r4, r7
   1fb20:	mov	r5, #0
   1fb24:	b	1fb38 <crc32@@Base+0x6394>
   1fb28:	ldr	r0, [r4, #4]
   1fb2c:	add	r5, r5, #1
   1fb30:	cmp	r0, #0
   1fb34:	beq	1fb54 <crc32@@Base+0x63b0>
   1fb38:	mov	r1, r6
   1fb3c:	add	r4, r4, #8
   1fb40:	bl	1265c <strcmp@plt>
   1fb44:	cmp	r0, #0
   1fb48:	bne	1fb28 <crc32@@Base+0x6384>
   1fb4c:	ldr	r0, [r7, r5, lsl #3]
   1fb50:	pop	{r4, r5, r6, r7, r8, pc}
   1fb54:	mvn	r0, #0
   1fb58:	pop	{r4, r5, r6, r7, r8, pc}
   1fb5c:	push	{r4, r5, r6, r7, r8, lr}
   1fb60:	movw	r7, #63536	; 0xf830
   1fb64:	movt	r7, #4
   1fb68:	mov	r6, r0
   1fb6c:	ldr	r0, [r7, #68]	; 0x44
   1fb70:	cmp	r0, #0
   1fb74:	beq	1fbb4 <crc32@@Base+0x6410>
   1fb78:	add	r4, r7, #64	; 0x40
   1fb7c:	mov	r5, #0
   1fb80:	b	1fb94 <crc32@@Base+0x63f0>
   1fb84:	ldr	r0, [r4, #4]
   1fb88:	add	r5, r5, #1
   1fb8c:	cmp	r0, #0
   1fb90:	beq	1fbb4 <crc32@@Base+0x6410>
   1fb94:	mov	r1, r6
   1fb98:	add	r4, r4, #8
   1fb9c:	bl	1265c <strcmp@plt>
   1fba0:	cmp	r0, #0
   1fba4:	bne	1fb84 <crc32@@Base+0x63e0>
   1fba8:	add	r5, r7, r5, lsl #3
   1fbac:	ldr	r0, [r5, #64]	; 0x40
   1fbb0:	pop	{r4, r5, r6, r7, r8, pc}
   1fbb4:	mvn	r0, #0
   1fbb8:	pop	{r4, r5, r6, r7, r8, pc}
   1fbbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fbc0:	movw	r3, #61168	; 0xeef0
   1fbc4:	sub	sp, sp, #300	; 0x12c
   1fbc8:	movt	r3, #4
   1fbcc:	movw	fp, #25476	; 0x6384
   1fbd0:	movt	fp, #3
   1fbd4:	str	r3, [sp, #20]
   1fbd8:	mov	r9, r0
   1fbdc:	ldr	r3, [r3]
   1fbe0:	mov	r8, #0
   1fbe4:	movw	r2, #3112	; 0xc28
   1fbe8:	movt	r2, #6
   1fbec:	str	r2, [sp, #4]
   1fbf0:	movw	r2, #42364	; 0xa57c
   1fbf4:	str	r3, [sp, #292]	; 0x124
   1fbf8:	movt	r2, #3
   1fbfc:	movw	r3, #65044	; 0xfe14
   1fc00:	str	r2, [sp, #12]
   1fc04:	movt	r3, #4
   1fc08:	str	r3, [sp, #16]
   1fc0c:	mov	r0, r9
   1fc10:	bl	12260 <feof@plt>
   1fc14:	subs	r1, r0, #0
   1fc18:	bne	1fdb4 <crc32@@Base+0x6610>
   1fc1c:	mov	r2, #256	; 0x100
   1fc20:	add	r0, sp, #36	; 0x24
   1fc24:	bl	122e4 <memset@plt>
   1fc28:	mov	r2, r9
   1fc2c:	add	r0, sp, #36	; 0x24
   1fc30:	mov	r1, #256	; 0x100
   1fc34:	bl	12548 <fgets@plt>
   1fc38:	subs	r7, r0, #0
   1fc3c:	beq	1fdb4 <crc32@@Base+0x6610>
   1fc40:	ldrb	r3, [r7]
   1fc44:	cmp	r3, #35	; 0x23
   1fc48:	cmpne	r3, #10
   1fc4c:	moveq	r4, #1
   1fc50:	movne	r4, #0
   1fc54:	beq	1fc0c <crc32@@Base+0x6468>
   1fc58:	bl	125c0 <strlen@plt>
   1fc5c:	add	ip, sp, #32
   1fc60:	add	r2, sp, #28
   1fc64:	ldr	r5, [pc, #924]	; 20008 <crc32@@Base+0x6864>
   1fc68:	mov	r1, ip
   1fc6c:	sub	r0, r0, #1
   1fc70:	ldrb	r3, [r7, r0]
   1fc74:	cmp	r3, #10
   1fc78:	ldr	r3, [fp]
   1fc7c:	strbeq	r4, [r7, r0]
   1fc80:	mov	r0, r7
   1fc84:	mov	r4, #1
   1fc88:	strh	r3, [ip], #2
   1fc8c:	lsr	r3, r3, #16
   1fc90:	strb	r3, [ip]
   1fc94:	ldr	r3, [sp, #4]
   1fc98:	ldr	sl, [r3, #4]
   1fc9c:	bl	12224 <__strtok_r@plt>
   1fca0:	ldr	r1, [sp, #12]
   1fca4:	mov	r6, r0
   1fca8:	b	1fcbc <crc32@@Base+0x6518>
   1fcac:	add	r4, r4, #1
   1fcb0:	cmp	r4, #24
   1fcb4:	beq	1fd64 <crc32@@Base+0x65c0>
   1fcb8:	ldr	r1, [r5, #4]!
   1fcbc:	mov	r0, r6
   1fcc0:	bl	1265c <strcmp@plt>
   1fcc4:	subs	r3, r0, #0
   1fcc8:	bne	1fcac <crc32@@Base+0x6508>
   1fccc:	mov	ip, #44	; 0x2c
   1fcd0:	add	r2, sp, #28
   1fcd4:	mul	ip, ip, r8
   1fcd8:	add	r1, sp, #32
   1fcdc:	str	r3, [sp, #8]
   1fce0:	add	r5, sl, ip
   1fce4:	str	r4, [sl, ip]
   1fce8:	bl	12224 <__strtok_r@plt>
   1fcec:	ldr	r3, [sp, #8]
   1fcf0:	subs	r6, r0, #0
   1fcf4:	beq	1ffbc <crc32@@Base+0x6818>
   1fcf8:	sub	r4, r4, #1
   1fcfc:	cmp	r4, #22
   1fd00:	ldrls	pc, [pc, r4, lsl #2]
   1fd04:	b	1fd64 <crc32@@Base+0x65c0>
   1fd08:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1fd0c:	strdeq	pc, [r1], -r8
   1fd10:	andeq	pc, r1, r4, ror #26
   1fd14:	andeq	pc, r1, r4, ror #26
   1fd18:	ldrdeq	pc, [r1], -ip
   1fd1c:	ldrdeq	pc, [r1], -ip
   1fd20:	andeq	pc, r1, r8, ror #30
   1fd24:	ldrdeq	pc, [r1], -ip
   1fd28:	andeq	pc, r1, r4, lsr lr	; <UNPREDICTABLE>
   1fd2c:	andeq	pc, r1, r4, ror #26
   1fd30:	andeq	pc, r1, r8, lsr #29
   1fd34:	andeq	pc, r1, ip, lsl lr	; <UNPREDICTABLE>
   1fd38:	andeq	pc, r1, ip, lsl lr	; <UNPREDICTABLE>
   1fd3c:	andeq	pc, r1, ip, lsl #28
   1fd40:	andeq	pc, r1, ip, lsl #28
   1fd44:	andeq	pc, r1, r0, asr pc	; <UNPREDICTABLE>
   1fd48:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   1fd4c:	strdeq	pc, [r1], -r4
   1fd50:	strdeq	pc, [r1], -r4
   1fd54:	andeq	pc, r1, ip, lsr #30
   1fd58:	andeq	pc, r1, ip, ror #29
   1fd5c:	strdeq	pc, [r1], -r4
   1fd60:	andeq	pc, r1, ip, lsl #28
   1fd64:	ldr	r0, [sp, #16]
   1fd68:	movw	r2, #42532	; 0xa624
   1fd6c:	mov	r3, r7
   1fd70:	mov	r1, #1
   1fd74:	movt	r2, #3
   1fd78:	ldr	r0, [r0]
   1fd7c:	bl	122b4 <__fprintf_chk@plt>
   1fd80:	add	r8, r8, #1
   1fd84:	cmp	r8, #255	; 0xff
   1fd88:	ble	1fc0c <crc32@@Base+0x6468>
   1fd8c:	movw	r3, #65044	; 0xfe14
   1fd90:	movt	r3, #4
   1fd94:	movw	r0, #42560	; 0xa640
   1fd98:	mov	r2, #45	; 0x2d
   1fd9c:	ldr	r3, [r3]
   1fda0:	movt	r0, #3
   1fda4:	mov	r1, #1
   1fda8:	bl	12578 <fwrite@plt>
   1fdac:	mvn	r0, #0
   1fdb0:	b	1fdc0 <crc32@@Base+0x661c>
   1fdb4:	ldr	r3, [sp, #4]
   1fdb8:	mov	r0, #0
   1fdbc:	str	r8, [r3]
   1fdc0:	ldr	r3, [sp, #20]
   1fdc4:	ldr	r2, [sp, #292]	; 0x124
   1fdc8:	ldr	r3, [r3]
   1fdcc:	cmp	r2, r3
   1fdd0:	bne	20004 <crc32@@Base+0x6860>
   1fdd4:	add	sp, sp, #300	; 0x12c
   1fdd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fddc:	mov	r0, r6
   1fde0:	mov	r2, #16
   1fde4:	mov	r1, #0
   1fde8:	bl	122cc <strtoul@plt>
   1fdec:	str	r0, [r5, #4]
   1fdf0:	b	1fd80 <crc32@@Base+0x65dc>
   1fdf4:	mov	r2, #0
   1fdf8:	mov	r0, r6
   1fdfc:	mov	r1, r2
   1fe00:	bl	122cc <strtoul@plt>
   1fe04:	str	r0, [r5, #4]
   1fe08:	b	1fd80 <crc32@@Base+0x65dc>
   1fe0c:	mov	r0, r6
   1fe10:	bl	12308 <__strdup@plt>
   1fe14:	str	r0, [r5, #4]
   1fe18:	b	1fd80 <crc32@@Base+0x65dc>
   1fe1c:	mov	r0, r6
   1fe20:	mov	r2, #10
   1fe24:	mov	r1, #0
   1fe28:	bl	122cc <strtoul@plt>
   1fe2c:	str	r0, [r5, #4]
   1fe30:	b	1fd80 <crc32@@Base+0x65dc>
   1fe34:	mov	r0, r6
   1fe38:	str	r3, [sp, #8]
   1fe3c:	bl	12308 <__strdup@plt>
   1fe40:	ldr	r3, [sp, #8]
   1fe44:	add	r4, r5, #8
   1fe48:	mov	r6, r3
   1fe4c:	str	r0, [r5, #4]
   1fe50:	add	r2, sp, #28
   1fe54:	add	r1, sp, #32
   1fe58:	mov	r0, #0
   1fe5c:	bl	12224 <__strtok_r@plt>
   1fe60:	cmp	r0, #0
   1fe64:	beq	1ffb4 <crc32@@Base+0x6810>
   1fe68:	mov	r2, #16
   1fe6c:	mov	r1, #0
   1fe70:	bl	122cc <strtoul@plt>
   1fe74:	add	r6, r6, #1
   1fe78:	cmp	r6, #8
   1fe7c:	str	r0, [r4], #4
   1fe80:	bne	1fe50 <crc32@@Base+0x66ac>
   1fe84:	movw	r3, #65044	; 0xfe14
   1fe88:	movt	r3, #4
   1fe8c:	movw	r0, #42460	; 0xa5dc
   1fe90:	mov	r2, #30
   1fe94:	ldr	r3, [r3]
   1fe98:	mov	r1, #1
   1fe9c:	movt	r0, #3
   1fea0:	bl	12578 <fwrite@plt>
   1fea4:	b	1fdac <crc32@@Base+0x6608>
   1fea8:	add	r2, sp, #28
   1feac:	add	r1, sp, #32
   1feb0:	mov	r0, #0
   1feb4:	bl	12224 <__strtok_r@plt>
   1feb8:	subs	r4, r0, #0
   1febc:	beq	1ffe0 <crc32@@Base+0x683c>
   1fec0:	mov	r2, #16
   1fec4:	mov	r1, #0
   1fec8:	mov	r0, r6
   1fecc:	bl	122cc <strtoul@plt>
   1fed0:	mov	r2, #16
   1fed4:	mov	r1, #0
   1fed8:	str	r0, [r5, #4]
   1fedc:	mov	r0, r4
   1fee0:	bl	122cc <strtoul@plt>
   1fee4:	str	r0, [r5, #8]
   1fee8:	b	1fd80 <crc32@@Base+0x65dc>
   1feec:	mov	r3, #1
   1fef0:	strb	r3, [r5, #4]
   1fef4:	b	1fd80 <crc32@@Base+0x65dc>
   1fef8:	mov	r0, r6
   1fefc:	bl	1fb00 <crc32@@Base+0x635c>
   1ff00:	cmp	r0, #0
   1ff04:	bge	1fe14 <crc32@@Base+0x6670>
   1ff08:	movw	r1, #65044	; 0xfe14
   1ff0c:	movt	r1, #4
   1ff10:	mov	r3, r6
   1ff14:	movw	r2, #42404	; 0xa5a4
   1ff18:	ldr	r0, [r1]
   1ff1c:	movt	r2, #3
   1ff20:	mov	r1, #1
   1ff24:	bl	122b4 <__fprintf_chk@plt>
   1ff28:	b	1fdac <crc32@@Base+0x6608>
   1ff2c:	mov	r3, #0
   1ff30:	strb	r3, [r5, #4]
   1ff34:	b	1fd80 <crc32@@Base+0x65dc>
   1ff38:	mov	r2, #0
   1ff3c:	mov	r0, r6
   1ff40:	mov	r1, r2
   1ff44:	bl	122cc <strtoul@plt>
   1ff48:	strb	r0, [r5, #4]
   1ff4c:	b	1fd80 <crc32@@Base+0x65dc>
   1ff50:	mov	r2, #0
   1ff54:	mov	r0, r6
   1ff58:	mov	r1, r2
   1ff5c:	bl	1211c <strtol@plt>
   1ff60:	str	r0, [r5, #4]
   1ff64:	b	1fd80 <crc32@@Base+0x65dc>
   1ff68:	mov	r0, r6
   1ff6c:	bl	1fb5c <crc32@@Base+0x63b8>
   1ff70:	cmp	r0, #0
   1ff74:	bge	1fe14 <crc32@@Base+0x6670>
   1ff78:	movw	r1, #65044	; 0xfe14
   1ff7c:	movt	r1, #4
   1ff80:	mov	r3, r6
   1ff84:	movw	r2, #42432	; 0xa5c0
   1ff88:	ldr	r0, [r1]
   1ff8c:	movt	r2, #3
   1ff90:	mov	r1, #1
   1ff94:	bl	122b4 <__fprintf_chk@plt>
   1ff98:	b	1fdac <crc32@@Base+0x6608>
   1ff9c:	mov	r0, r6
   1ffa0:	mov	r2, #10
   1ffa4:	mov	r1, #0
   1ffa8:	bl	1211c <strtol@plt>
   1ffac:	str	r0, [r5, #4]
   1ffb0:	b	1fd80 <crc32@@Base+0x65dc>
   1ffb4:	str	r6, [r5, #40]	; 0x28
   1ffb8:	b	1fd80 <crc32@@Base+0x65dc>
   1ffbc:	movw	r1, #65044	; 0xfe14
   1ffc0:	movt	r1, #4
   1ffc4:	mov	r3, r7
   1ffc8:	movw	r2, #42372	; 0xa584
   1ffcc:	ldr	r0, [r1]
   1ffd0:	movt	r2, #3
   1ffd4:	mov	r1, #1
   1ffd8:	bl	122b4 <__fprintf_chk@plt>
   1ffdc:	b	1fdac <crc32@@Base+0x6608>
   1ffe0:	movw	r3, #65044	; 0xfe14
   1ffe4:	movt	r3, #4
   1ffe8:	movw	r0, #42492	; 0xa5fc
   1ffec:	mov	r2, #37	; 0x25
   1fff0:	ldr	r3, [r3]
   1fff4:	mov	r1, #1
   1fff8:	movt	r0, #3
   1fffc:	bl	12578 <fwrite@plt>
   20000:	b	1fdac <crc32@@Base+0x6608>
   20004:	bl	12494 <__stack_chk_fail@plt>
   20008:	andeq	sl, r3, ip, lsl r3
   2000c:	push	{r4, r5, r6, r7, r8, lr}
   20010:	mov	r7, r0
   20014:	sub	sp, sp, #8
   20018:	mov	r6, r1
   2001c:	ldr	r0, [r0, #64]	; 0x40
   20020:	movw	r1, #49540	; 0xc184
   20024:	movt	r1, #3
   20028:	bl	1232c <fopen@plt>
   2002c:	subs	r8, r0, #0
   20030:	beq	20120 <crc32@@Base+0x697c>
   20034:	mov	r1, #1
   20038:	mov	r0, #11264	; 0x2c00
   2003c:	bl	12518 <calloc@plt>
   20040:	movw	r5, #3112	; 0xc28
   20044:	movt	r5, #6
   20048:	cmp	r0, #0
   2004c:	str	r0, [r5, #4]
   20050:	beq	201b4 <crc32@@Base+0x6a10>
   20054:	mov	r0, r8
   20058:	bl	1244c <rewind@plt>
   2005c:	mov	r0, r8
   20060:	bl	1fbbc <crc32@@Base+0x6418>
   20064:	mov	r4, r0
   20068:	mov	r0, r8
   2006c:	bl	125fc <fclose@plt>
   20070:	cmp	r4, #0
   20074:	bne	20164 <crc32@@Base+0x69c0>
   20078:	ldr	r1, [r5]
   2007c:	ldr	r0, [r5, #4]
   20080:	cmp	r1, #0
   20084:	ble	200bc <crc32@@Base+0x6918>
   20088:	ldr	r3, [r0]
   2008c:	cmp	r3, #1
   20090:	beq	200ec <crc32@@Base+0x6948>
   20094:	mov	r3, r0
   20098:	b	200b0 <crc32@@Base+0x690c>
   2009c:	add	r3, r3, #44	; 0x2c
   200a0:	ldr	r2, [r3]
   200a4:	cmp	r2, #1
   200a8:	mov	ip, r3
   200ac:	beq	200f0 <crc32@@Base+0x694c>
   200b0:	add	r4, r4, #1
   200b4:	cmp	r4, r1
   200b8:	bne	2009c <crc32@@Base+0x68f8>
   200bc:	mov	r4, #512	; 0x200
   200c0:	bl	12128 <free@plt>
   200c4:	mov	r1, #1
   200c8:	mov	r0, r4
   200cc:	bl	12518 <calloc@plt>
   200d0:	cmp	r0, #0
   200d4:	beq	20174 <crc32@@Base+0x69d0>
   200d8:	str	r0, [r6, #8]
   200dc:	mov	r0, #1
   200e0:	str	r4, [r6, #4]
   200e4:	add	sp, sp, #8
   200e8:	pop	{r4, r5, r6, r7, r8, pc}
   200ec:	mov	ip, r0
   200f0:	ldr	r3, [ip, #4]
   200f4:	cmn	r3, #1
   200f8:	blt	20148 <crc32@@Base+0x69a4>
   200fc:	cmp	r3, #0
   20100:	ble	200bc <crc32@@Base+0x6918>
   20104:	cmp	r3, #1
   20108:	bne	20148 <crc32@@Base+0x69a4>
   2010c:	mov	r0, #0
   20110:	bl	1f864 <crc32@@Base+0x60c0>
   20114:	mov	r4, r0
   20118:	ldr	r0, [r5, #4]
   2011c:	b	200c0 <crc32@@Base+0x691c>
   20120:	movw	r1, #65044	; 0xfe14
   20124:	movt	r1, #4
   20128:	ldr	r3, [r7, #64]	; 0x40
   2012c:	movw	r2, #42608	; 0xa670
   20130:	ldr	r0, [r1]
   20134:	movt	r2, #3
   20138:	mov	r1, #1
   2013c:	bl	122b4 <__fprintf_chk@plt>
   20140:	mov	r0, #1
   20144:	bl	121f4 <exit@plt>
   20148:	movw	r1, #65044	; 0xfe14
   2014c:	movt	r1, #4
   20150:	movw	r2, #42664	; 0xa6a8
   20154:	movt	r2, #3
   20158:	ldr	r0, [r1]
   2015c:	mov	r1, #1
   20160:	bl	122b4 <__fprintf_chk@plt>
   20164:	ldr	r0, [r5, #4]
   20168:	bl	12128 <free@plt>
   2016c:	mov	r0, #1
   20170:	bl	121f4 <exit@plt>
   20174:	movw	r2, #65044	; 0xfe14
   20178:	movt	r2, #4
   2017c:	ldr	r5, [r7, #80]	; 0x50
   20180:	ldr	r4, [r2]
   20184:	bl	1268c <__errno_location@plt>
   20188:	ldr	r0, [r0]
   2018c:	bl	12200 <strerror@plt>
   20190:	mov	r3, r5
   20194:	movw	r2, #25440	; 0x6360
   20198:	mov	r1, #1
   2019c:	movt	r2, #3
   201a0:	str	r0, [sp]
   201a4:	mov	r0, r4
   201a8:	bl	122b4 <__fprintf_chk@plt>
   201ac:	mov	r0, #1
   201b0:	bl	121f4 <exit@plt>
   201b4:	movw	r3, #65044	; 0xfe14
   201b8:	movt	r3, #4
   201bc:	mov	r2, #23
   201c0:	mov	r1, #1
   201c4:	ldr	r3, [r3]
   201c8:	movw	r0, #42640	; 0xa690
   201cc:	movt	r0, #3
   201d0:	bl	12578 <fwrite@plt>
   201d4:	mov	r0, r8
   201d8:	bl	125fc <fclose@plt>
   201dc:	mov	r0, #1
   201e0:	bl	121f4 <exit@plt>
   201e4:	ldrb	r3, [r0, #8]
   201e8:	cmp	r3, #0
   201ec:	ldrbne	r3, [r0, #9]
   201f0:	ldrhne	r0, [r0, #10]
   201f4:	orrne	r0, r0, r3, lsl #16
   201f8:	moveq	r0, #32
   201fc:	bx	lr
   20200:	movw	r3, #3112	; 0xc28
   20204:	movt	r3, #6
   20208:	push	{r4, r5, r6, r7, r8, r9, lr}
   2020c:	movw	r6, #61168	; 0xeef0
   20210:	movt	r6, #4
   20214:	ldr	ip, [r3]
   20218:	sub	sp, sp, #100	; 0x64
   2021c:	ldr	r2, [r6]
   20220:	cmp	ip, #0
   20224:	str	r2, [sp, #92]	; 0x5c
   20228:	ble	2026c <crc32@@Base+0x6ac8>
   2022c:	ldr	r4, [r3, #4]
   20230:	mov	r7, r0
   20234:	ldr	r3, [r4]
   20238:	cmp	r3, #9
   2023c:	beq	2028c <crc32@@Base+0x6ae8>
   20240:	mov	r3, r4
   20244:	mov	r2, #0
   20248:	b	20260 <crc32@@Base+0x6abc>
   2024c:	add	r3, r3, #44	; 0x2c
   20250:	ldr	r1, [r3]
   20254:	cmp	r1, #9
   20258:	mov	r4, r3
   2025c:	beq	2028c <crc32@@Base+0x6ae8>
   20260:	add	r2, r2, #1
   20264:	cmp	ip, r2
   20268:	bne	2024c <crc32@@Base+0x6aa8>
   2026c:	mov	r8, #0
   20270:	ldr	r2, [sp, #92]	; 0x5c
   20274:	mov	r0, r8
   20278:	ldr	r3, [r6]
   2027c:	cmp	r2, r3
   20280:	bne	203e4 <crc32@@Base+0x6c40>
   20284:	add	sp, sp, #100	; 0x64
   20288:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2028c:	mov	r3, #2
   20290:	movw	r1, #49540	; 0xc184
   20294:	strb	r3, [r7]
   20298:	movt	r1, #3
   2029c:	ldr	r0, [r4, #4]
   202a0:	bl	1232c <fopen@plt>
   202a4:	subs	r9, r0, #0
   202a8:	beq	203bc <crc32@@Base+0x6c18>
   202ac:	bl	12488 <fileno@plt>
   202b0:	mov	r2, sp
   202b4:	mov	r1, r0
   202b8:	mov	r0, #3
   202bc:	bl	12554 <__fxstat@plt>
   202c0:	subs	r8, r0, #0
   202c4:	bne	20398 <crc32@@Base+0x6bf4>
   202c8:	ldr	r2, [r4, #40]	; 0x28
   202cc:	ldr	r1, [sp, #44]	; 0x2c
   202d0:	add	r3, r1, r2, lsl #2
   202d4:	str	r2, [r7, #4]
   202d8:	add	r3, r3, #15
   202dc:	bic	r3, r3, #3
   202e0:	add	r3, r3, #4
   202e4:	strh	r3, [r7, #2]
   202e8:	lsr	r3, r3, #16
   202ec:	strb	r3, [r7, #1]
   202f0:	ldr	r3, [r4, #40]	; 0x28
   202f4:	cmp	r3, #0
   202f8:	moveq	r5, #8
   202fc:	beq	2032c <crc32@@Base+0x6b88>
   20300:	add	ip, r4, #8
   20304:	add	r0, r7, #4
   20308:	mov	r3, r8
   2030c:	ldr	r2, [ip], #4
   20310:	add	r3, r3, #1
   20314:	str	r2, [r0, #4]!
   20318:	ldr	r2, [r4, #40]	; 0x28
   2031c:	cmp	r2, r3
   20320:	bhi	2030c <crc32@@Base+0x6b68>
   20324:	lsl	r5, r2, #2
   20328:	add	r5, r5, #8
   2032c:	add	r5, r7, r5
   20330:	mov	r3, r9
   20334:	mov	r2, #1
   20338:	mov	r0, r5
   2033c:	bl	12464 <fread@plt>
   20340:	cmp	r0, #1
   20344:	bne	20368 <crc32@@Base+0x6bc4>
   20348:	mov	r0, r9
   2034c:	bl	125fc <fclose@plt>
   20350:	ldr	r3, [sp, #44]	; 0x2c
   20354:	mov	r2, #0
   20358:	add	r3, r3, #3
   2035c:	bic	r3, r3, #3
   20360:	str	r2, [r5, r3]
   20364:	b	20270 <crc32@@Base+0x6acc>
   20368:	movw	r1, #65044	; 0xfe14
   2036c:	movt	r1, #4
   20370:	movw	r2, #42744	; 0xa6f8
   20374:	ldr	r3, [r4, #4]
   20378:	ldr	r0, [r1]
   2037c:	movt	r2, #3
   20380:	mov	r1, #1
   20384:	bl	122b4 <__fprintf_chk@plt>
   20388:	mov	r0, r9
   2038c:	mvn	r8, #0
   20390:	bl	125fc <fclose@plt>
   20394:	b	20270 <crc32@@Base+0x6acc>
   20398:	movw	r1, #65044	; 0xfe14
   2039c:	movt	r1, #4
   203a0:	ldr	r3, [r4, #4]
   203a4:	movw	r2, #42716	; 0xa6dc
   203a8:	ldr	r0, [r1]
   203ac:	movt	r2, #3
   203b0:	mov	r1, #1
   203b4:	bl	122b4 <__fprintf_chk@plt>
   203b8:	b	20388 <crc32@@Base+0x6be4>
   203bc:	movw	r1, #65044	; 0xfe14
   203c0:	movt	r1, #4
   203c4:	ldr	r3, [r4, #4]
   203c8:	movw	r2, #42688	; 0xa6c0
   203cc:	ldr	r0, [r1]
   203d0:	movt	r2, #3
   203d4:	mov	r1, #1
   203d8:	mvn	r8, #0
   203dc:	bl	122b4 <__fprintf_chk@plt>
   203e0:	b	20270 <crc32@@Base+0x6acc>
   203e4:	bl	12494 <__stack_chk_fail@plt>
   203e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203ec:	movw	sl, #61168	; 0xeef0
   203f0:	sub	sp, sp, #44	; 0x2c
   203f4:	movt	sl, #4
   203f8:	mov	ip, r3
   203fc:	mov	r8, r1
   20400:	str	r3, [sp, #20]
   20404:	movw	r1, #49540	; 0xc184
   20408:	ldr	r3, [sl]
   2040c:	movt	r1, #3
   20410:	str	r0, [sp, #8]
   20414:	ldr	r0, [ip, #64]	; 0x40
   20418:	str	r2, [sp, #12]
   2041c:	str	r3, [sp, #36]	; 0x24
   20420:	bl	1232c <fopen@plt>
   20424:	subs	r4, r0, #0
   20428:	beq	20ba4 <crc32@@Base+0x7400>
   2042c:	mov	r1, #1
   20430:	mov	r0, #11264	; 0x2c00
   20434:	bl	12518 <calloc@plt>
   20438:	movw	r7, #3112	; 0xc28
   2043c:	movt	r7, #6
   20440:	cmp	r0, #0
   20444:	str	r0, [r7, #4]
   20448:	beq	20b74 <crc32@@Base+0x73d0>
   2044c:	mov	r0, r4
   20450:	bl	1244c <rewind@plt>
   20454:	mov	r0, r4
   20458:	bl	1fbbc <crc32@@Base+0x6418>
   2045c:	mov	r6, r0
   20460:	mov	r0, r4
   20464:	bl	125fc <fclose@plt>
   20468:	cmp	r6, #0
   2046c:	bne	20c2c <crc32@@Base+0x7488>
   20470:	ldr	r4, [r7]
   20474:	ldr	r2, [r8, #44]	; 0x2c
   20478:	cmp	r4, #0
   2047c:	add	r2, r2, #3
   20480:	bic	r2, r2, #3
   20484:	str	r2, [r8, #44]	; 0x2c
   20488:	ble	20aec <crc32@@Base+0x7348>
   2048c:	ldr	ip, [r7, #4]
   20490:	ldr	r0, [ip]
   20494:	cmp	r0, #1
   20498:	beq	206d8 <crc32@@Base+0x6f34>
   2049c:	mov	r3, ip
   204a0:	mov	r1, r6
   204a4:	b	204bc <crc32@@Base+0x6d18>
   204a8:	add	r3, r3, #44	; 0x2c
   204ac:	ldr	lr, [r3]
   204b0:	cmp	lr, #1
   204b4:	mov	r5, r3
   204b8:	beq	206dc <crc32@@Base+0x6f38>
   204bc:	add	r1, r1, #1
   204c0:	cmp	r1, r4
   204c4:	bne	204a8 <crc32@@Base+0x6d04>
   204c8:	add	r1, ip, #44	; 0x2c
   204cc:	mov	lr, #44	; 0x2c
   204d0:	mov	ip, r0
   204d4:	mov	r5, #0
   204d8:	mla	lr, lr, r4, r1
   204dc:	mov	r3, r1
   204e0:	b	204e8 <crc32@@Base+0x6d44>
   204e4:	ldr	ip, [r3, #-44]	; 0xffffffd4
   204e8:	cmp	ip, #11
   204ec:	add	r3, r3, #44	; 0x2c
   204f0:	addeq	r5, r5, #1
   204f4:	cmp	r3, lr
   204f8:	bne	204e4 <crc32@@Base+0x6d40>
   204fc:	cmp	r5, #0
   20500:	mov	ip, #0
   20504:	movne	fp, #1
   20508:	moveq	fp, ip
   2050c:	movne	r9, #512	; 0x200
   20510:	moveq	r9, #32
   20514:	b	2051c <crc32@@Base+0x6d78>
   20518:	ldr	r0, [r1, #-44]	; 0xffffffd4
   2051c:	cmp	r0, #10
   20520:	add	r1, r1, #44	; 0x2c
   20524:	addeq	ip, ip, #1
   20528:	cmp	r3, r1
   2052c:	bne	20518 <crc32@@Base+0x6d74>
   20530:	cmp	ip, #1
   20534:	bhi	20ac8 <crc32@@Base+0x7324>
   20538:	mov	r1, #1
   2053c:	mov	r0, r9
   20540:	str	r2, [sp, #16]
   20544:	bl	12518 <calloc@plt>
   20548:	ldr	r2, [sp, #16]
   2054c:	subs	r5, r0, #0
   20550:	beq	20b2c <crc32@@Base+0x7388>
   20554:	ldr	r3, [sp, #20]
   20558:	cmp	r4, #0
   2055c:	add	r2, r2, #4
   20560:	str	r9, [r5, #12]
   20564:	sub	r2, r2, r9
   20568:	strb	fp, [r5, #30]
   2056c:	ldr	r1, [r3, #56]	; 0x38
   20570:	ldr	r3, [r3, #60]	; 0x3c
   20574:	str	r2, [r5, #4]
   20578:	ldr	r7, [r7, #4]
   2057c:	str	r1, [r5, #16]
   20580:	str	r3, [r5, #20]
   20584:	ble	20af8 <crc32@@Base+0x7354>
   20588:	ldr	r3, [r7]
   2058c:	cmp	r3, #2
   20590:	beq	208f8 <crc32@@Base+0x7154>
   20594:	mov	r2, r7
   20598:	mov	r1, #0
   2059c:	b	205b4 <crc32@@Base+0x6e10>
   205a0:	add	r2, r2, #44	; 0x2c
   205a4:	ldr	r0, [r2]
   205a8:	cmp	r0, #2
   205ac:	mov	ip, r2
   205b0:	beq	208fc <crc32@@Base+0x7158>
   205b4:	add	r1, r1, #1
   205b8:	cmp	r1, r4
   205bc:	bne	205a0 <crc32@@Base+0x6dfc>
   205c0:	cmp	r3, #7
   205c4:	beq	20908 <crc32@@Base+0x7164>
   205c8:	mov	r2, r7
   205cc:	mov	r1, #0
   205d0:	b	205e8 <crc32@@Base+0x6e44>
   205d4:	add	r2, r2, #44	; 0x2c
   205d8:	ldr	r0, [r2]
   205dc:	cmp	r0, #7
   205e0:	mov	ip, r2
   205e4:	beq	2090c <crc32@@Base+0x7168>
   205e8:	add	r1, r1, #1
   205ec:	cmp	r1, r4
   205f0:	bne	205d4 <crc32@@Base+0x6e30>
   205f4:	cmp	r3, #8
   205f8:	beq	20918 <crc32@@Base+0x7174>
   205fc:	mov	r2, r7
   20600:	mov	r1, #0
   20604:	b	2061c <crc32@@Base+0x6e78>
   20608:	add	r2, r2, #44	; 0x2c
   2060c:	ldr	r0, [r2]
   20610:	cmp	r0, #8
   20614:	mov	ip, r2
   20618:	beq	2091c <crc32@@Base+0x7178>
   2061c:	add	r1, r1, #1
   20620:	cmp	r1, r4
   20624:	bne	20608 <crc32@@Base+0x6e64>
   20628:	mov	r1, #32
   2062c:	mov	r0, r5
   20630:	str	r3, [sp, #16]
   20634:	bl	1f7ac <crc32@@Base+0x6008>
   20638:	cmp	fp, #0
   2063c:	ldr	r3, [sp, #16]
   20640:	strb	r0, [r5, #31]
   20644:	bne	20928 <crc32@@Base+0x7184>
   20648:	add	r3, sp, #32
   2064c:	str	r3, [sp, #16]
   20650:	mov	r0, r7
   20654:	bl	12128 <free@plt>
   20658:	ldr	r3, [r8, #44]	; 0x2c
   2065c:	cmp	r3, #0
   20660:	beq	20684 <crc32@@Base+0x6ee0>
   20664:	ands	r2, r3, #3
   20668:	ldreq	r1, [sp, #8]
   2066c:	bne	20a6c <crc32@@Base+0x72c8>
   20670:	ldr	r0, [r1], #4
   20674:	subs	r3, r3, #4
   20678:	add	r2, r2, r0
   2067c:	bne	20670 <crc32@@Base+0x6ecc>
   20680:	mov	r3, r2
   20684:	ldrd	r0, [sp, #12]
   20688:	mov	r2, #4
   2068c:	str	r3, [sp, #32]
   20690:	bl	12608 <write@plt>
   20694:	cmp	r0, #4
   20698:	bne	20bd4 <crc32@@Base+0x7430>
   2069c:	ldr	r3, [r8, #44]	; 0x2c
   206a0:	mov	r2, r9
   206a4:	ldr	r0, [sp, #8]
   206a8:	mov	r1, r5
   206ac:	add	r3, r3, #4
   206b0:	str	r3, [r8, #44]	; 0x2c
   206b4:	bl	1259c <memcpy@plt>
   206b8:	ldr	r2, [sp, #36]	; 0x24
   206bc:	ldr	r3, [sl]
   206c0:	cmp	r2, r3
   206c4:	bne	20bd0 <crc32@@Base+0x742c>
   206c8:	mov	r0, r5
   206cc:	add	sp, sp, #44	; 0x2c
   206d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206d4:	b	12128 <free@plt>
   206d8:	mov	r5, ip
   206dc:	ldr	fp, [r5, #4]
   206e0:	cmn	fp, #1
   206e4:	blt	20c0c <crc32@@Base+0x7468>
   206e8:	cmp	fp, #0
   206ec:	ble	204c8 <crc32@@Base+0x6d24>
   206f0:	cmp	fp, #1
   206f4:	bne	20c0c <crc32@@Base+0x7468>
   206f8:	add	r3, sp, #40	; 0x28
   206fc:	mov	r4, #0
   20700:	str	r2, [sp, #24]
   20704:	str	r4, [r3, #-8]!
   20708:	mov	r0, r3
   2070c:	str	r3, [sp, #16]
   20710:	bl	1f864 <crc32@@Base+0x60c0>
   20714:	ldr	r2, [sp, #24]
   20718:	subs	r9, r0, #0
   2071c:	beq	20a98 <crc32@@Base+0x72f4>
   20720:	mov	r1, fp
   20724:	str	r2, [sp, #24]
   20728:	bl	12518 <calloc@plt>
   2072c:	ldr	r2, [sp, #24]
   20730:	subs	r5, r0, #0
   20734:	beq	20b50 <crc32@@Base+0x73ac>
   20738:	ldr	ip, [sp, #20]
   2073c:	add	r2, r2, #4
   20740:	ldr	r3, [r7]
   20744:	sub	r2, r2, r9
   20748:	ldr	r1, [sp, #32]
   2074c:	ldr	r0, [ip, #60]	; 0x3c
   20750:	cmp	r3, #0
   20754:	str	r2, [r5, #4]
   20758:	ldr	r2, [ip, #56]	; 0x38
   2075c:	strb	r1, [r5, #30]
   20760:	add	r1, r5, #32
   20764:	strh	r9, [r5, #10]
   20768:	str	r2, [sp, #28]
   2076c:	sub	r2, r2, #64	; 0x40
   20770:	str	r9, [r5, #12]
   20774:	str	r2, [r5, #16]
   20778:	lsr	r2, r9, #16
   2077c:	strb	fp, [r5, #8]
   20780:	str	r0, [r5, #20]
   20784:	str	r1, [sp, #24]
   20788:	strb	r2, [r5, #9]
   2078c:	ble	208c8 <crc32@@Base+0x7124>
   20790:	ldr	r1, [r7, #4]
   20794:	ldr	fp, [r1]
   20798:	cmp	fp, #2
   2079c:	beq	2098c <crc32@@Base+0x71e8>
   207a0:	mov	r2, r1
   207a4:	b	207bc <crc32@@Base+0x7018>
   207a8:	add	r2, r2, #44	; 0x2c
   207ac:	ldr	r0, [r2]
   207b0:	cmp	r0, #2
   207b4:	mov	ip, r2
   207b8:	beq	20990 <crc32@@Base+0x71ec>
   207bc:	add	r4, r4, #1
   207c0:	cmp	r4, r3
   207c4:	bne	207a8 <crc32@@Base+0x7004>
   207c8:	cmp	fp, #5
   207cc:	beq	209c4 <crc32@@Base+0x7220>
   207d0:	mov	r2, r1
   207d4:	mov	r0, #0
   207d8:	b	207f0 <crc32@@Base+0x704c>
   207dc:	add	r2, r2, #44	; 0x2c
   207e0:	ldr	ip, [r2]
   207e4:	cmp	ip, #5
   207e8:	mov	lr, r2
   207ec:	beq	209c8 <crc32@@Base+0x7224>
   207f0:	add	r0, r0, #1
   207f4:	cmp	r0, r3
   207f8:	bne	207dc <crc32@@Base+0x7038>
   207fc:	cmp	fp, #6
   20800:	beq	209d4 <crc32@@Base+0x7230>
   20804:	mov	r2, r1
   20808:	mov	r0, #0
   2080c:	b	20824 <crc32@@Base+0x7080>
   20810:	add	r2, r2, #44	; 0x2c
   20814:	ldr	ip, [r2]
   20818:	cmp	ip, #6
   2081c:	mov	lr, r2
   20820:	beq	209d8 <crc32@@Base+0x7234>
   20824:	add	r0, r0, #1
   20828:	cmp	r0, r3
   2082c:	bne	20810 <crc32@@Base+0x706c>
   20830:	cmp	fp, #12
   20834:	beq	209e4 <crc32@@Base+0x7240>
   20838:	mov	r2, r1
   2083c:	mov	r0, #0
   20840:	b	20858 <crc32@@Base+0x70b4>
   20844:	add	r2, r2, #44	; 0x2c
   20848:	ldr	ip, [r2]
   2084c:	cmp	ip, #12
   20850:	mov	lr, r2
   20854:	beq	209e8 <crc32@@Base+0x7244>
   20858:	add	r0, r0, #1
   2085c:	cmp	r0, r3
   20860:	bne	20844 <crc32@@Base+0x70a0>
   20864:	cmp	fp, #13
   20868:	beq	20a2c <crc32@@Base+0x7288>
   2086c:	mov	r2, r1
   20870:	mov	r0, #0
   20874:	b	2088c <crc32@@Base+0x70e8>
   20878:	add	r2, r2, #44	; 0x2c
   2087c:	ldr	ip, [r2]
   20880:	cmp	ip, #13
   20884:	mov	lr, r2
   20888:	beq	20a30 <crc32@@Base+0x728c>
   2088c:	add	r0, r0, #1
   20890:	cmp	r0, r3
   20894:	bne	20878 <crc32@@Base+0x70d4>
   20898:	cmp	fp, #9
   2089c:	beq	2099c <crc32@@Base+0x71f8>
   208a0:	mov	r2, r1
   208a4:	b	208bc <crc32@@Base+0x7118>
   208a8:	add	r2, r2, #44	; 0x2c
   208ac:	ldr	r0, [r2]
   208b0:	cmp	r0, #9
   208b4:	mov	r1, r2
   208b8:	beq	2099c <crc32@@Base+0x71f8>
   208bc:	add	r6, r6, #1
   208c0:	cmp	r6, r3
   208c4:	bne	208a8 <crc32@@Base+0x7104>
   208c8:	mov	r3, #1
   208cc:	ldr	r0, [sp, #24]
   208d0:	strb	r3, [r5, #30]
   208d4:	bl	20200 <crc32@@Base+0x6a5c>
   208d8:	cmp	r0, #0
   208dc:	bne	20a98 <crc32@@Base+0x72f4>
   208e0:	mov	r1, r9
   208e4:	mov	r0, r5
   208e8:	bl	1f7ac <crc32@@Base+0x6008>
   208ec:	ldr	r7, [r7, #4]
   208f0:	strb	r0, [r5, #31]
   208f4:	b	20650 <crc32@@Base+0x6eac>
   208f8:	mov	ip, r7
   208fc:	ldr	r2, [ip, #4]
   20900:	strb	r2, [r5]
   20904:	b	205c0 <crc32@@Base+0x6e1c>
   20908:	mov	ip, r7
   2090c:	ldr	r2, [ip, #4]
   20910:	strb	r2, [r5, #1]
   20914:	b	205f4 <crc32@@Base+0x6e50>
   20918:	mov	ip, r7
   2091c:	ldr	r2, [ip, #4]
   20920:	strh	r2, [r5, #2]
   20924:	b	20628 <crc32@@Base+0x6e84>
   20928:	sub	r2, r7, #44	; 0x2c
   2092c:	mov	r1, #44	; 0x2c
   20930:	mov	r0, #64	; 0x40
   20934:	str	r0, [r5, #32]
   20938:	mla	r4, r1, r4, r2
   2093c:	add	r0, r5, #32
   20940:	mov	r2, r7
   20944:	b	2094c <crc32@@Base+0x71a8>
   20948:	ldr	r3, [r2, #44]!	; 0x2c
   2094c:	cmp	r3, #11
   20950:	bne	2096c <crc32@@Base+0x71c8>
   20954:	ldr	ip, [r2, #4]
   20958:	add	r3, r5, r6, lsl #3
   2095c:	ldr	r1, [r2, #8]
   20960:	add	r6, r6, #1
   20964:	str	ip, [r3, #64]	; 0x40
   20968:	str	r1, [r3, #68]	; 0x44
   2096c:	cmp	r2, r4
   20970:	bne	20948 <crc32@@Base+0x71a4>
   20974:	mov	r1, #480	; 0x1e0
   20978:	bl	1f7ac <crc32@@Base+0x6008>
   2097c:	add	r3, sp, #32
   20980:	str	r3, [sp, #16]
   20984:	strb	r0, [r5, #511]	; 0x1ff
   20988:	b	20650 <crc32@@Base+0x6eac>
   2098c:	mov	ip, r1
   20990:	ldr	r2, [ip, #4]
   20994:	strb	r2, [r5]
   20998:	b	207c8 <crc32@@Base+0x7024>
   2099c:	ldr	r0, [r1, #4]
   209a0:	mov	r1, #47	; 0x2f
   209a4:	bl	126ec <strrchr@plt>
   209a8:	movw	r1, #42916	; 0xa7a4
   209ac:	movt	r1, #3
   209b0:	bl	1265c <strcmp@plt>
   209b4:	cmp	r0, #0
   209b8:	ldreq	r3, [sp, #28]
   209bc:	streq	r3, [r5, #16]
   209c0:	b	208c8 <crc32@@Base+0x7124>
   209c4:	mov	lr, r1
   209c8:	ldrh	r2, [lr, #6]
   209cc:	strb	r2, [r5, #25]
   209d0:	b	207fc <crc32@@Base+0x7058>
   209d4:	mov	lr, r1
   209d8:	ldr	r2, [lr, #4]
   209dc:	strb	r2, [r5, #26]
   209e0:	b	20830 <crc32@@Base+0x708c>
   209e4:	mov	lr, r1
   209e8:	ldr	r2, [lr, #4]
   209ec:	cmp	r2, #19200	; 0x4b00
   209f0:	beq	20b24 <crc32@@Base+0x7380>
   209f4:	bls	20a44 <crc32@@Base+0x72a0>
   209f8:	cmp	r2, #57600	; 0xe100
   209fc:	moveq	r2, #6
   20a00:	beq	20a24 <crc32@@Base+0x7280>
   20a04:	mov	r0, #49664	; 0xc200
   20a08:	movt	r0, #1
   20a0c:	cmp	r2, r0
   20a10:	moveq	r2, #7
   20a14:	beq	20a24 <crc32@@Base+0x7280>
   20a18:	cmp	r2, #38400	; 0x9600
   20a1c:	beq	20b1c <crc32@@Base+0x7378>
   20a20:	mov	r2, #0
   20a24:	strb	r2, [r5, #24]
   20a28:	b	20864 <crc32@@Base+0x70c0>
   20a2c:	mov	lr, r1
   20a30:	ldr	r2, [lr, #4]
   20a34:	adds	r2, r2, #0
   20a38:	movne	r2, #1
   20a3c:	strb	r2, [r5, #1]
   20a40:	b	20898 <crc32@@Base+0x70f4>
   20a44:	cmp	r2, #4800	; 0x12c0
   20a48:	moveq	r2, #2
   20a4c:	beq	20a24 <crc32@@Base+0x7280>
   20a50:	cmp	r2, #9600	; 0x2580
   20a54:	moveq	r2, #3
   20a58:	beq	20a24 <crc32@@Base+0x7280>
   20a5c:	cmp	r2, #2400	; 0x960
   20a60:	bne	20a20 <crc32@@Base+0x727c>
   20a64:	mov	r2, #1
   20a68:	b	20a24 <crc32@@Base+0x7280>
   20a6c:	movw	r2, #65044	; 0xfe14
   20a70:	movt	r2, #4
   20a74:	mov	r1, #4
   20a78:	ldr	r0, [r2]
   20a7c:	movw	r2, #42836	; 0xa754
   20a80:	str	r1, [sp]
   20a84:	movt	r2, #3
   20a88:	mov	r1, #1
   20a8c:	bl	122b4 <__fprintf_chk@plt>
   20a90:	mov	r3, #0
   20a94:	b	20684 <crc32@@Base+0x6ee0>
   20a98:	movw	r4, #65044	; 0xfe14
   20a9c:	movt	r4, #4
   20aa0:	ldr	r3, [r4]
   20aa4:	mov	r2, #23
   20aa8:	mov	r1, #1
   20aac:	movw	r0, #42812	; 0xa73c
   20ab0:	movt	r0, #3
   20ab4:	bl	12578 <fwrite@plt>
   20ab8:	ldr	r0, [r7, #4]
   20abc:	bl	12128 <free@plt>
   20ac0:	mov	r0, #1
   20ac4:	bl	121f4 <exit@plt>
   20ac8:	movw	r4, #65044	; 0xfe14
   20acc:	movt	r4, #4
   20ad0:	movw	r0, #42048	; 0xa440
   20ad4:	mov	r2, #36	; 0x24
   20ad8:	ldr	r3, [r4]
   20adc:	mov	r1, #1
   20ae0:	movt	r0, #3
   20ae4:	bl	12578 <fwrite@plt>
   20ae8:	b	20aa0 <crc32@@Base+0x72fc>
   20aec:	mov	fp, r6
   20af0:	mov	r9, #32
   20af4:	b	20538 <crc32@@Base+0x6d94>
   20af8:	mov	r1, #32
   20afc:	bl	1f7ac <crc32@@Base+0x6008>
   20b00:	cmp	fp, #0
   20b04:	strb	r0, [r5, #31]
   20b08:	beq	20648 <crc32@@Base+0x6ea4>
   20b0c:	mov	r3, #64	; 0x40
   20b10:	add	r0, r5, #32
   20b14:	str	r3, [r5, #32]
   20b18:	b	20974 <crc32@@Base+0x71d0>
   20b1c:	mov	r2, #5
   20b20:	b	20a24 <crc32@@Base+0x7280>
   20b24:	mov	r2, #4
   20b28:	b	20a24 <crc32@@Base+0x7280>
   20b2c:	movw	r4, #65044	; 0xfe14
   20b30:	movt	r4, #4
   20b34:	movw	r0, #42776	; 0xa718
   20b38:	mov	r2, #33	; 0x21
   20b3c:	ldr	r3, [r4]
   20b40:	mov	r1, #1
   20b44:	movt	r0, #3
   20b48:	bl	12578 <fwrite@plt>
   20b4c:	b	20aa0 <crc32@@Base+0x72fc>
   20b50:	movw	r4, #65044	; 0xfe14
   20b54:	movt	r4, #4
   20b58:	mov	r1, fp
   20b5c:	movw	r0, #42776	; 0xa718
   20b60:	ldr	r3, [r4]
   20b64:	mov	r2, #33	; 0x21
   20b68:	movt	r0, #3
   20b6c:	bl	12578 <fwrite@plt>
   20b70:	b	20aa0 <crc32@@Base+0x72fc>
   20b74:	movw	r3, #65044	; 0xfe14
   20b78:	movt	r3, #4
   20b7c:	mov	r2, #23
   20b80:	mov	r1, #1
   20b84:	ldr	r3, [r3]
   20b88:	movw	r0, #42640	; 0xa690
   20b8c:	movt	r0, #3
   20b90:	bl	12578 <fwrite@plt>
   20b94:	mov	r0, r4
   20b98:	bl	125fc <fclose@plt>
   20b9c:	mov	r0, #1
   20ba0:	bl	121f4 <exit@plt>
   20ba4:	ldr	r3, [sp, #20]
   20ba8:	movw	r1, #65044	; 0xfe14
   20bac:	movt	r1, #4
   20bb0:	movw	r2, #42608	; 0xa670
   20bb4:	movt	r2, #3
   20bb8:	ldr	r0, [r1]
   20bbc:	mov	r1, #1
   20bc0:	ldr	r3, [r3, #64]	; 0x40
   20bc4:	bl	122b4 <__fprintf_chk@plt>
   20bc8:	mov	r0, #1
   20bcc:	bl	121f4 <exit@plt>
   20bd0:	bl	12494 <__stack_chk_fail@plt>
   20bd4:	ldr	r3, [sp, #20]
   20bd8:	movw	r1, #65044	; 0xfe14
   20bdc:	movt	r1, #4
   20be0:	movw	r2, #42876	; 0xa77c
   20be4:	movt	r2, #3
   20be8:	ldr	ip, [r3, #76]	; 0x4c
   20bec:	str	r0, [sp]
   20bf0:	ldr	r0, [r1]
   20bf4:	mov	r1, #1
   20bf8:	ldr	r3, [r3, #80]	; 0x50
   20bfc:	str	ip, [sp, #4]
   20c00:	bl	122b4 <__fprintf_chk@plt>
   20c04:	mov	r0, #1
   20c08:	bl	121f4 <exit@plt>
   20c0c:	movw	r1, #65044	; 0xfe14
   20c10:	movt	r1, #4
   20c14:	movw	r2, #42664	; 0xa6a8
   20c18:	mov	r3, fp
   20c1c:	ldr	r0, [r1]
   20c20:	movt	r2, #3
   20c24:	mov	r1, #1
   20c28:	bl	122b4 <__fprintf_chk@plt>
   20c2c:	ldr	r0, [r7, #4]
   20c30:	bl	12128 <free@plt>
   20c34:	mov	r0, #1
   20c38:	bl	121f4 <exit@plt>
   20c3c:	push	{r4, r5, r6, lr}
   20c40:	movw	r1, #42364	; 0xa57c
   20c44:	ldr	r5, [pc, #64]	; 20c8c <crc32@@Base+0x74e8>
   20c48:	movt	r1, #3
   20c4c:	mov	r6, r0
   20c50:	mov	r4, #1
   20c54:	b	20c68 <crc32@@Base+0x74c4>
   20c58:	add	r4, r4, #1
   20c5c:	cmp	r4, #24
   20c60:	beq	20c80 <crc32@@Base+0x74dc>
   20c64:	ldr	r1, [r5, #4]!
   20c68:	mov	r0, r6
   20c6c:	bl	1265c <strcmp@plt>
   20c70:	cmp	r0, #0
   20c74:	bne	20c58 <crc32@@Base+0x74b4>
   20c78:	mov	r0, r4
   20c7c:	pop	{r4, r5, r6, pc}
   20c80:	mov	r4, #0
   20c84:	mov	r0, r4
   20c88:	pop	{r4, r5, r6, pc}
   20c8c:	andeq	sl, r3, ip, lsl r3
   20c90:	ldr	r2, [r0, #12]
   20c94:	ldr	r3, [r0, #8]
   20c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c9c:	eor	r6, r3, r2
   20ca0:	ldr	r3, [r0, #4]
   20ca4:	movw	lr, #42104	; 0xa478
   20ca8:	ldr	sl, [r1]
   20cac:	movt	lr, #55146	; 0xd76a
   20cb0:	and	r6, r6, r3
   20cb4:	ldr	r3, [r0]
   20cb8:	add	lr, sl, lr
   20cbc:	eor	r6, r6, r2
   20cc0:	ldmib	r0, {r2, ip}
   20cc4:	add	lr, lr, r3
   20cc8:	ldr	r3, [r1, #4]
   20ccc:	add	r6, r6, lr
   20cd0:	eor	r4, r2, ip
   20cd4:	movw	r5, #46934	; 0xb756
   20cd8:	ldr	ip, [r0, #12]
   20cdc:	movt	r5, #59591	; 0xe8c7
   20ce0:	add	r5, r3, r5
   20ce4:	add	r6, r2, r6, ror #25
   20ce8:	add	r5, r5, ip
   20cec:	ldr	ip, [r0, #8]
   20cf0:	and	r4, r4, r6
   20cf4:	ldr	lr, [r1, #8]
   20cf8:	eor	r4, r4, ip
   20cfc:	movw	ip, #28891	; 0x70db
   20d00:	add	r4, r4, r5
   20d04:	movt	ip, #9248	; 0x2420
   20d08:	add	ip, lr, ip
   20d0c:	eor	r2, r2, r6
   20d10:	add	r5, r6, r4, ror #20
   20d14:	ldr	r4, [r0, #8]
   20d18:	and	r2, r2, r5
   20d1c:	sub	sp, sp, #52	; 0x34
   20d20:	add	ip, ip, r4
   20d24:	ldr	r4, [r0, #4]
   20d28:	ldr	r8, [r1, #12]
   20d2c:	eor	r2, r2, r4
   20d30:	str	r3, [sp, #4]
   20d34:	add	r2, r2, ip
   20d38:	eor	r3, r6, r5
   20d3c:	movw	ip, #52974	; 0xceee
   20d40:	movt	ip, #49597	; 0xc1bd
   20d44:	add	r7, r5, r2, ror #15
   20d48:	add	ip, r8, ip
   20d4c:	and	r3, r3, r7
   20d50:	add	ip, ip, r4
   20d54:	eor	r3, r3, r6
   20d58:	ldr	r9, [r1, #16]
   20d5c:	add	r3, r3, ip
   20d60:	str	lr, [sp, #8]
   20d64:	movw	lr, #4015	; 0xfaf
   20d68:	movt	lr, #62844	; 0xf57c
   20d6c:	add	r3, r7, r3, ror #10
   20d70:	eor	r2, r5, r7
   20d74:	add	lr, r9, lr
   20d78:	ldr	fp, [r1, #20]
   20d7c:	add	r6, lr, r6
   20d80:	and	lr, r2, r3
   20d84:	eor	lr, lr, r5
   20d88:	eor	ip, r7, r3
   20d8c:	add	lr, lr, r6
   20d90:	movw	r4, #50730	; 0xc62a
   20d94:	movt	r4, #18311	; 0x4787
   20d98:	ldr	r6, [r1, #24]
   20d9c:	add	lr, r3, lr, ror #25
   20da0:	add	r4, fp, r4
   20da4:	and	r2, ip, lr
   20da8:	add	r4, r4, r5
   20dac:	eor	r2, r2, r7
   20db0:	str	r8, [sp, #12]
   20db4:	add	r2, r2, r4
   20db8:	movw	r8, #17939	; 0x4613
   20dbc:	movt	r8, #43056	; 0xa830
   20dc0:	eor	ip, r3, lr
   20dc4:	add	r4, lr, r2, ror #20
   20dc8:	add	r8, r6, r8
   20dcc:	add	r2, r8, r7
   20dd0:	and	r8, ip, r4
   20dd4:	eor	r8, r8, r3
   20dd8:	str	fp, [sp, #20]
   20ddc:	add	r8, r8, r2
   20de0:	ldr	fp, [r1, #28]
   20de4:	movw	ip, #38145	; 0x9501
   20de8:	movt	ip, #64838	; 0xfd46
   20dec:	add	r8, r4, r8, ror #15
   20df0:	eor	r5, lr, r4
   20df4:	add	ip, fp, ip
   20df8:	ldr	r7, [r1, #32]
   20dfc:	add	r3, ip, r3
   20e00:	and	ip, r5, r8
   20e04:	eor	ip, ip, lr
   20e08:	str	r6, [sp, #24]
   20e0c:	add	ip, ip, r3
   20e10:	movw	r6, #39128	; 0x98d8
   20e14:	movt	r6, #27008	; 0x6980
   20e18:	eor	r2, r4, r8
   20e1c:	add	ip, r8, ip, ror #10
   20e20:	add	r6, r7, r6
   20e24:	add	lr, r6, lr
   20e28:	and	r6, r2, ip
   20e2c:	eor	r6, r6, r4
   20e30:	ldr	r2, [r1, #36]	; 0x24
   20e34:	add	r6, r6, lr
   20e38:	movw	r5, #63407	; 0xf7af
   20e3c:	movt	r5, #35652	; 0x8b44
   20e40:	eor	r3, r8, ip
   20e44:	add	r6, ip, r6, ror #25
   20e48:	add	r5, r2, r5
   20e4c:	str	r2, [sp, #32]
   20e50:	add	r2, r5, r4
   20e54:	and	r5, r3, r6
   20e58:	str	r7, [sp, #28]
   20e5c:	eor	r5, r5, r8
   20e60:	ldr	r7, [r1, #40]	; 0x28
   20e64:	add	r5, r5, r2
   20e68:	eor	r3, ip, r6
   20e6c:	sub	r2, r7, #41984	; 0xa400
   20e70:	ldr	r4, [r1, #44]	; 0x2c
   20e74:	add	r5, r6, r5, ror #20
   20e78:	sub	r2, r2, #79	; 0x4f
   20e7c:	add	r8, r2, r8
   20e80:	and	r2, r3, r5
   20e84:	eor	r2, r2, ip
   20e88:	movw	r3, #55230	; 0xd7be
   20e8c:	add	r2, r2, r8
   20e90:	movt	r3, #35164	; 0x895c
   20e94:	eor	lr, r6, r5
   20e98:	add	r3, r4, r3
   20e9c:	add	r2, r5, r2, ror #15
   20ea0:	add	ip, r3, ip
   20ea4:	and	r3, lr, r2
   20ea8:	str	sl, [sp, #44]	; 0x2c
   20eac:	eor	r3, r3, r6
   20eb0:	str	r9, [sp, #16]
   20eb4:	add	r3, r3, ip
   20eb8:	str	r4, [sp, #36]	; 0x24
   20ebc:	ldr	r8, [r1, #48]	; 0x30
   20ec0:	movw	lr, #4386	; 0x1122
   20ec4:	movt	lr, #27536	; 0x6b90
   20ec8:	add	r3, r2, r3, ror #10
   20ecc:	eor	r4, r5, r2
   20ed0:	add	lr, r8, lr
   20ed4:	add	r6, lr, r6
   20ed8:	and	lr, r4, r3
   20edc:	eor	lr, lr, r5
   20ee0:	ldr	r9, [r1, #52]	; 0x34
   20ee4:	add	lr, lr, r6
   20ee8:	movw	r4, #29075	; 0x7193
   20eec:	movt	r4, #64920	; 0xfd98
   20ef0:	eor	ip, r2, r3
   20ef4:	add	lr, r3, lr, ror #25
   20ef8:	add	r4, r9, r4
   20efc:	add	r5, r4, r5
   20f00:	and	r4, ip, lr
   20f04:	eor	r4, r4, r2
   20f08:	str	r9, [sp, #40]	; 0x28
   20f0c:	add	r4, r4, r5
   20f10:	ldr	r9, [r1, #56]	; 0x38
   20f14:	eor	r5, r3, lr
   20f18:	movw	ip, #17294	; 0x438e
   20f1c:	add	r4, lr, r4, ror #20
   20f20:	movt	ip, #42617	; 0xa679
   20f24:	ldr	r6, [r1, #60]	; 0x3c
   20f28:	add	ip, r9, ip
   20f2c:	and	r1, r5, r4
   20f30:	add	r2, ip, r2
   20f34:	eor	r1, r1, r3
   20f38:	movw	ip, #2081	; 0x821
   20f3c:	add	r1, r1, r2
   20f40:	movt	ip, #18868	; 0x49b4
   20f44:	eor	r5, lr, r4
   20f48:	add	ip, r6, ip
   20f4c:	add	r1, r4, r1, ror #15
   20f50:	add	r3, ip, r3
   20f54:	and	ip, r5, r1
   20f58:	ldr	r2, [sp, #4]
   20f5c:	eor	ip, ip, lr
   20f60:	movw	sl, #9570	; 0x2562
   20f64:	add	ip, ip, r3
   20f68:	movt	sl, #63006	; 0xf61e
   20f6c:	ldr	r5, [sp, #24]
   20f70:	add	sl, r2, sl
   20f74:	add	ip, r1, ip, ror #10
   20f78:	add	lr, sl, lr
   20f7c:	movw	sl, #45888	; 0xb340
   20f80:	movt	sl, #49216	; 0xc040
   20f84:	eor	r3, r1, ip
   20f88:	add	sl, r5, sl
   20f8c:	add	sl, sl, r4
   20f90:	and	r4, r4, r3
   20f94:	eor	r4, r4, r1
   20f98:	ldr	r5, [sp, #44]	; 0x2c
   20f9c:	add	lr, r4, lr
   20fa0:	ldr	r4, [sp, #36]	; 0x24
   20fa4:	movw	r3, #23121	; 0x5a51
   20fa8:	movt	r3, #9822	; 0x265e
   20fac:	add	lr, ip, lr, ror #27
   20fb0:	add	r3, r4, r3
   20fb4:	eor	r2, ip, lr
   20fb8:	movw	r4, #51114	; 0xc7aa
   20fbc:	and	r2, r2, r1
   20fc0:	movt	r4, #59830	; 0xe9b6
   20fc4:	eor	r2, r2, ip
   20fc8:	add	r4, r5, r4
   20fcc:	add	r2, r2, sl
   20fd0:	add	r5, r4, ip
   20fd4:	ldr	r4, [sp, #20]
   20fd8:	add	r3, r3, r1
   20fdc:	add	r2, lr, r2, ror #23
   20fe0:	movw	r1, #4189	; 0x105d
   20fe4:	movt	r1, #54831	; 0xd62f
   20fe8:	movw	sl, #5203	; 0x1453
   20fec:	add	r1, r4, r1
   20ff0:	eor	r4, lr, r2
   20ff4:	and	ip, ip, r4
   20ff8:	movt	sl, #580	; 0x244
   20ffc:	eor	ip, ip, lr
   21000:	add	sl, r7, sl
   21004:	add	r3, ip, r3
   21008:	add	sl, sl, r2
   2100c:	add	r1, r1, lr
   21010:	add	r3, r2, r3, ror #18
   21014:	eor	r4, r2, r3
   21018:	and	r4, r4, lr
   2101c:	movw	lr, #59009	; 0xe681
   21020:	eor	r4, r4, r2
   21024:	movt	lr, #55457	; 0xd8a1
   21028:	add	r4, r4, r5
   2102c:	movw	r5, #64456	; 0xfbc8
   21030:	movt	r5, #59347	; 0xe7d3
   21034:	add	lr, r6, lr
   21038:	add	r4, r3, r4, ror #12
   2103c:	add	lr, lr, r3
   21040:	eor	ip, r3, r4
   21044:	and	r2, r2, ip
   21048:	ldr	ip, [sp, #16]
   2104c:	eor	r2, r2, r3
   21050:	add	r1, r2, r1
   21054:	add	r5, ip, r5
   21058:	ldr	r2, [sp, #32]
   2105c:	add	r5, r5, r4
   21060:	add	r1, r4, r1, ror #27
   21064:	eor	ip, r4, r1
   21068:	and	ip, ip, r3
   2106c:	movw	r3, #52710	; 0xcde6
   21070:	eor	ip, ip, r4
   21074:	movt	r3, #8673	; 0x21e1
   21078:	add	ip, ip, sl
   2107c:	add	r3, r2, r3
   21080:	add	r3, r3, r1
   21084:	movw	sl, #2006	; 0x7d6
   21088:	add	ip, r1, ip, ror #23
   2108c:	movt	sl, #49975	; 0xc337
   21090:	eor	r2, r1, ip
   21094:	add	sl, r9, sl
   21098:	and	r4, r4, r2
   2109c:	add	sl, sl, ip
   210a0:	eor	r4, r4, r1
   210a4:	add	lr, r4, lr
   210a8:	ldr	r4, [sp, #12]
   210ac:	add	lr, ip, lr, ror #18
   210b0:	eor	r2, ip, lr
   210b4:	and	r2, r2, r1
   210b8:	movw	r1, #3463	; 0xd87
   210bc:	eor	r2, r2, ip
   210c0:	movt	r1, #62677	; 0xf4d5
   210c4:	add	r2, r2, r5
   210c8:	add	r1, r4, r1
   210cc:	movw	r5, #5357	; 0x14ed
   210d0:	movt	r5, #17754	; 0x455a
   210d4:	add	r2, lr, r2, ror #12
   210d8:	add	r1, r1, lr
   210dc:	eor	r4, lr, r2
   210e0:	and	ip, ip, r4
   210e4:	eor	ip, ip, lr
   210e8:	add	r3, ip, r3
   210ec:	ldr	ip, [sp, #28]
   210f0:	add	r3, r2, r3, ror #27
   210f4:	add	r5, ip, r5
   210f8:	eor	r4, r2, r3
   210fc:	add	r5, r5, r2
   21100:	and	r4, r4, lr
   21104:	movw	lr, #59653	; 0xe905
   21108:	eor	r4, r4, r2
   2110c:	movt	lr, #43491	; 0xa9e3
   21110:	add	r4, r4, sl
   21114:	ldr	sl, [sp, #40]	; 0x28
   21118:	add	r4, r3, r4, ror #23
   2111c:	add	lr, sl, lr
   21120:	eor	ip, r3, r4
   21124:	movw	sl, #41976	; 0xa3f8
   21128:	and	r2, r2, ip
   2112c:	ldr	ip, [sp, #8]
   21130:	eor	r2, r2, r3
   21134:	movt	sl, #64751	; 0xfcef
   21138:	add	r1, r2, r1
   2113c:	add	sl, ip, sl
   21140:	movw	r2, #729	; 0x2d9
   21144:	movt	r2, #26479	; 0x676f
   21148:	add	r1, r4, r1, ror #18
   2114c:	add	r2, fp, r2
   21150:	eor	ip, r4, r1
   21154:	add	lr, lr, r3
   21158:	and	ip, ip, r3
   2115c:	add	r3, r2, r1
   21160:	eor	ip, ip, r4
   21164:	add	sl, sl, r4
   21168:	add	ip, ip, r5
   2116c:	movw	r5, #19594	; 0x4c8a
   21170:	movt	r5, #36138	; 0x8d2a
   21174:	add	ip, r1, ip, ror #12
   21178:	add	r5, r8, r5
   2117c:	eor	r2, r1, ip
   21180:	add	r5, r5, ip
   21184:	and	r4, r4, r2
   21188:	eor	r4, r4, r1
   2118c:	add	lr, r4, lr
   21190:	movw	r4, #14658	; 0x3942
   21194:	movt	r4, #65530	; 0xfffa
   21198:	add	lr, ip, lr, ror #27
   2119c:	eor	r2, ip, lr
   211a0:	and	r1, r1, r2
   211a4:	eor	r1, r1, ip
   211a8:	add	sl, r1, sl
   211ac:	ldr	r1, [sp, #20]
   211b0:	add	sl, lr, sl, ror #23
   211b4:	add	r4, r1, r4
   211b8:	eor	r2, lr, sl
   211bc:	ldr	r1, [sp, #28]
   211c0:	and	r2, r2, ip
   211c4:	movw	ip, #63105	; 0xf681
   211c8:	eor	r2, r2, lr
   211cc:	movt	ip, #34673	; 0x8771
   211d0:	add	r2, r2, r3
   211d4:	add	ip, r1, ip
   211d8:	add	r4, r4, lr
   211dc:	add	ip, ip, sl
   211e0:	add	r2, sl, r2, ror #18
   211e4:	eor	r1, sl, r2
   211e8:	and	r3, r1, lr
   211ec:	movw	lr, #24866	; 0x6122
   211f0:	eor	r3, r3, sl
   211f4:	ldr	sl, [sp, #36]	; 0x24
   211f8:	add	r3, r3, r5
   211fc:	movt	lr, #28061	; 0x6d9d
   21200:	add	lr, sl, lr
   21204:	movw	r5, #14348	; 0x380c
   21208:	add	r3, r2, r3, ror #12
   2120c:	add	lr, lr, r2
   21210:	eor	r1, r1, r3
   21214:	eor	r2, r2, r3
   21218:	add	r1, r1, r4
   2121c:	movt	r5, #64997	; 0xfde5
   21220:	add	r5, r9, r5
   21224:	movw	r4, #59972	; 0xea44
   21228:	add	r1, r3, r1, ror #28
   2122c:	add	r5, r5, r3
   21230:	eor	r2, r2, r1
   21234:	eor	r3, r3, r1
   21238:	add	r2, r2, ip
   2123c:	ldr	ip, [sp, #4]
   21240:	movt	r4, #42174	; 0xa4be
   21244:	ldr	sl, [sp, #44]	; 0x2c
   21248:	add	r2, r1, r2, ror #21
   2124c:	add	r4, ip, r4
   21250:	eor	r3, r3, r2
   21254:	add	r4, r4, r1
   21258:	add	r3, r3, lr
   2125c:	eor	r1, r1, r2
   21260:	ldr	lr, [sp, #16]
   21264:	movw	ip, #53161	; 0xcfa9
   21268:	add	r3, r2, r3, ror #16
   2126c:	movt	ip, #19422	; 0x4bde
   21270:	eor	r1, r1, r3
   21274:	add	ip, lr, ip
   21278:	add	r1, r1, r5
   2127c:	add	ip, ip, r2
   21280:	eor	r2, r2, r3
   21284:	movw	lr, #19296	; 0x4b60
   21288:	add	r1, r3, r1, ror #9
   2128c:	movt	lr, #63163	; 0xf6bb
   21290:	eor	r2, r2, r1
   21294:	add	lr, fp, lr
   21298:	add	r2, r2, r4
   2129c:	add	lr, lr, r3
   212a0:	eor	r3, r3, r1
   212a4:	movw	r5, #48240	; 0xbc70
   212a8:	add	r2, r1, r2, ror #28
   212ac:	movt	r5, #48831	; 0xbebf
   212b0:	eor	r3, r3, r2
   212b4:	add	r5, r7, r5
   212b8:	add	r3, r3, ip
   212bc:	add	r5, r5, r1
   212c0:	eor	r1, r1, r2
   212c4:	ldr	ip, [sp, #40]	; 0x28
   212c8:	add	r3, r2, r3, ror #21
   212cc:	movw	r4, #32454	; 0x7ec6
   212d0:	eor	r1, r1, r3
   212d4:	movt	r4, #10395	; 0x289b
   212d8:	add	r1, r1, lr
   212dc:	add	r4, ip, r4
   212e0:	add	r4, r4, r2
   212e4:	eor	r2, r2, r3
   212e8:	add	r1, r3, r1, ror #16
   212ec:	movw	ip, #10234	; 0x27fa
   212f0:	eor	r2, r2, r1
   212f4:	movt	ip, #60065	; 0xeaa1
   212f8:	add	r2, r2, r5
   212fc:	add	ip, sl, ip
   21300:	add	ip, ip, r3
   21304:	eor	r3, r3, r1
   21308:	add	r2, r1, r2, ror #9
   2130c:	ldr	r5, [sp, #12]
   21310:	eor	r3, r3, r2
   21314:	movw	lr, #12421	; 0x3085
   21318:	add	r3, r3, r4
   2131c:	movt	lr, #54511	; 0xd4ef
   21320:	add	lr, r5, lr
   21324:	ldr	r4, [sp, #24]
   21328:	add	r3, r2, r3, ror #28
   2132c:	add	lr, lr, r1
   21330:	eor	r1, r1, r2
   21334:	movw	r5, #7429	; 0x1d05
   21338:	eor	r1, r1, r3
   2133c:	movt	r5, #1160	; 0x488
   21340:	add	r1, r1, ip
   21344:	add	r5, r4, r5
   21348:	add	r5, r5, r2
   2134c:	eor	r2, r2, r3
   21350:	add	r1, r3, r1, ror #21
   21354:	ldr	ip, [sp, #32]
   21358:	eor	r2, r2, r1
   2135c:	movw	r4, #53305	; 0xd039
   21360:	add	r2, r2, lr
   21364:	movt	r4, #55764	; 0xd9d4
   21368:	add	r4, ip, r4
   2136c:	movw	ip, #39397	; 0x99e5
   21370:	add	r2, r1, r2, ror #16
   21374:	add	r4, r4, r3
   21378:	eor	r3, r3, r1
   2137c:	movt	ip, #59099	; 0xe6db
   21380:	eor	r3, r3, r2
   21384:	add	ip, r8, ip
   21388:	add	r3, r3, r5
   2138c:	add	ip, ip, r1
   21390:	eor	r1, r1, r2
   21394:	movw	lr, #31992	; 0x7cf8
   21398:	add	r3, r2, r3, ror #9
   2139c:	movt	lr, #8098	; 0x1fa2
   213a0:	eor	r1, r1, r3
   213a4:	add	lr, r6, lr
   213a8:	add	r1, r1, r4
   213ac:	add	lr, lr, r2
   213b0:	eor	r2, r2, r3
   213b4:	ldr	r4, [sp, #8]
   213b8:	add	r1, r3, r1, ror #28
   213bc:	movw	r5, #22117	; 0x5665
   213c0:	eor	r2, r2, r1
   213c4:	movt	r5, #50348	; 0xc4ac
   213c8:	add	r2, r2, ip
   213cc:	add	r5, r4, r5
   213d0:	add	r5, r5, r3
   213d4:	eor	r3, r3, r1
   213d8:	add	r2, r1, r2, ror #21
   213dc:	movw	r4, #8772	; 0x2244
   213e0:	eor	r3, r3, r2
   213e4:	movt	r4, #62505	; 0xf429
   213e8:	add	r3, r3, lr
   213ec:	add	r4, sl, r4
   213f0:	add	r4, r4, r1
   213f4:	eor	r1, r1, r2
   213f8:	add	r3, r2, r3, ror #16
   213fc:	mvn	ip, r2
   21400:	eor	r1, r1, r3
   21404:	movw	sl, #65431	; 0xff97
   21408:	add	r1, r1, r5
   2140c:	movt	sl, #17194	; 0x432a
   21410:	ldr	r5, [sp, #20]
   21414:	add	sl, fp, sl
   21418:	add	r1, r3, r1, ror #9
   2141c:	add	r2, sl, r2
   21420:	orr	ip, ip, r1
   21424:	movw	sl, #41017	; 0xa039
   21428:	eor	ip, ip, r3
   2142c:	movt	sl, #64659	; 0xfc93
   21430:	add	ip, ip, r4
   21434:	mvn	fp, r3
   21438:	add	sl, r5, sl
   2143c:	movw	lr, #9127	; 0x23a7
   21440:	add	ip, r1, ip, ror #26
   21444:	movt	lr, #43924	; 0xab94
   21448:	orr	fp, fp, ip
   2144c:	add	lr, r9, lr
   21450:	add	sl, sl, r1
   21454:	mvn	r9, r1
   21458:	eor	r1, r1, fp
   2145c:	movw	r5, #22979	; 0x59c3
   21460:	add	r2, r1, r2
   21464:	movt	r5, #25947	; 0x655b
   21468:	add	r5, r8, r5
   2146c:	add	lr, lr, r3
   21470:	add	r2, ip, r2, ror #22
   21474:	add	r5, r5, ip
   21478:	orr	r9, r9, r2
   2147c:	mvn	r3, ip
   21480:	eor	ip, ip, r9
   21484:	ldr	r1, [sp, #12]
   21488:	add	lr, ip, lr
   2148c:	movw	r8, #52370	; 0xcc92
   21490:	movt	r8, #36620	; 0x8f0c
   21494:	mvn	fp, r2
   21498:	add	lr, r2, lr, ror #17
   2149c:	add	r8, r1, r8
   214a0:	orr	r3, r3, lr
   214a4:	add	r8, r8, r2
   214a8:	eor	r2, r2, r3
   214ac:	movw	r4, #62589	; 0xf47d
   214b0:	add	sl, r2, sl
   214b4:	movt	r4, #65519	; 0xffef
   214b8:	add	r4, r7, r4
   214bc:	mvn	r7, lr
   214c0:	add	sl, lr, sl, ror #11
   214c4:	add	r4, r4, lr
   214c8:	orr	fp, fp, sl
   214cc:	ldr	r3, [sp, #4]
   214d0:	eor	lr, lr, fp
   214d4:	ldr	r1, [sp, #28]
   214d8:	add	lr, lr, r5
   214dc:	movw	ip, #24017	; 0x5dd1
   214e0:	movw	r9, #32335	; 0x7e4f
   214e4:	movt	ip, #34180	; 0x8584
   214e8:	add	lr, sl, lr, ror #26
   214ec:	movt	r9, #28584	; 0x6fa8
   214f0:	orr	r7, r7, lr
   214f4:	add	ip, r3, ip
   214f8:	eor	r7, r7, sl
   214fc:	mvn	r3, sl
   21500:	add	r7, r7, r8
   21504:	add	r9, r1, r9
   21508:	add	r9, r9, lr
   2150c:	mvn	r2, lr
   21510:	add	r7, lr, r7, ror #22
   21514:	movw	r1, #59104	; 0xe6e0
   21518:	orr	r3, r3, r7
   2151c:	movt	r1, #65068	; 0xfe2c
   21520:	eor	lr, lr, r3
   21524:	add	r1, r6, r1
   21528:	add	r4, lr, r4
   2152c:	add	ip, ip, sl
   21530:	add	r1, r1, r7
   21534:	mvn	sl, r7
   21538:	add	r4, r7, r4, ror #17
   2153c:	ldr	r5, [sp, #24]
   21540:	orr	r2, r2, r4
   21544:	ldr	r3, [sp, #40]	; 0x28
   21548:	eor	r7, r7, r2
   2154c:	movw	r6, #17172	; 0x4314
   21550:	add	r7, r7, ip
   21554:	movt	r6, #41729	; 0xa301
   21558:	add	r6, r5, r6
   2155c:	movw	r5, #4513	; 0x11a1
   21560:	add	r7, r4, r7, ror #11
   21564:	movt	r5, #19976	; 0x4e08
   21568:	orr	sl, sl, r7
   2156c:	add	r5, r3, r5
   21570:	eor	sl, sl, r4
   21574:	mvn	r3, r4
   21578:	add	sl, sl, r9
   2157c:	add	r5, r5, r7
   21580:	mvn	r8, r7
   21584:	ldr	r2, [sp, #16]
   21588:	add	sl, r7, sl, ror #26
   2158c:	add	r6, r6, r4
   21590:	orr	r3, r3, sl
   21594:	ldr	r4, [sp, #8]
   21598:	eor	r7, r7, r3
   2159c:	movw	fp, #32386	; 0x7e82
   215a0:	add	r1, r7, r1
   215a4:	movt	fp, #63315	; 0xf753
   215a8:	add	fp, r2, fp
   215ac:	movw	r2, #53947	; 0xd2bb
   215b0:	add	r1, sl, r1, ror #22
   215b4:	movt	r2, #10967	; 0x2ad7
   215b8:	orr	r8, r8, r1
   215bc:	add	r2, r4, r2
   215c0:	add	fp, fp, sl
   215c4:	mvn	r4, sl
   215c8:	eor	sl, sl, r8
   215cc:	ldr	r3, [sp, #32]
   215d0:	add	r6, sl, r6
   215d4:	ldr	r9, [sp, #36]	; 0x24
   215d8:	movw	ip, #54161	; 0xd391
   215dc:	movt	ip, #60294	; 0xeb86
   215e0:	add	r6, r1, r6, ror #17
   215e4:	add	ip, r3, ip
   215e8:	orr	r4, r4, r6
   215ec:	mvn	r3, r1
   215f0:	eor	r4, r4, r1
   215f4:	movw	lr, #62005	; 0xf235
   215f8:	add	r5, r4, r5
   215fc:	movt	lr, #48442	; 0xbd3a
   21600:	add	lr, r9, lr
   21604:	add	r2, r2, r6
   21608:	add	r5, r6, r5, ror #11
   2160c:	mvn	r9, r6
   21610:	orr	r3, r3, r5
   21614:	add	lr, lr, r1
   21618:	eor	r6, r6, r3
   2161c:	add	ip, ip, r5
   21620:	add	fp, r6, fp
   21624:	mvn	r7, r5
   21628:	ldr	r3, [r0]
   2162c:	add	fp, r5, fp, ror #26
   21630:	ldr	r1, [r0, #12]
   21634:	orr	r9, r9, fp
   21638:	add	r6, r3, fp
   2163c:	eor	r5, r5, r9
   21640:	mvn	r3, fp
   21644:	add	lr, r5, lr
   21648:	str	r6, [r0]
   2164c:	add	lr, fp, lr, ror #22
   21650:	orr	r7, r7, lr
   21654:	add	r1, r1, lr
   21658:	eor	fp, fp, r7
   2165c:	str	r1, [r0, #12]
   21660:	add	r2, fp, r2
   21664:	add	r2, lr, r2, ror #17
   21668:	orr	r1, r3, r2
   2166c:	ldr	r3, [r0, #4]
   21670:	eor	lr, lr, r1
   21674:	ldr	r1, [r0, #8]
   21678:	add	ip, lr, ip
   2167c:	add	r3, r3, r2
   21680:	add	r2, r1, r2
   21684:	str	r2, [r0, #8]
   21688:	add	lr, r3, ip, ror #11
   2168c:	str	lr, [r0, #4]
   21690:	add	sp, sp, #52	; 0x34
   21694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21698:	ldr	r3, [r1, #16]
   2169c:	push	{r4, r5, r6, lr}
   216a0:	ubfx	r3, r3, #3, #6
   216a4:	rsb	r2, r3, #63	; 0x3f
   216a8:	add	r5, r1, #24
   216ac:	cmp	r2, #7
   216b0:	mov	r6, r0
   216b4:	add	r0, r5, r3
   216b8:	mov	r4, r1
   216bc:	add	r0, r0, #1
   216c0:	mvn	r1, #127	; 0x7f
   216c4:	strb	r1, [r5, r3]
   216c8:	bhi	2172c <crc32@@Base+0x7f88>
   216cc:	mov	r1, #0
   216d0:	bl	122e4 <memset@plt>
   216d4:	mov	r1, r5
   216d8:	mov	r0, r4
   216dc:	bl	20c90 <crc32@@Base+0x74ec>
   216e0:	mov	r2, #56	; 0x38
   216e4:	mov	r1, #0
   216e8:	mov	r0, r5
   216ec:	bl	122e4 <memset@plt>
   216f0:	ldr	r2, [r4, #16]
   216f4:	mov	r1, r5
   216f8:	ldr	r3, [r4, #20]
   216fc:	mov	r0, r4
   21700:	strd	r2, [r4, #80]	; 0x50
   21704:	bl	20c90 <crc32@@Base+0x74ec>
   21708:	mov	r1, r4
   2170c:	mov	r0, r6
   21710:	mov	r2, #16
   21714:	bl	12380 <memmove@plt>
   21718:	mov	r0, r4
   2171c:	mov	r2, #88	; 0x58
   21720:	mov	r1, #0
   21724:	pop	{r4, r5, r6, lr}
   21728:	b	122e4 <memset@plt>
   2172c:	rsb	r2, r3, #55	; 0x37
   21730:	mov	r1, #0
   21734:	bl	122e4 <memset@plt>
   21738:	b	216f0 <crc32@@Base+0x7f4c>
   2173c:	ldr	r3, [r0, #20]
   21740:	cmp	r2, #63	; 0x3f
   21744:	push	{r4, r5, r6, r7, r8, lr}
   21748:	mov	r8, r2
   2174c:	add	r3, r3, r8, lsr #29
   21750:	lsl	r2, r2, #3
   21754:	mov	r4, r1
   21758:	strd	r2, [r0, #16]
   2175c:	add	r5, r0, #24
   21760:	bls	217a4 <crc32@@Base+0x8000>
   21764:	sub	r6, r8, #64	; 0x40
   21768:	mov	r7, r0
   2176c:	bic	r6, r6, #63	; 0x3f
   21770:	add	r6, r6, #64	; 0x40
   21774:	add	r6, r1, r6
   21778:	mov	r2, #64	; 0x40
   2177c:	mov	r1, r4
   21780:	mov	r0, r5
   21784:	add	r4, r4, r2
   21788:	bl	12380 <memmove@plt>
   2178c:	mov	r1, r5
   21790:	mov	r0, r7
   21794:	bl	20c90 <crc32@@Base+0x74ec>
   21798:	cmp	r6, r4
   2179c:	bne	21778 <crc32@@Base+0x7fd4>
   217a0:	and	r8, r8, #63	; 0x3f
   217a4:	mov	r2, r8
   217a8:	mov	r1, r4
   217ac:	mov	r0, r5
   217b0:	pop	{r4, r5, r6, r7, r8, lr}
   217b4:	b	12380 <memmove@plt>
   217b8:	push	{r4, r5, lr}
   217bc:	movw	r4, #61168	; 0xeef0
   217c0:	movt	r4, #4
   217c4:	sub	sp, sp, #100	; 0x64
   217c8:	mov	r5, r2
   217cc:	mov	r2, r1
   217d0:	ldr	r3, [r4]
   217d4:	mov	r1, r0
   217d8:	add	r0, sp, #4
   217dc:	movw	ip, #8961	; 0x2301
   217e0:	movt	ip, #26437	; 0x6745
   217e4:	str	ip, [sp, #4]
   217e8:	str	r3, [sp, #92]	; 0x5c
   217ec:	movw	r3, #43913	; 0xab89
   217f0:	movt	r3, #61389	; 0xefcd
   217f4:	str	r3, [sp, #8]
   217f8:	movw	r3, #56574	; 0xdcfe
   217fc:	movt	r3, #39098	; 0x98ba
   21800:	str	r3, [sp, #12]
   21804:	movw	r3, #21622	; 0x5476
   21808:	movt	r3, #4146	; 0x1032
   2180c:	str	r3, [sp, #16]
   21810:	mov	r3, #0
   21814:	str	r3, [sp, #20]
   21818:	str	r3, [sp, #24]
   2181c:	bl	2173c <crc32@@Base+0x7f98>
   21820:	add	r1, sp, #4
   21824:	mov	r0, r5
   21828:	bl	21698 <crc32@@Base+0x7ef4>
   2182c:	ldr	r2, [sp, #92]	; 0x5c
   21830:	ldr	r3, [r4]
   21834:	cmp	r2, r3
   21838:	bne	21844 <crc32@@Base+0x80a0>
   2183c:	add	sp, sp, #100	; 0x64
   21840:	pop	{r4, r5, pc}
   21844:	bl	12494 <__stack_chk_fail@plt>
   21848:	push	{r4, r5, lr}
   2184c:	movw	r4, #61168	; 0xeef0
   21850:	movt	r4, #4
   21854:	sub	sp, sp, #100	; 0x64
   21858:	mov	r5, r2
   2185c:	mov	r2, r1
   21860:	ldr	r3, [r4]
   21864:	mov	r1, r0
   21868:	add	r0, sp, #4
   2186c:	movw	ip, #8961	; 0x2301
   21870:	movt	ip, #26437	; 0x6745
   21874:	str	ip, [sp, #4]
   21878:	str	r3, [sp, #92]	; 0x5c
   2187c:	movw	r3, #43913	; 0xab89
   21880:	movt	r3, #61389	; 0xefcd
   21884:	str	r3, [sp, #8]
   21888:	movw	r3, #56574	; 0xdcfe
   2188c:	movt	r3, #39098	; 0x98ba
   21890:	str	r3, [sp, #12]
   21894:	movw	r3, #21622	; 0x5476
   21898:	movt	r3, #4146	; 0x1032
   2189c:	str	r3, [sp, #16]
   218a0:	mov	r3, #0
   218a4:	str	r3, [sp, #20]
   218a8:	str	r3, [sp, #24]
   218ac:	bl	2173c <crc32@@Base+0x7f98>
   218b0:	add	r1, sp, #4
   218b4:	mov	r0, r5
   218b8:	bl	21698 <crc32@@Base+0x7ef4>
   218bc:	ldr	r2, [sp, #92]	; 0x5c
   218c0:	ldr	r3, [r4]
   218c4:	cmp	r2, r3
   218c8:	bne	218d4 <crc32@@Base+0x8130>
   218cc:	add	sp, sp, #100	; 0x64
   218d0:	pop	{r4, r5, pc}
   218d4:	bl	12494 <__stack_chk_fail@plt>
   218d8:	subs	r0, r0, #21
   218dc:	movne	r0, #1
   218e0:	bx	lr
   218e4:	sub	r1, r1, #1
   218e8:	ldr	r2, [r0]
   218ec:	add	r3, r1, #2032	; 0x7f0
   218f0:	cmp	r1, #0
   218f4:	add	r3, r3, #15
   218f8:	movlt	r1, r3
   218fc:	cmp	r2, #150	; 0x96
   21900:	asr	r1, r1, #11
   21904:	bne	219b4 <crc32@@Base+0x8210>
   21908:	ldr	r3, [r0, #4]
   2190c:	cmp	r3, #105	; 0x69
   21910:	bne	219b4 <crc32@@Base+0x8210>
   21914:	ldr	r3, [r0, #8]
   21918:	cmp	r3, #150	; 0x96
   2191c:	bne	219b4 <crc32@@Base+0x8210>
   21920:	ldr	r3, [r0, #12]
   21924:	cmp	r3, #105	; 0x69
   21928:	bne	219b4 <crc32@@Base+0x8210>
   2192c:	ldr	r3, [r0, #16]
   21930:	uxtb	r2, r1
   21934:	cmp	r3, r2
   21938:	bne	219b4 <crc32@@Base+0x8210>
   2193c:	mvn	r1, r1
   21940:	ldr	r2, [r0, #20]
   21944:	uxtb	r1, r1
   21948:	cmp	r2, r1
   2194c:	bne	219b4 <crc32@@Base+0x8210>
   21950:	ldr	r1, [r0, #24]
   21954:	cmp	r3, r1
   21958:	bne	219b4 <crc32@@Base+0x8210>
   2195c:	ldr	r1, [r0, #28]
   21960:	cmp	r2, r1
   21964:	bne	219b4 <crc32@@Base+0x8210>
   21968:	ldr	r1, [r0, #32]
   2196c:	cmp	r3, r1
   21970:	bne	219b4 <crc32@@Base+0x8210>
   21974:	ldr	r1, [r0, #36]	; 0x24
   21978:	cmp	r2, r1
   2197c:	bne	219b4 <crc32@@Base+0x8210>
   21980:	ldr	r1, [r0, #40]	; 0x28
   21984:	cmp	r3, r1
   21988:	bne	219b4 <crc32@@Base+0x8210>
   2198c:	ldr	r3, [r0, #44]	; 0x2c
   21990:	cmp	r2, r3
   21994:	bne	219b4 <crc32@@Base+0x8210>
   21998:	ldr	r3, [r0, #48]	; 0x30
   2199c:	cmp	r3, #170	; 0xaa
   219a0:	bne	219b4 <crc32@@Base+0x8210>
   219a4:	ldr	r0, [r0, #512]	; 0x200
   219a8:	subs	r0, r0, #170	; 0xaa
   219ac:	mvnne	r0, #0
   219b0:	bx	lr
   219b4:	mvn	r0, #0
   219b8:	bx	lr
   219bc:	ldr	r3, [r1, #44]	; 0x2c
   219c0:	mov	r1, #0
   219c4:	push	{r4, r5, r6, lr}
   219c8:	movw	r4, #2047	; 0x7ff
   219cc:	add	r3, r4, r3
   219d0:	mov	r2, #2048	; 0x800
   219d4:	add	r4, r3, r4
   219d8:	cmp	r3, r1
   219dc:	mov	r5, r0
   219e0:	movlt	r3, r4
   219e4:	asr	r4, r3, #11
   219e8:	bl	122e4 <memset@plt>
   219ec:	mov	ip, #150	; 0x96
   219f0:	mov	r0, #105	; 0x69
   219f4:	mvn	r2, r4
   219f8:	uxtb	r3, r4
   219fc:	uxtb	r2, r2
   21a00:	mov	r1, #170	; 0xaa
   21a04:	str	r3, [r5, #40]	; 0x28
   21a08:	str	r2, [r5, #44]	; 0x2c
   21a0c:	str	r2, [r5, #36]	; 0x24
   21a10:	str	r2, [r5, #28]
   21a14:	str	r2, [r5, #20]
   21a18:	str	r3, [r5, #32]
   21a1c:	str	r3, [r5, #24]
   21a20:	str	r3, [r5, #16]
   21a24:	str	ip, [r5, #8]
   21a28:	str	ip, [r5]
   21a2c:	str	r0, [r5, #12]
   21a30:	str	r0, [r5, #4]
   21a34:	str	r1, [r5, #512]	; 0x200
   21a38:	str	r1, [r5, #48]	; 0x30
   21a3c:	pop	{r4, r5, r6, pc}
   21a40:	push	{r4, r5, r6, r7, r8, lr}
   21a44:	movw	r6, #43260	; 0xa8fc
   21a48:	sub	r5, r0, #4
   21a4c:	movt	r6, #3
   21a50:	mov	r7, r0
   21a54:	mov	r4, #0
   21a58:	mov	r2, r4
   21a5c:	ldr	r3, [r5, #4]!
   21a60:	mov	r1, r6
   21a64:	add	r4, r4, #1
   21a68:	mov	r0, #1
   21a6c:	bl	12770 <__printf_chk@plt>
   21a70:	cmp	r4, #13
   21a74:	bne	21a58 <crc32@@Base+0x82b4>
   21a78:	ldr	r3, [r7, #512]	; 0x200
   21a7c:	movw	r1, #43260	; 0xa8fc
   21a80:	mov	r2, #128	; 0x80
   21a84:	movt	r1, #3
   21a88:	mov	r0, #1
   21a8c:	pop	{r4, r5, r6, r7, r8, lr}
   21a90:	b	12770 <__printf_chk@plt>
   21a94:	subs	r0, r0, #16
   21a98:	movne	r0, #1
   21a9c:	bx	lr
   21aa0:	bx	lr
   21aa4:	push	{r4, r5, r6, r7, lr}
   21aa8:	movw	r5, #61168	; 0xeef0
   21aac:	movt	r5, #4
   21ab0:	ldrb	r2, [r0]
   21ab4:	sub	sp, sp, #12
   21ab8:	ldr	r3, [r5]
   21abc:	cmp	r2, #48	; 0x30
   21ac0:	str	r3, [sp, #4]
   21ac4:	bne	21b78 <crc32@@Base+0x83d4>
   21ac8:	ldrb	r3, [r0, #1]
   21acc:	cmp	r3, #120	; 0x78
   21ad0:	bne	21b78 <crc32@@Base+0x83d4>
   21ad4:	mov	r7, r1
   21ad8:	add	r4, r0, #2
   21adc:	bl	1268c <__errno_location@plt>
   21ae0:	mov	r3, #0
   21ae4:	mov	r2, #16
   21ae8:	mov	r1, sp
   21aec:	mov	r6, r0
   21af0:	mov	r0, r4
   21af4:	str	r3, [r6]
   21af8:	bl	122cc <strtoul@plt>
   21afc:	ldr	r2, [r6]
   21b00:	cmp	r2, #34	; 0x22
   21b04:	mov	r3, r0
   21b08:	beq	21b40 <crc32@@Base+0x839c>
   21b0c:	cmp	r2, #0
   21b10:	bne	21b48 <crc32@@Base+0x83a4>
   21b14:	ldr	r2, [sp]
   21b18:	cmp	r2, r4
   21b1c:	strne	r3, [r7]
   21b20:	movne	r0, #0
   21b24:	beq	21ba0 <crc32@@Base+0x83fc>
   21b28:	ldr	r2, [sp, #4]
   21b2c:	ldr	r3, [r5]
   21b30:	cmp	r2, r3
   21b34:	bne	21bc8 <crc32@@Base+0x8424>
   21b38:	add	sp, sp, #12
   21b3c:	pop	{r4, r5, r6, r7, pc}
   21b40:	cmn	r0, #1
   21b44:	beq	21b50 <crc32@@Base+0x83ac>
   21b48:	cmp	r3, #0
   21b4c:	bne	21b14 <crc32@@Base+0x8370>
   21b50:	movw	r3, #65044	; 0xfe14
   21b54:	movt	r3, #4
   21b58:	movw	r0, #43424	; 0xa9a0
   21b5c:	mov	r2, #29
   21b60:	ldr	r3, [r3]
   21b64:	movt	r0, #3
   21b68:	mov	r1, #1
   21b6c:	bl	12578 <fwrite@plt>
   21b70:	mvn	r0, #21
   21b74:	b	21b28 <crc32@@Base+0x8384>
   21b78:	movw	r3, #65044	; 0xfe14
   21b7c:	movt	r3, #4
   21b80:	movw	r0, #43388	; 0xa97c
   21b84:	mov	r2, #33	; 0x21
   21b88:	ldr	r3, [r3]
   21b8c:	movt	r0, #3
   21b90:	mov	r1, #1
   21b94:	bl	12578 <fwrite@plt>
   21b98:	mvn	r0, #21
   21b9c:	b	21b28 <crc32@@Base+0x8384>
   21ba0:	movw	r3, #65044	; 0xfe14
   21ba4:	movt	r3, #4
   21ba8:	movw	r0, #43456	; 0xa9c0
   21bac:	mov	r2, #21
   21bb0:	ldr	r3, [r3]
   21bb4:	movt	r0, #3
   21bb8:	mov	r1, #1
   21bbc:	bl	12578 <fwrite@plt>
   21bc0:	mvn	r0, #21
   21bc4:	b	21b28 <crc32@@Base+0x8384>
   21bc8:	bl	12494 <__stack_chk_fail@plt>
   21bcc:	push	{r4, r5, r6, r7, r8, lr}
   21bd0:	cmp	r1, #0
   21bd4:	add	r4, r0, #16
   21bd8:	sub	sp, sp, #8
   21bdc:	movne	r7, r1
   21be0:	mov	r8, r2
   21be4:	moveq	r7, r4
   21be8:	mov	r6, r0
   21bec:	bl	12590 <EVP_CIPHER_CTX_new@plt>
   21bf0:	mov	r5, r0
   21bf4:	bl	1214c <EVP_aes_128_cbc@plt>
   21bf8:	mov	r2, r4
   21bfc:	str	r8, [sp]
   21c00:	mov	r3, r7
   21c04:	mov	r1, r0
   21c08:	mov	r0, r5
   21c0c:	bl	120c8 <EVP_CipherInit@plt>
   21c10:	cmp	r0, #1
   21c14:	mov	r4, r0
   21c18:	beq	21c28 <crc32@@Base+0x8484>
   21c1c:	mov	r0, r4
   21c20:	add	sp, sp, #8
   21c24:	pop	{r4, r5, r6, r7, r8, pc}
   21c28:	mov	r1, #0
   21c2c:	mov	r0, r5
   21c30:	bl	125b4 <EVP_CIPHER_CTX_set_padding@plt>
   21c34:	mov	r0, r4
   21c38:	str	r5, [r6, #60]	; 0x3c
   21c3c:	add	sp, sp, #8
   21c40:	pop	{r4, r5, r6, r7, r8, pc}
   21c44:	push	{r4, r5, r6, lr}
   21c48:	mov	r4, r0
   21c4c:	ldr	r0, [r0, #60]	; 0x3c
   21c50:	mov	r5, r1
   21c54:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   21c58:	cmp	r0, #0
   21c5c:	popeq	{r4, r5, r6, pc}
   21c60:	mov	r2, r5
   21c64:	add	r1, r4, #136	; 0x88
   21c68:	mov	r0, r4
   21c6c:	pop	{r4, r5, r6, lr}
   21c70:	b	21bcc <crc32@@Base+0x8428>
   21c74:	push	{r1, r2, r3}
   21c78:	push	{r4, lr}
   21c7c:	movw	r4, #61168	; 0xeef0
   21c80:	movt	r4, #4
   21c84:	ldrb	r2, [r0]
   21c88:	sub	sp, sp, #12
   21c8c:	ldr	r3, [r4]
   21c90:	tst	r2, #8
   21c94:	ldr	r2, [sp, #20]
   21c98:	str	r3, [sp, #4]
   21c9c:	beq	21cc0 <crc32@@Base+0x851c>
   21ca0:	ldr	r2, [sp, #4]
   21ca4:	ldr	r3, [r4]
   21ca8:	cmp	r2, r3
   21cac:	bne	21ce4 <crc32@@Base+0x8540>
   21cb0:	add	sp, sp, #12
   21cb4:	pop	{r4, lr}
   21cb8:	add	sp, sp, #12
   21cbc:	bx	lr
   21cc0:	add	ip, sp, #24
   21cc4:	movw	r0, #65048	; 0xfe18
   21cc8:	movt	r0, #4
   21ccc:	mov	r1, #1
   21cd0:	mov	r3, ip
   21cd4:	str	ip, [sp]
   21cd8:	ldr	r0, [r0]
   21cdc:	bl	12530 <__vfprintf_chk@plt>
   21ce0:	b	21ca0 <crc32@@Base+0x84fc>
   21ce4:	bl	12494 <__stack_chk_fail@plt>
   21ce8:	cmp	r0, #0
   21cec:	beq	21d70 <crc32@@Base+0x85cc>
   21cf0:	ldr	r3, [r0, #64]	; 0x40
   21cf4:	ldrb	r3, [r3]
   21cf8:	cmp	r3, #0
   21cfc:	beq	21d44 <crc32@@Base+0x85a0>
   21d00:	ldr	r3, [r0]
   21d04:	ldr	r2, [r0, #8]
   21d08:	cmp	r3, #0
   21d0c:	beq	21d2c <crc32@@Base+0x8588>
   21d10:	cmp	r2, #0
   21d14:	bne	21d24 <crc32@@Base+0x8580>
   21d18:	ldr	r3, [r0, #16]
   21d1c:	cmp	r3, #0
   21d20:	beq	21d34 <crc32@@Base+0x8590>
   21d24:	mov	r0, #1
   21d28:	bx	lr
   21d2c:	cmp	r2, #0
   21d30:	bne	21d18 <crc32@@Base+0x8574>
   21d34:	ldr	r0, [r0, #28]
   21d38:	adds	r0, r0, #0
   21d3c:	movne	r0, #1
   21d40:	bx	lr
   21d44:	movw	r1, #65044	; 0xfe14
   21d48:	movt	r1, #4
   21d4c:	ldr	r3, [r0, #80]	; 0x50
   21d50:	movw	r2, #43480	; 0xa9d8
   21d54:	push	{r4, lr}
   21d58:	movt	r2, #3
   21d5c:	ldr	r0, [r1]
   21d60:	mov	r1, #1
   21d64:	bl	122b4 <__fprintf_chk@plt>
   21d68:	mvn	r0, #0
   21d6c:	pop	{r4, pc}
   21d70:	mvn	r0, #0
   21d74:	bx	lr
   21d78:	push	{r4, r5, r6, r7, r8, lr}
   21d7c:	subs	r7, r0, #0
   21d80:	mov	r6, r1
   21d84:	beq	21dd0 <crc32@@Base+0x862c>
   21d88:	ldr	r4, [r7, #12]
   21d8c:	cmp	r4, #0
   21d90:	beq	21db8 <crc32@@Base+0x8614>
   21d94:	ldr	r0, [r4, #8]
   21d98:	ldr	r5, [r4, #4]
   21d9c:	cmp	r0, #0
   21da0:	beq	21da8 <crc32@@Base+0x8604>
   21da4:	bl	12128 <free@plt>
   21da8:	mov	r0, r4
   21dac:	bl	12128 <free@plt>
   21db0:	subs	r4, r5, #0
   21db4:	bne	21d94 <crc32@@Base+0x85f0>
   21db8:	ldr	r4, [r7, #8]
   21dbc:	mov	r0, r7
   21dc0:	bl	12128 <free@plt>
   21dc4:	cmp	r4, #0
   21dc8:	movne	r7, r4
   21dcc:	bne	21d88 <crc32@@Base+0x85e4>
   21dd0:	cmp	r6, #0
   21dd4:	popeq	{r4, r5, r6, r7, r8, pc}
   21dd8:	ldr	r0, [r6, #8]
   21ddc:	ldr	r4, [r6]
   21de0:	bl	12128 <free@plt>
   21de4:	mov	r0, r6
   21de8:	bl	12128 <free@plt>
   21dec:	subs	r6, r4, #0
   21df0:	bne	21dd8 <crc32@@Base+0x8634>
   21df4:	pop	{r4, r5, r6, r7, r8, pc}
   21df8:	push	{r4, r5, r6, lr}
   21dfc:	mov	r4, r1
   21e00:	ldr	r1, [r1]
   21e04:	mov	r5, r0
   21e08:	ldr	r0, [r0]
   21e0c:	add	r1, r2, r1
   21e10:	str	r1, [r4]
   21e14:	bl	123d4 <realloc@plt>
   21e18:	subs	r2, r0, #0
   21e1c:	ldrne	r1, [r4]
   21e20:	movne	r3, #64	; 0x40
   21e24:	movtne	r3, #53760	; 0xd200
   21e28:	strne	r2, [r5]
   21e2c:	movne	r0, #0
   21e30:	mvneq	r0, #11
   21e34:	orrne	r3, r3, r1, lsl #8
   21e38:	revne	r3, r3
   21e3c:	strne	r3, [r2]
   21e40:	pop	{r4, r5, r6, pc}
   21e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e48:	movw	r6, #61168	; 0xeef0
   21e4c:	movt	r6, #4
   21e50:	cmp	r3, #0
   21e54:	sub	sp, sp, #28
   21e58:	movw	lr, #43564	; 0xaa2c
   21e5c:	ldr	r4, [r6]
   21e60:	movt	lr, #3
   21e64:	movw	ip, #43572	; 0xaa34
   21e68:	movt	ip, #3
   21e6c:	mov	r8, r0
   21e70:	mov	r7, r1
   21e74:	mov	r0, #1
   21e78:	mov	r1, #48	; 0x30
   21e7c:	str	r4, [sp, #20]
   21e80:	movne	r5, lr
   21e84:	moveq	r5, ip
   21e88:	mov	r9, r2
   21e8c:	mov	fp, r3
   21e90:	mov	sl, #0
   21e94:	str	sl, [sp, #16]
   21e98:	bl	12518 <calloc@plt>
   21e9c:	subs	r4, r0, #0
   21ea0:	beq	22058 <crc32@@Base+0x88b4>
   21ea4:	ldr	r0, [r7]
   21ea8:	movw	r1, #31772	; 0x7c1c
   21eac:	movt	r1, #3
   21eb0:	bl	12278 <strtok@plt>
   21eb4:	cmp	r0, #0
   21eb8:	beq	2202c <crc32@@Base+0x8888>
   21ebc:	ldrb	r3, [r0]
   21ec0:	cmp	r3, #72	; 0x48
   21ec4:	bne	21f34 <crc32@@Base+0x8790>
   21ec8:	ldrb	r3, [r0, #1]
   21ecc:	cmp	r3, #65	; 0x41
   21ed0:	bne	21f34 <crc32@@Base+0x8790>
   21ed4:	ldrb	r3, [r0, #2]
   21ed8:	cmp	r3, #66	; 0x42
   21edc:	bne	21f34 <crc32@@Base+0x8790>
   21ee0:	ldrb	r3, [r0, #3]
   21ee4:	cmp	r3, #0
   21ee8:	bne	21f34 <crc32@@Base+0x8790>
   21eec:	mov	r0, r3
   21ef0:	movw	r1, #31772	; 0x7c1c
   21ef4:	movt	r1, #3
   21ef8:	bl	12278 <strtok@plt>
   21efc:	cmp	r0, #0
   21f00:	movne	sl, #1
   21f04:	bne	21f34 <crc32@@Base+0x8790>
   21f08:	movw	r1, #65044	; 0xfe14
   21f0c:	movt	r1, #4
   21f10:	ldr	r3, [r9]
   21f14:	movw	r2, #43620	; 0xaa64
   21f18:	ldr	r0, [r1]
   21f1c:	movt	r2, #3
   21f20:	str	r5, [sp]
   21f24:	mov	r1, #1
   21f28:	mvn	r7, #21
   21f2c:	bl	122b4 <__fprintf_chk@plt>
   21f30:	b	21f68 <crc32@@Base+0x87c4>
   21f34:	add	r1, sp, #12
   21f38:	bl	21aa4 <crc32@@Base+0x8300>
   21f3c:	subs	r7, r0, #0
   21f40:	beq	21f8c <crc32@@Base+0x87e8>
   21f44:	movw	r1, #65044	; 0xfe14
   21f48:	movt	r1, #4
   21f4c:	ldr	r3, [r9]
   21f50:	movw	r2, #43652	; 0xaa84
   21f54:	ldr	r0, [r1]
   21f58:	movt	r2, #3
   21f5c:	str	r5, [sp]
   21f60:	mov	r1, #1
   21f64:	bl	122b4 <__fprintf_chk@plt>
   21f68:	mov	r0, r4
   21f6c:	bl	12128 <free@plt>
   21f70:	ldr	r2, [sp, #20]
   21f74:	mov	r0, r7
   21f78:	ldr	r3, [r6]
   21f7c:	cmp	r2, r3
   21f80:	bne	22060 <crc32@@Base+0x88bc>
   21f84:	add	sp, sp, #28
   21f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f8c:	movw	r1, #31772	; 0x7c1c
   21f90:	movt	r1, #3
   21f94:	bl	12278 <strtok@plt>
   21f98:	cmp	r0, #0
   21f9c:	beq	21fdc <crc32@@Base+0x8838>
   21fa0:	add	r1, sp, #16
   21fa4:	bl	21aa4 <crc32@@Base+0x8300>
   21fa8:	subs	ip, r0, #0
   21fac:	beq	21fdc <crc32@@Base+0x8838>
   21fb0:	movw	r1, #65044	; 0xfe14
   21fb4:	movt	r1, #4
   21fb8:	ldr	r3, [r9]
   21fbc:	movw	r2, #43684	; 0xaaa4
   21fc0:	ldr	r0, [r1]
   21fc4:	movt	r2, #3
   21fc8:	str	r5, [sp]
   21fcc:	mov	r1, #1
   21fd0:	mov	r7, ip
   21fd4:	bl	122b4 <__fprintf_chk@plt>
   21fd8:	b	21f68 <crc32@@Base+0x87c4>
   21fdc:	ldr	r1, [r8, #12]
   21fe0:	cmp	fp, #0
   21fe4:	ldr	r3, [sp, #12]
   21fe8:	movne	r2, #5
   21fec:	moveq	r2, #4
   21ff0:	cmp	r1, #0
   21ff4:	ldr	r1, [sp, #16]
   21ff8:	str	r3, [r4, #20]
   21ffc:	mov	r3, #16
   22000:	str	r3, [r4]
   22004:	ldrne	r3, [r8, #16]
   22008:	strb	r2, [r4, #17]
   2200c:	mov	r2, #90	; 0x5a
   22010:	strh	sl, [r4, #18]
   22014:	str	r1, [r4, #28]
   22018:	strb	r2, [r4, #16]
   2201c:	streq	r4, [r8, #12]
   22020:	strne	r4, [r3, #4]
   22024:	str	r4, [r8, #16]
   22028:	b	21f70 <crc32@@Base+0x87cc>
   2202c:	movw	r1, #65044	; 0xfe14
   22030:	movt	r1, #4
   22034:	ldr	r3, [r9]
   22038:	movw	r2, #43580	; 0xaa3c
   2203c:	ldr	r0, [r1]
   22040:	movt	r2, #3
   22044:	str	r5, [sp]
   22048:	mov	r1, #1
   2204c:	mvn	r7, #21
   22050:	bl	122b4 <__fprintf_chk@plt>
   22054:	b	21f68 <crc32@@Base+0x87c4>
   22058:	mvn	r7, #11
   2205c:	b	21f70 <crc32@@Base+0x87cc>
   22060:	bl	12494 <__stack_chk_fail@plt>
   22064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22068:	movw	r5, #61168	; 0xeef0
   2206c:	movt	r5, #4
   22070:	ldr	ip, [r0, #16]
   22074:	mov	r9, r2
   22078:	sub	sp, sp, #20
   2207c:	ldr	r2, [r5]
   22080:	cmp	ip, #0
   22084:	mov	r4, r0
   22088:	mov	r8, r1
   2208c:	mov	r6, r3
   22090:	add	r0, r0, #8
   22094:	add	r1, r4, #12
   22098:	str	r2, [sp, #12]
   2209c:	beq	22190 <crc32@@Base+0x89ec>
   220a0:	cmp	r3, #-1073741824	; 0xc0000000
   220a4:	beq	22198 <crc32@@Base+0x89f4>
   220a8:	ldr	r3, [ip]
   220ac:	bic	r3, r3, #16711680	; 0xff0000
   220b0:	bic	r3, r3, #65280	; 0xff00
   220b4:	cmp	r6, r3
   220b8:	beq	221e8 <crc32@@Base+0x8a44>
   220bc:	mov	r2, #12
   220c0:	bl	21df8 <crc32@@Base+0x8654>
   220c4:	subs	r7, r0, #0
   220c8:	bne	22174 <crc32@@Base+0x89d0>
   220cc:	ldr	sl, [r4, #12]
   220d0:	ldr	fp, [r4, #8]
   220d4:	bic	sl, sl, #3
   220d8:	sub	r3, sl, #12
   220dc:	add	r3, fp, r3
   220e0:	str	r3, [r4, #16]
   220e4:	ldr	r0, [r8]
   220e8:	movw	r1, #31772	; 0x7c1c
   220ec:	movt	r1, #3
   220f0:	bl	12278 <strtok@plt>
   220f4:	cmp	r0, #0
   220f8:	beq	22254 <crc32@@Base+0x8ab0>
   220fc:	add	r1, sp, #4
   22100:	bl	21aa4 <crc32@@Base+0x8300>
   22104:	subs	r7, r0, #0
   22108:	bne	221c4 <crc32@@Base+0x8a20>
   2210c:	movw	r1, #31772	; 0x7c1c
   22110:	movt	r1, #3
   22114:	bl	12278 <strtok@plt>
   22118:	cmp	r0, #0
   2211c:	beq	2222c <crc32@@Base+0x8a88>
   22120:	add	r1, sp, #8
   22124:	bl	21aa4 <crc32@@Base+0x8300>
   22128:	subs	r7, r0, #0
   2212c:	bne	22208 <crc32@@Base+0x8a64>
   22130:	sub	sl, sl, #8
   22134:	ldr	r3, [sp, #4]
   22138:	add	r1, fp, sl
   2213c:	rev	r3, r3
   22140:	str	r3, [fp, sl]
   22144:	ldr	r2, [sp, #8]
   22148:	ldr	r3, [r4, #16]
   2214c:	rev	r2, r2
   22150:	str	r2, [r1, #4]
   22154:	ldr	r1, [r4, #8]
   22158:	ldr	r2, [r4, #12]
   2215c:	sub	r1, r3, r1
   22160:	mov	r7, #0
   22164:	sub	r2, r2, r1
   22168:	orr	r6, r6, r2, lsl #8
   2216c:	rev	r6, r6
   22170:	str	r6, [r3]
   22174:	ldr	r2, [sp, #12]
   22178:	mov	r0, r7
   2217c:	ldr	r3, [r5]
   22180:	cmp	r2, r3
   22184:	bne	2227c <crc32@@Base+0x8ad8>
   22188:	add	sp, sp, #20
   2218c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22190:	cmp	r3, #-1073741824	; 0xc0000000
   22194:	bne	220bc <crc32@@Base+0x8918>
   22198:	mov	r2, #4
   2219c:	bl	21df8 <crc32@@Base+0x8654>
   221a0:	subs	r7, r0, #0
   221a4:	bne	22174 <crc32@@Base+0x89d0>
   221a8:	ldr	r2, [r4, #12]
   221ac:	ldr	r1, [r4, #8]
   221b0:	bic	r3, r2, #3
   221b4:	sub	r3, r3, #4
   221b8:	add	r3, r1, r3
   221bc:	str	r3, [r4, #16]
   221c0:	b	2215c <crc32@@Base+0x89b8>
   221c4:	movw	r1, #65044	; 0xfe14
   221c8:	movt	r1, #4
   221cc:	ldr	r3, [r9]
   221d0:	movw	r2, #43752	; 0xaae8
   221d4:	ldr	r0, [r1]
   221d8:	movt	r2, #3
   221dc:	mov	r1, #1
   221e0:	bl	122b4 <__fprintf_chk@plt>
   221e4:	b	22174 <crc32@@Base+0x89d0>
   221e8:	mov	r2, #8
   221ec:	bl	21df8 <crc32@@Base+0x8654>
   221f0:	subs	r7, r0, #0
   221f4:	bne	22174 <crc32@@Base+0x89d0>
   221f8:	ldr	sl, [r4, #12]
   221fc:	ldr	fp, [r4, #8]
   22200:	bic	sl, sl, #3
   22204:	b	220e4 <crc32@@Base+0x8940>
   22208:	movw	r1, #65044	; 0xfe14
   2220c:	movt	r1, #4
   22210:	ldr	r3, [r9]
   22214:	movw	r2, #43820	; 0xab2c
   22218:	ldr	r0, [r1]
   2221c:	movt	r2, #3
   22220:	mov	r1, #1
   22224:	bl	122b4 <__fprintf_chk@plt>
   22228:	b	22174 <crc32@@Base+0x89d0>
   2222c:	movw	r1, #65044	; 0xfe14
   22230:	movt	r1, #4
   22234:	ldr	r3, [r9]
   22238:	movw	r2, #43788	; 0xab0c
   2223c:	ldr	r0, [r1]
   22240:	movt	r2, #3
   22244:	mov	r1, #1
   22248:	mvn	r7, #21
   2224c:	bl	122b4 <__fprintf_chk@plt>
   22250:	b	22174 <crc32@@Base+0x89d0>
   22254:	movw	r1, #65044	; 0xfe14
   22258:	movt	r1, #4
   2225c:	ldr	r3, [r9]
   22260:	movw	r2, #43720	; 0xaac8
   22264:	ldr	r0, [r1]
   22268:	movt	r2, #3
   2226c:	mov	r1, #1
   22270:	mvn	r7, #21
   22274:	bl	122b4 <__fprintf_chk@plt>
   22278:	b	22174 <crc32@@Base+0x89d0>
   2227c:	bl	12494 <__stack_chk_fail@plt>
   22280:	push	{r4, r5, r6, r7, r8, r9, lr}
   22284:	movw	r4, #61168	; 0xeef0
   22288:	movt	r4, #4
   2228c:	sub	sp, sp, #20
   22290:	mov	r7, r0
   22294:	mov	r0, r3
   22298:	ldr	ip, [r4]
   2229c:	mov	r6, r3
   222a0:	mov	r8, r1
   222a4:	mov	r9, r2
   222a8:	str	ip, [sp, #12]
   222ac:	bl	125a8 <malloc@plt>
   222b0:	subs	r5, r0, #0
   222b4:	beq	22324 <crc32@@Base+0x8b80>
   222b8:	mov	r2, #0
   222bc:	mov	r3, r8
   222c0:	str	r2, [r5]
   222c4:	mov	r0, r7
   222c8:	str	r6, [sp]
   222cc:	add	r2, sp, #8
   222d0:	mov	r1, r5
   222d4:	bl	120f8 <EVP_CipherUpdate@plt>
   222d8:	subs	r6, r0, #0
   222dc:	mvneq	r6, #21
   222e0:	bne	22308 <crc32@@Base+0x8b64>
   222e4:	mov	r0, r5
   222e8:	bl	12128 <free@plt>
   222ec:	ldr	r2, [sp, #12]
   222f0:	mov	r0, r6
   222f4:	ldr	r3, [r4]
   222f8:	cmp	r2, r3
   222fc:	bne	2232c <crc32@@Base+0x8b88>
   22300:	add	sp, sp, #20
   22304:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22308:	cmp	r9, #0
   2230c:	beq	222e4 <crc32@@Base+0x8b40>
   22310:	mov	r0, r9
   22314:	ldr	r2, [sp, #8]
   22318:	mov	r1, r5
   2231c:	bl	1259c <memcpy@plt>
   22320:	b	222e4 <crc32@@Base+0x8b40>
   22324:	mvn	r6, #11
   22328:	b	222ec <crc32@@Base+0x8b48>
   2232c:	bl	12494 <__stack_chk_fail@plt>
   22330:	push	{r4, r5, r6, lr}
   22334:	add	r4, r0, #136	; 0x88
   22338:	ldr	r5, [r0, #64]	; 0x40
   2233c:	mov	r2, #0
   22340:	mov	r1, r4
   22344:	mov	r3, #96	; 0x60
   22348:	ldr	r0, [r0, #60]	; 0x3c
   2234c:	bl	22280 <crc32@@Base+0x8adc>
   22350:	mov	r1, r4
   22354:	mov	r0, r5
   22358:	mov	r2, #96	; 0x60
   2235c:	pop	{r4, r5, r6, lr}
   22360:	b	12650 <EVP_DigestUpdate@plt>
   22364:	push	{r4, r5, r6, r7, r8, lr}
   22368:	ldr	r4, [r0, #44]	; 0x2c
   2236c:	ldr	r7, [r0, #64]	; 0x40
   22370:	cmp	r4, #0
   22374:	popeq	{r4, r5, r6, r7, r8, pc}
   22378:	add	r8, r0, #100	; 0x64
   2237c:	mov	r6, r0
   22380:	add	r5, r4, #20
   22384:	mov	r3, #16
   22388:	mov	r2, r8
   2238c:	ldr	r0, [r6, #60]	; 0x3c
   22390:	mov	r1, r5
   22394:	bl	22280 <crc32@@Base+0x8adc>
   22398:	mov	r1, r5
   2239c:	mov	r2, #16
   223a0:	mov	r0, r7
   223a4:	bl	12650 <EVP_DigestUpdate@plt>
   223a8:	ldr	r4, [r4, #8]
   223ac:	cmp	r4, #0
   223b0:	bne	22380 <crc32@@Base+0x8bdc>
   223b4:	pop	{r4, r5, r6, r7, r8, pc}
   223b8:	push	{r4, lr}
   223bc:	movw	r1, #43852	; 0xab4c
   223c0:	mov	r2, #32
   223c4:	movt	r1, #3
   223c8:	mov	r0, #24
   223cc:	bl	122c0 <CRYPTO_malloc@plt>
   223d0:	cmp	r0, #0
   223d4:	popeq	{r4, pc}
   223d8:	mov	r3, #0
   223dc:	str	r3, [r0]
   223e0:	str	r3, [r0, #4]
   223e4:	str	r3, [r0, #8]
   223e8:	str	r3, [r0, #12]
   223ec:	str	r3, [r0, #16]
   223f0:	str	r3, [r0, #20]
   223f4:	pop	{r4, pc}
   223f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223fc:	movw	r3, #61168	; 0xeef0
   22400:	sub	sp, sp, #428	; 0x1ac
   22404:	movt	r3, #4
   22408:	add	r7, sp, #152	; 0x98
   2240c:	mov	r4, r0
   22410:	str	r3, [sp, #36]	; 0x24
   22414:	mov	r5, r1
   22418:	ldr	r3, [r3]
   2241c:	mov	r0, r7
   22420:	mov	r2, #232	; 0xe8
   22424:	mov	r1, #0
   22428:	str	r3, [sp, #420]	; 0x1a4
   2242c:	bl	122e4 <memset@plt>
   22430:	cmp	r4, #0
   22434:	mov	r3, #0
   22438:	str	r4, [sp, #156]	; 0x9c
   2243c:	bfi	r3, r5, #3, #1
   22440:	strb	r3, [sp, #152]	; 0x98
   22444:	beq	22974 <crc32@@Base+0x91d0>
   22448:	mov	r0, r4
   2244c:	movw	r1, #49540	; 0xc184
   22450:	movt	r1, #3
   22454:	bl	1232c <fopen@plt>
   22458:	subs	fp, r0, #0
   2245c:	movweq	r4, #65044	; 0xfe14
   22460:	movteq	r4, #4
   22464:	beq	22870 <crc32@@Base+0x90cc>
   22468:	mov	r2, #2
   2246c:	mov	r1, #0
   22470:	bl	12158 <fseek@plt>
   22474:	cmp	r0, #0
   22478:	blt	22860 <crc32@@Base+0x90bc>
   2247c:	mov	r0, fp
   22480:	bl	12524 <ftell@plt>
   22484:	subs	r3, r0, #0
   22488:	str	r3, [sp, #32]
   2248c:	blt	22860 <crc32@@Base+0x90bc>
   22490:	mov	r2, #0
   22494:	mov	r0, fp
   22498:	mov	r1, r2
   2249c:	bl	12158 <fseek@plt>
   224a0:	cmp	r0, #0
   224a4:	blt	22860 <crc32@@Base+0x90bc>
   224a8:	ldr	r3, [sp, #32]
   224ac:	cmp	r3, #95	; 0x5f
   224b0:	ble	229dc <crc32@@Base+0x9238>
   224b4:	ldr	r3, [sp, #32]
   224b8:	ands	r5, r3, #15
   224bc:	bne	2290c <crc32@@Base+0x9168>
   224c0:	bl	223b8 <crc32@@Base+0x8c14>
   224c4:	mov	r4, r0
   224c8:	str	r0, [sp, #216]	; 0xd8
   224cc:	bl	1220c <EVP_sha1@plt>
   224d0:	mov	r1, r0
   224d4:	mov	r0, r4
   224d8:	bl	12080 <EVP_DigestInit@plt>
   224dc:	mov	r0, r7
   224e0:	movw	r1, #44024	; 0xabf8
   224e4:	movt	r1, #3
   224e8:	bl	21c74 <crc32@@Base+0x84d0>
   224ec:	add	r0, sp, #288	; 0x120
   224f0:	mov	r3, fp
   224f4:	mov	r2, #96	; 0x60
   224f8:	mov	r1, #1
   224fc:	bl	12464 <fread@plt>
   22500:	cmp	r0, #96	; 0x60
   22504:	bne	22890 <crc32@@Base+0x90ec>
   22508:	bl	223b8 <crc32@@Base+0x8c14>
   2250c:	mov	r4, r0
   22510:	bl	1220c <EVP_sha1@plt>
   22514:	mov	r1, r0
   22518:	mov	r0, r4
   2251c:	bl	12080 <EVP_DigestInit@plt>
   22520:	add	r1, sp, #308	; 0x134
   22524:	mov	r2, #76	; 0x4c
   22528:	mov	r0, r4
   2252c:	bl	12650 <EVP_DigestUpdate@plt>
   22530:	add	r1, sp, #388	; 0x184
   22534:	mov	r2, r5
   22538:	mov	r0, r4
   2253c:	bl	1253c <EVP_DigestFinal@plt>
   22540:	mov	r0, r4
   22544:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   22548:	mov	r0, r4
   2254c:	bl	124b8 <CRYPTO_free@plt>
   22550:	mov	r1, r5
   22554:	mov	r2, #1
   22558:	mov	r0, r7
   2255c:	bl	21bcc <crc32@@Base+0x8428>
   22560:	mov	r0, r7
   22564:	bl	22330 <crc32@@Base+0x8b8c>
   22568:	add	r1, sp, #288	; 0x120
   2256c:	add	r0, sp, #388	; 0x184
   22570:	mov	r2, #20
   22574:	bl	126c8 <memcmp@plt>
   22578:	cmp	r0, #0
   2257c:	beq	22608 <crc32@@Base+0x8e64>
   22580:	movw	r3, #44216	; 0xacb8
   22584:	movw	r2, #44220	; 0xacbc
   22588:	movw	r1, #44176	; 0xac90
   2258c:	movt	r3, #3
   22590:	movt	r2, #3
   22594:	mov	r0, r7
   22598:	movt	r1, #3
   2259c:	bl	21c74 <crc32@@Base+0x84d0>
   225a0:	mvn	r4, #21
   225a4:	movw	r1, #44112	; 0xac50
   225a8:	mov	r0, r7
   225ac:	movt	r1, #3
   225b0:	bl	21c74 <crc32@@Base+0x84d0>
   225b4:	movw	r2, #43928	; 0xab98
   225b8:	movt	r2, #3
   225bc:	mov	r0, r7
   225c0:	movw	r1, #45172	; 0xb074
   225c4:	movt	r1, #3
   225c8:	bl	21c74 <crc32@@Base+0x84d0>
   225cc:	ldr	r0, [sp, #212]	; 0xd4
   225d0:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   225d4:	mov	r0, fp
   225d8:	bl	125fc <fclose@plt>
   225dc:	ldr	r0, [sp, #196]	; 0xc4
   225e0:	ldr	r1, [sp, #204]	; 0xcc
   225e4:	bl	21d78 <crc32@@Base+0x85d4>
   225e8:	ldr	r3, [sp, #36]	; 0x24
   225ec:	ldr	r2, [sp, #420]	; 0x1a4
   225f0:	mov	r0, r4
   225f4:	ldr	r3, [r3]
   225f8:	cmp	r2, r3
   225fc:	bne	22a6c <crc32@@Base+0x92c8>
   22600:	add	sp, sp, #428	; 0x1ac
   22604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22608:	movw	r3, #44164	; 0xac84
   2260c:	movw	r2, #44168	; 0xac88
   22610:	movt	r3, #3
   22614:	movt	r2, #3
   22618:	movw	r1, #44176	; 0xac90
   2261c:	mov	r0, r7
   22620:	movt	r1, #3
   22624:	bl	21c74 <crc32@@Base+0x84d0>
   22628:	ldr	r2, [sp, #308]	; 0x134
   2262c:	movw	r3, #21587	; 0x5453
   22630:	movt	r3, #20557	; 0x504d
   22634:	cmp	r2, r3
   22638:	bne	22650 <crc32@@Base+0x8eac>
   2263c:	ldr	r2, [sp, #340]	; 0x154
   22640:	movw	r3, #26483	; 0x6773
   22644:	movt	r3, #27764	; 0x6c74
   22648:	cmp	r2, r3
   2264c:	beq	22678 <crc32@@Base+0x8ed4>
   22650:	add	r1, sp, #340	; 0x154
   22654:	add	r3, sp, #308	; 0x134
   22658:	str	r1, [sp]
   2265c:	movw	r2, #44220	; 0xacbc
   22660:	movw	r1, #45224	; 0xb0a8
   22664:	movt	r2, #3
   22668:	mov	r0, r7
   2266c:	movt	r1, #3
   22670:	bl	21c74 <crc32@@Base+0x84d0>
   22674:	b	225a0 <crc32@@Base+0x8dfc>
   22678:	add	r1, sp, #340	; 0x154
   2267c:	add	r3, sp, #308	; 0x134
   22680:	str	r1, [sp]
   22684:	movw	r2, #44168	; 0xac88
   22688:	movw	r1, #45224	; 0xb0a8
   2268c:	movt	r2, #3
   22690:	mov	r0, r7
   22694:	movt	r1, #3
   22698:	bl	21c74 <crc32@@Base+0x84d0>
   2269c:	ldrb	r4, [sp, #312]	; 0x138
   226a0:	cmp	r4, #1
   226a4:	beq	226d0 <crc32@@Base+0x8f2c>
   226a8:	ldrb	r3, [sp, #313]	; 0x139
   226ac:	str	r3, [sp]
   226b0:	movw	r2, #44220	; 0xacbc
   226b4:	mov	r3, r4
   226b8:	movw	r1, #45272	; 0xb0d8
   226bc:	movt	r2, #3
   226c0:	movt	r1, #3
   226c4:	mov	r0, r7
   226c8:	bl	21c74 <crc32@@Base+0x84d0>
   226cc:	b	225a0 <crc32@@Base+0x8dfc>
   226d0:	ldrb	r2, [sp, #313]	; 0x139
   226d4:	sub	r3, r2, #1
   226d8:	cmp	r3, #1
   226dc:	mov	r3, r2
   226e0:	bhi	226ac <crc32@@Base+0x8f08>
   226e4:	str	r2, [sp]
   226e8:	mov	r3, r4
   226ec:	mov	r0, r7
   226f0:	movw	r2, #44168	; 0xac88
   226f4:	movw	r1, #45272	; 0xb0d8
   226f8:	movt	r2, #3
   226fc:	movt	r1, #3
   22700:	bl	21c74 <crc32@@Base+0x84d0>
   22704:	mov	r3, #0
   22708:	ldrd	r0, [r7, #192]	; 0xc0
   2270c:	movw	r2, #16960	; 0x4240
   22710:	movt	r2, #15
   22714:	bl	35f6c <crc32@@Base+0x1c7c8>
   22718:	mov	r2, #44	; 0x2c
   2271c:	mov	r1, #0
   22720:	mov	r5, r0
   22724:	add	r0, sp, #108	; 0x6c
   22728:	bl	122e4 <memset@plt>
   2272c:	add	r0, sp, #108	; 0x6c
   22730:	str	r4, [sp, #136]	; 0x88
   22734:	bl	12704 <mktime@plt>
   22738:	add	r1, sp, #64	; 0x40
   2273c:	add	r5, r5, r0
   22740:	add	r0, sp, #60	; 0x3c
   22744:	str	r5, [sp, #60]	; 0x3c
   22748:	bl	123bc <gmtime_r@plt>
   2274c:	cmp	r0, #0
   22750:	beq	22a20 <crc32@@Base+0x927c>
   22754:	ldr	r0, [sp, #80]	; 0x50
   22758:	movw	r2, #44168	; 0xac88
   2275c:	ldr	lr, [sp, #76]	; 0x4c
   22760:	movt	r2, #3
   22764:	ldr	ip, [sp, #64]	; 0x40
   22768:	str	r0, [sp, #12]
   2276c:	ldr	r0, [sp, #68]	; 0x44
   22770:	ldr	r1, [sp, #84]	; 0x54
   22774:	str	lr, [sp, #8]
   22778:	str	ip, [sp, #4]
   2277c:	add	r1, r1, #2000	; 0x7d0
   22780:	ldr	r3, [sp, #72]	; 0x48
   22784:	str	r1, [sp, #16]
   22788:	movw	r1, #45316	; 0xb104
   2278c:	str	r0, [sp]
   22790:	movt	r1, #3
   22794:	mov	r0, r7
   22798:	bl	21c74 <crc32@@Base+0x84d0>
   2279c:	ldrh	r0, [r7, #208]	; 0xd0
   227a0:	ldrh	r1, [r7, #204]	; 0xcc
   227a4:	movw	r2, #44168	; 0xac88
   227a8:	ldrh	r3, [r7, #200]	; 0xc8
   227ac:	rev16	r0, r0
   227b0:	rev16	r1, r1
   227b4:	movt	r2, #3
   227b8:	rev16	r3, r3
   227bc:	uxth	r0, r0
   227c0:	uxth	r1, r1
   227c4:	str	r0, [sp, #4]
   227c8:	str	r1, [sp]
   227cc:	uxth	r3, r3
   227d0:	mov	r0, r7
   227d4:	movw	r1, #45380	; 0xb144
   227d8:	movt	r1, #3
   227dc:	bl	21c74 <crc32@@Base+0x84d0>
   227e0:	ldrh	r0, [r7, #220]	; 0xdc
   227e4:	ldrh	r1, [r7, #216]	; 0xd8
   227e8:	movw	r2, #44168	; 0xac88
   227ec:	ldrh	r3, [r7, #212]	; 0xd4
   227f0:	rev16	r0, r0
   227f4:	rev16	r1, r1
   227f8:	movt	r2, #3
   227fc:	rev16	r3, r3
   22800:	uxth	r0, r0
   22804:	uxth	r1, r1
   22808:	str	r0, [sp, #4]
   2280c:	str	r1, [sp]
   22810:	uxth	r3, r3
   22814:	movw	r1, #45424	; 0xb170
   22818:	mov	r0, r7
   2281c:	movt	r1, #3
   22820:	bl	21c74 <crc32@@Base+0x84d0>
   22824:	ldrh	r3, [r7, #162]	; 0xa2
   22828:	bic	r2, r3, #1
   2282c:	cmp	r2, #0
   22830:	beq	228b8 <crc32@@Base+0x9114>
   22834:	tst	r3, #1
   22838:	movweq	r3, #46108	; 0xb41c
   2283c:	movweq	r2, #44220	; 0xacbc
   22840:	movteq	r3, #3
   22844:	bne	22a10 <crc32@@Base+0x926c>
   22848:	movt	r2, #3
   2284c:	movw	r1, #44228	; 0xacc4
   22850:	mov	r0, r7
   22854:	movt	r1, #3
   22858:	bl	21c74 <crc32@@Base+0x84d0>
   2285c:	b	225a0 <crc32@@Base+0x8dfc>
   22860:	movw	r4, #65044	; 0xfe14
   22864:	movt	r4, #4
   22868:	mov	r0, fp
   2286c:	bl	125fc <fclose@plt>
   22870:	ldr	r0, [r4]
   22874:	movw	r2, #45192	; 0xb088
   22878:	ldr	r3, [sp, #156]	; 0x9c
   2287c:	movt	r2, #3
   22880:	mov	r1, #1
   22884:	mvn	r4, #21
   22888:	bl	122b4 <__fprintf_chk@plt>
   2288c:	b	225dc <crc32@@Base+0x8e38>
   22890:	movw	r3, #65044	; 0xfe14
   22894:	movt	r3, #4
   22898:	movw	r0, #44076	; 0xac2c
   2289c:	mov	r2, #32
   228a0:	ldr	r3, [r3]
   228a4:	mov	r1, #1
   228a8:	movt	r0, #3
   228ac:	mvn	r4, #21
   228b0:	bl	12578 <fwrite@plt>
   228b4:	b	225a4 <crc32@@Base+0x8e00>
   228b8:	tst	r3, #1
   228bc:	movwne	r3, #45468	; 0xb19c
   228c0:	movwne	r2, #44168	; 0xac88
   228c4:	movtne	r3, #3
   228c8:	beq	22a00 <crc32@@Base+0x925c>
   228cc:	movt	r2, #3
   228d0:	movw	r1, #44228	; 0xacc4
   228d4:	mov	r0, r7
   228d8:	movt	r1, #3
   228dc:	bl	21c74 <crc32@@Base+0x84d0>
   228e0:	ldrh	r4, [r7, #224]	; 0xe0
   228e4:	cmp	r4, #0
   228e8:	beq	22930 <crc32@@Base+0x918c>
   228ec:	mov	r3, r4
   228f0:	movw	r2, #44220	; 0xacbc
   228f4:	movw	r1, #44268	; 0xacec
   228f8:	movt	r2, #3
   228fc:	movt	r1, #3
   22900:	mov	r0, r7
   22904:	bl	21c74 <crc32@@Base+0x84d0>
   22908:	b	225a0 <crc32@@Base+0x8dfc>
   2290c:	movw	r4, #65044	; 0xfe14
   22910:	movt	r4, #4
   22914:	movw	r0, #43992	; 0xabd8
   22918:	mov	r2, #30
   2291c:	ldr	r3, [r4]
   22920:	mov	r1, #1
   22924:	movt	r0, #3
   22928:	bl	12578 <fwrite@plt>
   2292c:	b	22868 <crc32@@Base+0x90c4>
   22930:	mov	r3, r4
   22934:	movw	r2, #44168	; 0xac88
   22938:	movw	r1, #44268	; 0xacec
   2293c:	movt	r2, #3
   22940:	movt	r1, #3
   22944:	mov	r0, r7
   22948:	bl	21c74 <crc32@@Base+0x84d0>
   2294c:	ldrh	r3, [r7, #180]	; 0xb4
   22950:	cmp	r3, #6
   22954:	beq	2299c <crc32@@Base+0x91f8>
   22958:	movw	r2, #44220	; 0xacbc
   2295c:	movw	r1, #44308	; 0xad14
   22960:	movt	r2, #3
   22964:	movt	r1, #3
   22968:	mov	r0, r7
   2296c:	bl	21c74 <crc32@@Base+0x84d0>
   22970:	b	225a0 <crc32@@Base+0x8dfc>
   22974:	movw	r3, #65044	; 0xfe14
   22978:	movt	r3, #4
   2297c:	movw	r0, #43944	; 0xaba8
   22980:	mov	r2, #23
   22984:	ldr	r3, [r3]
   22988:	mov	r1, #1
   2298c:	movt	r0, #3
   22990:	mvn	r4, #21
   22994:	bl	12578 <fwrite@plt>
   22998:	b	225dc <crc32@@Base+0x8e38>
   2299c:	movw	r2, #44168	; 0xac88
   229a0:	movw	r1, #44308	; 0xad14
   229a4:	movt	r2, #3
   229a8:	movt	r1, #3
   229ac:	mov	r0, r7
   229b0:	bl	21c74 <crc32@@Base+0x84d0>
   229b4:	ldrh	r3, [r7, #184]	; 0xb8
   229b8:	cmp	r3, #1
   229bc:	beq	22a70 <crc32@@Base+0x92cc>
   229c0:	movw	r2, #44220	; 0xacbc
   229c4:	movw	r1, #44348	; 0xad3c
   229c8:	movt	r2, #3
   229cc:	movt	r1, #3
   229d0:	mov	r0, r7
   229d4:	bl	21c74 <crc32@@Base+0x84d0>
   229d8:	b	225a0 <crc32@@Base+0x8dfc>
   229dc:	movw	r4, #65044	; 0xfe14
   229e0:	movt	r4, #4
   229e4:	movw	r0, #43968	; 0xabc0
   229e8:	mov	r2, #21
   229ec:	ldr	r3, [r4]
   229f0:	mov	r1, #1
   229f4:	movt	r0, #3
   229f8:	bl	12578 <fwrite@plt>
   229fc:	b	22868 <crc32@@Base+0x90c4>
   22a00:	movw	r3, #46108	; 0xb41c
   22a04:	movw	r2, #44168	; 0xac88
   22a08:	movt	r3, #3
   22a0c:	b	228cc <crc32@@Base+0x9128>
   22a10:	movw	r3, #45468	; 0xb19c
   22a14:	movw	r2, #44220	; 0xacbc
   22a18:	movt	r3, #3
   22a1c:	b	22848 <crc32@@Base+0x90a4>
   22a20:	ldr	r1, [sp, #80]	; 0x50
   22a24:	movw	r2, #44220	; 0xacbc
   22a28:	ldr	r0, [sp, #64]	; 0x40
   22a2c:	movt	r2, #3
   22a30:	ldr	lr, [sp, #76]	; 0x4c
   22a34:	ldr	ip, [sp, #68]	; 0x44
   22a38:	ldr	r3, [sp, #84]	; 0x54
   22a3c:	str	r1, [sp, #12]
   22a40:	movw	r1, #45316	; 0xb104
   22a44:	add	r3, r3, #2000	; 0x7d0
   22a48:	str	r0, [sp, #4]
   22a4c:	str	r3, [sp, #16]
   22a50:	movt	r1, #3
   22a54:	str	lr, [sp, #8]
   22a58:	mov	r0, r7
   22a5c:	str	ip, [sp]
   22a60:	ldr	r3, [sp, #72]	; 0x48
   22a64:	bl	21c74 <crc32@@Base+0x84d0>
   22a68:	b	225a0 <crc32@@Base+0x8dfc>
   22a6c:	bl	12494 <__stack_chk_fail@plt>
   22a70:	mov	r0, r7
   22a74:	movw	r2, #44168	; 0xac88
   22a78:	movw	r1, #44348	; 0xad3c
   22a7c:	movt	r2, #3
   22a80:	movt	r1, #3
   22a84:	bl	21c74 <crc32@@Base+0x84d0>
   22a88:	ldrh	r3, [r7, #182]	; 0xb6
   22a8c:	mov	r0, r7
   22a90:	movw	r2, #44168	; 0xac88
   22a94:	movw	r1, #44388	; 0xad64
   22a98:	movt	r2, #3
   22a9c:	movt	r1, #3
   22aa0:	bl	21c74 <crc32@@Base+0x84d0>
   22aa4:	ldr	r3, [sp, #324]	; 0x144
   22aa8:	movw	r2, #44168	; 0xac88
   22aac:	movw	r1, #44428	; 0xad8c
   22ab0:	movt	r2, #3
   22ab4:	movt	r1, #3
   22ab8:	mov	r0, r7
   22abc:	bl	21c74 <crc32@@Base+0x84d0>
   22ac0:	ldr	r2, [sp, #32]
   22ac4:	ldr	r3, [sp, #316]	; 0x13c
   22ac8:	cmp	r3, r2, asr #4
   22acc:	beq	22aec <crc32@@Base+0x9348>
   22ad0:	movw	r2, #44220	; 0xacbc
   22ad4:	movw	r1, #45488	; 0xb1b0
   22ad8:	movt	r2, #3
   22adc:	movt	r1, #3
   22ae0:	mov	r0, r7
   22ae4:	bl	21c74 <crc32@@Base+0x84d0>
   22ae8:	b	225a0 <crc32@@Base+0x8dfc>
   22aec:	mov	r0, r7
   22af0:	movw	r2, #44168	; 0xac88
   22af4:	movw	r1, #45488	; 0xb1b0
   22af8:	movt	r2, #3
   22afc:	movt	r1, #3
   22b00:	bl	21c74 <crc32@@Base+0x84d0>
   22b04:	ldrh	r2, [r7, #184]	; 0xb8
   22b08:	ldrh	r0, [r7, #182]	; 0xb6
   22b0c:	ldrh	r3, [r7, #180]	; 0xb4
   22b10:	ldrh	r1, [r7, #178]	; 0xb2
   22b14:	mla	r3, r0, r2, r3
   22b18:	cmp	r3, r1
   22b1c:	beq	22b40 <crc32@@Base+0x939c>
   22b20:	mov	r3, r1
   22b24:	movw	r2, #44220	; 0xacbc
   22b28:	movw	r1, #45528	; 0xb1d8
   22b2c:	movt	r2, #3
   22b30:	movt	r1, #3
   22b34:	mov	r0, r7
   22b38:	bl	21c74 <crc32@@Base+0x84d0>
   22b3c:	b	225a0 <crc32@@Base+0x8dfc>
   22b40:	movw	r2, #44168	; 0xac88
   22b44:	movw	r1, #45528	; 0xb1d8
   22b48:	movt	r2, #3
   22b4c:	movt	r1, #3
   22b50:	mov	r0, r7
   22b54:	bl	21c74 <crc32@@Base+0x84d0>
   22b58:	ldrh	r3, [r7, #176]	; 0xb0
   22b5c:	cmp	r3, #1
   22b60:	beq	22b80 <crc32@@Base+0x93dc>
   22b64:	movw	r2, #44220	; 0xacbc
   22b68:	movw	r1, #45568	; 0xb200
   22b6c:	movt	r2, #3
   22b70:	movt	r1, #3
   22b74:	mov	r0, r7
   22b78:	bl	21c74 <crc32@@Base+0x84d0>
   22b7c:	b	225a0 <crc32@@Base+0x8dfc>
   22b80:	mov	r0, r7
   22b84:	movw	r2, #44168	; 0xac88
   22b88:	movw	r1, #45568	; 0xb200
   22b8c:	movt	r2, #3
   22b90:	movt	r1, #3
   22b94:	bl	21c74 <crc32@@Base+0x84d0>
   22b98:	ldrh	r2, [r7, #184]	; 0xb8
   22b9c:	ldrh	ip, [r7, #182]	; 0xb6
   22ba0:	ldrh	r0, [r7, #180]	; 0xb4
   22ba4:	ldrh	r3, [r7, #176]	; 0xb0
   22ba8:	ldr	r1, [sp, #320]	; 0x140
   22bac:	mla	r2, ip, r2, r0
   22bb0:	add	r3, r2, r3, lsl #1
   22bb4:	cmp	r3, r1
   22bb8:	beq	22bdc <crc32@@Base+0x9438>
   22bbc:	mov	r3, r1
   22bc0:	movw	r2, #44220	; 0xacbc
   22bc4:	movw	r1, #45608	; 0xb228
   22bc8:	movt	r2, #3
   22bcc:	movt	r1, #3
   22bd0:	mov	r0, r7
   22bd4:	bl	21c74 <crc32@@Base+0x84d0>
   22bd8:	b	225a0 <crc32@@Base+0x8dfc>
   22bdc:	mov	r0, r7
   22be0:	movw	r2, #44168	; 0xac88
   22be4:	movw	r1, #45608	; 0xb228
   22be8:	movt	r2, #3
   22bec:	movt	r1, #3
   22bf0:	bl	21c74 <crc32@@Base+0x84d0>
   22bf4:	movw	r1, #45648	; 0xb250
   22bf8:	mov	r0, r7
   22bfc:	movt	r1, #3
   22c00:	bl	21c74 <crc32@@Base+0x84d0>
   22c04:	ldrh	r3, [r7, #182]	; 0xb6
   22c08:	cmp	r3, #0
   22c0c:	bne	22c58 <crc32@@Base+0x94b4>
   22c10:	b	22c74 <crc32@@Base+0x94d0>
   22c14:	ldr	r3, [sp, #196]	; 0xc4
   22c18:	mov	r2, #16
   22c1c:	mov	r1, #1
   22c20:	cmp	r3, #0
   22c24:	streq	r0, [sp, #196]	; 0xc4
   22c28:	ldrne	r3, [sp, #200]	; 0xc8
   22c2c:	strne	r0, [r3, #8]
   22c30:	mov	r3, fp
   22c34:	str	r0, [sp, #200]	; 0xc8
   22c38:	add	r0, r0, #20
   22c3c:	bl	12464 <fread@plt>
   22c40:	cmp	r0, #16
   22c44:	bne	232f4 <crc32@@Base+0x9b50>
   22c48:	ldrh	r3, [r7, #182]	; 0xb6
   22c4c:	add	r4, r4, #1
   22c50:	cmp	r4, r3
   22c54:	bcs	22c74 <crc32@@Base+0x94d0>
   22c58:	mov	r1, #36	; 0x24
   22c5c:	mov	r0, #1
   22c60:	bl	12518 <calloc@plt>
   22c64:	cmp	r0, #0
   22c68:	bne	22c14 <crc32@@Base+0x9470>
   22c6c:	mvn	r4, #11
   22c70:	b	225a4 <crc32@@Base+0x8e00>
   22c74:	mov	r3, fp
   22c78:	mov	r2, #32
   22c7c:	mov	r1, #1
   22c80:	add	r0, sp, #252	; 0xfc
   22c84:	bl	12464 <fread@plt>
   22c88:	cmp	r0, #32
   22c8c:	mov	r4, r0
   22c90:	bne	23348 <crc32@@Base+0x9ba4>
   22c94:	mov	r0, r7
   22c98:	bl	22364 <crc32@@Base+0x8bc0>
   22c9c:	mov	r1, #0
   22ca0:	mov	r0, r7
   22ca4:	bl	21c44 <crc32@@Base+0x84a0>
   22ca8:	mov	r2, r4
   22cac:	add	r1, sp, #252	; 0xfc
   22cb0:	ldr	r0, [sp, #216]	; 0xd8
   22cb4:	bl	12650 <EVP_DigestUpdate@plt>
   22cb8:	mov	r3, #16
   22cbc:	add	r2, sp, #168	; 0xa8
   22cc0:	add	r1, sp, #268	; 0x10c
   22cc4:	ldr	r0, [sp, #212]	; 0xd4
   22cc8:	bl	22280 <crc32@@Base+0x8adc>
   22ccc:	mov	r1, #0
   22cd0:	mov	r0, r7
   22cd4:	bl	21c44 <crc32@@Base+0x84a0>
   22cd8:	ldr	r6, [sp, #196]	; 0xc4
   22cdc:	cmp	r6, #0
   22ce0:	beq	22f2c <crc32@@Base+0x9788>
   22ce4:	movw	r3, #46108	; 0xb41c
   22ce8:	movw	r2, #43872	; 0xab60
   22cec:	movt	r3, #3
   22cf0:	movt	r2, #3
   22cf4:	str	r3, [sp, #40]	; 0x28
   22cf8:	movw	r3, #44540	; 0xadfc
   22cfc:	str	r2, [sp, #52]	; 0x34
   22d00:	movt	r3, #3
   22d04:	movw	r2, #65044	; 0xfe14
   22d08:	str	r3, [sp, #48]	; 0x30
   22d0c:	movt	r2, #4
   22d10:	str	fp, [sp, #28]
   22d14:	str	r2, [sp, #44]	; 0x2c
   22d18:	ldr	r3, [r6, #32]
   22d1c:	mov	r0, r7
   22d20:	ldr	ip, [r6, #28]
   22d24:	tst	r3, #1
   22d28:	ldr	r1, [sp, #48]	; 0x30
   22d2c:	add	ip, ip, #1
   22d30:	ldrbne	r3, [r6, #4]
   22d34:	ldrne	r2, [sp, #52]	; 0x34
   22d38:	lsl	ip, ip, #4
   22d3c:	orrne	r3, r3, #1
   22d40:	str	ip, [r6]
   22d44:	strbne	r3, [r6, #4]
   22d48:	strne	r2, [sp, #40]	; 0x28
   22d4c:	ldr	r2, [r6, #20]
   22d50:	ldr	r3, [sp, #40]	; 0x28
   22d54:	str	ip, [sp]
   22d58:	bl	21c74 <crc32@@Base+0x84d0>
   22d5c:	ldr	r3, [r6, #32]
   22d60:	bics	r2, r3, #1
   22d64:	beq	22d84 <crc32@@Base+0x95e0>
   22d68:	ldr	r0, [sp, #44]	; 0x2c
   22d6c:	movw	r2, #44576	; 0xae20
   22d70:	mov	r1, #1
   22d74:	movt	r2, #3
   22d78:	ldr	r0, [r0]
   22d7c:	bl	122b4 <__fprintf_chk@plt>
   22d80:	ldr	r3, [r6, #32]
   22d84:	tst	r3, #1
   22d88:	beq	22db8 <crc32@@Base+0x9614>
   22d8c:	ldr	r2, [sp, #324]	; 0x144
   22d90:	ldr	r3, [r6, #20]
   22d94:	cmp	r2, r3
   22d98:	beq	22db8 <crc32@@Base+0x9614>
   22d9c:	ldr	r3, [sp, #44]	; 0x2c
   22da0:	movw	r0, #44616	; 0xae48
   22da4:	mov	r2, #59	; 0x3b
   22da8:	movt	r0, #3
   22dac:	mov	r1, #1
   22db0:	ldr	r3, [r3]
   22db4:	bl	12578 <fwrite@plt>
   22db8:	mov	r1, #0
   22dbc:	mov	r0, r7
   22dc0:	bl	21c44 <crc32@@Base+0x84a0>
   22dc4:	mov	sl, #0
   22dc8:	ldr	r3, [r6]
   22dcc:	cmp	r3, sl
   22dd0:	bls	22f1c <crc32@@Base+0x9778>
   22dd4:	mov	r1, #48	; 0x30
   22dd8:	mov	r0, #1
   22ddc:	bl	12518 <calloc@plt>
   22de0:	subs	r5, r0, #0
   22de4:	beq	232bc <crc32@@Base+0x9b18>
   22de8:	ldr	r3, [r6, #12]
   22dec:	add	r8, r5, #32
   22df0:	mov	r2, #16
   22df4:	mov	r1, #1
   22df8:	cmp	r3, #0
   22dfc:	mov	r0, r8
   22e00:	streq	r5, [r6, #12]
   22e04:	ldrne	r3, [r6, #16]
   22e08:	strne	r5, [r3, #4]
   22e0c:	str	r5, [r6, #16]
   22e10:	ldr	r3, [sp, #28]
   22e14:	bl	12464 <fread@plt>
   22e18:	cmp	r0, #16
   22e1c:	mov	r9, r0
   22e20:	bne	232c8 <crc32@@Base+0x9b24>
   22e24:	ldr	fp, [sp, #216]	; 0xd8
   22e28:	add	r4, r5, #16
   22e2c:	mov	r3, r0
   22e30:	mov	r1, r8
   22e34:	mov	r2, r4
   22e38:	ldr	r0, [sp, #212]	; 0xd4
   22e3c:	bl	22280 <crc32@@Base+0x8adc>
   22e40:	mov	r2, r9
   22e44:	mov	r1, r8
   22e48:	mov	r0, fp
   22e4c:	bl	12650 <EVP_DigestUpdate@plt>
   22e50:	add	sl, sl, #16
   22e54:	ldrb	r0, [r5, #16]
   22e58:	mov	ip, #90	; 0x5a
   22e5c:	add	r1, r5, #31
   22e60:	mov	r2, #90	; 0x5a
   22e64:	mov	r3, #0
   22e68:	strb	ip, [r5, #16]
   22e6c:	b	22e74 <crc32@@Base+0x96d0>
   22e70:	ldrb	r2, [r4, #1]!
   22e74:	add	r3, r2, r3
   22e78:	cmp	r4, r1
   22e7c:	uxtb	r3, r3
   22e80:	bne	22e70 <crc32@@Base+0x96cc>
   22e84:	cmp	r0, r3
   22e88:	strb	r0, [r5, #16]
   22e8c:	ldrb	r3, [r5, #17]
   22e90:	beq	23200 <crc32@@Base+0x9a5c>
   22e94:	cmp	r3, #6
   22e98:	ldrls	pc, [pc, r3, lsl #2]
   22e9c:	b	231d4 <crc32@@Base+0x9a30>
   22ea0:	ldrdeq	r3, [r2], -ip
   22ea4:	andeq	r3, r2, r8, lsl #3
   22ea8:	strheq	r3, [r2], -r8
   22eac:	andeq	r3, r2, r8, lsl #1
   22eb0:	andeq	r3, r2, r0, asr #32
   22eb4:	strdeq	r2, [r2], -r8
   22eb8:			; <UNDEFINED> instruction: 0x00022ebc
   22ebc:	movw	r4, #43884	; 0xab6c
   22ec0:	movt	r4, #3
   22ec4:	mov	r1, #0
   22ec8:	ldr	r0, [r5, #28]
   22ecc:	mov	r3, r1
   22ed0:	ldr	r2, [pc, #1240]	; 233b0 <crc32@@Base+0x9c0c>
   22ed4:	b	22edc <crc32@@Base+0x9738>
   22ed8:	ldrb	r1, [r2, #-12]
   22edc:	cmp	r0, r1
   22ee0:	beq	23290 <crc32@@Base+0x9aec>
   22ee4:	add	r3, r3, #1
   22ee8:	add	r2, r2, #12
   22eec:	cmp	r3, #9
   22ef0:	bne	22ed8 <crc32@@Base+0x9734>
   22ef4:	ldr	r0, [sp, #44]	; 0x2c
   22ef8:	mov	r3, r4
   22efc:	movw	r2, #45024	; 0xafe0
   22f00:	mov	r1, #1
   22f04:	movt	r2, #3
   22f08:	ldr	r0, [r0]
   22f0c:	bl	122b4 <__fprintf_chk@plt>
   22f10:	ldr	r3, [r6]
   22f14:	cmp	r3, sl
   22f18:	bhi	22dd4 <crc32@@Base+0x9630>
   22f1c:	ldr	r6, [r6, #8]
   22f20:	cmp	r6, #0
   22f24:	bne	22d18 <crc32@@Base+0x9574>
   22f28:	ldr	fp, [sp, #28]
   22f2c:	mov	r0, r7
   22f30:	movw	r1, #45700	; 0xb284
   22f34:	movt	r1, #3
   22f38:	bl	21c74 <crc32@@Base+0x84d0>
   22f3c:	mov	r3, fp
   22f40:	mov	r2, #32
   22f44:	mov	r1, #1
   22f48:	add	r0, sp, #388	; 0x184
   22f4c:	bl	12464 <fread@plt>
   22f50:	cmp	r0, #32
   22f54:	mov	r4, r0
   22f58:	bne	23348 <crc32@@Base+0x9ba4>
   22f5c:	mov	r0, fp
   22f60:	bl	12524 <ftell@plt>
   22f64:	ldr	r3, [sp, #32]
   22f68:	cmp	r3, r0
   22f6c:	bne	23370 <crc32@@Base+0x9bcc>
   22f70:	mov	r2, #0
   22f74:	add	r1, sp, #220	; 0xdc
   22f78:	ldr	r0, [sp, #216]	; 0xd8
   22f7c:	bl	1253c <EVP_DigestFinal@plt>
   22f80:	ldr	r5, [sp, #216]	; 0xd8
   22f84:	mov	r0, r5
   22f88:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   22f8c:	mov	r0, r5
   22f90:	bl	124b8 <CRYPTO_free@plt>
   22f94:	mov	r1, #0
   22f98:	mov	r0, r7
   22f9c:	bl	21c44 <crc32@@Base+0x84a0>
   22fa0:	add	r2, sp, #388	; 0x184
   22fa4:	mov	r3, r4
   22fa8:	ldr	r0, [sp, #212]	; 0xd4
   22fac:	mov	r1, r2
   22fb0:	bl	22280 <crc32@@Base+0x8adc>
   22fb4:	add	r1, sp, #220	; 0xdc
   22fb8:	add	r0, sp, #388	; 0x184
   22fbc:	mov	r2, #20
   22fc0:	bl	126c8 <memcmp@plt>
   22fc4:	subs	r4, r0, #0
   22fc8:	bne	23398 <crc32@@Base+0x9bf4>
   22fcc:	mov	r0, r7
   22fd0:	movw	r1, #45128	; 0xb048
   22fd4:	movt	r1, #3
   22fd8:	bl	21c74 <crc32@@Base+0x84d0>
   22fdc:	movw	r1, #44112	; 0xac50
   22fe0:	mov	r0, r7
   22fe4:	movt	r1, #3
   22fe8:	bl	21c74 <crc32@@Base+0x84d0>
   22fec:	movw	r2, #43936	; 0xaba0
   22ff0:	movt	r2, #3
   22ff4:	b	225bc <crc32@@Base+0x8e18>
   22ff8:	movw	r2, #43884	; 0xab6c
   22ffc:	movt	r2, #3
   23000:	ldrh	r0, [r5, #18]
   23004:	movw	r1, #43920	; 0xab90
   23008:	ldr	r3, [r5, #20]
   2300c:	movt	r1, #3
   23010:	str	r2, [sp, #4]
   23014:	tst	r0, #1
   23018:	ldr	r0, [r5, #28]
   2301c:	movw	r2, #46108	; 0xb41c
   23020:	movt	r2, #3
   23024:	movne	r2, r1
   23028:	movw	r1, #44968	; 0xafa8
   2302c:	movt	r1, #3
   23030:	str	r0, [sp]
   23034:	mov	r0, r7
   23038:	bl	21c74 <crc32@@Base+0x84d0>
   2303c:	b	22dc8 <crc32@@Base+0x9624>
   23040:	movw	r2, #43884	; 0xab6c
   23044:	movt	r2, #3
   23048:	ldrh	r0, [r5, #18]
   2304c:	movw	r1, #43920	; 0xab90
   23050:	ldr	r3, [r5, #20]
   23054:	movt	r1, #3
   23058:	str	r2, [sp, #4]
   2305c:	tst	r0, #1
   23060:	ldr	r0, [r5, #28]
   23064:	movw	r2, #46108	; 0xb41c
   23068:	movt	r2, #3
   2306c:	movne	r2, r1
   23070:	movw	r1, #44928	; 0xaf80
   23074:	movt	r1, #3
   23078:	str	r0, [sp]
   2307c:	mov	r0, r7
   23080:	bl	21c74 <crc32@@Base+0x84d0>
   23084:	b	22dc8 <crc32@@Base+0x9624>
   23088:	movw	r0, #43884	; 0xab6c
   2308c:	movt	r0, #3
   23090:	ldr	r3, [r5, #24]
   23094:	movw	r1, #44872	; 0xaf48
   23098:	ldr	r2, [r5, #20]
   2309c:	movt	r1, #3
   230a0:	str	r0, [sp, #4]
   230a4:	mov	r0, r7
   230a8:	ldr	ip, [r5, #28]
   230ac:	str	ip, [sp]
   230b0:	bl	21c74 <crc32@@Base+0x84d0>
   230b4:	b	22dc8 <crc32@@Base+0x9624>
   230b8:	movw	r0, #43884	; 0xab6c
   230bc:	movt	r0, #3
   230c0:	ldr	r3, [r5, #24]
   230c4:	movw	r1, #44740	; 0xaec4
   230c8:	ldr	r2, [r5, #20]
   230cc:	movt	r1, #3
   230d0:	str	r0, [sp]
   230d4:	mov	r0, r7
   230d8:	bl	21c74 <crc32@@Base+0x84d0>
   230dc:	ldr	r3, [r5, #24]
   230e0:	add	r4, r3, #15
   230e4:	bic	r4, r4, #15
   230e8:	str	r3, [r5, #12]
   230ec:	mov	r0, r4
   230f0:	bl	125a8 <malloc@plt>
   230f4:	cmp	r0, #0
   230f8:	str	r0, [r5, #8]
   230fc:	beq	231d4 <crc32@@Base+0x9a30>
   23100:	ldr	r3, [sp, #28]
   23104:	mov	r2, r4
   23108:	mov	r1, #1
   2310c:	bl	12464 <fread@plt>
   23110:	cmp	r4, r0
   23114:	bne	2331c <crc32@@Base+0x9b78>
   23118:	mov	r2, r4
   2311c:	ldr	r1, [r5, #8]
   23120:	ldr	r0, [sp, #216]	; 0xd8
   23124:	add	sl, sl, r4
   23128:	bl	12650 <EVP_DigestUpdate@plt>
   2312c:	ldr	r2, [r5, #8]
   23130:	mov	r3, r4
   23134:	ldr	r0, [sp, #212]	; 0xd4
   23138:	mov	r1, r2
   2313c:	bl	22280 <crc32@@Base+0x8adc>
   23140:	mov	r2, r4
   23144:	ldr	r1, [r5, #8]
   23148:	mov	r0, #0
   2314c:	ldr	r4, [r5, #28]
   23150:	bl	25354 <crc32@@Base+0xbbb0>
   23154:	cmp	r4, r0
   23158:	beq	22dc8 <crc32@@Base+0x9624>
   2315c:	movw	r3, #65044	; 0xfe14
   23160:	movt	r3, #4
   23164:	movw	r0, #44824	; 0xaf18
   23168:	mov	r2, #44	; 0x2c
   2316c:	ldr	r3, [r3]
   23170:	mov	r1, #1
   23174:	movt	r0, #3
   23178:	ldr	fp, [sp, #28]
   2317c:	mvn	r4, #21
   23180:	bl	12578 <fwrite@plt>
   23184:	b	225a4 <crc32@@Base+0x8e00>
   23188:	movw	r3, #43884	; 0xab6c
   2318c:	movt	r3, #3
   23190:	mvn	r4, #21
   23194:	ldrh	r0, [r5, #18]
   23198:	movw	r1, #43912	; 0xab88
   2319c:	movt	r1, #3
   231a0:	movw	r2, #46108	; 0xb41c
   231a4:	tst	r0, #1
   231a8:	movt	r2, #3
   231ac:	mov	r0, r7
   231b0:	movne	r2, r1
   231b4:	movw	r1, #44724	; 0xaeb4
   231b8:	movt	r1, #3
   231bc:	bl	21c74 <crc32@@Base+0x84d0>
   231c0:	mov	r1, #0
   231c4:	mov	r0, r7
   231c8:	bl	21c44 <crc32@@Base+0x84a0>
   231cc:	cmp	r4, #0
   231d0:	beq	22dc8 <crc32@@Base+0x9624>
   231d4:	ldr	fp, [sp, #28]
   231d8:	b	225a0 <crc32@@Base+0x8dfc>
   231dc:	movw	r2, #43884	; 0xab6c
   231e0:	movw	r1, #44712	; 0xaea8
   231e4:	movt	r2, #3
   231e8:	movt	r1, #3
   231ec:	mov	r0, r7
   231f0:	ldr	fp, [sp, #28]
   231f4:	mvn	r4, #21
   231f8:	bl	21c74 <crc32@@Base+0x84d0>
   231fc:	b	225a4 <crc32@@Base+0x8e00>
   23200:	cmp	r3, #6
   23204:	ldrls	pc, [pc, r3, lsl #2]
   23208:	b	22dc8 <crc32@@Base+0x9624>
   2320c:	andeq	r3, r2, r4, ror r2
   23210:	andeq	r3, r2, r4, ror #4
   23214:	andeq	r3, r2, r8, asr r2
   23218:	andeq	r3, r2, ip, asr #4
   2321c:	andeq	r3, r2, r0, asr #4
   23220:	andeq	r3, r2, r4, lsr r2
   23224:	andeq	r3, r2, r8, lsr #4
   23228:	movw	r4, #43900	; 0xab7c
   2322c:	movt	r4, #3
   23230:	b	22ec4 <crc32@@Base+0x9720>
   23234:	movw	r2, #43900	; 0xab7c
   23238:	movt	r2, #3
   2323c:	b	23000 <crc32@@Base+0x985c>
   23240:	movw	r2, #43900	; 0xab7c
   23244:	movt	r2, #3
   23248:	b	23048 <crc32@@Base+0x98a4>
   2324c:	movw	r0, #43900	; 0xab7c
   23250:	movt	r0, #3
   23254:	b	23090 <crc32@@Base+0x98ec>
   23258:	movw	r0, #43900	; 0xab7c
   2325c:	movt	r0, #3
   23260:	b	230c0 <crc32@@Base+0x991c>
   23264:	movw	r3, #43900	; 0xab7c
   23268:	mov	r4, #0
   2326c:	movt	r3, #3
   23270:	b	23194 <crc32@@Base+0x99f0>
   23274:	movw	r2, #43900	; 0xab7c
   23278:	movw	r1, #44712	; 0xaea8
   2327c:	movt	r2, #3
   23280:	movt	r1, #3
   23284:	mov	r0, r7
   23288:	bl	21c74 <crc32@@Base+0x84d0>
   2328c:	b	22dc8 <crc32@@Base+0x9624>
   23290:	mov	r2, #12
   23294:	movw	ip, #43280	; 0xa910
   23298:	mul	r2, r2, r3
   2329c:	movt	ip, #3
   232a0:	movw	r1, #45008	; 0xafd0
   232a4:	mov	r3, r4
   232a8:	movt	r1, #3
   232ac:	mov	r0, r7
   232b0:	ldr	r2, [ip, r2]
   232b4:	bl	21c74 <crc32@@Base+0x84d0>
   232b8:	b	22ef4 <crc32@@Base+0x9750>
   232bc:	ldr	fp, [sp, #28]
   232c0:	mvn	r4, #11
   232c4:	b	225a4 <crc32@@Base+0x8e00>
   232c8:	movw	r3, #65044	; 0xfe14
   232cc:	movt	r3, #4
   232d0:	movw	r0, #44676	; 0xae84
   232d4:	mov	r2, #34	; 0x22
   232d8:	ldr	r3, [r3]
   232dc:	mov	r1, #1
   232e0:	movt	r0, #3
   232e4:	ldr	fp, [sp, #28]
   232e8:	mvn	r4, #21
   232ec:	bl	12578 <fwrite@plt>
   232f0:	b	225a4 <crc32@@Base+0x8e00>
   232f4:	movw	r3, #65044	; 0xfe14
   232f8:	movt	r3, #4
   232fc:	movw	r0, #44468	; 0xadb4
   23300:	mov	r2, #34	; 0x22
   23304:	ldr	r3, [r3]
   23308:	mov	r1, #1
   2330c:	movt	r0, #3
   23310:	mvn	r4, #21
   23314:	bl	12578 <fwrite@plt>
   23318:	b	225a4 <crc32@@Base+0x8e00>
   2331c:	movw	r3, #65044	; 0xfe14
   23320:	movt	r3, #4
   23324:	movw	r0, #44780	; 0xaeec
   23328:	mov	r2, #40	; 0x28
   2332c:	ldr	r3, [r3]
   23330:	mov	r1, #1
   23334:	movt	r0, #3
   23338:	ldr	fp, [sp, #28]
   2333c:	mvn	r4, #21
   23340:	bl	12578 <fwrite@plt>
   23344:	b	225a4 <crc32@@Base+0x8e00>
   23348:	movw	r3, #65044	; 0xfe14
   2334c:	movt	r3, #4
   23350:	movw	r0, #44504	; 0xadd8
   23354:	mov	r2, #34	; 0x22
   23358:	ldr	r3, [r3]
   2335c:	mov	r1, #1
   23360:	movt	r0, #3
   23364:	mvn	r4, #21
   23368:	bl	12578 <fwrite@plt>
   2336c:	b	225a4 <crc32@@Base+0x8e00>
   23370:	movw	r3, #65044	; 0xfe14
   23374:	movt	r3, #4
   23378:	movw	r0, #45048	; 0xaff8
   2337c:	mov	r2, #35	; 0x23
   23380:	ldr	r3, [r3]
   23384:	mov	r1, #1
   23388:	movt	r0, #3
   2338c:	mvn	r4, #21
   23390:	bl	12578 <fwrite@plt>
   23394:	b	225a4 <crc32@@Base+0x8e00>
   23398:	movw	r1, #45084	; 0xb01c
   2339c:	mov	r0, r7
   233a0:	movt	r1, #3
   233a4:	mvn	r4, #21
   233a8:	bl	21c74 <crc32@@Base+0x84d0>
   233ac:	b	225a4 <crc32@@Base+0x8e00>
   233b0:	andeq	sl, r3, r4, lsr #18
   233b4:	movw	r3, #43356	; 0xa95c
   233b8:	movt	r3, #30
   233bc:	ldr	r0, [r3]
   233c0:	cmp	r0, #0
   233c4:	bxeq	lr
   233c8:	mov	r1, #0
   233cc:	b	223f8 <crc32@@Base+0x8c54>
   233d0:	cmp	r0, #0
   233d4:	beq	233e4 <crc32@@Base+0x9c40>
   233d8:	ldrb	r3, [r0, #20]
   233dc:	cmp	r3, #83	; 0x53
   233e0:	beq	233ec <crc32@@Base+0x9c48>
   233e4:	mvn	r0, #21
   233e8:	bx	lr
   233ec:	ldrb	r3, [r0, #21]
   233f0:	cmp	r3, #84	; 0x54
   233f4:	bne	233e4 <crc32@@Base+0x9c40>
   233f8:	ldrb	r3, [r0, #22]
   233fc:	cmp	r3, #77	; 0x4d
   23400:	bne	233e4 <crc32@@Base+0x9c40>
   23404:	ldrb	r3, [r0, #23]
   23408:	cmp	r3, #80	; 0x50
   2340c:	bne	233e4 <crc32@@Base+0x9c40>
   23410:	ldrb	r3, [r0, #52]	; 0x34
   23414:	cmp	r3, #115	; 0x73
   23418:	bne	233e4 <crc32@@Base+0x9c40>
   2341c:	ldrb	r3, [r0, #53]	; 0x35
   23420:	cmp	r3, #103	; 0x67
   23424:	bne	233e4 <crc32@@Base+0x9c40>
   23428:	ldrb	r3, [r0, #54]	; 0x36
   2342c:	cmp	r3, #116	; 0x74
   23430:	bne	233e4 <crc32@@Base+0x9c40>
   23434:	ldrb	r3, [r0, #55]	; 0x37
   23438:	cmp	r3, #108	; 0x6c
   2343c:	bne	233e4 <crc32@@Base+0x9c40>
   23440:	ldr	r2, [r2, #76]	; 0x4c
   23444:	movw	r3, #43356	; 0xa95c
   23448:	movt	r3, #30
   2344c:	mov	r1, #1
   23450:	mov	r0, r2
   23454:	str	r2, [r3]
   23458:	b	223f8 <crc32@@Base+0x8c54>
   2345c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23460:	movw	r3, #61168	; 0xeef0
   23464:	sub	sp, sp, #340	; 0x154
   23468:	movt	r3, #4
   2346c:	mov	r5, r0
   23470:	mov	r2, #232	; 0xe8
   23474:	str	r3, [sp, #8]
   23478:	mov	r4, #1
   2347c:	ldr	r3, [r3]
   23480:	add	r0, sp, #96	; 0x60
   23484:	str	r1, [sp, #16]
   23488:	mov	r1, #0
   2348c:	str	r4, [r5, #32]
   23490:	str	r3, [sp, #332]	; 0x14c
   23494:	bl	122e4 <memset@plt>
   23498:	ldr	r3, [r5, #64]	; 0x40
   2349c:	movw	r1, #49540	; 0xc184
   234a0:	ldr	ip, [r5, #76]	; 0x4c
   234a4:	movt	r1, #3
   234a8:	mov	r2, #0
   234ac:	str	r2, [sp, #32]
   234b0:	mov	r0, r3
   234b4:	str	r3, [sp, #108]	; 0x6c
   234b8:	str	ip, [sp, #104]	; 0x68
   234bc:	bl	1232c <fopen@plt>
   234c0:	subs	r5, r0, #0
   234c4:	beq	24874 <crc32@@Base+0xb0d0>
   234c8:	movw	r8, #65044	; 0xfe14
   234cc:	movw	fp, #45796	; 0xb2e4
   234d0:	movt	r8, #4
   234d4:	movt	fp, #3
   234d8:	movw	r3, #45772	; 0xb2cc
   234dc:	movt	r3, #3
   234e0:	str	r3, [sp, #12]
   234e4:	mov	r3, r5
   234e8:	mov	r2, #10
   234ec:	add	r1, sp, #36	; 0x24
   234f0:	add	r0, sp, #32
   234f4:	bl	12134 <__getdelim@plt>
   234f8:	cmp	r0, #0
   234fc:	ble	23770 <crc32@@Base+0x9fcc>
   23500:	ldr	r3, [sp, #32]
   23504:	mov	r2, #0
   23508:	add	r3, r3, r0
   2350c:	strb	r2, [r3, #-1]
   23510:	ldr	r7, [sp, #32]
   23514:	str	r0, [sp, #56]	; 0x38
   23518:	str	r4, [sp, #60]	; 0x3c
   2351c:	str	r7, [sp, #52]	; 0x34
   23520:	ldrb	r3, [r7]
   23524:	cmp	r3, #32
   23528:	bne	23538 <crc32@@Base+0x9d94>
   2352c:	ldrb	r3, [r7, #1]!
   23530:	cmp	r3, #32
   23534:	beq	2352c <crc32@@Base+0x9d88>
   23538:	cmp	r3, #0
   2353c:	beq	2441c <crc32@@Base+0xac78>
   23540:	add	r6, r7, #1
   23544:	mov	r3, r6
   23548:	b	23554 <crc32@@Base+0x9db0>
   2354c:	cmp	r2, #32
   23550:	beq	2374c <crc32@@Base+0x9fa8>
   23554:	ldrb	r2, [r3]
   23558:	mov	sl, r3
   2355c:	add	r3, r3, #1
   23560:	cmp	r2, #0
   23564:	bne	2354c <crc32@@Base+0x9da8>
   23568:	ldrb	r3, [r7]
   2356c:	cmp	r3, #0
   23570:	beq	23d1c <crc32@@Base+0xa578>
   23574:	mov	r1, fp
   23578:	mov	r0, r7
   2357c:	str	sl, [sp, #52]	; 0x34
   23580:	bl	1265c <strcmp@plt>
   23584:	cmp	r0, #0
   23588:	beq	2375c <crc32@@Base+0x9fb8>
   2358c:	ldrb	r9, [r7]
   23590:	cmp	r9, #68	; 0x44
   23594:	bne	23648 <crc32@@Base+0x9ea4>
   23598:	ldrb	r3, [r7, #1]
   2359c:	cmp	r3, #67	; 0x43
   235a0:	bne	23648 <crc32@@Base+0x9ea4>
   235a4:	ldrb	r3, [r7, #2]
   235a8:	cmp	r3, #68	; 0x44
   235ac:	bne	23648 <crc32@@Base+0x9ea4>
   235b0:	ldrb	r0, [r7, #3]
   235b4:	cmp	r0, #0
   235b8:	bne	23648 <crc32@@Base+0x9ea4>
   235bc:	ldrb	r3, [sp, #96]	; 0x60
   235c0:	mov	r1, #20
   235c4:	bfi	r3, r0, #0, #1
   235c8:	mov	r0, #1
   235cc:	uxtb	r3, r3
   235d0:	orr	r3, r3, #2
   235d4:	strb	r3, [sp, #96]	; 0x60
   235d8:	bl	12518 <calloc@plt>
   235dc:	subs	r6, r0, #0
   235e0:	beq	23768 <crc32@@Base+0x9fc4>
   235e4:	mov	r2, #4
   235e8:	add	r1, r6, #12
   235ec:	add	r0, r6, #8
   235f0:	bl	21df8 <crc32@@Base+0x8654>
   235f4:	cmp	r0, #0
   235f8:	bne	23f48 <crc32@@Base+0xa7a4>
   235fc:	movw	r1, #31772	; 0x7c1c
   23600:	ldr	r0, [sp, #52]	; 0x34
   23604:	movt	r1, #3
   23608:	bl	12278 <strtok@plt>
   2360c:	cmp	r0, #0
   23610:	beq	23f30 <crc32@@Base+0xa78c>
   23614:	add	r1, sp, #48	; 0x30
   23618:	bl	21aa4 <crc32@@Base+0x8300>
   2361c:	cmp	r0, #0
   23620:	bne	243a4 <crc32@@Base+0xac00>
   23624:	ldr	r2, [sp, #148]	; 0x94
   23628:	ldr	r3, [sp, #48]	; 0x30
   2362c:	cmp	r2, #0
   23630:	streq	r6, [sp, #148]	; 0x94
   23634:	str	r3, [r6, #4]
   23638:	ldrne	r3, [sp, #152]	; 0x98
   2363c:	strne	r6, [r3]
   23640:	str	r6, [sp, #152]	; 0x98
   23644:	b	23768 <crc32@@Base+0x9fc4>
   23648:	movw	r1, #45888	; 0xb340
   2364c:	mov	r0, r7
   23650:	movt	r1, #3
   23654:	bl	1265c <strcmp@plt>
   23658:	ldrb	r3, [sp, #96]	; 0x60
   2365c:	subs	ip, r0, #0
   23660:	beq	23d34 <crc32@@Base+0xa590>
   23664:	tst	r3, #3
   23668:	beq	24678 <crc32@@Base+0xaed4>
   2366c:	tst	r3, #1
   23670:	beq	23cb4 <crc32@@Base+0xa510>
   23674:	cmp	r9, #78	; 0x4e
   23678:	beq	23da0 <crc32@@Base+0xa5fc>
   2367c:	cmp	r9, #84	; 0x54
   23680:	bne	23e08 <crc32@@Base+0xa664>
   23684:	ldrb	r3, [r7, #1]
   23688:	cmp	r3, #65	; 0x41
   2368c:	bne	23e08 <crc32@@Base+0xa664>
   23690:	ldrb	r3, [r7, #2]
   23694:	cmp	r3, #71	; 0x47
   23698:	bne	23e08 <crc32@@Base+0xa664>
   2369c:	ldrb	r3, [r7, #3]
   236a0:	cmp	r3, #0
   236a4:	bne	23e08 <crc32@@Base+0xa664>
   236a8:	mov	r1, #48	; 0x30
   236ac:	mov	r0, #1
   236b0:	ldr	r7, [sp, #144]	; 0x90
   236b4:	bl	12518 <calloc@plt>
   236b8:	subs	r6, r0, #0
   236bc:	beq	23768 <crc32@@Base+0x9fc4>
   236c0:	mov	r0, sl
   236c4:	movw	r1, #31772	; 0x7c1c
   236c8:	movt	r1, #3
   236cc:	bl	12278 <strtok@plt>
   236d0:	cmp	r0, #0
   236d4:	beq	236f0 <crc32@@Base+0x9f4c>
   236d8:	movw	r1, #43912	; 0xab88
   236dc:	movt	r1, #3
   236e0:	bl	1265c <strcmp@plt>
   236e4:	cmp	r0, #0
   236e8:	moveq	r3, #1
   236ec:	strheq	r3, [r6, #18]
   236f0:	movw	r3, #346	; 0x15a
   236f4:	strh	r3, [r6, #16]
   236f8:	ldr	r1, [r7, #12]
   236fc:	mov	r2, #16
   23700:	ldrb	r3, [sp, #96]	; 0x60
   23704:	cmp	r1, #0
   23708:	str	r2, [r6]
   2370c:	and	r3, r3, #1
   23710:	beq	245d0 <crc32@@Base+0xae2c>
   23714:	ldr	r2, [r7, #16]
   23718:	cmp	r3, #0
   2371c:	str	r6, [r2, #4]
   23720:	str	r6, [r7, #16]
   23724:	beq	23768 <crc32@@Base+0x9fc4>
   23728:	ldr	r6, [sp, #144]	; 0x90
   2372c:	ldr	r3, [r6, #16]
   23730:	ldr	r3, [r3]
   23734:	ldr	r2, [r6]
   23738:	add	r3, r3, r2
   2373c:	str	r3, [r6]
   23740:	lsr	r3, r3, #4
   23744:	str	r3, [r6, #28]
   23748:	b	23768 <crc32@@Base+0x9fc4>
   2374c:	mov	r1, #0
   23750:	strb	r1, [sl]
   23754:	mov	sl, r3
   23758:	b	23568 <crc32@@Base+0x9dc4>
   2375c:	ldrb	r3, [sp, #96]	; 0x60
   23760:	orr	r3, r3, #4
   23764:	strb	r3, [sp, #96]	; 0x60
   23768:	add	r4, r4, #1
   2376c:	b	234e4 <crc32@@Base+0x9d40>
   23770:	ldr	r0, [sp, #32]
   23774:	mov	r6, #0
   23778:	bl	12128 <free@plt>
   2377c:	mov	r0, r5
   23780:	bl	125fc <fclose@plt>
   23784:	add	lr, sp, #304	; 0x130
   23788:	movw	r3, #21587	; 0x5453
   2378c:	movt	r3, #20557	; 0x504d
   23790:	str	r3, [sp, #252]	; 0xfc
   23794:	movw	r3, #26483	; 0x6773
   23798:	movt	r3, #27764	; 0x6c74
   2379c:	str	r3, [sp, #284]	; 0x11c
   237a0:	movw	r3, #39177	; 0x9909
   237a4:	movt	r3, #65535	; 0xffff
   237a8:	strh	r3, [lr]
   237ac:	add	lr, sp, #308	; 0x134
   237b0:	add	ip, sp, #320	; 0x140
   237b4:	mov	r1, r6
   237b8:	strh	r3, [lr]
   237bc:	add	lr, sp, #312	; 0x138
   237c0:	strh	r6, [ip]
   237c4:	add	ip, sp, #296	; 0x128
   237c8:	strh	r3, [lr]
   237cc:	add	lr, sp, #316	; 0x13c
   237d0:	strh	r3, [ip]
   237d4:	add	ip, sp, #300	; 0x12c
   237d8:	strh	r3, [lr]
   237dc:	add	lr, sp, #256	; 0x100
   237e0:	strh	r3, [ip]
   237e4:	movw	ip, #257	; 0x101
   237e8:	strh	ip, [lr]
   237ec:	add	ip, sp, #276	; 0x114
   237f0:	mov	r3, #6
   237f4:	mov	r2, #44	; 0x2c
   237f8:	strh	r3, [ip]
   237fc:	add	r3, sp, #280	; 0x118
   23800:	mov	r5, #1
   23804:	add	r0, sp, #52	; 0x34
   23808:	strh	r5, [r3]
   2380c:	bl	122e4 <memset@plt>
   23810:	add	r0, sp, #52	; 0x34
   23814:	mov	r3, #100	; 0x64
   23818:	str	r5, [sp, #80]	; 0x50
   2381c:	str	r3, [sp, #72]	; 0x48
   23820:	bl	12704 <mktime@plt>
   23824:	mov	r4, r0
   23828:	mov	r0, r6
   2382c:	bl	12674 <time@plt>
   23830:	add	lr, sp, #272	; 0x110
   23834:	movw	r2, #16960	; 0x4240
   23838:	movt	r2, #15
   2383c:	ldrb	r3, [sp, #96]	; 0x60
   23840:	ldr	ip, [sp, #128]	; 0x80
   23844:	strh	r5, [lr]
   23848:	add	r5, sp, #276	; 0x114
   2384c:	add	r5, r5, #2
   23850:	ldr	r1, [sp, #140]	; 0x8c
   23854:	add	lr, sp, #276	; 0x114
   23858:	strh	ip, [r5]
   2385c:	add	r5, sp, #256	; 0x100
   23860:	cmp	r1, r6
   23864:	add	r5, r5, #2
   23868:	ldrh	lr, [lr]
   2386c:	ubfx	r3, r3, #2, #1
   23870:	strh	r3, [r5]
   23874:	add	r5, lr, #2
   23878:	str	r5, [sp, #260]	; 0x104
   2387c:	sub	r0, r0, r4
   23880:	mul	r2, r2, r0
   23884:	add	r0, sp, #288	; 0x120
   23888:	asr	r3, r2, #31
   2388c:	strd	r2, [r0]
   23890:	beq	238ac <crc32@@Base+0xa108>
   23894:	ldr	r3, [r1]
   23898:	ldr	r1, [r1, #8]
   2389c:	cmp	r1, #0
   238a0:	add	r5, r5, r3, lsr #4
   238a4:	bne	23894 <crc32@@Base+0xa0f0>
   238a8:	str	r5, [sp, #260]	; 0x104
   238ac:	ldrb	r3, [sp, #136]	; 0x88
   238b0:	tst	r3, #1
   238b4:	beq	24938 <crc32@@Base+0xb194>
   238b8:	add	r3, sp, #280	; 0x118
   238bc:	uxth	ip, ip
   238c0:	ldr	r2, [sp, #260]	; 0x104
   238c4:	ldrh	r3, [r3]
   238c8:	add	r2, r2, #2
   238cc:	ldr	r1, [sp, #132]	; 0x84
   238d0:	mul	ip, r3, ip
   238d4:	str	r1, [sp, #268]	; 0x10c
   238d8:	add	r3, lr, ip
   238dc:	add	ip, ip, r2
   238e0:	add	r2, sp, #272	; 0x110
   238e4:	str	ip, [sp, #260]	; 0x104
   238e8:	add	r2, r2, #2
   238ec:	uxth	r3, r3
   238f0:	strh	r3, [r2]
   238f4:	add	r3, r3, #2
   238f8:	str	r3, [sp, #264]	; 0x108
   238fc:	bl	223b8 <crc32@@Base+0x8c14>
   23900:	mov	r4, r0
   23904:	bl	1220c <EVP_sha1@plt>
   23908:	mov	r1, r0
   2390c:	mov	r0, r4
   23910:	bl	12080 <EVP_DigestInit@plt>
   23914:	mov	r2, #76	; 0x4c
   23918:	add	r1, sp, #252	; 0xfc
   2391c:	mov	r0, r4
   23920:	bl	12650 <EVP_DigestUpdate@plt>
   23924:	add	r1, sp, #232	; 0xe8
   23928:	mov	r2, #0
   2392c:	mov	r0, r4
   23930:	bl	1253c <EVP_DigestFinal@plt>
   23934:	mov	r0, r4
   23938:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   2393c:	mov	r0, r4
   23940:	bl	124b8 <CRYPTO_free@plt>
   23944:	ldr	lr, [sp, #140]	; 0x8c
   23948:	ldr	r5, [sp, #264]	; 0x108
   2394c:	cmp	lr, #0
   23950:	beq	239d4 <crc32@@Base+0xa230>
   23954:	ldr	ip, [lr, #12]
   23958:	add	r2, r5, #1
   2395c:	ldr	r3, [lr, #28]
   23960:	cmp	ip, #0
   23964:	str	r2, [lr, #24]
   23968:	sub	r4, r3, #1
   2396c:	add	r5, r5, r3
   23970:	str	r4, [lr, #28]
   23974:	beq	239c8 <crc32@@Base+0xa224>
   23978:	ldrb	r3, [ip, #17]
   2397c:	add	r0, ip, #16
   23980:	add	r0, r0, #15
   23984:	cmp	r3, #1
   23988:	ldreq	r2, [lr, #20]
   2398c:	ldreq	r3, [lr, #32]
   23990:	streq	r4, [ip, #24]
   23994:	streq	r2, [ip, #20]
   23998:	add	r2, ip, #15
   2399c:	streq	r3, [ip, #28]
   239a0:	mov	r3, #0
   239a4:	ldrb	r1, [r2, #1]!
   239a8:	add	r3, r3, r1
   239ac:	cmp	r2, r0
   239b0:	uxtb	r3, r3
   239b4:	bne	239a4 <crc32@@Base+0xa200>
   239b8:	strb	r3, [ip, #16]
   239bc:	ldr	ip, [ip, #4]
   239c0:	cmp	ip, #0
   239c4:	bne	23978 <crc32@@Base+0xa1d4>
   239c8:	ldr	lr, [lr, #8]
   239cc:	cmp	lr, #0
   239d0:	bne	23954 <crc32@@Base+0xa1b0>
   239d4:	bl	223b8 <crc32@@Base+0x8c14>
   239d8:	mov	r4, r0
   239dc:	str	r0, [sp, #160]	; 0xa0
   239e0:	bl	1220c <EVP_sha1@plt>
   239e4:	mov	r1, r0
   239e8:	mov	r0, r4
   239ec:	bl	12080 <EVP_DigestInit@plt>
   239f0:	mov	r2, #1
   239f4:	mov	r1, #0
   239f8:	add	r0, sp, #96	; 0x60
   239fc:	bl	21bcc <crc32@@Base+0x8428>
   23a00:	add	r0, sp, #96	; 0x60
   23a04:	bl	22330 <crc32@@Base+0x8b8c>
   23a08:	add	r0, sp, #96	; 0x60
   23a0c:	bl	22364 <crc32@@Base+0x8bc0>
   23a10:	mov	r1, #1
   23a14:	add	r0, sp, #96	; 0x60
   23a18:	bl	21c44 <crc32@@Base+0x84a0>
   23a1c:	ldr	r4, [sp, #160]	; 0xa0
   23a20:	mov	r3, #16
   23a24:	add	r2, sp, #212	; 0xd4
   23a28:	add	r1, sp, #112	; 0x70
   23a2c:	ldr	r0, [sp, #156]	; 0x9c
   23a30:	bl	22280 <crc32@@Base+0x8adc>
   23a34:	mov	r0, r4
   23a38:	add	r1, sp, #196	; 0xc4
   23a3c:	mov	r2, #32
   23a40:	bl	12650 <EVP_DigestUpdate@plt>
   23a44:	ldr	r7, [sp, #140]	; 0x8c
   23a48:	cmp	r7, #0
   23a4c:	beq	23ad8 <crc32@@Base+0xa334>
   23a50:	ldr	r4, [r7, #12]
   23a54:	mov	r1, #1
   23a58:	add	r0, sp, #96	; 0x60
   23a5c:	bl	21c44 <crc32@@Base+0x84a0>
   23a60:	cmp	r4, #0
   23a64:	bne	23a80 <crc32@@Base+0xa2dc>
   23a68:	b	23acc <crc32@@Base+0xa328>
   23a6c:	cmp	r1, #2
   23a70:	beq	241b8 <crc32@@Base+0xaa14>
   23a74:	ldr	r4, [r4, #4]
   23a78:	cmp	r4, #0
   23a7c:	beq	23acc <crc32@@Base+0xa328>
   23a80:	add	r5, r4, #32
   23a84:	ldr	r6, [sp, #160]	; 0xa0
   23a88:	mov	r3, #16
   23a8c:	ldr	r0, [sp, #156]	; 0x9c
   23a90:	add	r1, r4, r3
   23a94:	mov	r2, r5
   23a98:	bl	22280 <crc32@@Base+0x8adc>
   23a9c:	mov	r1, r5
   23aa0:	mov	r0, r6
   23aa4:	mov	r2, #16
   23aa8:	bl	12650 <EVP_DigestUpdate@plt>
   23aac:	ldrb	r1, [r4, #17]
   23ab0:	cmp	r1, #1
   23ab4:	bne	23a6c <crc32@@Base+0xa2c8>
   23ab8:	add	r0, sp, #96	; 0x60
   23abc:	bl	21c44 <crc32@@Base+0x84a0>
   23ac0:	ldr	r4, [r4, #4]
   23ac4:	cmp	r4, #0
   23ac8:	bne	23a80 <crc32@@Base+0xa2dc>
   23acc:	ldr	r7, [r7, #8]
   23ad0:	cmp	r7, #0
   23ad4:	bne	23a50 <crc32@@Base+0xa2ac>
   23ad8:	mov	r1, #1
   23adc:	add	r0, sp, #96	; 0x60
   23ae0:	bl	21c44 <crc32@@Base+0x84a0>
   23ae4:	add	r1, sp, #164	; 0xa4
   23ae8:	mov	r2, #0
   23aec:	ldr	r0, [sp, #160]	; 0xa0
   23af0:	bl	1253c <EVP_DigestFinal@plt>
   23af4:	ldr	r4, [sp, #160]	; 0xa0
   23af8:	mov	r0, r4
   23afc:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   23b00:	mov	r0, r4
   23b04:	bl	124b8 <CRYPTO_free@plt>
   23b08:	add	r2, sp, #164	; 0xa4
   23b0c:	mov	r3, #32
   23b10:	ldr	r0, [sp, #156]	; 0x9c
   23b14:	mov	r1, r2
   23b18:	bl	22280 <crc32@@Base+0x8adc>
   23b1c:	ldr	r0, [sp, #156]	; 0x9c
   23b20:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   23b24:	ldr	r5, [sp, #128]	; 0x80
   23b28:	ldr	r7, [sp, #140]	; 0x8c
   23b2c:	add	r5, r5, #10
   23b30:	cmp	r7, #0
   23b34:	lsl	r5, r5, #4
   23b38:	beq	24424 <crc32@@Base+0xac80>
   23b3c:	mov	r3, r7
   23b40:	ldr	r2, [r3]
   23b44:	ldr	r3, [r3, #8]
   23b48:	add	r5, r5, r2
   23b4c:	cmp	r3, #0
   23b50:	bne	23b40 <crc32@@Base+0xa39c>
   23b54:	mov	r0, r5
   23b58:	bl	125a8 <malloc@plt>
   23b5c:	subs	r8, r0, #0
   23b60:	beq	24434 <crc32@@Base+0xac90>
   23b64:	add	r1, sp, #232	; 0xe8
   23b68:	mov	r2, #96	; 0x60
   23b6c:	bl	1259c <memcpy@plt>
   23b70:	add	r4, r8, #96	; 0x60
   23b74:	mov	lr, r7
   23b78:	b	23b80 <crc32@@Base+0xa3dc>
   23b7c:	mov	r4, r6
   23b80:	mov	r3, lr
   23b84:	mov	ip, r4
   23b88:	ldr	r0, [r3, #20]!
   23b8c:	add	r6, r4, #16
   23b90:	ldr	r1, [r3, #4]
   23b94:	ldr	r2, [r3, #8]
   23b98:	ldr	r3, [r3, #12]
   23b9c:	stmia	ip!, {r0, r1, r2, r3}
   23ba0:	ldr	lr, [lr, #8]
   23ba4:	cmp	lr, #0
   23ba8:	bne	23b7c <crc32@@Base+0xa3d8>
   23bac:	add	ip, sp, #196	; 0xc4
   23bb0:	mov	lr, r6
   23bb4:	add	r4, r4, #48	; 0x30
   23bb8:	mov	r6, r7
   23bbc:	ldm	ip!, {r0, r1, r2, r3}
   23bc0:	stmia	lr!, {r0, r1, r2, r3}
   23bc4:	ldm	ip, {r0, r1, r2, r3}
   23bc8:	stm	lr, {r0, r1, r2, r3}
   23bcc:	ldr	r9, [r6, #12]
   23bd0:	cmp	r9, #0
   23bd4:	bne	23be8 <crc32@@Base+0xa444>
   23bd8:	b	23c40 <crc32@@Base+0xa49c>
   23bdc:	ldr	r9, [r9, #4]
   23be0:	cmp	r9, #0
   23be4:	beq	23c40 <crc32@@Base+0xa49c>
   23be8:	mov	r3, r9
   23bec:	add	r4, r4, #16
   23bf0:	ldr	r0, [r3, #32]!
   23bf4:	ldr	r1, [r3, #4]
   23bf8:	ldr	r2, [r3, #8]
   23bfc:	ldr	r3, [r3, #12]
   23c00:	str	r0, [r4, #-16]
   23c04:	str	r1, [r4, #-12]
   23c08:	str	r2, [r4, #-8]
   23c0c:	str	r3, [r4, #-4]
   23c10:	ldrb	r3, [r9, #17]
   23c14:	cmp	r3, #2
   23c18:	bne	23bdc <crc32@@Base+0xa438>
   23c1c:	ldr	r2, [r9, #12]
   23c20:	mov	r0, r4
   23c24:	ldr	r1, [r9, #8]
   23c28:	bl	1259c <memcpy@plt>
   23c2c:	ldr	r3, [r9, #12]
   23c30:	ldr	r9, [r9, #4]
   23c34:	add	r4, r4, r3
   23c38:	cmp	r9, #0
   23c3c:	bne	23be8 <crc32@@Base+0xa444>
   23c40:	ldr	r6, [r6, #8]
   23c44:	cmp	r6, #0
   23c48:	bne	23bcc <crc32@@Base+0xa428>
   23c4c:	add	ip, sp, #164	; 0xa4
   23c50:	ldr	lr, [sp, #16]
   23c54:	ldm	ip!, {r0, r1, r2, r3}
   23c58:	str	r5, [lr, #4]
   23c5c:	mov	r5, #0
   23c60:	str	r8, [lr, #8]
   23c64:	str	r0, [r4]
   23c68:	str	r1, [r4, #4]
   23c6c:	str	r2, [r4, #8]
   23c70:	str	r3, [r4, #12]
   23c74:	ldm	ip!, {r0, r1, r2, r3}
   23c78:	str	r0, [r4, #16]
   23c7c:	str	r1, [r4, #20]
   23c80:	str	r2, [r4, #24]
   23c84:	str	r3, [r4, #28]
   23c88:	mov	r0, r7
   23c8c:	ldr	r1, [sp, #148]	; 0x94
   23c90:	bl	21d78 <crc32@@Base+0x85d4>
   23c94:	ldr	r3, [sp, #8]
   23c98:	ldr	r2, [sp, #332]	; 0x14c
   23c9c:	mov	r0, r5
   23ca0:	ldr	r3, [r3]
   23ca4:	cmp	r2, r3
   23ca8:	bne	249a0 <crc32@@Base+0xb1fc>
   23cac:	add	sp, sp, #340	; 0x154
   23cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23cb4:	tst	r3, #2
   23cb8:	beq	247dc <crc32@@Base+0xb038>
   23cbc:	cmp	r9, #46	; 0x2e
   23cc0:	beq	23ccc <crc32@@Base+0xa528>
   23cc4:	b	23cdc <crc32@@Base+0xa538>
   23cc8:	add	r6, r6, #1
   23ccc:	ldrb	r9, [r6]
   23cd0:	mov	r7, r6
   23cd4:	cmp	r9, #46	; 0x2e
   23cd8:	beq	23cc8 <crc32@@Base+0xa524>
   23cdc:	cmp	r9, #0
   23ce0:	addne	r6, r7, #1
   23ce4:	bne	23cf4 <crc32@@Base+0xa550>
   23ce8:	b	23d1c <crc32@@Base+0xa578>
   23cec:	cmp	r3, #46	; 0x2e
   23cf0:	beq	23f5c <crc32@@Base+0xa7b8>
   23cf4:	mov	r0, r6
   23cf8:	ldrb	r3, [r6], #1
   23cfc:	cmp	r3, #0
   23d00:	bne	23cec <crc32@@Base+0xa548>
   23d04:	ldrb	r3, [r7]
   23d08:	cmp	r3, #0
   23d0c:	beq	23d1c <crc32@@Base+0xa578>
   23d10:	bl	125c0 <strlen@plt>
   23d14:	cmp	r0, #1
   23d18:	beq	24208 <crc32@@Base+0xaa64>
   23d1c:	ldr	r3, [sp, #60]	; 0x3c
   23d20:	ldr	r2, [sp, #12]
   23d24:	mov	r1, #1
   23d28:	ldr	r0, [r8]
   23d2c:	bl	122b4 <__fprintf_chk@plt>
   23d30:	b	23768 <crc32@@Base+0x9fc4>
   23d34:	mov	r0, #1
   23d38:	mov	r1, #36	; 0x24
   23d3c:	orr	r3, r3, r0
   23d40:	bfi	r3, ip, #1, #1
   23d44:	strb	r3, [sp, #96]	; 0x60
   23d48:	bl	12518 <calloc@plt>
   23d4c:	subs	r6, r0, #0
   23d50:	beq	23768 <crc32@@Base+0x9fc4>
   23d54:	mov	r0, sl
   23d58:	movw	r1, #31772	; 0x7c1c
   23d5c:	movt	r1, #3
   23d60:	bl	12278 <strtok@plt>
   23d64:	cmp	r0, #0
   23d68:	beq	240b8 <crc32@@Base+0xa914>
   23d6c:	add	r1, sp, #48	; 0x30
   23d70:	bl	21aa4 <crc32@@Base+0x8300>
   23d74:	subs	r7, r0, #0
   23d78:	beq	2402c <crc32@@Base+0xa888>
   23d7c:	movw	r2, #45932	; 0xb36c
   23d80:	ldr	r3, [sp, #60]	; 0x3c
   23d84:	movt	r2, #3
   23d88:	mov	r1, #1
   23d8c:	ldr	r0, [r8]
   23d90:	bl	122b4 <__fprintf_chk@plt>
   23d94:	mov	r0, r6
   23d98:	bl	12128 <free@plt>
   23d9c:	b	23768 <crc32@@Base+0x9fc4>
   23da0:	ldrb	r3, [r7, #1]
   23da4:	cmp	r3, #79	; 0x4f
   23da8:	bne	23e08 <crc32@@Base+0xa664>
   23dac:	ldrb	r3, [r7, #2]
   23db0:	cmp	r3, #80	; 0x50
   23db4:	bne	23e08 <crc32@@Base+0xa664>
   23db8:	ldrb	r3, [r7, #3]
   23dbc:	cmp	r3, #0
   23dc0:	bne	23e08 <crc32@@Base+0xa664>
   23dc4:	mov	r1, #48	; 0x30
   23dc8:	mov	r0, #1
   23dcc:	ldr	r6, [sp, #144]	; 0x90
   23dd0:	bl	12518 <calloc@plt>
   23dd4:	cmp	r0, #0
   23dd8:	beq	23768 <crc32@@Base+0x9fc4>
   23ddc:	mov	r3, #90	; 0x5a
   23de0:	strh	r3, [r0, #16]
   23de4:	ldr	r2, [r6, #12]
   23de8:	mov	r3, #16
   23dec:	str	r3, [r0]
   23df0:	cmp	r2, #0
   23df4:	streq	r0, [r6, #12]
   23df8:	ldrne	r2, [r6, #16]
   23dfc:	strne	r0, [r2, #4]
   23e00:	str	r0, [r6, #16]
   23e04:	b	23734 <crc32@@Base+0x9f90>
   23e08:	movw	r1, #46060	; 0xb3ec
   23e0c:	mov	r0, r7
   23e10:	movt	r1, #3
   23e14:	bl	1265c <strcmp@plt>
   23e18:	subs	r9, r0, #0
   23e1c:	beq	24224 <crc32@@Base+0xaa80>
   23e20:	movw	r1, #25928	; 0x6548
   23e24:	mov	r0, r7
   23e28:	movt	r1, #3
   23e2c:	bl	1265c <strcmp@plt>
   23e30:	cmp	r0, #0
   23e34:	beq	24110 <crc32@@Base+0xa96c>
   23e38:	movw	r1, #43572	; 0xaa34
   23e3c:	mov	r0, r7
   23e40:	movt	r1, #3
   23e44:	bl	1265c <strcmp@plt>
   23e48:	subs	r3, r0, #0
   23e4c:	beq	243d4 <crc32@@Base+0xac30>
   23e50:	movw	r1, #43564	; 0xaa2c
   23e54:	mov	r0, r7
   23e58:	movt	r1, #3
   23e5c:	bl	1265c <strcmp@plt>
   23e60:	cmp	r0, #0
   23e64:	beq	243d0 <crc32@@Base+0xac2c>
   23e68:	movw	r1, #46580	; 0xb5f4
   23e6c:	mov	r0, r7
   23e70:	movt	r1, #3
   23e74:	bl	1265c <strcmp@plt>
   23e78:	subs	r6, r0, #0
   23e7c:	bne	24980 <crc32@@Base+0xb1dc>
   23e80:	ldr	r3, [sp, #144]	; 0x90
   23e84:	mov	r1, #48	; 0x30
   23e88:	mov	r0, #1
   23e8c:	str	r3, [sp, #24]
   23e90:	bl	12518 <calloc@plt>
   23e94:	subs	r3, r0, #0
   23e98:	str	r3, [sp, #20]
   23e9c:	beq	23768 <crc32@@Base+0x9fc4>
   23ea0:	mov	r0, sl
   23ea4:	movw	r1, #31772	; 0x7c1c
   23ea8:	movt	r1, #3
   23eac:	bl	12278 <strtok@plt>
   23eb0:	subs	r9, r0, #0
   23eb4:	beq	24964 <crc32@@Base+0xb1c0>
   23eb8:	movw	r7, #43280	; 0xa910
   23ebc:	movt	r7, #3
   23ec0:	movw	r1, #45768	; 0xb2c8
   23ec4:	movt	r1, #3
   23ec8:	mov	sl, r7
   23ecc:	b	23ed4 <crc32@@Base+0xa730>
   23ed0:	ldr	r1, [r7, #12]!
   23ed4:	mov	r0, r9
   23ed8:	bl	1265c <strcmp@plt>
   23edc:	cmp	r0, #0
   23ee0:	beq	245e4 <crc32@@Base+0xae40>
   23ee4:	ldr	r1, [r7, #4]
   23ee8:	cmp	r1, #0
   23eec:	beq	23f00 <crc32@@Base+0xa75c>
   23ef0:	mov	r0, r9
   23ef4:	bl	1265c <strcmp@plt>
   23ef8:	cmp	r0, #0
   23efc:	beq	245e4 <crc32@@Base+0xae40>
   23f00:	add	r6, r6, #1
   23f04:	cmp	r6, #9
   23f08:	bne	23ed0 <crc32@@Base+0xa72c>
   23f0c:	movw	r2, #46808	; 0xb6d8
   23f10:	ldr	r3, [sp, #60]	; 0x3c
   23f14:	movt	r2, #3
   23f18:	mov	r1, #1
   23f1c:	ldr	r0, [r8]
   23f20:	bl	122b4 <__fprintf_chk@plt>
   23f24:	ldr	r0, [sp, #20]
   23f28:	bl	12128 <free@plt>
   23f2c:	b	23768 <crc32@@Base+0x9fc4>
   23f30:	movw	r2, #45812	; 0xb2f4
   23f34:	ldr	r3, [sp, #60]	; 0x3c
   23f38:	movt	r2, #3
   23f3c:	mov	r1, #1
   23f40:	ldr	r0, [r8]
   23f44:	bl	122b4 <__fprintf_chk@plt>
   23f48:	ldr	r0, [r6, #8]
   23f4c:	bl	12128 <free@plt>
   23f50:	mov	r0, r6
   23f54:	bl	12128 <free@plt>
   23f58:	b	23768 <crc32@@Base+0x9fc4>
   23f5c:	mov	r3, #0
   23f60:	strb	r3, [r0]
   23f64:	ldrb	r9, [r7]
   23f68:	cmp	r9, r3
   23f6c:	beq	23d1c <crc32@@Base+0xa578>
   23f70:	cmp	r6, #0
   23f74:	moveq	r6, #49	; 0x31
   23f78:	bne	241dc <crc32@@Base+0xaa38>
   23f7c:	movw	r1, #46712	; 0xb678
   23f80:	mov	r0, r7
   23f84:	movt	r1, #3
   23f88:	bl	1265c <strcmp@plt>
   23f8c:	cmp	r0, #0
   23f90:	beq	23ffc <crc32@@Base+0xa858>
   23f94:	movw	r1, #46720	; 0xb680
   23f98:	mov	r0, r7
   23f9c:	movt	r1, #3
   23fa0:	bl	1265c <strcmp@plt>
   23fa4:	cmp	r0, #0
   23fa8:	orreq	r3, r6, #-872415232	; 0xcc000000
   23fac:	beq	240a0 <crc32@@Base+0xa8fc>
   23fb0:	cmp	r9, #79	; 0x4f
   23fb4:	beq	240d4 <crc32@@Base+0xa930>
   23fb8:	cmp	r9, #69	; 0x45
   23fbc:	bne	249a4 <crc32@@Base+0xb200>
   23fc0:	ldrb	r3, [r7, #1]
   23fc4:	cmp	r3, #81	; 0x51
   23fc8:	bne	240e0 <crc32@@Base+0xa93c>
   23fcc:	ldrb	r3, [r7, #2]
   23fd0:	cmp	r3, #90	; 0x5a
   23fd4:	bne	24094 <crc32@@Base+0xa8f0>
   23fd8:	ldrb	r3, [r7, #3]
   23fdc:	cmp	r3, #0
   23fe0:	bne	240e0 <crc32@@Base+0xa93c>
   23fe4:	orr	r3, r6, #-822083584	; 0xcf000000
   23fe8:	add	r2, sp, #60	; 0x3c
   23fec:	add	r1, sp, #52	; 0x34
   23ff0:	ldr	r0, [sp, #152]	; 0x98
   23ff4:	bl	22064 <crc32@@Base+0x88c0>
   23ff8:	b	24010 <crc32@@Base+0xa86c>
   23ffc:	orr	r3, r6, #-872415232	; 0xcc000000
   24000:	add	r2, sp, #60	; 0x3c
   24004:	add	r1, sp, #52	; 0x34
   24008:	ldr	r0, [sp, #152]	; 0x98
   2400c:	bl	22064 <crc32@@Base+0x88c0>
   24010:	ldrb	r3, [sp, #96]	; 0x60
   24014:	cmp	r0, #0
   24018:	movne	r0, #0
   2401c:	andeq	r0, r3, #1
   24020:	cmp	r0, #0
   24024:	beq	23768 <crc32@@Base+0x9fc4>
   24028:	b	23728 <crc32@@Base+0x9f84>
   2402c:	movw	r1, #31772	; 0x7c1c
   24030:	movt	r1, #3
   24034:	bl	12278 <strtok@plt>
   24038:	subs	r3, r0, #0
   2403c:	beq	24190 <crc32@@Base+0xa9ec>
   24040:	str	r3, [sp, #20]
   24044:	bl	125c0 <strlen@plt>
   24048:	ldr	r9, [sp, #128]	; 0x80
   2404c:	ldr	sl, [sp, #48]	; 0x30
   24050:	add	r9, r9, #1
   24054:	ldr	r3, [sp, #20]
   24058:	cmp	r0, #8
   2405c:	beq	2443c <crc32@@Base+0xac98>
   24060:	ldrb	r3, [r6, #4]
   24064:	str	sl, [r6, #20]
   24068:	bfi	r3, r7, #0, #1
   2406c:	str	r7, [r6, #32]
   24070:	str	r9, [sp, #128]	; 0x80
   24074:	strb	r3, [r6, #4]
   24078:	ldr	r3, [sp, #140]	; 0x8c
   2407c:	cmp	r3, #0
   24080:	streq	r6, [sp, #140]	; 0x8c
   24084:	ldrne	r3, [sp, #144]	; 0x90
   24088:	strne	r6, [r3, #8]
   2408c:	str	r6, [sp, #144]	; 0x90
   24090:	b	23768 <crc32@@Base+0x9fc4>
   24094:	cmp	r3, #0
   24098:	bne	240e0 <crc32@@Base+0xa93c>
   2409c:	orr	r3, r6, #-822083584	; 0xcf000000
   240a0:	add	r2, sp, #60	; 0x3c
   240a4:	orr	r3, r3, #16
   240a8:	add	r1, sp, #52	; 0x34
   240ac:	ldr	r0, [sp, #152]	; 0x98
   240b0:	bl	22064 <crc32@@Base+0x88c0>
   240b4:	b	24010 <crc32@@Base+0xa86c>
   240b8:	movw	r2, #45896	; 0xb348
   240bc:	ldr	r3, [sp, #60]	; 0x3c
   240c0:	movt	r2, #3
   240c4:	mov	r1, #1
   240c8:	ldr	r0, [r8]
   240cc:	bl	122b4 <__fprintf_chk@plt>
   240d0:	b	23d94 <crc32@@Base+0xa5f0>
   240d4:	ldrb	r3, [r7, #1]
   240d8:	cmp	r3, #82	; 0x52
   240dc:	beq	243e8 <crc32@@Base+0xac44>
   240e0:	movw	r1, #46728	; 0xb688
   240e4:	mov	r0, r7
   240e8:	movt	r1, #3
   240ec:	bl	1265c <strcmp@plt>
   240f0:	cmp	r0, #0
   240f4:	bne	24980 <crc32@@Base+0xb1dc>
   240f8:	mov	r3, #-1073741824	; 0xc0000000
   240fc:	add	r2, sp, #60	; 0x3c
   24100:	add	r1, sp, #52	; 0x34
   24104:	ldr	r0, [sp, #152]	; 0x98
   24108:	bl	22064 <crc32@@Base+0x88c0>
   2410c:	b	24010 <crc32@@Base+0xa86c>
   24110:	mov	r1, #48	; 0x30
   24114:	mov	r0, #1
   24118:	ldr	r7, [sp, #144]	; 0x90
   2411c:	bl	12518 <calloc@plt>
   24120:	subs	r6, r0, #0
   24124:	beq	23768 <crc32@@Base+0x9fc4>
   24128:	mov	r0, sl
   2412c:	movw	r1, #31772	; 0x7c1c
   24130:	movt	r1, #3
   24134:	bl	12278 <strtok@plt>
   24138:	cmp	r0, #0
   2413c:	beq	24640 <crc32@@Base+0xae9c>
   24140:	add	r1, sp, #40	; 0x28
   24144:	bl	21aa4 <crc32@@Base+0x8300>
   24148:	cmp	r0, #0
   2414c:	bne	24528 <crc32@@Base+0xad84>
   24150:	movw	r1, #31772	; 0x7c1c
   24154:	movt	r1, #3
   24158:	bl	12278 <strtok@plt>
   2415c:	cmp	r0, #0
   24160:	beq	247fc <crc32@@Base+0xb058>
   24164:	add	r1, sp, #44	; 0x2c
   24168:	bl	21aa4 <crc32@@Base+0x8300>
   2416c:	cmp	r0, #0
   24170:	beq	24570 <crc32@@Base+0xadcc>
   24174:	movw	r2, #46476	; 0xb58c
   24178:	ldr	r3, [sp, #60]	; 0x3c
   2417c:	movt	r2, #3
   24180:	mov	r1, #1
   24184:	ldr	r0, [r8]
   24188:	bl	122b4 <__fprintf_chk@plt>
   2418c:	b	23d94 <crc32@@Base+0xa5f0>
   24190:	ldr	r0, [sp, #48]	; 0x30
   24194:	ldrb	r1, [r6, #4]
   24198:	ldr	r2, [sp, #128]	; 0x80
   2419c:	bfi	r1, r3, #0, #1
   241a0:	str	r3, [r6, #32]
   241a4:	strb	r1, [r6, #4]
   241a8:	add	r3, r2, #1
   241ac:	str	r0, [r6, #20]
   241b0:	str	r3, [sp, #128]	; 0x80
   241b4:	b	24078 <crc32@@Base+0xa8d4>
   241b8:	ldrd	r2, [r4, #8]
   241bc:	ldr	r0, [sp, #156]	; 0x9c
   241c0:	mov	r1, r2
   241c4:	bl	22280 <crc32@@Base+0x8adc>
   241c8:	ldr	r2, [r4, #12]
   241cc:	ldr	r1, [r4, #8]
   241d0:	ldr	r0, [sp, #160]	; 0xa0
   241d4:	bl	12650 <EVP_DigestUpdate@plt>
   241d8:	b	23a74 <crc32@@Base+0xa2d0>
   241dc:	mov	r0, r6
   241e0:	bl	125c0 <strlen@plt>
   241e4:	cmp	r0, #1
   241e8:	bne	23d1c <crc32@@Base+0xa578>
   241ec:	ldrb	r2, [r6]
   241f0:	sub	r3, r2, #49	; 0x31
   241f4:	uxtb	r1, r3
   241f8:	cmp	r2, #52	; 0x34
   241fc:	cmpne	r1, #1
   24200:	movls	r6, r3
   24204:	bls	23f7c <crc32@@Base+0xa7d8>
   24208:	movw	r2, #46672	; 0xb650
   2420c:	ldr	r3, [sp, #60]	; 0x3c
   24210:	movt	r2, #3
   24214:	mov	r1, #1
   24218:	ldr	r0, [r8]
   2421c:	bl	122b4 <__fprintf_chk@plt>
   24220:	b	23768 <crc32@@Base+0x9fc4>
   24224:	mov	r1, #48	; 0x30
   24228:	mov	r0, #1
   2422c:	ldr	r7, [sp, #144]	; 0x90
   24230:	bl	12518 <calloc@plt>
   24234:	subs	r6, r0, #0
   24238:	beq	23768 <crc32@@Base+0x9fc4>
   2423c:	mov	r0, sl
   24240:	movw	r1, #31772	; 0x7c1c
   24244:	movt	r1, #3
   24248:	bl	12278 <strtok@plt>
   2424c:	cmp	r0, #0
   24250:	beq	24650 <crc32@@Base+0xaeac>
   24254:	ldrb	r3, [r0]
   24258:	cmp	r3, #73	; 0x49
   2425c:	bne	244a4 <crc32@@Base+0xad00>
   24260:	ldrb	r3, [r0, #1]
   24264:	cmp	r3, #86	; 0x56
   24268:	bne	24288 <crc32@@Base+0xaae4>
   2426c:	ldrb	r3, [r0, #2]
   24270:	cmp	r3, #84	; 0x54
   24274:	bne	24288 <crc32@@Base+0xaae4>
   24278:	ldrb	r3, [r0, #3]
   2427c:	cmp	r3, #0
   24280:	moveq	sl, #1
   24284:	beq	244d8 <crc32@@Base+0xad34>
   24288:	mov	sl, r9
   2428c:	add	r1, sp, #44	; 0x2c
   24290:	bl	21aa4 <crc32@@Base+0x8300>
   24294:	cmp	r0, #0
   24298:	bne	2450c <crc32@@Base+0xad68>
   2429c:	movw	r1, #31772	; 0x7c1c
   242a0:	movt	r1, #3
   242a4:	bl	12278 <strtok@plt>
   242a8:	subs	r3, r0, #0
   242ac:	str	r3, [sp, #28]
   242b0:	beq	247cc <crc32@@Base+0xb028>
   242b4:	cmp	sl, #0
   242b8:	bne	24774 <crc32@@Base+0xafd0>
   242bc:	cmp	r9, #0
   242c0:	beq	24694 <crc32@@Base+0xaef0>
   242c4:	add	r1, sp, #48	; 0x30
   242c8:	ldr	sl, [sp, #148]	; 0x94
   242cc:	bl	21aa4 <crc32@@Base+0x8300>
   242d0:	cmp	r0, #0
   242d4:	bne	2491c <crc32@@Base+0xb178>
   242d8:	cmp	sl, #0
   242dc:	ldr	r1, [sp, #48]	; 0x30
   242e0:	bne	242f4 <crc32@@Base+0xab50>
   242e4:	b	248e8 <crc32@@Base+0xb144>
   242e8:	ldr	sl, [sl]
   242ec:	cmp	sl, #0
   242f0:	beq	248e8 <crc32@@Base+0xb144>
   242f4:	ldr	r3, [sl, #4]
   242f8:	cmp	r3, r1
   242fc:	bne	242e8 <crc32@@Base+0xab44>
   24300:	ldr	r2, [sl, #12]
   24304:	mov	r0, #1
   24308:	add	r9, r2, #15
   2430c:	bic	r9, r9, #15
   24310:	str	r2, [sp, #20]
   24314:	mov	r1, r9
   24318:	bl	12518 <calloc@plt>
   2431c:	ldr	r2, [sp, #20]
   24320:	subs	r3, r0, #0
   24324:	beq	23d94 <crc32@@Base+0xa5f0>
   24328:	ldr	r1, [sl, #8]
   2432c:	str	r3, [sp, #20]
   24330:	bl	1259c <memcpy@plt>
   24334:	ldr	r3, [sp, #20]
   24338:	str	r9, [r6, #12]
   2433c:	str	r3, [r6, #8]
   24340:	mov	r3, #1
   24344:	ldr	r0, [sp, #44]	; 0x2c
   24348:	ldr	r1, [r6, #8]
   2434c:	strh	r3, [r6, #18]
   24350:	mov	r2, r9
   24354:	movw	r3, #602	; 0x25a
   24358:	str	r0, [r6, #20]
   2435c:	strh	r3, [r6, #16]
   24360:	mov	r0, #0
   24364:	str	r9, [r6, #24]
   24368:	bl	25354 <crc32@@Base+0xbbb0>
   2436c:	ldr	r2, [r7, #12]
   24370:	ldr	r3, [r6, #12]
   24374:	cmp	r2, #0
   24378:	add	r3, r3, #16
   2437c:	str	r3, [r6]
   24380:	str	r0, [r6, #28]
   24384:	beq	248a4 <crc32@@Base+0xb100>
   24388:	ldrb	r2, [sp, #96]	; 0x60
   2438c:	ldr	r3, [r7, #16]
   24390:	tst	r2, #1
   24394:	str	r6, [r3, #4]
   24398:	str	r6, [r7, #16]
   2439c:	bne	23728 <crc32@@Base+0x9f84>
   243a0:	b	23768 <crc32@@Base+0x9fc4>
   243a4:	ldr	r3, [sp, #60]	; 0x3c
   243a8:	mov	r1, #1
   243ac:	ldr	r0, [r8]
   243b0:	movw	r2, #45848	; 0xb318
   243b4:	movt	r2, #3
   243b8:	bl	122b4 <__fprintf_chk@plt>
   243bc:	ldr	r0, [r6, #8]
   243c0:	bl	12128 <free@plt>
   243c4:	mov	r0, r6
   243c8:	bl	12128 <free@plt>
   243cc:	b	23768 <crc32@@Base+0x9fc4>
   243d0:	mov	r3, #1
   243d4:	add	r2, sp, #60	; 0x3c
   243d8:	add	r1, sp, #52	; 0x34
   243dc:	ldr	r0, [sp, #144]	; 0x90
   243e0:	bl	21e44 <crc32@@Base+0x86a0>
   243e4:	b	24010 <crc32@@Base+0xa86c>
   243e8:	ldrb	r3, [r7, #2]
   243ec:	cmp	r3, #82	; 0x52
   243f0:	bne	240e0 <crc32@@Base+0xa93c>
   243f4:	ldrb	r3, [r7, #3]
   243f8:	cmp	r3, #0
   243fc:	bne	240e0 <crc32@@Base+0xa93c>
   24400:	orr	r3, r6, #-872415232	; 0xcc000000
   24404:	add	r2, sp, #60	; 0x3c
   24408:	orr	r3, r3, #24
   2440c:	add	r1, sp, #52	; 0x34
   24410:	ldr	r0, [sp, #152]	; 0x98
   24414:	bl	22064 <crc32@@Base+0x88c0>
   24418:	b	24010 <crc32@@Base+0xa86c>
   2441c:	mov	r3, r4
   24420:	b	23d20 <crc32@@Base+0xa57c>
   24424:	mov	r0, r5
   24428:	bl	125a8 <malloc@plt>
   2442c:	subs	r8, r0, #0
   24430:	bne	24544 <crc32@@Base+0xada0>
   24434:	mvn	r5, #11
   24438:	b	23c88 <crc32@@Base+0xa4e4>
   2443c:	mov	r2, r0
   24440:	movw	r1, #45968	; 0xb390
   24444:	mov	r0, r3
   24448:	movt	r1, #3
   2444c:	bl	1217c <strncmp@plt>
   24450:	cmp	r0, #0
   24454:	bne	24060 <crc32@@Base+0xa8bc>
   24458:	ldrb	r2, [sp, #136]	; 0x88
   2445c:	mov	r1, #1
   24460:	ldrb	r3, [r6, #4]
   24464:	tst	r2, #1
   24468:	str	sl, [r6, #20]
   2446c:	orr	r3, r3, r1
   24470:	orreq	r2, r2, #1
   24474:	str	r9, [sp, #128]	; 0x80
   24478:	str	r1, [r6, #32]
   2447c:	strb	r3, [r6, #4]
   24480:	streq	sl, [sp, #132]	; 0x84
   24484:	strbeq	r2, [sp, #136]	; 0x88
   24488:	beq	24078 <crc32@@Base+0xa8d4>
   2448c:	movw	r2, #45980	; 0xb39c
   24490:	ldr	r3, [sp, #60]	; 0x3c
   24494:	movt	r2, #3
   24498:	ldr	r0, [r8]
   2449c:	bl	122b4 <__fprintf_chk@plt>
   244a0:	b	24078 <crc32@@Base+0xa8d4>
   244a4:	cmp	r3, #68	; 0x44
   244a8:	bne	24288 <crc32@@Base+0xaae4>
   244ac:	ldrb	r3, [r0, #1]
   244b0:	cmp	r3, #67	; 0x43
   244b4:	bne	24288 <crc32@@Base+0xaae4>
   244b8:	ldrb	r3, [r0, #2]
   244bc:	cmp	r3, #68	; 0x44
   244c0:	bne	24288 <crc32@@Base+0xaae4>
   244c4:	ldrb	r3, [r0, #3]
   244c8:	mov	sl, r9
   244cc:	cmp	r3, #0
   244d0:	bne	2428c <crc32@@Base+0xaae8>
   244d4:	mov	r9, #1
   244d8:	movw	r1, #31772	; 0x7c1c
   244dc:	mov	r0, #0
   244e0:	movt	r1, #3
   244e4:	bl	12278 <strtok@plt>
   244e8:	cmp	r0, #0
   244ec:	bne	2428c <crc32@@Base+0xaae8>
   244f0:	ldr	r3, [sp, #60]	; 0x3c
   244f4:	movw	r2, #46112	; 0xb420
   244f8:	movt	r2, #3
   244fc:	mov	r1, #1
   24500:	ldr	r0, [r8]
   24504:	bl	122b4 <__fprintf_chk@plt>
   24508:	b	23d94 <crc32@@Base+0xa5f0>
   2450c:	movw	r2, #46144	; 0xb440
   24510:	ldr	r3, [sp, #60]	; 0x3c
   24514:	movt	r2, #3
   24518:	mov	r1, #1
   2451c:	ldr	r0, [r8]
   24520:	bl	122b4 <__fprintf_chk@plt>
   24524:	b	23d94 <crc32@@Base+0xa5f0>
   24528:	movw	r2, #46408	; 0xb548
   2452c:	ldr	r3, [sp, #60]	; 0x3c
   24530:	movt	r2, #3
   24534:	mov	r1, #1
   24538:	ldr	r0, [r8]
   2453c:	bl	122b4 <__fprintf_chk@plt>
   24540:	b	23d94 <crc32@@Base+0xa5f0>
   24544:	add	r1, sp, #232	; 0xe8
   24548:	mov	r2, #96	; 0x60
   2454c:	bl	1259c <memcpy@plt>
   24550:	add	lr, sp, #196	; 0xc4
   24554:	add	ip, r8, #96	; 0x60
   24558:	add	r4, r8, #128	; 0x80
   2455c:	ldm	lr!, {r0, r1, r2, r3}
   24560:	stmia	ip!, {r0, r1, r2, r3}
   24564:	ldm	lr, {r0, r1, r2, r3}
   24568:	stm	ip, {r0, r1, r2, r3}
   2456c:	b	23c4c <crc32@@Base+0xa4a8>
   24570:	movw	r1, #31772	; 0x7c1c
   24574:	movt	r1, #3
   24578:	bl	12278 <strtok@plt>
   2457c:	cmp	r0, #0
   24580:	beq	248d8 <crc32@@Base+0xb134>
   24584:	add	r1, sp, #48	; 0x30
   24588:	bl	21aa4 <crc32@@Base+0x8300>
   2458c:	cmp	r0, #0
   24590:	bne	248bc <crc32@@Base+0xb118>
   24594:	movw	r3, #858	; 0x35a
   24598:	strh	r3, [r6, #16]
   2459c:	ldr	r3, [r7, #12]
   245a0:	mov	r2, #16
   245a4:	ldr	r0, [sp, #40]	; 0x28
   245a8:	cmp	r3, #0
   245ac:	ldr	r3, [sp, #48]	; 0x30
   245b0:	ldr	r1, [sp, #44]	; 0x2c
   245b4:	str	r0, [r6, #20]
   245b8:	str	r3, [r6, #24]
   245bc:	ldrb	r3, [sp, #96]	; 0x60
   245c0:	str	r1, [r6, #28]
   245c4:	and	r3, r3, #1
   245c8:	str	r2, [r6]
   245cc:	bne	23714 <crc32@@Base+0x9f70>
   245d0:	cmp	r3, #0
   245d4:	str	r6, [r7, #12]
   245d8:	str	r6, [r7, #16]
   245dc:	bne	23728 <crc32@@Base+0x9f84>
   245e0:	b	23768 <crc32@@Base+0x9fc4>
   245e4:	mov	r3, #12
   245e8:	ldr	r0, [sp, #20]
   245ec:	mla	r6, r3, r6, sl
   245f0:	movw	r2, #1626	; 0x65a
   245f4:	strh	r2, [r0, #16]
   245f8:	ldr	r2, [sp, #24]
   245fc:	ldrb	r3, [r6, #8]
   24600:	ldr	r1, [r2, #12]
   24604:	mov	r2, #16
   24608:	str	r2, [r0]
   2460c:	str	r3, [r0, #28]
   24610:	cmp	r1, #0
   24614:	ldrb	r3, [sp, #96]	; 0x60
   24618:	and	r3, r3, #1
   2461c:	beq	24660 <crc32@@Base+0xaebc>
   24620:	ldr	r1, [sp, #24]
   24624:	cmp	r3, #0
   24628:	ldr	r3, [sp, #20]
   2462c:	ldr	r2, [r1, #16]
   24630:	str	r3, [r2, #4]
   24634:	str	r3, [r1, #16]
   24638:	bne	23728 <crc32@@Base+0x9f84>
   2463c:	b	23768 <crc32@@Base+0x9fc4>
   24640:	movw	r2, #46376	; 0xb528
   24644:	ldr	r3, [sp, #60]	; 0x3c
   24648:	movt	r2, #3
   2464c:	b	244fc <crc32@@Base+0xad58>
   24650:	movw	r2, #46068	; 0xb3f4
   24654:	ldr	r3, [sp, #60]	; 0x3c
   24658:	movt	r2, #3
   2465c:	b	244fc <crc32@@Base+0xad58>
   24660:	cmp	r3, #0
   24664:	ldrd	r2, [sp, #20]
   24668:	str	r2, [r3, #12]
   2466c:	str	r2, [r3, #16]
   24670:	bne	23728 <crc32@@Base+0x9f84>
   24674:	b	23768 <crc32@@Base+0x9fc4>
   24678:	movw	r2, #46020	; 0xb3c4
   2467c:	ldr	r3, [sp, #60]	; 0x3c
   24680:	movt	r2, #3
   24684:	mov	r1, #1
   24688:	ldr	r0, [r8]
   2468c:	bl	122b4 <__fprintf_chk@plt>
   24690:	b	23768 <crc32@@Base+0x9fc4>
   24694:	movw	r1, #49540	; 0xc184
   24698:	movt	r1, #3
   2469c:	bl	1232c <fopen@plt>
   246a0:	subs	sl, r0, #0
   246a4:	beq	24838 <crc32@@Base+0xb094>
   246a8:	mov	r2, #2
   246ac:	mov	r1, r9
   246b0:	bl	12158 <fseek@plt>
   246b4:	cmp	r0, #0
   246b8:	blt	24830 <crc32@@Base+0xb08c>
   246bc:	mov	r0, sl
   246c0:	bl	12524 <ftell@plt>
   246c4:	subs	r3, r0, #0
   246c8:	str	r3, [sp, #20]
   246cc:	blt	24830 <crc32@@Base+0xb08c>
   246d0:	mov	r2, r9
   246d4:	mov	r1, r9
   246d8:	mov	r0, sl
   246dc:	bl	12158 <fseek@plt>
   246e0:	cmp	r0, #0
   246e4:	blt	24830 <crc32@@Base+0xb08c>
   246e8:	ldr	r3, [sp, #20]
   246ec:	mov	r0, #1
   246f0:	add	r9, r3, #15
   246f4:	bic	r9, r9, #15
   246f8:	mov	r1, r9
   246fc:	bl	12518 <calloc@plt>
   24700:	subs	r2, r0, #0
   24704:	str	r2, [sp, #24]
   24708:	beq	24830 <crc32@@Base+0xb08c>
   2470c:	mov	r3, sl
   24710:	ldr	r2, [sp, #20]
   24714:	mov	r1, #1
   24718:	bl	12464 <fread@plt>
   2471c:	ldr	r3, [sp, #20]
   24720:	cmp	r3, r0
   24724:	bne	24828 <crc32@@Base+0xb084>
   24728:	ldr	r2, [sp, #24]
   2472c:	mov	r0, sl
   24730:	str	r9, [r6, #12]
   24734:	str	r2, [r6, #8]
   24738:	bl	125fc <fclose@plt>
   2473c:	ldr	r9, [r6, #12]
   24740:	ands	r3, r9, #15
   24744:	beq	24344 <crc32@@Base+0xaba0>
   24748:	ldr	r3, [sp, #60]	; 0x3c
   2474c:	mov	r1, #1
   24750:	movw	r2, #46344	; 0xb508
   24754:	ldr	r0, [r8]
   24758:	movt	r2, #3
   2475c:	bl	122b4 <__fprintf_chk@plt>
   24760:	ldr	r0, [sp, #44]	; 0x2c
   24764:	ldr	r9, [r6, #12]
   24768:	mov	r3, #0
   2476c:	ldr	r1, [r6, #8]
   24770:	b	2434c <crc32@@Base+0xaba8>
   24774:	add	r1, sp, #48	; 0x30
   24778:	bl	21aa4 <crc32@@Base+0x8300>
   2477c:	subs	r9, r0, #0
   24780:	bne	2480c <crc32@@Base+0xb068>
   24784:	mov	r1, #32
   24788:	mov	r0, #1
   2478c:	bl	12518 <calloc@plt>
   24790:	subs	r1, r0, #0
   24794:	beq	23d94 <crc32@@Base+0xa5f0>
   24798:	ldr	lr, [sp, #48]	; 0x30
   2479c:	mov	r2, #32
   247a0:	ldr	r0, [sp, #44]	; 0x2c
   247a4:	mov	r3, r9
   247a8:	movw	ip, #8401	; 0x20d1
   247ac:	str	r1, [r6, #8]
   247b0:	movt	ip, #16384	; 0x4000
   247b4:	str	lr, [r1, #4]
   247b8:	str	r0, [r1, #20]
   247bc:	mov	r9, r2
   247c0:	str	ip, [r1]
   247c4:	str	r2, [r6, #12]
   247c8:	b	2434c <crc32@@Base+0xaba8>
   247cc:	movw	r2, #46180	; 0xb464
   247d0:	ldr	r3, [sp, #60]	; 0x3c
   247d4:	movt	r2, #3
   247d8:	b	244fc <crc32@@Base+0xad58>
   247dc:	ldr	r0, [r8]
   247e0:	movw	r2, #46632	; 0xb628
   247e4:	ldr	r3, [sp, #60]	; 0x3c
   247e8:	movt	r2, #3
   247ec:	str	r7, [sp]
   247f0:	mov	r1, #1
   247f4:	bl	122b4 <__fprintf_chk@plt>
   247f8:	b	23768 <crc32@@Base+0x9fc4>
   247fc:	movw	r2, #46444	; 0xb56c
   24800:	ldr	r3, [sp, #60]	; 0x3c
   24804:	movt	r2, #3
   24808:	b	244fc <crc32@@Base+0xad58>
   2480c:	movw	r2, #46240	; 0xb4a0
   24810:	ldr	r3, [sp, #60]	; 0x3c
   24814:	movt	r2, #3
   24818:	mov	r1, #1
   2481c:	ldr	r0, [r8]
   24820:	bl	122b4 <__fprintf_chk@plt>
   24824:	b	23d94 <crc32@@Base+0xa5f0>
   24828:	ldr	r0, [sp, #24]
   2482c:	bl	12128 <free@plt>
   24830:	mov	r0, sl
   24834:	bl	125fc <fclose@plt>
   24838:	ldr	r7, [sp, #28]
   2483c:	mov	r1, #1
   24840:	ldr	r0, [r8]
   24844:	movw	r2, #45192	; 0xb088
   24848:	movt	r2, #3
   2484c:	mov	r3, r7
   24850:	bl	122b4 <__fprintf_chk@plt>
   24854:	ldr	r0, [r8]
   24858:	ldr	r3, [sp, #60]	; 0x3c
   2485c:	movw	r2, #46316	; 0xb4ec
   24860:	str	r7, [sp]
   24864:	movt	r2, #3
   24868:	mov	r1, #1
   2486c:	bl	122b4 <__fprintf_chk@plt>
   24870:	b	23d94 <crc32@@Base+0xa5f0>
   24874:	bl	125fc <fclose@plt>
   24878:	movw	r0, #65044	; 0xfe14
   2487c:	movt	r0, #4
   24880:	mov	r1, r4
   24884:	movw	r2, #45192	; 0xb088
   24888:	ldr	r3, [sp, #108]	; 0x6c
   2488c:	ldr	r0, [r0]
   24890:	movt	r2, #3
   24894:	bl	122b4 <__fprintf_chk@plt>
   24898:	mvn	r5, #21
   2489c:	ldr	r7, [sp, #140]	; 0x8c
   248a0:	b	23c88 <crc32@@Base+0xa4e4>
   248a4:	ldrb	r3, [sp, #96]	; 0x60
   248a8:	str	r6, [r7, #12]
   248ac:	tst	r3, #1
   248b0:	str	r6, [r7, #16]
   248b4:	bne	23728 <crc32@@Base+0x9f84>
   248b8:	b	23768 <crc32@@Base+0x9fc4>
   248bc:	movw	r2, #46544	; 0xb5d0
   248c0:	ldr	r3, [sp, #60]	; 0x3c
   248c4:	movt	r2, #3
   248c8:	mov	r1, #1
   248cc:	ldr	r0, [r8]
   248d0:	bl	122b4 <__fprintf_chk@plt>
   248d4:	b	23d94 <crc32@@Base+0xa5f0>
   248d8:	movw	r2, #46512	; 0xb5b0
   248dc:	ldr	r3, [sp, #60]	; 0x3c
   248e0:	movt	r2, #3
   248e4:	b	244fc <crc32@@Base+0xad58>
   248e8:	ldr	r3, [sp, #60]	; 0x3c
   248ec:	movw	r2, #46772	; 0xb6b4
   248f0:	ldr	r0, [r8]
   248f4:	movt	r2, #3
   248f8:	str	r1, [sp]
   248fc:	mov	r1, #1
   24900:	bl	122b4 <__fprintf_chk@plt>
   24904:	mov	r0, r6
   24908:	bl	12128 <free@plt>
   2490c:	ldrb	r3, [sp, #96]	; 0x60
   24910:	tst	r3, #1
   24914:	bne	23728 <crc32@@Base+0x9f84>
   24918:	b	23768 <crc32@@Base+0x9fc4>
   2491c:	movw	r2, #46280	; 0xb4c8
   24920:	ldr	r3, [sp, #60]	; 0x3c
   24924:	movt	r2, #3
   24928:	mov	r1, #1
   2492c:	ldr	r0, [r8]
   24930:	bl	122b4 <__fprintf_chk@plt>
   24934:	b	23d94 <crc32@@Base+0xa5f0>
   24938:	movw	r3, #65044	; 0xfe14
   2493c:	movt	r3, #4
   24940:	movw	r0, #46736	; 0xb690
   24944:	mov	r2, #35	; 0x23
   24948:	ldr	r3, [r3]
   2494c:	movt	r0, #3
   24950:	mov	r1, #1
   24954:	mvn	r5, #21
   24958:	bl	12578 <fwrite@plt>
   2495c:	ldr	r7, [sp, #140]	; 0x8c
   24960:	b	23c88 <crc32@@Base+0xa4e4>
   24964:	movw	r2, #46588	; 0xb5fc
   24968:	ldr	r3, [sp, #60]	; 0x3c
   2496c:	movt	r2, #3
   24970:	mov	r1, #1
   24974:	ldr	r0, [r8]
   24978:	bl	122b4 <__fprintf_chk@plt>
   2497c:	b	23f24 <crc32@@Base+0xa780>
   24980:	str	r7, [sp]
   24984:	movw	r2, #46632	; 0xb628
   24988:	ldr	r3, [sp, #60]	; 0x3c
   2498c:	movt	r2, #3
   24990:	mov	r1, #1
   24994:	ldr	r0, [r8]
   24998:	bl	122b4 <__fprintf_chk@plt>
   2499c:	b	23768 <crc32@@Base+0x9fc4>
   249a0:	bl	12494 <__stack_chk_fail@plt>
   249a4:	cmp	r9, #78	; 0x4e
   249a8:	bne	240e0 <crc32@@Base+0xa93c>
   249ac:	ldrb	r3, [r7, #1]
   249b0:	cmp	r3, #69	; 0x45
   249b4:	bne	240e0 <crc32@@Base+0xa93c>
   249b8:	ldrb	r3, [r7, #2]
   249bc:	cmp	r3, #81	; 0x51
   249c0:	bne	249ec <crc32@@Base+0xb248>
   249c4:	ldrb	r3, [r7, #3]
   249c8:	cmp	r3, #0
   249cc:	bne	240e0 <crc32@@Base+0xa93c>
   249d0:	orr	r3, r6, #-822083584	; 0xcf000000
   249d4:	add	r2, sp, #60	; 0x3c
   249d8:	orr	r3, r3, #8
   249dc:	add	r1, sp, #52	; 0x34
   249e0:	ldr	r0, [sp, #152]	; 0x98
   249e4:	bl	22064 <crc32@@Base+0x88c0>
   249e8:	b	24010 <crc32@@Base+0xa86c>
   249ec:	cmp	r3, #90	; 0x5a
   249f0:	bne	240e0 <crc32@@Base+0xa93c>
   249f4:	ldrb	r3, [r7, #3]
   249f8:	cmp	r3, #0
   249fc:	bne	240e0 <crc32@@Base+0xa93c>
   24a00:	orr	r3, r6, #-822083584	; 0xcf000000
   24a04:	b	24404 <crc32@@Base+0xac60>
   24a08:	b	223b8 <crc32@@Base+0x8c14>
   24a0c:	push	{r4, lr}
   24a10:	mov	r4, r0
   24a14:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   24a18:	mov	r0, r4
   24a1c:	pop	{r4, lr}
   24a20:	b	124b8 <CRYPTO_free@plt>
   24a24:	b	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   24a28:	subs	r0, r0, #12
   24a2c:	movne	r0, #1
   24a30:	bx	lr
   24a34:	ldr	r3, [r0]
   24a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a3c:	cmn	r3, #1
   24a40:	sub	sp, sp, #20
   24a44:	add	fp, r0, #512	; 0x200
   24a48:	beq	24b34 <crc32@@Base+0xb390>
   24a4c:	ldr	r2, [r0, #4]
   24a50:	cmn	r2, #1
   24a54:	beq	24b34 <crc32@@Base+0xb390>
   24a58:	movw	r7, #5168	; 0x1430
   24a5c:	movw	sl, #47012	; 0xb7a4
   24a60:	movw	r9, #46988	; 0xb78c
   24a64:	movw	r8, #47000	; 0xb798
   24a68:	mov	r6, r0
   24a6c:	movt	r7, #6
   24a70:	movt	sl, #3
   24a74:	movt	r9, #3
   24a78:	movt	r8, #3
   24a7c:	add	r5, r0, #20
   24a80:	b	24a94 <crc32@@Base+0xb2f0>
   24a84:	add	r5, r5, #32
   24a88:	ldr	r2, [r5, #-16]
   24a8c:	cmn	r2, #1
   24a90:	beq	24b20 <crc32@@Base+0xb37c>
   24a94:	ldr	r1, [r7]
   24a98:	cmp	r1, #0
   24a9c:	revne	r4, r3
   24aa0:	revne	r1, r2
   24aa4:	moveq	r1, r2
   24aa8:	moveq	r4, r3
   24aac:	cmp	r4, #512	; 0x200
   24ab0:	bcs	24b40 <crc32@@Base+0xb39c>
   24ab4:	add	r1, r4, r1
   24ab8:	cmp	r1, #512	; 0x200
   24abc:	bcs	24b40 <crc32@@Base+0xb39c>
   24ac0:	str	r2, [sp]
   24ac4:	mov	r1, sl
   24ac8:	mov	r2, r5
   24acc:	mov	r0, #1
   24ad0:	bl	12770 <__printf_chk@plt>
   24ad4:	add	ip, r6, r4
   24ad8:	ldr	r3, [r6, r4]
   24adc:	movw	r1, #47044	; 0xb7c4
   24ae0:	ldr	r0, [ip, #8]
   24ae4:	movt	r1, #3
   24ae8:	ldrh	r4, [ip, #6]
   24aec:	cmp	r3, #0
   24af0:	ldrb	lr, [ip, #5]
   24af4:	ldrb	ip, [ip, #4]
   24af8:	movne	r2, r9
   24afc:	moveq	r2, r8
   24b00:	str	r0, [sp, #12]
   24b04:	str	r4, [sp, #8]
   24b08:	mov	r0, #1
   24b0c:	stm	sp, {ip, lr}
   24b10:	bl	12770 <__printf_chk@plt>
   24b14:	ldr	r3, [r5, #12]
   24b18:	cmn	r3, #1
   24b1c:	bne	24a84 <crc32@@Base+0xb2e0>
   24b20:	ldr	r1, [r7]
   24b24:	mov	r0, fp
   24b28:	add	sp, sp, #20
   24b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b30:	b	32a5c <crc32@@Base+0x192b8>
   24b34:	movw	r7, #5168	; 0x1430
   24b38:	movt	r7, #6
   24b3c:	b	24b20 <crc32@@Base+0xb37c>
   24b40:	mov	r0, #1
   24b44:	bl	121f4 <exit@plt>
   24b48:	ldr	r3, [r0]
   24b4c:	movw	r2, #5168	; 0x1430
   24b50:	movt	r2, #6
   24b54:	cmn	r3, #1
   24b58:	ldr	r1, [r2]
   24b5c:	beq	24be0 <crc32@@Base+0xb43c>
   24b60:	ldr	ip, [r0, #4]
   24b64:	cmn	ip, #1
   24b68:	beq	24be0 <crc32@@Base+0xb43c>
   24b6c:	push	{r4, r5, lr}
   24b70:	mov	lr, r0
   24b74:	movw	r5, #510	; 0x1fe
   24b78:	b	24ba0 <crc32@@Base+0xb3fc>
   24b7c:	cmp	r3, #512	; 0x200
   24b80:	bcs	24bcc <crc32@@Base+0xb428>
   24b84:	ldr	r3, [lr, #32]
   24b88:	add	lr, lr, #32
   24b8c:	cmn	r3, #1
   24b90:	beq	24bd4 <crc32@@Base+0xb430>
   24b94:	ldr	ip, [lr, #4]
   24b98:	cmn	ip, #1
   24b9c:	beq	24bd4 <crc32@@Base+0xb430>
   24ba0:	cmp	r1, #0
   24ba4:	revne	ip, ip
   24ba8:	revne	r3, r3
   24bac:	clz	r2, ip
   24bb0:	sub	r4, r3, #1
   24bb4:	add	r3, r3, ip
   24bb8:	lsr	r2, r2, #5
   24bbc:	cmp	r4, r5
   24bc0:	orrhi	r2, r2, #1
   24bc4:	cmp	r2, #0
   24bc8:	beq	24b7c <crc32@@Base+0xb3d8>
   24bcc:	mvn	r0, #0
   24bd0:	pop	{r4, r5, pc}
   24bd4:	add	r0, r0, #512	; 0x200
   24bd8:	pop	{r4, r5, lr}
   24bdc:	b	329e4 <crc32@@Base+0x19240>
   24be0:	add	r0, r0, #512	; 0x200
   24be4:	b	329e4 <crc32@@Base+0x19240>
   24be8:	movw	r2, #46988	; 0xb78c
   24bec:	movt	r2, #3
   24bf0:	push	{r4, r5, r6, r7, r8, lr}
   24bf4:	mov	r4, r0
   24bf8:	mov	r7, r1
   24bfc:	ldm	r2!, {r0, r1}
   24c00:	mov	ip, #64	; 0x40
   24c04:	mov	lr, #12
   24c08:	stm	r4, {ip, lr}
   24c0c:	mov	r5, r3
   24c10:	ldrb	lr, [r2, #2]
   24c14:	movw	r3, #49345	; 0xc0c1
   24c18:	ldrh	r6, [r2]
   24c1c:	movt	r3, #49344	; 0xc0c0
   24c20:	str	r0, [r4, #20]
   24c24:	mov	r2, #256	; 0x100
   24c28:	strb	lr, [r4, #30]
   24c2c:	add	r0, r4, #32
   24c30:	str	r1, [r4, #24]
   24c34:	mov	r1, #255	; 0xff
   24c38:	strh	r6, [r4, #28]
   24c3c:	mov	r6, #0
   24c40:	str	r3, [r4, #64]	; 0x40
   24c44:	str	r2, [r4, #68]	; 0x44
   24c48:	mov	r2, #32
   24c4c:	str	r6, [r4, #72]	; 0x48
   24c50:	bl	122e4 <memset@plt>
   24c54:	ldr	r1, [r7, #44]	; 0x2c
   24c58:	mov	r3, r6
   24c5c:	ldr	r2, [r5, #56]	; 0x38
   24c60:	sub	r1, r1, #512	; 0x200
   24c64:	add	r0, r4, #512	; 0x200
   24c68:	bl	32b24 <crc32@@Base+0x19380>
   24c6c:	ldr	r0, [r5, #64]	; 0x40
   24c70:	movw	r1, #47096	; 0xb7f8
   24c74:	mov	r2, #8
   24c78:	movt	r1, #3
   24c7c:	bl	1217c <strncmp@plt>
   24c80:	cmp	r0, #0
   24c84:	popne	{r4, r5, r6, r7, r8, pc}
   24c88:	ldr	r2, [r7, #44]	; 0x2c
   24c8c:	movw	r3, #5168	; 0x1430
   24c90:	movt	r3, #6
   24c94:	mov	r1, #1
   24c98:	add	r2, r2, #3
   24c9c:	str	r1, [r3]
   24ca0:	lsrs	r2, r2, #2
   24ca4:	popeq	{r4, r5, r6, r7, r8, pc}
   24ca8:	add	r0, r0, #1
   24cac:	ldr	r3, [r4]
   24cb0:	cmp	r2, r0
   24cb4:	rev	r3, r3
   24cb8:	str	r3, [r4], #4
   24cbc:	bne	24ca8 <crc32@@Base+0xb504>
   24cc0:	pop	{r4, r5, r6, r7, r8, pc}
   24cc4:	subs	r0, r0, #15
   24cc8:	movne	r0, #1
   24ccc:	bx	lr
   24cd0:	bx	lr
   24cd4:	movw	r0, #47144	; 0xb828
   24cd8:	movt	r0, #3
   24cdc:	b	1226c <puts@plt>
   24ce0:	movw	r3, #61168	; 0xeef0
   24ce4:	movt	r3, #4
   24ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cec:	movw	r4, #63816	; 0xf948
   24cf0:	ldr	r2, [r3]
   24cf4:	sub	sp, sp, #44	; 0x2c
   24cf8:	movt	r4, #4
   24cfc:	movw	r1, #49540	; 0xc184
   24d00:	movt	r1, #3
   24d04:	str	r3, [sp, #12]
   24d08:	str	r0, [r4]
   24d0c:	mov	r3, #0
   24d10:	str	r2, [sp, #36]	; 0x24
   24d14:	str	r3, [sp, #16]
   24d18:	str	r3, [sp, #28]
   24d1c:	bl	1232c <fopen@plt>
   24d20:	subs	sl, r0, #0
   24d24:	beq	24e60 <crc32@@Base+0xb6bc>
   24d28:	movw	fp, #25472	; 0x6380
   24d2c:	movw	r6, #5692	; 0x163c
   24d30:	movt	fp, #3
   24d34:	movt	r6, #6
   24d38:	mov	r3, sl
   24d3c:	mov	r2, #10
   24d40:	add	r1, sp, #28
   24d44:	add	r0, sp, #16
   24d48:	bl	12134 <__getdelim@plt>
   24d4c:	cmp	r0, #0
   24d50:	ble	24e08 <crc32@@Base+0xb664>
   24d54:	ldr	r9, [r4, #4]
   24d58:	add	r2, sp, #20
   24d5c:	mov	r1, fp
   24d60:	ldr	r0, [sp, #16]
   24d64:	add	r9, r9, #1
   24d68:	str	r9, [r4, #4]
   24d6c:	bl	12224 <__strtok_r@plt>
   24d70:	cmp	r0, #0
   24d74:	beq	24d38 <crc32@@Base+0xb594>
   24d78:	movw	r7, #25476	; 0x6384
   24d7c:	movw	r8, #47208	; 0xb868
   24d80:	movt	r7, #3
   24d84:	movt	r8, #3
   24d88:	str	r0, [sp, #16]
   24d8c:	add	r2, sp, #24
   24d90:	mov	r1, r7
   24d94:	bl	12224 <__strtok_r@plt>
   24d98:	subs	r5, r0, #0
   24d9c:	beq	24d38 <crc32@@Base+0xb594>
   24da0:	ldrb	r3, [r5]
   24da4:	cmp	r3, #35	; 0x23
   24da8:	beq	24d38 <crc32@@Base+0xb594>
   24dac:	add	r2, sp, #32
   24db0:	mov	r1, r8
   24db4:	bl	126a4 <sscanf@plt>
   24db8:	cmp	r0, #0
   24dbc:	beq	24e3c <crc32@@Base+0xb698>
   24dc0:	ldr	r0, [r4, #8]
   24dc4:	mov	r3, #24
   24dc8:	ldr	ip, [r6]
   24dcc:	sub	r1, r0, #1
   24dd0:	ldr	r2, [sp, #32]
   24dd4:	lsr	r2, r2, r3
   24dd8:	sub	r3, r3, #8
   24ddc:	cmn	r3, #8
   24de0:	strb	r2, [r1, #1]!
   24de4:	bne	24dd0 <crc32@@Base+0xb62c>
   24de8:	mov	r3, #0
   24dec:	add	r0, r0, #4
   24df0:	add	ip, ip, #4
   24df4:	str	r0, [r4, #8]
   24df8:	str	ip, [r6]
   24dfc:	mov	r0, r3
   24e00:	str	r3, [sp, #16]
   24e04:	b	24d8c <crc32@@Base+0xb5e8>
   24e08:	ldr	r0, [sp, #16]
   24e0c:	cmp	r0, #0
   24e10:	beq	24e18 <crc32@@Base+0xb674>
   24e14:	bl	12128 <free@plt>
   24e18:	mov	r0, sl
   24e1c:	bl	125fc <fclose@plt>
   24e20:	ldr	r3, [sp, #12]
   24e24:	ldr	r2, [sp, #36]	; 0x24
   24e28:	ldr	r3, [r3]
   24e2c:	cmp	r2, r3
   24e30:	bne	24e7c <crc32@@Base+0xb6d8>
   24e34:	add	sp, sp, #44	; 0x2c
   24e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e3c:	ldr	r2, [r4]
   24e40:	mov	r3, r9
   24e44:	str	r5, [sp]
   24e48:	movw	r1, #47212	; 0xb86c
   24e4c:	mov	r0, #1
   24e50:	movt	r1, #3
   24e54:	bl	12770 <__printf_chk@plt>
   24e58:	mov	r0, #1
   24e5c:	bl	121f4 <exit@plt>
   24e60:	ldr	r2, [r4]
   24e64:	movw	r1, #47184	; 0xb850
   24e68:	mov	r0, #1
   24e6c:	movt	r1, #3
   24e70:	bl	12770 <__printf_chk@plt>
   24e74:	mov	r0, #1
   24e78:	bl	121f4 <exit@plt>
   24e7c:	bl	12494 <__stack_chk_fail@plt>
   24e80:	push	{r4, r5, r6, r7, lr}
   24e84:	movw	r5, #61168	; 0xeef0
   24e88:	movt	r5, #4
   24e8c:	sub	sp, sp, #100	; 0x64
   24e90:	subs	r6, r0, #0
   24e94:	ldr	r3, [r5]
   24e98:	str	r3, [sp, #92]	; 0x5c
   24e9c:	beq	24f98 <crc32@@Base+0xb7f4>
   24ea0:	ldr	r0, [r6, #72]	; 0x48
   24ea4:	cmp	r0, #0
   24ea8:	movweq	r4, #5692	; 0x163c
   24eac:	movteq	r4, #6
   24eb0:	beq	24f08 <crc32@@Base+0xb764>
   24eb4:	movw	r1, #49540	; 0xc184
   24eb8:	movt	r1, #3
   24ebc:	bl	1232c <fopen@plt>
   24ec0:	subs	r7, r0, #0
   24ec4:	beq	24fe4 <crc32@@Base+0xb840>
   24ec8:	bl	12488 <fileno@plt>
   24ecc:	mov	r2, sp
   24ed0:	mov	r1, r0
   24ed4:	mov	r0, #3
   24ed8:	bl	12554 <__fxstat@plt>
   24edc:	cmn	r0, #1
   24ee0:	beq	25000 <crc32@@Base+0xb85c>
   24ee4:	ldr	r2, [sp, #44]	; 0x2c
   24ee8:	movw	r4, #5692	; 0x163c
   24eec:	movt	r4, #6
   24ef0:	mov	r0, r7
   24ef4:	adds	r3, r2, #63	; 0x3f
   24ef8:	addmi	r3, r2, #126	; 0x7e
   24efc:	bic	r3, r3, #63	; 0x3f
   24f00:	str	r3, [r4, #4]
   24f04:	bl	125fc <fclose@plt>
   24f08:	ldr	r2, [r6, #40]	; 0x28
   24f0c:	cmp	r2, #2
   24f10:	beq	24f48 <crc32@@Base+0xb7a4>
   24f14:	cmp	r2, #7
   24f18:	beq	24fa0 <crc32@@Base+0xb7fc>
   24f1c:	ldr	r3, [r4, #20]
   24f20:	movw	r2, #63816	; 0xf948
   24f24:	movt	r2, #4
   24f28:	mov	r0, #0
   24f2c:	str	r3, [r2, #12]
   24f30:	ldr	r2, [sp, #92]	; 0x5c
   24f34:	ldr	r3, [r5]
   24f38:	cmp	r2, r3
   24f3c:	bne	24fe0 <crc32@@Base+0xb83c>
   24f40:	add	sp, sp, #100	; 0x64
   24f44:	pop	{r4, r5, r6, r7, pc}
   24f48:	ldr	r3, [r6, #56]	; 0x38
   24f4c:	mov	r1, #0
   24f50:	ldr	r0, [r4, #4]
   24f54:	movt	r1, #2401	; 0x961
   24f58:	bic	r3, r3, #-16777216	; 0xff000000
   24f5c:	str	r2, [r4, #8]
   24f60:	orr	r3, r3, #-2130706432	; 0x81000000
   24f64:	str	r1, [r4, #24]
   24f68:	add	r3, r3, r0
   24f6c:	mov	r2, #192	; 0xc0
   24f70:	mov	r1, #97	; 0x61
   24f74:	movt	r2, #2401	; 0x961
   24f78:	str	r3, [r4, #20]
   24f7c:	str	r2, [r4, #32]
   24f80:	mov	r2, #0
   24f84:	str	r1, [r4, #12]
   24f88:	str	r2, [r4, #16]
   24f8c:	str	r2, [r4, #28]
   24f90:	str	r2, [r4, #36]	; 0x24
   24f94:	b	24f20 <crc32@@Base+0xb77c>
   24f98:	mov	r0, #1
   24f9c:	b	24f30 <crc32@@Base+0xb78c>
   24fa0:	mov	r1, #-2113929216	; 0x82000000
   24fa4:	str	r2, [r4, #8]
   24fa8:	mov	r3, r1
   24fac:	movw	r2, #32960	; 0x80c0
   24fb0:	str	r1, [r4, #20]
   24fb4:	movt	r2, #2323	; 0x913
   24fb8:	mov	r0, #19
   24fbc:	str	r2, [r4, #24]
   24fc0:	str	r2, [r4, #32]
   24fc4:	mov	r1, #128	; 0x80
   24fc8:	mov	r2, #0
   24fcc:	str	r0, [r4, #12]
   24fd0:	str	r1, [r4, #16]
   24fd4:	str	r2, [r4, #28]
   24fd8:	str	r2, [r4, #36]	; 0x24
   24fdc:	b	24f20 <crc32@@Base+0xb77c>
   24fe0:	bl	12494 <__stack_chk_fail@plt>
   24fe4:	ldr	r2, [r6, #72]	; 0x48
   24fe8:	movw	r1, #47252	; 0xb894
   24fec:	mov	r0, #1
   24ff0:	movt	r1, #3
   24ff4:	bl	12770 <__printf_chk@plt>
   24ff8:	mov	r0, #1
   24ffc:	bl	121f4 <exit@plt>
   25000:	bl	1268c <__errno_location@plt>
   25004:	ldr	r0, [r0]
   25008:	bl	12200 <strerror@plt>
   2500c:	movw	r1, #47276	; 0xb8ac
   25010:	movt	r1, #3
   25014:	mov	r2, r0
   25018:	mov	r0, #1
   2501c:	bl	12770 <__printf_chk@plt>
   25020:	mov	r0, #1
   25024:	bl	121f4 <exit@plt>
   25028:	movw	r3, #61168	; 0xeef0
   2502c:	movt	r3, #4
   25030:	ldr	ip, [r0]
   25034:	movw	r2, #21930	; 0x55aa
   25038:	ldr	r1, [r3]
   2503c:	movt	r2, #21930	; 0x55aa
   25040:	push	{lr}		; (str lr, [sp, #-4]!)
   25044:	cmp	ip, r2
   25048:	sub	sp, sp, #12
   2504c:	str	r2, [sp]
   25050:	str	r1, [sp, #4]
   25054:	bne	2508c <crc32@@Base+0xb8e8>
   25058:	ldr	r1, [r0, #4]
   2505c:	movw	r2, #3585	; 0xe01
   25060:	movt	r2, #1
   25064:	str	r2, [sp]
   25068:	cmp	r1, r2
   2506c:	bne	2508c <crc32@@Base+0xb8e8>
   25070:	mov	r0, #0
   25074:	ldr	r2, [sp, #4]
   25078:	ldr	r3, [r3]
   2507c:	cmp	r2, r3
   25080:	bne	25094 <crc32@@Base+0xb8f0>
   25084:	add	sp, sp, #12
   25088:	pop	{pc}		; (ldr pc, [sp], #4)
   2508c:	mvn	r0, #10
   25090:	b	25074 <crc32@@Base+0xb8d0>
   25094:	bl	12494 <__stack_chk_fail@plt>
   25098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2509c:	movw	r7, #61168	; 0xeef0
   250a0:	movt	r7, #4
   250a4:	sub	sp, sp, #20
   250a8:	mov	r8, r1
   250ac:	mov	r9, r0
   250b0:	ldr	r3, [r7]
   250b4:	ldr	r0, [r1, #64]	; 0x40
   250b8:	str	r3, [sp, #12]
   250bc:	bl	24ce0 <crc32@@Base+0xb53c>
   250c0:	ldr	r0, [r8, #68]	; 0x44
   250c4:	ldrb	r3, [r0]
   250c8:	cmp	r3, #0
   250cc:	bne	252cc <crc32@@Base+0xbb28>
   250d0:	ldr	r0, [r8, #72]	; 0x48
   250d4:	cmp	r0, #0
   250d8:	beq	252dc <crc32@@Base+0xbb38>
   250dc:	movw	r1, #49540	; 0xc184
   250e0:	movt	r1, #3
   250e4:	bl	1232c <fopen@plt>
   250e8:	subs	r6, r0, #0
   250ec:	beq	252f0 <crc32@@Base+0xbb4c>
   250f0:	movw	r4, #5692	; 0x163c
   250f4:	movt	r4, #6
   250f8:	movw	sl, #63816	; 0xf948
   250fc:	movt	sl, #4
   25100:	ldr	r2, [r4, #20]
   25104:	ldr	r3, [r4, #4]
   25108:	sub	r3, r2, r3
   2510c:	str	r3, [sl, #12]
   25110:	cmp	r3, r2
   25114:	bcs	251ac <crc32@@Base+0xba08>
   25118:	ldr	r2, [sl, #8]
   2511c:	mov	fp, #255	; 0xff
   25120:	ldr	r1, [r4]
   25124:	lsr	r0, r3, #24
   25128:	mov	r5, #64	; 0x40
   2512c:	add	r2, r2, #4
   25130:	strb	r3, [r2, #-1]
   25134:	add	r1, r1, #4
   25138:	strb	r0, [r2, #-4]
   2513c:	lsr	r0, r3, #16
   25140:	str	r1, [r4]
   25144:	lsr	r1, r3, #8
   25148:	strb	r0, [r2, #-3]
   2514c:	add	r3, r3, r5
   25150:	strb	r1, [r2, #-2]
   25154:	strd	r2, [sl, #8]
   25158:	mov	r0, r6
   2515c:	bl	121ac <fgetc@plt>
   25160:	cmn	r0, #1
   25164:	uxtbne	fp, r0
   25168:	bne	25178 <crc32@@Base+0xb9d4>
   2516c:	ldr	r3, [r4, #8]
   25170:	cmp	r3, #2
   25174:	moveq	fp, #255	; 0xff
   25178:	ldr	r2, [sl, #8]
   2517c:	subs	r5, r5, #1
   25180:	ldr	r3, [r4]
   25184:	add	r1, r2, #1
   25188:	str	r1, [sl, #8]
   2518c:	add	r3, r3, #1
   25190:	strb	fp, [r2]
   25194:	str	r3, [r4]
   25198:	bne	25158 <crc32@@Base+0xb9b4>
   2519c:	ldr	r3, [sl, #12]
   251a0:	ldr	r2, [r4, #20]
   251a4:	cmp	r3, r2
   251a8:	bcc	25118 <crc32@@Base+0xb974>
   251ac:	mov	r0, r6
   251b0:	bl	125fc <fclose@plt>
   251b4:	ldr	r2, [pc, #404]	; 25350 <crc32@@Base+0xbbac>
   251b8:	add	r0, r2, #16
   251bc:	ldr	r3, [r2]
   251c0:	lsr	r1, r3, #24
   251c4:	strb	r3, [sp, #11]
   251c8:	strb	r1, [sp, #8]
   251cc:	lsr	r1, r3, #16
   251d0:	lsr	r3, r3, #8
   251d4:	strb	r1, [sp, #9]
   251d8:	strb	r3, [sp, #10]
   251dc:	ldr	r3, [sp, #8]
   251e0:	str	r3, [r2], #4
   251e4:	cmp	r0, r2
   251e8:	bne	251bc <crc32@@Base+0xba18>
   251ec:	ldr	ip, [sl, #8]
   251f0:	ldr	lr, [r4]
   251f4:	ldr	r3, [pc, #340]	; 25350 <crc32@@Base+0xbbac>
   251f8:	sub	r2, ip, #1
   251fc:	ldrb	r1, [r3], #1
   25200:	cmp	r3, r0
   25204:	strb	r1, [r2, #1]!
   25208:	bne	251fc <crc32@@Base+0xba58>
   2520c:	ldr	r2, [r4, #12]
   25210:	add	lr, lr, #20
   25214:	ldr	r1, [r4, #16]
   25218:	mov	r0, #8
   2521c:	strb	r0, [ip, #16]
   25220:	mov	r0, #0
   25224:	strb	r2, [ip, #17]
   25228:	mov	r2, lr
   2522c:	strb	r1, [ip, #18]
   25230:	mov	r1, #64	; 0x40
   25234:	strb	r1, [ip, #19]
   25238:	movw	r1, #5804	; 0x16ac
   2523c:	movt	r1, #6
   25240:	str	lr, [r4]
   25244:	add	ip, ip, #20
   25248:	str	ip, [sl, #8]
   2524c:	bl	25354 <crc32@@Base+0xbbb0>
   25250:	ldr	r3, [sl, #8]
   25254:	ldr	r5, [r4]
   25258:	mov	r2, #0
   2525c:	add	r3, r3, #4
   25260:	add	r5, r5, #4
   25264:	str	r5, [r4]
   25268:	mov	r1, r0
   2526c:	mov	r0, r9
   25270:	strb	r1, [r3, #-1]
   25274:	lsr	ip, r1, #24
   25278:	strb	ip, [r3, #-4]
   2527c:	lsr	ip, r1, #16
   25280:	lsr	r1, r1, #8
   25284:	strb	ip, [r3, #-3]
   25288:	strb	r1, [r3, #-2]
   2528c:	mov	r1, r2
   25290:	str	r3, [sl, #8]
   25294:	bl	124f4 <lseek@plt>
   25298:	mov	r2, r5
   2529c:	mov	r0, r9
   252a0:	movw	r1, #5804	; 0x16ac
   252a4:	movt	r1, #6
   252a8:	bl	12608 <write@plt>
   252ac:	cmp	r0, r5
   252b0:	bne	25310 <crc32@@Base+0xbb6c>
   252b4:	ldr	r2, [sp, #12]
   252b8:	ldr	r3, [r7]
   252bc:	cmp	r2, r3
   252c0:	bne	2530c <crc32@@Base+0xbb68>
   252c4:	add	sp, sp, #20
   252c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252cc:	bl	24ce0 <crc32@@Base+0xb53c>
   252d0:	ldr	r0, [r8, #72]	; 0x48
   252d4:	cmp	r0, #0
   252d8:	bne	250dc <crc32@@Base+0xb938>
   252dc:	movw	r4, #5692	; 0x163c
   252e0:	movw	sl, #63816	; 0xf948
   252e4:	movt	r4, #6
   252e8:	movt	sl, #4
   252ec:	b	251b4 <crc32@@Base+0xba10>
   252f0:	ldr	r2, [r8, #72]	; 0x48
   252f4:	movw	r1, #47252	; 0xb894
   252f8:	mov	r0, #1
   252fc:	movt	r1, #3
   25300:	bl	12770 <__printf_chk@plt>
   25304:	mov	r0, #1
   25308:	bl	121f4 <exit@plt>
   2530c:	bl	12494 <__stack_chk_fail@plt>
   25310:	movw	r2, #65044	; 0xfe14
   25314:	movt	r2, #4
   25318:	ldr	r5, [r8, #76]	; 0x4c
   2531c:	ldr	r4, [r2]
   25320:	bl	1268c <__errno_location@plt>
   25324:	ldr	r0, [r0]
   25328:	bl	12200 <strerror@plt>
   2532c:	mov	r3, r5
   25330:	movw	r2, #47328	; 0xb8e0
   25334:	mov	r1, #1
   25338:	movt	r2, #3
   2533c:	str	r0, [sp]
   25340:	mov	r0, r4
   25344:	bl	122b4 <__fprintf_chk@plt>
   25348:	mov	r0, #1
   2534c:	bl	121f4 <exit@plt>
   25350:	andeq	r1, r6, r4, asr r6
   25354:	push	{r4, r5, r6, r7, r8, lr}
   25358:	movw	r8, #22764	; 0x58ec
   2535c:	movt	r8, #21
   25360:	ldr	r4, [r8]
   25364:	cmp	r4, #0
   25368:	bne	253b4 <crc32@@Base+0xbc10>
   2536c:	movw	r6, #7607	; 0x1db7
   25370:	add	r7, r8, #1024	; 0x400
   25374:	movt	r6, #1217	; 0x4c1
   25378:	mov	r5, r8
   2537c:	mov	r3, r4
   25380:	mov	ip, #8
   25384:	cmp	r3, #0
   25388:	mov	lr, r3
   2538c:	lsl	r3, r3, #1
   25390:	eorlt	r3, r3, r6
   25394:	subs	ip, ip, #1
   25398:	bne	25384 <crc32@@Base+0xbbe0>
   2539c:	str	r3, [r5, #4]!
   253a0:	cmp	r5, r7
   253a4:	add	r4, r4, #16777216	; 0x1000000
   253a8:	bne	2537c <crc32@@Base+0xbbd8>
   253ac:	mov	r3, #1
   253b0:	str	r3, [r8]
   253b4:	cmp	r2, #0
   253b8:	mvn	r0, r0
   253bc:	popeq	{r4, r5, r6, r7, r8, pc}
   253c0:	add	r2, r1, r2
   253c4:	ldrb	r3, [r1], #1
   253c8:	eor	r3, r3, r0, lsr #24
   253cc:	cmp	r1, r2
   253d0:	add	r3, r8, r3, lsl #2
   253d4:	ldr	r3, [r3, #4]
   253d8:	eor	r0, r3, r0, lsl #8
   253dc:	bne	253c4 <crc32@@Base+0xbc20>
   253e0:	pop	{r4, r5, r6, r7, r8, pc}
   253e4:	subs	r0, r0, #30
   253e8:	movne	r0, #1
   253ec:	bx	lr
   253f0:	push	{r4, r5, r6, r7, r8, lr}
   253f4:	lsr	r2, r0, #3
   253f8:	lsr	r5, r0, #2
   253fc:	lsr	lr, r0, #5
   25400:	lsr	r7, r0, #1
   25404:	lsr	r4, r0, #4
   25408:	eor	r3, r5, r2
   2540c:	lsr	r1, r0, #7
   25410:	eor	r2, r2, r4
   25414:	and	ip, r0, #1
   25418:	eor	r3, r3, lr
   2541c:	eor	r4, r4, lr
   25420:	eor	lr, lr, r7
   25424:	lsr	r6, r0, #6
   25428:	eor	ip, ip, r1
   2542c:	and	r8, r2, #1
   25430:	and	lr, lr, #1
   25434:	eor	r8, r8, ip
   25438:	eor	r3, r3, r6
   2543c:	and	r4, r4, #1
   25440:	eor	r0, r0, r2
   25444:	eor	ip, ip, lr
   25448:	eor	r2, r7, r5
   2544c:	and	lr, r6, #1
   25450:	eor	r0, r0, r6
   25454:	eor	ip, ip, lr
   25458:	eor	r1, r1, r4
   2545c:	and	lr, r2, #1
   25460:	and	r3, r3, #1
   25464:	eor	r2, r2, r0
   25468:	orr	r3, r3, r8, lsl #3
   2546c:	eor	r1, r1, lr
   25470:	orr	r3, r3, ip, lsl #2
   25474:	and	r0, r2, #1
   25478:	orr	r3, r3, r1, lsl #1
   2547c:	orr	r0, r3, r0, lsl #4
   25480:	pop	{r4, r5, r6, r7, r8, pc}
   25484:	push	{r4, r5, r6, r7, r8, lr}
   25488:	mov	r2, #216	; 0xd8
   2548c:	mov	r1, #0
   25490:	mov	r7, r0
   25494:	bl	122e4 <memset@plt>
   25498:	add	r5, r7, #508	; 0x1fc
   2549c:	mov	r2, #288	; 0x120
   254a0:	mov	r1, #255	; 0xff
   254a4:	add	r0, r7, #224	; 0xe0
   254a8:	add	r5, r5, #3
   254ac:	bl	122e4 <memset@plt>
   254b0:	mov	r2, #512	; 0x200
   254b4:	mov	r1, #255	; 0xff
   254b8:	add	r0, r7, #512	; 0x200
   254bc:	bl	122e4 <memset@plt>
   254c0:	sub	r4, r7, #1
   254c4:	mov	r2, #261120	; 0x3fc00
   254c8:	mov	r1, #255	; 0xff
   254cc:	add	r0, r7, #1024	; 0x400
   254d0:	mov	r6, r5
   254d4:	bl	122e4 <memset@plt>
   254d8:	mov	r2, #1024	; 0x400
   254dc:	mov	r1, #0
   254e0:	add	r0, r7, #262144	; 0x40000
   254e4:	bl	122e4 <memset@plt>
   254e8:	mov	r0, #2112	; 0x840
   254ec:	mov	r1, #64	; 0x40
   254f0:	mov	r2, #2048	; 0x800
   254f4:	strd	r0, [r7, #24]
   254f8:	movw	r3, #16928	; 0x4220
   254fc:	mov	r0, #0
   25500:	movt	r3, #17987	; 0x4643
   25504:	mov	r1, #8
   25508:	str	r3, [r7, #4]
   2550c:	strd	r0, [r7, #216]	; 0xd8
   25510:	mov	r3, #6
   25514:	str	r2, [r7, #20]
   25518:	str	r3, [r7, #56]	; 0x38
   2551c:	mov	r3, #65280	; 0xff00
   25520:	str	r2, [r7, #132]	; 0x84
   25524:	movt	r3, #1
   25528:	str	r3, [r7, #120]	; 0x78
   2552c:	mov	r3, #1
   25530:	str	r3, [r7, #8]
   25534:	str	r3, [r7, #172]	; 0xac
   25538:	mov	r3, #128	; 0x80
   2553c:	str	r3, [r7, #104]	; 0x68
   25540:	str	r3, [r7, #108]	; 0x6c
   25544:	ldrb	r0, [r4, #1]!
   25548:	bl	253f0 <crc32@@Base+0xbc4c>
   2554c:	cmp	r4, r6
   25550:	strb	r0, [r5, #1]!
   25554:	bne	25544 <crc32@@Base+0xbda0>
   25558:	pop	{r4, r5, r6, r7, r8, pc}
   2555c:	push	{r4, r5, r6, lr}
   25560:	movw	r6, #47396	; 0xb924
   25564:	sub	r5, r0, #4
   25568:	movt	r6, #3
   2556c:	mov	r4, #0
   25570:	mov	r2, r4
   25574:	ldr	r3, [r5, #4]!
   25578:	mov	r1, r6
   2557c:	add	r4, r4, #1
   25580:	mov	r0, #1
   25584:	bl	12770 <__printf_chk@plt>
   25588:	cmp	r4, #56	; 0x38
   2558c:	bne	25570 <crc32@@Base+0xbdcc>
   25590:	pop	{r4, r5, r6, pc}
   25594:	ldr	r2, [r0, #4]
   25598:	movw	r3, #16928	; 0x4220
   2559c:	movt	r3, #17987	; 0x4643
   255a0:	cmp	r2, r3
   255a4:	bne	25640 <crc32@@Base+0xbe9c>
   255a8:	ldr	r3, [r0, #8]
   255ac:	cmp	r3, #1
   255b0:	bne	25640 <crc32@@Base+0xbe9c>
   255b4:	ldr	r3, [r0, #28]
   255b8:	cmp	r3, #64	; 0x40
   255bc:	bne	25640 <crc32@@Base+0xbe9c>
   255c0:	ldr	r3, [r0, #56]	; 0x38
   255c4:	cmp	r3, #6
   255c8:	bne	25640 <crc32@@Base+0xbe9c>
   255cc:	ldr	r2, [r0, #120]	; 0x78
   255d0:	mov	r3, #65280	; 0xff00
   255d4:	movt	r3, #1
   255d8:	cmp	r2, r3
   255dc:	bne	25640 <crc32@@Base+0xbe9c>
   255e0:	ldr	r3, [r0, #172]	; 0xac
   255e4:	cmp	r3, #1
   255e8:	bne	25640 <crc32@@Base+0xbe9c>
   255ec:	ldr	r3, [r0, #216]	; 0xd8
   255f0:	cmp	r3, #0
   255f4:	bne	25640 <crc32@@Base+0xbe9c>
   255f8:	ldr	r3, [r0, #220]	; 0xdc
   255fc:	cmp	r3, #8
   25600:	bne	25640 <crc32@@Base+0xbe9c>
   25604:	push	{r4, r5, r6, lr}
   25608:	add	r5, r0, #508	; 0x1fc
   2560c:	add	r5, r5, #3
   25610:	sub	r4, r0, #1
   25614:	mov	r6, r5
   25618:	b	25624 <crc32@@Base+0xbe80>
   2561c:	cmp	r4, r6
   25620:	beq	25648 <crc32@@Base+0xbea4>
   25624:	ldrb	r0, [r4, #1]!
   25628:	bl	253f0 <crc32@@Base+0xbc4c>
   2562c:	ldrb	r3, [r5, #1]!
   25630:	cmp	r3, r0
   25634:	beq	2561c <crc32@@Base+0xbe78>
   25638:	mvn	r0, #0
   2563c:	pop	{r4, r5, r6, pc}
   25640:	mvn	r0, #0
   25644:	bx	lr
   25648:	mov	r0, #0
   2564c:	pop	{r4, r5, r6, pc}
   25650:	subs	r0, r0, #34	; 0x22
   25654:	movne	r0, #1
   25658:	bx	lr
   2565c:	cmp	r0, #0
   25660:	beq	25688 <crc32@@Base+0xbee4>
   25664:	mov	r2, #1
   25668:	movw	ip, #21587	; 0x5453
   2566c:	strb	r2, [r0, #74]	; 0x4a
   25670:	movt	ip, #12877	; 0x324d
   25674:	str	r2, [r0, #100]	; 0x64
   25678:	str	ip, [r0]
   2567c:	mov	ip, #0
   25680:	str	r2, [r0, #104]	; 0x68
   25684:	str	ip, [r0, #252]	; 0xfc
   25688:	ldr	r1, [r1, #44]	; 0x2c
   2568c:	ldr	ip, [r3, #56]	; 0x38
   25690:	ldr	r2, [r3, #60]	; 0x3c
   25694:	cmp	r1, #255	; 0xff
   25698:	sub	r3, r1, #256	; 0x100
   2569c:	str	r3, [r0, #76]	; 0x4c
   256a0:	str	ip, [r0, #88]	; 0x58
   256a4:	movls	r3, #0
   256a8:	str	r2, [r0, #80]	; 0x50
   256ac:	bls	256d4 <crc32@@Base+0xbf30>
   256b0:	cmp	r3, #0
   256b4:	add	r2, r0, #256	; 0x100
   256b8:	beq	256d4 <crc32@@Base+0xbf30>
   256bc:	add	r1, r0, r1
   256c0:	mov	r3, #0
   256c4:	ldrb	ip, [r2], #1
   256c8:	cmp	r1, r2
   256cc:	add	r3, r3, ip
   256d0:	bne	256c4 <crc32@@Base+0xbf20>
   256d4:	str	r3, [r0, #68]	; 0x44
   256d8:	bx	lr
   256dc:	push	{r4, lr}
   256e0:	movw	r1, #47420	; 0xb93c
   256e4:	mov	r4, r0
   256e8:	ldrb	r3, [r0, #73]	; 0x49
   256ec:	ldrb	r2, [r0, #74]	; 0x4a
   256f0:	movt	r1, #3
   256f4:	mov	r0, #1
   256f8:	bl	12770 <__printf_chk@plt>
   256fc:	ldr	r2, [r4, #76]	; 0x4c
   25700:	movw	r1, #47468	; 0xb96c
   25704:	mov	r0, #1
   25708:	movt	r1, #3
   2570c:	bl	12770 <__printf_chk@plt>
   25710:	ldr	r2, [r4, #88]	; 0x58
   25714:	movw	r1, #47496	; 0xb988
   25718:	mov	r0, #1
   2571c:	movt	r1, #3
   25720:	bl	12770 <__printf_chk@plt>
   25724:	ldr	r2, [r4, #80]	; 0x50
   25728:	movw	r1, #47520	; 0xb9a0
   2572c:	mov	r0, #1
   25730:	movt	r1, #3
   25734:	bl	12770 <__printf_chk@plt>
   25738:	ldr	r2, [r4, #68]	; 0x44
   2573c:	movw	r1, #47544	; 0xb9b8
   25740:	mov	r0, #1
   25744:	movt	r1, #3
   25748:	bl	12770 <__printf_chk@plt>
   2574c:	ldr	r2, [r4, #100]	; 0x64
   25750:	movw	r1, #47568	; 0xb9d0
   25754:	mov	r0, #1
   25758:	movt	r1, #3
   2575c:	bl	12770 <__printf_chk@plt>
   25760:	ldr	r2, [r4, #252]	; 0xfc
   25764:	movw	r1, #47592	; 0xb9e8
   25768:	mov	r0, #1
   2576c:	movt	r1, #3
   25770:	pop	{r4, lr}
   25774:	b	12770 <__printf_chk@plt>
   25778:	cmp	r1, #255	; 0xff
   2577c:	bls	257e4 <crc32@@Base+0xc040>
   25780:	ldr	r2, [r0]
   25784:	movw	r3, #21587	; 0x5453
   25788:	movt	r3, #12877	; 0x324d
   2578c:	cmp	r2, r3
   25790:	bne	257e4 <crc32@@Base+0xc040>
   25794:	ldrb	r3, [r0, #74]	; 0x4a
   25798:	cmp	r3, #1
   2579c:	bne	257e4 <crc32@@Base+0xc040>
   257a0:	ldr	r3, [r0, #84]	; 0x54
   257a4:	cmp	r3, #0
   257a8:	bne	257e4 <crc32@@Base+0xc040>
   257ac:	ldr	r3, [r0, #92]	; 0x5c
   257b0:	cmp	r3, #0
   257b4:	bne	257e4 <crc32@@Base+0xc040>
   257b8:	ldr	r3, [r0, #172]	; 0xac
   257bc:	cmp	r3, #0
   257c0:	bne	257e4 <crc32@@Base+0xc040>
   257c4:	add	r3, r0, #172	; 0xac
   257c8:	add	r2, r0, #248	; 0xf8
   257cc:	b	257d8 <crc32@@Base+0xc034>
   257d0:	cmp	r3, r2
   257d4:	bxeq	lr
   257d8:	ldr	r0, [r3, #4]!
   257dc:	cmp	r0, #0
   257e0:	beq	257d0 <crc32@@Base+0xc02c>
   257e4:	mvn	r0, #0
   257e8:	bx	lr
   257ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   257f0:	movw	r5, #61168	; 0xeef0
   257f4:	movt	r5, #4
   257f8:	sub	sp, sp, #524	; 0x20c
   257fc:	add	lr, sp, #260	; 0x104
   25800:	add	ip, sp, #3
   25804:	ldr	r4, [r5]
   25808:	add	r8, sp, #516	; 0x204
   2580c:	mov	r7, ip
   25810:	mov	r3, lr
   25814:	mov	r6, #0
   25818:	str	r4, [sp, #516]	; 0x204
   2581c:	and	r4, r6, #15
   25820:	sub	r9, r3, lr
   25824:	add	r6, r4, #1
   25828:	strb	r9, [r7, #1]!
   2582c:	ldrb	r4, [r2, r4]
   25830:	strb	r4, [r3], #1
   25834:	cmp	r3, r8
   25838:	bne	2581c <crc32@@Base+0xc078>
   2583c:	add	r3, sp, #4
   25840:	sub	r2, lr, #1
   25844:	add	r7, r3, #255	; 0xff
   25848:	mov	r3, #0
   2584c:	ldrb	r4, [ip, #1]!
   25850:	ldrb	lr, [r2, #1]!
   25854:	add	r3, r3, r4
   25858:	cmp	r7, ip
   2585c:	add	r3, r3, lr
   25860:	add	lr, sp, #520	; 0x208
   25864:	uxtb	r3, r3
   25868:	add	lr, lr, r3
   2586c:	uxth	r3, r3
   25870:	ldrb	r6, [lr, #-516]	; 0xfffffdfc
   25874:	strb	r6, [ip]
   25878:	strb	r4, [lr, #-516]	; 0xfffffdfc
   2587c:	bne	2584c <crc32@@Base+0xc0a8>
   25880:	cmp	r1, #0
   25884:	beq	258f8 <crc32@@Base+0xc154>
   25888:	add	r1, r0, r1
   2588c:	sub	r0, r0, #1
   25890:	sub	r4, r1, #1
   25894:	mov	r1, #0
   25898:	mov	r2, r1
   2589c:	add	r3, r2, #1
   258a0:	add	r2, sp, #520	; 0x208
   258a4:	add	lr, sp, #520	; 0x208
   258a8:	ldrb	r6, [r0, #1]!
   258ac:	uxtb	r3, r3
   258b0:	add	ip, r2, r3
   258b4:	cmp	r4, r0
   258b8:	uxth	r2, r3
   258bc:	ldrb	r3, [ip, #-516]	; 0xfffffdfc
   258c0:	add	r1, r1, r3
   258c4:	uxtb	r1, r1
   258c8:	add	lr, lr, r1
   258cc:	ldrb	r7, [lr, #-516]	; 0xfffffdfc
   258d0:	strb	r7, [ip, #-516]	; 0xfffffdfc
   258d4:	strb	r3, [lr, #-516]	; 0xfffffdfc
   258d8:	ldrb	ip, [ip, #-516]	; 0xfffffdfc
   258dc:	add	r3, r3, ip
   258e0:	add	ip, sp, #520	; 0x208
   258e4:	uxtab	r3, ip, r3
   258e8:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
   258ec:	eor	r3, r3, r6
   258f0:	strb	r3, [r0]
   258f4:	bne	2589c <crc32@@Base+0xc0f8>
   258f8:	ldr	r2, [sp, #516]	; 0x204
   258fc:	ldr	r3, [r5]
   25900:	cmp	r2, r3
   25904:	bne	25910 <crc32@@Base+0xc16c>
   25908:	add	sp, sp, #524	; 0x20c
   2590c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25910:	bl	12494 <__stack_chk_fail@plt>
   25914:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25918:	mov	r5, r1
   2591c:	mov	r6, r0
   25920:	mov	r1, r0
   25924:	mov	r4, r2
   25928:	mov	r7, #0
   2592c:	mov	r0, r5
   25930:	str	r7, [r2]
   25934:	mov	r2, #512	; 0x200
   25938:	bl	1259c <memcpy@plt>
   2593c:	mov	r0, r5
   25940:	movw	r2, #63964	; 0xf9dc
   25944:	mov	r1, #512	; 0x200
   25948:	movt	r2, #4
   2594c:	bl	257ec <crc32@@Base+0xc048>
   25950:	ldr	r3, [r5]
   25954:	movw	r2, #43605	; 0xaa55
   25958:	movt	r2, #4080	; 0xff0
   2595c:	cmp	r3, r2
   25960:	bne	25a6c <crc32@@Base+0xc2c8>
   25964:	ldr	r3, [r5, #8]
   25968:	cmp	r3, r7
   2596c:	beq	25a74 <crc32@@Base+0xc2d0>
   25970:	ldrh	r0, [r5, #12]
   25974:	mov	r2, #61440	; 0xf000
   25978:	ldr	r8, [pc, #252]	; 25a7c <crc32@@Base+0xc2d8>
   2597c:	movt	r2, #65535	; 0xffff
   25980:	mov	r3, r7
   25984:	lsl	r1, r0, #9
   25988:	and	r0, r2, r0, lsl #10
   2598c:	add	r7, r6, r1
   25990:	ubfx	r1, r1, #0, #11
   25994:	orr	r0, r0, r1
   25998:	mov	lr, r8
   2599c:	ldrb	r5, [r7]
   259a0:	add	r0, r6, r0
   259a4:	b	259c0 <crc32@@Base+0xc21c>
   259a8:	ldrb	ip, [r0]
   259ac:	cmp	ip, r1
   259b0:	beq	25a1c <crc32@@Base+0xc278>
   259b4:	add	r3, r3, #1
   259b8:	cmp	r3, #9
   259bc:	beq	25a64 <crc32@@Base+0xc2c0>
   259c0:	ldr	r2, [lr, #4]
   259c4:	add	lr, lr, #16
   259c8:	ldrb	r1, [r2]
   259cc:	cmp	r5, r1
   259d0:	bne	259a8 <crc32@@Base+0xc204>
   259d4:	ldrb	r6, [r7, #1]
   259d8:	add	sl, r7, #1
   259dc:	ldrb	ip, [r2, #1]
   259e0:	add	r9, r2, #1
   259e4:	cmp	r6, ip
   259e8:	bne	259a8 <crc32@@Base+0xc204>
   259ec:	ldrb	r6, [sl, #1]!
   259f0:	ldrb	ip, [r9, #1]!
   259f4:	cmp	r6, ip
   259f8:	bne	259a8 <crc32@@Base+0xc204>
   259fc:	ldrb	r6, [sl, #1]
   25a00:	ldrb	ip, [r9, #1]
   25a04:	cmp	r6, ip
   25a08:	bne	259a8 <crc32@@Base+0xc204>
   25a0c:	add	r3, r8, r3, lsl #4
   25a10:	mov	r0, #24
   25a14:	str	r3, [r4]
   25a18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a1c:	ldrb	r1, [r0, #1]
   25a20:	add	ip, r2, #1
   25a24:	ldrb	r2, [r2, #1]
   25a28:	add	r6, r0, #1
   25a2c:	cmp	r1, r2
   25a30:	bne	259b4 <crc32@@Base+0xc210>
   25a34:	ldrb	r1, [r6, #1]!
   25a38:	ldrb	r2, [ip, #1]!
   25a3c:	cmp	r1, r2
   25a40:	bne	259b4 <crc32@@Base+0xc210>
   25a44:	ldrb	r1, [r6, #1]
   25a48:	ldrb	r2, [ip, #1]
   25a4c:	cmp	r1, r2
   25a50:	bne	259b4 <crc32@@Base+0xc210>
   25a54:	add	r3, r8, r3, lsl #4
   25a58:	mov	r0, #25
   25a5c:	str	r3, [r4]
   25a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a64:	mvn	r0, #0
   25a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a6c:	mvn	r0, #70	; 0x46
   25a70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a74:	mvn	r0, #37	; 0x25
   25a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a7c:	andeq	pc, r4, ip, ror #19
   25a80:	push	{r4, r5, r6, r7, r8, lr}
   25a84:	mov	r6, r0
   25a88:	ldr	r5, [pc, #56]	; 25ac8 <crc32@@Base+0xc324>
   25a8c:	mov	r4, #0
   25a90:	ldr	r1, [r5, r4, lsl #4]
   25a94:	mov	r2, #6
   25a98:	mov	r0, r6
   25a9c:	lsl	r7, r4, #4
   25aa0:	bl	1217c <strncmp@plt>
   25aa4:	add	r4, r4, #1
   25aa8:	cmp	r0, #0
   25aac:	beq	25ac0 <crc32@@Base+0xc31c>
   25ab0:	cmp	r4, #9
   25ab4:	bne	25a90 <crc32@@Base+0xc2ec>
   25ab8:	mov	r0, #0
   25abc:	pop	{r4, r5, r6, r7, r8, pc}
   25ac0:	add	r0, r5, r7
   25ac4:	pop	{r4, r5, r6, r7, r8, pc}
   25ac8:	andeq	pc, r4, ip, ror #19
   25acc:	push	{r4, r5, r6, r7, r8, lr}
   25ad0:	mov	r4, r0
   25ad4:	ldr	r5, [r0, #64]	; 0x40
   25ad8:	cmp	r5, #0
   25adc:	beq	25af8 <crc32@@Base+0xc354>
   25ae0:	mov	r0, r5
   25ae4:	bl	25a80 <crc32@@Base+0xc2dc>
   25ae8:	cmp	r0, #0
   25aec:	beq	25af8 <crc32@@Base+0xc354>
   25af0:	mov	r0, #0
   25af4:	pop	{r4, r5, r6, r7, r8, pc}
   25af8:	ldr	r0, [r4, #16]
   25afc:	cmp	r0, #0
   25b00:	bne	25af0 <crc32@@Base+0xc34c>
   25b04:	ldr	r4, [r4, #12]
   25b08:	cmp	r4, #0
   25b0c:	popne	{r4, r5, r6, r7, r8, pc}
   25b10:	cmp	r5, #0
   25b14:	movw	r6, #65044	; 0xfe14
   25b18:	movt	r6, #4
   25b1c:	mov	r1, #1
   25b20:	movw	r3, #47660	; 0xba2c
   25b24:	movw	r2, #47668	; 0xba34
   25b28:	movt	r3, #3
   25b2c:	movt	r2, #3
   25b30:	movne	r3, r5
   25b34:	ldr	r0, [r6]
   25b38:	bl	122b4 <__fprintf_chk@plt>
   25b3c:	ldr	r3, [r6]
   25b40:	movw	r0, #47712	; 0xba60
   25b44:	mov	r2, #20
   25b48:	movt	r0, #3
   25b4c:	mov	r1, #1
   25b50:	bl	12578 <fwrite@plt>
   25b54:	ldr	r7, [pc, #56]	; 25b94 <crc32@@Base+0xc3f0>
   25b58:	movw	r5, #47736	; 0xba78
   25b5c:	movt	r5, #3
   25b60:	ldr	r3, [r7, r4, lsl #4]
   25b64:	mov	r2, r5
   25b68:	add	r4, r4, #1
   25b6c:	mov	r1, #1
   25b70:	ldr	r0, [r6]
   25b74:	bl	122b4 <__fprintf_chk@plt>
   25b78:	cmp	r4, #9
   25b7c:	bne	25b60 <crc32@@Base+0xc3bc>
   25b80:	ldr	r1, [r6]
   25b84:	mov	r0, #10
   25b88:	bl	1256c <fputc@plt>
   25b8c:	mov	r0, #1
   25b90:	pop	{r4, r5, r6, r7, r8, pc}
   25b94:	andeq	pc, r4, ip, ror #19
   25b98:	ldr	r0, [r0, #64]	; 0x40
   25b9c:	cmp	r0, #0
   25ba0:	beq	25bb4 <crc32@@Base+0xc410>
   25ba4:	push	{r4, lr}
   25ba8:	bl	25a80 <crc32@@Base+0xc2dc>
   25bac:	ldr	r0, [r0, #4]
   25bb0:	pop	{r4, pc}
   25bb4:	ldr	r3, [r0, #4]
   25bb8:	udf	#0
   25bbc:	ldr	r0, [r0, #64]	; 0x40
   25bc0:	cmp	r0, #0
   25bc4:	beq	25bd8 <crc32@@Base+0xc434>
   25bc8:	push	{r4, lr}
   25bcc:	bl	25a80 <crc32@@Base+0xc2dc>
   25bd0:	ldr	r0, [r0, #8]
   25bd4:	pop	{r4, pc}
   25bd8:	ldr	r3, [r0, #8]
   25bdc:	udf	#0
   25be0:	ldr	r0, [r0, #64]	; 0x40
   25be4:	cmp	r0, #0
   25be8:	beq	25bfc <crc32@@Base+0xc458>
   25bec:	push	{r4, lr}
   25bf0:	bl	25a80 <crc32@@Base+0xc2dc>
   25bf4:	ldrb	r0, [r0, #12]
   25bf8:	pop	{r4, pc}
   25bfc:	ldrb	r3, [r0, #12]
   25c00:	udf	#0
   25c04:	ldr	r3, [r2, #64]	; 0x40
   25c08:	cmp	r3, #0
   25c0c:	beq	25d34 <crc32@@Base+0xc590>
   25c10:	push	{r4, r5, r6, r7, r8, lr}
   25c14:	mov	r4, r0
   25c18:	mov	r0, r3
   25c1c:	mov	r5, r1
   25c20:	mov	r6, r2
   25c24:	bl	25a80 <crc32@@Base+0xc2dc>
   25c28:	ldr	r3, [r0, #8]
   25c2c:	cmp	r5, r3
   25c30:	bhi	25d54 <crc32@@Base+0xc5b0>
   25c34:	mov	r2, #2048	; 0x800
   25c38:	mov	r1, #0
   25c3c:	mov	r0, r4
   25c40:	bl	122e4 <memset@plt>
   25c44:	ldr	r0, [r6, #64]	; 0x40
   25c48:	movw	r3, #43605	; 0xaa55
   25c4c:	movt	r3, #4080	; 0xff0
   25c50:	cmp	r0, #0
   25c54:	str	r3, [r4]
   25c58:	beq	25d3c <crc32@@Base+0xc598>
   25c5c:	bl	25a80 <crc32@@Base+0xc2dc>
   25c60:	add	r1, r5, #508	; 0x1fc
   25c64:	add	r1, r1, #3
   25c68:	add	ip, r4, #508	; 0x1fc
   25c6c:	movw	r5, #506	; 0x1fa
   25c70:	mov	r7, #4
   25c74:	lsr	r3, r1, #9
   25c78:	movw	r2, #63964	; 0xf9dc
   25c7c:	add	r3, r3, #3
   25c80:	movt	r2, #4
   25c84:	bic	r3, r3, #3
   25c88:	mov	r1, #512	; 0x200
   25c8c:	uxth	r3, r3
   25c90:	add	lr, r3, #1024	; 0x400
   25c94:	ldrb	r0, [r0, #12]
   25c98:	strh	r3, [r4, r5]
   25c9c:	eor	r3, r0, #1
   25ca0:	strh	r7, [r4, #12]
   25ca4:	str	r3, [r4, #8]
   25ca8:	mov	r0, r4
   25cac:	strh	lr, [ip]
   25cb0:	bl	257ec <crc32@@Base+0xc048>
   25cb4:	ldr	r0, [r6, #64]	; 0x40
   25cb8:	cmp	r0, #0
   25cbc:	beq	25d4c <crc32@@Base+0xc5a8>
   25cc0:	bl	25a80 <crc32@@Base+0xc2dc>
   25cc4:	ldr	r3, [r0, #4]
   25cc8:	ldr	r3, [r3]
   25ccc:	str	r3, [r4, #2048]	; 0x800
   25cd0:	ldr	r0, [r6, #64]	; 0x40
   25cd4:	cmp	r0, #0
   25cd8:	beq	25d44 <crc32@@Base+0xc5a0>
   25cdc:	bl	25a80 <crc32@@Base+0xc2dc>
   25ce0:	ldrb	r3, [r0, #12]
   25ce4:	cmp	r3, #0
   25ce8:	beq	25d2c <crc32@@Base+0xc588>
   25cec:	ldr	r5, [r6, #104]	; 0x68
   25cf0:	subs	r5, r5, #2048	; 0x800
   25cf4:	beq	25d2c <crc32@@Base+0xc588>
   25cf8:	movw	r7, #63964	; 0xf9dc
   25cfc:	add	r4, r4, #2048	; 0x800
   25d00:	movt	r7, #4
   25d04:	cmp	r5, #512	; 0x200
   25d08:	mov	r0, r4
   25d0c:	mov	r2, r7
   25d10:	add	r4, r4, #512	; 0x200
   25d14:	movcc	r6, r5
   25d18:	movcs	r6, #512	; 0x200
   25d1c:	mov	r1, r6
   25d20:	bl	257ec <crc32@@Base+0xc048>
   25d24:	subs	r5, r5, r6
   25d28:	bne	25d04 <crc32@@Base+0xc560>
   25d2c:	mov	r0, #0
   25d30:	pop	{r4, r5, r6, r7, r8, pc}
   25d34:	ldr	r3, [r3, #8]
   25d38:	udf	#0
   25d3c:	ldrb	r3, [r0, #12]
   25d40:	udf	#0
   25d44:	ldrb	r3, [r0, #12]
   25d48:	udf	#0
   25d4c:	ldr	r3, [r0, #4]
   25d50:	udf	#0
   25d54:	mvn	r0, #27
   25d58:	pop	{r4, r5, r6, r7, r8, pc}
   25d5c:	push	{r4, r5, lr}
   25d60:	movw	r4, #61168	; 0xeef0
   25d64:	movt	r4, #4
   25d68:	sub	sp, sp, #524	; 0x20c
   25d6c:	mov	r5, r2
   25d70:	add	r1, sp, #4
   25d74:	ldr	r3, [r4]
   25d78:	mov	r2, sp
   25d7c:	str	r3, [sp, #516]	; 0x204
   25d80:	bl	25914 <crc32@@Base+0xc170>
   25d84:	cmn	r0, #38	; 0x26
   25d88:	moveq	r0, #0
   25d8c:	beq	25dc8 <crc32@@Base+0xc624>
   25d90:	cmp	r0, #0
   25d94:	blt	25dc8 <crc32@@Base+0xc624>
   25d98:	ldr	r0, [r5, #64]	; 0x40
   25d9c:	cmp	r0, #0
   25da0:	beq	25dc8 <crc32@@Base+0xc624>
   25da4:	bl	25a80 <crc32@@Base+0xc2dc>
   25da8:	cmp	r0, #0
   25dac:	beq	25de0 <crc32@@Base+0xc63c>
   25db0:	ldr	r3, [sp]
   25db4:	cmp	r3, #0
   25db8:	beq	25de0 <crc32@@Base+0xc63c>
   25dbc:	ldr	r1, [r3, #4]
   25dc0:	ldr	r0, [r0, #4]
   25dc4:	bl	1265c <strcmp@plt>
   25dc8:	ldr	r2, [sp, #516]	; 0x204
   25dcc:	ldr	r3, [r4]
   25dd0:	cmp	r2, r3
   25dd4:	bne	25de8 <crc32@@Base+0xc644>
   25dd8:	add	sp, sp, #524	; 0x20c
   25ddc:	pop	{r4, r5, pc}
   25de0:	mvn	r0, #1
   25de4:	b	25dc8 <crc32@@Base+0xc624>
   25de8:	bl	12494 <__stack_chk_fail@plt>
   25dec:	push	{r4, lr}
   25df0:	movw	r4, #61168	; 0xeef0
   25df4:	movt	r4, #4
   25df8:	sub	sp, sp, #520	; 0x208
   25dfc:	add	r1, sp, #4
   25e00:	ldr	r3, [r4]
   25e04:	mov	r2, sp
   25e08:	str	r3, [sp, #516]	; 0x204
   25e0c:	bl	25914 <crc32@@Base+0xc170>
   25e10:	cmn	r0, #38	; 0x26
   25e14:	beq	25e74 <crc32@@Base+0xc6d0>
   25e18:	cmp	r0, #0
   25e1c:	blt	25e8c <crc32@@Base+0xc6e8>
   25e20:	ldr	r1, [sp]
   25e24:	uxtb	r0, r0
   25e28:	cmp	r0, #24
   25e2c:	movw	r2, #47740	; 0xba7c
   25e30:	movt	r2, #3
   25e34:	movw	r3, #47748	; 0xba84
   25e38:	mov	r0, #1
   25e3c:	movt	r3, #3
   25e40:	moveq	r3, r2
   25e44:	ldr	r2, [r1, #4]
   25e48:	movw	r1, #47788	; 0xbaac
   25e4c:	movt	r1, #3
   25e50:	bl	12770 <__printf_chk@plt>
   25e54:	add	r3, sp, #508	; 0x1fc
   25e58:	add	r3, r3, #2
   25e5c:	movw	r1, #47832	; 0xbad8
   25e60:	ldrh	r2, [r3]
   25e64:	mov	r0, #1
   25e68:	movt	r1, #3
   25e6c:	lsl	r2, r2, #9
   25e70:	bl	12770 <__printf_chk@plt>
   25e74:	ldr	r2, [sp, #516]	; 0x204
   25e78:	ldr	r3, [r4]
   25e7c:	cmp	r2, r3
   25e80:	bne	25eb0 <crc32@@Base+0xc70c>
   25e84:	add	sp, sp, #520	; 0x208
   25e88:	pop	{r4, pc}
   25e8c:	movw	r3, #65044	; 0xfe14
   25e90:	movt	r3, #4
   25e94:	movw	r0, #47752	; 0xba88
   25e98:	mov	r2, #33	; 0x21
   25e9c:	ldr	r3, [r3]
   25ea0:	mov	r1, #1
   25ea4:	movt	r0, #3
   25ea8:	bl	12578 <fwrite@plt>
   25eac:	b	25e74 <crc32@@Base+0xc6d0>
   25eb0:	bl	12494 <__stack_chk_fail@plt>
   25eb4:	push	{r4, r5, r6, r7, r8, lr}
   25eb8:	subs	r4, r2, #0
   25ebc:	popeq	{r4, r5, r6, r7, r8, pc}
   25ec0:	movw	r7, #63964	; 0xf9dc
   25ec4:	add	r6, r0, r1
   25ec8:	movt	r7, #4
   25ecc:	cmp	r4, #512	; 0x200
   25ed0:	mov	r0, r6
   25ed4:	mov	r2, r7
   25ed8:	add	r6, r6, #512	; 0x200
   25edc:	movcc	r5, r4
   25ee0:	movcs	r5, #512	; 0x200
   25ee4:	mov	r1, r5
   25ee8:	bl	257ec <crc32@@Base+0xc048>
   25eec:	subs	r4, r4, r5
   25ef0:	bne	25ecc <crc32@@Base+0xc728>
   25ef4:	pop	{r4, r5, r6, r7, r8, pc}
   25ef8:	mov	r3, #2048	; 0x800
   25efc:	push	{r4, r5, r6, lr}
   25f00:	mov	r5, r1
   25f04:	str	r3, [r1, #4]
   25f08:	mov	r6, r0
   25f0c:	mov	r1, #1
   25f10:	mov	r0, r3
   25f14:	mov	r4, r2
   25f18:	bl	12518 <calloc@plt>
   25f1c:	cmp	r0, #0
   25f20:	str	r0, [r5, #8]
   25f24:	beq	25f60 <crc32@@Base+0xc7bc>
   25f28:	ldr	ip, [r6, #104]	; 0x68
   25f2c:	cmp	r4, #0
   25f30:	rsbne	r2, r4, #0
   25f34:	mov	r1, #63488	; 0xf800
   25f38:	add	r3, ip, #2032	; 0x7f0
   25f3c:	moveq	r4, #1
   25f40:	add	r3, r3, #15
   25f44:	movt	r1, #65535	; 0xffff
   25f48:	add	r0, r3, r4
   25f4c:	mvneq	r2, #0
   25f50:	sub	r1, r1, ip
   25f54:	and	r0, r0, r2
   25f58:	add	r0, r0, r1
   25f5c:	pop	{r4, r5, r6, pc}
   25f60:	mvn	r0, #11
   25f64:	pop	{r4, r5, r6, pc}
   25f68:	subs	r0, r0, #23
   25f6c:	movne	r0, #1
   25f70:	bx	lr
   25f74:	push	{r4, r5, r6, lr}
   25f78:	mov	r5, r0
   25f7c:	mov	r0, r3
   25f80:	mov	r4, r3
   25f84:	bl	25b98 <crc32@@Base+0xc3f4>
   25f88:	ldr	r3, [r0]
   25f8c:	mov	r0, r4
   25f90:	str	r3, [r5]
   25f94:	bl	25be0 <crc32@@Base+0xc43c>
   25f98:	cmp	r0, #0
   25f9c:	popeq	{r4, r5, r6, pc}
   25fa0:	ldr	r2, [r4, #104]	; 0x68
   25fa4:	mov	r0, r5
   25fa8:	mov	r1, #4
   25fac:	pop	{r4, r5, r6, lr}
   25fb0:	b	25eb4 <crc32@@Base+0xc710>
   25fb4:	subs	r0, r0, #24
   25fb8:	movne	r0, #1
   25fbc:	bx	lr
   25fc0:	mov	r2, #2048	; 0x800
   25fc4:	b	25ef8 <crc32@@Base+0xc754>
   25fc8:	push	{r4, lr}
   25fcc:	mov	r2, r3
   25fd0:	ldr	r4, [r3, #104]	; 0x68
   25fd4:	sub	r4, r4, #2048	; 0x800
   25fd8:	mov	r1, r4
   25fdc:	bl	25c04 <crc32@@Base+0xc460>
   25fe0:	cmp	r0, #0
   25fe4:	popeq	{r4, pc}
   25fe8:	mov	r2, r4
   25fec:	movw	r1, #47996	; 0xbb7c
   25ff0:	mov	r0, #1
   25ff4:	movt	r1, #3
   25ff8:	pop	{r4, lr}
   25ffc:	b	12770 <__printf_chk@plt>
   26000:	subs	r0, r0, #25
   26004:	movne	r0, #1
   26008:	bx	lr
   2600c:	push	{r4, r5, r6, lr}
   26010:	mov	r2, #2048	; 0x800
   26014:	mov	r4, r0
   26018:	mov	r5, r1
   2601c:	bl	25ef8 <crc32@@Base+0xc754>
   26020:	ldr	r3, [r5, #4]
   26024:	ldr	r2, [r4, #104]	; 0x68
   26028:	add	r3, r3, r2
   2602c:	add	r3, r3, r0
   26030:	str	r3, [r4, #108]	; 0x6c
   26034:	add	r0, r0, r3
   26038:	pop	{r4, r5, r6, pc}
   2603c:	push	{r4, r5, r6, lr}
   26040:	mov	r2, r3
   26044:	ldr	r4, [r3, #108]	; 0x6c
   26048:	mov	r5, r0
   2604c:	mov	r1, r4
   26050:	bl	25c04 <crc32@@Base+0xc460>
   26054:	cmp	r0, #0
   26058:	bne	260a8 <crc32@@Base+0xc904>
   2605c:	lsrs	r4, r4, #11
   26060:	popeq	{r4, r5, r6, pc}
   26064:	sub	r3, r4, #-67108863	; 0xfc000001
   26068:	sub	r6, r5, #4096	; 0x1000
   2606c:	add	r4, r5, r3, lsl #12
   26070:	add	r5, r5, r3, lsl #11
   26074:	mov	r1, r5
   26078:	mov	r2, #2048	; 0x800
   2607c:	mov	r0, r4
   26080:	sub	r5, r5, #2048	; 0x800
   26084:	bl	12380 <memmove@plt>
   26088:	mov	r2, #2048	; 0x800
   2608c:	mov	r1, #0
   26090:	add	r0, r4, r2
   26094:	sub	r4, r4, #4096	; 0x1000
   26098:	bl	122e4 <memset@plt>
   2609c:	cmp	r4, r6
   260a0:	bne	26074 <crc32@@Base+0xc8d0>
   260a4:	pop	{r4, r5, r6, pc}
   260a8:	mov	r2, r4
   260ac:	movw	r1, #47996	; 0xbb7c
   260b0:	mov	r0, #1
   260b4:	movt	r1, #3
   260b8:	bl	12770 <__printf_chk@plt>
   260bc:	lsrs	r4, r4, #11
   260c0:	bne	26064 <crc32@@Base+0xc8c0>
   260c4:	pop	{r4, r5, r6, pc}
   260c8:	ldr	r2, [r0]
   260cc:	ldr	r3, [r0, #8]
   260d0:	cmp	r2, #0
   260d4:	beq	260f8 <crc32@@Base+0xc954>
   260d8:	cmp	r3, #0
   260dc:	movne	r3, #1
   260e0:	bne	260f0 <crc32@@Base+0xc94c>
   260e4:	ldr	r3, [r0, #16]
   260e8:	adds	r3, r3, #0
   260ec:	movne	r3, #1
   260f0:	mov	r0, r3
   260f4:	bx	lr
   260f8:	cmp	r3, #0
   260fc:	ldr	r2, [r0, #16]
   26100:	beq	260f0 <crc32@@Base+0xc94c>
   26104:	adds	r3, r2, #0
   26108:	movne	r3, #1
   2610c:	mov	r0, r3
   26110:	bx	lr
   26114:	subs	r0, r0, #19
   26118:	movne	r0, #1
   2611c:	bx	lr
   26120:	subs	r0, r0, #35	; 0x23
   26124:	movne	r0, #1
   26128:	bx	lr
   2612c:	push	{r4, r5, lr}
   26130:	movw	r4, #61168	; 0xeef0
   26134:	movt	r4, #4
   26138:	ldr	r3, [r0, #72]	; 0x48
   2613c:	sub	sp, sp, #100	; 0x64
   26140:	ldr	r2, [r4]
   26144:	cmp	r3, #0
   26148:	str	r2, [sp, #92]	; 0x5c
   2614c:	beq	26190 <crc32@@Base+0xc9ec>
   26150:	mov	r5, r1
   26154:	mov	r2, sp
   26158:	mov	r1, r3
   2615c:	mov	r0, #3
   26160:	bl	12620 <__xstat@plt>
   26164:	cmp	r0, #0
   26168:	bne	26190 <crc32@@Base+0xc9ec>
   2616c:	ldr	r3, [sp, #44]	; 0x2c
   26170:	movw	r2, #65532	; 0xfffc
   26174:	movt	r2, #3
   26178:	cmp	r3, r2
   2617c:	rsbls	r1, r3, #262144	; 0x40000
   26180:	strls	r1, [r5, #4]
   26184:	movwls	r2, #25076	; 0x61f4
   26188:	movtls	r2, #25
   2618c:	strls	r3, [r2]
   26190:	ldr	r2, [sp, #92]	; 0x5c
   26194:	mov	r0, #0
   26198:	ldr	r3, [r4]
   2619c:	cmp	r2, r3
   261a0:	bne	261ac <crc32@@Base+0xca08>
   261a4:	add	sp, sp, #100	; 0x64
   261a8:	pop	{r4, r5, pc}
   261ac:	bl	12494 <__stack_chk_fail@plt>
   261b0:	push	{r4, r5, r6, r7, r8, lr}
   261b4:	mov	r7, r0
   261b8:	mov	r5, r0
   261bc:	ldr	r0, [r7, #64]!	; 0x40
   261c0:	movw	r4, #61168	; 0xeef0
   261c4:	movt	r4, #4
   261c8:	sub	sp, sp, #48	; 0x30
   261cc:	movw	ip, #21313	; 0x5341
   261d0:	ldr	r1, [r7, #4]
   261d4:	movt	ip, #12592	; 0x3130
   261d8:	ldr	r2, [r7, #8]
   261dc:	add	r3, sp, #12
   261e0:	ldr	lr, [r4]
   261e4:	cmp	r0, ip
   261e8:	stmia	r3!, {r0, r1, r2}
   261ec:	str	lr, [sp, #44]	; 0x2c
   261f0:	bne	26298 <crc32@@Base+0xcaf4>
   261f4:	ldrb	lr, [sp, #16]
   261f8:	cmp	lr, #0
   261fc:	beq	26248 <crc32@@Base+0xcaa4>
   26200:	cmp	lr, #1
   26204:	bne	26298 <crc32@@Base+0xcaf4>
   26208:	ldr	r3, [r7, #12]
   2620c:	add	r8, sp, #24
   26210:	add	r6, sp, #41	; 0x29
   26214:	mov	ip, r8
   26218:	stmia	r8!, {r0, r1, r2, r3}
   2621c:	mov	r1, #0
   26220:	ldr	r0, [r7, #16]
   26224:	lsr	r7, r0, #16
   26228:	str	r0, [r8]
   2622c:	ldrb	r3, [ip], #1
   26230:	add	r3, r1, r3
   26234:	cmp	ip, r6
   26238:	uxth	r1, r3
   2623c:	bne	2622c <crc32@@Base+0xca88>
   26240:	ldr	r2, [sp, #32]
   26244:	b	26274 <crc32@@Base+0xcad0>
   26248:	ldrh	r7, [sp, #22]
   2624c:	add	r0, sp, #21
   26250:	add	r2, sp, #12
   26254:	mov	r1, lr
   26258:	ldrb	r3, [r2], #1
   2625c:	add	r3, r1, r3
   26260:	cmp	r2, r0
   26264:	uxth	r1, r3
   26268:	bne	26258 <crc32@@Base+0xcab4>
   2626c:	ldrh	r2, [sp, #18]
   26270:	lsl	r2, r2, #2
   26274:	cmp	r7, r1
   26278:	bne	26298 <crc32@@Base+0xcaf4>
   2627c:	cmp	r2, #63	; 0x3f
   26280:	ble	26298 <crc32@@Base+0xcaf4>
   26284:	cmp	lr, #0
   26288:	beq	262b4 <crc32@@Base+0xcb10>
   2628c:	cmp	lr, #1
   26290:	moveq	r3, #262144	; 0x40000
   26294:	beq	262b8 <crc32@@Base+0xcb14>
   26298:	mvn	r0, #0
   2629c:	ldr	r2, [sp, #44]	; 0x2c
   262a0:	ldr	r3, [r4]
   262a4:	cmp	r2, r3
   262a8:	bne	26310 <crc32@@Base+0xcb6c>
   262ac:	add	sp, sp, #48	; 0x30
   262b0:	pop	{r4, r5, r6, r7, r8, pc}
   262b4:	mov	r3, #65536	; 0x10000
   262b8:	cmp	r3, r2
   262bc:	bcc	26298 <crc32@@Base+0xcaf4>
   262c0:	sub	r6, r2, #4
   262c4:	mov	r1, r5
   262c8:	mov	r0, #0
   262cc:	mov	r2, r6
   262d0:	bl	25354 <crc32@@Base+0xbbb0>
   262d4:	ldr	r3, [r5, r6]
   262d8:	mvn	r0, r0
   262dc:	cmp	r0, r3
   262e0:	moveq	r0, #0
   262e4:	beq	2629c <crc32@@Base+0xcaf8>
   262e8:	movw	r2, #65044	; 0xfe14
   262ec:	movt	r2, #4
   262f0:	str	r0, [sp]
   262f4:	mov	r1, #1
   262f8:	ldr	r0, [r2]
   262fc:	movw	r2, #48124	; 0xbbfc
   26300:	movt	r2, #3
   26304:	bl	122b4 <__fprintf_chk@plt>
   26308:	mvn	r0, #0
   2630c:	b	2629c <crc32@@Base+0xcaf8>
   26310:	bl	12494 <__stack_chk_fail@plt>
   26314:	push	{r4, lr}
   26318:	bl	261b0 <crc32@@Base+0xca0c>
   2631c:	cmp	r0, #0
   26320:	beq	26334 <crc32@@Base+0xcb90>
   26324:	movw	r0, #48200	; 0xbc48
   26328:	movt	r0, #3
   2632c:	pop	{r4, lr}
   26330:	b	1226c <puts@plt>
   26334:	movw	r0, #48164	; 0xbc24
   26338:	movt	r0, #3
   2633c:	pop	{r4, lr}
   26340:	b	1226c <puts@plt>
   26344:	cmp	r1, #127	; 0x7f
   26348:	ble	26350 <crc32@@Base+0xcbac>
   2634c:	b	261b0 <crc32@@Base+0xca0c>
   26350:	mvn	r0, #0
   26354:	bx	lr
   26358:	push	{r4, r5, r6, r7, r8, r9, lr}
   2635c:	movw	r6, #61168	; 0xeef0
   26360:	movt	r6, #4
   26364:	movw	r3, #25076	; 0x61f4
   26368:	movt	r3, #25
   2636c:	sub	sp, sp, #44	; 0x2c
   26370:	ldr	r2, [r6]
   26374:	subs	r7, r1, #0
   26378:	ldr	r4, [r3]
   2637c:	mov	r5, r0
   26380:	str	r2, [sp, #36]	; 0x24
   26384:	add	r9, r0, r4
   26388:	bne	264c0 <crc32@@Base+0xcd1c>
   2638c:	rsb	r8, r4, #65536	; 0x10000
   26390:	mov	r2, r4
   26394:	add	r1, r0, r8
   26398:	bl	12380 <memmove@plt>
   2639c:	add	r4, r4, #3
   263a0:	mov	r2, r8
   263a4:	mov	r1, #0
   263a8:	mov	r0, r9
   263ac:	bic	r4, r4, #3
   263b0:	bl	122e4 <memset@plt>
   263b4:	add	r2, r4, #4
   263b8:	cmp	r7, #0
   263bc:	mov	r3, #0
   263c0:	str	r2, [sp, #24]
   263c4:	str	r3, [sp, #8]
   263c8:	lsr	r2, r2, #2
   263cc:	movw	r1, #21313	; 0x5341
   263d0:	strh	r2, [sp, #10]
   263d4:	movt	r1, #12592	; 0x3130
   263d8:	mov	r2, #1
   263dc:	str	r1, [sp, #4]
   263e0:	movt	r2, #20
   263e4:	str	r1, [sp, #16]
   263e8:	add	ip, r5, #64	; 0x40
   263ec:	mov	r1, #20
   263f0:	str	r3, [sp, #32]
   263f4:	str	r3, [sp, #12]
   263f8:	str	r2, [sp, #20]
   263fc:	str	r1, [sp, #28]
   26400:	beq	2647c <crc32@@Base+0xccd8>
   26404:	add	r0, sp, #32
   26408:	mov	r1, #65	; 0x41
   2640c:	add	r2, sp, #16
   26410:	b	26418 <crc32@@Base+0xcc74>
   26414:	ldrb	r1, [r2, #1]!
   26418:	add	r3, r3, r1
   2641c:	cmp	r0, r2
   26420:	uxth	r3, r3
   26424:	bne	26414 <crc32@@Base+0xcc70>
   26428:	add	lr, sp, #16
   2642c:	strh	r3, [sp, #34]	; 0x22
   26430:	ldm	lr!, {r0, r1, r2, r3}
   26434:	str	r0, [r5, #64]	; 0x40
   26438:	ldr	r0, [lr]
   2643c:	str	r1, [ip, #4]
   26440:	str	r2, [ip, #8]
   26444:	str	r0, [ip, #16]
   26448:	str	r3, [ip, #12]
   2644c:	mov	r2, r4
   26450:	mov	r1, r5
   26454:	mov	r0, #0
   26458:	bl	25354 <crc32@@Base+0xbbb0>
   2645c:	ldr	r2, [sp, #36]	; 0x24
   26460:	ldr	r3, [r6]
   26464:	cmp	r2, r3
   26468:	mvn	r0, r0
   2646c:	str	r0, [r5, r4]
   26470:	bne	264d4 <crc32@@Base+0xcd30>
   26474:	add	sp, sp, #44	; 0x2c
   26478:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2647c:	add	r0, sp, #12
   26480:	mov	r1, r7
   26484:	mov	r2, #65	; 0x41
   26488:	add	r3, sp, #4
   2648c:	b	26494 <crc32@@Base+0xccf0>
   26490:	ldrb	r2, [r3, #1]!
   26494:	add	r1, r1, r2
   26498:	cmp	r3, r0
   2649c:	uxth	r1, r1
   264a0:	bne	26490 <crc32@@Base+0xccec>
   264a4:	add	r3, sp, #4
   264a8:	strh	r1, [sp, #14]
   264ac:	ldm	r3!, {r0, r1, r2}
   264b0:	str	r0, [r5, #64]	; 0x40
   264b4:	str	r1, [ip, #4]
   264b8:	str	r2, [ip, #8]
   264bc:	b	2644c <crc32@@Base+0xcca8>
   264c0:	rsb	r8, r4, #262144	; 0x40000
   264c4:	mov	r2, r4
   264c8:	add	r1, r0, r8
   264cc:	bl	12380 <memmove@plt>
   264d0:	b	2639c <crc32@@Base+0xcbf8>
   264d4:	bl	12494 <__stack_chk_fail@plt>
   264d8:	mov	r1, #0
   264dc:	b	26358 <crc32@@Base+0xcbb4>
   264e0:	mov	r1, #1
   264e4:	b	26358 <crc32@@Base+0xcbb4>
   264e8:	push	{r4, r5, lr}
   264ec:	movw	r4, #61168	; 0xeef0
   264f0:	movt	r4, #4
   264f4:	ldr	r3, [r0, #72]	; 0x48
   264f8:	sub	sp, sp, #100	; 0x64
   264fc:	ldr	r2, [r4]
   26500:	cmp	r3, #0
   26504:	str	r2, [sp, #92]	; 0x5c
   26508:	beq	26548 <crc32@@Base+0xcda4>
   2650c:	mov	r5, r1
   26510:	mov	r2, sp
   26514:	mov	r1, r3
   26518:	mov	r0, #3
   2651c:	bl	12620 <__xstat@plt>
   26520:	cmp	r0, #0
   26524:	bne	26548 <crc32@@Base+0xcda4>
   26528:	ldr	r3, [sp, #44]	; 0x2c
   2652c:	movw	r2, #65532	; 0xfffc
   26530:	cmp	r3, r2
   26534:	rsbls	r1, r3, #65536	; 0x10000
   26538:	strls	r1, [r5, #4]
   2653c:	movwls	r2, #25076	; 0x61f4
   26540:	movtls	r2, #25
   26544:	strls	r3, [r2]
   26548:	ldr	r2, [sp, #92]	; 0x5c
   2654c:	mov	r0, #0
   26550:	ldr	r3, [r4]
   26554:	cmp	r2, r3
   26558:	bne	26564 <crc32@@Base+0xcdc0>
   2655c:	add	sp, sp, #100	; 0x64
   26560:	pop	{r4, r5, pc}
   26564:	bl	12494 <__stack_chk_fail@plt>
   26568:	cmp	r2, #0
   2656c:	bxle	lr
   26570:	movw	ip, #48324	; 0xbcc4
   26574:	add	r2, r1, r2
   26578:	movt	ip, #3
   2657c:	ldrb	r3, [r1], #1
   26580:	eor	r3, r3, r0, lsr #8
   26584:	cmp	r1, r2
   26588:	lsl	r3, r3, #1
   2658c:	ldrh	r3, [ip, r3]
   26590:	eor	r0, r3, r0, lsl #8
   26594:	uxth	r0, r0
   26598:	bne	2657c <crc32@@Base+0xcdd8>
   2659c:	bx	lr
   265a0:	cmp	r1, #0
   265a4:	ble	265ec <crc32@@Base+0xce48>
   265a8:	push	{lr}		; (str lr, [sp, #-4]!)
   265ac:	add	r1, r0, r1
   265b0:	movw	lr, #48324	; 0xbcc4
   265b4:	movt	lr, #3
   265b8:	mov	ip, #0
   265bc:	ldrb	r3, [r0], #1
   265c0:	eor	r3, r3, ip, lsr #8
   265c4:	cmp	r0, r1
   265c8:	lsl	r3, r3, #1
   265cc:	ldrh	r3, [lr, r3]
   265d0:	eor	ip, r3, ip, lsl #8
   265d4:	uxth	ip, ip
   265d8:	bne	265bc <crc32@@Base+0xce18>
   265dc:	rev16	ip, ip
   265e0:	uxth	ip, ip
   265e4:	strh	ip, [r2]
   265e8:	pop	{pc}		; (ldr pc, [sp], #4)
   265ec:	mov	ip, #0
   265f0:	strh	ip, [r2]
   265f4:	bx	lr
   265f8:	ldr	r3, [r0, #12]
   265fc:	movw	r2, #31129	; 0x7999
   26600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26604:	sub	sp, sp, #100	; 0x64
   26608:	ldr	r7, [r0, #16]
   2660c:	movt	r2, #23170	; 0x5a82
   26610:	ldr	ip, [r0, #20]
   26614:	ror	lr, r3, #2
   26618:	ldr	r5, [r0, #24]
   2661c:	eor	r4, r7, lr
   26620:	ldr	r9, [r0, #8]
   26624:	eor	r6, r7, ip
   26628:	ldr	r8, [r1]
   2662c:	and	r6, r6, r3
   26630:	str	r5, [sp, #88]	; 0x58
   26634:	add	r5, r5, r2
   26638:	str	r0, [sp, #92]	; 0x5c
   2663c:	add	r5, r5, r9, ror #27
   26640:	ldr	r0, [r1, #4]
   26644:	and	r4, r4, r9
   26648:	eor	r6, r6, ip
   2664c:	str	ip, [sp, #84]	; 0x54
   26650:	rev	r8, r8
   26654:	add	ip, ip, r2
   26658:	eor	r4, r4, r7
   2665c:	add	r6, r6, r5
   26660:	add	r5, r8, r6
   26664:	rev	fp, r0
   26668:	ldr	sl, [r1, #8]
   2666c:	add	r4, r4, ip
   26670:	ror	ip, r9, #2
   26674:	add	r4, r4, fp
   26678:	eor	r6, lr, ip
   2667c:	add	r4, r4, r5, ror #27
   26680:	ror	r0, r5, #2
   26684:	str	r8, [sp, #16]
   26688:	str	r7, [sp, #80]	; 0x50
   2668c:	rev	sl, sl
   26690:	ldr	r8, [r1, #12]
   26694:	and	r6, r6, r5
   26698:	add	r7, r7, r2
   2669c:	eor	r5, ip, r0
   266a0:	add	r7, r7, sl
   266a4:	eor	r6, r6, lr
   266a8:	str	fp, [sp, #20]
   266ac:	rev	r8, r8
   266b0:	ror	fp, r4, #2
   266b4:	str	sl, [sp, #24]
   266b8:	and	r5, r5, r4
   266bc:	ldr	sl, [r1, #16]
   266c0:	add	lr, lr, r2
   266c4:	add	r6, r6, r7
   266c8:	add	r6, r6, r4, ror #27
   266cc:	str	r8, [sp, #4]
   266d0:	add	lr, lr, r8
   266d4:	eor	r7, r0, fp
   266d8:	ldr	r8, [r1, #20]
   266dc:	eor	r5, r5, ip
   266e0:	add	r5, r5, lr
   266e4:	add	ip, ip, r2
   266e8:	rev	lr, sl
   266ec:	and	r7, r7, r6
   266f0:	add	r5, r5, r6, ror #27
   266f4:	str	lr, [sp, #8]
   266f8:	ror	r6, r6, #2
   266fc:	add	ip, ip, lr
   26700:	eor	r7, r7, r0
   26704:	rev	lr, r8
   26708:	ldr	r8, [r1, #24]
   2670c:	eor	r4, fp, r6
   26710:	add	r7, r7, ip
   26714:	str	lr, [sp, #32]
   26718:	add	r7, r7, r5, ror #27
   2671c:	add	ip, lr, r2
   26720:	and	r4, r4, r5
   26724:	ror	lr, r5, #2
   26728:	rev	r5, r8
   2672c:	add	r0, ip, r0
   26730:	eor	r4, r4, fp
   26734:	eor	ip, r6, lr
   26738:	mov	r8, r5
   2673c:	ldr	r5, [r1, #28]
   26740:	add	sl, r8, r2
   26744:	and	ip, ip, r7
   26748:	rev	r5, r5
   2674c:	add	r4, r4, r0
   26750:	ror	r0, r7, #2
   26754:	add	r4, r4, r7, ror #27
   26758:	add	fp, sl, fp
   2675c:	eor	sl, ip, r6
   26760:	mov	ip, r5
   26764:	eor	r5, lr, r0
   26768:	ldr	r7, [r1, #32]
   2676c:	and	r5, r5, r4
   26770:	str	r9, [sp, #72]	; 0x48
   26774:	add	sl, sl, fp
   26778:	add	r9, ip, r2
   2677c:	add	sl, sl, r4, ror #27
   26780:	str	ip, [sp, #56]	; 0x38
   26784:	ror	r4, r4, #2
   26788:	add	r6, r9, r6
   2678c:	eor	ip, r5, lr
   26790:	eor	r9, r0, r4
   26794:	rev	r5, r7
   26798:	add	ip, ip, r6
   2679c:	ldr	r6, [r1, #36]	; 0x24
   267a0:	add	ip, ip, sl, ror #27
   267a4:	str	r5, [sp, #12]
   267a8:	and	r9, r9, sl
   267ac:	add	r5, r5, r2
   267b0:	ror	sl, sl, #2
   267b4:	add	r5, r5, lr
   267b8:	eor	r9, r9, r0
   267bc:	rev	lr, r6
   267c0:	eor	r6, r4, sl
   267c4:	add	r7, lr, r2
   267c8:	str	r8, [sp, #28]
   267cc:	add	r9, r9, r5
   267d0:	ldr	r8, [r1, #40]	; 0x28
   267d4:	and	r6, r6, ip
   267d8:	add	r9, r9, ip, ror #27
   267dc:	str	r3, [sp, #76]	; 0x4c
   267e0:	eor	r6, r6, r4
   267e4:	str	lr, [sp, #40]	; 0x28
   267e8:	add	r0, r7, r0
   267ec:	ror	lr, ip, #2
   267f0:	ldr	r7, [r1, #44]	; 0x2c
   267f4:	rev	r8, r8
   267f8:	eor	r5, sl, lr
   267fc:	add	r0, r6, r0
   26800:	add	fp, r8, r2
   26804:	add	r0, r0, r9, ror #27
   26808:	and	r5, r5, r9
   2680c:	ror	r9, r9, #2
   26810:	rev	r3, r7
   26814:	eor	r5, r5, sl
   26818:	add	r4, fp, r4
   2681c:	eor	fp, lr, r9
   26820:	str	r8, [sp, #36]	; 0x24
   26824:	add	r4, r5, r4
   26828:	ldr	r8, [r1, #48]	; 0x30
   2682c:	add	r5, r3, r2
   26830:	and	fp, fp, r0
   26834:	add	r4, r4, r0, ror #27
   26838:	ldr	r7, [r1, #52]	; 0x34
   2683c:	ror	r0, r0, #2
   26840:	add	sl, r5, sl
   26844:	eor	fp, fp, lr
   26848:	rev	r6, r8
   2684c:	eor	ip, r9, r0
   26850:	add	fp, fp, sl
   26854:	str	r6, [sp, #44]	; 0x2c
   26858:	ror	sl, r4, #2
   2685c:	add	fp, fp, r4, ror #27
   26860:	add	r6, r6, r2
   26864:	and	ip, ip, r4
   26868:	rev	r4, r7
   2686c:	ldr	r7, [r1, #56]	; 0x38
   26870:	str	r3, [sp, #60]	; 0x3c
   26874:	add	lr, r6, lr
   26878:	ldr	r3, [sp, #24]
   2687c:	eor	r6, ip, r9
   26880:	ldr	ip, [sp, #16]
   26884:	add	r8, r4, r2
   26888:	eor	r5, r0, sl
   2688c:	add	r6, r6, lr
   26890:	rev	lr, r7
   26894:	ldr	r7, [r1, #60]	; 0x3c
   26898:	ldr	r1, [sp, #12]
   2689c:	add	r9, r8, r9
   268a0:	and	r5, r5, fp
   268a4:	eor	r8, ip, r3
   268a8:	add	r6, r6, fp, ror #27
   268ac:	eor	r5, r5, r0
   268b0:	ror	fp, fp, #2
   268b4:	eor	r8, r8, r1
   268b8:	add	r1, lr, r2
   268bc:	eor	ip, sl, fp
   268c0:	add	r0, r1, r0
   268c4:	add	r5, r5, r9
   268c8:	ldr	r1, [sp, #4]
   268cc:	rev	r9, r7
   268d0:	ldr	r7, [sp, #20]
   268d4:	add	r5, r5, r6, ror #27
   268d8:	str	lr, [sp, #16]
   268dc:	and	ip, ip, r6
   268e0:	ror	lr, r6, #2
   268e4:	ldr	r6, [sp, #40]	; 0x28
   268e8:	eor	r1, r7, r1
   268ec:	str	r4, [sp, #48]	; 0x30
   268f0:	eor	r8, r8, r4
   268f4:	eor	ip, ip, sl
   268f8:	eor	r4, fp, lr
   268fc:	eor	r1, r1, r6
   26900:	ldr	r6, [sp, #8]
   26904:	add	ip, ip, r0
   26908:	and	r4, r4, r5
   2690c:	add	r0, r9, r2
   26910:	ror	r8, r8, #31
   26914:	eor	r4, r4, fp
   26918:	add	r0, r0, sl
   2691c:	mov	sl, r3
   26920:	eor	sl, sl, r6
   26924:	ldr	r6, [sp, #16]
   26928:	mov	r7, r9
   2692c:	add	r0, r4, r0
   26930:	ror	r9, r5, #2
   26934:	add	r4, r8, r2
   26938:	add	ip, ip, r5, ror #27
   2693c:	str	r8, [sp, #20]
   26940:	eor	r5, lr, r9
   26944:	ldr	r8, [sp, #36]	; 0x24
   26948:	add	fp, r4, fp
   2694c:	eor	r1, r1, r6
   26950:	ldr	r4, [sp, #4]
   26954:	and	r5, r5, ip
   26958:	ldr	r6, [sp, #32]
   2695c:	eor	sl, sl, r8
   26960:	ldr	r3, [sp, #60]	; 0x3c
   26964:	eor	r5, r5, lr
   26968:	eor	r8, r4, r6
   2696c:	add	r5, r5, fp
   26970:	eor	r8, r8, r3
   26974:	ldr	fp, [sp, #8]
   26978:	ldr	r3, [sp, #28]
   2697c:	add	r0, r0, ip, ror #27
   26980:	str	r7, [sp, #52]	; 0x34
   26984:	ror	ip, ip, #2
   26988:	eor	sl, sl, r7
   2698c:	eor	r7, fp, r3
   26990:	ldr	fp, [sp, #20]
   26994:	ror	r1, r1, #31
   26998:	eor	r4, r9, ip
   2699c:	add	r6, r1, r2
   269a0:	and	r4, r4, r0
   269a4:	eor	r8, r8, fp
   269a8:	add	r6, r6, lr
   269ac:	ldr	fp, [sp, #44]	; 0x2c
   269b0:	eor	r4, r4, r9
   269b4:	add	r5, r5, r0, ror #27
   269b8:	str	r1, [sp, #24]
   269bc:	ror	r0, r0, #2
   269c0:	ldr	r1, [sp, #56]	; 0x38
   269c4:	ror	sl, sl, #31
   269c8:	add	r4, r4, r6
   269cc:	str	sl, [sp, #28]
   269d0:	ldr	r6, [sp, #32]
   269d4:	ror	r8, r8, #31
   269d8:	str	r8, [sp, #8]
   269dc:	eor	lr, ip, r0
   269e0:	ldr	r8, [sp, #24]
   269e4:	eor	r7, r7, fp
   269e8:	add	fp, sl, r2
   269ec:	and	lr, lr, r5
   269f0:	eor	r7, r7, r8
   269f4:	add	r9, fp, r9
   269f8:	ldr	fp, [sp, #8]
   269fc:	eor	lr, lr, ip
   26a00:	ldr	r8, [sp, #48]	; 0x30
   26a04:	add	lr, lr, r9
   26a08:	add	r2, fp, r2
   26a0c:	ror	r9, r7, #31
   26a10:	ldr	fp, [sp, #12]
   26a14:	eor	r6, r6, r1
   26a18:	ror	sl, r5, #2
   26a1c:	eor	r6, r6, r8
   26a20:	eor	r8, r3, fp
   26a24:	mov	r3, r9
   26a28:	ldr	r9, [sp, #28]
   26a2c:	add	r5, r4, r5, ror #27
   26a30:	eor	r4, r0, sl
   26a34:	add	r2, r2, ip
   26a38:	and	r4, r4, r5
   26a3c:	eor	r6, r6, r9
   26a40:	ldr	r9, [sp, #16]
   26a44:	add	lr, lr, r5, ror #27
   26a48:	eor	ip, r4, r0
   26a4c:	ror	r5, r5, #2
   26a50:	movw	r4, #60321	; 0xeba1
   26a54:	movt	r4, #28377	; 0x6ed9
   26a58:	add	r7, r3, r4
   26a5c:	eor	r8, r8, r9
   26a60:	eor	r9, sl, r5
   26a64:	str	r4, [sp, #4]
   26a68:	eor	r9, r9, lr
   26a6c:	add	r0, r7, r0
   26a70:	ldr	r4, [sp, #8]
   26a74:	add	ip, ip, r2
   26a78:	add	r0, r9, r0
   26a7c:	mov	r2, r1
   26a80:	ldr	r9, [sp, #4]
   26a84:	ror	fp, r6, #31
   26a88:	ldr	r1, [sp, #40]	; 0x28
   26a8c:	add	ip, ip, lr, ror #27
   26a90:	ldr	r6, [sp, #52]	; 0x34
   26a94:	ror	lr, lr, #2
   26a98:	ldr	r7, [sp, #12]
   26a9c:	eor	r2, r2, r1
   26aa0:	eor	r8, r8, r4
   26aa4:	add	r4, fp, r9
   26aa8:	ldr	r9, [sp, #36]	; 0x24
   26aac:	eor	r2, r2, r6
   26ab0:	add	sl, r4, sl
   26ab4:	eor	r6, r5, lr
   26ab8:	ldr	r4, [sp, #20]
   26abc:	eor	r6, r6, ip
   26ac0:	eor	r7, r7, r9
   26ac4:	ldr	r9, [sp, #4]
   26ac8:	add	r0, r0, ip, ror #27
   26acc:	ror	r8, r8, #31
   26ad0:	ror	ip, ip, #2
   26ad4:	eor	r7, r7, r4
   26ad8:	add	sl, r6, sl
   26adc:	mov	r6, r1
   26ae0:	ldr	r1, [sp, #60]	; 0x3c
   26ae4:	add	r4, r8, r9
   26ae8:	str	r8, [sp, #32]
   26aec:	eor	r2, r2, r3
   26af0:	str	r3, [sp, #56]	; 0x38
   26af4:	eor	r8, lr, ip
   26af8:	ldr	r3, [sp, #24]
   26afc:	eor	r7, r7, fp
   26b00:	eor	r8, r8, r0
   26b04:	eor	r6, r6, r1
   26b08:	add	r5, r4, r5
   26b0c:	eor	r6, r6, r3
   26b10:	add	r5, r8, r5
   26b14:	ldr	r3, [sp, #44]	; 0x2c
   26b18:	ldr	r8, [sp, #36]	; 0x24
   26b1c:	ror	r7, r7, #31
   26b20:	ror	r2, r2, #31
   26b24:	add	sl, sl, r0, ror #27
   26b28:	add	r9, r2, r9
   26b2c:	eor	r8, r8, r3
   26b30:	mov	r3, r7
   26b34:	ldr	r7, [sp, #32]
   26b38:	add	lr, r9, lr
   26b3c:	ldr	r9, [sp, #28]
   26b40:	ror	r0, r0, #2
   26b44:	eor	r6, r6, r7
   26b48:	eor	r4, ip, r0
   26b4c:	eor	r8, r8, r9
   26b50:	ldr	r9, [sp, #4]
   26b54:	add	r5, r5, sl, ror #27
   26b58:	ldr	r7, [sp, #48]	; 0x30
   26b5c:	eor	r4, r4, sl
   26b60:	ror	r6, r6, #31
   26b64:	ror	sl, sl, #2
   26b68:	add	r9, r3, r9
   26b6c:	add	r4, r4, lr
   26b70:	eor	lr, r0, sl
   26b74:	str	r3, [sp, #36]	; 0x24
   26b78:	add	ip, r9, ip
   26b7c:	eor	r7, r1, r7
   26b80:	eor	lr, lr, r5
   26b84:	mov	r1, r6
   26b88:	ldr	r6, [sp, #8]
   26b8c:	eor	r8, r8, r2
   26b90:	ldr	r9, [sp, #4]
   26b94:	add	lr, lr, ip
   26b98:	ldr	ip, [sp, #36]	; 0x24
   26b9c:	add	r4, r4, r5, ror #27
   26ba0:	eor	r7, r7, r6
   26ba4:	ror	r5, r5, #2
   26ba8:	ldr	r3, [sp, #44]	; 0x2c
   26bac:	add	r9, r1, r9
   26bb0:	eor	r6, sl, r5
   26bb4:	eor	r7, r7, ip
   26bb8:	ror	ip, r8, #31
   26bbc:	ldr	r8, [sp, #16]
   26bc0:	add	r0, r9, r0
   26bc4:	eor	r6, r6, r4
   26bc8:	str	ip, [sp, #40]	; 0x28
   26bcc:	eor	r8, r3, r8
   26bd0:	ldr	ip, [sp, #56]	; 0x38
   26bd4:	add	r6, r6, r0
   26bd8:	ldr	r3, [sp, #40]	; 0x28
   26bdc:	add	lr, lr, r4, ror #27
   26be0:	ldr	r0, [sp, #4]
   26be4:	ror	r4, r4, #2
   26be8:	eor	r8, r8, ip
   26bec:	str	r1, [sp, #60]	; 0x3c
   26bf0:	add	r9, r3, r0
   26bf4:	ror	r0, r7, #31
   26bf8:	ldr	r7, [sp, #52]	; 0x34
   26bfc:	eor	ip, r5, r4
   26c00:	str	r0, [sp, #12]
   26c04:	eor	r8, r8, r1
   26c08:	ldr	r0, [sp, #48]	; 0x30
   26c0c:	add	r6, r6, lr, ror #27
   26c10:	ldr	r1, [sp, #12]
   26c14:	add	sl, r9, sl
   26c18:	eor	r7, r0, r7
   26c1c:	ldr	r0, [sp, #4]
   26c20:	eor	ip, ip, lr
   26c24:	ror	lr, lr, #2
   26c28:	add	r9, r1, r0
   26c2c:	add	ip, ip, sl
   26c30:	eor	r0, r4, lr
   26c34:	ror	sl, r8, #31
   26c38:	ldr	r8, [sp, #16]
   26c3c:	eor	r0, r0, r6
   26c40:	str	sl, [sp, #44]	; 0x2c
   26c44:	eor	r7, r7, fp
   26c48:	ldr	sl, [sp, #20]
   26c4c:	add	r5, r9, r5
   26c50:	ldr	r9, [sp, #32]
   26c54:	eor	r7, r7, r3
   26c58:	eor	r8, r8, sl
   26c5c:	ldr	r3, [sp, #44]	; 0x2c
   26c60:	add	r5, r0, r5
   26c64:	ldr	r0, [sp, #4]
   26c68:	eor	r8, r8, r9
   26c6c:	add	ip, ip, r6, ror #27
   26c70:	add	r9, r3, r0
   26c74:	eor	r8, r8, r1
   26c78:	ldr	r0, [sp, #52]	; 0x34
   26c7c:	ror	r6, r6, #2
   26c80:	ldr	r1, [sp, #24]
   26c84:	ror	r7, r7, #31
   26c88:	str	r7, [sp, #16]
   26c8c:	eor	sl, lr, r6
   26c90:	eor	r7, r0, r1
   26c94:	add	r4, r9, r4
   26c98:	ldr	r1, [sp, #16]
   26c9c:	eor	sl, sl, ip
   26ca0:	ldr	r9, [sp, #4]
   26ca4:	add	r5, r5, ip, ror #27
   26ca8:	add	r4, sl, r4
   26cac:	ror	ip, ip, #2
   26cb0:	ldr	sl, [sp, #28]
   26cb4:	add	r9, r1, r9
   26cb8:	ror	r8, r8, #31
   26cbc:	str	r8, [sp, #48]	; 0x30
   26cc0:	ldr	r8, [sp, #20]
   26cc4:	eor	r0, r6, ip
   26cc8:	add	lr, r9, lr
   26ccc:	ldr	r9, [sp, #36]	; 0x24
   26cd0:	eor	r0, r0, r5
   26cd4:	eor	r8, r8, sl
   26cd8:	eor	r8, r8, r9
   26cdc:	add	lr, r0, lr
   26ce0:	ldr	r9, [sp, #48]	; 0x30
   26ce4:	eor	r8, r8, r1
   26ce8:	ldr	r0, [sp, #4]
   26cec:	add	r4, r4, r5, ror #27
   26cf0:	ldr	r1, [sp, #24]
   26cf4:	ror	r5, r5, #2
   26cf8:	add	r9, r9, r0
   26cfc:	ldr	r0, [sp, #8]
   26d00:	eor	r7, r7, r2
   26d04:	eor	sl, ip, r5
   26d08:	eor	r7, r7, r3
   26d0c:	eor	r1, r1, r0
   26d10:	ldr	r0, [sp, #60]	; 0x3c
   26d14:	eor	sl, sl, r4
   26d18:	add	r6, r9, r6
   26d1c:	ror	r7, r7, #31
   26d20:	ldr	r9, [sp, #48]	; 0x30
   26d24:	eor	r1, r1, r0
   26d28:	add	r6, sl, r6
   26d2c:	ldr	r0, [sp, #4]
   26d30:	ror	r8, r8, #31
   26d34:	str	r8, [sp, #20]
   26d38:	ldr	sl, [sp, #28]
   26d3c:	add	lr, lr, r4, ror #27
   26d40:	ldr	r8, [sp, #56]	; 0x38
   26d44:	ror	r4, r4, #2
   26d48:	mov	r3, r7
   26d4c:	eor	r1, r1, r9
   26d50:	add	r7, r7, r0
   26d54:	eor	r8, sl, r8
   26d58:	eor	r0, r5, r4
   26d5c:	ldr	sl, [sp, #40]	; 0x28
   26d60:	eor	r0, r0, lr
   26d64:	add	ip, r7, ip
   26d68:	eor	r8, r8, sl
   26d6c:	add	ip, r0, ip
   26d70:	ldr	sl, [sp, #20]
   26d74:	ror	r1, r1, #31
   26d78:	ldr	r0, [sp, #4]
   26d7c:	add	r6, r6, lr, ror #27
   26d80:	ror	lr, lr, #2
   26d84:	eor	r8, r8, r3
   26d88:	add	r9, sl, r0
   26d8c:	eor	sl, r4, lr
   26d90:	mov	r0, r1
   26d94:	ldr	r1, [sp, #8]
   26d98:	ldr	r7, [sp, #12]
   26d9c:	eor	sl, sl, r6
   26da0:	add	r5, r9, r5
   26da4:	eor	r1, r1, fp
   26da8:	add	r5, sl, r5
   26dac:	ror	sl, r8, #31
   26db0:	str	sl, [sp, #24]
   26db4:	eor	r1, r1, r7
   26db8:	ldr	sl, [sp, #20]
   26dbc:	add	ip, ip, r6, ror #27
   26dc0:	str	r3, [sp, #52]	; 0x34
   26dc4:	mov	r3, r0
   26dc8:	ldr	r0, [sp, #4]
   26dcc:	ror	r6, r6, #2
   26dd0:	ldr	r8, [sp, #56]	; 0x38
   26dd4:	eor	r1, r1, sl
   26dd8:	ldr	sl, [sp, #32]
   26ddc:	add	r9, r3, r0
   26de0:	eor	r0, lr, r6
   26de4:	add	r4, r9, r4
   26de8:	eor	r7, r8, sl
   26dec:	eor	r0, r0, ip
   26df0:	ldr	r8, [sp, #44]	; 0x2c
   26df4:	add	r4, r0, r4
   26df8:	ldr	r9, [sp, #24]
   26dfc:	add	r5, r5, ip, ror #27
   26e00:	ldr	r0, [sp, #4]
   26e04:	ror	ip, ip, #2
   26e08:	eor	r7, r7, r8
   26e0c:	ror	r1, r1, #31
   26e10:	add	sl, r9, r0
   26e14:	eor	r8, r6, ip
   26e18:	eor	r7, r7, r3
   26e1c:	mov	r0, r1
   26e20:	eor	r8, r8, r5
   26e24:	ldr	r1, [sp, #16]
   26e28:	add	lr, sl, lr
   26e2c:	eor	fp, fp, r2
   26e30:	add	lr, r8, lr
   26e34:	ror	r8, r7, #31
   26e38:	eor	fp, fp, r1
   26e3c:	ldr	r1, [sp, #4]
   26e40:	add	r4, r4, r5, ror #27
   26e44:	mov	sl, r8
   26e48:	ror	r5, r5, #2
   26e4c:	eor	fp, fp, r9
   26e50:	ldrd	r8, [sp, #32]
   26e54:	add	lr, lr, r4, ror #27
   26e58:	str	r3, [sp, #64]	; 0x40
   26e5c:	mov	r3, r0
   26e60:	add	r0, r0, r1
   26e64:	eor	r1, ip, r5
   26e68:	eor	r7, r8, r9
   26e6c:	eor	r1, r1, r4
   26e70:	ldr	r9, [sp, #48]	; 0x30
   26e74:	add	r6, r0, r6
   26e78:	add	r6, r1, r6
   26e7c:	ror	fp, fp, #31
   26e80:	ldr	r1, [sp, #4]
   26e84:	ror	r4, r4, #2
   26e88:	eor	r7, r7, r9
   26e8c:	mov	r8, sl
   26e90:	add	r9, sl, r1
   26e94:	mov	r0, fp
   26e98:	eor	sl, r5, r4
   26e9c:	ldr	fp, [sp, #60]	; 0x3c
   26ea0:	eor	r7, r7, r3
   26ea4:	ldr	r1, [sp, #52]	; 0x34
   26ea8:	eor	sl, sl, lr
   26eac:	add	ip, r9, ip
   26eb0:	eor	r2, r2, fp
   26eb4:	add	ip, sl, ip
   26eb8:	ror	sl, r7, #31
   26ebc:	eor	r2, r2, r1
   26ec0:	str	r8, [sp, #60]	; 0x3c
   26ec4:	eor	r2, r2, r8
   26ec8:	ldr	r1, [sp, #4]
   26ecc:	mov	r9, sl
   26ed0:	ldr	r8, [sp, #36]	; 0x24
   26ed4:	add	r6, r6, lr, ror #27
   26ed8:	ldr	sl, [sp, #40]	; 0x28
   26edc:	ror	lr, lr, #2
   26ee0:	str	r3, [sp, #56]	; 0x38
   26ee4:	mov	r3, r0
   26ee8:	eor	r7, r8, sl
   26eec:	add	r0, r0, r1
   26ef0:	ldr	r8, [sp, #4]
   26ef4:	eor	r1, r4, lr
   26ef8:	add	ip, ip, r6, ror #27
   26efc:	eor	r1, r1, r6
   26f00:	ror	r6, r6, #2
   26f04:	add	r5, r0, r5
   26f08:	ror	r2, r2, #31
   26f0c:	mov	r0, r9
   26f10:	str	r2, [sp, #8]
   26f14:	add	r9, r9, r8
   26f18:	ldr	r2, [sp, #20]
   26f1c:	eor	r8, lr, r6
   26f20:	str	r3, [sp, #40]	; 0x28
   26f24:	eor	r8, r8, ip
   26f28:	add	r5, r1, r5
   26f2c:	add	r4, r9, r4
   26f30:	ldr	r1, [sp, #12]
   26f34:	add	r9, r8, r4
   26f38:	eor	r7, r7, r2
   26f3c:	ldr	r4, [sp, #64]	; 0x40
   26f40:	eor	r7, r7, r3
   26f44:	eor	r2, fp, r1
   26f48:	ldmib	sp, {r3, fp}
   26f4c:	eor	r2, r2, r4
   26f50:	eor	r2, r2, r0
   26f54:	add	r5, r5, ip, ror #27
   26f58:	add	r3, fp, r3
   26f5c:	ldr	fp, [sp, #44]	; 0x2c
   26f60:	ror	ip, ip, #2
   26f64:	add	lr, r3, lr
   26f68:	eor	r8, sl, fp
   26f6c:	ror	r3, r7, #31
   26f70:	ror	sl, r2, #31
   26f74:	str	sl, [sp, #4]
   26f78:	ldr	sl, [sp, #24]
   26f7c:	eor	r1, r6, ip
   26f80:	add	r9, r9, r5, ror #27
   26f84:	mov	r4, r3
   26f88:	eor	r1, r1, r5
   26f8c:	eor	r8, r8, sl
   26f90:	movw	r3, #48348	; 0xbcdc
   26f94:	ldr	sl, [sp, #8]
   26f98:	movt	r3, #36635	; 0x8f1b
   26f9c:	ror	r5, r5, #2
   26fa0:	add	lr, r1, lr
   26fa4:	add	r1, r4, r3
   26fa8:	add	lr, lr, r9, ror #27
   26fac:	str	r4, [sp, #44]	; 0x2c
   26fb0:	eor	r8, r8, sl
   26fb4:	orr	r4, r9, r5
   26fb8:	ldr	sl, [sp, #16]
   26fbc:	add	r6, r1, r6
   26fc0:	ldr	r1, [sp, #12]
   26fc4:	and	r4, r4, ip
   26fc8:	str	r0, [sp, #68]	; 0x44
   26fcc:	ror	r0, r9, #2
   26fd0:	and	r9, r9, r5
   26fd4:	eor	r7, r1, sl
   26fd8:	orr	r4, r4, r9
   26fdc:	ldr	sl, [sp, #56]	; 0x38
   26fe0:	add	r6, r6, lr, ror #27
   26fe4:	orr	r2, lr, r0
   26fe8:	add	r6, r4, r6
   26fec:	ldr	r4, [sp, #44]	; 0x2c
   26ff0:	and	r9, lr, r0
   26ff4:	ldr	r1, [sp, #4]
   26ff8:	and	r2, r2, r5
   26ffc:	eor	r7, r7, sl
   27000:	orr	r2, r2, r9
   27004:	eor	r7, r7, r4
   27008:	ldr	r9, [sp, #48]	; 0x30
   2700c:	add	r1, r1, r3
   27010:	add	ip, r1, ip
   27014:	ror	r1, r8, #31
   27018:	eor	r8, fp, r9
   2701c:	ror	fp, r7, #31
   27020:	str	fp, [sp, #12]
   27024:	ror	lr, lr, #2
   27028:	ldr	fp, [sp, #60]	; 0x3c
   2702c:	add	r4, r1, r3
   27030:	add	ip, r2, ip
   27034:	add	r5, r4, r5
   27038:	eor	r8, r8, fp
   2703c:	ldr	fp, [sp, #4]
   27040:	ldr	r4, [sp, #16]
   27044:	orr	r2, r6, lr
   27048:	eor	r8, r8, fp
   2704c:	ldr	fp, [sp, #52]	; 0x34
   27050:	add	ip, ip, r6, ror #27
   27054:	str	r1, [sp, #28]
   27058:	and	r2, r2, r0
   2705c:	ror	r1, r6, #2
   27060:	and	r6, r6, lr
   27064:	eor	r7, r4, fp
   27068:	orr	r6, r2, r6
   2706c:	ldr	r4, [sp, #40]	; 0x28
   27070:	ldr	r2, [sp, #12]
   27074:	orr	sl, ip, r1
   27078:	add	r5, r5, ip, ror #27
   2707c:	and	fp, ip, r1
   27080:	add	r5, r6, r5
   27084:	add	r2, r2, r3
   27088:	ror	r6, r8, #31
   2708c:	and	sl, sl, lr
   27090:	ldr	r8, [sp, #28]
   27094:	eor	r7, r7, r4
   27098:	ldr	r4, [sp, #20]
   2709c:	add	r0, r2, r0
   270a0:	str	r6, [sp, #48]	; 0x30
   270a4:	add	r2, r6, r3
   270a8:	orr	sl, sl, fp
   270ac:	ldr	r6, [sp, #68]	; 0x44
   270b0:	ror	ip, ip, #2
   270b4:	eor	r7, r7, r8
   270b8:	add	sl, sl, r0
   270bc:	eor	r8, r9, r4
   270c0:	add	lr, r2, lr
   270c4:	ldr	r2, [sp, #12]
   270c8:	add	sl, sl, r5, ror #27
   270cc:	orr	r0, r5, ip
   270d0:	eor	r8, r8, r6
   270d4:	ror	fp, r5, #2
   270d8:	ror	r9, r7, #31
   270dc:	and	r0, r0, r1
   270e0:	str	r9, [sp, #16]
   270e4:	eor	r8, r8, r2
   270e8:	and	r5, r5, ip
   270ec:	ldr	r9, [sp, #64]	; 0x40
   270f0:	ldr	r6, [sp, #52]	; 0x34
   270f4:	orr	r5, r0, r5
   270f8:	add	lr, lr, sl, ror #27
   270fc:	ldr	r0, [sp, #16]
   27100:	add	lr, r5, lr
   27104:	ror	r5, r8, #31
   27108:	add	r2, r0, r3
   2710c:	orr	r4, sl, fp
   27110:	eor	r7, r6, r9
   27114:	ldr	r6, [sp, #8]
   27118:	and	r0, sl, fp
   2711c:	add	r1, r2, r1
   27120:	and	r4, r4, ip
   27124:	mov	r2, r5
   27128:	ldr	r5, [sp, #48]	; 0x30
   2712c:	eor	r7, r7, r6
   27130:	orr	r4, r4, r0
   27134:	ldr	r6, [sp, #44]	; 0x2c
   27138:	eor	r7, r7, r5
   2713c:	add	r4, r4, r1
   27140:	ldr	r5, [sp, #24]
   27144:	ror	sl, sl, #2
   27148:	ldr	r1, [sp, #20]
   2714c:	add	r4, r4, lr, ror #27
   27150:	str	r2, [sp, #24]
   27154:	ror	r0, lr, #2
   27158:	eor	r8, r1, r5
   2715c:	add	r1, r2, r3
   27160:	add	ip, r1, ip
   27164:	ldr	r1, [sp, #16]
   27168:	orr	r2, lr, sl
   2716c:	eor	r8, r8, r6
   27170:	and	r2, r2, fp
   27174:	eor	r8, r8, r1
   27178:	and	lr, lr, sl
   2717c:	ldr	r1, [sp, #56]	; 0x38
   27180:	add	ip, ip, r4, ror #27
   27184:	orr	lr, r2, lr
   27188:	add	lr, lr, ip
   2718c:	ror	r7, r7, #31
   27190:	ror	ip, r8, #31
   27194:	add	r2, r7, r3
   27198:	eor	r1, r9, r1
   2719c:	ldr	r9, [sp, #4]
   271a0:	add	fp, r2, fp
   271a4:	mov	r2, ip
   271a8:	ldr	ip, [sp, #24]
   271ac:	eor	r1, r1, r9
   271b0:	ldr	r8, [sp, #60]	; 0x3c
   271b4:	orr	r6, r4, r0
   271b8:	eor	r1, r1, ip
   271bc:	ror	r9, r4, #2
   271c0:	str	r7, [sp, #64]	; 0x40
   271c4:	and	r6, r6, sl
   271c8:	and	r7, r4, r0
   271cc:	orr	ip, lr, r9
   271d0:	orr	r6, r6, r7
   271d4:	eor	r7, r5, r8
   271d8:	ror	r5, r1, #31
   271dc:	str	r5, [sp, #36]	; 0x24
   271e0:	ldr	r5, [sp, #28]
   271e4:	add	fp, r6, fp
   271e8:	and	r6, ip, r0
   271ec:	ldr	ip, [sp, #64]	; 0x40
   271f0:	eor	r7, r7, r5
   271f4:	ldr	r1, [sp, #56]	; 0x38
   271f8:	eor	r7, r7, ip
   271fc:	ldr	ip, [sp, #40]	; 0x28
   27200:	add	fp, fp, lr, ror #27
   27204:	ror	r4, lr, #2
   27208:	and	lr, lr, r9
   2720c:	eor	r1, r1, ip
   27210:	orr	ip, r6, lr
   27214:	ldr	lr, [sp, #36]	; 0x24
   27218:	str	r2, [sp, #32]
   2721c:	add	r2, r2, r3
   27220:	add	r5, lr, r3
   27224:	add	sl, r2, sl
   27228:	ldr	lr, [sp, #12]
   2722c:	add	sl, sl, fp, ror #27
   27230:	orr	r8, fp, r4
   27234:	and	r2, fp, r4
   27238:	eor	r1, r1, lr
   2723c:	add	lr, ip, sl
   27240:	ror	sl, r7, #31
   27244:	and	r8, r8, r9
   27248:	orr	r8, r8, r2
   2724c:	add	r0, r5, r0
   27250:	mov	ip, sl
   27254:	ldr	sl, [sp, #32]
   27258:	add	r5, r8, r0
   2725c:	ror	r8, fp, #2
   27260:	eor	r6, r1, sl
   27264:	ldr	fp, [sp, #68]	; 0x44
   27268:	ldr	r1, [sp, #60]	; 0x3c
   2726c:	add	r5, r5, lr, ror #27
   27270:	ror	sl, lr, #2
   27274:	add	r0, ip, r3
   27278:	eor	r7, r1, fp
   2727c:	ror	r1, r6, #31
   27280:	str	r1, [sp, #20]
   27284:	orr	r2, lr, r8
   27288:	ldr	r1, [sp, #48]	; 0x30
   2728c:	add	r9, r0, r9
   27290:	str	ip, [sp, #56]	; 0x38
   27294:	and	ip, lr, r8
   27298:	ldr	lr, [sp, #36]	; 0x24
   2729c:	eor	r7, r7, r1
   272a0:	ldr	r1, [sp, #40]	; 0x28
   272a4:	and	r2, r2, r4
   272a8:	eor	r7, r7, lr
   272ac:	ldr	lr, [sp, #8]
   272b0:	add	r9, r9, r5, ror #27
   272b4:	orr	r2, r2, ip
   272b8:	eor	r0, r1, lr
   272bc:	ldr	r1, [sp, #20]
   272c0:	add	r2, r2, r9
   272c4:	orr	r6, r5, sl
   272c8:	ror	r9, r7, #31
   272cc:	add	lr, r1, r3
   272d0:	and	ip, r5, sl
   272d4:	ldr	r1, [sp, #16]
   272d8:	and	r6, r6, r8
   272dc:	add	r4, lr, r4
   272e0:	orr	r6, r6, ip
   272e4:	mov	ip, r9
   272e8:	ldr	r9, [sp, #56]	; 0x38
   272ec:	eor	r0, r0, r1
   272f0:	add	lr, r6, r4
   272f4:	ldr	r6, [sp, #44]	; 0x2c
   272f8:	eor	r0, r0, r9
   272fc:	str	ip, [sp, #60]	; 0x3c
   27300:	add	ip, ip, r3
   27304:	ror	r5, r5, #2
   27308:	ror	r4, r0, #31
   2730c:	eor	r9, fp, r6
   27310:	add	ip, ip, r8
   27314:	ldr	r8, [sp, #20]
   27318:	mov	r7, r4
   2731c:	ldr	r4, [sp, #24]
   27320:	add	lr, lr, r2, ror #27
   27324:	orr	r1, r2, r5
   27328:	eor	r9, r9, r4
   2732c:	ror	fp, r2, #2
   27330:	eor	r9, r9, r8
   27334:	and	r2, r2, r5
   27338:	and	r1, r1, sl
   2733c:	ldmib	sp, {r4, r8}
   27340:	add	ip, ip, lr, ror #27
   27344:	orr	r1, r1, r2
   27348:	add	r1, r1, ip
   2734c:	orr	r0, lr, fp
   27350:	ror	ip, r9, #31
   27354:	ldr	r2, [sp, #64]	; 0x40
   27358:	and	r0, r0, r5
   2735c:	eor	r8, r4, r8
   27360:	and	r4, lr, fp
   27364:	eor	r8, r8, r2
   27368:	orr	r4, r0, r4
   2736c:	mov	r0, ip
   27370:	ldr	ip, [sp, #60]	; 0x3c
   27374:	ror	lr, lr, #2
   27378:	str	r7, [sp, #40]	; 0x28
   2737c:	add	r7, r7, r3
   27380:	eor	r8, r8, ip
   27384:	add	sl, r7, sl
   27388:	ldr	ip, [sp, #28]
   2738c:	add	r4, r4, sl
   27390:	ror	sl, r8, #31
   27394:	str	sl, [sp, #8]
   27398:	ldr	sl, [sp, #32]
   2739c:	eor	r9, r6, ip
   273a0:	add	r4, r4, r1, ror #27
   273a4:	add	r2, r0, r3
   273a8:	eor	r9, r9, sl
   273ac:	ldr	sl, [sp, #40]	; 0x28
   273b0:	ldr	r8, [sp, #4]
   273b4:	orr	r6, r1, lr
   273b8:	eor	r9, r9, sl
   273bc:	ldr	sl, [sp, #12]
   273c0:	ror	ip, r1, #2
   273c4:	add	r5, r2, r5
   273c8:	and	r1, r1, lr
   273cc:	and	r6, r6, fp
   273d0:	eor	r7, r8, sl
   273d4:	add	r5, r5, r4, ror #27
   273d8:	ldr	r8, [sp, #8]
   273dc:	orr	r6, r6, r1
   273e0:	add	r6, r6, r5
   273e4:	ror	r5, r9, #31
   273e8:	str	r0, [sp, #44]	; 0x2c
   273ec:	add	sl, r8, r3
   273f0:	ldr	r8, [sp, #36]	; 0x24
   273f4:	mov	r2, r5
   273f8:	ldr	r5, [sp, #44]	; 0x2c
   273fc:	orr	r0, r4, ip
   27400:	eor	r7, r7, r8
   27404:	and	r1, r4, ip
   27408:	and	r0, r0, lr
   2740c:	eor	r7, r7, r5
   27410:	add	fp, sl, fp
   27414:	orr	r1, r0, r1
   27418:	add	r1, r1, fp
   2741c:	ror	fp, r7, #31
   27420:	ror	r8, r4, #2
   27424:	ldr	r0, [sp, #48]	; 0x30
   27428:	ldr	r4, [sp, #28]
   2742c:	mov	r7, fp
   27430:	ldr	fp, [sp, #56]	; 0x38
   27434:	add	r1, r1, r6, ror #27
   27438:	ldr	r9, [sp, #8]
   2743c:	eor	sl, r4, r0
   27440:	eor	sl, sl, fp
   27444:	ror	r5, r6, #2
   27448:	str	r2, [sp, #28]
   2744c:	add	r4, r2, r3
   27450:	eor	sl, sl, r9
   27454:	orr	r2, r6, r8
   27458:	ldr	r9, [sp, #12]
   2745c:	and	r6, r6, r8
   27460:	ldr	fp, [sp, #16]
   27464:	add	r4, r4, lr
   27468:	and	r2, r2, ip
   2746c:	orr	lr, r1, r5
   27470:	add	r4, r4, r1, ror #27
   27474:	and	lr, lr, r8
   27478:	eor	fp, r9, fp
   2747c:	orr	r2, r2, r6
   27480:	and	r9, r1, r5
   27484:	ldr	r6, [sp, #20]
   27488:	add	r2, r2, r4
   2748c:	orr	r9, lr, r9
   27490:	ror	r4, sl, #31
   27494:	ldr	lr, [sp, #28]
   27498:	str	r7, [sp, #48]	; 0x30
   2749c:	eor	fp, fp, r6
   274a0:	add	r7, r7, r3
   274a4:	eor	fp, fp, lr
   274a8:	add	ip, r7, ip
   274ac:	mov	r7, r4
   274b0:	ldr	r4, [sp, #24]
   274b4:	add	ip, r9, ip
   274b8:	ldr	r9, [sp, #60]	; 0x3c
   274bc:	add	r6, ip, r2, ror #27
   274c0:	str	r7, [sp, #52]	; 0x34
   274c4:	ror	sl, r1, #2
   274c8:	ror	ip, fp, #31
   274cc:	ldr	r1, [sp, #16]
   274d0:	str	ip, [sp, #4]
   274d4:	mov	lr, r0
   274d8:	ldr	fp, [sp, #64]	; 0x40
   274dc:	eor	lr, lr, r4
   274e0:	ldr	ip, [sp, #48]	; 0x30
   274e4:	orr	r0, r2, sl
   274e8:	eor	lr, lr, r9
   274ec:	add	r4, r7, r3
   274f0:	eor	lr, lr, ip
   274f4:	eor	r9, r1, fp
   274f8:	and	r1, r0, r5
   274fc:	ldr	r0, [sp, #4]
   27500:	ror	r7, r2, #2
   27504:	add	r4, r4, r8
   27508:	and	r2, r2, sl
   2750c:	ldr	r8, [sp, #40]	; 0x28
   27510:	add	r3, r0, r3
   27514:	orr	r0, r1, r2
   27518:	ror	r1, lr, #31
   2751c:	str	r1, [sp, #12]
   27520:	ldr	r1, [sp, #52]	; 0x34
   27524:	eor	r9, r9, r8
   27528:	ldr	lr, [sp, #32]
   2752c:	orr	ip, r6, r7
   27530:	eor	r9, r9, r1
   27534:	ldr	r1, [sp, #24]
   27538:	add	r4, r4, r6, ror #27
   2753c:	and	r8, r6, r7
   27540:	eor	lr, r1, lr
   27544:	add	r1, r3, r5
   27548:	ldr	r5, [sp, #44]	; 0x2c
   2754c:	add	r0, r0, r4
   27550:	and	ip, ip, sl
   27554:	ldr	r4, [sp, #12]
   27558:	eor	lr, lr, r5
   2755c:	ldr	r5, [sp, #4]
   27560:	orr	r2, ip, r8
   27564:	movw	r3, #49622	; 0xc1d6
   27568:	ror	ip, r6, #2
   2756c:	movt	r3, #51810	; 0xca62
   27570:	ror	r6, r9, #31
   27574:	ldr	r9, [sp, #36]	; 0x24
   27578:	ldr	r8, [sp, #8]
   2757c:	eor	lr, lr, r5
   27580:	add	r2, r2, r1
   27584:	add	r1, r4, r3
   27588:	eor	r4, r7, ip
   2758c:	add	r2, r2, r0, ror #27
   27590:	eor	r5, fp, r9
   27594:	add	r1, r1, sl
   27598:	ldr	fp, [sp, #12]
   2759c:	eor	r4, r4, r0
   275a0:	ror	r0, r0, #2
   275a4:	ldr	sl, [sp, #56]	; 0x38
   275a8:	str	r6, [sp, #24]
   275ac:	eor	r5, r5, r8
   275b0:	add	r4, r4, r1
   275b4:	ror	r8, lr, #31
   275b8:	eor	r1, ip, r0
   275bc:	ldr	lr, [sp, #32]
   275c0:	add	r6, r6, r3
   275c4:	eor	r5, r5, fp
   275c8:	add	r6, r6, r7
   275cc:	ldr	fp, [sp, #28]
   275d0:	eor	r1, r1, r2
   275d4:	eor	lr, lr, sl
   275d8:	add	r1, r1, r6
   275dc:	ldr	r6, [sp, #24]
   275e0:	eor	lr, lr, fp
   275e4:	add	r4, r4, r2, ror #27
   275e8:	eor	lr, lr, r6
   275ec:	ror	r2, r2, #2
   275f0:	ldr	r6, [sp, #20]
   275f4:	eor	r7, r0, r2
   275f8:	str	r8, [sp, #32]
   275fc:	add	r8, r8, r3
   27600:	add	r1, r1, r4, ror #27
   27604:	ror	fp, r5, #31
   27608:	eor	r5, r9, r6
   2760c:	add	r6, r8, ip
   27610:	ror	ip, r4, #2
   27614:	eor	r8, r7, r4
   27618:	ldr	r4, [sp, #48]	; 0x30
   2761c:	add	r8, r8, r6
   27620:	str	fp, [sp, #16]
   27624:	eor	fp, r2, ip
   27628:	eor	r5, r5, r4
   2762c:	ldr	r4, [sp, #16]
   27630:	ror	r9, r1, #2
   27634:	add	r8, r8, r1, ror #27
   27638:	add	r6, r4, r3
   2763c:	ror	r4, lr, #31
   27640:	ldr	lr, [sp, #32]
   27644:	eor	fp, fp, r1
   27648:	str	r4, [sp, #56]	; 0x38
   2764c:	add	r0, r6, r0
   27650:	eor	r5, r5, lr
   27654:	ldr	lr, [sp, #60]	; 0x3c
   27658:	add	r4, r4, r3
   2765c:	add	fp, fp, r0
   27660:	eor	r7, sl, lr
   27664:	ldr	sl, [sp, #52]	; 0x34
   27668:	ror	r1, r5, #31
   2766c:	str	r1, [sp, #36]	; 0x24
   27670:	ldr	r1, [sp, #16]
   27674:	eor	r7, r7, sl
   27678:	eor	sl, ip, r9
   2767c:	add	r2, r4, r2
   27680:	eor	r7, r7, r1
   27684:	ldr	r1, [sp, #20]
   27688:	ldr	r5, [sp, #40]	; 0x28
   2768c:	eor	sl, sl, r8
   27690:	ldr	r4, [sp, #56]	; 0x38
   27694:	add	sl, sl, r2
   27698:	eor	r6, r1, r5
   2769c:	ldr	r1, [sp, #4]
   276a0:	ldr	r2, [sp, #36]	; 0x24
   276a4:	add	fp, fp, r8, ror #27
   276a8:	eor	r6, r6, r1
   276ac:	ror	r8, r8, #2
   276b0:	eor	r6, r6, r4
   276b4:	ldr	r4, [sp, #44]	; 0x2c
   276b8:	eor	r0, r9, r8
   276bc:	add	r1, r2, r3
   276c0:	ldr	r2, [sp, #12]
   276c4:	add	sl, sl, fp, ror #27
   276c8:	ror	r7, r7, #31
   276cc:	eor	r5, lr, r4
   276d0:	eor	r0, r0, fp
   276d4:	ldr	r4, [sp, #8]
   276d8:	ror	fp, fp, #2
   276dc:	add	r1, r1, ip
   276e0:	ldr	ip, [sp, #40]	; 0x28
   276e4:	add	lr, r7, r3
   276e8:	eor	r5, r5, r2
   276ec:	ror	r6, r6, #31
   276f0:	eor	r2, r8, fp
   276f4:	str	r6, [sp, #20]
   276f8:	ldr	r6, [sp, #24]
   276fc:	add	lr, lr, r9
   27700:	eor	ip, ip, r4
   27704:	eor	r2, r2, sl
   27708:	ldr	r9, [sp, #28]
   2770c:	eor	ip, ip, r6
   27710:	add	r2, r2, lr
   27714:	ldr	lr, [sp, #44]	; 0x2c
   27718:	ldr	r6, [sp, #20]
   2771c:	eor	ip, ip, r7
   27720:	add	r1, r0, r1
   27724:	ldr	r0, [sp, #36]	; 0x24
   27728:	add	r1, r1, sl, ror #27
   2772c:	eor	r9, lr, r9
   27730:	ror	sl, sl, #2
   27734:	ldr	lr, [sp, #32]
   27738:	eor	r4, fp, sl
   2773c:	eor	r5, r5, r0
   27740:	add	r0, r6, r3
   27744:	ror	r6, ip, #31
   27748:	ldr	ip, [sp, #20]
   2774c:	add	r8, r0, r8
   27750:	eor	r4, r4, r1
   27754:	eor	r9, r9, lr
   27758:	add	r2, r2, r1, ror #27
   2775c:	ror	r5, r5, #31
   27760:	ror	r1, r1, #2
   27764:	eor	r9, r9, ip
   27768:	add	r4, r4, r8
   2776c:	ldr	ip, [sp, #8]
   27770:	ldr	r8, [sp, #48]	; 0x30
   27774:	add	r0, r5, r3
   27778:	eor	lr, sl, r1
   2777c:	add	fp, r0, fp
   27780:	eor	r8, ip, r8
   27784:	eor	lr, lr, r2
   27788:	ldr	ip, [sp, #16]
   2778c:	add	lr, lr, fp
   27790:	ror	fp, r9, #31
   27794:	ldr	r9, [sp, #28]
   27798:	str	fp, [sp, #8]
   2779c:	add	r0, r6, r3
   277a0:	ldr	fp, [sp, #52]	; 0x34
   277a4:	eor	r8, r8, ip
   277a8:	add	r0, r0, sl
   277ac:	eor	r8, r8, r5
   277b0:	ldr	sl, [sp, #56]	; 0x38
   277b4:	eor	r9, r9, fp
   277b8:	ldr	fp, [sp, #8]
   277bc:	add	r4, r4, r2, ror #27
   277c0:	eor	r9, r9, sl
   277c4:	ror	r2, r2, #2
   277c8:	add	sl, fp, r3
   277cc:	ror	r8, r8, #31
   277d0:	str	r8, [sp, #28]
   277d4:	eor	ip, r1, r2
   277d8:	ldr	fp, [sp, #4]
   277dc:	add	r1, sl, r1
   277e0:	ldr	r8, [sp, #48]	; 0x30
   277e4:	eor	r9, r9, r6
   277e8:	ldr	sl, [sp, #28]
   277ec:	add	lr, lr, r4, ror #27
   277f0:	str	r6, [sp, #40]	; 0x28
   277f4:	eor	r8, r8, fp
   277f8:	ldr	r6, [sp, #36]	; 0x24
   277fc:	add	fp, sl, r3
   27800:	ldr	sl, [sp, #8]
   27804:	eor	ip, ip, r4
   27808:	eor	r8, r8, r6
   2780c:	ror	r4, r4, #2
   27810:	eor	r8, r8, sl
   27814:	ldr	sl, [sp, #52]	; 0x34
   27818:	ldr	r6, [sp, #12]
   2781c:	add	ip, ip, r0
   27820:	eor	r0, r2, r4
   27824:	add	r2, fp, r2
   27828:	eor	sl, sl, r6
   2782c:	ldr	fp, [sp, #4]
   27830:	ldr	r6, [sp, #24]
   27834:	add	ip, ip, lr, ror #27
   27838:	eor	r0, r0, lr
   2783c:	ror	lr, lr, #2
   27840:	eor	fp, fp, r6
   27844:	ldr	r6, [sp, #28]
   27848:	add	r0, r0, r1
   2784c:	eor	r7, r7, sl
   27850:	eor	r1, r4, lr
   27854:	add	r0, r0, ip, ror #27
   27858:	ror	r9, r9, #31
   2785c:	eor	r1, r1, ip
   27860:	eor	r7, r7, r6
   27864:	ror	ip, ip, #2
   27868:	ldr	r6, [sp, #20]
   2786c:	add	sl, r9, r3
   27870:	add	r1, r1, r2
   27874:	eor	r2, lr, ip
   27878:	eor	r2, r2, r0
   2787c:	add	r4, sl, r4
   27880:	eor	r6, r6, fp
   27884:	add	r4, r2, r4
   27888:	eor	r6, r6, r9
   2788c:	ldr	r2, [sp, #32]
   27890:	ldr	r9, [sp, #12]
   27894:	add	r1, r1, r0, ror #27
   27898:	ror	r8, r8, #31
   2789c:	ror	r0, r0, #2
   278a0:	eor	r9, r9, r2
   278a4:	add	sl, r8, r3
   278a8:	eor	fp, ip, r0
   278ac:	eor	r5, r5, r9
   278b0:	add	r4, r4, r1, ror #27
   278b4:	eor	fp, fp, r1
   278b8:	ror	r7, r7, #31
   278bc:	ror	r1, r1, #2
   278c0:	add	lr, sl, lr
   278c4:	eor	r8, r8, r5
   278c8:	ldr	r9, [sp, #16]
   278cc:	add	r2, r7, r3
   278d0:	ldr	r5, [sp, #24]
   278d4:	eor	sl, r0, r1
   278d8:	add	lr, fp, lr
   278dc:	eor	sl, sl, r4
   278e0:	add	lr, lr, r4, ror #27
   278e4:	ror	r6, r6, #31
   278e8:	ror	r4, r4, #2
   278ec:	add	ip, r2, ip
   278f0:	eor	r9, r5, r9
   278f4:	ldr	r5, [sp, #40]	; 0x28
   278f8:	add	r2, r6, r3
   278fc:	eor	fp, r1, r4
   27900:	add	ip, sl, ip
   27904:	eor	r9, r9, r5
   27908:	ror	sl, lr, #2
   2790c:	add	ip, ip, lr, ror #27
   27910:	eor	fp, fp, lr
   27914:	ldr	r5, [sp, #56]	; 0x38
   27918:	add	r0, r2, r0
   2791c:	ldr	lr, [sp, #32]
   27920:	add	r0, fp, r0
   27924:	ldr	fp, [sp, #8]
   27928:	ror	r8, r8, #31
   2792c:	eor	lr, lr, r5
   27930:	eor	lr, lr, fp
   27934:	eor	r5, r4, sl
   27938:	eor	r7, r7, r9
   2793c:	add	r9, r8, r3
   27940:	eor	r5, r5, ip
   27944:	ldr	fp, [sp, #36]	; 0x24
   27948:	add	r1, r9, r1
   2794c:	eor	r6, r6, lr
   27950:	ldr	lr, [sp, #16]
   27954:	add	r0, r0, ip, ror #27
   27958:	add	r1, r5, r1
   2795c:	ror	ip, ip, #2
   27960:	ldr	r5, [sp, #28]
   27964:	add	r7, r3, r7, ror #31
   27968:	eor	r2, lr, fp
   2796c:	eor	lr, sl, ip
   27970:	add	r1, r1, r0, ror #27
   27974:	eor	r2, r2, r5
   27978:	add	r4, r7, r4
   2797c:	ldr	r9, [sp, #72]	; 0x48
   27980:	eor	r7, lr, r0
   27984:	ror	r0, r0, #2
   27988:	eor	fp, ip, r0
   2798c:	add	r4, r4, r7
   27990:	eor	r8, r8, r2
   27994:	add	r4, r4, r1, ror #27
   27998:	eor	fp, fp, r1
   2799c:	add	r6, r3, r6, ror #31
   279a0:	ror	r1, r1, #2
   279a4:	add	r3, r9, r3
   279a8:	ldr	r2, [sp, #92]	; 0x5c
   279ac:	add	r8, r3, r8, ror #31
   279b0:	add	r6, r6, sl
   279b4:	eor	r3, r0, r1
   279b8:	add	r6, r6, fp
   279bc:	add	ip, r8, ip
   279c0:	ldr	r7, [sp, #80]	; 0x50
   279c4:	eor	r8, r3, r4
   279c8:	ldr	r3, [sp, #76]	; 0x4c
   279cc:	add	r6, r6, r4, ror #27
   279d0:	ldr	r5, [sp, #88]	; 0x58
   279d4:	add	r4, r7, r4, ror #2
   279d8:	add	r3, r3, r6
   279dc:	str	r4, [r2, #16]
   279e0:	str	r3, [r2, #12]
   279e4:	mov	r3, r2
   279e8:	ldr	r2, [sp, #84]	; 0x54
   279ec:	add	ip, ip, r8
   279f0:	add	ip, ip, r6, ror #27
   279f4:	add	r0, r5, r0
   279f8:	add	r1, r2, r1
   279fc:	str	ip, [r3, #8]
   27a00:	str	r1, [r3, #20]
   27a04:	str	r0, [r3, #24]
   27a08:	add	sp, sp, #100	; 0x64
   27a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27a14:	mov	r6, r0
   27a18:	ldr	r8, [r0]
   27a1c:	mov	r7, r2
   27a20:	mov	r4, r1
   27a24:	adds	r3, r8, r2
   27a28:	str	r3, [r0]
   27a2c:	and	r8, r8, #63	; 0x3f
   27a30:	ldrcs	r3, [r0, #4]
   27a34:	rsb	r5, r8, #64	; 0x40
   27a38:	addcs	r3, r3, #1
   27a3c:	strcs	r3, [r0, #4]
   27a40:	cmp	r5, r2
   27a44:	movhi	r3, #0
   27a48:	movls	r3, #1
   27a4c:	cmp	r8, #0
   27a50:	moveq	r3, #0
   27a54:	cmp	r3, #0
   27a58:	bne	27ab0 <crc32@@Base+0xe30c>
   27a5c:	cmp	r7, #63	; 0x3f
   27a60:	bls	27a90 <crc32@@Base+0xe2ec>
   27a64:	sub	r5, r7, #64	; 0x40
   27a68:	bic	r5, r5, #63	; 0x3f
   27a6c:	add	r5, r5, #64	; 0x40
   27a70:	add	r5, r4, r5
   27a74:	mov	r1, r4
   27a78:	mov	r0, r6
   27a7c:	add	r4, r4, #64	; 0x40
   27a80:	bl	265f8 <crc32@@Base+0xce54>
   27a84:	cmp	r4, r5
   27a88:	bne	27a74 <crc32@@Base+0xe2d0>
   27a8c:	and	r7, r7, #63	; 0x3f
   27a90:	cmp	r7, #0
   27a94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   27a98:	add	r0, r6, #28
   27a9c:	mov	r2, r7
   27aa0:	add	r0, r0, r8
   27aa4:	mov	r1, r4
   27aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27aac:	b	1259c <memcpy@plt>
   27ab0:	add	r9, r0, #28
   27ab4:	mov	r2, r5
   27ab8:	add	r0, r9, r8
   27abc:	sub	r7, r7, r5
   27ac0:	bl	1259c <memcpy@plt>
   27ac4:	mov	r1, r9
   27ac8:	mov	r0, r6
   27acc:	add	r4, r4, r5
   27ad0:	bl	265f8 <crc32@@Base+0xce54>
   27ad4:	mov	r8, #0
   27ad8:	b	27a5c <crc32@@Base+0xe2b8>
   27adc:	movw	r2, #8961	; 0x2301
   27ae0:	movw	r3, #43913	; 0xab89
   27ae4:	movt	r2, #26437	; 0x6745
   27ae8:	movt	r3, #61389	; 0xefcd
   27aec:	strd	r2, [r0, #8]
   27af0:	movw	r2, #56574	; 0xdcfe
   27af4:	movw	r3, #21622	; 0x5476
   27af8:	movt	r2, #39098	; 0x98ba
   27afc:	movt	r3, #4146	; 0x1032
   27b00:	strd	r2, [r0, #16]
   27b04:	mov	r3, #0
   27b08:	movw	r2, #57840	; 0xe1f0
   27b0c:	str	r3, [r0]
   27b10:	movt	r2, #50130	; 0xc3d2
   27b14:	str	r3, [r0, #4]
   27b18:	str	r2, [r0, #24]
   27b1c:	bx	lr
   27b20:	cmp	r2, #0
   27b24:	bxeq	lr
   27b28:	b	27a10 <crc32@@Base+0xe26c>
   27b2c:	ldr	r3, [r0]
   27b30:	push	{r4, r5, r6, lr}
   27b34:	mov	r4, r0
   27b38:	ldr	r0, [r0, #4]
   27b3c:	movw	r6, #61168	; 0xeef0
   27b40:	movt	r6, #4
   27b44:	mov	r5, r1
   27b48:	lsr	r1, r3, #29
   27b4c:	sub	sp, sp, #16
   27b50:	orr	r1, r1, r0, lsl #3
   27b54:	ldr	r0, [r6]
   27b58:	and	r2, r3, #63	; 0x3f
   27b5c:	lsl	r3, r3, #3
   27b60:	cmp	r2, #55	; 0x37
   27b64:	lsr	ip, r1, #24
   27b68:	rsbls	r2, r2, #56	; 0x38
   27b6c:	rsbhi	r2, r2, #120	; 0x78
   27b70:	strb	r1, [sp, #7]
   27b74:	strb	ip, [sp, #4]
   27b78:	lsr	ip, r1, #16
   27b7c:	str	r0, [sp, #12]
   27b80:	lsr	r1, r1, #8
   27b84:	mov	r0, r4
   27b88:	strb	r1, [sp, #6]
   27b8c:	lsr	r1, r3, #24
   27b90:	strb	r1, [sp, #8]
   27b94:	lsr	r1, r3, #16
   27b98:	strb	r1, [sp, #9]
   27b9c:	movw	r1, #48836	; 0xbec4
   27ba0:	movt	r1, #3
   27ba4:	strb	r3, [sp, #11]
   27ba8:	lsr	r3, r3, #8
   27bac:	strb	ip, [sp, #5]
   27bb0:	strb	r3, [sp, #10]
   27bb4:	bl	27a10 <crc32@@Base+0xe26c>
   27bb8:	mov	r2, #8
   27bbc:	add	r1, sp, #4
   27bc0:	mov	r0, r4
   27bc4:	bl	27a10 <crc32@@Base+0xe26c>
   27bc8:	ldrb	r3, [r4, #11]
   27bcc:	strb	r3, [r5]
   27bd0:	ldrh	r3, [r4, #10]
   27bd4:	strb	r3, [r5, #1]
   27bd8:	ldr	r3, [r4, #8]
   27bdc:	lsr	r3, r3, #8
   27be0:	strb	r3, [r5, #2]
   27be4:	ldr	r3, [r4, #8]
   27be8:	strb	r3, [r5, #3]
   27bec:	ldrb	r3, [r4, #15]
   27bf0:	strb	r3, [r5, #4]
   27bf4:	ldrh	r3, [r4, #14]
   27bf8:	strb	r3, [r5, #5]
   27bfc:	ldr	r3, [r4, #12]
   27c00:	lsr	r3, r3, #8
   27c04:	strb	r3, [r5, #6]
   27c08:	ldr	r3, [r4, #12]
   27c0c:	strb	r3, [r5, #7]
   27c10:	ldrb	r3, [r4, #19]
   27c14:	strb	r3, [r5, #8]
   27c18:	ldrh	r3, [r4, #18]
   27c1c:	strb	r3, [r5, #9]
   27c20:	ldr	r3, [r4, #16]
   27c24:	lsr	r3, r3, #8
   27c28:	strb	r3, [r5, #10]
   27c2c:	ldr	r3, [r4, #16]
   27c30:	strb	r3, [r5, #11]
   27c34:	ldrb	r3, [r4, #23]
   27c38:	strb	r3, [r5, #12]
   27c3c:	ldrh	r3, [r4, #22]
   27c40:	strb	r3, [r5, #13]
   27c44:	ldr	r3, [r4, #20]
   27c48:	lsr	r3, r3, #8
   27c4c:	strb	r3, [r5, #14]
   27c50:	ldr	r3, [r4, #20]
   27c54:	strb	r3, [r5, #15]
   27c58:	ldrb	r3, [r4, #27]
   27c5c:	ldr	r1, [sp, #12]
   27c60:	ldr	r2, [r6]
   27c64:	strb	r3, [r5, #16]
   27c68:	ldrh	r3, [r4, #26]
   27c6c:	cmp	r1, r2
   27c70:	strb	r3, [r5, #17]
   27c74:	ldr	r3, [r4, #24]
   27c78:	lsr	r3, r3, #8
   27c7c:	strb	r3, [r5, #18]
   27c80:	ldr	r3, [r4, #24]
   27c84:	strb	r3, [r5, #19]
   27c88:	bne	27c94 <crc32@@Base+0xe4f0>
   27c8c:	add	sp, sp, #16
   27c90:	pop	{r4, r5, r6, pc}
   27c94:	bl	12494 <__stack_chk_fail@plt>
   27c98:	push	{r4, r5, r6, lr}
   27c9c:	movw	r4, #61168	; 0xeef0
   27ca0:	movt	r4, #4
   27ca4:	sub	sp, sp, #96	; 0x60
   27ca8:	cmp	r1, #0
   27cac:	movw	r3, #8961	; 0x2301
   27cb0:	ldr	ip, [r4]
   27cb4:	movt	r3, #26437	; 0x6745
   27cb8:	mov	r5, sp
   27cbc:	str	r3, [sp, #8]
   27cc0:	mov	r6, r2
   27cc4:	movw	r3, #43913	; 0xab89
   27cc8:	str	ip, [sp, #92]	; 0x5c
   27ccc:	movt	r3, #61389	; 0xefcd
   27cd0:	str	r3, [sp, #12]
   27cd4:	movw	r3, #56574	; 0xdcfe
   27cd8:	movt	r3, #39098	; 0x98ba
   27cdc:	str	r3, [sp, #16]
   27ce0:	movw	r3, #21622	; 0x5476
   27ce4:	movt	r3, #4146	; 0x1032
   27ce8:	str	r3, [sp, #20]
   27cec:	movw	r3, #57840	; 0xe1f0
   27cf0:	movt	r3, #50130	; 0xc3d2
   27cf4:	str	r3, [sp, #24]
   27cf8:	mov	r3, #0
   27cfc:	str	r3, [sp]
   27d00:	str	r3, [sp, #4]
   27d04:	beq	27d18 <crc32@@Base+0xe574>
   27d08:	mov	r2, r1
   27d0c:	mov	r1, r0
   27d10:	mov	r0, r5
   27d14:	bl	27a10 <crc32@@Base+0xe26c>
   27d18:	mov	r1, r6
   27d1c:	mov	r0, r5
   27d20:	bl	27b2c <crc32@@Base+0xe388>
   27d24:	ldr	r2, [sp, #92]	; 0x5c
   27d28:	ldr	r3, [r4]
   27d2c:	cmp	r2, r3
   27d30:	bne	27d3c <crc32@@Base+0xe598>
   27d34:	add	sp, sp, #96	; 0x60
   27d38:	pop	{r4, r5, r6, pc}
   27d3c:	bl	12494 <__stack_chk_fail@plt>
   27d40:	push	{r4, r5, r6, lr}
   27d44:	movw	r4, #61168	; 0xeef0
   27d48:	movt	r4, #4
   27d4c:	sub	sp, sp, #96	; 0x60
   27d50:	cmp	r1, #0
   27d54:	movw	r3, #8961	; 0x2301
   27d58:	ldr	ip, [r4]
   27d5c:	movt	r3, #26437	; 0x6745
   27d60:	mov	r5, sp
   27d64:	str	r3, [sp, #8]
   27d68:	mov	r6, r2
   27d6c:	movw	r3, #43913	; 0xab89
   27d70:	str	ip, [sp, #92]	; 0x5c
   27d74:	movt	r3, #61389	; 0xefcd
   27d78:	str	r3, [sp, #12]
   27d7c:	movw	r3, #56574	; 0xdcfe
   27d80:	movt	r3, #39098	; 0x98ba
   27d84:	str	r3, [sp, #16]
   27d88:	movw	r3, #21622	; 0x5476
   27d8c:	movt	r3, #4146	; 0x1032
   27d90:	str	r3, [sp, #20]
   27d94:	movw	r3, #57840	; 0xe1f0
   27d98:	movt	r3, #50130	; 0xc3d2
   27d9c:	str	r3, [sp, #24]
   27da0:	mov	r3, #0
   27da4:	str	r3, [sp]
   27da8:	str	r3, [sp, #4]
   27dac:	beq	27dc0 <crc32@@Base+0xe61c>
   27db0:	mov	r2, r1
   27db4:	mov	r1, r0
   27db8:	mov	r0, r5
   27dbc:	bl	27a10 <crc32@@Base+0xe26c>
   27dc0:	mov	r1, r6
   27dc4:	mov	r0, r5
   27dc8:	bl	27b2c <crc32@@Base+0xe388>
   27dcc:	ldr	r2, [sp, #92]	; 0x5c
   27dd0:	ldr	r3, [r4]
   27dd4:	cmp	r2, r3
   27dd8:	bne	27de4 <crc32@@Base+0xe640>
   27ddc:	add	sp, sp, #96	; 0x60
   27de0:	pop	{r4, r5, r6, pc}
   27de4:	bl	12494 <__stack_chk_fail@plt>
   27de8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27dec:	movw	r5, #61168	; 0xeef0
   27df0:	movt	r5, #4
   27df4:	sub	sp, sp, #248	; 0xf8
   27df8:	mov	r4, r1
   27dfc:	mov	r9, r0
   27e00:	ldr	ip, [r5]
   27e04:	mov	r1, #54	; 0x36
   27e08:	mov	r8, r2
   27e0c:	add	r0, sp, #116	; 0x74
   27e10:	mov	r2, #64	; 0x40
   27e14:	mov	r6, r3
   27e18:	str	ip, [sp, #244]	; 0xf4
   27e1c:	ldr	r7, [sp, #280]	; 0x118
   27e20:	bl	122e4 <memset@plt>
   27e24:	add	r0, sp, #180	; 0xb4
   27e28:	mov	r2, #64	; 0x40
   27e2c:	mov	r1, #92	; 0x5c
   27e30:	bl	122e4 <memset@plt>
   27e34:	cmp	r4, #0
   27e38:	ble	27e88 <crc32@@Base+0xe6e4>
   27e3c:	sub	r0, r9, #1
   27e40:	add	lr, sp, #179	; 0xb3
   27e44:	add	r9, sp, #115	; 0x73
   27e48:	mov	r2, #0
   27e4c:	add	r2, r2, #1
   27e50:	ldrb	r1, [r9, #1]!
   27e54:	cmp	r2, #63	; 0x3f
   27e58:	ldrb	sl, [lr, #1]!
   27e5c:	ldrb	r3, [r0, #1]!
   27e60:	movle	ip, #0
   27e64:	movgt	ip, #1
   27e68:	cmp	r4, r2
   27e6c:	orrle	ip, ip, #1
   27e70:	eor	r1, r1, r3
   27e74:	cmp	ip, #0
   27e78:	eor	r3, r3, sl
   27e7c:	strb	r1, [r9]
   27e80:	strb	r3, [lr]
   27e84:	beq	27e4c <crc32@@Base+0xe6a8>
   27e88:	add	r1, sp, #116	; 0x74
   27e8c:	mov	r2, #64	; 0x40
   27e90:	add	r0, sp, #4
   27e94:	movw	r3, #8961	; 0x2301
   27e98:	movt	r3, #26437	; 0x6745
   27e9c:	str	r3, [sp, #12]
   27ea0:	movw	r3, #43913	; 0xab89
   27ea4:	movt	r3, #61389	; 0xefcd
   27ea8:	str	r3, [sp, #16]
   27eac:	movw	r3, #56574	; 0xdcfe
   27eb0:	movt	r3, #39098	; 0x98ba
   27eb4:	str	r3, [sp, #20]
   27eb8:	movw	r3, #21622	; 0x5476
   27ebc:	movt	r3, #4146	; 0x1032
   27ec0:	str	r3, [sp, #24]
   27ec4:	movw	r3, #57840	; 0xe1f0
   27ec8:	movt	r3, #50130	; 0xc3d2
   27ecc:	str	r3, [sp, #28]
   27ed0:	mov	r3, #0
   27ed4:	str	r3, [sp, #4]
   27ed8:	str	r3, [sp, #8]
   27edc:	bl	27a10 <crc32@@Base+0xe26c>
   27ee0:	cmp	r6, #0
   27ee4:	beq	27ef8 <crc32@@Base+0xe754>
   27ee8:	mov	r2, r6
   27eec:	mov	r1, r8
   27ef0:	add	r0, sp, #4
   27ef4:	bl	27a10 <crc32@@Base+0xe26c>
   27ef8:	add	r0, sp, #4
   27efc:	add	r1, sp, #96	; 0x60
   27f00:	bl	27b2c <crc32@@Base+0xe388>
   27f04:	add	r1, sp, #180	; 0xb4
   27f08:	mov	r2, #64	; 0x40
   27f0c:	add	r0, sp, #4
   27f10:	movw	r3, #8961	; 0x2301
   27f14:	movt	r3, #26437	; 0x6745
   27f18:	str	r3, [sp, #12]
   27f1c:	movw	r3, #43913	; 0xab89
   27f20:	movt	r3, #61389	; 0xefcd
   27f24:	str	r3, [sp, #16]
   27f28:	movw	r3, #56574	; 0xdcfe
   27f2c:	movt	r3, #39098	; 0x98ba
   27f30:	str	r3, [sp, #20]
   27f34:	movw	r3, #21622	; 0x5476
   27f38:	movt	r3, #4146	; 0x1032
   27f3c:	str	r3, [sp, #24]
   27f40:	movw	r3, #57840	; 0xe1f0
   27f44:	movt	r3, #50130	; 0xc3d2
   27f48:	str	r3, [sp, #28]
   27f4c:	mov	r3, #0
   27f50:	str	r3, [sp, #4]
   27f54:	str	r3, [sp, #8]
   27f58:	bl	27a10 <crc32@@Base+0xe26c>
   27f5c:	mov	r2, #20
   27f60:	add	r1, sp, #96	; 0x60
   27f64:	add	r0, sp, #4
   27f68:	bl	27a10 <crc32@@Base+0xe26c>
   27f6c:	mov	r1, r7
   27f70:	add	r0, sp, #4
   27f74:	bl	27b2c <crc32@@Base+0xe388>
   27f78:	ldr	r2, [sp, #244]	; 0xf4
   27f7c:	ldr	r3, [r5]
   27f80:	cmp	r2, r3
   27f84:	bne	27f90 <crc32@@Base+0xe7ec>
   27f88:	add	sp, sp, #248	; 0xf8
   27f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27f90:	bl	12494 <__stack_chk_fail@plt>
   27f94:	mov	r0, #0
   27f98:	bx	lr
   27f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fa0:	mov	r7, r0
   27fa4:	ldr	r8, [r0, #24]
   27fa8:	sub	sp, sp, #116	; 0x74
   27fac:	ldr	r4, [r7, #16]
   27fb0:	movw	lr, #12184	; 0x2f98
   27fb4:	ldr	r6, [r7, #36]	; 0x24
   27fb8:	movt	lr, #17034	; 0x428a
   27fbc:	ldr	r0, [r0, #32]
   27fc0:	ror	r2, r8, #11
   27fc4:	ldr	r9, [r7, #28]
   27fc8:	eor	r2, r2, r8, ror #6
   27fcc:	ldr	ip, [r7, #8]
   27fd0:	add	lr, r6, lr
   27fd4:	ldr	fp, [r7, #12]
   27fd8:	eor	r2, r2, r8, ror #25
   27fdc:	str	r4, [sp, #76]	; 0x4c
   27fe0:	mov	r5, r0
   27fe4:	add	r2, r2, lr
   27fe8:	eor	r0, r9, r0
   27fec:	ldr	lr, [sp, #76]	; 0x4c
   27ff0:	mov	sl, ip
   27ff4:	str	r6, [sp, #104]	; 0x68
   27ff8:	orr	r4, sl, fp
   27ffc:	ldr	r6, [r1]
   28000:	and	r0, r0, r8
   28004:	ror	ip, ip, #13
   28008:	str	r5, [sp, #88]	; 0x58
   2800c:	eor	r0, r0, r5
   28010:	eor	ip, ip, sl, ror #2
   28014:	and	r5, sl, fp
   28018:	and	r4, r4, lr
   2801c:	ldr	lr, [r7, #20]
   28020:	orr	r4, r4, r5
   28024:	add	r2, r2, r0
   28028:	eor	ip, ip, sl, ror #22
   2802c:	rev	r0, r6
   28030:	add	ip, ip, r4
   28034:	add	r2, r2, r0
   28038:	ldr	r5, [r1, #4]
   2803c:	str	r0, [sp]
   28040:	add	r0, ip, r2
   28044:	str	lr, [sp, #92]	; 0x5c
   28048:	add	lr, lr, r2
   2804c:	ldr	r2, [sp, #88]	; 0x58
   28050:	eor	r6, r8, r9
   28054:	movw	r3, #17553	; 0x4491
   28058:	movt	r3, #28983	; 0x7137
   2805c:	orr	r4, sl, r0
   28060:	and	r6, r6, lr
   28064:	add	r3, r2, r3
   28068:	ror	ip, r0, #13
   2806c:	rev	r2, r5
   28070:	ror	r5, lr, #11
   28074:	str	r7, [sp, #108]	; 0x6c
   28078:	eor	r6, r6, r9
   2807c:	and	r7, sl, r0
   28080:	add	r3, r3, r2
   28084:	eor	r5, r5, lr, ror #6
   28088:	and	r4, r4, fp
   2808c:	eor	ip, ip, r0, ror #2
   28090:	eor	r5, r5, lr, ror #25
   28094:	eor	ip, ip, r0, ror #22
   28098:	add	r3, r6, r3
   2809c:	orr	r4, r4, r7
   280a0:	add	r3, r3, r5
   280a4:	add	r4, ip, r4
   280a8:	str	r2, [sp, #8]
   280ac:	add	r2, r4, r3
   280b0:	ldr	r4, [r1, #8]
   280b4:	ldr	ip, [sp, #76]	; 0x4c
   280b8:	rev	r5, r4
   280bc:	str	fp, [sp, #84]	; 0x54
   280c0:	add	r6, ip, r3
   280c4:	mov	fp, r8
   280c8:	mov	r3, r5
   280cc:	eor	r8, r8, lr
   280d0:	orr	r5, r0, r2
   280d4:	ror	r4, r2, #13
   280d8:	movw	ip, #64463	; 0xfbcf
   280dc:	movt	ip, #46528	; 0xb5c0
   280e0:	str	r9, [sp, #100]	; 0x64
   280e4:	and	r8, r8, r6
   280e8:	add	ip, r9, ip
   280ec:	ror	r7, r6, #11
   280f0:	and	r9, r0, r2
   280f4:	and	r5, r5, sl
   280f8:	eor	r4, r4, r2, ror #2
   280fc:	eor	r8, r8, fp
   28100:	eor	r4, r4, r2, ror #22
   28104:	add	ip, ip, r3
   28108:	eor	r7, r7, r6, ror #6
   2810c:	orr	r5, r5, r9
   28110:	eor	r7, r7, r6, ror #25
   28114:	add	r5, r4, r5
   28118:	add	ip, r8, ip
   2811c:	ldr	r4, [sp, #84]	; 0x54
   28120:	add	ip, ip, r7
   28124:	str	r3, [sp, #20]
   28128:	add	r7, r4, ip
   2812c:	ldr	r4, [r1, #12]
   28130:	add	r3, r5, ip
   28134:	str	sl, [sp, #80]	; 0x50
   28138:	rev	r5, r4
   2813c:	eor	sl, lr, r6
   28140:	movw	ip, #56229	; 0xdba5
   28144:	movt	ip, #59829	; 0xe9b5
   28148:	mov	r9, r5
   2814c:	and	sl, sl, r7
   28150:	orr	r5, r2, r3
   28154:	add	ip, fp, ip
   28158:	ror	r8, r7, #11
   2815c:	ror	r4, r3, #13
   28160:	str	fp, [sp, #96]	; 0x60
   28164:	eor	sl, sl, lr
   28168:	and	fp, r2, r3
   2816c:	add	ip, ip, r9
   28170:	eor	r8, r8, r7, ror #6
   28174:	and	r5, r5, r0
   28178:	eor	r4, r4, r3, ror #2
   2817c:	eor	r8, r8, r7, ror #25
   28180:	orr	r5, r5, fp
   28184:	eor	r4, r4, r3, ror #22
   28188:	ldr	fp, [r1, #16]
   2818c:	add	ip, sl, ip
   28190:	ldr	sl, [sp, #80]	; 0x50
   28194:	add	ip, ip, r8
   28198:	str	r9, [sp, #24]
   2819c:	add	r9, r4, r5
   281a0:	add	r9, r9, ip
   281a4:	add	r5, sl, ip
   281a8:	rev	ip, fp
   281ac:	movw	r8, #49755	; 0xc25b
   281b0:	movt	r8, #14678	; 0x3956
   281b4:	ror	fp, r5, #11
   281b8:	mov	sl, ip
   281bc:	eor	ip, r6, r7
   281c0:	add	r8, sl, r8
   281c4:	and	ip, ip, r5
   281c8:	str	sl, [sp, #16]
   281cc:	eor	ip, ip, r6
   281d0:	orr	sl, r3, r9
   281d4:	ror	r4, r9, #13
   281d8:	add	lr, r8, lr
   281dc:	eor	fp, fp, r5, ror #6
   281e0:	and	r8, r3, r9
   281e4:	eor	fp, fp, r5, ror #25
   281e8:	and	sl, sl, r2
   281ec:	eor	r4, r4, r9, ror #2
   281f0:	add	lr, ip, lr
   281f4:	eor	r4, r4, r9, ror #22
   281f8:	add	lr, lr, fp
   281fc:	orr	sl, sl, r8
   28200:	ldr	fp, [r1, #20]
   28204:	add	r8, r4, sl
   28208:	add	ip, r0, lr
   2820c:	add	r8, r8, lr
   28210:	rev	lr, fp
   28214:	movw	r4, #4593	; 0x11f1
   28218:	movt	r4, #23025	; 0x59f1
   2821c:	orr	sl, r9, r8
   28220:	mov	fp, lr
   28224:	eor	lr, r7, r5
   28228:	str	fp, [sp, #56]	; 0x38
   2822c:	add	r4, fp, r4
   28230:	and	lr, lr, ip
   28234:	ror	fp, ip, #11
   28238:	ror	r0, r8, #13
   2823c:	eor	lr, lr, r7
   28240:	add	r6, r4, r6
   28244:	eor	fp, fp, ip, ror #6
   28248:	and	r4, r9, r8
   2824c:	and	sl, sl, r3
   28250:	eor	r0, r0, r8, ror #2
   28254:	eor	fp, fp, ip, ror #25
   28258:	eor	r0, r0, r8, ror #22
   2825c:	add	r6, lr, r6
   28260:	orr	sl, sl, r4
   28264:	add	r6, r6, fp
   28268:	add	r4, r0, sl
   2826c:	ldr	fp, [r1, #24]
   28270:	add	r4, r4, r6
   28274:	add	r2, r2, r6
   28278:	rev	lr, fp
   2827c:	eor	r0, r5, ip
   28280:	movw	r6, #33444	; 0x82a4
   28284:	movt	r6, #37439	; 0x923f
   28288:	str	lr, [sp, #68]	; 0x44
   2828c:	add	r6, lr, r6
   28290:	orr	sl, r8, r4
   28294:	and	r0, r0, r2
   28298:	ror	fp, r2, #11
   2829c:	ror	lr, r4, #13
   282a0:	eor	r0, r0, r5
   282a4:	add	r7, r6, r7
   282a8:	eor	fp, fp, r2, ror #6
   282ac:	and	r6, r8, r4
   282b0:	and	sl, sl, r9
   282b4:	eor	lr, lr, r4, ror #2
   282b8:	eor	fp, fp, r2, ror #25
   282bc:	eor	lr, lr, r4, ror #22
   282c0:	add	r7, r0, r7
   282c4:	orr	sl, sl, r6
   282c8:	add	r7, r7, fp
   282cc:	add	r6, lr, sl
   282d0:	ldr	fp, [r1, #28]
   282d4:	add	r0, r3, r7
   282d8:	add	r6, r6, r7
   282dc:	eor	r3, ip, r2
   282e0:	rev	r7, fp
   282e4:	movw	lr, #24277	; 0x5ed5
   282e8:	movt	lr, #43804	; 0xab1c
   282ec:	str	r7, [sp, #28]
   282f0:	add	lr, r7, lr
   282f4:	orr	sl, r4, r6
   282f8:	and	r3, r3, r0
   282fc:	ror	fp, r0, #11
   28300:	ror	r7, r6, #13
   28304:	eor	r3, r3, ip
   28308:	add	r5, lr, r5
   2830c:	eor	fp, fp, r0, ror #6
   28310:	and	lr, r4, r6
   28314:	and	sl, sl, r8
   28318:	eor	r7, r7, r6, ror #2
   2831c:	eor	fp, fp, r0, ror #25
   28320:	eor	r7, r7, r6, ror #22
   28324:	add	r5, r3, r5
   28328:	orr	sl, sl, lr
   2832c:	add	r5, r5, fp
   28330:	ldr	r3, [r1, #32]
   28334:	add	lr, r7, sl
   28338:	add	lr, lr, r5
   2833c:	add	r9, r9, r5
   28340:	movw	fp, #43672	; 0xaa98
   28344:	rev	r5, r3
   28348:	movt	fp, #55303	; 0xd807
   2834c:	eor	r3, r2, r0
   28350:	str	r5, [sp, #44]	; 0x2c
   28354:	add	fp, r5, fp
   28358:	orr	r7, r6, lr
   2835c:	and	r3, r3, r9
   28360:	ror	sl, r9, #11
   28364:	ror	r5, lr, #13
   28368:	eor	r3, r3, r2
   2836c:	add	ip, fp, ip
   28370:	eor	sl, sl, r9, ror #6
   28374:	and	fp, r6, lr
   28378:	and	r7, r7, r4
   2837c:	eor	r5, r5, lr, ror #2
   28380:	eor	sl, sl, r9, ror #25
   28384:	orr	r7, r7, fp
   28388:	add	ip, r3, ip
   2838c:	eor	r5, r5, lr, ror #22
   28390:	add	ip, ip, sl
   28394:	add	r5, r5, r7
   28398:	ldr	sl, [r1, #36]	; 0x24
   2839c:	add	r8, r8, ip
   283a0:	add	ip, r5, ip
   283a4:	eor	r3, r0, r9
   283a8:	rev	r5, sl
   283ac:	movw	fp, #23297	; 0x5b01
   283b0:	movt	fp, #4739	; 0x1283
   283b4:	str	r5, [sp, #32]
   283b8:	add	fp, r5, fp
   283bc:	orr	r7, lr, ip
   283c0:	and	r3, r3, r8
   283c4:	ror	sl, r8, #11
   283c8:	ror	r5, ip, #13
   283cc:	eor	r3, r3, r0
   283d0:	add	r2, fp, r2
   283d4:	eor	sl, sl, r8, ror #6
   283d8:	and	fp, lr, ip
   283dc:	and	r7, r7, r6
   283e0:	eor	r5, r5, ip, ror #2
   283e4:	eor	sl, sl, r8, ror #25
   283e8:	orr	r7, r7, fp
   283ec:	add	r2, r3, r2
   283f0:	eor	r5, r5, ip, ror #22
   283f4:	add	r2, r2, sl
   283f8:	add	r5, r5, r7
   283fc:	ldr	sl, [r1, #40]	; 0x28
   28400:	add	r4, r4, r2
   28404:	add	r2, r5, r2
   28408:	rev	r7, sl
   2840c:	eor	r5, r9, r8
   28410:	movw	r3, #34238	; 0x85be
   28414:	movt	r3, #9265	; 0x2431
   28418:	str	r7, [sp, #60]	; 0x3c
   2841c:	orr	sl, ip, r2
   28420:	add	r3, r7, r3
   28424:	and	r5, r5, r4
   28428:	ror	fp, r4, #11
   2842c:	ror	r7, r2, #13
   28430:	eor	r5, r5, r9
   28434:	add	r3, r3, r0
   28438:	eor	fp, fp, r4, ror #6
   2843c:	and	r0, ip, r2
   28440:	and	sl, sl, lr
   28444:	eor	r7, r7, r2, ror #2
   28448:	eor	fp, fp, r4, ror #25
   2844c:	eor	r7, r7, r2, ror #22
   28450:	add	r3, r5, r3
   28454:	orr	sl, sl, r0
   28458:	ldr	r5, [r1, #44]	; 0x2c
   2845c:	add	r3, r3, fp
   28460:	add	r0, r7, sl
   28464:	add	r6, r6, r3
   28468:	add	r0, r0, r3
   2846c:	rev	r3, r5
   28470:	movw	fp, #32195	; 0x7dc3
   28474:	movt	fp, #21772	; 0x550c
   28478:	mov	sl, r3
   2847c:	eor	r3, r8, r4
   28480:	str	sl, [sp, #36]	; 0x24
   28484:	add	fp, sl, fp
   28488:	and	r3, r3, r6
   2848c:	ror	sl, r6, #11
   28490:	orr	r7, r2, r0
   28494:	eor	r3, r3, r8
   28498:	ror	r5, r0, #13
   2849c:	add	r9, fp, r9
   284a0:	eor	sl, sl, r6, ror #6
   284a4:	and	fp, r2, r0
   284a8:	eor	sl, sl, r6, ror #25
   284ac:	and	r7, r7, ip
   284b0:	eor	r5, r5, r0, ror #2
   284b4:	add	r9, r3, r9
   284b8:	add	r9, r9, sl
   284bc:	ldr	r3, [r1, #48]	; 0x30
   284c0:	eor	r5, r5, r0, ror #22
   284c4:	orr	r7, r7, fp
   284c8:	add	lr, lr, r9
   284cc:	add	fp, r5, r7
   284d0:	add	fp, fp, r9
   284d4:	eor	r5, r4, r6
   284d8:	rev	r9, r3
   284dc:	movw	sl, #23924	; 0x5d74
   284e0:	movt	sl, #29374	; 0x72be
   284e4:	and	r5, r5, lr
   284e8:	add	sl, r9, sl
   284ec:	ror	r7, lr, #11
   284f0:	str	r9, [sp, #64]	; 0x40
   284f4:	eor	r5, r5, r4
   284f8:	orr	r9, r0, fp
   284fc:	ror	r3, fp, #13
   28500:	add	r8, sl, r8
   28504:	eor	r7, r7, lr, ror #6
   28508:	and	sl, r0, fp
   2850c:	eor	r7, r7, lr, ror #25
   28510:	and	r9, r9, r2
   28514:	eor	r3, r3, fp, ror #2
   28518:	add	r8, r5, r8
   2851c:	eor	r3, r3, fp, ror #22
   28520:	add	r8, r8, r7
   28524:	ldr	r5, [r1, #52]	; 0x34
   28528:	orr	r9, r9, sl
   2852c:	add	ip, ip, r8
   28530:	add	sl, r3, r9
   28534:	eor	r3, r6, lr
   28538:	add	sl, sl, r8
   2853c:	movw	r9, #45566	; 0xb1fe
   28540:	rev	r8, r5
   28544:	movt	r9, #32990	; 0x80de
   28548:	add	r9, r8, r9
   2854c:	and	r3, r3, ip
   28550:	ror	r7, ip, #11
   28554:	str	r8, [sp, #40]	; 0x28
   28558:	eor	r3, r3, r6
   2855c:	orr	r8, fp, sl
   28560:	add	r4, r9, r4
   28564:	ror	r5, sl, #13
   28568:	eor	r7, r7, ip, ror #6
   2856c:	add	r4, r3, r4
   28570:	and	r8, r8, r0
   28574:	and	r3, fp, sl
   28578:	eor	r5, r5, sl, ror #2
   2857c:	eor	r7, r7, ip, ror #25
   28580:	add	r7, r4, r7
   28584:	orr	r8, r8, r3
   28588:	ldr	r4, [r1, #56]	; 0x38
   2858c:	eor	r5, r5, sl, ror #22
   28590:	add	r2, r2, r7
   28594:	add	r5, r5, r8
   28598:	add	r9, r5, r7
   2859c:	rev	r4, r4
   285a0:	eor	r7, lr, ip
   285a4:	movw	r3, #1703	; 0x6a7
   285a8:	movt	r3, #39900	; 0x9bdc
   285ac:	and	r7, r7, r2
   285b0:	add	r3, r4, r3
   285b4:	ror	r8, r2, #11
   285b8:	add	r3, r3, r6
   285bc:	eor	r8, r8, r2, ror #6
   285c0:	eor	r6, r7, lr
   285c4:	orr	r5, sl, r9
   285c8:	eor	r8, r8, r2, ror #25
   285cc:	add	r6, r6, r3
   285d0:	ror	r3, r9, #13
   285d4:	add	r6, r6, r8
   285d8:	and	r5, r5, fp
   285dc:	ldr	r1, [r1, #60]	; 0x3c
   285e0:	and	r8, sl, r9
   285e4:	eor	r3, r3, r9, ror #2
   285e8:	eor	r3, r3, r9, ror #22
   285ec:	orr	r8, r5, r8
   285f0:	add	r0, r0, r6
   285f4:	rev	r5, r1
   285f8:	add	r8, r3, r8
   285fc:	movw	r1, #61812	; 0xf174
   28600:	eor	r3, ip, r2
   28604:	movt	r1, #49563	; 0xc19b
   28608:	add	r8, r8, r6
   2860c:	add	r1, r5, r1
   28610:	and	r3, r3, r0
   28614:	add	r1, r1, lr
   28618:	eor	r3, r3, ip
   2861c:	str	r4, [sp, #48]	; 0x30
   28620:	add	r3, r3, r1
   28624:	ldr	r4, [sp, #32]
   28628:	ldr	r1, [sp]
   2862c:	ror	r6, r0, #11
   28630:	ror	r7, r8, #13
   28634:	orr	lr, r9, r8
   28638:	eor	r6, r6, r0, ror #6
   2863c:	eor	r7, r7, r8, ror #2
   28640:	str	r5, [sp, #4]
   28644:	and	lr, lr, sl
   28648:	eor	r5, r6, r0, ror #25
   2864c:	add	r6, r1, r4
   28650:	eor	r1, r7, r8, ror #22
   28654:	and	r7, r9, r8
   28658:	orr	r7, lr, r7
   2865c:	ldr	lr, [sp, #48]	; 0x30
   28660:	str	r0, [sp, #12]
   28664:	add	r5, r3, r5
   28668:	ldr	r0, [sp, #8]
   2866c:	add	r7, r1, r7
   28670:	ror	r3, lr, #19
   28674:	add	fp, fp, r5
   28678:	eor	r3, r3, lr, ror #17
   2867c:	add	r7, r7, r5
   28680:	ror	r1, r0, #18
   28684:	eor	r3, r3, lr, lsr #10
   28688:	eor	r1, r1, r0, ror #7
   2868c:	add	r3, r3, r6
   28690:	eor	lr, r1, r0, lsr #3
   28694:	ldr	r6, [sp, #12]
   28698:	add	r3, r3, lr
   2869c:	str	r3, [sp]
   286a0:	ldr	lr, [sp]
   286a4:	eor	r3, r2, r6
   286a8:	movw	r1, #27073	; 0x69c1
   286ac:	movt	r1, #58523	; 0xe49b
   286b0:	add	r1, lr, r1
   286b4:	and	r3, r3, fp
   286b8:	ror	r5, fp, #11
   286bc:	ldr	lr, [sp, #4]
   286c0:	add	r1, r1, ip
   286c4:	eor	r3, r3, r2
   286c8:	eor	r5, r5, fp, ror #6
   286cc:	orr	ip, r8, r7
   286d0:	eor	r5, r5, fp, ror #25
   286d4:	add	r3, r3, r1
   286d8:	ror	r6, r7, #13
   286dc:	ldr	r1, [sp, #60]	; 0x3c
   286e0:	ldr	r4, [sp, #20]
   286e4:	add	r3, r3, r5
   286e8:	and	ip, ip, r9
   286ec:	and	r5, r8, r7
   286f0:	eor	r6, r6, r7, ror #2
   286f4:	orr	ip, ip, r5
   286f8:	eor	r6, r6, r7, ror #22
   286fc:	ror	r5, lr, #19
   28700:	add	r6, r6, ip
   28704:	eor	r5, r5, lr, ror #17
   28708:	ror	ip, r4, #18
   2870c:	add	r1, r0, r1
   28710:	eor	r5, r5, lr, lsr #10
   28714:	eor	ip, ip, r4, ror #7
   28718:	add	lr, r6, r3
   2871c:	ldr	r6, [sp, #12]
   28720:	add	sl, sl, r3
   28724:	add	r5, r5, r1
   28728:	eor	ip, ip, r4, lsr #3
   2872c:	eor	r3, r6, fp
   28730:	add	ip, r5, ip
   28734:	movw	r1, #18310	; 0x4786
   28738:	movt	r1, #61374	; 0xefbe
   2873c:	and	r3, r3, sl
   28740:	add	r1, ip, r1
   28744:	ror	r5, sl, #11
   28748:	add	r1, r1, r2
   2874c:	eor	r3, r3, r6
   28750:	eor	r5, r5, sl, ror #6
   28754:	orr	r2, r7, lr
   28758:	eor	r5, r5, sl, ror #25
   2875c:	add	r3, r3, r1
   28760:	ror	r1, lr, #13
   28764:	add	r3, r3, r5
   28768:	and	r2, r2, r8
   2876c:	and	r5, r7, lr
   28770:	eor	r1, r1, lr, ror #2
   28774:	ldr	r6, [sp, #24]
   28778:	ldr	r0, [sp, #36]	; 0x24
   2877c:	eor	r1, r1, lr, ror #22
   28780:	orr	r5, r2, r5
   28784:	str	ip, [sp, #52]	; 0x34
   28788:	add	r5, r1, r5
   2878c:	ldr	r1, [sp]
   28790:	add	ip, r4, r0
   28794:	ldr	r0, [sp]
   28798:	ror	r2, r6, #18
   2879c:	add	r9, r9, r3
   287a0:	eor	r2, r2, r6, ror #7
   287a4:	ror	r1, r1, #19
   287a8:	eor	r2, r2, r6, lsr #3
   287ac:	eor	r1, r1, r0, ror #17
   287b0:	add	r2, r2, ip
   287b4:	eor	r1, r1, r0, lsr #10
   287b8:	add	r5, r5, r3
   287bc:	add	r1, r2, r1
   287c0:	ldr	r0, [sp, #12]
   287c4:	eor	r3, fp, sl
   287c8:	movw	r2, #40390	; 0x9dc6
   287cc:	movt	r2, #4033	; 0xfc1
   287d0:	str	r1, [sp, #8]
   287d4:	add	r2, r1, r2
   287d8:	and	r3, r3, r9
   287dc:	ror	r1, r9, #11
   287e0:	add	r0, r2, r0
   287e4:	eor	r1, r1, r9, ror #6
   287e8:	eor	r3, r3, fp
   287ec:	ldr	r4, [sp, #16]
   287f0:	add	r3, r3, r0
   287f4:	eor	r0, r1, r9, ror #25
   287f8:	ldr	r1, [sp, #64]	; 0x40
   287fc:	orr	ip, lr, r5
   28800:	ror	r2, r5, #13
   28804:	add	r3, r3, r0
   28808:	add	r1, r6, r1
   2880c:	ldr	r6, [sp, #52]	; 0x34
   28810:	and	r0, lr, r5
   28814:	and	ip, ip, r7
   28818:	eor	r2, r2, r5, ror #2
   2881c:	orr	ip, ip, r0
   28820:	eor	r2, r2, r5, ror #22
   28824:	ror	r0, r4, #18
   28828:	eor	r0, r0, r4, ror #7
   2882c:	add	r2, r2, ip
   28830:	ror	ip, r6, #19
   28834:	eor	r0, r0, r4, lsr #3
   28838:	eor	ip, ip, r6, ror #17
   2883c:	add	r0, r0, r1
   28840:	eor	r1, ip, r6, lsr #10
   28844:	add	r8, r8, r3
   28848:	add	r1, r0, r1
   2884c:	movw	ip, #41420	; 0xa1cc
   28850:	movt	ip, #9228	; 0x240c
   28854:	add	r2, r2, r3
   28858:	mov	r0, r1
   2885c:	eor	r1, sl, r9
   28860:	add	ip, r0, ip
   28864:	and	r1, r1, r8
   28868:	add	fp, ip, fp
   2886c:	eor	r1, r1, sl
   28870:	ldr	r4, [sp, #16]
   28874:	ror	r3, r8, #11
   28878:	add	r1, r1, fp
   2887c:	ldr	fp, [sp, #40]	; 0x28
   28880:	ldr	r6, [sp, #56]	; 0x38
   28884:	eor	r3, r3, r8, ror #6
   28888:	str	r0, [sp, #12]
   2888c:	eor	r3, r3, r8, ror #25
   28890:	orr	r0, r5, r2
   28894:	add	fp, r4, fp
   28898:	ror	ip, r2, #13
   2889c:	ldr	r4, [sp, #8]
   288a0:	add	r1, r1, r3
   288a4:	and	r0, r0, lr
   288a8:	and	r3, r5, r2
   288ac:	eor	ip, ip, r2, ror #2
   288b0:	eor	ip, ip, r2, ror #22
   288b4:	orr	r3, r0, r3
   288b8:	ror	r0, r6, #18
   288bc:	add	r3, ip, r3
   288c0:	eor	r0, r0, r6, ror #7
   288c4:	ror	ip, r4, #19
   288c8:	eor	r0, r0, r6, lsr #3
   288cc:	eor	ip, ip, r4, ror #17
   288d0:	add	r0, r0, fp
   288d4:	eor	ip, ip, r4, lsr #10
   288d8:	add	ip, r0, ip
   288dc:	add	r7, r7, r1
   288e0:	add	r3, r3, r1
   288e4:	eor	r1, r9, r8
   288e8:	mov	fp, ip
   288ec:	movw	ip, #11375	; 0x2c6f
   288f0:	movt	ip, #11753	; 0x2de9
   288f4:	str	fp, [sp, #16]
   288f8:	ldr	r4, [sp, #48]	; 0x30
   288fc:	add	ip, fp, ip
   28900:	and	r1, r1, r7
   28904:	ror	fp, r7, #11
   28908:	add	sl, ip, sl
   2890c:	eor	fp, fp, r7, ror #6
   28910:	eor	r1, r1, r9
   28914:	orr	r0, r2, r3
   28918:	add	r1, r1, sl
   2891c:	eor	sl, fp, r7, ror #25
   28920:	add	fp, r6, r4
   28924:	ldr	r6, [sp, #68]	; 0x44
   28928:	ldr	r4, [sp, #12]
   2892c:	ror	ip, r3, #13
   28930:	add	r1, r1, sl
   28934:	and	r0, r0, r5
   28938:	and	sl, r2, r3
   2893c:	eor	ip, ip, r3, ror #2
   28940:	orr	sl, r0, sl
   28944:	eor	ip, ip, r3, ror #22
   28948:	ror	r0, r6, #18
   2894c:	add	ip, ip, sl
   28950:	eor	r0, r0, r6, ror #7
   28954:	ror	sl, r4, #19
   28958:	eor	sl, sl, r4, ror #17
   2895c:	eor	r0, r0, r6, lsr #3
   28960:	add	lr, lr, r1
   28964:	add	r0, r0, fp
   28968:	eor	fp, sl, r4, lsr #10
   2896c:	add	ip, ip, r1
   28970:	add	r0, r0, fp
   28974:	eor	r1, r8, r7
   28978:	ldr	fp, [sp, #4]
   2897c:	movw	sl, #33962	; 0x84aa
   28980:	movt	sl, #19060	; 0x4a74
   28984:	str	r0, [sp, #20]
   28988:	add	sl, r0, sl
   2898c:	and	r1, r1, lr
   28990:	ror	r0, lr, #11
   28994:	add	sl, sl, r9
   28998:	add	fp, r6, fp
   2899c:	eor	r1, r1, r8
   289a0:	ldr	r6, [sp, #28]
   289a4:	eor	r0, r0, lr, ror #6
   289a8:	ldr	r4, [sp, #16]
   289ac:	orr	r9, r3, ip
   289b0:	eor	r0, r0, lr, ror #25
   289b4:	add	r1, r1, sl
   289b8:	ror	sl, ip, #13
   289bc:	add	r1, r1, r0
   289c0:	and	r9, r9, r2
   289c4:	and	r0, r3, ip
   289c8:	eor	sl, sl, ip, ror #2
   289cc:	orr	r0, r9, r0
   289d0:	eor	sl, sl, ip, ror #22
   289d4:	ror	r9, r6, #18
   289d8:	eor	r9, r9, r6, ror #7
   289dc:	add	r0, sl, r0
   289e0:	ror	sl, r4, #19
   289e4:	eor	r9, r9, r6, lsr #3
   289e8:	eor	sl, sl, r4, ror #17
   289ec:	add	r5, r5, r1
   289f0:	eor	sl, sl, r4, lsr #10
   289f4:	add	r9, r9, fp
   289f8:	add	r0, r0, r1
   289fc:	ldr	r6, [sp, #44]	; 0x2c
   28a00:	add	r9, r9, sl
   28a04:	eor	r1, r7, lr
   28a08:	movw	sl, #43484	; 0xa9dc
   28a0c:	movt	sl, #23728	; 0x5cb0
   28a10:	and	r1, r1, r5
   28a14:	add	sl, r9, sl
   28a18:	ror	fp, r5, #11
   28a1c:	add	sl, sl, r8
   28a20:	eor	fp, fp, r5, ror #6
   28a24:	eor	r8, r1, r7
   28a28:	ldr	r4, [sp, #20]
   28a2c:	eor	fp, fp, r5, ror #25
   28a30:	str	r9, [sp, #24]
   28a34:	add	r8, r8, sl
   28a38:	orr	r9, ip, r0
   28a3c:	ror	r1, r0, #13
   28a40:	ror	sl, r6, #18
   28a44:	add	r8, r8, fp
   28a48:	and	r9, r9, r3
   28a4c:	and	fp, ip, r0
   28a50:	eor	r1, r1, r0, ror #2
   28a54:	eor	sl, sl, r6, ror #7
   28a58:	orr	r9, r9, fp
   28a5c:	eor	r1, r1, r0, ror #22
   28a60:	eor	sl, sl, r6, lsr #3
   28a64:	ldr	r6, [sp, #28]
   28a68:	ror	fp, r4, #19
   28a6c:	add	r1, r1, r9
   28a70:	add	r9, r2, r8
   28a74:	ldr	r2, [sp]
   28a78:	add	sl, sl, r6
   28a7c:	eor	fp, fp, r4, ror #17
   28a80:	eor	fp, fp, r4, lsr #10
   28a84:	add	sl, sl, r2
   28a88:	add	r1, r1, r8
   28a8c:	ldr	r4, [sp, #32]
   28a90:	add	r2, sl, fp
   28a94:	movw	r8, #35034	; 0x88da
   28a98:	eor	fp, lr, r5
   28a9c:	movt	r8, #30457	; 0x76f9
   28aa0:	add	r8, r2, r8
   28aa4:	and	fp, fp, r9
   28aa8:	add	sl, r8, r7
   28aac:	eor	r7, fp, lr
   28ab0:	add	r7, r7, sl
   28ab4:	ror	sl, r4, #18
   28ab8:	str	r2, [sp, #28]
   28abc:	eor	sl, sl, r4, ror #7
   28ac0:	ror	r2, r9, #11
   28ac4:	ldr	r6, [sp, #44]	; 0x2c
   28ac8:	eor	r2, r2, r9, ror #6
   28acc:	eor	sl, sl, r4, lsr #3
   28ad0:	ldr	r4, [sp, #24]
   28ad4:	orr	r8, r0, r1
   28ad8:	eor	r2, r2, r9, ror #25
   28adc:	ror	fp, r1, #13
   28ae0:	add	r7, r7, r2
   28ae4:	and	r8, r8, ip
   28ae8:	and	r2, r0, r1
   28aec:	eor	fp, fp, r1, ror #2
   28af0:	eor	fp, fp, r1, ror #22
   28af4:	orr	r2, r8, r2
   28af8:	ror	r8, r4, #19
   28afc:	add	r2, fp, r2
   28b00:	eor	fp, r8, r4, ror #17
   28b04:	add	sl, sl, r6
   28b08:	eor	fp, fp, r4, lsr #10
   28b0c:	ldr	r4, [sp, #52]	; 0x34
   28b10:	add	r8, r3, r7
   28b14:	add	r2, r2, r7
   28b18:	add	sl, sl, r4
   28b1c:	eor	r3, r5, r9
   28b20:	ldr	r4, [sp, #60]	; 0x3c
   28b24:	add	r7, sl, fp
   28b28:	movw	sl, #20818	; 0x5152
   28b2c:	movt	sl, #38974	; 0x983e
   28b30:	and	r3, r3, r8
   28b34:	add	sl, r7, sl
   28b38:	add	sl, sl, lr
   28b3c:	eor	r6, r3, r5
   28b40:	ror	fp, r8, #11
   28b44:	add	r6, r6, sl
   28b48:	eor	fp, fp, r8, ror #6
   28b4c:	ror	sl, r4, #18
   28b50:	str	r7, [sp, #56]	; 0x38
   28b54:	eor	fp, fp, r8, ror #25
   28b58:	orr	r7, r1, r2
   28b5c:	eor	sl, sl, r4, ror #7
   28b60:	add	r6, r6, fp
   28b64:	mov	lr, r4
   28b68:	and	fp, r1, r2
   28b6c:	and	r7, r7, r0
   28b70:	ror	r3, r2, #13
   28b74:	eor	sl, sl, r4, lsr #3
   28b78:	ldr	r4, [sp, #28]
   28b7c:	orr	r7, r7, fp
   28b80:	eor	r3, r3, r2, ror #2
   28b84:	ldr	fp, [sp, #32]
   28b88:	eor	r3, r3, r2, ror #22
   28b8c:	add	sl, sl, fp
   28b90:	add	r3, r3, r7
   28b94:	ror	fp, r4, #19
   28b98:	add	r7, ip, r6
   28b9c:	ldr	ip, [sp, #8]
   28ba0:	eor	fp, fp, r4, ror #17
   28ba4:	eor	fp, fp, r4, lsr #10
   28ba8:	add	r3, r3, r6
   28bac:	add	sl, sl, ip
   28bb0:	ldr	r4, [sp, #36]	; 0x24
   28bb4:	add	ip, sl, fp
   28bb8:	movw	r6, #50797	; 0xc66d
   28bbc:	eor	fp, r9, r8
   28bc0:	movt	r6, #43057	; 0xa831
   28bc4:	and	fp, fp, r7
   28bc8:	add	r6, ip, r6
   28bcc:	add	r6, r6, r5
   28bd0:	eor	r5, fp, r9
   28bd4:	str	ip, [sp, #32]
   28bd8:	add	r5, r5, r6
   28bdc:	ror	ip, r7, #11
   28be0:	ror	r6, r4, #18
   28be4:	eor	ip, ip, r7, ror #6
   28be8:	eor	r6, r6, r4, ror #7
   28bec:	orr	sl, r2, r3
   28bf0:	eor	ip, ip, r7, ror #25
   28bf4:	ror	fp, r3, #13
   28bf8:	eor	r6, r6, r4, lsr #3
   28bfc:	ldr	r4, [sp, #56]	; 0x38
   28c00:	add	r5, r5, ip
   28c04:	and	sl, sl, r1
   28c08:	and	ip, r2, r3
   28c0c:	eor	fp, fp, r3, ror #2
   28c10:	orr	ip, sl, ip
   28c14:	eor	fp, fp, r3, ror #22
   28c18:	ror	sl, r4, #19
   28c1c:	add	ip, fp, ip
   28c20:	eor	fp, sl, r4, ror #17
   28c24:	add	ip, ip, r5
   28c28:	add	sl, r0, r5
   28c2c:	ldr	r5, [sp, #12]
   28c30:	add	r6, r6, lr
   28c34:	eor	fp, fp, r4, lsr #10
   28c38:	eor	r0, r8, r7
   28c3c:	add	r6, r6, r5
   28c40:	movw	r5, #10184	; 0x27c8
   28c44:	add	r6, r6, fp
   28c48:	movt	r5, #45059	; 0xb003
   28c4c:	and	r0, r0, sl
   28c50:	add	r5, r6, r5
   28c54:	add	r5, r5, r9
   28c58:	eor	r9, r0, r8
   28c5c:	ror	r0, ip, #13
   28c60:	mov	r4, r6
   28c64:	mov	lr, ip
   28c68:	orr	r6, r3, ip
   28c6c:	eor	r0, r0, ip, ror #2
   28c70:	ldr	ip, [sp, #64]	; 0x40
   28c74:	add	r9, r9, r5
   28c78:	str	lr, [sp, #44]	; 0x2c
   28c7c:	ror	fp, sl, #11
   28c80:	eor	r0, r0, lr, ror #22
   28c84:	ror	r5, ip, #18
   28c88:	mov	lr, ip
   28c8c:	eor	r5, r5, ip, ror #7
   28c90:	eor	fp, fp, sl, ror #6
   28c94:	eor	r5, r5, ip, lsr #3
   28c98:	ldr	ip, [sp, #44]	; 0x2c
   28c9c:	eor	fp, fp, sl, ror #25
   28ca0:	and	r6, r6, r2
   28ca4:	add	r9, r9, fp
   28ca8:	and	fp, r3, ip
   28cac:	ldr	ip, [sp, #32]
   28cb0:	orr	r6, r6, fp
   28cb4:	ldr	fp, [sp, #36]	; 0x24
   28cb8:	add	r0, r0, r6
   28cbc:	add	r6, r1, r9
   28cc0:	ldr	r1, [sp, #16]
   28cc4:	add	r5, r5, fp
   28cc8:	ror	fp, ip, #19
   28ccc:	eor	fp, fp, ip, ror #17
   28cd0:	add	r5, r5, r1
   28cd4:	eor	fp, fp, ip, lsr #10
   28cd8:	add	r0, r0, r9
   28cdc:	add	r1, r5, fp
   28ce0:	movw	r9, #32711	; 0x7fc7
   28ce4:	eor	fp, r7, sl
   28ce8:	movt	r9, #48985	; 0xbf59
   28cec:	str	r1, [sp, #36]	; 0x24
   28cf0:	add	r9, r1, r9
   28cf4:	and	fp, fp, r6
   28cf8:	ror	r1, r6, #11
   28cfc:	add	r5, r9, r8
   28d00:	ldr	ip, [sp, #44]	; 0x2c
   28d04:	eor	r8, fp, r7
   28d08:	eor	r1, r1, r6, ror #6
   28d0c:	eor	r1, r1, r6, ror #25
   28d10:	add	r8, r8, r5
   28d14:	add	r8, r8, r1
   28d18:	orr	r9, ip, r0
   28d1c:	ldr	r1, [sp, #44]	; 0x2c
   28d20:	ror	fp, r0, #13
   28d24:	ldr	ip, [sp, #40]	; 0x28
   28d28:	and	r9, r9, r3
   28d2c:	eor	fp, fp, r0, ror #2
   28d30:	and	r1, r1, r0
   28d34:	eor	fp, fp, r0, ror #22
   28d38:	orr	r1, r9, r1
   28d3c:	ror	r5, ip, #18
   28d40:	ror	r9, r4, #19
   28d44:	eor	r5, r5, ip, ror #7
   28d48:	add	r1, fp, r1
   28d4c:	add	r1, r1, r8
   28d50:	eor	fp, r9, r4, ror #17
   28d54:	eor	r5, r5, ip, lsr #3
   28d58:	add	r9, r2, r8
   28d5c:	ldr	r8, [sp, #20]
   28d60:	add	r5, r5, lr
   28d64:	eor	fp, fp, r4, lsr #10
   28d68:	str	r4, [sp, #60]	; 0x3c
   28d6c:	add	r5, r5, r8
   28d70:	ldr	lr, [sp, #48]	; 0x30
   28d74:	add	r2, r5, fp
   28d78:	movw	r5, #3059	; 0xbf3
   28d7c:	movt	r5, #50912	; 0xc6e0
   28d80:	ror	fp, r9, #11
   28d84:	mov	r4, r2
   28d88:	eor	r2, sl, r6
   28d8c:	and	r2, r2, r9
   28d90:	add	r5, r4, r5
   28d94:	add	r5, r5, r7
   28d98:	eor	fp, fp, r9, ror #6
   28d9c:	eor	r7, r2, sl
   28da0:	ldr	r2, [sp, #44]	; 0x2c
   28da4:	orr	r8, r0, r1
   28da8:	eor	fp, fp, r9, ror #25
   28dac:	add	r7, r7, r5
   28db0:	ldr	ip, [sp, #36]	; 0x24
   28db4:	add	r7, r7, fp
   28db8:	and	r8, r8, r2
   28dbc:	and	fp, r0, r1
   28dc0:	ror	r5, lr, #18
   28dc4:	orr	r8, r8, fp
   28dc8:	eor	r5, r5, lr, ror #7
   28dcc:	ldr	fp, [sp, #40]	; 0x28
   28dd0:	eor	r5, r5, lr, lsr #3
   28dd4:	ror	r2, r1, #13
   28dd8:	add	r5, r5, fp
   28ddc:	ror	fp, ip, #19
   28de0:	eor	fp, fp, ip, ror #17
   28de4:	eor	r2, r2, r1, ror #2
   28de8:	eor	fp, fp, ip, lsr #10
   28dec:	ldr	ip, [sp, #24]
   28df0:	eor	r2, r2, r1, ror #22
   28df4:	add	r5, r5, ip
   28df8:	add	r2, r2, r8
   28dfc:	add	r5, r5, fp
   28e00:	add	r8, r3, r7
   28e04:	add	r2, r2, r7
   28e08:	movw	r3, #37191	; 0x9147
   28e0c:	mov	r7, r5
   28e10:	movt	r3, #54695	; 0xd5a7
   28e14:	eor	r5, r6, r9
   28e18:	add	r3, r7, r3
   28e1c:	and	r5, r5, r8
   28e20:	ror	fp, r8, #11
   28e24:	add	sl, r3, sl
   28e28:	eor	r5, r5, r6
   28e2c:	eor	fp, fp, r8, ror #6
   28e30:	ldr	ip, [sp, #4]
   28e34:	orr	r3, r1, r2
   28e38:	add	r5, r5, sl
   28e3c:	eor	fp, fp, r8, ror #25
   28e40:	ror	sl, r2, #13
   28e44:	add	fp, r5, fp
   28e48:	and	r3, r3, r0
   28e4c:	and	r5, r1, r2
   28e50:	eor	sl, sl, r2, ror #2
   28e54:	orr	r3, r3, r5
   28e58:	eor	sl, sl, r2, ror #22
   28e5c:	mov	r5, r4
   28e60:	str	r7, [sp, #40]	; 0x28
   28e64:	add	sl, sl, r3
   28e68:	ror	r7, ip, #18
   28e6c:	ldr	r3, [sp, #44]	; 0x2c
   28e70:	ror	r4, r4, #19
   28e74:	eor	r4, r4, r5, ror #17
   28e78:	eor	r7, r7, ip, ror #7
   28e7c:	str	r5, [sp, #64]	; 0x40
   28e80:	eor	r7, r7, ip, lsr #3
   28e84:	add	ip, r3, fp
   28e88:	eor	r3, r4, r5, lsr #10
   28e8c:	ldr	r4, [sp, #28]
   28e90:	add	r7, r7, lr
   28e94:	add	fp, sl, fp
   28e98:	ldr	lr, [sp]
   28e9c:	add	r7, r7, r4
   28ea0:	movw	r4, #25425	; 0x6351
   28ea4:	add	r5, r7, r3
   28ea8:	movt	r4, #1738	; 0x6ca
   28eac:	eor	r3, r9, r8
   28eb0:	str	r5, [sp, #44]	; 0x2c
   28eb4:	add	r4, r5, r4
   28eb8:	and	r3, r3, ip
   28ebc:	ror	r5, ip, #11
   28ec0:	add	r6, r4, r6
   28ec4:	eor	r3, r3, r9
   28ec8:	eor	r5, r5, ip, ror #6
   28ecc:	orr	r7, r2, fp
   28ed0:	eor	r5, r5, ip, ror #25
   28ed4:	add	r3, r3, r6
   28ed8:	ror	r6, fp, #13
   28edc:	ldr	sl, [sp, #40]	; 0x28
   28ee0:	add	r3, r3, r5
   28ee4:	and	r7, r7, r1
   28ee8:	and	r5, r2, fp
   28eec:	eor	r6, r6, fp, ror #2
   28ef0:	ror	r4, lr, #18
   28ef4:	orr	r7, r7, r5
   28ef8:	eor	r4, r4, lr, ror #7
   28efc:	ldr	r5, [sp, #4]
   28f00:	eor	r6, r6, fp, ror #22
   28f04:	eor	r4, r4, lr, lsr #3
   28f08:	add	r6, r6, r7
   28f0c:	add	r6, r6, r3
   28f10:	add	r0, r0, r3
   28f14:	add	r4, r4, r5
   28f18:	ldr	r3, [sp, #56]	; 0x38
   28f1c:	ror	r5, sl, #19
   28f20:	movw	r7, #10599	; 0x2967
   28f24:	eor	r5, r5, sl, ror #17
   28f28:	add	r4, r4, r3
   28f2c:	eor	r5, r5, sl, lsr #10
   28f30:	eor	r3, r8, ip
   28f34:	add	r5, r4, r5
   28f38:	movt	r7, #5161	; 0x1429
   28f3c:	str	r5, [sp, #72]	; 0x48
   28f40:	add	r7, r5, r7
   28f44:	and	r3, r3, r0
   28f48:	ror	r5, r0, #11
   28f4c:	ldr	sl, [sp, #52]	; 0x34
   28f50:	eor	r3, r3, r8
   28f54:	add	r9, r7, r9
   28f58:	eor	r5, r5, r0, ror #6
   28f5c:	orr	r4, fp, r6
   28f60:	add	r9, r3, r9
   28f64:	eor	r5, r5, r0, ror #25
   28f68:	and	r4, r4, r2
   28f6c:	add	r5, r9, r5
   28f70:	ror	r7, r6, #13
   28f74:	and	r9, fp, r6
   28f78:	ror	r3, sl, #18
   28f7c:	orr	r4, r4, r9
   28f80:	eor	r7, r7, r6, ror #2
   28f84:	ldr	r9, [sp, #44]	; 0x2c
   28f88:	eor	r3, r3, sl, ror #7
   28f8c:	eor	r7, r7, r6, ror #22
   28f90:	eor	r3, r3, sl, lsr #3
   28f94:	add	r7, r7, r4
   28f98:	add	r1, r1, r5
   28f9c:	add	r3, r3, lr
   28fa0:	add	r5, r7, r5
   28fa4:	ror	lr, r9, #19
   28fa8:	ldr	r7, [sp, #32]
   28fac:	eor	lr, lr, r9, ror #17
   28fb0:	str	r9, [sp, #68]	; 0x44
   28fb4:	eor	r4, lr, r9, lsr #10
   28fb8:	add	r3, r3, r7
   28fbc:	add	lr, r3, r4
   28fc0:	movw	r3, #2693	; 0xa85
   28fc4:	movt	r3, #10167	; 0x27b7
   28fc8:	str	lr, [sp]
   28fcc:	add	r3, lr, r3
   28fd0:	ror	lr, r1, #11
   28fd4:	eor	r4, ip, r0
   28fd8:	add	r3, r3, r8
   28fdc:	eor	r8, lr, r1, ror #6
   28fe0:	ldr	lr, [sp, #8]
   28fe4:	and	r4, r4, r1
   28fe8:	orr	r9, r6, r5
   28fec:	eor	r4, r4, ip
   28ff0:	and	r9, r9, fp
   28ff4:	add	r3, r4, r3
   28ff8:	ror	r4, lr, #18
   28ffc:	eor	r4, r4, lr, ror #7
   29000:	ror	r7, r5, #13
   29004:	eor	r4, r4, lr, lsr #3
   29008:	and	lr, r6, r5
   2900c:	eor	r7, r7, r5, ror #2
   29010:	orr	lr, r9, lr
   29014:	ldr	r9, [sp, #72]	; 0x48
   29018:	eor	r8, r8, r1, ror #25
   2901c:	eor	r7, r7, r5, ror #22
   29020:	add	r3, r3, r8
   29024:	add	lr, r7, lr
   29028:	add	r2, r2, r3
   2902c:	add	lr, lr, r3
   29030:	add	r4, r4, sl
   29034:	ldr	r3, [sp, #60]	; 0x3c
   29038:	ror	sl, r9, #19
   2903c:	eor	sl, sl, r9, ror #17
   29040:	movw	r8, #8504	; 0x2138
   29044:	add	r4, r4, r3
   29048:	eor	sl, sl, r9, lsr #10
   2904c:	add	sl, r4, sl
   29050:	ldr	r9, [sp, #12]
   29054:	eor	r3, r0, r1
   29058:	movt	r8, #11803	; 0x2e1b
   2905c:	add	r8, sl, r8
   29060:	and	r3, r3, r2
   29064:	ror	r7, r2, #11
   29068:	eor	r3, r3, r0
   2906c:	add	ip, r8, ip
   29070:	eor	r7, r7, r2, ror #6
   29074:	add	ip, r3, ip
   29078:	eor	r7, r7, r2, ror #25
   2907c:	ror	r3, r9, #18
   29080:	add	r7, ip, r7
   29084:	eor	r3, r3, r9, ror #7
   29088:	ldr	ip, [sp, #8]
   2908c:	eor	r3, r3, r9, lsr #3
   29090:	str	sl, [sp, #4]
   29094:	add	r3, r3, ip
   29098:	ldr	ip, [sp]
   2909c:	orr	r4, r5, lr
   290a0:	and	r9, r5, lr
   290a4:	and	r4, r4, r6
   290a8:	ror	r8, lr, #13
   290ac:	ror	sl, ip, #19
   290b0:	add	fp, fp, r7
   290b4:	eor	sl, sl, ip, ror #17
   290b8:	orr	r4, r4, r9
   290bc:	eor	sl, sl, ip, lsr #10
   290c0:	ldr	ip, [sp, #36]	; 0x24
   290c4:	ldr	r9, [sp, #16]
   290c8:	eor	r8, r8, lr, ror #2
   290cc:	add	r3, r3, ip
   290d0:	eor	ip, r1, r2
   290d4:	add	sl, r3, sl
   290d8:	movw	r3, #28156	; 0x6dfc
   290dc:	movt	r3, #19756	; 0x4d2c
   290e0:	eor	r8, r8, lr, ror #22
   290e4:	add	r3, sl, r3
   290e8:	and	ip, ip, fp
   290ec:	add	r8, r8, r4
   290f0:	eor	ip, ip, r1
   290f4:	add	r0, r3, r0
   290f8:	add	r7, r8, r7
   290fc:	add	r0, ip, r0
   29100:	ror	ip, r9, #18
   29104:	orr	r4, lr, r7
   29108:	eor	ip, ip, r9, ror #7
   2910c:	and	r4, r4, r5
   29110:	eor	ip, ip, r9, lsr #3
   29114:	and	r9, lr, r7
   29118:	ror	r8, fp, #11
   2911c:	orr	r9, r4, r9
   29120:	ldr	r4, [sp, #12]
   29124:	ror	r3, r7, #13
   29128:	eor	r8, r8, fp, ror #6
   2912c:	eor	r3, r3, r7, ror #2
   29130:	add	ip, ip, r4
   29134:	ldr	r4, [sp, #4]
   29138:	eor	r8, r8, fp, ror #25
   2913c:	eor	r3, r3, r7, ror #22
   29140:	add	r0, r0, r8
   29144:	add	r9, r3, r9
   29148:	add	r6, r6, r0
   2914c:	add	r9, r9, r0
   29150:	str	sl, [sp, #44]	; 0x2c
   29154:	ldr	r0, [sp, #64]	; 0x40
   29158:	ror	sl, r4, #19
   2915c:	eor	sl, sl, r4, ror #17
   29160:	ldr	r8, [sp, #20]
   29164:	eor	sl, sl, r4, lsr #10
   29168:	add	ip, ip, r0
   2916c:	add	r0, ip, sl
   29170:	movw	r4, #3347	; 0xd13
   29174:	movt	r4, #21304	; 0x5338
   29178:	orr	sl, r7, r9
   2917c:	mov	r3, r0
   29180:	eor	r0, r2, fp
   29184:	str	r3, [sp, #48]	; 0x30
   29188:	add	r4, r3, r4
   2918c:	and	r0, r0, r6
   29190:	ror	r3, r6, #11
   29194:	eor	r0, r0, r2
   29198:	add	r1, r4, r1
   2919c:	eor	r3, r3, r6, ror #6
   291a0:	add	r1, r0, r1
   291a4:	eor	r3, r3, r6, ror #25
   291a8:	and	sl, sl, lr
   291ac:	add	r3, r1, r3
   291b0:	and	r1, r7, r9
   291b4:	orr	r1, sl, r1
   291b8:	ror	ip, r8, #18
   291bc:	ldr	sl, [sp, #44]	; 0x2c
   291c0:	eor	ip, ip, r8, ror #7
   291c4:	ldr	r0, [sp, #16]
   291c8:	eor	ip, ip, r8, lsr #3
   291cc:	ror	r4, r9, #13
   291d0:	add	r5, r5, r3
   291d4:	add	ip, ip, r0
   291d8:	ror	r0, sl, #19
   291dc:	eor	r0, r0, sl, ror #17
   291e0:	eor	r4, r4, r9, ror #2
   291e4:	eor	r0, r0, sl, lsr #10
   291e8:	ldr	sl, [sp, #40]	; 0x28
   291ec:	eor	r4, r4, r9, ror #22
   291f0:	ror	r8, r5, #11
   291f4:	add	ip, ip, sl
   291f8:	add	r4, r4, r1
   291fc:	add	r0, ip, r0
   29200:	add	r1, r4, r3
   29204:	ldr	ip, [sp, #24]
   29208:	movw	r3, #29524	; 0x7354
   2920c:	mov	sl, r0
   29210:	movt	r3, #25866	; 0x650a
   29214:	eor	r0, fp, r6
   29218:	add	r3, sl, r3
   2921c:	and	r0, r0, r5
   29220:	add	r2, r3, r2
   29224:	eor	r0, r0, fp
   29228:	orr	r4, r9, r1
   2922c:	add	r2, r0, r2
   29230:	ror	r0, ip, #18
   29234:	eor	r8, r8, r5, ror #6
   29238:	eor	r0, r0, ip, ror #7
   2923c:	and	r4, r4, r7
   29240:	eor	r8, r8, r5, ror #25
   29244:	ror	r3, r1, #13
   29248:	eor	r0, r0, ip, lsr #3
   2924c:	and	ip, r9, r1
   29250:	add	r2, r2, r8
   29254:	str	sl, [sp, #52]	; 0x34
   29258:	eor	r3, r3, r1, ror #2
   2925c:	ldr	r8, [sp, #20]
   29260:	orr	ip, r4, ip
   29264:	ldr	r4, [sp, #48]	; 0x30
   29268:	eor	r3, r3, r1, ror #22
   2926c:	add	ip, r3, ip
   29270:	add	lr, lr, r2
   29274:	add	ip, ip, r2
   29278:	ldr	r2, [sp, #68]	; 0x44
   2927c:	ror	sl, r4, #19
   29280:	add	r0, r0, r8
   29284:	eor	sl, sl, r4, ror #17
   29288:	add	r0, r0, r2
   2928c:	eor	sl, sl, r4, lsr #10
   29290:	movw	r4, #2747	; 0xabb
   29294:	add	r0, r0, sl
   29298:	movt	r4, #30314	; 0x766a
   2929c:	add	r4, r0, r4
   292a0:	eor	r2, r6, r5
   292a4:	add	fp, r4, fp
   292a8:	ldr	r4, [sp, #28]
   292ac:	and	r2, r2, lr
   292b0:	ror	r3, lr, #11
   292b4:	eor	r2, r2, r6
   292b8:	eor	r3, r3, lr, ror #6
   292bc:	add	fp, r2, fp
   292c0:	ror	sl, r4, #18
   292c4:	eor	r3, r3, lr, ror #25
   292c8:	str	r0, [sp, #20]
   292cc:	add	r3, fp, r3
   292d0:	orr	r0, r1, ip
   292d4:	ldr	fp, [sp, #52]	; 0x34
   292d8:	ror	r2, ip, #13
   292dc:	eor	sl, sl, r4, ror #7
   292e0:	ldr	r8, [sp, #24]
   292e4:	and	r0, r0, r9
   292e8:	eor	r2, r2, ip, ror #2
   292ec:	eor	sl, sl, r4, lsr #3
   292f0:	and	r4, r1, ip
   292f4:	orr	r0, r0, r4
   292f8:	eor	r2, r2, ip, ror #22
   292fc:	add	r2, r2, r0
   29300:	add	sl, sl, r8
   29304:	ldr	r0, [sp, #72]	; 0x48
   29308:	ror	r8, fp, #19
   2930c:	eor	r8, r8, fp, ror #17
   29310:	add	r7, r7, r3
   29314:	eor	r8, r8, fp, lsr #10
   29318:	add	sl, sl, r0
   2931c:	add	r3, r2, r3
   29320:	add	r2, sl, r8
   29324:	eor	sl, r5, lr
   29328:	orr	r4, ip, r3
   2932c:	mov	fp, r2
   29330:	movw	r2, #51502	; 0xc92e
   29334:	movt	r2, #33218	; 0x81c2
   29338:	str	fp, [sp, #24]
   2933c:	add	r2, fp, r2
   29340:	ldr	fp, [sp, #56]	; 0x38
   29344:	and	sl, sl, r7
   29348:	add	r6, r2, r6
   2934c:	eor	sl, sl, r5
   29350:	and	r4, r4, r1
   29354:	and	r0, ip, r3
   29358:	add	r6, sl, r6
   2935c:	ror	sl, fp, #18
   29360:	orr	r0, r4, r0
   29364:	eor	sl, sl, fp, ror #7
   29368:	ldr	r4, [sp, #28]
   2936c:	eor	sl, sl, fp, lsr #3
   29370:	ror	r8, r7, #11
   29374:	ror	r2, r3, #13
   29378:	add	sl, sl, r4
   2937c:	ldr	r4, [sp, #20]
   29380:	eor	r8, r8, r7, ror #6
   29384:	eor	r2, r2, r3, ror #2
   29388:	eor	r8, r8, r7, ror #25
   2938c:	eor	r2, r2, r3, ror #22
   29390:	add	r6, r6, r8
   29394:	add	r2, r2, r0
   29398:	ror	r8, r4, #19
   2939c:	ldr	r0, [sp]
   293a0:	eor	r8, r8, r4, ror #17
   293a4:	add	r9, r9, r6
   293a8:	eor	r8, r8, r4, lsr #10
   293ac:	add	sl, sl, r0
   293b0:	add	r6, r2, r6
   293b4:	eor	r0, lr, r7
   293b8:	add	r2, sl, r8
   293bc:	movw	r4, #11397	; 0x2c85
   293c0:	movt	r4, #37490	; 0x9272
   293c4:	str	r2, [sp, #28]
   293c8:	add	r4, r2, r4
   293cc:	and	r0, r0, r9
   293d0:	ror	r2, r9, #11
   293d4:	eor	r0, r0, lr
   293d8:	add	r5, r4, r5
   293dc:	eor	r2, r2, r9, ror #6
   293e0:	ldr	r8, [sp, #32]
   293e4:	orr	r4, r3, r6
   293e8:	add	r5, r0, r5
   293ec:	eor	r2, r2, r9, ror #25
   293f0:	and	r4, r4, ip
   293f4:	add	r2, r5, r2
   293f8:	ror	r0, r6, #13
   293fc:	and	r5, r3, r6
   29400:	eor	r0, r0, r6, ror #2
   29404:	orr	r5, r4, r5
   29408:	ldr	r4, [sp, #24]
   2940c:	ror	sl, r8, #18
   29410:	eor	r0, r0, r6, ror #22
   29414:	eor	sl, sl, r8, ror #7
   29418:	add	r0, r0, r5
   2941c:	add	r5, r0, r2
   29420:	eor	sl, sl, r8, lsr #3
   29424:	ldr	r0, [sp, #4]
   29428:	ror	r8, r4, #19
   2942c:	add	sl, sl, fp
   29430:	eor	r8, r8, r4, ror #17
   29434:	eor	r8, r8, r4, lsr #10
   29438:	add	sl, sl, r0
   2943c:	add	sl, sl, r8
   29440:	movw	r8, #59553	; 0xe8a1
   29444:	movt	r8, #41663	; 0xa2bf
   29448:	add	r1, r1, r2
   2944c:	mov	fp, sl
   29450:	add	r8, fp, r8
   29454:	eor	sl, r7, r9
   29458:	add	lr, r8, lr
   2945c:	ldr	r8, [sp, #60]	; 0x3c
   29460:	and	sl, sl, r1
   29464:	eor	sl, sl, r7
   29468:	orr	r0, r6, r5
   2946c:	add	lr, sl, lr
   29470:	and	r0, r0, r3
   29474:	ror	sl, r8, #18
   29478:	ror	r4, r1, #11
   2947c:	eor	sl, sl, r8, ror #7
   29480:	eor	r4, r4, r1, ror #6
   29484:	eor	sl, sl, r8, lsr #3
   29488:	and	r8, r6, r5
   2948c:	orr	r8, r0, r8
   29490:	ldr	r0, [sp, #32]
   29494:	eor	r4, r4, r1, ror #25
   29498:	ror	r2, r5, #13
   2949c:	add	sl, sl, r0
   294a0:	ldr	r0, [sp, #28]
   294a4:	add	lr, lr, r4
   294a8:	eor	r2, r2, r5, ror #2
   294ac:	eor	r2, r2, r5, ror #22
   294b0:	add	ip, ip, lr
   294b4:	ror	r4, r0, #19
   294b8:	add	r8, r2, r8
   294bc:	eor	r4, r4, r0, ror #17
   294c0:	add	lr, r8, lr
   294c4:	eor	r4, r4, r0, lsr #10
   294c8:	ldr	r0, [sp, #44]	; 0x2c
   294cc:	movw	r8, #26187	; 0x664b
   294d0:	movt	r8, #43034	; 0xa81a
   294d4:	add	sl, sl, r0
   294d8:	eor	r0, r9, r1
   294dc:	add	sl, sl, r4
   294e0:	ldr	r4, [sp, #36]	; 0x24
   294e4:	add	r8, sl, r8
   294e8:	and	r0, r0, ip
   294ec:	ror	r2, ip, #11
   294f0:	eor	r0, r0, r9
   294f4:	add	r7, r8, r7
   294f8:	eor	r2, r2, ip, ror #6
   294fc:	str	fp, [sp, #56]	; 0x38
   29500:	add	r7, r0, r7
   29504:	ror	fp, r4, #18
   29508:	eor	r2, r2, ip, ror #25
   2950c:	str	sl, [sp, #32]
   29510:	add	r2, r7, r2
   29514:	orr	sl, r5, lr
   29518:	ldr	r7, [sp, #56]	; 0x38
   2951c:	ror	r0, lr, #13
   29520:	eor	fp, fp, r4, ror #7
   29524:	ldr	r8, [sp, #60]	; 0x3c
   29528:	and	sl, sl, r6
   2952c:	eor	r0, r0, lr, ror #2
   29530:	eor	fp, fp, r4, lsr #3
   29534:	and	r4, r5, lr
   29538:	eor	r0, r0, lr, ror #22
   2953c:	orr	sl, sl, r4
   29540:	add	fp, fp, r8
   29544:	add	r0, r0, sl
   29548:	ror	r8, r7, #19
   2954c:	mov	sl, r7
   29550:	eor	r8, r8, r7, ror #17
   29554:	add	r7, r0, r2
   29558:	ldr	r0, [sp, #48]	; 0x30
   2955c:	eor	r8, r8, sl, lsr #10
   29560:	add	r3, r3, r2
   29564:	add	fp, fp, r0
   29568:	eor	r4, r1, ip
   2956c:	add	r2, fp, r8
   29570:	movw	r8, #35696	; 0x8b70
   29574:	movt	r8, #49739	; 0xc24b
   29578:	orr	sl, lr, r7
   2957c:	add	r8, r2, r8
   29580:	and	sl, sl, r5
   29584:	add	r9, r8, r9
   29588:	ldr	r8, [sp, #64]	; 0x40
   2958c:	and	r4, r4, r3
   29590:	ror	r0, r3, #11
   29594:	eor	r4, r4, r1
   29598:	eor	r0, r0, r3, ror #6
   2959c:	ror	fp, r8, #18
   295a0:	add	r9, r4, r9
   295a4:	eor	fp, fp, r8, ror #7
   295a8:	ldr	r4, [sp, #36]	; 0x24
   295ac:	eor	fp, fp, r8, lsr #3
   295b0:	and	r8, lr, r7
   295b4:	orr	r8, sl, r8
   295b8:	ldr	sl, [sp, #32]
   295bc:	eor	r0, r0, r3, ror #25
   295c0:	add	fp, fp, r4
   295c4:	add	r9, r9, r0
   295c8:	ldr	r0, [sp, #52]	; 0x34
   295cc:	ror	r4, sl, #19
   295d0:	str	r2, [sp, #60]	; 0x3c
   295d4:	eor	r4, r4, sl, ror #17
   295d8:	ror	r2, r7, #13
   295dc:	eor	r4, r4, sl, lsr #10
   295e0:	eor	r2, r2, r7, ror #2
   295e4:	add	fp, fp, r0
   295e8:	eor	r2, r2, r7, ror #22
   295ec:	add	fp, fp, r4
   295f0:	add	r8, r2, r8
   295f4:	movw	r2, #20899	; 0x51a3
   295f8:	movt	r2, #51052	; 0xc76c
   295fc:	mov	r4, fp
   29600:	add	r2, r4, r2
   29604:	str	r4, [sp, #8]
   29608:	add	r6, r6, r9
   2960c:	eor	fp, ip, r3
   29610:	add	r1, r2, r1
   29614:	ldr	r2, [sp, #40]	; 0x28
   29618:	and	fp, fp, r6
   2961c:	add	r9, r8, r9
   29620:	eor	fp, fp, ip
   29624:	ror	sl, r6, #11
   29628:	add	r1, fp, r1
   2962c:	eor	sl, sl, r6, ror #6
   29630:	ror	fp, r2, #18
   29634:	orr	r0, r7, r9
   29638:	eor	sl, sl, r6, ror #25
   2963c:	ror	r8, r9, #13
   29640:	eor	fp, fp, r2, ror #7
   29644:	add	r1, r1, sl
   29648:	and	r0, r0, lr
   2964c:	and	sl, r7, r9
   29650:	eor	r8, r8, r9, ror #2
   29654:	eor	fp, fp, r2, lsr #3
   29658:	ldr	r2, [sp, #60]	; 0x3c
   2965c:	ldr	r4, [sp, #64]	; 0x40
   29660:	eor	r8, r8, r9, ror #22
   29664:	orr	sl, r0, sl
   29668:	add	r5, r5, r1
   2966c:	add	sl, r8, sl
   29670:	add	fp, fp, r4
   29674:	add	sl, sl, r1
   29678:	ror	r4, r2, #19
   2967c:	ldr	r1, [sp, #20]
   29680:	eor	r4, r4, r2, ror #17
   29684:	eor	r4, r4, r2, lsr #10
   29688:	ldr	r8, [sp, #68]	; 0x44
   2968c:	add	fp, fp, r1
   29690:	eor	r0, r3, r6
   29694:	add	r1, fp, r4
   29698:	movw	r2, #59417	; 0xe819
   2969c:	movt	r2, #53650	; 0xd192
   296a0:	str	r1, [sp, #36]	; 0x24
   296a4:	add	r2, r1, r2
   296a8:	and	r0, r0, r5
   296ac:	ror	r1, r5, #11
   296b0:	orr	r4, r9, sl
   296b4:	eor	r0, r0, r3
   296b8:	add	ip, r2, ip
   296bc:	eor	r1, r1, r5, ror #6
   296c0:	add	ip, r0, ip
   296c4:	and	r4, r4, r7
   296c8:	and	r0, r9, sl
   296cc:	ror	r2, sl, #13
   296d0:	ror	fp, r8, #18
   296d4:	eor	r1, r1, r5, ror #25
   296d8:	orr	r4, r4, r0
   296dc:	add	r1, ip, r1
   296e0:	ldr	r0, [sp, #40]	; 0x28
   296e4:	ldr	ip, [sp, #8]
   296e8:	eor	r2, r2, sl, ror #2
   296ec:	eor	fp, fp, r8, ror #7
   296f0:	eor	r2, r2, sl, ror #22
   296f4:	eor	fp, fp, r8, lsr #3
   296f8:	add	lr, lr, r1
   296fc:	add	fp, fp, r0
   29700:	add	r0, r2, r4
   29704:	add	r0, r0, r1
   29708:	ror	r8, ip, #19
   2970c:	ldr	r1, [sp, #24]
   29710:	eor	r8, r8, ip, ror #17
   29714:	eor	r8, r8, ip, lsr #10
   29718:	movw	r2, #1572	; 0x624
   2971c:	add	fp, fp, r1
   29720:	eor	ip, r6, r5
   29724:	add	r4, fp, r8
   29728:	movt	r2, #54937	; 0xd699
   2972c:	add	r2, r4, r2
   29730:	and	ip, ip, lr
   29734:	ror	r1, lr, #11
   29738:	ldr	fp, [sp, #72]	; 0x48
   2973c:	add	r3, r2, r3
   29740:	eor	ip, ip, r6
   29744:	eor	r1, r1, lr, ror #6
   29748:	orr	r8, sl, r0
   2974c:	eor	r1, r1, lr, ror #25
   29750:	add	ip, ip, r3
   29754:	add	ip, ip, r1
   29758:	and	r8, r8, r9
   2975c:	and	r1, sl, r0
   29760:	ror	r2, r0, #13
   29764:	ror	r3, fp, #18
   29768:	eor	r2, r2, r0, ror #2
   2976c:	orr	r1, r8, r1
   29770:	ldr	r8, [sp, #36]	; 0x24
   29774:	str	r4, [sp, #12]
   29778:	eor	r2, r2, r0, ror #22
   2977c:	ldr	r4, [sp, #68]	; 0x44
   29780:	eor	r3, r3, fp, ror #7
   29784:	eor	r3, r3, fp, lsr #3
   29788:	add	r1, r2, r1
   2978c:	add	r1, r1, ip
   29790:	add	r2, r7, ip
   29794:	add	r3, r3, r4
   29798:	ldr	ip, [sp, #28]
   2979c:	ror	r4, r8, #19
   297a0:	orr	r7, r0, r1
   297a4:	eor	r4, r4, r8, ror #17
   297a8:	add	r3, r3, ip
   297ac:	eor	r4, r4, r8, lsr #10
   297b0:	movw	ip, #13701	; 0x3585
   297b4:	add	r3, r3, r4
   297b8:	eor	r8, r5, lr
   297bc:	movt	ip, #62478	; 0xf40e
   297c0:	and	r8, r8, r2
   297c4:	add	ip, r3, ip
   297c8:	eor	r8, r8, r5
   297cc:	add	r6, ip, r6
   297d0:	str	r3, [sp, #40]	; 0x28
   297d4:	add	r6, r8, r6
   297d8:	ror	r3, r2, #11
   297dc:	ldr	r8, [sp]
   297e0:	eor	r3, r3, r2, ror #6
   297e4:	eor	r3, r3, r2, ror #25
   297e8:	ror	ip, r1, #13
   297ec:	add	r3, r6, r3
   297f0:	ldr	r6, [sp, #12]
   297f4:	ror	r4, r8, #18
   297f8:	and	r7, r7, sl
   297fc:	eor	r4, r4, r8, ror #7
   29800:	eor	ip, ip, r1, ror #2
   29804:	eor	r4, r4, r8, lsr #3
   29808:	and	r8, r0, r1
   2980c:	add	r4, r4, fp
   29810:	ror	fp, r6, #19
   29814:	eor	fp, fp, r6, ror #17
   29818:	eor	ip, ip, r1, ror #22
   2981c:	eor	fp, fp, r6, lsr #10
   29820:	ldr	r6, [sp, #56]	; 0x38
   29824:	orr	r7, r7, r8
   29828:	add	r4, r4, r6
   2982c:	movw	r6, #41072	; 0xa070
   29830:	add	r4, r4, fp
   29834:	movt	r6, #4202	; 0x106a
   29838:	add	r8, ip, r7
   2983c:	add	r6, r4, r6
   29840:	add	ip, r9, r3
   29844:	add	r8, r8, r3
   29848:	add	r5, r6, r5
   2984c:	eor	r3, lr, r2
   29850:	ldr	r6, [sp, #4]
   29854:	and	r3, r3, ip
   29858:	eor	r3, r3, lr
   2985c:	str	r4, [sp, #16]
   29860:	add	r5, r3, r5
   29864:	ldr	r4, [sp]
   29868:	ror	r3, r6, #18
   2986c:	ror	r7, ip, #11
   29870:	eor	r3, r3, r6, ror #7
   29874:	eor	r7, r7, ip, ror #6
   29878:	eor	r3, r3, r6, lsr #3
   2987c:	orr	r9, r1, r8
   29880:	add	r3, r3, r4
   29884:	ldr	r4, [sp, #40]	; 0x28
   29888:	eor	r7, r7, ip, ror #25
   2988c:	ror	fp, r8, #13
   29890:	add	r5, r5, r7
   29894:	and	r9, r9, r0
   29898:	ror	r6, r4, #19
   2989c:	and	r7, r1, r8
   298a0:	eor	r6, r6, r4, ror #17
   298a4:	eor	fp, fp, r8, ror #2
   298a8:	eor	r6, r6, r4, lsr #10
   298ac:	ldr	r4, [sp, #32]
   298b0:	eor	fp, fp, r8, ror #22
   298b4:	orr	r7, r9, r7
   298b8:	add	r7, fp, r7
   298bc:	add	r3, r3, r4
   298c0:	add	fp, sl, r5
   298c4:	add	r7, r7, r5
   298c8:	add	r3, r3, r6
   298cc:	eor	r5, r2, ip
   298d0:	movw	r4, #49430	; 0xc116
   298d4:	movt	r4, #6564	; 0x19a4
   298d8:	add	r4, r3, r4
   298dc:	and	r5, r5, fp
   298e0:	eor	r5, r5, r2
   298e4:	add	lr, r4, lr
   298e8:	add	lr, r5, lr
   298ec:	ldr	r5, [sp, #44]	; 0x2c
   298f0:	orr	r9, r8, r7
   298f4:	ldr	sl, [sp, #16]
   298f8:	str	r3, [sp, #64]	; 0x40
   298fc:	and	r9, r9, r1
   29900:	ror	r4, r5, #18
   29904:	ror	r3, fp, #11
   29908:	eor	r4, r4, r5, ror #7
   2990c:	ror	r6, r7, #13
   29910:	eor	r4, r4, r5, lsr #3
   29914:	and	r5, r8, r7
   29918:	orr	r9, r9, r5
   2991c:	eor	r3, r3, fp, ror #6
   29920:	ldr	r5, [sp, #4]
   29924:	eor	r6, r6, r7, ror #2
   29928:	eor	r6, r6, r7, ror #22
   2992c:	eor	r3, r3, fp, ror #25
   29930:	add	r3, lr, r3
   29934:	add	r4, r4, r5
   29938:	ror	lr, sl, #19
   2993c:	add	r5, r6, r9
   29940:	ldr	r6, [sp, #60]	; 0x3c
   29944:	eor	lr, lr, sl, ror #17
   29948:	add	r0, r0, r3
   2994c:	eor	lr, lr, sl, lsr #10
   29950:	add	r4, r4, r6
   29954:	add	r5, r5, r3
   29958:	add	sl, r4, lr
   2995c:	eor	r3, ip, fp
   29960:	movw	r6, #27656	; 0x6c08
   29964:	movt	r6, #7735	; 0x1e37
   29968:	ldr	r9, [sp, #48]	; 0x30
   2996c:	add	r6, sl, r6
   29970:	and	r3, r3, r0
   29974:	ror	r4, r0, #11
   29978:	eor	r3, r3, ip
   2997c:	add	r2, r6, r2
   29980:	eor	r4, r4, r0, ror #6
   29984:	orr	lr, r7, r5
   29988:	eor	r4, r4, r0, ror #25
   2998c:	add	r2, r3, r2
   29990:	add	r2, r2, r4
   29994:	and	lr, lr, r8
   29998:	and	r4, r7, r5
   2999c:	ror	r3, r9, #18
   299a0:	eor	r3, r3, r9, ror #7
   299a4:	orr	r4, lr, r4
   299a8:	ldr	lr, [sp, #64]	; 0x40
   299ac:	eor	r3, r3, r9, lsr #3
   299b0:	ldr	r9, [sp, #44]	; 0x2c
   299b4:	ror	r6, r5, #13
   299b8:	eor	r6, r6, r5, ror #2
   299bc:	add	r1, r1, r2
   299c0:	add	r3, r3, r9
   299c4:	ror	r9, lr, #19
   299c8:	eor	r9, r9, lr, ror #17
   299cc:	eor	r6, r6, r5, ror #22
   299d0:	eor	r9, r9, lr, lsr #10
   299d4:	ldr	lr, [sp, #8]
   299d8:	add	r4, r6, r4
   299dc:	add	r3, r3, lr
   299e0:	movw	lr, #30540	; 0x774c
   299e4:	add	r9, r3, r9
   299e8:	movt	lr, #10056	; 0x2748
   299ec:	eor	r3, fp, r0
   299f0:	str	r9, [sp, #4]
   299f4:	add	r4, r4, r2
   299f8:	add	lr, r9, lr
   299fc:	and	r3, r3, r1
   29a00:	ldr	r9, [sp, #52]	; 0x34
   29a04:	ror	r2, r1, #11
   29a08:	add	ip, lr, ip
   29a0c:	eor	r3, r3, fp
   29a10:	eor	r2, r2, r1, ror #6
   29a14:	orr	r6, r5, r4
   29a18:	eor	r2, r2, r1, ror #25
   29a1c:	add	r3, r3, ip
   29a20:	and	r6, r6, r7
   29a24:	add	r3, r3, r2
   29a28:	ror	lr, r4, #13
   29a2c:	and	r2, r5, r4
   29a30:	ror	ip, r9, #18
   29a34:	orr	r6, r6, r2
   29a38:	eor	lr, lr, r4, ror #2
   29a3c:	ldr	r2, [sp, #48]	; 0x30
   29a40:	eor	ip, ip, r9, ror #7
   29a44:	eor	lr, lr, r4, ror #22
   29a48:	eor	ip, ip, r9, lsr #3
   29a4c:	add	ip, ip, r2
   29a50:	add	lr, lr, r6
   29a54:	ror	r2, sl, #19
   29a58:	ldr	r6, [sp, #36]	; 0x24
   29a5c:	eor	r2, r2, sl, ror #17
   29a60:	add	r8, r8, r3
   29a64:	add	lr, lr, r3
   29a68:	add	ip, ip, r6
   29a6c:	eor	r3, r2, sl, lsr #10
   29a70:	ldr	r9, [sp, #20]
   29a74:	add	ip, ip, r3
   29a78:	movw	r2, #48309	; 0xbcb5
   29a7c:	movt	r2, #13488	; 0x34b0
   29a80:	ror	r6, lr, #13
   29a84:	mov	r3, ip
   29a88:	eor	ip, r0, r1
   29a8c:	add	r2, r3, r2
   29a90:	and	ip, ip, r8
   29a94:	add	r2, r2, fp
   29a98:	eor	ip, ip, r0
   29a9c:	add	ip, ip, r2
   29aa0:	ror	r2, r9, #18
   29aa4:	str	r3, [sp, #44]	; 0x2c
   29aa8:	eor	r2, r2, r9, ror #7
   29aac:	ror	r3, r8, #11
   29ab0:	eor	r2, r2, r9, lsr #3
   29ab4:	eor	r3, r3, r8, ror #6
   29ab8:	ldr	r9, [sp, #52]	; 0x34
   29abc:	orr	fp, r4, lr
   29ac0:	eor	r3, r3, r8, ror #25
   29ac4:	add	r3, ip, r3
   29ac8:	and	fp, fp, r5
   29acc:	and	ip, r4, lr
   29ad0:	eor	r6, r6, lr, ror #2
   29ad4:	add	r2, r2, r9
   29ad8:	ldr	r9, [sp, #4]
   29adc:	eor	r6, r6, lr, ror #22
   29ae0:	orr	ip, fp, ip
   29ae4:	add	ip, r6, ip
   29ae8:	add	r7, r7, r3
   29aec:	add	ip, ip, r3
   29af0:	ror	fp, r9, #19
   29af4:	ldr	r3, [sp, #12]
   29af8:	eor	r6, fp, r9, ror #17
   29afc:	eor	r6, r6, r9, lsr #10
   29b00:	ldr	r9, [sp, #24]
   29b04:	add	r2, r2, r3
   29b08:	eor	r3, r1, r8
   29b0c:	add	r2, r2, r6
   29b10:	and	r3, r3, r7
   29b14:	eor	r3, r3, r1
   29b18:	ror	fp, r7, #11
   29b1c:	mov	r6, r2
   29b20:	movw	r2, #3251	; 0xcb3
   29b24:	movt	r2, #14620	; 0x391c
   29b28:	eor	fp, fp, r7, ror #6
   29b2c:	add	r2, r6, r2
   29b30:	str	r6, [sp, #48]	; 0x30
   29b34:	add	r2, r2, r0
   29b38:	orr	r6, lr, ip
   29b3c:	add	r3, r3, r2
   29b40:	ror	r2, r9, #18
   29b44:	eor	r2, r2, r9, ror #7
   29b48:	eor	fp, fp, r7, ror #25
   29b4c:	eor	r2, r2, r9, lsr #3
   29b50:	ldr	r9, [sp, #20]
   29b54:	ror	r0, ip, #13
   29b58:	add	r3, r3, fp
   29b5c:	and	r6, r6, r4
   29b60:	and	fp, lr, ip
   29b64:	eor	r0, r0, ip, ror #2
   29b68:	add	r2, r2, r9
   29b6c:	ldr	r9, [sp, #44]	; 0x2c
   29b70:	orr	r6, r6, fp
   29b74:	eor	r0, r0, ip, ror #22
   29b78:	add	r5, r5, r3
   29b7c:	add	r0, r0, r6
   29b80:	movw	r6, #43594	; 0xaa4a
   29b84:	add	r0, r0, r3
   29b88:	ror	fp, r9, #19
   29b8c:	ldr	r3, [sp, #40]	; 0x28
   29b90:	eor	fp, fp, r9, ror #17
   29b94:	eor	fp, fp, r9, lsr #10
   29b98:	movt	r6, #20184	; 0x4ed8
   29b9c:	add	r2, r2, r3
   29ba0:	ldr	r9, [sp, #28]
   29ba4:	add	r2, r2, fp
   29ba8:	ror	fp, r0, #13
   29bac:	eor	fp, fp, r0, ror #2
   29bb0:	mov	r3, r2
   29bb4:	eor	r2, r8, r7
   29bb8:	add	r6, r3, r6
   29bbc:	and	r2, r2, r5
   29bc0:	eor	r2, r2, r8
   29bc4:	add	r1, r6, r1
   29bc8:	add	r1, r2, r1
   29bcc:	ror	r2, r9, #18
   29bd0:	eor	r2, r2, r9, ror #7
   29bd4:	str	r3, [sp, #52]	; 0x34
   29bd8:	eor	r2, r2, r9, lsr #3
   29bdc:	ldr	r9, [sp, #24]
   29be0:	ror	r3, r5, #11
   29be4:	orr	r6, ip, r0
   29be8:	eor	r3, r3, r5, ror #6
   29bec:	add	r2, r2, r9
   29bf0:	ldr	r9, [sp, #48]	; 0x30
   29bf4:	eor	r3, r3, r5, ror #25
   29bf8:	add	r3, r1, r3
   29bfc:	and	r6, r6, lr
   29c00:	and	r1, ip, r0
   29c04:	eor	fp, fp, r0, ror #22
   29c08:	orr	r1, r6, r1
   29c0c:	ror	r6, r9, #19
   29c10:	add	r1, fp, r1
   29c14:	eor	fp, r6, r9, ror #17
   29c18:	ldr	r6, [sp, #16]
   29c1c:	eor	fp, fp, r9, lsr #10
   29c20:	add	r1, r1, r3
   29c24:	add	r4, r4, r3
   29c28:	add	r2, r2, r6
   29c2c:	ldr	r9, [sp, #56]	; 0x38
   29c30:	add	r2, r2, fp
   29c34:	movw	r3, #51791	; 0xca4f
   29c38:	movt	r3, #23452	; 0x5b9c
   29c3c:	orr	r6, r0, r1
   29c40:	mov	fp, r2
   29c44:	eor	r2, r7, r5
   29c48:	and	r2, r2, r4
   29c4c:	add	r3, fp, r3
   29c50:	add	r3, r3, r8
   29c54:	eor	r8, r2, r7
   29c58:	add	r8, r8, r3
   29c5c:	ror	r3, r9, #18
   29c60:	str	fp, [sp, #24]
   29c64:	eor	r3, r3, r9, ror #7
   29c68:	ror	fp, r4, #11
   29c6c:	eor	r3, r3, r9, lsr #3
   29c70:	eor	fp, fp, r4, ror #6
   29c74:	ldr	r9, [sp, #28]
   29c78:	eor	fp, fp, r4, ror #25
   29c7c:	ror	r2, r1, #13
   29c80:	add	r8, r8, fp
   29c84:	and	r6, r6, ip
   29c88:	and	fp, r0, r1
   29c8c:	eor	r2, r2, r1, ror #2
   29c90:	add	r3, r3, r9
   29c94:	ldr	r9, [sp, #52]	; 0x34
   29c98:	orr	r6, r6, fp
   29c9c:	eor	r2, r2, r1, ror #22
   29ca0:	add	r2, r2, r6
   29ca4:	add	lr, lr, r8
   29ca8:	add	r2, r2, r8
   29cac:	ror	fp, r9, #19
   29cb0:	ldr	r8, [sp, #64]	; 0x40
   29cb4:	eor	fp, fp, r9, ror #17
   29cb8:	eor	fp, fp, r9, lsr #10
   29cbc:	movw	r6, #28659	; 0x6ff3
   29cc0:	add	r3, r3, r8
   29cc4:	ldr	r9, [sp, #32]
   29cc8:	add	r8, r3, fp
   29ccc:	movt	r6, #26670	; 0x682e
   29cd0:	eor	fp, r5, r4
   29cd4:	add	r6, r8, r6
   29cd8:	and	fp, fp, lr
   29cdc:	add	r6, r6, r7
   29ce0:	eor	r7, fp, r5
   29ce4:	ror	r3, lr, #11
   29ce8:	add	r7, r7, r6
   29cec:	ror	r6, r9, #18
   29cf0:	eor	r6, r6, r9, ror #7
   29cf4:	eor	r3, r3, lr, ror #6
   29cf8:	eor	r6, r6, r9, lsr #3
   29cfc:	ldr	r9, [sp, #56]	; 0x38
   29d00:	str	r8, [sp, #28]
   29d04:	eor	r3, r3, lr, ror #25
   29d08:	add	r6, r6, r9
   29d0c:	ldr	r9, [sp, #24]
   29d10:	orr	r8, r1, r2
   29d14:	ror	fp, r2, #13
   29d18:	add	r7, r7, r3
   29d1c:	and	r8, r8, r0
   29d20:	and	r3, r1, r2
   29d24:	eor	fp, fp, r2, ror #2
   29d28:	eor	fp, fp, r2, ror #22
   29d2c:	orr	r3, r8, r3
   29d30:	ror	r8, r9, #19
   29d34:	add	r3, fp, r3
   29d38:	eor	fp, r8, r9, ror #17
   29d3c:	add	sl, r6, sl
   29d40:	eor	fp, fp, r9, lsr #10
   29d44:	add	ip, ip, r7
   29d48:	add	r3, r3, r7
   29d4c:	add	r7, sl, fp
   29d50:	eor	r6, r4, lr
   29d54:	ldr	fp, [sp, #60]	; 0x3c
   29d58:	mov	sl, r7
   29d5c:	movw	r7, #33518	; 0x82ee
   29d60:	movt	r7, #29839	; 0x748f
   29d64:	str	sl, [sp, #56]	; 0x38
   29d68:	add	r7, sl, r7
   29d6c:	and	r6, r6, ip
   29d70:	ror	sl, ip, #11
   29d74:	eor	r6, r6, r4
   29d78:	add	r5, r7, r5
   29d7c:	eor	sl, sl, ip, ror #6
   29d80:	orr	r8, r2, r3
   29d84:	eor	sl, sl, ip, ror #25
   29d88:	ror	r7, r3, #13
   29d8c:	add	r5, r6, r5
   29d90:	add	r5, r5, sl
   29d94:	and	r8, r8, r1
   29d98:	and	sl, r2, r3
   29d9c:	eor	r7, r7, r3, ror #2
   29da0:	ror	r6, fp, #18
   29da4:	ldr	r9, [sp, #32]
   29da8:	orr	sl, r8, sl
   29dac:	eor	r6, r6, fp, ror #7
   29db0:	eor	r7, r7, r3, ror #22
   29db4:	eor	r6, r6, fp, lsr #3
   29db8:	add	r7, r7, sl
   29dbc:	ldr	fp, [sp, #28]
   29dc0:	add	r6, r6, r9
   29dc4:	add	r9, r7, r5
   29dc8:	str	r3, [sp]
   29dcc:	add	r0, r0, r5
   29dd0:	mov	sl, r9
   29dd4:	ror	r8, fp, #19
   29dd8:	ldr	r9, [sp, #4]
   29ddc:	eor	r8, r8, fp, ror #17
   29de0:	eor	r8, r8, fp, lsr #10
   29de4:	movw	r5, #25455	; 0x636f
   29de8:	add	r6, r6, r9
   29dec:	movt	r5, #30885	; 0x78a5
   29df0:	add	r6, r6, r8
   29df4:	eor	r9, lr, ip
   29df8:	mov	r3, r0
   29dfc:	ldr	fp, [sp, #8]
   29e00:	add	r5, r6, r5
   29e04:	and	r9, r9, r3
   29e08:	eor	r9, r9, lr
   29e0c:	add	r4, r5, r4
   29e10:	mov	r0, sl
   29e14:	add	r4, r9, r4
   29e18:	ldr	sl, [sp]
   29e1c:	ror	r7, r3, #11
   29e20:	ldr	r9, [sp]
   29e24:	ror	r8, r0, #13
   29e28:	str	r3, [sp, #20]
   29e2c:	ror	r5, fp, #18
   29e30:	orr	sl, sl, r0
   29e34:	eor	r7, r7, r3, ror #6
   29e38:	eor	r8, r8, r0, ror #2
   29e3c:	mov	r3, r0
   29e40:	eor	r5, r5, fp, ror #7
   29e44:	and	fp, r9, r0
   29e48:	ldr	r0, [sp, #20]
   29e4c:	and	sl, sl, r2
   29e50:	ldr	r9, [sp, #8]
   29e54:	eor	r8, r8, r3, ror #22
   29e58:	orr	sl, sl, fp
   29e5c:	movw	fp, #30740	; 0x7814
   29e60:	eor	r7, r7, r0, ror #25
   29e64:	ldr	r0, [sp, #56]	; 0x38
   29e68:	add	r4, r4, r7
   29e6c:	add	sl, r8, sl
   29e70:	ldr	r8, [sp, #60]	; 0x3c
   29e74:	add	r1, r1, r4
   29e78:	eor	r5, r5, r9, lsr #3
   29e7c:	str	r1, [sp, #4]
   29e80:	ror	r9, r0, #19
   29e84:	ldr	r1, [sp, #44]	; 0x2c
   29e88:	add	r5, r5, r8
   29e8c:	eor	r9, r9, r0, ror #17
   29e90:	mov	r8, r0
   29e94:	add	r5, r5, r1
   29e98:	add	r0, sl, r4
   29e9c:	eor	r9, r9, r8, lsr #10
   29ea0:	ldr	sl, [sp, #20]
   29ea4:	add	r5, r5, r9
   29ea8:	ldr	r1, [sp, #4]
   29eac:	movt	fp, #33992	; 0x84c8
   29eb0:	eor	r7, ip, sl
   29eb4:	add	fp, r5, fp
   29eb8:	and	r7, r7, r1
   29ebc:	add	lr, fp, lr
   29ec0:	ldr	fp, [sp, #4]
   29ec4:	eor	r7, r7, ip
   29ec8:	ror	r9, r1, #11
   29ecc:	add	lr, r7, lr
   29ed0:	ldr	r1, [sp, #36]	; 0x24
   29ed4:	orr	sl, r3, r0
   29ed8:	ldr	r7, [sp, #4]
   29edc:	eor	r9, r9, fp, ror #6
   29ee0:	ldr	fp, [sp]
   29ee4:	ror	r8, r0, #13
   29ee8:	ror	r4, r1, #18
   29eec:	eor	r8, r8, r0, ror #2
   29ef0:	and	sl, sl, fp
   29ef4:	eor	r9, r9, r7, ror #25
   29ef8:	mov	fp, r3
   29efc:	and	fp, fp, r0
   29f00:	add	lr, lr, r9
   29f04:	eor	r8, r8, r0, ror #22
   29f08:	ldr	r9, [sp, #8]
   29f0c:	eor	r4, r4, r1, ror #7
   29f10:	orr	fp, sl, fp
   29f14:	eor	r4, r4, r1, lsr #3
   29f18:	add	fp, r8, fp
   29f1c:	ror	sl, r6, #19
   29f20:	ldr	r8, [sp, #48]	; 0x30
   29f24:	add	r4, r4, r9
   29f28:	eor	sl, sl, r6, ror #17
   29f2c:	add	r1, fp, lr
   29f30:	add	r4, r4, r8
   29f34:	eor	r6, sl, r6, lsr #10
   29f38:	add	r2, r2, lr
   29f3c:	add	r6, r4, r6
   29f40:	ldr	sl, [sp, #20]
   29f44:	mov	fp, #520	; 0x208
   29f48:	ldr	lr, [sp, #4]
   29f4c:	movt	fp, #36039	; 0x8cc7
   29f50:	add	fp, r6, fp
   29f54:	ldr	r4, [sp, #12]
   29f58:	eor	r8, sl, lr
   29f5c:	add	ip, fp, ip
   29f60:	ldr	fp, [sp, #12]
   29f64:	and	r8, r8, r2
   29f68:	eor	r8, r8, sl
   29f6c:	ror	r4, r4, #18
   29f70:	add	ip, r8, ip
   29f74:	ldr	r8, [sp, #36]	; 0x24
   29f78:	eor	r4, r4, fp, ror #7
   29f7c:	orr	r9, r0, r1
   29f80:	ror	r7, r2, #11
   29f84:	ror	lr, r1, #13
   29f88:	eor	r4, r4, fp, lsr #3
   29f8c:	and	sl, r0, r1
   29f90:	eor	r7, r7, r2, ror #6
   29f94:	and	r9, r9, r3
   29f98:	eor	lr, lr, r1, ror #2
   29f9c:	ror	fp, r5, #19
   29fa0:	add	r4, r4, r8
   29fa4:	ldr	r8, [sp, #52]	; 0x34
   29fa8:	str	r0, [sp, #8]
   29fac:	eor	r7, r7, r2, ror #25
   29fb0:	ldr	r0, [sp, #4]
   29fb4:	eor	lr, lr, r1, ror #22
   29fb8:	str	r3, [sp, #32]
   29fbc:	orr	r9, r9, sl
   29fc0:	ldr	r3, [sp]
   29fc4:	eor	fp, fp, r5, ror #17
   29fc8:	add	ip, ip, r7
   29fcc:	add	r9, lr, r9
   29fd0:	add	r4, r4, r8
   29fd4:	eor	fp, fp, r5, lsr #10
   29fd8:	add	r3, r3, ip
   29fdc:	add	fp, r4, fp
   29fe0:	add	ip, r9, ip
   29fe4:	eor	r7, r0, r2
   29fe8:	movw	r9, #65530	; 0xfffa
   29fec:	ldr	r0, [sp, #20]
   29ff0:	movt	r9, #37054	; 0x90be
   29ff4:	and	r7, r7, r3
   29ff8:	add	r9, fp, r9
   29ffc:	ldr	sl, [sp, #40]	; 0x28
   2a000:	add	r0, r9, r0
   2a004:	ldr	r9, [sp, #4]
   2a008:	orr	r8, r1, ip
   2a00c:	str	r1, [sp, #20]
   2a010:	eor	r7, r7, r9
   2a014:	and	r9, r1, ip
   2a018:	ldr	r1, [sp, #8]
   2a01c:	ror	r5, r3, #11
   2a020:	ror	r4, ip, #13
   2a024:	eor	r5, r5, r3, ror #6
   2a028:	and	r8, r8, r1
   2a02c:	eor	r4, r4, ip, ror #2
   2a030:	eor	r5, r5, r3, ror #25
   2a034:	eor	r4, r4, ip, ror #22
   2a038:	ror	lr, sl, #18
   2a03c:	add	r0, r7, r0
   2a040:	orr	r8, r8, r9
   2a044:	add	r0, r0, r5
   2a048:	add	r8, r4, r8
   2a04c:	ldr	r5, [sp, #32]
   2a050:	ldr	r4, [sp, #12]
   2a054:	eor	lr, lr, sl, ror #7
   2a058:	eor	lr, lr, sl, lsr #3
   2a05c:	ror	sl, r6, #19
   2a060:	add	lr, lr, r4
   2a064:	eor	r4, sl, r6, ror #17
   2a068:	add	sl, r5, r0
   2a06c:	ldr	r5, [sp, #24]
   2a070:	eor	r6, r4, r6, lsr #10
   2a074:	add	r0, r8, r0
   2a078:	add	lr, lr, r5
   2a07c:	ldr	r8, [sp, #20]
   2a080:	add	r5, lr, r6
   2a084:	ldr	r1, [sp, #4]
   2a088:	movw	r7, #27883	; 0x6ceb
   2a08c:	movt	r7, #42064	; 0xa450
   2a090:	mov	lr, r5
   2a094:	eor	r5, r2, r3
   2a098:	add	r7, lr, r7
   2a09c:	orr	r6, ip, r0
   2a0a0:	and	r5, r5, sl
   2a0a4:	str	lr, [sp]
   2a0a8:	eor	r5, r5, r2
   2a0ac:	ror	r4, sl, #11
   2a0b0:	ror	lr, r0, #13
   2a0b4:	add	r1, r7, r1
   2a0b8:	and	r6, r6, r8
   2a0bc:	ldr	r8, [sp, #16]
   2a0c0:	and	r7, ip, r0
   2a0c4:	eor	r4, r4, sl, ror #6
   2a0c8:	eor	lr, lr, r0, ror #2
   2a0cc:	add	r1, r5, r1
   2a0d0:	ldr	r5, [sp, #16]
   2a0d4:	eor	r4, r4, sl, ror #25
   2a0d8:	orr	r6, r6, r7
   2a0dc:	eor	lr, lr, r0, ror #22
   2a0e0:	add	r1, r1, r4
   2a0e4:	add	lr, lr, r6
   2a0e8:	ldr	r4, [sp, #40]	; 0x28
   2a0ec:	ror	r8, r8, #18
   2a0f0:	ldr	r6, [sp, #8]
   2a0f4:	eor	r8, r8, r5, ror #7
   2a0f8:	movw	r9, #41975	; 0xa3f7
   2a0fc:	movt	r9, #48889	; 0xbef9
   2a100:	add	r9, r4, r9
   2a104:	eor	r8, r8, r5, lsr #3
   2a108:	ror	r7, fp, #19
   2a10c:	add	r5, r6, r1
   2a110:	ldr	r6, [sp, #28]
   2a114:	add	r1, lr, r1
   2a118:	add	r8, r8, r9
   2a11c:	eor	r7, r7, fp, ror #17
   2a120:	add	lr, r8, r6
   2a124:	eor	fp, r7, fp, lsr #10
   2a128:	eor	r8, r3, sl
   2a12c:	add	fp, lr, fp
   2a130:	ror	r9, r1, #13
   2a134:	and	r8, r8, r5
   2a138:	ror	lr, r5, #11
   2a13c:	eor	r9, r9, r1, ror #2
   2a140:	eor	r8, r8, r3
   2a144:	add	r2, fp, r2
   2a148:	eor	lr, lr, r5, ror #6
   2a14c:	orr	r4, r0, r1
   2a150:	eor	r7, r9, r1, ror #22
   2a154:	add	fp, r2, r8
   2a158:	ldr	r9, [sp, #64]	; 0x40
   2a15c:	eor	lr, lr, r5, ror #25
   2a160:	and	r4, r4, ip
   2a164:	and	r6, r0, r1
   2a168:	add	fp, fp, lr
   2a16c:	ldr	lr, [sp]
   2a170:	orr	r6, r4, r6
   2a174:	ldr	r4, [sp, #16]
   2a178:	ror	r8, r9, #18
   2a17c:	movw	r2, #30962	; 0x78f2
   2a180:	movt	r2, #50801	; 0xc671
   2a184:	add	r7, r7, r6
   2a188:	add	r2, r4, r2
   2a18c:	eor	r6, r8, r9, ror #7
   2a190:	ror	r4, lr, #19
   2a194:	eor	r6, r6, r9, lsr #3
   2a198:	eor	r4, r4, lr, ror #17
   2a19c:	ldr	lr, [sp, #56]	; 0x38
   2a1a0:	add	r6, r6, r2
   2a1a4:	add	r7, r7, fp
   2a1a8:	add	r6, r6, lr
   2a1ac:	ldr	lr, [sp]
   2a1b0:	ldr	r8, [sp, #20]
   2a1b4:	orr	r9, r1, r7
   2a1b8:	ror	r2, r7, #13
   2a1bc:	and	r9, r9, r0
   2a1c0:	add	fp, r8, fp
   2a1c4:	eor	r4, r4, lr, lsr #10
   2a1c8:	eor	r8, sl, r5
   2a1cc:	and	lr, r1, r7
   2a1d0:	and	r8, r8, fp
   2a1d4:	eor	r2, r2, r7, ror #2
   2a1d8:	add	r6, r6, r4
   2a1dc:	orr	r9, r9, lr
   2a1e0:	ldr	lr, [sp, #96]	; 0x60
   2a1e4:	eor	r2, r2, r7, ror #22
   2a1e8:	add	r6, r6, r3
   2a1ec:	ror	r4, fp, #11
   2a1f0:	eor	r8, r8, sl
   2a1f4:	add	ip, lr, ip
   2a1f8:	eor	r4, r4, fp, ror #6
   2a1fc:	ldr	lr, [sp, #88]	; 0x58
   2a200:	add	r9, r2, r9
   2a204:	add	r8, r6, r8
   2a208:	ldr	r2, [sp, #80]	; 0x50
   2a20c:	eor	r4, r4, fp, ror #25
   2a210:	ldr	r6, [sp, #104]	; 0x68
   2a214:	add	r8, r8, r4
   2a218:	ldr	r3, [sp, #108]	; 0x6c
   2a21c:	add	r5, lr, r5
   2a220:	add	sl, r6, sl
   2a224:	ldr	lr, [sp, #76]	; 0x4c
   2a228:	ldr	r6, [sp, #92]	; 0x5c
   2a22c:	add	r9, r9, r2
   2a230:	ldr	r4, [sp, #84]	; 0x54
   2a234:	add	r9, r9, r8
   2a238:	ldr	r2, [sp, #100]	; 0x64
   2a23c:	add	r0, r6, r0
   2a240:	str	sl, [r3, #36]	; 0x24
   2a244:	add	r1, lr, r1
   2a248:	str	r0, [r3, #20]
   2a24c:	add	r7, r4, r7
   2a250:	str	r5, [r3, #32]
   2a254:	add	fp, r2, fp
   2a258:	str	r1, [r3, #16]
   2a25c:	add	r8, ip, r8
   2a260:	str	r7, [r3, #12]
   2a264:	str	fp, [r3, #28]
   2a268:	str	r9, [r3, #8]
   2a26c:	str	r8, [r3, #24]
   2a270:	add	sp, sp, #116	; 0x74
   2a274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a278:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a27c:	mov	r6, r0
   2a280:	ldr	r8, [r0]
   2a284:	mov	r7, r2
   2a288:	mov	r4, r1
   2a28c:	adds	r3, r8, r2
   2a290:	str	r3, [r0]
   2a294:	and	r8, r8, #63	; 0x3f
   2a298:	ldrcs	r3, [r0, #4]
   2a29c:	rsb	r5, r8, #64	; 0x40
   2a2a0:	addcs	r3, r3, #1
   2a2a4:	strcs	r3, [r0, #4]
   2a2a8:	cmp	r5, r2
   2a2ac:	movhi	r3, #0
   2a2b0:	movls	r3, #1
   2a2b4:	cmp	r8, #0
   2a2b8:	moveq	r3, #0
   2a2bc:	cmp	r3, #0
   2a2c0:	bne	2a318 <crc32@@Base+0x10b74>
   2a2c4:	cmp	r7, #63	; 0x3f
   2a2c8:	bls	2a2f8 <crc32@@Base+0x10b54>
   2a2cc:	sub	r5, r7, #64	; 0x40
   2a2d0:	bic	r5, r5, #63	; 0x3f
   2a2d4:	add	r5, r5, #64	; 0x40
   2a2d8:	add	r5, r4, r5
   2a2dc:	mov	r1, r4
   2a2e0:	mov	r0, r6
   2a2e4:	add	r4, r4, #64	; 0x40
   2a2e8:	bl	27f9c <crc32@@Base+0xe7f8>
   2a2ec:	cmp	r4, r5
   2a2f0:	bne	2a2dc <crc32@@Base+0x10b38>
   2a2f4:	and	r7, r7, #63	; 0x3f
   2a2f8:	cmp	r7, #0
   2a2fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a300:	add	r0, r6, #40	; 0x28
   2a304:	mov	r2, r7
   2a308:	add	r0, r0, r8
   2a30c:	mov	r1, r4
   2a310:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a314:	b	1259c <memcpy@plt>
   2a318:	add	r9, r0, #40	; 0x28
   2a31c:	mov	r2, r5
   2a320:	add	r0, r9, r8
   2a324:	sub	r7, r7, r5
   2a328:	bl	1259c <memcpy@plt>
   2a32c:	mov	r1, r9
   2a330:	mov	r0, r6
   2a334:	add	r4, r4, r5
   2a338:	bl	27f9c <crc32@@Base+0xe7f8>
   2a33c:	mov	r8, #0
   2a340:	b	2a2c4 <crc32@@Base+0x10b20>
   2a344:	movw	r2, #58983	; 0xe667
   2a348:	movw	r3, #44677	; 0xae85
   2a34c:	movt	r2, #27145	; 0x6a09
   2a350:	movt	r3, #47975	; 0xbb67
   2a354:	strd	r2, [r0, #8]
   2a358:	movw	r2, #62322	; 0xf372
   2a35c:	movw	r3, #62778	; 0xf53a
   2a360:	movt	r2, #15470	; 0x3c6e
   2a364:	movt	r3, #42319	; 0xa54f
   2a368:	strd	r2, [r0, #16]
   2a36c:	movw	r2, #21119	; 0x527f
   2a370:	movw	r3, #26764	; 0x688c
   2a374:	movt	r2, #20750	; 0x510e
   2a378:	movt	r3, #39685	; 0x9b05
   2a37c:	strd	r2, [r0, #24]
   2a380:	movw	r2, #55723	; 0xd9ab
   2a384:	movw	r3, #52505	; 0xcd19
   2a388:	movt	r2, #8067	; 0x1f83
   2a38c:	movt	r3, #23520	; 0x5be0
   2a390:	strd	r2, [r0, #32]
   2a394:	mov	r3, #0
   2a398:	str	r3, [r0]
   2a39c:	str	r3, [r0, #4]
   2a3a0:	bx	lr
   2a3a4:	cmp	r2, #0
   2a3a8:	bxeq	lr
   2a3ac:	b	2a278 <crc32@@Base+0x10ad4>
   2a3b0:	ldr	r3, [r0]
   2a3b4:	push	{r4, r5, r6, lr}
   2a3b8:	mov	r4, r0
   2a3bc:	ldr	r0, [r0, #4]
   2a3c0:	movw	r6, #61168	; 0xeef0
   2a3c4:	movt	r6, #4
   2a3c8:	mov	r5, r1
   2a3cc:	lsr	r1, r3, #29
   2a3d0:	sub	sp, sp, #16
   2a3d4:	orr	r1, r1, r0, lsl #3
   2a3d8:	ldr	r0, [r6]
   2a3dc:	and	r2, r3, #63	; 0x3f
   2a3e0:	lsl	r3, r3, #3
   2a3e4:	cmp	r2, #55	; 0x37
   2a3e8:	lsr	ip, r1, #24
   2a3ec:	rsbls	r2, r2, #56	; 0x38
   2a3f0:	rsbhi	r2, r2, #120	; 0x78
   2a3f4:	strb	r1, [sp, #7]
   2a3f8:	strb	ip, [sp, #4]
   2a3fc:	lsr	ip, r1, #16
   2a400:	str	r0, [sp, #12]
   2a404:	lsr	r1, r1, #8
   2a408:	mov	r0, r4
   2a40c:	strb	r1, [sp, #6]
   2a410:	lsr	r1, r3, #24
   2a414:	strb	r1, [sp, #8]
   2a418:	lsr	r1, r3, #16
   2a41c:	strb	r1, [sp, #9]
   2a420:	movw	r1, #64344	; 0xfb58
   2a424:	movt	r1, #4
   2a428:	strb	r3, [sp, #11]
   2a42c:	lsr	r3, r3, #8
   2a430:	strb	ip, [sp, #5]
   2a434:	strb	r3, [sp, #10]
   2a438:	bl	2a278 <crc32@@Base+0x10ad4>
   2a43c:	mov	r2, #8
   2a440:	add	r1, sp, #4
   2a444:	mov	r0, r4
   2a448:	bl	2a278 <crc32@@Base+0x10ad4>
   2a44c:	ldrb	r3, [r4, #11]
   2a450:	strb	r3, [r5]
   2a454:	ldrh	r3, [r4, #10]
   2a458:	strb	r3, [r5, #1]
   2a45c:	ldr	r3, [r4, #8]
   2a460:	lsr	r3, r3, #8
   2a464:	strb	r3, [r5, #2]
   2a468:	ldr	r3, [r4, #8]
   2a46c:	strb	r3, [r5, #3]
   2a470:	ldrb	r3, [r4, #15]
   2a474:	strb	r3, [r5, #4]
   2a478:	ldrh	r3, [r4, #14]
   2a47c:	strb	r3, [r5, #5]
   2a480:	ldr	r3, [r4, #12]
   2a484:	lsr	r3, r3, #8
   2a488:	strb	r3, [r5, #6]
   2a48c:	ldr	r3, [r4, #12]
   2a490:	strb	r3, [r5, #7]
   2a494:	ldrb	r3, [r4, #19]
   2a498:	strb	r3, [r5, #8]
   2a49c:	ldrh	r3, [r4, #18]
   2a4a0:	strb	r3, [r5, #9]
   2a4a4:	ldr	r3, [r4, #16]
   2a4a8:	lsr	r3, r3, #8
   2a4ac:	strb	r3, [r5, #10]
   2a4b0:	ldr	r3, [r4, #16]
   2a4b4:	strb	r3, [r5, #11]
   2a4b8:	ldrb	r3, [r4, #23]
   2a4bc:	strb	r3, [r5, #12]
   2a4c0:	ldrh	r3, [r4, #22]
   2a4c4:	strb	r3, [r5, #13]
   2a4c8:	ldr	r3, [r4, #20]
   2a4cc:	lsr	r3, r3, #8
   2a4d0:	strb	r3, [r5, #14]
   2a4d4:	ldr	r3, [r4, #20]
   2a4d8:	strb	r3, [r5, #15]
   2a4dc:	ldrb	r3, [r4, #27]
   2a4e0:	strb	r3, [r5, #16]
   2a4e4:	ldrh	r3, [r4, #26]
   2a4e8:	strb	r3, [r5, #17]
   2a4ec:	ldr	r3, [r4, #24]
   2a4f0:	lsr	r3, r3, #8
   2a4f4:	strb	r3, [r5, #18]
   2a4f8:	ldr	r3, [r4, #24]
   2a4fc:	strb	r3, [r5, #19]
   2a500:	ldrb	r3, [r4, #31]
   2a504:	strb	r3, [r5, #20]
   2a508:	ldrh	r3, [r4, #30]
   2a50c:	strb	r3, [r5, #21]
   2a510:	ldr	r3, [r4, #28]
   2a514:	lsr	r3, r3, #8
   2a518:	strb	r3, [r5, #22]
   2a51c:	ldr	r3, [r4, #28]
   2a520:	strb	r3, [r5, #23]
   2a524:	ldrb	r3, [r4, #35]	; 0x23
   2a528:	strb	r3, [r5, #24]
   2a52c:	ldrh	r3, [r4, #34]	; 0x22
   2a530:	strb	r3, [r5, #25]
   2a534:	ldr	r3, [r4, #32]
   2a538:	lsr	r3, r3, #8
   2a53c:	strb	r3, [r5, #26]
   2a540:	ldr	r3, [r4, #32]
   2a544:	strb	r3, [r5, #27]
   2a548:	ldrb	r3, [r4, #39]	; 0x27
   2a54c:	strb	r3, [r5, #28]
   2a550:	ldrh	r3, [r4, #38]	; 0x26
   2a554:	strb	r3, [r5, #29]
   2a558:	ldr	r3, [r4, #36]	; 0x24
   2a55c:	lsr	r3, r3, #8
   2a560:	strb	r3, [r5, #30]
   2a564:	ldr	r3, [r4, #36]	; 0x24
   2a568:	strb	r3, [r5, #31]
   2a56c:	ldr	r2, [sp, #12]
   2a570:	ldr	r3, [r6]
   2a574:	cmp	r2, r3
   2a578:	bne	2a584 <crc32@@Base+0x10de0>
   2a57c:	add	sp, sp, #16
   2a580:	pop	{r4, r5, r6, pc}
   2a584:	bl	12494 <__stack_chk_fail@plt>
   2a588:	push	{r4, r5, r6, lr}
   2a58c:	movw	r4, #61168	; 0xeef0
   2a590:	movt	r4, #4
   2a594:	subs	ip, r1, #0
   2a598:	sub	sp, sp, #112	; 0x70
   2a59c:	movw	r3, #58983	; 0xe667
   2a5a0:	ldr	r1, [r4]
   2a5a4:	movt	r3, #27145	; 0x6a09
   2a5a8:	add	r6, sp, #4
   2a5ac:	str	r3, [sp, #12]
   2a5b0:	mov	r5, r2
   2a5b4:	movw	r3, #44677	; 0xae85
   2a5b8:	str	r1, [sp, #108]	; 0x6c
   2a5bc:	movt	r3, #47975	; 0xbb67
   2a5c0:	str	r3, [sp, #16]
   2a5c4:	movw	r3, #62322	; 0xf372
   2a5c8:	movt	r3, #15470	; 0x3c6e
   2a5cc:	str	r3, [sp, #20]
   2a5d0:	movw	r3, #62778	; 0xf53a
   2a5d4:	movt	r3, #42319	; 0xa54f
   2a5d8:	str	r3, [sp, #24]
   2a5dc:	movw	r3, #21119	; 0x527f
   2a5e0:	movt	r3, #20750	; 0x510e
   2a5e4:	str	r3, [sp, #28]
   2a5e8:	movw	r3, #26764	; 0x688c
   2a5ec:	movt	r3, #39685	; 0x9b05
   2a5f0:	str	r3, [sp, #32]
   2a5f4:	movw	r3, #55723	; 0xd9ab
   2a5f8:	movt	r3, #8067	; 0x1f83
   2a5fc:	str	r3, [sp, #36]	; 0x24
   2a600:	movw	r3, #52505	; 0xcd19
   2a604:	movt	r3, #23520	; 0x5be0
   2a608:	str	r3, [sp, #40]	; 0x28
   2a60c:	mov	r3, #0
   2a610:	str	r3, [sp, #4]
   2a614:	str	r3, [sp, #8]
   2a618:	beq	2a62c <crc32@@Base+0x10e88>
   2a61c:	mov	r1, r0
   2a620:	mov	r2, ip
   2a624:	mov	r0, r6
   2a628:	bl	2a278 <crc32@@Base+0x10ad4>
   2a62c:	mov	r1, r5
   2a630:	mov	r0, r6
   2a634:	bl	2a3b0 <crc32@@Base+0x10c0c>
   2a638:	ldr	r2, [sp, #108]	; 0x6c
   2a63c:	ldr	r3, [r4]
   2a640:	cmp	r2, r3
   2a644:	bne	2a650 <crc32@@Base+0x10eac>
   2a648:	add	sp, sp, #112	; 0x70
   2a64c:	pop	{r4, r5, r6, pc}
   2a650:	bl	12494 <__stack_chk_fail@plt>
   2a654:	ldr	r0, [r0, #4]
   2a658:	cmp	r0, r3
   2a65c:	bgt	2a67c <crc32@@Base+0x10ed8>
   2a660:	ldr	r3, [r1]
   2a664:	mov	r0, r1
   2a668:	push	{r4, lr}
   2a66c:	str	r3, [r2]
   2a670:	bl	12128 <free@plt>
   2a674:	mov	r0, #0
   2a678:	pop	{r4, pc}
   2a67c:	mvn	r0, #0
   2a680:	bx	lr
   2a684:	ldr	r0, [r0, #4]
   2a688:	cmp	r0, r3
   2a68c:	bgt	2a6ac <crc32@@Base+0x10f08>
   2a690:	ldrh	r3, [r1]
   2a694:	mov	r0, r1
   2a698:	push	{r4, lr}
   2a69c:	strh	r3, [r2]
   2a6a0:	bl	12128 <free@plt>
   2a6a4:	mov	r0, #0
   2a6a8:	pop	{r4, pc}
   2a6ac:	mvn	r0, #0
   2a6b0:	bx	lr
   2a6b4:	push	{r4, lr}
   2a6b8:	mov	r4, r1
   2a6bc:	ldr	r0, [r4]
   2a6c0:	mov	r1, r2
   2a6c4:	mov	r2, r3
   2a6c8:	bl	197a4 <crc32@@Base>
   2a6cc:	str	r0, [r4]
   2a6d0:	mov	r0, #0
   2a6d4:	pop	{r4, pc}
   2a6d8:	push	{r4, lr}
   2a6dc:	mov	r0, #4
   2a6e0:	mov	r4, r1
   2a6e4:	bl	125a8 <malloc@plt>
   2a6e8:	mov	r3, #0
   2a6ec:	str	r0, [r4]
   2a6f0:	str	r3, [r0]
   2a6f4:	mov	r0, r3
   2a6f8:	pop	{r4, pc}
   2a6fc:	push	{r4, lr}
   2a700:	mov	r0, #2
   2a704:	mov	r4, r1
   2a708:	bl	125a8 <malloc@plt>
   2a70c:	mov	r3, #0
   2a710:	str	r0, [r4]
   2a714:	strh	r3, [r0]
   2a718:	mov	r0, r3
   2a71c:	pop	{r4, pc}
   2a720:	push	{r4, lr}
   2a724:	mov	r4, r1
   2a728:	ldrh	r0, [r4]
   2a72c:	mov	r1, r2
   2a730:	mov	r2, r3
   2a734:	bl	26568 <crc32@@Base+0xcdc4>
   2a738:	strh	r0, [r4]
   2a73c:	mov	r0, #0
   2a740:	pop	{r4, pc}
   2a744:	ldr	r0, [r0, #4]
   2a748:	cmp	r0, r3
   2a74c:	bgt	2a774 <crc32@@Base+0x10fd0>
   2a750:	push	{r4, lr}
   2a754:	mov	r4, r1
   2a758:	mov	r0, r4
   2a75c:	mov	r1, r2
   2a760:	bl	2a3b0 <crc32@@Base+0x10c0c>
   2a764:	mov	r0, r4
   2a768:	bl	12128 <free@plt>
   2a76c:	mov	r0, #0
   2a770:	pop	{r4, pc}
   2a774:	mvn	r0, #0
   2a778:	bx	lr
   2a77c:	mov	r0, r1
   2a780:	mov	r1, r2
   2a784:	push	{r4, lr}
   2a788:	mov	r2, r3
   2a78c:	bl	2a3a4 <crc32@@Base+0x10c00>
   2a790:	mov	r0, #0
   2a794:	pop	{r4, pc}
   2a798:	push	{r4, r5, r6, lr}
   2a79c:	mov	r0, #104	; 0x68
   2a7a0:	mov	r4, r1
   2a7a4:	bl	125a8 <malloc@plt>
   2a7a8:	mov	r5, r0
   2a7ac:	bl	2a344 <crc32@@Base+0x10ba0>
   2a7b0:	str	r5, [r4]
   2a7b4:	mov	r0, #0
   2a7b8:	pop	{r4, r5, r6, pc}
   2a7bc:	ldr	r0, [r0, #4]
   2a7c0:	cmp	r0, r3
   2a7c4:	bgt	2a7ec <crc32@@Base+0x11048>
   2a7c8:	push	{r4, lr}
   2a7cc:	mov	r4, r1
   2a7d0:	mov	r0, r4
   2a7d4:	mov	r1, r2
   2a7d8:	bl	27b2c <crc32@@Base+0xe388>
   2a7dc:	mov	r0, r4
   2a7e0:	bl	12128 <free@plt>
   2a7e4:	mov	r0, #0
   2a7e8:	pop	{r4, pc}
   2a7ec:	mvn	r0, #0
   2a7f0:	bx	lr
   2a7f4:	mov	r0, r1
   2a7f8:	mov	r1, r2
   2a7fc:	push	{r4, lr}
   2a800:	mov	r2, r3
   2a804:	bl	27b20 <crc32@@Base+0xe37c>
   2a808:	mov	r0, #0
   2a80c:	pop	{r4, pc}
   2a810:	push	{r4, r5, r6, lr}
   2a814:	mov	r0, #92	; 0x5c
   2a818:	mov	r4, r1
   2a81c:	bl	125a8 <malloc@plt>
   2a820:	mov	r5, r0
   2a824:	bl	27adc <crc32@@Base+0xe338>
   2a828:	str	r5, [r4]
   2a82c:	mov	r0, #0
   2a830:	pop	{r4, r5, r6, pc}
   2a834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a838:	movw	r5, #64408	; 0xfb98
   2a83c:	movt	r5, #4
   2a840:	mov	r8, r0
   2a844:	mov	r9, r1
   2a848:	mov	r4, #0
   2a84c:	mov	r7, #28
   2a850:	mul	r6, r7, r4
   2a854:	mov	r0, r8
   2a858:	add	r4, r4, #1
   2a85c:	ldr	r1, [r5, r6]
   2a860:	bl	1265c <strcmp@plt>
   2a864:	cmp	r0, #0
   2a868:	beq	2a87c <crc32@@Base+0x110d8>
   2a86c:	cmp	r4, #4
   2a870:	bne	2a850 <crc32@@Base+0x110ac>
   2a874:	mvn	r0, #92	; 0x5c
   2a878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a87c:	add	r5, r5, r6
   2a880:	str	r5, [r9]
   2a884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a888:	push	{r4, r5, r6, r7, r8, lr}
   2a88c:	mov	r6, r0
   2a890:	ldr	r4, [pc, #84]	; 2a8ec <crc32@@Base+0x11148>
   2a894:	mov	r7, r1
   2a898:	mov	r5, #0
   2a89c:	ldr	r1, [r4, #-16]
   2a8a0:	mov	r0, r6
   2a8a4:	bl	1265c <strcmp@plt>
   2a8a8:	cmp	r0, #0
   2a8ac:	bne	2a8bc <crc32@@Base+0x11118>
   2a8b0:	ldr	r3, [r4]
   2a8b4:	cmp	r3, #0
   2a8b8:	bne	2a8d4 <crc32@@Base+0x11130>
   2a8bc:	add	r5, r5, #1
   2a8c0:	add	r4, r4, #28
   2a8c4:	cmp	r5, #4
   2a8c8:	bne	2a89c <crc32@@Base+0x110f8>
   2a8cc:	mvn	r0, #92	; 0x5c
   2a8d0:	pop	{r4, r5, r6, r7, r8, pc}
   2a8d4:	movw	r3, #64408	; 0xfb98
   2a8d8:	movt	r3, #4
   2a8dc:	mov	r2, #28
   2a8e0:	mla	r5, r2, r5, r3
   2a8e4:	str	r5, [r7]
   2a8e8:	pop	{r4, r5, r6, r7, r8, pc}
   2a8ec:	andeq	pc, r4, r8, lsr #23
   2a8f0:	subs	r0, r0, #11
   2a8f4:	movne	r0, #1
   2a8f8:	bx	lr
   2a8fc:	ldr	r3, [r0]
   2a900:	mov	r0, #60672	; 0xed00
   2a904:	movt	r0, #41388	; 0xa1ac
   2a908:	bic	r3, r3, #255	; 0xff
   2a90c:	subs	r0, r3, r0
   2a910:	mvnne	r0, #0
   2a914:	bx	lr
   2a918:	push	{r4, lr}
   2a91c:	mov	r4, r0
   2a920:	movw	r0, #48948	; 0xbf34
   2a924:	movt	r0, #3
   2a928:	bl	1226c <puts@plt>
   2a92c:	ldr	r2, [r4]
   2a930:	movw	r1, #48984	; 0xbf58
   2a934:	mov	r0, #1
   2a938:	movt	r1, #3
   2a93c:	bl	12770 <__printf_chk@plt>
   2a940:	ldr	r2, [r4, #4]
   2a944:	movw	r1, #49004	; 0xbf6c
   2a948:	mov	r0, #1
   2a94c:	movt	r1, #3
   2a950:	bl	12770 <__printf_chk@plt>
   2a954:	ldr	r2, [r4, #8]
   2a958:	movw	r1, #49024	; 0xbf80
   2a95c:	mov	r0, #1
   2a960:	movt	r1, #3
   2a964:	bl	12770 <__printf_chk@plt>
   2a968:	ldr	r2, [r4, #12]
   2a96c:	movw	r1, #49044	; 0xbf94
   2a970:	mov	r0, #1
   2a974:	movt	r1, #3
   2a978:	bl	12770 <__printf_chk@plt>
   2a97c:	ldr	r2, [r4, #16]
   2a980:	movw	r1, #49064	; 0xbfa8
   2a984:	mov	r0, #1
   2a988:	movt	r1, #3
   2a98c:	pop	{r4, lr}
   2a990:	b	12770 <__printf_chk@plt>
   2a994:	cmp	r0, #0
   2a998:	beq	2aa1c <crc32@@Base+0x11278>
   2a99c:	ldr	r3, [r0, #64]	; 0x40
   2a9a0:	ldrb	r3, [r3]
   2a9a4:	cmp	r3, #0
   2a9a8:	beq	2a9f0 <crc32@@Base+0x1124c>
   2a9ac:	ldr	r3, [r0]
   2a9b0:	ldr	r2, [r0, #8]
   2a9b4:	cmp	r3, #0
   2a9b8:	beq	2a9d8 <crc32@@Base+0x11234>
   2a9bc:	cmp	r2, #0
   2a9c0:	bne	2a9d0 <crc32@@Base+0x1122c>
   2a9c4:	ldr	r3, [r0, #16]
   2a9c8:	cmp	r3, #0
   2a9cc:	beq	2a9e0 <crc32@@Base+0x1123c>
   2a9d0:	mov	r0, #1
   2a9d4:	bx	lr
   2a9d8:	cmp	r2, #0
   2a9dc:	bne	2a9c4 <crc32@@Base+0x11220>
   2a9e0:	ldr	r0, [r0, #28]
   2a9e4:	adds	r0, r0, #0
   2a9e8:	movne	r0, #1
   2a9ec:	bx	lr
   2a9f0:	movw	r1, #65044	; 0xfe14
   2a9f4:	movt	r1, #4
   2a9f8:	ldr	r3, [r0, #80]	; 0x50
   2a9fc:	movw	r2, #49084	; 0xbfbc
   2aa00:	push	{r4, lr}
   2aa04:	movt	r2, #3
   2aa08:	ldr	r0, [r1]
   2aa0c:	mov	r1, #1
   2aa10:	bl	122b4 <__fprintf_chk@plt>
   2aa14:	mvn	r0, #0
   2aa18:	pop	{r4, pc}
   2aa1c:	mvn	r0, #0
   2aa20:	bx	lr
   2aa24:	push	{r4, r5, r6, r7, r8, lr}
   2aa28:	movw	r4, #61168	; 0xeef0
   2aa2c:	movt	r4, #4
   2aa30:	sub	sp, sp, #16
   2aa34:	mov	r5, r0
   2aa38:	mov	r8, r1
   2aa3c:	ldr	r3, [r4]
   2aa40:	mov	r7, r2
   2aa44:	str	r3, [sp, #12]
   2aa48:	bl	1268c <__errno_location@plt>
   2aa4c:	mov	r3, #0
   2aa50:	mov	r2, #16
   2aa54:	add	r1, sp, #8
   2aa58:	mov	r6, r0
   2aa5c:	mov	r0, r5
   2aa60:	str	r3, [r6]
   2aa64:	bl	122cc <strtoul@plt>
   2aa68:	ldr	r3, [r6]
   2aa6c:	cmp	r3, #0
   2aa70:	bne	2aa98 <crc32@@Base+0x112f4>
   2aa74:	ldr	r3, [sp, #8]
   2aa78:	cmp	r3, r5
   2aa7c:	beq	2aa98 <crc32@@Base+0x112f4>
   2aa80:	ldr	r2, [sp, #12]
   2aa84:	ldr	r3, [r4]
   2aa88:	cmp	r2, r3
   2aa8c:	bne	2aac8 <crc32@@Base+0x11324>
   2aa90:	add	sp, sp, #16
   2aa94:	pop	{r4, r5, r6, r7, r8, pc}
   2aa98:	movw	r1, #65044	; 0xfe14
   2aa9c:	movt	r1, #4
   2aaa0:	str	r5, [sp, #4]
   2aaa4:	mov	r3, r8
   2aaa8:	str	r7, [sp]
   2aaac:	movw	r2, #25540	; 0x63c4
   2aab0:	ldr	r0, [r1]
   2aab4:	movt	r2, #3
   2aab8:	mov	r1, #1
   2aabc:	bl	122b4 <__fprintf_chk@plt>
   2aac0:	mov	r0, #1
   2aac4:	bl	121f4 <exit@plt>
   2aac8:	bl	12494 <__stack_chk_fail@plt>
   2aacc:	movw	r2, #61168	; 0xeef0
   2aad0:	movt	r2, #4
   2aad4:	ldr	ip, [r3, #64]	; 0x40
   2aad8:	movw	r1, #49540	; 0xc184
   2aadc:	ldr	r3, [r2]
   2aae0:	movt	r1, #3
   2aae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aae8:	sub	sp, sp, #52	; 0x34
   2aaec:	mov	r9, r0
   2aaf0:	mov	r0, ip
   2aaf4:	str	r2, [sp, #20]
   2aaf8:	mov	r2, #0
   2aafc:	str	r3, [sp, #44]	; 0x2c
   2ab00:	str	r2, [sp, #28]
   2ab04:	str	ip, [sp, #12]
   2ab08:	bl	1232c <fopen@plt>
   2ab0c:	subs	r3, r0, #0
   2ab10:	str	r3, [sp, #8]
   2ab14:	addne	r1, r9, #2048	; 0x800
   2ab18:	movne	r3, r9
   2ab1c:	mvnne	r2, #0
   2ab20:	beq	2aed8 <crc32@@Base+0x11734>
   2ab24:	strb	r2, [r3], #1
   2ab28:	cmp	r3, r1
   2ab2c:	bne	2ab24 <crc32@@Base+0x11380>
   2ab30:	movw	r8, #64520	; 0xfc08
   2ab34:	movw	fp, #25472	; 0x6380
   2ab38:	movw	r5, #25476	; 0x6384
   2ab3c:	movt	r8, #4
   2ab40:	movt	fp, #3
   2ab44:	movt	r5, #3
   2ab48:	mov	r7, #0
   2ab4c:	mov	r3, #60672	; 0xed00
   2ab50:	movt	r3, #41388	; 0xa1ac
   2ab54:	str	r3, [sp, #16]
   2ab58:	ldr	r3, [sp, #8]
   2ab5c:	mov	r2, #10
   2ab60:	add	r1, sp, #40	; 0x28
   2ab64:	add	r0, sp, #28
   2ab68:	bl	12134 <__getdelim@plt>
   2ab6c:	cmp	r0, #0
   2ab70:	ble	2ae70 <crc32@@Base+0x116cc>
   2ab74:	add	r2, sp, #32
   2ab78:	mov	r1, fp
   2ab7c:	ldr	r0, [sp, #28]
   2ab80:	add	r7, r7, #1
   2ab84:	bl	12224 <__strtok_r@plt>
   2ab88:	cmp	r0, #0
   2ab8c:	beq	2ab58 <crc32@@Base+0x113b4>
   2ab90:	mov	sl, #0
   2ab94:	str	r0, [sp, #28]
   2ab98:	mov	r6, sl
   2ab9c:	add	r2, sp, #36	; 0x24
   2aba0:	mov	r1, r5
   2aba4:	bl	12224 <__strtok_r@plt>
   2aba8:	subs	r4, r0, #0
   2abac:	beq	2ab58 <crc32@@Base+0x113b4>
   2abb0:	ldrb	r3, [r4]
   2abb4:	cmp	r3, #35	; 0x23
   2abb8:	beq	2ab58 <crc32@@Base+0x113b4>
   2abbc:	cmp	r6, #0
   2abc0:	bne	2ae94 <crc32@@Base+0x116f0>
   2abc4:	movw	r1, #49168	; 0xc010
   2abc8:	mov	r2, r4
   2abcc:	movt	r1, #3
   2abd0:	mov	r0, r8
   2abd4:	bl	1a620 <crc32@@Base+0xe7c>
   2abd8:	subs	sl, r0, #0
   2abdc:	blt	2aea8 <crc32@@Base+0x11704>
   2abe0:	mov	r0, r6
   2abe4:	add	r2, sp, #36	; 0x24
   2abe8:	mov	r1, r5
   2abec:	str	r6, [sp, #28]
   2abf0:	bl	12224 <__strtok_r@plt>
   2abf4:	subs	r4, r0, #0
   2abf8:	beq	2ab58 <crc32@@Base+0x113b4>
   2abfc:	ldrb	r3, [r4]
   2ac00:	cmp	r3, #35	; 0x23
   2ac04:	beq	2ab58 <crc32@@Base+0x113b4>
   2ac08:	sub	r3, sl, #1
   2ac0c:	cmp	r3, #5
   2ac10:	ldrls	pc, [pc, r3, lsl #2]
   2ac14:	b	2ae3c <crc32@@Base+0x11698>
   2ac18:	ldrdeq	sl, [r2], -r4
   2ac1c:	andeq	sl, r2, ip, asr #27
   2ac20:	muleq	r2, r4, sp
   2ac24:	andeq	sl, r2, r4, lsl #28
   2ac28:	andeq	sl, r2, r0, lsr ip
   2ac2c:	andeq	sl, r2, ip, asr sp
   2ac30:	mov	r0, r4
   2ac34:	mov	r2, r7
   2ac38:	ldr	r1, [sp, #12]
   2ac3c:	mov	r4, #0
   2ac40:	bl	2aa24 <crc32@@Base+0x11280>
   2ac44:	add	r2, sp, #36	; 0x24
   2ac48:	mov	r1, r5
   2ac4c:	str	r4, [sp, #28]
   2ac50:	str	r0, [r9, #16]
   2ac54:	mov	r0, r4
   2ac58:	bl	12224 <__strtok_r@plt>
   2ac5c:	cmp	r0, #0
   2ac60:	beq	2ab58 <crc32@@Base+0x113b4>
   2ac64:	ldrb	r3, [r0]
   2ac68:	cmp	r3, #35	; 0x23
   2ac6c:	beq	2ab58 <crc32@@Base+0x113b4>
   2ac70:	add	r2, sp, #36	; 0x24
   2ac74:	mov	r1, r5
   2ac78:	mov	r0, r4
   2ac7c:	str	r4, [sp, #28]
   2ac80:	bl	12224 <__strtok_r@plt>
   2ac84:	cmp	r0, #0
   2ac88:	beq	2ab58 <crc32@@Base+0x113b4>
   2ac8c:	ldrb	r3, [r0]
   2ac90:	cmp	r3, #35	; 0x23
   2ac94:	beq	2ab58 <crc32@@Base+0x113b4>
   2ac98:	mov	r0, r4
   2ac9c:	add	r2, sp, #36	; 0x24
   2aca0:	mov	r1, r5
   2aca4:	str	r4, [sp, #28]
   2aca8:	bl	12224 <__strtok_r@plt>
   2acac:	cmp	r0, #0
   2acb0:	beq	2ab58 <crc32@@Base+0x113b4>
   2acb4:	ldrb	r3, [r0]
   2acb8:	cmp	r3, #35	; 0x23
   2acbc:	beq	2ab58 <crc32@@Base+0x113b4>
   2acc0:	mov	r6, #4
   2acc4:	mov	r0, #0
   2acc8:	add	r6, r6, #1
   2accc:	str	r0, [sp, #28]
   2acd0:	b	2ab9c <crc32@@Base+0x113f8>
   2acd4:	movw	r1, #49188	; 0xc024
   2acd8:	mov	r2, r4
   2acdc:	movt	r1, #3
   2ace0:	ldr	r0, [pc, #588]	; 2af34 <crc32@@Base+0x11790>
   2ace4:	bl	1a620 <crc32@@Base+0xe7c>
   2ace8:	cmn	r0, #1
   2acec:	str	r0, [r9]
   2acf0:	beq	2af04 <crc32@@Base+0x11760>
   2acf4:	ldr	r3, [r8, #108]	; 0x6c
   2acf8:	mov	r1, r5
   2acfc:	ldr	r2, [sp, #16]
   2ad00:	cmp	r3, #1
   2ad04:	mov	r3, #0
   2ad08:	add	r0, r0, r2
   2ad0c:	add	r2, sp, #36	; 0x24
   2ad10:	str	r0, [r9]
   2ad14:	mov	r0, r3
   2ad18:	bne	2aea0 <crc32@@Base+0x116fc>
   2ad1c:	str	r3, [sp, #28]
   2ad20:	bl	12224 <__strtok_r@plt>
   2ad24:	cmp	r0, #0
   2ad28:	beq	2ab58 <crc32@@Base+0x113b4>
   2ad2c:	ldrb	r3, [r0]
   2ad30:	cmp	r3, #35	; 0x23
   2ad34:	beq	2ab58 <crc32@@Base+0x113b4>
   2ad38:	mov	r4, #0
   2ad3c:	add	r2, sp, #36	; 0x24
   2ad40:	mov	r0, r4
   2ad44:	mov	r1, r5
   2ad48:	str	r4, [sp, #28]
   2ad4c:	bl	12224 <__strtok_r@plt>
   2ad50:	cmp	r0, #0
   2ad54:	bne	2ac8c <crc32@@Base+0x114e8>
   2ad58:	b	2ab58 <crc32@@Base+0x113b4>
   2ad5c:	mov	r0, r4
   2ad60:	mov	r2, r7
   2ad64:	ldr	r1, [sp, #12]
   2ad68:	mov	r4, #0
   2ad6c:	bl	2aa24 <crc32@@Base+0x11280>
   2ad70:	add	r2, sp, #36	; 0x24
   2ad74:	mov	r1, r5
   2ad78:	str	r4, [sp, #28]
   2ad7c:	str	r0, [r9, #20]
   2ad80:	mov	r0, r4
   2ad84:	bl	12224 <__strtok_r@plt>
   2ad88:	cmp	r0, #0
   2ad8c:	bne	2ac64 <crc32@@Base+0x114c0>
   2ad90:	b	2ab58 <crc32@@Base+0x113b4>
   2ad94:	mov	r0, r4
   2ad98:	mov	r2, r7
   2ad9c:	ldr	r1, [sp, #12]
   2ada0:	mov	r4, #0
   2ada4:	bl	2aa24 <crc32@@Base+0x11280>
   2ada8:	add	r2, sp, #36	; 0x24
   2adac:	mov	r1, r5
   2adb0:	str	r4, [sp, #28]
   2adb4:	str	r0, [r9, #8]
   2adb8:	mov	r0, r4
   2adbc:	bl	12224 <__strtok_r@plt>
   2adc0:	cmp	r0, #0
   2adc4:	bne	2ac64 <crc32@@Base+0x114c0>
   2adc8:	b	2ab58 <crc32@@Base+0x113b4>
   2adcc:	mov	r0, r4
   2add0:	mov	r2, r7
   2add4:	ldr	r1, [sp, #12]
   2add8:	mov	r4, #0
   2addc:	bl	2aa24 <crc32@@Base+0x11280>
   2ade0:	add	r2, sp, #36	; 0x24
   2ade4:	mov	r1, r5
   2ade8:	str	r4, [sp, #28]
   2adec:	str	r0, [r9, #4]
   2adf0:	mov	r0, r4
   2adf4:	bl	12224 <__strtok_r@plt>
   2adf8:	cmp	r0, #0
   2adfc:	bne	2ac64 <crc32@@Base+0x114c0>
   2ae00:	b	2ab58 <crc32@@Base+0x113b4>
   2ae04:	mov	r0, r4
   2ae08:	mov	r2, r7
   2ae0c:	ldr	r1, [sp, #12]
   2ae10:	mov	r4, #0
   2ae14:	bl	2aa24 <crc32@@Base+0x11280>
   2ae18:	add	r2, sp, #36	; 0x24
   2ae1c:	mov	r1, r5
   2ae20:	str	r4, [sp, #28]
   2ae24:	str	r0, [r9, #12]
   2ae28:	mov	r0, r4
   2ae2c:	bl	12224 <__strtok_r@plt>
   2ae30:	cmp	r0, #0
   2ae34:	bne	2ac64 <crc32@@Base+0x114c0>
   2ae38:	b	2ab58 <crc32@@Base+0x113b4>
   2ae3c:	mov	r3, #0
   2ae40:	add	r2, sp, #36	; 0x24
   2ae44:	mov	r0, r3
   2ae48:	mov	r1, r5
   2ae4c:	str	r3, [sp, #28]
   2ae50:	bl	12224 <__strtok_r@plt>
   2ae54:	cmp	r0, #0
   2ae58:	beq	2ab58 <crc32@@Base+0x113b4>
   2ae5c:	ldrb	r3, [r0]
   2ae60:	cmp	r3, #35	; 0x23
   2ae64:	beq	2ab58 <crc32@@Base+0x113b4>
   2ae68:	mov	r6, #2
   2ae6c:	b	2acc4 <crc32@@Base+0x11520>
   2ae70:	ldr	r0, [sp, #8]
   2ae74:	bl	125fc <fclose@plt>
   2ae78:	ldr	r3, [sp, #20]
   2ae7c:	ldr	r2, [sp, #44]	; 0x2c
   2ae80:	ldr	r3, [r3]
   2ae84:	cmp	r2, r3
   2ae88:	bne	2af00 <crc32@@Base+0x1175c>
   2ae8c:	add	sp, sp, #52	; 0x34
   2ae90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae94:	cmp	r6, #1
   2ae98:	bne	2acc4 <crc32@@Base+0x11520>
   2ae9c:	b	2ac08 <crc32@@Base+0x11464>
   2aea0:	str	r3, [r8, #108]	; 0x6c
   2aea4:	b	2ad1c <crc32@@Base+0x11578>
   2aea8:	movw	r1, #65044	; 0xfe14
   2aeac:	movt	r1, #4
   2aeb0:	str	r4, [sp, #4]
   2aeb4:	movw	r2, #25500	; 0x639c
   2aeb8:	str	r7, [sp]
   2aebc:	movt	r2, #3
   2aec0:	ldr	r0, [r1]
   2aec4:	mov	r1, #1
   2aec8:	ldr	r3, [sp, #12]
   2aecc:	bl	122b4 <__fprintf_chk@plt>
   2aed0:	mov	r0, #1
   2aed4:	bl	121f4 <exit@plt>
   2aed8:	movw	r1, #65044	; 0xfe14
   2aedc:	movt	r1, #4
   2aee0:	ldr	r3, [sp, #12]
   2aee4:	movw	r2, #37692	; 0x933c
   2aee8:	ldr	r0, [r1]
   2aeec:	movt	r2, #3
   2aef0:	mov	r1, #1
   2aef4:	bl	122b4 <__fprintf_chk@plt>
   2aef8:	mov	r0, #1
   2aefc:	bl	121f4 <exit@plt>
   2af00:	bl	12494 <__stack_chk_fail@plt>
   2af04:	movw	r1, #65044	; 0xfe14
   2af08:	movt	r1, #4
   2af0c:	str	r4, [sp, #4]
   2af10:	movw	r2, #49216	; 0xc040
   2af14:	str	r7, [sp]
   2af18:	movt	r2, #3
   2af1c:	ldr	r0, [r1]
   2af20:	mov	r1, #1
   2af24:	ldr	r3, [sp, #12]
   2af28:	bl	122b4 <__fprintf_chk@plt>
   2af2c:	mov	r0, #1
   2af30:	bl	121f4 <exit@plt>
   2af34:	andeq	pc, r4, ip, asr ip	; <UNPREDICTABLE>
   2af38:	cmp	r1, #2240	; 0x8c0
   2af3c:	bcc	2afd0 <crc32@@Base+0x1182c>
   2af40:	ldr	r3, [r0, #56]	; 0x38
   2af44:	cmp	r3, #0
   2af48:	bne	2afd0 <crc32@@Base+0x1182c>
   2af4c:	ldr	r3, [r0, #68]	; 0x44
   2af50:	cmp	r3, #0
   2af54:	bne	2afd0 <crc32@@Base+0x1182c>
   2af58:	ldr	r2, [r0, #32]
   2af5c:	movw	r3, #21862	; 0x5566
   2af60:	movt	r3, #43673	; 0xaa99
   2af64:	cmp	r2, r3
   2af68:	bne	2afd0 <crc32@@Base+0x1182c>
   2af6c:	ldr	r2, [r0, #36]	; 0x24
   2af70:	movw	r3, #20056	; 0x4e58
   2af74:	movt	r3, #22604	; 0x584c
   2af78:	cmp	r2, r3
   2af7c:	bne	2afd0 <crc32@@Base+0x1182c>
   2af80:	ldr	ip, [r0, #44]	; 0x2c
   2af84:	movw	r3, #41918	; 0xa3be
   2af88:	ldr	r2, [r0, #40]	; 0x28
   2af8c:	movt	r3, #741	; 0x2e5
   2af90:	ldr	r1, [r0, #48]	; 0x30
   2af94:	add	r2, r2, ip
   2af98:	ldr	ip, [r0, #60]	; 0x3c
   2af9c:	push	{lr}		; (str lr, [sp, #-4]!)
   2afa0:	add	r3, r2, r3
   2afa4:	ldr	lr, [r0, #52]	; 0x34
   2afa8:	add	r3, r3, r1
   2afac:	ldr	r1, [r0, #64]	; 0x40
   2afb0:	add	r3, r3, lr
   2afb4:	ldr	r2, [r0, #72]	; 0x48
   2afb8:	add	r0, r3, ip
   2afbc:	add	r0, r0, r1
   2afc0:	mvn	r0, r0
   2afc4:	subs	r0, r2, r0
   2afc8:	mvnne	r0, #0
   2afcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2afd0:	mvn	r0, #0
   2afd4:	bx	lr
   2afd8:	subs	r0, r0, #26
   2afdc:	movne	r0, #1
   2afe0:	bx	lr
   2afe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2afe8:	movw	r5, #61168	; 0xeef0
   2afec:	movt	r5, #4
   2aff0:	sub	sp, sp, #104	; 0x68
   2aff4:	subs	r4, r0, #0
   2aff8:	ldr	r2, [r5]
   2affc:	str	r2, [sp, #100]	; 0x64
   2b000:	beq	2b078 <crc32@@Base+0x118d4>
   2b004:	add	ip, r4, #2048	; 0x800
   2b008:	mov	r2, r4
   2b00c:	mvn	r0, #0
   2b010:	movw	lr, #21862	; 0x5566
   2b014:	movt	lr, #43673	; 0xaa99
   2b018:	str	lr, [r4, #32]
   2b01c:	movw	lr, #20056	; 0x4e58
   2b020:	movt	lr, #22604	; 0x584c
   2b024:	str	lr, [r4, #36]	; 0x24
   2b028:	movw	lr, #65534	; 0xfffe
   2b02c:	movt	lr, #60159	; 0xeaff
   2b030:	str	lr, [r4]
   2b034:	str	lr, [r4, #4]
   2b038:	str	lr, [r4, #8]
   2b03c:	str	lr, [r4, #12]
   2b040:	str	lr, [r4, #16]
   2b044:	str	lr, [r4, #20]
   2b048:	str	lr, [r4, #24]
   2b04c:	str	lr, [r4, #28]
   2b050:	mov	lr, #0
   2b054:	str	lr, [r4, #40]	; 0x28
   2b058:	str	r0, [r2, #160]	; 0xa0
   2b05c:	add	r2, r2, #8
   2b060:	str	r0, [r2, #156]	; 0x9c
   2b064:	cmp	r2, ip
   2b068:	bne	2b058 <crc32@@Base+0x118b4>
   2b06c:	mov	r2, #0
   2b070:	str	r2, [r4, #56]	; 0x38
   2b074:	str	r2, [r4, #68]	; 0x44
   2b078:	ldr	ip, [r3, #4]
   2b07c:	mov	r0, #2240	; 0x8c0
   2b080:	ldr	r2, [r1, #44]	; 0x2c
   2b084:	mov	r1, #0
   2b088:	cmp	ip, #0
   2b08c:	str	r1, [r4, #60]	; 0x3c
   2b090:	ldr	r6, [r3, #68]	; 0x44
   2b094:	ldrne	r1, [r3, #60]	; 0x3c
   2b098:	str	r0, [r4, #48]	; 0x30
   2b09c:	str	r2, [r4, #52]	; 0x34
   2b0a0:	strne	r1, [r4, #60]	; 0x3c
   2b0a4:	str	r2, [r4, #64]	; 0x40
   2b0a8:	ldrb	r3, [r6]
   2b0ac:	cmp	r3, #0
   2b0b0:	moveq	r0, r2
   2b0b4:	moveq	lr, #2240	; 0x8c0
   2b0b8:	bne	2b11c <crc32@@Base+0x11978>
   2b0bc:	ldr	ip, [r4, #36]	; 0x24
   2b0c0:	ldr	r3, [r4, #32]
   2b0c4:	ldr	r1, [r4, #40]	; 0x28
   2b0c8:	add	r3, r3, ip
   2b0cc:	ldr	ip, [r4, #44]	; 0x2c
   2b0d0:	add	r3, r3, r1
   2b0d4:	ldr	r1, [r4, #56]	; 0x38
   2b0d8:	add	r3, r3, ip
   2b0dc:	ldr	ip, [r4, #60]	; 0x3c
   2b0e0:	add	r3, r3, r1
   2b0e4:	ldr	r1, [r4, #68]	; 0x44
   2b0e8:	add	r3, r3, ip
   2b0ec:	ldr	ip, [sp, #100]	; 0x64
   2b0f0:	add	r3, r3, r1
   2b0f4:	ldr	r1, [r5]
   2b0f8:	add	r3, r3, lr
   2b0fc:	add	r3, r3, r2
   2b100:	cmp	ip, r1
   2b104:	add	r3, r3, r0
   2b108:	mvn	r3, r3
   2b10c:	str	r3, [r4, #72]	; 0x48
   2b110:	bne	2b224 <crc32@@Base+0x11a80>
   2b114:	add	sp, sp, #104	; 0x68
   2b118:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b11c:	movw	r1, #49540	; 0xc184
   2b120:	mov	r0, r6
   2b124:	movt	r1, #3
   2b128:	bl	1232c <fopen@plt>
   2b12c:	subs	r7, r0, #0
   2b130:	beq	2b1fc <crc32@@Base+0x11a58>
   2b134:	bl	12488 <fileno@plt>
   2b138:	add	r2, sp, #8
   2b13c:	mov	r1, r0
   2b140:	mov	r0, #3
   2b144:	bl	12554 <__fxstat@plt>
   2b148:	cmp	r0, #0
   2b14c:	bne	2b1e4 <crc32@@Base+0x11a40>
   2b150:	ldr	r3, [sp, #24]
   2b154:	and	r3, r3, #61440	; 0xf000
   2b158:	cmp	r3, #32768	; 0x8000
   2b15c:	bne	2b1e4 <crc32@@Base+0x11a40>
   2b160:	movw	sl, #49580	; 0xc1ac
   2b164:	movw	r9, #49588	; 0xc1b4
   2b168:	movt	sl, #3
   2b16c:	movt	r9, #3
   2b170:	mov	r8, sp
   2b174:	mov	r6, r0
   2b178:	add	r3, sp, #4
   2b17c:	mov	r1, sl
   2b180:	mov	r2, r8
   2b184:	mov	r0, r7
   2b188:	bl	12074 <fscanf@plt>
   2b18c:	cmp	r0, #2
   2b190:	addeq	r3, r6, #20
   2b194:	addeq	r6, r6, #1
   2b198:	ldmeq	r8, {r0, r1}
   2b19c:	addeq	r3, r4, r3, lsl #3
   2b1a0:	stmeq	r3, {r0, r1}
   2b1a4:	mov	r1, r9
   2b1a8:	mov	r0, r7
   2b1ac:	bl	12074 <fscanf@plt>
   2b1b0:	cmp	r6, #255	; 0xff
   2b1b4:	movhi	r3, #0
   2b1b8:	movls	r3, #1
   2b1bc:	cmn	r0, #1
   2b1c0:	moveq	r3, #0
   2b1c4:	cmp	r3, #0
   2b1c8:	bne	2b178 <crc32@@Base+0x119d4>
   2b1cc:	mov	r0, r7
   2b1d0:	bl	125fc <fclose@plt>
   2b1d4:	ldr	lr, [r4, #48]	; 0x30
   2b1d8:	ldr	r2, [r4, #52]	; 0x34
   2b1dc:	ldr	r0, [r4, #64]	; 0x40
   2b1e0:	b	2b0bc <crc32@@Base+0x11918>
   2b1e4:	mov	r0, r7
   2b1e8:	bl	125fc <fclose@plt>
   2b1ec:	ldr	lr, [r4, #48]	; 0x30
   2b1f0:	ldr	r2, [r4, #52]	; 0x34
   2b1f4:	ldr	r0, [r4, #64]	; 0x40
   2b1f8:	b	2b0bc <crc32@@Base+0x11918>
   2b1fc:	movw	r1, #65044	; 0xfe14
   2b200:	movt	r1, #4
   2b204:	mov	r3, r6
   2b208:	movw	r2, #49544	; 0xc188
   2b20c:	ldr	r0, [r1]
   2b210:	movt	r2, #3
   2b214:	mov	r1, #1
   2b218:	bl	122b4 <__fprintf_chk@plt>
   2b21c:	mov	r0, #1
   2b220:	bl	121f4 <exit@plt>
   2b224:	bl	12494 <__stack_chk_fail@plt>
   2b228:	push	{r4, r5, r6, r7, r8, lr}
   2b22c:	mov	r4, r0
   2b230:	movw	r0, #49596	; 0xc1bc
   2b234:	movt	r0, #3
   2b238:	bl	1226c <puts@plt>
   2b23c:	ldr	r2, [r4, #48]	; 0x30
   2b240:	movw	r1, #49644	; 0xc1ec
   2b244:	mov	r0, #1
   2b248:	movt	r1, #3
   2b24c:	movw	r8, #65534	; 0xfffe
   2b250:	bl	12770 <__printf_chk@plt>
   2b254:	ldr	r3, [r4, #64]	; 0x40
   2b258:	ldr	r2, [r4, #52]	; 0x34
   2b25c:	movw	r1, #49668	; 0xc204
   2b260:	mov	r0, #1
   2b264:	movt	r1, #3
   2b268:	bl	12770 <__printf_chk@plt>
   2b26c:	ldr	r2, [r4, #60]	; 0x3c
   2b270:	movw	r1, #47496	; 0xb988
   2b274:	mov	r0, #1
   2b278:	movt	r1, #3
   2b27c:	movw	r7, #49740	; 0xc24c
   2b280:	bl	12770 <__printf_chk@plt>
   2b284:	ldr	r2, [r4, #44]	; 0x2c
   2b288:	movw	r1, #49716	; 0xc234
   2b28c:	mov	r0, #1
   2b290:	movt	r1, #3
   2b294:	sub	r6, r4, #4
   2b298:	bl	12770 <__printf_chk@plt>
   2b29c:	ldr	r2, [r4, #72]	; 0x48
   2b2a0:	movw	r1, #47544	; 0xb9b8
   2b2a4:	mov	r0, #1
   2b2a8:	movt	r1, #3
   2b2ac:	movt	r8, #60159	; 0xeaff
   2b2b0:	bl	12770 <__printf_chk@plt>
   2b2b4:	movt	r7, #3
   2b2b8:	mov	r5, #0
   2b2bc:	ldr	r3, [r6, #4]!
   2b2c0:	mov	r2, r5
   2b2c4:	mov	r0, #1
   2b2c8:	mov	r1, r7
   2b2cc:	cmp	r3, r8
   2b2d0:	add	r5, r5, r0
   2b2d4:	beq	2b2dc <crc32@@Base+0x11b38>
   2b2d8:	bl	12770 <__printf_chk@plt>
   2b2dc:	cmp	r5, #8
   2b2e0:	bne	2b2bc <crc32@@Base+0x11b18>
   2b2e4:	movw	r6, #49820	; 0xc29c
   2b2e8:	movw	r7, #49788	; 0xc27c
   2b2ec:	movt	r6, #3
   2b2f0:	movt	r7, #3
   2b2f4:	mov	r5, #0
   2b2f8:	b	2b310 <crc32@@Base+0x11b6c>
   2b2fc:	ldr	r3, [r4, #164]	; 0xa4
   2b300:	bl	12770 <__printf_chk@plt>
   2b304:	cmp	r5, #256	; 0x100
   2b308:	popeq	{r4, r5, r6, r7, r8, pc}
   2b30c:	add	r4, r4, #8
   2b310:	ldr	r2, [r4, #160]	; 0xa0
   2b314:	add	r5, r5, #1
   2b318:	mov	r1, r6
   2b31c:	mov	r0, #1
   2b320:	cmn	r2, #1
   2b324:	popeq	{r4, r5, r6, r7, r8, pc}
   2b328:	cmp	r5, r0
   2b32c:	bne	2b2fc <crc32@@Base+0x11b58>
   2b330:	mov	r0, r7
   2b334:	bl	1226c <puts@plt>
   2b338:	ldrd	r2, [r4, #160]	; 0xa0
   2b33c:	mov	r1, r6
   2b340:	mov	r0, r5
   2b344:	bl	12770 <__printf_chk@plt>
   2b348:	b	2b30c <crc32@@Base+0x11b68>
   2b34c:	cmp	r0, #0
   2b350:	bxeq	lr
   2b354:	ldr	r3, [r0, #56]	; 0x38
   2b358:	push	{r4, lr}
   2b35c:	cmp	r3, #0
   2b360:	bne	2b3c0 <crc32@@Base+0x11c1c>
   2b364:	ldr	r3, [r0, #4]
   2b368:	cmp	r3, #0
   2b36c:	beq	2b37c <crc32@@Base+0x11bd8>
   2b370:	ldr	r3, [r0, #60]	; 0x3c
   2b374:	tst	r3, #63	; 0x3f
   2b378:	bne	2b398 <crc32@@Base+0x11bf4>
   2b37c:	ldr	r3, [r0, #16]
   2b380:	cmp	r3, #0
   2b384:	ldreq	r0, [r0]
   2b388:	clzeq	r0, r0
   2b38c:	lsreq	r0, r0, #5
   2b390:	movne	r0, #0
   2b394:	pop	{r4, pc}
   2b398:	movw	r3, #65044	; 0xfe14
   2b39c:	movt	r3, #4
   2b3a0:	mov	r2, #58	; 0x3a
   2b3a4:	mov	r1, #1
   2b3a8:	ldr	r3, [r3]
   2b3ac:	movw	r0, #49888	; 0xc2e0
   2b3b0:	movt	r0, #3
   2b3b4:	bl	12578 <fwrite@plt>
   2b3b8:	mvn	r0, #0
   2b3bc:	pop	{r4, pc}
   2b3c0:	movw	r3, #65044	; 0xfe14
   2b3c4:	movt	r3, #4
   2b3c8:	mov	r2, #41	; 0x29
   2b3cc:	mov	r1, #1
   2b3d0:	ldr	r3, [r3]
   2b3d4:	movw	r0, #49844	; 0xc2b4
   2b3d8:	movt	r0, #3
   2b3dc:	bl	12578 <fwrite@plt>
   2b3e0:	mvn	r0, #0
   2b3e4:	pop	{r4, pc}
   2b3e8:	cmp	r1, #2496	; 0x9c0
   2b3ec:	bcc	2b478 <crc32@@Base+0x11cd4>
   2b3f0:	ldr	r2, [r0, #32]
   2b3f4:	movw	r3, #21862	; 0x5566
   2b3f8:	movt	r3, #43673	; 0xaa99
   2b3fc:	cmp	r2, r3
   2b400:	bne	2b478 <crc32@@Base+0x11cd4>
   2b404:	ldr	r2, [r0, #36]	; 0x24
   2b408:	movw	r3, #20056	; 0x4e58
   2b40c:	movt	r3, #22604	; 0x584c
   2b410:	cmp	r2, r3
   2b414:	bne	2b478 <crc32@@Base+0x11cd4>
   2b418:	ldr	r1, [r0, #44]	; 0x2c
   2b41c:	movw	r3, #41918	; 0xa3be
   2b420:	ldr	r2, [r0, #40]	; 0x28
   2b424:	movt	r3, #741	; 0x2e5
   2b428:	push	{lr}		; (str lr, [sp, #-4]!)
   2b42c:	add	r2, r2, r1
   2b430:	ldr	lr, [r0, #48]	; 0x30
   2b434:	add	r3, r2, r3
   2b438:	ldr	ip, [r0, #52]	; 0x34
   2b43c:	ldr	r1, [r0, #56]	; 0x38
   2b440:	add	r3, r3, lr
   2b444:	ldr	r2, [r0, #60]	; 0x3c
   2b448:	add	r3, r3, ip
   2b44c:	add	r3, r3, r1
   2b450:	ldr	ip, [r0, #64]	; 0x40
   2b454:	ldr	r1, [r0, #68]	; 0x44
   2b458:	add	r3, r3, r2
   2b45c:	ldr	r2, [r0, #72]	; 0x48
   2b460:	add	r0, r3, ip
   2b464:	add	r0, r0, r1
   2b468:	mvn	r0, r0
   2b46c:	subs	r0, r2, r0
   2b470:	mvnne	r0, #0
   2b474:	pop	{pc}		; (ldr pc, [sp], #4)
   2b478:	mvn	r0, #0
   2b47c:	bx	lr
   2b480:	subs	r0, r0, #27
   2b484:	movne	r0, #1
   2b488:	bx	lr
   2b48c:	push	{r4, r5, r6, r7, r8, lr}
   2b490:	mov	r4, r0
   2b494:	bl	12524 <ftell@plt>
   2b498:	subs	r5, r0, #0
   2b49c:	blt	2b4e8 <crc32@@Base+0x11d44>
   2b4a0:	mov	r2, #2
   2b4a4:	mov	r1, #0
   2b4a8:	mov	r0, r4
   2b4ac:	bl	12158 <fseek@plt>
   2b4b0:	subs	r7, r0, #0
   2b4b4:	bne	2b578 <crc32@@Base+0x11dd4>
   2b4b8:	mov	r0, r4
   2b4bc:	bl	12524 <ftell@plt>
   2b4c0:	subs	r6, r0, #0
   2b4c4:	blt	2b548 <crc32@@Base+0x11da4>
   2b4c8:	mov	r2, r7
   2b4cc:	mov	r1, r5
   2b4d0:	mov	r0, r4
   2b4d4:	bl	12158 <fseek@plt>
   2b4d8:	cmp	r0, #0
   2b4dc:	bne	2b518 <crc32@@Base+0x11d74>
   2b4e0:	mov	r0, r6
   2b4e4:	pop	{r4, r5, r6, r7, r8, pc}
   2b4e8:	movw	r3, #65044	; 0xfe14
   2b4ec:	movt	r3, #4
   2b4f0:	mov	r2, #20
   2b4f4:	mov	r1, #1
   2b4f8:	ldr	r3, [r3]
   2b4fc:	movw	r0, #50076	; 0xc39c
   2b500:	movt	r0, #3
   2b504:	bl	12578 <fwrite@plt>
   2b508:	mov	r0, r4
   2b50c:	bl	125fc <fclose@plt>
   2b510:	mov	r0, #2
   2b514:	bl	121f4 <exit@plt>
   2b518:	movw	r1, #65044	; 0xfe14
   2b51c:	movt	r1, #4
   2b520:	mov	r3, r5
   2b524:	movw	r2, #50128	; 0xc3d0
   2b528:	ldr	r0, [r1]
   2b52c:	movt	r2, #3
   2b530:	mov	r1, #1
   2b534:	bl	122b4 <__fprintf_chk@plt>
   2b538:	mov	r0, r4
   2b53c:	bl	125fc <fclose@plt>
   2b540:	mov	r0, #3
   2b544:	bl	121f4 <exit@plt>
   2b548:	movw	r3, #65044	; 0xfe14
   2b54c:	movt	r3, #4
   2b550:	mov	r2, #20
   2b554:	mov	r1, #1
   2b558:	ldr	r3, [r3]
   2b55c:	movw	r0, #50076	; 0xc39c
   2b560:	movt	r0, #3
   2b564:	bl	12578 <fwrite@plt>
   2b568:	mov	r0, r4
   2b56c:	bl	125fc <fclose@plt>
   2b570:	mov	r0, #4
   2b574:	bl	121f4 <exit@plt>
   2b578:	movw	r3, #65044	; 0xfe14
   2b57c:	movt	r3, #4
   2b580:	mov	r2, #24
   2b584:	mov	r1, #1
   2b588:	ldr	r3, [r3]
   2b58c:	movw	r0, #50100	; 0xc3b4
   2b590:	movt	r0, #3
   2b594:	bl	12578 <fwrite@plt>
   2b598:	mov	r0, r4
   2b59c:	bl	125fc <fclose@plt>
   2b5a0:	mov	r0, #3
   2b5a4:	bl	121f4 <exit@plt>
   2b5a8:	push	{r4, r5, r6, r7, r8, lr}
   2b5ac:	movw	r4, #61168	; 0xeef0
   2b5b0:	ldr	r5, [r0, #64]	; 0x40
   2b5b4:	movt	r4, #4
   2b5b8:	mov	r3, #2496	; 0x9c0
   2b5bc:	movw	r6, #29368	; 0x72b8
   2b5c0:	str	r3, [r1, #4]
   2b5c4:	movt	r6, #30
   2b5c8:	str	r6, [r1, #8]
   2b5cc:	sub	sp, sp, #96	; 0x60
   2b5d0:	ldrb	r0, [r5]
   2b5d4:	ldr	r3, [r4]
   2b5d8:	cmp	r0, #0
   2b5dc:	str	r3, [sp, #92]	; 0x5c
   2b5e0:	moveq	r5, r0
   2b5e4:	bne	2b604 <crc32@@Base+0x11e60>
   2b5e8:	ldr	r2, [sp, #92]	; 0x5c
   2b5ec:	mov	r0, r5
   2b5f0:	ldr	r3, [r4]
   2b5f4:	cmp	r2, r3
   2b5f8:	bne	2b6cc <crc32@@Base+0x11f28>
   2b5fc:	add	sp, sp, #96	; 0x60
   2b600:	pop	{r4, r5, r6, r7, r8, pc}
   2b604:	mov	r7, r1
   2b608:	mov	r0, r5
   2b60c:	movw	r1, #49540	; 0xc184
   2b610:	movt	r1, #3
   2b614:	bl	1232c <fopen@plt>
   2b618:	cmp	r0, #0
   2b61c:	mov	r8, r0
   2b620:	str	r0, [r6, #2496]	; 0x9c0
   2b624:	beq	2b680 <crc32@@Base+0x11edc>
   2b628:	bl	12488 <fileno@plt>
   2b62c:	mov	r2, sp
   2b630:	mov	r1, r0
   2b634:	mov	r0, #3
   2b638:	bl	12554 <__fxstat@plt>
   2b63c:	subs	r5, r0, #0
   2b640:	bne	2b668 <crc32@@Base+0x11ec4>
   2b644:	ldr	r3, [sp, #16]
   2b648:	mov	r0, r8
   2b64c:	and	r3, r3, #61440	; 0xf000
   2b650:	cmp	r3, #32768	; 0x8000
   2b654:	beq	2b6a8 <crc32@@Base+0x11f04>
   2b658:	bl	125fc <fclose@plt>
   2b65c:	str	r5, [r6, #2496]	; 0x9c0
   2b660:	mov	r5, #1
   2b664:	b	2b5e8 <crc32@@Base+0x11e44>
   2b668:	mov	r0, r8
   2b66c:	mov	r5, #1
   2b670:	bl	125fc <fclose@plt>
   2b674:	mov	r3, #0
   2b678:	str	r3, [r6, #2496]	; 0x9c0
   2b67c:	b	2b5e8 <crc32@@Base+0x11e44>
   2b680:	movw	r1, #65044	; 0xfe14
   2b684:	movt	r1, #4
   2b688:	mov	r3, r5
   2b68c:	movw	r2, #50160	; 0xc3f0
   2b690:	ldr	r0, [r1]
   2b694:	movt	r2, #3
   2b698:	mov	r1, #1
   2b69c:	mov	r5, r1
   2b6a0:	bl	122b4 <__fprintf_chk@plt>
   2b6a4:	b	2b5e8 <crc32@@Base+0x11e44>
   2b6a8:	bl	2b48c <crc32@@Base+0x11ce8>
   2b6ac:	ldr	r1, [r7, #4]
   2b6b0:	add	r1, r0, r1
   2b6b4:	mov	r0, #1
   2b6b8:	str	r1, [r7, #4]
   2b6bc:	bl	12518 <calloc@plt>
   2b6c0:	str	r0, [r6, #2500]	; 0x9c4
   2b6c4:	str	r0, [r7, #8]
   2b6c8:	b	2b5e8 <crc32@@Base+0x11e44>
   2b6cc:	bl	12494 <__stack_chk_fail@plt>
   2b6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b6d4:	movw	sl, #61168	; 0xeef0
   2b6d8:	movt	sl, #4
   2b6dc:	sub	sp, sp, #68	; 0x44
   2b6e0:	mov	r6, r0
   2b6e4:	movw	r0, #50196	; 0xc414
   2b6e8:	ldr	r3, [sl]
   2b6ec:	movt	r0, #3
   2b6f0:	str	r3, [sp, #60]	; 0x3c
   2b6f4:	bl	1226c <puts@plt>
   2b6f8:	ldr	r2, [r6, #48]	; 0x30
   2b6fc:	movw	r1, #49644	; 0xc1ec
   2b700:	mov	r0, #1
   2b704:	movt	r1, #3
   2b708:	bl	12770 <__printf_chk@plt>
   2b70c:	ldrd	r2, [r6, #60]	; 0x3c
   2b710:	movw	r1, #49668	; 0xc204
   2b714:	mov	r0, #1
   2b718:	movt	r1, #3
   2b71c:	bl	12770 <__printf_chk@plt>
   2b720:	ldr	r2, [r6, #52]	; 0x34
   2b724:	cmp	r2, #0
   2b728:	bne	2bab8 <crc32@@Base+0x12314>
   2b72c:	ldr	r2, [r6, #44]	; 0x2c
   2b730:	movw	r1, #47496	; 0xb988
   2b734:	mov	r0, #1
   2b738:	movt	r1, #3
   2b73c:	bl	12770 <__printf_chk@plt>
   2b740:	movw	r1, #47544	; 0xb9b8
   2b744:	ldr	r2, [r6, #72]	; 0x48
   2b748:	movt	r1, #3
   2b74c:	mov	r0, #1
   2b750:	movw	r7, #65534	; 0xfffe
   2b754:	bl	12770 <__printf_chk@plt>
   2b758:	movw	r8, #49740	; 0xc24c
   2b75c:	movt	r7, #60159	; 0xeaff
   2b760:	sub	r5, r6, #4
   2b764:	movt	r8, #3
   2b768:	mov	r4, #0
   2b76c:	ldr	r3, [r5, #4]!
   2b770:	cmp	r3, r7
   2b774:	beq	2b788 <crc32@@Base+0x11fe4>
   2b778:	mov	r2, r4
   2b77c:	mov	r1, r8
   2b780:	mov	r0, #1
   2b784:	bl	12770 <__printf_chk@plt>
   2b788:	add	r4, r4, #1
   2b78c:	cmp	r4, #8
   2b790:	bne	2b76c <crc32@@Base+0x11fc8>
   2b794:	movw	r7, #49820	; 0xc29c
   2b798:	movw	r8, #49788	; 0xc27c
   2b79c:	movt	r7, #3
   2b7a0:	movt	r8, #3
   2b7a4:	mov	r4, r6
   2b7a8:	mov	r5, #0
   2b7ac:	b	2b7d8 <crc32@@Base+0x12034>
   2b7b0:	add	r5, r5, #1
   2b7b4:	cmp	r5, #1
   2b7b8:	beq	2bae4 <crc32@@Base+0x12340>
   2b7bc:	ldr	r3, [r4, #188]	; 0xbc
   2b7c0:	mov	r1, r7
   2b7c4:	mov	r0, #1
   2b7c8:	bl	12770 <__printf_chk@plt>
   2b7cc:	cmp	r5, #256	; 0x100
   2b7d0:	beq	2b7e4 <crc32@@Base+0x12040>
   2b7d4:	add	r4, r4, #8
   2b7d8:	ldr	r2, [r4, #184]	; 0xb8
   2b7dc:	cmn	r2, #1
   2b7e0:	bne	2b7b0 <crc32@@Base+0x1200c>
   2b7e4:	ldr	r9, [r6, #152]	; 0x98
   2b7e8:	cmp	r9, #0
   2b7ec:	beq	2b9e4 <crc32@@Base+0x12240>
   2b7f0:	add	r9, r6, r9
   2b7f4:	ldr	r3, [r9, #4]
   2b7f8:	ldr	r2, [r9, #8]
   2b7fc:	cmp	r3, #0
   2b800:	add	r2, r6, r2, lsl #2
   2b804:	beq	2b9e4 <crc32@@Base+0x12240>
   2b808:	ldr	r7, [r2, #12]
   2b80c:	movw	r2, #49980	; 0xc33c
   2b810:	movt	r2, #3
   2b814:	str	r2, [sp, #12]
   2b818:	movw	r2, #36180	; 0x8d54
   2b81c:	movt	r2, #3
   2b820:	movw	r1, #50188	; 0xc40c
   2b824:	str	sl, [sp, #20]
   2b828:	movt	r1, #3
   2b82c:	lsl	r7, r7, #2
   2b830:	str	r1, [sp, #16]
   2b834:	mov	r8, #0
   2b838:	mov	sl, r2
   2b83c:	b	2b990 <crc32@@Base+0x121ec>
   2b840:	cmp	lr, #65536	; 0x10000
   2b844:	movw	r2, #47388	; 0xb91c
   2b848:	movt	r2, #3
   2b84c:	moveq	r2, sl
   2b850:	ldr	r0, [sp, #12]
   2b854:	ubfx	r3, r4, #8, #4
   2b858:	ubfx	ip, r4, #4, #3
   2b85c:	movw	r1, #50292	; 0xc474
   2b860:	add	r3, r0, r3, lsl #2
   2b864:	add	r0, sp, #64	; 0x40
   2b868:	add	ip, r0, ip, lsl #2
   2b86c:	movt	r1, #3
   2b870:	ldr	r3, [r3, #32]
   2b874:	mov	r0, #1
   2b878:	ldr	ip, [ip, #-36]	; 0xffffffdc
   2b87c:	str	ip, [sp]
   2b880:	bl	12770 <__printf_chk@plt>
   2b884:	ldr	r2, [r5, #32]
   2b888:	movw	r1, #50320	; 0xc490
   2b88c:	mov	r0, #1
   2b890:	movt	r1, #3
   2b894:	lsl	r2, r2, #2
   2b898:	bl	12770 <__printf_chk@plt>
   2b89c:	mov	r3, fp
   2b8a0:	mov	r2, fp
   2b8a4:	movw	r1, #50348	; 0xc4ac
   2b8a8:	mov	r0, #1
   2b8ac:	movt	r1, #3
   2b8b0:	bl	12770 <__printf_chk@plt>
   2b8b4:	ldrd	r2, [r5, #24]
   2b8b8:	movw	r1, #50384	; 0xc4d0
   2b8bc:	mov	r0, #1
   2b8c0:	movt	r1, #3
   2b8c4:	bl	12770 <__printf_chk@plt>
   2b8c8:	ldrd	r2, [r5, #16]
   2b8cc:	ldrd	r0, [r5, #24]
   2b8d0:	cmp	r1, r3
   2b8d4:	cmpeq	r0, r2
   2b8d8:	beq	2ba0c <crc32@@Base+0x12268>
   2b8dc:	movw	r1, #50412	; 0xc4ec
   2b8e0:	mov	r0, #1
   2b8e4:	movt	r1, #3
   2b8e8:	bl	12770 <__printf_chk@plt>
   2b8ec:	movw	r1, #50432	; 0xc500
   2b8f0:	mov	r0, #1
   2b8f4:	movt	r1, #3
   2b8f8:	bl	12770 <__printf_chk@plt>
   2b8fc:	tst	r4, #8388608	; 0x800000
   2b900:	bne	2baa4 <crc32@@Base+0x12300>
   2b904:	tst	r4, #128	; 0x80
   2b908:	bne	2ba74 <crc32@@Base+0x122d0>
   2b90c:	and	r3, r4, #28672	; 0x7000
   2b910:	cmp	r3, #8192	; 0x2000
   2b914:	beq	2ba90 <crc32@@Base+0x122ec>
   2b918:	cmp	r3, #12288	; 0x3000
   2b91c:	beq	2bad0 <crc32@@Base+0x1232c>
   2b920:	cmp	r3, #4096	; 0x1000
   2b924:	bne	2b938 <crc32@@Base+0x12194>
   2b928:	movw	r1, #50472	; 0xc528
   2b92c:	mov	r0, #1
   2b930:	movt	r1, #3
   2b934:	bl	12770 <__printf_chk@plt>
   2b938:	tst	r4, #262144	; 0x40000
   2b93c:	bne	2ba60 <crc32@@Base+0x122bc>
   2b940:	tst	r4, #32768	; 0x8000
   2b944:	bne	2ba18 <crc32@@Base+0x12274>
   2b948:	tst	r4, #8
   2b94c:	bne	2ba30 <crc32@@Base+0x1228c>
   2b950:	tst	r4, #6
   2b954:	bne	2ba48 <crc32@@Base+0x122a4>
   2b958:	tst	r4, #1
   2b95c:	beq	2b970 <crc32@@Base+0x121cc>
   2b960:	movw	r1, #50536	; 0xc568
   2b964:	mov	r0, #1
   2b968:	movt	r1, #3
   2b96c:	bl	12770 <__printf_chk@plt>
   2b970:	mov	r0, #10
   2b974:	bl	122d8 <putchar@plt>
   2b978:	ldr	r2, [r5, #60]	; 0x3c
   2b97c:	movw	r1, #50544	; 0xc570
   2b980:	mov	r0, #1
   2b984:	movt	r1, #3
   2b988:	bl	12770 <__printf_chk@plt>
   2b98c:	ldr	r3, [r9, #4]
   2b990:	add	r8, r8, #1
   2b994:	add	r5, r6, r7
   2b998:	cmp	r8, r3
   2b99c:	bcs	2b9e0 <crc32@@Base+0x1223c>
   2b9a0:	movw	ip, #49980	; 0xc33c
   2b9a4:	movt	ip, #3
   2b9a8:	add	fp, sp, #28
   2b9ac:	ldr	r4, [r5, #36]	; 0x24
   2b9b0:	ldm	ip!, {r0, r1, r2, r3}
   2b9b4:	ands	lr, r4, #196608	; 0x30000
   2b9b8:	ldr	r7, [r5, #12]
   2b9bc:	stmia	fp!, {r0, r1, r2, r3}
   2b9c0:	lsl	r7, r7, #2
   2b9c4:	ldm	ip, {r0, r1, r2, r3}
   2b9c8:	ldr	ip, [r5, #8]
   2b9cc:	stm	fp, {r0, r1, r2, r3}
   2b9d0:	lsl	fp, ip, #2
   2b9d4:	bne	2b840 <crc32@@Base+0x1209c>
   2b9d8:	ldr	r2, [sp, #16]
   2b9dc:	b	2b850 <crc32@@Base+0x120ac>
   2b9e0:	ldr	sl, [sp, #20]
   2b9e4:	ldr	r2, [sp, #60]	; 0x3c
   2b9e8:	ldr	r3, [sl]
   2b9ec:	cmp	r2, r3
   2b9f0:	bne	2bb00 <crc32@@Base+0x1235c>
   2b9f4:	movw	r3, #29368	; 0x72b8
   2b9f8:	movt	r3, #30
   2b9fc:	ldr	r0, [r3, #2500]	; 0x9c4
   2ba00:	add	sp, sp, #68	; 0x44
   2ba04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ba08:	b	12128 <free@plt>
   2ba0c:	mov	r0, #10
   2ba10:	bl	122d8 <putchar@plt>
   2ba14:	b	2b8ec <crc32@@Base+0x12148>
   2ba18:	movw	r1, #50508	; 0xc54c
   2ba1c:	mov	r0, #1
   2ba20:	movt	r1, #3
   2ba24:	bl	12770 <__printf_chk@plt>
   2ba28:	tst	r4, #8
   2ba2c:	beq	2b950 <crc32@@Base+0x121ac>
   2ba30:	movw	r1, #50516	; 0xc554
   2ba34:	mov	r0, #1
   2ba38:	movt	r1, #3
   2ba3c:	bl	12770 <__printf_chk@plt>
   2ba40:	tst	r4, #6
   2ba44:	beq	2b958 <crc32@@Base+0x121b4>
   2ba48:	movw	r1, #50528	; 0xc560
   2ba4c:	ubfx	r2, r4, #1, #2
   2ba50:	movt	r1, #3
   2ba54:	mov	r0, #1
   2ba58:	bl	12770 <__printf_chk@plt>
   2ba5c:	b	2b958 <crc32@@Base+0x121b4>
   2ba60:	movw	r1, #50496	; 0xc540
   2ba64:	mov	r0, #1
   2ba68:	movt	r1, #3
   2ba6c:	bl	12770 <__printf_chk@plt>
   2ba70:	b	2b940 <crc32@@Base+0x1219c>
   2ba74:	movw	r1, #50460	; 0xc51c
   2ba78:	mov	r0, #1
   2ba7c:	movt	r1, #3
   2ba80:	bl	12770 <__printf_chk@plt>
   2ba84:	and	r3, r4, #28672	; 0x7000
   2ba88:	cmp	r3, #8192	; 0x2000
   2ba8c:	bne	2b918 <crc32@@Base+0x12174>
   2ba90:	movw	r1, #50480	; 0xc530
   2ba94:	mov	r0, #1
   2ba98:	movt	r1, #3
   2ba9c:	bl	12770 <__printf_chk@plt>
   2baa0:	b	2b938 <crc32@@Base+0x12194>
   2baa4:	movw	r1, #50452	; 0xc514
   2baa8:	mov	r0, #1
   2baac:	movt	r1, #3
   2bab0:	bl	12770 <__printf_chk@plt>
   2bab4:	b	2b904 <crc32@@Base+0x12160>
   2bab8:	movw	r1, #50244	; 0xc444
   2babc:	ldr	r3, [r6, #56]	; 0x38
   2bac0:	movt	r1, #3
   2bac4:	mov	r0, #1
   2bac8:	bl	12770 <__printf_chk@plt>
   2bacc:	b	2b72c <crc32@@Base+0x11f88>
   2bad0:	movw	r1, #50488	; 0xc538
   2bad4:	mov	r0, #1
   2bad8:	movt	r1, #3
   2badc:	bl	12770 <__printf_chk@plt>
   2bae0:	b	2b938 <crc32@@Base+0x12194>
   2bae4:	mov	r0, r8
   2bae8:	bl	1226c <puts@plt>
   2baec:	ldrd	r2, [r4, #184]	; 0xb8
   2baf0:	mov	r1, r7
   2baf4:	mov	r0, r5
   2baf8:	bl	12770 <__printf_chk@plt>
   2bafc:	b	2b7d4 <crc32@@Base+0x12030>
   2bb00:	bl	12494 <__stack_chk_fail@plt>
   2bb04:	cmp	r0, #0
   2bb08:	bxeq	lr
   2bb0c:	ldr	r3, [r0, #56]	; 0x38
   2bb10:	push	{r4, lr}
   2bb14:	cmp	r3, #0
   2bb18:	bne	2bb78 <crc32@@Base+0x123d4>
   2bb1c:	ldr	r3, [r0, #4]
   2bb20:	cmp	r3, #0
   2bb24:	beq	2bb34 <crc32@@Base+0x12390>
   2bb28:	ldr	r3, [r0, #60]	; 0x3c
   2bb2c:	tst	r3, #63	; 0x3f
   2bb30:	bne	2bb50 <crc32@@Base+0x123ac>
   2bb34:	ldr	r3, [r0, #16]
   2bb38:	cmp	r3, #0
   2bb3c:	ldreq	r0, [r0]
   2bb40:	clzeq	r0, r0
   2bb44:	lsreq	r0, r0, #5
   2bb48:	movne	r0, #0
   2bb4c:	pop	{r4, pc}
   2bb50:	movw	r3, #65044	; 0xfe14
   2bb54:	movt	r3, #4
   2bb58:	mov	r2, #58	; 0x3a
   2bb5c:	mov	r1, #1
   2bb60:	ldr	r3, [r3]
   2bb64:	movw	r0, #49888	; 0xc2e0
   2bb68:	movt	r0, #3
   2bb6c:	bl	12578 <fwrite@plt>
   2bb70:	mvn	r0, #0
   2bb74:	pop	{r4, pc}
   2bb78:	movw	r3, #65044	; 0xfe14
   2bb7c:	movt	r3, #4
   2bb80:	mov	r2, #41	; 0x29
   2bb84:	mov	r1, #1
   2bb88:	ldr	r3, [r3]
   2bb8c:	movw	r0, #49844	; 0xc2b4
   2bb90:	movt	r0, #3
   2bb94:	bl	12578 <fwrite@plt>
   2bb98:	mvn	r0, #0
   2bb9c:	pop	{r4, pc}
   2bba0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bba4:	movw	r5, #61168	; 0xeef0
   2bba8:	movt	r5, #4
   2bbac:	mov	r6, r3
   2bbb0:	sub	sp, sp, #104	; 0x68
   2bbb4:	subs	r4, r0, #0
   2bbb8:	ldr	r3, [r5]
   2bbbc:	str	r3, [sp, #100]	; 0x64
   2bbc0:	beq	2bc40 <crc32@@Base+0x1249c>
   2bbc4:	mov	r1, #0
   2bbc8:	add	r0, r4, #2048	; 0x800
   2bbcc:	mov	r2, r1
   2bbd0:	str	r1, [r4, #40]	; 0x28
   2bbd4:	mov	r3, r4
   2bbd8:	mvn	r1, #0
   2bbdc:	movw	ip, #21862	; 0x5566
   2bbe0:	movt	ip, #43673	; 0xaa99
   2bbe4:	str	ip, [r4, #32]
   2bbe8:	movw	ip, #20056	; 0x4e58
   2bbec:	movt	ip, #22604	; 0x584c
   2bbf0:	str	ip, [r4, #36]	; 0x24
   2bbf4:	movw	ip, #65534	; 0xfffe
   2bbf8:	movt	ip, #60159	; 0xeaff
   2bbfc:	str	ip, [r4]
   2bc00:	str	ip, [r4, #4]
   2bc04:	str	ip, [r4, #8]
   2bc08:	str	ip, [r4, #12]
   2bc0c:	str	ip, [r4, #16]
   2bc10:	str	ip, [r4, #20]
   2bc14:	str	ip, [r4, #24]
   2bc18:	str	ip, [r4, #28]
   2bc1c:	mov	ip, #2048	; 0x800
   2bc20:	str	ip, [r4, #68]	; 0x44
   2bc24:	str	r1, [r3, #184]	; 0xb8
   2bc28:	add	r3, r3, #8
   2bc2c:	str	r2, [r3, #180]	; 0xb4
   2bc30:	cmp	r3, r0
   2bc34:	bne	2bc24 <crc32@@Base+0x12480>
   2bc38:	str	r2, [r4, #52]	; 0x34
   2bc3c:	str	r2, [r4, #56]	; 0x38
   2bc40:	ldr	r1, [r6, #4]
   2bc44:	movw	r7, #29368	; 0x72b8
   2bc48:	ldr	r3, [r6, #104]	; 0x68
   2bc4c:	movt	r7, #30
   2bc50:	cmp	r1, #0
   2bc54:	mov	r2, #0
   2bc58:	sub	r3, r3, #2496	; 0x9c0
   2bc5c:	str	r3, [r4, #60]	; 0x3c
   2bc60:	str	r3, [r4, #64]	; 0x40
   2bc64:	movt	r2, #65532	; 0xfffc
   2bc68:	ldrne	r3, [r6, #60]	; 0x3c
   2bc6c:	ldr	r0, [r7, #2496]	; 0x9c0
   2bc70:	str	r2, [r4, #44]	; 0x2c
   2bc74:	mov	r2, #2496	; 0x9c0
   2bc78:	strne	r3, [r4, #44]	; 0x2c
   2bc7c:	cmp	r0, #0
   2bc80:	str	r2, [r4, #48]	; 0x30
   2bc84:	beq	2bcd8 <crc32@@Base+0x12534>
   2bc88:	ldr	r8, [r6, #64]	; 0x40
   2bc8c:	bl	2b48c <crc32@@Base+0x11ce8>
   2bc90:	ldr	ip, [r4, #60]	; 0x3c
   2bc94:	mov	r1, #1
   2bc98:	ldr	r3, [r4, #64]	; 0x40
   2bc9c:	sub	ip, ip, r0
   2bca0:	sub	r3, r3, r0
   2bca4:	mov	r2, r0
   2bca8:	str	r0, [r4, #52]	; 0x34
   2bcac:	str	r0, [r4, #56]	; 0x38
   2bcb0:	add	r0, r4, #2496	; 0x9c0
   2bcb4:	str	r3, [r4, #64]	; 0x40
   2bcb8:	str	ip, [r4, #60]	; 0x3c
   2bcbc:	ldr	r3, [r7, #2496]	; 0x9c0
   2bcc0:	bl	12464 <fread@plt>
   2bcc4:	ldr	r3, [r4, #52]	; 0x34
   2bcc8:	cmp	r0, r3
   2bccc:	bne	2be34 <crc32@@Base+0x12690>
   2bcd0:	ldr	r0, [r7, #2496]	; 0x9c0
   2bcd4:	bl	125fc <fclose@plt>
   2bcd8:	ldr	r6, [r6, #68]	; 0x44
   2bcdc:	ldrb	r3, [r6]
   2bce0:	cmp	r3, #0
   2bce4:	bne	2bd54 <crc32@@Base+0x125b0>
   2bce8:	ldr	r1, [r4, #36]	; 0x24
   2bcec:	ldr	r3, [r4, #32]
   2bcf0:	ldr	r2, [r4, #40]	; 0x28
   2bcf4:	add	r3, r3, r1
   2bcf8:	ldr	r1, [r4, #44]	; 0x2c
   2bcfc:	add	r3, r3, r2
   2bd00:	ldr	r2, [r4, #48]	; 0x30
   2bd04:	add	r3, r3, r1
   2bd08:	ldr	r1, [r4, #52]	; 0x34
   2bd0c:	add	r3, r3, r2
   2bd10:	ldr	r2, [r4, #56]	; 0x38
   2bd14:	add	r3, r3, r1
   2bd18:	ldr	r1, [r4, #60]	; 0x3c
   2bd1c:	add	r3, r3, r2
   2bd20:	ldr	r2, [r4, #64]	; 0x40
   2bd24:	add	r3, r3, r1
   2bd28:	ldr	r0, [r4, #68]	; 0x44
   2bd2c:	ldr	r1, [sp, #100]	; 0x64
   2bd30:	add	r3, r3, r2
   2bd34:	ldr	r2, [r5]
   2bd38:	add	r3, r3, r0
   2bd3c:	cmp	r1, r2
   2bd40:	mvn	r3, r3
   2bd44:	str	r3, [r4, #72]	; 0x48
   2bd48:	bne	2be64 <crc32@@Base+0x126c0>
   2bd4c:	add	sp, sp, #104	; 0x68
   2bd50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bd54:	movw	r1, #49540	; 0xc184
   2bd58:	mov	r0, r6
   2bd5c:	movt	r1, #3
   2bd60:	bl	1232c <fopen@plt>
   2bd64:	subs	r7, r0, #0
   2bd68:	beq	2be0c <crc32@@Base+0x12668>
   2bd6c:	bl	12488 <fileno@plt>
   2bd70:	add	r2, sp, #8
   2bd74:	mov	r1, r0
   2bd78:	mov	r0, #3
   2bd7c:	bl	12554 <__fxstat@plt>
   2bd80:	subs	r6, r0, #0
   2bd84:	bne	2be00 <crc32@@Base+0x1265c>
   2bd88:	ldr	r3, [sp, #24]
   2bd8c:	and	r3, r3, #61440	; 0xf000
   2bd90:	cmp	r3, #32768	; 0x8000
   2bd94:	bne	2be00 <crc32@@Base+0x1265c>
   2bd98:	movw	sl, #49580	; 0xc1ac
   2bd9c:	movw	r9, #49588	; 0xc1b4
   2bda0:	movt	sl, #3
   2bda4:	movt	r9, #3
   2bda8:	mov	r8, sp
   2bdac:	add	r3, sp, #4
   2bdb0:	mov	r1, sl
   2bdb4:	mov	r2, r8
   2bdb8:	mov	r0, r7
   2bdbc:	bl	12074 <fscanf@plt>
   2bdc0:	cmp	r0, #2
   2bdc4:	addeq	r3, r6, #23
   2bdc8:	addeq	r6, r6, #1
   2bdcc:	ldmeq	r8, {r0, r1}
   2bdd0:	addeq	r3, r4, r3, lsl #3
   2bdd4:	stmeq	r3, {r0, r1}
   2bdd8:	mov	r1, r9
   2bddc:	mov	r0, r7
   2bde0:	bl	12074 <fscanf@plt>
   2bde4:	cmp	r6, #255	; 0xff
   2bde8:	movhi	r3, #0
   2bdec:	movls	r3, #1
   2bdf0:	cmn	r0, #1
   2bdf4:	moveq	r3, #0
   2bdf8:	cmp	r3, #0
   2bdfc:	bne	2bdac <crc32@@Base+0x12608>
   2be00:	mov	r0, r7
   2be04:	bl	125fc <fclose@plt>
   2be08:	b	2bce8 <crc32@@Base+0x12544>
   2be0c:	movw	r1, #65044	; 0xfe14
   2be10:	movt	r1, #4
   2be14:	mov	r3, r6
   2be18:	movw	r2, #49544	; 0xc188
   2be1c:	ldr	r0, [r1]
   2be20:	movt	r2, #3
   2be24:	mov	r1, #1
   2be28:	bl	122b4 <__fprintf_chk@plt>
   2be2c:	mov	r0, #1
   2be30:	bl	121f4 <exit@plt>
   2be34:	movw	r1, #65044	; 0xfe14
   2be38:	movt	r1, #4
   2be3c:	mov	r3, r8
   2be40:	movw	r2, #50572	; 0xc58c
   2be44:	ldr	r0, [r1]
   2be48:	movt	r2, #3
   2be4c:	mov	r1, #1
   2be50:	bl	122b4 <__fprintf_chk@plt>
   2be54:	ldr	r0, [r7, #2496]	; 0x9c0
   2be58:	bl	125fc <fclose@plt>
   2be5c:	mov	r0, #1
   2be60:	bl	121f4 <exit@plt>
   2be64:	bl	12494 <__stack_chk_fail@plt>
   2be68:	cmp	r0, #0
   2be6c:	bxeq	lr
   2be70:	mov	r1, #0
   2be74:	add	ip, r0, #2048	; 0x800
   2be78:	push	{lr}		; (str lr, [sp, #-4]!)
   2be7c:	mov	r2, r1
   2be80:	str	r1, [r0, #40]	; 0x28
   2be84:	mov	r3, r0
   2be88:	mvn	r1, #0
   2be8c:	movw	lr, #21862	; 0x5566
   2be90:	movt	lr, #43673	; 0xaa99
   2be94:	str	lr, [r0, #32]
   2be98:	movw	lr, #20056	; 0x4e58
   2be9c:	movt	lr, #22604	; 0x584c
   2bea0:	str	lr, [r0, #36]	; 0x24
   2bea4:	movw	lr, #65534	; 0xfffe
   2bea8:	movt	lr, #60159	; 0xeaff
   2beac:	str	lr, [r0]
   2beb0:	str	lr, [r0, #4]
   2beb4:	str	lr, [r0, #8]
   2beb8:	str	lr, [r0, #12]
   2bebc:	str	lr, [r0, #16]
   2bec0:	str	lr, [r0, #20]
   2bec4:	str	lr, [r0, #24]
   2bec8:	str	lr, [r0, #28]
   2becc:	mov	lr, #2048	; 0x800
   2bed0:	str	lr, [r0, #68]	; 0x44
   2bed4:	str	r1, [r3, #184]	; 0xb8
   2bed8:	add	r3, r3, #8
   2bedc:	str	r2, [r3, #180]	; 0xb4
   2bee0:	cmp	r3, ip
   2bee4:	bne	2bed4 <crc32@@Base+0x12730>
   2bee8:	str	r2, [r0, #52]	; 0x34
   2beec:	str	r2, [r0, #56]	; 0x38
   2bef0:	pop	{pc}		; (ldr pc, [sp], #4)
   2bef4:	subs	r0, r0, #28
   2bef8:	movne	r0, #1
   2befc:	bx	lr
   2bf00:	bx	lr
   2bf04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf08:	movw	r4, #43360	; 0xa960
   2bf0c:	movt	r4, #30
   2bf10:	sub	sp, sp, #12
   2bf14:	subs	fp, r2, #0
   2bf18:	mov	r8, r0
   2bf1c:	ldr	r3, [r4, #12]
   2bf20:	mov	r2, r1
   2bf24:	ldr	r5, [r4, #4]
   2bf28:	ldr	r9, [r4, #16]
   2bf2c:	str	r3, [sp]
   2bf30:	ldr	sl, [r4, #8]
   2bf34:	ldr	r6, [r4]
   2bf38:	beq	2c004 <crc32@@Base+0x12860>
   2bf3c:	ldr	r1, [fp]
   2bf40:	cmp	r1, #0
   2bf44:	bne	2bfd8 <crc32@@Base+0x12834>
   2bf48:	add	r1, r2, #63	; 0x3f
   2bf4c:	mov	r0, r5
   2bf50:	add	r6, r1, r6
   2bf54:	str	r2, [sp, #4]
   2bf58:	bic	r6, r6, #63	; 0x3f
   2bf5c:	mov	r1, r6
   2bf60:	bl	123d4 <realloc@plt>
   2bf64:	ldr	r2, [sp, #4]
   2bf68:	mov	r1, r8
   2bf6c:	mov	r7, r0
   2bf70:	ldr	r0, [r4]
   2bf74:	add	r0, r7, r0
   2bf78:	bl	1259c <memcpy@plt>
   2bf7c:	ldr	r3, [r4]
   2bf80:	str	r3, [fp]
   2bf84:	ldr	r3, [r4, #12]
   2bf88:	ldr	r0, [r4, #8]
   2bf8c:	cmp	r3, #0
   2bf90:	str	r7, [r4, #4]
   2bf94:	str	r6, [r4]
   2bf98:	ldrne	r3, [sp]
   2bf9c:	subne	r8, r3, r5
   2bfa0:	ldr	r3, [r4, #16]
   2bfa4:	addne	r8, r7, r8
   2bfa8:	strne	r8, [r4, #12]
   2bfac:	cmp	r3, #0
   2bfb0:	subne	r9, r9, r5
   2bfb4:	addne	r9, r7, r9
   2bfb8:	strne	r9, [r4, #16]
   2bfbc:	cmp	r0, #0
   2bfc0:	subne	r5, sl, r5
   2bfc4:	movne	r0, #0
   2bfc8:	addne	r7, r7, r5
   2bfcc:	strne	r7, [r4, #8]
   2bfd0:	add	sp, sp, #12
   2bfd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bfd8:	cmp	r1, r6
   2bfdc:	strcs	r1, [r4]
   2bfe0:	movcs	r6, r1
   2bfe4:	bcs	2bf48 <crc32@@Base+0x127a4>
   2bfe8:	mov	r2, r1
   2bfec:	mov	r0, #1
   2bff0:	movw	r1, #51296	; 0xc860
   2bff4:	movt	r1, #3
   2bff8:	bl	12770 <__printf_chk@plt>
   2bffc:	mvn	r0, #0
   2c000:	b	2bfd0 <crc32@@Base+0x1282c>
   2c004:	add	r6, r6, #63	; 0x3f
   2c008:	str	r1, [sp, #4]
   2c00c:	add	r6, r6, r1
   2c010:	mov	r0, r5
   2c014:	bic	r6, r6, #63	; 0x3f
   2c018:	mov	r1, r6
   2c01c:	bl	123d4 <realloc@plt>
   2c020:	ldr	r2, [sp, #4]
   2c024:	mov	r1, r8
   2c028:	mov	r7, r0
   2c02c:	ldr	r0, [r4]
   2c030:	add	r0, r7, r0
   2c034:	bl	1259c <memcpy@plt>
   2c038:	b	2bf84 <crc32@@Base+0x127e0>
   2c03c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c040:	movw	r8, #61168	; 0xeef0
   2c044:	movt	r8, #4
   2c048:	sub	sp, sp, #100	; 0x64
   2c04c:	mov	r4, r1
   2c050:	mov	r1, #0
   2c054:	ldr	r3, [r8]
   2c058:	str	r3, [sp, #92]	; 0x5c
   2c05c:	bl	12434 <open@plt>
   2c060:	subs	r7, r0, #0
   2c064:	blt	2c0dc <crc32@@Base+0x12938>
   2c068:	mov	r2, sp
   2c06c:	mov	r1, r7
   2c070:	mov	r0, #3
   2c074:	bl	12554 <__fxstat@plt>
   2c078:	cmp	r0, #0
   2c07c:	blt	2c0dc <crc32@@Base+0x12938>
   2c080:	ldr	r5, [sp, #44]	; 0x2c
   2c084:	cmp	r4, #0
   2c088:	mov	r0, r5
   2c08c:	strne	r5, [r4]
   2c090:	bl	125a8 <malloc@plt>
   2c094:	subs	r9, r0, #0
   2c098:	beq	2c0dc <crc32@@Base+0x12938>
   2c09c:	cmp	r5, #0
   2c0a0:	ble	2c0fc <crc32@@Base+0x12958>
   2c0a4:	mov	r6, r9
   2c0a8:	mov	r4, #0
   2c0ac:	b	2c0c4 <crc32@@Base+0x12920>
   2c0b0:	ldr	r5, [sp, #44]	; 0x2c
   2c0b4:	add	r4, r4, r0
   2c0b8:	add	r6, r6, r0
   2c0bc:	cmp	r5, r4
   2c0c0:	ble	2c0fc <crc32@@Base+0x12958>
   2c0c4:	sub	r2, r5, r4
   2c0c8:	mov	r1, r6
   2c0cc:	mov	r0, r7
   2c0d0:	bl	12344 <read@plt>
   2c0d4:	cmp	r0, #0
   2c0d8:	bge	2c0b0 <crc32@@Base+0x1290c>
   2c0dc:	mov	r9, #0
   2c0e0:	ldr	r2, [sp, #92]	; 0x5c
   2c0e4:	mov	r0, r9
   2c0e8:	ldr	r3, [r8]
   2c0ec:	cmp	r2, r3
   2c0f0:	bne	2c108 <crc32@@Base+0x12964>
   2c0f4:	add	sp, sp, #100	; 0x64
   2c0f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c0fc:	mov	r0, r7
   2c100:	bl	12314 <close@plt>
   2c104:	b	2c0e0 <crc32@@Base+0x1293c>
   2c108:	bl	12494 <__stack_chk_fail@plt>
   2c10c:	movw	ip, #50712	; 0xc618
   2c110:	movt	ip, #3
   2c114:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c118:	mov	r6, r0
   2c11c:	mov	r8, r1
   2c120:	sub	sp, sp, #28
   2c124:	ldm	ip!, {r0, r1, r2, r3}
   2c128:	movw	r7, #61168	; 0xeef0
   2c12c:	movt	r7, #4
   2c130:	mov	lr, sp
   2c134:	mov	r9, sp
   2c138:	mov	r4, #0
   2c13c:	stmia	lr!, {r0, r1, r2, r3}
   2c140:	ldr	ip, [ip]
   2c144:	ldr	r3, [r7]
   2c148:	str	ip, [lr]
   2c14c:	str	r3, [sp, #20]
   2c150:	ldr	r5, [r9], #4
   2c154:	mov	r0, r5
   2c158:	bl	125c0 <strlen@plt>
   2c15c:	mov	r1, r5
   2c160:	mov	r2, r0
   2c164:	mov	r0, r6
   2c168:	bl	1217c <strncmp@plt>
   2c16c:	cmp	r0, #0
   2c170:	beq	2c19c <crc32@@Base+0x129f8>
   2c174:	add	r4, r4, #1
   2c178:	cmp	r4, #5
   2c17c:	bne	2c150 <crc32@@Base+0x129ac>
   2c180:	ldr	r2, [sp, #20]
   2c184:	mov	r0, r6
   2c188:	ldr	r3, [r7]
   2c18c:	cmp	r2, r3
   2c190:	bne	2c1b4 <crc32@@Base+0x12a10>
   2c194:	add	sp, sp, #28
   2c198:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c19c:	mov	r0, r5
   2c1a0:	asr	r5, r4, #31
   2c1a4:	strd	r4, [r8, #24]
   2c1a8:	bl	125c0 <strlen@plt>
   2c1ac:	add	r6, r6, r0
   2c1b0:	b	2c180 <crc32@@Base+0x129dc>
   2c1b4:	bl	12494 <__stack_chk_fail@plt>
   2c1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c1bc:	movw	fp, #61168	; 0xeef0
   2c1c0:	movt	fp, #4
   2c1c4:	sub	sp, sp, #28
   2c1c8:	movw	r4, #34592	; 0x8720
   2c1cc:	movw	sl, #51324	; 0xc87c
   2c1d0:	ldr	r3, [fp]
   2c1d4:	movw	r9, #51328	; 0xc880
   2c1d8:	ldr	r8, [pc, #276]	; 2c2f4 <crc32@@Base+0x12b50>
   2c1dc:	movt	r4, #3
   2c1e0:	movt	sl, #3
   2c1e4:	movt	r9, #3
   2c1e8:	mov	r6, #0
   2c1ec:	mov	r7, #0
   2c1f0:	mov	r5, r0
   2c1f4:	str	r1, [sp, #4]
   2c1f8:	mov	r2, #4
   2c1fc:	str	r3, [sp, #20]
   2c200:	b	2c214 <crc32@@Base+0x12a70>
   2c204:	ldr	r4, [r8, #4]!
   2c208:	mov	r0, r4
   2c20c:	bl	125c0 <strlen@plt>
   2c210:	mov	r2, r0
   2c214:	mov	r1, r4
   2c218:	mov	r0, r5
   2c21c:	bl	1217c <strncmp@plt>
   2c220:	cmp	r0, #0
   2c224:	beq	2c2a8 <crc32@@Base+0x12b04>
   2c228:	mov	r2, #3
   2c22c:	mov	r1, sl
   2c230:	mov	r0, r4
   2c234:	bl	1217c <strncmp@plt>
   2c238:	cmp	r0, #0
   2c23c:	bne	2c278 <crc32@@Base+0x12ad4>
   2c240:	ldm	r9, {r0, r1}
   2c244:	ldrb	r3, [r4, #4]
   2c248:	str	r0, [sp, #12]
   2c24c:	add	r0, sp, #12
   2c250:	strh	r1, [sp, #16]
   2c254:	strb	r3, [sp, #16]
   2c258:	bl	125c0 <strlen@plt>
   2c25c:	add	r1, sp, #12
   2c260:	mov	r2, r0
   2c264:	mov	r4, r0
   2c268:	mov	r0, r5
   2c26c:	bl	1217c <strncmp@plt>
   2c270:	cmp	r0, #0
   2c274:	beq	2c2d0 <crc32@@Base+0x12b2c>
   2c278:	adds	r6, r6, #1
   2c27c:	adc	r7, r7, #0
   2c280:	cmp	r7, #0
   2c284:	cmpeq	r6, #16
   2c288:	bne	2c204 <crc32@@Base+0x12a60>
   2c28c:	mov	r0, r5
   2c290:	ldr	r2, [sp, #20]
   2c294:	ldr	r3, [fp]
   2c298:	cmp	r2, r3
   2c29c:	bne	2c2f0 <crc32@@Base+0x12b4c>
   2c2a0:	add	sp, sp, #28
   2c2a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c2a8:	ldr	r2, [sp, #4]
   2c2ac:	lsl	r3, r7, #8
   2c2b0:	orr	r3, r3, r6, lsr #24
   2c2b4:	mov	r0, r4
   2c2b8:	lsl	r6, r6, #8
   2c2bc:	str	r3, [r2, #20]
   2c2c0:	str	r6, [r2, #16]
   2c2c4:	bl	125c0 <strlen@plt>
   2c2c8:	add	r0, r5, r0
   2c2cc:	b	2c290 <crc32@@Base+0x12aec>
   2c2d0:	ldr	r2, [sp, #4]
   2c2d4:	lsl	r3, r7, #8
   2c2d8:	orr	r3, r3, r6, lsr #24
   2c2dc:	add	r0, r5, r4
   2c2e0:	lsl	r6, r6, #8
   2c2e4:	str	r3, [r2, #20]
   2c2e8:	str	r6, [r2, #16]
   2c2ec:	b	2c290 <crc32@@Base+0x12aec>
   2c2f0:	bl	12494 <__stack_chk_fail@plt>
   2c2f4:	andeq	ip, r3, ip, lsr #12
   2c2f8:	push	{r4, r5, lr}
   2c2fc:	movw	r4, #61168	; 0xeef0
   2c300:	movt	r4, #4
   2c304:	sub	sp, sp, #12
   2c308:	mov	r5, r1
   2c30c:	mov	r2, #0
   2c310:	ldr	r3, [r4]
   2c314:	mov	r1, sp
   2c318:	str	r3, [sp, #4]
   2c31c:	bl	12290 <strtoll@plt>
   2c320:	ldr	r2, [sp, #4]
   2c324:	ldr	r3, [r4]
   2c328:	cmp	r2, r3
   2c32c:	str	r0, [r5, #56]	; 0x38
   2c330:	ldr	r0, [sp]
   2c334:	bne	2c340 <crc32@@Base+0x12b9c>
   2c338:	add	sp, sp, #12
   2c33c:	pop	{r4, r5, pc}
   2c340:	bl	12494 <__stack_chk_fail@plt>
   2c344:	push	{r4, r5, lr}
   2c348:	movw	r4, #61168	; 0xeef0
   2c34c:	movt	r4, #4
   2c350:	sub	sp, sp, #12
   2c354:	mov	r5, r1
   2c358:	mov	r2, #0
   2c35c:	ldr	r3, [r4]
   2c360:	mov	r1, sp
   2c364:	str	r3, [sp, #4]
   2c368:	bl	12290 <strtoll@plt>
   2c36c:	ldr	r2, [sp, #4]
   2c370:	ldr	r3, [r4]
   2c374:	cmp	r2, r3
   2c378:	strd	r0, [r5, #48]	; 0x30
   2c37c:	ldr	r0, [sp]
   2c380:	bne	2c38c <crc32@@Base+0x12be8>
   2c384:	add	sp, sp, #12
   2c388:	pop	{r4, r5, pc}
   2c38c:	bl	12494 <__stack_chk_fail@plt>
   2c390:	push	{r4, r5, lr}
   2c394:	movw	r4, #61168	; 0xeef0
   2c398:	movt	r4, #4
   2c39c:	sub	sp, sp, #12
   2c3a0:	mov	r5, r1
   2c3a4:	mov	r2, #0
   2c3a8:	ldr	r3, [r4]
   2c3ac:	mov	r1, sp
   2c3b0:	str	r3, [sp, #4]
   2c3b4:	bl	12290 <strtoll@plt>
   2c3b8:	ldr	r2, [sp, #4]
   2c3bc:	ldr	r3, [r4]
   2c3c0:	cmp	r2, r3
   2c3c4:	strd	r0, [r5, #40]	; 0x28
   2c3c8:	ldr	r0, [sp]
   2c3cc:	bne	2c3d8 <crc32@@Base+0x12c34>
   2c3d0:	add	sp, sp, #12
   2c3d4:	pop	{r4, r5, pc}
   2c3d8:	bl	12494 <__stack_chk_fail@plt>
   2c3dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3e0:	movw	r5, #61168	; 0xeef0
   2c3e4:	movt	r5, #4
   2c3e8:	sub	sp, sp, #148	; 0x94
   2c3ec:	mov	r8, #0
   2c3f0:	mov	r4, r0
   2c3f4:	ldr	r3, [r5]
   2c3f8:	mov	sl, r2
   2c3fc:	mov	r9, r1
   2c400:	mov	r2, #52	; 0x34
   2c404:	mov	r1, r8
   2c408:	add	r7, sl, #3
   2c40c:	add	r0, sp, #20
   2c410:	str	r3, [sp, #140]	; 0x8c
   2c414:	bic	r6, r7, #3
   2c418:	str	r8, [sp]
   2c41c:	bl	122e4 <memset@plt>
   2c420:	ldrd	r2, [r4, #48]	; 0x30
   2c424:	ldrd	r0, [r4, #40]	; 0x28
   2c428:	cmp	sl, r6
   2c42c:	lsr	r7, r7, #2
   2c430:	str	r7, [sp, #8]
   2c434:	str	r7, [sp, #12]
   2c438:	str	r7, [sp, #16]
   2c43c:	strd	r2, [sp, #24]
   2c440:	strd	r0, [sp, #32]
   2c444:	bcc	2c6d0 <crc32@@Base+0x12f2c>
   2c448:	ldrd	r2, [r4, #8]
   2c44c:	mov	r1, #0
   2c450:	and	r0, r2, #4096	; 0x1000
   2c454:	orrs	r3, r0, r1
   2c458:	bne	2c680 <crc32@@Base+0x12edc>
   2c45c:	mov	r0, r9
   2c460:	add	r2, r4, #56	; 0x38
   2c464:	mov	r1, sl
   2c468:	bl	2bf04 <crc32@@Base+0x12760>
   2c46c:	subs	r7, r0, #0
   2c470:	bne	2c664 <crc32@@Base+0x12ec0>
   2c474:	ldrd	r2, [r4, #8]
   2c478:	mov	r3, #0
   2c47c:	ldr	r1, [r4, #56]	; 0x38
   2c480:	mov	r8, r2
   2c484:	and	r2, r2, #8192	; 0x2000
   2c488:	orrs	r3, r2, r3
   2c48c:	lsr	r3, r1, #2
   2c490:	str	r3, [sp, #40]	; 0x28
   2c494:	beq	2c4d0 <crc32@@Base+0x12d2c>
   2c498:	movw	r3, #43360	; 0xa960
   2c49c:	movt	r3, #30
   2c4a0:	ldr	r2, [r3, #16]
   2c4a4:	cmp	r2, #0
   2c4a8:	bne	2c7cc <crc32@@Base+0x13028>
   2c4ac:	ldr	r2, [r3, #12]
   2c4b0:	add	r3, r1, sl
   2c4b4:	ldr	r2, [r2, #48]	; 0x30
   2c4b8:	sub	r3, r3, r2
   2c4bc:	str	r2, [sp, #40]	; 0x28
   2c4c0:	lsr	r3, r3, #2
   2c4c4:	str	r3, [sp, #16]
   2c4c8:	str	r3, [sp, #8]
   2c4cc:	str	r3, [sp, #12]
   2c4d0:	ldrd	r0, [r4, #24]
   2c4d4:	orrs	r3, r0, r1
   2c4d8:	bne	2c700 <crc32@@Base+0x12f5c>
   2c4dc:	mov	sl, #3
   2c4e0:	mov	fp, #0
   2c4e4:	mov	ip, #6
   2c4e8:	and	r0, r8, #16384	; 0x4000
   2c4ec:	ldrd	r2, [r4, #16]
   2c4f0:	mov	r1, #0
   2c4f4:	orrs	r1, r0, r1
   2c4f8:	ldr	r1, [r4, #32]
   2c4fc:	ldr	r0, [sp, #44]	; 0x2c
   2c500:	orr	r1, r1, r2
   2c504:	strd	sl, [r4, #24]
   2c508:	orr	r1, r1, r0
   2c50c:	and	r0, r8, #524288	; 0x80000
   2c510:	orr	r1, r1, ip
   2c514:	orrne	r1, r1, #1
   2c518:	str	r1, [sp, #44]	; 0x2c
   2c51c:	mov	r1, #0
   2c520:	orrs	r1, r0, r1
   2c524:	ldrne	r1, [sp, #44]	; 0x2c
   2c528:	orrne	r1, r1, #65536	; 0x10000
   2c52c:	strne	r1, [sp, #44]	; 0x2c
   2c530:	cmp	r3, #0
   2c534:	cmpeq	r2, #512	; 0x200
   2c538:	beq	2c728 <crc32@@Base+0x12f84>
   2c53c:	bhi	2c710 <crc32@@Base+0x12f6c>
   2c540:	orrs	r1, r2, r3
   2c544:	beq	2c728 <crc32@@Base+0x12f84>
   2c548:	cmp	r3, #0
   2c54c:	cmpeq	r2, #256	; 0x100
   2c550:	beq	2c728 <crc32@@Base+0x12f84>
   2c554:	add	r1, sp, #68	; 0x44
   2c558:	add	r3, sp, #8
   2c55c:	mov	ip, #0
   2c560:	ldr	r2, [r3], #4
   2c564:	cmp	r3, r1
   2c568:	add	ip, ip, r2
   2c56c:	bne	2c560 <crc32@@Base+0x12dbc>
   2c570:	add	r0, sp, #8
   2c574:	mov	r2, sp
   2c578:	mov	r1, #64	; 0x40
   2c57c:	mvn	ip, ip
   2c580:	str	ip, [sp, #68]	; 0x44
   2c584:	bl	2bf04 <crc32@@Base+0x12760>
   2c588:	subs	r7, r0, #0
   2c58c:	bne	2c664 <crc32@@Base+0x12ec0>
   2c590:	movw	r8, #43360	; 0xa960
   2c594:	movt	r8, #30
   2c598:	ldr	r3, [r8, #8]
   2c59c:	cmp	r3, #0
   2c5a0:	beq	2c760 <crc32@@Base+0x12fbc>
   2c5a4:	ldr	lr, [r8, #16]
   2c5a8:	ldr	ip, [sp]
   2c5ac:	ldr	r2, [r3, #4]
   2c5b0:	cmp	lr, #0
   2c5b4:	add	r2, r2, #1
   2c5b8:	lsr	r1, ip, #2
   2c5bc:	str	r2, [r3, #4]
   2c5c0:	streq	r1, [r3, #8]
   2c5c4:	beq	2c5f0 <crc32@@Base+0x12e4c>
   2c5c8:	add	r0, lr, #60	; 0x3c
   2c5cc:	mov	r3, lr
   2c5d0:	mov	r2, #0
   2c5d4:	str	r1, [lr, #12]
   2c5d8:	ldr	r1, [r3], #4
   2c5dc:	cmp	r0, r3
   2c5e0:	add	r2, r2, r1
   2c5e4:	bne	2c5d8 <crc32@@Base+0x12e34>
   2c5e8:	mvn	r2, r2
   2c5ec:	str	r2, [lr, #60]	; 0x3c
   2c5f0:	ldrd	sl, [r4, #8]
   2c5f4:	mov	r1, #0
   2c5f8:	ldr	lr, [r8, #4]
   2c5fc:	and	r0, sl, #8192	; 0x2000
   2c600:	orrs	r3, r0, r1
   2c604:	add	ip, lr, ip
   2c608:	str	ip, [r8, #16]
   2c60c:	beq	2c664 <crc32@@Base+0x12ec0>
   2c610:	ldr	r1, [r8, #12]
   2c614:	ldrd	r8, [r4, #16]
   2c618:	ldr	ip, [r4, #40]	; 0x28
   2c61c:	ldr	r0, [r1, #48]	; 0x30
   2c620:	cmp	r0, #0
   2c624:	str	ip, [r1, #44]	; 0x2c
   2c628:	ldreq	r0, [r4, #56]	; 0x38
   2c62c:	str	r6, [r1, #60]	; 0x3c
   2c630:	str	r6, [r1, #64]	; 0x40
   2c634:	streq	r0, [r1, #48]	; 0x30
   2c638:	cmp	r9, #0
   2c63c:	ldr	r0, [r1, #68]	; 0x44
   2c640:	cmpeq	r8, #1280	; 0x500
   2c644:	bic	r0, r0, #3072	; 0xc00
   2c648:	str	r0, [r1, #68]	; 0x44
   2c64c:	beq	2c664 <crc32@@Base+0x12ec0>
   2c650:	cmp	r9, #0
   2c654:	cmpeq	r8, #1792	; 0x700
   2c658:	orreq	r0, r0, #3072	; 0xc00
   2c65c:	streq	r0, [r1, #68]	; 0x44
   2c660:	bne	2c744 <crc32@@Base+0x12fa0>
   2c664:	ldr	r2, [sp, #140]	; 0x8c
   2c668:	mov	r0, r7
   2c66c:	ldr	r3, [r5]
   2c670:	cmp	r2, r3
   2c674:	bne	2c7e0 <crc32@@Base+0x1303c>
   2c678:	add	sp, sp, #148	; 0x94
   2c67c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c680:	movw	r6, #43360	; 0xa960
   2c684:	movt	r6, #30
   2c688:	ldr	r3, [r6, #12]
   2c68c:	ldr	r3, [r3, #48]	; 0x30
   2c690:	cmp	r3, #0
   2c694:	bne	2c7b8 <crc32@@Base+0x13014>
   2c698:	mov	r0, r9
   2c69c:	add	r2, r4, #56	; 0x38
   2c6a0:	mov	r1, sl
   2c6a4:	bl	2bf04 <crc32@@Base+0x12760>
   2c6a8:	subs	r7, r0, #0
   2c6ac:	bne	2c664 <crc32@@Base+0x12ec0>
   2c6b0:	ldr	r3, [r6, #12]
   2c6b4:	add	sl, sl, #63	; 0x3f
   2c6b8:	ldr	r2, [r4, #56]	; 0x38
   2c6bc:	bic	sl, sl, #63	; 0x3f
   2c6c0:	str	sl, [r3, #52]	; 0x34
   2c6c4:	str	sl, [r3, #56]	; 0x38
   2c6c8:	str	r2, [r3, #48]	; 0x30
   2c6cc:	b	2c664 <crc32@@Base+0x12ec0>
   2c6d0:	mov	r0, r6
   2c6d4:	bl	125a8 <malloc@plt>
   2c6d8:	mov	r1, r9
   2c6dc:	mov	r2, sl
   2c6e0:	mov	r7, r0
   2c6e4:	bl	1259c <memcpy@plt>
   2c6e8:	mov	r1, r8
   2c6ec:	add	r0, r7, sl
   2c6f0:	sub	r2, r6, sl
   2c6f4:	mov	r9, r7
   2c6f8:	bl	122e4 <memset@plt>
   2c6fc:	b	2c448 <crc32@@Base+0x12ca4>
   2c700:	subs	sl, r0, #1
   2c704:	sbc	fp, r1, #0
   2c708:	lsl	ip, sl, #1
   2c70c:	b	2c4e8 <crc32@@Base+0x12d44>
   2c710:	cmp	r3, #0
   2c714:	cmpeq	r2, #768	; 0x300
   2c718:	beq	2c728 <crc32@@Base+0x12f84>
   2c71c:	cmp	r3, #0
   2c720:	cmpeq	r2, #1024	; 0x400
   2c724:	bne	2c554 <crc32@@Base+0x12db0>
   2c728:	and	r8, r8, #262144	; 0x40000
   2c72c:	mov	r9, #0
   2c730:	orrs	r3, r8, r9
   2c734:	ldrne	r3, [sp, #44]	; 0x2c
   2c738:	orrne	r3, r3, #8
   2c73c:	strne	r3, [sp, #44]	; 0x2c
   2c740:	b	2c554 <crc32@@Base+0x12db0>
   2c744:	and	r2, sl, #18
   2c748:	mov	r3, #0
   2c74c:	orrs	r3, r2, r3
   2c750:	orrne	r0, r0, #1024	; 0x400
   2c754:	orreq	r0, r0, #2048	; 0x800
   2c758:	str	r0, [r1, #68]	; 0x44
   2c75c:	b	2c664 <crc32@@Base+0x12ec0>
   2c760:	mov	r1, r7
   2c764:	mov	r2, #60	; 0x3c
   2c768:	add	r0, sp, #80	; 0x50
   2c76c:	str	r7, [sp, #4]
   2c770:	bl	122e4 <memset@plt>
   2c774:	add	r2, sp, #4
   2c778:	mov	r1, #64	; 0x40
   2c77c:	add	r0, sp, #76	; 0x4c
   2c780:	mov	r3, #0
   2c784:	movt	r3, #258	; 0x102
   2c788:	str	r3, [sp, #76]	; 0x4c
   2c78c:	bl	2bf04 <crc32@@Base+0x12760>
   2c790:	cmp	r0, #0
   2c794:	movne	r7, r0
   2c798:	bne	2c664 <crc32@@Base+0x12ec0>
   2c79c:	ldr	r2, [sp, #4]
   2c7a0:	ldr	r1, [r8, #12]
   2c7a4:	ldr	r3, [r8, #4]
   2c7a8:	str	r2, [r1, #152]	; 0x98
   2c7ac:	add	r3, r3, r2
   2c7b0:	str	r3, [r8, #8]
   2c7b4:	b	2c5a4 <crc32@@Base+0x12e00>
   2c7b8:	movw	r0, #51336	; 0xc888
   2c7bc:	movt	r0, #3
   2c7c0:	bl	1226c <puts@plt>
   2c7c4:	mvn	r7, #0
   2c7c8:	b	2c664 <crc32@@Base+0x12ec0>
   2c7cc:	movw	r0, #51388	; 0xc8bc
   2c7d0:	movt	r0, #3
   2c7d4:	bl	1226c <puts@plt>
   2c7d8:	mvn	r7, #0
   2c7dc:	b	2c664 <crc32@@Base+0x12ec0>
   2c7e0:	bl	12494 <__stack_chk_fail@plt>
   2c7e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c7e8:	movw	r5, #61168	; 0xeef0
   2c7ec:	movt	r5, #4
   2c7f0:	sub	sp, sp, #12
   2c7f4:	mov	r4, r0
   2c7f8:	ldr	r0, [r0]
   2c7fc:	ldr	r3, [r5]
   2c800:	mov	r1, sp
   2c804:	str	r3, [sp, #4]
   2c808:	bl	2c03c <crc32@@Base+0x12898>
   2c80c:	ldrd	r2, [r4, #32]
   2c810:	ldrd	r6, [r4, #8]
   2c814:	orrs	r3, r2, r3
   2c818:	orr	r8, r6, #4194304	; 0x400000
   2c81c:	moveq	r2, #16
   2c820:	moveq	r3, #0
   2c824:	mov	r9, r7
   2c828:	strdeq	r2, [r4, #32]
   2c82c:	strd	r8, [r4, #8]
   2c830:	ldr	r2, [sp]
   2c834:	mov	r1, r0
   2c838:	mov	r0, r4
   2c83c:	bl	2c3dc <crc32@@Base+0x12c38>
   2c840:	ldr	r2, [sp, #4]
   2c844:	ldr	r3, [r5]
   2c848:	cmp	r2, r3
   2c84c:	bne	2c858 <crc32@@Base+0x130b4>
   2c850:	add	sp, sp, #12
   2c854:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c858:	bl	12494 <__stack_chk_fail@plt>
   2c85c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c860:	movw	fp, #61168	; 0xeef0
   2c864:	movt	fp, #4
   2c868:	sub	sp, sp, #36	; 0x24
   2c86c:	mov	r5, r0
   2c870:	add	r1, sp, #24
   2c874:	ldr	r3, [fp]
   2c878:	ldr	r0, [r0]
   2c87c:	str	r3, [sp, #28]
   2c880:	bl	2c03c <crc32@@Base+0x12898>
   2c884:	subs	sl, r0, #0
   2c888:	beq	2cc50 <crc32@@Base+0x134ac>
   2c88c:	ldrb	r2, [sl, #4]
   2c890:	cmp	r2, #1
   2c894:	beq	2ca5c <crc32@@Base+0x132b8>
   2c898:	cmp	r2, #2
   2c89c:	bne	2ca30 <crc32@@Base+0x1328c>
   2c8a0:	ldrh	r8, [sl, #60]	; 0x3c
   2c8a4:	ldr	r4, [sl, #40]	; 0x28
   2c8a8:	cmp	r8, #0
   2c8ac:	add	r4, sl, r4
   2c8b0:	beq	2cbc0 <crc32@@Base+0x1341c>
   2c8b4:	mov	lr, #0
   2c8b8:	mvn	r3, #0
   2c8bc:	mov	ip, r4
   2c8c0:	str	r4, [sp, #8]
   2c8c4:	mov	r9, lr
   2c8c8:	mov	r4, r3
   2c8cc:	str	sl, [sp]
   2c8d0:	str	fp, [sp, #20]
   2c8d4:	ldrd	r0, [ip, #32]
   2c8d8:	orrs	r3, r0, r1
   2c8dc:	beq	2c93c <crc32@@Base+0x13198>
   2c8e0:	ldrd	r6, [ip, #16]
   2c8e4:	orrs	r3, r6, r7
   2c8e8:	beq	2c93c <crc32@@Base+0x13198>
   2c8ec:	ldrd	r2, [ip, #8]
   2c8f0:	mov	fp, #0
   2c8f4:	and	sl, r2, #2
   2c8f8:	orrs	r3, sl, fp
   2c8fc:	beq	2c93c <crc32@@Base+0x13198>
   2c900:	ldr	r3, [ip, #4]
   2c904:	cmp	r3, #8
   2c908:	beq	2c93c <crc32@@Base+0x13198>
   2c90c:	mov	r3, #0
   2c910:	cmp	r7, r3
   2c914:	cmpeq	r6, r4
   2c918:	movcc	r4, r6
   2c91c:	adds	r2, r0, r6
   2c920:	adc	r3, r1, r7
   2c924:	mov	sl, r2
   2c928:	mov	fp, r3
   2c92c:	mov	r3, #0
   2c930:	cmp	fp, r3
   2c934:	cmpeq	sl, r9
   2c938:	addhi	r9, r6, r0
   2c93c:	add	lr, lr, #1
   2c940:	add	ip, ip, #64	; 0x40
   2c944:	cmp	r8, lr
   2c948:	bne	2c8d4 <crc32@@Base+0x13130>
   2c94c:	mov	r7, r4
   2c950:	sub	r6, r9, r7
   2c954:	mov	r0, #1
   2c958:	ldr	sl, [sp]
   2c95c:	mov	r1, r6
   2c960:	ldr	r4, [sp, #8]
   2c964:	ldr	fp, [sp, #20]
   2c968:	bl	12518 <calloc@plt>
   2c96c:	subs	r9, r0, #0
   2c970:	strne	sl, [sp]
   2c974:	addne	r8, r4, r8, lsl #6
   2c978:	strne	fp, [sp, #8]
   2c97c:	bne	2c990 <crc32@@Base+0x131ec>
   2c980:	b	2cc20 <crc32@@Base+0x1347c>
   2c984:	add	r4, r4, #64	; 0x40
   2c988:	cmp	r4, r8
   2c98c:	beq	2ca04 <crc32@@Base+0x13260>
   2c990:	ldrd	r2, [r4, #32]
   2c994:	ldr	ip, [r4, #16]
   2c998:	orrs	r3, r2, r3
   2c99c:	ldr	r1, [r4, #20]
   2c9a0:	moveq	r3, #1
   2c9a4:	movne	r3, #0
   2c9a8:	orrs	r1, ip, r1
   2c9ac:	moveq	r3, #1
   2c9b0:	cmp	r3, #0
   2c9b4:	bne	2c984 <crc32@@Base+0x131e0>
   2c9b8:	ldrd	r0, [r4, #8]
   2c9bc:	mov	fp, #0
   2c9c0:	mov	r1, fp
   2c9c4:	and	sl, r0, #2
   2c9c8:	mov	r0, sl
   2c9cc:	orrs	r3, r0, r1
   2c9d0:	beq	2c984 <crc32@@Base+0x131e0>
   2c9d4:	ldr	r3, [r4, #4]
   2c9d8:	cmp	r3, #8
   2c9dc:	beq	2c984 <crc32@@Base+0x131e0>
   2c9e0:	ldr	r1, [r4, #24]
   2c9e4:	sub	r0, ip, r7
   2c9e8:	ldr	r3, [sp]
   2c9ec:	add	r0, r9, r0
   2c9f0:	add	r4, r4, #64	; 0x40
   2c9f4:	add	r1, r3, r1
   2c9f8:	bl	1259c <memcpy@plt>
   2c9fc:	cmp	r4, r8
   2ca00:	bne	2c990 <crc32@@Base+0x131ec>
   2ca04:	ldr	sl, [sp]
   2ca08:	mov	r8, r7
   2ca0c:	ldr	fp, [sp, #8]
   2ca10:	mov	r1, #0
   2ca14:	ldrd	r2, [sl, #24]
   2ca18:	strd	r2, [sp, #8]
   2ca1c:	ldrd	r2, [r5, #8]
   2ca20:	strd	r2, [sp]
   2ca24:	ldrd	r2, [sp, #8]
   2ca28:	strd	r2, [r5, #48]	; 0x30
   2ca2c:	b	2cb84 <crc32@@Base+0x133e0>
   2ca30:	movw	r1, #51432	; 0xc8e8
   2ca34:	mov	r0, #1
   2ca38:	movt	r1, #3
   2ca3c:	bl	12770 <__printf_chk@plt>
   2ca40:	mvn	r0, #0
   2ca44:	ldr	r2, [sp, #28]
   2ca48:	ldr	r3, [fp]
   2ca4c:	cmp	r2, r3
   2ca50:	bne	2cc58 <crc32@@Base+0x134b4>
   2ca54:	add	sp, sp, #36	; 0x24
   2ca58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca5c:	ldrh	ip, [sl, #48]	; 0x30
   2ca60:	ldr	r4, [sl, #32]
   2ca64:	cmp	ip, #0
   2ca68:	add	r4, sl, r4
   2ca6c:	beq	2cbe4 <crc32@@Base+0x13440>
   2ca70:	mov	r7, #0
   2ca74:	mov	r3, r4
   2ca78:	mov	r6, r7
   2ca7c:	mvn	r8, #0
   2ca80:	ldr	r2, [r3, #20]
   2ca84:	cmp	r2, #0
   2ca88:	beq	2cac4 <crc32@@Base+0x13320>
   2ca8c:	ldr	r1, [r3, #12]
   2ca90:	cmp	r1, #0
   2ca94:	beq	2cac4 <crc32@@Base+0x13320>
   2ca98:	ldr	r0, [r3, #8]
   2ca9c:	tst	r0, #2
   2caa0:	beq	2cac4 <crc32@@Base+0x13320>
   2caa4:	ldr	r0, [r3, #4]
   2caa8:	cmp	r0, #8
   2caac:	beq	2cac4 <crc32@@Base+0x13320>
   2cab0:	cmp	r8, r1
   2cab4:	add	r2, r2, r1
   2cab8:	movcs	r8, r1
   2cabc:	cmp	r6, r2
   2cac0:	movcc	r6, r2
   2cac4:	add	r7, r7, #1
   2cac8:	add	r3, r3, #40	; 0x28
   2cacc:	cmp	r7, ip
   2cad0:	bne	2ca80 <crc32@@Base+0x132dc>
   2cad4:	sub	r6, r6, r8
   2cad8:	mov	r0, #1
   2cadc:	str	r8, [sp, #8]
   2cae0:	mov	r1, r6
   2cae4:	bl	12518 <calloc@plt>
   2cae8:	ldrd	r2, [r5, #8]
   2caec:	orr	r8, r2, #262144	; 0x40000
   2caf0:	mov	r9, r3
   2caf4:	strd	r8, [sp]
   2caf8:	subs	r9, r0, #0
   2cafc:	beq	2cc30 <crc32@@Base+0x1348c>
   2cb00:	mov	r3, #40	; 0x28
   2cb04:	ldr	r8, [sp, #8]
   2cb08:	mla	r7, r3, r7, r4
   2cb0c:	b	2cb1c <crc32@@Base+0x13378>
   2cb10:	add	r4, r4, #40	; 0x28
   2cb14:	cmp	r4, r7
   2cb18:	beq	2cb68 <crc32@@Base+0x133c4>
   2cb1c:	ldr	r0, [r4, #12]
   2cb20:	ldr	r2, [r4, #20]
   2cb24:	cmp	r0, #0
   2cb28:	cmpne	r2, #0
   2cb2c:	beq	2cb10 <crc32@@Base+0x1336c>
   2cb30:	ldr	r3, [r4, #8]
   2cb34:	tst	r3, #2
   2cb38:	beq	2cb10 <crc32@@Base+0x1336c>
   2cb3c:	ldr	r3, [r4, #4]
   2cb40:	cmp	r3, #8
   2cb44:	beq	2cb10 <crc32@@Base+0x1336c>
   2cb48:	ldr	r1, [r4, #16]
   2cb4c:	sub	r0, r0, r8
   2cb50:	add	r0, r9, r0
   2cb54:	add	r4, r4, #40	; 0x28
   2cb58:	add	r1, sl, r1
   2cb5c:	bl	1259c <memcpy@plt>
   2cb60:	cmp	r4, r7
   2cb64:	bne	2cb1c <crc32@@Base+0x13378>
   2cb68:	str	r8, [sp, #8]
   2cb6c:	ldr	r0, [sl, #24]
   2cb70:	mov	r1, #0
   2cb74:	ldrd	r2, [sp]
   2cb78:	ldr	r8, [sp, #8]
   2cb7c:	strd	r0, [r5, #48]	; 0x30
   2cb80:	strd	r2, [r5, #8]
   2cb84:	ldrd	r2, [r5, #32]
   2cb88:	str	r1, [r5, #44]	; 0x2c
   2cb8c:	ldrd	r0, [sp]
   2cb90:	orrs	r3, r2, r3
   2cb94:	str	r8, [r5, #40]	; 0x28
   2cb98:	moveq	r2, #16
   2cb9c:	moveq	r3, #0
   2cba0:	orr	r0, r0, #2097152	; 0x200000
   2cba4:	strdeq	r2, [r5, #32]
   2cba8:	strd	r0, [r5, #8]
   2cbac:	mov	r2, r6
   2cbb0:	mov	r1, r9
   2cbb4:	mov	r0, r5
   2cbb8:	bl	2c3dc <crc32@@Base+0x12c38>
   2cbbc:	b	2ca44 <crc32@@Base+0x132a0>
   2cbc0:	mov	r1, #1
   2cbc4:	mov	r0, r1
   2cbc8:	bl	12518 <calloc@plt>
   2cbcc:	subs	r9, r0, #0
   2cbd0:	beq	2cc20 <crc32@@Base+0x1347c>
   2cbd4:	mov	r1, r8
   2cbd8:	mov	r6, #1
   2cbdc:	mvn	r8, #0
   2cbe0:	b	2ca14 <crc32@@Base+0x13270>
   2cbe4:	mov	r1, r2
   2cbe8:	mov	r0, r2
   2cbec:	str	r2, [sp, #8]
   2cbf0:	bl	12518 <calloc@plt>
   2cbf4:	ldrd	r8, [r5, #8]
   2cbf8:	orr	r2, r8, #262144	; 0x40000
   2cbfc:	mov	r3, r9
   2cc00:	strd	r2, [sp]
   2cc04:	subs	r9, r0, #0
   2cc08:	beq	2cc30 <crc32@@Base+0x1348c>
   2cc0c:	ldr	r2, [sp, #8]
   2cc10:	mvn	r3, #0
   2cc14:	str	r3, [sp, #8]
   2cc18:	mov	r6, r2
   2cc1c:	b	2cb6c <crc32@@Base+0x133c8>
   2cc20:	ldrd	r2, [sl, #24]
   2cc24:	mvn	r0, #0
   2cc28:	strd	r2, [r5, #48]	; 0x30
   2cc2c:	b	2ca44 <crc32@@Base+0x132a0>
   2cc30:	ldr	r3, [sl, #24]
   2cc34:	mov	r2, #0
   2cc38:	ldrd	r0, [sp]
   2cc3c:	str	r2, [r5, #52]	; 0x34
   2cc40:	str	r3, [r5, #48]	; 0x30
   2cc44:	strd	r0, [r5, #8]
   2cc48:	mvn	r0, #0
   2cc4c:	b	2ca44 <crc32@@Base+0x132a0>
   2cc50:	mvn	r0, #0
   2cc54:	b	2ca44 <crc32@@Base+0x132a0>
   2cc58:	bl	12494 <__stack_chk_fail@plt>
   2cc5c:	push	{r4, r5, r6, r7, lr}
   2cc60:	movw	r5, #61168	; 0xeef0
   2cc64:	movt	r5, #4
   2cc68:	sub	sp, sp, #28
   2cc6c:	mov	r1, #0
   2cc70:	mov	r4, r0
   2cc74:	ldr	r3, [r5]
   2cc78:	ldr	r0, [r0]
   2cc7c:	str	r3, [sp, #20]
   2cc80:	bl	2c03c <crc32@@Base+0x12898>
   2cc84:	ldr	r3, [pc, #388]	; 2ce10 <crc32@@Base+0x1366c>
   2cc88:	add	ip, sp, #4
   2cc8c:	subs	r6, r0, #0
   2cc90:	ldm	r3, {r0, r1, r2, r3}
   2cc94:	stmia	ip!, {r0, r1, r2}
   2cc98:	strh	r3, [ip]
   2cc9c:	beq	2cdf0 <crc32@@Base+0x1364c>
   2cca0:	add	r1, sp, #4
   2cca4:	mov	r2, #14
   2cca8:	mov	r0, r6
   2ccac:	bl	126c8 <memcmp@plt>
   2ccb0:	cmp	r0, #0
   2ccb4:	bne	2cdf0 <crc32@@Base+0x1364c>
   2ccb8:	ldrh	r2, [r6, #14]
   2ccbc:	add	r6, r6, #16
   2ccc0:	lsl	r3, r2, #8
   2ccc4:	orr	r3, r3, r2, lsr #8
   2ccc8:	uxth	r3, r3
   2cccc:	add	r2, r6, r3
   2ccd0:	ldrb	r3, [r6, r3]
   2ccd4:	cmp	r3, #98	; 0x62
   2ccd8:	bne	2cdf0 <crc32@@Base+0x1364c>
   2ccdc:	ldrh	r1, [r2, #1]
   2cce0:	add	r2, r2, #3
   2cce4:	lsl	r3, r1, #8
   2cce8:	orr	r3, r3, r1, lsr #8
   2ccec:	uxth	r3, r3
   2ccf0:	add	r1, r2, r3
   2ccf4:	ldrb	r3, [r2, r3]
   2ccf8:	cmp	r3, #99	; 0x63
   2ccfc:	bne	2cdf0 <crc32@@Base+0x1364c>
   2cd00:	ldrh	r2, [r1, #1]
   2cd04:	add	r1, r1, #3
   2cd08:	lsl	r3, r2, #8
   2cd0c:	orr	r3, r3, r2, lsr #8
   2cd10:	uxth	r3, r3
   2cd14:	add	r2, r1, r3
   2cd18:	ldrb	r3, [r1, r3]
   2cd1c:	cmp	r3, #100	; 0x64
   2cd20:	bne	2cdf0 <crc32@@Base+0x1364c>
   2cd24:	ldrh	r1, [r2, #1]
   2cd28:	add	r2, r2, #3
   2cd2c:	lsl	r3, r1, #8
   2cd30:	orr	r3, r3, r1, lsr #8
   2cd34:	uxth	r3, r3
   2cd38:	add	r0, r2, r3
   2cd3c:	ldrb	r3, [r2, r3]
   2cd40:	cmp	r3, #101	; 0x65
   2cd44:	bne	2cdf0 <crc32@@Base+0x1364c>
   2cd48:	ldr	r2, [r0, #1]
   2cd4c:	add	lr, r0, #5
   2cd50:	rev	r2, r2
   2cd54:	cmp	r2, #0
   2cd58:	beq	2cd90 <crc32@@Base+0x135ec>
   2cd5c:	mov	r6, #255	; 0xff
   2cd60:	add	r0, r0, #1
   2cd64:	movt	r6, #255	; 0xff
   2cd68:	add	ip, r0, #8
   2cd6c:	ldr	r1, [r0, #4]
   2cd70:	sub	ip, ip, lr
   2cd74:	add	r0, r0, #4
   2cd78:	cmp	r2, ip
   2cd7c:	eor	r3, r1, r1, ror #16
   2cd80:	and	r3, r6, r3, lsr #8
   2cd84:	eor	r3, r3, r1, ror #8
   2cd88:	str	r3, [r0]
   2cd8c:	bhi	2cd68 <crc32@@Base+0x135c4>
   2cd90:	ldrd	r0, [r4, #32]
   2cd94:	mvn	r6, #0
   2cd98:	mov	r7, #0
   2cd9c:	strd	r6, [r4, #40]	; 0x28
   2cda0:	orrs	r3, r0, r1
   2cda4:	moveq	r0, #32
   2cda8:	moveq	r1, #0
   2cdac:	strdeq	r0, [r4, #32]
   2cdb0:	ldr	r1, [sp, #20]
   2cdb4:	ldr	r3, [r5]
   2cdb8:	cmp	r1, r3
   2cdbc:	ldrd	r0, [r4, #8]
   2cdc0:	orr	r6, r0, #1048576	; 0x100000
   2cdc4:	mov	r0, #0
   2cdc8:	mov	r7, r1
   2cdcc:	mov	r1, #0
   2cdd0:	strd	r6, [r4, #8]
   2cdd4:	strd	r0, [r4, #48]	; 0x30
   2cdd8:	bne	2ce0c <crc32@@Base+0x13668>
   2cddc:	mov	r1, lr
   2cde0:	mov	r0, r4
   2cde4:	add	sp, sp, #28
   2cde8:	pop	{r4, r5, r6, r7, lr}
   2cdec:	b	2c3dc <crc32@@Base+0x12c38>
   2cdf0:	ldr	r2, [sp, #20]
   2cdf4:	mvn	r0, #0
   2cdf8:	ldr	r3, [r5]
   2cdfc:	cmp	r2, r3
   2ce00:	bne	2ce0c <crc32@@Base+0x13668>
   2ce04:	add	sp, sp, #28
   2ce08:	pop	{r4, r5, r6, r7, pc}
   2ce0c:	bl	12494 <__stack_chk_fail@plt>
   2ce10:	andeq	ip, r3, ip, ror #12
   2ce14:	subs	r3, r0, #0
   2ce18:	beq	2ce50 <crc32@@Base+0x136ac>
   2ce1c:	ldr	r2, [r3, #56]	; 0x38
   2ce20:	push	{r4, lr}
   2ce24:	cmp	r2, #0
   2ce28:	bne	2ce80 <crc32@@Base+0x136dc>
   2ce2c:	ldr	r0, [r3, #4]
   2ce30:	cmp	r0, #0
   2ce34:	bne	2ce58 <crc32@@Base+0x136b4>
   2ce38:	ldr	r2, [r3, #16]
   2ce3c:	cmp	r2, #0
   2ce40:	ldreq	r3, [r3]
   2ce44:	clzeq	r0, r3
   2ce48:	lsreq	r0, r0, #5
   2ce4c:	pop	{r4, pc}
   2ce50:	mov	r0, r3
   2ce54:	bx	lr
   2ce58:	movw	r3, #65044	; 0xfe14
   2ce5c:	movt	r3, #4
   2ce60:	mov	r2, #41	; 0x29
   2ce64:	mov	r1, #1
   2ce68:	ldr	r3, [r3]
   2ce6c:	movw	r0, #51500	; 0xc92c
   2ce70:	movt	r0, #3
   2ce74:	bl	12578 <fwrite@plt>
   2ce78:	mvn	r0, #0
   2ce7c:	pop	{r4, pc}
   2ce80:	movw	r3, #65044	; 0xfe14
   2ce84:	movt	r3, #4
   2ce88:	mov	r2, #42	; 0x2a
   2ce8c:	mov	r1, #1
   2ce90:	ldr	r3, [r3]
   2ce94:	movw	r0, #51456	; 0xc900
   2ce98:	movt	r0, #3
   2ce9c:	bl	12578 <fwrite@plt>
   2cea0:	mvn	r0, #0
   2cea4:	pop	{r4, pc}
   2cea8:	push	{r4, r5, r6, r7, r8, lr}
   2ceac:	mov	r2, #4
   2ceb0:	mov	r5, r1
   2ceb4:	movw	r1, #51544	; 0xc958
   2ceb8:	movt	r1, #3
   2cebc:	mov	r4, r0
   2cec0:	bl	1217c <strncmp@plt>
   2cec4:	cmp	r0, #0
   2cec8:	beq	2cf00 <crc32@@Base+0x1375c>
   2cecc:	movw	r1, #51552	; 0xc960
   2ced0:	mov	r2, #5
   2ced4:	movt	r1, #3
   2ced8:	mov	r0, r4
   2cedc:	bl	1217c <strncmp@plt>
   2cee0:	cmp	r0, #0
   2cee4:	bne	2cf08 <crc32@@Base+0x13764>
   2cee8:	ldrd	r2, [r5, #8]
   2ceec:	add	r0, r4, #5
   2cef0:	orr	r6, r2, #524288	; 0x80000
   2cef4:	mov	r7, r3
   2cef8:	strd	r6, [r5, #8]
   2cefc:	pop	{r4, r5, r6, r7, r8, pc}
   2cf00:	add	r0, r4, #4
   2cf04:	pop	{r4, r5, r6, r7, r8, pc}
   2cf08:	mov	r2, r4
   2cf0c:	movw	r1, #51560	; 0xc968
   2cf10:	mov	r0, #1
   2cf14:	movt	r1, #3
   2cf18:	bl	12770 <__printf_chk@plt>
   2cf1c:	mov	r0, #0
   2cf20:	pop	{r4, r5, r6, r7, r8, pc}
   2cf24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf28:	sub	sp, sp, #4608	; 0x1200
   2cf2c:	sub	sp, sp, #44	; 0x2c
   2cf30:	movw	r3, #61168	; 0xeef0
   2cf34:	movt	r3, #4
   2cf38:	add	ip, sp, #4608	; 0x1200
   2cf3c:	str	r3, [sp, #20]
   2cf40:	add	ip, ip, #36	; 0x24
   2cf44:	ldr	r3, [r3]
   2cf48:	mov	r4, r1
   2cf4c:	str	r0, [sp, #24]
   2cf50:	mov	r2, #2048	; 0x800
   2cf54:	mov	r1, #0
   2cf58:	add	r0, sp, #96	; 0x60
   2cf5c:	str	r3, [ip]
   2cf60:	bl	122e4 <memset@plt>
   2cf64:	mov	r2, #2496	; 0x9c0
   2cf68:	mov	r1, #0
   2cf6c:	add	r0, sp, #2144	; 0x860
   2cf70:	bl	122e4 <memset@plt>
   2cf74:	add	r0, sp, #2144	; 0x860
   2cf78:	bl	2be68 <crc32@@Base+0x126c4>
   2cf7c:	mov	r2, #0
   2cf80:	mov	r1, #2496	; 0x9c0
   2cf84:	add	r0, sp, #2144	; 0x860
   2cf88:	bl	2bf04 <crc32@@Base+0x12760>
   2cf8c:	mov	r1, #0
   2cf90:	cmp	r0, #0
   2cf94:	ldr	r0, [r4, #72]	; 0x48
   2cf98:	movweq	r3, #43360	; 0xa960
   2cf9c:	movteq	r3, #30
   2cfa0:	ldreq	r2, [r3, #4]
   2cfa4:	streq	r2, [r3, #12]
   2cfa8:	bl	2c03c <crc32@@Base+0x12898>
   2cfac:	cmp	r0, #0
   2cfb0:	beq	2d08c <crc32@@Base+0x138e8>
   2cfb4:	mov	r1, #123	; 0x7b
   2cfb8:	bl	12764 <strchr@plt>
   2cfbc:	subs	r4, r0, #0
   2cfc0:	beq	2d08c <crc32@@Base+0x138e8>
   2cfc4:	movw	r9, #50712	; 0xc618
   2cfc8:	add	r4, r4, #1
   2cfcc:	add	r8, sp, #96	; 0x60
   2cfd0:	movt	r9, #3
   2cfd4:	mov	r3, #0
   2cfd8:	str	r3, [sp, #8]
   2cfdc:	mov	r1, #10
   2cfe0:	mov	r0, r4
   2cfe4:	bl	12764 <strchr@plt>
   2cfe8:	subs	r7, r0, #0
   2cfec:	beq	2d08c <crc32@@Base+0x138e8>
   2cff0:	ldrb	r3, [r7, #-1]
   2cff4:	cmp	r3, #13
   2cff8:	moveq	r3, #0
   2cffc:	strbeq	r3, [r7, #-1]
   2d000:	mov	r3, #0
   2d004:	strb	r3, [r7], #1
   2d008:	ldrb	r3, [r4]
   2d00c:	cmp	r3, #9
   2d010:	cmpne	r3, #32
   2d014:	bne	2d028 <crc32@@Base+0x13884>
   2d018:	ldrb	r3, [r4, #1]!
   2d01c:	cmp	r3, #9
   2d020:	cmpne	r3, #32
   2d024:	beq	2d018 <crc32@@Base+0x13874>
   2d028:	cmp	r3, #91	; 0x5b
   2d02c:	beq	2d0d8 <crc32@@Base+0x13934>
   2d030:	ldrb	r3, [r4]
   2d034:	cmp	r3, #125	; 0x7d
   2d038:	beq	2d1ec <crc32@@Base+0x13a48>
   2d03c:	cmp	r3, #0
   2d040:	bne	2d050 <crc32@@Base+0x138ac>
   2d044:	mov	r4, r7
   2d048:	b	2cfdc <crc32@@Base+0x13838>
   2d04c:	ldrb	r3, [r4, #1]!
   2d050:	cmp	r3, #9
   2d054:	cmpne	r3, #32
   2d058:	beq	2d04c <crc32@@Base+0x138a8>
   2d05c:	ldr	r3, [sp, #8]
   2d060:	str	r4, [r8], #64	; 0x40
   2d064:	add	r3, r3, #1
   2d068:	str	r3, [sp, #8]
   2d06c:	b	2d044 <crc32@@Base+0x138a0>
   2d070:	add	r3, sp, #552	; 0x228
   2d074:	movw	r1, #51772	; 0xca3c
   2d078:	add	r4, r3, r4, lsl #6
   2d07c:	mov	r0, #1
   2d080:	movt	r1, #3
   2d084:	ldr	r2, [r4, #-456]	; 0xfffffe38
   2d088:	bl	12770 <__printf_chk@plt>
   2d08c:	movw	r3, #65044	; 0xfe14
   2d090:	movt	r3, #4
   2d094:	movw	r0, #51796	; 0xca54
   2d098:	mov	r2, #31
   2d09c:	ldr	r3, [r3]
   2d0a0:	movt	r0, #3
   2d0a4:	mov	r1, #1
   2d0a8:	bl	12578 <fwrite@plt>
   2d0ac:	mvn	r0, #0
   2d0b0:	add	r3, sp, #4608	; 0x1200
   2d0b4:	add	r3, r3, #36	; 0x24
   2d0b8:	ldr	r2, [r3]
   2d0bc:	ldr	r3, [sp, #20]
   2d0c0:	ldr	r3, [r3]
   2d0c4:	cmp	r2, r3
   2d0c8:	bne	2d66c <crc32@@Base+0x13ec8>
   2d0cc:	add	sp, sp, #4608	; 0x1200
   2d0d0:	add	sp, sp, #44	; 0x2c
   2d0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0d8:	ldrb	r3, [r4, #1]
   2d0dc:	add	r4, r4, #1
   2d0e0:	mov	sl, #48	; 0x30
   2d0e4:	cmp	r3, #9
   2d0e8:	cmpne	r3, #32
   2d0ec:	ldrbeq	r3, [r4, #1]!
   2d0f0:	beq	2d0e4 <crc32@@Base+0x13940>
   2d0f4:	ldr	r5, [pc, #1396]	; 2d670 <crc32@@Base+0x13ecc>
   2d0f8:	mov	r6, #0
   2d0fc:	mov	r0, r5
   2d100:	bl	125c0 <strlen@plt>
   2d104:	mov	r1, r4
   2d108:	mov	r2, r0
   2d10c:	mov	fp, r0
   2d110:	mov	r0, r5
   2d114:	bl	1217c <strncmp@plt>
   2d118:	cmp	r0, #0
   2d11c:	beq	2d148 <crc32@@Base+0x139a4>
   2d120:	add	r6, r6, #1
   2d124:	add	r5, r5, #48	; 0x30
   2d128:	cmp	r6, #10
   2d12c:	bne	2d0fc <crc32@@Base+0x13958>
   2d130:	mov	r2, r4
   2d134:	movw	r1, #51596	; 0xc98c
   2d138:	mov	r0, #1
   2d13c:	movt	r1, #3
   2d140:	bl	12770 <__printf_chk@plt>
   2d144:	b	2d08c <crc32@@Base+0x138e8>
   2d148:	mla	r6, sl, r6, r9
   2d14c:	add	r4, r4, fp
   2d150:	ldr	r3, [r6, #144]	; 0x90
   2d154:	cmp	r3, #0
   2d158:	beq	2d190 <crc32@@Base+0x139ec>
   2d15c:	mov	r0, r4
   2d160:	mov	r1, r8
   2d164:	blx	r3
   2d168:	mov	r4, r0
   2d16c:	cmp	r4, #0
   2d170:	beq	2d08c <crc32@@Base+0x138e8>
   2d174:	ldrb	r3, [r4]
   2d178:	cmp	r3, #93	; 0x5d
   2d17c:	beq	2d1dc <crc32@@Base+0x13a38>
   2d180:	cmp	r3, #44	; 0x2c
   2d184:	ldrbeq	r3, [r4, #1]
   2d188:	addeq	r4, r4, #1
   2d18c:	b	2d0e4 <crc32@@Base+0x13940>
   2d190:	ldr	r1, [r6, #136]	; 0x88
   2d194:	mov	ip, #1
   2d198:	sub	r3, r1, #32
   2d19c:	rsb	r0, r1, #32
   2d1a0:	lsl	r3, ip, r3
   2d1a4:	str	r3, [sp, #4]
   2d1a8:	ldr	lr, [sp, #4]
   2d1ac:	lsl	r1, ip, r1
   2d1b0:	str	r1, [sp]
   2d1b4:	orr	r0, lr, ip, lsr r0
   2d1b8:	str	r0, [sp, #4]
   2d1bc:	ldrd	r2, [r8, #8]
   2d1c0:	ldrd	r0, [sp]
   2d1c4:	orr	r0, r0, r2
   2d1c8:	orr	r1, r1, r3
   2d1cc:	mov	r2, r0
   2d1d0:	mov	r3, r1
   2d1d4:	strd	r2, [r8, #8]
   2d1d8:	b	2d16c <crc32@@Base+0x139c8>
   2d1dc:	add	r4, r4, #1
   2d1e0:	ldrb	r3, [r4]
   2d1e4:	cmp	r3, #125	; 0x7d
   2d1e8:	bne	2d03c <crc32@@Base+0x13898>
   2d1ec:	ldr	r3, [sp, #8]
   2d1f0:	cmp	r3, #0
   2d1f4:	beq	2d5a4 <crc32@@Base+0x13e00>
   2d1f8:	add	r3, sp, #96	; 0x60
   2d1fc:	str	r3, [sp, #28]
   2d200:	str	r3, [sp, #12]
   2d204:	mov	r3, #0
   2d208:	str	r3, [sp, #16]
   2d20c:	b	2d234 <crc32@@Base+0x13a90>
   2d210:	ldr	r2, [sp, #12]
   2d214:	ldr	r3, [sp, #16]
   2d218:	add	r2, r2, #64	; 0x40
   2d21c:	str	r2, [sp, #12]
   2d220:	ldr	r2, [sp, #8]
   2d224:	add	r3, r3, #1
   2d228:	str	r3, [sp, #16]
   2d22c:	cmp	r2, r3
   2d230:	beq	2d3f4 <crc32@@Base+0x13c50>
   2d234:	ldr	r3, [sp, #12]
   2d238:	mov	r1, #0
   2d23c:	ldrd	r2, [r3, #8]
   2d240:	and	r0, r2, #512	; 0x200
   2d244:	orrs	r3, r0, r1
   2d248:	beq	2d210 <crc32@@Base+0x13a6c>
   2d24c:	add	r3, sp, #2144	; 0x860
   2d250:	mov	r1, #0
   2d254:	add	r3, r3, #8
   2d258:	mov	r2, #132	; 0x84
   2d25c:	sub	r0, r3, #4
   2d260:	mov	r9, r1
   2d264:	str	r1, [sp]
   2d268:	bl	122e4 <memset@plt>
   2d26c:	ldr	r3, [sp, #16]
   2d270:	add	r2, sp, #96	; 0x60
   2d274:	add	r1, sp, #2160	; 0x870
   2d278:	add	r8, sp, #2288	; 0x8f0
   2d27c:	add	r6, sp, #96	; 0x60
   2d280:	ldr	r7, [r2, r3, lsl #6]
   2d284:	movw	r2, #51624	; 0xc9a8
   2d288:	movw	r3, #51632	; 0xc9b0
   2d28c:	movt	r2, #3
   2d290:	movt	r3, #3
   2d294:	str	r2, [sp, #2144]	; 0x860
   2d298:	str	r3, [sp, #2168]	; 0x878
   2d29c:	movw	r2, #51640	; 0xc9b8
   2d2a0:	movw	r3, #51648	; 0xc9c0
   2d2a4:	movt	r2, #3
   2d2a8:	movt	r3, #3
   2d2ac:	str	r2, [sp, #2192]	; 0x890
   2d2b0:	str	r3, [sp, #2216]	; 0x8a8
   2d2b4:	movw	r2, #51656	; 0xc9c8
   2d2b8:	movw	r3, #51668	; 0xc9d4
   2d2bc:	movt	r2, #3
   2d2c0:	movt	r3, #3
   2d2c4:	str	r2, [sp, #2240]	; 0x8c0
   2d2c8:	str	r3, [sp, #2264]	; 0x8d8
   2d2cc:	mov	r2, #256	; 0x100
   2d2d0:	mov	r3, #0
   2d2d4:	strd	r2, [r1]
   2d2d8:	add	r1, sp, #2176	; 0x880
   2d2dc:	add	r1, r1, #8
   2d2e0:	strd	r2, [r1]
   2d2e4:	add	r1, sp, #2208	; 0x8a0
   2d2e8:	strd	r2, [r1]
   2d2ec:	add	r1, sp, #2224	; 0x8b0
   2d2f0:	add	r1, r1, #8
   2d2f4:	strd	r2, [r1]
   2d2f8:	add	r1, sp, #2192	; 0x890
   2d2fc:	add	r1, r1, #8
   2d300:	mov	r2, #262144	; 0x40000
   2d304:	mov	r3, #0
   2d308:	strd	r2, [r1]
   2d30c:	add	r1, sp, #2224	; 0x8b0
   2d310:	strd	r2, [r1]
   2d314:	add	r1, sp, #2256	; 0x8d0
   2d318:	mov	r2, #1280	; 0x500
   2d31c:	mov	r3, #0
   2d320:	strd	r2, [r1]
   2d324:	add	r1, sp, #2272	; 0x8e0
   2d328:	add	r1, r1, #8
   2d32c:	mov	r2, #1792	; 0x700
   2d330:	mov	r3, #0
   2d334:	strd	r2, [r1]
   2d338:	ldrd	r4, [r6, #8]
   2d33c:	mov	r3, #0
   2d340:	and	r2, r4, #8192	; 0x2000
   2d344:	orrs	r3, r2, r3
   2d348:	beq	2d3ac <crc32@@Base+0x13c08>
   2d34c:	add	fp, sp, #2144	; 0x860
   2d350:	ldr	sl, [fp]
   2d354:	mov	r0, sl
   2d358:	bl	125c0 <strlen@plt>
   2d35c:	mov	r1, sl
   2d360:	mov	r2, r0
   2d364:	mov	r0, r7
   2d368:	bl	1217c <strncmp@plt>
   2d36c:	cmp	r0, #0
   2d370:	bne	2d394 <crc32@@Base+0x13bf0>
   2d374:	mov	r1, #1
   2d378:	str	r1, [sp]
   2d37c:	ldrd	r0, [fp, #16]
   2d380:	ldrd	r2, [fp, #8]
   2d384:	strd	r0, [r6, #16]
   2d388:	orr	r4, r4, r2
   2d38c:	orr	r5, r5, r3
   2d390:	strd	r4, [r6, #8]
   2d394:	add	fp, fp, #24
   2d398:	cmp	fp, r8
   2d39c:	bne	2d350 <crc32@@Base+0x13bac>
   2d3a0:	ldr	r3, [sp]
   2d3a4:	cmp	r3, #0
   2d3a8:	beq	2d3dc <crc32@@Base+0x13c38>
   2d3ac:	ldr	r3, [sp, #8]
   2d3b0:	add	r9, r9, #1
   2d3b4:	add	r6, r6, #64	; 0x40
   2d3b8:	cmp	r3, r9
   2d3bc:	bne	2d338 <crc32@@Base+0x13b94>
   2d3c0:	ldr	r3, [sp]
   2d3c4:	cmp	r3, #0
   2d3c8:	bne	2d210 <crc32@@Base+0x13a6c>
   2d3cc:	movw	r0, #51712	; 0xca00
   2d3d0:	movt	r0, #3
   2d3d4:	bl	1226c <puts@plt>
   2d3d8:	b	2d08c <crc32@@Base+0x138e8>
   2d3dc:	mov	r2, r7
   2d3e0:	movw	r1, #51676	; 0xc9dc
   2d3e4:	mov	r0, #1
   2d3e8:	movt	r1, #3
   2d3ec:	bl	12770 <__printf_chk@plt>
   2d3f0:	b	2d08c <crc32@@Base+0x138e8>
   2d3f4:	add	r7, sp, #96	; 0x60
   2d3f8:	mvn	sl, #0
   2d3fc:	mov	r6, #0
   2d400:	mov	r8, r2
   2d404:	b	2d428 <crc32@@Base+0x13c84>
   2d408:	orr	r2, r2, r3
   2d40c:	cmn	sl, #1
   2d410:	cmpne	r2, #0
   2d414:	bne	2d450 <crc32@@Base+0x13cac>
   2d418:	add	r6, r6, #1
   2d41c:	add	r7, r7, #64	; 0x40
   2d420:	cmp	r8, r6
   2d424:	beq	2d4dc <crc32@@Base+0x13d38>
   2d428:	ldrd	r4, [r7, #8]
   2d42c:	mov	r1, #0
   2d430:	mov	r3, #0
   2d434:	and	r0, r4, #8192	; 0x2000
   2d438:	and	r2, r4, #4096	; 0x1000
   2d43c:	orrs	r1, r0, r1
   2d440:	beq	2d408 <crc32@@Base+0x13c64>
   2d444:	orrs	r3, r2, r3
   2d448:	mov	sl, r6
   2d44c:	beq	2d418 <crc32@@Base+0x13c74>
   2d450:	lsl	r5, r6, #6
   2d454:	add	r3, sp, #96	; 0x60
   2d458:	add	r4, r3, r5
   2d45c:	add	r3, sp, #552	; 0x228
   2d460:	add	r9, r3, sl, lsl #6
   2d464:	add	lr, sp, #32
   2d468:	mov	r5, r4
   2d46c:	sub	ip, r9, #456	; 0x1c8
   2d470:	ldm	r4!, {r0, r1, r2, r3}
   2d474:	mov	fp, lr
   2d478:	mov	r9, ip
   2d47c:	stmia	lr!, {r0, r1, r2, r3}
   2d480:	ldm	r4!, {r0, r1, r2, r3}
   2d484:	stmia	lr!, {r0, r1, r2, r3}
   2d488:	ldm	r4!, {r0, r1, r2, r3}
   2d48c:	stmia	lr!, {r0, r1, r2, r3}
   2d490:	ldm	r4, {r0, r1, r2, r3}
   2d494:	stm	lr, {r0, r1, r2, r3}
   2d498:	ldm	ip!, {r0, r1, r2, r3}
   2d49c:	stmia	r5!, {r0, r1, r2, r3}
   2d4a0:	ldm	ip!, {r0, r1, r2, r3}
   2d4a4:	stmia	r5!, {r0, r1, r2, r3}
   2d4a8:	ldm	ip!, {r0, r1, r2, r3}
   2d4ac:	stmia	r5!, {r0, r1, r2, r3}
   2d4b0:	ldm	ip, {r0, r1, r2, r3}
   2d4b4:	stm	r4, {r0, r1, r2, r3}
   2d4b8:	ldm	fp!, {r0, r1, r2, r3}
   2d4bc:	stmia	r9!, {r0, r1, r2, r3}
   2d4c0:	ldm	fp!, {r0, r1, r2, r3}
   2d4c4:	stmia	r9!, {r0, r1, r2, r3}
   2d4c8:	ldm	fp!, {r0, r1, r2, r3}
   2d4cc:	stmia	r9!, {r0, r1, r2, r3}
   2d4d0:	ldm	lr, {r0, r1, r2, r3}
   2d4d4:	stm	ip, {r0, r1, r2, r3}
   2d4d8:	b	2d418 <crc32@@Base+0x13c74>
   2d4dc:	movw	r5, #19526	; 0x4c46
   2d4e0:	mov	r4, #0
   2d4e4:	movt	r5, #32581	; 0x7f45
   2d4e8:	ldr	r7, [sp, #8]
   2d4ec:	ldr	r6, [sp, #28]
   2d4f0:	b	2d560 <crc32@@Base+0x13dbc>
   2d4f4:	mov	r2, #4
   2d4f8:	add	r1, sp, #32
   2d4fc:	bl	12344 <read@plt>
   2d500:	cmp	r0, #4
   2d504:	bne	2d070 <crc32@@Base+0x138cc>
   2d508:	mov	r0, r8
   2d50c:	bl	12314 <close@plt>
   2d510:	ldr	r3, [sp, #32]
   2d514:	mov	r1, #4080	; 0xff0
   2d518:	movt	r1, #9
   2d51c:	rev	r2, r3
   2d520:	cmp	r2, r1
   2d524:	beq	2d660 <crc32@@Base+0x13ebc>
   2d528:	movw	r1, #51172	; 0xc7e4
   2d52c:	cmp	r2, r5
   2d530:	movt	r1, #2
   2d534:	movw	r3, #51292	; 0xc85c
   2d538:	movt	r3, #2
   2d53c:	movne	r3, r1
   2d540:	mov	r0, r6
   2d544:	blx	r3
   2d548:	cmp	r0, #0
   2d54c:	bne	2d08c <crc32@@Base+0x138e8>
   2d550:	add	r4, r4, #1
   2d554:	add	r6, r6, #64	; 0x40
   2d558:	cmp	r7, r4
   2d55c:	beq	2d5a4 <crc32@@Base+0x13e00>
   2d560:	ldrd	r2, [r6, #8]
   2d564:	mov	r1, #0
   2d568:	and	r0, r2, #512	; 0x200
   2d56c:	orrs	r3, r0, r1
   2d570:	bne	2d550 <crc32@@Base+0x13dac>
   2d574:	add	r3, sp, #96	; 0x60
   2d578:	mov	r1, #0
   2d57c:	ldr	r0, [r3, r4, lsl #6]
   2d580:	bl	12434 <open@plt>
   2d584:	subs	r8, r0, #0
   2d588:	bge	2d4f4 <crc32@@Base+0x13d50>
   2d58c:	ldr	r2, [r6]
   2d590:	movw	r1, #51748	; 0xca24
   2d594:	mov	r0, #1
   2d598:	movt	r1, #3
   2d59c:	bl	12770 <__printf_chk@plt>
   2d5a0:	b	2d08c <crc32@@Base+0x138e8>
   2d5a4:	movw	r5, #43360	; 0xa960
   2d5a8:	movt	r5, #30
   2d5ac:	mov	r2, #0
   2d5b0:	ldr	lr, [r5, #12]
   2d5b4:	add	r3, lr, #32
   2d5b8:	add	r0, lr, #72	; 0x48
   2d5bc:	ldr	r1, [r3], #4
   2d5c0:	cmp	r0, r3
   2d5c4:	add	r2, r2, r1
   2d5c8:	bne	2d5bc <crc32@@Base+0x13e18>
   2d5cc:	ldr	ip, [r5, #8]
   2d5d0:	mvn	r2, r2
   2d5d4:	str	r2, [lr, #72]	; 0x48
   2d5d8:	cmp	ip, #0
   2d5dc:	beq	2d604 <crc32@@Base+0x13e60>
   2d5e0:	add	r0, ip, #60	; 0x3c
   2d5e4:	mov	r3, ip
   2d5e8:	mov	r2, #0
   2d5ec:	ldr	r1, [r3], #4
   2d5f0:	cmp	r0, r3
   2d5f4:	add	r2, r2, r1
   2d5f8:	bne	2d5ec <crc32@@Base+0x13e48>
   2d5fc:	mvn	r2, r2
   2d600:	str	r2, [ip, #60]	; 0x3c
   2d604:	mov	r2, #0
   2d608:	ldr	r0, [sp, #24]
   2d60c:	mov	r1, r2
   2d610:	bl	124f4 <lseek@plt>
   2d614:	cmp	r0, #0
   2d618:	bne	2d08c <crc32@@Base+0x138e8>
   2d61c:	ldrd	r4, [r5]
   2d620:	cmp	r4, #0
   2d624:	ldrne	r6, [sp, #24]
   2d628:	bne	2d63c <crc32@@Base+0x13e98>
   2d62c:	b	2d658 <crc32@@Base+0x13eb4>
   2d630:	subs	r4, r4, r0
   2d634:	add	r5, r5, r0
   2d638:	beq	2d658 <crc32@@Base+0x13eb4>
   2d63c:	mov	r2, r4
   2d640:	mov	r1, r5
   2d644:	mov	r0, r6
   2d648:	bl	12608 <write@plt>
   2d64c:	cmp	r0, #0
   2d650:	bge	2d630 <crc32@@Base+0x13e8c>
   2d654:	b	2d08c <crc32@@Base+0x138e8>
   2d658:	mov	r0, #0
   2d65c:	b	2d0b0 <crc32@@Base+0x1390c>
   2d660:	movw	r3, #52316	; 0xcc5c
   2d664:	movt	r3, #2
   2d668:	b	2d540 <crc32@@Base+0x13d9c>
   2d66c:	bl	12494 <__stack_chk_fail@plt>
   2d670:	andeq	ip, r3, r0, lsl #13
   2d674:	ldr	r2, [r0]
   2d678:	movw	r1, #65261	; 0xfeed
   2d67c:	push	{lr}		; (str lr, [sp, #-4]!)
   2d680:	ubfx	lr, r2, #8, #8
   2d684:	lsr	r3, r2, #24
   2d688:	ubfx	ip, r2, #16, #8
   2d68c:	orr	r3, r3, r2, lsl #24
   2d690:	movt	r1, #53261	; 0xd00d
   2d694:	orr	r3, r3, lr, lsl #16
   2d698:	orr	r3, r3, ip, lsl #8
   2d69c:	cmp	r3, r1
   2d6a0:	beq	2d6dc <crc32@@Base+0x13f38>
   2d6a4:	movw	r2, #274	; 0x112
   2d6a8:	movt	r2, #12274	; 0x2ff2
   2d6ac:	cmp	r3, r2
   2d6b0:	bne	2d72c <crc32@@Base+0x13f88>
   2d6b4:	ldr	r2, [r0, #36]	; 0x24
   2d6b8:	ubfx	r0, r2, #8, #8
   2d6bc:	ubfx	r1, r2, #16, #8
   2d6c0:	lsr	r3, r2, #24
   2d6c4:	orr	r3, r3, r2, lsl #24
   2d6c8:	orr	r3, r3, r0, lsl #16
   2d6cc:	orrs	r3, r3, r1, lsl #8
   2d6d0:	movne	r0, #0
   2d6d4:	mvneq	r0, #6
   2d6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6dc:	ldr	r2, [r0, #20]
   2d6e0:	ubfx	ip, r2, #8, #8
   2d6e4:	ubfx	r1, r2, #16, #8
   2d6e8:	lsr	r3, r2, #24
   2d6ec:	orr	r3, r3, r2, lsl #24
   2d6f0:	orr	r3, r3, ip, lsl #16
   2d6f4:	orr	r3, r3, r1, lsl #8
   2d6f8:	cmp	r3, #1
   2d6fc:	bls	2d734 <crc32@@Base+0x13f90>
   2d700:	ldr	r2, [r0, #24]
   2d704:	ubfx	r0, r2, #8, #8
   2d708:	ubfx	r1, r2, #16, #8
   2d70c:	lsr	r3, r2, #24
   2d710:	orr	r3, r3, r2, lsl #24
   2d714:	orr	r3, r3, r0, lsl #16
   2d718:	orr	r3, r3, r1, lsl #8
   2d71c:	cmp	r3, #18
   2d720:	movcc	r0, #0
   2d724:	mvncs	r0, #9
   2d728:	pop	{pc}		; (ldr pc, [sp], #4)
   2d72c:	mvn	r0, #8
   2d730:	pop	{pc}		; (ldr pc, [sp], #4)
   2d734:	mvn	r0, #9
   2d738:	pop	{pc}		; (ldr pc, [sp], #4)
   2d73c:	ldr	ip, [r0, #8]
   2d740:	push	{r4, r5, r6, lr}
   2d744:	ubfx	r4, ip, #8, #8
   2d748:	lsr	r3, ip, #24
   2d74c:	ubfx	lr, ip, #16, #8
   2d750:	orr	r3, r3, ip, lsl #24
   2d754:	orr	r3, r3, r4, lsl #16
   2d758:	orr	r3, r3, lr, lsl #8
   2d75c:	adds	r3, r1, r3
   2d760:	bcs	2d7e8 <crc32@@Base+0x14044>
   2d764:	adds	r4, r3, r2
   2d768:	bcs	2d7e8 <crc32@@Base+0x14044>
   2d76c:	ldr	lr, [r0, #4]
   2d770:	ubfx	r6, lr, #8, #8
   2d774:	ubfx	r5, lr, #16, #8
   2d778:	lsr	ip, lr, #24
   2d77c:	orr	ip, ip, lr, lsl #24
   2d780:	orr	ip, ip, r6, lsl #16
   2d784:	orr	ip, ip, r5, lsl #8
   2d788:	cmp	r4, ip
   2d78c:	bhi	2d7e8 <crc32@@Base+0x14044>
   2d790:	ldr	lr, [r0, #20]
   2d794:	ubfx	r5, lr, #8, #8
   2d798:	ubfx	r4, lr, #16, #8
   2d79c:	lsr	ip, lr, #24
   2d7a0:	orr	ip, ip, lr, lsl #24
   2d7a4:	orr	ip, ip, r5, lsl #16
   2d7a8:	orr	ip, ip, r4, lsl #8
   2d7ac:	cmp	ip, #16
   2d7b0:	bls	2d7e0 <crc32@@Base+0x1403c>
   2d7b4:	adds	r1, r1, r2
   2d7b8:	bcs	2d7e8 <crc32@@Base+0x14044>
   2d7bc:	ldr	ip, [r0, #36]	; 0x24
   2d7c0:	ubfx	r4, ip, #8, #8
   2d7c4:	ubfx	lr, ip, #16, #8
   2d7c8:	lsr	r2, ip, #24
   2d7cc:	orr	r2, r2, ip, lsl #24
   2d7d0:	orr	r2, r2, r4, lsl #16
   2d7d4:	orr	r2, r2, lr, lsl #8
   2d7d8:	cmp	r1, r2
   2d7dc:	bhi	2d7e8 <crc32@@Base+0x14044>
   2d7e0:	add	r0, r0, r3
   2d7e4:	pop	{r4, r5, r6, pc}
   2d7e8:	mov	r0, #0
   2d7ec:	pop	{r4, r5, r6, pc}
   2d7f0:	push	{r4, r5, r6, r7, r8, lr}
   2d7f4:	mov	r6, r2
   2d7f8:	mvn	r3, #7
   2d7fc:	mov	r2, #4
   2d800:	str	r3, [r6]
   2d804:	mov	r7, r0
   2d808:	mov	r8, r1
   2d80c:	bl	2d73c <crc32@@Base+0x13f98>
   2d810:	cmp	r0, #0
   2d814:	beq	2d89c <crc32@@Base+0x140f8>
   2d818:	ldr	r3, [r0]
   2d81c:	mvn	r2, #10
   2d820:	str	r2, [r6]
   2d824:	add	r4, r8, #4
   2d828:	ubfx	r1, r3, #8, #8
   2d82c:	ubfx	r2, r3, #16, #8
   2d830:	lsr	r5, r3, #24
   2d834:	orr	r5, r5, r3, lsl #24
   2d838:	orr	r5, r5, r1, lsl #16
   2d83c:	orr	r5, r5, r2, lsl #8
   2d840:	sub	r3, r5, #1
   2d844:	cmp	r3, #8
   2d848:	ldrls	pc, [pc, r3, lsl #2]
   2d84c:	b	2d89c <crc32@@Base+0x140f8>
   2d850:	andeq	sp, r2, r0, lsl #17
   2d854:	andeq	sp, r2, r4, lsr #18
   2d858:	andeq	sp, r2, r8, lsr #17
   2d85c:	andeq	sp, r2, r4, lsr #18
   2d860:	muleq	r2, ip, r8
   2d864:	muleq	r2, ip, r8
   2d868:	muleq	r2, ip, r8
   2d86c:	muleq	r2, ip, r8
   2d870:	andeq	sp, r2, r4, lsr #18
   2d874:	ldrb	r3, [r0]
   2d878:	cmp	r3, #0
   2d87c:	beq	2d924 <crc32@@Base+0x14180>
   2d880:	mov	r2, #1
   2d884:	mov	r1, r4
   2d888:	mov	r0, r7
   2d88c:	add	r4, r4, r2
   2d890:	bl	2d73c <crc32@@Base+0x13f98>
   2d894:	cmp	r0, #0
   2d898:	bne	2d874 <crc32@@Base+0x140d0>
   2d89c:	mov	r5, #9
   2d8a0:	mov	r0, r5
   2d8a4:	pop	{r4, r5, r6, r7, r8, pc}
   2d8a8:	mov	r1, r4
   2d8ac:	mov	r2, #4
   2d8b0:	mov	r0, r7
   2d8b4:	bl	2d73c <crc32@@Base+0x13f98>
   2d8b8:	cmp	r0, #0
   2d8bc:	beq	2d89c <crc32@@Base+0x140f8>
   2d8c0:	ldr	ip, [r0]
   2d8c4:	add	r1, r8, #12
   2d8c8:	ldr	r0, [r7, #20]
   2d8cc:	ubfx	r3, ip, #8, #8
   2d8d0:	lsr	r2, ip, #24
   2d8d4:	ubfx	lr, r0, #8, #8
   2d8d8:	orr	r2, r2, ip, lsl #24
   2d8dc:	ubfx	ip, ip, #16, #8
   2d8e0:	orr	r2, r2, r3, lsl #16
   2d8e4:	lsr	r3, r0, #24
   2d8e8:	orr	r3, r3, r0, lsl #24
   2d8ec:	ubfx	r0, r0, #16, #8
   2d8f0:	orr	r3, r3, lr, lsl #16
   2d8f4:	orr	r2, r2, ip, lsl #8
   2d8f8:	orr	r0, r3, r0, lsl #8
   2d8fc:	add	r4, r2, r1
   2d900:	cmp	r0, #15
   2d904:	movls	r3, #1
   2d908:	movhi	r3, #0
   2d90c:	cmp	r2, #7
   2d910:	movls	r3, #0
   2d914:	cmp	r3, #0
   2d918:	beq	2d924 <crc32@@Base+0x14180>
   2d91c:	tst	r1, #7
   2d920:	addne	r4, r4, #4
   2d924:	mov	r0, r7
   2d928:	sub	r2, r4, r8
   2d92c:	mov	r1, r8
   2d930:	bl	2d73c <crc32@@Base+0x13f98>
   2d934:	cmp	r0, #0
   2d938:	beq	2d89c <crc32@@Base+0x140f8>
   2d93c:	add	r4, r4, #3
   2d940:	mov	r0, r5
   2d944:	bic	r4, r4, #3
   2d948:	str	r4, [r6]
   2d94c:	pop	{r4, r5, r6, r7, r8, pc}
   2d950:	push	{lr}		; (str lr, [sp, #-4]!)
   2d954:	subs	r3, r1, #0
   2d958:	sub	sp, sp, #12
   2d95c:	str	r1, [sp, #4]
   2d960:	blt	2d988 <crc32@@Base+0x141e4>
   2d964:	tst	r3, #3
   2d968:	bne	2d988 <crc32@@Base+0x141e4>
   2d96c:	add	r2, sp, #4
   2d970:	bl	2d7f0 <crc32@@Base+0x1404c>
   2d974:	cmp	r0, #1
   2d978:	bne	2d988 <crc32@@Base+0x141e4>
   2d97c:	ldr	r0, [sp, #4]
   2d980:	add	sp, sp, #12
   2d984:	pop	{pc}		; (ldr pc, [sp], #4)
   2d988:	mvn	r0, #3
   2d98c:	b	2d980 <crc32@@Base+0x141dc>
   2d990:	push	{lr}		; (str lr, [sp, #-4]!)
   2d994:	subs	r3, r1, #0
   2d998:	sub	sp, sp, #12
   2d99c:	str	r1, [sp, #4]
   2d9a0:	blt	2d9c8 <crc32@@Base+0x14224>
   2d9a4:	tst	r3, #3
   2d9a8:	bne	2d9c8 <crc32@@Base+0x14224>
   2d9ac:	add	r2, sp, #4
   2d9b0:	bl	2d7f0 <crc32@@Base+0x1404c>
   2d9b4:	cmp	r0, #3
   2d9b8:	bne	2d9c8 <crc32@@Base+0x14224>
   2d9bc:	ldr	r0, [sp, #4]
   2d9c0:	add	sp, sp, #12
   2d9c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9c8:	mvn	r0, #3
   2d9cc:	b	2d9c0 <crc32@@Base+0x1421c>
   2d9d0:	push	{r4, r5, r6, r7, lr}
   2d9d4:	movw	r6, #61168	; 0xeef0
   2d9d8:	movt	r6, #4
   2d9dc:	sub	sp, sp, #12
   2d9e0:	cmp	r1, #0
   2d9e4:	mov	r4, #0
   2d9e8:	ldr	r3, [r6]
   2d9ec:	mov	r5, r2
   2d9f0:	str	r4, [sp]
   2d9f4:	mov	r7, r0
   2d9f8:	str	r3, [sp, #4]
   2d9fc:	bge	2da9c <crc32@@Base+0x142f8>
   2da00:	mov	r2, sp
   2da04:	mov	r1, r4
   2da08:	mov	r0, r7
   2da0c:	bl	2d7f0 <crc32@@Base+0x1404c>
   2da10:	cmp	r0, #2
   2da14:	beq	2da30 <crc32@@Base+0x1428c>
   2da18:	cmp	r0, #9
   2da1c:	beq	2da80 <crc32@@Base+0x142dc>
   2da20:	cmp	r0, #1
   2da24:	beq	2da54 <crc32@@Base+0x142b0>
   2da28:	ldr	r4, [sp]
   2da2c:	b	2da00 <crc32@@Base+0x1425c>
   2da30:	cmp	r5, #0
   2da34:	beq	2da28 <crc32@@Base+0x14284>
   2da38:	ldr	r3, [r5]
   2da3c:	sub	r3, r3, #1
   2da40:	str	r3, [r5]
   2da44:	cmp	r3, #0
   2da48:	bge	2da28 <crc32@@Base+0x14284>
   2da4c:	ldr	r4, [sp]
   2da50:	b	2da64 <crc32@@Base+0x142c0>
   2da54:	cmp	r5, #0
   2da58:	ldrne	r3, [r5]
   2da5c:	addne	r3, r3, #1
   2da60:	strne	r3, [r5]
   2da64:	ldr	r2, [sp, #4]
   2da68:	mov	r0, r4
   2da6c:	ldr	r3, [r6]
   2da70:	cmp	r2, r3
   2da74:	bne	2dabc <crc32@@Base+0x14318>
   2da78:	add	sp, sp, #12
   2da7c:	pop	{r4, r5, r6, r7, pc}
   2da80:	ldr	r4, [sp]
   2da84:	cmp	r4, #0
   2da88:	bge	2dab4 <crc32@@Base+0x14310>
   2da8c:	cmp	r5, #0
   2da90:	cmneq	r4, #8
   2da94:	mvneq	r4, #0
   2da98:	b	2da64 <crc32@@Base+0x142c0>
   2da9c:	bl	2d950 <crc32@@Base+0x141ac>
   2daa0:	cmp	r0, #0
   2daa4:	mov	r4, r0
   2daa8:	str	r0, [sp]
   2daac:	bge	2da00 <crc32@@Base+0x1425c>
   2dab0:	b	2da64 <crc32@@Base+0x142c0>
   2dab4:	mvn	r4, #0
   2dab8:	b	2da64 <crc32@@Base+0x142c0>
   2dabc:	bl	12494 <__stack_chk_fail@plt>
   2dac0:	push	{r4, lr}
   2dac4:	movw	r4, #61168	; 0xeef0
   2dac8:	movt	r4, #4
   2dacc:	sub	sp, sp, #8
   2dad0:	add	r2, sp, #8
   2dad4:	mov	ip, #0
   2dad8:	ldr	r3, [r4]
   2dadc:	str	ip, [r2, #-8]!
   2dae0:	str	r3, [sp, #4]
   2dae4:	bl	2d9d0 <crc32@@Base+0x1422c>
   2dae8:	cmp	r0, #0
   2daec:	blt	2db14 <crc32@@Base+0x14370>
   2daf0:	ldr	r3, [sp]
   2daf4:	cmp	r3, #1
   2daf8:	mvnne	r0, #0
   2dafc:	ldr	r2, [sp, #4]
   2db00:	ldr	r3, [r4]
   2db04:	cmp	r2, r3
   2db08:	bne	2db1c <crc32@@Base+0x14378>
   2db0c:	add	sp, sp, #8
   2db10:	pop	{r4, pc}
   2db14:	mvn	r0, #0
   2db18:	b	2dafc <crc32@@Base+0x14358>
   2db1c:	bl	12494 <__stack_chk_fail@plt>
   2db20:	push	{r4, r5, r6, lr}
   2db24:	movw	r6, #61168	; 0xeef0
   2db28:	movt	r6, #4
   2db2c:	sub	sp, sp, #8
   2db30:	add	r4, sp, #8
   2db34:	mov	r2, #1
   2db38:	ldr	r3, [r6]
   2db3c:	mov	r5, r0
   2db40:	str	r2, [r4, #-8]!
   2db44:	str	r3, [sp, #4]
   2db48:	b	2db60 <crc32@@Base+0x143bc>
   2db4c:	ldr	r3, [sp]
   2db50:	cmp	r3, #0
   2db54:	ble	2db74 <crc32@@Base+0x143d0>
   2db58:	cmp	r3, #1
   2db5c:	beq	2db90 <crc32@@Base+0x143ec>
   2db60:	mov	r2, r4
   2db64:	mov	r0, r5
   2db68:	bl	2d9d0 <crc32@@Base+0x1422c>
   2db6c:	subs	r1, r0, #0
   2db70:	bge	2db4c <crc32@@Base+0x143a8>
   2db74:	mvn	r0, #0
   2db78:	ldr	r2, [sp, #4]
   2db7c:	ldr	r3, [r6]
   2db80:	cmp	r2, r3
   2db84:	bne	2db98 <crc32@@Base+0x143f4>
   2db88:	add	sp, sp, #8
   2db8c:	pop	{r4, r5, r6, pc}
   2db90:	mov	r0, r1
   2db94:	b	2db78 <crc32@@Base+0x143d4>
   2db98:	bl	12494 <__stack_chk_fail@plt>
   2db9c:	push	{r4, r5, r6, r7, r8, lr}
   2dba0:	mov	r4, r0
   2dba4:	mov	r0, r2
   2dba8:	mov	r5, r1
   2dbac:	mov	r7, r2
   2dbb0:	bl	125c0 <strlen@plt>
   2dbb4:	add	r6, r0, #1
   2dbb8:	sub	r5, r5, r6
   2dbbc:	adds	r5, r4, r5
   2dbc0:	bcc	2dbd4 <crc32@@Base+0x14430>
   2dbc4:	b	2dbf4 <crc32@@Base+0x14450>
   2dbc8:	add	r4, r4, #1
   2dbcc:	cmp	r5, r4
   2dbd0:	bcc	2dbf4 <crc32@@Base+0x14450>
   2dbd4:	mov	r2, r6
   2dbd8:	mov	r1, r7
   2dbdc:	mov	r0, r4
   2dbe0:	bl	126c8 <memcmp@plt>
   2dbe4:	cmp	r0, #0
   2dbe8:	bne	2dbc8 <crc32@@Base+0x14424>
   2dbec:	mov	r0, r4
   2dbf0:	pop	{r4, r5, r6, r7, r8, pc}
   2dbf4:	mov	r0, #0
   2dbf8:	pop	{r4, r5, r6, r7, r8, pc}
   2dbfc:	push	{r4, r5, r6, r7, r8, lr}
   2dc00:	mov	r6, r1
   2dc04:	mov	r5, r2
   2dc08:	mov	r4, r0
   2dc0c:	bl	2d674 <crc32@@Base+0x13ed0>
   2dc10:	subs	r7, r0, #0
   2dc14:	bne	2dc48 <crc32@@Base+0x144a4>
   2dc18:	ldr	r3, [r4, #4]
   2dc1c:	ubfx	r0, r3, #8, #8
   2dc20:	ubfx	r1, r3, #16, #8
   2dc24:	lsr	r2, r3, #24
   2dc28:	orr	r2, r2, r3, lsl #24
   2dc2c:	orr	r2, r2, r0, lsl #16
   2dc30:	orr	r2, r2, r1, lsl #8
   2dc34:	cmp	r5, r2
   2dc38:	bcc	2dc50 <crc32@@Base+0x144ac>
   2dc3c:	mov	r1, r4
   2dc40:	mov	r0, r6
   2dc44:	bl	12380 <memmove@plt>
   2dc48:	mov	r0, r7
   2dc4c:	pop	{r4, r5, r6, r7, r8, pc}
   2dc50:	mvn	r7, #2
   2dc54:	b	2dc48 <crc32@@Base+0x144a4>
   2dc58:	push	{r4, r5, r6, lr}
   2dc5c:	movw	r4, #61168	; 0xeef0
   2dc60:	sub	sp, sp, #16
   2dc64:	movt	r4, #4
   2dc68:	add	ip, sp, #8
   2dc6c:	str	ip, [sp]
   2dc70:	ldr	ip, [r4]
   2dc74:	ldr	r5, [sp, #32]
   2dc78:	ldr	r6, [sp, #36]	; 0x24
   2dc7c:	str	ip, [sp, #12]
   2dc80:	bl	30eb8 <crc32@@Base+0x17714>
   2dc84:	cmp	r0, #0
   2dc88:	ldreq	r0, [sp, #8]
   2dc8c:	beq	2dcb8 <crc32@@Base+0x14514>
   2dc90:	ldr	r2, [sp, #40]	; 0x28
   2dc94:	ldr	r3, [sp, #8]
   2dc98:	add	r2, r2, r5
   2dc9c:	cmp	r2, r3
   2dca0:	bhi	2dcd0 <crc32@@Base+0x1452c>
   2dca4:	mov	r1, r6
   2dca8:	add	r0, r0, r5
   2dcac:	ldr	r2, [sp, #40]	; 0x28
   2dcb0:	bl	1259c <memcpy@plt>
   2dcb4:	mov	r0, #0
   2dcb8:	ldr	r2, [sp, #12]
   2dcbc:	ldr	r3, [r4]
   2dcc0:	cmp	r2, r3
   2dcc4:	bne	2dcd8 <crc32@@Base+0x14534>
   2dcc8:	add	sp, sp, #16
   2dccc:	pop	{r4, r5, r6, pc}
   2dcd0:	mvn	r0, #2
   2dcd4:	b	2dcb8 <crc32@@Base+0x14514>
   2dcd8:	bl	12494 <__stack_chk_fail@plt>
   2dcdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2dce0:	movw	r4, #61168	; 0xeef0
   2dce4:	movt	r4, #4
   2dce8:	sub	sp, sp, #28
   2dcec:	mov	r9, r3
   2dcf0:	add	r3, sp, #16
   2dcf4:	ldr	ip, [r4]
   2dcf8:	mov	r7, r0
   2dcfc:	mov	r8, r1
   2dd00:	mov	r5, r2
   2dd04:	str	ip, [sp, #20]
   2dd08:	bl	30f4c <crc32@@Base+0x177a8>
   2dd0c:	cmp	r0, #0
   2dd10:	ldreq	r0, [sp, #16]
   2dd14:	beq	2dd54 <crc32@@Base+0x145b0>
   2dd18:	ldr	r6, [sp, #16]
   2dd1c:	ldr	r3, [sp, #56]	; 0x38
   2dd20:	cmp	r6, r3
   2dd24:	bne	2dd6c <crc32@@Base+0x145c8>
   2dd28:	mov	r0, r5
   2dd2c:	bl	125c0 <strlen@plt>
   2dd30:	mov	r3, #0
   2dd34:	str	r6, [sp, #8]
   2dd38:	mov	r2, r5
   2dd3c:	str	r3, [sp]
   2dd40:	mov	r1, r8
   2dd44:	str	r9, [sp, #4]
   2dd48:	mov	r3, r0
   2dd4c:	mov	r0, r7
   2dd50:	bl	2dc58 <crc32@@Base+0x144b4>
   2dd54:	ldr	r2, [sp, #20]
   2dd58:	ldr	r3, [r4]
   2dd5c:	cmp	r2, r3
   2dd60:	bne	2dd74 <crc32@@Base+0x145d0>
   2dd64:	add	sp, sp, #28
   2dd68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2dd6c:	mvn	r0, #2
   2dd70:	b	2dd54 <crc32@@Base+0x145b0>
   2dd74:	bl	12494 <__stack_chk_fail@plt>
   2dd78:	push	{r4, lr}
   2dd7c:	movw	r4, #61168	; 0xeef0
   2dd80:	movt	r4, #4
   2dd84:	sub	sp, sp, #8
   2dd88:	ldr	ip, [r4]
   2dd8c:	mov	r3, sp
   2dd90:	str	ip, [sp, #4]
   2dd94:	bl	30e78 <crc32@@Base+0x176d4>
   2dd98:	cmp	r0, #0
   2dd9c:	ldreq	r0, [sp]
   2dda0:	beq	2ddcc <crc32@@Base+0x14628>
   2dda4:	ldr	r3, [sp]
   2dda8:	add	r3, r3, #12
   2ddac:	add	r3, r0, r3
   2ddb0:	cmp	r0, r3
   2ddb4:	bcs	2ddc8 <crc32@@Base+0x14624>
   2ddb8:	mov	r2, #67108864	; 0x4000000
   2ddbc:	str	r2, [r0], #4
   2ddc0:	cmp	r0, r3
   2ddc4:	bcc	2ddbc <crc32@@Base+0x14618>
   2ddc8:	mov	r0, #0
   2ddcc:	ldr	r2, [sp, #4]
   2ddd0:	ldr	r3, [r4]
   2ddd4:	cmp	r2, r3
   2ddd8:	bne	2dde4 <crc32@@Base+0x14640>
   2dddc:	add	sp, sp, #8
   2dde0:	pop	{r4, pc}
   2dde4:	bl	12494 <__stack_chk_fail@plt>
   2dde8:	push	{r4, r5, lr}
   2ddec:	movw	r5, #61168	; 0xeef0
   2ddf0:	movt	r5, #4
   2ddf4:	sub	sp, sp, #12
   2ddf8:	cmp	r1, #0
   2ddfc:	mov	r2, #0
   2de00:	ldr	r3, [r5]
   2de04:	str	r2, [sp]
   2de08:	str	r3, [sp, #4]
   2de0c:	blt	2de34 <crc32@@Base+0x14690>
   2de10:	mov	r4, r0
   2de14:	mov	r2, sp
   2de18:	mov	r0, r4
   2de1c:	bl	2d9d0 <crc32@@Base+0x1422c>
   2de20:	ldr	r3, [sp]
   2de24:	cmp	r0, #0
   2de28:	cmpge	r3, #0
   2de2c:	mov	r1, r0
   2de30:	bge	2de14 <crc32@@Base+0x14670>
   2de34:	ldr	r2, [sp, #4]
   2de38:	mov	r0, r1
   2de3c:	ldr	r3, [r5]
   2de40:	cmp	r2, r3
   2de44:	bne	2de50 <crc32@@Base+0x146ac>
   2de48:	add	sp, sp, #12
   2de4c:	pop	{r4, r5, pc}
   2de50:	bl	12494 <__stack_chk_fail@plt>
   2de54:	push	{r4, r5, r6, lr}
   2de58:	mov	r6, r0
   2de5c:	mov	r5, r1
   2de60:	bl	2dde8 <crc32@@Base+0x14644>
   2de64:	subs	r4, r0, #0
   2de68:	blt	2dea0 <crc32@@Base+0x146fc>
   2de6c:	mov	r1, r5
   2de70:	mov	r0, r6
   2de74:	mov	r2, #0
   2de78:	bl	2d73c <crc32@@Base+0x13f98>
   2de7c:	sub	r1, r4, r5
   2de80:	add	r1, r0, r1
   2de84:	cmp	r0, r1
   2de88:	movcc	r3, #67108864	; 0x4000000
   2de8c:	bcs	2de9c <crc32@@Base+0x146f8>
   2de90:	str	r3, [r0], #4
   2de94:	cmp	r0, r1
   2de98:	bcc	2de90 <crc32@@Base+0x146ec>
   2de9c:	mov	r4, #0
   2dea0:	mov	r0, r4
   2dea4:	pop	{r4, r5, r6, pc}
   2dea8:	push	{r4, r5, r6, r7, r8, lr}
   2deac:	ldr	r5, [r0, #36]	; 0x24
   2deb0:	ldmib	r0, {r4, ip}
   2deb4:	ldr	r6, [r0, #32]
   2deb8:	ubfx	r3, r5, #8, #8
   2debc:	lsr	lr, r5, #24
   2dec0:	ubfx	r7, r4, #8, #8
   2dec4:	lsr	r2, r4, #24
   2dec8:	orr	lr, lr, r5, lsl #24
   2decc:	ubfx	r5, r5, #16, #8
   2ded0:	ubfx	r8, ip, #8, #8
   2ded4:	orr	r2, r2, r4, lsl #24
   2ded8:	orr	lr, lr, r3, lsl #16
   2dedc:	lsr	r3, ip, #24
   2dee0:	ubfx	r4, r4, #16, #8
   2dee4:	orr	lr, lr, r5, lsl #8
   2dee8:	orr	r3, r3, ip, lsl #24
   2deec:	ubfx	r5, r6, #8, #8
   2def0:	orr	r2, r2, r7, lsl #16
   2def4:	ubfx	r7, ip, #16, #8
   2def8:	lsr	ip, r6, #24
   2defc:	orr	r3, r3, r8, lsl #16
   2df00:	orr	ip, ip, r6, lsl #24
   2df04:	ubfx	r6, r6, #16, #8
   2df08:	orr	r3, r3, r7, lsl #8
   2df0c:	orr	r2, r2, r4, lsl #8
   2df10:	orr	ip, ip, r5, lsl #16
   2df14:	adds	r1, r1, lr
   2df18:	sub	r2, r2, r3
   2df1c:	orr	ip, ip, r6, lsl #8
   2df20:	sub	r2, r2, ip
   2df24:	movcs	r4, #1
   2df28:	movcc	r4, #0
   2df2c:	cmp	r2, r1
   2df30:	movcs	r2, r4
   2df34:	orrcc	r2, r4, #1
   2df38:	cmp	r2, #0
   2df3c:	addeq	r3, r3, lr
   2df40:	reveq	r1, r1
   2df44:	addeq	r3, r0, r3
   2df48:	movne	r3, #0
   2df4c:	streq	r1, [r0, #36]	; 0x24
   2df50:	mov	r0, r3
   2df54:	pop	{r4, r5, r6, r7, r8, pc}
   2df58:	cmp	r1, #39	; 0x27
   2df5c:	bls	2dfc4 <crc32@@Base+0x14820>
   2df60:	push	{r4, r5, r6, lr}
   2df64:	mov	r2, r1
   2df68:	mov	r4, r1
   2df6c:	mov	r1, #0
   2df70:	mov	r5, r0
   2df74:	bl	122e4 <memset@plt>
   2df78:	ubfx	r2, r4, #8, #8
   2df7c:	lsr	r1, r4, #24
   2df80:	orr	r1, r1, r4, lsl #24
   2df84:	ubfx	r4, r4, #16, #8
   2df88:	orr	r1, r1, r2, lsl #16
   2df8c:	movw	r3, #61999	; 0xf22f
   2df90:	orr	r4, r1, r4, lsl #8
   2df94:	movt	r3, #4609	; 0x1201
   2df98:	mov	r2, #33554432	; 0x2000000
   2df9c:	stm	r5, {r3, r4}
   2dfa0:	str	r4, [r5, #12]
   2dfa4:	mov	r3, #285212672	; 0x11000000
   2dfa8:	str	r2, [r5, #24]
   2dfac:	mov	r0, #0
   2dfb0:	str	r3, [r5, #20]
   2dfb4:	mov	r3, #805306368	; 0x30000000
   2dfb8:	str	r3, [r5, #16]
   2dfbc:	str	r3, [r5, #8]
   2dfc0:	pop	{r4, r5, r6, pc}
   2dfc4:	mvn	r0, #2
   2dfc8:	bx	lr
   2dfcc:	ldr	ip, [r0]
   2dfd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2dfd4:	ubfx	r5, ip, #8, #8
   2dfd8:	lsr	r3, ip, #24
   2dfdc:	ubfx	r4, ip, #16, #8
   2dfe0:	orr	r3, r3, ip, lsl #24
   2dfe4:	movw	lr, #274	; 0x112
   2dfe8:	orr	r3, r3, r5, lsl #16
   2dfec:	movt	lr, #12274	; 0x2ff2
   2dff0:	orr	r3, r3, r4, lsl #8
   2dff4:	cmp	r3, lr
   2dff8:	bne	2e0ec <crc32@@Base+0x14948>
   2dffc:	ldr	ip, [r0, #8]
   2e000:	ldr	r3, [r0, #32]
   2e004:	ubfx	r6, ip, #8, #8
   2e008:	ubfx	lr, ip, #16, #8
   2e00c:	ubfx	r4, r3, #8, #8
   2e010:	lsr	r8, ip, #24
   2e014:	lsr	r5, r3, #24
   2e018:	orr	r8, r8, ip, lsl #24
   2e01c:	orr	r5, r5, r3, lsl #24
   2e020:	ubfx	r3, r3, #16, #8
   2e024:	orr	r8, r8, r6, lsl #16
   2e028:	orr	r5, r5, r4, lsl #16
   2e02c:	orr	r8, r8, lr, lsl #8
   2e030:	orr	r5, r5, r3, lsl #8
   2e034:	add	r3, r5, r8
   2e038:	cmp	r3, r2
   2e03c:	bhi	2e0f4 <crc32@@Base+0x14950>
   2e040:	ldr	r3, [r0, #4]
   2e044:	mov	r9, r1
   2e048:	cmp	r0, r1
   2e04c:	sub	sl, r2, r5
   2e050:	ubfx	r1, r3, #8, #8
   2e054:	mov	r6, r2
   2e058:	lsr	r4, r3, #24
   2e05c:	ubfx	r2, r3, #16, #8
   2e060:	orr	r4, r4, r3, lsl #24
   2e064:	mov	r7, r0
   2e068:	orr	r4, r4, r1, lsl #16
   2e06c:	add	sl, r9, sl
   2e070:	orr	r4, r4, r2, lsl #8
   2e074:	sub	r4, r4, r5
   2e078:	add	r4, r0, r4
   2e07c:	bcs	2e0c8 <crc32@@Base+0x14924>
   2e080:	mov	r2, r5
   2e084:	mov	r1, r4
   2e088:	mov	r0, sl
   2e08c:	bl	12380 <memmove@plt>
   2e090:	mov	r2, r8
   2e094:	mov	r1, r7
   2e098:	mov	r0, r9
   2e09c:	bl	12380 <memmove@plt>
   2e0a0:	lsr	r3, r6, #24
   2e0a4:	ubfx	r1, r6, #8, #8
   2e0a8:	ubfx	r2, r6, #16, #8
   2e0ac:	orr	r3, r3, r6, lsl #24
   2e0b0:	orr	r6, r3, r1, lsl #16
   2e0b4:	mov	r0, #0
   2e0b8:	orr	r6, r6, r2, lsl #8
   2e0bc:	str	r6, [r9, #12]
   2e0c0:	str	r6, [r9, #4]
   2e0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e0c8:	mov	r2, r8
   2e0cc:	mov	r1, r0
   2e0d0:	mov	r0, r9
   2e0d4:	bl	12380 <memmove@plt>
   2e0d8:	mov	r2, r5
   2e0dc:	mov	r1, r4
   2e0e0:	mov	r0, sl
   2e0e4:	bl	12380 <memmove@plt>
   2e0e8:	b	2e0a0 <crc32@@Base+0x148fc>
   2e0ec:	mvn	r0, #8
   2e0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e0f4:	mvn	r0, #2
   2e0f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e0fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e100:	mov	lr, r0
   2e104:	ldr	r0, [r0]
   2e108:	movw	ip, #274	; 0x112
   2e10c:	movt	ip, #12274	; 0x2ff2
   2e110:	ubfx	r4, r0, #8, #8
   2e114:	ubfx	r5, r0, #16, #8
   2e118:	lsr	r1, r0, #24
   2e11c:	orr	r1, r1, r0, lsl #24
   2e120:	orr	r1, r1, r4, lsl #16
   2e124:	ldr	r4, [sp, #28]
   2e128:	orr	r1, r1, r5, lsl #8
   2e12c:	ldr	r5, [sp, #32]
   2e130:	cmp	r1, ip
   2e134:	bne	2e1c8 <crc32@@Base+0x14a24>
   2e138:	ldr	ip, [lr, #36]	; 0x24
   2e13c:	ubfx	r6, ip, #8, #8
   2e140:	ubfx	r0, ip, #16, #8
   2e144:	lsr	r1, ip, #24
   2e148:	orr	r1, r1, ip, lsl #24
   2e14c:	orr	r1, r1, r6, lsl #16
   2e150:	orrs	r0, r1, r0, lsl #8
   2e154:	bne	2e1d0 <crc32@@Base+0x14a2c>
   2e158:	ldmib	lr, {r6, ip}
   2e15c:	ubfx	r9, ip, #8, #8
   2e160:	ubfx	r7, r6, #8, #8
   2e164:	lsr	r1, ip, #24
   2e168:	ubfx	r8, ip, #16, #8
   2e16c:	orr	r1, r1, ip, lsl #24
   2e170:	lsr	ip, r6, #24
   2e174:	orr	ip, ip, r6, lsl #24
   2e178:	orr	r1, r1, r9, lsl #16
   2e17c:	ubfx	r6, r6, #16, #8
   2e180:	orr	ip, ip, r7, lsl #16
   2e184:	orr	r1, r1, r8, lsl #8
   2e188:	add	r7, r1, #16
   2e18c:	orr	ip, ip, r6, lsl #8
   2e190:	cmp	r7, ip
   2e194:	bhi	2e1d8 <crc32@@Base+0x14a34>
   2e198:	add	ip, lr, r1
   2e19c:	rev	r3, r3
   2e1a0:	rev	r2, r2
   2e1a4:	str	r3, [lr, r1]
   2e1a8:	rev	r4, r4
   2e1ac:	str	r2, [ip, #4]
   2e1b0:	str	r4, [ip, #12]
   2e1b4:	rev	r5, r5
   2e1b8:	rev	r7, r7
   2e1bc:	str	r5, [ip, #8]
   2e1c0:	str	r7, [lr, #8]
   2e1c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e1c8:	mvn	r0, #8
   2e1cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e1d0:	mvn	r0, #6
   2e1d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e1d8:	mvn	r0, #2
   2e1dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e1e0:	push	{lr}		; (str lr, [sp, #-4]!)
   2e1e4:	sub	sp, sp, #12
   2e1e8:	mov	r2, #0
   2e1ec:	mov	r3, #0
   2e1f0:	strd	r2, [sp]
   2e1f4:	bl	2e0fc <crc32@@Base+0x14958>
   2e1f8:	add	sp, sp, #12
   2e1fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2e200:	push	{r4, r5, r6, lr}
   2e204:	mov	r6, r0
   2e208:	mov	r0, r1
   2e20c:	mov	r4, r1
   2e210:	bl	125c0 <strlen@plt>
   2e214:	ldr	r2, [r6]
   2e218:	movw	r1, #274	; 0x112
   2e21c:	movt	r1, #12274	; 0x2ff2
   2e220:	ubfx	lr, r2, #8, #8
   2e224:	ubfx	ip, r2, #16, #8
   2e228:	lsr	r3, r2, #24
   2e22c:	orr	r3, r3, r2, lsl #24
   2e230:	orr	r3, r3, lr, lsl #16
   2e234:	orr	r3, r3, ip, lsl #8
   2e238:	cmp	r3, r1
   2e23c:	bne	2e27c <crc32@@Base+0x14ad8>
   2e240:	add	r1, r0, #4
   2e244:	add	r5, r0, #1
   2e248:	bic	r1, r1, #3
   2e24c:	mov	r0, r6
   2e250:	add	r1, r1, #4
   2e254:	bl	2dea8 <crc32@@Base+0x14704>
   2e258:	cmp	r0, #0
   2e25c:	beq	2e284 <crc32@@Base+0x14ae0>
   2e260:	mov	r3, #16777216	; 0x1000000
   2e264:	mov	r2, r5
   2e268:	mov	r1, r4
   2e26c:	str	r3, [r0], #4
   2e270:	bl	1259c <memcpy@plt>
   2e274:	mov	r0, #0
   2e278:	pop	{r4, r5, r6, pc}
   2e27c:	mvn	r0, #8
   2e280:	pop	{r4, r5, r6, pc}
   2e284:	mvn	r0, #2
   2e288:	pop	{r4, r5, r6, pc}
   2e28c:	ldr	r2, [r0]
   2e290:	movw	r1, #274	; 0x112
   2e294:	push	{r4, lr}
   2e298:	ubfx	lr, r2, #8, #8
   2e29c:	lsr	r3, r2, #24
   2e2a0:	ubfx	ip, r2, #16, #8
   2e2a4:	orr	r3, r3, r2, lsl #24
   2e2a8:	movt	r1, #12274	; 0x2ff2
   2e2ac:	orr	r3, r3, lr, lsl #16
   2e2b0:	orr	r3, r3, ip, lsl #8
   2e2b4:	cmp	r3, r1
   2e2b8:	bne	2e2dc <crc32@@Base+0x14b38>
   2e2bc:	mov	r1, #4
   2e2c0:	bl	2dea8 <crc32@@Base+0x14704>
   2e2c4:	subs	r3, r0, #0
   2e2c8:	beq	2e2e4 <crc32@@Base+0x14b40>
   2e2cc:	mov	r2, #33554432	; 0x2000000
   2e2d0:	mov	r0, #0
   2e2d4:	str	r2, [r3]
   2e2d8:	pop	{r4, pc}
   2e2dc:	mvn	r0, #8
   2e2e0:	pop	{r4, pc}
   2e2e4:	mvn	r0, #2
   2e2e8:	pop	{r4, pc}
   2e2ec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2f0:	movw	r4, #274	; 0x112
   2e2f4:	ldr	lr, [r0]
   2e2f8:	movt	r4, #12274	; 0x2ff2
   2e2fc:	ubfx	r6, lr, #8, #8
   2e300:	ubfx	r5, lr, #16, #8
   2e304:	lsr	ip, lr, #24
   2e308:	orr	ip, ip, lr, lsl #24
   2e30c:	orr	ip, ip, r6, lsl #16
   2e310:	orr	ip, ip, r5, lsl #8
   2e314:	cmp	ip, r4
   2e318:	bne	2e4b0 <crc32@@Base+0x14d0c>
   2e31c:	mov	sl, r0
   2e320:	ldr	ip, [r0, #4]
   2e324:	mov	r9, r3
   2e328:	ldr	r3, [sl, #32]
   2e32c:	ubfx	lr, ip, #8, #8
   2e330:	mov	r7, r2
   2e334:	lsr	r5, ip, #24
   2e338:	ubfx	r2, r3, #8, #8
   2e33c:	lsr	r6, r3, #24
   2e340:	orr	r5, r5, ip, lsl #24
   2e344:	mov	r8, r1
   2e348:	mov	r0, r1
   2e34c:	orr	r6, r6, r3, lsl #24
   2e350:	ubfx	r1, ip, #16, #8
   2e354:	ubfx	r3, r3, #16, #8
   2e358:	orr	r5, r5, lr, lsl #16
   2e35c:	orr	r6, r6, r2, lsl #16
   2e360:	orr	r5, r5, r1, lsl #8
   2e364:	orr	r6, r6, r3, lsl #8
   2e368:	bl	125c0 <strlen@plt>
   2e36c:	add	r5, sl, r5
   2e370:	mov	r2, r8
   2e374:	mov	r1, r6
   2e378:	mov	fp, r0
   2e37c:	sub	r0, r5, r6
   2e380:	bl	2db9c <crc32@@Base+0x143f8>
   2e384:	cmp	r0, #0
   2e388:	subne	r4, r0, r5
   2e38c:	beq	2e404 <crc32@@Base+0x14c60>
   2e390:	cmp	r4, #0
   2e394:	beq	2e474 <crc32@@Base+0x14cd0>
   2e398:	add	r1, r7, #3
   2e39c:	mov	r0, sl
   2e3a0:	bic	r1, r1, #3
   2e3a4:	add	r1, r1, #12
   2e3a8:	bl	2dea8 <crc32@@Base+0x14704>
   2e3ac:	cmp	r0, #0
   2e3b0:	beq	2e474 <crc32@@Base+0x14cd0>
   2e3b4:	ubfx	r1, r4, #8, #8
   2e3b8:	lsr	r3, r4, #24
   2e3bc:	orr	r3, r3, r4, lsl #24
   2e3c0:	lsr	r2, r7, #24
   2e3c4:	orr	r3, r3, r1, lsl #16
   2e3c8:	ubfx	r1, r7, #8, #8
   2e3cc:	orr	r2, r2, r7, lsl #24
   2e3d0:	ubfx	r4, r4, #16, #8
   2e3d4:	ubfx	r7, r7, #16, #8
   2e3d8:	orr	r2, r2, r1, lsl #16
   2e3dc:	orr	r4, r3, r4, lsl #8
   2e3e0:	add	r3, r0, #12
   2e3e4:	str	r4, [r0, #8]
   2e3e8:	orr	r7, r2, r7, lsl #8
   2e3ec:	mov	r2, #50331648	; 0x3000000
   2e3f0:	str	r7, [r0, #4]
   2e3f4:	str	r2, [r0]
   2e3f8:	mov	r0, #0
   2e3fc:	str	r3, [r9]
   2e400:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e404:	ldr	r2, [sl, #8]
   2e408:	add	fp, fp, #1
   2e40c:	ldr	r0, [sl, #36]	; 0x24
   2e410:	rsb	r4, r6, #0
   2e414:	ubfx	ip, r2, #8, #8
   2e418:	ldr	r1, [sl, #4]
   2e41c:	lsr	r3, r2, #24
   2e420:	ubfx	lr, r0, #8, #8
   2e424:	orr	r3, r3, r2, lsl #24
   2e428:	ubfx	r2, r2, #16, #8
   2e42c:	orr	r3, r3, ip, lsl #16
   2e430:	lsr	ip, r0, #24
   2e434:	orr	ip, ip, r0, lsl #24
   2e438:	ubfx	r0, r0, #16, #8
   2e43c:	orr	ip, ip, lr, lsl #16
   2e440:	orr	r3, r3, r2, lsl #8
   2e444:	orr	r0, ip, r0, lsl #8
   2e448:	lsr	r2, r1, #24
   2e44c:	ubfx	ip, r1, #8, #8
   2e450:	orr	r2, r2, r1, lsl #24
   2e454:	ubfx	r1, r1, #16, #8
   2e458:	sub	r4, r4, fp
   2e45c:	orr	r2, r2, ip, lsl #16
   2e460:	add	r3, r3, r0
   2e464:	orr	r2, r2, r1, lsl #8
   2e468:	add	r2, r2, r4
   2e46c:	cmp	r3, r2
   2e470:	bls	2e47c <crc32@@Base+0x14cd8>
   2e474:	mvn	r0, #2
   2e478:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e47c:	add	r6, r6, fp
   2e480:	mov	r1, r8
   2e484:	mov	r2, fp
   2e488:	add	r0, r5, r4
   2e48c:	bl	1259c <memcpy@plt>
   2e490:	ubfx	r1, r6, #8, #8
   2e494:	lsr	r3, r6, #24
   2e498:	ubfx	r2, r6, #16, #8
   2e49c:	orr	r6, r3, r6, lsl #24
   2e4a0:	orr	r6, r6, r1, lsl #16
   2e4a4:	orr	r6, r6, r2, lsl #8
   2e4a8:	str	r6, [sl, #32]
   2e4ac:	b	2e390 <crc32@@Base+0x14bec>
   2e4b0:	mvn	r0, #8
   2e4b4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e4b8:	push	{r4, r5, r6, r7, lr}
   2e4bc:	movw	r4, #61168	; 0xeef0
   2e4c0:	movt	r4, #4
   2e4c4:	sub	sp, sp, #12
   2e4c8:	mov	r5, r3
   2e4cc:	mov	r7, r2
   2e4d0:	ldr	ip, [r4]
   2e4d4:	mov	r2, r3
   2e4d8:	mov	r3, sp
   2e4dc:	str	ip, [sp, #4]
   2e4e0:	bl	2e2ec <crc32@@Base+0x14b48>
   2e4e4:	subs	r6, r0, #0
   2e4e8:	bne	2e4fc <crc32@@Base+0x14d58>
   2e4ec:	mov	r2, r5
   2e4f0:	mov	r1, r7
   2e4f4:	ldr	r0, [sp]
   2e4f8:	bl	1259c <memcpy@plt>
   2e4fc:	ldr	r2, [sp, #4]
   2e500:	mov	r0, r6
   2e504:	ldr	r3, [r4]
   2e508:	cmp	r2, r3
   2e50c:	bne	2e518 <crc32@@Base+0x14d74>
   2e510:	add	sp, sp, #12
   2e514:	pop	{r4, r5, r6, r7, pc}
   2e518:	bl	12494 <__stack_chk_fail@plt>
   2e51c:	ldr	r2, [r0]
   2e520:	push	{r4, r5, r6, r7, r8, lr}
   2e524:	ubfx	ip, r2, #8, #8
   2e528:	lsr	r3, r2, #24
   2e52c:	ubfx	r1, r2, #16, #8
   2e530:	orr	r3, r3, r2, lsl #24
   2e534:	movw	r6, #61168	; 0xeef0
   2e538:	movt	r6, #4
   2e53c:	orr	r3, r3, ip, lsl #16
   2e540:	orr	r3, r3, r1, lsl #8
   2e544:	movw	r2, #274	; 0x112
   2e548:	ldr	r1, [r6]
   2e54c:	movt	r2, #12274	; 0x2ff2
   2e550:	sub	sp, sp, #8
   2e554:	cmp	r3, r2
   2e558:	str	r1, [sp, #4]
   2e55c:	bne	2e6f8 <crc32@@Base+0x14f54>
   2e560:	mov	r1, #4
   2e564:	mov	r4, r0
   2e568:	bl	2dea8 <crc32@@Base+0x14704>
   2e56c:	cmp	r0, #0
   2e570:	beq	2e700 <crc32@@Base+0x14f5c>
   2e574:	mov	r3, #150994944	; 0x9000000
   2e578:	str	r3, [r0]
   2e57c:	ldr	r3, [r4, #4]
   2e580:	mov	r7, #0
   2e584:	ldr	lr, [r4, #32]
   2e588:	ubfx	r2, r3, #8, #8
   2e58c:	ldr	r0, [r4, #8]
   2e590:	lsr	r1, r3, #24
   2e594:	ldr	ip, [r4, #36]	; 0x24
   2e598:	orr	r1, r1, r3, lsl #24
   2e59c:	ubfx	r5, lr, #8, #8
   2e5a0:	orr	r1, r1, r2, lsl #16
   2e5a4:	lsr	r2, lr, #24
   2e5a8:	ubfx	r3, r3, #16, #8
   2e5ac:	orr	r2, r2, lr, lsl #24
   2e5b0:	ubfx	lr, lr, #16, #8
   2e5b4:	orr	r2, r2, r5, lsl #16
   2e5b8:	ubfx	r8, r0, #8, #8
   2e5bc:	lsr	r5, r0, #24
   2e5c0:	orr	r2, r2, lr, lsl #8
   2e5c4:	orr	r1, r1, r3, lsl #8
   2e5c8:	ubfx	lr, ip, #8, #8
   2e5cc:	orr	r5, r5, r0, lsl #24
   2e5d0:	ubfx	r3, r0, #16, #8
   2e5d4:	lsr	r0, ip, #24
   2e5d8:	orr	r0, r0, ip, lsl #24
   2e5dc:	orr	r5, r5, r8, lsl #16
   2e5e0:	ubfx	ip, ip, #16, #8
   2e5e4:	orr	r3, r5, r3, lsl #8
   2e5e8:	orr	r5, r0, lr, lsl #16
   2e5ec:	sub	r1, r1, r2
   2e5f0:	orr	r5, r5, ip, lsl #8
   2e5f4:	add	r1, r4, r1
   2e5f8:	add	r5, r5, r3
   2e5fc:	add	r0, r4, r5
   2e600:	bl	12380 <memmove@plt>
   2e604:	rev	r3, r5
   2e608:	str	r3, [r4, #12]
   2e60c:	b	2e684 <crc32@@Base+0x14ee0>
   2e610:	cmp	r0, #3
   2e614:	bne	2e680 <crc32@@Base+0x14edc>
   2e618:	ldr	r3, [r4, #8]
   2e61c:	ldr	r2, [r4, #32]
   2e620:	ubfx	ip, r3, #8, #8
   2e624:	ubfx	r0, r3, #16, #8
   2e628:	lsr	r1, r3, #24
   2e62c:	orr	r1, r1, r3, lsl #24
   2e630:	lsr	r3, r2, #24
   2e634:	orr	r1, r1, ip, lsl #16
   2e638:	ubfx	ip, r2, #8, #8
   2e63c:	orr	r1, r1, r0, lsl #8
   2e640:	orr	r3, r3, r2, lsl #24
   2e644:	add	r1, r1, r7
   2e648:	ubfx	r2, r2, #16, #8
   2e64c:	add	r1, r4, r1
   2e650:	orr	r3, r3, ip, lsl #16
   2e654:	orr	r3, r3, r2, lsl #8
   2e658:	ldr	r0, [r1, #8]
   2e65c:	ubfx	lr, r0, #8, #8
   2e660:	ubfx	ip, r0, #16, #8
   2e664:	lsr	r2, r0, #24
   2e668:	orr	r2, r2, r0, lsl #24
   2e66c:	orr	r2, r2, lr, lsl #16
   2e670:	orr	r2, r2, ip, lsl #8
   2e674:	add	r3, r3, r2
   2e678:	rev	r3, r3
   2e67c:	str	r3, [r1, #8]
   2e680:	ldr	r7, [sp]
   2e684:	mov	r2, sp
   2e688:	mov	r1, r7
   2e68c:	mov	r0, r4
   2e690:	bl	2d7f0 <crc32@@Base+0x1404c>
   2e694:	cmp	r0, #9
   2e698:	bne	2e610 <crc32@@Base+0x14e6c>
   2e69c:	ldr	r0, [sp]
   2e6a0:	cmp	r0, #0
   2e6a4:	blt	2e6e0 <crc32@@Base+0x14f3c>
   2e6a8:	ldr	r2, [r4, #32]
   2e6ac:	mov	r3, #3536	; 0xdd0
   2e6b0:	movt	r3, #60926	; 0xedfe
   2e6b4:	str	r3, [r4]
   2e6b8:	ubfx	ip, r2, #8, #8
   2e6bc:	ubfx	r1, r2, #16, #8
   2e6c0:	lsr	r3, r2, #24
   2e6c4:	mov	r0, #0
   2e6c8:	orr	r3, r3, r2, lsl #24
   2e6cc:	orr	r3, r3, ip, lsl #16
   2e6d0:	orr	r3, r3, r1, lsl #8
   2e6d4:	add	r5, r3, r5
   2e6d8:	rev	r5, r5
   2e6dc:	str	r5, [r4, #4]
   2e6e0:	ldr	r2, [sp, #4]
   2e6e4:	ldr	r3, [r6]
   2e6e8:	cmp	r2, r3
   2e6ec:	bne	2e708 <crc32@@Base+0x14f64>
   2e6f0:	add	sp, sp, #8
   2e6f4:	pop	{r4, r5, r6, r7, r8, pc}
   2e6f8:	mvn	r0, #8
   2e6fc:	b	2e6e0 <crc32@@Base+0x14f3c>
   2e700:	mvn	r0, #2
   2e704:	b	2e6e0 <crc32@@Base+0x14f3c>
   2e708:	bl	12494 <__stack_chk_fail@plt>
   2e70c:	ldr	ip, [r0, #16]
   2e710:	push	{r4, lr}
   2e714:	ubfx	r4, ip, #8, #8
   2e718:	lsr	r3, ip, #24
   2e71c:	ubfx	lr, ip, #16, #8
   2e720:	orr	r3, r3, ip, lsl #24
   2e724:	orr	r3, r3, r4, lsl #16
   2e728:	orr	r3, r3, lr, lsl #8
   2e72c:	cmp	r3, #39	; 0x27
   2e730:	bls	2e7d0 <crc32@@Base+0x1502c>
   2e734:	ldr	lr, [r0, #8]
   2e738:	add	r1, r1, r3
   2e73c:	ubfx	r4, lr, #8, #8
   2e740:	ubfx	r3, lr, #16, #8
   2e744:	lsr	ip, lr, #24
   2e748:	orr	ip, ip, lr, lsl #24
   2e74c:	orr	ip, ip, r4, lsl #16
   2e750:	orr	ip, ip, r3, lsl #8
   2e754:	cmp	r1, ip
   2e758:	bhi	2e7d0 <crc32@@Base+0x1502c>
   2e75c:	ldr	r1, [r0, #12]
   2e760:	add	r2, r2, ip
   2e764:	ubfx	lr, r1, #8, #8
   2e768:	ubfx	ip, r1, #16, #8
   2e76c:	lsr	r3, r1, #24
   2e770:	orr	r3, r3, r1, lsl #24
   2e774:	orr	r3, r3, lr, lsl #16
   2e778:	orr	r3, r3, ip, lsl #8
   2e77c:	cmp	r2, r3
   2e780:	bhi	2e7d0 <crc32@@Base+0x1502c>
   2e784:	ldr	r2, [r0, #32]
   2e788:	ldr	r1, [r0, #4]
   2e78c:	ubfx	r4, r2, #8, #8
   2e790:	ubfx	lr, r2, #16, #8
   2e794:	lsr	r0, r2, #24
   2e798:	ubfx	ip, r1, #8, #8
   2e79c:	orr	r0, r0, r2, lsl #24
   2e7a0:	lsr	r2, r1, #24
   2e7a4:	orr	r0, r0, r4, lsl #16
   2e7a8:	orr	r2, r2, r1, lsl #24
   2e7ac:	ubfx	r1, r1, #16, #8
   2e7b0:	orr	r0, r0, lr, lsl #8
   2e7b4:	orr	r2, r2, ip, lsl #16
   2e7b8:	add	r0, r0, r3
   2e7bc:	orr	r3, r2, r1, lsl #8
   2e7c0:	cmp	r0, r3
   2e7c4:	movls	r0, #0
   2e7c8:	movhi	r0, #1
   2e7cc:	pop	{r4, pc}
   2e7d0:	mov	r0, #1
   2e7d4:	pop	{r4, pc}
   2e7d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e7dc:	cmp	r2, #0
   2e7e0:	ldr	r5, [r0, #12]
   2e7e4:	ldr	r4, [r0, #32]
   2e7e8:	ubfx	r8, r5, #8, #8
   2e7ec:	ubfx	r6, r5, #16, #8
   2e7f0:	ubfx	r7, r4, #8, #8
   2e7f4:	lsr	ip, r5, #24
   2e7f8:	lsr	lr, r4, #24
   2e7fc:	orr	ip, ip, r5, lsl #24
   2e800:	orr	lr, lr, r4, lsl #24
   2e804:	ubfx	r4, r4, #16, #8
   2e808:	orr	ip, ip, r8, lsl #16
   2e80c:	orr	lr, lr, r7, lsl #16
   2e810:	orr	ip, ip, r6, lsl #8
   2e814:	orr	lr, lr, r4, lsl #8
   2e818:	add	ip, ip, lr
   2e81c:	add	ip, r0, ip
   2e820:	blt	2e89c <crc32@@Base+0x150f8>
   2e824:	add	r5, r1, r2
   2e828:	cmp	r5, ip
   2e82c:	movls	r4, #0
   2e830:	movhi	r4, #1
   2e834:	cmp	r1, r0
   2e838:	orrcc	r4, r4, #1
   2e83c:	cmp	r4, #0
   2e840:	bne	2e89c <crc32@@Base+0x150f8>
   2e844:	sub	r6, r3, r2
   2e848:	add	r6, ip, r6
   2e84c:	cmp	r6, r0
   2e850:	bcc	2e89c <crc32@@Base+0x150f8>
   2e854:	ldr	r7, [r0, #4]
   2e858:	ubfx	r9, r7, #8, #8
   2e85c:	ubfx	r8, r7, #16, #8
   2e860:	lsr	lr, r7, #24
   2e864:	orr	lr, lr, r7, lsl #24
   2e868:	orr	lr, lr, r9, lsl #16
   2e86c:	orr	lr, lr, r8, lsl #8
   2e870:	add	lr, r0, lr
   2e874:	cmp	r6, lr
   2e878:	bhi	2e8a4 <crc32@@Base+0x15100>
   2e87c:	sub	ip, ip, r1
   2e880:	mov	r0, r1
   2e884:	sub	r2, ip, r2
   2e888:	mov	r1, r5
   2e88c:	add	r0, r0, r3
   2e890:	bl	12380 <memmove@plt>
   2e894:	mov	r0, r4
   2e898:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e89c:	mvn	r0, #3
   2e8a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e8a4:	mvn	r0, #2
   2e8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e8ac:	push	{r4, r5, r6, lr}
   2e8b0:	mov	r6, r2
   2e8b4:	mov	r5, r3
   2e8b8:	lsl	r2, r2, #4
   2e8bc:	lsl	r3, r3, #4
   2e8c0:	mov	r4, r0
   2e8c4:	bl	2e7d8 <crc32@@Base+0x15034>
   2e8c8:	cmp	r0, #0
   2e8cc:	popne	{r4, r5, r6, pc}
   2e8d0:	ldr	lr, [r4, #8]
   2e8d4:	sub	r3, r5, r6
   2e8d8:	ldr	ip, [r4, #12]
   2e8dc:	lsl	r1, r3, #4
   2e8e0:	ubfx	r6, lr, #8, #8
   2e8e4:	ubfx	r5, ip, #8, #8
   2e8e8:	lsr	r2, lr, #24
   2e8ec:	lsr	r3, ip, #24
   2e8f0:	orr	r2, r2, lr, lsl #24
   2e8f4:	orr	r3, r3, ip, lsl #24
   2e8f8:	ubfx	lr, lr, #16, #8
   2e8fc:	ubfx	ip, ip, #16, #8
   2e900:	orr	r2, r2, r6, lsl #16
   2e904:	orr	r3, r3, r5, lsl #16
   2e908:	orr	r2, r2, lr, lsl #8
   2e90c:	orr	r3, r3, ip, lsl #8
   2e910:	add	r2, r2, r1
   2e914:	add	r3, r3, r1
   2e918:	rev	r2, r2
   2e91c:	rev	r3, r3
   2e920:	strd	r2, [r4, #8]
   2e924:	pop	{r4, r5, r6, pc}
   2e928:	push	{r4, r5, r6, lr}
   2e92c:	mov	r4, r0
   2e930:	mov	r5, r2
   2e934:	mov	r6, r3
   2e938:	bl	2e7d8 <crc32@@Base+0x15034>
   2e93c:	cmp	r0, #0
   2e940:	popne	{r4, r5, r6, pc}
   2e944:	ldr	lr, [r4, #36]	; 0x24
   2e948:	sub	ip, r6, r5
   2e94c:	ldr	r1, [r4, #12]
   2e950:	ubfx	r3, lr, #8, #8
   2e954:	lsr	r2, lr, #24
   2e958:	ubfx	r5, r1, #8, #8
   2e95c:	orr	r2, r2, lr, lsl #24
   2e960:	ubfx	lr, lr, #16, #8
   2e964:	orr	r2, r2, r3, lsl #16
   2e968:	lsr	r3, r1, #24
   2e96c:	orr	r3, r3, r1, lsl #24
   2e970:	ubfx	r1, r1, #16, #8
   2e974:	orr	r3, r3, r5, lsl #16
   2e978:	orr	r2, r2, lr, lsl #8
   2e97c:	orr	r3, r3, r1, lsl #8
   2e980:	add	r2, r2, ip
   2e984:	add	r3, r3, ip
   2e988:	rev	r2, r2
   2e98c:	rev	r3, r3
   2e990:	str	r2, [r4, #36]	; 0x24
   2e994:	str	r3, [r4, #12]
   2e998:	pop	{r4, r5, r6, pc}
   2e99c:	ldr	ip, [r0, #16]
   2e9a0:	push	{r4, r5, r6, r7, r8, lr}
   2e9a4:	mov	r5, r0
   2e9a8:	mov	r4, r1
   2e9ac:	ubfx	lr, ip, #8, #8
   2e9b0:	add	r0, r1, #40	; 0x28
   2e9b4:	lsr	r1, ip, #24
   2e9b8:	mov	r6, r3
   2e9bc:	orr	r1, r1, ip, lsl #24
   2e9c0:	ubfx	r3, ip, #16, #8
   2e9c4:	orr	r1, r1, lr, lsl #16
   2e9c8:	add	r7, r2, #40	; 0x28
   2e9cc:	orr	r1, r1, r3, lsl #8
   2e9d0:	add	r8, r7, r6
   2e9d4:	add	r1, r5, r1
   2e9d8:	bl	12380 <memmove@plt>
   2e9dc:	ldr	r3, [r5, #8]
   2e9e0:	mov	r2, #671088640	; 0x28000000
   2e9e4:	str	r2, [r4, #16]
   2e9e8:	ubfx	r2, r3, #8, #8
   2e9ec:	ubfx	r0, r3, #16, #8
   2e9f0:	lsr	r1, r3, #24
   2e9f4:	orr	r1, r1, r3, lsl #24
   2e9f8:	orr	r1, r1, r2, lsl #16
   2e9fc:	mov	r2, r6
   2ea00:	orr	r1, r1, r0, lsl #8
   2ea04:	add	r0, r4, r7
   2ea08:	add	r1, r5, r1
   2ea0c:	bl	12380 <memmove@plt>
   2ea10:	ldr	r0, [r5, #12]
   2ea14:	ubfx	r1, r7, #8, #8
   2ea18:	lsr	r3, r7, #24
   2ea1c:	orr	r3, r3, r7, lsl #24
   2ea20:	ubfx	lr, r7, #16, #8
   2ea24:	ubfx	ip, r0, #8, #8
   2ea28:	orr	r7, r3, r1, lsl #16
   2ea2c:	lsr	r1, r0, #24
   2ea30:	ldr	r2, [r5, #32]
   2ea34:	orr	r1, r1, r0, lsl #24
   2ea38:	lsr	r3, r6, #24
   2ea3c:	ubfx	r0, r0, #16, #8
   2ea40:	orr	r1, r1, ip, lsl #16
   2ea44:	ubfx	ip, r6, #8, #8
   2ea48:	orr	r3, r3, r6, lsl #24
   2ea4c:	orr	r1, r1, r0, lsl #8
   2ea50:	lsr	r0, r2, #24
   2ea54:	orr	r3, r3, ip, lsl #16
   2ea58:	ubfx	ip, r2, #8, #8
   2ea5c:	orr	r0, r0, r2, lsl #24
   2ea60:	ubfx	r6, r6, #16, #8
   2ea64:	ubfx	r2, r2, #16, #8
   2ea68:	orr	r0, r0, ip, lsl #16
   2ea6c:	orr	r7, r7, lr, lsl #8
   2ea70:	orr	r6, r3, r6, lsl #8
   2ea74:	orr	r2, r0, r2, lsl #8
   2ea78:	add	r1, r5, r1
   2ea7c:	add	r0, r4, r8
   2ea80:	str	r7, [r4, #8]
   2ea84:	str	r6, [r4, #36]	; 0x24
   2ea88:	bl	12380 <memmove@plt>
   2ea8c:	ldr	r1, [r5, #32]
   2ea90:	ubfx	ip, r8, #8, #8
   2ea94:	lsr	r2, r8, #24
   2ea98:	ubfx	lr, r1, #8, #8
   2ea9c:	ubfx	r0, r1, #16, #8
   2eaa0:	lsr	r3, r1, #24
   2eaa4:	orr	r2, r2, r8, lsl #24
   2eaa8:	orr	r3, r3, r1, lsl #24
   2eaac:	ubfx	r8, r8, #16, #8
   2eab0:	orr	r3, r3, lr, lsl #16
   2eab4:	orr	r2, r2, ip, lsl #16
   2eab8:	orr	r3, r3, r0, lsl #8
   2eabc:	orr	r2, r2, r8, lsl #8
   2eac0:	rev	r3, r3
   2eac4:	str	r2, [r4, #12]
   2eac8:	str	r3, [r4, #32]
   2eacc:	pop	{r4, r5, r6, r7, r8, pc}
   2ead0:	ldr	r3, [r0, #12]
   2ead4:	push	{r4, r5, r6, r7, r8, lr}
   2ead8:	mov	r5, r0
   2eadc:	lsr	r4, r3, #24
   2eae0:	mov	r6, r1
   2eae4:	mov	r0, r1
   2eae8:	ubfx	r1, r3, #8, #8
   2eaec:	ubfx	r2, r3, #16, #8
   2eaf0:	orr	r4, r4, r3, lsl #24
   2eaf4:	orr	r4, r4, r1, lsl #16
   2eaf8:	orr	r4, r4, r2, lsl #8
   2eafc:	bl	125c0 <strlen@plt>
   2eb00:	ldr	r1, [r5, #32]
   2eb04:	add	r4, r5, r4
   2eb08:	mov	r2, r6
   2eb0c:	ubfx	lr, r1, #8, #8
   2eb10:	ubfx	r3, r1, #16, #8
   2eb14:	lsr	ip, r1, #24
   2eb18:	orr	ip, ip, r1, lsl #24
   2eb1c:	orr	r1, ip, lr, lsl #16
   2eb20:	orr	r1, r1, r3, lsl #8
   2eb24:	mov	r7, r0
   2eb28:	mov	r0, r4
   2eb2c:	bl	2db9c <crc32@@Base+0x143f8>
   2eb30:	subs	r2, r0, #0
   2eb34:	beq	2eb40 <crc32@@Base+0x1539c>
   2eb38:	sub	r0, r2, r4
   2eb3c:	pop	{r4, r5, r6, r7, r8, pc}
   2eb40:	ldr	r1, [r5, #32]
   2eb44:	add	r7, r7, #1
   2eb48:	ldr	r3, [r5, #12]
   2eb4c:	ubfx	lr, r1, #8, #8
   2eb50:	ubfx	r0, r1, #16, #8
   2eb54:	lsr	r8, r1, #24
   2eb58:	ubfx	ip, r3, #8, #8
   2eb5c:	orr	r8, r8, r1, lsl #24
   2eb60:	lsr	r1, r3, #24
   2eb64:	orr	r1, r1, r3, lsl #24
   2eb68:	ubfx	r3, r3, #16, #8
   2eb6c:	orr	r8, r8, lr, lsl #16
   2eb70:	orr	r1, r1, ip, lsl #16
   2eb74:	orr	r8, r8, r0, lsl #8
   2eb78:	orr	r1, r1, r3, lsl #8
   2eb7c:	add	r1, r1, r8
   2eb80:	mov	r3, r7
   2eb84:	add	r1, r5, r1
   2eb88:	mov	r0, r5
   2eb8c:	bl	2e7d8 <crc32@@Base+0x15034>
   2eb90:	cmp	r0, #0
   2eb94:	popne	{r4, r5, r6, r7, r8, pc}
   2eb98:	ldr	ip, [r5, #32]
   2eb9c:	add	r0, r4, r8
   2eba0:	mov	r2, r7
   2eba4:	mov	r1, r6
   2eba8:	ubfx	r4, ip, #8, #8
   2ebac:	ubfx	lr, ip, #16, #8
   2ebb0:	lsr	r3, ip, #24
   2ebb4:	orr	r3, r3, ip, lsl #24
   2ebb8:	orr	r3, r3, r4, lsl #16
   2ebbc:	orr	r3, r3, lr, lsl #8
   2ebc0:	add	r7, r3, r7
   2ebc4:	rev	r7, r7
   2ebc8:	str	r7, [r5, #32]
   2ebcc:	bl	1259c <memcpy@plt>
   2ebd0:	mov	r0, r8
   2ebd4:	pop	{r4, r5, r6, r7, r8, pc}
   2ebd8:	push	{r4, r5, r6, r7, r8, lr}
   2ebdc:	mov	r7, r2
   2ebe0:	mov	r6, r3
   2ebe4:	mov	r4, r0
   2ebe8:	bl	2d950 <crc32@@Base+0x141ac>
   2ebec:	subs	r5, r0, #0
   2ebf0:	blt	2ec9c <crc32@@Base+0x154f8>
   2ebf4:	mov	r1, r7
   2ebf8:	mov	r0, r4
   2ebfc:	bl	2ead0 <crc32@@Base+0x1532c>
   2ec00:	subs	r7, r0, #0
   2ec04:	movlt	r5, r7
   2ec08:	blt	2ec9c <crc32@@Base+0x154f8>
   2ec0c:	ldr	r2, [r4, #8]
   2ec10:	add	r3, r6, #3
   2ec14:	bic	r3, r3, #3
   2ec18:	ubfx	r0, r2, #8, #8
   2ec1c:	ubfx	ip, r2, #16, #8
   2ec20:	lsr	r1, r2, #24
   2ec24:	add	r3, r3, #12
   2ec28:	orr	r1, r1, r2, lsl #24
   2ec2c:	mov	r2, #0
   2ec30:	orr	r1, r1, r0, lsl #16
   2ec34:	mov	r0, r4
   2ec38:	orr	r1, r1, ip, lsl #8
   2ec3c:	ldr	ip, [sp, #24]
   2ec40:	add	r1, r1, r5
   2ec44:	add	r1, r4, r1
   2ec48:	str	r1, [ip]
   2ec4c:	bl	2e928 <crc32@@Base+0x15184>
   2ec50:	subs	r5, r0, #0
   2ec54:	bne	2ec9c <crc32@@Base+0x154f8>
   2ec58:	ldr	r1, [sp, #24]
   2ec5c:	ubfx	r3, r7, #8, #8
   2ec60:	lsr	r2, r7, #24
   2ec64:	ubfx	r0, r6, #8, #8
   2ec68:	orr	r2, r2, r7, lsl #24
   2ec6c:	ubfx	r7, r7, #16, #8
   2ec70:	ldr	r1, [r1]
   2ec74:	orr	r2, r2, r3, lsl #16
   2ec78:	lsr	r3, r6, #24
   2ec7c:	orr	r7, r2, r7, lsl #8
   2ec80:	orr	r3, r3, r6, lsl #24
   2ec84:	ubfx	r6, r6, #16, #8
   2ec88:	orr	r3, r3, r0, lsl #16
   2ec8c:	str	r7, [r1, #8]
   2ec90:	orr	r6, r3, r6, lsl #8
   2ec94:	mov	r3, #50331648	; 0x3000000
   2ec98:	stm	r1, {r3, r6}
   2ec9c:	mov	r0, r5
   2eca0:	pop	{r4, r5, r6, r7, r8, pc}
   2eca4:	push	{r4, r5, r6, lr}
   2eca8:	mov	r5, r0
   2ecac:	bl	2d674 <crc32@@Base+0x13ed0>
   2ecb0:	cmp	r0, #0
   2ecb4:	popne	{r4, r5, r6, pc}
   2ecb8:	ldr	r3, [r5, #20]
   2ecbc:	ubfx	r1, r3, #8, #8
   2ecc0:	ubfx	r2, r3, #16, #8
   2ecc4:	lsr	r4, r3, #24
   2ecc8:	orr	r4, r4, r3, lsl #24
   2eccc:	orr	r4, r4, r1, lsl #16
   2ecd0:	orr	r4, r4, r2, lsl #8
   2ecd4:	cmp	r4, #16
   2ecd8:	bls	2ed1c <crc32@@Base+0x15578>
   2ecdc:	ldr	r0, [r5, #36]	; 0x24
   2ece0:	mov	r1, #16
   2ece4:	ubfx	ip, r0, #8, #8
   2ece8:	ubfx	r2, r0, #16, #8
   2ecec:	lsr	r3, r0, #24
   2ecf0:	orr	r3, r3, r0, lsl #24
   2ecf4:	mov	r0, r5
   2ecf8:	orr	r3, r3, ip, lsl r1
   2ecfc:	orr	r2, r3, r2, lsl #8
   2ed00:	bl	2e70c <crc32@@Base+0x14f68>
   2ed04:	cmp	r0, #0
   2ed08:	bne	2ed24 <crc32@@Base+0x15580>
   2ed0c:	cmp	r4, #17
   2ed10:	movne	r3, #285212672	; 0x11000000
   2ed14:	strne	r3, [r5, #20]
   2ed18:	pop	{r4, r5, r6, pc}
   2ed1c:	mvn	r0, #9
   2ed20:	pop	{r4, r5, r6, pc}
   2ed24:	mvn	r0, #11
   2ed28:	pop	{r4, r5, r6, pc}
   2ed2c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ed30:	mov	r8, r2
   2ed34:	mov	r9, r3
   2ed38:	mov	r5, r0
   2ed3c:	ldr	r7, [sp, #40]	; 0x28
   2ed40:	ldr	r6, [sp, #44]	; 0x2c
   2ed44:	bl	2eca4 <crc32@@Base+0x15500>
   2ed48:	subs	sl, r0, #0
   2ed4c:	beq	2ed58 <crc32@@Base+0x155b4>
   2ed50:	mov	r0, sl
   2ed54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed58:	mov	r0, r5
   2ed5c:	bl	30a30 <crc32@@Base+0x1728c>
   2ed60:	ldr	r1, [r5, #16]
   2ed64:	mov	r2, sl
   2ed68:	mov	r3, #1
   2ed6c:	ubfx	lr, r1, #8, #8
   2ed70:	ubfx	ip, r1, #16, #8
   2ed74:	lsr	r4, r1, #24
   2ed78:	orr	r4, r4, r1, lsl #24
   2ed7c:	orr	r4, r4, lr, lsl #16
   2ed80:	orr	r4, r4, ip, lsl #8
   2ed84:	add	r4, r4, r0, lsl #4
   2ed88:	mov	r0, r5
   2ed8c:	add	fp, r5, r4
   2ed90:	mov	r1, fp
   2ed94:	bl	2e8ac <crc32@@Base+0x15108>
   2ed98:	subs	sl, r0, #0
   2ed9c:	bne	2ed50 <crc32@@Base+0x155ac>
   2eda0:	rev	r9, r9
   2eda4:	rev	r8, r8
   2eda8:	str	r9, [r5, r4]
   2edac:	rev	r7, r7
   2edb0:	rev	r6, r6
   2edb4:	str	r8, [fp, #4]
   2edb8:	strd	r6, [fp, #8]
   2edbc:	mov	r0, sl
   2edc0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2edc4:	push	{r4, r5, r6, r7, r8, lr}
   2edc8:	mov	r5, r0
   2edcc:	mov	r6, r1
   2edd0:	ldr	r4, [r0, #16]
   2edd4:	bl	2eca4 <crc32@@Base+0x15500>
   2edd8:	subs	r7, r0, #0
   2eddc:	beq	2ede8 <crc32@@Base+0x15644>
   2ede0:	mov	r0, r7
   2ede4:	pop	{r4, r5, r6, r7, r8, pc}
   2ede8:	mov	r0, r5
   2edec:	bl	30a30 <crc32@@Base+0x1728c>
   2edf0:	cmp	r6, r0
   2edf4:	bge	2ee2c <crc32@@Base+0x15688>
   2edf8:	ubfx	r3, r4, #8, #8
   2edfc:	lsr	r1, r4, #24
   2ee00:	orr	r1, r1, r4, lsl #24
   2ee04:	ubfx	r4, r4, #16, #8
   2ee08:	orr	r1, r1, r3, lsl #16
   2ee0c:	mov	r0, r5
   2ee10:	orr	r1, r1, r4, lsl #8
   2ee14:	mov	r3, r7
   2ee18:	add	r1, r1, r6, lsl #4
   2ee1c:	mov	r2, #1
   2ee20:	add	r1, r5, r1
   2ee24:	pop	{r4, r5, r6, r7, r8, lr}
   2ee28:	b	2e8ac <crc32@@Base+0x15108>
   2ee2c:	mvn	r7, #0
   2ee30:	b	2ede0 <crc32@@Base+0x1563c>
   2ee34:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ee38:	movw	r4, #61168	; 0xeef0
   2ee3c:	movt	r4, #4
   2ee40:	sub	sp, sp, #12
   2ee44:	mov	r7, r1
   2ee48:	mov	r8, r2
   2ee4c:	ldr	r3, [r4]
   2ee50:	mov	r6, r0
   2ee54:	str	r3, [sp, #4]
   2ee58:	bl	2eca4 <crc32@@Base+0x15500>
   2ee5c:	subs	r5, r0, #0
   2ee60:	beq	2ee80 <crc32@@Base+0x156dc>
   2ee64:	ldr	r2, [sp, #4]
   2ee68:	mov	r0, r5
   2ee6c:	ldr	r3, [r4]
   2ee70:	cmp	r2, r3
   2ee74:	bne	2eee4 <crc32@@Base+0x15740>
   2ee78:	add	sp, sp, #12
   2ee7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ee80:	mov	r1, r7
   2ee84:	mov	r2, sp
   2ee88:	mov	r0, r6
   2ee8c:	bl	30c4c <crc32@@Base+0x174a8>
   2ee90:	subs	r7, r0, #0
   2ee94:	ldreq	r5, [sp]
   2ee98:	beq	2ee64 <crc32@@Base+0x156c0>
   2ee9c:	mov	r0, r8
   2eea0:	bl	125c0 <strlen@plt>
   2eea4:	ldr	r2, [sp]
   2eea8:	mov	r1, r7
   2eeac:	add	r2, r2, #4
   2eeb0:	bic	r2, r2, #3
   2eeb4:	add	r3, r0, #4
   2eeb8:	mov	r9, r0
   2eebc:	bic	r3, r3, #3
   2eec0:	mov	r0, r6
   2eec4:	bl	2e928 <crc32@@Base+0x15184>
   2eec8:	subs	r5, r0, #0
   2eecc:	bne	2ee64 <crc32@@Base+0x156c0>
   2eed0:	add	r2, r9, #1
   2eed4:	mov	r1, r8
   2eed8:	mov	r0, r7
   2eedc:	bl	1259c <memcpy@plt>
   2eee0:	b	2ee64 <crc32@@Base+0x156c0>
   2eee4:	bl	12494 <__stack_chk_fail@plt>
   2eee8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2eeec:	movw	r4, #61168	; 0xeef0
   2eef0:	movt	r4, #4
   2eef4:	mov	r9, r2
   2eef8:	sub	sp, sp, #24
   2eefc:	mov	r8, r1
   2ef00:	ldr	r2, [r4]
   2ef04:	mov	r6, r3
   2ef08:	mov	r7, r0
   2ef0c:	ldr	sl, [sp, #56]	; 0x38
   2ef10:	str	r2, [sp, #20]
   2ef14:	bl	2eca4 <crc32@@Base+0x15500>
   2ef18:	subs	r5, r0, #0
   2ef1c:	beq	2ef3c <crc32@@Base+0x15798>
   2ef20:	ldr	r2, [sp, #20]
   2ef24:	mov	r0, r5
   2ef28:	ldr	r3, [r4]
   2ef2c:	cmp	r2, r3
   2ef30:	bne	2effc <crc32@@Base+0x15858>
   2ef34:	add	sp, sp, #24
   2ef38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ef3c:	add	r3, sp, #16
   2ef40:	mov	r2, r9
   2ef44:	mov	r1, r8
   2ef48:	mov	r0, r7
   2ef4c:	bl	30e78 <crc32@@Base+0x176d4>
   2ef50:	cmp	r0, #0
   2ef54:	str	r0, [sp, #12]
   2ef58:	beq	2efc0 <crc32@@Base+0x1581c>
   2ef5c:	ldr	r2, [sp, #16]
   2ef60:	add	r3, r6, #3
   2ef64:	add	r1, r0, #12
   2ef68:	bic	r3, r3, #3
   2ef6c:	add	r2, r2, #3
   2ef70:	mov	r0, r7
   2ef74:	bic	r2, r2, #3
   2ef78:	bl	2e928 <crc32@@Base+0x15184>
   2ef7c:	cmp	r0, #0
   2ef80:	bne	2efb0 <crc32@@Base+0x1580c>
   2ef84:	lsr	r3, r6, #24
   2ef88:	ubfx	r1, r6, #8, #8
   2ef8c:	ldr	r2, [sp, #12]
   2ef90:	orr	r3, r3, r6, lsl #24
   2ef94:	ubfx	r6, r6, #16, #8
   2ef98:	orr	r3, r3, r1, lsl #16
   2ef9c:	orr	r6, r3, r6, lsl #8
   2efa0:	str	r6, [r2, #4]
   2efa4:	add	r2, r2, #12
   2efa8:	str	r2, [sl]
   2efac:	b	2ef20 <crc32@@Base+0x1577c>
   2efb0:	cmn	r0, #1
   2efb4:	beq	2efdc <crc32@@Base+0x15838>
   2efb8:	mov	r5, r0
   2efbc:	b	2ef20 <crc32@@Base+0x1577c>
   2efc0:	ldr	r0, [sp, #16]
   2efc4:	cmn	r0, #1
   2efc8:	beq	2efdc <crc32@@Base+0x15838>
   2efcc:	cmp	r0, #0
   2efd0:	bne	2efb8 <crc32@@Base+0x15814>
   2efd4:	ldr	r2, [sp, #12]
   2efd8:	b	2efa4 <crc32@@Base+0x15800>
   2efdc:	add	ip, sp, #12
   2efe0:	mov	r3, r6
   2efe4:	mov	r2, r9
   2efe8:	mov	r1, r8
   2efec:	mov	r0, r7
   2eff0:	str	ip, [sp]
   2eff4:	bl	2ebd8 <crc32@@Base+0x15434>
   2eff8:	b	2efcc <crc32@@Base+0x15828>
   2effc:	bl	12494 <__stack_chk_fail@plt>
   2f000:	push	{r4, r5, r6, lr}
   2f004:	movw	r4, #61168	; 0xeef0
   2f008:	movt	r4, #4
   2f00c:	sub	sp, sp, #16
   2f010:	mov	r6, r3
   2f014:	add	r3, sp, #8
   2f018:	ldr	ip, [r4]
   2f01c:	str	r3, [sp]
   2f020:	ldr	r3, [sp, #32]
   2f024:	str	ip, [sp, #12]
   2f028:	bl	2eee8 <crc32@@Base+0x15744>
   2f02c:	subs	r5, r0, #0
   2f030:	bne	2f040 <crc32@@Base+0x1589c>
   2f034:	ldr	r3, [sp, #32]
   2f038:	cmp	r3, #0
   2f03c:	bne	2f05c <crc32@@Base+0x158b8>
   2f040:	ldr	r2, [sp, #12]
   2f044:	mov	r0, r5
   2f048:	ldr	r3, [r4]
   2f04c:	cmp	r2, r3
   2f050:	bne	2f070 <crc32@@Base+0x158cc>
   2f054:	add	sp, sp, #16
   2f058:	pop	{r4, r5, r6, pc}
   2f05c:	mov	r1, r6
   2f060:	mov	r2, r3
   2f064:	ldr	r0, [sp, #8]
   2f068:	bl	1259c <memcpy@plt>
   2f06c:	b	2f040 <crc32@@Base+0x1589c>
   2f070:	bl	12494 <__stack_chk_fail@plt>
   2f074:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f078:	movw	r4, #61168	; 0xeef0
   2f07c:	movt	r4, #4
   2f080:	mov	r8, r2
   2f084:	sub	sp, sp, #28
   2f088:	mov	r7, r1
   2f08c:	ldr	r2, [r4]
   2f090:	mov	r9, r3
   2f094:	mov	r6, r0
   2f098:	str	r2, [sp, #20]
   2f09c:	bl	2eca4 <crc32@@Base+0x15500>
   2f0a0:	subs	r5, r0, #0
   2f0a4:	beq	2f0c4 <crc32@@Base+0x15920>
   2f0a8:	ldr	r2, [sp, #20]
   2f0ac:	mov	r0, r5
   2f0b0:	ldr	r3, [r4]
   2f0b4:	cmp	r2, r3
   2f0b8:	bne	2f18c <crc32@@Base+0x159e8>
   2f0bc:	add	sp, sp, #28
   2f0c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f0c4:	add	r3, sp, #16
   2f0c8:	mov	r2, r8
   2f0cc:	mov	r1, r7
   2f0d0:	mov	r0, r6
   2f0d4:	bl	30e78 <crc32@@Base+0x176d4>
   2f0d8:	cmp	r0, #0
   2f0dc:	str	r0, [sp, #12]
   2f0e0:	beq	2f150 <crc32@@Base+0x159ac>
   2f0e4:	ldr	r2, [sp, #16]
   2f0e8:	add	r1, r0, #12
   2f0ec:	ldr	r3, [sp, #56]	; 0x38
   2f0f0:	mov	r0, r6
   2f0f4:	add	r6, r2, r3
   2f0f8:	add	r2, r2, #3
   2f0fc:	add	r3, r6, #3
   2f100:	bic	r2, r2, #3
   2f104:	bic	r3, r3, #3
   2f108:	bl	2e928 <crc32@@Base+0x15184>
   2f10c:	subs	r5, r0, #0
   2f110:	bne	2f0a8 <crc32@@Base+0x15904>
   2f114:	ubfx	r1, r6, #8, #8
   2f118:	lsr	r3, r6, #24
   2f11c:	ldr	r2, [sp, #12]
   2f120:	orr	r3, r3, r6, lsl #24
   2f124:	ubfx	r6, r6, #16, #8
   2f128:	orr	r3, r3, r1, lsl #16
   2f12c:	ldr	r0, [sp, #16]
   2f130:	mov	r1, r9
   2f134:	orr	r6, r3, r6, lsl #8
   2f138:	add	r3, r2, #12
   2f13c:	str	r6, [r2, #4]
   2f140:	add	r0, r3, r0
   2f144:	ldr	r2, [sp, #56]	; 0x38
   2f148:	bl	1259c <memcpy@plt>
   2f14c:	b	2f0a8 <crc32@@Base+0x15904>
   2f150:	add	r3, sp, #12
   2f154:	mov	r2, r8
   2f158:	str	r3, [sp]
   2f15c:	mov	r1, r7
   2f160:	mov	r0, r6
   2f164:	ldr	r3, [sp, #56]	; 0x38
   2f168:	bl	2ebd8 <crc32@@Base+0x15434>
   2f16c:	subs	r5, r0, #0
   2f170:	bne	2f0a8 <crc32@@Base+0x15904>
   2f174:	ldr	r0, [sp, #12]
   2f178:	mov	r1, r9
   2f17c:	ldr	r2, [sp, #56]	; 0x38
   2f180:	add	r0, r0, #12
   2f184:	bl	1259c <memcpy@plt>
   2f188:	b	2f0a8 <crc32@@Base+0x15904>
   2f18c:	bl	12494 <__stack_chk_fail@plt>
   2f190:	push	{r4, r5, r6, r7, r8, lr}
   2f194:	movw	r4, #61168	; 0xeef0
   2f198:	movt	r4, #4
   2f19c:	sub	sp, sp, #8
   2f1a0:	mov	r7, r1
   2f1a4:	mov	r8, r2
   2f1a8:	ldr	r3, [r4]
   2f1ac:	mov	r6, r0
   2f1b0:	str	r3, [sp, #4]
   2f1b4:	bl	2eca4 <crc32@@Base+0x15500>
   2f1b8:	subs	r5, r0, #0
   2f1bc:	beq	2f1dc <crc32@@Base+0x15a38>
   2f1c0:	ldr	r2, [sp, #4]
   2f1c4:	mov	r0, r5
   2f1c8:	ldr	r3, [r4]
   2f1cc:	cmp	r2, r3
   2f1d0:	bne	2f220 <crc32@@Base+0x15a7c>
   2f1d4:	add	sp, sp, #8
   2f1d8:	pop	{r4, r5, r6, r7, r8, pc}
   2f1dc:	mov	r1, r7
   2f1e0:	mov	r2, r8
   2f1e4:	mov	r3, sp
   2f1e8:	mov	r0, r6
   2f1ec:	bl	30e78 <crc32@@Base+0x176d4>
   2f1f0:	subs	r1, r0, #0
   2f1f4:	ldreq	r5, [sp]
   2f1f8:	beq	2f1c0 <crc32@@Base+0x15a1c>
   2f1fc:	ldr	r2, [sp]
   2f200:	mov	r3, r5
   2f204:	mov	r0, r6
   2f208:	add	r2, r2, #3
   2f20c:	bic	r2, r2, #3
   2f210:	add	r2, r2, #12
   2f214:	bl	2e928 <crc32@@Base+0x15184>
   2f218:	mov	r5, r0
   2f21c:	b	2f1c0 <crc32@@Base+0x15a1c>
   2f220:	bl	12494 <__stack_chk_fail@plt>
   2f224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f228:	movw	r4, #61168	; 0xeef0
   2f22c:	movt	r4, #4
   2f230:	mov	r7, r2
   2f234:	sub	sp, sp, #12
   2f238:	mov	r8, r1
   2f23c:	ldr	r2, [r4]
   2f240:	mov	r6, r3
   2f244:	mov	r5, r0
   2f248:	str	r2, [sp, #4]
   2f24c:	bl	2eca4 <crc32@@Base+0x15500>
   2f250:	cmp	r0, #0
   2f254:	beq	2f270 <crc32@@Base+0x15acc>
   2f258:	ldr	r2, [sp, #4]
   2f25c:	ldr	r3, [r4]
   2f260:	cmp	r2, r3
   2f264:	bne	2f350 <crc32@@Base+0x15bac>
   2f268:	add	sp, sp, #12
   2f26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f270:	mov	r3, r6
   2f274:	mov	r2, r7
   2f278:	mov	r1, r8
   2f27c:	mov	r0, r5
   2f280:	bl	30b2c <crc32@@Base+0x17388>
   2f284:	cmp	r0, #0
   2f288:	bge	2f348 <crc32@@Base+0x15ba4>
   2f28c:	cmn	r0, #1
   2f290:	bne	2f258 <crc32@@Base+0x15ab4>
   2f294:	mov	r1, r8
   2f298:	mov	r0, r5
   2f29c:	mov	r2, sp
   2f2a0:	bl	2d7f0 <crc32@@Base+0x1404c>
   2f2a4:	ldr	r8, [sp]
   2f2a8:	mov	r2, sp
   2f2ac:	mov	r0, r5
   2f2b0:	mov	r1, r8
   2f2b4:	bl	2d7f0 <crc32@@Base+0x1404c>
   2f2b8:	sub	r0, r0, #3
   2f2bc:	cmp	r0, #1
   2f2c0:	bls	2f2a4 <crc32@@Base+0x15b00>
   2f2c4:	ldr	r1, [r5, #8]
   2f2c8:	add	sl, r6, #4
   2f2cc:	bic	sl, sl, #3
   2f2d0:	mov	r2, #0
   2f2d4:	ubfx	lr, r1, #8, #8
   2f2d8:	ubfx	ip, r1, #16, #8
   2f2dc:	lsr	r9, r1, #24
   2f2e0:	add	r3, sl, #8
   2f2e4:	orr	r9, r9, r1, lsl #24
   2f2e8:	mov	r0, r5
   2f2ec:	orr	r9, r9, lr, lsl #16
   2f2f0:	orr	r9, r9, ip, lsl #8
   2f2f4:	add	r9, r9, r8
   2f2f8:	add	fp, r5, r9
   2f2fc:	mov	r1, fp
   2f300:	bl	2e928 <crc32@@Base+0x15184>
   2f304:	cmp	r0, #0
   2f308:	bne	2f258 <crc32@@Base+0x15ab4>
   2f30c:	add	r3, fp, #4
   2f310:	mov	r1, r0
   2f314:	mov	r2, #16777216	; 0x1000000
   2f318:	str	r2, [r5, r9]
   2f31c:	mov	r0, r3
   2f320:	mov	r2, sl
   2f324:	add	sl, fp, sl
   2f328:	bl	122e4 <memset@plt>
   2f32c:	mov	r2, r6
   2f330:	mov	r1, r7
   2f334:	bl	1259c <memcpy@plt>
   2f338:	mov	r3, #33554432	; 0x2000000
   2f33c:	mov	r0, r8
   2f340:	str	r3, [sl, #4]
   2f344:	b	2f258 <crc32@@Base+0x15ab4>
   2f348:	mvn	r0, #1
   2f34c:	b	2f258 <crc32@@Base+0x15ab4>
   2f350:	bl	12494 <__stack_chk_fail@plt>
   2f354:	push	{r4, r5, r6, lr}
   2f358:	mov	r5, r0
   2f35c:	mov	r0, r2
   2f360:	mov	r4, r2
   2f364:	mov	r6, r1
   2f368:	bl	125c0 <strlen@plt>
   2f36c:	mov	r2, r4
   2f370:	mov	r1, r6
   2f374:	mov	r3, r0
   2f378:	mov	r0, r5
   2f37c:	pop	{r4, r5, r6, lr}
   2f380:	b	2f224 <crc32@@Base+0x15a80>
   2f384:	push	{r4, r5, r6, lr}
   2f388:	mov	r5, r1
   2f38c:	mov	r4, r0
   2f390:	bl	2eca4 <crc32@@Base+0x15500>
   2f394:	cmp	r0, #0
   2f398:	popne	{r4, r5, r6, pc}
   2f39c:	mov	r1, r5
   2f3a0:	mov	r0, r4
   2f3a4:	bl	2dde8 <crc32@@Base+0x14644>
   2f3a8:	cmp	r0, #0
   2f3ac:	poplt	{r4, r5, r6, pc}
   2f3b0:	ldr	r3, [r4, #8]
   2f3b4:	sub	r2, r0, r5
   2f3b8:	mov	r0, r4
   2f3bc:	ubfx	lr, r3, #8, #8
   2f3c0:	ubfx	ip, r3, #16, #8
   2f3c4:	lsr	r1, r3, #24
   2f3c8:	orr	r1, r1, r3, lsl #24
   2f3cc:	mov	r3, #0
   2f3d0:	orr	r1, r1, lr, lsl #16
   2f3d4:	orr	r1, r1, ip, lsl #8
   2f3d8:	add	r1, r1, r5
   2f3dc:	add	r1, r4, r1
   2f3e0:	pop	{r4, r5, r6, lr}
   2f3e4:	b	2e928 <crc32@@Base+0x15184>
   2f3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f3ec:	movw	r5, #61168	; 0xeef0
   2f3f0:	movt	r5, #4
   2f3f4:	sub	sp, sp, #20
   2f3f8:	mov	r4, r0
   2f3fc:	mov	r7, r1
   2f400:	ldr	r3, [r5]
   2f404:	mov	r8, r2
   2f408:	ldr	sl, [r0, #4]
   2f40c:	str	r3, [sp, #12]
   2f410:	bl	2d674 <crc32@@Base+0x13ed0>
   2f414:	subs	r9, r0, #0
   2f418:	beq	2f438 <crc32@@Base+0x15c94>
   2f41c:	ldr	r2, [sp, #12]
   2f420:	mov	r0, r9
   2f424:	ldr	r3, [r5]
   2f428:	cmp	r2, r3
   2f42c:	bne	2f650 <crc32@@Base+0x15eac>
   2f430:	add	sp, sp, #20
   2f434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f438:	mov	r0, r4
   2f43c:	bl	30a30 <crc32@@Base+0x1728c>
   2f440:	ldr	r2, [r4, #20]
   2f444:	ubfx	ip, r2, #8, #8
   2f448:	ubfx	r1, r2, #16, #8
   2f44c:	lsr	r3, r2, #24
   2f450:	orr	r3, r3, r2, lsl #24
   2f454:	orr	r3, r3, ip, lsl #16
   2f458:	orr	r3, r3, r1, lsl #8
   2f45c:	cmp	r3, #16
   2f460:	add	r0, r0, #1
   2f464:	lsl	fp, r0, #4
   2f468:	bhi	2f5b4 <crc32@@Base+0x15e10>
   2f46c:	add	r6, sp, #16
   2f470:	mov	r1, r9
   2f474:	str	r9, [r6, #-8]!
   2f478:	b	2f480 <crc32@@Base+0x15cdc>
   2f47c:	ldr	r1, [sp, #8]
   2f480:	mov	r2, r6
   2f484:	mov	r0, r4
   2f488:	bl	2d7f0 <crc32@@Base+0x1404c>
   2f48c:	cmp	r0, #9
   2f490:	bne	2f47c <crc32@@Base+0x15cd8>
   2f494:	ldr	r3, [sp, #8]
   2f498:	cmp	r3, #0
   2f49c:	movlt	r9, r3
   2f4a0:	blt	2f41c <crc32@@Base+0x15c78>
   2f4a4:	mov	r2, r3
   2f4a8:	mov	r1, fp
   2f4ac:	mov	r0, r4
   2f4b0:	str	r3, [sp, #4]
   2f4b4:	bl	2e70c <crc32@@Base+0x14f68>
   2f4b8:	ldr	r3, [sp, #4]
   2f4bc:	cmp	r0, #0
   2f4c0:	beq	2f5d8 <crc32@@Base+0x15e34>
   2f4c4:	ldr	r2, [r4, #32]
   2f4c8:	ubfx	r0, r2, #8, #8
   2f4cc:	ubfx	r1, r2, #16, #8
   2f4d0:	lsr	r6, r2, #24
   2f4d4:	orr	r6, r6, r2, lsl #24
   2f4d8:	orr	r6, r6, r0, lsl #16
   2f4dc:	orr	r6, r6, r1, lsl #8
   2f4e0:	add	r6, r6, #40	; 0x28
   2f4e4:	add	r6, r6, fp
   2f4e8:	add	r6, r6, r3
   2f4ec:	cmp	r6, r8
   2f4f0:	bgt	2f648 <crc32@@Base+0x15ea4>
   2f4f4:	ubfx	r1, sl, #8, #8
   2f4f8:	lsr	r2, sl, #24
   2f4fc:	orr	r2, r2, sl, lsl #24
   2f500:	ubfx	sl, sl, #16, #8
   2f504:	orr	r2, r2, r1, lsl #16
   2f508:	add	r1, r7, r6
   2f50c:	orr	sl, r2, sl, lsl #8
   2f510:	cmp	r4, r1
   2f514:	add	sl, r4, sl
   2f518:	movcs	r2, #0
   2f51c:	movcc	r2, #1
   2f520:	cmp	sl, r7
   2f524:	movls	r2, #0
   2f528:	cmp	r2, #0
   2f52c:	moveq	sl, r7
   2f530:	bne	2f638 <crc32@@Base+0x15e94>
   2f534:	mov	r2, fp
   2f538:	mov	r1, sl
   2f53c:	mov	r0, r4
   2f540:	bl	2e99c <crc32@@Base+0x151f8>
   2f544:	mov	r2, r6
   2f548:	mov	r1, sl
   2f54c:	mov	r0, r7
   2f550:	bl	12380 <memmove@plt>
   2f554:	ldr	r1, [r4, #28]
   2f558:	lsr	r2, r8, #24
   2f55c:	ubfx	ip, r8, #8, #8
   2f560:	ubfx	lr, r1, #8, #8
   2f564:	ubfx	r0, r1, #16, #8
   2f568:	lsr	r3, r1, #24
   2f56c:	orr	r2, r2, r8, lsl #24
   2f570:	orr	r3, r3, r1, lsl #24
   2f574:	ubfx	r8, r8, #16, #8
   2f578:	orr	r3, r3, lr, lsl #16
   2f57c:	orr	r2, r2, ip, lsl #16
   2f580:	orr	r3, r3, r0, lsl #8
   2f584:	orr	r8, r2, r8, lsl #8
   2f588:	rev	r3, r3
   2f58c:	mov	r2, #285212672	; 0x11000000
   2f590:	str	r3, [r7, #28]
   2f594:	mov	r3, #3536	; 0xdd0
   2f598:	str	r2, [r7, #20]
   2f59c:	movt	r3, #60926	; 0xedfe
   2f5a0:	mov	r2, #268435456	; 0x10000000
   2f5a4:	str	r8, [r7, #4]
   2f5a8:	str	r3, [r7]
   2f5ac:	str	r2, [r7, #24]
   2f5b0:	b	2f41c <crc32@@Base+0x15c78>
   2f5b4:	ldr	r2, [r4, #36]	; 0x24
   2f5b8:	ubfx	r0, r2, #8, #8
   2f5bc:	ubfx	r1, r2, #16, #8
   2f5c0:	lsr	r3, r2, #24
   2f5c4:	orr	r3, r3, r2, lsl #24
   2f5c8:	orr	r3, r3, r0, lsl #16
   2f5cc:	orr	r3, r3, r1, lsl #8
   2f5d0:	str	r3, [sp, #8]
   2f5d4:	b	2f4a4 <crc32@@Base+0x15d00>
   2f5d8:	mov	r0, r4
   2f5dc:	mov	r2, r8
   2f5e0:	mov	r1, r7
   2f5e4:	bl	2dbfc <crc32@@Base+0x14458>
   2f5e8:	subs	r9, r0, #0
   2f5ec:	bne	2f41c <crc32@@Base+0x15c78>
   2f5f0:	ldr	r1, [sp, #8]
   2f5f4:	lsr	r2, r8, #24
   2f5f8:	ubfx	ip, r8, #8, #8
   2f5fc:	orr	r2, r2, r8, lsl #24
   2f600:	ubfx	r0, r1, #8, #8
   2f604:	ubfx	r8, r8, #16, #8
   2f608:	lsr	r3, r1, #24
   2f60c:	orr	r2, r2, ip, lsl #16
   2f610:	orr	r3, r3, r1, lsl #24
   2f614:	ubfx	r1, r1, #16, #8
   2f618:	orr	r3, r3, r0, lsl #16
   2f61c:	orr	r8, r2, r8, lsl #8
   2f620:	orr	r3, r3, r1, lsl #8
   2f624:	str	r8, [r7, #4]
   2f628:	str	r3, [r7, #36]	; 0x24
   2f62c:	mov	r3, #285212672	; 0x11000000
   2f630:	str	r3, [r7, #20]
   2f634:	b	2f41c <crc32@@Base+0x15c78>
   2f638:	add	r2, sl, r6
   2f63c:	add	r1, r7, r8
   2f640:	cmp	r2, r1
   2f644:	bls	2f534 <crc32@@Base+0x15d90>
   2f648:	mvn	r9, #2
   2f64c:	b	2f41c <crc32@@Base+0x15c78>
   2f650:	bl	12494 <__stack_chk_fail@plt>
   2f654:	push	{r4, r5, r6, lr}
   2f658:	mov	r4, r0
   2f65c:	bl	2eca4 <crc32@@Base+0x15500>
   2f660:	subs	r5, r0, #0
   2f664:	bne	2f6e4 <crc32@@Base+0x15f40>
   2f668:	mov	r0, r4
   2f66c:	bl	30a30 <crc32@@Base+0x1728c>
   2f670:	ldr	r3, [r4, #36]	; 0x24
   2f674:	mov	r1, r4
   2f678:	ubfx	lr, r3, #8, #8
   2f67c:	ubfx	ip, r3, #16, #8
   2f680:	lsr	r2, r3, #24
   2f684:	orr	r2, r2, r3, lsl #24
   2f688:	orr	r3, r2, lr, lsl #16
   2f68c:	orr	r3, r3, ip, lsl #8
   2f690:	add	r2, r0, #1
   2f694:	mov	r0, r4
   2f698:	lsl	r2, r2, #4
   2f69c:	bl	2e99c <crc32@@Base+0x151f8>
   2f6a0:	ldr	r0, [r4, #12]
   2f6a4:	ldr	r1, [r4, #32]
   2f6a8:	ubfx	r6, r0, #8, #8
   2f6ac:	ubfx	ip, r0, #16, #8
   2f6b0:	ubfx	lr, r1, #8, #8
   2f6b4:	lsr	r3, r0, #24
   2f6b8:	lsr	r2, r1, #24
   2f6bc:	orr	r3, r3, r0, lsl #24
   2f6c0:	orr	r2, r2, r1, lsl #24
   2f6c4:	ubfx	r1, r1, #16, #8
   2f6c8:	orr	r3, r3, r6, lsl #16
   2f6cc:	orr	r2, r2, lr, lsl #16
   2f6d0:	orr	r3, r3, ip, lsl #8
   2f6d4:	orr	r2, r2, r1, lsl #8
   2f6d8:	add	r3, r3, r2
   2f6dc:	rev	r3, r3
   2f6e0:	str	r3, [r4, #4]
   2f6e4:	mov	r0, r5
   2f6e8:	pop	{r4, r5, r6, pc}
   2f6ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f6f0:	mov	r5, r0
   2f6f4:	ldr	r0, [r0, #4]
   2f6f8:	movw	r7, #61168	; 0xeef0
   2f6fc:	movt	r7, #4
   2f700:	mov	r6, r1
   2f704:	ubfx	lr, r0, #8, #8
   2f708:	ubfx	r2, r0, #16, #8
   2f70c:	lsr	r3, r0, #24
   2f710:	ldr	ip, [r7]
   2f714:	orr	r3, r3, r0, lsl #24
   2f718:	sub	sp, sp, #12
   2f71c:	orr	r3, r3, lr, lsl #16
   2f720:	mov	r1, r5
   2f724:	orr	r2, r3, r2, lsl #8
   2f728:	mov	r0, r6
   2f72c:	str	ip, [sp, #4]
   2f730:	bl	1259c <memcpy@plt>
   2f734:	mov	r3, #0
   2f738:	str	r3, [r6, #32]
   2f73c:	mov	r4, r3
   2f740:	mov	r2, sp
   2f744:	mov	r1, r4
   2f748:	mov	r0, r5
   2f74c:	bl	2d7f0 <crc32@@Base+0x1404c>
   2f750:	cmp	r0, #3
   2f754:	beq	2f780 <crc32@@Base+0x15fdc>
   2f758:	cmp	r0, #9
   2f75c:	ldr	r4, [sp]
   2f760:	bne	2f740 <crc32@@Base+0x15f9c>
   2f764:	mov	r0, #0
   2f768:	ldr	r2, [sp, #4]
   2f76c:	ldr	r3, [r7]
   2f770:	cmp	r2, r3
   2f774:	bne	2f804 <crc32@@Base+0x16060>
   2f778:	add	sp, sp, #12
   2f77c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f780:	mov	r2, #0
   2f784:	mov	r1, r4
   2f788:	mov	r0, r5
   2f78c:	bl	30d18 <crc32@@Base+0x17574>
   2f790:	mov	r1, r4
   2f794:	mov	r2, #0
   2f798:	mov	r9, r0
   2f79c:	mov	r0, r6
   2f7a0:	bl	30d18 <crc32@@Base+0x17574>
   2f7a4:	ldr	r2, [r9, #8]
   2f7a8:	ubfx	ip, r2, #8, #8
   2f7ac:	ubfx	r1, r2, #16, #8
   2f7b0:	lsr	r3, r2, #24
   2f7b4:	orr	r3, r3, r2, lsl #24
   2f7b8:	orr	r3, r3, ip, lsl #16
   2f7bc:	orr	r1, r3, r1, lsl #8
   2f7c0:	mov	r8, r0
   2f7c4:	mov	r0, r5
   2f7c8:	bl	3086c <crc32@@Base+0x170c8>
   2f7cc:	mov	r1, r0
   2f7d0:	mov	r0, r6
   2f7d4:	bl	2ead0 <crc32@@Base+0x1532c>
   2f7d8:	cmp	r0, #0
   2f7dc:	blt	2f768 <crc32@@Base+0x15fc4>
   2f7e0:	lsr	r3, r0, #24
   2f7e4:	ubfx	r1, r0, #8, #8
   2f7e8:	ubfx	r2, r0, #16, #8
   2f7ec:	orr	r3, r3, r0, lsl #24
   2f7f0:	orr	r0, r3, r1, lsl #16
   2f7f4:	ldr	r4, [sp]
   2f7f8:	orr	r0, r0, r2, lsl #8
   2f7fc:	str	r0, [r8, #8]
   2f800:	b	2f740 <crc32@@Base+0x15f9c>
   2f804:	bl	12494 <__stack_chk_fail@plt>
   2f808:	cmp	r0, #0
   2f80c:	ble	2f81c <crc32@@Base+0x16078>
   2f810:	movw	r0, #51972	; 0xcb04
   2f814:	movt	r0, #3
   2f818:	bx	lr
   2f81c:	beq	2f858 <crc32@@Base+0x160b4>
   2f820:	cmn	r0, #18
   2f824:	bls	2f84c <crc32@@Base+0x160a8>
   2f828:	rsb	r0, r0, #0
   2f82c:	movw	r2, #51900	; 0xcabc
   2f830:	movt	r2, #3
   2f834:	movw	r3, #52008	; 0xcb28
   2f838:	movt	r3, #3
   2f83c:	ldr	r0, [r2, r0, lsl #2]
   2f840:	cmp	r0, #0
   2f844:	moveq	r0, r3
   2f848:	bx	lr
   2f84c:	movw	r0, #52008	; 0xcb28
   2f850:	movt	r0, #3
   2f854:	bx	lr
   2f858:	movw	r0, #51996	; 0xcb1c
   2f85c:	movt	r0, #3
   2f860:	bx	lr
   2f864:	push	{r4, r5, r6, lr}
   2f868:	mov	r4, r0
   2f86c:	mov	r5, r1
   2f870:	bl	2df58 <crc32@@Base+0x147b4>
   2f874:	cmp	r0, #0
   2f878:	popne	{r4, r5, r6, pc}
   2f87c:	mov	r0, r4
   2f880:	bl	2e1e0 <crc32@@Base+0x14a3c>
   2f884:	cmp	r0, #0
   2f888:	popne	{r4, r5, r6, pc}
   2f88c:	movw	r1, #46108	; 0xb41c
   2f890:	mov	r0, r4
   2f894:	movt	r1, #3
   2f898:	bl	2e200 <crc32@@Base+0x14a5c>
   2f89c:	cmp	r0, #0
   2f8a0:	popne	{r4, r5, r6, pc}
   2f8a4:	mov	r0, r4
   2f8a8:	bl	2e28c <crc32@@Base+0x14ae8>
   2f8ac:	cmp	r0, #0
   2f8b0:	popne	{r4, r5, r6, pc}
   2f8b4:	mov	r0, r4
   2f8b8:	bl	2e51c <crc32@@Base+0x14d78>
   2f8bc:	cmp	r0, #0
   2f8c0:	popne	{r4, r5, r6, pc}
   2f8c4:	mov	r2, r5
   2f8c8:	mov	r1, r4
   2f8cc:	mov	r0, r4
   2f8d0:	pop	{r4, r5, r6, lr}
   2f8d4:	b	2f3e8 <crc32@@Base+0x15c44>
   2f8d8:	push	{r4, lr}
   2f8dc:	movw	r4, #61168	; 0xeef0
   2f8e0:	movt	r4, #4
   2f8e4:	sub	sp, sp, #8
   2f8e8:	movw	r2, #27412	; 0x6b14
   2f8ec:	movt	r2, #3
   2f8f0:	ldr	ip, [r4]
   2f8f4:	mov	r3, sp
   2f8f8:	str	ip, [sp, #4]
   2f8fc:	bl	30f4c <crc32@@Base+0x177a8>
   2f900:	cmp	r0, #0
   2f904:	moveq	r0, #2
   2f908:	beq	2f940 <crc32@@Base+0x1619c>
   2f90c:	ldr	r3, [sp]
   2f910:	cmp	r3, #4
   2f914:	bne	2f958 <crc32@@Base+0x161b4>
   2f918:	ldr	r3, [r0]
   2f91c:	ubfx	r1, r3, #8, #8
   2f920:	ubfx	r2, r3, #16, #8
   2f924:	lsr	r0, r3, #24
   2f928:	orr	r0, r0, r3, lsl #24
   2f92c:	orr	r0, r0, r1, lsl #16
   2f930:	orr	r0, r0, r2, lsl #8
   2f934:	sub	r3, r0, #1
   2f938:	cmp	r3, #4
   2f93c:	mvncs	r0, #13
   2f940:	ldr	r2, [sp, #4]
   2f944:	ldr	r3, [r4]
   2f948:	cmp	r2, r3
   2f94c:	bne	2f960 <crc32@@Base+0x161bc>
   2f950:	add	sp, sp, #8
   2f954:	pop	{r4, pc}
   2f958:	mvn	r0, #13
   2f95c:	b	2f940 <crc32@@Base+0x1619c>
   2f960:	bl	12494 <__stack_chk_fail@plt>
   2f964:	push	{r4, lr}
   2f968:	movw	r4, #61168	; 0xeef0
   2f96c:	movt	r4, #4
   2f970:	sub	sp, sp, #8
   2f974:	movw	r2, #52356	; 0xcc84
   2f978:	movt	r2, #3
   2f97c:	ldr	ip, [r4]
   2f980:	mov	r3, sp
   2f984:	str	ip, [sp, #4]
   2f988:	bl	30f4c <crc32@@Base+0x177a8>
   2f98c:	cmp	r0, #0
   2f990:	moveq	r0, #2
   2f994:	beq	2f9c8 <crc32@@Base+0x16224>
   2f998:	ldr	r3, [sp]
   2f99c:	cmp	r3, #4
   2f9a0:	bne	2f9e0 <crc32@@Base+0x1623c>
   2f9a4:	ldr	r3, [r0]
   2f9a8:	ubfx	r1, r3, #8, #8
   2f9ac:	ubfx	r2, r3, #16, #8
   2f9b0:	lsr	r0, r3, #24
   2f9b4:	orr	r0, r0, r3, lsl #24
   2f9b8:	orr	r0, r0, r1, lsl #16
   2f9bc:	orr	r0, r0, r2, lsl #8
   2f9c0:	cmp	r0, #5
   2f9c4:	mvncs	r0, #13
   2f9c8:	ldr	r2, [sp, #4]
   2f9cc:	ldr	r3, [r4]
   2f9d0:	cmp	r2, r3
   2f9d4:	bne	2f9e8 <crc32@@Base+0x16244>
   2f9d8:	add	sp, sp, #8
   2f9dc:	pop	{r4, pc}
   2f9e0:	mvn	r0, #13
   2f9e4:	b	2f9c8 <crc32@@Base+0x16224>
   2f9e8:	bl	12494 <__stack_chk_fail@plt>
   2f9ec:	push	{r4, r5, r6, r7, r8, lr}
   2f9f0:	movw	r5, #61168	; 0xeef0
   2f9f4:	movt	r5, #4
   2f9f8:	sub	sp, sp, #24
   2f9fc:	mov	r4, r3
   2fa00:	add	r3, sp, #12
   2fa04:	ldr	ip, [r5]
   2fa08:	mov	r6, r0
   2fa0c:	mov	r7, r1
   2fa10:	mov	r8, r2
   2fa14:	str	ip, [sp, #20]
   2fa18:	bl	30f4c <crc32@@Base+0x177a8>
   2fa1c:	cmp	r0, #0
   2fa20:	ldreq	r0, [sp, #12]
   2fa24:	beq	2fa90 <crc32@@Base+0x162ec>
   2fa28:	ldr	r1, [sp, #12]
   2fa2c:	cmp	r1, #4
   2fa30:	bne	2fab0 <crc32@@Base+0x1630c>
   2fa34:	ldr	r2, [r0]
   2fa38:	ubfx	ip, r2, #8, #8
   2fa3c:	ubfx	r0, r2, #16, #8
   2fa40:	lsr	r3, r2, #24
   2fa44:	orr	r3, r3, r2, lsl #24
   2fa48:	orr	r3, r3, ip, lsl #16
   2fa4c:	orr	r3, r3, r0, lsl #8
   2fa50:	adds	r4, r4, r3
   2fa54:	movcs	r3, #1
   2fa58:	movcc	r3, #0
   2fa5c:	cmn	r4, #1
   2fa60:	movne	r2, #0
   2fa64:	moveq	r2, #1
   2fa68:	orrs	r3, r2, r3
   2fa6c:	bne	2faa8 <crc32@@Base+0x16304>
   2fa70:	add	r3, sp, #24
   2fa74:	str	r1, [sp]
   2fa78:	rev	r4, r4
   2fa7c:	mov	r2, r8
   2fa80:	mov	r1, r7
   2fa84:	mov	r0, r6
   2fa88:	str	r4, [r3, #-8]!
   2fa8c:	bl	2dcdc <crc32@@Base+0x14538>
   2fa90:	ldr	r2, [sp, #20]
   2fa94:	ldr	r3, [r5]
   2fa98:	cmp	r2, r3
   2fa9c:	bne	2fab8 <crc32@@Base+0x16314>
   2faa0:	add	sp, sp, #24
   2faa4:	pop	{r4, r5, r6, r7, r8, pc}
   2faa8:	mvn	r0, #16
   2faac:	b	2fa90 <crc32@@Base+0x162ec>
   2fab0:	mvn	r0, #5
   2fab4:	b	2fa90 <crc32@@Base+0x162ec>
   2fab8:	bl	12494 <__stack_chk_fail@plt>
   2fabc:	push	{r4, r5, r6, lr}
   2fac0:	mov	r4, r2
   2fac4:	mov	r3, r4
   2fac8:	movw	r2, #52368	; 0xcc90
   2facc:	movt	r2, #3
   2fad0:	mov	r5, r0
   2fad4:	mov	r6, r1
   2fad8:	bl	2f9ec <crc32@@Base+0x16248>
   2fadc:	add	r2, r0, #1
   2fae0:	mov	r3, r0
   2fae4:	cmp	r2, #1
   2fae8:	bls	2faf4 <crc32@@Base+0x16350>
   2faec:	mov	r0, r3
   2faf0:	pop	{r4, r5, r6, pc}
   2faf4:	mov	r3, r4
   2faf8:	movw	r2, #52376	; 0xcc98
   2fafc:	mov	r1, r6
   2fb00:	movt	r2, #3
   2fb04:	mov	r0, r5
   2fb08:	bl	2f9ec <crc32@@Base+0x16248>
   2fb0c:	add	r2, r0, #1
   2fb10:	mov	r3, r0
   2fb14:	cmp	r2, #1
   2fb18:	bhi	2faec <crc32@@Base+0x16348>
   2fb1c:	mov	r1, r6
   2fb20:	mov	r0, r5
   2fb24:	bl	2dac0 <crc32@@Base+0x1431c>
   2fb28:	subs	r6, r0, #0
   2fb2c:	blt	2fb5c <crc32@@Base+0x163b8>
   2fb30:	mov	r1, r6
   2fb34:	mov	r2, r4
   2fb38:	mov	r0, r5
   2fb3c:	bl	2fabc <crc32@@Base+0x16318>
   2fb40:	mov	r1, r6
   2fb44:	subs	r3, r0, #0
   2fb48:	mov	r0, r5
   2fb4c:	bne	2faec <crc32@@Base+0x16348>
   2fb50:	bl	2db20 <crc32@@Base+0x1437c>
   2fb54:	subs	r6, r0, #0
   2fb58:	bge	2fb30 <crc32@@Base+0x1638c>
   2fb5c:	mov	r3, #0
   2fb60:	b	2faec <crc32@@Base+0x16348>
   2fb64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb68:	movw	ip, #61168	; 0xeef0
   2fb6c:	sub	sp, sp, #60	; 0x3c
   2fb70:	movt	ip, #4
   2fb74:	mov	lr, r2
   2fb78:	mov	r7, r1
   2fb7c:	str	r2, [sp, #28]
   2fb80:	mov	r1, lr
   2fb84:	ldr	r2, [ip]
   2fb88:	mov	r9, r3
   2fb8c:	str	ip, [sp, #24]
   2fb90:	mov	r6, r0
   2fb94:	str	r2, [sp, #52]	; 0x34
   2fb98:	bl	30cd8 <crc32@@Base+0x17534>
   2fb9c:	subs	r3, r0, #0
   2fba0:	str	r3, [sp, #20]
   2fba4:	blt	2fcd0 <crc32@@Base+0x1652c>
   2fba8:	add	r3, sp, #40	; 0x28
   2fbac:	add	r2, sp, #36	; 0x24
   2fbb0:	ldr	r1, [sp, #20]
   2fbb4:	mov	r0, r6
   2fbb8:	bl	30edc <crc32@@Base+0x17738>
   2fbbc:	subs	r5, r0, #0
   2fbc0:	beq	2fd4c <crc32@@Base+0x165a8>
   2fbc4:	ldr	r4, [sp, #40]	; 0x28
   2fbc8:	ands	r4, r4, #3
   2fbcc:	bne	2fc98 <crc32@@Base+0x164f4>
   2fbd0:	add	r3, sp, #44	; 0x2c
   2fbd4:	ldr	r2, [sp, #36]	; 0x24
   2fbd8:	mov	r1, r7
   2fbdc:	mov	r0, r6
   2fbe0:	bl	30f4c <crc32@@Base+0x177a8>
   2fbe4:	subs	r8, r0, #0
   2fbe8:	beq	2fd54 <crc32@@Base+0x165b0>
   2fbec:	ldr	r3, [sp, #40]	; 0x28
   2fbf0:	lsrs	r3, r3, #2
   2fbf4:	subne	r5, r5, #4
   2fbf8:	bne	2fc18 <crc32@@Base+0x16474>
   2fbfc:	b	2fcb8 <crc32@@Base+0x16514>
   2fc00:	cmp	r0, #0
   2fc04:	bne	2fc9c <crc32@@Base+0x164f8>
   2fc08:	ldr	r3, [sp, #40]	; 0x28
   2fc0c:	add	r4, r4, #1
   2fc10:	cmp	r4, r3, lsr #2
   2fc14:	bcs	2fcb8 <crc32@@Base+0x16514>
   2fc18:	ldr	r3, [r5, #4]!
   2fc1c:	ldr	fp, [sp, #36]	; 0x24
   2fc20:	ubfx	r1, r3, #8, #8
   2fc24:	ubfx	r2, r3, #16, #8
   2fc28:	lsr	sl, r3, #24
   2fc2c:	orr	sl, sl, r3, lsl #24
   2fc30:	mov	r0, fp
   2fc34:	orr	sl, sl, r1, lsl #16
   2fc38:	orr	sl, sl, r2, lsl #8
   2fc3c:	ldr	r2, [r8, sl]
   2fc40:	ubfx	r1, r2, #8, #8
   2fc44:	lsr	r3, r2, #24
   2fc48:	orr	r3, r3, r2, lsl #24
   2fc4c:	ubfx	r2, r2, #16, #8
   2fc50:	orr	r3, r3, r1, lsl #16
   2fc54:	orr	r3, r3, r2, lsl #8
   2fc58:	add	r3, r3, r9
   2fc5c:	rev	r3, r3
   2fc60:	str	r3, [sp, #48]	; 0x30
   2fc64:	bl	125c0 <strlen@plt>
   2fc68:	mov	r3, #4
   2fc6c:	str	sl, [sp]
   2fc70:	mov	r2, fp
   2fc74:	str	r3, [sp, #8]
   2fc78:	mov	r1, r7
   2fc7c:	add	r3, sp, #48	; 0x30
   2fc80:	str	r3, [sp, #4]
   2fc84:	mov	r3, r0
   2fc88:	mov	r0, r6
   2fc8c:	bl	2dc58 <crc32@@Base+0x144b4>
   2fc90:	cmn	r0, #3
   2fc94:	bne	2fc00 <crc32@@Base+0x1645c>
   2fc98:	mvn	r0, #15
   2fc9c:	ldr	r3, [sp, #24]
   2fca0:	ldr	r2, [sp, #52]	; 0x34
   2fca4:	ldr	r3, [r3]
   2fca8:	cmp	r2, r3
   2fcac:	bne	2fd64 <crc32@@Base+0x165c0>
   2fcb0:	add	sp, sp, #60	; 0x3c
   2fcb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fcb8:	ldr	r1, [sp, #20]
   2fcbc:	mov	r0, r6
   2fcc0:	bl	30cf8 <crc32@@Base+0x17554>
   2fcc4:	subs	r3, r0, #0
   2fcc8:	str	r3, [sp, #20]
   2fccc:	bge	2fba8 <crc32@@Base+0x16404>
   2fcd0:	ldr	r1, [sp, #28]
   2fcd4:	mov	r0, r6
   2fcd8:	bl	2dac0 <crc32@@Base+0x1431c>
   2fcdc:	subs	r4, r0, #0
   2fce0:	blt	2fd44 <crc32@@Base+0x165a0>
   2fce4:	mov	r2, #0
   2fce8:	mov	r1, r4
   2fcec:	mov	r0, r6
   2fcf0:	bl	30c4c <crc32@@Base+0x174a8>
   2fcf4:	mov	r1, r7
   2fcf8:	mov	r2, r0
   2fcfc:	mov	r0, r6
   2fd00:	bl	30c1c <crc32@@Base+0x17478>
   2fd04:	cmn	r0, #1
   2fd08:	beq	2fc98 <crc32@@Base+0x164f4>
   2fd0c:	cmp	r0, #0
   2fd10:	blt	2fc9c <crc32@@Base+0x164f8>
   2fd14:	mov	r1, r0
   2fd18:	mov	r3, r9
   2fd1c:	mov	r2, r4
   2fd20:	mov	r0, r6
   2fd24:	bl	2fb64 <crc32@@Base+0x163c0>
   2fd28:	cmp	r0, #0
   2fd2c:	bne	2fc9c <crc32@@Base+0x164f8>
   2fd30:	mov	r1, r4
   2fd34:	mov	r0, r6
   2fd38:	bl	2db20 <crc32@@Base+0x1437c>
   2fd3c:	subs	r4, r0, #0
   2fd40:	bge	2fce4 <crc32@@Base+0x16540>
   2fd44:	mov	r0, #0
   2fd48:	b	2fc9c <crc32@@Base+0x164f8>
   2fd4c:	ldr	r0, [sp, #40]	; 0x28
   2fd50:	b	2fc9c <crc32@@Base+0x164f8>
   2fd54:	ldr	r0, [sp, #44]	; 0x2c
   2fd58:	cmn	r0, #1
   2fd5c:	bne	2fc9c <crc32@@Base+0x164f8>
   2fd60:	b	2fc98 <crc32@@Base+0x164f4>
   2fd64:	bl	12494 <__stack_chk_fail@plt>
   2fd68:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fd6c:	movw	r4, #61168	; 0xeef0
   2fd70:	movt	r4, #4
   2fd74:	sub	sp, sp, #20
   2fd78:	mov	r6, r1
   2fd7c:	mov	r9, r2
   2fd80:	ldr	ip, [r4]
   2fd84:	mov	r1, r2
   2fd88:	mov	r8, r0
   2fd8c:	mov	r7, r3
   2fd90:	mov	r0, r6
   2fd94:	movw	r2, #52392	; 0xcca8
   2fd98:	add	r3, sp, #8
   2fd9c:	movt	r2, #3
   2fda0:	str	ip, [sp, #12]
   2fda4:	mov	r5, #0
   2fda8:	str	r5, [sp, #4]
   2fdac:	bl	30f4c <crc32@@Base+0x177a8>
   2fdb0:	cmp	r0, #0
   2fdb4:	beq	2fdf0 <crc32@@Base+0x1664c>
   2fdb8:	ldr	r3, [sp, #8]
   2fdbc:	cmp	r3, #4
   2fdc0:	bne	2fe48 <crc32@@Base+0x166a4>
   2fdc4:	ldr	r3, [r0]
   2fdc8:	ubfx	r0, r3, #8, #8
   2fdcc:	ubfx	r2, r3, #16, #8
   2fdd0:	lsr	r1, r3, #24
   2fdd4:	orr	r1, r1, r3, lsl #24
   2fdd8:	orr	r1, r1, r0, lsl #16
   2fddc:	orr	r1, r1, r2, lsl #8
   2fde0:	cmn	r1, #1
   2fde4:	beq	2fe48 <crc32@@Base+0x166a4>
   2fde8:	cmp	r1, #0
   2fdec:	bne	2fe50 <crc32@@Base+0x166ac>
   2fdf0:	mov	r1, r9
   2fdf4:	mov	r0, r6
   2fdf8:	movw	r2, #52400	; 0xccb0
   2fdfc:	add	r3, sp, #4
   2fe00:	movt	r2, #3
   2fe04:	bl	30f4c <crc32@@Base+0x177a8>
   2fe08:	subs	r5, r0, #0
   2fe0c:	ldreq	r0, [sp, #4]
   2fe10:	beq	2fe20 <crc32@@Base+0x1667c>
   2fe14:	mov	r0, r8
   2fe18:	mov	r1, r5
   2fe1c:	bl	312a8 <crc32@@Base+0x17b04>
   2fe20:	cmp	r0, #0
   2fe24:	blt	2fe60 <crc32@@Base+0x166bc>
   2fe28:	cmp	r7, #0
   2fe2c:	strne	r5, [r7]
   2fe30:	ldr	r2, [sp, #12]
   2fe34:	ldr	r3, [r4]
   2fe38:	cmp	r2, r3
   2fe3c:	bne	2fe70 <crc32@@Base+0x166cc>
   2fe40:	add	sp, sp, #20
   2fe44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fe48:	mvn	r0, #5
   2fe4c:	b	2fe30 <crc32@@Base+0x1668c>
   2fe50:	mov	r0, r8
   2fe54:	bl	316f4 <crc32@@Base+0x17f50>
   2fe58:	cmp	r0, #0
   2fe5c:	bge	2fe28 <crc32@@Base+0x16684>
   2fe60:	ldr	r3, [sp, #4]
   2fe64:	cmn	r3, #1
   2fe68:	mvneq	r0, #15
   2fe6c:	b	2fe30 <crc32@@Base+0x1668c>
   2fe70:	bl	12494 <__stack_chk_fail@plt>
   2fe74:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fe78:	movw	r8, #61168	; 0xeef0
   2fe7c:	movt	r8, #4
   2fe80:	mov	r9, r3
   2fe84:	sub	sp, sp, #28
   2fe88:	mov	r6, r0
   2fe8c:	ldr	r3, [r8]
   2fe90:	mov	r7, r1
   2fe94:	mov	r0, r2
   2fe98:	mov	r1, r9
   2fe9c:	mov	r5, r2
   2fea0:	str	r3, [sp, #20]
   2fea4:	bl	30cd8 <crc32@@Base+0x17534>
   2fea8:	subs	r4, r0, #0
   2feac:	bge	2fef0 <crc32@@Base+0x1674c>
   2feb0:	b	2ff30 <crc32@@Base+0x1678c>
   2feb4:	cmp	r1, #0
   2feb8:	blt	2ff14 <crc32@@Base+0x16770>
   2febc:	mov	r3, r0
   2fec0:	str	r1, [sp]
   2fec4:	ldr	r2, [sp, #12]
   2fec8:	mov	r1, r7
   2fecc:	mov	r0, r6
   2fed0:	bl	2f000 <crc32@@Base+0x1585c>
   2fed4:	subs	r1, r0, #0
   2fed8:	bne	2ff14 <crc32@@Base+0x16770>
   2fedc:	mov	r1, r4
   2fee0:	mov	r0, r5
   2fee4:	bl	30cf8 <crc32@@Base+0x17554>
   2fee8:	subs	r4, r0, #0
   2feec:	blt	2ff30 <crc32@@Base+0x1678c>
   2fef0:	mov	r1, r4
   2fef4:	add	r3, sp, #16
   2fef8:	add	r2, sp, #12
   2fefc:	mov	r0, r5
   2ff00:	bl	30edc <crc32@@Base+0x17738>
   2ff04:	ldr	r1, [sp, #16]
   2ff08:	cmn	r1, #1
   2ff0c:	bne	2feb4 <crc32@@Base+0x16710>
   2ff10:	mvn	r1, #12
   2ff14:	ldr	r2, [sp, #20]
   2ff18:	mov	r0, r1
   2ff1c:	ldr	r3, [r8]
   2ff20:	cmp	r2, r3
   2ff24:	bne	2ffd0 <crc32@@Base+0x1682c>
   2ff28:	add	sp, sp, #28
   2ff2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ff30:	mov	r1, r9
   2ff34:	mov	r0, r5
   2ff38:	bl	2dac0 <crc32@@Base+0x1431c>
   2ff3c:	subs	r4, r0, #0
   2ff40:	blt	2ffa8 <crc32@@Base+0x16804>
   2ff44:	mov	r2, #0
   2ff48:	mov	r1, r4
   2ff4c:	mov	r0, r5
   2ff50:	bl	30c4c <crc32@@Base+0x174a8>
   2ff54:	mov	r1, r7
   2ff58:	mov	r2, r0
   2ff5c:	mov	r9, r0
   2ff60:	mov	r0, r6
   2ff64:	bl	2f354 <crc32@@Base+0x15bb0>
   2ff68:	cmn	r0, #2
   2ff6c:	mov	r1, r0
   2ff70:	beq	2ffb0 <crc32@@Base+0x1680c>
   2ff74:	cmp	r1, #0
   2ff78:	blt	2ff14 <crc32@@Base+0x16770>
   2ff7c:	mov	r3, r4
   2ff80:	mov	r2, r5
   2ff84:	mov	r0, r6
   2ff88:	bl	2fe74 <crc32@@Base+0x166d0>
   2ff8c:	subs	r1, r0, #0
   2ff90:	bne	2ff14 <crc32@@Base+0x16770>
   2ff94:	mov	r1, r4
   2ff98:	mov	r0, r5
   2ff9c:	bl	2db20 <crc32@@Base+0x1437c>
   2ffa0:	subs	r4, r0, #0
   2ffa4:	bge	2ff44 <crc32@@Base+0x167a0>
   2ffa8:	mov	r1, #0
   2ffac:	b	2ff14 <crc32@@Base+0x16770>
   2ffb0:	mov	r1, r7
   2ffb4:	mov	r2, r9
   2ffb8:	mov	r0, r6
   2ffbc:	bl	30c1c <crc32@@Base+0x17478>
   2ffc0:	cmn	r0, #1
   2ffc4:	mov	r1, r0
   2ffc8:	bne	2ff74 <crc32@@Base+0x167d0>
   2ffcc:	b	2ff10 <crc32@@Base+0x1676c>
   2ffd0:	bl	12494 <__stack_chk_fail@plt>
   2ffd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ffd8:	movw	r4, #61168	; 0xeef0
   2ffdc:	movt	r4, #4
   2ffe0:	sub	sp, sp, #76	; 0x4c
   2ffe4:	mov	sl, r0
   2ffe8:	mov	fp, r1
   2ffec:	ldr	r3, [r4]
   2fff0:	str	r3, [sp, #68]	; 0x44
   2fff4:	bl	31044 <crc32@@Base+0x178a0>
   2fff8:	mov	r5, r0
   2fffc:	mov	r0, sl
   30000:	bl	2d674 <crc32@@Base+0x13ed0>
   30004:	subs	r9, r0, #0
   30008:	beq	30028 <crc32@@Base+0x16884>
   3000c:	ldr	r2, [sp, #68]	; 0x44
   30010:	mov	r0, r9
   30014:	ldr	r3, [r4]
   30018:	cmp	r2, r3
   3001c:	bne	30654 <crc32@@Base+0x16eb0>
   30020:	add	sp, sp, #76	; 0x4c
   30024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30028:	mov	r0, fp
   3002c:	bl	2d674 <crc32@@Base+0x13ed0>
   30030:	subs	r9, r0, #0
   30034:	bne	3000c <crc32@@Base+0x16868>
   30038:	mov	r1, r9
   3003c:	mov	r2, r5
   30040:	mov	r0, fp
   30044:	bl	2fabc <crc32@@Base+0x16318>
   30048:	subs	r9, r0, #0
   3004c:	beq	30060 <crc32@@Base+0x168bc>
   30050:	mvn	r3, #0
   30054:	str	r3, [fp]
   30058:	str	r3, [sl]
   3005c:	b	3000c <crc32@@Base+0x16868>
   30060:	movw	r1, #52412	; 0xccbc
   30064:	mov	r0, fp
   30068:	movt	r1, #3
   3006c:	bl	312a8 <crc32@@Base+0x17b04>
   30070:	subs	r2, r0, #0
   30074:	bge	302ac <crc32@@Base+0x16b08>
   30078:	cmn	r2, #1
   3007c:	movne	r9, r2
   30080:	bne	30050 <crc32@@Base+0x168ac>
   30084:	movw	r1, #52432	; 0xccd0
   30088:	mov	r0, fp
   3008c:	movt	r1, #3
   30090:	bl	312a8 <crc32@@Base+0x17b04>
   30094:	cmn	r0, #1
   30098:	mov	r5, r0
   3009c:	beq	302f0 <crc32@@Base+0x16b4c>
   300a0:	cmp	r0, #0
   300a4:	blt	303c4 <crc32@@Base+0x16c20>
   300a8:	movw	r1, #52444	; 0xccdc
   300ac:	mov	r0, sl
   300b0:	movt	r1, #3
   300b4:	bl	312a8 <crc32@@Base+0x17b04>
   300b8:	cmn	r0, #1
   300bc:	str	r0, [sp, #16]
   300c0:	blt	302a4 <crc32@@Base+0x16b00>
   300c4:	mov	r1, r5
   300c8:	mov	r0, fp
   300cc:	bl	30cd8 <crc32@@Base+0x17534>
   300d0:	subs	r3, r0, #0
   300d4:	str	r3, [sp, #28]
   300d8:	blt	302f0 <crc32@@Base+0x16b4c>
   300dc:	str	r9, [sp, #40]	; 0x28
   300e0:	mov	r9, fp
   300e4:	add	r3, sp, #52	; 0x34
   300e8:	str	r4, [sp, #24]
   300ec:	str	r3, [sp, #36]	; 0x24
   300f0:	add	r3, sp, #48	; 0x30
   300f4:	str	r3, [sp, #32]
   300f8:	ldrd	r2, [sp, #32]
   300fc:	mov	r0, r9
   30100:	ldr	r1, [sp, #28]
   30104:	bl	30edc <crc32@@Base+0x17738>
   30108:	subs	r5, r0, #0
   3010c:	ldrne	r4, [sp, #52]	; 0x34
   30110:	bne	301c4 <crc32@@Base+0x16a20>
   30114:	b	303cc <crc32@@Base+0x16c28>
   30118:	add	r3, sp, #64	; 0x40
   3011c:	ldr	r2, [sp, #48]	; 0x30
   30120:	mov	r0, sl
   30124:	bl	30f4c <crc32@@Base+0x177a8>
   30128:	subs	r1, r0, #0
   3012c:	ldreq	r0, [sp, #64]	; 0x40
   30130:	beq	301ac <crc32@@Base+0x16a08>
   30134:	mov	r0, sl
   30138:	bl	312a8 <crc32@@Base+0x17b04>
   3013c:	subs	r1, r0, #0
   30140:	blt	303b4 <crc32@@Base+0x16c10>
   30144:	mov	r0, sl
   30148:	bl	30f94 <crc32@@Base+0x177f0>
   3014c:	subs	r3, r0, #0
   30150:	mov	fp, r3
   30154:	beq	30658 <crc32@@Base+0x16eb4>
   30158:	mov	r2, r7
   3015c:	mov	r1, r5
   30160:	mov	r0, r9
   30164:	bl	311b4 <crc32@@Base+0x17a10>
   30168:	cmn	r0, #1
   3016c:	beq	303a0 <crc32@@Base+0x16bfc>
   30170:	cmp	r0, #0
   30174:	blt	303f0 <crc32@@Base+0x16c4c>
   30178:	ldr	r3, [sp, #20]
   3017c:	add	lr, sp, #72	; 0x48
   30180:	rev	ip, fp
   30184:	mov	r1, r0
   30188:	mov	r2, r4
   3018c:	mov	r0, r9
   30190:	str	r3, [sp]
   30194:	mov	r3, r8
   30198:	str	ip, [lr, #-12]!
   3019c:	mov	ip, #4
   301a0:	str	lr, [sp, #4]
   301a4:	str	ip, [sp, #8]
   301a8:	bl	2dc58 <crc32@@Base+0x144b4>
   301ac:	cmp	r0, #0
   301b0:	bne	303f0 <crc32@@Base+0x16c4c>
   301b4:	ldr	r4, [sp, #52]	; 0x34
   301b8:	cmp	r4, #0
   301bc:	ble	302cc <crc32@@Base+0x16b28>
   301c0:	mov	r5, r6
   301c4:	mov	r2, r4
   301c8:	mov	r1, #0
   301cc:	mov	r0, r5
   301d0:	bl	12698 <memchr@plt>
   301d4:	cmp	r0, #0
   301d8:	beq	303a0 <crc32@@Base+0x16bfc>
   301dc:	sub	r7, r0, r5
   301e0:	sub	r4, r4, #1
   301e4:	mov	r1, #58	; 0x3a
   301e8:	mov	r0, r5
   301ec:	mov	r2, r7
   301f0:	sub	r4, r4, r7
   301f4:	str	r4, [sp, #52]	; 0x34
   301f8:	bl	12698 <memchr@plt>
   301fc:	add	r6, r7, #1
   30200:	add	r6, r5, r6
   30204:	cmp	r0, #0
   30208:	beq	303a0 <crc32@@Base+0x16bfc>
   3020c:	ldrb	r1, [r0]
   30210:	cmp	r1, #58	; 0x3a
   30214:	bne	303a0 <crc32@@Base+0x16bfc>
   30218:	sub	r2, r7, #1
   3021c:	sub	r7, r0, r5
   30220:	cmp	r7, r2
   30224:	beq	303a0 <crc32@@Base+0x16bfc>
   30228:	add	r4, r0, #1
   3022c:	sub	r2, r2, r7
   30230:	mov	r0, r4
   30234:	bl	12698 <memchr@plt>
   30238:	cmp	r0, #0
   3023c:	beq	303a0 <crc32@@Base+0x16bfc>
   30240:	ldrb	r3, [r0]
   30244:	cmp	r3, #58	; 0x3a
   30248:	bne	303a0 <crc32@@Base+0x16bfc>
   3024c:	subs	r8, r0, r4
   30250:	beq	303a0 <crc32@@Base+0x16bfc>
   30254:	add	fp, r0, #1
   30258:	mov	r2, #10
   3025c:	add	r1, sp, #56	; 0x38
   30260:	mov	r0, fp
   30264:	bl	122cc <strtoul@plt>
   30268:	ldr	r2, [sp, #56]	; 0x38
   3026c:	cmp	fp, r2
   30270:	ldrb	r2, [r2]
   30274:	movcc	r3, #0
   30278:	movcs	r3, #1
   3027c:	cmp	r2, #0
   30280:	movne	r3, #1
   30284:	cmp	r3, #0
   30288:	str	r0, [sp, #20]
   3028c:	bne	303a0 <crc32@@Base+0x16bfc>
   30290:	ldr	r1, [sp, #16]
   30294:	cmn	r1, #1
   30298:	bne	30118 <crc32@@Base+0x16974>
   3029c:	ldr	r4, [sp, #24]
   302a0:	mov	fp, r9
   302a4:	ldr	r9, [sp, #16]
   302a8:	b	30050 <crc32@@Base+0x168ac>
   302ac:	mov	r3, r5
   302b0:	mov	r1, r9
   302b4:	mov	r0, fp
   302b8:	bl	2fb64 <crc32@@Base+0x163c0>
   302bc:	cmp	r0, #0
   302c0:	beq	30084 <crc32@@Base+0x168e0>
   302c4:	mov	r9, r0
   302c8:	b	30050 <crc32@@Base+0x168ac>
   302cc:	ldr	r1, [sp, #28]
   302d0:	mov	r0, r9
   302d4:	bl	30cf8 <crc32@@Base+0x17554>
   302d8:	subs	r3, r0, #0
   302dc:	str	r3, [sp, #28]
   302e0:	bge	300f8 <crc32@@Base+0x16954>
   302e4:	mov	fp, r9
   302e8:	ldr	r4, [sp, #24]
   302ec:	ldr	r9, [sp, #40]	; 0x28
   302f0:	mov	r1, #0
   302f4:	mov	r0, fp
   302f8:	bl	2dac0 <crc32@@Base+0x1431c>
   302fc:	subs	r5, r0, #0
   30300:	blt	30378 <crc32@@Base+0x16bd4>
   30304:	movw	r7, #52460	; 0xccec
   30308:	movt	r7, #3
   3030c:	mov	r2, r7
   30310:	mov	r1, r5
   30314:	mov	r0, fp
   30318:	bl	30c1c <crc32@@Base+0x17478>
   3031c:	cmn	r0, #1
   30320:	mov	r6, r0
   30324:	beq	30364 <crc32@@Base+0x16bc0>
   30328:	cmp	r0, #0
   3032c:	blt	30400 <crc32@@Base+0x16c5c>
   30330:	mov	r1, fp
   30334:	mov	r3, #0
   30338:	mov	r2, r5
   3033c:	mov	r0, sl
   30340:	bl	2fd68 <crc32@@Base+0x165c4>
   30344:	subs	r1, r0, #0
   30348:	blt	30408 <crc32@@Base+0x16c64>
   3034c:	mov	r3, r6
   30350:	mov	r2, fp
   30354:	mov	r0, sl
   30358:	bl	2fe74 <crc32@@Base+0x166d0>
   3035c:	cmp	r0, #0
   30360:	bne	302c4 <crc32@@Base+0x16b20>
   30364:	mov	r1, r5
   30368:	mov	r0, fp
   3036c:	bl	2db20 <crc32@@Base+0x1437c>
   30370:	subs	r5, r0, #0
   30374:	bge	3030c <crc32@@Base+0x16b68>
   30378:	movw	r2, #52472	; 0xccf8
   3037c:	mov	r1, #0
   30380:	movt	r2, #3
   30384:	mov	r0, fp
   30388:	bl	30c1c <crc32@@Base+0x17478>
   3038c:	subs	r5, r0, #0
   30390:	bge	30410 <crc32@@Base+0x16c6c>
   30394:	mvn	r3, #0
   30398:	str	r3, [fp]
   3039c:	b	3000c <crc32@@Base+0x16868>
   303a0:	mvn	r3, #15
   303a4:	mov	fp, r9
   303a8:	ldr	r4, [sp, #24]
   303ac:	str	r3, [sp, #16]
   303b0:	b	302a4 <crc32@@Base+0x16b00>
   303b4:	mov	fp, r9
   303b8:	ldr	r4, [sp, #24]
   303bc:	str	r1, [sp, #16]
   303c0:	b	302a4 <crc32@@Base+0x16b00>
   303c4:	mov	r9, r0
   303c8:	b	30050 <crc32@@Base+0x168ac>
   303cc:	ldr	r3, [sp, #52]	; 0x34
   303d0:	cmn	r3, #1
   303d4:	beq	30754 <crc32@@Base+0x16fb0>
   303d8:	cmp	r3, #0
   303dc:	beq	302cc <crc32@@Base+0x16b28>
   303e0:	mov	fp, r9
   303e4:	ldr	r4, [sp, #24]
   303e8:	mov	r9, r3
   303ec:	b	30050 <crc32@@Base+0x168ac>
   303f0:	mov	fp, r9
   303f4:	ldr	r4, [sp, #24]
   303f8:	str	r0, [sp, #16]
   303fc:	b	302a4 <crc32@@Base+0x16b00>
   30400:	mov	r9, r0
   30404:	b	30050 <crc32@@Base+0x168ac>
   30408:	mov	r9, r1
   3040c:	b	30050 <crc32@@Base+0x168ac>
   30410:	movw	r2, #52472	; 0xccf8
   30414:	mov	r1, #0
   30418:	movt	r2, #3
   3041c:	mov	r0, sl
   30420:	bl	30c1c <crc32@@Base+0x17478>
   30424:	cmn	r0, #1
   30428:	str	r0, [sp, #20]
   3042c:	beq	30738 <crc32@@Base+0x16f94>
   30430:	ldr	r3, [sp, #20]
   30434:	cmp	r3, #0
   30438:	blt	3064c <crc32@@Base+0x16ea8>
   3043c:	mov	r1, r5
   30440:	mov	r0, fp
   30444:	bl	30cd8 <crc32@@Base+0x17534>
   30448:	subs	r3, r0, #0
   3044c:	str	r3, [sp, #24]
   30450:	blt	30394 <crc32@@Base+0x16bf0>
   30454:	movw	r3, #52484	; 0xcd04
   30458:	movw	r2, #52460	; 0xccec
   3045c:	movt	r3, #3
   30460:	movt	r2, #3
   30464:	str	r3, [sp, #40]	; 0x28
   30468:	add	r3, sp, #52	; 0x34
   3046c:	str	r2, [sp, #44]	; 0x2c
   30470:	str	r3, [sp, #36]	; 0x24
   30474:	add	r3, sp, #48	; 0x30
   30478:	str	r9, [sp, #28]
   3047c:	str	r3, [sp, #32]
   30480:	str	r4, [sp, #16]
   30484:	ldr	r3, [sp, #32]
   30488:	mov	r0, fp
   3048c:	ldr	r2, [sp, #36]	; 0x24
   30490:	ldr	r1, [sp, #24]
   30494:	bl	30edc <crc32@@Base+0x17738>
   30498:	subs	r8, r0, #0
   3049c:	beq	30630 <crc32@@Base+0x16e8c>
   304a0:	ldr	r6, [sp, #48]	; 0x30
   304a4:	cmp	r6, #0
   304a8:	ble	30764 <crc32@@Base+0x16fc0>
   304ac:	mov	r2, r6
   304b0:	mov	r1, #0
   304b4:	bl	12698 <memchr@plt>
   304b8:	sub	r3, r6, #1
   304bc:	add	r3, r8, r3
   304c0:	cmp	r0, r3
   304c4:	bne	30764 <crc32@@Base+0x16fc0>
   304c8:	ldrb	r1, [r8]
   304cc:	add	r6, r8, r6
   304d0:	cmp	r1, #47	; 0x2f
   304d4:	bne	30764 <crc32@@Base+0x16fc0>
   304d8:	add	r7, r8, #1
   304dc:	mov	r0, r7
   304e0:	bl	12764 <strchr@plt>
   304e4:	subs	r9, r0, #0
   304e8:	beq	3078c <crc32@@Base+0x16fe8>
   304ec:	sub	r3, r6, r9
   304f0:	sub	r8, r9, r8
   304f4:	cmp	r3, #12
   304f8:	sub	r8, r8, #1
   304fc:	ble	3078c <crc32@@Base+0x16fe8>
   30500:	ldr	r1, [sp, #40]	; 0x28
   30504:	mov	r2, #13
   30508:	bl	126c8 <memcmp@plt>
   3050c:	subs	r1, r0, #0
   30510:	bne	3078c <crc32@@Base+0x16fe8>
   30514:	mov	r2, r7
   30518:	mov	r3, r8
   3051c:	mov	r0, fp
   30520:	add	r9, r9, #13
   30524:	bl	30b2c <crc32@@Base+0x17388>
   30528:	sub	r6, r6, r9
   3052c:	subs	r7, r0, #0
   30530:	blt	3078c <crc32@@Base+0x16fe8>
   30534:	ldr	r2, [sp, #44]	; 0x2c
   30538:	mov	r1, r7
   3053c:	mov	r0, fp
   30540:	bl	30c1c <crc32@@Base+0x17478>
   30544:	cmp	r0, #0
   30548:	blt	3078c <crc32@@Base+0x16fe8>
   3054c:	mov	r2, r7
   30550:	mov	r1, fp
   30554:	mov	r0, sl
   30558:	add	r3, sp, #56	; 0x38
   3055c:	bl	2fd68 <crc32@@Base+0x165c4>
   30560:	subs	r5, r0, #0
   30564:	blt	30780 <crc32@@Base+0x16fdc>
   30568:	ldr	r0, [sp, #56]	; 0x38
   3056c:	cmp	r0, #0
   30570:	beq	3066c <crc32@@Base+0x16ec8>
   30574:	bl	125c0 <strlen@plt>
   30578:	mov	r5, r0
   3057c:	cmp	r5, #1
   30580:	movle	r3, r5
   30584:	addgt	r3, r5, #1
   30588:	add	r1, sp, #60	; 0x3c
   3058c:	add	r3, r3, r6
   30590:	str	r1, [sp]
   30594:	ldr	r2, [sp, #52]	; 0x34
   30598:	add	r3, r3, #1
   3059c:	ldr	r1, [sp, #20]
   305a0:	mov	r0, sl
   305a4:	bl	2eee8 <crc32@@Base+0x15744>
   305a8:	subs	r4, r0, #0
   305ac:	blt	3072c <crc32@@Base+0x16f88>
   305b0:	ldr	r1, [sp, #56]	; 0x38
   305b4:	cmp	r1, #0
   305b8:	beq	306d8 <crc32@@Base+0x16f34>
   305bc:	cmp	r5, #1
   305c0:	ldr	r7, [sp, #60]	; 0x3c
   305c4:	addgt	r8, r5, #1
   305c8:	ble	30624 <crc32@@Base+0x16e80>
   305cc:	mov	r2, r8
   305d0:	mov	r0, r7
   305d4:	bl	1259c <memcpy@plt>
   305d8:	mov	r2, r6
   305dc:	add	r6, r7, r6
   305e0:	mov	r3, #47	; 0x2f
   305e4:	strb	r3, [r7, r5]
   305e8:	add	r5, r6, r5
   305ec:	mov	r1, r9
   305f0:	add	r0, r7, r8
   305f4:	bl	1259c <memcpy@plt>
   305f8:	mov	r3, #0
   305fc:	ldr	r1, [sp, #24]
   30600:	mov	r0, fp
   30604:	strb	r3, [r5, #1]
   30608:	bl	30cf8 <crc32@@Base+0x17554>
   3060c:	subs	r3, r0, #0
   30610:	str	r3, [sp, #24]
   30614:	bge	30484 <crc32@@Base+0x16ce0>
   30618:	ldr	r9, [sp, #28]
   3061c:	ldr	r4, [sp, #16]
   30620:	b	30394 <crc32@@Base+0x16bf0>
   30624:	mov	r8, r5
   30628:	sub	r5, r5, #1
   3062c:	b	305d8 <crc32@@Base+0x16e34>
   30630:	ldr	r3, [sp, #48]	; 0x30
   30634:	ldr	r9, [sp, #28]
   30638:	cmp	r3, #0
   3063c:	ldr	r4, [sp, #16]
   30640:	beq	30394 <crc32@@Base+0x16bf0>
   30644:	mov	r9, r3
   30648:	b	30050 <crc32@@Base+0x168ac>
   3064c:	ldr	r3, [sp, #20]
   30650:	b	30644 <crc32@@Base+0x16ea0>
   30654:	bl	12494 <__stack_chk_fail@plt>
   30658:	mvn	r3, #0
   3065c:	mov	fp, r9
   30660:	ldr	r4, [sp, #24]
   30664:	str	r3, [sp, #16]
   30668:	b	302a4 <crc32@@Base+0x16b00>
   3066c:	mov	r0, sl
   30670:	bl	2d674 <crc32@@Base+0x13ed0>
   30674:	subs	r4, r0, #0
   30678:	bne	306c8 <crc32@@Base+0x16f24>
   3067c:	add	r2, sp, #64	; 0x40
   30680:	mov	r1, r5
   30684:	mov	r0, sl
   30688:	bl	30c4c <crc32@@Base+0x174a8>
   3068c:	cmp	r0, #0
   30690:	beq	306c4 <crc32@@Base+0x16f20>
   30694:	ldr	r3, [sp, #64]	; 0x40
   30698:	cmp	r3, #0
   3069c:	beq	30770 <crc32@@Base+0x16fcc>
   306a0:	mov	r1, r5
   306a4:	mov	r0, sl
   306a8:	bl	315a8 <crc32@@Base+0x17e04>
   306ac:	subs	r5, r0, #0
   306b0:	blt	30780 <crc32@@Base+0x16fdc>
   306b4:	ldr	r3, [sp, #64]	; 0x40
   306b8:	add	r3, r3, #1
   306bc:	add	r4, r4, r3
   306c0:	b	3067c <crc32@@Base+0x16ed8>
   306c4:	ldr	r4, [sp, #64]	; 0x40
   306c8:	cmp	r4, #0
   306cc:	blt	3072c <crc32@@Base+0x16f88>
   306d0:	mov	r5, r4
   306d4:	b	3057c <crc32@@Base+0x16dd8>
   306d8:	add	r3, sp, #56	; 0x38
   306dc:	mov	r2, r7
   306e0:	mov	r1, fp
   306e4:	mov	r0, sl
   306e8:	bl	2fd68 <crc32@@Base+0x165c4>
   306ec:	subs	r4, r0, #0
   306f0:	blt	3072c <crc32@@Base+0x16f88>
   306f4:	cmp	r5, #1
   306f8:	ldr	r7, [sp, #60]	; 0x3c
   306fc:	ble	30624 <crc32@@Base+0x16e80>
   30700:	ldr	r1, [sp, #56]	; 0x38
   30704:	add	r8, r5, #1
   30708:	cmp	r1, #0
   3070c:	bne	305cc <crc32@@Base+0x16e28>
   30710:	mov	r1, r4
   30714:	mov	r3, r8
   30718:	mov	r2, r7
   3071c:	mov	r0, sl
   30720:	bl	312f8 <crc32@@Base+0x17b54>
   30724:	subs	r4, r0, #0
   30728:	bge	305d8 <crc32@@Base+0x16e34>
   3072c:	mov	r3, r4
   30730:	ldr	r4, [sp, #16]
   30734:	b	30644 <crc32@@Base+0x16ea0>
   30738:	movw	r2, #52472	; 0xccf8
   3073c:	mov	r1, #0
   30740:	movt	r2, #3
   30744:	mov	r0, sl
   30748:	bl	2f354 <crc32@@Base+0x15bb0>
   3074c:	str	r0, [sp, #20]
   30750:	b	30430 <crc32@@Base+0x16c8c>
   30754:	mov	fp, r9
   30758:	ldr	r4, [sp, #24]
   3075c:	mvn	r9, #12
   30760:	b	30050 <crc32@@Base+0x168ac>
   30764:	ldr	r4, [sp, #16]
   30768:	mvn	r3, #14
   3076c:	b	30644 <crc32@@Base+0x16ea0>
   30770:	cmp	r4, #0
   30774:	moveq	r5, #1
   30778:	beq	3057c <crc32@@Base+0x16dd8>
   3077c:	b	306c8 <crc32@@Base+0x16f24>
   30780:	ldr	r4, [sp, #16]
   30784:	mov	r3, r5
   30788:	b	30644 <crc32@@Base+0x16ea0>
   3078c:	ldr	r4, [sp, #16]
   30790:	mvn	r3, #15
   30794:	b	30644 <crc32@@Base+0x16ea0>
   30798:	push	{r4, r5, r6, lr}
   3079c:	mov	r2, r1
   307a0:	mov	r5, r1
   307a4:	mov	r1, #47	; 0x2f
   307a8:	mov	r6, r0
   307ac:	bl	12698 <memchr@plt>
   307b0:	mov	r2, r5
   307b4:	mov	r1, #58	; 0x3a
   307b8:	mov	r4, r0
   307bc:	mov	r0, r6
   307c0:	bl	12698 <memchr@plt>
   307c4:	cmp	r4, #0
   307c8:	cmpne	r0, #0
   307cc:	bne	307dc <crc32@@Base+0x17038>
   307d0:	cmp	r4, #0
   307d4:	movne	r0, r4
   307d8:	pop	{r4, r5, r6, pc}
   307dc:	cmp	r0, r4
   307e0:	movcs	r0, r4
   307e4:	pop	{r4, r5, r6, pc}
   307e8:	push	{r4, r5, r6, lr}
   307ec:	movw	r5, #61168	; 0xeef0
   307f0:	movt	r5, #4
   307f4:	sub	sp, sp, #8
   307f8:	mov	r6, r0
   307fc:	mov	r4, r1
   30800:	ldr	r3, [r5]
   30804:	str	r3, [sp, #4]
   30808:	mov	r2, sp
   3080c:	mov	r1, r4
   30810:	mov	r0, r6
   30814:	bl	2d7f0 <crc32@@Base+0x1404c>
   30818:	cmp	r0, #3
   3081c:	beq	30860 <crc32@@Base+0x170bc>
   30820:	cmp	r0, #9
   30824:	bne	3084c <crc32@@Base+0x170a8>
   30828:	ldr	r0, [sp]
   3082c:	cmp	r0, #0
   30830:	mvnge	r0, #10
   30834:	ldr	r2, [sp, #4]
   30838:	ldr	r3, [r5]
   3083c:	cmp	r2, r3
   30840:	bne	30868 <crc32@@Base+0x170c4>
   30844:	add	sp, sp, #8
   30848:	pop	{r4, r5, r6, pc}
   3084c:	cmp	r0, #4
   30850:	ldr	r4, [sp]
   30854:	beq	30808 <crc32@@Base+0x17064>
   30858:	mvn	r0, #0
   3085c:	b	30834 <crc32@@Base+0x17090>
   30860:	mov	r0, r4
   30864:	b	30834 <crc32@@Base+0x17090>
   30868:	bl	12494 <__stack_chk_fail@plt>
   3086c:	ldr	r2, [r0, #12]
   30870:	push	{lr}		; (str lr, [sp, #-4]!)
   30874:	ubfx	lr, r2, #8, #8
   30878:	lsr	r3, r2, #24
   3087c:	ubfx	ip, r2, #16, #8
   30880:	orr	r3, r3, r2, lsl #24
   30884:	orr	r3, r3, lr, lsl #16
   30888:	orr	r3, r3, ip, lsl #8
   3088c:	add	r1, r3, r1
   30890:	add	r0, r0, r1
   30894:	pop	{pc}		; (ldr pc, [sp], #4)
   30898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3089c:	sub	sp, sp, #28
   308a0:	mov	r4, r1
   308a4:	mov	r5, r0
   308a8:	str	r2, [sp]
   308ac:	str	r3, [sp, #12]
   308b0:	bl	2d674 <crc32@@Base+0x13ed0>
   308b4:	cmp	r0, #0
   308b8:	bne	30a28 <crc32@@Base+0x17284>
   308bc:	ldr	r3, [r5, #16]
   308c0:	mov	r9, #0
   308c4:	ubfx	ip, r3, #8, #8
   308c8:	ubfx	r2, r3, #16, #8
   308cc:	lsr	r1, r3, #24
   308d0:	orr	r1, r1, r3, lsl #24
   308d4:	orr	r1, r1, ip, lsl #16
   308d8:	orr	r1, r1, r2, lsl #8
   308dc:	add	r1, r1, r4, lsl #4
   308e0:	add	ip, r5, r1
   308e4:	ldr	r1, [r5, r1]
   308e8:	ldr	r4, [ip, #4]
   308ec:	ubfx	r5, r1, #8, #8
   308f0:	lsl	fp, r1, #24
   308f4:	lsr	lr, r4, #24
   308f8:	lsl	r7, r5, #16
   308fc:	orr	r8, r0, lr
   30900:	orr	fp, fp, r7
   30904:	ubfx	lr, r1, #16, #8
   30908:	orr	sl, r8, r0
   3090c:	strd	sl, [sp, #16]
   30910:	uxtb	r8, r4
   30914:	ubfx	fp, r4, #8, #8
   30918:	lsr	r7, r1, #24
   3091c:	ubfx	r1, r4, #16, #8
   30920:	ldrd	r4, [sp, #16]
   30924:	lsl	r3, lr, #8
   30928:	orr	r4, r4, r0
   3092c:	orr	r5, r5, r3
   30930:	orr	r3, r5, r7
   30934:	orr	r2, r4, r0
   30938:	lsr	r5, r8, #8
   3093c:	lsl	r4, r8, #24
   30940:	uxtb	r8, fp
   30944:	orr	sl, r2, r4
   30948:	uxtb	r4, r1
   3094c:	orr	fp, r3, r5
   30950:	lsl	r6, r8, #16
   30954:	lsr	r7, r8, #16
   30958:	lsl	r2, r4, #8
   3095c:	orr	sl, sl, r6
   30960:	orr	r6, sl, r2
   30964:	ldr	r2, [sp]
   30968:	lsr	r3, r4, #24
   3096c:	orr	fp, fp, r7
   30970:	orr	r7, fp, r3
   30974:	str	r0, [sp]
   30978:	strd	r6, [r2]
   3097c:	ldr	r1, [ip, #8]
   30980:	ldr	ip, [ip, #12]
   30984:	ubfx	lr, r1, #8, #8
   30988:	ubfx	r6, r1, #16, #8
   3098c:	lsl	fp, r1, #24
   30990:	ubfx	sl, ip, #8, #8
   30994:	lsl	r5, lr, #16
   30998:	lsr	lr, ip, #24
   3099c:	orr	r8, r0, lr
   309a0:	lsl	r3, r6, #8
   309a4:	orr	r7, fp, r5
   309a8:	orr	r6, r8, r0
   309ac:	orr	r5, r7, r3
   309b0:	uxtb	r8, ip
   309b4:	orr	r4, r6, r0
   309b8:	ubfx	ip, ip, #16, #8
   309bc:	lsr	r1, r1, #24
   309c0:	str	r1, [sp, #4]
   309c4:	mov	r6, r4
   309c8:	mov	r7, r5
   309cc:	lsr	r3, r8, #8
   309d0:	ldrd	r4, [sp]
   309d4:	lsl	r2, r8, #24
   309d8:	uxtb	r8, ip
   309dc:	strd	r8, [sp]
   309e0:	uxtb	sl, sl
   309e4:	ldr	r1, [sp]
   309e8:	orr	r5, r5, r7
   309ec:	orr	r9, r3, r5
   309f0:	lsr	r7, sl, #16
   309f4:	orr	r3, r9, r7
   309f8:	orr	r4, r4, r6
   309fc:	lsr	r1, r1, #24
   30a00:	orr	r8, r2, r4
   30a04:	lsl	r6, sl, #16
   30a08:	mov	r5, r1
   30a0c:	ldr	r1, [sp]
   30a10:	orr	r5, r5, r3
   30a14:	ldr	r3, [sp, #12]
   30a18:	orr	r2, r8, r6
   30a1c:	lsl	r1, r1, #8
   30a20:	orr	r4, r1, r2
   30a24:	strd	r4, [r3]
   30a28:	add	sp, sp, #28
   30a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30a30:	ldr	r2, [r0, #16]
   30a34:	mov	r1, #0
   30a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a3c:	ubfx	lr, r2, #8, #8
   30a40:	lsr	r3, r2, #24
   30a44:	ubfx	ip, r2, #16, #8
   30a48:	orr	r3, r3, r2, lsl #24
   30a4c:	sub	sp, sp, #12
   30a50:	orr	r3, r3, lr, lsl #16
   30a54:	orr	r3, r3, ip, lsl #8
   30a58:	add	r0, r0, r3
   30a5c:	b	30a64 <crc32@@Base+0x172c0>
   30a60:	add	r1, r1, #1
   30a64:	ldr	ip, [r0, #8]
   30a68:	mov	r8, #0
   30a6c:	ldr	r6, [r0, #12]
   30a70:	add	r0, r0, #16
   30a74:	ubfx	lr, ip, #8, #8
   30a78:	ubfx	r4, ip, #16, #8
   30a7c:	lsl	r3, ip, #24
   30a80:	str	r3, [sp, #4]
   30a84:	mov	r3, #0
   30a88:	str	r3, [sp]
   30a8c:	ldrd	r2, [sp]
   30a90:	lsl	fp, lr, #16
   30a94:	lsr	lr, r6, #24
   30a98:	lsl	r9, r4, #8
   30a9c:	mov	r5, r3
   30aa0:	mov	r4, r2
   30aa4:	orr	r4, r4, lr
   30aa8:	ubfx	lr, r6, #8, #8
   30aac:	orr	r2, r4, r2
   30ab0:	orr	r3, r5, fp
   30ab4:	orr	r2, r2, r8
   30ab8:	lsr	fp, ip, #24
   30abc:	uxtb	r8, r6
   30ac0:	ubfx	ip, r6, #16, #8
   30ac4:	ldrd	r6, [sp]
   30ac8:	orr	r3, r3, r9
   30acc:	lsr	r5, r8, #8
   30ad0:	orr	r7, r3, fp
   30ad4:	lsl	r4, r8, #24
   30ad8:	orr	r3, r7, r5
   30adc:	mov	sl, r6
   30ae0:	orr	r6, r2, sl
   30ae4:	uxtb	sl, lr
   30ae8:	orr	r2, r6, r4
   30aec:	uxtb	r6, ip
   30af0:	lsr	r9, sl, #16
   30af4:	lsl	r8, sl, #16
   30af8:	orr	r3, r3, r9
   30afc:	orr	r2, r2, r8
   30b00:	mov	r9, r3
   30b04:	lsr	r3, r6, #24
   30b08:	mov	r5, r3
   30b0c:	lsl	r3, r6, #8
   30b10:	orr	r4, r3, r2
   30b14:	orr	r5, r5, r9
   30b18:	orrs	r3, r4, r5
   30b1c:	bne	30a60 <crc32@@Base+0x172bc>
   30b20:	mov	r0, r1
   30b24:	add	sp, sp, #12
   30b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30b30:	movw	r6, #61168	; 0xeef0
   30b34:	movt	r6, #4
   30b38:	mov	r8, r2
   30b3c:	sub	sp, sp, #8
   30b40:	mov	r4, r1
   30b44:	ldr	r2, [r6]
   30b48:	mov	r7, r3
   30b4c:	mov	r5, r0
   30b50:	str	r2, [sp, #4]
   30b54:	bl	2d674 <crc32@@Base+0x13ed0>
   30b58:	cmp	r0, #0
   30b5c:	bne	30bf4 <crc32@@Base+0x17450>
   30b60:	cmp	r4, #0
   30b64:	str	r0, [sp]
   30b68:	blt	30bf0 <crc32@@Base+0x1744c>
   30b6c:	add	sl, r7, #1
   30b70:	mov	r1, r4
   30b74:	mov	r2, sp
   30b78:	mov	r0, r5
   30b7c:	bl	2d9d0 <crc32@@Base+0x1422c>
   30b80:	ldr	r3, [sp]
   30b84:	cmp	r3, #0
   30b88:	cmpge	r0, #0
   30b8c:	mov	r4, r0
   30b90:	blt	30c0c <crc32@@Base+0x17468>
   30b94:	cmp	r3, #1
   30b98:	bne	30b70 <crc32@@Base+0x173cc>
   30b9c:	mov	r2, sl
   30ba0:	add	r1, r4, #4
   30ba4:	mov	r0, r5
   30ba8:	bl	2d73c <crc32@@Base+0x13f98>
   30bac:	subs	r9, r0, #0
   30bb0:	beq	30b70 <crc32@@Base+0x173cc>
   30bb4:	mov	r2, r7
   30bb8:	mov	r1, r8
   30bbc:	bl	126c8 <memcmp@plt>
   30bc0:	cmp	r0, #0
   30bc4:	bne	30b70 <crc32@@Base+0x173cc>
   30bc8:	ldrb	r9, [r9, r7]
   30bcc:	cmp	r9, #0
   30bd0:	beq	30bf0 <crc32@@Base+0x1744c>
   30bd4:	mov	r2, r7
   30bd8:	mov	r1, #64	; 0x40
   30bdc:	mov	r0, r8
   30be0:	bl	12698 <memchr@plt>
   30be4:	cmp	r9, #64	; 0x40
   30be8:	cmpeq	r0, #0
   30bec:	bne	30b70 <crc32@@Base+0x173cc>
   30bf0:	mov	r0, r4
   30bf4:	ldr	r2, [sp, #4]
   30bf8:	ldr	r3, [r6]
   30bfc:	cmp	r2, r3
   30c00:	bne	30c18 <crc32@@Base+0x17474>
   30c04:	add	sp, sp, #8
   30c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30c0c:	cmp	r3, #0
   30c10:	mvnlt	r4, #0
   30c14:	b	30bf0 <crc32@@Base+0x1744c>
   30c18:	bl	12494 <__stack_chk_fail@plt>
   30c1c:	push	{r4, r5, r6, lr}
   30c20:	mov	r5, r0
   30c24:	mov	r0, r2
   30c28:	mov	r4, r2
   30c2c:	mov	r6, r1
   30c30:	bl	125c0 <strlen@plt>
   30c34:	mov	r2, r4
   30c38:	mov	r1, r6
   30c3c:	mov	r3, r0
   30c40:	mov	r0, r5
   30c44:	pop	{r4, r5, r6, lr}
   30c48:	b	30b2c <crc32@@Base+0x17388>
   30c4c:	push	{r4, r5, r6, r7, r8, lr}
   30c50:	mov	r4, r0
   30c54:	mov	r7, r1
   30c58:	mov	r5, r2
   30c5c:	ldr	r6, [r0, #8]
   30c60:	bl	2d674 <crc32@@Base+0x13ed0>
   30c64:	cmp	r0, #0
   30c68:	beq	30c84 <crc32@@Base+0x174e0>
   30c6c:	cmp	r5, #0
   30c70:	strne	r0, [r5]
   30c74:	movne	r4, #0
   30c78:	moveq	r4, r5
   30c7c:	mov	r0, r4
   30c80:	pop	{r4, r5, r6, r7, r8, pc}
   30c84:	mov	r1, r7
   30c88:	mov	r0, r4
   30c8c:	bl	2d950 <crc32@@Base+0x141ac>
   30c90:	cmp	r0, #0
   30c94:	blt	30c6c <crc32@@Base+0x174c8>
   30c98:	lsr	r3, r6, #24
   30c9c:	ubfx	r2, r6, #8, #8
   30ca0:	orr	r3, r3, r6, lsl #24
   30ca4:	ubfx	r6, r6, #16, #8
   30ca8:	orr	r3, r3, r2, lsl #16
   30cac:	cmp	r5, #0
   30cb0:	orr	r6, r3, r6, lsl #8
   30cb4:	add	r6, r6, r7
   30cb8:	add	r4, r4, r6
   30cbc:	add	r4, r4, #4
   30cc0:	beq	30c7c <crc32@@Base+0x174d8>
   30cc4:	mov	r0, r4
   30cc8:	bl	125c0 <strlen@plt>
   30ccc:	str	r0, [r5]
   30cd0:	mov	r0, r4
   30cd4:	pop	{r4, r5, r6, r7, r8, pc}
   30cd8:	push	{r4, lr}
   30cdc:	mov	r4, r0
   30ce0:	bl	2d950 <crc32@@Base+0x141ac>
   30ce4:	subs	r1, r0, #0
   30ce8:	poplt	{r4, pc}
   30cec:	mov	r0, r4
   30cf0:	pop	{r4, lr}
   30cf4:	b	307e8 <crc32@@Base+0x17044>
   30cf8:	push	{r4, lr}
   30cfc:	mov	r4, r0
   30d00:	bl	2d990 <crc32@@Base+0x141ec>
   30d04:	subs	r1, r0, #0
   30d08:	poplt	{r4, pc}
   30d0c:	mov	r0, r4
   30d10:	pop	{r4, lr}
   30d14:	b	307e8 <crc32@@Base+0x17044>
   30d18:	push	{r4, r5, r6, lr}
   30d1c:	mov	r5, r2
   30d20:	mov	r4, r0
   30d24:	mov	r6, r1
   30d28:	bl	2d990 <crc32@@Base+0x141ec>
   30d2c:	cmp	r0, #0
   30d30:	blt	30d84 <crc32@@Base+0x175e0>
   30d34:	ldr	r3, [r4, #8]
   30d38:	cmp	r5, #0
   30d3c:	ubfx	r1, r3, #8, #8
   30d40:	ubfx	r2, r3, #16, #8
   30d44:	lsr	r0, r3, #24
   30d48:	orr	r0, r0, r3, lsl #24
   30d4c:	orr	r0, r0, r1, lsl #16
   30d50:	orr	r0, r0, r2, lsl #8
   30d54:	add	r0, r0, r6
   30d58:	add	r0, r4, r0
   30d5c:	popeq	{r4, r5, r6, pc}
   30d60:	ldr	r2, [r0, #4]
   30d64:	ubfx	ip, r2, #8, #8
   30d68:	ubfx	r1, r2, #16, #8
   30d6c:	lsr	r3, r2, #24
   30d70:	orr	r3, r3, r2, lsl #24
   30d74:	orr	r3, r3, ip, lsl #16
   30d78:	orr	r3, r3, r1, lsl #8
   30d7c:	str	r3, [r5]
   30d80:	pop	{r4, r5, r6, pc}
   30d84:	cmp	r5, #0
   30d88:	strne	r0, [r5]
   30d8c:	mov	r0, #0
   30d90:	pop	{r4, r5, r6, pc}
   30d94:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d98:	mov	sl, r2
   30d9c:	mov	r7, r3
   30da0:	mov	r5, r0
   30da4:	ldr	r8, [sp, #40]	; 0x28
   30da8:	bl	30cd8 <crc32@@Base+0x17534>
   30dac:	subs	r6, r0, #0
   30db0:	blt	30e60 <crc32@@Base+0x176bc>
   30db4:	add	r9, r7, #1
   30db8:	b	30dd0 <crc32@@Base+0x1762c>
   30dbc:	mov	r1, r6
   30dc0:	mov	r0, r5
   30dc4:	bl	30cf8 <crc32@@Base+0x17554>
   30dc8:	subs	r6, r0, #0
   30dcc:	blt	30e60 <crc32@@Base+0x176bc>
   30dd0:	mov	r1, r6
   30dd4:	mov	r2, r8
   30dd8:	mov	r0, r5
   30ddc:	bl	30d18 <crc32@@Base+0x17574>
   30de0:	mov	r1, r9
   30de4:	subs	fp, r0, #0
   30de8:	beq	30e5c <crc32@@Base+0x176b8>
   30dec:	ldr	r3, [fp, #8]
   30df0:	ldr	r2, [r5, #12]
   30df4:	ubfx	lr, r3, #8, #8
   30df8:	ubfx	r0, r3, #16, #8
   30dfc:	lsr	r4, r3, #24
   30e00:	ubfx	ip, r2, #8, #8
   30e04:	orr	r4, r4, r3, lsl #24
   30e08:	lsr	r3, r2, #24
   30e0c:	orr	r3, r3, r2, lsl #24
   30e10:	ubfx	r2, r2, #16, #8
   30e14:	orr	r4, r4, lr, lsl #16
   30e18:	orr	r3, r3, ip, lsl #16
   30e1c:	orr	r4, r4, r0, lsl #8
   30e20:	orr	r3, r3, r2, lsl #8
   30e24:	add	r4, r4, r3
   30e28:	add	r4, r5, r4
   30e2c:	mov	r0, r4
   30e30:	bl	120ec <strnlen@plt>
   30e34:	cmp	r0, r7
   30e38:	bne	30dbc <crc32@@Base+0x17618>
   30e3c:	mov	r0, r4
   30e40:	mov	r2, r7
   30e44:	mov	r1, sl
   30e48:	bl	126c8 <memcmp@plt>
   30e4c:	cmp	r0, #0
   30e50:	bne	30dbc <crc32@@Base+0x17618>
   30e54:	mov	r0, fp
   30e58:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e5c:	mvn	r6, #12
   30e60:	cmp	r8, #0
   30e64:	strne	r6, [r8]
   30e68:	movne	fp, #0
   30e6c:	moveq	fp, r8
   30e70:	mov	r0, fp
   30e74:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e78:	push	{r4, r5, r6, r7, lr}
   30e7c:	mov	r5, r0
   30e80:	sub	sp, sp, #12
   30e84:	mov	r0, r2
   30e88:	mov	r7, r3
   30e8c:	mov	r4, r2
   30e90:	mov	r6, r1
   30e94:	bl	125c0 <strlen@plt>
   30e98:	str	r7, [sp]
   30e9c:	mov	r2, r4
   30ea0:	mov	r1, r6
   30ea4:	mov	r3, r0
   30ea8:	mov	r0, r5
   30eac:	bl	30d94 <crc32@@Base+0x175f0>
   30eb0:	add	sp, sp, #12
   30eb4:	pop	{r4, r5, r6, r7, pc}
   30eb8:	push	{lr}		; (str lr, [sp, #-4]!)
   30ebc:	sub	sp, sp, #12
   30ec0:	ldr	ip, [sp, #16]
   30ec4:	str	ip, [sp]
   30ec8:	bl	30d94 <crc32@@Base+0x175f0>
   30ecc:	cmp	r0, #0
   30ed0:	addne	r0, r0, #12
   30ed4:	add	sp, sp, #12
   30ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   30edc:	push	{r4, r5, r6, r7, r8, lr}
   30ee0:	mov	r4, r2
   30ee4:	mov	r2, r3
   30ee8:	mov	r5, r0
   30eec:	bl	30d18 <crc32@@Base+0x17574>
   30ef0:	cmp	r0, #0
   30ef4:	popeq	{r4, r5, r6, r7, r8, pc}
   30ef8:	cmp	r4, #0
   30efc:	beq	30f44 <crc32@@Base+0x177a0>
   30f00:	ldr	ip, [r0, #8]
   30f04:	ldr	r1, [r5, #12]
   30f08:	ubfx	r7, ip, #8, #8
   30f0c:	ubfx	lr, ip, #16, #8
   30f10:	ubfx	r6, r1, #8, #8
   30f14:	lsr	r2, ip, #24
   30f18:	lsr	r3, r1, #24
   30f1c:	orr	r2, r2, ip, lsl #24
   30f20:	orr	r3, r3, r1, lsl #24
   30f24:	ubfx	r1, r1, #16, #8
   30f28:	orr	r2, r2, r7, lsl #16
   30f2c:	orr	r3, r3, r6, lsl #16
   30f30:	orr	r2, r2, lr, lsl #8
   30f34:	orr	r3, r3, r1, lsl #8
   30f38:	add	r3, r3, r2
   30f3c:	add	r3, r5, r3
   30f40:	str	r3, [r4]
   30f44:	add	r0, r0, #12
   30f48:	pop	{r4, r5, r6, r7, r8, pc}
   30f4c:	push	{r4, r5, r6, r7, lr}
   30f50:	mov	r5, r0
   30f54:	sub	sp, sp, #12
   30f58:	mov	r0, r2
   30f5c:	mov	r7, r3
   30f60:	mov	r4, r2
   30f64:	mov	r6, r1
   30f68:	bl	125c0 <strlen@plt>
   30f6c:	str	r7, [sp]
   30f70:	mov	r2, r4
   30f74:	mov	r1, r6
   30f78:	mov	r3, r0
   30f7c:	mov	r0, r5
   30f80:	bl	30d94 <crc32@@Base+0x175f0>
   30f84:	cmp	r0, #0
   30f88:	addne	r0, r0, #12
   30f8c:	add	sp, sp, #12
   30f90:	pop	{r4, r5, r6, r7, pc}
   30f94:	push	{r4, r5, r6, lr}
   30f98:	movw	r4, #61168	; 0xeef0
   30f9c:	movt	r4, #4
   30fa0:	sub	sp, sp, #8
   30fa4:	movw	r2, #52368	; 0xcc90
   30fa8:	movt	r2, #3
   30fac:	ldr	ip, [r4]
   30fb0:	mov	r3, sp
   30fb4:	mov	r5, r0
   30fb8:	mov	r6, r1
   30fbc:	str	ip, [sp, #4]
   30fc0:	bl	30f4c <crc32@@Base+0x177a8>
   30fc4:	cmp	r0, #0
   30fc8:	beq	30fd8 <crc32@@Base+0x17834>
   30fcc:	ldr	r3, [sp]
   30fd0:	cmp	r3, #4
   30fd4:	beq	31020 <crc32@@Base+0x1787c>
   30fd8:	mov	r3, sp
   30fdc:	mov	r1, r6
   30fe0:	mov	r0, r5
   30fe4:	movw	r2, #52376	; 0xcc98
   30fe8:	movt	r2, #3
   30fec:	bl	30f4c <crc32@@Base+0x177a8>
   30ff0:	cmp	r0, #0
   30ff4:	beq	31008 <crc32@@Base+0x17864>
   30ff8:	ldr	r3, [sp]
   30ffc:	cmp	r3, #4
   31000:	movne	r0, #0
   31004:	beq	31020 <crc32@@Base+0x1787c>
   31008:	ldr	r2, [sp, #4]
   3100c:	ldr	r3, [r4]
   31010:	cmp	r2, r3
   31014:	bne	31040 <crc32@@Base+0x1789c>
   31018:	add	sp, sp, #8
   3101c:	pop	{r4, r5, r6, pc}
   31020:	ldr	r3, [r0]
   31024:	ubfx	r1, r3, #8, #8
   31028:	ubfx	r2, r3, #16, #8
   3102c:	lsr	r0, r3, #24
   31030:	orr	r0, r0, r3, lsl #24
   31034:	orr	r0, r0, r1, lsl #16
   31038:	orr	r0, r0, r2, lsl #8
   3103c:	b	31008 <crc32@@Base+0x17864>
   31040:	bl	12494 <__stack_chk_fail@plt>
   31044:	push	{r4, r5, r6, lr}
   31048:	mov	r2, #0
   3104c:	mvn	r1, #0
   31050:	mov	r6, r0
   31054:	bl	2d9d0 <crc32@@Base+0x1422c>
   31058:	cmn	r0, #1
   3105c:	beq	310c8 <crc32@@Base+0x17924>
   31060:	cmp	r0, #0
   31064:	mov	r4, r0
   31068:	movge	r5, #0
   3106c:	bge	3107c <crc32@@Base+0x178d8>
   31070:	b	310bc <crc32@@Base+0x17918>
   31074:	cmp	r4, #0
   31078:	blt	310bc <crc32@@Base+0x17918>
   3107c:	mov	r1, r4
   31080:	mov	r0, r6
   31084:	bl	30f94 <crc32@@Base+0x177f0>
   31088:	mov	r1, r4
   3108c:	mov	r2, #0
   31090:	cmn	r0, #1
   31094:	cmpne	r0, r5
   31098:	mov	r3, r0
   3109c:	mov	r0, r6
   310a0:	movhi	r5, r3
   310a4:	bl	2d9d0 <crc32@@Base+0x1422c>
   310a8:	cmn	r0, #1
   310ac:	mov	r4, r0
   310b0:	bne	31074 <crc32@@Base+0x178d0>
   310b4:	mov	r0, r5
   310b8:	pop	{r4, r5, r6, pc}
   310bc:	mvn	r5, #0
   310c0:	mov	r0, r5
   310c4:	pop	{r4, r5, r6, pc}
   310c8:	mov	r5, #0
   310cc:	b	310b4 <crc32@@Base+0x17910>
   310d0:	push	{r4, r5, r6, r7, r8, lr}
   310d4:	mov	r6, r0
   310d8:	mov	r7, r1
   310dc:	mvn	r4, #0
   310e0:	mov	r5, #0
   310e4:	b	310f4 <crc32@@Base+0x17950>
   310e8:	bl	30f94 <crc32@@Base+0x177f0>
   310ec:	cmp	r5, r0
   310f0:	movcc	r5, r0
   310f4:	mov	r1, r4
   310f8:	mov	r2, #0
   310fc:	mov	r0, r6
   31100:	bl	2d9d0 <crc32@@Base+0x1422c>
   31104:	subs	r4, r0, #0
   31108:	mov	r0, r6
   3110c:	mov	r1, r4
   31110:	bge	310e8 <crc32@@Base+0x17944>
   31114:	cmn	r4, #1
   31118:	beq	31124 <crc32@@Base+0x17980>
   3111c:	mov	r0, r4
   31120:	pop	{r4, r5, r6, r7, r8, pc}
   31124:	cmn	r5, #2
   31128:	beq	3114c <crc32@@Base+0x179a8>
   3112c:	cmp	r7, #0
   31130:	moveq	r4, r7
   31134:	beq	3111c <crc32@@Base+0x17978>
   31138:	mov	r4, #0
   3113c:	add	r5, r5, #1
   31140:	mov	r0, r4
   31144:	str	r5, [r7]
   31148:	pop	{r4, r5, r6, r7, r8, pc}
   3114c:	mvn	r4, #16
   31150:	b	3111c <crc32@@Base+0x17978>
   31154:	push	{r4, r5, r6, lr}
   31158:	mov	r5, r1
   3115c:	sub	sp, sp, #8
   31160:	movw	r1, #52500	; 0xcd14
   31164:	movt	r1, #3
   31168:	mov	r6, r2
   3116c:	mov	r4, r0
   31170:	bl	312a8 <crc32@@Base+0x17b04>
   31174:	subs	r1, r0, #0
   31178:	blt	311a8 <crc32@@Base+0x17a04>
   3117c:	mov	ip, #0
   31180:	mov	r3, r6
   31184:	mov	r2, r5
   31188:	mov	r0, r4
   3118c:	str	ip, [sp]
   31190:	bl	30d94 <crc32@@Base+0x175f0>
   31194:	cmp	r0, #0
   31198:	beq	311a8 <crc32@@Base+0x17a04>
   3119c:	add	r0, r0, #12
   311a0:	add	sp, sp, #8
   311a4:	pop	{r4, r5, r6, pc}
   311a8:	mov	r0, #0
   311ac:	add	sp, sp, #8
   311b0:	pop	{r4, r5, r6, pc}
   311b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   311b8:	mov	r4, r1
   311bc:	mov	r5, r2
   311c0:	mov	r9, r0
   311c4:	bl	2d674 <crc32@@Base+0x13ed0>
   311c8:	subs	r7, r0, #0
   311cc:	bne	31298 <crc32@@Base+0x17af4>
   311d0:	ldrb	r3, [r4]
   311d4:	add	r8, r4, r5
   311d8:	cmp	r3, #47	; 0x2f
   311dc:	beq	31224 <crc32@@Base+0x17a80>
   311e0:	mov	r1, r5
   311e4:	mov	r0, r4
   311e8:	bl	30798 <crc32@@Base+0x16ff4>
   311ec:	mov	r1, r4
   311f0:	cmp	r0, #0
   311f4:	movne	r5, r0
   311f8:	moveq	r5, r8
   311fc:	mov	r0, r9
   31200:	sub	r2, r5, r4
   31204:	bl	31154 <crc32@@Base+0x179b0>
   31208:	subs	r1, r0, #0
   3120c:	beq	312a0 <crc32@@Base+0x17afc>
   31210:	mov	r0, r9
   31214:	mov	r4, r5
   31218:	bl	312a8 <crc32@@Base+0x17b04>
   3121c:	ldrb	r3, [r5]
   31220:	mov	r7, r0
   31224:	cmp	r3, #0
   31228:	cmpne	r4, r8
   3122c:	bcc	31238 <crc32@@Base+0x17a94>
   31230:	b	31298 <crc32@@Base+0x17af4>
   31234:	ldrb	r3, [r4, #1]!
   31238:	cmp	r3, #47	; 0x2f
   3123c:	beq	31234 <crc32@@Base+0x17a90>
   31240:	cmp	r3, #58	; 0x3a
   31244:	cmpne	r3, #0
   31248:	beq	31298 <crc32@@Base+0x17af4>
   3124c:	sub	r6, r8, r4
   31250:	mov	r0, r4
   31254:	mov	r1, r6
   31258:	bl	30798 <crc32@@Base+0x16ff4>
   3125c:	mov	r1, r7
   31260:	mov	r2, r4
   31264:	subs	r5, r0, #0
   31268:	mov	r0, r9
   3126c:	subne	r6, r5, r4
   31270:	moveq	r5, r8
   31274:	mov	r3, r6
   31278:	bl	30b2c <crc32@@Base+0x17388>
   3127c:	subs	r7, r0, #0
   31280:	blt	31298 <crc32@@Base+0x17af4>
   31284:	ldrb	r3, [r5]
   31288:	mov	r4, r5
   3128c:	cmp	r3, #0
   31290:	cmpne	r4, r8
   31294:	bcc	31238 <crc32@@Base+0x17a94>
   31298:	mov	r0, r7
   3129c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   312a0:	mvn	r7, #4
   312a4:	b	31298 <crc32@@Base+0x17af4>
   312a8:	push	{r4, r5, r6, lr}
   312ac:	mov	r5, r0
   312b0:	mov	r0, r1
   312b4:	mov	r4, r1
   312b8:	bl	125c0 <strlen@plt>
   312bc:	mov	r1, r4
   312c0:	mov	r2, r0
   312c4:	mov	r0, r5
   312c8:	pop	{r4, r5, r6, lr}
   312cc:	b	311b4 <crc32@@Base+0x17a10>
   312d0:	push	{r4, r5, r6, lr}
   312d4:	mov	r5, r0
   312d8:	mov	r0, r1
   312dc:	mov	r4, r1
   312e0:	bl	125c0 <strlen@plt>
   312e4:	mov	r1, r4
   312e8:	mov	r2, r0
   312ec:	mov	r0, r5
   312f0:	pop	{r4, r5, r6, lr}
   312f4:	b	31154 <crc32@@Base+0x179b0>
   312f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   312fc:	movw	sl, #61168	; 0xeef0
   31300:	movt	sl, #4
   31304:	mov	r6, r2
   31308:	sub	sp, sp, #28
   3130c:	mov	r8, r1
   31310:	ldr	r2, [sl]
   31314:	mov	r4, r3
   31318:	str	r3, [sp]
   3131c:	mov	r9, r0
   31320:	str	r2, [sp, #20]
   31324:	bl	2d674 <crc32@@Base+0x13ed0>
   31328:	subs	fp, r0, #0
   3132c:	bne	31434 <crc32@@Base+0x17c90>
   31330:	cmp	r4, #1
   31334:	ble	3147c <crc32@@Base+0x17cd8>
   31338:	cmp	r8, #0
   3133c:	str	fp, [sp, #12]
   31340:	movge	r7, fp
   31344:	movge	r0, fp
   31348:	movge	r4, fp
   3134c:	movge	r5, fp
   31350:	blt	31470 <crc32@@Base+0x17ccc>
   31354:	cmp	r0, r5
   31358:	ble	313c4 <crc32@@Base+0x17c20>
   3135c:	cmp	r7, r8
   31360:	beq	31418 <crc32@@Base+0x17c74>
   31364:	mov	r1, r7
   31368:	add	r2, sp, #12
   3136c:	mov	r0, r9
   31370:	bl	2d9d0 <crc32@@Base+0x1422c>
   31374:	cmp	r0, #0
   31378:	cmpge	r8, r0
   3137c:	mov	r7, r0
   31380:	blt	31450 <crc32@@Base+0x17cac>
   31384:	ldr	r0, [sp, #12]
   31388:	cmp	r5, r0
   3138c:	ble	31354 <crc32@@Base+0x17bb0>
   31390:	sub	r3, r4, #1
   31394:	add	r2, r6, r3
   31398:	b	313a0 <crc32@@Base+0x17bfc>
   3139c:	sub	r3, r3, #1
   313a0:	ldrb	r1, [r2, #-1]!
   313a4:	mov	r4, r3
   313a8:	cmp	r1, #47	; 0x2f
   313ac:	bne	3139c <crc32@@Base+0x17bf8>
   313b0:	sub	r5, r5, #1
   313b4:	cmp	r5, r0
   313b8:	bne	31390 <crc32@@Base+0x17bec>
   313bc:	cmp	r0, r5
   313c0:	bgt	3135c <crc32@@Base+0x17bb8>
   313c4:	mov	r1, r7
   313c8:	add	r2, sp, #16
   313cc:	mov	r0, r9
   313d0:	bl	30c4c <crc32@@Base+0x174a8>
   313d4:	subs	r1, r0, #0
   313d8:	beq	31468 <crc32@@Base+0x17cc4>
   313dc:	ldr	r2, [sp, #16]
   313e0:	ldr	r0, [sp]
   313e4:	add	r3, r2, r4
   313e8:	cmp	r3, r0
   313ec:	bge	3135c <crc32@@Base+0x17bb8>
   313f0:	add	r0, r6, r4
   313f4:	str	r3, [sp, #4]
   313f8:	add	r4, r3, #1
   313fc:	bl	1259c <memcpy@plt>
   31400:	ldr	r3, [sp, #4]
   31404:	cmp	r7, r8
   31408:	mov	r2, #47	; 0x2f
   3140c:	add	r5, r5, #1
   31410:	strb	r2, [r6, r3]
   31414:	bne	31364 <crc32@@Base+0x17bc0>
   31418:	ldr	r3, [sp, #12]
   3141c:	cmp	r3, r5
   31420:	bge	3147c <crc32@@Base+0x17cd8>
   31424:	cmp	r4, #1
   31428:	mov	r3, #0
   3142c:	subgt	r4, r4, #1
   31430:	strb	r3, [r6, r4]
   31434:	ldr	r2, [sp, #20]
   31438:	mov	r0, fp
   3143c:	ldr	r3, [sl]
   31440:	cmp	r2, r3
   31444:	bne	31478 <crc32@@Base+0x17cd4>
   31448:	add	sp, sp, #28
   3144c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31450:	cmn	r0, #1
   31454:	bge	31470 <crc32@@Base+0x17ccc>
   31458:	cmn	r0, #4
   3145c:	movne	fp, r0
   31460:	mvneq	fp, #10
   31464:	b	31434 <crc32@@Base+0x17c90>
   31468:	ldr	fp, [sp, #16]
   3146c:	b	31434 <crc32@@Base+0x17c90>
   31470:	mvn	fp, #3
   31474:	b	31434 <crc32@@Base+0x17c90>
   31478:	bl	12494 <__stack_chk_fail@plt>
   3147c:	mvn	fp, #2
   31480:	b	31434 <crc32@@Base+0x17c90>
   31484:	push	{r4, r5, r6, r7, r8, r9, lr}
   31488:	movw	r7, #61168	; 0xeef0
   3148c:	movt	r7, #4
   31490:	mov	r6, r2
   31494:	sub	sp, sp, #12
   31498:	mov	r4, r1
   3149c:	ldr	r2, [r7]
   314a0:	mov	r9, r3
   314a4:	mov	r8, r0
   314a8:	str	r2, [sp, #4]
   314ac:	bl	2d674 <crc32@@Base+0x13ed0>
   314b0:	cmp	r0, #0
   314b4:	bne	314d8 <crc32@@Base+0x17d34>
   314b8:	cmp	r6, #0
   314bc:	blt	3154c <crc32@@Base+0x17da8>
   314c0:	cmp	r4, #0
   314c4:	str	r0, [sp]
   314c8:	movge	r3, r0
   314cc:	mvnge	r5, #12
   314d0:	bge	31510 <crc32@@Base+0x17d6c>
   314d4:	mvn	r0, #3
   314d8:	ldr	r2, [sp, #4]
   314dc:	ldr	r3, [r7]
   314e0:	cmp	r2, r3
   314e4:	bne	31554 <crc32@@Base+0x17db0>
   314e8:	add	sp, sp, #12
   314ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   314f0:	mov	r1, r0
   314f4:	mov	r2, sp
   314f8:	mov	r0, r8
   314fc:	bl	2d9d0 <crc32@@Base+0x1422c>
   31500:	cmp	r0, #0
   31504:	cmpge	r4, r0
   31508:	blt	31538 <crc32@@Base+0x17d94>
   3150c:	ldr	r3, [sp]
   31510:	cmp	r6, r3
   31514:	moveq	r5, r0
   31518:	cmp	r4, r0
   3151c:	bne	314f0 <crc32@@Base+0x17d4c>
   31520:	cmp	r9, #0
   31524:	strne	r3, [r9]
   31528:	cmp	r6, r3
   3152c:	movle	r0, r5
   31530:	mvngt	r0, #0
   31534:	b	314d8 <crc32@@Base+0x17d34>
   31538:	cmn	r0, #1
   3153c:	bge	314d4 <crc32@@Base+0x17d30>
   31540:	cmn	r0, #4
   31544:	mvneq	r0, #10
   31548:	b	314d8 <crc32@@Base+0x17d34>
   3154c:	mvn	r0, #0
   31550:	b	314d8 <crc32@@Base+0x17d34>
   31554:	bl	12494 <__stack_chk_fail@plt>
   31558:	push	{r4, lr}
   3155c:	movw	r4, #61168	; 0xeef0
   31560:	movt	r4, #4
   31564:	sub	sp, sp, #8
   31568:	mov	r2, #0
   3156c:	ldr	ip, [r4]
   31570:	mov	r3, sp
   31574:	str	ip, [sp, #4]
   31578:	bl	31484 <crc32@@Base+0x17ce0>
   3157c:	cmp	r0, #0
   31580:	ldreq	r0, [sp]
   31584:	beq	3158c <crc32@@Base+0x17de8>
   31588:	mvnge	r0, #12
   3158c:	ldr	r2, [sp, #4]
   31590:	ldr	r3, [r4]
   31594:	cmp	r2, r3
   31598:	bne	315a4 <crc32@@Base+0x17e00>
   3159c:	add	sp, sp, #8
   315a0:	pop	{r4, pc}
   315a4:	bl	12494 <__stack_chk_fail@plt>
   315a8:	push	{r4, r5, r6, lr}
   315ac:	movw	r4, #61168	; 0xeef0
   315b0:	movt	r4, #4
   315b4:	sub	sp, sp, #8
   315b8:	mov	r2, #0
   315bc:	mov	r5, r0
   315c0:	ldr	ip, [r4]
   315c4:	mov	r3, sp
   315c8:	mov	r6, r1
   315cc:	str	ip, [sp, #4]
   315d0:	bl	31484 <crc32@@Base+0x17ce0>
   315d4:	subs	r2, r0, #0
   315d8:	beq	315fc <crc32@@Base+0x17e58>
   315dc:	mvnge	r2, #12
   315e0:	ldr	r1, [sp, #4]
   315e4:	mov	r0, r2
   315e8:	ldr	r3, [r4]
   315ec:	cmp	r1, r3
   315f0:	bne	31624 <crc32@@Base+0x17e80>
   315f4:	add	sp, sp, #8
   315f8:	pop	{r4, r5, r6, pc}
   315fc:	ldr	r2, [sp]
   31600:	cmp	r2, #0
   31604:	blt	315e0 <crc32@@Base+0x17e3c>
   31608:	mov	r3, r0
   3160c:	sub	r2, r2, #1
   31610:	mov	r1, r6
   31614:	mov	r0, r5
   31618:	bl	31484 <crc32@@Base+0x17ce0>
   3161c:	mov	r2, r0
   31620:	b	315e0 <crc32@@Base+0x17e3c>
   31624:	bl	12494 <__stack_chk_fail@plt>
   31628:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3162c:	movw	r6, #61168	; 0xeef0
   31630:	movt	r6, #4
   31634:	mov	r8, r2
   31638:	sub	sp, sp, #8
   3163c:	mov	sl, r1
   31640:	ldr	r2, [r6]
   31644:	mov	r9, r3
   31648:	mov	r5, r0
   3164c:	ldr	r7, [sp, #40]	; 0x28
   31650:	str	r2, [sp, #4]
   31654:	bl	2d674 <crc32@@Base+0x13ed0>
   31658:	subs	r4, r0, #0
   3165c:	beq	3167c <crc32@@Base+0x17ed8>
   31660:	ldr	r2, [sp, #4]
   31664:	mov	r0, r4
   31668:	ldr	r3, [r6]
   3166c:	cmp	r2, r3
   31670:	bne	316f0 <crc32@@Base+0x17f4c>
   31674:	add	sp, sp, #8
   31678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3167c:	mov	r2, r4
   31680:	mov	r1, sl
   31684:	mov	r0, r5
   31688:	bl	2d9d0 <crc32@@Base+0x1422c>
   3168c:	subs	r4, r0, #0
   31690:	bge	316b0 <crc32@@Base+0x17f0c>
   31694:	b	31660 <crc32@@Base+0x17ebc>
   31698:	mov	r1, r4
   3169c:	mov	r2, #0
   316a0:	mov	r0, r5
   316a4:	bl	2d9d0 <crc32@@Base+0x1422c>
   316a8:	subs	r4, r0, #0
   316ac:	blt	31660 <crc32@@Base+0x17ebc>
   316b0:	mov	r3, sp
   316b4:	mov	r2, r8
   316b8:	mov	r1, r4
   316bc:	mov	r0, r5
   316c0:	bl	30f4c <crc32@@Base+0x177a8>
   316c4:	cmp	r0, #0
   316c8:	beq	31698 <crc32@@Base+0x17ef4>
   316cc:	ldr	r3, [sp]
   316d0:	cmp	r3, r7
   316d4:	bne	31698 <crc32@@Base+0x17ef4>
   316d8:	mov	r2, r7
   316dc:	mov	r1, r9
   316e0:	bl	126c8 <memcmp@plt>
   316e4:	cmp	r0, #0
   316e8:	bne	31698 <crc32@@Base+0x17ef4>
   316ec:	b	31660 <crc32@@Base+0x17ebc>
   316f0:	bl	12494 <__stack_chk_fail@plt>
   316f4:	sub	r3, r1, #1
   316f8:	cmn	r3, #3
   316fc:	push	{r4, r5, r6, lr}
   31700:	bhi	31764 <crc32@@Base+0x17fc0>
   31704:	mov	r5, r0
   31708:	mov	r6, r1
   3170c:	bl	2d674 <crc32@@Base+0x13ed0>
   31710:	subs	r4, r0, #0
   31714:	beq	31720 <crc32@@Base+0x17f7c>
   31718:	mov	r0, r4
   3171c:	pop	{r4, r5, r6, pc}
   31720:	mov	r2, r4
   31724:	mvn	r1, #0
   31728:	mov	r0, r5
   3172c:	b	31750 <crc32@@Base+0x17fac>
   31730:	mov	r1, r4
   31734:	mov	r0, r5
   31738:	bl	30f94 <crc32@@Base+0x177f0>
   3173c:	mov	r1, r4
   31740:	mov	r2, #0
   31744:	cmp	r6, r0
   31748:	mov	r0, r5
   3174c:	beq	31718 <crc32@@Base+0x17f74>
   31750:	bl	2d9d0 <crc32@@Base+0x1422c>
   31754:	subs	r4, r0, #0
   31758:	bge	31730 <crc32@@Base+0x17f8c>
   3175c:	mov	r0, r4
   31760:	pop	{r4, r5, r6, pc}
   31764:	mvn	r4, #5
   31768:	b	31718 <crc32@@Base+0x17f74>
   3176c:	push	{r4, r5, r6, r7, r8, lr}
   31770:	mov	r4, r0
   31774:	mov	r0, r2
   31778:	mov	r5, r1
   3177c:	mov	r7, r2
   31780:	bl	125c0 <strlen@plt>
   31784:	cmp	r0, r5
   31788:	bgt	317e8 <crc32@@Base+0x18044>
   3178c:	mov	r6, r0
   31790:	add	r8, r0, #1
   31794:	b	317bc <crc32@@Base+0x18018>
   31798:	bl	12698 <memchr@plt>
   3179c:	cmp	r0, #0
   317a0:	sub	r3, r0, r4
   317a4:	add	r4, r0, #1
   317a8:	add	r3, r3, #1
   317ac:	popeq	{r4, r5, r6, r7, r8, pc}
   317b0:	sub	r5, r5, r3
   317b4:	cmp	r6, r5
   317b8:	bgt	317e8 <crc32@@Base+0x18044>
   317bc:	mov	r2, r8
   317c0:	mov	r1, r4
   317c4:	mov	r0, r7
   317c8:	bl	126c8 <memcmp@plt>
   317cc:	mov	r1, #0
   317d0:	mov	r2, r5
   317d4:	cmp	r0, r1
   317d8:	mov	r0, r4
   317dc:	bne	31798 <crc32@@Base+0x17ff4>
   317e0:	mov	r0, #1
   317e4:	pop	{r4, r5, r6, r7, r8, pc}
   317e8:	mov	r0, #0
   317ec:	pop	{r4, r5, r6, r7, r8, pc}
   317f0:	push	{r4, r5, r6, r7, lr}
   317f4:	movw	r7, #61168	; 0xeef0
   317f8:	movt	r7, #4
   317fc:	sub	sp, sp, #12
   31800:	ldr	ip, [r7]
   31804:	mov	r3, sp
   31808:	str	ip, [sp, #4]
   3180c:	bl	30f4c <crc32@@Base+0x177a8>
   31810:	subs	r4, r0, #0
   31814:	ldreq	r6, [sp]
   31818:	beq	31860 <crc32@@Base+0x180bc>
   3181c:	ldr	r5, [sp]
   31820:	mov	r6, #0
   31824:	add	r5, r4, r5
   31828:	cmp	r4, r5
   3182c:	bcc	3183c <crc32@@Base+0x18098>
   31830:	b	31860 <crc32@@Base+0x180bc>
   31834:	add	r6, r6, #1
   31838:	bcs	31860 <crc32@@Base+0x180bc>
   3183c:	sub	r1, r5, r4
   31840:	mov	r0, r4
   31844:	bl	120ec <strnlen@plt>
   31848:	add	r0, r0, #1
   3184c:	str	r0, [sp]
   31850:	add	r4, r4, r0
   31854:	cmp	r4, r5
   31858:	bls	31834 <crc32@@Base+0x18090>
   3185c:	mvn	r6, #14
   31860:	ldr	r2, [sp, #4]
   31864:	mov	r0, r6
   31868:	ldr	r3, [r7]
   3186c:	cmp	r2, r3
   31870:	bne	3187c <crc32@@Base+0x180d8>
   31874:	add	sp, sp, #12
   31878:	pop	{r4, r5, r6, r7, pc}
   3187c:	bl	12494 <__stack_chk_fail@plt>
   31880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31884:	movw	r8, #61168	; 0xeef0
   31888:	movt	r8, #4
   3188c:	sub	sp, sp, #8
   31890:	mov	r9, r3
   31894:	ldr	ip, [r8]
   31898:	mov	r3, sp
   3189c:	str	ip, [sp, #4]
   318a0:	bl	30f4c <crc32@@Base+0x177a8>
   318a4:	subs	r4, r0, #0
   318a8:	ldreq	r7, [sp]
   318ac:	beq	31924 <crc32@@Base+0x18180>
   318b0:	mov	r0, r9
   318b4:	bl	125c0 <strlen@plt>
   318b8:	ldr	r5, [sp]
   318bc:	add	r5, r4, r5
   318c0:	cmp	r4, r5
   318c4:	add	sl, r0, #1
   318c8:	bcs	31940 <crc32@@Base+0x1819c>
   318cc:	mov	r7, #0
   318d0:	b	318e4 <crc32@@Base+0x18140>
   318d4:	cmp	r6, r5
   318d8:	mov	r4, r6
   318dc:	add	r7, r7, #1
   318e0:	bcs	31940 <crc32@@Base+0x1819c>
   318e4:	sub	r1, r5, r4
   318e8:	mov	r0, r4
   318ec:	bl	120ec <strnlen@plt>
   318f0:	add	r0, r0, #1
   318f4:	str	r0, [sp]
   318f8:	add	r6, r4, r0
   318fc:	cmp	r6, r5
   31900:	bhi	31948 <crc32@@Base+0x181a4>
   31904:	cmp	r0, sl
   31908:	bne	318d4 <crc32@@Base+0x18130>
   3190c:	mov	r0, r4
   31910:	mov	r2, sl
   31914:	mov	r1, r9
   31918:	bl	126c8 <memcmp@plt>
   3191c:	cmp	r0, #0
   31920:	bne	318d4 <crc32@@Base+0x18130>
   31924:	ldr	r2, [sp, #4]
   31928:	mov	r0, r7
   3192c:	ldr	r3, [r8]
   31930:	cmp	r2, r3
   31934:	bne	31950 <crc32@@Base+0x181ac>
   31938:	add	sp, sp, #8
   3193c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31940:	mvn	r7, #0
   31944:	b	31924 <crc32@@Base+0x18180>
   31948:	mvn	r7, #14
   3194c:	b	31924 <crc32@@Base+0x18180>
   31950:	bl	12494 <__stack_chk_fail@plt>
   31954:	push	{r4, r5, r6, r7, r8, lr}
   31958:	movw	r7, #61168	; 0xeef0
   3195c:	movt	r7, #4
   31960:	sub	sp, sp, #8
   31964:	mov	r6, r3
   31968:	ldr	ip, [r7]
   3196c:	mov	r3, sp
   31970:	ldr	r8, [sp, #32]
   31974:	str	ip, [sp, #4]
   31978:	bl	30f4c <crc32@@Base+0x177a8>
   3197c:	subs	r4, r0, #0
   31980:	beq	319e8 <crc32@@Base+0x18244>
   31984:	ldr	r5, [sp]
   31988:	add	r5, r4, r5
   3198c:	cmp	r4, r5
   31990:	bcc	319b0 <crc32@@Base+0x1820c>
   31994:	b	31a18 <crc32@@Base+0x18274>
   31998:	cmp	r6, #0
   3199c:	beq	31a30 <crc32@@Base+0x1828c>
   319a0:	cmp	r3, r5
   319a4:	mov	r4, r3
   319a8:	sub	r6, r6, #1
   319ac:	bcs	31a18 <crc32@@Base+0x18274>
   319b0:	sub	r1, r5, r4
   319b4:	mov	r0, r4
   319b8:	bl	120ec <strnlen@plt>
   319bc:	add	r3, r0, #1
   319c0:	str	r3, [sp]
   319c4:	add	r3, r4, r3
   319c8:	cmp	r3, r5
   319cc:	bls	31998 <crc32@@Base+0x181f4>
   319d0:	cmp	r8, #0
   319d4:	beq	319f8 <crc32@@Base+0x18254>
   319d8:	mvn	r3, #14
   319dc:	mov	r4, #0
   319e0:	str	r3, [r8]
   319e4:	b	319fc <crc32@@Base+0x18258>
   319e8:	cmp	r8, #0
   319ec:	ldrne	r3, [sp]
   319f0:	strne	r3, [r8]
   319f4:	bne	319fc <crc32@@Base+0x18258>
   319f8:	mov	r4, #0
   319fc:	ldr	r2, [sp, #4]
   31a00:	mov	r0, r4
   31a04:	ldr	r3, [r7]
   31a08:	cmp	r2, r3
   31a0c:	bne	31a3c <crc32@@Base+0x18298>
   31a10:	add	sp, sp, #8
   31a14:	pop	{r4, r5, r6, r7, r8, pc}
   31a18:	cmp	r8, #0
   31a1c:	beq	319f8 <crc32@@Base+0x18254>
   31a20:	mvn	r3, #0
   31a24:	mov	r4, #0
   31a28:	str	r3, [r8]
   31a2c:	b	319fc <crc32@@Base+0x18258>
   31a30:	cmp	r8, #0
   31a34:	strne	r0, [r8]
   31a38:	b	319fc <crc32@@Base+0x18258>
   31a3c:	bl	12494 <__stack_chk_fail@plt>
   31a40:	push	{r4, r5, lr}
   31a44:	movw	r4, #61168	; 0xeef0
   31a48:	movt	r4, #4
   31a4c:	sub	sp, sp, #12
   31a50:	mov	r5, r2
   31a54:	movw	r2, #30708	; 0x77f4
   31a58:	ldr	ip, [r4]
   31a5c:	mov	r3, sp
   31a60:	movt	r2, #3
   31a64:	str	ip, [sp, #4]
   31a68:	bl	30f4c <crc32@@Base+0x177a8>
   31a6c:	cmp	r0, #0
   31a70:	ldreq	r0, [sp]
   31a74:	beq	31a8c <crc32@@Base+0x182e8>
   31a78:	mov	r2, r5
   31a7c:	ldr	r1, [sp]
   31a80:	bl	3176c <crc32@@Base+0x17fc8>
   31a84:	clz	r0, r0
   31a88:	lsr	r0, r0, #5
   31a8c:	ldr	r2, [sp, #4]
   31a90:	ldr	r3, [r4]
   31a94:	cmp	r2, r3
   31a98:	bne	31aa4 <crc32@@Base+0x18300>
   31a9c:	add	sp, sp, #12
   31aa0:	pop	{r4, r5, pc}
   31aa4:	bl	12494 <__stack_chk_fail@plt>
   31aa8:	push	{r4, r5, r6, lr}
   31aac:	mov	r4, r1
   31ab0:	mov	r6, r2
   31ab4:	mov	r5, r0
   31ab8:	bl	2d674 <crc32@@Base+0x13ed0>
   31abc:	subs	r3, r0, #0
   31ac0:	beq	31acc <crc32@@Base+0x18328>
   31ac4:	mov	r0, r3
   31ac8:	pop	{r4, r5, r6, pc}
   31acc:	mov	r2, r3
   31ad0:	mov	r1, r4
   31ad4:	mov	r0, r5
   31ad8:	b	31b0c <crc32@@Base+0x18368>
   31adc:	mov	r2, r6
   31ae0:	mov	r1, r4
   31ae4:	mov	r0, r5
   31ae8:	bl	31a40 <crc32@@Base+0x1829c>
   31aec:	mov	r1, r4
   31af0:	mov	r2, #0
   31af4:	mov	r3, r0
   31af8:	cmn	r3, #1
   31afc:	mov	r0, r5
   31b00:	blt	31ac4 <crc32@@Base+0x18320>
   31b04:	cmp	r3, r2
   31b08:	beq	31b18 <crc32@@Base+0x18374>
   31b0c:	bl	2d9d0 <crc32@@Base+0x1422c>
   31b10:	subs	r4, r0, #0
   31b14:	bge	31adc <crc32@@Base+0x18338>
   31b18:	mov	r3, r4
   31b1c:	mov	r0, r3
   31b20:	pop	{r4, r5, r6, pc}
   31b24:	ldr	r3, [r0, #384]	; 0x180
   31b28:	ldr	ip, [r0, #388]	; 0x184
   31b2c:	cmp	r3, #0
   31b30:	push	{r4, r5, lr}
   31b34:	subne	lr, ip, #-536870911	; 0xe0000001
   31b38:	ldr	r4, [r0, #400]	; 0x190
   31b3c:	addne	r3, r3, lr, lsl #3
   31b40:	ldr	lr, [r0, #396]	; 0x18c
   31b44:	cmp	r4, #0
   31b48:	beq	31b54 <crc32@@Base+0x183b0>
   31b4c:	cmp	ip, #0
   31b50:	bne	31b7c <crc32@@Base+0x183d8>
   31b54:	cmp	lr, ip
   31b58:	add	ip, ip, #1
   31b5c:	str	ip, [r0, #388]	; 0x184
   31b60:	ble	31bbc <crc32@@Base+0x18418>
   31b64:	cmp	r3, #0
   31b68:	beq	31bc4 <crc32@@Base+0x18420>
   31b6c:	str	r1, [r3, #8]
   31b70:	mov	r0, #0
   31b74:	str	r2, [r3, #12]
   31b78:	pop	{r4, r5, pc}
   31b7c:	cmp	lr, ip
   31b80:	movlt	r4, #0
   31b84:	movge	r4, #1
   31b88:	cmp	r3, #0
   31b8c:	moveq	r4, #0
   31b90:	cmp	r4, #0
   31b94:	beq	31b54 <crc32@@Base+0x183b0>
   31b98:	ldr	r5, [r3]
   31b9c:	ldr	r4, [r3, #4]
   31ba0:	add	r4, r5, r4
   31ba4:	cmp	r4, r1
   31ba8:	bge	31bcc <crc32@@Base+0x18428>
   31bac:	cmp	lr, ip
   31bb0:	add	ip, ip, #1
   31bb4:	str	ip, [r0, #388]	; 0x184
   31bb8:	bgt	31b6c <crc32@@Base+0x183c8>
   31bbc:	mvn	r0, #0
   31bc0:	pop	{r4, r5, pc}
   31bc4:	mov	r0, r3
   31bc8:	pop	{r4, r5, pc}
   31bcc:	add	r2, r1, r2
   31bd0:	mov	r0, #0
   31bd4:	sub	r5, r2, r5
   31bd8:	str	r5, [r3, #4]
   31bdc:	pop	{r4, r5, pc}
   31be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31be4:	movw	ip, #61168	; 0xeef0
   31be8:	sub	sp, sp, #204	; 0xcc
   31bec:	movt	ip, #4
   31bf0:	mov	r5, r0
   31bf4:	mvn	r6, #0
   31bf8:	str	ip, [sp, #52]	; 0x34
   31bfc:	add	r4, sp, #200	; 0xc8
   31c00:	ldr	ip, [ip]
   31c04:	str	r3, [sp, #44]	; 0x2c
   31c08:	ldr	r3, [sp, #244]	; 0xf4
   31c0c:	str	r0, [sp]
   31c10:	add	r0, sp, #68	; 0x44
   31c14:	str	r1, [sp, #48]	; 0x30
   31c18:	mov	r1, #0
   31c1c:	str	r2, [sp, #32]
   31c20:	mov	r2, #128	; 0x80
   31c24:	ldr	r8, [sp, #252]	; 0xfc
   31c28:	str	r3, [sp, #28]
   31c2c:	str	r6, [sp, #20]
   31c30:	str	ip, [sp, #196]	; 0xc4
   31c34:	bl	122e4 <memset@plt>
   31c38:	ldr	r2, [r5, #8]
   31c3c:	mov	r1, #0
   31c40:	mov	r5, r1
   31c44:	str	r1, [r4, #-140]!	; 0xffffff74
   31c48:	ubfx	r0, r2, #8, #8
   31c4c:	strb	r1, [r8]
   31c50:	lsr	r3, r2, #24
   31c54:	ubfx	r1, r2, #16, #8
   31c58:	orr	r3, r3, r2, lsl #24
   31c5c:	str	r4, [sp, #8]
   31c60:	orr	r3, r3, r0, lsl #16
   31c64:	mov	r4, r5
   31c68:	orr	r3, r3, r1, lsl #8
   31c6c:	str	r5, [sp, #4]
   31c70:	str	r3, [sp, #24]
   31c74:	str	r8, [sp, #16]
   31c78:	ldr	r2, [sp, #8]
   31c7c:	mov	r1, r5
   31c80:	ldr	r0, [sp]
   31c84:	bl	2d7f0 <crc32@@Base+0x1404c>
   31c88:	ldr	r3, [sp, #60]	; 0x3c
   31c8c:	mov	sl, r3
   31c90:	sub	r2, r0, #1
   31c94:	mov	r7, r0
   31c98:	cmp	r2, #8
   31c9c:	ldrls	pc, [pc, r2, lsl #2]
   31ca0:	b	31e58 <crc32@@Base+0x186b4>
   31ca4:	andeq	r1, r3, ip, lsl pc
   31ca8:	andeq	r1, r3, r0, lsr #29
   31cac:	andeq	r1, r3, ip, lsr #27
   31cb0:	muleq	r3, r0, sp
   31cb4:	andeq	r1, r3, r8, asr lr
   31cb8:	andeq	r1, r3, r8, asr lr
   31cbc:	andeq	r1, r3, r8, asr lr
   31cc0:	andeq	r1, r3, r8, asr lr
   31cc4:	andeq	r1, r3, r8, asr #25
   31cc8:	mov	fp, #1
   31ccc:	str	fp, [sp, #12]
   31cd0:	cmn	r6, #1
   31cd4:	movne	r2, #0
   31cd8:	moveq	r2, #1
   31cdc:	tst	fp, r2
   31ce0:	beq	3200c <crc32@@Base+0x18868>
   31ce4:	ldr	r2, [sp, #248]	; 0xf8
   31ce8:	cmp	r4, r2
   31cec:	movgt	r2, #0
   31cf0:	movle	r2, #1
   31cf4:	cmp	r4, #0
   31cf8:	moveq	r2, #0
   31cfc:	cmp	r2, #0
   31d00:	beq	31d2c <crc32@@Base+0x18588>
   31d04:	sub	r2, r4, #-536870911	; 0xe0000001
   31d08:	ldr	r0, [sp, #28]
   31d0c:	add	r1, r0, r2, lsl #3
   31d10:	ldr	r2, [r0, r2, lsl #3]
   31d14:	ldr	r1, [r1, #4]
   31d18:	add	r2, r2, r1
   31d1c:	ldr	r1, [sp, #24]
   31d20:	sub	r2, r2, r1
   31d24:	cmp	r2, r5
   31d28:	beq	3201c <crc32@@Base+0x18878>
   31d2c:	mov	r6, r5
   31d30:	cmp	r7, #9
   31d34:	mov	r5, r3
   31d38:	bne	31c78 <crc32@@Base+0x184d4>
   31d3c:	ldr	lr, [sp]
   31d40:	ldr	r1, [lr, #36]	; 0x24
   31d44:	ubfx	ip, r1, #8, #8
   31d48:	ubfx	r0, r1, #16, #8
   31d4c:	lsr	r2, r1, #24
   31d50:	orr	r2, r2, r1, lsl #24
   31d54:	orr	r2, r2, ip, lsl #16
   31d58:	orr	r2, r2, r0, lsl #8
   31d5c:	cmp	r3, r2
   31d60:	bne	32104 <crc32@@Base+0x18960>
   31d64:	ldr	r2, [sp, #248]	; 0xf8
   31d68:	cmp	r4, r2
   31d6c:	blt	32098 <crc32@@Base+0x188f4>
   31d70:	add	r0, r4, #1
   31d74:	ldr	r3, [sp, #52]	; 0x34
   31d78:	ldr	r2, [sp, #196]	; 0xc4
   31d7c:	ldr	r3, [r3]
   31d80:	cmp	r2, r3
   31d84:	bne	3210c <crc32@@Base+0x18968>
   31d88:	add	sp, sp, #204	; 0xcc
   31d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31d90:	ldr	r2, [sp, #4]
   31d94:	mov	sl, r5
   31d98:	cmp	r2, #1
   31d9c:	movle	fp, #0
   31da0:	movgt	fp, #1
   31da4:	str	fp, [sp, #12]
   31da8:	b	31cd0 <crc32@@Base+0x1852c>
   31dac:	ldr	r9, [sp]
   31db0:	mov	r2, #0
   31db4:	ldr	r3, [sp, #4]
   31db8:	mov	r1, r5
   31dbc:	cmp	r3, #1
   31dc0:	mov	r0, r9
   31dc4:	movle	fp, #0
   31dc8:	movgt	fp, #1
   31dcc:	bl	30d18 <crc32@@Base+0x17574>
   31dd0:	str	fp, [sp, #12]
   31dd4:	ldr	r1, [r0, #8]
   31dd8:	mov	r0, r9
   31ddc:	ubfx	r2, r1, #8, #8
   31de0:	lsr	r3, r1, #24
   31de4:	orr	r3, r3, r1, lsl #24
   31de8:	ubfx	r1, r1, #16, #8
   31dec:	orr	r3, r3, r2, lsl #16
   31df0:	orr	r1, r3, r1, lsl #8
   31df4:	bl	3086c <crc32@@Base+0x170c8>
   31df8:	ldr	r3, [sp, #240]	; 0xf0
   31dfc:	cmp	r3, #0
   31e00:	ble	320f0 <crc32@@Base+0x1894c>
   31e04:	ldr	r3, [sp, #44]	; 0x2c
   31e08:	mov	r9, #0
   31e0c:	str	fp, [sp, #40]	; 0x28
   31e10:	sub	sl, r3, #4
   31e14:	str	r4, [sp, #36]	; 0x24
   31e18:	mov	r4, r9
   31e1c:	mov	r9, r0
   31e20:	mov	fp, sl
   31e24:	ldr	sl, [sp, #240]	; 0xf0
   31e28:	b	31e38 <crc32@@Base+0x18694>
   31e2c:	add	r4, r4, #1
   31e30:	cmp	sl, r4
   31e34:	beq	32054 <crc32@@Base+0x188b0>
   31e38:	mov	r1, r9
   31e3c:	ldr	r0, [fp, #4]!
   31e40:	bl	1265c <strcmp@plt>
   31e44:	cmp	r0, #0
   31e48:	bne	31e2c <crc32@@Base+0x18688>
   31e4c:	ldr	r4, [sp, #36]	; 0x24
   31e50:	mov	sl, r5
   31e54:	ldr	r3, [sp, #60]	; 0x3c
   31e58:	mov	r9, #1
   31e5c:	adds	r2, r6, #1
   31e60:	movne	r2, #1
   31e64:	tst	r9, r2
   31e68:	beq	31d30 <crc32@@Base+0x1858c>
   31e6c:	ldr	r2, [sp, #248]	; 0xf8
   31e70:	cmp	r4, r2
   31e74:	bge	31e94 <crc32@@Base+0x186f0>
   31e78:	ldr	r1, [sp, #28]
   31e7c:	sub	sl, sl, r6
   31e80:	ldr	r0, [sp, #24]
   31e84:	add	r2, r1, r4, lsl #3
   31e88:	add	r6, r6, r0
   31e8c:	str	r6, [r1, r4, lsl #3]
   31e90:	str	sl, [r2, #4]
   31e94:	add	r4, r4, #1
   31e98:	mvn	r6, #0
   31e9c:	b	31d30 <crc32@@Base+0x1858c>
   31ea0:	ldr	r1, [sp, #20]
   31ea4:	cmn	r1, #1
   31ea8:	beq	320e8 <crc32@@Base+0x18944>
   31eac:	ldr	lr, [sp, #16]
   31eb0:	add	r0, sp, #200	; 0xc8
   31eb4:	add	r2, r0, r1, lsl #2
   31eb8:	sub	ip, r1, #1
   31ebc:	cmp	lr, r8
   31ec0:	ldr	r0, [r2, #-132]	; 0xffffff7c
   31ec4:	bls	31ef4 <crc32@@Base+0x18750>
   31ec8:	ldrb	r1, [lr, #-1]
   31ecc:	sub	r2, lr, #1
   31ed0:	cmp	r1, #47	; 0x2f
   31ed4:	bne	31ee8 <crc32@@Base+0x18744>
   31ed8:	b	3202c <crc32@@Base+0x18888>
   31edc:	ldrb	r1, [r2, #-1]!
   31ee0:	cmp	r1, #47	; 0x2f
   31ee4:	beq	3202c <crc32@@Base+0x18888>
   31ee8:	cmp	r8, r2
   31eec:	bne	31edc <crc32@@Base+0x18738>
   31ef0:	str	r8, [sp, #16]
   31ef4:	ldr	r1, [sp, #16]
   31ef8:	mov	r2, #0
   31efc:	str	ip, [sp, #20]
   31f00:	strb	r2, [r1]
   31f04:	ldr	r2, [sp, #4]
   31f08:	str	r0, [sp, #4]
   31f0c:	adds	fp, r2, #0
   31f10:	str	r2, [sp, #12]
   31f14:	movne	fp, #1
   31f18:	b	31cd0 <crc32@@Base+0x1852c>
   31f1c:	ldr	r3, [sp, #20]
   31f20:	add	r3, r3, #1
   31f24:	str	r3, [sp, #20]
   31f28:	cmp	r3, #32
   31f2c:	beq	320e8 <crc32@@Base+0x18944>
   31f30:	add	r2, sp, #64	; 0x40
   31f34:	mov	r1, r5
   31f38:	ldr	r0, [sp]
   31f3c:	bl	30c4c <crc32@@Base+0x174a8>
   31f40:	ldr	r2, [sp, #16]
   31f44:	ldr	r9, [sp, #64]	; 0x40
   31f48:	sub	r3, r2, r8
   31f4c:	ldr	r1, [sp, #256]	; 0x100
   31f50:	add	r3, r3, #2
   31f54:	add	r3, r3, r9
   31f58:	cmp	r3, r1
   31f5c:	bge	320fc <crc32@@Base+0x18958>
   31f60:	add	r3, r8, #1
   31f64:	mov	r1, r0
   31f68:	cmp	r2, r3
   31f6c:	ldreq	r3, [sp, #16]
   31f70:	movne	r3, #47	; 0x2f
   31f74:	strbne	r3, [r2]
   31f78:	addne	r3, r2, #1
   31f7c:	mov	r0, r3
   31f80:	bl	123e0 <strcpy@plt>
   31f84:	ldr	r1, [sp, #20]
   31f88:	ldr	r2, [sp, #4]
   31f8c:	cmp	r2, #1
   31f90:	add	r3, r0, r9
   31f94:	str	r3, [sp, #16]
   31f98:	add	r3, sp, #200	; 0xc8
   31f9c:	add	r3, r3, r1, lsl #2
   31fa0:	str	r2, [r3, #-132]	; 0xffffff7c
   31fa4:	ldr	r3, [sp, #32]
   31fa8:	beq	32068 <crc32@@Base+0x188c4>
   31fac:	cmp	r3, #0
   31fb0:	ble	32038 <crc32@@Base+0x18894>
   31fb4:	ldr	r3, [sp, #48]	; 0x30
   31fb8:	mov	r9, #0
   31fbc:	str	r4, [sp, #12]
   31fc0:	sub	fp, r3, #4
   31fc4:	mov	r4, fp
   31fc8:	ldr	fp, [sp, #32]
   31fcc:	b	31fdc <crc32@@Base+0x18838>
   31fd0:	add	r9, r9, #1
   31fd4:	cmp	fp, r9
   31fd8:	ble	32034 <crc32@@Base+0x18890>
   31fdc:	mov	r1, r8
   31fe0:	ldr	r0, [r4, #4]!
   31fe4:	bl	1265c <strcmp@plt>
   31fe8:	cmp	r0, #0
   31fec:	bne	31fd0 <crc32@@Base+0x1882c>
   31ff0:	mov	r2, #2
   31ff4:	ldr	r4, [sp, #12]
   31ff8:	ldr	r3, [sp, #60]	; 0x3c
   31ffc:	mov	fp, #1
   32000:	str	r2, [sp, #4]
   32004:	str	r2, [sp, #12]
   32008:	b	31cd0 <crc32@@Base+0x1852c>
   3200c:	ldr	r2, [sp, #12]
   32010:	clz	r9, r2
   32014:	lsr	r9, r9, #5
   32018:	b	31e5c <crc32@@Base+0x186b8>
   3201c:	sub	r4, r4, #1
   32020:	ldr	r6, [r0, r4, lsl #3]
   32024:	sub	r6, r6, r1
   32028:	b	31d30 <crc32@@Base+0x1858c>
   3202c:	str	r2, [sp, #16]
   32030:	b	31ef4 <crc32@@Base+0x18750>
   32034:	ldr	r4, [sp, #12]
   32038:	ldr	r3, [sp, #4]
   3203c:	cmp	r3, #0
   32040:	bne	32074 <crc32@@Base+0x188d0>
   32044:	mov	sl, r5
   32048:	mov	r9, #1
   3204c:	ldr	r3, [sp, #60]	; 0x3c
   32050:	b	31e5c <crc32@@Base+0x186b8>
   32054:	ldr	fp, [sp, #40]	; 0x28
   32058:	mov	sl, r5
   3205c:	ldr	r4, [sp, #36]	; 0x24
   32060:	ldr	r3, [sp, #60]	; 0x3c
   32064:	b	31cd0 <crc32@@Base+0x1852c>
   32068:	cmp	r3, #0
   3206c:	mov	sl, r5
   32070:	bgt	31fb4 <crc32@@Base+0x18810>
   32074:	ldr	r3, [sp, #4]
   32078:	subs	r3, r3, #1
   3207c:	str	r3, [sp, #4]
   32080:	mov	r2, r3
   32084:	movne	fp, #1
   32088:	ldr	r3, [sp, #60]	; 0x3c
   3208c:	moveq	fp, #0
   32090:	str	r2, [sp, #12]
   32094:	b	31cd0 <crc32@@Base+0x1852c>
   32098:	ldr	r2, [sp, #260]	; 0x104
   3209c:	sub	r3, r3, r6
   320a0:	ldr	r0, [sp, #28]
   320a4:	cmp	r2, #0
   320a8:	ldr	r2, [sp, #24]
   320ac:	add	r1, r0, r4, lsl #3
   320b0:	add	r2, r6, r2
   320b4:	str	r2, [r0, r4, lsl #3]
   320b8:	str	r3, [r1, #4]
   320bc:	beq	31d70 <crc32@@Base+0x185cc>
   320c0:	ldr	r0, [lr, #32]
   320c4:	ubfx	lr, r0, #8, #8
   320c8:	ubfx	ip, r0, #16, #8
   320cc:	lsr	r2, r0, #24
   320d0:	orr	r2, r2, r0, lsl #24
   320d4:	orr	r2, r2, lr, lsl #16
   320d8:	orr	r2, r2, ip, lsl #8
   320dc:	add	r3, r2, r3
   320e0:	str	r3, [r1, #4]
   320e4:	b	31d70 <crc32@@Base+0x185cc>
   320e8:	mvn	r0, #10
   320ec:	b	31d74 <crc32@@Base+0x185d0>
   320f0:	mov	sl, r5
   320f4:	ldr	r3, [sp, #60]	; 0x3c
   320f8:	b	31cd0 <crc32@@Base+0x1852c>
   320fc:	mvn	r0, #2
   32100:	b	31d74 <crc32@@Base+0x185d0>
   32104:	mvn	r0, #11
   32108:	b	31d74 <crc32@@Base+0x185d0>
   3210c:	bl	12494 <__stack_chk_fail@plt>
   32110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32114:	sub	sp, sp, #12
   32118:	mov	fp, r2
   3211c:	mov	r7, r1
   32120:	movw	r2, #52512	; 0xcd20
   32124:	mov	r1, #0
   32128:	movt	r2, #3
   3212c:	mov	r4, r0
   32130:	mov	sl, r3
   32134:	ldr	r8, [r0, #8]
   32138:	ldr	r5, [sp, #48]	; 0x30
   3213c:	bl	30c1c <crc32@@Base+0x17478>
   32140:	subs	r9, r0, #0
   32144:	blt	32310 <crc32@@Base+0x18b6c>
   32148:	mov	r1, r9
   3214c:	mov	r0, r4
   32150:	bl	2db20 <crc32@@Base+0x1437c>
   32154:	cmn	r0, #1
   32158:	mov	r6, r0
   3215c:	beq	322ec <crc32@@Base+0x18b48>
   32160:	cmp	r0, #0
   32164:	blt	32280 <crc32@@Base+0x18adc>
   32168:	str	r7, [r5, #384]	; 0x180
   3216c:	mov	r1, r9
   32170:	str	fp, [r5, #388]	; 0x184
   32174:	mov	r7, #0
   32178:	str	sl, [r5, #396]	; 0x18c
   3217c:	mov	r0, r4
   32180:	str	r7, [r5, #400]	; 0x190
   32184:	sub	r6, r6, #4
   32188:	bl	30cd8 <crc32@@Base+0x17534>
   3218c:	subs	fp, r0, #0
   32190:	blt	32274 <crc32@@Base+0x18ad0>
   32194:	lsr	r3, r8, #24
   32198:	ubfx	r2, r8, #8, #8
   3219c:	orr	r3, r3, r8, lsl #24
   321a0:	ubfx	r8, r8, #16, #8
   321a4:	orr	r3, r3, r2, lsl #16
   321a8:	orr	r8, r3, r8, lsl #8
   321ac:	add	r3, r8, r9
   321b0:	str	r3, [sp, #4]
   321b4:	mov	r2, #0
   321b8:	mov	r1, fp
   321bc:	mov	r0, r4
   321c0:	bl	30d18 <crc32@@Base+0x17574>
   321c4:	ldr	r2, [r0, #8]
   321c8:	mov	r0, r4
   321cc:	ubfx	ip, r2, #8, #8
   321d0:	ubfx	r1, r2, #16, #8
   321d4:	lsr	r3, r2, #24
   321d8:	orr	r3, r3, r2, lsl #24
   321dc:	orr	r3, r3, ip, lsl #16
   321e0:	orr	r1, r3, r1, lsl #8
   321e4:	bl	3086c <crc32@@Base+0x170c8>
   321e8:	mov	r1, r0
   321ec:	mov	r0, r4
   321f0:	bl	312a8 <crc32@@Base+0x17b04>
   321f4:	ldr	r1, [r4, #8]
   321f8:	ldr	ip, [r5, #388]	; 0x184
   321fc:	ubfx	r3, r1, #8, #8
   32200:	lsr	r2, r1, #24
   32204:	cmp	ip, #0
   32208:	orr	r2, r2, r1, lsl #24
   3220c:	ubfx	r1, r1, #16, #8
   32210:	orr	r2, r2, r3, lsl #16
   32214:	ldr	r3, [r5, #384]	; 0x180
   32218:	orr	r2, r2, r1, lsl #8
   3221c:	add	r0, r2, r0
   32220:	ble	32258 <crc32@@Base+0x18ab4>
   32224:	add	r3, r3, #8
   32228:	mov	r1, #0
   3222c:	ldr	r2, [r3, #-8]
   32230:	add	r1, r1, #1
   32234:	cmp	r0, r2
   32238:	blt	3224c <crc32@@Base+0x18aa8>
   3223c:	ldr	lr, [r3, #-4]
   32240:	add	r2, r2, lr
   32244:	cmp	r0, r2
   32248:	blt	3228c <crc32@@Base+0x18ae8>
   3224c:	cmp	ip, r1
   32250:	add	r3, r3, #8
   32254:	bne	3222c <crc32@@Base+0x18a88>
   32258:	mov	r1, fp
   3225c:	mov	r0, r4
   32260:	bl	30cf8 <crc32@@Base+0x17554>
   32264:	subs	fp, r0, #0
   32268:	bge	321b4 <crc32@@Base+0x18a10>
   3226c:	cmp	r7, #0
   32270:	bne	322d8 <crc32@@Base+0x18b34>
   32274:	ldr	r6, [r5, #388]	; 0x184
   32278:	cmp	r6, sl
   3227c:	mvnge	r6, #2
   32280:	mov	r0, r6
   32284:	add	sp, sp, #12
   32288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3228c:	mov	r1, fp
   32290:	mov	r0, r4
   32294:	bl	30cf8 <crc32@@Base+0x17554>
   32298:	cmp	r0, #0
   3229c:	movge	r9, r0
   322a0:	movlt	r9, r6
   322a4:	cmp	r7, #0
   322a8:	beq	322c4 <crc32@@Base+0x18b20>
   322ac:	sub	r2, r9, fp
   322b0:	add	r1, r8, fp
   322b4:	mov	r0, r5
   322b8:	mov	r7, #1
   322bc:	bl	31b24 <crc32@@Base+0x18380>
   322c0:	b	32258 <crc32@@Base+0x18ab4>
   322c4:	mov	r2, #12
   322c8:	ldr	r1, [sp, #4]
   322cc:	mov	r0, r5
   322d0:	bl	31b24 <crc32@@Base+0x18380>
   322d4:	b	322ac <crc32@@Base+0x18b08>
   322d8:	add	r1, r8, r6
   322dc:	mov	r2, #4
   322e0:	mov	r0, r5
   322e4:	bl	31b24 <crc32@@Base+0x18380>
   322e8:	b	32274 <crc32@@Base+0x18ad0>
   322ec:	ldr	r3, [r4, #36]	; 0x24
   322f0:	ubfx	r1, r3, #8, #8
   322f4:	ubfx	r2, r3, #16, #8
   322f8:	lsr	r6, r3, #24
   322fc:	orr	r6, r6, r3, lsl #24
   32300:	orr	r6, r6, r1, lsl #16
   32304:	orr	r6, r6, r2, lsl #8
   32308:	sub	r6, r6, #8
   3230c:	b	32168 <crc32@@Base+0x189c4>
   32310:	mvn	r6, #0
   32314:	b	32280 <crc32@@Base+0x18adc>
   32318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3231c:	sub	sp, sp, #84	; 0x54
   32320:	mov	r7, r0
   32324:	movw	ip, #61168	; 0xeef0
   32328:	ldr	r4, [sp, #132]	; 0x84
   3232c:	movt	ip, #4
   32330:	ldr	r0, [r0, #8]
   32334:	mov	lr, ip
   32338:	str	r1, [sp, #12]
   3233c:	ldr	r1, [r4, #412]	; 0x19c
   32340:	ubfx	r5, r0, #8, #8
   32344:	str	ip, [sp, #32]
   32348:	lsr	ip, r0, #24
   3234c:	ldr	lr, [lr]
   32350:	orr	ip, ip, r0, lsl #24
   32354:	cmp	r1, #0
   32358:	ubfx	r0, r0, #16, #8
   3235c:	orr	ip, ip, r5, lsl #16
   32360:	str	r2, [sp, #16]
   32364:	str	lr, [sp, #76]	; 0x4c
   32368:	orr	r2, ip, r0, lsl #8
   3236c:	str	r3, [r4, #384]	; 0x180
   32370:	str	r2, [sp, #24]
   32374:	mov	r2, #0
   32378:	ldr	sl, [sp, #120]	; 0x78
   3237c:	str	r2, [r4, #388]	; 0x184
   32380:	ble	328e4 <crc32@@Base+0x19140>
   32384:	cmp	r1, #1
   32388:	bgt	3245c <crc32@@Base+0x18cb8>
   3238c:	ldr	r3, [sp, #128]	; 0x80
   32390:	add	fp, r4, #408	; 0x198
   32394:	tst	r3, #8
   32398:	movne	r3, #3
   3239c:	moveq	r3, #2
   323a0:	str	r3, [sp, #28]
   323a4:	mov	r3, #0
   323a8:	str	r3, [sp, #20]
   323ac:	mov	lr, fp
   323b0:	add	ip, sp, #56	; 0x38
   323b4:	ldm	lr!, {r0, r1, r2, r3}
   323b8:	ldr	lr, [lr]
   323bc:	stmia	ip!, {r0, r1, r2, r3}
   323c0:	add	r2, sp, #72	; 0x48
   323c4:	mov	r0, r7
   323c8:	mov	r1, lr
   323cc:	mov	r5, lr
   323d0:	str	lr, [ip]
   323d4:	bl	2d7f0 <crc32@@Base+0x1404c>
   323d8:	ldr	r6, [sp, #72]	; 0x48
   323dc:	sub	r0, r0, #1
   323e0:	cmp	r0, #8
   323e4:	ldrls	pc, [pc, r0, lsl #2]
   323e8:	b	3272c <crc32@@Base+0x18f88>
   323ec:	andeq	r2, r3, r8, ror #14
   323f0:			; <UNDEFINED> instruction: 0x000326bc
   323f4:	andeq	r2, r3, ip, ror #10
   323f8:	andeq	r2, r3, r0, lsl r4
   323fc:	andeq	r2, r3, ip, lsr #14
   32400:	andeq	r2, r3, ip, lsr #14
   32404:	andeq	r2, r3, ip, lsr #14
   32408:	andeq	r2, r3, ip, lsr #14
   3240c:	andeq	r2, r3, r4, ror r8
   32410:	ldr	r0, [sp, #64]	; 0x40
   32414:	mov	r6, r5
   32418:	cmp	r0, #1
   3241c:	movls	r0, #0
   32420:	movhi	r0, #1
   32424:	cmp	r0, #0
   32428:	beq	3272c <crc32@@Base+0x18f88>
   3242c:	ldr	r3, [r4, #404]	; 0x194
   32430:	cmn	r3, #1
   32434:	beq	32888 <crc32@@Base+0x190e4>
   32438:	add	lr, sp, #56	; 0x38
   3243c:	mov	ip, fp
   32440:	ldm	lr!, {r0, r1, r2, r3}
   32444:	stmia	ip!, {r0, r1, r2, r3}
   32448:	ldr	r1, [r4, #412]	; 0x19c
   3244c:	ldr	r3, [lr]
   32450:	cmp	r1, #1
   32454:	str	r3, [ip]
   32458:	ble	323ac <crc32@@Base+0x18c08>
   3245c:	cmp	r1, #2
   32460:	bne	324b8 <crc32@@Base+0x18d14>
   32464:	ldr	r1, [r7, #36]	; 0x24
   32468:	ldr	r2, [r4, #424]	; 0x1a8
   3246c:	ubfx	ip, r1, #8, #8
   32470:	ubfx	r0, r1, #16, #8
   32474:	lsr	r3, r1, #24
   32478:	orr	r3, r3, r1, lsl #24
   3247c:	orr	r3, r3, ip, lsl #16
   32480:	orr	r3, r3, r0, lsl #8
   32484:	cmp	r2, r3
   32488:	bne	32934 <crc32@@Base+0x19190>
   3248c:	ldr	r1, [r4, #404]	; 0x194
   32490:	mov	r0, r4
   32494:	ldr	r3, [sp, #24]
   32498:	sub	r2, r2, r1
   3249c:	add	r1, r1, r3
   324a0:	bl	31b24 <crc32@@Base+0x18380>
   324a4:	cmp	r0, #0
   324a8:	bne	328dc <crc32@@Base+0x19138>
   324ac:	ldr	r1, [r4, #412]	; 0x19c
   324b0:	add	r1, r1, #1
   324b4:	str	r1, [r4, #412]	; 0x19c
   324b8:	cmp	r1, #3
   324bc:	bgt	3253c <crc32@@Base+0x18d98>
   324c0:	ldr	r3, [sp, #128]	; 0x80
   324c4:	tst	r3, #1
   324c8:	beq	32534 <crc32@@Base+0x18d90>
   324cc:	ldr	r3, [r7, #12]
   324d0:	mov	r2, #0
   324d4:	str	r2, [r4, #400]	; 0x190
   324d8:	ubfx	r0, r3, #8, #8
   324dc:	ubfx	r2, r3, #16, #8
   324e0:	lsr	r1, r3, #24
   324e4:	orr	r1, r1, r3, lsl #24
   324e8:	ldr	r3, [r4, #424]	; 0x1a8
   324ec:	orr	r1, r1, r0, lsl #16
   324f0:	orr	r1, r1, r2, lsl #8
   324f4:	ldr	r2, [sp, #24]
   324f8:	add	r3, r2, r3
   324fc:	cmp	r3, r1
   32500:	bhi	32944 <crc32@@Base+0x191a0>
   32504:	ldr	ip, [r7, #32]
   32508:	mov	r0, r4
   3250c:	ubfx	lr, ip, #8, #8
   32510:	ubfx	r2, ip, #16, #8
   32514:	lsr	r3, ip, #24
   32518:	orr	r3, r3, ip, lsl #24
   3251c:	orr	r3, r3, lr, lsl #16
   32520:	orr	r2, r3, r2, lsl #8
   32524:	bl	31b24 <crc32@@Base+0x18380>
   32528:	cmp	r0, #0
   3252c:	bne	328dc <crc32@@Base+0x19138>
   32530:	ldr	r1, [r4, #412]	; 0x19c
   32534:	add	r1, r1, #1
   32538:	str	r1, [r4, #412]	; 0x19c
   3253c:	ldr	r9, [r4, #388]	; 0x184
   32540:	cmp	r9, #0
   32544:	movgt	r9, #0
   32548:	mvnle	r9, #0
   3254c:	ldr	r3, [sp, #32]
   32550:	mov	r0, r9
   32554:	ldr	r2, [sp, #76]	; 0x4c
   32558:	ldr	r3, [r3]
   3255c:	cmp	r2, r3
   32560:	bne	3294c <crc32@@Base+0x191a8>
   32564:	add	sp, sp, #84	; 0x54
   32568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3256c:	mov	r2, #0
   32570:	mov	r1, r5
   32574:	mov	r0, r7
   32578:	bl	30d18 <crc32@@Base+0x17574>
   3257c:	ldr	r2, [r0, #8]
   32580:	mov	r0, r7
   32584:	ubfx	ip, r2, #8, #8
   32588:	ubfx	r1, r2, #16, #8
   3258c:	lsr	r3, r2, #24
   32590:	orr	r3, r3, r2, lsl #24
   32594:	orr	r3, r3, ip, lsl #16
   32598:	orr	r1, r3, r1, lsl #8
   3259c:	bl	3086c <crc32@@Base+0x170c8>
   325a0:	mov	r6, r0
   325a4:	bl	125c0 <strlen@plt>
   325a8:	str	r6, [sp]
   325ac:	mov	r3, #2
   325b0:	ldr	r2, [sp, #20]
   325b4:	mov	r1, r7
   325b8:	ldr	ip, [sp, #12]
   325bc:	add	r0, r0, #1
   325c0:	str	r0, [sp, #4]
   325c4:	ldr	r0, [sp, #16]
   325c8:	blx	ip
   325cc:	cmn	r0, #1
   325d0:	beq	32410 <crc32@@Base+0x18c6c>
   325d4:	ldr	r3, [sp, #128]	; 0x80
   325d8:	tst	r3, #2
   325dc:	beq	328bc <crc32@@Base+0x19118>
   325e0:	cmp	r0, #0
   325e4:	beq	328d4 <crc32@@Base+0x19130>
   325e8:	ldr	r3, [sp, #64]	; 0x40
   325ec:	cmp	r3, #0
   325f0:	moveq	r3, #1
   325f4:	streq	r3, [sp, #64]	; 0x40
   325f8:	ldr	r3, [r4, #404]	; 0x194
   325fc:	cmn	r3, #1
   32600:	bne	32438 <crc32@@Base+0x18c94>
   32604:	ldr	r2, [r4, #392]	; 0x188
   32608:	ldr	r3, [sp, #56]	; 0x38
   3260c:	ldr	r1, [r2, #8]
   32610:	cmp	r3, #0
   32614:	ubfx	ip, r1, #8, #8
   32618:	ubfx	r0, r1, #16, #8
   3261c:	lsr	r2, r1, #24
   32620:	orr	r2, r2, r1, lsl #24
   32624:	orr	r2, r2, ip, lsl #16
   32628:	orr	r2, r2, r0, lsl #8
   3262c:	blt	32894 <crc32@@Base+0x190f0>
   32630:	str	r7, [sp, #40]	; 0x28
   32634:	mov	r6, r4
   32638:	str	sl, [sp, #44]	; 0x2c
   3263c:	mov	r8, #0
   32640:	str	r5, [sp, #36]	; 0x24
   32644:	mov	r7, r3
   32648:	mov	sl, r2
   3264c:	b	32670 <crc32@@Base+0x18ecc>
   32650:	ldr	r2, [r6, #4]
   32654:	add	r8, r8, #1
   32658:	add	r6, r6, #12
   3265c:	cmp	r2, #0
   32660:	moveq	r3, #1
   32664:	streq	r3, [r6, #-8]
   32668:	cmp	r7, r8
   3266c:	blt	328c4 <crc32@@Base+0x19120>
   32670:	ldr	r9, [r6, #8]
   32674:	cmp	r9, #0
   32678:	bne	32650 <crc32@@Base+0x18eac>
   3267c:	ldr	r5, [r6]
   32680:	add	r2, sp, #52	; 0x34
   32684:	ldr	r0, [r4, #392]	; 0x188
   32688:	mov	r1, r5
   3268c:	bl	2d7f0 <crc32@@Base+0x1404c>
   32690:	ldr	r2, [sp, #52]	; 0x34
   32694:	add	r1, sl, r5
   32698:	mov	r0, r4
   3269c:	sub	r2, r2, r5
   326a0:	bl	31b24 <crc32@@Base+0x18380>
   326a4:	cmp	r0, #0
   326a8:	bne	3254c <crc32@@Base+0x18da8>
   326ac:	mov	r3, #1
   326b0:	str	r3, [r6, #8]
   326b4:	str	r3, [r4, #400]	; 0x190
   326b8:	b	32650 <crc32@@Base+0x18eac>
   326bc:	ldr	r2, [sp, #56]	; 0x38
   326c0:	ldr	r0, [sp, #64]	; 0x40
   326c4:	cmp	r2, #0
   326c8:	blt	32934 <crc32@@Base+0x19190>
   326cc:	cmp	r0, #0
   326d0:	bne	326e0 <crc32@@Base+0x18f3c>
   326d4:	ldr	r3, [sp, #128]	; 0x80
   326d8:	tst	r3, #4
   326dc:	moveq	r6, r5
   326e0:	mov	r1, #12
   326e4:	ldr	r3, [sp, #68]	; 0x44
   326e8:	mla	r1, r1, r2, r4
   326ec:	sub	r2, r2, #1
   326f0:	str	r2, [sp, #56]	; 0x38
   326f4:	ldr	r2, [r1, #4]
   326f8:	str	r2, [sp, #64]	; 0x40
   326fc:	b	32714 <crc32@@Base+0x18f70>
   32700:	sub	r3, r3, #1
   32704:	str	r3, [sp, #68]	; 0x44
   32708:	ldrb	r2, [r3]
   3270c:	cmp	r2, #47	; 0x2f
   32710:	beq	3271c <crc32@@Base+0x18f78>
   32714:	cmp	sl, r3
   32718:	bcc	32700 <crc32@@Base+0x18f5c>
   3271c:	cmp	r0, #0
   32720:	mov	r2, #0
   32724:	strb	r2, [r3]
   32728:	bne	3242c <crc32@@Base+0x18c88>
   3272c:	ldr	r1, [r4, #404]	; 0x194
   32730:	cmn	r1, #1
   32734:	beq	32438 <crc32@@Base+0x18c94>
   32738:	ldr	r3, [sp, #24]
   3273c:	sub	r2, r6, r1
   32740:	mov	r0, r4
   32744:	add	r1, r1, r3
   32748:	bl	31b24 <crc32@@Base+0x18380>
   3274c:	cmp	r0, #0
   32750:	bne	328dc <crc32@@Base+0x19138>
   32754:	mvn	r3, #0
   32758:	str	r3, [r4, #404]	; 0x194
   3275c:	mov	r3, #1
   32760:	str	r3, [r4, #400]	; 0x190
   32764:	b	32438 <crc32@@Base+0x18c94>
   32768:	ldr	r3, [sp, #56]	; 0x38
   3276c:	add	r3, r3, #1
   32770:	str	r3, [sp, #56]	; 0x38
   32774:	cmp	r3, #32
   32778:	beq	32934 <crc32@@Base+0x19190>
   3277c:	add	r2, sp, #48	; 0x30
   32780:	mov	r1, r5
   32784:	mov	r0, r7
   32788:	bl	30c4c <crc32@@Base+0x174a8>
   3278c:	ldr	r2, [sp, #68]	; 0x44
   32790:	ldr	r1, [sp, #48]	; 0x30
   32794:	sub	r3, r2, sl
   32798:	add	r3, r3, #2
   3279c:	add	r3, r3, r1
   327a0:	ldr	r1, [sp, #124]	; 0x7c
   327a4:	cmp	r3, r1
   327a8:	bge	3293c <crc32@@Base+0x19198>
   327ac:	add	r3, sl, #1
   327b0:	mov	r1, r0
   327b4:	cmp	r2, r3
   327b8:	addne	r3, r2, #1
   327bc:	strne	r3, [sp, #68]	; 0x44
   327c0:	movne	r3, #47	; 0x2f
   327c4:	strbne	r3, [r2]
   327c8:	ldrne	r3, [sp, #68]	; 0x44
   327cc:	mov	r0, r3
   327d0:	bl	123e0 <strcpy@plt>
   327d4:	ldr	r0, [sp, #56]	; 0x38
   327d8:	mov	r2, #12
   327dc:	ldr	r1, [sp, #64]	; 0x40
   327e0:	ldr	r3, [sp, #68]	; 0x44
   327e4:	mul	r2, r2, r0
   327e8:	ldr	ip, [sp, #48]	; 0x30
   327ec:	cmp	r1, #1
   327f0:	add	r3, r3, ip
   327f4:	str	r3, [sp, #68]	; 0x44
   327f8:	add	r0, r4, r2
   327fc:	str	r1, [r0, #4]
   32800:	str	r5, [r4, r2]
   32804:	beq	32814 <crc32@@Base+0x19070>
   32808:	ldr	r2, [sp, #128]	; 0x80
   3280c:	tst	r2, #12
   32810:	bne	32820 <crc32@@Base+0x1907c>
   32814:	mov	r6, r5
   32818:	mov	r2, #0
   3281c:	str	r2, [sp, #64]	; 0x40
   32820:	sub	r3, r3, sl
   32824:	str	sl, [sp]
   32828:	add	r2, r3, #1
   3282c:	mov	r1, r7
   32830:	str	r2, [sp, #4]
   32834:	mov	r3, #1
   32838:	mov	r2, r5
   3283c:	ldr	r0, [sp, #16]
   32840:	ldr	ip, [sp, #12]
   32844:	blx	ip
   32848:	cmp	r0, #0
   3284c:	beq	3289c <crc32@@Base+0x190f8>
   32850:	ldr	r3, [sp, #28]
   32854:	mov	r0, r3
   32858:	str	r3, [sp, #64]	; 0x40
   3285c:	ldr	r3, [sp, #56]	; 0x38
   32860:	mov	r2, #12
   32864:	str	r5, [sp, #20]
   32868:	mla	r3, r2, r3, r4
   3286c:	str	r0, [r3, #8]
   32870:	b	32424 <crc32@@Base+0x18c80>
   32874:	mov	r3, #2
   32878:	str	r3, [sp, #60]	; 0x3c
   3287c:	ldr	r3, [r4, #404]	; 0x194
   32880:	cmn	r3, #1
   32884:	bne	32438 <crc32@@Base+0x18c94>
   32888:	ldr	r3, [sp, #128]	; 0x80
   3288c:	tst	r3, #2
   32890:	bne	32604 <crc32@@Base+0x18e60>
   32894:	str	r5, [r4, #404]	; 0x194
   32898:	b	32438 <crc32@@Base+0x18c94>
   3289c:	ldr	r0, [sp, #64]	; 0x40
   328a0:	cmp	r0, #0
   328a4:	moveq	r6, r5
   328a8:	beq	3285c <crc32@@Base+0x190b8>
   328ac:	cmp	r0, #3
   328b0:	subne	r0, r0, #1
   328b4:	strne	r0, [sp, #64]	; 0x40
   328b8:	b	3285c <crc32@@Base+0x190b8>
   328bc:	mov	r6, r5
   328c0:	b	32424 <crc32@@Base+0x18c80>
   328c4:	add	r5, sp, #36	; 0x24
   328c8:	ldm	r5, {r5, r7, sl}
   328cc:	str	r5, [r4, #404]	; 0x194
   328d0:	b	32438 <crc32@@Base+0x18c94>
   328d4:	mov	r6, r5
   328d8:	b	3272c <crc32@@Base+0x18f88>
   328dc:	mov	r9, #0
   328e0:	b	3254c <crc32@@Base+0x18da8>
   328e4:	ldr	r3, [sp, #128]	; 0x80
   328e8:	tst	r3, #16
   328ec:	beq	3238c <crc32@@Base+0x18be8>
   328f0:	ldr	r3, [r7, #16]
   328f4:	mov	r0, r4
   328f8:	ubfx	ip, r3, #8, #8
   328fc:	ubfx	r2, r3, #16, #8
   32900:	lsr	r1, r3, #24
   32904:	orr	r1, r1, r3, lsl #24
   32908:	ldr	r3, [sp, #24]
   3290c:	orr	r1, r1, ip, lsl #16
   32910:	orr	r1, r1, r2, lsl #8
   32914:	sub	r2, r3, r1
   32918:	bl	31b24 <crc32@@Base+0x18380>
   3291c:	cmp	r0, #0
   32920:	bne	328dc <crc32@@Base+0x19138>
   32924:	mov	r3, #1
   32928:	str	r0, [r4, #400]	; 0x190
   3292c:	str	r3, [r4, #412]	; 0x19c
   32930:	b	3238c <crc32@@Base+0x18be8>
   32934:	mvn	r9, #10
   32938:	b	3254c <crc32@@Base+0x18da8>
   3293c:	mvn	r9, #2
   32940:	b	3254c <crc32@@Base+0x18da8>
   32944:	mvn	r9, #11
   32948:	b	3254c <crc32@@Base+0x18da8>
   3294c:	bl	12494 <__stack_chk_fail@plt>
   32950:	push	{r4, r5, r6, lr}
   32954:	mov	lr, #0
   32958:	ldr	ip, [sp, #28]
   3295c:	mov	r6, #1
   32960:	ldr	r5, [sp, #16]
   32964:	mvn	r4, #0
   32968:	str	r6, [ip, #400]	; 0x190
   3296c:	str	r5, [ip, #420]	; 0x1a4
   32970:	str	r6, [ip, #396]	; 0x18c
   32974:	str	r4, [ip, #404]	; 0x194
   32978:	str	lr, [ip, #416]	; 0x1a0
   3297c:	str	r0, [ip, #392]	; 0x188
   32980:	strb	lr, [r5]
   32984:	str	lr, [ip, #424]	; 0x1a8
   32988:	str	r4, [ip, #408]	; 0x198
   3298c:	str	lr, [ip, #412]	; 0x19c
   32990:	pop	{r4, r5, r6, lr}
   32994:	b	32318 <crc32@@Base+0x18b74>
   32998:	subs	r0, r0, #17
   3299c:	movne	r0, #1
   329a0:	bx	lr
   329a4:	ldr	r1, [r1, #44]	; 0x2c
   329a8:	ldr	r2, [r3, #56]	; 0x38
   329ac:	mov	r3, #1
   329b0:	sub	r1, r1, #8
   329b4:	b	32b24 <crc32@@Base+0x19380>
   329b8:	mov	r1, #1
   329bc:	b	32a5c <crc32@@Base+0x192b8>
   329c0:	mov	r1, #1
   329c4:	b	329e4 <crc32@@Base+0x19240>
   329c8:	ldr	r3, [r0]
   329cc:	rev	r3, r3
   329d0:	str	r3, [r0]
   329d4:	ldr	r3, [r1]
   329d8:	rev	r3, r3
   329dc:	str	r3, [r1]
   329e0:	bx	lr
   329e4:	movw	r2, #61168	; 0xeef0
   329e8:	movt	r2, #4
   329ec:	cmp	r1, #0
   329f0:	ldr	r3, [r0]
   329f4:	ldr	ip, [r2]
   329f8:	ldr	r1, [r0, #4]
   329fc:	push	{lr}		; (str lr, [sp, #-4]!)
   32a00:	sub	sp, sp, #20
   32a04:	str	ip, [sp, #12]
   32a08:	str	r3, [sp, #4]
   32a0c:	str	r1, [sp, #8]
   32a10:	bne	32a44 <crc32@@Base+0x192a0>
   32a14:	cmp	r3, #0
   32a18:	ldr	r1, [sp, #12]
   32a1c:	ldr	r3, [r2]
   32a20:	ldrne	r0, [sp, #8]
   32a24:	mvneq	r0, #0
   32a28:	clzne	r0, r0
   32a2c:	lsrne	r0, r0, #5
   32a30:	rsbne	r0, r0, #0
   32a34:	cmp	r1, r3
   32a38:	bne	32a58 <crc32@@Base+0x192b4>
   32a3c:	add	sp, sp, #20
   32a40:	pop	{pc}		; (ldr pc, [sp], #4)
   32a44:	add	r1, sp, #8
   32a48:	add	r0, sp, #4
   32a4c:	bl	329c8 <crc32@@Base+0x19224>
   32a50:	ldr	r3, [sp, #4]
   32a54:	b	32a14 <crc32@@Base+0x19270>
   32a58:	bl	12494 <__stack_chk_fail@plt>
   32a5c:	push	{r4, lr}
   32a60:	movw	r4, #61168	; 0xeef0
   32a64:	movt	r4, #4
   32a68:	cmp	r1, #0
   32a6c:	ldrd	r2, [r0]
   32a70:	sub	sp, sp, #16
   32a74:	ldr	r1, [r4]
   32a78:	strd	r2, [sp, #4]
   32a7c:	str	r1, [sp, #12]
   32a80:	bne	32ac0 <crc32@@Base+0x1931c>
   32a84:	cmp	r2, #0
   32a88:	beq	32afc <crc32@@Base+0x19358>
   32a8c:	ldr	r3, [sp, #8]
   32a90:	cmp	r3, #0
   32a94:	beq	32ad8 <crc32@@Base+0x19334>
   32a98:	movw	r1, #52624	; 0xcd90
   32a9c:	mov	r0, #1
   32aa0:	movt	r1, #3
   32aa4:	bl	12770 <__printf_chk@plt>
   32aa8:	ldr	r2, [sp, #12]
   32aac:	ldr	r3, [r4]
   32ab0:	cmp	r2, r3
   32ab4:	bne	32ad4 <crc32@@Base+0x19330>
   32ab8:	add	sp, sp, #16
   32abc:	pop	{r4, pc}
   32ac0:	add	r1, sp, #8
   32ac4:	add	r0, sp, #4
   32ac8:	bl	329c8 <crc32@@Base+0x19224>
   32acc:	ldr	r2, [sp, #4]
   32ad0:	b	32a84 <crc32@@Base+0x192e0>
   32ad4:	bl	12494 <__stack_chk_fail@plt>
   32ad8:	movw	r1, #65044	; 0xfe14
   32adc:	movt	r1, #4
   32ae0:	movw	r2, #52584	; 0xcd68
   32ae4:	movt	r2, #3
   32ae8:	ldr	r0, [r1]
   32aec:	mov	r1, #1
   32af0:	bl	122b4 <__fprintf_chk@plt>
   32af4:	mov	r0, #1
   32af8:	bl	121f4 <exit@plt>
   32afc:	movw	r1, #65044	; 0xfe14
   32b00:	movt	r1, #4
   32b04:	mov	r3, r2
   32b08:	movw	r2, #52552	; 0xcd48
   32b0c:	ldr	r0, [r1]
   32b10:	movt	r2, #3
   32b14:	mov	r1, #1
   32b18:	bl	122b4 <__fprintf_chk@plt>
   32b1c:	mov	r0, #1
   32b20:	bl	121f4 <exit@plt>
   32b24:	cmp	r3, #0
   32b28:	stm	r0, {r1, r2}
   32b2c:	bxeq	lr
   32b30:	add	r1, r0, #4
   32b34:	b	329c8 <crc32@@Base+0x19224>
   32b38:	ldr	r2, [r0]
   32b3c:	ldr	r3, [r0, #8]
   32b40:	cmp	r2, #0
   32b44:	beq	32b68 <crc32@@Base+0x193c4>
   32b48:	cmp	r3, #0
   32b4c:	movne	r3, #1
   32b50:	bne	32b60 <crc32@@Base+0x193bc>
   32b54:	ldr	r3, [r0, #16]
   32b58:	adds	r3, r3, #0
   32b5c:	movne	r3, #1
   32b60:	mov	r0, r3
   32b64:	bx	lr
   32b68:	cmp	r3, #0
   32b6c:	ldr	r2, [r0, #16]
   32b70:	beq	32b60 <crc32@@Base+0x193bc>
   32b74:	adds	r3, r2, #0
   32b78:	movne	r3, #1
   32b7c:	mov	r0, r3
   32b80:	bx	lr
   32b84:	subs	r0, r0, #36	; 0x24
   32b88:	movne	r0, #1
   32b8c:	bx	lr
   32b90:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b94:	mov	r8, #768	; 0x300
   32b98:	mov	sl, r1
   32b9c:	mov	r9, r2
   32ba0:	mov	r1, #0
   32ba4:	mov	r2, r8
   32ba8:	mov	r4, r0
   32bac:	mov	fp, r3
   32bb0:	bl	122e4 <memset@plt>
   32bb4:	movw	r2, #53792	; 0xd220
   32bb8:	movt	r2, #3
   32bbc:	mov	r5, #1
   32bc0:	mov	r0, #56	; 0x38
   32bc4:	mov	r1, #0
   32bc8:	ldrh	r7, [r2]
   32bcc:	sub	r9, sl, r9
   32bd0:	ldrb	r6, [r2, #2]
   32bd4:	mov	r2, #12
   32bd8:	strh	r0, [r4, #4]
   32bdc:	add	r0, r4, #8
   32be0:	strh	r1, [r4, #6]
   32be4:	movw	r1, #53796	; 0xd224
   32be8:	strh	r7, [r4]
   32bec:	movt	r1, #3
   32bf0:	strb	r6, [r4, #2]
   32bf4:	strb	r5, [r4, #3]
   32bf8:	bl	126bc <strncpy@plt>
   32bfc:	sub	r3, fp, #768	; 0x300
   32c00:	str	r3, [r4, #28]
   32c04:	add	r1, r4, #700	; 0x2bc
   32c08:	ldr	r3, [sp, #40]	; 0x28
   32c0c:	add	r2, r4, #720	; 0x2d0
   32c10:	str	r9, [r4, #32]
   32c14:	mov	lr, #32
   32c18:	str	sl, [r4, #36]	; 0x24
   32c1c:	mov	ip, #12
   32c20:	strb	r3, [r4, #26]
   32c24:	mov	r0, #100	; 0x64
   32c28:	str	r8, [r4, #40]	; 0x28
   32c2c:	mov	r3, #3
   32c30:	str	r8, [r4, #48]	; 0x30
   32c34:	mov	r9, #7
   32c38:	str	lr, [r4, #44]	; 0x2c
   32c3c:	mov	fp, #400	; 0x190
   32c40:	strh	ip, [r4, #60]	; 0x3c
   32c44:	movw	sl, #5000	; 0x1388
   32c48:	strh	r0, [r4, #72]	; 0x48
   32c4c:	mov	r8, #532	; 0x214
   32c50:	strh	r9, [r4, #74]	; 0x4a
   32c54:	mov	ip, #20
   32c58:	str	fp, [r4, #76]	; 0x4c
   32c5c:	mov	lr, #2
   32c60:	str	sl, [r4, #156]	; 0x9c
   32c64:	mov	r9, #16
   32c68:	strh	r7, [r4, #56]	; 0x38
   32c6c:	mov	fp, #128	; 0x80
   32c70:	strb	r6, [r4, #58]	; 0x3a
   32c74:	mov	sl, #48	; 0x30
   32c78:	strh	r7, [r4, #68]	; 0x44
   32c7c:	mov	r0, #8
   32c80:	strb	r6, [r4, #70]	; 0x46
   32c84:	strh	r7, [r4, #168]	; 0xa8
   32c88:	strb	r6, [r4, #170]	; 0xaa
   32c8c:	str	r5, [r4, #20]
   32c90:	strh	r5, [r4, #24]
   32c94:	strb	r5, [r4, #27]
   32c98:	str	r5, [r4, #52]	; 0x34
   32c9c:	strb	r5, [r4, #59]	; 0x3b
   32ca0:	strh	r5, [r4, #62]	; 0x3e
   32ca4:	str	r5, [r4, #64]	; 0x40
   32ca8:	strb	r5, [r4, #171]	; 0xab
   32cac:	strh	r8, [r4, #172]	; 0xac
   32cb0:	strb	r3, [r4, #71]	; 0x47
   32cb4:	strh	r3, [r4, #174]	; 0xae
   32cb8:	strh	r7, [r1]
   32cbc:	strb	r6, [r4, #702]	; 0x2be
   32cc0:	strb	r5, [r4, #703]	; 0x2bf
   32cc4:	strh	ip, [r1, #4]
   32cc8:	strh	lr, [r1, #6]
   32ccc:	str	r9, [r4, #712]	; 0x2c8
   32cd0:	str	fp, [r4, #716]	; 0x2cc
   32cd4:	strh	r7, [r2]
   32cd8:	strb	r6, [r4, #722]	; 0x2d2
   32cdc:	strb	r5, [r4, #723]	; 0x2d3
   32ce0:	strh	sl, [r2, #4]
   32ce4:	strh	r0, [r2, #6]
   32ce8:	str	r3, [r4, #728]	; 0x2d8
   32cec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32cf0:	push	{r4, r5, r6, lr}
   32cf4:	movw	r4, #61168	; 0xeef0
   32cf8:	movt	r4, #4
   32cfc:	sub	sp, sp, #112	; 0x70
   32d00:	mov	r5, r1
   32d04:	mov	r6, r0
   32d08:	ldr	r3, [r4]
   32d0c:	add	r0, sp, #4
   32d10:	str	r3, [sp, #108]	; 0x6c
   32d14:	bl	2a344 <crc32@@Base+0x10ba0>
   32d18:	mov	r2, r5
   32d1c:	mov	r1, r6
   32d20:	add	r0, sp, #4
   32d24:	bl	2a3a4 <crc32@@Base+0x10c00>
   32d28:	add	r1, r6, r5
   32d2c:	add	r0, sp, #4
   32d30:	bl	2a3b0 <crc32@@Base+0x10c0c>
   32d34:	ldr	r2, [sp, #108]	; 0x6c
   32d38:	ldr	r3, [r4]
   32d3c:	cmp	r2, r3
   32d40:	bne	32d4c <crc32@@Base+0x195a8>
   32d44:	add	sp, sp, #112	; 0x70
   32d48:	pop	{r4, r5, r6, pc}
   32d4c:	bl	12494 <__stack_chk_fail@plt>
   32d50:	push	{r4, r5, r6, lr}
   32d54:	mov	r5, r1
   32d58:	movw	r1, #53828	; 0xd244
   32d5c:	movt	r1, #3
   32d60:	mov	r4, r0
   32d64:	bl	1265c <strcmp@plt>
   32d68:	cmp	r0, #0
   32d6c:	beq	32dac <crc32@@Base+0x19608>
   32d70:	movw	r1, #53836	; 0xd24c
   32d74:	mov	r0, r4
   32d78:	movt	r1, #3
   32d7c:	bl	1265c <strcmp@plt>
   32d80:	cmp	r0, #0
   32d84:	bne	32e7c <crc32@@Base+0x196d8>
   32d88:	cmp	r5, #0
   32d8c:	movw	r2, #53820	; 0xd23c
   32d90:	movt	r2, #3
   32d94:	beq	32dbc <crc32@@Base+0x19618>
   32d98:	movw	r1, #53860	; 0xd264
   32d9c:	mov	r0, #1
   32da0:	movt	r1, #3
   32da4:	bl	12770 <__printf_chk@plt>
   32da8:	b	32dbc <crc32@@Base+0x19618>
   32dac:	movw	r2, #53808	; 0xd230
   32db0:	movt	r2, #3
   32db4:	cmp	r5, #0
   32db8:	bne	32d98 <crc32@@Base+0x195f4>
   32dbc:	ldr	r6, [r4, #12]
   32dc0:	cmp	r6, #1
   32dc4:	bne	32e9c <crc32@@Base+0x196f8>
   32dc8:	ldr	r3, [r4, #16]
   32dcc:	cmp	r3, #512	; 0x200
   32dd0:	bne	32e9c <crc32@@Base+0x196f8>
   32dd4:	movw	r1, #53880	; 0xd278
   32dd8:	add	r0, r4, #512	; 0x200
   32ddc:	movt	r1, #3
   32de0:	bl	1265c <strcmp@plt>
   32de4:	cmp	r0, #0
   32de8:	bne	32e9c <crc32@@Base+0x196f8>
   32dec:	ldr	r2, [r4, #532]	; 0x214
   32df0:	movw	r3, #16962	; 0x4242
   32df4:	movt	r3, #16962	; 0x4242
   32df8:	cmp	r2, r3
   32dfc:	bne	32e9c <crc32@@Base+0x196f8>
   32e00:	ldr	r1, [r4, #536]	; 0x218
   32e04:	mov	r2, #5
   32e08:	movt	r2, #1
   32e0c:	sub	r3, r1, #65536	; 0x10000
   32e10:	sub	r3, r3, #7
   32e14:	cmp	r1, r2
   32e18:	cmpne	r3, #1
   32e1c:	bhi	32e9c <crc32@@Base+0x196f8>
   32e20:	ldr	r3, [r4, #524]	; 0x20c
   32e24:	movw	r1, #53796	; 0xd224
   32e28:	movt	r1, #3
   32e2c:	add	r4, r4, r3
   32e30:	add	r0, r4, #8
   32e34:	bl	1265c <strcmp@plt>
   32e38:	subs	ip, r0, #0
   32e3c:	bne	32e9c <crc32@@Base+0x196f8>
   32e40:	ldrb	r3, [r4, #26]
   32e44:	cmp	r3, #5
   32e48:	bne	32e9c <crc32@@Base+0x196f8>
   32e4c:	cmp	r5, #0
   32e50:	beq	32e74 <crc32@@Base+0x196d0>
   32e54:	ldr	r2, [r4, #28]
   32e58:	movw	r1, #37232	; 0x9170
   32e5c:	ldr	r3, [r4, #48]	; 0x30
   32e60:	mov	r0, r6
   32e64:	movt	r1, #3
   32e68:	mov	r5, ip
   32e6c:	add	r2, r2, r3
   32e70:	bl	12770 <__printf_chk@plt>
   32e74:	mov	r0, r5
   32e78:	pop	{r4, r5, r6, pc}
   32e7c:	movw	r1, #53848	; 0xd258
   32e80:	mov	r0, r4
   32e84:	movt	r1, #3
   32e88:	bl	1265c <strcmp@plt>
   32e8c:	cmp	r0, #0
   32e90:	movweq	r2, #47740	; 0xba7c
   32e94:	movteq	r2, #3
   32e98:	beq	32db4 <crc32@@Base+0x19610>
   32e9c:	mvn	r5, #0
   32ea0:	mov	r0, r5
   32ea4:	pop	{r4, r5, r6, pc}
   32ea8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32eac:	mov	r2, #4
   32eb0:	mov	r5, r1
   32eb4:	mov	r4, r0
   32eb8:	movw	r1, #53916	; 0xd29c
   32ebc:	add	r0, r0, #12
   32ec0:	movt	r1, #3
   32ec4:	bl	1217c <strncmp@plt>
   32ec8:	cmp	r0, #0
   32ecc:	bne	33020 <crc32@@Base+0x1987c>
   32ed0:	movw	r1, #53924	; 0xd2a4
   32ed4:	add	r0, r4, #16
   32ed8:	movt	r1, #3
   32edc:	bl	1265c <strcmp@plt>
   32ee0:	cmp	r0, #0
   32ee4:	bne	33020 <crc32@@Base+0x1987c>
   32ee8:	ldrh	r7, [r4, #26]
   32eec:	movw	r1, #53880	; 0xd278
   32ef0:	movt	r1, #3
   32ef4:	add	r6, r4, r7
   32ef8:	mov	r0, r6
   32efc:	bl	1265c <strcmp@plt>
   32f00:	cmp	r0, #0
   32f04:	bne	33020 <crc32@@Base+0x1987c>
   32f08:	ldr	r2, [r6, #20]
   32f0c:	movw	r3, #16962	; 0x4242
   32f10:	movt	r3, #16962	; 0x4242
   32f14:	cmp	r2, r3
   32f18:	bne	33020 <crc32@@Base+0x1987c>
   32f1c:	ldr	r2, [r6, #24]
   32f20:	mov	r3, #2
   32f24:	movt	r3, #1
   32f28:	cmp	r2, r3
   32f2c:	beq	32fa8 <crc32@@Base+0x19804>
   32f30:	mov	r3, #9
   32f34:	movt	r3, #1
   32f38:	cmp	r2, r3
   32f3c:	bne	33020 <crc32@@Base+0x1987c>
   32f40:	cmp	r5, #0
   32f44:	movw	r2, #53904	; 0xd290
   32f48:	movt	r2, #3
   32f4c:	bne	32fb8 <crc32@@Base+0x19814>
   32f50:	add	r4, r4, r7, lsl #1
   32f54:	movw	r1, #53796	; 0xd224
   32f58:	add	r0, r4, #8
   32f5c:	movt	r1, #3
   32f60:	bl	1265c <strcmp@plt>
   32f64:	subs	ip, r0, #0
   32f68:	bne	33020 <crc32@@Base+0x1987c>
   32f6c:	ldrb	r3, [r4, #26]
   32f70:	cmp	r3, #2
   32f74:	bne	33020 <crc32@@Base+0x1987c>
   32f78:	cmp	r5, #0
   32f7c:	beq	32fa0 <crc32@@Base+0x197fc>
   32f80:	ldr	r2, [r4, #28]
   32f84:	movw	r1, #37232	; 0x9170
   32f88:	ldr	r3, [r4, #48]	; 0x30
   32f8c:	movt	r1, #3
   32f90:	mov	r0, #1
   32f94:	mov	r5, ip
   32f98:	add	r2, r2, r3
   32f9c:	bl	12770 <__printf_chk@plt>
   32fa0:	mov	r0, r5
   32fa4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fa8:	cmp	r5, #0
   32fac:	movw	r2, #53888	; 0xd280
   32fb0:	movt	r2, #3
   32fb4:	beq	32f50 <crc32@@Base+0x197ac>
   32fb8:	movw	r1, #53932	; 0xd2ac
   32fbc:	mov	r0, #1
   32fc0:	movt	r1, #3
   32fc4:	bl	12770 <__printf_chk@plt>
   32fc8:	ldr	r2, [r6, #24]
   32fcc:	mov	r3, #2
   32fd0:	movt	r3, #1
   32fd4:	cmp	r2, r3
   32fd8:	beq	3302c <crc32@@Base+0x19888>
   32fdc:	ldrh	r2, [r4, #26]
   32fe0:	cmp	r2, #1024	; 0x400
   32fe4:	lsrcs	r2, r2, #10
   32fe8:	movwcs	r1, #53968	; 0xd2d0
   32fec:	movwcc	r1, #53988	; 0xd2e4
   32ff0:	movtcs	r1, #3
   32ff4:	movtcc	r1, #3
   32ff8:	movcs	r0, #1
   32ffc:	movcc	r0, #1
   33000:	bl	12770 <__printf_chk@plt>
   33004:	movw	r1, #54008	; 0xd2f8
   33008:	ldrh	r2, [r4, #30]
   3300c:	movt	r1, #3
   33010:	mov	r0, #1
   33014:	bl	12770 <__printf_chk@plt>
   33018:	ldrh	r7, [r4, #26]
   3301c:	b	32f50 <crc32@@Base+0x197ac>
   33020:	mvn	r5, #0
   33024:	mov	r0, r5
   33028:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3302c:	ldrh	r2, [r4, #34]	; 0x22
   33030:	movw	r1, #53948	; 0xd2bc
   33034:	ldrh	r3, [r4, #32]
   33038:	movt	r1, #3
   3303c:	ldrh	r8, [r4, #26]
   33040:	mov	r0, #1
   33044:	mov	r9, #0
   33048:	umull	sl, fp, r2, r3
   3304c:	lsl	r6, sl, #3
   33050:	lsl	r3, fp, #3
   33054:	orr	r3, r3, sl, lsr #29
   33058:	umull	r6, r7, r6, r8
   3305c:	mla	r7, r3, r8, r7
   33060:	lsr	r2, r6, #30
   33064:	orr	r2, r2, r7, lsl #2
   33068:	bl	12770 <__printf_chk@plt>
   3306c:	b	32fdc <crc32@@Base+0x19838>
   33070:	movw	r3, #34376	; 0x8648
   33074:	movt	r3, #30
   33078:	push	{r4, lr}
   3307c:	ldr	r2, [r3]
   33080:	cmp	r2, #0
   33084:	bne	330dc <crc32@@Base+0x19938>
   33088:	ldr	r0, [r3, #4]
   3308c:	mov	ip, #2
   33090:	mov	r2, #9
   33094:	movt	ip, #1
   33098:	movt	r2, #1
   3309c:	cmp	r0, r2
   330a0:	cmpne	r0, ip
   330a4:	movw	r0, #34388	; 0x8654
   330a8:	movt	r0, #30
   330ac:	ldreq	r3, [r3, #8]
   330b0:	movne	r2, #2304	; 0x900
   330b4:	ldrheq	r2, [r3, #26]
   330b8:	mov	r3, #8960	; 0x2300
   330bc:	str	r0, [r1, #8]
   330c0:	lsleq	r2, r2, #1
   330c4:	addeq	r2, r2, #768	; 0x300
   330c8:	str	r2, [r1, #4]
   330cc:	mov	r1, #255	; 0xff
   330d0:	bl	125f0 <__memset_chk@plt>
   330d4:	mov	r0, #32
   330d8:	pop	{r4, pc}
   330dc:	mov	r2, #512	; 0x200
   330e0:	movw	r0, #34388	; 0x8654
   330e4:	str	r2, [r1, #4]
   330e8:	movt	r0, #30
   330ec:	str	r0, [r1, #8]
   330f0:	mov	r1, #255	; 0xff
   330f4:	bl	122e4 <memset@plt>
   330f8:	mov	r0, #0
   330fc:	pop	{r4, pc}
   33100:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33104:	movw	r5, #34376	; 0x8648
   33108:	movt	r5, #30
   3310c:	sub	sp, sp, #8
   33110:	mov	r4, r0
   33114:	ldr	r6, [r1, #44]	; 0x2c
   33118:	ldr	r2, [r5]
   3311c:	ldr	r9, [r3, #56]	; 0x38
   33120:	cmp	r2, #0
   33124:	bne	332d8 <crc32@@Base+0x19b34>
   33128:	ldr	r7, [r5, #4]
   3312c:	mov	r2, #2
   33130:	mov	r3, #9
   33134:	movt	r2, #1
   33138:	movt	r3, #1
   3313c:	cmp	r7, r3
   33140:	cmpne	r7, r2
   33144:	beq	33218 <crc32@@Base+0x19a74>
   33148:	mov	r3, #7
   3314c:	movt	r3, #1
   33150:	cmp	r7, r3
   33154:	beq	33330 <crc32@@Base+0x19b8c>
   33158:	mov	r3, #5
   3315c:	movt	r3, #1
   33160:	cmp	r7, r3
   33164:	beq	33324 <crc32@@Base+0x19b80>
   33168:	mov	r2, #8
   3316c:	movt	r2, #1
   33170:	cmp	r7, r2
   33174:	movw	r3, #53848	; 0xd258
   33178:	movt	r3, #3
   3317c:	movne	r3, #0
   33180:	mov	r1, #12
   33184:	mov	r0, r4
   33188:	movw	r2, #55508	; 0xd8d4
   3318c:	movt	r2, #3
   33190:	bl	122fc <snprintf@plt>
   33194:	ldr	r8, [r5, #4]
   33198:	mov	r3, #512	; 0x200
   3319c:	mov	r7, #1
   331a0:	str	r3, [r4, #16]
   331a4:	add	r0, r4, r3
   331a8:	add	r5, r4, #1536	; 0x600
   331ac:	str	r7, [r4, #12]
   331b0:	mov	r2, #8
   331b4:	movw	r1, #53880	; 0xd278
   331b8:	movt	r1, #3
   331bc:	bl	126bc <strncpy@plt>
   331c0:	mov	r1, #1536	; 0x600
   331c4:	str	r8, [r4, #536]	; 0x218
   331c8:	mov	r0, r5
   331cc:	str	r1, [r4, #524]	; 0x20c
   331d0:	mov	ip, #5
   331d4:	str	r1, [r4, #540]	; 0x21c
   331d8:	mov	r3, r9
   331dc:	str	r7, [r4, #520]	; 0x208
   331e0:	movw	r2, #16962	; 0x4242
   331e4:	str	r6, [r4, #528]	; 0x210
   331e8:	movt	r2, #16962	; 0x4242
   331ec:	str	r6, [r4, #544]	; 0x220
   331f0:	str	r2, [r4, #532]	; 0x214
   331f4:	mov	r2, r1
   331f8:	str	ip, [sp]
   331fc:	mov	r1, r6
   33200:	bl	32b90 <crc32@@Base+0x193ec>
   33204:	mov	r0, r5
   33208:	sub	r1, r6, #1568	; 0x620
   3320c:	add	sp, sp, #8
   33210:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   33214:	b	32cf0 <crc32@@Base+0x1954c>
   33218:	add	sl, r0, #512	; 0x200
   3321c:	ldr	r8, [r5, #8]
   33220:	mov	r5, r0
   33224:	mov	r2, #128	; 0x80
   33228:	mov	r0, r5
   3322c:	mov	r1, r8
   33230:	add	r5, r5, r2
   33234:	bl	1259c <memcpy@plt>
   33238:	cmp	sl, r5
   3323c:	bne	33224 <crc32@@Base+0x19a80>
   33240:	ldrh	r1, [r8, #26]
   33244:	add	r0, r6, r1
   33248:	add	r5, r4, r1
   3324c:	sub	r0, r0, #1
   33250:	bl	35d2c <crc32@@Base+0x1c588>
   33254:	mov	r2, #8
   33258:	movw	r1, #53880	; 0xd278
   3325c:	movt	r1, #3
   33260:	mov	sl, r0
   33264:	mov	r0, r5
   33268:	bl	126bc <strncpy@plt>
   3326c:	ldrh	r2, [r8, #26]
   33270:	mov	ip, #2
   33274:	str	r7, [r5, #24]
   33278:	str	sl, [r5, #16]
   3327c:	mov	r3, r9
   33280:	lsl	r2, r2, #1
   33284:	str	sl, [r5, #32]
   33288:	add	r4, r4, r2
   3328c:	str	ip, [r5, #12]
   33290:	str	ip, [r5, #28]
   33294:	movw	r1, #16962	; 0x4242
   33298:	mov	r0, r4
   3329c:	movt	r1, #16962	; 0x4242
   332a0:	str	r1, [r5, #20]
   332a4:	mov	r1, #1
   332a8:	str	r1, [r5, #8]
   332ac:	str	r1, [r5, #36]	; 0x24
   332b0:	mov	r1, r6
   332b4:	str	ip, [sp]
   332b8:	bl	32b90 <crc32@@Base+0x193ec>
   332bc:	ldrh	r1, [r8, #26]
   332c0:	mov	r0, r4
   332c4:	sub	r1, r6, r1, lsl #1
   332c8:	sub	r1, r1, #32
   332cc:	add	sp, sp, #8
   332d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   332d4:	b	32cf0 <crc32@@Base+0x1954c>
   332d8:	add	r3, r0, #8
   332dc:	str	r9, [r0, #40]	; 0x28
   332e0:	sub	r6, r6, #512	; 0x200
   332e4:	mvn	r1, #0
   332e8:	str	r6, [r0, #4]
   332ec:	movw	r2, #5768	; 0x1688
   332f0:	str	r1, [r4, #44]	; 0x2c
   332f4:	movt	r2, #22664	; 0x5888
   332f8:	mov	r0, r3
   332fc:	str	r2, [r4]
   33300:	mov	r1, #0
   33304:	mov	r2, #32
   33308:	bl	122e4 <memset@plt>
   3330c:	movw	r1, #64852	; 0xfd54
   33310:	mov	r2, #32
   33314:	movt	r1, #4
   33318:	add	sp, sp, #8
   3331c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   33320:	b	126bc <strncpy@plt>
   33324:	movw	r3, #53836	; 0xd24c
   33328:	movt	r3, #3
   3332c:	b	33180 <crc32@@Base+0x199dc>
   33330:	movw	r3, #53828	; 0xd244
   33334:	movt	r3, #3
   33338:	b	33180 <crc32@@Base+0x199dc>
   3333c:	ldr	r2, [r0]
   33340:	movw	r3, #5768	; 0x1688
   33344:	movt	r3, #22664	; 0x5888
   33348:	cmp	r2, r3
   3334c:	push	{r4, lr}
   33350:	mov	r4, r0
   33354:	beq	33394 <crc32@@Base+0x19bf0>
   33358:	movw	r0, #54060	; 0xd32c
   3335c:	movt	r0, #3
   33360:	bl	1226c <puts@plt>
   33364:	movw	r1, #54108	; 0xd35c
   33368:	mov	r0, r4
   3336c:	movt	r1, #3
   33370:	bl	1265c <strcmp@plt>
   33374:	mov	r1, #1
   33378:	cmp	r0, #0
   3337c:	mov	r0, r4
   33380:	beq	3338c <crc32@@Base+0x19be8>
   33384:	pop	{r4, lr}
   33388:	b	32d50 <crc32@@Base+0x195ac>
   3338c:	pop	{r4, lr}
   33390:	b	32ea8 <crc32@@Base+0x19704>
   33394:	movw	r0, #54028	; 0xd30c
   33398:	movt	r0, #3
   3339c:	bl	1226c <puts@plt>
   333a0:	ldr	r2, [r4, #40]	; 0x28
   333a4:	movw	r1, #37232	; 0x9170
   333a8:	mov	r0, #1
   333ac:	movt	r1, #3
   333b0:	pop	{r4, lr}
   333b4:	b	12770 <__printf_chk@plt>
   333b8:	ldr	r1, [r0]
   333bc:	movw	r2, #5768	; 0x1688
   333c0:	movt	r2, #22664	; 0x5888
   333c4:	cmp	r1, r2
   333c8:	beq	33400 <crc32@@Base+0x19c5c>
   333cc:	push	{r4, lr}
   333d0:	movw	r1, #54108	; 0xd35c
   333d4:	movt	r1, #3
   333d8:	mov	r4, r0
   333dc:	bl	1265c <strcmp@plt>
   333e0:	subs	r1, r0, #0
   333e4:	mov	r0, r4
   333e8:	beq	333f8 <crc32@@Base+0x19c54>
   333ec:	mov	r1, #0
   333f0:	pop	{r4, lr}
   333f4:	b	32d50 <crc32@@Base+0x195ac>
   333f8:	pop	{r4, lr}
   333fc:	b	32ea8 <crc32@@Base+0x19704>
   33400:	mov	r0, #0
   33404:	bx	lr
   33408:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3340c:	ldr	r3, [r0, #56]	; 0x38
   33410:	cmp	r3, #0
   33414:	beq	3385c <crc32@@Base+0x1a0b8>
   33418:	ldr	r0, [r0, #64]	; 0x40
   3341c:	cmp	r0, #0
   33420:	beq	33884 <crc32@@Base+0x1a0e0>
   33424:	bl	12308 <__strdup@plt>
   33428:	movw	r6, #64852	; 0xfd54
   3342c:	subs	r8, r0, #0
   33430:	movteq	r6, #4
   33434:	beq	336b8 <crc32@@Base+0x19f14>
   33438:	movw	r7, #54196	; 0xd3b4
   3343c:	mov	r4, #19
   33440:	movt	r6, #4
   33444:	movt	r7, #3
   33448:	movt	r4, #128	; 0x80
   3344c:	mov	r9, r8
   33450:	b	33550 <crc32@@Base+0x19dac>
   33454:	mov	r0, sl
   33458:	bl	125c0 <strlen@plt>
   3345c:	sub	r0, r0, #1
   33460:	adds	r1, sl, r0
   33464:	bcs	334b8 <crc32@@Base+0x19d14>
   33468:	ldrb	r3, [sl, r0]
   3346c:	sub	r3, r3, #9
   33470:	uxtb	r3, r3
   33474:	cmp	r3, #23
   33478:	bhi	334b8 <crc32@@Base+0x19d14>
   3347c:	mvn	r3, r4, lsr r3
   33480:	tst	r3, #1
   33484:	bne	334b8 <crc32@@Base+0x19d14>
   33488:	sub	r2, r1, #1
   3348c:	sub	r0, sl, #1
   33490:	cmp	r2, r0
   33494:	mov	r1, r2
   33498:	sub	r2, r2, #1
   3349c:	beq	334b8 <crc32@@Base+0x19d14>
   334a0:	ldrb	r3, [r1]
   334a4:	sub	r3, r3, #9
   334a8:	uxtb	r3, r3
   334ac:	cmp	r3, #23
   334b0:	mvn	r3, r4, lsr r3
   334b4:	bls	3368c <crc32@@Base+0x19ee8>
   334b8:	ldrb	r3, [r1, #1]
   334bc:	sub	r3, r3, #9
   334c0:	uxtb	r3, r3
   334c4:	cmp	r3, #23
   334c8:	bhi	334d8 <crc32@@Base+0x19d34>
   334cc:	mvn	r3, r4, lsr r3
   334d0:	ands	r3, r3, #1
   334d4:	strbeq	r3, [r1, #1]
   334d8:	mov	r1, r7
   334dc:	mov	r0, r9
   334e0:	bl	1265c <strcmp@plt>
   334e4:	movw	r1, #54204	; 0xd3bc
   334e8:	movt	r1, #3
   334ec:	cmp	r0, #0
   334f0:	mov	r0, r9
   334f4:	streq	sl, [r6, #32]
   334f8:	bl	1265c <strcmp@plt>
   334fc:	ldrb	r3, [r9]
   33500:	cmp	r0, #0
   33504:	streq	sl, [r6, #36]	; 0x24
   33508:	cmp	r3, #108	; 0x6c
   3350c:	bne	33528 <crc32@@Base+0x19d84>
   33510:	ldrb	r3, [r9, #1]
   33514:	cmp	r3, #107	; 0x6b
   33518:	bne	33528 <crc32@@Base+0x19d84>
   3351c:	ldrb	r3, [r9, #2]
   33520:	cmp	r3, #0
   33524:	streq	sl, [r6, #40]	; 0x28
   33528:	mov	r0, r9
   3352c:	movw	r1, #54216	; 0xd3c8
   33530:	movt	r1, #3
   33534:	bl	1265c <strcmp@plt>
   33538:	cmp	r0, #0
   3353c:	beq	337b4 <crc32@@Base+0x1a010>
   33540:	cmp	r5, #0
   33544:	beq	336b8 <crc32@@Base+0x19f14>
   33548:	adds	r9, r5, #1
   3354c:	beq	336b8 <crc32@@Base+0x19f14>
   33550:	mov	r1, #59	; 0x3b
   33554:	mov	r0, r9
   33558:	bl	12764 <strchr@plt>
   3355c:	subs	r5, r0, #0
   33560:	beq	336a4 <crc32@@Base+0x19f00>
   33564:	mov	r3, #0
   33568:	mov	r1, #61	; 0x3d
   3356c:	strb	r3, [r5]
   33570:	mov	r0, r9
   33574:	bl	12764 <strchr@plt>
   33578:	subs	fp, r0, #0
   3357c:	beq	33548 <crc32@@Base+0x19da4>
   33580:	mov	r3, #0
   33584:	strb	r3, [fp]
   33588:	ldrb	r3, [r9]
   3358c:	add	sl, fp, #1
   33590:	sub	r3, r3, #9
   33594:	uxtb	r3, r3
   33598:	cmp	r3, #23
   3359c:	bhi	335c4 <crc32@@Base+0x19e20>
   335a0:	mvn	r3, r4, lsr r3
   335a4:	tst	r3, #1
   335a8:	bne	335c4 <crc32@@Base+0x19e20>
   335ac:	ldrb	r3, [r9, #1]!
   335b0:	sub	r3, r3, #9
   335b4:	uxtb	r3, r3
   335b8:	cmp	r3, #23
   335bc:	mvn	r3, r4, lsr r3
   335c0:	bls	335a4 <crc32@@Base+0x19e00>
   335c4:	mov	r0, r9
   335c8:	bl	125c0 <strlen@plt>
   335cc:	sub	r0, r0, #1
   335d0:	adds	r1, r9, r0
   335d4:	bcs	33628 <crc32@@Base+0x19e84>
   335d8:	ldrb	r3, [r9, r0]
   335dc:	sub	r3, r3, #9
   335e0:	uxtb	r3, r3
   335e4:	cmp	r3, #23
   335e8:	bhi	33628 <crc32@@Base+0x19e84>
   335ec:	mvn	r3, r4, lsr r3
   335f0:	tst	r3, #1
   335f4:	bne	33628 <crc32@@Base+0x19e84>
   335f8:	sub	r2, r1, #1
   335fc:	sub	r0, r9, #1
   33600:	cmp	r2, r0
   33604:	mov	r1, r2
   33608:	sub	r2, r2, #1
   3360c:	beq	33628 <crc32@@Base+0x19e84>
   33610:	ldrb	r3, [r1]
   33614:	sub	r3, r3, #9
   33618:	uxtb	r3, r3
   3361c:	cmp	r3, #23
   33620:	mvn	r3, r4, lsr r3
   33624:	bls	33698 <crc32@@Base+0x19ef4>
   33628:	ldrb	r3, [r1, #1]
   3362c:	sub	r3, r3, #9
   33630:	uxtb	r3, r3
   33634:	cmp	r3, #23
   33638:	bhi	33648 <crc32@@Base+0x19ea4>
   3363c:	mvn	r3, r4, lsr r3
   33640:	ands	r3, r3, #1
   33644:	strbeq	r3, [r1, #1]
   33648:	ldrb	r3, [fp, #1]
   3364c:	sub	r3, r3, #9
   33650:	uxtb	r3, r3
   33654:	cmp	r3, #23
   33658:	bhi	33454 <crc32@@Base+0x19cb0>
   3365c:	mvn	r3, r4, lsr r3
   33660:	tst	r3, #1
   33664:	bne	33454 <crc32@@Base+0x19cb0>
   33668:	ldrb	r2, [sl, #1]!
   3366c:	sub	r2, r2, #9
   33670:	uxtb	r2, r2
   33674:	cmp	r2, #23
   33678:	mvn	r2, r4, lsr r2
   3367c:	bhi	33454 <crc32@@Base+0x19cb0>
   33680:	tst	r2, #1
   33684:	beq	33668 <crc32@@Base+0x19ec4>
   33688:	b	33454 <crc32@@Base+0x19cb0>
   3368c:	tst	r3, #1
   33690:	beq	33490 <crc32@@Base+0x19cec>
   33694:	b	334b8 <crc32@@Base+0x19d14>
   33698:	tst	r3, #1
   3369c:	beq	33600 <crc32@@Base+0x19e5c>
   336a0:	b	33628 <crc32@@Base+0x19e84>
   336a4:	mov	r1, #61	; 0x3d
   336a8:	mov	r0, r9
   336ac:	bl	12764 <strchr@plt>
   336b0:	subs	fp, r0, #0
   336b4:	bne	33580 <crc32@@Base+0x19ddc>
   336b8:	ldr	r3, [r6, #40]	; 0x28
   336bc:	cmp	r3, #0
   336c0:	beq	336d0 <crc32@@Base+0x19f2c>
   336c4:	ldrb	r3, [r3]
   336c8:	cmp	r3, #49	; 0x31
   336cc:	beq	337fc <crc32@@Base+0x1a058>
   336d0:	ldr	r7, [r6, #32]
   336d4:	movw	r0, #38228	; 0x9554
   336d8:	movt	r0, #3
   336dc:	movw	r5, #52656	; 0xcdb0
   336e0:	mov	r4, #0
   336e4:	movt	r5, #3
   336e8:	mov	r1, r7
   336ec:	bl	1265c <strcmp@plt>
   336f0:	cmp	r0, #0
   336f4:	beq	33718 <crc32@@Base+0x19f74>
   336f8:	add	r4, r4, #1
   336fc:	cmp	r4, #5
   33700:	beq	337d4 <crc32@@Base+0x1a030>
   33704:	ldr	r0, [r5, r4, lsl #3]
   33708:	mov	r1, r7
   3370c:	bl	1265c <strcmp@plt>
   33710:	cmp	r0, #0
   33714:	bne	336f8 <crc32@@Base+0x19f54>
   33718:	movw	r3, #52656	; 0xcdb0
   3371c:	movt	r3, #3
   33720:	add	r3, r3, r4, lsl #3
   33724:	movw	r9, #34376	; 0x8648
   33728:	movt	r9, #30
   3372c:	ldr	r5, [r3, #4]
   33730:	str	r5, [r9, #4]
   33734:	movw	r0, #54120	; 0xd368
   33738:	ldr	r7, [r6, #36]	; 0x24
   3373c:	movt	r0, #3
   33740:	mov	r4, #0
   33744:	ldr	sl, [pc, #416]	; 338ec <crc32@@Base+0x1a148>
   33748:	b	33750 <crc32@@Base+0x19fac>
   3374c:	ldr	r0, [sl, r4, lsl #3]
   33750:	mov	r1, r7
   33754:	bl	1265c <strcmp@plt>
   33758:	cmp	r0, #0
   3375c:	beq	337e4 <crc32@@Base+0x1a040>
   33760:	add	r4, r4, #1
   33764:	cmp	r4, #9
   33768:	bne	3374c <crc32@@Base+0x19fa8>
   3376c:	mov	r0, r8
   33770:	bl	12128 <free@plt>
   33774:	cmp	r5, #0
   33778:	beq	3381c <crc32@@Base+0x1a078>
   3377c:	mov	r3, #2
   33780:	mov	r0, #9
   33784:	movt	r3, #1
   33788:	movt	r0, #1
   3378c:	cmp	r5, r0
   33790:	cmpne	r5, r3
   33794:	moveq	r0, #1
   33798:	movne	r0, #0
   3379c:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   337a0:	ldr	r3, [r9, #8]
   337a4:	cmp	r3, #0
   337a8:	beq	338ac <crc32@@Base+0x1a108>
   337ac:	mov	r0, #0
   337b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   337b4:	mov	r3, sl
   337b8:	movw	r2, #55508	; 0xd8d4
   337bc:	movw	r0, #64852	; 0xfd54
   337c0:	movt	r2, #3
   337c4:	mov	r1, #32
   337c8:	movt	r0, #4
   337cc:	bl	122fc <snprintf@plt>
   337d0:	b	33540 <crc32@@Base+0x19d9c>
   337d4:	movw	r9, #34376	; 0x8648
   337d8:	movt	r9, #30
   337dc:	ldr	r5, [r9, #4]
   337e0:	b	33734 <crc32@@Base+0x19f90>
   337e4:	movw	r3, #52656	; 0xcdb0
   337e8:	movt	r3, #3
   337ec:	add	r3, r3, r4, lsl #3
   337f0:	ldr	r3, [r3, #44]	; 0x2c
   337f4:	str	r3, [r9, #8]
   337f8:	b	3376c <crc32@@Base+0x19fc8>
   337fc:	movw	r3, #34376	; 0x8648
   33800:	movt	r3, #30
   33804:	mov	r0, r8
   33808:	mov	r2, #1
   3380c:	str	r2, [r3]
   33810:	bl	12128 <free@plt>
   33814:	mov	r0, #0
   33818:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3381c:	movw	r4, #65044	; 0xfe14
   33820:	movt	r4, #4
   33824:	mov	r2, #41	; 0x29
   33828:	mov	r1, #1
   3382c:	ldr	r3, [r4]
   33830:	movw	r0, #54224	; 0xd3d0
   33834:	movt	r0, #3
   33838:	bl	12578 <fwrite@plt>
   3383c:	ldr	r3, [r4]
   33840:	mov	r2, #40	; 0x28
   33844:	mov	r1, #1
   33848:	movw	r0, #54268	; 0xd3fc
   3384c:	movt	r0, #3
   33850:	bl	12578 <fwrite@plt>
   33854:	mvn	r0, #21
   33858:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3385c:	movw	r3, #65044	; 0xfe14
   33860:	movt	r3, #4
   33864:	mov	r2, #33	; 0x21
   33868:	mov	r1, #1
   3386c:	ldr	r3, [r3]
   33870:	movw	r0, #54128	; 0xd370
   33874:	movt	r0, #3
   33878:	bl	12578 <fwrite@plt>
   3387c:	mvn	r0, #21
   33880:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33884:	movw	r3, #65044	; 0xfe14
   33888:	movt	r3, #4
   3388c:	mov	r2, #31
   33890:	mov	r1, #1
   33894:	ldr	r3, [r3]
   33898:	movw	r0, #54164	; 0xd394
   3389c:	movt	r0, #3
   338a0:	bl	12578 <fwrite@plt>
   338a4:	mvn	r0, #21
   338a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338ac:	movw	r4, #65044	; 0xfe14
   338b0:	movt	r4, #4
   338b4:	mov	r2, #40	; 0x28
   338b8:	mov	r1, #1
   338bc:	ldr	r3, [r4]
   338c0:	movw	r0, #54312	; 0xd428
   338c4:	movt	r0, #3
   338c8:	bl	12578 <fwrite@plt>
   338cc:	ldr	r0, [r4]
   338d0:	ldr	r3, [r6, #32]
   338d4:	mov	r1, #1
   338d8:	movw	r2, #54356	; 0xd454
   338dc:	movt	r2, #3
   338e0:	bl	122b4 <__fprintf_chk@plt>
   338e4:	mvn	r0, #21
   338e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338ec:	ldrdeq	ip, [r3], -r8
   338f0:	push	{r4, r5, r6, lr}
   338f4:	mov	r4, r0
   338f8:	mov	r5, r1
   338fc:	bl	12638 <ENGINE_load_builtin_engines@plt>
   33900:	mov	r0, r4
   33904:	bl	12368 <ENGINE_by_id@plt>
   33908:	subs	r4, r0, #0
   3390c:	beq	33998 <crc32@@Base+0x1a1f4>
   33910:	bl	1223c <ENGINE_init@plt>
   33914:	cmp	r0, #0
   33918:	beq	33938 <crc32@@Base+0x1a194>
   3391c:	mov	r0, r4
   33920:	bl	12338 <ENGINE_set_default_RSA@plt>
   33924:	cmp	r0, #0
   33928:	beq	3396c <crc32@@Base+0x1a1c8>
   3392c:	str	r4, [r5]
   33930:	mov	r0, #0
   33934:	pop	{r4, r5, r6, pc}
   33938:	movw	r3, #65044	; 0xfe14
   3393c:	movt	r3, #4
   33940:	movw	r0, #54584	; 0xd538
   33944:	mov	r2, #27
   33948:	ldr	r3, [r3]
   3394c:	movt	r0, #3
   33950:	mov	r1, #1
   33954:	bl	12578 <fwrite@plt>
   33958:	mov	r0, r4
   3395c:	bl	121a0 <ENGINE_free@plt>
   33960:	bl	12254 <ENGINE_cleanup@plt>
   33964:	mvn	r0, #0
   33968:	pop	{r4, r5, r6, pc}
   3396c:	movw	r3, #65044	; 0xfe14
   33970:	movt	r3, #4
   33974:	mov	r2, #39	; 0x27
   33978:	mov	r1, #1
   3397c:	ldr	r3, [r3]
   33980:	movw	r0, #54612	; 0xd554
   33984:	movt	r0, #3
   33988:	bl	12578 <fwrite@plt>
   3398c:	mov	r0, r4
   33990:	bl	12104 <ENGINE_finish@plt>
   33994:	b	33958 <crc32@@Base+0x1a1b4>
   33998:	movw	r3, #65044	; 0xfe14
   3399c:	movt	r3, #4
   339a0:	movw	r0, #54560	; 0xd520
   339a4:	mov	r2, #23
   339a8:	ldr	r3, [r3]
   339ac:	mov	r1, #1
   339b0:	movt	r0, #3
   339b4:	bl	12578 <fwrite@plt>
   339b8:	b	33960 <crc32@@Base+0x1a1bc>
   339bc:	push	{r4, r5, r6, lr}
   339c0:	mov	r6, r0
   339c4:	bl	124d0 <ERR_get_error@plt>
   339c8:	movw	r4, #65044	; 0xfe14
   339cc:	movt	r4, #4
   339d0:	ldr	r1, [r4]
   339d4:	mov	r5, r0
   339d8:	mov	r0, r6
   339dc:	bl	12710 <fputs@plt>
   339e0:	mov	r0, r5
   339e4:	mov	r1, #0
   339e8:	ldr	r4, [r4]
   339ec:	bl	12068 <ERR_error_string@plt>
   339f0:	mov	r1, #1
   339f4:	movw	r2, #28600	; 0x6fb8
   339f8:	movt	r2, #3
   339fc:	mov	r3, r0
   33a00:	mov	r0, r4
   33a04:	bl	122b4 <__fprintf_chk@plt>
   33a08:	mvn	r0, #0
   33a0c:	pop	{r4, r5, r6, pc}
   33a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33a14:	movw	r4, #61168	; 0xeef0
   33a18:	movt	r4, #4
   33a1c:	mov	r7, r3
   33a20:	sub	sp, sp, #1040	; 0x410
   33a24:	mov	r5, r2
   33a28:	ldr	r3, [r4]
   33a2c:	sub	sp, sp, #8
   33a30:	mov	r2, #0
   33a34:	mov	r8, r0
   33a38:	str	r2, [r7]
   33a3c:	mov	r0, r5
   33a40:	mov	sl, r1
   33a44:	str	r3, [sp, #1044]	; 0x414
   33a48:	bl	12170 <ENGINE_get_id@plt>
   33a4c:	cmp	r0, #0
   33a50:	beq	33b28 <crc32@@Base+0x1a384>
   33a54:	movw	r1, #54652	; 0xd57c
   33a58:	movt	r1, #3
   33a5c:	bl	1265c <strcmp@plt>
   33a60:	subs	r9, r0, #0
   33a64:	bne	33b28 <crc32@@Base+0x1a384>
   33a68:	cmp	r8, #0
   33a6c:	add	r6, sp, #20
   33a70:	mov	r3, #1024	; 0x400
   33a74:	beq	33af0 <crc32@@Base+0x1a34c>
   33a78:	movw	r2, #54660	; 0xd584
   33a7c:	str	sl, [sp, #8]
   33a80:	movt	r2, #3
   33a84:	str	r8, [sp, #4]
   33a88:	str	r2, [sp]
   33a8c:	mov	r0, r6
   33a90:	mov	r1, r3
   33a94:	mov	r2, #1
   33a98:	bl	125cc <__snprintf_chk@plt>
   33a9c:	mov	r3, #0
   33aa0:	mov	r0, r5
   33aa4:	mov	r1, r6
   33aa8:	mov	r2, r3
   33aac:	bl	12098 <ENGINE_load_private_key@plt>
   33ab0:	subs	r5, r0, #0
   33ab4:	beq	33b14 <crc32@@Base+0x1a370>
   33ab8:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   33abc:	subs	r6, r0, #0
   33ac0:	beq	33b50 <crc32@@Base+0x1a3ac>
   33ac4:	mov	r0, r5
   33ac8:	bl	120b0 <EVP_PKEY_free@plt>
   33acc:	str	r6, [r7]
   33ad0:	ldr	r2, [sp, #1044]	; 0x414
   33ad4:	mov	r0, r9
   33ad8:	ldr	r3, [r4]
   33adc:	cmp	r2, r3
   33ae0:	bne	33b6c <crc32@@Base+0x1a3c8>
   33ae4:	add	sp, sp, #1040	; 0x410
   33ae8:	add	sp, sp, #8
   33aec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33af0:	str	sl, [sp, #4]
   33af4:	movw	r2, #54696	; 0xd5a8
   33af8:	mov	r0, r6
   33afc:	movt	r2, #3
   33b00:	mov	r1, r3
   33b04:	str	r2, [sp]
   33b08:	mov	r2, #1
   33b0c:	bl	125cc <__snprintf_chk@plt>
   33b10:	b	33a9c <crc32@@Base+0x1a2f8>
   33b14:	movw	r0, #54752	; 0xd5e0
   33b18:	movt	r0, #3
   33b1c:	bl	339bc <crc32@@Base+0x1a218>
   33b20:	mov	r9, r0
   33b24:	b	33ad0 <crc32@@Base+0x1a32c>
   33b28:	movw	r3, #65044	; 0xfe14
   33b2c:	movt	r3, #4
   33b30:	movw	r0, #54728	; 0xd5c8
   33b34:	mov	r2, #21
   33b38:	ldr	r3, [r3]
   33b3c:	mov	r1, #1
   33b40:	movt	r0, #3
   33b44:	mvn	r9, #94	; 0x5e
   33b48:	bl	12578 <fwrite@plt>
   33b4c:	b	33ad0 <crc32@@Base+0x1a32c>
   33b50:	movw	r0, #54792	; 0xd608
   33b54:	movt	r0, #3
   33b58:	bl	339bc <crc32@@Base+0x1a218>
   33b5c:	mov	r0, r5
   33b60:	bl	120b0 <EVP_PKEY_free@plt>
   33b64:	mvn	r9, #21
   33b68:	b	33ad0 <crc32@@Base+0x1a32c>
   33b6c:	bl	12494 <__stack_chk_fail@plt>
   33b70:	push	{r4, r5, r6, r7, r8, lr}
   33b74:	movw	r5, #61168	; 0xeef0
   33b78:	movt	r5, #4
   33b7c:	sub	sp, sp, #1040	; 0x410
   33b80:	sub	sp, sp, #8
   33b84:	mov	r3, #1024	; 0x400
   33b88:	ldr	ip, [r5]
   33b8c:	mov	r6, r2
   33b90:	str	r1, [sp, #8]
   33b94:	movw	r2, #54828	; 0xd62c
   33b98:	str	r0, [sp, #4]
   33b9c:	mov	r1, r3
   33ba0:	movt	r2, #3
   33ba4:	mov	r4, #0
   33ba8:	str	r2, [sp]
   33bac:	add	r0, sp, #20
   33bb0:	mov	r2, #1
   33bb4:	str	r4, [r6]
   33bb8:	str	ip, [sp, #1044]	; 0x414
   33bbc:	bl	125cc <__snprintf_chk@plt>
   33bc0:	add	r0, sp, #20
   33bc4:	movw	r1, #49540	; 0xc184
   33bc8:	movt	r1, #3
   33bcc:	bl	1232c <fopen@plt>
   33bd0:	subs	r7, r0, #0
   33bd4:	beq	33c1c <crc32@@Base+0x1a478>
   33bd8:	add	r3, sp, #20
   33bdc:	mov	r2, r4
   33be0:	mov	r1, r4
   33be4:	bl	121e8 <PEM_read_RSAPrivateKey@plt>
   33be8:	subs	r8, r0, #0
   33bec:	beq	33c58 <crc32@@Base+0x1a4b4>
   33bf0:	mov	r0, r7
   33bf4:	bl	125fc <fclose@plt>
   33bf8:	mov	r0, r4
   33bfc:	str	r8, [r6]
   33c00:	ldr	r2, [sp, #1044]	; 0x414
   33c04:	ldr	r3, [r5]
   33c08:	cmp	r2, r3
   33c0c:	bne	33c74 <crc32@@Base+0x1a4d0>
   33c10:	add	sp, sp, #1040	; 0x410
   33c14:	add	sp, sp, #8
   33c18:	pop	{r4, r5, r6, r7, r8, pc}
   33c1c:	movw	r3, #65044	; 0xfe14
   33c20:	movt	r3, #4
   33c24:	ldr	r4, [r3]
   33c28:	bl	1268c <__errno_location@plt>
   33c2c:	ldr	r0, [r0]
   33c30:	bl	12200 <strerror@plt>
   33c34:	add	r3, sp, #20
   33c38:	movw	r2, #54840	; 0xd638
   33c3c:	mov	r1, #1
   33c40:	movt	r2, #3
   33c44:	str	r0, [sp]
   33c48:	mov	r0, r4
   33c4c:	bl	122b4 <__fprintf_chk@plt>
   33c50:	mvn	r0, #1
   33c54:	b	33c00 <crc32@@Base+0x1a45c>
   33c58:	movw	r0, #54884	; 0xd664
   33c5c:	movt	r0, #3
   33c60:	bl	339bc <crc32@@Base+0x1a218>
   33c64:	mov	r0, r7
   33c68:	bl	125fc <fclose@plt>
   33c6c:	mvn	r0, #70	; 0x46
   33c70:	b	33c00 <crc32@@Base+0x1a45c>
   33c74:	bl	12494 <__stack_chk_fail@plt>
   33c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c7c:	sub	sp, sp, #28
   33c80:	mov	r5, r3
   33c84:	ldr	r4, [sp, #64]	; 0x40
   33c88:	str	r2, [sp, #20]
   33c8c:	cmp	r4, #0
   33c90:	add	r2, r4, #31
   33c94:	strd	r0, [sp, #12]
   33c98:	movlt	r4, r2
   33c9c:	bl	12758 <BN_new@plt>
   33ca0:	mov	r6, r0
   33ca4:	bl	12758 <BN_new@plt>
   33ca8:	mov	sl, r0
   33cac:	bl	12758 <BN_new@plt>
   33cb0:	mov	fp, r0
   33cb4:	bl	12758 <BN_new@plt>
   33cb8:	cmp	sl, #0
   33cbc:	cmpne	r6, #0
   33cc0:	beq	33dd0 <crc32@@Base+0x1a62c>
   33cc4:	cmp	r0, #0
   33cc8:	cmpne	fp, #0
   33ccc:	mov	r8, r0
   33cd0:	beq	33dd0 <crc32@@Base+0x1a62c>
   33cd4:	bl	12398 <BN_CTX_new@plt>
   33cd8:	asr	r4, r4, #5
   33cdc:	mov	r1, #2
   33ce0:	lsl	r3, r4, r1
   33ce4:	str	r3, [sp, #8]
   33ce8:	mov	r4, r3
   33cec:	mov	r9, r0
   33cf0:	mov	r0, sl
   33cf4:	bl	124ac <BN_set_word@plt>
   33cf8:	mov	r1, #32
   33cfc:	mov	r0, fp
   33d00:	bl	124ac <BN_set_word@plt>
   33d04:	mov	r3, r9
   33d08:	mov	r2, fp
   33d0c:	mov	r1, sl
   33d10:	mov	r0, r8
   33d14:	bl	12428 <BN_exp@plt>
   33d18:	mov	r0, r4
   33d1c:	bl	125a8 <malloc@plt>
   33d20:	subs	r7, r0, #0
   33d24:	beq	33df8 <crc32@@Base+0x1a654>
   33d28:	ldr	r3, [sp, #8]
   33d2c:	sub	r4, r3, #4
   33d30:	adds	r4, r7, r4
   33d34:	bcs	33d78 <crc32@@Base+0x1a5d4>
   33d38:	mov	r3, r8
   33d3c:	mov	r2, r5
   33d40:	mov	r1, r6
   33d44:	str	r9, [sp]
   33d48:	mov	r0, #0
   33d4c:	bl	12374 <BN_div@plt>
   33d50:	mov	r0, r6
   33d54:	bl	124e8 <BN_get_word@plt>
   33d58:	mov	r2, #32
   33d5c:	mov	r1, r5
   33d60:	rev	r3, r0
   33d64:	mov	r0, r5
   33d68:	str	r3, [r4], #-4
   33d6c:	bl	12644 <BN_rshift@plt>
   33d70:	cmp	r7, r4
   33d74:	bls	33d38 <crc32@@Base+0x1a594>
   33d78:	ldr	r3, [sp, #8]
   33d7c:	add	r0, sp, #12
   33d80:	str	r3, [sp]
   33d84:	mov	r3, r7
   33d88:	ldm	r0, {r0, r1, r2}
   33d8c:	bl	2f000 <crc32@@Base+0x1585c>
   33d90:	mov	r4, r0
   33d94:	mov	r0, r7
   33d98:	bl	12128 <free@plt>
   33d9c:	mov	r0, r6
   33da0:	bl	12248 <BN_free@plt>
   33da4:	mov	r0, sl
   33da8:	bl	12248 <BN_free@plt>
   33dac:	mov	r0, fp
   33db0:	bl	12248 <BN_free@plt>
   33db4:	mov	r0, r8
   33db8:	bl	12248 <BN_free@plt>
   33dbc:	cmp	r4, #0
   33dc0:	mvnne	r4, #2
   33dc4:	mov	r0, r4
   33dc8:	add	sp, sp, #28
   33dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33dd0:	movw	r3, #65044	; 0xfe14
   33dd4:	movt	r3, #4
   33dd8:	movw	r0, #54912	; 0xd680
   33ddc:	mov	r2, #23
   33de0:	ldr	r3, [r3]
   33de4:	mov	r1, #1
   33de8:	movt	r0, #3
   33dec:	mvn	r4, #11
   33df0:	bl	12578 <fwrite@plt>
   33df4:	b	33dc4 <crc32@@Base+0x1a620>
   33df8:	movw	r1, #65044	; 0xfe14
   33dfc:	movt	r1, #4
   33e00:	ldr	r3, [sp, #8]
   33e04:	movw	r2, #27300	; 0x6aa4
   33e08:	ldr	r0, [r1]
   33e0c:	movt	r2, #3
   33e10:	mov	r1, #1
   33e14:	mvn	r4, #11
   33e18:	bl	122b4 <__fprintf_chk@plt>
   33e1c:	b	33dc4 <crc32@@Base+0x1a620>
   33e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e24:	movw	r4, #61168	; 0xeef0
   33e28:	movt	r4, #4
   33e2c:	mov	r7, r1
   33e30:	sub	sp, sp, #60	; 0x3c
   33e34:	mov	r5, r0
   33e38:	ldr	r1, [r4]
   33e3c:	mov	r8, r2
   33e40:	mov	sl, r3
   33e44:	ldr	r9, [sp, #96]	; 0x60
   33e48:	mov	r3, #0
   33e4c:	str	r3, [sp, #40]	; 0x28
   33e50:	str	r1, [sp, #52]	; 0x34
   33e54:	bl	124a0 <SSL_library_init@plt>
   33e58:	cmp	r0, #0
   33e5c:	beq	34130 <crc32@@Base+0x1a98c>
   33e60:	bl	12140 <SSL_load_error_strings@plt>
   33e64:	bl	120d4 <OPENSSL_add_all_algorithms_noconf@plt>
   33e68:	bl	121dc <OpenSSL_add_all_digests@plt>
   33e6c:	bl	126d4 <OpenSSL_add_all_ciphers@plt>
   33e70:	ldr	r0, [r5, #44]	; 0x2c
   33e74:	cmp	r0, #0
   33e78:	beq	33e8c <crc32@@Base+0x1a6e8>
   33e7c:	add	r1, sp, #40	; 0x28
   33e80:	bl	338f0 <crc32@@Base+0x1a14c>
   33e84:	subs	r6, r0, #0
   33e88:	bne	33edc <crc32@@Base+0x1a738>
   33e8c:	ldr	r2, [sp, #40]	; 0x28
   33e90:	ldr	r0, [r5]
   33e94:	cmp	r2, #0
   33e98:	ldr	r1, [r5, #4]
   33e9c:	beq	33f0c <crc32@@Base+0x1a768>
   33ea0:	add	r3, sp, #36	; 0x24
   33ea4:	bl	33a10 <crc32@@Base+0x1a26c>
   33ea8:	mov	r6, r0
   33eac:	cmp	r6, #0
   33eb0:	beq	33f20 <crc32@@Base+0x1a77c>
   33eb4:	ldr	r3, [r5, #44]	; 0x2c
   33eb8:	cmp	r3, #0
   33ebc:	beq	33edc <crc32@@Base+0x1a738>
   33ec0:	ldr	r5, [sp, #40]	; 0x28
   33ec4:	cmp	r5, #0
   33ec8:	beq	33edc <crc32@@Base+0x1a738>
   33ecc:	mov	r0, r5
   33ed0:	bl	12104 <ENGINE_finish@plt>
   33ed4:	mov	r0, r5
   33ed8:	bl	121a0 <ENGINE_free@plt>
   33edc:	bl	123b0 <CRYPTO_cleanup_all_ex_data@plt>
   33ee0:	bl	12458 <ERR_free_strings@plt>
   33ee4:	mov	r0, #0
   33ee8:	bl	121d0 <ERR_remove_thread_state@plt>
   33eec:	bl	12734 <EVP_cleanup@plt>
   33ef0:	ldr	r2, [sp, #52]	; 0x34
   33ef4:	mov	r0, r6
   33ef8:	ldr	r3, [r4]
   33efc:	cmp	r2, r3
   33f00:	bne	34208 <crc32@@Base+0x1aa64>
   33f04:	add	sp, sp, #60	; 0x3c
   33f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f0c:	add	r2, sp, #36	; 0x24
   33f10:	bl	33b70 <crc32@@Base+0x1a3cc>
   33f14:	mov	r6, r0
   33f18:	cmp	r6, #0
   33f1c:	bne	33eb4 <crc32@@Base+0x1a710>
   33f20:	ldr	r3, [r5, #24]
   33f24:	ldr	fp, [sp, #36]	; 0x24
   33f28:	str	r3, [sp, #16]
   33f2c:	ldr	r3, [r5, #20]
   33f30:	str	r3, [sp, #20]
   33f34:	bl	12470 <EVP_PKEY_new@plt>
   33f38:	subs	r3, r0, #0
   33f3c:	str	r3, [sp, #12]
   33f40:	beq	3411c <crc32@@Base+0x1a978>
   33f44:	mov	r1, fp
   33f48:	bl	12560 <EVP_PKEY_set1_RSA@plt>
   33f4c:	cmp	r0, #0
   33f50:	beq	340ac <crc32@@Base+0x1a908>
   33f54:	ldr	r0, [sp, #12]
   33f58:	bl	121c4 <EVP_PKEY_size@plt>
   33f5c:	str	r0, [sp, #48]	; 0x30
   33f60:	str	r0, [sp, #24]
   33f64:	bl	125a8 <malloc@plt>
   33f68:	subs	r3, r0, #0
   33f6c:	str	r3, [sp, #28]
   33f70:	ldr	r3, [sp, #24]
   33f74:	beq	340e4 <crc32@@Base+0x1a940>
   33f78:	bl	122f0 <EVP_MD_CTX_create@plt>
   33f7c:	subs	r3, r0, #0
   33f80:	str	r3, [sp, #24]
   33f84:	beq	34158 <crc32@@Base+0x1a9b4>
   33f88:	bl	12680 <EVP_MD_CTX_init@plt>
   33f8c:	mov	r1, r6
   33f90:	ldr	r0, [sp, #12]
   33f94:	bl	121b8 <EVP_PKEY_CTX_new@plt>
   33f98:	cmp	r0, #0
   33f9c:	str	r0, [sp, #44]	; 0x2c
   33fa0:	beq	341f4 <crc32@@Base+0x1aa50>
   33fa4:	ldr	r3, [sp, #20]
   33fa8:	ldr	r3, [r3, #16]
   33fac:	blx	r3
   33fb0:	ldr	r3, [sp, #12]
   33fb4:	add	r1, sp, #44	; 0x2c
   33fb8:	str	r3, [sp]
   33fbc:	mov	r3, r6
   33fc0:	mov	r2, r0
   33fc4:	ldr	r0, [sp, #24]
   33fc8:	bl	12614 <EVP_DigestSignInit@plt>
   33fcc:	cmp	r0, #0
   33fd0:	ble	3419c <crc32@@Base+0x1a9f8>
   33fd4:	ldr	r3, [sp, #16]
   33fd8:	cmp	r3, #0
   33fdc:	beq	34040 <crc32@@Base+0x1a89c>
   33fe0:	ldr	r3, [sp, #16]
   33fe4:	ldr	r3, [r3]
   33fe8:	ldrb	r2, [r3]
   33fec:	cmp	r2, #112	; 0x70
   33ff0:	bne	34040 <crc32@@Base+0x1a89c>
   33ff4:	ldrb	r2, [r3, #1]
   33ff8:	cmp	r2, #115	; 0x73
   33ffc:	bne	34040 <crc32@@Base+0x1a89c>
   34000:	ldrb	r2, [r3, #2]
   34004:	cmp	r2, #115	; 0x73
   34008:	bne	34040 <crc32@@Base+0x1a89c>
   3400c:	ldrb	r2, [r3, #3]
   34010:	cmp	r2, #0
   34014:	bne	34040 <crc32@@Base+0x1a89c>
   34018:	mov	r3, #6
   3401c:	str	r2, [sp, #4]
   34020:	mov	r1, r3
   34024:	str	r3, [sp]
   34028:	ldr	r0, [sp, #44]	; 0x2c
   3402c:	movw	r3, #4097	; 0x1001
   34030:	mvn	r2, #0
   34034:	bl	12194 <EVP_PKEY_CTX_ctrl@plt>
   34038:	cmp	r0, #0
   3403c:	ble	341e0 <crc32@@Base+0x1aa3c>
   34040:	cmp	r8, #0
   34044:	ble	34174 <crc32@@Base+0x1a9d0>
   34048:	str	sl, [sp, #16]
   3404c:	mov	fp, #0
   34050:	str	r9, [sp, #20]
   34054:	mov	sl, r7
   34058:	ldr	r9, [sp, #24]
   3405c:	b	34070 <crc32@@Base+0x1a8cc>
   34060:	add	fp, fp, #1
   34064:	add	sl, sl, #8
   34068:	cmp	r8, fp
   3406c:	beq	3416c <crc32@@Base+0x1a9c8>
   34070:	ldr	r2, [sl, #4]
   34074:	mov	r0, r9
   34078:	ldr	r1, [r7, fp, lsl #3]
   3407c:	bl	12650 <EVP_DigestUpdate@plt>
   34080:	cmp	r0, #0
   34084:	bne	34060 <crc32@@Base+0x1a8bc>
   34088:	movw	r0, #55176	; 0xd788
   3408c:	movt	r0, #3
   34090:	bl	339bc <crc32@@Base+0x1a218>
   34094:	mov	r7, r0
   34098:	ldr	r0, [sp, #24]
   3409c:	bl	1247c <EVP_MD_CTX_destroy@plt>
   340a0:	ldr	r0, [sp, #28]
   340a4:	bl	12128 <free@plt>
   340a8:	b	340bc <crc32@@Base+0x1a918>
   340ac:	movw	r0, #55000	; 0xd6d8
   340b0:	movt	r0, #3
   340b4:	bl	339bc <crc32@@Base+0x1a218>
   340b8:	mov	r7, r0
   340bc:	ldr	r0, [sp, #12]
   340c0:	bl	120b0 <EVP_PKEY_free@plt>
   340c4:	cmp	r7, #0
   340c8:	bne	3410c <crc32@@Base+0x1a968>
   340cc:	ldr	r0, [sp, #36]	; 0x24
   340d0:	bl	12440 <RSA_free@plt>
   340d4:	ldr	r3, [r5, #44]	; 0x2c
   340d8:	cmp	r3, #0
   340dc:	bne	33ec0 <crc32@@Base+0x1a71c>
   340e0:	b	33edc <crc32@@Base+0x1a738>
   340e4:	movw	r1, #65044	; 0xfe14
   340e8:	movt	r1, #4
   340ec:	movw	r2, #55024	; 0xd6f0
   340f0:	movt	r2, #3
   340f4:	ldr	r0, [r1]
   340f8:	mov	r1, #1
   340fc:	bl	122b4 <__fprintf_chk@plt>
   34100:	ldr	r0, [sp, #12]
   34104:	mvn	r7, #11
   34108:	bl	120b0 <EVP_PKEY_free@plt>
   3410c:	ldr	r0, [sp, #36]	; 0x24
   34110:	mov	r6, r7
   34114:	bl	12440 <RSA_free@plt>
   34118:	b	33eb4 <crc32@@Base+0x1a710>
   3411c:	movw	r0, #54968	; 0xd6b8
   34120:	movt	r0, #3
   34124:	bl	339bc <crc32@@Base+0x1a218>
   34128:	mov	r7, r0
   3412c:	b	340c4 <crc32@@Base+0x1a920>
   34130:	movw	r3, #65044	; 0xfe14
   34134:	movt	r3, #4
   34138:	movw	r0, #54936	; 0xd698
   3413c:	mov	r2, #28
   34140:	ldr	r3, [r3]
   34144:	mov	r1, #1
   34148:	movt	r0, #3
   3414c:	mvn	r6, #0
   34150:	bl	12578 <fwrite@plt>
   34154:	b	33ef0 <crc32@@Base+0x1a74c>
   34158:	movw	r0, #55068	; 0xd71c
   3415c:	movt	r0, #3
   34160:	bl	339bc <crc32@@Base+0x1a218>
   34164:	mov	r7, r0
   34168:	b	340a0 <crc32@@Base+0x1a8fc>
   3416c:	ldr	sl, [sp, #16]
   34170:	ldr	r9, [sp, #20]
   34174:	add	r2, sp, #48	; 0x30
   34178:	ldrd	r0, [sp, #24]
   3417c:	bl	12218 <EVP_DigestSignFinal@plt>
   34180:	cmp	r0, #0
   34184:	bne	341b0 <crc32@@Base+0x1aa0c>
   34188:	movw	r0, #55196	; 0xd79c
   3418c:	movt	r0, #3
   34190:	bl	339bc <crc32@@Base+0x1a218>
   34194:	mov	r7, r0
   34198:	b	34098 <crc32@@Base+0x1a8f4>
   3419c:	movw	r0, #55128	; 0xd758
   341a0:	movt	r0, #3
   341a4:	bl	339bc <crc32@@Base+0x1a218>
   341a8:	mov	r7, r0
   341ac:	b	34098 <crc32@@Base+0x1a8f4>
   341b0:	ldr	r7, [sp, #24]
   341b4:	mov	r0, r7
   341b8:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   341bc:	mov	r0, r7
   341c0:	bl	1247c <EVP_MD_CTX_destroy@plt>
   341c4:	ldr	r0, [sp, #12]
   341c8:	bl	120b0 <EVP_PKEY_free@plt>
   341cc:	ldr	r3, [sp, #48]	; 0x30
   341d0:	ldr	r2, [sp, #28]
   341d4:	str	r2, [sl]
   341d8:	str	r3, [r9]
   341dc:	b	340cc <crc32@@Base+0x1a928>
   341e0:	movw	r0, #55148	; 0xd76c
   341e4:	movt	r0, #3
   341e8:	bl	339bc <crc32@@Base+0x1a218>
   341ec:	mov	r7, r0
   341f0:	b	34098 <crc32@@Base+0x1a8f4>
   341f4:	movw	r0, #55096	; 0xd738
   341f8:	movt	r0, #3
   341fc:	bl	339bc <crc32@@Base+0x1a218>
   34200:	mov	r7, r0
   34204:	b	340a0 <crc32@@Base+0x1a8fc>
   34208:	bl	12494 <__stack_chk_fail@plt>
   3420c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34210:	sub	sp, sp, #52	; 0x34
   34214:	mov	fp, r1
   34218:	strd	r2, [sp, #28]
   3421c:	str	r0, [sp, #20]
   34220:	bl	12398 <BN_CTX_new@plt>
   34224:	str	r0, [sp, #16]
   34228:	bl	12758 <BN_new@plt>
   3422c:	mov	r4, r0
   34230:	str	r0, [sp, #24]
   34234:	bl	12758 <BN_new@plt>
   34238:	mov	r9, r0
   3423c:	bl	12758 <BN_new@plt>
   34240:	mov	sl, r0
   34244:	str	r0, [sp, #12]
   34248:	bl	12758 <BN_new@plt>
   3424c:	mov	r8, r0
   34250:	bl	12758 <BN_new@plt>
   34254:	str	r0, [sp, #8]
   34258:	bl	12758 <BN_new@plt>
   3425c:	mov	r5, r0
   34260:	bl	12758 <BN_new@plt>
   34264:	mov	r7, r0
   34268:	bl	12758 <BN_new@plt>
   3426c:	cmp	r9, #0
   34270:	cmpne	r4, #0
   34274:	beq	34548 <crc32@@Base+0x1ada4>
   34278:	cmp	r8, #0
   3427c:	cmpne	sl, #0
   34280:	beq	34548 <crc32@@Base+0x1ada4>
   34284:	ldr	r3, [sp, #8]
   34288:	cmp	r5, #0
   3428c:	cmpne	r3, #0
   34290:	beq	34548 <crc32@@Base+0x1ada4>
   34294:	clz	r4, r0
   34298:	cmp	r7, #0
   3429c:	mov	r6, r0
   342a0:	lsr	r4, r4, #5
   342a4:	moveq	r4, #1
   342a8:	cmp	r4, #0
   342ac:	bne	34548 <crc32@@Base+0x1ada4>
   342b0:	cmp	fp, #0
   342b4:	beq	34540 <crc32@@Base+0x1ad9c>
   342b8:	ldr	r3, [sp, #20]
   342bc:	ldr	sl, [r3, #20]
   342c0:	mov	r0, sl
   342c4:	bl	12584 <BN_num_bits@plt>
   342c8:	cmp	r0, #64	; 0x40
   342cc:	bgt	34540 <crc32@@Base+0x1ad9c>
   342d0:	mov	r0, sl
   342d4:	bl	124e8 <BN_get_word@plt>
   342d8:	stm	fp, {r0, r4}
   342dc:	mov	r0, sl
   342e0:	bl	12584 <BN_num_bits@plt>
   342e4:	cmp	r0, #32
   342e8:	bgt	34448 <crc32@@Base+0x1aca4>
   342ec:	ldr	r3, [sp, #20]
   342f0:	mov	r0, r6
   342f4:	ldr	r1, [r3, #16]
   342f8:	bl	126f8 <BN_copy@plt>
   342fc:	cmp	r0, #0
   34300:	beq	34318 <crc32@@Base+0x1ab74>
   34304:	mov	r1, #1
   34308:	ldr	r0, [sp, #24]
   3430c:	bl	124ac <BN_set_word@plt>
   34310:	cmp	r0, #0
   34314:	bne	344a0 <crc32@@Base+0x1acfc>
   34318:	mvn	r4, #0
   3431c:	ldr	sl, [sp, #16]
   34320:	mov	r1, r9
   34324:	ldr	r2, [sp, #12]
   34328:	mov	r0, r7
   3432c:	mov	r3, sl
   34330:	bl	12428 <BN_exp@plt>
   34334:	mov	r3, sl
   34338:	mov	r2, r7
   3433c:	mov	r1, r6
   34340:	cmp	r0, #0
   34344:	mov	r0, r5
   34348:	mvneq	r4, #0
   3434c:	bl	1241c <BN_mod_inverse@plt>
   34350:	cmp	r0, #0
   34354:	beq	34370 <crc32@@Base+0x1abcc>
   34358:	mov	r2, r5
   3435c:	mov	r1, r7
   34360:	mov	r0, r5
   34364:	bl	12350 <BN_sub@plt>
   34368:	cmp	r0, #0
   3436c:	bne	34374 <crc32@@Base+0x1abd0>
   34370:	mvn	r4, #0
   34374:	mov	r0, r5
   34378:	bl	124e8 <BN_get_word@plt>
   3437c:	ldr	r3, [sp, #28]
   34380:	str	r0, [r3]
   34384:	mov	r0, r6
   34388:	bl	12584 <BN_num_bits@plt>
   3438c:	mov	r1, r0
   34390:	mov	r0, r5
   34394:	bl	124ac <BN_set_word@plt>
   34398:	cmp	r0, #0
   3439c:	bne	34480 <crc32@@Base+0x1acdc>
   343a0:	mvn	r4, #0
   343a4:	mov	r1, r8
   343a8:	ldr	r0, [sp, #8]
   343ac:	bl	126f8 <BN_copy@plt>
   343b0:	cmp	r0, #0
   343b4:	beq	343d4 <crc32@@Base+0x1ac30>
   343b8:	ldr	r3, [sp, #16]
   343bc:	mov	r2, r8
   343c0:	ldr	r1, [sp, #8]
   343c4:	mov	r0, r5
   343c8:	bl	1262c <BN_mul@plt>
   343cc:	cmp	r0, #0
   343d0:	bne	344cc <crc32@@Base+0x1ad28>
   343d4:	ldr	r3, [sp, #32]
   343d8:	ldr	r2, [sp, #8]
   343dc:	ldr	r0, [sp, #24]
   343e0:	str	r6, [r3]
   343e4:	ldr	r3, [sp, #88]	; 0x58
   343e8:	str	r2, [r3]
   343ec:	bl	12248 <BN_free@plt>
   343f0:	mov	r0, r9
   343f4:	bl	12248 <BN_free@plt>
   343f8:	ldr	r0, [sp, #12]
   343fc:	bl	12248 <BN_free@plt>
   34400:	mov	r0, r8
   34404:	bl	12248 <BN_free@plt>
   34408:	mov	r0, r5
   3440c:	bl	12248 <BN_free@plt>
   34410:	mov	r0, r7
   34414:	bl	12248 <BN_free@plt>
   34418:	movw	r3, #65044	; 0xfe14
   3441c:	movt	r3, #4
   34420:	movw	r0, #55224	; 0xd7b8
   34424:	mov	r2, #25
   34428:	ldr	r3, [r3]
   3442c:	movt	r0, #3
   34430:	mov	r1, #1
   34434:	mvn	r4, #11
   34438:	bl	12578 <fwrite@plt>
   3443c:	mov	r0, r4
   34440:	add	sp, sp, #52	; 0x34
   34444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34448:	mov	r0, sl
   3444c:	bl	12164 <BN_dup@plt>
   34450:	subs	r3, r0, #0
   34454:	str	r3, [sp, #36]	; 0x24
   34458:	beq	34540 <crc32@@Base+0x1ad9c>
   3445c:	mov	r2, #32
   34460:	mov	r1, r3
   34464:	bl	12644 <BN_rshift@plt>
   34468:	cmp	r0, #0
   3446c:	bne	34570 <crc32@@Base+0x1adcc>
   34470:	mvn	r4, #0
   34474:	ldr	r0, [sp, #36]	; 0x24
   34478:	bl	12248 <BN_free@plt>
   3447c:	b	342ec <crc32@@Base+0x1ab48>
   34480:	ldr	r3, [sp, #16]
   34484:	mov	r2, r5
   34488:	mov	r1, r9
   3448c:	mov	r0, r8
   34490:	bl	12428 <BN_exp@plt>
   34494:	cmp	r0, #0
   34498:	bne	343a4 <crc32@@Base+0x1ac00>
   3449c:	b	343a0 <crc32@@Base+0x1abfc>
   344a0:	mov	r1, #2
   344a4:	mov	r0, r9
   344a8:	bl	124ac <BN_set_word@plt>
   344ac:	cmp	r0, #0
   344b0:	beq	34318 <crc32@@Base+0x1ab74>
   344b4:	mov	r1, #32
   344b8:	ldr	r0, [sp, #12]
   344bc:	bl	124ac <BN_set_word@plt>
   344c0:	cmp	r0, #0
   344c4:	bne	3431c <crc32@@Base+0x1ab78>
   344c8:	b	34318 <crc32@@Base+0x1ab74>
   344cc:	ldr	r3, [sp, #16]
   344d0:	mov	r2, r5
   344d4:	ldr	r1, [sp, #8]
   344d8:	mov	r0, #0
   344dc:	str	r3, [sp]
   344e0:	mov	r3, r6
   344e4:	bl	12374 <BN_div@plt>
   344e8:	cmp	r0, #0
   344ec:	beq	343d4 <crc32@@Base+0x1ac30>
   344f0:	ldr	r3, [sp, #32]
   344f4:	ldr	r2, [sp, #8]
   344f8:	ldr	r0, [sp, #24]
   344fc:	str	r6, [r3]
   34500:	ldr	r3, [sp, #88]	; 0x58
   34504:	str	r2, [r3]
   34508:	bl	12248 <BN_free@plt>
   3450c:	mov	r0, r9
   34510:	bl	12248 <BN_free@plt>
   34514:	ldr	r0, [sp, #12]
   34518:	bl	12248 <BN_free@plt>
   3451c:	mov	r0, r8
   34520:	bl	12248 <BN_free@plt>
   34524:	mov	r0, r5
   34528:	bl	12248 <BN_free@plt>
   3452c:	mov	r0, r7
   34530:	bl	12248 <BN_free@plt>
   34534:	cmp	r4, #0
   34538:	beq	3443c <crc32@@Base+0x1ac98>
   3453c:	b	34418 <crc32@@Base+0x1ac74>
   34540:	mvn	r4, #0
   34544:	b	342ec <crc32@@Base+0x1ab48>
   34548:	movw	r3, #65044	; 0xfe14
   3454c:	movt	r3, #4
   34550:	movw	r0, #54912	; 0xd680
   34554:	mov	r2, #23
   34558:	ldr	r3, [r3]
   3455c:	mov	r1, #1
   34560:	movt	r0, #3
   34564:	mvn	r4, #11
   34568:	bl	12578 <fwrite@plt>
   3456c:	b	3443c <crc32@@Base+0x1ac98>
   34570:	mov	r1, #32
   34574:	ldr	r0, [sp, #36]	; 0x24
   34578:	bl	12668 <BN_mask_bits@plt>
   3457c:	cmp	r0, #0
   34580:	beq	34470 <crc32@@Base+0x1accc>
   34584:	ldr	r0, [sp, #36]	; 0x24
   34588:	bl	124e8 <BN_get_word@plt>
   3458c:	ldrd	r2, [fp]
   34590:	mov	r1, #0
   34594:	str	r1, [sp, #40]	; 0x28
   34598:	mov	ip, fp
   3459c:	mov	r1, r3
   345a0:	str	r0, [sp, #44]	; 0x2c
   345a4:	mov	r0, r2
   345a8:	ldrd	r2, [sp, #40]	; 0x28
   345ac:	orr	sl, r2, r0
   345b0:	orr	fp, r3, r1
   345b4:	mov	r4, r2
   345b8:	mov	r0, sl
   345bc:	mov	r1, fp
   345c0:	strd	r0, [ip]
   345c4:	b	34474 <crc32@@Base+0x1acd0>
   345c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   345cc:	movw	r4, #61168	; 0xeef0
   345d0:	movt	r4, #4
   345d4:	mov	r5, r0
   345d8:	ldr	r0, [r0, #44]	; 0x2c
   345dc:	sub	sp, sp, #1104	; 0x450
   345e0:	ldr	r3, [r4]
   345e4:	sub	sp, sp, #12
   345e8:	mov	r2, #0
   345ec:	cmp	r0, r2
   345f0:	mov	r7, r1
   345f4:	str	r2, [sp, #60]	; 0x3c
   345f8:	str	r3, [sp, #1108]	; 0x454
   345fc:	beq	3472c <crc32@@Base+0x1af88>
   34600:	add	r6, sp, #72	; 0x48
   34604:	sub	r1, r6, #12
   34608:	bl	338f0 <crc32@@Base+0x1a14c>
   3460c:	subs	r8, r0, #0
   34610:	bne	3470c <crc32@@Base+0x1af68>
   34614:	ldr	sl, [sp, #60]	; 0x3c
   34618:	ldr	r8, [r5]
   3461c:	cmp	sl, #0
   34620:	ldr	fp, [r5, #4]
   34624:	beq	34730 <crc32@@Base+0x1af8c>
   34628:	mov	r0, sl
   3462c:	bl	12170 <ENGINE_get_id@plt>
   34630:	cmp	r0, #0
   34634:	beq	34a18 <crc32@@Base+0x1b274>
   34638:	movw	r1, #54652	; 0xd57c
   3463c:	movt	r1, #3
   34640:	bl	1265c <strcmp@plt>
   34644:	cmp	r0, #0
   34648:	bne	34a18 <crc32@@Base+0x1b274>
   3464c:	cmp	r8, #0
   34650:	add	r9, sp, #84	; 0x54
   34654:	mov	r3, #1024	; 0x400
   34658:	beq	34934 <crc32@@Base+0x1b190>
   3465c:	movw	r2, #55252	; 0xd7d4
   34660:	str	fp, [sp, #8]
   34664:	movt	r2, #3
   34668:	str	r8, [sp, #4]
   3466c:	str	r2, [sp]
   34670:	mov	r0, r9
   34674:	mov	r1, r3
   34678:	mov	r2, #1
   3467c:	bl	125cc <__snprintf_chk@plt>
   34680:	mov	r3, #0
   34684:	mov	r0, sl
   34688:	mov	r2, r3
   3468c:	mov	r1, r9
   34690:	bl	12110 <ENGINE_load_public_key@plt>
   34694:	subs	r8, r0, #0
   34698:	beq	34958 <crc32@@Base+0x1b1b4>
   3469c:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   346a0:	subs	r3, r0, #0
   346a4:	str	r3, [sp, #20]
   346a8:	beq	34c88 <crc32@@Base+0x1b4e4>
   346ac:	mov	r0, r8
   346b0:	bl	120b0 <EVP_PKEY_free@plt>
   346b4:	add	r3, sp, #56	; 0x38
   346b8:	add	r2, sp, #52	; 0x34
   346bc:	sub	r1, r6, #8
   346c0:	str	r2, [sp]
   346c4:	sub	r3, r3, #8
   346c8:	add	r2, sp, #56	; 0x38
   346cc:	ldr	r0, [sp, #20]
   346d0:	bl	3420c <crc32@@Base+0x1aa68>
   346d4:	subs	r8, r0, #0
   346d8:	beq	347d4 <crc32@@Base+0x1b030>
   346dc:	ldr	r0, [sp, #20]
   346e0:	bl	12440 <RSA_free@plt>
   346e4:	ldr	r3, [r5, #44]	; 0x2c
   346e8:	cmp	r3, #0
   346ec:	beq	3470c <crc32@@Base+0x1af68>
   346f0:	ldr	r5, [sp, #60]	; 0x3c
   346f4:	cmp	r5, #0
   346f8:	beq	3470c <crc32@@Base+0x1af68>
   346fc:	mov	r0, r5
   34700:	bl	12104 <ENGINE_finish@plt>
   34704:	mov	r0, r5
   34708:	bl	121a0 <ENGINE_free@plt>
   3470c:	ldr	r2, [sp, #1108]	; 0x454
   34710:	mov	r0, r8
   34714:	ldr	r3, [r4]
   34718:	cmp	r2, r3
   3471c:	bne	34d2c <crc32@@Base+0x1b588>
   34720:	add	sp, sp, #1104	; 0x450
   34724:	add	sp, sp, #12
   34728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3472c:	ldm	r5, {r8, fp}
   34730:	add	r9, sp, #84	; 0x54
   34734:	mov	r3, #1024	; 0x400
   34738:	mov	r1, r3
   3473c:	str	r8, [sp, #4]
   34740:	str	fp, [sp, #8]
   34744:	movw	r2, #55356	; 0xd83c
   34748:	mov	r0, r9
   3474c:	movt	r2, #3
   34750:	str	r2, [sp]
   34754:	mov	r2, #1
   34758:	bl	125cc <__snprintf_chk@plt>
   3475c:	mov	r0, r9
   34760:	movw	r1, #49540	; 0xc184
   34764:	movt	r1, #3
   34768:	bl	1232c <fopen@plt>
   3476c:	subs	r8, r0, #0
   34770:	beq	34ca4 <crc32@@Base+0x1b500>
   34774:	add	r6, sp, #1104	; 0x450
   34778:	mov	r3, #0
   3477c:	add	r6, r6, #8
   34780:	mov	r2, r3
   34784:	str	r3, [r6, #-1040]!	; 0xfffffbf0
   34788:	mov	r1, r6
   3478c:	bl	120bc <PEM_read_X509@plt>
   34790:	cmp	r0, #0
   34794:	beq	34ce0 <crc32@@Base+0x1b53c>
   34798:	ldr	r0, [sp, #72]	; 0x48
   3479c:	bl	126b0 <X509_get_pubkey@plt>
   347a0:	subs	fp, r0, #0
   347a4:	beq	34cfc <crc32@@Base+0x1b558>
   347a8:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   347ac:	subs	r3, r0, #0
   347b0:	str	r3, [sp, #20]
   347b4:	beq	34d14 <crc32@@Base+0x1b570>
   347b8:	mov	r0, r8
   347bc:	bl	125fc <fclose@plt>
   347c0:	mov	r0, fp
   347c4:	bl	120b0 <EVP_PKEY_free@plt>
   347c8:	ldr	r0, [sp, #72]	; 0x48
   347cc:	bl	1250c <X509_free@plt>
   347d0:	b	346b4 <crc32@@Base+0x1af10>
   347d4:	ldr	r0, [sp, #48]	; 0x30
   347d8:	bl	12584 <BN_num_bits@plt>
   347dc:	mov	r1, r8
   347e0:	movw	r2, #29040	; 0x7170
   347e4:	movt	r2, #3
   347e8:	str	r0, [sp, #28]
   347ec:	mov	r0, r7
   347f0:	bl	30c1c <crc32@@Base+0x17478>
   347f4:	cmn	r0, #1
   347f8:	mov	r8, r0
   347fc:	beq	349c8 <crc32@@Base+0x1b224>
   34800:	ldr	r0, [r5, #4]
   34804:	mov	r3, #100	; 0x64
   34808:	mov	r1, r3
   3480c:	movw	r2, #55504	; 0xd8d0
   34810:	movt	r2, #3
   34814:	str	r2, [sp]
   34818:	str	r0, [sp, #4]
   3481c:	mov	r2, #1
   34820:	mov	r0, r9
   34824:	bl	125cc <__snprintf_chk@plt>
   34828:	mov	r2, r9
   3482c:	mov	r1, r8
   34830:	mov	r0, r7
   34834:	bl	30c1c <crc32@@Base+0x17478>
   34838:	cmn	r0, #1
   3483c:	str	r0, [sp, #24]
   34840:	beq	34974 <crc32@@Base+0x1b1d0>
   34844:	ldr	r3, [sp, #24]
   34848:	cmp	r3, #0
   3484c:	blt	34c40 <crc32@@Base+0x1b49c>
   34850:	ldr	r8, [r5, #4]
   34854:	mov	r0, r8
   34858:	bl	125c0 <strlen@plt>
   3485c:	ldr	sl, [sp, #24]
   34860:	mov	r3, r8
   34864:	movw	r2, #27988	; 0x6d54
   34868:	movt	r2, #3
   3486c:	mov	r1, sl
   34870:	add	r0, r0, #1
   34874:	str	r0, [sp]
   34878:	mov	r0, r7
   3487c:	bl	2f000 <crc32@@Base+0x1585c>
   34880:	subs	r8, r0, #0
   34884:	bne	34914 <crc32@@Base+0x1b170>
   34888:	ldr	r2, [sp, #28]
   3488c:	mov	r9, #4
   34890:	mov	r1, sl
   34894:	str	r9, [sp]
   34898:	ubfx	r0, r2, #8, #8
   3489c:	ubfx	ip, r2, #16, #8
   348a0:	lsr	r3, r2, #24
   348a4:	orr	r3, r3, r2, lsl #24
   348a8:	movw	r2, #55580	; 0xd91c
   348ac:	orr	r0, r3, r0, lsl #16
   348b0:	movt	r2, #3
   348b4:	orr	ip, r0, ip, lsl #8
   348b8:	mov	r3, r6
   348bc:	mov	r0, r7
   348c0:	str	ip, [sp, #72]	; 0x48
   348c4:	bl	2f000 <crc32@@Base+0x1585c>
   348c8:	subs	r8, r0, #0
   348cc:	bne	34914 <crc32@@Base+0x1b170>
   348d0:	ldr	r3, [sp, #56]	; 0x38
   348d4:	movw	r2, #55596	; 0xd92c
   348d8:	str	r9, [sp]
   348dc:	movt	r2, #3
   348e0:	ubfx	r1, r3, #8, #8
   348e4:	ubfx	r0, r3, #16, #8
   348e8:	lsr	ip, r3, #24
   348ec:	orr	ip, ip, r3, lsl #24
   348f0:	mov	r3, r6
   348f4:	orr	ip, ip, r1, lsl #16
   348f8:	mov	r1, sl
   348fc:	orr	ip, ip, r0, lsl #8
   34900:	mov	r0, r7
   34904:	str	ip, [sp, #72]	; 0x48
   34908:	bl	2f000 <crc32@@Base+0x1585c>
   3490c:	subs	r8, r0, #0
   34910:	beq	34a40 <crc32@@Base+0x1b29c>
   34914:	ldr	r0, [sp, #48]	; 0x30
   34918:	bl	12248 <BN_free@plt>
   3491c:	ldr	r0, [sp, #52]	; 0x34
   34920:	bl	12248 <BN_free@plt>
   34924:	cmn	r8, #3
   34928:	mvnne	r8, #4
   3492c:	mvneq	r8, #27
   34930:	b	346dc <crc32@@Base+0x1af38>
   34934:	str	fp, [sp, #4]
   34938:	movw	r2, #55284	; 0xd7f4
   3493c:	mov	r0, r9
   34940:	movt	r2, #3
   34944:	mov	r1, r3
   34948:	str	r2, [sp]
   3494c:	mov	r2, #1
   34950:	bl	125cc <__snprintf_chk@plt>
   34954:	b	34680 <crc32@@Base+0x1aedc>
   34958:	movw	r0, #55316	; 0xd814
   3495c:	movt	r0, #3
   34960:	bl	339bc <crc32@@Base+0x1a218>
   34964:	subs	r8, r0, #0
   34968:	streq	r8, [sp, #20]
   3496c:	bne	346e4 <crc32@@Base+0x1af40>
   34970:	b	346b4 <crc32@@Base+0x1af10>
   34974:	mov	r2, r9
   34978:	mov	r1, r8
   3497c:	mov	r0, r7
   34980:	bl	2f354 <crc32@@Base+0x15bb0>
   34984:	subs	r3, r0, #0
   34988:	str	r3, [sp, #24]
   3498c:	bge	34850 <crc32@@Base+0x1b0ac>
   34990:	cmn	r3, #3
   34994:	mov	r8, r3
   34998:	beq	34c70 <crc32@@Base+0x1b4cc>
   3499c:	movw	r3, #65044	; 0xfe14
   349a0:	movt	r3, #4
   349a4:	ldr	r6, [r3]
   349a8:	bl	2f808 <crc32@@Base+0x16064>
   349ac:	movw	r2, #55512	; 0xd8d8
   349b0:	mov	r1, #1
   349b4:	movt	r2, #3
   349b8:	mov	r3, r0
   349bc:	mov	r0, r6
   349c0:	bl	122b4 <__fprintf_chk@plt>
   349c4:	b	34914 <crc32@@Base+0x1b170>
   349c8:	movw	r2, #29040	; 0x7170
   349cc:	mov	r1, #0
   349d0:	movt	r2, #3
   349d4:	mov	r0, r7
   349d8:	bl	2f354 <crc32@@Base+0x15bb0>
   349dc:	subs	r8, r0, #0
   349e0:	bge	34800 <crc32@@Base+0x1b05c>
   349e4:	cmn	r8, #3
   349e8:	beq	34c70 <crc32@@Base+0x1b4cc>
   349ec:	movw	r3, #65044	; 0xfe14
   349f0:	movt	r3, #4
   349f4:	ldr	r6, [r3]
   349f8:	bl	2f808 <crc32@@Base+0x16064>
   349fc:	movw	r2, #55468	; 0xd8ac
   34a00:	mov	r1, #1
   34a04:	movt	r2, #3
   34a08:	mov	r3, r0
   34a0c:	mov	r0, r6
   34a10:	bl	122b4 <__fprintf_chk@plt>
   34a14:	b	34914 <crc32@@Base+0x1b170>
   34a18:	movw	r3, #65044	; 0xfe14
   34a1c:	movt	r3, #4
   34a20:	movw	r0, #54728	; 0xd5c8
   34a24:	mov	r2, #21
   34a28:	ldr	r3, [r3]
   34a2c:	mov	r1, #1
   34a30:	movt	r0, #3
   34a34:	mvn	r8, #94	; 0x5e
   34a38:	bl	12578 <fwrite@plt>
   34a3c:	b	346e4 <crc32@@Base+0x1af40>
   34a40:	ldmdb	r6, {r9, sl}
   34a44:	mov	r0, r8
   34a48:	str	r8, [sp, #32]
   34a4c:	ubfx	lr, r9, #8, #8
   34a50:	lsl	r3, r9, #24
   34a54:	ubfx	ip, r9, #16, #8
   34a58:	str	r8, [sp, #40]	; 0x28
   34a5c:	mov	r1, r3
   34a60:	lsl	r3, lr, #16
   34a64:	str	r3, [sp, #36]	; 0x24
   34a68:	lsr	lr, sl, #24
   34a6c:	lsl	r3, ip, #8
   34a70:	str	r3, [sp, #44]	; 0x2c
   34a74:	ldrd	r2, [sp, #32]
   34a78:	orr	r0, r0, lr
   34a7c:	str	r8, [sp, #32]
   34a80:	ubfx	lr, sl, #8, #8
   34a84:	orr	r2, r2, r0
   34a88:	orr	r3, r3, r1
   34a8c:	ubfx	ip, sl, #16, #8
   34a90:	mov	r0, r2
   34a94:	mov	r1, r3
   34a98:	lsr	r3, r9, #24
   34a9c:	str	r3, [sp, #36]	; 0x24
   34aa0:	ldrd	r2, [sp, #40]	; 0x28
   34aa4:	orr	r2, r2, r0
   34aa8:	orr	r3, r3, r1
   34aac:	mov	r0, r2
   34ab0:	mov	r1, r3
   34ab4:	uxtb	r2, sl
   34ab8:	mov	r3, #0
   34abc:	strd	r2, [sp, #40]	; 0x28
   34ac0:	ldrd	r2, [sp, #32]
   34ac4:	orr	r2, r2, r0
   34ac8:	orr	r3, r3, r1
   34acc:	ldrd	r0, [sp, #40]	; 0x28
   34ad0:	mov	r1, #0
   34ad4:	lsr	fp, r0, #8
   34ad8:	lsl	sl, r0, #24
   34adc:	uxtb	r0, lr
   34ae0:	strd	r0, [sp, #32]
   34ae4:	orr	r2, r2, sl
   34ae8:	orr	r3, r3, fp
   34aec:	strd	r2, [sp, #40]	; 0x28
   34af0:	uxtb	r2, ip
   34af4:	ldr	ip, [sp, #32]
   34af8:	ldrd	r8, [sp, #40]	; 0x28
   34afc:	lsl	r3, r2, #8
   34b00:	lsr	r1, ip, #16
   34b04:	lsl	r0, ip, #16
   34b08:	orr	r8, r8, r0
   34b0c:	lsr	ip, r2, #24
   34b10:	orr	r9, r9, r1
   34b14:	mov	sl, r3
   34b18:	orr	fp, ip, r9
   34b1c:	orr	sl, sl, r8
   34b20:	mov	r1, #8
   34b24:	mov	r3, r6
   34b28:	str	r1, [sp]
   34b2c:	mov	r8, sl
   34b30:	movw	r2, #55612	; 0xd93c
   34b34:	ldr	r1, [sp, #24]
   34b38:	movt	r2, #3
   34b3c:	mov	r0, r7
   34b40:	mov	r9, fp
   34b44:	strd	r8, [r6]
   34b48:	bl	2f000 <crc32@@Base+0x1585c>
   34b4c:	subs	r8, r0, #0
   34b50:	bne	34914 <crc32@@Base+0x1b170>
   34b54:	ldr	r6, [sp, #28]
   34b58:	movw	r2, #55628	; 0xd94c
   34b5c:	ldr	r9, [sp, #24]
   34b60:	movt	r2, #3
   34b64:	ldr	r3, [sp, #48]	; 0x30
   34b68:	mov	r0, r7
   34b6c:	str	r6, [sp]
   34b70:	mov	r1, r9
   34b74:	bl	33c78 <crc32@@Base+0x1a4d4>
   34b78:	subs	r8, r0, #0
   34b7c:	bne	34914 <crc32@@Base+0x1b170>
   34b80:	ldr	r3, [sp, #52]	; 0x34
   34b84:	movw	r2, #55640	; 0xd958
   34b88:	str	r6, [sp]
   34b8c:	movt	r2, #3
   34b90:	mov	r1, r9
   34b94:	mov	r0, r7
   34b98:	bl	33c78 <crc32@@Base+0x1a4d4>
   34b9c:	subs	r8, r0, #0
   34ba0:	bne	34914 <crc32@@Base+0x1b170>
   34ba4:	ldr	r6, [r5, #16]
   34ba8:	mov	r0, r6
   34bac:	bl	125c0 <strlen@plt>
   34bb0:	mov	r3, r6
   34bb4:	movw	r2, #29620	; 0x73b4
   34bb8:	mov	r1, r9
   34bbc:	movt	r2, #3
   34bc0:	add	r0, r0, #1
   34bc4:	str	r0, [sp]
   34bc8:	mov	r0, r7
   34bcc:	bl	2f000 <crc32@@Base+0x1585c>
   34bd0:	subs	r8, r0, #0
   34bd4:	bne	34914 <crc32@@Base+0x1b170>
   34bd8:	ldr	r6, [r5, #40]	; 0x28
   34bdc:	cmp	r6, #0
   34be0:	beq	34c2c <crc32@@Base+0x1b488>
   34be4:	mov	r0, r6
   34be8:	bl	125c0 <strlen@plt>
   34bec:	mov	r3, r6
   34bf0:	ldr	r1, [sp, #24]
   34bf4:	movw	r2, #29628	; 0x73bc
   34bf8:	movt	r2, #3
   34bfc:	add	ip, r0, #1
   34c00:	mov	r0, r7
   34c04:	str	ip, [sp]
   34c08:	bl	2f000 <crc32@@Base+0x1585c>
   34c0c:	mov	r8, r0
   34c10:	ldr	r0, [sp, #48]	; 0x30
   34c14:	bl	12248 <BN_free@plt>
   34c18:	ldr	r0, [sp, #52]	; 0x34
   34c1c:	bl	12248 <BN_free@plt>
   34c20:	cmp	r8, #0
   34c24:	beq	346dc <crc32@@Base+0x1af38>
   34c28:	b	34924 <crc32@@Base+0x1b180>
   34c2c:	ldr	r0, [sp, #48]	; 0x30
   34c30:	bl	12248 <BN_free@plt>
   34c34:	ldr	r0, [sp, #52]	; 0x34
   34c38:	bl	12248 <BN_free@plt>
   34c3c:	b	346dc <crc32@@Base+0x1af38>
   34c40:	movw	r3, #65044	; 0xfe14
   34c44:	movt	r3, #4
   34c48:	ldr	r8, [sp, #24]
   34c4c:	ldr	r6, [r3]
   34c50:	bl	2f808 <crc32@@Base+0x16064>
   34c54:	movw	r2, #55548	; 0xd8fc
   34c58:	mov	r1, #1
   34c5c:	movt	r2, #3
   34c60:	mov	r3, r0
   34c64:	mov	r0, r6
   34c68:	bl	122b4 <__fprintf_chk@plt>
   34c6c:	b	34914 <crc32@@Base+0x1b170>
   34c70:	ldr	r0, [sp, #48]	; 0x30
   34c74:	mvn	r8, #27
   34c78:	bl	12248 <BN_free@plt>
   34c7c:	ldr	r0, [sp, #52]	; 0x34
   34c80:	bl	12248 <BN_free@plt>
   34c84:	b	346dc <crc32@@Base+0x1af38>
   34c88:	movw	r0, #54792	; 0xd608
   34c8c:	movt	r0, #3
   34c90:	bl	339bc <crc32@@Base+0x1a218>
   34c94:	mov	r0, r8
   34c98:	bl	120b0 <EVP_PKEY_free@plt>
   34c9c:	mvn	r8, #21
   34ca0:	b	346e4 <crc32@@Base+0x1af40>
   34ca4:	movw	r3, #65044	; 0xfe14
   34ca8:	movt	r3, #4
   34cac:	mvn	r8, #12
   34cb0:	ldr	r6, [r3]
   34cb4:	bl	1268c <__errno_location@plt>
   34cb8:	ldr	r0, [r0]
   34cbc:	bl	12200 <strerror@plt>
   34cc0:	mov	r3, r9
   34cc4:	movw	r2, #55368	; 0xd848
   34cc8:	mov	r1, #1
   34ccc:	movt	r2, #3
   34cd0:	str	r0, [sp]
   34cd4:	mov	r0, r6
   34cd8:	bl	122b4 <__fprintf_chk@plt>
   34cdc:	b	346e4 <crc32@@Base+0x1af40>
   34ce0:	movw	r0, #55412	; 0xd874
   34ce4:	movt	r0, #3
   34ce8:	bl	339bc <crc32@@Base+0x1a218>
   34cec:	mov	r0, r8
   34cf0:	mvn	r8, #21
   34cf4:	bl	125fc <fclose@plt>
   34cf8:	b	346e4 <crc32@@Base+0x1af40>
   34cfc:	movw	r0, #55440	; 0xd890
   34d00:	movt	r0, #3
   34d04:	bl	339bc <crc32@@Base+0x1a218>
   34d08:	ldr	r0, [sp, #72]	; 0x48
   34d0c:	bl	1250c <X509_free@plt>
   34d10:	b	34cec <crc32@@Base+0x1b548>
   34d14:	movw	r0, #54792	; 0xd608
   34d18:	movt	r0, #3
   34d1c:	bl	339bc <crc32@@Base+0x1a218>
   34d20:	mov	r0, fp
   34d24:	bl	120b0 <EVP_PKEY_free@plt>
   34d28:	b	34d08 <crc32@@Base+0x1b564>
   34d2c:	bl	12494 <__stack_chk_fail@plt>
   34d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34d34:	add	fp, sp, #32
   34d38:	movw	r5, #61168	; 0xeef0
   34d3c:	sub	sp, sp, #52	; 0x34
   34d40:	movt	r5, #4
   34d44:	ldr	r8, [fp, #4]
   34d48:	mov	r4, r0
   34d4c:	ldr	r0, [r5]
   34d50:	cmp	r8, #0
   34d54:	ldr	sl, [r4, #32]
   34d58:	str	r0, [fp, #-40]	; 0xffffffd8
   34d5c:	blt	34f00 <crc32@@Base+0x1b75c>
   34d60:	mov	r9, r1
   34d64:	mov	r7, r2
   34d68:	mov	r1, r8
   34d6c:	mov	r6, r3
   34d70:	movw	r2, #55580	; 0xd91c
   34d74:	mov	r3, #0
   34d78:	movt	r2, #3
   34d7c:	mov	r0, sl
   34d80:	bl	19af0 <crc32@@Base+0x34c>
   34d84:	mov	r3, #0
   34d88:	mov	r1, r8
   34d8c:	movw	r2, #55596	; 0xd92c
   34d90:	movt	r2, #3
   34d94:	str	r0, [fp, #-48]	; 0xffffffd0
   34d98:	mov	r0, sl
   34d9c:	bl	19af0 <crc32@@Base+0x34c>
   34da0:	movw	r2, #55612	; 0xd93c
   34da4:	sub	r3, fp, #68	; 0x44
   34da8:	movt	r2, #3
   34dac:	mov	r1, r8
   34db0:	str	r0, [fp, #-52]	; 0xffffffcc
   34db4:	mov	r0, sl
   34db8:	bl	30f4c <crc32@@Base+0x177a8>
   34dbc:	cmp	r0, #0
   34dc0:	str	r0, [fp, #-56]	; 0xffffffc8
   34dc4:	beq	34edc <crc32@@Base+0x1b738>
   34dc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34dcc:	cmp	r3, #7
   34dd0:	bls	34edc <crc32@@Base+0x1b738>
   34dd4:	mov	r3, #0
   34dd8:	mov	r1, r8
   34ddc:	movw	r2, #55628	; 0xd94c
   34de0:	mov	r0, sl
   34de4:	movt	r2, #3
   34de8:	mov	ip, #8
   34dec:	str	ip, [fp, #-44]	; 0xffffffd4
   34df0:	bl	30f4c <crc32@@Base+0x177a8>
   34df4:	mov	r3, #0
   34df8:	mov	r1, r8
   34dfc:	movw	r2, #55640	; 0xd958
   34e00:	movt	r2, #3
   34e04:	str	r0, [fp, #-60]	; 0xffffffc4
   34e08:	mov	r0, sl
   34e0c:	bl	30f4c <crc32@@Base+0x177a8>
   34e10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34e14:	cmp	r3, #0
   34e18:	str	r0, [fp, #-64]	; 0xffffffc0
   34e1c:	beq	34ef8 <crc32@@Base+0x1b754>
   34e20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   34e24:	cmp	r2, #0
   34e28:	beq	34ef8 <crc32@@Base+0x1b754>
   34e2c:	ldr	r2, [r4, #28]
   34e30:	cmp	r7, #0
   34e34:	ldr	r1, [r4, #24]
   34e38:	mov	r8, sp
   34e3c:	ldr	ip, [r4, #20]
   34e40:	ldr	sl, [r2, #4]
   34e44:	str	r1, [fp, #-72]	; 0xffffffb8
   34e48:	beq	34ef0 <crc32@@Base+0x1b74c>
   34e4c:	cmp	ip, #0
   34e50:	beq	34ef0 <crc32@@Base+0x1b74c>
   34e54:	cmp	r3, #0
   34e58:	add	r2, r3, #7
   34e5c:	movlt	r3, r2
   34e60:	asr	r3, r3, #3
   34e64:	cmp	r6, #512	; 0x200
   34e68:	cmpls	r3, r6
   34e6c:	bne	34ee8 <crc32@@Base+0x1b744>
   34e70:	add	r3, r6, #7
   34e74:	mov	r1, r6
   34e78:	bic	r3, r3, #7
   34e7c:	mov	r0, r7
   34e80:	sub	sp, sp, r3
   34e84:	sub	r2, fp, #64	; 0x40
   34e88:	add	r6, sp, #8
   34e8c:	ldr	r7, [ip, #4]
   34e90:	mov	r3, r6
   34e94:	bl	35828 <crc32@@Base+0x1c084>
   34e98:	cmp	r0, #0
   34e9c:	bne	34ec0 <crc32@@Base+0x1b71c>
   34ea0:	str	r7, [sp]
   34ea4:	mov	r3, r9
   34ea8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34eac:	mov	r2, sl
   34eb0:	mov	r0, r4
   34eb4:	ldr	r7, [r1, #4]
   34eb8:	mov	r1, r6
   34ebc:	blx	r7
   34ec0:	mov	sp, r8
   34ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34ec8:	ldr	r3, [r5]
   34ecc:	cmp	r2, r3
   34ed0:	bne	34f08 <crc32@@Base+0x1b764>
   34ed4:	sub	sp, fp, #32
   34ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34edc:	mov	r3, #0
   34ee0:	str	r3, [fp, #-56]	; 0xffffffc8
   34ee4:	b	34dd4 <crc32@@Base+0x1b630>
   34ee8:	mvn	r0, #21
   34eec:	b	34ec0 <crc32@@Base+0x1b71c>
   34ef0:	mvn	r0, #4
   34ef4:	b	34ec0 <crc32@@Base+0x1b71c>
   34ef8:	mvn	r0, #13
   34efc:	b	34ec4 <crc32@@Base+0x1b720>
   34f00:	mvn	r0, #8
   34f04:	b	34ec4 <crc32@@Base+0x1b720>
   34f08:	bl	12494 <__stack_chk_fail@plt>
   34f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34f10:	add	sl, r1, #2
   34f14:	ldr	fp, [r0, #20]
   34f18:	sub	sp, sp, #12
   34f1c:	mov	r4, r1
   34f20:	mov	r0, sl
   34f24:	add	r1, r1, #3
   34f28:	str	r3, [sp, #4]
   34f2c:	ldr	r7, [fp, #4]
   34f30:	ldr	r8, [fp, #8]
   34f34:	sub	r6, r2, r7
   34f38:	sub	r9, r6, r8
   34f3c:	sub	r2, r9, #4
   34f40:	sub	r9, r9, #3
   34f44:	bl	126c8 <memcmp@plt>
   34f48:	mov	r2, r8
   34f4c:	ldr	r1, [fp, #12]
   34f50:	mov	r5, r0
   34f54:	add	r0, sl, r9
   34f58:	add	r0, r0, #1
   34f5c:	bl	126c8 <memcmp@plt>
   34f60:	ldrb	r2, [r4, #1]
   34f64:	ldrb	r3, [r4, #2]
   34f68:	eor	r2, r2, #1
   34f6c:	ldrb	ip, [r4]
   34f70:	ldrb	r1, [sl, r9]
   34f74:	mvn	r3, r3
   34f78:	orr	r2, r2, r3
   34f7c:	orr	r2, r2, ip
   34f80:	orr	r2, r2, r1
   34f84:	uxtb	r2, r2
   34f88:	orr	r0, r5, r0
   34f8c:	orrs	r2, r2, r0
   34f90:	bne	34fb4 <crc32@@Base+0x1b810>
   34f94:	mov	r2, r7
   34f98:	ldr	r1, [sp, #4]
   34f9c:	add	r0, r4, r6
   34fa0:	bl	126c8 <memcmp@plt>
   34fa4:	cmp	r0, #0
   34fa8:	mvnne	r0, #12
   34fac:	add	sp, sp, #12
   34fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34fb4:	mvn	r0, #21
   34fb8:	b	34fac <crc32@@Base+0x1b808>
   34fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34fc0:	sub	sp, sp, #76	; 0x4c
   34fc4:	mov	r7, r2
   34fc8:	movw	ip, #61168	; 0xeef0
   34fcc:	ldr	r2, [sp, #112]	; 0x70
   34fd0:	movt	ip, #4
   34fd4:	str	ip, [sp, #20]
   34fd8:	mov	r6, r1
   34fdc:	sub	r2, r7, r2
   34fe0:	ldr	ip, [ip]
   34fe4:	sub	r5, r2, #1
   34fe8:	ldr	r9, [r0, #20]
   34fec:	sub	r4, r2, #2
   34ff0:	str	r3, [sp, #28]
   34ff4:	mov	r0, r5
   34ff8:	mov	r3, #0
   34ffc:	str	ip, [sp, #68]	; 0x44
   35000:	str	r3, [sp, #64]	; 0x40
   35004:	str	r3, [sp, #60]	; 0x3c
   35008:	str	r4, [sp, #24]
   3500c:	bl	125a8 <malloc@plt>
   35010:	mov	r8, r0
   35014:	str	r0, [sp, #8]
   35018:	ldr	r0, [sp, #112]	; 0x70
   3501c:	bl	125a8 <malloc@plt>
   35020:	mov	r1, #1
   35024:	mov	sl, r0
   35028:	str	r0, [sp, #4]
   3502c:	mov	r0, r5
   35030:	bl	12518 <calloc@plt>
   35034:	mov	fp, r0
   35038:	mov	r0, r5
   3503c:	bl	125a8 <malloc@plt>
   35040:	str	r0, [sp]
   35044:	mov	r0, r4
   35048:	bl	125a8 <malloc@plt>
   3504c:	str	r0, [sp, #12]
   35050:	ldr	r0, [sp, #112]	; 0x70
   35054:	bl	125a8 <malloc@plt>
   35058:	cmp	sl, #0
   3505c:	cmpne	r8, #0
   35060:	str	r0, [sp, #16]
   35064:	beq	352dc <crc32@@Base+0x1bb38>
   35068:	ldr	r3, [sp]
   3506c:	cmp	r3, #0
   35070:	cmpne	fp, #0
   35074:	beq	352dc <crc32@@Base+0x1bb38>
   35078:	ldr	r3, [sp, #12]
   3507c:	clz	r4, r0
   35080:	cmp	r3, #0
   35084:	lsr	r4, r4, #5
   35088:	moveq	r4, #1
   3508c:	cmp	r4, #0
   35090:	bne	352dc <crc32@@Base+0x1bb38>
   35094:	add	r7, r6, r7
   35098:	ldrb	r3, [r7, #-1]
   3509c:	cmp	r3, #188	; 0xbc
   350a0:	bne	352fc <crc32@@Base+0x1bb58>
   350a4:	ldr	r7, [sp, #8]
   350a8:	mov	r2, r5
   350ac:	mov	r1, r6
   350b0:	mov	r0, r7
   350b4:	bl	1259c <memcpy@plt>
   350b8:	ldr	r2, [sp, #112]	; 0x70
   350bc:	add	r1, r6, r5
   350c0:	ldr	r0, [sp, #4]
   350c4:	bl	1259c <memcpy@plt>
   350c8:	ldrb	r8, [r7]
   350cc:	tst	r8, #128	; 0x80
   350d0:	bne	3531c <crc32@@Base+0x1bb78>
   350d4:	ldr	r6, [r9, #4]
   350d8:	add	r2, sp, #56	; 0x38
   350dc:	ldr	r3, [sp, #4]
   350e0:	ldr	r1, [sp, #112]	; 0x70
   350e4:	mov	r0, r6
   350e8:	str	r3, [sp, #32]
   350ec:	mov	r3, #4
   350f0:	str	r1, [sp, #36]	; 0x24
   350f4:	strd	r2, [sp, #40]	; 0x28
   350f8:	bl	125a8 <malloc@plt>
   350fc:	subs	sl, r0, #0
   35100:	beq	35348 <crc32@@Base+0x1bba4>
   35104:	cmp	r5, #0
   35108:	ble	352d4 <crc32@@Base+0x1bb30>
   3510c:	mov	r7, r4
   35110:	strb	r7, [sp, #59]	; 0x3b
   35114:	lsr	r2, r7, #24
   35118:	lsr	r3, r7, #16
   3511c:	strb	r2, [sp, #56]	; 0x38
   35120:	strb	r3, [sp, #57]	; 0x39
   35124:	lsr	r2, r7, #8
   35128:	mov	r3, sl
   3512c:	strb	r2, [sp, #58]	; 0x3a
   35130:	add	r1, sp, #32
   35134:	mov	r2, #2
   35138:	ldr	r0, [r9]
   3513c:	ldr	ip, [r9, #20]
   35140:	blx	ip
   35144:	cmp	r0, #0
   35148:	blt	35190 <crc32@@Base+0x1b9ec>
   3514c:	cmp	r5, r4
   35150:	cmpgt	r6, #0
   35154:	ble	35184 <crc32@@Base+0x1b9e0>
   35158:	sub	r3, r4, #1
   3515c:	sub	r2, sl, #1
   35160:	add	r3, fp, r3
   35164:	mov	ip, r4
   35168:	add	r4, r4, #1
   3516c:	ldrb	r1, [r2, #1]!
   35170:	sub	r0, r4, ip
   35174:	cmp	r6, r0
   35178:	cmpgt	r5, r4
   3517c:	strb	r1, [r3, #1]!
   35180:	bgt	35168 <crc32@@Base+0x1b9c4>
   35184:	cmp	r5, r4
   35188:	add	r7, r7, #1
   3518c:	bgt	35110 <crc32@@Base+0x1b96c>
   35190:	mov	r0, sl
   35194:	bl	12128 <free@plt>
   35198:	ldr	r3, [sp]
   3519c:	sub	r0, fp, #1
   351a0:	ldr	ip, [sp, #8]
   351a4:	mov	r2, #0
   351a8:	sub	r1, r3, #1
   351ac:	b	351b4 <crc32@@Base+0x1ba10>
   351b0:	ldrb	r8, [ip, #1]!
   351b4:	add	r2, r2, #1
   351b8:	ldrb	r3, [r0, #1]!
   351bc:	cmp	r5, r2
   351c0:	eor	r3, r3, r8
   351c4:	strb	r3, [r1, #1]!
   351c8:	bgt	351b0 <crc32@@Base+0x1ba0c>
   351cc:	ldr	r2, [sp]
   351d0:	ldrb	r3, [r2]
   351d4:	and	r3, r3, #127	; 0x7f
   351d8:	strb	r3, [r2]
   351dc:	cmp	r3, #1
   351e0:	bne	352a8 <crc32@@Base+0x1bb04>
   351e4:	ldr	r6, [sp, #24]
   351e8:	ldr	r5, [sp, #12]
   351ec:	ldr	r3, [sp]
   351f0:	mov	r2, r6
   351f4:	add	r1, r3, #1
   351f8:	mov	r0, r5
   351fc:	bl	1259c <memcpy@plt>
   35200:	ldr	r2, [sp, #28]
   35204:	ldr	r4, [r9, #20]
   35208:	mov	ip, #8
   3520c:	ldr	r0, [r9]
   35210:	add	r3, sp, #60	; 0x3c
   35214:	ldr	r7, [sp, #16]
   35218:	add	r1, sp, #32
   3521c:	str	r2, [sp, #40]	; 0x28
   35220:	ldr	r2, [sp, #112]	; 0x70
   35224:	str	r3, [sp, #32]
   35228:	mov	r3, r7
   3522c:	str	ip, [sp, #36]	; 0x24
   35230:	str	r2, [sp, #44]	; 0x2c
   35234:	mov	r2, #3
   35238:	str	r5, [sp, #48]	; 0x30
   3523c:	str	r6, [sp, #52]	; 0x34
   35240:	blx	r4
   35244:	ldr	r2, [sp, #112]	; 0x70
   35248:	mov	r1, r7
   3524c:	ldr	r0, [sp, #4]
   35250:	bl	126c8 <memcmp@plt>
   35254:	mov	r4, r0
   35258:	ldr	r0, [sp, #16]
   3525c:	bl	12128 <free@plt>
   35260:	ldr	r0, [sp, #12]
   35264:	bl	12128 <free@plt>
   35268:	ldr	r0, [sp]
   3526c:	bl	12128 <free@plt>
   35270:	mov	r0, fp
   35274:	bl	12128 <free@plt>
   35278:	ldr	r0, [sp, #4]
   3527c:	bl	12128 <free@plt>
   35280:	ldr	r0, [sp, #8]
   35284:	bl	12128 <free@plt>
   35288:	ldr	r3, [sp, #20]
   3528c:	ldr	r2, [sp, #68]	; 0x44
   35290:	mov	r0, r4
   35294:	ldr	r3, [r3]
   35298:	cmp	r2, r3
   3529c:	bne	35354 <crc32@@Base+0x1bbb0>
   352a0:	add	sp, sp, #76	; 0x4c
   352a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   352a8:	movw	r2, #55656	; 0xd968
   352ac:	movw	r1, #55752	; 0xd9c8
   352b0:	movt	r2, #3
   352b4:	movt	r1, #3
   352b8:	mov	r0, #1
   352bc:	mov	r4, #22
   352c0:	bl	12770 <__printf_chk@plt>
   352c4:	movw	r0, #55816	; 0xda08
   352c8:	movt	r0, #3
   352cc:	bl	1226c <puts@plt>
   352d0:	b	35258 <crc32@@Base+0x1bab4>
   352d4:	bl	12128 <free@plt>
   352d8:	b	351cc <crc32@@Base+0x1ba28>
   352dc:	movw	r2, #55656	; 0xd968
   352e0:	movw	r1, #55676	; 0xd97c
   352e4:	movt	r2, #3
   352e8:	movt	r1, #3
   352ec:	mov	r0, #1
   352f0:	mvn	r4, #11
   352f4:	bl	12770 <__printf_chk@plt>
   352f8:	b	35258 <crc32@@Base+0x1bab4>
   352fc:	movw	r2, #55656	; 0xd968
   35300:	movw	r1, #55708	; 0xd99c
   35304:	movt	r2, #3
   35308:	movt	r1, #3
   3530c:	mov	r0, #1
   35310:	mvn	r4, #21
   35314:	bl	12770 <__printf_chk@plt>
   35318:	b	35258 <crc32@@Base+0x1bab4>
   3531c:	movw	r2, #55656	; 0xd968
   35320:	movw	r1, #55752	; 0xd9c8
   35324:	movt	r2, #3
   35328:	movt	r1, #3
   3532c:	mov	r0, #1
   35330:	mvn	r4, #21
   35334:	bl	12770 <__printf_chk@plt>
   35338:	movw	r0, #55780	; 0xd9e4
   3533c:	movt	r0, #3
   35340:	bl	1226c <puts@plt>
   35344:	b	35258 <crc32@@Base+0x1bab4>
   35348:	cmp	r5, #0
   3534c:	ble	351cc <crc32@@Base+0x1ba28>
   35350:	b	35198 <crc32@@Base+0x1b9f4>
   35354:	bl	12494 <__stack_chk_fail@plt>
   35358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3535c:	mov	r4, r0
   35360:	add	fp, sp, #32
   35364:	sub	sp, sp, #132	; 0x84
   35368:	ldr	ip, [r0, #28]
   3536c:	ldr	r0, [r0, #20]
   35370:	movw	r6, #61168	; 0xeef0
   35374:	mov	r8, r1
   35378:	movt	r6, #4
   3537c:	mov	r9, r2
   35380:	ldr	r2, [ip, #4]
   35384:	ldr	r1, [r0, #4]
   35388:	str	r3, [fp, #-152]	; 0xffffff68
   3538c:	add	r3, r2, #7
   35390:	cmp	r2, r1
   35394:	ldr	r2, [r6]
   35398:	bic	r3, r3, #7
   3539c:	ldr	r5, [r4, #32]
   353a0:	sub	sp, sp, r3
   353a4:	str	r2, [fp, #-40]	; 0xffffffd8
   353a8:	blt	35524 <crc32@@Base+0x1bd80>
   353ac:	movw	r2, #29040	; 0x7170
   353b0:	mov	r1, #0
   353b4:	movt	r2, #3
   353b8:	mov	r0, r5
   353bc:	bl	30c1c <crc32@@Base+0x17478>
   353c0:	subs	r3, r0, #0
   353c4:	str	r3, [fp, #-156]	; 0xffffff64
   353c8:	blt	3552c <crc32@@Base+0x1bd88>
   353cc:	ldr	r0, [r4, #20]
   353d0:	add	r7, sp, #8
   353d4:	mov	r1, r8
   353d8:	mov	r2, r9
   353dc:	mov	r3, r7
   353e0:	ldr	r8, [r0, #20]
   353e4:	ldr	r0, [r0]
   353e8:	blx	r8
   353ec:	cmp	r0, #0
   353f0:	blt	35524 <crc32@@Base+0x1bd80>
   353f4:	ldr	r3, [r4, #36]	; 0x24
   353f8:	cmn	r3, #1
   353fc:	beq	35420 <crc32@@Base+0x1bc7c>
   35400:	str	r3, [sp]
   35404:	mov	r1, r7
   35408:	ldr	r3, [fp, #4]
   3540c:	mov	r0, r4
   35410:	ldr	r2, [fp, #-152]	; 0xffffff68
   35414:	bl	34d30 <crc32@@Base+0x1b58c>
   35418:	cmp	r0, #0
   3541c:	beq	3547c <crc32@@Base+0x1bcd8>
   35420:	ldr	r1, [r4, #4]
   35424:	mov	r3, #100	; 0x64
   35428:	movw	r2, #55504	; 0xd8d0
   3542c:	sub	r0, fp, #140	; 0x8c
   35430:	movt	r2, #3
   35434:	str	r2, [sp]
   35438:	str	r1, [sp, #4]
   3543c:	mov	r2, #1
   35440:	mov	r1, r3
   35444:	bl	125cc <__snprintf_chk@plt>
   35448:	sub	r2, fp, #140	; 0x8c
   3544c:	ldr	r1, [fp, #-156]	; 0xffffff64
   35450:	mov	r0, r5
   35454:	bl	30c1c <crc32@@Base+0x17478>
   35458:	ldr	r3, [fp, #4]
   3545c:	ldr	r2, [fp, #-152]	; 0xffffff68
   35460:	mov	r1, r7
   35464:	str	r0, [sp]
   35468:	mov	r8, r0
   3546c:	mov	r0, r4
   35470:	bl	34d30 <crc32@@Base+0x1b58c>
   35474:	subs	r9, r0, #0
   35478:	bne	3549c <crc32@@Base+0x1bcf8>
   3547c:	mov	r9, #0
   35480:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35484:	mov	r0, r9
   35488:	ldr	r3, [r6]
   3548c:	cmp	r2, r3
   35490:	bne	35534 <crc32@@Base+0x1bd90>
   35494:	sub	sp, fp, #32
   35498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3549c:	sub	sl, fp, #36	; 0x24
   354a0:	mov	r3, #0
   354a4:	ldr	r1, [fp, #-156]	; 0xffffff64
   354a8:	str	r3, [sl, #-108]!	; 0xffffff94
   354ac:	mov	r2, sl
   354b0:	ldr	r0, [r4, #8]
   354b4:	bl	2d9d0 <crc32@@Base+0x1422c>
   354b8:	subs	r5, r0, #0
   354bc:	bge	354dc <crc32@@Base+0x1bd38>
   354c0:	b	35480 <crc32@@Base+0x1bcdc>
   354c4:	mov	r1, r5
   354c8:	mov	r2, sl
   354cc:	ldr	r0, [r4, #8]
   354d0:	bl	2d9d0 <crc32@@Base+0x1422c>
   354d4:	subs	r5, r0, #0
   354d8:	blt	35480 <crc32@@Base+0x1bcdc>
   354dc:	ldr	r3, [fp, #-144]	; 0xffffff70
   354e0:	cmp	r3, #0
   354e4:	ble	35480 <crc32@@Base+0x1bcdc>
   354e8:	subs	r2, r8, r5
   354ec:	movne	r2, #1
   354f0:	cmp	r3, #1
   354f4:	movne	r2, #0
   354f8:	cmp	r2, #0
   354fc:	beq	354c4 <crc32@@Base+0x1bd20>
   35500:	str	r5, [sp]
   35504:	mov	r1, r7
   35508:	ldr	r3, [fp, #4]
   3550c:	mov	r0, r4
   35510:	ldr	r2, [fp, #-152]	; 0xffffff68
   35514:	bl	34d30 <crc32@@Base+0x1b58c>
   35518:	subs	r9, r0, #0
   3551c:	bne	354c4 <crc32@@Base+0x1bd20>
   35520:	b	3547c <crc32@@Base+0x1bcd8>
   35524:	mvn	r9, #21
   35528:	b	35480 <crc32@@Base+0x1bcdc>
   3552c:	mvn	r9, #1
   35530:	b	35480 <crc32@@Base+0x1bcdc>
   35534:	bl	12494 <__stack_chk_fail@plt>
   35538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3553c:	movw	r8, #61168	; 0xeef0
   35540:	movt	r8, #4
   35544:	mov	r7, r2
   35548:	sub	sp, sp, #28
   3554c:	mov	r6, r1
   35550:	ldr	r2, [r8]
   35554:	add	r1, sp, #12
   35558:	mov	sl, r3
   3555c:	str	r2, [sp, #20]
   35560:	bl	2a888 <crc32@@Base+0x110e4>
   35564:	cmp	r0, #0
   35568:	bne	355d8 <crc32@@Base+0x1be34>
   3556c:	ldr	r0, [sp, #12]
   35570:	add	r1, sp, #16
   35574:	ldr	r3, [r0, #16]
   35578:	blx	r3
   3557c:	cmp	r0, #0
   35580:	bne	355d8 <crc32@@Base+0x1be34>
   35584:	cmp	r7, #1
   35588:	beq	355f4 <crc32@@Base+0x1be50>
   3558c:	mov	r4, r0
   35590:	sub	r7, r7, #1
   35594:	mov	r9, r0
   35598:	mov	r5, r6
   3559c:	b	355b0 <crc32@@Base+0x1be0c>
   355a0:	add	r4, r4, #1
   355a4:	add	r5, r5, #8
   355a8:	cmp	r7, r4
   355ac:	beq	355f0 <crc32@@Base+0x1be4c>
   355b0:	ldr	ip, [sp, #12]
   355b4:	ldr	r3, [r5, #4]
   355b8:	ldr	r2, [r6, r4, lsl #3]
   355bc:	ldr	r1, [sp, #16]
   355c0:	mov	r0, ip
   355c4:	str	r9, [sp]
   355c8:	ldr	fp, [ip, #20]
   355cc:	blx	fp
   355d0:	cmp	r0, #0
   355d4:	beq	355a0 <crc32@@Base+0x1bdfc>
   355d8:	ldr	r2, [sp, #20]
   355dc:	ldr	r3, [r8]
   355e0:	cmp	r2, r3
   355e4:	bne	3563c <crc32@@Base+0x1be98>
   355e8:	add	sp, sp, #28
   355ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   355f0:	add	r6, r6, r7, lsl #3
   355f4:	ldr	ip, [sp, #12]
   355f8:	mov	lr, #1
   355fc:	ldrd	r2, [r6]
   35600:	ldr	r1, [sp, #16]
   35604:	str	lr, [sp]
   35608:	mov	r0, ip
   3560c:	ldr	r4, [ip, #20]
   35610:	blx	r4
   35614:	cmp	r0, #0
   35618:	bne	355d8 <crc32@@Base+0x1be34>
   3561c:	ldr	r3, [sp, #12]
   35620:	mov	r2, sl
   35624:	ldr	r1, [sp, #16]
   35628:	ldr	r4, [r3, #24]
   3562c:	mov	r0, r3
   35630:	ldr	r3, [r3, #4]
   35634:	blx	r4
   35638:	b	355d8 <crc32@@Base+0x1be34>
   3563c:	bl	12494 <__stack_chk_fail@plt>
   35640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35644:	sub	sp, sp, #44	; 0x2c
   35648:	mov	fp, r0
   3564c:	mov	r0, r1
   35650:	str	r1, [sp, #16]
   35654:	ldr	r1, [fp]
   35658:	str	r3, [sp, #32]
   3565c:	cmp	r1, #0
   35660:	beq	3580c <crc32@@Base+0x1c068>
   35664:	sub	r3, r0, #4
   35668:	str	r3, [sp, #36]	; 0x24
   3566c:	mov	r1, r3
   35670:	mov	r3, #0
   35674:	mov	ip, r3
   35678:	str	ip, [r1, #4]!
   3567c:	add	r3, r3, #1
   35680:	ldr	r0, [fp]
   35684:	cmp	r0, r3
   35688:	bhi	35678 <crc32@@Base+0x1bed4>
   3568c:	cmp	r0, #0
   35690:	beq	3580c <crc32@@Base+0x1c068>
   35694:	ldr	r3, [fp, #8]
   35698:	str	fp, [sp, #4]
   3569c:	str	r3, [sp, #28]
   356a0:	sub	r3, r2, #4
   356a4:	str	r3, [sp, #20]
   356a8:	mov	r3, #0
   356ac:	str	r3, [sp, #24]
   356b0:	ldr	r3, [sp, #20]
   356b4:	mov	fp, #0
   356b8:	ldr	ip, [sp, #16]
   356bc:	cmp	r0, #1
   356c0:	ldr	r9, [sp, #32]
   356c4:	mov	r7, #0
   356c8:	ldr	r8, [r3, #4]!
   356cc:	ldr	r6, [ip]
   356d0:	ldr	r2, [sp, #4]
   356d4:	str	r3, [sp, #20]
   356d8:	ldr	r3, [r9]
   356dc:	mov	sl, r6
   356e0:	ldr	r5, [r2, #4]
   356e4:	ldr	r4, [sp, #28]
   356e8:	umlal	sl, fp, r3, r8
   356ec:	ldr	r1, [r4]
   356f0:	mul	r5, sl, r5
   356f4:	mov	r6, sl
   356f8:	umlal	r6, r7, r1, r5
   356fc:	bls	35820 <crc32@@Base+0x1c07c>
   35700:	str	r8, [sp, #8]
   35704:	mov	lr, #1
   35708:	str	r5, [sp, #12]
   3570c:	mov	r8, r9
   35710:	b	35718 <crc32@@Base+0x1bf74>
   35714:	mov	lr, r3
   35718:	ldr	r5, [r8, #4]!
   3571c:	mov	r3, #0
   35720:	ldr	r6, [sp, #8]
   35724:	mov	sl, fp
   35728:	mov	fp, r3
   3572c:	ldr	r9, [r4, #4]!
   35730:	mov	r1, r3
   35734:	ldr	r3, [sp, #12]
   35738:	umlal	sl, fp, r5, r6
   3573c:	ldr	r2, [ip, #4]
   35740:	mov	r0, r7
   35744:	umlal	r0, r1, r9, r3
   35748:	adds	r6, sl, r2
   3574c:	ldr	r2, [sp, #4]
   35750:	adc	r7, fp, #0
   35754:	adds	r6, r0, r6
   35758:	str	r6, [ip], #4
   3575c:	add	r3, lr, #1
   35760:	mov	fp, r7
   35764:	ldr	r2, [r2]
   35768:	adc	r7, r1, #0
   3576c:	cmp	r3, r2
   35770:	bcc	35714 <crc32@@Base+0x1bf70>
   35774:	ldr	r3, [sp, #16]
   35778:	add	lr, r3, lr, lsl #2
   3577c:	adds	r2, r7, fp
   35780:	mov	r1, #0
   35784:	adc	r3, r1, r1
   35788:	mov	r5, r1
   3578c:	str	r2, [lr]
   35790:	mov	r4, r3
   35794:	orrs	r3, r4, r5
   35798:	beq	35814 <crc32@@Base+0x1c070>
   3579c:	ldr	r7, [sp, #4]
   357a0:	ldr	r3, [r7]
   357a4:	cmp	r3, r1
   357a8:	beq	3580c <crc32@@Base+0x1c068>
   357ac:	ldr	r3, [sp, #28]
   357b0:	mov	ip, r1
   357b4:	ldr	r1, [sp, #36]	; 0x24
   357b8:	mov	r2, #0
   357bc:	sub	lr, r3, #4
   357c0:	mov	r3, #0
   357c4:	ldr	r6, [r1, #4]!
   357c8:	add	ip, ip, #1
   357cc:	ldr	r0, [lr, #4]!
   357d0:	adds	r4, r2, r6
   357d4:	adc	r5, r3, #0
   357d8:	subs	r8, r4, r0
   357dc:	str	r8, [r1]
   357e0:	sbc	r9, r5, #0
   357e4:	ldr	r0, [r7]
   357e8:	mov	r2, r9
   357ec:	asr	r3, r9, #31
   357f0:	cmp	ip, r0
   357f4:	bcc	357c4 <crc32@@Base+0x1c020>
   357f8:	ldr	r3, [sp, #24]
   357fc:	add	r3, r3, #1
   35800:	str	r3, [sp, #24]
   35804:	cmp	r3, r0
   35808:	bcc	356b0 <crc32@@Base+0x1bf0c>
   3580c:	add	sp, sp, #44	; 0x2c
   35810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35814:	ldr	r3, [sp, #4]
   35818:	ldr	r0, [r3]
   3581c:	b	357f8 <crc32@@Base+0x1c054>
   35820:	ldr	lr, [sp, #16]
   35824:	b	3577c <crc32@@Base+0x1bfd8>
   35828:	movw	ip, #61168	; 0xeef0
   3582c:	movt	ip, #4
   35830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35834:	add	fp, sp, #32
   35838:	mov	lr, ip
   3583c:	sub	sp, sp, #76	; 0x4c
   35840:	str	ip, [fp, #-100]	; 0xffffff9c
   35844:	mov	ip, r0
   35848:	ldr	r0, [lr]
   3584c:	cmp	r2, #0
   35850:	str	r1, [fp, #-96]	; 0xffffffa0
   35854:	str	r3, [fp, #-104]	; 0xffffff98
   35858:	str	r0, [fp, #-40]	; 0xffffffd8
   3585c:	beq	35cf4 <crc32@@Base+0x1c550>
   35860:	ldrd	r0, [r2, #8]
   35864:	ldr	r3, [r2, #16]
   35868:	cmp	r0, #0
   3586c:	str	r1, [fp, #-64]	; 0xffffffc0
   35870:	str	r3, [fp, #-68]	; 0xffffffbc
   35874:	beq	35cd8 <crc32@@Base+0x1c534>
   35878:	ldr	r1, [r0]
   3587c:	mov	r6, #0
   35880:	ldr	r0, [r0, #4]
   35884:	ubfx	r4, r1, #16, #8
   35888:	ubfx	lr, r1, #8, #8
   3588c:	lsl	r5, r1, #24
   35890:	str	r5, [fp, #-72]	; 0xffffffb8
   35894:	mov	r5, #0
   35898:	str	r5, [fp, #-76]	; 0xffffffb4
   3589c:	lsl	r4, r4, #8
   358a0:	str	r4, [fp, #-88]	; 0xffffffa8
   358a4:	ldrd	r4, [fp, #-76]	; 0xffffffb4
   358a8:	lsl	r7, lr, #16
   358ac:	lsr	lr, r0, #24
   358b0:	mov	r8, r4
   358b4:	mov	r9, r5
   358b8:	orr	r8, r8, lr
   358bc:	ubfx	lr, r0, #16, #8
   358c0:	orr	r5, r9, r7
   358c4:	lsr	r7, r1, #24
   358c8:	mov	r1, #0
   358cc:	str	r1, [fp, #-92]	; 0xffffffa4
   358d0:	orr	r4, r8, r4
   358d4:	ldrd	r8, [fp, #-92]	; 0xffffffa4
   358d8:	ubfx	r1, r0, #8, #8
   358dc:	orr	r8, r8, r4
   358e0:	uxtb	r4, r0
   358e4:	orr	r9, r9, r5
   358e8:	lsr	r0, r4, #8
   358ec:	str	r0, [fp, #-80]	; 0xffffffb0
   358f0:	lsl	r0, r4, #24
   358f4:	str	r0, [fp, #-84]	; 0xffffffac
   358f8:	uxtb	r0, r1
   358fc:	orr	r4, r8, r6
   35900:	orr	r5, r9, r7
   35904:	ldrd	r8, [fp, #-84]	; 0xffffffac
   35908:	lsr	r7, r0, #16
   3590c:	lsl	r6, r0, #16
   35910:	uxtb	r0, lr
   35914:	orr	r8, r8, r4
   35918:	orr	r9, r9, r5
   3591c:	orr	r8, r8, r6
   35920:	orr	r9, r9, r7
   35924:	lsr	r5, r0, #24
   35928:	lsl	r4, r0, #8
   3592c:	orr	r7, r9, r5
   35930:	orr	r6, r8, r4
   35934:	strd	r6, [fp, #-52]	; 0xffffffcc
   35938:	cmp	r3, #0
   3593c:	beq	35cec <crc32@@Base+0x1c548>
   35940:	ldr	r7, [r2, #4]
   35944:	cmp	r7, #0
   35948:	beq	35cec <crc32@@Base+0x1c548>
   3594c:	ldr	r9, [r2]
   35950:	cmp	r9, #0
   35954:	beq	35cec <crc32@@Base+0x1c548>
   35958:	sub	r2, r3, #2048	; 0x800
   3595c:	cmp	r2, #2048	; 0x800
   35960:	bhi	35cec <crc32@@Base+0x1c548>
   35964:	lsr	r3, r3, #5
   35968:	mov	r6, #0
   3596c:	str	r3, [fp, #-68]	; 0xffffffbc
   35970:	lsl	r4, r3, #2
   35974:	add	r5, r4, #10
   35978:	add	r7, r7, r4
   3597c:	bic	r1, r5, #7
   35980:	sub	sp, sp, r1
   35984:	mov	r2, sp
   35988:	sub	sp, sp, r1
   3598c:	sub	sl, r2, #4
   35990:	str	r2, [fp, #-60]	; 0xffffffc4
   35994:	mov	r8, sp
   35998:	str	r8, [fp, #-56]	; 0xffffffc8
   3599c:	ldr	lr, [r7, #-4]!
   359a0:	add	r6, r6, #1
   359a4:	cmp	r3, r6
   359a8:	ubfx	r0, lr, #8, #8
   359ac:	ubfx	r1, lr, #16, #8
   359b0:	lsr	r2, lr, #24
   359b4:	orr	r2, r2, lr, lsl #24
   359b8:	orr	r2, r2, r0, lsl #16
   359bc:	orr	r2, r2, r1, lsl #8
   359c0:	str	r2, [sl, #4]!
   359c4:	bgt	3599c <crc32@@Base+0x1c1f8>
   359c8:	add	r9, r9, r4
   359cc:	sub	r7, r8, #4
   359d0:	mov	r6, #0
   359d4:	ldr	r1, [r9, #-4]!
   359d8:	add	r6, r6, #1
   359dc:	cmp	r3, r6
   359e0:	ubfx	lr, r1, #8, #8
   359e4:	ubfx	r0, r1, #16, #8
   359e8:	lsr	r2, r1, #24
   359ec:	orr	r2, r2, r1, lsl #24
   359f0:	orr	r2, r2, lr, lsl #16
   359f4:	orr	r2, r2, r0, lsl #8
   359f8:	str	r2, [r7, #4]!
   359fc:	bgt	359d4 <crc32@@Base+0x1c230>
   35a00:	ldr	r2, [fp, #-96]	; 0xffffffa0
   35a04:	mov	r1, ip
   35a08:	bic	r3, r2, #3
   35a0c:	add	r3, r3, #10
   35a10:	bic	r3, r3, #7
   35a14:	sub	sp, sp, r3
   35a18:	mov	r9, sp
   35a1c:	mov	r0, r9
   35a20:	bl	1259c <memcpy@plt>
   35a24:	bic	r3, r5, #7
   35a28:	str	sp, [fp, #-76]	; 0xffffffb4
   35a2c:	sub	sp, sp, r3
   35a30:	sub	ip, r4, #4
   35a34:	mov	r7, sp
   35a38:	sub	sp, sp, r3
   35a3c:	add	ip, r9, ip
   35a40:	sub	sl, r7, #4
   35a44:	mov	r5, sp
   35a48:	sub	sp, sp, r3
   35a4c:	sub	lr, ip, r4
   35a50:	mov	r2, sp
   35a54:	sub	sp, sp, r3
   35a58:	lsr	r2, r2, #2
   35a5c:	str	r2, [fp, #-84]	; 0xffffffac
   35a60:	mov	r6, sp
   35a64:	lsl	r4, r2, #2
   35a68:	ldr	r0, [ip], #-4
   35a6c:	ubfx	r1, r0, #8, #8
   35a70:	ubfx	r2, r0, #16, #8
   35a74:	lsr	r3, r0, #24
   35a78:	cmp	lr, ip
   35a7c:	orr	r3, r3, r0, lsl #24
   35a80:	orr	r3, r3, r1, lsl #16
   35a84:	orr	r3, r3, r2, lsl #8
   35a88:	str	r3, [sl, #4]!
   35a8c:	bne	35a68 <crc32@@Base+0x1c2c4>
   35a90:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   35a94:	orrs	r3, r0, r1
   35a98:	beq	35cb4 <crc32@@Base+0x1c510>
   35a9c:	lsrs	r3, r1, #1
   35aa0:	rrx	r2, r0
   35aa4:	orrs	ip, r2, r3
   35aa8:	beq	35cb4 <crc32@@Base+0x1c510>
   35aac:	mov	sl, #2
   35ab0:	b	35ac0 <crc32@@Base+0x1c31c>
   35ab4:	add	sl, sl, #1
   35ab8:	cmp	sl, #65	; 0x41
   35abc:	beq	35cb4 <crc32@@Base+0x1c510>
   35ac0:	lsrs	r3, r3, #1
   35ac4:	rrx	r2, r2
   35ac8:	orrs	ip, r2, r3
   35acc:	bne	35ab4 <crc32@@Base+0x1c310>
   35ad0:	and	r0, r0, #1
   35ad4:	cmp	r0, #0
   35ad8:	beq	35cb4 <crc32@@Base+0x1c510>
   35adc:	mov	r3, r8
   35ae0:	mov	r2, r7
   35ae4:	mov	r1, r5
   35ae8:	sub	r0, fp, #68	; 0x44
   35aec:	bl	35640 <crc32@@Base+0x1be9c>
   35af0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35af4:	mov	r1, r5
   35af8:	mov	r0, r6
   35afc:	lsl	r2, r2, #2
   35b00:	bl	1259c <memcpy@plt>
   35b04:	subs	r8, sl, #2
   35b08:	beq	35b6c <crc32@@Base+0x1c3c8>
   35b0c:	mov	sl, #1
   35b10:	b	35b30 <crc32@@Base+0x1c38c>
   35b14:	mov	r3, r6
   35b18:	mov	r2, r4
   35b1c:	mov	r1, r5
   35b20:	sub	r0, fp, #68	; 0x44
   35b24:	bl	35640 <crc32@@Base+0x1be9c>
   35b28:	subs	r8, r8, #1
   35b2c:	beq	35b6c <crc32@@Base+0x1c3c8>
   35b30:	mov	r3, r5
   35b34:	mov	r2, r5
   35b38:	mov	r1, r4
   35b3c:	sub	r0, fp, #68	; 0x44
   35b40:	bl	35640 <crc32@@Base+0x1be9c>
   35b44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35b48:	ands	r3, r3, sl, lsl r8
   35b4c:	bne	35b14 <crc32@@Base+0x1c370>
   35b50:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35b54:	mov	r1, r4
   35b58:	mov	r0, r5
   35b5c:	lsl	r2, r2, #2
   35b60:	bl	1259c <memcpy@plt>
   35b64:	subs	r8, r8, #1
   35b68:	bne	35b30 <crc32@@Base+0x1c38c>
   35b6c:	mov	r3, r5
   35b70:	mov	r2, r5
   35b74:	mov	r1, r4
   35b78:	sub	r0, fp, #68	; 0x44
   35b7c:	bl	35640 <crc32@@Base+0x1be9c>
   35b80:	mov	r3, r7
   35b84:	mov	r1, r5
   35b88:	mov	r2, r4
   35b8c:	sub	r0, fp, #68	; 0x44
   35b90:	bl	35640 <crc32@@Base+0x1be9c>
   35b94:	ldr	r6, [fp, #-68]	; 0xffffffbc
   35b98:	mov	r1, r5
   35b9c:	mov	r0, r4
   35ba0:	lsl	r5, r6, #2
   35ba4:	mov	r2, r5
   35ba8:	bl	1259c <memcpy@plt>
   35bac:	subs	r3, r6, #1
   35bb0:	bmi	35c04 <crc32@@Base+0x1c460>
   35bb4:	ldr	r1, [fp, #-84]	; 0xffffffac
   35bb8:	lsl	r2, r3, #2
   35bbc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35bc0:	ldr	r2, [r2, r1, lsl #2]
   35bc4:	ldr	r1, [r0, r3, lsl #2]
   35bc8:	cmp	r1, r2
   35bcc:	bhi	35c64 <crc32@@Base+0x1c4c0>
   35bd0:	bcc	35c04 <crc32@@Base+0x1c460>
   35bd4:	sub	r1, r5, #4
   35bd8:	mov	r2, r3
   35bdc:	add	r0, r0, r1
   35be0:	add	r1, r4, r1
   35be4:	b	35bfc <crc32@@Base+0x1c458>
   35be8:	ldr	lr, [r1, #-4]!
   35bec:	ldr	ip, [r0, #-4]!
   35bf0:	cmp	lr, ip
   35bf4:	bcc	35c64 <crc32@@Base+0x1c4c0>
   35bf8:	bhi	35c04 <crc32@@Base+0x1c460>
   35bfc:	subs	r2, r2, #1
   35c00:	bcs	35be8 <crc32@@Base+0x1c444>
   35c04:	cmp	r6, #0
   35c08:	beq	35c98 <crc32@@Base+0x1c4f4>
   35c0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35c10:	sub	ip, r4, #4
   35c14:	mov	r6, #0
   35c18:	mov	r7, #0
   35c1c:	add	r8, r5, r2
   35c20:	str	r4, [fp, #-84]	; 0xffffffac
   35c24:	str	r5, [fp, #-92]	; 0xffffffa4
   35c28:	ldr	sl, [ip, #4]!
   35c2c:	ldr	lr, [r2], #4
   35c30:	adds	r0, r6, sl
   35c34:	adc	r1, r7, #0
   35c38:	subs	r4, r0, lr
   35c3c:	sbc	r5, r1, #0
   35c40:	cmp	r8, r2
   35c44:	str	r4, [ip]
   35c48:	mov	r6, r5
   35c4c:	asr	r7, r5, #31
   35c50:	bne	35c28 <crc32@@Base+0x1c484>
   35c54:	cmp	r3, #0
   35c58:	ldr	r4, [fp, #-84]	; 0xffffffac
   35c5c:	ldr	r5, [fp, #-92]	; 0xffffffa4
   35c60:	blt	35c98 <crc32@@Base+0x1c4f4>
   35c64:	add	r4, r4, r5
   35c68:	mov	r0, r9
   35c6c:	ldr	r1, [r4, #-4]!
   35c70:	sub	r3, r3, #1
   35c74:	cmn	r3, #1
   35c78:	ubfx	lr, r1, #8, #8
   35c7c:	ubfx	ip, r1, #16, #8
   35c80:	lsr	r2, r1, #24
   35c84:	orr	r2, r2, r1, lsl #24
   35c88:	orr	r2, r2, lr, lsl #16
   35c8c:	orr	r2, r2, ip, lsl #8
   35c90:	str	r2, [r0], #4
   35c94:	bne	35c6c <crc32@@Base+0x1c4c8>
   35c98:	mov	r1, r9
   35c9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   35ca0:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35ca4:	ldr	r0, [fp, #-104]	; 0xffffff98
   35ca8:	bl	1259c <memcpy@plt>
   35cac:	mov	r0, #0
   35cb0:	b	35cbc <crc32@@Base+0x1c518>
   35cb4:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35cb8:	mvn	r0, #21
   35cbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   35cc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35cc4:	ldr	r3, [r3]
   35cc8:	cmp	r2, r3
   35ccc:	bne	35cfc <crc32@@Base+0x1c558>
   35cd0:	sub	sp, fp, #32
   35cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35cd8:	mov	r0, #1
   35cdc:	mov	r1, #0
   35ce0:	movt	r0, #1
   35ce4:	strd	r0, [fp, #-52]	; 0xffffffcc
   35ce8:	b	35938 <crc32@@Base+0x1c194>
   35cec:	mvn	r0, #13
   35cf0:	b	35cbc <crc32@@Base+0x1c518>
   35cf4:	mvn	r0, #8
   35cf8:	b	35cbc <crc32@@Base+0x1c518>
   35cfc:	bl	12494 <__stack_chk_fail@plt>
   35d00:	movw	r1, #65044	; 0xfe14
   35d04:	movt	r1, #4
   35d08:	mov	r3, r0
   35d0c:	movw	r2, #55852	; 0xda2c
   35d10:	ldr	r0, [r1]
   35d14:	movt	r2, #3
   35d18:	push	{r4, lr}
   35d1c:	mov	r1, #1
   35d20:	bl	122b4 <__fprintf_chk@plt>
   35d24:	mov	r0, #1
   35d28:	bl	121f4 <exit@plt>
   35d2c:	cmp	r1, #0
   35d30:	beq	35f3c <crc32@@Base+0x1c798>
   35d34:	eor	ip, r0, r1
   35d38:	rsbmi	r1, r1, #0
   35d3c:	subs	r2, r1, #1
   35d40:	beq	35f08 <crc32@@Base+0x1c764>
   35d44:	movs	r3, r0
   35d48:	rsbmi	r3, r0, #0
   35d4c:	cmp	r3, r1
   35d50:	bls	35f14 <crc32@@Base+0x1c770>
   35d54:	tst	r1, r2
   35d58:	beq	35f24 <crc32@@Base+0x1c780>
   35d5c:	clz	r2, r3
   35d60:	clz	r0, r1
   35d64:	sub	r2, r0, r2
   35d68:	rsbs	r2, r2, #31
   35d6c:	addne	r2, r2, r2, lsl #1
   35d70:	mov	r0, #0
   35d74:	addne	pc, pc, r2, lsl #2
   35d78:	nop	{0}
   35d7c:	cmp	r3, r1, lsl #31
   35d80:	adc	r0, r0, r0
   35d84:	subcs	r3, r3, r1, lsl #31
   35d88:	cmp	r3, r1, lsl #30
   35d8c:	adc	r0, r0, r0
   35d90:	subcs	r3, r3, r1, lsl #30
   35d94:	cmp	r3, r1, lsl #29
   35d98:	adc	r0, r0, r0
   35d9c:	subcs	r3, r3, r1, lsl #29
   35da0:	cmp	r3, r1, lsl #28
   35da4:	adc	r0, r0, r0
   35da8:	subcs	r3, r3, r1, lsl #28
   35dac:	cmp	r3, r1, lsl #27
   35db0:	adc	r0, r0, r0
   35db4:	subcs	r3, r3, r1, lsl #27
   35db8:	cmp	r3, r1, lsl #26
   35dbc:	adc	r0, r0, r0
   35dc0:	subcs	r3, r3, r1, lsl #26
   35dc4:	cmp	r3, r1, lsl #25
   35dc8:	adc	r0, r0, r0
   35dcc:	subcs	r3, r3, r1, lsl #25
   35dd0:	cmp	r3, r1, lsl #24
   35dd4:	adc	r0, r0, r0
   35dd8:	subcs	r3, r3, r1, lsl #24
   35ddc:	cmp	r3, r1, lsl #23
   35de0:	adc	r0, r0, r0
   35de4:	subcs	r3, r3, r1, lsl #23
   35de8:	cmp	r3, r1, lsl #22
   35dec:	adc	r0, r0, r0
   35df0:	subcs	r3, r3, r1, lsl #22
   35df4:	cmp	r3, r1, lsl #21
   35df8:	adc	r0, r0, r0
   35dfc:	subcs	r3, r3, r1, lsl #21
   35e00:	cmp	r3, r1, lsl #20
   35e04:	adc	r0, r0, r0
   35e08:	subcs	r3, r3, r1, lsl #20
   35e0c:	cmp	r3, r1, lsl #19
   35e10:	adc	r0, r0, r0
   35e14:	subcs	r3, r3, r1, lsl #19
   35e18:	cmp	r3, r1, lsl #18
   35e1c:	adc	r0, r0, r0
   35e20:	subcs	r3, r3, r1, lsl #18
   35e24:	cmp	r3, r1, lsl #17
   35e28:	adc	r0, r0, r0
   35e2c:	subcs	r3, r3, r1, lsl #17
   35e30:	cmp	r3, r1, lsl #16
   35e34:	adc	r0, r0, r0
   35e38:	subcs	r3, r3, r1, lsl #16
   35e3c:	cmp	r3, r1, lsl #15
   35e40:	adc	r0, r0, r0
   35e44:	subcs	r3, r3, r1, lsl #15
   35e48:	cmp	r3, r1, lsl #14
   35e4c:	adc	r0, r0, r0
   35e50:	subcs	r3, r3, r1, lsl #14
   35e54:	cmp	r3, r1, lsl #13
   35e58:	adc	r0, r0, r0
   35e5c:	subcs	r3, r3, r1, lsl #13
   35e60:	cmp	r3, r1, lsl #12
   35e64:	adc	r0, r0, r0
   35e68:	subcs	r3, r3, r1, lsl #12
   35e6c:	cmp	r3, r1, lsl #11
   35e70:	adc	r0, r0, r0
   35e74:	subcs	r3, r3, r1, lsl #11
   35e78:	cmp	r3, r1, lsl #10
   35e7c:	adc	r0, r0, r0
   35e80:	subcs	r3, r3, r1, lsl #10
   35e84:	cmp	r3, r1, lsl #9
   35e88:	adc	r0, r0, r0
   35e8c:	subcs	r3, r3, r1, lsl #9
   35e90:	cmp	r3, r1, lsl #8
   35e94:	adc	r0, r0, r0
   35e98:	subcs	r3, r3, r1, lsl #8
   35e9c:	cmp	r3, r1, lsl #7
   35ea0:	adc	r0, r0, r0
   35ea4:	subcs	r3, r3, r1, lsl #7
   35ea8:	cmp	r3, r1, lsl #6
   35eac:	adc	r0, r0, r0
   35eb0:	subcs	r3, r3, r1, lsl #6
   35eb4:	cmp	r3, r1, lsl #5
   35eb8:	adc	r0, r0, r0
   35ebc:	subcs	r3, r3, r1, lsl #5
   35ec0:	cmp	r3, r1, lsl #4
   35ec4:	adc	r0, r0, r0
   35ec8:	subcs	r3, r3, r1, lsl #4
   35ecc:	cmp	r3, r1, lsl #3
   35ed0:	adc	r0, r0, r0
   35ed4:	subcs	r3, r3, r1, lsl #3
   35ed8:	cmp	r3, r1, lsl #2
   35edc:	adc	r0, r0, r0
   35ee0:	subcs	r3, r3, r1, lsl #2
   35ee4:	cmp	r3, r1, lsl #1
   35ee8:	adc	r0, r0, r0
   35eec:	subcs	r3, r3, r1, lsl #1
   35ef0:	cmp	r3, r1
   35ef4:	adc	r0, r0, r0
   35ef8:	subcs	r3, r3, r1
   35efc:	cmp	ip, #0
   35f00:	rsbmi	r0, r0, #0
   35f04:	bx	lr
   35f08:	teq	ip, r0
   35f0c:	rsbmi	r0, r0, #0
   35f10:	bx	lr
   35f14:	movcc	r0, #0
   35f18:	asreq	r0, ip, #31
   35f1c:	orreq	r0, r0, #1
   35f20:	bx	lr
   35f24:	clz	r2, r1
   35f28:	rsb	r2, r2, #31
   35f2c:	cmp	ip, #0
   35f30:	lsr	r0, r3, r2
   35f34:	rsbmi	r0, r0, #0
   35f38:	bx	lr
   35f3c:	cmp	r0, #0
   35f40:	mvngt	r0, #-2147483648	; 0x80000000
   35f44:	movlt	r0, #-2147483648	; 0x80000000
   35f48:	b	35fa8 <crc32@@Base+0x1c804>
   35f4c:	cmp	r1, #0
   35f50:	beq	35f3c <crc32@@Base+0x1c798>
   35f54:	push	{r0, r1, lr}
   35f58:	bl	35d34 <crc32@@Base+0x1c590>
   35f5c:	pop	{r1, r2, lr}
   35f60:	mul	r3, r2, r0
   35f64:	sub	r1, r1, r3
   35f68:	bx	lr
   35f6c:	cmp	r3, #0
   35f70:	cmpeq	r2, #0
   35f74:	bne	35f8c <crc32@@Base+0x1c7e8>
   35f78:	cmp	r1, #0
   35f7c:	cmpeq	r0, #0
   35f80:	mvnne	r1, #0
   35f84:	mvnne	r0, #0
   35f88:	b	35fa8 <crc32@@Base+0x1c804>
   35f8c:	sub	sp, sp, #8
   35f90:	push	{sp, lr}
   35f94:	bl	35fb8 <crc32@@Base+0x1c814>
   35f98:	ldr	lr, [sp, #4]
   35f9c:	add	sp, sp, #8
   35fa0:	pop	{r2, r3}
   35fa4:	bx	lr
   35fa8:	push	{r1, lr}
   35fac:	mov	r0, #8
   35fb0:	bl	12500 <raise@plt>
   35fb4:	pop	{r1, pc}
   35fb8:	cmp	r1, r3
   35fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35fc0:	cmpeq	r0, r2
   35fc4:	sub	sp, sp, #12
   35fc8:	mov	sl, r0
   35fcc:	mov	fp, r1
   35fd0:	ldr	r8, [sp, #48]	; 0x30
   35fd4:	bcc	360cc <crc32@@Base+0x1c928>
   35fd8:	cmp	r3, #0
   35fdc:	mov	r0, r2
   35fe0:	mov	r1, r3
   35fe4:	clzeq	r3, r0
   35fe8:	addeq	r2, r3, #32
   35fec:	clzne	r2, r3
   35ff0:	cmp	fp, #0
   35ff4:	clzeq	r3, sl
   35ff8:	clzne	r3, fp
   35ffc:	addeq	r3, r3, #32
   36000:	sub	r3, r2, r3
   36004:	sub	ip, r3, #32
   36008:	lsl	r7, r1, r3
   3600c:	orr	r7, r7, r0, lsl ip
   36010:	rsb	lr, r3, #32
   36014:	orr	r7, r7, r0, lsr lr
   36018:	lsl	r6, r0, r3
   3601c:	cmp	fp, r7
   36020:	cmpeq	sl, r6
   36024:	bcs	360ec <crc32@@Base+0x1c948>
   36028:	mov	r0, #0
   3602c:	mov	r1, #0
   36030:	strd	r0, [sp]
   36034:	cmp	r3, #0
   36038:	beq	360d8 <crc32@@Base+0x1c934>
   3603c:	lsrs	r7, r7, #1
   36040:	rrx	r6, r6
   36044:	mov	r2, r3
   36048:	b	3606c <crc32@@Base+0x1c8c8>
   3604c:	subs	r0, sl, r6
   36050:	sbc	r1, fp, r7
   36054:	adds	r4, r0, r0
   36058:	adc	r5, r1, r1
   3605c:	adds	sl, r4, #1
   36060:	adc	fp, r5, #0
   36064:	subs	r2, r2, #1
   36068:	beq	36088 <crc32@@Base+0x1c8e4>
   3606c:	cmp	fp, r7
   36070:	cmpeq	sl, r6
   36074:	bcs	3604c <crc32@@Base+0x1c8a8>
   36078:	adds	sl, sl, sl
   3607c:	adc	fp, fp, fp
   36080:	subs	r2, r2, #1
   36084:	bne	3606c <crc32@@Base+0x1c8c8>
   36088:	lsr	r2, sl, r3
   3608c:	lsr	r9, fp, r3
   36090:	orr	r2, r2, fp, lsl lr
   36094:	ldrd	r6, [sp]
   36098:	orr	r2, r2, fp, lsr ip
   3609c:	lsl	r1, r9, r3
   360a0:	adds	r6, r6, sl
   360a4:	orr	r1, r1, r2, lsl ip
   360a8:	lsl	r0, r2, r3
   360ac:	adc	r7, r7, fp
   360b0:	orr	r1, r1, r2, lsr lr
   360b4:	subs	r6, r6, r0
   360b8:	mov	sl, r2
   360bc:	sbc	r7, r7, r1
   360c0:	mov	fp, r9
   360c4:	strd	r6, [sp]
   360c8:	b	360d8 <crc32@@Base+0x1c934>
   360cc:	mov	r2, #0
   360d0:	mov	r3, #0
   360d4:	strd	r2, [sp]
   360d8:	cmp	r8, #0
   360dc:	ldrd	r0, [sp]
   360e0:	strdne	sl, [r8]
   360e4:	add	sp, sp, #12
   360e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   360ec:	mov	r2, #1
   360f0:	subs	sl, sl, r6
   360f4:	lsl	r1, r2, ip
   360f8:	sbc	fp, fp, r7
   360fc:	orr	r1, r1, r2, lsr lr
   36100:	lsl	r2, r2, r3
   36104:	str	r1, [sp, #4]
   36108:	str	r2, [sp]
   3610c:	b	36034 <crc32@@Base+0x1c890>
   36110:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   36114:	mov	r7, r0
   36118:	ldr	r6, [pc, #76]	; 3616c <crc32@@Base+0x1c9c8>
   3611c:	mov	r8, r1
   36120:	ldr	r5, [pc, #72]	; 36170 <crc32@@Base+0x1c9cc>
   36124:	mov	r9, r2
   36128:	add	r6, pc, r6
   3612c:	bl	12048 <_init@@Base>
   36130:	add	r5, pc, r5
   36134:	rsb	r6, r5, r6
   36138:	asrs	r6, r6, #2
   3613c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   36140:	sub	r5, r5, #4
   36144:	mov	r4, #0
   36148:	add	r4, r4, #1
   3614c:	ldr	r3, [r5, #4]!
   36150:	mov	r0, r7
   36154:	mov	r1, r8
   36158:	mov	r2, r9
   3615c:	blx	r3
   36160:	cmp	r4, r6
   36164:	bne	36148 <crc32@@Base+0x1c9a4>
   36168:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3616c:			; <UNDEFINED> instruction: 0x00018dbc
   36170:			; <UNDEFINED> instruction: 0x00018db0
   36174:	bx	lr

Disassembly of section .fini:

00036178 <_fini@@Base>:
   36178:	push	{r3, lr}
   3617c:	pop	{r3, pc}
