
centos-preinstalled/dconf:     file format elf32-littlearm


Disassembly of section .init:

000120a0 <_init@@Base>:
   120a0:	push	{r3, lr}
   120a4:	bl	12784 <g_boxed_type_register_static@plt+0x58>
   120a8:	pop	{r3, pc}

Disassembly of section .plt:

000120ac <g_free@plt-0x14>:
   120ac:	push	{lr}		; (str lr, [sp, #-4]!)
   120b0:	ldr	lr, [pc, #4]	; 120bc <_init@@Base+0x1c>
   120b4:	add	lr, pc, lr
   120b8:	ldr	pc, [lr, #8]!
   120bc:	andeq	r6, r1, r4, asr #30

000120c0 <g_free@plt>:
   120c0:	add	ip, pc, #0, 12
   120c4:	add	ip, ip, #90112	; 0x16000
   120c8:	ldr	pc, [ip, #3908]!	; 0xf44

000120cc <dconf_client_watch_sync@plt>:
   120cc:	add	ip, pc, #0, 12
   120d0:	add	ip, ip, #90112	; 0x16000
   120d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000120d8 <abort@plt>:
   120d8:	add	ip, pc, #0, 12
   120dc:	add	ip, ip, #90112	; 0x16000
   120e0:	ldr	pc, [ip, #3892]!	; 0xf34

000120e4 <g_queue_push_tail@plt>:
   120e4:	add	ip, pc, #0, 12
   120e8:	add	ip, ip, #90112	; 0x16000
   120ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000120f0 <g_key_file_get_keys@plt>:
   120f0:	add	ip, pc, #0, 12
   120f4:	add	ip, ip, #90112	; 0x16000
   120f8:	ldr	pc, [ip, #3876]!	; 0xf24

000120fc <g_dir_close@plt>:
   120fc:	add	ip, pc, #0, 12
   12100:	add	ip, ip, #90112	; 0x16000
   12104:	ldr	pc, [ip, #3868]!	; 0xf1c

00012108 <g_key_file_set_value@plt>:
   12108:	add	ip, pc, #0, 12
   1210c:	add	ip, ip, #90112	; 0x16000
   12110:	ldr	pc, [ip, #3860]!	; 0xf14

00012114 <g_slist_free@plt>:
   12114:	add	ip, pc, #0, 12
   12118:	add	ip, ip, #90112	; 0x16000
   1211c:	ldr	pc, [ip, #3852]!	; 0xf0c

00012120 <g_dbus_connection_flush_sync@plt>:
   12120:	add	ip, pc, #0, 12
   12124:	add	ip, ip, #90112	; 0x16000
   12128:	ldr	pc, [ip, #3844]!	; 0xf04

0001212c <g_variant_ref_sink@plt>:
   1212c:	add	ip, pc, #0, 12
   12130:	add	ip, ip, #90112	; 0x16000
   12134:	ldr	pc, [ip, #3836]!	; 0xefc

00012138 <__libc_start_main@plt>:
   12138:	add	ip, pc, #0, 12
   1213c:	add	ip, ip, #90112	; 0x16000
   12140:	ldr	pc, [ip, #3828]!	; 0xef4

00012144 <g_str_hash@plt>:
   12144:	add	ip, pc, #0, 12
   12148:	add	ip, ip, #90112	; 0x16000
   1214c:	ldr	pc, [ip, #3820]!	; 0xeec

00012150 <g_dir_read_name@plt>:
   12150:	add	ip, pc, #0, 12
   12154:	add	ip, ip, #90112	; 0x16000
   12158:	ldr	pc, [ip, #3812]!	; 0xee4

0001215c <g_path_get_basename@plt>:
   1215c:	add	ip, pc, #0, 12
   12160:	add	ip, ip, #90112	; 0x16000
   12164:	ldr	pc, [ip, #3804]!	; 0xedc

00012168 <dconf_client_list@plt>:
   12168:	add	ip, pc, #0, 12
   1216c:	add	ip, ip, #90112	; 0x16000
   12170:	ldr	pc, [ip, #3796]!	; 0xed4

00012174 <g_print@plt>:
   12174:	add	ip, pc, #0, 12
   12178:	add	ip, ip, #90112	; 0x16000
   1217c:	ldr	pc, [ip, #3788]!	; 0xecc

00012180 <g_variant_byteswap@plt>:
   12180:	add	ip, pc, #0, 12
   12184:	add	ip, ip, #90112	; 0x16000
   12188:	ldr	pc, [ip, #3780]!	; 0xec4

0001218c <dconf_is_dir@plt>:
   1218c:	add	ip, pc, #0, 12
   12190:	add	ip, ip, #90112	; 0x16000
   12194:	ldr	pc, [ip, #3772]!	; 0xebc

00012198 <g_error_new@plt>:
   12198:	add	ip, pc, #0, 12
   1219c:	add	ip, ip, #90112	; 0x16000
   121a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000121a4 <__gmon_start__@plt>:
   121a4:	add	ip, pc, #0, 12
   121a8:	add	ip, ip, #90112	; 0x16000
   121ac:	ldr	pc, [ip, #3756]!	; 0xeac

000121b0 <g_object_unref@plt>:
   121b0:	add	ip, pc, #0, 12
   121b4:	add	ip, ip, #90112	; 0x16000
   121b8:	ldr	pc, [ip, #3748]!	; 0xea4

000121bc <g_slist_reverse@plt>:
   121bc:	add	ip, pc, #0, 12
   121c0:	add	ip, ip, #90112	; 0x16000
   121c4:	ldr	pc, [ip, #3740]!	; 0xe9c

000121c8 <g_option_error_quark@plt>:
   121c8:	add	ip, pc, #0, 12
   121cc:	add	ip, ip, #90112	; 0x16000
   121d0:	ldr	pc, [ip, #3732]!	; 0xe94

000121d4 <g_strcmp0@plt>:
   121d4:	add	ip, pc, #0, 12
   121d8:	add	ip, ip, #90112	; 0x16000
   121dc:	ldr	pc, [ip, #3724]!	; 0xe8c

000121e0 <g_key_file_new@plt>:
   121e0:	add	ip, pc, #0, 12
   121e4:	add	ip, ip, #90112	; 0x16000
   121e8:	ldr	pc, [ip, #3716]!	; 0xe84

000121ec <g_strdup@plt>:
   121ec:	add	ip, pc, #0, 12
   121f0:	add	ip, ip, #90112	; 0x16000
   121f4:	ldr	pc, [ip, #3708]!	; 0xe7c

000121f8 <g_clear_error@plt>:
   121f8:	add	ip, pc, #0, 12
   121fc:	add	ip, ip, #90112	; 0x16000
   12200:	ldr	pc, [ip, #3700]!	; 0xe74

00012204 <g_variant_get_normal_form@plt>:
   12204:	add	ip, pc, #0, 12
   12208:	add	ip, ip, #90112	; 0x16000
   1220c:	ldr	pc, [ip, #3692]!	; 0xe6c

00012210 <fgets@plt>:
   12210:	add	ip, pc, #0, 12
   12214:	add	ip, ip, #90112	; 0x16000
   12218:	ldr	pc, [ip, #3684]!	; 0xe64

0001221c <g_hash_table_insert@plt>:
   1221c:	add	ip, pc, #0, 12
   12220:	add	ip, ip, #90112	; 0x16000
   12224:	ldr	pc, [ip, #3676]!	; 0xe5c

00012228 <g_strconcat@plt>:
   12228:	add	ip, pc, #0, 12
   1222c:	add	ip, ip, #90112	; 0x16000
   12230:	ldr	pc, [ip, #3668]!	; 0xe54

00012234 <g_printerr@plt>:
   12234:	add	ip, pc, #0, 12
   12238:	add	ip, ip, #90112	; 0x16000
   1223c:	ldr	pc, [ip, #3660]!	; 0xe4c

00012240 <g_variant_get_size@plt>:
   12240:	add	ip, pc, #0, 12
   12244:	add	ip, ip, #90112	; 0x16000
   12248:	ldr	pc, [ip, #3652]!	; 0xe44

0001224c <g_variant_print@plt>:
   1224c:	add	ip, pc, #0, 12
   12250:	add	ip, ip, #90112	; 0x16000
   12254:	ldr	pc, [ip, #3644]!	; 0xe3c

00012258 <memset@plt>:
   12258:	add	ip, pc, #0, 12
   1225c:	add	ip, ip, #90112	; 0x16000
   12260:	ldr	pc, [ip, #3636]!	; 0xe34

00012264 <dconf_client_new@plt>:
   12264:	add	ip, pc, #0, 12
   12268:	add	ip, ip, #90112	; 0x16000
   1226c:	ldr	pc, [ip, #3628]!	; 0xe2c

00012270 <g_malloc@plt>:
   12270:	add	ip, pc, #0, 12
   12274:	add	ip, ip, #90112	; 0x16000
   12278:	ldr	pc, [ip, #3620]!	; 0xe24

0001227c <g_dbus_connection_call_sync@plt>:
   1227c:	add	ip, pc, #0, 12
   12280:	add	ip, ip, #90112	; 0x16000
   12284:	ldr	pc, [ip, #3612]!	; 0xe1c

00012288 <g_string_new@plt>:
   12288:	add	ip, pc, #0, 12
   1228c:	add	ip, ip, #90112	; 0x16000
   12290:	ldr	pc, [ip, #3604]!	; 0xe14

00012294 <g_queue_free@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #90112	; 0x16000
   1229c:	ldr	pc, [ip, #3596]!	; 0xe0c

000122a0 <chmod@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #90112	; 0x16000
   122a8:	ldr	pc, [ip, #3588]!	; 0xe04

000122ac <g_main_loop_new@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #90112	; 0x16000
   122b4:	ldr	pc, [ip, #3580]!	; 0xdfc

000122b8 <g_strndup@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #90112	; 0x16000
   122c0:	ldr	pc, [ip, #3572]!	; 0xdf4

000122c4 <g_key_file_unref@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #90112	; 0x16000
   122cc:	ldr	pc, [ip, #3564]!	; 0xdec

000122d0 <dconf_client_list_locks@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #90112	; 0x16000
   122d8:	ldr	pc, [ip, #3556]!	; 0xde4

000122dc <g_dbus_connection_emit_signal@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #90112	; 0x16000
   122e4:	ldr	pc, [ip, #3548]!	; 0xddc

000122e8 <g_malloc0_n@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #90112	; 0x16000
   122f0:	ldr	pc, [ip, #3540]!	; 0xdd4

000122f4 <g_assertion_message_expr@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #90112	; 0x16000
   122fc:	ldr	pc, [ip, #3532]!	; 0xdcc

00012300 <g_variant_get_child_value@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #90112	; 0x16000
   12308:	ldr	pc, [ip, #3524]!	; 0xdc4

0001230c <write@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #90112	; 0x16000
   12314:	ldr	pc, [ip, #3516]!	; 0xdbc

00012318 <g_string_append_len@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #90112	; 0x16000
   12320:	ldr	pc, [ip, #3508]!	; 0xdb4

00012324 <g_variant_new_string@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #90112	; 0x16000
   1232c:	ldr	pc, [ip, #3500]!	; 0xdac

00012330 <g_strdup_printf@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #90112	; 0x16000
   12338:	ldr	pc, [ip, #3492]!	; 0xda4

0001233c <dconf_client_change_sync@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #90112	; 0x16000
   12344:	ldr	pc, [ip, #3484]!	; 0xd9c

00012348 <dconf_client_read@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #90112	; 0x16000
   12350:	ldr	pc, [ip, #3476]!	; 0xd94

00012354 <g_string_free@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #90112	; 0x16000
   1235c:	ldr	pc, [ip, #3468]!	; 0xd8c

00012360 <g_variant_store@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #90112	; 0x16000
   12368:	ldr	pc, [ip, #3460]!	; 0xd84

0001236c <g_hash_table_size@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #90112	; 0x16000
   12374:	ldr	pc, [ip, #3452]!	; 0xd7c

00012378 <dconf_client_write_sync@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #90112	; 0x16000
   12380:	ldr	pc, [ip, #3444]!	; 0xd74

00012384 <g_hash_table_new_full@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #90112	; 0x16000
   1238c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012390 <dconf_changeset_new@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #90112	; 0x16000
   12398:	ldr	pc, [ip, #3428]!	; 0xd64

0001239c <g_hash_table_foreach@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #90112	; 0x16000
   123a4:	ldr	pc, [ip, #3420]!	; 0xd5c

000123a8 <dconf_is_path@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #90112	; 0x16000
   123b0:	ldr	pc, [ip, #3412]!	; 0xd54

000123b4 <strlen@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #90112	; 0x16000
   123bc:	ldr	pc, [ip, #3404]!	; 0xd4c

000123c0 <g_slist_prepend@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #90112	; 0x16000
   123c8:	ldr	pc, [ip, #3396]!	; 0xd44

000123cc <g_error_new_literal@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #90112	; 0x16000
   123d4:	ldr	pc, [ip, #3388]!	; 0xd3c

000123d8 <g_key_file_to_data@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #90112	; 0x16000
   123e0:	ldr	pc, [ip, #3380]!	; 0xd34

000123e4 <g_propagate_error@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #90112	; 0x16000
   123ec:	ldr	pc, [ip, #3372]!	; 0xd2c

000123f0 <memcpy@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #90112	; 0x16000
   123f8:	ldr	pc, [ip, #3364]!	; 0xd24

000123fc <setlocale@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #90112	; 0x16000
   12404:	ldr	pc, [ip, #3356]!	; 0xd1c

00012408 <dconf_is_key@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #90112	; 0x16000
   12410:	ldr	pc, [ip, #3348]!	; 0xd14

00012414 <g_slist_sort@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #90112	; 0x16000
   1241c:	ldr	pc, [ip, #3340]!	; 0xd0c

00012420 <g_return_if_fail_warning@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #90112	; 0x16000
   12428:	ldr	pc, [ip, #3332]!	; 0xd04

0001242c <g_variant_type_free@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #90112	; 0x16000
   12434:	ldr	pc, [ip, #3324]!	; 0xcfc

00012438 <g_hash_table_ref@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #90112	; 0x16000
   12440:	ldr	pc, [ip, #3316]!	; 0xcf4

00012444 <open64@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #90112	; 0x16000
   1244c:	ldr	pc, [ip, #3308]!	; 0xcec

00012450 <raise@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #90112	; 0x16000
   12458:	ldr	pc, [ip, #3300]!	; 0xce4

0001245c <g_variant_new_variant@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #90112	; 0x16000
   12464:	ldr	pc, [ip, #3292]!	; 0xcdc

00012468 <g_error_matches@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #90112	; 0x16000
   12470:	ldr	pc, [ip, #3284]!	; 0xcd4

00012474 <g_slice_alloc@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #90112	; 0x16000
   1247c:	ldr	pc, [ip, #3276]!	; 0xccc

00012480 <g_key_file_get_value@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #90112	; 0x16000
   12488:	ldr	pc, [ip, #3268]!	; 0xcc4

0001248c <g_quark_from_static_string@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #90112	; 0x16000
   12494:	ldr	pc, [ip, #3260]!	; 0xcbc

00012498 <g_quark_from_string@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #90112	; 0x16000
   124a0:	ldr	pc, [ip, #3252]!	; 0xcb4

000124a4 <g_variant_parse@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #90112	; 0x16000
   124ac:	ldr	pc, [ip, #3244]!	; 0xcac

000124b0 <strstr@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #90112	; 0x16000
   124b8:	ldr	pc, [ip, #3236]!	; 0xca4

000124bc <dconf_client_read_full@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #90112	; 0x16000
   124c4:	ldr	pc, [ip, #3228]!	; 0xc9c

000124c8 <close@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #90112	; 0x16000
   124d0:	ldr	pc, [ip, #3220]!	; 0xc94

000124d4 <g_slist_foreach@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #90112	; 0x16000
   124dc:	ldr	pc, [ip, #3212]!	; 0xc8c

000124e0 <g_key_file_get_groups@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #90112	; 0x16000
   124e8:	ldr	pc, [ip, #3204]!	; 0xc84

000124ec <g_str_has_prefix@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #90112	; 0x16000
   124f4:	ldr	pc, [ip, #3196]!	; 0xc7c

000124f8 <__xstat64@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #90112	; 0x16000
   12500:	ldr	pc, [ip, #3188]!	; 0xc74

00012504 <g_signal_connect_data@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #90112	; 0x16000
   1250c:	ldr	pc, [ip, #3180]!	; 0xc6c

00012510 <g_key_file_load_from_file@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #90112	; 0x16000
   12518:	ldr	pc, [ip, #3172]!	; 0xc64

0001251c <__stack_chk_fail@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #90112	; 0x16000
   12524:	ldr	pc, [ip, #3164]!	; 0xc5c

00012528 <g_error_copy@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #90112	; 0x16000
   12530:	ldr	pc, [ip, #3156]!	; 0xc54

00012534 <__fprintf_chk@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #90112	; 0x16000
   1253c:	ldr	pc, [ip, #3148]!	; 0xc4c

00012540 <g_variant_unref@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #90112	; 0x16000
   12548:	ldr	pc, [ip, #3140]!	; 0xc44

0001254c <g_strsplit@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #90112	; 0x16000
   12554:	ldr	pc, [ip, #3132]!	; 0xc3c

00012558 <g_hash_table_lookup@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #90112	; 0x16000
   12560:	ldr	pc, [ip, #3124]!	; 0xc34

00012564 <g_malloc0@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #90112	; 0x16000
   1256c:	ldr	pc, [ip, #3116]!	; 0xc2c

00012570 <g_build_filename@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #90112	; 0x16000
   12578:	ldr	pc, [ip, #3108]!	; 0xc24

0001257c <g_main_loop_unref@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #90112	; 0x16000
   12584:	ldr	pc, [ip, #3100]!	; 0xc1c

00012588 <g_file_get_contents@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #90112	; 0x16000
   12590:	ldr	pc, [ip, #3092]!	; 0xc14

00012594 <g_file_set_contents@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #90112	; 0x16000
   1259c:	ldr	pc, [ip, #3084]!	; 0xc0c

000125a0 <g_bus_get_sync@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #90112	; 0x16000
   125a8:	ldr	pc, [ip, #3076]!	; 0xc04

000125ac <g_queue_is_empty@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #90112	; 0x16000
   125b4:	ldr	pc, [ip, #3068]!	; 0xbfc

000125b8 <g_once_init_enter@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #90112	; 0x16000
   125c0:	ldr	pc, [ip, #3060]!	; 0xbf4

000125c4 <g_strerror@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #90112	; 0x16000
   125cc:	ldr	pc, [ip, #3052]!	; 0xbec

000125d0 <g_hash_table_unref@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #90112	; 0x16000
   125d8:	ldr	pc, [ip, #3044]!	; 0xbe4

000125dc <g_key_file_error_quark@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #90112	; 0x16000
   125e4:	ldr	pc, [ip, #3036]!	; 0xbdc

000125e8 <g_error_free@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #90112	; 0x16000
   125f0:	ldr	pc, [ip, #3028]!	; 0xbd4

000125f4 <g_str_has_suffix@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #90112	; 0x16000
   125fc:	ldr	pc, [ip, #3020]!	; 0xbcc

00012600 <g_variant_type_new@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #90112	; 0x16000
   12608:	ldr	pc, [ip, #3012]!	; 0xbc4

0001260c <g_once_init_leave@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #90112	; 0x16000
   12614:	ldr	pc, [ip, #3004]!	; 0xbbc

00012618 <dconf_changeset_set@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #90112	; 0x16000
   12620:	ldr	pc, [ip, #2996]!	; 0xbb4

00012624 <g_quark_to_string@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #90112	; 0x16000
   1262c:	ldr	pc, [ip, #2988]!	; 0xbac

00012630 <g_file_error_quark@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #90112	; 0x16000
   12638:	ldr	pc, [ip, #2980]!	; 0xba4

0001263c <g_main_loop_run@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #90112	; 0x16000
   12644:	ldr	pc, [ip, #2972]!	; 0xb9c

00012648 <g_variant_parse_error_quark@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #90112	; 0x16000
   12650:	ldr	pc, [ip, #2964]!	; 0xb94

00012654 <memchr@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #90112	; 0x16000
   1265c:	ldr	pc, [ip, #2956]!	; 0xb8c

00012660 <g_slice_free1@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #90112	; 0x16000
   12668:	ldr	pc, [ip, #2948]!	; 0xb84

0001266c <g_queue_new@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #90112	; 0x16000
   12674:	ldr	pc, [ip, #2940]!	; 0xb7c

00012678 <g_string_append@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #90112	; 0x16000
   12680:	ldr	pc, [ip, #2932]!	; 0xb74

00012684 <g_string_append_printf@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #90112	; 0x16000
   1268c:	ldr	pc, [ip, #2924]!	; 0xb6c

00012690 <g_log@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #90112	; 0x16000
   12698:	ldr	pc, [ip, #2916]!	; 0xb64

0001269c <g_set_prgname@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #90112	; 0x16000
   126a4:	ldr	pc, [ip, #2908]!	; 0xb5c

000126a8 <strcmp@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #90112	; 0x16000
   126b0:	ldr	pc, [ip, #2900]!	; 0xb54

000126b4 <g_str_equal@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #90112	; 0x16000
   126bc:	ldr	pc, [ip, #2892]!	; 0xb4c

000126c0 <g_variant_new@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #90112	; 0x16000
   126c8:	ldr	pc, [ip, #2884]!	; 0xb44

000126cc <exit@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #90112	; 0x16000
   126d4:	ldr	pc, [ip, #2876]!	; 0xb3c

000126d8 <dconf_changeset_unref@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #90112	; 0x16000
   126e0:	ldr	pc, [ip, #2868]!	; 0xb34

000126e4 <g_dir_open@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #90112	; 0x16000
   126ec:	ldr	pc, [ip, #2860]!	; 0xb2c

000126f0 <__errno_location@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #90112	; 0x16000
   126f8:	ldr	pc, [ip, #2852]!	; 0xb24

000126fc <g_variant_get_string@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #90112	; 0x16000
   12704:	ldr	pc, [ip, #2844]!	; 0xb1c

00012708 <g_slice_alloc0@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #90112	; 0x16000
   12710:	ldr	pc, [ip, #2836]!	; 0xb14

00012714 <g_key_file_load_from_data@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #90112	; 0x16000
   1271c:	ldr	pc, [ip, #2828]!	; 0xb0c

00012720 <g_queue_pop_head@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #90112	; 0x16000
   12728:	ldr	pc, [ip, #2820]!	; 0xb04

0001272c <g_boxed_type_register_static@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #90112	; 0x16000
   12734:	ldr	pc, [ip, #2812]!	; 0xafc

Disassembly of section .text:

00012738 <.text>:
   12738:	mov	r3, r0
   1273c:	mov	r0, r1
   12740:	mov	r1, r3
   12744:	b	161d8 <g_boxed_type_register_static@plt+0x3aac>
   12748:	mov	fp, #0
   1274c:	mov	lr, #0
   12750:	pop	{r1}		; (ldr r1, [sp], #4)
   12754:	mov	r2, sp
   12758:	push	{r2}		; (str r2, [sp, #-4]!)
   1275c:	push	{r0}		; (str r0, [sp, #-4]!)
   12760:	ldr	ip, [pc, #16]	; 12778 <g_boxed_type_register_static@plt+0x4c>
   12764:	push	{ip}		; (str ip, [sp, #-4]!)
   12768:	ldr	r0, [pc, #12]	; 1277c <g_boxed_type_register_static@plt+0x50>
   1276c:	ldr	r3, [pc, #12]	; 12780 <g_boxed_type_register_static@plt+0x54>
   12770:	bl	12138 <__libc_start_main@plt>
   12774:	bl	120d8 <abort@plt>
   12778:	andeq	r7, r1, r8, lsl #9
   1277c:	andeq	r2, r1, r8, lsr r7
   12780:	andeq	r7, r1, r4, lsr #8
   12784:	ldr	r3, [pc, #20]	; 127a0 <g_boxed_type_register_static@plt+0x74>
   12788:	ldr	r2, [pc, #20]	; 127a4 <g_boxed_type_register_static@plt+0x78>
   1278c:	add	r3, pc, r3
   12790:	ldr	r2, [r3, r2]
   12794:	cmp	r2, #0
   12798:	bxeq	lr
   1279c:	b	121a4 <__gmon_start__@plt>
   127a0:	andeq	r6, r1, ip, ror #16
   127a4:	andeq	r0, r0, r4, lsr r2
   127a8:	push	{r3, lr}
   127ac:	movw	r0, #37436	; 0x923c
   127b0:	ldr	r3, [pc, #36]	; 127dc <g_boxed_type_register_static@plt+0xb0>
   127b4:	movt	r0, #2
   127b8:	rsb	r3, r0, r3
   127bc:	cmp	r3, #6
   127c0:	popls	{r3, pc}
   127c4:	movw	r3, #0
   127c8:	movt	r3, #0
   127cc:	cmp	r3, #0
   127d0:	popeq	{r3, pc}
   127d4:	blx	r3
   127d8:	pop	{r3, pc}
   127dc:	andeq	r9, r2, pc, lsr r2
   127e0:	push	{r3, lr}
   127e4:	movw	r0, #37436	; 0x923c
   127e8:	movw	r3, #37436	; 0x923c
   127ec:	movt	r0, #2
   127f0:	movt	r3, #2
   127f4:	rsb	r3, r0, r3
   127f8:	asr	r3, r3, #2
   127fc:	add	r3, r3, r3, lsr #31
   12800:	asrs	r1, r3, #1
   12804:	popeq	{r3, pc}
   12808:	movw	r2, #0
   1280c:	movt	r2, #0
   12810:	cmp	r2, #0
   12814:	popeq	{r3, pc}
   12818:	blx	r2
   1281c:	pop	{r3, pc}
   12820:	push	{r4, lr}
   12824:	movw	r4, #37452	; 0x924c
   12828:	movt	r4, #2
   1282c:	ldrb	r3, [r4]
   12830:	cmp	r3, #0
   12834:	popne	{r4, pc}
   12838:	bl	127a8 <g_boxed_type_register_static@plt+0x7c>
   1283c:	mov	r3, #1
   12840:	strb	r3, [r4]
   12844:	pop	{r4, pc}
   12848:	movw	r0, #36572	; 0x8edc
   1284c:	movt	r0, #2
   12850:	push	{r3, lr}
   12854:	ldr	r3, [r0]
   12858:	cmp	r3, #0
   1285c:	beq	12874 <g_boxed_type_register_static@plt+0x148>
   12860:	movw	r3, #0
   12864:	movt	r3, #0
   12868:	cmp	r3, #0
   1286c:	beq	12874 <g_boxed_type_register_static@plt+0x148>
   12870:	blx	r3
   12874:	pop	{r3, lr}
   12878:	b	127e0 <g_boxed_type_register_static@plt+0xb4>
   1287c:	cmp	r0, #0
   12880:	push	{r4, r5, r6, lr}
   12884:	mov	r6, r1
   12888:	popeq	{r4, r5, r6, pc}
   1288c:	cmp	r1, #0
   12890:	pople	{r4, r5, r6, pc}
   12894:	sub	r5, r0, #4
   12898:	mov	r4, #0
   1289c:	ldr	r0, [r5, #4]!
   128a0:	add	r4, r4, #1
   128a4:	cmp	r0, #0
   128a8:	beq	128b0 <g_boxed_type_register_static@plt+0x184>
   128ac:	bl	120c0 <g_free@plt>
   128b0:	cmp	r4, r6
   128b4:	bne	1289c <g_boxed_type_register_static@plt+0x170>
   128b8:	pop	{r4, r5, r6, pc}
   128bc:	movw	ip, #37440	; 0x9240
   128c0:	movt	ip, #2
   128c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128c8:	mov	r8, r1
   128cc:	ldr	r1, [ip]
   128d0:	sub	sp, sp, #36	; 0x24
   128d4:	subs	r9, r0, #0
   128d8:	mov	r4, #0
   128dc:	str	ip, [sp, #12]
   128e0:	mov	fp, r3
   128e4:	str	r2, [sp, #4]
   128e8:	str	r4, [sp, #24]
   128ec:	str	r1, [sp, #28]
   128f0:	beq	12b1c <g_boxed_type_register_static@plt+0x3f0>
   128f4:	cmp	r8, #0
   128f8:	beq	12b34 <g_boxed_type_register_static@plt+0x408>
   128fc:	ldr	ip, [sp, #4]
   12900:	cmp	ip, #0
   12904:	beq	12b50 <g_boxed_type_register_static@plt+0x424>
   12908:	mov	r1, r3
   1290c:	mov	r0, ip
   12910:	mov	r2, r4
   12914:	bl	12228 <g_strconcat@plt>
   12918:	movw	r1, #32120	; 0x7d78
   1291c:	movt	r1, #1
   12920:	str	r0, [sp]
   12924:	mov	r0, fp
   12928:	bl	121d4 <g_strcmp0@plt>
   1292c:	subs	r5, r0, #0
   12930:	bne	12a50 <g_boxed_type_register_static@plt+0x324>
   12934:	movw	r0, #29884	; 0x74bc
   12938:	movt	r0, #1
   1293c:	bl	121ec <g_strdup@plt>
   12940:	str	r0, [sp, #8]
   12944:	mov	r0, r5
   12948:	bl	120c0 <g_free@plt>
   1294c:	mov	r0, r8
   12950:	ldr	r1, [sp]
   12954:	add	r2, sp, #24
   12958:	bl	12168 <dconf_client_list@plt>
   1295c:	ldr	ip, [sp, #24]
   12960:	cmp	ip, #0
   12964:	str	ip, [sp, #20]
   12968:	str	r0, [sp, #16]
   1296c:	ble	12a8c <g_boxed_type_register_static@plt+0x360>
   12970:	ldr	ip, [sp, #16]
   12974:	mov	r5, #0
   12978:	sub	r6, ip, #4
   1297c:	b	129c8 <g_boxed_type_register_static@plt+0x29c>
   12980:	mov	r1, r4
   12984:	mov	r2, #0
   12988:	mov	r0, fp
   1298c:	bl	12228 <g_strconcat@plt>
   12990:	mov	r1, r8
   12994:	ldr	r2, [sp, #4]
   12998:	mov	r7, r0
   1299c:	mov	r0, r9
   129a0:	mov	r3, r7
   129a4:	bl	128bc <g_boxed_type_register_static@plt+0x190>
   129a8:	mov	r0, r7
   129ac:	bl	120c0 <g_free@plt>
   129b0:	mov	r0, r4
   129b4:	add	r5, r5, #1
   129b8:	bl	120c0 <g_free@plt>
   129bc:	ldr	r3, [sp, #24]
   129c0:	cmp	r3, r5
   129c4:	ble	12a8c <g_boxed_type_register_static@plt+0x360>
   129c8:	ldr	r0, [r6, #4]!
   129cc:	bl	121ec <g_strdup@plt>
   129d0:	movw	r1, #29884	; 0x74bc
   129d4:	movt	r1, #1
   129d8:	mov	r4, r0
   129dc:	bl	125f4 <g_str_has_suffix@plt>
   129e0:	subs	r2, r0, #0
   129e4:	bne	12980 <g_boxed_type_register_static@plt+0x254>
   129e8:	mov	r1, r4
   129ec:	ldr	r0, [sp]
   129f0:	bl	12228 <g_strconcat@plt>
   129f4:	mov	sl, r0
   129f8:	mov	r0, r8
   129fc:	mov	r1, sl
   12a00:	bl	12348 <dconf_client_read@plt>
   12a04:	mov	r7, r0
   12a08:	mov	r0, sl
   12a0c:	bl	120c0 <g_free@plt>
   12a10:	cmp	r7, #0
   12a14:	beq	129b0 <g_boxed_type_register_static@plt+0x284>
   12a18:	mov	r0, r7
   12a1c:	mov	r1, #1
   12a20:	bl	1224c <g_variant_print@plt>
   12a24:	ldr	r1, [sp, #8]
   12a28:	mov	r2, r4
   12a2c:	mov	sl, r0
   12a30:	mov	r0, r9
   12a34:	mov	r3, sl
   12a38:	bl	12108 <g_key_file_set_value@plt>
   12a3c:	mov	r0, sl
   12a40:	bl	120c0 <g_free@plt>
   12a44:	mov	r0, r7
   12a48:	bl	12540 <g_variant_unref@plt>
   12a4c:	b	129b0 <g_boxed_type_register_static@plt+0x284>
   12a50:	cmp	fp, #0
   12a54:	beq	12b00 <g_boxed_type_register_static@plt+0x3d4>
   12a58:	mov	r0, fp
   12a5c:	bl	123b4 <strlen@plt>
   12a60:	cmp	r0, #0
   12a64:	bge	12acc <g_boxed_type_register_static@plt+0x3a0>
   12a68:	movw	r2, #29948	; 0x74fc
   12a6c:	mov	r0, r4
   12a70:	movt	r2, #1
   12a74:	ldr	r1, [pc, #244]	; 12b70 <g_boxed_type_register_static@plt+0x444>
   12a78:	str	r4, [sp, #8]
   12a7c:	bl	12420 <g_return_if_fail_warning@plt>
   12a80:	mov	r0, #0
   12a84:	bl	120c0 <g_free@plt>
   12a88:	b	1294c <g_boxed_type_register_static@plt+0x220>
   12a8c:	ldr	r1, [sp, #20]
   12a90:	ldr	r0, [sp, #16]
   12a94:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   12a98:	ldr	r0, [sp, #16]
   12a9c:	bl	120c0 <g_free@plt>
   12aa0:	ldr	r0, [sp, #8]
   12aa4:	bl	120c0 <g_free@plt>
   12aa8:	ldr	r0, [sp]
   12aac:	bl	120c0 <g_free@plt>
   12ab0:	ldr	ip, [sp, #12]
   12ab4:	ldr	r2, [sp, #28]
   12ab8:	ldr	r3, [ip]
   12abc:	cmp	r2, r3
   12ac0:	bne	12b6c <g_boxed_type_register_static@plt+0x440>
   12ac4:	add	sp, sp, #36	; 0x24
   12ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12acc:	subs	r1, r0, #1
   12ad0:	bcc	12ae4 <g_boxed_type_register_static@plt+0x3b8>
   12ad4:	mov	r0, fp
   12ad8:	bl	122b8 <g_strndup@plt>
   12adc:	str	r0, [sp, #8]
   12ae0:	b	12a80 <g_boxed_type_register_static@plt+0x354>
   12ae4:	movw	r2, #29956	; 0x7504
   12ae8:	mov	r0, r4
   12aec:	movt	r2, #1
   12af0:	ldr	r1, [pc, #120]	; 12b70 <g_boxed_type_register_static@plt+0x444>
   12af4:	str	r4, [sp, #8]
   12af8:	bl	12420 <g_return_if_fail_warning@plt>
   12afc:	b	12a80 <g_boxed_type_register_static@plt+0x354>
   12b00:	movw	r2, #29932	; 0x74ec
   12b04:	mov	r0, fp
   12b08:	movt	r2, #1
   12b0c:	ldr	r1, [pc, #92]	; 12b70 <g_boxed_type_register_static@plt+0x444>
   12b10:	bl	12420 <g_return_if_fail_warning@plt>
   12b14:	str	fp, [sp, #8]
   12b18:	b	12a80 <g_boxed_type_register_static@plt+0x354>
   12b1c:	movw	r1, #29852	; 0x749c
   12b20:	movw	r2, #29888	; 0x74c0
   12b24:	movt	r1, #1
   12b28:	movt	r2, #1
   12b2c:	bl	12420 <g_return_if_fail_warning@plt>
   12b30:	b	12ab0 <g_boxed_type_register_static@plt+0x384>
   12b34:	mov	r0, r8
   12b38:	movw	r1, #29852	; 0x749c
   12b3c:	movw	r2, #29900	; 0x74cc
   12b40:	movt	r1, #1
   12b44:	movt	r2, #1
   12b48:	bl	12420 <g_return_if_fail_warning@plt>
   12b4c:	b	12ab0 <g_boxed_type_register_static@plt+0x384>
   12b50:	ldr	r0, [sp, #4]
   12b54:	movw	r1, #29852	; 0x749c
   12b58:	movw	r2, #29916	; 0x74dc
   12b5c:	movt	r1, #1
   12b60:	movt	r2, #1
   12b64:	bl	12420 <g_return_if_fail_warning@plt>
   12b68:	b	12ab0 <g_boxed_type_register_static@plt+0x384>
   12b6c:	bl	1251c <__stack_chk_fail@plt>
   12b70:	andeq	r7, r1, ip, lsr #9
   12b74:	push	{r4, r5, r6, r7, r8, r9, lr}
   12b78:	movw	r4, #37440	; 0x9240
   12b7c:	movt	r4, #2
   12b80:	sub	sp, sp, #12
   12b84:	add	r5, sp, #8
   12b88:	mov	r8, r0
   12b8c:	ldr	r3, [r4]
   12b90:	mov	r9, r2
   12b94:	mov	r2, #0
   12b98:	str	r2, [r5, #-8]!
   12b9c:	str	r3, [sp, #4]
   12ba0:	bl	12264 <dconf_client_new@plt>
   12ba4:	mov	r7, r0
   12ba8:	bl	121e0 <g_key_file_new@plt>
   12bac:	mov	r6, r0
   12bb0:	ldr	r0, [r8, #8]
   12bb4:	bl	121ec <g_strdup@plt>
   12bb8:	mov	r1, sp
   12bbc:	mov	r8, r0
   12bc0:	bl	1218c <dconf_is_dir@plt>
   12bc4:	ldr	r5, [sp]
   12bc8:	cmp	r5, #0
   12bcc:	beq	12c1c <g_boxed_type_register_static@plt+0x4f0>
   12bd0:	mov	r0, r9
   12bd4:	mov	r1, r5
   12bd8:	bl	123e4 <g_propagate_error@plt>
   12bdc:	mov	r0, r8
   12be0:	bl	120c0 <g_free@plt>
   12be4:	cmp	r6, #0
   12be8:	beq	12bf4 <g_boxed_type_register_static@plt+0x4c8>
   12bec:	mov	r0, r6
   12bf0:	bl	122c4 <g_key_file_unref@plt>
   12bf4:	cmp	r7, #0
   12bf8:	beq	12c04 <g_boxed_type_register_static@plt+0x4d8>
   12bfc:	mov	r0, r7
   12c00:	bl	121b0 <g_object_unref@plt>
   12c04:	ldr	r2, [sp, #4]
   12c08:	ldr	r3, [r4]
   12c0c:	cmp	r2, r3
   12c10:	bne	12c74 <g_boxed_type_register_static@plt+0x548>
   12c14:	add	sp, sp, #12
   12c18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12c1c:	mov	r0, r6
   12c20:	mov	r1, r7
   12c24:	mov	r2, r8
   12c28:	movw	r3, #32120	; 0x7d78
   12c2c:	movt	r3, #1
   12c30:	bl	128bc <g_boxed_type_register_static@plt+0x190>
   12c34:	mov	r2, r5
   12c38:	mov	r1, r5
   12c3c:	mov	r0, r6
   12c40:	bl	123d8 <g_key_file_to_data@plt>
   12c44:	mov	r1, r0
   12c48:	mov	r5, r0
   12c4c:	movw	r0, #30420	; 0x76d4
   12c50:	movt	r0, #1
   12c54:	bl	12174 <g_print@plt>
   12c58:	mov	r0, r5
   12c5c:	bl	120c0 <g_free@plt>
   12c60:	mov	r0, r8
   12c64:	bl	120c0 <g_free@plt>
   12c68:	cmp	r6, #0
   12c6c:	bne	12bec <g_boxed_type_register_static@plt+0x4c0>
   12c70:	b	12bf4 <g_boxed_type_register_static@plt+0x4c8>
   12c74:	bl	1251c <__stack_chk_fail@plt>
   12c78:	push	{r4, r5, r6, r7, lr}
   12c7c:	movw	r6, #37440	; 0x9240
   12c80:	movt	r6, #2
   12c84:	sub	sp, sp, #1040	; 0x410
   12c88:	sub	sp, sp, #12
   12c8c:	mov	r1, #0
   12c90:	ldr	r3, [r6]
   12c94:	mov	r2, #1024	; 0x400
   12c98:	mov	r7, r0
   12c9c:	add	r0, sp, #20
   12ca0:	movw	r4, #37444	; 0x9244
   12ca4:	movt	r4, #2
   12ca8:	str	r3, [sp, #1044]	; 0x414
   12cac:	bl	12258 <memset@plt>
   12cb0:	movw	r0, #32120	; 0x7d78
   12cb4:	movt	r0, #1
   12cb8:	mov	r3, #0
   12cbc:	str	r3, [sp, #16]
   12cc0:	bl	12288 <g_string_new@plt>
   12cc4:	mov	r5, r0
   12cc8:	b	12cd4 <g_boxed_type_register_static@plt+0x5a8>
   12ccc:	mov	r0, r5
   12cd0:	bl	12678 <g_string_append@plt>
   12cd4:	mov	r1, #1024	; 0x400
   12cd8:	add	r0, sp, #20
   12cdc:	ldr	r2, [r4]
   12ce0:	bl	12210 <fgets@plt>
   12ce4:	subs	r1, r0, #0
   12ce8:	bne	12ccc <g_boxed_type_register_static@plt+0x5a0>
   12cec:	str	r1, [sp, #12]
   12cf0:	bl	121e0 <g_key_file_new@plt>
   12cf4:	ldr	ip, [r5]
   12cf8:	add	lr, sp, #16
   12cfc:	ldr	r1, [sp, #12]
   12d00:	ldr	r2, [r5, #4]
   12d04:	str	lr, [sp]
   12d08:	mov	r3, r1
   12d0c:	mov	r1, ip
   12d10:	mov	r4, r0
   12d14:	bl	12714 <g_key_file_load_from_data@plt>
   12d18:	ldr	r1, [sp, #16]
   12d1c:	cmp	r1, #0
   12d20:	beq	12d68 <g_boxed_type_register_static@plt+0x63c>
   12d24:	mov	r0, r7
   12d28:	bl	123e4 <g_propagate_error@plt>
   12d2c:	cmp	r4, #0
   12d30:	beq	12d3c <g_boxed_type_register_static@plt+0x610>
   12d34:	mov	r0, r4
   12d38:	bl	122c4 <g_key_file_unref@plt>
   12d3c:	mov	r0, r5
   12d40:	mov	r1, #1
   12d44:	bl	12354 <g_string_free@plt>
   12d48:	mov	r0, #0
   12d4c:	ldr	r2, [sp, #1044]	; 0x414
   12d50:	ldr	r3, [r6]
   12d54:	cmp	r2, r3
   12d58:	bne	12d7c <g_boxed_type_register_static@plt+0x650>
   12d5c:	add	sp, sp, #1040	; 0x410
   12d60:	add	sp, sp, #12
   12d64:	pop	{r4, r5, r6, r7, pc}
   12d68:	mov	r0, r5
   12d6c:	mov	r1, #1
   12d70:	bl	12354 <g_string_free@plt>
   12d74:	mov	r0, r4
   12d78:	b	12d4c <g_boxed_type_register_static@plt+0x620>
   12d7c:	bl	1251c <__stack_chk_fail@plt>
   12d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d84:	sub	sp, sp, #84	; 0x54
   12d88:	movw	ip, #37440	; 0x9240
   12d8c:	movt	ip, #2
   12d90:	str	ip, [sp, #60]	; 0x3c
   12d94:	add	ip, sp, #80	; 0x50
   12d98:	str	ip, [sp, #56]	; 0x38
   12d9c:	mov	r1, #0
   12da0:	ldr	ip, [sp, #60]	; 0x3c
   12da4:	ldr	r0, [r0, #8]
   12da8:	str	r2, [sp, #32]
   12dac:	ldr	r3, [ip]
   12db0:	ldr	ip, [sp, #56]	; 0x38
   12db4:	str	r3, [sp, #76]	; 0x4c
   12db8:	str	r1, [ip, #-12]!
   12dbc:	str	ip, [sp, #56]	; 0x38
   12dc0:	bl	121ec <g_strdup@plt>
   12dc4:	ldr	r1, [sp, #56]	; 0x38
   12dc8:	str	r0, [sp, #44]	; 0x2c
   12dcc:	bl	1218c <dconf_is_dir@plt>
   12dd0:	ldr	r1, [sp, #68]	; 0x44
   12dd4:	cmp	r1, #0
   12dd8:	beq	12e08 <g_boxed_type_register_static@plt+0x6dc>
   12ddc:	ldr	r0, [sp, #32]
   12de0:	bl	123e4 <g_propagate_error@plt>
   12de4:	ldr	r0, [sp, #44]	; 0x2c
   12de8:	bl	120c0 <g_free@plt>
   12dec:	ldr	ip, [sp, #60]	; 0x3c
   12df0:	ldr	r2, [sp, #76]	; 0x4c
   12df4:	ldr	r3, [ip]
   12df8:	cmp	r2, r3
   12dfc:	bne	13238 <g_boxed_type_register_static@plt+0xb0c>
   12e00:	add	sp, sp, #84	; 0x54
   12e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e08:	bl	12390 <dconf_changeset_new@plt>
   12e0c:	str	r0, [sp, #48]	; 0x30
   12e10:	ldr	r0, [sp, #56]	; 0x38
   12e14:	bl	12c78 <g_boxed_type_register_static@plt+0x54c>
   12e18:	ldr	r4, [sp, #68]	; 0x44
   12e1c:	cmp	r4, #0
   12e20:	str	r0, [sp, #20]
   12e24:	beq	12e4c <g_boxed_type_register_static@plt+0x720>
   12e28:	ldr	r0, [sp, #32]
   12e2c:	mov	r1, r4
   12e30:	bl	123e4 <g_propagate_error@plt>
   12e34:	ldr	ip, [sp, #48]	; 0x30
   12e38:	cmp	ip, #0
   12e3c:	beq	12de4 <g_boxed_type_register_static@plt+0x6b8>
   12e40:	ldr	r0, [sp, #48]	; 0x30
   12e44:	bl	126d8 <dconf_changeset_unref@plt>
   12e48:	b	12de4 <g_boxed_type_register_static@plt+0x6b8>
   12e4c:	add	r1, sp, #64	; 0x40
   12e50:	bl	124e0 <g_key_file_get_groups@plt>
   12e54:	ldr	ip, [sp, #64]	; 0x40
   12e58:	cmp	ip, #0
   12e5c:	str	ip, [sp, #36]	; 0x24
   12e60:	mov	sl, r0
   12e64:	beq	131bc <g_boxed_type_register_static@plt+0xa90>
   12e68:	ldr	r9, [sp, #56]	; 0x38
   12e6c:	mov	r3, r4
   12e70:	str	r4, [sp, #52]	; 0x34
   12e74:	str	r0, [sp, #28]
   12e78:	ldr	ip, [sp, #28]
   12e7c:	ldr	r0, [ip, r3, lsl #2]
   12e80:	bl	121ec <g_strdup@plt>
   12e84:	add	r2, sp, #72	; 0x48
   12e88:	mov	r3, r9
   12e8c:	mov	fp, r0
   12e90:	ldr	r0, [sp, #20]
   12e94:	mov	r1, fp
   12e98:	bl	120f0 <g_key_file_get_keys@plt>
   12e9c:	ldr	sl, [sp, #68]	; 0x44
   12ea0:	ldr	ip, [sp, #72]	; 0x48
   12ea4:	cmp	sl, #0
   12ea8:	str	ip, [sp, #16]
   12eac:	str	r0, [sp, #24]
   12eb0:	beq	12f0c <g_boxed_type_register_static@plt+0x7e0>
   12eb4:	mov	r1, sl
   12eb8:	ldr	r0, [sp, #32]
   12ebc:	ldr	sl, [sp, #28]
   12ec0:	bl	123e4 <g_propagate_error@plt>
   12ec4:	mov	r0, fp
   12ec8:	bl	120c0 <g_free@plt>
   12ecc:	mov	r0, sl
   12ed0:	ldr	r1, [sp, #36]	; 0x24
   12ed4:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   12ed8:	mov	r0, sl
   12edc:	bl	120c0 <g_free@plt>
   12ee0:	ldr	ip, [sp, #20]
   12ee4:	cmp	ip, #0
   12ee8:	beq	12ef4 <g_boxed_type_register_static@plt+0x7c8>
   12eec:	ldr	r0, [sp, #20]
   12ef0:	bl	122c4 <g_key_file_unref@plt>
   12ef4:	ldr	ip, [sp, #48]	; 0x30
   12ef8:	cmp	ip, #0
   12efc:	beq	12de4 <g_boxed_type_register_static@plt+0x6b8>
   12f00:	mov	r0, ip
   12f04:	bl	126d8 <dconf_changeset_unref@plt>
   12f08:	b	12de4 <g_boxed_type_register_static@plt+0x6b8>
   12f0c:	cmp	ip, #0
   12f10:	ldrgt	ip, [sp, #24]
   12f14:	subgt	r8, ip, #4
   12f18:	ble	1316c <g_boxed_type_register_static@plt+0xa40>
   12f1c:	ldr	r0, [r8, #4]!
   12f20:	bl	121ec <g_strdup@plt>
   12f24:	movw	r1, #29884	; 0x74bc
   12f28:	movt	r1, #1
   12f2c:	mov	r4, r0
   12f30:	mov	r0, fp
   12f34:	bl	121d4 <g_strcmp0@plt>
   12f38:	subs	r5, r0, #0
   12f3c:	bne	12ff4 <g_boxed_type_register_static@plt+0x8c8>
   12f40:	movw	r0, #32120	; 0x7d78
   12f44:	movt	r0, #1
   12f48:	bl	121ec <g_strdup@plt>
   12f4c:	mov	r6, r0
   12f50:	mov	r0, r5
   12f54:	bl	120c0 <g_free@plt>
   12f58:	mov	r1, r6
   12f5c:	mov	r2, #0
   12f60:	ldr	r0, [sp, #44]	; 0x2c
   12f64:	bl	12228 <g_strconcat@plt>
   12f68:	mov	r1, r4
   12f6c:	mov	r2, #0
   12f70:	mov	r7, r0
   12f74:	bl	12228 <g_strconcat@plt>
   12f78:	mov	r5, r0
   12f7c:	mov	r0, r7
   12f80:	bl	120c0 <g_free@plt>
   12f84:	mov	r0, r5
   12f88:	mov	r1, r9
   12f8c:	bl	12408 <dconf_is_key@plt>
   12f90:	ldr	r7, [sp, #68]	; 0x44
   12f94:	cmp	r7, #0
   12f98:	beq	13018 <g_boxed_type_register_static@plt+0x8ec>
   12f9c:	mov	r1, r7
   12fa0:	ldr	r0, [sp, #32]
   12fa4:	ldr	r8, [sp, #24]
   12fa8:	ldr	sl, [sp, #28]
   12fac:	bl	123e4 <g_propagate_error@plt>
   12fb0:	mov	r0, r5
   12fb4:	bl	120c0 <g_free@plt>
   12fb8:	mov	r0, r6
   12fbc:	bl	120c0 <g_free@plt>
   12fc0:	mov	r0, r4
   12fc4:	bl	120c0 <g_free@plt>
   12fc8:	ldr	r1, [sp, #16]
   12fcc:	mov	r0, r8
   12fd0:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   12fd4:	mov	r0, r8
   12fd8:	bl	120c0 <g_free@plt>
   12fdc:	mov	r0, #0
   12fe0:	mov	r1, r0
   12fe4:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   12fe8:	mov	r0, #0
   12fec:	bl	120c0 <g_free@plt>
   12ff0:	b	12ec4 <g_boxed_type_register_static@plt+0x798>
   12ff4:	mov	r0, fp
   12ff8:	mov	r2, #0
   12ffc:	movw	r1, #29884	; 0x74bc
   13000:	movt	r1, #1
   13004:	bl	12228 <g_strconcat@plt>
   13008:	mov	r6, r0
   1300c:	mov	r0, #0
   13010:	bl	120c0 <g_free@plt>
   13014:	b	12f58 <g_boxed_type_register_static@plt+0x82c>
   13018:	ldr	r0, [sp, #20]
   1301c:	mov	r1, fp
   13020:	mov	r2, r4
   13024:	mov	r3, r9
   13028:	bl	12480 <g_key_file_get_value@plt>
   1302c:	ldr	ip, [sp, #68]	; 0x44
   13030:	cmp	ip, #0
   13034:	str	r0, [sp, #40]	; 0x28
   13038:	beq	13090 <g_boxed_type_register_static@plt+0x964>
   1303c:	mov	r1, ip
   13040:	ldr	r0, [sp, #32]
   13044:	ldr	r8, [sp, #24]
   13048:	ldr	sl, [sp, #28]
   1304c:	bl	123e4 <g_propagate_error@plt>
   13050:	mov	r0, r5
   13054:	bl	120c0 <g_free@plt>
   13058:	mov	r0, r6
   1305c:	bl	120c0 <g_free@plt>
   13060:	mov	r0, r4
   13064:	bl	120c0 <g_free@plt>
   13068:	ldr	r1, [sp, #16]
   1306c:	mov	r0, r8
   13070:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13074:	mov	r0, r8
   13078:	bl	120c0 <g_free@plt>
   1307c:	mov	r0, r7
   13080:	mov	r1, r7
   13084:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13088:	mov	r0, r7
   1308c:	b	12fec <g_boxed_type_register_static@plt+0x8c0>
   13090:	mov	r0, ip
   13094:	ldr	r1, [sp, #40]	; 0x28
   13098:	mov	r2, ip
   1309c:	mov	r3, ip
   130a0:	str	r9, [sp]
   130a4:	str	ip, [sp, #12]
   130a8:	bl	124a4 <g_variant_parse@plt>
   130ac:	ldr	r1, [sp, #68]	; 0x44
   130b0:	ldr	ip, [sp, #12]
   130b4:	cmp	r1, #0
   130b8:	mov	r7, r0
   130bc:	beq	1311c <g_boxed_type_register_static@plt+0x9f0>
   130c0:	ldr	r0, [sp, #32]
   130c4:	mov	r9, ip
   130c8:	ldr	r8, [sp, #24]
   130cc:	ldr	sl, [sp, #28]
   130d0:	bl	123e4 <g_propagate_error@plt>
   130d4:	ldr	r0, [sp, #40]	; 0x28
   130d8:	bl	120c0 <g_free@plt>
   130dc:	mov	r0, r5
   130e0:	bl	120c0 <g_free@plt>
   130e4:	mov	r0, r6
   130e8:	bl	120c0 <g_free@plt>
   130ec:	mov	r0, r4
   130f0:	bl	120c0 <g_free@plt>
   130f4:	ldr	r1, [sp, #16]
   130f8:	mov	r0, r8
   130fc:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13100:	mov	r0, r8
   13104:	bl	120c0 <g_free@plt>
   13108:	mov	r0, r9
   1310c:	mov	r1, r9
   13110:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13114:	mov	r0, r9
   13118:	b	12fec <g_boxed_type_register_static@plt+0x8c0>
   1311c:	ldr	r0, [sp, #48]	; 0x30
   13120:	mov	r1, r5
   13124:	mov	r2, r7
   13128:	bl	12618 <dconf_changeset_set@plt>
   1312c:	cmp	r7, #0
   13130:	beq	1313c <g_boxed_type_register_static@plt+0xa10>
   13134:	mov	r0, r7
   13138:	bl	12540 <g_variant_unref@plt>
   1313c:	ldr	r0, [sp, #40]	; 0x28
   13140:	add	sl, sl, #1
   13144:	bl	120c0 <g_free@plt>
   13148:	mov	r0, r5
   1314c:	bl	120c0 <g_free@plt>
   13150:	mov	r0, r6
   13154:	bl	120c0 <g_free@plt>
   13158:	mov	r0, r4
   1315c:	bl	120c0 <g_free@plt>
   13160:	ldr	ip, [sp, #16]
   13164:	cmp	ip, sl
   13168:	bne	12f1c <g_boxed_type_register_static@plt+0x7f0>
   1316c:	ldr	r1, [sp, #16]
   13170:	ldr	r0, [sp, #24]
   13174:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13178:	ldr	r0, [sp, #24]
   1317c:	bl	120c0 <g_free@plt>
   13180:	mov	r0, #0
   13184:	ldr	ip, [sp, #52]	; 0x34
   13188:	mov	r1, r0
   1318c:	add	ip, ip, #1
   13190:	str	ip, [sp, #52]	; 0x34
   13194:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   13198:	mov	r0, #0
   1319c:	bl	120c0 <g_free@plt>
   131a0:	mov	r0, fp
   131a4:	bl	120c0 <g_free@plt>
   131a8:	ldr	r2, [sp, #64]	; 0x40
   131ac:	ldr	r3, [sp, #52]	; 0x34
   131b0:	cmp	r3, r2
   131b4:	bcc	12e78 <g_boxed_type_register_static@plt+0x74c>
   131b8:	ldr	sl, [sp, #28]
   131bc:	ldr	r1, [sp, #36]	; 0x24
   131c0:	mov	r0, sl
   131c4:	bl	1287c <g_boxed_type_register_static@plt+0x150>
   131c8:	mov	r0, sl
   131cc:	bl	120c0 <g_free@plt>
   131d0:	bl	12264 <dconf_client_new@plt>
   131d4:	ldr	ip, [sp, #56]	; 0x38
   131d8:	mov	r2, #0
   131dc:	ldr	r1, [sp, #48]	; 0x30
   131e0:	mov	r3, r2
   131e4:	str	ip, [sp]
   131e8:	mov	r4, r0
   131ec:	bl	1233c <dconf_client_change_sync@plt>
   131f0:	ldr	r1, [sp, #68]	; 0x44
   131f4:	cmp	r1, #0
   131f8:	beq	1322c <g_boxed_type_register_static@plt+0xb00>
   131fc:	ldr	r0, [sp, #32]
   13200:	bl	123e4 <g_propagate_error@plt>
   13204:	cmp	r4, #0
   13208:	beq	13214 <g_boxed_type_register_static@plt+0xae8>
   1320c:	mov	r0, r4
   13210:	bl	121b0 <g_object_unref@plt>
   13214:	ldr	ip, [sp, #20]
   13218:	cmp	ip, #0
   1321c:	beq	12ef4 <g_boxed_type_register_static@plt+0x7c8>
   13220:	mov	r0, ip
   13224:	bl	122c4 <g_key_file_unref@plt>
   13228:	b	12ef4 <g_boxed_type_register_static@plt+0x7c8>
   1322c:	cmp	r4, #0
   13230:	bne	1320c <g_boxed_type_register_static@plt+0xae0>
   13234:	b	13214 <g_boxed_type_register_static@plt+0xae8>
   13238:	bl	1251c <__stack_chk_fail@plt>
   1323c:	b	120c0 <g_free@plt>
   13240:	push	{r4, lr}
   13244:	movw	r1, #12860	; 0x323c
   13248:	mov	r4, r0
   1324c:	movt	r1, #1
   13250:	mov	r2, #0
   13254:	bl	124d4 <g_slist_foreach@plt>
   13258:	mov	r0, r4
   1325c:	pop	{r4, lr}
   13260:	b	12114 <g_slist_free@plt>
   13264:	push	{r3, r4, r5, lr}
   13268:	subs	r5, r0, #0
   1326c:	mov	r4, r1
   13270:	beq	1328c <g_boxed_type_register_static@plt+0xb60>
   13274:	cmp	r1, #0
   13278:	beq	132a8 <g_boxed_type_register_static@plt+0xb7c>
   1327c:	bl	124b0 <strstr@plt>
   13280:	adds	r0, r0, #0
   13284:	movne	r0, #1
   13288:	pop	{r3, r4, r5, pc}
   1328c:	movw	r1, #29964	; 0x750c
   13290:	movw	r2, #29932	; 0x74ec
   13294:	movt	r1, #1
   13298:	movt	r2, #1
   1329c:	bl	12420 <g_return_if_fail_warning@plt>
   132a0:	mov	r0, r5
   132a4:	pop	{r3, r4, r5, pc}
   132a8:	mov	r0, r4
   132ac:	movw	r1, #29964	; 0x750c
   132b0:	movw	r2, #30140	; 0x75bc
   132b4:	movt	r1, #1
   132b8:	movt	r2, #1
   132bc:	bl	12420 <g_return_if_fail_warning@plt>
   132c0:	mov	r0, r4
   132c4:	pop	{r3, r4, r5, pc}
   132c8:	cmp	r0, #0
   132cc:	push	{r4, r5, r6, lr}
   132d0:	mov	r6, r1
   132d4:	popeq	{r4, r5, r6, pc}
   132d8:	cmp	r1, #0
   132dc:	pople	{r4, r5, r6, pc}
   132e0:	sub	r5, r0, #4
   132e4:	mov	r4, #0
   132e8:	ldr	r0, [r5, #4]!
   132ec:	add	r4, r4, #1
   132f0:	cmp	r0, #0
   132f4:	beq	132fc <g_boxed_type_register_static@plt+0xbd0>
   132f8:	bl	120c0 <g_free@plt>
   132fc:	cmp	r4, r6
   13300:	bne	132e8 <g_boxed_type_register_static@plt+0xbbc>
   13304:	pop	{r4, r5, r6, pc}
   13308:	push	{r3, r4, r5, lr}
   1330c:	subs	r5, r0, #0
   13310:	mov	r4, r1
   13314:	beq	13398 <g_boxed_type_register_static@plt+0xc6c>
   13318:	cmp	r1, #0
   1331c:	bge	13348 <g_boxed_type_register_static@plt+0xc1c>
   13320:	bl	123b4 <strlen@plt>
   13324:	subs	r4, r0, #0
   13328:	bge	13388 <g_boxed_type_register_static@plt+0xc5c>
   1332c:	mov	r0, #0
   13330:	ldr	r1, [pc, #120]	; 133b0 <g_boxed_type_register_static@plt+0xc84>
   13334:	movw	r2, #30156	; 0x75cc
   13338:	movt	r2, #1
   1333c:	bl	12420 <g_return_if_fail_warning@plt>
   13340:	mov	r0, #0
   13344:	pop	{r3, r4, r5, pc}
   13348:	mov	r1, #0
   1334c:	mov	r2, r4
   13350:	bl	12654 <memchr@plt>
   13354:	cmp	r0, #0
   13358:	beq	13388 <g_boxed_type_register_static@plt+0xc5c>
   1335c:	subs	r0, r0, r5
   13360:	bmi	1332c <g_boxed_type_register_static@plt+0xc00>
   13364:	cmp	r4, r0
   13368:	ble	13388 <g_boxed_type_register_static@plt+0xc5c>
   1336c:	mov	r0, #0
   13370:	ldr	r1, [pc, #56]	; 133b0 <g_boxed_type_register_static@plt+0xc84>
   13374:	movw	r2, #30176	; 0x75e0
   13378:	movt	r2, #1
   1337c:	bl	12420 <g_return_if_fail_warning@plt>
   13380:	mov	r0, #0
   13384:	pop	{r3, r4, r5, pc}
   13388:	mov	r0, r5
   1338c:	mov	r1, r4
   13390:	pop	{r3, r4, r5, lr}
   13394:	b	122b8 <g_strndup@plt>
   13398:	ldr	r1, [pc, #16]	; 133b0 <g_boxed_type_register_static@plt+0xc84>
   1339c:	movw	r2, #29932	; 0x74ec
   133a0:	movt	r2, #1
   133a4:	bl	12420 <g_return_if_fail_warning@plt>
   133a8:	mov	r0, #0
   133ac:	pop	{r3, r4, r5, pc}
   133b0:	andeq	r7, r1, ip, lsl r5
   133b4:	push	{r4, r5, r6, lr}
   133b8:	subs	r6, r0, #0
   133bc:	sub	sp, sp, #8
   133c0:	mov	r4, r1
   133c4:	beq	13490 <g_boxed_type_register_static@plt+0xd64>
   133c8:	cmp	r1, #0
   133cc:	beq	134ac <g_boxed_type_register_static@plt+0xd80>
   133d0:	ldrb	r3, [r1, #1]
   133d4:	cmp	r3, #0
   133d8:	subne	r2, r1, #1
   133dc:	movne	r3, #1
   133e0:	movne	r1, #0
   133e4:	beq	13440 <g_boxed_type_register_static@plt+0xd14>
   133e8:	ldrb	lr, [r2, #1]!
   133ec:	cmp	lr, #47	; 0x2f
   133f0:	ldrb	lr, [r2, #2]
   133f4:	moveq	r1, r3
   133f8:	add	r3, r3, #1
   133fc:	cmp	lr, #0
   13400:	bne	133e8 <g_boxed_type_register_static@plt+0xcbc>
   13404:	cmp	r1, #0
   13408:	beq	13440 <g_boxed_type_register_static@plt+0xd14>
   1340c:	mov	r0, r4
   13410:	bl	13308 <g_boxed_type_register_static@plt+0xbdc>
   13414:	mov	r5, r0
   13418:	mov	r0, r6
   1341c:	mov	r1, r5
   13420:	bl	12558 <g_hash_table_lookup@plt>
   13424:	subs	r4, r0, #0
   13428:	beq	13464 <g_boxed_type_register_static@plt+0xd38>
   1342c:	mov	r0, r5
   13430:	bl	120c0 <g_free@plt>
   13434:	mov	r0, r4
   13438:	add	sp, sp, #8
   1343c:	pop	{r4, r5, r6, pc}
   13440:	movw	r3, #30272	; 0x7640
   13444:	movw	r1, #30240	; 0x7620
   13448:	movt	r3, #1
   1344c:	movt	r1, #1
   13450:	str	r3, [sp]
   13454:	mov	r0, #0
   13458:	mov	r2, #237	; 0xed
   1345c:	ldr	r3, [pc, #104]	; 134cc <g_boxed_type_register_static@plt+0xda0>
   13460:	bl	122f4 <g_assertion_message_expr@plt>
   13464:	mov	r1, r5
   13468:	mov	r0, r6
   1346c:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   13470:	mov	r1, r5
   13474:	mov	r4, r0
   13478:	mov	r0, r6
   1347c:	bl	133b4 <g_boxed_type_register_static@plt+0xc88>
   13480:	mov	r1, r0
   13484:	mov	r0, r4
   13488:	bl	16ee8 <g_boxed_type_register_static@plt+0x47bc>
   1348c:	b	1342c <g_boxed_type_register_static@plt+0xd00>
   13490:	ldr	r1, [pc, #52]	; 134cc <g_boxed_type_register_static@plt+0xda0>
   13494:	movw	r2, #30208	; 0x7600
   13498:	movt	r2, #1
   1349c:	bl	12420 <g_return_if_fail_warning@plt>
   134a0:	mov	r0, r6
   134a4:	add	sp, sp, #8
   134a8:	pop	{r4, r5, r6, pc}
   134ac:	mov	r0, r1
   134b0:	movw	r2, #30224	; 0x7610
   134b4:	ldr	r1, [pc, #16]	; 134cc <g_boxed_type_register_static@plt+0xda0>
   134b8:	movt	r2, #1
   134bc:	bl	12420 <g_return_if_fail_warning@plt>
   134c0:	mov	r0, r4
   134c4:	add	sp, sp, #8
   134c8:	pop	{r4, r5, r6, pc}
   134cc:	andeq	r7, r1, r0, lsr r5
   134d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   134d4:	movw	r6, #37440	; 0x9240
   134d8:	movt	r6, #2
   134dc:	sub	sp, sp, #124	; 0x7c
   134e0:	subs	r7, r0, #0
   134e4:	mov	r8, #0
   134e8:	ldr	r3, [r6]
   134ec:	mov	r9, r1
   134f0:	mov	r4, r2
   134f4:	str	r8, [sp, #4]
   134f8:	str	r3, [sp, #116]	; 0x74
   134fc:	beq	135ec <g_boxed_type_register_static@plt+0xec0>
   13500:	mov	r1, r8
   13504:	add	r2, sp, #4
   13508:	bl	126e4 <g_dir_open@plt>
   1350c:	ldr	r1, [sp, #4]
   13510:	cmp	r1, #0
   13514:	moveq	r8, r1
   13518:	mov	r5, r0
   1351c:	beq	1359c <g_boxed_type_register_static@plt+0xe70>
   13520:	mov	r0, r4
   13524:	bl	123e4 <g_propagate_error@plt>
   13528:	mov	r0, r8
   1352c:	ldr	r2, [sp, #116]	; 0x74
   13530:	ldr	r3, [r6]
   13534:	cmp	r2, r3
   13538:	bne	13604 <g_boxed_type_register_static@plt+0xed8>
   1353c:	add	sp, sp, #124	; 0x7c
   13540:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13544:	mov	r1, r4
   13548:	mov	r0, r7
   1354c:	bl	12570 <g_build_filename@plt>
   13550:	add	r2, sp, #8
   13554:	mov	r1, r0
   13558:	mov	r4, r0
   1355c:	mov	r0, #3
   13560:	bl	124f8 <__xstat64@plt>
   13564:	ldr	r3, [sp, #24]
   13568:	cmp	r0, #0
   1356c:	blt	13594 <g_boxed_type_register_static@plt+0xe68>
   13570:	and	r3, r3, #61440	; 0xf000
   13574:	cmp	r9, r3
   13578:	bne	13594 <g_boxed_type_register_static@plt+0xe68>
   1357c:	mov	r0, r4
   13580:	bl	121ec <g_strdup@plt>
   13584:	mov	r1, r0
   13588:	mov	r0, r8
   1358c:	bl	123c0 <g_slist_prepend@plt>
   13590:	mov	r8, r0
   13594:	mov	r0, r4
   13598:	bl	120c0 <g_free@plt>
   1359c:	mov	r1, #0
   135a0:	mov	r2, #104	; 0x68
   135a4:	add	r0, sp, #8
   135a8:	bl	12258 <memset@plt>
   135ac:	mov	r0, r5
   135b0:	bl	12150 <g_dir_read_name@plt>
   135b4:	subs	r4, r0, #0
   135b8:	beq	135d4 <g_boxed_type_register_static@plt+0xea8>
   135bc:	movw	r1, #31256	; 0x7a18
   135c0:	movt	r1, #1
   135c4:	bl	124ec <g_str_has_prefix@plt>
   135c8:	subs	r2, r0, #0
   135cc:	bne	1359c <g_boxed_type_register_static@plt+0xe70>
   135d0:	b	13544 <g_boxed_type_register_static@plt+0xe18>
   135d4:	cmp	r5, #0
   135d8:	beq	135e4 <g_boxed_type_register_static@plt+0xeb8>
   135dc:	mov	r0, r5
   135e0:	bl	120fc <g_dir_close@plt>
   135e4:	mov	r0, r8
   135e8:	b	1352c <g_boxed_type_register_static@plt+0xe00>
   135ec:	movw	r2, #30284	; 0x764c
   135f0:	ldr	r1, [pc, #16]	; 13608 <g_boxed_type_register_static@plt+0xedc>
   135f4:	movt	r2, #1
   135f8:	bl	12420 <g_return_if_fail_warning@plt>
   135fc:	mov	r0, r7
   13600:	b	1352c <g_boxed_type_register_static@plt+0xe00>
   13604:	bl	1251c <__stack_chk_fail@plt>
   13608:	andeq	r7, r1, ip, lsr r5
   1360c:	movw	ip, #37440	; 0x9240
   13610:	movt	ip, #2
   13614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13618:	subs	r4, r0, #0
   1361c:	ldr	r3, [ip]
   13620:	sub	sp, sp, #36	; 0x24
   13624:	mov	r5, #0
   13628:	str	ip, [sp, #12]
   1362c:	str	r1, [sp, #4]
   13630:	str	r5, [sp, #20]
   13634:	str	r3, [sp, #28]
   13638:	beq	136c4 <g_boxed_type_register_static@plt+0xf98>
   1363c:	mov	r1, #32768	; 0x8000
   13640:	add	r2, sp, #20
   13644:	bl	134d0 <g_boxed_type_register_static@plt+0xda4>
   13648:	ldr	r4, [sp, #20]
   1364c:	cmp	r4, #0
   13650:	str	r0, [sp, #8]
   13654:	beq	136dc <g_boxed_type_register_static@plt+0xfb0>
   13658:	bl	12630 <g_file_error_quark@plt>
   1365c:	mov	r2, #4
   13660:	mov	r1, r0
   13664:	mov	r0, r4
   13668:	bl	12468 <g_error_matches@plt>
   1366c:	subs	r4, r0, #0
   13670:	beq	136a8 <g_boxed_type_register_static@plt+0xf7c>
   13674:	ldr	r0, [sp, #20]
   13678:	str	r5, [sp, #20]
   1367c:	cmp	r0, #0
   13680:	beq	1368c <g_boxed_type_register_static@plt+0xf60>
   13684:	bl	125e8 <g_error_free@plt>
   13688:	mov	r0, r5
   1368c:	ldr	ip, [sp, #12]
   13690:	ldr	r2, [sp, #28]
   13694:	ldr	r3, [ip]
   13698:	cmp	r2, r3
   1369c:	bne	13880 <g_boxed_type_register_static@plt+0x1154>
   136a0:	add	sp, sp, #36	; 0x24
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a8:	ldr	r1, [sp, #20]
   136ac:	cmp	r1, #0
   136b0:	beq	13884 <g_boxed_type_register_static@plt+0x1158>
   136b4:	ldr	r0, [sp, #4]
   136b8:	bl	123e4 <g_propagate_error@plt>
   136bc:	mov	r0, r4
   136c0:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   136c4:	movw	r2, #30284	; 0x764c
   136c8:	ldr	r1, [pc, #444]	; 1388c <g_boxed_type_register_static@plt+0x1160>
   136cc:	movt	r2, #1
   136d0:	bl	12420 <g_return_if_fail_warning@plt>
   136d4:	mov	r0, r4
   136d8:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   136dc:	mov	r0, r4
   136e0:	mov	r1, r4
   136e4:	bl	16e90 <g_boxed_type_register_static@plt+0x4764>
   136e8:	ldr	ip, [sp, #8]
   136ec:	cmp	ip, #0
   136f0:	mov	r9, r0
   136f4:	beq	13878 <g_boxed_type_register_static@plt+0x114c>
   136f8:	mov	sl, ip
   136fc:	ldr	r0, [sl]
   13700:	bl	121ec <g_strdup@plt>
   13704:	mov	r2, #0
   13708:	add	r1, sp, #24
   1370c:	add	r3, sp, #20
   13710:	str	r2, [sp, #24]
   13714:	str	r0, [sp]
   13718:	bl	12588 <g_file_get_contents@plt>
   1371c:	mov	r0, #0
   13720:	bl	120c0 <g_free@plt>
   13724:	ldr	r8, [sp, #20]
   13728:	ldr	fp, [sp, #24]
   1372c:	cmp	r8, #0
   13730:	beq	13770 <g_boxed_type_register_static@plt+0x1044>
   13734:	mov	r1, r8
   13738:	ldr	r0, [sp, #4]
   1373c:	bl	123e4 <g_propagate_error@plt>
   13740:	mov	r0, fp
   13744:	bl	120c0 <g_free@plt>
   13748:	ldr	r0, [sp]
   1374c:	bl	120c0 <g_free@plt>
   13750:	cmp	r9, #0
   13754:	beq	13760 <g_boxed_type_register_static@plt+0x1034>
   13758:	mov	r0, r9
   1375c:	bl	125d0 <g_hash_table_unref@plt>
   13760:	ldr	r0, [sp, #8]
   13764:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13768:	mov	r0, #0
   1376c:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   13770:	mov	r2, r8
   13774:	movw	r1, #32316	; 0x7e3c
   13778:	mov	r0, fp
   1377c:	movt	r1, #1
   13780:	bl	1254c <g_strsplit@plt>
   13784:	subs	r5, r0, #0
   13788:	moveq	r8, r5
   1378c:	beq	13818 <g_boxed_type_register_static@plt+0x10ec>
   13790:	ldr	r3, [r5]
   13794:	cmp	r3, #0
   13798:	beq	13870 <g_boxed_type_register_static@plt+0x1144>
   1379c:	mov	r2, r5
   137a0:	ldr	r1, [r2, #4]!
   137a4:	add	r8, r8, #1
   137a8:	cmp	r1, #0
   137ac:	bne	137a0 <g_boxed_type_register_static@plt+0x1074>
   137b0:	cmp	r3, #0
   137b4:	sub	r7, r5, #4
   137b8:	mov	r4, #0
   137bc:	beq	13818 <g_boxed_type_register_static@plt+0x10ec>
   137c0:	mov	r2, r5
   137c4:	mov	r3, #0
   137c8:	ldr	r1, [r2, #4]!
   137cc:	add	r3, r3, #1
   137d0:	cmp	r1, #0
   137d4:	bne	137c8 <g_boxed_type_register_static@plt+0x109c>
   137d8:	cmp	r4, r3
   137dc:	bge	13818 <g_boxed_type_register_static@plt+0x10ec>
   137e0:	ldr	r0, [r7, #4]!
   137e4:	bl	121ec <g_strdup@plt>
   137e8:	movw	r1, #29884	; 0x74bc
   137ec:	movt	r1, #1
   137f0:	mov	r6, r0
   137f4:	bl	124ec <g_str_has_prefix@plt>
   137f8:	cmp	r0, #0
   137fc:	bne	13858 <g_boxed_type_register_static@plt+0x112c>
   13800:	mov	r0, r6
   13804:	add	r4, r4, #1
   13808:	bl	120c0 <g_free@plt>
   1380c:	ldr	r3, [r5]
   13810:	cmp	r3, #0
   13814:	bne	137c0 <g_boxed_type_register_static@plt+0x1094>
   13818:	mov	r1, r8
   1381c:	mov	r0, r5
   13820:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13824:	mov	r0, r5
   13828:	bl	120c0 <g_free@plt>
   1382c:	mov	r0, fp
   13830:	bl	120c0 <g_free@plt>
   13834:	ldr	r0, [sp]
   13838:	bl	120c0 <g_free@plt>
   1383c:	ldr	sl, [sl, #4]
   13840:	cmp	sl, #0
   13844:	bne	136fc <g_boxed_type_register_static@plt+0xfd0>
   13848:	ldr	r0, [sp, #8]
   1384c:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13850:	mov	r0, r9
   13854:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   13858:	movw	r2, #32120	; 0x7d78
   1385c:	mov	r0, r9
   13860:	movt	r2, #1
   13864:	mov	r1, r6
   13868:	bl	16e10 <g_boxed_type_register_static@plt+0x46e4>
   1386c:	b	13800 <g_boxed_type_register_static@plt+0x10d4>
   13870:	mov	r8, r3
   13874:	b	137b0 <g_boxed_type_register_static@plt+0x1084>
   13878:	mov	r0, r9
   1387c:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   13880:	bl	1251c <__stack_chk_fail@plt>
   13884:	bl	16e90 <g_boxed_type_register_static@plt+0x4764>
   13888:	b	1368c <g_boxed_type_register_static@plt+0xf60>
   1388c:	andeq	r7, r1, ip, asr #10
   13890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13894:	movw	r2, #37440	; 0x9240
   13898:	sub	sp, sp, #92	; 0x5c
   1389c:	movt	r2, #2
   138a0:	subs	r3, r0, #0
   138a4:	mov	r4, #0
   138a8:	str	r3, [sp, #60]	; 0x3c
   138ac:	ldr	r3, [r2]
   138b0:	str	r2, [sp, #44]	; 0x2c
   138b4:	str	r1, [sp, #52]	; 0x34
   138b8:	str	r4, [sp, #72]	; 0x48
   138bc:	str	r3, [sp, #84]	; 0x54
   138c0:	beq	13938 <g_boxed_type_register_static@plt+0x120c>
   138c4:	mov	r1, r4
   138c8:	mov	r0, r4
   138cc:	bl	16e90 <g_boxed_type_register_static@plt+0x4764>
   138d0:	movw	r1, #29884	; 0x74bc
   138d4:	movt	r1, #1
   138d8:	str	r0, [sp, #20]
   138dc:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   138e0:	mov	r1, #32768	; 0x8000
   138e4:	add	r2, sp, #72	; 0x48
   138e8:	ldr	r0, [sp, #60]	; 0x3c
   138ec:	bl	134d0 <g_boxed_type_register_static@plt+0xda4>
   138f0:	ldr	r1, [sp, #72]	; 0x48
   138f4:	cmp	r1, #0
   138f8:	beq	13950 <g_boxed_type_register_static@plt+0x1224>
   138fc:	ldr	r0, [sp, #52]	; 0x34
   13900:	bl	123e4 <g_propagate_error@plt>
   13904:	ldr	r2, [sp, #20]
   13908:	cmp	r2, #0
   1390c:	beq	13918 <g_boxed_type_register_static@plt+0x11ec>
   13910:	ldr	r0, [sp, #20]
   13914:	bl	125d0 <g_hash_table_unref@plt>
   13918:	mov	r0, #0
   1391c:	ldr	r1, [sp, #44]	; 0x2c
   13920:	ldr	r2, [sp, #84]	; 0x54
   13924:	ldr	r3, [r1]
   13928:	cmp	r2, r3
   1392c:	bne	142a8 <g_boxed_type_register_static@plt+0x1b7c>
   13930:	add	sp, sp, #92	; 0x5c
   13934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13938:	movw	r2, #30284	; 0x764c
   1393c:	ldr	r1, [pc, #2408]	; 142ac <g_boxed_type_register_static@plt+0x1b80>
   13940:	movt	r2, #1
   13944:	bl	12420 <g_return_if_fail_warning@plt>
   13948:	ldr	r0, [sp, #60]	; 0x3c
   1394c:	b	1391c <g_boxed_type_register_static@plt+0x11f0>
   13950:	movw	r1, #8660	; 0x21d4
   13954:	movt	r1, #1
   13958:	bl	12414 <g_slist_sort@plt>
   1395c:	bl	121bc <g_slist_reverse@plt>
   13960:	cmp	r0, #0
   13964:	str	r0, [sp, #64]	; 0x40
   13968:	beq	1420c <g_boxed_type_register_static@plt+0x1ae0>
   1396c:	movw	r3, #37448	; 0x9248
   13970:	str	r0, [sp, #68]	; 0x44
   13974:	movt	r3, #2
   13978:	str	r3, [sp, #56]	; 0x38
   1397c:	ldr	r1, [sp, #68]	; 0x44
   13980:	ldr	r0, [r1]
   13984:	bl	121ec <g_strdup@plt>
   13988:	str	r0, [sp, #40]	; 0x28
   1398c:	bl	121e0 <g_key_file_new@plt>
   13990:	ldr	r1, [sp, #40]	; 0x28
   13994:	mov	r2, #0
   13998:	add	r3, sp, #72	; 0x48
   1399c:	str	r0, [sp, #32]
   139a0:	bl	12510 <g_key_file_load_from_file@plt>
   139a4:	ldr	r4, [sp, #72]	; 0x48
   139a8:	cmp	r4, #0
   139ac:	beq	13a38 <g_boxed_type_register_static@plt+0x130c>
   139b0:	ldr	r1, [sp, #40]	; 0x28
   139b4:	movw	r0, #30556	; 0x775c
   139b8:	ldr	r2, [r4, #8]
   139bc:	movt	r0, #1
   139c0:	mov	r3, #0
   139c4:	str	r3, [sp, #72]	; 0x48
   139c8:	bl	12330 <g_strdup_printf@plt>
   139cc:	mov	r5, r0
   139d0:	ldr	r0, [r4, #8]
   139d4:	bl	120c0 <g_free@plt>
   139d8:	str	r5, [r4, #8]
   139dc:	mov	r0, r4
   139e0:	bl	12528 <g_error_copy@plt>
   139e4:	str	r0, [sp, #72]	; 0x48
   139e8:	mov	r0, r4
   139ec:	bl	125e8 <g_error_free@plt>
   139f0:	ldr	r1, [sp, #72]	; 0x48
   139f4:	cmp	r1, #0
   139f8:	beq	13a38 <g_boxed_type_register_static@plt+0x130c>
   139fc:	ldr	r0, [sp, #52]	; 0x34
   13a00:	bl	123e4 <g_propagate_error@plt>
   13a04:	ldr	r1, [sp, #32]
   13a08:	cmp	r1, #0
   13a0c:	beq	13a18 <g_boxed_type_register_static@plt+0x12ec>
   13a10:	ldr	r0, [sp, #32]
   13a14:	bl	122c4 <g_key_file_unref@plt>
   13a18:	ldr	r0, [sp, #40]	; 0x28
   13a1c:	bl	120c0 <g_free@plt>
   13a20:	ldr	r0, [sp, #64]	; 0x40
   13a24:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13a28:	ldr	r3, [sp, #20]
   13a2c:	cmp	r3, #0
   13a30:	bne	13910 <g_boxed_type_register_static@plt+0x11e4>
   13a34:	b	13918 <g_boxed_type_register_static@plt+0x11ec>
   13a38:	ldr	r0, [sp, #32]
   13a3c:	add	r1, sp, #76	; 0x4c
   13a40:	bl	124e0 <g_key_file_get_groups@plt>
   13a44:	ldr	r2, [sp, #76]	; 0x4c
   13a48:	cmp	r2, #0
   13a4c:	str	r2, [sp, #28]
   13a50:	movne	r3, #0
   13a54:	str	r0, [sp, #24]
   13a58:	strne	r3, [sp, #36]	; 0x24
   13a5c:	beq	13ac8 <g_boxed_type_register_static@plt+0x139c>
   13a60:	ldr	r1, [sp, #24]
   13a64:	ldr	r0, [r1, r3, lsl #2]
   13a68:	bl	121ec <g_strdup@plt>
   13a6c:	movw	r1, #29884	; 0x74bc
   13a70:	movt	r1, #1
   13a74:	mov	r7, r0
   13a78:	bl	124ec <g_str_has_prefix@plt>
   13a7c:	cmp	r0, #0
   13a80:	beq	13b24 <g_boxed_type_register_static@plt+0x13f8>
   13a84:	ldr	r2, [sp, #56]	; 0x38
   13a88:	mov	r1, #1
   13a8c:	ldr	r3, [sp, #40]	; 0x28
   13a90:	ldr	r0, [r2]
   13a94:	movw	r2, #30304	; 0x7660
   13a98:	str	r7, [sp]
   13a9c:	movt	r2, #1
   13aa0:	bl	12534 <__fprintf_chk@plt>
   13aa4:	mov	r0, r7
   13aa8:	bl	120c0 <g_free@plt>
   13aac:	ldr	r1, [sp, #36]	; 0x24
   13ab0:	ldr	r3, [sp, #76]	; 0x4c
   13ab4:	add	r1, r1, #1
   13ab8:	str	r1, [sp, #36]	; 0x24
   13abc:	cmp	r1, r3
   13ac0:	mov	r3, r1
   13ac4:	bcc	13a60 <g_boxed_type_register_static@plt+0x1334>
   13ac8:	ldr	r0, [sp, #24]
   13acc:	ldr	r1, [sp, #28]
   13ad0:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13ad4:	ldr	r0, [sp, #24]
   13ad8:	bl	120c0 <g_free@plt>
   13adc:	ldr	r1, [sp, #72]	; 0x48
   13ae0:	cmp	r1, #0
   13ae4:	beq	141dc <g_boxed_type_register_static@plt+0x1ab0>
   13ae8:	ldr	r0, [sp, #52]	; 0x34
   13aec:	bl	123e4 <g_propagate_error@plt>
   13af0:	ldr	r1, [sp, #32]
   13af4:	cmp	r1, #0
   13af8:	beq	13b04 <g_boxed_type_register_static@plt+0x13d8>
   13afc:	ldr	r0, [sp, #32]
   13b00:	bl	122c4 <g_key_file_unref@plt>
   13b04:	ldr	r0, [sp, #40]	; 0x28
   13b08:	bl	120c0 <g_free@plt>
   13b0c:	ldr	r0, [sp, #64]	; 0x40
   13b10:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13b14:	ldr	r2, [sp, #20]
   13b18:	cmp	r2, #0
   13b1c:	bne	13910 <g_boxed_type_register_static@plt+0x11e4>
   13b20:	b	13918 <g_boxed_type_register_static@plt+0x11ec>
   13b24:	movw	r1, #29884	; 0x74bc
   13b28:	mov	r0, r7
   13b2c:	movt	r1, #1
   13b30:	bl	125f4 <g_str_has_suffix@plt>
   13b34:	cmp	r0, #0
   13b38:	bne	13a84 <g_boxed_type_register_static@plt+0x1358>
   13b3c:	movw	r1, #30300	; 0x765c
   13b40:	mov	r0, r7
   13b44:	movt	r1, #1
   13b48:	bl	13264 <g_boxed_type_register_static@plt+0xb38>
   13b4c:	subs	r5, r0, #0
   13b50:	bne	13a84 <g_boxed_type_register_static@plt+0x1358>
   13b54:	ldr	r0, [sp, #32]
   13b58:	mov	r1, r7
   13b5c:	add	r2, sp, #80	; 0x50
   13b60:	add	r3, sp, #72	; 0x48
   13b64:	bl	120f0 <g_key_file_get_keys@plt>
   13b68:	ldr	r4, [sp, #72]	; 0x48
   13b6c:	ldr	r9, [sp, #80]	; 0x50
   13b70:	cmp	r4, #0
   13b74:	mov	r8, r0
   13b78:	beq	13c14 <g_boxed_type_register_static@plt+0x14e8>
   13b7c:	mov	r0, r7
   13b80:	bl	120c0 <g_free@plt>
   13b84:	ldr	r1, [sp, #28]
   13b88:	ldr	r0, [sp, #24]
   13b8c:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13b90:	ldr	r0, [sp, #24]
   13b94:	bl	120c0 <g_free@plt>
   13b98:	ldr	r3, [sp, #72]	; 0x48
   13b9c:	ldr	r4, [r3]
   13ba0:	bl	125dc <g_key_file_error_quark@plt>
   13ba4:	cmp	r4, r0
   13ba8:	beq	13f00 <g_boxed_type_register_static@plt+0x17d4>
   13bac:	mov	r0, r5
   13bb0:	bl	120c0 <g_free@plt>
   13bb4:	mov	r0, r5
   13bb8:	ldr	r1, [sp, #28]
   13bbc:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13bc0:	mov	r0, r5
   13bc4:	bl	120c0 <g_free@plt>
   13bc8:	ldr	r3, [sp, #32]
   13bcc:	cmp	r3, #0
   13bd0:	beq	13bdc <g_boxed_type_register_static@plt+0x14b0>
   13bd4:	mov	r0, r3
   13bd8:	bl	122c4 <g_key_file_unref@plt>
   13bdc:	ldr	r0, [sp, #40]	; 0x28
   13be0:	bl	120c0 <g_free@plt>
   13be4:	ldr	r0, [sp, #64]	; 0x40
   13be8:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13bec:	ldr	r1, [sp, #20]
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c00 <g_boxed_type_register_static@plt+0x14d4>
   13bf8:	ldr	r0, [sp, #20]
   13bfc:	bl	125d0 <g_hash_table_unref@plt>
   13c00:	ldr	r4, [sp, #72]	; 0x48
   13c04:	ldr	r0, [r4]
   13c08:	bl	12624 <g_quark_to_string@plt>
   13c0c:	movw	r3, #674	; 0x2a2
   13c10:	b	140e8 <g_boxed_type_register_static@plt+0x19bc>
   13c14:	cmp	r9, #0
   13c18:	bgt	13c3c <g_boxed_type_register_static@plt+0x1510>
   13c1c:	b	13f9c <g_boxed_type_register_static@plt+0x1870>
   13c20:	mov	r0, r6
   13c24:	add	r4, r4, #1
   13c28:	bl	120c0 <g_free@plt>
   13c2c:	mov	r0, r5
   13c30:	bl	120c0 <g_free@plt>
   13c34:	cmp	r9, r4
   13c38:	beq	13f9c <g_boxed_type_register_static@plt+0x1870>
   13c3c:	ldr	r0, [r8, r4, lsl #2]
   13c40:	bl	121ec <g_strdup@plt>
   13c44:	movw	r1, #29884	; 0x74bc
   13c48:	movt	r1, #1
   13c4c:	mov	r5, r0
   13c50:	bl	13264 <g_boxed_type_register_static@plt+0xb38>
   13c54:	subs	r6, r0, #0
   13c58:	bne	13fd0 <g_boxed_type_register_static@plt+0x18a4>
   13c5c:	mov	r2, r6
   13c60:	mov	r1, r7
   13c64:	movw	r0, #29884	; 0x74bc
   13c68:	movt	r0, #1
   13c6c:	bl	12228 <g_strconcat@plt>
   13c70:	mov	r2, r6
   13c74:	movw	r1, #29884	; 0x74bc
   13c78:	movt	r1, #1
   13c7c:	mov	sl, r0
   13c80:	bl	12228 <g_strconcat@plt>
   13c84:	mov	r2, r6
   13c88:	mov	r1, r5
   13c8c:	mov	fp, r0
   13c90:	bl	12228 <g_strconcat@plt>
   13c94:	mov	r6, r0
   13c98:	mov	r0, fp
   13c9c:	bl	120c0 <g_free@plt>
   13ca0:	mov	r0, sl
   13ca4:	bl	120c0 <g_free@plt>
   13ca8:	ldr	r0, [sp, #20]
   13cac:	mov	r1, r6
   13cb0:	bl	12558 <g_hash_table_lookup@plt>
   13cb4:	subs	sl, r0, #0
   13cb8:	bne	13c20 <g_boxed_type_register_static@plt+0x14f4>
   13cbc:	ldr	r0, [sp, #32]
   13cc0:	mov	r1, r7
   13cc4:	mov	r2, r5
   13cc8:	add	r3, sp, #72	; 0x48
   13ccc:	bl	12480 <g_key_file_get_value@plt>
   13cd0:	ldr	ip, [sp, #72]	; 0x48
   13cd4:	cmp	ip, #0
   13cd8:	mov	fp, r0
   13cdc:	beq	13de8 <g_boxed_type_register_static@plt+0x16bc>
   13ce0:	mov	r0, r6
   13ce4:	bl	120c0 <g_free@plt>
   13ce8:	mov	r0, r5
   13cec:	bl	120c0 <g_free@plt>
   13cf0:	mov	r1, r9
   13cf4:	mov	r0, r8
   13cf8:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13cfc:	mov	r0, r8
   13d00:	bl	120c0 <g_free@plt>
   13d04:	mov	r1, sl
   13d08:	mov	r0, sl
   13d0c:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13d10:	mov	r0, sl
   13d14:	bl	120c0 <g_free@plt>
   13d18:	mov	r0, r7
   13d1c:	bl	120c0 <g_free@plt>
   13d20:	ldr	r1, [sp, #28]
   13d24:	ldr	r0, [sp, #24]
   13d28:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13d2c:	ldr	r0, [sp, #24]
   13d30:	bl	120c0 <g_free@plt>
   13d34:	ldr	r3, [sp, #72]	; 0x48
   13d38:	ldr	r4, [r3]
   13d3c:	bl	125dc <g_key_file_error_quark@plt>
   13d40:	cmp	r4, r0
   13d44:	beq	13f00 <g_boxed_type_register_static@plt+0x17d4>
   13d48:	mov	r0, sl
   13d4c:	bl	120c0 <g_free@plt>
   13d50:	mov	r0, sl
   13d54:	bl	120c0 <g_free@plt>
   13d58:	mov	r1, r9
   13d5c:	mov	r0, sl
   13d60:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13d64:	mov	r0, sl
   13d68:	bl	120c0 <g_free@plt>
   13d6c:	mov	r1, sl
   13d70:	mov	r0, sl
   13d74:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13d78:	mov	r0, sl
   13d7c:	bl	120c0 <g_free@plt>
   13d80:	mov	r0, sl
   13d84:	bl	120c0 <g_free@plt>
   13d88:	mov	r0, sl
   13d8c:	ldr	r1, [sp, #28]
   13d90:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13d94:	mov	r0, sl
   13d98:	bl	120c0 <g_free@plt>
   13d9c:	ldr	r2, [sp, #32]
   13da0:	cmp	r2, #0
   13da4:	beq	13db0 <g_boxed_type_register_static@plt+0x1684>
   13da8:	mov	r0, r2
   13dac:	bl	122c4 <g_key_file_unref@plt>
   13db0:	ldr	r0, [sp, #40]	; 0x28
   13db4:	bl	120c0 <g_free@plt>
   13db8:	ldr	r0, [sp, #64]	; 0x40
   13dbc:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   13dc0:	ldr	r3, [sp, #20]
   13dc4:	cmp	r3, #0
   13dc8:	beq	13dd4 <g_boxed_type_register_static@plt+0x16a8>
   13dcc:	ldr	r0, [sp, #20]
   13dd0:	bl	125d0 <g_hash_table_unref@plt>
   13dd4:	ldr	r4, [sp, #72]	; 0x48
   13dd8:	ldr	r0, [r4]
   13ddc:	bl	12624 <g_quark_to_string@plt>
   13de0:	movw	r3, #791	; 0x317
   13de4:	b	140e8 <g_boxed_type_register_static@plt+0x19bc>
   13de8:	add	r2, sp, #72	; 0x48
   13dec:	mov	r3, ip
   13df0:	str	r2, [sp]
   13df4:	mov	r0, ip
   13df8:	mov	r1, fp
   13dfc:	mov	r2, ip
   13e00:	str	ip, [sp, #16]
   13e04:	bl	124a4 <g_variant_parse@plt>
   13e08:	ldr	r3, [sp, #72]	; 0x48
   13e0c:	cmp	r3, #0
   13e10:	mov	sl, r0
   13e14:	beq	13f40 <g_boxed_type_register_static@plt+0x1814>
   13e18:	ldr	sl, [r3]
   13e1c:	bl	12648 <g_variant_parse_error_quark@plt>
   13e20:	ldr	ip, [sp, #16]
   13e24:	cmp	sl, r0
   13e28:	bne	14128 <g_boxed_type_register_static@plt+0x19fc>
   13e2c:	ldr	sl, [sp, #72]	; 0x48
   13e30:	mov	r2, r7
   13e34:	str	fp, [sp]
   13e38:	mov	r3, r5
   13e3c:	ldr	r1, [sp, #40]	; 0x28
   13e40:	movw	r0, #30424	; 0x76d8
   13e44:	ldr	lr, [sl, #8]
   13e48:	movt	r0, #1
   13e4c:	str	ip, [sp, #72]	; 0x48
   13e50:	str	lr, [sp, #4]
   13e54:	bl	12330 <g_strdup_printf@plt>
   13e58:	mov	r3, r0
   13e5c:	ldr	r0, [sl, #8]
   13e60:	str	r3, [sp, #16]
   13e64:	bl	120c0 <g_free@plt>
   13e68:	ldr	r3, [sp, #16]
   13e6c:	mov	r0, sl
   13e70:	str	r3, [sl, #8]
   13e74:	bl	12528 <g_error_copy@plt>
   13e78:	str	r0, [sp, #72]	; 0x48
   13e7c:	mov	r0, sl
   13e80:	bl	125e8 <g_error_free@plt>
   13e84:	ldr	r3, [sp, #72]	; 0x48
   13e88:	cmp	r3, #0
   13e8c:	beq	13f90 <g_boxed_type_register_static@plt+0x1864>
   13e90:	mov	r0, fp
   13e94:	bl	120c0 <g_free@plt>
   13e98:	mov	r0, r6
   13e9c:	bl	120c0 <g_free@plt>
   13ea0:	mov	r0, r5
   13ea4:	bl	120c0 <g_free@plt>
   13ea8:	mov	r1, r9
   13eac:	mov	r0, r8
   13eb0:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13eb4:	mov	r0, r8
   13eb8:	bl	120c0 <g_free@plt>
   13ebc:	mov	r0, #0
   13ec0:	mov	r1, r0
   13ec4:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13ec8:	mov	r0, #0
   13ecc:	bl	120c0 <g_free@plt>
   13ed0:	mov	r0, r7
   13ed4:	bl	120c0 <g_free@plt>
   13ed8:	ldr	r1, [sp, #28]
   13edc:	ldr	r0, [sp, #24]
   13ee0:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13ee4:	ldr	r0, [sp, #24]
   13ee8:	bl	120c0 <g_free@plt>
   13eec:	ldr	r3, [sp, #72]	; 0x48
   13ef0:	ldr	r4, [r3]
   13ef4:	bl	125dc <g_key_file_error_quark@plt>
   13ef8:	cmp	r4, r0
   13efc:	bne	13adc <g_boxed_type_register_static@plt+0x13b0>
   13f00:	ldr	r3, [sp, #72]	; 0x48
   13f04:	mov	r4, #0
   13f08:	mov	r0, r4
   13f0c:	mov	r1, #16
   13f10:	movw	r2, #30464	; 0x7700
   13f14:	movt	r2, #1
   13f18:	ldr	r3, [r3, #8]
   13f1c:	str	r4, [sp, #72]	; 0x48
   13f20:	bl	12690 <g_log@plt>
   13f24:	movw	r1, #30240	; 0x7620
   13f28:	str	r4, [sp]
   13f2c:	mov	r0, r4
   13f30:	movw	r2, #915	; 0x393
   13f34:	movt	r1, #1
   13f38:	ldr	r3, [pc, #876]	; 142ac <g_boxed_type_register_static@plt+0x1b80>
   13f3c:	bl	122f4 <g_assertion_message_expr@plt>
   13f40:	mov	r1, r6
   13f44:	ldr	r0, [sp, #20]
   13f48:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   13f4c:	mov	r1, r6
   13f50:	str	r0, [sp, #48]	; 0x30
   13f54:	ldr	r0, [sp, #20]
   13f58:	bl	133b4 <g_boxed_type_register_static@plt+0xc88>
   13f5c:	mov	r1, r0
   13f60:	ldr	r0, [sp, #48]	; 0x30
   13f64:	bl	16ee8 <g_boxed_type_register_static@plt+0x47bc>
   13f68:	ldr	r0, [sp, #48]	; 0x30
   13f6c:	mov	r1, sl
   13f70:	bl	16db8 <g_boxed_type_register_static@plt+0x468c>
   13f74:	cmp	sl, #0
   13f78:	beq	13e84 <g_boxed_type_register_static@plt+0x1758>
   13f7c:	mov	r0, sl
   13f80:	bl	12540 <g_variant_unref@plt>
   13f84:	ldr	r3, [sp, #72]	; 0x48
   13f88:	cmp	r3, #0
   13f8c:	bne	13e90 <g_boxed_type_register_static@plt+0x1764>
   13f90:	mov	r0, fp
   13f94:	bl	120c0 <g_free@plt>
   13f98:	b	13c20 <g_boxed_type_register_static@plt+0x14f4>
   13f9c:	mov	r1, r9
   13fa0:	mov	r0, r8
   13fa4:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13fa8:	mov	r0, r8
   13fac:	bl	120c0 <g_free@plt>
   13fb0:	mov	r0, #0
   13fb4:	mov	r1, r0
   13fb8:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   13fbc:	mov	r0, #0
   13fc0:	bl	120c0 <g_free@plt>
   13fc4:	mov	r0, r7
   13fc8:	bl	120c0 <g_free@plt>
   13fcc:	b	13aac <g_boxed_type_register_static@plt+0x1380>
   13fd0:	bl	125dc <g_key_file_error_quark@plt>
   13fd4:	ldr	r3, [sp, #40]	; 0x28
   13fd8:	mov	r1, #5
   13fdc:	str	r7, [sp]
   13fe0:	str	r5, [sp, #4]
   13fe4:	movw	r2, #30392	; 0x76b8
   13fe8:	movt	r2, #1
   13fec:	bl	12198 <g_error_new@plt>
   13ff0:	str	r0, [sp, #72]	; 0x48
   13ff4:	mov	r0, r5
   13ff8:	bl	120c0 <g_free@plt>
   13ffc:	mov	r1, r9
   14000:	mov	r0, r8
   14004:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14008:	mov	r0, r8
   1400c:	bl	120c0 <g_free@plt>
   14010:	mov	r0, #0
   14014:	mov	r1, r0
   14018:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   1401c:	mov	r0, #0
   14020:	bl	120c0 <g_free@plt>
   14024:	mov	r0, r7
   14028:	bl	120c0 <g_free@plt>
   1402c:	ldr	r1, [sp, #28]
   14030:	ldr	r0, [sp, #24]
   14034:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14038:	ldr	r0, [sp, #24]
   1403c:	bl	120c0 <g_free@plt>
   14040:	ldr	r3, [sp, #72]	; 0x48
   14044:	ldr	r4, [r3]
   14048:	bl	125dc <g_key_file_error_quark@plt>
   1404c:	cmp	r4, r0
   14050:	beq	13f00 <g_boxed_type_register_static@plt+0x17d4>
   14054:	mov	r0, #0
   14058:	bl	120c0 <g_free@plt>
   1405c:	mov	r1, r9
   14060:	mov	r0, #0
   14064:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14068:	mov	r0, #0
   1406c:	bl	120c0 <g_free@plt>
   14070:	mov	r0, #0
   14074:	mov	r1, r0
   14078:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   1407c:	mov	r0, #0
   14080:	bl	120c0 <g_free@plt>
   14084:	mov	r0, #0
   14088:	bl	120c0 <g_free@plt>
   1408c:	ldr	r1, [sp, #28]
   14090:	mov	r0, #0
   14094:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14098:	mov	r0, #0
   1409c:	bl	120c0 <g_free@plt>
   140a0:	ldr	r1, [sp, #32]
   140a4:	cmp	r1, #0
   140a8:	beq	140b4 <g_boxed_type_register_static@plt+0x1988>
   140ac:	mov	r0, r1
   140b0:	bl	122c4 <g_key_file_unref@plt>
   140b4:	ldr	r0, [sp, #40]	; 0x28
   140b8:	bl	120c0 <g_free@plt>
   140bc:	ldr	r0, [sp, #64]	; 0x40
   140c0:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   140c4:	ldr	r2, [sp, #20]
   140c8:	cmp	r2, #0
   140cc:	beq	140d8 <g_boxed_type_register_static@plt+0x19ac>
   140d0:	ldr	r0, [sp, #20]
   140d4:	bl	125d0 <g_hash_table_unref@plt>
   140d8:	ldr	r4, [sp, #72]	; 0x48
   140dc:	ldr	r0, [r4]
   140e0:	bl	12624 <g_quark_to_string@plt>
   140e4:	movw	r3, #743	; 0x2e7
   140e8:	str	r3, [sp]
   140ec:	mov	r1, #8
   140f0:	ldr	ip, [r4, #8]
   140f4:	movw	r2, #30344	; 0x7688
   140f8:	str	r0, [sp, #8]
   140fc:	movt	r2, #1
   14100:	mov	r0, #0
   14104:	movw	r3, #30240	; 0x7620
   14108:	str	ip, [sp, #4]
   1410c:	movt	r3, #1
   14110:	ldr	ip, [r4, #4]
   14114:	str	ip, [sp, #12]
   14118:	bl	12690 <g_log@plt>
   1411c:	add	r0, sp, #72	; 0x48
   14120:	bl	121f8 <g_clear_error@plt>
   14124:	b	13918 <g_boxed_type_register_static@plt+0x11ec>
   14128:	mov	r0, fp
   1412c:	str	ip, [sp, #16]
   14130:	bl	120c0 <g_free@plt>
   14134:	mov	r0, r6
   14138:	bl	120c0 <g_free@plt>
   1413c:	mov	r0, r5
   14140:	bl	120c0 <g_free@plt>
   14144:	mov	r1, r9
   14148:	mov	r0, r8
   1414c:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14150:	mov	r0, r8
   14154:	bl	120c0 <g_free@plt>
   14158:	ldr	ip, [sp, #16]
   1415c:	mov	r1, ip
   14160:	mov	r0, ip
   14164:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14168:	ldr	ip, [sp, #16]
   1416c:	mov	r0, ip
   14170:	bl	120c0 <g_free@plt>
   14174:	mov	r0, r7
   14178:	bl	120c0 <g_free@plt>
   1417c:	ldr	r0, [sp, #24]
   14180:	ldr	r1, [sp, #28]
   14184:	bl	132c8 <g_boxed_type_register_static@plt+0xb9c>
   14188:	ldr	r0, [sp, #24]
   1418c:	bl	120c0 <g_free@plt>
   14190:	ldr	r3, [sp, #32]
   14194:	cmp	r3, #0
   14198:	beq	141a4 <g_boxed_type_register_static@plt+0x1a78>
   1419c:	mov	r0, r3
   141a0:	bl	122c4 <g_key_file_unref@plt>
   141a4:	ldr	r0, [sp, #40]	; 0x28
   141a8:	bl	120c0 <g_free@plt>
   141ac:	ldr	r0, [sp, #64]	; 0x40
   141b0:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   141b4:	ldr	r1, [sp, #20]
   141b8:	cmp	r1, #0
   141bc:	beq	141c8 <g_boxed_type_register_static@plt+0x1a9c>
   141c0:	ldr	r0, [sp, #20]
   141c4:	bl	125d0 <g_hash_table_unref@plt>
   141c8:	ldr	r4, [sp, #72]	; 0x48
   141cc:	ldr	r0, [r4]
   141d0:	bl	12624 <g_quark_to_string@plt>
   141d4:	movw	r3, #827	; 0x33b
   141d8:	b	140e8 <g_boxed_type_register_static@plt+0x19bc>
   141dc:	ldr	r3, [sp, #32]
   141e0:	cmp	r3, #0
   141e4:	beq	141f0 <g_boxed_type_register_static@plt+0x1ac4>
   141e8:	ldr	r0, [sp, #32]
   141ec:	bl	122c4 <g_key_file_unref@plt>
   141f0:	ldr	r0, [sp, #40]	; 0x28
   141f4:	bl	120c0 <g_free@plt>
   141f8:	ldr	r2, [sp, #68]	; 0x44
   141fc:	ldr	r2, [r2, #4]
   14200:	cmp	r2, #0
   14204:	str	r2, [sp, #68]	; 0x44
   14208:	bne	1397c <g_boxed_type_register_static@plt+0x1250>
   1420c:	mov	r2, #0
   14210:	ldr	r0, [sp, #60]	; 0x3c
   14214:	movw	r1, #30540	; 0x774c
   14218:	movt	r1, #1
   1421c:	bl	12228 <g_strconcat@plt>
   14220:	add	r1, sp, #72	; 0x48
   14224:	mov	r5, r0
   14228:	bl	1360c <g_boxed_type_register_static@plt+0xee0>
   1422c:	mov	r4, r0
   14230:	mov	r0, r5
   14234:	bl	120c0 <g_free@plt>
   14238:	ldr	r1, [sp, #72]	; 0x48
   1423c:	cmp	r1, #0
   14240:	beq	1425c <g_boxed_type_register_static@plt+0x1b30>
   14244:	ldr	r0, [sp, #52]	; 0x34
   14248:	bl	123e4 <g_propagate_error@plt>
   1424c:	ldr	r2, [sp, #64]	; 0x40
   14250:	cmp	r2, #0
   14254:	bne	13a20 <g_boxed_type_register_static@plt+0x12f4>
   14258:	b	13a28 <g_boxed_type_register_static@plt+0x12fc>
   1425c:	cmp	r4, #0
   14260:	beq	14284 <g_boxed_type_register_static@plt+0x1b58>
   14264:	movw	r1, #30548	; 0x7754
   14268:	ldr	r0, [sp, #20]
   1426c:	movt	r1, #1
   14270:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   14274:	mov	r1, r4
   14278:	bl	16e38 <g_boxed_type_register_static@plt+0x470c>
   1427c:	mov	r0, r4
   14280:	bl	125d0 <g_hash_table_unref@plt>
   14284:	ldr	r1, [sp, #64]	; 0x40
   14288:	cmp	r1, #0
   1428c:	beq	142a0 <g_boxed_type_register_static@plt+0x1b74>
   14290:	mov	r0, r1
   14294:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   14298:	ldr	r0, [sp, #20]
   1429c:	b	1391c <g_boxed_type_register_static@plt+0x11f0>
   142a0:	ldr	r0, [sp, #20]
   142a4:	b	1391c <g_boxed_type_register_static@plt+0x11f0>
   142a8:	bl	1251c <__stack_chk_fail@plt>
   142ac:	andeq	r7, r1, r4, ror #10
   142b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142b4:	movw	r8, #37440	; 0x9240
   142b8:	movt	r8, #2
   142bc:	sub	sp, sp, #228	; 0xe4
   142c0:	mov	r9, r0
   142c4:	mov	r4, r1
   142c8:	ldr	r3, [r8]
   142cc:	mov	fp, r2
   142d0:	add	r0, sp, #8
   142d4:	mov	r1, #0
   142d8:	mov	r2, #104	; 0x68
   142dc:	mov	sl, #0
   142e0:	str	r3, [sp, #220]	; 0xdc
   142e4:	bl	12258 <memset@plt>
   142e8:	cmp	r9, #0
   142ec:	str	sl, [sp, #4]
   142f0:	beq	14340 <g_boxed_type_register_static@plt+0x1c14>
   142f4:	cmp	r4, #0
   142f8:	beq	1435c <g_boxed_type_register_static@plt+0x1c30>
   142fc:	mov	r1, #32768	; 0x8000
   14300:	mov	r0, r9
   14304:	add	r2, sp, #4
   14308:	ldr	r7, [r4, #80]	; 0x50
   1430c:	bl	134d0 <g_boxed_type_register_static@plt+0xda4>
   14310:	ldr	r1, [sp, #4]
   14314:	cmp	r1, #0
   14318:	beq	14378 <g_boxed_type_register_static@plt+0x1c4c>
   1431c:	mov	r0, fp
   14320:	bl	123e4 <g_propagate_error@plt>
   14324:	mov	r0, sl
   14328:	ldr	r2, [sp, #220]	; 0xdc
   1432c:	ldr	r3, [r8]
   14330:	cmp	r2, r3
   14334:	bne	14544 <g_boxed_type_register_static@plt+0x1e18>
   14338:	add	sp, sp, #228	; 0xe4
   1433c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14340:	mov	r0, r9
   14344:	movw	r2, #30284	; 0x764c
   14348:	ldr	r1, [pc, #504]	; 14548 <g_boxed_type_register_static@plt+0x1e1c>
   1434c:	movt	r2, #1
   14350:	bl	12420 <g_return_if_fail_warning@plt>
   14354:	mov	r0, r9
   14358:	b	14328 <g_boxed_type_register_static@plt+0x1bfc>
   1435c:	mov	r0, r4
   14360:	movw	r2, #30600	; 0x7788
   14364:	ldr	r1, [pc, #476]	; 14548 <g_boxed_type_register_static@plt+0x1e1c>
   14368:	movt	r2, #1
   1436c:	bl	12420 <g_return_if_fail_warning@plt>
   14370:	mov	r0, r4
   14374:	b	14328 <g_boxed_type_register_static@plt+0x1bfc>
   14378:	movw	r1, #8660	; 0x21d4
   1437c:	movt	r1, #1
   14380:	bl	12414 <g_slist_sort@plt>
   14384:	bl	121bc <g_slist_reverse@plt>
   14388:	subs	sl, r0, #0
   1438c:	beq	143ec <g_boxed_type_register_static@plt+0x1cc0>
   14390:	add	r5, sp, #112	; 0x70
   14394:	mov	r4, sl
   14398:	ldr	r0, [r4]
   1439c:	bl	121ec <g_strdup@plt>
   143a0:	mov	r1, #0
   143a4:	mov	r2, #104	; 0x68
   143a8:	mov	r6, r0
   143ac:	mov	r0, r5
   143b0:	bl	12258 <memset@plt>
   143b4:	mov	r1, r6
   143b8:	mov	r0, #3
   143bc:	mov	r2, r5
   143c0:	bl	124f8 <__xstat64@plt>
   143c4:	ldr	r3, [sp, #192]	; 0xc0
   143c8:	cmp	r0, #0
   143cc:	bne	143d8 <g_boxed_type_register_static@plt+0x1cac>
   143d0:	cmp	r7, r3
   143d4:	movlt	r7, r3
   143d8:	mov	r0, r6
   143dc:	bl	120c0 <g_free@plt>
   143e0:	ldr	r4, [r4, #4]
   143e4:	cmp	r4, #0
   143e8:	bne	14398 <g_boxed_type_register_static@plt+0x1c6c>
   143ec:	mov	r2, #0
   143f0:	movw	r1, #30540	; 0x774c
   143f4:	mov	r0, r9
   143f8:	movt	r1, #1
   143fc:	bl	12228 <g_strconcat@plt>
   14400:	add	r2, sp, #8
   14404:	mov	r4, r0
   14408:	mov	r1, r0
   1440c:	mov	r0, #3
   14410:	bl	124f8 <__xstat64@plt>
   14414:	ldr	r6, [sp, #24]
   14418:	mov	r5, r0
   1441c:	mov	r0, r4
   14420:	ldr	r4, [sp, #88]	; 0x58
   14424:	bl	120c0 <g_free@plt>
   14428:	cmp	r5, #0
   1442c:	bne	1449c <g_boxed_type_register_static@plt+0x1d70>
   14430:	and	r6, r6, #61440	; 0xf000
   14434:	cmp	r6, #16384	; 0x4000
   14438:	bne	1449c <g_boxed_type_register_static@plt+0x1d70>
   1443c:	mov	r0, r9
   14440:	mov	r2, r5
   14444:	movw	r1, #30540	; 0x774c
   14448:	movt	r1, #1
   1444c:	bl	12228 <g_strconcat@plt>
   14450:	mov	r1, #32768	; 0x8000
   14454:	add	r2, sp, #4
   14458:	cmp	r7, r4
   1445c:	movlt	r7, r4
   14460:	mov	r9, r0
   14464:	bl	134d0 <g_boxed_type_register_static@plt+0xda4>
   14468:	mov	r6, r0
   1446c:	mov	r0, r9
   14470:	bl	120c0 <g_free@plt>
   14474:	ldr	r1, [sp, #4]
   14478:	cmp	r1, #0
   1447c:	beq	144ac <g_boxed_type_register_static@plt+0x1d80>
   14480:	mov	r0, fp
   14484:	bl	123e4 <g_propagate_error@plt>
   14488:	subs	r0, sl, #0
   1448c:	beq	14328 <g_boxed_type_register_static@plt+0x1bfc>
   14490:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   14494:	mov	r0, r5
   14498:	b	14328 <g_boxed_type_register_static@plt+0x1bfc>
   1449c:	cmp	sl, #0
   144a0:	bne	14534 <g_boxed_type_register_static@plt+0x1e08>
   144a4:	mov	r0, r7
   144a8:	b	14328 <g_boxed_type_register_static@plt+0x1bfc>
   144ac:	cmp	sl, #0
   144b0:	beq	144bc <g_boxed_type_register_static@plt+0x1d90>
   144b4:	mov	r0, sl
   144b8:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   144bc:	mov	r0, r6
   144c0:	movw	r1, #8660	; 0x21d4
   144c4:	movt	r1, #1
   144c8:	bl	12414 <g_slist_sort@plt>
   144cc:	bl	121bc <g_slist_reverse@plt>
   144d0:	subs	sl, r0, #0
   144d4:	beq	144a4 <g_boxed_type_register_static@plt+0x1d78>
   144d8:	add	r5, sp, #112	; 0x70
   144dc:	mov	r4, sl
   144e0:	ldr	r0, [r4]
   144e4:	bl	121ec <g_strdup@plt>
   144e8:	mov	r1, #0
   144ec:	mov	r2, #104	; 0x68
   144f0:	mov	r6, r0
   144f4:	mov	r0, r5
   144f8:	bl	12258 <memset@plt>
   144fc:	mov	r1, r6
   14500:	mov	r0, #3
   14504:	mov	r2, r5
   14508:	bl	124f8 <__xstat64@plt>
   1450c:	ldr	r3, [sp, #192]	; 0xc0
   14510:	cmp	r0, #0
   14514:	bne	14520 <g_boxed_type_register_static@plt+0x1df4>
   14518:	cmp	r7, r3
   1451c:	movlt	r7, r3
   14520:	mov	r0, r6
   14524:	bl	120c0 <g_free@plt>
   14528:	ldr	r4, [r4, #4]
   1452c:	cmp	r4, #0
   14530:	bne	144e0 <g_boxed_type_register_static@plt+0x1db4>
   14534:	mov	r0, sl
   14538:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   1453c:	mov	r0, r7
   14540:	b	14328 <g_boxed_type_register_static@plt+0x1bfc>
   14544:	bl	1251c <__stack_chk_fail@plt>
   14548:	andeq	r7, r1, r4, ror r5
   1454c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14550:	movw	r4, #37440	; 0x9240
   14554:	movt	r4, #2
   14558:	sub	sp, sp, #460	; 0x1cc
   1455c:	mov	r8, r0
   14560:	mov	r6, r1
   14564:	ldr	r3, [r4]
   14568:	add	r0, sp, #136	; 0x88
   1456c:	mov	r1, #0
   14570:	mov	r2, #104	; 0x68
   14574:	str	r3, [sp, #452]	; 0x1c4
   14578:	bl	12258 <memset@plt>
   1457c:	cmp	r8, #0
   14580:	mov	r3, #0
   14584:	str	r3, [sp, #28]
   14588:	beq	14658 <g_boxed_type_register_static@plt+0x1f2c>
   1458c:	mov	r1, r8
   14590:	add	r2, sp, #136	; 0x88
   14594:	mov	r0, #3
   14598:	bl	124f8 <__xstat64@plt>
   1459c:	add	r1, sp, #136	; 0x88
   145a0:	mov	r2, #104	; 0x68
   145a4:	mov	r5, r0
   145a8:	add	r0, sp, #32
   145ac:	bl	123f0 <memcpy@plt>
   145b0:	cmp	r5, #0
   145b4:	ldr	r9, [sp, #152]	; 0x98
   145b8:	bne	14640 <g_boxed_type_register_static@plt+0x1f14>
   145bc:	and	r3, r9, #61440	; 0xf000
   145c0:	cmp	r3, #16384	; 0x4000
   145c4:	bne	14640 <g_boxed_type_register_static@plt+0x1f14>
   145c8:	mov	r1, r5
   145cc:	mov	r2, #104	; 0x68
   145d0:	add	r0, sp, #240	; 0xf0
   145d4:	add	r7, sp, #28
   145d8:	bl	12258 <memset@plt>
   145dc:	mov	r0, r8
   145e0:	bl	123b4 <strlen@plt>
   145e4:	sub	r1, r0, #2
   145e8:	mov	r0, r8
   145ec:	bl	13308 <g_boxed_type_register_static@plt+0xbdc>
   145f0:	add	r2, sp, #240	; 0xf0
   145f4:	mov	r1, r0
   145f8:	mov	r5, r0
   145fc:	mov	r0, #3
   14600:	bl	124f8 <__xstat64@plt>
   14604:	ldr	sl, [sp, #320]	; 0x140
   14608:	cmp	r0, #0
   1460c:	beq	14670 <g_boxed_type_register_static@plt+0x1f44>
   14610:	mov	r0, r8
   14614:	mov	r1, r7
   14618:	bl	13890 <g_boxed_type_register_static@plt+0x1164>
   1461c:	ldr	r9, [sp, #28]
   14620:	cmp	r9, #0
   14624:	mov	r8, r0
   14628:	beq	146ac <g_boxed_type_register_static@plt+0x1f80>
   1462c:	mov	r0, r6
   14630:	mov	r1, r9
   14634:	bl	123e4 <g_propagate_error@plt>
   14638:	mov	r0, r5
   1463c:	bl	120c0 <g_free@plt>
   14640:	ldr	r2, [sp, #452]	; 0x1c4
   14644:	ldr	r3, [r4]
   14648:	cmp	r2, r3
   1464c:	bne	148b4 <g_boxed_type_register_static@plt+0x2188>
   14650:	add	sp, sp, #460	; 0x1cc
   14654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14658:	mov	r0, r8
   1465c:	movw	r2, #30284	; 0x764c
   14660:	ldr	r1, [pc, #656]	; 148f8 <g_boxed_type_register_static@plt+0x21cc>
   14664:	movt	r2, #1
   14668:	bl	12420 <g_return_if_fail_warning@plt>
   1466c:	b	14640 <g_boxed_type_register_static@plt+0x1f14>
   14670:	add	r1, sp, #32
   14674:	mov	r2, #104	; 0x68
   14678:	add	r0, sp, #344	; 0x158
   1467c:	str	r9, [sp, #48]	; 0x30
   14680:	bl	123f0 <memcpy@plt>
   14684:	add	r1, sp, #344	; 0x158
   14688:	mov	r2, r7
   1468c:	mov	r0, r8
   14690:	bl	142b0 <g_boxed_type_register_static@plt+0x1b84>
   14694:	ldr	r1, [sp, #28]
   14698:	cmp	r1, #0
   1469c:	beq	14780 <g_boxed_type_register_static@plt+0x2054>
   146a0:	mov	r0, r6
   146a4:	bl	123e4 <g_propagate_error@plt>
   146a8:	b	14638 <g_boxed_type_register_static@plt+0x1f0c>
   146ac:	mov	r0, r5
   146b0:	mov	r1, #1
   146b4:	mov	r2, r9
   146b8:	bl	12444 <open64@plt>
   146bc:	subs	sl, r0, #0
   146c0:	blt	1471c <g_boxed_type_register_static@plt+0x1ff0>
   146c4:	mov	r0, r8
   146c8:	mov	r1, r5
   146cc:	mov	r2, r9
   146d0:	mov	r3, r7
   146d4:	bl	16fd0 <g_boxed_type_register_static@plt+0x48a4>
   146d8:	ldr	fp, [sp, #28]
   146dc:	cmp	fp, #0
   146e0:	beq	14750 <g_boxed_type_register_static@plt+0x2024>
   146e4:	ldr	r1, [fp, #8]
   146e8:	movw	r0, #30740	; 0x7814
   146ec:	movt	r0, #1
   146f0:	str	r9, [sp, #28]
   146f4:	bl	12234 <g_printerr@plt>
   146f8:	mov	r0, fp
   146fc:	bl	125e8 <g_error_free@plt>
   14700:	mov	r0, sl
   14704:	bl	124c8 <close@plt>
   14708:	cmp	r8, #0
   1470c:	beq	14638 <g_boxed_type_register_static@plt+0x1f0c>
   14710:	mov	r0, r8
   14714:	bl	125d0 <g_hash_table_unref@plt>
   14718:	b	14638 <g_boxed_type_register_static@plt+0x1f0c>
   1471c:	bl	126f0 <__errno_location@plt>
   14720:	ldr	r0, [r0]
   14724:	cmp	r0, #2
   14728:	beq	148b8 <g_boxed_type_register_static@plt+0x218c>
   1472c:	bl	125c4 <g_strerror@plt>
   14730:	mov	r1, r5
   14734:	mov	r2, r0
   14738:	movw	r0, #30616	; 0x7798
   1473c:	movt	r0, #1
   14740:	bl	12234 <g_printerr@plt>
   14744:	cmp	r8, #0
   14748:	bne	14710 <g_boxed_type_register_static@plt+0x1fe4>
   1474c:	b	14638 <g_boxed_type_register_static@plt+0x1f0c>
   14750:	ldr	r1, [pc, #420]	; 148fc <g_boxed_type_register_static@plt+0x21d0>
   14754:	mov	r2, #8
   14758:	mov	r0, sl
   1475c:	bl	1230c <write@plt>
   14760:	mov	r0, sl
   14764:	bl	124c8 <close@plt>
   14768:	ldr	r1, [sp, #28]
   1476c:	cmp	r1, #0
   14770:	beq	1478c <g_boxed_type_register_static@plt+0x2060>
   14774:	mov	r0, r6
   14778:	bl	123e4 <g_propagate_error@plt>
   1477c:	b	14708 <g_boxed_type_register_static@plt+0x1fdc>
   14780:	cmp	sl, r0
   14784:	bgt	14638 <g_boxed_type_register_static@plt+0x1f0c>
   14788:	b	14610 <g_boxed_type_register_static@plt+0x1ee4>
   1478c:	mov	r0, #1
   14790:	mov	r1, #0
   14794:	mov	r2, r7
   14798:	bl	125a0 <g_bus_get_sync@plt>
   1479c:	ldr	r3, [sp, #28]
   147a0:	cmp	r3, #0
   147a4:	str	r3, [sp, #20]
   147a8:	mov	r9, r0
   147ac:	beq	147c4 <g_boxed_type_register_static@plt+0x2098>
   147b0:	mov	r0, r7
   147b4:	bl	121f8 <g_clear_error@plt>
   147b8:	mov	r3, #0
   147bc:	str	r3, [sp, #28]
   147c0:	b	14708 <g_boxed_type_register_static@plt+0x1fdc>
   147c4:	mov	r0, r5
   147c8:	bl	1215c <g_path_get_basename@plt>
   147cc:	ldr	r2, [sp, #20]
   147d0:	mov	r1, r0
   147d4:	mov	fp, r0
   147d8:	movw	r0, #30668	; 0x77cc
   147dc:	movt	r0, #1
   147e0:	bl	12228 <g_strconcat@plt>
   147e4:	ldr	r2, [sp, #20]
   147e8:	movw	r1, #29884	; 0x74bc
   147ec:	movt	r1, #1
   147f0:	mov	sl, r0
   147f4:	movw	r0, #30692	; 0x77e4
   147f8:	movt	r0, #1
   147fc:	bl	126c0 <g_variant_new@plt>
   14800:	str	r0, [sp, #16]
   14804:	bl	1212c <g_variant_ref_sink@plt>
   14808:	ldr	ip, [sp, #16]
   1480c:	movw	r0, #30720	; 0x7800
   14810:	str	r7, [sp, #8]
   14814:	movt	r0, #1
   14818:	ldr	r1, [sp, #20]
   1481c:	mov	r2, sl
   14820:	str	ip, [sp, #4]
   14824:	movw	r3, #30696	; 0x77e8
   14828:	str	r0, [sp]
   1482c:	movt	r3, #1
   14830:	mov	r0, r9
   14834:	bl	122dc <g_dbus_connection_emit_signal@plt>
   14838:	ldr	ip, [sp, #16]
   1483c:	cmp	ip, #0
   14840:	beq	1484c <g_boxed_type_register_static@plt+0x2120>
   14844:	mov	r0, ip
   14848:	bl	12540 <g_variant_unref@plt>
   1484c:	mov	r0, sl
   14850:	bl	120c0 <g_free@plt>
   14854:	mov	r0, fp
   14858:	bl	120c0 <g_free@plt>
   1485c:	ldr	r1, [sp, #28]
   14860:	cmp	r1, #0
   14864:	beq	1487c <g_boxed_type_register_static@plt+0x2150>
   14868:	cmp	r9, #0
   1486c:	beq	147b0 <g_boxed_type_register_static@plt+0x2084>
   14870:	mov	r0, r9
   14874:	bl	121b0 <g_object_unref@plt>
   14878:	b	147b0 <g_boxed_type_register_static@plt+0x2084>
   1487c:	mov	r0, r9
   14880:	mov	r2, r7
   14884:	bl	12120 <g_dbus_connection_flush_sync@plt>
   14888:	ldr	r3, [sp, #28]
   1488c:	cmp	r3, #0
   14890:	bne	14868 <g_boxed_type_register_static@plt+0x213c>
   14894:	cmp	r9, #0
   14898:	beq	14708 <g_boxed_type_register_static@plt+0x1fdc>
   1489c:	mov	r0, r9
   148a0:	bl	121b0 <g_object_unref@plt>
   148a4:	ldr	r1, [sp, #28]
   148a8:	cmp	r1, #0
   148ac:	bne	14774 <g_boxed_type_register_static@plt+0x2048>
   148b0:	b	14708 <g_boxed_type_register_static@plt+0x1fdc>
   148b4:	bl	1251c <__stack_chk_fail@plt>
   148b8:	mov	r0, r8
   148bc:	mov	r1, r5
   148c0:	mov	r2, r9
   148c4:	mov	r3, r7
   148c8:	bl	16fd0 <g_boxed_type_register_static@plt+0x48a4>
   148cc:	ldr	sl, [sp, #28]
   148d0:	cmp	sl, #0
   148d4:	beq	1478c <g_boxed_type_register_static@plt+0x2060>
   148d8:	ldr	r1, [sl, #8]
   148dc:	movw	r0, #30740	; 0x7814
   148e0:	movt	r0, #1
   148e4:	str	r9, [sp, #28]
   148e8:	bl	12234 <g_printerr@plt>
   148ec:	mov	r0, sl
   148f0:	bl	125e8 <g_error_free@plt>
   148f4:	b	14708 <g_boxed_type_register_static@plt+0x1fdc>
   148f8:	muleq	r1, r4, r5
   148fc:	andeq	r7, r1, r8, lsl #11
   14900:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14904:	movw	sl, #37440	; 0x9240
   14908:	movt	sl, #2
   1490c:	sub	sp, sp, #8
   14910:	cmp	r0, #0
   14914:	mov	r2, #0
   14918:	ldr	r3, [sl]
   1491c:	mov	r8, r1
   14920:	str	r2, [sp]
   14924:	str	r3, [sp, #4]
   14928:	beq	14a18 <g_boxed_type_register_static@plt+0x22ec>
   1492c:	mov	r1, #16384	; 0x4000
   14930:	mov	r2, sp
   14934:	bl	134d0 <g_boxed_type_register_static@plt+0xda4>
   14938:	ldr	r1, [sp]
   1493c:	cmp	r1, #0
   14940:	mov	r7, r0
   14944:	beq	14968 <g_boxed_type_register_static@plt+0x223c>
   14948:	mov	r0, r8
   1494c:	bl	123e4 <g_propagate_error@plt>
   14950:	ldr	r2, [sp, #4]
   14954:	ldr	r3, [sl]
   14958:	cmp	r2, r3
   1495c:	bne	14a2c <g_boxed_type_register_static@plt+0x2300>
   14960:	add	sp, sp, #8
   14964:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14968:	cmp	r0, #0
   1496c:	beq	14950 <g_boxed_type_register_static@plt+0x2224>
   14970:	mov	r9, r1
   14974:	mov	r5, r0
   14978:	ldr	r0, [r5]
   1497c:	bl	121ec <g_strdup@plt>
   14980:	movw	r1, #30756	; 0x7824
   14984:	movt	r1, #1
   14988:	mov	r4, r0
   1498c:	bl	125f4 <g_str_has_suffix@plt>
   14990:	cmp	r0, #0
   14994:	beq	149f8 <g_boxed_type_register_static@plt+0x22cc>
   14998:	mov	r0, r4
   1499c:	mov	r1, sp
   149a0:	bl	1454c <g_boxed_type_register_static@plt+0x1e20>
   149a4:	ldr	r6, [sp]
   149a8:	cmp	r6, #0
   149ac:	beq	149f8 <g_boxed_type_register_static@plt+0x22cc>
   149b0:	mov	r1, r4
   149b4:	ldr	r2, [r6, #8]
   149b8:	movw	r0, #30760	; 0x7828
   149bc:	movt	r0, #1
   149c0:	str	r9, [sp]
   149c4:	bl	12234 <g_printerr@plt>
   149c8:	mov	r0, r6
   149cc:	bl	125e8 <g_error_free@plt>
   149d0:	ldr	r1, [sp]
   149d4:	cmp	r1, #0
   149d8:	beq	149f8 <g_boxed_type_register_static@plt+0x22cc>
   149dc:	mov	r0, r8
   149e0:	bl	123e4 <g_propagate_error@plt>
   149e4:	mov	r0, r4
   149e8:	bl	120c0 <g_free@plt>
   149ec:	mov	r0, r7
   149f0:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   149f4:	b	14950 <g_boxed_type_register_static@plt+0x2224>
   149f8:	mov	r0, r4
   149fc:	bl	120c0 <g_free@plt>
   14a00:	ldr	r5, [r5, #4]
   14a04:	cmp	r5, #0
   14a08:	bne	14978 <g_boxed_type_register_static@plt+0x224c>
   14a0c:	mov	r0, r7
   14a10:	bl	13240 <g_boxed_type_register_static@plt+0xb14>
   14a14:	b	14950 <g_boxed_type_register_static@plt+0x2224>
   14a18:	movw	r2, #30284	; 0x764c
   14a1c:	ldr	r1, [pc, #12]	; 14a30 <g_boxed_type_register_static@plt+0x2304>
   14a20:	movt	r2, #1
   14a24:	bl	12420 <g_return_if_fail_warning@plt>
   14a28:	b	14950 <g_boxed_type_register_static@plt+0x2224>
   14a2c:	bl	1251c <__stack_chk_fail@plt>
   14a30:			; <UNDEFINED> instruction: 0x000175b0
   14a34:	push	{r4, r5, r6, r7, lr}
   14a38:	movw	r4, #37440	; 0x9240
   14a3c:	movt	r4, #2
   14a40:	ldr	r3, [r0, #8]
   14a44:	sub	sp, sp, #12
   14a48:	mov	ip, #0
   14a4c:	ldr	r1, [r4]
   14a50:	cmp	r3, ip
   14a54:	mov	r5, r0
   14a58:	mov	r6, r2
   14a5c:	str	ip, [sp]
   14a60:	str	r1, [sp, #4]
   14a64:	beq	14ab8 <g_boxed_type_register_static@plt+0x238c>
   14a68:	ldr	r0, [r0, #12]
   14a6c:	cmp	r0, ip
   14a70:	beq	14ab8 <g_boxed_type_register_static@plt+0x238c>
   14a74:	ldr	r2, [r5, #16]
   14a78:	cmp	r2, ip
   14a7c:	bne	14ab8 <g_boxed_type_register_static@plt+0x238c>
   14a80:	mov	r1, sp
   14a84:	bl	13890 <g_boxed_type_register_static@plt+0x1164>
   14a88:	ldr	r2, [sp]
   14a8c:	cmp	r2, #0
   14a90:	mov	r7, r0
   14a94:	beq	14af8 <g_boxed_type_register_static@plt+0x23cc>
   14a98:	ldr	r1, [r2, #8]
   14a9c:	movw	r0, #30820	; 0x7864
   14aa0:	movt	r0, #1
   14aa4:	mov	r3, #0
   14aa8:	str	r3, [sp]
   14aac:	bl	12234 <g_printerr@plt>
   14ab0:	mov	r0, #1
   14ab4:	bl	126cc <exit@plt>
   14ab8:	bl	121c8 <g_option_error_quark@plt>
   14abc:	mov	r1, #2
   14ac0:	movw	r2, #30784	; 0x7840
   14ac4:	movt	r2, #1
   14ac8:	bl	123cc <g_error_new_literal@plt>
   14acc:	mov	r3, r0
   14ad0:	mov	r1, r0
   14ad4:	mov	r0, r6
   14ad8:	str	r3, [sp]
   14adc:	bl	123e4 <g_propagate_error@plt>
   14ae0:	ldr	r2, [sp, #4]
   14ae4:	ldr	r3, [r4]
   14ae8:	cmp	r2, r3
   14aec:	bne	14b50 <g_boxed_type_register_static@plt+0x2424>
   14af0:	add	sp, sp, #12
   14af4:	pop	{r4, r5, r6, r7, pc}
   14af8:	ldr	r1, [r5, #8]
   14afc:	mov	r3, sp
   14b00:	bl	16fd0 <g_boxed_type_register_static@plt+0x48a4>
   14b04:	ldr	r2, [sp]
   14b08:	cmp	r2, #0
   14b0c:	beq	14b28 <g_boxed_type_register_static@plt+0x23fc>
   14b10:	cmp	r7, #0
   14b14:	beq	14a98 <g_boxed_type_register_static@plt+0x236c>
   14b18:	mov	r0, r7
   14b1c:	bl	125d0 <g_hash_table_unref@plt>
   14b20:	ldr	r2, [sp]
   14b24:	b	14a98 <g_boxed_type_register_static@plt+0x236c>
   14b28:	cmp	r7, #0
   14b2c:	beq	14ae0 <g_boxed_type_register_static@plt+0x23b4>
   14b30:	mov	r0, r7
   14b34:	bl	125d0 <g_hash_table_unref@plt>
   14b38:	ldr	r1, [sp]
   14b3c:	cmp	r1, #0
   14b40:	beq	14ae0 <g_boxed_type_register_static@plt+0x23b4>
   14b44:	mov	r0, r6
   14b48:	bl	123e4 <g_propagate_error@plt>
   14b4c:	b	14ae0 <g_boxed_type_register_static@plt+0x23b4>
   14b50:	bl	1251c <__stack_chk_fail@plt>
   14b54:	push	{r4, r5, lr}
   14b58:	movw	r4, #37440	; 0x9240
   14b5c:	movt	r4, #2
   14b60:	sub	sp, sp, #12
   14b64:	add	r1, sp, #8
   14b68:	mov	ip, #0
   14b6c:	ldr	r3, [r4]
   14b70:	movw	r0, #30824	; 0x7868
   14b74:	str	ip, [r1, #-8]!
   14b78:	movt	r0, #1
   14b7c:	mov	r1, sp
   14b80:	mov	r5, r2
   14b84:	str	r3, [sp, #4]
   14b88:	bl	14900 <g_boxed_type_register_static@plt+0x21d4>
   14b8c:	ldr	r1, [sp]
   14b90:	cmp	r1, #0
   14b94:	beq	14ba0 <g_boxed_type_register_static@plt+0x2474>
   14b98:	mov	r0, r5
   14b9c:	bl	123e4 <g_propagate_error@plt>
   14ba0:	ldr	r2, [sp, #4]
   14ba4:	ldr	r3, [r4]
   14ba8:	cmp	r2, r3
   14bac:	bne	14bb8 <g_boxed_type_register_static@plt+0x248c>
   14bb0:	add	sp, sp, #12
   14bb4:	pop	{r4, r5, pc}
   14bb8:	bl	1251c <__stack_chk_fail@plt>
   14bbc:	mov	r2, r3
   14bc0:	b	12d80 <g_boxed_type_register_static@plt+0x654>
   14bc4:	mov	r2, r3
   14bc8:	b	12b74 <g_boxed_type_register_static@plt+0x448>
   14bcc:	mov	r2, r3
   14bd0:	b	14b54 <g_boxed_type_register_static@plt+0x2428>
   14bd4:	mov	r2, r3
   14bd8:	b	14a34 <g_boxed_type_register_static@plt+0x2308>
   14bdc:	push	{r3, r4, r5, lr}
   14be0:	subs	r5, r0, #0
   14be4:	mov	r4, r1
   14be8:	beq	14c04 <g_boxed_type_register_static@plt+0x24d8>
   14bec:	cmp	r1, #0
   14bf0:	beq	14c20 <g_boxed_type_register_static@plt+0x24f4>
   14bf4:	bl	124b0 <strstr@plt>
   14bf8:	adds	r0, r0, #0
   14bfc:	movne	r0, #1
   14c00:	pop	{r3, r4, r5, pc}
   14c04:	movw	r1, #30840	; 0x7878
   14c08:	movw	r2, #29932	; 0x74ec
   14c0c:	movt	r1, #1
   14c10:	movt	r2, #1
   14c14:	bl	12420 <g_return_if_fail_warning@plt>
   14c18:	mov	r0, r5
   14c1c:	pop	{r3, r4, r5, pc}
   14c20:	mov	r0, r4
   14c24:	movw	r1, #30840	; 0x7878
   14c28:	movw	r2, #30140	; 0x75bc
   14c2c:	movt	r1, #1
   14c30:	movt	r2, #1
   14c34:	bl	12420 <g_return_if_fail_warning@plt>
   14c38:	mov	r0, r4
   14c3c:	pop	{r3, r4, r5, pc}
   14c40:	cmp	r0, #0
   14c44:	push	{r4, r5, r6, lr}
   14c48:	mov	r6, r1
   14c4c:	popeq	{r4, r5, r6, pc}
   14c50:	cmp	r1, #0
   14c54:	pople	{r4, r5, r6, pc}
   14c58:	sub	r5, r0, #4
   14c5c:	mov	r4, #0
   14c60:	ldr	r0, [r5, #4]!
   14c64:	add	r4, r4, #1
   14c68:	cmp	r0, #0
   14c6c:	beq	14c74 <g_boxed_type_register_static@plt+0x2548>
   14c70:	bl	120c0 <g_free@plt>
   14c74:	cmp	r4, r6
   14c78:	bne	14c60 <g_boxed_type_register_static@plt+0x2534>
   14c7c:	pop	{r4, r5, r6, pc}
   14c80:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14c84:	mov	r8, r0
   14c88:	movw	r0, #32120	; 0x7d78
   14c8c:	movt	r0, #1
   14c90:	mov	r7, r1
   14c94:	bl	12288 <g_string_new@plt>
   14c98:	cmp	r7, #0
   14c9c:	moveq	r6, r7
   14ca0:	mov	r5, r0
   14ca4:	beq	14cb4 <g_boxed_type_register_static@plt+0x2588>
   14ca8:	mov	r0, r7
   14cac:	bl	12498 <g_quark_from_string@plt>
   14cb0:	mov	r6, r0
   14cb4:	movw	r4, #37456	; 0x9250
   14cb8:	movt	r4, #2
   14cbc:	ldr	r0, [r4]
   14cc0:	cmp	r0, #0
   14cc4:	movne	r3, r0
   14cc8:	beq	14f2c <g_boxed_type_register_static@plt+0x2800>
   14ccc:	cmp	r6, r3
   14cd0:	beq	14f40 <g_boxed_type_register_static@plt+0x2814>
   14cd4:	ldr	r3, [r4, #4]
   14cd8:	movw	r9, #37456	; 0x9250
   14cdc:	movt	r9, #2
   14ce0:	cmp	r3, #0
   14ce4:	beq	15038 <g_boxed_type_register_static@plt+0x290c>
   14ce8:	cmp	r6, r3
   14cec:	beq	1514c <g_boxed_type_register_static@plt+0x2a20>
   14cf0:	ldr	r3, [r4, #8]
   14cf4:	movw	r9, #37456	; 0x9250
   14cf8:	movt	r9, #2
   14cfc:	cmp	r3, #0
   14d00:	beq	15050 <g_boxed_type_register_static@plt+0x2924>
   14d04:	cmp	r6, r3
   14d08:	beq	15198 <g_boxed_type_register_static@plt+0x2a6c>
   14d0c:	ldr	r3, [r4, #12]
   14d10:	movw	r9, #37456	; 0x9250
   14d14:	movt	r9, #2
   14d18:	cmp	r3, #0
   14d1c:	beq	15068 <g_boxed_type_register_static@plt+0x293c>
   14d20:	cmp	r6, r3
   14d24:	movweq	r0, #31068	; 0x795c
   14d28:	movteq	r0, #1
   14d2c:	beq	14e58 <g_boxed_type_register_static@plt+0x272c>
   14d30:	ldr	r3, [r4, #16]
   14d34:	movw	r9, #37456	; 0x9250
   14d38:	movt	r9, #2
   14d3c:	cmp	r3, #0
   14d40:	beq	15104 <g_boxed_type_register_static@plt+0x29d8>
   14d44:	cmp	r6, r3
   14d48:	movweq	r0, #31128	; 0x7998
   14d4c:	movteq	r0, #1
   14d50:	beq	14e58 <g_boxed_type_register_static@plt+0x272c>
   14d54:	ldr	r3, [r4, #20]
   14d58:	movw	r9, #37456	; 0x9250
   14d5c:	movt	r9, #2
   14d60:	cmp	r3, #0
   14d64:	beq	1511c <g_boxed_type_register_static@plt+0x29f0>
   14d68:	cmp	r6, r3
   14d6c:	beq	15228 <g_boxed_type_register_static@plt+0x2afc>
   14d70:	ldr	r3, [r4, #24]
   14d74:	movw	r9, #37456	; 0x9250
   14d78:	movt	r9, #2
   14d7c:	cmp	r3, #0
   14d80:	beq	15134 <g_boxed_type_register_static@plt+0x2a08>
   14d84:	cmp	r6, r3
   14d88:	beq	152a8 <g_boxed_type_register_static@plt+0x2b7c>
   14d8c:	ldr	r3, [r4, #28]
   14d90:	movw	r9, #37456	; 0x9250
   14d94:	movt	r9, #2
   14d98:	cmp	r3, #0
   14d9c:	beq	15180 <g_boxed_type_register_static@plt+0x2a54>
   14da0:	cmp	r6, r3
   14da4:	beq	152dc <g_boxed_type_register_static@plt+0x2bb0>
   14da8:	ldr	r3, [r4, #32]
   14dac:	movw	r9, #37456	; 0x9250
   14db0:	movt	r9, #2
   14db4:	cmp	r3, #0
   14db8:	beq	15090 <g_boxed_type_register_static@plt+0x2964>
   14dbc:	cmp	r6, r3
   14dc0:	beq	15310 <g_boxed_type_register_static@plt+0x2be4>
   14dc4:	ldr	r3, [r4, #36]	; 0x24
   14dc8:	movw	r9, #37456	; 0x9250
   14dcc:	movt	r9, #2
   14dd0:	cmp	r3, #0
   14dd4:	beq	150ec <g_boxed_type_register_static@plt+0x29c0>
   14dd8:	cmp	r6, r3
   14ddc:	beq	1525c <g_boxed_type_register_static@plt+0x2b30>
   14de0:	ldr	r3, [r4, #40]	; 0x28
   14de4:	movw	r9, #37456	; 0x9250
   14de8:	movt	r9, #2
   14dec:	cmp	r3, #0
   14df0:	beq	15210 <g_boxed_type_register_static@plt+0x2ae4>
   14df4:	cmp	r6, r3
   14df8:	movweq	r0, #31440	; 0x7ad0
   14dfc:	movteq	r0, #1
   14e00:	beq	14e58 <g_boxed_type_register_static@plt+0x272c>
   14e04:	ldr	r3, [r4, #44]	; 0x2c
   14e08:	movw	r4, #37456	; 0x9250
   14e0c:	movt	r4, #2
   14e10:	cmp	r3, #0
   14e14:	beq	15290 <g_boxed_type_register_static@plt+0x2b64>
   14e18:	cmp	r6, r3
   14e1c:	beq	14e50 <g_boxed_type_register_static@plt+0x2724>
   14e20:	mov	r2, r7
   14e24:	movw	r1, #31516	; 0x7b1c
   14e28:	mov	r0, r5
   14e2c:	movt	r1, #1
   14e30:	bl	12684 <g_string_append_printf@plt>
   14e34:	mov	r4, #0
   14e38:	mov	r6, r4
   14e3c:	movw	r1, #31540	; 0x7b34
   14e40:	mov	r0, r5
   14e44:	movt	r1, #1
   14e48:	bl	12678 <g_string_append@plt>
   14e4c:	b	14eec <g_boxed_type_register_static@plt+0x27c0>
   14e50:	movw	r0, #31484	; 0x7afc
   14e54:	movt	r0, #1
   14e58:	bl	121ec <g_strdup@plt>
   14e5c:	mov	r6, r0
   14e60:	mov	r0, #0
   14e64:	bl	120c0 <g_free@plt>
   14e68:	movw	r0, #31108	; 0x7984
   14e6c:	movt	r0, #1
   14e70:	bl	121ec <g_strdup@plt>
   14e74:	mov	r4, r0
   14e78:	mov	r0, #0
   14e7c:	bl	120c0 <g_free@plt>
   14e80:	cmp	r7, #0
   14e84:	beq	14e3c <g_boxed_type_register_static@plt+0x2710>
   14e88:	movw	r1, #32124	; 0x7d7c
   14e8c:	mov	r0, r5
   14e90:	movt	r1, #1
   14e94:	bl	12678 <g_string_append@plt>
   14e98:	mov	r3, r4
   14e9c:	mov	r0, r5
   14ea0:	mov	r2, r7
   14ea4:	movw	r1, #32132	; 0x7d84
   14ea8:	movt	r1, #1
   14eac:	bl	12684 <g_string_append_printf@plt>
   14eb0:	mov	r0, r5
   14eb4:	mov	r2, r6
   14eb8:	movw	r1, #32148	; 0x7d94
   14ebc:	movt	r1, #1
   14ec0:	bl	12684 <g_string_append_printf@plt>
   14ec4:	mov	r0, r4
   14ec8:	movw	r1, #32120	; 0x7d78
   14ecc:	movt	r1, #1
   14ed0:	bl	121d4 <g_strcmp0@plt>
   14ed4:	cmp	r0, #0
   14ed8:	bne	14f4c <g_boxed_type_register_static@plt+0x2820>
   14edc:	movw	r1, #32316	; 0x7e3c
   14ee0:	mov	r0, r5
   14ee4:	movt	r1, #1
   14ee8:	bl	12678 <g_string_append@plt>
   14eec:	cmp	r8, #0
   14ef0:	movw	r0, #30420	; 0x76d4
   14ef4:	ldr	r1, [r5]
   14ef8:	movt	r0, #1
   14efc:	beq	14f24 <g_boxed_type_register_static@plt+0x27f8>
   14f00:	bl	12174 <g_print@plt>
   14f04:	mov	r0, r4
   14f08:	bl	120c0 <g_free@plt>
   14f0c:	mov	r0, r6
   14f10:	bl	120c0 <g_free@plt>
   14f14:	mov	r0, r5
   14f18:	mov	r1, #1
   14f1c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   14f20:	b	12354 <g_string_free@plt>
   14f24:	bl	12234 <g_printerr@plt>
   14f28:	b	14f04 <g_boxed_type_register_static@plt+0x27d8>
   14f2c:	bl	1248c <g_quark_from_static_string@plt>
   14f30:	mov	r3, r0
   14f34:	cmp	r6, r3
   14f38:	str	r0, [r4]
   14f3c:	bne	14cd4 <g_boxed_type_register_static@plt+0x25a8>
   14f40:	mov	r4, #0
   14f44:	mov	r6, r4
   14f48:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   14f4c:	movw	r1, #32156	; 0x7d9c
   14f50:	mov	r0, r5
   14f54:	movt	r1, #1
   14f58:	bl	12678 <g_string_append@plt>
   14f5c:	mov	r0, r4
   14f60:	movw	r1, #30972	; 0x78fc
   14f64:	movt	r1, #1
   14f68:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   14f6c:	cmp	r0, #0
   14f70:	bne	150d8 <g_boxed_type_register_static@plt+0x29ac>
   14f74:	movw	r1, #31424	; 0x7ac0
   14f78:	mov	r0, r4
   14f7c:	movt	r1, #1
   14f80:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   14f84:	cmp	r0, #0
   14f88:	bne	150c4 <g_boxed_type_register_static@plt+0x2998>
   14f8c:	movw	r1, #31424	; 0x7ac0
   14f90:	mov	r0, r4
   14f94:	movt	r1, #1
   14f98:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   14f9c:	cmp	r0, #0
   14fa0:	beq	150a8 <g_boxed_type_register_static@plt+0x297c>
   14fa4:	movw	r1, #32256	; 0x7e00
   14fa8:	mov	r0, r5
   14fac:	movt	r1, #1
   14fb0:	bl	12678 <g_string_append@plt>
   14fb4:	movw	r1, #31424	; 0x7ac0
   14fb8:	mov	r0, r4
   14fbc:	movt	r1, #1
   14fc0:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   14fc4:	cmp	r0, #0
   14fc8:	beq	151f4 <g_boxed_type_register_static@plt+0x2ac8>
   14fcc:	movw	r1, #32328	; 0x7e48
   14fd0:	mov	r0, r5
   14fd4:	movt	r1, #1
   14fd8:	bl	12678 <g_string_append@plt>
   14fdc:	movw	r1, #31196	; 0x79dc
   14fe0:	mov	r0, r4
   14fe4:	movt	r1, #1
   14fe8:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   14fec:	cmp	r0, #0
   14ff0:	bne	151e0 <g_boxed_type_register_static@plt+0x2ab4>
   14ff4:	movw	r1, #32448	; 0x7ec0
   14ff8:	mov	r0, r4
   14ffc:	movt	r1, #1
   15000:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   15004:	cmp	r0, #0
   15008:	bne	151cc <g_boxed_type_register_static@plt+0x2aa0>
   1500c:	movw	r1, #32512	; 0x7f00
   15010:	mov	r0, r4
   15014:	movt	r1, #1
   15018:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   1501c:	cmp	r0, #0
   15020:	beq	14edc <g_boxed_type_register_static@plt+0x27b0>
   15024:	movw	r1, #32528	; 0x7f10
   15028:	mov	r0, r5
   1502c:	movt	r1, #1
   15030:	bl	12678 <g_string_append@plt>
   15034:	b	14edc <g_boxed_type_register_static@plt+0x27b0>
   15038:	movw	r0, #30952	; 0x78e8
   1503c:	movt	r0, #1
   15040:	bl	1248c <g_quark_from_static_string@plt>
   15044:	mov	r3, r0
   15048:	str	r0, [r9, #4]
   1504c:	b	14ce8 <g_boxed_type_register_static@plt+0x25bc>
   15050:	movw	r0, #30984	; 0x7908
   15054:	movt	r0, #1
   15058:	bl	1248c <g_quark_from_static_string@plt>
   1505c:	mov	r3, r0
   15060:	str	r0, [r9, #8]
   15064:	b	14d04 <g_boxed_type_register_static@plt+0x25d8>
   15068:	movw	r0, #31060	; 0x7954
   1506c:	movt	r0, #1
   15070:	bl	1248c <g_quark_from_static_string@plt>
   15074:	mov	r3, r0
   15078:	cmp	r6, r3
   1507c:	str	r0, [r9, #12]
   15080:	movweq	r0, #31068	; 0x795c
   15084:	movteq	r0, #1
   15088:	bne	14d30 <g_boxed_type_register_static@plt+0x2604>
   1508c:	b	14e58 <g_boxed_type_register_static@plt+0x272c>
   15090:	movw	r0, #31340	; 0x7a6c
   15094:	movt	r0, #1
   15098:	bl	1248c <g_quark_from_static_string@plt>
   1509c:	mov	r3, r0
   150a0:	str	r0, [r9, #32]
   150a4:	b	14dbc <g_boxed_type_register_static@plt+0x2690>
   150a8:	movw	r1, #32320	; 0x7e40
   150ac:	mov	r0, r4
   150b0:	movt	r1, #1
   150b4:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   150b8:	cmp	r0, #0
   150bc:	beq	14fb4 <g_boxed_type_register_static@plt+0x2888>
   150c0:	b	14fa4 <g_boxed_type_register_static@plt+0x2878>
   150c4:	movw	r1, #32220	; 0x7ddc
   150c8:	mov	r0, r5
   150cc:	movt	r1, #1
   150d0:	bl	12678 <g_string_append@plt>
   150d4:	b	14f8c <g_boxed_type_register_static@plt+0x2860>
   150d8:	movw	r1, #32168	; 0x7da8
   150dc:	mov	r0, r5
   150e0:	movt	r1, #1
   150e4:	bl	12678 <g_string_append@plt>
   150e8:	b	14f74 <g_boxed_type_register_static@plt+0x2848>
   150ec:	movw	r0, #31384	; 0x7a98
   150f0:	movt	r0, #1
   150f4:	bl	1248c <g_quark_from_static_string@plt>
   150f8:	mov	r3, r0
   150fc:	str	r0, [r9, #36]	; 0x24
   15100:	b	14dd8 <g_boxed_type_register_static@plt+0x26ac>
   15104:	movw	r0, #31116	; 0x798c
   15108:	movt	r0, #1
   1510c:	bl	1248c <g_quark_from_static_string@plt>
   15110:	mov	r3, r0
   15114:	str	r0, [r9, #16]
   15118:	b	14d44 <g_boxed_type_register_static@plt+0x2618>
   1511c:	movw	r0, #31156	; 0x79b4
   15120:	movt	r0, #1
   15124:	bl	1248c <g_quark_from_static_string@plt>
   15128:	mov	r3, r0
   1512c:	str	r0, [r9, #20]
   15130:	b	14d68 <g_boxed_type_register_static@plt+0x263c>
   15134:	movw	r0, #31204	; 0x79e4
   15138:	movt	r0, #1
   1513c:	bl	1248c <g_quark_from_static_string@plt>
   15140:	mov	r3, r0
   15144:	str	r0, [r9, #24]
   15148:	b	14d84 <g_boxed_type_register_static@plt+0x2658>
   1514c:	movw	r0, #30960	; 0x78f0
   15150:	movt	r0, #1
   15154:	bl	121ec <g_strdup@plt>
   15158:	mov	r6, r0
   1515c:	mov	r0, #0
   15160:	bl	120c0 <g_free@plt>
   15164:	movw	r0, #30972	; 0x78fc
   15168:	movt	r0, #1
   1516c:	bl	121ec <g_strdup@plt>
   15170:	mov	r4, r0
   15174:	mov	r0, #0
   15178:	bl	120c0 <g_free@plt>
   1517c:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   15180:	movw	r0, #31272	; 0x7a28
   15184:	movt	r0, #1
   15188:	bl	1248c <g_quark_from_static_string@plt>
   1518c:	mov	r3, r0
   15190:	str	r0, [r9, #28]
   15194:	b	14da0 <g_boxed_type_register_static@plt+0x2674>
   15198:	movw	r0, #30992	; 0x7910
   1519c:	movt	r0, #1
   151a0:	bl	121ec <g_strdup@plt>
   151a4:	mov	r6, r0
   151a8:	mov	r0, #0
   151ac:	bl	120c0 <g_free@plt>
   151b0:	movw	r0, #31048	; 0x7948
   151b4:	movt	r0, #1
   151b8:	bl	121ec <g_strdup@plt>
   151bc:	mov	r4, r0
   151c0:	mov	r0, #0
   151c4:	bl	120c0 <g_free@plt>
   151c8:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   151cc:	movw	r1, #32460	; 0x7ecc
   151d0:	mov	r0, r5
   151d4:	movt	r1, #1
   151d8:	bl	12678 <g_string_append@plt>
   151dc:	b	1500c <g_boxed_type_register_static@plt+0x28e0>
   151e0:	movw	r1, #32392	; 0x7e88
   151e4:	mov	r0, r5
   151e8:	movt	r1, #1
   151ec:	bl	12678 <g_string_append@plt>
   151f0:	b	14ff4 <g_boxed_type_register_static@plt+0x28c8>
   151f4:	movw	r1, #31108	; 0x7984
   151f8:	mov	r0, r4
   151fc:	movt	r1, #1
   15200:	bl	14bdc <g_boxed_type_register_static@plt+0x24b0>
   15204:	cmp	r0, #0
   15208:	beq	14fdc <g_boxed_type_register_static@plt+0x28b0>
   1520c:	b	14fcc <g_boxed_type_register_static@plt+0x28a0>
   15210:	movw	r0, #31432	; 0x7ac8
   15214:	movt	r0, #1
   15218:	bl	1248c <g_quark_from_static_string@plt>
   1521c:	mov	r3, r0
   15220:	str	r0, [r9, #40]	; 0x28
   15224:	b	14df4 <g_boxed_type_register_static@plt+0x26c8>
   15228:	movw	r0, #31164	; 0x79bc
   1522c:	movt	r0, #1
   15230:	bl	121ec <g_strdup@plt>
   15234:	mov	r6, r0
   15238:	mov	r0, #0
   1523c:	bl	120c0 <g_free@plt>
   15240:	movw	r0, #31192	; 0x79d8
   15244:	movt	r0, #1
   15248:	bl	121ec <g_strdup@plt>
   1524c:	mov	r4, r0
   15250:	mov	r0, #0
   15254:	bl	120c0 <g_free@plt>
   15258:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   1525c:	movw	r0, #31392	; 0x7aa0
   15260:	movt	r0, #1
   15264:	bl	121ec <g_strdup@plt>
   15268:	mov	r6, r0
   1526c:	mov	r0, #0
   15270:	bl	120c0 <g_free@plt>
   15274:	movw	r0, #31424	; 0x7ac0
   15278:	movt	r0, #1
   1527c:	bl	121ec <g_strdup@plt>
   15280:	mov	r4, r0
   15284:	mov	r0, #0
   15288:	bl	120c0 <g_free@plt>
   1528c:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   15290:	movw	r0, #31476	; 0x7af4
   15294:	movt	r0, #1
   15298:	bl	1248c <g_quark_from_static_string@plt>
   1529c:	mov	r3, r0
   152a0:	str	r0, [r4, #44]	; 0x2c
   152a4:	b	14e18 <g_boxed_type_register_static@plt+0x26ec>
   152a8:	movw	r0, #31212	; 0x79ec
   152ac:	movt	r0, #1
   152b0:	bl	121ec <g_strdup@plt>
   152b4:	mov	r6, r0
   152b8:	mov	r0, #0
   152bc:	bl	120c0 <g_free@plt>
   152c0:	movw	r0, #31260	; 0x7a1c
   152c4:	movt	r0, #1
   152c8:	bl	121ec <g_strdup@plt>
   152cc:	mov	r4, r0
   152d0:	mov	r0, #0
   152d4:	bl	120c0 <g_free@plt>
   152d8:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   152dc:	movw	r0, #31280	; 0x7a30
   152e0:	movt	r0, #1
   152e4:	bl	121ec <g_strdup@plt>
   152e8:	mov	r6, r0
   152ec:	mov	r0, #0
   152f0:	bl	120c0 <g_free@plt>
   152f4:	movw	r0, #31320	; 0x7a58
   152f8:	movt	r0, #1
   152fc:	bl	121ec <g_strdup@plt>
   15300:	mov	r4, r0
   15304:	mov	r0, #0
   15308:	bl	120c0 <g_free@plt>
   1530c:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   15310:	movw	r0, #31348	; 0x7a74
   15314:	movt	r0, #1
   15318:	bl	121ec <g_strdup@plt>
   1531c:	mov	r6, r0
   15320:	mov	r0, #0
   15324:	bl	120c0 <g_free@plt>
   15328:	movw	r0, #32120	; 0x7d78
   1532c:	movt	r0, #1
   15330:	bl	121ec <g_strdup@plt>
   15334:	mov	r4, r0
   15338:	mov	r0, #0
   1533c:	bl	120c0 <g_free@plt>
   15340:	b	14e80 <g_boxed_type_register_static@plt+0x2754>
   15344:	ldr	r1, [r0, #8]
   15348:	mov	r0, #1
   1534c:	b	14c80 <g_boxed_type_register_static@plt+0x2554>
   15350:	ldr	r1, [r0, #8]
   15354:	mov	r0, #1
   15358:	b	14c80 <g_boxed_type_register_static@plt+0x2554>
   1535c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15360:	movw	r4, #37440	; 0x9240
   15364:	movt	r4, #2
   15368:	sub	sp, sp, #12
   1536c:	add	r5, sp, #8
   15370:	mov	r7, r0
   15374:	ldr	r3, [r4]
   15378:	mov	r8, r2
   1537c:	mov	r2, #0
   15380:	str	r2, [r5, #-8]!
   15384:	str	r3, [sp, #4]
   15388:	bl	12264 <dconf_client_new@plt>
   1538c:	movw	r1, #32592	; 0x7f50
   15390:	movt	r1, #1
   15394:	mov	r6, r0
   15398:	ldr	r0, [r7, #8]
   1539c:	bl	121d4 <g_strcmp0@plt>
   153a0:	cmp	r0, #0
   153a4:	moveq	r3, #12
   153a8:	movne	r3, #8
   153ac:	movne	r9, #0
   153b0:	moveq	r9, #1
   153b4:	ldr	r0, [r7, r3]
   153b8:	bl	121ec <g_strdup@plt>
   153bc:	mov	r1, sp
   153c0:	mov	r7, r0
   153c4:	bl	12408 <dconf_is_key@plt>
   153c8:	ldr	r1, [sp]
   153cc:	cmp	r1, #0
   153d0:	beq	1540c <g_boxed_type_register_static@plt+0x2ce0>
   153d4:	mov	r0, r8
   153d8:	bl	123e4 <g_propagate_error@plt>
   153dc:	mov	r0, r7
   153e0:	bl	120c0 <g_free@plt>
   153e4:	cmp	r6, #0
   153e8:	beq	153f4 <g_boxed_type_register_static@plt+0x2cc8>
   153ec:	mov	r0, r6
   153f0:	bl	121b0 <g_object_unref@plt>
   153f4:	ldr	r2, [sp, #4]
   153f8:	ldr	r3, [r4]
   153fc:	cmp	r2, r3
   15400:	bne	15468 <g_boxed_type_register_static@plt+0x2d3c>
   15404:	add	sp, sp, #12
   15408:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1540c:	mov	r3, r1
   15410:	mov	r2, r9
   15414:	mov	r0, r6
   15418:	mov	r1, r7
   1541c:	bl	124bc <dconf_client_read_full@plt>
   15420:	subs	r8, r0, #0
   15424:	beq	15454 <g_boxed_type_register_static@plt+0x2d28>
   15428:	mov	r1, #1
   1542c:	bl	1224c <g_variant_print@plt>
   15430:	mov	r1, r0
   15434:	mov	r5, r0
   15438:	movw	r0, #30820	; 0x7864
   1543c:	movt	r0, #1
   15440:	bl	12174 <g_print@plt>
   15444:	mov	r0, r5
   15448:	bl	120c0 <g_free@plt>
   1544c:	mov	r0, r8
   15450:	bl	12540 <g_variant_unref@plt>
   15454:	mov	r0, r7
   15458:	bl	120c0 <g_free@plt>
   1545c:	cmp	r6, #0
   15460:	bne	153ec <g_boxed_type_register_static@plt+0x2cc0>
   15464:	b	153f4 <g_boxed_type_register_static@plt+0x2cc8>
   15468:	bl	1251c <__stack_chk_fail@plt>
   1546c:	mov	r2, r3
   15470:	b	1535c <g_boxed_type_register_static@plt+0x2c30>
   15474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15478:	movw	r7, #37440	; 0x9240
   1547c:	movt	r7, #2
   15480:	sub	sp, sp, #20
   15484:	add	r4, sp, #16
   15488:	mov	r3, #0
   1548c:	ldr	r1, [r7]
   15490:	mov	r6, r2
   15494:	str	r3, [r4, #-8]!
   15498:	mov	r5, r0
   1549c:	str	r3, [sp, #4]
   154a0:	str	r1, [sp, #12]
   154a4:	bl	12264 <dconf_client_new@plt>
   154a8:	mov	r8, r0
   154ac:	ldr	r0, [r5, #8]
   154b0:	bl	121ec <g_strdup@plt>
   154b4:	mov	r1, r4
   154b8:	mov	r9, r0
   154bc:	bl	1218c <dconf_is_dir@plt>
   154c0:	ldr	r4, [sp, #8]
   154c4:	cmp	r4, #0
   154c8:	beq	15508 <g_boxed_type_register_static@plt+0x2ddc>
   154cc:	mov	r0, r6
   154d0:	mov	r1, r4
   154d4:	bl	123e4 <g_propagate_error@plt>
   154d8:	mov	r0, r9
   154dc:	bl	120c0 <g_free@plt>
   154e0:	cmp	r8, #0
   154e4:	beq	154f0 <g_boxed_type_register_static@plt+0x2dc4>
   154e8:	mov	r0, r8
   154ec:	bl	121b0 <g_object_unref@plt>
   154f0:	ldr	r2, [sp, #12]
   154f4:	ldr	r3, [r7]
   154f8:	cmp	r2, r3
   154fc:	bne	15588 <g_boxed_type_register_static@plt+0x2e5c>
   15500:	add	sp, sp, #20
   15504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15508:	mov	r0, r8
   1550c:	mov	r1, r9
   15510:	add	r2, sp, #4
   15514:	bl	12168 <dconf_client_list@plt>
   15518:	ldr	fp, [sp, #4]
   1551c:	cmp	fp, #0
   15520:	mov	sl, r0
   15524:	ble	15560 <g_boxed_type_register_static@plt+0x2e34>
   15528:	sub	r6, r0, #4
   1552c:	ldr	r0, [r6, #4]!
   15530:	add	r4, r4, #1
   15534:	bl	121ec <g_strdup@plt>
   15538:	mov	r1, r0
   1553c:	mov	r5, r0
   15540:	movw	r0, #30820	; 0x7864
   15544:	movt	r0, #1
   15548:	bl	12174 <g_print@plt>
   1554c:	mov	r0, r5
   15550:	bl	120c0 <g_free@plt>
   15554:	ldr	r3, [sp, #4]
   15558:	cmp	r3, r4
   1555c:	bgt	1552c <g_boxed_type_register_static@plt+0x2e00>
   15560:	mov	r1, fp
   15564:	mov	r0, sl
   15568:	bl	14c40 <g_boxed_type_register_static@plt+0x2514>
   1556c:	mov	r0, sl
   15570:	bl	120c0 <g_free@plt>
   15574:	mov	r0, r9
   15578:	bl	120c0 <g_free@plt>
   1557c:	cmp	r8, #0
   15580:	bne	154e8 <g_boxed_type_register_static@plt+0x2dbc>
   15584:	b	154f0 <g_boxed_type_register_static@plt+0x2dc4>
   15588:	bl	1251c <__stack_chk_fail@plt>
   1558c:	mov	r2, r3
   15590:	b	15474 <g_boxed_type_register_static@plt+0x2d48>
   15594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15598:	movw	r7, #37440	; 0x9240
   1559c:	movt	r7, #2
   155a0:	sub	sp, sp, #20
   155a4:	add	r4, sp, #16
   155a8:	mov	r3, #0
   155ac:	ldr	r1, [r7]
   155b0:	mov	r6, r2
   155b4:	str	r3, [r4, #-8]!
   155b8:	mov	r5, r0
   155bc:	str	r3, [sp, #4]
   155c0:	str	r1, [sp, #12]
   155c4:	bl	12264 <dconf_client_new@plt>
   155c8:	mov	r8, r0
   155cc:	ldr	r0, [r5, #8]
   155d0:	bl	121ec <g_strdup@plt>
   155d4:	mov	r1, r4
   155d8:	mov	r9, r0
   155dc:	bl	1218c <dconf_is_dir@plt>
   155e0:	ldr	r4, [sp, #8]
   155e4:	cmp	r4, #0
   155e8:	beq	15628 <g_boxed_type_register_static@plt+0x2efc>
   155ec:	mov	r0, r6
   155f0:	mov	r1, r4
   155f4:	bl	123e4 <g_propagate_error@plt>
   155f8:	mov	r0, r9
   155fc:	bl	120c0 <g_free@plt>
   15600:	cmp	r8, #0
   15604:	beq	15610 <g_boxed_type_register_static@plt+0x2ee4>
   15608:	mov	r0, r8
   1560c:	bl	121b0 <g_object_unref@plt>
   15610:	ldr	r2, [sp, #12]
   15614:	ldr	r3, [r7]
   15618:	cmp	r2, r3
   1561c:	bne	156a8 <g_boxed_type_register_static@plt+0x2f7c>
   15620:	add	sp, sp, #20
   15624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15628:	mov	r0, r8
   1562c:	mov	r1, r9
   15630:	add	r2, sp, #4
   15634:	bl	122d0 <dconf_client_list_locks@plt>
   15638:	ldr	fp, [sp, #4]
   1563c:	cmp	fp, #0
   15640:	mov	sl, r0
   15644:	ble	15680 <g_boxed_type_register_static@plt+0x2f54>
   15648:	sub	r6, r0, #4
   1564c:	ldr	r0, [r6, #4]!
   15650:	add	r4, r4, #1
   15654:	bl	121ec <g_strdup@plt>
   15658:	mov	r1, r0
   1565c:	mov	r5, r0
   15660:	movw	r0, #30820	; 0x7864
   15664:	movt	r0, #1
   15668:	bl	12174 <g_print@plt>
   1566c:	mov	r0, r5
   15670:	bl	120c0 <g_free@plt>
   15674:	ldr	r3, [sp, #4]
   15678:	cmp	r3, r4
   1567c:	bgt	1564c <g_boxed_type_register_static@plt+0x2f20>
   15680:	mov	r1, fp
   15684:	mov	r0, sl
   15688:	bl	14c40 <g_boxed_type_register_static@plt+0x2514>
   1568c:	mov	r0, sl
   15690:	bl	120c0 <g_free@plt>
   15694:	mov	r0, r9
   15698:	bl	120c0 <g_free@plt>
   1569c:	cmp	r8, #0
   156a0:	bne	15608 <g_boxed_type_register_static@plt+0x2edc>
   156a4:	b	15610 <g_boxed_type_register_static@plt+0x2ee4>
   156a8:	bl	1251c <__stack_chk_fail@plt>
   156ac:	mov	r2, r3
   156b0:	b	15594 <g_boxed_type_register_static@plt+0x2e68>
   156b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156b8:	movw	r4, #37440	; 0x9240
   156bc:	movt	r4, #2
   156c0:	sub	sp, sp, #16
   156c4:	add	r7, sp, #16
   156c8:	mov	r8, r0
   156cc:	ldr	r3, [r4]
   156d0:	mov	r9, r2
   156d4:	mov	r2, #0
   156d8:	str	r2, [r7, #-8]!
   156dc:	str	r3, [sp, #12]
   156e0:	bl	12264 <dconf_client_new@plt>
   156e4:	mov	r6, r0
   156e8:	ldr	r0, [r8, #8]
   156ec:	bl	121ec <g_strdup@plt>
   156f0:	mov	r5, r0
   156f4:	ldr	r0, [r8, #12]
   156f8:	bl	121ec <g_strdup@plt>
   156fc:	mov	r1, r7
   15700:	mov	r8, r0
   15704:	mov	r0, r5
   15708:	bl	12408 <dconf_is_key@plt>
   1570c:	ldr	r1, [sp, #8]
   15710:	cmp	r1, #0
   15714:	beq	15758 <g_boxed_type_register_static@plt+0x302c>
   15718:	mov	r0, r9
   1571c:	bl	123e4 <g_propagate_error@plt>
   15720:	mov	r0, r8
   15724:	bl	120c0 <g_free@plt>
   15728:	mov	r0, r5
   1572c:	bl	120c0 <g_free@plt>
   15730:	cmp	r6, #0
   15734:	beq	15740 <g_boxed_type_register_static@plt+0x3014>
   15738:	mov	r0, r6
   1573c:	bl	121b0 <g_object_unref@plt>
   15740:	ldr	r2, [sp, #12]
   15744:	ldr	r3, [r4]
   15748:	cmp	r2, r3
   1574c:	bne	157d0 <g_boxed_type_register_static@plt+0x30a4>
   15750:	add	sp, sp, #16
   15754:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15758:	mov	r0, r1
   1575c:	mov	r2, r1
   15760:	mov	r3, r1
   15764:	str	r7, [sp]
   15768:	mov	r1, r8
   1576c:	bl	124a4 <g_variant_parse@plt>
   15770:	ldr	r1, [sp, #8]
   15774:	cmp	r1, #0
   15778:	mov	sl, r0
   1577c:	bne	15718 <g_boxed_type_register_static@plt+0x2fec>
   15780:	str	r1, [sp]
   15784:	mov	r3, r1
   15788:	str	r7, [sp, #4]
   1578c:	mov	r1, r5
   15790:	mov	r0, r6
   15794:	mov	r2, sl
   15798:	bl	12378 <dconf_client_write_sync@plt>
   1579c:	ldr	r1, [sp, #8]
   157a0:	cmp	r1, #0
   157a4:	beq	157c4 <g_boxed_type_register_static@plt+0x3098>
   157a8:	mov	r0, r9
   157ac:	bl	123e4 <g_propagate_error@plt>
   157b0:	cmp	sl, #0
   157b4:	beq	15720 <g_boxed_type_register_static@plt+0x2ff4>
   157b8:	mov	r0, sl
   157bc:	bl	12540 <g_variant_unref@plt>
   157c0:	b	15720 <g_boxed_type_register_static@plt+0x2ff4>
   157c4:	cmp	sl, #0
   157c8:	bne	157b8 <g_boxed_type_register_static@plt+0x308c>
   157cc:	b	15720 <g_boxed_type_register_static@plt+0x2ff4>
   157d0:	bl	1251c <__stack_chk_fail@plt>
   157d4:	mov	r2, r3
   157d8:	b	156b4 <g_boxed_type_register_static@plt+0x2f88>
   157dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   157e0:	movw	r4, #37440	; 0x9240
   157e4:	movt	r4, #2
   157e8:	sub	sp, sp, #20
   157ec:	add	r5, sp, #16
   157f0:	mov	r7, r0
   157f4:	ldr	r3, [r4]
   157f8:	mov	r8, r2
   157fc:	mov	r2, #0
   15800:	str	r2, [r5, #-8]!
   15804:	str	r3, [sp, #12]
   15808:	bl	12264 <dconf_client_new@plt>
   1580c:	movw	r1, #32596	; 0x7f54
   15810:	movt	r1, #1
   15814:	mov	r6, r0
   15818:	ldr	r0, [r7, #8]
   1581c:	bl	121d4 <g_strcmp0@plt>
   15820:	cmp	r0, #0
   15824:	moveq	r3, #12
   15828:	movne	r3, #8
   1582c:	movne	r9, #0
   15830:	moveq	r9, #1
   15834:	ldr	r0, [r7, r3]
   15838:	bl	121ec <g_strdup@plt>
   1583c:	mov	r1, r5
   15840:	mov	r7, r0
   15844:	bl	123a8 <dconf_is_path@plt>
   15848:	ldr	r1, [sp, #8]
   1584c:	cmp	r1, #0
   15850:	beq	1588c <g_boxed_type_register_static@plt+0x3160>
   15854:	mov	r0, r8
   15858:	bl	123e4 <g_propagate_error@plt>
   1585c:	mov	r0, r7
   15860:	bl	120c0 <g_free@plt>
   15864:	cmp	r6, #0
   15868:	beq	15874 <g_boxed_type_register_static@plt+0x3148>
   1586c:	mov	r0, r6
   15870:	bl	121b0 <g_object_unref@plt>
   15874:	ldr	r2, [sp, #12]
   15878:	ldr	r3, [r4]
   1587c:	cmp	r2, r3
   15880:	bne	158f8 <g_boxed_type_register_static@plt+0x31cc>
   15884:	add	sp, sp, #20
   15888:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1588c:	mov	r0, r7
   15890:	bl	1218c <dconf_is_dir@plt>
   15894:	cmp	r0, #0
   15898:	beq	158cc <g_boxed_type_register_static@plt+0x31a0>
   1589c:	cmp	r9, #1
   158a0:	beq	158cc <g_boxed_type_register_static@plt+0x31a0>
   158a4:	bl	121c8 <g_option_error_quark@plt>
   158a8:	mov	r1, #2
   158ac:	movw	r2, #32600	; 0x7f58
   158b0:	movt	r2, #1
   158b4:	bl	123cc <g_error_new_literal@plt>
   158b8:	mov	r3, r0
   158bc:	mov	r1, r0
   158c0:	str	r3, [sp, #8]
   158c4:	mov	r0, r8
   158c8:	b	15858 <g_boxed_type_register_static@plt+0x312c>
   158cc:	mov	r3, #0
   158d0:	mov	r1, r7
   158d4:	str	r5, [sp, #4]
   158d8:	mov	r2, r3
   158dc:	str	r3, [sp]
   158e0:	mov	r0, r6
   158e4:	bl	12378 <dconf_client_write_sync@plt>
   158e8:	ldr	r1, [sp, #8]
   158ec:	cmp	r1, #0
   158f0:	bne	15854 <g_boxed_type_register_static@plt+0x3128>
   158f4:	b	1585c <g_boxed_type_register_static@plt+0x3130>
   158f8:	bl	1251c <__stack_chk_fail@plt>
   158fc:	mov	r2, r3
   15900:	b	157dc <g_boxed_type_register_static@plt+0x30b0>
   15904:	push	{r3, r4, r5, lr}
   15908:	subs	r5, r0, #0
   1590c:	mov	r4, r1
   15910:	beq	1597c <g_boxed_type_register_static@plt+0x3250>
   15914:	subs	r0, r1, #0
   15918:	beq	15990 <g_boxed_type_register_static@plt+0x3264>
   1591c:	mov	r1, #0
   15920:	bl	12408 <dconf_is_key@plt>
   15924:	cmp	r0, #0
   15928:	bne	15930 <g_boxed_type_register_static@plt+0x3204>
   1592c:	pop	{r3, r4, r5, pc}
   15930:	mov	r0, r5
   15934:	mov	r1, r4
   15938:	bl	12348 <dconf_client_read@plt>
   1593c:	subs	r5, r0, #0
   15940:	beq	159a4 <g_boxed_type_register_static@plt+0x3278>
   15944:	mov	r1, #1
   15948:	bl	1224c <g_variant_print@plt>
   1594c:	mov	r4, r0
   15950:	mov	r0, #0
   15954:	bl	120c0 <g_free@plt>
   15958:	mov	r1, r4
   1595c:	movw	r0, #32652	; 0x7f8c
   15960:	movt	r0, #1
   15964:	bl	12174 <g_print@plt>
   15968:	mov	r0, r4
   1596c:	bl	120c0 <g_free@plt>
   15970:	mov	r0, r5
   15974:	pop	{r3, r4, r5, lr}
   15978:	b	12540 <g_variant_unref@plt>
   1597c:	movw	r2, #29900	; 0x74cc
   15980:	ldr	r1, [pc, #80]	; 159d8 <g_boxed_type_register_static@plt+0x32ac>
   15984:	movt	r2, #1
   15988:	pop	{r3, r4, r5, lr}
   1598c:	b	12420 <g_return_if_fail_warning@plt>
   15990:	movw	r2, #32668	; 0x7f9c
   15994:	ldr	r1, [pc, #60]	; 159d8 <g_boxed_type_register_static@plt+0x32ac>
   15998:	movt	r2, #1
   1599c:	pop	{r3, r4, r5, lr}
   159a0:	b	12420 <g_return_if_fail_warning@plt>
   159a4:	movw	r0, #32660	; 0x7f94
   159a8:	movt	r0, #1
   159ac:	bl	121ec <g_strdup@plt>
   159b0:	mov	r4, r0
   159b4:	mov	r0, r5
   159b8:	bl	120c0 <g_free@plt>
   159bc:	mov	r1, r4
   159c0:	movw	r0, #32652	; 0x7f8c
   159c4:	movt	r0, #1
   159c8:	bl	12174 <g_print@plt>
   159cc:	mov	r0, r4
   159d0:	pop	{r3, r4, r5, lr}
   159d4:	b	120c0 <g_free@plt>
   159d8:	andeq	r7, r1, r8, lsl #17
   159dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159e0:	subs	sl, r0, #0
   159e4:	mov	r9, r1
   159e8:	mov	r8, r3
   159ec:	beq	15a70 <g_boxed_type_register_static@plt+0x3344>
   159f0:	cmp	r1, #0
   159f4:	beq	15a84 <g_boxed_type_register_static@plt+0x3358>
   159f8:	cmp	r3, #0
   159fc:	ble	15a60 <g_boxed_type_register_static@plt+0x3334>
   15a00:	sub	r7, r2, #4
   15a04:	mov	r5, #0
   15a08:	ldr	r0, [r7, #4]!
   15a0c:	add	r5, r5, #1
   15a10:	bl	121ec <g_strdup@plt>
   15a14:	mov	r2, #0
   15a18:	mov	r6, r0
   15a1c:	mov	r0, r9
   15a20:	mov	r1, r6
   15a24:	bl	12228 <g_strconcat@plt>
   15a28:	mov	r4, r0
   15a2c:	mov	r1, r0
   15a30:	movw	r0, #30820	; 0x7864
   15a34:	movt	r0, #1
   15a38:	bl	12174 <g_print@plt>
   15a3c:	mov	r1, r4
   15a40:	mov	r0, sl
   15a44:	bl	15904 <g_boxed_type_register_static@plt+0x31d8>
   15a48:	mov	r0, r4
   15a4c:	bl	120c0 <g_free@plt>
   15a50:	mov	r0, r6
   15a54:	bl	120c0 <g_free@plt>
   15a58:	cmp	r5, r8
   15a5c:	bne	15a08 <g_boxed_type_register_static@plt+0x32dc>
   15a60:	movw	r0, #32316	; 0x7e3c
   15a64:	movt	r0, #1
   15a68:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a6c:	b	12174 <g_print@plt>
   15a70:	movw	r2, #29900	; 0x74cc
   15a74:	ldr	r1, [pc, #32]	; 15a9c <g_boxed_type_register_static@plt+0x3370>
   15a78:	movt	r2, #1
   15a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a80:	b	12420 <g_return_if_fail_warning@plt>
   15a84:	mov	r0, r1
   15a88:	movw	r2, #32668	; 0x7f9c
   15a8c:	ldr	r1, [pc, #8]	; 15a9c <g_boxed_type_register_static@plt+0x3370>
   15a90:	movt	r2, #1
   15a94:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a98:	b	12420 <g_return_if_fail_warning@plt>
   15a9c:	muleq	r1, r4, r8
   15aa0:	cmp	r2, #0
   15aa4:	push	{r4, r5}
   15aa8:	mov	r5, r3
   15aac:	beq	15ae0 <g_boxed_type_register_static@plt+0x33b4>
   15ab0:	ldr	r3, [r2]
   15ab4:	cmp	r3, #0
   15ab8:	beq	15ad4 <g_boxed_type_register_static@plt+0x33a8>
   15abc:	mov	ip, r2
   15ac0:	mov	r3, #0
   15ac4:	ldr	r4, [ip, #4]!
   15ac8:	add	r3, r3, #1
   15acc:	cmp	r4, #0
   15ad0:	bne	15ac4 <g_boxed_type_register_static@plt+0x3398>
   15ad4:	str	r5, [sp, #8]
   15ad8:	pop	{r4, r5}
   15adc:	b	159dc <g_boxed_type_register_static@plt+0x32b0>
   15ae0:	str	r5, [sp, #8]
   15ae4:	mov	r3, r2
   15ae8:	pop	{r4, r5}
   15aec:	b	159dc <g_boxed_type_register_static@plt+0x32b0>
   15af0:	push	{r4, r5, r6, r7, r8, lr}
   15af4:	movw	r4, #37440	; 0x9240
   15af8:	movt	r4, #2
   15afc:	sub	sp, sp, #16
   15b00:	add	r5, sp, #16
   15b04:	mov	r1, #0
   15b08:	ldr	r3, [r4]
   15b0c:	mov	r7, r0
   15b10:	str	r1, [r5, #-8]!
   15b14:	mov	r8, r2
   15b18:	str	r3, [sp, #12]
   15b1c:	bl	12264 <dconf_client_new@plt>
   15b20:	mov	r6, r0
   15b24:	ldr	r0, [r7, #8]
   15b28:	bl	121ec <g_strdup@plt>
   15b2c:	mov	r1, r5
   15b30:	mov	r7, r0
   15b34:	bl	123a8 <dconf_is_path@plt>
   15b38:	ldr	r5, [sp, #8]
   15b3c:	cmp	r5, #0
   15b40:	beq	15b80 <g_boxed_type_register_static@plt+0x3454>
   15b44:	mov	r0, r8
   15b48:	mov	r1, r5
   15b4c:	bl	123e4 <g_propagate_error@plt>
   15b50:	mov	r0, r7
   15b54:	bl	120c0 <g_free@plt>
   15b58:	cmp	r6, #0
   15b5c:	beq	15b68 <g_boxed_type_register_static@plt+0x343c>
   15b60:	mov	r0, r6
   15b64:	bl	121b0 <g_object_unref@plt>
   15b68:	ldr	r2, [sp, #12]
   15b6c:	ldr	r3, [r4]
   15b70:	cmp	r2, r3
   15b74:	bne	15bd8 <g_boxed_type_register_static@plt+0x34ac>
   15b78:	add	sp, sp, #16
   15b7c:	pop	{r4, r5, r6, r7, r8, pc}
   15b80:	mov	r3, r5
   15b84:	str	r5, [sp]
   15b88:	str	r5, [sp, #4]
   15b8c:	movw	r1, #32684	; 0x7fac
   15b90:	movw	r2, #23200	; 0x5aa0
   15b94:	movt	r1, #1
   15b98:	movt	r2, #1
   15b9c:	mov	r0, r6
   15ba0:	bl	12504 <g_signal_connect_data@plt>
   15ba4:	mov	r0, r6
   15ba8:	mov	r1, r7
   15bac:	bl	120cc <dconf_client_watch_sync@plt>
   15bb0:	mov	r1, r5
   15bb4:	mov	r0, r5
   15bb8:	bl	122ac <g_main_loop_new@plt>
   15bbc:	mov	r5, r0
   15bc0:	bl	1263c <g_main_loop_run@plt>
   15bc4:	cmp	r5, #0
   15bc8:	beq	15b50 <g_boxed_type_register_static@plt+0x3424>
   15bcc:	mov	r0, r5
   15bd0:	bl	1257c <g_main_loop_unref@plt>
   15bd4:	b	15b50 <g_boxed_type_register_static@plt+0x3424>
   15bd8:	bl	1251c <__stack_chk_fail@plt>
   15bdc:	mov	r2, r3
   15be0:	b	15af0 <g_boxed_type_register_static@plt+0x33c4>
   15be4:	push	{r4, r5, r6, r7, r8, r9, lr}
   15be8:	movw	r4, #37440	; 0x9240
   15bec:	movt	r4, #2
   15bf0:	sub	sp, sp, #52	; 0x34
   15bf4:	add	r5, sp, #48	; 0x30
   15bf8:	mov	r1, #0
   15bfc:	ldr	r3, [r4]
   15c00:	mov	r7, r2
   15c04:	str	r1, [r5, #-8]!
   15c08:	mov	r0, #2
   15c0c:	mov	r2, r5
   15c10:	str	r3, [sp, #44]	; 0x2c
   15c14:	bl	125a0 <g_bus_get_sync@plt>
   15c18:	ldr	r1, [sp, #40]	; 0x28
   15c1c:	cmp	r1, #0
   15c20:	mov	r6, r0
   15c24:	beq	15c48 <g_boxed_type_register_static@plt+0x351c>
   15c28:	mov	r0, r7
   15c2c:	bl	123e4 <g_propagate_error@plt>
   15c30:	ldr	r2, [sp, #44]	; 0x2c
   15c34:	ldr	r3, [r4]
   15c38:	cmp	r2, r3
   15c3c:	bne	15d3c <g_boxed_type_register_static@plt+0x3610>
   15c40:	add	sp, sp, #52	; 0x34
   15c44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15c48:	movw	r0, #30692	; 0x77e4
   15c4c:	movt	r0, #1
   15c50:	str	r1, [sp, #36]	; 0x24
   15c54:	bl	12600 <g_variant_type_new@plt>
   15c58:	ldr	r1, [sp, #36]	; 0x24
   15c5c:	movw	r3, #32752	; 0x7ff0
   15c60:	str	r5, [sp, #24]
   15c64:	movt	r3, #1
   15c68:	movw	r2, #32708	; 0x7fc4
   15c6c:	str	r3, [sp]
   15c70:	str	r1, [sp, #4]
   15c74:	movt	r2, #1
   15c78:	str	r1, [sp, #12]
   15c7c:	movw	r3, #32724	; 0x7fd4
   15c80:	str	r1, [sp, #20]
   15c84:	movt	r3, #1
   15c88:	movw	r1, #32692	; 0x7fb4
   15c8c:	movt	r1, #1
   15c90:	mov	r9, r0
   15c94:	str	r0, [sp, #8]
   15c98:	mvn	r0, #0
   15c9c:	str	r0, [sp, #16]
   15ca0:	mov	r0, r6
   15ca4:	bl	1227c <g_dbus_connection_call_sync@plt>
   15ca8:	cmp	r9, #0
   15cac:	mov	r8, r0
   15cb0:	beq	15cbc <g_boxed_type_register_static@plt+0x3590>
   15cb4:	mov	r0, r9
   15cb8:	bl	1242c <g_variant_type_free@plt>
   15cbc:	ldr	r5, [sp, #40]	; 0x28
   15cc0:	cmp	r5, #0
   15cc4:	beq	15ce8 <g_boxed_type_register_static@plt+0x35bc>
   15cc8:	mov	r0, r7
   15ccc:	mov	r1, r5
   15cd0:	bl	123e4 <g_propagate_error@plt>
   15cd4:	cmp	r6, #0
   15cd8:	beq	15c30 <g_boxed_type_register_static@plt+0x3504>
   15cdc:	mov	r0, r6
   15ce0:	bl	121b0 <g_object_unref@plt>
   15ce4:	b	15c30 <g_boxed_type_register_static@plt+0x3504>
   15ce8:	mov	r1, r5
   15cec:	mov	r0, r8
   15cf0:	bl	12300 <g_variant_get_child_value@plt>
   15cf4:	mov	r1, r5
   15cf8:	mov	r7, r0
   15cfc:	bl	126fc <g_variant_get_string@plt>
   15d00:	mov	r1, r0
   15d04:	movw	r0, #30420	; 0x76d4
   15d08:	movt	r0, #1
   15d0c:	bl	12174 <g_print@plt>
   15d10:	cmp	r7, #0
   15d14:	beq	15d20 <g_boxed_type_register_static@plt+0x35f4>
   15d18:	mov	r0, r7
   15d1c:	bl	12540 <g_variant_unref@plt>
   15d20:	cmp	r8, #0
   15d24:	beq	15d30 <g_boxed_type_register_static@plt+0x3604>
   15d28:	mov	r0, r8
   15d2c:	bl	12540 <g_variant_unref@plt>
   15d30:	cmp	r6, #0
   15d34:	bne	15cdc <g_boxed_type_register_static@plt+0x35b0>
   15d38:	b	15c30 <g_boxed_type_register_static@plt+0x3504>
   15d3c:	bl	1251c <__stack_chk_fail@plt>
   15d40:	mov	r2, r3
   15d44:	b	15be4 <g_boxed_type_register_static@plt+0x34b8>
   15d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d4c:	movw	r5, #37440	; 0x9240
   15d50:	movt	r5, #2
   15d54:	sub	sp, sp, #36	; 0x24
   15d58:	mov	r4, r0
   15d5c:	ldr	r0, [r0, #8]
   15d60:	ldr	r3, [r5]
   15d64:	str	r3, [sp, #28]
   15d68:	bl	121ec <g_strdup@plt>
   15d6c:	mov	r9, r0
   15d70:	ldr	r0, [r4, #12]
   15d74:	bl	121ec <g_strdup@plt>
   15d78:	movw	r1, #32120	; 0x7d78
   15d7c:	movt	r1, #1
   15d80:	mov	r4, r0
   15d84:	bl	121d4 <g_strcmp0@plt>
   15d88:	cmp	r0, #0
   15d8c:	beq	15dcc <g_boxed_type_register_static@plt+0x36a0>
   15d90:	cmp	r4, #0
   15d94:	beq	15dec <g_boxed_type_register_static@plt+0x36c0>
   15d98:	ldrb	r3, [r4]
   15d9c:	cmp	r3, #47	; 0x2f
   15da0:	beq	15e04 <g_boxed_type_register_static@plt+0x36d8>
   15da4:	mov	r0, r4
   15da8:	bl	120c0 <g_free@plt>
   15dac:	mov	r0, r9
   15db0:	bl	120c0 <g_free@plt>
   15db4:	ldr	r2, [sp, #28]
   15db8:	ldr	r3, [r5]
   15dbc:	cmp	r2, r3
   15dc0:	bne	15fe0 <g_boxed_type_register_static@plt+0x38b4>
   15dc4:	add	sp, sp, #36	; 0x24
   15dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dcc:	movw	r0, #32760	; 0x7ff8
   15dd0:	movt	r0, #1
   15dd4:	bl	12174 <g_print@plt>
   15dd8:	mov	r0, r4
   15ddc:	bl	120c0 <g_free@plt>
   15de0:	mov	r0, r9
   15de4:	bl	120c0 <g_free@plt>
   15de8:	b	15db4 <g_boxed_type_register_static@plt+0x3688>
   15dec:	movw	r2, #29932	; 0x74ec
   15df0:	mov	r0, r4
   15df4:	movt	r2, #1
   15df8:	ldr	r1, [pc, #484]	; 15fe4 <g_boxed_type_register_static@plt+0x38b8>
   15dfc:	bl	12420 <g_return_if_fail_warning@plt>
   15e00:	b	15da4 <g_boxed_type_register_static@plt+0x3678>
   15e04:	mov	r6, #0
   15e08:	str	r6, [sp, #24]
   15e0c:	bl	12264 <dconf_client_new@plt>
   15e10:	ldrb	r2, [r4, #1]
   15e14:	cmp	r2, r6
   15e18:	str	r0, [sp, #12]
   15e1c:	beq	15fd4 <g_boxed_type_register_static@plt+0x38a8>
   15e20:	mov	r1, r6
   15e24:	mov	r3, #1
   15e28:	cmp	r2, #47	; 0x2f
   15e2c:	moveq	r1, r3
   15e30:	add	r3, r3, #1
   15e34:	ldrb	r2, [r4, r3]
   15e38:	cmp	r2, #0
   15e3c:	bne	15e28 <g_boxed_type_register_static@plt+0x36fc>
   15e40:	add	r7, r1, #1
   15e44:	mov	r6, r7
   15e48:	mov	r0, r4
   15e4c:	mov	r1, #0
   15e50:	mov	r2, r6
   15e54:	bl	12654 <memchr@plt>
   15e58:	cmp	r0, #0
   15e5c:	beq	15f9c <g_boxed_type_register_static@plt+0x3870>
   15e60:	subs	r0, r0, r4
   15e64:	bpl	15fb0 <g_boxed_type_register_static@plt+0x3884>
   15e68:	movw	r2, #30156	; 0x75cc
   15e6c:	mov	r0, #0
   15e70:	movt	r2, #1
   15e74:	ldr	r1, [pc, #364]	; 15fe8 <g_boxed_type_register_static@plt+0x38bc>
   15e78:	bl	12420 <g_return_if_fail_warning@plt>
   15e7c:	mov	fp, #0
   15e80:	ldr	r0, [sp, #12]
   15e84:	mov	r1, fp
   15e88:	add	r2, sp, #24
   15e8c:	bl	12168 <dconf_client_list@plt>
   15e90:	ldr	r3, [sp, #24]
   15e94:	cmp	r3, #0
   15e98:	str	r3, [sp, #16]
   15e9c:	str	r0, [sp, #8]
   15ea0:	ble	15f68 <g_boxed_type_register_static@plt+0x383c>
   15ea4:	movw	r3, #30980	; 0x7904
   15ea8:	movw	r2, #32120	; 0x7d78
   15eac:	movt	r3, #1
   15eb0:	movt	r2, #1
   15eb4:	str	r2, [sp, #4]
   15eb8:	mov	r7, #0
   15ebc:	ldr	r2, [sp, #8]
   15ec0:	str	r5, [sp, #20]
   15ec4:	mov	r5, r3
   15ec8:	sub	sl, r2, #4
   15ecc:	b	15ef0 <g_boxed_type_register_static@plt+0x37c4>
   15ed0:	mov	r0, r8
   15ed4:	add	r7, r7, #1
   15ed8:	bl	120c0 <g_free@plt>
   15edc:	mov	r0, r6
   15ee0:	bl	120c0 <g_free@plt>
   15ee4:	ldr	r3, [sp, #24]
   15ee8:	cmp	r3, r7
   15eec:	ble	15f64 <g_boxed_type_register_static@plt+0x3838>
   15ef0:	ldr	r0, [sl, #4]!
   15ef4:	bl	121ec <g_strdup@plt>
   15ef8:	mov	r2, #0
   15efc:	mov	r6, r0
   15f00:	mov	r0, fp
   15f04:	mov	r1, r6
   15f08:	bl	12228 <g_strconcat@plt>
   15f0c:	mov	r1, r4
   15f10:	mov	r8, r0
   15f14:	bl	124ec <g_str_has_prefix@plt>
   15f18:	cmp	r0, #0
   15f1c:	beq	15ed0 <g_boxed_type_register_static@plt+0x37a4>
   15f20:	mov	r0, r6
   15f24:	mov	r1, r9
   15f28:	bl	125f4 <g_str_has_suffix@plt>
   15f2c:	cmp	r0, #0
   15f30:	beq	15ed0 <g_boxed_type_register_static@plt+0x37a4>
   15f34:	mov	r0, r8
   15f38:	movw	r1, #29884	; 0x74bc
   15f3c:	movt	r1, #1
   15f40:	bl	125f4 <g_str_has_suffix@plt>
   15f44:	ldr	r2, [sp, #4]
   15f48:	mov	r1, r8
   15f4c:	cmp	r0, #0
   15f50:	movw	r0, #32764	; 0x7ffc
   15f54:	movt	r0, #1
   15f58:	moveq	r2, r5
   15f5c:	bl	12174 <g_print@plt>
   15f60:	b	15ed0 <g_boxed_type_register_static@plt+0x37a4>
   15f64:	ldr	r5, [sp, #20]
   15f68:	ldr	r1, [sp, #16]
   15f6c:	ldr	r0, [sp, #8]
   15f70:	bl	14c40 <g_boxed_type_register_static@plt+0x2514>
   15f74:	ldr	r0, [sp, #8]
   15f78:	bl	120c0 <g_free@plt>
   15f7c:	mov	r0, fp
   15f80:	bl	120c0 <g_free@plt>
   15f84:	ldr	r3, [sp, #12]
   15f88:	cmp	r3, #0
   15f8c:	beq	15da4 <g_boxed_type_register_static@plt+0x3678>
   15f90:	ldr	r0, [sp, #12]
   15f94:	bl	121b0 <g_object_unref@plt>
   15f98:	b	15da4 <g_boxed_type_register_static@plt+0x3678>
   15f9c:	mov	r1, r6
   15fa0:	mov	r0, r4
   15fa4:	bl	122b8 <g_strndup@plt>
   15fa8:	mov	fp, r0
   15fac:	b	15e80 <g_boxed_type_register_static@plt+0x3754>
   15fb0:	cmp	r7, r0
   15fb4:	ble	15f9c <g_boxed_type_register_static@plt+0x3870>
   15fb8:	movw	r2, #30176	; 0x75e0
   15fbc:	mov	r0, #0
   15fc0:	movt	r2, #1
   15fc4:	ldr	r1, [pc, #28]	; 15fe8 <g_boxed_type_register_static@plt+0x38bc>
   15fc8:	bl	12420 <g_return_if_fail_warning@plt>
   15fcc:	mov	fp, #0
   15fd0:	b	15e80 <g_boxed_type_register_static@plt+0x3754>
   15fd4:	mov	r6, #1
   15fd8:	mov	r7, r6
   15fdc:	b	15e48 <g_boxed_type_register_static@plt+0x371c>
   15fe0:	bl	1251c <__stack_chk_fail@plt>
   15fe4:	andeq	r7, r1, r4, lsr #17
   15fe8:			; <UNDEFINED> instruction: 0x000178b0
   15fec:	mov	r2, r3
   15ff0:	b	15d48 <g_boxed_type_register_static@plt+0x361c>
   15ff4:	push	{r3, r4, r5, r6, r7, lr}
   15ff8:	subs	r5, r1, #0
   15ffc:	mov	r6, r2
   16000:	mov	r7, r3
   16004:	mov	r4, r0
   16008:	beq	16058 <g_boxed_type_register_static@plt+0x392c>
   1600c:	mov	r1, #0
   16010:	mov	r2, #16
   16014:	bl	12258 <memset@plt>
   16018:	mov	r0, r5
   1601c:	bl	121ec <g_strdup@plt>
   16020:	mov	r5, r0
   16024:	ldr	r0, [r4, #12]
   16028:	bl	120c0 <g_free@plt>
   1602c:	ldr	r1, [r4, #8]
   16030:	str	r5, [r4, #12]
   16034:	cmp	r1, #0
   16038:	beq	16044 <g_boxed_type_register_static@plt+0x3918>
   1603c:	ldr	r0, [r4, #4]
   16040:	blx	r1
   16044:	mov	r3, #0
   16048:	str	r6, [r4]
   1604c:	str	r7, [r4, #4]
   16050:	str	r3, [r4, #8]
   16054:	pop	{r3, r4, r5, r6, r7, pc}
   16058:	mov	r0, r5
   1605c:	movw	r2, #30224	; 0x7610
   16060:	ldr	r1, [pc, #8]	; 16070 <g_boxed_type_register_static@plt+0x3944>
   16064:	movt	r2, #1
   16068:	pop	{r3, r4, r5, r6, r7, lr}
   1606c:	b	12420 <g_return_if_fail_warning@plt>
   16070:	andeq	r7, r1, r4, asr #17
   16074:	push	{r3, r4, r5, r6, r7, lr}
   16078:	mov	r4, r1
   1607c:	ldr	r3, [r1, #8]
   16080:	mov	r5, r0
   16084:	ldr	r7, [r0]
   16088:	cmp	r3, #0
   1608c:	ldr	r6, [r0, #4]
   16090:	beq	1609c <g_boxed_type_register_static@plt+0x3970>
   16094:	ldr	r0, [r1, #4]
   16098:	blx	r3
   1609c:	mov	r3, #0
   160a0:	ldr	r0, [r5, #12]
   160a4:	str	r7, [r4]
   160a8:	str	r3, [r4, #8]
   160ac:	str	r6, [r4, #4]
   160b0:	bl	121ec <g_strdup@plt>
   160b4:	mov	r5, r0
   160b8:	ldr	r0, [r4, #12]
   160bc:	bl	120c0 <g_free@plt>
   160c0:	str	r5, [r4, #12]
   160c4:	pop	{r3, r4, r5, r6, r7, pc}
   160c8:	push	{r3, r4, r5, lr}
   160cc:	mov	r5, r0
   160d0:	mov	r0, #16
   160d4:	bl	12564 <g_malloc0@plt>
   160d8:	mov	r4, r0
   160dc:	mov	r0, r5
   160e0:	mov	r1, r4
   160e4:	bl	16074 <g_boxed_type_register_static@plt+0x3948>
   160e8:	mov	r0, r4
   160ec:	pop	{r3, r4, r5, pc}
   160f0:	push	{r3, r4, r5, lr}
   160f4:	mov	r4, r0
   160f8:	ldr	r3, [r0, #8]
   160fc:	cmp	r3, #0
   16100:	beq	1610c <g_boxed_type_register_static@plt+0x39e0>
   16104:	ldr	r0, [r0, #4]
   16108:	blx	r3
   1610c:	mov	r5, #0
   16110:	ldr	r0, [r4, #12]
   16114:	str	r5, [r4]
   16118:	str	r5, [r4, #4]
   1611c:	str	r5, [r4, #8]
   16120:	bl	120c0 <g_free@plt>
   16124:	str	r5, [r4, #12]
   16128:	pop	{r3, r4, r5, pc}
   1612c:	push	{r4, lr}
   16130:	mov	r4, r0
   16134:	bl	160f0 <g_boxed_type_register_static@plt+0x39c4>
   16138:	mov	r0, r4
   1613c:	pop	{r4, lr}
   16140:	b	120c0 <g_free@plt>
   16144:	push	{r3, r4, r5, lr}
   16148:	subs	r5, r0, #0
   1614c:	movne	r4, #0
   16150:	beq	16168 <g_boxed_type_register_static@plt+0x3a3c>
   16154:	add	r0, r5, r4
   16158:	add	r4, r4, #16
   1615c:	bl	160f0 <g_boxed_type_register_static@plt+0x39c4>
   16160:	cmp	r4, #208	; 0xd0
   16164:	bne	16154 <g_boxed_type_register_static@plt+0x3a28>
   16168:	mov	r0, r5
   1616c:	pop	{r3, r4, r5, lr}
   16170:	b	120c0 <g_free@plt>
   16174:	push	{r4, lr}
   16178:	movw	r4, #37456	; 0x9250
   1617c:	dmb	sy
   16180:	movt	r4, #2
   16184:	ldr	r3, [r4, #48]	; 0x30
   16188:	dmb	sy
   1618c:	cmp	r3, #0
   16190:	beq	1619c <g_boxed_type_register_static@plt+0x3a70>
   16194:	ldr	r0, [r4, #48]	; 0x30
   16198:	pop	{r4, pc}
   1619c:	add	r0, r4, #48	; 0x30
   161a0:	bl	125b8 <g_once_init_enter@plt>
   161a4:	cmp	r0, #0
   161a8:	beq	16194 <g_boxed_type_register_static@plt+0x3a68>
   161ac:	movw	r0, #32772	; 0x8004
   161b0:	movw	r1, #24776	; 0x60c8
   161b4:	movt	r0, #1
   161b8:	movt	r1, #1
   161bc:	movw	r2, #24876	; 0x612c
   161c0:	movt	r2, #1
   161c4:	bl	1272c <g_boxed_type_register_static@plt>
   161c8:	mov	r1, r0
   161cc:	add	r0, r4, #48	; 0x30
   161d0:	bl	1260c <g_once_init_leave@plt>
   161d4:	b	16194 <g_boxed_type_register_static@plt+0x3a68>
   161d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161dc:	movw	r7, #37440	; 0x9240
   161e0:	movt	r7, #2
   161e4:	sub	sp, sp, #308	; 0x134
   161e8:	cmp	r1, #0
   161ec:	mov	r4, #0
   161f0:	ldr	r3, [r7]
   161f4:	mov	r6, r0
   161f8:	str	r7, [sp, #40]	; 0x28
   161fc:	str	r1, [sp, #52]	; 0x34
   16200:	str	r4, [sp, #60]	; 0x3c
   16204:	str	r4, [sp, #64]	; 0x40
   16208:	str	r3, [sp, #300]	; 0x12c
   1620c:	str	r4, [sp, #68]	; 0x44
   16210:	str	r4, [sp, #72]	; 0x48
   16214:	str	r4, [sp, #76]	; 0x4c
   16218:	str	r4, [sp, #80]	; 0x50
   1621c:	str	r4, [sp, #84]	; 0x54
   16220:	str	r4, [sp, #88]	; 0x58
   16224:	str	r4, [sp, #92]	; 0x5c
   16228:	str	r4, [sp, #96]	; 0x60
   1622c:	str	r4, [sp, #100]	; 0x64
   16230:	str	r4, [sp, #104]	; 0x68
   16234:	str	r4, [sp, #108]	; 0x6c
   16238:	str	r4, [sp, #112]	; 0x70
   1623c:	str	r4, [sp, #116]	; 0x74
   16240:	str	r4, [sp, #120]	; 0x78
   16244:	str	r4, [sp, #124]	; 0x7c
   16248:	str	r4, [sp, #128]	; 0x80
   1624c:	str	r4, [sp, #132]	; 0x84
   16250:	str	r4, [sp, #136]	; 0x88
   16254:	str	r4, [sp, #140]	; 0x8c
   16258:	str	r4, [sp, #144]	; 0x90
   1625c:	str	r4, [sp, #148]	; 0x94
   16260:	str	r4, [sp, #152]	; 0x98
   16264:	str	r4, [sp, #156]	; 0x9c
   16268:	str	r4, [sp, #160]	; 0xa0
   1626c:	str	r4, [sp, #164]	; 0xa4
   16270:	str	r4, [sp, #168]	; 0xa8
   16274:	str	r4, [sp, #172]	; 0xac
   16278:	str	r4, [sp, #176]	; 0xb0
   1627c:	str	r4, [sp, #180]	; 0xb4
   16280:	str	r4, [sp, #184]	; 0xb8
   16284:	str	r4, [sp, #188]	; 0xbc
   16288:	str	r4, [sp, #192]	; 0xc0
   1628c:	str	r4, [sp, #196]	; 0xc4
   16290:	str	r4, [sp, #200]	; 0xc8
   16294:	str	r4, [sp, #204]	; 0xcc
   16298:	str	r4, [sp, #208]	; 0xd0
   1629c:	str	r4, [sp, #212]	; 0xd4
   162a0:	str	r4, [sp, #216]	; 0xd8
   162a4:	str	r4, [sp, #220]	; 0xdc
   162a8:	str	r4, [sp, #224]	; 0xe0
   162ac:	str	r4, [sp, #228]	; 0xe4
   162b0:	str	r4, [sp, #232]	; 0xe8
   162b4:	str	r4, [sp, #236]	; 0xec
   162b8:	str	r4, [sp, #240]	; 0xf0
   162bc:	str	r4, [sp, #244]	; 0xf4
   162c0:	str	r4, [sp, #248]	; 0xf8
   162c4:	str	r4, [sp, #252]	; 0xfc
   162c8:	str	r4, [sp, #256]	; 0x100
   162cc:	str	r4, [sp, #260]	; 0x104
   162d0:	str	r4, [sp, #264]	; 0x108
   162d4:	str	r4, [sp, #56]	; 0x38
   162d8:	beq	166a0 <g_boxed_type_register_static@plt+0x3f74>
   162dc:	add	r7, sp, #60	; 0x3c
   162e0:	ldr	r0, [r0]
   162e4:	bl	1269c <g_set_prgname@plt>
   162e8:	add	r9, sp, #76	; 0x4c
   162ec:	movw	r1, #32120	; 0x7d78
   162f0:	mov	r0, #6
   162f4:	movt	r1, #1
   162f8:	add	sl, sp, #92	; 0x5c
   162fc:	bl	123fc <setlocale@plt>
   16300:	mov	r0, r7
   16304:	mov	r3, r4
   16308:	movw	r1, #30952	; 0x78e8
   1630c:	movw	r2, #21316	; 0x5344
   16310:	movt	r1, #1
   16314:	movt	r2, #1
   16318:	add	ip, sp, #108	; 0x6c
   1631c:	str	ip, [sp, #36]	; 0x24
   16320:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16324:	mov	r0, r9
   16328:	mov	r3, r4
   1632c:	movw	r1, #30984	; 0x7908
   16330:	movw	r2, #21612	; 0x546c
   16334:	movt	r1, #1
   16338:	movt	r2, #1
   1633c:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16340:	add	r8, sp, #124	; 0x7c
   16344:	mov	r0, sl
   16348:	mov	r3, r4
   1634c:	movw	r1, #31060	; 0x7954
   16350:	movw	r2, #21900	; 0x558c
   16354:	movt	r1, #1
   16358:	movt	r2, #1
   1635c:	add	ip, sp, #140	; 0x8c
   16360:	str	ip, [sp, #32]
   16364:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16368:	add	r0, sp, #108	; 0x6c
   1636c:	mov	r3, r4
   16370:	movw	r1, #31116	; 0x798c
   16374:	movw	r2, #22188	; 0x56ac
   16378:	movt	r1, #1
   1637c:	movt	r2, #1
   16380:	add	ip, sp, #156	; 0x9c
   16384:	str	ip, [sp, #28]
   16388:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   1638c:	mov	r0, r8
   16390:	mov	r3, r4
   16394:	movw	r1, #31156	; 0x79b4
   16398:	movw	r2, #22484	; 0x57d4
   1639c:	movt	r1, #1
   163a0:	movt	r2, #1
   163a4:	add	ip, sp, #172	; 0xac
   163a8:	str	ip, [sp, #24]
   163ac:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   163b0:	add	r0, sp, #140	; 0x8c
   163b4:	mov	r3, r4
   163b8:	movw	r1, #31204	; 0x79e4
   163bc:	movw	r2, #22780	; 0x58fc
   163c0:	movt	r1, #1
   163c4:	movt	r2, #1
   163c8:	add	ip, sp, #188	; 0xbc
   163cc:	str	ip, [sp, #20]
   163d0:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   163d4:	add	r0, sp, #156	; 0x9c
   163d8:	mov	r3, r4
   163dc:	movw	r1, #31272	; 0x7a28
   163e0:	movw	r2, #19412	; 0x4bd4
   163e4:	movt	r1, #1
   163e8:	movt	r2, #1
   163ec:	add	ip, sp, #204	; 0xcc
   163f0:	str	ip, [sp, #16]
   163f4:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   163f8:	add	r0, sp, #172	; 0xac
   163fc:	mov	r3, r4
   16400:	movw	r1, #31340	; 0x7a6c
   16404:	movw	r2, #19404	; 0x4bcc
   16408:	movt	r1, #1
   1640c:	movt	r2, #1
   16410:	add	ip, sp, #220	; 0xdc
   16414:	str	ip, [sp, #12]
   16418:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   1641c:	add	r0, sp, #188	; 0xbc
   16420:	mov	r3, r4
   16424:	movw	r1, #31384	; 0x7a98
   16428:	movw	r2, #23516	; 0x5bdc
   1642c:	movt	r1, #1
   16430:	movt	r2, #1
   16434:	add	ip, sp, #236	; 0xec
   16438:	str	ip, [sp, #8]
   1643c:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16440:	add	r0, sp, #204	; 0xcc
   16444:	mov	r3, r4
   16448:	movw	r1, #31432	; 0x7ac8
   1644c:	movw	r2, #19396	; 0x4bc4
   16450:	movt	r1, #1
   16454:	movt	r2, #1
   16458:	add	fp, sp, #252	; 0xfc
   1645c:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16460:	add	r0, sp, #220	; 0xdc
   16464:	mov	r3, r4
   16468:	movw	r1, #31476	; 0x7af4
   1646c:	movw	r2, #19388	; 0x4bbc
   16470:	movt	r1, #1
   16474:	movt	r2, #1
   16478:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   1647c:	add	r0, sp, #236	; 0xec
   16480:	mov	r3, r4
   16484:	movw	r1, #32888	; 0x8078
   16488:	movw	r2, #23872	; 0x5d40
   1648c:	movt	r1, #1
   16490:	movt	r2, #1
   16494:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   16498:	mov	r3, r4
   1649c:	mov	r0, fp
   164a0:	movw	r1, #32896	; 0x8080
   164a4:	movw	r2, #24556	; 0x5fec
   164a8:	movt	r1, #1
   164ac:	movt	r2, #1
   164b0:	bl	15ff4 <g_boxed_type_register_static@plt+0x38c8>
   164b4:	mov	r0, #208	; 0xd0
   164b8:	bl	12564 <g_malloc0@plt>
   164bc:	mov	r5, r0
   164c0:	add	lr, r5, #48	; 0x30
   164c4:	ldm	r7, {r0, r1, r2, r3}
   164c8:	add	r7, r5, #16
   164cc:	str	r7, [sp, #44]	; 0x2c
   164d0:	add	r7, r5, #32
   164d4:	add	ip, r5, #64	; 0x40
   164d8:	stm	r5, {r0, r1, r2, r3}
   164dc:	ldm	r9, {r0, r1, r2, r3}
   164e0:	ldr	r9, [sp, #44]	; 0x2c
   164e4:	stm	r9, {r0, r1, r2, r3}
   164e8:	add	r9, r5, #80	; 0x50
   164ec:	ldm	sl, {r0, r1, r2, r3}
   164f0:	add	sl, r5, #112	; 0x70
   164f4:	str	r9, [sp, #44]	; 0x2c
   164f8:	add	r9, r5, #96	; 0x60
   164fc:	str	r9, [sp, #48]	; 0x30
   16500:	add	r9, r5, #128	; 0x80
   16504:	stm	r7, {r0, r1, r2, r3}
   16508:	ldr	r7, [sp, #36]	; 0x24
   1650c:	ldm	r7, {r0, r1, r2, r3}
   16510:	add	r7, r5, #160	; 0xa0
   16514:	str	r9, [sp, #36]	; 0x24
   16518:	ldr	r9, [sp, #44]	; 0x2c
   1651c:	stm	lr, {r0, r1, r2, r3}
   16520:	add	lr, r5, #176	; 0xb0
   16524:	ldm	r8, {r0, r1, r2, r3}
   16528:	add	r8, r5, #144	; 0x90
   1652c:	stm	ip, {r0, r1, r2, r3}
   16530:	ldr	ip, [sp, #32]
   16534:	ldm	ip, {r0, r1, r2, r3}
   16538:	add	ip, r5, #192	; 0xc0
   1653c:	stm	r9, {r0, r1, r2, r3}
   16540:	ldr	r9, [sp, #28]
   16544:	ldm	r9, {r0, r1, r2, r3}
   16548:	ldr	r9, [sp, #48]	; 0x30
   1654c:	stm	r9, {r0, r1, r2, r3}
   16550:	ldr	r9, [sp, #24]
   16554:	ldm	r9, {r0, r1, r2, r3}
   16558:	stm	sl, {r0, r1, r2, r3}
   1655c:	ldr	r9, [sp, #20]
   16560:	ldm	r9, {r0, r1, r2, r3}
   16564:	ldr	r9, [sp, #36]	; 0x24
   16568:	stm	r9, {r0, r1, r2, r3}
   1656c:	ldr	r9, [sp, #16]
   16570:	ldm	r9, {r0, r1, r2, r3}
   16574:	ldr	r9, [sp, #8]
   16578:	stm	r8, {r0, r1, r2, r3}
   1657c:	ldr	r8, [sp, #12]
   16580:	ldm	r8, {r0, r1, r2, r3}
   16584:	stm	r7, {r0, r1, r2, r3}
   16588:	ldm	r9, {r0, r1, r2, r3}
   1658c:	stm	lr, {r0, r1, r2, r3}
   16590:	ldm	fp, {r0, r1, r2, r3}
   16594:	stm	ip, {r0, r1, r2, r3}
   16598:	ldr	r3, [r6, #4]
   1659c:	cmp	r3, #0
   165a0:	beq	166f8 <g_boxed_type_register_static@plt+0x3fcc>
   165a4:	add	sl, sp, #268	; 0x10c
   165a8:	add	r9, sp, #284	; 0x11c
   165ac:	mov	r7, r4
   165b0:	mov	r8, sl
   165b4:	mov	fp, r9
   165b8:	add	r0, r5, r4
   165bc:	mov	r1, r8
   165c0:	str	r7, [sl]
   165c4:	mov	sl, r8
   165c8:	str	r7, [r9]
   165cc:	mov	r9, fp
   165d0:	str	r7, [sp, #272]	; 0x110
   165d4:	str	r7, [sp, #276]	; 0x114
   165d8:	str	r7, [sp, #280]	; 0x118
   165dc:	str	r7, [sp, #288]	; 0x120
   165e0:	str	r7, [sp, #292]	; 0x124
   165e4:	str	r7, [sp, #296]	; 0x128
   165e8:	bl	16074 <g_boxed_type_register_static@plt+0x3948>
   165ec:	ldm	r8, {r0, r1, r2, r3}
   165f0:	stm	fp, {r0, r1, r2, r3}
   165f4:	ldr	r1, [r6, #4]
   165f8:	ldr	r0, [sp, #296]	; 0x128
   165fc:	bl	121d4 <g_strcmp0@plt>
   16600:	cmp	r0, #0
   16604:	beq	166c4 <g_boxed_type_register_static@plt+0x3f98>
   16608:	add	r4, r4, #16
   1660c:	mov	r0, fp
   16610:	bl	160f0 <g_boxed_type_register_static@plt+0x39c4>
   16614:	cmp	r4, #208	; 0xd0
   16618:	bne	165b8 <g_boxed_type_register_static@plt+0x3e8c>
   1661c:	ldr	r4, [r6, #4]
   16620:	bl	121c8 <g_option_error_quark@plt>
   16624:	movw	r2, #32812	; 0x802c
   16628:	mov	r1, #2
   1662c:	movt	r2, #1
   16630:	mov	r3, r4
   16634:	bl	12198 <g_error_new@plt>
   16638:	mov	r4, r0
   1663c:	movw	r3, #37448	; 0x9248
   16640:	movt	r3, #2
   16644:	mov	r7, #0
   16648:	mov	r1, #1
   1664c:	ldr	r0, [r3]
   16650:	movw	r2, #32832	; 0x8040
   16654:	ldr	r3, [r4, #8]
   16658:	movt	r2, #1
   1665c:	str	r7, [sp, #56]	; 0x38
   16660:	bl	12534 <__fprintf_chk@plt>
   16664:	ldr	r1, [r6, #4]
   16668:	mov	r0, r7
   1666c:	bl	14c80 <g_boxed_type_register_static@plt+0x2554>
   16670:	mov	r0, r4
   16674:	bl	125e8 <g_error_free@plt>
   16678:	mov	r0, r5
   1667c:	bl	16144 <g_boxed_type_register_static@plt+0x3a18>
   16680:	mov	r0, #1
   16684:	ldr	r8, [sp, #40]	; 0x28
   16688:	ldr	r2, [sp, #300]	; 0x12c
   1668c:	ldr	r3, [r8]
   16690:	cmp	r2, r3
   16694:	bne	1672c <g_boxed_type_register_static@plt+0x4000>
   16698:	add	sp, sp, #308	; 0x134
   1669c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166a0:	movw	r3, #32868	; 0x8064
   166a4:	movw	r1, #32844	; 0x804c
   166a8:	movt	r3, #1
   166ac:	ldr	r0, [sp, #52]	; 0x34
   166b0:	str	r3, [sp]
   166b4:	movt	r1, #1
   166b8:	movw	r2, #1438	; 0x59e
   166bc:	ldr	r3, [pc, #108]	; 16730 <g_boxed_type_register_static@plt+0x4004>
   166c0:	bl	122f4 <g_assertion_message_expr@plt>
   166c4:	ldr	r1, [sp, #52]	; 0x34
   166c8:	mov	r0, r6
   166cc:	ldr	ip, [sp, #284]	; 0x11c
   166d0:	add	r3, sp, #56	; 0x38
   166d4:	ldr	r2, [sp, #288]	; 0x120
   166d8:	blx	ip
   166dc:	ldr	r4, [sp, #56]	; 0x38
   166e0:	cmp	r4, #0
   166e4:	beq	16714 <g_boxed_type_register_static@plt+0x3fe8>
   166e8:	mov	r0, fp
   166ec:	bl	160f0 <g_boxed_type_register_static@plt+0x39c4>
   166f0:	ldr	r4, [sp, #56]	; 0x38
   166f4:	b	1663c <g_boxed_type_register_static@plt+0x3f10>
   166f8:	bl	121c8 <g_option_error_quark@plt>
   166fc:	movw	r2, #32788	; 0x8014
   16700:	mov	r1, #2
   16704:	movt	r2, #1
   16708:	bl	123cc <g_error_new_literal@plt>
   1670c:	mov	r4, r0
   16710:	b	1663c <g_boxed_type_register_static@plt+0x3f10>
   16714:	mov	r0, fp
   16718:	bl	160f0 <g_boxed_type_register_static@plt+0x39c4>
   1671c:	mov	r0, r5
   16720:	bl	16144 <g_boxed_type_register_static@plt+0x3a18>
   16724:	mov	r0, r4
   16728:	b	16684 <g_boxed_type_register_static@plt+0x3f58>
   1672c:	bl	1251c <__stack_chk_fail@plt>
   16730:	ldrdeq	r7, [r1], -ip
   16734:	push	{r3, r4, r5, lr}
   16738:	mov	r4, r1
   1673c:	ldrb	r3, [r0]
   16740:	mov	r5, r2
   16744:	cmp	r3, #0
   16748:	beq	16788 <g_boxed_type_register_static@plt+0x405c>
   1674c:	sub	r3, r0, #1
   16750:	movw	r0, #5381	; 0x1505
   16754:	ldrsb	ip, [r3, #1]!
   16758:	add	r0, r0, r0, lsl #5
   1675c:	add	r0, ip, r0
   16760:	ldrb	ip, [r3, #1]
   16764:	cmp	ip, #0
   16768:	bne	16754 <g_boxed_type_register_static@plt+0x4028>
   1676c:	ldr	r1, [r5, #4]
   16770:	bl	173f4 <g_boxed_type_register_static@plt+0x4cc8>
   16774:	ldr	r3, [r5]
   16778:	ldr	r2, [r3, r1, lsl #2]
   1677c:	str	r2, [r4, #20]
   16780:	str	r4, [r3, r1, lsl #2]
   16784:	pop	{r3, r4, r5, pc}
   16788:	movw	r0, #5381	; 0x1505
   1678c:	b	1676c <g_boxed_type_register_static@plt+0x4040>
   16790:	push	{r4, lr}
   16794:	mov	r4, r0
   16798:	ldr	r0, [r0]
   1679c:	bl	120c0 <g_free@plt>
   167a0:	ldr	r0, [r4, #24]
   167a4:	cmp	r0, #0
   167a8:	beq	167b0 <g_boxed_type_register_static@plt+0x4084>
   167ac:	bl	12540 <g_variant_unref@plt>
   167b0:	ldr	r0, [r4, #28]
   167b4:	cmp	r0, #0
   167b8:	beq	167c0 <g_boxed_type_register_static@plt+0x4094>
   167bc:	bl	125d0 <g_hash_table_unref@plt>
   167c0:	mov	r1, r4
   167c4:	mov	r0, #36	; 0x24
   167c8:	pop	{r4, lr}
   167cc:	b	12660 <g_slice_free1@plt>
   167d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167d4:	subs	r8, r3, #0
   167d8:	mov	r9, r0
   167dc:	mov	r6, r1
   167e0:	ldr	r7, [sp, #40]	; 0x28
   167e4:	beq	16858 <g_boxed_type_register_static@plt+0x412c>
   167e8:	ldrd	r4, [r1]
   167ec:	sub	r2, r2, #1
   167f0:	mov	r0, #12
   167f4:	rsbs	sl, r4, #0
   167f8:	rsc	fp, r5, #0
   167fc:	mov	fp, #0
   16800:	and	sl, sl, r2
   16804:	adds	r4, r4, sl
   16808:	adc	r5, r5, fp
   1680c:	strd	r4, [r1]
   16810:	bl	12474 <g_slice_alloc@plt>
   16814:	ldr	r3, [r6]
   16818:	mov	sl, r0
   1681c:	mov	r0, r8
   16820:	stm	sl, {r3, r8}
   16824:	bl	12270 <g_malloc@plt>
   16828:	ldrd	r4, [r6]
   1682c:	mov	r1, sl
   16830:	adds	r2, r4, r8
   16834:	str	r4, [r7]
   16838:	adc	r3, r5, #0
   1683c:	strd	r2, [r6]
   16840:	str	r0, [sl, #8]
   16844:	ldr	r0, [r9]
   16848:	str	r2, [r7, #4]
   1684c:	bl	120e4 <g_queue_push_tail@plt>
   16850:	ldr	r0, [sl, #8]
   16854:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16858:	mov	r0, r8
   1685c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16864:	movw	r3, #37440	; 0x9240
   16868:	sub	sp, sp, #52	; 0x34
   1686c:	movt	r3, #2
   16870:	mov	r9, r0
   16874:	mov	r0, r1
   16878:	str	r3, [sp, #28]
   1687c:	mov	r6, r1
   16880:	ldr	r3, [r3]
   16884:	mov	r5, r2
   16888:	str	r3, [sp, #44]	; 0x2c
   1688c:	bl	1236c <g_hash_table_size@plt>
   16890:	mov	r4, r0
   16894:	mov	r0, #8
   16898:	bl	12474 <g_slice_alloc@plt>
   1689c:	mov	r1, #4
   168a0:	str	r0, [sp, #16]
   168a4:	mov	r0, r4
   168a8:	bl	122e8 <g_malloc0_n@plt>
   168ac:	ldr	r2, [sp, #16]
   168b0:	movw	r1, #26420	; 0x6734
   168b4:	movt	r1, #1
   168b8:	str	r4, [r2, #4]
   168bc:	str	r0, [r2]
   168c0:	mov	r0, r6
   168c4:	bl	1239c <g_hash_table_foreach@plt>
   168c8:	ldr	r0, [sp, #16]
   168cc:	ldr	lr, [r0, #4]
   168d0:	cmp	lr, #0
   168d4:	ble	16d20 <g_boxed_type_register_static@plt+0x45f4>
   168d8:	ldr	ip, [r0]
   168dc:	lsl	r4, lr, #2
   168e0:	mov	r1, #0
   168e4:	add	r2, r4, ip
   168e8:	ldr	r3, [ip], #4
   168ec:	cmp	r3, #0
   168f0:	beq	16908 <g_boxed_type_register_static@plt+0x41dc>
   168f4:	str	r1, [r3, #8]
   168f8:	add	r1, r1, #1
   168fc:	ldr	r3, [r3, #20]
   16900:	cmp	r3, #0
   16904:	bne	168f4 <g_boxed_type_register_static@plt+0x41c8>
   16908:	cmp	ip, r2
   1690c:	bne	168e8 <g_boxed_type_register_static@plt+0x41bc>
   16910:	add	r1, r1, r1, lsl #1
   16914:	lsl	r7, r1, #3
   16918:	lsl	r3, r1, #1
   1691c:	rsb	r6, r7, #0
   16920:	add	r2, lr, #2
   16924:	str	r5, [sp]
   16928:	add	r3, r2, r3
   1692c:	add	r1, r9, #8
   16930:	mov	r2, #4
   16934:	mov	r0, r9
   16938:	lsl	r5, r3, #2
   1693c:	mov	ip, #671088640	; 0x28000000
   16940:	str	r1, [sp, #8]
   16944:	mov	r3, r5
   16948:	str	lr, [sp, #40]	; 0x28
   1694c:	str	ip, [sp, #36]	; 0x24
   16950:	bl	167d0 <g_boxed_type_register_static@plt+0x40a4>
   16954:	movw	r3, #65528	; 0xfff8
   16958:	movt	r3, #65535	; 0xffff
   1695c:	rsb	r3, r4, r3
   16960:	add	r3, r3, r5
   16964:	cmp	r3, r7
   16968:	mov	r2, r0
   1696c:	ldr	r0, [sp, #36]	; 0x24
   16970:	str	r0, [r2]
   16974:	ldr	r0, [sp, #40]	; 0x28
   16978:	str	r0, [r2, #4]
   1697c:	beq	169a8 <g_boxed_type_register_static@plt+0x427c>
   16980:	movw	r3, #33084	; 0x813c
   16984:	movw	r1, #33060	; 0x8124
   16988:	movt	r3, #1
   1698c:	movt	r1, #1
   16990:	str	r3, [sp]
   16994:	mov	r0, #0
   16998:	movw	r3, #32908	; 0x808c
   1699c:	movw	r2, #338	; 0x152
   169a0:	movt	r3, #1
   169a4:	bl	122f4 <g_assertion_message_expr@plt>
   169a8:	ldr	r1, [sp, #16]
   169ac:	ldr	r3, [r1, #4]
   169b0:	cmp	r3, #0
   169b4:	ldrle	r0, [r1]
   169b8:	ble	16a60 <g_boxed_type_register_static@plt+0x4334>
   169bc:	add	r1, r2, #8
   169c0:	movw	r2, #65532	; 0xfffc
   169c4:	movt	r2, #65535	; 0xffff
   169c8:	add	r1, r1, r4
   169cc:	rsb	r2, r4, r2
   169d0:	add	r7, r1, r7
   169d4:	add	r2, r1, r2
   169d8:	ldr	r1, [sp, #16]
   169dc:	mov	r0, #0
   169e0:	str	r0, [sp, #20]
   169e4:	mov	sl, r0
   169e8:	add	r7, r7, r6
   169ec:	ldr	r0, [r1]
   169f0:	str	r7, [sp, #12]
   169f4:	str	r2, [sp, #24]
   169f8:	ldr	r2, [sp, #20]
   169fc:	ldr	r1, [sp, #24]
   16a00:	ldr	fp, [r0, r2, lsl #2]
   16a04:	str	sl, [r1, #4]!
   16a08:	cmp	fp, #0
   16a0c:	str	r1, [sp, #24]
   16a10:	beq	16a4c <g_boxed_type_register_static@plt+0x4320>
   16a14:	ldr	r3, [fp, #8]
   16a18:	cmp	r3, sl
   16a1c:	beq	16a8c <g_boxed_type_register_static@plt+0x4360>
   16a20:	movw	r3, #33096	; 0x8148
   16a24:	movw	r1, #33060	; 0x8124
   16a28:	movt	r3, #1
   16a2c:	movt	r1, #1
   16a30:	str	r3, [sp]
   16a34:	mov	r0, #0
   16a38:	mov	r2, #384	; 0x180
   16a3c:	ldr	r3, [pc, #756]	; 16d38 <g_boxed_type_register_static@plt+0x460c>
   16a40:	bl	122f4 <g_assertion_message_expr@plt>
   16a44:	ldr	r3, [sp, #16]
   16a48:	ldm	r3, {r0, r3}
   16a4c:	ldr	r1, [sp, #20]
   16a50:	add	r1, r1, #1
   16a54:	str	r1, [sp, #20]
   16a58:	cmp	r3, r1
   16a5c:	bgt	169f8 <g_boxed_type_register_static@plt+0x42cc>
   16a60:	bl	120c0 <g_free@plt>
   16a64:	ldr	r0, [sp, #28]
   16a68:	ldr	r2, [sp, #44]	; 0x2c
   16a6c:	ldr	r3, [r0]
   16a70:	cmp	r2, r3
   16a74:	bne	16d34 <g_boxed_type_register_static@plt+0x4608>
   16a78:	ldr	r1, [sp, #16]
   16a7c:	mov	r0, #8
   16a80:	add	sp, sp, #52	; 0x34
   16a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a88:	b	12660 <g_slice_free1@plt>
   16a8c:	ldr	r8, [sp, #12]
   16a90:	add	r2, r8, #24
   16a94:	str	r2, [sp, #12]
   16a98:	ldr	r3, [fp, #4]
   16a9c:	str	r3, [r8]
   16aa0:	ldr	r3, [fp, #12]
   16aa4:	cmp	r3, #0
   16aa8:	mvneq	r3, #0
   16aac:	ldrne	r3, [r3, #8]
   16ab0:	str	r3, [r8, #4]
   16ab4:	mov	r1, #0
   16ab8:	strb	r1, [r8, #15]
   16abc:	ldr	r3, [fp, #12]
   16ac0:	cmp	r3, #0
   16ac4:	beq	16cfc <g_boxed_type_register_static@plt+0x45d0>
   16ac8:	ldr	r0, [r3]
   16acc:	bl	123b4 <strlen@plt>
   16ad0:	ldr	r4, [fp]
   16ad4:	add	r4, r4, r0
   16ad8:	mov	r0, r4
   16adc:	bl	123b4 <strlen@plt>
   16ae0:	mov	r7, r0
   16ae4:	mov	r0, #12
   16ae8:	bl	12474 <g_slice_alloc@plt>
   16aec:	ldr	r2, [r9, #8]
   16af0:	mov	r6, r0
   16af4:	mov	r0, r7
   16af8:	stm	r6, {r2, r7}
   16afc:	bl	12270 <g_malloc@plt>
   16b00:	mov	r1, r4
   16b04:	mov	r2, r7
   16b08:	str	r0, [r6, #8]
   16b0c:	bl	123f0 <memcpy@plt>
   16b10:	ldrd	r4, [r9, #8]
   16b14:	ldr	r0, [r9]
   16b18:	mov	r1, r6
   16b1c:	adds	r2, r4, r7
   16b20:	strh	r7, [r8, #12]
   16b24:	adc	r3, r5, #0
   16b28:	str	r4, [r8, #8]
   16b2c:	strd	r2, [r9, #8]
   16b30:	bl	120e4 <g_queue_push_tail@plt>
   16b34:	ldr	r0, [fp, #24]
   16b38:	cmp	r0, #0
   16b3c:	beq	16be4 <g_boxed_type_register_static@plt+0x44b8>
   16b40:	ldr	r3, [fp, #32]
   16b44:	cmp	r3, #0
   16b48:	beq	16b70 <g_boxed_type_register_static@plt+0x4444>
   16b4c:	movw	r3, #33144	; 0x8178
   16b50:	movw	r1, #33060	; 0x8124
   16b54:	movt	r3, #1
   16b58:	movt	r1, #1
   16b5c:	str	r3, [sp]
   16b60:	mov	r0, #0
   16b64:	mov	r2, #400	; 0x190
   16b68:	ldr	r3, [pc, #456]	; 16d38 <g_boxed_type_register_static@plt+0x460c>
   16b6c:	bl	122f4 <g_assertion_message_expr@plt>
   16b70:	ldr	r3, [fp, #28]
   16b74:	cmp	r3, #0
   16b78:	bne	16b4c <g_boxed_type_register_static@plt+0x4420>
   16b7c:	ldr	r3, [r9, #16]
   16b80:	add	r5, r8, #16
   16b84:	cmp	r3, #0
   16b88:	bne	16d04 <g_boxed_type_register_static@plt+0x45d8>
   16b8c:	bl	1245c <g_variant_new_variant@plt>
   16b90:	mov	r6, r0
   16b94:	mov	r0, r6
   16b98:	bl	12204 <g_variant_get_normal_form@plt>
   16b9c:	mov	r4, r0
   16ba0:	mov	r0, r6
   16ba4:	bl	12540 <g_variant_unref@plt>
   16ba8:	mov	r0, r4
   16bac:	bl	12240 <g_variant_get_size@plt>
   16bb0:	mov	r2, #8
   16bb4:	ldr	r1, [sp, #8]
   16bb8:	str	r5, [sp]
   16bbc:	mov	r3, r0
   16bc0:	mov	r0, r9
   16bc4:	bl	167d0 <g_boxed_type_register_static@plt+0x40a4>
   16bc8:	mov	r1, r0
   16bcc:	mov	r0, r4
   16bd0:	bl	12360 <g_variant_store@plt>
   16bd4:	mov	r0, r4
   16bd8:	bl	12540 <g_variant_unref@plt>
   16bdc:	mov	r2, #118	; 0x76
   16be0:	strb	r2, [r8, #14]
   16be4:	ldr	r4, [fp, #32]
   16be8:	cmp	r4, #0
   16bec:	beq	16ca8 <g_boxed_type_register_static@plt+0x457c>
   16bf0:	ldr	r5, [fp, #28]
   16bf4:	cmp	r5, #0
   16bf8:	beq	16c20 <g_boxed_type_register_static@plt+0x44f4>
   16bfc:	movw	r3, #33188	; 0x81a4
   16c00:	movw	r1, #33060	; 0x8124
   16c04:	movt	r3, #1
   16c08:	movt	r1, #1
   16c0c:	str	r3, [sp]
   16c10:	mov	r0, #0
   16c14:	mov	r2, #412	; 0x19c
   16c18:	ldr	r3, [pc, #280]	; 16d38 <g_boxed_type_register_static@plt+0x460c>
   16c1c:	bl	122f4 <g_assertion_message_expr@plt>
   16c20:	ldr	r4, [r4, #16]
   16c24:	add	r5, r5, #1
   16c28:	cmp	r4, #0
   16c2c:	bne	16c20 <g_boxed_type_register_static@plt+0x44f4>
   16c30:	add	r3, r8, #16
   16c34:	mov	r0, r9
   16c38:	str	r3, [sp]
   16c3c:	mov	r2, #4
   16c40:	lsl	r3, r5, #2
   16c44:	ldr	r1, [sp, #8]
   16c48:	bl	167d0 <g_boxed_type_register_static@plt+0x40a4>
   16c4c:	mov	r3, #76	; 0x4c
   16c50:	strb	r3, [r8, #14]
   16c54:	ldr	r3, [fp, #32]
   16c58:	cmp	r3, #0
   16c5c:	beq	16c7c <g_boxed_type_register_static@plt+0x4550>
   16c60:	sub	r0, r0, #4
   16c64:	ldr	r2, [r3, #8]
   16c68:	add	r4, r4, #1
   16c6c:	ldr	r3, [r3, #16]
   16c70:	cmp	r3, #0
   16c74:	str	r2, [r0, #4]!
   16c78:	bne	16c64 <g_boxed_type_register_static@plt+0x4538>
   16c7c:	cmp	r4, r5
   16c80:	beq	16ca8 <g_boxed_type_register_static@plt+0x457c>
   16c84:	movw	r3, #33208	; 0x81b8
   16c88:	movw	r1, #33060	; 0x8124
   16c8c:	movt	r3, #1
   16c90:	movt	r1, #1
   16c94:	str	r3, [sp]
   16c98:	mov	r0, #0
   16c9c:	mov	r2, #424	; 0x1a8
   16ca0:	ldr	r3, [pc, #144]	; 16d38 <g_boxed_type_register_static@plt+0x460c>
   16ca4:	bl	122f4 <g_assertion_message_expr@plt>
   16ca8:	ldr	r3, [fp, #28]
   16cac:	cmp	r3, #0
   16cb0:	beq	16ccc <g_boxed_type_register_static@plt+0x45a0>
   16cb4:	mov	r3, #72	; 0x48
   16cb8:	strb	r3, [r8, #14]
   16cbc:	add	r2, r8, #16
   16cc0:	mov	r0, r9
   16cc4:	ldr	r1, [fp, #28]
   16cc8:	bl	16860 <g_boxed_type_register_static@plt+0x4134>
   16ccc:	ldr	fp, [fp, #20]
   16cd0:	add	sl, sl, #1
   16cd4:	cmp	fp, #0
   16cd8:	beq	16a44 <g_boxed_type_register_static@plt+0x4318>
   16cdc:	ldr	r3, [fp, #8]
   16ce0:	ldr	r0, [sp, #12]
   16ce4:	cmp	sl, r3
   16ce8:	add	r2, r0, #24
   16cec:	bne	16a20 <g_boxed_type_register_static@plt+0x42f4>
   16cf0:	mov	r8, r0
   16cf4:	str	r2, [sp, #12]
   16cf8:	b	16a98 <g_boxed_type_register_static@plt+0x436c>
   16cfc:	ldr	r4, [fp]
   16d00:	b	16ad8 <g_boxed_type_register_static@plt+0x43ac>
   16d04:	bl	12180 <g_variant_byteswap@plt>
   16d08:	mov	r4, r0
   16d0c:	bl	1245c <g_variant_new_variant@plt>
   16d10:	mov	r6, r0
   16d14:	mov	r0, r4
   16d18:	bl	12540 <g_variant_unref@plt>
   16d1c:	b	16b94 <g_boxed_type_register_static@plt+0x4468>
   16d20:	mov	r6, #0
   16d24:	lsl	r4, lr, #2
   16d28:	mov	r7, r6
   16d2c:	mov	r3, r6
   16d30:	b	16920 <g_boxed_type_register_static@plt+0x41f4>
   16d34:	bl	1251c <__stack_chk_fail@plt>
   16d38:	andeq	r8, r1, ip, lsr #1
   16d3c:	push	{r4, r5, r6, lr}
   16d40:	mov	r6, r0
   16d44:	mov	r0, #36	; 0x24
   16d48:	mov	r5, r1
   16d4c:	bl	12708 <g_slice_alloc0@plt>
   16d50:	mov	r4, r0
   16d54:	mov	r0, r5
   16d58:	bl	121ec <g_strdup@plt>
   16d5c:	ldrb	r3, [r5]
   16d60:	cmp	r3, #0
   16d64:	str	r0, [r4]
   16d68:	beq	16db0 <g_boxed_type_register_static@plt+0x4684>
   16d6c:	sub	ip, r5, #1
   16d70:	movw	r3, #5381	; 0x1505
   16d74:	ldrsb	lr, [ip, #1]!
   16d78:	add	r3, r3, r3, lsl #5
   16d7c:	add	r3, lr, r3
   16d80:	ldrb	lr, [ip, #1]
   16d84:	cmp	lr, #0
   16d88:	bne	16d74 <g_boxed_type_register_static@plt+0x4648>
   16d8c:	mov	r0, r5
   16d90:	str	r3, [r4, #4]
   16d94:	bl	121ec <g_strdup@plt>
   16d98:	mov	r2, r4
   16d9c:	mov	r1, r0
   16da0:	mov	r0, r6
   16da4:	bl	1221c <g_hash_table_insert@plt>
   16da8:	mov	r0, r4
   16dac:	pop	{r4, r5, r6, pc}
   16db0:	movw	r3, #5381	; 0x1505
   16db4:	b	16d8c <g_boxed_type_register_static@plt+0x4660>
   16db8:	ldr	r3, [r0, #24]
   16dbc:	push	{r4, lr}
   16dc0:	cmp	r3, #0
   16dc4:	mov	r4, r0
   16dc8:	beq	16de4 <g_boxed_type_register_static@plt+0x46b8>
   16dcc:	movw	r2, #33224	; 0x81c8
   16dd0:	mov	r0, #0
   16dd4:	movt	r2, #1
   16dd8:	ldr	r1, [pc, #44]	; 16e0c <g_boxed_type_register_static@plt+0x46e0>
   16ddc:	pop	{r4, lr}
   16de0:	b	12420 <g_return_if_fail_warning@plt>
   16de4:	ldr	r3, [r0, #28]
   16de8:	cmp	r3, #0
   16dec:	bne	16dcc <g_boxed_type_register_static@plt+0x46a0>
   16df0:	ldr	r3, [r0, #32]
   16df4:	cmp	r3, #0
   16df8:	bne	16dcc <g_boxed_type_register_static@plt+0x46a0>
   16dfc:	mov	r0, r1
   16e00:	bl	1212c <g_variant_ref_sink@plt>
   16e04:	str	r0, [r4, #24]
   16e08:	pop	{r4, pc}
   16e0c:	andeq	r8, r1, r4, asr #1
   16e10:	push	{r3, r4, r5, lr}
   16e14:	mov	r4, r2
   16e18:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   16e1c:	mov	r5, r0
   16e20:	mov	r0, r4
   16e24:	bl	12324 <g_variant_new_string@plt>
   16e28:	mov	r1, r0
   16e2c:	mov	r0, r5
   16e30:	pop	{r3, r4, r5, lr}
   16e34:	b	16db8 <g_boxed_type_register_static@plt+0x468c>
   16e38:	ldr	r3, [r0, #24]
   16e3c:	push	{r4, lr}
   16e40:	cmp	r3, #0
   16e44:	mov	r4, r0
   16e48:	beq	16e64 <g_boxed_type_register_static@plt+0x4738>
   16e4c:	movw	r2, #33224	; 0x81c8
   16e50:	mov	r0, #0
   16e54:	movt	r2, #1
   16e58:	ldr	r1, [pc, #44]	; 16e8c <g_boxed_type_register_static@plt+0x4760>
   16e5c:	pop	{r4, lr}
   16e60:	b	12420 <g_return_if_fail_warning@plt>
   16e64:	ldr	r3, [r0, #28]
   16e68:	cmp	r3, #0
   16e6c:	bne	16e4c <g_boxed_type_register_static@plt+0x4720>
   16e70:	ldr	r3, [r0, #32]
   16e74:	cmp	r3, #0
   16e78:	bne	16e4c <g_boxed_type_register_static@plt+0x4720>
   16e7c:	mov	r0, r1
   16e80:	bl	12438 <g_hash_table_ref@plt>
   16e84:	str	r0, [r4, #28]
   16e88:	pop	{r4, pc}
   16e8c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16e90:	push	{r4, r5, r6, lr}
   16e94:	movw	r2, #8384	; 0x20c0
   16e98:	mov	r5, r0
   16e9c:	mov	r6, r1
   16ea0:	movw	r0, #8516	; 0x2144
   16ea4:	movw	r1, #9908	; 0x26b4
   16ea8:	movt	r0, #1
   16eac:	movt	r1, #1
   16eb0:	movw	r3, #26512	; 0x6790
   16eb4:	movt	r2, #1
   16eb8:	movt	r3, #1
   16ebc:	bl	12384 <g_hash_table_new_full@plt>
   16ec0:	cmp	r5, #0
   16ec4:	mov	r4, r0
   16ec8:	beq	16ee0 <g_boxed_type_register_static@plt+0x47b4>
   16ecc:	mov	r1, r6
   16ed0:	mov	r0, r5
   16ed4:	bl	16d3c <g_boxed_type_register_static@plt+0x4610>
   16ed8:	mov	r1, r4
   16edc:	bl	16e38 <g_boxed_type_register_static@plt+0x470c>
   16ee0:	mov	r0, r4
   16ee4:	pop	{r4, r5, r6, pc}
   16ee8:	push	{r4, r5, r6, r7, r8, lr}
   16eec:	mov	r7, r0
   16ef0:	mov	r8, r1
   16ef4:	ldr	r0, [r0]
   16ef8:	ldr	r1, [r1]
   16efc:	bl	124ec <g_str_has_prefix@plt>
   16f00:	cmp	r0, #0
   16f04:	beq	16f2c <g_boxed_type_register_static@plt+0x4800>
   16f08:	ldr	r3, [r8, #24]
   16f0c:	cmp	r3, #0
   16f10:	beq	16f40 <g_boxed_type_register_static@plt+0x4814>
   16f14:	movw	r2, #33316	; 0x8224
   16f18:	mov	r0, #0
   16f1c:	movt	r2, #1
   16f20:	ldr	r1, [pc, #164]	; 16fcc <g_boxed_type_register_static@plt+0x48a0>
   16f24:	pop	{r4, r5, r6, r7, r8, lr}
   16f28:	b	12420 <g_return_if_fail_warning@plt>
   16f2c:	movw	r2, #33272	; 0x81f8
   16f30:	ldr	r1, [pc, #148]	; 16fcc <g_boxed_type_register_static@plt+0x48a0>
   16f34:	movt	r2, #1
   16f38:	pop	{r4, r5, r6, r7, r8, lr}
   16f3c:	b	12420 <g_return_if_fail_warning@plt>
   16f40:	ldr	r3, [r8, #28]
   16f44:	cmp	r3, #0
   16f48:	bne	16f14 <g_boxed_type_register_static@plt+0x47e8>
   16f4c:	ldr	r3, [r7, #12]
   16f50:	cmp	r3, #0
   16f54:	beq	16f70 <g_boxed_type_register_static@plt+0x4844>
   16f58:	movw	r2, #33352	; 0x8248
   16f5c:	mov	r0, #0
   16f60:	movt	r2, #1
   16f64:	ldr	r1, [pc, #96]	; 16fcc <g_boxed_type_register_static@plt+0x48a0>
   16f68:	pop	{r4, r5, r6, r7, r8, lr}
   16f6c:	b	12420 <g_return_if_fail_warning@plt>
   16f70:	ldr	r3, [r7, #16]
   16f74:	cmp	r3, #0
   16f78:	bne	16f58 <g_boxed_type_register_static@plt+0x482c>
   16f7c:	ldr	r4, [r8, #32]
   16f80:	add	r5, r8, #32
   16f84:	cmp	r4, #0
   16f88:	beq	16fb8 <g_boxed_type_register_static@plt+0x488c>
   16f8c:	ldr	r6, [r7]
   16f90:	b	16fa4 <g_boxed_type_register_static@plt+0x4878>
   16f94:	add	r5, r4, #16
   16f98:	ldr	r4, [r4, #16]
   16f9c:	cmp	r4, #0
   16fa0:	beq	16fb8 <g_boxed_type_register_static@plt+0x488c>
   16fa4:	ldr	r0, [r4]
   16fa8:	mov	r1, r6
   16fac:	bl	126a8 <strcmp@plt>
   16fb0:	cmp	r0, #0
   16fb4:	ble	16f94 <g_boxed_type_register_static@plt+0x4868>
   16fb8:	str	r8, [r7, #12]
   16fbc:	ldr	r3, [r5]
   16fc0:	str	r3, [r7, #16]
   16fc4:	str	r7, [r5]
   16fc8:	pop	{r4, r5, r6, r7, r8, pc}
   16fcc:	strdeq	r8, [r1], -r4
   16fd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fd4:	movw	r7, #37440	; 0x9240
   16fd8:	movt	r7, #2
   16fdc:	sub	sp, sp, #160	; 0xa0
   16fe0:	mov	r5, r0
   16fe4:	mov	r0, #24
   16fe8:	ldr	ip, [r7]
   16fec:	mov	r4, r2
   16ff0:	mov	r9, r3
   16ff4:	mov	r8, r1
   16ff8:	str	ip, [sp, #156]	; 0x9c
   16ffc:	bl	12474 <g_slice_alloc@plt>
   17000:	mov	r6, r0
   17004:	bl	1266c <g_queue_new@plt>
   17008:	mov	r1, r5
   1700c:	add	r2, sp, #8
   17010:	str	r4, [r6, #16]
   17014:	mov	r5, #0
   17018:	mov	r4, #24
   1701c:	strd	r4, [r6, #8]
   17020:	str	r0, [r6]
   17024:	mov	r0, r6
   17028:	bl	16860 <g_boxed_type_register_static@plt+0x4134>
   1702c:	ldr	r2, [r6, #16]
   17030:	mov	r3, #0
   17034:	mov	r0, #0
   17038:	cmp	r2, r3
   1703c:	str	r3, [sp, #24]
   17040:	str	r3, [sp, #28]
   17044:	str	r3, [sp, #32]
   17048:	movwne	r2, #24946	; 0x6172
   1704c:	str	r3, [sp, #36]	; 0x24
   17050:	movweq	r2, #22087	; 0x5647
   17054:	movwne	r3, #28276	; 0x6e74
   17058:	movtne	r2, #18262	; 0x4756
   1705c:	movweq	r3, #24937	; 0x6169
   17060:	movteq	r2, #29281	; 0x7261
   17064:	ldr	r5, [sp, #8]
   17068:	movtne	r3, #26977	; 0x6961
   1706c:	ldr	r4, [sp, #12]
   17070:	movteq	r3, #29806	; 0x746e
   17074:	str	r2, [sp, #16]
   17078:	str	r3, [sp, #20]
   1707c:	bl	12288 <g_string_new@plt>
   17080:	add	r1, sp, #16
   17084:	mov	r2, #24
   17088:	str	r5, [sp, #32]
   1708c:	str	r4, [sp, #36]	; 0x24
   17090:	mov	sl, r0
   17094:	bl	12318 <g_string_append_len@plt>
   17098:	ldr	r0, [r6]
   1709c:	bl	125ac <g_queue_is_empty@plt>
   170a0:	subs	r5, r0, #0
   170a4:	ldr	r0, [r6]
   170a8:	bne	1718c <g_boxed_type_register_static@plt+0x4a60>
   170ac:	bl	12720 <g_queue_pop_head@plt>
   170b0:	ldr	r3, [sl, #4]
   170b4:	ldr	r2, [r0]
   170b8:	mov	r4, r0
   170bc:	cmp	r3, r2
   170c0:	beq	17100 <g_boxed_type_register_static@plt+0x49d4>
   170c4:	str	r5, [sp, #148]	; 0x94
   170c8:	str	r5, [sp, #152]	; 0x98
   170cc:	bcs	17128 <g_boxed_type_register_static@plt+0x49fc>
   170d0:	rsb	r2, r3, r2
   170d4:	cmp	r2, #7
   170d8:	bls	1714c <g_boxed_type_register_static@plt+0x4a20>
   170dc:	movw	r3, #33412	; 0x8284
   170e0:	movw	r1, #33060	; 0x8124
   170e4:	movt	r3, #1
   170e8:	mov	r0, r5
   170ec:	str	r3, [sp]
   170f0:	movt	r1, #1
   170f4:	movw	r2, #485	; 0x1e5
   170f8:	ldr	r3, [pc, #260]	; 17204 <g_boxed_type_register_static@plt+0x4ad8>
   170fc:	bl	122f4 <g_assertion_message_expr@plt>
   17100:	ldr	r1, [r4, #8]
   17104:	mov	r0, sl
   17108:	ldr	r2, [r4, #4]
   1710c:	bl	12318 <g_string_append_len@plt>
   17110:	ldr	r0, [r4, #8]
   17114:	bl	120c0 <g_free@plt>
   17118:	mov	r1, r4
   1711c:	mov	r0, #12
   17120:	bl	12660 <g_slice_free1@plt>
   17124:	b	17098 <g_boxed_type_register_static@plt+0x496c>
   17128:	movw	r3, #33384	; 0x8268
   1712c:	movw	r1, #33060	; 0x8124
   17130:	movt	r3, #1
   17134:	mov	r0, r5
   17138:	str	r3, [sp]
   1713c:	movt	r1, #1
   17140:	mov	r2, #484	; 0x1e4
   17144:	ldr	r3, [pc, #184]	; 17204 <g_boxed_type_register_static@plt+0x4ad8>
   17148:	bl	122f4 <g_assertion_message_expr@plt>
   1714c:	mov	r0, sl
   17150:	add	r1, sp, #148	; 0x94
   17154:	bl	12318 <g_string_append_len@plt>
   17158:	ldr	r2, [sl, #4]
   1715c:	ldr	r3, [r4]
   17160:	cmp	r2, r3
   17164:	beq	17100 <g_boxed_type_register_static@plt+0x49d4>
   17168:	movw	r3, #33444	; 0x82a4
   1716c:	movw	r1, #33060	; 0x8124
   17170:	movt	r3, #1
   17174:	mov	r0, r5
   17178:	str	r3, [sp]
   1717c:	movt	r1, #1
   17180:	mov	r2, #488	; 0x1e8
   17184:	ldr	r3, [pc, #120]	; 17204 <g_boxed_type_register_static@plt+0x4ad8>
   17188:	bl	122f4 <g_assertion_message_expr@plt>
   1718c:	bl	12294 <g_queue_free@plt>
   17190:	mov	r1, r6
   17194:	mov	r0, #24
   17198:	bl	12660 <g_slice_free1@plt>
   1719c:	mov	r1, r8
   171a0:	add	r2, sp, #40	; 0x28
   171a4:	mov	r0, #3
   171a8:	bl	124f8 <__xstat64@plt>
   171ac:	ldm	sl, {r1, r2}
   171b0:	mov	r3, r9
   171b4:	mov	r5, r0
   171b8:	mov	r0, r8
   171bc:	bl	12594 <g_file_set_contents@plt>
   171c0:	mov	r1, #1
   171c4:	mov	r4, r0
   171c8:	mov	r0, sl
   171cc:	bl	12354 <g_string_free@plt>
   171d0:	cmp	r5, #0
   171d4:	bne	171e4 <g_boxed_type_register_static@plt+0x4ab8>
   171d8:	mov	r0, r8
   171dc:	ldr	r1, [sp, #56]	; 0x38
   171e0:	bl	122a0 <chmod@plt>
   171e4:	ldr	r2, [sp, #156]	; 0x9c
   171e8:	mov	r0, r4
   171ec:	ldr	r3, [r7]
   171f0:	cmp	r2, r3
   171f4:	bne	17200 <g_boxed_type_register_static@plt+0x4ad4>
   171f8:	add	sp, sp, #160	; 0xa0
   171fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17200:	bl	1251c <__stack_chk_fail@plt>
   17204:	andeq	r8, r1, ip, lsl #2
   17208:	subs	r2, r1, #1
   1720c:	bxeq	lr
   17210:	bcc	173e8 <g_boxed_type_register_static@plt+0x4cbc>
   17214:	cmp	r0, r1
   17218:	bls	173cc <g_boxed_type_register_static@plt+0x4ca0>
   1721c:	tst	r1, r2
   17220:	beq	173d8 <g_boxed_type_register_static@plt+0x4cac>
   17224:	clz	r3, r0
   17228:	clz	r2, r1
   1722c:	sub	r3, r2, r3
   17230:	rsbs	r3, r3, #31
   17234:	addne	r3, r3, r3, lsl #1
   17238:	mov	r2, #0
   1723c:	addne	pc, pc, r3, lsl #2
   17240:	nop	{0}
   17244:	cmp	r0, r1, lsl #31
   17248:	adc	r2, r2, r2
   1724c:	subcs	r0, r0, r1, lsl #31
   17250:	cmp	r0, r1, lsl #30
   17254:	adc	r2, r2, r2
   17258:	subcs	r0, r0, r1, lsl #30
   1725c:	cmp	r0, r1, lsl #29
   17260:	adc	r2, r2, r2
   17264:	subcs	r0, r0, r1, lsl #29
   17268:	cmp	r0, r1, lsl #28
   1726c:	adc	r2, r2, r2
   17270:	subcs	r0, r0, r1, lsl #28
   17274:	cmp	r0, r1, lsl #27
   17278:	adc	r2, r2, r2
   1727c:	subcs	r0, r0, r1, lsl #27
   17280:	cmp	r0, r1, lsl #26
   17284:	adc	r2, r2, r2
   17288:	subcs	r0, r0, r1, lsl #26
   1728c:	cmp	r0, r1, lsl #25
   17290:	adc	r2, r2, r2
   17294:	subcs	r0, r0, r1, lsl #25
   17298:	cmp	r0, r1, lsl #24
   1729c:	adc	r2, r2, r2
   172a0:	subcs	r0, r0, r1, lsl #24
   172a4:	cmp	r0, r1, lsl #23
   172a8:	adc	r2, r2, r2
   172ac:	subcs	r0, r0, r1, lsl #23
   172b0:	cmp	r0, r1, lsl #22
   172b4:	adc	r2, r2, r2
   172b8:	subcs	r0, r0, r1, lsl #22
   172bc:	cmp	r0, r1, lsl #21
   172c0:	adc	r2, r2, r2
   172c4:	subcs	r0, r0, r1, lsl #21
   172c8:	cmp	r0, r1, lsl #20
   172cc:	adc	r2, r2, r2
   172d0:	subcs	r0, r0, r1, lsl #20
   172d4:	cmp	r0, r1, lsl #19
   172d8:	adc	r2, r2, r2
   172dc:	subcs	r0, r0, r1, lsl #19
   172e0:	cmp	r0, r1, lsl #18
   172e4:	adc	r2, r2, r2
   172e8:	subcs	r0, r0, r1, lsl #18
   172ec:	cmp	r0, r1, lsl #17
   172f0:	adc	r2, r2, r2
   172f4:	subcs	r0, r0, r1, lsl #17
   172f8:	cmp	r0, r1, lsl #16
   172fc:	adc	r2, r2, r2
   17300:	subcs	r0, r0, r1, lsl #16
   17304:	cmp	r0, r1, lsl #15
   17308:	adc	r2, r2, r2
   1730c:	subcs	r0, r0, r1, lsl #15
   17310:	cmp	r0, r1, lsl #14
   17314:	adc	r2, r2, r2
   17318:	subcs	r0, r0, r1, lsl #14
   1731c:	cmp	r0, r1, lsl #13
   17320:	adc	r2, r2, r2
   17324:	subcs	r0, r0, r1, lsl #13
   17328:	cmp	r0, r1, lsl #12
   1732c:	adc	r2, r2, r2
   17330:	subcs	r0, r0, r1, lsl #12
   17334:	cmp	r0, r1, lsl #11
   17338:	adc	r2, r2, r2
   1733c:	subcs	r0, r0, r1, lsl #11
   17340:	cmp	r0, r1, lsl #10
   17344:	adc	r2, r2, r2
   17348:	subcs	r0, r0, r1, lsl #10
   1734c:	cmp	r0, r1, lsl #9
   17350:	adc	r2, r2, r2
   17354:	subcs	r0, r0, r1, lsl #9
   17358:	cmp	r0, r1, lsl #8
   1735c:	adc	r2, r2, r2
   17360:	subcs	r0, r0, r1, lsl #8
   17364:	cmp	r0, r1, lsl #7
   17368:	adc	r2, r2, r2
   1736c:	subcs	r0, r0, r1, lsl #7
   17370:	cmp	r0, r1, lsl #6
   17374:	adc	r2, r2, r2
   17378:	subcs	r0, r0, r1, lsl #6
   1737c:	cmp	r0, r1, lsl #5
   17380:	adc	r2, r2, r2
   17384:	subcs	r0, r0, r1, lsl #5
   17388:	cmp	r0, r1, lsl #4
   1738c:	adc	r2, r2, r2
   17390:	subcs	r0, r0, r1, lsl #4
   17394:	cmp	r0, r1, lsl #3
   17398:	adc	r2, r2, r2
   1739c:	subcs	r0, r0, r1, lsl #3
   173a0:	cmp	r0, r1, lsl #2
   173a4:	adc	r2, r2, r2
   173a8:	subcs	r0, r0, r1, lsl #2
   173ac:	cmp	r0, r1, lsl #1
   173b0:	adc	r2, r2, r2
   173b4:	subcs	r0, r0, r1, lsl #1
   173b8:	cmp	r0, r1
   173bc:	adc	r2, r2, r2
   173c0:	subcs	r0, r0, r1
   173c4:	mov	r0, r2
   173c8:	bx	lr
   173cc:	moveq	r0, #1
   173d0:	movne	r0, #0
   173d4:	bx	lr
   173d8:	clz	r2, r1
   173dc:	rsb	r2, r2, #31
   173e0:	lsr	r0, r0, r2
   173e4:	bx	lr
   173e8:	cmp	r0, #0
   173ec:	mvnne	r0, #0
   173f0:	b	17414 <g_boxed_type_register_static@plt+0x4ce8>
   173f4:	cmp	r1, #0
   173f8:	beq	173e8 <g_boxed_type_register_static@plt+0x4cbc>
   173fc:	push	{r0, r1, lr}
   17400:	bl	17208 <g_boxed_type_register_static@plt+0x4adc>
   17404:	pop	{r1, r2, lr}
   17408:	mul	r3, r2, r0
   1740c:	sub	r1, r1, r3
   17410:	bx	lr
   17414:	push	{r1, lr}
   17418:	mov	r0, #8
   1741c:	bl	12450 <raise@plt>
   17420:	pop	{r1, pc}
   17424:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17428:	mov	r7, r0
   1742c:	ldr	r6, [pc, #76]	; 17480 <g_boxed_type_register_static@plt+0x4d54>
   17430:	mov	r8, r1
   17434:	ldr	r5, [pc, #72]	; 17484 <g_boxed_type_register_static@plt+0x4d58>
   17438:	mov	r9, r2
   1743c:	add	r6, pc, r6
   17440:	bl	120a0 <_init@@Base>
   17444:	add	r5, pc, r5
   17448:	rsb	r6, r5, r6
   1744c:	asrs	r6, r6, #2
   17450:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   17454:	sub	r5, r5, #4
   17458:	mov	r4, #0
   1745c:	add	r4, r4, #1
   17460:	ldr	r3, [r5, #4]!
   17464:	mov	r0, r7
   17468:	mov	r1, r8
   1746c:	mov	r2, r9
   17470:	blx	r3
   17474:	cmp	r4, r6
   17478:	bne	1745c <g_boxed_type_register_static@plt+0x4d30>
   1747c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17480:	muleq	r1, r4, sl
   17484:	andeq	r1, r1, r8, lsl #21
   17488:	bx	lr

Disassembly of section .fini:

0001748c <_fini@@Base>:
   1748c:	push	{r3, lr}
   17490:	pop	{r3, pc}
