
centos-preinstalled/paste:     file format elf32-littlearm


Disassembly of section .init:

00010f0c <.init>:
   10f0c:	push	{r3, lr}
   10f10:	bl	11f3c <close@plt+0xd7c>
   10f14:	pop	{r3, pc}

Disassembly of section .plt:

00010f18 <fdopen@plt-0x14>:
   10f18:	push	{lr}		; (str lr, [sp, #-4]!)
   10f1c:	ldr	lr, [pc, #4]	; 10f28 <fdopen@plt-0x4>
   10f20:	add	lr, pc, lr
   10f24:	ldr	pc, [lr, #8]!
   10f28:	ldrdeq	r5, [r1], -r8

00010f2c <fdopen@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #216]!	; 0xd8

00010f38 <calloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #208]!	; 0xd0

00010f44 <fputs_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #200]!	; 0xc8

00010f50 <raise@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #192]!	; 0xc0

00010f5c <strcmp@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #184]!	; 0xb8

00010f68 <posix_fadvise64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #176]!	; 0xb0

00010f74 <fflush@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #168]!	; 0xa8

00010f80 <free@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #160]!	; 0xa0

00010f8c <_exit@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #152]!	; 0x98

00010f98 <memcpy@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #144]!	; 0x90

00010fa4 <mbsinit@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #136]!	; 0x88

00010fb0 <fwrite_unlocked@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #128]!	; 0x80

00010fbc <memcmp@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #120]!	; 0x78

00010fc8 <dcgettext@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #112]!	; 0x70

00010fd4 <__stack_chk_fail@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #104]!	; 0x68

00010fe0 <realloc@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #96]!	; 0x60

00010fec <textdomain@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #88]!	; 0x58

00010ff8 <iswprint@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #80]!	; 0x50

00011004 <fwrite@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #72]!	; 0x48

00011010 <lseek64@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #64]!	; 0x40

0001101c <__ctype_get_mb_cur_max@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #56]!	; 0x38

00011028 <strcpy@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #48]!	; 0x30

00011034 <__fpending@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #40]!	; 0x28

00011040 <mbrtowc@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #32]!

0001104c <error@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #24]!

00011058 <open64@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #16]!

00011064 <getenv@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #8]!

00011070 <malloc@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #0]!

0001107c <__libc_start_main@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #20, 20	; 0x14000
   11084:	ldr	pc, [ip, #4088]!	; 0xff8

00011088 <__freading@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #20, 20	; 0x14000
   11090:	ldr	pc, [ip, #4080]!	; 0xff0

00011094 <__gmon_start__@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #4072]!	; 0xfe8

000110a0 <getopt_long@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ac <__ctype_b_loc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110b8 <exit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110c4 <strlen@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #4040]!	; 0xfc8

000110d0 <ungetc@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110dc <__errno_location@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110e8 <__cxa_atexit@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110f4 <memset@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #4008]!	; 0xfa8

00011100 <fscanf@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #4000]!	; 0xfa0

0001110c <__printf_chk@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #3992]!	; 0xf98

00011118 <fileno@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #3984]!	; 0xf90

00011124 <__fprintf_chk@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3976]!	; 0xf88

00011130 <fclose@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3968]!	; 0xf80

0001113c <fseeko64@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3960]!	; 0xf78

00011148 <__uflow@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3952]!	; 0xf70

00011154 <__overflow@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3944]!	; 0xf68

00011160 <setlocale@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3936]!	; 0xf60

0001116c <strrchr@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3928]!	; 0xf58

00011178 <nl_langinfo@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3920]!	; 0xf50

00011184 <clearerr_unlocked@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3912]!	; 0xf48

00011190 <fopen64@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3904]!	; 0xf40

0001119c <bindtextdomain@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3896]!	; 0xf38

000111a8 <strncmp@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3888]!	; 0xf30

000111b4 <abort@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3880]!	; 0xf28

000111c0 <close@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3872]!	; 0xf20

Disassembly of section .text:

000111cc <close_stdout@@Base-0x10ac>:
   111cc:	push	{r4, lr}
   111d0:	bl	110dc <__errno_location@plt>
   111d4:	mov	r2, #5
   111d8:	ldr	r1, [pc, #32]	; 11200 <close@plt+0x40>
   111dc:	add	r1, pc, r1
   111e0:	ldr	r4, [r0]
   111e4:	mov	r0, #0
   111e8:	bl	10fc8 <dcgettext@plt>
   111ec:	mov	r1, r4
   111f0:	mov	r2, r0
   111f4:	mov	r0, #1
   111f8:	bl	1104c <error@plt>
   111fc:	bl	111b4 <abort@plt>
   11200:	andeq	r3, r0, r0, lsl #24
   11204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11208:	sub	sp, sp, #84	; 0x54
   1120c:	mov	r4, r1
   11210:	ldr	r5, [pc, #3124]	; 11e4c <close@plt+0xc8c>
   11214:	str	r0, [sp, #28]
   11218:	ldr	r0, [r1]
   1121c:	add	r5, pc, r5
   11220:	bl	12474 <close_stdout@@Base+0x1fc>
   11224:	ldr	r1, [pc, #3108]	; 11e50 <close@plt+0xc90>
   11228:	mov	r0, #6
   1122c:	ldr	fp, [pc, #3104]	; 11e54 <close@plt+0xc94>
   11230:	add	r1, pc, r1
   11234:	ldr	r9, [pc, #3100]	; 11e58 <close@plt+0xc98>
   11238:	bl	11160 <setlocale@plt>
   1123c:	ldr	r1, [pc, #3096]	; 11e5c <close@plt+0xc9c>
   11240:	mov	r0, r5
   11244:	add	fp, pc, fp
   11248:	add	r1, pc, r1
   1124c:	ldr	r7, [pc, #3084]	; 11e60 <close@plt+0xca0>
   11250:	bl	1119c <bindtextdomain@plt>
   11254:	mov	r0, r5
   11258:	bl	10fec <textdomain@plt>
   1125c:	ldr	r3, [pc, #3072]	; 11e64 <close@plt+0xca4>
   11260:	ldr	ip, [pc, #3072]	; 11e68 <close@plt+0xca8>
   11264:	add	r9, pc, r9
   11268:	ldr	r6, [pc, #3068]	; 11e6c <close@plt+0xcac>
   1126c:	add	r7, pc, r7
   11270:	ldr	r0, [fp, r3]
   11274:	add	ip, pc, ip
   11278:	ldr	sl, [pc, #3056]	; 11e70 <close@plt+0xcb0>
   1127c:	add	r6, pc, r6
   11280:	str	ip, [sp, #32]
   11284:	bl	14da8 <close_stdout@@Base+0x2b30>
   11288:	ldr	r2, [pc, #3044]	; 11e74 <close@plt+0xcb4>
   1128c:	mov	r3, #0
   11290:	add	sl, pc, sl
   11294:	mov	r5, r3
   11298:	add	r2, pc, r2
   1129c:	strb	r3, [r2]
   112a0:	strb	r3, [r2, #1]
   112a4:	str	r5, [sp]
   112a8:	mov	r1, r4
   112ac:	ldr	r0, [sp, #28]
   112b0:	mov	r2, r7
   112b4:	mov	r3, r6
   112b8:	mov	r8, #0
   112bc:	bl	110a0 <getopt_long@plt>
   112c0:	cmn	r0, #1
   112c4:	beq	11370 <close@plt+0x1b0>
   112c8:	cmn	r0, #2
   112cc:	beq	11368 <close@plt+0x1a8>
   112d0:	ble	11310 <close@plt+0x150>
   112d4:	cmp	r0, #100	; 0x64
   112d8:	beq	112f4 <close@plt+0x134>
   112dc:	cmp	r0, #115	; 0x73
   112e0:	bne	11360 <close@plt+0x1a0>
   112e4:	ldr	ip, [sp, #32]
   112e8:	mov	lr, #1
   112ec:	strb	lr, [ip, #1]
   112f0:	b	112a4 <close@plt+0xe4>
   112f4:	ldr	r3, [pc, #2940]	; 11e78 <close@plt+0xcb8>
   112f8:	ldr	r3, [fp, r3]
   112fc:	ldr	r9, [r3]
   11300:	ldrb	r3, [r9]
   11304:	cmp	r3, #0
   11308:	moveq	r9, sl
   1130c:	b	112a4 <close@plt+0xe4>
   11310:	cmn	r0, #3
   11314:	bne	11360 <close@plt+0x1a0>
   11318:	ldr	r2, [pc, #2908]	; 11e7c <close@plt+0xcbc>
   1131c:	ldr	r3, [pc, #2908]	; 11e80 <close@plt+0xcc0>
   11320:	ldr	r1, [pc, #2908]	; 11e84 <close@plt+0xcc4>
   11324:	ldr	r0, [fp, r2]
   11328:	ldr	r3, [fp, r3]
   1132c:	add	r1, pc, r1
   11330:	ldr	r2, [pc, #2896]	; 11e88 <close@plt+0xcc8>
   11334:	ldr	r0, [r0]
   11338:	add	r2, pc, r2
   1133c:	ldr	r3, [r3]
   11340:	stm	sp, {r1, r2, r8}
   11344:	ldr	r1, [pc, #2880]	; 11e8c <close@plt+0xccc>
   11348:	ldr	r2, [pc, #2880]	; 11e90 <close@plt+0xcd0>
   1134c:	add	r1, pc, r1
   11350:	add	r2, pc, r2
   11354:	bl	14160 <close_stdout@@Base+0x1ee8>
   11358:	mov	r0, r8
   1135c:	bl	110b8 <exit@plt>
   11360:	mov	r0, #1
   11364:	bl	12034 <close@plt+0xe74>
   11368:	mov	r0, r8
   1136c:	bl	12034 <close@plt+0xe74>
   11370:	ldr	r3, [pc, #2844]	; 11e94 <close@plt+0xcd4>
   11374:	mov	r6, r9
   11378:	ldr	ip, [sp, #28]
   1137c:	ldr	sl, [fp, r3]
   11380:	ldr	r3, [sl]
   11384:	cmp	r3, ip
   11388:	beq	11c58 <close@plt+0xa98>
   1138c:	mov	r0, r9
   11390:	mov	r8, #12
   11394:	bl	14468 <close_stdout@@Base+0x21f0>
   11398:	ldr	r2, [pc, #2808]	; 11e98 <close@plt+0xcd8>
   1139c:	mov	r7, #13
   113a0:	mov	lr, #9
   113a4:	add	r2, pc, r2
   113a8:	mov	ip, #11
   113ac:	mov	r1, #0
   113b0:	add	r3, r0, #1
   113b4:	str	r0, [r2, #4]
   113b8:	mov	r0, #10
   113bc:	b	113cc <close@plt+0x20c>
   113c0:	add	r9, r9, #1
   113c4:	strb	r5, [r3, #-1]
   113c8:	add	r3, r3, #1
   113cc:	ldrb	r5, [r9]
   113d0:	sub	r2, r3, #1
   113d4:	cmp	r5, #0
   113d8:	beq	11450 <close@plt+0x290>
   113dc:	cmp	r5, #92	; 0x5c
   113e0:	bne	113c0 <close@plt+0x200>
   113e4:	ldrb	r5, [r9, #1]
   113e8:	cmp	r5, #102	; 0x66
   113ec:	beq	11c00 <close@plt+0xa40>
   113f0:	bhi	11420 <close@plt+0x260>
   113f4:	cmp	r5, #48	; 0x30
   113f8:	beq	11bf8 <close@plt+0xa38>
   113fc:	bls	11ba0 <close@plt+0x9e0>
   11400:	cmp	r5, #92	; 0x5c
   11404:	beq	11448 <close@plt+0x288>
   11408:	cmp	r5, #98	; 0x62
   1140c:	moveq	r2, #8
   11410:	strbeq	r2, [r3, #-1]
   11414:	bne	11448 <close@plt+0x288>
   11418:	add	r9, r9, #2
   1141c:	b	113c8 <close@plt+0x208>
   11420:	cmp	r5, #114	; 0x72
   11424:	strbeq	r7, [r3, #-1]
   11428:	beq	11418 <close@plt+0x258>
   1142c:	bls	11b90 <close@plt+0x9d0>
   11430:	cmp	r5, #116	; 0x74
   11434:	strbeq	lr, [r3, #-1]
   11438:	beq	11418 <close@plt+0x258>
   1143c:	cmp	r5, #118	; 0x76
   11440:	strbeq	ip, [r3, #-1]
   11444:	beq	11418 <close@plt+0x258>
   11448:	strb	r5, [r3, #-1]
   1144c:	b	11418 <close@plt+0x258>
   11450:	ldr	r3, [pc, #2628]	; 11e9c <close@plt+0xcdc>
   11454:	add	r3, pc, r3
   11458:	str	r2, [r3, #8]
   1145c:	ldr	r3, [pc, #2620]	; 11ea0 <close@plt+0xce0>
   11460:	add	r3, pc, r3
   11464:	ldrb	r5, [r3, #1]
   11468:	ldr	r3, [sl]
   1146c:	cmp	r5, #0
   11470:	bne	119ac <close@plt+0x7ec>
   11474:	ldr	ip, [sp, #28]
   11478:	add	r4, r4, r3, lsl #2
   1147c:	str	r4, [sp, #60]	; 0x3c
   11480:	rsb	ip, r3, ip
   11484:	str	ip, [sp, #28]
   11488:	add	r0, ip, #2
   1148c:	bl	14270 <close_stdout@@Base+0x1ff8>
   11490:	ldr	ip, [sp, #28]
   11494:	str	r0, [sp, #40]	; 0x28
   11498:	add	r0, ip, #1
   1149c:	cmn	r0, #-1073741823	; 0xc0000001
   114a0:	bhi	11e30 <close@plt+0xc70>
   114a4:	lsl	r0, r0, #2
   114a8:	ldr	sl, [pc, #2548]	; 11ea4 <close@plt+0xce4>
   114ac:	bl	14270 <close_stdout@@Base+0x1ff8>
   114b0:	ldr	r9, [pc, #2544]	; 11ea8 <close@plt+0xce8>
   114b4:	add	sl, pc, sl
   114b8:	ldr	r7, [pc, #2540]	; 11eac <close@plt+0xcec>
   114bc:	mov	r4, r5
   114c0:	add	r9, pc, r9
   114c4:	mov	r3, sl
   114c8:	str	r9, [sp, #32]
   114cc:	mov	sl, fp
   114d0:	add	r7, pc, r7
   114d4:	ldr	r8, [sp, #60]	; 0x3c
   114d8:	mov	r9, r4
   114dc:	mov	fp, r3
   114e0:	str	r0, [sp, #68]	; 0x44
   114e4:	b	11524 <close@plt+0x364>
   114e8:	ldr	r1, [sp, #32]
   114ec:	bl	11190 <fopen64@plt>
   114f0:	ldr	ip, [sp, #68]	; 0x44
   114f4:	cmp	r0, #0
   114f8:	mov	r6, r0
   114fc:	str	r0, [ip, r4]
   11500:	beq	11ca4 <close@plt+0xae4>
   11504:	bl	11118 <fileno@plt>
   11508:	cmp	r0, #0
   1150c:	moveq	r9, #1
   11510:	mov	r0, r6
   11514:	mov	r1, #2
   11518:	bl	12438 <close_stdout@@Base+0x1c0>
   1151c:	add	r5, r5, #1
   11520:	add	r4, r4, #4
   11524:	ldr	ip, [sp, #28]
   11528:	cmp	ip, r5
   1152c:	beq	1156c <close@plt+0x3ac>
   11530:	ldr	r0, [r8, r4]
   11534:	ldrb	r3, [r0]
   11538:	cmp	r3, #45	; 0x2d
   1153c:	bne	114e8 <close@plt+0x328>
   11540:	ldrb	r3, [r0, #1]
   11544:	cmp	r3, #0
   11548:	bne	114e8 <close@plt+0x328>
   1154c:	ldr	r3, [pc, #2396]	; 11eb0 <close@plt+0xcf0>
   11550:	mov	r2, #1
   11554:	strb	r2, [r7]
   11558:	ldr	ip, [sp, #68]	; 0x44
   1155c:	ldr	r3, [sl, r3]
   11560:	ldr	r3, [r3]
   11564:	str	r3, [ip, r4]
   11568:	b	1151c <close@plt+0x35c>
   1156c:	cmp	r9, #0
   11570:	mov	fp, sl
   11574:	beq	115b0 <close@plt+0x3f0>
   11578:	ldr	r3, [pc, #2356]	; 11eb4 <close@plt+0xcf4>
   1157c:	add	r3, pc, r3
   11580:	ldrb	r3, [r3]
   11584:	cmp	r3, #0
   11588:	beq	115b0 <close@plt+0x3f0>
   1158c:	ldr	r1, [pc, #2340]	; 11eb8 <close@plt+0xcf8>
   11590:	mov	r2, #5
   11594:	mov	r0, #0
   11598:	add	r1, pc, r1
   1159c:	bl	10fc8 <dcgettext@plt>
   115a0:	mov	r1, #0
   115a4:	mov	r2, r0
   115a8:	mov	r0, #1
   115ac:	bl	1104c <error@plt>
   115b0:	ldr	ip, [pc, #2308]	; 11ebc <close@plt+0xcfc>
   115b4:	add	ip, pc, ip
   115b8:	str	ip, [sp, #76]	; 0x4c
   115bc:	ldr	ip, [sp, #28]
   115c0:	str	ip, [sp, #36]	; 0x24
   115c4:	ldr	ip, [pc, #2292]	; 11ec0 <close@plt+0xd00>
   115c8:	add	ip, pc, ip
   115cc:	str	ip, [sp, #52]	; 0x34
   115d0:	mov	ip, #1
   115d4:	str	ip, [sp, #56]	; 0x38
   115d8:	ldr	ip, [pc, #2276]	; 11ec4 <close@plt+0xd04>
   115dc:	add	ip, pc, ip
   115e0:	str	ip, [sp, #72]	; 0x48
   115e4:	ldr	ip, [pc, #2268]	; 11ec8 <close@plt+0xd08>
   115e8:	add	ip, pc, ip
   115ec:	str	ip, [sp, #64]	; 0x40
   115f0:	ldr	ip, [sp, #36]	; 0x24
   115f4:	cmp	ip, #0
   115f8:	beq	11b54 <close@plt+0x994>
   115fc:	ldr	ip, [sp, #28]
   11600:	cmp	ip, #0
   11604:	ldr	ip, [sp, #76]	; 0x4c
   11608:	ldr	r8, [ip, #4]
   1160c:	beq	115f0 <close@plt+0x430>
   11610:	ldr	r6, [sp, #68]	; 0x44
   11614:	mov	r7, #1
   11618:	ldr	ip, [pc, #2220]	; 11ecc <close@plt+0xd0c>
   1161c:	ldr	r4, [r6], #4
   11620:	add	ip, pc, ip
   11624:	str	ip, [sp, #48]	; 0x30
   11628:	mov	ip, #0
   1162c:	cmp	r4, #0
   11630:	str	ip, [sp, #32]
   11634:	str	ip, [sp, #44]	; 0x2c
   11638:	mov	r9, ip
   1163c:	beq	11798 <close@plt+0x5d8>
   11640:	ldr	r3, [r4, #4]
   11644:	ldr	r2, [r4, #8]
   11648:	cmp	r3, r2
   1164c:	bcs	11dc8 <close@plt+0xc08>
   11650:	add	r2, r3, #1
   11654:	str	r2, [r4, #4]
   11658:	ldrb	r5, [r3]
   1165c:	bl	110dc <__errno_location@plt>
   11660:	adds	r3, r5, #1
   11664:	movne	r3, #1
   11668:	cmp	r9, #0
   1166c:	cmnne	r5, #1
   11670:	mov	sl, r0
   11674:	ldr	r1, [r0]
   11678:	beq	117d0 <close@plt+0x610>
   1167c:	ldr	r3, [pc, #2040]	; 11e7c <close@plt+0xcbc>
   11680:	mov	r1, #1
   11684:	ldr	r0, [sp, #40]	; 0x28
   11688:	mov	r2, r9
   1168c:	ldr	r3, [fp, r3]
   11690:	ldr	r3, [r3]
   11694:	bl	10fb0 <fwrite_unlocked@plt>
   11698:	cmp	r0, r9
   1169c:	bne	118dc <close@plt+0x71c>
   116a0:	mov	r9, #0
   116a4:	cmp	r5, #10
   116a8:	beq	11714 <close@plt+0x554>
   116ac:	ldr	r3, [pc, #1992]	; 11e7c <close@plt+0xcbc>
   116b0:	mov	r2, #1
   116b4:	ldr	r3, [fp, r3]
   116b8:	ldr	r0, [r3]
   116bc:	uxtb	r5, r5
   116c0:	ldr	ip, [r0, #20]
   116c4:	ldr	r1, [r0, #24]
   116c8:	cmp	ip, r1
   116cc:	addcc	r1, ip, #1
   116d0:	strcc	r1, [r0, #20]
   116d4:	strbcc	r5, [ip]
   116d8:	bcs	11c34 <close@plt+0xa74>
   116dc:	ldr	r4, [r6, #-4]
   116e0:	ldr	r1, [r4, #4]
   116e4:	ldr	r0, [r4, #8]
   116e8:	cmp	r1, r0
   116ec:	bcs	11c08 <close@plt+0xa48>
   116f0:	add	r0, r1, #1
   116f4:	str	r0, [r4, #4]
   116f8:	ldrb	r5, [r1]
   116fc:	ldr	r1, [sl]
   11700:	cmp	r5, #10
   11704:	add	r2, r2, #1
   11708:	bne	116b8 <close@plt+0x4f8>
   1170c:	cmp	r2, #0
   11710:	beq	117d8 <close@plt+0x618>
   11714:	ldr	ip, [sp, #28]
   11718:	cmp	ip, r7
   1171c:	beq	1189c <close@plt+0x6dc>
   11720:	cmp	r5, #10
   11724:	cmnne	r5, #1
   11728:	bne	11904 <close@plt+0x744>
   1172c:	ldrb	r1, [r8]
   11730:	cmp	r1, #0
   11734:	bne	11944 <close@plt+0x784>
   11738:	ldr	ip, [sp, #48]	; 0x30
   1173c:	add	r8, r8, #1
   11740:	ldr	r3, [ip, #8]
   11744:	cmp	r8, r3
   11748:	ldreq	r8, [ip, #4]
   1174c:	moveq	ip, #1
   11750:	streq	ip, [sp, #44]	; 0x2c
   11754:	movne	ip, #1
   11758:	strne	ip, [sp, #44]	; 0x2c
   1175c:	ldr	ip, [sp, #36]	; 0x24
   11760:	ldr	lr, [sp, #28]
   11764:	cmp	ip, #0
   11768:	cmpne	lr, r7
   1176c:	ldr	ip, [sp, #32]
   11770:	add	r7, r7, #1
   11774:	movls	r3, #0
   11778:	movhi	r3, #1
   1177c:	cmp	r3, #0
   11780:	add	ip, ip, #4
   11784:	str	ip, [sp, #32]
   11788:	beq	115f0 <close@plt+0x430>
   1178c:	ldr	r4, [r6], #4
   11790:	cmp	r4, #0
   11794:	bne	11640 <close@plt+0x480>
   11798:	ldr	ip, [sp, #28]
   1179c:	cmp	ip, r7
   117a0:	beq	11828 <close@plt+0x668>
   117a4:	ldrb	r3, [r8]
   117a8:	add	r8, r8, #1
   117ac:	cmp	r3, #0
   117b0:	ldrne	ip, [sp, #40]	; 0x28
   117b4:	strbne	r3, [ip, r9]
   117b8:	addne	r9, r9, #1
   117bc:	ldr	ip, [sp, #52]	; 0x34
   117c0:	ldr	r3, [ip, #8]
   117c4:	cmp	r8, r3
   117c8:	ldreq	r8, [ip, #4]
   117cc:	b	1175c <close@plt+0x59c>
   117d0:	cmp	r3, #0
   117d4:	bne	116a4 <close@plt+0x4e4>
   117d8:	ldr	r3, [r4]
   117dc:	tst	r3, #32
   117e0:	bne	118e0 <close@plt+0x720>
   117e4:	ldr	r3, [pc, #1732]	; 11eb0 <close@plt+0xcf0>
   117e8:	mov	r0, r4
   117ec:	ldr	r3, [fp, r3]
   117f0:	ldr	r3, [r3]
   117f4:	cmp	r3, r4
   117f8:	beq	1197c <close@plt+0x7bc>
   117fc:	bl	144dc <close_stdout@@Base+0x2264>
   11800:	cmn	r0, #1
   11804:	beq	11984 <close@plt+0x7c4>
   11808:	ldr	ip, [sp, #36]	; 0x24
   1180c:	mov	lr, #0
   11810:	str	lr, [r6, #-4]
   11814:	sub	ip, ip, #1
   11818:	str	ip, [sp, #36]	; 0x24
   1181c:	ldr	ip, [sp, #28]
   11820:	cmp	ip, r7
   11824:	bne	117a4 <close@plt+0x5e4>
   11828:	ldr	ip, [sp, #44]	; 0x2c
   1182c:	cmp	ip, #0
   11830:	beq	115f0 <close@plt+0x430>
   11834:	ldr	r3, [pc, #1600]	; 11e7c <close@plt+0xcbc>
   11838:	cmp	r9, #0
   1183c:	ldreq	r4, [fp, r3]
   11840:	beq	11864 <close@plt+0x6a4>
   11844:	ldr	r4, [fp, r3]
   11848:	mov	r1, #1
   1184c:	ldr	r0, [sp, #40]	; 0x28
   11850:	mov	r2, r9
   11854:	ldr	r3, [r4]
   11858:	bl	10fb0 <fwrite_unlocked@plt>
   1185c:	cmp	r0, r9
   11860:	bne	118dc <close@plt+0x71c>
   11864:	ldr	r0, [r4]
   11868:	ldr	r2, [r0, #24]
   1186c:	ldr	r3, [r0, #20]
   11870:	cmp	r3, r2
   11874:	addcc	r2, r3, #1
   11878:	strcc	r2, [r0, #20]
   1187c:	movcc	r2, #10
   11880:	strbcc	r2, [r3]
   11884:	bcc	115f0 <close@plt+0x430>
   11888:	mov	r1, #10
   1188c:	bl	11154 <__overflow@plt>
   11890:	cmp	r0, #0
   11894:	blt	118dc <close@plt+0x71c>
   11898:	b	115f0 <close@plt+0x430>
   1189c:	ldr	r3, [pc, #1496]	; 11e7c <close@plt+0xcbc>
   118a0:	cmn	r5, #1
   118a4:	uxtbne	r1, r5
   118a8:	moveq	r1, #10
   118ac:	ldr	r4, [fp, r3]
   118b0:	ldr	r0, [r4]
   118b4:	ldr	r3, [r0, #20]
   118b8:	ldr	r2, [r0, #24]
   118bc:	cmp	r3, r2
   118c0:	addcc	r2, r3, #1
   118c4:	strcc	r2, [r0, #20]
   118c8:	strbcc	r1, [r3]
   118cc:	bcc	115f0 <close@plt+0x430>
   118d0:	bl	11154 <__overflow@plt>
   118d4:	cmp	r0, #0
   118d8:	bge	115f0 <close@plt+0x430>
   118dc:	bl	111cc <close@plt+0xc>
   118e0:	ldr	ip, [sp, #32]
   118e4:	mov	r0, #0
   118e8:	ldr	lr, [sp, #60]	; 0x3c
   118ec:	ldr	r2, [sp, #64]	; 0x40
   118f0:	ldr	r3, [lr, ip]
   118f4:	bl	1104c <error@plt>
   118f8:	mov	ip, #0
   118fc:	str	ip, [sp, #56]	; 0x38
   11900:	b	117e4 <close@plt+0x624>
   11904:	ldr	r3, [pc, #1392]	; 11e7c <close@plt+0xcbc>
   11908:	uxtb	r2, r5
   1190c:	ldr	r3, [fp, r3]
   11910:	ldr	r0, [r3]
   11914:	ldr	r3, [r0, #20]
   11918:	ldr	r1, [r0, #24]
   1191c:	cmp	r3, r1
   11920:	addcc	r1, r3, #1
   11924:	strcc	r1, [r0, #20]
   11928:	strbcc	r2, [r3]
   1192c:	bcc	1172c <close@plt+0x56c>
   11930:	mov	r1, r5
   11934:	bl	11154 <__overflow@plt>
   11938:	cmp	r0, #0
   1193c:	blt	118dc <close@plt+0x71c>
   11940:	b	1172c <close@plt+0x56c>
   11944:	ldr	r3, [pc, #1328]	; 11e7c <close@plt+0xcbc>
   11948:	ldr	r3, [fp, r3]
   1194c:	ldr	r0, [r3]
   11950:	ldr	r3, [r0, #20]
   11954:	ldr	r2, [r0, #24]
   11958:	cmp	r3, r2
   1195c:	addcc	r2, r3, #1
   11960:	strcc	r2, [r0, #20]
   11964:	strbcc	r1, [r3]
   11968:	bcc	11738 <close@plt+0x578>
   1196c:	bl	11154 <__overflow@plt>
   11970:	cmp	r0, #0
   11974:	blt	118dc <close@plt+0x71c>
   11978:	b	11738 <close@plt+0x578>
   1197c:	bl	11184 <clearerr_unlocked@plt>
   11980:	b	11808 <close@plt+0x648>
   11984:	ldr	ip, [sp, #32]
   11988:	mov	r0, #0
   1198c:	ldr	lr, [sp, #60]	; 0x3c
   11990:	ldr	r1, [sl]
   11994:	ldr	r2, [sp, #72]	; 0x48
   11998:	ldr	r3, [lr, ip]
   1199c:	bl	1104c <error@plt>
   119a0:	mov	ip, #0
   119a4:	str	ip, [sp, #56]	; 0x38
   119a8:	b	11808 <close@plt+0x648>
   119ac:	mov	ip, #1
   119b0:	str	ip, [sp, #56]	; 0x38
   119b4:	ldr	ip, [pc, #1300]	; 11ed0 <close@plt+0xd10>
   119b8:	add	r8, r4, r3, lsl #2
   119bc:	ldr	r6, [pc, #1296]	; 11ed4 <close@plt+0xd14>
   119c0:	add	ip, pc, ip
   119c4:	str	ip, [sp, #40]	; 0x28
   119c8:	ldr	ip, [sp, #28]
   119cc:	add	r6, pc, r6
   119d0:	rsb	r7, r3, ip
   119d4:	ldr	ip, [pc, #1276]	; 11ed8 <close@plt+0xd18>
   119d8:	add	ip, pc, ip
   119dc:	str	ip, [sp, #44]	; 0x2c
   119e0:	ldr	ip, [pc, #1268]	; 11edc <close@plt+0xd1c>
   119e4:	add	ip, pc, ip
   119e8:	str	ip, [sp, #48]	; 0x30
   119ec:	ldr	ip, [pc, #1260]	; 11ee0 <close@plt+0xd20>
   119f0:	add	ip, pc, ip
   119f4:	str	ip, [sp, #52]	; 0x34
   119f8:	cmp	r7, #0
   119fc:	beq	11b64 <close@plt+0x9a4>
   11a00:	ldr	r0, [r8], #4
   11a04:	ldrb	r3, [r0]
   11a08:	cmp	r3, #45	; 0x2d
   11a0c:	beq	11b24 <close@plt+0x964>
   11a10:	ldr	r1, [sp, #52]	; 0x34
   11a14:	bl	11190 <fopen64@plt>
   11a18:	subs	r4, r0, #0
   11a1c:	beq	11cc0 <close@plt+0xb00>
   11a20:	mov	r1, #2
   11a24:	mov	ip, #0
   11a28:	str	ip, [sp, #28]
   11a2c:	bl	12438 <close_stdout@@Base+0x1c0>
   11a30:	ldr	r2, [r4, #4]
   11a34:	ldr	r1, [r4, #8]
   11a38:	ldr	ip, [sp, #40]	; 0x28
   11a3c:	cmp	r2, r1
   11a40:	ldr	sl, [ip, #4]
   11a44:	bcs	11cec <close@plt+0xb2c>
   11a48:	add	r0, r2, #1
   11a4c:	str	r0, [r4, #4]
   11a50:	ldrb	r5, [r2]
   11a54:	str	r1, [sp, #24]
   11a58:	bl	110dc <__errno_location@plt>
   11a5c:	ldr	r1, [sp, #24]
   11a60:	str	r0, [sp, #32]
   11a64:	ldr	r2, [pc, #1040]	; 11e7c <close@plt+0xcbc>
   11a68:	ldr	r2, [fp, r2]
   11a6c:	str	r7, [sp, #36]	; 0x24
   11a70:	mov	r7, r6
   11a74:	mov	r6, r2
   11a78:	b	11aa0 <close@plt+0x8e0>
   11a7c:	ldrb	r1, [sl]
   11a80:	cmp	r1, #0
   11a84:	bne	11af4 <close@plt+0x934>
   11a88:	ldr	r3, [r7, #8]
   11a8c:	add	sl, sl, #1
   11a90:	cmp	sl, r3
   11a94:	ldreq	sl, [r7, #4]
   11a98:	ldr	r1, [r4, #8]
   11a9c:	mov	r5, r9
   11aa0:	ldr	r3, [r4, #4]
   11aa4:	cmp	r3, r1
   11aa8:	bcs	11dd8 <close@plt+0xc18>
   11aac:	add	r1, r3, #1
   11ab0:	str	r1, [r4, #4]
   11ab4:	ldrb	r9, [r3]
   11ab8:	cmp	r5, #10
   11abc:	beq	11a7c <close@plt+0x8bc>
   11ac0:	ldr	r0, [r6]
   11ac4:	uxtb	r1, r5
   11ac8:	ldr	r3, [r0, #20]
   11acc:	ldr	ip, [r0, #24]
   11ad0:	cmp	r3, ip
   11ad4:	addcc	ip, r3, #1
   11ad8:	strcc	ip, [r0, #20]
   11adc:	strbcc	r1, [r3]
   11ae0:	bcc	11a98 <close@plt+0x8d8>
   11ae4:	bl	11154 <__overflow@plt>
   11ae8:	cmp	r0, #0
   11aec:	blt	118dc <close@plt+0x71c>
   11af0:	b	11a98 <close@plt+0x8d8>
   11af4:	ldr	r0, [r6]
   11af8:	ldr	r3, [r0, #20]
   11afc:	ldr	ip, [r0, #24]
   11b00:	cmp	r3, ip
   11b04:	addcc	ip, r3, #1
   11b08:	strcc	ip, [r0, #20]
   11b0c:	strbcc	r1, [r3]
   11b10:	bcc	11a88 <close@plt+0x8c8>
   11b14:	bl	11154 <__overflow@plt>
   11b18:	cmp	r0, #0
   11b1c:	blt	118dc <close@plt+0x71c>
   11b20:	b	11a88 <close@plt+0x8c8>
   11b24:	ldrb	r3, [r0, #1]
   11b28:	cmp	r3, #0
   11b2c:	bne	11a10 <close@plt+0x850>
   11b30:	ldr	r1, [pc, #940]	; 11ee4 <close@plt+0xd24>
   11b34:	mov	r3, #1
   11b38:	ldr	r2, [pc, #880]	; 11eb0 <close@plt+0xcf0>
   11b3c:	add	r1, pc, r1
   11b40:	str	r3, [sp, #28]
   11b44:	strb	r3, [r1]
   11b48:	ldr	r3, [fp, r2]
   11b4c:	ldr	r4, [r3]
   11b50:	b	11a30 <close@plt+0x870>
   11b54:	ldr	r0, [sp, #68]	; 0x44
   11b58:	bl	10f80 <free@plt>
   11b5c:	ldr	r0, [sp, #40]	; 0x28
   11b60:	bl	10f80 <free@plt>
   11b64:	ldr	r4, [pc, #892]	; 11ee8 <close@plt+0xd28>
   11b68:	add	r4, pc, r4
   11b6c:	ldr	r0, [r4, #4]
   11b70:	bl	10f80 <free@plt>
   11b74:	ldrb	r3, [r4]
   11b78:	cmp	r3, #0
   11b7c:	bne	11c70 <close@plt+0xab0>
   11b80:	ldr	ip, [sp, #56]	; 0x38
   11b84:	rsbs	r0, ip, #1
   11b88:	movcc	r0, #0
   11b8c:	bl	110b8 <exit@plt>
   11b90:	cmp	r5, #110	; 0x6e
   11b94:	strbeq	r0, [r3, #-1]
   11b98:	beq	11418 <close@plt+0x258>
   11b9c:	b	11448 <close@plt+0x288>
   11ba0:	cmp	r5, #0
   11ba4:	bne	11448 <close@plt+0x288>
   11ba8:	ldr	r3, [pc, #828]	; 11eec <close@plt+0xd2c>
   11bac:	mov	r0, r5
   11bb0:	mov	r1, #5
   11bb4:	add	r3, pc, r3
   11bb8:	str	r2, [r3, #8]
   11bbc:	bl	13664 <close_stdout@@Base+0x13ec>
   11bc0:	ldr	r1, [pc, #808]	; 11ef0 <close@plt+0xd30>
   11bc4:	mov	r2, #5
   11bc8:	mov	r0, r5
   11bcc:	add	r1, pc, r1
   11bd0:	bl	10fc8 <dcgettext@plt>
   11bd4:	mov	r7, r0
   11bd8:	mov	r0, r6
   11bdc:	bl	13b70 <close_stdout@@Base+0x18f8>
   11be0:	mov	r2, r7
   11be4:	mov	r1, r5
   11be8:	mov	r3, r0
   11bec:	mov	r0, #1
   11bf0:	bl	1104c <error@plt>
   11bf4:	b	1145c <close@plt+0x29c>
   11bf8:	strb	r1, [r3, #-1]
   11bfc:	b	11418 <close@plt+0x258>
   11c00:	strb	r8, [r3, #-1]
   11c04:	b	11418 <close@plt+0x258>
   11c08:	mov	r0, r4
   11c0c:	str	r2, [sp, #20]
   11c10:	str	r3, [sp, #24]
   11c14:	bl	11148 <__uflow@plt>
   11c18:	ldr	r1, [sl]
   11c1c:	ldr	r2, [sp, #20]
   11c20:	ldr	r3, [sp, #24]
   11c24:	cmn	r0, #1
   11c28:	mov	r5, r0
   11c2c:	beq	1170c <close@plt+0x54c>
   11c30:	b	11700 <close@plt+0x540>
   11c34:	mov	r1, r5
   11c38:	str	r2, [sp, #20]
   11c3c:	str	r3, [sp, #24]
   11c40:	bl	11154 <__overflow@plt>
   11c44:	ldr	r2, [sp, #20]
   11c48:	ldr	r3, [sp, #24]
   11c4c:	cmp	r0, #0
   11c50:	blt	118dc <close@plt+0x71c>
   11c54:	b	116dc <close@plt+0x51c>
   11c58:	ldr	r2, [pc, #660]	; 11ef4 <close@plt+0xd34>
   11c5c:	add	ip, ip, #1
   11c60:	str	ip, [sp, #28]
   11c64:	add	r2, pc, r2
   11c68:	str	r2, [r4, r3, lsl #2]
   11c6c:	b	1138c <close@plt+0x1cc>
   11c70:	ldr	r3, [pc, #568]	; 11eb0 <close@plt+0xcf0>
   11c74:	ldr	r3, [fp, r3]
   11c78:	ldr	r0, [r3]
   11c7c:	bl	144dc <close_stdout@@Base+0x2264>
   11c80:	cmn	r0, #1
   11c84:	bne	11b80 <close@plt+0x9c0>
   11c88:	bl	110dc <__errno_location@plt>
   11c8c:	ldr	r2, [pc, #612]	; 11ef8 <close@plt+0xd38>
   11c90:	add	r2, pc, r2
   11c94:	ldr	r1, [r0]
   11c98:	mov	r0, #1
   11c9c:	bl	1104c <error@plt>
   11ca0:	b	11b80 <close@plt+0x9c0>
   11ca4:	bl	110dc <__errno_location@plt>
   11ca8:	mov	r2, fp
   11cac:	ldr	r3, [r8, r4]
   11cb0:	ldr	r1, [r0]
   11cb4:	mov	r0, #1
   11cb8:	bl	1104c <error@plt>
   11cbc:	b	11510 <close@plt+0x350>
   11cc0:	bl	110dc <__errno_location@plt>
   11cc4:	ldr	r2, [pc, #560]	; 11efc <close@plt+0xd3c>
   11cc8:	str	r4, [sp, #56]	; 0x38
   11ccc:	add	r2, pc, r2
   11cd0:	mov	r3, r0
   11cd4:	mov	r0, r4
   11cd8:	ldr	r1, [r3]
   11cdc:	ldr	r3, [r8, #-4]
   11ce0:	bl	1104c <error@plt>
   11ce4:	sub	r7, r7, #1
   11ce8:	b	119f8 <close@plt+0x838>
   11cec:	mov	r0, r4
   11cf0:	bl	11148 <__uflow@plt>
   11cf4:	mov	r5, r0
   11cf8:	bl	110dc <__errno_location@plt>
   11cfc:	cmn	r5, #1
   11d00:	str	r0, [sp, #32]
   11d04:	ldr	r9, [r0]
   11d08:	bne	11dc0 <close@plt+0xc00>
   11d0c:	ldr	r3, [pc, #360]	; 11e7c <close@plt+0xcbc>
   11d10:	ldr	r2, [fp, r3]
   11d14:	ldr	r0, [r2]
   11d18:	ldr	r2, [r0, #24]
   11d1c:	ldr	r3, [r0, #20]
   11d20:	cmp	r3, r2
   11d24:	addcc	r2, r3, #1
   11d28:	strcc	r2, [r0, #20]
   11d2c:	movcc	r2, #10
   11d30:	strbcc	r2, [r3]
   11d34:	bcs	11dac <close@plt+0xbec>
   11d38:	ldr	r3, [r4]
   11d3c:	tst	r3, #32
   11d40:	bne	11d8c <close@plt+0xbcc>
   11d44:	ldr	ip, [sp, #28]
   11d48:	mov	r0, r4
   11d4c:	cmp	ip, #0
   11d50:	beq	11d5c <close@plt+0xb9c>
   11d54:	bl	11184 <clearerr_unlocked@plt>
   11d58:	b	11ce4 <close@plt+0xb24>
   11d5c:	bl	144dc <close_stdout@@Base+0x2264>
   11d60:	cmn	r0, #1
   11d64:	bne	11ce4 <close@plt+0xb24>
   11d68:	ldr	ip, [sp, #32]
   11d6c:	ldr	r0, [sp, #28]
   11d70:	ldr	r2, [sp, #44]	; 0x2c
   11d74:	ldr	r1, [ip]
   11d78:	ldr	r3, [r8, #-4]
   11d7c:	bl	1104c <error@plt>
   11d80:	ldr	ip, [sp, #28]
   11d84:	str	ip, [sp, #56]	; 0x38
   11d88:	b	11ce4 <close@plt+0xb24>
   11d8c:	mov	r1, r9
   11d90:	mov	r0, #0
   11d94:	ldr	r2, [sp, #48]	; 0x30
   11d98:	ldr	r3, [r8, #-4]
   11d9c:	bl	1104c <error@plt>
   11da0:	mov	ip, #0
   11da4:	str	ip, [sp, #56]	; 0x38
   11da8:	b	11d44 <close@plt+0xb84>
   11dac:	mov	r1, #10
   11db0:	bl	11154 <__overflow@plt>
   11db4:	cmp	r0, #0
   11db8:	blt	118dc <close@plt+0x71c>
   11dbc:	b	11d38 <close@plt+0xb78>
   11dc0:	ldr	r1, [r4, #8]
   11dc4:	b	11a64 <close@plt+0x8a4>
   11dc8:	mov	r0, r4
   11dcc:	bl	11148 <__uflow@plt>
   11dd0:	mov	r5, r0
   11dd4:	b	1165c <close@plt+0x49c>
   11dd8:	mov	r0, r4
   11ddc:	bl	11148 <__uflow@plt>
   11de0:	cmn	r0, #1
   11de4:	mov	r9, r0
   11de8:	bne	11ab8 <close@plt+0x8f8>
   11dec:	mov	r2, r6
   11df0:	ldr	ip, [sp, #32]
   11df4:	ldr	r0, [r2]
   11df8:	mov	r6, r7
   11dfc:	uxtb	r1, r5
   11e00:	ldr	r7, [sp, #36]	; 0x24
   11e04:	ldr	r9, [ip]
   11e08:	ldr	r3, [r0, #20]
   11e0c:	ldr	lr, [r0, #24]
   11e10:	cmp	r3, lr
   11e14:	addcc	lr, r3, #1
   11e18:	strcc	lr, [r0, #20]
   11e1c:	strbcc	r1, [r3]
   11e20:	bcs	11e34 <close@plt+0xc74>
   11e24:	cmp	r5, #10
   11e28:	beq	11d38 <close@plt+0xb78>
   11e2c:	b	11d14 <close@plt+0xb54>
   11e30:	bl	14484 <close_stdout@@Base+0x220c>
   11e34:	str	r2, [sp, #20]
   11e38:	bl	11154 <__overflow@plt>
   11e3c:	ldr	r2, [sp, #20]
   11e40:	cmp	r0, #0
   11e44:	blt	118dc <close@plt+0x71c>
   11e48:	b	11e24 <close@plt+0xc64>
   11e4c:	andeq	r3, r0, r8, lsr #28
   11e50:	ldrdeq	r3, [r0], -r4
   11e54:			; <UNDEFINED> instruction: 0x00014db4
   11e58:	andeq	r3, r0, r8, lsr #29
   11e5c:	andeq	r3, r0, r8, asr #29
   11e60:	andeq	r3, r0, r0, ror #29
   11e64:	andeq	r0, r0, r0, lsl #2
   11e68:	andeq	r4, r1, r0, lsl #30
   11e6c:	andeq	r4, r1, r0, lsl ip
   11e70:	andeq	r3, r0, r8, ror lr
   11e74:	ldrdeq	r4, [r1], -ip
   11e78:	andeq	r0, r0, r8, lsr #2
   11e7c:	andeq	r0, r0, r0, lsl r1
   11e80:	strdeq	r0, [r0], -r8
   11e84:	andeq	r3, r0, r0, lsl #28
   11e88:	andeq	r3, r0, r4, lsl #28
   11e8c:	ldrdeq	r3, [r0], -r8
   11e90:	strdeq	r3, [r0], -r0
   11e94:	strdeq	r0, [r0], -r4
   11e98:	ldrdeq	r4, [r1], -r0
   11e9c:	andeq	r4, r1, r0, lsr #26
   11ea0:	andeq	r4, r1, r4, lsl sp
   11ea4:	andeq	r3, r0, r4, lsr #26
   11ea8:	muleq	r0, r4, ip
   11eac:	andeq	r4, r1, r4, lsr #25
   11eb0:	andeq	r0, r0, ip, lsl #2
   11eb4:	strdeq	r4, [r1], -r8
   11eb8:	andeq	r3, r0, r0, asr #23
   11ebc:	andeq	r4, r1, r0, asr #23
   11ec0:	andeq	r4, r1, ip, lsr #23
   11ec4:	strdeq	r3, [r0], -ip
   11ec8:	strdeq	r3, [r0], -r0
   11ecc:	andeq	r4, r1, r4, asr fp
   11ed0:			; <UNDEFINED> instruction: 0x000147b4
   11ed4:	andeq	r4, r1, r8, lsr #15
   11ed8:	andeq	r3, r0, r0, lsl #16
   11edc:	strdeq	r3, [r0], -r4
   11ee0:	andeq	r3, r0, r4, ror #14
   11ee4:	andeq	r4, r1, r8, lsr r6
   11ee8:	andeq	r4, r1, ip, lsl #12
   11eec:	andeq	r4, r1, r0, asr #11
   11ef0:	andeq	r3, r0, r8, lsr #11
   11ef4:	andeq	r3, r0, ip, ror #9
   11ef8:	andeq	r3, r0, r0, asr #9
   11efc:	andeq	r3, r0, ip, lsl #10
   11f00:	mov	fp, #0
   11f04:	mov	lr, #0
   11f08:	pop	{r1}		; (ldr r1, [sp], #4)
   11f0c:	mov	r2, sp
   11f10:	push	{r2}		; (str r2, [sp, #-4]!)
   11f14:	push	{r0}		; (str r0, [sp, #-4]!)
   11f18:	ldr	ip, [pc, #16]	; 11f30 <close@plt+0xd70>
   11f1c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f20:	ldr	r0, [pc, #12]	; 11f34 <close@plt+0xd74>
   11f24:	ldr	r3, [pc, #12]	; 11f38 <close@plt+0xd78>
   11f28:	bl	1107c <__libc_start_main@plt>
   11f2c:	bl	111b4 <abort@plt>
   11f30:	andeq	r4, r1, r4, lsr #27
   11f34:	andeq	r1, r1, r4, lsl #4
   11f38:	andeq	r4, r1, r0, asr #26
   11f3c:	ldr	r3, [pc, #20]	; 11f58 <close@plt+0xd98>
   11f40:	ldr	r2, [pc, #20]	; 11f5c <close@plt+0xd9c>
   11f44:	add	r3, pc, r3
   11f48:	ldr	r2, [r3, r2]
   11f4c:	cmp	r2, #0
   11f50:	bxeq	lr
   11f54:	b	11094 <__gmon_start__@plt>
   11f58:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   11f5c:	andeq	r0, r0, r4, lsl #2
   11f60:	push	{r3, lr}
   11f64:	movw	r0, #24952	; 0x6178
   11f68:	ldr	r3, [pc, #36]	; 11f94 <close@plt+0xdd4>
   11f6c:	movt	r0, #2
   11f70:	rsb	r3, r0, r3
   11f74:	cmp	r3, #6
   11f78:	popls	{r3, pc}
   11f7c:	movw	r3, #0
   11f80:	movt	r3, #0
   11f84:	cmp	r3, #0
   11f88:	popeq	{r3, pc}
   11f8c:	blx	r3
   11f90:	pop	{r3, pc}
   11f94:	andeq	r6, r2, fp, ror r1
   11f98:	push	{r3, lr}
   11f9c:	movw	r0, #24952	; 0x6178
   11fa0:	movw	r3, #24952	; 0x6178
   11fa4:	movt	r0, #2
   11fa8:	movt	r3, #2
   11fac:	rsb	r3, r0, r3
   11fb0:	asr	r3, r3, #2
   11fb4:	add	r3, r3, r3, lsr #31
   11fb8:	asrs	r1, r3, #1
   11fbc:	popeq	{r3, pc}
   11fc0:	movw	r2, #0
   11fc4:	movt	r2, #0
   11fc8:	cmp	r2, #0
   11fcc:	popeq	{r3, pc}
   11fd0:	blx	r2
   11fd4:	pop	{r3, pc}
   11fd8:	push	{r4, lr}
   11fdc:	movw	r4, #24952	; 0x6178
   11fe0:	movt	r4, #2
   11fe4:	ldrb	r3, [r4]
   11fe8:	cmp	r3, #0
   11fec:	popne	{r4, pc}
   11ff0:	bl	11f60 <close@plt+0xda0>
   11ff4:	mov	r3, #1
   11ff8:	strb	r3, [r4]
   11ffc:	pop	{r4, pc}
   12000:	movw	r0, #24208	; 0x5e90
   12004:	movt	r0, #2
   12008:	push	{r3, lr}
   1200c:	ldr	r3, [r0]
   12010:	cmp	r3, #0
   12014:	beq	1202c <close@plt+0xe6c>
   12018:	movw	r3, #0
   1201c:	movt	r3, #0
   12020:	cmp	r3, #0
   12024:	beq	1202c <close@plt+0xe6c>
   12028:	blx	r3
   1202c:	pop	{r3, lr}
   12030:	b	11f98 <close@plt+0xdd8>
   12034:	push	{r4, r5, r6, lr}
   12038:	subs	r4, r0, #0
   1203c:	ldr	r5, [pc, #456]	; 1220c <close@plt+0x104c>
   12040:	add	r5, pc, r5
   12044:	beq	1208c <close@plt+0xecc>
   12048:	ldr	r3, [pc, #448]	; 12210 <close@plt+0x1050>
   1204c:	mov	r2, #5
   12050:	ldr	r1, [pc, #444]	; 12214 <close@plt+0x1054>
   12054:	mov	r0, #0
   12058:	ldr	r3, [r5, r3]
   1205c:	add	r1, pc, r1
   12060:	ldr	r6, [r3]
   12064:	bl	10fc8 <dcgettext@plt>
   12068:	ldr	r3, [pc, #424]	; 12218 <close@plt+0x1058>
   1206c:	mov	r1, #1
   12070:	ldr	r3, [r5, r3]
   12074:	ldr	r3, [r3]
   12078:	mov	r2, r0
   1207c:	mov	r0, r6
   12080:	bl	11124 <__fprintf_chk@plt>
   12084:	mov	r0, r4
   12088:	bl	110b8 <exit@plt>
   1208c:	ldr	r1, [pc, #392]	; 1221c <close@plt+0x105c>
   12090:	mov	r2, #5
   12094:	add	r1, pc, r1
   12098:	bl	10fc8 <dcgettext@plt>
   1209c:	ldr	r3, [pc, #372]	; 12218 <close@plt+0x1058>
   120a0:	ldr	r6, [r5, r3]
   120a4:	ldr	r2, [r6]
   120a8:	mov	r1, r0
   120ac:	mov	r0, #1
   120b0:	bl	1110c <__printf_chk@plt>
   120b4:	ldr	r1, [pc, #356]	; 12220 <close@plt+0x1060>
   120b8:	mov	r2, #5
   120bc:	mov	r0, r4
   120c0:	add	r1, pc, r1
   120c4:	bl	10fc8 <dcgettext@plt>
   120c8:	ldr	r3, [pc, #340]	; 12224 <close@plt+0x1064>
   120cc:	ldr	r5, [r5, r3]
   120d0:	ldr	r1, [r5]
   120d4:	bl	10f44 <fputs_unlocked@plt>
   120d8:	ldr	r1, [pc, #328]	; 12228 <close@plt+0x1068>
   120dc:	mov	r2, #5
   120e0:	mov	r0, r4
   120e4:	add	r1, pc, r1
   120e8:	bl	10fc8 <dcgettext@plt>
   120ec:	ldr	r1, [r5]
   120f0:	bl	10f44 <fputs_unlocked@plt>
   120f4:	ldr	r1, [pc, #304]	; 1222c <close@plt+0x106c>
   120f8:	mov	r2, #5
   120fc:	mov	r0, r4
   12100:	add	r1, pc, r1
   12104:	bl	10fc8 <dcgettext@plt>
   12108:	ldr	r1, [r5]
   1210c:	bl	10f44 <fputs_unlocked@plt>
   12110:	ldr	r1, [pc, #280]	; 12230 <close@plt+0x1070>
   12114:	mov	r2, #5
   12118:	mov	r0, r4
   1211c:	add	r1, pc, r1
   12120:	bl	10fc8 <dcgettext@plt>
   12124:	ldr	r1, [r5]
   12128:	bl	10f44 <fputs_unlocked@plt>
   1212c:	ldr	r1, [pc, #256]	; 12234 <close@plt+0x1074>
   12130:	mov	r2, #5
   12134:	mov	r0, r4
   12138:	add	r1, pc, r1
   1213c:	bl	10fc8 <dcgettext@plt>
   12140:	ldr	r1, [r5]
   12144:	bl	10f44 <fputs_unlocked@plt>
   12148:	ldr	r1, [pc, #232]	; 12238 <close@plt+0x1078>
   1214c:	mov	r2, #5
   12150:	mov	r0, r4
   12154:	add	r1, pc, r1
   12158:	bl	10fc8 <dcgettext@plt>
   1215c:	ldr	r2, [pc, #216]	; 1223c <close@plt+0x107c>
   12160:	ldr	r3, [pc, #216]	; 12240 <close@plt+0x1080>
   12164:	add	r2, pc, r2
   12168:	add	r3, pc, r3
   1216c:	mov	r1, r0
   12170:	mov	r0, #1
   12174:	bl	1110c <__printf_chk@plt>
   12178:	mov	r0, #5
   1217c:	mov	r1, r4
   12180:	bl	11160 <setlocale@plt>
   12184:	cmp	r0, #0
   12188:	beq	121a4 <close@plt+0xfe4>
   1218c:	ldr	r1, [pc, #176]	; 12244 <close@plt+0x1084>
   12190:	mov	r2, #3
   12194:	add	r1, pc, r1
   12198:	bl	111a8 <strncmp@plt>
   1219c:	cmp	r0, #0
   121a0:	bne	121d8 <close@plt+0x1018>
   121a4:	ldr	r1, [pc, #156]	; 12248 <close@plt+0x1088>
   121a8:	mov	r2, #5
   121ac:	mov	r0, #0
   121b0:	add	r1, pc, r1
   121b4:	bl	10fc8 <dcgettext@plt>
   121b8:	mov	r5, r0
   121bc:	ldr	r0, [r6]
   121c0:	bl	12390 <close_stdout@@Base+0x118>
   121c4:	mov	r1, r5
   121c8:	mov	r2, r0
   121cc:	mov	r0, #1
   121d0:	bl	1110c <__printf_chk@plt>
   121d4:	b	12084 <close@plt+0xec4>
   121d8:	ldr	r1, [pc, #108]	; 1224c <close@plt+0x108c>
   121dc:	mov	r2, #5
   121e0:	mov	r0, r4
   121e4:	add	r1, pc, r1
   121e8:	bl	10fc8 <dcgettext@plt>
   121ec:	mov	r5, r0
   121f0:	ldr	r0, [r6]
   121f4:	bl	12390 <close_stdout@@Base+0x118>
   121f8:	mov	r1, r5
   121fc:	mov	r2, r0
   12200:	mov	r0, #1
   12204:	bl	1110c <__printf_chk@plt>
   12208:	b	121a4 <close@plt+0xfe4>
   1220c:			; <UNDEFINED> instruction: 0x00013fb8
   12210:	strdeq	r0, [r0], -ip
   12214:	andeq	r2, r0, ip, lsl #27
   12218:	andeq	r0, r0, ip, lsl r1
   1221c:	andeq	r2, r0, ip, ror sp
   12220:	andeq	r2, r0, r4, ror sp
   12224:	andeq	r0, r0, r0, lsl r1
   12228:	andeq	r2, r0, r0, lsl #28
   1222c:	andeq	r2, r0, r0, lsr lr
   12230:	andeq	r2, r0, r4, lsr #29
   12234:			; <UNDEFINED> instruction: 0x00002eb8
   12238:	ldrdeq	r2, [r0], -r4
   1223c:	ldrdeq	r2, [r0], -ip
   12240:	andeq	r2, r0, r8, ror #29
   12244:	andeq	r2, r0, r4, ror #29
   12248:	andeq	r2, r0, r4, lsl pc
   1224c:	muleq	r0, r8, lr
   12250:	ldr	r3, [pc, #8]	; 12260 <close@plt+0x10a0>
   12254:	add	r3, pc, r3
   12258:	str	r0, [r3]
   1225c:	bx	lr
   12260:	andeq	r3, r1, ip, lsr #30
   12264:	ldr	r3, [pc, #8]	; 12274 <close@plt+0x10b4>
   12268:	add	r3, pc, r3
   1226c:	strb	r0, [r3, #4]
   12270:	bx	lr
   12274:	andeq	r3, r1, r8, lsl pc

00012278 <close_stdout@@Base>:
   12278:	push	{r4, r5, r6, r7, lr}
   1227c:	sub	sp, sp, #12
   12280:	ldr	r4, [pc, #228]	; 1236c <close_stdout@@Base+0xf4>
   12284:	ldr	r3, [pc, #228]	; 12370 <close_stdout@@Base+0xf8>
   12288:	add	r4, pc, r4
   1228c:	ldr	r3, [r4, r3]
   12290:	ldr	r0, [r3]
   12294:	bl	14684 <close_stdout@@Base+0x240c>
   12298:	cmp	r0, #0
   1229c:	beq	122c4 <close_stdout@@Base+0x4c>
   122a0:	ldr	r3, [pc, #204]	; 12374 <close_stdout@@Base+0xfc>
   122a4:	add	r3, pc, r3
   122a8:	ldrb	r3, [r3, #4]
   122ac:	cmp	r3, #0
   122b0:	beq	122e4 <close_stdout@@Base+0x6c>
   122b4:	bl	110dc <__errno_location@plt>
   122b8:	ldr	r3, [r0]
   122bc:	cmp	r3, #32
   122c0:	bne	122e4 <close_stdout@@Base+0x6c>
   122c4:	ldr	r3, [pc, #172]	; 12378 <close_stdout@@Base+0x100>
   122c8:	ldr	r3, [r4, r3]
   122cc:	ldr	r0, [r3]
   122d0:	bl	14684 <close_stdout@@Base+0x240c>
   122d4:	cmp	r0, #0
   122d8:	bne	12338 <close_stdout@@Base+0xc0>
   122dc:	add	sp, sp, #12
   122e0:	pop	{r4, r5, r6, r7, pc}
   122e4:	ldr	r1, [pc, #144]	; 1237c <close_stdout@@Base+0x104>
   122e8:	mov	r0, #0
   122ec:	mov	r2, #5
   122f0:	add	r1, pc, r1
   122f4:	bl	10fc8 <dcgettext@plt>
   122f8:	ldr	r3, [pc, #128]	; 12380 <close_stdout@@Base+0x108>
   122fc:	ldr	r5, [pc, r3]
   12300:	cmp	r5, #0
   12304:	mov	r6, r0
   12308:	beq	12348 <close_stdout@@Base+0xd0>
   1230c:	bl	110dc <__errno_location@plt>
   12310:	ldr	r7, [r0]
   12314:	mov	r0, r5
   12318:	bl	13b70 <close_stdout@@Base+0x18f8>
   1231c:	ldr	r2, [pc, #96]	; 12384 <close_stdout@@Base+0x10c>
   12320:	str	r6, [sp]
   12324:	mov	r1, r7
   12328:	add	r2, pc, r2
   1232c:	mov	r3, r0
   12330:	mov	r0, #0
   12334:	bl	1104c <error@plt>
   12338:	ldr	r3, [pc, #72]	; 12388 <close_stdout@@Base+0x110>
   1233c:	ldr	r3, [r4, r3]
   12340:	ldr	r0, [r3]
   12344:	bl	10f8c <_exit@plt>
   12348:	bl	110dc <__errno_location@plt>
   1234c:	ldr	r2, [pc, #56]	; 1238c <close_stdout@@Base+0x114>
   12350:	add	r2, pc, r2
   12354:	mov	r3, r0
   12358:	mov	r0, r5
   1235c:	ldr	r1, [r3]
   12360:	mov	r3, r6
   12364:	bl	1104c <error@plt>
   12368:	b	12338 <close_stdout@@Base+0xc0>
   1236c:	andeq	r3, r1, r0, ror sp
   12370:	andeq	r0, r0, r0, lsl r1
   12374:	ldrdeq	r3, [r1], -ip
   12378:	strdeq	r0, [r0], -ip
   1237c:	andeq	r2, r0, ip, ror #21
   12380:	andeq	r3, r1, r4, lsl #29
   12384:	andeq	r2, r0, ip, lsr #29
   12388:	andeq	r0, r0, r4, lsl r1
   1238c:	andeq	r2, r0, r8, lsl #29
   12390:	ldrb	r3, [r0]
   12394:	cmp	r3, #47	; 0x2f
   12398:	bne	123b4 <close_stdout@@Base+0x13c>
   1239c:	add	r2, r0, #1
   123a0:	mov	r0, r2
   123a4:	add	r2, r2, #1
   123a8:	ldrb	r3, [r0]
   123ac:	cmp	r3, #47	; 0x2f
   123b0:	beq	123a0 <close_stdout@@Base+0x128>
   123b4:	cmp	r3, #0
   123b8:	bxeq	lr
   123bc:	mov	r2, r0
   123c0:	mov	r1, #0
   123c4:	cmp	r3, #47	; 0x2f
   123c8:	moveq	r1, #1
   123cc:	beq	123dc <close_stdout@@Base+0x164>
   123d0:	cmp	r1, #0
   123d4:	movne	r0, r2
   123d8:	movne	r1, #0
   123dc:	ldrb	r3, [r2, #1]!
   123e0:	cmp	r3, #0
   123e4:	bne	123c4 <close_stdout@@Base+0x14c>
   123e8:	bx	lr
   123ec:	push	{r4, lr}
   123f0:	mov	r4, r0
   123f4:	bl	110c4 <strlen@plt>
   123f8:	cmp	r0, #1
   123fc:	popls	{r4, pc}
   12400:	sub	r3, r0, #1
   12404:	ldrb	r2, [r4, r3]
   12408:	cmp	r2, #47	; 0x2f
   1240c:	popne	{r4, pc}
   12410:	mov	r0, r3
   12414:	cmp	r0, #1
   12418:	sub	r3, r3, #1
   1241c:	beq	12430 <close_stdout@@Base+0x1b8>
   12420:	ldrb	r2, [r4, r3]
   12424:	cmp	r2, #47	; 0x2f
   12428:	popne	{r4, pc}
   1242c:	b	12410 <close_stdout@@Base+0x198>
   12430:	pop	{r4, pc}
   12434:	b	10f68 <posix_fadvise64@plt>
   12438:	cmp	r0, #0
   1243c:	push	{r4, r5, r6, lr}
   12440:	mov	r6, r1
   12444:	sub	sp, sp, #16
   12448:	beq	1246c <close_stdout@@Base+0x1f4>
   1244c:	mov	r4, #0
   12450:	mov	r5, #0
   12454:	bl	11118 <fileno@plt>
   12458:	str	r6, [sp, #8]
   1245c:	mov	r2, r4
   12460:	mov	r3, r5
   12464:	strd	r4, [sp]
   12468:	bl	12434 <close_stdout@@Base+0x1bc>
   1246c:	add	sp, sp, #16
   12470:	pop	{r4, r5, r6, pc}
   12474:	push	{r3, r4, r5, r6, r7, lr}
   12478:	subs	r4, r0, #0
   1247c:	ldr	r5, [pc, #172]	; 12530 <close_stdout@@Base+0x2b8>
   12480:	add	r5, pc, r5
   12484:	beq	1250c <close_stdout@@Base+0x294>
   12488:	mov	r1, #47	; 0x2f
   1248c:	bl	1116c <strrchr@plt>
   12490:	subs	r6, r0, #0
   12494:	beq	124f0 <close_stdout@@Base+0x278>
   12498:	add	r7, r6, #1
   1249c:	rsb	r3, r4, r7
   124a0:	cmp	r3, #6
   124a4:	ble	124f0 <close_stdout@@Base+0x278>
   124a8:	ldr	r1, [pc, #132]	; 12534 <close_stdout@@Base+0x2bc>
   124ac:	sub	r0, r6, #6
   124b0:	mov	r2, #7
   124b4:	add	r1, pc, r1
   124b8:	bl	111a8 <strncmp@plt>
   124bc:	cmp	r0, #0
   124c0:	bne	124f0 <close_stdout@@Base+0x278>
   124c4:	ldr	r1, [pc, #108]	; 12538 <close_stdout@@Base+0x2c0>
   124c8:	mov	r0, r7
   124cc:	mov	r2, #3
   124d0:	add	r1, pc, r1
   124d4:	bl	111a8 <strncmp@plt>
   124d8:	cmp	r0, #0
   124dc:	movne	r4, r7
   124e0:	ldreq	r3, [pc, #84]	; 1253c <close_stdout@@Base+0x2c4>
   124e4:	addeq	r4, r6, #4
   124e8:	ldreq	r3, [r5, r3]
   124ec:	streq	r4, [r3]
   124f0:	ldr	r2, [pc, #72]	; 12540 <close_stdout@@Base+0x2c8>
   124f4:	ldr	r3, [pc, #72]	; 12544 <close_stdout@@Base+0x2cc>
   124f8:	ldr	r2, [r5, r2]
   124fc:	str	r4, [r2]
   12500:	ldr	r3, [r5, r3]
   12504:	str	r4, [r3]
   12508:	pop	{r3, r4, r5, r6, r7, pc}
   1250c:	ldr	r3, [pc, #52]	; 12548 <close_stdout@@Base+0x2d0>
   12510:	mov	r1, #1
   12514:	ldr	r0, [pc, #48]	; 1254c <close_stdout@@Base+0x2d4>
   12518:	mov	r2, #55	; 0x37
   1251c:	ldr	r3, [r5, r3]
   12520:	add	r0, pc, r0
   12524:	ldr	r3, [r3]
   12528:	bl	11004 <fwrite@plt>
   1252c:	bl	111b4 <abort@plt>
   12530:	andeq	r3, r1, r8, ror fp
   12534:	andeq	r2, r0, r0, ror #26
   12538:	andeq	r2, r0, ip, asr #26
   1253c:	andeq	r0, r0, r4, lsr #2
   12540:	andeq	r0, r0, ip, lsl r1
   12544:	andeq	r0, r0, r8, lsl r1
   12548:	strdeq	r0, [r0], -ip
   1254c:			; <UNDEFINED> instruction: 0x00002cbc
   12550:	push	{r3, lr}
   12554:	mov	r3, r0
   12558:	mov	r2, #0
   1255c:	cmp	r1, #8
   12560:	str	r2, [r3], #4
   12564:	add	r3, r3, #4
   12568:	str	r2, [r0, #4]
   1256c:	str	r2, [r3], #4
   12570:	str	r2, [r3], #4
   12574:	str	r2, [r3], #4
   12578:	str	r2, [r3], #4
   1257c:	str	r2, [r3], #4
   12580:	str	r2, [r3], #4
   12584:	str	r2, [r3], #4
   12588:	str	r2, [r3], #4
   1258c:	str	r2, [r3], #4
   12590:	str	r2, [r3]
   12594:	beq	125a0 <close_stdout@@Base+0x328>
   12598:	str	r1, [r0]
   1259c:	pop	{r3, pc}
   125a0:	bl	111b4 <abort@plt>
   125a4:	push	{r4, r5, r6, lr}
   125a8:	mov	r4, r0
   125ac:	mov	r6, r1
   125b0:	mov	r0, #0
   125b4:	mov	r1, r4
   125b8:	mov	r2, #5
   125bc:	bl	10fc8 <dcgettext@plt>
   125c0:	cmp	r0, r4
   125c4:	mov	r5, r0
   125c8:	beq	125d0 <close_stdout@@Base+0x358>
   125cc:	pop	{r4, r5, r6, pc}
   125d0:	bl	14704 <close_stdout@@Base+0x248c>
   125d4:	ldrb	r3, [r0]
   125d8:	bic	r3, r3, #32
   125dc:	cmp	r3, #85	; 0x55
   125e0:	bne	12654 <close_stdout@@Base+0x3dc>
   125e4:	ldrb	r3, [r0, #1]
   125e8:	bic	r3, r3, #32
   125ec:	cmp	r3, #84	; 0x54
   125f0:	bne	12640 <close_stdout@@Base+0x3c8>
   125f4:	ldrb	r3, [r0, #2]
   125f8:	bic	r3, r3, #32
   125fc:	cmp	r3, #70	; 0x46
   12600:	bne	12640 <close_stdout@@Base+0x3c8>
   12604:	ldrb	r3, [r0, #3]
   12608:	cmp	r3, #45	; 0x2d
   1260c:	bne	12640 <close_stdout@@Base+0x3c8>
   12610:	ldrb	r3, [r0, #4]
   12614:	cmp	r3, #56	; 0x38
   12618:	bne	12640 <close_stdout@@Base+0x3c8>
   1261c:	ldrb	r3, [r0, #5]
   12620:	cmp	r3, #0
   12624:	bne	12640 <close_stdout@@Base+0x3c8>
   12628:	ldrb	r3, [r5]
   1262c:	cmp	r3, #96	; 0x60
   12630:	beq	126cc <close_stdout@@Base+0x454>
   12634:	ldr	r0, [pc, #180]	; 126f0 <close_stdout@@Base+0x478>
   12638:	add	r0, pc, r0
   1263c:	pop	{r4, r5, r6, pc}
   12640:	cmp	r6, #7
   12644:	beq	126d8 <close_stdout@@Base+0x460>
   12648:	ldr	r0, [pc, #164]	; 126f4 <close_stdout@@Base+0x47c>
   1264c:	add	r0, pc, r0
   12650:	pop	{r4, r5, r6, pc}
   12654:	cmp	r3, #71	; 0x47
   12658:	bne	12640 <close_stdout@@Base+0x3c8>
   1265c:	ldrb	r3, [r0, #1]
   12660:	bic	r3, r3, #32
   12664:	cmp	r3, #66	; 0x42
   12668:	bne	12640 <close_stdout@@Base+0x3c8>
   1266c:	ldrb	r3, [r0, #2]
   12670:	cmp	r3, #49	; 0x31
   12674:	bne	12640 <close_stdout@@Base+0x3c8>
   12678:	ldrb	r3, [r0, #3]
   1267c:	cmp	r3, #56	; 0x38
   12680:	bne	12640 <close_stdout@@Base+0x3c8>
   12684:	ldrb	r3, [r0, #4]
   12688:	cmp	r3, #48	; 0x30
   1268c:	bne	12640 <close_stdout@@Base+0x3c8>
   12690:	ldrb	r3, [r0, #5]
   12694:	cmp	r3, #51	; 0x33
   12698:	bne	12640 <close_stdout@@Base+0x3c8>
   1269c:	ldrb	r3, [r0, #6]
   126a0:	cmp	r3, #48	; 0x30
   126a4:	bne	12640 <close_stdout@@Base+0x3c8>
   126a8:	ldrb	r3, [r0, #7]
   126ac:	cmp	r3, #0
   126b0:	bne	12640 <close_stdout@@Base+0x3c8>
   126b4:	ldrb	r3, [r5]
   126b8:	cmp	r3, #96	; 0x60
   126bc:	beq	126e4 <close_stdout@@Base+0x46c>
   126c0:	ldr	r0, [pc, #48]	; 126f8 <close_stdout@@Base+0x480>
   126c4:	add	r0, pc, r0
   126c8:	pop	{r4, r5, r6, pc}
   126cc:	ldr	r0, [pc, #40]	; 126fc <close_stdout@@Base+0x484>
   126d0:	add	r0, pc, r0
   126d4:	pop	{r4, r5, r6, pc}
   126d8:	ldr	r0, [pc, #32]	; 12700 <close_stdout@@Base+0x488>
   126dc:	add	r0, pc, r0
   126e0:	pop	{r4, r5, r6, pc}
   126e4:	ldr	r0, [pc, #24]	; 12704 <close_stdout@@Base+0x48c>
   126e8:	add	r0, pc, r0
   126ec:	pop	{r4, r5, r6, pc}
   126f0:	andeq	r2, r0, r8, lsl #24
   126f4:	strdeq	r2, [r0], -ip
   126f8:	andeq	r2, r0, r0, lsl #23
   126fc:	andeq	r2, r0, r4, lsl #23
   12700:	andeq	r2, r0, r0, ror fp
   12704:	andeq	r2, r0, r8, ror #22
   12708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1270c:	sub	sp, sp, #124	; 0x7c
   12710:	ldr	ip, [pc, #3304]	; 13400 <close_stdout@@Base+0x1188>
   12714:	mov	sl, r1
   12718:	str	r0, [sp, #40]	; 0x28
   1271c:	mov	r8, r3
   12720:	ldr	r0, [pc, #3292]	; 13404 <close_stdout@@Base+0x118c>
   12724:	add	ip, pc, ip
   12728:	str	r2, [sp, #32]
   1272c:	ldr	r1, [sp, #164]	; 0xa4
   12730:	mov	r3, ip
   12734:	ldr	r0, [ip, r0]
   12738:	ldr	r2, [sp, #172]	; 0xac
   1273c:	ubfx	r1, r1, #1, #1
   12740:	str	r1, [sp, #36]	; 0x24
   12744:	str	r0, [sp, #56]	; 0x38
   12748:	ldr	r0, [sp, #168]	; 0xa8
   1274c:	ldr	r1, [sp, #176]	; 0xb0
   12750:	str	r2, [sp, #72]	; 0x48
   12754:	str	r0, [sp, #48]	; 0x30
   12758:	ldr	r0, [sp, #56]	; 0x38
   1275c:	str	r1, [sp, #68]	; 0x44
   12760:	ldr	r3, [r0]
   12764:	str	r3, [sp, #116]	; 0x74
   12768:	bl	1101c <__ctype_get_mb_cur_max@plt>
   1276c:	ldr	r2, [sp, #160]	; 0xa0
   12770:	str	r0, [sp, #64]	; 0x40
   12774:	cmp	r2, #8
   12778:	addls	pc, pc, r2, lsl #2
   1277c:	b	132dc <close_stdout@@Base+0x1064>
   12780:	b	127a4 <close_stdout@@Base+0x52c>
   12784:	b	12ff4 <close_stdout@@Base+0xd7c>
   12788:	b	13024 <close_stdout@@Base+0xdac>
   1278c:	b	12ed4 <close_stdout@@Base+0xc5c>
   12790:	b	12f14 <close_stdout@@Base+0xc9c>
   12794:	b	12f40 <close_stdout@@Base+0xcc8>
   12798:	b	12f60 <close_stdout@@Base+0xce8>
   1279c:	b	12f60 <close_stdout@@Base+0xce8>
   127a0:	b	12f60 <close_stdout@@Base+0xce8>
   127a4:	mov	r2, #0
   127a8:	str	r2, [sp, #36]	; 0x24
   127ac:	mov	r9, r2
   127b0:	str	r2, [sp, #24]
   127b4:	str	r2, [sp, #28]
   127b8:	str	r2, [sp, #52]	; 0x34
   127bc:	ldr	r0, [sp, #36]	; 0x24
   127c0:	mov	fp, #0
   127c4:	ldr	r1, [sp, #24]
   127c8:	eor	r2, r0, #1
   127cc:	eor	r3, r1, #1
   127d0:	and	r3, r2, r3
   127d4:	and	r2, r1, r0
   127d8:	str	r3, [sp, #44]	; 0x2c
   127dc:	str	r2, [sp, #76]	; 0x4c
   127e0:	cmn	r8, #1
   127e4:	beq	12b64 <close_stdout@@Base+0x8ec>
   127e8:	subs	r3, fp, r8
   127ec:	movne	r3, #1
   127f0:	cmp	r3, #0
   127f4:	beq	12b7c <close_stdout@@Base+0x904>
   127f8:	ldr	r3, [sp, #28]
   127fc:	ldr	r0, [sp, #24]
   12800:	adds	r7, r3, #0
   12804:	movne	r7, #1
   12808:	ands	r6, r7, r0
   1280c:	bne	13068 <close_stdout@@Base+0xdf0>
   12810:	ldr	r1, [sp, #32]
   12814:	add	r5, r1, fp
   12818:	ldrb	r4, [r5]
   1281c:	cmp	r4, #126	; 0x7e
   12820:	addls	pc, pc, r4, lsl #2
   12824:	b	12de8 <close_stdout@@Base+0xb70>
   12828:	b	12cf4 <close_stdout@@Base+0xa7c>
   1282c:	b	12de8 <close_stdout@@Base+0xb70>
   12830:	b	12de8 <close_stdout@@Base+0xb70>
   12834:	b	12de8 <close_stdout@@Base+0xb70>
   12838:	b	12de8 <close_stdout@@Base+0xb70>
   1283c:	b	12de8 <close_stdout@@Base+0xb70>
   12840:	b	12de8 <close_stdout@@Base+0xb70>
   12844:	b	12cdc <close_stdout@@Base+0xa64>
   12848:	b	12cc4 <close_stdout@@Base+0xa4c>
   1284c:	b	12cec <close_stdout@@Base+0xa74>
   12850:	b	12ce4 <close_stdout@@Base+0xa6c>
   12854:	b	12cd4 <close_stdout@@Base+0xa5c>
   12858:	b	12ccc <close_stdout@@Base+0xa54>
   1285c:	b	12c90 <close_stdout@@Base+0xa18>
   12860:	b	12de8 <close_stdout@@Base+0xb70>
   12864:	b	12de8 <close_stdout@@Base+0xb70>
   12868:	b	12de8 <close_stdout@@Base+0xb70>
   1286c:	b	12de8 <close_stdout@@Base+0xb70>
   12870:	b	12de8 <close_stdout@@Base+0xb70>
   12874:	b	12de8 <close_stdout@@Base+0xb70>
   12878:	b	12de8 <close_stdout@@Base+0xb70>
   1287c:	b	12de8 <close_stdout@@Base+0xb70>
   12880:	b	12de8 <close_stdout@@Base+0xb70>
   12884:	b	12de8 <close_stdout@@Base+0xb70>
   12888:	b	12de8 <close_stdout@@Base+0xb70>
   1288c:	b	12de8 <close_stdout@@Base+0xb70>
   12890:	b	12de8 <close_stdout@@Base+0xb70>
   12894:	b	12de8 <close_stdout@@Base+0xb70>
   12898:	b	12de8 <close_stdout@@Base+0xb70>
   1289c:	b	12de8 <close_stdout@@Base+0xb70>
   128a0:	b	12de8 <close_stdout@@Base+0xb70>
   128a4:	b	12de8 <close_stdout@@Base+0xb70>
   128a8:	b	12c1c <close_stdout@@Base+0x9a4>
   128ac:	b	12c1c <close_stdout@@Base+0x9a4>
   128b0:	b	12c1c <close_stdout@@Base+0x9a4>
   128b4:	b	12c14 <close_stdout@@Base+0x99c>
   128b8:	b	12c1c <close_stdout@@Base+0x9a4>
   128bc:	b	12af0 <close_stdout@@Base+0x878>
   128c0:	b	12c1c <close_stdout@@Base+0x9a4>
   128c4:	b	12d90 <close_stdout@@Base+0xb18>
   128c8:	b	12c1c <close_stdout@@Base+0x9a4>
   128cc:	b	12c1c <close_stdout@@Base+0x9a4>
   128d0:	b	12c1c <close_stdout@@Base+0x9a4>
   128d4:	b	12af0 <close_stdout@@Base+0x878>
   128d8:	b	12af0 <close_stdout@@Base+0x878>
   128dc:	b	12af0 <close_stdout@@Base+0x878>
   128e0:	b	12af0 <close_stdout@@Base+0x878>
   128e4:	b	12af0 <close_stdout@@Base+0x878>
   128e8:	b	12af0 <close_stdout@@Base+0x878>
   128ec:	b	12af0 <close_stdout@@Base+0x878>
   128f0:	b	12af0 <close_stdout@@Base+0x878>
   128f4:	b	12af0 <close_stdout@@Base+0x878>
   128f8:	b	12af0 <close_stdout@@Base+0x878>
   128fc:	b	12af0 <close_stdout@@Base+0x878>
   12900:	b	12af0 <close_stdout@@Base+0x878>
   12904:	b	12af0 <close_stdout@@Base+0x878>
   12908:	b	12af0 <close_stdout@@Base+0x878>
   1290c:	b	12af0 <close_stdout@@Base+0x878>
   12910:	b	12af0 <close_stdout@@Base+0x878>
   12914:	b	12c1c <close_stdout@@Base+0x9a4>
   12918:	b	12c1c <close_stdout@@Base+0x9a4>
   1291c:	b	12c1c <close_stdout@@Base+0x9a4>
   12920:	b	12c1c <close_stdout@@Base+0x9a4>
   12924:	b	12a24 <close_stdout@@Base+0x7ac>
   12928:	b	12de8 <close_stdout@@Base+0xb70>
   1292c:	b	12af0 <close_stdout@@Base+0x878>
   12930:	b	12af0 <close_stdout@@Base+0x878>
   12934:	b	12af0 <close_stdout@@Base+0x878>
   12938:	b	12af0 <close_stdout@@Base+0x878>
   1293c:	b	12af0 <close_stdout@@Base+0x878>
   12940:	b	12af0 <close_stdout@@Base+0x878>
   12944:	b	12af0 <close_stdout@@Base+0x878>
   12948:	b	12af0 <close_stdout@@Base+0x878>
   1294c:	b	12af0 <close_stdout@@Base+0x878>
   12950:	b	12af0 <close_stdout@@Base+0x878>
   12954:	b	12af0 <close_stdout@@Base+0x878>
   12958:	b	12af0 <close_stdout@@Base+0x878>
   1295c:	b	12af0 <close_stdout@@Base+0x878>
   12960:	b	12af0 <close_stdout@@Base+0x878>
   12964:	b	12af0 <close_stdout@@Base+0x878>
   12968:	b	12af0 <close_stdout@@Base+0x878>
   1296c:	b	12af0 <close_stdout@@Base+0x878>
   12970:	b	12af0 <close_stdout@@Base+0x878>
   12974:	b	12af0 <close_stdout@@Base+0x878>
   12978:	b	12af0 <close_stdout@@Base+0x878>
   1297c:	b	12af0 <close_stdout@@Base+0x878>
   12980:	b	12af0 <close_stdout@@Base+0x878>
   12984:	b	12af0 <close_stdout@@Base+0x878>
   12988:	b	12af0 <close_stdout@@Base+0x878>
   1298c:	b	12af0 <close_stdout@@Base+0x878>
   12990:	b	12af0 <close_stdout@@Base+0x878>
   12994:	b	12c1c <close_stdout@@Base+0x9a4>
   12998:	b	12d74 <close_stdout@@Base+0xafc>
   1299c:	b	12af0 <close_stdout@@Base+0x878>
   129a0:	b	12c1c <close_stdout@@Base+0x9a4>
   129a4:	b	12af0 <close_stdout@@Base+0x878>
   129a8:	b	12c1c <close_stdout@@Base+0x9a4>
   129ac:	b	12af0 <close_stdout@@Base+0x878>
   129b0:	b	12af0 <close_stdout@@Base+0x878>
   129b4:	b	12af0 <close_stdout@@Base+0x878>
   129b8:	b	12af0 <close_stdout@@Base+0x878>
   129bc:	b	12af0 <close_stdout@@Base+0x878>
   129c0:	b	12af0 <close_stdout@@Base+0x878>
   129c4:	b	12af0 <close_stdout@@Base+0x878>
   129c8:	b	12af0 <close_stdout@@Base+0x878>
   129cc:	b	12af0 <close_stdout@@Base+0x878>
   129d0:	b	12af0 <close_stdout@@Base+0x878>
   129d4:	b	12af0 <close_stdout@@Base+0x878>
   129d8:	b	12af0 <close_stdout@@Base+0x878>
   129dc:	b	12af0 <close_stdout@@Base+0x878>
   129e0:	b	12af0 <close_stdout@@Base+0x878>
   129e4:	b	12af0 <close_stdout@@Base+0x878>
   129e8:	b	12af0 <close_stdout@@Base+0x878>
   129ec:	b	12af0 <close_stdout@@Base+0x878>
   129f0:	b	12af0 <close_stdout@@Base+0x878>
   129f4:	b	12af0 <close_stdout@@Base+0x878>
   129f8:	b	12af0 <close_stdout@@Base+0x878>
   129fc:	b	12af0 <close_stdout@@Base+0x878>
   12a00:	b	12af0 <close_stdout@@Base+0x878>
   12a04:	b	12af0 <close_stdout@@Base+0x878>
   12a08:	b	12af0 <close_stdout@@Base+0x878>
   12a0c:	b	12af0 <close_stdout@@Base+0x878>
   12a10:	b	12af0 <close_stdout@@Base+0x878>
   12a14:	b	12bfc <close_stdout@@Base+0x984>
   12a18:	b	12c1c <close_stdout@@Base+0x9a4>
   12a1c:	b	12bfc <close_stdout@@Base+0x984>
   12a20:	b	12c14 <close_stdout@@Base+0x99c>
   12a24:	ldr	r3, [sp, #160]	; 0xa0
   12a28:	cmp	r3, #2
   12a2c:	beq	132b8 <close_stdout@@Base+0x1040>
   12a30:	cmp	r3, #3
   12a34:	bne	12af0 <close_stdout@@Base+0x878>
   12a38:	ldr	r1, [sp, #164]	; 0xa4
   12a3c:	tst	r1, #4
   12a40:	beq	12af0 <close_stdout@@Base+0x878>
   12a44:	add	r3, fp, #2
   12a48:	cmp	r8, r3
   12a4c:	bls	12af0 <close_stdout@@Base+0x878>
   12a50:	ldrb	r2, [r5, #1]
   12a54:	mov	r1, #1
   12a58:	cmp	r2, #63	; 0x3f
   12a5c:	bne	12af0 <close_stdout@@Base+0x878>
   12a60:	ldr	r0, [sp, #32]
   12a64:	ldrb	ip, [r0, r3]
   12a68:	sub	r0, ip, #33	; 0x21
   12a6c:	uxtb	r0, r0
   12a70:	cmp	r0, #29
   12a74:	bhi	12af0 <close_stdout@@Base+0x878>
   12a78:	lsl	r1, r1, r0
   12a7c:	movw	r0, #20929	; 0x51c1
   12a80:	movt	r0, #14336	; 0x3800
   12a84:	and	r0, r1, r0
   12a88:	cmp	r0, #0
   12a8c:	beq	12af0 <close_stdout@@Base+0x878>
   12a90:	ldr	r1, [sp, #36]	; 0x24
   12a94:	cmp	r1, #0
   12a98:	bne	12c38 <close_stdout@@Base+0x9c0>
   12a9c:	cmp	r9, sl
   12aa0:	mov	r4, ip
   12aa4:	mov	fp, r3
   12aa8:	ldrcc	r0, [sp, #40]	; 0x28
   12aac:	strbcc	r2, [r0, r9]
   12ab0:	add	r2, r9, #1
   12ab4:	cmp	sl, r2
   12ab8:	ldrhi	r0, [sp, #40]	; 0x28
   12abc:	movhi	r1, #34	; 0x22
   12ac0:	strbhi	r1, [r0, r2]
   12ac4:	add	r2, r9, #2
   12ac8:	cmp	sl, r2
   12acc:	ldrhi	r0, [sp, #40]	; 0x28
   12ad0:	movhi	r1, #34	; 0x22
   12ad4:	strbhi	r1, [r0, r2]
   12ad8:	add	r2, r9, #3
   12adc:	cmp	sl, r2
   12ae0:	add	r9, r9, #4
   12ae4:	ldrhi	r0, [sp, #40]	; 0x28
   12ae8:	movhi	r1, #63	; 0x3f
   12aec:	strbhi	r1, [r0, r2]
   12af0:	ldr	r0, [sp, #44]	; 0x2c
   12af4:	cmp	r0, #0
   12af8:	bne	12b20 <close_stdout@@Base+0x8a8>
   12afc:	ldr	r1, [sp, #48]	; 0x30
   12b00:	cmp	r1, #0
   12b04:	beq	12b20 <close_stdout@@Base+0x8a8>
   12b08:	ubfx	r2, r4, #5, #8
   12b0c:	and	r3, r4, #31
   12b10:	ldr	r2, [r1, r2, lsl #2]
   12b14:	lsr	r3, r2, r3
   12b18:	tst	r3, #1
   12b1c:	bne	12b28 <close_stdout@@Base+0x8b0>
   12b20:	cmp	r6, #0
   12b24:	beq	12b48 <close_stdout@@Base+0x8d0>
   12b28:	ldr	r2, [sp, #36]	; 0x24
   12b2c:	cmp	r2, #0
   12b30:	bne	12c38 <close_stdout@@Base+0x9c0>
   12b34:	cmp	r9, sl
   12b38:	ldrcc	r0, [sp, #40]	; 0x28
   12b3c:	movcc	r3, #92	; 0x5c
   12b40:	strbcc	r3, [r0, r9]
   12b44:	add	r9, r9, #1
   12b48:	add	fp, fp, #1
   12b4c:	cmp	r9, sl
   12b50:	ldrcc	r1, [sp, #40]	; 0x28
   12b54:	strbcc	r4, [r1, r9]
   12b58:	cmn	r8, #1
   12b5c:	add	r9, r9, #1
   12b60:	bne	127e8 <close_stdout@@Base+0x570>
   12b64:	ldr	r2, [sp, #32]
   12b68:	ldrb	r3, [r2, fp]
   12b6c:	adds	r3, r3, #0
   12b70:	movne	r3, #1
   12b74:	cmp	r3, #0
   12b78:	bne	127f8 <close_stdout@@Base+0x580>
   12b7c:	ldr	r3, [sp, #160]	; 0xa0
   12b80:	cmp	r9, #0
   12b84:	cmpeq	r3, #2
   12b88:	bne	12b98 <close_stdout@@Base+0x920>
   12b8c:	ldr	r0, [sp, #36]	; 0x24
   12b90:	cmp	r0, #0
   12b94:	bne	12c38 <close_stdout@@Base+0x9c0>
   12b98:	ldr	r1, [sp, #36]	; 0x24
   12b9c:	ldr	r2, [sp, #52]	; 0x34
   12ba0:	eor	r3, r1, #1
   12ba4:	cmp	r2, #0
   12ba8:	moveq	r3, #0
   12bac:	andne	r3, r3, #1
   12bb0:	cmp	r3, #0
   12bb4:	beq	12be0 <close_stdout@@Base+0x968>
   12bb8:	ldrb	r3, [r2]
   12bbc:	cmp	r3, #0
   12bc0:	beq	12be0 <close_stdout@@Base+0x968>
   12bc4:	ldr	r1, [sp, #40]	; 0x28
   12bc8:	cmp	sl, r9
   12bcc:	strbhi	r3, [r1, r9]
   12bd0:	ldrb	r3, [r2, #1]!
   12bd4:	add	r9, r9, #1
   12bd8:	cmp	r3, #0
   12bdc:	bne	12bc8 <close_stdout@@Base+0x950>
   12be0:	cmp	r9, sl
   12be4:	movcs	r0, r9
   12be8:	ldrcc	r1, [sp, #40]	; 0x28
   12bec:	movcc	r3, #0
   12bf0:	movcc	r0, r9
   12bf4:	strbcc	r3, [r1, r9]
   12bf8:	b	12c74 <close_stdout@@Base+0x9fc>
   12bfc:	cmn	r8, #1
   12c00:	beq	132c8 <close_stdout@@Base+0x1050>
   12c04:	subs	r3, r8, #1
   12c08:	movne	r3, #1
   12c0c:	cmp	r3, #0
   12c10:	bne	12af0 <close_stdout@@Base+0x878>
   12c14:	cmp	fp, #0
   12c18:	bne	12af0 <close_stdout@@Base+0x878>
   12c1c:	ldr	r3, [sp, #36]	; 0x24
   12c20:	ldr	r0, [sp, #160]	; 0xa0
   12c24:	cmp	r0, #2
   12c28:	movne	r3, #0
   12c2c:	andeq	r3, r3, #1
   12c30:	cmp	r3, #0
   12c34:	beq	12af0 <close_stdout@@Base+0x878>
   12c38:	ldr	r2, [sp, #164]	; 0xa4
   12c3c:	mov	ip, #0
   12c40:	ldr	r0, [sp, #160]	; 0xa0
   12c44:	bic	r3, r2, #2
   12c48:	ldr	r1, [sp, #72]	; 0x48
   12c4c:	ldr	r2, [sp, #68]	; 0x44
   12c50:	stm	sp, {r0, r3}
   12c54:	mov	r3, r8
   12c58:	str	r1, [sp, #12]
   12c5c:	mov	r1, sl
   12c60:	str	r2, [sp, #16]
   12c64:	ldr	r0, [sp, #40]	; 0x28
   12c68:	ldr	r2, [sp, #32]
   12c6c:	str	ip, [sp, #8]
   12c70:	bl	12708 <close_stdout@@Base+0x490>
   12c74:	ldr	r1, [sp, #56]	; 0x38
   12c78:	ldr	r2, [sp, #116]	; 0x74
   12c7c:	ldr	r3, [r1]
   12c80:	cmp	r2, r3
   12c84:	bne	133b8 <close_stdout@@Base+0x1140>
   12c88:	add	sp, sp, #124	; 0x7c
   12c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c90:	mov	r3, #114	; 0x72
   12c94:	ldr	r2, [sp, #36]	; 0x24
   12c98:	ldr	r0, [sp, #160]	; 0xa0
   12c9c:	cmp	r0, #2
   12ca0:	movne	r2, #0
   12ca4:	andeq	r2, r2, #1
   12ca8:	cmp	r2, #0
   12cac:	bne	12c38 <close_stdout@@Base+0x9c0>
   12cb0:	ldr	r1, [sp, #24]
   12cb4:	cmp	r1, #0
   12cb8:	beq	12af0 <close_stdout@@Base+0x878>
   12cbc:	mov	r4, r3
   12cc0:	b	12b28 <close_stdout@@Base+0x8b0>
   12cc4:	mov	r3, #98	; 0x62
   12cc8:	b	12cb0 <close_stdout@@Base+0xa38>
   12ccc:	mov	r3, #102	; 0x66
   12cd0:	b	12cb0 <close_stdout@@Base+0xa38>
   12cd4:	mov	r3, #118	; 0x76
   12cd8:	b	12cb0 <close_stdout@@Base+0xa38>
   12cdc:	mov	r3, #97	; 0x61
   12ce0:	b	12cb0 <close_stdout@@Base+0xa38>
   12ce4:	mov	r3, #110	; 0x6e
   12ce8:	b	12c94 <close_stdout@@Base+0xa1c>
   12cec:	mov	r3, #116	; 0x74
   12cf0:	b	12c94 <close_stdout@@Base+0xa1c>
   12cf4:	ldr	r2, [sp, #24]
   12cf8:	cmp	r2, #0
   12cfc:	beq	132a4 <close_stdout@@Base+0x102c>
   12d00:	ldr	r3, [sp, #36]	; 0x24
   12d04:	cmp	r3, #0
   12d08:	bne	12c38 <close_stdout@@Base+0x9c0>
   12d0c:	cmp	r9, sl
   12d10:	add	r2, r9, #1
   12d14:	ldrcc	r0, [sp, #40]	; 0x28
   12d18:	movcc	r3, #92	; 0x5c
   12d1c:	strbcc	r3, [r0, r9]
   12d20:	add	r3, fp, #1
   12d24:	cmp	r8, r3
   12d28:	bls	12d68 <close_stdout@@Base+0xaf0>
   12d2c:	ldr	r1, [sp, #32]
   12d30:	ldrb	r3, [r1, r3]
   12d34:	sub	r3, r3, #48	; 0x30
   12d38:	cmp	r3, #9
   12d3c:	bhi	12d68 <close_stdout@@Base+0xaf0>
   12d40:	cmp	sl, r2
   12d44:	ldrhi	r0, [sp, #40]	; 0x28
   12d48:	movhi	r3, #48	; 0x30
   12d4c:	strbhi	r3, [r0, r2]
   12d50:	add	r3, r9, #2
   12d54:	cmp	sl, r3
   12d58:	ldrhi	r1, [sp, #40]	; 0x28
   12d5c:	movhi	r2, #48	; 0x30
   12d60:	strbhi	r2, [r1, r3]
   12d64:	add	r2, r9, #3
   12d68:	mov	r9, r2
   12d6c:	mov	r4, #48	; 0x30
   12d70:	b	12afc <close_stdout@@Base+0x884>
   12d74:	ldr	r1, [sp, #76]	; 0x4c
   12d78:	cmp	r1, #0
   12d7c:	beq	12d88 <close_stdout@@Base+0xb10>
   12d80:	cmp	r7, #0
   12d84:	bne	12b48 <close_stdout@@Base+0x8d0>
   12d88:	mov	r3, r4
   12d8c:	b	12c94 <close_stdout@@Base+0xa1c>
   12d90:	ldr	r1, [sp, #160]	; 0xa0
   12d94:	cmp	r1, #2
   12d98:	bne	12af0 <close_stdout@@Base+0x878>
   12d9c:	ldr	r2, [sp, #36]	; 0x24
   12da0:	cmp	r2, #0
   12da4:	bne	12c38 <close_stdout@@Base+0x9c0>
   12da8:	cmp	r9, sl
   12dac:	ldrcc	r0, [sp, #40]	; 0x28
   12db0:	movcc	r3, #39	; 0x27
   12db4:	strbcc	r3, [r0, r9]
   12db8:	add	r3, r9, #1
   12dbc:	cmp	sl, r3
   12dc0:	ldrhi	r1, [sp, #40]	; 0x28
   12dc4:	movhi	r2, #92	; 0x5c
   12dc8:	strbhi	r2, [r1, r3]
   12dcc:	add	r3, r9, #2
   12dd0:	cmp	sl, r3
   12dd4:	add	r9, r9, #3
   12dd8:	ldrhi	r0, [sp, #40]	; 0x28
   12ddc:	movhi	r2, #39	; 0x27
   12de0:	strbhi	r2, [r0, r3]
   12de4:	b	12af0 <close_stdout@@Base+0x878>
   12de8:	ldr	r1, [sp, #64]	; 0x40
   12dec:	cmp	r1, #1
   12df0:	bne	130e8 <close_stdout@@Base+0xe70>
   12df4:	bl	110ac <__ctype_b_loc@plt>
   12df8:	ldr	r2, [sp, #64]	; 0x40
   12dfc:	sxth	r3, r4
   12e00:	str	r2, [sp, #60]	; 0x3c
   12e04:	lsl	r3, r3, #1
   12e08:	ldr	r2, [r0]
   12e0c:	ldrh	r2, [r2, r3]
   12e10:	eor	r2, r2, #16384	; 0x4000
   12e14:	ubfx	r2, r2, #14, #1
   12e18:	ldr	r1, [sp, #24]
   12e1c:	ands	r2, r2, r1
   12e20:	beq	12af0 <close_stdout@@Base+0x878>
   12e24:	ldr	r3, [sp, #60]	; 0x3c
   12e28:	mov	r0, #92	; 0x5c
   12e2c:	ldr	r7, [sp, #36]	; 0x24
   12e30:	add	r1, r3, fp
   12e34:	str	r8, [sp, #60]	; 0x3c
   12e38:	ldr	r3, [sp, #40]	; 0x28
   12e3c:	b	12ea0 <close_stdout@@Base+0xc28>
   12e40:	cmp	r7, #0
   12e44:	bne	132e0 <close_stdout@@Base+0x1068>
   12e48:	add	ip, r9, #1
   12e4c:	cmp	r9, sl
   12e50:	strbcc	r0, [r3, r9]
   12e54:	cmp	sl, ip
   12e58:	lsrhi	r8, r4, #6
   12e5c:	addhi	r8, r8, #48	; 0x30
   12e60:	strbhi	r8, [r3, ip]
   12e64:	add	ip, r9, #2
   12e68:	add	r9, r9, #3
   12e6c:	cmp	sl, ip
   12e70:	ubfxhi	r8, r4, #3, #3
   12e74:	and	r4, r4, #7
   12e78:	add	r4, r4, #48	; 0x30
   12e7c:	addhi	r8, r8, #48	; 0x30
   12e80:	strbhi	r8, [r3, ip]
   12e84:	add	fp, fp, #1
   12e88:	cmp	r1, fp
   12e8c:	bls	12ecc <close_stdout@@Base+0xc54>
   12e90:	cmp	r9, sl
   12e94:	strbcc	r4, [r3, r9]
   12e98:	ldrb	r4, [r5, #1]!
   12e9c:	add	r9, r9, #1
   12ea0:	cmp	r2, #0
   12ea4:	bne	12e40 <close_stdout@@Base+0xbc8>
   12ea8:	cmp	r6, #0
   12eac:	beq	12e84 <close_stdout@@Base+0xc0c>
   12eb0:	add	fp, fp, #1
   12eb4:	cmp	r9, sl
   12eb8:	strbcc	r0, [r3, r9]
   12ebc:	cmp	r1, fp
   12ec0:	add	r9, r9, #1
   12ec4:	mov	r6, #0
   12ec8:	bhi	12e90 <close_stdout@@Base+0xc18>
   12ecc:	ldr	r8, [sp, #60]	; 0x3c
   12ed0:	b	12b4c <close_stdout@@Base+0x8d4>
   12ed4:	ldr	r3, [sp, #36]	; 0x24
   12ed8:	cmp	r3, #0
   12edc:	bne	133e0 <close_stdout@@Base+0x1168>
   12ee0:	cmp	sl, #0
   12ee4:	beq	132f8 <close_stdout@@Base+0x1080>
   12ee8:	ldr	r1, [sp, #40]	; 0x28
   12eec:	mov	r0, #1
   12ef0:	ldr	r2, [pc, #1296]	; 13408 <close_stdout@@Base+0x1190>
   12ef4:	mov	r3, #34	; 0x22
   12ef8:	str	r0, [sp, #24]
   12efc:	mov	r9, r0
   12f00:	add	r2, pc, r2
   12f04:	str	r0, [sp, #28]
   12f08:	strb	r3, [r1]
   12f0c:	str	r2, [sp, #52]	; 0x34
   12f10:	b	127bc <close_stdout@@Base+0x544>
   12f14:	ldr	r3, [pc, #1264]	; 1340c <close_stdout@@Base+0x1194>
   12f18:	mov	r2, #1
   12f1c:	mov	r0, #3
   12f20:	str	r2, [sp, #36]	; 0x24
   12f24:	add	r3, pc, r3
   12f28:	str	r2, [sp, #24]
   12f2c:	str	r3, [sp, #52]	; 0x34
   12f30:	mov	r9, #0
   12f34:	str	r2, [sp, #28]
   12f38:	str	r0, [sp, #160]	; 0xa0
   12f3c:	b	127bc <close_stdout@@Base+0x544>
   12f40:	mov	r0, #0
   12f44:	mov	r1, #1
   12f48:	str	r0, [sp, #36]	; 0x24
   12f4c:	mov	r9, r0
   12f50:	str	r1, [sp, #24]
   12f54:	str	r0, [sp, #28]
   12f58:	str	r0, [sp, #52]	; 0x34
   12f5c:	b	127bc <close_stdout@@Base+0x544>
   12f60:	ldr	r3, [sp, #160]	; 0xa0
   12f64:	cmp	r3, #8
   12f68:	beq	12f94 <close_stdout@@Base+0xd1c>
   12f6c:	ldr	r0, [pc, #1180]	; 13410 <close_stdout@@Base+0x1198>
   12f70:	mov	r1, r3
   12f74:	add	r0, pc, r0
   12f78:	bl	125a4 <close_stdout@@Base+0x32c>
   12f7c:	ldr	r1, [sp, #160]	; 0xa0
   12f80:	str	r0, [sp, #72]	; 0x48
   12f84:	ldr	r0, [pc, #1160]	; 13414 <close_stdout@@Base+0x119c>
   12f88:	add	r0, pc, r0
   12f8c:	bl	125a4 <close_stdout@@Base+0x32c>
   12f90:	str	r0, [sp, #68]	; 0x44
   12f94:	ldr	r0, [sp, #36]	; 0x24
   12f98:	cmp	r0, #0
   12f9c:	movne	r9, #0
   12fa0:	bne	12fd8 <close_stdout@@Base+0xd60>
   12fa4:	ldr	r1, [sp, #72]	; 0x48
   12fa8:	ldrb	r3, [r1]
   12fac:	cmp	r3, #0
   12fb0:	beq	133b0 <close_stdout@@Base+0x1138>
   12fb4:	mov	r2, r1
   12fb8:	ldr	r1, [sp, #40]	; 0x28
   12fbc:	mov	r9, r0
   12fc0:	cmp	r9, sl
   12fc4:	strbcc	r3, [r1, r9]
   12fc8:	ldrb	r3, [r2, #1]!
   12fcc:	add	r9, r9, #1
   12fd0:	cmp	r3, #0
   12fd4:	bne	12fc0 <close_stdout@@Base+0xd48>
   12fd8:	ldr	r0, [sp, #68]	; 0x44
   12fdc:	str	r0, [sp, #52]	; 0x34
   12fe0:	bl	110c4 <strlen@plt>
   12fe4:	mov	r2, #1
   12fe8:	str	r2, [sp, #24]
   12fec:	str	r0, [sp, #28]
   12ff0:	b	127bc <close_stdout@@Base+0x544>
   12ff4:	ldr	r3, [pc, #1052]	; 13418 <close_stdout@@Base+0x11a0>
   12ff8:	mov	r2, #0
   12ffc:	mov	r1, #1
   13000:	mov	r0, #2
   13004:	add	r3, pc, r3
   13008:	str	r1, [sp, #36]	; 0x24
   1300c:	str	r2, [sp, #24]
   13010:	mov	r9, r2
   13014:	str	r1, [sp, #28]
   13018:	str	r3, [sp, #52]	; 0x34
   1301c:	str	r0, [sp, #160]	; 0xa0
   13020:	b	127bc <close_stdout@@Base+0x544>
   13024:	ldr	r3, [sp, #36]	; 0x24
   13028:	cmp	r3, #0
   1302c:	bne	133bc <close_stdout@@Base+0x1144>
   13030:	cmp	sl, #0
   13034:	beq	13318 <close_stdout@@Base+0x10a0>
   13038:	ldr	r1, [sp, #40]	; 0x28
   1303c:	mov	r3, #39	; 0x27
   13040:	ldr	r2, [sp, #36]	; 0x24
   13044:	mov	r0, #1
   13048:	mov	r9, r0
   1304c:	str	r0, [sp, #28]
   13050:	strb	r3, [r1]
   13054:	ldr	r3, [pc, #960]	; 1341c <close_stdout@@Base+0x11a4>
   13058:	str	r2, [sp, #24]
   1305c:	add	r3, pc, r3
   13060:	str	r3, [sp, #52]	; 0x34
   13064:	b	127bc <close_stdout@@Base+0x544>
   13068:	ldr	r2, [sp, #28]
   1306c:	cmp	r2, #1
   13070:	add	r4, fp, r2
   13074:	movls	r3, #0
   13078:	movhi	r3, #1
   1307c:	cmn	r8, #1
   13080:	movne	r3, #0
   13084:	cmp	r3, #0
   13088:	beq	13098 <close_stdout@@Base+0xe20>
   1308c:	ldr	r0, [sp, #32]
   13090:	bl	110c4 <strlen@plt>
   13094:	mov	r8, r0
   13098:	cmp	r8, r4
   1309c:	ldrcc	r3, [sp, #32]
   130a0:	movcc	r6, #0
   130a4:	addcc	r5, r3, fp
   130a8:	bcc	12818 <close_stdout@@Base+0x5a0>
   130ac:	ldr	r0, [sp, #32]
   130b0:	ldr	r1, [sp, #52]	; 0x34
   130b4:	add	r5, r0, fp
   130b8:	ldr	r2, [sp, #28]
   130bc:	mov	r0, r5
   130c0:	bl	10fbc <memcmp@plt>
   130c4:	cmp	r0, #0
   130c8:	bne	130e0 <close_stdout@@Base+0xe68>
   130cc:	ldr	r1, [sp, #36]	; 0x24
   130d0:	cmp	r1, #0
   130d4:	bne	12c38 <close_stdout@@Base+0x9c0>
   130d8:	mov	r6, #1
   130dc:	b	12818 <close_stdout@@Base+0x5a0>
   130e0:	mov	r6, #0
   130e4:	b	12818 <close_stdout@@Base+0x5a0>
   130e8:	add	r7, sp, #108	; 0x6c
   130ec:	cmn	r8, #1
   130f0:	mov	r3, #0
   130f4:	str	r3, [sp, #108]	; 0x6c
   130f8:	str	r3, [r7, #4]
   130fc:	beq	132e8 <close_stdout@@Base+0x1070>
   13100:	mov	r1, #0
   13104:	ldr	r0, [sp, #32]
   13108:	mov	ip, #1
   1310c:	str	r9, [sp, #88]	; 0x58
   13110:	str	r6, [sp, #96]	; 0x60
   13114:	mov	r9, r1
   13118:	str	r5, [sp, #100]	; 0x64
   1311c:	mov	r6, ip
   13120:	mov	r5, r7
   13124:	add	r3, sp, #104	; 0x68
   13128:	sub	r0, r0, #1
   1312c:	str	r3, [sp, #80]	; 0x50
   13130:	str	r0, [sp, #84]	; 0x54
   13134:	str	r1, [sp, #60]	; 0x3c
   13138:	str	r4, [sp, #92]	; 0x5c
   1313c:	ldr	r2, [sp, #32]
   13140:	add	r7, r9, fp
   13144:	add	r0, sp, #104	; 0x68
   13148:	mov	r3, r5
   1314c:	add	r4, r2, r7
   13150:	rsb	r2, r7, r8
   13154:	mov	r1, r4
   13158:	bl	11040 <mbrtowc@plt>
   1315c:	subs	r2, r0, #0
   13160:	beq	1326c <close_stdout@@Base+0xff4>
   13164:	cmn	r2, #1
   13168:	beq	13394 <close_stdout@@Base+0x111c>
   1316c:	cmn	r2, #2
   13170:	beq	13338 <close_stdout@@Base+0x10c0>
   13174:	ldr	r3, [sp, #36]	; 0x24
   13178:	ldr	r0, [sp, #160]	; 0xa0
   1317c:	cmp	r0, #2
   13180:	movne	r3, #0
   13184:	andeq	r3, r3, #1
   13188:	cmp	r3, #0
   1318c:	beq	13248 <close_stdout@@Base+0xfd0>
   13190:	cmp	r2, #1
   13194:	beq	13248 <close_stdout@@Base+0xfd0>
   13198:	ldr	r1, [sp, #84]	; 0x54
   1319c:	add	r3, r1, r2
   131a0:	add	r7, r3, r7
   131a4:	ldrb	r3, [r4, #1]!
   131a8:	sub	r3, r3, #91	; 0x5b
   131ac:	cmp	r3, #33	; 0x21
   131b0:	addls	pc, pc, r3, lsl #2
   131b4:	b	13240 <close_stdout@@Base+0xfc8>
   131b8:	b	12c38 <close_stdout@@Base+0x9c0>
   131bc:	b	12c38 <close_stdout@@Base+0x9c0>
   131c0:	b	13240 <close_stdout@@Base+0xfc8>
   131c4:	b	12c38 <close_stdout@@Base+0x9c0>
   131c8:	b	13240 <close_stdout@@Base+0xfc8>
   131cc:	b	12c38 <close_stdout@@Base+0x9c0>
   131d0:	b	13240 <close_stdout@@Base+0xfc8>
   131d4:	b	13240 <close_stdout@@Base+0xfc8>
   131d8:	b	13240 <close_stdout@@Base+0xfc8>
   131dc:	b	13240 <close_stdout@@Base+0xfc8>
   131e0:	b	13240 <close_stdout@@Base+0xfc8>
   131e4:	b	13240 <close_stdout@@Base+0xfc8>
   131e8:	b	13240 <close_stdout@@Base+0xfc8>
   131ec:	b	13240 <close_stdout@@Base+0xfc8>
   131f0:	b	13240 <close_stdout@@Base+0xfc8>
   131f4:	b	13240 <close_stdout@@Base+0xfc8>
   131f8:	b	13240 <close_stdout@@Base+0xfc8>
   131fc:	b	13240 <close_stdout@@Base+0xfc8>
   13200:	b	13240 <close_stdout@@Base+0xfc8>
   13204:	b	13240 <close_stdout@@Base+0xfc8>
   13208:	b	13240 <close_stdout@@Base+0xfc8>
   1320c:	b	13240 <close_stdout@@Base+0xfc8>
   13210:	b	13240 <close_stdout@@Base+0xfc8>
   13214:	b	13240 <close_stdout@@Base+0xfc8>
   13218:	b	13240 <close_stdout@@Base+0xfc8>
   1321c:	b	13240 <close_stdout@@Base+0xfc8>
   13220:	b	13240 <close_stdout@@Base+0xfc8>
   13224:	b	13240 <close_stdout@@Base+0xfc8>
   13228:	b	13240 <close_stdout@@Base+0xfc8>
   1322c:	b	13240 <close_stdout@@Base+0xfc8>
   13230:	b	13240 <close_stdout@@Base+0xfc8>
   13234:	b	13240 <close_stdout@@Base+0xfc8>
   13238:	b	13240 <close_stdout@@Base+0xfc8>
   1323c:	b	12c38 <close_stdout@@Base+0x9c0>
   13240:	cmp	r4, r7
   13244:	bne	131a4 <close_stdout@@Base+0xf2c>
   13248:	ldr	r0, [sp, #104]	; 0x68
   1324c:	add	r9, r9, r2
   13250:	bl	10ff8 <iswprint@plt>
   13254:	cmp	r0, #0
   13258:	mov	r0, r5
   1325c:	moveq	r6, #0
   13260:	bl	10fa4 <mbsinit@plt>
   13264:	cmp	r0, #0
   13268:	beq	1313c <close_stdout@@Base+0xec4>
   1326c:	mov	ip, r6
   13270:	eor	r2, ip, #1
   13274:	str	r9, [sp, #60]	; 0x3c
   13278:	ldr	r4, [sp, #92]	; 0x5c
   1327c:	uxtb	r2, r2
   13280:	ldr	r9, [sp, #88]	; 0x58
   13284:	ldr	r6, [sp, #96]	; 0x60
   13288:	ldr	r5, [sp, #100]	; 0x64
   1328c:	ldr	r3, [sp, #60]	; 0x3c
   13290:	cmp	r3, #1
   13294:	bls	12e18 <close_stdout@@Base+0xba0>
   13298:	ldr	r0, [sp, #24]
   1329c:	and	r2, r2, r0
   132a0:	b	12e24 <close_stdout@@Base+0xbac>
   132a4:	ldr	r2, [sp, #164]	; 0xa4
   132a8:	tst	r2, #1
   132ac:	addne	fp, fp, #1
   132b0:	bne	127e0 <close_stdout@@Base+0x568>
   132b4:	b	12af0 <close_stdout@@Base+0x878>
   132b8:	ldr	r0, [sp, #36]	; 0x24
   132bc:	cmp	r0, #0
   132c0:	beq	12af0 <close_stdout@@Base+0x878>
   132c4:	b	12c38 <close_stdout@@Base+0x9c0>
   132c8:	ldr	r2, [sp, #32]
   132cc:	ldrb	r3, [r2, #1]
   132d0:	adds	r3, r3, #0
   132d4:	movne	r3, #1
   132d8:	b	12c0c <close_stdout@@Base+0x994>
   132dc:	bl	111b4 <abort@plt>
   132e0:	ldr	r8, [sp, #60]	; 0x3c
   132e4:	b	12c38 <close_stdout@@Base+0x9c0>
   132e8:	ldr	r0, [sp, #32]
   132ec:	bl	110c4 <strlen@plt>
   132f0:	mov	r8, r0
   132f4:	b	13100 <close_stdout@@Base+0xe88>
   132f8:	ldr	r2, [pc, #288]	; 13420 <close_stdout@@Base+0x11a8>
   132fc:	mov	r1, #1
   13300:	mov	r9, r1
   13304:	str	r1, [sp, #24]
   13308:	add	r2, pc, r2
   1330c:	str	r1, [sp, #28]
   13310:	str	r2, [sp, #52]	; 0x34
   13314:	b	127bc <close_stdout@@Base+0x544>
   13318:	ldr	r2, [pc, #260]	; 13424 <close_stdout@@Base+0x11ac>
   1331c:	mov	r3, #1
   13320:	mov	r9, r3
   13324:	str	r3, [sp, #28]
   13328:	add	r2, pc, r2
   1332c:	str	sl, [sp, #24]
   13330:	str	r2, [sp, #52]	; 0x34
   13334:	b	127bc <close_stdout@@Base+0x544>
   13338:	cmp	r8, r7
   1333c:	str	r9, [sp, #60]	; 0x3c
   13340:	mov	ip, r4
   13344:	ldr	r6, [sp, #96]	; 0x60
   13348:	ldr	r9, [sp, #88]	; 0x58
   1334c:	ldr	r4, [sp, #92]	; 0x5c
   13350:	ldr	r5, [sp, #100]	; 0x64
   13354:	bls	1338c <close_stdout@@Base+0x1114>
   13358:	ldrb	r3, [ip]
   1335c:	cmp	r3, #0
   13360:	beq	1338c <close_stdout@@Base+0x1114>
   13364:	ldr	r3, [sp, #60]	; 0x3c
   13368:	b	13378 <close_stdout@@Base+0x1100>
   1336c:	ldrb	r2, [r5, r3]
   13370:	cmp	r2, #0
   13374:	beq	13388 <close_stdout@@Base+0x1110>
   13378:	add	r3, r3, #1
   1337c:	add	r2, fp, r3
   13380:	cmp	r8, r2
   13384:	bhi	1336c <close_stdout@@Base+0x10f4>
   13388:	str	r3, [sp, #60]	; 0x3c
   1338c:	mov	r2, #1
   13390:	b	1328c <close_stdout@@Base+0x1014>
   13394:	str	r9, [sp, #60]	; 0x3c
   13398:	mov	r2, #1
   1339c:	ldr	r4, [sp, #92]	; 0x5c
   133a0:	ldr	r6, [sp, #96]	; 0x60
   133a4:	ldr	r9, [sp, #88]	; 0x58
   133a8:	ldr	r5, [sp, #100]	; 0x64
   133ac:	b	1328c <close_stdout@@Base+0x1014>
   133b0:	ldr	r9, [sp, #36]	; 0x24
   133b4:	b	12fd8 <close_stdout@@Base+0xd60>
   133b8:	bl	10fd4 <__stack_chk_fail@plt>
   133bc:	ldr	r1, [pc, #100]	; 13428 <close_stdout@@Base+0x11b0>
   133c0:	mov	r3, #0
   133c4:	mov	r0, #1
   133c8:	str	r3, [sp, #24]
   133cc:	add	r1, pc, r1
   133d0:	str	r0, [sp, #28]
   133d4:	mov	r9, r3
   133d8:	str	r1, [sp, #52]	; 0x34
   133dc:	b	127bc <close_stdout@@Base+0x544>
   133e0:	ldr	r0, [pc, #68]	; 1342c <close_stdout@@Base+0x11b4>
   133e4:	mov	r3, #1
   133e8:	mov	r9, #0
   133ec:	str	r3, [sp, #24]
   133f0:	add	r0, pc, r0
   133f4:	str	r3, [sp, #28]
   133f8:	str	r0, [sp, #52]	; 0x34
   133fc:	b	127bc <close_stdout@@Base+0x544>
   13400:	ldrdeq	r3, [r1], -r4
   13404:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13408:	andeq	r2, r0, ip, asr #6
   1340c:	andeq	r2, r0, r8, lsr #6
   13410:	andeq	r2, r0, r4, ror #5
   13414:	andeq	r2, r0, r0, asr #5
   13418:	andeq	r2, r0, r4, asr #4
   1341c:	andeq	r2, r0, ip, ror #3
   13420:	andeq	r1, r0, r4, asr #30
   13424:	andeq	r1, r0, r0, lsr #30
   13428:	andeq	r1, r0, ip, ror lr
   1342c:	andeq	r1, r0, ip, asr lr
   13430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13434:	sub	sp, sp, #44	; 0x2c
   13438:	mov	r6, r0
   1343c:	mov	r9, r1
   13440:	mov	sl, r2
   13444:	mov	r4, r3
   13448:	bl	110dc <__errno_location@plt>
   1344c:	ldr	fp, [pc, #412]	; 135f0 <close_stdout@@Base+0x1378>
   13450:	cmp	r6, #0
   13454:	add	fp, pc, fp
   13458:	ldr	r5, [fp]
   1345c:	ldr	r1, [r0]
   13460:	mov	r8, r0
   13464:	str	r1, [sp, #36]	; 0x24
   13468:	blt	135e8 <close_stdout@@Base+0x1370>
   1346c:	ldr	r3, [pc, #384]	; 135f4 <close_stdout@@Base+0x137c>
   13470:	add	r3, pc, r3
   13474:	ldr	r3, [r3]
   13478:	cmp	r6, r3
   1347c:	bcc	134d0 <close_stdout@@Base+0x1258>
   13480:	add	r7, r6, #1
   13484:	cmn	r7, #-536870911	; 0xe0000001
   13488:	bhi	135ec <close_stdout@@Base+0x1374>
   1348c:	add	r3, fp, #4
   13490:	cmp	r5, r3
   13494:	beq	135c0 <close_stdout@@Base+0x1348>
   13498:	mov	r0, r5
   1349c:	lsl	r1, r7, #3
   134a0:	bl	142c8 <close_stdout@@Base+0x2050>
   134a4:	mov	r5, r0
   134a8:	str	r0, [fp]
   134ac:	ldr	fp, [pc, #324]	; 135f8 <close_stdout@@Base+0x1380>
   134b0:	mov	r1, #0
   134b4:	add	fp, pc, fp
   134b8:	ldr	r0, [fp]
   134bc:	rsb	r2, r0, r7
   134c0:	add	r0, r5, r0, lsl #3
   134c4:	lsl	r2, r2, #3
   134c8:	bl	110f4 <memset@plt>
   134cc:	str	r7, [fp]
   134d0:	add	r2, r4, #8
   134d4:	str	r2, [sp, #32]
   134d8:	ldr	r1, [r4]
   134dc:	add	fp, r5, r6, lsl #3
   134e0:	ldr	lr, [sp, #32]
   134e4:	mov	r2, r9
   134e8:	ldr	r3, [r4, #4]
   134ec:	ldr	ip, [r5, r6, lsl #3]
   134f0:	ldr	r7, [fp, #4]
   134f4:	orr	r3, r3, #1
   134f8:	str	r1, [sp]
   134fc:	str	r3, [sp, #4]
   13500:	mov	r1, ip
   13504:	str	lr, [sp, #8]
   13508:	mov	r0, r7
   1350c:	ldr	lr, [r4, #40]	; 0x28
   13510:	str	r3, [sp, #28]
   13514:	mov	r3, sl
   13518:	str	lr, [sp, #12]
   1351c:	ldr	lr, [r4, #44]	; 0x2c
   13520:	str	ip, [sp, #24]
   13524:	str	lr, [sp, #16]
   13528:	bl	12708 <close_stdout@@Base+0x490>
   1352c:	ldr	ip, [sp, #24]
   13530:	cmp	ip, r0
   13534:	bhi	135ac <close_stdout@@Base+0x1334>
   13538:	ldr	r3, [pc, #188]	; 135fc <close_stdout@@Base+0x1384>
   1353c:	add	r1, r0, #1
   13540:	str	r1, [r5, r6, lsl #3]
   13544:	add	r3, pc, r3
   13548:	cmp	r7, r3
   1354c:	beq	13560 <close_stdout@@Base+0x12e8>
   13550:	mov	r0, r7
   13554:	str	r1, [sp, #24]
   13558:	bl	10f80 <free@plt>
   1355c:	ldr	r1, [sp, #24]
   13560:	mov	r0, r1
   13564:	str	r1, [sp, #24]
   13568:	bl	14270 <close_stdout@@Base+0x1ff8>
   1356c:	ldr	r3, [sp, #28]
   13570:	ldr	lr, [sp, #32]
   13574:	mov	r2, r9
   13578:	str	r0, [fp, #4]
   1357c:	mov	r7, r0
   13580:	ldr	ip, [r4]
   13584:	str	r3, [sp, #4]
   13588:	mov	r3, sl
   1358c:	str	lr, [sp, #8]
   13590:	str	ip, [sp]
   13594:	ldr	ip, [r4, #40]	; 0x28
   13598:	ldr	r1, [sp, #24]
   1359c:	str	ip, [sp, #12]
   135a0:	ldr	ip, [r4, #44]	; 0x2c
   135a4:	str	ip, [sp, #16]
   135a8:	bl	12708 <close_stdout@@Base+0x490>
   135ac:	ldr	r1, [sp, #36]	; 0x24
   135b0:	mov	r0, r7
   135b4:	str	r1, [r8]
   135b8:	add	sp, sp, #44	; 0x2c
   135bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135c0:	lsl	r1, r7, #3
   135c4:	mov	r0, #0
   135c8:	str	r3, [sp, #24]
   135cc:	bl	142c8 <close_stdout@@Base+0x2050>
   135d0:	ldr	r3, [sp, #24]
   135d4:	mov	r5, r0
   135d8:	ldm	r3, {r0, r1}
   135dc:	str	r5, [fp]
   135e0:	stm	r5, {r0, r1}
   135e4:	b	134ac <close_stdout@@Base+0x1234>
   135e8:	bl	111b4 <abort@plt>
   135ec:	bl	14484 <close_stdout@@Base+0x220c>
   135f0:	andeq	r2, r1, r0, lsl sp
   135f4:	andeq	r2, r1, r0, asr #25
   135f8:	andeq	r2, r1, ip, ror ip
   135fc:	andeq	r2, r1, r8, asr #24
   13600:	push	{r4, r5, r6, lr}
   13604:	mov	r5, r0
   13608:	bl	110dc <__errno_location@plt>
   1360c:	cmp	r5, #0
   13610:	mov	r1, #48	; 0x30
   13614:	mov	r4, r0
   13618:	ldr	r0, [pc, #24]	; 13638 <close_stdout@@Base+0x13c0>
   1361c:	ldr	r6, [r4]
   13620:	add	r0, pc, r0
   13624:	add	r0, r0, #256	; 0x100
   13628:	movne	r0, r5
   1362c:	bl	14444 <close_stdout@@Base+0x21cc>
   13630:	str	r6, [r4]
   13634:	pop	{r4, r5, r6, pc}
   13638:	andeq	r2, r1, ip, ror #22
   1363c:	cmp	r0, #0
   13640:	beq	1364c <close_stdout@@Base+0x13d4>
   13644:	ldr	r0, [r0]
   13648:	bx	lr
   1364c:	ldr	r0, [pc, #12]	; 13660 <close_stdout@@Base+0x13e8>
   13650:	add	r0, pc, r0
   13654:	add	r0, r0, #256	; 0x100
   13658:	ldr	r0, [r0]
   1365c:	bx	lr
   13660:	andeq	r2, r1, ip, lsr fp
   13664:	cmp	r0, #0
   13668:	beq	13674 <close_stdout@@Base+0x13fc>
   1366c:	str	r1, [r0]
   13670:	bx	lr
   13674:	ldr	r0, [pc, #12]	; 13688 <close_stdout@@Base+0x1410>
   13678:	add	r0, pc, r0
   1367c:	add	r0, r0, #256	; 0x100
   13680:	str	r1, [r0]
   13684:	bx	lr
   13688:	andeq	r2, r1, r4, lsl fp
   1368c:	cmp	r0, #0
   13690:	movne	r3, r0
   13694:	beq	136c4 <close_stdout@@Base+0x144c>
   13698:	lsr	ip, r1, #5
   1369c:	and	r1, r1, #31
   136a0:	add	r3, r3, ip, lsl #2
   136a4:	ldr	ip, [r3, #8]
   136a8:	lsr	r0, ip, r1
   136ac:	eor	r2, r0, r2
   136b0:	and	r0, r0, #1
   136b4:	and	r2, r2, #1
   136b8:	eor	ip, ip, r2, lsl r1
   136bc:	str	ip, [r3, #8]
   136c0:	bx	lr
   136c4:	ldr	r3, [pc, #8]	; 136d4 <close_stdout@@Base+0x145c>
   136c8:	add	r3, pc, r3
   136cc:	add	r3, r3, #256	; 0x100
   136d0:	b	13698 <close_stdout@@Base+0x1420>
   136d4:	andeq	r2, r1, r4, asr #21
   136d8:	subs	r3, r0, #0
   136dc:	beq	136ec <close_stdout@@Base+0x1474>
   136e0:	ldr	r0, [r3, #4]
   136e4:	str	r1, [r3, #4]
   136e8:	bx	lr
   136ec:	ldr	r3, [pc, #8]	; 136fc <close_stdout@@Base+0x1484>
   136f0:	add	r3, pc, r3
   136f4:	add	r3, r3, #256	; 0x100
   136f8:	b	136e0 <close_stdout@@Base+0x1468>
   136fc:	muleq	r1, ip, sl
   13700:	cmp	r0, #0
   13704:	push	{r3, lr}
   13708:	beq	1372c <close_stdout@@Base+0x14b4>
   1370c:	cmp	r2, #0
   13710:	cmpne	r1, #0
   13714:	mov	r3, #8
   13718:	strne	r1, [r0, #40]	; 0x28
   1371c:	str	r3, [r0]
   13720:	strne	r2, [r0, #44]	; 0x2c
   13724:	popne	{r3, pc}
   13728:	bl	111b4 <abort@plt>
   1372c:	ldr	r0, [pc, #8]	; 1373c <close_stdout@@Base+0x14c4>
   13730:	add	r0, pc, r0
   13734:	add	r0, r0, #256	; 0x100
   13738:	b	1370c <close_stdout@@Base+0x1494>
   1373c:	andeq	r2, r1, ip, asr sl
   13740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13744:	sub	sp, sp, #24
   13748:	mov	r7, r0
   1374c:	mov	sl, r1
   13750:	ldr	r4, [sp, #56]	; 0x38
   13754:	mov	r9, r2
   13758:	mov	r8, r3
   1375c:	cmp	r4, #0
   13760:	beq	137b4 <close_stdout@@Base+0x153c>
   13764:	bl	110dc <__errno_location@plt>
   13768:	ldr	r3, [r4]
   1376c:	add	lr, r4, #8
   13770:	mov	r1, sl
   13774:	mov	r2, r9
   13778:	ldr	r6, [r0]
   1377c:	mov	r5, r0
   13780:	str	r3, [sp]
   13784:	mov	r0, r7
   13788:	ldr	ip, [r4, #4]
   1378c:	mov	r3, r8
   13790:	stmib	sp, {ip, lr}
   13794:	ldr	ip, [r4, #40]	; 0x28
   13798:	str	ip, [sp, #12]
   1379c:	ldr	ip, [r4, #44]	; 0x2c
   137a0:	str	ip, [sp, #16]
   137a4:	bl	12708 <close_stdout@@Base+0x490>
   137a8:	str	r6, [r5]
   137ac:	add	sp, sp, #24
   137b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137b4:	ldr	r4, [pc, #8]	; 137c4 <close_stdout@@Base+0x154c>
   137b8:	add	r4, pc, r4
   137bc:	add	r4, r4, #256	; 0x100
   137c0:	b	13764 <close_stdout@@Base+0x14ec>
   137c4:	ldrdeq	r2, [r1], -r4
   137c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137cc:	subs	r4, r3, #0
   137d0:	sub	sp, sp, #36	; 0x24
   137d4:	mov	r7, r0
   137d8:	mov	r6, r1
   137dc:	mov	r5, r2
   137e0:	beq	1389c <close_stdout@@Base+0x1624>
   137e4:	bl	110dc <__errno_location@plt>
   137e8:	ldr	r3, [r4]
   137ec:	ldr	sl, [r4, #4]
   137f0:	add	r9, r4, #8
   137f4:	mov	r8, r0
   137f8:	mov	r0, #0
   137fc:	ldr	r2, [r8]
   13800:	cmp	r5, r0
   13804:	orreq	sl, sl, #1
   13808:	str	r9, [sp, #8]
   1380c:	mov	r1, r0
   13810:	stm	sp, {r3, sl}
   13814:	mov	r3, r6
   13818:	ldr	ip, [r4, #40]	; 0x28
   1381c:	str	r2, [sp, #28]
   13820:	mov	r2, r7
   13824:	str	ip, [sp, #12]
   13828:	ldr	ip, [r4, #44]	; 0x2c
   1382c:	str	ip, [sp, #16]
   13830:	bl	12708 <close_stdout@@Base+0x490>
   13834:	add	r1, r0, #1
   13838:	mov	fp, r0
   1383c:	str	r1, [sp, #24]
   13840:	mov	r0, r1
   13844:	bl	14270 <close_stdout@@Base+0x1ff8>
   13848:	ldr	lr, [r4]
   1384c:	str	sl, [sp, #4]
   13850:	mov	r3, r6
   13854:	str	r9, [sp, #8]
   13858:	mov	r2, r7
   1385c:	str	lr, [sp]
   13860:	ldr	lr, [r4, #40]	; 0x28
   13864:	ldr	r1, [sp, #24]
   13868:	str	lr, [sp, #12]
   1386c:	ldr	lr, [r4, #44]	; 0x2c
   13870:	str	lr, [sp, #16]
   13874:	str	r0, [sp, #24]
   13878:	bl	12708 <close_stdout@@Base+0x490>
   1387c:	ldr	r3, [sp, #28]
   13880:	cmp	r5, #0
   13884:	str	r3, [r8]
   13888:	ldr	ip, [sp, #24]
   1388c:	strne	fp, [r5]
   13890:	mov	r0, ip
   13894:	add	sp, sp, #36	; 0x24
   13898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1389c:	ldr	r4, [pc, #8]	; 138ac <close_stdout@@Base+0x1634>
   138a0:	add	r4, pc, r4
   138a4:	add	r4, r4, #256	; 0x100
   138a8:	b	137e4 <close_stdout@@Base+0x156c>
   138ac:	andeq	r2, r1, ip, ror #17
   138b0:	mov	r3, r2
   138b4:	mov	r2, #0
   138b8:	b	137c8 <close_stdout@@Base+0x1550>
   138bc:	ldr	r2, [pc, #152]	; 1395c <close_stdout@@Base+0x16e4>
   138c0:	push	{r3, r4, r5, r6, r7, lr}
   138c4:	add	r2, pc, r2
   138c8:	ldr	r3, [pc, #144]	; 13960 <close_stdout@@Base+0x16e8>
   138cc:	ldr	r6, [r2]
   138d0:	add	r3, pc, r3
   138d4:	cmp	r6, #1
   138d8:	ldr	r7, [r3]
   138dc:	movhi	r4, #1
   138e0:	movhi	r5, r7
   138e4:	bls	13900 <close_stdout@@Base+0x1688>
   138e8:	ldr	r0, [r5, #12]
   138ec:	add	r4, r4, #1
   138f0:	bl	10f80 <free@plt>
   138f4:	cmp	r4, r6
   138f8:	add	r5, r5, #8
   138fc:	bne	138e8 <close_stdout@@Base+0x1670>
   13900:	ldr	r4, [pc, #92]	; 13964 <close_stdout@@Base+0x16ec>
   13904:	ldr	r0, [r7, #4]
   13908:	add	r4, pc, r4
   1390c:	cmp	r0, r4
   13910:	beq	13928 <close_stdout@@Base+0x16b0>
   13914:	bl	10f80 <free@plt>
   13918:	ldr	r3, [pc, #72]	; 13968 <close_stdout@@Base+0x16f0>
   1391c:	mov	r2, #256	; 0x100
   13920:	add	r3, pc, r3
   13924:	stmib	r3, {r2, r4}
   13928:	ldr	r4, [pc, #60]	; 1396c <close_stdout@@Base+0x16f4>
   1392c:	add	r4, pc, r4
   13930:	add	r5, r4, #4
   13934:	cmp	r7, r5
   13938:	beq	13948 <close_stdout@@Base+0x16d0>
   1393c:	mov	r0, r7
   13940:	bl	10f80 <free@plt>
   13944:	str	r5, [r4]
   13948:	ldr	r3, [pc, #32]	; 13970 <close_stdout@@Base+0x16f8>
   1394c:	mov	r2, #1
   13950:	add	r3, pc, r3
   13954:	str	r2, [r3]
   13958:	pop	{r3, r4, r5, r6, r7, pc}
   1395c:	andeq	r2, r1, ip, ror #16
   13960:	muleq	r1, r4, r8
   13964:	andeq	r2, r1, r4, lsl #17
   13968:	andeq	r2, r1, r4, asr #16
   1396c:	andeq	r2, r1, r8, lsr r8
   13970:	andeq	r2, r1, r0, ror #15
   13974:	ldr	r3, [pc, #12]	; 13988 <close_stdout@@Base+0x1710>
   13978:	mvn	r2, #0
   1397c:	add	r3, pc, r3
   13980:	add	r3, r3, #256	; 0x100
   13984:	b	13430 <close_stdout@@Base+0x11b8>
   13988:	andeq	r2, r1, r0, lsl r8
   1398c:	ldr	r3, [pc, #8]	; 1399c <close_stdout@@Base+0x1724>
   13990:	add	r3, pc, r3
   13994:	add	r3, r3, #256	; 0x100
   13998:	b	13430 <close_stdout@@Base+0x11b8>
   1399c:	strdeq	r2, [r1], -ip
   139a0:	mov	r1, r0
   139a4:	mov	r0, #0
   139a8:	b	13974 <close_stdout@@Base+0x16fc>
   139ac:	mov	r2, r1
   139b0:	mov	r1, r0
   139b4:	mov	r0, #0
   139b8:	b	1398c <close_stdout@@Base+0x1714>
   139bc:	ldr	r3, [pc, #92]	; 13a20 <close_stdout@@Base+0x17a8>
   139c0:	ldr	ip, [pc, #92]	; 13a24 <close_stdout@@Base+0x17ac>
   139c4:	add	r3, pc, r3
   139c8:	push	{r4, r5, r6, r7, lr}
   139cc:	sub	sp, sp, #60	; 0x3c
   139d0:	ldr	r4, [r3, ip]
   139d4:	add	r5, sp, #4
   139d8:	mov	r7, r2
   139dc:	mov	r6, r0
   139e0:	mov	r0, r5
   139e4:	ldr	r3, [r4]
   139e8:	str	r3, [sp, #52]	; 0x34
   139ec:	bl	12550 <close_stdout@@Base+0x2d8>
   139f0:	mov	r3, r5
   139f4:	mvn	r2, #0
   139f8:	mov	r0, r6
   139fc:	mov	r1, r7
   13a00:	bl	13430 <close_stdout@@Base+0x11b8>
   13a04:	ldr	r2, [sp, #52]	; 0x34
   13a08:	ldr	r3, [r4]
   13a0c:	cmp	r2, r3
   13a10:	bne	13a1c <close_stdout@@Base+0x17a4>
   13a14:	add	sp, sp, #60	; 0x3c
   13a18:	pop	{r4, r5, r6, r7, pc}
   13a1c:	bl	10fd4 <__stack_chk_fail@plt>
   13a20:	andeq	r2, r1, r4, lsr r6
   13a24:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a28:	ldr	ip, [pc, #96]	; 13a90 <close_stdout@@Base+0x1818>
   13a2c:	push	{r4, r5, r6, r7, r8, lr}
   13a30:	add	ip, pc, ip
   13a34:	ldr	lr, [pc, #88]	; 13a94 <close_stdout@@Base+0x181c>
   13a38:	sub	sp, sp, #56	; 0x38
   13a3c:	mov	r8, r3
   13a40:	add	r5, sp, #4
   13a44:	mov	r7, r2
   13a48:	mov	r6, r0
   13a4c:	ldr	r4, [ip, lr]
   13a50:	mov	r0, r5
   13a54:	ldr	r3, [r4]
   13a58:	str	r3, [sp, #52]	; 0x34
   13a5c:	bl	12550 <close_stdout@@Base+0x2d8>
   13a60:	mov	r2, r8
   13a64:	mov	r3, r5
   13a68:	mov	r0, r6
   13a6c:	mov	r1, r7
   13a70:	bl	13430 <close_stdout@@Base+0x11b8>
   13a74:	ldr	r2, [sp, #52]	; 0x34
   13a78:	ldr	r3, [r4]
   13a7c:	cmp	r2, r3
   13a80:	bne	13a8c <close_stdout@@Base+0x1814>
   13a84:	add	sp, sp, #56	; 0x38
   13a88:	pop	{r4, r5, r6, r7, r8, pc}
   13a8c:	bl	10fd4 <__stack_chk_fail@plt>
   13a90:	andeq	r2, r1, r8, asr #11
   13a94:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a98:	mov	r2, r1
   13a9c:	mov	r1, r0
   13aa0:	mov	r0, #0
   13aa4:	b	139bc <close_stdout@@Base+0x1744>
   13aa8:	mov	ip, r1
   13aac:	mov	r3, r2
   13ab0:	mov	r1, r0
   13ab4:	mov	r2, ip
   13ab8:	mov	r0, #0
   13abc:	b	13a28 <close_stdout@@Base+0x17b0>
   13ac0:	push	{r4, r5, r6, r7, r8, lr}
   13ac4:	mov	r5, r2
   13ac8:	ldr	lr, [pc, #136]	; 13b58 <close_stdout@@Base+0x18e0>
   13acc:	mov	r7, r0
   13ad0:	mov	r6, r1
   13ad4:	ldr	r4, [pc, #128]	; 13b5c <close_stdout@@Base+0x18e4>
   13ad8:	add	lr, pc, lr
   13adc:	sub	sp, sp, #56	; 0x38
   13ae0:	add	lr, lr, #256	; 0x100
   13ae4:	ldr	r8, [pc, #116]	; 13b60 <close_stdout@@Base+0x18e8>
   13ae8:	add	r4, pc, r4
   13aec:	add	ip, sp, #4
   13af0:	ldm	lr!, {r0, r1, r2, r3}
   13af4:	ldr	r4, [r4, r8]
   13af8:	stmia	ip!, {r0, r1, r2, r3}
   13afc:	ldm	lr!, {r0, r1, r2, r3}
   13b00:	ldr	r8, [r4]
   13b04:	stmia	ip!, {r0, r1, r2, r3}
   13b08:	ldm	lr, {r0, r1, r2, r3}
   13b0c:	str	r8, [sp, #52]	; 0x34
   13b10:	stm	ip, {r0, r1, r2, r3}
   13b14:	mov	r1, r5
   13b18:	add	r5, sp, #4
   13b1c:	mov	r2, #1
   13b20:	mov	r0, r5
   13b24:	bl	1368c <close_stdout@@Base+0x1414>
   13b28:	mov	r2, r6
   13b2c:	mov	r3, r5
   13b30:	mov	r1, r7
   13b34:	mov	r0, #0
   13b38:	bl	13430 <close_stdout@@Base+0x11b8>
   13b3c:	ldr	r2, [sp, #52]	; 0x34
   13b40:	ldr	r3, [r4]
   13b44:	cmp	r2, r3
   13b48:	bne	13b54 <close_stdout@@Base+0x18dc>
   13b4c:	add	sp, sp, #56	; 0x38
   13b50:	pop	{r4, r5, r6, r7, r8, pc}
   13b54:	bl	10fd4 <__stack_chk_fail@plt>
   13b58:			; <UNDEFINED> instruction: 0x000126b4
   13b5c:	andeq	r2, r1, r0, lsl r5
   13b60:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b64:	mov	r2, r1
   13b68:	mvn	r1, #0
   13b6c:	b	13ac0 <close_stdout@@Base+0x1848>
   13b70:	mov	r1, #58	; 0x3a
   13b74:	b	13b64 <close_stdout@@Base+0x18ec>
   13b78:	mov	r2, #58	; 0x3a
   13b7c:	b	13ac0 <close_stdout@@Base+0x1848>
   13b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b84:	mov	r5, r2
   13b88:	ldr	lr, [pc, #144]	; 13c20 <close_stdout@@Base+0x19a8>
   13b8c:	mov	r8, r0
   13b90:	mov	r9, r1
   13b94:	mov	r7, r3
   13b98:	add	lr, pc, lr
   13b9c:	ldr	r4, [pc, #128]	; 13c24 <close_stdout@@Base+0x19ac>
   13ba0:	add	lr, lr, #256	; 0x100
   13ba4:	sub	sp, sp, #56	; 0x38
   13ba8:	ldr	sl, [pc, #120]	; 13c28 <close_stdout@@Base+0x19b0>
   13bac:	add	r4, pc, r4
   13bb0:	ldm	lr!, {r0, r1, r2, r3}
   13bb4:	add	ip, sp, #4
   13bb8:	ldr	r4, [r4, sl]
   13bbc:	ldr	r6, [sp, #88]	; 0x58
   13bc0:	stmia	ip!, {r0, r1, r2, r3}
   13bc4:	ldm	lr!, {r0, r1, r2, r3}
   13bc8:	ldr	sl, [r4]
   13bcc:	stmia	ip!, {r0, r1, r2, r3}
   13bd0:	ldm	lr, {r0, r1, r2, r3}
   13bd4:	str	sl, [sp, #52]	; 0x34
   13bd8:	stm	ip, {r0, r1, r2, r3}
   13bdc:	mov	r2, r5
   13be0:	add	r5, sp, #4
   13be4:	mov	r1, r9
   13be8:	mov	r0, r5
   13bec:	bl	13700 <close_stdout@@Base+0x1488>
   13bf0:	mov	r2, r6
   13bf4:	mov	r3, r5
   13bf8:	mov	r0, r8
   13bfc:	mov	r1, r7
   13c00:	bl	13430 <close_stdout@@Base+0x11b8>
   13c04:	ldr	r2, [sp, #52]	; 0x34
   13c08:	ldr	r3, [r4]
   13c0c:	cmp	r2, r3
   13c10:	bne	13c1c <close_stdout@@Base+0x19a4>
   13c14:	add	sp, sp, #56	; 0x38
   13c18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c1c:	bl	10fd4 <__stack_chk_fail@plt>
   13c20:	strdeq	r2, [r1], -r4
   13c24:	andeq	r2, r1, ip, asr #8
   13c28:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13c2c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c30:	sub	sp, sp, #12
   13c34:	mvn	ip, #0
   13c38:	str	ip, [sp]
   13c3c:	bl	13b80 <close_stdout@@Base+0x1908>
   13c40:	add	sp, sp, #12
   13c44:	pop	{pc}		; (ldr pc, [sp], #4)
   13c48:	mov	ip, r1
   13c4c:	mov	r3, r2
   13c50:	mov	r1, r0
   13c54:	mov	r2, ip
   13c58:	mov	r0, #0
   13c5c:	b	13c2c <close_stdout@@Base+0x19b4>
   13c60:	push	{lr}		; (str lr, [sp, #-4]!)
   13c64:	sub	sp, sp, #12
   13c68:	mov	lr, r1
   13c6c:	mov	ip, r2
   13c70:	mov	r1, r0
   13c74:	str	r3, [sp]
   13c78:	mov	r2, lr
   13c7c:	mov	r3, ip
   13c80:	mov	r0, #0
   13c84:	bl	13b80 <close_stdout@@Base+0x1908>
   13c88:	add	sp, sp, #12
   13c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c90:	ldr	r3, [pc, #12]	; 13ca4 <close_stdout@@Base+0x1a2c>
   13c94:	ldr	ip, [pc, #12]	; 13ca8 <close_stdout@@Base+0x1a30>
   13c98:	add	r3, pc, r3
   13c9c:	ldr	r3, [r3, ip]
   13ca0:	b	13430 <close_stdout@@Base+0x11b8>
   13ca4:	andeq	r2, r1, r0, ror #6
   13ca8:	andeq	r0, r0, ip, ror #1
   13cac:	mov	r2, r1
   13cb0:	mov	r1, r0
   13cb4:	mov	r0, #0
   13cb8:	b	13c90 <close_stdout@@Base+0x1a18>
   13cbc:	mvn	r2, #0
   13cc0:	b	13c90 <close_stdout@@Base+0x1a18>
   13cc4:	mov	r1, r0
   13cc8:	mov	r0, #0
   13ccc:	b	13cbc <close_stdout@@Base+0x1a44>
   13cd0:	push	{r4, r5, r6, r7, lr}
   13cd4:	cmp	r1, #0
   13cd8:	sub	sp, sp, #36	; 0x24
   13cdc:	ldr	r7, [pc, #896]	; 14064 <close_stdout@@Base+0x1dec>
   13ce0:	mov	ip, r3
   13ce4:	mov	r5, r0
   13ce8:	add	r7, pc, r7
   13cec:	ldr	r4, [sp, #56]	; 0x38
   13cf0:	ldr	r6, [sp, #60]	; 0x3c
   13cf4:	beq	14038 <close_stdout@@Base+0x1dc0>
   13cf8:	str	r2, [sp]
   13cfc:	mov	r3, r1
   13d00:	ldr	r2, [pc, #864]	; 14068 <close_stdout@@Base+0x1df0>
   13d04:	mov	r1, #1
   13d08:	str	ip, [sp, #4]
   13d0c:	add	r2, pc, r2
   13d10:	bl	11124 <__fprintf_chk@plt>
   13d14:	ldr	r1, [pc, #848]	; 1406c <close_stdout@@Base+0x1df4>
   13d18:	mov	r2, #5
   13d1c:	mov	r0, #0
   13d20:	add	r1, pc, r1
   13d24:	bl	10fc8 <dcgettext@plt>
   13d28:	ldr	r2, [pc, #832]	; 14070 <close_stdout@@Base+0x1df8>
   13d2c:	movw	ip, #2013	; 0x7dd
   13d30:	mov	r1, #1
   13d34:	ldr	r2, [r7, r2]
   13d38:	str	ip, [sp]
   13d3c:	mov	r3, r0
   13d40:	mov	r0, r5
   13d44:	bl	11124 <__fprintf_chk@plt>
   13d48:	ldr	r1, [pc, #804]	; 14074 <close_stdout@@Base+0x1dfc>
   13d4c:	mov	r0, #0
   13d50:	mov	r2, #5
   13d54:	add	r1, pc, r1
   13d58:	bl	10fc8 <dcgettext@plt>
   13d5c:	mov	r1, r5
   13d60:	bl	10f44 <fputs_unlocked@plt>
   13d64:	cmp	r6, #9
   13d68:	addls	pc, pc, r6, lsl #2
   13d6c:	b	14054 <close_stdout@@Base+0x1ddc>
   13d70:	b	13e04 <close_stdout@@Base+0x1b8c>
   13d74:	b	13e08 <close_stdout@@Base+0x1b90>
   13d78:	b	13e38 <close_stdout@@Base+0x1bc0>
   13d7c:	b	13e6c <close_stdout@@Base+0x1bf4>
   13d80:	b	13ea8 <close_stdout@@Base+0x1c30>
   13d84:	b	13ee8 <close_stdout@@Base+0x1c70>
   13d88:	b	13f30 <close_stdout@@Base+0x1cb8>
   13d8c:	b	13f80 <close_stdout@@Base+0x1d08>
   13d90:	b	13fd8 <close_stdout@@Base+0x1d60>
   13d94:	b	13d98 <close_stdout@@Base+0x1b20>
   13d98:	ldr	r1, [pc, #728]	; 14078 <close_stdout@@Base+0x1e00>
   13d9c:	mov	r0, #0
   13da0:	add	r1, pc, r1
   13da4:	mov	r2, #5
   13da8:	bl	10fc8 <dcgettext@plt>
   13dac:	ldm	r4, {r3, ip}
   13db0:	mov	r1, #1
   13db4:	str	ip, [sp]
   13db8:	ldr	ip, [r4, #8]
   13dbc:	str	ip, [sp, #4]
   13dc0:	ldr	ip, [r4, #12]
   13dc4:	str	ip, [sp, #8]
   13dc8:	ldr	ip, [r4, #16]
   13dcc:	str	ip, [sp, #12]
   13dd0:	ldr	ip, [r4, #20]
   13dd4:	str	ip, [sp, #16]
   13dd8:	ldr	ip, [r4, #24]
   13ddc:	str	ip, [sp, #20]
   13de0:	ldr	ip, [r4, #28]
   13de4:	str	ip, [sp, #24]
   13de8:	ldr	ip, [r4, #32]
   13dec:	str	ip, [sp, #28]
   13df0:	mov	r2, r0
   13df4:	mov	r0, r5
   13df8:	bl	11124 <__fprintf_chk@plt>
   13dfc:	add	sp, sp, #36	; 0x24
   13e00:	pop	{r4, r5, r6, r7, pc}
   13e04:	bl	111b4 <abort@plt>
   13e08:	ldr	r1, [pc, #620]	; 1407c <close_stdout@@Base+0x1e04>
   13e0c:	mov	r2, #5
   13e10:	mov	r0, #0
   13e14:	add	r1, pc, r1
   13e18:	bl	10fc8 <dcgettext@plt>
   13e1c:	ldr	r3, [r4]
   13e20:	mov	r1, #1
   13e24:	mov	r2, r0
   13e28:	mov	r0, r5
   13e2c:	add	sp, sp, #36	; 0x24
   13e30:	pop	{r4, r5, r6, r7, lr}
   13e34:	b	11124 <__fprintf_chk@plt>
   13e38:	ldr	r1, [pc, #576]	; 14080 <close_stdout@@Base+0x1e08>
   13e3c:	mov	r2, #5
   13e40:	mov	r0, #0
   13e44:	add	r1, pc, r1
   13e48:	bl	10fc8 <dcgettext@plt>
   13e4c:	ldm	r4, {r3, ip}
   13e50:	mov	r1, #1
   13e54:	str	ip, [sp, #56]	; 0x38
   13e58:	mov	r2, r0
   13e5c:	mov	r0, r5
   13e60:	add	sp, sp, #36	; 0x24
   13e64:	pop	{r4, r5, r6, r7, lr}
   13e68:	b	11124 <__fprintf_chk@plt>
   13e6c:	ldr	r1, [pc, #528]	; 14084 <close_stdout@@Base+0x1e0c>
   13e70:	mov	r2, #5
   13e74:	mov	r0, #0
   13e78:	add	r1, pc, r1
   13e7c:	bl	10fc8 <dcgettext@plt>
   13e80:	ldm	r4, {r3, ip}
   13e84:	mov	r1, #1
   13e88:	str	ip, [sp, #56]	; 0x38
   13e8c:	ldr	ip, [r4, #8]
   13e90:	str	ip, [sp, #60]	; 0x3c
   13e94:	mov	r2, r0
   13e98:	mov	r0, r5
   13e9c:	add	sp, sp, #36	; 0x24
   13ea0:	pop	{r4, r5, r6, r7, lr}
   13ea4:	b	11124 <__fprintf_chk@plt>
   13ea8:	ldr	r1, [pc, #472]	; 14088 <close_stdout@@Base+0x1e10>
   13eac:	mov	r2, #5
   13eb0:	mov	r0, #0
   13eb4:	add	r1, pc, r1
   13eb8:	bl	10fc8 <dcgettext@plt>
   13ebc:	ldm	r4, {r3, ip}
   13ec0:	mov	r1, #1
   13ec4:	str	ip, [sp]
   13ec8:	ldr	ip, [r4, #8]
   13ecc:	str	ip, [sp, #4]
   13ed0:	ldr	ip, [r4, #12]
   13ed4:	str	ip, [sp, #8]
   13ed8:	mov	r2, r0
   13edc:	mov	r0, r5
   13ee0:	bl	11124 <__fprintf_chk@plt>
   13ee4:	b	13dfc <close_stdout@@Base+0x1b84>
   13ee8:	ldr	r1, [pc, #412]	; 1408c <close_stdout@@Base+0x1e14>
   13eec:	mov	r2, #5
   13ef0:	mov	r0, #0
   13ef4:	add	r1, pc, r1
   13ef8:	bl	10fc8 <dcgettext@plt>
   13efc:	ldm	r4, {r3, ip}
   13f00:	mov	r1, #1
   13f04:	str	ip, [sp]
   13f08:	ldr	ip, [r4, #8]
   13f0c:	str	ip, [sp, #4]
   13f10:	ldr	ip, [r4, #12]
   13f14:	str	ip, [sp, #8]
   13f18:	ldr	ip, [r4, #16]
   13f1c:	str	ip, [sp, #12]
   13f20:	mov	r2, r0
   13f24:	mov	r0, r5
   13f28:	bl	11124 <__fprintf_chk@plt>
   13f2c:	b	13dfc <close_stdout@@Base+0x1b84>
   13f30:	ldr	r1, [pc, #344]	; 14090 <close_stdout@@Base+0x1e18>
   13f34:	mov	r2, #5
   13f38:	mov	r0, #0
   13f3c:	add	r1, pc, r1
   13f40:	bl	10fc8 <dcgettext@plt>
   13f44:	ldm	r4, {r3, ip}
   13f48:	mov	r1, #1
   13f4c:	str	ip, [sp]
   13f50:	ldr	ip, [r4, #8]
   13f54:	str	ip, [sp, #4]
   13f58:	ldr	ip, [r4, #12]
   13f5c:	str	ip, [sp, #8]
   13f60:	ldr	ip, [r4, #16]
   13f64:	str	ip, [sp, #12]
   13f68:	ldr	ip, [r4, #20]
   13f6c:	str	ip, [sp, #16]
   13f70:	mov	r2, r0
   13f74:	mov	r0, r5
   13f78:	bl	11124 <__fprintf_chk@plt>
   13f7c:	b	13dfc <close_stdout@@Base+0x1b84>
   13f80:	ldr	r1, [pc, #268]	; 14094 <close_stdout@@Base+0x1e1c>
   13f84:	mov	r2, #5
   13f88:	mov	r0, #0
   13f8c:	add	r1, pc, r1
   13f90:	bl	10fc8 <dcgettext@plt>
   13f94:	ldm	r4, {r3, ip}
   13f98:	mov	r1, #1
   13f9c:	str	ip, [sp]
   13fa0:	ldr	ip, [r4, #8]
   13fa4:	str	ip, [sp, #4]
   13fa8:	ldr	ip, [r4, #12]
   13fac:	str	ip, [sp, #8]
   13fb0:	ldr	ip, [r4, #16]
   13fb4:	str	ip, [sp, #12]
   13fb8:	ldr	ip, [r4, #20]
   13fbc:	str	ip, [sp, #16]
   13fc0:	ldr	ip, [r4, #24]
   13fc4:	str	ip, [sp, #20]
   13fc8:	mov	r2, r0
   13fcc:	mov	r0, r5
   13fd0:	bl	11124 <__fprintf_chk@plt>
   13fd4:	b	13dfc <close_stdout@@Base+0x1b84>
   13fd8:	ldr	r1, [pc, #184]	; 14098 <close_stdout@@Base+0x1e20>
   13fdc:	mov	r2, #5
   13fe0:	mov	r0, #0
   13fe4:	add	r1, pc, r1
   13fe8:	bl	10fc8 <dcgettext@plt>
   13fec:	ldm	r4, {r3, ip}
   13ff0:	mov	r1, #1
   13ff4:	str	ip, [sp]
   13ff8:	ldr	ip, [r4, #8]
   13ffc:	str	ip, [sp, #4]
   14000:	ldr	ip, [r4, #12]
   14004:	str	ip, [sp, #8]
   14008:	ldr	ip, [r4, #16]
   1400c:	str	ip, [sp, #12]
   14010:	ldr	ip, [r4, #20]
   14014:	str	ip, [sp, #16]
   14018:	ldr	ip, [r4, #24]
   1401c:	str	ip, [sp, #20]
   14020:	ldr	ip, [r4, #28]
   14024:	str	ip, [sp, #24]
   14028:	mov	r2, r0
   1402c:	mov	r0, r5
   14030:	bl	11124 <__fprintf_chk@plt>
   14034:	b	13dfc <close_stdout@@Base+0x1b84>
   14038:	str	r3, [sp]
   1403c:	mov	r3, r2
   14040:	ldr	r2, [pc, #84]	; 1409c <close_stdout@@Base+0x1e24>
   14044:	mov	r1, #1
   14048:	add	r2, pc, r2
   1404c:	bl	11124 <__fprintf_chk@plt>
   14050:	b	13d14 <close_stdout@@Base+0x1a9c>
   14054:	ldr	r1, [pc, #68]	; 140a0 <close_stdout@@Base+0x1e28>
   14058:	mov	r0, #0
   1405c:	add	r1, pc, r1
   14060:	b	13da4 <close_stdout@@Base+0x1b2c>
   14064:	andeq	r2, r1, r0, lsl r3
   14068:	muleq	r0, r4, r5
   1406c:	muleq	r0, r4, r5
   14070:	andeq	r0, r0, r0, lsr #2
   14074:	andeq	r1, r0, r4, ror #10
   14078:	strdeq	r1, [r0], -r0
   1407c:	andeq	r1, r0, r0, ror r5
   14080:	andeq	r1, r0, r0, asr r5
   14084:	andeq	r1, r0, r4, lsr r5
   14088:	andeq	r1, r0, r4, lsl r5
   1408c:	strdeq	r1, [r0], -r4
   14090:	ldrdeq	r1, [r0], -r0
   14094:	andeq	r1, r0, r8, lsr #9
   14098:	andeq	r1, r0, ip, ror r4
   1409c:	andeq	r1, r0, r4, ror #4
   140a0:	andeq	r1, r0, r8, ror #8
   140a4:	push	{r4, r5, lr}
   140a8:	sub	sp, sp, #12
   140ac:	ldr	r5, [sp, #24]
   140b0:	ldr	ip, [r5]
   140b4:	cmp	ip, #0
   140b8:	beq	140d4 <close_stdout@@Base+0x1e5c>
   140bc:	mov	lr, r5
   140c0:	mov	ip, #0
   140c4:	ldr	r4, [lr, #4]!
   140c8:	add	ip, ip, #1
   140cc:	cmp	r4, #0
   140d0:	bne	140c4 <close_stdout@@Base+0x1e4c>
   140d4:	stm	sp, {r5, ip}
   140d8:	bl	13cd0 <close_stdout@@Base+0x1a58>
   140dc:	add	sp, sp, #12
   140e0:	pop	{r4, r5, pc}
   140e4:	push	{r4, r5, r6, r7, lr}
   140e8:	sub	sp, sp, #60	; 0x3c
   140ec:	ldr	r4, [pc, #100]	; 14158 <close_stdout@@Base+0x1ee0>
   140f0:	mov	ip, #0
   140f4:	ldr	r5, [pc, #96]	; 1415c <close_stdout@@Base+0x1ee4>
   140f8:	mov	lr, ip
   140fc:	add	r4, pc, r4
   14100:	ldr	r6, [sp, #80]	; 0x50
   14104:	ldr	r7, [r4, r5]
   14108:	add	r5, sp, #12
   1410c:	ldr	r4, [r7]
   14110:	str	r4, [sp, #52]	; 0x34
   14114:	ldr	r4, [r6, ip]
   14118:	cmp	r4, #0
   1411c:	str	r4, [r5, ip]
   14120:	beq	14134 <close_stdout@@Base+0x1ebc>
   14124:	add	lr, lr, #1
   14128:	add	ip, ip, #4
   1412c:	cmp	lr, #10
   14130:	bne	14114 <close_stdout@@Base+0x1e9c>
   14134:	stm	sp, {r5, lr}
   14138:	bl	13cd0 <close_stdout@@Base+0x1a58>
   1413c:	ldr	r2, [sp, #52]	; 0x34
   14140:	ldr	r3, [r7]
   14144:	cmp	r2, r3
   14148:	bne	14154 <close_stdout@@Base+0x1edc>
   1414c:	add	sp, sp, #60	; 0x3c
   14150:	pop	{r4, r5, r6, r7, pc}
   14154:	bl	10fd4 <__stack_chk_fail@plt>
   14158:	strdeq	r1, [r1], -ip
   1415c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14160:	push	{r3}		; (str r3, [sp, #-4]!)
   14164:	push	{r4, lr}
   14168:	sub	sp, sp, #20
   1416c:	ldr	lr, [pc, #72]	; 141bc <close_stdout@@Base+0x1f44>
   14170:	add	ip, sp, #32
   14174:	ldr	r4, [pc, #68]	; 141c0 <close_stdout@@Base+0x1f48>
   14178:	add	lr, pc, lr
   1417c:	ldr	r3, [sp, #28]
   14180:	ldr	r4, [lr, r4]
   14184:	str	ip, [sp]
   14188:	str	ip, [sp, #8]
   1418c:	ldr	ip, [r4]
   14190:	str	ip, [sp, #12]
   14194:	bl	140e4 <close_stdout@@Base+0x1e6c>
   14198:	ldr	r2, [sp, #12]
   1419c:	ldr	r3, [r4]
   141a0:	cmp	r2, r3
   141a4:	bne	141b8 <close_stdout@@Base+0x1f40>
   141a8:	add	sp, sp, #20
   141ac:	pop	{r4, lr}
   141b0:	add	sp, sp, #4
   141b4:	bx	lr
   141b8:	bl	10fd4 <__stack_chk_fail@plt>
   141bc:	andeq	r1, r1, r0, lsl #29
   141c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   141c4:	ldr	r1, [pc, #132]	; 14250 <close_stdout@@Base+0x1fd8>
   141c8:	mov	r2, #5
   141cc:	push	{r4, lr}
   141d0:	add	r1, pc, r1
   141d4:	mov	r0, #0
   141d8:	ldr	r4, [pc, #116]	; 14254 <close_stdout@@Base+0x1fdc>
   141dc:	bl	10fc8 <dcgettext@plt>
   141e0:	ldr	r2, [pc, #112]	; 14258 <close_stdout@@Base+0x1fe0>
   141e4:	add	r4, pc, r4
   141e8:	add	r2, pc, r2
   141ec:	mov	r1, r0
   141f0:	mov	r0, #1
   141f4:	bl	1110c <__printf_chk@plt>
   141f8:	ldr	r1, [pc, #92]	; 1425c <close_stdout@@Base+0x1fe4>
   141fc:	mov	r2, #5
   14200:	mov	r0, #0
   14204:	add	r1, pc, r1
   14208:	bl	10fc8 <dcgettext@plt>
   1420c:	ldr	r2, [pc, #76]	; 14260 <close_stdout@@Base+0x1fe8>
   14210:	ldr	r3, [pc, #76]	; 14264 <close_stdout@@Base+0x1fec>
   14214:	add	r2, pc, r2
   14218:	add	r3, pc, r3
   1421c:	mov	r1, r0
   14220:	mov	r0, #1
   14224:	bl	1110c <__printf_chk@plt>
   14228:	ldr	r1, [pc, #56]	; 14268 <close_stdout@@Base+0x1ff0>
   1422c:	mov	r0, #0
   14230:	mov	r2, #5
   14234:	add	r1, pc, r1
   14238:	bl	10fc8 <dcgettext@plt>
   1423c:	ldr	r3, [pc, #40]	; 1426c <close_stdout@@Base+0x1ff4>
   14240:	ldr	r3, [r4, r3]
   14244:	pop	{r4, lr}
   14248:	ldr	r1, [r3]
   1424c:	b	10f44 <fputs_unlocked@plt>
   14250:	andeq	r1, r0, r0, lsr r3
   14254:	andeq	r1, r1, r4, lsl lr
   14258:	andeq	r1, r0, r0, lsr r3
   1425c:	andeq	r1, r0, ip, lsr #6
   14260:	andeq	r0, r0, ip, lsr #28
   14264:	andeq	r0, r0, r8, lsr lr
   14268:	andeq	r1, r0, r0, lsl r3
   1426c:	andeq	r0, r0, r0, lsl r1
   14270:	push	{r4, lr}
   14274:	mov	r4, r0
   14278:	bl	11070 <malloc@plt>
   1427c:	rsbs	r3, r0, #1
   14280:	movcc	r3, #0
   14284:	cmp	r4, #0
   14288:	moveq	r3, #0
   1428c:	cmp	r3, #0
   14290:	popeq	{r4, pc}
   14294:	bl	14484 <close_stdout@@Base+0x220c>
   14298:	push	{r3, r4, r5, lr}
   1429c:	mov	r4, r0
   142a0:	mvn	r0, #0
   142a4:	mov	r5, r1
   142a8:	bl	14b24 <close_stdout@@Base+0x28ac>
   142ac:	cmp	r0, r4
   142b0:	bcc	142c0 <close_stdout@@Base+0x2048>
   142b4:	mul	r0, r4, r5
   142b8:	pop	{r3, r4, r5, lr}
   142bc:	b	14270 <close_stdout@@Base+0x1ff8>
   142c0:	bl	14484 <close_stdout@@Base+0x220c>
   142c4:	b	14270 <close_stdout@@Base+0x1ff8>
   142c8:	rsbs	r3, r1, #1
   142cc:	push	{r4, lr}
   142d0:	movcc	r3, #0
   142d4:	cmp	r0, #0
   142d8:	mov	r4, r1
   142dc:	moveq	r3, #0
   142e0:	cmp	r3, #0
   142e4:	bne	14308 <close_stdout@@Base+0x2090>
   142e8:	bl	10fe0 <realloc@plt>
   142ec:	rsbs	r3, r0, #1
   142f0:	movcc	r3, #0
   142f4:	cmp	r4, #0
   142f8:	moveq	r3, #0
   142fc:	cmp	r3, #0
   14300:	popeq	{r4, pc}
   14304:	bl	14484 <close_stdout@@Base+0x220c>
   14308:	bl	10f80 <free@plt>
   1430c:	mov	r0, #0
   14310:	pop	{r4, pc}
   14314:	push	{r4, r5, r6, lr}
   14318:	mov	r5, r1
   1431c:	mov	r6, r0
   14320:	mov	r1, r2
   14324:	mvn	r0, #0
   14328:	mov	r4, r2
   1432c:	bl	14b24 <close_stdout@@Base+0x28ac>
   14330:	cmp	r0, r5
   14334:	bcc	14348 <close_stdout@@Base+0x20d0>
   14338:	mov	r0, r6
   1433c:	mul	r1, r5, r4
   14340:	pop	{r4, r5, r6, lr}
   14344:	b	142c8 <close_stdout@@Base+0x2050>
   14348:	bl	14484 <close_stdout@@Base+0x220c>
   1434c:	push	{r3, r4, r5, r6, r7, lr}
   14350:	subs	r7, r0, #0
   14354:	mov	r5, r1
   14358:	mov	r6, r2
   1435c:	ldr	r4, [r1]
   14360:	beq	14398 <close_stdout@@Base+0x2120>
   14364:	movw	r0, #43690	; 0xaaaa
   14368:	mov	r1, r2
   1436c:	bfi	r0, r0, #16, #16
   14370:	bl	14b24 <close_stdout@@Base+0x28ac>
   14374:	cmp	r4, r0
   14378:	addcc	r3, r4, #1
   1437c:	addcc	r4, r4, r3, lsr #1
   14380:	bcs	143bc <close_stdout@@Base+0x2144>
   14384:	str	r4, [r5]
   14388:	mov	r0, r7
   1438c:	mul	r1, r6, r4
   14390:	pop	{r3, r4, r5, r6, r7, lr}
   14394:	b	142c8 <close_stdout@@Base+0x2050>
   14398:	cmp	r4, #0
   1439c:	bne	14384 <close_stdout@@Base+0x210c>
   143a0:	mov	r0, #64	; 0x40
   143a4:	mov	r1, r2
   143a8:	bl	14b24 <close_stdout@@Base+0x28ac>
   143ac:	cmp	r0, #0
   143b0:	movne	r4, r0
   143b4:	addeq	r4, r0, #1
   143b8:	b	14384 <close_stdout@@Base+0x210c>
   143bc:	bl	14484 <close_stdout@@Base+0x220c>
   143c0:	cmp	r0, #0
   143c4:	push	{r3, lr}
   143c8:	ldr	r3, [r1]
   143cc:	beq	143f8 <close_stdout@@Base+0x2180>
   143d0:	movw	r2, #43689	; 0xaaa9
   143d4:	movt	r2, #43690	; 0xaaaa
   143d8:	cmp	r3, r2
   143dc:	addls	r2, r3, #1
   143e0:	addls	r3, r3, r2, lsr #1
   143e4:	bhi	14410 <close_stdout@@Base+0x2198>
   143e8:	str	r3, [r1]
   143ec:	mov	r1, r3
   143f0:	pop	{r3, lr}
   143f4:	b	142c8 <close_stdout@@Base+0x2050>
   143f8:	cmp	r3, #0
   143fc:	moveq	r3, #64	; 0x40
   14400:	str	r3, [r1]
   14404:	mov	r1, r3
   14408:	pop	{r3, lr}
   1440c:	b	142c8 <close_stdout@@Base+0x2050>
   14410:	bl	14484 <close_stdout@@Base+0x220c>
   14414:	push	{r4, lr}
   14418:	mov	r4, r0
   1441c:	bl	14270 <close_stdout@@Base+0x1ff8>
   14420:	mov	r2, r4
   14424:	mov	r1, #0
   14428:	pop	{r4, lr}
   1442c:	b	110f4 <memset@plt>
   14430:	push	{r3, lr}
   14434:	bl	10f38 <calloc@plt>
   14438:	cmp	r0, #0
   1443c:	popne	{r3, pc}
   14440:	bl	14484 <close_stdout@@Base+0x220c>
   14444:	push	{r3, r4, r5, lr}
   14448:	mov	r4, r1
   1444c:	mov	r5, r0
   14450:	mov	r0, r1
   14454:	bl	14270 <close_stdout@@Base+0x1ff8>
   14458:	mov	r1, r5
   1445c:	mov	r2, r4
   14460:	pop	{r3, r4, r5, lr}
   14464:	b	10f98 <memcpy@plt>
   14468:	push	{r4, lr}
   1446c:	mov	r4, r0
   14470:	bl	110c4 <strlen@plt>
   14474:	add	r1, r0, #1
   14478:	mov	r0, r4
   1447c:	pop	{r4, lr}
   14480:	b	14444 <close_stdout@@Base+0x21cc>
   14484:	ldr	r3, [pc, #64]	; 144cc <close_stdout@@Base+0x2254>
   14488:	mov	r2, #5
   1448c:	ldr	ip, [pc, #60]	; 144d0 <close_stdout@@Base+0x2258>
   14490:	mov	r0, #0
   14494:	add	r3, pc, r3
   14498:	ldr	r1, [pc, #52]	; 144d4 <close_stdout@@Base+0x225c>
   1449c:	push	{r4, lr}
   144a0:	add	r1, pc, r1
   144a4:	ldr	r3, [r3, ip]
   144a8:	ldr	r4, [r3]
   144ac:	bl	10fc8 <dcgettext@plt>
   144b0:	ldr	r2, [pc, #32]	; 144d8 <close_stdout@@Base+0x2260>
   144b4:	mov	r1, #0
   144b8:	add	r2, pc, r2
   144bc:	mov	r3, r0
   144c0:	mov	r0, r4
   144c4:	bl	1104c <error@plt>
   144c8:	bl	111b4 <abort@plt>
   144cc:	andeq	r1, r1, r4, ror #22
   144d0:	andeq	r0, r0, r4, lsl r1
   144d4:	andeq	r1, r0, r4, lsl r1
   144d8:	andeq	r0, r0, r0, lsr #26
   144dc:	push	{r4, r5, r6, lr}
   144e0:	sub	sp, sp, #8
   144e4:	mov	r4, r0
   144e8:	bl	11118 <fileno@plt>
   144ec:	cmp	r0, #0
   144f0:	mov	r0, r4
   144f4:	blt	14570 <close_stdout@@Base+0x22f8>
   144f8:	bl	11088 <__freading@plt>
   144fc:	cmp	r0, #0
   14500:	bne	1453c <close_stdout@@Base+0x22c4>
   14504:	mov	r0, r4
   14508:	bl	1457c <close_stdout@@Base+0x2304>
   1450c:	cmp	r0, #0
   14510:	beq	1456c <close_stdout@@Base+0x22f4>
   14514:	bl	110dc <__errno_location@plt>
   14518:	ldr	r6, [r0]
   1451c:	mov	r5, r0
   14520:	mov	r0, r4
   14524:	bl	11130 <fclose@plt>
   14528:	cmp	r6, #0
   1452c:	mvnne	r0, #0
   14530:	strne	r6, [r5]
   14534:	add	sp, sp, #8
   14538:	pop	{r4, r5, r6, pc}
   1453c:	mov	r0, r4
   14540:	bl	11118 <fileno@plt>
   14544:	mov	r1, #1
   14548:	mov	r2, #0
   1454c:	mov	r3, #0
   14550:	str	r1, [sp]
   14554:	bl	11010 <lseek64@plt>
   14558:	mvn	r2, #0
   1455c:	mvn	r3, #0
   14560:	cmp	r1, r3
   14564:	cmpeq	r0, r2
   14568:	bne	14504 <close_stdout@@Base+0x228c>
   1456c:	mov	r0, r4
   14570:	add	sp, sp, #8
   14574:	pop	{r4, r5, r6, lr}
   14578:	b	11130 <fclose@plt>
   1457c:	push	{r4, lr}
   14580:	subs	r4, r0, #0
   14584:	sub	sp, sp, #8
   14588:	beq	14598 <close_stdout@@Base+0x2320>
   1458c:	bl	11088 <__freading@plt>
   14590:	cmp	r0, #0
   14594:	bne	145a8 <close_stdout@@Base+0x2330>
   14598:	mov	r0, r4
   1459c:	add	sp, sp, #8
   145a0:	pop	{r4, lr}
   145a4:	b	10f74 <fflush@plt>
   145a8:	ldr	r3, [r4]
   145ac:	tst	r3, #256	; 0x100
   145b0:	beq	14598 <close_stdout@@Base+0x2320>
   145b4:	mov	r3, #1
   145b8:	mov	r0, r4
   145bc:	str	r3, [sp]
   145c0:	mov	r2, #0
   145c4:	mov	r3, #0
   145c8:	bl	145dc <close_stdout@@Base+0x2364>
   145cc:	mov	r0, r4
   145d0:	add	sp, sp, #8
   145d4:	pop	{r4, lr}
   145d8:	b	10f74 <fflush@plt>
   145dc:	push	{r4, r5, r6, r7, lr}
   145e0:	sub	sp, sp, #20
   145e4:	ldmib	r0, {r1, ip}
   145e8:	mov	r6, r0
   145ec:	ldr	r4, [sp, #40]	; 0x28
   145f0:	cmp	ip, r1
   145f4:	beq	1460c <close_stdout@@Base+0x2394>
   145f8:	str	r4, [sp, #40]	; 0x28
   145fc:	mov	r0, r6
   14600:	add	sp, sp, #20
   14604:	pop	{r4, r5, r6, r7, lr}
   14608:	b	1113c <fseeko64@plt>
   1460c:	ldr	ip, [r0, #20]
   14610:	ldr	r1, [r0, #16]
   14614:	cmp	ip, r1
   14618:	bne	145f8 <close_stdout@@Base+0x2380>
   1461c:	ldr	r7, [r0, #36]	; 0x24
   14620:	cmp	r7, #0
   14624:	bne	145f8 <close_stdout@@Base+0x2380>
   14628:	str	r2, [sp, #12]
   1462c:	mvn	r5, #0
   14630:	str	r3, [sp, #8]
   14634:	bl	11118 <fileno@plt>
   14638:	str	r4, [sp]
   1463c:	mvn	r4, #0
   14640:	ldr	r2, [sp, #12]
   14644:	ldr	r3, [sp, #8]
   14648:	bl	11010 <lseek64@plt>
   1464c:	mov	r2, r0
   14650:	mov	r3, r1
   14654:	cmp	r3, r5
   14658:	cmpeq	r2, r4
   1465c:	beq	1467c <close_stdout@@Base+0x2404>
   14660:	ldr	r1, [r6]
   14664:	mov	r0, r7
   14668:	strd	r2, [r6, #80]	; 0x50
   1466c:	bic	r3, r1, #16
   14670:	str	r3, [r6]
   14674:	add	sp, sp, #20
   14678:	pop	{r4, r5, r6, r7, pc}
   1467c:	mvn	r0, #0
   14680:	b	14674 <close_stdout@@Base+0x23fc>
   14684:	push	{r4, r5, r6, lr}
   14688:	mov	r4, r0
   1468c:	bl	11034 <__fpending@plt>
   14690:	mov	r6, r0
   14694:	mov	r0, r4
   14698:	ldr	r4, [r4]
   1469c:	bl	144dc <close_stdout@@Base+0x2264>
   146a0:	and	r4, r4, #32
   146a4:	adds	r5, r0, #0
   146a8:	movne	r5, #1
   146ac:	cmp	r4, #0
   146b0:	bne	146d0 <close_stdout@@Base+0x2458>
   146b4:	cmp	r5, #0
   146b8:	beq	146c8 <close_stdout@@Base+0x2450>
   146bc:	cmp	r6, #0
   146c0:	beq	146ec <close_stdout@@Base+0x2474>
   146c4:	mvn	r4, #0
   146c8:	mov	r0, r4
   146cc:	pop	{r4, r5, r6, pc}
   146d0:	cmp	r5, #0
   146d4:	bne	146c4 <close_stdout@@Base+0x244c>
   146d8:	bl	110dc <__errno_location@plt>
   146dc:	mvn	r4, #0
   146e0:	str	r5, [r0]
   146e4:	mov	r0, r4
   146e8:	pop	{r4, r5, r6, pc}
   146ec:	bl	110dc <__errno_location@plt>
   146f0:	ldr	r4, [r0]
   146f4:	subs	r4, r4, #9
   146f8:	mvnne	r4, #0
   146fc:	mov	r0, r4
   14700:	pop	{r4, r5, r6, pc}
   14704:	ldr	r3, [pc, #984]	; 14ae4 <close_stdout@@Base+0x286c>
   14708:	mov	r0, #14
   1470c:	ldr	r2, [pc, #980]	; 14ae8 <close_stdout@@Base+0x2870>
   14710:	add	r3, pc, r3
   14714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14718:	sub	sp, sp, #132	; 0x84
   1471c:	ldr	r6, [r3, r2]
   14720:	ldr	r3, [r6]
   14724:	str	r3, [sp, #124]	; 0x7c
   14728:	bl	11178 <nl_langinfo@plt>
   1472c:	subs	r5, r0, #0
   14730:	beq	147e4 <close_stdout@@Base+0x256c>
   14734:	ldr	r3, [pc, #944]	; 14aec <close_stdout@@Base+0x2874>
   14738:	ldr	r4, [pc, r3]
   1473c:	cmp	r4, #0
   14740:	beq	147f0 <close_stdout@@Base+0x2578>
   14744:	ldrb	r7, [r4]
   14748:	cmp	r7, #0
   1474c:	bne	14780 <close_stdout@@Base+0x2508>
   14750:	b	147b8 <close_stdout@@Base+0x2540>
   14754:	mov	r0, r4
   14758:	bl	110c4 <strlen@plt>
   1475c:	add	r0, r0, #1
   14760:	add	r7, r4, r0
   14764:	mov	r0, r7
   14768:	bl	110c4 <strlen@plt>
   1476c:	add	r0, r0, #1
   14770:	add	r4, r7, r0
   14774:	ldrb	r7, [r7, r0]
   14778:	cmp	r7, #0
   1477c:	beq	147b8 <close_stdout@@Base+0x2540>
   14780:	mov	r0, r5
   14784:	mov	r1, r4
   14788:	bl	10f5c <strcmp@plt>
   1478c:	cmp	r0, #0
   14790:	beq	147a8 <close_stdout@@Base+0x2530>
   14794:	cmp	r7, #42	; 0x2a
   14798:	bne	14754 <close_stdout@@Base+0x24dc>
   1479c:	ldrb	r3, [r4, #1]
   147a0:	cmp	r3, #0
   147a4:	bne	14754 <close_stdout@@Base+0x24dc>
   147a8:	mov	r0, r4
   147ac:	bl	110c4 <strlen@plt>
   147b0:	add	r0, r0, #1
   147b4:	add	r5, r4, r0
   147b8:	ldrb	r3, [r5]
   147bc:	cmp	r3, #0
   147c0:	ldreq	r5, [pc, #808]	; 14af0 <close_stdout@@Base+0x2878>
   147c4:	addeq	r5, pc, r5
   147c8:	ldr	r2, [sp, #124]	; 0x7c
   147cc:	mov	r0, r5
   147d0:	ldr	r3, [r6]
   147d4:	cmp	r2, r3
   147d8:	bne	14ab8 <close_stdout@@Base+0x2840>
   147dc:	add	sp, sp, #132	; 0x84
   147e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147e4:	ldr	r5, [pc, #776]	; 14af4 <close_stdout@@Base+0x287c>
   147e8:	add	r5, pc, r5
   147ec:	b	14734 <close_stdout@@Base+0x24bc>
   147f0:	ldr	r0, [pc, #768]	; 14af8 <close_stdout@@Base+0x2880>
   147f4:	add	r0, pc, r0
   147f8:	bl	11064 <getenv@plt>
   147fc:	subs	r8, r0, #0
   14800:	beq	14a90 <close_stdout@@Base+0x2818>
   14804:	ldrb	r3, [r8]
   14808:	cmp	r3, #0
   1480c:	beq	14a24 <close_stdout@@Base+0x27ac>
   14810:	bl	110c4 <strlen@plt>
   14814:	subs	sl, r0, #0
   14818:	subne	r3, sl, #1
   1481c:	bne	14a34 <close_stdout@@Base+0x27bc>
   14820:	mov	r9, #0
   14824:	mov	fp, r9
   14828:	add	r9, sl, r9
   1482c:	add	r0, r9, #14
   14830:	bl	11070 <malloc@plt>
   14834:	subs	r7, r0, #0
   14838:	beq	14a84 <close_stdout@@Base+0x280c>
   1483c:	mov	r1, r8
   14840:	mov	r2, sl
   14844:	bl	10f98 <memcpy@plt>
   14848:	cmp	fp, #0
   1484c:	add	ip, r7, r9
   14850:	movne	r3, #47	; 0x2f
   14854:	strbne	r3, [r7, sl]
   14858:	ldr	r3, [pc, #668]	; 14afc <close_stdout@@Base+0x2884>
   1485c:	add	r3, pc, r3
   14860:	ldm	r3!, {r0, r1, r2}
   14864:	ldrh	r3, [r3]
   14868:	str	r0, [r7, r9]
   1486c:	mov	r0, r7
   14870:	str	r1, [ip, #4]
   14874:	mov	r1, #32768	; 0x8000
   14878:	strh	r3, [ip, #12]
   1487c:	str	r2, [ip, #8]
   14880:	bl	11058 <open64@plt>
   14884:	subs	r8, r0, #0
   14888:	blt	14a4c <close_stdout@@Base+0x27d4>
   1488c:	ldr	r1, [pc, #620]	; 14b00 <close_stdout@@Base+0x2888>
   14890:	add	r1, pc, r1
   14894:	bl	10f2c <fdopen@plt>
   14898:	subs	fp, r0, #0
   1489c:	beq	14aa4 <close_stdout@@Base+0x282c>
   148a0:	ldr	r0, [pc, #604]	; 14b04 <close_stdout@@Base+0x288c>
   148a4:	add	sl, sp, #20
   148a8:	add	r9, sp, #72	; 0x48
   148ac:	mov	r8, #0
   148b0:	add	r0, pc, r0
   148b4:	str	r0, [sp, #12]
   148b8:	ldr	r3, [fp, #4]
   148bc:	ldr	r2, [fp, #8]
   148c0:	cmp	r3, r2
   148c4:	bcs	149b0 <close_stdout@@Base+0x2738>
   148c8:	add	r2, r3, #1
   148cc:	str	r2, [fp, #4]
   148d0:	ldrb	r0, [r3]
   148d4:	cmp	r0, #32
   148d8:	beq	148b8 <close_stdout@@Base+0x2640>
   148dc:	sub	r3, r0, #9
   148e0:	cmp	r3, #1
   148e4:	bls	148b8 <close_stdout@@Base+0x2640>
   148e8:	cmp	r0, #35	; 0x23
   148ec:	beq	149c4 <close_stdout@@Base+0x274c>
   148f0:	mov	r1, fp
   148f4:	bl	110d0 <ungetc@plt>
   148f8:	mov	r0, fp
   148fc:	ldr	r1, [sp, #12]
   14900:	mov	r2, sl
   14904:	mov	r3, r9
   14908:	bl	11100 <fscanf@plt>
   1490c:	cmp	r0, #1
   14910:	ble	149f4 <close_stdout@@Base+0x277c>
   14914:	mov	r0, sl
   14918:	bl	110c4 <strlen@plt>
   1491c:	str	r0, [sp, #8]
   14920:	mov	r0, r9
   14924:	bl	110c4 <strlen@plt>
   14928:	cmp	r8, #0
   1492c:	mov	r2, r0
   14930:	bne	14a58 <close_stdout@@Base+0x27e0>
   14934:	ldr	r3, [sp, #8]
   14938:	str	r2, [sp]
   1493c:	add	r8, r0, r3
   14940:	add	r0, r8, #3
   14944:	add	r8, r8, #2
   14948:	bl	11070 <malloc@plt>
   1494c:	ldr	r2, [sp]
   14950:	mov	r3, r0
   14954:	cmp	r3, #0
   14958:	beq	14abc <close_stdout@@Base+0x2844>
   1495c:	ldr	r0, [sp, #8]
   14960:	movw	r1, #65534	; 0xfffe
   14964:	movt	r1, #65535	; 0xffff
   14968:	rsb	r2, r2, r8
   1496c:	rsb	r1, r0, r1
   14970:	stm	sp, {r2, r3}
   14974:	add	r0, r1, r2
   14978:	mov	r1, sl
   1497c:	add	r0, r3, r0
   14980:	mov	r4, r3
   14984:	bl	11028 <strcpy@plt>
   14988:	ldr	r2, [sp]
   1498c:	ldr	r3, [sp, #4]
   14990:	mov	r1, r9
   14994:	sub	r0, r2, #1
   14998:	add	r0, r3, r0
   1499c:	bl	11028 <strcpy@plt>
   149a0:	ldr	r3, [fp, #4]
   149a4:	ldr	r2, [fp, #8]
   149a8:	cmp	r3, r2
   149ac:	bcc	148c8 <close_stdout@@Base+0x2650>
   149b0:	mov	r0, fp
   149b4:	bl	11148 <__uflow@plt>
   149b8:	cmn	r0, #1
   149bc:	beq	149f4 <close_stdout@@Base+0x277c>
   149c0:	b	148d4 <close_stdout@@Base+0x265c>
   149c4:	ldr	r3, [fp, #4]
   149c8:	ldr	r2, [fp, #8]
   149cc:	cmp	r3, r2
   149d0:	bcs	14ad8 <close_stdout@@Base+0x2860>
   149d4:	add	r2, r3, #1
   149d8:	str	r2, [fp, #4]
   149dc:	ldrb	r0, [r3]
   149e0:	cmp	r0, #10
   149e4:	cmnne	r0, #1
   149e8:	bne	149c4 <close_stdout@@Base+0x274c>
   149ec:	cmn	r0, #1
   149f0:	bne	148b8 <close_stdout@@Base+0x2640>
   149f4:	mov	r0, fp
   149f8:	bl	144dc <close_stdout@@Base+0x2264>
   149fc:	cmp	r8, #0
   14a00:	beq	14a4c <close_stdout@@Base+0x27d4>
   14a04:	mov	r3, #0
   14a08:	strb	r3, [r4, r8]
   14a0c:	mov	r0, r7
   14a10:	bl	10f80 <free@plt>
   14a14:	ldr	r3, [pc, #236]	; 14b08 <close_stdout@@Base+0x2890>
   14a18:	add	r3, pc, r3
   14a1c:	str	r4, [r3]
   14a20:	b	14744 <close_stdout@@Base+0x24cc>
   14a24:	ldr	r8, [pc, #224]	; 14b0c <close_stdout@@Base+0x2894>
   14a28:	mov	r3, #7
   14a2c:	mov	sl, #8
   14a30:	add	r8, pc, r8
   14a34:	ldrb	r3, [r8, r3]
   14a38:	cmp	r3, #47	; 0x2f
   14a3c:	movne	r9, #1
   14a40:	movne	fp, r9
   14a44:	bne	14828 <close_stdout@@Base+0x25b0>
   14a48:	b	14820 <close_stdout@@Base+0x25a8>
   14a4c:	ldr	r4, [pc, #188]	; 14b10 <close_stdout@@Base+0x2898>
   14a50:	add	r4, pc, r4
   14a54:	b	14a0c <close_stdout@@Base+0x2794>
   14a58:	ldr	r0, [sp, #8]
   14a5c:	str	r2, [sp]
   14a60:	add	r3, r0, r2
   14a64:	mov	r0, r4
   14a68:	add	r8, r3, r8
   14a6c:	add	r1, r8, #3
   14a70:	add	r8, r8, #2
   14a74:	bl	10fe0 <realloc@plt>
   14a78:	ldr	r2, [sp]
   14a7c:	mov	r3, r0
   14a80:	b	14954 <close_stdout@@Base+0x26dc>
   14a84:	ldr	r4, [pc, #136]	; 14b14 <close_stdout@@Base+0x289c>
   14a88:	add	r4, pc, r4
   14a8c:	b	14a14 <close_stdout@@Base+0x279c>
   14a90:	ldr	r8, [pc, #128]	; 14b18 <close_stdout@@Base+0x28a0>
   14a94:	mov	r3, #7
   14a98:	mov	sl, #8
   14a9c:	add	r8, pc, r8
   14aa0:	b	14a34 <close_stdout@@Base+0x27bc>
   14aa4:	ldr	r4, [pc, #112]	; 14b1c <close_stdout@@Base+0x28a4>
   14aa8:	mov	r0, r8
   14aac:	add	r4, pc, r4
   14ab0:	bl	111c0 <close@plt>
   14ab4:	b	14a0c <close_stdout@@Base+0x2794>
   14ab8:	bl	10fd4 <__stack_chk_fail@plt>
   14abc:	mov	r0, r4
   14ac0:	ldr	r4, [pc, #88]	; 14b20 <close_stdout@@Base+0x28a8>
   14ac4:	bl	10f80 <free@plt>
   14ac8:	mov	r0, fp
   14acc:	add	r4, pc, r4
   14ad0:	bl	144dc <close_stdout@@Base+0x2264>
   14ad4:	b	14a0c <close_stdout@@Base+0x2794>
   14ad8:	mov	r0, fp
   14adc:	bl	11148 <__uflow@plt>
   14ae0:	b	149e0 <close_stdout@@Base+0x2768>
   14ae4:	andeq	r1, r1, r8, ror #17
   14ae8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14aec:	andeq	r1, r1, r4, lsl #23
   14af0:	andeq	r0, r0, r0, lsl lr
   14af4:	andeq	r0, r0, ip, lsl r9
   14af8:	andeq	r0, r0, r8, ror #27
   14afc:	muleq	r0, r0, sp
   14b00:	andeq	r0, r0, r4, asr #17
   14b04:	andeq	r0, r0, ip, asr #26
   14b08:	andeq	r1, r1, r4, lsr #17
   14b0c:	muleq	r0, r8, fp
   14b10:			; <UNDEFINED> instruction: 0x000006b4
   14b14:	andeq	r0, r0, ip, ror r6
   14b18:	andeq	r0, r0, ip, lsr #22
   14b1c:	andeq	r0, r0, r8, asr r6
   14b20:	andeq	r0, r0, r8, lsr r6
   14b24:	subs	r2, r1, #1
   14b28:	bxeq	lr
   14b2c:	bcc	14d04 <close_stdout@@Base+0x2a8c>
   14b30:	cmp	r0, r1
   14b34:	bls	14ce8 <close_stdout@@Base+0x2a70>
   14b38:	tst	r1, r2
   14b3c:	beq	14cf4 <close_stdout@@Base+0x2a7c>
   14b40:	clz	r3, r0
   14b44:	clz	r2, r1
   14b48:	sub	r3, r2, r3
   14b4c:	rsbs	r3, r3, #31
   14b50:	addne	r3, r3, r3, lsl #1
   14b54:	mov	r2, #0
   14b58:	addne	pc, pc, r3, lsl #2
   14b5c:	nop	{0}
   14b60:	cmp	r0, r1, lsl #31
   14b64:	adc	r2, r2, r2
   14b68:	subcs	r0, r0, r1, lsl #31
   14b6c:	cmp	r0, r1, lsl #30
   14b70:	adc	r2, r2, r2
   14b74:	subcs	r0, r0, r1, lsl #30
   14b78:	cmp	r0, r1, lsl #29
   14b7c:	adc	r2, r2, r2
   14b80:	subcs	r0, r0, r1, lsl #29
   14b84:	cmp	r0, r1, lsl #28
   14b88:	adc	r2, r2, r2
   14b8c:	subcs	r0, r0, r1, lsl #28
   14b90:	cmp	r0, r1, lsl #27
   14b94:	adc	r2, r2, r2
   14b98:	subcs	r0, r0, r1, lsl #27
   14b9c:	cmp	r0, r1, lsl #26
   14ba0:	adc	r2, r2, r2
   14ba4:	subcs	r0, r0, r1, lsl #26
   14ba8:	cmp	r0, r1, lsl #25
   14bac:	adc	r2, r2, r2
   14bb0:	subcs	r0, r0, r1, lsl #25
   14bb4:	cmp	r0, r1, lsl #24
   14bb8:	adc	r2, r2, r2
   14bbc:	subcs	r0, r0, r1, lsl #24
   14bc0:	cmp	r0, r1, lsl #23
   14bc4:	adc	r2, r2, r2
   14bc8:	subcs	r0, r0, r1, lsl #23
   14bcc:	cmp	r0, r1, lsl #22
   14bd0:	adc	r2, r2, r2
   14bd4:	subcs	r0, r0, r1, lsl #22
   14bd8:	cmp	r0, r1, lsl #21
   14bdc:	adc	r2, r2, r2
   14be0:	subcs	r0, r0, r1, lsl #21
   14be4:	cmp	r0, r1, lsl #20
   14be8:	adc	r2, r2, r2
   14bec:	subcs	r0, r0, r1, lsl #20
   14bf0:	cmp	r0, r1, lsl #19
   14bf4:	adc	r2, r2, r2
   14bf8:	subcs	r0, r0, r1, lsl #19
   14bfc:	cmp	r0, r1, lsl #18
   14c00:	adc	r2, r2, r2
   14c04:	subcs	r0, r0, r1, lsl #18
   14c08:	cmp	r0, r1, lsl #17
   14c0c:	adc	r2, r2, r2
   14c10:	subcs	r0, r0, r1, lsl #17
   14c14:	cmp	r0, r1, lsl #16
   14c18:	adc	r2, r2, r2
   14c1c:	subcs	r0, r0, r1, lsl #16
   14c20:	cmp	r0, r1, lsl #15
   14c24:	adc	r2, r2, r2
   14c28:	subcs	r0, r0, r1, lsl #15
   14c2c:	cmp	r0, r1, lsl #14
   14c30:	adc	r2, r2, r2
   14c34:	subcs	r0, r0, r1, lsl #14
   14c38:	cmp	r0, r1, lsl #13
   14c3c:	adc	r2, r2, r2
   14c40:	subcs	r0, r0, r1, lsl #13
   14c44:	cmp	r0, r1, lsl #12
   14c48:	adc	r2, r2, r2
   14c4c:	subcs	r0, r0, r1, lsl #12
   14c50:	cmp	r0, r1, lsl #11
   14c54:	adc	r2, r2, r2
   14c58:	subcs	r0, r0, r1, lsl #11
   14c5c:	cmp	r0, r1, lsl #10
   14c60:	adc	r2, r2, r2
   14c64:	subcs	r0, r0, r1, lsl #10
   14c68:	cmp	r0, r1, lsl #9
   14c6c:	adc	r2, r2, r2
   14c70:	subcs	r0, r0, r1, lsl #9
   14c74:	cmp	r0, r1, lsl #8
   14c78:	adc	r2, r2, r2
   14c7c:	subcs	r0, r0, r1, lsl #8
   14c80:	cmp	r0, r1, lsl #7
   14c84:	adc	r2, r2, r2
   14c88:	subcs	r0, r0, r1, lsl #7
   14c8c:	cmp	r0, r1, lsl #6
   14c90:	adc	r2, r2, r2
   14c94:	subcs	r0, r0, r1, lsl #6
   14c98:	cmp	r0, r1, lsl #5
   14c9c:	adc	r2, r2, r2
   14ca0:	subcs	r0, r0, r1, lsl #5
   14ca4:	cmp	r0, r1, lsl #4
   14ca8:	adc	r2, r2, r2
   14cac:	subcs	r0, r0, r1, lsl #4
   14cb0:	cmp	r0, r1, lsl #3
   14cb4:	adc	r2, r2, r2
   14cb8:	subcs	r0, r0, r1, lsl #3
   14cbc:	cmp	r0, r1, lsl #2
   14cc0:	adc	r2, r2, r2
   14cc4:	subcs	r0, r0, r1, lsl #2
   14cc8:	cmp	r0, r1, lsl #1
   14ccc:	adc	r2, r2, r2
   14cd0:	subcs	r0, r0, r1, lsl #1
   14cd4:	cmp	r0, r1
   14cd8:	adc	r2, r2, r2
   14cdc:	subcs	r0, r0, r1
   14ce0:	mov	r0, r2
   14ce4:	bx	lr
   14ce8:	moveq	r0, #1
   14cec:	movne	r0, #0
   14cf0:	bx	lr
   14cf4:	clz	r2, r1
   14cf8:	rsb	r2, r2, #31
   14cfc:	lsr	r0, r0, r2
   14d00:	bx	lr
   14d04:	cmp	r0, #0
   14d08:	mvnne	r0, #0
   14d0c:	b	14d30 <close_stdout@@Base+0x2ab8>
   14d10:	cmp	r1, #0
   14d14:	beq	14d04 <close_stdout@@Base+0x2a8c>
   14d18:	push	{r0, r1, lr}
   14d1c:	bl	14b24 <close_stdout@@Base+0x28ac>
   14d20:	pop	{r1, r2, lr}
   14d24:	mul	r3, r2, r0
   14d28:	sub	r1, r1, r3
   14d2c:	bx	lr
   14d30:	push	{r1, lr}
   14d34:	mov	r0, #8
   14d38:	bl	10f50 <raise@plt>
   14d3c:	pop	{r1, pc}
   14d40:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14d44:	mov	r7, r0
   14d48:	ldr	r6, [pc, #76]	; 14d9c <close_stdout@@Base+0x2b24>
   14d4c:	mov	r8, r1
   14d50:	ldr	r5, [pc, #72]	; 14da0 <close_stdout@@Base+0x2b28>
   14d54:	mov	r9, r2
   14d58:	add	r6, pc, r6
   14d5c:	bl	10f0c <fdopen@plt-0x20>
   14d60:	add	r5, pc, r5
   14d64:	rsb	r6, r5, r6
   14d68:	asrs	r6, r6, #2
   14d6c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14d70:	sub	r5, r5, #4
   14d74:	mov	r4, #0
   14d78:	add	r4, r4, #1
   14d7c:	ldr	r3, [r5, #4]!
   14d80:	mov	r0, r7
   14d84:	mov	r1, r8
   14d88:	mov	r2, r9
   14d8c:	blx	r3
   14d90:	cmp	r4, r6
   14d94:	bne	14d78 <close_stdout@@Base+0x2b00>
   14d98:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14d9c:	andeq	r1, r1, ip, lsr #2
   14da0:	andeq	r1, r1, r0, lsr #2
   14da4:	bx	lr
   14da8:	ldr	r3, [pc, #28]	; 14dcc <close_stdout@@Base+0x2b54>
   14dac:	mov	r1, #0
   14db0:	ldr	r2, [pc, #24]	; 14dd0 <close_stdout@@Base+0x2b58>
   14db4:	add	r3, pc, r3
   14db8:	ldr	r3, [r3, r2]
   14dbc:	cmp	r3, #0
   14dc0:	ldrne	r2, [r3]
   14dc4:	moveq	r2, r3
   14dc8:	b	110e8 <__cxa_atexit@plt>
   14dcc:	andeq	r1, r1, r4, asr #4
   14dd0:	andeq	r0, r0, r8, lsl #2

Disassembly of section .fini:

00014dd4 <.fini>:
   14dd4:	push	{r3, lr}
   14dd8:	pop	{r3, pc}
