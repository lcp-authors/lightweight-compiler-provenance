
centos-preinstalled/reporter-rhtsupport:     file format elf32-littlearm


Disassembly of section .init:

0001268c <_init@@Base>:
   1268c:	push	{r3, lr}
   12690:	bl	14ae0 <fputs@plt+0x1cf0>
   12694:	pop	{r3, pc}

Disassembly of section .plt:

00012698 <textdomain@plt-0x14>:
   12698:	push	{lr}		; (str lr, [sp, #-4]!)
   1269c:	ldr	lr, [pc, #4]	; 126a8 <_init@@Base+0x1c>
   126a0:	add	lr, pc, lr
   126a4:	ldr	pc, [lr, #8]!
   126a8:	andeq	r8, r1, r8, asr r9

000126ac <textdomain@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #24, 20	; 0x18000
   126b4:	ldr	pc, [ip, #2392]!	; 0x958

000126b8 <fopen64@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #24, 20	; 0x18000
   126c0:	ldr	pc, [ip, #2384]!	; 0x950

000126c4 <g_markup_parse_context_free@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #24, 20	; 0x18000
   126cc:	ldr	pc, [ip, #2376]!	; 0x948

000126d0 <execlp@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #24, 20	; 0x18000
   126d8:	ldr	pc, [ip, #2368]!	; 0x940

000126dc <libreport_new_map_string@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #24, 20	; 0x18000
   126e4:	ldr	pc, [ip, #2360]!	; 0x938

000126e8 <tar_fdopen@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #24, 20	; 0x18000
   126f0:	ldr	pc, [ip, #2352]!	; 0x930

000126f4 <g_hash_table_destroy@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #24, 20	; 0x18000
   126fc:	ldr	pc, [ip, #2344]!	; 0x928

00012700 <problem_data_get_osinfo@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #24, 20	; 0x18000
   12708:	ldr	pc, [ip, #2336]!	; 0x920

0001270c <dd_init_next_file@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #24, 20	; 0x18000
   12714:	ldr	pc, [ip, #2328]!	; 0x918

00012718 <log_wrapper@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #24, 20	; 0x18000
   12720:	ldr	pc, [ip, #2320]!	; 0x910

00012724 <basename@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #24, 20	; 0x18000
   1272c:	ldr	pc, [ip, #2312]!	; 0x908

00012730 <libreport_set_xfunc_error_retval@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #24, 20	; 0x18000
   12738:	ldr	pc, [ip, #2304]!	; 0x900

0001273c <libreport_xatoi_positive@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #24, 20	; 0x18000
   12744:	ldr	pc, [ip, #2296]!	; 0x8f8

00012748 <libreport_ureport_server_response_free@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #24, 20	; 0x18000
   12750:	ldr	pc, [ip, #2288]!	; 0x8f0

00012754 <th_set_path@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #24, 20	; 0x18000
   1275c:	ldr	pc, [ip, #2280]!	; 0x8e8

00012760 <libreport_append_to_malloced_string@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #24, 20	; 0x18000
   12768:	ldr	pc, [ip, #2272]!	; 0x8e0

0001276c <xmlTextWriterEndDocument@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #24, 20	; 0x18000
   12774:	ldr	pc, [ip, #2264]!	; 0x8d8

00012778 <xmlFreeTextWriter@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #24, 20	; 0x18000
   12780:	ldr	pc, [ip, #2256]!	; 0x8d0

00012784 <g_list_delete_link@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #24, 20	; 0x18000
   1278c:	ldr	pc, [ip, #2248]!	; 0x8c8

00012790 <strchrnul@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #24, 20	; 0x18000
   12798:	ldr	pc, [ip, #2240]!	; 0x8c0

0001279c <libreport_concat_path_basename@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #24, 20	; 0x18000
   127a4:	ldr	pc, [ip, #2232]!	; 0x8b8

000127a8 <libreport_free_report_result@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #24, 20	; 0x18000
   127b0:	ldr	pc, [ip, #2224]!	; 0x8b0

000127b4 <dcgettext@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #24, 20	; 0x18000
   127bc:	ldr	pc, [ip, #2216]!	; 0x8a8

000127c0 <fclose@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #24, 20	; 0x18000
   127c8:	ldr	pc, [ip, #2208]!	; 0x8a0

000127cc <libreport_xpipe@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #24, 20	; 0x18000
   127d4:	ldr	pc, [ip, #2200]!	; 0x898

000127d8 <__ctype_b_loc@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #24, 20	; 0x18000
   127e0:	ldr	pc, [ip, #2192]!	; 0x890

000127e4 <libreport_free_map_string@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #24, 20	; 0x18000
   127ec:	ldr	pc, [ip, #2184]!	; 0x888

000127f0 <problem_item_format@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #24, 20	; 0x18000
   127f8:	ldr	pc, [ip, #2176]!	; 0x880

000127fc <sr_stacktrace_parse@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #24, 20	; 0x18000
   12804:	ldr	pc, [ip, #2168]!	; 0x878

00012808 <libreport_parse_osinfo_for_rhts@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #24, 20	; 0x18000
   12810:	ldr	pc, [ip, #2160]!	; 0x870

00012814 <strncmp@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #24, 20	; 0x18000
   1281c:	ldr	pc, [ip, #2152]!	; 0x868

00012820 <fmemopen@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #24, 20	; 0x18000
   12828:	ldr	pc, [ip, #2144]!	; 0x860

0001282c <g_markup_parse_context_new@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #24, 20	; 0x18000
   12834:	ldr	pc, [ip, #2136]!	; 0x858

00012838 <fputc@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #24, 20	; 0x18000
   12840:	ldr	pc, [ip, #2128]!	; 0x850

00012844 <g_list_sort@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #24, 20	; 0x18000
   1284c:	ldr	pc, [ip, #2120]!	; 0x848

00012850 <g_list_prepend@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #24, 20	; 0x18000
   12858:	ldr	pc, [ip, #2112]!	; 0x840

0001285c <libreport_upload_file@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #24, 20	; 0x18000
   12864:	ldr	pc, [ip, #2104]!	; 0x838

00012868 <__assert_fail@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #24, 20	; 0x18000
   12870:	ldr	pc, [ip, #2096]!	; 0x830

00012874 <__stack_chk_fail@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #24, 20	; 0x18000
   1287c:	ldr	pc, [ip, #2088]!	; 0x828

00012880 <g_hash_table_new_full@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #24, 20	; 0x18000
   12888:	ldr	pc, [ip, #2080]!	; 0x820

0001288c <xmlBufferFree@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #24, 20	; 0x18000
   12894:	ldr	pc, [ip, #2072]!	; 0x818

00012898 <libreport_ureport_server_config_destroy@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #24, 20	; 0x18000
   128a0:	ldr	pc, [ip, #2064]!	; 0x810

000128a4 <fseek@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #24, 20	; 0x18000
   128ac:	ldr	pc, [ip, #2056]!	; 0x808

000128b0 <libreport_ureport_server_response_save_in_dump_dir@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #24, 20	; 0x18000
   128b8:	ldr	pc, [ip, #2048]!	; 0x800

000128bc <dd_close@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #24, 20	; 0x18000
   128c4:	ldr	pc, [ip, #2040]!	; 0x7f8

000128c8 <post@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #24, 20	; 0x18000
   128d0:	ldr	pc, [ip, #2032]!	; 0x7f0

000128d4 <create_problem_data_for_reporting@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #24, 20	; 0x18000
   128dc:	ldr	pc, [ip, #2024]!	; 0x7e8

000128e0 <g_hash_table_iter_init@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #24, 20	; 0x18000
   128e8:	ldr	pc, [ip, #2016]!	; 0x7e0

000128ec <mkdtemp@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #24, 20	; 0x18000
   128f4:	ldr	pc, [ip, #2008]!	; 0x7d8

000128f8 <__libc_start_main@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #24, 20	; 0x18000
   12900:	ldr	pc, [ip, #2000]!	; 0x7d0

00012904 <__gmon_start__@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #24, 20	; 0x18000
   1290c:	ldr	pc, [ip, #1992]!	; 0x7c8

00012910 <libreport_xopen3@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #24, 20	; 0x18000
   12918:	ldr	pc, [ip, #1984]!	; 0x7c0

0001291c <strchr@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #24, 20	; 0x18000
   12924:	ldr	pc, [ip, #1976]!	; 0x7b8

00012928 <ureport_json_attachment_new@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #24, 20	; 0x18000
   12930:	ldr	pc, [ip, #1968]!	; 0x7b0

00012934 <g_list_find_custom@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #24, 20	; 0x18000
   1293c:	ldr	pc, [ip, #1960]!	; 0x7a8

00012940 <sr_stacktrace_to_short_text@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #24, 20	; 0x18000
   12948:	ldr	pc, [ip, #1952]!	; 0x7a0

0001294c <libreport_strbuf_append_strf@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #24, 20	; 0x18000
   12954:	ldr	pc, [ip, #1944]!	; 0x798

00012958 <libreport_ureport_server_config_set_url@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #24, 20	; 0x18000
   12960:	ldr	pc, [ip, #1936]!	; 0x790

00012964 <g_str_equal@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #24, 20	; 0x18000
   1296c:	ldr	pc, [ip, #1928]!	; 0x788

00012970 <libreport_ask_yes_no@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #24, 20	; 0x18000
   12978:	ldr	pc, [ip, #1920]!	; 0x780

0001297c <th_set_mode@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #24, 20	; 0x18000
   12984:	ldr	pc, [ip, #1912]!	; 0x778

00012988 <libreport_add_reported_to_entry@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #24, 20	; 0x18000
   12990:	ldr	pc, [ip, #1904]!	; 0x770

00012994 <libreport_show_usage_and_die@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #24, 20	; 0x18000
   1299c:	ldr	pc, [ip, #1896]!	; 0x768

000129a0 <libreport_strbuf_free_nobuf@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #24, 20	; 0x18000
   129a8:	ldr	pc, [ip, #1888]!	; 0x760

000129ac <libreport_full_write@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #24, 20	; 0x18000
   129b4:	ldr	pc, [ip, #1880]!	; 0x758

000129b8 <free@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #24, 20	; 0x18000
   129c0:	ldr	pc, [ip, #1872]!	; 0x750

000129c4 <th_finish@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #24, 20	; 0x18000
   129cc:	ldr	pc, [ip, #1864]!	; 0x748

000129d0 <close@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #24, 20	; 0x18000
   129d8:	ldr	pc, [ip, #1856]!	; 0x740

000129dc <g_list_free@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #24, 20	; 0x18000
   129e4:	ldr	pc, [ip, #1848]!	; 0x738

000129e8 <memcpy@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #24, 20	; 0x18000
   129f0:	ldr	pc, [ip, #1840]!	; 0x730

000129f4 <libreport_xfunc_die@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #24, 20	; 0x18000
   129fc:	ldr	pc, [ip, #1832]!	; 0x728

00012a00 <log_and_die_wrapper@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #24, 20	; 0x18000
   12a08:	ldr	pc, [ip, #1824]!	; 0x720

00012a0c <xmlTextWriterWriteElement@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #24, 20	; 0x18000
   12a14:	ldr	pc, [ip, #1816]!	; 0x718

00012a18 <g_list_reverse@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #24, 20	; 0x18000
   12a20:	ldr	pc, [ip, #1808]!	; 0x710

00012a24 <libreport_ask@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #24, 20	; 0x18000
   12a2c:	ldr	pc, [ip, #1800]!	; 0x708

00012a30 <tar_close@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #24, 20	; 0x18000
   12a38:	ldr	pc, [ip, #1792]!	; 0x700

00012a3c <libreport_stat_st_size_or_die@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #24, 20	; 0x18000
   12a44:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a48 <libreport_find_in_reported_to@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #24, 20	; 0x18000
   12a50:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a54 <libreport_strbuf_append_str@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #24, 20	; 0x18000
   12a5c:	ldr	pc, [ip, #1768]!	; 0x6e8

00012a60 <xmlTextWriterStartElement@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #24, 20	; 0x18000
   12a68:	ldr	pc, [ip, #1760]!	; 0x6e0

00012a6c <unlink@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #24, 20	; 0x18000
   12a74:	ldr	pc, [ip, #1752]!	; 0x6d8

00012a78 <tar_fd@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #24, 20	; 0x18000
   12a80:	ldr	pc, [ip, #1744]!	; 0x6d0

00012a84 <g_str_hash@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #24, 20	; 0x18000
   12a8c:	ldr	pc, [ip, #1736]!	; 0x6c8

00012a90 <libreport_strbuf_new@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #24, 20	; 0x18000
   12a98:	ldr	pc, [ip, #1728]!	; 0x6c0

00012a9c <libreport_skip_whitespace@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #24, 20	; 0x18000
   12aa4:	ldr	pc, [ip, #1720]!	; 0x6b8

00012aa8 <libreport_xmalloc@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #24, 20	; 0x18000
   12ab0:	ldr	pc, [ip, #1712]!	; 0x6b0

00012ab4 <libreport_xzalloc@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #24, 20	; 0x18000
   12abc:	ldr	pc, [ip, #1704]!	; 0x6a8

00012ac0 <fork@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #24, 20	; 0x18000
   12ac8:	ldr	pc, [ip, #1696]!	; 0x6a0

00012acc <libreport_parse_list@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #24, 20	; 0x18000
   12ad4:	ldr	pc, [ip, #1688]!	; 0x698

00012ad8 <libreport_load_conf_file@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #24, 20	; 0x18000
   12ae0:	ldr	pc, [ip, #1680]!	; 0x690

00012ae4 <open_memstream@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #24, 20	; 0x18000
   12aec:	ldr	pc, [ip, #1672]!	; 0x688

00012af0 <strlen@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #24, 20	; 0x18000
   12af8:	ldr	pc, [ip, #1664]!	; 0x680

00012afc <libreport_safe_waitpid@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #24, 20	; 0x18000
   12b04:	ldr	pc, [ip, #1656]!	; 0x678

00012b08 <libreport_xmove_fd@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #24, 20	; 0x18000
   12b10:	ldr	pc, [ip, #1648]!	; 0x670

00012b14 <libreport_ureport_from_dump_dir@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #24, 20	; 0x18000
   12b1c:	ldr	pc, [ip, #1640]!	; 0x668

00012b20 <th_write@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #24, 20	; 0x18000
   12b28:	ldr	pc, [ip, #1632]!	; 0x660

00012b2c <libreport_xstrdup@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #24, 20	; 0x18000
   12b34:	ldr	pc, [ip, #1624]!	; 0x658

00012b38 <tar_append_file@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #24, 20	; 0x18000
   12b40:	ldr	pc, [ip, #1616]!	; 0x650

00012b44 <g_list_append@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #24, 20	; 0x18000
   12b4c:	ldr	pc, [ip, #1608]!	; 0x648

00012b50 <libreport_ureport_server_config_set_basic_auth@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #24, 20	; 0x18000
   12b58:	ldr	pc, [ip, #1600]!	; 0x640

00012b5c <g_list_free_full@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #24, 20	; 0x18000
   12b64:	ldr	pc, [ip, #1592]!	; 0x638

00012b68 <libreport_string_to_bool@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #24, 20	; 0x18000
   12b70:	ldr	pc, [ip, #1584]!	; 0x630

00012b74 <_IO_putc@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #24, 20	; 0x18000
   12b7c:	ldr	pc, [ip, #1576]!	; 0x628

00012b80 <libreport_export_abrt_envvars@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #24, 20	; 0x18000
   12b88:	ldr	pc, [ip, #1568]!	; 0x620

00012b8c <problem_data_add_text_noteditable@plt>:
   12b8c:	add	ip, pc, #0, 12
   12b90:	add	ip, ip, #24, 20	; 0x18000
   12b94:	ldr	pc, [ip, #1560]!	; 0x618

00012b98 <libreport_iso_date_string@plt>:
   12b98:	add	ip, pc, #0, 12
   12b9c:	add	ip, ip, #24, 20	; 0x18000
   12ba0:	ldr	pc, [ip, #1552]!	; 0x610

00012ba4 <g_markup_parse_context_parse@plt>:
   12ba4:	add	ip, pc, #0, 12
   12ba8:	add	ip, ip, #24, 20	; 0x18000
   12bac:	ldr	pc, [ip, #1544]!	; 0x608

00012bb0 <find_header_in_post_state@plt>:
   12bb0:	add	ip, pc, #0, 12
   12bb4:	add	ip, ip, #24, 20	; 0x18000
   12bb8:	ldr	pc, [ip, #1536]!	; 0x600

00012bbc <libreport_xasprintf@plt>:
   12bbc:	add	ip, pc, #0, 12
   12bc0:	add	ip, ip, #24, 20	; 0x18000
   12bc4:	ldr	pc, [ip, #1528]!	; 0x5f8

00012bc8 <free_post_state@plt>:
   12bc8:	add	ip, pc, #0, 12
   12bcc:	add	ip, ip, #24, 20	; 0x18000
   12bd0:	ldr	pc, [ip, #1520]!	; 0x5f0

00012bd4 <dd_get_next_file@plt>:
   12bd4:	add	ip, pc, #0, 12
   12bd8:	add	ip, ip, #24, 20	; 0x18000
   12bdc:	ldr	pc, [ip, #1512]!	; 0x5e8

00012be0 <xmlTextWriterStartDocument@plt>:
   12be0:	add	ip, pc, #0, 12
   12be4:	add	ip, ip, #24, 20	; 0x18000
   12be8:	ldr	pc, [ip, #1504]!	; 0x5e0

00012bec <fflush@plt>:
   12bec:	add	ip, pc, #0, 12
   12bf0:	add	ip, ip, #24, 20	; 0x18000
   12bf4:	ldr	pc, [ip, #1496]!	; 0x5d8

00012bf8 <g_list_remove@plt>:
   12bf8:	add	ip, pc, #0, 12
   12bfc:	add	ip, ip, #24, 20	; 0x18000
   12c00:	ldr	pc, [ip, #1488]!	; 0x5d0

00012c04 <xmlTextWriterEndElement@plt>:
   12c04:	add	ip, pc, #0, 12
   12c08:	add	ip, ip, #24, 20	; 0x18000
   12c0c:	ldr	pc, [ip, #1480]!	; 0x5c8

00012c10 <xmlTextWriterWriteAttribute@plt>:
   12c10:	add	ip, pc, #0, 12
   12c14:	add	ip, ip, #24, 20	; 0x18000
   12c18:	ldr	pc, [ip, #1472]!	; 0x5c0

00012c1c <setlocale@plt>:
   12c1c:	add	ip, pc, #0, 12
   12c20:	add	ip, ip, #24, 20	; 0x18000
   12c24:	ldr	pc, [ip, #1464]!	; 0x5b8

00012c28 <strcmp@plt>:
   12c28:	add	ip, pc, #0, 12
   12c2c:	add	ip, ip, #24, 20	; 0x18000
   12c30:	ldr	pc, [ip, #1456]!	; 0x5b0

00012c34 <libreport_concat_path_file@plt>:
   12c34:	add	ip, pc, #0, 12
   12c38:	add	ip, ip, #24, 20	; 0x18000
   12c3c:	ldr	pc, [ip, #1448]!	; 0x5a8

00012c40 <g_hash_table_get_keys@plt>:
   12c40:	add	ip, pc, #0, 12
   12c44:	add	ip, ip, #24, 20	; 0x18000
   12c48:	ldr	pc, [ip, #1440]!	; 0x5a0

00012c4c <libreport_ureport_server_response_from_reply@plt>:
   12c4c:	add	ip, pc, #0, 12
   12c50:	add	ip, ip, #24, 20	; 0x18000
   12c54:	ldr	pc, [ip, #1432]!	; 0x598

00012c58 <libreport_xmalloc_fgetline@plt>:
   12c58:	add	ip, pc, #0, 12
   12c5c:	add	ip, ip, #24, 20	; 0x18000
   12c60:	ldr	pc, [ip, #1424]!	; 0x590

00012c64 <__snprintf_chk@plt>:
   12c64:	add	ip, pc, #0, 12
   12c68:	add	ip, ip, #24, 20	; 0x18000
   12c6c:	ldr	pc, [ip, #1416]!	; 0x588

00012c70 <abrt_init@plt>:
   12c70:	add	ip, pc, #0, 12
   12c74:	add	ip, ip, #24, 20	; 0x18000
   12c78:	ldr	pc, [ip, #1408]!	; 0x580

00012c7c <memset@plt>:
   12c7c:	add	ip, pc, #0, 12
   12c80:	add	ip, ip, #24, 20	; 0x18000
   12c84:	ldr	pc, [ip, #1400]!	; 0x578

00012c88 <g_hash_table_insert@plt>:
   12c88:	add	ip, pc, #0, 12
   12c8c:	add	ip, ip, #24, 20	; 0x18000
   12c90:	ldr	pc, [ip, #1392]!	; 0x570

00012c94 <getenv@plt>:
   12c94:	add	ip, pc, #0, 12
   12c98:	add	ip, ip, #24, 20	; 0x18000
   12c9c:	ldr	pc, [ip, #1384]!	; 0x568

00012ca0 <time@plt>:
   12ca0:	add	ip, pc, #0, 12
   12ca4:	add	ip, ip, #24, 20	; 0x18000
   12ca8:	ldr	pc, [ip, #1376]!	; 0x560

00012cac <dd_opendir@plt>:
   12cac:	add	ip, pc, #0, 12
   12cb0:	add	ip, ip, #24, 20	; 0x18000
   12cb4:	ldr	pc, [ip, #1368]!	; 0x558

00012cb8 <libreport_ureport_server_config_init@plt>:
   12cb8:	add	ip, pc, #0, 12
   12cbc:	add	ip, ip, #24, 20	; 0x18000
   12cc0:	ldr	pc, [ip, #1360]!	; 0x550

00012cc4 <__printf_chk@plt>:
   12cc4:	add	ip, pc, #0, 12
   12cc8:	add	ip, ip, #24, 20	; 0x18000
   12ccc:	ldr	pc, [ip, #1352]!	; 0x548

00012cd0 <g_hash_table_lookup@plt>:
   12cd0:	add	ip, pc, #0, 12
   12cd4:	add	ip, ip, #24, 20	; 0x18000
   12cd8:	ldr	pc, [ip, #1344]!	; 0x540

00012cdc <libreport_strbuf_free@plt>:
   12cdc:	add	ip, pc, #0, 12
   12ce0:	add	ip, ip, #24, 20	; 0x18000
   12ce4:	ldr	pc, [ip, #1336]!	; 0x538

00012ce8 <problem_data_get_content_or_NULL@plt>:
   12ce8:	add	ip, pc, #0, 12
   12cec:	add	ip, ip, #24, 20	; 0x18000
   12cf0:	ldr	pc, [ip, #1328]!	; 0x530

00012cf4 <libreport_ask_password@plt>:
   12cf4:	add	ip, pc, #0, 12
   12cf8:	add	ip, ip, #24, 20	; 0x18000
   12cfc:	ldr	pc, [ip, #1320]!	; 0x528

00012d00 <__fprintf_chk@plt>:
   12d00:	add	ip, pc, #0, 12
   12d04:	add	ip, ip, #24, 20	; 0x18000
   12d08:	ldr	pc, [ip, #1312]!	; 0x520

00012d0c <int_to_oct_nonull@plt>:
   12d0c:	add	ip, pc, #0, 12
   12d10:	add	ip, ip, #24, 20	; 0x18000
   12d14:	ldr	pc, [ip, #1304]!	; 0x518

00012d18 <abort@plt>:
   12d18:	add	ip, pc, #0, 12
   12d1c:	add	ip, ip, #24, 20	; 0x18000
   12d20:	ldr	pc, [ip, #1296]!	; 0x510

00012d24 <new_post_state@plt>:
   12d24:	add	ip, pc, #0, 12
   12d28:	add	ip, ip, #24, 20	; 0x18000
   12d2c:	ldr	pc, [ip, #1288]!	; 0x508

00012d30 <th_set_type@plt>:
   12d30:	add	ip, pc, #0, 12
   12d34:	add	ip, ip, #24, 20	; 0x18000
   12d38:	ldr	pc, [ip, #1280]!	; 0x500

00012d3c <bindtextdomain@plt>:
   12d3c:	add	ip, pc, #0, 12
   12d40:	add	ip, ip, #24, 20	; 0x18000
   12d44:	ldr	pc, [ip, #1272]!	; 0x4f8

00012d48 <exit@plt>:
   12d48:	add	ip, pc, #0, 12
   12d4c:	add	ip, ip, #24, 20	; 0x18000
   12d50:	ldr	pc, [ip, #1264]!	; 0x4f0

00012d54 <libreport_ureport_do_post@plt>:
   12d54:	add	ip, pc, #0, 12
   12d58:	add	ip, ip, #24, 20	; 0x18000
   12d5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00012d60 <g_hash_table_iter_next@plt>:
   12d60:	add	ip, pc, #0, 12
   12d64:	add	ip, ip, #24, 20	; 0x18000
   12d68:	ldr	pc, [ip, #1248]!	; 0x4e0

00012d6c <xmlNewTextWriterMemory@plt>:
   12d6c:	add	ip, pc, #0, 12
   12d70:	add	ip, ip, #24, 20	; 0x18000
   12d74:	ldr	pc, [ip, #1240]!	; 0x4d8

00012d78 <get_problem_data_reproducible@plt>:
   12d78:	add	ip, pc, #0, 12
   12d7c:	add	ip, ip, #24, 20	; 0x18000
   12d80:	ldr	pc, [ip, #1232]!	; 0x4d0

00012d84 <libreport_parse_opts@plt>:
   12d84:	add	ip, pc, #0, 12
   12d88:	add	ip, ip, #24, 20	; 0x18000
   12d8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00012d90 <rmdir@plt>:
   12d90:	add	ip, pc, #0, 12
   12d94:	add	ip, ip, #24, 20	; 0x18000
   12d98:	ldr	pc, [ip, #1216]!	; 0x4c0

00012d9c <sr_stacktrace_free@plt>:
   12d9c:	add	ip, pc, #0, 12
   12da0:	add	ip, ip, #24, 20	; 0x18000
   12da4:	ldr	pc, [ip, #1208]!	; 0x4b8

00012da8 <strrchr@plt>:
   12da8:	add	ip, pc, #0, 12
   12dac:	add	ip, ip, #24, 20	; 0x18000
   12db0:	ldr	pc, [ip, #1200]!	; 0x4b0

00012db4 <g_list_concat@plt>:
   12db4:	add	ip, pc, #0, 12
   12db8:	add	ip, ip, #24, 20	; 0x18000
   12dbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00012dc0 <sr_abrt_type_from_analyzer@plt>:
   12dc0:	add	ip, pc, #0, 12
   12dc4:	add	ip, ip, #24, 20	; 0x18000
   12dc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00012dcc <xmlBufferCreate@plt>:
   12dcc:	add	ip, pc, #0, 12
   12dd0:	add	ip, ip, #24, 20	; 0x18000
   12dd4:	ldr	pc, [ip, #1176]!	; 0x498

00012dd8 <libreport_xstrndup@plt>:
   12dd8:	add	ip, pc, #0, 12
   12ddc:	add	ip, ip, #24, 20	; 0x18000
   12de0:	ldr	pc, [ip, #1168]!	; 0x490

00012de4 <tar_append_eof@plt>:
   12de4:	add	ip, pc, #0, 12
   12de8:	add	ip, ip, #24, 20	; 0x18000
   12dec:	ldr	pc, [ip, #1160]!	; 0x488

00012df0 <fputs@plt>:
   12df0:	add	ip, pc, #0, 12
   12df4:	add	ip, ip, #24, 20	; 0x18000
   12df8:	ldr	pc, [ip, #1152]!	; 0x480

Disassembly of section .text:

00012dfc <.text>:
   12dfc:	push	{lr}		; (str lr, [sp, #-4]!)
   12e00:	sub	sp, sp, #20
   12e04:	mov	r2, #0
   12e08:	movw	r3, #32656	; 0x7f90
   12e0c:	str	r2, [sp]
   12e10:	movt	r3, #1
   12e14:	movw	r1, #32636	; 0x7f7c
   12e18:	str	r3, [sp, #8]
   12e1c:	movt	r1, #1
   12e20:	mov	r3, #1
   12e24:	mov	r0, #3
   12e28:	str	r3, [sp, #4]
   12e2c:	mov	r2, #34	; 0x22
   12e30:	movw	r3, #32616	; 0x7f68
   12e34:	movt	r3, #1
   12e38:	bl	12a00 <log_and_die_wrapper@plt>
   12e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   12e40:	mov	r0, #69	; 0x45
   12e44:	sub	sp, sp, #20
   12e48:	bl	12730 <libreport_set_xfunc_error_retval@plt>
   12e4c:	mov	r2, #5
   12e50:	movw	r0, #33148	; 0x817c
   12e54:	movw	r1, #34100	; 0x8534
   12e58:	movt	r0, #1
   12e5c:	movt	r1, #1
   12e60:	bl	127b4 <dcgettext@plt>
   12e64:	mov	r2, #0
   12e68:	mov	r3, #1
   12e6c:	movw	r1, #34132	; 0x8554
   12e70:	stm	sp, {r2, r3}
   12e74:	movt	r1, #1
   12e78:	movw	r3, #33932	; 0x848c
   12e7c:	movw	r2, #379	; 0x17b
   12e80:	movt	r3, #1
   12e84:	str	r0, [sp, #8]
   12e88:	mov	r0, #3
   12e8c:	bl	12a00 <log_and_die_wrapper@plt>
   12e90:	push	{lr}		; (str lr, [sp, #-4]!)
   12e94:	mov	r0, #69	; 0x45
   12e98:	sub	sp, sp, #20
   12e9c:	bl	12730 <libreport_set_xfunc_error_retval@plt>
   12ea0:	mov	r2, #5
   12ea4:	movw	r0, #33148	; 0x817c
   12ea8:	movw	r1, #34156	; 0x856c
   12eac:	movt	r0, #1
   12eb0:	movt	r1, #1
   12eb4:	bl	127b4 <dcgettext@plt>
   12eb8:	mov	r2, #0
   12ebc:	mov	r3, #1
   12ec0:	movw	r1, #34132	; 0x8554
   12ec4:	stm	sp, {r2, r3}
   12ec8:	movt	r1, #1
   12ecc:	mov	r2, #392	; 0x188
   12ed0:	ldr	r3, [pc, #8]	; 12ee0 <fputs@plt+0xf0>
   12ed4:	str	r0, [sp, #8]
   12ed8:	mov	r0, #3
   12edc:	bl	12a00 <log_and_die_wrapper@plt>
   12ee0:	muleq	r1, ip, r4
   12ee4:	push	{r3, lr}
   12ee8:	movw	r0, #39632	; 0x9ad0
   12eec:	movw	r1, #39500	; 0x9a4c
   12ef0:	movt	r0, #1
   12ef4:	movt	r1, #1
   12ef8:	movw	r2, #777	; 0x309
   12efc:	ldr	r3, [pc]	; 12f04 <fputs@plt+0x114>
   12f00:	bl	12868 <__assert_fail@plt>
   12f04:	andeq	r9, r1, ip, lsl #16
   12f08:	movw	r2, #45720	; 0xb298
   12f0c:	movt	r2, #2
   12f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f14:	sub	sp, sp, #508	; 0x1fc
   12f18:	ldr	r3, [r2]
   12f1c:	mov	fp, r0
   12f20:	mov	r0, r1
   12f24:	str	r2, [sp, #52]	; 0x34
   12f28:	mov	r7, r1
   12f2c:	mov	r4, #5
   12f30:	str	r3, [sp, #500]	; 0x1f4
   12f34:	bl	12c70 <abrt_init@plt>
   12f38:	movw	r1, #35612	; 0x8b1c
   12f3c:	mov	r0, #6
   12f40:	movt	r1, #1
   12f44:	mov	r6, #0
   12f48:	bl	12c1c <setlocale@plt>
   12f4c:	movw	r0, #33148	; 0x817c
   12f50:	movw	r1, #34496	; 0x86c0
   12f54:	movt	r0, #1
   12f58:	movt	r1, #1
   12f5c:	movw	r8, #45708	; 0xb28c
   12f60:	bl	12d3c <bindtextdomain@plt>
   12f64:	movw	r0, #33148	; 0x817c
   12f68:	movt	r0, #1
   12f6c:	movt	r8, #2
   12f70:	bl	126ac <textdomain@plt>
   12f74:	mov	r2, r4
   12f78:	movw	r0, #33148	; 0x817c
   12f7c:	movw	r1, #34552	; 0x86f8
   12f80:	movt	r0, #1
   12f84:	movt	r1, #1
   12f88:	movw	ip, #38508	; 0x966c
   12f8c:	movw	r3, #34516	; 0x86d4
   12f90:	movt	ip, #1
   12f94:	movt	r3, #1
   12f98:	str	ip, [sp, #100]	; 0x64
   12f9c:	mov	r9, #2
   12fa0:	str	r3, [sp, #112]	; 0x70
   12fa4:	movw	r5, #35660	; 0x8b4c
   12fa8:	str	r6, [sp, #104]	; 0x68
   12fac:	movt	r5, #1
   12fb0:	str	r6, [sp, #108]	; 0x6c
   12fb4:	str	r6, [sp, #116]	; 0x74
   12fb8:	bl	127b4 <dcgettext@plt>
   12fbc:	mov	r1, r6
   12fc0:	mov	r2, #240	; 0xf0
   12fc4:	str	r0, [sp, #56]	; 0x38
   12fc8:	add	r0, sp, #212	; 0xd4
   12fcc:	bl	12c7c <memset@plt>
   12fd0:	mov	r2, r4
   12fd4:	movw	r0, #33148	; 0x817c
   12fd8:	movw	r1, #35624	; 0x8b28
   12fdc:	movt	r0, #1
   12fe0:	movt	r1, #1
   12fe4:	movw	r3, #35616	; 0x8b20
   12fe8:	str	r8, [sp, #224]	; 0xe0
   12fec:	movt	r3, #1
   12ff0:	str	r3, [sp, #220]	; 0xdc
   12ff4:	mov	r3, #118	; 0x76
   12ff8:	str	r3, [sp, #216]	; 0xd8
   12ffc:	bl	127b4 <dcgettext@plt>
   13000:	mov	r2, r4
   13004:	movw	r1, #35640	; 0x8b38
   13008:	movt	r1, #1
   1300c:	str	r9, [sp, #236]	; 0xec
   13010:	movw	r3, #35636	; 0x8b34
   13014:	movt	r3, #1
   13018:	str	r3, [sp, #252]	; 0xfc
   1301c:	mov	r3, #100	; 0x64
   13020:	str	r3, [sp, #240]	; 0xf0
   13024:	add	r3, sp, r3
   13028:	str	r3, [sp, #248]	; 0xf8
   1302c:	str	r0, [sp, #232]	; 0xe8
   13030:	movw	r0, #33148	; 0x817c
   13034:	movt	r0, #1
   13038:	bl	127b4 <dcgettext@plt>
   1303c:	mov	r2, r4
   13040:	movw	r1, #35668	; 0x8b54
   13044:	movt	r1, #1
   13048:	mov	ip, #99	; 0x63
   1304c:	add	r3, sp, #108	; 0x6c
   13050:	str	ip, [sp, #264]	; 0x108
   13054:	str	r5, [sp, #276]	; 0x114
   13058:	str	r3, [sp, #272]	; 0x110
   1305c:	str	r4, [sp, #260]	; 0x104
   13060:	str	r0, [sp, #256]	; 0x100
   13064:	movw	r0, #33148	; 0x817c
   13068:	movt	r0, #1
   1306c:	bl	127b4 <dcgettext@plt>
   13070:	mov	r2, r4
   13074:	movw	r1, #35720	; 0x8b88
   13078:	movt	r1, #1
   1307c:	movw	r3, #35716	; 0x8b84
   13080:	movt	r3, #1
   13084:	str	r3, [sp, #300]	; 0x12c
   13088:	mov	r3, #4
   1308c:	str	r3, [sp, #284]	; 0x11c
   13090:	mov	r3, #116	; 0x74
   13094:	str	r3, [sp, #288]	; 0x120
   13098:	add	r3, sp, #104	; 0x68
   1309c:	str	r3, [sp, #296]	; 0x128
   130a0:	str	r0, [sp, #280]	; 0x118
   130a4:	movw	r0, #33148	; 0x817c
   130a8:	movt	r0, #1
   130ac:	bl	127b4 <dcgettext@plt>
   130b0:	mov	r2, r4
   130b4:	movw	r1, #35756	; 0x8bac
   130b8:	movt	r1, #1
   130bc:	mov	r3, #102	; 0x66
   130c0:	str	r3, [sp, #312]	; 0x138
   130c4:	str	r0, [sp, #304]	; 0x130
   130c8:	movw	r0, #33148	; 0x817c
   130cc:	movt	r0, #1
   130d0:	bl	127b4 <dcgettext@plt>
   130d4:	mov	r2, r4
   130d8:	movw	r1, #35816	; 0x8be8
   130dc:	movt	r1, #1
   130e0:	mov	r3, #117	; 0x75
   130e4:	str	r3, [sp, #336]	; 0x150
   130e8:	str	r0, [sp, #328]	; 0x148
   130ec:	movw	r0, #33148	; 0x817c
   130f0:	movt	r0, #1
   130f4:	bl	127b4 <dcgettext@plt>
   130f8:	mov	r2, r4
   130fc:	movw	r1, #35860	; 0x8c14
   13100:	movt	r1, #1
   13104:	mov	ip, #67	; 0x43
   13108:	add	r3, sp, #112	; 0x70
   1310c:	str	r5, [sp, #372]	; 0x174
   13110:	str	r9, [sp, #356]	; 0x164
   13114:	str	ip, [sp, #360]	; 0x168
   13118:	str	r3, [sp, #368]	; 0x170
   1311c:	str	r0, [sp, #352]	; 0x160
   13120:	movw	r0, #33148	; 0x817c
   13124:	movt	r0, #1
   13128:	bl	127b4 <dcgettext@plt>
   1312c:	mov	r2, r4
   13130:	movw	r1, #35892	; 0x8c34
   13134:	movt	r1, #1
   13138:	mov	ip, #70	; 0x46
   1313c:	add	r3, sp, #116	; 0x74
   13140:	str	ip, [sp, #384]	; 0x180
   13144:	str	r5, [sp, #396]	; 0x18c
   13148:	str	r9, [sp, #380]	; 0x17c
   1314c:	str	r3, [sp, #392]	; 0x188
   13150:	str	r0, [sp, #376]	; 0x178
   13154:	movw	r0, #33148	; 0x817c
   13158:	movt	r0, #1
   1315c:	bl	127b4 <dcgettext@plt>
   13160:	mov	r2, r4
   13164:	movw	r1, #35924	; 0x8c54
   13168:	movt	r1, #1
   1316c:	mov	r3, #68	; 0x44
   13170:	str	r3, [sp, #408]	; 0x198
   13174:	str	r0, [sp, #400]	; 0x190
   13178:	movw	r0, #33148	; 0x817c
   1317c:	movt	r0, #1
   13180:	bl	127b4 <dcgettext@plt>
   13184:	mov	r1, r7
   13188:	add	r2, sp, #212	; 0xd4
   1318c:	ldr	r3, [sp, #56]	; 0x38
   13190:	mov	ip, #6
   13194:	str	ip, [sp, #428]	; 0x1ac
   13198:	str	r0, [sp, #424]	; 0x1a8
   1319c:	mov	r0, fp
   131a0:	bl	12d84 <libreport_parse_opts@plt>
   131a4:	movw	r3, #45704	; 0xb288
   131a8:	movt	r3, #2
   131ac:	ldr	r9, [r3]
   131b0:	str	r0, [sp, #40]	; 0x28
   131b4:	mov	r0, r6
   131b8:	bl	12b80 <libreport_export_abrt_envvars@plt>
   131bc:	bl	126dc <libreport_new_map_string@plt>
   131c0:	add	r3, r7, r9, lsl #2
   131c4:	str	r3, [sp, #64]	; 0x40
   131c8:	mov	r5, r0
   131cc:	ldr	r0, [sp, #108]	; 0x6c
   131d0:	cmp	r0, r6
   131d4:	beq	14120 <fputs@plt+0x1330>
   131d8:	movw	fp, #36080	; 0x8cf0
   131dc:	movw	r6, #36108	; 0x8d0c
   131e0:	movt	fp, #1
   131e4:	movt	r6, #1
   131e8:	mov	sl, #0
   131ec:	ldr	r4, [r0]
   131f0:	movw	r2, #561	; 0x231
   131f4:	ldr	r3, [pc, #4084]	; 141f0 <fputs@plt+0x1400>
   131f8:	mov	r0, #5
   131fc:	movw	r1, #34132	; 0x8554
   13200:	str	sl, [sp]
   13204:	movt	r1, #1
   13208:	str	sl, [sp, #4]
   1320c:	str	r4, [sp, #12]
   13210:	str	fp, [sp, #8]
   13214:	bl	12718 <log_wrapper@plt>
   13218:	mov	r1, r5
   1321c:	mov	r2, #0
   13220:	mov	r0, r4
   13224:	bl	12ad8 <libreport_load_conf_file@plt>
   13228:	mov	r0, #7
   1322c:	movw	r2, #563	; 0x233
   13230:	ldr	r3, [pc, #4024]	; 141f0 <fputs@plt+0x1400>
   13234:	str	r4, [sp, #12]
   13238:	movw	r1, #34132	; 0x8554
   1323c:	str	sl, [sp]
   13240:	movt	r1, #1
   13244:	str	sl, [sp, #4]
   13248:	str	r6, [sp, #8]
   1324c:	bl	12718 <log_wrapper@plt>
   13250:	mov	r1, r4
   13254:	ldr	r0, [sp, #108]	; 0x6c
   13258:	bl	12bf8 <g_list_remove@plt>
   1325c:	cmp	r0, #0
   13260:	str	r0, [sp, #108]	; 0x6c
   13264:	bne	131ec <fputs@plt+0x3fc>
   13268:	mov	r1, r5
   1326c:	movw	r0, #35972	; 0x8c84
   13270:	movw	r2, #35976	; 0x8c88
   13274:	movt	r0, #1
   13278:	movt	r2, #1
   1327c:	bl	15e7c <fputs@plt+0x308c>
   13280:	mov	r1, r5
   13284:	movw	r2, #35612	; 0x8b1c
   13288:	movt	r2, #1
   1328c:	mov	r4, r0
   13290:	movw	r0, #36012	; 0x8cac
   13294:	movt	r0, #1
   13298:	bl	15e7c <fputs@plt+0x308c>
   1329c:	mov	r1, r5
   132a0:	movw	r2, #35612	; 0x8b1c
   132a4:	movt	r2, #1
   132a8:	str	r0, [sp, #120]	; 0x78
   132ac:	movw	r0, #36020	; 0x8cb4
   132b0:	movt	r0, #1
   132b4:	bl	15e7c <fputs@plt+0x308c>
   132b8:	movw	r2, #36044	; 0x8ccc
   132bc:	mov	r1, r5
   132c0:	movt	r2, #1
   132c4:	str	r0, [sp, #124]	; 0x7c
   132c8:	movw	r0, #36032	; 0x8cc0
   132cc:	movt	r0, #1
   132d0:	bl	15e7c <fputs@plt+0x308c>
   132d4:	str	r0, [sp, #80]	; 0x50
   132d8:	ldr	r0, [sp, #120]	; 0x78
   132dc:	ldrb	r3, [r0]
   132e0:	cmp	r3, #0
   132e4:	beq	13924 <fputs@plt+0xb34>
   132e8:	ldr	r0, [sp, #124]	; 0x7c
   132ec:	ldrb	r3, [r0]
   132f0:	cmp	r3, #0
   132f4:	beq	138d4 <fputs@plt+0xae4>
   132f8:	movw	r0, #36272	; 0x8db0
   132fc:	movt	r0, #1
   13300:	bl	12c94 <getenv@plt>
   13304:	cmp	r0, #0
   13308:	beq	1413c <fputs@plt+0x134c>
   1330c:	bl	12b68 <libreport_string_to_bool@plt>
   13310:	mov	r6, r0
   13314:	movw	r0, #36308	; 0x8dd4
   13318:	movt	r0, #1
   1331c:	bl	12c94 <getenv@plt>
   13320:	cmp	r0, #0
   13324:	beq	14160 <fputs@plt+0x1370>
   13328:	bl	1273c <libreport_xatoi_positive@plt>
   1332c:	str	r0, [sp, #76]	; 0x4c
   13330:	movw	r0, #36344	; 0x8df8
   13334:	movt	r0, #1
   13338:	bl	12c94 <getenv@plt>
   1333c:	cmp	r0, #0
   13340:	beq	14184 <fputs@plt+0x1394>
   13344:	bl	12b68 <libreport_string_to_bool@plt>
   13348:	mov	fp, r0
   1334c:	mov	r0, r5
   13350:	bl	127e4 <libreport_free_map_string@plt>
   13354:	mov	r0, r4
   13358:	bl	12b2c <libreport_xstrdup@plt>
   1335c:	str	r0, [sp, #68]	; 0x44
   13360:	bl	126dc <libreport_new_map_string@plt>
   13364:	mov	r2, #0
   13368:	ldr	sl, [sp, #120]	; 0x78
   1336c:	ldr	r5, [sp, #124]	; 0x7c
   13370:	mov	r1, r0
   13374:	str	r0, [sp, #60]	; 0x3c
   13378:	ldr	r0, [sp, #112]	; 0x70
   1337c:	bl	12ad8 <libreport_load_conf_file@plt>
   13380:	add	r0, sp, #176	; 0xb0
   13384:	bl	12cb8 <libreport_ureport_server_config_init@plt>
   13388:	mov	r0, r4
   1338c:	movw	r1, #36388	; 0x8e24
   13390:	movt	r1, #1
   13394:	bl	12c34 <libreport_concat_path_file@plt>
   13398:	mov	r1, r0
   1339c:	add	r0, sp, #176	; 0xb0
   133a0:	bl	12958 <libreport_ureport_server_config_set_url@plt>
   133a4:	mov	r1, sl
   133a8:	mov	r2, r5
   133ac:	add	r0, sp, #176	; 0xb0
   133b0:	strb	r6, [sp, #180]	; 0xb4
   133b4:	bl	12b50 <libreport_ureport_server_config_set_basic_auth@plt>
   133b8:	movw	r0, #36404	; 0x8e34
   133bc:	movt	r0, #1
   133c0:	bl	12c94 <getenv@plt>
   133c4:	cmp	r0, #0
   133c8:	beq	1389c <fputs@plt+0xaac>
   133cc:	bl	12b68 <libreport_string_to_bool@plt>
   133d0:	cmp	r0, #0
   133d4:	bne	138b4 <fputs@plt+0xac4>
   133d8:	ldr	r1, [sp, #40]	; 0x28
   133dc:	ands	r1, r1, #8
   133e0:	str	r1, [sp, #72]	; 0x48
   133e4:	beq	13524 <fputs@plt+0x734>
   133e8:	ldr	r5, [sp, #104]	; 0x68
   133ec:	cmp	r5, #0
   133f0:	beq	13a1c <fputs@plt+0xc2c>
   133f4:	mov	r0, r4
   133f8:	mov	r1, r5
   133fc:	bl	15e00 <fputs@plt+0x3010>
   13400:	mov	r4, r0
   13404:	ldr	fp, [r7, r9, lsl #2]
   13408:	cmp	fp, #0
   1340c:	beq	13568 <fputs@plt+0x778>
   13410:	ldr	r2, [sp, #64]	; 0x40
   13414:	movw	sl, #36684	; 0x8f4c
   13418:	movw	r9, #36704	; 0x8f60
   1341c:	movt	sl, #1
   13420:	sub	r7, r2, #4
   13424:	movt	r9, #1
   13428:	mov	r2, #5
   1342c:	movw	r0, #33148	; 0x817c
   13430:	movw	r1, #36656	; 0x8f30
   13434:	movt	r0, #1
   13438:	movt	r1, #1
   1343c:	mov	r8, #0
   13440:	bl	127b4 <dcgettext@plt>
   13444:	str	r8, [sp]
   13448:	str	r8, [sp, #4]
   1344c:	movw	r2, #651	; 0x28b
   13450:	ldr	r3, [pc, #3480]	; 141f0 <fputs@plt+0x1400>
   13454:	movw	r1, #34132	; 0x8554
   13458:	movt	r1, #1
   1345c:	str	r0, [sp, #8]
   13460:	mov	r0, #4
   13464:	ldr	ip, [r7, #4]
   13468:	str	r4, [sp, #16]
   1346c:	str	ip, [sp, #12]
   13470:	bl	12718 <log_wrapper@plt>
   13474:	ldr	ip, [r7, #4]!
   13478:	ldr	r1, [sp, #120]	; 0x78
   1347c:	mov	r0, r4
   13480:	ldr	r2, [sp, #124]	; 0x7c
   13484:	mov	r3, r6
   13488:	str	ip, [sp]
   1348c:	bl	157e8 <fputs@plt+0x29f8>
   13490:	ldr	r5, [r0, #4]
   13494:	mov	fp, r0
   13498:	cmp	r5, r8
   1349c:	bne	14860 <fputs@plt+0x1a70>
   134a0:	str	r5, [sp]
   134a4:	mov	r0, #4
   134a8:	str	r5, [sp, #4]
   134ac:	mov	r2, #660	; 0x294
   134b0:	str	sl, [sp, #8]
   134b4:	movw	r1, #34132	; 0x8554
   134b8:	ldr	ip, [fp, #12]
   134bc:	movt	r1, #1
   134c0:	ldr	r3, [pc, #3368]	; 141f0 <fputs@plt+0x1400>
   134c4:	str	ip, [sp, #12]
   134c8:	bl	12718 <log_wrapper@plt>
   134cc:	ldr	r3, [pc, #3356]	; 141f0 <fputs@plt+0x1400>
   134d0:	mov	r0, #4
   134d4:	movw	r2, #661	; 0x295
   134d8:	str	r5, [sp]
   134dc:	movw	r1, #34132	; 0x8554
   134e0:	str	r5, [sp, #4]
   134e4:	movt	r1, #1
   134e8:	str	r9, [sp, #8]
   134ec:	bl	12718 <log_wrapper@plt>
   134f0:	mov	r0, fp
   134f4:	bl	15044 <fputs@plt+0x2254>
   134f8:	ldr	r3, [r7, #4]
   134fc:	cmp	r3, #0
   13500:	bne	13428 <fputs@plt+0x638>
   13504:	ldr	r1, [sp, #52]	; 0x34
   13508:	mov	r0, #0
   1350c:	ldr	r2, [sp, #500]	; 0x1f4
   13510:	ldr	r3, [r1]
   13514:	cmp	r2, r3
   13518:	bne	148b4 <fputs@plt+0x1ac4>
   1351c:	add	sp, sp, #508	; 0x1fc
   13520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13524:	ldr	r3, [r7, r9, lsl #2]
   13528:	cmp	r3, #0
   1352c:	bne	1496c <fputs@plt+0x1b7c>
   13530:	ldr	r0, [sp, #100]	; 0x64
   13534:	bl	15e44 <fputs@plt+0x3054>
   13538:	subs	r5, r0, #0
   1353c:	beq	13558 <fputs@plt+0x768>
   13540:	ldr	r1, [r5, #4]
   13544:	cmp	r1, #0
   13548:	beq	13558 <fputs@plt+0x768>
   1354c:	ldr	r3, [sp, #40]	; 0x28
   13550:	tst	r3, #16
   13554:	beq	140b0 <fputs@plt+0x12c0>
   13558:	mov	r0, r5
   1355c:	bl	127a8 <libreport_free_report_result@plt>
   13560:	cmp	fp, #0
   13564:	bne	13fb0 <fputs@plt+0x11c0>
   13568:	str	fp, [sp, #64]	; 0x40
   1356c:	ldr	r0, [sp, #100]	; 0x64
   13570:	bl	128d4 <create_problem_data_for_reporting@plt>
   13574:	subs	r5, r0, #0
   13578:	beq	149f4 <fputs@plt+0x1c04>
   1357c:	movw	r1, #36972	; 0x906c
   13580:	movt	r1, #1
   13584:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   13588:	cmp	r0, #0
   1358c:	beq	135b8 <fputs@plt+0x7c8>
   13590:	ldrb	r3, [r0]
   13594:	cmp	r3, #49	; 0x31
   13598:	bne	135b8 <fputs@plt+0x7c8>
   1359c:	ldrb	r3, [r0, #1]
   135a0:	cmp	r3, #0
   135a4:	bne	135b8 <fputs@plt+0x7c8>
   135a8:	mov	r0, r5
   135ac:	bl	12d78 <get_problem_data_reproducible@plt>
   135b0:	cmp	r0, #0
   135b4:	ble	14204 <fputs@plt+0x1414>
   135b8:	movw	r1, #37208	; 0x9158
   135bc:	mov	r0, r5
   135c0:	movt	r1, #1
   135c4:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   135c8:	movw	r1, #37220	; 0x9164
   135cc:	movt	r1, #1
   135d0:	mov	r7, r0
   135d4:	mov	r0, r5
   135d8:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   135dc:	cmp	r7, #0
   135e0:	cmpne	r0, #0
   135e4:	mov	r8, r0
   135e8:	beq	13960 <fputs@plt+0xb70>
   135ec:	movw	r1, #37228	; 0x916c
   135f0:	mov	r0, r7
   135f4:	movt	r1, #1
   135f8:	bl	12c28 <strcmp@plt>
   135fc:	cmp	r0, #0
   13600:	bne	139dc <fputs@plt+0xbec>
   13604:	movw	r1, #37360	; 0x91f0
   13608:	mov	r0, r5
   1360c:	movt	r1, #1
   13610:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   13614:	mov	r0, #0
   13618:	bl	12b98 <libreport_iso_date_string@plt>
   1361c:	mov	r1, #47	; 0x2f
   13620:	mov	r3, r1
   13624:	movw	r2, #37520	; 0x9290
   13628:	movt	r2, #1
   1362c:	str	r2, [sp]
   13630:	mov	r2, #1
   13634:	str	r0, [sp, #4]
   13638:	add	r0, sp, #452	; 0x1c4
   1363c:	bl	12c64 <__snprintf_chk@plt>
   13640:	add	r0, sp, #452	; 0x1c4
   13644:	bl	128ec <mkdtemp@plt>
   13648:	subs	r7, r0, #0
   1364c:	beq	14a64 <fputs@plt+0x1c74>
   13650:	ldr	r1, [sp, #100]	; 0x64
   13654:	add	r0, sp, #452	; 0x1c4
   13658:	bl	1279c <libreport_concat_path_basename@plt>
   1365c:	movw	r1, #37600	; 0x92e0
   13660:	movt	r1, #1
   13664:	bl	12760 <libreport_append_to_malloced_string@plt>
   13668:	movw	r1, #37220	; 0x9164
   1366c:	movt	r1, #1
   13670:	mov	r7, r0
   13674:	mov	r0, r5
   13678:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   1367c:	str	r0, [sp, #88]	; 0x58
   13680:	bl	16fcc <fputs@plt+0x41dc>
   13684:	ldr	r8, [sp, #116]	; 0x74
   13688:	cmp	r8, #0
   1368c:	str	r0, [sp, #56]	; 0x38
   13690:	beq	140dc <fputs@plt+0x12ec>
   13694:	mov	r1, r8
   13698:	bl	17180 <fputs@plt+0x4390>
   1369c:	cmp	r0, #0
   136a0:	bne	149f8 <fputs@plt+0x1c08>
   136a4:	add	r2, sp, #504	; 0x1f8
   136a8:	mov	r8, #0
   136ac:	ldr	r0, [sp, #56]	; 0x38
   136b0:	mov	r1, r5
   136b4:	str	r8, [r2, #-376]!	; 0xfffffe88
   136b8:	bl	171f8 <fputs@plt+0x4408>
   136bc:	subs	r9, r0, #0
   136c0:	bne	14a34 <fputs@plt+0x1c44>
   136c4:	movw	r1, #33032	; 0x8108
   136c8:	ldr	r0, [sp, #128]	; 0x80
   136cc:	movt	r1, #1
   136d0:	bl	16d00 <fputs@plt+0x3f10>
   136d4:	mov	r8, r0
   136d8:	mov	r0, r7
   136dc:	bl	12724 <basename@plt>
   136e0:	movw	r1, #38240	; 0x9560
   136e4:	movw	r2, #38116	; 0x94e4
   136e8:	movt	r1, #1
   136ec:	movt	r2, #1
   136f0:	str	r1, [sp]
   136f4:	mov	r1, #1
   136f8:	mov	r3, r0
   136fc:	mov	r0, r8
   13700:	bl	12d00 <__fprintf_chk@plt>
   13704:	ldr	r0, [sp, #128]	; 0x80
   13708:	bl	16e10 <fputs@plt+0x4020>
   1370c:	str	r0, [sp, #84]	; 0x54
   13710:	ldr	r0, [sp, #128]	; 0x80
   13714:	bl	16e48 <fputs@plt+0x4058>
   13718:	ldr	r1, [sp, #40]	; 0x28
   1371c:	ands	r8, r1, #256	; 0x100
   13720:	mov	fp, r0
   13724:	bne	14978 <fputs@plt+0x1b88>
   13728:	mov	r2, #5
   1372c:	movw	r0, #33148	; 0x817c
   13730:	movw	r1, #38304	; 0x95a0
   13734:	movt	r0, #1
   13738:	movt	r1, #1
   1373c:	bl	127b4 <dcgettext@plt>
   13740:	movw	r2, #830	; 0x33e
   13744:	ldr	r3, [pc, #2724]	; 141f0 <fputs@plt+0x1400>
   13748:	movw	r1, #34132	; 0x8554
   1374c:	str	r8, [sp]
   13750:	movt	r1, #1
   13754:	str	r8, [sp, #4]
   13758:	str	r0, [sp, #8]
   1375c:	mov	r0, #4
   13760:	bl	12718 <log_wrapper@plt>
   13764:	ldr	r0, [sp, #100]	; 0x64
   13768:	mov	r1, r8
   1376c:	bl	12cac <dd_opendir@plt>
   13770:	subs	r9, r0, #0
   13774:	beq	149f4 <fputs@plt+0x1c04>
   13778:	add	r0, sp, #144	; 0x90
   1377c:	bl	127cc <libreport_xpipe@plt>
   13780:	bl	12ac0 <fork@plt>
   13784:	cmp	r0, #0
   13788:	str	r0, [sp, #40]	; 0x28
   1378c:	beq	148b8 <fputs@plt+0x1ac8>
   13790:	ldr	r0, [sp, #144]	; 0x90
   13794:	bl	129d0 <close@plt>
   13798:	add	r0, sp, #504	; 0x1f8
   1379c:	mov	r3, #65	; 0x41
   137a0:	mov	r2, #420	; 0x1a4
   137a4:	str	r8, [r0, #-372]!	; 0xfffffe8c
   137a8:	ldr	r1, [sp, #148]	; 0x94
   137ac:	str	r3, [sp]
   137b0:	mov	r3, #1
   137b4:	str	r2, [sp, #4]
   137b8:	mov	r2, r7
   137bc:	str	r3, [sp, #8]
   137c0:	mov	r3, r8
   137c4:	bl	126e8 <tar_fdopen@plt>
   137c8:	cmp	r0, #0
   137cc:	beq	13a9c <fputs@plt+0xcac>
   137d0:	ldr	r0, [sp, #132]	; 0x84
   137d4:	cmp	r0, #0
   137d8:	beq	137e0 <fputs@plt+0x9f0>
   137dc:	bl	12a30 <tar_close@plt>
   137e0:	ldr	r0, [sp, #40]	; 0x28
   137e4:	cmp	r0, #0
   137e8:	ble	137f8 <fputs@plt+0xa08>
   137ec:	mov	r1, #0
   137f0:	mov	r2, r1
   137f4:	bl	12afc <libreport_safe_waitpid@plt>
   137f8:	mov	r0, r9
   137fc:	mov	r9, #0
   13800:	bl	128bc <dd_close@plt>
   13804:	mov	r0, r8
   13808:	bl	15004 <fputs@plt+0x2214>
   1380c:	movw	r0, #33148	; 0x817c
   13810:	movw	r1, #38788	; 0x9784
   13814:	movt	r0, #1
   13818:	movt	r1, #1
   1381c:	mov	r2, #5
   13820:	bl	127b4 <dcgettext@plt>
   13824:	mov	sl, r0
   13828:	mov	r0, r7
   1382c:	bl	12a6c <unlink@plt>
   13830:	mov	r0, r7
   13834:	bl	129b8 <free@plt>
   13838:	add	r0, sp, #452	; 0x1c4
   1383c:	bl	12d90 <rmdir@plt>
   13840:	cmp	sl, #0
   13844:	bne	14930 <fputs@plt+0x1b40>
   13848:	mov	r0, sl
   1384c:	bl	15044 <fputs@plt+0x2254>
   13850:	mov	r0, r9
   13854:	bl	15044 <fputs@plt+0x2254>
   13858:	add	r0, sp, #176	; 0xb0
   1385c:	bl	12898 <libreport_ureport_server_config_destroy@plt>
   13860:	ldr	r0, [sp, #60]	; 0x3c
   13864:	bl	127e4 <libreport_free_map_string@plt>
   13868:	ldr	r0, [sp, #64]	; 0x40
   1386c:	bl	129b8 <free@plt>
   13870:	ldr	r0, [sp, #68]	; 0x44
   13874:	bl	129b8 <free@plt>
   13878:	mov	r0, r4
   1387c:	bl	129b8 <free@plt>
   13880:	ldr	r0, [sp, #120]	; 0x78
   13884:	bl	129b8 <free@plt>
   13888:	ldr	r0, [sp, #124]	; 0x7c
   1388c:	bl	129b8 <free@plt>
   13890:	mov	r0, r5
   13894:	bl	126f4 <g_hash_table_destroy@plt>
   13898:	b	13504 <fputs@plt+0x714>
   1389c:	movw	r1, #36412	; 0x8e3c
   138a0:	ldr	r0, [sp, #60]	; 0x3c
   138a4:	movt	r1, #1
   138a8:	bl	12cd0 <g_hash_table_lookup@plt>
   138ac:	cmp	r0, #0
   138b0:	bne	133cc <fputs@plt+0x5dc>
   138b4:	movw	r0, #36428	; 0x8e4c
   138b8:	movt	r0, #1
   138bc:	bl	12c94 <getenv@plt>
   138c0:	cmp	r0, #0
   138c4:	beq	147b0 <fputs@plt+0x19c0>
   138c8:	bl	12acc <libreport_parse_list@plt>
   138cc:	str	r0, [sp, #208]	; 0xd0
   138d0:	b	133d8 <fputs@plt+0x5e8>
   138d4:	bl	129b8 <free@plt>
   138d8:	mov	r2, #5
   138dc:	movw	r0, #33148	; 0x817c
   138e0:	movw	r1, #36192	; 0x8d60
   138e4:	movt	r0, #1
   138e8:	movt	r1, #1
   138ec:	bl	127b4 <dcgettext@plt>
   138f0:	ldr	r1, [sp, #120]	; 0x78
   138f4:	bl	12bbc <libreport_xasprintf@plt>
   138f8:	mov	r6, r0
   138fc:	bl	12cf4 <libreport_ask_password@plt>
   13900:	subs	r3, r0, #0
   13904:	beq	14968 <fputs@plt+0x1b78>
   13908:	ldrb	r2, [r3]
   1390c:	cmp	r2, #0
   13910:	beq	14968 <fputs@plt+0x1b78>
   13914:	mov	r0, r6
   13918:	str	r3, [sp, #124]	; 0x7c
   1391c:	bl	129b8 <free@plt>
   13920:	b	132f8 <fputs@plt+0x508>
   13924:	bl	129b8 <free@plt>
   13928:	mov	r2, #5
   1392c:	movw	r0, #33148	; 0x817c
   13930:	movw	r1, #36120	; 0x8d18
   13934:	movt	r0, #1
   13938:	movt	r1, #1
   1393c:	bl	127b4 <dcgettext@plt>
   13940:	bl	12a24 <libreport_ask@plt>
   13944:	cmp	r0, #0
   13948:	beq	1395c <fputs@plt+0xb6c>
   1394c:	ldrb	r3, [r0]
   13950:	cmp	r3, #0
   13954:	strne	r0, [sp, #120]	; 0x78
   13958:	bne	132e8 <fputs@plt+0x4f8>
   1395c:	bl	12e3c <fputs@plt+0x4c>
   13960:	cmp	r7, #0
   13964:	beq	146a0 <fputs@plt+0x18b0>
   13968:	movw	r1, #37360	; 0x91f0
   1396c:	mov	r0, r5
   13970:	movt	r1, #1
   13974:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   13978:	cmp	r8, #0
   1397c:	mov	r7, r0
   13980:	bne	13614 <fputs@plt+0x824>
   13984:	mov	r2, #5
   13988:	movw	r0, #33148	; 0x817c
   1398c:	movw	r1, #37372	; 0x91fc
   13990:	movt	r0, #1
   13994:	movt	r1, #1
   13998:	bl	127b4 <dcgettext@plt>
   1399c:	mov	r1, r7
   139a0:	bl	12bbc <libreport_xasprintf@plt>
   139a4:	mov	r8, r0
   139a8:	bl	12970 <libreport_ask_yes_no@plt>
   139ac:	mov	r7, r0
   139b0:	mov	r0, r8
   139b4:	bl	129b8 <free@plt>
   139b8:	cmp	r7, #0
   139bc:	beq	14228 <fputs@plt+0x1438>
   139c0:	movw	r1, #37220	; 0x9164
   139c4:	movw	r2, #37492	; 0x9274
   139c8:	movt	r1, #1
   139cc:	movt	r2, #1
   139d0:	mov	r0, r5
   139d4:	bl	12b8c <problem_data_add_text_noteditable@plt>
   139d8:	b	13614 <fputs@plt+0x824>
   139dc:	mov	r2, #5
   139e0:	movw	r0, #33148	; 0x817c
   139e4:	movw	r1, #37244	; 0x917c
   139e8:	movt	r0, #1
   139ec:	movt	r1, #1
   139f0:	bl	127b4 <dcgettext@plt>
   139f4:	mov	r1, r7
   139f8:	bl	12bbc <libreport_xasprintf@plt>
   139fc:	mov	r8, r0
   13a00:	bl	12970 <libreport_ask_yes_no@plt>
   13a04:	mov	r7, r0
   13a08:	mov	r0, r8
   13a0c:	bl	129b8 <free@plt>
   13a10:	cmp	r7, #0
   13a14:	bne	13604 <fputs@plt+0x814>
   13a18:	b	14228 <fputs@plt+0x1438>
   13a1c:	ldr	r0, [sp, #100]	; 0x64
   13a20:	bl	15e44 <fputs@plt+0x3054>
   13a24:	subs	r8, r0, #0
   13a28:	beq	141bc <fputs@plt+0x13cc>
   13a2c:	ldr	r3, [r8, #4]
   13a30:	cmp	r3, #0
   13a34:	beq	141bc <fputs@plt+0x13cc>
   13a38:	mov	r0, r4
   13a3c:	bl	129b8 <free@plt>
   13a40:	ldr	r4, [r8, #4]
   13a44:	mov	r0, r8
   13a48:	str	r5, [r8, #4]
   13a4c:	bl	127a8 <libreport_free_report_result@plt>
   13a50:	mov	r2, #5
   13a54:	movw	r0, #33148	; 0x817c
   13a58:	movw	r1, #36452	; 0x8e64
   13a5c:	movt	r0, #1
   13a60:	movt	r1, #1
   13a64:	bl	127b4 <dcgettext@plt>
   13a68:	mov	r1, r4
   13a6c:	bl	12bbc <libreport_xasprintf@plt>
   13a70:	mov	r8, r0
   13a74:	bl	12970 <libreport_ask_yes_no@plt>
   13a78:	mov	r5, r0
   13a7c:	mov	r0, r8
   13a80:	bl	129b8 <free@plt>
   13a84:	cmp	r5, #0
   13a88:	bne	13404 <fputs@plt+0x614>
   13a8c:	mov	r0, r4
   13a90:	bl	15edc <fputs@plt+0x30ec>
   13a94:	mov	r4, r0
   13a98:	b	13404 <fputs@plt+0x614>
   13a9c:	bl	14e38 <fputs@plt+0x2048>
   13aa0:	mov	r1, r5
   13aa4:	mov	r8, r0
   13aa8:	add	r0, sp, #152	; 0x98
   13aac:	bl	128e0 <g_hash_table_iter_init@plt>
   13ab0:	add	r0, sp, #152	; 0x98
   13ab4:	add	r1, sp, #136	; 0x88
   13ab8:	add	r2, sp, #140	; 0x8c
   13abc:	bl	12d60 <g_hash_table_iter_next@plt>
   13ac0:	cmp	r0, #0
   13ac4:	beq	13b58 <fputs@plt+0xd68>
   13ac8:	ldr	r3, [sp, #140]	; 0x8c
   13acc:	ldm	r3, {sl, ip}
   13ad0:	tst	ip, #2
   13ad4:	bne	13b44 <fputs@plt+0xd54>
   13ad8:	tst	ip, #1
   13adc:	beq	13ab0 <fputs@plt+0xcc0>
   13ae0:	mov	r1, #47	; 0x2f
   13ae4:	mov	r0, sl
   13ae8:	bl	12da8 <strrchr@plt>
   13aec:	cmp	r0, #0
   13af0:	addne	r1, r0, #1
   13af4:	movw	r0, #32980	; 0x80d4
   13af8:	moveq	r1, sl
   13afc:	movt	r0, #1
   13b00:	bl	12c34 <libreport_concat_path_file@plt>
   13b04:	ldr	lr, [sp, #140]	; 0x8c
   13b08:	mov	r1, sl
   13b0c:	ldr	r2, [sp, #136]	; 0x88
   13b10:	ldr	lr, [lr, #4]
   13b14:	eor	lr, lr, #64	; 0x40
   13b18:	ubfx	lr, lr, #6, #1
   13b1c:	str	lr, [sp]
   13b20:	mov	ip, r0
   13b24:	mov	r3, r0
   13b28:	mov	r0, r8
   13b2c:	str	ip, [sp, #28]
   13b30:	bl	14f20 <fputs@plt+0x2130>
   13b34:	ldr	ip, [sp, #28]
   13b38:	mov	r0, ip
   13b3c:	bl	129b8 <free@plt>
   13b40:	b	13ab0 <fputs@plt+0xcc0>
   13b44:	mov	r2, sl
   13b48:	mov	r0, r8
   13b4c:	ldr	r1, [sp, #136]	; 0x88
   13b50:	bl	14eac <fputs@plt+0x20bc>
   13b54:	b	13ab0 <fputs@plt+0xcc0>
   13b58:	mov	r0, r9
   13b5c:	bl	1270c <dd_init_next_file@plt>
   13b60:	b	13ba0 <fputs@plt+0xdb0>
   13b64:	ldr	r1, [sp, #136]	; 0x88
   13b68:	movw	r0, #32980	; 0x80d4
   13b6c:	movt	r0, #1
   13b70:	bl	12c34 <libreport_concat_path_file@plt>
   13b74:	mov	sl, r0
   13b78:	ldr	r0, [sp, #136]	; 0x88
   13b7c:	bl	129b8 <free@plt>
   13b80:	mov	r2, sl
   13b84:	ldr	r0, [sp, #132]	; 0x84
   13b88:	ldr	r1, [sp, #140]	; 0x8c
   13b8c:	bl	12b38 <tar_append_file@plt>
   13b90:	cmp	r0, #0
   13b94:	ldr	r0, [sp, #140]	; 0x8c
   13b98:	bne	13fa8 <fputs@plt+0x11b8>
   13b9c:	bl	129b8 <free@plt>
   13ba0:	mov	r0, r9
   13ba4:	add	r1, sp, #136	; 0x88
   13ba8:	add	r2, sp, #140	; 0x8c
   13bac:	bl	12bd4 <dd_get_next_file@plt>
   13bb0:	cmp	r0, #0
   13bb4:	bne	13b64 <fputs@plt+0xd74>
   13bb8:	mov	r3, r0
   13bbc:	mov	r0, r8
   13bc0:	str	r3, [sp, #32]
   13bc4:	bl	14fd0 <fputs@plt+0x21e0>
   13bc8:	str	r0, [sp, #36]	; 0x24
   13bcc:	bl	12af0 <strlen@plt>
   13bd0:	add	r2, r0, #508	; 0x1fc
   13bd4:	mov	sl, r0
   13bd8:	add	r2, r2, #3
   13bdc:	bic	ip, r2, #508	; 0x1fc
   13be0:	bic	ip, ip, #3
   13be4:	str	ip, [sp, #28]
   13be8:	mov	r0, ip
   13bec:	bl	12ab4 <libreport_xzalloc@plt>
   13bf0:	mov	r2, sl
   13bf4:	ldr	r1, [sp, #36]	; 0x24
   13bf8:	bl	129e8 <memcpy@plt>
   13bfc:	movw	r1, #33188	; 0x81a4
   13c00:	str	r0, [sp, #92]	; 0x5c
   13c04:	ldr	r0, [sp, #132]	; 0x84
   13c08:	bl	12d30 <th_set_type@plt>
   13c0c:	movw	r1, #33188	; 0x81a4
   13c10:	ldr	r0, [sp, #132]	; 0x84
   13c14:	bl	1297c <th_set_mode@plt>
   13c18:	ldr	r3, [sp, #32]
   13c1c:	mov	r0, r3
   13c20:	bl	12ca0 <time@plt>
   13c24:	ldr	r1, [sp, #132]	; 0x84
   13c28:	mov	r2, #12
   13c2c:	add	r1, r1, #156	; 0x9c
   13c30:	bl	12d0c <int_to_oct_nonull@plt>
   13c34:	ldr	r0, [sp, #132]	; 0x84
   13c38:	movw	r1, #38352	; 0x95d0
   13c3c:	movt	r1, #1
   13c40:	bl	12754 <th_set_path@plt>
   13c44:	ldr	r1, [sp, #132]	; 0x84
   13c48:	mov	r2, #12
   13c4c:	mov	r0, sl
   13c50:	add	r1, r1, #144	; 0x90
   13c54:	bl	12d0c <int_to_oct_nonull@plt>
   13c58:	ldr	r0, [sp, #132]	; 0x84
   13c5c:	bl	129c4 <th_finish@plt>
   13c60:	ldr	r0, [sp, #132]	; 0x84
   13c64:	bl	12b20 <th_write@plt>
   13c68:	ldr	ip, [sp, #28]
   13c6c:	cmp	r0, #0
   13c70:	bne	13fa4 <fputs@plt+0x11b4>
   13c74:	ldr	r0, [sp, #132]	; 0x84
   13c78:	str	ip, [sp, #28]
   13c7c:	bl	12a78 <tar_fd@plt>
   13c80:	ldr	ip, [sp, #28]
   13c84:	ldr	r1, [sp, #92]	; 0x5c
   13c88:	mov	r2, ip
   13c8c:	bl	129ac <libreport_full_write@plt>
   13c90:	ldr	ip, [sp, #28]
   13c94:	cmp	ip, r0
   13c98:	bne	13fa4 <fputs@plt+0x11b4>
   13c9c:	ldr	r0, [sp, #132]	; 0x84
   13ca0:	bl	12de4 <tar_append_eof@plt>
   13ca4:	cmp	r0, #0
   13ca8:	bne	13fa4 <fputs@plt+0x11b4>
   13cac:	ldr	r0, [sp, #132]	; 0x84
   13cb0:	bl	12a30 <tar_close@plt>
   13cb4:	subs	r2, r0, #0
   13cb8:	bne	13fa4 <fputs@plt+0x11b4>
   13cbc:	ldr	r0, [sp, #92]	; 0x5c
   13cc0:	str	r2, [sp, #132]	; 0x84
   13cc4:	str	r2, [sp, #36]	; 0x24
   13cc8:	bl	129b8 <free@plt>
   13ccc:	ldr	r0, [sp, #40]	; 0x28
   13cd0:	add	r1, sp, #152	; 0x98
   13cd4:	ldr	r2, [sp, #36]	; 0x24
   13cd8:	bl	12afc <libreport_safe_waitpid@plt>
   13cdc:	ldr	r3, [sp, #152]	; 0x98
   13ce0:	tst	r3, #127	; 0x7f
   13ce4:	bne	149a8 <fputs@plt+0x1bb8>
   13ce8:	ubfx	r3, r3, #8, #8
   13cec:	cmp	r3, #0
   13cf0:	mvnne	r2, #0
   13cf4:	strne	r2, [sp, #40]	; 0x28
   13cf8:	bne	137d0 <fputs@plt+0x9e0>
   13cfc:	mov	r0, r9
   13d00:	bl	128bc <dd_close@plt>
   13d04:	mov	r0, r8
   13d08:	bl	15004 <fputs@plt+0x2214>
   13d0c:	mov	r0, r7
   13d10:	bl	12a3c <libreport_stat_st_size_or_die@plt>
   13d14:	ldr	r2, [sp, #72]	; 0x48
   13d18:	cmp	r2, #0
   13d1c:	strd	r0, [sp, #40]	; 0x28
   13d20:	bne	14430 <fputs@plt+0x1640>
   13d24:	ldrd	r0, [sp, #40]	; 0x28
   13d28:	mov	r2, #8388608	; 0x800000
   13d2c:	mov	r3, #0
   13d30:	cmp	r2, r0
   13d34:	sbcs	r1, r3, r1
   13d38:	blt	13e44 <fputs@plt+0x1054>
   13d3c:	mov	r2, #5
   13d40:	movw	r0, #33148	; 0x817c
   13d44:	movw	r1, #38364	; 0x95dc
   13d48:	movt	r0, #1
   13d4c:	movt	r1, #1
   13d50:	movw	r8, #401	; 0x191
   13d54:	bl	127b4 <dcgettext@plt>
   13d58:	ldr	r2, [sp, #72]	; 0x48
   13d5c:	movw	r1, #34132	; 0x8554
   13d60:	ldr	r3, [pc, #1160]	; 141f0 <fputs@plt+0x1400>
   13d64:	movt	r1, #1
   13d68:	str	r2, [sp]
   13d6c:	str	r2, [sp, #4]
   13d70:	movw	r2, #849	; 0x351
   13d74:	str	r0, [sp, #8]
   13d78:	mov	r0, #4
   13d7c:	bl	12718 <log_wrapper@plt>
   13d80:	ldr	r9, [sp, #68]	; 0x44
   13d84:	b	13da8 <fputs@plt+0xfb8>
   13d88:	ldr	r3, [r0]
   13d8c:	cmp	r3, r8
   13d90:	bne	146bc <fputs@plt+0x18cc>
   13d94:	add	r0, sp, #120	; 0x78
   13d98:	add	r1, sp, #124	; 0x7c
   13d9c:	bl	15f9c <fputs@plt+0x31ac>
   13da0:	mov	r0, sl
   13da4:	bl	15044 <fputs@plt+0x2254>
   13da8:	mov	r3, r6
   13dac:	ldr	r1, [sp, #120]	; 0x78
   13db0:	mov	r0, r9
   13db4:	ldr	r2, [sp, #124]	; 0x7c
   13db8:	str	r7, [sp]
   13dbc:	bl	1584c <fputs@plt+0x2a5c>
   13dc0:	ldr	r3, [r0, #4]
   13dc4:	mov	sl, r0
   13dc8:	cmp	r3, #0
   13dcc:	bne	13d88 <fputs@plt+0xf98>
   13dd0:	ldr	r0, [r0, #16]
   13dd4:	cmp	r0, #0
   13dd8:	beq	146fc <fputs@plt+0x190c>
   13ddc:	bl	15c18 <fputs@plt+0x2e28>
   13de0:	cmp	r0, #0
   13de4:	beq	146fc <fputs@plt+0x190c>
   13de8:	movw	r1, #33928	; 0x8488
   13dec:	movt	r1, #1
   13df0:	bl	12760 <libreport_append_to_malloced_string@plt>
   13df4:	mov	r2, #5
   13df8:	movw	r1, #38384	; 0x95f0
   13dfc:	movt	r1, #1
   13e00:	mov	r8, r0
   13e04:	movw	r0, #33148	; 0x817c
   13e08:	movt	r0, #1
   13e0c:	bl	127b4 <dcgettext@plt>
   13e10:	mov	r1, r0
   13e14:	mov	r0, r8
   13e18:	bl	12760 <libreport_append_to_malloced_string@plt>
   13e1c:	mov	r8, r0
   13e20:	bl	12970 <libreport_ask_yes_no@plt>
   13e24:	mov	r9, r0
   13e28:	mov	r0, r8
   13e2c:	bl	129b8 <free@plt>
   13e30:	mov	r0, sl
   13e34:	bl	15044 <fputs@plt+0x2254>
   13e38:	cmp	r9, #0
   13e3c:	moveq	sl, r9
   13e40:	beq	13828 <fputs@plt+0xa38>
   13e44:	mov	r2, #5
   13e48:	movw	r0, #33148	; 0x817c
   13e4c:	movw	r1, #38436	; 0x9624
   13e50:	movt	r0, #1
   13e54:	movt	r1, #1
   13e58:	mov	r8, #0
   13e5c:	bl	127b4 <dcgettext@plt>
   13e60:	ldr	r3, [pc, #904]	; 141f0 <fputs@plt+0x1400>
   13e64:	movw	r2, #854	; 0x356
   13e68:	str	r8, [sp]
   13e6c:	str	r8, [sp, #4]
   13e70:	movw	r1, #34132	; 0x8554
   13e74:	movt	r1, #1
   13e78:	str	r0, [sp, #8]
   13e7c:	mov	r0, #4
   13e80:	bl	12718 <log_wrapper@plt>
   13e84:	str	r8, [sp, #136]	; 0x88
   13e88:	str	r8, [sp, #140]	; 0x8c
   13e8c:	bl	126dc <libreport_new_map_string@plt>
   13e90:	mov	r8, r0
   13e94:	mov	r0, r5
   13e98:	mov	r1, r8
   13e9c:	bl	12700 <problem_data_get_osinfo@plt>
   13ea0:	mov	r0, r8
   13ea4:	add	r1, sp, #136	; 0x88
   13ea8:	add	r2, sp, #140	; 0x8c
   13eac:	bl	12808 <libreport_parse_osinfo_for_rhts@plt>
   13eb0:	mov	r0, r8
   13eb4:	bl	127e4 <libreport_free_map_string@plt>
   13eb8:	ldr	r9, [sp, #136]	; 0x88
   13ebc:	cmp	r9, #0
   13ec0:	beq	149b4 <fputs@plt+0x1bc4>
   13ec4:	str	r5, [sp, #92]	; 0x5c
   13ec8:	mov	lr, r9
   13ecc:	mov	r5, fp
   13ed0:	movw	r8, #401	; 0x191
   13ed4:	ldr	sl, [sp, #88]	; 0x58
   13ed8:	mov	r9, r7
   13edc:	ldr	fp, [sp, #84]	; 0x54
   13ee0:	b	13f08 <fputs@plt+0x1118>
   13ee4:	ldr	r2, [r0]
   13ee8:	cmp	r2, r8
   13eec:	bne	13f44 <fputs@plt+0x1154>
   13ef0:	add	r0, sp, #120	; 0x78
   13ef4:	add	r1, sp, #124	; 0x7c
   13ef8:	bl	15f9c <fputs@plt+0x31ac>
   13efc:	mov	r0, r7
   13f00:	bl	15044 <fputs@plt+0x2254>
   13f04:	ldr	lr, [sp, #136]	; 0x88
   13f08:	ldr	ip, [sp, #140]	; 0x8c
   13f0c:	mov	r0, r4
   13f10:	ldr	r2, [sp, #124]	; 0x7c
   13f14:	mov	r3, r6
   13f18:	ldr	r1, [sp, #120]	; 0x78
   13f1c:	str	lr, [sp]
   13f20:	str	fp, [sp, #8]
   13f24:	str	r5, [sp, #12]
   13f28:	str	sl, [sp, #16]
   13f2c:	str	ip, [sp, #4]
   13f30:	bl	15074 <fputs@plt+0x2284>
   13f34:	ldr	r2, [r0, #4]
   13f38:	mov	r7, r0
   13f3c:	cmp	r2, #0
   13f40:	bne	13ee4 <fputs@plt+0x10f4>
   13f44:	mov	r3, r9
   13f48:	ldr	r0, [sp, #140]	; 0x8c
   13f4c:	mov	r9, r7
   13f50:	ldr	r5, [sp, #92]	; 0x5c
   13f54:	mov	r7, r3
   13f58:	bl	129b8 <free@plt>
   13f5c:	ldr	r0, [sp, #136]	; 0x88
   13f60:	bl	129b8 <free@plt>
   13f64:	ldr	r0, [sp, #128]	; 0x80
   13f68:	bl	16f6c <fputs@plt+0x417c>
   13f6c:	ldr	r0, [sp, #56]	; 0x38
   13f70:	bl	16ff4 <fputs@plt+0x4204>
   13f74:	ldr	r8, [r9, #4]
   13f78:	cmp	r8, #0
   13f7c:	beq	14238 <fputs@plt+0x1448>
   13f80:	ldr	sl, [r9, #8]
   13f84:	mov	r1, #32
   13f88:	mov	r2, sl
   13f8c:	ldrb	r3, [r2], #1
   13f90:	cmp	r3, #10
   13f94:	beq	14230 <fputs@plt+0x1440>
   13f98:	cmp	r3, #0
   13f9c:	bne	13f8c <fputs@plt+0x119c>
   13fa0:	b	13828 <fputs@plt+0xa38>
   13fa4:	ldr	r0, [sp, #92]	; 0x5c
   13fa8:	bl	129b8 <free@plt>
   13fac:	b	137d0 <fputs@plt+0x9e0>
   13fb0:	mov	r2, #5
   13fb4:	movw	r0, #33148	; 0x817c
   13fb8:	movw	r1, #36836	; 0x8fe4
   13fbc:	movt	r0, #1
   13fc0:	movt	r1, #1
   13fc4:	mov	r5, #0
   13fc8:	bl	127b4 <dcgettext@plt>
   13fcc:	mov	r2, #688	; 0x2b0
   13fd0:	ldr	r3, [pc, #536]	; 141f0 <fputs@plt+0x1400>
   13fd4:	movw	r1, #34132	; 0x8554
   13fd8:	str	r5, [sp]
   13fdc:	movt	r1, #1
   13fe0:	str	r5, [sp, #4]
   13fe4:	str	r0, [sp, #8]
   13fe8:	mov	r0, #4
   13fec:	bl	12718 <log_wrapper@plt>
   13ff0:	ldr	r9, [sp, #100]	; 0x64
   13ff4:	mov	r1, #8
   13ff8:	mov	r0, r9
   13ffc:	bl	12cac <dd_opendir@plt>
   14000:	subs	sl, r0, #0
   14004:	beq	14824 <fputs@plt+0x1a34>
   14008:	movw	r1, #36872	; 0x9008
   1400c:	movt	r1, #1
   14010:	bl	12a48 <libreport_find_in_reported_to@plt>
   14014:	mov	r7, r0
   14018:	mov	r0, sl
   1401c:	bl	128bc <dd_close@plt>
   14020:	cmp	r7, #0
   14024:	beq	14708 <fputs@plt+0x1918>
   14028:	mov	r0, #5
   1402c:	movw	r2, #269	; 0x10d
   14030:	str	r5, [sp]
   14034:	movw	r3, #36880	; 0x9010
   14038:	str	r5, [sp, #4]
   1403c:	movt	r3, #1
   14040:	movw	r1, #34132	; 0x8554
   14044:	str	r3, [sp, #8]
   14048:	movt	r1, #1
   1404c:	ldr	r3, [pc, #420]	; 141f8 <fputs@plt+0x1408>
   14050:	bl	12718 <log_wrapper@plt>
   14054:	ldr	r0, [r7, #12]
   14058:	bl	12b2c <libreport_xstrdup@plt>
   1405c:	str	r0, [sp, #64]	; 0x40
   14060:	mov	r0, r7
   14064:	bl	127a8 <libreport_free_report_result@plt>
   14068:	ldr	r5, [sp, #120]	; 0x78
   1406c:	ldr	r1, [sp, #196]	; 0xc4
   14070:	mov	r0, r5
   14074:	bl	12c28 <strcmp@plt>
   14078:	cmp	r0, #0
   1407c:	bne	14688 <fputs@plt+0x1898>
   14080:	ldr	r5, [sp, #124]	; 0x7c
   14084:	ldr	r1, [sp, #200]	; 0xc8
   14088:	mov	r0, r5
   1408c:	bl	12c28 <strcmp@plt>
   14090:	cmp	r0, #0
   14094:	beq	1356c <fputs@plt+0x77c>
   14098:	mov	r0, r5
   1409c:	bl	129b8 <free@plt>
   140a0:	ldr	r0, [sp, #200]	; 0xc8
   140a4:	bl	12b2c <libreport_xstrdup@plt>
   140a8:	str	r0, [sp, #124]	; 0x7c
   140ac:	b	1356c <fputs@plt+0x77c>
   140b0:	movw	r0, #36732	; 0x8f7c
   140b4:	movt	r0, #1
   140b8:	bl	12bbc <libreport_xasprintf@plt>
   140bc:	mov	r9, r0
   140c0:	bl	12970 <libreport_ask_yes_no@plt>
   140c4:	mov	r7, r0
   140c8:	mov	r0, r9
   140cc:	bl	129b8 <free@plt>
   140d0:	cmp	r7, #0
   140d4:	bne	13558 <fputs@plt+0x768>
   140d8:	b	13504 <fputs@plt+0x714>
   140dc:	movw	r1, #37632	; 0x9300
   140e0:	movt	r1, #1
   140e4:	bl	170e8 <fputs@plt+0x42f8>
   140e8:	cmp	r0, #0
   140ec:	beq	136a4 <fputs@plt+0x8b4>
   140f0:	mov	r2, #1
   140f4:	movw	r3, #38028	; 0x948c
   140f8:	str	r2, [sp, #4]
   140fc:	movt	r3, #1
   14100:	movw	r1, #34132	; 0x8554
   14104:	str	r3, [sp, #8]
   14108:	str	r8, [sp]
   1410c:	movt	r1, #1
   14110:	mov	r0, #3
   14114:	movw	r2, #790	; 0x316
   14118:	ldr	r3, [pc, #208]	; 141f0 <fputs@plt+0x1400>
   1411c:	bl	12a00 <log_and_die_wrapper@plt>
   14120:	movw	r1, #35932	; 0x8c5c
   14124:	movt	r1, #1
   14128:	bl	12b44 <g_list_append@plt>
   1412c:	cmp	r0, r6
   14130:	str	r0, [sp, #108]	; 0x6c
   14134:	beq	13268 <fputs@plt+0x478>
   14138:	b	131d8 <fputs@plt+0x3e8>
   1413c:	movw	r1, #36296	; 0x8dc8
   14140:	mov	r0, r5
   14144:	movt	r1, #1
   14148:	bl	12cd0 <g_hash_table_lookup@plt>
   1414c:	movw	r3, #34484	; 0x86b4
   14150:	movt	r3, #1
   14154:	cmp	r0, #0
   14158:	moveq	r0, r3
   1415c:	b	1330c <fputs@plt+0x51c>
   14160:	movw	r1, #36332	; 0x8dec
   14164:	mov	r0, r5
   14168:	movt	r1, #1
   1416c:	bl	12cd0 <g_hash_table_lookup@plt>
   14170:	movw	r3, #34488	; 0x86b8
   14174:	movt	r3, #1
   14178:	cmp	r0, #0
   1417c:	moveq	r0, r3
   14180:	b	13328 <fputs@plt+0x538>
   14184:	movw	r1, #36372	; 0x8e14
   14188:	mov	r0, r5
   1418c:	movt	r1, #1
   14190:	bl	12cd0 <g_hash_table_lookup@plt>
   14194:	cmp	r0, #0
   14198:	bne	13344 <fputs@plt+0x554>
   1419c:	ldr	r0, [sp, #40]	; 0x28
   141a0:	movw	r3, #34484	; 0x86b4
   141a4:	movt	r3, #1
   141a8:	tst	r0, #32
   141ac:	movw	r0, #34492	; 0x86bc
   141b0:	movt	r0, #1
   141b4:	movne	r0, r3
   141b8:	b	13344 <fputs@plt+0x554>
   141bc:	mov	r2, #0
   141c0:	movw	r3, #36616	; 0x8f08
   141c4:	str	r2, [sp]
   141c8:	movt	r3, #1
   141cc:	str	r2, [sp, #4]
   141d0:	movw	r1, #34132	; 0x8554
   141d4:	str	r3, [sp, #8]
   141d8:	movt	r1, #1
   141dc:	mov	r0, #4
   141e0:	mov	r2, #636	; 0x27c
   141e4:	ldr	r3, [pc, #4]	; 141f0 <fputs@plt+0x1400>
   141e8:	bl	12718 <log_wrapper@plt>
   141ec:	b	13a8c <fputs@plt+0xc9c>
   141f0:	andeq	r8, r1, r0, ror #9
   141f4:	andeq	r8, r1, r8, lsl #10
   141f8:	andeq	r8, r1, r8, ror #9
   141fc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14200:	andeq	r8, r1, r0, ror #9
   14204:	mov	r2, #5
   14208:	movw	r0, #33148	; 0x817c
   1420c:	movw	r1, #36980	; 0x9074
   14210:	movt	r0, #1
   14214:	movt	r1, #1
   14218:	bl	127b4 <dcgettext@plt>
   1421c:	bl	12970 <libreport_ask_yes_no@plt>
   14220:	cmp	r0, #0
   14224:	bne	135b8 <fputs@plt+0x7c8>
   14228:	mov	r0, #69	; 0x45
   1422c:	bl	12d48 <exit@plt>
   14230:	strb	r1, [r2, #-1]
   14234:	b	13f8c <fputs@plt+0x119c>
   14238:	ldr	r0, [sp, #100]	; 0x64
   1423c:	mov	r1, r8
   14240:	bl	12cac <dd_opendir@plt>
   14244:	subs	r4, r0, #0
   14248:	beq	14308 <fputs@plt+0x1518>
   1424c:	mov	r2, #20
   14250:	mov	r1, r8
   14254:	add	r0, sp, #152	; 0x98
   14258:	bl	12c7c <memset@plt>
   1425c:	movw	r3, #34072	; 0x8518
   14260:	movt	r3, #1
   14264:	str	r3, [sp, #152]	; 0x98
   14268:	ldr	r3, [r9, #12]
   1426c:	add	r0, sp, #168	; 0xa8
   14270:	str	r3, [sp, #156]	; 0x9c
   14274:	ldr	r3, [r9, #8]
   14278:	str	r3, [sp, #160]	; 0xa0
   1427c:	bl	12ca0 <time@plt>
   14280:	mov	r0, r4
   14284:	add	r1, sp, #152	; 0x98
   14288:	bl	12988 <libreport_add_reported_to_entry@plt>
   1428c:	mov	r0, r4
   14290:	bl	128bc <dd_close@plt>
   14294:	ldr	r2, [r9, #8]
   14298:	cmp	r2, #0
   1429c:	beq	142d0 <fputs@plt+0x14e0>
   142a0:	movw	r3, #40104	; 0x9ca8
   142a4:	str	r2, [sp, #12]
   142a8:	movt	r3, #1
   142ac:	movw	r1, #34132	; 0x8554
   142b0:	str	r3, [sp, #8]
   142b4:	movt	r1, #1
   142b8:	str	r8, [sp]
   142bc:	mov	r0, #4
   142c0:	str	r8, [sp, #4]
   142c4:	movw	r2, #914	; 0x392
   142c8:	ldr	r3, [pc, #-208]	; 14200 <fputs@plt+0x1410>
   142cc:	bl	12718 <log_wrapper@plt>
   142d0:	mov	r2, #0
   142d4:	movw	r3, #38512	; 0x9670
   142d8:	str	r2, [sp]
   142dc:	movt	r3, #1
   142e0:	str	r2, [sp, #4]
   142e4:	movw	r1, #34132	; 0x8554
   142e8:	str	r3, [sp, #8]
   142ec:	movt	r1, #1
   142f0:	ldr	ip, [r9, #12]
   142f4:	mov	r0, #4
   142f8:	movw	r2, #915	; 0x393
   142fc:	ldr	r3, [pc, #-260]	; 14200 <fputs@plt+0x1410>
   14300:	str	ip, [sp, #12]
   14304:	bl	12718 <log_wrapper@plt>
   14308:	ldr	r3, [sp, #64]	; 0x40
   1430c:	cmp	r3, #0
   14310:	beq	1441c <fputs@plt+0x162c>
   14314:	mov	r2, #5
   14318:	movw	r0, #33148	; 0x817c
   1431c:	movw	r1, #38520	; 0x9678
   14320:	movt	r0, #1
   14324:	movt	r1, #1
   14328:	bl	127b4 <dcgettext@plt>
   1432c:	mov	r3, #0
   14330:	movw	r2, #921	; 0x399
   14334:	str	r3, [sp]
   14338:	str	r3, [sp, #4]
   1433c:	movw	r1, #34132	; 0x8554
   14340:	ldr	r3, [pc, #-328]	; 14200 <fputs@plt+0x1410>
   14344:	movt	r1, #1
   14348:	str	r0, [sp, #8]
   1434c:	mov	r0, #4
   14350:	bl	12718 <log_wrapper@plt>
   14354:	add	r0, sp, #176	; 0xb0
   14358:	ldr	r1, [sp, #120]	; 0x78
   1435c:	ldr	r2, [sp, #124]	; 0x7c
   14360:	bl	12b50 <libreport_ureport_server_config_set_basic_auth@plt>
   14364:	add	r0, sp, #176	; 0xb0
   14368:	ldr	r1, [sp, #64]	; 0x40
   1436c:	movw	r2, #38572	; 0x96ac
   14370:	ldr	r3, [r9, #12]
   14374:	movt	r2, #1
   14378:	bl	1614c <fputs@plt+0x335c>
   1437c:	movw	r0, #38580	; 0x96b4
   14380:	movt	r0, #1
   14384:	bl	12c94 <getenv@plt>
   14388:	subs	r4, r0, #0
   1438c:	beq	14898 <fputs@plt+0x1aa8>
   14390:	mov	r2, #5
   14394:	movw	r0, #33148	; 0x817c
   14398:	movw	r1, #38828	; 0x97ac
   1439c:	movt	r0, #1
   143a0:	movt	r1, #1
   143a4:	bl	127b4 <dcgettext@plt>
   143a8:	mov	r3, #0
   143ac:	movw	r2, #934	; 0x3a6
   143b0:	str	r3, [sp]
   143b4:	str	r3, [sp, #4]
   143b8:	movw	r1, #34132	; 0x8554
   143bc:	ldr	r3, [pc, #-452]	; 14200 <fputs@plt+0x1410>
   143c0:	movt	r1, #1
   143c4:	str	r4, [sp, #12]
   143c8:	str	r0, [sp, #8]
   143cc:	mov	r0, #4
   143d0:	bl	12718 <log_wrapper@plt>
   143d4:	movw	r2, #38892	; 0x97ec
   143d8:	add	r0, sp, #176	; 0xb0
   143dc:	ldr	r1, [sp, #64]	; 0x40
   143e0:	mov	r3, r4
   143e4:	movt	r2, #1
   143e8:	bl	1614c <fputs@plt+0x335c>
   143ec:	ldr	r4, [sp, #120]	; 0x78
   143f0:	ldr	r1, [sp, #196]	; 0xc4
   143f4:	mov	r0, r4
   143f8:	bl	12c28 <strcmp@plt>
   143fc:	cmp	r0, #0
   14400:	bne	14848 <fputs@plt+0x1a58>
   14404:	ldr	r4, [sp, #124]	; 0x7c
   14408:	ldr	r1, [sp, #200]	; 0xc8
   1440c:	mov	r0, r4
   14410:	bl	12c28 <strcmp@plt>
   14414:	cmp	r0, #0
   14418:	bne	14830 <fputs@plt+0x1a40>
   1441c:	ldr	r4, [r9, #12]
   14420:	mov	r3, #0
   14424:	mov	r0, r9
   14428:	str	r3, [r9, #12]
   1442c:	bl	15044 <fputs@plt+0x2254>
   14430:	ldr	r0, [sp, #76]	; 0x4c
   14434:	cmp	r0, #0
   14438:	beq	14480 <fputs@plt+0x1690>
   1443c:	ldr	r1, [sp, #44]	; 0x2c
   14440:	mov	sl, r0
   14444:	mov	r9, #0
   14448:	asr	r2, r1, #31
   1444c:	mov	r1, #0
   14450:	mov	fp, r1
   14454:	ldrd	r0, [sp, #40]	; 0x28
   14458:	asr	r3, r2, #31
   1445c:	lsr	r8, r3, #12
   14460:	adds	r0, r0, r8
   14464:	adc	r1, r1, r9
   14468:	lsr	r2, r0, #20
   1446c:	orr	r2, r2, r1, lsl #12
   14470:	asr	r3, r1, #20
   14474:	cmp	r2, sl
   14478:	sbcs	r1, r3, fp
   1447c:	bge	14534 <fputs@plt+0x1744>
   14480:	mov	r2, #5
   14484:	movw	r0, #33148	; 0x817c
   14488:	movw	r1, #38664	; 0x9708
   1448c:	movt	r0, #1
   14490:	movt	r1, #1
   14494:	movw	r8, #401	; 0x191
   14498:	bl	127b4 <dcgettext@plt>
   1449c:	mov	r3, #0
   144a0:	str	r4, [sp, #12]
   144a4:	movw	r1, #34132	; 0x8554
   144a8:	str	r3, [sp]
   144ac:	movt	r1, #1
   144b0:	str	r3, [sp, #4]
   144b4:	mov	r2, #976	; 0x3d0
   144b8:	ldr	r3, [pc, #-704]	; 14200 <fputs@plt+0x1410>
   144bc:	str	r0, [sp, #8]
   144c0:	mov	r0, #4
   144c4:	bl	12718 <log_wrapper@plt>
   144c8:	b	144ec <fputs@plt+0x16fc>
   144cc:	ldr	r2, [r0]
   144d0:	cmp	r2, r8
   144d4:	bne	14608 <fputs@plt+0x1818>
   144d8:	add	r0, sp, #120	; 0x78
   144dc:	add	r1, sp, #124	; 0x7c
   144e0:	bl	15f9c <fputs@plt+0x31ac>
   144e4:	mov	r0, sl
   144e8:	bl	15044 <fputs@plt+0x2254>
   144ec:	ldr	r2, [sp, #124]	; 0x7c
   144f0:	mov	r0, r4
   144f4:	str	r7, [sp]
   144f8:	mov	r3, r6
   144fc:	ldr	r1, [sp, #120]	; 0x78
   14500:	bl	157e8 <fputs@plt+0x29f8>
   14504:	ldr	r2, [r0, #4]
   14508:	mov	sl, r0
   1450c:	cmp	r2, #0
   14510:	bne	144cc <fputs@plt+0x16dc>
   14514:	mov	r0, r7
   14518:	mov	r9, #0
   1451c:	bl	12a6c <unlink@plt>
   14520:	mov	r0, r7
   14524:	bl	129b8 <free@plt>
   14528:	add	r0, sp, #452	; 0x1c4
   1452c:	bl	12d90 <rmdir@plt>
   14530:	b	13848 <fputs@plt+0xa58>
   14534:	ldr	r0, [sp, #80]	; 0x50
   14538:	mov	r1, r7
   1453c:	bl	1285c <libreport_upload_file@plt>
   14540:	subs	sl, r0, #0
   14544:	beq	14480 <fputs@plt+0x1690>
   14548:	mov	r2, #5
   1454c:	movw	r0, #33148	; 0x817c
   14550:	movw	r1, #38604	; 0x96cc
   14554:	movt	r0, #1
   14558:	movt	r1, #1
   1455c:	bl	127b4 <dcgettext@plt>
   14560:	str	r9, [sp]
   14564:	str	r9, [sp, #4]
   14568:	movw	r2, #958	; 0x3be
   1456c:	ldr	r3, [pc, #-884]	; 14200 <fputs@plt+0x1410>
   14570:	movw	r1, #34132	; 0x8554
   14574:	str	r4, [sp, #12]
   14578:	movt	r1, #1
   1457c:	movw	r9, #401	; 0x191
   14580:	str	r0, [sp, #8]
   14584:	mov	r0, #4
   14588:	bl	12718 <log_wrapper@plt>
   1458c:	mov	r1, sl
   14590:	movw	r0, #38632	; 0x96e8
   14594:	movt	r0, #1
   14598:	bl	12bbc <libreport_xasprintf@plt>
   1459c:	mov	r8, r0
   145a0:	mov	r0, sl
   145a4:	bl	129b8 <free@plt>
   145a8:	b	145cc <fputs@plt+0x17dc>
   145ac:	ldr	r3, [r0]
   145b0:	cmp	r3, r9
   145b4:	bne	145f4 <fputs@plt+0x1804>
   145b8:	add	r0, sp, #120	; 0x78
   145bc:	add	r1, sp, #124	; 0x7c
   145c0:	bl	15f9c <fputs@plt+0x31ac>
   145c4:	mov	r0, sl
   145c8:	bl	15044 <fputs@plt+0x2254>
   145cc:	mov	r3, r6
   145d0:	ldr	r1, [sp, #120]	; 0x78
   145d4:	mov	r0, r4
   145d8:	ldr	r2, [sp, #124]	; 0x7c
   145dc:	str	r8, [sp]
   145e0:	bl	15470 <fputs@plt+0x2680>
   145e4:	ldr	r3, [r0, #4]
   145e8:	mov	sl, r0
   145ec:	cmp	r3, #0
   145f0:	bne	145ac <fputs@plt+0x17bc>
   145f4:	mov	r0, r8
   145f8:	bl	129b8 <free@plt>
   145fc:	ldr	r3, [sl, #4]
   14600:	cmp	r3, #0
   14604:	beq	14514 <fputs@plt+0x1724>
   14608:	ldr	r2, [sp, #72]	; 0x48
   1460c:	cmp	r2, #0
   14610:	bne	1464c <fputs@plt+0x185c>
   14614:	str	r2, [sp]
   14618:	movw	r3, #38700	; 0x972c
   1461c:	str	r2, [sp, #4]
   14620:	movt	r3, #1
   14624:	str	r3, [sp, #8]
   14628:	movw	r1, #34132	; 0x8554
   1462c:	ldr	ip, [sl, #8]
   14630:	movt	r1, #1
   14634:	mov	r0, #4
   14638:	mov	r2, #988	; 0x3dc
   1463c:	ldr	r3, [pc, #-1092]	; 14200 <fputs@plt+0x1410>
   14640:	str	ip, [sp, #12]
   14644:	bl	12718 <log_wrapper@plt>
   14648:	b	14514 <fputs@plt+0x1724>
   1464c:	mov	r2, #0
   14650:	movw	r3, #38752	; 0x9760
   14654:	str	r2, [sp]
   14658:	movt	r3, #1
   1465c:	str	r2, [sp, #4]
   14660:	movw	r1, #34132	; 0x8554
   14664:	str	r3, [sp, #8]
   14668:	movt	r1, #1
   1466c:	ldr	ip, [sl, #8]
   14670:	mov	r0, #4
   14674:	mov	r2, #992	; 0x3e0
   14678:	ldr	r3, [pc, #-1152]	; 14200 <fputs@plt+0x1410>
   1467c:	str	ip, [sp, #12]
   14680:	bl	12718 <log_wrapper@plt>
   14684:	b	14514 <fputs@plt+0x1724>
   14688:	mov	r0, r5
   1468c:	bl	129b8 <free@plt>
   14690:	ldr	r0, [sp, #196]	; 0xc4
   14694:	bl	12b2c <libreport_xstrdup@plt>
   14698:	str	r0, [sp, #120]	; 0x78
   1469c:	b	14080 <fputs@plt+0x1290>
   146a0:	movw	r1, #37208	; 0x9158
   146a4:	movw	r2, #37344	; 0x91e0
   146a8:	movt	r1, #1
   146ac:	movt	r2, #1
   146b0:	mov	r0, r5
   146b4:	bl	12b8c <problem_data_add_text_noteditable@plt>
   146b8:	b	13968 <fputs@plt+0xb78>
   146bc:	ldr	r0, [sp, #68]	; 0x44
   146c0:	movw	r2, #32840	; 0x8048
   146c4:	str	r3, [sp, #16]
   146c8:	movt	r2, #1
   146cc:	mov	r3, #0
   146d0:	str	r2, [sp, #8]
   146d4:	str	r0, [sp, #12]
   146d8:	movw	r1, #34132	; 0x8554
   146dc:	str	r3, [sp]
   146e0:	movt	r1, #1
   146e4:	mov	r3, #1
   146e8:	mov	r0, #3
   146ec:	str	r3, [sp, #4]
   146f0:	movw	r2, #346	; 0x15a
   146f4:	ldr	r3, [pc, #-1288]	; 141f4 <fputs@plt+0x1404>
   146f8:	bl	12718 <log_wrapper@plt>
   146fc:	mov	r0, sl
   14700:	bl	15044 <fputs@plt+0x2254>
   14704:	b	13e44 <fputs@plt+0x1054>
   14708:	mov	r0, r9
   1470c:	bl	12b14 <libreport_ureport_from_dump_dir@plt>
   14710:	subs	sl, r0, #0
   14714:	beq	14824 <fputs@plt+0x1a34>
   14718:	add	r1, sp, #176	; 0xb0
   1471c:	movw	r2, #36916	; 0x9034
   14720:	movt	r2, #1
   14724:	bl	16040 <fputs@plt+0x3250>
   14728:	mov	r5, r0
   1472c:	mov	r0, sl
   14730:	bl	129b8 <free@plt>
   14734:	cmp	r5, #0
   14738:	beq	14824 <fputs@plt+0x1a34>
   1473c:	ldrb	r3, [r5]
   14740:	cmp	r3, #0
   14744:	bne	147c4 <fputs@plt+0x19d4>
   14748:	ldr	r0, [r5, #12]
   1474c:	cmp	r0, #0
   14750:	streq	r0, [sp, #64]	; 0x40
   14754:	beq	14760 <fputs@plt+0x1970>
   14758:	bl	12b2c <libreport_xstrdup@plt>
   1475c:	str	r0, [sp, #64]	; 0x40
   14760:	mov	r1, r9
   14764:	mov	r0, r5
   14768:	add	r2, sp, #176	; 0xb0
   1476c:	bl	128b0 <libreport_ureport_server_response_save_in_dump_dir@plt>
   14770:	ldr	r3, [r5, #8]
   14774:	cmp	r3, #0
   14778:	beq	147a4 <fputs@plt+0x19b4>
   1477c:	str	r3, [sp, #8]
   14780:	movw	r1, #34132	; 0x8554
   14784:	mov	r3, #0
   14788:	movt	r1, #1
   1478c:	str	r3, [sp]
   14790:	mov	r0, #4
   14794:	str	r3, [sp, #4]
   14798:	movw	r2, #293	; 0x125
   1479c:	ldr	r3, [pc, #-1452]	; 141f8 <fputs@plt+0x1408>
   147a0:	bl	12718 <log_wrapper@plt>
   147a4:	mov	r0, r5
   147a8:	bl	12748 <libreport_ureport_server_response_free@plt>
   147ac:	b	14068 <fputs@plt+0x1278>
   147b0:	movw	r1, #36436	; 0x8e54
   147b4:	ldr	r0, [sp, #60]	; 0x3c
   147b8:	movt	r1, #1
   147bc:	bl	12cd0 <g_hash_table_lookup@plt>
   147c0:	b	138c8 <fputs@plt+0xad8>
   147c4:	ldr	r3, [r8]
   147c8:	cmp	r3, #2
   147cc:	strle	r7, [sp, #64]	; 0x40
   147d0:	ble	147a4 <fputs@plt+0x19b4>
   147d4:	mov	r2, #5
   147d8:	movw	r0, #33148	; 0x817c
   147dc:	movw	r1, #36932	; 0x9044
   147e0:	movt	r0, #1
   147e4:	movt	r1, #1
   147e8:	str	r7, [sp, #64]	; 0x40
   147ec:	bl	127b4 <dcgettext@plt>
   147f0:	str	r7, [sp]
   147f4:	mov	r3, #1
   147f8:	str	r3, [sp, #4]
   147fc:	movw	r1, #34132	; 0x8554
   14800:	mov	r2, #296	; 0x128
   14804:	movt	r1, #1
   14808:	ldr	r3, [pc, #-1560]	; 141f8 <fputs@plt+0x1408>
   1480c:	str	r0, [sp, #8]
   14810:	mov	r0, #3
   14814:	ldr	ip, [r5, #4]
   14818:	str	ip, [sp, #12]
   1481c:	bl	12718 <log_wrapper@plt>
   14820:	b	147a4 <fputs@plt+0x19b4>
   14824:	mov	r0, #0
   14828:	str	r0, [sp, #64]	; 0x40
   1482c:	b	14068 <fputs@plt+0x1278>
   14830:	mov	r0, r4
   14834:	bl	129b8 <free@plt>
   14838:	ldr	r0, [sp, #200]	; 0xc8
   1483c:	bl	12b2c <libreport_xstrdup@plt>
   14840:	str	r0, [sp, #124]	; 0x7c
   14844:	b	1441c <fputs@plt+0x162c>
   14848:	mov	r0, r4
   1484c:	bl	129b8 <free@plt>
   14850:	ldr	r0, [sp, #196]	; 0xc4
   14854:	bl	12b2c <libreport_xstrdup@plt>
   14858:	str	r0, [sp, #120]	; 0x78
   1485c:	b	14404 <fputs@plt+0x1614>
   14860:	mov	r2, #1
   14864:	str	r8, [sp]
   14868:	str	r2, [sp, #4]
   1486c:	movw	r3, #40104	; 0x9ca8
   14870:	movt	r3, #1
   14874:	str	r3, [sp, #8]
   14878:	ldr	ip, [r0, #8]
   1487c:	movw	r1, #34132	; 0x8554
   14880:	mov	r0, #3
   14884:	movt	r1, #1
   14888:	movw	r2, #659	; 0x293
   1488c:	ldr	r3, [pc, #-1684]	; 14200 <fputs@plt+0x1410>
   14890:	str	ip, [sp, #12]
   14894:	bl	12a00 <log_and_die_wrapper@plt>
   14898:	movw	r1, #38588	; 0x96bc
   1489c:	ldr	r0, [sp, #60]	; 0x3c
   148a0:	movt	r1, #1
   148a4:	bl	12cd0 <g_hash_table_lookup@plt>
   148a8:	subs	r4, r0, #0
   148ac:	beq	143ec <fputs@plt+0x15fc>
   148b0:	b	14390 <fputs@plt+0x15a0>
   148b4:	bl	12874 <__stack_chk_fail@plt>
   148b8:	ldr	r0, [sp, #148]	; 0x94
   148bc:	movw	r4, #38324	; 0x95b4
   148c0:	bl	129d0 <close@plt>
   148c4:	mov	r2, #384	; 0x180
   148c8:	mov	r1, #193	; 0xc1
   148cc:	mov	r0, r7
   148d0:	bl	12910 <libreport_xopen3@plt>
   148d4:	movt	r4, #1
   148d8:	mov	r1, #1
   148dc:	bl	12b08 <libreport_xmove_fd@plt>
   148e0:	ldr	r0, [sp, #144]	; 0x90
   148e4:	ldr	r1, [sp, #40]	; 0x28
   148e8:	bl	12b08 <libreport_xmove_fd@plt>
   148ec:	ldr	r2, [sp, #40]	; 0x28
   148f0:	mov	r1, r4
   148f4:	mov	r0, r4
   148f8:	bl	126d0 <execlp@plt>
   148fc:	mov	r2, #1
   14900:	movw	r3, #38332	; 0x95bc
   14904:	str	r2, [sp]
   14908:	movt	r3, #1
   1490c:	movw	r1, #34132	; 0x8554
   14910:	str	r3, [sp, #8]
   14914:	movt	r1, #1
   14918:	str	r2, [sp, #4]
   1491c:	mov	r0, #3
   14920:	str	r4, [sp, #12]
   14924:	mov	r2, #94	; 0x5e
   14928:	ldr	r3, [pc, #-1844]	; 141fc <fputs@plt+0x140c>
   1492c:	bl	12a00 <log_and_die_wrapper@plt>
   14930:	mov	r2, #0
   14934:	movw	r3, #40104	; 0x9ca8
   14938:	str	r2, [sp]
   1493c:	movt	r3, #1
   14940:	mov	r2, #1
   14944:	str	r3, [sp, #8]
   14948:	movw	r1, #34132	; 0x8554
   1494c:	str	r2, [sp, #4]
   14950:	str	sl, [sp, #12]
   14954:	movt	r1, #1
   14958:	mov	r0, #3
   1495c:	add	r2, r2, #1004	; 0x3ec
   14960:	ldr	r3, [pc, #-1896]	; 14200 <fputs@plt+0x1410>
   14964:	bl	12a00 <log_and_die_wrapper@plt>
   14968:	bl	12e90 <fputs@plt+0xa0>
   1496c:	ldr	r0, [sp, #56]	; 0x38
   14970:	add	r1, sp, #212	; 0xd4
   14974:	bl	12994 <libreport_show_usage_and_die@plt>
   14978:	mov	r3, r0
   1497c:	ldr	r2, [sp, #84]	; 0x54
   14980:	movw	r1, #38284	; 0x958c
   14984:	mov	r0, #1
   14988:	movt	r1, #1
   1498c:	bl	12cc4 <__printf_chk@plt>
   14990:	ldr	r0, [sp, #128]	; 0x80
   14994:	bl	16f6c <fputs@plt+0x417c>
   14998:	ldr	r0, [sp, #56]	; 0x38
   1499c:	bl	16ff4 <fputs@plt+0x4204>
   149a0:	mov	r0, r9
   149a4:	bl	12d48 <exit@plt>
   149a8:	mvn	r3, #0
   149ac:	str	r3, [sp, #40]	; 0x28
   149b0:	b	137d0 <fputs@plt+0x9e0>
   149b4:	mov	r2, #5
   149b8:	movw	r0, #33148	; 0x817c
   149bc:	movw	r1, #38456	; 0x9638
   149c0:	movt	r0, #1
   149c4:	movt	r1, #1
   149c8:	bl	127b4 <dcgettext@plt>
   149cc:	mov	r3, #1
   149d0:	movw	r1, #34132	; 0x8554
   149d4:	str	r3, [sp, #4]
   149d8:	str	r9, [sp]
   149dc:	movt	r1, #1
   149e0:	movw	r2, #865	; 0x361
   149e4:	ldr	r3, [pc, #-2028]	; 14200 <fputs@plt+0x1410>
   149e8:	str	r0, [sp, #8]
   149ec:	mov	r0, #3
   149f0:	bl	12a00 <log_and_die_wrapper@plt>
   149f4:	bl	129f4 <libreport_xfunc_die@plt>
   149f8:	ldr	r0, [sp, #116]	; 0x74
   149fc:	mov	r2, #0
   14a00:	movw	r3, #37608	; 0x92e8
   14a04:	str	r2, [sp]
   14a08:	movt	r3, #1
   14a0c:	mov	r2, #1
   14a10:	str	r3, [sp, #8]
   14a14:	movw	r1, #34132	; 0x8554
   14a18:	str	r0, [sp, #12]
   14a1c:	movt	r1, #1
   14a20:	str	r2, [sp, #4]
   14a24:	mov	r0, #3
   14a28:	mov	r2, #784	; 0x310
   14a2c:	ldr	r3, [pc, #-2100]	; 14200 <fputs@plt+0x1410>
   14a30:	bl	12a00 <log_and_die_wrapper@plt>
   14a34:	mov	r2, #1
   14a38:	movw	r3, #38068	; 0x94b4
   14a3c:	str	r2, [sp, #4]
   14a40:	movt	r3, #1
   14a44:	movw	r1, #34132	; 0x8554
   14a48:	str	r3, [sp, #8]
   14a4c:	str	r8, [sp]
   14a50:	movt	r1, #1
   14a54:	mov	r0, #3
   14a58:	movw	r2, #795	; 0x31b
   14a5c:	ldr	r3, [pc, #-2148]	; 14200 <fputs@plt+0x1410>
   14a60:	bl	12a00 <log_and_die_wrapper@plt>
   14a64:	mov	r2, #5
   14a68:	movw	r0, #33148	; 0x817c
   14a6c:	movw	r1, #37552	; 0x92b0
   14a70:	movt	r0, #1
   14a74:	movt	r1, #1
   14a78:	bl	127b4 <dcgettext@plt>
   14a7c:	mov	r3, #1
   14a80:	movw	r1, #34132	; 0x8554
   14a84:	str	r3, [sp, #4]
   14a88:	str	r7, [sp]
   14a8c:	movt	r1, #1
   14a90:	movw	r2, #762	; 0x2fa
   14a94:	ldr	r3, [pc, #-2204]	; 14200 <fputs@plt+0x1410>
   14a98:	str	r0, [sp, #8]
   14a9c:	mov	r0, #3
   14aa0:	bl	12a00 <log_and_die_wrapper@plt>
   14aa4:	mov	fp, #0
   14aa8:	mov	lr, #0
   14aac:	pop	{r1}		; (ldr r1, [sp], #4)
   14ab0:	mov	r2, sp
   14ab4:	push	{r2}		; (str r2, [sp, #-4]!)
   14ab8:	push	{r0}		; (str r0, [sp, #-4]!)
   14abc:	ldr	ip, [pc, #16]	; 14ad4 <fputs@plt+0x1ce4>
   14ac0:	push	{ip}		; (str ip, [sp, #-4]!)
   14ac4:	ldr	r0, [pc, #12]	; 14ad8 <fputs@plt+0x1ce8>
   14ac8:	ldr	r3, [pc, #12]	; 14adc <fputs@plt+0x1cec>
   14acc:	bl	128f8 <__libc_start_main@plt>
   14ad0:	bl	12d18 <abort@plt>
   14ad4:	andeq	r7, r1, r4, asr pc
   14ad8:	andeq	r2, r1, r8, lsl #30
   14adc:	strdeq	r7, [r1], -r0
   14ae0:	ldr	r3, [pc, #20]	; 14afc <fputs@plt+0x1d0c>
   14ae4:	ldr	r2, [pc, #20]	; 14b00 <fputs@plt+0x1d10>
   14ae8:	add	r3, pc, r3
   14aec:	ldr	r2, [r3, r2]
   14af0:	cmp	r2, #0
   14af4:	bxeq	lr
   14af8:	b	12904 <__gmon_start__@plt>
   14afc:	andeq	r6, r1, r0, lsl r5
   14b00:	andeq	r0, r0, ip, ror r2
   14b04:	push	{r3, lr}
   14b08:	movw	r0, #45700	; 0xb284
   14b0c:	ldr	r3, [pc, #36]	; 14b38 <fputs@plt+0x1d48>
   14b10:	movt	r0, #2
   14b14:	rsb	r3, r0, r3
   14b18:	cmp	r3, #6
   14b1c:	popls	{r3, pc}
   14b20:	movw	r3, #0
   14b24:	movt	r3, #0
   14b28:	cmp	r3, #0
   14b2c:	popeq	{r3, pc}
   14b30:	blx	r3
   14b34:	pop	{r3, pc}
   14b38:	andeq	fp, r2, r7, lsl #5
   14b3c:	push	{r3, lr}
   14b40:	movw	r0, #45700	; 0xb284
   14b44:	movw	r3, #45700	; 0xb284
   14b48:	movt	r0, #2
   14b4c:	movt	r3, #2
   14b50:	rsb	r3, r0, r3
   14b54:	asr	r3, r3, #2
   14b58:	add	r3, r3, r3, lsr #31
   14b5c:	asrs	r1, r3, #1
   14b60:	popeq	{r3, pc}
   14b64:	movw	r2, #0
   14b68:	movt	r2, #0
   14b6c:	cmp	r2, #0
   14b70:	popeq	{r3, pc}
   14b74:	blx	r2
   14b78:	pop	{r3, pc}
   14b7c:	push	{r4, lr}
   14b80:	movw	r4, #45724	; 0xb29c
   14b84:	movt	r4, #2
   14b88:	ldrb	r3, [r4]
   14b8c:	cmp	r3, #0
   14b90:	popne	{r4, pc}
   14b94:	bl	14b04 <fputs@plt+0x1d14>
   14b98:	mov	r3, #1
   14b9c:	strb	r3, [r4]
   14ba0:	pop	{r4, pc}
   14ba4:	movw	r0, #44676	; 0xae84
   14ba8:	movt	r0, #2
   14bac:	push	{r3, lr}
   14bb0:	ldr	r3, [r0]
   14bb4:	cmp	r3, #0
   14bb8:	beq	14bd0 <fputs@plt+0x1de0>
   14bbc:	movw	r3, #0
   14bc0:	movt	r3, #0
   14bc4:	cmp	r3, #0
   14bc8:	beq	14bd0 <fputs@plt+0x1de0>
   14bcc:	blx	r3
   14bd0:	pop	{r3, lr}
   14bd4:	b	14b3c <fputs@plt+0x1d4c>
   14bd8:	push	{r3, lr}
   14bdc:	mov	r1, #0
   14be0:	bl	12d6c <xmlNewTextWriterMemory@plt>
   14be4:	cmp	r0, #0
   14be8:	popne	{r3, pc}
   14bec:	bl	12dfc <fputs@plt+0xc>
   14bf0:	push	{r3, lr}
   14bf4:	bl	12a60 <xmlTextWriterStartElement@plt>
   14bf8:	cmp	r0, #0
   14bfc:	popge	{r3, pc}
   14c00:	bl	12dfc <fputs@plt+0xc>
   14c04:	push	{r3, lr}
   14c08:	bl	12c10 <xmlTextWriterWriteAttribute@plt>
   14c0c:	cmp	r0, #0
   14c10:	popge	{r3, pc}
   14c14:	bl	12dfc <fputs@plt+0xc>
   14c18:	push	{r3, lr}
   14c1c:	bl	1276c <xmlTextWriterEndDocument@plt>
   14c20:	cmp	r0, #0
   14c24:	popge	{r3, pc}
   14c28:	bl	12dfc <fputs@plt+0xc>
   14c2c:	push	{r3, lr}
   14c30:	bl	12a0c <xmlTextWriterWriteElement@plt>
   14c34:	cmp	r0, #0
   14c38:	popge	{r3, pc}
   14c3c:	bl	12dfc <fputs@plt+0xc>
   14c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c44:	sub	sp, sp, #36	; 0x24
   14c48:	mov	r5, r0
   14c4c:	mov	r0, #20
   14c50:	mov	r9, r2
   14c54:	mov	r8, r3
   14c58:	ldrb	r7, [sp, #72]	; 0x48
   14c5c:	mov	ip, #10
   14c60:	mov	sl, r1
   14c64:	str	ip, [sp, #28]
   14c68:	bl	12ab4 <libreport_xzalloc@plt>
   14c6c:	mov	r6, #0
   14c70:	mov	fp, r7
   14c74:	str	r9, [sp, #20]
   14c78:	str	r8, [sp, #16]
   14c7c:	mov	r4, r0
   14c80:	ldr	r8, [sp, #16]
   14c84:	cmp	r8, #0
   14c88:	moveq	r0, #7
   14c8c:	movne	r0, #15
   14c90:	bl	12d24 <new_post_state@plt>
   14c94:	ldr	r9, [sp, #20]
   14c98:	cmp	fp, #0
   14c9c:	movw	r2, #32700	; 0x7fbc
   14ca0:	ldr	r3, [sp, #76]	; 0x4c
   14ca4:	mov	r1, r5
   14ca8:	movt	r2, #1
   14cac:	mov	r7, r0
   14cb0:	str	sl, [r0, #4]
   14cb4:	str	r9, [r0, #8]
   14cb8:	beq	14ddc <fputs@plt+0x1fec>
   14cbc:	ldr	ip, [sp, #80]	; 0x50
   14cc0:	movw	r2, #32700	; 0x7fbc
   14cc4:	mvn	r8, #3
   14cc8:	mvn	r9, #0
   14ccc:	movt	r2, #1
   14cd0:	strd	r8, [sp, #8]
   14cd4:	str	ip, [sp]
   14cd8:	bl	128c8 <post@plt>
   14cdc:	movw	r1, #32728	; 0x7fd8
   14ce0:	mov	r0, r7
   14ce4:	movt	r1, #1
   14ce8:	bl	12bb0 <find_header_in_post_state@plt>
   14cec:	ldr	r3, [r7, #32]
   14cf0:	cmp	r3, #200	; 0xc8
   14cf4:	mov	r2, r0
   14cf8:	blt	14d54 <fputs@plt+0x1f64>
   14cfc:	cmp	r3, #201	; 0xc9
   14d00:	ble	14df8 <fputs@plt+0x2008>
   14d04:	movw	r9, #305	; 0x131
   14d08:	cmp	r3, r9
   14d0c:	mov	r0, r6
   14d10:	bne	14d54 <fputs@plt+0x1f64>
   14d14:	ldr	ip, [sp, #28]
   14d18:	subs	ip, ip, #1
   14d1c:	str	ip, [sp, #28]
   14d20:	beq	14d54 <fputs@plt+0x1f64>
   14d24:	cmp	r2, #0
   14d28:	beq	14d54 <fputs@plt+0x1f64>
   14d2c:	str	r2, [sp, #24]
   14d30:	bl	129b8 <free@plt>
   14d34:	ldr	r2, [sp, #24]
   14d38:	mov	r0, r2
   14d3c:	bl	12b2c <libreport_xstrdup@plt>
   14d40:	mov	r5, r0
   14d44:	mov	r0, r7
   14d48:	bl	12bc8 <free_post_state@plt>
   14d4c:	mov	r6, r5
   14d50:	b	14c80 <fputs@plt+0x1e90>
   14d54:	mvn	r3, #0
   14d58:	str	r3, [r4, #4]
   14d5c:	ldr	r2, [r7, #48]	; 0x30
   14d60:	mov	fp, r7
   14d64:	cmp	r2, #0
   14d68:	beq	14d78 <fputs@plt+0x1f88>
   14d6c:	ldrb	r3, [r2]
   14d70:	cmp	r3, #0
   14d74:	bne	14e20 <fputs@plt+0x2030>
   14d78:	ldr	r3, [fp, #52]	; 0x34
   14d7c:	mov	r1, r5
   14d80:	cmp	r3, #0
   14d84:	beq	14d94 <fputs@plt+0x1fa4>
   14d88:	ldrb	r2, [r3]
   14d8c:	cmp	r2, #0
   14d90:	bne	14e08 <fputs@plt+0x2018>
   14d94:	movw	r0, #32840	; 0x8048
   14d98:	ldr	r2, [fp, #32]
   14d9c:	movt	r0, #1
   14da0:	bl	12bbc <libreport_xasprintf@plt>
   14da4:	str	r0, [r4, #8]
   14da8:	ldr	r2, [fp, #32]
   14dac:	mov	r3, #0
   14db0:	mov	r0, fp
   14db4:	str	r2, [r4]
   14db8:	ldr	r2, [fp, #52]	; 0x34
   14dbc:	str	r2, [r4, #16]
   14dc0:	str	r3, [fp, #52]	; 0x34
   14dc4:	bl	12bc8 <free_post_state@plt>
   14dc8:	mov	r0, r6
   14dcc:	bl	129b8 <free@plt>
   14dd0:	mov	r0, r4
   14dd4:	add	sp, sp, #36	; 0x24
   14dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ddc:	ldr	r9, [sp, #80]	; 0x50
   14de0:	mvn	r8, #1
   14de4:	str	r9, [sp]
   14de8:	mvn	r9, #0
   14dec:	strd	r8, [sp, #8]
   14df0:	bl	128c8 <post@plt>
   14df4:	b	14cdc <fputs@plt+0x1eec>
   14df8:	bl	12b2c <libreport_xstrdup@plt>
   14dfc:	mov	fp, r7
   14e00:	str	r0, [r4, #12]
   14e04:	b	14da8 <fputs@plt+0x1fb8>
   14e08:	movw	r0, #32776	; 0x8008
   14e0c:	ldr	r2, [fp, #32]
   14e10:	movt	r0, #1
   14e14:	bl	12bbc <libreport_xasprintf@plt>
   14e18:	str	r0, [r4, #8]
   14e1c:	b	14da8 <fputs@plt+0x1fb8>
   14e20:	mov	r1, r5
   14e24:	movw	r0, #32740	; 0x7fe4
   14e28:	movt	r0, #1
   14e2c:	bl	12bbc <libreport_xasprintf@plt>
   14e30:	str	r0, [r4, #8]
   14e34:	b	14da8 <fputs@plt+0x1fb8>
   14e38:	push	{r4, lr}
   14e3c:	mov	r0, #8
   14e40:	bl	12aa8 <libreport_xmalloc@plt>
   14e44:	mov	r4, r0
   14e48:	bl	12dcc <xmlBufferCreate@plt>
   14e4c:	subs	r3, r0, #0
   14e50:	beq	14ea8 <fputs@plt+0x20b8>
   14e54:	str	r3, [r4, #4]
   14e58:	bl	14bd8 <fputs@plt+0x1de8>
   14e5c:	mov	r1, #0
   14e60:	mov	r2, r1
   14e64:	mov	r3, r1
   14e68:	str	r0, [r4]
   14e6c:	bl	12be0 <xmlTextWriterStartDocument@plt>
   14e70:	cmp	r0, #0
   14e74:	blt	14ea8 <fputs@plt+0x20b8>
   14e78:	ldr	r0, [r4]
   14e7c:	movw	r1, #32884	; 0x8074
   14e80:	movt	r1, #1
   14e84:	bl	14bf0 <fputs@plt+0x1e00>
   14e88:	ldr	r0, [r4]
   14e8c:	movw	r1, #32892	; 0x807c
   14e90:	movw	r2, #32900	; 0x8084
   14e94:	movt	r1, #1
   14e98:	movt	r2, #1
   14e9c:	bl	14c04 <fputs@plt+0x1e14>
   14ea0:	mov	r0, r4
   14ea4:	pop	{r4, pc}
   14ea8:	bl	12dfc <fputs@plt+0xc>
   14eac:	push	{r4, r5, r6, lr}
   14eb0:	mov	r4, r0
   14eb4:	mov	r6, r1
   14eb8:	ldr	r0, [r0]
   14ebc:	movw	r1, #32936	; 0x80a8
   14ec0:	movt	r1, #1
   14ec4:	mov	r5, r2
   14ec8:	bl	14bf0 <fputs@plt+0x1e00>
   14ecc:	mov	r2, r6
   14ed0:	ldr	r0, [r4]
   14ed4:	movw	r1, #39944	; 0x9c08
   14ed8:	movt	r1, #1
   14edc:	bl	14c04 <fputs@plt+0x1e14>
   14ee0:	ldr	r0, [r4]
   14ee4:	movw	r1, #40704	; 0x9f00
   14ee8:	movw	r2, #32944	; 0x80b0
   14eec:	movt	r1, #1
   14ef0:	movt	r2, #1
   14ef4:	bl	14c04 <fputs@plt+0x1e14>
   14ef8:	mov	r2, r5
   14efc:	ldr	r0, [r4]
   14f00:	movw	r1, #32952	; 0x80b8
   14f04:	movt	r1, #1
   14f08:	bl	14c04 <fputs@plt+0x1e14>
   14f0c:	ldr	r0, [r4]
   14f10:	bl	12c04 <xmlTextWriterEndElement@plt>
   14f14:	cmp	r0, #0
   14f18:	popge	{r4, r5, r6, pc}
   14f1c:	bl	12dfc <fputs@plt+0xc>
   14f20:	push	{r3, r4, r5, r6, r7, lr}
   14f24:	movw	r1, #32936	; 0x80a8
   14f28:	mov	r4, r0
   14f2c:	mov	r5, r2
   14f30:	ldr	r0, [r0]
   14f34:	movt	r1, #1
   14f38:	mov	r6, r3
   14f3c:	ldr	r7, [sp, #24]
   14f40:	bl	14bf0 <fputs@plt+0x1e00>
   14f44:	ldr	r0, [r4]
   14f48:	mov	r2, r5
   14f4c:	movw	r1, #39944	; 0x9c08
   14f50:	movt	r1, #1
   14f54:	bl	14c04 <fputs@plt+0x1e14>
   14f58:	cmp	r6, #0
   14f5c:	beq	14f74 <fputs@plt+0x2184>
   14f60:	movw	r1, #32960	; 0x80c0
   14f64:	mov	r2, r6
   14f68:	ldr	r0, [r4]
   14f6c:	movt	r1, #1
   14f70:	bl	14c04 <fputs@plt+0x1e14>
   14f74:	cmp	r7, #0
   14f78:	movw	r1, #40704	; 0x9f00
   14f7c:	ldr	r0, [r4]
   14f80:	movtne	r1, #1
   14f84:	movwne	r2, #32972	; 0x80cc
   14f88:	movweq	r2, #32944	; 0x80b0
   14f8c:	movtne	r2, #1
   14f90:	movteq	r1, #1
   14f94:	movteq	r2, #1
   14f98:	bl	14c04 <fputs@plt+0x1e14>
   14f9c:	mov	r1, r5
   14fa0:	movw	r0, #32980	; 0x80d4
   14fa4:	movt	r0, #1
   14fa8:	bl	12c34 <libreport_concat_path_file@plt>
   14fac:	movw	r1, #32988	; 0x80dc
   14fb0:	movt	r1, #1
   14fb4:	mov	r5, r0
   14fb8:	mov	r2, r0
   14fbc:	ldr	r0, [r4]
   14fc0:	bl	14c04 <fputs@plt+0x1e14>
   14fc4:	mov	r0, r5
   14fc8:	pop	{r3, r4, r5, r6, r7, lr}
   14fcc:	b	129b8 <free@plt>
   14fd0:	push	{r4, lr}
   14fd4:	mov	r4, r0
   14fd8:	ldr	r0, [r0]
   14fdc:	cmp	r0, #0
   14fe0:	beq	14ff8 <fputs@plt+0x2208>
   14fe4:	bl	14c18 <fputs@plt+0x1e28>
   14fe8:	ldr	r0, [r4]
   14fec:	bl	12778 <xmlFreeTextWriter@plt>
   14ff0:	mov	r3, #0
   14ff4:	str	r3, [r4]
   14ff8:	ldr	r3, [r4, #4]
   14ffc:	ldr	r0, [r3]
   15000:	pop	{r4, pc}
   15004:	push	{r4, lr}
   15008:	subs	r4, r0, #0
   1500c:	popeq	{r4, pc}
   15010:	ldr	r0, [r4]
   15014:	cmp	r0, #0
   15018:	beq	15030 <fputs@plt+0x2240>
   1501c:	bl	14c18 <fputs@plt+0x1e28>
   15020:	ldr	r0, [r4]
   15024:	bl	12778 <xmlFreeTextWriter@plt>
   15028:	mov	r3, #0
   1502c:	str	r3, [r4]
   15030:	ldr	r0, [r4, #4]
   15034:	bl	1288c <xmlBufferFree@plt>
   15038:	mov	r0, r4
   1503c:	pop	{r4, lr}
   15040:	b	129b8 <free@plt>
   15044:	push	{r4, lr}
   15048:	subs	r4, r0, #0
   1504c:	popeq	{r4, pc}
   15050:	ldr	r0, [r4, #12]
   15054:	bl	129b8 <free@plt>
   15058:	ldr	r0, [r4, #8]
   1505c:	bl	129b8 <free@plt>
   15060:	ldr	r0, [r4, #16]
   15064:	bl	129b8 <free@plt>
   15068:	mov	r0, r4
   1506c:	pop	{r4, lr}
   15070:	b	129b8 <free@plt>
   15074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15078:	sub	sp, sp, #44	; 0x2c
   1507c:	mov	fp, r3
   15080:	str	r1, [sp, #32]
   15084:	movw	r1, #32996	; 0x80e4
   15088:	movt	r1, #1
   1508c:	str	r2, [sp, #36]	; 0x24
   15090:	ldr	sl, [sp, #80]	; 0x50
   15094:	ldr	r9, [sp, #84]	; 0x54
   15098:	ldr	r8, [sp, #96]	; 0x60
   1509c:	bl	12c34 <libreport_concat_path_file@plt>
   150a0:	mov	r6, r0
   150a4:	mov	r0, #20
   150a8:	bl	12ab4 <libreport_xzalloc@plt>
   150ac:	mov	r5, r0
   150b0:	bl	12dcc <xmlBufferCreate@plt>
   150b4:	subs	r7, r0, #0
   150b8:	beq	15468 <fputs@plt+0x2678>
   150bc:	bl	14bd8 <fputs@plt+0x1de8>
   150c0:	movw	r2, #33004	; 0x80ec
   150c4:	movw	r3, #33012	; 0x80f4
   150c8:	movt	r2, #1
   150cc:	movt	r3, #1
   150d0:	mov	r1, #0
   150d4:	mov	r4, r0
   150d8:	bl	12be0 <xmlTextWriterStartDocument@plt>
   150dc:	cmp	r0, #0
   150e0:	blt	15468 <fputs@plt+0x2678>
   150e4:	mov	r0, r4
   150e8:	movw	r1, #33016	; 0x80f8
   150ec:	movt	r1, #1
   150f0:	bl	14bf0 <fputs@plt+0x1e00>
   150f4:	mov	r0, r4
   150f8:	movw	r1, #32892	; 0x807c
   150fc:	movw	r2, #32900	; 0x8084
   15100:	movt	r1, #1
   15104:	movt	r2, #1
   15108:	bl	14c04 <fputs@plt+0x1e14>
   1510c:	mov	r0, r4
   15110:	ldr	r2, [sp, #88]	; 0x58
   15114:	movw	r1, #33024	; 0x8100
   15118:	movt	r1, #1
   1511c:	bl	14c2c <fputs@plt+0x1e3c>
   15120:	mov	r0, r4
   15124:	movw	r1, #33032	; 0x8108
   15128:	ldr	r2, [sp, #92]	; 0x5c
   1512c:	movt	r1, #1
   15130:	bl	14c2c <fputs@plt+0x1e3c>
   15134:	cmp	sl, #0
   15138:	beq	15150 <fputs@plt+0x2360>
   1513c:	movw	r1, #33044	; 0x8114
   15140:	mov	r2, sl
   15144:	mov	r0, r4
   15148:	movt	r1, #1
   1514c:	bl	14c2c <fputs@plt+0x1e3c>
   15150:	cmp	r9, #0
   15154:	beq	1516c <fputs@plt+0x237c>
   15158:	movw	r1, #33052	; 0x811c
   1515c:	mov	r2, r9
   15160:	mov	r0, r4
   15164:	movt	r1, #1
   15168:	bl	14c2c <fputs@plt+0x1e3c>
   1516c:	cmp	r8, #0
   15170:	beq	15188 <fputs@plt+0x2398>
   15174:	movw	r1, #33060	; 0x8124
   15178:	mov	r2, r8
   1517c:	mov	r0, r4
   15180:	movt	r1, #1
   15184:	bl	14c2c <fputs@plt+0x1e3c>
   15188:	mov	r0, r4
   1518c:	movw	r9, #302	; 0x12e
   15190:	bl	14c18 <fputs@plt+0x1e28>
   15194:	ldr	r0, [r7]
   15198:	bl	12b2c <libreport_xstrdup@plt>
   1519c:	mov	r8, r0
   151a0:	mov	r0, r4
   151a4:	bl	12778 <xmlFreeTextWriter@plt>
   151a8:	mov	r0, r7
   151ac:	bl	1288c <xmlBufferFree@plt>
   151b0:	mov	r7, #10
   151b4:	mov	r3, fp
   151b8:	str	r7, [sp, #28]
   151bc:	mov	r7, #0
   151c0:	str	r5, [sp, #16]
   151c4:	mov	r4, r6
   151c8:	mov	fp, r7
   151cc:	mov	r5, r3
   151d0:	str	r6, [sp, #20]
   151d4:	cmp	r5, #0
   151d8:	moveq	r0, #7
   151dc:	movne	r0, #15
   151e0:	bl	12d24 <new_post_state@plt>
   151e4:	ldr	r6, [sp, #32]
   151e8:	ldr	r7, [sp, #36]	; 0x24
   151ec:	mov	r1, r4
   151f0:	ldr	r3, [pc, #628]	; 1546c <fputs@plt+0x267c>
   151f4:	movw	r2, #33072	; 0x8130
   151f8:	movt	r2, #1
   151fc:	str	r6, [r0, #4]
   15200:	mov	sl, r0
   15204:	str	r7, [r0, #8]
   15208:	mvn	r6, #0
   1520c:	str	r8, [sp]
   15210:	mvn	r7, #0
   15214:	strd	r6, [sp, #8]
   15218:	bl	128c8 <post@plt>
   1521c:	mov	r0, sl
   15220:	movw	r1, #32728	; 0x7fd8
   15224:	movt	r1, #1
   15228:	bl	12bb0 <find_header_in_post_state@plt>
   1522c:	ldr	r3, [sl, #32]
   15230:	cmp	r3, r9
   15234:	mov	r2, r0
   15238:	bgt	15268 <fputs@plt+0x2478>
   1523c:	cmp	r3, #300	; 0x12c
   15240:	bgt	1537c <fputs@plt+0x258c>
   15244:	sub	r3, r3, #200	; 0xc8
   15248:	ldr	r6, [sp, #20]
   1524c:	cmp	r3, #1
   15250:	ldr	r5, [sp, #16]
   15254:	mov	r7, fp
   15258:	bhi	1530c <fputs@plt+0x251c>
   1525c:	bl	12b2c <libreport_xstrdup@plt>
   15260:	str	r0, [r5, #12]
   15264:	b	152a4 <fputs@plt+0x24b4>
   15268:	movw	r7, #305	; 0x131
   1526c:	cmp	r3, r7
   15270:	beq	1537c <fputs@plt+0x258c>
   15274:	cmp	r3, #404	; 0x194
   15278:	ldr	r6, [sp, #20]
   1527c:	ldr	r5, [sp, #16]
   15280:	mov	r7, fp
   15284:	bne	1530c <fputs@plt+0x251c>
   15288:	mvn	r3, #0
   1528c:	mov	r1, r4
   15290:	movw	r0, #33088	; 0x8140
   15294:	str	r3, [r5, #4]
   15298:	movt	r0, #1
   1529c:	bl	12bbc <libreport_xasprintf@plt>
   152a0:	str	r0, [r5, #8]
   152a4:	ldr	r2, [sl, #32]
   152a8:	mov	r3, #0
   152ac:	mov	r0, sl
   152b0:	str	r2, [r5]
   152b4:	ldr	r2, [sl, #52]	; 0x34
   152b8:	str	r2, [r5, #16]
   152bc:	str	r3, [sl, #52]	; 0x34
   152c0:	bl	12bc8 <free_post_state@plt>
   152c4:	mov	r0, r8
   152c8:	bl	129b8 <free@plt>
   152cc:	mov	r0, r7
   152d0:	bl	129b8 <free@plt>
   152d4:	ldr	r3, [r5, #4]
   152d8:	cmp	r3, #0
   152dc:	bne	152ec <fputs@plt+0x24fc>
   152e0:	ldr	r3, [r5, #12]
   152e4:	cmp	r3, #0
   152e8:	beq	1541c <fputs@plt+0x262c>
   152ec:	mov	r0, r6
   152f0:	bl	129b8 <free@plt>
   152f4:	mov	r0, r5
   152f8:	add	sp, sp, #44	; 0x2c
   152fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15300:	ldr	r6, [sp, #20]
   15304:	mov	r7, fp
   15308:	ldr	r5, [sp, #16]
   1530c:	mvn	r3, #0
   15310:	str	r3, [r5, #4]
   15314:	ldr	r9, [sl, #48]	; 0x30
   15318:	cmp	r9, #0
   1531c:	beq	1532c <fputs@plt+0x253c>
   15320:	ldrb	r3, [r9]
   15324:	cmp	r3, #0
   15328:	bne	153f0 <fputs@plt+0x2600>
   1532c:	movw	r1, #33196	; 0x81ac
   15330:	mov	r0, sl
   15334:	movt	r1, #1
   15338:	bl	12bb0 <find_header_in_post_state@plt>
   1533c:	subs	r9, r0, #0
   15340:	beq	15458 <fputs@plt+0x2668>
   15344:	ldrb	r3, [r9]
   15348:	cmp	r3, #0
   1534c:	bne	153c0 <fputs@plt+0x25d0>
   15350:	mov	r2, #5
   15354:	movw	r0, #33148	; 0x817c
   15358:	movw	r1, #33280	; 0x8200
   1535c:	movt	r0, #1
   15360:	movt	r1, #1
   15364:	bl	127b4 <dcgettext@plt>
   15368:	mov	r1, r4
   1536c:	ldr	r2, [sl, #32]
   15370:	bl	12bbc <libreport_xasprintf@plt>
   15374:	str	r0, [r5, #8]
   15378:	b	152a4 <fputs@plt+0x24b4>
   1537c:	ldr	r6, [sp, #28]
   15380:	subs	r6, r6, #1
   15384:	str	r6, [sp, #28]
   15388:	beq	15300 <fputs@plt+0x2510>
   1538c:	cmp	r2, #0
   15390:	beq	15300 <fputs@plt+0x2510>
   15394:	mov	r0, fp
   15398:	str	r2, [sp, #24]
   1539c:	bl	129b8 <free@plt>
   153a0:	ldr	r2, [sp, #24]
   153a4:	mov	r0, r2
   153a8:	bl	12b2c <libreport_xstrdup@plt>
   153ac:	mov	r4, r0
   153b0:	mov	r0, sl
   153b4:	bl	12bc8 <free_post_state@plt>
   153b8:	mov	fp, r4
   153bc:	b	151d4 <fputs@plt+0x23e4>
   153c0:	mov	r2, #5
   153c4:	movw	r0, #33148	; 0x817c
   153c8:	movw	r1, #33212	; 0x81bc
   153cc:	movt	r0, #1
   153d0:	movt	r1, #1
   153d4:	bl	127b4 <dcgettext@plt>
   153d8:	mov	r1, r4
   153dc:	mov	r3, r9
   153e0:	ldr	r2, [sl, #32]
   153e4:	bl	12bbc <libreport_xasprintf@plt>
   153e8:	str	r0, [r5, #8]
   153ec:	b	152a4 <fputs@plt+0x24b4>
   153f0:	mov	r2, #5
   153f4:	movw	r0, #33148	; 0x817c
   153f8:	movw	r1, #33160	; 0x8188
   153fc:	movt	r0, #1
   15400:	movt	r1, #1
   15404:	bl	127b4 <dcgettext@plt>
   15408:	mov	r1, r4
   1540c:	mov	r2, r9
   15410:	bl	12bbc <libreport_xasprintf@plt>
   15414:	str	r0, [r5, #8]
   15418:	b	152a4 <fputs@plt+0x24b4>
   1541c:	mvn	r3, #0
   15420:	ldr	r0, [r5, #8]
   15424:	str	r3, [r5, #4]
   15428:	bl	129b8 <free@plt>
   1542c:	mov	r2, #5
   15430:	movw	r0, #33148	; 0x817c
   15434:	movw	r1, #33328	; 0x8230
   15438:	movt	r0, #1
   1543c:	movt	r1, #1
   15440:	bl	127b4 <dcgettext@plt>
   15444:	mov	r1, r6
   15448:	ldr	r2, [r5]
   1544c:	bl	12bbc <libreport_xasprintf@plt>
   15450:	str	r0, [r5, #8]
   15454:	b	152ec <fputs@plt+0x24fc>
   15458:	ldr	r9, [sl, #52]	; 0x34
   1545c:	cmp	r9, #0
   15460:	bne	15344 <fputs@plt+0x2554>
   15464:	b	15350 <fputs@plt+0x2560>
   15468:	bl	12dfc <fputs@plt+0xc>
   1546c:	andeq	r7, r1, r4, ror pc
   15470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15474:	sub	sp, sp, #44	; 0x2c
   15478:	mov	fp, r3
   1547c:	str	r1, [sp, #32]
   15480:	movw	r1, #33392	; 0x8270
   15484:	movt	r1, #1
   15488:	str	r2, [sp, #36]	; 0x24
   1548c:	bl	12c34 <libreport_concat_path_file@plt>
   15490:	mov	r8, r0
   15494:	mov	r0, #20
   15498:	bl	12ab4 <libreport_xzalloc@plt>
   1549c:	mov	r4, r0
   154a0:	bl	12dcc <xmlBufferCreate@plt>
   154a4:	subs	r9, r0, #0
   154a8:	beq	157e4 <fputs@plt+0x29f4>
   154ac:	bl	14bd8 <fputs@plt+0x1de8>
   154b0:	movw	r2, #33004	; 0x80ec
   154b4:	movw	r3, #33012	; 0x80f4
   154b8:	movt	r2, #1
   154bc:	movt	r3, #1
   154c0:	mov	r1, #0
   154c4:	mov	r5, r0
   154c8:	bl	12be0 <xmlTextWriterStartDocument@plt>
   154cc:	cmp	r0, #0
   154d0:	blt	157e4 <fputs@plt+0x29f4>
   154d4:	mov	r0, r5
   154d8:	movw	r1, #33404	; 0x827c
   154dc:	movt	r1, #1
   154e0:	mov	r6, r8
   154e4:	bl	14bf0 <fputs@plt+0x1e00>
   154e8:	mov	r0, r5
   154ec:	movw	r1, #32892	; 0x807c
   154f0:	movw	r2, #32900	; 0x8084
   154f4:	movt	r1, #1
   154f8:	movt	r2, #1
   154fc:	bl	14c04 <fputs@plt+0x1e14>
   15500:	ldr	r2, [sp, #80]	; 0x50
   15504:	mov	r0, r5
   15508:	movw	r1, #32944	; 0x80b0
   1550c:	movt	r1, #1
   15510:	bl	14c2c <fputs@plt+0x1e3c>
   15514:	mov	r0, r5
   15518:	bl	14c18 <fputs@plt+0x1e28>
   1551c:	ldr	r0, [r9]
   15520:	bl	12b2c <libreport_xstrdup@plt>
   15524:	mov	r7, r0
   15528:	mov	r0, r5
   1552c:	bl	12778 <xmlFreeTextWriter@plt>
   15530:	mov	r0, r9
   15534:	bl	1288c <xmlBufferFree@plt>
   15538:	mov	r5, #10
   1553c:	str	r5, [sp, #28]
   15540:	mov	r5, #0
   15544:	mov	r3, fp
   15548:	movw	r9, #302	; 0x12e
   1554c:	mov	fp, r5
   15550:	str	r4, [sp, #20]
   15554:	str	r3, [sp, #16]
   15558:	ldr	r4, [sp, #16]
   1555c:	cmp	r4, #0
   15560:	moveq	r0, #7
   15564:	movne	r0, #15
   15568:	bl	12d24 <new_post_state@plt>
   1556c:	ldr	r5, [sp, #32]
   15570:	ldr	r4, [sp, #36]	; 0x24
   15574:	mov	r3, #0
   15578:	mov	r1, r6
   1557c:	movw	r2, #33072	; 0x8130
   15580:	movt	r2, #1
   15584:	str	r5, [r0, #4]
   15588:	mov	sl, r0
   1558c:	str	r4, [r0, #8]
   15590:	mvn	r5, #0
   15594:	str	r7, [sp]
   15598:	mvn	r4, #0
   1559c:	strd	r4, [sp, #8]
   155a0:	bl	128c8 <post@plt>
   155a4:	mov	r0, sl
   155a8:	movw	r1, #32728	; 0x7fd8
   155ac:	movt	r1, #1
   155b0:	bl	12bb0 <find_header_in_post_state@plt>
   155b4:	ldr	r3, [sl, #32]
   155b8:	cmp	r3, r9
   155bc:	mov	r2, r0
   155c0:	bgt	155ec <fputs@plt+0x27fc>
   155c4:	cmp	r3, #300	; 0x12c
   155c8:	bgt	156f8 <fputs@plt+0x2908>
   155cc:	sub	r3, r3, #200	; 0xc8
   155d0:	ldr	r4, [sp, #20]
   155d4:	cmp	r3, #1
   155d8:	mov	r5, fp
   155dc:	bhi	15688 <fputs@plt+0x2898>
   155e0:	bl	12b2c <libreport_xstrdup@plt>
   155e4:	str	r0, [r4, #12]
   155e8:	b	15624 <fputs@plt+0x2834>
   155ec:	movw	r5, #305	; 0x131
   155f0:	cmp	r3, r5
   155f4:	beq	156f8 <fputs@plt+0x2908>
   155f8:	cmp	r3, #404	; 0x194
   155fc:	ldr	r4, [sp, #20]
   15600:	mov	r5, fp
   15604:	bne	15688 <fputs@plt+0x2898>
   15608:	mvn	r3, #0
   1560c:	mov	r1, r6
   15610:	movw	r0, #33088	; 0x8140
   15614:	str	r3, [r4, #4]
   15618:	movt	r0, #1
   1561c:	bl	12bbc <libreport_xasprintf@plt>
   15620:	str	r0, [r4, #8]
   15624:	ldr	r2, [sl, #32]
   15628:	mov	r3, #0
   1562c:	mov	r0, sl
   15630:	str	r2, [r4]
   15634:	ldr	r2, [sl, #52]	; 0x34
   15638:	str	r2, [r4, #16]
   1563c:	str	r3, [sl, #52]	; 0x34
   15640:	bl	12bc8 <free_post_state@plt>
   15644:	mov	r0, r7
   15648:	bl	129b8 <free@plt>
   1564c:	mov	r0, r5
   15650:	bl	129b8 <free@plt>
   15654:	ldr	r3, [r4, #4]
   15658:	cmp	r3, #0
   1565c:	bne	1566c <fputs@plt+0x287c>
   15660:	ldr	r3, [r4, #12]
   15664:	cmp	r3, #0
   15668:	beq	15798 <fputs@plt+0x29a8>
   1566c:	mov	r0, r8
   15670:	bl	129b8 <free@plt>
   15674:	mov	r0, r4
   15678:	add	sp, sp, #44	; 0x2c
   1567c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15680:	ldr	r4, [sp, #20]
   15684:	mov	r5, fp
   15688:	mvn	r3, #0
   1568c:	str	r3, [r4, #4]
   15690:	ldr	r9, [sl, #48]	; 0x30
   15694:	cmp	r9, #0
   15698:	beq	156a8 <fputs@plt+0x28b8>
   1569c:	ldrb	r3, [r9]
   156a0:	cmp	r3, #0
   156a4:	bne	1576c <fputs@plt+0x297c>
   156a8:	movw	r1, #33196	; 0x81ac
   156ac:	mov	r0, sl
   156b0:	movt	r1, #1
   156b4:	bl	12bb0 <find_header_in_post_state@plt>
   156b8:	subs	r9, r0, #0
   156bc:	beq	157d4 <fputs@plt+0x29e4>
   156c0:	ldrb	r3, [r9]
   156c4:	cmp	r3, #0
   156c8:	bne	1573c <fputs@plt+0x294c>
   156cc:	mov	r2, #5
   156d0:	movw	r0, #33148	; 0x817c
   156d4:	movw	r1, #33520	; 0x82f0
   156d8:	movt	r0, #1
   156dc:	movt	r1, #1
   156e0:	bl	127b4 <dcgettext@plt>
   156e4:	mov	r1, r6
   156e8:	ldr	r2, [sl, #32]
   156ec:	bl	12bbc <libreport_xasprintf@plt>
   156f0:	str	r0, [r4, #8]
   156f4:	b	15624 <fputs@plt+0x2834>
   156f8:	ldr	r4, [sp, #28]
   156fc:	subs	r4, r4, #1
   15700:	str	r4, [sp, #28]
   15704:	beq	15680 <fputs@plt+0x2890>
   15708:	cmp	r2, #0
   1570c:	beq	15680 <fputs@plt+0x2890>
   15710:	mov	r0, fp
   15714:	str	r2, [sp, #24]
   15718:	bl	129b8 <free@plt>
   1571c:	ldr	r2, [sp, #24]
   15720:	mov	r0, r2
   15724:	bl	12b2c <libreport_xstrdup@plt>
   15728:	mov	r6, r0
   1572c:	mov	r0, sl
   15730:	bl	12bc8 <free_post_state@plt>
   15734:	mov	fp, r6
   15738:	b	15558 <fputs@plt+0x2768>
   1573c:	mov	r2, #5
   15740:	movw	r0, #33148	; 0x817c
   15744:	movw	r1, #33452	; 0x82ac
   15748:	movt	r0, #1
   1574c:	movt	r1, #1
   15750:	bl	127b4 <dcgettext@plt>
   15754:	mov	r1, r6
   15758:	mov	r3, r9
   1575c:	ldr	r2, [sl, #32]
   15760:	bl	12bbc <libreport_xasprintf@plt>
   15764:	str	r0, [r4, #8]
   15768:	b	15624 <fputs@plt+0x2834>
   1576c:	mov	r2, #5
   15770:	movw	r0, #33148	; 0x817c
   15774:	movw	r1, #33412	; 0x8284
   15778:	movt	r0, #1
   1577c:	movt	r1, #1
   15780:	bl	127b4 <dcgettext@plt>
   15784:	mov	r1, r6
   15788:	mov	r2, r9
   1578c:	bl	12bbc <libreport_xasprintf@plt>
   15790:	str	r0, [r4, #8]
   15794:	b	15624 <fputs@plt+0x2834>
   15798:	mvn	r3, #0
   1579c:	ldr	r0, [r4, #8]
   157a0:	str	r3, [r4, #4]
   157a4:	bl	129b8 <free@plt>
   157a8:	mov	r2, #5
   157ac:	movw	r0, #33148	; 0x817c
   157b0:	movw	r1, #33572	; 0x8324
   157b4:	movt	r0, #1
   157b8:	movt	r1, #1
   157bc:	bl	127b4 <dcgettext@plt>
   157c0:	mov	r1, r8
   157c4:	ldr	r2, [r4]
   157c8:	bl	12bbc <libreport_xasprintf@plt>
   157cc:	str	r0, [r4, #8]
   157d0:	b	1566c <fputs@plt+0x287c>
   157d4:	ldr	r9, [sl, #52]	; 0x34
   157d8:	cmp	r9, #0
   157dc:	bne	156c0 <fputs@plt+0x28d0>
   157e0:	b	156cc <fputs@plt+0x28dc>
   157e4:	bl	12dfc <fputs@plt+0xc>
   157e8:	push	{r4, r5, r6, r7, r8, lr}
   157ec:	sub	sp, sp, #16
   157f0:	mov	r6, r1
   157f4:	movw	r1, #33640	; 0x8368
   157f8:	movt	r1, #1
   157fc:	ldr	r4, [sp, #40]	; 0x28
   15800:	mov	r8, r2
   15804:	mov	r7, r3
   15808:	bl	12c34 <libreport_concat_path_file@plt>
   1580c:	ldr	lr, [pc, #52]	; 15848 <fputs@plt+0x2a58>
   15810:	mov	ip, #1
   15814:	mov	r1, r6
   15818:	str	r4, [sp, #8]
   1581c:	mov	r2, r8
   15820:	mov	r3, r7
   15824:	stm	sp, {ip, lr}
   15828:	mov	r5, r0
   1582c:	bl	14c40 <fputs@plt+0x1e50>
   15830:	mov	r4, r0
   15834:	mov	r0, r5
   15838:	bl	129b8 <free@plt>
   1583c:	mov	r0, r4
   15840:	add	sp, sp, #16
   15844:	pop	{r4, r5, r6, r7, r8, pc}
   15848:	andeq	r7, r1, r4, ror pc
   1584c:	push	{r4, r5, r6, r7, r8, lr}
   15850:	sub	sp, sp, #16
   15854:	mov	r6, r1
   15858:	movw	r1, #33652	; 0x8374
   1585c:	movt	r1, #1
   15860:	ldr	r4, [sp, #40]	; 0x28
   15864:	mov	r8, r2
   15868:	mov	r7, r3
   1586c:	bl	12c34 <libreport_concat_path_file@plt>
   15870:	mov	ip, #0
   15874:	str	r4, [sp, #8]
   15878:	mov	r1, r6
   1587c:	mov	r2, r8
   15880:	mov	r3, r7
   15884:	str	ip, [sp]
   15888:	str	ip, [sp, #4]
   1588c:	mov	r5, r0
   15890:	bl	14c40 <fputs@plt+0x1e50>
   15894:	mov	r4, r0
   15898:	mov	r0, r5
   1589c:	bl	129b8 <free@plt>
   158a0:	mov	r0, r4
   158a4:	add	sp, sp, #16
   158a8:	pop	{r4, r5, r6, r7, r8, pc}
   158ac:	push	{lr}		; (str lr, [sp, #-4]!)
   158b0:	sub	sp, sp, #20
   158b4:	mov	r2, #0
   158b8:	mov	r0, #3
   158bc:	str	r2, [sp]
   158c0:	movw	r3, #33748	; 0x83d4
   158c4:	mov	r2, #142	; 0x8e
   158c8:	movt	r3, #1
   158cc:	movw	r1, #33720	; 0x83b8
   158d0:	str	r3, [sp, #8]
   158d4:	movt	r1, #1
   158d8:	mov	r3, #1
   158dc:	str	r3, [sp, #4]
   158e0:	movw	r3, #33684	; 0x8394
   158e4:	movt	r3, #1
   158e8:	bl	12718 <log_wrapper@plt>
   158ec:	add	sp, sp, #20
   158f0:	pop	{pc}		; (ldr pc, [sp], #4)
   158f4:	push	{lr}		; (str lr, [sp, #-4]!)
   158f8:	sub	sp, sp, #20
   158fc:	mov	r2, #0
   15900:	mov	r0, #7
   15904:	str	r2, [sp]
   15908:	movw	r3, #33772	; 0x83ec
   1590c:	str	r2, [sp, #4]
   15910:	movt	r3, #1
   15914:	mov	r2, #132	; 0x84
   15918:	str	r3, [sp, #8]
   1591c:	movw	r1, #33720	; 0x83b8
   15920:	ldr	r3, [pc, #12]	; 15934 <fputs@plt+0x2b44>
   15924:	movt	r1, #1
   15928:	bl	12718 <log_wrapper@plt>
   1592c:	add	sp, sp, #20
   15930:	pop	{pc}		; (ldr pc, [sp], #4)
   15934:	muleq	r1, ip, r3
   15938:	push	{r4, lr}
   1593c:	mov	r4, r2
   15940:	ldr	r1, [r2, #4]
   15944:	cmp	r1, #0
   15948:	popeq	{r4, pc}
   1594c:	ldr	r3, [r2]
   15950:	cmp	r3, #1
   15954:	beq	15984 <fputs@plt+0x2b94>
   15958:	ldr	r0, [r2, #20]
   1595c:	bl	12b44 <g_list_append@plt>
   15960:	ldr	r1, [r4, #8]
   15964:	str	r0, [r4, #20]
   15968:	ldr	r0, [r4, #24]
   1596c:	bl	12b44 <g_list_append@plt>
   15970:	str	r0, [r4, #24]
   15974:	mov	r3, #0
   15978:	str	r3, [r4, #4]
   1597c:	str	r3, [r4, #8]
   15980:	pop	{r4, pc}
   15984:	ldr	r0, [r2, #12]
   15988:	bl	12b44 <g_list_append@plt>
   1598c:	ldr	r1, [r4, #8]
   15990:	str	r0, [r4, #12]
   15994:	ldr	r0, [r4, #16]
   15998:	bl	12b44 <g_list_append@plt>
   1599c:	str	r0, [r4, #16]
   159a0:	b	15974 <fputs@plt+0x2b84>
   159a4:	push	{r4, r5, r6, lr}
   159a8:	subs	r4, r1, #0
   159ac:	sub	sp, sp, #8
   159b0:	mov	r6, r0
   159b4:	mov	r5, r2
   159b8:	beq	15a4c <fputs@plt+0x2c5c>
   159bc:	movw	r3, #35612	; 0x8b1c
   159c0:	movt	r3, #1
   159c4:	b	15a14 <fputs@plt+0x2c24>
   159c8:	ldr	r3, [r4]
   159cc:	str	ip, [sp]
   159d0:	bl	1294c <libreport_strbuf_append_strf@plt>
   159d4:	ldr	r0, [r5]
   159d8:	bl	129b8 <free@plt>
   159dc:	ldr	r0, [r4]
   159e0:	bl	129b8 <free@plt>
   159e4:	mov	r1, r4
   159e8:	mov	r0, r4
   159ec:	bl	12784 <g_list_delete_link@plt>
   159f0:	mov	r1, r5
   159f4:	mov	r4, r0
   159f8:	mov	r0, r5
   159fc:	bl	12784 <g_list_delete_link@plt>
   15a00:	cmp	r4, #0
   15a04:	movw	r3, #33804	; 0x840c
   15a08:	movt	r3, #1
   15a0c:	mov	r5, r0
   15a10:	beq	15a4c <fputs@plt+0x2c5c>
   15a14:	ldr	ip, [r5]
   15a18:	movw	r1, #33784	; 0x83f8
   15a1c:	mov	r0, r6
   15a20:	mov	r2, r3
   15a24:	cmp	ip, #0
   15a28:	movt	r1, #1
   15a2c:	bne	159c8 <fputs@plt+0x2bd8>
   15a30:	mov	r2, r3
   15a34:	movw	r1, #33796	; 0x8404
   15a38:	mov	r0, r6
   15a3c:	movt	r1, #1
   15a40:	ldr	r3, [r4]
   15a44:	bl	1294c <libreport_strbuf_append_strf@plt>
   15a48:	b	159dc <fputs@plt+0x2bec>
   15a4c:	add	sp, sp, #8
   15a50:	pop	{r4, r5, r6, pc}
   15a54:	push	{r4, r5, r6, lr}
   15a58:	mov	r4, r3
   15a5c:	ldr	r3, [r3, #4]
   15a60:	mov	r6, r1
   15a64:	mov	r5, r2
   15a68:	cmp	r3, #0
   15a6c:	popeq	{r4, r5, r6, pc}
   15a70:	cmp	r2, #0
   15a74:	popeq	{r4, r5, r6, pc}
   15a78:	ldr	r0, [r4, #8]
   15a7c:	bl	129b8 <free@plt>
   15a80:	mov	r0, r6
   15a84:	mov	r1, r5
   15a88:	bl	12dd8 <libreport_xstrndup@plt>
   15a8c:	str	r0, [r4, #8]
   15a90:	pop	{r4, r5, r6, pc}
   15a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a98:	mov	r0, r1
   15a9c:	sub	sp, sp, #36	; 0x24
   15aa0:	movw	r1, #33808	; 0x8410
   15aa4:	movt	r1, #1
   15aa8:	mov	r7, r2
   15aac:	mov	fp, r3
   15ab0:	bl	12c28 <strcmp@plt>
   15ab4:	cmp	r0, #0
   15ab8:	bne	15bb8 <fputs@plt+0x2dc8>
   15abc:	ldr	r3, [r7]
   15ac0:	cmp	r3, #0
   15ac4:	beq	15bb8 <fputs@plt+0x2dc8>
   15ac8:	movw	r8, #33816	; 0x8418
   15acc:	add	r4, r7, #4
   15ad0:	movt	r8, #1
   15ad4:	mov	r9, r0
   15ad8:	mov	r6, r0
   15adc:	mov	r5, r0
   15ae0:	mov	sl, r7
   15ae4:	str	r0, [sp, #28]
   15ae8:	str	r3, [sp, #12]
   15aec:	movw	r1, #33720	; 0x83b8
   15af0:	str	r5, [sp]
   15af4:	movt	r1, #1
   15af8:	str	r5, [sp, #4]
   15afc:	mov	r0, #6
   15b00:	str	r8, [sp, #8]
   15b04:	mov	r2, #52	; 0x34
   15b08:	ldr	lr, [fp, r6]
   15b0c:	add	r6, fp, r6
   15b10:	ldr	r3, [pc, #252]	; 15c14 <fputs@plt+0x2e24>
   15b14:	str	lr, [sp, #16]
   15b18:	bl	12718 <log_wrapper@plt>
   15b1c:	ldr	r1, [sl]
   15b20:	ldrb	r3, [r1]
   15b24:	cmp	r3, #117	; 0x75
   15b28:	beq	15bc0 <fputs@plt+0x2dd0>
   15b2c:	cmp	r3, #114	; 0x72
   15b30:	bne	15b94 <fputs@plt+0x2da4>
   15b34:	ldrb	r3, [r1, #1]
   15b38:	cmp	r3, #101	; 0x65
   15b3c:	bne	15b94 <fputs@plt+0x2da4>
   15b40:	ldrb	r3, [r1, #2]
   15b44:	cmp	r3, #108	; 0x6c
   15b48:	bne	15b94 <fputs@plt+0x2da4>
   15b4c:	ldrb	r3, [r1, #3]
   15b50:	cmp	r3, #0
   15b54:	bne	15b94 <fputs@plt+0x2da4>
   15b58:	ldr	r6, [r6]
   15b5c:	movw	r1, #33828	; 0x8424
   15b60:	movt	r1, #1
   15b64:	mov	r0, r6
   15b68:	bl	12c28 <strcmp@plt>
   15b6c:	cmp	r0, #0
   15b70:	moveq	r9, #1
   15b74:	beq	15b94 <fputs@plt+0x2da4>
   15b78:	mov	r0, r6
   15b7c:	movw	r1, #33840	; 0x8430
   15b80:	mov	r2, #6
   15b84:	movt	r1, #1
   15b88:	bl	12814 <strncmp@plt>
   15b8c:	cmp	r0, #0
   15b90:	moveq	r9, #2
   15b94:	rsb	r6, r7, r4
   15b98:	mov	sl, r4
   15b9c:	ldr	r3, [r4], #4
   15ba0:	cmp	r3, #0
   15ba4:	bne	15ae8 <fputs@plt+0x2cf8>
   15ba8:	ldr	r3, [sp, #28]
   15bac:	cmp	r9, #0
   15bb0:	cmpne	r3, #0
   15bb4:	bne	15bec <fputs@plt+0x2dfc>
   15bb8:	add	sp, sp, #36	; 0x24
   15bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bc0:	ldrb	r3, [r1, #1]
   15bc4:	cmp	r3, #114	; 0x72
   15bc8:	bne	15b94 <fputs@plt+0x2da4>
   15bcc:	ldrb	r3, [r1, #2]
   15bd0:	cmp	r3, #105	; 0x69
   15bd4:	bne	15b94 <fputs@plt+0x2da4>
   15bd8:	ldrb	r3, [r1, #3]
   15bdc:	cmp	r3, #0
   15be0:	ldreq	r6, [r6]
   15be4:	streq	r6, [sp, #28]
   15be8:	b	15b94 <fputs@plt+0x2da4>
   15bec:	ldr	r3, [sp, #72]	; 0x48
   15bf0:	ldr	r0, [r3, #4]
   15bf4:	bl	129b8 <free@plt>
   15bf8:	ldr	r0, [sp, #28]
   15bfc:	bl	12b2c <libreport_xstrdup@plt>
   15c00:	ldr	r3, [sp, #72]	; 0x48
   15c04:	str	r9, [r3]
   15c08:	str	r0, [r3, #4]
   15c0c:	add	sp, sp, #36	; 0x24
   15c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c14:	andeq	r8, r1, r8, lsr #7
   15c18:	push	{r4, r5, r6, r7, r8, lr}
   15c1c:	movw	r5, #45720	; 0xb298
   15c20:	movt	r5, #2
   15c24:	sub	sp, sp, #56	; 0x38
   15c28:	movw	r1, #33848	; 0x8438
   15c2c:	mov	r2, #5
   15c30:	ldr	r3, [r5]
   15c34:	movt	r1, #1
   15c38:	mov	r6, r0
   15c3c:	str	r3, [sp, #52]	; 0x34
   15c40:	bl	12814 <strncmp@plt>
   15c44:	subs	r4, r0, #0
   15c48:	bne	15de0 <fputs@plt+0x2ff0>
   15c4c:	mov	r1, #2
   15c50:	add	r2, sp, #24
   15c54:	mov	r3, r4
   15c58:	add	r0, sp, #4
   15c5c:	str	r4, [sp, #24]
   15c60:	movw	r8, #23188	; 0x5a94
   15c64:	str	r4, [sp, #28]
   15c68:	movt	r8, #1
   15c6c:	str	r4, [sp, #32]
   15c70:	movw	ip, #22840	; 0x5938
   15c74:	str	r4, [sp, #36]	; 0x24
   15c78:	movt	ip, #1
   15c7c:	str	r4, [sp, #40]	; 0x28
   15c80:	movw	r7, #23124	; 0x5a54
   15c84:	str	ip, [sp, #8]
   15c88:	movt	r7, #1
   15c8c:	str	r4, [sp, #44]	; 0x2c
   15c90:	movw	lr, #22772	; 0x58f4
   15c94:	str	r7, [sp, #12]
   15c98:	movt	lr, #1
   15c9c:	str	r4, [sp, #48]	; 0x30
   15ca0:	movw	ip, #22700	; 0x58ac
   15ca4:	str	lr, [sp, #16]
   15ca8:	movt	ip, #1
   15cac:	str	r8, [sp, #4]
   15cb0:	str	ip, [sp, #20]
   15cb4:	bl	1282c <g_markup_parse_context_new@plt>
   15cb8:	mov	r7, r0
   15cbc:	mov	r0, r6
   15cc0:	bl	12af0 <strlen@plt>
   15cc4:	mov	r3, r4
   15cc8:	mov	r1, r6
   15ccc:	mov	r2, r0
   15cd0:	mov	r0, r7
   15cd4:	bl	12ba4 <g_markup_parse_context_parse@plt>
   15cd8:	mov	r0, r7
   15cdc:	bl	126c4 <g_markup_parse_context_free@plt>
   15ce0:	ldr	r0, [sp, #28]
   15ce4:	bl	129b8 <free@plt>
   15ce8:	ldr	r0, [sp, #32]
   15cec:	bl	129b8 <free@plt>
   15cf0:	ldr	r3, [sp, #36]	; 0x24
   15cf4:	cmp	r3, #0
   15cf8:	beq	15dec <fputs@plt+0x2ffc>
   15cfc:	bl	12a90 <libreport_strbuf_new@plt>
   15d00:	ldr	r3, [sp, #36]	; 0x24
   15d04:	cmp	r3, #0
   15d08:	mov	r4, r0
   15d0c:	beq	15d54 <fputs@plt+0x2f64>
   15d10:	mov	r2, #5
   15d14:	movw	r0, #33148	; 0x817c
   15d18:	movw	r1, #33856	; 0x8440
   15d1c:	movt	r0, #1
   15d20:	movt	r1, #1
   15d24:	bl	127b4 <dcgettext@plt>
   15d28:	mov	r1, r0
   15d2c:	mov	r0, r4
   15d30:	bl	12a54 <libreport_strbuf_append_str@plt>
   15d34:	mov	r0, r4
   15d38:	ldr	r1, [sp, #36]	; 0x24
   15d3c:	ldr	r2, [sp, #40]	; 0x28
   15d40:	bl	159a4 <fputs@plt+0x2bb4>
   15d44:	movw	r1, #33896	; 0x8468
   15d48:	mov	r0, r4
   15d4c:	movt	r1, #1
   15d50:	bl	12a54 <libreport_strbuf_append_str@plt>
   15d54:	ldr	r3, [sp, #44]	; 0x2c
   15d58:	cmp	r3, #0
   15d5c:	beq	15dc0 <fputs@plt+0x2fd0>
   15d60:	ldr	r3, [sp, #36]	; 0x24
   15d64:	cmp	r3, #0
   15d68:	beq	15d7c <fputs@plt+0x2f8c>
   15d6c:	movw	r1, #33928	; 0x8488
   15d70:	mov	r0, r4
   15d74:	movt	r1, #1
   15d78:	bl	12a54 <libreport_strbuf_append_str@plt>
   15d7c:	mov	r2, #5
   15d80:	movw	r0, #33148	; 0x817c
   15d84:	movw	r1, #33900	; 0x846c
   15d88:	movt	r0, #1
   15d8c:	movt	r1, #1
   15d90:	bl	127b4 <dcgettext@plt>
   15d94:	mov	r1, r0
   15d98:	mov	r0, r4
   15d9c:	bl	12a54 <libreport_strbuf_append_str@plt>
   15da0:	mov	r0, r4
   15da4:	ldr	r1, [sp, #44]	; 0x2c
   15da8:	ldr	r2, [sp, #48]	; 0x30
   15dac:	bl	159a4 <fputs@plt+0x2bb4>
   15db0:	movw	r1, #38508	; 0x966c
   15db4:	mov	r0, r4
   15db8:	movt	r1, #1
   15dbc:	bl	12a54 <libreport_strbuf_append_str@plt>
   15dc0:	mov	r0, r4
   15dc4:	bl	129a0 <libreport_strbuf_free_nobuf@plt>
   15dc8:	ldr	r2, [sp, #52]	; 0x34
   15dcc:	ldr	r3, [r5]
   15dd0:	cmp	r2, r3
   15dd4:	bne	15dfc <fputs@plt+0x300c>
   15dd8:	add	sp, sp, #56	; 0x38
   15ddc:	pop	{r4, r5, r6, r7, r8, pc}
   15de0:	mov	r0, r6
   15de4:	bl	12b2c <libreport_xstrdup@plt>
   15de8:	b	15dc8 <fputs@plt+0x2fd8>
   15dec:	ldr	r0, [sp, #44]	; 0x2c
   15df0:	cmp	r0, #0
   15df4:	bne	15cfc <fputs@plt+0x2f0c>
   15df8:	b	15dc8 <fputs@plt+0x2fd8>
   15dfc:	bl	12874 <__stack_chk_fail@plt>
   15e00:	push	{r4, r5, r6, lr}
   15e04:	mov	r5, r1
   15e08:	movw	r1, #32996	; 0x80e4
   15e0c:	movt	r1, #1
   15e10:	mov	r6, r0
   15e14:	bl	12c34 <libreport_concat_path_file@plt>
   15e18:	mov	r4, r0
   15e1c:	mov	r0, r6
   15e20:	bl	129b8 <free@plt>
   15e24:	mov	r1, r5
   15e28:	mov	r0, r4
   15e2c:	bl	12c34 <libreport_concat_path_file@plt>
   15e30:	mov	r5, r0
   15e34:	mov	r0, r4
   15e38:	bl	129b8 <free@plt>
   15e3c:	mov	r0, r5
   15e40:	pop	{r4, r5, r6, pc}
   15e44:	push	{r3, r4, r5, lr}
   15e48:	mov	r1, #0
   15e4c:	bl	12cac <dd_opendir@plt>
   15e50:	subs	r4, r0, #0
   15e54:	beq	15e78 <fputs@plt+0x3088>
   15e58:	movw	r1, #34072	; 0x8518
   15e5c:	movt	r1, #1
   15e60:	bl	12a48 <libreport_find_in_reported_to@plt>
   15e64:	mov	r5, r0
   15e68:	mov	r0, r4
   15e6c:	bl	128bc <dd_close@plt>
   15e70:	mov	r0, r5
   15e74:	pop	{r3, r4, r5, pc}
   15e78:	bl	129f4 <libreport_xfunc_die@plt>
   15e7c:	push	{r4, r5, r6, r7, r8, lr}
   15e80:	mov	r5, r0
   15e84:	mov	r8, r1
   15e88:	movw	r0, #34084	; 0x8524
   15e8c:	mov	r1, r5
   15e90:	movt	r0, #1
   15e94:	mov	r7, r2
   15e98:	bl	12bbc <libreport_xasprintf@plt>
   15e9c:	mov	r6, r0
   15ea0:	bl	12c94 <getenv@plt>
   15ea4:	mov	r4, r0
   15ea8:	mov	r0, r6
   15eac:	bl	129b8 <free@plt>
   15eb0:	cmp	r4, #0
   15eb4:	movne	r0, r4
   15eb8:	beq	15ec4 <fputs@plt+0x30d4>
   15ebc:	pop	{r4, r5, r6, r7, r8, lr}
   15ec0:	b	12b2c <libreport_xstrdup@plt>
   15ec4:	mov	r0, r8
   15ec8:	mov	r1, r5
   15ecc:	bl	12cd0 <g_hash_table_lookup@plt>
   15ed0:	cmp	r0, #0
   15ed4:	moveq	r0, r7
   15ed8:	b	15ebc <fputs@plt+0x30cc>
   15edc:	push	{r4, r5, r6, lr}
   15ee0:	mov	r2, #5
   15ee4:	sub	sp, sp, #16
   15ee8:	mov	r6, r0
   15eec:	movw	r1, #34188	; 0x858c
   15ef0:	movw	r0, #33148	; 0x817c
   15ef4:	movt	r1, #1
   15ef8:	movt	r0, #1
   15efc:	bl	127b4 <dcgettext@plt>
   15f00:	bl	12bbc <libreport_xasprintf@plt>
   15f04:	mov	r5, r0
   15f08:	bl	12a24 <libreport_ask@plt>
   15f0c:	mov	r4, r0
   15f10:	mov	r0, r5
   15f14:	bl	129b8 <free@plt>
   15f18:	cmp	r4, #0
   15f1c:	beq	15f50 <fputs@plt+0x3160>
   15f20:	ldrb	r3, [r4]
   15f24:	cmp	r3, #0
   15f28:	beq	15f50 <fputs@plt+0x3160>
   15f2c:	mov	r1, r4
   15f30:	mov	r0, r6
   15f34:	bl	15e00 <fputs@plt+0x3010>
   15f38:	mov	r5, r0
   15f3c:	mov	r0, r4
   15f40:	bl	129b8 <free@plt>
   15f44:	mov	r0, r5
   15f48:	add	sp, sp, #16
   15f4c:	pop	{r4, r5, r6, pc}
   15f50:	mov	r0, #69	; 0x45
   15f54:	bl	12730 <libreport_set_xfunc_error_retval@plt>
   15f58:	mov	r2, #5
   15f5c:	movw	r0, #33148	; 0x817c
   15f60:	movw	r1, #34260	; 0x85d4
   15f64:	movt	r0, #1
   15f68:	movt	r1, #1
   15f6c:	bl	127b4 <dcgettext@plt>
   15f70:	mov	r2, #0
   15f74:	mov	r3, #1
   15f78:	movw	r1, #34132	; 0x8554
   15f7c:	stm	sp, {r2, r3}
   15f80:	movt	r1, #1
   15f84:	mov	r2, #472	; 0x1d8
   15f88:	ldr	r3, [pc, #8]	; 15f98 <fputs@plt+0x31a8>
   15f8c:	str	r0, [sp, #8]
   15f90:	mov	r0, #3
   15f94:	bl	12a00 <log_and_die_wrapper@plt>
   15f98:	andeq	r8, r1, ip, lsr #9
   15f9c:	push	{r3, r4, r5, lr}
   15fa0:	mov	r5, r1
   15fa4:	mov	r4, r0
   15fa8:	ldr	r0, [r0]
   15fac:	bl	129b8 <free@plt>
   15fb0:	ldr	r0, [r5]
   15fb4:	bl	129b8 <free@plt>
   15fb8:	mov	r2, #5
   15fbc:	movw	r0, #33148	; 0x817c
   15fc0:	movw	r1, #34308	; 0x8604
   15fc4:	movt	r0, #1
   15fc8:	movt	r1, #1
   15fcc:	bl	127b4 <dcgettext@plt>
   15fd0:	bl	12a24 <libreport_ask@plt>
   15fd4:	cmp	r0, #0
   15fd8:	beq	16038 <fputs@plt+0x3248>
   15fdc:	ldrb	r3, [r0]
   15fe0:	cmp	r3, #0
   15fe4:	beq	16038 <fputs@plt+0x3248>
   15fe8:	str	r0, [r4]
   15fec:	mov	r2, #5
   15ff0:	movw	r0, #33148	; 0x817c
   15ff4:	movw	r1, #34368	; 0x8640
   15ff8:	movt	r0, #1
   15ffc:	movt	r1, #1
   16000:	bl	127b4 <dcgettext@plt>
   16004:	ldr	r1, [r4]
   16008:	bl	12bbc <libreport_xasprintf@plt>
   1600c:	mov	r4, r0
   16010:	bl	12cf4 <libreport_ask_password@plt>
   16014:	cmp	r0, #0
   16018:	beq	1603c <fputs@plt+0x324c>
   1601c:	ldrb	r2, [r0]
   16020:	cmp	r2, #0
   16024:	beq	1603c <fputs@plt+0x324c>
   16028:	str	r0, [r5]
   1602c:	mov	r0, r4
   16030:	pop	{r3, r4, r5, lr}
   16034:	b	129b8 <free@plt>
   16038:	bl	12e3c <fputs@plt+0x4c>
   1603c:	bl	12e90 <fputs@plt+0xa0>
   16040:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16044:	movw	sl, #45720	; 0xb298
   16048:	movt	sl, #2
   1604c:	sub	sp, sp, #32
   16050:	mov	r8, r0
   16054:	mov	r5, r1
   16058:	ldr	r3, [sl]
   1605c:	mov	r7, r2
   16060:	movw	r9, #401	; 0x191
   16064:	mov	r6, #0
   16068:	str	r3, [sp, #28]
   1606c:	b	160b4 <fputs@plt+0x32c4>
   16070:	ldr	r3, [r4, #32]
   16074:	cmp	r3, r9
   16078:	bne	16128 <fputs@plt+0x3338>
   1607c:	bl	12bc8 <free_post_state@plt>
   16080:	add	r0, sp, #20
   16084:	add	r1, sp, #24
   16088:	str	r6, [sp, #20]
   1608c:	str	r6, [sp, #24]
   16090:	bl	15f9c <fputs@plt+0x31ac>
   16094:	mov	r0, r5
   16098:	ldr	r1, [sp, #20]
   1609c:	ldr	r2, [sp, #24]
   160a0:	bl	12b50 <libreport_ureport_server_config_set_basic_auth@plt>
   160a4:	ldr	r0, [sp, #24]
   160a8:	bl	129b8 <free@plt>
   160ac:	ldr	r0, [sp, #20]
   160b0:	bl	129b8 <free@plt>
   160b4:	mov	r0, r8
   160b8:	mov	r1, r5
   160bc:	mov	r2, r7
   160c0:	bl	12d54 <libreport_ureport_do_post@plt>
   160c4:	subs	r4, r0, #0
   160c8:	bne	16070 <fputs@plt+0x3280>
   160cc:	mov	r2, #5
   160d0:	movw	r0, #33148	; 0x817c
   160d4:	movw	r1, #34432	; 0x8680
   160d8:	movt	r0, #1
   160dc:	movt	r1, #1
   160e0:	bl	127b4 <dcgettext@plt>
   160e4:	mov	r3, #1
   160e8:	str	r4, [sp]
   160ec:	movw	r1, #34132	; 0x8554
   160f0:	str	r3, [sp, #4]
   160f4:	movt	r1, #1
   160f8:	mov	r2, #235	; 0xeb
   160fc:	ldr	r3, [pc, #68]	; 16148 <fputs@plt+0x3358>
   16100:	str	r0, [sp, #8]
   16104:	mov	r0, #3
   16108:	bl	12718 <log_wrapper@plt>
   1610c:	mov	r0, r4
   16110:	ldr	r2, [sp, #28]
   16114:	ldr	r3, [sl]
   16118:	cmp	r2, r3
   1611c:	bne	16144 <fputs@plt+0x3354>
   16120:	add	sp, sp, #32
   16124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16128:	mov	r1, r5
   1612c:	bl	12c4c <libreport_ureport_server_response_from_reply@plt>
   16130:	mov	r5, r0
   16134:	mov	r0, r4
   16138:	bl	129b8 <free@plt>
   1613c:	mov	r0, r5
   16140:	b	16110 <fputs@plt+0x3320>
   16144:	bl	12874 <__stack_chk_fail@plt>
   16148:	andeq	r8, r1, r4, asr #9
   1614c:	push	{r3, r4, r5, lr}
   16150:	mov	r4, r0
   16154:	mov	r0, r1
   16158:	mov	r1, r2
   1615c:	mov	r2, r3
   16160:	bl	12928 <ureport_json_attachment_new@plt>
   16164:	mov	r1, r4
   16168:	movw	r2, #34468	; 0x86a4
   1616c:	movt	r2, #1
   16170:	mov	r5, r0
   16174:	bl	16040 <fputs@plt+0x3250>
   16178:	bl	12748 <libreport_ureport_server_response_free@plt>
   1617c:	mov	r0, r5
   16180:	pop	{r3, r4, r5, lr}
   16184:	b	129b8 <free@plt>
   16188:	ldr	r0, [r0]
   1618c:	b	12c28 <strcmp@plt>
   16190:	ldr	r0, [r0]
   16194:	add	r0, r0, #1
   16198:	b	12c28 <strcmp@plt>
   1619c:	push	{r4, lr}
   161a0:	subs	r4, r0, #0
   161a4:	popeq	{r4, pc}
   161a8:	ldr	r0, [r4]
   161ac:	bl	129b8 <free@plt>
   161b0:	movw	r3, #48879	; 0xbeef
   161b4:	mov	r0, r4
   161b8:	movt	r3, #57005	; 0xdead
   161bc:	str	r3, [r4]
   161c0:	pop	{r4, lr}
   161c4:	b	129b8 <free@plt>
   161c8:	push	{r4, lr}
   161cc:	subs	r4, r0, #0
   161d0:	popeq	{r4, pc}
   161d4:	ldr	r0, [r4]
   161d8:	bl	129b8 <free@plt>
   161dc:	ldr	r0, [r4, #4]
   161e0:	movw	r1, #10680	; 0x29b8
   161e4:	movt	r1, #1
   161e8:	bl	12b5c <g_list_free_full@plt>
   161ec:	ldr	r0, [r4, #8]
   161f0:	movw	r1, #25032	; 0x61c8
   161f4:	movt	r1, #1
   161f8:	bl	12b5c <g_list_free_full@plt>
   161fc:	mov	r0, r4
   16200:	pop	{r4, lr}
   16204:	b	129b8 <free@plt>
   16208:	push	{r3, r4, r5, lr}
   1620c:	subs	r4, r0, #0
   16210:	popeq	{r3, r4, r5, pc}
   16214:	ldr	r0, [r4, #8]
   16218:	movw	r5, #48879	; 0xbeef
   1621c:	bl	127c0 <fclose@plt>
   16220:	movt	r5, #57005	; 0xdead
   16224:	ldr	r0, [r4]
   16228:	str	r5, [r4, #8]
   1622c:	bl	129b8 <free@plt>
   16230:	str	r5, [r4]
   16234:	mov	r0, r4
   16238:	pop	{r3, r4, r5, lr}
   1623c:	b	129b8 <free@plt>
   16240:	push	{r3, r4, r5, lr}
   16244:	mov	r4, r0
   16248:	mov	r5, r1
   1624c:	mov	r0, r1
   16250:	movw	r2, #25264	; 0x62b0
   16254:	mov	r1, r4
   16258:	movt	r2, #1
   1625c:	bl	12934 <g_list_find_custom@plt>
   16260:	cmp	r0, #0
   16264:	beq	16270 <fputs@plt+0x3480>
   16268:	mov	r0, #1
   1626c:	pop	{r3, r4, r5, pc}
   16270:	mov	r0, r5
   16274:	mov	r1, r4
   16278:	movw	r2, #25232	; 0x6290
   1627c:	movt	r2, #1
   16280:	bl	12934 <g_list_find_custom@plt>
   16284:	adds	r0, r0, #0
   16288:	movne	r0, #1
   1628c:	pop	{r3, r4, r5, pc}
   16290:	push	{r3, lr}
   16294:	ldr	r3, [r0, #8]
   16298:	mov	r0, r1
   1629c:	mov	r1, r3
   162a0:	bl	16240 <fputs@plt+0x3450>
   162a4:	eor	r0, r0, #1
   162a8:	uxtb	r0, r0
   162ac:	pop	{r3, pc}
   162b0:	push	{r3, lr}
   162b4:	movw	r2, #25340	; 0x62fc
   162b8:	ldr	r0, [r0, #4]
   162bc:	movt	r2, #1
   162c0:	bl	12934 <g_list_find_custom@plt>
   162c4:	rsbs	r0, r0, #1
   162c8:	movcc	r0, #0
   162cc:	pop	{r3, pc}
   162d0:	push	{r4, lr}
   162d4:	mov	r0, #12
   162d8:	bl	12aa8 <libreport_xmalloc@plt>
   162dc:	mov	r3, #0
   162e0:	mov	r1, r0
   162e4:	mov	r4, r0
   162e8:	str	r3, [r1], #4
   162ec:	bl	12ae4 <open_memstream@plt>
   162f0:	str	r0, [r4, #8]
   162f4:	mov	r0, r4
   162f8:	pop	{r4, pc}
   162fc:	push	{r3, r4, r5, lr}
   16300:	mov	r4, r0
   16304:	ldrb	r3, [r0]
   16308:	mov	r5, r1
   1630c:	cmp	r3, #45	; 0x2d
   16310:	addeq	r4, r0, #1
   16314:	beq	16330 <fputs@plt+0x3540>
   16318:	movw	r1, #39440	; 0x9a10
   1631c:	mov	r2, #6
   16320:	movt	r1, #1
   16324:	bl	12814 <strncmp@plt>
   16328:	cmp	r0, #0
   1632c:	addeq	r4, r4, #6
   16330:	mov	r0, r4
   16334:	mov	r1, r5
   16338:	pop	{r3, r4, r5, lr}
   1633c:	b	12c28 <strcmp@plt>
   16340:	push	{r4, r5, r6, r7, r8, r9, lr}
   16344:	mov	r6, r0
   16348:	sub	sp, sp, #12
   1634c:	mov	r5, r1
   16350:	mov	r0, r2
   16354:	mov	r1, #10
   16358:	mov	r7, r3
   1635c:	mov	r4, r2
   16360:	bl	12790 <strchrnul@plt>
   16364:	ldrb	r3, [r0]
   16368:	cmp	r3, #0
   1636c:	bne	163b8 <fputs@plt+0x35c8>
   16370:	mov	r0, r5
   16374:	bl	12af0 <strlen@plt>
   16378:	cmp	r7, #0
   1637c:	rsb	r0, r0, #14
   16380:	bic	r3, r0, r0, asr #31
   16384:	beq	16498 <fputs@plt+0x36a8>
   16388:	movw	r1, #39448	; 0x9a18
   1638c:	movt	r1, #1
   16390:	movw	ip, #35612	; 0x8b1c
   16394:	str	r4, [sp, #4]
   16398:	movt	ip, #1
   1639c:	mov	r0, r6
   163a0:	mov	r2, r5
   163a4:	str	ip, [sp]
   163a8:	bl	1294c <libreport_strbuf_append_strf@plt>
   163ac:	mov	r0, #1
   163b0:	add	sp, sp, #12
   163b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163b8:	ldrb	r3, [r0, #1]
   163bc:	cmp	r3, #0
   163c0:	bne	163fc <fputs@plt+0x360c>
   163c4:	mov	r0, r5
   163c8:	bl	12af0 <strlen@plt>
   163cc:	cmp	r7, #0
   163d0:	rsb	r0, r0, #14
   163d4:	bic	r3, r0, r0, asr #31
   163d8:	bne	164a4 <fputs@plt+0x36b4>
   163dc:	movw	r1, #40104	; 0x9ca8
   163e0:	movt	r1, #1
   163e4:	mov	r0, r6
   163e8:	mov	r2, r4
   163ec:	bl	1294c <libreport_strbuf_append_strf@plt>
   163f0:	mov	r0, #1
   163f4:	add	sp, sp, #12
   163f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163fc:	cmp	r7, #0
   16400:	moveq	r5, r0
   16404:	bne	16470 <fputs@plt+0x3680>
   16408:	movw	r9, #39484	; 0x9a3c
   1640c:	movw	r8, #39476	; 0x9a34
   16410:	movt	r9, #1
   16414:	movt	r8, #1
   16418:	b	16430 <fputs@plt+0x3640>
   1641c:	ldrb	r2, [r5, #1]
   16420:	cmp	r2, #0
   16424:	beq	163ac <fputs@plt+0x35bc>
   16428:	bl	12790 <strchrnul@plt>
   1642c:	mov	r5, r0
   16430:	cmp	r7, #0
   16434:	rsb	r2, r4, r5
   16438:	mov	r3, r4
   1643c:	mov	r0, r6
   16440:	moveq	r1, r9
   16444:	movne	r1, r8
   16448:	bl	1294c <libreport_strbuf_append_strf@plt>
   1644c:	ldrb	r2, [r5]
   16450:	add	r4, r5, #1
   16454:	mov	r1, #10
   16458:	cmp	r2, #0
   1645c:	mov	r0, r4
   16460:	bne	1641c <fputs@plt+0x362c>
   16464:	mov	r0, #1
   16468:	add	sp, sp, #12
   1646c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16470:	mov	r2, r5
   16474:	movw	r1, #39492	; 0x9a44
   16478:	mov	r0, r6
   1647c:	movt	r1, #1
   16480:	bl	1294c <libreport_strbuf_append_strf@plt>
   16484:	mov	r0, r4
   16488:	mov	r1, #10
   1648c:	bl	12790 <strchrnul@plt>
   16490:	mov	r5, r0
   16494:	b	16408 <fputs@plt+0x3618>
   16498:	movw	r1, #39472	; 0x9a30
   1649c:	movt	r1, #1
   164a0:	b	163e4 <fputs@plt+0x35f4>
   164a4:	movw	r1, #39460	; 0x9a24
   164a8:	movt	r1, #1
   164ac:	b	16390 <fputs@plt+0x35a0>
   164b0:	movw	r3, #45720	; 0xb298
   164b4:	movt	r3, #2
   164b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164bc:	sub	sp, sp, #116	; 0x74
   164c0:	ldr	r8, [r3]
   164c4:	mov	ip, #0
   164c8:	mov	r4, #1
   164cc:	mov	r5, ip
   164d0:	mov	r6, r4
   164d4:	mov	fp, r0
   164d8:	str	r8, [sp, #108]	; 0x6c
   164dc:	mov	r7, r2
   164e0:	mov	r8, ip
   164e4:	str	r3, [sp, #20]
   164e8:	str	r1, [sp, #16]
   164ec:	str	ip, [sp, #28]
   164f0:	str	ip, [sp, #32]
   164f4:	str	ip, [sp, #36]	; 0x24
   164f8:	str	ip, [sp, #40]	; 0x28
   164fc:	str	ip, [sp, #44]	; 0x2c
   16500:	str	ip, [sp, #48]	; 0x30
   16504:	str	ip, [sp, #52]	; 0x34
   16508:	str	ip, [sp, #56]	; 0x38
   1650c:	str	ip, [sp, #60]	; 0x3c
   16510:	str	ip, [sp, #64]	; 0x40
   16514:	str	ip, [sp, #72]	; 0x48
   16518:	str	ip, [sp, #76]	; 0x4c
   1651c:	str	ip, [sp, #80]	; 0x50
   16520:	str	ip, [sp, #84]	; 0x54
   16524:	str	ip, [sp, #88]	; 0x58
   16528:	str	ip, [sp, #92]	; 0x5c
   1652c:	str	ip, [sp, #96]	; 0x60
   16530:	str	ip, [sp, #100]	; 0x64
   16534:	str	ip, [sp, #104]	; 0x68
   16538:	str	r4, [sp, #68]	; 0x44
   1653c:	ldrb	r4, [fp]
   16540:	cmp	r4, #0
   16544:	beq	165a0 <fputs@plt+0x37b0>
   16548:	cmp	r4, #91	; 0x5b
   1654c:	beq	1668c <fputs@plt+0x389c>
   16550:	bls	1662c <fputs@plt+0x383c>
   16554:	cmp	r4, #92	; 0x5c
   16558:	beq	16604 <fputs@plt+0x3814>
   1655c:	cmp	r4, #93	; 0x5d
   16560:	bne	16614 <fputs@plt+0x3824>
   16564:	ldrb	r2, [fp, #1]
   16568:	cmp	r2, #93	; 0x5d
   1656c:	bne	166d8 <fputs@plt+0x38e8>
   16570:	cmp	r6, #1
   16574:	beq	166d8 <fputs@plt+0x38e8>
   16578:	sub	r6, r6, #1
   1657c:	add	r1, sp, #112	; 0x70
   16580:	add	r4, r1, r6, lsl #2
   16584:	ldr	r2, [r4, #-44]	; 0xffffffd4
   16588:	cmp	r2, #0
   1658c:	beq	166fc <fputs@plt+0x390c>
   16590:	add	fp, fp, #2
   16594:	ldrb	r4, [fp]
   16598:	cmp	r4, #0
   1659c:	bne	16548 <fputs@plt+0x3758>
   165a0:	cmp	r6, #1
   165a4:	bne	16754 <fputs@plt+0x3964>
   165a8:	ldr	r3, [sp, #68]	; 0x44
   165ac:	cmp	r3, #0
   165b0:	bne	165e4 <fputs@plt+0x37f4>
   165b4:	str	r3, [sp]
   165b8:	movw	r1, #39500	; 0x9a4c
   165bc:	movw	r3, #39588	; 0x9aa4
   165c0:	str	r6, [sp, #4]
   165c4:	movt	r3, #1
   165c8:	movt	r1, #1
   165cc:	str	r3, [sp, #8]
   165d0:	mov	r0, #3
   165d4:	movw	r3, #38900	; 0x97f4
   165d8:	mov	r2, #388	; 0x184
   165dc:	movt	r3, #1
   165e0:	bl	12718 <log_wrapper@plt>
   165e4:	ldr	r1, [sp, #20]
   165e8:	mov	r0, #0
   165ec:	ldr	r2, [sp, #108]	; 0x6c
   165f0:	ldr	r3, [r1]
   165f4:	cmp	r2, r3
   165f8:	bne	16750 <fputs@plt+0x3960>
   165fc:	add	sp, sp, #116	; 0x74
   16600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16604:	ldrb	r0, [fp, #1]
   16608:	cmp	r0, #0
   1660c:	addne	fp, fp, #1
   16610:	bne	16618 <fputs@plt+0x3828>
   16614:	mov	r0, r4
   16618:	mov	r1, r7
   1661c:	add	r5, r5, #1
   16620:	add	fp, fp, #1
   16624:	bl	12b74 <_IO_putc@plt>
   16628:	b	1653c <fputs@plt+0x374c>
   1662c:	cmp	r4, #37	; 0x25
   16630:	bne	16614 <fputs@plt+0x3824>
   16634:	add	r9, fp, #1
   16638:	mov	r1, r4
   1663c:	mov	r0, r9
   16640:	bl	1291c <strchr@plt>
   16644:	subs	sl, r0, #0
   16648:	beq	16718 <fputs@plt+0x3928>
   1664c:	strb	r8, [sl]
   16650:	mov	r1, r9
   16654:	ldr	r0, [sp, #16]
   16658:	bl	12cd0 <g_hash_table_lookup@plt>
   1665c:	strb	r4, [sl]
   16660:	subs	r4, r0, #0
   16664:	beq	16674 <fputs@plt+0x3884>
   16668:	ldr	r3, [r4, #4]
   1666c:	tst	r3, #2
   16670:	bne	166e0 <fputs@plt+0x38f0>
   16674:	sub	r3, r6, #1
   16678:	add	r2, sp, #112	; 0x70
   1667c:	add	r3, r2, r3, lsl #2
   16680:	str	r8, [r3, #-44]	; 0xffffffd4
   16684:	add	fp, sl, #1
   16688:	b	1653c <fputs@plt+0x374c>
   1668c:	ldrb	r2, [fp, #1]
   16690:	cmp	r2, #91	; 0x5b
   16694:	bne	166c0 <fputs@plt+0x38d0>
   16698:	cmp	r6, #9
   1669c:	bgt	166c0 <fputs@plt+0x38d0>
   166a0:	add	r1, sp, #112	; 0x70
   166a4:	mov	r3, #1
   166a8:	add	r2, r1, r6, lsl #2
   166ac:	add	fp, fp, #2
   166b0:	add	r6, r6, #1
   166b4:	str	r5, [r2, #-84]	; 0xffffffac
   166b8:	str	r3, [r2, #-44]	; 0xffffffd4
   166bc:	b	1653c <fputs@plt+0x374c>
   166c0:	mov	r1, r7
   166c4:	mov	r0, #91	; 0x5b
   166c8:	add	r5, r5, #1
   166cc:	add	fp, fp, #1
   166d0:	bl	12b74 <_IO_putc@plt>
   166d4:	b	1653c <fputs@plt+0x374c>
   166d8:	mov	r0, #93	; 0x5d
   166dc:	b	16618 <fputs@plt+0x3828>
   166e0:	mov	r1, r7
   166e4:	ldr	r0, [r4]
   166e8:	bl	12df0 <fputs@plt>
   166ec:	ldr	r0, [r4]
   166f0:	bl	12af0 <strlen@plt>
   166f4:	add	r5, r0, r5
   166f8:	b	16684 <fputs@plt+0x3894>
   166fc:	mov	r0, r7
   16700:	ldr	r1, [r4, #-84]	; 0xffffffac
   16704:	bl	128a4 <fseek@plt>
   16708:	cmp	r0, #0
   1670c:	blt	16788 <fputs@plt+0x3998>
   16710:	ldr	r5, [r4, #-84]	; 0xffffffac
   16714:	b	16590 <fputs@plt+0x37a0>
   16718:	mov	r3, #1
   1671c:	movw	r2, #39528	; 0x9a68
   16720:	str	r3, [sp, #4]
   16724:	movt	r2, #1
   16728:	movw	r1, #39500	; 0x9a4c
   1672c:	str	r2, [sp, #8]
   16730:	movw	r3, #38900	; 0x97f4
   16734:	str	sl, [sp]
   16738:	str	fp, [sp, #12]
   1673c:	movt	r1, #1
   16740:	movt	r3, #1
   16744:	mov	r0, #3
   16748:	movw	r2, #362	; 0x16a
   1674c:	bl	12a00 <log_and_die_wrapper@plt>
   16750:	bl	12874 <__stack_chk_fail@plt>
   16754:	mov	r2, #1
   16758:	movw	r3, #39560	; 0x9a88
   1675c:	str	r2, [sp, #4]
   16760:	movt	r3, #1
   16764:	movw	r1, #39500	; 0x9a4c
   16768:	str	r3, [sp, #8]
   1676c:	str	r4, [sp]
   16770:	movw	r3, #38900	; 0x97f4
   16774:	movt	r1, #1
   16778:	mov	r0, #3
   1677c:	movt	r3, #1
   16780:	movw	r2, #383	; 0x17f
   16784:	bl	12a00 <log_and_die_wrapper@plt>
   16788:	mov	r2, #1
   1678c:	movw	r3, #39520	; 0x9a60
   16790:	str	r2, [sp]
   16794:	movt	r3, #1
   16798:	movw	r1, #39500	; 0x9a4c
   1679c:	str	r3, [sp, #8]
   167a0:	str	r2, [sp, #4]
   167a4:	movw	r3, #38900	; 0x97f4
   167a8:	movt	r1, #1
   167ac:	mov	r0, #3
   167b0:	movt	r3, #1
   167b4:	mov	r2, #348	; 0x15c
   167b8:	bl	12a00 <log_and_die_wrapper@plt>
   167bc:	push	{r4, lr}
   167c0:	subs	r4, r0, #0
   167c4:	beq	167e0 <fputs@plt+0x39f0>
   167c8:	ldr	r0, [r4, #8]
   167cc:	cmp	r0, #0
   167d0:	beq	167fc <fputs@plt+0x3a0c>
   167d4:	bl	12bec <fflush@plt>
   167d8:	ldr	r0, [r4]
   167dc:	pop	{r4, pc}
   167e0:	movw	r0, #39632	; 0x9ad0
   167e4:	movw	r1, #39500	; 0x9a4c
   167e8:	movt	r0, #1
   167ec:	movt	r1, #1
   167f0:	movw	r2, #785	; 0x311
   167f4:	ldr	r3, [pc, #28]	; 16818 <fputs@plt+0x3a28>
   167f8:	bl	12868 <__assert_fail@plt>
   167fc:	movw	r0, #39652	; 0x9ae4
   16800:	movw	r1, #39500	; 0x9a4c
   16804:	movt	r0, #1
   16808:	movt	r1, #1
   1680c:	movw	r2, #786	; 0x312
   16810:	ldr	r3, [pc]	; 16818 <fputs@plt+0x3a28>
   16814:	bl	12868 <__assert_fail@plt>
   16818:	andeq	r9, r1, r4, lsr #16
   1681c:	push	{r3, r4, r5, lr}
   16820:	mov	r4, r1
   16824:	mov	r5, r0
   16828:	movw	r1, #33024	; 0x8100
   1682c:	mov	r0, r4
   16830:	movt	r1, #1
   16834:	bl	12c28 <strcmp@plt>
   16838:	cmp	r0, #0
   1683c:	beq	16870 <fputs@plt+0x3a80>
   16840:	movw	r1, #40416	; 0x9de0
   16844:	mov	r0, r4
   16848:	movt	r1, #1
   1684c:	bl	12c28 <strcmp@plt>
   16850:	cmp	r0, #0
   16854:	beq	16870 <fputs@plt+0x3a80>
   16858:	movw	r1, #33032	; 0x8108
   1685c:	mov	r0, r4
   16860:	movt	r1, #1
   16864:	bl	12c28 <strcmp@plt>
   16868:	cmp	r0, #0
   1686c:	bne	16878 <fputs@plt+0x3a88>
   16870:	mov	r0, #1
   16874:	pop	{r3, r4, r5, pc}
   16878:	ldr	r0, [r5]
   1687c:	mov	r1, r4
   16880:	movw	r2, #24968	; 0x6188
   16884:	movt	r2, #1
   16888:	bl	12934 <g_list_find_custom@plt>
   1688c:	adds	r0, r0, #0
   16890:	movne	r0, #1
   16894:	pop	{r3, r4, r5, pc}
   16898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1689c:	mov	r9, r0
   168a0:	ldr	r4, [r0, #4]
   168a4:	sub	sp, sp, #16
   168a8:	cmp	r4, #0
   168ac:	beq	169f8 <fputs@plt+0x3c08>
   168b0:	mov	r7, #0
   168b4:	movw	r8, #39684	; 0x9b04
   168b8:	movw	sl, #39716	; 0x9b24
   168bc:	movt	r8, #1
   168c0:	movt	sl, #1
   168c4:	mov	r6, r7
   168c8:	b	168d8 <fputs@plt+0x3ae8>
   168cc:	ldr	r4, [r4, #4]
   168d0:	cmp	r4, #0
   168d4:	beq	1696c <fputs@plt+0x3b7c>
   168d8:	ldr	r5, [r4]
   168dc:	movw	r1, #39500	; 0x9a4c
   168e0:	str	r6, [sp]
   168e4:	movt	r1, #1
   168e8:	str	r6, [sp, #4]
   168ec:	mov	r0, #7
   168f0:	str	r8, [sp, #8]
   168f4:	movw	r2, #1093	; 0x445
   168f8:	ldr	ip, [r5]
   168fc:	ldr	r3, [pc, #252]	; 16a00 <fputs@plt+0x3c10>
   16900:	str	ip, [sp, #12]
   16904:	bl	12718 <log_wrapper@plt>
   16908:	ldr	r3, [r5, #4]
   1690c:	tst	r3, #1
   16910:	beq	168cc <fputs@plt+0x3adc>
   16914:	movw	r2, #24976	; 0x6190
   16918:	ldr	r0, [r9]
   1691c:	movt	r2, #1
   16920:	ldr	r1, [r5]
   16924:	bl	12934 <g_list_find_custom@plt>
   16928:	cmp	r0, #0
   1692c:	bne	168cc <fputs@plt+0x3adc>
   16930:	str	r0, [sp]
   16934:	movw	r1, #39500	; 0x9a4c
   16938:	str	r0, [sp, #4]
   1693c:	movt	r1, #1
   16940:	str	sl, [sp, #8]
   16944:	mov	r0, #4
   16948:	ldr	ip, [r5]
   1694c:	movw	r2, #1098	; 0x44a
   16950:	ldr	r3, [pc, #168]	; 16a00 <fputs@plt+0x3c10>
   16954:	add	r7, r7, #1
   16958:	str	ip, [sp, #12]
   1695c:	bl	12718 <log_wrapper@plt>
   16960:	ldr	r4, [r4, #4]
   16964:	cmp	r4, #0
   16968:	bne	168d8 <fputs@plt+0x3ae8>
   1696c:	ldr	r4, [r9]
   16970:	cmp	r4, #0
   16974:	beq	169ec <fputs@plt+0x3bfc>
   16978:	movw	r6, #39764	; 0x9b54
   1697c:	add	r9, r9, #4
   16980:	movt	r6, #1
   16984:	b	16994 <fputs@plt+0x3ba4>
   16988:	ldr	r4, [r4, #4]
   1698c:	cmp	r4, #0
   16990:	beq	169ec <fputs@plt+0x3bfc>
   16994:	ldr	r5, [r4]
   16998:	mov	r0, r9
   1699c:	ldr	r1, [r5]
   169a0:	add	r1, r1, #1
   169a4:	bl	1681c <fputs@plt+0x3a2c>
   169a8:	cmp	r0, #0
   169ac:	bne	16988 <fputs@plt+0x3b98>
   169b0:	str	r0, [sp]
   169b4:	movw	r1, #39500	; 0x9a4c
   169b8:	str	r0, [sp, #4]
   169bc:	movt	r1, #1
   169c0:	str	r6, [sp, #8]
   169c4:	mov	r0, #4
   169c8:	ldr	ip, [r5]
   169cc:	movw	r2, #1113	; 0x459
   169d0:	ldr	r3, [pc, #40]	; 16a00 <fputs@plt+0x3c10>
   169d4:	add	r7, r7, #1
   169d8:	str	ip, [sp, #12]
   169dc:	bl	12718 <log_wrapper@plt>
   169e0:	ldr	r4, [r4, #4]
   169e4:	cmp	r4, #0
   169e8:	bne	16994 <fputs@plt+0x3ba4>
   169ec:	mov	r0, r7
   169f0:	add	sp, sp, #16
   169f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169f8:	mov	r7, r4
   169fc:	b	1696c <fputs@plt+0x3b7c>
   16a00:	andeq	r9, r1, ip, lsr r8
   16a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a08:	subs	r6, r0, #0
   16a0c:	sub	sp, sp, #12
   16a10:	beq	16ce0 <fputs@plt+0x3ef0>
   16a14:	mov	r0, #12
   16a18:	mov	r4, #0
   16a1c:	bl	12aa8 <libreport_xmalloc@plt>
   16a20:	mov	fp, r4
   16a24:	mov	r7, r4
   16a28:	mov	r8, r0
   16a2c:	movw	r0, #39820	; 0x9b8c
   16a30:	movt	r0, #1
   16a34:	bl	12b2c <libreport_xstrdup@plt>
   16a38:	str	r4, [r8, #4]
   16a3c:	mov	r1, r8
   16a40:	str	r4, [r8, #8]
   16a44:	str	r0, [r8]
   16a48:	mov	r0, r4
   16a4c:	bl	12b44 <g_list_append@plt>
   16a50:	str	r0, [sp, #4]
   16a54:	mov	r0, r6
   16a58:	bl	12c58 <libreport_xmalloc_fgetline@plt>
   16a5c:	subs	r4, r0, #0
   16a60:	beq	16be8 <fputs@plt+0x3df8>
   16a64:	bl	12a9c <libreport_skip_whitespace@plt>
   16a68:	ldrb	r3, [r0]
   16a6c:	cmp	r3, #35	; 0x23
   16a70:	bne	16ab4 <fputs@plt+0x3cc4>
   16a74:	b	16bd0 <fputs@plt+0x3de0>
   16a78:	sub	r3, r0, #1
   16a7c:	ldrb	r2, [r4, r3]
   16a80:	cmp	r2, #92	; 0x5c
   16a84:	bne	16ac4 <fputs@plt+0x3cd4>
   16a88:	strb	r7, [r4, r3]
   16a8c:	mov	r0, r6
   16a90:	bl	12c58 <libreport_xmalloc_fgetline@plt>
   16a94:	subs	r5, r0, #0
   16a98:	beq	16ac4 <fputs@plt+0x3cd4>
   16a9c:	mov	r0, r4
   16aa0:	mov	r1, r5
   16aa4:	bl	12760 <libreport_append_to_malloced_string@plt>
   16aa8:	mov	r4, r0
   16aac:	mov	r0, r5
   16ab0:	bl	129b8 <free@plt>
   16ab4:	mov	r0, r4
   16ab8:	bl	12af0 <strlen@plt>
   16abc:	cmp	r0, #0
   16ac0:	bne	16a78 <fputs@plt+0x3c88>
   16ac4:	ldrb	r5, [r4]
   16ac8:	cmp	r5, #0
   16acc:	movne	r9, r4
   16ad0:	movne	fp, r4
   16ad4:	movne	sl, #0
   16ad8:	bne	16b04 <fputs@plt+0x3d14>
   16adc:	b	16cd4 <fputs@plt+0x3ee4>
   16ae0:	ldrb	r2, [fp, #1]
   16ae4:	cmp	r2, #58	; 0x3a
   16ae8:	beq	16c20 <fputs@plt+0x3e30>
   16aec:	strb	r5, [r9]
   16af0:	add	r9, r9, #1
   16af4:	ldrb	r5, [fp, #1]
   16af8:	add	fp, fp, #1
   16afc:	cmp	r5, #0
   16b00:	beq	16b40 <fputs@plt+0x3d50>
   16b04:	cmp	r5, #58	; 0x3a
   16b08:	cmpeq	sl, #0
   16b0c:	beq	16ae0 <fputs@plt+0x3cf0>
   16b10:	cmp	sl, #0
   16b14:	beq	16aec <fputs@plt+0x3cfc>
   16b18:	bl	127d8 <__ctype_b_loc@plt>
   16b1c:	lsl	r2, r5, #1
   16b20:	ldr	r1, [r0]
   16b24:	ldrh	r2, [r1, r2]
   16b28:	tst	r2, #8192	; 0x2000
   16b2c:	beq	16aec <fputs@plt+0x3cfc>
   16b30:	ldrb	r5, [fp, #1]
   16b34:	add	fp, fp, #1
   16b38:	cmp	r5, #0
   16b3c:	bne	16b04 <fputs@plt+0x3d14>
   16b40:	cmp	sl, #0
   16b44:	strb	r5, [r9]
   16b48:	bne	16b54 <fputs@plt+0x3d64>
   16b4c:	b	16b94 <fputs@plt+0x3da4>
   16b50:	add	sl, fp, #1
   16b54:	mov	r1, #44	; 0x2c
   16b58:	mov	r0, sl
   16b5c:	bl	12790 <strchrnul@plt>
   16b60:	mov	fp, r0
   16b64:	mov	r0, sl
   16b68:	rsb	r1, sl, fp
   16b6c:	bl	12dd8 <libreport_xstrndup@plt>
   16b70:	mov	r1, r0
   16b74:	mov	r0, r5
   16b78:	bl	12850 <g_list_prepend@plt>
   16b7c:	ldrb	r3, [fp]
   16b80:	cmp	r3, #0
   16b84:	mov	r5, r0
   16b88:	bne	16b50 <fputs@plt+0x3d60>
   16b8c:	bl	12a18 <g_list_reverse@plt>
   16b90:	mov	sl, r0
   16b94:	mov	r0, #12
   16b98:	bl	12aa8 <libreport_xmalloc@plt>
   16b9c:	mov	fp, r0
   16ba0:	mov	r0, r4
   16ba4:	bl	12b2c <libreport_xstrdup@plt>
   16ba8:	str	sl, [fp, #4]
   16bac:	str	r7, [fp, #8]
   16bb0:	str	r0, [fp]
   16bb4:	ldrb	r3, [r0]
   16bb8:	cmp	r3, #37	; 0x25
   16bbc:	beq	16cac <fputs@plt+0x3ebc>
   16bc0:	ldr	r0, [r8, #8]
   16bc4:	mov	r1, fp
   16bc8:	bl	12850 <g_list_prepend@plt>
   16bcc:	str	r0, [r8, #8]
   16bd0:	mov	r0, r4
   16bd4:	bl	129b8 <free@plt>
   16bd8:	mov	r0, r6
   16bdc:	bl	12c58 <libreport_xmalloc_fgetline@plt>
   16be0:	subs	r4, r0, #0
   16be4:	bne	16a64 <fputs@plt+0x3c74>
   16be8:	cmp	r8, fp
   16bec:	beq	16c08 <fputs@plt+0x3e18>
   16bf0:	movw	r1, #39820	; 0x9b8c
   16bf4:	ldr	r0, [r8]
   16bf8:	movt	r1, #1
   16bfc:	bl	12c28 <strcmp@plt>
   16c00:	cmp	r0, #0
   16c04:	bne	16c14 <fputs@plt+0x3e24>
   16c08:	ldr	r0, [r8, #8]
   16c0c:	bl	12a18 <g_list_reverse@plt>
   16c10:	str	r0, [r8, #8]
   16c14:	ldr	r0, [sp, #4]
   16c18:	add	sp, sp, #12
   16c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c20:	strb	r7, [r9]
   16c24:	movw	r1, #39836	; 0x9b9c
   16c28:	mov	r0, r4
   16c2c:	movt	r1, #1
   16c30:	bl	12c28 <strcmp@plt>
   16c34:	subs	r5, r0, #0
   16c38:	addne	sl, r9, #1
   16c3c:	addne	fp, fp, #1
   16c40:	movne	r9, sl
   16c44:	bne	16af4 <fputs@plt+0x3d04>
   16c48:	add	r0, fp, #2
   16c4c:	bl	12a9c <libreport_skip_whitespace@plt>
   16c50:	bl	12b2c <libreport_xstrdup@plt>
   16c54:	mov	r1, r0
   16c58:	mov	r0, r5
   16c5c:	bl	12b44 <g_list_append@plt>
   16c60:	mov	sl, r0
   16c64:	mov	r0, #12
   16c68:	bl	12aa8 <libreport_xmalloc@plt>
   16c6c:	mov	fp, r0
   16c70:	mov	r0, r4
   16c74:	bl	12b2c <libreport_xstrdup@plt>
   16c78:	str	sl, [fp, #4]
   16c7c:	str	r5, [fp, #8]
   16c80:	str	r0, [fp]
   16c84:	ldrb	r3, [r0]
   16c88:	cmp	r3, #37	; 0x25
   16c8c:	bne	16bc0 <fputs@plt+0x3dd0>
   16c90:	ldr	r0, [sp, #4]
   16c94:	mov	r1, fp
   16c98:	bl	12850 <g_list_prepend@plt>
   16c9c:	str	r0, [sp, #4]
   16ca0:	mov	r0, r4
   16ca4:	bl	129b8 <free@plt>
   16ca8:	b	16bd8 <fputs@plt+0x3de8>
   16cac:	movw	r1, #39848	; 0x9ba8
   16cb0:	movt	r1, #1
   16cb4:	bl	12c28 <strcmp@plt>
   16cb8:	cmp	r0, #0
   16cbc:	beq	16c90 <fputs@plt+0x3ea0>
   16cc0:	ldr	r0, [r8, #8]
   16cc4:	bl	12a18 <g_list_reverse@plt>
   16cc8:	str	r0, [r8, #8]
   16ccc:	mov	r8, fp
   16cd0:	b	16c90 <fputs@plt+0x3ea0>
   16cd4:	strb	r5, [r4]
   16cd8:	mov	sl, r5
   16cdc:	b	16b94 <fputs@plt+0x3da4>
   16ce0:	movw	r0, #39816	; 0x9b88
   16ce4:	movw	r1, #39500	; 0x9a4c
   16ce8:	movt	r0, #1
   16cec:	movt	r1, #1
   16cf0:	mov	r2, #197	; 0xc5
   16cf4:	ldr	r3, [pc]	; 16cfc <fputs@plt+0x3f0c>
   16cf8:	bl	12868 <__assert_fail@plt>
   16cfc:	andeq	r9, r1, r8, asr r8
   16d00:	push	{r4, r5, lr}
   16d04:	subs	r5, r0, #0
   16d08:	sub	sp, sp, #20
   16d0c:	mov	r4, r1
   16d10:	beq	16dec <fputs@plt+0x3ffc>
   16d14:	cmp	r1, #0
   16d18:	beq	16dd0 <fputs@plt+0x3fe0>
   16d1c:	movw	r0, #33024	; 0x8100
   16d20:	movt	r0, #1
   16d24:	bl	12c28 <strcmp@plt>
   16d28:	cmp	r0, #0
   16d2c:	beq	16d60 <fputs@plt+0x3f70>
   16d30:	movw	r0, #33032	; 0x8108
   16d34:	mov	r1, r4
   16d38:	movt	r0, #1
   16d3c:	bl	12c28 <strcmp@plt>
   16d40:	cmp	r0, #0
   16d44:	bne	16d70 <fputs@plt+0x3f80>
   16d48:	ldr	r3, [r5, #4]
   16d4c:	cmp	r3, #0
   16d50:	beq	16d6c <fputs@plt+0x3f7c>
   16d54:	ldr	r0, [r3, #8]
   16d58:	add	sp, sp, #20
   16d5c:	pop	{r4, r5, pc}
   16d60:	ldr	r3, [r5]
   16d64:	cmp	r3, #0
   16d68:	bne	16d54 <fputs@plt+0x3f64>
   16d6c:	bl	12ee4 <fputs@plt+0xf4>
   16d70:	ldr	r5, [r5, #12]
   16d74:	cmp	r5, #0
   16d78:	beq	16d98 <fputs@plt+0x3fa8>
   16d7c:	mov	r0, r5
   16d80:	mov	r1, r4
   16d84:	bl	12cd0 <g_hash_table_lookup@plt>
   16d88:	cmp	r0, #0
   16d8c:	ldrne	r0, [r0, #8]
   16d90:	add	sp, sp, #20
   16d94:	pop	{r4, r5, pc}
   16d98:	mov	r0, #7
   16d9c:	str	r5, [sp]
   16da0:	movw	r3, #39884	; 0x9bcc
   16da4:	str	r5, [sp, #4]
   16da8:	movt	r3, #1
   16dac:	str	r4, [sp, #12]
   16db0:	str	r3, [sp, #8]
   16db4:	movw	r1, #39500	; 0x9a4c
   16db8:	movw	r2, #882	; 0x372
   16dbc:	movt	r1, #1
   16dc0:	ldr	r3, [pc, #64]	; 16e08 <fputs@plt+0x4018>
   16dc4:	bl	12718 <log_wrapper@plt>
   16dc8:	mov	r0, r5
   16dcc:	b	16d58 <fputs@plt+0x3f68>
   16dd0:	movw	r0, #39856	; 0x9bb0
   16dd4:	movw	r1, #39500	; 0x9a4c
   16dd8:	movt	r0, #1
   16ddc:	movt	r1, #1
   16de0:	movw	r2, #893	; 0x37d
   16de4:	ldr	r3, [pc, #32]	; 16e0c <fputs@plt+0x401c>
   16de8:	bl	12868 <__assert_fail@plt>
   16dec:	movw	r0, #39632	; 0x9ad0
   16df0:	movw	r1, #39500	; 0x9a4c
   16df4:	movt	r0, #1
   16df8:	movt	r1, #1
   16dfc:	mov	r2, #892	; 0x37c
   16e00:	ldr	r3, [pc, #4]	; 16e0c <fputs@plt+0x401c>
   16e04:	bl	12868 <__assert_fail@plt>
   16e08:	andeq	r9, r1, r0, lsl #17
   16e0c:	andeq	r9, r1, r4, ror #16
   16e10:	cmp	r0, #0
   16e14:	push	{r3, lr}
   16e18:	beq	16e28 <fputs@plt+0x4038>
   16e1c:	ldr	r0, [r0]
   16e20:	pop	{r3, lr}
   16e24:	b	167bc <fputs@plt+0x39cc>
   16e28:	movw	r0, #39632	; 0x9ad0
   16e2c:	movw	r1, #39500	; 0x9a4c
   16e30:	movt	r0, #1
   16e34:	movt	r1, #1
   16e38:	mov	r2, #908	; 0x38c
   16e3c:	ldr	r3, [pc]	; 16e44 <fputs@plt+0x4054>
   16e40:	bl	12868 <__assert_fail@plt>
   16e44:	andeq	r9, r1, r4, lsr #17
   16e48:	cmp	r0, #0
   16e4c:	push	{r3, lr}
   16e50:	beq	16e60 <fputs@plt+0x4070>
   16e54:	ldr	r0, [r0, #4]
   16e58:	pop	{r3, lr}
   16e5c:	b	167bc <fputs@plt+0x39cc>
   16e60:	movw	r0, #39632	; 0x9ad0
   16e64:	movw	r1, #39500	; 0x9a4c
   16e68:	movt	r0, #1
   16e6c:	movt	r1, #1
   16e70:	mov	r2, #916	; 0x394
   16e74:	ldr	r3, [pc]	; 16e7c <fputs@plt+0x408c>
   16e78:	bl	12868 <__assert_fail@plt>
   16e7c:	andeq	r9, r1, r0, asr #17
   16e80:	cmp	r0, #0
   16e84:	push	{lr}		; (str lr, [sp, #-4]!)
   16e88:	sub	sp, sp, #20
   16e8c:	beq	16f14 <fputs@plt+0x4124>
   16e90:	cmp	r1, #0
   16e94:	beq	16ef8 <fputs@plt+0x4108>
   16e98:	ldr	r0, [r0, #12]
   16e9c:	cmp	r0, #0
   16ea0:	beq	16ebc <fputs@plt+0x40cc>
   16ea4:	bl	12cd0 <g_hash_table_lookup@plt>
   16ea8:	cmp	r0, #0
   16eac:	beq	16eec <fputs@plt+0x40fc>
   16eb0:	add	sp, sp, #20
   16eb4:	pop	{lr}		; (ldr lr, [sp], #4)
   16eb8:	b	167bc <fputs@plt+0x39cc>
   16ebc:	str	r0, [sp]
   16ec0:	movw	r2, #39884	; 0x9bcc
   16ec4:	str	r0, [sp, #4]
   16ec8:	movt	r2, #1
   16ecc:	str	r1, [sp, #12]
   16ed0:	mov	r0, #7
   16ed4:	movw	r1, #39500	; 0x9a4c
   16ed8:	str	r2, [sp, #8]
   16edc:	movt	r1, #1
   16ee0:	movw	r2, #882	; 0x372
   16ee4:	ldr	r3, [pc, #68]	; 16f30 <fputs@plt+0x4140>
   16ee8:	bl	12718 <log_wrapper@plt>
   16eec:	mov	r0, #0
   16ef0:	add	sp, sp, #20
   16ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ef8:	movw	r0, #39936	; 0x9c00
   16efc:	movw	r1, #39500	; 0x9a4c
   16f00:	movt	r0, #1
   16f04:	movt	r1, #1
   16f08:	movw	r2, #925	; 0x39d
   16f0c:	ldr	r3, [pc, #32]	; 16f34 <fputs@plt+0x4144>
   16f10:	bl	12868 <__assert_fail@plt>
   16f14:	movw	r0, #39632	; 0x9ad0
   16f18:	movw	r1, #39500	; 0x9a4c
   16f1c:	movt	r0, #1
   16f20:	movt	r1, #1
   16f24:	mov	r2, #924	; 0x39c
   16f28:	ldr	r3, [pc, #4]	; 16f34 <fputs@plt+0x4144>
   16f2c:	bl	12868 <__assert_fail@plt>
   16f30:	andeq	r9, r1, r0, lsl #17
   16f34:	andeq	r9, r1, r0, ror #17
   16f38:	cmp	r0, #0
   16f3c:	push	{r3, lr}
   16f40:	beq	16f4c <fputs@plt+0x415c>
   16f44:	ldr	r0, [r0, #8]
   16f48:	pop	{r3, pc}
   16f4c:	movw	r0, #39632	; 0x9ad0
   16f50:	movw	r1, #39500	; 0x9a4c
   16f54:	movt	r0, #1
   16f58:	movt	r1, #1
   16f5c:	movw	r2, #947	; 0x3b3
   16f60:	ldr	r3, [pc]	; 16f68 <fputs@plt+0x4178>
   16f64:	bl	12868 <__assert_fail@plt>
   16f68:	strdeq	r9, [r1], -ip
   16f6c:	push	{r3, r4, r5, lr}
   16f70:	subs	r4, r0, #0
   16f74:	popeq	{r3, r4, r5, pc}
   16f78:	ldr	r0, [r4]
   16f7c:	movw	r5, #48879	; 0xbeef
   16f80:	bl	16208 <fputs@plt+0x3418>
   16f84:	movt	r5, #57005	; 0xdead
   16f88:	ldr	r0, [r4, #4]
   16f8c:	str	r5, [r4]
   16f90:	bl	16208 <fputs@plt+0x3418>
   16f94:	ldr	r0, [r4, #8]
   16f98:	str	r5, [r4, #4]
   16f9c:	movw	r1, #10680	; 0x29b8
   16fa0:	movt	r1, #1
   16fa4:	bl	12b5c <g_list_free_full@plt>
   16fa8:	ldr	r0, [r4, #12]
   16fac:	str	r5, [r4, #8]
   16fb0:	cmp	r0, #0
   16fb4:	beq	16fc0 <fputs@plt+0x41d0>
   16fb8:	bl	126f4 <g_hash_table_destroy@plt>
   16fbc:	str	r5, [r4, #12]
   16fc0:	mov	r0, r4
   16fc4:	pop	{r3, r4, r5, lr}
   16fc8:	b	129b8 <free@plt>
   16fcc:	push	{r4, lr}
   16fd0:	mov	r0, #12
   16fd4:	bl	12ab4 <libreport_xzalloc@plt>
   16fd8:	mov	r4, r0
   16fdc:	movw	r0, #39952	; 0x9c10
   16fe0:	movt	r0, #1
   16fe4:	bl	12b2c <libreport_xstrdup@plt>
   16fe8:	str	r0, [r4, #8]
   16fec:	mov	r0, r4
   16ff0:	pop	{r4, pc}
   16ff4:	push	{r3, r4, r5, lr}
   16ff8:	subs	r4, r0, #0
   16ffc:	popeq	{r3, r4, r5, pc}
   17000:	ldr	r0, [r4]
   17004:	movw	r1, #25032	; 0x61c8
   17008:	movt	r1, #1
   1700c:	movw	r5, #48879	; 0xbeef
   17010:	bl	12b5c <g_list_free_full@plt>
   17014:	movt	r5, #57005	; 0xdead
   17018:	ldr	r0, [r4, #4]
   1701c:	movw	r1, #24988	; 0x619c
   17020:	str	r5, [r4]
   17024:	movt	r1, #1
   17028:	bl	12b5c <g_list_free_full@plt>
   1702c:	ldr	r0, [r4, #8]
   17030:	str	r5, [r4, #4]
   17034:	bl	129b8 <free@plt>
   17038:	str	r5, [r4, #8]
   1703c:	mov	r0, r4
   17040:	pop	{r3, r4, r5, lr}
   17044:	b	129b8 <free@plt>
   17048:	push	{r4, r5, r6, r7, r8, r9, lr}
   1704c:	mov	r4, r0
   17050:	sub	sp, sp, #20
   17054:	add	r0, r0, #4
   17058:	mov	r8, r2
   1705c:	mov	r7, r1
   17060:	bl	1681c <fputs@plt+0x3a2c>
   17064:	subs	r6, r0, #0
   17068:	bne	170a8 <fputs@plt+0x42b8>
   1706c:	mov	r0, #8
   17070:	ldr	r9, [r4, #4]
   17074:	bl	12aa8 <libreport_xmalloc@plt>
   17078:	mov	r5, r0
   1707c:	mov	r0, r7
   17080:	bl	12b2c <libreport_xstrdup@plt>
   17084:	str	r8, [r5, #4]
   17088:	mov	r1, r5
   1708c:	str	r0, [r5]
   17090:	mov	r0, r9
   17094:	bl	12850 <g_list_prepend@plt>
   17098:	str	r0, [r4, #4]
   1709c:	mov	r0, r6
   170a0:	add	sp, sp, #20
   170a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   170a8:	mov	r2, #0
   170ac:	str	r7, [sp, #12]
   170b0:	str	r2, [sp]
   170b4:	movw	r3, #39964	; 0x9c1c
   170b8:	str	r2, [sp, #4]
   170bc:	movt	r3, #1
   170c0:	movw	r1, #39500	; 0x9a4c
   170c4:	str	r3, [sp, #8]
   170c8:	movt	r1, #1
   170cc:	mov	r0, #7
   170d0:	movw	r2, #1070	; 0x42e
   170d4:	ldr	r3, [pc, #8]	; 170e4 <fputs@plt+0x42f4>
   170d8:	bl	12718 <log_wrapper@plt>
   170dc:	mvn	r6, #16
   170e0:	b	1709c <fputs@plt+0x42ac>
   170e4:	andeq	r9, r1, ip, lsl r9
   170e8:	push	{r4, r5, lr}
   170ec:	mov	r5, r0
   170f0:	sub	sp, sp, #20
   170f4:	mov	r0, r1
   170f8:	mov	r4, r1
   170fc:	bl	12af0 <strlen@plt>
   17100:	subs	r1, r0, #0
   17104:	beq	17130 <fputs@plt+0x4340>
   17108:	mov	r0, r4
   1710c:	movw	r2, #34304	; 0x8600
   17110:	movt	r2, #1
   17114:	bl	12820 <fmemopen@plt>
   17118:	subs	r4, r0, #0
   1711c:	beq	17140 <fputs@plt+0x4350>
   17120:	bl	16a04 <fputs@plt+0x3c14>
   17124:	str	r0, [r5]
   17128:	mov	r0, r4
   1712c:	bl	127c0 <fclose@plt>
   17130:	mov	r0, r5
   17134:	add	sp, sp, #20
   17138:	pop	{r4, r5, lr}
   1713c:	b	16898 <fputs@plt+0x3aa8>
   17140:	str	r4, [sp]
   17144:	mov	r2, #1
   17148:	mov	r0, #3
   1714c:	str	r2, [sp, #4]
   17150:	movw	r3, #40004	; 0x9c44
   17154:	movw	r2, #1131	; 0x46b
   17158:	movt	r3, #1
   1715c:	movw	r1, #39500	; 0x9a4c
   17160:	str	r3, [sp, #8]
   17164:	movt	r1, #1
   17168:	ldr	r3, [pc, #12]	; 1717c <fputs@plt+0x438c>
   1716c:	bl	12718 <log_wrapper@plt>
   17170:	mvn	r0, #11
   17174:	add	sp, sp, #20
   17178:	pop	{r4, r5, pc}
   1717c:	andeq	r9, r1, ip, lsr r9
   17180:	push	{r4, r5, r6, lr}
   17184:	movw	r4, #45712	; 0xb290
   17188:	ldrb	r3, [r1]
   1718c:	movt	r4, #2
   17190:	mov	r6, r0
   17194:	cmp	r3, #45	; 0x2d
   17198:	ldr	r5, [r4]
   1719c:	bne	171d8 <fputs@plt+0x43e8>
   171a0:	ldrb	r3, [r1, #1]
   171a4:	cmp	r3, #0
   171a8:	bne	171d8 <fputs@plt+0x43e8>
   171ac:	mov	r0, r5
   171b0:	bl	16a04 <fputs@plt+0x3c14>
   171b4:	str	r0, [r6]
   171b8:	ldr	r3, [r4]
   171bc:	cmp	r5, r3
   171c0:	beq	171cc <fputs@plt+0x43dc>
   171c4:	mov	r0, r5
   171c8:	bl	127c0 <fclose@plt>
   171cc:	mov	r0, r6
   171d0:	pop	{r4, r5, r6, lr}
   171d4:	b	16898 <fputs@plt+0x3aa8>
   171d8:	mov	r0, r1
   171dc:	movw	r1, #34304	; 0x8600
   171e0:	movt	r1, #1
   171e4:	bl	126b8 <fopen64@plt>
   171e8:	subs	r5, r0, #0
   171ec:	bne	171ac <fputs@plt+0x43bc>
   171f0:	mvn	r0, #1
   171f4:	pop	{r4, r5, r6, pc}
   171f8:	movw	ip, #45720	; 0xb298
   171fc:	movt	ip, #2
   17200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17204:	sub	sp, sp, #92	; 0x5c
   17208:	ldr	r3, [ip]
   1720c:	mov	sl, r1
   17210:	str	r0, [sp, #56]	; 0x38
   17214:	mov	r0, #16
   17218:	str	ip, [sp, #60]	; 0x3c
   1721c:	str	r3, [sp, #84]	; 0x54
   17220:	str	r2, [sp, #76]	; 0x4c
   17224:	bl	12aa8 <libreport_xmalloc@plt>
   17228:	str	r0, [sp, #44]	; 0x2c
   1722c:	bl	162d0 <fputs@plt+0x34e0>
   17230:	ldr	ip, [sp, #44]	; 0x2c
   17234:	str	r0, [ip]
   17238:	bl	162d0 <fputs@plt+0x34e0>
   1723c:	ldr	ip, [sp, #44]	; 0x2c
   17240:	mov	r3, #0
   17244:	str	r3, [ip, #8]
   17248:	str	r3, [ip, #12]
   1724c:	str	r0, [ip, #4]
   17250:	ldr	ip, [sp, #56]	; 0x38
   17254:	ldr	r4, [ip, #4]
   17258:	cmp	r4, r3
   1725c:	beq	17330 <fputs@plt+0x4540>
   17260:	movw	r6, #40148	; 0x9cd4
   17264:	ldr	r7, [sp, #44]	; 0x2c
   17268:	movt	r6, #1
   1726c:	b	172cc <fputs@plt+0x44dc>
   17270:	mov	r2, #872	; 0x368
   17274:	ldr	r3, [pc, #3160]	; 17ed4 <fputs@plt+0x50e4>
   17278:	str	r0, [sp]
   1727c:	movw	r1, #39500	; 0x9a4c
   17280:	str	r0, [sp, #4]
   17284:	movt	r1, #1
   17288:	mov	r0, #7
   1728c:	str	r5, [sp, #12]
   17290:	str	r6, [sp, #8]
   17294:	bl	12718 <log_wrapper@plt>
   17298:	mov	r0, r5
   1729c:	ldr	r8, [r7, #12]
   172a0:	bl	12b2c <libreport_xstrdup@plt>
   172a4:	mov	r5, r0
   172a8:	bl	162d0 <fputs@plt+0x34e0>
   172ac:	mov	r1, r5
   172b0:	mov	r2, r0
   172b4:	mov	r0, r8
   172b8:	bl	12c88 <g_hash_table_insert@plt>
   172bc:	ldr	r4, [r4, #4]
   172c0:	cmp	r4, #0
   172c4:	beq	17330 <fputs@plt+0x4540>
   172c8:	ldr	r3, [r7, #12]
   172cc:	ldr	r2, [r4]
   172d0:	cmp	r3, #0
   172d4:	ldr	r5, [r2]
   172d8:	beq	17d14 <fputs@plt+0x4f24>
   172dc:	mov	r0, r7
   172e0:	mov	r1, r5
   172e4:	bl	16d00 <fputs@plt+0x3f10>
   172e8:	cmp	r0, #0
   172ec:	beq	17270 <fputs@plt+0x4480>
   172f0:	mov	r2, #0
   172f4:	str	r5, [sp, #12]
   172f8:	str	r2, [sp]
   172fc:	movw	r3, #40108	; 0x9cac
   17300:	str	r2, [sp, #4]
   17304:	movt	r3, #1
   17308:	movw	r1, #39500	; 0x9a4c
   1730c:	str	r3, [sp, #8]
   17310:	movt	r1, #1
   17314:	mov	r0, #4
   17318:	mov	r2, #868	; 0x364
   1731c:	ldr	r3, [pc, #2992]	; 17ed4 <fputs@plt+0x50e4>
   17320:	bl	12718 <log_wrapper@plt>
   17324:	ldr	r4, [r4, #4]
   17328:	cmp	r4, #0
   1732c:	bne	172c8 <fputs@plt+0x44d8>
   17330:	ldr	ip, [sp, #56]	; 0x38
   17334:	ldr	ip, [ip]
   17338:	cmp	ip, #0
   1733c:	str	ip, [sp, #52]	; 0x34
   17340:	beq	17e28 <fputs@plt+0x5038>
   17344:	movw	ip, #40896	; 0x9fc0
   17348:	movt	ip, #1
   1734c:	str	ip, [sp, #64]	; 0x40
   17350:	movw	ip, #40492	; 0x9e2c
   17354:	movt	ip, #1
   17358:	str	ip, [sp, #68]	; 0x44
   1735c:	mov	ip, #0
   17360:	str	ip, [sp, #72]	; 0x48
   17364:	ldr	ip, [sp, #52]	; 0x34
   17368:	movw	r1, #39836	; 0x9b9c
   1736c:	movt	r1, #1
   17370:	ldr	r4, [ip]
   17374:	ldr	r5, [r4]
   17378:	mov	r0, r5
   1737c:	bl	12c28 <strcmp@plt>
   17380:	cmp	r0, #0
   17384:	beq	17c08 <fputs@plt+0x4e18>
   17388:	movw	r1, #39848	; 0x9ba8
   1738c:	mov	r0, r5
   17390:	movt	r1, #1
   17394:	bl	12c28 <strcmp@plt>
   17398:	cmp	r0, #0
   1739c:	bne	17694 <fputs@plt+0x48a4>
   173a0:	ldr	fp, [r4, #4]
   173a4:	ldr	ip, [sp, #56]	; 0x38
   173a8:	cmp	fp, #0
   173ac:	ldr	r8, [ip]
   173b0:	beq	17d40 <fputs@plt+0x4f50>
   173b4:	movw	ip, #40424	; 0x9de8
   173b8:	mov	r9, r0
   173bc:	movt	ip, #1
   173c0:	str	ip, [sp, #32]
   173c4:	b	173e8 <fputs@plt+0x45f8>
   173c8:	mov	r0, r5
   173cc:	bl	12b2c <libreport_xstrdup@plt>
   173d0:	mov	r1, r0
   173d4:	mov	r0, r9
   173d8:	bl	12b44 <g_list_append@plt>
   173dc:	mov	r9, r0
   173e0:	cmp	fp, #0
   173e4:	beq	175c8 <fputs@plt+0x47d8>
   173e8:	ldm	fp, {r5, fp}
   173ec:	ldrb	r3, [r5]
   173f0:	cmp	r3, #45	; 0x2d
   173f4:	beq	173e0 <fputs@plt+0x45f0>
   173f8:	cmp	r3, #37	; 0x25
   173fc:	bne	173c8 <fputs@plt+0x45d8>
   17400:	add	r4, r5, #1
   17404:	movw	r1, #40268	; 0x9d4c
   17408:	movt	r1, #1
   1740c:	mov	r0, r4
   17410:	bl	12c28 <strcmp@plt>
   17414:	movw	r1, #40276	; 0x9d54
   17418:	movt	r1, #1
   1741c:	rsbs	r0, r0, #1
   17420:	movcc	r0, #0
   17424:	str	r0, [sp, #24]
   17428:	mov	r0, r4
   1742c:	bl	12c28 <strcmp@plt>
   17430:	movw	r1, #32944	; 0x80b0
   17434:	movt	r1, #1
   17438:	mov	r6, r0
   1743c:	mov	r0, r4
   17440:	bl	12c28 <strcmp@plt>
   17444:	movw	r1, #32972	; 0x80cc
   17448:	movt	r1, #1
   1744c:	rsbs	r0, r0, #1
   17450:	movcc	r0, #0
   17454:	str	r0, [sp, #28]
   17458:	mov	r0, r4
   1745c:	bl	12c28 <strcmp@plt>
   17460:	ldr	ip, [sp, #24]
   17464:	eor	r3, ip, #1
   17468:	cmp	r6, #0
   1746c:	moveq	r3, #0
   17470:	andne	r3, r3, #1
   17474:	rsbs	r6, r0, #1
   17478:	movcc	r6, #0
   1747c:	cmp	r3, #0
   17480:	beq	17498 <fputs@plt+0x46a8>
   17484:	ldr	ip, [sp, #28]
   17488:	eor	r3, r6, #1
   1748c:	eor	r2, ip, #1
   17490:	tst	r2, r3
   17494:	bne	17c3c <fputs@plt+0x4e4c>
   17498:	movw	r2, #659	; 0x293
   1749c:	mov	r7, #0
   174a0:	mov	r0, #7
   174a4:	str	r5, [sp, #12]
   174a8:	movw	r3, #40336	; 0x9d90
   174ac:	str	r7, [sp]
   174b0:	movt	r3, #1
   174b4:	movw	r1, #39500	; 0x9a4c
   174b8:	str	r3, [sp, #8]
   174bc:	movt	r1, #1
   174c0:	ldr	r3, [pc, #2576]	; 17ed8 <fputs@plt+0x50e8>
   174c4:	str	r7, [sp, #4]
   174c8:	bl	12718 <log_wrapper@plt>
   174cc:	mov	r0, sl
   174d0:	bl	12c40 <g_hash_table_get_keys@plt>
   174d4:	movw	r1, #11304	; 0x2c28
   174d8:	movt	r1, #1
   174dc:	bl	12844 <g_list_sort@plt>
   174e0:	subs	r2, r0, #0
   174e4:	str	r2, [sp, #20]
   174e8:	beq	17cd8 <fputs@plt+0x4ee8>
   174ec:	str	r5, [sp, #36]	; 0x24
   174f0:	mov	r5, r2
   174f4:	str	r7, [sp, #16]
   174f8:	ldr	r4, [r5]
   174fc:	mov	r0, sl
   17500:	ldr	r5, [r5, #4]
   17504:	mov	r1, r4
   17508:	bl	12cd0 <g_hash_table_lookup@plt>
   1750c:	subs	r7, r0, #0
   17510:	beq	1755c <fputs@plt+0x476c>
   17514:	mov	r0, r4
   17518:	mov	r1, r8
   1751c:	bl	16240 <fputs@plt+0x3450>
   17520:	cmp	r0, #0
   17524:	bne	1755c <fputs@plt+0x476c>
   17528:	ldr	r1, [r7, #4]
   1752c:	tst	r1, #2
   17530:	beq	1762c <fputs@plt+0x483c>
   17534:	cmp	r6, #0
   17538:	beq	17648 <fputs@plt+0x4858>
   1753c:	tst	r1, #1
   17540:	beq	1755c <fputs@plt+0x476c>
   17544:	mov	r0, r4
   17548:	bl	12b2c <libreport_xstrdup@plt>
   1754c:	mov	r1, r0
   17550:	ldr	r0, [sp, #16]
   17554:	bl	12b44 <g_list_append@plt>
   17558:	str	r0, [sp, #16]
   1755c:	cmp	r5, #0
   17560:	bne	174f8 <fputs@plt+0x4708>
   17564:	mov	r7, r5
   17568:	ldr	r5, [sp, #36]	; 0x24
   1756c:	ldr	r0, [sp, #20]
   17570:	bl	129dc <g_list_free@plt>
   17574:	str	r7, [sp]
   17578:	str	r7, [sp, #4]
   1757c:	movw	r3, #40384	; 0x9dc0
   17580:	str	r5, [sp, #12]
   17584:	movt	r3, #1
   17588:	movw	r1, #39500	; 0x9a4c
   1758c:	str	r3, [sp, #8]
   17590:	movt	r1, #1
   17594:	mov	r0, #7
   17598:	movw	r2, #693	; 0x2b5
   1759c:	ldr	r3, [pc, #2356]	; 17ed8 <fputs@plt+0x50e8>
   175a0:	bl	12718 <log_wrapper@plt>
   175a4:	ldr	ip, [sp, #16]
   175a8:	cmp	ip, #0
   175ac:	beq	17c70 <fputs@plt+0x4e80>
   175b0:	mov	r0, r9
   175b4:	ldr	r1, [sp, #16]
   175b8:	bl	12db4 <g_list_concat@plt>
   175bc:	cmp	fp, #0
   175c0:	mov	r9, r0
   175c4:	bne	173e8 <fputs@plt+0x45f8>
   175c8:	ldr	ip, [sp, #44]	; 0x2c
   175cc:	ldr	r3, [ip, #8]
   175d0:	cmp	r3, #0
   175d4:	bne	17d54 <fputs@plt+0x4f64>
   175d8:	ldr	ip, [sp, #44]	; 0x2c
   175dc:	str	r9, [ip, #8]
   175e0:	ldr	ip, [sp, #52]	; 0x34
   175e4:	ldr	ip, [ip, #4]
   175e8:	cmp	ip, #0
   175ec:	str	ip, [sp, #52]	; 0x34
   175f0:	bne	17364 <fputs@plt+0x4574>
   175f4:	ldr	ip, [sp, #72]	; 0x48
   175f8:	cmp	ip, #0
   175fc:	beq	17e28 <fputs@plt+0x5038>
   17600:	ldr	ip, [sp, #44]	; 0x2c
   17604:	mov	r0, #0
   17608:	ldr	r1, [sp, #76]	; 0x4c
   1760c:	ldr	r2, [sp, #84]	; 0x54
   17610:	str	ip, [r1]
   17614:	ldr	ip, [sp, #60]	; 0x3c
   17618:	ldr	r3, [ip]
   1761c:	cmp	r2, r3
   17620:	bne	17e90 <fputs@plt+0x50a0>
   17624:	add	sp, sp, #92	; 0x5c
   17628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1762c:	tst	r1, #1
   17630:	beq	1755c <fputs@plt+0x476c>
   17634:	cmp	r6, #0
   17638:	bne	17544 <fputs@plt+0x4754>
   1763c:	cmp	r5, #0
   17640:	bne	174f8 <fputs@plt+0x4708>
   17644:	b	17564 <fputs@plt+0x4774>
   17648:	ldr	r0, [r7]
   1764c:	mov	r1, #10
   17650:	bl	12790 <strchrnul@plt>
   17654:	ldrb	r2, [r0]
   17658:	cmp	r2, #0
   1765c:	moveq	r2, #1
   17660:	beq	17670 <fputs@plt+0x4880>
   17664:	ldrb	r2, [r0, #1]
   17668:	rsbs	r2, r2, #1
   1766c:	movcc	r2, #0
   17670:	ldr	ip, [sp, #28]
   17674:	ldr	r1, [sp, #24]
   17678:	cmp	r1, r2
   1767c:	orreq	ip, ip, #1
   17680:	cmp	ip, #0
   17684:	bne	17544 <fputs@plt+0x4754>
   17688:	cmp	r5, #0
   1768c:	bne	174f8 <fputs@plt+0x4708>
   17690:	b	17564 <fputs@plt+0x4774>
   17694:	add	r1, r5, #1
   17698:	ldr	r0, [sp, #44]	; 0x2c
   1769c:	bl	16d00 <fputs@plt+0x3f10>
   176a0:	cmp	r0, #0
   176a4:	str	r0, [sp, #48]	; 0x30
   176a8:	beq	17dc0 <fputs@plt+0x4fd0>
   176ac:	ldr	ip, [sp, #68]	; 0x44
   176b0:	mov	r3, #0
   176b4:	str	r3, [sp]
   176b8:	movw	r1, #39500	; 0x9a4c
   176bc:	str	r3, [sp, #4]
   176c0:	movt	r1, #1
   176c4:	str	ip, [sp, #8]
   176c8:	mov	r0, #7
   176cc:	ldr	ip, [r4]
   176d0:	movw	r2, #1193	; 0x4a9
   176d4:	ldr	r3, [pc, #2048]	; 17edc <fputs@plt+0x50ec>
   176d8:	str	ip, [sp, #12]
   176dc:	bl	12718 <log_wrapper@plt>
   176e0:	ldr	r4, [r4, #8]
   176e4:	ldr	ip, [sp, #56]	; 0x38
   176e8:	cmp	r4, #0
   176ec:	str	r4, [sp, #28]
   176f0:	ldr	fp, [ip]
   176f4:	beq	175e0 <fputs@plt+0x47f0>
   176f8:	mvn	ip, #0
   176fc:	str	ip, [sp, #36]	; 0x24
   17700:	ldr	ip, [sp, #28]
   17704:	ldr	ip, [ip]
   17708:	ldr	r3, [ip, #4]
   1770c:	str	ip, [sp, #32]
   17710:	cmp	r3, #0
   17714:	beq	17b08 <fputs@plt+0x4d18>
   17718:	bl	12a90 <libreport_strbuf_new@plt>
   1771c:	ldr	ip, [sp, #32]
   17720:	ldr	r7, [ip, #4]
   17724:	str	r0, [sp, #24]
   17728:	cmp	r7, #0
   1772c:	beq	177c4 <fputs@plt+0x49d4>
   17730:	ldm	r7, {r4, r7}
   17734:	ldrb	r5, [r4]
   17738:	cmp	r5, #45	; 0x2d
   1773c:	beq	17728 <fputs@plt+0x4938>
   17740:	mov	r0, r4
   17744:	movw	r1, #39440	; 0x9a10
   17748:	mov	r2, #6
   1774c:	movt	r1, #1
   17750:	bl	12814 <strncmp@plt>
   17754:	adds	r0, r0, #0
   17758:	movne	r0, #1
   1775c:	cmp	r0, #0
   17760:	str	r0, [sp, #20]
   17764:	ldrbeq	r5, [r4, #6]
   17768:	addeq	r4, r4, #6
   1776c:	cmp	r5, #37	; 0x25
   17770:	beq	17860 <fputs@plt+0x4a70>
   17774:	mov	r0, sl
   17778:	mov	r1, r4
   1777c:	bl	12cd0 <g_hash_table_lookup@plt>
   17780:	subs	r5, r0, #0
   17784:	beq	17728 <fputs@plt+0x4938>
   17788:	ldr	r3, [r5, #4]
   1778c:	tst	r3, #2
   17790:	beq	17728 <fputs@plt+0x4938>
   17794:	bl	127f0 <problem_item_format@plt>
   17798:	mov	r1, r4
   1779c:	ldr	r3, [sp, #20]
   177a0:	subs	r6, r0, #0
   177a4:	ldr	r0, [sp, #24]
   177a8:	ldreq	r2, [r5]
   177ac:	movne	r2, r6
   177b0:	bl	16340 <fputs@plt+0x3550>
   177b4:	mov	r0, r6
   177b8:	bl	129b8 <free@plt>
   177bc:	cmp	r7, #0
   177c0:	bne	17730 <fputs@plt+0x4940>
   177c4:	ldr	ip, [sp, #24]
   177c8:	ldr	r3, [ip, #4]
   177cc:	cmp	r3, #0
   177d0:	beq	17840 <fputs@plt+0x4a50>
   177d4:	ldr	ip, [sp, #36]	; 0x24
   177d8:	cmp	ip, #0
   177dc:	ble	177fc <fputs@plt+0x4a0c>
   177e0:	ldr	r5, [sp, #48]	; 0x30
   177e4:	ldr	r4, [sp, #36]	; 0x24
   177e8:	mov	r0, #10
   177ec:	mov	r1, r5
   177f0:	bl	12838 <fputc@plt>
   177f4:	subs	r4, r4, #1
   177f8:	bne	177e8 <fputs@plt+0x49f8>
   177fc:	ldr	ip, [sp, #32]
   17800:	movw	r1, #33796	; 0x8404
   17804:	movt	r1, #1
   17808:	movw	r2, #40100	; 0x9ca4
   1780c:	movt	r2, #1
   17810:	ldr	r3, [ip]
   17814:	ldr	ip, [sp, #24]
   17818:	ldr	r0, [ip, #8]
   1781c:	ldrb	ip, [r3]
   17820:	cmp	ip, #0
   17824:	str	r0, [sp]
   17828:	ldr	r0, [sp, #48]	; 0x30
   1782c:	moveq	r2, r1
   17830:	mov	r1, #1
   17834:	bl	12d00 <__fprintf_chk@plt>
   17838:	mov	ip, #0
   1783c:	str	ip, [sp, #36]	; 0x24
   17840:	ldr	r0, [sp, #24]
   17844:	bl	12cdc <libreport_strbuf_free@plt>
   17848:	ldr	ip, [sp, #28]
   1784c:	ldr	ip, [ip, #4]
   17850:	cmp	ip, #0
   17854:	str	ip, [sp, #28]
   17858:	bne	17700 <fputs@plt+0x4910>
   1785c:	b	175e0 <fputs@plt+0x47f0>
   17860:	movw	r1, #40520	; 0x9e48
   17864:	mov	r0, r4
   17868:	movt	r1, #1
   1786c:	bl	12c28 <strcmp@plt>
   17870:	subs	r5, r0, #0
   17874:	beq	17a00 <fputs@plt+0x4c10>
   17878:	movw	r1, #40852	; 0x9f94
   1787c:	mov	r0, r4
   17880:	movt	r1, #1
   17884:	bl	12c28 <strcmp@plt>
   17888:	cmp	r0, #0
   1788c:	beq	17b6c <fputs@plt+0x4d7c>
   17890:	add	r5, r4, #1
   17894:	movw	r1, #40268	; 0x9d4c
   17898:	movt	r1, #1
   1789c:	mov	r0, r5
   178a0:	bl	12c28 <strcmp@plt>
   178a4:	movw	r1, #40276	; 0x9d54
   178a8:	movt	r1, #1
   178ac:	rsbs	r6, r0, #1
   178b0:	mov	r0, r5
   178b4:	movcc	r6, #0
   178b8:	bl	12c28 <strcmp@plt>
   178bc:	movw	r1, #32944	; 0x80b0
   178c0:	movt	r1, #1
   178c4:	mov	r8, r0
   178c8:	mov	r0, r5
   178cc:	bl	12c28 <strcmp@plt>
   178d0:	eor	r3, r6, #1
   178d4:	cmp	r8, #0
   178d8:	moveq	r8, #0
   178dc:	andne	r8, r3, #1
   178e0:	rsbs	r0, r0, #1
   178e4:	movcc	r0, #0
   178e8:	cmp	r8, #0
   178ec:	str	r0, [sp, #16]
   178f0:	beq	17af4 <fputs@plt+0x4d04>
   178f4:	cmp	r0, #0
   178f8:	movne	r0, sl
   178fc:	movne	r6, #1
   17900:	beq	17b8c <fputs@plt+0x4d9c>
   17904:	bl	12c40 <g_hash_table_get_keys@plt>
   17908:	movw	r1, #11304	; 0x2c28
   1790c:	movt	r1, #1
   17910:	bl	12844 <g_list_sort@plt>
   17914:	str	r7, [sp, #40]	; 0x28
   17918:	mov	r8, r0
   1791c:	cmp	r8, #0
   17920:	movne	r4, r8
   17924:	bne	17934 <fputs@plt+0x4b44>
   17928:	b	179c4 <fputs@plt+0x4bd4>
   1792c:	cmp	r4, #0
   17930:	beq	179c4 <fputs@plt+0x4bd4>
   17934:	ldr	r5, [r4]
   17938:	mov	r0, sl
   1793c:	ldr	r4, [r4, #4]
   17940:	mov	r1, r5
   17944:	bl	12cd0 <g_hash_table_lookup@plt>
   17948:	subs	r7, r0, #0
   1794c:	beq	1792c <fputs@plt+0x4b3c>
   17950:	ldr	r3, [r7, #4]
   17954:	tst	r3, #2
   17958:	beq	1792c <fputs@plt+0x4b3c>
   1795c:	mov	r0, r5
   17960:	mov	r1, fp
   17964:	bl	16240 <fputs@plt+0x3450>
   17968:	cmp	r0, #0
   1796c:	bne	1792c <fputs@plt+0x4b3c>
   17970:	mov	r0, r7
   17974:	bl	127f0 <problem_item_format@plt>
   17978:	mov	r1, #10
   1797c:	subs	r9, r0, #0
   17980:	ldreq	r7, [r7]
   17984:	movne	r7, r9
   17988:	mov	r0, r7
   1798c:	bl	12790 <strchrnul@plt>
   17990:	ldrb	r3, [r0]
   17994:	cmp	r3, #0
   17998:	moveq	r3, #1
   1799c:	beq	179ac <fputs@plt+0x4bbc>
   179a0:	ldrb	r3, [r0, #1]
   179a4:	rsbs	r3, r3, #1
   179a8:	movcc	r3, #0
   179ac:	cmp	r6, r3
   179b0:	beq	179d8 <fputs@plt+0x4be8>
   179b4:	mov	r0, r9
   179b8:	bl	129b8 <free@plt>
   179bc:	cmp	r4, #0
   179c0:	bne	17934 <fputs@plt+0x4b44>
   179c4:	ldr	ip, [sp, #16]
   179c8:	tst	r6, ip
   179cc:	beq	179f0 <fputs@plt+0x4c00>
   179d0:	mov	r6, #0
   179d4:	b	1791c <fputs@plt+0x4b2c>
   179d8:	mov	r1, r5
   179dc:	mov	r2, r7
   179e0:	ldr	r0, [sp, #24]
   179e4:	ldr	r3, [sp, #20]
   179e8:	bl	16340 <fputs@plt+0x3550>
   179ec:	b	179b4 <fputs@plt+0x4bc4>
   179f0:	mov	r0, r8
   179f4:	ldr	r7, [sp, #40]	; 0x28
   179f8:	bl	129dc <g_list_free@plt>
   179fc:	b	17728 <fputs@plt+0x4938>
   17a00:	movw	r1, #40088	; 0x9c98
   17a04:	mov	r0, sl
   17a08:	movt	r1, #1
   17a0c:	bl	12cd0 <g_hash_table_lookup@plt>
   17a10:	subs	r4, r0, #0
   17a14:	beq	17728 <fputs@plt+0x4938>
   17a18:	ldr	r3, [r4, #4]
   17a1c:	tst	r3, #2
   17a20:	beq	17728 <fputs@plt+0x4938>
   17a24:	ldr	r0, [r4]
   17a28:	bl	12af0 <strlen@plt>
   17a2c:	str	r5, [sp]
   17a30:	cmp	r0, #4096	; 0x1000
   17a34:	bcc	17bd0 <fputs@plt+0x4de0>
   17a38:	str	r5, [sp, #4]
   17a3c:	mov	r0, #7
   17a40:	mov	r2, #452	; 0x1c4
   17a44:	movw	r3, #40540	; 0x9e5c
   17a48:	movw	r1, #39500	; 0x9a4c
   17a4c:	movt	r3, #1
   17a50:	movt	r1, #1
   17a54:	str	r3, [sp, #8]
   17a58:	ldr	r3, [pc, #1152]	; 17ee0 <fputs@plt+0x50f0>
   17a5c:	bl	12718 <log_wrapper@plt>
   17a60:	movw	r1, #40704	; 0x9f00
   17a64:	mov	r0, sl
   17a68:	movt	r1, #1
   17a6c:	str	r5, [sp, #80]	; 0x50
   17a70:	bl	12ce8 <problem_data_get_content_or_NULL@plt>
   17a74:	subs	r5, r0, #0
   17a78:	beq	17df8 <fputs@plt+0x5008>
   17a7c:	bl	12dc0 <sr_abrt_type_from_analyzer@plt>
   17a80:	movw	r1, #40660	; 0x9ed4
   17a84:	movt	r1, #1
   17a88:	mov	r6, r0
   17a8c:	mov	r0, r5
   17a90:	bl	12c28 <strcmp@plt>
   17a94:	cmp	r0, #0
   17a98:	beq	17ca4 <fputs@plt+0x4eb4>
   17a9c:	ldr	r1, [r4]
   17aa0:	mov	r0, r6
   17aa4:	add	r2, sp, #80	; 0x50
   17aa8:	bl	127fc <sr_stacktrace_parse@plt>
   17aac:	subs	r4, r0, #0
   17ab0:	beq	17d70 <fputs@plt+0x4f80>
   17ab4:	mov	r1, #10
   17ab8:	bl	12940 <sr_stacktrace_to_short_text@plt>
   17abc:	mov	r5, r0
   17ac0:	mov	r0, r4
   17ac4:	bl	12d9c <sr_stacktrace_free@plt>
   17ac8:	cmp	r5, #0
   17acc:	movwne	r1, #40068	; 0x9c84
   17ad0:	movne	r2, r5
   17ad4:	movtne	r1, #1
   17ad8:	beq	17e94 <fputs@plt+0x50a4>
   17adc:	ldr	r3, [sp, #20]
   17ae0:	ldr	r0, [sp, #24]
   17ae4:	bl	16340 <fputs@plt+0x3550>
   17ae8:	mov	r0, r5
   17aec:	bl	129b8 <free@plt>
   17af0:	b	17728 <fputs@plt+0x4938>
   17af4:	ldr	ip, [sp, #16]
   17af8:	mov	r0, sl
   17afc:	cmp	ip, #0
   17b00:	movne	r6, #1
   17b04:	b	17904 <fputs@plt+0x4b14>
   17b08:	ldr	ip, [sp, #32]
   17b0c:	ldr	r3, [ip]
   17b10:	ldr	ip, [sp, #36]	; 0x24
   17b14:	ldrb	r2, [r3]
   17b18:	cmp	r2, #0
   17b1c:	beq	17bc0 <fputs@plt+0x4dd0>
   17b20:	cmp	ip, #0
   17b24:	ble	17b4c <fputs@plt+0x4d5c>
   17b28:	ldr	r5, [sp, #48]	; 0x30
   17b2c:	mov	r4, ip
   17b30:	mov	r0, #10
   17b34:	mov	r1, r5
   17b38:	bl	12838 <fputc@plt>
   17b3c:	subs	r4, r4, #1
   17b40:	bne	17b30 <fputs@plt+0x4d40>
   17b44:	ldr	ip, [sp, #32]
   17b48:	ldr	r3, [ip]
   17b4c:	movw	r2, #39472	; 0x9a30
   17b50:	ldr	r0, [sp, #48]	; 0x30
   17b54:	movt	r2, #1
   17b58:	mov	r1, #1
   17b5c:	mov	ip, #0
   17b60:	str	ip, [sp, #36]	; 0x24
   17b64:	bl	12d00 <__fprintf_chk@plt>
   17b68:	b	17848 <fputs@plt+0x4a58>
   17b6c:	ldr	r3, [sp, #20]
   17b70:	movw	r1, #40864	; 0x9fa0
   17b74:	movw	r2, #40876	; 0x9fac
   17b78:	movt	r1, #1
   17b7c:	movt	r2, #1
   17b80:	ldr	r0, [sp, #24]
   17b84:	bl	16340 <fputs@plt+0x3550>
   17b88:	b	17728 <fputs@plt+0x4938>
   17b8c:	str	r0, [sp]
   17b90:	movw	r3, #40288	; 0x9d60
   17b94:	str	r0, [sp, #4]
   17b98:	movt	r3, #1
   17b9c:	str	r4, [sp, #12]
   17ba0:	movw	r1, #39500	; 0x9a4c
   17ba4:	str	r3, [sp, #8]
   17ba8:	movt	r1, #1
   17bac:	mov	r0, #4
   17bb0:	movw	r2, #545	; 0x221
   17bb4:	ldr	r3, [pc, #808]	; 17ee4 <fputs@plt+0x50f4>
   17bb8:	bl	12718 <log_wrapper@plt>
   17bbc:	b	17728 <fputs@plt+0x4938>
   17bc0:	cmn	ip, #1
   17bc4:	addne	ip, ip, #1
   17bc8:	strne	ip, [sp, #36]	; 0x24
   17bcc:	b	17848 <fputs@plt+0x4a58>
   17bd0:	movw	r2, #495	; 0x1ef
   17bd4:	movw	r3, #40800	; 0x9f60
   17bd8:	str	r5, [sp, #4]
   17bdc:	movt	r3, #1
   17be0:	movw	r1, #39500	; 0x9a4c
   17be4:	str	r3, [sp, #8]
   17be8:	movt	r1, #1
   17bec:	mov	r0, #7
   17bf0:	ldr	r3, [pc, #744]	; 17ee0 <fputs@plt+0x50f0>
   17bf4:	bl	12718 <log_wrapper@plt>
   17bf8:	movw	r1, #40088	; 0x9c98
   17bfc:	ldr	r2, [r4]
   17c00:	movt	r1, #1
   17c04:	b	17adc <fputs@plt+0x4cec>
   17c08:	ldr	r3, [r4, #4]
   17c0c:	movw	r1, #33024	; 0x8100
   17c10:	ldr	r0, [sp, #44]	; 0x2c
   17c14:	movt	r1, #1
   17c18:	mov	ip, #1
   17c1c:	str	ip, [sp, #72]	; 0x48
   17c20:	ldr	r4, [r3]
   17c24:	bl	16d00 <fputs@plt+0x3f10>
   17c28:	mov	r1, sl
   17c2c:	mov	r2, r0
   17c30:	mov	r0, r4
   17c34:	bl	164b0 <fputs@plt+0x36c0>
   17c38:	b	175e0 <fputs@plt+0x47f0>
   17c3c:	mov	r2, #0
   17c40:	movw	r3, #40288	; 0x9d60
   17c44:	str	r2, [sp]
   17c48:	movt	r3, #1
   17c4c:	movw	r1, #39500	; 0x9a4c
   17c50:	str	r3, [sp, #8]
   17c54:	str	r2, [sp, #4]
   17c58:	movt	r1, #1
   17c5c:	str	r5, [sp, #12]
   17c60:	mov	r0, #4
   17c64:	movw	r2, #655	; 0x28f
   17c68:	ldr	r3, [pc, #616]	; 17ed8 <fputs@plt+0x50e8>
   17c6c:	bl	12718 <log_wrapper@plt>
   17c70:	ldr	ip, [sp, #32]
   17c74:	mov	r3, #0
   17c78:	str	r5, [sp, #12]
   17c7c:	movw	r1, #39500	; 0x9a4c
   17c80:	str	r3, [sp]
   17c84:	movt	r1, #1
   17c88:	str	r3, [sp, #4]
   17c8c:	mov	r0, #5
   17c90:	str	ip, [sp, #8]
   17c94:	movw	r2, #719	; 0x2cf
   17c98:	ldr	r3, [pc, #584]	; 17ee8 <fputs@plt+0x50f8>
   17c9c:	bl	12718 <log_wrapper@plt>
   17ca0:	b	173e0 <fputs@plt+0x45f0>
   17ca4:	str	r0, [sp]
   17ca8:	movw	r3, #40668	; 0x9edc
   17cac:	str	r0, [sp, #4]
   17cb0:	movt	r3, #1
   17cb4:	movw	r1, #39500	; 0x9a4c
   17cb8:	str	r3, [sp, #8]
   17cbc:	movt	r1, #1
   17cc0:	mov	r0, #7
   17cc4:	movw	r2, #469	; 0x1d5
   17cc8:	ldr	r3, [pc, #528]	; 17ee0 <fputs@plt+0x50f0>
   17ccc:	bl	12718 <log_wrapper@plt>
   17cd0:	mov	r6, #5
   17cd4:	b	17a9c <fputs@plt+0x4cac>
   17cd8:	bl	129dc <g_list_free@plt>
   17cdc:	ldr	r2, [sp, #20]
   17ce0:	movw	r3, #40384	; 0x9dc0
   17ce4:	str	r5, [sp, #12]
   17ce8:	movt	r3, #1
   17cec:	movw	r1, #39500	; 0x9a4c
   17cf0:	str	r2, [sp]
   17cf4:	movt	r1, #1
   17cf8:	str	r2, [sp, #4]
   17cfc:	mov	r0, #7
   17d00:	str	r3, [sp, #8]
   17d04:	movw	r2, #693	; 0x2b5
   17d08:	ldr	r3, [pc, #456]	; 17ed8 <fputs@plt+0x50e8>
   17d0c:	bl	12718 <log_wrapper@plt>
   17d10:	b	17c70 <fputs@plt+0x4e80>
   17d14:	movw	r0, #10884	; 0x2a84
   17d18:	movw	r1, #10596	; 0x2964
   17d1c:	movt	r0, #1
   17d20:	movt	r1, #1
   17d24:	movw	r2, #10680	; 0x29b8
   17d28:	movw	r3, #25096	; 0x6208
   17d2c:	movt	r2, #1
   17d30:	movt	r3, #1
   17d34:	bl	12880 <g_hash_table_new_full@plt>
   17d38:	str	r0, [r7, #12]
   17d3c:	b	172dc <fputs@plt+0x44ec>
   17d40:	ldr	ip, [sp, #44]	; 0x2c
   17d44:	mov	r9, fp
   17d48:	ldr	r3, [ip, #8]
   17d4c:	cmp	r3, #0
   17d50:	beq	175d8 <fputs@plt+0x47e8>
   17d54:	movw	r0, #40456	; 0x9e08
   17d58:	movw	r1, #39500	; 0x9a4c
   17d5c:	movt	r0, #1
   17d60:	movt	r1, #1
   17d64:	movw	r2, #939	; 0x3ab
   17d68:	ldr	r3, [pc, #380]	; 17eec <fputs@plt+0x50fc>
   17d6c:	bl	12868 <__assert_fail@plt>
   17d70:	mov	r2, #5
   17d74:	movw	r0, #33148	; 0x817c
   17d78:	movw	r1, #40712	; 0x9f08
   17d7c:	movt	r0, #1
   17d80:	movt	r1, #1
   17d84:	bl	127b4 <dcgettext@plt>
   17d88:	ldr	r3, [sp, #80]	; 0x50
   17d8c:	str	r4, [sp]
   17d90:	movw	r2, #478	; 0x1de
   17d94:	str	r4, [sp, #4]
   17d98:	movw	r1, #39500	; 0x9a4c
   17d9c:	str	r3, [sp, #12]
   17da0:	movt	r1, #1
   17da4:	ldr	r3, [pc, #308]	; 17ee0 <fputs@plt+0x50f0>
   17da8:	str	r0, [sp, #8]
   17dac:	mov	r0, #4
   17db0:	bl	12718 <log_wrapper@plt>
   17db4:	ldr	r0, [sp, #80]	; 0x50
   17db8:	bl	129b8 <free@plt>
   17dbc:	b	17728 <fputs@plt+0x4938>
   17dc0:	ldr	ip, [sp, #48]	; 0x30
   17dc4:	movw	r1, #39500	; 0x9a4c
   17dc8:	mov	r0, #4
   17dcc:	movt	r1, #1
   17dd0:	movw	r2, #1197	; 0x4ad
   17dd4:	ldr	r3, [pc, #256]	; 17edc <fputs@plt+0x50ec>
   17dd8:	str	ip, [sp]
   17ddc:	str	ip, [sp, #4]
   17de0:	ldr	ip, [sp, #64]	; 0x40
   17de4:	str	ip, [sp, #8]
   17de8:	ldr	ip, [r4]
   17dec:	str	ip, [sp, #12]
   17df0:	bl	12718 <log_wrapper@plt>
   17df4:	b	175e0 <fputs@plt+0x47f0>
   17df8:	str	r5, [sp]
   17dfc:	movw	r3, #40616	; 0x9ea8
   17e00:	str	r5, [sp, #4]
   17e04:	movt	r3, #1
   17e08:	movw	r1, #39500	; 0x9a4c
   17e0c:	str	r3, [sp, #8]
   17e10:	movt	r1, #1
   17e14:	mov	r0, #7
   17e18:	movw	r2, #458	; 0x1ca
   17e1c:	ldr	r3, [pc, #188]	; 17ee0 <fputs@plt+0x50f0>
   17e20:	bl	12718 <log_wrapper@plt>
   17e24:	b	17728 <fputs@plt+0x4938>
   17e28:	mov	r2, #0
   17e2c:	str	r2, [sp]
   17e30:	str	r2, [sp, #4]
   17e34:	movw	r3, #40192	; 0x9d00
   17e38:	ldr	r2, [sp, #56]	; 0x38
   17e3c:	movt	r3, #1
   17e40:	str	r3, [sp, #8]
   17e44:	mov	r0, #7
   17e48:	ldr	r3, [pc, #140]	; 17edc <fputs@plt+0x50ec>
   17e4c:	movw	r1, #39500	; 0x9a4c
   17e50:	ldr	ip, [r2, #8]
   17e54:	movt	r1, #1
   17e58:	movw	r2, #1203	; 0x4b3
   17e5c:	str	ip, [sp, #12]
   17e60:	bl	12718 <log_wrapper@plt>
   17e64:	ldr	ip, [sp, #56]	; 0x38
   17e68:	ldr	r0, [sp, #44]	; 0x2c
   17e6c:	movw	r1, #33024	; 0x8100
   17e70:	movt	r1, #1
   17e74:	ldr	r4, [ip, #8]
   17e78:	bl	16d00 <fputs@plt+0x3f10>
   17e7c:	mov	r1, sl
   17e80:	mov	r2, r0
   17e84:	mov	r0, r4
   17e88:	bl	164b0 <fputs@plt+0x36c0>
   17e8c:	b	17600 <fputs@plt+0x4810>
   17e90:	bl	12874 <__stack_chk_fail@plt>
   17e94:	mov	r2, #5
   17e98:	movw	r0, #33148	; 0x817c
   17e9c:	movw	r1, #40740	; 0x9f24
   17ea0:	movt	r0, #1
   17ea4:	movt	r1, #1
   17ea8:	bl	127b4 <dcgettext@plt>
   17eac:	str	r5, [sp]
   17eb0:	str	r5, [sp, #4]
   17eb4:	movw	r1, #39500	; 0x9a4c
   17eb8:	movw	r2, #489	; 0x1e9
   17ebc:	movt	r1, #1
   17ec0:	ldr	r3, [pc, #24]	; 17ee0 <fputs@plt+0x50f0>
   17ec4:	str	r0, [sp, #8]
   17ec8:	mov	r0, #4
   17ecc:	bl	12718 <log_wrapper@plt>
   17ed0:	b	17728 <fputs@plt+0x4938>
   17ed4:	andeq	r9, r1, ip, asr r9
   17ed8:	andeq	r9, r1, r4, lsr #19
   17edc:	andeq	r9, r1, r0, lsl #19
   17ee0:	andeq	r9, r1, ip, ror #19
   17ee4:	andeq	r9, r1, r4, lsl #20
   17ee8:			; <UNDEFINED> instruction: 0x000199b8
   17eec:	andeq	r9, r1, ip, asr #19
   17ef0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17ef4:	mov	r7, r0
   17ef8:	ldr	r6, [pc, #76]	; 17f4c <fputs@plt+0x515c>
   17efc:	mov	r8, r1
   17f00:	ldr	r5, [pc, #72]	; 17f50 <fputs@plt+0x5160>
   17f04:	mov	r9, r2
   17f08:	add	r6, pc, r6
   17f0c:	bl	1268c <_init@@Base>
   17f10:	add	r5, pc, r5
   17f14:	rsb	r6, r5, r6
   17f18:	asrs	r6, r6, #2
   17f1c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   17f20:	sub	r5, r5, #4
   17f24:	mov	r4, #0
   17f28:	add	r4, r4, #1
   17f2c:	ldr	r3, [r5, #4]!
   17f30:	mov	r0, r7
   17f34:	mov	r1, r8
   17f38:	mov	r2, r9
   17f3c:	blx	r3
   17f40:	cmp	r4, r6
   17f44:	bne	17f28 <fputs@plt+0x5138>
   17f48:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17f4c:	andeq	r2, r1, r0, ror pc
   17f50:	andeq	r2, r1, r4, ror #30
   17f54:	bx	lr

Disassembly of section .fini:

00017f58 <_fini@@Base>:
   17f58:	push	{r3, lr}
   17f5c:	pop	{r3, pc}
