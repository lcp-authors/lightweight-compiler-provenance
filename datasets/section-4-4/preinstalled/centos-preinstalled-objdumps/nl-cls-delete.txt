
centos-preinstalled/nl-cls-delete:     file format elf32-littlearm


Disassembly of section .init:

00010ae0 <.init>:
   10ae0:	push	{r3, lr}
   10ae4:	bl	10ee8 <exit@plt+0x274>
   10ae8:	pop	{r3, pc}

Disassembly of section .plt:

00010aec <abort@plt-0x14>:
   10aec:	push	{lr}		; (str lr, [sp, #-4]!)
   10af0:	ldr	lr, [pc, #4]	; 10afc <abort@plt-0x4>
   10af4:	add	lr, pc, lr
   10af8:	ldr	pc, [lr, #8]!
   10afc:	andeq	r1, r1, r4, lsl #10

00010b00 <abort@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1284]!	; 0x504

00010b0c <nl_cli_fatal@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b18 <nl_cache_foreach_filter@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b24 <__libc_start_main@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b30 <__gmon_start__@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b3c <__printf_chk@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b48 <nl_cli_tc_parse_parent@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b54 <nl_cli_print_version@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b60 <nl_cli_alloc_socket@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b6c <nl_cli_cls_parse_proto@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b78 <getopt_long@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b84 <rtnl_tc_get_ifindex@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b90 <nl_cli_cls_alloc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b9c <nl_cache_free@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1180]!	; 0x49c

00010ba8 <nl_cli_link_alloc_cache@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1172]!	; 0x494

00010bb4 <rtnl_cls_delete@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1164]!	; 0x48c

00010bc0 <__stack_chk_fail@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1156]!	; 0x484

00010bcc <nl_cli_confirm@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bd8 <nl_cli_tc_parse_kind@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1140]!	; 0x474

00010be4 <rtnl_tc_get_parent@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1132]!	; 0x46c

00010bf0 <nl_object_dump@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1124]!	; 0x464

00010bfc <rtnl_link_get_ifindex@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1116]!	; 0x45c

00010c08 <puts@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1108]!	; 0x454

00010c14 <nl_geterror@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1100]!	; 0x44c

00010c20 <nl_cli_parse_u32@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1092]!	; 0x444

00010c2c <nl_cli_connect@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1084]!	; 0x43c

00010c38 <nl_cli_tc_parse_dev@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1076]!	; 0x434

00010c44 <nl_cli_cls_alloc_cache@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c50 <nl_cache_foreach@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #1060]!	; 0x424

00010c5c <nl_cli_tc_parse_handle@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #1052]!	; 0x41c

00010c68 <rtnl_cls_set_prio@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #1044]!	; 0x414

00010c74 <exit@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #1036]!	; 0x40c

Disassembly of section .text:

00010c80 <.text>:
   10c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c84:	movw	fp, #8536	; 0x2158
   10c88:	movt	fp, #2
   10c8c:	sub	sp, sp, #28
   10c90:	mov	r6, r1
   10c94:	mov	r7, r0
   10c98:	ldr	r3, [fp]
   10c9c:	movw	r8, #8552	; 0x2168
   10ca0:	movt	r8, #2
   10ca4:	movw	r9, #8544	; 0x2160
   10ca8:	add	r5, sp, #16
   10cac:	movt	r9, #2
   10cb0:	str	r3, [sp, #20]
   10cb4:	bl	10b60 <nl_cli_alloc_socket@plt>
   10cb8:	mov	r1, #0
   10cbc:	mov	r4, r1
   10cc0:	str	r0, [r8]
   10cc4:	bl	10c2c <nl_cli_connect@plt>
   10cc8:	ldr	r0, [r8]
   10ccc:	bl	10ba8 <nl_cli_link_alloc_cache@plt>
   10cd0:	str	r0, [sp, #12]
   10cd4:	bl	10b90 <nl_cli_cls_alloc@plt>
   10cd8:	mov	sl, r0
   10cdc:	str	r5, [sp]
   10ce0:	movw	r2, #4620	; 0x120c
   10ce4:	movw	r3, #8340	; 0x2094
   10ce8:	movt	r2, #1
   10cec:	movt	r3, #2
   10cf0:	mov	r0, r7
   10cf4:	mov	r1, r6
   10cf8:	str	r4, [sp, #16]
   10cfc:	bl	10b78 <getopt_long@plt>
   10d00:	cmn	r0, #1
   10d04:	beq	10e34 <exit@plt+0x1c0>
   10d08:	cmp	r0, #112	; 0x70
   10d0c:	beq	10e04 <exit@plt+0x190>
   10d10:	ble	10d54 <exit@plt+0xe0>
   10d14:	movw	r3, #257	; 0x101
   10d18:	cmp	r0, r3
   10d1c:	beq	10e28 <exit@plt+0x1b4>
   10d20:	ble	10d84 <exit@plt+0x110>
   10d24:	movw	r3, #259	; 0x103
   10d28:	cmp	r0, r3
   10d2c:	beq	10de0 <exit@plt+0x16c>
   10d30:	blt	10dd4 <exit@plt+0x160>
   10d34:	cmp	r0, #260	; 0x104
   10d38:	bne	10cdc <exit@plt+0x68>
   10d3c:	ldr	r0, [r9]
   10d40:	bl	10c20 <nl_cli_parse_u32@plt>
   10d44:	uxth	r1, r0
   10d48:	mov	r0, sl
   10d4c:	bl	10c68 <rtnl_cls_set_prio@plt>
   10d50:	b	10cdc <exit@plt+0x68>
   10d54:	cmp	r0, #104	; 0x68
   10d58:	beq	10e14 <exit@plt+0x1a0>
   10d5c:	bgt	10da4 <exit@plt+0x130>
   10d60:	cmp	r0, #63	; 0x3f
   10d64:	beq	10dc4 <exit@plt+0x150>
   10d68:	cmp	r0, #100	; 0x64
   10d6c:	bne	10cdc <exit@plt+0x68>
   10d70:	mov	r0, sl
   10d74:	ldr	r1, [sp, #12]
   10d78:	ldr	r2, [r9]
   10d7c:	bl	10c38 <nl_cli_tc_parse_dev@plt>
   10d80:	b	10cdc <exit@plt+0x68>
   10d84:	cmp	r0, #113	; 0x71
   10d88:	moveq	r3, #1
   10d8c:	streq	r3, [r8, #12]
   10d90:	beq	10cdc <exit@plt+0x68>
   10d94:	cmp	r0, #118	; 0x76
   10d98:	bne	10cdc <exit@plt+0x68>
   10d9c:	bl	10b54 <nl_cli_print_version@plt>
   10da0:	b	10cdc <exit@plt+0x68>
   10da4:	cmp	r0, #105	; 0x69
   10da8:	beq	10df0 <exit@plt+0x17c>
   10dac:	cmp	r0, #107	; 0x6b
   10db0:	bne	10cdc <exit@plt+0x68>
   10db4:	mov	r0, sl
   10db8:	ldr	r1, [r9]
   10dbc:	bl	10bd8 <nl_cli_tc_parse_kind@plt>
   10dc0:	b	10cdc <exit@plt+0x68>
   10dc4:	movw	r1, #4632	; 0x1218
   10dc8:	mov	r0, #22
   10dcc:	movt	r1, #1
   10dd0:	bl	10b0c <nl_cli_fatal@plt>
   10dd4:	mov	r3, #1
   10dd8:	str	r3, [r8, #4]
   10ddc:	b	10cdc <exit@plt+0x68>
   10de0:	mov	r0, sl
   10de4:	ldr	r1, [r9]
   10de8:	bl	10b6c <nl_cli_cls_parse_proto@plt>
   10dec:	b	10cdc <exit@plt+0x68>
   10df0:	mov	r0, sl
   10df4:	ldr	r1, [r9]
   10df8:	mov	r2, #0
   10dfc:	bl	10c5c <nl_cli_tc_parse_handle@plt>
   10e00:	b	10cdc <exit@plt+0x68>
   10e04:	mov	r0, sl
   10e08:	ldr	r1, [r9]
   10e0c:	bl	10b48 <nl_cli_tc_parse_parent@plt>
   10e10:	b	10cdc <exit@plt+0x68>
   10e14:	movw	r0, #4648	; 0x1228
   10e18:	movt	r0, #1
   10e1c:	bl	10c08 <puts@plt>
   10e20:	mov	r0, #0
   10e24:	bl	10c74 <exit@plt>
   10e28:	mov	r3, #1
   10e2c:	str	r3, [r8, #8]
   10e30:	b	10cdc <exit@plt+0x68>
   10e34:	mov	r0, sl
   10e38:	bl	10b84 <rtnl_tc_get_ifindex@plt>
   10e3c:	cmp	r0, #0
   10e40:	bne	10e9c <exit@plt+0x228>
   10e44:	movw	r1, #4144	; 0x1030
   10e48:	ldr	r0, [sp, #12]
   10e4c:	mov	r2, sl
   10e50:	movt	r1, #1
   10e54:	bl	10c50 <nl_cache_foreach@plt>
   10e58:	ldr	r2, [r8, #12]
   10e5c:	movw	r3, #8552	; 0x2168
   10e60:	movt	r3, #2
   10e64:	cmp	r2, #0
   10e68:	bne	10e80 <exit@plt+0x20c>
   10e6c:	movw	r1, #5448	; 0x1548
   10e70:	ldr	r2, [r3, #16]
   10e74:	mov	r0, #1
   10e78:	movt	r1, #1
   10e7c:	bl	10b3c <__printf_chk@plt>
   10e80:	ldr	r2, [sp, #20]
   10e84:	mov	r0, #0
   10e88:	ldr	r3, [fp]
   10e8c:	cmp	r2, r3
   10e90:	bne	10ea8 <exit@plt+0x234>
   10e94:	add	sp, sp, #28
   10e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e9c:	mov	r1, sl
   10ea0:	bl	10fe0 <exit@plt+0x36c>
   10ea4:	b	10e58 <exit@plt+0x1e4>
   10ea8:	bl	10bc0 <__stack_chk_fail@plt>
   10eac:	mov	fp, #0
   10eb0:	mov	lr, #0
   10eb4:	pop	{r1}		; (ldr r1, [sp], #4)
   10eb8:	mov	r2, sp
   10ebc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ec4:	ldr	ip, [pc, #16]	; 10edc <exit@plt+0x268>
   10ec8:	push	{ip}		; (str ip, [sp, #-4]!)
   10ecc:	ldr	r0, [pc, #12]	; 10ee0 <exit@plt+0x26c>
   10ed0:	ldr	r3, [pc, #12]	; 10ee4 <exit@plt+0x270>
   10ed4:	bl	10b24 <__libc_start_main@plt>
   10ed8:	bl	10b00 <abort@plt>
   10edc:	andeq	r1, r1, r8, asr #3
   10ee0:	andeq	r0, r1, r0, lsl #25
   10ee4:	andeq	r1, r1, r4, ror #2
   10ee8:	ldr	r3, [pc, #20]	; 10f04 <exit@plt+0x290>
   10eec:	ldr	r2, [pc, #20]	; 10f08 <exit@plt+0x294>
   10ef0:	add	r3, pc, r3
   10ef4:	ldr	r2, [r3, r2]
   10ef8:	cmp	r2, #0
   10efc:	bxeq	lr
   10f00:	b	10b30 <__gmon_start__@plt>
   10f04:	andeq	r1, r1, r8, lsl #2
   10f08:	andeq	r0, r0, ip, lsl #1
   10f0c:	push	{r3, lr}
   10f10:	movw	r0, #8532	; 0x2154
   10f14:	ldr	r3, [pc, #36]	; 10f40 <exit@plt+0x2cc>
   10f18:	movt	r0, #2
   10f1c:	rsb	r3, r0, r3
   10f20:	cmp	r3, #6
   10f24:	popls	{r3, pc}
   10f28:	movw	r3, #0
   10f2c:	movt	r3, #0
   10f30:	cmp	r3, #0
   10f34:	popeq	{r3, pc}
   10f38:	blx	r3
   10f3c:	pop	{r3, pc}
   10f40:	andeq	r2, r2, r7, asr r1
   10f44:	push	{r3, lr}
   10f48:	movw	r0, #8532	; 0x2154
   10f4c:	movw	r3, #8532	; 0x2154
   10f50:	movt	r0, #2
   10f54:	movt	r3, #2
   10f58:	rsb	r3, r0, r3
   10f5c:	asr	r3, r3, #2
   10f60:	add	r3, r3, r3, lsr #31
   10f64:	asrs	r1, r3, #1
   10f68:	popeq	{r3, pc}
   10f6c:	movw	r2, #0
   10f70:	movt	r2, #0
   10f74:	cmp	r2, #0
   10f78:	popeq	{r3, pc}
   10f7c:	blx	r2
   10f80:	pop	{r3, pc}
   10f84:	push	{r4, lr}
   10f88:	movw	r4, #8548	; 0x2164
   10f8c:	movt	r4, #2
   10f90:	ldrb	r3, [r4]
   10f94:	cmp	r3, #0
   10f98:	popne	{r4, pc}
   10f9c:	bl	10f0c <exit@plt+0x298>
   10fa0:	mov	r3, #1
   10fa4:	strb	r3, [r4]
   10fa8:	pop	{r4, pc}
   10fac:	movw	r0, #7868	; 0x1ebc
   10fb0:	movt	r0, #2
   10fb4:	push	{r3, lr}
   10fb8:	ldr	r3, [r0]
   10fbc:	cmp	r3, #0
   10fc0:	beq	10fd8 <exit@plt+0x364>
   10fc4:	movw	r3, #0
   10fc8:	movt	r3, #0
   10fcc:	cmp	r3, #0
   10fd0:	beq	10fd8 <exit@plt+0x364>
   10fd4:	blx	r3
   10fd8:	pop	{r3, lr}
   10fdc:	b	10f44 <exit@plt+0x2d0>
   10fe0:	push	{r3, r4, r5, lr}
   10fe4:	mov	r5, r0
   10fe8:	mov	r0, r1
   10fec:	mov	r4, r1
   10ff0:	bl	10be4 <rtnl_tc_get_parent@plt>
   10ff4:	movw	r3, #8552	; 0x2168
   10ff8:	movt	r3, #2
   10ffc:	mov	r1, r5
   11000:	mov	r2, r0
   11004:	ldr	r0, [r3]
   11008:	bl	10c44 <nl_cli_cls_alloc_cache@plt>
   1100c:	mov	r1, r4
   11010:	mov	r3, #0
   11014:	movw	r2, #4168	; 0x1048
   11018:	movt	r2, #1
   1101c:	mov	r5, r0
   11020:	bl	10b18 <nl_cache_foreach_filter@plt>
   11024:	mov	r0, r5
   11028:	pop	{r3, r4, r5, lr}
   1102c:	b	10b9c <nl_cache_free@plt>
   11030:	push	{r4, lr}
   11034:	mov	r4, r1
   11038:	bl	10bfc <rtnl_link_get_ifindex@plt>
   1103c:	mov	r1, r4
   11040:	pop	{r4, lr}
   11044:	b	10fe0 <exit@plt+0x36c>
   11048:	push	{r4, r5, r6, r7, lr}
   1104c:	movw	r4, #8552	; 0x2168
   11050:	movt	r4, #2
   11054:	movw	r5, #8536	; 0x2158
   11058:	movw	r2, #8540	; 0x215c
   1105c:	movt	r5, #2
   11060:	movt	r2, #2
   11064:	ldr	ip, [r4, #4]
   11068:	ldr	r1, [r5]
   1106c:	sub	sp, sp, #60	; 0x3c
   11070:	ldr	r2, [r2]
   11074:	mov	r3, #0
   11078:	cmp	ip, r3
   1107c:	mov	r6, r0
   11080:	str	r3, [sp]
   11084:	str	r1, [sp, #52]	; 0x34
   11088:	str	r2, [sp, #28]
   1108c:	str	r3, [sp, #4]
   11090:	str	r3, [sp, #8]
   11094:	str	r3, [sp, #12]
   11098:	str	r3, [sp, #16]
   1109c:	str	r3, [sp, #20]
   110a0:	str	r3, [sp, #24]
   110a4:	str	r3, [sp, #32]
   110a8:	str	r3, [sp, #36]	; 0x24
   110ac:	str	r3, [sp, #40]	; 0x28
   110b0:	str	r3, [sp, #44]	; 0x2c
   110b4:	str	r3, [sp, #48]	; 0x30
   110b8:	beq	110e8 <exit@plt+0x474>
   110bc:	mov	r1, sp
   110c0:	ldr	r2, [r4, #8]
   110c4:	bl	10bcc <nl_cli_confirm@plt>
   110c8:	cmp	r0, #0
   110cc:	bne	110e8 <exit@plt+0x474>
   110d0:	ldr	r2, [sp, #52]	; 0x34
   110d4:	ldr	r3, [r5]
   110d8:	cmp	r2, r3
   110dc:	bne	11160 <exit@plt+0x4ec>
   110e0:	add	sp, sp, #60	; 0x3c
   110e4:	pop	{r4, r5, r6, r7, pc}
   110e8:	ldr	r0, [r4]
   110ec:	mov	r1, r6
   110f0:	mov	r2, #0
   110f4:	bl	10bb4 <rtnl_cls_delete@plt>
   110f8:	subs	r7, r0, #0
   110fc:	blt	11144 <exit@plt+0x4d0>
   11100:	ldr	r3, [r4, #12]
   11104:	cmp	r3, #0
   11108:	ldrne	r3, [r4, #16]
   1110c:	addne	r3, r3, #1
   11110:	strne	r3, [r4, #16]
   11114:	bne	110d0 <exit@plt+0x45c>
   11118:	movw	r1, #4608	; 0x1200
   1111c:	mov	r0, #1
   11120:	movt	r1, #1
   11124:	bl	10b3c <__printf_chk@plt>
   11128:	mov	r0, r6
   1112c:	mov	r1, sp
   11130:	bl	10bf0 <nl_object_dump@plt>
   11134:	ldr	r3, [r4, #16]
   11138:	add	r3, r3, #1
   1113c:	str	r3, [r4, #16]
   11140:	b	110d0 <exit@plt+0x45c>
   11144:	bl	10c14 <nl_geterror@plt>
   11148:	movw	r1, #4572	; 0x11dc
   1114c:	movt	r1, #1
   11150:	mov	r2, r0
   11154:	mov	r0, r7
   11158:	bl	10b0c <nl_cli_fatal@plt>
   1115c:	b	11100 <exit@plt+0x48c>
   11160:	bl	10bc0 <__stack_chk_fail@plt>
   11164:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11168:	mov	r7, r0
   1116c:	ldr	r6, [pc, #76]	; 111c0 <exit@plt+0x54c>
   11170:	mov	r8, r1
   11174:	ldr	r5, [pc, #72]	; 111c4 <exit@plt+0x550>
   11178:	mov	r9, r2
   1117c:	add	r6, pc, r6
   11180:	bl	10ae0 <abort@plt-0x20>
   11184:	add	r5, pc, r5
   11188:	rsb	r6, r5, r6
   1118c:	asrs	r6, r6, #2
   11190:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11194:	sub	r5, r5, #4
   11198:	mov	r4, #0
   1119c:	add	r4, r4, #1
   111a0:	ldr	r3, [r5, #4]!
   111a4:	mov	r0, r7
   111a8:	mov	r1, r8
   111ac:	mov	r2, r9
   111b0:	blx	r3
   111b4:	cmp	r4, r6
   111b8:	bne	1119c <exit@plt+0x528>
   111bc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   111c0:	andeq	r0, r1, r4, lsr sp
   111c4:	andeq	r0, r1, r8, lsr #26
   111c8:	bx	lr

Disassembly of section .fini:

000111cc <.fini>:
   111cc:	push	{r3, lr}
   111d0:	pop	{r3, pc}
