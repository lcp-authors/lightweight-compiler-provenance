
centos-preinstalled/wnck-urgency-monitor:     file format elf32-littlearm


Disassembly of section .init:

00010d4c <_init@@Base>:
   10d4c:	push	{r3, lr}
   10d50:	bl	11068 <g_object_get_data@plt+0x170>
   10d54:	pop	{r3, pc}

Disassembly of section .plt:

00010d58 <wnck_screen_get_default@plt-0x14>:
   10d58:	push	{lr}		; (str lr, [sp, #-4]!)
   10d5c:	ldr	lr, [pc, #4]	; 10d68 <_init@@Base+0x1c>
   10d60:	add	lr, pc, lr
   10d64:	ldr	pc, [lr, #8]!
   10d68:	muleq	r1, r8, r2

00010d6c <wnck_screen_get_default@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #69632	; 0x11000
   10d74:	ldr	pc, [ip, #664]!	; 0x298

00010d78 <g_option_context_parse@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #69632	; 0x11000
   10d80:	ldr	pc, [ip, #656]!	; 0x290

00010d84 <g_option_context_add_group@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #69632	; 0x11000
   10d8c:	ldr	pc, [ip, #648]!	; 0x288

00010d90 <g_error_free@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #69632	; 0x11000
   10d98:	ldr	pc, [ip, #640]!	; 0x280

00010d9c <gtk_get_option_group@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #69632	; 0x11000
   10da4:	ldr	pc, [ip, #632]!	; 0x278

00010da8 <g_type_check_instance_cast@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #69632	; 0x11000
   10db0:	ldr	pc, [ip, #624]!	; 0x270

00010db4 <g_option_context_new@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #69632	; 0x11000
   10dbc:	ldr	pc, [ip, #616]!	; 0x268

00010dc0 <g_printerr@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #69632	; 0x11000
   10dc8:	ldr	pc, [ip, #608]!	; 0x260

00010dcc <g_option_context_set_summary@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #69632	; 0x11000
   10dd4:	ldr	pc, [ip, #600]!	; 0x258

00010dd8 <wnck_window_get_icon_is_fallback@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #69632	; 0x11000
   10de0:	ldr	pc, [ip, #592]!	; 0x250

00010de4 <wnck_window_activate@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #69632	; 0x11000
   10dec:	ldr	pc, [ip, #584]!	; 0x248

00010df0 <abort@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #69632	; 0x11000
   10df8:	ldr	pc, [ip, #576]!	; 0x240

00010dfc <wnck_window_get_workspace@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #69632	; 0x11000
   10e04:	ldr	pc, [ip, #568]!	; 0x238

00010e08 <wnck_set_client_type@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #69632	; 0x11000
   10e10:	ldr	pc, [ip, #560]!	; 0x230

00010e14 <g_signal_connect_data@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #69632	; 0x11000
   10e1c:	ldr	pc, [ip, #552]!	; 0x228

00010e20 <gtk_status_icon_set_tooltip_text@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #69632	; 0x11000
   10e28:	ldr	pc, [ip, #544]!	; 0x220

00010e2c <gtk_status_icon_set_from_pixbuf@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #69632	; 0x11000
   10e34:	ldr	pc, [ip, #536]!	; 0x218

00010e38 <g_option_context_free@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #69632	; 0x11000
   10e40:	ldr	pc, [ip, #528]!	; 0x210

00010e44 <__stack_chk_fail@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #69632	; 0x11000
   10e4c:	ldr	pc, [ip, #520]!	; 0x208

00010e50 <wnck_workspace_activate@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #69632	; 0x11000
   10e58:	ldr	pc, [ip, #512]!	; 0x200

00010e5c <gtk_main@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #69632	; 0x11000
   10e64:	ldr	pc, [ip, #504]!	; 0x1f8

00010e68 <wnck_window_get_mini_icon@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #69632	; 0x11000
   10e70:	ldr	pc, [ip, #496]!	; 0x1f0

00010e74 <g_object_set_data@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #69632	; 0x11000
   10e7c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e80 <wnck_window_get_name@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #69632	; 0x11000
   10e88:	ldr	pc, [ip, #480]!	; 0x1e0

00010e8c <g_object_unref@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #69632	; 0x11000
   10e94:	ldr	pc, [ip, #472]!	; 0x1d8

00010e98 <gtk_status_icon_set_visible@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #69632	; 0x11000
   10ea0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ea4 <gtk_init@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #69632	; 0x11000
   10eac:	ldr	pc, [ip, #456]!	; 0x1c8

00010eb0 <gtk_status_icon_new@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #69632	; 0x11000
   10eb8:	ldr	pc, [ip, #448]!	; 0x1c0

00010ebc <wnck_window_or_transient_needs_attention@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #69632	; 0x11000
   10ec4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ec8 <gtk_status_icon_set_from_icon_name@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #69632	; 0x11000
   10ed0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ed4 <gtk_get_current_event_time@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #69632	; 0x11000
   10edc:	ldr	pc, [ip, #424]!	; 0x1a8

00010ee0 <__libc_start_main@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #69632	; 0x11000
   10ee8:	ldr	pc, [ip, #416]!	; 0x1a0

00010eec <__gmon_start__@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #69632	; 0x11000
   10ef4:	ldr	pc, [ip, #408]!	; 0x198

00010ef8 <g_object_get_data@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #69632	; 0x11000
   10f00:	ldr	pc, [ip, #400]!	; 0x190

Disassembly of section .text:

00010f04 <.text>:
   10f04:	push	{r4, r5, r6, lr}
   10f08:	movw	r5, #8352	; 0x20a0
   10f0c:	movt	r5, #2
   10f10:	sub	sp, sp, #24
   10f14:	ldr	r3, [r5]
   10f18:	str	r0, [sp, #12]
   10f1c:	mov	r0, #0
   10f20:	mov	r4, r0
   10f24:	str	r1, [sp, #8]
   10f28:	str	r3, [sp, #20]
   10f2c:	bl	10db4 <g_option_context_new@plt>
   10f30:	movw	r1, #5268	; 0x1494
   10f34:	movt	r1, #1
   10f38:	mov	r6, r0
   10f3c:	bl	10dcc <g_option_context_set_summary@plt>
   10f40:	mov	r0, #1
   10f44:	bl	10d9c <gtk_get_option_group@plt>
   10f48:	mov	r1, r0
   10f4c:	mov	r0, r6
   10f50:	bl	10d84 <g_option_context_add_group@plt>
   10f54:	mov	r0, r6
   10f58:	add	r1, sp, #12
   10f5c:	add	r2, sp, #8
   10f60:	add	r3, sp, #16
   10f64:	str	r4, [sp, #16]
   10f68:	bl	10d78 <g_option_context_parse@plt>
   10f6c:	cmp	r0, r4
   10f70:	beq	10ffc <g_object_get_data@plt+0x104>
   10f74:	mov	r0, r6
   10f78:	bl	10e38 <g_option_context_free@plt>
   10f7c:	add	r1, sp, #8
   10f80:	add	r0, sp, #12
   10f84:	bl	10ea4 <gtk_init@plt>
   10f88:	mov	r0, #2
   10f8c:	bl	10e08 <wnck_set_client_type@plt>
   10f90:	bl	10d6c <wnck_screen_get_default@plt>
   10f94:	mov	r3, r4
   10f98:	str	r4, [sp]
   10f9c:	movw	r1, #5400	; 0x1518
   10fa0:	str	r4, [sp, #4]
   10fa4:	movt	r1, #1
   10fa8:	movw	r2, #4764	; 0x129c
   10fac:	movt	r2, #1
   10fb0:	mov	r6, r0
   10fb4:	bl	10e14 <g_signal_connect_data@plt>
   10fb8:	mov	r3, r4
   10fbc:	mov	r0, r6
   10fc0:	str	r4, [sp]
   10fc4:	movw	r1, #5416	; 0x1528
   10fc8:	str	r4, [sp, #4]
   10fcc:	movt	r1, #1
   10fd0:	movw	r2, #4544	; 0x11c0
   10fd4:	movt	r2, #1
   10fd8:	bl	10e14 <g_signal_connect_data@plt>
   10fdc:	bl	10e5c <gtk_main@plt>
   10fe0:	mov	r0, r4
   10fe4:	ldr	r2, [sp, #20]
   10fe8:	ldr	r3, [r5]
   10fec:	cmp	r2, r3
   10ff0:	bne	11028 <g_object_get_data@plt+0x130>
   10ff4:	add	sp, sp, #24
   10ff8:	pop	{r4, r5, r6, pc}
   10ffc:	ldr	r3, [sp, #16]
   11000:	movw	r0, #5364	; 0x14f4
   11004:	movt	r0, #1
   11008:	ldr	r1, [r3, #8]
   1100c:	bl	10dc0 <g_printerr@plt>
   11010:	mov	r0, r6
   11014:	bl	10e38 <g_option_context_free@plt>
   11018:	ldr	r0, [sp, #16]
   1101c:	bl	10d90 <g_error_free@plt>
   11020:	mov	r0, #1
   11024:	b	10fe4 <g_object_get_data@plt+0xec>
   11028:	bl	10e44 <__stack_chk_fail@plt>
   1102c:	mov	fp, #0
   11030:	mov	lr, #0
   11034:	pop	{r1}		; (ldr r1, [sp], #4)
   11038:	mov	r2, sp
   1103c:	push	{r2}		; (str r2, [sp, #-4]!)
   11040:	push	{r0}		; (str r0, [sp, #-4]!)
   11044:	ldr	ip, [pc, #16]	; 1105c <g_object_get_data@plt+0x164>
   11048:	push	{ip}		; (str ip, [sp, #-4]!)
   1104c:	ldr	r0, [pc, #12]	; 11060 <g_object_get_data@plt+0x168>
   11050:	ldr	r3, [pc, #12]	; 11064 <g_object_get_data@plt+0x16c>
   11054:	bl	10ee0 <__libc_start_main@plt>
   11058:	bl	10df0 <abort@plt>
   1105c:	andeq	r1, r1, ip, lsl r4
   11060:	andeq	r0, r1, r4, lsl #30
   11064:			; <UNDEFINED> instruction: 0x000113b8
   11068:	ldr	r3, [pc, #20]	; 11084 <g_object_get_data@plt+0x18c>
   1106c:	ldr	r2, [pc, #20]	; 11088 <g_object_get_data@plt+0x190>
   11070:	add	r3, pc, r3
   11074:	ldr	r2, [r3, r2]
   11078:	cmp	r2, #0
   1107c:	bxeq	lr
   11080:	b	10eec <__gmon_start__@plt>
   11084:	andeq	r0, r1, r8, lsl #31
   11088:	muleq	r0, r4, r0
   1108c:	push	{r3, lr}
   11090:	movw	r0, #8348	; 0x209c
   11094:	ldr	r3, [pc, #36]	; 110c0 <g_object_get_data@plt+0x1c8>
   11098:	movt	r0, #2
   1109c:	rsb	r3, r0, r3
   110a0:	cmp	r3, #6
   110a4:	popls	{r3, pc}
   110a8:	movw	r3, #0
   110ac:	movt	r3, #0
   110b0:	cmp	r3, #0
   110b4:	popeq	{r3, pc}
   110b8:	blx	r3
   110bc:	pop	{r3, pc}
   110c0:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   110c4:	push	{r3, lr}
   110c8:	movw	r0, #8348	; 0x209c
   110cc:	movw	r3, #8348	; 0x209c
   110d0:	movt	r0, #2
   110d4:	movt	r3, #2
   110d8:	rsb	r3, r0, r3
   110dc:	asr	r3, r3, #2
   110e0:	add	r3, r3, r3, lsr #31
   110e4:	asrs	r1, r3, #1
   110e8:	popeq	{r3, pc}
   110ec:	movw	r2, #0
   110f0:	movt	r2, #0
   110f4:	cmp	r2, #0
   110f8:	popeq	{r3, pc}
   110fc:	blx	r2
   11100:	pop	{r3, pc}
   11104:	push	{r4, lr}
   11108:	movw	r4, #8356	; 0x20a4
   1110c:	movt	r4, #2
   11110:	ldrb	r3, [r4]
   11114:	cmp	r3, #0
   11118:	popne	{r4, pc}
   1111c:	bl	1108c <g_object_get_data@plt+0x194>
   11120:	mov	r3, #1
   11124:	strb	r3, [r4]
   11128:	pop	{r4, pc}
   1112c:	movw	r0, #7804	; 0x1e7c
   11130:	movt	r0, #2
   11134:	push	{r3, lr}
   11138:	ldr	r3, [r0]
   1113c:	cmp	r3, #0
   11140:	beq	11158 <g_object_get_data@plt+0x260>
   11144:	movw	r3, #0
   11148:	movt	r3, #0
   1114c:	cmp	r3, #0
   11150:	beq	11158 <g_object_get_data@plt+0x260>
   11154:	blx	r3
   11158:	pop	{r3, lr}
   1115c:	b	110c4 <g_object_get_data@plt+0x1cc>
   11160:	push	{r3, lr}
   11164:	mov	r1, #80	; 0x50
   11168:	bl	10da8 <g_type_check_instance_cast@plt>
   1116c:	movw	r1, #5168	; 0x1430
   11170:	pop	{r3, lr}
   11174:	movt	r1, #1
   11178:	b	10ef8 <g_object_get_data@plt>
   1117c:	push	{r3, r4, r5, lr}
   11180:	mov	r4, r0
   11184:	bl	11160 <g_object_get_data@plt+0x268>
   11188:	subs	r5, r0, #0
   1118c:	popeq	{r3, r4, r5, pc}
   11190:	mov	r1, #0
   11194:	bl	10e98 <gtk_status_icon_set_visible@plt>
   11198:	mov	r0, r5
   1119c:	bl	10e8c <g_object_unref@plt>
   111a0:	mov	r0, r4
   111a4:	mov	r1, #80	; 0x50
   111a8:	bl	10da8 <g_type_check_instance_cast@plt>
   111ac:	movw	r1, #5168	; 0x1430
   111b0:	mov	r2, #0
   111b4:	movt	r1, #1
   111b8:	pop	{r3, r4, r5, lr}
   111bc:	b	10e74 <g_object_set_data@plt>
   111c0:	mov	r0, r1
   111c4:	b	1117c <g_object_get_data@plt+0x284>
   111c8:	push	{r3, r4, r5, lr}
   111cc:	mov	r4, r0
   111d0:	bl	11160 <g_object_get_data@plt+0x268>
   111d4:	subs	r5, r0, #0
   111d8:	popeq	{r3, r4, r5, pc}
   111dc:	mov	r0, r4
   111e0:	bl	10dd8 <wnck_window_get_icon_is_fallback@plt>
   111e4:	cmp	r0, #0
   111e8:	bne	11218 <g_object_get_data@plt+0x320>
   111ec:	mov	r0, r4
   111f0:	bl	10e68 <wnck_window_get_mini_icon@plt>
   111f4:	mov	r1, r0
   111f8:	mov	r0, r5
   111fc:	bl	10e2c <gtk_status_icon_set_from_pixbuf@plt>
   11200:	mov	r0, r4
   11204:	bl	10e80 <wnck_window_get_name@plt>
   11208:	mov	r1, r0
   1120c:	mov	r0, r5
   11210:	pop	{r3, r4, r5, lr}
   11214:	b	10e20 <gtk_status_icon_set_tooltip_text@plt>
   11218:	movw	r1, #5188	; 0x1444
   1121c:	mov	r0, r5
   11220:	movt	r1, #1
   11224:	bl	10ec8 <gtk_status_icon_set_from_icon_name@plt>
   11228:	b	11200 <g_object_get_data@plt+0x308>
   1122c:	b	111c8 <g_object_get_data@plt+0x2d0>
   11230:	b	111c8 <g_object_get_data@plt+0x2d0>
   11234:	push	{r4, r5, lr}
   11238:	sub	sp, sp, #12
   1123c:	mov	r4, r0
   11240:	bl	10eb0 <gtk_status_icon_new@plt>
   11244:	mov	r1, #80	; 0x50
   11248:	mov	r5, r0
   1124c:	mov	r0, r4
   11250:	bl	10da8 <g_type_check_instance_cast@plt>
   11254:	mov	r2, r5
   11258:	movw	r1, #5168	; 0x1430
   1125c:	movt	r1, #1
   11260:	bl	10e74 <g_object_set_data@plt>
   11264:	mov	r2, #0
   11268:	mov	r0, r5
   1126c:	str	r2, [sp]
   11270:	str	r2, [sp, #4]
   11274:	mov	r3, r4
   11278:	movw	r1, #5208	; 0x1458
   1127c:	movw	r2, #4920	; 0x1338
   11280:	movt	r1, #1
   11284:	movt	r2, #1
   11288:	bl	10e14 <g_signal_connect_data@plt>
   1128c:	mov	r0, r4
   11290:	add	sp, sp, #12
   11294:	pop	{r4, r5, lr}
   11298:	b	111c8 <g_object_get_data@plt+0x2d0>
   1129c:	push	{r4, r5, lr}
   112a0:	mov	r0, r1
   112a4:	sub	sp, sp, #12
   112a8:	mov	r5, r1
   112ac:	bl	10ebc <wnck_window_or_transient_needs_attention@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112c0 <g_object_get_data@plt+0x3c8>
   112b8:	mov	r0, r5
   112bc:	bl	11234 <g_object_get_data@plt+0x33c>
   112c0:	mov	r4, #0
   112c4:	mov	r0, r5
   112c8:	mov	r3, r4
   112cc:	str	r4, [sp]
   112d0:	str	r4, [sp, #4]
   112d4:	movw	r1, #5220	; 0x1464
   112d8:	movw	r2, #4976	; 0x1370
   112dc:	movt	r1, #1
   112e0:	movt	r2, #1
   112e4:	bl	10e14 <g_signal_connect_data@plt>
   112e8:	mov	r3, r4
   112ec:	str	r4, [sp]
   112f0:	mov	r0, r5
   112f4:	str	r4, [sp, #4]
   112f8:	movw	r1, #5236	; 0x1474
   112fc:	movw	r2, #4656	; 0x1230
   11300:	movt	r1, #1
   11304:	movt	r2, #1
   11308:	bl	10e14 <g_signal_connect_data@plt>
   1130c:	str	r4, [sp]
   11310:	str	r4, [sp, #4]
   11314:	mov	r3, r4
   11318:	mov	r0, r5
   1131c:	movw	r1, #5252	; 0x1484
   11320:	movw	r2, #4652	; 0x122c
   11324:	movt	r1, #1
   11328:	movt	r2, #1
   1132c:	bl	10e14 <g_signal_connect_data@plt>
   11330:	add	sp, sp, #12
   11334:	pop	{r4, r5, pc}
   11338:	push	{r3, r4, r5, lr}
   1133c:	mov	r4, r1
   11340:	bl	10ed4 <gtk_get_current_event_time@plt>
   11344:	mov	r5, r0
   11348:	mov	r0, r4
   1134c:	bl	10dfc <wnck_window_get_workspace@plt>
   11350:	cmp	r0, #0
   11354:	beq	11360 <g_object_get_data@plt+0x468>
   11358:	mov	r1, r5
   1135c:	bl	10e50 <wnck_workspace_activate@plt>
   11360:	mov	r0, r4
   11364:	mov	r1, r5
   11368:	pop	{r3, r4, r5, lr}
   1136c:	b	10de4 <wnck_window_activate@plt>
   11370:	tst	r1, #1536	; 0x600
   11374:	push	{r3, r4, r5, lr}
   11378:	mov	r4, r0
   1137c:	popeq	{r3, r4, r5, pc}
   11380:	bl	11160 <g_object_get_data@plt+0x268>
   11384:	mov	r5, r0
   11388:	mov	r0, r4
   1138c:	bl	10ebc <wnck_window_or_transient_needs_attention@plt>
   11390:	cmp	r0, #0
   11394:	beq	113ac <g_object_get_data@plt+0x4b4>
   11398:	cmp	r5, #0
   1139c:	popne	{r3, r4, r5, pc}
   113a0:	mov	r0, r4
   113a4:	pop	{r3, r4, r5, lr}
   113a8:	b	11234 <g_object_get_data@plt+0x33c>
   113ac:	mov	r0, r4
   113b0:	pop	{r3, r4, r5, lr}
   113b4:	b	1117c <g_object_get_data@plt+0x284>
   113b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   113bc:	mov	r7, r0
   113c0:	ldr	r6, [pc, #76]	; 11414 <g_object_get_data@plt+0x51c>
   113c4:	mov	r8, r1
   113c8:	ldr	r5, [pc, #72]	; 11418 <g_object_get_data@plt+0x520>
   113cc:	mov	r9, r2
   113d0:	add	r6, pc, r6
   113d4:	bl	10d4c <_init@@Base>
   113d8:	add	r5, pc, r5
   113dc:	rsb	r6, r5, r6
   113e0:	asrs	r6, r6, #2
   113e4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   113e8:	sub	r5, r5, #4
   113ec:	mov	r4, #0
   113f0:	add	r4, r4, #1
   113f4:	ldr	r3, [r5, #4]!
   113f8:	mov	r0, r7
   113fc:	mov	r1, r8
   11400:	mov	r2, r9
   11404:	blx	r3
   11408:	cmp	r4, r6
   1140c:	bne	113f0 <g_object_get_data@plt+0x4f8>
   11410:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11414:	andeq	r0, r1, r0, lsr #21
   11418:	muleq	r1, r4, sl
   1141c:	bx	lr

Disassembly of section .fini:

00011420 <_fini@@Base>:
   11420:	push	{r3, lr}
   11424:	pop	{r3, pc}
