
centos-preinstalled/implantisomd5:     file format elf32-littlearm


Disassembly of section .init:

000088ec <_init@@Base>:
    88ec:	push	{r3, lr}
    88f0:	bl	8aa4 <__snprintf_chk@plt+0x48>
    88f4:	pop	{r3, pc}

Disassembly of section .plt:

000088f8 <raise@plt-0x14>:
    88f8:	push	{lr}		; (str lr, [sp, #-4]!)
    88fc:	ldr	lr, [pc, #4]	; 8908 <_init@@Base+0x1c>
    8900:	add	lr, pc, lr
    8904:	ldr	pc, [lr, #8]!
    8908:	strdeq	fp, [r0], -r8

0000890c <raise@plt>:
    890c:	add	ip, pc, #0, 12
    8910:	add	ip, ip, #45056	; 0xb000
    8914:	ldr	pc, [ip, #1784]!	; 0x6f8

00008918 <__strncat_chk@plt>:
    8918:	add	ip, pc, #0, 12
    891c:	add	ip, ip, #45056	; 0xb000
    8920:	ldr	pc, [ip, #1776]!	; 0x6f0

00008924 <read@plt>:
    8924:	add	ip, pc, #0, 12
    8928:	add	ip, ip, #45056	; 0xb000
    892c:	ldr	pc, [ip, #1768]!	; 0x6e8

00008930 <__read_chk@plt>:
    8930:	add	ip, pc, #0, 12
    8934:	add	ip, ip, #45056	; 0xb000
    8938:	ldr	pc, [ip, #1760]!	; 0x6e0

0000893c <poptGetContext@plt>:
    893c:	add	ip, pc, #0, 12
    8940:	add	ip, ip, #45056	; 0xb000
    8944:	ldr	pc, [ip, #1752]!	; 0x6d8

00008948 <free@plt>:
    8948:	add	ip, pc, #0, 12
    894c:	add	ip, ip, #45056	; 0xb000
    8950:	ldr	pc, [ip, #1744]!	; 0x6d0

00008954 <memcpy@plt>:
    8954:	add	ip, pc, #0, 12
    8958:	add	ip, ip, #45056	; 0xb000
    895c:	ldr	pc, [ip, #1736]!	; 0x6c8

00008960 <poptStrerror@plt>:
    8960:	add	ip, pc, #0, 12
    8964:	add	ip, ip, #45056	; 0xb000
    8968:	ldr	pc, [ip, #1728]!	; 0x6c0

0000896c <__stack_chk_fail@plt>:
    896c:	add	ip, pc, #0, 12
    8970:	add	ip, ip, #45056	; 0xb000
    8974:	ldr	pc, [ip, #1720]!	; 0x6b8

00008978 <perror@plt>:
    8978:	add	ip, pc, #0, 12
    897c:	add	ip, ip, #45056	; 0xb000
    8980:	ldr	pc, [ip, #1712]!	; 0x6b0

00008984 <fwrite@plt>:
    8984:	add	ip, pc, #0, 12
    8988:	add	ip, ip, #45056	; 0xb000
    898c:	ldr	pc, [ip, #1704]!	; 0x6a8

00008990 <poptBadOption@plt>:
    8990:	add	ip, pc, #0, 12
    8994:	add	ip, ip, #45056	; 0xb000
    8998:	ldr	pc, [ip, #1696]!	; 0x6a0

0000899c <lseek64@plt>:
    899c:	add	ip, pc, #0, 12
    89a0:	add	ip, ip, #45056	; 0xb000
    89a4:	ldr	pc, [ip, #1688]!	; 0x698

000089a8 <open64@plt>:
    89a8:	add	ip, pc, #0, 12
    89ac:	add	ip, ip, #45056	; 0xb000
    89b0:	ldr	pc, [ip, #1680]!	; 0x690

000089b4 <puts@plt>:
    89b4:	add	ip, pc, #0, 12
    89b8:	add	ip, ip, #45056	; 0xb000
    89bc:	ldr	pc, [ip, #1672]!	; 0x688

000089c0 <malloc@plt>:
    89c0:	add	ip, pc, #0, 12
    89c4:	add	ip, ip, #45056	; 0xb000
    89c8:	ldr	pc, [ip, #1664]!	; 0x680

000089cc <__libc_start_main@plt>:
    89cc:	add	ip, pc, #0, 12
    89d0:	add	ip, ip, #45056	; 0xb000
    89d4:	ldr	pc, [ip, #1656]!	; 0x678

000089d8 <__gmon_start__@plt>:
    89d8:	add	ip, pc, #0, 12
    89dc:	add	ip, ip, #45056	; 0xb000
    89e0:	ldr	pc, [ip, #1648]!	; 0x670

000089e4 <exit@plt>:
    89e4:	add	ip, pc, #0, 12
    89e8:	add	ip, ip, #45056	; 0xb000
    89ec:	ldr	pc, [ip, #1640]!	; 0x668

000089f0 <strlen@plt>:
    89f0:	add	ip, pc, #0, 12
    89f4:	add	ip, ip, #45056	; 0xb000
    89f8:	ldr	pc, [ip, #1632]!	; 0x660

000089fc <memset@plt>:
    89fc:	add	ip, pc, #0, 12
    8a00:	add	ip, ip, #45056	; 0xb000
    8a04:	ldr	pc, [ip, #1624]!	; 0x658

00008a08 <__printf_chk@plt>:
    8a08:	add	ip, pc, #0, 12
    8a0c:	add	ip, ip, #45056	; 0xb000
    8a10:	ldr	pc, [ip, #1616]!	; 0x650

00008a14 <write@plt>:
    8a14:	add	ip, pc, #0, 12
    8a18:	add	ip, ip, #45056	; 0xb000
    8a1c:	ldr	pc, [ip, #1608]!	; 0x648

00008a20 <__fprintf_chk@plt>:
    8a20:	add	ip, pc, #0, 12
    8a24:	add	ip, ip, #45056	; 0xb000
    8a28:	ldr	pc, [ip, #1600]!	; 0x640

00008a2c <poptGetNextOpt@plt>:
    8a2c:	add	ip, pc, #0, 12
    8a30:	add	ip, ip, #45056	; 0xb000
    8a34:	ldr	pc, [ip, #1592]!	; 0x638

00008a38 <poptGetArgs@plt>:
    8a38:	add	ip, pc, #0, 12
    8a3c:	add	ip, ip, #45056	; 0xb000
    8a40:	ldr	pc, [ip, #1584]!	; 0x630

00008a44 <abort@plt>:
    8a44:	add	ip, pc, #0, 12
    8a48:	add	ip, ip, #45056	; 0xb000
    8a4c:	ldr	pc, [ip, #1576]!	; 0x628

00008a50 <close@plt>:
    8a50:	add	ip, pc, #0, 12
    8a54:	add	ip, ip, #45056	; 0xb000
    8a58:	ldr	pc, [ip, #1568]!	; 0x620

00008a5c <__snprintf_chk@plt>:
    8a5c:	add	ip, pc, #0, 12
    8a60:	add	ip, ip, #45056	; 0xb000
    8a64:	ldr	pc, [ip, #1560]!	; 0x618

Disassembly of section .text:

00008a68 <.text>:
    8a68:	mov	fp, #0
    8a6c:	mov	lr, #0
    8a70:	pop	{r1}		; (ldr r1, [sp], #4)
    8a74:	mov	r2, sp
    8a78:	push	{r2}		; (str r2, [sp, #-4]!)
    8a7c:	push	{r0}		; (str r0, [sp, #-4]!)
    8a80:	ldr	ip, [pc, #16]	; 8a98 <__snprintf_chk@plt+0x3c>
    8a84:	push	{ip}		; (str ip, [sp, #-4]!)
    8a88:	ldr	r0, [pc, #12]	; 8a9c <__snprintf_chk@plt+0x40>
    8a8c:	ldr	r3, [pc, #12]	; 8aa0 <__snprintf_chk@plt+0x44>
    8a90:	bl	89cc <__libc_start_main@plt>
    8a94:	bl	8a44 <abort@plt>
    8a98:	ldrdeq	sl, [r0], -r8
    8a9c:	ldrdeq	r8, [r0], -ip
    8aa0:	andeq	sl, r0, r4, ror lr
    8aa4:	ldr	r3, [pc, #20]	; 8ac0 <__snprintf_chk@plt+0x64>
    8aa8:	ldr	r2, [pc, #20]	; 8ac4 <__snprintf_chk@plt+0x68>
    8aac:	add	r3, pc, r3
    8ab0:	ldr	r2, [r3, r2]
    8ab4:	cmp	r2, #0
    8ab8:	bxeq	lr
    8abc:	b	89d8 <__gmon_start__@plt>
    8ac0:	andeq	fp, r0, ip, asr #10
    8ac4:	andeq	r0, r0, r8, lsl #1
    8ac8:	push	{r3, lr}
    8acc:	movw	r0, #16528	; 0x4090
    8ad0:	ldr	r3, [pc, #36]	; 8afc <__snprintf_chk@plt+0xa0>
    8ad4:	movt	r0, #1
    8ad8:	rsb	r3, r0, r3
    8adc:	cmp	r3, #6
    8ae0:	popls	{r3, pc}
    8ae4:	movw	r3, #0
    8ae8:	movt	r3, #0
    8aec:	cmp	r3, #0
    8af0:	popeq	{r3, pc}
    8af4:	blx	r3
    8af8:	pop	{r3, pc}
    8afc:	muleq	r1, r3, r0
    8b00:	push	{r3, lr}
    8b04:	movw	r0, #16528	; 0x4090
    8b08:	movw	r3, #16528	; 0x4090
    8b0c:	movt	r0, #1
    8b10:	movt	r3, #1
    8b14:	rsb	r3, r0, r3
    8b18:	asr	r3, r3, #2
    8b1c:	add	r3, r3, r3, lsr #31
    8b20:	asrs	r1, r3, #1
    8b24:	popeq	{r3, pc}
    8b28:	movw	r2, #0
    8b2c:	movt	r2, #0
    8b30:	cmp	r2, #0
    8b34:	popeq	{r3, pc}
    8b38:	blx	r2
    8b3c:	pop	{r3, pc}
    8b40:	push	{r4, lr}
    8b44:	movw	r4, #16528	; 0x4090
    8b48:	movt	r4, #1
    8b4c:	ldrb	r3, [r4]
    8b50:	cmp	r3, #0
    8b54:	popne	{r4, pc}
    8b58:	bl	8ac8 <__snprintf_chk@plt+0x6c>
    8b5c:	mov	r3, #1
    8b60:	strb	r3, [r4]
    8b64:	pop	{r4, pc}
    8b68:	movw	r0, #16124	; 0x3efc
    8b6c:	movt	r0, #1
    8b70:	push	{r3, lr}
    8b74:	ldr	r3, [r0]
    8b78:	cmp	r3, #0
    8b7c:	beq	8b94 <__snprintf_chk@plt+0x138>
    8b80:	movw	r3, #0
    8b84:	movt	r3, #0
    8b88:	cmp	r3, #0
    8b8c:	beq	8b94 <__snprintf_chk@plt+0x138>
    8b90:	blx	r3
    8b94:	pop	{r3, lr}
    8b98:	b	8b00 <__snprintf_chk@plt+0xa4>
    8b9c:	push	{r3, lr}
    8ba0:	ldr	r3, [pc, #40]	; 8bd0 <__snprintf_chk@plt+0x174>
    8ba4:	add	r3, pc, r3
    8ba8:	ldr	r2, [pc, #36]	; 8bd4 <__snprintf_chk@plt+0x178>
    8bac:	ldr	r3, [r3, r2]
    8bb0:	ldr	r0, [pc, #32]	; 8bd8 <__snprintf_chk@plt+0x17c>
    8bb4:	add	r0, pc, r0
    8bb8:	mov	r1, #1
    8bbc:	mov	r2, #79	; 0x4f
    8bc0:	ldr	r3, [r3]
    8bc4:	bl	8984 <fwrite@plt>
    8bc8:	mov	r0, #1
    8bcc:	bl	89e4 <exit@plt>
    8bd0:	andeq	fp, r0, r4, asr r4
    8bd4:	andeq	r0, r0, r4, lsl #1
    8bd8:	andeq	r2, r0, r0, lsr r3
    8bdc:	push	{r4, r5, r6, r7, r8, lr}
    8be0:	sub	sp, sp, #144	; 0x90
    8be4:	mov	r8, r0
    8be8:	mov	r7, r1
    8bec:	ldr	r5, [pc, #416]	; 8d94 <__snprintf_chk@plt+0x338>
    8bf0:	add	r5, pc, r5
    8bf4:	ldr	r3, [pc, #412]	; 8d98 <__snprintf_chk@plt+0x33c>
    8bf8:	ldr	r3, [r5, r3]
    8bfc:	ldr	r3, [r3]
    8c00:	str	r3, [sp, #140]	; 0x8c
    8c04:	mov	r4, #0
    8c08:	str	r4, [sp, #16]
    8c0c:	str	r4, [sp, #20]
    8c10:	str	r4, [sp, #24]
    8c14:	add	r6, sp, #28
    8c18:	mov	r0, r6
    8c1c:	mov	r1, r4
    8c20:	mov	r2, #112	; 0x70
    8c24:	bl	89fc <memset@plt>
    8c28:	ldr	r3, [pc, #364]	; 8d9c <__snprintf_chk@plt+0x340>
    8c2c:	add	r3, pc, r3
    8c30:	str	r3, [sp, #28]
    8c34:	mov	r3, #102	; 0x66
    8c38:	strb	r3, [sp, #32]
    8c3c:	add	r3, sp, #16
    8c40:	str	r3, [sp, #40]	; 0x28
    8c44:	ldr	r3, [pc, #340]	; 8da0 <__snprintf_chk@plt+0x344>
    8c48:	add	r3, pc, r3
    8c4c:	str	r3, [sp, #56]	; 0x38
    8c50:	mov	r3, #83	; 0x53
    8c54:	strb	r3, [sp, #60]	; 0x3c
    8c58:	add	r3, sp, #20
    8c5c:	str	r3, [sp, #68]	; 0x44
    8c60:	ldr	r3, [pc, #316]	; 8da4 <__snprintf_chk@plt+0x348>
    8c64:	add	r3, pc, r3
    8c68:	str	r3, [sp, #84]	; 0x54
    8c6c:	mov	r3, #104	; 0x68
    8c70:	strb	r3, [sp, #88]	; 0x58
    8c74:	add	r3, sp, #24
    8c78:	str	r3, [sp, #96]	; 0x60
    8c7c:	str	r4, [sp]
    8c80:	ldr	r0, [pc, #288]	; 8da8 <__snprintf_chk@plt+0x34c>
    8c84:	add	r0, pc, r0
    8c88:	mov	r1, r8
    8c8c:	mov	r2, r7
    8c90:	mov	r3, r6
    8c94:	bl	893c <poptGetContext@plt>
    8c98:	mov	r6, r0
    8c9c:	bl	8a2c <poptGetNextOpt@plt>
    8ca0:	mov	r4, r0
    8ca4:	cmn	r0, #1
    8ca8:	bge	8cf4 <__snprintf_chk@plt+0x298>
    8cac:	ldr	r3, [pc, #248]	; 8dac <__snprintf_chk@plt+0x350>
    8cb0:	ldr	r3, [r5, r3]
    8cb4:	ldr	r7, [r3]
    8cb8:	mov	r0, r6
    8cbc:	mov	r1, #1
    8cc0:	bl	8990 <poptBadOption@plt>
    8cc4:	mov	r5, r0
    8cc8:	mov	r0, r4
    8ccc:	bl	8960 <poptStrerror@plt>
    8cd0:	str	r0, [sp]
    8cd4:	mov	r0, r7
    8cd8:	mov	r1, #1
    8cdc:	ldr	r2, [pc, #204]	; 8db0 <__snprintf_chk@plt+0x354>
    8ce0:	add	r2, pc, r2
    8ce4:	mov	r3, r5
    8ce8:	bl	8a20 <__fprintf_chk@plt>
    8cec:	mov	r0, #1
    8cf0:	bl	89e4 <exit@plt>
    8cf4:	ldr	r3, [sp, #24]
    8cf8:	cmp	r3, #0
    8cfc:	beq	8d04 <__snprintf_chk@plt+0x2a8>
    8d00:	bl	8b9c <__snprintf_chk@plt+0x140>
    8d04:	mov	r0, r6
    8d08:	bl	8a38 <poptGetArgs@plt>
    8d0c:	subs	r4, r0, #0
    8d10:	beq	8d2c <__snprintf_chk@plt+0x2d0>
    8d14:	ldr	r0, [r4]
    8d18:	cmp	r0, #0
    8d1c:	beq	8d2c <__snprintf_chk@plt+0x2d0>
    8d20:	ldrb	r3, [r0]
    8d24:	cmp	r3, #0
    8d28:	bne	8d30 <__snprintf_chk@plt+0x2d4>
    8d2c:	bl	8b9c <__snprintf_chk@plt+0x140>
    8d30:	add	r3, sp, #12
    8d34:	str	r3, [sp]
    8d38:	ldr	r1, [sp, #20]
    8d3c:	ldr	r2, [sp, #16]
    8d40:	mov	r3, #0
    8d44:	bl	8e14 <__snprintf_chk@plt+0x3b8>
    8d48:	cmp	r0, #0
    8d4c:	beq	8d8c <__snprintf_chk@plt+0x330>
    8d50:	ldr	r3, [pc, #84]	; 8dac <__snprintf_chk@plt+0x350>
    8d54:	ldr	r5, [r5, r3]
    8d58:	ldr	r0, [pc, #84]	; 8db4 <__snprintf_chk@plt+0x358>
    8d5c:	add	r0, pc, r0
    8d60:	mov	r1, #1
    8d64:	mov	r2, #7
    8d68:	ldr	r3, [r5]
    8d6c:	bl	8984 <fwrite@plt>
    8d70:	ldr	r0, [r5]
    8d74:	mov	r1, #1
    8d78:	ldr	r2, [sp, #12]
    8d7c:	ldr	r3, [r4]
    8d80:	bl	8a20 <__fprintf_chk@plt>
    8d84:	mov	r0, #1
    8d88:	bl	89e4 <exit@plt>
    8d8c:	mov	r0, #0
    8d90:	bl	89e4 <exit@plt>
    8d94:	andeq	fp, r0, r8, lsl #8
    8d98:	andeq	r0, r0, r0, lsl #1
    8d9c:	andeq	r2, r0, r8, lsl #6
    8da0:	strdeq	r2, [r0], -r4
    8da4:	andeq	r2, r0, r8, ror #5
    8da8:	ldrdeq	r2, [r0], -r0
    8dac:	andeq	r0, r0, r4, lsl #1
    8db0:	andeq	r2, r0, r4, lsl #5
    8db4:	andeq	r2, r0, ip, lsl r2
    8db8:	push	{r4, r5, r6, lr}
    8dbc:	mov	r6, r0
    8dc0:	mov	r5, r1
    8dc4:	mov	r4, r2
    8dc8:	mov	r0, r1
    8dcc:	bl	89f0 <strlen@plt>
    8dd0:	mov	r2, r0
    8dd4:	add	r3, r0, r4
    8dd8:	cmp	r3, #512	; 0x200
    8ddc:	bcc	8df4 <__snprintf_chk@plt+0x398>
    8de0:	ldr	r0, [pc, #40]	; 8e10 <__snprintf_chk@plt+0x3b4>
    8de4:	add	r0, pc, r0
    8de8:	bl	89b4 <puts@plt>
    8dec:	mvn	r0, #0
    8df0:	bl	89e4 <exit@plt>
    8df4:	add	r0, r6, r4
    8df8:	mov	r1, r5
    8dfc:	bl	8954 <memcpy@plt>
    8e00:	mov	r0, r5
    8e04:	bl	89f0 <strlen@plt>
    8e08:	add	r0, r0, r4
    8e0c:	pop	{r4, r5, r6, pc}
    8e10:	muleq	r0, ip, r1
    8e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e18:	sub	sp, sp, #2960	; 0xb90
    8e1c:	sub	sp, sp, #4
    8e20:	str	r1, [sp, #68]	; 0x44
    8e24:	mov	r8, r2
    8e28:	str	r3, [sp, #64]	; 0x40
    8e2c:	ldr	r9, [sp, #3000]	; 0xbb8
    8e30:	ldr	r1, [pc, #1888]	; 9598 <__snprintf_chk@plt+0xb3c>
    8e34:	add	r1, pc, r1
    8e38:	str	r1, [sp, #52]	; 0x34
    8e3c:	ldr	r3, [pc, #1880]	; 959c <__snprintf_chk@plt+0xb40>
    8e40:	ldr	r3, [r1, r3]
    8e44:	ldr	r3, [r3]
    8e48:	str	r3, [sp, #2956]	; 0xb8c
    8e4c:	mov	r1, #2
    8e50:	bl	89a8 <open64@plt>
    8e54:	cmp	r0, #0
    8e58:	str	r0, [sp, #24]
    8e5c:	bge	8e74 <__snprintf_chk@plt+0x418>
    8e60:	ldr	r3, [pc, #1848]	; 95a0 <__snprintf_chk@plt+0xb44>
    8e64:	add	r3, pc, r3
    8e68:	str	r3, [r9]
    8e6c:	mvn	r0, #0
    8e70:	b	9498 <__snprintf_chk@plt+0xa3c>
    8e74:	mov	r3, #0
    8e78:	str	r3, [sp]
    8e7c:	ldr	r0, [sp, #24]
    8e80:	mov	r2, #32768	; 0x8000
    8e84:	mov	r3, #0
    8e88:	bl	899c <lseek64@plt>
    8e8c:	mvn	r2, #0
    8e90:	mvn	r3, #0
    8e94:	cmp	r1, r3
    8e98:	cmpeq	r0, r2
    8e9c:	beq	8f20 <__snprintf_chk@plt+0x4c4>
    8ea0:	mov	r6, #32768	; 0x8000
    8ea4:	mov	r7, #0
    8ea8:	add	r5, sp, #908	; 0x38c
    8eac:	mov	r4, #2048	; 0x800
    8eb0:	ldr	sl, [sp, #24]
    8eb4:	mov	r0, sl
    8eb8:	mov	r1, r5
    8ebc:	mov	r2, r4
    8ec0:	bl	8924 <read@plt>
    8ec4:	cmn	r0, #1
    8ec8:	beq	8f20 <__snprintf_chk@plt+0x4c4>
    8ecc:	ldrb	r3, [sp, #908]	; 0x38c
    8ed0:	cmp	r3, #1
    8ed4:	beq	8eec <__snprintf_chk@plt+0x490>
    8ed8:	cmp	r3, #255	; 0xff
    8edc:	beq	8f20 <__snprintf_chk@plt+0x4c4>
    8ee0:	adds	r6, r6, #2048	; 0x800
    8ee4:	adc	r7, r7, #0
    8ee8:	b	8eb4 <__snprintf_chk@plt+0x458>
    8eec:	ldrb	r1, [sp, #992]	; 0x3e0
    8ef0:	ldrb	r3, [sp, #993]	; 0x3e1
    8ef4:	add	r1, r3, r1, lsl #8
    8ef8:	ldrb	r3, [sp, #994]	; 0x3e2
    8efc:	add	r1, r3, r1, lsl #8
    8f00:	ldrb	r3, [sp, #995]	; 0x3e3
    8f04:	add	r1, r3, r1, lsl #8
    8f08:	asr	r3, r1, #31
    8f0c:	lsl	r5, r3, #11
    8f10:	orr	r5, r5, r1, lsr #21
    8f14:	lsl	r4, r1, #11
    8f18:	cmp	r6, #0
    8f1c:	bge	8f34 <__snprintf_chk@plt+0x4d8>
    8f20:	ldr	r3, [pc, #1660]	; 95a4 <__snprintf_chk@plt+0xb48>
    8f24:	add	r3, pc, r3
    8f28:	str	r3, [r9]
    8f2c:	mvn	r0, #0
    8f30:	b	9498 <__snprintf_chk@plt+0xa3c>
    8f34:	add	r6, r6, #880	; 0x370
    8f38:	add	r6, r6, #3
    8f3c:	mov	r2, r6
    8f40:	asr	r3, r6, #31
    8f44:	strd	r2, [sp, #56]	; 0x38
    8f48:	mov	r3, #0
    8f4c:	str	r3, [sp]
    8f50:	ldr	r0, [sp, #24]
    8f54:	ldrd	r2, [sp, #56]	; 0x38
    8f58:	bl	899c <lseek64@plt>
    8f5c:	ldr	r0, [sp, #24]
    8f60:	add	r1, sp, #396	; 0x18c
    8f64:	mov	r2, #512	; 0x200
    8f68:	bl	8924 <read@plt>
    8f6c:	cmp	r8, #0
    8f70:	bne	8fb8 <__snprintf_chk@plt+0x55c>
    8f74:	add	r0, sp, #400	; 0x190
    8f78:	sub	r3, r0, #5
    8f7c:	add	r0, sp, #904	; 0x388
    8f80:	add	r0, r0, #3
    8f84:	mov	r2, #0
    8f88:	ldrb	r1, [r3, #1]!
    8f8c:	cmp	r1, #32
    8f90:	movne	r2, #1
    8f94:	cmp	r3, r0
    8f98:	bne	8f88 <__snprintf_chk@plt+0x52c>
    8f9c:	cmp	r2, #0
    8fa0:	beq	9014 <__snprintf_chk@plt+0x5b8>
    8fa4:	ldr	r3, [pc, #1532]	; 95a8 <__snprintf_chk@plt+0xb4c>
    8fa8:	add	r3, pc, r3
    8fac:	str	r3, [r9]
    8fb0:	mvn	r0, #0
    8fb4:	b	9498 <__snprintf_chk@plt+0xa3c>
    8fb8:	mov	r3, #0
    8fbc:	str	r3, [sp]
    8fc0:	ldr	r0, [sp, #24]
    8fc4:	ldrd	r2, [sp, #56]	; 0x38
    8fc8:	bl	899c <lseek64@plt>
    8fcc:	add	r6, sp, #908	; 0x38c
    8fd0:	mov	r0, r6
    8fd4:	mov	r1, #32
    8fd8:	mov	r2, #512	; 0x200
    8fdc:	bl	89fc <memset@plt>
    8fe0:	ldr	r0, [sp, #24]
    8fe4:	mov	r1, r6
    8fe8:	mov	r2, #512	; 0x200
    8fec:	bl	8a14 <write@plt>
    8ff0:	subs	r2, r0, #0
    8ff4:	bge	9014 <__snprintf_chk@plt+0x5b8>
    8ff8:	mov	r0, #1
    8ffc:	ldr	r1, [pc, #1448]	; 95ac <__snprintf_chk@plt+0xb50>
    9000:	add	r1, pc, r1
    9004:	bl	8a08 <__printf_chk@plt>
    9008:	ldr	r0, [pc, #1440]	; 95b0 <__snprintf_chk@plt+0xb54>
    900c:	add	r0, pc, r0
    9010:	bl	8978 <perror@plt>
    9014:	mov	r6, #0
    9018:	str	r6, [sp]
    901c:	ldr	r0, [sp, #24]
    9020:	mov	r2, #0
    9024:	mov	r3, #0
    9028:	bl	899c <lseek64@plt>
    902c:	add	r0, sp, #72	; 0x48
    9030:	bl	9640 <__snprintf_chk@plt+0xbe4>
    9034:	strb	r6, [sp, #332]	; 0x14c
    9038:	mov	r0, #32768	; 0x8000
    903c:	bl	89c0 <malloc@plt>
    9040:	str	r0, [sp, #20]
    9044:	subs	r0, r4, #30720	; 0x7800
    9048:	sbc	r1, r5, #0
    904c:	strd	r0, [sp, #8]
    9050:	cmp	r0, #1
    9054:	sbcs	r1, r1, #0
    9058:	blt	918c <__snprintf_chk@plt+0x730>
    905c:	mov	r8, #0
    9060:	mov	r9, #0
    9064:	mov	r4, r6
    9068:	add	r3, sp, #72	; 0x48
    906c:	str	r3, [sp, #28]
    9070:	add	r3, sp, #164	; 0xa4
    9074:	str	r3, [sp, #32]
    9078:	ldr	r2, [pc, #1332]	; 95b4 <__snprintf_chk@plt+0xb58>
    907c:	add	r2, pc, r2
    9080:	str	r2, [sp, #48]	; 0x30
    9084:	ldrd	r2, [sp, #8]
    9088:	subs	r2, r2, r8
    908c:	sbc	r3, r3, r9
    9090:	mov	r0, #32768	; 0x8000
    9094:	mov	r1, #0
    9098:	cmp	r0, r2
    909c:	sbcs	r1, r1, r3
    90a0:	movlt	r2, #32768	; 0x8000
    90a4:	ldr	r0, [sp, #24]
    90a8:	ldr	r1, [sp, #20]
    90ac:	mov	r3, #32768	; 0x8000
    90b0:	bl	8930 <__read_chk@plt>
    90b4:	subs	sl, r0, #0
    90b8:	ble	918c <__snprintf_chk@plt+0x730>
    90bc:	ldr	r0, [sp, #28]
    90c0:	ldr	r1, [sp, #20]
    90c4:	mov	r2, sl
    90c8:	bl	a088 <__snprintf_chk@plt+0x162c>
    90cc:	mov	r3, #21
    90d0:	umull	r0, r1, r8, r3
    90d4:	mla	r1, r3, r9, r1
    90d8:	ldrd	r2, [sp, #8]
    90dc:	bl	a2dc <__snprintf_chk@plt+0x1880>
    90e0:	mov	r7, r0
    90e4:	cmp	r0, r4
    90e8:	beq	9174 <__snprintf_chk@plt+0x718>
    90ec:	ldr	r0, [sp, #32]
    90f0:	ldr	r1, [sp, #28]
    90f4:	mov	r2, #92	; 0x5c
    90f8:	bl	8954 <memcpy@plt>
    90fc:	add	fp, sp, #288	; 0x120
    9100:	add	r0, sp, #276	; 0x114
    9104:	ldr	r1, [sp, #32]
    9108:	bl	a1d0 <__snprintf_chk@plt+0x1774>
    910c:	sub	r4, fp, #13
    9110:	sub	fp, fp, #10
    9114:	add	r6, sp, #292	; 0x124
    9118:	mov	r5, #2
    911c:	add	r3, sp, #332	; 0x14c
    9120:	str	r3, [sp, #36]	; 0x24
    9124:	strd	r8, [sp, #40]	; 0x28
    9128:	add	r8, sp, #332	; 0x14c
    912c:	ldr	r9, [sp, #48]	; 0x30
    9130:	str	r9, [sp]
    9134:	ldrb	r3, [r4, #1]!
    9138:	str	r3, [sp, #4]
    913c:	mov	r0, r6
    9140:	mov	r1, r5
    9144:	mov	r2, #1
    9148:	mov	r3, r5
    914c:	bl	8a5c <__snprintf_chk@plt>
    9150:	mov	r0, r8
    9154:	mov	r1, r6
    9158:	mov	r2, r5
    915c:	mov	r3, #61	; 0x3d
    9160:	bl	8918 <__strncat_chk@plt>
    9164:	cmp	r4, fp
    9168:	bne	9130 <__snprintf_chk@plt+0x6d4>
    916c:	ldrd	r8, [sp, #40]	; 0x28
    9170:	mov	r4, r7
    9174:	adds	r8, r8, sl
    9178:	adc	r9, r9, sl, asr #31
    917c:	ldrd	r2, [sp, #8]
    9180:	cmp	r8, r2
    9184:	sbcs	r3, r9, r3
    9188:	blt	9084 <__snprintf_chk@plt+0x628>
    918c:	ldr	r0, [sp, #20]
    9190:	bl	8948 <free@plt>
    9194:	add	fp, sp, #272	; 0x110
    9198:	add	r0, sp, #260	; 0x104
    919c:	add	r1, sp, #72	; 0x48
    91a0:	bl	a1d0 <__snprintf_chk@plt+0x1774>
    91a4:	mov	r3, #0
    91a8:	strb	r3, [sp, #292]	; 0x124
    91ac:	sub	r4, fp, #13
    91b0:	add	fp, fp, #3
    91b4:	add	r5, sp, #256	; 0x100
    91b8:	ldr	sl, [pc, #1016]	; 95b8 <__snprintf_chk@plt+0xb5c>
    91bc:	add	sl, pc, sl
    91c0:	mov	r9, #4
    91c4:	mov	r8, #1
    91c8:	add	r7, sp, #292	; 0x124
    91cc:	mov	r6, #2
    91d0:	str	sl, [sp]
    91d4:	ldrb	r3, [r4, #1]!
    91d8:	str	r3, [sp, #4]
    91dc:	mov	r0, r5
    91e0:	mov	r1, r9
    91e4:	mov	r2, r8
    91e8:	mov	r3, r9
    91ec:	bl	8a5c <__snprintf_chk@plt>
    91f0:	mov	r0, r7
    91f4:	mov	r1, r5
    91f8:	mov	r2, r6
    91fc:	mov	r3, #40	; 0x28
    9200:	bl	8918 <__strncat_chk@plt>
    9204:	cmp	r4, fp
    9208:	bne	91d0 <__snprintf_chk@plt+0x774>
    920c:	ldr	r0, [sp, #64]	; 0x40
    9210:	cmp	r0, #0
    9214:	bne	94b8 <__snprintf_chk@plt+0xa5c>
    9218:	ldr	r0, [pc, #924]	; 95bc <__snprintf_chk@plt+0xb60>
    921c:	add	r0, pc, r0
    9220:	bl	89b4 <puts@plt>
    9224:	add	r5, sp, #292	; 0x124
    9228:	mov	r0, #1
    922c:	ldr	r1, [pc, #908]	; 95c0 <__snprintf_chk@plt+0xb64>
    9230:	add	r1, pc, r1
    9234:	mov	r2, r5
    9238:	bl	8a08 <__printf_chk@plt>
    923c:	ldr	r0, [pc, #896]	; 95c4 <__snprintf_chk@plt+0xb68>
    9240:	add	r0, pc, r0
    9244:	bl	89b4 <puts@plt>
    9248:	mov	r0, #1
    924c:	ldr	r1, [pc, #884]	; 95c8 <__snprintf_chk@plt+0xb6c>
    9250:	add	r1, pc, r1
    9254:	add	r2, sp, #332	; 0x14c
    9258:	bl	8a08 <__printf_chk@plt>
    925c:	mov	r0, #1
    9260:	ldr	r1, [pc, #868]	; 95cc <__snprintf_chk@plt+0xb70>
    9264:	add	r1, pc, r1
    9268:	mov	r2, #20
    926c:	bl	8a08 <__printf_chk@plt>
    9270:	add	r4, sp, #908	; 0x38c
    9274:	mov	r0, r4
    9278:	mov	r1, #32
    927c:	mov	r2, #512	; 0x200
    9280:	bl	89fc <memset@plt>
    9284:	mov	r0, r4
    9288:	ldr	r1, [pc, #832]	; 95d0 <__snprintf_chk@plt+0xb74>
    928c:	add	r1, pc, r1
    9290:	mov	r2, #0
    9294:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9298:	mov	r2, r0
    929c:	mov	r0, r4
    92a0:	mov	r1, r5
    92a4:	bl	8db8 <__snprintf_chk@plt+0x35c>
    92a8:	mov	r2, r0
    92ac:	ldr	r6, [pc, #800]	; 95d4 <__snprintf_chk@plt+0xb78>
    92b0:	add	r6, pc, r6
    92b4:	mov	r0, r4
    92b8:	mov	r1, r6
    92bc:	bl	8db8 <__snprintf_chk@plt+0x35c>
    92c0:	mov	r7, r0
    92c4:	mov	r0, #512	; 0x200
    92c8:	bl	89c0 <malloc@plt>
    92cc:	mov	r5, r0
    92d0:	ldr	r3, [pc, #768]	; 95d8 <__snprintf_chk@plt+0xb7c>
    92d4:	add	r3, pc, r3
    92d8:	str	r3, [sp]
    92dc:	mov	r3, #15
    92e0:	str	r3, [sp, #4]
    92e4:	mov	r1, #512	; 0x200
    92e8:	mov	r2, #1
    92ec:	mov	r3, r1
    92f0:	bl	8a5c <__snprintf_chk@plt>
    92f4:	mov	r0, r4
    92f8:	mov	r1, r5
    92fc:	mov	r2, r7
    9300:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9304:	mov	r2, r0
    9308:	mov	r0, r4
    930c:	mov	r1, r6
    9310:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9314:	mov	r4, r0
    9318:	mov	r0, r5
    931c:	bl	8948 <free@plt>
    9320:	ldr	r1, [sp, #68]	; 0x44
    9324:	cmp	r1, #0
    9328:	bne	9578 <__snprintf_chk@plt+0xb1c>
    932c:	b	934c <__snprintf_chk@plt+0x8f0>
    9330:	add	r0, sp, #908	; 0x38c
    9334:	ldr	r1, [pc, #672]	; 95dc <__snprintf_chk@plt+0xb80>
    9338:	add	r1, pc, r1
    933c:	mov	r2, r4
    9340:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9344:	mov	r2, r0
    9348:	b	9370 <__snprintf_chk@plt+0x914>
    934c:	ldr	r0, [pc, #652]	; 95e0 <__snprintf_chk@plt+0xb84>
    9350:	add	r0, pc, r0
    9354:	bl	89b4 <puts@plt>
    9358:	add	r0, sp, #908	; 0x38c
    935c:	ldr	r1, [pc, #640]	; 95e4 <__snprintf_chk@plt+0xb88>
    9360:	add	r1, pc, r1
    9364:	mov	r2, r4
    9368:	bl	8db8 <__snprintf_chk@plt+0x35c>
    936c:	mov	r2, r0
    9370:	add	r4, sp, #908	; 0x38c
    9374:	ldr	r5, [pc, #620]	; 95e8 <__snprintf_chk@plt+0xb8c>
    9378:	add	r5, pc, r5
    937c:	mov	r0, r4
    9380:	mov	r1, r5
    9384:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9388:	mov	r2, r0
    938c:	mov	r0, r4
    9390:	ldr	r1, [pc, #596]	; 95ec <__snprintf_chk@plt+0xb90>
    9394:	add	r1, pc, r1
    9398:	bl	8db8 <__snprintf_chk@plt+0x35c>
    939c:	mov	r2, r0
    93a0:	mov	r0, r4
    93a4:	add	r1, sp, #332	; 0x14c
    93a8:	bl	8db8 <__snprintf_chk@plt+0x35c>
    93ac:	mov	r2, r0
    93b0:	mov	r0, r4
    93b4:	mov	r1, r5
    93b8:	bl	8db8 <__snprintf_chk@plt+0x35c>
    93bc:	mov	r7, r0
    93c0:	mov	r0, #512	; 0x200
    93c4:	bl	89c0 <malloc@plt>
    93c8:	mov	r6, r0
    93cc:	ldr	r3, [pc, #540]	; 95f0 <__snprintf_chk@plt+0xb94>
    93d0:	add	r3, pc, r3
    93d4:	str	r3, [sp]
    93d8:	mov	r3, #20
    93dc:	str	r3, [sp, #4]
    93e0:	mov	r1, #512	; 0x200
    93e4:	mov	r2, #1
    93e8:	mov	r3, r1
    93ec:	bl	8a5c <__snprintf_chk@plt>
    93f0:	mov	r0, r4
    93f4:	mov	r1, r6
    93f8:	mov	r2, r7
    93fc:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9400:	mov	r2, r0
    9404:	mov	r0, r4
    9408:	mov	r1, r5
    940c:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9410:	mov	r5, r0
    9414:	mov	r0, r6
    9418:	bl	8948 <free@plt>
    941c:	mov	r0, r4
    9420:	ldr	r1, [pc, #460]	; 95f4 <__snprintf_chk@plt+0xb98>
    9424:	add	r1, pc, r1
    9428:	mov	r2, r5
    942c:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9430:	mov	r3, #0
    9434:	str	r3, [sp]
    9438:	ldr	r0, [sp, #24]
    943c:	ldrd	r2, [sp, #56]	; 0x38
    9440:	bl	899c <lseek64@plt>
    9444:	cmp	r0, #0
    9448:	bge	9458 <__snprintf_chk@plt+0x9fc>
    944c:	ldr	r0, [pc, #420]	; 95f8 <__snprintf_chk@plt+0xb9c>
    9450:	add	r0, pc, r0
    9454:	bl	89b4 <puts@plt>
    9458:	ldr	r0, [sp, #24]
    945c:	add	r1, sp, #908	; 0x38c
    9460:	mov	r2, #512	; 0x200
    9464:	bl	8a14 <write@plt>
    9468:	subs	r2, r0, #0
    946c:	bge	948c <__snprintf_chk@plt+0xa30>
    9470:	mov	r0, #1
    9474:	ldr	r1, [pc, #384]	; 95fc <__snprintf_chk@plt+0xba0>
    9478:	add	r1, pc, r1
    947c:	bl	8a08 <__printf_chk@plt>
    9480:	ldr	r0, [pc, #376]	; 9600 <__snprintf_chk@plt+0xba4>
    9484:	add	r0, pc, r0
    9488:	bl	8978 <perror@plt>
    948c:	ldr	r0, [sp, #24]
    9490:	bl	8a50 <close@plt>
    9494:	mov	r0, #0
    9498:	ldr	r3, [pc, #252]	; 959c <__snprintf_chk@plt+0xb40>
    949c:	ldr	r2, [sp, #52]	; 0x34
    94a0:	ldr	r3, [r2, r3]
    94a4:	ldr	r2, [sp, #2956]	; 0xb8c
    94a8:	ldr	r3, [r3]
    94ac:	cmp	r2, r3
    94b0:	beq	958c <__snprintf_chk@plt+0xb30>
    94b4:	b	9588 <__snprintf_chk@plt+0xb2c>
    94b8:	add	r4, sp, #908	; 0x38c
    94bc:	mov	r0, r4
    94c0:	mov	r1, #32
    94c4:	mov	r2, #512	; 0x200
    94c8:	bl	89fc <memset@plt>
    94cc:	mov	r0, r4
    94d0:	ldr	r1, [pc, #300]	; 9604 <__snprintf_chk@plt+0xba8>
    94d4:	add	r1, pc, r1
    94d8:	mov	r2, #0
    94dc:	bl	8db8 <__snprintf_chk@plt+0x35c>
    94e0:	mov	r2, r0
    94e4:	mov	r0, r4
    94e8:	add	r1, sp, #292	; 0x124
    94ec:	bl	8db8 <__snprintf_chk@plt+0x35c>
    94f0:	mov	r2, r0
    94f4:	ldr	r6, [pc, #268]	; 9608 <__snprintf_chk@plt+0xbac>
    94f8:	add	r6, pc, r6
    94fc:	mov	r0, r4
    9500:	mov	r1, r6
    9504:	bl	8db8 <__snprintf_chk@plt+0x35c>
    9508:	mov	r7, r0
    950c:	mov	r0, #512	; 0x200
    9510:	bl	89c0 <malloc@plt>
    9514:	mov	r5, r0
    9518:	ldr	r3, [pc, #236]	; 960c <__snprintf_chk@plt+0xbb0>
    951c:	add	r3, pc, r3
    9520:	str	r3, [sp]
    9524:	mov	r3, #15
    9528:	str	r3, [sp, #4]
    952c:	mov	r1, #512	; 0x200
    9530:	mov	r2, #1
    9534:	mov	r3, r1
    9538:	bl	8a5c <__snprintf_chk@plt>
    953c:	mov	r0, r4
    9540:	mov	r1, r5
    9544:	mov	r2, r7
    9548:	bl	8db8 <__snprintf_chk@plt+0x35c>
    954c:	mov	r2, r0
    9550:	mov	r0, r4
    9554:	mov	r1, r6
    9558:	bl	8db8 <__snprintf_chk@plt+0x35c>
    955c:	mov	r4, r0
    9560:	mov	r0, r5
    9564:	bl	8948 <free@plt>
    9568:	ldr	r3, [sp, #68]	; 0x44
    956c:	cmp	r3, #0
    9570:	bne	9330 <__snprintf_chk@plt+0x8d4>
    9574:	b	9358 <__snprintf_chk@plt+0x8fc>
    9578:	ldr	r0, [pc, #144]	; 9610 <__snprintf_chk@plt+0xbb4>
    957c:	add	r0, pc, r0
    9580:	bl	89b4 <puts@plt>
    9584:	b	9330 <__snprintf_chk@plt+0x8d4>
    9588:	bl	896c <__stack_chk_fail@plt>
    958c:	add	sp, sp, #2960	; 0xb90
    9590:	add	sp, sp, #4
    9594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9598:	andeq	fp, r0, r4, asr #3
    959c:	andeq	r0, r0, r0, lsl #1
    95a0:	andeq	r2, r0, ip, asr #2
    95a4:	strheq	r2, [r0], -r0
    95a8:	andeq	r2, r0, r0, asr r0
    95ac:	andeq	r2, r0, r4, lsr r0
    95b0:	andeq	r1, r0, r4, asr #31
    95b4:	andeq	r1, r0, ip, asr #31
    95b8:	muleq	r0, r4, lr
    95bc:	andeq	r1, r0, ip, lsr lr
    95c0:	andeq	r1, r0, r0, lsl #29
    95c4:	andeq	r1, r0, ip, lsr lr
    95c8:	andeq	r1, r0, ip, asr lr
    95cc:	andeq	r1, r0, r8, asr lr
    95d0:	andeq	r1, r0, ip, lsr lr
    95d4:	andeq	r1, r0, r8, lsr #28
    95d8:	andeq	r1, r0, r8, lsl #28
    95dc:			; <UNDEFINED> instruction: 0x00001db8
    95e0:			; <UNDEFINED> instruction: 0x00001db0
    95e4:			; <UNDEFINED> instruction: 0x00001dbc
    95e8:	andeq	r1, r0, r0, ror #26
    95ec:	muleq	r0, r8, sp
    95f0:	andeq	r1, r0, r0, ror sp
    95f4:	andeq	r1, r0, r0, lsr sp
    95f8:	andeq	r1, r0, ip, lsr sp
    95fc:			; <UNDEFINED> instruction: 0x00001bbc
    9600:	andeq	r1, r0, ip, asr #22
    9604:	strdeq	r1, [r0], -r4
    9608:	andeq	r1, r0, r0, ror #23
    960c:	andeq	r1, r0, r0, asr #23
    9610:	andeq	r1, r0, ip, lsl ip
    9614:	ldrb	r2, [r0, #1]
    9618:	ldrb	r3, [r0]
    961c:	orr	r2, r3, r2, lsl #8
    9620:	ldrb	ip, [r0, #3]
    9624:	ldrb	r3, [r0, #2]
    9628:	orr	r3, r3, ip, lsl #8
    962c:	orr	r3, r2, r3, lsl #16
    9630:	str	r3, [r0], #4
    9634:	subs	r1, r1, #1
    9638:	bne	9614 <__snprintf_chk@plt+0xbb8>
    963c:	bx	lr
    9640:	movw	r3, #8961	; 0x2301
    9644:	movt	r3, #26437	; 0x6745
    9648:	str	r3, [r0]
    964c:	movw	r3, #43913	; 0xab89
    9650:	movt	r3, #61389	; 0xefcd
    9654:	str	r3, [r0, #4]
    9658:	movw	r3, #56574	; 0xdcfe
    965c:	movt	r3, #39098	; 0x98ba
    9660:	str	r3, [r0, #8]
    9664:	movw	r3, #21622	; 0x5476
    9668:	movt	r3, #4146	; 0x1032
    966c:	str	r3, [r0, #12]
    9670:	mov	r3, #0
    9674:	str	r3, [r0, #16]
    9678:	str	r3, [r0, #20]
    967c:	str	r3, [r0, #88]	; 0x58
    9680:	bx	lr
    9684:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    9688:	sub	sp, sp, #48	; 0x30
    968c:	ldr	r8, [r1]
    9690:	movw	r3, #42104	; 0xa478
    9694:	movt	r3, #55146	; 0xd76a
    9698:	add	r3, r8, r3
    969c:	ldr	r2, [r0]
    96a0:	add	r3, r3, r2
    96a4:	ldr	r4, [r0, #12]
    96a8:	ldr	r5, [r0, #8]
    96ac:	eor	r2, r4, r5
    96b0:	ldr	r6, [r0, #4]
    96b4:	and	r2, r2, r6
    96b8:	eor	r2, r2, r4
    96bc:	add	r3, r3, r2
    96c0:	add	r3, r6, r3, ror #25
    96c4:	ldr	r9, [r1, #4]
    96c8:	str	r9, [sp, #8]
    96cc:	movw	r4, #46934	; 0xb756
    96d0:	movt	r4, #59591	; 0xe8c7
    96d4:	add	r4, r9, r4
    96d8:	ldr	sl, [r0, #12]
    96dc:	add	r4, r4, sl
    96e0:	eor	r2, r5, r6
    96e4:	and	r2, r3, r2
    96e8:	eor	r2, r2, r5
    96ec:	add	r4, r4, r2
    96f0:	add	r4, r3, r4, ror #20
    96f4:	ldr	fp, [r1, #8]
    96f8:	str	fp, [sp, #12]
    96fc:	movw	ip, #28891	; 0x70db
    9700:	movt	ip, #9248	; 0x2420
    9704:	add	ip, fp, ip
    9708:	add	ip, ip, r5
    970c:	eor	r2, r3, r6
    9710:	and	r2, r4, r2
    9714:	eor	r2, r2, r6
    9718:	add	ip, ip, r2
    971c:	add	ip, r4, ip, ror #15
    9720:	ldr	r2, [r1, #12]
    9724:	str	r2, [sp, #16]
    9728:	movw	r5, #52974	; 0xceee
    972c:	movt	r5, #49597	; 0xc1bd
    9730:	add	r5, r2, r5
    9734:	add	r5, r5, r6
    9738:	eor	r2, r4, r3
    973c:	and	r2, ip, r2
    9740:	eor	r2, r2, r3
    9744:	add	r2, r5, r2
    9748:	add	r2, ip, r2, ror #10
    974c:	ldr	r5, [r1, #16]
    9750:	str	r5, [sp, #20]
    9754:	movw	r5, #4015	; 0xfaf
    9758:	movt	r5, #62844	; 0xf57c
    975c:	ldr	r6, [sp, #20]
    9760:	add	r5, r6, r5
    9764:	add	r3, r5, r3
    9768:	eor	r6, ip, r4
    976c:	and	r6, r2, r6
    9770:	eor	r6, r6, r4
    9774:	add	r3, r3, r6
    9778:	add	r3, r2, r3, ror #25
    977c:	ldr	r9, [r1, #20]
    9780:	str	r9, [sp, #24]
    9784:	movw	r5, #50730	; 0xc62a
    9788:	movt	r5, #18311	; 0x4787
    978c:	add	r5, r9, r5
    9790:	add	r4, r5, r4
    9794:	eor	r6, r2, ip
    9798:	and	r6, r3, r6
    979c:	eor	r6, r6, ip
    97a0:	add	r4, r4, r6
    97a4:	add	r4, r3, r4, ror #20
    97a8:	ldr	sl, [r1, #24]
    97ac:	str	sl, [sp, #28]
    97b0:	movw	r5, #17939	; 0x4613
    97b4:	movt	r5, #43056	; 0xa830
    97b8:	add	r5, sl, r5
    97bc:	add	r5, r5, ip
    97c0:	eor	r6, r3, r2
    97c4:	and	r6, r4, r6
    97c8:	eor	r6, r6, r2
    97cc:	add	r5, r5, r6
    97d0:	add	r5, r4, r5, ror #15
    97d4:	ldr	r7, [r1, #28]
    97d8:	movw	ip, #38145	; 0x9501
    97dc:	movt	ip, #64838	; 0xfd46
    97e0:	add	ip, r7, ip
    97e4:	add	r2, ip, r2
    97e8:	eor	r6, r4, r3
    97ec:	and	r6, r5, r6
    97f0:	eor	r6, r6, r3
    97f4:	add	r2, r2, r6
    97f8:	add	r2, r5, r2, ror #10
    97fc:	ldr	fp, [r1, #32]
    9800:	str	fp, [sp, #32]
    9804:	movw	ip, #39128	; 0x98d8
    9808:	movt	ip, #27008	; 0x6980
    980c:	add	ip, fp, ip
    9810:	add	r3, ip, r3
    9814:	eor	r6, r5, r4
    9818:	and	r6, r2, r6
    981c:	eor	r6, r6, r4
    9820:	add	r3, r3, r6
    9824:	add	r3, r2, r3, ror #25
    9828:	ldr	ip, [r1, #36]	; 0x24
    982c:	str	ip, [sp, #36]	; 0x24
    9830:	movw	r6, #63407	; 0xf7af
    9834:	movt	r6, #35652	; 0x8b44
    9838:	add	r6, ip, r6
    983c:	add	r6, r6, r4
    9840:	eor	ip, r2, r5
    9844:	and	ip, r3, ip
    9848:	eor	ip, ip, r5
    984c:	add	r6, r6, ip
    9850:	add	r6, r3, r6, ror #20
    9854:	ldr	r4, [r1, #40]	; 0x28
    9858:	sub	ip, r4, #41984	; 0xa400
    985c:	sub	ip, ip, #79	; 0x4f
    9860:	add	r5, ip, r5
    9864:	eor	r9, r3, r2
    9868:	and	r9, r6, r9
    986c:	eor	r9, r9, r2
    9870:	add	r5, r5, r9
    9874:	add	ip, r6, r5, ror #15
    9878:	ldr	r5, [r1, #44]	; 0x2c
    987c:	str	r5, [sp, #40]	; 0x28
    9880:	movw	r5, #55230	; 0xd7be
    9884:	movt	r5, #35164	; 0x895c
    9888:	ldr	r9, [sp, #40]	; 0x28
    988c:	add	r5, r9, r5
    9890:	add	r2, r5, r2
    9894:	eor	r9, r6, r3
    9898:	and	r9, ip, r9
    989c:	eor	r9, r9, r3
    98a0:	add	r2, r2, r9
    98a4:	add	r2, ip, r2, ror #10
    98a8:	ldr	r5, [r1, #48]	; 0x30
    98ac:	movw	r9, #4386	; 0x1122
    98b0:	movt	r9, #27536	; 0x6b90
    98b4:	add	r9, r5, r9
    98b8:	add	r3, r9, r3
    98bc:	eor	sl, ip, r6
    98c0:	and	sl, r2, sl
    98c4:	eor	sl, sl, r6
    98c8:	add	r3, r3, sl
    98cc:	add	r3, r2, r3, ror #25
    98d0:	ldr	sl, [r1, #52]	; 0x34
    98d4:	str	sl, [sp, #44]	; 0x2c
    98d8:	movw	sl, #29075	; 0x7193
    98dc:	movt	sl, #64920	; 0xfd98
    98e0:	ldr	fp, [sp, #44]	; 0x2c
    98e4:	add	sl, fp, sl
    98e8:	add	sl, sl, r6
    98ec:	eor	r9, r2, ip
    98f0:	and	r9, r3, r9
    98f4:	eor	r9, r9, ip
    98f8:	add	sl, sl, r9
    98fc:	add	sl, r3, sl, ror #20
    9900:	ldr	r6, [r1, #56]	; 0x38
    9904:	movw	r9, #17294	; 0x438e
    9908:	movt	r9, #42617	; 0xa679
    990c:	add	r9, r6, r9
    9910:	add	r9, r9, ip
    9914:	eor	fp, r3, r2
    9918:	and	fp, sl, fp
    991c:	eor	fp, fp, r2
    9920:	add	r9, r9, fp
    9924:	add	r9, sl, r9, ror #15
    9928:	ldr	ip, [r1, #60]	; 0x3c
    992c:	movw	r1, #2081	; 0x821
    9930:	movt	r1, #18868	; 0x49b4
    9934:	add	r1, ip, r1
    9938:	add	r2, r1, r2
    993c:	eor	fp, sl, r3
    9940:	and	fp, r9, fp
    9944:	eor	fp, fp, r3
    9948:	add	r2, r2, fp
    994c:	add	r2, r9, r2, ror #10
    9950:	movw	r1, #9570	; 0x2562
    9954:	movt	r1, #63006	; 0xf61e
    9958:	ldr	fp, [sp, #8]
    995c:	add	r1, fp, r1
    9960:	add	r3, r1, r3
    9964:	eor	fp, r2, r9
    9968:	and	fp, fp, sl
    996c:	eor	fp, fp, r9
    9970:	add	r3, r3, fp
    9974:	add	r3, r2, r3, ror #27
    9978:	movw	r1, #45888	; 0xb340
    997c:	movt	r1, #49216	; 0xc040
    9980:	ldr	fp, [sp, #28]
    9984:	add	r1, fp, r1
    9988:	add	r1, r1, sl
    998c:	eor	fp, r3, r2
    9990:	and	fp, fp, r9
    9994:	eor	fp, fp, r2
    9998:	add	r1, r1, fp
    999c:	add	r1, r3, r1, ror #23
    99a0:	movw	sl, #23121	; 0x5a51
    99a4:	movt	sl, #9822	; 0x265e
    99a8:	ldr	fp, [sp, #40]	; 0x28
    99ac:	add	sl, fp, sl
    99b0:	add	r9, sl, r9
    99b4:	eor	fp, r1, r3
    99b8:	and	fp, fp, r2
    99bc:	eor	fp, fp, r3
    99c0:	add	r9, r9, fp
    99c4:	add	r9, r1, r9, ror #18
    99c8:	movw	sl, #51114	; 0xc7aa
    99cc:	movt	sl, #59830	; 0xe9b6
    99d0:	add	sl, r8, sl
    99d4:	add	r2, sl, r2
    99d8:	eor	fp, r9, r1
    99dc:	and	fp, fp, r3
    99e0:	eor	fp, fp, r1
    99e4:	add	r2, r2, fp
    99e8:	add	r2, r9, r2, ror #12
    99ec:	movw	sl, #4189	; 0x105d
    99f0:	movt	sl, #54831	; 0xd62f
    99f4:	ldr	fp, [sp, #24]
    99f8:	add	sl, fp, sl
    99fc:	add	r3, sl, r3
    9a00:	eor	fp, r2, r9
    9a04:	and	fp, fp, r1
    9a08:	eor	fp, fp, r9
    9a0c:	add	r3, r3, fp
    9a10:	add	r3, r2, r3, ror #27
    9a14:	movw	sl, #5203	; 0x1453
    9a18:	movt	sl, #580	; 0x244
    9a1c:	add	sl, r4, sl
    9a20:	add	r1, sl, r1
    9a24:	eor	fp, r3, r2
    9a28:	and	fp, fp, r9
    9a2c:	eor	fp, fp, r2
    9a30:	add	r1, r1, fp
    9a34:	add	r1, r3, r1, ror #23
    9a38:	movw	sl, #59009	; 0xe681
    9a3c:	movt	sl, #55457	; 0xd8a1
    9a40:	add	sl, ip, sl
    9a44:	add	r9, sl, r9
    9a48:	eor	fp, r1, r3
    9a4c:	and	fp, fp, r2
    9a50:	eor	fp, fp, r3
    9a54:	add	r9, r9, fp
    9a58:	add	r9, r1, r9, ror #18
    9a5c:	movw	sl, #64456	; 0xfbc8
    9a60:	movt	sl, #59347	; 0xe7d3
    9a64:	ldr	fp, [sp, #20]
    9a68:	add	sl, fp, sl
    9a6c:	add	r2, sl, r2
    9a70:	eor	fp, r9, r1
    9a74:	and	fp, fp, r3
    9a78:	eor	fp, fp, r1
    9a7c:	add	r2, r2, fp
    9a80:	add	r2, r9, r2, ror #12
    9a84:	movw	sl, #52710	; 0xcde6
    9a88:	movt	sl, #8673	; 0x21e1
    9a8c:	ldr	fp, [sp, #36]	; 0x24
    9a90:	add	sl, fp, sl
    9a94:	add	r3, sl, r3
    9a98:	eor	fp, r2, r9
    9a9c:	and	fp, fp, r1
    9aa0:	eor	fp, fp, r9
    9aa4:	add	r3, r3, fp
    9aa8:	add	r3, r2, r3, ror #27
    9aac:	movw	sl, #2006	; 0x7d6
    9ab0:	movt	sl, #49975	; 0xc337
    9ab4:	add	sl, r6, sl
    9ab8:	add	r1, sl, r1
    9abc:	eor	fp, r3, r2
    9ac0:	and	fp, fp, r9
    9ac4:	eor	fp, fp, r2
    9ac8:	add	r1, r1, fp
    9acc:	add	r1, r3, r1, ror #23
    9ad0:	movw	sl, #3463	; 0xd87
    9ad4:	movt	sl, #62677	; 0xf4d5
    9ad8:	ldr	fp, [sp, #16]
    9adc:	add	sl, fp, sl
    9ae0:	add	r9, sl, r9
    9ae4:	eor	fp, r1, r3
    9ae8:	and	fp, fp, r2
    9aec:	eor	fp, fp, r3
    9af0:	add	r9, r9, fp
    9af4:	add	r9, r1, r9, ror #18
    9af8:	movw	sl, #5357	; 0x14ed
    9afc:	movt	sl, #17754	; 0x455a
    9b00:	ldr	fp, [sp, #32]
    9b04:	add	sl, fp, sl
    9b08:	add	r2, sl, r2
    9b0c:	eor	fp, r9, r1
    9b10:	and	fp, fp, r3
    9b14:	eor	fp, fp, r1
    9b18:	add	r2, r2, fp
    9b1c:	add	r2, r9, r2, ror #12
    9b20:	movw	sl, #59653	; 0xe905
    9b24:	movt	sl, #43491	; 0xa9e3
    9b28:	ldr	fp, [sp, #44]	; 0x2c
    9b2c:	add	sl, fp, sl
    9b30:	add	r3, sl, r3
    9b34:	eor	fp, r2, r9
    9b38:	and	fp, fp, r1
    9b3c:	eor	fp, fp, r9
    9b40:	add	r3, r3, fp
    9b44:	add	r3, r2, r3, ror #27
    9b48:	movw	sl, #41976	; 0xa3f8
    9b4c:	movt	sl, #64751	; 0xfcef
    9b50:	ldr	fp, [sp, #12]
    9b54:	add	sl, fp, sl
    9b58:	add	r1, sl, r1
    9b5c:	eor	fp, r3, r2
    9b60:	and	fp, fp, r9
    9b64:	eor	fp, fp, r2
    9b68:	add	r1, r1, fp
    9b6c:	add	r1, r3, r1, ror #23
    9b70:	movw	sl, #729	; 0x2d9
    9b74:	movt	sl, #26479	; 0x676f
    9b78:	add	sl, r7, sl
    9b7c:	add	r9, sl, r9
    9b80:	eor	fp, r1, r3
    9b84:	and	fp, fp, r2
    9b88:	eor	fp, fp, r3
    9b8c:	add	r9, r9, fp
    9b90:	add	r9, r1, r9, ror #18
    9b94:	eor	sl, r9, r1
    9b98:	str	sl, [sp, #4]
    9b9c:	movw	fp, #19594	; 0x4c8a
    9ba0:	movt	fp, #36138	; 0x8d2a
    9ba4:	add	fp, r5, fp
    9ba8:	add	r2, fp, r2
    9bac:	and	fp, sl, r3
    9bb0:	eor	fp, fp, r1
    9bb4:	add	r2, r2, fp
    9bb8:	add	r2, r9, r2, ror #12
    9bbc:	movw	fp, #14658	; 0x3942
    9bc0:	movt	fp, #65530	; 0xfffa
    9bc4:	ldr	sl, [sp, #24]
    9bc8:	add	fp, sl, fp
    9bcc:	add	r3, fp, r3
    9bd0:	ldr	fp, [sp, #4]
    9bd4:	eor	sl, fp, r2
    9bd8:	add	sl, r3, sl
    9bdc:	add	sl, r2, sl, ror #28
    9be0:	movw	r3, #63105	; 0xf681
    9be4:	movt	r3, #34673	; 0x8771
    9be8:	ldr	fp, [sp, #32]
    9bec:	add	r3, fp, r3
    9bf0:	add	r1, r3, r1
    9bf4:	eor	fp, r2, r9
    9bf8:	eor	fp, fp, sl
    9bfc:	add	r1, r1, fp
    9c00:	add	r1, sl, r1, ror #21
    9c04:	movw	r3, #24866	; 0x6122
    9c08:	movt	r3, #28061	; 0x6d9d
    9c0c:	ldr	fp, [sp, #40]	; 0x28
    9c10:	add	r3, fp, r3
    9c14:	add	r9, r3, r9
    9c18:	eor	fp, sl, r2
    9c1c:	eor	fp, fp, r1
    9c20:	add	r9, r9, fp
    9c24:	add	r9, r1, r9, ror #16
    9c28:	movw	r3, #14348	; 0x380c
    9c2c:	movt	r3, #64997	; 0xfde5
    9c30:	add	r3, r6, r3
    9c34:	add	r2, r3, r2
    9c38:	eor	fp, r1, sl
    9c3c:	eor	fp, fp, r9
    9c40:	add	r2, r2, fp
    9c44:	add	r2, r9, r2, ror #9
    9c48:	movw	r3, #59972	; 0xea44
    9c4c:	movt	r3, #42174	; 0xa4be
    9c50:	ldr	fp, [sp, #8]
    9c54:	add	r3, fp, r3
    9c58:	add	sl, r3, sl
    9c5c:	eor	fp, r9, r1
    9c60:	eor	fp, fp, r2
    9c64:	add	sl, sl, fp
    9c68:	add	sl, r2, sl, ror #28
    9c6c:	movw	r3, #53161	; 0xcfa9
    9c70:	movt	r3, #19422	; 0x4bde
    9c74:	ldr	fp, [sp, #20]
    9c78:	add	r3, fp, r3
    9c7c:	add	r1, r3, r1
    9c80:	eor	fp, r2, r9
    9c84:	eor	fp, fp, sl
    9c88:	add	r1, r1, fp
    9c8c:	add	r1, sl, r1, ror #21
    9c90:	movw	r3, #19296	; 0x4b60
    9c94:	movt	r3, #63163	; 0xf6bb
    9c98:	add	r3, r7, r3
    9c9c:	add	r3, r3, r9
    9ca0:	eor	fp, sl, r2
    9ca4:	eor	fp, fp, r1
    9ca8:	add	r3, r3, fp
    9cac:	add	r3, r1, r3, ror #16
    9cb0:	movw	r9, #48240	; 0xbc70
    9cb4:	movt	r9, #48831	; 0xbebf
    9cb8:	add	r9, r4, r9
    9cbc:	add	r9, r9, r2
    9cc0:	eor	fp, r1, sl
    9cc4:	eor	fp, fp, r3
    9cc8:	add	r9, r9, fp
    9ccc:	add	r9, r3, r9, ror #9
    9cd0:	movw	r2, #32454	; 0x7ec6
    9cd4:	movt	r2, #10395	; 0x289b
    9cd8:	ldr	fp, [sp, #44]	; 0x2c
    9cdc:	add	r2, fp, r2
    9ce0:	add	sl, r2, sl
    9ce4:	eor	fp, r3, r1
    9ce8:	eor	fp, fp, r9
    9cec:	add	sl, sl, fp
    9cf0:	add	sl, r9, sl, ror #28
    9cf4:	movw	r2, #10234	; 0x27fa
    9cf8:	movt	r2, #60065	; 0xeaa1
    9cfc:	add	r2, r8, r2
    9d00:	add	r1, r2, r1
    9d04:	eor	fp, r9, r3
    9d08:	eor	fp, fp, sl
    9d0c:	add	r1, r1, fp
    9d10:	add	r1, sl, r1, ror #21
    9d14:	movw	fp, #12421	; 0x3085
    9d18:	movt	fp, #54511	; 0xd4ef
    9d1c:	ldr	r2, [sp, #16]
    9d20:	add	fp, r2, fp
    9d24:	add	fp, fp, r3
    9d28:	eor	r2, sl, r9
    9d2c:	eor	r2, r2, r1
    9d30:	add	fp, fp, r2
    9d34:	add	fp, r1, fp, ror #16
    9d38:	movw	r3, #7429	; 0x1d05
    9d3c:	movt	r3, #1160	; 0x488
    9d40:	ldr	r2, [sp, #28]
    9d44:	add	r3, r2, r3
    9d48:	add	r9, r3, r9
    9d4c:	eor	r2, r1, sl
    9d50:	eor	r2, r2, fp
    9d54:	add	r9, r9, r2
    9d58:	add	r9, fp, r9, ror #9
    9d5c:	movw	r2, #53305	; 0xd039
    9d60:	movt	r2, #55764	; 0xd9d4
    9d64:	ldr	r3, [sp, #36]	; 0x24
    9d68:	add	r2, r3, r2
    9d6c:	add	r2, r2, sl
    9d70:	eor	r3, fp, r1
    9d74:	eor	r3, r3, r9
    9d78:	add	r2, r2, r3
    9d7c:	add	r2, r9, r2, ror #28
    9d80:	movw	r3, #39397	; 0x99e5
    9d84:	movt	r3, #59099	; 0xe6db
    9d88:	add	r3, r5, r3
    9d8c:	add	r1, r3, r1
    9d90:	eor	sl, r9, fp
    9d94:	eor	sl, sl, r2
    9d98:	add	r1, r1, sl
    9d9c:	add	r1, r2, r1, ror #21
    9da0:	movw	r3, #31992	; 0x7cf8
    9da4:	movt	r3, #8098	; 0x1fa2
    9da8:	add	r3, ip, r3
    9dac:	add	fp, r3, fp
    9db0:	eor	sl, r2, r9
    9db4:	eor	sl, sl, r1
    9db8:	add	fp, fp, sl
    9dbc:	add	fp, r1, fp, ror #16
    9dc0:	movw	r3, #22117	; 0x5665
    9dc4:	movt	r3, #50348	; 0xc4ac
    9dc8:	ldr	sl, [sp, #12]
    9dcc:	add	r3, sl, r3
    9dd0:	add	r3, r3, r9
    9dd4:	eor	sl, r1, r2
    9dd8:	eor	sl, sl, fp
    9ddc:	add	r3, r3, sl
    9de0:	add	r3, fp, r3, ror #9
    9de4:	movw	r9, #8772	; 0x2244
    9de8:	movt	r9, #62505	; 0xf429
    9dec:	add	r9, r8, r9
    9df0:	add	r2, r9, r2
    9df4:	mvn	r8, r1
    9df8:	orr	r8, r3, r8
    9dfc:	eor	r8, r8, fp
    9e00:	add	r2, r2, r8
    9e04:	add	r2, r3, r2, ror #26
    9e08:	movw	r8, #65431	; 0xff97
    9e0c:	movt	r8, #17194	; 0x432a
    9e10:	add	r8, r7, r8
    9e14:	add	r1, r8, r1
    9e18:	mvn	r7, fp
    9e1c:	orr	r7, r2, r7
    9e20:	eor	r7, r7, r3
    9e24:	add	r1, r1, r7
    9e28:	add	r1, r2, r1, ror #22
    9e2c:	movw	r7, #9127	; 0x23a7
    9e30:	movt	r7, #43924	; 0xab94
    9e34:	add	r7, r6, r7
    9e38:	add	r7, r7, fp
    9e3c:	mvn	r6, r3
    9e40:	orr	r6, r1, r6
    9e44:	eor	r6, r6, r2
    9e48:	add	r7, r7, r6
    9e4c:	add	r7, r1, r7, ror #17
    9e50:	movw	r6, #41017	; 0xa039
    9e54:	movt	r6, #64659	; 0xfc93
    9e58:	ldr	fp, [sp, #24]
    9e5c:	add	r6, fp, r6
    9e60:	add	r3, r6, r3
    9e64:	mvn	r8, r2
    9e68:	orr	r8, r7, r8
    9e6c:	eor	r8, r8, r1
    9e70:	add	r3, r3, r8
    9e74:	add	r3, r7, r3, ror #11
    9e78:	movw	r6, #22979	; 0x59c3
    9e7c:	movt	r6, #25947	; 0x655b
    9e80:	add	r6, r5, r6
    9e84:	add	r2, r6, r2
    9e88:	mvn	r5, r1
    9e8c:	orr	r5, r3, r5
    9e90:	eor	r5, r5, r7
    9e94:	add	r2, r2, r5
    9e98:	add	r2, r3, r2, ror #26
    9e9c:	movw	r5, #52370	; 0xcc92
    9ea0:	movt	r5, #36620	; 0x8f0c
    9ea4:	ldr	r6, [sp, #16]
    9ea8:	add	r5, r6, r5
    9eac:	add	r1, r5, r1
    9eb0:	mvn	r6, r7
    9eb4:	orr	r6, r2, r6
    9eb8:	eor	r6, r6, r3
    9ebc:	add	r1, r1, r6
    9ec0:	add	r1, r2, r1, ror #22
    9ec4:	movw	r5, #62589	; 0xf47d
    9ec8:	movt	r5, #65519	; 0xffef
    9ecc:	add	r5, r4, r5
    9ed0:	add	r7, r5, r7
    9ed4:	mvn	r4, r3
    9ed8:	orr	r4, r1, r4
    9edc:	eor	r4, r4, r2
    9ee0:	add	r7, r7, r4
    9ee4:	add	r7, r1, r7, ror #17
    9ee8:	movw	r4, #24017	; 0x5dd1
    9eec:	movt	r4, #34180	; 0x8584
    9ef0:	ldr	r8, [sp, #8]
    9ef4:	add	r4, r8, r4
    9ef8:	add	r3, r4, r3
    9efc:	mvn	r5, r2
    9f00:	orr	r5, r7, r5
    9f04:	eor	r5, r5, r1
    9f08:	add	r3, r3, r5
    9f0c:	add	r3, r7, r3, ror #11
    9f10:	movw	r4, #32335	; 0x7e4f
    9f14:	movt	r4, #28584	; 0x6fa8
    9f18:	ldr	r9, [sp, #32]
    9f1c:	add	r4, r9, r4
    9f20:	add	r2, r4, r2
    9f24:	mvn	r5, r1
    9f28:	orr	r5, r3, r5
    9f2c:	eor	r5, r5, r7
    9f30:	add	r2, r2, r5
    9f34:	add	r2, r3, r2, ror #26
    9f38:	movw	r4, #59104	; 0xe6e0
    9f3c:	movt	r4, #65068	; 0xfe2c
    9f40:	add	r4, ip, r4
    9f44:	add	r1, r4, r1
    9f48:	mvn	ip, r7
    9f4c:	orr	ip, r2, ip
    9f50:	eor	ip, ip, r3
    9f54:	add	r1, r1, ip
    9f58:	add	r1, r2, r1, ror #22
    9f5c:	movw	ip, #17172	; 0x4314
    9f60:	movt	ip, #41729	; 0xa301
    9f64:	ldr	sl, [sp, #28]
    9f68:	add	ip, sl, ip
    9f6c:	add	ip, ip, r7
    9f70:	mvn	r4, r3
    9f74:	orr	r4, r1, r4
    9f78:	eor	r4, r4, r2
    9f7c:	add	ip, ip, r4
    9f80:	add	ip, r1, ip, ror #17
    9f84:	movw	r4, #4513	; 0x11a1
    9f88:	movt	r4, #19976	; 0x4e08
    9f8c:	ldr	fp, [sp, #44]	; 0x2c
    9f90:	add	r4, fp, r4
    9f94:	add	r3, r4, r3
    9f98:	mvn	r5, r2
    9f9c:	orr	r5, ip, r5
    9fa0:	eor	r5, r5, r1
    9fa4:	add	r3, r3, r5
    9fa8:	add	r3, ip, r3, ror #11
    9fac:	movw	r4, #32386	; 0x7e82
    9fb0:	movt	r4, #63315	; 0xf753
    9fb4:	ldr	r5, [sp, #20]
    9fb8:	add	r4, r5, r4
    9fbc:	add	r2, r4, r2
    9fc0:	mvn	r5, r1
    9fc4:	orr	r5, r3, r5
    9fc8:	eor	r5, r5, ip
    9fcc:	add	r2, r2, r5
    9fd0:	add	r2, r3, r2, ror #26
    9fd4:	movw	r4, #62005	; 0xf235
    9fd8:	movt	r4, #48442	; 0xbd3a
    9fdc:	ldr	r6, [sp, #40]	; 0x28
    9fe0:	add	r4, r6, r4
    9fe4:	add	r1, r4, r1
    9fe8:	mvn	r5, ip
    9fec:	orr	r5, r2, r5
    9ff0:	eor	r5, r5, r3
    9ff4:	add	r1, r1, r5
    9ff8:	add	r1, r2, r1, ror #22
    9ffc:	movw	r4, #53947	; 0xd2bb
    a000:	movt	r4, #10967	; 0x2ad7
    a004:	ldr	r8, [sp, #12]
    a008:	add	r4, r8, r4
    a00c:	add	ip, r4, ip
    a010:	mvn	r5, r3
    a014:	orr	r5, r1, r5
    a018:	eor	r5, r5, r2
    a01c:	add	ip, ip, r5
    a020:	add	ip, r1, ip, ror #17
    a024:	movw	r4, #54161	; 0xd391
    a028:	movt	r4, #60294	; 0xeb86
    a02c:	ldr	r9, [sp, #36]	; 0x24
    a030:	add	r4, r9, r4
    a034:	add	r3, r4, r3
    a038:	mvn	r5, r2
    a03c:	orr	r5, ip, r5
    a040:	eor	r5, r5, r1
    a044:	add	r3, r3, r5
    a048:	ldr	sl, [r0]
    a04c:	add	r2, r2, sl
    a050:	str	r2, [r0]
    a054:	ldr	fp, [r0, #4]
    a058:	add	r2, ip, fp
    a05c:	add	r3, r2, r3, ror #11
    a060:	str	r3, [r0, #4]
    a064:	ldr	r2, [r0, #8]
    a068:	add	ip, ip, r2
    a06c:	str	ip, [r0, #8]
    a070:	ldr	r3, [r0, #12]
    a074:	add	r1, r1, r3
    a078:	str	r1, [r0, #12]
    a07c:	add	sp, sp, #48	; 0x30
    a080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    a084:	bx	lr
    a088:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a08c:	mov	r6, r0
    a090:	mov	r9, r1
    a094:	mov	r8, r2
    a098:	ldr	r3, [r0, #16]
    a09c:	add	r2, r3, r2, lsl #3
    a0a0:	str	r2, [r0, #16]
    a0a4:	cmp	r3, r2
    a0a8:	ldrhi	r2, [r0, #20]
    a0ac:	addhi	r2, r2, #1
    a0b0:	strhi	r2, [r0, #20]
    a0b4:	ldr	r2, [r0, #20]
    a0b8:	add	r2, r2, r8, lsr #29
    a0bc:	str	r2, [r0, #20]
    a0c0:	ubfx	r3, r3, #3, #6
    a0c4:	cmp	r3, #0
    a0c8:	beq	a120 <__snprintf_chk@plt+0x16c4>
    a0cc:	add	r0, r3, #24
    a0d0:	add	r0, r6, r0
    a0d4:	rsb	r4, r3, #64	; 0x40
    a0d8:	cmp	r8, r4
    a0dc:	bcs	a0ec <__snprintf_chk@plt+0x1690>
    a0e0:	mov	r2, r8
    a0e4:	bl	8954 <memcpy@plt>
    a0e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a0ec:	mov	r2, r4
    a0f0:	bl	8954 <memcpy@plt>
    a0f4:	ldr	r3, [r6, #88]	; 0x58
    a0f8:	cmp	r3, #0
    a0fc:	beq	a10c <__snprintf_chk@plt+0x16b0>
    a100:	add	r0, r6, #24
    a104:	mov	r1, #16
    a108:	bl	9614 <__snprintf_chk@plt+0xbb8>
    a10c:	mov	r0, r6
    a110:	add	r1, r6, #24
    a114:	bl	9684 <__snprintf_chk@plt+0xc28>
    a118:	add	r9, r9, r4
    a11c:	rsb	r8, r4, r8
    a120:	cmp	r8, #63	; 0x3f
    a124:	bls	a1bc <__snprintf_chk@plt+0x1760>
    a128:	mov	r5, r8
    a12c:	mov	r4, r9
    a130:	add	r7, r6, #24
    a134:	mov	sl, #16
    a138:	mov	r3, r4
    a13c:	mov	r2, r7
    a140:	add	r1, r4, #64	; 0x40
    a144:	ldr	fp, [r3]
    a148:	ldr	lr, [r3, #4]
    a14c:	ldr	ip, [r3, #8]
    a150:	ldr	r0, [r3, #12]
    a154:	str	fp, [r2]
    a158:	str	lr, [r2, #4]
    a15c:	str	ip, [r2, #8]
    a160:	str	r0, [r2, #12]
    a164:	add	r3, r3, #16
    a168:	add	r2, r2, #16
    a16c:	cmp	r3, r1
    a170:	bne	a144 <__snprintf_chk@plt+0x16e8>
    a174:	ldr	r3, [r6, #88]	; 0x58
    a178:	cmp	r3, #0
    a17c:	beq	a18c <__snprintf_chk@plt+0x1730>
    a180:	mov	r0, r7
    a184:	mov	r1, sl
    a188:	bl	9614 <__snprintf_chk@plt+0xbb8>
    a18c:	mov	r0, r6
    a190:	mov	r1, r7
    a194:	bl	9684 <__snprintf_chk@plt+0xc28>
    a198:	add	r4, r4, #64	; 0x40
    a19c:	sub	r5, r5, #64	; 0x40
    a1a0:	cmp	r5, #63	; 0x3f
    a1a4:	bhi	a138 <__snprintf_chk@plt+0x16dc>
    a1a8:	sub	r3, r8, #64	; 0x40
    a1ac:	bic	r3, r3, #63	; 0x3f
    a1b0:	add	r3, r3, #64	; 0x40
    a1b4:	add	r9, r9, r3
    a1b8:	and	r8, r8, #63	; 0x3f
    a1bc:	add	r0, r6, #24
    a1c0:	mov	r1, r9
    a1c4:	mov	r2, r8
    a1c8:	bl	8954 <memcpy@plt>
    a1cc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a1d0:	push	{r4, r5, r6, lr}
    a1d4:	mov	r5, r0
    a1d8:	mov	r4, r1
    a1dc:	ldr	r3, [r1, #16]
    a1e0:	ubfx	r3, r3, #3, #6
    a1e4:	add	r0, r1, r3
    a1e8:	add	r0, r0, #25
    a1ec:	add	r2, r1, r3
    a1f0:	mvn	r1, #127	; 0x7f
    a1f4:	strb	r1, [r2, #24]
    a1f8:	rsb	r2, r3, #63	; 0x3f
    a1fc:	cmp	r2, #7
    a200:	bhi	a248 <__snprintf_chk@plt+0x17ec>
    a204:	mov	r1, #0
    a208:	bl	89fc <memset@plt>
    a20c:	ldr	r3, [r4, #88]	; 0x58
    a210:	cmp	r3, #0
    a214:	beq	a224 <__snprintf_chk@plt+0x17c8>
    a218:	add	r0, r4, #24
    a21c:	mov	r1, #16
    a220:	bl	9614 <__snprintf_chk@plt+0xbb8>
    a224:	add	r6, r4, #24
    a228:	mov	r0, r4
    a22c:	mov	r1, r6
    a230:	bl	9684 <__snprintf_chk@plt+0xc28>
    a234:	mov	r0, r6
    a238:	mov	r1, #0
    a23c:	mov	r2, #56	; 0x38
    a240:	bl	89fc <memset@plt>
    a244:	b	a254 <__snprintf_chk@plt+0x17f8>
    a248:	mov	r1, #0
    a24c:	rsb	r2, r3, #55	; 0x37
    a250:	bl	89fc <memset@plt>
    a254:	ldr	r3, [r4, #88]	; 0x58
    a258:	cmp	r3, #0
    a25c:	beq	a26c <__snprintf_chk@plt+0x1810>
    a260:	add	r0, r4, #24
    a264:	mov	r1, #14
    a268:	bl	9614 <__snprintf_chk@plt+0xbb8>
    a26c:	mov	r3, r4
    a270:	ldr	r2, [r3, #16]!
    a274:	ldr	r3, [r3, #4]
    a278:	str	r2, [r4, #80]	; 0x50
    a27c:	str	r3, [r4, #84]	; 0x54
    a280:	mov	r6, r4
    a284:	mov	r0, r4
    a288:	add	r1, r4, #24
    a28c:	bl	9684 <__snprintf_chk@plt+0xc28>
    a290:	ldr	r3, [r4, #88]	; 0x58
    a294:	cmp	r3, #0
    a298:	beq	a2a8 <__snprintf_chk@plt+0x184c>
    a29c:	mov	r0, r4
    a2a0:	mov	r1, #4
    a2a4:	bl	9614 <__snprintf_chk@plt+0xbb8>
    a2a8:	ldr	r0, [r6]
    a2ac:	ldr	r1, [r6, #4]
    a2b0:	ldr	r2, [r6, #8]
    a2b4:	ldr	r3, [r6, #12]
    a2b8:	str	r0, [r5]
    a2bc:	str	r1, [r5, #4]
    a2c0:	str	r2, [r5, #8]
    a2c4:	str	r3, [r5, #12]
    a2c8:	mov	r0, r4
    a2cc:	mov	r1, #0
    a2d0:	mov	r2, #92	; 0x5c
    a2d4:	bl	89fc <memset@plt>
    a2d8:	pop	{r4, r5, r6, pc}
    a2dc:	cmp	r3, #0
    a2e0:	cmpeq	r2, #0
    a2e4:	bne	a308 <__snprintf_chk@plt+0x18ac>
    a2e8:	cmp	r1, #0
    a2ec:	movlt	r1, #-2147483648	; 0x80000000
    a2f0:	movlt	r0, #0
    a2f4:	blt	a304 <__snprintf_chk@plt+0x18a8>
    a2f8:	cmpeq	r0, #0
    a2fc:	mvnne	r1, #-2147483648	; 0x80000000
    a300:	mvnne	r0, #0
    a304:	b	a324 <__snprintf_chk@plt+0x18c8>
    a308:	sub	sp, sp, #8
    a30c:	push	{sp, lr}
    a310:	bl	a334 <__snprintf_chk@plt+0x18d8>
    a314:	ldr	lr, [sp, #4]
    a318:	add	sp, sp, #8
    a31c:	pop	{r2, r3}
    a320:	bx	lr
    a324:	push	{r1, lr}
    a328:	mov	r0, #8
    a32c:	bl	890c <raise@plt>
    a330:	pop	{r1, pc}
    a334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a338:	mov	r8, r2
    a33c:	mov	r6, r0
    a340:	mov	r7, r1
    a344:	mov	sl, r3
    a348:	ldr	r9, [sp, #32]
    a34c:	bl	a3ac <__snprintf_chk@plt+0x1950>
    a350:	umull	r4, r5, r8, r0
    a354:	mul	r8, r8, r1
    a358:	mla	r2, r0, sl, r8
    a35c:	add	r5, r2, r5
    a360:	subs	r4, r6, r4
    a364:	sbc	r5, r7, r5
    a368:	strd	r4, [r9]
    a36c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a370:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    a374:	mov	r8, r2
    a378:	mov	r6, r0
    a37c:	mov	r7, r1
    a380:	mov	r5, r3
    a384:	ldr	r9, [sp, #32]
    a388:	bl	a838 <__snprintf_chk@plt+0x1ddc>
    a38c:	mul	r3, r0, r5
    a390:	umull	r4, r5, r0, r8
    a394:	mla	r8, r8, r1, r3
    a398:	add	r5, r8, r5
    a39c:	subs	r4, r6, r4
    a3a0:	sbc	r5, r7, r5
    a3a4:	strd	r4, [r9]
    a3a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    a3ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a3b0:	rsbs	r4, r0, #0
    a3b4:	rsc	r5, r1, #0
    a3b8:	cmp	r1, #0
    a3bc:	mvn	r6, #0
    a3c0:	sub	sp, sp, #12
    a3c4:	movge	r4, r0
    a3c8:	movge	r5, r1
    a3cc:	movge	r6, #0
    a3d0:	cmp	r3, #0
    a3d4:	blt	a60c <__snprintf_chk@plt+0x1bb0>
    a3d8:	cmp	r3, #0
    a3dc:	mov	sl, r4
    a3e0:	mov	ip, r5
    a3e4:	mov	r0, r2
    a3e8:	mov	r1, r3
    a3ec:	mov	r8, r2
    a3f0:	mov	r7, r4
    a3f4:	mov	r9, r5
    a3f8:	bne	a4f0 <__snprintf_chk@plt+0x1a94>
    a3fc:	cmp	r2, r5
    a400:	bls	a52c <__snprintf_chk@plt+0x1ad0>
    a404:	clz	r3, r2
    a408:	cmp	r3, #0
    a40c:	rsbne	r2, r3, #32
    a410:	lslne	r8, r0, r3
    a414:	lsrne	r2, r4, r2
    a418:	lslne	r7, r4, r3
    a41c:	orrne	r9, r2, r5, lsl r3
    a420:	lsr	r4, r8, #16
    a424:	uxth	sl, r8
    a428:	mov	r1, r4
    a42c:	mov	r0, r9
    a430:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a434:	mov	r1, r4
    a438:	mov	fp, r0
    a43c:	mov	r0, r9
    a440:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a444:	mul	r0, sl, fp
    a448:	lsr	r2, r7, #16
    a44c:	orr	r1, r2, r1, lsl #16
    a450:	cmp	r0, r1
    a454:	bls	a478 <__snprintf_chk@plt+0x1a1c>
    a458:	adds	r1, r1, r8
    a45c:	sub	r3, fp, #1
    a460:	bcs	a474 <__snprintf_chk@plt+0x1a18>
    a464:	cmp	r0, r1
    a468:	subhi	fp, fp, #2
    a46c:	addhi	r1, r1, r8
    a470:	bhi	a478 <__snprintf_chk@plt+0x1a1c>
    a474:	mov	fp, r3
    a478:	rsb	r9, r0, r1
    a47c:	mov	r1, r4
    a480:	uxth	r7, r7
    a484:	mov	r0, r9
    a488:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a48c:	mov	r1, r4
    a490:	mov	r5, r0
    a494:	mov	r0, r9
    a498:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a49c:	mul	sl, sl, r5
    a4a0:	orr	r1, r7, r1, lsl #16
    a4a4:	cmp	sl, r1
    a4a8:	bls	a4c8 <__snprintf_chk@plt+0x1a6c>
    a4ac:	adds	r8, r1, r8
    a4b0:	sub	r3, r5, #1
    a4b4:	bcs	a4c4 <__snprintf_chk@plt+0x1a68>
    a4b8:	cmp	sl, r8
    a4bc:	subhi	r5, r5, #2
    a4c0:	bhi	a4c8 <__snprintf_chk@plt+0x1a6c>
    a4c4:	mov	r5, r3
    a4c8:	orr	r3, r5, fp, lsl #16
    a4cc:	mov	r4, #0
    a4d0:	cmp	r6, #0
    a4d4:	mov	r0, r3
    a4d8:	mov	r1, r4
    a4dc:	beq	a4e8 <__snprintf_chk@plt+0x1a8c>
    a4e0:	rsbs	r0, r0, #0
    a4e4:	rsc	r1, r1, #0
    a4e8:	add	sp, sp, #12
    a4ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a4f0:	cmp	r3, r5
    a4f4:	movhi	r4, #0
    a4f8:	movhi	r3, r4
    a4fc:	bhi	a4d0 <__snprintf_chk@plt+0x1a74>
    a500:	clz	r5, r1
    a504:	cmp	r5, #0
    a508:	bne	a6f8 <__snprintf_chk@plt+0x1c9c>
    a50c:	cmp	r1, ip
    a510:	cmpcs	r2, sl
    a514:	movhi	r4, #0
    a518:	movls	r4, #1
    a51c:	movls	r3, #1
    a520:	movls	r4, r5
    a524:	movhi	r3, r4
    a528:	b	a4d0 <__snprintf_chk@plt+0x1a74>
    a52c:	cmp	r2, #0
    a530:	bne	a544 <__snprintf_chk@plt+0x1ae8>
    a534:	mov	r1, r2
    a538:	mov	r0, #1
    a53c:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a540:	mov	r8, r0
    a544:	clz	r3, r8
    a548:	cmp	r3, #0
    a54c:	bne	a61c <__snprintf_chk@plt+0x1bc0>
    a550:	rsb	r9, r8, r9
    a554:	lsr	r5, r8, #16
    a558:	uxth	sl, r8
    a55c:	mov	r4, #1
    a560:	mov	r1, r5
    a564:	mov	r0, r9
    a568:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a56c:	mov	r1, r5
    a570:	mov	fp, r0
    a574:	mov	r0, r9
    a578:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a57c:	mul	r0, sl, fp
    a580:	lsr	r2, r7, #16
    a584:	orr	r1, r2, r1, lsl #16
    a588:	cmp	r0, r1
    a58c:	bls	a5ac <__snprintf_chk@plt+0x1b50>
    a590:	adds	r1, r1, r8
    a594:	sub	r3, fp, #1
    a598:	bcs	a818 <__snprintf_chk@plt+0x1dbc>
    a59c:	cmp	r0, r1
    a5a0:	subhi	fp, fp, #2
    a5a4:	addhi	r1, r1, r8
    a5a8:	bls	a818 <__snprintf_chk@plt+0x1dbc>
    a5ac:	rsb	r2, r0, r1
    a5b0:	mov	r1, r5
    a5b4:	str	r2, [sp]
    a5b8:	uxth	r7, r7
    a5bc:	mov	r0, r2
    a5c0:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a5c4:	ldr	r2, [sp]
    a5c8:	mov	r1, r5
    a5cc:	mov	r9, r0
    a5d0:	mov	r0, r2
    a5d4:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a5d8:	mul	sl, sl, r9
    a5dc:	orr	r1, r7, r1, lsl #16
    a5e0:	cmp	sl, r1
    a5e4:	bls	a604 <__snprintf_chk@plt+0x1ba8>
    a5e8:	adds	r8, r1, r8
    a5ec:	sub	r3, r9, #1
    a5f0:	bcs	a600 <__snprintf_chk@plt+0x1ba4>
    a5f4:	cmp	sl, r8
    a5f8:	subhi	r9, r9, #2
    a5fc:	bhi	a604 <__snprintf_chk@plt+0x1ba8>
    a600:	mov	r9, r3
    a604:	orr	r3, r9, fp, lsl #16
    a608:	b	a4d0 <__snprintf_chk@plt+0x1a74>
    a60c:	mvn	r6, r6
    a610:	rsbs	r2, r2, #0
    a614:	rsc	r3, r3, #0
    a618:	b	a3d8 <__snprintf_chk@plt+0x197c>
    a61c:	lsl	r8, r8, r3
    a620:	rsb	fp, r3, #32
    a624:	lsr	r4, r9, fp
    a628:	lsr	fp, r7, fp
    a62c:	lsr	r5, r8, #16
    a630:	orr	fp, fp, r9, lsl r3
    a634:	mov	r0, r4
    a638:	lsl	r7, r7, r3
    a63c:	mov	r1, r5
    a640:	uxth	sl, r8
    a644:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a648:	mov	r1, r5
    a64c:	mov	r3, r0
    a650:	mov	r0, r4
    a654:	str	r3, [sp]
    a658:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a65c:	ldr	r3, [sp]
    a660:	lsr	r2, fp, #16
    a664:	mul	r0, sl, r3
    a668:	orr	r1, r2, r1, lsl #16
    a66c:	cmp	r0, r1
    a670:	bls	a690 <__snprintf_chk@plt+0x1c34>
    a674:	adds	r1, r1, r8
    a678:	sub	r2, r3, #1
    a67c:	bcs	a830 <__snprintf_chk@plt+0x1dd4>
    a680:	cmp	r0, r1
    a684:	subhi	r3, r3, #2
    a688:	addhi	r1, r1, r8
    a68c:	bls	a830 <__snprintf_chk@plt+0x1dd4>
    a690:	rsb	r9, r0, r1
    a694:	mov	r1, r5
    a698:	str	r3, [sp]
    a69c:	uxth	fp, fp
    a6a0:	mov	r0, r9
    a6a4:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a6a8:	mov	r1, r5
    a6ac:	mov	r4, r0
    a6b0:	mov	r0, r9
    a6b4:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a6b8:	mul	r9, sl, r4
    a6bc:	ldr	r3, [sp]
    a6c0:	orr	r1, fp, r1, lsl #16
    a6c4:	cmp	r9, r1
    a6c8:	bls	a6ec <__snprintf_chk@plt+0x1c90>
    a6cc:	adds	r1, r1, r8
    a6d0:	sub	r2, r4, #1
    a6d4:	bcs	a6e8 <__snprintf_chk@plt+0x1c8c>
    a6d8:	cmp	r9, r1
    a6dc:	subhi	r4, r4, #2
    a6e0:	addhi	r1, r1, r8
    a6e4:	bhi	a6ec <__snprintf_chk@plt+0x1c90>
    a6e8:	mov	r4, r2
    a6ec:	rsb	r9, r9, r1
    a6f0:	orr	r4, r4, r3, lsl #16
    a6f4:	b	a560 <__snprintf_chk@plt+0x1b04>
    a6f8:	rsb	sl, r5, #32
    a6fc:	lsl	r3, r2, r5
    a700:	lsr	r0, r2, sl
    a704:	lsr	r2, ip, sl
    a708:	orr	r4, r0, r1, lsl r5
    a70c:	lsr	sl, r7, sl
    a710:	mov	r0, r2
    a714:	orr	sl, sl, ip, lsl r5
    a718:	lsr	r9, r4, #16
    a71c:	str	r3, [sp, #4]
    a720:	str	r2, [sp]
    a724:	uxth	fp, r4
    a728:	mov	r1, r9
    a72c:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a730:	ldr	r2, [sp]
    a734:	mov	r1, r9
    a738:	mov	r8, r0
    a73c:	mov	r0, r2
    a740:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a744:	mul	r0, fp, r8
    a748:	lsr	r2, sl, #16
    a74c:	orr	r1, r2, r1, lsl #16
    a750:	cmp	r0, r1
    a754:	bls	a774 <__snprintf_chk@plt+0x1d18>
    a758:	adds	r1, r1, r4
    a75c:	sub	r2, r8, #1
    a760:	bcs	a828 <__snprintf_chk@plt+0x1dcc>
    a764:	cmp	r0, r1
    a768:	subhi	r8, r8, #2
    a76c:	addhi	r1, r1, r4
    a770:	bls	a828 <__snprintf_chk@plt+0x1dcc>
    a774:	rsb	ip, r0, r1
    a778:	mov	r1, r9
    a77c:	str	ip, [sp]
    a780:	mov	r0, ip
    a784:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a788:	ldr	ip, [sp]
    a78c:	mov	r1, r9
    a790:	mov	r2, r0
    a794:	mov	r0, ip
    a798:	str	r2, [sp]
    a79c:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a7a0:	ldr	r2, [sp]
    a7a4:	uxth	ip, sl
    a7a8:	mul	fp, fp, r2
    a7ac:	orr	ip, ip, r1, lsl #16
    a7b0:	cmp	fp, ip
    a7b4:	bls	a7d4 <__snprintf_chk@plt+0x1d78>
    a7b8:	adds	ip, ip, r4
    a7bc:	sub	r1, r2, #1
    a7c0:	bcs	a820 <__snprintf_chk@plt+0x1dc4>
    a7c4:	cmp	fp, ip
    a7c8:	subhi	r2, r2, #2
    a7cc:	addhi	ip, ip, r4
    a7d0:	bls	a820 <__snprintf_chk@plt+0x1dc4>
    a7d4:	ldr	r0, [sp, #4]
    a7d8:	orr	r1, r2, r8, lsl #16
    a7dc:	rsb	fp, fp, ip
    a7e0:	umull	r2, r3, r1, r0
    a7e4:	cmp	fp, r3
    a7e8:	bcc	a80c <__snprintf_chk@plt+0x1db0>
    a7ec:	movne	r4, #0
    a7f0:	moveq	r4, #1
    a7f4:	cmp	r2, r7, lsl r5
    a7f8:	movls	r4, #0
    a7fc:	andhi	r4, r4, #1
    a800:	cmp	r4, #0
    a804:	moveq	r3, r1
    a808:	beq	a4d0 <__snprintf_chk@plt+0x1a74>
    a80c:	sub	r3, r1, #1
    a810:	mov	r4, #0
    a814:	b	a4d0 <__snprintf_chk@plt+0x1a74>
    a818:	mov	fp, r3
    a81c:	b	a5ac <__snprintf_chk@plt+0x1b50>
    a820:	mov	r2, r1
    a824:	b	a7d4 <__snprintf_chk@plt+0x1d78>
    a828:	mov	r8, r2
    a82c:	b	a774 <__snprintf_chk@plt+0x1d18>
    a830:	mov	r3, r2
    a834:	b	a690 <__snprintf_chk@plt+0x1c34>
    a838:	cmp	r3, #0
    a83c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a840:	mov	r6, r0
    a844:	sub	sp, sp, #12
    a848:	mov	r5, r1
    a84c:	mov	r7, r0
    a850:	mov	r4, r2
    a854:	mov	r8, r1
    a858:	bne	a938 <__snprintf_chk@plt+0x1edc>
    a85c:	cmp	r2, r1
    a860:	bls	a974 <__snprintf_chk@plt+0x1f18>
    a864:	clz	r3, r2
    a868:	cmp	r3, #0
    a86c:	rsbne	r8, r3, #32
    a870:	lslne	r4, r2, r3
    a874:	lsrne	r8, r0, r8
    a878:	lslne	r7, r0, r3
    a87c:	orrne	r8, r8, r1, lsl r3
    a880:	lsr	r5, r4, #16
    a884:	uxth	sl, r4
    a888:	mov	r1, r5
    a88c:	mov	r0, r8
    a890:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a894:	mov	r1, r5
    a898:	mov	r9, r0
    a89c:	mov	r0, r8
    a8a0:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a8a4:	mul	r0, sl, r9
    a8a8:	lsr	r3, r7, #16
    a8ac:	orr	r1, r3, r1, lsl #16
    a8b0:	cmp	r0, r1
    a8b4:	bls	a8d8 <__snprintf_chk@plt+0x1e7c>
    a8b8:	adds	r1, r1, r4
    a8bc:	sub	r2, r9, #1
    a8c0:	bcs	a8d4 <__snprintf_chk@plt+0x1e78>
    a8c4:	cmp	r0, r1
    a8c8:	subhi	r9, r9, #2
    a8cc:	addhi	r1, r1, r4
    a8d0:	bhi	a8d8 <__snprintf_chk@plt+0x1e7c>
    a8d4:	mov	r9, r2
    a8d8:	rsb	r8, r0, r1
    a8dc:	mov	r1, r5
    a8e0:	uxth	r7, r7
    a8e4:	mov	r0, r8
    a8e8:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a8ec:	mov	r1, r5
    a8f0:	mov	r6, r0
    a8f4:	mov	r0, r8
    a8f8:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a8fc:	mul	sl, sl, r6
    a900:	orr	r1, r7, r1, lsl #16
    a904:	cmp	sl, r1
    a908:	bls	a924 <__snprintf_chk@plt+0x1ec8>
    a90c:	adds	r4, r1, r4
    a910:	sub	r3, r6, #1
    a914:	bcs	ac20 <__snprintf_chk@plt+0x21c4>
    a918:	cmp	sl, r4
    a91c:	subhi	r6, r6, #2
    a920:	bls	ac20 <__snprintf_chk@plt+0x21c4>
    a924:	orr	r0, r6, r9, lsl #16
    a928:	mov	r6, #0
    a92c:	mov	r1, r6
    a930:	add	sp, sp, #12
    a934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a938:	cmp	r3, r1
    a93c:	movhi	r6, #0
    a940:	movhi	r0, r6
    a944:	bhi	a92c <__snprintf_chk@plt+0x1ed0>
    a948:	clz	r7, r3
    a94c:	cmp	r7, #0
    a950:	bne	aa50 <__snprintf_chk@plt+0x1ff4>
    a954:	cmp	r3, r1
    a958:	cmpcs	r2, r6
    a95c:	movhi	r6, #0
    a960:	movls	r6, #1
    a964:	movls	r0, #1
    a968:	movls	r6, r7
    a96c:	movhi	r0, r6
    a970:	b	a92c <__snprintf_chk@plt+0x1ed0>
    a974:	cmp	r2, #0
    a978:	bne	a98c <__snprintf_chk@plt+0x1f30>
    a97c:	mov	r1, r2
    a980:	mov	r0, #1
    a984:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a988:	mov	r4, r0
    a98c:	clz	r3, r4
    a990:	cmp	r3, #0
    a994:	bne	ab4c <__snprintf_chk@plt+0x20f0>
    a998:	rsb	r5, r4, r5
    a99c:	lsr	r8, r4, #16
    a9a0:	uxth	sl, r4
    a9a4:	mov	r6, #1
    a9a8:	mov	r1, r8
    a9ac:	mov	r0, r5
    a9b0:	bl	ac68 <__snprintf_chk@plt+0x220c>
    a9b4:	mov	r1, r8
    a9b8:	mov	r9, r0
    a9bc:	mov	r0, r5
    a9c0:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    a9c4:	mul	r0, sl, r9
    a9c8:	lsr	r3, r7, #16
    a9cc:	orr	r1, r3, r1, lsl #16
    a9d0:	cmp	r0, r1
    a9d4:	bls	a9f4 <__snprintf_chk@plt+0x1f98>
    a9d8:	adds	r1, r1, r4
    a9dc:	sub	r2, r9, #1
    a9e0:	bcs	ac28 <__snprintf_chk@plt+0x21cc>
    a9e4:	cmp	r0, r1
    a9e8:	subhi	r9, r9, #2
    a9ec:	addhi	r1, r1, r4
    a9f0:	bls	ac28 <__snprintf_chk@plt+0x21cc>
    a9f4:	rsb	fp, r0, r1
    a9f8:	mov	r1, r8
    a9fc:	uxth	r7, r7
    aa00:	mov	r0, fp
    aa04:	bl	ac68 <__snprintf_chk@plt+0x220c>
    aa08:	mov	r1, r8
    aa0c:	mov	r5, r0
    aa10:	mov	r0, fp
    aa14:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    aa18:	mul	sl, sl, r5
    aa1c:	orr	r1, r7, r1, lsl #16
    aa20:	cmp	sl, r1
    aa24:	bls	aa40 <__snprintf_chk@plt+0x1fe4>
    aa28:	adds	r4, r1, r4
    aa2c:	sub	r3, r5, #1
    aa30:	bcs	ac30 <__snprintf_chk@plt+0x21d4>
    aa34:	cmp	sl, r4
    aa38:	subhi	r5, r5, #2
    aa3c:	bls	ac30 <__snprintf_chk@plt+0x21d4>
    aa40:	orr	r0, r5, r9, lsl #16
    aa44:	mov	r1, r6
    aa48:	add	sp, sp, #12
    aa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa50:	rsb	r1, r7, #32
    aa54:	lsl	r0, r2, r7
    aa58:	lsr	r2, r2, r1
    aa5c:	lsr	fp, r5, r1
    aa60:	orr	r8, r2, r3, lsl r7
    aa64:	lsr	r1, r6, r1
    aa68:	str	r0, [sp, #4]
    aa6c:	orr	r5, r1, r5, lsl r7
    aa70:	lsr	r9, r8, #16
    aa74:	mov	r0, fp
    aa78:	uxth	sl, r8
    aa7c:	mov	r1, r9
    aa80:	bl	ac68 <__snprintf_chk@plt+0x220c>
    aa84:	mov	r1, r9
    aa88:	mov	r4, r0
    aa8c:	mov	r0, fp
    aa90:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    aa94:	mul	r0, sl, r4
    aa98:	lsr	ip, r5, #16
    aa9c:	orr	r1, ip, r1, lsl #16
    aaa0:	cmp	r0, r1
    aaa4:	bls	aab8 <__snprintf_chk@plt+0x205c>
    aaa8:	adds	r1, r1, r8
    aaac:	sub	r2, r4, #1
    aab0:	bcc	ac4c <__snprintf_chk@plt+0x21f0>
    aab4:	mov	r4, r2
    aab8:	rsb	ip, r0, r1
    aabc:	mov	r1, r9
    aac0:	str	ip, [sp]
    aac4:	uxth	r5, r5
    aac8:	mov	r0, ip
    aacc:	bl	ac68 <__snprintf_chk@plt+0x220c>
    aad0:	ldr	ip, [sp]
    aad4:	mov	r1, r9
    aad8:	mov	fp, r0
    aadc:	mov	r0, ip
    aae0:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    aae4:	mul	sl, sl, fp
    aae8:	orr	r1, r5, r1, lsl #16
    aaec:	cmp	sl, r1
    aaf0:	bls	ab04 <__snprintf_chk@plt+0x20a8>
    aaf4:	adds	r1, r1, r8
    aaf8:	sub	r2, fp, #1
    aafc:	bcc	ac38 <__snprintf_chk@plt+0x21dc>
    ab00:	mov	fp, r2
    ab04:	ldr	r3, [sp, #4]
    ab08:	orr	r0, fp, r4, lsl #16
    ab0c:	rsb	sl, sl, r1
    ab10:	umull	r4, r5, r0, r3
    ab14:	cmp	sl, r5
    ab18:	bcc	ab38 <__snprintf_chk@plt+0x20dc>
    ab1c:	movne	r3, #0
    ab20:	moveq	r3, #1
    ab24:	cmp	r4, r6, lsl r7
    ab28:	movls	r6, #0
    ab2c:	andhi	r6, r3, #1
    ab30:	cmp	r6, #0
    ab34:	beq	a92c <__snprintf_chk@plt+0x1ed0>
    ab38:	mov	r6, #0
    ab3c:	sub	r0, r0, #1
    ab40:	mov	r1, r6
    ab44:	add	sp, sp, #12
    ab48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab4c:	lsl	r4, r4, r3
    ab50:	rsb	r9, r3, #32
    ab54:	lsr	r2, r5, r9
    ab58:	lsr	r9, r6, r9
    ab5c:	lsr	r8, r4, #16
    ab60:	orr	r9, r9, r5, lsl r3
    ab64:	mov	r0, r2
    ab68:	lsl	r7, r6, r3
    ab6c:	mov	r1, r8
    ab70:	str	r2, [sp]
    ab74:	bl	ac68 <__snprintf_chk@plt+0x220c>
    ab78:	ldr	r2, [sp]
    ab7c:	mov	r1, r8
    ab80:	uxth	sl, r4
    ab84:	mov	fp, r0
    ab88:	mov	r0, r2
    ab8c:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    ab90:	mul	r0, sl, fp
    ab94:	lsr	r3, r9, #16
    ab98:	orr	r1, r3, r1, lsl #16
    ab9c:	cmp	r0, r1
    aba0:	bls	abc0 <__snprintf_chk@plt+0x2164>
    aba4:	adds	r1, r1, r4
    aba8:	sub	r3, fp, #1
    abac:	bcs	ac60 <__snprintf_chk@plt+0x2204>
    abb0:	cmp	r0, r1
    abb4:	subhi	fp, fp, #2
    abb8:	addhi	r1, r1, r4
    abbc:	bls	ac60 <__snprintf_chk@plt+0x2204>
    abc0:	rsb	r5, r0, r1
    abc4:	mov	r1, r8
    abc8:	uxth	r9, r9
    abcc:	mov	r0, r5
    abd0:	bl	ac68 <__snprintf_chk@plt+0x220c>
    abd4:	mov	r1, r8
    abd8:	mov	r6, r0
    abdc:	mov	r0, r5
    abe0:	bl	ae54 <__snprintf_chk@plt+0x23f8>
    abe4:	mul	r5, sl, r6
    abe8:	orr	r1, r9, r1, lsl #16
    abec:	cmp	r5, r1
    abf0:	bls	ac14 <__snprintf_chk@plt+0x21b8>
    abf4:	adds	r1, r1, r4
    abf8:	sub	r3, r6, #1
    abfc:	bcs	ac10 <__snprintf_chk@plt+0x21b4>
    ac00:	cmp	r5, r1
    ac04:	subhi	r6, r6, #2
    ac08:	addhi	r1, r1, r4
    ac0c:	bhi	ac14 <__snprintf_chk@plt+0x21b8>
    ac10:	mov	r6, r3
    ac14:	rsb	r5, r5, r1
    ac18:	orr	r6, r6, fp, lsl #16
    ac1c:	b	a9a8 <__snprintf_chk@plt+0x1f4c>
    ac20:	mov	r6, r3
    ac24:	b	a924 <__snprintf_chk@plt+0x1ec8>
    ac28:	mov	r9, r2
    ac2c:	b	a9f4 <__snprintf_chk@plt+0x1f98>
    ac30:	mov	r5, r3
    ac34:	b	aa40 <__snprintf_chk@plt+0x1fe4>
    ac38:	cmp	sl, r1
    ac3c:	subhi	fp, fp, #2
    ac40:	addhi	r1, r1, r8
    ac44:	bhi	ab04 <__snprintf_chk@plt+0x20a8>
    ac48:	b	ab00 <__snprintf_chk@plt+0x20a4>
    ac4c:	cmp	r0, r1
    ac50:	subhi	r4, r4, #2
    ac54:	addhi	r1, r1, r8
    ac58:	bhi	aab8 <__snprintf_chk@plt+0x205c>
    ac5c:	b	aab4 <__snprintf_chk@plt+0x2058>
    ac60:	mov	fp, r3
    ac64:	b	abc0 <__snprintf_chk@plt+0x2164>
    ac68:	subs	r2, r1, #1
    ac6c:	bxeq	lr
    ac70:	bcc	ae48 <__snprintf_chk@plt+0x23ec>
    ac74:	cmp	r0, r1
    ac78:	bls	ae2c <__snprintf_chk@plt+0x23d0>
    ac7c:	tst	r1, r2
    ac80:	beq	ae38 <__snprintf_chk@plt+0x23dc>
    ac84:	clz	r3, r0
    ac88:	clz	r2, r1
    ac8c:	sub	r3, r2, r3
    ac90:	rsbs	r3, r3, #31
    ac94:	addne	r3, r3, r3, lsl #1
    ac98:	mov	r2, #0
    ac9c:	addne	pc, pc, r3, lsl #2
    aca0:	nop	{0}
    aca4:	cmp	r0, r1, lsl #31
    aca8:	adc	r2, r2, r2
    acac:	subcs	r0, r0, r1, lsl #31
    acb0:	cmp	r0, r1, lsl #30
    acb4:	adc	r2, r2, r2
    acb8:	subcs	r0, r0, r1, lsl #30
    acbc:	cmp	r0, r1, lsl #29
    acc0:	adc	r2, r2, r2
    acc4:	subcs	r0, r0, r1, lsl #29
    acc8:	cmp	r0, r1, lsl #28
    accc:	adc	r2, r2, r2
    acd0:	subcs	r0, r0, r1, lsl #28
    acd4:	cmp	r0, r1, lsl #27
    acd8:	adc	r2, r2, r2
    acdc:	subcs	r0, r0, r1, lsl #27
    ace0:	cmp	r0, r1, lsl #26
    ace4:	adc	r2, r2, r2
    ace8:	subcs	r0, r0, r1, lsl #26
    acec:	cmp	r0, r1, lsl #25
    acf0:	adc	r2, r2, r2
    acf4:	subcs	r0, r0, r1, lsl #25
    acf8:	cmp	r0, r1, lsl #24
    acfc:	adc	r2, r2, r2
    ad00:	subcs	r0, r0, r1, lsl #24
    ad04:	cmp	r0, r1, lsl #23
    ad08:	adc	r2, r2, r2
    ad0c:	subcs	r0, r0, r1, lsl #23
    ad10:	cmp	r0, r1, lsl #22
    ad14:	adc	r2, r2, r2
    ad18:	subcs	r0, r0, r1, lsl #22
    ad1c:	cmp	r0, r1, lsl #21
    ad20:	adc	r2, r2, r2
    ad24:	subcs	r0, r0, r1, lsl #21
    ad28:	cmp	r0, r1, lsl #20
    ad2c:	adc	r2, r2, r2
    ad30:	subcs	r0, r0, r1, lsl #20
    ad34:	cmp	r0, r1, lsl #19
    ad38:	adc	r2, r2, r2
    ad3c:	subcs	r0, r0, r1, lsl #19
    ad40:	cmp	r0, r1, lsl #18
    ad44:	adc	r2, r2, r2
    ad48:	subcs	r0, r0, r1, lsl #18
    ad4c:	cmp	r0, r1, lsl #17
    ad50:	adc	r2, r2, r2
    ad54:	subcs	r0, r0, r1, lsl #17
    ad58:	cmp	r0, r1, lsl #16
    ad5c:	adc	r2, r2, r2
    ad60:	subcs	r0, r0, r1, lsl #16
    ad64:	cmp	r0, r1, lsl #15
    ad68:	adc	r2, r2, r2
    ad6c:	subcs	r0, r0, r1, lsl #15
    ad70:	cmp	r0, r1, lsl #14
    ad74:	adc	r2, r2, r2
    ad78:	subcs	r0, r0, r1, lsl #14
    ad7c:	cmp	r0, r1, lsl #13
    ad80:	adc	r2, r2, r2
    ad84:	subcs	r0, r0, r1, lsl #13
    ad88:	cmp	r0, r1, lsl #12
    ad8c:	adc	r2, r2, r2
    ad90:	subcs	r0, r0, r1, lsl #12
    ad94:	cmp	r0, r1, lsl #11
    ad98:	adc	r2, r2, r2
    ad9c:	subcs	r0, r0, r1, lsl #11
    ada0:	cmp	r0, r1, lsl #10
    ada4:	adc	r2, r2, r2
    ada8:	subcs	r0, r0, r1, lsl #10
    adac:	cmp	r0, r1, lsl #9
    adb0:	adc	r2, r2, r2
    adb4:	subcs	r0, r0, r1, lsl #9
    adb8:	cmp	r0, r1, lsl #8
    adbc:	adc	r2, r2, r2
    adc0:	subcs	r0, r0, r1, lsl #8
    adc4:	cmp	r0, r1, lsl #7
    adc8:	adc	r2, r2, r2
    adcc:	subcs	r0, r0, r1, lsl #7
    add0:	cmp	r0, r1, lsl #6
    add4:	adc	r2, r2, r2
    add8:	subcs	r0, r0, r1, lsl #6
    addc:	cmp	r0, r1, lsl #5
    ade0:	adc	r2, r2, r2
    ade4:	subcs	r0, r0, r1, lsl #5
    ade8:	cmp	r0, r1, lsl #4
    adec:	adc	r2, r2, r2
    adf0:	subcs	r0, r0, r1, lsl #4
    adf4:	cmp	r0, r1, lsl #3
    adf8:	adc	r2, r2, r2
    adfc:	subcs	r0, r0, r1, lsl #3
    ae00:	cmp	r0, r1, lsl #2
    ae04:	adc	r2, r2, r2
    ae08:	subcs	r0, r0, r1, lsl #2
    ae0c:	cmp	r0, r1, lsl #1
    ae10:	adc	r2, r2, r2
    ae14:	subcs	r0, r0, r1, lsl #1
    ae18:	cmp	r0, r1
    ae1c:	adc	r2, r2, r2
    ae20:	subcs	r0, r0, r1
    ae24:	mov	r0, r2
    ae28:	bx	lr
    ae2c:	moveq	r0, #1
    ae30:	movne	r0, #0
    ae34:	bx	lr
    ae38:	clz	r2, r1
    ae3c:	rsb	r2, r2, #31
    ae40:	lsr	r0, r0, r2
    ae44:	bx	lr
    ae48:	cmp	r0, #0
    ae4c:	mvnne	r0, #0
    ae50:	b	a324 <__snprintf_chk@plt+0x18c8>
    ae54:	cmp	r1, #0
    ae58:	beq	ae48 <__snprintf_chk@plt+0x23ec>
    ae5c:	push	{r0, r1, lr}
    ae60:	bl	ac68 <__snprintf_chk@plt+0x220c>
    ae64:	pop	{r1, r2, lr}
    ae68:	mul	r3, r2, r0
    ae6c:	sub	r1, r1, r3
    ae70:	bx	lr
    ae74:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    ae78:	mov	r7, r0
    ae7c:	ldr	r6, [pc, #76]	; aed0 <__snprintf_chk@plt+0x2474>
    ae80:	mov	r8, r1
    ae84:	ldr	r5, [pc, #72]	; aed4 <__snprintf_chk@plt+0x2478>
    ae88:	mov	r9, r2
    ae8c:	add	r6, pc, r6
    ae90:	bl	88ec <_init@@Base>
    ae94:	add	r5, pc, r5
    ae98:	rsb	r6, r5, r6
    ae9c:	asrs	r6, r6, #2
    aea0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    aea4:	sub	r5, r5, #4
    aea8:	mov	r4, #0
    aeac:	add	r4, r4, #1
    aeb0:	ldr	r3, [r5, #4]!
    aeb4:	mov	r0, r7
    aeb8:	mov	r1, r8
    aebc:	mov	r2, r9
    aec0:	blx	r3
    aec4:	cmp	r4, r6
    aec8:	bne	aeac <__snprintf_chk@plt+0x2450>
    aecc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    aed0:	andeq	r9, r0, r4, rrx
    aed4:	andeq	r9, r0, r8, asr r0
    aed8:	bx	lr

Disassembly of section .fini:

0000aedc <_fini@@Base>:
    aedc:	push	{r3, lr}
    aee0:	pop	{r3, pc}
