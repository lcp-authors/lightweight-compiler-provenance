
centos-preinstalled/bluemoon:     file format elf32-littlearm


Disassembly of section .init:

00000bb0 <.init>:
 bb0:	push	{r3, lr}
 bb4:	bl	16f8 <main@@Base+0x93c>
 bb8:	pop	{r3, pc}

Disassembly of section .plt:

00000bbc <__cxa_finalize@plt-0x14>:
 bbc:	push	{lr}		; (str lr, [sp, #-4]!)
 bc0:	ldr	lr, [pc, #4]	; bcc <__cxa_finalize@plt-0x4>
 bc4:	add	lr, pc, lr
 bc8:	ldr	pc, [lr, #8]!
 bcc:	andeq	r6, r1, r0, asr r3

00000bd0 <__cxa_finalize@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #90112	; 0x16000
 bd8:	ldr	pc, [ip, #848]!	; 0x350

00000bdc <strtol@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #90112	; 0x16000
 be4:	ldr	pc, [ip, #840]!	; 0x348

00000be8 <setsockopt@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #90112	; 0x16000
 bf0:	ldr	pc, [ip, #832]!	; 0x340

00000bf4 <read@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #90112	; 0x16000
 bfc:	ldr	pc, [ip, #824]!	; 0x338

00000c00 <sigprocmask@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #90112	; 0x16000
 c08:	ldr	pc, [ip, #816]!	; 0x330

00000c0c <free@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #90112	; 0x16000
 c14:	ldr	pc, [ip, #808]!	; 0x328

00000c18 <__vsnprintf_chk@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #90112	; 0x16000
 c20:	ldr	pc, [ip, #800]!	; 0x320

00000c24 <memcpy@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #90112	; 0x16000
 c2c:	ldr	pc, [ip, #792]!	; 0x318

00000c30 <__stack_chk_fail@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #90112	; 0x16000
 c38:	ldr	pc, [ip, #784]!	; 0x310

00000c3c <signalfd@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #90112	; 0x16000
 c44:	ldr	pc, [ip, #776]!	; 0x308

00000c48 <fwrite@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #90112	; 0x16000
 c50:	ldr	pc, [ip, #768]!	; 0x300

00000c54 <puts@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #90112	; 0x16000
 c5c:	ldr	pc, [ip, #760]!	; 0x2f8

00000c60 <malloc@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #90112	; 0x16000
 c68:	ldr	pc, [ip, #752]!	; 0x2f0

00000c6c <sigaddset@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #90112	; 0x16000
 c74:	ldr	pc, [ip, #744]!	; 0x2e8

00000c78 <__libc_start_main@plt>:
 c78:	add	ip, pc, #0, 12
 c7c:	add	ip, ip, #90112	; 0x16000
 c80:	ldr	pc, [ip, #736]!	; 0x2e0

00000c84 <__fxstat@plt>:
 c84:	add	ip, pc, #0, 12
 c88:	add	ip, ip, #90112	; 0x16000
 c8c:	ldr	pc, [ip, #728]!	; 0x2d8

00000c90 <epoll_ctl@plt>:
 c90:	add	ip, pc, #0, 12
 c94:	add	ip, ip, #90112	; 0x16000
 c98:	ldr	pc, [ip, #720]!	; 0x2d0

00000c9c <__gmon_start__@plt>:
 c9c:	add	ip, pc, #0, 12
 ca0:	add	ip, ip, #90112	; 0x16000
 ca4:	ldr	pc, [ip, #712]!	; 0x2c8

00000ca8 <open@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #90112	; 0x16000
 cb0:	ldr	pc, [ip, #704]!	; 0x2c0

00000cb4 <timerfd_create@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #90112	; 0x16000
 cbc:	ldr	pc, [ip, #696]!	; 0x2b8

00000cc0 <getopt_long@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #90112	; 0x16000
 cc8:	ldr	pc, [ip, #688]!	; 0x2b0

00000ccc <__ctype_b_loc@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #90112	; 0x16000
 cd4:	ldr	pc, [ip, #680]!	; 0x2a8

00000cd8 <strlen@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #90112	; 0x16000
 ce0:	ldr	pc, [ip, #672]!	; 0x2a0

00000ce4 <__errno_location@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #90112	; 0x16000
 cec:	ldr	pc, [ip, #664]!	; 0x298

00000cf0 <bind@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #90112	; 0x16000
 cf8:	ldr	pc, [ip, #656]!	; 0x290

00000cfc <memset@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #90112	; 0x16000
 d04:	ldr	pc, [ip, #648]!	; 0x288

00000d08 <putchar@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #90112	; 0x16000
 d10:	ldr	pc, [ip, #640]!	; 0x280

00000d14 <__printf_chk@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #90112	; 0x16000
 d1c:	ldr	pc, [ip, #632]!	; 0x278

00000d20 <__fprintf_chk@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #90112	; 0x16000
 d28:	ldr	pc, [ip, #624]!	; 0x270

00000d2c <writev@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #90112	; 0x16000
 d34:	ldr	pc, [ip, #616]!	; 0x268

00000d38 <shutdown@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #90112	; 0x16000
 d40:	ldr	pc, [ip, #608]!	; 0x260

00000d44 <epoll_wait@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #90112	; 0x16000
 d4c:	ldr	pc, [ip, #600]!	; 0x258

00000d50 <sigemptyset@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #90112	; 0x16000
 d58:	ldr	pc, [ip, #592]!	; 0x250

00000d5c <timerfd_settime@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #90112	; 0x16000
 d64:	ldr	pc, [ip, #584]!	; 0x248

00000d68 <socket@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #90112	; 0x16000
 d70:	ldr	pc, [ip, #576]!	; 0x240

00000d74 <__lxstat@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #90112	; 0x16000
 d7c:	ldr	pc, [ip, #568]!	; 0x238

00000d80 <strncmp@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #90112	; 0x16000
 d88:	ldr	pc, [ip, #560]!	; 0x230

00000d8c <abort@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #90112	; 0x16000
 d94:	ldr	pc, [ip, #552]!	; 0x228

00000d98 <epoll_create1@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #90112	; 0x16000
 da0:	ldr	pc, [ip, #544]!	; 0x220

00000da4 <close@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #90112	; 0x16000
 dac:	ldr	pc, [ip, #536]!	; 0x218

00000db0 <__snprintf_chk@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #90112	; 0x16000
 db8:	ldr	pc, [ip, #528]!	; 0x210

Disassembly of section .text:

00000dbc <main@@Base>:
     dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     dc0:	mov	r8, r1
     dc4:	ldr	r9, [pc, #2052]	; 15d0 <main@@Base+0x814>
     dc8:	sub	sp, sp, #260	; 0x104
     dcc:	ldr	r3, [pc, #2048]	; 15d4 <main@@Base+0x818>
     dd0:	mov	r6, r0
     dd4:	add	r9, pc, r9
     dd8:	ldr	r1, [pc, #2040]	; 15d8 <main@@Base+0x81c>
     ddc:	ldr	r7, [pc, #2040]	; 15dc <main@@Base+0x820>
     de0:	mov	sl, #0
     de4:	add	r1, pc, r1
     de8:	str	r1, [sp, #24]
     dec:	ldr	r3, [r9, r3]
     df0:	add	r7, pc, r7
     df4:	ldr	fp, [pc, #2020]	; 15e0 <main@@Base+0x824>
     df8:	add	r7, r7, #64	; 0x40
     dfc:	ldr	r2, [pc, #2016]	; 15e4 <main@@Base+0x828>
     e00:	str	r3, [sp, #16]
     e04:	add	fp, pc, fp
     e08:	ldr	r3, [r3]
     e0c:	add	r2, pc, r2
     e10:	ldr	r1, [pc, #2000]	; 15e8 <main@@Base+0x82c>
     e14:	str	r2, [sp, #28]
     e18:	add	r1, pc, r1
     e1c:	str	r3, [sp, #252]	; 0xfc
     e20:	str	r1, [sp, #20]
     e24:	ldr	r5, [pc, #1984]	; 15ec <main@@Base+0x830>
     e28:	mov	r4, #0
     e2c:	add	r5, pc, r5
     e30:	str	r4, [sp]
     e34:	mov	r0, r6
     e38:	mov	r1, r8
     e3c:	mov	r2, r5
     e40:	mov	r3, r7
     e44:	bl	cc0 <getopt_long@plt>
     e48:	cmp	r0, #0
     e4c:	blt	10e0 <main@@Base+0x324>
     e50:	sub	ip, r0, #65	; 0x41
     e54:	cmp	ip, #53	; 0x35
     e58:	addls	pc, pc, ip, lsl #2
     e5c:	b	10bc <main@@Base+0x300>
     e60:	b	108c <main@@Base+0x2d0>
     e64:	b	1080 <main@@Base+0x2c4>
     e68:	b	105c <main@@Base+0x2a0>
     e6c:	b	1044 <main@@Base+0x288>
     e70:	b	102c <main@@Base+0x270>
     e74:	b	ff4 <main@@Base+0x238>
     e78:	b	10bc <main@@Base+0x300>
     e7c:	b	10bc <main@@Base+0x300>
     e80:	b	10bc <main@@Base+0x300>
     e84:	b	10bc <main@@Base+0x300>
     e88:	b	10bc <main@@Base+0x300>
     e8c:	b	10bc <main@@Base+0x300>
     e90:	b	10bc <main@@Base+0x300>
     e94:	b	10bc <main@@Base+0x300>
     e98:	b	10bc <main@@Base+0x300>
     e9c:	b	10bc <main@@Base+0x300>
     ea0:	b	10bc <main@@Base+0x300>
     ea4:	b	fe4 <main@@Base+0x228>
     ea8:	b	10bc <main@@Base+0x300>
     eac:	b	fcc <main@@Base+0x210>
     eb0:	b	10bc <main@@Base+0x300>
     eb4:	b	10bc <main@@Base+0x300>
     eb8:	b	10bc <main@@Base+0x300>
     ebc:	b	10bc <main@@Base+0x300>
     ec0:	b	10bc <main@@Base+0x300>
     ec4:	b	10bc <main@@Base+0x300>
     ec8:	b	10bc <main@@Base+0x300>
     ecc:	b	10bc <main@@Base+0x300>
     ed0:	b	10bc <main@@Base+0x300>
     ed4:	b	10bc <main@@Base+0x300>
     ed8:	b	10bc <main@@Base+0x300>
     edc:	b	10bc <main@@Base+0x300>
     ee0:	b	10bc <main@@Base+0x300>
     ee4:	b	10bc <main@@Base+0x300>
     ee8:	b	10bc <main@@Base+0x300>
     eec:	b	10bc <main@@Base+0x300>
     ef0:	b	10bc <main@@Base+0x300>
     ef4:	b	10bc <main@@Base+0x300>
     ef8:	b	10bc <main@@Base+0x300>
     efc:	b	fc0 <main@@Base+0x204>
     f00:	b	f6c <main@@Base+0x1b0>
     f04:	b	10bc <main@@Base+0x300>
     f08:	b	10bc <main@@Base+0x300>
     f0c:	b	10bc <main@@Base+0x300>
     f10:	b	10bc <main@@Base+0x300>
     f14:	b	10bc <main@@Base+0x300>
     f18:	b	10bc <main@@Base+0x300>
     f1c:	b	10bc <main@@Base+0x300>
     f20:	b	10bc <main@@Base+0x300>
     f24:	b	f64 <main@@Base+0x1a8>
     f28:	b	10bc <main@@Base+0x300>
     f2c:	b	10bc <main@@Base+0x300>
     f30:	b	10bc <main@@Base+0x300>
     f34:	b	f38 <main@@Base+0x17c>
     f38:	ldr	r0, [pc, #1712]	; 15f0 <main@@Base+0x834>
     f3c:	add	r0, pc, r0
     f40:	bl	c54 <puts@plt>
     f44:	mov	r0, #0
     f48:	ldr	r1, [sp, #16]
     f4c:	ldr	r2, [sp, #252]	; 0xfc
     f50:	ldr	r3, [r1]
     f54:	cmp	r2, r3
     f58:	bne	1350 <main@@Base+0x594>
     f5c:	add	sp, sp, #260	; 0x104
     f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f64:	mov	sl, #1
     f68:	b	e30 <main@@Base+0x74>
     f6c:	ldr	r3, [pc, #1664]	; 15f4 <main@@Base+0x838>
     f70:	ldr	r3, [r9, r3]
     f74:	ldr	r4, [r3]
     f78:	mov	r0, r4
     f7c:	bl	cd8 <strlen@plt>
     f80:	cmp	r0, #3
     f84:	bhi	10c4 <main@@Base+0x308>
     f88:	bl	ccc <__ctype_b_loc@plt>
     f8c:	ldrb	r3, [r4]
     f90:	lsl	r3, r3, #1
     f94:	ldr	r2, [r0]
     f98:	ldrh	r3, [r2, r3]
     f9c:	tst	r3, #2048	; 0x800
     fa0:	beq	12c4 <main@@Base+0x508>
     fa4:	mov	r0, r4
     fa8:	mov	r1, #0
     fac:	mov	r2, #10
     fb0:	bl	bdc <strtol@plt>
     fb4:	ldr	r3, [sp, #24]
     fb8:	strh	r0, [r3, #28]
     fbc:	b	e24 <main@@Base+0x68>
     fc0:	bl	1920 <main@@Base+0xb64>
     fc4:	mov	r0, #0
     fc8:	b	f48 <main@@Base+0x18c>
     fcc:	ldr	r3, [pc, #1572]	; 15f8 <main@@Base+0x83c>
     fd0:	mov	r2, #1
     fd4:	add	r3, pc, r3
     fd8:	strb	r2, [r3, #12]
     fdc:	strb	r2, [r3, #13]
     fe0:	b	e24 <main@@Base+0x68>
     fe4:	ldr	r2, [sp, #20]
     fe8:	mov	r3, #1
     fec:	strb	r3, [r2, #4]
     ff0:	b	e24 <main@@Base+0x68>
     ff4:	ldr	r3, [pc, #1536]	; 15fc <main@@Base+0x840>
     ff8:	mov	r1, #1
     ffc:	ldr	r2, [pc, #1520]	; 15f4 <main@@Base+0x838>
    1000:	add	r3, pc, r3
    1004:	strb	r1, [r3, #12]
    1008:	ldr	r2, [r9, r2]
    100c:	ldr	r2, [r2]
    1010:	cmp	r2, #0
    1014:	strne	r2, [r3, #36]	; 0x24
    1018:	mov	r2, #1
    101c:	ldr	r3, [pc, #1500]	; 1600 <main@@Base+0x844>
    1020:	add	r3, pc, r3
    1024:	strb	r2, [r3, #31]
    1028:	b	e24 <main@@Base+0x68>
    102c:	ldr	r3, [pc, #1488]	; 1604 <main@@Base+0x848>
    1030:	mov	r2, #1
    1034:	add	r3, pc, r3
    1038:	strb	r2, [r3, #12]
    103c:	strb	r2, [r3, #33]	; 0x21
    1040:	b	e24 <main@@Base+0x68>
    1044:	ldr	r3, [pc, #1468]	; 1608 <main@@Base+0x84c>
    1048:	mov	r2, #1
    104c:	add	r3, pc, r3
    1050:	strb	r2, [r3, #12]
    1054:	strb	r2, [r3, #32]
    1058:	b	e24 <main@@Base+0x68>
    105c:	ldr	r2, [pc, #1424]	; 15f4 <main@@Base+0x838>
    1060:	mov	r1, #1
    1064:	ldr	r3, [pc, #1440]	; 160c <main@@Base+0x850>
    1068:	ldr	r2, [r9, r2]
    106c:	add	r3, pc, r3
    1070:	strb	r1, [r3, #48]	; 0x30
    1074:	ldr	r2, [r2]
    1078:	str	r2, [r3, #44]	; 0x2c
    107c:	b	e24 <main@@Base+0x68>
    1080:	mov	r3, #1
    1084:	strb	r3, [fp, #40]	; 0x28
    1088:	b	e24 <main@@Base+0x68>
    108c:	ldr	r3, [pc, #1376]	; 15f4 <main@@Base+0x838>
    1090:	ldr	r3, [r9, r3]
    1094:	ldr	r3, [r3]
    1098:	cmp	r3, #0
    109c:	ldrne	r2, [pc, #1388]	; 1610 <main@@Base+0x854>
    10a0:	addne	r2, pc, r2
    10a4:	strne	r3, [r2, #24]
    10a8:	ldr	r3, [pc, #1380]	; 1614 <main@@Base+0x858>
    10ac:	mov	r2, #1
    10b0:	add	r3, pc, r3
    10b4:	strb	r2, [r3, #30]
    10b8:	b	e24 <main@@Base+0x68>
    10bc:	mov	r0, #1
    10c0:	b	f48 <main@@Base+0x18c>
    10c4:	mov	r0, r4
    10c8:	ldr	r1, [sp, #28]
    10cc:	mov	r2, #3
    10d0:	bl	d80 <strncmp@plt>
    10d4:	cmp	r0, #0
    10d8:	addeq	r4, r4, #3
    10dc:	b	f88 <main@@Base+0x1cc>
    10e0:	ldr	r3, [pc, #1328]	; 1618 <main@@Base+0x85c>
    10e4:	ldr	r3, [r9, r3]
    10e8:	ldr	r3, [r3]
    10ec:	rsb	r6, r3, r6
    10f0:	cmp	r6, #0
    10f4:	ble	1120 <main@@Base+0x364>
    10f8:	ldr	r0, [pc, #1308]	; 161c <main@@Base+0x860>
    10fc:	mov	r1, #1
    1100:	ldr	r3, [pc, #1304]	; 1620 <main@@Base+0x864>
    1104:	add	r0, pc, r0
    1108:	ldr	r3, [r9, r3]
    110c:	mov	r2, #32
    1110:	ldr	r3, [r3]
    1114:	bl	c48 <fwrite@plt>
    1118:	mov	r0, #1
    111c:	b	f48 <main@@Base+0x18c>
    1120:	add	r4, sp, #124	; 0x7c
    1124:	bl	3dbc <main@@Base+0x3000>
    1128:	ldr	r5, [pc, #1268]	; 1624 <main@@Base+0x868>
    112c:	mov	r0, r4
    1130:	bl	d50 <sigemptyset@plt>
    1134:	mov	r1, #2
    1138:	mov	r0, r4
    113c:	add	r5, pc, r5
    1140:	bl	c6c <sigaddset@plt>
    1144:	mov	r1, #15
    1148:	mov	r0, r4
    114c:	bl	c6c <sigaddset@plt>
    1150:	ldr	r1, [pc, #1232]	; 1628 <main@@Base+0x86c>
    1154:	mov	r2, #0
    1158:	mov	r0, r4
    115c:	mov	r3, r2
    1160:	add	r1, pc, r1
    1164:	bl	455c <main@@Base+0x37a0>
    1168:	ldr	r1, [pc, #1212]	; 162c <main@@Base+0x870>
    116c:	ldr	r2, [pc, #1212]	; 1630 <main@@Base+0x874>
    1170:	mov	r0, #1
    1174:	add	r1, pc, r1
    1178:	add	r2, pc, r2
    117c:	bl	d14 <__printf_chk@plt>
    1180:	ldrb	r3, [r5, #48]	; 0x30
    1184:	cmp	r3, #0
    1188:	bne	1218 <main@@Base+0x45c>
    118c:	cmp	sl, #0
    1190:	ldrh	r0, [r5, #28]
    1194:	beq	11f4 <main@@Base+0x438>
    1198:	bl	3438 <main@@Base+0x267c>
    119c:	cmp	r0, #0
    11a0:	str	r0, [r5]
    11a4:	beq	1398 <main@@Base+0x5dc>
    11a8:	ldr	r4, [pc, #1156]	; 1634 <main@@Base+0x878>
    11ac:	mov	r1, #0
    11b0:	ldr	ip, [pc, #1152]	; 1638 <main@@Base+0x87c>
    11b4:	mov	r2, r1
    11b8:	add	r4, pc, r4
    11bc:	mov	r3, r1
    11c0:	add	ip, pc, ip
    11c4:	str	r1, [sp, #4]
    11c8:	str	r1, [sp, #8]
    11cc:	movw	r1, #64517	; 0xfc05
    11d0:	ldr	r0, [r4]
    11d4:	str	ip, [sp]
    11d8:	bl	3508 <main@@Base+0x274c>
    11dc:	bl	4114 <main@@Base+0x3358>
    11e0:	mov	r5, r0
    11e4:	ldr	r0, [r4]
    11e8:	bl	335c <main@@Base+0x25a0>
    11ec:	mov	r0, r5
    11f0:	b	f48 <main@@Base+0x18c>
    11f4:	bl	33e8 <main@@Base+0x262c>
    11f8:	cmp	r0, #0
    11fc:	str	r0, [r5]
    1200:	bne	11a8 <main@@Base+0x3ec>
    1204:	ldr	r0, [pc, #1072]	; 163c <main@@Base+0x880>
    1208:	mov	r1, #1
    120c:	ldr	r3, [pc, #1036]	; 1620 <main@@Base+0x864>
    1210:	add	r0, pc, r0
    1214:	b	1108 <main@@Base+0x34c>
    1218:	ldr	r6, [r5, #44]	; 0x2c
    121c:	mov	r1, #0
    1220:	mov	r0, r6
    1224:	bl	ca8 <open@plt>
    1228:	subs	r4, r0, #0
    122c:	blt	12d0 <main@@Base+0x514>
    1230:	mov	r0, #3
    1234:	mov	r1, r4
    1238:	add	r2, sp, #32
    123c:	bl	c84 <__fxstat@plt>
    1240:	cmp	r0, #0
    1244:	blt	1324 <main@@Base+0x568>
    1248:	ldr	r6, [sp, #76]	; 0x4c
    124c:	mov	r0, r6
    1250:	bl	c60 <malloc@plt>
    1254:	cmp	r0, #0
    1258:	mov	r1, r0
    125c:	str	r0, [r5, #8]
    1260:	beq	1380 <main@@Base+0x5c4>
    1264:	mov	r2, r6
    1268:	mov	r0, r4
    126c:	bl	bf4 <read@plt>
    1270:	subs	r6, r0, #0
    1274:	blt	1354 <main@@Base+0x598>
    1278:	mov	r0, r4
    127c:	bl	da4 <close@plt>
    1280:	ldr	r3, [sp, #76]	; 0x4c
    1284:	cmp	r6, r3
    1288:	beq	12f8 <main@@Base+0x53c>
    128c:	ldr	r3, [pc, #908]	; 1620 <main@@Base+0x864>
    1290:	mov	r1, #1
    1294:	ldr	r0, [pc, #932]	; 1640 <main@@Base+0x884>
    1298:	mov	r2, #38	; 0x26
    129c:	ldr	r3, [r9, r3]
    12a0:	add	r0, pc, r0
    12a4:	ldr	r3, [r3]
    12a8:	bl	c48 <fwrite@plt>
    12ac:	ldr	r3, [pc, #912]	; 1644 <main@@Base+0x888>
    12b0:	add	r3, pc, r3
    12b4:	ldr	r0, [r3, #8]
    12b8:	bl	c0c <free@plt>
    12bc:	mov	r0, #0
    12c0:	b	f48 <main@@Base+0x18c>
    12c4:	bl	1920 <main@@Base+0xb64>
    12c8:	mov	r0, #1
    12cc:	b	f48 <main@@Base+0x18c>
    12d0:	ldr	r0, [pc, #840]	; 1620 <main@@Base+0x864>
    12d4:	mov	r3, r6
    12d8:	ldr	r2, [pc, #872]	; 1648 <main@@Base+0x88c>
    12dc:	mov	r1, #1
    12e0:	ldr	r0, [r9, r0]
    12e4:	add	r2, pc, r2
    12e8:	ldr	r0, [r0]
    12ec:	bl	d20 <__fprintf_chk@plt>
    12f0:	mov	r0, #0
    12f4:	b	f48 <main@@Base+0x18c>
    12f8:	cmp	r6, #127	; 0x7f
    12fc:	bhi	13c0 <main@@Base+0x604>
    1300:	ldr	r3, [pc, #792]	; 1620 <main@@Base+0x864>
    1304:	mov	r1, #1
    1308:	ldr	r0, [pc, #828]	; 164c <main@@Base+0x890>
    130c:	mov	r2, #27
    1310:	ldr	r3, [r9, r3]
    1314:	add	r0, pc, r0
    1318:	ldr	r3, [r3]
    131c:	bl	c48 <fwrite@plt>
    1320:	b	12ac <main@@Base+0x4f0>
    1324:	ldr	r0, [pc, #804]	; 1650 <main@@Base+0x894>
    1328:	mov	r1, #1
    132c:	ldr	r3, [pc, #748]	; 1620 <main@@Base+0x864>
    1330:	mov	r2, #28
    1334:	add	r0, pc, r0
    1338:	ldr	r3, [r9, r3]
    133c:	ldr	r3, [r3]
    1340:	bl	c48 <fwrite@plt>
    1344:	mov	r0, r4
    1348:	bl	da4 <close@plt>
    134c:	b	12f0 <main@@Base+0x534>
    1350:	bl	c30 <__stack_chk_fail@plt>
    1354:	ldr	r3, [pc, #708]	; 1620 <main@@Base+0x864>
    1358:	mov	r1, #1
    135c:	ldr	r0, [pc, #752]	; 1654 <main@@Base+0x898>
    1360:	mov	r2, #29
    1364:	ldr	r3, [r9, r3]
    1368:	add	r0, pc, r0
    136c:	ldr	r3, [r3]
    1370:	bl	c48 <fwrite@plt>
    1374:	mov	r0, r4
    1378:	bl	da4 <close@plt>
    137c:	b	12ac <main@@Base+0x4f0>
    1380:	ldr	r0, [pc, #720]	; 1658 <main@@Base+0x89c>
    1384:	mov	r1, #1
    1388:	ldr	r3, [pc, #656]	; 1620 <main@@Base+0x864>
    138c:	mov	r2, #35	; 0x23
    1390:	add	r0, pc, r0
    1394:	b	1338 <main@@Base+0x57c>
    1398:	ldr	r3, [pc, #640]	; 1620 <main@@Base+0x864>
    139c:	mov	r1, #1
    13a0:	ldr	r0, [pc, #692]	; 165c <main@@Base+0x8a0>
    13a4:	mov	r2, #30
    13a8:	ldr	r3, [r9, r3]
    13ac:	add	r0, pc, r0
    13b0:	ldr	r3, [r3]
    13b4:	bl	c48 <fwrite@plt>
    13b8:	mov	r0, #1
    13bc:	b	f48 <main@@Base+0x18c>
    13c0:	ldr	r4, [r5, #8]
    13c4:	mov	r0, #1
    13c8:	ldr	r1, [pc, #656]	; 1660 <main@@Base+0x8a4>
    13cc:	ldr	r2, [r4]
    13d0:	add	r1, pc, r1
    13d4:	bl	d14 <__printf_chk@plt>
    13d8:	ldr	r2, [r4, #4]
    13dc:	ldr	r1, [pc, #640]	; 1664 <main@@Base+0x8a8>
    13e0:	mov	r0, #1
    13e4:	lsl	r3, r2, #2
    13e8:	add	r1, pc, r1
    13ec:	bl	d14 <__printf_chk@plt>
    13f0:	ldr	r3, [r4, #8]
    13f4:	ldr	r1, [pc, #620]	; 1668 <main@@Base+0x8ac>
    13f8:	mov	r0, #1
    13fc:	lsr	r2, r3, #16
    1400:	add	r1, pc, r1
    1404:	uxth	r3, r3
    1408:	bl	d14 <__printf_chk@plt>
    140c:	ldr	r1, [pc, #600]	; 166c <main@@Base+0x8b0>
    1410:	ldr	r2, [r4, #12]
    1414:	mov	r0, #1
    1418:	add	r1, pc, r1
    141c:	bl	d14 <__printf_chk@plt>
    1420:	ldr	r1, [pc, #584]	; 1670 <main@@Base+0x8b4>
    1424:	ldr	r2, [r4, #16]
    1428:	mov	r0, #1
    142c:	add	r1, pc, r1
    1430:	bl	d14 <__printf_chk@plt>
    1434:	ldr	r1, [pc, #568]	; 1674 <main@@Base+0x8b8>
    1438:	ldr	r2, [r4, #20]
    143c:	mov	r0, #1
    1440:	add	r1, pc, r1
    1444:	bl	d14 <__printf_chk@plt>
    1448:	ldr	r2, [r4, #24]
    144c:	ldr	r1, [pc, #548]	; 1678 <main@@Base+0x8bc>
    1450:	mov	r0, #1
    1454:	lsl	r3, r2, #2
    1458:	add	r1, pc, r1
    145c:	bl	d14 <__printf_chk@plt>
    1460:	ldr	r2, [r4, #28]
    1464:	ldr	r1, [pc, #528]	; 167c <main@@Base+0x8c0>
    1468:	mov	r0, #1
    146c:	lsl	r3, r2, #2
    1470:	add	r1, pc, r1
    1474:	bl	d14 <__printf_chk@plt>
    1478:	ldr	r2, [r4, #32]
    147c:	ldr	r1, [pc, #508]	; 1680 <main@@Base+0x8c4>
    1480:	mov	r0, #1
    1484:	lsl	r3, r2, #2
    1488:	add	r1, pc, r1
    148c:	bl	d14 <__printf_chk@plt>
    1490:	ldr	r2, [r4, #36]	; 0x24
    1494:	ldr	r1, [pc, #488]	; 1684 <main@@Base+0x8c8>
    1498:	mov	r0, #1
    149c:	lsl	r3, r2, #2
    14a0:	add	r1, pc, r1
    14a4:	bl	d14 <__printf_chk@plt>
    14a8:	mov	r0, #10
    14ac:	bl	d08 <putchar@plt>
    14b0:	ldr	r3, [r4, #24]
    14b4:	cmp	r6, r3, lsl #2
    14b8:	beq	14e0 <main@@Base+0x724>
    14bc:	ldr	r3, [pc, #348]	; 1620 <main@@Base+0x864>
    14c0:	mov	r1, #1
    14c4:	ldr	r0, [pc, #444]	; 1688 <main@@Base+0x8cc>
    14c8:	mov	r2, #36	; 0x24
    14cc:	ldr	r3, [r9, r3]
    14d0:	add	r0, pc, r0
    14d4:	ldr	r3, [r3]
    14d8:	bl	c48 <fwrite@plt>
    14dc:	b	12ac <main@@Base+0x4f0>
    14e0:	ldr	r2, [r4, #32]
    14e4:	ldr	r1, [r4, #28]
    14e8:	ldr	r3, [r4, #36]	; 0x24
    14ec:	add	r1, r1, r2
    14f0:	ldr	r2, [r4, #4]
    14f4:	add	r1, r1, #32
    14f8:	add	r3, r1, r3
    14fc:	cmp	r2, r3
    1500:	beq	1528 <main@@Base+0x76c>
    1504:	ldr	r3, [pc, #276]	; 1620 <main@@Base+0x864>
    1508:	mov	r1, #1
    150c:	ldr	r0, [pc, #376]	; 168c <main@@Base+0x8d0>
    1510:	mov	r2, #40	; 0x28
    1514:	ldr	r3, [r9, r3]
    1518:	add	r0, pc, r0
    151c:	ldr	r3, [r3]
    1520:	bl	c48 <fwrite@plt>
    1524:	b	12ac <main@@Base+0x4f0>
    1528:	ldr	r3, [pc, #352]	; 1690 <main@@Base+0x8d4>
    152c:	mov	r4, #0
    1530:	ldr	sl, [pc, #348]	; 1694 <main@@Base+0x8d8>
    1534:	movw	r9, #64526	; 0xfc0e
    1538:	add	r3, pc, r3
    153c:	movw	r8, #64654	; 0xfc8e
    1540:	add	sl, pc, sl
    1544:	movw	r7, #64514	; 0xfc02
    1548:	str	r6, [r3, #20]
    154c:	mov	r5, r3
    1550:	ldr	r6, [pc, #320]	; 1698 <main@@Base+0x8dc>
    1554:	lsl	r2, r2, #2
    1558:	str	r2, [r3, #16]
    155c:	add	r6, pc, r6
    1560:	ldr	r2, [r5, #16]
    1564:	ldr	r3, [r5, #20]
    1568:	cmp	r2, r3
    156c:	bcs	15b8 <main@@Base+0x7fc>
    1570:	ldr	r3, [r5, #8]
    1574:	ldrh	r2, [r3, r2]!	; <UNPREDICTABLE>
    1578:	cmp	r2, r9
    157c:	ldrb	fp, [r3, #2]
    1580:	beq	15a0 <main@@Base+0x7e4>
    1584:	cmp	r2, r8
    1588:	beq	15a0 <main@@Base+0x7e4>
    158c:	cmp	r2, r7
    1590:	beq	15a0 <main@@Base+0x7e4>
    1594:	mov	r0, #1
    1598:	mov	r1, sl
    159c:	bl	d14 <__printf_chk@plt>
    15a0:	ldr	r3, [r6, #16]
    15a4:	add	r4, r4, #1
    15a8:	add	r3, r3, #3
    15ac:	add	fp, r3, fp
    15b0:	str	fp, [r6, #16]
    15b4:	b	1560 <main@@Base+0x7a4>
    15b8:	ldr	r1, [pc, #220]	; 169c <main@@Base+0x8e0>
    15bc:	mov	r2, r4
    15c0:	mov	r0, #1
    15c4:	add	r1, pc, r1
    15c8:	bl	d14 <__printf_chk@plt>
    15cc:	b	12ac <main@@Base+0x4f0>
    15d0:	andeq	r6, r1, r0, asr #2
    15d4:	andeq	r0, r0, r0, asr #1
    15d8:	andeq	r6, r1, ip, lsl r2
    15dc:	andeq	r5, r1, r8, lsl #30
    15e0:	strdeq	r6, [r1], -ip
    15e4:	andeq	r4, r0, r0, lsl #22
    15e8:	andeq	r6, r1, r8, ror #3
    15ec:	andeq	r4, r0, ip, asr #21
    15f0:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    15f4:	andeq	r0, r0, r0, ror #1
    15f8:	andeq	r6, r1, ip, lsr #32
    15fc:	andeq	r6, r1, r0
    1600:	andeq	r5, r1, r0, ror #31
    1604:	andeq	r5, r1, ip, asr #31
    1608:			; <UNDEFINED> instruction: 0x00015fb4
    160c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
    1610:	andeq	r5, r1, r0, ror #30
    1614:	andeq	r5, r1, r0, asr pc
    1618:	andeq	r0, r0, r4, asr #1
    161c:	andeq	r4, r0, r4, lsl r8
    1620:	andeq	r0, r0, r8, asr #1
    1624:	andeq	r5, r1, r4, asr #29
    1628:	andeq	r0, r0, r4, lsr #15
    162c:	andeq	r4, r0, r8, asr #15
    1630:	muleq	r0, r8, r7
    1634:	andeq	r5, r1, r8, asr #28
    1638:	andeq	r1, r0, ip, lsl #22
    163c:	andeq	r4, r0, r4, lsr r9
    1640:	andeq	r4, r0, r4, asr #13
    1644:	andeq	r5, r1, r0, asr sp
    1648:	andeq	r4, r0, r0, lsr #2
    164c:	andeq	r4, r0, r8, ror r6
    1650:	andeq	r4, r0, ip, ror #1
    1654:	strdeq	r4, [r0], -ip
    1658:	strheq	r4, [r0], -r0
    165c:	andeq	r4, r0, r8, ror r7
    1660:	ldrdeq	r4, [r0], -r8
    1664:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    1668:	andeq	r4, r0, r0, ror #11
    166c:	andeq	r4, r0, r0, ror #11
    1670:	ldrdeq	r4, [r0], -ip
    1674:	ldrdeq	r4, [r0], -ip
    1678:	ldrdeq	r4, [r0], -r0
    167c:	ldrdeq	r4, [r0], -r8
    1680:	andeq	r4, r0, r0, ror #11
    1684:	andeq	r4, r0, ip, ror #11
    1688:	andeq	r4, r0, r4, ror #11
    168c:	andeq	r4, r0, r4, asr #11
    1690:	andeq	r5, r1, r8, asr #21
    1694:	andeq	r3, r0, ip, ror #30
    1698:	andeq	r5, r1, r4, lsr #21
    169c:	andeq	r4, r0, r4, asr #10
    16a0:	mov	fp, #0
    16a4:	mov	lr, #0
    16a8:	pop	{r1}		; (ldr r1, [sp], #4)
    16ac:	mov	r2, sp
    16b0:	push	{r2}		; (str r2, [sp, #-4]!)
    16b4:	push	{r0}		; (str r0, [sp, #-4]!)
    16b8:	ldr	sl, [pc, #40]	; 16e8 <main@@Base+0x92c>
    16bc:	add	r3, pc, #36	; 0x24
    16c0:	add	sl, sl, r3
    16c4:	ldr	ip, [pc, #32]	; 16ec <main@@Base+0x930>
    16c8:	ldr	ip, [sl, ip]
    16cc:	push	{ip}		; (str ip, [sp, #-4]!)
    16d0:	ldr	r3, [pc, #24]	; 16f0 <main@@Base+0x934>
    16d4:	ldr	r3, [sl, r3]
    16d8:	ldr	r0, [pc, #20]	; 16f4 <main@@Base+0x938>
    16dc:	ldr	r0, [sl, r0]
    16e0:	bl	c78 <__libc_start_main@plt>
    16e4:	bl	d8c <abort@plt>
    16e8:	andeq	r5, r1, r4, lsr r8
    16ec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    16f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    16f4:	ldrdeq	r0, [r0], -r4
    16f8:	ldr	r3, [pc, #20]	; 1714 <main@@Base+0x958>
    16fc:	ldr	r2, [pc, #20]	; 1718 <main@@Base+0x95c>
    1700:	add	r3, pc, r3
    1704:	ldr	r2, [r3, r2]
    1708:	cmp	r2, #0
    170c:	bxeq	lr
    1710:	b	c9c <__gmon_start__@plt>
    1714:	andeq	r5, r1, r4, lsl r8
    1718:	andeq	r0, r0, ip, asr #1
    171c:	ldr	r2, [pc, #60]	; 1760 <main@@Base+0x9a4>
    1720:	ldr	r0, [pc, #60]	; 1764 <main@@Base+0x9a8>
    1724:	add	r2, pc, r2
    1728:	add	r0, pc, r0
    172c:	add	r2, r2, #3
    1730:	rsb	r2, r0, r2
    1734:	push	{r3, lr}
    1738:	cmp	r2, #6
    173c:	ldr	r3, [pc, #36]	; 1768 <main@@Base+0x9ac>
    1740:	add	r3, pc, r3
    1744:	popls	{r3, pc}
    1748:	ldr	r2, [pc, #28]	; 176c <main@@Base+0x9b0>
    174c:	ldr	r3, [r3, r2]
    1750:	cmp	r3, #0
    1754:	popeq	{r3, pc}
    1758:	blx	r3
    175c:	pop	{r3, pc}
    1760:	ldrdeq	r5, [r1], -r8
    1764:	ldrdeq	r5, [r1], -r4
    1768:	ldrdeq	r5, [r1], -r4
    176c:	strheq	r0, [r0], -ip
    1770:	push	{r3, lr}
    1774:	ldr	r0, [pc, #64]	; 17bc <main@@Base+0xa00>
    1778:	ldr	r3, [pc, #64]	; 17c0 <main@@Base+0xa04>
    177c:	add	r0, pc, r0
    1780:	ldr	r2, [pc, #60]	; 17c4 <main@@Base+0xa08>
    1784:	add	r3, pc, r3
    1788:	rsb	r3, r0, r3
    178c:	add	r2, pc, r2
    1790:	asr	r3, r3, #2
    1794:	add	r3, r3, r3, lsr #31
    1798:	asrs	r3, r3, #1
    179c:	popeq	{r3, pc}
    17a0:	ldr	r1, [pc, #32]	; 17c8 <main@@Base+0xa0c>
    17a4:	ldr	r2, [r2, r1]
    17a8:	cmp	r2, #0
    17ac:	popeq	{r3, pc}
    17b0:	mov	r1, r3
    17b4:	blx	r2
    17b8:	pop	{r3, pc}
    17bc:	andeq	r5, r1, r0, lsl #17
    17c0:	andeq	r5, r1, r8, ror r8
    17c4:	andeq	r5, r1, r8, lsl #15
    17c8:	ldrdeq	r0, [r0], -ip
    17cc:	ldr	r2, [pc, #76]	; 1820 <main@@Base+0xa64>
    17d0:	push	{r3, lr}
    17d4:	add	r2, pc, r2
    17d8:	ldr	r3, [pc, #68]	; 1824 <main@@Base+0xa68>
    17dc:	ldrb	r2, [r2]
    17e0:	add	r3, pc, r3
    17e4:	cmp	r2, #0
    17e8:	popne	{r3, pc}
    17ec:	ldr	r2, [pc, #52]	; 1828 <main@@Base+0xa6c>
    17f0:	ldr	r3, [r3, r2]
    17f4:	cmp	r3, #0
    17f8:	beq	1808 <main@@Base+0xa4c>
    17fc:	ldr	r0, [pc, #40]	; 182c <main@@Base+0xa70>
    1800:	add	r0, pc, r0
    1804:	bl	bd0 <__cxa_finalize@plt>
    1808:	bl	171c <main@@Base+0x960>
    180c:	ldr	r3, [pc, #28]	; 1830 <main@@Base+0xa74>
    1810:	mov	r2, #1
    1814:	add	r3, pc, r3
    1818:	strb	r2, [r3]
    181c:	pop	{r3, pc}
    1820:	andeq	r5, r1, r8, lsr #16
    1824:	andeq	r5, r1, r4, lsr r7
    1828:	strheq	r0, [r0], -r8
    182c:	andeq	r5, r1, r8, lsl #12
    1830:	andeq	r5, r1, r8, ror #15
    1834:	ldr	r0, [pc, #52]	; 1870 <main@@Base+0xab4>
    1838:	push	{r3, lr}
    183c:	add	r0, pc, r0
    1840:	ldr	r3, [pc, #44]	; 1874 <main@@Base+0xab8>
    1844:	ldr	r2, [r0]
    1848:	add	r3, pc, r3
    184c:	cmp	r2, #0
    1850:	beq	1868 <main@@Base+0xaac>
    1854:	ldr	r2, [pc, #28]	; 1878 <main@@Base+0xabc>
    1858:	ldr	r3, [r3, r2]
    185c:	cmp	r3, #0
    1860:	beq	1868 <main@@Base+0xaac>
    1864:	blx	r3
    1868:	pop	{r3, lr}
    186c:	b	1770 <main@@Base+0x9b4>
    1870:			; <UNDEFINED> instruction: 0x000154b8
    1874:	andeq	r5, r1, ip, asr #13
    1878:	ldrdeq	r0, [r0], -r8
    187c:	push	{r4, r5, r6, lr}
    1880:	sub	sp, sp, #24
    1884:	ldr	r5, [pc, #112]	; 18fc <main@@Base+0xb40>
    1888:	mov	ip, #3
    188c:	ldr	r2, [pc, #108]	; 1900 <main@@Base+0xb44>
    1890:	mov	lr, #0
    1894:	add	r5, pc, r5
    1898:	ldr	r0, [pc, #100]	; 1904 <main@@Base+0xb48>
    189c:	ldr	r6, [pc, #100]	; 1908 <main@@Base+0xb4c>
    18a0:	mov	r3, ip
    18a4:	ldr	r4, [r5, r2]
    18a8:	add	r0, pc, r0
    18ac:	add	r6, pc, r6
    18b0:	add	r2, sp, #16
    18b4:	ldr	r0, [r0]
    18b8:	movw	r1, #64579	; 0xfc43
    18bc:	str	r6, [sp]
    18c0:	ldr	r5, [r4]
    18c4:	str	lr, [sp, #4]
    18c8:	str	lr, [sp, #8]
    18cc:	str	r5, [sp, #20]
    18d0:	strb	ip, [sp, #16]
    18d4:	strb	ip, [sp, #17]
    18d8:	strb	ip, [sp, #18]
    18dc:	bl	3508 <main@@Base+0x274c>
    18e0:	ldr	r2, [sp, #20]
    18e4:	ldr	r3, [r4]
    18e8:	cmp	r2, r3
    18ec:	bne	18f8 <main@@Base+0xb3c>
    18f0:	add	sp, sp, #24
    18f4:	pop	{r4, r5, r6, pc}
    18f8:	bl	c30 <__stack_chk_fail@plt>
    18fc:	andeq	r5, r1, r0, lsl #13
    1900:	andeq	r0, r0, r0, asr #1
    1904:	andeq	r5, r1, r8, asr r7
    1908:	andeq	r0, r0, ip, asr #14
    190c:	cmp	r0, #2
    1910:	beq	191c <main@@Base+0xb60>
    1914:	cmp	r0, #15
    1918:	bxne	lr
    191c:	b	3e08 <main@@Base+0x304c>
    1920:	ldr	r0, [pc, #36]	; 194c <main@@Base+0xb90>
    1924:	push	{r3, lr}
    1928:	add	r0, pc, r0
    192c:	bl	c54 <puts@plt>
    1930:	ldr	r0, [pc, #24]	; 1950 <main@@Base+0xb94>
    1934:	add	r0, pc, r0
    1938:	bl	c54 <puts@plt>
    193c:	ldr	r0, [pc, #16]	; 1954 <main@@Base+0xb98>
    1940:	pop	{r3, lr}
    1944:	add	r0, pc, r0
    1948:	b	c54 <puts@plt>
    194c:	andeq	r3, r0, r0, ror #12
    1950:	andeq	r3, r0, r8, lsl #13
    1954:	andeq	r3, r0, ip, lsl #13
    1958:	push	{r3, lr}
    195c:	ldrb	r3, [r0]
    1960:	ldr	r0, [pc, #52]	; 199c <main@@Base+0xbe0>
    1964:	cmp	r3, #0
    1968:	add	r0, pc, r0
    196c:	bne	1978 <main@@Base+0xbbc>
    1970:	pop	{r3, lr}
    1974:	b	3e08 <main@@Base+0x304c>
    1978:	ldr	ip, [pc, #32]	; 19a0 <main@@Base+0xbe4>
    197c:	mov	r1, #1
    1980:	ldr	r2, [pc, #28]	; 19a4 <main@@Base+0xbe8>
    1984:	ldr	r0, [r0, ip]
    1988:	add	r2, pc, r2
    198c:	ldr	r0, [r0]
    1990:	bl	d20 <__fprintf_chk@plt>
    1994:	pop	{r3, lr}
    1998:	b	3e08 <main@@Base+0x304c>
    199c:	andeq	r5, r1, ip, lsr #11
    19a0:	andeq	r0, r0, r8, asr #1
    19a4:			; <UNDEFINED> instruction: 0x000037b0
    19a8:	push	{r4, lr}
    19ac:	mov	r4, r0
    19b0:	ldrb	r3, [r0]
    19b4:	sub	sp, sp, #8
    19b8:	ldr	ip, [pc, #400]	; 1b50 <main@@Base+0xd94>
    19bc:	cmp	r3, #0
    19c0:	add	ip, pc, ip
    19c4:	bne	1b28 <main@@Base+0xd6c>
    19c8:	cmp	r1, #23
    19cc:	beq	19fc <main@@Base+0xc40>
    19d0:	ldr	r3, [pc, #380]	; 1b54 <main@@Base+0xd98>
    19d4:	mov	r1, #1
    19d8:	ldr	r0, [pc, #376]	; 1b58 <main@@Base+0xd9c>
    19dc:	mov	r2, #35	; 0x23
    19e0:	ldr	r3, [ip, r3]
    19e4:	add	r0, pc, r0
    19e8:	ldr	r3, [r3]
    19ec:	bl	c48 <fwrite@plt>
    19f0:	add	sp, sp, #8
    19f4:	pop	{r4, lr}
    19f8:	b	3e08 <main@@Base+0x304c>
    19fc:	ldr	r0, [pc, #344]	; 1b5c <main@@Base+0xda0>
    1a00:	add	r0, pc, r0
    1a04:	bl	c54 <puts@plt>
    1a08:	ldr	r1, [pc, #336]	; 1b60 <main@@Base+0xda4>
    1a0c:	ldrb	r2, [r4, #1]
    1a10:	mov	r0, #1
    1a14:	add	r1, pc, r1
    1a18:	bl	d14 <__printf_chk@plt>
    1a1c:	ldr	r1, [pc, #320]	; 1b64 <main@@Base+0xda8>
    1a20:	ldrb	r2, [r4, #2]
    1a24:	mov	r0, #1
    1a28:	add	r1, pc, r1
    1a2c:	bl	d14 <__printf_chk@plt>
    1a30:	ldr	r1, [pc, #304]	; 1b68 <main@@Base+0xdac>
    1a34:	ldrb	r2, [r4, #3]
    1a38:	mov	r0, #1
    1a3c:	add	r1, pc, r1
    1a40:	bl	d14 <__printf_chk@plt>
    1a44:	ldr	r1, [pc, #288]	; 1b6c <main@@Base+0xdb0>
    1a48:	ldrh	r2, [r4, #4]
    1a4c:	mov	r0, #1
    1a50:	add	r1, pc, r1
    1a54:	bl	d14 <__printf_chk@plt>
    1a58:	ldr	r1, [pc, #272]	; 1b70 <main@@Base+0xdb4>
    1a5c:	ldrb	r2, [r4, #6]
    1a60:	mov	r0, #1
    1a64:	add	r1, pc, r1
    1a68:	bl	d14 <__printf_chk@plt>
    1a6c:	ldr	r1, [pc, #256]	; 1b74 <main@@Base+0xdb8>
    1a70:	ldrb	r2, [r4, #7]
    1a74:	mov	r0, #1
    1a78:	add	r1, pc, r1
    1a7c:	bl	d14 <__printf_chk@plt>
    1a80:	ldr	r1, [pc, #240]	; 1b78 <main@@Base+0xdbc>
    1a84:	ldrb	r2, [r4, #8]
    1a88:	mov	r0, #1
    1a8c:	add	r1, pc, r1
    1a90:	bl	d14 <__printf_chk@plt>
    1a94:	ldr	r1, [pc, #224]	; 1b7c <main@@Base+0xdc0>
    1a98:	ldrb	r2, [r4, #9]
    1a9c:	mov	r0, #1
    1aa0:	add	r1, pc, r1
    1aa4:	bl	d14 <__printf_chk@plt>
    1aa8:	ldr	r1, [pc, #208]	; 1b80 <main@@Base+0xdc4>
    1aac:	ldrb	r2, [r4, #10]
    1ab0:	mov	r0, #1
    1ab4:	add	r1, pc, r1
    1ab8:	bl	d14 <__printf_chk@plt>
    1abc:	ldr	r1, [pc, #192]	; 1b84 <main@@Base+0xdc8>
    1ac0:	ldrb	r2, [r4, #11]
    1ac4:	mov	r0, #1
    1ac8:	add	r1, pc, r1
    1acc:	bl	d14 <__printf_chk@plt>
    1ad0:	ldrb	ip, [r4, #20]
    1ad4:	ldr	r1, [pc, #172]	; 1b88 <main@@Base+0xdcc>
    1ad8:	mov	r0, #1
    1adc:	ldrb	r3, [r4, #19]
    1ae0:	add	ip, ip, #2000	; 0x7d0
    1ae4:	ldrb	r2, [r4, #18]
    1ae8:	add	r1, pc, r1
    1aec:	str	ip, [sp]
    1af0:	bl	d14 <__printf_chk@plt>
    1af4:	ldr	r1, [pc, #144]	; 1b8c <main@@Base+0xdd0>
    1af8:	ldrb	r2, [r4, #21]
    1afc:	mov	r0, #1
    1b00:	add	r1, pc, r1
    1b04:	bl	d14 <__printf_chk@plt>
    1b08:	ldr	r1, [pc, #128]	; 1b90 <main@@Base+0xdd4>
    1b0c:	ldrb	r2, [r4, #22]
    1b10:	mov	r0, #1
    1b14:	add	r1, pc, r1
    1b18:	bl	d14 <__printf_chk@plt>
    1b1c:	add	sp, sp, #8
    1b20:	pop	{r4, lr}
    1b24:	b	3e08 <main@@Base+0x304c>
    1b28:	ldr	r0, [pc, #36]	; 1b54 <main@@Base+0xd98>
    1b2c:	mov	r1, #1
    1b30:	ldr	r2, [pc, #92]	; 1b94 <main@@Base+0xdd8>
    1b34:	ldr	r0, [ip, r0]
    1b38:	add	r2, pc, r2
    1b3c:	ldr	r0, [r0]
    1b40:	bl	d20 <__fprintf_chk@plt>
    1b44:	add	sp, sp, #8
    1b48:	pop	{r4, lr}
    1b4c:	b	3e08 <main@@Base+0x304c>
    1b50:	andeq	r5, r1, r4, asr r5
    1b54:	andeq	r0, r0, r8, asr #1
    1b58:	muleq	r0, r8, r7
    1b5c:	andeq	r3, r0, r0, lsr #15
    1b60:	andeq	r3, r0, r4, lsr #15
    1b64:	andeq	r3, r0, ip, lsr #15
    1b68:			; <UNDEFINED> instruction: 0x000037b4
    1b6c:			; <UNDEFINED> instruction: 0x000037bc
    1b70:	andeq	r3, r0, r4, asr #15
    1b74:	andeq	r3, r0, ip, asr #15
    1b78:	ldrdeq	r3, [r0], -r4
    1b7c:	ldrdeq	r3, [r0], -r4
    1b80:	ldrdeq	r3, [r0], -r0
    1b84:	andeq	r3, r0, ip, asr #15
    1b88:	andeq	r3, r0, r0, asr #15
    1b8c:	andeq	r3, r0, r8, asr #15
    1b90:	ldrdeq	r3, [r0], -r0
    1b94:	andeq	r3, r0, ip, lsl r6
    1b98:	push	{lr}		; (str lr, [sp, #-4]!)
    1b9c:	sub	sp, sp, #20
    1ba0:	ldrb	ip, [r0]
    1ba4:	ldr	r0, [pc, #132]	; 1c30 <main@@Base+0xe74>
    1ba8:	cmp	ip, #0
    1bac:	add	r0, pc, r0
    1bb0:	bne	1c04 <main@@Base+0xe48>
    1bb4:	ldr	r3, [pc, #120]	; 1c34 <main@@Base+0xe78>
    1bb8:	add	r3, pc, r3
    1bbc:	ldrb	r2, [r3, #4]
    1bc0:	cmp	r2, #0
    1bc4:	bne	1bd4 <main@@Base+0xe18>
    1bc8:	add	sp, sp, #20
    1bcc:	pop	{lr}		; (ldr lr, [sp], #4)
    1bd0:	b	3e08 <main@@Base+0x304c>
    1bd4:	ldr	lr, [pc, #92]	; 1c38 <main@@Base+0xe7c>
    1bd8:	mov	r2, ip
    1bdc:	ldr	r0, [r3]
    1be0:	movw	r1, #3075	; 0xc03
    1be4:	add	lr, pc, lr
    1be8:	mov	r3, ip
    1bec:	str	ip, [sp, #4]
    1bf0:	str	ip, [sp, #8]
    1bf4:	str	lr, [sp]
    1bf8:	bl	3508 <main@@Base+0x274c>
    1bfc:	add	sp, sp, #20
    1c00:	pop	{pc}		; (ldr pc, [sp], #4)
    1c04:	ldr	lr, [pc, #48]	; 1c3c <main@@Base+0xe80>
    1c08:	mov	r3, ip
    1c0c:	ldr	r2, [pc, #44]	; 1c40 <main@@Base+0xe84>
    1c10:	mov	r1, #1
    1c14:	ldr	r0, [r0, lr]
    1c18:	add	r2, pc, r2
    1c1c:	ldr	r0, [r0]
    1c20:	bl	d20 <__fprintf_chk@plt>
    1c24:	add	sp, sp, #20
    1c28:	pop	{lr}		; (ldr lr, [sp], #4)
    1c2c:	b	3e08 <main@@Base+0x304c>
    1c30:	andeq	r5, r1, r8, ror #6
    1c34:	andeq	r5, r1, r8, asr #8
    1c38:			; <UNDEFINED> instruction: 0xfffffd6c
    1c3c:	andeq	r0, r0, r8, asr #1
    1c40:	andeq	r3, r0, r4, ror #13
    1c44:	push	{lr}		; (str lr, [sp, #-4]!)
    1c48:	sub	sp, sp, #20
    1c4c:	ldrb	ip, [r0]
    1c50:	ldr	r0, [pc, #132]	; 1cdc <main@@Base+0xf20>
    1c54:	cmp	ip, #0
    1c58:	add	r0, pc, r0
    1c5c:	bne	1cb0 <main@@Base+0xef4>
    1c60:	ldr	r3, [pc, #120]	; 1ce0 <main@@Base+0xf24>
    1c64:	add	r3, pc, r3
    1c68:	ldrb	r2, [r3, #4]
    1c6c:	cmp	r2, #0
    1c70:	bne	1c80 <main@@Base+0xec4>
    1c74:	add	sp, sp, #20
    1c78:	pop	{lr}		; (ldr lr, [sp], #4)
    1c7c:	b	3e08 <main@@Base+0x304c>
    1c80:	ldr	lr, [pc, #92]	; 1ce4 <main@@Base+0xf28>
    1c84:	mov	r2, ip
    1c88:	ldr	r0, [r3]
    1c8c:	movw	r1, #3075	; 0xc03
    1c90:	add	lr, pc, lr
    1c94:	mov	r3, ip
    1c98:	str	ip, [sp, #4]
    1c9c:	str	ip, [sp, #8]
    1ca0:	str	lr, [sp]
    1ca4:	bl	3508 <main@@Base+0x274c>
    1ca8:	add	sp, sp, #20
    1cac:	pop	{pc}		; (ldr pc, [sp], #4)
    1cb0:	ldr	lr, [pc, #48]	; 1ce8 <main@@Base+0xf2c>
    1cb4:	mov	r3, ip
    1cb8:	ldr	r2, [pc, #44]	; 1cec <main@@Base+0xf30>
    1cbc:	mov	r1, #1
    1cc0:	ldr	r0, [r0, lr]
    1cc4:	add	r2, pc, r2
    1cc8:	ldr	r0, [r0]
    1ccc:	bl	d20 <__fprintf_chk@plt>
    1cd0:	add	sp, sp, #20
    1cd4:	pop	{lr}		; (ldr lr, [sp], #4)
    1cd8:	b	3e08 <main@@Base+0x304c>
    1cdc:			; <UNDEFINED> instruction: 0x000152bc
    1ce0:	muleq	r1, ip, r3
    1ce4:			; <UNDEFINED> instruction: 0xfffffcc0
    1ce8:	andeq	r0, r0, r8, asr #1
    1cec:	andeq	r3, r0, r4, ror #12
    1cf0:	push	{r4, r5, r6, lr}
    1cf4:	sub	sp, sp, #24
    1cf8:	ldr	r5, [pc, #208]	; 1dd0 <main@@Base+0x1014>
    1cfc:	ldr	r3, [pc, #208]	; 1dd4 <main@@Base+0x1018>
    1d00:	add	r5, pc, r5
    1d04:	ldr	r4, [pc, #204]	; 1dd8 <main@@Base+0x101c>
    1d08:	ldr	r6, [r5, r3]
    1d0c:	add	r4, pc, r4
    1d10:	ldr	r0, [r4]
    1d14:	ldr	r3, [r6]
    1d18:	str	r3, [sp, #20]
    1d1c:	bl	366c <main@@Base+0x28b0>
    1d20:	ldr	r0, [r4, #8]
    1d24:	bl	c0c <free@plt>
    1d28:	ldrb	ip, [r4, #12]
    1d2c:	cmp	ip, #0
    1d30:	bne	1d88 <main@@Base+0xfcc>
    1d34:	ldrb	r3, [r4, #4]
    1d38:	cmp	r3, #0
    1d3c:	bne	1d5c <main@@Base+0xfa0>
    1d40:	bl	3e08 <main@@Base+0x304c>
    1d44:	ldr	r2, [sp, #20]
    1d48:	ldr	r3, [r6]
    1d4c:	cmp	r2, r3
    1d50:	bne	1dcc <main@@Base+0x1010>
    1d54:	add	sp, sp, #24
    1d58:	pop	{r4, r5, r6, pc}
    1d5c:	ldr	lr, [pc, #120]	; 1ddc <main@@Base+0x1020>
    1d60:	mov	r2, ip
    1d64:	ldr	r0, [r4]
    1d68:	mov	r3, ip
    1d6c:	add	lr, pc, lr
    1d70:	str	ip, [sp, #4]
    1d74:	movw	r1, #3075	; 0xc03
    1d78:	str	ip, [sp, #8]
    1d7c:	str	lr, [sp]
    1d80:	bl	3508 <main@@Base+0x274c>
    1d84:	b	1d44 <main@@Base+0xf88>
    1d88:	ldr	r3, [pc, #80]	; 1de0 <main@@Base+0x1024>
    1d8c:	mov	ip, #0
    1d90:	strb	ip, [sp, #16]
    1d94:	movw	r1, #64529	; 0xfc11
    1d98:	ldr	r0, [r4]
    1d9c:	add	r2, sp, #16
    1da0:	ldr	lr, [r5, r3]
    1da4:	mov	r3, #2
    1da8:	str	ip, [sp, #4]
    1dac:	ldr	r4, [pc, #48]	; 1de4 <main@@Base+0x1028>
    1db0:	ldrb	lr, [lr]
    1db4:	add	r4, pc, r4
    1db8:	str	ip, [sp, #8]
    1dbc:	str	r4, [sp]
    1dc0:	strb	lr, [sp, #17]
    1dc4:	bl	3508 <main@@Base+0x274c>
    1dc8:	b	1d44 <main@@Base+0xf88>
    1dcc:	bl	c30 <__stack_chk_fail@plt>
    1dd0:	andeq	r5, r1, r4, lsl r2
    1dd4:	andeq	r0, r0, r0, asr #1
    1dd8:	strdeq	r5, [r1], -r4
    1ddc:			; <UNDEFINED> instruction: 0xfffffbe4
    1de0:	strheq	r0, [r0], -r4
    1de4:			; <UNDEFINED> instruction: 0xfffffddc
    1de8:	push	{r3, lr}
    1dec:	ldrb	r3, [r0]
    1df0:	ldr	r0, [pc, #52]	; 1e2c <main@@Base+0x1070>
    1df4:	cmp	r3, #0
    1df8:	add	r0, pc, r0
    1dfc:	bne	1e08 <main@@Base+0x104c>
    1e00:	pop	{r3, lr}
    1e04:	b	1cf0 <main@@Base+0xf34>
    1e08:	ldr	ip, [pc, #32]	; 1e30 <main@@Base+0x1074>
    1e0c:	mov	r1, #1
    1e10:	ldr	r2, [pc, #28]	; 1e34 <main@@Base+0x1078>
    1e14:	ldr	r0, [r0, ip]
    1e18:	add	r2, pc, r2
    1e1c:	ldr	r0, [r0]
    1e20:	bl	d20 <__fprintf_chk@plt>
    1e24:	pop	{r3, lr}
    1e28:	b	3e08 <main@@Base+0x304c>
    1e2c:	andeq	r5, r1, ip, lsl r1
    1e30:	andeq	r0, r0, r8, asr #1
    1e34:	andeq	r3, r0, r0, lsr r5
    1e38:	push	{r3, lr}
    1e3c:	ldrb	r3, [r0]
    1e40:	ldr	r0, [pc, #80]	; 1e98 <main@@Base+0x10dc>
    1e44:	cmp	r3, #0
    1e48:	add	r0, pc, r0
    1e4c:	bne	1e74 <main@@Base+0x10b8>
    1e50:	ldr	r3, [pc, #68]	; 1e9c <main@@Base+0x10e0>
    1e54:	add	r3, pc, r3
    1e58:	ldrb	r3, [r3, #13]
    1e5c:	cmp	r3, #0
    1e60:	bne	1e6c <main@@Base+0x10b0>
    1e64:	pop	{r3, lr}
    1e68:	b	1cf0 <main@@Base+0xf34>
    1e6c:	pop	{r3, lr}
    1e70:	b	187c <main@@Base+0xac0>
    1e74:	ldr	ip, [pc, #36]	; 1ea0 <main@@Base+0x10e4>
    1e78:	mov	r1, #1
    1e7c:	ldr	r2, [pc, #32]	; 1ea4 <main@@Base+0x10e8>
    1e80:	ldr	r0, [r0, ip]
    1e84:	add	r2, pc, r2
    1e88:	ldr	r0, [r0]
    1e8c:	bl	d20 <__fprintf_chk@plt>
    1e90:	pop	{r3, lr}
    1e94:	b	1cf0 <main@@Base+0xf34>
    1e98:	andeq	r5, r1, ip, asr #1
    1e9c:	andeq	r5, r1, ip, lsr #3
    1ea0:	andeq	r0, r0, r8, asr #1
    1ea4:	andeq	r3, r0, r8, ror #9
    1ea8:	push	{r4, r5, r6, r7, lr}
    1eac:	sub	sp, sp, #20
    1eb0:	ldrb	ip, [r0]
    1eb4:	ldr	r5, [pc, #292]	; 1fe0 <main@@Base+0x1224>
    1eb8:	cmp	ip, #0
    1ebc:	add	r5, pc, r5
    1ec0:	bne	1f28 <main@@Base+0x116c>
    1ec4:	ldr	r4, [pc, #280]	; 1fe4 <main@@Base+0x1228>
    1ec8:	add	r4, pc, r4
    1ecc:	ldr	r1, [r4, #16]
    1ed0:	ldr	r3, [r4, #20]
    1ed4:	cmp	r1, r3
    1ed8:	bcs	1fb0 <main@@Base+0x11f4>
    1edc:	ldr	r2, [r4, #8]
    1ee0:	ldrb	r3, [r2, r1]
    1ee4:	cmp	r3, #1
    1ee8:	beq	1f4c <main@@Base+0x1190>
    1eec:	ldr	r3, [pc, #244]	; 1fe8 <main@@Base+0x122c>
    1ef0:	mov	r1, #1
    1ef4:	ldr	r0, [pc, #240]	; 1fec <main@@Base+0x1230>
    1ef8:	mov	r2, #27
    1efc:	ldr	r3, [r5, r3]
    1f00:	add	r0, pc, r0
    1f04:	ldr	r3, [r3]
    1f08:	bl	c48 <fwrite@plt>
    1f0c:	ldr	r3, [pc, #220]	; 1ff0 <main@@Base+0x1234>
    1f10:	mov	r2, #1
    1f14:	ldr	r3, [r5, r3]
    1f18:	strb	r2, [r3]
    1f1c:	add	sp, sp, #20
    1f20:	pop	{r4, r5, r6, r7, lr}
    1f24:	b	1cf0 <main@@Base+0xf34>
    1f28:	ldr	r0, [pc, #184]	; 1fe8 <main@@Base+0x122c>
    1f2c:	mov	r3, ip
    1f30:	ldr	r2, [pc, #188]	; 1ff4 <main@@Base+0x1238>
    1f34:	mov	r1, #1
    1f38:	ldr	r0, [r5, r0]
    1f3c:	add	r2, pc, r2
    1f40:	ldr	r0, [r0]
    1f44:	bl	d20 <__fprintf_chk@plt>
    1f48:	b	1f0c <main@@Base+0x1150>
    1f4c:	add	lr, r2, r1
    1f50:	add	r1, r1, #4
    1f54:	add	r2, r2, r1
    1f58:	ldr	r6, [pc, #152]	; 1ff8 <main@@Base+0x123c>
    1f5c:	ldrb	r5, [lr, #3]
    1f60:	ldrb	r7, [lr, #2]
    1f64:	add	r6, pc, r6
    1f68:	ldrb	r1, [lr, #1]
    1f6c:	ldr	r0, [r4]
    1f70:	mov	r3, r5
    1f74:	str	ip, [sp, #4]
    1f78:	orr	r1, r1, r7, lsl #8
    1f7c:	str	ip, [sp, #8]
    1f80:	str	r6, [sp]
    1f84:	bl	3508 <main@@Base+0x274c>
    1f88:	ldr	r3, [r4, #16]
    1f8c:	ldr	r2, [r4, #8]
    1f90:	add	r5, r5, r3
    1f94:	add	r3, r5, #4
    1f98:	str	r3, [r4, #16]
    1f9c:	ldrb	r3, [r2, r3]
    1fa0:	cmp	r3, #2
    1fa4:	beq	1fc8 <main@@Base+0x120c>
    1fa8:	add	sp, sp, #20
    1fac:	pop	{r4, r5, r6, r7, pc}
    1fb0:	ldr	r0, [pc, #68]	; 1ffc <main@@Base+0x1240>
    1fb4:	add	r0, pc, r0
    1fb8:	bl	c54 <puts@plt>
    1fbc:	ldr	r3, [pc, #44]	; 1ff0 <main@@Base+0x1234>
    1fc0:	mov	r2, #2
    1fc4:	b	1f14 <main@@Base+0x1158>
    1fc8:	add	r2, r2, r5
    1fcc:	add	r5, r5, #7
    1fd0:	ldrb	r3, [r2, #6]
    1fd4:	add	r5, r5, r3
    1fd8:	str	r5, [r4, #16]
    1fdc:	b	1fa8 <main@@Base+0x11ec>
    1fe0:	andeq	r5, r1, r8, asr r0
    1fe4:	andeq	r5, r1, r8, lsr r1
    1fe8:	andeq	r0, r0, r8, asr #1
    1fec:	andeq	r3, r0, r4, asr #9
    1ff0:	strheq	r0, [r0], -r4
    1ff4:	andeq	r3, r0, r0, asr r4
    1ff8:			; <UNDEFINED> instruction: 0xffffff3c
    1ffc:	strdeq	r3, [r0], -ip
    2000:	push	{r3, lr}
    2004:	ldrb	r3, [r0]
    2008:	ldr	r0, [pc, #52]	; 2044 <main@@Base+0x1288>
    200c:	cmp	r3, #0
    2010:	add	r0, pc, r0
    2014:	bne	2020 <main@@Base+0x1264>
    2018:	pop	{r3, lr}
    201c:	b	1cf0 <main@@Base+0xf34>
    2020:	ldr	ip, [pc, #32]	; 2048 <main@@Base+0x128c>
    2024:	mov	r1, #1
    2028:	ldr	r2, [pc, #28]	; 204c <main@@Base+0x1290>
    202c:	ldr	r0, [r0, ip]
    2030:	add	r2, pc, r2
    2034:	ldr	r0, [r0]
    2038:	bl	d20 <__fprintf_chk@plt>
    203c:	pop	{r3, lr}
    2040:	b	1cf0 <main@@Base+0xf34>
    2044:	andeq	r4, r1, r4, lsl #30
    2048:	andeq	r0, r0, r8, asr #1
    204c:			; <UNDEFINED> instruction: 0x000033b0
    2050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2054:	sub	sp, sp, #116	; 0x74
    2058:	ldr	r4, [pc, #720]	; 2330 <main@@Base+0x1574>
    205c:	mov	r1, #0
    2060:	ldr	r2, [pc, #716]	; 2334 <main@@Base+0x1578>
    2064:	mov	r7, r0
    2068:	add	r4, pc, r4
    206c:	ldr	r5, [r4, r2]
    2070:	ldr	r2, [r5]
    2074:	str	r2, [sp, #108]	; 0x6c
    2078:	bl	ca8 <open@plt>
    207c:	subs	r6, r0, #0
    2080:	blt	21b4 <main@@Base+0x13f8>
    2084:	mov	r0, #3
    2088:	mov	r1, r6
    208c:	add	r2, sp, #16
    2090:	bl	c84 <__fxstat@plt>
    2094:	cmp	r0, #0
    2098:	blt	2268 <main@@Base+0x14ac>
    209c:	ldr	r8, [sp, #60]	; 0x3c
    20a0:	ldr	r7, [pc, #656]	; 2338 <main@@Base+0x157c>
    20a4:	mov	r0, r8
    20a8:	add	r7, pc, r7
    20ac:	bl	c60 <malloc@plt>
    20b0:	cmp	r0, #0
    20b4:	str	r0, [r7, #8]
    20b8:	beq	22d8 <main@@Base+0x151c>
    20bc:	mov	r1, r0
    20c0:	mov	r2, r8
    20c4:	mov	r0, r6
    20c8:	bl	bf4 <read@plt>
    20cc:	subs	r8, r0, #0
    20d0:	blt	2298 <main@@Base+0x14dc>
    20d4:	mov	r0, r6
    20d8:	bl	da4 <close@plt>
    20dc:	ldr	r3, [sp, #60]	; 0x3c
    20e0:	cmp	r3, r8
    20e4:	bgt	22b0 <main@@Base+0x14f4>
    20e8:	ldr	r3, [r7, #8]
    20ec:	mov	ip, r8
    20f0:	ldr	r9, [pc, #580]	; 233c <main@@Base+0x1580>
    20f4:	movw	fp, #64654	; 0xfc8e
    20f8:	ldr	r6, [pc, #576]	; 2340 <main@@Base+0x1584>
    20fc:	ldrb	r3, [r3]
    2100:	add	r9, pc, r9
    2104:	ldr	sl, [pc, #568]	; 2344 <main@@Base+0x1588>
    2108:	add	r6, pc, r6
    210c:	cmp	r3, #255	; 0xff
    2110:	ldr	r3, [pc, #560]	; 2348 <main@@Base+0x158c>
    2114:	str	r8, [r7, #20]
    2118:	add	sl, pc, sl
    211c:	add	r3, pc, r3
    2120:	str	r3, [sp, #8]
    2124:	ldr	r3, [pc, #544]	; 234c <main@@Base+0x1590>
    2128:	moveq	r1, #1
    212c:	ldrne	r1, [r7, #16]
    2130:	streq	r1, [r7, #16]
    2134:	mov	r7, #0
    2138:	add	r3, pc, r3
    213c:	mov	r8, r7
    2140:	str	r3, [sp, #12]
    2144:	mov	r3, r5
    2148:	mov	r5, r4
    214c:	mov	r4, r9
    2150:	cmp	ip, r1
    2154:	bls	22f0 <main@@Base+0x1534>
    2158:	ldr	r2, [r6, #8]
    215c:	ldrb	r0, [r2, r1]
    2160:	cmp	r0, #1
    2164:	beq	2220 <main@@Base+0x1464>
    2168:	cmp	r0, #2
    216c:	beq	21dc <main@@Base+0x1420>
    2170:	mov	r4, r5
    2174:	mov	r5, r3
    2178:	ldr	r3, [pc, #464]	; 2350 <main@@Base+0x1594>
    217c:	mov	r1, #1
    2180:	ldr	r0, [pc, #460]	; 2354 <main@@Base+0x1598>
    2184:	mov	r2, #22
    2188:	ldr	r3, [r4, r3]
    218c:	add	r0, pc, r0
    2190:	ldr	r3, [r3]
    2194:	bl	c48 <fwrite@plt>
    2198:	bl	1cf0 <main@@Base+0xf34>
    219c:	ldr	r2, [sp, #108]	; 0x6c
    21a0:	ldr	r3, [r5]
    21a4:	cmp	r2, r3
    21a8:	bne	232c <main@@Base+0x1570>
    21ac:	add	sp, sp, #116	; 0x74
    21b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    21b4:	ldr	r0, [pc, #404]	; 2350 <main@@Base+0x1594>
    21b8:	mov	r3, r7
    21bc:	ldr	r2, [pc, #404]	; 2358 <main@@Base+0x159c>
    21c0:	mov	r1, #1
    21c4:	ldr	r0, [r4, r0]
    21c8:	add	r2, pc, r2
    21cc:	ldr	r0, [r0]
    21d0:	bl	d20 <__fprintf_chk@plt>
    21d4:	bl	1cf0 <main@@Base+0xf34>
    21d8:	b	219c <main@@Base+0x13e0>
    21dc:	add	r0, r2, r1
    21e0:	ldrb	r2, [r0, #1]
    21e4:	ldrb	r9, [r0, #2]
    21e8:	cmp	r2, #14
    21ec:	beq	220c <main@@Base+0x1450>
    21f0:	ldr	r1, [sp, #12]
    21f4:	mov	r0, #1
    21f8:	str	r3, [sp, #4]
    21fc:	bl	d14 <__printf_chk@plt>
    2200:	ldr	r1, [r6, #16]
    2204:	ldr	ip, [r6, #20]
    2208:	ldr	r3, [sp, #4]
    220c:	add	r9, r9, #3
    2210:	add	r7, r7, #1
    2214:	add	r1, r9, r1
    2218:	str	r1, [r4, #16]
    221c:	b	2150 <main@@Base+0x1394>
    2220:	add	r9, r2, r1
    2224:	ldrb	r2, [r9, #2]
    2228:	ldrb	lr, [r9, #1]
    222c:	ldrb	r9, [r9, #3]
    2230:	orr	r2, lr, r2, lsl #8
    2234:	cmp	r2, fp
    2238:	beq	2254 <main@@Base+0x1498>
    223c:	ldr	r1, [sp, #8]
    2240:	str	r3, [sp, #4]
    2244:	bl	d14 <__printf_chk@plt>
    2248:	ldr	r1, [r6, #16]
    224c:	ldr	ip, [r6, #20]
    2250:	ldr	r3, [sp, #4]
    2254:	add	r9, r9, #4
    2258:	add	r8, r8, #1
    225c:	add	r1, r9, r1
    2260:	str	r1, [sl, #16]
    2264:	b	2150 <main@@Base+0x1394>
    2268:	ldr	r0, [pc, #236]	; 235c <main@@Base+0x15a0>
    226c:	mov	r1, #1
    2270:	ldr	r3, [pc, #216]	; 2350 <main@@Base+0x1594>
    2274:	mov	r2, #28
    2278:	add	r0, pc, r0
    227c:	ldr	r3, [r4, r3]
    2280:	ldr	r3, [r3]
    2284:	bl	c48 <fwrite@plt>
    2288:	mov	r0, r6
    228c:	bl	da4 <close@plt>
    2290:	bl	1cf0 <main@@Base+0xf34>
    2294:	b	219c <main@@Base+0x13e0>
    2298:	ldr	r0, [pc, #192]	; 2360 <main@@Base+0x15a4>
    229c:	mov	r1, #1
    22a0:	ldr	r3, [pc, #168]	; 2350 <main@@Base+0x1594>
    22a4:	mov	r2, #29
    22a8:	add	r0, pc, r0
    22ac:	b	227c <main@@Base+0x14c0>
    22b0:	ldr	r3, [pc, #152]	; 2350 <main@@Base+0x1594>
    22b4:	mov	r1, #1
    22b8:	ldr	r0, [pc, #164]	; 2364 <main@@Base+0x15a8>
    22bc:	mov	r2, #36	; 0x24
    22c0:	ldr	r3, [r4, r3]
    22c4:	add	r0, pc, r0
    22c8:	ldr	r3, [r3]
    22cc:	bl	c48 <fwrite@plt>
    22d0:	bl	1cf0 <main@@Base+0xf34>
    22d4:	b	219c <main@@Base+0x13e0>
    22d8:	ldr	r0, [pc, #136]	; 2368 <main@@Base+0x15ac>
    22dc:	mov	r1, #1
    22e0:	ldr	r3, [pc, #104]	; 2350 <main@@Base+0x1594>
    22e4:	mov	r2, #35	; 0x23
    22e8:	add	r0, pc, r0
    22ec:	b	227c <main@@Base+0x14c0>
    22f0:	ldr	r1, [pc, #116]	; 236c <main@@Base+0x15b0>
    22f4:	mov	r2, r8
    22f8:	mov	r5, r3
    22fc:	mov	r0, #1
    2300:	mov	r3, r7
    2304:	add	r1, pc, r1
    2308:	bl	d14 <__printf_chk@plt>
    230c:	ldr	r3, [pc, #92]	; 2370 <main@@Base+0x15b4>
    2310:	add	r3, pc, r3
    2314:	ldr	r2, [r3, #8]
    2318:	ldrb	r2, [r2]
    231c:	cmp	r2, #255	; 0xff
    2320:	moveq	r2, #1
    2324:	streq	r2, [r3, #16]
    2328:	b	219c <main@@Base+0x13e0>
    232c:	bl	c30 <__stack_chk_fail@plt>
    2330:	andeq	r4, r1, ip, lsr #29
    2334:	andeq	r0, r0, r0, asr #1
    2338:	andeq	r4, r1, r8, asr pc
    233c:	andeq	r4, r1, r0, lsl #30
    2340:	strdeq	r4, [r1], -r8
    2344:	andeq	r4, r1, r8, ror #29
    2348:	muleq	r0, r0, r3
    234c:	muleq	r0, r0, r3
    2350:	andeq	r0, r0, r8, asr #1
    2354:	andeq	r3, r0, r8, asr r3
    2358:	andeq	r3, r0, ip, lsr r2
    235c:	andeq	r3, r0, r8, lsr #3
    2360:			; <UNDEFINED> instruction: 0x000031bc
    2364:	andeq	r3, r0, r0, asr #3
    2368:	andeq	r3, r0, r8, asr r1
    236c:	strdeq	r3, [r0], -r8
    2370:	strdeq	r4, [r1], -r0
    2374:	ldr	ip, [pc, #352]	; 24dc <main@@Base+0x1720>
    2378:	ldr	r2, [pc, #352]	; 24e0 <main@@Base+0x1724>
    237c:	add	ip, pc, ip
    2380:	push	{r4, r5, r6, r7, r8, r9, lr}
    2384:	sub	sp, sp, #36	; 0x24
    2388:	ldr	r4, [ip, r2]
    238c:	mov	r5, r0
    2390:	ldrb	r3, [r0]
    2394:	ldr	r2, [r4]
    2398:	cmp	r3, #0
    239c:	str	r2, [sp, #28]
    23a0:	bne	23f4 <main@@Base+0x1638>
    23a4:	ldr	r7, [pc, #312]	; 24e4 <main@@Base+0x1728>
    23a8:	add	r7, pc, r7
    23ac:	ldr	r6, [r7, #24]
    23b0:	cmp	r6, #0
    23b4:	beq	241c <main@@Base+0x1660>
    23b8:	ldr	r3, [pc, #296]	; 24e8 <main@@Base+0x172c>
    23bc:	mov	r1, #1
    23c0:	ldr	r0, [pc, #292]	; 24ec <main@@Base+0x1730>
    23c4:	mov	r2, #33	; 0x21
    23c8:	ldr	r3, [ip, r3]
    23cc:	add	r0, pc, r0
    23d0:	ldr	r3, [r3]
    23d4:	bl	c48 <fwrite@plt>
    23d8:	bl	3e08 <main@@Base+0x304c>
    23dc:	ldr	r2, [sp, #28]
    23e0:	ldr	r3, [r4]
    23e4:	cmp	r2, r3
    23e8:	bne	24d8 <main@@Base+0x171c>
    23ec:	add	sp, sp, #36	; 0x24
    23f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    23f4:	ldr	r0, [pc, #236]	; 24e8 <main@@Base+0x172c>
    23f8:	mov	r1, #1
    23fc:	ldr	r2, [pc, #236]	; 24f0 <main@@Base+0x1734>
    2400:	ldr	r0, [ip, r0]
    2404:	add	r2, pc, r2
    2408:	ldr	r0, [r0]
    240c:	bl	d20 <__fprintf_chk@plt>
    2410:	bl	3e08 <main@@Base+0x304c>
    2414:	bl	1cf0 <main@@Base+0xf34>
    2418:	b	23dc <main@@Base+0x1620>
    241c:	ldr	r0, [pc, #208]	; 24f4 <main@@Base+0x1738>
    2420:	add	r0, pc, r0
    2424:	bl	c54 <puts@plt>
    2428:	ldrb	r1, [r5, #4]
    242c:	ldrb	r2, [r5, #6]
    2430:	mov	r0, #1
    2434:	ldrb	r3, [r5, #5]
    2438:	str	r1, [sp]
    243c:	ldrb	ip, [r5, #3]
    2440:	ldr	r1, [pc, #176]	; 24f8 <main@@Base+0x173c>
    2444:	str	ip, [sp, #4]
    2448:	add	r1, pc, r1
    244c:	ldrb	ip, [r5, #2]
    2450:	str	ip, [sp, #8]
    2454:	ldrb	ip, [r5, #1]
    2458:	str	ip, [sp, #12]
    245c:	bl	d14 <__printf_chk@plt>
    2460:	ldr	r0, [r5, #1]!
    2464:	ldrb	ip, [r7, #28]
    2468:	ldr	r1, [pc, #140]	; 24fc <main@@Base+0x1740>
    246c:	ldrh	r3, [r5, #4]
    2470:	add	r5, sp, #20
    2474:	str	r0, [sp, #20]
    2478:	add	r1, pc, r1
    247c:	ldrb	r9, [sp, #23]
    2480:	mov	r0, #1
    2484:	strh	r3, [r5, #4]
    2488:	ldrb	r8, [sp, #22]
    248c:	ldrb	lr, [sp, #21]
    2490:	ldrb	r2, [sp, #25]
    2494:	ldrb	r3, [sp, #24]
    2498:	str	ip, [sp, #12]
    249c:	str	r9, [sp]
    24a0:	stmib	sp, {r8, lr}
    24a4:	strb	ip, [sp, #20]
    24a8:	bl	d14 <__printf_chk@plt>
    24ac:	ldr	ip, [pc, #76]	; 2500 <main@@Base+0x1744>
    24b0:	mov	r2, r5
    24b4:	ldr	r0, [r7]
    24b8:	movw	r1, #64561	; 0xfc31
    24bc:	add	ip, pc, ip
    24c0:	str	r6, [sp, #4]
    24c4:	mov	r3, #6
    24c8:	str	r6, [sp, #8]
    24cc:	str	ip, [sp]
    24d0:	bl	3508 <main@@Base+0x274c>
    24d4:	b	23dc <main@@Base+0x1620>
    24d8:	bl	c30 <__stack_chk_fail@plt>
    24dc:	muleq	r1, r8, fp
    24e0:	andeq	r0, r0, r0, asr #1
    24e4:	andeq	r4, r1, r8, asr ip
    24e8:	andeq	r0, r0, r8, asr #1
    24ec:	andeq	r3, r0, r0, lsl #3
    24f0:	andeq	r3, r0, r4, lsr #2
    24f4:	andeq	r3, r0, r0, asr r1
    24f8:	andeq	r3, r0, ip, lsr r1
    24fc:	andeq	r3, r0, r0, asr #2
    2500:			; <UNDEFINED> instruction: 0xfffff924
    2504:	ldr	ip, [pc, #624]	; 277c <main@@Base+0x19c0>
    2508:	ldr	r3, [pc, #624]	; 2780 <main@@Base+0x19c4>
    250c:	add	ip, pc, ip
    2510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2514:	sub	sp, sp, #132	; 0x84
    2518:	ldr	r5, [ip, r3]
    251c:	mov	r4, r0
    2520:	ldrb	r6, [r0]
    2524:	ldr	r3, [r5]
    2528:	cmp	r6, #0
    252c:	str	r3, [sp, #124]	; 0x7c
    2530:	bne	2750 <main@@Base+0x1994>
    2534:	ldr	r0, [pc, #584]	; 2784 <main@@Base+0x19c8>
    2538:	ldr	r7, [pc, #584]	; 2788 <main@@Base+0x19cc>
    253c:	add	r0, pc, r0
    2540:	bl	c54 <puts@plt>
    2544:	ldrb	r1, [r4, #4]
    2548:	ldrb	r3, [r4, #5]
    254c:	mov	r0, #1
    2550:	ldrb	r2, [r4, #6]
    2554:	add	r7, pc, r7
    2558:	str	r1, [sp]
    255c:	ldrb	ip, [r4, #3]
    2560:	ldr	r1, [pc, #548]	; 278c <main@@Base+0x19d0>
    2564:	str	ip, [sp, #4]
    2568:	add	r1, pc, r1
    256c:	ldrb	ip, [r4, #2]
    2570:	str	ip, [sp, #8]
    2574:	ldrb	ip, [r4, #1]
    2578:	str	ip, [sp, #12]
    257c:	bl	d14 <__printf_chk@plt>
    2580:	ldr	r1, [pc, #520]	; 2790 <main@@Base+0x19d4>
    2584:	ldrb	r2, [r4, #54]	; 0x36
    2588:	mov	r0, #1
    258c:	add	r1, pc, r1
    2590:	bl	d14 <__printf_chk@plt>
    2594:	ldrb	r1, [r4, #15]
    2598:	ldrb	r3, [r4, #14]
    259c:	mov	r0, #1
    25a0:	ldrb	r2, [r4, #13]
    25a4:	str	r1, [sp]
    25a8:	ldrb	ip, [r4, #16]
    25ac:	ldr	r1, [pc, #480]	; 2794 <main@@Base+0x19d8>
    25b0:	str	ip, [sp, #4]
    25b4:	add	r1, pc, r1
    25b8:	ldrb	ip, [r4, #17]
    25bc:	str	ip, [sp, #8]
    25c0:	ldrb	ip, [r4, #18]
    25c4:	str	ip, [sp, #12]
    25c8:	ldrb	ip, [r4, #19]
    25cc:	str	ip, [sp, #16]
    25d0:	ldrb	ip, [r4, #20]
    25d4:	str	ip, [sp, #20]
    25d8:	bl	d14 <__printf_chk@plt>
    25dc:	ldr	r1, [pc, #436]	; 2798 <main@@Base+0x19dc>
    25e0:	mov	r0, #1
    25e4:	ldrb	r2, [r4, #21]
    25e8:	add	r1, pc, r1
    25ec:	bl	d14 <__printf_chk@plt>
    25f0:	ldrb	r3, [r7, #30]
    25f4:	cmp	r3, #0
    25f8:	bne	2618 <main@@Base+0x185c>
    25fc:	bl	1cf0 <main@@Base+0xf34>
    2600:	ldr	r2, [sp, #124]	; 0x7c
    2604:	ldr	r3, [r5]
    2608:	cmp	r2, r3
    260c:	bne	2778 <main@@Base+0x19bc>
    2610:	add	sp, sp, #132	; 0x84
    2614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2618:	mov	lr, r4
    261c:	mov	r3, r4
    2620:	ldr	r0, [lr, #1]!
    2624:	mov	fp, r4
    2628:	ldr	r9, [r3, #22]!
    262c:	mov	r1, r4
    2630:	ldr	sl, [fp, #7]!
    2634:	add	r2, sp, #56	; 0x38
    2638:	ldrh	lr, [lr, #4]
    263c:	mov	ip, r4
    2640:	str	r0, [sp, #44]	; 0x2c
    2644:	str	sl, [sp, #36]	; 0x24
    2648:	ldr	r0, [r1, #13]!
    264c:	ldr	sl, [r3, #4]
    2650:	str	r9, [sp, #24]
    2654:	ldr	r9, [r3, #12]
    2658:	str	lr, [sp, #32]
    265c:	ldr	lr, [r3, #8]
    2660:	ldr	r1, [r1, #4]
    2664:	str	sl, [sp, #69]	; 0x45
    2668:	ldr	sl, [sp, #24]
    266c:	str	r9, [sp, #77]	; 0x4d
    2670:	add	r9, sp, #44	; 0x2c
    2674:	str	lr, [sp, #28]
    2678:	stmia	r2!, {r0, r1}
    267c:	mov	r2, r9
    2680:	str	sl, [sp, #65]	; 0x41
    2684:	mov	r0, #7
    2688:	ldr	sl, [sp, #28]
    268c:	ldr	r9, [r3, #16]
    2690:	ldr	r8, [ip, #55]!	; 0x37
    2694:	str	sl, [sp, #73]	; 0x49
    2698:	str	r9, [sp, #24]
    269c:	ldr	sl, [sp, #32]
    26a0:	ldr	r9, [r3, #24]
    26a4:	ldrh	r1, [fp, #4]
    26a8:	strh	sl, [sp, #48]	; 0x30
    26ac:	str	r9, [sp, #28]
    26b0:	ldr	sl, [r3, #20]
    26b4:	ldr	r9, [r3, #28]
    26b8:	ldr	r3, [sp, #24]
    26bc:	strh	r1, [sp, #54]	; 0x36
    26c0:	movw	r1, #64559	; 0xfc2f
    26c4:	ldrb	r4, [r4, #21]
    26c8:	str	r3, [sp, #81]	; 0x51
    26cc:	mov	r3, #80	; 0x50
    26d0:	ldr	lr, [ip, #4]
    26d4:	orr	r4, r4, #30
    26d8:	str	sl, [sp, #85]	; 0x55
    26dc:	str	r9, [sp, #93]	; 0x5d
    26e0:	ldr	sl, [sp, #28]
    26e4:	ldr	r9, [sp, #36]	; 0x24
    26e8:	ldrh	fp, [r7, #28]
    26ec:	str	sl, [sp, #89]	; 0x59
    26f0:	str	r9, [sp, #50]	; 0x32
    26f4:	strb	r4, [sp, #64]	; 0x40
    26f8:	ldr	r9, [ip, #8]
    26fc:	ldr	r4, [ip, #12]
    2700:	str	r8, [sp, #98]	; 0x62
    2704:	str	lr, [sp, #102]	; 0x66
    2708:	ldr	r8, [ip, #16]
    270c:	ldr	lr, [ip, #20]
    2710:	ldr	sl, [pc, #132]	; 279c <main@@Base+0x19e0>
    2714:	ldrh	ip, [ip, #24]
    2718:	strb	r0, [sp, #97]	; 0x61
    271c:	add	sl, pc, sl
    2720:	ldr	r0, [r7]
    2724:	str	r6, [sp, #4]
    2728:	str	r6, [sp, #8]
    272c:	str	sl, [sp]
    2730:	strb	fp, [sp, #44]	; 0x2c
    2734:	str	r9, [sp, #106]	; 0x6a
    2738:	str	r4, [sp, #110]	; 0x6e
    273c:	str	r8, [sp, #114]	; 0x72
    2740:	str	lr, [sp, #118]	; 0x76
    2744:	strh	ip, [sp, #122]	; 0x7a
    2748:	bl	3508 <main@@Base+0x274c>
    274c:	b	2600 <main@@Base+0x1844>
    2750:	ldr	r0, [pc, #72]	; 27a0 <main@@Base+0x19e4>
    2754:	mov	r3, r6
    2758:	ldr	r2, [pc, #68]	; 27a4 <main@@Base+0x19e8>
    275c:	mov	r1, #1
    2760:	ldr	r0, [ip, r0]
    2764:	add	r2, pc, r2
    2768:	ldr	r0, [r0]
    276c:	bl	d20 <__fprintf_chk@plt>
    2770:	bl	1cf0 <main@@Base+0xf34>
    2774:	b	2600 <main@@Base+0x1844>
    2778:	bl	c30 <__stack_chk_fail@plt>
    277c:	andeq	r4, r1, r8, lsl #20
    2780:	andeq	r0, r0, r0, asr #1
    2784:	ldrdeq	r3, [r0], -r0
    2788:	andeq	r4, r1, ip, lsr #21
    278c:	strheq	r3, [r0], -r4
    2790:	andeq	r3, r0, r0, asr #1
    2794:	andeq	r3, r0, ip, lsr #1
    2798:	andeq	r3, r0, r8, asr #1
    279c:			; <UNDEFINED> instruction: 0xfffff714
    27a0:	andeq	r0, r0, r8, asr #1
    27a4:	andeq	r2, r0, r8, lsl #29
    27a8:	ldr	ip, [pc, #304]	; 28e0 <main@@Base+0x1b24>
    27ac:	ldr	r2, [pc, #304]	; 28e4 <main@@Base+0x1b28>
    27b0:	add	ip, pc, ip
    27b4:	push	{r4, lr}
    27b8:	sub	sp, sp, #24
    27bc:	ldr	r4, [ip, r2]
    27c0:	ldrb	r3, [r0]
    27c4:	ldr	r2, [r4]
    27c8:	cmp	r3, #0
    27cc:	str	r2, [sp, #20]
    27d0:	bne	286c <main@@Base+0x1ab0>
    27d4:	ldr	r1, [pc, #268]	; 28e8 <main@@Base+0x1b2c>
    27d8:	add	r1, pc, r1
    27dc:	ldrb	r2, [r1, #31]
    27e0:	cmp	r2, #0
    27e4:	bne	28bc <main@@Base+0x1b00>
    27e8:	ldrb	r3, [r1, #32]
    27ec:	cmp	r3, #0
    27f0:	bne	2820 <main@@Base+0x1a64>
    27f4:	ldrb	r3, [r1, #30]
    27f8:	cmp	r3, #0
    27fc:	bne	2820 <main@@Base+0x1a64>
    2800:	ldrb	ip, [r1, #13]
    2804:	cmp	ip, #0
    2808:	bne	28d4 <main@@Base+0x1b18>
    280c:	ldrb	r3, [r1, #33]	; 0x21
    2810:	cmp	r3, #0
    2814:	bne	2890 <main@@Base+0x1ad4>
    2818:	bl	1cf0 <main@@Base+0xf34>
    281c:	b	2854 <main@@Base+0x1a98>
    2820:	ldr	r1, [pc, #196]	; 28ec <main@@Base+0x1b30>
    2824:	mov	ip, #0
    2828:	ldr	lr, [pc, #192]	; 28f0 <main@@Base+0x1b34>
    282c:	mov	r2, ip
    2830:	add	r1, pc, r1
    2834:	str	ip, [sp, #4]
    2838:	add	lr, pc, lr
    283c:	mov	r3, ip
    2840:	ldr	r0, [r1]
    2844:	movw	r1, #64560	; 0xfc30
    2848:	str	ip, [sp, #8]
    284c:	str	lr, [sp]
    2850:	bl	3508 <main@@Base+0x274c>
    2854:	ldr	r2, [sp, #20]
    2858:	ldr	r3, [r4]
    285c:	cmp	r2, r3
    2860:	bne	28dc <main@@Base+0x1b20>
    2864:	add	sp, sp, #24
    2868:	pop	{r4, pc}
    286c:	ldr	r0, [pc, #128]	; 28f4 <main@@Base+0x1b38>
    2870:	mov	r1, #1
    2874:	ldr	r2, [pc, #124]	; 28f8 <main@@Base+0x1b3c>
    2878:	ldr	r0, [ip, r0]
    287c:	add	r2, pc, r2
    2880:	ldr	r0, [r0]
    2884:	bl	d20 <__fprintf_chk@plt>
    2888:	bl	3e08 <main@@Base+0x304c>
    288c:	b	2854 <main@@Base+0x1a98>
    2890:	add	r2, sp, #24
    2894:	ldr	r0, [r1]
    2898:	mov	r3, #1
    289c:	str	ip, [sp]
    28a0:	str	ip, [sp, #4]
    28a4:	movw	r1, #64589	; 0xfc4d
    28a8:	str	ip, [sp, #8]
    28ac:	strb	ip, [r2, #-8]!
    28b0:	bl	3508 <main@@Base+0x274c>
    28b4:	bl	1cf0 <main@@Base+0xf34>
    28b8:	b	2854 <main@@Base+0x1a98>
    28bc:	add	r0, sp, #24
    28c0:	mov	r2, r3
    28c4:	mov	r1, #1
    28c8:	strb	r3, [r0, #-8]!
    28cc:	bl	1ea8 <main@@Base+0x10ec>
    28d0:	b	2854 <main@@Base+0x1a98>
    28d4:	bl	187c <main@@Base+0xac0>
    28d8:	b	2854 <main@@Base+0x1a98>
    28dc:	bl	c30 <__stack_chk_fail@plt>
    28e0:	andeq	r4, r1, r4, ror #14
    28e4:	andeq	r0, r0, r0, asr #1
    28e8:	andeq	r4, r1, r8, lsr #16
    28ec:	ldrdeq	r4, [r1], -r0
    28f0:			; <UNDEFINED> instruction: 0xfffffcc4
    28f4:	andeq	r0, r0, r8, asr #1
    28f8:	andeq	r2, r0, ip, asr #28
    28fc:	ldr	r3, [pc, #860]	; 2c60 <main@@Base+0x1ea4>
    2900:	ldr	r2, [pc, #860]	; 2c64 <main@@Base+0x1ea8>
    2904:	push	{r4, r5, r6, lr}
    2908:	add	r3, pc, r3
    290c:	ldr	r6, [pc, #852]	; 2c68 <main@@Base+0x1eac>
    2910:	sub	sp, sp, #4096	; 0x1000
    2914:	ldr	r5, [r3, r2]
    2918:	sub	sp, sp, #56	; 0x38
    291c:	add	r6, pc, r6
    2920:	mov	r4, r0
    2924:	ldrb	r2, [r6, #31]
    2928:	ldr	r3, [r5]
    292c:	cmp	r2, #0
    2930:	add	r2, sp, #8192	; 0x2000
    2934:	str	r3, [r2, #-4044]	; 0xfffff034
    2938:	beq	2960 <main@@Base+0x1ba4>
    293c:	ldr	r2, [r6, #36]	; 0x24
    2940:	cmp	r2, #0
    2944:	beq	2b44 <main@@Base+0x1d88>
    2948:	ldr	r1, [pc, #796]	; 2c6c <main@@Base+0x1eb0>
    294c:	mov	r0, #1
    2950:	add	r1, pc, r1
    2954:	bl	d14 <__printf_chk@plt>
    2958:	ldr	r0, [r6, #36]	; 0x24
    295c:	bl	2050 <main@@Base+0x1294>
    2960:	ldr	r3, [pc, #776]	; 2c70 <main@@Base+0x1eb4>
    2964:	add	r3, pc, r3
    2968:	ldrb	ip, [r3, #12]
    296c:	cmp	ip, #0
    2970:	bne	2af4 <main@@Base+0x1d38>
    2974:	ldrb	r2, [r3, #30]
    2978:	cmp	r2, #0
    297c:	bne	2aac <main@@Base+0x1cf0>
    2980:	ldr	r0, [pc, #748]	; 2c74 <main@@Base+0x1eb8>
    2984:	add	r0, pc, r0
    2988:	bl	c54 <puts@plt>
    298c:	ldr	r1, [pc, #740]	; 2c78 <main@@Base+0x1ebc>
    2990:	mov	r0, #1
    2994:	ldrb	r2, [r4, #1]
    2998:	add	r1, pc, r1
    299c:	bl	d14 <__printf_chk@plt>
    29a0:	ldrb	r3, [r4, #2]
    29a4:	cmp	r3, #6
    29a8:	beq	2c2c <main@@Base+0x1e70>
    29ac:	ldr	r1, [pc, #712]	; 2c7c <main@@Base+0x1ec0>
    29b0:	add	r1, pc, r1
    29b4:	b	29c4 <main@@Base+0x1c08>
    29b8:	ldrb	ip, [r1, #8]!
    29bc:	cmp	ip, r3
    29c0:	beq	29d8 <main@@Base+0x1c1c>
    29c4:	ldr	r2, [r1, #12]
    29c8:	cmp	r2, #0
    29cc:	bne	29b8 <main@@Base+0x1bfc>
    29d0:	ldr	r2, [pc, #680]	; 2c80 <main@@Base+0x1ec4>
    29d4:	add	r2, pc, r2
    29d8:	ldr	r1, [pc, #676]	; 2c84 <main@@Base+0x1ec8>
    29dc:	mov	r0, #1
    29e0:	add	r1, pc, r1
    29e4:	bl	d14 <__printf_chk@plt>
    29e8:	ldrb	r2, [r4, #3]
    29ec:	ldr	r1, [pc, #660]	; 2c88 <main@@Base+0x1ecc>
    29f0:	mov	r0, #1
    29f4:	and	r3, r2, #15
    29f8:	add	r1, pc, r1
    29fc:	lsr	r2, r2, #4
    2a00:	bl	d14 <__printf_chk@plt>
    2a04:	ldrb	r3, [r4, #4]
    2a08:	cmp	r3, #1
    2a0c:	beq	2c38 <main@@Base+0x1e7c>
    2a10:	cmp	r3, #6
    2a14:	beq	2c44 <main@@Base+0x1e88>
    2a18:	cmp	r3, #35	; 0x23
    2a1c:	beq	2c50 <main@@Base+0x1e94>
    2a20:	ldr	r2, [pc, #612]	; 2c8c <main@@Base+0x1ed0>
    2a24:	add	r2, pc, r2
    2a28:	ldr	r1, [pc, #608]	; 2c90 <main@@Base+0x1ed4>
    2a2c:	mov	r0, #1
    2a30:	add	r1, pc, r1
    2a34:	bl	d14 <__printf_chk@plt>
    2a38:	ldrb	r2, [r4, #5]
    2a3c:	ldr	r1, [pc, #592]	; 2c94 <main@@Base+0x1ed8>
    2a40:	mov	r0, #1
    2a44:	and	r3, r2, #15
    2a48:	add	r1, pc, r1
    2a4c:	lsr	r2, r2, #4
    2a50:	bl	d14 <__printf_chk@plt>
    2a54:	ldrb	ip, [r4, #8]
    2a58:	ldr	r1, [pc, #568]	; 2c98 <main@@Base+0x1edc>
    2a5c:	mov	r0, #1
    2a60:	ldrb	r3, [r4, #7]
    2a64:	add	ip, ip, #2000	; 0x7d0
    2a68:	ldrb	r2, [r4, #6]
    2a6c:	add	r1, pc, r1
    2a70:	str	ip, [sp]
    2a74:	bl	d14 <__printf_chk@plt>
    2a78:	ldr	r1, [pc, #540]	; 2c9c <main@@Base+0x1ee0>
    2a7c:	mov	r0, #1
    2a80:	ldrb	r2, [r4, #9]
    2a84:	add	r1, pc, r1
    2a88:	bl	d14 <__printf_chk@plt>
    2a8c:	ldrb	r3, [r4, #2]
    2a90:	cmp	r3, #11
    2a94:	bne	2aa4 <main@@Base+0x1ce8>
    2a98:	ldrb	r3, [r4, #4]
    2a9c:	cmp	r3, #6
    2aa0:	beq	2bf4 <main@@Base+0x1e38>
    2aa4:	bl	3e08 <main@@Base+0x304c>
    2aa8:	b	2ad4 <main@@Base+0x1d18>
    2aac:	ldr	lr, [pc, #492]	; 2ca0 <main@@Base+0x1ee4>
    2ab0:	mov	r2, ip
    2ab4:	ldr	r0, [r3]
    2ab8:	movw	r1, #4105	; 0x1009
    2abc:	add	lr, pc, lr
    2ac0:	mov	r3, ip
    2ac4:	str	ip, [sp, #4]
    2ac8:	str	ip, [sp, #8]
    2acc:	str	lr, [sp]
    2ad0:	bl	3508 <main@@Base+0x274c>
    2ad4:	add	r3, sp, #8192	; 0x2000
    2ad8:	ldr	r2, [r3, #-4044]	; 0xfffff034
    2adc:	ldr	r3, [r5]
    2ae0:	cmp	r2, r3
    2ae4:	bne	2c5c <main@@Base+0x1ea0>
    2ae8:	add	sp, sp, #4096	; 0x1000
    2aec:	add	sp, sp, #56	; 0x38
    2af0:	pop	{r4, r5, r6, pc}
    2af4:	ldr	r0, [r3]
    2af8:	mov	ip, #0
    2afc:	str	ip, [sp, #4]
    2b00:	add	r4, sp, #48	; 0x30
    2b04:	str	ip, [sp, #8]
    2b08:	movw	lr, #61432	; 0xeff8
    2b0c:	strb	ip, [sp, #49]	; 0x31
    2b10:	add	ip, sp, #4096	; 0x1000
    2b14:	movt	lr, #65535	; 0xffff
    2b18:	add	ip, ip, #56	; 0x38
    2b1c:	ldr	r3, [pc, #384]	; 2ca4 <main@@Base+0x1ee8>
    2b20:	mov	r6, #1
    2b24:	mov	r2, r4
    2b28:	movw	r1, #64529	; 0xfc11
    2b2c:	add	r3, pc, r3
    2b30:	str	r3, [sp]
    2b34:	mov	r3, #2
    2b38:	strb	r6, [ip, lr]
    2b3c:	bl	3508 <main@@Base+0x274c>
    2b40:	b	2ad4 <main@@Base+0x1d18>
    2b44:	ldr	r0, [pc, #348]	; 2ca8 <main@@Base+0x1eec>
    2b48:	add	r6, sp, #52	; 0x34
    2b4c:	ldr	r3, [pc, #344]	; 2cac <main@@Base+0x1ef0>
    2b50:	mov	r1, #4096	; 0x1000
    2b54:	ldr	r2, [pc, #340]	; 2cb0 <main@@Base+0x1ef4>
    2b58:	add	r0, pc, r0
    2b5c:	add	r3, pc, r3
    2b60:	str	r0, [sp]
    2b64:	str	r3, [sp, #4]
    2b68:	add	r2, pc, r2
    2b6c:	str	r2, [sp, #8]
    2b70:	mov	r3, r1
    2b74:	ldrb	ip, [r4, #1]
    2b78:	mov	r0, r6
    2b7c:	mov	r2, #1
    2b80:	str	ip, [sp, #12]
    2b84:	ldrb	ip, [r4, #2]
    2b88:	str	ip, [sp, #16]
    2b8c:	ldrb	ip, [r4, #3]
    2b90:	str	ip, [sp, #20]
    2b94:	ldrb	ip, [r4, #4]
    2b98:	str	ip, [sp, #24]
    2b9c:	ldrb	ip, [r4, #5]
    2ba0:	str	ip, [sp, #28]
    2ba4:	ldrb	ip, [r4, #6]
    2ba8:	str	ip, [sp, #32]
    2bac:	ldrb	ip, [r4, #7]
    2bb0:	str	ip, [sp, #36]	; 0x24
    2bb4:	ldrb	ip, [r4, #8]
    2bb8:	str	ip, [sp, #40]	; 0x28
    2bbc:	bl	db0 <__snprintf_chk@plt>
    2bc0:	ldr	r1, [pc, #236]	; 2cb4 <main@@Base+0x1ef8>
    2bc4:	mov	r2, r6
    2bc8:	mov	r0, #1
    2bcc:	add	r1, pc, r1
    2bd0:	bl	d14 <__printf_chk@plt>
    2bd4:	ldr	r1, [pc, #220]	; 2cb8 <main@@Base+0x1efc>
    2bd8:	ldrb	r2, [r4, #9]
    2bdc:	mov	r0, #1
    2be0:	add	r1, pc, r1
    2be4:	bl	d14 <__printf_chk@plt>
    2be8:	mov	r0, r6
    2bec:	bl	2050 <main@@Base+0x1294>
    2bf0:	b	2960 <main@@Base+0x1ba4>
    2bf4:	ldr	r1, [pc, #192]	; 2cbc <main@@Base+0x1f00>
    2bf8:	mov	ip, #0
    2bfc:	ldr	lr, [pc, #188]	; 2cc0 <main@@Base+0x1f04>
    2c00:	mov	r2, ip
    2c04:	add	r1, pc, r1
    2c08:	str	ip, [sp, #4]
    2c0c:	add	lr, pc, lr
    2c10:	mov	r3, ip
    2c14:	ldr	r0, [r1]
    2c18:	movw	r1, #64525	; 0xfc0d
    2c1c:	str	ip, [sp, #8]
    2c20:	str	lr, [sp]
    2c24:	bl	3508 <main@@Base+0x274c>
    2c28:	b	2ad4 <main@@Base+0x1d18>
    2c2c:	ldr	r2, [pc, #144]	; 2cc4 <main@@Base+0x1f08>
    2c30:	add	r2, pc, r2
    2c34:	b	29d8 <main@@Base+0x1c1c>
    2c38:	ldr	r2, [pc, #136]	; 2cc8 <main@@Base+0x1f0c>
    2c3c:	add	r2, pc, r2
    2c40:	b	2a28 <main@@Base+0x1c6c>
    2c44:	ldr	r2, [pc, #128]	; 2ccc <main@@Base+0x1f10>
    2c48:	add	r2, pc, r2
    2c4c:	b	2a28 <main@@Base+0x1c6c>
    2c50:	ldr	r2, [pc, #120]	; 2cd0 <main@@Base+0x1f14>
    2c54:	add	r2, pc, r2
    2c58:	b	2a28 <main@@Base+0x1c6c>
    2c5c:	bl	c30 <__stack_chk_fail@plt>
    2c60:	andeq	r4, r1, ip, lsl #12
    2c64:	andeq	r0, r0, r0, asr #1
    2c68:	andeq	r4, r1, r4, ror #13
    2c6c:	strdeq	r2, [r0], -ip
    2c70:	muleq	r1, ip, r6
    2c74:	andeq	r2, r0, r4, lsr lr
    2c78:	andeq	r2, r0, r0, asr #28
    2c7c:	andeq	r4, r1, r8, asr #6
    2c80:	andeq	r2, r0, r8, asr #26
    2c84:	andeq	r2, r0, ip, lsl #29
    2c88:	muleq	r0, r4, lr
    2c8c:	strdeq	r2, [r0], -r8
    2c90:	andeq	r2, r0, r0, asr #27
    2c94:	andeq	r2, r0, r8, asr #27
    2c98:	andeq	r2, r0, r0, asr #27
    2c9c:	andeq	r2, r0, ip, asr #27
    2ca0:			; <UNDEFINED> instruction: 0xfffff8b0
    2ca4:			; <UNDEFINED> instruction: 0xfffffc74
    2ca8:	andeq	r2, r0, r4, lsl #24
    2cac:	andeq	r2, r0, r0, lsr ip
    2cb0:	andeq	r2, r0, r4, lsr ip
    2cb4:	andeq	r2, r0, r0, lsl #23
    2cb8:	andeq	r2, r0, r4, asr #23
    2cbc:	strdeq	r4, [r1], -ip
    2cc0:			; <UNDEFINED> instruction: 0xffffed94
    2cc4:	andeq	r2, r0, ip, lsl #22
    2cc8:	andeq	r2, r0, ip, ror #21
    2ccc:	andeq	r2, r0, r4, asr #21
    2cd0:	andeq	r2, r0, r0, lsr #21
    2cd4:	ldr	ip, [pc, #244]	; 2dd0 <main@@Base+0x2014>
    2cd8:	ldr	r3, [pc, #244]	; 2dd4 <main@@Base+0x2018>
    2cdc:	add	ip, pc, ip
    2ce0:	push	{r4, lr}
    2ce4:	sub	sp, sp, #32
    2ce8:	ldr	r4, [ip, r3]
    2cec:	ldrb	lr, [r0]
    2cf0:	ldr	r3, [r4]
    2cf4:	cmp	lr, #0
    2cf8:	str	r3, [sp, #28]
    2cfc:	bne	2d60 <main@@Base+0x1fa4>
    2d00:	cmp	r1, #10
    2d04:	bne	2d38 <main@@Base+0x1f7c>
    2d08:	ldr	r3, [pc, #200]	; 2dd8 <main@@Base+0x201c>
    2d0c:	add	r3, pc, r3
    2d10:	ldrb	r2, [r3, #40]	; 0x28
    2d14:	cmp	r2, #0
    2d18:	bne	2d88 <main@@Base+0x1fcc>
    2d1c:	bl	28fc <main@@Base+0x1b40>
    2d20:	ldr	r2, [sp, #28]
    2d24:	ldr	r3, [r4]
    2d28:	cmp	r2, r3
    2d2c:	bne	2dcc <main@@Base+0x2010>
    2d30:	add	sp, sp, #32
    2d34:	pop	{r4, pc}
    2d38:	ldr	r3, [pc, #156]	; 2ddc <main@@Base+0x2020>
    2d3c:	mov	r1, #1
    2d40:	ldr	r0, [pc, #152]	; 2de0 <main@@Base+0x2024>
    2d44:	mov	r2, #40	; 0x28
    2d48:	ldr	r3, [ip, r3]
    2d4c:	add	r0, pc, r0
    2d50:	ldr	r3, [r3]
    2d54:	bl	c48 <fwrite@plt>
    2d58:	bl	3e08 <main@@Base+0x304c>
    2d5c:	b	2d20 <main@@Base+0x1f64>
    2d60:	ldr	r0, [pc, #116]	; 2ddc <main@@Base+0x2020>
    2d64:	mov	r3, lr
    2d68:	ldr	r2, [pc, #116]	; 2de4 <main@@Base+0x2028>
    2d6c:	mov	r1, #1
    2d70:	ldr	r0, [ip, r0]
    2d74:	add	r2, pc, r2
    2d78:	ldr	r0, [r0]
    2d7c:	bl	d20 <__fprintf_chk@plt>
    2d80:	bl	3e08 <main@@Base+0x304c>
    2d84:	b	2d20 <main@@Base+0x1f64>
    2d88:	ldr	ip, [pc, #88]	; 2de8 <main@@Base+0x202c>
    2d8c:	movw	r1, #64513	; 0xfc01
    2d90:	ldr	r0, [r3]
    2d94:	add	r2, sp, #20
    2d98:	add	ip, pc, ip
    2d9c:	str	lr, [sp, #4]
    2da0:	str	ip, [sp]
    2da4:	mov	r3, #8
    2da8:	str	lr, [sp, #8]
    2dac:	mov	ip, #1
    2db0:	strb	lr, [sp, #21]
    2db4:	strb	lr, [sp, #23]
    2db8:	str	lr, [sp, #24]
    2dbc:	strb	ip, [sp, #20]
    2dc0:	strb	ip, [sp, #22]
    2dc4:	bl	3508 <main@@Base+0x274c>
    2dc8:	b	2d20 <main@@Base+0x1f64>
    2dcc:	bl	c30 <__stack_chk_fail@plt>
    2dd0:	andeq	r4, r1, r8, lsr r2
    2dd4:	andeq	r0, r0, r0, asr #1
    2dd8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    2ddc:	andeq	r0, r0, r8, asr #1
    2de0:	andeq	r2, r0, r0, lsl #23
    2de4:	andeq	r2, r0, r4, lsr fp
    2de8:			; <UNDEFINED> instruction: 0xffffeea4
    2dec:	ldrh	r0, [r0, #4]
    2df0:	uxth	r1, r1
    2df4:	subs	r3, r1, r0
    2df8:	rsbs	r0, r3, #0
    2dfc:	adcs	r0, r0, r3
    2e00:	bx	lr
    2e04:	ldr	r0, [r0]
    2e08:	subs	r3, r1, r0
    2e0c:	rsbs	r0, r3, #0
    2e10:	adcs	r0, r0, r3
    2e14:	bx	lr
    2e18:	ldr	r0, [r0]
    2e1c:	subs	r3, r1, r0
    2e20:	rsbs	r0, r3, #0
    2e24:	adcs	r0, r0, r3
    2e28:	bx	lr
    2e2c:	ldr	r3, [r0, #20]
    2e30:	push	{r4, lr}
    2e34:	cmp	r3, #0
    2e38:	mov	r4, r0
    2e3c:	beq	2e48 <main@@Base+0x208c>
    2e40:	ldr	r0, [r0, #24]
    2e44:	blx	r3
    2e48:	ldr	r0, [r4, #8]
    2e4c:	bl	c0c <free@plt>
    2e50:	mov	r0, r4
    2e54:	pop	{r4, lr}
    2e58:	b	c0c <free@plt>
    2e5c:	ldr	r3, [r0, #12]
    2e60:	push	{r4, lr}
    2e64:	cmp	r3, #0
    2e68:	mov	r4, r0
    2e6c:	beq	2e78 <main@@Base+0x20bc>
    2e70:	ldr	r0, [r0, #16]
    2e74:	blx	r3
    2e78:	mov	r0, r4
    2e7c:	pop	{r4, lr}
    2e80:	b	c0c <free@plt>
    2e84:	push	{r3, lr}
    2e88:	mov	r3, r0
    2e8c:	ldrb	r2, [r1]
    2e90:	ldrb	r0, [r0, #4]
    2e94:	cmp	r0, r2
    2e98:	popne	{r3, pc}
    2e9c:	add	r0, r1, #2
    2ea0:	ldr	ip, [r3, #8]
    2ea4:	ldr	r2, [r3, #16]
    2ea8:	ldrb	r1, [r1, #1]
    2eac:	blx	ip
    2eb0:	pop	{r3, pc}
    2eb4:	ldrb	r3, [r0, #9]
    2eb8:	push	{r4, lr}
    2ebc:	cmp	r3, #0
    2ec0:	mov	r4, r0
    2ec4:	popne	{r4, pc}
    2ec8:	ldrb	r3, [r0, #10]
    2ecc:	cmp	r3, #0
    2ed0:	popeq	{r4, pc}
    2ed4:	ldr	r0, [r0, #20]
    2ed8:	bl	4b60 <main@@Base+0x3da4>
    2edc:	subs	r3, r0, #0
    2ee0:	popne	{r4, pc}
    2ee4:	ldr	r1, [pc, #28]	; 2f08 <main@@Base+0x214c>
    2ee8:	mov	r2, r4
    2eec:	ldr	r0, [r4, #4]
    2ef0:	add	r1, pc, r1
    2ef4:	bl	3b58 <main@@Base+0x2d9c>
    2ef8:	cmp	r0, #0
    2efc:	movne	r3, #1
    2f00:	strbne	r3, [r4, #9]
    2f04:	pop	{r4, pc}
    2f08:	ldrdeq	r0, [r0], -r8
    2f0c:	cmp	r1, #0
    2f10:	push	{r3, r4, r5, r6, r7, lr}
    2f14:	mov	r4, r0
    2f18:	mov	r6, r2
    2f1c:	mov	r7, r3
    2f20:	beq	2f64 <main@@Base+0x21a8>
    2f24:	mov	r2, r1
    2f28:	ldr	r1, [pc, #64]	; 2f70 <main@@Base+0x21b4>
    2f2c:	ldr	r0, [r0, #24]
    2f30:	add	r1, pc, r1
    2f34:	bl	49c0 <main@@Base+0x3c04>
    2f38:	subs	r5, r0, #0
    2f3c:	popeq	{r3, r4, r5, r6, r7, pc}
    2f40:	ldr	r3, [r5, #16]
    2f44:	cmp	r3, #0
    2f48:	beq	2f5c <main@@Base+0x21a0>
    2f4c:	mov	r0, r6
    2f50:	uxtb	r1, r7
    2f54:	ldr	r2, [r5, #24]
    2f58:	blx	r3
    2f5c:	mov	r0, r5
    2f60:	bl	2e2c <main@@Base+0x2070>
    2f64:	mov	r0, r4
    2f68:	pop	{r3, r4, r5, r6, r7, lr}
    2f6c:	b	2eb4 <main@@Base+0x20f8>
    2f70:			; <UNDEFINED> instruction: 0xfffffeb4
    2f74:	ldr	r3, [pc, #328]	; 30c4 <main@@Base+0x2308>
    2f78:	ldr	r2, [pc, #328]	; 30c8 <main@@Base+0x230c>
    2f7c:	add	r3, pc, r3
    2f80:	ldr	r0, [r1, #4]
    2f84:	push	{r4, r5, r6, lr}
    2f88:	sub	sp, sp, #520	; 0x208
    2f8c:	ldr	r4, [r3, r2]
    2f90:	mov	r5, r1
    2f94:	ldr	r3, [r4]
    2f98:	str	r3, [sp, #516]	; 0x204
    2f9c:	bl	3aac <main@@Base+0x2cf0>
    2fa0:	cmp	r0, #0
    2fa4:	blt	2fb4 <main@@Base+0x21f8>
    2fa8:	ldrb	r3, [r5, #8]
    2fac:	cmp	r3, #0
    2fb0:	beq	2fd0 <main@@Base+0x2214>
    2fb4:	mov	r0, #0
    2fb8:	ldr	r2, [sp, #516]	; 0x204
    2fbc:	ldr	r3, [r4]
    2fc0:	cmp	r2, r3
    2fc4:	bne	30c0 <main@@Base+0x2304>
    2fc8:	add	sp, sp, #520	; 0x208
    2fcc:	pop	{r4, r5, r6, pc}
    2fd0:	add	r6, sp, #4
    2fd4:	mov	r2, #512	; 0x200
    2fd8:	mov	r1, r6
    2fdc:	bl	bf4 <read@plt>
    2fe0:	cmp	r0, #0
    2fe4:	blt	2fb4 <main@@Base+0x21f8>
    2fe8:	beq	2ff8 <main@@Base+0x223c>
    2fec:	ldrb	r3, [sp, #4]
    2ff0:	cmp	r3, #4
    2ff4:	beq	3000 <main@@Base+0x2244>
    2ff8:	mov	r0, #1
    2ffc:	b	2fb8 <main@@Base+0x21fc>
    3000:	sub	r3, r0, #1
    3004:	cmp	r3, #1
    3008:	bls	2ff8 <main@@Base+0x223c>
    300c:	ldrb	r2, [sp, #6]
    3010:	sub	r3, r0, #3
    3014:	cmp	r3, r2
    3018:	bne	2ff8 <main@@Base+0x223c>
    301c:	ldrb	r2, [sp, #5]
    3020:	cmp	r2, #14
    3024:	beq	3068 <main@@Base+0x22ac>
    3028:	cmp	r2, #15
    302c:	bne	30a4 <main@@Base+0x22e8>
    3030:	cmp	r3, #3
    3034:	bls	2ff8 <main@@Base+0x223c>
    3038:	ldrb	ip, [sp, #8]
    303c:	add	lr, sp, #520	; 0x208
    3040:	movw	r1, #65025	; 0xfe01
    3044:	movt	r1, #65535	; 0xffff
    3048:	mov	r0, r5
    304c:	add	r2, r6, #3
    3050:	mov	r3, #1
    3054:	ldrh	r1, [lr, r1]
    3058:	strb	ip, [r5, #10]
    305c:	bl	2f0c <main@@Base+0x2150>
    3060:	mov	r0, #1
    3064:	b	2fb8 <main@@Base+0x21fc>
    3068:	cmp	r3, #2
    306c:	bls	2ff8 <main@@Base+0x223c>
    3070:	add	lr, sp, #520	; 0x208
    3074:	mov	r1, #65024	; 0xfe00
    3078:	movt	r1, #65535	; 0xffff
    307c:	ldrb	ip, [sp, #7]
    3080:	sub	r3, r0, #6
    3084:	add	r2, r6, #6
    3088:	ldrh	r1, [lr, r1]
    308c:	mov	r0, r5
    3090:	strb	ip, [r5, #10]
    3094:	uxth	r1, r1
    3098:	bl	2f0c <main@@Base+0x2150>
    309c:	mov	r0, #1
    30a0:	b	2fb8 <main@@Base+0x21fc>
    30a4:	ldr	r1, [pc, #32]	; 30cc <main@@Base+0x2310>
    30a8:	add	r2, r6, #1
    30ac:	ldr	r0, [r5, #28]
    30b0:	add	r1, pc, r1
    30b4:	bl	483c <main@@Base+0x3a80>
    30b8:	mov	r0, #1
    30bc:	b	2fb8 <main@@Base+0x21fc>
    30c0:	bl	c30 <__stack_chk_fail@plt>
    30c4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
    30c8:	andeq	r0, r0, r0, asr #1
    30cc:			; <UNDEFINED> instruction: 0xfffffdcc
    30d0:	ldr	r3, [pc, #212]	; 31ac <main@@Base+0x23f0>
    30d4:	ldr	r2, [pc, #212]	; 31b0 <main@@Base+0x23f4>
    30d8:	add	r3, pc, r3
    30dc:	ldr	r0, [r1, #20]
    30e0:	push	{r4, r5, r6, lr}
    30e4:	sub	sp, sp, #40	; 0x28
    30e8:	ldr	r6, [r3, r2]
    30ec:	mov	r4, r1
    30f0:	ldr	r3, [r6]
    30f4:	str	r3, [sp, #36]	; 0x24
    30f8:	bl	47c0 <main@@Base+0x3a04>
    30fc:	subs	r5, r0, #0
    3100:	beq	3134 <main@@Base+0x2378>
    3104:	ldrb	r2, [r4, #10]
    3108:	mov	r3, #1
    310c:	ldrh	ip, [r5, #4]
    3110:	cmp	r2, #0
    3114:	strb	r3, [sp, #7]
    3118:	ldr	lr, [r5, #8]
    311c:	ldrb	r1, [r5, #12]
    3120:	ldr	r0, [r4, #4]
    3124:	bne	3158 <main@@Base+0x239c>
    3128:	mov	r1, r5
    312c:	ldr	r0, [r4, #24]
    3130:	bl	46a8 <main@@Base+0x38ec>
    3134:	ldr	r1, [sp, #36]	; 0x24
    3138:	mov	r3, #0
    313c:	ldr	r2, [r6]
    3140:	mov	r0, r3
    3144:	strb	r3, [r4, #9]
    3148:	cmp	r1, r2
    314c:	bne	31a8 <main@@Base+0x23ec>
    3150:	add	sp, sp, #40	; 0x28
    3154:	pop	{r4, r5, r6, pc}
    3158:	cmp	r1, #0
    315c:	mov	r2, #3
    3160:	strne	r1, [sp, #32]
    3164:	strb	r1, [sp, #10]
    3168:	add	r1, sp, #12
    316c:	str	r2, [sp, #24]
    3170:	moveq	r2, #2
    3174:	str	r3, [sp, #16]
    3178:	add	r3, sp, #7
    317c:	strne	lr, [sp, #28]
    3180:	str	r3, [sp, #12]
    3184:	add	r3, sp, #8
    3188:	strh	ip, [sp, #8]
    318c:	str	r3, [sp, #20]
    3190:	bl	3c70 <main@@Base+0x2eb4>
    3194:	cmp	r0, #0
    3198:	ldrbge	r3, [r4, #10]
    319c:	subge	r3, r3, #1
    31a0:	strbge	r3, [r4, #10]
    31a4:	b	3128 <main@@Base+0x236c>
    31a8:	bl	c30 <__stack_chk_fail@plt>
    31ac:	andeq	r3, r1, ip, lsr lr
    31b0:	andeq	r0, r0, r0, asr #1
    31b4:	ldr	r3, [pc, #148]	; 3250 <main@@Base+0x2494>
    31b8:	mov	r2, #1
    31bc:	ldr	ip, [pc, #144]	; 3254 <main@@Base+0x2498>
    31c0:	add	r3, pc, r3
    31c4:	push	{r4, r5, r6, r7, lr}
    31c8:	sub	sp, sp, #20
    31cc:	ldr	r4, [r3, ip]
    31d0:	mov	r5, r1
    31d4:	mov	r6, r0
    31d8:	movw	r1, #2051	; 0x803
    31dc:	mov	r0, #31
    31e0:	movt	r1, #8
    31e4:	ldr	r3, [r4]
    31e8:	str	r3, [sp, #12]
    31ec:	bl	d68 <socket@plt>
    31f0:	subs	r7, r0, #0
    31f4:	blt	3238 <main@@Base+0x247c>
    31f8:	add	r1, sp, #4
    31fc:	mov	r2, #6
    3200:	mov	r3, #31
    3204:	strh	r6, [sp, #6]
    3208:	strh	r5, [sp, #8]
    320c:	strh	r3, [sp, #4]
    3210:	bl	cf0 <bind@plt>
    3214:	cmp	r0, #0
    3218:	mov	r0, r7
    321c:	blt	3240 <main@@Base+0x2484>
    3220:	ldr	r2, [sp, #12]
    3224:	ldr	r3, [r4]
    3228:	cmp	r2, r3
    322c:	bne	324c <main@@Base+0x2490>
    3230:	add	sp, sp, #20
    3234:	pop	{r4, r5, r6, r7, pc}
    3238:	mvn	r0, #0
    323c:	b	3220 <main@@Base+0x2464>
    3240:	bl	da4 <close@plt>
    3244:	mvn	r0, #0
    3248:	b	3220 <main@@Base+0x2464>
    324c:	bl	c30 <__stack_chk_fail@plt>
    3250:	andeq	r3, r1, r4, asr sp
    3254:	andeq	r0, r0, r0, asr #1
    3258:	cmp	r0, #0
    325c:	bxeq	lr
    3260:	dmb	sy
    3264:	ldrex	r2, [r0]
    3268:	add	r2, r2, #1
    326c:	strex	r3, r2, [r0]
    3270:	cmp	r3, #0
    3274:	bne	3264 <main@@Base+0x24a8>
    3278:	dmb	sy
    327c:	bx	lr
    3280:	push	{r3, r4, r5, lr}
    3284:	subs	r5, r0, #0
    3288:	blt	334c <main@@Base+0x2590>
    328c:	mov	r0, #32
    3290:	bl	4b80 <main@@Base+0x3dc4>
    3294:	mov	r1, #0
    3298:	mov	r2, #32
    329c:	mov	r4, r0
    32a0:	bl	cfc <memset@plt>
    32a4:	mov	r0, r5
    32a8:	bl	39d4 <main@@Base+0x2c18>
    32ac:	cmp	r0, #0
    32b0:	str	r0, [r4, #4]
    32b4:	beq	3344 <main@@Base+0x2588>
    32b8:	mov	r2, #1
    32bc:	mov	r5, #0
    32c0:	strb	r2, [r4, #8]
    32c4:	strb	r2, [r4, #10]
    32c8:	str	r2, [r4, #12]
    32cc:	str	r2, [r4, #16]
    32d0:	strb	r5, [r4, #9]
    32d4:	bl	4668 <main@@Base+0x38ac>
    32d8:	str	r0, [r4, #20]
    32dc:	bl	4668 <main@@Base+0x38ac>
    32e0:	str	r0, [r4, #24]
    32e4:	bl	4668 <main@@Base+0x38ac>
    32e8:	ldr	r1, [pc, #100]	; 3354 <main@@Base+0x2598>
    32ec:	mov	r3, r5
    32f0:	mov	r2, r4
    32f4:	add	r1, pc, r1
    32f8:	str	r0, [r4, #28]
    32fc:	ldr	r0, [r4, #4]
    3300:	bl	3acc <main@@Base+0x2d10>
    3304:	subs	r5, r0, #0
    3308:	beq	3318 <main@@Base+0x255c>
    330c:	mov	r0, r4
    3310:	pop	{r3, r4, r5, lr}
    3314:	b	3258 <main@@Base+0x249c>
    3318:	ldr	r0, [r4, #28]
    331c:	mov	r1, r5
    3320:	bl	4b20 <main@@Base+0x3d64>
    3324:	ldr	r0, [r4, #24]
    3328:	mov	r1, r5
    332c:	bl	4b20 <main@@Base+0x3d64>
    3330:	ldr	r0, [r4, #20]
    3334:	mov	r1, r5
    3338:	bl	4b20 <main@@Base+0x3d64>
    333c:	ldr	r0, [r4, #4]
    3340:	bl	3a7c <main@@Base+0x2cc0>
    3344:	mov	r0, r4
    3348:	bl	c0c <free@plt>
    334c:	mov	r0, #0
    3350:	pop	{r3, r4, r5, pc}
    3354:			; <UNDEFINED> instruction: 0xfffffc78
    3358:	b	3280 <main@@Base+0x24c4>
    335c:	push	{r3, r4, r5, lr}
    3360:	subs	r4, r0, #0
    3364:	popeq	{r3, r4, r5, pc}
    3368:	dmb	sy
    336c:	ldrex	r3, [r4]
    3370:	sub	r3, r3, #1
    3374:	strex	r2, r3, [r4]
    3378:	cmp	r2, #0
    337c:	bne	336c <main@@Base+0x25b0>
    3380:	cmp	r3, #0
    3384:	dmb	sy
    3388:	popne	{r3, r4, r5, pc}
    338c:	ldr	r5, [pc, #60]	; 33d0 <main@@Base+0x2614>
    3390:	ldr	r1, [pc, #60]	; 33d4 <main@@Base+0x2618>
    3394:	add	r5, pc, r5
    3398:	ldr	r0, [r4, #28]
    339c:	add	r1, pc, r1
    33a0:	bl	4b20 <main@@Base+0x3d64>
    33a4:	mov	r1, r5
    33a8:	ldr	r0, [r4, #20]
    33ac:	bl	4b20 <main@@Base+0x3d64>
    33b0:	mov	r1, r5
    33b4:	ldr	r0, [r4, #24]
    33b8:	bl	4b20 <main@@Base+0x3d64>
    33bc:	ldr	r0, [r4, #4]
    33c0:	bl	3a7c <main@@Base+0x2cc0>
    33c4:	mov	r0, r4
    33c8:	pop	{r3, r4, r5, lr}
    33cc:	b	c0c <free@plt>
    33d0:			; <UNDEFINED> instruction: 0xfffffa90
    33d4:			; <UNDEFINED> instruction: 0xfffffab8
    33d8:	subs	r3, r0, #0
    33dc:	bxeq	lr
    33e0:	ldr	r0, [r3, #4]
    33e4:	b	3abc <main@@Base+0x2d00>
    33e8:	push	{r3, r4, r5, lr}
    33ec:	mov	r1, #1
    33f0:	bl	31b4 <main@@Base+0x23f8>
    33f4:	subs	r5, r0, #0
    33f8:	blt	3420 <main@@Base+0x2664>
    33fc:	bl	3280 <main@@Base+0x24c4>
    3400:	subs	r4, r0, #0
    3404:	beq	3428 <main@@Base+0x266c>
    3408:	mov	r3, #0
    340c:	mov	r1, #1
    3410:	strb	r3, [r4, #8]
    3414:	bl	33d8 <main@@Base+0x261c>
    3418:	mov	r0, r4
    341c:	pop	{r3, r4, r5, pc}
    3420:	mov	r0, #0
    3424:	pop	{r3, r4, r5, pc}
    3428:	mov	r0, r5
    342c:	bl	da4 <close@plt>
    3430:	mov	r0, r4
    3434:	pop	{r3, r4, r5, pc}
    3438:	ldr	r3, [pc, #192]	; 3500 <main@@Base+0x2744>
    343c:	mov	r1, #0
    3440:	ldr	r2, [pc, #188]	; 3504 <main@@Base+0x2748>
    3444:	add	r3, pc, r3
    3448:	push	{r4, r5, r6, r7, lr}
    344c:	sub	sp, sp, #36	; 0x24
    3450:	ldr	r5, [r3, r2]
    3454:	ldr	r3, [r5]
    3458:	str	r3, [sp, #28]
    345c:	bl	31b4 <main@@Base+0x23f8>
    3460:	subs	r7, r0, #0
    3464:	blt	34d8 <main@@Base+0x271c>
    3468:	mov	r4, #0
    346c:	mov	lr, #16
    3470:	mov	r1, r4
    3474:	str	lr, [sp]
    3478:	mov	r2, #2
    347c:	add	r3, sp, #12
    3480:	mvn	ip, #0
    3484:	str	r4, [sp, #24]
    3488:	str	lr, [sp, #12]
    348c:	str	ip, [sp, #16]
    3490:	str	ip, [sp, #20]
    3494:	bl	be8 <setsockopt@plt>
    3498:	cmp	r0, r4
    349c:	mov	r0, r7
    34a0:	blt	34e0 <main@@Base+0x2724>
    34a4:	bl	3280 <main@@Base+0x24c4>
    34a8:	subs	r6, r0, #0
    34ac:	beq	34ec <main@@Base+0x2730>
    34b0:	strb	r4, [r6, #8]
    34b4:	mov	r1, #1
    34b8:	bl	33d8 <main@@Base+0x261c>
    34bc:	mov	r0, r6
    34c0:	ldr	r2, [sp, #28]
    34c4:	ldr	r3, [r5]
    34c8:	cmp	r2, r3
    34cc:	bne	34fc <main@@Base+0x2740>
    34d0:	add	sp, sp, #36	; 0x24
    34d4:	pop	{r4, r5, r6, r7, pc}
    34d8:	mov	r0, #0
    34dc:	b	34c0 <main@@Base+0x2704>
    34e0:	bl	da4 <close@plt>
    34e4:	mov	r0, r4
    34e8:	b	34c0 <main@@Base+0x2704>
    34ec:	mov	r0, r7
    34f0:	bl	da4 <close@plt>
    34f4:	mov	r0, r6
    34f8:	b	34c0 <main@@Base+0x2704>
    34fc:	bl	c30 <__stack_chk_fail@plt>
    3500:	ldrdeq	r3, [r1], -r0
    3504:	andeq	r0, r0, r0, asr #1
    3508:	push	{r4, r5, r6, r7, r8, lr}
    350c:	subs	r5, r0, #0
    3510:	mov	r7, r1
    3514:	mov	r8, r2
    3518:	mov	r6, r3
    351c:	beq	35e0 <main@@Base+0x2824>
    3520:	mov	r0, #28
    3524:	bl	4b80 <main@@Base+0x3dc4>
    3528:	mov	r1, #0
    352c:	mov	r2, #28
    3530:	mov	r4, r0
    3534:	bl	cfc <memset@plt>
    3538:	cmp	r6, #0
    353c:	strh	r7, [r4, #4]
    3540:	strb	r6, [r4, #12]
    3544:	bne	35b8 <main@@Base+0x27fc>
    3548:	ldr	r3, [r5, #12]
    354c:	mov	r1, r4
    3550:	ldr	r0, [r5, #20]
    3554:	cmp	r3, #0
    3558:	addne	r2, r3, #1
    355c:	moveq	r3, #1
    3560:	moveq	r2, #2
    3564:	str	r2, [r5, #12]
    3568:	str	r3, [r4]
    356c:	ldr	r3, [sp, #24]
    3570:	str	r3, [r4, #16]
    3574:	ldr	r3, [sp, #32]
    3578:	str	r3, [r4, #20]
    357c:	ldr	r3, [sp, #28]
    3580:	str	r3, [r4, #24]
    3584:	bl	46a8 <main@@Base+0x38ec>
    3588:	subs	r6, r0, #0
    358c:	beq	35a0 <main@@Base+0x27e4>
    3590:	mov	r0, r5
    3594:	bl	2eb4 <main@@Base+0x20f8>
    3598:	ldr	r0, [r4]
    359c:	pop	{r4, r5, r6, r7, r8, pc}
    35a0:	ldr	r0, [r4, #8]
    35a4:	bl	c0c <free@plt>
    35a8:	mov	r0, r4
    35ac:	bl	c0c <free@plt>
    35b0:	mov	r0, r6
    35b4:	pop	{r4, r5, r6, r7, r8, pc}
    35b8:	mov	r0, r6
    35bc:	bl	c60 <malloc@plt>
    35c0:	cmp	r0, #0
    35c4:	mov	r7, r0
    35c8:	str	r0, [r4, #8]
    35cc:	beq	35e8 <main@@Base+0x282c>
    35d0:	mov	r1, r8
    35d4:	mov	r2, r6
    35d8:	bl	c24 <memcpy@plt>
    35dc:	b	3548 <main@@Base+0x278c>
    35e0:	mov	r0, r5
    35e4:	pop	{r4, r5, r6, r7, r8, pc}
    35e8:	mov	r0, r4
    35ec:	bl	c0c <free@plt>
    35f0:	mov	r0, r7
    35f4:	pop	{r4, r5, r6, r7, r8, pc}
    35f8:	cmp	r1, #0
    35fc:	cmpne	r0, #0
    3600:	push	{r4, r5, r6, lr}
    3604:	mov	r4, r0
    3608:	mov	r5, r1
    360c:	bne	3618 <main@@Base+0x285c>
    3610:	mov	r0, #0
    3614:	pop	{r4, r5, r6, pc}
    3618:	ldr	r6, [pc, #72]	; 3668 <main@@Base+0x28ac>
    361c:	mov	r2, r1
    3620:	ldr	r0, [r0, #20]
    3624:	add	r6, pc, r6
    3628:	mov	r1, r6
    362c:	bl	49c0 <main@@Base+0x3c04>
    3630:	cmp	r0, #0
    3634:	beq	364c <main@@Base+0x2890>
    3638:	bl	2e2c <main@@Base+0x2070>
    363c:	mov	r0, r4
    3640:	bl	2eb4 <main@@Base+0x20f8>
    3644:	mov	r0, #1
    3648:	pop	{r4, r5, r6, pc}
    364c:	mov	r1, r6
    3650:	mov	r2, r5
    3654:	ldr	r0, [r4, #24]
    3658:	bl	49c0 <main@@Base+0x3c04>
    365c:	cmp	r0, #0
    3660:	bne	3638 <main@@Base+0x287c>
    3664:	b	3610 <main@@Base+0x2854>
    3668:			; <UNDEFINED> instruction: 0xfffff7d8
    366c:	push	{r3, r4, r5, lr}
    3670:	subs	r4, r0, #0
    3674:	beq	36dc <main@@Base+0x2920>
    3678:	ldrb	r3, [r4, #9]
    367c:	cmp	r3, #0
    3680:	bne	36bc <main@@Base+0x2900>
    3684:	ldr	r5, [pc, #88]	; 36e4 <main@@Base+0x2928>
    3688:	mov	r1, #0
    368c:	mov	r2, r1
    3690:	ldr	r0, [r4, #20]
    3694:	add	r5, pc, r5
    3698:	mov	r3, r5
    369c:	bl	4a5c <main@@Base+0x3ca0>
    36a0:	mov	r1, #0
    36a4:	mov	r3, r5
    36a8:	ldr	r0, [r4, #24]
    36ac:	mov	r2, r1
    36b0:	bl	4a5c <main@@Base+0x3ca0>
    36b4:	mov	r0, #1
    36b8:	pop	{r3, r4, r5, pc}
    36bc:	mov	r1, #0
    36c0:	ldr	r0, [r4, #4]
    36c4:	mov	r3, r1
    36c8:	mov	r2, r1
    36cc:	bl	3b58 <main@@Base+0x2d9c>
    36d0:	mov	r3, #0
    36d4:	strb	r3, [r4, #9]
    36d8:	b	3684 <main@@Base+0x28c8>
    36dc:	mov	r0, r4
    36e0:	pop	{r3, r4, r5, pc}
    36e4:			; <UNDEFINED> instruction: 0xfffff790
    36e8:	push	{r4, r5, r6, r7, r8, lr}
    36ec:	subs	r5, r0, #0
    36f0:	mov	r7, r1
    36f4:	mov	r6, r2
    36f8:	mov	r8, r3
    36fc:	beq	3764 <main@@Base+0x29a8>
    3700:	mov	r0, #20
    3704:	bl	4b80 <main@@Base+0x3dc4>
    3708:	mov	r1, #0
    370c:	mov	r2, #20
    3710:	mov	r4, r0
    3714:	bl	cfc <memset@plt>
    3718:	strb	r7, [r4, #4]
    371c:	mov	r1, r4
    3720:	ldr	r0, [r5, #16]
    3724:	cmp	r0, #0
    3728:	addne	r3, r0, #1
    372c:	moveq	r3, #2
    3730:	moveq	r0, #1
    3734:	str	r3, [r5, #16]
    3738:	ldr	r3, [sp, #24]
    373c:	str	r0, [r4]
    3740:	str	r6, [r4, #8]
    3744:	ldr	r0, [r5, #28]
    3748:	str	r3, [r4, #12]
    374c:	str	r8, [r4, #16]
    3750:	bl	46a8 <main@@Base+0x38ec>
    3754:	subs	r5, r0, #0
    3758:	beq	376c <main@@Base+0x29b0>
    375c:	ldr	r0, [r4]
    3760:	pop	{r4, r5, r6, r7, r8, pc}
    3764:	mov	r0, r5
    3768:	pop	{r4, r5, r6, r7, r8, pc}
    376c:	mov	r0, r4
    3770:	bl	c0c <free@plt>
    3774:	mov	r0, r5
    3778:	pop	{r4, r5, r6, r7, r8, pc}
    377c:	cmp	r1, #0
    3780:	cmpne	r0, #0
    3784:	push	{r3, lr}
    3788:	bne	3794 <main@@Base+0x29d8>
    378c:	mov	r0, #0
    3790:	pop	{r3, pc}
    3794:	mov	r2, r1
    3798:	ldr	r1, [pc, #28]	; 37bc <main@@Base+0x2a00>
    379c:	ldr	r0, [r0, #28]
    37a0:	add	r1, pc, r1
    37a4:	bl	49c0 <main@@Base+0x3c04>
    37a8:	cmp	r0, #0
    37ac:	beq	378c <main@@Base+0x29d0>
    37b0:	bl	2e5c <main@@Base+0x20a0>
    37b4:	mov	r0, #1
    37b8:	pop	{r3, pc}
    37bc:			; <UNDEFINED> instruction: 0xfffff670
    37c0:	ldr	r3, [r0, #32]
    37c4:	push	{r4, lr}
    37c8:	cmp	r3, #0
    37cc:	mov	r4, r0
    37d0:	beq	37dc <main@@Base+0x2a20>
    37d4:	ldr	r0, [r0, #36]	; 0x24
    37d8:	blx	r3
    37dc:	ldr	r3, [r4, #20]
    37e0:	cmp	r3, #0
    37e4:	beq	37f0 <main@@Base+0x2a34>
    37e8:	ldr	r0, [r4, #24]
    37ec:	blx	r3
    37f0:	ldr	r3, [r4, #44]	; 0x2c
    37f4:	cmp	r3, #0
    37f8:	beq	3804 <main@@Base+0x2a48>
    37fc:	ldr	r0, [r4, #48]	; 0x30
    3800:	blx	r3
    3804:	ldrb	r3, [r4, #12]
    3808:	cmp	r3, #0
    380c:	beq	3818 <main@@Base+0x2a5c>
    3810:	ldr	r0, [r4, #4]
    3814:	bl	da4 <close@plt>
    3818:	mvn	r3, #0
    381c:	str	r3, [r4, #4]
    3820:	pop	{r4, pc}
    3824:	subs	r3, r0, #0
    3828:	bxeq	lr
    382c:	dmb	sy
    3830:	ldrex	r2, [r3]
    3834:	sub	r2, r2, #1
    3838:	strex	r1, r2, [r3]
    383c:	cmp	r1, #0
    3840:	bne	3830 <main@@Base+0x2a74>
    3844:	cmp	r2, #0
    3848:	dmb	sy
    384c:	bxne	lr
    3850:	b	c0c <free@plt>
    3854:	push	{r3, r4, r5, lr}
    3858:	subs	r4, r2, #0
    385c:	mov	r5, r1
    3860:	beq	3880 <main@@Base+0x2ac4>
    3864:	dmb	sy
    3868:	ldrex	r2, [r4]
    386c:	add	r2, r2, #1
    3870:	strex	r3, r2, [r4]
    3874:	cmp	r3, #0
    3878:	bne	3868 <main@@Base+0x2aac>
    387c:	dmb	sy
    3880:	movw	r3, #8216	; 0x2018
    3884:	and	r3, r5, r3
    3888:	cmp	r3, #0
    388c:	beq	38f4 <main@@Base+0x2b38>
    3890:	ldr	r2, [r4, #40]	; 0x28
    3894:	mov	r3, #0
    3898:	str	r3, [r4, #16]
    389c:	cmp	r2, r3
    38a0:	str	r3, [r4, #28]
    38a4:	beq	39c0 <main@@Base+0x2c04>
    38a8:	mov	r0, r4
    38ac:	ldr	r1, [r4, #48]	; 0x30
    38b0:	blx	r2
    38b4:	cmp	r0, #0
    38b8:	bne	38f4 <main@@Base+0x2b38>
    38bc:	ldr	r3, [r4, #44]	; 0x2c
    38c0:	cmp	r3, #0
    38c4:	beq	38d0 <main@@Base+0x2b14>
    38c8:	ldr	r0, [r4, #48]	; 0x30
    38cc:	blx	r3
    38d0:	ldr	r1, [r4, #8]
    38d4:	mov	r3, #0
    38d8:	ldr	r0, [r4, #4]
    38dc:	bic	r1, r1, #8192	; 0x2000
    38e0:	str	r3, [r4, #40]	; 0x28
    38e4:	str	r1, [r4, #8]
    38e8:	str	r3, [r4, #44]	; 0x2c
    38ec:	str	r3, [r4, #48]	; 0x30
    38f0:	bl	3fe8 <main@@Base+0x322c>
    38f4:	tst	r5, #1
    38f8:	beq	3954 <main@@Base+0x2b98>
    38fc:	ldr	r3, [r4, #16]
    3900:	cmp	r3, #0
    3904:	beq	3954 <main@@Base+0x2b98>
    3908:	mov	r0, r4
    390c:	ldr	r1, [r4, #24]
    3910:	blx	r3
    3914:	cmp	r0, #0
    3918:	bne	3954 <main@@Base+0x2b98>
    391c:	ldr	r3, [r4, #20]
    3920:	cmp	r3, #0
    3924:	beq	3930 <main@@Base+0x2b74>
    3928:	ldr	r0, [r4, #24]
    392c:	blx	r3
    3930:	ldr	r1, [r4, #8]
    3934:	mov	r3, #0
    3938:	ldr	r0, [r4, #4]
    393c:	bic	r1, r1, #1
    3940:	str	r3, [r4, #16]
    3944:	str	r1, [r4, #8]
    3948:	str	r3, [r4, #20]
    394c:	str	r3, [r4, #24]
    3950:	bl	3fe8 <main@@Base+0x322c>
    3954:	tst	r5, #4
    3958:	beq	39b4 <main@@Base+0x2bf8>
    395c:	ldr	r3, [r4, #28]
    3960:	cmp	r3, #0
    3964:	beq	39b4 <main@@Base+0x2bf8>
    3968:	mov	r0, r4
    396c:	ldr	r1, [r4, #36]	; 0x24
    3970:	blx	r3
    3974:	cmp	r0, #0
    3978:	bne	39b4 <main@@Base+0x2bf8>
    397c:	ldr	r3, [r4, #32]
    3980:	cmp	r3, #0
    3984:	beq	3990 <main@@Base+0x2bd4>
    3988:	ldr	r0, [r4, #36]	; 0x24
    398c:	blx	r3
    3990:	ldr	r1, [r4, #8]
    3994:	mov	r3, #0
    3998:	ldr	r0, [r4, #4]
    399c:	bic	r1, r1, #4
    39a0:	str	r3, [r4, #28]
    39a4:	str	r1, [r4, #8]
    39a8:	str	r3, [r4, #32]
    39ac:	str	r3, [r4, #36]	; 0x24
    39b0:	bl	3fe8 <main@@Base+0x322c>
    39b4:	mov	r0, r4
    39b8:	pop	{r3, r4, r5, lr}
    39bc:	b	3824 <main@@Base+0x2a68>
    39c0:	ldr	r0, [r4, #4]
    39c4:	bl	4098 <main@@Base+0x32dc>
    39c8:	mov	r0, r4
    39cc:	pop	{r3, r4, r5, lr}
    39d0:	b	3824 <main@@Base+0x2a68>
    39d4:	push	{r4, r5, r6, lr}
    39d8:	subs	r5, r0, #0
    39dc:	sub	sp, sp, #8
    39e0:	blt	3a5c <main@@Base+0x2ca0>
    39e4:	mov	r0, #52	; 0x34
    39e8:	mov	r6, #0
    39ec:	bl	4b80 <main@@Base+0x3dc4>
    39f0:	mov	r1, r6
    39f4:	mov	r2, #52	; 0x34
    39f8:	mov	r4, r0
    39fc:	bl	cfc <memset@plt>
    3a00:	ldr	r2, [pc, #108]	; 3a74 <main@@Base+0x2cb8>
    3a04:	mov	r0, r5
    3a08:	str	r5, [r4, #4]
    3a0c:	mov	r1, r6
    3a10:	add	r2, pc, r2
    3a14:	strb	r6, [r4, #12]
    3a18:	str	r2, [sp]
    3a1c:	mov	r3, r4
    3a20:	ldr	r2, [pc, #80]	; 3a78 <main@@Base+0x2cbc>
    3a24:	add	r2, pc, r2
    3a28:	bl	3ee0 <main@@Base+0x3124>
    3a2c:	cmp	r0, r6
    3a30:	blt	3a64 <main@@Base+0x2ca8>
    3a34:	dmb	sy
    3a38:	ldrex	r2, [r4]
    3a3c:	add	r2, r2, #1
    3a40:	strex	r3, r2, [r4]
    3a44:	cmp	r3, #0
    3a48:	bne	3a38 <main@@Base+0x2c7c>
    3a4c:	dmb	sy
    3a50:	mov	r0, r4
    3a54:	add	sp, sp, #8
    3a58:	pop	{r4, r5, r6, pc}
    3a5c:	mov	r0, #0
    3a60:	b	3a54 <main@@Base+0x2c98>
    3a64:	mov	r0, r4
    3a68:	bl	c0c <free@plt>
    3a6c:	mov	r0, r6
    3a70:	b	3a54 <main@@Base+0x2c98>
    3a74:			; <UNDEFINED> instruction: 0xfffffda8
    3a78:			; <UNDEFINED> instruction: 0xfffffe28
    3a7c:	push	{r4, lr}
    3a80:	subs	r4, r0, #0
    3a84:	popeq	{r4, pc}
    3a88:	mov	r3, #0
    3a8c:	ldr	r0, [r4, #4]
    3a90:	str	r3, [r4, #16]
    3a94:	str	r3, [r4, #28]
    3a98:	str	r3, [r4, #40]	; 0x28
    3a9c:	bl	4098 <main@@Base+0x32dc>
    3aa0:	mov	r0, r4
    3aa4:	pop	{r4, lr}
    3aa8:	b	3824 <main@@Base+0x2a68>
    3aac:	cmp	r0, #0
    3ab0:	ldrne	r0, [r0, #4]
    3ab4:	mvneq	r0, #106	; 0x6a
    3ab8:	bx	lr
    3abc:	cmp	r0, #0
    3ac0:	strbne	r1, [r0, #12]
    3ac4:	movne	r0, #1
    3ac8:	bx	lr
    3acc:	push	{r4, r5, r6, r7, r8, lr}
    3ad0:	subs	r4, r0, #0
    3ad4:	mov	r5, r1
    3ad8:	mov	r7, r2
    3adc:	mov	r8, r3
    3ae0:	beq	3b50 <main@@Base+0x2d94>
    3ae4:	ldr	r1, [r4, #4]
    3ae8:	cmp	r1, #0
    3aec:	blt	3b50 <main@@Base+0x2d94>
    3af0:	ldr	r1, [r4, #20]
    3af4:	cmp	r1, #0
    3af8:	beq	3b04 <main@@Base+0x2d48>
    3afc:	ldr	r0, [r4, #24]
    3b00:	blx	r1
    3b04:	ldr	r1, [r4, #8]
    3b08:	cmp	r5, #0
    3b0c:	str	r5, [r4, #16]
    3b10:	orrne	r6, r1, #1
    3b14:	biceq	r6, r1, #1
    3b18:	cmp	r6, r1
    3b1c:	str	r8, [r4, #20]
    3b20:	str	r7, [r4, #24]
    3b24:	beq	3b48 <main@@Base+0x2d8c>
    3b28:	ldr	r0, [r4, #4]
    3b2c:	mov	r1, r6
    3b30:	bl	3fe8 <main@@Base+0x322c>
    3b34:	cmp	r0, #0
    3b38:	blt	3b50 <main@@Base+0x2d94>
    3b3c:	str	r6, [r4, #8]
    3b40:	mov	r0, #1
    3b44:	pop	{r4, r5, r6, r7, r8, pc}
    3b48:	mov	r0, #1
    3b4c:	pop	{r4, r5, r6, r7, r8, pc}
    3b50:	mov	r0, #0
    3b54:	pop	{r4, r5, r6, r7, r8, pc}
    3b58:	push	{r4, r5, r6, r7, r8, lr}
    3b5c:	subs	r4, r0, #0
    3b60:	mov	r5, r1
    3b64:	mov	r7, r2
    3b68:	mov	r8, r3
    3b6c:	beq	3bdc <main@@Base+0x2e20>
    3b70:	ldr	r1, [r4, #4]
    3b74:	cmp	r1, #0
    3b78:	blt	3bdc <main@@Base+0x2e20>
    3b7c:	ldr	r1, [r4, #32]
    3b80:	cmp	r1, #0
    3b84:	beq	3b90 <main@@Base+0x2dd4>
    3b88:	ldr	r0, [r4, #36]	; 0x24
    3b8c:	blx	r1
    3b90:	ldr	r1, [r4, #8]
    3b94:	cmp	r5, #0
    3b98:	str	r5, [r4, #28]
    3b9c:	orrne	r6, r1, #4
    3ba0:	biceq	r6, r1, #4
    3ba4:	cmp	r6, r1
    3ba8:	str	r8, [r4, #32]
    3bac:	str	r7, [r4, #36]	; 0x24
    3bb0:	beq	3bd4 <main@@Base+0x2e18>
    3bb4:	ldr	r0, [r4, #4]
    3bb8:	mov	r1, r6
    3bbc:	bl	3fe8 <main@@Base+0x322c>
    3bc0:	cmp	r0, #0
    3bc4:	blt	3bdc <main@@Base+0x2e20>
    3bc8:	str	r6, [r4, #8]
    3bcc:	mov	r0, #1
    3bd0:	pop	{r4, r5, r6, r7, r8, pc}
    3bd4:	mov	r0, #1
    3bd8:	pop	{r4, r5, r6, r7, r8, pc}
    3bdc:	mov	r0, #0
    3be0:	pop	{r4, r5, r6, r7, r8, pc}
    3be4:	push	{r4, r5, r6, r7, r8, lr}
    3be8:	subs	r4, r0, #0
    3bec:	mov	r5, r1
    3bf0:	mov	r7, r2
    3bf4:	mov	r8, r3
    3bf8:	beq	3c68 <main@@Base+0x2eac>
    3bfc:	ldr	r1, [r4, #4]
    3c00:	cmp	r1, #0
    3c04:	blt	3c68 <main@@Base+0x2eac>
    3c08:	ldr	r1, [r4, #44]	; 0x2c
    3c0c:	cmp	r1, #0
    3c10:	beq	3c1c <main@@Base+0x2e60>
    3c14:	ldr	r0, [r4, #48]	; 0x30
    3c18:	blx	r1
    3c1c:	ldr	r1, [r4, #8]
    3c20:	cmp	r5, #0
    3c24:	str	r5, [r4, #40]	; 0x28
    3c28:	orrne	r6, r1, #8192	; 0x2000
    3c2c:	biceq	r6, r1, #8192	; 0x2000
    3c30:	cmp	r6, r1
    3c34:	str	r8, [r4, #44]	; 0x2c
    3c38:	str	r7, [r4, #48]	; 0x30
    3c3c:	beq	3c60 <main@@Base+0x2ea4>
    3c40:	ldr	r0, [r4, #4]
    3c44:	mov	r1, r6
    3c48:	bl	3fe8 <main@@Base+0x322c>
    3c4c:	cmp	r0, #0
    3c50:	blt	3c68 <main@@Base+0x2eac>
    3c54:	str	r6, [r4, #8]
    3c58:	mov	r0, #1
    3c5c:	pop	{r4, r5, r6, r7, r8, pc}
    3c60:	mov	r0, #1
    3c64:	pop	{r4, r5, r6, r7, r8, pc}
    3c68:	mov	r0, #0
    3c6c:	pop	{r4, r5, r6, r7, r8, pc}
    3c70:	push	{r4, r5, r6, lr}
    3c74:	subs	r4, r0, #0
    3c78:	mov	r5, r1
    3c7c:	mov	r6, r2
    3c80:	beq	3cc4 <main@@Base+0x2f08>
    3c84:	ldr	r0, [r4, #4]
    3c88:	cmp	r0, #0
    3c8c:	bge	3c98 <main@@Base+0x2edc>
    3c90:	b	3cc4 <main@@Base+0x2f08>
    3c94:	ldr	r0, [r4, #4]
    3c98:	mov	r1, r5
    3c9c:	mov	r2, r6
    3ca0:	bl	d2c <writev@plt>
    3ca4:	cmp	r0, #0
    3ca8:	popge	{r4, r5, r6, pc}
    3cac:	bl	ce4 <__errno_location@plt>
    3cb0:	ldr	r3, [r0]
    3cb4:	cmp	r3, #4
    3cb8:	beq	3c94 <main@@Base+0x2ed8>
    3cbc:	rsb	r0, r3, #0
    3cc0:	pop	{r4, r5, r6, pc}
    3cc4:	mvn	r0, #106	; 0x6a
    3cc8:	pop	{r4, r5, r6, pc}
    3ccc:	cmp	r0, #0
    3cd0:	push	{r3, lr}
    3cd4:	popeq	{r3, pc}
    3cd8:	ldr	r0, [r0, #4]
    3cdc:	cmp	r0, #0
    3ce0:	blt	3cf8 <main@@Base+0x2f3c>
    3ce4:	mov	r1, #2
    3ce8:	bl	d38 <shutdown@plt>
    3cec:	rsbs	r0, r0, #1
    3cf0:	movcc	r0, #0
    3cf4:	pop	{r3, pc}
    3cf8:	mov	r0, #0
    3cfc:	pop	{r3, pc}
    3d00:	push	{r4, lr}
    3d04:	mov	r4, r0
    3d08:	ldr	r0, [r0]
    3d0c:	bl	da4 <close@plt>
    3d10:	ldr	r3, [r4, #8]
    3d14:	mvn	r2, #0
    3d18:	str	r2, [r4]
    3d1c:	cmp	r3, #0
    3d20:	beq	3d2c <main@@Base+0x2f70>
    3d24:	ldr	r0, [r4, #12]
    3d28:	blx	r3
    3d2c:	mov	r0, r4
    3d30:	pop	{r4, lr}
    3d34:	b	c0c <free@plt>
    3d38:	ldr	r3, [pc, #116]	; 3db4 <main@@Base+0x2ff8>
    3d3c:	tst	r1, #24
    3d40:	ldr	r1, [pc, #112]	; 3db8 <main@@Base+0x2ffc>
    3d44:	add	r3, pc, r3
    3d48:	push	{r4, r5, lr}
    3d4c:	sub	sp, sp, #20
    3d50:	ldr	r4, [r3, r1]
    3d54:	mov	r5, r2
    3d58:	ldr	r3, [r4]
    3d5c:	str	r3, [sp, #12]
    3d60:	beq	3d7c <main@@Base+0x2fc0>
    3d64:	ldr	r2, [sp, #12]
    3d68:	ldr	r3, [r4]
    3d6c:	cmp	r2, r3
    3d70:	bne	3db0 <main@@Base+0x2ff4>
    3d74:	add	sp, sp, #20
    3d78:	pop	{r4, r5, pc}
    3d7c:	ldr	r0, [r2]
    3d80:	mov	r1, sp
    3d84:	mov	r2, #8
    3d88:	bl	bf4 <read@plt>
    3d8c:	cmp	r0, #8
    3d90:	bne	3d64 <main@@Base+0x2fa8>
    3d94:	ldr	r3, [r5, #4]
    3d98:	cmp	r3, #0
    3d9c:	beq	3d64 <main@@Base+0x2fa8>
    3da0:	ldr	r0, [r5]
    3da4:	ldr	r1, [r5, #12]
    3da8:	blx	r3
    3dac:	b	3d64 <main@@Base+0x2fa8>
    3db0:	bl	c30 <__stack_chk_fail@plt>
    3db4:	ldrdeq	r3, [r1], -r0
    3db8:	andeq	r0, r0, r0, asr #1
    3dbc:	push	{r3, lr}
    3dc0:	mov	r0, #524288	; 0x80000
    3dc4:	bl	d98 <epoll_create1@plt>
    3dc8:	ldr	ip, [pc, #48]	; 3e00 <main@@Base+0x3044>
    3dcc:	mov	r1, #0
    3dd0:	add	ip, pc, ip
    3dd4:	add	r2, ip, #512	; 0x200
    3dd8:	mov	r3, ip
    3ddc:	str	r0, [ip]
    3de0:	str	r1, [r3, #4]!
    3de4:	cmp	r3, r2
    3de8:	mov	r0, #0
    3dec:	bne	3de0 <main@@Base+0x3024>
    3df0:	ldr	r3, [pc, #12]	; 3e04 <main@@Base+0x3048>
    3df4:	add	r3, pc, r3
    3df8:	str	r0, [r3, #516]	; 0x204
    3dfc:	pop	{r3, pc}
    3e00:	andeq	r3, r1, r4, ror #4
    3e04:	andeq	r3, r1, r0, asr #4
    3e08:	ldr	r3, [pc, #12]	; 3e1c <main@@Base+0x3060>
    3e0c:	mov	r2, #1
    3e10:	add	r3, pc, r3
    3e14:	str	r2, [r3, #516]	; 0x204
    3e18:	bx	lr
    3e1c:	andeq	r3, r1, r4, lsr #4
    3e20:	ldr	r3, [pc, #116]	; 3e9c <main@@Base+0x30e0>
    3e24:	tst	r1, #24
    3e28:	ldr	r1, [pc, #112]	; 3ea0 <main@@Base+0x30e4>
    3e2c:	add	r3, pc, r3
    3e30:	push	{r4, r5, lr}
    3e34:	sub	sp, sp, #140	; 0x8c
    3e38:	ldr	r4, [r3, r1]
    3e3c:	mov	r5, r2
    3e40:	ldr	r3, [r4]
    3e44:	str	r3, [sp, #132]	; 0x84
    3e48:	beq	3e68 <main@@Base+0x30ac>
    3e4c:	bl	3e08 <main@@Base+0x304c>
    3e50:	ldr	r2, [sp, #132]	; 0x84
    3e54:	ldr	r3, [r4]
    3e58:	cmp	r2, r3
    3e5c:	bne	3e98 <main@@Base+0x30dc>
    3e60:	add	sp, sp, #140	; 0x8c
    3e64:	pop	{r4, r5, pc}
    3e68:	mov	r1, sp
    3e6c:	mov	r2, #128	; 0x80
    3e70:	bl	bf4 <read@plt>
    3e74:	cmp	r0, #128	; 0x80
    3e78:	bne	3e50 <main@@Base+0x3094>
    3e7c:	ldr	r3, [r5, #132]	; 0x84
    3e80:	cmp	r3, #0
    3e84:	beq	3e50 <main@@Base+0x3094>
    3e88:	ldr	r1, [r5, #140]	; 0x8c
    3e8c:	ldr	r0, [sp]
    3e90:	blx	r3
    3e94:	b	3e50 <main@@Base+0x3094>
    3e98:	bl	c30 <__stack_chk_fail@plt>
    3e9c:	andeq	r3, r1, r8, ror #1
    3ea0:	andeq	r0, r0, r0, asr #1
    3ea4:	ldr	r3, [pc, #20]	; 3ec0 <main@@Base+0x3104>
    3ea8:	mov	r1, #0
    3eac:	mov	r2, #1
    3eb0:	add	r3, pc, r3
    3eb4:	str	r1, [r3, #520]	; 0x208
    3eb8:	str	r2, [r3, #516]	; 0x204
    3ebc:	bx	lr
    3ec0:	andeq	r3, r1, r4, lsl #3
    3ec4:	ldr	r3, [pc, #16]	; 3edc <main@@Base+0x3120>
    3ec8:	mov	r2, #1
    3ecc:	add	r3, pc, r3
    3ed0:	str	r2, [r3, #520]	; 0x208
    3ed4:	str	r2, [r3, #516]	; 0x204
    3ed8:	bx	lr
    3edc:	andeq	r3, r1, r8, ror #2
    3ee0:	ldr	ip, [pc, #244]	; 3fdc <main@@Base+0x3220>
    3ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3ee8:	add	ip, pc, ip
    3eec:	ldr	r4, [pc, #236]	; 3fe0 <main@@Base+0x3224>
    3ef0:	rsbs	r5, r2, #1
    3ef4:	mov	fp, r3
    3ef8:	sub	sp, sp, #36	; 0x24
    3efc:	movcc	r5, #0
    3f00:	cmp	r0, #127	; 0x7f
    3f04:	orrhi	r5, r5, #1
    3f08:	ldr	r4, [ip, r4]
    3f0c:	cmp	r5, #0
    3f10:	mov	r8, r2
    3f14:	mov	r6, r0
    3f18:	mov	r2, ip
    3f1c:	mov	r9, r1
    3f20:	ldr	r3, [r4]
    3f24:	str	r4, [sp, #4]
    3f28:	ldr	r7, [sp, #72]	; 0x48
    3f2c:	str	r3, [sp, #28]
    3f30:	bne	3fb8 <main@@Base+0x31fc>
    3f34:	mov	r0, #20
    3f38:	bl	c60 <malloc@plt>
    3f3c:	subs	r4, r0, #0
    3f40:	beq	3fd0 <main@@Base+0x3214>
    3f44:	ldr	sl, [pc, #152]	; 3fe4 <main@@Base+0x3228>
    3f48:	add	r0, r4, #12
    3f4c:	mov	r2, r6
    3f50:	mov	r1, #1
    3f54:	add	sl, pc, sl
    3f58:	str	r5, [r0], #4
    3f5c:	add	r3, sp, #8
    3f60:	stm	r4, {r6, r9}
    3f64:	str	r8, [r4, #8]
    3f68:	ldr	r0, [sl]
    3f6c:	str	r7, [r4, #12]
    3f70:	str	fp, [r4, #16]
    3f74:	str	r5, [sp, #12]
    3f78:	str	r5, [sp, #20]
    3f7c:	str	r9, [sp, #8]
    3f80:	str	r4, [sp, #16]
    3f84:	bl	c90 <epoll_ctl@plt>
    3f88:	subs	r8, r0, #0
    3f8c:	addge	r6, sl, r6, lsl #2
    3f90:	movge	r0, r5
    3f94:	strge	r4, [r6, #4]
    3f98:	blt	3fc0 <main@@Base+0x3204>
    3f9c:	ldr	r1, [sp, #4]
    3fa0:	ldr	r2, [sp, #28]
    3fa4:	ldr	r3, [r1]
    3fa8:	cmp	r2, r3
    3fac:	bne	3fd8 <main@@Base+0x321c>
    3fb0:	add	sp, sp, #36	; 0x24
    3fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3fb8:	mvn	r0, #21
    3fbc:	b	3f9c <main@@Base+0x31e0>
    3fc0:	mov	r0, r4
    3fc4:	bl	c0c <free@plt>
    3fc8:	mov	r0, r8
    3fcc:	b	3f9c <main@@Base+0x31e0>
    3fd0:	mvn	r0, #11
    3fd4:	b	3f9c <main@@Base+0x31e0>
    3fd8:	bl	c30 <__stack_chk_fail@plt>
    3fdc:	andeq	r3, r1, ip, lsr #32
    3fe0:	andeq	r0, r0, r0, asr #1
    3fe4:	andeq	r3, r1, r0, ror #1
    3fe8:	ldr	r3, [pc, #156]	; 408c <main@@Base+0x32d0>
    3fec:	cmp	r0, #127	; 0x7f
    3ff0:	ldr	r2, [pc, #152]	; 4090 <main@@Base+0x32d4>
    3ff4:	add	r3, pc, r3
    3ff8:	push	{r4, r5, r6, r7, lr}
    3ffc:	sub	sp, sp, #28
    4000:	ldr	r6, [r3, r2]
    4004:	mov	r7, r1
    4008:	ldr	r3, [r6]
    400c:	str	r3, [sp, #20]
    4010:	bhi	4078 <main@@Base+0x32bc>
    4014:	ldr	r3, [pc, #120]	; 4094 <main@@Base+0x32d8>
    4018:	add	r3, pc, r3
    401c:	add	r0, r3, r0, lsl #2
    4020:	ldr	r4, [r0, #4]
    4024:	cmp	r4, #0
    4028:	beq	4080 <main@@Base+0x32c4>
    402c:	str	r4, [sp, #8]
    4030:	mov	r5, #0
    4034:	ldr	r0, [r3]
    4038:	mov	r1, #3
    403c:	str	r5, [sp, #4]
    4040:	mov	r3, sp
    4044:	str	r5, [sp, #12]
    4048:	ldr	r2, [r4]
    404c:	str	r7, [sp]
    4050:	bl	c90 <epoll_ctl@plt>
    4054:	cmp	r0, #0
    4058:	movge	r0, r5
    405c:	strge	r7, [r4, #4]
    4060:	ldr	r2, [sp, #20]
    4064:	ldr	r3, [r6]
    4068:	cmp	r2, r3
    406c:	bne	4088 <main@@Base+0x32cc>
    4070:	add	sp, sp, #28
    4074:	pop	{r4, r5, r6, r7, pc}
    4078:	mvn	r0, #21
    407c:	b	4060 <main@@Base+0x32a4>
    4080:	mvn	r0, #5
    4084:	b	4060 <main@@Base+0x32a4>
    4088:	bl	c30 <__stack_chk_fail@plt>
    408c:	andeq	r2, r1, r0, lsr #30
    4090:	andeq	r0, r0, r0, asr #1
    4094:	andeq	r3, r1, ip, lsl r0
    4098:	cmp	r0, #127	; 0x7f
    409c:	push	{r3, r4, r5, lr}
    40a0:	bhi	4100 <main@@Base+0x3344>
    40a4:	ldr	r2, [pc, #100]	; 4110 <main@@Base+0x3354>
    40a8:	add	r2, pc, r2
    40ac:	add	ip, r2, r0, lsl #2
    40b0:	ldr	r4, [ip, #4]
    40b4:	cmp	r4, #0
    40b8:	beq	4108 <main@@Base+0x334c>
    40bc:	mov	lr, #0
    40c0:	ldr	r0, [r2]
    40c4:	mov	r3, lr
    40c8:	ldr	r2, [r4]
    40cc:	mov	r1, #2
    40d0:	str	lr, [ip, #4]
    40d4:	bl	c90 <epoll_ctl@plt>
    40d8:	ldr	r3, [r4, #12]
    40dc:	cmp	r3, #0
    40e0:	mov	r5, r0
    40e4:	beq	40f0 <main@@Base+0x3334>
    40e8:	ldr	r0, [r4, #16]
    40ec:	blx	r3
    40f0:	mov	r0, r4
    40f4:	bl	c0c <free@plt>
    40f8:	mov	r0, r5
    40fc:	pop	{r3, r4, r5, pc}
    4100:	mvn	r0, #21
    4104:	pop	{r3, r4, r5, pc}
    4108:	mvn	r0, #5
    410c:	pop	{r3, r4, r5, pc}
    4110:	andeq	r2, r1, ip, lsl #31
    4114:	ldr	r3, [pc, #496]	; 430c <main@@Base+0x3550>
    4118:	ldr	r2, [pc, #496]	; 4310 <main@@Base+0x3554>
    411c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4120:	add	r3, pc, r3
    4124:	ldr	r5, [pc, #488]	; 4314 <main@@Base+0x3558>
    4128:	sub	sp, sp, #176	; 0xb0
    412c:	ldr	r6, [r3, r2]
    4130:	add	r5, pc, r5
    4134:	ldr	r4, [r5, #524]	; 0x20c
    4138:	ldr	r3, [r6]
    413c:	cmp	r4, #0
    4140:	str	r3, [sp, #172]	; 0xac
    4144:	beq	41a8 <main@@Base+0x33ec>
    4148:	add	r7, r4, #4
    414c:	mov	r0, #0
    4150:	mov	r2, r0
    4154:	mov	r1, r7
    4158:	bl	c00 <sigprocmask@plt>
    415c:	cmp	r0, #0
    4160:	blt	4300 <main@@Base+0x3544>
    4164:	mov	r1, r7
    4168:	mov	r2, #2048	; 0x800
    416c:	mvn	r0, #0
    4170:	movt	r2, #8
    4174:	bl	c3c <signalfd@plt>
    4178:	cmp	r0, #0
    417c:	str	r0, [r4]
    4180:	blt	4300 <main@@Base+0x3544>
    4184:	mov	r2, #0
    4188:	str	r2, [sp]
    418c:	ldr	r2, [pc, #388]	; 4318 <main@@Base+0x355c>
    4190:	mov	r3, r4
    4194:	mov	r1, #1
    4198:	add	r2, pc, r2
    419c:	bl	3ee0 <main@@Base+0x3124>
    41a0:	cmp	r0, #0
    41a4:	blt	42f4 <main@@Base+0x3538>
    41a8:	ldr	r8, [pc, #364]	; 431c <main@@Base+0x3560>
    41ac:	add	r9, sp, #8
    41b0:	mov	r3, #0
    41b4:	add	r8, pc, r8
    41b8:	str	r3, [r8, #520]	; 0x208
    41bc:	ldr	r5, [r8, #516]	; 0x204
    41c0:	cmp	r5, #0
    41c4:	bne	4220 <main@@Base+0x3464>
    41c8:	ldr	r0, [r8]
    41cc:	mov	r1, r9
    41d0:	mov	r2, #10
    41d4:	mvn	r3, #0
    41d8:	bl	d44 <epoll_wait@plt>
    41dc:	subs	r7, r0, #0
    41e0:	blt	41bc <main@@Base+0x3400>
    41e4:	beq	41bc <main@@Base+0x3400>
    41e8:	add	r4, sp, #16
    41ec:	ldr	r3, [r4]
    41f0:	add	r5, r5, #1
    41f4:	ldr	r1, [r4, #-8]
    41f8:	add	r4, r4, #16
    41fc:	ldr	ip, [r3, #8]
    4200:	ldr	r0, [r3]
    4204:	ldr	r2, [r3, #16]
    4208:	blx	ip
    420c:	cmp	r5, r7
    4210:	bne	41ec <main@@Base+0x3430>
    4214:	ldr	r5, [r8, #516]	; 0x204
    4218:	cmp	r5, #0
    421c:	beq	41c8 <main@@Base+0x340c>
    4220:	ldr	r3, [r8, #524]	; 0x20c
    4224:	cmp	r3, #0
    4228:	beq	4258 <main@@Base+0x349c>
    422c:	ldr	r0, [r3]
    4230:	bl	4098 <main@@Base+0x32dc>
    4234:	ldr	r3, [r8, #524]	; 0x20c
    4238:	ldr	r0, [r3]
    423c:	bl	da4 <close@plt>
    4240:	ldr	r2, [r8, #524]	; 0x20c
    4244:	ldr	r3, [r2, #136]	; 0x88
    4248:	cmp	r3, #0
    424c:	beq	4258 <main@@Base+0x349c>
    4250:	ldr	r0, [r2, #140]	; 0x8c
    4254:	blx	r3
    4258:	ldr	r5, [pc, #192]	; 4320 <main@@Base+0x3564>
    425c:	mov	r9, #0
    4260:	ldr	sl, [pc, #188]	; 4324 <main@@Base+0x3568>
    4264:	add	r5, pc, r5
    4268:	add	r8, r5, #516	; 0x204
    426c:	add	sl, pc, sl
    4270:	ldr	r7, [r5], #4
    4274:	ldr	r4, [r5]
    4278:	str	r9, [r5], #4
    427c:	cmp	r4, #0
    4280:	beq	42b8 <main@@Base+0x34fc>
    4284:	mov	r3, #0
    4288:	mov	r0, r7
    428c:	mov	r1, #2
    4290:	ldr	r2, [r4]
    4294:	bl	c90 <epoll_ctl@plt>
    4298:	ldr	r3, [r4, #12]
    429c:	cmp	r3, #0
    42a0:	beq	42b0 <main@@Base+0x34f4>
    42a4:	ldr	r0, [r4, #16]
    42a8:	blx	r3
    42ac:	ldr	r7, [sl]
    42b0:	mov	r0, r4
    42b4:	bl	c0c <free@plt>
    42b8:	cmp	r5, r8
    42bc:	bne	4274 <main@@Base+0x34b8>
    42c0:	mov	r0, r7
    42c4:	bl	da4 <close@plt>
    42c8:	ldr	r3, [pc, #88]	; 4328 <main@@Base+0x356c>
    42cc:	mov	r2, #0
    42d0:	add	r3, pc, r3
    42d4:	ldr	r0, [r3, #520]	; 0x208
    42d8:	str	r2, [r3]
    42dc:	ldr	r2, [sp, #172]	; 0xac
    42e0:	ldr	r3, [r6]
    42e4:	cmp	r2, r3
    42e8:	bne	4308 <main@@Base+0x354c>
    42ec:	add	sp, sp, #176	; 0xb0
    42f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    42f4:	ldr	r3, [r5, #524]	; 0x20c
    42f8:	ldr	r0, [r3]
    42fc:	bl	da4 <close@plt>
    4300:	mov	r0, #1
    4304:	b	42dc <main@@Base+0x3520>
    4308:	bl	c30 <__stack_chk_fail@plt>
    430c:	strdeq	r2, [r1], -r4
    4310:	andeq	r0, r0, r0, asr #1
    4314:	andeq	r2, r1, r4, lsl #30
    4318:			; <UNDEFINED> instruction: 0xfffffc80
    431c:	andeq	r2, r1, r0, lsl #29
    4320:	ldrdeq	r2, [r1], -r0
    4324:	andeq	r2, r1, r8, asr #27
    4328:	andeq	r2, r1, r4, ror #26
    432c:	ldr	ip, [pc, #340]	; 4488 <main@@Base+0x36cc>
    4330:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4334:	add	ip, pc, ip
    4338:	ldr	r4, [pc, #332]	; 448c <main@@Base+0x36d0>
    433c:	mov	sl, r3
    4340:	sub	sp, sp, #32
    4344:	subs	r8, r1, #0
    4348:	mov	r7, r0
    434c:	mov	r9, r2
    4350:	ldr	r6, [ip, r4]
    4354:	ldr	r3, [r6]
    4358:	str	r3, [sp, #28]
    435c:	beq	4448 <main@@Base+0x368c>
    4360:	mov	r0, #16
    4364:	bl	c60 <malloc@plt>
    4368:	subs	r4, r0, #0
    436c:	beq	4450 <main@@Base+0x3694>
    4370:	mov	ip, r4
    4374:	mov	r5, #0
    4378:	mov	r1, #2048	; 0x800
    437c:	str	r5, [ip], #4
    4380:	mov	r0, #1
    4384:	movt	r1, #8
    4388:	stmib	r4, {r8, sl}
    438c:	str	r9, [r4, #12]
    4390:	bl	cb4 <timerfd_create@plt>
    4394:	cmp	r0, r5
    4398:	mov	r3, r0
    439c:	str	r0, [r4]
    43a0:	blt	445c <main@@Base+0x36a0>
    43a4:	cmp	r7, #0
    43a8:	bne	43f4 <main@@Base+0x3638>
    43ac:	ldr	ip, [pc, #220]	; 4490 <main@@Base+0x36d4>
    43b0:	mov	r0, r3
    43b4:	ldr	r2, [pc, #216]	; 4494 <main@@Base+0x36d8>
    43b8:	mov	r1, #1073741825	; 0x40000001
    43bc:	add	ip, pc, ip
    43c0:	mov	r3, r4
    43c4:	add	r2, pc, r2
    43c8:	str	ip, [sp]
    43cc:	bl	3ee0 <main@@Base+0x3124>
    43d0:	cmp	r0, #0
    43d4:	ldr	r0, [r4]
    43d8:	blt	4458 <main@@Base+0x369c>
    43dc:	ldr	r2, [sp, #28]
    43e0:	ldr	r3, [r6]
    43e4:	cmp	r2, r3
    43e8:	bne	4484 <main@@Base+0x36c8>
    43ec:	add	sp, sp, #32
    43f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    43f4:	movw	r3, #19923	; 0x4dd3
    43f8:	movt	r3, #4194	; 0x1062
    43fc:	mov	r8, #1000	; 0x3e8
    4400:	movw	ip, #16960	; 0x4240
    4404:	umull	r2, lr, r3, r7
    4408:	movt	ip, #15
    440c:	mov	r1, r5
    4410:	add	r2, sp, #12
    4414:	mov	r3, r5
    4418:	str	r5, [sp, #12]
    441c:	str	r5, [sp, #16]
    4420:	lsr	lr, lr, #6
    4424:	str	lr, [sp, #20]
    4428:	mls	r7, r8, lr, r7
    442c:	mul	ip, ip, r7
    4430:	str	ip, [sp, #24]
    4434:	bl	d5c <timerfd_settime@plt>
    4438:	cmp	r0, #0
    443c:	blt	446c <main@@Base+0x36b0>
    4440:	ldr	r3, [r4]
    4444:	b	43ac <main@@Base+0x35f0>
    4448:	mvn	r0, #21
    444c:	b	43dc <main@@Base+0x3620>
    4450:	mvn	r0, #11
    4454:	b	43dc <main@@Base+0x3620>
    4458:	bl	da4 <close@plt>
    445c:	mov	r0, r4
    4460:	bl	c0c <free@plt>
    4464:	mvn	r0, #4
    4468:	b	43dc <main@@Base+0x3620>
    446c:	ldr	r0, [r4]
    4470:	bl	da4 <close@plt>
    4474:	mov	r0, r4
    4478:	bl	c0c <free@plt>
    447c:	mvn	r0, #4
    4480:	b	43dc <main@@Base+0x3620>
    4484:	bl	c30 <__stack_chk_fail@plt>
    4488:	andeq	r2, r1, r0, ror #23
    448c:	andeq	r0, r0, r0, asr #1
    4490:			; <UNDEFINED> instruction: 0xfffff93c
    4494:			; <UNDEFINED> instruction: 0xfffff96c
    4498:	ldr	r3, [pc, #176]	; 4550 <main@@Base+0x3794>
    449c:	subs	ip, r1, #0
    44a0:	ldr	r2, [pc, #172]	; 4554 <main@@Base+0x3798>
    44a4:	add	r3, pc, r3
    44a8:	push	{r4, r5, r6, r7, r8, lr}
    44ac:	sub	sp, sp, #24
    44b0:	ldr	r4, [r3, r2]
    44b4:	mov	r5, r0
    44b8:	ldr	r3, [r4]
    44bc:	str	r3, [sp, #20]
    44c0:	beq	4514 <main@@Base+0x3758>
    44c4:	movw	r3, #19923	; 0x4dd3
    44c8:	movt	r3, #4194	; 0x1062
    44cc:	mov	lr, #0
    44d0:	str	lr, [sp, #4]
    44d4:	umull	r2, r8, r3, ip
    44d8:	mov	r1, lr
    44dc:	mov	r3, lr
    44e0:	str	lr, [sp, #8]
    44e4:	mov	r7, #1000	; 0x3e8
    44e8:	movw	r6, #16960	; 0x4240
    44ec:	movt	r6, #15
    44f0:	add	r2, sp, #4
    44f4:	lsr	lr, r8, #6
    44f8:	str	lr, [sp, #12]
    44fc:	mls	ip, r7, lr, ip
    4500:	mul	r6, r6, ip
    4504:	str	r6, [sp, #16]
    4508:	bl	d5c <timerfd_settime@plt>
    450c:	cmp	r0, #0
    4510:	blt	4544 <main@@Base+0x3788>
    4514:	mov	r0, r5
    4518:	mov	r1, #1073741825	; 0x40000001
    451c:	bl	3fe8 <main@@Base+0x322c>
    4520:	cmp	r0, #0
    4524:	blt	4544 <main@@Base+0x3788>
    4528:	mov	r0, #0
    452c:	ldr	r2, [sp, #20]
    4530:	ldr	r3, [r4]
    4534:	cmp	r2, r3
    4538:	bne	454c <main@@Base+0x3790>
    453c:	add	sp, sp, #24
    4540:	pop	{r4, r5, r6, r7, r8, pc}
    4544:	mvn	r0, #4
    4548:	b	452c <main@@Base+0x3770>
    454c:	bl	c30 <__stack_chk_fail@plt>
    4550:	andeq	r2, r1, r0, ror sl
    4554:	andeq	r0, r0, r0, asr #1
    4558:	b	4098 <main@@Base+0x32dc>
    455c:	cmp	r1, #0
    4560:	cmpne	r0, #0
    4564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4568:	mov	r5, r0
    456c:	mov	r6, r1
    4570:	movne	r7, #0
    4574:	moveq	r7, #1
    4578:	mov	r8, r2
    457c:	mov	r9, r3
    4580:	beq	45e4 <main@@Base+0x3828>
    4584:	mov	r0, #144	; 0x90
    4588:	bl	c60 <malloc@plt>
    458c:	subs	r4, r0, #0
    4590:	beq	45ec <main@@Base+0x3830>
    4594:	ldr	sl, [pc, #88]	; 45f4 <main@@Base+0x3838>
    4598:	mov	r1, r7
    459c:	mov	r2, #144	; 0x90
    45a0:	bl	cfc <memset@plt>
    45a4:	add	sl, pc, sl
    45a8:	mov	r0, r4
    45ac:	mov	r1, r5
    45b0:	mvn	r3, #0
    45b4:	str	r6, [r4, #132]	; 0x84
    45b8:	str	r9, [r4, #136]	; 0x88
    45bc:	mov	r2, #128	; 0x80
    45c0:	str	r8, [r4, #140]	; 0x8c
    45c4:	mov	r5, sl
    45c8:	str	r3, [r0], #4
    45cc:	bl	c24 <memcpy@plt>
    45d0:	ldr	r0, [sl, #524]	; 0x20c
    45d4:	bl	c0c <free@plt>
    45d8:	str	r4, [sl, #524]	; 0x20c
    45dc:	mov	r0, r7
    45e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    45e4:	mvn	r0, #21
    45e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    45ec:	mvn	r0, #11
    45f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    45f4:	muleq	r1, r0, sl
    45f8:	subs	r3, r1, r0
    45fc:	rsbs	r0, r3, #0
    4600:	adcs	r0, r0, r3
    4604:	bx	lr
    4608:	push	{r4, lr}
    460c:	mov	r4, r0
    4610:	mov	r0, #8
    4614:	bl	4b80 <main@@Base+0x3dc4>
    4618:	mov	r2, #0
    461c:	add	r3, r0, #3
    4620:	strb	r2, [r3], #1
    4624:	strb	r2, [r3], #1
    4628:	strb	r2, [r3], #1
    462c:	strb	r2, [r3], #1
    4630:	strb	r2, [r3]
    4634:	str	r4, [r0]
    4638:	pop	{r4, pc}
    463c:	dmb	sy
    4640:	mov	r3, r0
    4644:	ldrex	r2, [r3]
    4648:	sub	r2, r2, #1
    464c:	strex	r1, r2, [r3]
    4650:	cmp	r1, #0
    4654:	bne	4644 <main@@Base+0x3888>
    4658:	cmp	r2, #0
    465c:	dmb	sy
    4660:	bxne	lr
    4664:	b	c0c <free@plt>
    4668:	push	{r4, lr}
    466c:	mov	r0, #16
    4670:	bl	4b80 <main@@Base+0x3dc4>
    4674:	mov	r1, #0
    4678:	mov	r2, #16
    467c:	mov	r4, r0
    4680:	bl	cfc <memset@plt>
    4684:	dmb	sy
    4688:	ldrex	r2, [r4]
    468c:	add	r2, r2, #1
    4690:	strex	r3, r2, [r4]
    4694:	cmp	r3, #0
    4698:	bne	4688 <main@@Base+0x38cc>
    469c:	dmb	sy
    46a0:	mov	r0, r4
    46a4:	pop	{r4, pc}
    46a8:	push	{r4, lr}
    46ac:	subs	r4, r0, #0
    46b0:	beq	46ec <main@@Base+0x3930>
    46b4:	mov	r0, r1
    46b8:	bl	4608 <main@@Base+0x384c>
    46bc:	ldr	r3, [r4, #8]
    46c0:	cmp	r3, #0
    46c4:	strne	r0, [r3, #4]
    46c8:	ldr	r3, [r4, #4]
    46cc:	str	r0, [r4, #8]
    46d0:	cmp	r3, #0
    46d4:	ldr	r3, [r4, #12]
    46d8:	streq	r0, [r4, #4]
    46dc:	mov	r0, #1
    46e0:	add	r3, r3, r0
    46e4:	str	r3, [r4, #12]
    46e8:	pop	{r4, pc}
    46ec:	mov	r0, r4
    46f0:	pop	{r4, pc}
    46f4:	push	{r4, lr}
    46f8:	subs	r4, r0, #0
    46fc:	beq	4734 <main@@Base+0x3978>
    4700:	mov	r0, r1
    4704:	bl	4608 <main@@Base+0x384c>
    4708:	ldr	r3, [r4, #4]
    470c:	ldr	r2, [r4, #8]
    4710:	cmp	r2, #0
    4714:	str	r3, [r0, #4]
    4718:	ldr	r3, [r4, #12]
    471c:	str	r0, [r4, #4]
    4720:	streq	r0, [r4, #8]
    4724:	mov	r0, #1
    4728:	add	r3, r3, r0
    472c:	str	r3, [r4, #12]
    4730:	pop	{r4, pc}
    4734:	mov	r0, r4
    4738:	pop	{r4, pc}
    473c:	push	{r3, r4, r5, lr}
    4740:	subs	r5, r0, #0
    4744:	beq	47b8 <main@@Base+0x39fc>
    4748:	ldr	r4, [r5, #4]
    474c:	cmp	r4, #0
    4750:	bne	4764 <main@@Base+0x39a8>
    4754:	b	47a8 <main@@Base+0x39ec>
    4758:	ldr	r4, [r4, #4]
    475c:	cmp	r4, #0
    4760:	beq	47a8 <main@@Base+0x39ec>
    4764:	ldr	r3, [r4]
    4768:	cmp	r3, r1
    476c:	bne	4758 <main@@Base+0x399c>
    4770:	mov	r0, r2
    4774:	bl	4608 <main@@Base+0x384c>
    4778:	ldr	r2, [r4, #4]
    477c:	str	r2, [r0, #4]
    4780:	mov	r3, r0
    4784:	ldr	r2, [r4, #4]
    4788:	cmp	r2, #0
    478c:	beq	47b0 <main@@Base+0x39f4>
    4790:	ldr	r2, [r5, #12]
    4794:	mov	r0, #1
    4798:	str	r3, [r4, #4]
    479c:	add	r3, r2, r0
    47a0:	str	r3, [r5, #12]
    47a4:	pop	{r3, r4, r5, pc}
    47a8:	mov	r0, r4
    47ac:	pop	{r3, r4, r5, pc}
    47b0:	str	r3, [r5, #8]
    47b4:	b	4790 <main@@Base+0x39d4>
    47b8:	mov	r0, r5
    47bc:	pop	{r3, r4, r5, pc}
    47c0:	push	{r3, r4, r5, lr}
    47c4:	subs	r4, r0, #0
    47c8:	beq	4804 <main@@Base+0x3a48>
    47cc:	ldr	r0, [r4, #4]
    47d0:	cmp	r0, #0
    47d4:	popeq	{r3, r4, r5, pc}
    47d8:	ldr	r3, [r0, #4]
    47dc:	ldr	r5, [r0]
    47e0:	cmp	r3, #0
    47e4:	str	r3, [r4, #4]
    47e8:	streq	r3, [r4, #8]
    47ec:	bl	c0c <free@plt>
    47f0:	ldr	r3, [r4, #12]
    47f4:	mov	r0, r5
    47f8:	sub	r3, r3, #1
    47fc:	str	r3, [r4, #12]
    4800:	pop	{r3, r4, r5, pc}
    4804:	mov	r0, r4
    4808:	pop	{r3, r4, r5, pc}
    480c:	cmp	r0, #0
    4810:	bxeq	lr
    4814:	ldr	r0, [r0, #4]
    4818:	cmp	r0, #0
    481c:	ldrne	r0, [r0]
    4820:	bx	lr
    4824:	cmp	r0, #0
    4828:	bxeq	lr
    482c:	ldr	r0, [r0, #8]
    4830:	cmp	r0, #0
    4834:	ldrne	r0, [r0]
    4838:	bx	lr
    483c:	cmp	r1, #0
    4840:	cmpne	r0, #0
    4844:	push	{r3, r4, r5, r6, r7, lr}
    4848:	mov	r5, r0
    484c:	mov	r6, r1
    4850:	mov	r7, r2
    4854:	popeq	{r3, r4, r5, r6, r7, pc}
    4858:	ldr	r3, [r0, #4]
    485c:	cmp	r3, #0
    4860:	popeq	{r3, r4, r5, r6, r7, pc}
    4864:	dmb	sy
    4868:	ldrex	r1, [r5]
    486c:	add	r1, r1, #1
    4870:	strex	r2, r1, [r5]
    4874:	cmp	r2, #0
    4878:	bne	4868 <main@@Base+0x3aac>
    487c:	dmb	sy
    4880:	ldr	r0, [r5, #4]
    4884:	mov	r1, r7
    4888:	cmp	r0, #0
    488c:	beq	48b0 <main@@Base+0x3af4>
    4890:	ldr	r0, [r5]
    4894:	cmp	r0, #1
    4898:	ble	48b0 <main@@Base+0x3af4>
    489c:	ldm	r3, {r0, r4}
    48a0:	blx	r6
    48a4:	cmp	r4, #0
    48a8:	mov	r3, r4
    48ac:	bne	4880 <main@@Base+0x3ac4>
    48b0:	mov	r0, r5
    48b4:	pop	{r3, r4, r5, r6, r7, lr}
    48b8:	b	463c <main@@Base+0x3880>
    48bc:	cmp	r0, #0
    48c0:	push	{r4, r5, r6, lr}
    48c4:	mov	r5, r1
    48c8:	mov	r6, r2
    48cc:	beq	4910 <main@@Base+0x3b54>
    48d0:	cmp	r1, #0
    48d4:	beq	4918 <main@@Base+0x3b5c>
    48d8:	ldr	r4, [r0, #4]
    48dc:	cmp	r4, #0
    48e0:	bne	48f4 <main@@Base+0x3b38>
    48e4:	b	4910 <main@@Base+0x3b54>
    48e8:	ldr	r4, [r4, #4]
    48ec:	cmp	r4, #0
    48f0:	beq	4910 <main@@Base+0x3b54>
    48f4:	ldr	r0, [r4]
    48f8:	mov	r1, r6
    48fc:	blx	r5
    4900:	cmp	r0, #0
    4904:	beq	48e8 <main@@Base+0x3b2c>
    4908:	ldr	r0, [r4]
    490c:	pop	{r4, r5, r6, pc}
    4910:	mov	r0, #0
    4914:	pop	{r4, r5, r6, pc}
    4918:	ldr	r5, [pc, #4]	; 4924 <main@@Base+0x3b68>
    491c:	add	r5, pc, r5
    4920:	b	48d8 <main@@Base+0x3b1c>
    4924:			; <UNDEFINED> instruction: 0xfffffcd4
    4928:	push	{r4, lr}
    492c:	subs	r4, r0, #0
    4930:	beq	49b0 <main@@Base+0x3bf4>
    4934:	ldr	r3, [r4, #4]
    4938:	cmp	r3, #0
    493c:	beq	49b8 <main@@Base+0x3bfc>
    4940:	ldr	r2, [r3]
    4944:	cmp	r2, r1
    4948:	bne	4954 <main@@Base+0x3b98>
    494c:	b	499c <main@@Base+0x3be0>
    4950:	mov	r3, r0
    4954:	ldr	r0, [r3, #4]
    4958:	cmp	r0, #0
    495c:	beq	4998 <main@@Base+0x3bdc>
    4960:	ldr	r2, [r0]
    4964:	cmp	r2, r1
    4968:	bne	4950 <main@@Base+0x3b94>
    496c:	ldr	r2, [r0, #4]
    4970:	str	r2, [r3, #4]
    4974:	ldr	r2, [r0, #4]
    4978:	cmp	r2, #0
    497c:	streq	r3, [r4, #8]
    4980:	bl	c0c <free@plt>
    4984:	ldr	r3, [r4, #12]
    4988:	mov	r0, #1
    498c:	sub	r3, r3, #1
    4990:	str	r3, [r4, #12]
    4994:	pop	{r4, pc}
    4998:	pop	{r4, pc}
    499c:	ldr	r2, [r3, #4]
    49a0:	mov	r0, r3
    49a4:	mov	r3, #0
    49a8:	str	r2, [r4, #4]
    49ac:	b	4978 <main@@Base+0x3bbc>
    49b0:	mov	r0, r4
    49b4:	pop	{r4, pc}
    49b8:	mov	r0, r3
    49bc:	pop	{r4, pc}
    49c0:	cmp	r1, #0
    49c4:	cmpne	r0, #0
    49c8:	push	{r4, r5, r6, r7, r8, lr}
    49cc:	mov	r8, r0
    49d0:	mov	r5, r1
    49d4:	movne	r6, #0
    49d8:	moveq	r6, #1
    49dc:	mov	r7, r2
    49e0:	beq	4a54 <main@@Base+0x3c98>
    49e4:	ldr	r4, [r0, #4]
    49e8:	cmp	r4, #0
    49ec:	bne	4a04 <main@@Base+0x3c48>
    49f0:	b	4a54 <main@@Base+0x3c98>
    49f4:	cmp	r3, #0
    49f8:	mov	r6, r4
    49fc:	mov	r4, r3
    4a00:	beq	4a54 <main@@Base+0x3c98>
    4a04:	ldr	r0, [r4]
    4a08:	mov	r1, r7
    4a0c:	blx	r5
    4a10:	ldr	r3, [r4, #4]
    4a14:	cmp	r0, #0
    4a18:	beq	49f4 <main@@Base+0x3c38>
    4a1c:	cmp	r6, #0
    4a20:	strne	r3, [r6, #4]
    4a24:	streq	r3, [r8, #4]
    4a28:	mov	r0, r4
    4a2c:	ldrne	r3, [r4, #4]
    4a30:	ldr	r5, [r4]
    4a34:	cmp	r3, #0
    4a38:	streq	r6, [r8, #8]
    4a3c:	bl	c0c <free@plt>
    4a40:	ldr	r3, [r8, #12]
    4a44:	mov	r0, r5
    4a48:	sub	r3, r3, #1
    4a4c:	str	r3, [r8, #12]
    4a50:	pop	{r4, r5, r6, r7, r8, pc}
    4a54:	mov	r0, #0
    4a58:	pop	{r4, r5, r6, r7, r8, pc}
    4a5c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    4a60:	subs	r4, r0, #0
    4a64:	mov	r8, r1
    4a68:	mov	r9, r2
    4a6c:	mov	r7, r3
    4a70:	beq	4ad0 <main@@Base+0x3d14>
    4a74:	cmp	r1, #0
    4a78:	ldr	r6, [r4, #4]
    4a7c:	beq	4ad8 <main@@Base+0x3d1c>
    4a80:	cmp	r6, #0
    4a84:	beq	4ad0 <main@@Base+0x3d14>
    4a88:	ldr	r6, [r4, #12]
    4a8c:	mov	r5, #0
    4a90:	b	4aac <main@@Base+0x3cf0>
    4a94:	cmp	r7, #0
    4a98:	moveq	r6, ip
    4a9c:	beq	4aa8 <main@@Base+0x3cec>
    4aa0:	blx	r7
    4aa4:	ldr	r6, [r4, #12]
    4aa8:	add	r5, r5, #1
    4aac:	mov	r0, r4
    4ab0:	mov	r1, r8
    4ab4:	mov	r2, r9
    4ab8:	bl	49c0 <main@@Base+0x3c04>
    4abc:	ldr	ip, [r4, #12]
    4ac0:	cmp	r6, ip
    4ac4:	bne	4a94 <main@@Base+0x3cd8>
    4ac8:	mov	r0, r5
    4acc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    4ad0:	mov	r0, #0
    4ad4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    4ad8:	cmp	r6, #0
    4adc:	str	r1, [r4, #4]
    4ae0:	str	r1, [r4, #8]
    4ae4:	str	r1, [r4, #12]
    4ae8:	beq	4ad0 <main@@Base+0x3d14>
    4aec:	cmp	r7, #0
    4af0:	ldr	r4, [r6, #4]
    4af4:	add	r8, r8, #1
    4af8:	beq	4b04 <main@@Base+0x3d48>
    4afc:	ldr	r0, [r6]
    4b00:	blx	r7
    4b04:	mov	r0, r6
    4b08:	mov	r6, r4
    4b0c:	bl	c0c <free@plt>
    4b10:	cmp	r4, #0
    4b14:	bne	4aec <main@@Base+0x3d30>
    4b18:	mov	r0, r8
    4b1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    4b20:	push	{r4, lr}
    4b24:	subs	r4, r0, #0
    4b28:	mov	r3, r1
    4b2c:	popeq	{r4, pc}
    4b30:	mov	r1, #0
    4b34:	mov	r2, r1
    4b38:	bl	4a5c <main@@Base+0x3ca0>
    4b3c:	mov	r0, r4
    4b40:	pop	{r4, lr}
    4b44:	b	463c <main@@Base+0x3880>
    4b48:	cmp	r0, #0
    4b4c:	ldrne	r0, [r0, #4]
    4b50:	bx	lr
    4b54:	cmp	r0, #0
    4b58:	ldrne	r0, [r0, #12]
    4b5c:	bx	lr
    4b60:	cmp	r0, #0
    4b64:	beq	4b78 <main@@Base+0x3dbc>
    4b68:	ldr	r0, [r0, #12]
    4b6c:	rsbs	r0, r0, #1
    4b70:	movcc	r0, #0
    4b74:	bx	lr
    4b78:	mov	r0, #1
    4b7c:	bx	lr
    4b80:	push	{r3, r4, r5, lr}
    4b84:	subs	r5, r0, #0
    4b88:	ldr	r4, [pc, #60]	; 4bcc <main@@Base+0x3e10>
    4b8c:	add	r4, pc, r4
    4b90:	beq	4bc4 <main@@Base+0x3e08>
    4b94:	bl	c60 <malloc@plt>
    4b98:	cmp	r0, #0
    4b9c:	popne	{r3, r4, r5, pc}
    4ba0:	ldr	r0, [pc, #40]	; 4bd0 <main@@Base+0x3e14>
    4ba4:	mov	r3, r5
    4ba8:	ldr	r2, [pc, #36]	; 4bd4 <main@@Base+0x3e18>
    4bac:	mov	r1, #1
    4bb0:	ldr	r0, [r4, r0]
    4bb4:	add	r2, pc, r2
    4bb8:	ldr	r0, [r0]
    4bbc:	bl	d20 <__fprintf_chk@plt>
    4bc0:	bl	d8c <abort@plt>
    4bc4:	mov	r0, r5
    4bc8:	pop	{r3, r4, r5, pc}
    4bcc:	andeq	r2, r1, r8, lsl #7
    4bd0:	andeq	r0, r0, r8, asr #1
    4bd4:	muleq	r0, r0, r0
    4bd8:	push	{r2, r3}
    4bdc:	ldr	r3, [pc, #140]	; 4c70 <main@@Base+0x3eb4>
    4be0:	push	{r4, r5, r6, r7, lr}
    4be4:	mov	r5, r0
    4be8:	ldr	r0, [pc, #132]	; 4c74 <main@@Base+0x3eb8>
    4bec:	add	r3, pc, r3
    4bf0:	sub	sp, sp, #100	; 0x64
    4bf4:	mov	r6, r1
    4bf8:	ldr	r4, [r3, r0]
    4bfc:	ldr	r2, [sp, #120]	; 0x78
    4c00:	ldr	r3, [r4]
    4c04:	cmp	r2, #0
    4c08:	cmpne	r5, #0
    4c0c:	str	r3, [sp, #92]	; 0x5c
    4c10:	bne	4c34 <main@@Base+0x3e78>
    4c14:	ldr	r2, [sp, #92]	; 0x5c
    4c18:	ldr	r3, [r4]
    4c1c:	cmp	r2, r3
    4c20:	bne	4c6c <main@@Base+0x3eb0>
    4c24:	add	sp, sp, #100	; 0x64
    4c28:	pop	{r4, r5, r6, r7, lr}
    4c2c:	add	sp, sp, #8
    4c30:	bx	lr
    4c34:	add	r7, sp, #12
    4c38:	mov	r1, #78	; 0x4e
    4c3c:	add	ip, sp, #124	; 0x7c
    4c40:	str	r2, [sp]
    4c44:	mov	r3, r1
    4c48:	mov	r0, r7
    4c4c:	mov	r2, #1
    4c50:	str	ip, [sp, #4]
    4c54:	str	ip, [sp, #8]
    4c58:	bl	c18 <__vsnprintf_chk@plt>
    4c5c:	mov	r0, r7
    4c60:	mov	r1, r6
    4c64:	blx	r5
    4c68:	b	4c14 <main@@Base+0x3e58>
    4c6c:	bl	c30 <__stack_chk_fail@plt>
    4c70:	andeq	r2, r1, r8, lsr #6
    4c74:	andeq	r0, r0, r0, asr #1
    4c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c7c:	sub	sp, sp, #92	; 0x5c
    4c80:	ldr	ip, [pc, #352]	; 4de8 <main@@Base+0x402c>
    4c84:	cmp	r2, #0
    4c88:	cmpne	r3, #0
    4c8c:	str	r3, [sp, #4]
    4c90:	mov	sl, r2
    4c94:	ldr	r5, [pc, #336]	; 4dec <main@@Base+0x4030>
    4c98:	add	ip, pc, ip
    4c9c:	ldr	r3, [sp, #128]	; 0x80
    4ca0:	movne	r4, #0
    4ca4:	moveq	r4, #1
    4ca8:	mov	r2, ip
    4cac:	mov	fp, r1
    4cb0:	str	r3, [sp, #12]
    4cb4:	ldr	r5, [ip, r5]
    4cb8:	ldr	r2, [r5]
    4cbc:	str	r5, [sp, #8]
    4cc0:	str	r2, [sp, #84]	; 0x54
    4cc4:	beq	4dc8 <main@@Base+0x400c>
    4cc8:	add	r6, sp, #88	; 0x58
    4ccc:	ldr	r7, [pc, #284]	; 4df0 <main@@Base+0x4034>
    4cd0:	mov	r5, r4
    4cd4:	mov	r9, #32
    4cd8:	strb	r0, [r6, #-72]!	; 0xffffffb8
    4cdc:	bl	ccc <__ctype_b_loc@plt>
    4ce0:	add	r7, pc, r7
    4ce4:	mov	r8, r0
    4ce8:	b	4cf4 <main@@Base+0x3f38>
    4cec:	cmp	r4, sl
    4cf0:	beq	4d6c <main@@Base+0x3fb0>
    4cf4:	ldrb	r3, [fp, r4]
    4cf8:	add	r0, sp, #88	; 0x58
    4cfc:	add	r1, r5, r5, lsl #1
    4d00:	add	ip, r0, r5
    4d04:	and	r2, r3, #15
    4d08:	add	r1, r0, r1
    4d0c:	ldrb	r0, [r7, r3, lsr #4]
    4d10:	add	r4, r4, #1
    4d14:	ldrb	r5, [r7, r2]
    4d18:	lsl	r2, r3, #1
    4d1c:	strb	r9, [r1, #-71]	; 0xffffffb9
    4d20:	strb	r0, [r1, #-70]	; 0xffffffba
    4d24:	strb	r5, [r1, #-69]	; 0xffffffbb
    4d28:	ldr	r1, [r8]
    4d2c:	ldrh	r2, [r1, r2]
    4d30:	tst	r2, #16384	; 0x4000
    4d34:	moveq	r3, #46	; 0x2e
    4d38:	ands	r5, r4, #15
    4d3c:	strb	r3, [ip, #-21]	; 0xffffffeb
    4d40:	bne	4cec <main@@Base+0x3f30>
    4d44:	strb	r9, [sp, #65]	; 0x41
    4d48:	mov	r0, r6
    4d4c:	strb	r9, [sp, #66]	; 0x42
    4d50:	ldr	r1, [sp, #12]
    4d54:	strb	r5, [sp, #83]	; 0x53
    4d58:	ldr	r3, [sp, #4]
    4d5c:	blx	r3
    4d60:	cmp	r4, sl
    4d64:	strb	r9, [sp, #16]
    4d68:	bne	4cf4 <main@@Base+0x3f38>
    4d6c:	cmp	r5, #0
    4d70:	beq	4dc8 <main@@Base+0x400c>
    4d74:	add	r0, sp, #16
    4d78:	add	r3, r5, r5, lsl #1
    4d7c:	add	r5, r5, #50	; 0x32
    4d80:	add	r3, r0, r3
    4d84:	add	r5, r0, r5
    4d88:	add	ip, sp, #64	; 0x40
    4d8c:	mov	r2, #32
    4d90:	strb	r2, [r3, #1]
    4d94:	mov	r1, #32
    4d98:	strb	r2, [r3, #2]
    4d9c:	strb	r2, [r3, #3]!
    4da0:	cmp	r3, ip
    4da4:	strb	r2, [r5, #1]!
    4da8:	bne	4d90 <main@@Base+0x3fd4>
    4dac:	mov	r3, #0
    4db0:	strb	r1, [sp, #65]	; 0x41
    4db4:	strb	r1, [sp, #66]	; 0x42
    4db8:	strb	r3, [sp, #83]	; 0x53
    4dbc:	ldr	r1, [sp, #12]
    4dc0:	ldr	r3, [sp, #4]
    4dc4:	blx	r3
    4dc8:	ldr	r0, [sp, #8]
    4dcc:	ldr	r2, [sp, #84]	; 0x54
    4dd0:	ldr	r3, [r0]
    4dd4:	cmp	r2, r3
    4dd8:	bne	4de4 <main@@Base+0x4028>
    4ddc:	add	sp, sp, #92	; 0x5c
    4de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4de4:	bl	c30 <__stack_chk_fail@plt>
    4de8:	andeq	r2, r1, ip, ror r2
    4dec:	andeq	r0, r0, r0, asr #1
    4df0:	andeq	r0, r0, r0, asr pc
    4df4:	ldr	r3, [pc, #164]	; 4ea0 <main@@Base+0x40e4>
    4df8:	mov	r2, #1
    4dfc:	ldr	ip, [pc, #160]	; 4ea4 <main@@Base+0x40e8>
    4e00:	add	r3, pc, r3
    4e04:	push	{r4, r5, lr}
    4e08:	sub	sp, sp, #4160	; 0x1040
    4e0c:	ldr	r4, [r3, ip]
    4e10:	sub	sp, sp, #52	; 0x34
    4e14:	ldr	lr, [pc, #140]	; 4ea8 <main@@Base+0x40ec>
    4e18:	add	r5, sp, #108	; 0x6c
    4e1c:	str	r1, [sp, #8]
    4e20:	mov	r1, #4096	; 0x1000
    4e24:	str	r0, [sp, #4]
    4e28:	add	lr, pc, lr
    4e2c:	ldr	ip, [r4]
    4e30:	mov	r3, r1
    4e34:	str	lr, [sp]
    4e38:	add	lr, sp, #8192	; 0x2000
    4e3c:	mov	r0, r5
    4e40:	str	ip, [lr, #-3988]	; 0xfffff06c
    4e44:	bl	db0 <__snprintf_chk@plt>
    4e48:	mov	r1, r5
    4e4c:	add	r5, sp, #16
    4e50:	mov	r0, #3
    4e54:	mov	r2, r5
    4e58:	bl	d74 <__lxstat@plt>
    4e5c:	cmp	r0, #0
    4e60:	movne	r0, #0
    4e64:	bne	4e7c <main@@Base+0x40c0>
    4e68:	ldr	r0, [r5, #16]
    4e6c:	and	r0, r0, #61440	; 0xf000
    4e70:	cmp	r0, #16384	; 0x4000
    4e74:	moveq	r0, #4
    4e78:	movne	r0, #0
    4e7c:	add	r3, sp, #8192	; 0x2000
    4e80:	ldr	r2, [r3, #-3988]	; 0xfffff06c
    4e84:	ldr	r3, [r4]
    4e88:	cmp	r2, r3
    4e8c:	bne	4e9c <main@@Base+0x40e0>
    4e90:	add	sp, sp, #4160	; 0x1040
    4e94:	add	sp, sp, #52	; 0x34
    4e98:	pop	{r4, r5, pc}
    4e9c:	bl	c30 <__stack_chk_fail@plt>
    4ea0:	andeq	r2, r1, r4, lsl r1
    4ea4:	andeq	r0, r0, r0, asr #1
    4ea8:	andeq	r0, r0, ip, lsr lr
    4eac:	ldr	ip, [r0]
    4eb0:	mvn	r2, ip
    4eb4:	rbit	r3, r2
    4eb8:	cmp	r2, #0
    4ebc:	clz	r3, r3
    4ec0:	mvneq	r3, #0
    4ec4:	add	r3, r3, #1
    4ec8:	uxtb	r3, r3
    4ecc:	rsbs	r2, r3, #1
    4ed0:	movcc	r2, #0
    4ed4:	cmp	r3, r1
    4ed8:	movls	r1, r2
    4edc:	orrhi	r1, r2, #1
    4ee0:	cmp	r1, #0
    4ee4:	subeq	r2, r3, #1
    4ee8:	moveq	r1, #1
    4eec:	movne	r3, #0
    4ef0:	orreq	ip, ip, r1, lsl r2
    4ef4:	streq	ip, [r0]
    4ef8:	mov	r0, r3
    4efc:	bx	lr
    4f00:	cmp	r1, #0
    4f04:	subne	r1, r1, #1
    4f08:	ldrne	r3, [r0]
    4f0c:	movne	r2, #1
    4f10:	bicne	r1, r3, r2, lsl r1
    4f14:	strne	r1, [r0]
    4f18:	bx	lr

00004f1c <__libc_csu_init@@Base>:
    4f1c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    4f20:	mov	r7, r0
    4f24:	ldr	r6, [pc, #76]	; 4f78 <__libc_csu_init@@Base+0x5c>
    4f28:	mov	r8, r1
    4f2c:	ldr	r5, [pc, #72]	; 4f7c <__libc_csu_init@@Base+0x60>
    4f30:	mov	r9, r2
    4f34:	add	r6, pc, r6
    4f38:	bl	bb0 <__cxa_finalize@plt-0x20>
    4f3c:	add	r5, pc, r5
    4f40:	rsb	r6, r5, r6
    4f44:	asrs	r6, r6, #2
    4f48:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    4f4c:	sub	r5, r5, #4
    4f50:	mov	r4, #0
    4f54:	add	r4, r4, #1
    4f58:	ldr	r3, [r5, #4]!
    4f5c:	mov	r0, r7
    4f60:	mov	r1, r8
    4f64:	mov	r2, r9
    4f68:	blx	r3
    4f6c:	cmp	r4, r6
    4f70:	bne	4f54 <__libc_csu_init@@Base+0x38>
    4f74:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    4f78:			; <UNDEFINED> instruction: 0x00011dbc
    4f7c:			; <UNDEFINED> instruction: 0x00011db0

00004f80 <__libc_csu_fini@@Base>:
    4f80:	bx	lr

Disassembly of section .fini:

00004f84 <.fini>:
    4f84:	push	{r3, lr}
    4f88:	pop	{r3, pc}
