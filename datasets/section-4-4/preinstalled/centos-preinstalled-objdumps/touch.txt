
centos-preinstalled/touch:     file format elf32-littlearm


Disassembly of section .init:

0001136c <.init>:
   1136c:	push	{r3, lr}
   11370:	bl	12224 <__assert_fail@plt+0xad8>
   11374:	pop	{r3, pc}

Disassembly of section .plt:

00011378 <fdopen@plt-0x14>:
   11378:	push	{lr}		; (str lr, [sp, #-4]!)
   1137c:	ldr	lr, [pc, #4]	; 11388 <fdopen@plt-0x4>
   11380:	add	lr, pc, lr
   11384:	ldr	pc, [lr, #8]!
   11388:	andeq	sl, r1, r8, ror ip

0001138c <fdopen@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3192]!	; 0xc78

00011398 <calloc@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3184]!	; 0xc70

000113a4 <fputs_unlocked@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3176]!	; 0xc68

000113b0 <raise@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3168]!	; 0xc60

000113bc <utimensat@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3160]!	; 0xc58

000113c8 <strcmp@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3152]!	; 0xc50

000113d4 <strtol@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #106496	; 0x1a000
   113dc:	ldr	pc, [ip, #3144]!	; 0xc48

000113e0 <mktime@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #106496	; 0x1a000
   113e8:	ldr	pc, [ip, #3136]!	; 0xc40

000113ec <fflush@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #106496	; 0x1a000
   113f4:	ldr	pc, [ip, #3128]!	; 0xc38

000113f8 <free@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #106496	; 0x1a000
   11400:	ldr	pc, [ip, #3120]!	; 0xc30

00011404 <clock_gettime@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #106496	; 0x1a000
   1140c:	ldr	pc, [ip, #3112]!	; 0xc28

00011410 <_exit@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #106496	; 0x1a000
   11418:	ldr	pc, [ip, #3104]!	; 0xc20

0001141c <memcpy@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #106496	; 0x1a000
   11424:	ldr	pc, [ip, #3096]!	; 0xc18

00011428 <mbsinit@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #106496	; 0x1a000
   11430:	ldr	pc, [ip, #3088]!	; 0xc10

00011434 <time@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #106496	; 0x1a000
   1143c:	ldr	pc, [ip, #3080]!	; 0xc08

00011440 <memcmp@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #106496	; 0x1a000
   11448:	ldr	pc, [ip, #3072]!	; 0xc00

0001144c <dcgettext@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #106496	; 0x1a000
   11454:	ldr	pc, [ip, #3064]!	; 0xbf8

00011458 <__stack_chk_fail@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #106496	; 0x1a000
   11460:	ldr	pc, [ip, #3056]!	; 0xbf0

00011464 <dup2@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #106496	; 0x1a000
   1146c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011470 <realloc@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #106496	; 0x1a000
   11478:	ldr	pc, [ip, #3040]!	; 0xbe0

0001147c <textdomain@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #106496	; 0x1a000
   11484:	ldr	pc, [ip, #3032]!	; 0xbd8

00011488 <chdir@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #106496	; 0x1a000
   11490:	ldr	pc, [ip, #3024]!	; 0xbd0

00011494 <__fxstatat64@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #106496	; 0x1a000
   1149c:	ldr	pc, [ip, #3016]!	; 0xbc8

000114a0 <iswprint@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #106496	; 0x1a000
   114a8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114ac <__fxstat64@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #106496	; 0x1a000
   114b4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114b8 <fwrite@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #106496	; 0x1a000
   114c0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114c4 <lseek64@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #106496	; 0x1a000
   114cc:	ldr	pc, [ip, #2984]!	; 0xba8

000114d0 <__stpcpy_chk@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #106496	; 0x1a000
   114d8:	ldr	pc, [ip, #2976]!	; 0xba0

000114dc <__ctype_get_mb_cur_max@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #106496	; 0x1a000
   114e4:	ldr	pc, [ip, #2968]!	; 0xb98

000114e8 <strcpy@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #106496	; 0x1a000
   114f0:	ldr	pc, [ip, #2960]!	; 0xb90

000114f4 <gettimeofday@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #106496	; 0x1a000
   114fc:	ldr	pc, [ip, #2952]!	; 0xb88

00011500 <__fpending@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #106496	; 0x1a000
   11508:	ldr	pc, [ip, #2944]!	; 0xb80

0001150c <mbrtowc@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #106496	; 0x1a000
   11514:	ldr	pc, [ip, #2936]!	; 0xb78

00011518 <error@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #106496	; 0x1a000
   11520:	ldr	pc, [ip, #2928]!	; 0xb70

00011524 <open64@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #106496	; 0x1a000
   1152c:	ldr	pc, [ip, #2920]!	; 0xb68

00011530 <getenv@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #106496	; 0x1a000
   11538:	ldr	pc, [ip, #2912]!	; 0xb60

0001153c <malloc@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #106496	; 0x1a000
   11544:	ldr	pc, [ip, #2904]!	; 0xb58

00011548 <__libc_start_main@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #106496	; 0x1a000
   11550:	ldr	pc, [ip, #2896]!	; 0xb50

00011554 <__freading@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #106496	; 0x1a000
   1155c:	ldr	pc, [ip, #2888]!	; 0xb48

00011560 <localtime@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #106496	; 0x1a000
   11568:	ldr	pc, [ip, #2880]!	; 0xb40

0001156c <__gmon_start__@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #106496	; 0x1a000
   11574:	ldr	pc, [ip, #2872]!	; 0xb38

00011578 <getopt_long@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #106496	; 0x1a000
   11580:	ldr	pc, [ip, #2864]!	; 0xb30

00011584 <__ctype_b_loc@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #106496	; 0x1a000
   1158c:	ldr	pc, [ip, #2856]!	; 0xb28

00011590 <getcwd@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #106496	; 0x1a000
   11598:	ldr	pc, [ip, #2848]!	; 0xb20

0001159c <exit@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #106496	; 0x1a000
   115a4:	ldr	pc, [ip, #2840]!	; 0xb18

000115a8 <strlen@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #106496	; 0x1a000
   115b0:	ldr	pc, [ip, #2832]!	; 0xb10

000115b4 <strchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #106496	; 0x1a000
   115bc:	ldr	pc, [ip, #2824]!	; 0xb08

000115c0 <setenv@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #106496	; 0x1a000
   115c8:	ldr	pc, [ip, #2816]!	; 0xb00

000115cc <openat64@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #106496	; 0x1a000
   115d4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115d8 <memrchr@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #106496	; 0x1a000
   115e0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115e4 <ungetc@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #106496	; 0x1a000
   115ec:	ldr	pc, [ip, #2792]!	; 0xae8

000115f0 <fcntl@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #106496	; 0x1a000
   115f8:	ldr	pc, [ip, #2784]!	; 0xae0

000115fc <__errno_location@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #106496	; 0x1a000
   11604:	ldr	pc, [ip, #2776]!	; 0xad8

00011608 <__sprintf_chk@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #106496	; 0x1a000
   11610:	ldr	pc, [ip, #2768]!	; 0xad0

00011614 <__cxa_atexit@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #106496	; 0x1a000
   1161c:	ldr	pc, [ip, #2760]!	; 0xac8

00011620 <memset@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #106496	; 0x1a000
   11628:	ldr	pc, [ip, #2752]!	; 0xac0

0001162c <utimes@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #106496	; 0x1a000
   11634:	ldr	pc, [ip, #2744]!	; 0xab8

00011638 <fscanf@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #106496	; 0x1a000
   11640:	ldr	pc, [ip, #2736]!	; 0xab0

00011644 <__printf_chk@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #106496	; 0x1a000
   1164c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011650 <fileno@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #106496	; 0x1a000
   11658:	ldr	pc, [ip, #2720]!	; 0xaa0

0001165c <__fprintf_chk@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #106496	; 0x1a000
   11664:	ldr	pc, [ip, #2712]!	; 0xa98

00011668 <memchr@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #106496	; 0x1a000
   11670:	ldr	pc, [ip, #2704]!	; 0xa90

00011674 <access@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #106496	; 0x1a000
   1167c:	ldr	pc, [ip, #2696]!	; 0xa88

00011680 <fclose@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #106496	; 0x1a000
   11688:	ldr	pc, [ip, #2688]!	; 0xa80

0001168c <fseeko64@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #106496	; 0x1a000
   11694:	ldr	pc, [ip, #2680]!	; 0xa78

00011698 <__uflow@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #106496	; 0x1a000
   116a0:	ldr	pc, [ip, #2672]!	; 0xa70

000116a4 <__overflow@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #106496	; 0x1a000
   116ac:	ldr	pc, [ip, #2664]!	; 0xa68

000116b0 <setlocale@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #106496	; 0x1a000
   116b8:	ldr	pc, [ip, #2656]!	; 0xa60

000116bc <strrchr@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #106496	; 0x1a000
   116c4:	ldr	pc, [ip, #2648]!	; 0xa58

000116c8 <nl_langinfo@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #106496	; 0x1a000
   116d0:	ldr	pc, [ip, #2640]!	; 0xa50

000116d4 <futimens@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #106496	; 0x1a000
   116dc:	ldr	pc, [ip, #2632]!	; 0xa48

000116e0 <fchdir@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #106496	; 0x1a000
   116e8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ec <bindtextdomain@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #106496	; 0x1a000
   116f4:	ldr	pc, [ip, #2616]!	; 0xa38

000116f8 <__xstat64@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #106496	; 0x1a000
   11700:	ldr	pc, [ip, #2608]!	; 0xa30

00011704 <unsetenv@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #106496	; 0x1a000
   1170c:	ldr	pc, [ip, #2600]!	; 0xa28

00011710 <strncmp@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #106496	; 0x1a000
   11718:	ldr	pc, [ip, #2592]!	; 0xa20

0001171c <abort@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #106496	; 0x1a000
   11724:	ldr	pc, [ip, #2584]!	; 0xa18

00011728 <close@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #106496	; 0x1a000
   11730:	ldr	pc, [ip, #2576]!	; 0xa10

00011734 <__lxstat64@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #106496	; 0x1a000
   1173c:	ldr	pc, [ip, #2568]!	; 0xa08

00011740 <futimesat@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #106496	; 0x1a000
   11748:	ldr	pc, [ip, #2560]!	; 0xa00

0001174c <__assert_fail@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #106496	; 0x1a000
   11754:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

00011758 <close_stdout@@Base-0x123c>:
   11758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1175c:	mov	r5, r1
   11760:	ldr	r4, [pc, #2460]	; 12104 <__assert_fail@plt+0x9b8>
   11764:	sub	sp, sp, #180	; 0xb4
   11768:	ldr	r3, [pc, #2456]	; 12108 <__assert_fail@plt+0x9bc>
   1176c:	mov	r6, r0
   11770:	add	r4, pc, r4
   11774:	ldr	r0, [r1]
   11778:	ldr	r2, [pc, #2444]	; 1210c <__assert_fail@plt+0x9c0>
   1177c:	ldr	r3, [r4, r3]
   11780:	ldr	r1, [pc, #2440]	; 12110 <__assert_fail@plt+0x9c4>
   11784:	add	r2, pc, r2
   11788:	str	r2, [sp, #36]	; 0x24
   1178c:	ldr	r3, [r3]
   11790:	add	r1, pc, r1
   11794:	str	r1, [sp, #32]
   11798:	ldr	r8, [pc, #2420]	; 12114 <__assert_fail@plt+0x9c8>
   1179c:	str	r3, [sp, #172]	; 0xac
   117a0:	bl	1502c <close_stdout@@Base+0x2698>
   117a4:	ldr	r1, [pc, #2412]	; 12118 <__assert_fail@plt+0x9cc>
   117a8:	mov	r0, #6
   117ac:	add	r8, pc, r8
   117b0:	ldr	r9, [pc, #2404]	; 1211c <__assert_fail@plt+0x9d0>
   117b4:	add	r1, pc, r1
   117b8:	ldr	sl, [pc, #2400]	; 12120 <__assert_fail@plt+0x9d4>
   117bc:	bl	116b0 <setlocale@plt>
   117c0:	ldr	r1, [pc, #2396]	; 12124 <__assert_fail@plt+0x9d8>
   117c4:	mov	r0, r8
   117c8:	add	r9, pc, r9
   117cc:	add	r1, pc, r1
   117d0:	add	r7, r9, #24
   117d4:	bl	116ec <bindtextdomain@plt>
   117d8:	mov	r0, r8
   117dc:	bl	1147c <textdomain@plt>
   117e0:	ldr	r3, [pc, #2368]	; 12128 <__assert_fail@plt+0x9dc>
   117e4:	ldr	r1, [pc, #2368]	; 1212c <__assert_fail@plt+0x9e0>
   117e8:	add	sl, pc, sl
   117ec:	add	r1, pc, r1
   117f0:	str	r1, [sp, #40]	; 0x28
   117f4:	ldr	r0, [r4, r3]
   117f8:	bl	18ee4 <close_stdout@@Base+0x6550>
   117fc:	ldr	r2, [pc, #2348]	; 12130 <__assert_fail@plt+0x9e4>
   11800:	mov	r3, #0
   11804:	str	r3, [sp, #28]
   11808:	add	r2, pc, r2
   1180c:	mov	r8, r3
   11810:	str	r3, [r2, #16]
   11814:	strb	r3, [r2, #20]
   11818:	strb	r3, [r2, #21]
   1181c:	ldr	r2, [pc, #2320]	; 12134 <__assert_fail@plt+0x9e8>
   11820:	mov	fp, #0
   11824:	mov	r0, r6
   11828:	str	fp, [sp]
   1182c:	mov	r1, r5
   11830:	add	r2, pc, r2
   11834:	mov	r3, r7
   11838:	bl	11578 <getopt_long@plt>
   1183c:	cmn	r0, #1
   11840:	beq	11a10 <__assert_fail@plt+0x2c4>
   11844:	cmp	r0, #102	; 0x66
   11848:	beq	1181c <__assert_fail@plt+0xd0>
   1184c:	bgt	11874 <__assert_fail@plt+0x128>
   11850:	cmp	r0, #97	; 0x61
   11854:	beq	11a9c <__assert_fail@plt+0x350>
   11858:	bgt	118a8 <__assert_fail@plt+0x15c>
   1185c:	cmn	r0, #3
   11860:	beq	11948 <__assert_fail@plt+0x1fc>
   11864:	cmn	r0, #2
   11868:	bne	11a74 <__assert_fail@plt+0x328>
   1186c:	mov	r0, fp
   11870:	bl	12368 <__assert_fail@plt+0xc1c>
   11874:	cmp	r0, #114	; 0x72
   11878:	beq	11a7c <__assert_fail@plt+0x330>
   1187c:	bgt	118c8 <__assert_fail@plt+0x17c>
   11880:	cmp	r0, #104	; 0x68
   11884:	beq	119fc <__assert_fail@plt+0x2b0>
   11888:	cmp	r0, #109	; 0x6d
   1188c:	bne	11a74 <__assert_fail@plt+0x328>
   11890:	ldr	r3, [pc, #2208]	; 12138 <__assert_fail@plt+0x9ec>
   11894:	add	r3, pc, r3
   11898:	ldr	r2, [r3, #16]
   1189c:	orr	r2, r2, #2
   118a0:	str	r2, [r3, #16]
   118a4:	b	1181c <__assert_fail@plt+0xd0>
   118a8:	cmp	r0, #99	; 0x63
   118ac:	beq	11934 <__assert_fail@plt+0x1e8>
   118b0:	cmp	r0, #100	; 0x64
   118b4:	bne	11a74 <__assert_fail@plt+0x328>
   118b8:	ldr	r3, [pc, #2172]	; 1213c <__assert_fail@plt+0x9f0>
   118bc:	ldr	r3, [r4, r3]
   118c0:	ldr	r8, [r3]
   118c4:	b	1181c <__assert_fail@plt+0xd0>
   118c8:	cmp	r0, #116	; 0x74
   118cc:	beq	119b8 <__assert_fail@plt+0x26c>
   118d0:	cmp	r0, #256	; 0x100
   118d4:	bne	11a74 <__assert_fail@plt+0x328>
   118d8:	ldr	r3, [pc, #2144]	; 12140 <__assert_fail@plt+0x9f4>
   118dc:	mov	r0, #4
   118e0:	ldr	r1, [pc, #2132]	; 1213c <__assert_fail@plt+0x9f0>
   118e4:	mov	r2, r9
   118e8:	ldr	fp, [pc, #2132]	; 12144 <__assert_fail@plt+0x9f8>
   118ec:	ldr	r1, [r4, r1]
   118f0:	add	fp, pc, fp
   118f4:	str	r0, [sp]
   118f8:	ldr	ip, [r4, r3]
   118fc:	mov	r3, fp
   11900:	ldr	r0, [pc, #2112]	; 12148 <__assert_fail@plt+0x9fc>
   11904:	ldr	r1, [r1]
   11908:	ldr	ip, [ip]
   1190c:	add	r0, pc, r0
   11910:	str	ip, [sp, #4]
   11914:	bl	128b0 <__assert_fail@plt+0x1164>
   11918:	ldr	r3, [pc, #2092]	; 1214c <__assert_fail@plt+0xa00>
   1191c:	add	r3, pc, r3
   11920:	ldr	r2, [r3, #16]
   11924:	ldr	r1, [fp, r0, lsl #2]
   11928:	orr	r2, r1, r2
   1192c:	str	r2, [r3, #16]
   11930:	b	1181c <__assert_fail@plt+0xd0>
   11934:	ldr	r3, [pc, #2068]	; 12150 <__assert_fail@plt+0xa04>
   11938:	mov	r2, #1
   1193c:	add	r3, pc, r3
   11940:	strb	r2, [r3, #21]
   11944:	b	1181c <__assert_fail@plt+0xd0>
   11948:	ldr	r2, [pc, #2052]	; 12154 <__assert_fail@plt+0xa08>
   1194c:	ldr	r3, [pc, #2052]	; 12158 <__assert_fail@plt+0xa0c>
   11950:	ldr	r1, [pc, #2052]	; 1215c <__assert_fail@plt+0xa10>
   11954:	ldr	r0, [r4, r2]
   11958:	ldr	r3, [r4, r3]
   1195c:	add	r1, pc, r1
   11960:	ldr	r2, [pc, #2040]	; 12160 <__assert_fail@plt+0xa14>
   11964:	ldr	r0, [r0]
   11968:	ldr	r3, [r3]
   1196c:	add	r2, pc, r2
   11970:	str	r1, [sp, #12]
   11974:	str	r2, [sp, #16]
   11978:	ldr	r5, [pc, #2020]	; 12164 <__assert_fail@plt+0xa18>
   1197c:	ldr	r4, [pc, #2020]	; 12168 <__assert_fail@plt+0xa1c>
   11980:	ldr	lr, [pc, #2020]	; 1216c <__assert_fail@plt+0xa20>
   11984:	add	r5, pc, r5
   11988:	ldr	r1, [pc, #2016]	; 12170 <__assert_fail@plt+0xa24>
   1198c:	add	r4, pc, r4
   11990:	ldr	r2, [pc, #2012]	; 12174 <__assert_fail@plt+0xa28>
   11994:	add	lr, pc, lr
   11998:	str	fp, [sp, #20]
   1199c:	add	r1, pc, r1
   119a0:	str	r5, [sp]
   119a4:	add	r2, pc, r2
   119a8:	stmib	sp, {r4, lr}
   119ac:	bl	16d18 <close_stdout@@Base+0x4384>
   119b0:	mov	r0, fp
   119b4:	bl	1159c <exit@plt>
   119b8:	ldr	r3, [pc, #1916]	; 1213c <__assert_fail@plt+0x9f0>
   119bc:	mov	r2, #13
   119c0:	ldr	r0, [sp, #36]	; 0x24
   119c4:	ldr	r3, [r4, r3]
   119c8:	ldr	r1, [r3]
   119cc:	str	r3, [sp, #28]
   119d0:	bl	14c7c <close_stdout@@Base+0x22e8>
   119d4:	subs	fp, r0, #0
   119d8:	beq	11ab4 <__assert_fail@plt+0x368>
   119dc:	mov	r3, #0
   119e0:	str	r3, [sl, #4]
   119e4:	ldm	sl, {r0, r1}
   119e8:	add	r3, sl, #8
   119ec:	mov	r2, #1
   119f0:	str	r2, [sp, #28]
   119f4:	stm	r3, {r0, r1}
   119f8:	b	1181c <__assert_fail@plt+0xd0>
   119fc:	ldr	r3, [pc, #1908]	; 12178 <__assert_fail@plt+0xa2c>
   11a00:	mov	r2, #1
   11a04:	add	r3, pc, r3
   11a08:	strb	r2, [r3, #22]
   11a0c:	b	1181c <__assert_fail@plt+0xd0>
   11a10:	ldr	r3, [pc, #1892]	; 1217c <__assert_fail@plt+0xa30>
   11a14:	add	r3, pc, r3
   11a18:	ldr	r2, [r3, #16]
   11a1c:	cmp	r2, fp
   11a20:	moveq	r2, #3
   11a24:	streq	r2, [r3, #16]
   11a28:	ldr	r3, [sp, #28]
   11a2c:	cmp	r3, #0
   11a30:	beq	11aec <__assert_fail@plt+0x3a0>
   11a34:	ldr	r3, [pc, #1860]	; 12180 <__assert_fail@plt+0xa34>
   11a38:	add	r3, pc, r3
   11a3c:	ldrb	r3, [r3, #20]
   11a40:	cmp	r3, #0
   11a44:	bne	11a50 <__assert_fail@plt+0x304>
   11a48:	cmp	r8, #0
   11a4c:	beq	11b78 <__assert_fail@plt+0x42c>
   11a50:	ldr	r1, [pc, #1836]	; 12184 <__assert_fail@plt+0xa38>
   11a54:	mov	r0, #0
   11a58:	add	r1, pc, r1
   11a5c:	mov	r2, #5
   11a60:	bl	1144c <dcgettext@plt>
   11a64:	mov	r2, r0
   11a68:	mov	r0, #0
   11a6c:	mov	r1, r0
   11a70:	bl	11518 <error@plt>
   11a74:	mov	r0, #1
   11a78:	bl	12368 <__assert_fail@plt+0xc1c>
   11a7c:	ldr	r1, [sp, #32]
   11a80:	mov	r2, #1
   11a84:	ldr	r3, [pc, #1712]	; 1213c <__assert_fail@plt+0x9f0>
   11a88:	strb	r2, [r1, #20]
   11a8c:	ldr	r3, [r4, r3]
   11a90:	ldr	r3, [r3]
   11a94:	str	r3, [r1, #24]
   11a98:	b	1181c <__assert_fail@plt+0xd0>
   11a9c:	ldr	r3, [pc, #1764]	; 12188 <__assert_fail@plt+0xa3c>
   11aa0:	add	r3, pc, r3
   11aa4:	ldr	r2, [r3, #16]
   11aa8:	orr	r2, r2, #1
   11aac:	str	r2, [r3, #16]
   11ab0:	b	1181c <__assert_fail@plt+0xd0>
   11ab4:	ldr	r1, [sp, #40]	; 0x28
   11ab8:	mov	r2, #5
   11abc:	bl	1144c <dcgettext@plt>
   11ac0:	ldr	r3, [sp, #28]
   11ac4:	mov	r2, r0
   11ac8:	ldr	r0, [r3]
   11acc:	str	r2, [sp, #24]
   11ad0:	bl	1687c <close_stdout@@Base+0x3ee8>
   11ad4:	ldr	r2, [sp, #24]
   11ad8:	mov	r1, fp
   11adc:	mov	r3, r0
   11ae0:	mov	r0, #1
   11ae4:	bl	11518 <error@plt>
   11ae8:	b	119dc <__assert_fail@plt+0x290>
   11aec:	ldr	r7, [pc, #1688]	; 1218c <__assert_fail@plt+0xa40>
   11af0:	add	r7, pc, r7
   11af4:	ldrb	r3, [r7, #20]
   11af8:	cmp	r3, #0
   11afc:	beq	11e88 <__assert_fail@plt+0x73c>
   11b00:	ldrb	r3, [r7, #22]
   11b04:	mov	r0, #3
   11b08:	ldr	r1, [r7, #24]
   11b0c:	add	r2, sp, #64	; 0x40
   11b10:	cmp	r3, #0
   11b14:	beq	11f74 <__assert_fail@plt+0x828>
   11b18:	bl	11734 <__lxstat64@plt>
   11b1c:	adds	r0, r0, #0
   11b20:	movne	r0, #1
   11b24:	cmp	r0, #0
   11b28:	bne	11f84 <__assert_fail@plt+0x838>
   11b2c:	ldr	r0, [pc, #1628]	; 12190 <__assert_fail@plt+0xa44>
   11b30:	cmp	r8, #0
   11b34:	ldr	ip, [sp, #140]	; 0x8c
   11b38:	ldr	r1, [sp, #136]	; 0x88
   11b3c:	add	r0, pc, r0
   11b40:	ldr	r2, [sp, #144]	; 0x90
   11b44:	ldr	r3, [sp, #148]	; 0x94
   11b48:	stm	r0, {r1, ip}
   11b4c:	str	r2, [r0, #8]
   11b50:	str	r3, [r0, #12]
   11b54:	beq	11b78 <__assert_fail@plt+0x42c>
   11b58:	ldr	r3, [r0, #16]
   11b5c:	tst	r3, #1
   11b60:	bne	11ff8 <__assert_fail@plt+0x8ac>
   11b64:	ldr	r3, [pc, #1576]	; 12194 <__assert_fail@plt+0xa48>
   11b68:	add	r3, pc, r3
   11b6c:	ldr	r2, [r3, #16]
   11b70:	tst	r2, #2
   11b74:	bne	11fdc <__assert_fail@plt+0x890>
   11b78:	ldr	r3, [pc, #1560]	; 12198 <__assert_fail@plt+0xa4c>
   11b7c:	ldr	r7, [r4, r3]
   11b80:	ldr	r3, [r7]
   11b84:	cmp	r3, r6
   11b88:	beq	11fcc <__assert_fail@plt+0x880>
   11b8c:	ldr	r1, [pc, #1544]	; 1219c <__assert_fail@plt+0xa50>
   11b90:	mov	r8, #1
   11b94:	ldr	sl, [pc, #1540]	; 121a0 <__assert_fail@plt+0xa54>
   11b98:	add	r1, pc, r1
   11b9c:	ldr	r9, [pc, #1536]	; 121a4 <__assert_fail@plt+0xa58>
   11ba0:	str	r1, [sp, #28]
   11ba4:	add	sl, pc, sl
   11ba8:	ldr	r2, [pc, #1528]	; 121a8 <__assert_fail@plt+0xa5c>
   11bac:	add	r9, pc, r9
   11bb0:	ldr	r3, [pc, #1524]	; 121ac <__assert_fail@plt+0xa60>
   11bb4:	ldr	r1, [pc, #1524]	; 121b0 <__assert_fail@plt+0xa64>
   11bb8:	add	r2, pc, r2
   11bbc:	add	r3, pc, r3
   11bc0:	str	r2, [sp, #44]	; 0x2c
   11bc4:	add	r1, pc, r1
   11bc8:	str	r3, [sp, #36]	; 0x24
   11bcc:	str	r1, [sp, #40]	; 0x28
   11bd0:	str	r5, [sp, #32]
   11bd4:	b	11d04 <__assert_fail@plt+0x5b8>
   11bd8:	ldrb	fp, [r4, #1]
   11bdc:	cmp	fp, #0
   11be0:	moveq	r5, #1
   11be4:	bne	11d24 <__assert_fail@plt+0x5d8>
   11be8:	ldr	r3, [sl, #16]
   11bec:	cmp	r3, #3
   11bf0:	beq	11c14 <__assert_fail@plt+0x4c8>
   11bf4:	cmp	r3, #2
   11bf8:	mvneq	r3, #-1073741823	; 0xc0000001
   11bfc:	streq	r3, [sl, #4]
   11c00:	beq	11c14 <__assert_fail@plt+0x4c8>
   11c04:	cmp	r3, #1
   11c08:	bne	12064 <__assert_fail@plt+0x918>
   11c0c:	mvn	r3, #-1073741823	; 0xc0000001
   11c10:	str	r3, [sl, #12]
   11c14:	ldrb	r3, [r9, #28]
   11c18:	cmp	r3, #0
   11c1c:	moveq	r3, r9
   11c20:	movne	r3, #0
   11c24:	cmp	r5, #1
   11c28:	beq	11d50 <__assert_fail@plt+0x604>
   11c2c:	ldr	r2, [pc, #1408]	; 121b4 <__assert_fail@plt+0xa68>
   11c30:	add	r2, pc, r2
   11c34:	ldrb	r2, [r2, #22]
   11c38:	cmp	r2, #0
   11c3c:	beq	11c48 <__assert_fail@plt+0x4fc>
   11c40:	cmn	r5, #1
   11c44:	beq	11d94 <__assert_fail@plt+0x648>
   11c48:	mov	r2, #0
   11c4c:	mov	r0, r5
   11c50:	str	r2, [sp]
   11c54:	mvn	r1, #99	; 0x63
   11c58:	mov	r2, r4
   11c5c:	bl	12bb0 <close_stdout@@Base+0x21c>
   11c60:	rsbs	r3, r0, #1
   11c64:	movcc	r3, #0
   11c68:	cmp	r5, #0
   11c6c:	bne	11c88 <__assert_fail@plt+0x53c>
   11c70:	mov	r0, r5
   11c74:	str	r3, [sp, #24]
   11c78:	bl	11728 <close@plt>
   11c7c:	ldr	r3, [sp, #24]
   11c80:	cmp	r0, #0
   11c84:	bne	11e40 <__assert_fail@plt+0x6f4>
   11c88:	cmp	r3, #0
   11c8c:	bne	11d8c <__assert_fail@plt+0x640>
   11c90:	cmp	fp, #0
   11c94:	bne	11db8 <__assert_fail@plt+0x66c>
   11c98:	ldr	r2, [sp, #36]	; 0x24
   11c9c:	ldrb	r3, [r2, #21]
   11ca0:	cmp	r3, #0
   11ca4:	beq	11cb8 <__assert_fail@plt+0x56c>
   11ca8:	bl	115fc <__errno_location@plt>
   11cac:	ldr	r3, [r0]
   11cb0:	cmp	r3, #2
   11cb4:	beq	11d8c <__assert_fail@plt+0x640>
   11cb8:	bl	115fc <__errno_location@plt>
   11cbc:	ldr	r1, [sp, #40]	; 0x28
   11cc0:	mov	r2, #5
   11cc4:	ldr	fp, [r0]
   11cc8:	mov	r0, #0
   11ccc:	bl	1144c <dcgettext@plt>
   11cd0:	mov	r5, r0
   11cd4:	mov	r0, r4
   11cd8:	bl	1687c <close_stdout@@Base+0x3ee8>
   11cdc:	mov	r1, fp
   11ce0:	mov	r2, r5
   11ce4:	mov	r3, r0
   11ce8:	mov	r0, #0
   11cec:	bl	11518 <error@plt>
   11cf0:	mov	ip, #0
   11cf4:	ldr	r3, [r7]
   11cf8:	and	r8, ip, r8
   11cfc:	add	r3, r3, #1
   11d00:	str	r3, [r7]
   11d04:	ldr	r3, [r7]
   11d08:	cmp	r6, r3
   11d0c:	ble	11df4 <__assert_fail@plt+0x6a8>
   11d10:	ldr	r2, [sp, #32]
   11d14:	ldr	r4, [r2, r3, lsl #2]
   11d18:	ldrb	r3, [r4]
   11d1c:	cmp	r3, #45	; 0x2d
   11d20:	beq	11bd8 <__assert_fail@plt+0x48c>
   11d24:	ldr	r1, [sp, #28]
   11d28:	ldrb	r3, [r1, #21]
   11d2c:	cmp	r3, #0
   11d30:	bne	11d44 <__assert_fail@plt+0x5f8>
   11d34:	ldr	r2, [sp, #28]
   11d38:	ldrb	fp, [r2, #22]
   11d3c:	cmp	fp, #0
   11d40:	beq	11e00 <__assert_fail@plt+0x6b4>
   11d44:	mov	fp, #0
   11d48:	mvn	r5, #0
   11d4c:	b	11be8 <__assert_fail@plt+0x49c>
   11d50:	mov	r2, #0
   11d54:	mov	r0, r5
   11d58:	str	r2, [sp]
   11d5c:	mvn	r1, #99	; 0x63
   11d60:	bl	12bb0 <close_stdout@@Base+0x21c>
   11d64:	cmp	r0, #0
   11d68:	beq	11d8c <__assert_fail@plt+0x640>
   11d6c:	bl	115fc <__errno_location@plt>
   11d70:	ldr	r3, [r0]
   11d74:	cmp	r3, #9
   11d78:	bne	11c90 <__assert_fail@plt+0x544>
   11d7c:	ldr	r1, [sp, #44]	; 0x2c
   11d80:	ldrb	r3, [r1, #21]
   11d84:	cmp	r3, #0
   11d88:	beq	11c90 <__assert_fail@plt+0x544>
   11d8c:	mov	ip, #1
   11d90:	b	11cf4 <__assert_fail@plt+0x5a8>
   11d94:	mov	r2, #256	; 0x100
   11d98:	mov	r0, r5
   11d9c:	str	r2, [sp]
   11da0:	mvn	r1, #99	; 0x63
   11da4:	mov	r2, r4
   11da8:	bl	12bb0 <close_stdout@@Base+0x21c>
   11dac:	rsbs	r3, r0, #1
   11db0:	movcc	r3, #0
   11db4:	b	11c88 <__assert_fail@plt+0x53c>
   11db8:	ldr	r1, [pc, #1016]	; 121b8 <__assert_fail@plt+0xa6c>
   11dbc:	mov	r2, #5
   11dc0:	mov	r0, #0
   11dc4:	add	r1, pc, r1
   11dc8:	bl	1144c <dcgettext@plt>
   11dcc:	mov	r5, r0
   11dd0:	mov	r0, r4
   11dd4:	bl	1687c <close_stdout@@Base+0x3ee8>
   11dd8:	mov	r2, r5
   11ddc:	mov	r1, fp
   11de0:	mov	r3, r0
   11de4:	mov	r0, #0
   11de8:	bl	11518 <error@plt>
   11dec:	mov	ip, #0
   11df0:	b	11cf4 <__assert_fail@plt+0x5a8>
   11df4:	rsbs	r0, r8, #1
   11df8:	movcc	r0, #0
   11dfc:	bl	1159c <exit@plt>
   11e00:	mov	r0, fp
   11e04:	mov	r1, r4
   11e08:	movw	r2, #2369	; 0x941
   11e0c:	movw	r3, #438	; 0x1b6
   11e10:	bl	12b50 <close_stdout@@Base+0x1bc>
   11e14:	cmn	r0, #1
   11e18:	mov	r5, r0
   11e1c:	bne	11be8 <__assert_fail@plt+0x49c>
   11e20:	bl	115fc <__errno_location@plt>
   11e24:	ldr	fp, [r0]
   11e28:	sub	r3, fp, #21
   11e2c:	cmp	r3, #1
   11e30:	bls	11d44 <__assert_fail@plt+0x5f8>
   11e34:	cmp	fp, #1
   11e38:	moveq	fp, #0
   11e3c:	b	11be8 <__assert_fail@plt+0x49c>
   11e40:	bl	115fc <__errno_location@plt>
   11e44:	ldr	r1, [pc, #880]	; 121bc <__assert_fail@plt+0xa70>
   11e48:	mov	r2, #5
   11e4c:	add	r1, pc, r1
   11e50:	ldr	fp, [r0]
   11e54:	mov	r0, r5
   11e58:	bl	1144c <dcgettext@plt>
   11e5c:	mov	r2, r0
   11e60:	mov	r0, r4
   11e64:	str	r2, [sp, #24]
   11e68:	bl	1687c <close_stdout@@Base+0x3ee8>
   11e6c:	mov	r1, fp
   11e70:	ldr	r2, [sp, #24]
   11e74:	mov	r3, r0
   11e78:	mov	r0, r5
   11e7c:	bl	11518 <error@plt>
   11e80:	mov	ip, r5
   11e84:	b	11cf4 <__assert_fail@plt+0x5a8>
   11e88:	cmp	r8, #0
   11e8c:	beq	11f20 <__assert_fail@plt+0x7d4>
   11e90:	add	r9, sp, #48	; 0x30
   11e94:	mov	r0, r9
   11e98:	bl	12c3c <close_stdout@@Base+0x2a8>
   11e9c:	mov	r0, r7
   11ea0:	mov	r1, r8
   11ea4:	mov	r2, r9
   11ea8:	bl	1231c <__assert_fail@plt+0xbd0>
   11eac:	ldr	r3, [r7, #16]
   11eb0:	ldm	r7, {r0, r1}
   11eb4:	add	r7, r7, #8
   11eb8:	cmp	r3, #3
   11ebc:	stm	r7, {r0, r1}
   11ec0:	bne	11b78 <__assert_fail@plt+0x42c>
   11ec4:	ldr	r3, [sp, #48]	; 0x30
   11ec8:	mov	ip, r0
   11ecc:	cmp	r0, r3
   11ed0:	bne	11b78 <__assert_fail@plt+0x42c>
   11ed4:	ldr	r2, [sp, #52]	; 0x34
   11ed8:	mov	r3, r1
   11edc:	cmp	r1, r2
   11ee0:	bne	11b78 <__assert_fail@plt+0x42c>
   11ee4:	add	r2, sp, #56	; 0x38
   11ee8:	mov	r1, r8
   11eec:	add	r0, sp, #64	; 0x40
   11ef0:	eor	ip, ip, #1
   11ef4:	str	r3, [sp, #60]	; 0x3c
   11ef8:	str	ip, [sp, #56]	; 0x38
   11efc:	bl	1231c <__assert_fail@plt+0xbd0>
   11f00:	ldr	r2, [sp, #64]	; 0x40
   11f04:	ldr	r3, [sp, #56]	; 0x38
   11f08:	cmp	r2, r3
   11f0c:	bne	11b78 <__assert_fail@plt+0x42c>
   11f10:	ldr	r2, [sp, #68]	; 0x44
   11f14:	ldr	r3, [sp, #60]	; 0x3c
   11f18:	cmp	r2, r3
   11f1c:	bne	11b78 <__assert_fail@plt+0x42c>
   11f20:	ldr	r3, [pc, #624]	; 12198 <__assert_fail@plt+0xa4c>
   11f24:	ldr	r7, [r4, r3]
   11f28:	ldr	r3, [r7]
   11f2c:	rsb	r3, r3, r6
   11f30:	cmp	r3, #1
   11f34:	ble	11f4c <__assert_fail@plt+0x800>
   11f38:	bl	14f94 <close_stdout@@Base+0x2600>
   11f3c:	movw	r3, #3503	; 0xdaf
   11f40:	movt	r3, #3
   11f44:	cmp	r0, r3
   11f48:	ble	12008 <__assert_fail@plt+0x8bc>
   11f4c:	ldr	r3, [pc, #620]	; 121c0 <__assert_fail@plt+0xa74>
   11f50:	add	r3, pc, r3
   11f54:	ldr	r2, [r3, #16]
   11f58:	cmp	r2, #3
   11f5c:	mvnne	r2, #-1073741824	; 0xc0000000
   11f60:	strne	r2, [r3, #4]
   11f64:	strne	r2, [r3, #12]
   11f68:	moveq	r2, #1
   11f6c:	strbeq	r2, [r3, #28]
   11f70:	b	11b80 <__assert_fail@plt+0x434>
   11f74:	bl	116f8 <__xstat64@plt>
   11f78:	adds	r0, r0, #0
   11f7c:	movne	r0, #1
   11f80:	b	11b24 <__assert_fail@plt+0x3d8>
   11f84:	bl	115fc <__errno_location@plt>
   11f88:	ldr	r1, [pc, #564]	; 121c4 <__assert_fail@plt+0xa78>
   11f8c:	mov	r2, #5
   11f90:	add	r1, pc, r1
   11f94:	ldr	r7, [r0]
   11f98:	mov	r0, #0
   11f9c:	bl	1144c <dcgettext@plt>
   11fa0:	ldr	r3, [pc, #544]	; 121c8 <__assert_fail@plt+0xa7c>
   11fa4:	add	r3, pc, r3
   11fa8:	mov	r9, r0
   11fac:	ldr	r0, [r3, #24]
   11fb0:	bl	1687c <close_stdout@@Base+0x3ee8>
   11fb4:	mov	r1, r7
   11fb8:	mov	r2, r9
   11fbc:	mov	r3, r0
   11fc0:	mov	r0, #1
   11fc4:	bl	11518 <error@plt>
   11fc8:	b	11b2c <__assert_fail@plt+0x3e0>
   11fcc:	ldr	r1, [pc, #504]	; 121cc <__assert_fail@plt+0xa80>
   11fd0:	mov	r0, #0
   11fd4:	add	r1, pc, r1
   11fd8:	b	11a5c <__assert_fail@plt+0x310>
   11fdc:	add	r0, r3, #8
   11fe0:	mov	r1, r8
   11fe4:	mov	r2, r0
   11fe8:	bl	1231c <__assert_fail@plt+0xbd0>
   11fec:	ldr	r3, [pc, #420]	; 12198 <__assert_fail@plt+0xa4c>
   11ff0:	ldr	r7, [r4, r3]
   11ff4:	b	11b80 <__assert_fail@plt+0x434>
   11ff8:	mov	r1, r8
   11ffc:	mov	r2, r0
   12000:	bl	1231c <__assert_fail@plt+0xbd0>
   12004:	b	11b64 <__assert_fail@plt+0x418>
   12008:	ldr	r4, [pc, #448]	; 121d0 <__assert_fail@plt+0xa84>
   1200c:	mov	r2, #18
   12010:	ldr	r3, [r7]
   12014:	add	r4, pc, r4
   12018:	ldr	r1, [r5, r3, lsl #2]
   1201c:	mov	r0, r4
   12020:	bl	14c7c <close_stdout@@Base+0x22e8>
   12024:	cmp	r0, #0
   12028:	beq	11f4c <__assert_fail@plt+0x800>
   1202c:	mov	r3, #0
   12030:	str	r3, [r4, #4]
   12034:	ldm	r4, {r0, r1}
   12038:	add	r3, r4, #8
   1203c:	stm	r3, {r0, r1}
   12040:	ldr	r0, [pc, #396]	; 121d4 <__assert_fail@plt+0xa88>
   12044:	add	r0, pc, r0
   12048:	bl	11530 <getenv@plt>
   1204c:	subs	r8, r0, #0
   12050:	beq	12088 <__assert_fail@plt+0x93c>
   12054:	ldr	r3, [r7]
   12058:	add	r3, r3, #1
   1205c:	str	r3, [r7]
   12060:	b	11b80 <__assert_fail@plt+0x434>
   12064:	ldr	r3, [pc, #364]	; 121d8 <__assert_fail@plt+0xa8c>
   12068:	mov	r2, #152	; 0x98
   1206c:	ldr	r0, [pc, #360]	; 121dc <__assert_fail@plt+0xa90>
   12070:	ldr	r1, [pc, #360]	; 121e0 <__assert_fail@plt+0xa94>
   12074:	add	r3, pc, r3
   12078:	add	r0, pc, r0
   1207c:	add	r3, r3, #20
   12080:	add	r1, pc, r1
   12084:	bl	1174c <__assert_fail@plt>
   12088:	mov	r0, r4
   1208c:	bl	11560 <localtime@plt>
   12090:	subs	r4, r0, #0
   12094:	beq	12054 <__assert_fail@plt+0x908>
   12098:	ldr	r1, [pc, #324]	; 121e4 <__assert_fail@plt+0xa98>
   1209c:	mov	r0, r8
   120a0:	mov	r2, #5
   120a4:	add	r1, pc, r1
   120a8:	bl	1144c <dcgettext@plt>
   120ac:	ldr	ip, [r4, #20]
   120b0:	ldr	r3, [r7]
   120b4:	mov	r1, r8
   120b8:	add	ip, ip, #1888	; 0x760
   120bc:	add	ip, ip, #12
   120c0:	str	ip, [sp]
   120c4:	ldr	ip, [r4, #16]
   120c8:	add	ip, ip, #1
   120cc:	str	ip, [sp, #4]
   120d0:	ldr	ip, [r4, #12]
   120d4:	str	ip, [sp, #8]
   120d8:	ldr	ip, [r4, #8]
   120dc:	str	ip, [sp, #12]
   120e0:	ldr	ip, [r4, #4]
   120e4:	str	ip, [sp, #16]
   120e8:	ldr	ip, [r4]
   120ec:	str	ip, [sp, #20]
   120f0:	ldr	r3, [r5, r3, lsl #2]
   120f4:	mov	r2, r0
   120f8:	mov	r0, r8
   120fc:	bl	11518 <error@plt>
   12100:	b	12054 <__assert_fail@plt+0x908>
   12104:	andeq	sl, r1, r8, lsl #17
   12108:	andeq	r0, r0, r4, asr r1
   1210c:	andeq	sl, r1, r8, asr sl
   12110:	andeq	sl, r1, ip, asr #20
   12114:	andeq	r7, r0, r8, asr sp
   12118:	andeq	r7, r0, r0, lsl lr
   1211c:	andeq	r9, r1, r0, ror #31
   12120:	strdeq	sl, [r1], -r4
   12124:	strdeq	r7, [r0], -ip
   12128:	andeq	r0, r0, r8, ror #2
   1212c:	andeq	r7, r0, r8, asr #14
   12130:	ldrdeq	sl, [r1], -r4
   12134:	andeq	r7, r0, r0, lsl #28
   12138:	andeq	sl, r1, r8, asr #18
   1213c:	andeq	r0, r0, ip, lsl #3
   12140:	andeq	r0, r0, r4, ror #2
   12144:	andeq	r7, r0, r8, lsr #12
   12148:	ldrdeq	r7, [r0], -r0
   1214c:	andeq	sl, r1, r0, asr #17
   12150:	andeq	sl, r1, r0, lsr #17
   12154:	andeq	r0, r0, r4, ror r1
   12158:	andeq	r0, r0, ip, asr r1
   1215c:			; <UNDEFINED> instruction: 0x00007cb8
   12160:			; <UNDEFINED> instruction: 0x00007cb8
   12164:	andeq	r7, r0, r8, ror #24
   12168:	andeq	r7, r0, ip, ror #24
   1216c:	andeq	r7, r0, r4, ror ip
   12170:	andeq	r7, r0, r8, asr #24
   12174:	andeq	r7, r0, ip, asr fp
   12178:	ldrdeq	sl, [r1], -r8
   1217c:	andeq	sl, r1, r8, asr #15
   12180:	andeq	sl, r1, r4, lsr #15
   12184:	andeq	r7, r0, r4, ror #23
   12188:	andeq	sl, r1, ip, lsr r7
   1218c:	andeq	sl, r1, ip, ror #13
   12190:	andeq	sl, r1, r0, lsr #13
   12194:	andeq	sl, r1, r4, ror r6
   12198:	andeq	r0, r0, r8, asr r1
   1219c:	andeq	sl, r1, r4, asr #12
   121a0:	andeq	sl, r1, r8, lsr r6
   121a4:	andeq	sl, r1, r0, lsr r6
   121a8:	andeq	sl, r1, r4, lsr #12
   121ac:	andeq	sl, r1, r0, lsr #12
   121b0:	andeq	r7, r0, r0, lsl #23
   121b4:	andeq	sl, r1, ip, lsr #11
   121b8:	andeq	r7, r0, r0, ror r9
   121bc:	ldrdeq	r7, [r0], -r4
   121c0:	andeq	sl, r1, ip, lsl #5
   121c4:	ldrdeq	r7, [r0], -ip
   121c8:	andeq	sl, r1, r8, lsr r2
   121cc:	andeq	r7, r0, r4, lsl r7
   121d0:	andeq	sl, r1, r8, asr #3
   121d4:	andeq	r7, r0, r8, asr #12
   121d8:	andeq	r6, r0, r4, lsr #29
   121dc:	andeq	r7, r0, r8, lsl #13
   121e0:	muleq	r0, r4, r6
   121e4:	strdeq	r7, [r0], -r8
   121e8:	mov	fp, #0
   121ec:	mov	lr, #0
   121f0:	pop	{r1}		; (ldr r1, [sp], #4)
   121f4:	mov	r2, sp
   121f8:	push	{r2}		; (str r2, [sp, #-4]!)
   121fc:	push	{r0}		; (str r0, [sp, #-4]!)
   12200:	ldr	ip, [pc, #16]	; 12218 <__assert_fail@plt+0xacc>
   12204:	push	{ip}		; (str ip, [sp, #-4]!)
   12208:	ldr	r0, [pc, #12]	; 1221c <__assert_fail@plt+0xad0>
   1220c:	ldr	r3, [pc, #12]	; 12220 <__assert_fail@plt+0xad4>
   12210:	bl	11548 <__libc_start_main@plt>
   12214:	bl	1171c <abort@plt>
   12218:	andeq	r8, r1, r0, ror #29
   1221c:	andeq	r1, r1, r8, asr r7
   12220:	andeq	r8, r1, ip, ror lr
   12224:	ldr	r3, [pc, #20]	; 12240 <__assert_fail@plt+0xaf4>
   12228:	ldr	r2, [pc, #20]	; 12244 <__assert_fail@plt+0xaf8>
   1222c:	add	r3, pc, r3
   12230:	ldr	r2, [r3, r2]
   12234:	cmp	r2, #0
   12238:	bxeq	lr
   1223c:	b	1156c <__gmon_start__@plt>
   12240:	andeq	r9, r1, ip, asr #27
   12244:	andeq	r0, r0, ip, ror #2
   12248:	push	{r3, lr}
   1224c:	movw	r0, #49632	; 0xc1e0
   12250:	ldr	r3, [pc, #36]	; 1227c <__assert_fail@plt+0xb30>
   12254:	movt	r0, #2
   12258:	rsb	r3, r0, r3
   1225c:	cmp	r3, #6
   12260:	popls	{r3, pc}
   12264:	movw	r3, #0
   12268:	movt	r3, #0
   1226c:	cmp	r3, #0
   12270:	popeq	{r3, pc}
   12274:	blx	r3
   12278:	pop	{r3, pc}
   1227c:	andeq	ip, r2, r3, ror #3
   12280:	push	{r3, lr}
   12284:	movw	r0, #49632	; 0xc1e0
   12288:	movw	r3, #49632	; 0xc1e0
   1228c:	movt	r0, #2
   12290:	movt	r3, #2
   12294:	rsb	r3, r0, r3
   12298:	asr	r3, r3, #2
   1229c:	add	r3, r3, r3, lsr #31
   122a0:	asrs	r1, r3, #1
   122a4:	popeq	{r3, pc}
   122a8:	movw	r2, #0
   122ac:	movt	r2, #0
   122b0:	cmp	r2, #0
   122b4:	popeq	{r3, pc}
   122b8:	blx	r2
   122bc:	pop	{r3, pc}
   122c0:	push	{r4, lr}
   122c4:	movw	r4, #49632	; 0xc1e0
   122c8:	movt	r4, #2
   122cc:	ldrb	r3, [r4]
   122d0:	cmp	r3, #0
   122d4:	popne	{r4, pc}
   122d8:	bl	12248 <__assert_fail@plt+0xafc>
   122dc:	mov	r3, #1
   122e0:	strb	r3, [r4]
   122e4:	pop	{r4, pc}
   122e8:	movw	r0, #47020	; 0xb7ac
   122ec:	movt	r0, #2
   122f0:	push	{r3, lr}
   122f4:	ldr	r3, [r0]
   122f8:	cmp	r3, #0
   122fc:	beq	12314 <__assert_fail@plt+0xbc8>
   12300:	movw	r3, #0
   12304:	movt	r3, #0
   12308:	cmp	r3, #0
   1230c:	beq	12314 <__assert_fail@plt+0xbc8>
   12310:	blx	r3
   12314:	pop	{r3, lr}
   12318:	b	12280 <__assert_fail@plt+0xb34>
   1231c:	push	{r4, r5, r6, lr}
   12320:	mov	r4, r1
   12324:	bl	14260 <close_stdout@@Base+0x18cc>
   12328:	subs	r5, r0, #0
   1232c:	popne	{r4, r5, r6, pc}
   12330:	ldr	r1, [pc, #44]	; 12364 <__assert_fail@plt+0xc18>
   12334:	mov	r2, #5
   12338:	add	r1, pc, r1
   1233c:	bl	1144c <dcgettext@plt>
   12340:	mov	r6, r0
   12344:	mov	r0, r4
   12348:	bl	1687c <close_stdout@@Base+0x3ee8>
   1234c:	mov	r2, r6
   12350:	mov	r1, r5
   12354:	pop	{r4, r5, r6, lr}
   12358:	mov	r3, r0
   1235c:	mov	r0, #1
   12360:	b	11518 <error@plt>
   12364:	strdeq	r6, [r0], -ip
   12368:	push	{r4, r5, r6, lr}
   1236c:	subs	r4, r0, #0
   12370:	ldr	r5, [pc, #540]	; 12594 <__assert_fail@plt+0xe48>
   12374:	add	r5, pc, r5
   12378:	beq	123c0 <__assert_fail@plt+0xc74>
   1237c:	ldr	r3, [pc, #532]	; 12598 <__assert_fail@plt+0xe4c>
   12380:	mov	r2, #5
   12384:	ldr	r1, [pc, #528]	; 1259c <__assert_fail@plt+0xe50>
   12388:	mov	r0, #0
   1238c:	ldr	r3, [r5, r3]
   12390:	add	r1, pc, r1
   12394:	ldr	r6, [r3]
   12398:	bl	1144c <dcgettext@plt>
   1239c:	ldr	r3, [pc, #508]	; 125a0 <__assert_fail@plt+0xe54>
   123a0:	mov	r1, #1
   123a4:	ldr	r3, [r5, r3]
   123a8:	ldr	r3, [r3]
   123ac:	mov	r2, r0
   123b0:	mov	r0, r6
   123b4:	bl	1165c <__fprintf_chk@plt>
   123b8:	mov	r0, r4
   123bc:	bl	1159c <exit@plt>
   123c0:	ldr	r1, [pc, #476]	; 125a4 <__assert_fail@plt+0xe58>
   123c4:	mov	r2, #5
   123c8:	add	r1, pc, r1
   123cc:	bl	1144c <dcgettext@plt>
   123d0:	ldr	r3, [pc, #456]	; 125a0 <__assert_fail@plt+0xe54>
   123d4:	ldr	r6, [r5, r3]
   123d8:	ldr	r2, [r6]
   123dc:	mov	r1, r0
   123e0:	mov	r0, #1
   123e4:	bl	11644 <__printf_chk@plt>
   123e8:	ldr	r1, [pc, #440]	; 125a8 <__assert_fail@plt+0xe5c>
   123ec:	mov	r2, #5
   123f0:	mov	r0, r4
   123f4:	add	r1, pc, r1
   123f8:	bl	1144c <dcgettext@plt>
   123fc:	ldr	r3, [pc, #424]	; 125ac <__assert_fail@plt+0xe60>
   12400:	ldr	r5, [r5, r3]
   12404:	ldr	r1, [r5]
   12408:	bl	113a4 <fputs_unlocked@plt>
   1240c:	ldr	r1, [pc, #412]	; 125b0 <__assert_fail@plt+0xe64>
   12410:	mov	r2, #5
   12414:	mov	r0, r4
   12418:	add	r1, pc, r1
   1241c:	bl	1144c <dcgettext@plt>
   12420:	ldr	r1, [r5]
   12424:	bl	113a4 <fputs_unlocked@plt>
   12428:	ldr	r1, [pc, #388]	; 125b4 <__assert_fail@plt+0xe68>
   1242c:	mov	r2, #5
   12430:	mov	r0, r4
   12434:	add	r1, pc, r1
   12438:	bl	1144c <dcgettext@plt>
   1243c:	ldr	r1, [r5]
   12440:	bl	113a4 <fputs_unlocked@plt>
   12444:	ldr	r1, [pc, #364]	; 125b8 <__assert_fail@plt+0xe6c>
   12448:	mov	r2, #5
   1244c:	mov	r0, r4
   12450:	add	r1, pc, r1
   12454:	bl	1144c <dcgettext@plt>
   12458:	ldr	r1, [r5]
   1245c:	bl	113a4 <fputs_unlocked@plt>
   12460:	ldr	r1, [pc, #340]	; 125bc <__assert_fail@plt+0xe70>
   12464:	mov	r2, #5
   12468:	mov	r0, r4
   1246c:	add	r1, pc, r1
   12470:	bl	1144c <dcgettext@plt>
   12474:	ldr	r1, [r5]
   12478:	bl	113a4 <fputs_unlocked@plt>
   1247c:	ldr	r1, [pc, #316]	; 125c0 <__assert_fail@plt+0xe74>
   12480:	mov	r2, #5
   12484:	mov	r0, r4
   12488:	add	r1, pc, r1
   1248c:	bl	1144c <dcgettext@plt>
   12490:	ldr	r1, [r5]
   12494:	bl	113a4 <fputs_unlocked@plt>
   12498:	ldr	r1, [pc, #292]	; 125c4 <__assert_fail@plt+0xe78>
   1249c:	mov	r2, #5
   124a0:	mov	r0, r4
   124a4:	add	r1, pc, r1
   124a8:	bl	1144c <dcgettext@plt>
   124ac:	ldr	r1, [r5]
   124b0:	bl	113a4 <fputs_unlocked@plt>
   124b4:	ldr	r1, [pc, #268]	; 125c8 <__assert_fail@plt+0xe7c>
   124b8:	mov	r2, #5
   124bc:	mov	r0, r4
   124c0:	add	r1, pc, r1
   124c4:	bl	1144c <dcgettext@plt>
   124c8:	ldr	r1, [r5]
   124cc:	bl	113a4 <fputs_unlocked@plt>
   124d0:	ldr	r1, [pc, #244]	; 125cc <__assert_fail@plt+0xe80>
   124d4:	mov	r2, #5
   124d8:	mov	r0, r4
   124dc:	add	r1, pc, r1
   124e0:	bl	1144c <dcgettext@plt>
   124e4:	ldr	r2, [pc, #228]	; 125d0 <__assert_fail@plt+0xe84>
   124e8:	ldr	r3, [pc, #228]	; 125d4 <__assert_fail@plt+0xe88>
   124ec:	add	r2, pc, r2
   124f0:	add	r3, pc, r3
   124f4:	mov	r1, r0
   124f8:	mov	r0, #1
   124fc:	bl	11644 <__printf_chk@plt>
   12500:	mov	r0, #5
   12504:	mov	r1, r4
   12508:	bl	116b0 <setlocale@plt>
   1250c:	cmp	r0, #0
   12510:	beq	1252c <__assert_fail@plt+0xde0>
   12514:	ldr	r1, [pc, #188]	; 125d8 <__assert_fail@plt+0xe8c>
   12518:	mov	r2, #3
   1251c:	add	r1, pc, r1
   12520:	bl	11710 <strncmp@plt>
   12524:	cmp	r0, #0
   12528:	bne	12560 <__assert_fail@plt+0xe14>
   1252c:	ldr	r1, [pc, #168]	; 125dc <__assert_fail@plt+0xe90>
   12530:	mov	r2, #5
   12534:	mov	r0, #0
   12538:	add	r1, pc, r1
   1253c:	bl	1144c <dcgettext@plt>
   12540:	mov	r5, r0
   12544:	ldr	r0, [r6]
   12548:	bl	12aac <close_stdout@@Base+0x118>
   1254c:	mov	r1, r5
   12550:	mov	r2, r0
   12554:	mov	r0, #1
   12558:	bl	11644 <__printf_chk@plt>
   1255c:	b	123b8 <__assert_fail@plt+0xc6c>
   12560:	ldr	r1, [pc, #120]	; 125e0 <__assert_fail@plt+0xe94>
   12564:	mov	r2, #5
   12568:	mov	r0, r4
   1256c:	add	r1, pc, r1
   12570:	bl	1144c <dcgettext@plt>
   12574:	mov	r5, r0
   12578:	ldr	r0, [r6]
   1257c:	bl	12aac <close_stdout@@Base+0x118>
   12580:	mov	r1, r5
   12584:	mov	r2, r0
   12588:	mov	r0, #1
   1258c:	bl	11644 <__printf_chk@plt>
   12590:	b	1252c <__assert_fail@plt+0xde0>
   12594:	andeq	r9, r1, r4, lsl #25
   12598:	andeq	r0, r0, r0, ror #2
   1259c:			; <UNDEFINED> instruction: 0x00006bbc
   125a0:	andeq	r0, r0, r0, lsl #3
   125a4:	andeq	r6, r0, ip, lsr #23
   125a8:	andeq	r6, r0, r0, lsr #23
   125ac:	andeq	r0, r0, r4, ror r1
   125b0:	andeq	r6, r0, r0, lsr #25
   125b4:	ldrdeq	r6, [r0], -r0
   125b8:	andeq	r6, r0, r8, lsl #27
   125bc:	andeq	r6, r0, r4, ror lr
   125c0:			; <UNDEFINED> instruction: 0x00006fb0
   125c4:	andeq	r6, r0, r4, asr #31
   125c8:	andeq	r6, r0, r0, ror #31
   125cc:	andeq	r7, r0, ip
   125d0:	andeq	r7, r0, r4, lsl r0
   125d4:	andeq	r7, r0, r0, lsr #32
   125d8:	andeq	r7, r0, ip, lsl r0
   125dc:	andeq	r7, r0, ip, asr #32
   125e0:	ldrdeq	r6, [r0], -r0
   125e4:	mov	r0, #1
   125e8:	b	12368 <__assert_fail@plt+0xc1c>
   125ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125f0:	sub	sp, sp, #12
   125f4:	mov	r7, r1
   125f8:	mov	r6, r3
   125fc:	str	r2, [sp]
   12600:	mov	sl, r0
   12604:	bl	115a8 <strlen@plt>
   12608:	ldr	fp, [r7]
   1260c:	cmp	fp, #0
   12610:	mov	r8, r0
   12614:	beq	126d8 <__assert_fail@plt+0xf8c>
   12618:	mov	r3, #0
   1261c:	ldr	r4, [sp]
   12620:	str	r3, [sp, #4]
   12624:	mov	r5, r3
   12628:	mvn	r9, #0
   1262c:	b	12658 <__assert_fail@plt+0xf0c>
   12630:	bl	11440 <memcmp@plt>
   12634:	ldr	r3, [sp, #4]
   12638:	cmp	r0, #0
   1263c:	movne	r3, #1
   12640:	str	r3, [sp, #4]
   12644:	ldr	fp, [r7, #4]!
   12648:	add	r5, r5, #1
   1264c:	add	r4, r4, r6
   12650:	cmp	fp, #0
   12654:	beq	126b4 <__assert_fail@plt+0xf68>
   12658:	mov	r0, fp
   1265c:	mov	r1, sl
   12660:	mov	r2, r8
   12664:	bl	11710 <strncmp@plt>
   12668:	cmp	r0, #0
   1266c:	mov	r0, fp
   12670:	bne	12644 <__assert_fail@plt+0xef8>
   12674:	bl	115a8 <strlen@plt>
   12678:	ldr	r3, [sp]
   1267c:	mov	r1, r4
   12680:	mov	r2, r6
   12684:	cmp	r0, r8
   12688:	mla	r0, r6, r9, r3
   1268c:	beq	126cc <__assert_fail@plt+0xf80>
   12690:	cmn	r9, #1
   12694:	moveq	r9, r5
   12698:	beq	12644 <__assert_fail@plt+0xef8>
   1269c:	ldr	r3, [sp]
   126a0:	cmp	r3, #0
   126a4:	bne	12630 <__assert_fail@plt+0xee4>
   126a8:	mov	r3, #1
   126ac:	str	r3, [sp, #4]
   126b0:	b	12644 <__assert_fail@plt+0xef8>
   126b4:	ldr	r3, [sp, #4]
   126b8:	cmp	r3, #0
   126bc:	bne	126e0 <__assert_fail@plt+0xf94>
   126c0:	mov	r0, r9
   126c4:	add	sp, sp, #12
   126c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126cc:	mov	r0, r5
   126d0:	add	sp, sp, #12
   126d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126d8:	mvn	r9, #0
   126dc:	b	126c0 <__assert_fail@plt+0xf74>
   126e0:	mvn	r0, #1
   126e4:	b	126c4 <__assert_fail@plt+0xf78>
   126e8:	cmn	r2, #1
   126ec:	push	{r4, r5, r6, lr}
   126f0:	mov	r4, r0
   126f4:	sub	sp, sp, #8
   126f8:	mov	r5, r1
   126fc:	mov	r0, #0
   12700:	beq	12758 <__assert_fail@plt+0x100c>
   12704:	ldr	r1, [pc, #100]	; 12770 <__assert_fail@plt+0x1024>
   12708:	mov	r2, #5
   1270c:	add	r1, pc, r1
   12710:	bl	1144c <dcgettext@plt>
   12714:	mov	r6, r0
   12718:	mov	r2, r5
   1271c:	mov	r1, #6
   12720:	mov	r0, #0
   12724:	bl	16574 <close_stdout@@Base+0x3be0>
   12728:	mov	r1, r4
   1272c:	mov	r5, r0
   12730:	mov	r0, #1
   12734:	bl	16874 <close_stdout@@Base+0x3ee0>
   12738:	mov	r3, r5
   1273c:	mov	r2, r6
   12740:	str	r0, [sp]
   12744:	mov	r0, #0
   12748:	mov	r1, r0
   1274c:	bl	11518 <error@plt>
   12750:	add	sp, sp, #8
   12754:	pop	{r4, r5, r6, pc}
   12758:	ldr	r1, [pc, #20]	; 12774 <__assert_fail@plt+0x1028>
   1275c:	mov	r2, #5
   12760:	add	r1, pc, r1
   12764:	bl	1144c <dcgettext@plt>
   12768:	mov	r6, r0
   1276c:	b	12718 <__assert_fail@plt+0xfcc>
   12770:	ldrdeq	r7, [r0], -ip
   12774:	andeq	r7, r0, ip, rrx
   12778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1277c:	mov	r4, r1
   12780:	ldr	r1, [pc, #276]	; 1289c <__assert_fail@plt+0x1150>
   12784:	sub	sp, sp, #12
   12788:	mov	r7, r0
   1278c:	mov	r6, r2
   12790:	add	r1, pc, r1
   12794:	mov	r2, #5
   12798:	mov	r0, #0
   1279c:	bl	1144c <dcgettext@plt>
   127a0:	ldr	r3, [pc, #248]	; 128a0 <__assert_fail@plt+0x1154>
   127a4:	ldr	r2, [pc, #248]	; 128a4 <__assert_fail@plt+0x1158>
   127a8:	add	r3, pc, r3
   127ac:	ldr	r9, [r3, r2]
   127b0:	ldr	r1, [r9]
   127b4:	bl	113a4 <fputs_unlocked@plt>
   127b8:	ldr	fp, [r7]
   127bc:	cmp	fp, #0
   127c0:	beq	12860 <__assert_fail@plt+0x1114>
   127c4:	ldr	sl, [pc, #220]	; 128a8 <__assert_fail@plt+0x115c>
   127c8:	mov	r8, #0
   127cc:	ldr	r3, [pc, #216]	; 128ac <__assert_fail@plt+0x1160>
   127d0:	mov	r5, r8
   127d4:	add	sl, pc, sl
   127d8:	add	r3, pc, r3
   127dc:	str	r3, [sp, #4]
   127e0:	b	1281c <__assert_fail@plt+0x10d0>
   127e4:	mov	r0, fp
   127e8:	ldr	fp, [r9]
   127ec:	bl	1687c <close_stdout@@Base+0x3ee8>
   127f0:	mov	r1, #1
   127f4:	mov	r2, sl
   127f8:	mov	r8, r4
   127fc:	mov	r3, r0
   12800:	mov	r0, fp
   12804:	bl	1165c <__fprintf_chk@plt>
   12808:	ldr	fp, [r7, #4]!
   1280c:	add	r5, r5, #1
   12810:	add	r4, r4, r6
   12814:	cmp	fp, #0
   12818:	beq	12860 <__assert_fail@plt+0x1114>
   1281c:	cmp	r5, #0
   12820:	mov	r1, r4
   12824:	mov	r2, r6
   12828:	mov	r0, r8
   1282c:	beq	127e4 <__assert_fail@plt+0x1098>
   12830:	bl	11440 <memcmp@plt>
   12834:	cmp	r0, #0
   12838:	bne	127e4 <__assert_fail@plt+0x1098>
   1283c:	mov	r0, fp
   12840:	ldr	fp, [r9]
   12844:	bl	1687c <close_stdout@@Base+0x3ee8>
   12848:	mov	r1, #1
   1284c:	ldr	r2, [sp, #4]
   12850:	mov	r3, r0
   12854:	mov	r0, fp
   12858:	bl	1165c <__fprintf_chk@plt>
   1285c:	b	12808 <__assert_fail@plt+0x10bc>
   12860:	ldr	r0, [r9]
   12864:	ldr	r3, [r0, #20]
   12868:	ldr	r2, [r0, #24]
   1286c:	cmp	r3, r2
   12870:	bcs	1288c <__assert_fail@plt+0x1140>
   12874:	add	r1, r3, #1
   12878:	mov	r2, #10
   1287c:	str	r1, [r0, #20]
   12880:	strb	r2, [r3]
   12884:	add	sp, sp, #12
   12888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1288c:	mov	r1, #10
   12890:	add	sp, sp, #12
   12894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12898:	b	116a4 <__overflow@plt>
   1289c:	andeq	r7, r0, r8, ror r0
   128a0:	andeq	r9, r1, r0, asr r8
   128a4:	andeq	r0, r0, r0, ror #2
   128a8:	andeq	r7, r0, ip, asr #32
   128ac:	andeq	r7, r0, r0, asr r0
   128b0:	push	{r4, r5, r6, r7, r8, lr}
   128b4:	mov	r7, r1
   128b8:	ldr	r4, [sp, #24]
   128bc:	mov	r1, r2
   128c0:	mov	r6, r2
   128c4:	mov	r5, r3
   128c8:	mov	r2, r3
   128cc:	mov	r8, r0
   128d0:	mov	r3, r4
   128d4:	mov	r0, r7
   128d8:	bl	125ec <__assert_fail@plt+0xea0>
   128dc:	subs	r2, r0, #0
   128e0:	blt	128ec <__assert_fail@plt+0x11a0>
   128e4:	mov	r0, r2
   128e8:	pop	{r4, r5, r6, r7, r8, pc}
   128ec:	mov	r0, r8
   128f0:	mov	r1, r7
   128f4:	bl	126e8 <__assert_fail@plt+0xf9c>
   128f8:	mov	r0, r6
   128fc:	mov	r1, r5
   12900:	mov	r2, r4
   12904:	bl	12778 <__assert_fail@plt+0x102c>
   12908:	ldr	r3, [sp, #28]
   1290c:	blx	r3
   12910:	mvn	r0, #0
   12914:	pop	{r4, r5, r6, r7, r8, pc}
   12918:	push	{r4, r5, r6, r7, r8, lr}
   1291c:	mov	r8, r0
   12920:	ldr	r5, [r1]
   12924:	mov	r6, r3
   12928:	cmp	r5, #0
   1292c:	beq	12964 <__assert_fail@plt+0x1218>
   12930:	mov	r4, r2
   12934:	mov	r7, r1
   12938:	b	12948 <__assert_fail@plt+0x11fc>
   1293c:	ldr	r5, [r7, #4]!
   12940:	cmp	r5, #0
   12944:	beq	12964 <__assert_fail@plt+0x1218>
   12948:	mov	r1, r4
   1294c:	mov	r0, r8
   12950:	mov	r2, r6
   12954:	add	r4, r4, r6
   12958:	bl	11440 <memcmp@plt>
   1295c:	cmp	r0, #0
   12960:	bne	1293c <__assert_fail@plt+0x11f0>
   12964:	mov	r0, r5
   12968:	pop	{r4, r5, r6, r7, r8, pc}
   1296c:	ldr	r3, [pc, #8]	; 1297c <__assert_fail@plt+0x1230>
   12970:	add	r3, pc, r3
   12974:	str	r0, [r3]
   12978:	bx	lr
   1297c:	andeq	r9, r1, ip, lsl #17
   12980:	ldr	r3, [pc, #8]	; 12990 <__assert_fail@plt+0x1244>
   12984:	add	r3, pc, r3
   12988:	strb	r0, [r3, #4]
   1298c:	bx	lr
   12990:	andeq	r9, r1, r8, ror r8

00012994 <close_stdout@@Base>:
   12994:	push	{r4, r5, r6, r7, lr}
   12998:	sub	sp, sp, #12
   1299c:	ldr	r4, [pc, #228]	; 12a88 <close_stdout@@Base+0xf4>
   129a0:	ldr	r3, [pc, #228]	; 12a8c <close_stdout@@Base+0xf8>
   129a4:	add	r4, pc, r4
   129a8:	ldr	r3, [r4, r3]
   129ac:	ldr	r0, [r3]
   129b0:	bl	174cc <close_stdout@@Base+0x4b38>
   129b4:	cmp	r0, #0
   129b8:	beq	129e0 <close_stdout@@Base+0x4c>
   129bc:	ldr	r3, [pc, #204]	; 12a90 <close_stdout@@Base+0xfc>
   129c0:	add	r3, pc, r3
   129c4:	ldrb	r3, [r3, #4]
   129c8:	cmp	r3, #0
   129cc:	beq	12a00 <close_stdout@@Base+0x6c>
   129d0:	bl	115fc <__errno_location@plt>
   129d4:	ldr	r3, [r0]
   129d8:	cmp	r3, #32
   129dc:	bne	12a00 <close_stdout@@Base+0x6c>
   129e0:	ldr	r3, [pc, #172]	; 12a94 <close_stdout@@Base+0x100>
   129e4:	ldr	r3, [r4, r3]
   129e8:	ldr	r0, [r3]
   129ec:	bl	174cc <close_stdout@@Base+0x4b38>
   129f0:	cmp	r0, #0
   129f4:	bne	12a54 <close_stdout@@Base+0xc0>
   129f8:	add	sp, sp, #12
   129fc:	pop	{r4, r5, r6, r7, pc}
   12a00:	ldr	r1, [pc, #144]	; 12a98 <close_stdout@@Base+0x104>
   12a04:	mov	r0, #0
   12a08:	mov	r2, #5
   12a0c:	add	r1, pc, r1
   12a10:	bl	1144c <dcgettext@plt>
   12a14:	ldr	r3, [pc, #128]	; 12a9c <close_stdout@@Base+0x108>
   12a18:	ldr	r5, [pc, r3]
   12a1c:	cmp	r5, #0
   12a20:	mov	r6, r0
   12a24:	beq	12a64 <close_stdout@@Base+0xd0>
   12a28:	bl	115fc <__errno_location@plt>
   12a2c:	ldr	r7, [r0]
   12a30:	mov	r0, r5
   12a34:	bl	16728 <close_stdout@@Base+0x3d94>
   12a38:	ldr	r2, [pc, #96]	; 12aa0 <close_stdout@@Base+0x10c>
   12a3c:	str	r6, [sp]
   12a40:	mov	r1, r7
   12a44:	add	r2, pc, r2
   12a48:	mov	r3, r0
   12a4c:	mov	r0, #0
   12a50:	bl	11518 <error@plt>
   12a54:	ldr	r3, [pc, #72]	; 12aa4 <close_stdout@@Base+0x110>
   12a58:	ldr	r3, [r4, r3]
   12a5c:	ldr	r0, [r3]
   12a60:	bl	11410 <_exit@plt>
   12a64:	bl	115fc <__errno_location@plt>
   12a68:	ldr	r2, [pc, #56]	; 12aa8 <close_stdout@@Base+0x114>
   12a6c:	add	r2, pc, r2
   12a70:	mov	r3, r0
   12a74:	mov	r0, r5
   12a78:	ldr	r1, [r3]
   12a7c:	mov	r3, r6
   12a80:	bl	11518 <error@plt>
   12a84:	b	12a54 <close_stdout@@Base+0xc0>
   12a88:	andeq	r9, r1, r4, asr r6
   12a8c:	andeq	r0, r0, r4, ror r1
   12a90:	andeq	r9, r1, ip, lsr r8
   12a94:	andeq	r0, r0, r0, ror #2
   12a98:	andeq	r6, r0, r4, lsr #28
   12a9c:	andeq	r9, r1, r4, ror #15
   12aa0:	strdeq	r6, [r0], -r8
   12aa4:	andeq	r0, r0, r8, ror r1
   12aa8:	ldrdeq	r6, [r0], -r4
   12aac:	ldrb	r3, [r0]
   12ab0:	cmp	r3, #47	; 0x2f
   12ab4:	bne	12ad0 <close_stdout@@Base+0x13c>
   12ab8:	add	r2, r0, #1
   12abc:	mov	r0, r2
   12ac0:	add	r2, r2, #1
   12ac4:	ldrb	r3, [r0]
   12ac8:	cmp	r3, #47	; 0x2f
   12acc:	beq	12abc <close_stdout@@Base+0x128>
   12ad0:	cmp	r3, #0
   12ad4:	bxeq	lr
   12ad8:	mov	r2, r0
   12adc:	mov	r1, #0
   12ae0:	cmp	r3, #47	; 0x2f
   12ae4:	moveq	r1, #1
   12ae8:	beq	12af8 <close_stdout@@Base+0x164>
   12aec:	cmp	r1, #0
   12af0:	movne	r0, r2
   12af4:	movne	r1, #0
   12af8:	ldrb	r3, [r2, #1]!
   12afc:	cmp	r3, #0
   12b00:	bne	12ae0 <close_stdout@@Base+0x14c>
   12b04:	bx	lr
   12b08:	push	{r4, lr}
   12b0c:	mov	r4, r0
   12b10:	bl	115a8 <strlen@plt>
   12b14:	cmp	r0, #1
   12b18:	popls	{r4, pc}
   12b1c:	sub	r3, r0, #1
   12b20:	ldrb	r2, [r4, r3]
   12b24:	cmp	r2, #47	; 0x2f
   12b28:	popne	{r4, pc}
   12b2c:	mov	r0, r3
   12b30:	cmp	r0, #1
   12b34:	sub	r3, r3, #1
   12b38:	beq	12b4c <close_stdout@@Base+0x1b8>
   12b3c:	ldrb	r2, [r4, r3]
   12b40:	cmp	r2, #47	; 0x2f
   12b44:	popne	{r4, pc}
   12b48:	b	12b2c <close_stdout@@Base+0x198>
   12b4c:	pop	{r4, pc}
   12b50:	push	{r3, r4, r5, r6, r7, lr}
   12b54:	mov	r5, r0
   12b58:	mov	r0, r1
   12b5c:	mov	r1, r2
   12b60:	mov	r2, r3
   12b64:	bl	11524 <open64@plt>
   12b68:	subs	r2, r5, r0
   12b6c:	mov	r4, r0
   12b70:	rsbs	r3, r2, #0
   12b74:	adcs	r3, r3, r2
   12b78:	orrs	r3, r3, r0, lsr #31
   12b7c:	bne	12ba8 <close_stdout@@Base+0x214>
   12b80:	mov	r1, r5
   12b84:	bl	11464 <dup2@plt>
   12b88:	mov	r7, r0
   12b8c:	bl	115fc <__errno_location@plt>
   12b90:	ldr	r6, [r0]
   12b94:	mov	r5, r0
   12b98:	mov	r0, r4
   12b9c:	mov	r4, r7
   12ba0:	bl	11728 <close@plt>
   12ba4:	str	r6, [r5]
   12ba8:	mov	r0, r4
   12bac:	pop	{r3, r4, r5, r6, r7, pc}
   12bb0:	cmp	r0, #0
   12bb4:	push	{r3, r4, r5, r6, r7, lr}
   12bb8:	mov	r7, r1
   12bbc:	mov	r5, r2
   12bc0:	mov	r6, r3
   12bc4:	blt	12c20 <close_stdout@@Base+0x28c>
   12bc8:	mov	r1, r3
   12bcc:	bl	17094 <close_stdout@@Base+0x4700>
   12bd0:	cmp	r5, #0
   12bd4:	mov	r4, r0
   12bd8:	beq	12be4 <close_stdout@@Base+0x250>
   12bdc:	cmn	r0, #1
   12be0:	beq	12bf4 <close_stdout@@Base+0x260>
   12be4:	cmp	r4, #1
   12be8:	beq	12c28 <close_stdout@@Base+0x294>
   12bec:	mov	r0, r4
   12bf0:	pop	{r3, r4, r5, r6, r7, pc}
   12bf4:	bl	115fc <__errno_location@plt>
   12bf8:	ldr	r3, [r0]
   12bfc:	cmp	r3, #38	; 0x26
   12c00:	bne	12bec <close_stdout@@Base+0x258>
   12c04:	mov	r0, r7
   12c08:	mov	r1, r5
   12c0c:	mov	r2, r6
   12c10:	ldr	r3, [sp, #24]
   12c14:	bl	172ec <close_stdout@@Base+0x4958>
   12c18:	mov	r4, r0
   12c1c:	b	12be4 <close_stdout@@Base+0x250>
   12c20:	cmp	r2, #0
   12c24:	bne	12c04 <close_stdout@@Base+0x270>
   12c28:	bl	115fc <__errno_location@plt>
   12c2c:	mvn	r4, #0
   12c30:	mov	r3, #9
   12c34:	str	r3, [r0]
   12c38:	b	12bec <close_stdout@@Base+0x258>
   12c3c:	ldr	r3, [pc, #108]	; 12cb0 <close_stdout@@Base+0x31c>
   12c40:	mov	r1, r0
   12c44:	ldr	r2, [pc, #104]	; 12cb4 <close_stdout@@Base+0x320>
   12c48:	add	r3, pc, r3
   12c4c:	push	{r4, r5, lr}
   12c50:	sub	sp, sp, #20
   12c54:	ldr	r4, [r3, r2]
   12c58:	mov	r5, r0
   12c5c:	mov	r0, #0
   12c60:	ldr	r3, [r4]
   12c64:	str	r3, [sp, #12]
   12c68:	bl	11404 <clock_gettime@plt>
   12c6c:	cmp	r0, #0
   12c70:	beq	12c94 <close_stdout@@Base+0x300>
   12c74:	mov	r1, #0
   12c78:	add	r0, sp, #4
   12c7c:	bl	114f4 <gettimeofday@plt>
   12c80:	ldr	r3, [sp, #8]
   12c84:	mov	r1, #1000	; 0x3e8
   12c88:	ldr	r2, [sp, #4]
   12c8c:	mul	r3, r1, r3
   12c90:	stm	r5, {r2, r3}
   12c94:	ldr	r2, [sp, #12]
   12c98:	ldr	r3, [r4]
   12c9c:	cmp	r2, r3
   12ca0:	bne	12cac <close_stdout@@Base+0x318>
   12ca4:	add	sp, sp, #20
   12ca8:	pop	{r4, r5, pc}
   12cac:	bl	11458 <__stack_chk_fail@plt>
   12cb0:			; <UNDEFINED> instruction: 0x000193b0
   12cb4:	andeq	r0, r0, r4, asr r1
   12cb8:	mov	ip, r0
   12cbc:	push	{r4, r5, r6, r7, r8}
   12cc0:	sub	sp, sp, #20
   12cc4:	ldr	r4, [ip, #92]	; 0x5c
   12cc8:	add	r0, sp, #4
   12ccc:	cmp	r4, #0
   12cd0:	stm	r0, {r1, r2, r3}
   12cd4:	ldr	r3, [sp, #8]
   12cd8:	ldr	r2, [sp, #12]
   12cdc:	beq	12cec <close_stdout@@Base+0x358>
   12ce0:	ldr	r1, [ip, #32]
   12ce4:	cmp	r1, #0
   12ce8:	beq	12d4c <close_stdout@@Base+0x3b8>
   12cec:	cmp	r2, #4
   12cf0:	bhi	12d84 <close_stdout@@Base+0x3f0>
   12cf4:	cmp	r2, #2
   12cf8:	ldr	r2, [ip, #108]	; 0x6c
   12cfc:	add	r2, r2, #1
   12d00:	str	r2, [ip, #108]	; 0x6c
   12d04:	bls	12d74 <close_stdout@@Base+0x3e0>
   12d08:	movw	r1, #34079	; 0x851f
   12d0c:	movt	r1, #20971	; 0x51eb
   12d10:	asr	r4, r3, #31
   12d14:	mov	r0, #100	; 0x64
   12d18:	smull	r5, r2, r1, r3
   12d1c:	rsb	r2, r4, r2, asr #5
   12d20:	str	r2, [ip, #44]	; 0x2c
   12d24:	mls	r3, r0, r2, r3
   12d28:	str	r3, [ip, #48]	; 0x30
   12d2c:	mov	r3, #0
   12d30:	mov	r2, #2
   12d34:	str	r3, [ip, #52]	; 0x34
   12d38:	str	r3, [ip, #56]	; 0x38
   12d3c:	str	r2, [ip, #20]
   12d40:	add	sp, sp, #20
   12d44:	pop	{r4, r5, r6, r7, r8}
   12d48:	bx	lr
   12d4c:	ldrb	r1, [ip, #89]	; 0x59
   12d50:	cmp	r1, #0
   12d54:	bne	12cec <close_stdout@@Base+0x358>
   12d58:	ldr	r1, [ip, #108]	; 0x6c
   12d5c:	cmp	r1, #0
   12d60:	bne	12de8 <close_stdout@@Base+0x454>
   12d64:	cmp	r2, #2
   12d68:	movls	r2, #1
   12d6c:	strls	r2, [ip, #108]	; 0x6c
   12d70:	bhi	12de8 <close_stdout@@Base+0x454>
   12d74:	str	r3, [ip, #44]	; 0x2c
   12d78:	mov	r3, #0
   12d7c:	str	r3, [ip, #48]	; 0x30
   12d80:	b	12d2c <close_stdout@@Base+0x398>
   12d84:	movw	r0, #34079	; 0x851f
   12d88:	movt	r0, #20971	; 0x51eb
   12d8c:	asr	r6, r3, #31
   12d90:	sub	r2, r2, #4
   12d94:	smull	r5, r1, r0, r3
   12d98:	str	r2, [ip, #32]
   12d9c:	movw	r7, #35757	; 0x8bad
   12da0:	movt	r7, #26843	; 0x68db
   12da4:	mov	r5, #100	; 0x64
   12da8:	add	r4, r4, #1
   12dac:	smull	r8, r7, r7, r3
   12db0:	rsb	r1, r6, r1, asr #5
   12db4:	str	r4, [ip, #92]	; 0x5c
   12db8:	smull	r2, r0, r0, r1
   12dbc:	asr	r2, r1, #31
   12dc0:	mls	r3, r5, r1, r3
   12dc4:	rsb	r6, r6, r7, asr #12
   12dc8:	str	r6, [ip, #28]
   12dcc:	rsb	r0, r2, r0, asr #5
   12dd0:	mls	r1, r5, r0, r1
   12dd4:	str	r3, [ip, #40]	; 0x28
   12dd8:	str	r1, [ip, #36]	; 0x24
   12ddc:	add	sp, sp, #20
   12de0:	pop	{r4, r5, r6, r7, r8}
   12de4:	bx	lr
   12de8:	ldm	r0, {r0, r1, r2}
   12dec:	add	ip, ip, #24
   12df0:	stm	ip, {r0, r1, r2}
   12df4:	b	12d40 <close_stdout@@Base+0x3ac>
   12df8:	sub	sp, sp, #16
   12dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12e00:	add	sl, sp, #36	; 0x24
   12e04:	ldr	ip, [sp, #64]	; 0x40
   12e08:	mov	r4, #1
   12e0c:	ldr	r9, [sp, #60]	; 0x3c
   12e10:	ldr	r8, [r0, #84]	; 0x54
   12e14:	stm	sl, {r1, r2, r3}
   12e18:	mla	r8, r9, ip, r8
   12e1c:	ldr	r7, [sp, #56]	; 0x38
   12e20:	ldr	fp, [sp, #52]	; 0x34
   12e24:	ldr	r2, [sp, #44]	; 0x2c
   12e28:	ldr	r6, [r0, #80]	; 0x50
   12e2c:	ldr	r5, [r0, #76]	; 0x4c
   12e30:	str	r8, [r0, #84]	; 0x54
   12e34:	ldr	r8, [r0, #68]	; 0x44
   12e38:	mla	r6, r7, ip, r6
   12e3c:	ldr	r1, [r0, #72]	; 0x48
   12e40:	mla	r5, fp, ip, r5
   12e44:	ldr	sl, [sp, #48]	; 0x30
   12e48:	mla	r3, r2, ip, r8
   12e4c:	ldr	fp, [r0, #60]	; 0x3c
   12e50:	ldr	r9, [r0, #64]	; 0x40
   12e54:	ldr	r7, [sp, #36]	; 0x24
   12e58:	ldr	r2, [sp, #40]	; 0x28
   12e5c:	mla	r1, sl, ip, r1
   12e60:	str	r6, [r0, #80]	; 0x50
   12e64:	mla	r9, r2, ip, r9
   12e68:	str	r5, [r0, #76]	; 0x4c
   12e6c:	mla	ip, r7, ip, fp
   12e70:	str	r3, [r0, #68]	; 0x44
   12e74:	str	r1, [r0, #72]	; 0x48
   12e78:	strb	r4, [r0, #89]	; 0x59
   12e7c:	str	r9, [r0, #64]	; 0x40
   12e80:	str	ip, [r0, #60]	; 0x3c
   12e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12e88:	add	sp, sp, #16
   12e8c:	bx	lr
   12e90:	push	{r4, r5, lr}
   12e94:	cmn	r2, #1
   12e98:	sub	sp, sp, #12
   12e9c:	mov	r4, r0
   12ea0:	str	r2, [sp, #4]
   12ea4:	beq	12f14 <close_stdout@@Base+0x580>
   12ea8:	ldr	r5, [r1]
   12eac:	ldr	r0, [r1, #4]
   12eb0:	ldr	r2, [r4, #4]
   12eb4:	ldr	r3, [r4]
   12eb8:	eor	r0, r0, r2
   12ebc:	ldr	ip, [r4, #8]
   12ec0:	eor	r3, r5, r3
   12ec4:	ldr	r2, [r1, #8]
   12ec8:	orr	r0, r0, r3
   12ecc:	ldr	r5, [r1, #12]
   12ed0:	ldr	r3, [r4, #12]
   12ed4:	eor	r2, r2, ip
   12ed8:	orr	r2, r0, r2
   12edc:	ldr	ip, [r1, #16]
   12ee0:	eor	r3, r5, r3
   12ee4:	ldr	r0, [r4, #16]
   12ee8:	orr	r2, r2, r3
   12eec:	ldr	r1, [r1, #20]
   12ef0:	ldr	r3, [r4, #20]
   12ef4:	eor	r0, ip, r0
   12ef8:	orr	r2, r2, r0
   12efc:	eor	r3, r1, r3
   12f00:	orrs	r3, r2, r3
   12f04:	movne	r0, #0
   12f08:	moveq	r0, #1
   12f0c:	add	sp, sp, #12
   12f10:	pop	{r4, r5, pc}
   12f14:	add	r0, sp, #4
   12f18:	bl	11560 <localtime@plt>
   12f1c:	subs	r1, r0, #0
   12f20:	bne	12ea8 <close_stdout@@Base+0x514>
   12f24:	mov	r0, r1
   12f28:	b	12f0c <close_stdout@@Base+0x578>
   12f2c:	push	{r3, r4, r5, lr}
   12f30:	mov	r5, r0
   12f34:	ldr	r0, [pc, #60]	; 12f78 <close_stdout@@Base+0x5e4>
   12f38:	add	r0, pc, r0
   12f3c:	bl	11530 <getenv@plt>
   12f40:	subs	r4, r0, #0
   12f44:	popeq	{r3, r4, r5, pc}
   12f48:	bl	115a8 <strlen@plt>
   12f4c:	add	r2, r0, #1
   12f50:	cmp	r2, #100	; 0x64
   12f54:	bhi	12f68 <close_stdout@@Base+0x5d4>
   12f58:	mov	r0, r5
   12f5c:	mov	r1, r4
   12f60:	pop	{r3, r4, r5, lr}
   12f64:	b	1141c <memcpy@plt>
   12f68:	mov	r0, r4
   12f6c:	mov	r1, r2
   12f70:	pop	{r3, r4, r5, lr}
   12f74:	b	16ffc <close_stdout@@Base+0x4668>
   12f78:	andeq	r6, r0, r4, ror #25
   12f7c:	cmp	r3, #2
   12f80:	push	{r4, r5}
   12f84:	ldr	r3, [sp, #8]
   12f88:	bhi	12fd4 <close_stdout@@Base+0x640>
   12f8c:	cmp	r3, #0
   12f90:	movlt	r3, #100	; 0x64
   12f94:	mullt	r2, r3, r2
   12f98:	blt	12fdc <close_stdout@@Base+0x648>
   12f9c:	rsb	r2, r2, r2, lsl #4
   12fa0:	cmp	r1, #0
   12fa4:	rsbne	r3, r3, #0
   12fa8:	lsl	r2, r2, #2
   12fac:	add	r2, r2, r3
   12fb0:	eor	r3, r2, r2, asr #31
   12fb4:	sub	r3, r3, r2, asr #31
   12fb8:	cmp	r3, #1440	; 0x5a0
   12fbc:	ldrgt	r3, [r0]
   12fc0:	addgt	r3, r3, #1
   12fc4:	strgt	r3, [r0]
   12fc8:	mov	r0, r2
   12fcc:	pop	{r4, r5}
   12fd0:	bx	lr
   12fd4:	cmp	r3, #0
   12fd8:	bge	12f9c <close_stdout@@Base+0x608>
   12fdc:	movw	r1, #34079	; 0x851f
   12fe0:	movt	r1, #20971	; 0x51eb
   12fe4:	asr	r4, r2, #31
   12fe8:	mov	ip, #100	; 0x64
   12fec:	smull	r5, r3, r1, r2
   12ff0:	rsb	r3, r4, r3, asr #5
   12ff4:	mls	r2, ip, r3, r2
   12ff8:	rsb	r3, r3, r3, lsl #4
   12ffc:	add	r2, r2, r3, lsl #2
   13000:	b	12fb0 <close_stdout@@Base+0x61c>
   13004:	push	{r4, r5, r6, lr}
   13008:	mov	r6, r0
   1300c:	ldr	r4, [pc, #172]	; 130c0 <close_stdout@@Base+0x72c>
   13010:	mov	r5, r1
   13014:	ldr	r3, [pc, #168]	; 130c4 <close_stdout@@Base+0x730>
   13018:	add	r4, pc, r4
   1301c:	add	r3, pc, r3
   13020:	b	13030 <close_stdout@@Base+0x69c>
   13024:	ldr	r3, [r4, #12]!
   13028:	cmp	r3, #0
   1302c:	beq	1304c <close_stdout@@Base+0x6b8>
   13030:	mov	r1, r3
   13034:	mov	r0, r5
   13038:	bl	113c8 <strcmp@plt>
   1303c:	cmp	r0, #0
   13040:	bne	13024 <close_stdout@@Base+0x690>
   13044:	mov	r0, r4
   13048:	pop	{r4, r5, r6, pc}
   1304c:	ldr	r1, [r6, #116]	; 0x74
   13050:	add	r4, r6, #116	; 0x74
   13054:	cmp	r1, #0
   13058:	bne	130a0 <close_stdout@@Base+0x70c>
   1305c:	ldr	r4, [pc, #100]	; 130c8 <close_stdout@@Base+0x734>
   13060:	ldr	r1, [pc, #100]	; 130cc <close_stdout@@Base+0x738>
   13064:	add	r4, pc, r4
   13068:	add	r1, pc, r1
   1306c:	add	r4, r4, #48	; 0x30
   13070:	b	13080 <close_stdout@@Base+0x6ec>
   13074:	ldr	r1, [r4, #12]!
   13078:	cmp	r1, #0
   1307c:	beq	130b8 <close_stdout@@Base+0x724>
   13080:	mov	r0, r5
   13084:	bl	113c8 <strcmp@plt>
   13088:	cmp	r0, #0
   1308c:	bne	13074 <close_stdout@@Base+0x6e0>
   13090:	b	13044 <close_stdout@@Base+0x6b0>
   13094:	ldr	r1, [r4, #12]!
   13098:	cmp	r1, #0
   1309c:	beq	1305c <close_stdout@@Base+0x6c8>
   130a0:	mov	r0, r5
   130a4:	bl	113c8 <strcmp@plt>
   130a8:	cmp	r0, #0
   130ac:	bne	13094 <close_stdout@@Base+0x700>
   130b0:	mov	r0, r4
   130b4:	pop	{r4, r5, r6, pc}
   130b8:	mov	r0, r1
   130bc:	pop	{r4, r5, r6, pc}
   130c0:	andeq	r8, r1, r8, lsr #16
   130c4:	andeq	r6, r0, r4, lsl #24
   130c8:	ldrdeq	r8, [r1], -ip
   130cc:			; <UNDEFINED> instruction: 0x00006bbc
   130d0:	ldr	r1, [pc, #3964]	; 14054 <close_stdout@@Base+0x16c0>
   130d4:	mov	r2, #0
   130d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130dc:	add	r1, pc, r1
   130e0:	ldr	r4, [pc, #3952]	; 14058 <close_stdout@@Base+0x16c4>
   130e4:	sub	sp, sp, #748	; 0x2ec
   130e8:	movw	r3, #64912	; 0xfd90
   130ec:	movt	r3, #65535	; 0xffff
   130f0:	str	r2, [sp, #36]	; 0x24
   130f4:	mov	sl, r0
   130f8:	ldr	r4, [r1, r4]
   130fc:	add	r1, sp, #744	; 0x2e8
   13100:	ldr	ip, [pc, #3924]	; 1405c <close_stdout@@Base+0x16c8>
   13104:	add	r8, sp, #160	; 0xa0
   13108:	ldr	r0, [pc, #3920]	; 14060 <close_stdout@@Base+0x16cc>
   1310c:	mov	r5, r2
   13110:	strh	r2, [r1, r3]
   13114:	add	ip, pc, ip
   13118:	ldr	r3, [r4]
   1311c:	add	r0, pc, r0
   13120:	str	r4, [sp, #44]	; 0x2c
   13124:	mvn	fp, #1
   13128:	ldr	r4, [pc, #3892]	; 14064 <close_stdout@@Base+0x16d0>
   1312c:	add	r7, sp, #120	; 0x78
   13130:	add	ip, ip, #1136	; 0x470
   13134:	add	r0, r0, #1008	; 0x3f0
   13138:	movw	r9, #39321	; 0x9999
   1313c:	add	r4, pc, r4
   13140:	movt	r9, #6553	; 0x1999
   13144:	str	r7, [sp, #32]
   13148:	str	ip, [sp, #76]	; 0x4c
   1314c:	str	r0, [sp, #72]	; 0x48
   13150:	str	r3, [sp, #740]	; 0x2e4
   13154:	str	r4, [sp, #40]	; 0x28
   13158:	str	r9, [sp, #68]	; 0x44
   1315c:	ldr	r9, [sp, #40]	; 0x28
   13160:	ldrsb	r4, [r9, r5]
   13164:	cmn	r4, #93	; 0x5d
   13168:	beq	131c0 <close_stdout@@Base+0x82c>
   1316c:	cmn	fp, #2
   13170:	beq	13570 <close_stdout@@Base+0xbdc>
   13174:	cmp	fp, #0
   13178:	ble	13608 <close_stdout@@Base+0xc74>
   1317c:	movw	r3, #277	; 0x115
   13180:	cmp	fp, r3
   13184:	movhi	r3, #2
   13188:	ldrls	r3, [pc, #3800]	; 14068 <close_stdout@@Base+0x16d4>
   1318c:	addls	r3, pc, r3
   13190:	addls	r3, r3, fp
   13194:	ldrbls	r3, [r3, #116]	; 0x74
   13198:	add	r4, r4, r3
   1319c:	cmp	r4, #112	; 0x70
   131a0:	bhi	131c0 <close_stdout@@Base+0x82c>
   131a4:	ldr	r2, [pc, #3776]	; 1406c <close_stdout@@Base+0x16d8>
   131a8:	add	r2, pc, r2
   131ac:	add	r4, r2, r4
   131b0:	add	r2, r4, #396	; 0x18c
   131b4:	ldrsb	r2, [r2]
   131b8:	cmp	r2, r3
   131bc:	beq	13278 <close_stdout@@Base+0x8e4>
   131c0:	ldr	r3, [pc, #3752]	; 14070 <close_stdout@@Base+0x16dc>
   131c4:	add	r3, pc, r3
   131c8:	add	r3, r3, r5
   131cc:	ldrb	r4, [r3, #628]	; 0x274
   131d0:	cmp	r4, #0
   131d4:	bne	13288 <close_stdout@@Base+0x8f4>
   131d8:	ldr	r4, [sp, #36]	; 0x24
   131dc:	cmp	r4, #3
   131e0:	beq	13540 <close_stdout@@Base+0xbac>
   131e4:	ldr	r1, [pc, #3720]	; 14074 <close_stdout@@Base+0x16e0>
   131e8:	ldr	r3, [sp, #32]
   131ec:	add	r1, pc, r1
   131f0:	b	13208 <close_stdout@@Base+0x874>
   131f4:	cmp	r3, r7
   131f8:	beq	13550 <close_stdout@@Base+0xbbc>
   131fc:	ldrsh	r5, [ip, #-2]
   13200:	sub	r8, r8, #28
   13204:	sub	r3, r3, #2
   13208:	ldrsb	r2, [r1, r5]
   1320c:	mov	ip, r3
   13210:	cmn	r2, #93	; 0x5d
   13214:	beq	131f4 <close_stdout@@Base+0x860>
   13218:	add	r2, r2, #1
   1321c:	cmp	r2, #112	; 0x70
   13220:	bhi	131f4 <close_stdout@@Base+0x860>
   13224:	add	r2, r1, r2
   13228:	ldrb	r0, [r2, #396]	; 0x18c
   1322c:	cmp	r0, #1
   13230:	bne	131f4 <close_stdout@@Base+0x860>
   13234:	ldrb	r5, [r2, #512]	; 0x200
   13238:	cmp	r5, #0
   1323c:	beq	131f4 <close_stdout@@Base+0x860>
   13240:	ldr	r9, [sp, #80]	; 0x50
   13244:	add	r6, sp, #92	; 0x5c
   13248:	ldr	r4, [sp, #84]	; 0x54
   1324c:	str	r9, [sp, #96]	; 0x60
   13250:	mov	r9, #3
   13254:	str	r4, [sp, #100]	; 0x64
   13258:	add	r4, r8, #28
   1325c:	ldm	r6!, {r0, r1, r2, r3}
   13260:	mov	r8, r4
   13264:	str	r9, [sp, #36]	; 0x24
   13268:	stmia	r4!, {r0, r1, r2, r3}
   1326c:	ldm	r6, {r0, r1, r2}
   13270:	stm	r4, {r0, r1, r2}
   13274:	b	13518 <close_stdout@@Base+0xb84>
   13278:	ldrb	r5, [r4, #512]	; 0x200
   1327c:	cmp	r5, #0
   13280:	bne	136d8 <close_stdout@@Base+0xd44>
   13284:	mov	r4, r5
   13288:	ldr	r3, [pc, #3560]	; 14078 <close_stdout@@Base+0x16e4>
   1328c:	sub	r1, r4, #4
   13290:	add	r3, pc, r3
   13294:	add	r3, r3, r4
   13298:	ldrb	r6, [r3, #744]	; 0x2e8
   1329c:	rsb	r2, r6, #1
   132a0:	rsb	r2, r2, r2, lsl #3
   132a4:	add	r3, r8, r2, lsl #2
   132a8:	ldr	r2, [r8, r2, lsl #2]
   132ac:	ldr	r9, [r3, #4]
   132b0:	ldr	r0, [r3, #20]
   132b4:	str	r2, [sp, #48]	; 0x30
   132b8:	str	r9, [sp, #52]	; 0x34
   132bc:	ldr	r9, [r3, #8]
   132c0:	str	r0, [sp, #56]	; 0x38
   132c4:	ldr	r5, [r3, #24]
   132c8:	str	r9, [sp, #64]	; 0x40
   132cc:	ldr	r9, [r3, #12]
   132d0:	str	r9, [sp, #60]	; 0x3c
   132d4:	ldr	r9, [r3, #16]
   132d8:	cmp	r1, #87	; 0x57
   132dc:	addls	pc, pc, r1, lsl #2
   132e0:	b	13474 <close_stdout@@Base+0xae0>
   132e4:	b	138b8 <close_stdout@@Base+0xf24>
   132e8:	b	13474 <close_stdout@@Base+0xae0>
   132ec:	b	13474 <close_stdout@@Base+0xae0>
   132f0:	b	1389c <close_stdout@@Base+0xf08>
   132f4:	b	1388c <close_stdout@@Base+0xef8>
   132f8:	b	139c4 <close_stdout@@Base+0x1030>
   132fc:	b	139b4 <close_stdout@@Base+0x1020>
   13300:	b	139a4 <close_stdout@@Base+0x1010>
   13304:	b	13994 <close_stdout@@Base+0x1000>
   13308:	b	13474 <close_stdout@@Base+0xae0>
   1330c:	b	13474 <close_stdout@@Base+0xae0>
   13310:	b	13474 <close_stdout@@Base+0xae0>
   13314:	b	13474 <close_stdout@@Base+0xae0>
   13318:	b	13474 <close_stdout@@Base+0xae0>
   1331c:	b	13970 <close_stdout@@Base+0xfdc>
   13320:	b	13cf4 <close_stdout@@Base+0x1360>
   13324:	b	13cc8 <close_stdout@@Base+0x1334>
   13328:	b	13474 <close_stdout@@Base+0xae0>
   1332c:	b	13ca4 <close_stdout@@Base+0x1310>
   13330:	b	13c7c <close_stdout@@Base+0x12e8>
   13334:	b	13c50 <close_stdout@@Base+0x12bc>
   13338:	b	13474 <close_stdout@@Base+0xae0>
   1333c:	b	13474 <close_stdout@@Base+0xae0>
   13340:	b	13c20 <close_stdout@@Base+0x128c>
   13344:	b	13c00 <close_stdout@@Base+0x126c>
   13348:	b	13bd8 <close_stdout@@Base+0x1244>
   1334c:	b	13bcc <close_stdout@@Base+0x1238>
   13350:	b	13bc0 <close_stdout@@Base+0x122c>
   13354:	b	13bb4 <close_stdout@@Base+0x1220>
   13358:	b	13ba0 <close_stdout@@Base+0x120c>
   1335c:	b	13b6c <close_stdout@@Base+0x11d8>
   13360:	b	13b5c <close_stdout@@Base+0x11c8>
   13364:	b	13b4c <close_stdout@@Base+0x11b8>
   13368:	b	13b38 <close_stdout@@Base+0x11a4>
   1336c:	b	13ad0 <close_stdout@@Base+0x113c>
   13370:	b	13abc <close_stdout@@Base+0x1128>
   13374:	b	13878 <close_stdout@@Base+0xee4>
   13378:	b	1384c <close_stdout@@Base+0xeb8>
   1337c:	b	13830 <close_stdout@@Base+0xe9c>
   13380:	b	13b24 <close_stdout@@Base+0x1190>
   13384:	b	13af8 <close_stdout@@Base+0x1164>
   13388:	b	13ae4 <close_stdout@@Base+0x1150>
   1338c:	b	13a74 <close_stdout@@Base+0x10e0>
   13390:	b	13a60 <close_stdout@@Base+0x10cc>
   13394:	b	13a40 <close_stdout@@Base+0x10ac>
   13398:	b	13474 <close_stdout@@Base+0xae0>
   1339c:	b	13a14 <close_stdout@@Base+0x1080>
   133a0:	b	139ec <close_stdout@@Base+0x1058>
   133a4:	b	13454 <close_stdout@@Base+0xac0>
   133a8:	b	13454 <close_stdout@@Base+0xac0>
   133ac:	b	139e0 <close_stdout@@Base+0x104c>
   133b0:	b	13730 <close_stdout@@Base+0xd9c>
   133b4:	b	138d0 <close_stdout@@Base+0xf3c>
   133b8:	b	139d4 <close_stdout@@Base+0x1040>
   133bc:	b	137e8 <close_stdout@@Base+0xe54>
   133c0:	b	13914 <close_stdout@@Base+0xf80>
   133c4:	b	1390c <close_stdout@@Base+0xf78>
   133c8:	b	137bc <close_stdout@@Base+0xe28>
   133cc:	b	13798 <close_stdout@@Base+0xe04>
   133d0:	b	13900 <close_stdout@@Base+0xf6c>
   133d4:	b	13774 <close_stdout@@Base+0xde0>
   133d8:	b	138e8 <close_stdout@@Base+0xf54>
   133dc:	b	138dc <close_stdout@@Base+0xf48>
   133e0:	b	13754 <close_stdout@@Base+0xdc0>
   133e4:	b	13d1c <close_stdout@@Base+0x1388>
   133e8:	b	13964 <close_stdout@@Base+0xfd0>
   133ec:	b	1380c <close_stdout@@Base+0xe78>
   133f0:	b	13944 <close_stdout@@Base+0xfb0>
   133f4:	b	13920 <close_stdout@@Base+0xf8c>
   133f8:	b	1386c <close_stdout@@Base+0xed8>
   133fc:	b	13474 <close_stdout@@Base+0xae0>
   13400:	b	13730 <close_stdout@@Base+0xd9c>
   13404:	b	137e8 <close_stdout@@Base+0xe54>
   13408:	b	137bc <close_stdout@@Base+0xe28>
   1340c:	b	13774 <close_stdout@@Base+0xde0>
   13410:	b	13754 <close_stdout@@Base+0xdc0>
   13414:	b	1380c <close_stdout@@Base+0xe78>
   13418:	b	13798 <close_stdout@@Base+0xe04>
   1341c:	b	13474 <close_stdout@@Base+0xae0>
   13420:	b	13474 <close_stdout@@Base+0xae0>
   13424:	b	13474 <close_stdout@@Base+0xae0>
   13428:	b	13a94 <close_stdout@@Base+0x1100>
   1342c:	b	13474 <close_stdout@@Base+0xae0>
   13430:	b	13aa8 <close_stdout@@Base+0x1114>
   13434:	b	13954 <close_stdout@@Base+0xfc0>
   13438:	b	13444 <close_stdout@@Base+0xab0>
   1343c:	b	138f4 <close_stdout@@Base+0xf60>
   13440:	b	13860 <close_stdout@@Base+0xecc>
   13444:	sub	r3, r8, #28
   13448:	mov	r0, sl
   1344c:	ldm	r3, {r1, r2, r3}
   13450:	bl	12cb8 <close_stdout@@Base+0x324>
   13454:	add	r3, r8, #12
   13458:	mov	r2, #1
   1345c:	str	r2, [sp, #16]
   13460:	ldm	r3, {r0, r1, r2, r3}
   13464:	stm	sp, {r0, r1, r2, r3}
   13468:	mov	r0, sl
   1346c:	ldm	r8, {r1, r2, r3}
   13470:	bl	12df8 <close_stdout@@Base+0x464>
   13474:	ldr	r2, [pc, #3072]	; 1407c <close_stdout@@Base+0x16e8>
   13478:	sxth	r6, r6
   1347c:	ldr	r3, [sp, #32]
   13480:	add	r2, pc, r2
   13484:	add	r4, r2, r4
   13488:	sub	ip, r3, r6, lsl #1
   1348c:	rsb	r6, r6, r6, lsl #3
   13490:	ldrb	r1, [r4, #836]	; 0x344
   13494:	ldr	r4, [sp, #48]	; 0x30
   13498:	sub	r3, r8, r6, lsl #2
   1349c:	sub	r1, r1, #28
   134a0:	add	r8, r3, #28
   134a4:	str	r9, [r3, #44]	; 0x2c
   134a8:	add	r0, r2, r1
   134ac:	str	r4, [r3, #28]
   134b0:	add	r0, r0, #928	; 0x3a0
   134b4:	ldr	r4, [sp, #52]	; 0x34
   134b8:	ldr	r9, [sp, #56]	; 0x38
   134bc:	str	r5, [r3, #52]	; 0x34
   134c0:	str	r4, [r3, #32]
   134c4:	ldr	r4, [sp, #64]	; 0x40
   134c8:	str	r9, [r3, #48]	; 0x30
   134cc:	ldrsb	r0, [r0]
   134d0:	str	r4, [r3, #36]	; 0x24
   134d4:	ldr	r4, [sp, #60]	; 0x3c
   134d8:	str	r4, [r3, #40]	; 0x28
   134dc:	ldrsh	r3, [ip]
   134e0:	add	r0, r0, r3
   134e4:	cmp	r0, #112	; 0x70
   134e8:	bhi	13504 <close_stdout@@Base+0xb70>
   134ec:	add	r2, r2, r0
   134f0:	add	r0, r2, #396	; 0x18c
   134f4:	ldrsb	r0, [r0]
   134f8:	cmp	r0, r3
   134fc:	ldrbeq	r5, [r2, #512]	; 0x200
   13500:	beq	13518 <close_stdout@@Base+0xb84>
   13504:	ldr	r3, [pc, #2932]	; 14080 <close_stdout@@Base+0x16ec>
   13508:	add	r3, pc, r3
   1350c:	add	r1, r3, r1
   13510:	add	r1, r1, #956	; 0x3bc
   13514:	ldrsb	r5, [r1]
   13518:	add	r9, ip, #2
   1351c:	add	r3, r7, #38	; 0x26
   13520:	cmp	r9, r3
   13524:	str	r9, [sp, #32]
   13528:	strh	r5, [ip, #2]
   1352c:	bcs	13e38 <close_stdout@@Base+0x14a4>
   13530:	cmp	r5, #12
   13534:	bne	1315c <close_stdout@@Base+0x7c8>
   13538:	mov	r0, #0
   1353c:	b	13554 <close_stdout@@Base+0xbc0>
   13540:	cmp	fp, #0
   13544:	mvngt	fp, #1
   13548:	bgt	131e4 <close_stdout@@Base+0x850>
   1354c:	bne	131e4 <close_stdout@@Base+0x850>
   13550:	mov	r0, #1
   13554:	ldr	r4, [sp, #44]	; 0x2c
   13558:	ldr	r2, [sp, #740]	; 0x2e4
   1355c:	ldr	r3, [r4]
   13560:	cmp	r2, r3
   13564:	bne	14050 <close_stdout@@Base+0x16bc>
   13568:	add	sp, sp, #748	; 0x2ec
   1356c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13570:	ldr	r3, [sl]
   13574:	ldrb	ip, [r3]
   13578:	sub	r2, ip, #9
   1357c:	uxtb	r2, r2
   13580:	cmp	ip, #32
   13584:	cmpne	r2, #4
   13588:	bls	13614 <close_stdout@@Base+0xc80>
   1358c:	subs	r0, ip, #45	; 0x2d
   13590:	sub	r2, ip, #48	; 0x30
   13594:	rsbs	r1, r0, #0
   13598:	adcs	r1, r1, r0
   1359c:	cmp	r2, #9
   135a0:	movhi	r6, r1
   135a4:	orrls	r6, r1, #1
   135a8:	cmp	r6, #0
   135ac:	bne	13628 <close_stdout@@Base+0xc94>
   135b0:	cmp	ip, #43	; 0x2b
   135b4:	beq	13720 <close_stdout@@Base+0xd8c>
   135b8:	bic	r2, ip, #32
   135bc:	sub	r2, r2, #65	; 0x41
   135c0:	cmp	r2, #25
   135c4:	bls	13e90 <close_stdout@@Base+0x14fc>
   135c8:	cmp	ip, #40	; 0x28
   135cc:	beq	135f4 <close_stdout@@Base+0xc60>
   135d0:	b	13fdc <close_stdout@@Base+0x1648>
   135d4:	cmp	r2, #40	; 0x28
   135d8:	addeq	r6, r6, #1
   135dc:	beq	135e8 <close_stdout@@Base+0xc54>
   135e0:	cmp	r2, #41	; 0x29
   135e4:	subeq	r6, r6, #1
   135e8:	cmp	r6, #0
   135ec:	beq	13728 <close_stdout@@Base+0xd94>
   135f0:	mov	r3, r0
   135f4:	add	r0, r3, #1
   135f8:	str	r0, [sl]
   135fc:	ldrb	r2, [r0, #-1]
   13600:	cmp	r2, #0
   13604:	bne	135d4 <close_stdout@@Base+0xc40>
   13608:	mov	fp, #0
   1360c:	mov	r3, fp
   13610:	b	13198 <close_stdout@@Base+0x804>
   13614:	add	r0, r3, #1
   13618:	str	r0, [sl]
   1361c:	ldrb	ip, [r3, #1]
   13620:	mov	r3, r0
   13624:	b	13578 <close_stdout@@Base+0xbe4>
   13628:	cmp	ip, #43	; 0x2b
   1362c:	movne	r9, r1
   13630:	orreq	r9, r1, #1
   13634:	cmp	r9, #0
   13638:	beq	13e6c <close_stdout@@Base+0x14d8>
   1363c:	cmp	r1, #0
   13640:	mvnne	r9, #0
   13644:	moveq	r9, #1
   13648:	add	r0, r3, #1
   1364c:	str	r0, [sl]
   13650:	ldrb	ip, [r3, #1]
   13654:	sub	r3, ip, #9
   13658:	cmp	ip, #32
   1365c:	cmpne	r3, #4
   13660:	bls	136d0 <close_stdout@@Base+0xd3c>
   13664:	sub	r2, ip, #48	; 0x30
   13668:	cmp	r2, #9
   1366c:	bhi	13620 <close_stdout@@Base+0xc8c>
   13670:	ldrb	r1, [r0, #1]
   13674:	add	r6, r0, #1
   13678:	sub	r3, r1, #48	; 0x30
   1367c:	cmp	r3, #9
   13680:	mov	r3, r0
   13684:	bhi	13d28 <close_stdout@@Base+0x1394>
   13688:	add	r0, r3, #2
   1368c:	ldr	fp, [sp, #68]	; 0x44
   13690:	b	136b0 <close_stdout@@Base+0xd1c>
   13694:	mov	r6, r0
   13698:	ldrb	r1, [r0], #1
   1369c:	sub	ip, r1, #48	; 0x30
   136a0:	cmp	ip, #9
   136a4:	bhi	13d28 <close_stdout@@Base+0x1394>
   136a8:	cmp	r2, fp
   136ac:	bhi	136c8 <close_stdout@@Base+0xd34>
   136b0:	add	r2, r2, r2, lsl #2
   136b4:	lsl	ip, r2, #1
   136b8:	add	r2, r1, ip
   136bc:	sub	r2, r2, #48	; 0x30
   136c0:	cmp	r2, ip
   136c4:	bcs	13694 <close_stdout@@Base+0xd00>
   136c8:	mov	fp, #63	; 0x3f
   136cc:	b	1317c <close_stdout@@Base+0x7e8>
   136d0:	mov	r3, r0
   136d4:	b	13648 <close_stdout@@Base+0xcb4>
   136d8:	ldr	r4, [sp, #36]	; 0x24
   136dc:	add	r6, sp, #92	; 0x5c
   136e0:	ldr	r9, [sp, #80]	; 0x50
   136e4:	add	r8, r8, #28
   136e8:	cmp	r4, #0
   136ec:	ldr	ip, [sp, #32]
   136f0:	subne	r4, r4, #1
   136f4:	strne	r4, [sp, #36]	; 0x24
   136f8:	ldr	r4, [sp, #84]	; 0x54
   136fc:	mvn	fp, #1
   13700:	str	r9, [sp, #96]	; 0x60
   13704:	str	r4, [sp, #100]	; 0x64
   13708:	mov	r4, r8
   1370c:	ldm	r6!, {r0, r1, r2, r3}
   13710:	stmia	r4!, {r0, r1, r2, r3}
   13714:	ldm	r6, {r0, r1, r2}
   13718:	stm	r4, {r0, r1, r2}
   1371c:	b	13518 <close_stdout@@Base+0xb84>
   13720:	mov	r9, #1
   13724:	b	13648 <close_stdout@@Base+0xcb4>
   13728:	ldrb	ip, [r3, #1]
   1372c:	b	13620 <close_stdout@@Base+0xc8c>
   13730:	ldr	r9, [r8, #-24]	; 0xffffffe8
   13734:	mov	r5, #0
   13738:	str	r9, [sp, #48]	; 0x30
   1373c:	mov	r9, r5
   13740:	str	r5, [sp, #56]	; 0x38
   13744:	str	r5, [sp, #60]	; 0x3c
   13748:	str	r5, [sp, #64]	; 0x40
   1374c:	str	r5, [sp, #52]	; 0x34
   13750:	b	13474 <close_stdout@@Base+0xae0>
   13754:	ldr	r9, [r8, #-24]	; 0xffffffe8
   13758:	mov	r5, #0
   1375c:	str	r5, [sp, #56]	; 0x38
   13760:	str	r5, [sp, #60]	; 0x3c
   13764:	str	r5, [sp, #64]	; 0x40
   13768:	str	r5, [sp, #52]	; 0x34
   1376c:	str	r5, [sp, #48]	; 0x30
   13770:	b	13474 <close_stdout@@Base+0xae0>
   13774:	ldr	r9, [r8, #-24]	; 0xffffffe8
   13778:	mov	r5, #0
   1377c:	str	r9, [sp, #60]	; 0x3c
   13780:	mov	r9, r5
   13784:	str	r5, [sp, #56]	; 0x38
   13788:	str	r5, [sp, #64]	; 0x40
   1378c:	str	r5, [sp, #52]	; 0x34
   13790:	str	r5, [sp, #48]	; 0x30
   13794:	b	13474 <close_stdout@@Base+0xae0>
   13798:	ldr	r9, [r8]
   1379c:	mov	r5, #0
   137a0:	str	r5, [sp, #56]	; 0x38
   137a4:	str	r5, [sp, #60]	; 0x3c
   137a8:	str	r9, [sp, #64]	; 0x40
   137ac:	mov	r9, r5
   137b0:	str	r5, [sp, #52]	; 0x34
   137b4:	str	r5, [sp, #48]	; 0x30
   137b8:	b	13474 <close_stdout@@Base+0xae0>
   137bc:	ldr	r3, [r8, #-24]	; 0xffffffe8
   137c0:	ldr	r2, [r8]
   137c4:	mov	r5, #0
   137c8:	mov	r9, r5
   137cc:	str	r5, [sp, #56]	; 0x38
   137d0:	str	r5, [sp, #60]	; 0x3c
   137d4:	mul	r2, r2, r3
   137d8:	str	r5, [sp, #52]	; 0x34
   137dc:	str	r5, [sp, #48]	; 0x30
   137e0:	str	r2, [sp, #64]	; 0x40
   137e4:	b	13474 <close_stdout@@Base+0xae0>
   137e8:	ldr	r9, [r8, #-24]	; 0xffffffe8
   137ec:	mov	r5, #0
   137f0:	str	r9, [sp, #52]	; 0x34
   137f4:	mov	r9, r5
   137f8:	str	r5, [sp, #56]	; 0x38
   137fc:	str	r5, [sp, #60]	; 0x3c
   13800:	str	r5, [sp, #64]	; 0x40
   13804:	str	r5, [sp, #48]	; 0x30
   13808:	b	13474 <close_stdout@@Base+0xae0>
   1380c:	ldr	r9, [r8, #-24]	; 0xffffffe8
   13810:	mov	r5, #0
   13814:	str	r9, [sp, #56]	; 0x38
   13818:	mov	r9, r5
   1381c:	str	r5, [sp, #60]	; 0x3c
   13820:	str	r5, [sp, #64]	; 0x40
   13824:	str	r5, [sp, #52]	; 0x34
   13828:	str	r5, [sp, #48]	; 0x30
   1382c:	b	13474 <close_stdout@@Base+0xae0>
   13830:	ldr	r3, [r8, #-104]	; 0xffffff98
   13834:	cmp	r3, #3
   13838:	bls	13e64 <close_stdout@@Base+0x14d0>
   1383c:	sub	r2, r8, #112	; 0x70
   13840:	add	r3, sl, #24
   13844:	ldm	r2, {r0, r1, r2}
   13848:	stm	r3, {r0, r1, r2}
   1384c:	ldr	r3, [r8, #-52]	; 0xffffffcc
   13850:	str	r3, [sl, #36]	; 0x24
   13854:	ldr	r3, [r8, #4]
   13858:	str	r3, [sl, #40]	; 0x28
   1385c:	b	13474 <close_stdout@@Base+0xae0>
   13860:	ldr	r1, [r8, #4]
   13864:	str	r1, [sp, #48]	; 0x30
   13868:	b	13474 <close_stdout@@Base+0xae0>
   1386c:	mov	r5, #0
   13870:	mov	r9, #1
   13874:	b	13814 <close_stdout@@Base+0xe80>
   13878:	ldr	r3, [r8, #-24]	; 0xffffffe8
   1387c:	str	r3, [sl, #4]
   13880:	ldr	r3, [r8]
   13884:	str	r3, [sl, #8]
   13888:	b	13474 <close_stdout@@Base+0xae0>
   1388c:	ldr	r3, [sl, #108]	; 0x6c
   13890:	add	r3, r3, #1
   13894:	str	r3, [sl, #108]	; 0x6c
   13898:	b	13474 <close_stdout@@Base+0xae0>
   1389c:	ldr	r2, [sl, #108]	; 0x6c
   138a0:	ldr	r3, [sl, #92]	; 0x5c
   138a4:	add	r2, r2, #1
   138a8:	str	r2, [sl, #108]	; 0x6c
   138ac:	add	r3, r3, #1
   138b0:	str	r3, [sl, #92]	; 0x5c
   138b4:	b	13474 <close_stdout@@Base+0xae0>
   138b8:	ldm	r8, {r0, r1}
   138bc:	add	r3, sl, #52	; 0x34
   138c0:	mov	r2, #1
   138c4:	stm	r3, {r0, r1}
   138c8:	strb	r2, [sl, #88]	; 0x58
   138cc:	b	13474 <close_stdout@@Base+0xae0>
   138d0:	mov	r5, #0
   138d4:	mov	r9, #1
   138d8:	b	13738 <close_stdout@@Base+0xda4>
   138dc:	mov	r5, #0
   138e0:	ldr	r9, [r8, #-28]	; 0xffffffe4
   138e4:	b	1375c <close_stdout@@Base+0xdc8>
   138e8:	mov	r5, #0
   138ec:	mov	r9, #1
   138f0:	b	1377c <close_stdout@@Base+0xde8>
   138f4:	mvn	r0, #0
   138f8:	str	r0, [sp, #48]	; 0x30
   138fc:	b	13474 <close_stdout@@Base+0xae0>
   13900:	mov	r5, #0
   13904:	ldr	r9, [r8, #-28]	; 0xffffffe4
   13908:	b	1377c <close_stdout@@Base+0xde8>
   1390c:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13910:	b	137c0 <close_stdout@@Base+0xe2c>
   13914:	mov	r5, #0
   13918:	mov	r9, #1
   1391c:	b	137f0 <close_stdout@@Base+0xe5c>
   13920:	ldr	r1, [r8, #-28]	; 0xffffffe4
   13924:	mov	r9, #0
   13928:	str	r1, [sp, #56]	; 0x38
   1392c:	str	r9, [sp, #60]	; 0x3c
   13930:	str	r9, [sp, #64]	; 0x40
   13934:	str	r9, [sp, #52]	; 0x34
   13938:	str	r9, [sp, #48]	; 0x30
   1393c:	ldr	r5, [r8, #-24]	; 0xffffffe8
   13940:	b	13474 <close_stdout@@Base+0xae0>
   13944:	ldr	r0, [r8, #-28]	; 0xffffffe4
   13948:	mov	r9, #0
   1394c:	str	r0, [sp, #56]	; 0x38
   13950:	b	1392c <close_stdout@@Base+0xf98>
   13954:	mov	r0, sl
   13958:	ldm	r8, {r1, r2, r3}
   1395c:	bl	12cb8 <close_stdout@@Base+0x324>
   13960:	b	13474 <close_stdout@@Base+0xae0>
   13964:	mov	r5, #0
   13968:	ldr	r9, [r8, #-28]	; 0xffffffe4
   1396c:	b	13814 <close_stdout@@Base+0xe80>
   13970:	ldr	r2, [r8, #-24]	; 0xffffffe8
   13974:	mov	r3, #0
   13978:	str	r3, [sl, #48]	; 0x30
   1397c:	str	r3, [sl, #52]	; 0x34
   13980:	str	r2, [sl, #44]	; 0x2c
   13984:	str	r3, [sl, #56]	; 0x38
   13988:	ldr	r3, [r8]
   1398c:	str	r3, [sl, #20]
   13990:	b	13474 <close_stdout@@Base+0xae0>
   13994:	ldr	r3, [sl, #96]	; 0x60
   13998:	add	r3, r3, #1
   1399c:	str	r3, [sl, #96]	; 0x60
   139a0:	b	13474 <close_stdout@@Base+0xae0>
   139a4:	ldr	r3, [sl, #92]	; 0x5c
   139a8:	add	r3, r3, #1
   139ac:	str	r3, [sl, #92]	; 0x5c
   139b0:	b	13474 <close_stdout@@Base+0xae0>
   139b4:	ldr	r3, [sl, #112]	; 0x70
   139b8:	add	r3, r3, #1
   139bc:	str	r3, [sl, #112]	; 0x70
   139c0:	b	13474 <close_stdout@@Base+0xae0>
   139c4:	ldr	r3, [sl, #100]	; 0x64
   139c8:	add	r3, r3, #1
   139cc:	str	r3, [sl, #100]	; 0x64
   139d0:	b	13474 <close_stdout@@Base+0xae0>
   139d4:	mov	r5, #0
   139d8:	ldr	r9, [r8, #-28]	; 0xffffffe4
   139dc:	b	137f0 <close_stdout@@Base+0xe5c>
   139e0:	mov	r5, #0
   139e4:	ldr	r9, [r8, #-28]	; 0xffffffe4
   139e8:	b	13738 <close_stdout@@Base+0xda4>
   139ec:	mov	r3, r8
   139f0:	sub	ip, r8, #28
   139f4:	ldr	r2, [r3], #-16
   139f8:	str	r2, [sp, #16]
   139fc:	ldm	r3, {r0, r1, r2, r3}
   13a00:	stm	sp, {r0, r1, r2, r3}
   13a04:	mov	r0, sl
   13a08:	ldm	ip, {r1, r2, r3}
   13a0c:	bl	12df8 <close_stdout@@Base+0x464>
   13a10:	b	13474 <close_stdout@@Base+0xae0>
   13a14:	sub	r2, r8, #56	; 0x38
   13a18:	add	r3, sl, #24
   13a1c:	ldm	r2, {r0, r1, r2}
   13a20:	stm	r3, {r0, r1, r2}
   13a24:	ldr	r3, [r8, #-24]	; 0xffffffe8
   13a28:	rsb	r3, r3, #0
   13a2c:	str	r3, [sl, #36]	; 0x24
   13a30:	ldr	r3, [r8, #4]
   13a34:	rsb	r3, r3, #0
   13a38:	str	r3, [sl, #40]	; 0x28
   13a3c:	b	13474 <close_stdout@@Base+0xae0>
   13a40:	ldr	r2, [r8, #-52]	; 0xffffffcc
   13a44:	add	r3, sl, #24
   13a48:	str	r2, [sl, #40]	; 0x28
   13a4c:	ldr	r2, [r8, #-28]	; 0xffffffe4
   13a50:	str	r2, [sl, #36]	; 0x24
   13a54:	ldm	r8, {r0, r1, r2}
   13a58:	stm	r3, {r0, r1, r2}
   13a5c:	b	13474 <close_stdout@@Base+0xae0>
   13a60:	ldr	r3, [r8, #-24]	; 0xffffffe8
   13a64:	str	r3, [sl, #40]	; 0x28
   13a68:	ldr	r3, [r8]
   13a6c:	str	r3, [sl, #36]	; 0x24
   13a70:	b	13474 <close_stdout@@Base+0xae0>
   13a74:	ldr	r2, [r8, #-84]	; 0xffffffac
   13a78:	str	r2, [sl, #36]	; 0x24
   13a7c:	add	r3, sl, #24
   13a80:	ldr	r2, [r8, #-52]	; 0xffffffcc
   13a84:	str	r2, [sl, #40]	; 0x28
   13a88:	ldm	r8, {r0, r1, r2}
   13a8c:	stm	r3, {r0, r1, r2}
   13a90:	b	13474 <close_stdout@@Base+0xae0>
   13a94:	ldr	r0, [r8, #4]
   13a98:	mov	r1, #0
   13a9c:	str	r1, [sp, #52]	; 0x34
   13aa0:	str	r0, [sp, #48]	; 0x30
   13aa4:	b	13474 <close_stdout@@Base+0xae0>
   13aa8:	ldr	r2, [r8, #4]
   13aac:	mov	r3, #0
   13ab0:	str	r3, [sp, #52]	; 0x34
   13ab4:	str	r2, [sp, #48]	; 0x30
   13ab8:	b	13474 <close_stdout@@Base+0xae0>
   13abc:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13ac0:	str	r3, [sl, #4]
   13ac4:	ldr	r3, [r8]
   13ac8:	str	r3, [sl, #8]
   13acc:	b	13474 <close_stdout@@Base+0xae0>
   13ad0:	mov	r3, #0
   13ad4:	str	r3, [sl, #4]
   13ad8:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13adc:	str	r3, [sl, #8]
   13ae0:	b	13474 <close_stdout@@Base+0xae0>
   13ae4:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13ae8:	str	r3, [sl, #36]	; 0x24
   13aec:	ldr	r3, [r8, #4]
   13af0:	str	r3, [sl, #40]	; 0x28
   13af4:	b	13474 <close_stdout@@Base+0xae0>
   13af8:	ldr	r3, [r8, #-56]	; 0xffffffc8
   13afc:	str	r3, [sl, #36]	; 0x24
   13b00:	ldr	r3, [r8, #-24]	; 0xffffffe8
   13b04:	rsb	r3, r3, #0
   13b08:	str	r3, [sl, #40]	; 0x28
   13b0c:	ldr	r3, [r8, #4]
   13b10:	rsb	r3, r3, #0
   13b14:	str	r3, [sl, #28]
   13b18:	ldr	r3, [r8, #8]
   13b1c:	str	r3, [sl, #32]
   13b20:	b	13474 <close_stdout@@Base+0xae0>
   13b24:	ldr	r3, [r8, #-52]	; 0xffffffcc
   13b28:	str	r3, [sl, #40]	; 0x28
   13b2c:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13b30:	str	r3, [sl, #36]	; 0x24
   13b34:	b	13b0c <close_stdout@@Base+0x1178>
   13b38:	mov	r3, #0
   13b3c:	str	r3, [sl, #4]
   13b40:	ldr	r3, [r8]
   13b44:	str	r3, [sl, #8]
   13b48:	b	13474 <close_stdout@@Base+0xae0>
   13b4c:	ldr	r3, [r8, #-28]	; 0xffffffe4
   13b50:	add	r3, r3, #60	; 0x3c
   13b54:	str	r3, [sl, #16]
   13b58:	b	13474 <close_stdout@@Base+0xae0>
   13b5c:	ldr	r3, [r8]
   13b60:	add	r3, r3, #60	; 0x3c
   13b64:	str	r3, [sl, #16]
   13b68:	b	13474 <close_stdout@@Base+0xae0>
   13b6c:	ldr	lr, [r8]
   13b70:	add	r0, sl, #112	; 0x70
   13b74:	ldr	ip, [r8, #-56]	; 0xffffffc8
   13b78:	ldrb	r1, [r8, #-28]	; 0xffffffe4
   13b7c:	ldr	r2, [r8, #-24]	; 0xffffffe8
   13b80:	ldr	r3, [r8, #-20]	; 0xffffffec
   13b84:	str	lr, [sp]
   13b88:	str	ip, [sp, #28]
   13b8c:	bl	12f7c <close_stdout@@Base+0x5e8>
   13b90:	ldr	ip, [sp, #28]
   13b94:	add	r0, ip, r0
   13b98:	str	r0, [sl, #16]
   13b9c:	b	13474 <close_stdout@@Base+0xae0>
   13ba0:	add	r3, r8, #12
   13ba4:	mov	r1, #420	; 0x1a4
   13ba8:	mov	r2, #1
   13bac:	str	r1, [sl, #16]
   13bb0:	b	1345c <close_stdout@@Base+0xac8>
   13bb4:	ldr	r1, [r8, #-28]	; 0xffffffe4
   13bb8:	add	r3, r8, #12
   13bbc:	b	13ba8 <close_stdout@@Base+0x1214>
   13bc0:	mov	r3, #420	; 0x1a4
   13bc4:	str	r3, [sl, #16]
   13bc8:	b	13474 <close_stdout@@Base+0xae0>
   13bcc:	ldr	r3, [r8]
   13bd0:	str	r3, [sl, #16]
   13bd4:	b	13474 <close_stdout@@Base+0xae0>
   13bd8:	mov	r3, #1
   13bdc:	str	r3, [sl, #12]
   13be0:	ldr	r2, [r8, #-28]	; 0xffffffe4
   13be4:	ldr	r3, [sl, #104]	; 0x68
   13be8:	cmp	r2, #0
   13bec:	movle	r2, #1
   13bf0:	movgt	r2, #2
   13bf4:	add	r3, r2, r3
   13bf8:	str	r3, [sl, #104]	; 0x68
   13bfc:	b	13474 <close_stdout@@Base+0xae0>
   13c00:	ldr	r2, [r8]
   13c04:	ldr	r3, [sl, #104]	; 0x68
   13c08:	str	r2, [sl, #12]
   13c0c:	ldr	r2, [r8]
   13c10:	cmp	r2, #0
   13c14:	addgt	r3, r3, #1
   13c18:	str	r3, [sl, #104]	; 0x68
   13c1c:	b	13474 <close_stdout@@Base+0xae0>
   13c20:	ldr	r3, [sl, #112]	; 0x70
   13c24:	mov	r0, sl
   13c28:	add	r3, r3, #1
   13c2c:	str	r3, [r0, #112]!	; 0x70
   13c30:	ldr	ip, [r8]
   13c34:	ldrb	r1, [r8, #-28]	; 0xffffffe4
   13c38:	ldr	r2, [r8, #-24]	; 0xffffffe8
   13c3c:	ldr	r3, [r8, #-20]	; 0xffffffec
   13c40:	str	ip, [sp]
   13c44:	bl	12f7c <close_stdout@@Base+0x5e8>
   13c48:	str	r0, [sl, #16]
   13c4c:	b	13474 <close_stdout@@Base+0xae0>
   13c50:	ldr	ip, [r8, #-136]	; 0xffffff78
   13c54:	mov	r3, #2
   13c58:	ldr	r0, [r8, #-80]	; 0xffffffb0
   13c5c:	ldr	r1, [r8, #-28]	; 0xffffffe4
   13c60:	ldr	r2, [r8, #-24]	; 0xffffffe8
   13c64:	str	ip, [sl, #44]	; 0x2c
   13c68:	str	r0, [sl, #48]	; 0x30
   13c6c:	str	r1, [sl, #52]	; 0x34
   13c70:	str	r2, [sl, #56]	; 0x38
   13c74:	str	r3, [sl, #20]
   13c78:	b	13474 <close_stdout@@Base+0xae0>
   13c7c:	ldr	r0, [r8, #-80]	; 0xffffffb0
   13c80:	mov	r3, #0
   13c84:	ldr	r1, [r8, #-24]	; 0xffffffe8
   13c88:	mov	r2, #2
   13c8c:	str	r3, [sl, #52]	; 0x34
   13c90:	str	r0, [sl, #44]	; 0x2c
   13c94:	str	r1, [sl, #48]	; 0x30
   13c98:	str	r3, [sl, #56]	; 0x38
   13c9c:	str	r2, [sl, #20]
   13ca0:	b	13474 <close_stdout@@Base+0xae0>
   13ca4:	ldr	r1, [r8, #-24]	; 0xffffffe8
   13ca8:	mov	r3, #0
   13cac:	mov	r2, #2
   13cb0:	str	r3, [sl, #48]	; 0x30
   13cb4:	str	r3, [sl, #52]	; 0x34
   13cb8:	str	r1, [sl, #44]	; 0x2c
   13cbc:	str	r3, [sl, #56]	; 0x38
   13cc0:	str	r2, [sl, #20]
   13cc4:	b	13474 <close_stdout@@Base+0xae0>
   13cc8:	ldr	r3, [r8, #-24]	; 0xffffffe8
   13ccc:	ldr	r0, [r8, #-136]	; 0xffffff78
   13cd0:	ldr	r1, [r8, #-80]	; 0xffffffb0
   13cd4:	ldr	r2, [r8, #-28]	; 0xffffffe4
   13cd8:	str	r0, [sl, #44]	; 0x2c
   13cdc:	str	r1, [sl, #48]	; 0x30
   13ce0:	str	r2, [sl, #52]	; 0x34
   13ce4:	str	r3, [sl, #56]	; 0x38
   13ce8:	ldr	r3, [r8]
   13cec:	str	r3, [sl, #20]
   13cf0:	b	13474 <close_stdout@@Base+0xae0>
   13cf4:	ldr	r1, [r8, #-80]	; 0xffffffb0
   13cf8:	mov	r3, #0
   13cfc:	ldr	r2, [r8, #-24]	; 0xffffffe8
   13d00:	str	r3, [sl, #52]	; 0x34
   13d04:	str	r1, [sl, #44]	; 0x2c
   13d08:	str	r2, [sl, #48]	; 0x30
   13d0c:	str	r3, [sl, #56]	; 0x38
   13d10:	ldr	r3, [r8]
   13d14:	str	r3, [sl, #20]
   13d18:	b	13474 <close_stdout@@Base+0xae0>
   13d1c:	mov	r5, #0
   13d20:	mov	r9, #1
   13d24:	b	1375c <close_stdout@@Base+0xdc8>
   13d28:	and	r1, r1, #253	; 0xfd
   13d2c:	cmp	r1, #44	; 0x2c
   13d30:	bne	13dfc <close_stdout@@Base+0x1468>
   13d34:	ldrb	r0, [r6, #1]
   13d38:	sub	r0, r0, #48	; 0x30
   13d3c:	cmp	r0, #9
   13d40:	bhi	13dfc <close_stdout@@Base+0x1468>
   13d44:	cmn	r9, #1
   13d48:	beq	13f50 <close_stdout@@Base+0x15bc>
   13d4c:	cmp	r2, #0
   13d50:	mov	ip, r2
   13d54:	blt	136c8 <close_stdout@@Base+0xd34>
   13d58:	ldrb	r1, [r6, #2]
   13d5c:	add	r6, r6, #2
   13d60:	mov	r3, r0
   13d64:	mov	r0, #8
   13d68:	sub	r2, r1, #48	; 0x30
   13d6c:	cmp	r2, #9
   13d70:	add	r3, r3, r3, lsl #2
   13d74:	ldrbls	r1, [r6, #1]
   13d78:	lsl	r3, r3, #1
   13d7c:	addls	r3, r3, r2
   13d80:	addls	r6, r6, #1
   13d84:	subls	r2, r1, #48	; 0x30
   13d88:	subs	r0, r0, #1
   13d8c:	bne	13d6c <close_stdout@@Base+0x13d8>
   13d90:	cmn	r9, #1
   13d94:	beq	14164 <close_stdout@@Base+0x17d0>
   13d98:	cmp	r2, #9
   13d9c:	bhi	13dbc <close_stdout@@Base+0x1428>
   13da0:	add	r2, r6, #1
   13da4:	mov	r6, r2
   13da8:	add	r2, r2, #1
   13dac:	ldrb	r1, [r6]
   13db0:	sub	r1, r1, #48	; 0x30
   13db4:	cmp	r1, #9
   13db8:	bls	13da4 <close_stdout@@Base+0x1410>
   13dbc:	lsr	r2, r9, #31
   13dc0:	cmp	r3, #0
   13dc4:	moveq	r2, #0
   13dc8:	andne	r2, r2, #1
   13dcc:	cmp	r2, #0
   13dd0:	beq	1419c <close_stdout@@Base+0x1808>
   13dd4:	subs	ip, ip, #1
   13dd8:	bpl	136c8 <close_stdout@@Base+0xd34>
   13ddc:	mov	r9, #51712	; 0xca00
   13de0:	movt	r9, #15258	; 0x3b9a
   13de4:	rsb	r9, r3, r9
   13de8:	str	ip, [sp, #92]	; 0x5c
   13dec:	str	r9, [sp, #80]	; 0x50
   13df0:	mov	fp, #276	; 0x114
   13df4:	str	r6, [sl]
   13df8:	b	1317c <close_stdout@@Base+0x7e8>
   13dfc:	cmn	r9, #1
   13e00:	lsr	r1, r9, #31
   13e04:	strb	r1, [sp, #92]	; 0x5c
   13e08:	beq	13e40 <close_stdout@@Base+0x14ac>
   13e0c:	cmp	r2, #0
   13e10:	str	r2, [sp, #80]	; 0x50
   13e14:	blt	136c8 <close_stdout@@Base+0xd34>
   13e18:	cmp	r9, #0
   13e1c:	rsb	r3, r3, r6
   13e20:	str	r3, [sp, #84]	; 0x54
   13e24:	movw	r3, #274	; 0x112
   13e28:	movw	fp, #275	; 0x113
   13e2c:	str	r6, [sl]
   13e30:	movne	fp, r3
   13e34:	b	1317c <close_stdout@@Base+0x7e8>
   13e38:	mov	r0, #2
   13e3c:	b	13554 <close_stdout@@Base+0xbc0>
   13e40:	rsb	r2, r2, #0
   13e44:	str	r2, [sp, #80]	; 0x50
   13e48:	cmp	r2, #0
   13e4c:	bgt	136c8 <close_stdout@@Base+0xd34>
   13e50:	rsb	r3, r3, r6
   13e54:	str	r6, [sl]
   13e58:	str	r3, [sp, #84]	; 0x54
   13e5c:	movw	fp, #274	; 0x112
   13e60:	b	1317c <close_stdout@@Base+0x7e8>
   13e64:	ldr	r2, [r8, #-108]	; 0xffffff94
   13e68:	b	13a78 <close_stdout@@Base+0x10e4>
   13e6c:	ldrb	r1, [r3, #1]
   13e70:	add	r6, r3, #1
   13e74:	sub	r0, r1, #48	; 0x30
   13e78:	cmp	r0, #9
   13e7c:	bhi	13d28 <close_stdout@@Base+0x1394>
   13e80:	ldr	r0, [sp, #68]	; 0x44
   13e84:	cmp	r2, r0
   13e88:	bls	13688 <close_stdout@@Base+0xcf4>
   13e8c:	b	136c8 <close_stdout@@Base+0xd34>
   13e90:	add	r9, sp, #720	; 0x2d0
   13e94:	mov	r2, r9
   13e98:	rsb	r3, r9, r2
   13e9c:	cmp	r3, #18
   13ea0:	strbls	ip, [r2]
   13ea4:	ldr	r3, [sl]
   13ea8:	addls	r2, r2, #1
   13eac:	add	r1, r3, #1
   13eb0:	str	r1, [sl]
   13eb4:	ldrb	ip, [r3, #1]
   13eb8:	bic	r3, ip, #32
   13ebc:	sub	r3, r3, #65	; 0x41
   13ec0:	cmp	r3, #25
   13ec4:	bls	13e98 <close_stdout@@Base+0x1504>
   13ec8:	cmp	ip, #46	; 0x2e
   13ecc:	beq	13e98 <close_stdout@@Base+0x1504>
   13ed0:	mov	r3, #0
   13ed4:	strb	r3, [r2]
   13ed8:	ldrb	r3, [sp, #720]	; 0x2d0
   13edc:	cmp	r3, #0
   13ee0:	addne	r2, sp, #716	; 0x2cc
   13ee4:	addne	r2, r2, #3
   13ee8:	beq	13f08 <close_stdout@@Base+0x1574>
   13eec:	sub	r1, r3, #97	; 0x61
   13ef0:	cmp	r1, #25
   13ef4:	subls	r3, r3, #32
   13ef8:	strb	r3, [r2, #1]!
   13efc:	ldrb	r3, [r2, #1]
   13f00:	cmp	r3, #0
   13f04:	bne	13eec <close_stdout@@Base+0x1558>
   13f08:	ldr	fp, [pc, #372]	; 14084 <close_stdout@@Base+0x16f0>
   13f0c:	ldr	r1, [pc, #372]	; 14088 <close_stdout@@Base+0x16f4>
   13f10:	add	fp, pc, fp
   13f14:	add	r1, pc, r1
   13f18:	add	fp, fp, #948	; 0x3b4
   13f1c:	b	13f2c <close_stdout@@Base+0x1598>
   13f20:	ldr	r1, [fp, #12]!
   13f24:	cmp	r1, #0
   13f28:	beq	13f68 <close_stdout@@Base+0x15d4>
   13f2c:	mov	r0, r9
   13f30:	bl	113c8 <strcmp@plt>
   13f34:	cmp	r0, #0
   13f38:	bne	13f20 <close_stdout@@Base+0x158c>
   13f3c:	mov	r0, fp
   13f40:	ldr	r3, [r0, #8]
   13f44:	ldr	fp, [r0, #4]
   13f48:	str	r3, [sp, #92]	; 0x5c
   13f4c:	b	13174 <close_stdout@@Base+0x7e0>
   13f50:	rsb	ip, r2, #0
   13f54:	cmp	ip, #0
   13f58:	bgt	136c8 <close_stdout@@Base+0xd34>
   13f5c:	cmn	r2, ip
   13f60:	bne	136c8 <close_stdout@@Base+0xd34>
   13f64:	b	13d58 <close_stdout@@Base+0x13c4>
   13f68:	mov	r0, r9
   13f6c:	bl	115a8 <strlen@plt>
   13f70:	cmp	r0, #3
   13f74:	str	r0, [sp, #48]	; 0x30
   13f78:	moveq	r6, #1
   13f7c:	beq	13f88 <close_stdout@@Base+0x15f4>
   13f80:	cmp	r0, #4
   13f84:	beq	14150 <close_stdout@@Base+0x17bc>
   13f88:	ldr	r0, [sp, #76]	; 0x4c
   13f8c:	ldr	r1, [pc, #248]	; 1408c <close_stdout@@Base+0x16f8>
   13f90:	add	fp, r0, #4
   13f94:	add	r1, pc, r1
   13f98:	b	13fc0 <close_stdout@@Base+0x162c>
   13f9c:	mov	r2, #3
   13fa0:	bl	11710 <strncmp@plt>
   13fa4:	rsbs	r0, r0, #1
   13fa8:	movcc	r0, #0
   13fac:	cmp	r0, #0
   13fb0:	bne	13f3c <close_stdout@@Base+0x15a8>
   13fb4:	ldr	r1, [fp, #12]!
   13fb8:	cmp	r1, #0
   13fbc:	beq	13fec <close_stdout@@Base+0x1658>
   13fc0:	cmp	r6, #0
   13fc4:	mov	r0, r9
   13fc8:	bne	13f9c <close_stdout@@Base+0x1608>
   13fcc:	bl	113c8 <strcmp@plt>
   13fd0:	rsbs	r0, r0, #1
   13fd4:	movcc	r0, #0
   13fd8:	b	13fac <close_stdout@@Base+0x1618>
   13fdc:	add	r2, r3, #1
   13fe0:	str	r2, [sl]
   13fe4:	ldrb	fp, [r3]
   13fe8:	b	13174 <close_stdout@@Base+0x7e0>
   13fec:	mov	r0, sl
   13ff0:	mov	r1, r9
   13ff4:	bl	13004 <close_stdout@@Base+0x670>
   13ff8:	cmp	r0, #0
   13ffc:	bne	13f40 <close_stdout@@Base+0x15ac>
   14000:	ldr	r1, [pc, #136]	; 14090 <close_stdout@@Base+0x16fc>
   14004:	mov	r0, r9
   14008:	add	r1, pc, r1
   1400c:	bl	113c8 <strcmp@plt>
   14010:	cmp	r0, #0
   14014:	beq	14140 <close_stdout@@Base+0x17ac>
   14018:	ldr	r3, [pc, #116]	; 14094 <close_stdout@@Base+0x1700>
   1401c:	ldr	r6, [sp, #72]	; 0x48
   14020:	add	r3, pc, r3
   14024:	mov	r1, r3
   14028:	b	14038 <close_stdout@@Base+0x16a4>
   1402c:	ldr	r1, [r6, #12]!
   14030:	cmp	r1, #0
   14034:	beq	140b0 <close_stdout@@Base+0x171c>
   14038:	mov	r0, r9
   1403c:	bl	113c8 <strcmp@plt>
   14040:	cmp	r0, #0
   14044:	bne	1402c <close_stdout@@Base+0x1698>
   14048:	mov	r0, r6
   1404c:	b	13f40 <close_stdout@@Base+0x15ac>
   14050:	bl	11458 <__stack_chk_fail@plt>
   14054:	andeq	r8, r1, ip, lsl pc
   14058:	andeq	r0, r0, r4, asr r1
   1405c:	andeq	r8, r1, ip, lsr #14
   14060:	andeq	r8, r1, r4, lsr #14
   14064:	andeq	r6, r0, r8, lsl #14
   14068:			; <UNDEFINED> instruction: 0x000066b8
   1406c:	muleq	r0, ip, r6
   14070:	andeq	r6, r0, r0, lsl #13
   14074:	andeq	r6, r0, r8, asr r6
   14078:			; <UNDEFINED> instruction: 0x000065b4
   1407c:	andeq	r6, r0, r4, asr #7
   14080:	andeq	r6, r0, ip, lsr r3
   14084:	andeq	r7, r1, r0, lsr r9
   14088:	andeq	r5, r0, r4, lsl sp
   1408c:	muleq	r0, r8, ip
   14090:	andeq	r5, r0, r0, asr #24
   14094:	andeq	r5, r0, r4, lsl ip
   14098:	andeq	r7, r1, r0, ror r7
   1409c:	andeq	r5, r0, r8, ror #22
   140a0:	strdeq	r7, [r1], -ip
   140a4:	andeq	r5, r0, ip, ror #20
   140a8:	andeq	r7, r1, ip, lsl r6
   140ac:	andeq	r7, r1, ip, ror #11
   140b0:	ldr	r0, [sp, #48]	; 0x30
   140b4:	mov	r3, r1
   140b8:	sub	fp, r0, #1
   140bc:	ldrb	r2, [r9, fp]
   140c0:	cmp	r2, #83	; 0x53
   140c4:	beq	141c0 <close_stdout@@Base+0x182c>
   140c8:	ldr	r6, [pc, #-56]	; 14098 <close_stdout@@Base+0x1704>
   140cc:	ldr	r1, [pc, #-56]	; 1409c <close_stdout@@Base+0x1708>
   140d0:	add	r6, pc, r6
   140d4:	add	r1, pc, r1
   140d8:	add	r6, r6, #1440	; 0x5a0
   140dc:	mov	r0, r9
   140e0:	bl	113c8 <strcmp@plt>
   140e4:	cmp	r0, #0
   140e8:	beq	14048 <close_stdout@@Base+0x16b4>
   140ec:	ldr	r1, [r6, #12]!
   140f0:	cmp	r1, #0
   140f4:	bne	140dc <close_stdout@@Base+0x1748>
   140f8:	ldr	r3, [sp, #48]	; 0x30
   140fc:	cmp	r3, #1
   14100:	ldrb	r3, [sp, #720]	; 0x2d0
   14104:	beq	14218 <close_stdout@@Base+0x1884>
   14108:	cmp	r3, #0
   1410c:	movne	r1, r9
   14110:	movne	r0, #0
   14114:	movne	r2, r9
   14118:	beq	136c8 <close_stdout@@Base+0xd34>
   1411c:	cmp	r3, #46	; 0x2e
   14120:	ldrb	r3, [r1, #1]
   14124:	addne	r2, r2, #1
   14128:	moveq	r0, #1
   1412c:	cmp	r3, #0
   14130:	strb	r3, [r2]
   14134:	beq	141f8 <close_stdout@@Base+0x1864>
   14138:	ldrb	r3, [r1, #1]!
   1413c:	b	1411c <close_stdout@@Base+0x1788>
   14140:	ldr	r0, [pc, #-168]	; 140a0 <close_stdout@@Base+0x170c>
   14144:	add	r0, pc, r0
   14148:	add	r0, r0, #624	; 0x270
   1414c:	b	13f40 <close_stdout@@Base+0x15ac>
   14150:	ldrb	r6, [sp, #723]	; 0x2d3
   14154:	subs	r3, r6, #46	; 0x2e
   14158:	rsbs	r6, r3, #0
   1415c:	adcs	r6, r6, r3
   14160:	b	13f88 <close_stdout@@Base+0x15f4>
   14164:	cmp	r2, #9
   14168:	bhi	13dbc <close_stdout@@Base+0x1428>
   1416c:	cmp	r1, #48	; 0x30
   14170:	addeq	r2, r6, #1
   14174:	beq	14184 <close_stdout@@Base+0x17f0>
   14178:	b	141b8 <close_stdout@@Base+0x1824>
   1417c:	cmp	r1, #48	; 0x30
   14180:	bne	141b8 <close_stdout@@Base+0x1824>
   14184:	mov	r6, r2
   14188:	ldrb	r1, [r2], #1
   1418c:	sub	r0, r1, #48	; 0x30
   14190:	cmp	r0, #9
   14194:	bls	1417c <close_stdout@@Base+0x17e8>
   14198:	b	13dbc <close_stdout@@Base+0x1428>
   1419c:	cmp	r9, #0
   141a0:	movw	fp, #277	; 0x115
   141a4:	str	ip, [sp, #92]	; 0x5c
   141a8:	str	r3, [sp, #80]	; 0x50
   141ac:	movne	fp, #276	; 0x114
   141b0:	str	r6, [sl]
   141b4:	b	1317c <close_stdout@@Base+0x7e8>
   141b8:	add	r3, r3, #1
   141bc:	b	13da0 <close_stdout@@Base+0x140c>
   141c0:	ldr	r1, [pc, #-292]	; 140a4 <close_stdout@@Base+0x1710>
   141c4:	ldr	r6, [sp, #72]	; 0x48
   141c8:	add	r1, pc, r1
   141cc:	strb	r3, [r9, fp]
   141d0:	mov	r0, r9
   141d4:	bl	113c8 <strcmp@plt>
   141d8:	cmp	r0, #0
   141dc:	beq	14048 <close_stdout@@Base+0x16b4>
   141e0:	ldr	r1, [r6, #12]!
   141e4:	cmp	r1, #0
   141e8:	bne	141d0 <close_stdout@@Base+0x183c>
   141ec:	mov	r3, #83	; 0x53
   141f0:	strb	r3, [r9, fp]
   141f4:	b	140c8 <close_stdout@@Base+0x1734>
   141f8:	cmp	r0, #0
   141fc:	beq	136c8 <close_stdout@@Base+0xd34>
   14200:	mov	r1, r9
   14204:	mov	r0, sl
   14208:	bl	13004 <close_stdout@@Base+0x670>
   1420c:	cmp	r0, #0
   14210:	bne	13f40 <close_stdout@@Base+0x15ac>
   14214:	b	136c8 <close_stdout@@Base+0xd34>
   14218:	cmp	r3, #65	; 0x41
   1421c:	beq	14250 <close_stdout@@Base+0x18bc>
   14220:	ldr	r2, [pc, #-384]	; 140a8 <close_stdout@@Base+0x1714>
   14224:	add	r2, pc, r2
   14228:	add	r2, r2, #648	; 0x288
   1422c:	ldr	r1, [r2]
   14230:	mov	r0, r2
   14234:	cmp	r1, #0
   14238:	beq	14108 <close_stdout@@Base+0x1774>
   1423c:	ldrb	r1, [r1]
   14240:	add	r2, r2, #12
   14244:	cmp	r1, r3
   14248:	bne	1422c <close_stdout@@Base+0x1898>
   1424c:	b	13f40 <close_stdout@@Base+0x15ac>
   14250:	ldr	r0, [pc, #-428]	; 140ac <close_stdout@@Base+0x1718>
   14254:	add	r0, pc, r0
   14258:	add	r0, r0, #636	; 0x27c
   1425c:	b	13f40 <close_stdout@@Base+0x15ac>
   14260:	ldr	r3, [pc, #2312]	; 14b70 <close_stdout@@Base+0x21dc>
   14264:	cmp	r2, #0
   14268:	ldr	ip, [pc, #2308]	; 14b74 <close_stdout@@Base+0x21e0>
   1426c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14270:	add	r3, pc, r3
   14274:	sub	sp, sp, #500	; 0x1f4
   14278:	mov	r4, r1
   1427c:	str	r0, [sp, #32]
   14280:	ldr	ip, [r3, ip]
   14284:	ldr	r3, [ip]
   14288:	str	ip, [sp, #24]
   1428c:	str	r3, [sp, #492]	; 0x1ec
   14290:	beq	14a98 <close_stdout@@Base+0x2104>
   14294:	mov	r0, r2
   14298:	ldr	r9, [r2]
   1429c:	ldr	r2, [r2, #4]
   142a0:	str	r2, [sp, #28]
   142a4:	bl	11560 <localtime@plt>
   142a8:	subs	r5, r0, #0
   142ac:	beq	14544 <close_stdout@@Base+0x1bb0>
   142b0:	mov	r1, r4
   142b4:	mov	r4, r1
   142b8:	add	r1, r1, #1
   142bc:	ldrb	fp, [r4]
   142c0:	sub	r6, fp, #9
   142c4:	cmp	fp, #32
   142c8:	cmpne	r6, #4
   142cc:	movhi	r6, #0
   142d0:	movls	r6, #1
   142d4:	bls	142b4 <close_stdout@@Base+0x1920>
   142d8:	ldr	r1, [pc, #2200]	; 14b78 <close_stdout@@Base+0x21e4>
   142dc:	mov	r0, r4
   142e0:	mov	r2, #4
   142e4:	add	r1, pc, r1
   142e8:	bl	11710 <strncmp@plt>
   142ec:	cmp	r0, #0
   142f0:	bne	1434c <close_stdout@@Base+0x19b8>
   142f4:	ldrb	r6, [r4, #4]
   142f8:	add	r8, r4, #4
   142fc:	cmp	r6, #0
   14300:	beq	1434c <close_stdout@@Base+0x19b8>
   14304:	mov	r1, r8
   14308:	mov	sl, #1
   1430c:	b	1432c <close_stdout@@Base+0x1998>
   14310:	cmp	r6, #34	; 0x22
   14314:	beq	149bc <close_stdout@@Base+0x2028>
   14318:	ldrb	r6, [r1, #1]
   1431c:	add	sl, sl, #1
   14320:	add	r1, r1, #1
   14324:	cmp	r6, #0
   14328:	beq	1454c <close_stdout@@Base+0x1bb8>
   1432c:	cmp	r6, #92	; 0x5c
   14330:	bne	14310 <close_stdout@@Base+0x197c>
   14334:	ldrb	r3, [r1, #1]
   14338:	add	r1, r1, #1
   1433c:	cmp	r3, #34	; 0x22
   14340:	cmpne	r3, #92	; 0x5c
   14344:	beq	14318 <close_stdout@@Base+0x1984>
   14348:	mov	r6, #0
   1434c:	add	r7, sp, #292	; 0x124
   14350:	mov	r3, fp
   14354:	mov	fp, r6
   14358:	cmp	r3, #0
   1435c:	beq	14538 <close_stdout@@Base+0x1ba4>
   14360:	ldr	r1, [r5, #20]
   14364:	mov	r3, #0
   14368:	str	r3, [sp, #172]	; 0xac
   1436c:	mov	ip, #2
   14370:	add	r1, r1, #1888	; 0x760
   14374:	str	r4, [sp, #140]	; 0x8c
   14378:	add	r1, r1, #12
   1437c:	str	r1, [sp, #168]	; 0xa8
   14380:	ldr	r1, [r5, #16]
   14384:	add	r8, r9, #7733248	; 0x760000
   14388:	movw	r0, #269	; 0x10d
   1438c:	mov	sl, #62720	; 0xf500
   14390:	add	r1, r1, #1
   14394:	str	r1, [sp, #176]	; 0xb0
   14398:	ldr	lr, [r5, #12]
   1439c:	add	r8, r8, #42752	; 0xa700
   143a0:	ldr	r1, [sp, #28]
   143a4:	movt	sl, #355	; 0x163
   143a8:	add	r4, sp, #96	; 0x60
   143ac:	mov	r9, r3
   143b0:	str	lr, [sp, #180]	; 0xb4
   143b4:	ldr	lr, [r5, #8]
   143b8:	str	lr, [sp, #184]	; 0xb8
   143bc:	ldr	lr, [r5, #4]
   143c0:	str	lr, [sp, #188]	; 0xbc
   143c4:	ldr	lr, [r5]
   143c8:	str	r1, [sp, #196]	; 0xc4
   143cc:	str	ip, [sp, #160]	; 0xa0
   143d0:	str	lr, [sp, #192]	; 0xc0
   143d4:	ldr	lr, [r5, #32]
   143d8:	str	r3, [sp, #200]	; 0xc8
   143dc:	str	r3, [sp, #204]	; 0xcc
   143e0:	str	r3, [sp, #208]	; 0xd0
   143e4:	str	r3, [sp, #212]	; 0xd4
   143e8:	str	r3, [sp, #216]	; 0xd8
   143ec:	str	r3, [sp, #220]	; 0xdc
   143f0:	str	r3, [sp, #224]	; 0xe0
   143f4:	strb	r3, [sp, #228]	; 0xe4
   143f8:	strb	r3, [sp, #229]	; 0xe5
   143fc:	str	r3, [sp, #232]	; 0xe8
   14400:	str	r3, [sp, #236]	; 0xec
   14404:	str	r3, [sp, #248]	; 0xf8
   14408:	str	r3, [sp, #240]	; 0xf0
   1440c:	str	r3, [sp, #244]	; 0xf4
   14410:	str	r3, [sp, #252]	; 0xfc
   14414:	ldr	ip, [r5, #40]	; 0x28
   14418:	str	lr, [sp, #84]	; 0x54
   1441c:	str	r0, [sp, #260]	; 0x104
   14420:	str	ip, [sp, #256]	; 0x100
   14424:	ldr	r0, [r5, #32]
   14428:	str	r3, [sp, #268]	; 0x10c
   1442c:	str	r0, [sp, #264]	; 0x108
   14430:	mov	r0, r4
   14434:	add	r3, r8, r9
   14438:	str	r3, [sp, #96]	; 0x60
   1443c:	bl	11560 <localtime@plt>
   14440:	cmp	r0, #0
   14444:	beq	14464 <close_stdout@@Base+0x1ad0>
   14448:	ldr	r3, [r0, #40]	; 0x28
   1444c:	cmp	r3, #0
   14450:	beq	14464 <close_stdout@@Base+0x1ad0>
   14454:	ldr	r2, [r0, #32]
   14458:	ldr	r1, [sp, #264]	; 0x108
   1445c:	cmp	r2, r1
   14460:	bne	14a78 <close_stdout@@Base+0x20e4>
   14464:	add	r9, r9, #7733248	; 0x760000
   14468:	add	r9, r9, #42752	; 0xa700
   1446c:	cmp	r9, sl
   14470:	bne	14430 <close_stdout@@Base+0x1a9c>
   14474:	ldr	r0, [sp, #256]	; 0x100
   14478:	cmp	r0, #0
   1447c:	beq	144a0 <close_stdout@@Base+0x1b0c>
   14480:	ldr	r1, [sp, #268]	; 0x10c
   14484:	cmp	r1, #0
   14488:	beq	144a0 <close_stdout@@Base+0x1b0c>
   1448c:	bl	113c8 <strcmp@plt>
   14490:	cmp	r0, #0
   14494:	streq	r0, [sp, #268]	; 0x10c
   14498:	mvneq	r3, #0
   1449c:	streq	r3, [sp, #264]	; 0x108
   144a0:	add	r0, sp, #140	; 0x8c
   144a4:	bl	130d0 <close_stdout@@Base+0x73c>
   144a8:	cmp	r0, #0
   144ac:	beq	14514 <close_stdout@@Base+0x1b80>
   144b0:	mov	r5, #0
   144b4:	cmp	fp, #0
   144b8:	beq	144e4 <close_stdout@@Base+0x1b50>
   144bc:	cmp	r6, #0
   144c0:	beq	14aac <close_stdout@@Base+0x2118>
   144c4:	ldr	r0, [pc, #1712]	; 14b7c <close_stdout@@Base+0x21e8>
   144c8:	mov	r1, r6
   144cc:	mov	r2, #1
   144d0:	add	r0, pc, r0
   144d4:	bl	115c0 <setenv@plt>
   144d8:	rsbs	r0, r0, #1
   144dc:	movcc	r0, #0
   144e0:	and	r5, r0, r5
   144e4:	cmp	r6, r7
   144e8:	beq	14544 <close_stdout@@Base+0x1bb0>
   144ec:	mov	r0, r6
   144f0:	bl	113f8 <free@plt>
   144f4:	mov	r0, r5
   144f8:	ldr	sl, [sp, #24]
   144fc:	ldr	r2, [sp, #492]	; 0x1ec
   14500:	ldr	r3, [sl]
   14504:	cmp	r2, r3
   14508:	bne	14b6c <close_stdout@@Base+0x21d8>
   1450c:	add	sp, sp, #500	; 0x1f4
   14510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14514:	ldrb	r5, [sp, #228]	; 0xe4
   14518:	cmp	r5, #0
   1451c:	beq	1455c <close_stdout@@Base+0x1bc8>
   14520:	add	r3, sp, #192	; 0xc0
   14524:	ldr	r8, [sp, #32]
   14528:	mov	r5, #1
   1452c:	ldm	r3, {r0, r1}
   14530:	stm	r8, {r0, r1}
   14534:	b	144b4 <close_stdout@@Base+0x1b20>
   14538:	ldr	r4, [pc, #1600]	; 14b80 <close_stdout@@Base+0x21ec>
   1453c:	add	r4, pc, r4
   14540:	b	14360 <close_stdout@@Base+0x19cc>
   14544:	mov	r0, r5
   14548:	b	144f8 <close_stdout@@Base+0x1b64>
   1454c:	mov	r3, fp
   14550:	add	r7, sp, #292	; 0x124
   14554:	mov	fp, r6
   14558:	b	14358 <close_stdout@@Base+0x19c4>
   1455c:	ldr	r3, [sp, #248]	; 0xf8
   14560:	ldr	ip, [sp, #232]	; 0xe8
   14564:	ldr	r0, [sp, #236]	; 0xec
   14568:	orr	r2, ip, r3
   1456c:	ldr	r9, [sp, #244]	; 0xf4
   14570:	ldr	r1, [sp, #240]	; 0xf0
   14574:	orr	r2, r2, r0
   14578:	ldr	r8, [sp, #252]	; 0xfc
   1457c:	orr	r9, r2, r9
   14580:	add	r8, r1, r8
   14584:	orr	r8, r9, r8
   14588:	cmp	r8, #1
   1458c:	bhi	144b4 <close_stdout@@Base+0x1b20>
   14590:	ldr	r5, [sp, #168]	; 0xa8
   14594:	ldr	r8, [sp, #172]	; 0xac
   14598:	cmp	r5, #0
   1459c:	rsblt	r5, r5, #0
   145a0:	blt	145bc <close_stdout@@Base+0x1c28>
   145a4:	cmp	r8, #2
   145a8:	bne	145bc <close_stdout@@Base+0x1c28>
   145ac:	cmp	r5, #68	; 0x44
   145b0:	movw	r8, #1900	; 0x76c
   145b4:	movle	r8, #2000	; 0x7d0
   145b8:	add	r5, r5, r8
   145bc:	ldr	r8, [sp, #180]	; 0xb4
   145c0:	cmp	r3, #0
   145c4:	ldr	r3, [sp, #176]	; 0xb0
   145c8:	sub	r5, r5, #1888	; 0x760
   145cc:	sub	r5, r5, #12
   145d0:	str	r5, [sp, #72]	; 0x48
   145d4:	sub	r3, r3, #1
   145d8:	str	r8, [sp, #64]	; 0x40
   145dc:	str	r3, [sp, #68]	; 0x44
   145e0:	beq	14ac4 <close_stdout@@Base+0x2130>
   145e4:	ldr	r3, [sp, #160]	; 0xa0
   145e8:	ldr	r0, [sp, #184]	; 0xb8
   145ec:	cmp	r3, #0
   145f0:	beq	14b3c <close_stdout@@Base+0x21a8>
   145f4:	cmp	r3, #1
   145f8:	beq	14b14 <close_stdout@@Base+0x2180>
   145fc:	cmp	r0, #23
   14600:	bhi	14b2c <close_stdout@@Base+0x2198>
   14604:	mov	r3, r0
   14608:	ldr	ip, [sp, #188]	; 0xbc
   1460c:	ldr	r0, [sp, #192]	; 0xc0
   14610:	str	r3, [sp, #60]	; 0x3c
   14614:	str	ip, [sp, #56]	; 0x38
   14618:	str	r0, [sp, #52]	; 0x34
   1461c:	cmp	r2, #0
   14620:	add	lr, sp, #52	; 0x34
   14624:	mov	ip, r4
   14628:	mvnne	r3, #0
   1462c:	strne	r3, [sp, #84]	; 0x54
   14630:	cmp	r1, #0
   14634:	mov	r8, lr
   14638:	ldrne	r3, [sp, #152]	; 0x98
   1463c:	strne	r3, [sp, #84]	; 0x54
   14640:	ldm	lr!, {r0, r1, r2, r3}
   14644:	stmia	ip!, {r0, r1, r2, r3}
   14648:	ldm	lr!, {r0, r1, r2, r3}
   1464c:	stmia	ip!, {r0, r1, r2, r3}
   14650:	ldm	lr, {r0, r1, r2}
   14654:	stm	ip, {r0, r1, r2}
   14658:	mov	r0, r8
   1465c:	bl	113e0 <mktime@plt>
   14660:	mov	r1, r8
   14664:	mov	r5, r0
   14668:	mov	r0, r4
   1466c:	mov	r2, r5
   14670:	bl	12e90 <close_stdout@@Base+0x4fc>
   14674:	cmp	r0, #0
   14678:	bne	14754 <close_stdout@@Base+0x1dc0>
   1467c:	ldr	r5, [sp, #252]	; 0xfc
   14680:	cmp	r5, #0
   14684:	beq	144b4 <close_stdout@@Base+0x1b20>
   14688:	ldr	r9, [sp, #156]	; 0x9c
   1468c:	movw	r2, #34953	; 0x8889
   14690:	movt	r2, #34952	; 0x8888
   14694:	eor	r3, r9, r9, asr #31
   14698:	sub	r3, r3, r9, asr #31
   1469c:	cmp	fp, #0
   146a0:	smull	sl, r2, r2, r3
   146a4:	asr	r1, r3, #31
   146a8:	add	r5, r2, r3
   146ac:	rsb	r5, r1, r5, asr #5
   146b0:	rsb	r2, r5, r5, lsl #4
   146b4:	sub	r3, r3, r2, lsl #2
   146b8:	beq	14b54 <close_stdout@@Base+0x21c0>
   146bc:	ldr	r2, [pc, #1216]	; 14b84 <close_stdout@@Base+0x21f0>
   146c0:	mov	r1, #1
   146c4:	str	r5, [sp, #4]
   146c8:	add	r5, sp, #392	; 0x188
   146cc:	str	r3, [sp, #8]
   146d0:	add	r2, pc, r2
   146d4:	ldr	r3, [pc, #1196]	; 14b88 <close_stdout@@Base+0x21f4>
   146d8:	add	r9, r2, r9, lsr #31
   146dc:	mov	r0, r5
   146e0:	mov	r2, #19
   146e4:	add	r3, pc, r3
   146e8:	str	r9, [sp]
   146ec:	bl	11608 <__sprintf_chk@plt>
   146f0:	ldr	r0, [pc, #1172]	; 14b8c <close_stdout@@Base+0x21f8>
   146f4:	mov	r1, r5
   146f8:	mov	r2, #1
   146fc:	add	r0, pc, r0
   14700:	bl	115c0 <setenv@plt>
   14704:	cmp	r0, #0
   14708:	bne	144b0 <close_stdout@@Base+0x1b1c>
   1470c:	mov	lr, r4
   14710:	mov	ip, r8
   14714:	ldm	lr!, {r0, r1, r2, r3}
   14718:	mov	fp, #1
   1471c:	stmia	ip!, {r0, r1, r2, r3}
   14720:	ldm	lr!, {r0, r1, r2, r3}
   14724:	stmia	ip!, {r0, r1, r2, r3}
   14728:	ldm	lr, {r0, r1, r2}
   1472c:	stm	ip, {r0, r1, r2}
   14730:	mov	r0, r8
   14734:	bl	113e0 <mktime@plt>
   14738:	mov	r1, r8
   1473c:	mov	r5, r0
   14740:	mov	r0, r4
   14744:	mov	r2, r5
   14748:	bl	12e90 <close_stdout@@Base+0x4fc>
   1474c:	cmp	r0, #0
   14750:	beq	144b0 <close_stdout@@Base+0x1b1c>
   14754:	ldr	r3, [sp, #236]	; 0xec
   14758:	cmp	r3, #0
   1475c:	beq	147e4 <close_stdout@@Base+0x1e50>
   14760:	ldr	r1, [sp, #232]	; 0xe8
   14764:	cmp	r1, #0
   14768:	bne	147e4 <close_stdout@@Base+0x1e50>
   1476c:	ldr	r4, [sp, #148]	; 0x94
   14770:	movw	r3, #9363	; 0x2493
   14774:	ldr	lr, [sp, #76]	; 0x4c
   14778:	movt	r3, #37449	; 0x9249
   1477c:	ldr	r0, [sp, #144]	; 0x90
   14780:	rsb	r2, lr, r4
   14784:	ldr	ip, [sp, #64]	; 0x40
   14788:	add	r2, r2, #7
   1478c:	cmp	r0, #0
   14790:	smull	r5, r3, r3, r2
   14794:	asr	r5, r2, #31
   14798:	add	r3, r3, r2
   1479c:	rsb	r3, r5, r3, asr #2
   147a0:	rsb	r3, r3, r3, lsl #3
   147a4:	rsb	r3, r3, r2
   147a8:	ble	147b4 <close_stdout@@Base+0x1e20>
   147ac:	subs	r1, r4, lr
   147b0:	movne	r1, #1
   147b4:	rsb	r2, r1, r0
   147b8:	mov	r0, r8
   147bc:	mvn	r1, #0
   147c0:	str	r1, [sp, #84]	; 0x54
   147c4:	rsb	r2, r2, r2, lsl #3
   147c8:	add	r3, r3, r2
   147cc:	add	ip, ip, r3
   147d0:	str	ip, [sp, #64]	; 0x40
   147d4:	bl	113e0 <mktime@plt>
   147d8:	cmn	r0, #1
   147dc:	mov	r5, r0
   147e0:	beq	144b0 <close_stdout@@Base+0x1b1c>
   147e4:	ldr	r3, [sp, #200]	; 0xc8
   147e8:	ldr	r1, [sp, #204]	; 0xcc
   147ec:	ldr	r2, [sp, #208]	; 0xd0
   147f0:	orr	r0, r1, r3
   147f4:	orrs	r0, r0, r2
   147f8:	beq	1488c <close_stdout@@Base+0x1ef8>
   147fc:	ldr	r0, [sp, #68]	; 0x44
   14800:	lsr	r4, r1, #31
   14804:	ldr	r5, [sp, #64]	; 0x40
   14808:	lsr	ip, r2, #31
   1480c:	ldr	r9, [sp, #72]	; 0x48
   14810:	add	r1, r1, r0
   14814:	add	r2, r2, r5
   14818:	cmp	r0, r1
   1481c:	movle	r0, r4
   14820:	eorgt	r0, r4, #1
   14824:	cmp	r5, r2
   14828:	eorgt	ip, ip, #1
   1482c:	add	r4, r3, r9
   14830:	lsr	r3, r3, #31
   14834:	orr	r0, r0, ip
   14838:	cmp	r9, r4
   1483c:	movle	r9, r3
   14840:	eorgt	r9, r3, #1
   14844:	orrs	r9, r0, r9
   14848:	bne	144b0 <close_stdout@@Base+0x1b1c>
   1484c:	ldr	r5, [sp, #100]	; 0x64
   14850:	mov	r0, r8
   14854:	ldr	lr, [sp, #104]	; 0x68
   14858:	ldr	ip, [sp, #96]	; 0x60
   1485c:	ldr	r3, [sp, #128]	; 0x80
   14860:	str	r5, [sp, #56]	; 0x38
   14864:	str	r4, [sp, #72]	; 0x48
   14868:	str	r1, [sp, #68]	; 0x44
   1486c:	str	r2, [sp, #64]	; 0x40
   14870:	str	lr, [sp, #60]	; 0x3c
   14874:	str	ip, [sp, #52]	; 0x34
   14878:	str	r3, [sp, #84]	; 0x54
   1487c:	bl	113e0 <mktime@plt>
   14880:	cmn	r0, #1
   14884:	mov	r5, r0
   14888:	beq	144b0 <close_stdout@@Base+0x1b1c>
   1488c:	ldr	r3, [sp, #252]	; 0xfc
   14890:	cmp	r3, #0
   14894:	beq	148c8 <close_stdout@@Base+0x1f34>
   14898:	ldr	r3, [sp, #156]	; 0x9c
   1489c:	ldr	r2, [sp, #88]	; 0x58
   148a0:	rsb	r3, r3, r3, lsl #4
   148a4:	rsb	r2, r2, r3, lsl #2
   148a8:	rsb	r3, r2, r5
   148ac:	lsr	r2, r2, #31
   148b0:	cmp	r5, r3
   148b4:	movge	r5, r2
   148b8:	eorlt	r5, r2, #1
   148bc:	cmp	r5, #0
   148c0:	bne	144b0 <close_stdout@@Base+0x1b1c>
   148c4:	mov	r5, r3
   148c8:	ldr	r3, [sp, #224]	; 0xe0
   148cc:	movw	r1, #12193	; 0x2fa1
   148d0:	ldr	r9, [sp, #196]	; 0xc4
   148d4:	movt	r1, #17592	; 0x44b8
   148d8:	mov	r4, #51712	; 0xca00
   148dc:	movt	r4, #15258	; 0x3b9a
   148e0:	add	r9, r9, r3
   148e4:	ldr	r0, [sp, #212]	; 0xd4
   148e8:	mov	ip, #3600	; 0xe10
   148ec:	mov	r3, #51712	; 0xca00
   148f0:	smull	sl, r8, r1, r9
   148f4:	asr	r2, r9, #31
   148f8:	mul	ip, ip, r0
   148fc:	movt	r3, #15258	; 0x3b9a
   14900:	ldr	r0, [sp, #216]	; 0xd8
   14904:	rsb	r2, r2, r8, asr #28
   14908:	rsb	r0, r0, r0, lsl #4
   1490c:	mls	r2, r4, r2, r9
   14910:	lsl	r0, r0, #2
   14914:	add	r3, r2, r3
   14918:	smull	r2, r8, r1, r3
   1491c:	add	r2, r5, ip
   14920:	lsr	ip, ip, #31
   14924:	asr	sl, r3, #31
   14928:	str	sl, [sp, #36]	; 0x24
   1492c:	cmp	r5, r2
   14930:	movle	sl, ip
   14934:	eorgt	sl, ip, #1
   14938:	add	ip, r2, r0
   1493c:	lsr	r0, r0, #31
   14940:	cmp	ip, r2
   14944:	movge	r5, r0
   14948:	eorlt	r5, r0, #1
   1494c:	ldr	r0, [sp, #36]	; 0x24
   14950:	orr	r5, r5, sl
   14954:	rsb	r2, r0, r8, asr #28
   14958:	ldr	r8, [sp, #220]	; 0xdc
   1495c:	mls	r2, r4, r2, r3
   14960:	add	r0, ip, r8
   14964:	lsr	r8, r8, #31
   14968:	cmp	r0, ip
   1496c:	movge	ip, r8
   14970:	eorlt	ip, r8, #1
   14974:	rsb	r9, r2, r9
   14978:	orr	r5, r5, ip
   1497c:	smull	sl, r1, r1, r9
   14980:	asr	r9, r9, #31
   14984:	rsb	r1, r9, r1, asr #28
   14988:	add	r3, r0, r1
   1498c:	lsr	r1, r1, #31
   14990:	cmp	r3, r0
   14994:	movge	r0, r1
   14998:	eorlt	r0, r1, #1
   1499c:	orrs	r0, r5, r0
   149a0:	bne	144b0 <close_stdout@@Base+0x1b1c>
   149a4:	ldr	r5, [sp, #32]
   149a8:	ldr	r8, [sp, #32]
   149ac:	str	r3, [r5]
   149b0:	mov	r5, #1
   149b4:	str	r2, [r8, #4]
   149b8:	b	144b4 <close_stdout@@Base+0x1b20>
   149bc:	add	r7, sp, #292	; 0x124
   149c0:	cmp	sl, #100	; 0x64
   149c4:	mov	r0, r7
   149c8:	movls	fp, #0
   149cc:	movhi	fp, #1
   149d0:	bl	12f2c <close_stdout@@Base+0x598>
   149d4:	cmp	fp, #0
   149d8:	addeq	sl, sp, #392	; 0x188
   149dc:	mov	r6, r0
   149e0:	bne	14b04 <close_stdout@@Base+0x2170>
   149e4:	ldrb	r2, [r4, #4]
   149e8:	mov	lr, sl
   149ec:	cmp	r2, #34	; 0x22
   149f0:	beq	14a1c <close_stdout@@Base+0x2088>
   149f4:	subs	r3, r2, #92	; 0x5c
   149f8:	rsbs	r2, r3, #0
   149fc:	adcs	r2, r2, r3
   14a00:	add	r3, r8, r2
   14a04:	ldrb	r2, [r8, r2]
   14a08:	add	r8, r3, #1
   14a0c:	strb	r2, [lr], #1
   14a10:	ldrb	r2, [r3, #1]
   14a14:	cmp	r2, #34	; 0x22
   14a18:	bne	149f4 <close_stdout@@Base+0x2060>
   14a1c:	ldr	r0, [pc, #364]	; 14b90 <close_stdout@@Base+0x21fc>
   14a20:	mov	r2, #0
   14a24:	mov	r1, sl
   14a28:	strb	r2, [lr]
   14a2c:	add	r0, pc, r0
   14a30:	mov	r2, #1
   14a34:	bl	115c0 <setenv@plt>
   14a38:	cmp	fp, #0
   14a3c:	mov	r4, r0
   14a40:	bne	14af8 <close_stdout@@Base+0x2164>
   14a44:	cmp	r4, #0
   14a48:	movne	r5, #0
   14a4c:	bne	144e4 <close_stdout@@Base+0x1b50>
   14a50:	add	r2, r8, #1
   14a54:	mov	r4, r2
   14a58:	add	r2, r2, #1
   14a5c:	ldrb	r3, [r4]
   14a60:	sub	r1, r3, #9
   14a64:	cmp	r3, #32
   14a68:	cmpne	r1, #4
   14a6c:	bls	14a54 <close_stdout@@Base+0x20c0>
   14a70:	mov	fp, #1
   14a74:	b	14358 <close_stdout@@Base+0x19c4>
   14a78:	str	r3, [sp, #268]	; 0x10c
   14a7c:	movw	r3, #269	; 0x10d
   14a80:	str	r3, [sp, #272]	; 0x110
   14a84:	mov	r2, #0
   14a88:	ldr	r3, [r0, #32]
   14a8c:	str	r2, [sp, #280]	; 0x118
   14a90:	str	r3, [sp, #276]	; 0x114
   14a94:	b	14474 <close_stdout@@Base+0x1ae0>
   14a98:	add	r5, sp, #44	; 0x2c
   14a9c:	mov	r0, r5
   14aa0:	bl	12c3c <close_stdout@@Base+0x2a8>
   14aa4:	mov	r2, r5
   14aa8:	b	14294 <close_stdout@@Base+0x1900>
   14aac:	ldr	r0, [pc, #224]	; 14b94 <close_stdout@@Base+0x2200>
   14ab0:	add	r0, pc, r0
   14ab4:	bl	11704 <unsetenv@plt>
   14ab8:	rsbs	r0, r0, #1
   14abc:	movcc	r0, #0
   14ac0:	b	144e0 <close_stdout@@Base+0x1b4c>
   14ac4:	ldrb	r3, [sp, #229]	; 0xe5
   14ac8:	cmp	r3, #0
   14acc:	beq	14ae0 <close_stdout@@Base+0x214c>
   14ad0:	cmp	ip, #0
   14ad4:	bne	14ae0 <close_stdout@@Base+0x214c>
   14ad8:	cmp	r0, #0
   14adc:	beq	145e4 <close_stdout@@Base+0x1c50>
   14ae0:	mov	r3, #0
   14ae4:	str	r3, [sp, #52]	; 0x34
   14ae8:	str	r3, [sp, #56]	; 0x38
   14aec:	str	r3, [sp, #60]	; 0x3c
   14af0:	str	r3, [sp, #196]	; 0xc4
   14af4:	b	1461c <close_stdout@@Base+0x1c88>
   14af8:	mov	r0, sl
   14afc:	bl	113f8 <free@plt>
   14b00:	b	14a44 <close_stdout@@Base+0x20b0>
   14b04:	mov	r0, sl
   14b08:	bl	16e28 <close_stdout@@Base+0x4494>
   14b0c:	mov	sl, r0
   14b10:	b	149e4 <close_stdout@@Base+0x2050>
   14b14:	sub	r3, r0, #1
   14b18:	cmp	r3, #10
   14b1c:	addls	r3, r0, #12
   14b20:	bls	14608 <close_stdout@@Base+0x1c74>
   14b24:	cmp	r0, #12
   14b28:	beq	14604 <close_stdout@@Base+0x1c70>
   14b2c:	mvn	r3, #0
   14b30:	mov	r5, #0
   14b34:	str	r3, [sp, #60]	; 0x3c
   14b38:	b	144b4 <close_stdout@@Base+0x1b20>
   14b3c:	sub	ip, r0, #1
   14b40:	cmp	ip, #10
   14b44:	bls	14604 <close_stdout@@Base+0x1c70>
   14b48:	cmp	r0, #12
   14b4c:	bne	14b2c <close_stdout@@Base+0x2198>
   14b50:	b	14608 <close_stdout@@Base+0x1c74>
   14b54:	mov	r0, r7
   14b58:	str	r3, [sp, #20]
   14b5c:	bl	12f2c <close_stdout@@Base+0x598>
   14b60:	ldr	r3, [sp, #20]
   14b64:	mov	r6, r0
   14b68:	b	146bc <close_stdout@@Base+0x1d28>
   14b6c:	bl	11458 <__stack_chk_fail@plt>
   14b70:	andeq	r7, r1, r8, lsl #27
   14b74:	andeq	r0, r0, r4, asr r1
   14b78:	andeq	r5, r0, ip, ror #18
   14b7c:	andeq	r5, r0, ip, asr #14
   14b80:	andeq	r5, r0, r0, lsl r7
   14b84:	muleq	r0, r8, r5
   14b88:	andeq	r5, r0, r4, ror r5
   14b8c:	andeq	r5, r0, r0, lsr #10
   14b90:	strdeq	r5, [r0], -r0
   14b94:	andeq	r5, r0, ip, ror #2
   14b98:	ldr	ip, [pc, #212]	; 14c74 <close_stdout@@Base+0x22e0>
   14b9c:	cmp	r2, #1
   14ba0:	push	{r4, r5, r6, lr}
   14ba4:	add	ip, pc, ip
   14ba8:	ldr	r4, [pc, #200]	; 14c78 <close_stdout@@Base+0x22e4>
   14bac:	sub	sp, sp, #8
   14bb0:	mov	r5, r0
   14bb4:	ldr	r4, [ip, r4]
   14bb8:	ldr	ip, [r4]
   14bbc:	str	ip, [sp, #4]
   14bc0:	beq	14c20 <close_stdout@@Base+0x228c>
   14bc4:	bcc	14bf8 <close_stdout@@Base+0x2264>
   14bc8:	cmp	r2, #2
   14bcc:	bne	14bf4 <close_stdout@@Base+0x2260>
   14bd0:	tst	r3, #4
   14bd4:	bne	14c4c <close_stdout@@Base+0x22b8>
   14bd8:	mov	r0, #1
   14bdc:	ldr	r2, [sp, #4]
   14be0:	ldr	r3, [r4]
   14be4:	cmp	r2, r3
   14be8:	bne	14c70 <close_stdout@@Base+0x22dc>
   14bec:	add	sp, sp, #8
   14bf0:	pop	{r4, r5, r6, pc}
   14bf4:	bl	1171c <abort@plt>
   14bf8:	mov	r0, sp
   14bfc:	bl	11434 <time@plt>
   14c00:	mov	r0, sp
   14c04:	bl	11560 <localtime@plt>
   14c08:	cmp	r0, #0
   14c0c:	beq	14bd8 <close_stdout@@Base+0x2244>
   14c10:	ldr	r3, [r0, #20]
   14c14:	mov	r0, #0
   14c18:	str	r3, [r5]
   14c1c:	b	14bdc <close_stdout@@Base+0x2248>
   14c20:	ldr	r2, [r1]
   14c24:	str	r2, [r0]
   14c28:	ldr	r1, [r1]
   14c2c:	cmp	r1, #68	; 0x44
   14c30:	movgt	r0, #0
   14c34:	bgt	14bdc <close_stdout@@Base+0x2248>
   14c38:	ands	r0, r3, #16
   14c3c:	addeq	r2, r2, #100	; 0x64
   14c40:	streq	r2, [r5]
   14c44:	beq	14bdc <close_stdout@@Base+0x2248>
   14c48:	b	14bd8 <close_stdout@@Base+0x2244>
   14c4c:	ldr	r3, [r1]
   14c50:	mov	ip, #100	; 0x64
   14c54:	ldr	r2, [r1, #4]
   14c58:	mov	r0, #0
   14c5c:	mla	r3, ip, r3, r2
   14c60:	sub	r3, r3, #1888	; 0x760
   14c64:	sub	r3, r3, #12
   14c68:	str	r3, [r5]
   14c6c:	b	14bdc <close_stdout@@Base+0x2248>
   14c70:	bl	11458 <__stack_chk_fail@plt>
   14c74:	andeq	r7, r1, r4, asr r4
   14c78:	andeq	r0, r0, r4, asr r1
   14c7c:	ldr	r3, [pc, #772]	; 14f88 <close_stdout@@Base+0x25f4>
   14c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c84:	mov	r6, r1
   14c88:	ldr	r1, [pc, #764]	; 14f8c <close_stdout@@Base+0x25f8>
   14c8c:	add	r3, pc, r3
   14c90:	sub	sp, sp, #148	; 0x94
   14c94:	mov	r9, r0
   14c98:	mov	r0, r6
   14c9c:	mov	r7, r2
   14ca0:	ldr	r8, [r3, r1]
   14ca4:	ldr	r3, [r8]
   14ca8:	str	r3, [sp, #140]	; 0x8c
   14cac:	bl	115a8 <strlen@plt>
   14cb0:	ands	r4, r7, #8
   14cb4:	moveq	sl, r4
   14cb8:	mov	fp, r0
   14cbc:	moveq	r5, r0
   14cc0:	beq	14cdc <close_stdout@@Base+0x2348>
   14cc4:	mov	r0, r6
   14cc8:	mov	r1, #46	; 0x2e
   14ccc:	bl	115b4 <strchr@plt>
   14cd0:	subs	sl, r0, #0
   14cd4:	rsbne	r5, r6, sl
   14cd8:	moveq	r5, fp
   14cdc:	bic	r3, r5, #2
   14ce0:	cmp	r3, #8
   14ce4:	beq	14d0c <close_stdout@@Base+0x2378>
   14ce8:	cmp	r5, #12
   14cec:	beq	14d0c <close_stdout@@Base+0x2378>
   14cf0:	mov	r0, #0
   14cf4:	ldr	r2, [sp, #140]	; 0x8c
   14cf8:	ldr	r3, [r8]
   14cfc:	cmp	r2, r3
   14d00:	bne	14f84 <close_stdout@@Base+0x25f0>
   14d04:	add	sp, sp, #148	; 0x94
   14d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d0c:	cmp	sl, #0
   14d10:	beq	14d28 <close_stdout@@Base+0x2394>
   14d14:	cmp	r4, #0
   14d18:	beq	14cf0 <close_stdout@@Base+0x235c>
   14d1c:	rsb	fp, r5, fp
   14d20:	cmp	fp, #3
   14d24:	bne	14cf0 <close_stdout@@Base+0x235c>
   14d28:	cmp	r5, #0
   14d2c:	beq	14da4 <close_stdout@@Base+0x2410>
   14d30:	ldrb	r3, [r6]
   14d34:	sub	r3, r3, #48	; 0x30
   14d38:	cmp	r3, #9
   14d3c:	bhi	14cf0 <close_stdout@@Base+0x235c>
   14d40:	sub	r3, r6, #1
   14d44:	mov	ip, r6
   14d48:	add	r3, r3, r5
   14d4c:	b	14d60 <close_stdout@@Base+0x23cc>
   14d50:	ldrb	r4, [ip, #1]!
   14d54:	sub	r4, r4, #48	; 0x30
   14d58:	cmp	r4, #9
   14d5c:	bhi	14cf0 <close_stdout@@Base+0x235c>
   14d60:	cmp	ip, r3
   14d64:	bne	14d50 <close_stdout@@Base+0x23bc>
   14d68:	lsrs	r5, r5, #1
   14d6c:	beq	14da4 <close_stdout@@Base+0x2410>
   14d70:	add	r1, sp, #8
   14d74:	add	ip, r6, r5, lsl #1
   14d78:	mov	r3, r6
   14d7c:	ldrb	r2, [r3]
   14d80:	add	r3, r3, #2
   14d84:	ldrb	r0, [r3, #-1]
   14d88:	cmp	r3, ip
   14d8c:	sub	r2, r2, #48	; 0x30
   14d90:	add	r2, r2, r2, lsl #2
   14d94:	add	r2, r0, r2, lsl #1
   14d98:	sub	r2, r2, #48	; 0x30
   14d9c:	str	r2, [r1, #4]!
   14da0:	bne	14d7c <close_stdout@@Base+0x23e8>
   14da4:	tst	r7, #1
   14da8:	bne	14f30 <close_stdout@@Base+0x259c>
   14dac:	sub	r2, r5, #4
   14db0:	add	r1, sp, #12
   14db4:	ldr	r4, [r1, #4]
   14db8:	tst	r7, #2
   14dbc:	ldr	ip, [r1, #8]
   14dc0:	ldr	r3, [r1, #12]
   14dc4:	ldr	r0, [r1]
   14dc8:	str	r4, [sp, #48]	; 0x30
   14dcc:	sub	r0, r0, #1
   14dd0:	str	ip, [sp, #44]	; 0x2c
   14dd4:	str	r0, [sp, #52]	; 0x34
   14dd8:	str	r3, [sp, #40]	; 0x28
   14ddc:	bne	14f60 <close_stdout@@Base+0x25cc>
   14de0:	cmp	sl, #0
   14de4:	beq	14f7c <close_stdout@@Base+0x25e8>
   14de8:	ldrb	r3, [sl, #1]
   14dec:	sub	r3, r3, #48	; 0x30
   14df0:	cmp	r3, #9
   14df4:	bhi	14cf0 <close_stdout@@Base+0x235c>
   14df8:	ldrb	r2, [sl, #2]
   14dfc:	sub	r1, r2, #48	; 0x30
   14e00:	cmp	r1, #9
   14e04:	bhi	14cf0 <close_stdout@@Base+0x235c>
   14e08:	add	r3, r3, r3, lsl #2
   14e0c:	add	r3, r2, r3, lsl #1
   14e10:	sub	r3, r3, #48	; 0x30
   14e14:	str	r3, [sp, #36]	; 0x24
   14e18:	add	lr, sp, #36	; 0x24
   14e1c:	add	ip, sp, #80	; 0x50
   14e20:	mvn	r5, #0
   14e24:	ldm	lr!, {r0, r1, r2, r3}
   14e28:	mov	r4, ip
   14e2c:	stmia	ip!, {r0, r1, r2, r3}
   14e30:	ldm	lr!, {r0, r1, r2, r3}
   14e34:	stmia	ip!, {r0, r1, r2, r3}
   14e38:	ldm	lr, {r0, r1, r2}
   14e3c:	stm	ip, {r0, r1, r2}
   14e40:	mov	r0, r4
   14e44:	str	r5, [sp, #112]	; 0x70
   14e48:	bl	113e0 <mktime@plt>
   14e4c:	cmp	r0, r5
   14e50:	str	r0, [sp, #4]
   14e54:	movne	r0, r4
   14e58:	beq	14f1c <close_stdout@@Base+0x2588>
   14e5c:	ldr	r2, [r0, #20]
   14e60:	ldr	r4, [r0, #16]
   14e64:	ldr	r1, [sp, #52]	; 0x34
   14e68:	ldr	r3, [sp, #56]	; 0x38
   14e6c:	eor	r4, r4, r1
   14e70:	ldr	ip, [r0, #12]
   14e74:	eor	r3, r2, r3
   14e78:	ldr	r1, [sp, #48]	; 0x30
   14e7c:	ldr	r2, [r0, #8]
   14e80:	orr	r4, r4, r3
   14e84:	ldr	r3, [sp, #44]	; 0x2c
   14e88:	eor	ip, ip, r1
   14e8c:	orr	r4, r4, ip
   14e90:	ldr	r1, [r0, #4]
   14e94:	eor	r3, r2, r3
   14e98:	ldr	ip, [sp, #40]	; 0x28
   14e9c:	ldr	r2, [r0]
   14ea0:	orr	r0, r4, r3
   14ea4:	ldr	r3, [sp, #36]	; 0x24
   14ea8:	eor	r1, r1, ip
   14eac:	orr	r1, r0, r1
   14eb0:	eor	r2, r3, r2
   14eb4:	orrs	r2, r1, r2
   14eb8:	beq	14f0c <close_stdout@@Base+0x2578>
   14ebc:	cmp	r3, #60	; 0x3c
   14ec0:	bne	14cf0 <close_stdout@@Base+0x235c>
   14ec4:	add	r4, sp, #124	; 0x7c
   14ec8:	mov	r1, r6
   14ecc:	mov	r2, #16
   14ed0:	mov	r0, r4
   14ed4:	bl	114d0 <__stpcpy_chk@plt>
   14ed8:	ldr	ip, [pc, #176]	; 14f90 <close_stdout@@Base+0x25fc>
   14edc:	mov	r1, r4
   14ee0:	mov	r2, r7
   14ee4:	add	ip, pc, ip
   14ee8:	ldrh	lr, [ip]
   14eec:	ldrb	ip, [ip, #2]
   14ef0:	mov	r3, r0
   14ef4:	add	r0, sp, #8
   14ef8:	strh	lr, [r3, #-2]
   14efc:	strb	ip, [r3]
   14f00:	bl	14c7c <close_stdout@@Base+0x22e8>
   14f04:	cmp	r0, #0
   14f08:	beq	14cf4 <close_stdout@@Base+0x2360>
   14f0c:	ldr	r3, [sp, #4]
   14f10:	mov	r0, #1
   14f14:	str	r3, [r9]
   14f18:	b	14cf4 <close_stdout@@Base+0x2360>
   14f1c:	add	r0, sp, #4
   14f20:	bl	11560 <localtime@plt>
   14f24:	cmp	r0, #0
   14f28:	bne	14e5c <close_stdout@@Base+0x24c8>
   14f2c:	b	14cf0 <close_stdout@@Base+0x235c>
   14f30:	add	r4, sp, #12
   14f34:	add	r0, sp, #56	; 0x38
   14f38:	sub	r2, r5, #4
   14f3c:	mov	r3, r7
   14f40:	mov	r1, r4
   14f44:	bl	14b98 <close_stdout@@Base+0x2204>
   14f48:	cmp	r0, #0
   14f4c:	bne	14cf0 <close_stdout@@Base+0x235c>
   14f50:	sub	r1, r5, #-1073741820	; 0xc0000004
   14f54:	mov	r2, r0
   14f58:	add	r1, r4, r1, lsl #2
   14f5c:	b	14db4 <close_stdout@@Base+0x2420>
   14f60:	add	r1, r1, #16
   14f64:	add	r0, sp, #56	; 0x38
   14f68:	mov	r3, r7
   14f6c:	bl	14b98 <close_stdout@@Base+0x2204>
   14f70:	cmp	r0, #0
   14f74:	beq	14de0 <close_stdout@@Base+0x244c>
   14f78:	b	14cf0 <close_stdout@@Base+0x235c>
   14f7c:	str	sl, [sp, #36]	; 0x24
   14f80:	b	14e18 <close_stdout@@Base+0x2484>
   14f84:	bl	11458 <__stack_chk_fail@plt>
   14f88:	andeq	r7, r1, ip, ror #6
   14f8c:	andeq	r0, r0, r4, asr r1
   14f90:	andeq	r5, r0, r8, ror r0
   14f94:	ldr	r3, [pc, #132]	; 15020 <close_stdout@@Base+0x268c>
   14f98:	ldr	r2, [pc, #132]	; 15024 <close_stdout@@Base+0x2690>
   14f9c:	add	r3, pc, r3
   14fa0:	ldr	r0, [pc, #128]	; 15028 <close_stdout@@Base+0x2694>
   14fa4:	push	{r4, lr}
   14fa8:	sub	sp, sp, #8
   14fac:	ldr	r4, [r3, r2]
   14fb0:	add	r0, pc, r0
   14fb4:	ldr	r3, [r4]
   14fb8:	str	r3, [sp, #4]
   14fbc:	bl	11530 <getenv@plt>
   14fc0:	subs	r3, r0, #0
   14fc4:	beq	14fd4 <close_stdout@@Base+0x2640>
   14fc8:	ldrb	r3, [r3]
   14fcc:	cmp	r3, #0
   14fd0:	bne	14ff4 <close_stdout@@Base+0x2660>
   14fd4:	mov	r0, #3504	; 0xdb0
   14fd8:	movt	r0, #3
   14fdc:	ldr	r2, [sp, #4]
   14fe0:	ldr	r3, [r4]
   14fe4:	cmp	r2, r3
   14fe8:	bne	1501c <close_stdout@@Base+0x2688>
   14fec:	add	sp, sp, #8
   14ff0:	pop	{r4, pc}
   14ff4:	mov	r2, #10
   14ff8:	mov	r1, sp
   14ffc:	bl	113d4 <strtol@plt>
   15000:	ldr	r2, [sp]
   15004:	mov	r3, #3504	; 0xdb0
   15008:	movt	r3, #3
   1500c:	ldrb	r2, [r2]
   15010:	cmp	r2, #0
   15014:	movne	r0, r3
   15018:	b	14fdc <close_stdout@@Base+0x2648>
   1501c:	bl	11458 <__stack_chk_fail@plt>
   15020:	andeq	r7, r1, ip, asr r0
   15024:	andeq	r0, r0, r4, asr r1
   15028:			; <UNDEFINED> instruction: 0x00004fb0
   1502c:	push	{r3, r4, r5, r6, r7, lr}
   15030:	subs	r4, r0, #0
   15034:	ldr	r5, [pc, #172]	; 150e8 <close_stdout@@Base+0x2754>
   15038:	add	r5, pc, r5
   1503c:	beq	150c4 <close_stdout@@Base+0x2730>
   15040:	mov	r1, #47	; 0x2f
   15044:	bl	116bc <strrchr@plt>
   15048:	subs	r6, r0, #0
   1504c:	beq	150a8 <close_stdout@@Base+0x2714>
   15050:	add	r7, r6, #1
   15054:	rsb	r3, r4, r7
   15058:	cmp	r3, #6
   1505c:	ble	150a8 <close_stdout@@Base+0x2714>
   15060:	ldr	r1, [pc, #132]	; 150ec <close_stdout@@Base+0x2758>
   15064:	sub	r0, r6, #6
   15068:	mov	r2, #7
   1506c:	add	r1, pc, r1
   15070:	bl	11710 <strncmp@plt>
   15074:	cmp	r0, #0
   15078:	bne	150a8 <close_stdout@@Base+0x2714>
   1507c:	ldr	r1, [pc, #108]	; 150f0 <close_stdout@@Base+0x275c>
   15080:	mov	r0, r7
   15084:	mov	r2, #3
   15088:	add	r1, pc, r1
   1508c:	bl	11710 <strncmp@plt>
   15090:	cmp	r0, #0
   15094:	movne	r4, r7
   15098:	ldreq	r3, [pc, #84]	; 150f4 <close_stdout@@Base+0x2760>
   1509c:	addeq	r4, r6, #4
   150a0:	ldreq	r3, [r5, r3]
   150a4:	streq	r4, [r3]
   150a8:	ldr	r2, [pc, #72]	; 150f8 <close_stdout@@Base+0x2764>
   150ac:	ldr	r3, [pc, #72]	; 150fc <close_stdout@@Base+0x2768>
   150b0:	ldr	r2, [r5, r2]
   150b4:	str	r4, [r2]
   150b8:	ldr	r3, [r5, r3]
   150bc:	str	r4, [r3]
   150c0:	pop	{r3, r4, r5, r6, r7, pc}
   150c4:	ldr	r3, [pc, #52]	; 15100 <close_stdout@@Base+0x276c>
   150c8:	mov	r1, #1
   150cc:	ldr	r0, [pc, #48]	; 15104 <close_stdout@@Base+0x2770>
   150d0:	mov	r2, #55	; 0x37
   150d4:	ldr	r3, [r5, r3]
   150d8:	add	r0, pc, r0
   150dc:	ldr	r3, [r3]
   150e0:	bl	114b8 <fwrite@plt>
   150e4:	bl	1171c <abort@plt>
   150e8:	andeq	r6, r1, r0, asr #31
   150ec:	andeq	r4, r0, ip, lsr pc
   150f0:	andeq	r4, r0, r8, lsr #30
   150f4:	andeq	r0, r0, r8, lsl #3
   150f8:	andeq	r0, r0, r0, lsl #3
   150fc:	andeq	r0, r0, ip, ror r1
   15100:	andeq	r0, r0, r0, ror #2
   15104:	muleq	r0, r8, lr
   15108:	push	{r3, lr}
   1510c:	mov	r3, r0
   15110:	mov	r2, #0
   15114:	cmp	r1, #8
   15118:	str	r2, [r3], #4
   1511c:	add	r3, r3, #4
   15120:	str	r2, [r0, #4]
   15124:	str	r2, [r3], #4
   15128:	str	r2, [r3], #4
   1512c:	str	r2, [r3], #4
   15130:	str	r2, [r3], #4
   15134:	str	r2, [r3], #4
   15138:	str	r2, [r3], #4
   1513c:	str	r2, [r3], #4
   15140:	str	r2, [r3], #4
   15144:	str	r2, [r3], #4
   15148:	str	r2, [r3]
   1514c:	beq	15158 <close_stdout@@Base+0x27c4>
   15150:	str	r1, [r0]
   15154:	pop	{r3, pc}
   15158:	bl	1171c <abort@plt>
   1515c:	push	{r4, r5, r6, lr}
   15160:	mov	r4, r0
   15164:	mov	r6, r1
   15168:	mov	r0, #0
   1516c:	mov	r1, r4
   15170:	mov	r2, #5
   15174:	bl	1144c <dcgettext@plt>
   15178:	cmp	r0, r4
   1517c:	mov	r5, r0
   15180:	beq	15188 <close_stdout@@Base+0x27f4>
   15184:	pop	{r4, r5, r6, pc}
   15188:	bl	1754c <close_stdout@@Base+0x4bb8>
   1518c:	ldrb	r3, [r0]
   15190:	bic	r3, r3, #32
   15194:	cmp	r3, #85	; 0x55
   15198:	bne	1520c <close_stdout@@Base+0x2878>
   1519c:	ldrb	r3, [r0, #1]
   151a0:	bic	r3, r3, #32
   151a4:	cmp	r3, #84	; 0x54
   151a8:	bne	151f8 <close_stdout@@Base+0x2864>
   151ac:	ldrb	r3, [r0, #2]
   151b0:	bic	r3, r3, #32
   151b4:	cmp	r3, #70	; 0x46
   151b8:	bne	151f8 <close_stdout@@Base+0x2864>
   151bc:	ldrb	r3, [r0, #3]
   151c0:	cmp	r3, #45	; 0x2d
   151c4:	bne	151f8 <close_stdout@@Base+0x2864>
   151c8:	ldrb	r3, [r0, #4]
   151cc:	cmp	r3, #56	; 0x38
   151d0:	bne	151f8 <close_stdout@@Base+0x2864>
   151d4:	ldrb	r3, [r0, #5]
   151d8:	cmp	r3, #0
   151dc:	bne	151f8 <close_stdout@@Base+0x2864>
   151e0:	ldrb	r3, [r5]
   151e4:	cmp	r3, #96	; 0x60
   151e8:	beq	15284 <close_stdout@@Base+0x28f0>
   151ec:	ldr	r0, [pc, #180]	; 152a8 <close_stdout@@Base+0x2914>
   151f0:	add	r0, pc, r0
   151f4:	pop	{r4, r5, r6, pc}
   151f8:	cmp	r6, #7
   151fc:	beq	15290 <close_stdout@@Base+0x28fc>
   15200:	ldr	r0, [pc, #164]	; 152ac <close_stdout@@Base+0x2918>
   15204:	add	r0, pc, r0
   15208:	pop	{r4, r5, r6, pc}
   1520c:	cmp	r3, #71	; 0x47
   15210:	bne	151f8 <close_stdout@@Base+0x2864>
   15214:	ldrb	r3, [r0, #1]
   15218:	bic	r3, r3, #32
   1521c:	cmp	r3, #66	; 0x42
   15220:	bne	151f8 <close_stdout@@Base+0x2864>
   15224:	ldrb	r3, [r0, #2]
   15228:	cmp	r3, #49	; 0x31
   1522c:	bne	151f8 <close_stdout@@Base+0x2864>
   15230:	ldrb	r3, [r0, #3]
   15234:	cmp	r3, #56	; 0x38
   15238:	bne	151f8 <close_stdout@@Base+0x2864>
   1523c:	ldrb	r3, [r0, #4]
   15240:	cmp	r3, #48	; 0x30
   15244:	bne	151f8 <close_stdout@@Base+0x2864>
   15248:	ldrb	r3, [r0, #5]
   1524c:	cmp	r3, #51	; 0x33
   15250:	bne	151f8 <close_stdout@@Base+0x2864>
   15254:	ldrb	r3, [r0, #6]
   15258:	cmp	r3, #48	; 0x30
   1525c:	bne	151f8 <close_stdout@@Base+0x2864>
   15260:	ldrb	r3, [r0, #7]
   15264:	cmp	r3, #0
   15268:	bne	151f8 <close_stdout@@Base+0x2864>
   1526c:	ldrb	r3, [r5]
   15270:	cmp	r3, #96	; 0x60
   15274:	beq	1529c <close_stdout@@Base+0x2908>
   15278:	ldr	r0, [pc, #48]	; 152b0 <close_stdout@@Base+0x291c>
   1527c:	add	r0, pc, r0
   15280:	pop	{r4, r5, r6, pc}
   15284:	ldr	r0, [pc, #40]	; 152b4 <close_stdout@@Base+0x2920>
   15288:	add	r0, pc, r0
   1528c:	pop	{r4, r5, r6, pc}
   15290:	ldr	r0, [pc, #32]	; 152b8 <close_stdout@@Base+0x2924>
   15294:	add	r0, pc, r0
   15298:	pop	{r4, r5, r6, pc}
   1529c:	ldr	r0, [pc, #24]	; 152bc <close_stdout@@Base+0x2928>
   152a0:	add	r0, pc, r0
   152a4:	pop	{r4, r5, r6, pc}
   152a8:	andeq	r4, r0, r4, ror #27
   152ac:	ldrdeq	r4, [r0], -r8
   152b0:	andeq	r4, r0, ip, asr sp
   152b4:	andeq	r4, r0, r0, ror #26
   152b8:	andeq	r4, r0, ip, asr #26
   152bc:	andeq	r4, r0, r4, asr #26
   152c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152c4:	sub	sp, sp, #124	; 0x7c
   152c8:	ldr	ip, [pc, #3304]	; 15fb8 <close_stdout@@Base+0x3624>
   152cc:	mov	sl, r1
   152d0:	str	r0, [sp, #40]	; 0x28
   152d4:	mov	r8, r3
   152d8:	ldr	r0, [pc, #3292]	; 15fbc <close_stdout@@Base+0x3628>
   152dc:	add	ip, pc, ip
   152e0:	str	r2, [sp, #32]
   152e4:	ldr	r1, [sp, #164]	; 0xa4
   152e8:	mov	r3, ip
   152ec:	ldr	r0, [ip, r0]
   152f0:	ldr	r2, [sp, #172]	; 0xac
   152f4:	ubfx	r1, r1, #1, #1
   152f8:	str	r1, [sp, #36]	; 0x24
   152fc:	str	r0, [sp, #56]	; 0x38
   15300:	ldr	r0, [sp, #168]	; 0xa8
   15304:	ldr	r1, [sp, #176]	; 0xb0
   15308:	str	r2, [sp, #72]	; 0x48
   1530c:	str	r0, [sp, #48]	; 0x30
   15310:	ldr	r0, [sp, #56]	; 0x38
   15314:	str	r1, [sp, #68]	; 0x44
   15318:	ldr	r3, [r0]
   1531c:	str	r3, [sp, #116]	; 0x74
   15320:	bl	114dc <__ctype_get_mb_cur_max@plt>
   15324:	ldr	r2, [sp, #160]	; 0xa0
   15328:	str	r0, [sp, #64]	; 0x40
   1532c:	cmp	r2, #8
   15330:	addls	pc, pc, r2, lsl #2
   15334:	b	15e94 <close_stdout@@Base+0x3500>
   15338:	b	1535c <close_stdout@@Base+0x29c8>
   1533c:	b	15bac <close_stdout@@Base+0x3218>
   15340:	b	15bdc <close_stdout@@Base+0x3248>
   15344:	b	15a8c <close_stdout@@Base+0x30f8>
   15348:	b	15acc <close_stdout@@Base+0x3138>
   1534c:	b	15af8 <close_stdout@@Base+0x3164>
   15350:	b	15b18 <close_stdout@@Base+0x3184>
   15354:	b	15b18 <close_stdout@@Base+0x3184>
   15358:	b	15b18 <close_stdout@@Base+0x3184>
   1535c:	mov	r2, #0
   15360:	str	r2, [sp, #36]	; 0x24
   15364:	mov	r9, r2
   15368:	str	r2, [sp, #24]
   1536c:	str	r2, [sp, #28]
   15370:	str	r2, [sp, #52]	; 0x34
   15374:	ldr	r0, [sp, #36]	; 0x24
   15378:	mov	fp, #0
   1537c:	ldr	r1, [sp, #24]
   15380:	eor	r2, r0, #1
   15384:	eor	r3, r1, #1
   15388:	and	r3, r2, r3
   1538c:	and	r2, r1, r0
   15390:	str	r3, [sp, #44]	; 0x2c
   15394:	str	r2, [sp, #76]	; 0x4c
   15398:	cmn	r8, #1
   1539c:	beq	1571c <close_stdout@@Base+0x2d88>
   153a0:	subs	r3, fp, r8
   153a4:	movne	r3, #1
   153a8:	cmp	r3, #0
   153ac:	beq	15734 <close_stdout@@Base+0x2da0>
   153b0:	ldr	r3, [sp, #28]
   153b4:	ldr	r0, [sp, #24]
   153b8:	adds	r7, r3, #0
   153bc:	movne	r7, #1
   153c0:	ands	r6, r7, r0
   153c4:	bne	15c20 <close_stdout@@Base+0x328c>
   153c8:	ldr	r1, [sp, #32]
   153cc:	add	r5, r1, fp
   153d0:	ldrb	r4, [r5]
   153d4:	cmp	r4, #126	; 0x7e
   153d8:	addls	pc, pc, r4, lsl #2
   153dc:	b	159a0 <close_stdout@@Base+0x300c>
   153e0:	b	158ac <close_stdout@@Base+0x2f18>
   153e4:	b	159a0 <close_stdout@@Base+0x300c>
   153e8:	b	159a0 <close_stdout@@Base+0x300c>
   153ec:	b	159a0 <close_stdout@@Base+0x300c>
   153f0:	b	159a0 <close_stdout@@Base+0x300c>
   153f4:	b	159a0 <close_stdout@@Base+0x300c>
   153f8:	b	159a0 <close_stdout@@Base+0x300c>
   153fc:	b	15894 <close_stdout@@Base+0x2f00>
   15400:	b	1587c <close_stdout@@Base+0x2ee8>
   15404:	b	158a4 <close_stdout@@Base+0x2f10>
   15408:	b	1589c <close_stdout@@Base+0x2f08>
   1540c:	b	1588c <close_stdout@@Base+0x2ef8>
   15410:	b	15884 <close_stdout@@Base+0x2ef0>
   15414:	b	15848 <close_stdout@@Base+0x2eb4>
   15418:	b	159a0 <close_stdout@@Base+0x300c>
   1541c:	b	159a0 <close_stdout@@Base+0x300c>
   15420:	b	159a0 <close_stdout@@Base+0x300c>
   15424:	b	159a0 <close_stdout@@Base+0x300c>
   15428:	b	159a0 <close_stdout@@Base+0x300c>
   1542c:	b	159a0 <close_stdout@@Base+0x300c>
   15430:	b	159a0 <close_stdout@@Base+0x300c>
   15434:	b	159a0 <close_stdout@@Base+0x300c>
   15438:	b	159a0 <close_stdout@@Base+0x300c>
   1543c:	b	159a0 <close_stdout@@Base+0x300c>
   15440:	b	159a0 <close_stdout@@Base+0x300c>
   15444:	b	159a0 <close_stdout@@Base+0x300c>
   15448:	b	159a0 <close_stdout@@Base+0x300c>
   1544c:	b	159a0 <close_stdout@@Base+0x300c>
   15450:	b	159a0 <close_stdout@@Base+0x300c>
   15454:	b	159a0 <close_stdout@@Base+0x300c>
   15458:	b	159a0 <close_stdout@@Base+0x300c>
   1545c:	b	159a0 <close_stdout@@Base+0x300c>
   15460:	b	157d4 <close_stdout@@Base+0x2e40>
   15464:	b	157d4 <close_stdout@@Base+0x2e40>
   15468:	b	157d4 <close_stdout@@Base+0x2e40>
   1546c:	b	157cc <close_stdout@@Base+0x2e38>
   15470:	b	157d4 <close_stdout@@Base+0x2e40>
   15474:	b	156a8 <close_stdout@@Base+0x2d14>
   15478:	b	157d4 <close_stdout@@Base+0x2e40>
   1547c:	b	15948 <close_stdout@@Base+0x2fb4>
   15480:	b	157d4 <close_stdout@@Base+0x2e40>
   15484:	b	157d4 <close_stdout@@Base+0x2e40>
   15488:	b	157d4 <close_stdout@@Base+0x2e40>
   1548c:	b	156a8 <close_stdout@@Base+0x2d14>
   15490:	b	156a8 <close_stdout@@Base+0x2d14>
   15494:	b	156a8 <close_stdout@@Base+0x2d14>
   15498:	b	156a8 <close_stdout@@Base+0x2d14>
   1549c:	b	156a8 <close_stdout@@Base+0x2d14>
   154a0:	b	156a8 <close_stdout@@Base+0x2d14>
   154a4:	b	156a8 <close_stdout@@Base+0x2d14>
   154a8:	b	156a8 <close_stdout@@Base+0x2d14>
   154ac:	b	156a8 <close_stdout@@Base+0x2d14>
   154b0:	b	156a8 <close_stdout@@Base+0x2d14>
   154b4:	b	156a8 <close_stdout@@Base+0x2d14>
   154b8:	b	156a8 <close_stdout@@Base+0x2d14>
   154bc:	b	156a8 <close_stdout@@Base+0x2d14>
   154c0:	b	156a8 <close_stdout@@Base+0x2d14>
   154c4:	b	156a8 <close_stdout@@Base+0x2d14>
   154c8:	b	156a8 <close_stdout@@Base+0x2d14>
   154cc:	b	157d4 <close_stdout@@Base+0x2e40>
   154d0:	b	157d4 <close_stdout@@Base+0x2e40>
   154d4:	b	157d4 <close_stdout@@Base+0x2e40>
   154d8:	b	157d4 <close_stdout@@Base+0x2e40>
   154dc:	b	155dc <close_stdout@@Base+0x2c48>
   154e0:	b	159a0 <close_stdout@@Base+0x300c>
   154e4:	b	156a8 <close_stdout@@Base+0x2d14>
   154e8:	b	156a8 <close_stdout@@Base+0x2d14>
   154ec:	b	156a8 <close_stdout@@Base+0x2d14>
   154f0:	b	156a8 <close_stdout@@Base+0x2d14>
   154f4:	b	156a8 <close_stdout@@Base+0x2d14>
   154f8:	b	156a8 <close_stdout@@Base+0x2d14>
   154fc:	b	156a8 <close_stdout@@Base+0x2d14>
   15500:	b	156a8 <close_stdout@@Base+0x2d14>
   15504:	b	156a8 <close_stdout@@Base+0x2d14>
   15508:	b	156a8 <close_stdout@@Base+0x2d14>
   1550c:	b	156a8 <close_stdout@@Base+0x2d14>
   15510:	b	156a8 <close_stdout@@Base+0x2d14>
   15514:	b	156a8 <close_stdout@@Base+0x2d14>
   15518:	b	156a8 <close_stdout@@Base+0x2d14>
   1551c:	b	156a8 <close_stdout@@Base+0x2d14>
   15520:	b	156a8 <close_stdout@@Base+0x2d14>
   15524:	b	156a8 <close_stdout@@Base+0x2d14>
   15528:	b	156a8 <close_stdout@@Base+0x2d14>
   1552c:	b	156a8 <close_stdout@@Base+0x2d14>
   15530:	b	156a8 <close_stdout@@Base+0x2d14>
   15534:	b	156a8 <close_stdout@@Base+0x2d14>
   15538:	b	156a8 <close_stdout@@Base+0x2d14>
   1553c:	b	156a8 <close_stdout@@Base+0x2d14>
   15540:	b	156a8 <close_stdout@@Base+0x2d14>
   15544:	b	156a8 <close_stdout@@Base+0x2d14>
   15548:	b	156a8 <close_stdout@@Base+0x2d14>
   1554c:	b	157d4 <close_stdout@@Base+0x2e40>
   15550:	b	1592c <close_stdout@@Base+0x2f98>
   15554:	b	156a8 <close_stdout@@Base+0x2d14>
   15558:	b	157d4 <close_stdout@@Base+0x2e40>
   1555c:	b	156a8 <close_stdout@@Base+0x2d14>
   15560:	b	157d4 <close_stdout@@Base+0x2e40>
   15564:	b	156a8 <close_stdout@@Base+0x2d14>
   15568:	b	156a8 <close_stdout@@Base+0x2d14>
   1556c:	b	156a8 <close_stdout@@Base+0x2d14>
   15570:	b	156a8 <close_stdout@@Base+0x2d14>
   15574:	b	156a8 <close_stdout@@Base+0x2d14>
   15578:	b	156a8 <close_stdout@@Base+0x2d14>
   1557c:	b	156a8 <close_stdout@@Base+0x2d14>
   15580:	b	156a8 <close_stdout@@Base+0x2d14>
   15584:	b	156a8 <close_stdout@@Base+0x2d14>
   15588:	b	156a8 <close_stdout@@Base+0x2d14>
   1558c:	b	156a8 <close_stdout@@Base+0x2d14>
   15590:	b	156a8 <close_stdout@@Base+0x2d14>
   15594:	b	156a8 <close_stdout@@Base+0x2d14>
   15598:	b	156a8 <close_stdout@@Base+0x2d14>
   1559c:	b	156a8 <close_stdout@@Base+0x2d14>
   155a0:	b	156a8 <close_stdout@@Base+0x2d14>
   155a4:	b	156a8 <close_stdout@@Base+0x2d14>
   155a8:	b	156a8 <close_stdout@@Base+0x2d14>
   155ac:	b	156a8 <close_stdout@@Base+0x2d14>
   155b0:	b	156a8 <close_stdout@@Base+0x2d14>
   155b4:	b	156a8 <close_stdout@@Base+0x2d14>
   155b8:	b	156a8 <close_stdout@@Base+0x2d14>
   155bc:	b	156a8 <close_stdout@@Base+0x2d14>
   155c0:	b	156a8 <close_stdout@@Base+0x2d14>
   155c4:	b	156a8 <close_stdout@@Base+0x2d14>
   155c8:	b	156a8 <close_stdout@@Base+0x2d14>
   155cc:	b	157b4 <close_stdout@@Base+0x2e20>
   155d0:	b	157d4 <close_stdout@@Base+0x2e40>
   155d4:	b	157b4 <close_stdout@@Base+0x2e20>
   155d8:	b	157cc <close_stdout@@Base+0x2e38>
   155dc:	ldr	r3, [sp, #160]	; 0xa0
   155e0:	cmp	r3, #2
   155e4:	beq	15e70 <close_stdout@@Base+0x34dc>
   155e8:	cmp	r3, #3
   155ec:	bne	156a8 <close_stdout@@Base+0x2d14>
   155f0:	ldr	r1, [sp, #164]	; 0xa4
   155f4:	tst	r1, #4
   155f8:	beq	156a8 <close_stdout@@Base+0x2d14>
   155fc:	add	r3, fp, #2
   15600:	cmp	r8, r3
   15604:	bls	156a8 <close_stdout@@Base+0x2d14>
   15608:	ldrb	r2, [r5, #1]
   1560c:	mov	r1, #1
   15610:	cmp	r2, #63	; 0x3f
   15614:	bne	156a8 <close_stdout@@Base+0x2d14>
   15618:	ldr	r0, [sp, #32]
   1561c:	ldrb	ip, [r0, r3]
   15620:	sub	r0, ip, #33	; 0x21
   15624:	uxtb	r0, r0
   15628:	cmp	r0, #29
   1562c:	bhi	156a8 <close_stdout@@Base+0x2d14>
   15630:	lsl	r1, r1, r0
   15634:	movw	r0, #20929	; 0x51c1
   15638:	movt	r0, #14336	; 0x3800
   1563c:	and	r0, r1, r0
   15640:	cmp	r0, #0
   15644:	beq	156a8 <close_stdout@@Base+0x2d14>
   15648:	ldr	r1, [sp, #36]	; 0x24
   1564c:	cmp	r1, #0
   15650:	bne	157f0 <close_stdout@@Base+0x2e5c>
   15654:	cmp	r9, sl
   15658:	mov	r4, ip
   1565c:	mov	fp, r3
   15660:	ldrcc	r0, [sp, #40]	; 0x28
   15664:	strbcc	r2, [r0, r9]
   15668:	add	r2, r9, #1
   1566c:	cmp	sl, r2
   15670:	ldrhi	r0, [sp, #40]	; 0x28
   15674:	movhi	r1, #34	; 0x22
   15678:	strbhi	r1, [r0, r2]
   1567c:	add	r2, r9, #2
   15680:	cmp	sl, r2
   15684:	ldrhi	r0, [sp, #40]	; 0x28
   15688:	movhi	r1, #34	; 0x22
   1568c:	strbhi	r1, [r0, r2]
   15690:	add	r2, r9, #3
   15694:	cmp	sl, r2
   15698:	add	r9, r9, #4
   1569c:	ldrhi	r0, [sp, #40]	; 0x28
   156a0:	movhi	r1, #63	; 0x3f
   156a4:	strbhi	r1, [r0, r2]
   156a8:	ldr	r0, [sp, #44]	; 0x2c
   156ac:	cmp	r0, #0
   156b0:	bne	156d8 <close_stdout@@Base+0x2d44>
   156b4:	ldr	r1, [sp, #48]	; 0x30
   156b8:	cmp	r1, #0
   156bc:	beq	156d8 <close_stdout@@Base+0x2d44>
   156c0:	ubfx	r2, r4, #5, #8
   156c4:	and	r3, r4, #31
   156c8:	ldr	r2, [r1, r2, lsl #2]
   156cc:	lsr	r3, r2, r3
   156d0:	tst	r3, #1
   156d4:	bne	156e0 <close_stdout@@Base+0x2d4c>
   156d8:	cmp	r6, #0
   156dc:	beq	15700 <close_stdout@@Base+0x2d6c>
   156e0:	ldr	r2, [sp, #36]	; 0x24
   156e4:	cmp	r2, #0
   156e8:	bne	157f0 <close_stdout@@Base+0x2e5c>
   156ec:	cmp	r9, sl
   156f0:	ldrcc	r0, [sp, #40]	; 0x28
   156f4:	movcc	r3, #92	; 0x5c
   156f8:	strbcc	r3, [r0, r9]
   156fc:	add	r9, r9, #1
   15700:	add	fp, fp, #1
   15704:	cmp	r9, sl
   15708:	ldrcc	r1, [sp, #40]	; 0x28
   1570c:	strbcc	r4, [r1, r9]
   15710:	cmn	r8, #1
   15714:	add	r9, r9, #1
   15718:	bne	153a0 <close_stdout@@Base+0x2a0c>
   1571c:	ldr	r2, [sp, #32]
   15720:	ldrb	r3, [r2, fp]
   15724:	adds	r3, r3, #0
   15728:	movne	r3, #1
   1572c:	cmp	r3, #0
   15730:	bne	153b0 <close_stdout@@Base+0x2a1c>
   15734:	ldr	r3, [sp, #160]	; 0xa0
   15738:	cmp	r9, #0
   1573c:	cmpeq	r3, #2
   15740:	bne	15750 <close_stdout@@Base+0x2dbc>
   15744:	ldr	r0, [sp, #36]	; 0x24
   15748:	cmp	r0, #0
   1574c:	bne	157f0 <close_stdout@@Base+0x2e5c>
   15750:	ldr	r1, [sp, #36]	; 0x24
   15754:	ldr	r2, [sp, #52]	; 0x34
   15758:	eor	r3, r1, #1
   1575c:	cmp	r2, #0
   15760:	moveq	r3, #0
   15764:	andne	r3, r3, #1
   15768:	cmp	r3, #0
   1576c:	beq	15798 <close_stdout@@Base+0x2e04>
   15770:	ldrb	r3, [r2]
   15774:	cmp	r3, #0
   15778:	beq	15798 <close_stdout@@Base+0x2e04>
   1577c:	ldr	r1, [sp, #40]	; 0x28
   15780:	cmp	sl, r9
   15784:	strbhi	r3, [r1, r9]
   15788:	ldrb	r3, [r2, #1]!
   1578c:	add	r9, r9, #1
   15790:	cmp	r3, #0
   15794:	bne	15780 <close_stdout@@Base+0x2dec>
   15798:	cmp	r9, sl
   1579c:	movcs	r0, r9
   157a0:	ldrcc	r1, [sp, #40]	; 0x28
   157a4:	movcc	r3, #0
   157a8:	movcc	r0, r9
   157ac:	strbcc	r3, [r1, r9]
   157b0:	b	1582c <close_stdout@@Base+0x2e98>
   157b4:	cmn	r8, #1
   157b8:	beq	15e80 <close_stdout@@Base+0x34ec>
   157bc:	subs	r3, r8, #1
   157c0:	movne	r3, #1
   157c4:	cmp	r3, #0
   157c8:	bne	156a8 <close_stdout@@Base+0x2d14>
   157cc:	cmp	fp, #0
   157d0:	bne	156a8 <close_stdout@@Base+0x2d14>
   157d4:	ldr	r3, [sp, #36]	; 0x24
   157d8:	ldr	r0, [sp, #160]	; 0xa0
   157dc:	cmp	r0, #2
   157e0:	movne	r3, #0
   157e4:	andeq	r3, r3, #1
   157e8:	cmp	r3, #0
   157ec:	beq	156a8 <close_stdout@@Base+0x2d14>
   157f0:	ldr	r2, [sp, #164]	; 0xa4
   157f4:	mov	ip, #0
   157f8:	ldr	r0, [sp, #160]	; 0xa0
   157fc:	bic	r3, r2, #2
   15800:	ldr	r1, [sp, #72]	; 0x48
   15804:	ldr	r2, [sp, #68]	; 0x44
   15808:	stm	sp, {r0, r3}
   1580c:	mov	r3, r8
   15810:	str	r1, [sp, #12]
   15814:	mov	r1, sl
   15818:	str	r2, [sp, #16]
   1581c:	ldr	r0, [sp, #40]	; 0x28
   15820:	ldr	r2, [sp, #32]
   15824:	str	ip, [sp, #8]
   15828:	bl	152c0 <close_stdout@@Base+0x292c>
   1582c:	ldr	r1, [sp, #56]	; 0x38
   15830:	ldr	r2, [sp, #116]	; 0x74
   15834:	ldr	r3, [r1]
   15838:	cmp	r2, r3
   1583c:	bne	15f70 <close_stdout@@Base+0x35dc>
   15840:	add	sp, sp, #124	; 0x7c
   15844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15848:	mov	r3, #114	; 0x72
   1584c:	ldr	r2, [sp, #36]	; 0x24
   15850:	ldr	r0, [sp, #160]	; 0xa0
   15854:	cmp	r0, #2
   15858:	movne	r2, #0
   1585c:	andeq	r2, r2, #1
   15860:	cmp	r2, #0
   15864:	bne	157f0 <close_stdout@@Base+0x2e5c>
   15868:	ldr	r1, [sp, #24]
   1586c:	cmp	r1, #0
   15870:	beq	156a8 <close_stdout@@Base+0x2d14>
   15874:	mov	r4, r3
   15878:	b	156e0 <close_stdout@@Base+0x2d4c>
   1587c:	mov	r3, #98	; 0x62
   15880:	b	15868 <close_stdout@@Base+0x2ed4>
   15884:	mov	r3, #102	; 0x66
   15888:	b	15868 <close_stdout@@Base+0x2ed4>
   1588c:	mov	r3, #118	; 0x76
   15890:	b	15868 <close_stdout@@Base+0x2ed4>
   15894:	mov	r3, #97	; 0x61
   15898:	b	15868 <close_stdout@@Base+0x2ed4>
   1589c:	mov	r3, #110	; 0x6e
   158a0:	b	1584c <close_stdout@@Base+0x2eb8>
   158a4:	mov	r3, #116	; 0x74
   158a8:	b	1584c <close_stdout@@Base+0x2eb8>
   158ac:	ldr	r2, [sp, #24]
   158b0:	cmp	r2, #0
   158b4:	beq	15e5c <close_stdout@@Base+0x34c8>
   158b8:	ldr	r3, [sp, #36]	; 0x24
   158bc:	cmp	r3, #0
   158c0:	bne	157f0 <close_stdout@@Base+0x2e5c>
   158c4:	cmp	r9, sl
   158c8:	add	r2, r9, #1
   158cc:	ldrcc	r0, [sp, #40]	; 0x28
   158d0:	movcc	r3, #92	; 0x5c
   158d4:	strbcc	r3, [r0, r9]
   158d8:	add	r3, fp, #1
   158dc:	cmp	r8, r3
   158e0:	bls	15920 <close_stdout@@Base+0x2f8c>
   158e4:	ldr	r1, [sp, #32]
   158e8:	ldrb	r3, [r1, r3]
   158ec:	sub	r3, r3, #48	; 0x30
   158f0:	cmp	r3, #9
   158f4:	bhi	15920 <close_stdout@@Base+0x2f8c>
   158f8:	cmp	sl, r2
   158fc:	ldrhi	r0, [sp, #40]	; 0x28
   15900:	movhi	r3, #48	; 0x30
   15904:	strbhi	r3, [r0, r2]
   15908:	add	r3, r9, #2
   1590c:	cmp	sl, r3
   15910:	ldrhi	r1, [sp, #40]	; 0x28
   15914:	movhi	r2, #48	; 0x30
   15918:	strbhi	r2, [r1, r3]
   1591c:	add	r2, r9, #3
   15920:	mov	r9, r2
   15924:	mov	r4, #48	; 0x30
   15928:	b	156b4 <close_stdout@@Base+0x2d20>
   1592c:	ldr	r1, [sp, #76]	; 0x4c
   15930:	cmp	r1, #0
   15934:	beq	15940 <close_stdout@@Base+0x2fac>
   15938:	cmp	r7, #0
   1593c:	bne	15700 <close_stdout@@Base+0x2d6c>
   15940:	mov	r3, r4
   15944:	b	1584c <close_stdout@@Base+0x2eb8>
   15948:	ldr	r1, [sp, #160]	; 0xa0
   1594c:	cmp	r1, #2
   15950:	bne	156a8 <close_stdout@@Base+0x2d14>
   15954:	ldr	r2, [sp, #36]	; 0x24
   15958:	cmp	r2, #0
   1595c:	bne	157f0 <close_stdout@@Base+0x2e5c>
   15960:	cmp	r9, sl
   15964:	ldrcc	r0, [sp, #40]	; 0x28
   15968:	movcc	r3, #39	; 0x27
   1596c:	strbcc	r3, [r0, r9]
   15970:	add	r3, r9, #1
   15974:	cmp	sl, r3
   15978:	ldrhi	r1, [sp, #40]	; 0x28
   1597c:	movhi	r2, #92	; 0x5c
   15980:	strbhi	r2, [r1, r3]
   15984:	add	r3, r9, #2
   15988:	cmp	sl, r3
   1598c:	add	r9, r9, #3
   15990:	ldrhi	r0, [sp, #40]	; 0x28
   15994:	movhi	r2, #39	; 0x27
   15998:	strbhi	r2, [r0, r3]
   1599c:	b	156a8 <close_stdout@@Base+0x2d14>
   159a0:	ldr	r1, [sp, #64]	; 0x40
   159a4:	cmp	r1, #1
   159a8:	bne	15ca0 <close_stdout@@Base+0x330c>
   159ac:	bl	11584 <__ctype_b_loc@plt>
   159b0:	ldr	r2, [sp, #64]	; 0x40
   159b4:	sxth	r3, r4
   159b8:	str	r2, [sp, #60]	; 0x3c
   159bc:	lsl	r3, r3, #1
   159c0:	ldr	r2, [r0]
   159c4:	ldrh	r2, [r2, r3]
   159c8:	eor	r2, r2, #16384	; 0x4000
   159cc:	ubfx	r2, r2, #14, #1
   159d0:	ldr	r1, [sp, #24]
   159d4:	ands	r2, r2, r1
   159d8:	beq	156a8 <close_stdout@@Base+0x2d14>
   159dc:	ldr	r3, [sp, #60]	; 0x3c
   159e0:	mov	r0, #92	; 0x5c
   159e4:	ldr	r7, [sp, #36]	; 0x24
   159e8:	add	r1, r3, fp
   159ec:	str	r8, [sp, #60]	; 0x3c
   159f0:	ldr	r3, [sp, #40]	; 0x28
   159f4:	b	15a58 <close_stdout@@Base+0x30c4>
   159f8:	cmp	r7, #0
   159fc:	bne	15e98 <close_stdout@@Base+0x3504>
   15a00:	add	ip, r9, #1
   15a04:	cmp	r9, sl
   15a08:	strbcc	r0, [r3, r9]
   15a0c:	cmp	sl, ip
   15a10:	lsrhi	r8, r4, #6
   15a14:	addhi	r8, r8, #48	; 0x30
   15a18:	strbhi	r8, [r3, ip]
   15a1c:	add	ip, r9, #2
   15a20:	add	r9, r9, #3
   15a24:	cmp	sl, ip
   15a28:	ubfxhi	r8, r4, #3, #3
   15a2c:	and	r4, r4, #7
   15a30:	add	r4, r4, #48	; 0x30
   15a34:	addhi	r8, r8, #48	; 0x30
   15a38:	strbhi	r8, [r3, ip]
   15a3c:	add	fp, fp, #1
   15a40:	cmp	r1, fp
   15a44:	bls	15a84 <close_stdout@@Base+0x30f0>
   15a48:	cmp	r9, sl
   15a4c:	strbcc	r4, [r3, r9]
   15a50:	ldrb	r4, [r5, #1]!
   15a54:	add	r9, r9, #1
   15a58:	cmp	r2, #0
   15a5c:	bne	159f8 <close_stdout@@Base+0x3064>
   15a60:	cmp	r6, #0
   15a64:	beq	15a3c <close_stdout@@Base+0x30a8>
   15a68:	add	fp, fp, #1
   15a6c:	cmp	r9, sl
   15a70:	strbcc	r0, [r3, r9]
   15a74:	cmp	r1, fp
   15a78:	add	r9, r9, #1
   15a7c:	mov	r6, #0
   15a80:	bhi	15a48 <close_stdout@@Base+0x30b4>
   15a84:	ldr	r8, [sp, #60]	; 0x3c
   15a88:	b	15704 <close_stdout@@Base+0x2d70>
   15a8c:	ldr	r3, [sp, #36]	; 0x24
   15a90:	cmp	r3, #0
   15a94:	bne	15f98 <close_stdout@@Base+0x3604>
   15a98:	cmp	sl, #0
   15a9c:	beq	15eb0 <close_stdout@@Base+0x351c>
   15aa0:	ldr	r1, [sp, #40]	; 0x28
   15aa4:	mov	r0, #1
   15aa8:	ldr	r2, [pc, #1296]	; 15fc0 <close_stdout@@Base+0x362c>
   15aac:	mov	r3, #34	; 0x22
   15ab0:	str	r0, [sp, #24]
   15ab4:	mov	r9, r0
   15ab8:	add	r2, pc, r2
   15abc:	str	r0, [sp, #28]
   15ac0:	strb	r3, [r1]
   15ac4:	str	r2, [sp, #52]	; 0x34
   15ac8:	b	15374 <close_stdout@@Base+0x29e0>
   15acc:	ldr	r3, [pc, #1264]	; 15fc4 <close_stdout@@Base+0x3630>
   15ad0:	mov	r2, #1
   15ad4:	mov	r0, #3
   15ad8:	str	r2, [sp, #36]	; 0x24
   15adc:	add	r3, pc, r3
   15ae0:	str	r2, [sp, #24]
   15ae4:	str	r3, [sp, #52]	; 0x34
   15ae8:	mov	r9, #0
   15aec:	str	r2, [sp, #28]
   15af0:	str	r0, [sp, #160]	; 0xa0
   15af4:	b	15374 <close_stdout@@Base+0x29e0>
   15af8:	mov	r0, #0
   15afc:	mov	r1, #1
   15b00:	str	r0, [sp, #36]	; 0x24
   15b04:	mov	r9, r0
   15b08:	str	r1, [sp, #24]
   15b0c:	str	r0, [sp, #28]
   15b10:	str	r0, [sp, #52]	; 0x34
   15b14:	b	15374 <close_stdout@@Base+0x29e0>
   15b18:	ldr	r3, [sp, #160]	; 0xa0
   15b1c:	cmp	r3, #8
   15b20:	beq	15b4c <close_stdout@@Base+0x31b8>
   15b24:	ldr	r0, [pc, #1180]	; 15fc8 <close_stdout@@Base+0x3634>
   15b28:	mov	r1, r3
   15b2c:	add	r0, pc, r0
   15b30:	bl	1515c <close_stdout@@Base+0x27c8>
   15b34:	ldr	r1, [sp, #160]	; 0xa0
   15b38:	str	r0, [sp, #72]	; 0x48
   15b3c:	ldr	r0, [pc, #1160]	; 15fcc <close_stdout@@Base+0x3638>
   15b40:	add	r0, pc, r0
   15b44:	bl	1515c <close_stdout@@Base+0x27c8>
   15b48:	str	r0, [sp, #68]	; 0x44
   15b4c:	ldr	r0, [sp, #36]	; 0x24
   15b50:	cmp	r0, #0
   15b54:	movne	r9, #0
   15b58:	bne	15b90 <close_stdout@@Base+0x31fc>
   15b5c:	ldr	r1, [sp, #72]	; 0x48
   15b60:	ldrb	r3, [r1]
   15b64:	cmp	r3, #0
   15b68:	beq	15f68 <close_stdout@@Base+0x35d4>
   15b6c:	mov	r2, r1
   15b70:	ldr	r1, [sp, #40]	; 0x28
   15b74:	mov	r9, r0
   15b78:	cmp	r9, sl
   15b7c:	strbcc	r3, [r1, r9]
   15b80:	ldrb	r3, [r2, #1]!
   15b84:	add	r9, r9, #1
   15b88:	cmp	r3, #0
   15b8c:	bne	15b78 <close_stdout@@Base+0x31e4>
   15b90:	ldr	r0, [sp, #68]	; 0x44
   15b94:	str	r0, [sp, #52]	; 0x34
   15b98:	bl	115a8 <strlen@plt>
   15b9c:	mov	r2, #1
   15ba0:	str	r2, [sp, #24]
   15ba4:	str	r0, [sp, #28]
   15ba8:	b	15374 <close_stdout@@Base+0x29e0>
   15bac:	ldr	r3, [pc, #1052]	; 15fd0 <close_stdout@@Base+0x363c>
   15bb0:	mov	r2, #0
   15bb4:	mov	r1, #1
   15bb8:	mov	r0, #2
   15bbc:	add	r3, pc, r3
   15bc0:	str	r1, [sp, #36]	; 0x24
   15bc4:	str	r2, [sp, #24]
   15bc8:	mov	r9, r2
   15bcc:	str	r1, [sp, #28]
   15bd0:	str	r3, [sp, #52]	; 0x34
   15bd4:	str	r0, [sp, #160]	; 0xa0
   15bd8:	b	15374 <close_stdout@@Base+0x29e0>
   15bdc:	ldr	r3, [sp, #36]	; 0x24
   15be0:	cmp	r3, #0
   15be4:	bne	15f74 <close_stdout@@Base+0x35e0>
   15be8:	cmp	sl, #0
   15bec:	beq	15ed0 <close_stdout@@Base+0x353c>
   15bf0:	ldr	r1, [sp, #40]	; 0x28
   15bf4:	mov	r3, #39	; 0x27
   15bf8:	ldr	r2, [sp, #36]	; 0x24
   15bfc:	mov	r0, #1
   15c00:	mov	r9, r0
   15c04:	str	r0, [sp, #28]
   15c08:	strb	r3, [r1]
   15c0c:	ldr	r3, [pc, #960]	; 15fd4 <close_stdout@@Base+0x3640>
   15c10:	str	r2, [sp, #24]
   15c14:	add	r3, pc, r3
   15c18:	str	r3, [sp, #52]	; 0x34
   15c1c:	b	15374 <close_stdout@@Base+0x29e0>
   15c20:	ldr	r2, [sp, #28]
   15c24:	cmp	r2, #1
   15c28:	add	r4, fp, r2
   15c2c:	movls	r3, #0
   15c30:	movhi	r3, #1
   15c34:	cmn	r8, #1
   15c38:	movne	r3, #0
   15c3c:	cmp	r3, #0
   15c40:	beq	15c50 <close_stdout@@Base+0x32bc>
   15c44:	ldr	r0, [sp, #32]
   15c48:	bl	115a8 <strlen@plt>
   15c4c:	mov	r8, r0
   15c50:	cmp	r8, r4
   15c54:	ldrcc	r3, [sp, #32]
   15c58:	movcc	r6, #0
   15c5c:	addcc	r5, r3, fp
   15c60:	bcc	153d0 <close_stdout@@Base+0x2a3c>
   15c64:	ldr	r0, [sp, #32]
   15c68:	ldr	r1, [sp, #52]	; 0x34
   15c6c:	add	r5, r0, fp
   15c70:	ldr	r2, [sp, #28]
   15c74:	mov	r0, r5
   15c78:	bl	11440 <memcmp@plt>
   15c7c:	cmp	r0, #0
   15c80:	bne	15c98 <close_stdout@@Base+0x3304>
   15c84:	ldr	r1, [sp, #36]	; 0x24
   15c88:	cmp	r1, #0
   15c8c:	bne	157f0 <close_stdout@@Base+0x2e5c>
   15c90:	mov	r6, #1
   15c94:	b	153d0 <close_stdout@@Base+0x2a3c>
   15c98:	mov	r6, #0
   15c9c:	b	153d0 <close_stdout@@Base+0x2a3c>
   15ca0:	add	r7, sp, #108	; 0x6c
   15ca4:	cmn	r8, #1
   15ca8:	mov	r3, #0
   15cac:	str	r3, [sp, #108]	; 0x6c
   15cb0:	str	r3, [r7, #4]
   15cb4:	beq	15ea0 <close_stdout@@Base+0x350c>
   15cb8:	mov	r1, #0
   15cbc:	ldr	r0, [sp, #32]
   15cc0:	mov	ip, #1
   15cc4:	str	r9, [sp, #88]	; 0x58
   15cc8:	str	r6, [sp, #96]	; 0x60
   15ccc:	mov	r9, r1
   15cd0:	str	r5, [sp, #100]	; 0x64
   15cd4:	mov	r6, ip
   15cd8:	mov	r5, r7
   15cdc:	add	r3, sp, #104	; 0x68
   15ce0:	sub	r0, r0, #1
   15ce4:	str	r3, [sp, #80]	; 0x50
   15ce8:	str	r0, [sp, #84]	; 0x54
   15cec:	str	r1, [sp, #60]	; 0x3c
   15cf0:	str	r4, [sp, #92]	; 0x5c
   15cf4:	ldr	r2, [sp, #32]
   15cf8:	add	r7, r9, fp
   15cfc:	add	r0, sp, #104	; 0x68
   15d00:	mov	r3, r5
   15d04:	add	r4, r2, r7
   15d08:	rsb	r2, r7, r8
   15d0c:	mov	r1, r4
   15d10:	bl	1150c <mbrtowc@plt>
   15d14:	subs	r2, r0, #0
   15d18:	beq	15e24 <close_stdout@@Base+0x3490>
   15d1c:	cmn	r2, #1
   15d20:	beq	15f4c <close_stdout@@Base+0x35b8>
   15d24:	cmn	r2, #2
   15d28:	beq	15ef0 <close_stdout@@Base+0x355c>
   15d2c:	ldr	r3, [sp, #36]	; 0x24
   15d30:	ldr	r0, [sp, #160]	; 0xa0
   15d34:	cmp	r0, #2
   15d38:	movne	r3, #0
   15d3c:	andeq	r3, r3, #1
   15d40:	cmp	r3, #0
   15d44:	beq	15e00 <close_stdout@@Base+0x346c>
   15d48:	cmp	r2, #1
   15d4c:	beq	15e00 <close_stdout@@Base+0x346c>
   15d50:	ldr	r1, [sp, #84]	; 0x54
   15d54:	add	r3, r1, r2
   15d58:	add	r7, r3, r7
   15d5c:	ldrb	r3, [r4, #1]!
   15d60:	sub	r3, r3, #91	; 0x5b
   15d64:	cmp	r3, #33	; 0x21
   15d68:	addls	pc, pc, r3, lsl #2
   15d6c:	b	15df8 <close_stdout@@Base+0x3464>
   15d70:	b	157f0 <close_stdout@@Base+0x2e5c>
   15d74:	b	157f0 <close_stdout@@Base+0x2e5c>
   15d78:	b	15df8 <close_stdout@@Base+0x3464>
   15d7c:	b	157f0 <close_stdout@@Base+0x2e5c>
   15d80:	b	15df8 <close_stdout@@Base+0x3464>
   15d84:	b	157f0 <close_stdout@@Base+0x2e5c>
   15d88:	b	15df8 <close_stdout@@Base+0x3464>
   15d8c:	b	15df8 <close_stdout@@Base+0x3464>
   15d90:	b	15df8 <close_stdout@@Base+0x3464>
   15d94:	b	15df8 <close_stdout@@Base+0x3464>
   15d98:	b	15df8 <close_stdout@@Base+0x3464>
   15d9c:	b	15df8 <close_stdout@@Base+0x3464>
   15da0:	b	15df8 <close_stdout@@Base+0x3464>
   15da4:	b	15df8 <close_stdout@@Base+0x3464>
   15da8:	b	15df8 <close_stdout@@Base+0x3464>
   15dac:	b	15df8 <close_stdout@@Base+0x3464>
   15db0:	b	15df8 <close_stdout@@Base+0x3464>
   15db4:	b	15df8 <close_stdout@@Base+0x3464>
   15db8:	b	15df8 <close_stdout@@Base+0x3464>
   15dbc:	b	15df8 <close_stdout@@Base+0x3464>
   15dc0:	b	15df8 <close_stdout@@Base+0x3464>
   15dc4:	b	15df8 <close_stdout@@Base+0x3464>
   15dc8:	b	15df8 <close_stdout@@Base+0x3464>
   15dcc:	b	15df8 <close_stdout@@Base+0x3464>
   15dd0:	b	15df8 <close_stdout@@Base+0x3464>
   15dd4:	b	15df8 <close_stdout@@Base+0x3464>
   15dd8:	b	15df8 <close_stdout@@Base+0x3464>
   15ddc:	b	15df8 <close_stdout@@Base+0x3464>
   15de0:	b	15df8 <close_stdout@@Base+0x3464>
   15de4:	b	15df8 <close_stdout@@Base+0x3464>
   15de8:	b	15df8 <close_stdout@@Base+0x3464>
   15dec:	b	15df8 <close_stdout@@Base+0x3464>
   15df0:	b	15df8 <close_stdout@@Base+0x3464>
   15df4:	b	157f0 <close_stdout@@Base+0x2e5c>
   15df8:	cmp	r4, r7
   15dfc:	bne	15d5c <close_stdout@@Base+0x33c8>
   15e00:	ldr	r0, [sp, #104]	; 0x68
   15e04:	add	r9, r9, r2
   15e08:	bl	114a0 <iswprint@plt>
   15e0c:	cmp	r0, #0
   15e10:	mov	r0, r5
   15e14:	moveq	r6, #0
   15e18:	bl	11428 <mbsinit@plt>
   15e1c:	cmp	r0, #0
   15e20:	beq	15cf4 <close_stdout@@Base+0x3360>
   15e24:	mov	ip, r6
   15e28:	eor	r2, ip, #1
   15e2c:	str	r9, [sp, #60]	; 0x3c
   15e30:	ldr	r4, [sp, #92]	; 0x5c
   15e34:	uxtb	r2, r2
   15e38:	ldr	r9, [sp, #88]	; 0x58
   15e3c:	ldr	r6, [sp, #96]	; 0x60
   15e40:	ldr	r5, [sp, #100]	; 0x64
   15e44:	ldr	r3, [sp, #60]	; 0x3c
   15e48:	cmp	r3, #1
   15e4c:	bls	159d0 <close_stdout@@Base+0x303c>
   15e50:	ldr	r0, [sp, #24]
   15e54:	and	r2, r2, r0
   15e58:	b	159dc <close_stdout@@Base+0x3048>
   15e5c:	ldr	r2, [sp, #164]	; 0xa4
   15e60:	tst	r2, #1
   15e64:	addne	fp, fp, #1
   15e68:	bne	15398 <close_stdout@@Base+0x2a04>
   15e6c:	b	156a8 <close_stdout@@Base+0x2d14>
   15e70:	ldr	r0, [sp, #36]	; 0x24
   15e74:	cmp	r0, #0
   15e78:	beq	156a8 <close_stdout@@Base+0x2d14>
   15e7c:	b	157f0 <close_stdout@@Base+0x2e5c>
   15e80:	ldr	r2, [sp, #32]
   15e84:	ldrb	r3, [r2, #1]
   15e88:	adds	r3, r3, #0
   15e8c:	movne	r3, #1
   15e90:	b	157c4 <close_stdout@@Base+0x2e30>
   15e94:	bl	1171c <abort@plt>
   15e98:	ldr	r8, [sp, #60]	; 0x3c
   15e9c:	b	157f0 <close_stdout@@Base+0x2e5c>
   15ea0:	ldr	r0, [sp, #32]
   15ea4:	bl	115a8 <strlen@plt>
   15ea8:	mov	r8, r0
   15eac:	b	15cb8 <close_stdout@@Base+0x3324>
   15eb0:	ldr	r2, [pc, #288]	; 15fd8 <close_stdout@@Base+0x3644>
   15eb4:	mov	r1, #1
   15eb8:	mov	r9, r1
   15ebc:	str	r1, [sp, #24]
   15ec0:	add	r2, pc, r2
   15ec4:	str	r1, [sp, #28]
   15ec8:	str	r2, [sp, #52]	; 0x34
   15ecc:	b	15374 <close_stdout@@Base+0x29e0>
   15ed0:	ldr	r2, [pc, #260]	; 15fdc <close_stdout@@Base+0x3648>
   15ed4:	mov	r3, #1
   15ed8:	mov	r9, r3
   15edc:	str	r3, [sp, #28]
   15ee0:	add	r2, pc, r2
   15ee4:	str	sl, [sp, #24]
   15ee8:	str	r2, [sp, #52]	; 0x34
   15eec:	b	15374 <close_stdout@@Base+0x29e0>
   15ef0:	cmp	r8, r7
   15ef4:	str	r9, [sp, #60]	; 0x3c
   15ef8:	mov	ip, r4
   15efc:	ldr	r6, [sp, #96]	; 0x60
   15f00:	ldr	r9, [sp, #88]	; 0x58
   15f04:	ldr	r4, [sp, #92]	; 0x5c
   15f08:	ldr	r5, [sp, #100]	; 0x64
   15f0c:	bls	15f44 <close_stdout@@Base+0x35b0>
   15f10:	ldrb	r3, [ip]
   15f14:	cmp	r3, #0
   15f18:	beq	15f44 <close_stdout@@Base+0x35b0>
   15f1c:	ldr	r3, [sp, #60]	; 0x3c
   15f20:	b	15f30 <close_stdout@@Base+0x359c>
   15f24:	ldrb	r2, [r5, r3]
   15f28:	cmp	r2, #0
   15f2c:	beq	15f40 <close_stdout@@Base+0x35ac>
   15f30:	add	r3, r3, #1
   15f34:	add	r2, fp, r3
   15f38:	cmp	r8, r2
   15f3c:	bhi	15f24 <close_stdout@@Base+0x3590>
   15f40:	str	r3, [sp, #60]	; 0x3c
   15f44:	mov	r2, #1
   15f48:	b	15e44 <close_stdout@@Base+0x34b0>
   15f4c:	str	r9, [sp, #60]	; 0x3c
   15f50:	mov	r2, #1
   15f54:	ldr	r4, [sp, #92]	; 0x5c
   15f58:	ldr	r6, [sp, #96]	; 0x60
   15f5c:	ldr	r9, [sp, #88]	; 0x58
   15f60:	ldr	r5, [sp, #100]	; 0x64
   15f64:	b	15e44 <close_stdout@@Base+0x34b0>
   15f68:	ldr	r9, [sp, #36]	; 0x24
   15f6c:	b	15b90 <close_stdout@@Base+0x31fc>
   15f70:	bl	11458 <__stack_chk_fail@plt>
   15f74:	ldr	r1, [pc, #100]	; 15fe0 <close_stdout@@Base+0x364c>
   15f78:	mov	r3, #0
   15f7c:	mov	r0, #1
   15f80:	str	r3, [sp, #24]
   15f84:	add	r1, pc, r1
   15f88:	str	r0, [sp, #28]
   15f8c:	mov	r9, r3
   15f90:	str	r1, [sp, #52]	; 0x34
   15f94:	b	15374 <close_stdout@@Base+0x29e0>
   15f98:	ldr	r0, [pc, #68]	; 15fe4 <close_stdout@@Base+0x3650>
   15f9c:	mov	r3, #1
   15fa0:	mov	r9, #0
   15fa4:	str	r3, [sp, #24]
   15fa8:	add	r0, pc, r0
   15fac:	str	r3, [sp, #28]
   15fb0:	str	r0, [sp, #52]	; 0x34
   15fb4:	b	15374 <close_stdout@@Base+0x29e0>
   15fb8:	andeq	r6, r1, ip, lsl sp
   15fbc:	andeq	r0, r0, r4, asr r1
   15fc0:	andeq	r4, r0, r8, lsr #10
   15fc4:	andeq	r4, r0, r4, lsl #10
   15fc8:	andeq	r4, r0, r0, asr #9
   15fcc:	muleq	r0, ip, r4
   15fd0:	andeq	r4, r0, r0, lsr #8
   15fd4:	andeq	r4, r0, r8, asr #7
   15fd8:	andeq	r4, r0, r0, lsr #2
   15fdc:	strdeq	r4, [r0], -ip
   15fe0:	andeq	r4, r0, r8, asr r0
   15fe4:	andeq	r4, r0, r8, lsr r0
   15fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fec:	sub	sp, sp, #44	; 0x2c
   15ff0:	mov	r6, r0
   15ff4:	mov	r9, r1
   15ff8:	mov	sl, r2
   15ffc:	mov	r4, r3
   16000:	bl	115fc <__errno_location@plt>
   16004:	ldr	fp, [pc, #412]	; 161a8 <close_stdout@@Base+0x3814>
   16008:	cmp	r6, #0
   1600c:	add	fp, pc, fp
   16010:	ldr	r5, [fp]
   16014:	ldr	r1, [r0]
   16018:	mov	r8, r0
   1601c:	str	r1, [sp, #36]	; 0x24
   16020:	blt	161a0 <close_stdout@@Base+0x380c>
   16024:	ldr	r3, [pc, #384]	; 161ac <close_stdout@@Base+0x3818>
   16028:	add	r3, pc, r3
   1602c:	ldr	r3, [r3]
   16030:	cmp	r6, r3
   16034:	bcc	16088 <close_stdout@@Base+0x36f4>
   16038:	add	r7, r6, #1
   1603c:	cmn	r7, #-536870911	; 0xe0000001
   16040:	bhi	161a4 <close_stdout@@Base+0x3810>
   16044:	add	r3, fp, #4
   16048:	cmp	r5, r3
   1604c:	beq	16178 <close_stdout@@Base+0x37e4>
   16050:	mov	r0, r5
   16054:	lsl	r1, r7, #3
   16058:	bl	16e80 <close_stdout@@Base+0x44ec>
   1605c:	mov	r5, r0
   16060:	str	r0, [fp]
   16064:	ldr	fp, [pc, #324]	; 161b0 <close_stdout@@Base+0x381c>
   16068:	mov	r1, #0
   1606c:	add	fp, pc, fp
   16070:	ldr	r0, [fp]
   16074:	rsb	r2, r0, r7
   16078:	add	r0, r5, r0, lsl #3
   1607c:	lsl	r2, r2, #3
   16080:	bl	11620 <memset@plt>
   16084:	str	r7, [fp]
   16088:	add	r2, r4, #8
   1608c:	str	r2, [sp, #32]
   16090:	ldr	r1, [r4]
   16094:	add	fp, r5, r6, lsl #3
   16098:	ldr	lr, [sp, #32]
   1609c:	mov	r2, r9
   160a0:	ldr	r3, [r4, #4]
   160a4:	ldr	ip, [r5, r6, lsl #3]
   160a8:	ldr	r7, [fp, #4]
   160ac:	orr	r3, r3, #1
   160b0:	str	r1, [sp]
   160b4:	str	r3, [sp, #4]
   160b8:	mov	r1, ip
   160bc:	str	lr, [sp, #8]
   160c0:	mov	r0, r7
   160c4:	ldr	lr, [r4, #40]	; 0x28
   160c8:	str	r3, [sp, #28]
   160cc:	mov	r3, sl
   160d0:	str	lr, [sp, #12]
   160d4:	ldr	lr, [r4, #44]	; 0x2c
   160d8:	str	ip, [sp, #24]
   160dc:	str	lr, [sp, #16]
   160e0:	bl	152c0 <close_stdout@@Base+0x292c>
   160e4:	ldr	ip, [sp, #24]
   160e8:	cmp	ip, r0
   160ec:	bhi	16164 <close_stdout@@Base+0x37d0>
   160f0:	ldr	r3, [pc, #188]	; 161b4 <close_stdout@@Base+0x3820>
   160f4:	add	r1, r0, #1
   160f8:	str	r1, [r5, r6, lsl #3]
   160fc:	add	r3, pc, r3
   16100:	cmp	r7, r3
   16104:	beq	16118 <close_stdout@@Base+0x3784>
   16108:	mov	r0, r7
   1610c:	str	r1, [sp, #24]
   16110:	bl	113f8 <free@plt>
   16114:	ldr	r1, [sp, #24]
   16118:	mov	r0, r1
   1611c:	str	r1, [sp, #24]
   16120:	bl	16e28 <close_stdout@@Base+0x4494>
   16124:	ldr	r3, [sp, #28]
   16128:	ldr	lr, [sp, #32]
   1612c:	mov	r2, r9
   16130:	str	r0, [fp, #4]
   16134:	mov	r7, r0
   16138:	ldr	ip, [r4]
   1613c:	str	r3, [sp, #4]
   16140:	mov	r3, sl
   16144:	str	lr, [sp, #8]
   16148:	str	ip, [sp]
   1614c:	ldr	ip, [r4, #40]	; 0x28
   16150:	ldr	r1, [sp, #24]
   16154:	str	ip, [sp, #12]
   16158:	ldr	ip, [r4, #44]	; 0x2c
   1615c:	str	ip, [sp, #16]
   16160:	bl	152c0 <close_stdout@@Base+0x292c>
   16164:	ldr	r1, [sp, #36]	; 0x24
   16168:	mov	r0, r7
   1616c:	str	r1, [r8]
   16170:	add	sp, sp, #44	; 0x2c
   16174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16178:	lsl	r1, r7, #3
   1617c:	mov	r0, #0
   16180:	str	r3, [sp, #24]
   16184:	bl	16e80 <close_stdout@@Base+0x44ec>
   16188:	ldr	r3, [sp, #24]
   1618c:	mov	r5, r0
   16190:	ldm	r3, {r0, r1}
   16194:	str	r5, [fp]
   16198:	stm	r5, {r0, r1}
   1619c:	b	16064 <close_stdout@@Base+0x36d0>
   161a0:	bl	1171c <abort@plt>
   161a4:	bl	1703c <close_stdout@@Base+0x46a8>
   161a8:	andeq	r6, r1, r0, asr #3
   161ac:	andeq	r6, r1, r0, ror r1
   161b0:	andeq	r6, r1, ip, lsr #2
   161b4:	andeq	r6, r1, ip, lsl #2
   161b8:	push	{r4, r5, r6, lr}
   161bc:	mov	r5, r0
   161c0:	bl	115fc <__errno_location@plt>
   161c4:	cmp	r5, #0
   161c8:	mov	r1, #48	; 0x30
   161cc:	mov	r4, r0
   161d0:	ldr	r0, [pc, #24]	; 161f0 <close_stdout@@Base+0x385c>
   161d4:	ldr	r6, [r4]
   161d8:	add	r0, pc, r0
   161dc:	add	r0, r0, #256	; 0x100
   161e0:	movne	r0, r5
   161e4:	bl	16ffc <close_stdout@@Base+0x4668>
   161e8:	str	r6, [r4]
   161ec:	pop	{r4, r5, r6, pc}
   161f0:	andeq	r6, r1, r0, lsr r0
   161f4:	cmp	r0, #0
   161f8:	beq	16204 <close_stdout@@Base+0x3870>
   161fc:	ldr	r0, [r0]
   16200:	bx	lr
   16204:	ldr	r0, [pc, #12]	; 16218 <close_stdout@@Base+0x3884>
   16208:	add	r0, pc, r0
   1620c:	add	r0, r0, #256	; 0x100
   16210:	ldr	r0, [r0]
   16214:	bx	lr
   16218:	andeq	r6, r1, r0
   1621c:	cmp	r0, #0
   16220:	beq	1622c <close_stdout@@Base+0x3898>
   16224:	str	r1, [r0]
   16228:	bx	lr
   1622c:	ldr	r0, [pc, #12]	; 16240 <close_stdout@@Base+0x38ac>
   16230:	add	r0, pc, r0
   16234:	add	r0, r0, #256	; 0x100
   16238:	str	r1, [r0]
   1623c:	bx	lr
   16240:	ldrdeq	r5, [r1], -r8
   16244:	cmp	r0, #0
   16248:	movne	r3, r0
   1624c:	beq	1627c <close_stdout@@Base+0x38e8>
   16250:	lsr	ip, r1, #5
   16254:	and	r1, r1, #31
   16258:	add	r3, r3, ip, lsl #2
   1625c:	ldr	ip, [r3, #8]
   16260:	lsr	r0, ip, r1
   16264:	eor	r2, r0, r2
   16268:	and	r0, r0, #1
   1626c:	and	r2, r2, #1
   16270:	eor	ip, ip, r2, lsl r1
   16274:	str	ip, [r3, #8]
   16278:	bx	lr
   1627c:	ldr	r3, [pc, #8]	; 1628c <close_stdout@@Base+0x38f8>
   16280:	add	r3, pc, r3
   16284:	add	r3, r3, #256	; 0x100
   16288:	b	16250 <close_stdout@@Base+0x38bc>
   1628c:	andeq	r5, r1, r8, lsl #31
   16290:	subs	r3, r0, #0
   16294:	beq	162a4 <close_stdout@@Base+0x3910>
   16298:	ldr	r0, [r3, #4]
   1629c:	str	r1, [r3, #4]
   162a0:	bx	lr
   162a4:	ldr	r3, [pc, #8]	; 162b4 <close_stdout@@Base+0x3920>
   162a8:	add	r3, pc, r3
   162ac:	add	r3, r3, #256	; 0x100
   162b0:	b	16298 <close_stdout@@Base+0x3904>
   162b4:	andeq	r5, r1, r0, ror #30
   162b8:	cmp	r0, #0
   162bc:	push	{r3, lr}
   162c0:	beq	162e4 <close_stdout@@Base+0x3950>
   162c4:	cmp	r2, #0
   162c8:	cmpne	r1, #0
   162cc:	mov	r3, #8
   162d0:	strne	r1, [r0, #40]	; 0x28
   162d4:	str	r3, [r0]
   162d8:	strne	r2, [r0, #44]	; 0x2c
   162dc:	popne	{r3, pc}
   162e0:	bl	1171c <abort@plt>
   162e4:	ldr	r0, [pc, #8]	; 162f4 <close_stdout@@Base+0x3960>
   162e8:	add	r0, pc, r0
   162ec:	add	r0, r0, #256	; 0x100
   162f0:	b	162c4 <close_stdout@@Base+0x3930>
   162f4:	andeq	r5, r1, r0, lsr #30
   162f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   162fc:	sub	sp, sp, #24
   16300:	mov	r7, r0
   16304:	mov	sl, r1
   16308:	ldr	r4, [sp, #56]	; 0x38
   1630c:	mov	r9, r2
   16310:	mov	r8, r3
   16314:	cmp	r4, #0
   16318:	beq	1636c <close_stdout@@Base+0x39d8>
   1631c:	bl	115fc <__errno_location@plt>
   16320:	ldr	r3, [r4]
   16324:	add	lr, r4, #8
   16328:	mov	r1, sl
   1632c:	mov	r2, r9
   16330:	ldr	r6, [r0]
   16334:	mov	r5, r0
   16338:	str	r3, [sp]
   1633c:	mov	r0, r7
   16340:	ldr	ip, [r4, #4]
   16344:	mov	r3, r8
   16348:	stmib	sp, {ip, lr}
   1634c:	ldr	ip, [r4, #40]	; 0x28
   16350:	str	ip, [sp, #12]
   16354:	ldr	ip, [r4, #44]	; 0x2c
   16358:	str	ip, [sp, #16]
   1635c:	bl	152c0 <close_stdout@@Base+0x292c>
   16360:	str	r6, [r5]
   16364:	add	sp, sp, #24
   16368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1636c:	ldr	r4, [pc, #8]	; 1637c <close_stdout@@Base+0x39e8>
   16370:	add	r4, pc, r4
   16374:	add	r4, r4, #256	; 0x100
   16378:	b	1631c <close_stdout@@Base+0x3988>
   1637c:	muleq	r1, r8, lr
   16380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16384:	subs	r4, r3, #0
   16388:	sub	sp, sp, #36	; 0x24
   1638c:	mov	r7, r0
   16390:	mov	r6, r1
   16394:	mov	r5, r2
   16398:	beq	16454 <close_stdout@@Base+0x3ac0>
   1639c:	bl	115fc <__errno_location@plt>
   163a0:	ldr	r3, [r4]
   163a4:	ldr	sl, [r4, #4]
   163a8:	add	r9, r4, #8
   163ac:	mov	r8, r0
   163b0:	mov	r0, #0
   163b4:	ldr	r2, [r8]
   163b8:	cmp	r5, r0
   163bc:	orreq	sl, sl, #1
   163c0:	str	r9, [sp, #8]
   163c4:	mov	r1, r0
   163c8:	stm	sp, {r3, sl}
   163cc:	mov	r3, r6
   163d0:	ldr	ip, [r4, #40]	; 0x28
   163d4:	str	r2, [sp, #28]
   163d8:	mov	r2, r7
   163dc:	str	ip, [sp, #12]
   163e0:	ldr	ip, [r4, #44]	; 0x2c
   163e4:	str	ip, [sp, #16]
   163e8:	bl	152c0 <close_stdout@@Base+0x292c>
   163ec:	add	r1, r0, #1
   163f0:	mov	fp, r0
   163f4:	str	r1, [sp, #24]
   163f8:	mov	r0, r1
   163fc:	bl	16e28 <close_stdout@@Base+0x4494>
   16400:	ldr	lr, [r4]
   16404:	str	sl, [sp, #4]
   16408:	mov	r3, r6
   1640c:	str	r9, [sp, #8]
   16410:	mov	r2, r7
   16414:	str	lr, [sp]
   16418:	ldr	lr, [r4, #40]	; 0x28
   1641c:	ldr	r1, [sp, #24]
   16420:	str	lr, [sp, #12]
   16424:	ldr	lr, [r4, #44]	; 0x2c
   16428:	str	lr, [sp, #16]
   1642c:	str	r0, [sp, #24]
   16430:	bl	152c0 <close_stdout@@Base+0x292c>
   16434:	ldr	r3, [sp, #28]
   16438:	cmp	r5, #0
   1643c:	str	r3, [r8]
   16440:	ldr	ip, [sp, #24]
   16444:	strne	fp, [r5]
   16448:	mov	r0, ip
   1644c:	add	sp, sp, #36	; 0x24
   16450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16454:	ldr	r4, [pc, #8]	; 16464 <close_stdout@@Base+0x3ad0>
   16458:	add	r4, pc, r4
   1645c:	add	r4, r4, #256	; 0x100
   16460:	b	1639c <close_stdout@@Base+0x3a08>
   16464:			; <UNDEFINED> instruction: 0x00015db0
   16468:	mov	r3, r2
   1646c:	mov	r2, #0
   16470:	b	16380 <close_stdout@@Base+0x39ec>
   16474:	ldr	r2, [pc, #152]	; 16514 <close_stdout@@Base+0x3b80>
   16478:	push	{r3, r4, r5, r6, r7, lr}
   1647c:	add	r2, pc, r2
   16480:	ldr	r3, [pc, #144]	; 16518 <close_stdout@@Base+0x3b84>
   16484:	ldr	r6, [r2]
   16488:	add	r3, pc, r3
   1648c:	cmp	r6, #1
   16490:	ldr	r7, [r3]
   16494:	movhi	r4, #1
   16498:	movhi	r5, r7
   1649c:	bls	164b8 <close_stdout@@Base+0x3b24>
   164a0:	ldr	r0, [r5, #12]
   164a4:	add	r4, r4, #1
   164a8:	bl	113f8 <free@plt>
   164ac:	cmp	r4, r6
   164b0:	add	r5, r5, #8
   164b4:	bne	164a0 <close_stdout@@Base+0x3b0c>
   164b8:	ldr	r4, [pc, #92]	; 1651c <close_stdout@@Base+0x3b88>
   164bc:	ldr	r0, [r7, #4]
   164c0:	add	r4, pc, r4
   164c4:	cmp	r0, r4
   164c8:	beq	164e0 <close_stdout@@Base+0x3b4c>
   164cc:	bl	113f8 <free@plt>
   164d0:	ldr	r3, [pc, #72]	; 16520 <close_stdout@@Base+0x3b8c>
   164d4:	mov	r2, #256	; 0x100
   164d8:	add	r3, pc, r3
   164dc:	stmib	r3, {r2, r4}
   164e0:	ldr	r4, [pc, #60]	; 16524 <close_stdout@@Base+0x3b90>
   164e4:	add	r4, pc, r4
   164e8:	add	r5, r4, #4
   164ec:	cmp	r7, r5
   164f0:	beq	16500 <close_stdout@@Base+0x3b6c>
   164f4:	mov	r0, r7
   164f8:	bl	113f8 <free@plt>
   164fc:	str	r5, [r4]
   16500:	ldr	r3, [pc, #32]	; 16528 <close_stdout@@Base+0x3b94>
   16504:	mov	r2, #1
   16508:	add	r3, pc, r3
   1650c:	str	r2, [r3]
   16510:	pop	{r3, r4, r5, r6, r7, pc}
   16514:	andeq	r5, r1, ip, lsl sp
   16518:	andeq	r5, r1, r4, asr #26
   1651c:	andeq	r5, r1, r8, asr #26
   16520:	strdeq	r5, [r1], -r4
   16524:	andeq	r5, r1, r8, ror #25
   16528:	muleq	r1, r0, ip
   1652c:	ldr	r3, [pc, #12]	; 16540 <close_stdout@@Base+0x3bac>
   16530:	mvn	r2, #0
   16534:	add	r3, pc, r3
   16538:	add	r3, r3, #256	; 0x100
   1653c:	b	15fe8 <close_stdout@@Base+0x3654>
   16540:	ldrdeq	r5, [r1], -r4
   16544:	ldr	r3, [pc, #8]	; 16554 <close_stdout@@Base+0x3bc0>
   16548:	add	r3, pc, r3
   1654c:	add	r3, r3, #256	; 0x100
   16550:	b	15fe8 <close_stdout@@Base+0x3654>
   16554:	andeq	r5, r1, r0, asr #25
   16558:	mov	r1, r0
   1655c:	mov	r0, #0
   16560:	b	1652c <close_stdout@@Base+0x3b98>
   16564:	mov	r2, r1
   16568:	mov	r1, r0
   1656c:	mov	r0, #0
   16570:	b	16544 <close_stdout@@Base+0x3bb0>
   16574:	ldr	r3, [pc, #92]	; 165d8 <close_stdout@@Base+0x3c44>
   16578:	ldr	ip, [pc, #92]	; 165dc <close_stdout@@Base+0x3c48>
   1657c:	add	r3, pc, r3
   16580:	push	{r4, r5, r6, r7, lr}
   16584:	sub	sp, sp, #60	; 0x3c
   16588:	ldr	r4, [r3, ip]
   1658c:	add	r5, sp, #4
   16590:	mov	r7, r2
   16594:	mov	r6, r0
   16598:	mov	r0, r5
   1659c:	ldr	r3, [r4]
   165a0:	str	r3, [sp, #52]	; 0x34
   165a4:	bl	15108 <close_stdout@@Base+0x2774>
   165a8:	mov	r3, r5
   165ac:	mvn	r2, #0
   165b0:	mov	r0, r6
   165b4:	mov	r1, r7
   165b8:	bl	15fe8 <close_stdout@@Base+0x3654>
   165bc:	ldr	r2, [sp, #52]	; 0x34
   165c0:	ldr	r3, [r4]
   165c4:	cmp	r2, r3
   165c8:	bne	165d4 <close_stdout@@Base+0x3c40>
   165cc:	add	sp, sp, #60	; 0x3c
   165d0:	pop	{r4, r5, r6, r7, pc}
   165d4:	bl	11458 <__stack_chk_fail@plt>
   165d8:	andeq	r5, r1, ip, ror sl
   165dc:	andeq	r0, r0, r4, asr r1
   165e0:	ldr	ip, [pc, #96]	; 16648 <close_stdout@@Base+0x3cb4>
   165e4:	push	{r4, r5, r6, r7, r8, lr}
   165e8:	add	ip, pc, ip
   165ec:	ldr	lr, [pc, #88]	; 1664c <close_stdout@@Base+0x3cb8>
   165f0:	sub	sp, sp, #56	; 0x38
   165f4:	mov	r8, r3
   165f8:	add	r5, sp, #4
   165fc:	mov	r7, r2
   16600:	mov	r6, r0
   16604:	ldr	r4, [ip, lr]
   16608:	mov	r0, r5
   1660c:	ldr	r3, [r4]
   16610:	str	r3, [sp, #52]	; 0x34
   16614:	bl	15108 <close_stdout@@Base+0x2774>
   16618:	mov	r2, r8
   1661c:	mov	r3, r5
   16620:	mov	r0, r6
   16624:	mov	r1, r7
   16628:	bl	15fe8 <close_stdout@@Base+0x3654>
   1662c:	ldr	r2, [sp, #52]	; 0x34
   16630:	ldr	r3, [r4]
   16634:	cmp	r2, r3
   16638:	bne	16644 <close_stdout@@Base+0x3cb0>
   1663c:	add	sp, sp, #56	; 0x38
   16640:	pop	{r4, r5, r6, r7, r8, pc}
   16644:	bl	11458 <__stack_chk_fail@plt>
   16648:	andeq	r5, r1, r0, lsl sl
   1664c:	andeq	r0, r0, r4, asr r1
   16650:	mov	r2, r1
   16654:	mov	r1, r0
   16658:	mov	r0, #0
   1665c:	b	16574 <close_stdout@@Base+0x3be0>
   16660:	mov	ip, r1
   16664:	mov	r3, r2
   16668:	mov	r1, r0
   1666c:	mov	r2, ip
   16670:	mov	r0, #0
   16674:	b	165e0 <close_stdout@@Base+0x3c4c>
   16678:	push	{r4, r5, r6, r7, r8, lr}
   1667c:	mov	r5, r2
   16680:	ldr	lr, [pc, #136]	; 16710 <close_stdout@@Base+0x3d7c>
   16684:	mov	r7, r0
   16688:	mov	r6, r1
   1668c:	ldr	r4, [pc, #128]	; 16714 <close_stdout@@Base+0x3d80>
   16690:	add	lr, pc, lr
   16694:	sub	sp, sp, #56	; 0x38
   16698:	add	lr, lr, #256	; 0x100
   1669c:	ldr	r8, [pc, #116]	; 16718 <close_stdout@@Base+0x3d84>
   166a0:	add	r4, pc, r4
   166a4:	add	ip, sp, #4
   166a8:	ldm	lr!, {r0, r1, r2, r3}
   166ac:	ldr	r4, [r4, r8]
   166b0:	stmia	ip!, {r0, r1, r2, r3}
   166b4:	ldm	lr!, {r0, r1, r2, r3}
   166b8:	ldr	r8, [r4]
   166bc:	stmia	ip!, {r0, r1, r2, r3}
   166c0:	ldm	lr, {r0, r1, r2, r3}
   166c4:	str	r8, [sp, #52]	; 0x34
   166c8:	stm	ip, {r0, r1, r2, r3}
   166cc:	mov	r1, r5
   166d0:	add	r5, sp, #4
   166d4:	mov	r2, #1
   166d8:	mov	r0, r5
   166dc:	bl	16244 <close_stdout@@Base+0x38b0>
   166e0:	mov	r2, r6
   166e4:	mov	r3, r5
   166e8:	mov	r1, r7
   166ec:	mov	r0, #0
   166f0:	bl	15fe8 <close_stdout@@Base+0x3654>
   166f4:	ldr	r2, [sp, #52]	; 0x34
   166f8:	ldr	r3, [r4]
   166fc:	cmp	r2, r3
   16700:	bne	1670c <close_stdout@@Base+0x3d78>
   16704:	add	sp, sp, #56	; 0x38
   16708:	pop	{r4, r5, r6, r7, r8, pc}
   1670c:	bl	11458 <__stack_chk_fail@plt>
   16710:	andeq	r5, r1, r8, ror fp
   16714:	andeq	r5, r1, r8, asr r9
   16718:	andeq	r0, r0, r4, asr r1
   1671c:	mov	r2, r1
   16720:	mvn	r1, #0
   16724:	b	16678 <close_stdout@@Base+0x3ce4>
   16728:	mov	r1, #58	; 0x3a
   1672c:	b	1671c <close_stdout@@Base+0x3d88>
   16730:	mov	r2, #58	; 0x3a
   16734:	b	16678 <close_stdout@@Base+0x3ce4>
   16738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1673c:	mov	r5, r2
   16740:	ldr	lr, [pc, #144]	; 167d8 <close_stdout@@Base+0x3e44>
   16744:	mov	r8, r0
   16748:	mov	r9, r1
   1674c:	mov	r7, r3
   16750:	add	lr, pc, lr
   16754:	ldr	r4, [pc, #128]	; 167dc <close_stdout@@Base+0x3e48>
   16758:	add	lr, lr, #256	; 0x100
   1675c:	sub	sp, sp, #56	; 0x38
   16760:	ldr	sl, [pc, #120]	; 167e0 <close_stdout@@Base+0x3e4c>
   16764:	add	r4, pc, r4
   16768:	ldm	lr!, {r0, r1, r2, r3}
   1676c:	add	ip, sp, #4
   16770:	ldr	r4, [r4, sl]
   16774:	ldr	r6, [sp, #88]	; 0x58
   16778:	stmia	ip!, {r0, r1, r2, r3}
   1677c:	ldm	lr!, {r0, r1, r2, r3}
   16780:	ldr	sl, [r4]
   16784:	stmia	ip!, {r0, r1, r2, r3}
   16788:	ldm	lr, {r0, r1, r2, r3}
   1678c:	str	sl, [sp, #52]	; 0x34
   16790:	stm	ip, {r0, r1, r2, r3}
   16794:	mov	r2, r5
   16798:	add	r5, sp, #4
   1679c:	mov	r1, r9
   167a0:	mov	r0, r5
   167a4:	bl	162b8 <close_stdout@@Base+0x3924>
   167a8:	mov	r2, r6
   167ac:	mov	r3, r5
   167b0:	mov	r0, r8
   167b4:	mov	r1, r7
   167b8:	bl	15fe8 <close_stdout@@Base+0x3654>
   167bc:	ldr	r2, [sp, #52]	; 0x34
   167c0:	ldr	r3, [r4]
   167c4:	cmp	r2, r3
   167c8:	bne	167d4 <close_stdout@@Base+0x3e40>
   167cc:	add	sp, sp, #56	; 0x38
   167d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   167d4:	bl	11458 <__stack_chk_fail@plt>
   167d8:			; <UNDEFINED> instruction: 0x00015ab8
   167dc:	muleq	r1, r4, r8
   167e0:	andeq	r0, r0, r4, asr r1
   167e4:	push	{lr}		; (str lr, [sp, #-4]!)
   167e8:	sub	sp, sp, #12
   167ec:	mvn	ip, #0
   167f0:	str	ip, [sp]
   167f4:	bl	16738 <close_stdout@@Base+0x3da4>
   167f8:	add	sp, sp, #12
   167fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16800:	mov	ip, r1
   16804:	mov	r3, r2
   16808:	mov	r1, r0
   1680c:	mov	r2, ip
   16810:	mov	r0, #0
   16814:	b	167e4 <close_stdout@@Base+0x3e50>
   16818:	push	{lr}		; (str lr, [sp, #-4]!)
   1681c:	sub	sp, sp, #12
   16820:	mov	lr, r1
   16824:	mov	ip, r2
   16828:	mov	r1, r0
   1682c:	str	r3, [sp]
   16830:	mov	r2, lr
   16834:	mov	r3, ip
   16838:	mov	r0, #0
   1683c:	bl	16738 <close_stdout@@Base+0x3da4>
   16840:	add	sp, sp, #12
   16844:	pop	{pc}		; (ldr pc, [sp], #4)
   16848:	ldr	r3, [pc, #12]	; 1685c <close_stdout@@Base+0x3ec8>
   1684c:	ldr	ip, [pc, #12]	; 16860 <close_stdout@@Base+0x3ecc>
   16850:	add	r3, pc, r3
   16854:	ldr	r3, [r3, ip]
   16858:	b	15fe8 <close_stdout@@Base+0x3654>
   1685c:	andeq	r5, r1, r8, lsr #15
   16860:	andeq	r0, r0, r0, asr r1
   16864:	mov	r2, r1
   16868:	mov	r1, r0
   1686c:	mov	r0, #0
   16870:	b	16848 <close_stdout@@Base+0x3eb4>
   16874:	mvn	r2, #0
   16878:	b	16848 <close_stdout@@Base+0x3eb4>
   1687c:	mov	r1, r0
   16880:	mov	r0, #0
   16884:	b	16874 <close_stdout@@Base+0x3ee0>
   16888:	push	{r4, r5, r6, r7, lr}
   1688c:	cmp	r1, #0
   16890:	sub	sp, sp, #36	; 0x24
   16894:	ldr	r7, [pc, #896]	; 16c1c <close_stdout@@Base+0x4288>
   16898:	mov	ip, r3
   1689c:	mov	r5, r0
   168a0:	add	r7, pc, r7
   168a4:	ldr	r4, [sp, #56]	; 0x38
   168a8:	ldr	r6, [sp, #60]	; 0x3c
   168ac:	beq	16bf0 <close_stdout@@Base+0x425c>
   168b0:	str	r2, [sp]
   168b4:	mov	r3, r1
   168b8:	ldr	r2, [pc, #864]	; 16c20 <close_stdout@@Base+0x428c>
   168bc:	mov	r1, #1
   168c0:	str	ip, [sp, #4]
   168c4:	add	r2, pc, r2
   168c8:	bl	1165c <__fprintf_chk@plt>
   168cc:	ldr	r1, [pc, #848]	; 16c24 <close_stdout@@Base+0x4290>
   168d0:	mov	r2, #5
   168d4:	mov	r0, #0
   168d8:	add	r1, pc, r1
   168dc:	bl	1144c <dcgettext@plt>
   168e0:	ldr	r2, [pc, #832]	; 16c28 <close_stdout@@Base+0x4294>
   168e4:	movw	ip, #2013	; 0x7dd
   168e8:	mov	r1, #1
   168ec:	ldr	r2, [r7, r2]
   168f0:	str	ip, [sp]
   168f4:	mov	r3, r0
   168f8:	mov	r0, r5
   168fc:	bl	1165c <__fprintf_chk@plt>
   16900:	ldr	r1, [pc, #804]	; 16c2c <close_stdout@@Base+0x4298>
   16904:	mov	r0, #0
   16908:	mov	r2, #5
   1690c:	add	r1, pc, r1
   16910:	bl	1144c <dcgettext@plt>
   16914:	mov	r1, r5
   16918:	bl	113a4 <fputs_unlocked@plt>
   1691c:	cmp	r6, #9
   16920:	addls	pc, pc, r6, lsl #2
   16924:	b	16c0c <close_stdout@@Base+0x4278>
   16928:	b	169bc <close_stdout@@Base+0x4028>
   1692c:	b	169c0 <close_stdout@@Base+0x402c>
   16930:	b	169f0 <close_stdout@@Base+0x405c>
   16934:	b	16a24 <close_stdout@@Base+0x4090>
   16938:	b	16a60 <close_stdout@@Base+0x40cc>
   1693c:	b	16aa0 <close_stdout@@Base+0x410c>
   16940:	b	16ae8 <close_stdout@@Base+0x4154>
   16944:	b	16b38 <close_stdout@@Base+0x41a4>
   16948:	b	16b90 <close_stdout@@Base+0x41fc>
   1694c:	b	16950 <close_stdout@@Base+0x3fbc>
   16950:	ldr	r1, [pc, #728]	; 16c30 <close_stdout@@Base+0x429c>
   16954:	mov	r0, #0
   16958:	add	r1, pc, r1
   1695c:	mov	r2, #5
   16960:	bl	1144c <dcgettext@plt>
   16964:	ldm	r4, {r3, ip}
   16968:	mov	r1, #1
   1696c:	str	ip, [sp]
   16970:	ldr	ip, [r4, #8]
   16974:	str	ip, [sp, #4]
   16978:	ldr	ip, [r4, #12]
   1697c:	str	ip, [sp, #8]
   16980:	ldr	ip, [r4, #16]
   16984:	str	ip, [sp, #12]
   16988:	ldr	ip, [r4, #20]
   1698c:	str	ip, [sp, #16]
   16990:	ldr	ip, [r4, #24]
   16994:	str	ip, [sp, #20]
   16998:	ldr	ip, [r4, #28]
   1699c:	str	ip, [sp, #24]
   169a0:	ldr	ip, [r4, #32]
   169a4:	str	ip, [sp, #28]
   169a8:	mov	r2, r0
   169ac:	mov	r0, r5
   169b0:	bl	1165c <__fprintf_chk@plt>
   169b4:	add	sp, sp, #36	; 0x24
   169b8:	pop	{r4, r5, r6, r7, pc}
   169bc:	bl	1171c <abort@plt>
   169c0:	ldr	r1, [pc, #620]	; 16c34 <close_stdout@@Base+0x42a0>
   169c4:	mov	r2, #5
   169c8:	mov	r0, #0
   169cc:	add	r1, pc, r1
   169d0:	bl	1144c <dcgettext@plt>
   169d4:	ldr	r3, [r4]
   169d8:	mov	r1, #1
   169dc:	mov	r2, r0
   169e0:	mov	r0, r5
   169e4:	add	sp, sp, #36	; 0x24
   169e8:	pop	{r4, r5, r6, r7, lr}
   169ec:	b	1165c <__fprintf_chk@plt>
   169f0:	ldr	r1, [pc, #576]	; 16c38 <close_stdout@@Base+0x42a4>
   169f4:	mov	r2, #5
   169f8:	mov	r0, #0
   169fc:	add	r1, pc, r1
   16a00:	bl	1144c <dcgettext@plt>
   16a04:	ldm	r4, {r3, ip}
   16a08:	mov	r1, #1
   16a0c:	str	ip, [sp, #56]	; 0x38
   16a10:	mov	r2, r0
   16a14:	mov	r0, r5
   16a18:	add	sp, sp, #36	; 0x24
   16a1c:	pop	{r4, r5, r6, r7, lr}
   16a20:	b	1165c <__fprintf_chk@plt>
   16a24:	ldr	r1, [pc, #528]	; 16c3c <close_stdout@@Base+0x42a8>
   16a28:	mov	r2, #5
   16a2c:	mov	r0, #0
   16a30:	add	r1, pc, r1
   16a34:	bl	1144c <dcgettext@plt>
   16a38:	ldm	r4, {r3, ip}
   16a3c:	mov	r1, #1
   16a40:	str	ip, [sp, #56]	; 0x38
   16a44:	ldr	ip, [r4, #8]
   16a48:	str	ip, [sp, #60]	; 0x3c
   16a4c:	mov	r2, r0
   16a50:	mov	r0, r5
   16a54:	add	sp, sp, #36	; 0x24
   16a58:	pop	{r4, r5, r6, r7, lr}
   16a5c:	b	1165c <__fprintf_chk@plt>
   16a60:	ldr	r1, [pc, #472]	; 16c40 <close_stdout@@Base+0x42ac>
   16a64:	mov	r2, #5
   16a68:	mov	r0, #0
   16a6c:	add	r1, pc, r1
   16a70:	bl	1144c <dcgettext@plt>
   16a74:	ldm	r4, {r3, ip}
   16a78:	mov	r1, #1
   16a7c:	str	ip, [sp]
   16a80:	ldr	ip, [r4, #8]
   16a84:	str	ip, [sp, #4]
   16a88:	ldr	ip, [r4, #12]
   16a8c:	str	ip, [sp, #8]
   16a90:	mov	r2, r0
   16a94:	mov	r0, r5
   16a98:	bl	1165c <__fprintf_chk@plt>
   16a9c:	b	169b4 <close_stdout@@Base+0x4020>
   16aa0:	ldr	r1, [pc, #412]	; 16c44 <close_stdout@@Base+0x42b0>
   16aa4:	mov	r2, #5
   16aa8:	mov	r0, #0
   16aac:	add	r1, pc, r1
   16ab0:	bl	1144c <dcgettext@plt>
   16ab4:	ldm	r4, {r3, ip}
   16ab8:	mov	r1, #1
   16abc:	str	ip, [sp]
   16ac0:	ldr	ip, [r4, #8]
   16ac4:	str	ip, [sp, #4]
   16ac8:	ldr	ip, [r4, #12]
   16acc:	str	ip, [sp, #8]
   16ad0:	ldr	ip, [r4, #16]
   16ad4:	str	ip, [sp, #12]
   16ad8:	mov	r2, r0
   16adc:	mov	r0, r5
   16ae0:	bl	1165c <__fprintf_chk@plt>
   16ae4:	b	169b4 <close_stdout@@Base+0x4020>
   16ae8:	ldr	r1, [pc, #344]	; 16c48 <close_stdout@@Base+0x42b4>
   16aec:	mov	r2, #5
   16af0:	mov	r0, #0
   16af4:	add	r1, pc, r1
   16af8:	bl	1144c <dcgettext@plt>
   16afc:	ldm	r4, {r3, ip}
   16b00:	mov	r1, #1
   16b04:	str	ip, [sp]
   16b08:	ldr	ip, [r4, #8]
   16b0c:	str	ip, [sp, #4]
   16b10:	ldr	ip, [r4, #12]
   16b14:	str	ip, [sp, #8]
   16b18:	ldr	ip, [r4, #16]
   16b1c:	str	ip, [sp, #12]
   16b20:	ldr	ip, [r4, #20]
   16b24:	str	ip, [sp, #16]
   16b28:	mov	r2, r0
   16b2c:	mov	r0, r5
   16b30:	bl	1165c <__fprintf_chk@plt>
   16b34:	b	169b4 <close_stdout@@Base+0x4020>
   16b38:	ldr	r1, [pc, #268]	; 16c4c <close_stdout@@Base+0x42b8>
   16b3c:	mov	r2, #5
   16b40:	mov	r0, #0
   16b44:	add	r1, pc, r1
   16b48:	bl	1144c <dcgettext@plt>
   16b4c:	ldm	r4, {r3, ip}
   16b50:	mov	r1, #1
   16b54:	str	ip, [sp]
   16b58:	ldr	ip, [r4, #8]
   16b5c:	str	ip, [sp, #4]
   16b60:	ldr	ip, [r4, #12]
   16b64:	str	ip, [sp, #8]
   16b68:	ldr	ip, [r4, #16]
   16b6c:	str	ip, [sp, #12]
   16b70:	ldr	ip, [r4, #20]
   16b74:	str	ip, [sp, #16]
   16b78:	ldr	ip, [r4, #24]
   16b7c:	str	ip, [sp, #20]
   16b80:	mov	r2, r0
   16b84:	mov	r0, r5
   16b88:	bl	1165c <__fprintf_chk@plt>
   16b8c:	b	169b4 <close_stdout@@Base+0x4020>
   16b90:	ldr	r1, [pc, #184]	; 16c50 <close_stdout@@Base+0x42bc>
   16b94:	mov	r2, #5
   16b98:	mov	r0, #0
   16b9c:	add	r1, pc, r1
   16ba0:	bl	1144c <dcgettext@plt>
   16ba4:	ldm	r4, {r3, ip}
   16ba8:	mov	r1, #1
   16bac:	str	ip, [sp]
   16bb0:	ldr	ip, [r4, #8]
   16bb4:	str	ip, [sp, #4]
   16bb8:	ldr	ip, [r4, #12]
   16bbc:	str	ip, [sp, #8]
   16bc0:	ldr	ip, [r4, #16]
   16bc4:	str	ip, [sp, #12]
   16bc8:	ldr	ip, [r4, #20]
   16bcc:	str	ip, [sp, #16]
   16bd0:	ldr	ip, [r4, #24]
   16bd4:	str	ip, [sp, #20]
   16bd8:	ldr	ip, [r4, #28]
   16bdc:	str	ip, [sp, #24]
   16be0:	mov	r2, r0
   16be4:	mov	r0, r5
   16be8:	bl	1165c <__fprintf_chk@plt>
   16bec:	b	169b4 <close_stdout@@Base+0x4020>
   16bf0:	str	r3, [sp]
   16bf4:	mov	r3, r2
   16bf8:	ldr	r2, [pc, #84]	; 16c54 <close_stdout@@Base+0x42c0>
   16bfc:	mov	r1, #1
   16c00:	add	r2, pc, r2
   16c04:	bl	1165c <__fprintf_chk@plt>
   16c08:	b	168cc <close_stdout@@Base+0x3f38>
   16c0c:	ldr	r1, [pc, #68]	; 16c58 <close_stdout@@Base+0x42c4>
   16c10:	mov	r0, #0
   16c14:	add	r1, pc, r1
   16c18:	b	1695c <close_stdout@@Base+0x3fc8>
   16c1c:	andeq	r5, r1, r8, asr r7
   16c20:	andeq	r3, r0, ip, ror #14
   16c24:	andeq	r3, r0, ip, ror #14
   16c28:	andeq	r0, r0, r4, lsl #3
   16c2c:	andeq	r3, r0, ip, lsr r7
   16c30:	andeq	r3, r0, r8, asr #17
   16c34:	andeq	r3, r0, r8, asr #14
   16c38:	andeq	r3, r0, r8, lsr #14
   16c3c:	andeq	r3, r0, ip, lsl #14
   16c40:	andeq	r3, r0, ip, ror #13
   16c44:	andeq	r3, r0, ip, asr #13
   16c48:	andeq	r3, r0, r8, lsr #13
   16c4c:	andeq	r3, r0, r0, lsl #13
   16c50:	andeq	r3, r0, r4, asr r6
   16c54:	andeq	r3, r0, ip, lsr r4
   16c58:	andeq	r3, r0, r0, asr #12
   16c5c:	push	{r4, r5, lr}
   16c60:	sub	sp, sp, #12
   16c64:	ldr	r5, [sp, #24]
   16c68:	ldr	ip, [r5]
   16c6c:	cmp	ip, #0
   16c70:	beq	16c8c <close_stdout@@Base+0x42f8>
   16c74:	mov	lr, r5
   16c78:	mov	ip, #0
   16c7c:	ldr	r4, [lr, #4]!
   16c80:	add	ip, ip, #1
   16c84:	cmp	r4, #0
   16c88:	bne	16c7c <close_stdout@@Base+0x42e8>
   16c8c:	stm	sp, {r5, ip}
   16c90:	bl	16888 <close_stdout@@Base+0x3ef4>
   16c94:	add	sp, sp, #12
   16c98:	pop	{r4, r5, pc}
   16c9c:	push	{r4, r5, r6, r7, lr}
   16ca0:	sub	sp, sp, #60	; 0x3c
   16ca4:	ldr	r4, [pc, #100]	; 16d10 <close_stdout@@Base+0x437c>
   16ca8:	mov	ip, #0
   16cac:	ldr	r5, [pc, #96]	; 16d14 <close_stdout@@Base+0x4380>
   16cb0:	mov	lr, ip
   16cb4:	add	r4, pc, r4
   16cb8:	ldr	r6, [sp, #80]	; 0x50
   16cbc:	ldr	r7, [r4, r5]
   16cc0:	add	r5, sp, #12
   16cc4:	ldr	r4, [r7]
   16cc8:	str	r4, [sp, #52]	; 0x34
   16ccc:	ldr	r4, [r6, ip]
   16cd0:	cmp	r4, #0
   16cd4:	str	r4, [r5, ip]
   16cd8:	beq	16cec <close_stdout@@Base+0x4358>
   16cdc:	add	lr, lr, #1
   16ce0:	add	ip, ip, #4
   16ce4:	cmp	lr, #10
   16ce8:	bne	16ccc <close_stdout@@Base+0x4338>
   16cec:	stm	sp, {r5, lr}
   16cf0:	bl	16888 <close_stdout@@Base+0x3ef4>
   16cf4:	ldr	r2, [sp, #52]	; 0x34
   16cf8:	ldr	r3, [r7]
   16cfc:	cmp	r2, r3
   16d00:	bne	16d0c <close_stdout@@Base+0x4378>
   16d04:	add	sp, sp, #60	; 0x3c
   16d08:	pop	{r4, r5, r6, r7, pc}
   16d0c:	bl	11458 <__stack_chk_fail@plt>
   16d10:	andeq	r5, r1, r4, asr #6
   16d14:	andeq	r0, r0, r4, asr r1
   16d18:	push	{r3}		; (str r3, [sp, #-4]!)
   16d1c:	push	{r4, lr}
   16d20:	sub	sp, sp, #20
   16d24:	ldr	lr, [pc, #72]	; 16d74 <close_stdout@@Base+0x43e0>
   16d28:	add	ip, sp, #32
   16d2c:	ldr	r4, [pc, #68]	; 16d78 <close_stdout@@Base+0x43e4>
   16d30:	add	lr, pc, lr
   16d34:	ldr	r3, [sp, #28]
   16d38:	ldr	r4, [lr, r4]
   16d3c:	str	ip, [sp]
   16d40:	str	ip, [sp, #8]
   16d44:	ldr	ip, [r4]
   16d48:	str	ip, [sp, #12]
   16d4c:	bl	16c9c <close_stdout@@Base+0x4308>
   16d50:	ldr	r2, [sp, #12]
   16d54:	ldr	r3, [r4]
   16d58:	cmp	r2, r3
   16d5c:	bne	16d70 <close_stdout@@Base+0x43dc>
   16d60:	add	sp, sp, #20
   16d64:	pop	{r4, lr}
   16d68:	add	sp, sp, #4
   16d6c:	bx	lr
   16d70:	bl	11458 <__stack_chk_fail@plt>
   16d74:	andeq	r5, r1, r8, asr #5
   16d78:	andeq	r0, r0, r4, asr r1
   16d7c:	ldr	r1, [pc, #132]	; 16e08 <close_stdout@@Base+0x4474>
   16d80:	mov	r2, #5
   16d84:	push	{r4, lr}
   16d88:	add	r1, pc, r1
   16d8c:	mov	r0, #0
   16d90:	ldr	r4, [pc, #116]	; 16e0c <close_stdout@@Base+0x4478>
   16d94:	bl	1144c <dcgettext@plt>
   16d98:	ldr	r2, [pc, #112]	; 16e10 <close_stdout@@Base+0x447c>
   16d9c:	add	r4, pc, r4
   16da0:	add	r2, pc, r2
   16da4:	mov	r1, r0
   16da8:	mov	r0, #1
   16dac:	bl	11644 <__printf_chk@plt>
   16db0:	ldr	r1, [pc, #92]	; 16e14 <close_stdout@@Base+0x4480>
   16db4:	mov	r2, #5
   16db8:	mov	r0, #0
   16dbc:	add	r1, pc, r1
   16dc0:	bl	1144c <dcgettext@plt>
   16dc4:	ldr	r2, [pc, #76]	; 16e18 <close_stdout@@Base+0x4484>
   16dc8:	ldr	r3, [pc, #76]	; 16e1c <close_stdout@@Base+0x4488>
   16dcc:	add	r2, pc, r2
   16dd0:	add	r3, pc, r3
   16dd4:	mov	r1, r0
   16dd8:	mov	r0, #1
   16ddc:	bl	11644 <__printf_chk@plt>
   16de0:	ldr	r1, [pc, #56]	; 16e20 <close_stdout@@Base+0x448c>
   16de4:	mov	r0, #0
   16de8:	mov	r2, #5
   16dec:	add	r1, pc, r1
   16df0:	bl	1144c <dcgettext@plt>
   16df4:	ldr	r3, [pc, #40]	; 16e24 <close_stdout@@Base+0x4490>
   16df8:	ldr	r3, [r4, r3]
   16dfc:	pop	{r4, lr}
   16e00:	ldr	r1, [r3]
   16e04:	b	113a4 <fputs_unlocked@plt>
   16e08:	andeq	r3, r0, r8, lsl #10
   16e0c:	andeq	r5, r1, ip, asr r2
   16e10:	andeq	r3, r0, r8, lsl #10
   16e14:	andeq	r3, r0, r4, lsl #10
   16e18:	andeq	r2, r0, r4, lsr r7
   16e1c:	andeq	r2, r0, r0, asr #14
   16e20:	andeq	r3, r0, r8, ror #9
   16e24:	andeq	r0, r0, r4, ror r1
   16e28:	push	{r4, lr}
   16e2c:	mov	r4, r0
   16e30:	bl	1153c <malloc@plt>
   16e34:	rsbs	r3, r0, #1
   16e38:	movcc	r3, #0
   16e3c:	cmp	r4, #0
   16e40:	moveq	r3, #0
   16e44:	cmp	r3, #0
   16e48:	popeq	{r4, pc}
   16e4c:	bl	1703c <close_stdout@@Base+0x46a8>
   16e50:	push	{r3, r4, r5, lr}
   16e54:	mov	r4, r0
   16e58:	mvn	r0, #0
   16e5c:	mov	r5, r1
   16e60:	bl	18c60 <close_stdout@@Base+0x62cc>
   16e64:	cmp	r0, r4
   16e68:	bcc	16e78 <close_stdout@@Base+0x44e4>
   16e6c:	mul	r0, r4, r5
   16e70:	pop	{r3, r4, r5, lr}
   16e74:	b	16e28 <close_stdout@@Base+0x4494>
   16e78:	bl	1703c <close_stdout@@Base+0x46a8>
   16e7c:	b	16e28 <close_stdout@@Base+0x4494>
   16e80:	rsbs	r3, r1, #1
   16e84:	push	{r4, lr}
   16e88:	movcc	r3, #0
   16e8c:	cmp	r0, #0
   16e90:	mov	r4, r1
   16e94:	moveq	r3, #0
   16e98:	cmp	r3, #0
   16e9c:	bne	16ec0 <close_stdout@@Base+0x452c>
   16ea0:	bl	11470 <realloc@plt>
   16ea4:	rsbs	r3, r0, #1
   16ea8:	movcc	r3, #0
   16eac:	cmp	r4, #0
   16eb0:	moveq	r3, #0
   16eb4:	cmp	r3, #0
   16eb8:	popeq	{r4, pc}
   16ebc:	bl	1703c <close_stdout@@Base+0x46a8>
   16ec0:	bl	113f8 <free@plt>
   16ec4:	mov	r0, #0
   16ec8:	pop	{r4, pc}
   16ecc:	push	{r4, r5, r6, lr}
   16ed0:	mov	r5, r1
   16ed4:	mov	r6, r0
   16ed8:	mov	r1, r2
   16edc:	mvn	r0, #0
   16ee0:	mov	r4, r2
   16ee4:	bl	18c60 <close_stdout@@Base+0x62cc>
   16ee8:	cmp	r0, r5
   16eec:	bcc	16f00 <close_stdout@@Base+0x456c>
   16ef0:	mov	r0, r6
   16ef4:	mul	r1, r5, r4
   16ef8:	pop	{r4, r5, r6, lr}
   16efc:	b	16e80 <close_stdout@@Base+0x44ec>
   16f00:	bl	1703c <close_stdout@@Base+0x46a8>
   16f04:	push	{r3, r4, r5, r6, r7, lr}
   16f08:	subs	r7, r0, #0
   16f0c:	mov	r5, r1
   16f10:	mov	r6, r2
   16f14:	ldr	r4, [r1]
   16f18:	beq	16f50 <close_stdout@@Base+0x45bc>
   16f1c:	movw	r0, #43690	; 0xaaaa
   16f20:	mov	r1, r2
   16f24:	bfi	r0, r0, #16, #16
   16f28:	bl	18c60 <close_stdout@@Base+0x62cc>
   16f2c:	cmp	r4, r0
   16f30:	addcc	r3, r4, #1
   16f34:	addcc	r4, r4, r3, lsr #1
   16f38:	bcs	16f74 <close_stdout@@Base+0x45e0>
   16f3c:	str	r4, [r5]
   16f40:	mov	r0, r7
   16f44:	mul	r1, r6, r4
   16f48:	pop	{r3, r4, r5, r6, r7, lr}
   16f4c:	b	16e80 <close_stdout@@Base+0x44ec>
   16f50:	cmp	r4, #0
   16f54:	bne	16f3c <close_stdout@@Base+0x45a8>
   16f58:	mov	r0, #64	; 0x40
   16f5c:	mov	r1, r2
   16f60:	bl	18c60 <close_stdout@@Base+0x62cc>
   16f64:	cmp	r0, #0
   16f68:	movne	r4, r0
   16f6c:	addeq	r4, r0, #1
   16f70:	b	16f3c <close_stdout@@Base+0x45a8>
   16f74:	bl	1703c <close_stdout@@Base+0x46a8>
   16f78:	cmp	r0, #0
   16f7c:	push	{r3, lr}
   16f80:	ldr	r3, [r1]
   16f84:	beq	16fb0 <close_stdout@@Base+0x461c>
   16f88:	movw	r2, #43689	; 0xaaa9
   16f8c:	movt	r2, #43690	; 0xaaaa
   16f90:	cmp	r3, r2
   16f94:	addls	r2, r3, #1
   16f98:	addls	r3, r3, r2, lsr #1
   16f9c:	bhi	16fc8 <close_stdout@@Base+0x4634>
   16fa0:	str	r3, [r1]
   16fa4:	mov	r1, r3
   16fa8:	pop	{r3, lr}
   16fac:	b	16e80 <close_stdout@@Base+0x44ec>
   16fb0:	cmp	r3, #0
   16fb4:	moveq	r3, #64	; 0x40
   16fb8:	str	r3, [r1]
   16fbc:	mov	r1, r3
   16fc0:	pop	{r3, lr}
   16fc4:	b	16e80 <close_stdout@@Base+0x44ec>
   16fc8:	bl	1703c <close_stdout@@Base+0x46a8>
   16fcc:	push	{r4, lr}
   16fd0:	mov	r4, r0
   16fd4:	bl	16e28 <close_stdout@@Base+0x4494>
   16fd8:	mov	r2, r4
   16fdc:	mov	r1, #0
   16fe0:	pop	{r4, lr}
   16fe4:	b	11620 <memset@plt>
   16fe8:	push	{r3, lr}
   16fec:	bl	11398 <calloc@plt>
   16ff0:	cmp	r0, #0
   16ff4:	popne	{r3, pc}
   16ff8:	bl	1703c <close_stdout@@Base+0x46a8>
   16ffc:	push	{r3, r4, r5, lr}
   17000:	mov	r4, r1
   17004:	mov	r5, r0
   17008:	mov	r0, r1
   1700c:	bl	16e28 <close_stdout@@Base+0x4494>
   17010:	mov	r1, r5
   17014:	mov	r2, r4
   17018:	pop	{r3, r4, r5, lr}
   1701c:	b	1141c <memcpy@plt>
   17020:	push	{r4, lr}
   17024:	mov	r4, r0
   17028:	bl	115a8 <strlen@plt>
   1702c:	add	r1, r0, #1
   17030:	mov	r0, r4
   17034:	pop	{r4, lr}
   17038:	b	16ffc <close_stdout@@Base+0x4668>
   1703c:	ldr	r3, [pc, #64]	; 17084 <close_stdout@@Base+0x46f0>
   17040:	mov	r2, #5
   17044:	ldr	ip, [pc, #60]	; 17088 <close_stdout@@Base+0x46f4>
   17048:	mov	r0, #0
   1704c:	add	r3, pc, r3
   17050:	ldr	r1, [pc, #52]	; 1708c <close_stdout@@Base+0x46f8>
   17054:	push	{r4, lr}
   17058:	add	r1, pc, r1
   1705c:	ldr	r3, [r3, ip]
   17060:	ldr	r4, [r3]
   17064:	bl	1144c <dcgettext@plt>
   17068:	ldr	r2, [pc, #32]	; 17090 <close_stdout@@Base+0x46fc>
   1706c:	mov	r1, #0
   17070:	add	r2, pc, r2
   17074:	mov	r3, r0
   17078:	mov	r0, r4
   1707c:	bl	11518 <error@plt>
   17080:	bl	1171c <abort@plt>
   17084:	andeq	r4, r1, ip, lsr #31
   17088:	andeq	r0, r0, r8, ror r1
   1708c:	andeq	r3, r0, ip, ror #5
   17090:	ldrdeq	r2, [r0], -r0
   17094:	mov	r2, r1
   17098:	mov	r1, #0
   1709c:	b	17c40 <close_stdout@@Base+0x52ac>
   170a0:	ldr	ip, [pc, #572]	; 172e4 <close_stdout@@Base+0x4950>
   170a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170a8:	add	ip, pc, ip
   170ac:	ldr	lr, [pc, #564]	; 172e8 <close_stdout@@Base+0x4954>
   170b0:	sub	sp, sp, #4048	; 0xfd0
   170b4:	mov	r7, r2
   170b8:	mov	r2, ip
   170bc:	sub	sp, sp, #12
   170c0:	mov	sl, r3
   170c4:	ldr	r4, [ip, lr]
   170c8:	bics	r3, sl, #256	; 0x100
   170cc:	mov	r6, r0
   170d0:	mov	r5, r1
   170d4:	ldr	r2, [r4]
   170d8:	str	r2, [sp, #4052]	; 0xfd4
   170dc:	bne	1726c <close_stdout@@Base+0x48d8>
   170e0:	cmn	r0, #100	; 0x64
   170e4:	beq	17160 <close_stdout@@Base+0x47cc>
   170e8:	ldrb	r2, [r1]
   170ec:	cmp	r2, #47	; 0x2f
   170f0:	beq	17160 <close_stdout@@Base+0x47cc>
   170f4:	add	r8, sp, #20
   170f8:	mov	r1, r0
   170fc:	mov	r2, r5
   17100:	add	r3, sp, #24
   17104:	mov	r0, r8
   17108:	str	r3, [sp, #4]
   1710c:	bl	18868 <close_stdout@@Base+0x5ed4>
   17110:	subs	r9, r0, #0
   17114:	beq	171cc <close_stdout@@Base+0x4838>
   17118:	cmp	sl, #256	; 0x100
   1711c:	mov	r1, r7
   17120:	beq	17254 <close_stdout@@Base+0x48c0>
   17124:	bl	18084 <close_stdout@@Base+0x56f0>
   17128:	mov	fp, r0
   1712c:	bl	115fc <__errno_location@plt>
   17130:	cmp	r9, r8
   17134:	mov	r2, r0
   17138:	ldr	r8, [r0]
   1713c:	beq	17150 <close_stdout@@Base+0x47bc>
   17140:	mov	r0, r9
   17144:	str	r2, [sp]
   17148:	bl	113f8 <free@plt>
   1714c:	ldr	r2, [sp]
   17150:	cmn	fp, #1
   17154:	beq	171a4 <close_stdout@@Base+0x4810>
   17158:	mov	sl, fp
   1715c:	b	17178 <close_stdout@@Base+0x47e4>
   17160:	cmp	sl, #256	; 0x100
   17164:	mov	r0, r5
   17168:	mov	r1, r7
   1716c:	beq	17198 <close_stdout@@Base+0x4804>
   17170:	bl	18084 <close_stdout@@Base+0x56f0>
   17174:	mov	sl, r0
   17178:	ldr	r2, [sp, #4052]	; 0xfd4
   1717c:	mov	r0, sl
   17180:	ldr	r3, [r4]
   17184:	cmp	r2, r3
   17188:	bne	172c8 <close_stdout@@Base+0x4934>
   1718c:	add	sp, sp, #4048	; 0xfd0
   17190:	add	sp, sp, #12
   17194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17198:	bl	18094 <close_stdout@@Base+0x5700>
   1719c:	mov	sl, r0
   171a0:	b	17178 <close_stdout@@Base+0x47e4>
   171a4:	cmp	r8, #20
   171a8:	beq	171cc <close_stdout@@Base+0x4838>
   171ac:	sub	r1, r8, #1
   171b0:	cmp	r8, #13
   171b4:	cmpne	r1, #1
   171b8:	bls	171cc <close_stdout@@Base+0x4838>
   171bc:	cmp	r8, #38	; 0x26
   171c0:	cmpne	r8, #95	; 0x5f
   171c4:	strne	r8, [r2]
   171c8:	bne	17158 <close_stdout@@Base+0x47c4>
   171cc:	add	fp, sp, #12
   171d0:	mov	r0, fp
   171d4:	bl	17a0c <close_stdout@@Base+0x5078>
   171d8:	cmp	r0, #0
   171dc:	bne	172d8 <close_stdout@@Base+0x4944>
   171e0:	cmp	r6, #0
   171e4:	blt	171f4 <close_stdout@@Base+0x4860>
   171e8:	ldr	r2, [sp, #12]
   171ec:	cmp	r2, r6
   171f0:	beq	172ac <close_stdout@@Base+0x4918>
   171f4:	mov	r0, r6
   171f8:	bl	116e0 <fchdir@plt>
   171fc:	cmp	r0, #0
   17200:	bne	17280 <close_stdout@@Base+0x48ec>
   17204:	cmp	sl, #256	; 0x100
   17208:	mov	r0, r5
   1720c:	mov	r1, r7
   17210:	beq	17260 <close_stdout@@Base+0x48cc>
   17214:	bl	18084 <close_stdout@@Base+0x56f0>
   17218:	mov	sl, r0
   1721c:	cmn	sl, #1
   17220:	movne	r5, #0
   17224:	beq	172a0 <close_stdout@@Base+0x490c>
   17228:	mov	r0, fp
   1722c:	bl	17a6c <close_stdout@@Base+0x50d8>
   17230:	cmp	r0, #0
   17234:	bne	172cc <close_stdout@@Base+0x4938>
   17238:	mov	r0, fp
   1723c:	bl	17a88 <close_stdout@@Base+0x50f4>
   17240:	cmp	r5, #0
   17244:	beq	17178 <close_stdout@@Base+0x47e4>
   17248:	bl	115fc <__errno_location@plt>
   1724c:	str	r5, [r0]
   17250:	b	17178 <close_stdout@@Base+0x47e4>
   17254:	bl	18094 <close_stdout@@Base+0x5700>
   17258:	mov	fp, r0
   1725c:	b	1712c <close_stdout@@Base+0x4798>
   17260:	bl	18094 <close_stdout@@Base+0x5700>
   17264:	mov	sl, r0
   17268:	b	1721c <close_stdout@@Base+0x4888>
   1726c:	bl	115fc <__errno_location@plt>
   17270:	mvn	sl, #0
   17274:	mov	r3, #22
   17278:	str	r3, [r0]
   1727c:	b	17178 <close_stdout@@Base+0x47e4>
   17280:	bl	115fc <__errno_location@plt>
   17284:	mvn	sl, #0
   17288:	ldr	r6, [r0]
   1728c:	mov	r5, r0
   17290:	mov	r0, fp
   17294:	bl	17a88 <close_stdout@@Base+0x50f4>
   17298:	str	r6, [r5]
   1729c:	b	17178 <close_stdout@@Base+0x47e4>
   172a0:	bl	115fc <__errno_location@plt>
   172a4:	ldr	r5, [r0]
   172a8:	b	17228 <close_stdout@@Base+0x4894>
   172ac:	mov	r0, fp
   172b0:	mvn	sl, #0
   172b4:	bl	17a88 <close_stdout@@Base+0x50f4>
   172b8:	bl	115fc <__errno_location@plt>
   172bc:	mov	r3, #9
   172c0:	str	r3, [r0]
   172c4:	b	17178 <close_stdout@@Base+0x47e4>
   172c8:	bl	11458 <__stack_chk_fail@plt>
   172cc:	bl	115fc <__errno_location@plt>
   172d0:	ldr	r0, [r0]
   172d4:	bl	179bc <close_stdout@@Base+0x5028>
   172d8:	bl	115fc <__errno_location@plt>
   172dc:	ldr	r0, [r0]
   172e0:	bl	1796c <close_stdout@@Base+0x4fd8>
   172e4:	andeq	r4, r1, r0, asr pc
   172e8:	andeq	r0, r0, r4, asr r1
   172ec:	ldr	ip, [pc, #452]	; 174b8 <close_stdout@@Base+0x4b24>
   172f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   172f4:	mov	r8, r0
   172f8:	ldr	r0, [pc, #444]	; 174bc <close_stdout@@Base+0x4b28>
   172fc:	add	ip, pc, ip
   17300:	mov	r7, r1
   17304:	ldr	r1, [pc, #436]	; 174c0 <close_stdout@@Base+0x4b2c>
   17308:	mov	r4, r2
   1730c:	mov	r6, r3
   17310:	ldr	r5, [ip, r0]
   17314:	add	r1, pc, r1
   17318:	sub	sp, sp, #140	; 0x8c
   1731c:	ldr	r2, [r1]
   17320:	ldr	r3, [r5]
   17324:	cmp	r2, #0
   17328:	str	r3, [sp, #132]	; 0x84
   1732c:	blt	17444 <close_stdout@@Base+0x4ab0>
   17330:	cmp	r4, #0
   17334:	beq	17350 <close_stdout@@Base+0x49bc>
   17338:	ldr	r3, [r4, #4]
   1733c:	cmn	r3, #-1073741822	; 0xc0000002
   17340:	beq	173a4 <close_stdout@@Base+0x4a10>
   17344:	ldr	r3, [r4, #12]
   17348:	cmn	r3, #-1073741822	; 0xc0000002
   1734c:	beq	173a4 <close_stdout@@Base+0x4a10>
   17350:	mov	r0, r8
   17354:	mov	r1, r7
   17358:	mov	r2, r4
   1735c:	mov	r3, r6
   17360:	bl	113bc <utimensat@plt>
   17364:	cmn	r0, #1
   17368:	mov	r9, r0
   1736c:	beq	17400 <close_stdout@@Base+0x4a6c>
   17370:	cmp	r0, #0
   17374:	bne	1746c <close_stdout@@Base+0x4ad8>
   17378:	ldr	r3, [pc, #324]	; 174c4 <close_stdout@@Base+0x4b30>
   1737c:	mov	r0, r9
   17380:	mov	r2, #1
   17384:	add	r3, pc, r3
   17388:	str	r2, [r3]
   1738c:	ldr	r2, [sp, #132]	; 0x84
   17390:	ldr	r3, [r5]
   17394:	cmp	r2, r3
   17398:	bne	174b4 <close_stdout@@Base+0x4b20>
   1739c:	add	sp, sp, #140	; 0x8c
   173a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   173a4:	str	r6, [sp]
   173a8:	mov	r0, #3
   173ac:	mov	r1, r8
   173b0:	mov	r2, r7
   173b4:	add	r3, sp, #24
   173b8:	bl	11494 <__fxstatat64@plt>
   173bc:	cmp	r0, #0
   173c0:	bne	17464 <close_stdout@@Base+0x4ad0>
   173c4:	ldr	r3, [r4, #4]
   173c8:	cmn	r3, #-1073741822	; 0xc0000002
   173cc:	beq	17478 <close_stdout@@Base+0x4ae4>
   173d0:	ldr	r2, [r4, #12]
   173d4:	add	r3, sp, #8
   173d8:	ldm	r4, {r0, r1}
   173dc:	cmn	r2, #-1073741822	; 0xc0000002
   173e0:	stm	r3, {r0, r1}
   173e4:	beq	1749c <close_stdout@@Base+0x4b08>
   173e8:	add	r2, r4, #8
   173ec:	mov	r4, r3
   173f0:	add	r3, sp, #16
   173f4:	ldm	r2, {r0, r1}
   173f8:	stm	r3, {r0, r1}
   173fc:	b	17350 <close_stdout@@Base+0x49bc>
   17400:	bl	115fc <__errno_location@plt>
   17404:	ldr	r3, [r0]
   17408:	cmp	r3, #22
   1740c:	beq	1745c <close_stdout@@Base+0x4ac8>
   17410:	cmp	r3, #22
   17414:	cmpne	r3, #38	; 0x26
   17418:	bne	17378 <close_stdout@@Base+0x49e4>
   1741c:	ldr	r9, [pc, #164]	; 174c8 <close_stdout@@Base+0x4b34>
   17420:	add	r9, pc, r9
   17424:	ldr	r3, [r9]
   17428:	cmp	r3, #0
   1742c:	blt	17444 <close_stdout@@Base+0x4ab0>
   17430:	bl	115fc <__errno_location@plt>
   17434:	ldr	r3, [r0]
   17438:	cmp	r3, #38	; 0x26
   1743c:	mvneq	r3, #0
   17440:	streq	r3, [r9]
   17444:	mov	r0, r8
   17448:	mov	r1, r7
   1744c:	mov	r2, r4
   17450:	mov	r3, r6
   17454:	bl	170a0 <close_stdout@@Base+0x470c>
   17458:	b	1738c <close_stdout@@Base+0x49f8>
   1745c:	bics	r3, r6, #256	; 0x100
   17460:	beq	1741c <close_stdout@@Base+0x4a88>
   17464:	mvn	r0, #0
   17468:	b	1738c <close_stdout@@Base+0x49f8>
   1746c:	bl	115fc <__errno_location@plt>
   17470:	ldr	r3, [r0]
   17474:	b	17410 <close_stdout@@Base+0x4a7c>
   17478:	ldr	r3, [r4, #12]
   1747c:	cmn	r3, #-1073741822	; 0xc0000002
   17480:	beq	1738c <close_stdout@@Base+0x49f8>
   17484:	ldr	r1, [sp, #100]	; 0x64
   17488:	add	r3, sp, #8
   1748c:	ldr	r2, [sp, #96]	; 0x60
   17490:	str	r1, [sp, #12]
   17494:	str	r2, [sp, #8]
   17498:	b	173e8 <close_stdout@@Base+0x4a54>
   1749c:	ldr	r2, [sp, #108]	; 0x6c
   174a0:	mov	r4, r3
   174a4:	ldr	r3, [sp, #104]	; 0x68
   174a8:	str	r2, [sp, #20]
   174ac:	str	r3, [sp, #16]
   174b0:	b	17350 <close_stdout@@Base+0x49bc>
   174b4:	bl	11458 <__stack_chk_fail@plt>
   174b8:	strdeq	r4, [r1], -ip
   174bc:	andeq	r0, r0, r4, asr r1
   174c0:	andeq	r5, r1, r4, lsr #32
   174c4:			; <UNDEFINED> instruction: 0x00014fb4
   174c8:	andeq	r4, r1, r8, lsl pc
   174cc:	push	{r4, r5, r6, lr}
   174d0:	mov	r4, r0
   174d4:	bl	11500 <__fpending@plt>
   174d8:	mov	r6, r0
   174dc:	mov	r0, r4
   174e0:	ldr	r4, [r4]
   174e4:	bl	186c0 <close_stdout@@Base+0x5d2c>
   174e8:	and	r4, r4, #32
   174ec:	adds	r5, r0, #0
   174f0:	movne	r5, #1
   174f4:	cmp	r4, #0
   174f8:	bne	17518 <close_stdout@@Base+0x4b84>
   174fc:	cmp	r5, #0
   17500:	beq	17510 <close_stdout@@Base+0x4b7c>
   17504:	cmp	r6, #0
   17508:	beq	17534 <close_stdout@@Base+0x4ba0>
   1750c:	mvn	r4, #0
   17510:	mov	r0, r4
   17514:	pop	{r4, r5, r6, pc}
   17518:	cmp	r5, #0
   1751c:	bne	1750c <close_stdout@@Base+0x4b78>
   17520:	bl	115fc <__errno_location@plt>
   17524:	mvn	r4, #0
   17528:	str	r5, [r0]
   1752c:	mov	r0, r4
   17530:	pop	{r4, r5, r6, pc}
   17534:	bl	115fc <__errno_location@plt>
   17538:	ldr	r4, [r0]
   1753c:	subs	r4, r4, #9
   17540:	mvnne	r4, #0
   17544:	mov	r0, r4
   17548:	pop	{r4, r5, r6, pc}
   1754c:	ldr	r3, [pc, #984]	; 1792c <close_stdout@@Base+0x4f98>
   17550:	mov	r0, #14
   17554:	ldr	r2, [pc, #980]	; 17930 <close_stdout@@Base+0x4f9c>
   17558:	add	r3, pc, r3
   1755c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17560:	sub	sp, sp, #132	; 0x84
   17564:	ldr	r6, [r3, r2]
   17568:	ldr	r3, [r6]
   1756c:	str	r3, [sp, #124]	; 0x7c
   17570:	bl	116c8 <nl_langinfo@plt>
   17574:	subs	r5, r0, #0
   17578:	beq	1762c <close_stdout@@Base+0x4c98>
   1757c:	ldr	r3, [pc, #944]	; 17934 <close_stdout@@Base+0x4fa0>
   17580:	ldr	r4, [pc, r3]
   17584:	cmp	r4, #0
   17588:	beq	17638 <close_stdout@@Base+0x4ca4>
   1758c:	ldrb	r7, [r4]
   17590:	cmp	r7, #0
   17594:	bne	175c8 <close_stdout@@Base+0x4c34>
   17598:	b	17600 <close_stdout@@Base+0x4c6c>
   1759c:	mov	r0, r4
   175a0:	bl	115a8 <strlen@plt>
   175a4:	add	r0, r0, #1
   175a8:	add	r7, r4, r0
   175ac:	mov	r0, r7
   175b0:	bl	115a8 <strlen@plt>
   175b4:	add	r0, r0, #1
   175b8:	add	r4, r7, r0
   175bc:	ldrb	r7, [r7, r0]
   175c0:	cmp	r7, #0
   175c4:	beq	17600 <close_stdout@@Base+0x4c6c>
   175c8:	mov	r0, r5
   175cc:	mov	r1, r4
   175d0:	bl	113c8 <strcmp@plt>
   175d4:	cmp	r0, #0
   175d8:	beq	175f0 <close_stdout@@Base+0x4c5c>
   175dc:	cmp	r7, #42	; 0x2a
   175e0:	bne	1759c <close_stdout@@Base+0x4c08>
   175e4:	ldrb	r3, [r4, #1]
   175e8:	cmp	r3, #0
   175ec:	bne	1759c <close_stdout@@Base+0x4c08>
   175f0:	mov	r0, r4
   175f4:	bl	115a8 <strlen@plt>
   175f8:	add	r0, r0, #1
   175fc:	add	r5, r4, r0
   17600:	ldrb	r3, [r5]
   17604:	cmp	r3, #0
   17608:	ldreq	r5, [pc, #808]	; 17938 <close_stdout@@Base+0x4fa4>
   1760c:	addeq	r5, pc, r5
   17610:	ldr	r2, [sp, #124]	; 0x7c
   17614:	mov	r0, r5
   17618:	ldr	r3, [r6]
   1761c:	cmp	r2, r3
   17620:	bne	17900 <close_stdout@@Base+0x4f6c>
   17624:	add	sp, sp, #132	; 0x84
   17628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1762c:	ldr	r5, [pc, #776]	; 1793c <close_stdout@@Base+0x4fa8>
   17630:	add	r5, pc, r5
   17634:	b	1757c <close_stdout@@Base+0x4be8>
   17638:	ldr	r0, [pc, #768]	; 17940 <close_stdout@@Base+0x4fac>
   1763c:	add	r0, pc, r0
   17640:	bl	11530 <getenv@plt>
   17644:	subs	r8, r0, #0
   17648:	beq	178d8 <close_stdout@@Base+0x4f44>
   1764c:	ldrb	r3, [r8]
   17650:	cmp	r3, #0
   17654:	beq	1786c <close_stdout@@Base+0x4ed8>
   17658:	bl	115a8 <strlen@plt>
   1765c:	subs	sl, r0, #0
   17660:	subne	r3, sl, #1
   17664:	bne	1787c <close_stdout@@Base+0x4ee8>
   17668:	mov	r9, #0
   1766c:	mov	fp, r9
   17670:	add	r9, sl, r9
   17674:	add	r0, r9, #14
   17678:	bl	1153c <malloc@plt>
   1767c:	subs	r7, r0, #0
   17680:	beq	178cc <close_stdout@@Base+0x4f38>
   17684:	mov	r1, r8
   17688:	mov	r2, sl
   1768c:	bl	1141c <memcpy@plt>
   17690:	cmp	fp, #0
   17694:	add	ip, r7, r9
   17698:	movne	r3, #47	; 0x2f
   1769c:	strbne	r3, [r7, sl]
   176a0:	ldr	r3, [pc, #668]	; 17944 <close_stdout@@Base+0x4fb0>
   176a4:	add	r3, pc, r3
   176a8:	ldm	r3!, {r0, r1, r2}
   176ac:	ldrh	r3, [r3]
   176b0:	str	r0, [r7, r9]
   176b4:	mov	r0, r7
   176b8:	str	r1, [ip, #4]
   176bc:	mov	r1, #32768	; 0x8000
   176c0:	strh	r3, [ip, #12]
   176c4:	str	r2, [ip, #8]
   176c8:	bl	11524 <open64@plt>
   176cc:	subs	r8, r0, #0
   176d0:	blt	17894 <close_stdout@@Base+0x4f00>
   176d4:	ldr	r1, [pc, #620]	; 17948 <close_stdout@@Base+0x4fb4>
   176d8:	add	r1, pc, r1
   176dc:	bl	1138c <fdopen@plt>
   176e0:	subs	fp, r0, #0
   176e4:	beq	178ec <close_stdout@@Base+0x4f58>
   176e8:	ldr	r0, [pc, #604]	; 1794c <close_stdout@@Base+0x4fb8>
   176ec:	add	sl, sp, #20
   176f0:	add	r9, sp, #72	; 0x48
   176f4:	mov	r8, #0
   176f8:	add	r0, pc, r0
   176fc:	str	r0, [sp, #12]
   17700:	ldr	r3, [fp, #4]
   17704:	ldr	r2, [fp, #8]
   17708:	cmp	r3, r2
   1770c:	bcs	177f8 <close_stdout@@Base+0x4e64>
   17710:	add	r2, r3, #1
   17714:	str	r2, [fp, #4]
   17718:	ldrb	r0, [r3]
   1771c:	cmp	r0, #32
   17720:	beq	17700 <close_stdout@@Base+0x4d6c>
   17724:	sub	r3, r0, #9
   17728:	cmp	r3, #1
   1772c:	bls	17700 <close_stdout@@Base+0x4d6c>
   17730:	cmp	r0, #35	; 0x23
   17734:	beq	1780c <close_stdout@@Base+0x4e78>
   17738:	mov	r1, fp
   1773c:	bl	115e4 <ungetc@plt>
   17740:	mov	r0, fp
   17744:	ldr	r1, [sp, #12]
   17748:	mov	r2, sl
   1774c:	mov	r3, r9
   17750:	bl	11638 <fscanf@plt>
   17754:	cmp	r0, #1
   17758:	ble	1783c <close_stdout@@Base+0x4ea8>
   1775c:	mov	r0, sl
   17760:	bl	115a8 <strlen@plt>
   17764:	str	r0, [sp, #8]
   17768:	mov	r0, r9
   1776c:	bl	115a8 <strlen@plt>
   17770:	cmp	r8, #0
   17774:	mov	r2, r0
   17778:	bne	178a0 <close_stdout@@Base+0x4f0c>
   1777c:	ldr	r3, [sp, #8]
   17780:	str	r2, [sp]
   17784:	add	r8, r0, r3
   17788:	add	r0, r8, #3
   1778c:	add	r8, r8, #2
   17790:	bl	1153c <malloc@plt>
   17794:	ldr	r2, [sp]
   17798:	mov	r3, r0
   1779c:	cmp	r3, #0
   177a0:	beq	17904 <close_stdout@@Base+0x4f70>
   177a4:	ldr	r0, [sp, #8]
   177a8:	movw	r1, #65534	; 0xfffe
   177ac:	movt	r1, #65535	; 0xffff
   177b0:	rsb	r2, r2, r8
   177b4:	rsb	r1, r0, r1
   177b8:	stm	sp, {r2, r3}
   177bc:	add	r0, r1, r2
   177c0:	mov	r1, sl
   177c4:	add	r0, r3, r0
   177c8:	mov	r4, r3
   177cc:	bl	114e8 <strcpy@plt>
   177d0:	ldr	r2, [sp]
   177d4:	ldr	r3, [sp, #4]
   177d8:	mov	r1, r9
   177dc:	sub	r0, r2, #1
   177e0:	add	r0, r3, r0
   177e4:	bl	114e8 <strcpy@plt>
   177e8:	ldr	r3, [fp, #4]
   177ec:	ldr	r2, [fp, #8]
   177f0:	cmp	r3, r2
   177f4:	bcc	17710 <close_stdout@@Base+0x4d7c>
   177f8:	mov	r0, fp
   177fc:	bl	11698 <__uflow@plt>
   17800:	cmn	r0, #1
   17804:	beq	1783c <close_stdout@@Base+0x4ea8>
   17808:	b	1771c <close_stdout@@Base+0x4d88>
   1780c:	ldr	r3, [fp, #4]
   17810:	ldr	r2, [fp, #8]
   17814:	cmp	r3, r2
   17818:	bcs	17920 <close_stdout@@Base+0x4f8c>
   1781c:	add	r2, r3, #1
   17820:	str	r2, [fp, #4]
   17824:	ldrb	r0, [r3]
   17828:	cmp	r0, #10
   1782c:	cmnne	r0, #1
   17830:	bne	1780c <close_stdout@@Base+0x4e78>
   17834:	cmn	r0, #1
   17838:	bne	17700 <close_stdout@@Base+0x4d6c>
   1783c:	mov	r0, fp
   17840:	bl	186c0 <close_stdout@@Base+0x5d2c>
   17844:	cmp	r8, #0
   17848:	beq	17894 <close_stdout@@Base+0x4f00>
   1784c:	mov	r3, #0
   17850:	strb	r3, [r4, r8]
   17854:	mov	r0, r7
   17858:	bl	113f8 <free@plt>
   1785c:	ldr	r3, [pc, #236]	; 17950 <close_stdout@@Base+0x4fbc>
   17860:	add	r3, pc, r3
   17864:	str	r4, [r3]
   17868:	b	1758c <close_stdout@@Base+0x4bf8>
   1786c:	ldr	r8, [pc, #224]	; 17954 <close_stdout@@Base+0x4fc0>
   17870:	mov	r3, #7
   17874:	mov	sl, #8
   17878:	add	r8, pc, r8
   1787c:	ldrb	r3, [r8, r3]
   17880:	cmp	r3, #47	; 0x2f
   17884:	movne	r9, #1
   17888:	movne	fp, r9
   1788c:	bne	17670 <close_stdout@@Base+0x4cdc>
   17890:	b	17668 <close_stdout@@Base+0x4cd4>
   17894:	ldr	r4, [pc, #188]	; 17958 <close_stdout@@Base+0x4fc4>
   17898:	add	r4, pc, r4
   1789c:	b	17854 <close_stdout@@Base+0x4ec0>
   178a0:	ldr	r0, [sp, #8]
   178a4:	str	r2, [sp]
   178a8:	add	r3, r0, r2
   178ac:	mov	r0, r4
   178b0:	add	r8, r3, r8
   178b4:	add	r1, r8, #3
   178b8:	add	r8, r8, #2
   178bc:	bl	11470 <realloc@plt>
   178c0:	ldr	r2, [sp]
   178c4:	mov	r3, r0
   178c8:	b	1779c <close_stdout@@Base+0x4e08>
   178cc:	ldr	r4, [pc, #136]	; 1795c <close_stdout@@Base+0x4fc8>
   178d0:	add	r4, pc, r4
   178d4:	b	1785c <close_stdout@@Base+0x4ec8>
   178d8:	ldr	r8, [pc, #128]	; 17960 <close_stdout@@Base+0x4fcc>
   178dc:	mov	r3, #7
   178e0:	mov	sl, #8
   178e4:	add	r8, pc, r8
   178e8:	b	1787c <close_stdout@@Base+0x4ee8>
   178ec:	ldr	r4, [pc, #112]	; 17964 <close_stdout@@Base+0x4fd0>
   178f0:	mov	r0, r8
   178f4:	add	r4, pc, r4
   178f8:	bl	11728 <close@plt>
   178fc:	b	17854 <close_stdout@@Base+0x4ec0>
   17900:	bl	11458 <__stack_chk_fail@plt>
   17904:	mov	r0, r4
   17908:	ldr	r4, [pc, #88]	; 17968 <close_stdout@@Base+0x4fd4>
   1790c:	bl	113f8 <free@plt>
   17910:	mov	r0, fp
   17914:	add	r4, pc, r4
   17918:	bl	186c0 <close_stdout@@Base+0x5d2c>
   1791c:	b	17854 <close_stdout@@Base+0x4ec0>
   17920:	mov	r0, fp
   17924:	bl	11698 <__uflow@plt>
   17928:	b	17828 <close_stdout@@Base+0x4e94>
   1792c:	andeq	r4, r1, r0, lsr #21
   17930:	andeq	r0, r0, r4, asr r1
   17934:			; <UNDEFINED> instruction: 0x00014dbc
   17938:	andeq	r2, r0, r8, asr sp
   1793c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   17940:	andeq	r2, r0, r0, lsr sp
   17944:	ldrdeq	r2, [r0], -r8
   17948:			; <UNDEFINED> instruction: 0x00002cb4
   1794c:	muleq	r0, r8, ip
   17950:	ldrdeq	r4, [r1], -ip
   17954:	andeq	r2, r0, r0, ror #21
   17958:	andeq	r1, r0, ip, lsr #26
   1795c:	strdeq	r1, [r0], -r4
   17960:	andeq	r2, r0, r4, ror sl
   17964:	ldrdeq	r1, [r0], -r0
   17968:			; <UNDEFINED> instruction: 0x00001cb0
   1796c:	push	{r3, r4, r5, lr}
   17970:	mov	r2, #5
   17974:	ldr	r3, [pc, #52]	; 179b0 <close_stdout@@Base+0x501c>
   17978:	mov	r4, r0
   1797c:	ldr	ip, [pc, #48]	; 179b4 <close_stdout@@Base+0x5020>
   17980:	mov	r0, #0
   17984:	add	r3, pc, r3
   17988:	ldr	r1, [pc, #40]	; 179b8 <close_stdout@@Base+0x5024>
   1798c:	ldr	r3, [r3, ip]
   17990:	add	r1, pc, r1
   17994:	ldr	r5, [r3]
   17998:	bl	1144c <dcgettext@plt>
   1799c:	mov	r1, r4
   179a0:	mov	r2, r0
   179a4:	mov	r0, r5
   179a8:	bl	11518 <error@plt>
   179ac:	bl	1171c <abort@plt>
   179b0:	andeq	r4, r1, r4, ror r6
   179b4:	andeq	r0, r0, r8, ror r1
   179b8:	andeq	r2, r0, ip, lsl #20
   179bc:	push	{r3, r4, r5, lr}
   179c0:	mov	r2, #5
   179c4:	ldr	r3, [pc, #52]	; 17a00 <close_stdout@@Base+0x506c>
   179c8:	mov	r4, r0
   179cc:	ldr	ip, [pc, #48]	; 17a04 <close_stdout@@Base+0x5070>
   179d0:	mov	r0, #0
   179d4:	add	r3, pc, r3
   179d8:	ldr	r1, [pc, #40]	; 17a08 <close_stdout@@Base+0x5074>
   179dc:	ldr	r3, [r3, ip]
   179e0:	add	r1, pc, r1
   179e4:	ldr	r5, [r3]
   179e8:	bl	1144c <dcgettext@plt>
   179ec:	mov	r1, r4
   179f0:	mov	r2, r0
   179f4:	mov	r0, r5
   179f8:	bl	11518 <error@plt>
   179fc:	bl	1171c <abort@plt>
   17a00:	andeq	r4, r1, r4, lsr #12
   17a04:	andeq	r0, r0, r8, ror r1
   17a08:	andeq	r2, r0, r8, ror #19
   17a0c:	push	{r3, r4, r5, lr}
   17a10:	mov	r4, #0
   17a14:	mov	r5, r0
   17a18:	str	r4, [r0, #4]
   17a1c:	ldr	r0, [pc, #68]	; 17a68 <close_stdout@@Base+0x50d4>
   17a20:	mov	r1, r4
   17a24:	add	r0, pc, r0
   17a28:	bl	18a38 <close_stdout@@Base+0x60a4>
   17a2c:	cmp	r0, r4
   17a30:	str	r0, [r5]
   17a34:	blt	17a48 <close_stdout@@Base+0x50b4>
   17a38:	mov	r1, #1
   17a3c:	bl	189c8 <close_stdout@@Base+0x6034>
   17a40:	mov	r0, r4
   17a44:	pop	{r3, r4, r5, pc}
   17a48:	mov	r0, r4
   17a4c:	mov	r1, r4
   17a50:	bl	11590 <getcwd@plt>
   17a54:	str	r0, [r5, #4]
   17a58:	cmp	r0, r4
   17a5c:	movne	r0, #0
   17a60:	mvneq	r0, #0
   17a64:	pop	{r3, r4, r5, pc}
   17a68:	ldrdeq	r2, [r0], -r4
   17a6c:	ldr	r3, [r0]
   17a70:	cmp	r3, #0
   17a74:	blt	17a80 <close_stdout@@Base+0x50ec>
   17a78:	mov	r0, r3
   17a7c:	b	116e0 <fchdir@plt>
   17a80:	ldr	r0, [r0, #4]
   17a84:	b	18360 <close_stdout@@Base+0x59cc>
   17a88:	push	{r4, lr}
   17a8c:	mov	r4, r0
   17a90:	ldr	r0, [r0]
   17a94:	cmp	r0, #0
   17a98:	blt	17aa0 <close_stdout@@Base+0x510c>
   17a9c:	bl	11728 <close@plt>
   17aa0:	ldr	r0, [r4, #4]
   17aa4:	pop	{r4, lr}
   17aa8:	b	113f8 <free@plt>
   17aac:	push	{r3, r4, r5, lr}
   17ab0:	mov	r5, r0
   17ab4:	ldr	r4, [r1]
   17ab8:	ldr	r3, [r4, #4]
   17abc:	cmn	r3, #-1073741822	; 0xc0000002
   17ac0:	beq	17b00 <close_stdout@@Base+0x516c>
   17ac4:	cmn	r3, #-1073741823	; 0xc0000001
   17ac8:	ldr	r3, [r4, #12]
   17acc:	beq	17ae8 <close_stdout@@Base+0x5154>
   17ad0:	cmn	r3, #-1073741822	; 0xc0000002
   17ad4:	beq	17b30 <close_stdout@@Base+0x519c>
   17ad8:	cmn	r3, #-1073741823	; 0xc0000001
   17adc:	beq	17b20 <close_stdout@@Base+0x518c>
   17ae0:	mov	r0, #0
   17ae4:	pop	{r3, r4, r5, pc}
   17ae8:	cmn	r3, #-1073741823	; 0xc0000001
   17aec:	beq	17b50 <close_stdout@@Base+0x51bc>
   17af0:	mov	r0, r4
   17af4:	bl	12c3c <close_stdout@@Base+0x2a8>
   17af8:	ldr	r3, [r4, #12]
   17afc:	b	17ad0 <close_stdout@@Base+0x513c>
   17b00:	ldr	r3, [r4, #12]
   17b04:	cmn	r3, #-1073741822	; 0xc0000002
   17b08:	beq	17b48 <close_stdout@@Base+0x51b4>
   17b0c:	ldr	r1, [r0, #72]	; 0x48
   17b10:	cmn	r3, #-1073741823	; 0xc0000001
   17b14:	ldr	r2, [r0, #76]	; 0x4c
   17b18:	stm	r4, {r1, r2}
   17b1c:	bne	17ae0 <close_stdout@@Base+0x514c>
   17b20:	add	r0, r4, #8
   17b24:	bl	12c3c <close_stdout@@Base+0x2a8>
   17b28:	mov	r0, #0
   17b2c:	pop	{r3, r4, r5, pc}
   17b30:	ldr	r2, [r5, #80]	; 0x50
   17b34:	mov	r0, #0
   17b38:	ldr	r3, [r5, #84]	; 0x54
   17b3c:	str	r2, [r4, #8]
   17b40:	str	r3, [r4, #12]
   17b44:	pop	{r3, r4, r5, pc}
   17b48:	mov	r0, #1
   17b4c:	pop	{r3, r4, r5, pc}
   17b50:	mov	r0, #0
   17b54:	str	r0, [r1]
   17b58:	pop	{r3, r4, r5, pc}
   17b5c:	cmp	r0, #0
   17b60:	push	{r4, lr}
   17b64:	beq	17c0c <close_stdout@@Base+0x5278>
   17b68:	ldr	ip, [r0, #4]
   17b6c:	movw	r3, #51711	; 0xc9ff
   17b70:	movt	r3, #15258	; 0x3b9a
   17b74:	add	r4, ip, #-1073741822	; 0xc0000002
   17b78:	cmp	r4, #1
   17b7c:	cmphi	ip, r3
   17b80:	bhi	17bf8 <close_stdout@@Base+0x5264>
   17b84:	ldr	r2, [r0, #12]
   17b88:	add	r1, r2, #-1073741822	; 0xc0000002
   17b8c:	cmp	r1, #1
   17b90:	cmphi	r2, r3
   17b94:	movls	r3, #0
   17b98:	movhi	r3, #1
   17b9c:	bhi	17bf8 <close_stdout@@Base+0x5264>
   17ba0:	cmp	r4, #1
   17ba4:	movhi	ip, r3
   17ba8:	bls	17bc4 <close_stdout@@Base+0x5230>
   17bac:	cmp	r1, #1
   17bb0:	bls	17be0 <close_stdout@@Base+0x524c>
   17bb4:	cmp	r3, #1
   17bb8:	addeq	ip, ip, #1
   17bbc:	mov	r0, ip
   17bc0:	pop	{r4, pc}
   17bc4:	cmn	ip, #-1073741822	; 0xc0000002
   17bc8:	str	r3, [r0]
   17bcc:	mov	ip, #1
   17bd0:	movne	r3, #0
   17bd4:	moveq	r3, #1
   17bd8:	cmp	r1, #1
   17bdc:	bhi	17bb4 <close_stdout@@Base+0x5220>
   17be0:	cmn	r2, #-1073741822	; 0xc0000002
   17be4:	mov	ip, #1
   17be8:	mov	r2, #0
   17bec:	addeq	r3, r3, #1
   17bf0:	str	r2, [r0, #8]
   17bf4:	b	17bb4 <close_stdout@@Base+0x5220>
   17bf8:	bl	115fc <__errno_location@plt>
   17bfc:	mov	r3, #22
   17c00:	mvn	ip, #0
   17c04:	str	r3, [r0]
   17c08:	b	17bbc <close_stdout@@Base+0x5228>
   17c0c:	ldr	r0, [pc, #24]	; 17c2c <close_stdout@@Base+0x5298>
   17c10:	mov	r2, #90	; 0x5a
   17c14:	ldr	r1, [pc, #20]	; 17c30 <close_stdout@@Base+0x529c>
   17c18:	ldr	r3, [pc, #20]	; 17c34 <close_stdout@@Base+0x52a0>
   17c1c:	add	r0, pc, r0
   17c20:	add	r1, pc, r1
   17c24:	add	r3, pc, r3
   17c28:	bl	1174c <__assert_fail@plt>
   17c2c:	strdeq	r2, [r0], -r4
   17c30:	strdeq	r2, [r0], -ip
   17c34:	ldrdeq	r2, [r0], -r8
   17c38:	mov	r3, #256	; 0x100
   17c3c:	b	172ec <close_stdout@@Base+0x4958>
   17c40:	ldr	r3, [pc, #1060]	; 1806c <close_stdout@@Base+0x56d8>
   17c44:	cmp	r2, #0
   17c48:	ldr	ip, [pc, #1056]	; 18070 <close_stdout@@Base+0x56dc>
   17c4c:	add	r3, pc, r3
   17c50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17c54:	sub	sp, sp, #168	; 0xa8
   17c58:	ldr	r6, [r3, ip]
   17c5c:	mov	r5, r0
   17c60:	mov	r8, r1
   17c64:	ldr	r3, [r6]
   17c68:	str	r3, [sp, #164]	; 0xa4
   17c6c:	beq	17f80 <close_stdout@@Base+0x55ec>
   17c70:	ldm	r2, {r0, r1}
   17c74:	add	r3, sp, #8
   17c78:	add	r2, r2, #8
   17c7c:	str	r3, [sp, #4]
   17c80:	stm	r3, {r0, r1}
   17c84:	ldm	r2, {r0, r1}
   17c88:	add	r2, sp, #16
   17c8c:	stm	r2, {r0, r1}
   17c90:	mov	r0, r3
   17c94:	bl	17b5c <close_stdout@@Base+0x51c8>
   17c98:	subs	r7, r0, #0
   17c9c:	blt	17f78 <close_stdout@@Base+0x55e4>
   17ca0:	rsbs	r9, r8, #1
   17ca4:	lsr	r4, r5, #31
   17ca8:	movcc	r9, #0
   17cac:	tst	r4, r9
   17cb0:	bne	1802c <close_stdout@@Base+0x5698>
   17cb4:	ldr	r3, [pc, #952]	; 18074 <close_stdout@@Base+0x56e0>
   17cb8:	add	r3, pc, r3
   17cbc:	ldr	r3, [r3]
   17cc0:	cmp	r3, #0
   17cc4:	blt	17cf8 <close_stdout@@Base+0x5364>
   17cc8:	cmp	r7, #2
   17ccc:	beq	17f00 <close_stdout@@Base+0x556c>
   17cd0:	ldr	r1, [sp, #4]
   17cd4:	cmp	r4, #0
   17cd8:	bne	17fac <close_stdout@@Base+0x5618>
   17cdc:	mov	r0, r5
   17ce0:	bl	116d4 <futimens@plt>
   17ce4:	subs	sl, r0, #0
   17ce8:	ble	17fe4 <close_stdout@@Base+0x5650>
   17cec:	bl	115fc <__errno_location@plt>
   17cf0:	mov	r3, #38	; 0x26
   17cf4:	str	r3, [r0]
   17cf8:	ldr	r3, [pc, #888]	; 18078 <close_stdout@@Base+0x56e4>
   17cfc:	cmp	r7, #0
   17d00:	mvn	r2, #0
   17d04:	add	r3, pc, r3
   17d08:	str	r2, [r3]
   17d0c:	str	r2, [r3, #4]
   17d10:	bne	17db8 <close_stdout@@Base+0x5424>
   17d14:	ldr	r3, [sp, #4]
   17d18:	cmp	r3, #0
   17d1c:	beq	17fa4 <close_stdout@@Base+0x5610>
   17d20:	ldr	r0, [r3, #4]
   17d24:	movw	r2, #19923	; 0x4dd3
   17d28:	ldr	r1, [r3, #12]
   17d2c:	movt	r2, #4194	; 0x1062
   17d30:	ldr	lr, [r3]
   17d34:	add	sl, sp, #24
   17d38:	smull	r7, ip, r2, r0
   17d3c:	ldr	r3, [r3, #8]
   17d40:	smull	r7, r2, r2, r1
   17d44:	asr	r0, r0, #31
   17d48:	asr	r1, r1, #31
   17d4c:	str	lr, [sp, #24]
   17d50:	rsb	ip, r0, ip, asr #6
   17d54:	str	r3, [sp, #32]
   17d58:	str	ip, [sp, #28]
   17d5c:	rsb	r2, r1, r2, asr #6
   17d60:	str	r2, [sp, #36]	; 0x24
   17d64:	cmp	r4, #0
   17d68:	bne	17f8c <close_stdout@@Base+0x55f8>
   17d6c:	mov	r0, r5
   17d70:	mov	r1, r4
   17d74:	mov	r2, sl
   17d78:	bl	11740 <futimesat@plt>
   17d7c:	subs	r7, r0, #0
   17d80:	beq	17e10 <close_stdout@@Base+0x547c>
   17d84:	cmp	r9, #0
   17d88:	bne	17f78 <close_stdout@@Base+0x55e4>
   17d8c:	mov	r0, r8
   17d90:	mov	r1, sl
   17d94:	bl	1162c <utimes@plt>
   17d98:	mov	r7, r0
   17d9c:	ldr	r2, [sp, #164]	; 0xa4
   17da0:	mov	r0, r7
   17da4:	ldr	r3, [r6]
   17da8:	cmp	r2, r3
   17dac:	bne	18040 <close_stdout@@Base+0x56ac>
   17db0:	add	sp, sp, #168	; 0xa8
   17db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17db8:	cmp	r7, #3
   17dbc:	beq	17de8 <close_stdout@@Base+0x5454>
   17dc0:	cmp	r4, #0
   17dc4:	mov	r0, #3
   17dc8:	bne	17f60 <close_stdout@@Base+0x55cc>
   17dcc:	mov	r1, r5
   17dd0:	add	r2, sp, #56	; 0x38
   17dd4:	bl	114ac <__fxstat64@plt>
   17dd8:	adds	r0, r0, #0
   17ddc:	movne	r0, #1
   17de0:	cmp	r0, #0
   17de4:	bne	17f78 <close_stdout@@Base+0x55e4>
   17de8:	ldr	r3, [sp, #4]
   17dec:	cmp	r3, #0
   17df0:	beq	17fa4 <close_stdout@@Base+0x5610>
   17df4:	add	r0, sp, #56	; 0x38
   17df8:	add	r1, sp, #4
   17dfc:	bl	17aac <close_stdout@@Base+0x5118>
   17e00:	cmp	r0, #0
   17e04:	beq	17d14 <close_stdout@@Base+0x5380>
   17e08:	mov	r7, #0
   17e0c:	b	17d9c <close_stdout@@Base+0x5408>
   17e10:	cmp	sl, #0
   17e14:	beq	17d9c <close_stdout@@Base+0x5408>
   17e18:	ldr	r9, [sl, #4]
   17e1c:	movw	r3, #41247	; 0xa11f
   17e20:	movt	r3, #7
   17e24:	ldr	r8, [sl, #12]
   17e28:	cmp	r9, r3
   17e2c:	movle	r9, #0
   17e30:	movgt	r9, #1
   17e34:	cmp	r8, r3
   17e38:	movle	r8, #0
   17e3c:	movgt	r8, #1
   17e40:	orrs	r3, r8, r9
   17e44:	beq	17d9c <close_stdout@@Base+0x5408>
   17e48:	mov	r0, #3
   17e4c:	mov	r1, r5
   17e50:	add	r2, sp, #56	; 0x38
   17e54:	bl	114ac <__fxstat64@plt>
   17e58:	cmp	r0, #0
   17e5c:	bne	17d9c <close_stdout@@Base+0x5408>
   17e60:	ldr	r2, [sl]
   17e64:	add	r3, sl, #8
   17e68:	ldm	sl, {r0, r1}
   17e6c:	add	ip, sp, #40	; 0x28
   17e70:	ldr	r7, [sp, #128]	; 0x80
   17e74:	rsb	r7, r2, r7
   17e78:	stm	ip, {r0, r1}
   17e7c:	cmp	r7, #1
   17e80:	movne	r9, #0
   17e84:	andeq	r9, r9, #1
   17e88:	ldm	r3, {r0, r1}
   17e8c:	ldr	r2, [sl, #8]
   17e90:	add	r3, sp, #48	; 0x30
   17e94:	ldr	r7, [sp, #136]	; 0x88
   17e98:	cmp	r9, #0
   17e9c:	stm	r3, {r0, r1}
   17ea0:	rsb	r7, r2, r7
   17ea4:	beq	17ebc <close_stdout@@Base+0x5528>
   17ea8:	ldr	r3, [sp, #132]	; 0x84
   17eac:	cmp	r3, #0
   17eb0:	streq	r4, [sp, #44]	; 0x2c
   17eb4:	moveq	r2, ip
   17eb8:	beq	17ec0 <close_stdout@@Base+0x552c>
   17ebc:	mov	r2, r4
   17ec0:	cmp	r7, #1
   17ec4:	movne	r7, #0
   17ec8:	andeq	r7, r8, #1
   17ecc:	cmp	r7, #0
   17ed0:	beq	17ee8 <close_stdout@@Base+0x5554>
   17ed4:	ldr	r3, [sp, #140]	; 0x8c
   17ed8:	cmp	r3, #0
   17edc:	streq	r3, [sp, #52]	; 0x34
   17ee0:	moveq	r2, ip
   17ee4:	beq	17ef0 <close_stdout@@Base+0x555c>
   17ee8:	cmp	r2, #0
   17eec:	beq	17e08 <close_stdout@@Base+0x5474>
   17ef0:	mov	r0, r5
   17ef4:	mov	r1, #0
   17ef8:	bl	11740 <futimesat@plt>
   17efc:	b	17e08 <close_stdout@@Base+0x5474>
   17f00:	cmp	r4, #0
   17f04:	mov	r0, #3
   17f08:	bne	18000 <close_stdout@@Base+0x566c>
   17f0c:	mov	r1, r5
   17f10:	add	r2, sp, #56	; 0x38
   17f14:	bl	114ac <__fxstat64@plt>
   17f18:	adds	r0, r0, #0
   17f1c:	movne	r0, #1
   17f20:	cmp	r0, #0
   17f24:	bne	17f78 <close_stdout@@Base+0x55e4>
   17f28:	ldr	r3, [sp, #4]
   17f2c:	ldr	r2, [r3, #4]
   17f30:	cmn	r2, #-1073741822	; 0xc0000002
   17f34:	beq	18018 <close_stdout@@Base+0x5684>
   17f38:	ldr	r2, [r3, #12]
   17f3c:	cmn	r2, #-1073741822	; 0xc0000002
   17f40:	ldreq	r0, [sp, #136]	; 0x88
   17f44:	moveq	r1, r3
   17f48:	ldreq	r2, [sp, #140]	; 0x8c
   17f4c:	movne	r1, r3
   17f50:	streq	r0, [r3, #8]
   17f54:	streq	r2, [r3, #12]
   17f58:	mov	r7, #3
   17f5c:	b	17cd4 <close_stdout@@Base+0x5340>
   17f60:	mov	r1, r8
   17f64:	add	r2, sp, #56	; 0x38
   17f68:	bl	116f8 <__xstat64@plt>
   17f6c:	adds	r0, r0, #0
   17f70:	movne	r0, #1
   17f74:	b	17de0 <close_stdout@@Base+0x544c>
   17f78:	mvn	r7, #0
   17f7c:	b	17d9c <close_stdout@@Base+0x5408>
   17f80:	str	r2, [sp, #4]
   17f84:	mov	r7, r2
   17f88:	b	17ca0 <close_stdout@@Base+0x530c>
   17f8c:	mov	r1, r8
   17f90:	mov	r2, sl
   17f94:	mvn	r0, #99	; 0x63
   17f98:	bl	11740 <futimesat@plt>
   17f9c:	mov	r7, r0
   17fa0:	b	17d9c <close_stdout@@Base+0x5408>
   17fa4:	mov	sl, #0
   17fa8:	b	17d64 <close_stdout@@Base+0x53d0>
   17fac:	mov	r2, r1
   17fb0:	mvn	r0, #99	; 0x63
   17fb4:	mov	r1, r8
   17fb8:	mov	r3, #0
   17fbc:	bl	113bc <utimensat@plt>
   17fc0:	subs	sl, r0, #0
   17fc4:	bgt	17cec <close_stdout@@Base+0x5358>
   17fc8:	bne	18058 <close_stdout@@Base+0x56c4>
   17fcc:	ldr	r3, [pc, #168]	; 1807c <close_stdout@@Base+0x56e8>
   17fd0:	mov	r2, #1
   17fd4:	mov	r7, sl
   17fd8:	add	r3, pc, r3
   17fdc:	str	r2, [r3]
   17fe0:	b	17d9c <close_stdout@@Base+0x5408>
   17fe4:	bne	18044 <close_stdout@@Base+0x56b0>
   17fe8:	ldr	r3, [pc, #144]	; 18080 <close_stdout@@Base+0x56ec>
   17fec:	mov	r2, #1
   17ff0:	mov	r7, sl
   17ff4:	add	r3, pc, r3
   17ff8:	str	r2, [r3]
   17ffc:	b	17d9c <close_stdout@@Base+0x5408>
   18000:	mov	r1, r8
   18004:	add	r2, sp, #56	; 0x38
   18008:	bl	116f8 <__xstat64@plt>
   1800c:	adds	r0, r0, #0
   18010:	movne	r0, #1
   18014:	b	17f20 <close_stdout@@Base+0x558c>
   18018:	ldr	r1, [sp, #128]	; 0x80
   1801c:	ldr	r2, [sp, #132]	; 0x84
   18020:	stm	r3, {r1, r2}
   18024:	ldr	r1, [sp, #4]
   18028:	b	17f58 <close_stdout@@Base+0x55c4>
   1802c:	bl	115fc <__errno_location@plt>
   18030:	mvn	r7, #0
   18034:	mov	r3, #9
   18038:	str	r3, [r0]
   1803c:	b	17d9c <close_stdout@@Base+0x5408>
   18040:	bl	11458 <__stack_chk_fail@plt>
   18044:	bl	115fc <__errno_location@plt>
   18048:	ldr	r3, [r0]
   1804c:	cmp	r3, #38	; 0x26
   18050:	bne	17fe8 <close_stdout@@Base+0x5654>
   18054:	b	17cf8 <close_stdout@@Base+0x5364>
   18058:	bl	115fc <__errno_location@plt>
   1805c:	ldr	r3, [r0]
   18060:	cmp	r3, #38	; 0x26
   18064:	bne	17fcc <close_stdout@@Base+0x5638>
   18068:	b	17cf8 <close_stdout@@Base+0x5364>
   1806c:	andeq	r4, r1, ip, lsr #7
   18070:	andeq	r0, r0, r4, asr r1
   18074:	andeq	r4, r1, r8, lsl #13
   18078:	andeq	r4, r1, ip, lsr r6
   1807c:	andeq	r4, r1, r8, ror #6
   18080:	andeq	r4, r1, ip, asr #6
   18084:	mov	r2, r1
   18088:	mov	r1, r0
   1808c:	mvn	r0, #0
   18090:	b	17c40 <close_stdout@@Base+0x52ac>
   18094:	ldr	r3, [pc, #556]	; 182c8 <close_stdout@@Base+0x5934>
   18098:	subs	r2, r1, #0
   1809c:	ldr	r1, [pc, #552]	; 182cc <close_stdout@@Base+0x5938>
   180a0:	add	r3, pc, r3
   180a4:	push	{r4, r5, r6, r7, lr}
   180a8:	sub	sp, sp, #140	; 0x8c
   180ac:	ldr	r4, [r3, r1]
   180b0:	mov	r5, r0
   180b4:	ldr	r3, [r4]
   180b8:	str	r3, [sp, #132]	; 0x84
   180bc:	beq	18194 <close_stdout@@Base+0x5800>
   180c0:	ldm	r2, {r0, r1}
   180c4:	add	r3, sp, #8
   180c8:	add	r2, r2, #8
   180cc:	str	r3, [sp, #4]
   180d0:	stm	r3, {r0, r1}
   180d4:	ldm	r2, {r0, r1}
   180d8:	add	r2, sp, #16
   180dc:	stm	r2, {r0, r1}
   180e0:	mov	r0, r3
   180e4:	bl	17b5c <close_stdout@@Base+0x51c8>
   180e8:	subs	r6, r0, #0
   180ec:	blt	18294 <close_stdout@@Base+0x5900>
   180f0:	ldr	r3, [pc, #472]	; 182d0 <close_stdout@@Base+0x593c>
   180f4:	add	r3, pc, r3
   180f8:	ldr	r3, [r3, #4]
   180fc:	cmp	r3, #0
   18100:	blt	18134 <close_stdout@@Base+0x57a0>
   18104:	cmp	r6, #2
   18108:	beq	18210 <close_stdout@@Base+0x587c>
   1810c:	ldr	r2, [sp, #4]
   18110:	mvn	r0, #99	; 0x63
   18114:	mov	r1, r5
   18118:	mov	r3, #256	; 0x100
   1811c:	bl	113bc <utimensat@plt>
   18120:	subs	r7, r0, #0
   18124:	ble	18260 <close_stdout@@Base+0x58cc>
   18128:	bl	115fc <__errno_location@plt>
   1812c:	mov	r3, #38	; 0x26
   18130:	str	r3, [r0]
   18134:	ldr	r3, [pc, #408]	; 182d4 <close_stdout@@Base+0x5940>
   18138:	cmp	r6, #0
   1813c:	mvn	r2, #0
   18140:	add	r3, pc, r3
   18144:	str	r2, [r3, #4]
   18148:	beq	181b8 <close_stdout@@Base+0x5824>
   1814c:	cmp	r6, #3
   18150:	beq	1816c <close_stdout@@Base+0x57d8>
   18154:	mov	r0, #3
   18158:	mov	r1, r5
   1815c:	add	r2, sp, #24
   18160:	bl	11734 <__lxstat64@plt>
   18164:	cmp	r0, #0
   18168:	bne	18294 <close_stdout@@Base+0x5900>
   1816c:	ldr	r3, [sp, #4]
   18170:	cmp	r3, #0
   18174:	beq	181d0 <close_stdout@@Base+0x583c>
   18178:	add	r0, sp, #24
   1817c:	add	r1, sp, #4
   18180:	bl	17aac <close_stdout@@Base+0x5118>
   18184:	cmp	r0, #0
   18188:	movne	r3, #0
   1818c:	beq	181d0 <close_stdout@@Base+0x583c>
   18190:	b	181f4 <close_stdout@@Base+0x5860>
   18194:	ldr	r3, [pc, #316]	; 182d8 <close_stdout@@Base+0x5944>
   18198:	str	r2, [sp, #4]
   1819c:	add	r3, pc, r3
   181a0:	ldr	r1, [r3, #4]
   181a4:	cmp	r1, #0
   181a8:	movge	r6, r2
   181ac:	bge	18110 <close_stdout@@Base+0x577c>
   181b0:	mvn	r2, #0
   181b4:	str	r2, [r3, #4]
   181b8:	mov	r0, #3
   181bc:	mov	r1, r5
   181c0:	add	r2, sp, #24
   181c4:	bl	11734 <__lxstat64@plt>
   181c8:	cmp	r0, #0
   181cc:	bne	18294 <close_stdout@@Base+0x5900>
   181d0:	ldr	r3, [sp, #40]	; 0x28
   181d4:	and	r3, r3, #61440	; 0xf000
   181d8:	cmp	r3, #40960	; 0xa000
   181dc:	beq	1829c <close_stdout@@Base+0x5908>
   181e0:	mov	r1, r5
   181e4:	mvn	r0, #0
   181e8:	ldr	r2, [sp, #4]
   181ec:	bl	17c40 <close_stdout@@Base+0x52ac>
   181f0:	mov	r3, r0
   181f4:	ldr	r2, [sp, #132]	; 0x84
   181f8:	mov	r0, r3
   181fc:	ldr	r3, [r4]
   18200:	cmp	r2, r3
   18204:	bne	182b0 <close_stdout@@Base+0x591c>
   18208:	add	sp, sp, #140	; 0x8c
   1820c:	pop	{r4, r5, r6, r7, pc}
   18210:	mov	r0, #3
   18214:	mov	r1, r5
   18218:	add	r2, sp, #24
   1821c:	bl	11734 <__lxstat64@plt>
   18220:	cmp	r0, #0
   18224:	bne	18294 <close_stdout@@Base+0x5900>
   18228:	ldr	r3, [sp, #4]
   1822c:	ldr	r2, [r3, #4]
   18230:	cmn	r2, #-1073741822	; 0xc0000002
   18234:	beq	18280 <close_stdout@@Base+0x58ec>
   18238:	ldr	r2, [r3, #12]
   1823c:	cmn	r2, #-1073741822	; 0xc0000002
   18240:	ldreq	r0, [sp, #104]	; 0x68
   18244:	moveq	r2, r3
   18248:	ldreq	r1, [sp, #108]	; 0x6c
   1824c:	movne	r2, r3
   18250:	streq	r0, [r3, #8]
   18254:	streq	r1, [r3, #12]
   18258:	mov	r6, #3
   1825c:	b	18110 <close_stdout@@Base+0x577c>
   18260:	bne	182b4 <close_stdout@@Base+0x5920>
   18264:	ldr	r2, [pc, #112]	; 182dc <close_stdout@@Base+0x5948>
   18268:	mov	r1, #1
   1826c:	mov	r3, r7
   18270:	add	r2, pc, r2
   18274:	str	r1, [r2]
   18278:	str	r1, [r2, #4]
   1827c:	b	181f4 <close_stdout@@Base+0x5860>
   18280:	ldr	r2, [sp, #100]	; 0x64
   18284:	ldr	r1, [sp, #96]	; 0x60
   18288:	stm	r3, {r1, r2}
   1828c:	ldr	r2, [sp, #4]
   18290:	b	18258 <close_stdout@@Base+0x58c4>
   18294:	mvn	r3, #0
   18298:	b	181f4 <close_stdout@@Base+0x5860>
   1829c:	bl	115fc <__errno_location@plt>
   182a0:	mov	r2, #38	; 0x26
   182a4:	mvn	r3, #0
   182a8:	str	r2, [r0]
   182ac:	b	181f4 <close_stdout@@Base+0x5860>
   182b0:	bl	11458 <__stack_chk_fail@plt>
   182b4:	bl	115fc <__errno_location@plt>
   182b8:	ldr	r2, [r0]
   182bc:	cmp	r2, #38	; 0x26
   182c0:	bne	18264 <close_stdout@@Base+0x58d0>
   182c4:	b	18134 <close_stdout@@Base+0x57a0>
   182c8:	andeq	r3, r1, r8, asr pc
   182cc:	andeq	r0, r0, r4, asr r1
   182d0:	andeq	r4, r1, ip, asr #4
   182d4:	andeq	r4, r1, r0, lsl #4
   182d8:	andeq	r4, r1, r4, lsr #3
   182dc:	ldrdeq	r4, [r1], -r0
   182e0:	push	{r3, lr}
   182e4:	ldr	r0, [r0]
   182e8:	cmp	r0, #0
   182ec:	poplt	{r3, pc}
   182f0:	bl	11728 <close@plt>
   182f4:	cmp	r0, #0
   182f8:	popeq	{r3, pc}
   182fc:	ldr	r0, [pc, #24]	; 1831c <close_stdout@@Base+0x5988>
   18300:	mov	r2, #63	; 0x3f
   18304:	ldr	r1, [pc, #20]	; 18320 <close_stdout@@Base+0x598c>
   18308:	ldr	r3, [pc, #20]	; 18324 <close_stdout@@Base+0x5990>
   1830c:	add	r0, pc, r0
   18310:	add	r1, pc, r1
   18314:	add	r3, pc, r3
   18318:	bl	1174c <__assert_fail@plt>
   1831c:	andeq	r2, r0, r8, lsr r1
   18320:	andeq	r2, r0, r4, asr #2
   18324:	andeq	r2, r0, r8, lsl r1
   18328:	push	{r3, r4, r5, lr}
   1832c:	mov	r2, #18688	; 0x4900
   18330:	mov	r4, r0
   18334:	ldr	r0, [r0]
   18338:	bl	115cc <openat64@plt>
   1833c:	subs	r5, r0, #0
   18340:	blt	18358 <close_stdout@@Base+0x59c4>
   18344:	mov	r0, r4
   18348:	bl	182e0 <close_stdout@@Base+0x594c>
   1834c:	str	r5, [r4]
   18350:	mov	r0, #0
   18354:	pop	{r3, r4, r5, pc}
   18358:	mvn	r0, #0
   1835c:	pop	{r3, r4, r5, pc}
   18360:	ldr	r3, [pc, #784]	; 18678 <close_stdout@@Base+0x5ce4>
   18364:	ldr	r2, [pc, #784]	; 1867c <close_stdout@@Base+0x5ce8>
   18368:	add	r3, pc, r3
   1836c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18370:	sub	sp, sp, #20
   18374:	ldr	r7, [r3, r2]
   18378:	mov	r5, r0
   1837c:	ldr	r3, [r7]
   18380:	str	r3, [sp, #12]
   18384:	bl	11488 <chdir@plt>
   18388:	subs	r4, r0, #0
   1838c:	beq	183a4 <close_stdout@@Base+0x5a10>
   18390:	bl	115fc <__errno_location@plt>
   18394:	ldr	r3, [r0]
   18398:	mov	sl, r0
   1839c:	cmp	r3, #36	; 0x24
   183a0:	beq	183c0 <close_stdout@@Base+0x5a2c>
   183a4:	ldr	r2, [sp, #12]
   183a8:	mov	r0, r4
   183ac:	ldr	r3, [r7]
   183b0:	cmp	r2, r3
   183b4:	bne	185e4 <close_stdout@@Base+0x5c50>
   183b8:	add	sp, sp, #20
   183bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183c0:	mov	r0, r5
   183c4:	bl	115a8 <strlen@plt>
   183c8:	mvn	r3, #99	; 0x63
   183cc:	str	r3, [sp, #8]
   183d0:	cmp	r0, #0
   183d4:	add	r6, r5, r0
   183d8:	beq	18630 <close_stdout@@Base+0x5c9c>
   183dc:	cmp	r0, #4096	; 0x1000
   183e0:	bcc	18654 <close_stdout@@Base+0x5cc0>
   183e4:	ldrb	r3, [r5]
   183e8:	cmp	r3, #47	; 0x2f
   183ec:	movne	r4, r5
   183f0:	bne	184e0 <close_stdout@@Base+0x5b4c>
   183f4:	add	r3, r5, #1
   183f8:	mov	r2, #0
   183fc:	ldrb	ip, [r3]
   18400:	mov	r4, r3
   18404:	add	r2, r2, #1
   18408:	add	r3, r3, #1
   1840c:	cmp	ip, #47	; 0x2f
   18410:	beq	183fc <close_stdout@@Base+0x5a68>
   18414:	cmp	r2, #2
   18418:	beq	18470 <close_stdout@@Base+0x5adc>
   1841c:	add	r3, sp, #8
   18420:	ldr	r1, [pc, #600]	; 18680 <close_stdout@@Base+0x5cec>
   18424:	str	r3, [sp, #4]
   18428:	mov	r0, r3
   1842c:	add	r1, pc, r1
   18430:	bl	18328 <close_stdout@@Base+0x5994>
   18434:	ldr	r3, [sp, #4]
   18438:	cmp	r0, #0
   1843c:	bne	18598 <close_stdout@@Base+0x5c04>
   18440:	ldrb	r3, [r4]
   18444:	cmp	r3, #47	; 0x2f
   18448:	bne	184e0 <close_stdout@@Base+0x5b4c>
   1844c:	ldr	r3, [pc, #560]	; 18684 <close_stdout@@Base+0x5cf0>
   18450:	mov	r2, #161	; 0xa1
   18454:	ldr	r0, [pc, #556]	; 18688 <close_stdout@@Base+0x5cf4>
   18458:	ldr	r1, [pc, #556]	; 1868c <close_stdout@@Base+0x5cf8>
   1845c:	add	r3, pc, r3
   18460:	add	r0, pc, r0
   18464:	add	r3, r3, #12
   18468:	add	r1, pc, r1
   1846c:	bl	1174c <__assert_fail@plt>
   18470:	add	r0, r5, #3
   18474:	mov	r1, #47	; 0x2f
   18478:	rsb	r2, r0, r6
   1847c:	bl	11668 <memchr@plt>
   18480:	subs	r8, r0, #0
   18484:	beq	185b0 <close_stdout@@Base+0x5c1c>
   18488:	add	r3, sp, #8
   1848c:	mov	r2, #0
   18490:	mov	r1, r5
   18494:	strb	r2, [r8]
   18498:	mov	r0, r3
   1849c:	str	r3, [sp, #4]
   184a0:	bl	18328 <close_stdout@@Base+0x5994>
   184a4:	mov	r2, #47	; 0x2f
   184a8:	strb	r2, [r8]
   184ac:	ldr	r3, [sp, #4]
   184b0:	cmp	r0, #0
   184b4:	bne	18598 <close_stdout@@Base+0x5c04>
   184b8:	ldrb	r3, [r8, #1]
   184bc:	add	r4, r8, #1
   184c0:	cmp	r3, r2
   184c4:	bne	184e0 <close_stdout@@Base+0x5b4c>
   184c8:	add	r3, r8, #2
   184cc:	mov	r4, r3
   184d0:	add	r3, r3, #1
   184d4:	ldrb	r2, [r4]
   184d8:	cmp	r2, #47	; 0x2f
   184dc:	beq	184cc <close_stdout@@Base+0x5b38>
   184e0:	cmp	r6, r4
   184e4:	bcc	1860c <close_stdout@@Base+0x5c78>
   184e8:	add	r5, sp, #8
   184ec:	mov	r9, #47	; 0x2f
   184f0:	mov	r8, #0
   184f4:	rsb	r3, r4, r6
   184f8:	cmp	r3, #4096	; 0x1000
   184fc:	blt	18570 <close_stdout@@Base+0x5bdc>
   18500:	mov	r0, r4
   18504:	mov	r1, #47	; 0x2f
   18508:	mov	r2, #4096	; 0x1000
   1850c:	bl	115d8 <memrchr@plt>
   18510:	subs	fp, r0, #0
   18514:	beq	185b0 <close_stdout@@Base+0x5c1c>
   18518:	rsb	r3, r4, fp
   1851c:	strb	r8, [fp]
   18520:	cmp	r3, #4096	; 0x1000
   18524:	bge	185e8 <close_stdout@@Base+0x5c54>
   18528:	mov	r1, r4
   1852c:	mov	r0, r5
   18530:	bl	18328 <close_stdout@@Base+0x5994>
   18534:	mov	r3, r5
   18538:	strb	r9, [fp]
   1853c:	cmp	r0, #0
   18540:	bne	18598 <close_stdout@@Base+0x5c04>
   18544:	ldrb	r3, [fp, #1]
   18548:	add	r4, fp, #1
   1854c:	cmp	r3, #47	; 0x2f
   18550:	bne	184f4 <close_stdout@@Base+0x5b60>
   18554:	add	r3, fp, #2
   18558:	mov	r4, r3
   1855c:	add	r3, r3, #1
   18560:	ldrb	r2, [r4]
   18564:	cmp	r2, #47	; 0x2f
   18568:	beq	18558 <close_stdout@@Base+0x5bc4>
   1856c:	b	184f4 <close_stdout@@Base+0x5b60>
   18570:	cmp	r6, r4
   18574:	add	r3, sp, #8
   18578:	bls	185c0 <close_stdout@@Base+0x5c2c>
   1857c:	mov	r0, r3
   18580:	mov	r1, r4
   18584:	str	r3, [sp, #4]
   18588:	bl	18328 <close_stdout@@Base+0x5994>
   1858c:	ldr	r3, [sp, #4]
   18590:	cmp	r0, #0
   18594:	beq	185c0 <close_stdout@@Base+0x5c2c>
   18598:	ldr	r5, [sl]
   1859c:	mov	r0, r3
   185a0:	bl	182e0 <close_stdout@@Base+0x594c>
   185a4:	mvn	r4, #0
   185a8:	str	r5, [sl]
   185ac:	b	183a4 <close_stdout@@Base+0x5a10>
   185b0:	mov	r3, #36	; 0x24
   185b4:	mvn	r4, #0
   185b8:	str	r3, [sl]
   185bc:	b	183a4 <close_stdout@@Base+0x5a10>
   185c0:	ldr	r0, [sp, #8]
   185c4:	str	r3, [sp, #4]
   185c8:	bl	116e0 <fchdir@plt>
   185cc:	ldr	r3, [sp, #4]
   185d0:	subs	r4, r0, #0
   185d4:	bne	18598 <close_stdout@@Base+0x5c04>
   185d8:	mov	r0, r3
   185dc:	bl	182e0 <close_stdout@@Base+0x594c>
   185e0:	b	183a4 <close_stdout@@Base+0x5a10>
   185e4:	bl	11458 <__stack_chk_fail@plt>
   185e8:	ldr	r3, [pc, #160]	; 18690 <close_stdout@@Base+0x5cfc>
   185ec:	mov	r2, #178	; 0xb2
   185f0:	ldr	r0, [pc, #156]	; 18694 <close_stdout@@Base+0x5d00>
   185f4:	ldr	r1, [pc, #156]	; 18698 <close_stdout@@Base+0x5d04>
   185f8:	add	r3, pc, r3
   185fc:	add	r0, pc, r0
   18600:	add	r3, r3, #12
   18604:	add	r1, pc, r1
   18608:	bl	1174c <__assert_fail@plt>
   1860c:	ldr	r3, [pc, #136]	; 1869c <close_stdout@@Base+0x5d08>
   18610:	mov	r2, #162	; 0xa2
   18614:	ldr	r0, [pc, #132]	; 186a0 <close_stdout@@Base+0x5d0c>
   18618:	ldr	r1, [pc, #132]	; 186a4 <close_stdout@@Base+0x5d10>
   1861c:	add	r3, pc, r3
   18620:	add	r0, pc, r0
   18624:	add	r3, r3, #12
   18628:	add	r1, pc, r1
   1862c:	bl	1174c <__assert_fail@plt>
   18630:	ldr	r3, [pc, #112]	; 186a8 <close_stdout@@Base+0x5d14>
   18634:	mov	r2, #125	; 0x7d
   18638:	ldr	r0, [pc, #108]	; 186ac <close_stdout@@Base+0x5d18>
   1863c:	ldr	r1, [pc, #108]	; 186b0 <close_stdout@@Base+0x5d1c>
   18640:	add	r3, pc, r3
   18644:	add	r0, pc, r0
   18648:	add	r3, r3, #12
   1864c:	add	r1, pc, r1
   18650:	bl	1174c <__assert_fail@plt>
   18654:	ldr	r3, [pc, #88]	; 186b4 <close_stdout@@Base+0x5d20>
   18658:	mov	r2, #126	; 0x7e
   1865c:	ldr	r0, [pc, #84]	; 186b8 <close_stdout@@Base+0x5d24>
   18660:	ldr	r1, [pc, #84]	; 186bc <close_stdout@@Base+0x5d28>
   18664:	add	r3, pc, r3
   18668:	add	r0, pc, r0
   1866c:	add	r3, r3, #12
   18670:	add	r1, pc, r1
   18674:	bl	1174c <__assert_fail@plt>
   18678:	muleq	r1, r0, ip
   1867c:	andeq	r0, r0, r4, asr r1
   18680:	andeq	r2, r0, r0, asr r0
   18684:	ldrdeq	r1, [r0], -r0
   18688:	andeq	r2, r0, r0, lsr #32
   1868c:	andeq	r1, r0, ip, ror #31
   18690:	andeq	r1, r0, r4, lsr lr
   18694:	andeq	r1, r0, r0, lsr #29
   18698:	andeq	r1, r0, r0, asr lr
   1869c:	andeq	r1, r0, r0, lsl lr
   186a0:	andeq	r1, r0, ip, ror #28
   186a4:	andeq	r1, r0, ip, lsr #28
   186a8:	andeq	r1, r0, ip, ror #27
   186ac:	andeq	r1, r0, r4, lsr #28
   186b0:	andeq	r1, r0, r8, lsl #28
   186b4:	andeq	r1, r0, r8, asr #27
   186b8:	andeq	r1, r0, r8, lsl #28
   186bc:	andeq	r1, r0, r4, ror #27
   186c0:	push	{r4, r5, r6, lr}
   186c4:	sub	sp, sp, #8
   186c8:	mov	r4, r0
   186cc:	bl	11650 <fileno@plt>
   186d0:	cmp	r0, #0
   186d4:	mov	r0, r4
   186d8:	blt	18754 <close_stdout@@Base+0x5dc0>
   186dc:	bl	11554 <__freading@plt>
   186e0:	cmp	r0, #0
   186e4:	bne	18720 <close_stdout@@Base+0x5d8c>
   186e8:	mov	r0, r4
   186ec:	bl	18760 <close_stdout@@Base+0x5dcc>
   186f0:	cmp	r0, #0
   186f4:	beq	18750 <close_stdout@@Base+0x5dbc>
   186f8:	bl	115fc <__errno_location@plt>
   186fc:	ldr	r6, [r0]
   18700:	mov	r5, r0
   18704:	mov	r0, r4
   18708:	bl	11680 <fclose@plt>
   1870c:	cmp	r6, #0
   18710:	mvnne	r0, #0
   18714:	strne	r6, [r5]
   18718:	add	sp, sp, #8
   1871c:	pop	{r4, r5, r6, pc}
   18720:	mov	r0, r4
   18724:	bl	11650 <fileno@plt>
   18728:	mov	r1, #1
   1872c:	mov	r2, #0
   18730:	mov	r3, #0
   18734:	str	r1, [sp]
   18738:	bl	114c4 <lseek64@plt>
   1873c:	mvn	r2, #0
   18740:	mvn	r3, #0
   18744:	cmp	r1, r3
   18748:	cmpeq	r0, r2
   1874c:	bne	186e8 <close_stdout@@Base+0x5d54>
   18750:	mov	r0, r4
   18754:	add	sp, sp, #8
   18758:	pop	{r4, r5, r6, lr}
   1875c:	b	11680 <fclose@plt>
   18760:	push	{r4, lr}
   18764:	subs	r4, r0, #0
   18768:	sub	sp, sp, #8
   1876c:	beq	1877c <close_stdout@@Base+0x5de8>
   18770:	bl	11554 <__freading@plt>
   18774:	cmp	r0, #0
   18778:	bne	1878c <close_stdout@@Base+0x5df8>
   1877c:	mov	r0, r4
   18780:	add	sp, sp, #8
   18784:	pop	{r4, lr}
   18788:	b	113ec <fflush@plt>
   1878c:	ldr	r3, [r4]
   18790:	tst	r3, #256	; 0x100
   18794:	beq	1877c <close_stdout@@Base+0x5de8>
   18798:	mov	r3, #1
   1879c:	mov	r0, r4
   187a0:	str	r3, [sp]
   187a4:	mov	r2, #0
   187a8:	mov	r3, #0
   187ac:	bl	187c0 <close_stdout@@Base+0x5e2c>
   187b0:	mov	r0, r4
   187b4:	add	sp, sp, #8
   187b8:	pop	{r4, lr}
   187bc:	b	113ec <fflush@plt>
   187c0:	push	{r4, r5, r6, r7, lr}
   187c4:	sub	sp, sp, #20
   187c8:	ldmib	r0, {r1, ip}
   187cc:	mov	r6, r0
   187d0:	ldr	r4, [sp, #40]	; 0x28
   187d4:	cmp	ip, r1
   187d8:	beq	187f0 <close_stdout@@Base+0x5e5c>
   187dc:	str	r4, [sp, #40]	; 0x28
   187e0:	mov	r0, r6
   187e4:	add	sp, sp, #20
   187e8:	pop	{r4, r5, r6, r7, lr}
   187ec:	b	1168c <fseeko64@plt>
   187f0:	ldr	ip, [r0, #20]
   187f4:	ldr	r1, [r0, #16]
   187f8:	cmp	ip, r1
   187fc:	bne	187dc <close_stdout@@Base+0x5e48>
   18800:	ldr	r7, [r0, #36]	; 0x24
   18804:	cmp	r7, #0
   18808:	bne	187dc <close_stdout@@Base+0x5e48>
   1880c:	str	r2, [sp, #12]
   18810:	mvn	r5, #0
   18814:	str	r3, [sp, #8]
   18818:	bl	11650 <fileno@plt>
   1881c:	str	r4, [sp]
   18820:	mvn	r4, #0
   18824:	ldr	r2, [sp, #12]
   18828:	ldr	r3, [sp, #8]
   1882c:	bl	114c4 <lseek64@plt>
   18830:	mov	r2, r0
   18834:	mov	r3, r1
   18838:	cmp	r3, r5
   1883c:	cmpeq	r2, r4
   18840:	beq	18860 <close_stdout@@Base+0x5ecc>
   18844:	ldr	r1, [r6]
   18848:	mov	r0, r7
   1884c:	strd	r2, [r6, #80]	; 0x50
   18850:	bic	r3, r1, #16
   18854:	str	r3, [r6]
   18858:	add	sp, sp, #20
   1885c:	pop	{r4, r5, r6, r7, pc}
   18860:	mvn	r0, #0
   18864:	b	18858 <close_stdout@@Base+0x5ec4>
   18868:	ldr	r3, [pc, #316]	; 189ac <close_stdout@@Base+0x6018>
   1886c:	ldr	ip, [pc, #316]	; 189b0 <close_stdout@@Base+0x601c>
   18870:	add	r3, pc, r3
   18874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18878:	mov	r5, r2
   1887c:	ldr	r6, [r3, ip]
   18880:	sub	sp, sp, #52	; 0x34
   18884:	ldrb	r2, [r2]
   18888:	mov	r4, r0
   1888c:	mov	r7, r1
   18890:	ldr	r3, [r6]
   18894:	cmp	r2, #0
   18898:	strbeq	r2, [r0]
   1889c:	moveq	r0, r0
   188a0:	str	r3, [sp, #44]	; 0x2c
   188a4:	beq	188fc <close_stdout@@Base+0x5f68>
   188a8:	ldr	r9, [pc, #260]	; 189b4 <close_stdout@@Base+0x6020>
   188ac:	add	r9, pc, r9
   188b0:	ldr	r8, [r9]
   188b4:	cmp	r8, #0
   188b8:	beq	18928 <close_stdout@@Base+0x5f94>
   188bc:	cmp	r8, #0
   188c0:	blt	18920 <close_stdout@@Base+0x5f8c>
   188c4:	mov	r0, r5
   188c8:	bl	115a8 <strlen@plt>
   188cc:	add	r0, r0, #27
   188d0:	cmp	r0, #4032	; 0xfc0
   188d4:	bhi	18914 <close_stdout@@Base+0x5f80>
   188d8:	ldr	r3, [pc, #216]	; 189b8 <close_stdout@@Base+0x6024>
   188dc:	mov	r0, r4
   188e0:	str	r7, [sp]
   188e4:	mov	r1, #1
   188e8:	str	r5, [sp, #4]
   188ec:	mvn	r2, #0
   188f0:	add	r3, pc, r3
   188f4:	bl	11608 <__sprintf_chk@plt>
   188f8:	mov	r0, r4
   188fc:	ldr	r2, [sp, #44]	; 0x2c
   18900:	ldr	r3, [r6]
   18904:	cmp	r2, r3
   18908:	bne	189a8 <close_stdout@@Base+0x6014>
   1890c:	add	sp, sp, #52	; 0x34
   18910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18914:	bl	1153c <malloc@plt>
   18918:	subs	r4, r0, #0
   1891c:	bne	188d8 <close_stdout@@Base+0x5f44>
   18920:	mov	r0, #0
   18924:	b	188fc <close_stdout@@Base+0x5f68>
   18928:	ldr	r0, [pc, #140]	; 189bc <close_stdout@@Base+0x6028>
   1892c:	mov	r1, #18688	; 0x4900
   18930:	add	r0, pc, r0
   18934:	bl	11524 <open64@plt>
   18938:	subs	sl, r0, #0
   1893c:	blt	18998 <close_stdout@@Base+0x6004>
   18940:	ldr	r3, [pc, #120]	; 189c0 <close_stdout@@Base+0x602c>
   18944:	add	fp, sp, #12
   18948:	mov	r2, #32
   1894c:	mov	r1, #1
   18950:	add	r3, pc, r3
   18954:	str	r3, [sp, #4]
   18958:	ldr	r3, [pc, #100]	; 189c4 <close_stdout@@Base+0x6030>
   1895c:	mov	r0, fp
   18960:	str	sl, [sp]
   18964:	add	r3, pc, r3
   18968:	bl	11608 <__sprintf_chk@plt>
   1896c:	mov	r1, r8
   18970:	mov	r0, fp
   18974:	bl	11674 <access@plt>
   18978:	cmp	r0, #0
   1897c:	mov	r0, sl
   18980:	moveq	r3, #1
   18984:	mvnne	r3, #0
   18988:	str	r3, [r9]
   1898c:	bl	11728 <close@plt>
   18990:	ldr	r8, [r9]
   18994:	b	188bc <close_stdout@@Base+0x5f28>
   18998:	mvn	r3, #0
   1899c:	mov	r0, r8
   189a0:	str	r3, [r9]
   189a4:	b	188fc <close_stdout@@Base+0x5f68>
   189a8:	bl	11458 <__stack_chk_fail@plt>
   189ac:	andeq	r3, r1, r8, lsl #15
   189b0:	andeq	r0, r0, r4, asr r1
   189b4:	muleq	r1, ip, sl
   189b8:	ldrdeq	r1, [r0], -r0
   189bc:	andeq	r1, r0, r0, lsl #23
   189c0:	andeq	r1, r0, r4, lsl #23
   189c4:	andeq	r1, r0, ip, asr fp
   189c8:	push	{r3, r4, r5, lr}
   189cc:	mov	r2, #0
   189d0:	mov	r4, r1
   189d4:	mov	r1, #1
   189d8:	mov	r5, r0
   189dc:	bl	18ae0 <close_stdout@@Base+0x614c>
   189e0:	cmp	r0, #0
   189e4:	blt	18a24 <close_stdout@@Base+0x6090>
   189e8:	cmp	r4, #0
   189ec:	orrne	r2, r0, #1
   189f0:	biceq	r2, r0, #1
   189f4:	cmp	r2, r0
   189f8:	beq	18a1c <close_stdout@@Base+0x6088>
   189fc:	mov	r0, r5
   18a00:	mov	r1, #2
   18a04:	bl	18ae0 <close_stdout@@Base+0x614c>
   18a08:	cmn	r0, #1
   18a0c:	movne	r0, #0
   18a10:	moveq	r0, #1
   18a14:	rsb	r0, r0, #0
   18a18:	pop	{r3, r4, r5, pc}
   18a1c:	mov	r0, #0
   18a20:	pop	{r3, r4, r5, pc}
   18a24:	mvn	r0, #0
   18a28:	pop	{r3, r4, r5, pc}
   18a2c:	movw	r1, #1030	; 0x406
   18a30:	mov	r2, #0
   18a34:	b	18ae0 <close_stdout@@Base+0x614c>
   18a38:	push	{r1, r2, r3}
   18a3c:	ldr	r3, [pc, #88]	; 18a9c <close_stdout@@Base+0x6108>
   18a40:	ldr	r2, [pc, #88]	; 18aa0 <close_stdout@@Base+0x610c>
   18a44:	add	r3, pc, r3
   18a48:	push	{r4, lr}
   18a4c:	sub	sp, sp, #12
   18a50:	ldr	r4, [r3, r2]
   18a54:	ldr	r1, [sp, #20]
   18a58:	ldr	r3, [r4]
   18a5c:	ands	r2, r1, #64	; 0x40
   18a60:	ldrne	r2, [sp, #24]
   18a64:	str	r3, [sp, #4]
   18a68:	addne	r3, sp, #24
   18a6c:	strne	r3, [sp]
   18a70:	bl	11524 <open64@plt>
   18a74:	bl	18aa4 <close_stdout@@Base+0x6110>
   18a78:	ldr	r2, [sp, #4]
   18a7c:	ldr	r3, [r4]
   18a80:	cmp	r2, r3
   18a84:	bne	18a98 <close_stdout@@Base+0x6104>
   18a88:	add	sp, sp, #12
   18a8c:	pop	{r4, lr}
   18a90:	add	sp, sp, #12
   18a94:	bx	lr
   18a98:	bl	11458 <__stack_chk_fail@plt>
   18a9c:			; <UNDEFINED> instruction: 0x000135b4
   18aa0:	andeq	r0, r0, r4, asr r1
   18aa4:	cmp	r0, #2
   18aa8:	push	{r3, r4, r5, r6, r7, lr}
   18aac:	mov	r4, r0
   18ab0:	bhi	18ad8 <close_stdout@@Base+0x6144>
   18ab4:	bl	18c54 <close_stdout@@Base+0x62c0>
   18ab8:	mov	r7, r0
   18abc:	bl	115fc <__errno_location@plt>
   18ac0:	ldr	r6, [r0]
   18ac4:	mov	r5, r0
   18ac8:	mov	r0, r4
   18acc:	mov	r4, r7
   18ad0:	bl	11728 <close@plt>
   18ad4:	str	r6, [r5]
   18ad8:	mov	r0, r4
   18adc:	pop	{r3, r4, r5, r6, r7, pc}
   18ae0:	push	{r1, r2, r3}
   18ae4:	movw	ip, #1030	; 0x406
   18ae8:	ldr	r3, [pc, #336]	; 18c40 <close_stdout@@Base+0x62ac>
   18aec:	push	{r4, r5, r6, r7, r8, lr}
   18af0:	add	r3, pc, r3
   18af4:	ldr	lr, [pc, #328]	; 18c44 <close_stdout@@Base+0x62b0>
   18af8:	sub	sp, sp, #12
   18afc:	add	r2, sp, #40	; 0x28
   18b00:	mov	r6, r0
   18b04:	ldr	r1, [sp, #36]	; 0x24
   18b08:	ldr	r4, [r3, lr]
   18b0c:	cmp	r1, ip
   18b10:	str	r2, [sp]
   18b14:	ldr	r3, [r4]
   18b18:	str	r3, [sp, #4]
   18b1c:	bne	18ba0 <close_stdout@@Base+0x620c>
   18b20:	ldr	r8, [pc, #288]	; 18c48 <close_stdout@@Base+0x62b4>
   18b24:	add	r3, sp, #44	; 0x2c
   18b28:	str	r3, [sp]
   18b2c:	add	r8, pc, r8
   18b30:	ldr	r7, [sp, #40]	; 0x28
   18b34:	ldr	r3, [r8]
   18b38:	mov	r2, r7
   18b3c:	cmp	r3, #0
   18b40:	blt	18c2c <close_stdout@@Base+0x6298>
   18b44:	bl	115f0 <fcntl@plt>
   18b48:	subs	r5, r0, #0
   18b4c:	blt	18bb0 <close_stdout@@Base+0x621c>
   18b50:	ldr	r3, [pc, #244]	; 18c4c <close_stdout@@Base+0x62b8>
   18b54:	mov	r2, #1
   18b58:	add	r3, pc, r3
   18b5c:	str	r2, [r3]
   18b60:	cmp	r5, #0
   18b64:	blt	18b7c <close_stdout@@Base+0x61e8>
   18b68:	ldr	r3, [pc, #224]	; 18c50 <close_stdout@@Base+0x62bc>
   18b6c:	add	r3, pc, r3
   18b70:	ldr	r3, [r3]
   18b74:	cmn	r3, #1
   18b78:	beq	18be0 <close_stdout@@Base+0x624c>
   18b7c:	ldr	r2, [sp, #4]
   18b80:	mov	r0, r5
   18b84:	ldr	r3, [r4]
   18b88:	cmp	r2, r3
   18b8c:	bne	18c3c <close_stdout@@Base+0x62a8>
   18b90:	add	sp, sp, #12
   18b94:	pop	{r4, r5, r6, r7, r8, lr}
   18b98:	add	sp, sp, #12
   18b9c:	bx	lr
   18ba0:	ldr	r2, [sp, #40]	; 0x28
   18ba4:	bl	115f0 <fcntl@plt>
   18ba8:	mov	r5, r0
   18bac:	b	18b7c <close_stdout@@Base+0x61e8>
   18bb0:	bl	115fc <__errno_location@plt>
   18bb4:	ldr	r3, [r0]
   18bb8:	cmp	r3, #22
   18bbc:	bne	18b50 <close_stdout@@Base+0x61bc>
   18bc0:	mov	r0, r6
   18bc4:	mov	r2, r7
   18bc8:	mov	r1, #0
   18bcc:	bl	18ae0 <close_stdout@@Base+0x614c>
   18bd0:	subs	r5, r0, #0
   18bd4:	blt	18b7c <close_stdout@@Base+0x61e8>
   18bd8:	mvn	r3, #0
   18bdc:	str	r3, [r8]
   18be0:	mov	r0, r5
   18be4:	mov	r1, #1
   18be8:	bl	115f0 <fcntl@plt>
   18bec:	subs	r2, r0, #0
   18bf0:	blt	18c0c <close_stdout@@Base+0x6278>
   18bf4:	orr	r2, r2, #1
   18bf8:	mov	r0, r5
   18bfc:	mov	r1, #2
   18c00:	bl	115f0 <fcntl@plt>
   18c04:	cmn	r0, #1
   18c08:	bne	18b7c <close_stdout@@Base+0x61e8>
   18c0c:	bl	115fc <__errno_location@plt>
   18c10:	ldr	r7, [r0]
   18c14:	mov	r6, r0
   18c18:	mov	r0, r5
   18c1c:	mvn	r5, #0
   18c20:	bl	11728 <close@plt>
   18c24:	str	r7, [r6]
   18c28:	b	18b7c <close_stdout@@Base+0x61e8>
   18c2c:	mov	r1, #0
   18c30:	bl	18ae0 <close_stdout@@Base+0x614c>
   18c34:	mov	r5, r0
   18c38:	b	18b60 <close_stdout@@Base+0x61cc>
   18c3c:	bl	11458 <__stack_chk_fail@plt>
   18c40:	andeq	r3, r1, r8, lsl #10
   18c44:	andeq	r0, r0, r4, asr r1
   18c48:	andeq	r3, r1, r0, lsr #16
   18c4c:	strdeq	r3, [r1], -r4
   18c50:	andeq	r3, r1, r0, ror #15
   18c54:	mov	r1, #0
   18c58:	mov	r2, #3
   18c5c:	b	18ae0 <close_stdout@@Base+0x614c>
   18c60:	subs	r2, r1, #1
   18c64:	bxeq	lr
   18c68:	bcc	18e40 <close_stdout@@Base+0x64ac>
   18c6c:	cmp	r0, r1
   18c70:	bls	18e24 <close_stdout@@Base+0x6490>
   18c74:	tst	r1, r2
   18c78:	beq	18e30 <close_stdout@@Base+0x649c>
   18c7c:	clz	r3, r0
   18c80:	clz	r2, r1
   18c84:	sub	r3, r2, r3
   18c88:	rsbs	r3, r3, #31
   18c8c:	addne	r3, r3, r3, lsl #1
   18c90:	mov	r2, #0
   18c94:	addne	pc, pc, r3, lsl #2
   18c98:	nop	{0}
   18c9c:	cmp	r0, r1, lsl #31
   18ca0:	adc	r2, r2, r2
   18ca4:	subcs	r0, r0, r1, lsl #31
   18ca8:	cmp	r0, r1, lsl #30
   18cac:	adc	r2, r2, r2
   18cb0:	subcs	r0, r0, r1, lsl #30
   18cb4:	cmp	r0, r1, lsl #29
   18cb8:	adc	r2, r2, r2
   18cbc:	subcs	r0, r0, r1, lsl #29
   18cc0:	cmp	r0, r1, lsl #28
   18cc4:	adc	r2, r2, r2
   18cc8:	subcs	r0, r0, r1, lsl #28
   18ccc:	cmp	r0, r1, lsl #27
   18cd0:	adc	r2, r2, r2
   18cd4:	subcs	r0, r0, r1, lsl #27
   18cd8:	cmp	r0, r1, lsl #26
   18cdc:	adc	r2, r2, r2
   18ce0:	subcs	r0, r0, r1, lsl #26
   18ce4:	cmp	r0, r1, lsl #25
   18ce8:	adc	r2, r2, r2
   18cec:	subcs	r0, r0, r1, lsl #25
   18cf0:	cmp	r0, r1, lsl #24
   18cf4:	adc	r2, r2, r2
   18cf8:	subcs	r0, r0, r1, lsl #24
   18cfc:	cmp	r0, r1, lsl #23
   18d00:	adc	r2, r2, r2
   18d04:	subcs	r0, r0, r1, lsl #23
   18d08:	cmp	r0, r1, lsl #22
   18d0c:	adc	r2, r2, r2
   18d10:	subcs	r0, r0, r1, lsl #22
   18d14:	cmp	r0, r1, lsl #21
   18d18:	adc	r2, r2, r2
   18d1c:	subcs	r0, r0, r1, lsl #21
   18d20:	cmp	r0, r1, lsl #20
   18d24:	adc	r2, r2, r2
   18d28:	subcs	r0, r0, r1, lsl #20
   18d2c:	cmp	r0, r1, lsl #19
   18d30:	adc	r2, r2, r2
   18d34:	subcs	r0, r0, r1, lsl #19
   18d38:	cmp	r0, r1, lsl #18
   18d3c:	adc	r2, r2, r2
   18d40:	subcs	r0, r0, r1, lsl #18
   18d44:	cmp	r0, r1, lsl #17
   18d48:	adc	r2, r2, r2
   18d4c:	subcs	r0, r0, r1, lsl #17
   18d50:	cmp	r0, r1, lsl #16
   18d54:	adc	r2, r2, r2
   18d58:	subcs	r0, r0, r1, lsl #16
   18d5c:	cmp	r0, r1, lsl #15
   18d60:	adc	r2, r2, r2
   18d64:	subcs	r0, r0, r1, lsl #15
   18d68:	cmp	r0, r1, lsl #14
   18d6c:	adc	r2, r2, r2
   18d70:	subcs	r0, r0, r1, lsl #14
   18d74:	cmp	r0, r1, lsl #13
   18d78:	adc	r2, r2, r2
   18d7c:	subcs	r0, r0, r1, lsl #13
   18d80:	cmp	r0, r1, lsl #12
   18d84:	adc	r2, r2, r2
   18d88:	subcs	r0, r0, r1, lsl #12
   18d8c:	cmp	r0, r1, lsl #11
   18d90:	adc	r2, r2, r2
   18d94:	subcs	r0, r0, r1, lsl #11
   18d98:	cmp	r0, r1, lsl #10
   18d9c:	adc	r2, r2, r2
   18da0:	subcs	r0, r0, r1, lsl #10
   18da4:	cmp	r0, r1, lsl #9
   18da8:	adc	r2, r2, r2
   18dac:	subcs	r0, r0, r1, lsl #9
   18db0:	cmp	r0, r1, lsl #8
   18db4:	adc	r2, r2, r2
   18db8:	subcs	r0, r0, r1, lsl #8
   18dbc:	cmp	r0, r1, lsl #7
   18dc0:	adc	r2, r2, r2
   18dc4:	subcs	r0, r0, r1, lsl #7
   18dc8:	cmp	r0, r1, lsl #6
   18dcc:	adc	r2, r2, r2
   18dd0:	subcs	r0, r0, r1, lsl #6
   18dd4:	cmp	r0, r1, lsl #5
   18dd8:	adc	r2, r2, r2
   18ddc:	subcs	r0, r0, r1, lsl #5
   18de0:	cmp	r0, r1, lsl #4
   18de4:	adc	r2, r2, r2
   18de8:	subcs	r0, r0, r1, lsl #4
   18dec:	cmp	r0, r1, lsl #3
   18df0:	adc	r2, r2, r2
   18df4:	subcs	r0, r0, r1, lsl #3
   18df8:	cmp	r0, r1, lsl #2
   18dfc:	adc	r2, r2, r2
   18e00:	subcs	r0, r0, r1, lsl #2
   18e04:	cmp	r0, r1, lsl #1
   18e08:	adc	r2, r2, r2
   18e0c:	subcs	r0, r0, r1, lsl #1
   18e10:	cmp	r0, r1
   18e14:	adc	r2, r2, r2
   18e18:	subcs	r0, r0, r1
   18e1c:	mov	r0, r2
   18e20:	bx	lr
   18e24:	moveq	r0, #1
   18e28:	movne	r0, #0
   18e2c:	bx	lr
   18e30:	clz	r2, r1
   18e34:	rsb	r2, r2, #31
   18e38:	lsr	r0, r0, r2
   18e3c:	bx	lr
   18e40:	cmp	r0, #0
   18e44:	mvnne	r0, #0
   18e48:	b	18e6c <close_stdout@@Base+0x64d8>
   18e4c:	cmp	r1, #0
   18e50:	beq	18e40 <close_stdout@@Base+0x64ac>
   18e54:	push	{r0, r1, lr}
   18e58:	bl	18c60 <close_stdout@@Base+0x62cc>
   18e5c:	pop	{r1, r2, lr}
   18e60:	mul	r3, r2, r0
   18e64:	sub	r1, r1, r3
   18e68:	bx	lr
   18e6c:	push	{r1, lr}
   18e70:	mov	r0, #8
   18e74:	bl	113b0 <raise@plt>
   18e78:	pop	{r1, pc}
   18e7c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18e80:	mov	r7, r0
   18e84:	ldr	r6, [pc, #76]	; 18ed8 <close_stdout@@Base+0x6544>
   18e88:	mov	r8, r1
   18e8c:	ldr	r5, [pc, #72]	; 18edc <close_stdout@@Base+0x6548>
   18e90:	mov	r9, r2
   18e94:	add	r6, pc, r6
   18e98:	bl	1136c <fdopen@plt-0x20>
   18e9c:	add	r5, pc, r5
   18ea0:	rsb	r6, r5, r6
   18ea4:	asrs	r6, r6, #2
   18ea8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   18eac:	sub	r5, r5, #4
   18eb0:	mov	r4, #0
   18eb4:	add	r4, r4, #1
   18eb8:	ldr	r3, [r5, #4]!
   18ebc:	mov	r0, r7
   18ec0:	mov	r1, r8
   18ec4:	mov	r2, r9
   18ec8:	blx	r3
   18ecc:	cmp	r4, r6
   18ed0:	bne	18eb4 <close_stdout@@Base+0x6520>
   18ed4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18ed8:	andeq	r2, r1, ip, lsl #18
   18edc:	andeq	r2, r1, r0, lsl #18
   18ee0:	bx	lr
   18ee4:	ldr	r3, [pc, #28]	; 18f08 <close_stdout@@Base+0x6574>
   18ee8:	mov	r1, #0
   18eec:	ldr	r2, [pc, #24]	; 18f0c <close_stdout@@Base+0x6578>
   18ef0:	add	r3, pc, r3
   18ef4:	ldr	r3, [r3, r2]
   18ef8:	cmp	r3, #0
   18efc:	ldrne	r2, [r3]
   18f00:	moveq	r2, r3
   18f04:	b	11614 <__cxa_atexit@plt>
   18f08:	andeq	r3, r1, r8, lsl #2
   18f0c:	andeq	r0, r0, r0, ror r1

Disassembly of section .fini:

00018f10 <.fini>:
   18f10:	push	{r3, lr}
   18f14:	pop	{r3, pc}
