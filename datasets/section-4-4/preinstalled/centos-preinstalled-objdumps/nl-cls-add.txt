
centos-preinstalled/nl-cls-add:     file format elf32-littlearm


Disassembly of section .init:

00010bc8 <.init>:
   10bc8:	push	{r3, lr}
   10bcc:	bl	11164 <exit@plt+0x3f0>
   10bd0:	pop	{r3, pc}

Disassembly of section .plt:

00010bd4 <abort@plt-0x14>:
   10bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd8:	ldr	lr, [pc, #4]	; 10be4 <abort@plt-0x4>
   10bdc:	add	lr, pc, lr
   10be0:	ldr	pc, [lr, #8]!
   10be4:	andeq	r1, r1, ip, lsl r4

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1052]!	; 0x41c

00010bf4 <nl_cli_fatal@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1044]!	; 0x414

00010c00 <__libc_start_main@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1036]!	; 0x40c

00010c0c <__gmon_start__@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1028]!	; 0x404

00010c18 <__printf_chk@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #69632	; 0x11000
   10c20:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c24 <nl_cli_tc_parse_parent@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c30 <nl_cli_print_version@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c3c <nl_cli_alloc_socket@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #996]!	; 0x3e4

00010c48 <nl_cli_cls_parse_proto@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #988]!	; 0x3dc

00010c54 <free@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c60 <getopt_long@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #972]!	; 0x3cc

00010c6c <rtnl_tc_get_ifindex@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #964]!	; 0x3c4

00010c78 <rtnl_tc_get_ops@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #956]!	; 0x3bc

00010c84 <nl_cli_cls_alloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c90 <nl_cli_tc_parse_linktype@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #940]!	; 0x3ac

00010c9c <rtnl_cls_add@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #932]!	; 0x3a4

00010ca8 <nl_cli_tc_parse_overhead@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #924]!	; 0x39c

00010cb4 <nl_cli_link_alloc_cache@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #916]!	; 0x394

00010cc0 <nl_cli_tc_parse_mtu@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #908]!	; 0x38c

00010ccc <__stack_chk_fail@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #900]!	; 0x384

00010cd8 <nl_cli_tc_lookup@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #892]!	; 0x37c

00010ce4 <rtnl_tc_set_kind@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #884]!	; 0x374

00010cf0 <rtnl_tc_get_parent@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #876]!	; 0x36c

00010cfc <nl_object_dump@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #868]!	; 0x364

00010d08 <puts@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #860]!	; 0x35c

00010d14 <nl_geterror@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #852]!	; 0x354

00010d20 <nl_cli_parse_u32@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #844]!	; 0x34c

00010d2c <nl_cli_connect@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #836]!	; 0x344

00010d38 <nl_cli_tc_parse_mpu@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #828]!	; 0x33c

00010d44 <nl_cli_tc_parse_dev@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #820]!	; 0x334

00010d50 <__strdup@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #812]!	; 0x32c

00010d5c <nl_cli_tc_parse_handle@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #804]!	; 0x324

00010d68 <rtnl_cls_set_prio@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #796]!	; 0x31c

00010d74 <exit@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #788]!	; 0x314

Disassembly of section .text:

00010d80 <.text>:
   10d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d84:	movw	r3, #8604	; 0x219c
   10d88:	movw	r9, #8600	; 0x2198
   10d8c:	movt	r3, #2
   10d90:	movt	r9, #2
   10d94:	mov	r4, r1
   10d98:	ldr	r1, [r3]
   10d9c:	sub	sp, sp, #92	; 0x5c
   10da0:	ldr	r2, [r9]
   10da4:	mov	r7, #0
   10da8:	mov	r3, #1
   10dac:	str	r7, [sp, #36]	; 0x24
   10db0:	str	r3, [sp, #32]
   10db4:	mov	r5, r0
   10db8:	str	r2, [sp, #84]	; 0x54
   10dbc:	mov	r2, #1536	; 0x600
   10dc0:	str	r1, [sp, #60]	; 0x3c
   10dc4:	movw	r8, #8608	; 0x21a0
   10dc8:	str	r2, [sp, #8]
   10dcc:	movw	sl, #8616	; 0x21a8
   10dd0:	str	r7, [sp, #40]	; 0x28
   10dd4:	movt	r8, #2
   10dd8:	str	r7, [sp, #44]	; 0x2c
   10ddc:	movt	sl, #2
   10de0:	str	r7, [sp, #48]	; 0x30
   10de4:	add	r6, sp, #28
   10de8:	str	r7, [sp, #52]	; 0x34
   10dec:	str	r7, [sp, #12]
   10df0:	str	r7, [sp, #56]	; 0x38
   10df4:	str	r7, [sp, #64]	; 0x40
   10df8:	str	r7, [sp, #68]	; 0x44
   10dfc:	str	r7, [sp, #72]	; 0x48
   10e00:	str	r7, [sp, #76]	; 0x4c
   10e04:	str	r7, [sp, #80]	; 0x50
   10e08:	bl	10c3c <nl_cli_alloc_socket@plt>
   10e0c:	mov	r1, r7
   10e10:	str	r0, [sp, #16]
   10e14:	bl	10d2c <nl_cli_connect@plt>
   10e18:	ldr	r0, [sp, #16]
   10e1c:	bl	10cb4 <nl_cli_link_alloc_cache@plt>
   10e20:	str	r0, [sp, #20]
   10e24:	bl	10c84 <nl_cli_cls_alloc@plt>
   10e28:	mov	r7, r0
   10e2c:	str	r6, [sp]
   10e30:	movw	r2, #6004	; 0x1774
   10e34:	movw	r3, #8348	; 0x209c
   10e38:	movt	r2, #1
   10e3c:	movt	r3, #2
   10e40:	mov	r0, r5
   10e44:	mov	r1, r4
   10e48:	mov	fp, #0
   10e4c:	str	fp, [sp, #28]
   10e50:	bl	10c60 <getopt_long@plt>
   10e54:	cmn	r0, #1
   10e58:	beq	10fa0 <exit@plt+0x22c>
   10e5c:	movw	r3, #257	; 0x101
   10e60:	cmp	r0, r3
   10e64:	beq	10f80 <exit@plt+0x20c>
   10e68:	ble	10ea4 <exit@plt+0x130>
   10e6c:	movw	r3, #261	; 0x105
   10e70:	cmp	r0, r3
   10e74:	beq	10f60 <exit@plt+0x1ec>
   10e78:	bgt	10ed8 <exit@plt+0x164>
   10e7c:	movw	r3, #259	; 0x103
   10e80:	cmp	r0, r3
   10e84:	beq	10f1c <exit@plt+0x1a8>
   10e88:	cmp	r0, #260	; 0x104
   10e8c:	strlt	fp, [sp, #8]
   10e90:	blt	10e2c <exit@plt+0xb8>
   10e94:	mov	r0, r7
   10e98:	ldr	r1, [r8]
   10e9c:	bl	10d38 <nl_cli_tc_parse_mpu@plt>
   10ea0:	b	10e2c <exit@plt+0xb8>
   10ea4:	cmp	r0, #105	; 0x69
   10ea8:	beq	10f70 <exit@plt+0x1fc>
   10eac:	ble	10f08 <exit@plt+0x194>
   10eb0:	cmp	r0, #113	; 0x71
   10eb4:	beq	10f34 <exit@plt+0x1c0>
   10eb8:	cmp	r0, #118	; 0x76
   10ebc:	beq	10f2c <exit@plt+0x1b8>
   10ec0:	cmp	r0, #112	; 0x70
   10ec4:	bne	10e2c <exit@plt+0xb8>
   10ec8:	mov	r0, r7
   10ecc:	ldr	r1, [r8]
   10ed0:	bl	10c24 <nl_cli_tc_parse_parent@plt>
   10ed4:	b	10e2c <exit@plt+0xb8>
   10ed8:	movw	r3, #263	; 0x107
   10edc:	cmp	r0, r3
   10ee0:	beq	10f50 <exit@plt+0x1dc>
   10ee4:	blt	10f40 <exit@plt+0x1cc>
   10ee8:	cmp	r0, #264	; 0x108
   10eec:	bne	10e2c <exit@plt+0xb8>
   10ef0:	ldr	r0, [r8]
   10ef4:	bl	10d20 <nl_cli_parse_u32@plt>
   10ef8:	uxth	r1, r0
   10efc:	mov	r0, r7
   10f00:	bl	10d68 <rtnl_cls_set_prio@plt>
   10f04:	b	10e2c <exit@plt+0xb8>
   10f08:	cmp	r0, #100	; 0x64
   10f0c:	beq	10f8c <exit@plt+0x218>
   10f10:	cmp	r0, #104	; 0x68
   10f14:	bne	10e2c <exit@plt+0xb8>
   10f18:	bl	1125c <exit@plt+0x4e8>
   10f1c:	mov	r0, r7
   10f20:	ldr	r1, [r8]
   10f24:	bl	10cc0 <nl_cli_tc_parse_mtu@plt>
   10f28:	b	10e2c <exit@plt+0xb8>
   10f2c:	bl	10c30 <nl_cli_print_version@plt>
   10f30:	b	10e2c <exit@plt+0xb8>
   10f34:	mov	r3, #1
   10f38:	str	r3, [sl]
   10f3c:	b	10e2c <exit@plt+0xb8>
   10f40:	mov	r0, r7
   10f44:	ldr	r1, [r8]
   10f48:	bl	10c90 <nl_cli_tc_parse_linktype@plt>
   10f4c:	b	10e2c <exit@plt+0xb8>
   10f50:	mov	r0, r7
   10f54:	ldr	r1, [r8]
   10f58:	bl	10c48 <nl_cli_cls_parse_proto@plt>
   10f5c:	b	10e2c <exit@plt+0xb8>
   10f60:	mov	r0, r7
   10f64:	ldr	r1, [r8]
   10f68:	bl	10ca8 <nl_cli_tc_parse_overhead@plt>
   10f6c:	b	10e2c <exit@plt+0xb8>
   10f70:	ldr	r0, [r8]
   10f74:	bl	10d50 <__strdup@plt>
   10f78:	str	r0, [sp, #12]
   10f7c:	b	10e2c <exit@plt+0xb8>
   10f80:	mov	r2, #1024	; 0x400
   10f84:	str	r2, [sp, #8]
   10f88:	b	10e2c <exit@plt+0xb8>
   10f8c:	mov	r0, r7
   10f90:	ldr	r1, [sp, #20]
   10f94:	ldr	r2, [r8]
   10f98:	bl	10d44 <nl_cli_tc_parse_dev@plt>
   10f9c:	b	10e2c <exit@plt+0xb8>
   10fa0:	movw	r6, #8592	; 0x2190
   10fa4:	movt	r6, #2
   10fa8:	ldr	r3, [r6]
   10fac:	cmp	r5, r3
   10fb0:	ble	10f18 <exit@plt+0x1a4>
   10fb4:	mov	r0, r7
   10fb8:	bl	10c6c <rtnl_tc_get_ifindex@plt>
   10fbc:	cmp	r0, #0
   10fc0:	beq	11090 <exit@plt+0x31c>
   10fc4:	mov	r0, r7
   10fc8:	bl	10cf0 <rtnl_tc_get_parent@plt>
   10fcc:	cmp	r0, #0
   10fd0:	beq	110c4 <exit@plt+0x350>
   10fd4:	ldr	r3, [sp, #12]
   10fd8:	cmp	r3, #0
   10fdc:	beq	10ff8 <exit@plt+0x284>
   10fe0:	mov	r0, r7
   10fe4:	mov	r1, r3
   10fe8:	mov	r2, #1
   10fec:	bl	10d5c <nl_cli_tc_parse_handle@plt>
   10ff0:	ldr	r0, [sp, #12]
   10ff4:	bl	10c54 <free@plt>
   10ff8:	ldr	r3, [r6]
   10ffc:	mov	r0, r7
   11000:	add	r2, r3, #1
   11004:	str	r2, [r6]
   11008:	ldr	r6, [r4, r3, lsl #2]
   1100c:	mov	r1, r6
   11010:	bl	10ce4 <rtnl_tc_set_kind@plt>
   11014:	mov	r0, r7
   11018:	bl	10c78 <rtnl_tc_get_ops@plt>
   1101c:	subs	r8, r0, #0
   11020:	beq	1110c <exit@plt+0x398>
   11024:	mov	r0, r8
   11028:	bl	10cd8 <nl_cli_tc_lookup@plt>
   1102c:	subs	r8, r0, #0
   11030:	beq	110f4 <exit@plt+0x380>
   11034:	ldr	r3, [r8, #12]
   11038:	mov	r1, r5
   1103c:	mov	r2, r4
   11040:	mov	r0, r7
   11044:	blx	r3
   11048:	movw	r3, #8616	; 0x21a8
   1104c:	movt	r3, #2
   11050:	ldr	r3, [r3]
   11054:	cmp	r3, #0
   11058:	beq	110a4 <exit@plt+0x330>
   1105c:	ldr	r0, [sp, #16]
   11060:	mov	r1, r7
   11064:	ldr	r2, [sp, #8]
   11068:	bl	10c9c <rtnl_cls_add@plt>
   1106c:	cmp	r0, #0
   11070:	blt	110d8 <exit@plt+0x364>
   11074:	ldr	r2, [sp, #84]	; 0x54
   11078:	mov	r0, #0
   1107c:	ldr	r3, [r9]
   11080:	cmp	r2, r3
   11084:	bne	11124 <exit@plt+0x3b0>
   11088:	add	sp, sp, #92	; 0x5c
   1108c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11090:	movw	r1, #6016	; 0x1780
   11094:	mov	r0, #22
   11098:	movt	r1, #1
   1109c:	bl	10bf4 <nl_cli_fatal@plt>
   110a0:	b	10fc4 <exit@plt+0x250>
   110a4:	movw	r1, #6172	; 0x181c
   110a8:	mov	r0, #1
   110ac:	movt	r1, #1
   110b0:	bl	10c18 <__printf_chk@plt>
   110b4:	mov	r0, r7
   110b8:	add	r1, sp, #32
   110bc:	bl	10cfc <nl_object_dump@plt>
   110c0:	b	1105c <exit@plt+0x2e8>
   110c4:	movw	r1, #6064	; 0x17b0
   110c8:	mov	r0, #22
   110cc:	movt	r1, #1
   110d0:	bl	10bf4 <nl_cli_fatal@plt>
   110d4:	b	10fd4 <exit@plt+0x260>
   110d8:	bl	10d14 <nl_geterror@plt>
   110dc:	movw	r1, #6180	; 0x1824
   110e0:	movt	r1, #1
   110e4:	mov	r2, r0
   110e8:	mov	r0, #22
   110ec:	bl	10bf4 <nl_cli_fatal@plt>
   110f0:	b	11074 <exit@plt+0x300>
   110f4:	mov	r2, r6
   110f8:	movw	r1, #6136	; 0x17f8
   110fc:	mov	r0, #95	; 0x5f
   11100:	movt	r1, #1
   11104:	bl	10bf4 <nl_cli_fatal@plt>
   11108:	b	11034 <exit@plt+0x2c0>
   1110c:	movw	r1, #6108	; 0x17dc
   11110:	mov	r0, #2
   11114:	movt	r1, #1
   11118:	mov	r2, r6
   1111c:	bl	10bf4 <nl_cli_fatal@plt>
   11120:	b	11024 <exit@plt+0x2b0>
   11124:	bl	10ccc <__stack_chk_fail@plt>
   11128:	mov	fp, #0
   1112c:	mov	lr, #0
   11130:	pop	{r1}		; (ldr r1, [sp], #4)
   11134:	mov	r2, sp
   11138:	push	{r2}		; (str r2, [sp, #-4]!)
   1113c:	push	{r0}		; (str r0, [sp, #-4]!)
   11140:	ldr	ip, [pc, #16]	; 11158 <exit@plt+0x3e4>
   11144:	push	{ip}		; (str ip, [sp, #-4]!)
   11148:	ldr	r0, [pc, #12]	; 1115c <exit@plt+0x3e8>
   1114c:	ldr	r3, [pc, #12]	; 11160 <exit@plt+0x3ec>
   11150:	bl	10c00 <__libc_start_main@plt>
   11154:	bl	10be8 <abort@plt>
   11158:	ldrdeq	r1, [r1], -r8
   1115c:	andeq	r0, r1, r0, lsl #27
   11160:	andeq	r1, r1, r4, ror r2
   11164:	ldr	r3, [pc, #20]	; 11180 <exit@plt+0x40c>
   11168:	ldr	r2, [pc, #20]	; 11184 <exit@plt+0x410>
   1116c:	add	r3, pc, r3
   11170:	ldr	r2, [r3, r2]
   11174:	cmp	r2, #0
   11178:	bxeq	lr
   1117c:	b	10c0c <__gmon_start__@plt>
   11180:	andeq	r0, r1, ip, lsl #29
   11184:	muleq	r0, r4, r0
   11188:	push	{r3, lr}
   1118c:	movw	r0, #8588	; 0x218c
   11190:	ldr	r3, [pc, #36]	; 111bc <exit@plt+0x448>
   11194:	movt	r0, #2
   11198:	rsb	r3, r0, r3
   1119c:	cmp	r3, #6
   111a0:	popls	{r3, pc}
   111a4:	movw	r3, #0
   111a8:	movt	r3, #0
   111ac:	cmp	r3, #0
   111b0:	popeq	{r3, pc}
   111b4:	blx	r3
   111b8:	pop	{r3, pc}
   111bc:	andeq	r2, r2, pc, lsl #3
   111c0:	push	{r3, lr}
   111c4:	movw	r0, #8588	; 0x218c
   111c8:	movw	r3, #8588	; 0x218c
   111cc:	movt	r0, #2
   111d0:	movt	r3, #2
   111d4:	rsb	r3, r0, r3
   111d8:	asr	r3, r3, #2
   111dc:	add	r3, r3, r3, lsr #31
   111e0:	asrs	r1, r3, #1
   111e4:	popeq	{r3, pc}
   111e8:	movw	r2, #0
   111ec:	movt	r2, #0
   111f0:	cmp	r2, #0
   111f4:	popeq	{r3, pc}
   111f8:	blx	r2
   111fc:	pop	{r3, pc}
   11200:	push	{r4, lr}
   11204:	movw	r4, #8612	; 0x21a4
   11208:	movt	r4, #2
   1120c:	ldrb	r3, [r4]
   11210:	cmp	r3, #0
   11214:	popne	{r4, pc}
   11218:	bl	11188 <exit@plt+0x414>
   1121c:	mov	r3, #1
   11220:	strb	r3, [r4]
   11224:	pop	{r4, pc}
   11228:	movw	r0, #7868	; 0x1ebc
   1122c:	movt	r0, #2
   11230:	push	{r3, lr}
   11234:	ldr	r3, [r0]
   11238:	cmp	r3, #0
   1123c:	beq	11254 <exit@plt+0x4e0>
   11240:	movw	r3, #0
   11244:	movt	r3, #0
   11248:	cmp	r3, #0
   1124c:	beq	11254 <exit@plt+0x4e0>
   11250:	blx	r3
   11254:	pop	{r3, lr}
   11258:	b	111c0 <exit@plt+0x44c>
   1125c:	push	{r3, lr}
   11260:	movw	r0, #4844	; 0x12ec
   11264:	movt	r0, #1
   11268:	bl	10d08 <puts@plt>
   1126c:	mov	r0, #0
   11270:	bl	10d74 <exit@plt>
   11274:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11278:	mov	r7, r0
   1127c:	ldr	r6, [pc, #76]	; 112d0 <exit@plt+0x55c>
   11280:	mov	r8, r1
   11284:	ldr	r5, [pc, #72]	; 112d4 <exit@plt+0x560>
   11288:	mov	r9, r2
   1128c:	add	r6, pc, r6
   11290:	bl	10bc8 <abort@plt-0x20>
   11294:	add	r5, pc, r5
   11298:	rsb	r6, r5, r6
   1129c:	asrs	r6, r6, #2
   112a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   112a4:	sub	r5, r5, #4
   112a8:	mov	r4, #0
   112ac:	add	r4, r4, #1
   112b0:	ldr	r3, [r5, #4]!
   112b4:	mov	r0, r7
   112b8:	mov	r1, r8
   112bc:	mov	r2, r9
   112c0:	blx	r3
   112c4:	cmp	r4, r6
   112c8:	bne	112ac <exit@plt+0x538>
   112cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   112d0:	andeq	r0, r1, r4, lsr #24
   112d4:	andeq	r0, r1, r8, lsl ip
   112d8:	bx	lr

Disassembly of section .fini:

000112dc <.fini>:
   112dc:	push	{r3, lr}
   112e0:	pop	{r3, pc}
