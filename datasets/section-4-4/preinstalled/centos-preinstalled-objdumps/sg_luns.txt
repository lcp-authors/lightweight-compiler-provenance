
centos-preinstalled/sg_luns:     file format elf32-littlearm


Disassembly of section .init:

00010a94 <_init@@Base>:
   10a94:	push	{r3, lr}
   10a98:	bl	11950 <__snprintf_chk@plt+0xd40>
   10a9c:	pop	{r3, pc}

Disassembly of section .plt:

00010aa0 <calloc@plt-0x14>:
   10aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   10aa4:	ldr	lr, [pc, #4]	; 10ab0 <_init@@Base+0x1c>
   10aa8:	add	lr, pc, lr
   10aac:	ldr	pc, [lr, #8]!
   10ab0:	andeq	r3, r1, r0, asr r5

00010ab4 <calloc@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #77824	; 0x13000
   10abc:	ldr	pc, [ip, #1360]!	; 0x550

00010ac0 <sg_set_binary_mode@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #77824	; 0x13000
   10ac8:	ldr	pc, [ip, #1352]!	; 0x548

00010acc <dStrHex@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #77824	; 0x13000
   10ad4:	ldr	pc, [ip, #1344]!	; 0x540

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #77824	; 0x13000
   10ae0:	ldr	pc, [ip, #1336]!	; 0x538

00010ae4 <sg_cmds_close_device@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #77824	; 0x13000
   10aec:	ldr	pc, [ip, #1328]!	; 0x530

00010af0 <memcmp@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #77824	; 0x13000
   10af8:	ldr	pc, [ip, #1320]!	; 0x528

00010afc <__stack_chk_fail@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #77824	; 0x13000
   10b04:	ldr	pc, [ip, #1312]!	; 0x520

00010b08 <perror@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #77824	; 0x13000
   10b10:	ldr	pc, [ip, #1304]!	; 0x518

00010b14 <fwrite@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #77824	; 0x13000
   10b1c:	ldr	pc, [ip, #1296]!	; 0x510

00010b20 <dStrHexErr@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #77824	; 0x13000
   10b28:	ldr	pc, [ip, #1288]!	; 0x508

00010b2c <puts@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #77824	; 0x13000
   10b34:	ldr	pc, [ip, #1280]!	; 0x500

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #77824	; 0x13000
   10b40:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b44 <__ctype_toupper_loc@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #77824	; 0x13000
   10b4c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b50 <__gmon_start__@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #77824	; 0x13000
   10b58:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b5c <getopt_long@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #77824	; 0x13000
   10b64:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b68 <strlen@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #77824	; 0x13000
   10b70:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b74 <strchr@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #77824	; 0x13000
   10b7c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b80 <__strcat_chk@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #77824	; 0x13000
   10b88:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b8c <__isoc99_sscanf@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #77824	; 0x13000
   10b94:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b98 <memset@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #77824	; 0x13000
   10ba0:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba4 <putchar@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #77824	; 0x13000
   10bac:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb0 <strncpy@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #77824	; 0x13000
   10bb8:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bbc <__printf_chk@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #77824	; 0x13000
   10bc4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bc8 <__fprintf_chk@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #77824	; 0x13000
   10bd0:	ldr	pc, [ip, #1176]!	; 0x498

00010bd4 <sg_ll_report_luns@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #77824	; 0x13000
   10bdc:	ldr	pc, [ip, #1168]!	; 0x490

00010be0 <safe_strerror@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #77824	; 0x13000
   10be8:	ldr	pc, [ip, #1160]!	; 0x488

00010bec <sg_get_num@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #77824	; 0x13000
   10bf4:	ldr	pc, [ip, #1152]!	; 0x480

00010bf8 <sg_cmds_open_device@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #77824	; 0x13000
   10c00:	ldr	pc, [ip, #1144]!	; 0x478

00010c04 <abort@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #77824	; 0x13000
   10c0c:	ldr	pc, [ip, #1136]!	; 0x470

00010c10 <__snprintf_chk@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #77824	; 0x13000
   10c18:	ldr	pc, [ip, #1128]!	; 0x468

Disassembly of section .text:

00010c1c <.text>:
   10c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c20:	movw	r5, #16720	; 0x4150
   10c24:	movt	r5, #2
   10c28:	sub	sp, sp, #100	; 0x64
   10c2c:	mov	r3, #0
   10c30:	movw	r9, #16736	; 0x4160
   10c34:	ldr	r2, [r5]
   10c38:	movt	r9, #2
   10c3c:	add	r8, sp, #72	; 0x48
   10c40:	mov	r4, r3
   10c44:	mov	r6, r0
   10c48:	mov	r7, r1
   10c4c:	mov	fp, r3
   10c50:	mov	sl, r3
   10c54:	str	r3, [sp, #20]
   10c58:	str	r3, [sp, #16]
   10c5c:	str	r3, [sp, #24]
   10c60:	str	r3, [sp, #12]
   10c64:	str	r2, [sp, #92]	; 0x5c
   10c68:	str	r3, [sp, #28]
   10c6c:	str	r3, [sp, #68]	; 0x44
   10c70:	str	r8, [sp]
   10c74:	movw	r2, #11164	; 0x2b9c
   10c78:	movw	r3, #16524	; 0x408c
   10c7c:	movt	r2, #1
   10c80:	movt	r3, #2
   10c84:	mov	r0, r6
   10c88:	mov	r1, r7
   10c8c:	mov	ip, #0
   10c90:	str	ip, [sp, #72]	; 0x48
   10c94:	bl	10b5c <getopt_long@plt>
   10c98:	cmn	r0, #1
   10c9c:	beq	10ef0 <__snprintf_chk@plt+0x2e0>
   10ca0:	sub	r3, r0, #63	; 0x3f
   10ca4:	cmp	r3, #55	; 0x37
   10ca8:	ldrls	pc, [pc, r3, lsl #2]
   10cac:	b	10ec4 <__snprintf_chk@plt+0x2b4>
   10cb0:	andeq	r0, r1, ip, ror #27
   10cb4:	andeq	r0, r1, r4, asr #29
   10cb8:	andeq	r0, r1, r4, asr #29
   10cbc:	andeq	r0, r1, r4, asr #29
   10cc0:	andeq	r0, r1, r4, asr #29
   10cc4:	andeq	r0, r1, r4, asr #29
   10cc8:	andeq	r0, r1, r4, asr #29
   10ccc:	andeq	r0, r1, r4, asr #29
   10cd0:	andeq	r0, r1, r4, asr #29
   10cd4:	ldrdeq	r0, [r1], -ip
   10cd8:	andeq	r0, r1, r4, asr #29
   10cdc:	andeq	r0, r1, r4, asr #29
   10ce0:	andeq	r0, r1, r4, asr #29
   10ce4:	andeq	r0, r1, r4, asr #29
   10ce8:	andeq	r0, r1, r4, asr #29
   10cec:	andeq	r0, r1, r4, asr #29
   10cf0:	andeq	r0, r1, r4, asr #29
   10cf4:	andeq	r0, r1, r4, asr #29
   10cf8:	andeq	r0, r1, r4, asr #29
   10cfc:	andeq	r0, r1, r4, asr #29
   10d00:	andeq	r0, r1, r4, asr #29
   10d04:	andeq	r0, r1, r4, asr #29
   10d08:	andeq	r0, r1, r4, asr #29
   10d0c:	muleq	r1, ip, sp
   10d10:	andeq	r0, r1, r4, asr #29
   10d14:	andeq	r0, r1, r4, asr #29
   10d18:	andeq	r0, r1, r4, asr #29
   10d1c:	andeq	r0, r1, r4, asr #29
   10d20:	andeq	r0, r1, r4, asr #29
   10d24:	andeq	r0, r1, r4, asr #29
   10d28:	andeq	r0, r1, r4, asr #29
   10d2c:	andeq	r0, r1, r4, asr #29
   10d30:	andeq	r0, r1, r4, asr #29
   10d34:	andeq	r0, r1, r4, asr #29
   10d38:	andeq	r0, r1, r4, asr #29
   10d3c:	andeq	r0, r1, r4, asr #29
   10d40:	andeq	r0, r1, r4, asr #29
   10d44:	muleq	r1, r0, sp
   10d48:	andeq	r0, r1, r4, asr #29
   10d4c:	andeq	r0, r1, r4, asr #29
   10d50:	andeq	r0, r1, r4, asr #29
   10d54:	andeq	r0, r1, ip, ror #27
   10d58:	andeq	r0, r1, r4, asr #29
   10d5c:	andeq	r0, r1, r4, asr #29
   10d60:	andeq	r0, r1, r4, asr #29
   10d64:			; <UNDEFINED> instruction: 0x00010eb4
   10d68:	andeq	r0, r1, r8, ror lr
   10d6c:	andeq	r0, r1, r4, asr #29
   10d70:	andeq	r0, r1, r4, asr #29
   10d74:	andeq	r0, r1, r4, asr #29
   10d78:	andeq	r0, r1, r8, ror #28
   10d7c:	andeq	r0, r1, r8, asr lr
   10d80:	andeq	r0, r1, r8, lsl #28
   10d84:	andeq	r0, r1, r0, lsl #28
   10d88:	andeq	r0, r1, r4, asr #29
   10d8c:	strdeq	r0, [r1], -r8
   10d90:	mov	r2, #1
   10d94:	str	r2, [sp, #28]
   10d98:	b	10c70 <__snprintf_chk@plt+0x60>
   10d9c:	movw	r1, #16732	; 0x415c
   10da0:	movt	r1, #2
   10da4:	movw	r2, #11260	; 0x2bfc
   10da8:	movw	r3, #11276	; 0x2c0c
   10dac:	ldr	r0, [r1]
   10db0:	movt	r2, #1
   10db4:	movt	r3, #1
   10db8:	mov	r1, #1
   10dbc:	bl	10bc8 <__fprintf_chk@plt>
   10dc0:	mov	r0, #0
   10dc4:	ldr	r2, [sp, #92]	; 0x5c
   10dc8:	ldr	r3, [r5]
   10dcc:	cmp	r2, r3
   10dd0:	bne	1189c <__snprintf_chk@plt+0xc8c>
   10dd4:	add	sp, sp, #100	; 0x64
   10dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ddc:	ldr	r1, [sp, #12]
   10de0:	add	r1, r1, #1
   10de4:	str	r1, [sp, #12]
   10de8:	b	10c70 <__snprintf_chk@plt+0x60>
   10dec:	bl	11a48 <__snprintf_chk@plt+0xe38>
   10df0:	mov	r0, #0
   10df4:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   10df8:	add	fp, fp, #1
   10dfc:	b	10c70 <__snprintf_chk@plt+0x60>
   10e00:	ldr	r4, [r9]
   10e04:	b	10c70 <__snprintf_chk@plt+0x60>
   10e08:	movw	r1, #11228	; 0x2bdc
   10e0c:	ldr	r0, [r9]
   10e10:	movt	r1, #1
   10e14:	add	r2, sp, #68	; 0x44
   10e18:	bl	10b8c <__isoc99_sscanf@plt>
   10e1c:	cmp	r0, #1
   10e20:	bne	10e30 <__snprintf_chk@plt+0x220>
   10e24:	ldr	r3, [sp, #68]	; 0x44
   10e28:	cmp	r3, #255	; 0xff
   10e2c:	bls	10c70 <__snprintf_chk@plt+0x60>
   10e30:	movw	r3, #16732	; 0x415c
   10e34:	movt	r3, #2
   10e38:	movw	r0, #11232	; 0x2be0
   10e3c:	mov	r1, #1
   10e40:	ldr	r3, [r3]
   10e44:	movt	r0, #1
   10e48:	mov	r2, #27
   10e4c:	bl	10b14 <fwrite@plt>
   10e50:	mov	r0, #1
   10e54:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   10e58:	ldr	r1, [sp, #20]
   10e5c:	add	r1, r1, #1
   10e60:	str	r1, [sp, #20]
   10e64:	b	10c70 <__snprintf_chk@plt+0x60>
   10e68:	ldr	r3, [sp, #16]
   10e6c:	add	r3, r3, #1
   10e70:	str	r3, [sp, #16]
   10e74:	b	10c70 <__snprintf_chk@plt+0x60>
   10e78:	ldr	r0, [r9]
   10e7c:	bl	10bec <sg_get_num@plt>
   10e80:	cmp	r0, #1048576	; 0x100000
   10e84:	mov	sl, r0
   10e88:	bls	10c70 <__snprintf_chk@plt+0x60>
   10e8c:	movw	r3, #16732	; 0x415c
   10e90:	movt	r3, #2
   10e94:	movw	r2, #11180	; 0x2bac
   10e98:	mov	r1, #1
   10e9c:	ldr	r0, [r3]
   10ea0:	movt	r2, #1
   10ea4:	mov	r3, #1048576	; 0x100000
   10ea8:	bl	10bc8 <__fprintf_chk@plt>
   10eac:	mov	r0, #1
   10eb0:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   10eb4:	ldr	r2, [sp, #24]
   10eb8:	add	r2, r2, #1
   10ebc:	str	r2, [sp, #24]
   10ec0:	b	10c70 <__snprintf_chk@plt+0x60>
   10ec4:	movw	r1, #16732	; 0x415c
   10ec8:	movt	r1, #2
   10ecc:	mov	r3, r0
   10ed0:	movw	r2, #11292	; 0x2c1c
   10ed4:	ldr	r0, [r1]
   10ed8:	movt	r2, #1
   10edc:	mov	r1, #1
   10ee0:	bl	10bc8 <__fprintf_chk@plt>
   10ee4:	bl	11a48 <__snprintf_chk@plt+0xe38>
   10ee8:	mov	r0, #1
   10eec:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   10ef0:	movw	r9, #16728	; 0x4158
   10ef4:	movt	r9, #2
   10ef8:	ldr	r2, [r9]
   10efc:	cmp	r6, r2
   10f00:	bgt	1106c <__snprintf_chk@plt+0x45c>
   10f04:	cmp	r4, #0
   10f08:	beq	11878 <__snprintf_chk@plt+0xc68>
   10f0c:	mov	r6, #0
   10f10:	str	r6, [sp, #84]	; 0x54
   10f14:	str	r6, [sp, #88]	; 0x58
   10f18:	bl	10b44 <__ctype_toupper_loc@plt>
   10f1c:	ldrb	r3, [r4]
   10f20:	ldr	r7, [r0]
   10f24:	ldr	r3, [r7, r3, lsl #2]
   10f28:	cmp	r3, #76	; 0x4c
   10f2c:	beq	11530 <__snprintf_chk@plt+0x920>
   10f30:	mov	r0, r4
   10f34:	bl	10b68 <strlen@plt>
   10f38:	add	r3, r4, r0
   10f3c:	str	r0, [sp, #64]	; 0x40
   10f40:	ldrb	r3, [r3, #-1]
   10f44:	ldr	r9, [r7, r3, lsl #2]
   10f48:	cmp	r9, #76	; 0x4c
   10f4c:	beq	11434 <__snprintf_chk@plt+0x824>
   10f50:	subs	r3, r9, #87	; 0x57
   10f54:	mov	sl, r6
   10f58:	rsbs	r9, r3, #0
   10f5c:	adcs	r9, r9, r3
   10f60:	ldrb	r3, [r4]
   10f64:	cmp	r3, #48	; 0x30
   10f68:	beq	11440 <__snprintf_chk@plt+0x830>
   10f6c:	mov	r0, r4
   10f70:	mov	r1, #32
   10f74:	bl	10b74 <strchr@plt>
   10f78:	cmp	r0, #0
   10f7c:	beq	11454 <__snprintf_chk@plt+0x844>
   10f80:	mov	r6, #0
   10f84:	movw	r1, #11428	; 0x2ca4
   10f88:	mov	r0, r4
   10f8c:	movt	r1, #1
   10f90:	mov	r2, r8
   10f94:	add	r3, sp, #64	; 0x40
   10f98:	bl	10b8c <__isoc99_sscanf@plt>
   10f9c:	cmp	r0, #1
   10fa0:	bne	114a4 <__snprintf_chk@plt+0x894>
   10fa4:	ldr	r2, [sp, #72]	; 0x48
   10fa8:	add	r7, sp, #84	; 0x54
   10fac:	ldr	r3, [sp, #64]	; 0x40
   10fb0:	strb	r2, [r7, r6]
   10fb4:	add	r6, r6, #1
   10fb8:	cmp	r6, #8
   10fbc:	add	r4, r4, r3
   10fc0:	bne	10f84 <__snprintf_chk@plt+0x374>
   10fc4:	mov	r3, #0
   10fc8:	orr	r3, r3, r9
   10fcc:	orrs	r3, r3, fp
   10fd0:	bne	114d4 <__snprintf_chk@plt+0x8c4>
   10fd4:	cmp	sl, #0
   10fd8:	beq	113dc <__snprintf_chk@plt+0x7cc>
   10fdc:	ldr	r3, [sp, #12]
   10fe0:	cmp	r3, #1
   10fe4:	ble	11624 <__snprintf_chk@plt+0xa14>
   10fe8:	ldrb	r2, [sp, #90]	; 0x5a
   10fec:	add	r1, r7, #2
   10ff0:	ldrb	r3, [sp, #91]	; 0x5b
   10ff4:	add	ip, sp, #80	; 0x50
   10ff8:	mov	lr, r1
   10ffc:	add	r2, r3, r2, lsl #8
   11000:	asr	r3, r2, #31
   11004:	ldrb	r4, [lr, #2]
   11008:	lsl	r1, r3, #16
   1100c:	ldrb	r3, [lr, #3]
   11010:	orr	r1, r1, r2, lsr #16
   11014:	lsl	r0, r2, #16
   11018:	sub	lr, lr, #2
   1101c:	add	r4, r3, r4, lsl #8
   11020:	adds	r2, r0, r4
   11024:	adc	r3, r1, r4, asr #31
   11028:	cmp	lr, ip
   1102c:	bne	11004 <__snprintf_chk@plt+0x3f4>
   11030:	movw	r1, #11544	; 0x2d18
   11034:	mov	r0, #1
   11038:	movt	r1, #1
   1103c:	bl	10bbc <__printf_chk@plt>
   11040:	movw	r0, #11876	; 0x2e64
   11044:	movt	r0, #1
   11048:	bl	10b2c <puts@plt>
   1104c:	mov	r1, r7
   11050:	ldr	r2, [sp, #12]
   11054:	mov	r3, fp
   11058:	movw	r0, #12212	; 0x2fb4
   1105c:	movt	r0, #1
   11060:	bl	12074 <__snprintf_chk@plt+0x1464>
   11064:	mov	r0, #0
   11068:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   1106c:	add	r3, r2, #1
   11070:	ldr	ip, [r7, r2, lsl #2]
   11074:	cmp	r6, r3
   11078:	str	r3, [r9]
   1107c:	ble	110c0 <__snprintf_chk@plt+0x4b0>
   11080:	movw	r4, #16732	; 0x415c
   11084:	movt	r4, #2
   11088:	ldr	r3, [r7, r3, lsl #2]
   1108c:	movw	r2, #11328	; 0x2c40
   11090:	ldr	r0, [r4]
   11094:	movt	r2, #1
   11098:	mov	r1, #1
   1109c:	bl	10bc8 <__fprintf_chk@plt>
   110a0:	ldr	r3, [r9]
   110a4:	add	r3, r3, #1
   110a8:	str	r3, [r9]
   110ac:	cmp	r6, r3
   110b0:	bgt	11088 <__snprintf_chk@plt+0x478>
   110b4:	bl	11a48 <__snprintf_chk@plt+0xe38>
   110b8:	mov	r0, #1
   110bc:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   110c0:	cmp	r4, #0
   110c4:	bne	10f0c <__snprintf_chk@plt+0x2fc>
   110c8:	cmp	ip, #0
   110cc:	beq	11878 <__snprintf_chk@plt+0xc68>
   110d0:	ldr	r1, [sp, #20]
   110d4:	cmp	r1, #0
   110d8:	beq	110f4 <__snprintf_chk@plt+0x4e4>
   110dc:	mov	r0, #1
   110e0:	str	ip, [sp, #8]
   110e4:	bl	10ac0 <sg_set_binary_mode@plt>
   110e8:	ldr	ip, [sp, #8]
   110ec:	cmp	r0, #0
   110f0:	blt	117b8 <__snprintf_chk@plt+0xba8>
   110f4:	mov	r0, ip
   110f8:	mov	r1, #0
   110fc:	mov	r2, fp
   11100:	str	ip, [sp, #8]
   11104:	bl	10bf8 <sg_cmds_open_device@plt>
   11108:	cmp	r0, #0
   1110c:	str	r0, [sp, #40]	; 0x28
   11110:	blt	116cc <__snprintf_chk@plt+0xabc>
   11114:	cmp	sl, #0
   11118:	mov	r0, #1
   1111c:	moveq	sl, #8192	; 0x2000
   11120:	mov	r1, sl
   11124:	bl	10ab4 <calloc@plt>
   11128:	subs	r7, r0, #0
   1112c:	beq	11708 <__snprintf_chk@plt+0xaf8>
   11130:	str	fp, [sp, #4]
   11134:	mov	r4, #1
   11138:	ldr	r0, [sp, #40]	; 0x28
   1113c:	mov	r2, r7
   11140:	str	r4, [sp]
   11144:	mov	r3, sl
   11148:	ldr	r1, [sp, #68]	; 0x44
   1114c:	bl	10bd4 <sg_ll_report_luns@plt>
   11150:	cmp	r0, #0
   11154:	str	r0, [sp, #32]
   11158:	bne	115bc <__snprintf_chk@plt+0x9ac>
   1115c:	ldr	r2, [sp, #20]
   11160:	ldrb	r3, [r7, #1]
   11164:	cmp	r2, #0
   11168:	ldrb	r2, [r7]
   1116c:	ldrb	r6, [r7, #2]
   11170:	lsl	r3, r3, #16
   11174:	movne	r4, r0
   11178:	add	r2, r3, r2, lsl #24
   1117c:	ldrb	r3, [r7, #3]
   11180:	add	r6, r2, r6, lsl #8
   11184:	add	r6, r6, r3
   11188:	addne	r6, r6, #8
   1118c:	bne	1136c <__snprintf_chk@plt+0x75c>
   11190:	ldr	r3, [sp, #12]
   11194:	cmp	r3, #1
   11198:	beq	118a0 <__snprintf_chk@plt+0xc90>
   1119c:	cmp	r6, #0
   111a0:	add	r8, r6, #7
   111a4:	ldr	r1, [sp, #16]
   111a8:	movge	r9, r6
   111ac:	movlt	r9, r8
   111b0:	cmp	r1, #0
   111b4:	asr	r9, r9, #3
   111b8:	bne	111f0 <__snprintf_chk@plt+0x5e0>
   111bc:	movw	r2, #11156	; 0x2b94
   111c0:	cmp	r9, #1
   111c4:	movt	r2, #1
   111c8:	movw	r3, #11152	; 0x2b90
   111cc:	movw	r1, #11984	; 0x2ed0
   111d0:	movt	r3, #1
   111d4:	mov	r0, r4
   111d8:	movne	r3, r2
   111dc:	movt	r1, #1
   111e0:	str	r3, [sp]
   111e4:	mov	r2, r6
   111e8:	mov	r3, r9
   111ec:	bl	10bbc <__printf_chk@plt>
   111f0:	cmp	sl, r8
   111f4:	movgt	r4, #0
   111f8:	bgt	11250 <__snprintf_chk@plt+0x640>
   111fc:	sub	r9, sl, #8
   11200:	movw	r3, #16732	; 0x415c
   11204:	add	r2, r9, #7
   11208:	cmp	r9, #0
   1120c:	movt	r3, #2
   11210:	movw	r1, #11160	; 0x2b98
   11214:	movlt	r9, r2
   11218:	movt	r1, #1
   1121c:	asr	r9, r9, #3
   11220:	ldr	r0, [r3]
   11224:	cmp	r9, #1
   11228:	movw	r3, #9948	; 0x26dc
   1122c:	movt	r3, #1
   11230:	movw	r2, #12036	; 0x2f04
   11234:	movt	r2, #1
   11238:	mov	r4, #1
   1123c:	moveq	r1, r3
   11240:	mov	r3, r9
   11244:	str	r1, [sp]
   11248:	mov	r1, #1
   1124c:	bl	10bc8 <__fprintf_chk@plt>
   11250:	cmp	fp, #1
   11254:	ble	11290 <__snprintf_chk@plt+0x680>
   11258:	movw	r3, #16732	; 0x415c
   1125c:	movt	r3, #2
   11260:	mov	r1, #1
   11264:	mov	r2, #24
   11268:	movw	r0, #12100	; 0x2f44
   1126c:	ldr	r3, [r3]
   11270:	movt	r0, #1
   11274:	bl	10b14 <fwrite@plt>
   11278:	cmp	r4, #0
   1127c:	addeq	r1, r6, #8
   11280:	mov	r0, r7
   11284:	movne	r1, sl
   11288:	mov	r2, #1
   1128c:	bl	10b20 <dStrHexErr@plt>
   11290:	add	r6, r7, #8
   11294:	mov	r8, #0
   11298:	str	fp, [sp, #20]
   1129c:	ldr	fp, [sp, #28]
   112a0:	str	r5, [sp, #28]
   112a4:	cmp	r8, r9
   112a8:	rsb	sl, r7, r6
   112ac:	bge	11780 <__snprintf_chk@plt+0xb70>
   112b0:	ldr	r2, [sp, #16]
   112b4:	cmp	r2, #0
   112b8:	bne	112d4 <__snprintf_chk@plt+0x6c4>
   112bc:	cmp	r8, #0
   112c0:	beq	118fc <__snprintf_chk@plt+0xcec>
   112c4:	movw	r1, #12164	; 0x2f84
   112c8:	mov	r0, #1
   112cc:	movt	r1, #1
   112d0:	bl	10bbc <__printf_chk@plt>
   112d4:	mov	r2, #0
   112d8:	add	sl, r7, sl
   112dc:	mov	r3, r2
   112e0:	str	r2, [sp, #64]	; 0x40
   112e4:	ldrb	r2, [sl, r3]
   112e8:	movw	r1, #12172	; 0x2f8c
   112ec:	mov	r0, #1
   112f0:	movt	r1, #1
   112f4:	bl	10bbc <__printf_chk@plt>
   112f8:	ldr	r3, [sp, #64]	; 0x40
   112fc:	add	r3, r3, #1
   11300:	str	r3, [sp, #64]	; 0x40
   11304:	cmp	r3, #7
   11308:	ble	112e4 <__snprintf_chk@plt+0x6d4>
   1130c:	ldr	r3, [sp, #24]
   11310:	cmp	r3, #0
   11314:	beq	113c0 <__snprintf_chk@plt+0x7b0>
   11318:	ldrb	r2, [r6, #6]
   1131c:	add	r1, r6, #4
   11320:	ldrb	r3, [r6, #7]
   11324:	sub	ip, r6, #2
   11328:	add	r2, r3, r2, lsl #8
   1132c:	asr	r3, r2, #31
   11330:	cmp	ip, r1
   11334:	beq	1139c <__snprintf_chk@plt+0x78c>
   11338:	ldrb	r0, [r1]
   1133c:	lsl	r5, r3, #16
   11340:	ldrb	r3, [r1, #1]
   11344:	orr	r5, r5, r2, lsr #16
   11348:	lsl	r4, r2, #16
   1134c:	sub	r1, r1, #2
   11350:	add	r0, r3, r0, lsl #8
   11354:	adds	r2, r4, r0
   11358:	adc	r3, r5, r0, asr #31
   1135c:	b	11330 <__snprintf_chk@plt+0x720>
   11360:	ldrb	r0, [r7, r4]
   11364:	add	r4, r4, #1
   11368:	bl	10ba4 <putchar@plt>
   1136c:	cmp	r6, r4
   11370:	bgt	11360 <__snprintf_chk@plt+0x750>
   11374:	mov	r0, r7
   11378:	bl	10ad8 <free@plt>
   1137c:	ldr	r0, [sp, #40]	; 0x28
   11380:	bl	10ae4 <sg_cmds_close_device@plt>
   11384:	cmp	r0, #0
   11388:	blt	11814 <__snprintf_chk@plt+0xc04>
   1138c:	ldr	r0, [sp, #32]
   11390:	cmp	r0, #0
   11394:	movlt	r0, #99	; 0x63
   11398:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   1139c:	ldr	r1, [sp, #12]
   113a0:	cmp	r1, #1
   113a4:	movwgt	r1, #12180	; 0x2f94
   113a8:	movwle	r1, #12196	; 0x2fa4
   113ac:	movgt	r0, #1
   113b0:	movtgt	r1, #1
   113b4:	movle	r0, #1
   113b8:	movtle	r1, #1
   113bc:	bl	10bbc <__printf_chk@plt>
   113c0:	mov	r0, #10
   113c4:	bl	10ba4 <putchar@plt>
   113c8:	cmp	fp, #0
   113cc:	bne	11514 <__snprintf_chk@plt+0x904>
   113d0:	add	r8, r8, #1
   113d4:	add	r6, r6, #8
   113d8:	b	112a4 <__snprintf_chk@plt+0x694>
   113dc:	cmp	r9, #0
   113e0:	beq	11040 <__snprintf_chk@plt+0x430>
   113e4:	ldr	r2, [sp, #12]
   113e8:	cmp	r2, #1
   113ec:	ble	11730 <__snprintf_chk@plt+0xb20>
   113f0:	add	r1, r7, #1
   113f4:	mov	r2, #0
   113f8:	mov	r3, #0
   113fc:	ldrb	ip, [r1, #-1]
   11400:	ldrb	r0, [r1], #2
   11404:	orr	r0, r0, ip, lsl #8
   11408:	lsl	r0, r0, sl
   1140c:	add	sl, sl, #16
   11410:	cmp	sl, #64	; 0x40
   11414:	orr	r2, r2, r0
   11418:	orr	r3, r3, r0, asr #31
   1141c:	bne	113fc <__snprintf_chk@plt+0x7ec>
   11420:	movw	r1, #11720	; 0x2dc8
   11424:	mov	r0, #1
   11428:	movt	r1, #1
   1142c:	bl	10bbc <__printf_chk@plt>
   11430:	b	11040 <__snprintf_chk@plt+0x430>
   11434:	mov	r9, r6
   11438:	mov	sl, #1
   1143c:	b	10f60 <__snprintf_chk@plt+0x350>
   11440:	ldrb	r3, [r4, #1]
   11444:	ldr	r3, [r7, r3, lsl #2]
   11448:	cmp	r3, #88	; 0x58
   1144c:	addeq	r4, r4, #2
   11450:	b	10f6c <__snprintf_chk@plt+0x35c>
   11454:	mov	r0, r4
   11458:	mov	r1, #9
   1145c:	bl	10b74 <strchr@plt>
   11460:	cmp	r0, #0
   11464:	bne	10f80 <__snprintf_chk@plt+0x370>
   11468:	mov	r6, r0
   1146c:	b	11488 <__snprintf_chk@plt+0x878>
   11470:	ldr	r3, [sp, #72]	; 0x48
   11474:	add	r7, sp, #84	; 0x54
   11478:	strb	r3, [r7, r6]
   1147c:	add	r6, r6, #1
   11480:	cmp	r6, #8
   11484:	beq	10fc4 <__snprintf_chk@plt+0x3b4>
   11488:	movw	r1, #11436	; 0x2cac
   1148c:	add	r0, r4, r6, lsl #1
   11490:	movt	r1, #1
   11494:	mov	r2, r8
   11498:	bl	10b8c <__isoc99_sscanf@plt>
   1149c:	cmp	r0, #1
   114a0:	beq	11470 <__snprintf_chk@plt+0x860>
   114a4:	cmp	r6, #0
   114a8:	bne	117b0 <__snprintf_chk@plt+0xba0>
   114ac:	movw	r3, #16732	; 0x415c
   114b0:	movt	r3, #2
   114b4:	movw	r0, #11440	; 0x2cb0
   114b8:	mov	r1, #1
   114bc:	ldr	r3, [r3]
   114c0:	movt	r0, #1
   114c4:	mov	r2, #51	; 0x33
   114c8:	bl	10b14 <fwrite@plt>
   114cc:	mov	r0, #1
   114d0:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   114d4:	movw	r1, #11492	; 0x2ce4
   114d8:	mov	r0, #1
   114dc:	movt	r1, #1
   114e0:	mov	r4, #0
   114e4:	bl	10bbc <__printf_chk@plt>
   114e8:	mov	r0, #1
   114ec:	ldrb	r2, [r7, r4]
   114f0:	movw	r1, #11536	; 0x2d10
   114f4:	add	r4, r4, r0
   114f8:	movt	r1, #1
   114fc:	bl	10bbc <__printf_chk@plt>
   11500:	cmp	r4, #8
   11504:	bne	114e8 <__snprintf_chk@plt+0x8d8>
   11508:	mov	r0, #10
   1150c:	bl	10ba4 <putchar@plt>
   11510:	b	10fd4 <__snprintf_chk@plt+0x3c4>
   11514:	movw	r0, #12208	; 0x2fb0
   11518:	mov	r1, r6
   1151c:	movt	r0, #1
   11520:	ldr	r2, [sp, #12]
   11524:	ldr	r3, [sp, #20]
   11528:	bl	12074 <__snprintf_chk@plt+0x1464>
   1152c:	b	113d0 <__snprintf_chk@plt+0x7c0>
   11530:	add	r0, r4, #1
   11534:	mov	r2, r8
   11538:	movw	r1, #11360	; 0x2c60
   1153c:	movt	r1, #1
   11540:	bl	10b8c <__isoc99_sscanf@plt>
   11544:	cmp	r0, #1
   11548:	bne	11788 <__snprintf_chk@plt+0xb78>
   1154c:	ldr	r2, [sp, #72]	; 0x48
   11550:	mov	r3, r0
   11554:	ldr	ip, [sp, #76]	; 0x4c
   11558:	mov	r9, r6
   1155c:	mov	sl, r6
   11560:	add	r7, sp, #84	; 0x54
   11564:	lsr	r1, r2, #16
   11568:	uxth	r0, r2
   1156c:	orr	r1, r1, ip, lsl #16
   11570:	lsr	ip, ip, #16
   11574:	strb	r0, [sp, #85]	; 0x55
   11578:	lsr	r0, r0, #8
   1157c:	lsr	r2, r1, #16
   11580:	uxth	r1, r1
   11584:	orr	r2, r2, ip, lsl #16
   11588:	strb	r0, [sp, #84]	; 0x54
   1158c:	strb	r1, [sp, #87]	; 0x57
   11590:	lsr	r0, r1, #8
   11594:	uxth	r1, r2
   11598:	lsr	r2, r2, #16
   1159c:	strb	r1, [sp, #89]	; 0x59
   115a0:	strb	r2, [sp, #91]	; 0x5b
   115a4:	lsr	r1, r1, #8
   115a8:	lsr	r2, r2, #8
   115ac:	strb	r0, [sp, #86]	; 0x56
   115b0:	strb	r1, [sp, #88]	; 0x58
   115b4:	strb	r2, [sp, #90]	; 0x5a
   115b8:	b	10fc8 <__snprintf_chk@plt+0x3b8>
   115bc:	ldr	r2, [sp, #32]
   115c0:	cmp	r2, #9
   115c4:	beq	118d8 <__snprintf_chk@plt+0xcc8>
   115c8:	ldr	r3, [sp, #32]
   115cc:	cmp	r3, #11
   115d0:	beq	118b4 <__snprintf_chk@plt+0xca4>
   115d4:	ldr	r1, [sp, #32]
   115d8:	cmp	r1, #5
   115dc:	beq	11854 <__snprintf_chk@plt+0xc44>
   115e0:	movw	r6, #16732	; 0x415c
   115e4:	movt	r6, #2
   115e8:	movw	r0, #12356	; 0x3044
   115ec:	mov	r1, r4
   115f0:	ldr	r3, [r6]
   115f4:	movt	r0, #1
   115f8:	mov	r2, #27
   115fc:	bl	10b14 <fwrite@plt>
   11600:	cmp	fp, #0
   11604:	bne	11374 <__snprintf_chk@plt+0x764>
   11608:	mov	r1, r4
   1160c:	ldr	r3, [r6]
   11610:	movw	r0, #12384	; 0x3060
   11614:	mov	r2, #41	; 0x29
   11618:	movt	r0, #1
   1161c:	bl	10b14 <fwrite@plt>
   11620:	b	11374 <__snprintf_chk@plt+0x764>
   11624:	ldrb	r2, [sp, #90]	; 0x5a
   11628:	add	ip, sp, #80	; 0x50
   1162c:	ldr	r1, [sp, #12]
   11630:	ldrb	r3, [sp, #91]	; 0x5b
   11634:	cmp	r1, #0
   11638:	add	r1, r7, #2
   1163c:	add	r2, r3, r2, lsl #8
   11640:	mov	lr, r1
   11644:	asr	r3, r2, #31
   11648:	beq	1168c <__snprintf_chk@plt+0xa7c>
   1164c:	ldrb	r4, [lr, #2]
   11650:	lsl	r1, r3, #16
   11654:	ldrb	r3, [lr, #3]
   11658:	orr	r1, r1, r2, lsr #16
   1165c:	lsl	r0, r2, #16
   11660:	sub	lr, lr, #2
   11664:	add	r4, r3, r4, lsl #8
   11668:	adds	r2, r0, r4
   1166c:	adc	r3, r1, r4, asr #31
   11670:	cmp	lr, ip
   11674:	bne	1164c <__snprintf_chk@plt+0xa3c>
   11678:	movw	r1, #11604	; 0x2d54
   1167c:	mov	r0, #1
   11680:	movt	r1, #1
   11684:	bl	10bbc <__printf_chk@plt>
   11688:	b	11040 <__snprintf_chk@plt+0x430>
   1168c:	ldrb	r4, [lr, #2]
   11690:	lsl	r1, r3, #16
   11694:	ldrb	r3, [lr, #3]
   11698:	orr	r1, r1, r2, lsr #16
   1169c:	lsl	r0, r2, #16
   116a0:	sub	lr, lr, #2
   116a4:	add	r4, r3, r4, lsl #8
   116a8:	adds	r2, r0, r4
   116ac:	adc	r3, r1, r4, asr #31
   116b0:	cmp	lr, ip
   116b4:	bne	1168c <__snprintf_chk@plt+0xa7c>
   116b8:	movw	r1, #11664	; 0x2d90
   116bc:	mov	r0, #1
   116c0:	movt	r1, #1
   116c4:	bl	10bbc <__printf_chk@plt>
   116c8:	b	11040 <__snprintf_chk@plt+0x430>
   116cc:	movw	r3, #16732	; 0x415c
   116d0:	movt	r3, #2
   116d4:	rsb	r0, r0, #0
   116d8:	ldr	r4, [r3]
   116dc:	bl	10be0 <safe_strerror@plt>
   116e0:	ldr	ip, [sp, #8]
   116e4:	movw	r2, #11936	; 0x2ea0
   116e8:	mov	r1, #1
   116ec:	movt	r2, #1
   116f0:	mov	r3, ip
   116f4:	str	r0, [sp]
   116f8:	mov	r0, r4
   116fc:	bl	10bc8 <__fprintf_chk@plt>
   11700:	mov	r0, #15
   11704:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   11708:	movw	r1, #16732	; 0x415c
   1170c:	movt	r1, #2
   11710:	mov	r3, sl
   11714:	movw	r2, #11956	; 0x2eb4
   11718:	ldr	r0, [r1]
   1171c:	movt	r2, #1
   11720:	mov	r1, #1
   11724:	bl	10bc8 <__fprintf_chk@plt>
   11728:	mov	r0, #99	; 0x63
   1172c:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   11730:	ldr	r3, [sp, #12]
   11734:	cmp	r3, #0
   11738:	beq	117cc <__snprintf_chk@plt+0xbbc>
   1173c:	add	r1, r7, #1
   11740:	mov	r2, #0
   11744:	mov	r3, #0
   11748:	ldrb	ip, [r1, #-1]
   1174c:	ldrb	r0, [r1], #2
   11750:	orr	r0, r0, ip, lsl #8
   11754:	lsl	r0, r0, sl
   11758:	add	sl, sl, #16
   1175c:	cmp	sl, #64	; 0x40
   11760:	orr	r2, r2, r0
   11764:	orr	r3, r3, r0, asr #31
   11768:	bne	11748 <__snprintf_chk@plt+0xb38>
   1176c:	movw	r1, #11776	; 0x2e00
   11770:	mov	r0, #1
   11774:	movt	r1, #1
   11778:	bl	10bbc <__printf_chk@plt>
   1177c:	b	11040 <__snprintf_chk@plt+0x430>
   11780:	ldr	r5, [sp, #28]
   11784:	b	11374 <__snprintf_chk@plt+0x764>
   11788:	movw	r3, #16732	; 0x415c
   1178c:	movt	r3, #2
   11790:	movw	r0, #11368	; 0x2c68
   11794:	mov	r1, #1
   11798:	ldr	r3, [r3]
   1179c:	movt	r0, #1
   117a0:	mov	r2, #56	; 0x38
   117a4:	bl	10b14 <fwrite@plt>
   117a8:	mov	r0, #1
   117ac:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   117b0:	add	r7, sp, #84	; 0x54
   117b4:	b	10fc4 <__snprintf_chk@plt+0x3b4>
   117b8:	movw	r0, #11916	; 0x2e8c
   117bc:	movt	r0, #1
   117c0:	bl	10b08 <perror@plt>
   117c4:	mov	r0, #15
   117c8:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   117cc:	ldr	r1, [sp, #12]
   117d0:	add	r0, r7, #1
   117d4:	mov	r2, #0
   117d8:	mov	r3, #0
   117dc:	ldrb	lr, [r0, #-1]
   117e0:	ldrb	ip, [r0], #2
   117e4:	orr	ip, ip, lr, lsl #8
   117e8:	lsl	ip, ip, r1
   117ec:	add	r1, r1, #16
   117f0:	cmp	r1, #64	; 0x40
   117f4:	orr	r2, r2, ip
   117f8:	orr	r3, r3, ip, asr #31
   117fc:	bne	117dc <__snprintf_chk@plt+0xbcc>
   11800:	movw	r1, #11828	; 0x2e34
   11804:	mov	r0, #1
   11808:	movt	r1, #1
   1180c:	bl	10bbc <__printf_chk@plt>
   11810:	b	11040 <__snprintf_chk@plt+0x430>
   11814:	movw	r3, #16732	; 0x415c
   11818:	movt	r3, #2
   1181c:	rsb	r0, r0, #0
   11820:	ldr	r4, [r3]
   11824:	bl	10be0 <safe_strerror@plt>
   11828:	movw	r2, #12428	; 0x308c
   1182c:	mov	r1, #1
   11830:	movt	r2, #1
   11834:	mov	r3, r0
   11838:	mov	r0, r4
   1183c:	bl	10bc8 <__fprintf_chk@plt>
   11840:	ldr	r3, [sp, #32]
   11844:	cmp	r3, #0
   11848:	bne	1138c <__snprintf_chk@plt+0x77c>
   1184c:	mov	r0, #15
   11850:	b	10dc4 <__snprintf_chk@plt+0x1b4>
   11854:	movw	r3, #16732	; 0x415c
   11858:	movt	r3, #2
   1185c:	mov	r1, r4
   11860:	movw	r0, #12312	; 0x3018
   11864:	ldr	r3, [r3]
   11868:	mov	r2, #41	; 0x29
   1186c:	movt	r0, #1
   11870:	bl	10b14 <fwrite@plt>
   11874:	b	11374 <__snprintf_chk@plt+0x764>
   11878:	movw	r3, #16732	; 0x415c
   1187c:	movt	r3, #2
   11880:	movw	r0, #11892	; 0x2e74
   11884:	mov	r1, #1
   11888:	ldr	r3, [r3]
   1188c:	mov	r2, #21
   11890:	movt	r0, #1
   11894:	bl	10b14 <fwrite@plt>
   11898:	b	110b4 <__snprintf_chk@plt+0x4a4>
   1189c:	bl	10afc <__stack_chk_fail@plt>
   118a0:	add	r1, r6, #8
   118a4:	mov	r2, r3
   118a8:	mov	r0, r7
   118ac:	bl	10acc <dStrHex@plt>
   118b0:	b	11374 <__snprintf_chk@plt+0x764>
   118b4:	movw	r3, #16732	; 0x415c
   118b8:	movt	r3, #2
   118bc:	mov	r1, r4
   118c0:	movw	r0, #12280	; 0x2ff8
   118c4:	ldr	r3, [r3]
   118c8:	mov	r2, #29
   118cc:	movt	r0, #1
   118d0:	bl	10b14 <fwrite@plt>
   118d4:	b	11374 <__snprintf_chk@plt+0x764>
   118d8:	movw	r3, #16732	; 0x415c
   118dc:	movt	r3, #2
   118e0:	mov	r1, r4
   118e4:	movw	r0, #12216	; 0x2fb8
   118e8:	ldr	r3, [r3]
   118ec:	mov	r2, #63	; 0x3f
   118f0:	movt	r0, #1
   118f4:	bl	10b14 <fwrite@plt>
   118f8:	b	11374 <__snprintf_chk@plt+0x764>
   118fc:	movw	r1, #12128	; 0x2f60
   11900:	ldr	r2, [sp, #68]	; 0x44
   11904:	movt	r1, #1
   11908:	mov	r0, #1
   1190c:	bl	10bbc <__printf_chk@plt>
   11910:	b	112c4 <__snprintf_chk@plt+0x6b4>
   11914:	mov	fp, #0
   11918:	mov	lr, #0
   1191c:	pop	{r1}		; (ldr r1, [sp], #4)
   11920:	mov	r2, sp
   11924:	push	{r2}		; (str r2, [sp, #-4]!)
   11928:	push	{r0}		; (str r0, [sp, #-4]!)
   1192c:	ldr	ip, [pc, #16]	; 11944 <__snprintf_chk@plt+0xd34>
   11930:	push	{ip}		; (str ip, [sp, #-4]!)
   11934:	ldr	r0, [pc, #12]	; 11948 <__snprintf_chk@plt+0xd38>
   11938:	ldr	r3, [pc, #12]	; 1194c <__snprintf_chk@plt+0xd3c>
   1193c:	bl	10b38 <__libc_start_main@plt>
   11940:	bl	10c04 <abort@plt>
   11944:	andeq	r2, r1, r4, lsl #3
   11948:	andeq	r0, r1, ip, lsl ip
   1194c:	andeq	r2, r1, r0, lsr #2
   11950:	ldr	r3, [pc, #20]	; 1196c <__snprintf_chk@plt+0xd5c>
   11954:	ldr	r2, [pc, #20]	; 11970 <__snprintf_chk@plt+0xd60>
   11958:	add	r3, pc, r3
   1195c:	ldr	r2, [r3, r2]
   11960:	cmp	r2, #0
   11964:	bxeq	lr
   11968:	b	10b50 <__gmon_start__@plt>
   1196c:	andeq	r2, r1, r0, lsr #13
   11970:	andeq	r0, r0, r4, lsl #1
   11974:	push	{r3, lr}
   11978:	movw	r0, #16716	; 0x414c
   1197c:	ldr	r3, [pc, #36]	; 119a8 <__snprintf_chk@plt+0xd98>
   11980:	movt	r0, #2
   11984:	rsb	r3, r0, r3
   11988:	cmp	r3, #6
   1198c:	popls	{r3, pc}
   11990:	movw	r3, #0
   11994:	movt	r3, #0
   11998:	cmp	r3, #0
   1199c:	popeq	{r3, pc}
   119a0:	blx	r3
   119a4:	pop	{r3, pc}
   119a8:	andeq	r4, r2, pc, asr #2
   119ac:	push	{r3, lr}
   119b0:	movw	r0, #16716	; 0x414c
   119b4:	movw	r3, #16716	; 0x414c
   119b8:	movt	r0, #2
   119bc:	movt	r3, #2
   119c0:	rsb	r3, r0, r3
   119c4:	asr	r3, r3, #2
   119c8:	add	r3, r3, r3, lsr #31
   119cc:	asrs	r1, r3, #1
   119d0:	popeq	{r3, pc}
   119d4:	movw	r2, #0
   119d8:	movt	r2, #0
   119dc:	cmp	r2, #0
   119e0:	popeq	{r3, pc}
   119e4:	blx	r2
   119e8:	pop	{r3, pc}
   119ec:	push	{r4, lr}
   119f0:	movw	r4, #16740	; 0x4164
   119f4:	movt	r4, #2
   119f8:	ldrb	r3, [r4]
   119fc:	cmp	r3, #0
   11a00:	popne	{r4, pc}
   11a04:	bl	11974 <__snprintf_chk@plt+0xd64>
   11a08:	mov	r3, #1
   11a0c:	strb	r3, [r4]
   11a10:	pop	{r4, pc}
   11a14:	movw	r0, #16124	; 0x3efc
   11a18:	movt	r0, #2
   11a1c:	push	{r3, lr}
   11a20:	ldr	r3, [r0]
   11a24:	cmp	r3, #0
   11a28:	beq	11a40 <__snprintf_chk@plt+0xe30>
   11a2c:	movw	r3, #0
   11a30:	movt	r3, #0
   11a34:	cmp	r3, #0
   11a38:	beq	11a40 <__snprintf_chk@plt+0xe30>
   11a3c:	blx	r3
   11a40:	pop	{r3, lr}
   11a44:	b	119ac <__snprintf_chk@plt+0xd9c>
   11a48:	push	{r4, lr}
   11a4c:	movw	r4, #16732	; 0x415c
   11a50:	movt	r4, #2
   11a54:	mov	r1, #1
   11a58:	mov	r2, #170	; 0xaa
   11a5c:	movw	r0, #8608	; 0x21a0
   11a60:	ldr	r3, [r4]
   11a64:	movt	r0, #1
   11a68:	bl	10b14 <fwrite@plt>
   11a6c:	ldr	r3, [r4]
   11a70:	mov	r1, #1
   11a74:	movw	r2, #291	; 0x123
   11a78:	movw	r0, #8780	; 0x224c
   11a7c:	movt	r0, #1
   11a80:	bl	10b14 <fwrite@plt>
   11a84:	ldr	r3, [r4]
   11a88:	mov	r1, #1
   11a8c:	mov	r2, #71	; 0x47
   11a90:	movw	r0, #9072	; 0x2370
   11a94:	movt	r0, #1
   11a98:	bl	10b14 <fwrite@plt>
   11a9c:	ldr	r0, [r4]
   11aa0:	movw	r2, #9144	; 0x23b8
   11aa4:	mov	r1, #1
   11aa8:	movt	r2, #1
   11aac:	mov	r3, #8192	; 0x2000
   11ab0:	pop	{r4, lr}
   11ab4:	b	10bc8 <__fprintf_chk@plt>
   11ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11abc:	movw	r5, #16720	; 0x4150
   11ac0:	movt	r5, #2
   11ac4:	sub	sp, sp, #436	; 0x1b4
   11ac8:	mov	fp, r0
   11acc:	mov	r4, r1
   11ad0:	ldr	ip, [r5]
   11ad4:	mov	r1, #0
   11ad8:	str	r2, [sp, #20]
   11adc:	add	r0, sp, #44	; 0x2c
   11ae0:	mov	r2, #128	; 0x80
   11ae4:	str	r3, [sp, #24]
   11ae8:	str	ip, [sp, #428]	; 0x1ac
   11aec:	bl	10b98 <memset@plt>
   11af0:	add	r0, sp, #44	; 0x2c
   11af4:	mov	r1, fp
   11af8:	mov	r2, #125	; 0x7d
   11afc:	add	r3, r4, #8
   11b00:	str	r3, [sp, #28]
   11b04:	bl	10bb0 <strncpy@plt>
   11b08:	movw	r8, #10016	; 0x2720
   11b0c:	movw	sl, #9984	; 0x2700
   11b10:	movw	r9, #9976	; 0x26f8
   11b14:	movt	r8, #1
   11b18:	movt	sl, #1
   11b1c:	movt	r9, #1
   11b20:	mov	r7, #0
   11b24:	ldrb	ip, [r4]
   11b28:	lsr	r6, ip, #6
   11b2c:	cmp	r6, #3
   11b30:	ldrls	pc, [pc, r6, lsl #2]
   11b34:	b	11d84 <__snprintf_chk@plt+0x1174>
   11b38:	andeq	r1, r1, r8, lsl #25
   11b3c:	andeq	r1, r1, ip, lsr ip
   11b40:	andeq	r1, r1, r0, asr #23
   11b44:	andeq	r1, r1, r8, asr #22
   11b48:	ubfx	r3, ip, #4, #2
   11b4c:	and	ip, ip, #15
   11b50:	cmp	r3, #0
   11b54:	cmpeq	ip, #1
   11b58:	ldrb	lr, [r4, #1]
   11b5c:	beq	11dcc <__snprintf_chk@plt+0x11bc>
   11b60:	subs	r7, r3, #1
   11b64:	rsbs	r1, r7, #0
   11b68:	adcs	r1, r1, r7
   11b6c:	subs	r8, ip, #2
   11b70:	rsbs	r2, r8, #0
   11b74:	adcs	r2, r2, r8
   11b78:	tst	r1, r2
   11b7c:	beq	11e0c <__snprintf_chk@plt+0x11fc>
   11b80:	ldrb	r3, [r4, #2]
   11b84:	ldr	r1, [sp, #20]
   11b88:	ldrb	r2, [r4, #3]
   11b8c:	cmp	r1, #0
   11b90:	lsl	r3, r3, #8
   11b94:	add	r3, r3, lr, lsl #16
   11b98:	add	r3, r3, r2
   11b9c:	movwne	r1, #10476	; 0x28ec
   11ba0:	movweq	r1, #10524	; 0x291c
   11ba4:	add	r2, sp, #44	; 0x2c
   11ba8:	movne	r0, #1
   11bac:	movtne	r1, #1
   11bb0:	moveq	r0, #1
   11bb4:	movteq	r1, #1
   11bb8:	bl	10bbc <__printf_chk@plt>
   11bbc:	b	11c70 <__snprintf_chk@plt+0x1060>
   11bc0:	ldr	r2, [sp, #20]
   11bc4:	and	ip, ip, #63	; 0x3f
   11bc8:	ldrb	r3, [r4, #1]
   11bcc:	cmp	r2, #0
   11bd0:	str	ip, [sp]
   11bd4:	and	r2, r3, #31
   11bd8:	str	r2, [sp, #4]
   11bdc:	movwne	r1, #10204	; 0x27dc
   11be0:	movweq	r1, #10272	; 0x2820
   11be4:	lsr	r3, r3, #5
   11be8:	movne	r0, #1
   11bec:	movtne	r1, #1
   11bf0:	moveq	r0, #1
   11bf4:	movteq	r1, #1
   11bf8:	add	r2, sp, #44	; 0x2c
   11bfc:	bl	10bbc <__printf_chk@plt>
   11c00:	cmp	r7, #2
   11c04:	cmple	r6, #2
   11c08:	bne	11c70 <__snprintf_chk@plt+0x1060>
   11c0c:	ldrb	r3, [r4, #2]
   11c10:	cmp	r3, #0
   11c14:	bne	11c24 <__snprintf_chk@plt+0x1014>
   11c18:	ldrb	r3, [r4, #3]
   11c1c:	cmp	r3, #0
   11c20:	beq	11c70 <__snprintf_chk@plt+0x1060>
   11c24:	add	r2, sp, #44	; 0x2c
   11c28:	movw	r1, #11072	; 0x2b40
   11c2c:	mov	r0, #1
   11c30:	movt	r1, #1
   11c34:	bl	10bbc <__printf_chk@plt>
   11c38:	b	11c70 <__snprintf_chk@plt+0x1060>
   11c3c:	ldr	r1, [sp, #20]
   11c40:	and	ip, ip, #63	; 0x3f
   11c44:	ldrb	r3, [r4, #1]
   11c48:	add	r2, sp, #44	; 0x2c
   11c4c:	cmp	r1, #0
   11c50:	add	r3, r3, ip, lsl #8
   11c54:	movwne	r1, #10128	; 0x2790
   11c58:	movweq	r1, #10168	; 0x27b8
   11c5c:	movne	r0, #1
   11c60:	movtne	r1, #1
   11c64:	moveq	r0, #1
   11c68:	movteq	r1, #1
   11c6c:	bl	10bbc <__printf_chk@plt>
   11c70:	ldr	r2, [sp, #428]	; 0x1ac
   11c74:	ldr	r3, [r5]
   11c78:	cmp	r2, r3
   11c7c:	bne	12064 <__snprintf_chk@plt+0x1454>
   11c80:	add	sp, sp, #436	; 0x1b4
   11c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c88:	add	r6, sp, #172	; 0xac
   11c8c:	mov	r1, #256	; 0x100
   11c90:	mov	r3, r1
   11c94:	add	r2, sp, #44	; 0x2c
   11c98:	str	r8, [sp]
   11c9c:	mov	r0, r6
   11ca0:	str	r2, [sp, #4]
   11ca4:	mov	r2, #1
   11ca8:	str	ip, [sp, #16]
   11cac:	bl	10c10 <__snprintf_chk@plt>
   11cb0:	ldr	ip, [sp, #16]
   11cb4:	ldr	r3, [sp, #24]
   11cb8:	orrs	r3, ip, r3
   11cbc:	beq	11d9c <__snprintf_chk@plt+0x118c>
   11cc0:	cmp	ip, #0
   11cc4:	ldr	r2, [sp, #20]
   11cc8:	moveq	r3, sl
   11ccc:	movne	r3, r9
   11cd0:	str	r3, [sp]
   11cd4:	cmp	r2, #0
   11cd8:	ldrb	lr, [r4, #1]
   11cdc:	mov	r3, ip
   11ce0:	movwne	r1, #10080	; 0x2760
   11ce4:	movweq	r1, #10108	; 0x277c
   11ce8:	movne	r0, #1
   11cec:	movtne	r1, #1
   11cf0:	moveq	r0, #1
   11cf4:	movteq	r1, #1
   11cf8:	mov	r2, r6
   11cfc:	str	lr, [sp, #4]
   11d00:	str	ip, [sp, #16]
   11d04:	bl	10bbc <__printf_chk@plt>
   11d08:	ldr	ip, [sp, #16]
   11d0c:	cmp	ip, #0
   11d10:	beq	11c70 <__snprintf_chk@plt+0x1060>
   11d14:	ldr	r2, [sp, #28]
   11d18:	add	r4, r4, #2
   11d1c:	add	r7, r7, #1
   11d20:	cmp	r4, r2
   11d24:	beq	11c70 <__snprintf_chk@plt+0x1060>
   11d28:	add	r0, sp, #44	; 0x2c
   11d2c:	mov	r1, fp
   11d30:	mov	r2, #125	; 0x7d
   11d34:	bl	10bb0 <strncpy@plt>
   11d38:	cmp	r7, #1
   11d3c:	beq	12068 <__snprintf_chk@plt+0x1458>
   11d40:	movw	r2, #9968	; 0x26f0
   11d44:	cmp	r7, #2
   11d48:	movt	r2, #1
   11d4c:	movw	r3, #9960	; 0x26e8
   11d50:	movt	r3, #1
   11d54:	moveq	r3, r2
   11d58:	add	r2, sp, #44	; 0x2c
   11d5c:	movw	r1, #9988	; 0x2704
   11d60:	mov	r0, #1
   11d64:	movt	r1, #1
   11d68:	bl	10bbc <__printf_chk@plt>
   11d6c:	add	r0, sp, #44	; 0x2c
   11d70:	movw	r1, #12212	; 0x2fb4
   11d74:	mov	r2, #128	; 0x80
   11d78:	movt	r1, #1
   11d7c:	bl	10b80 <__strcat_chk@plt>
   11d80:	b	11b24 <__snprintf_chk@plt+0xf14>
   11d84:	movw	r1, #11040	; 0x2b20
   11d88:	add	r2, sp, #44	; 0x2c
   11d8c:	movt	r1, #1
   11d90:	mov	r0, #1
   11d94:	bl	10bbc <__printf_chk@plt>
   11d98:	b	11c00 <__snprintf_chk@plt+0xff0>
   11d9c:	ldr	r1, [sp, #20]
   11da0:	mov	r2, r6
   11da4:	ldrb	r3, [r4, #1]
   11da8:	cmp	r1, #0
   11dac:	movwne	r1, #10052	; 0x2744
   11db0:	movweq	r1, #10068	; 0x2754
   11db4:	movne	r0, #1
   11db8:	movtne	r1, #1
   11dbc:	moveq	r0, #1
   11dc0:	movteq	r1, #1
   11dc4:	bl	10bbc <__printf_chk@plt>
   11dc8:	b	11c70 <__snprintf_chk@plt+0x1060>
   11dcc:	movw	ip, #10332	; 0x285c
   11dd0:	movt	ip, #1
   11dd4:	add	r6, sp, #172	; 0xac
   11dd8:	sub	r7, lr, #1
   11ddc:	ldm	ip!, {r0, r1, r2, r3}
   11de0:	mov	r4, r6
   11de4:	stmia	r4!, {r0, r1, r2, r3}
   11de8:	ldm	ip, {r0, r1}
   11dec:	stm	r4, {r0, r1}
   11df0:	cmp	r7, #3
   11df4:	ldrls	pc, [pc, r7, lsl #2]
   11df8:	b	11fcc <__snprintf_chk@plt+0x13bc>
   11dfc:	andeq	r1, r1, r8, ror #30
   11e00:	andeq	r1, r1, ip, asr #30
   11e04:	andeq	r1, r1, r0, lsr pc
   11e08:	andeq	r1, r1, r4, lsl pc
   11e0c:	subs	r6, r3, #2
   11e10:	rsbs	r0, r6, #0
   11e14:	adcs	r0, r0, r6
   11e18:	tst	r0, r2
   11e1c:	beq	11e78 <__snprintf_chk@plt+0x1268>
   11e20:	mov	ip, #1
   11e24:	cmp	ip, #1
   11e28:	mov	r2, #0
   11e2c:	mov	r3, #0
   11e30:	beq	11e64 <__snprintf_chk@plt+0x1254>
   11e34:	lsl	r1, r3, #8
   11e38:	ldrb	r6, [r4, ip]
   11e3c:	cmp	ip, #5
   11e40:	orr	r1, r1, r2, lsr #24
   11e44:	lsl	r0, r2, #8
   11e48:	mov	r7, #0
   11e4c:	orr	r2, r6, r0
   11e50:	orr	r3, r7, r1
   11e54:	beq	11f84 <__snprintf_chk@plt+0x1374>
   11e58:	add	ip, ip, #1
   11e5c:	cmp	ip, #1
   11e60:	bne	11e34 <__snprintf_chk@plt+0x1224>
   11e64:	ldrb	r6, [r4, #1]
   11e68:	mov	r7, #0
   11e6c:	orr	r3, r3, r7
   11e70:	orr	r2, r2, r6
   11e74:	b	11e58 <__snprintf_chk@plt+0x1248>
   11e78:	cmp	r3, #3
   11e7c:	cmpeq	ip, #15
   11e80:	movne	r2, #0
   11e84:	moveq	r2, #1
   11e88:	beq	1204c <__snprintf_chk@plt+0x143c>
   11e8c:	cmp	r3, #1
   11e90:	ble	12000 <__snprintf_chk@plt+0x13f0>
   11e94:	cmp	r0, #0
   11e98:	mov	r1, #0
   11e9c:	mov	r0, #0
   11ea0:	movne	lr, #5
   11ea4:	moveq	lr, #7
   11ea8:	b	11eb8 <__snprintf_chk@plt+0x12a8>
   11eac:	lsl	r1, r7, #8
   11eb0:	lsl	r0, r6, #8
   11eb4:	orr	r1, r1, r6, lsr #24
   11eb8:	add	r2, r2, #1
   11ebc:	ldrb	r6, [r4, #1]!
   11ec0:	cmp	r2, lr
   11ec4:	mov	r7, #0
   11ec8:	orr	r6, r6, r0
   11ecc:	orr	r7, r7, r1
   11ed0:	blt	11eac <__snprintf_chk@plt+0x129c>
   11ed4:	ldr	r1, [sp, #20]
   11ed8:	add	r2, sp, #44	; 0x2c
   11edc:	str	ip, [sp]
   11ee0:	cmp	r1, #0
   11ee4:	beq	11fb4 <__snprintf_chk@plt+0x13a4>
   11ee8:	movw	r1, #10876	; 0x2a7c
   11eec:	mov	r0, #1
   11ef0:	movt	r1, #1
   11ef4:	bl	10bbc <__printf_chk@plt>
   11ef8:	mov	r2, r6
   11efc:	mov	r3, r7
   11f00:	movw	r1, #10944	; 0x2ac0
   11f04:	mov	r0, #1
   11f08:	movt	r1, #1
   11f0c:	bl	10bbc <__printf_chk@plt>
   11f10:	b	11c70 <__snprintf_chk@plt+0x1060>
   11f14:	add	r2, sp, #44	; 0x2c
   11f18:	mov	r3, r6
   11f1c:	movw	r1, #10424	; 0x28b8
   11f20:	mov	r0, #1
   11f24:	movt	r1, #1
   11f28:	bl	10bbc <__printf_chk@plt>
   11f2c:	b	11c70 <__snprintf_chk@plt+0x1060>
   11f30:	add	r2, sp, #44	; 0x2c
   11f34:	mov	r3, r6
   11f38:	movw	r1, #10400	; 0x28a0
   11f3c:	mov	r0, #1
   11f40:	movt	r1, #1
   11f44:	bl	10bbc <__printf_chk@plt>
   11f48:	b	11c70 <__snprintf_chk@plt+0x1060>
   11f4c:	add	r2, sp, #44	; 0x2c
   11f50:	mov	r3, r6
   11f54:	movw	r1, #10376	; 0x2888
   11f58:	mov	r0, #1
   11f5c:	movt	r1, #1
   11f60:	bl	10bbc <__printf_chk@plt>
   11f64:	b	11c70 <__snprintf_chk@plt+0x1060>
   11f68:	add	r2, sp, #44	; 0x2c
   11f6c:	mov	r3, r6
   11f70:	movw	r1, #10356	; 0x2874
   11f74:	mov	r0, #1
   11f78:	movt	r1, #1
   11f7c:	bl	10bbc <__printf_chk@plt>
   11f80:	b	11c70 <__snprintf_chk@plt+0x1060>
   11f84:	ldr	r1, [sp, #20]
   11f88:	strd	r2, [sp]
   11f8c:	add	r2, sp, #44	; 0x2c
   11f90:	cmp	r1, #0
   11f94:	movwne	r1, #10568	; 0x2948
   11f98:	movweq	r1, #10624	; 0x2980
   11f9c:	movne	r0, #1
   11fa0:	movtne	r1, #1
   11fa4:	moveq	r0, #1
   11fa8:	movteq	r1, #1
   11fac:	bl	10bbc <__printf_chk@plt>
   11fb0:	b	11c70 <__snprintf_chk@plt+0x1060>
   11fb4:	strd	r6, [sp, #8]
   11fb8:	movw	r1, #10964	; 0x2ad4
   11fbc:	mov	r0, #1
   11fc0:	movt	r1, #1
   11fc4:	bl	10bbc <__printf_chk@plt>
   11fc8:	b	11c70 <__snprintf_chk@plt+0x1060>
   11fcc:	ldr	r3, [sp, #20]
   11fd0:	add	r2, sp, #44	; 0x2c
   11fd4:	str	lr, [sp]
   11fd8:	cmp	r3, #0
   11fdc:	mov	r3, r6
   11fe0:	movwne	r1, #10448	; 0x28d0
   11fe4:	movweq	r1, #10464	; 0x28e0
   11fe8:	movne	r0, #1
   11fec:	movtne	r1, #1
   11ff0:	moveq	r0, #1
   11ff4:	movteq	r1, #1
   11ff8:	bl	10bbc <__printf_chk@plt>
   11ffc:	b	11c70 <__snprintf_chk@plt+0x1060>
   12000:	cmp	r1, #0
   12004:	ldrbne	r1, [r4, #2]
   12008:	ldrbne	r2, [r4, #3]
   1200c:	str	ip, [sp]
   12010:	lslne	r1, r1, #8
   12014:	addne	lr, r1, lr, lsl #16
   12018:	addne	lr, lr, r2
   1201c:	ldr	r2, [sp, #20]
   12020:	str	lr, [sp, #4]
   12024:	cmp	r2, #0
   12028:	add	r2, sp, #44	; 0x2c
   1202c:	movwne	r1, #10720	; 0x29e0
   12030:	movweq	r1, #10800	; 0x2a30
   12034:	movne	r0, #1
   12038:	movtne	r1, #1
   1203c:	moveq	r0, #1
   12040:	movteq	r1, #1
   12044:	bl	10bbc <__printf_chk@plt>
   12048:	b	11c70 <__snprintf_chk@plt+0x1060>
   1204c:	add	r2, sp, #44	; 0x2c
   12050:	movw	r1, #10676	; 0x29b4
   12054:	mov	r0, #1
   12058:	movt	r1, #1
   1205c:	bl	10bbc <__printf_chk@plt>
   12060:	b	11c70 <__snprintf_chk@plt+0x1060>
   12064:	bl	10afc <__stack_chk_fail@plt>
   12068:	movw	r3, #9952	; 0x26e0
   1206c:	movt	r3, #1
   12070:	b	11d58 <__snprintf_chk@plt+0x1148>
   12074:	push	{r4, r5, r6, r7, r8, lr}
   12078:	movw	lr, #8600	; 0x2198
   1207c:	movt	lr, #1
   12080:	movw	r4, #16720	; 0x4150
   12084:	movt	r4, #2
   12088:	sub	sp, sp, #16
   1208c:	mov	r5, r1
   12090:	mov	r6, r0
   12094:	ldr	r1, [lr, #4]
   12098:	add	ip, sp, #4
   1209c:	ldr	r0, [lr]
   120a0:	mov	r7, r2
   120a4:	ldr	lr, [r4]
   120a8:	mov	r2, #8
   120ac:	mov	r8, r3
   120b0:	stmia	ip!, {r0, r1}
   120b4:	mov	r0, r5
   120b8:	add	r1, sp, #4
   120bc:	str	lr, [sp, #12]
   120c0:	bl	10af0 <memcmp@plt>
   120c4:	ldr	r2, [sp, #12]
   120c8:	ldr	r3, [r4]
   120cc:	cmp	r0, #0
   120d0:	beq	120f8 <__snprintf_chk@plt+0x14e8>
   120d4:	cmp	r2, r3
   120d8:	bne	1211c <__snprintf_chk@plt+0x150c>
   120dc:	mov	r0, r6
   120e0:	mov	r1, r5
   120e4:	mov	r2, r7
   120e8:	mov	r3, r8
   120ec:	add	sp, sp, #16
   120f0:	pop	{r4, r5, r6, r7, r8, lr}
   120f4:	b	11ab8 <__snprintf_chk@plt+0xea8>
   120f8:	cmp	r2, r3
   120fc:	bne	1211c <__snprintf_chk@plt+0x150c>
   12100:	mov	r2, r6
   12104:	movw	r1, #11120	; 0x2b70
   12108:	mov	r0, #1
   1210c:	movt	r1, #1
   12110:	add	sp, sp, #16
   12114:	pop	{r4, r5, r6, r7, r8, lr}
   12118:	b	10bbc <__printf_chk@plt>
   1211c:	bl	10afc <__stack_chk_fail@plt>
   12120:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12124:	mov	r7, r0
   12128:	ldr	r6, [pc, #76]	; 1217c <__snprintf_chk@plt+0x156c>
   1212c:	mov	r8, r1
   12130:	ldr	r5, [pc, #72]	; 12180 <__snprintf_chk@plt+0x1570>
   12134:	mov	r9, r2
   12138:	add	r6, pc, r6
   1213c:	bl	10a94 <_init@@Base>
   12140:	add	r5, pc, r5
   12144:	rsb	r6, r5, r6
   12148:	asrs	r6, r6, #2
   1214c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   12150:	sub	r5, r5, #4
   12154:	mov	r4, #0
   12158:	add	r4, r4, #1
   1215c:	ldr	r3, [r5, #4]!
   12160:	mov	r0, r7
   12164:	mov	r1, r8
   12168:	mov	r2, r9
   1216c:	blx	r3
   12170:	cmp	r4, r6
   12174:	bne	12158 <__snprintf_chk@plt+0x1548>
   12178:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1217c:			; <UNDEFINED> instruction: 0x00011db8
   12180:	andeq	r1, r1, ip, lsr #27
   12184:	bx	lr

Disassembly of section .fini:

00012188 <_fini@@Base>:
   12188:	push	{r3, lr}
   1218c:	pop	{r3, pc}
